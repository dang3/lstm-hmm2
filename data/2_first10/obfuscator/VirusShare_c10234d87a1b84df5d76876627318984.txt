jb
mov
mov
cmp
les
mov
jo
jnp
lock
jo
cmc
mov
cmp
push
dec
mov
call
xchg
pop
add
push
out
sbb
test
stos
xlat
mov
leave
mov
pop
imul
mov
mov
js
stos
dec
push
pop
lret
cmp
xorl
gs
shrl
outsb
hlt
incl
cmp
sub
aam
xchg
sub
int
lds
imul
mov
ficomps
shrl
cmp
push
jb
dec
pop
and
dec
xchg
cmp
xor
or
cmpsl
add
inc
jle
ja
add
and
arpl
sub
add
roll
mov
sbb
mov
pop
int
pop
and
or
movsbw
rcl
and
xor
add
add
mov
mov
mov
call
pushl
pusha
pushl
lea
jne
sub
shrd
test
movsbw
xor
shld
movsbw
bsf
mov
sbb
mov
adc
add
clc
call
ss
xchg
pop
daa
pop
popa
stos
mov
shlb
mov
out
aad
dec
jmp
movl
fadds
and
cmp
dec
or
scas
push
mov
mov
inc
hlt
adc
mov
cmc
scas
in
adcl
add
mov
pop
inc
jno
mov
or
adc
out
dec
pop
mov
jae
sub
mov
jl
stos
aam
push
push
mov
sahf
xor
pop
xlat
cmp
or
inc
inc
or
and
inc
sbb
lods
sbb
je
loopne
fcmove
push
mov
clc
leave
das
rcl
xchg
xor
jge
push
or
dec
cwtl
rorl
push
xor
xor
incl
insl
mov
or
aam
out
cmp
lea
aas
jae
sti
dec
push
les
jnp
sbb
inc
xchg
xchg
mov
inc
pop
xchg
dec
and
pushf
les
mov
loop
mov
ret
dec
dec
clc
sbb
dec
lahf
dec
add
fldenv
jnp
pop
pop
xor
jns
jecxz
jp
popf
leave
mov
add
adc
mov
sbb
stos
inc
das
lds
cli
pop
iret
xchg
and
addr16
lcall
ss
je
hlt
fldcw
das
or
lock
pop
outsl
jb
mov
add
mov
push
aad
inc
push
loopne
outsl
insb
gs
cs
insb
add
ret
adc
xchg
push
outsl
xchg
orl
insl
add
fcompl
inc
lods
push
and
inc
sbb
popa
cltd
mov
cmp
jb
fdiv
push
sub
dec
fsubr
test
pop
jno
xchg
adc
jg
fildl
jmp
mov
test
xor
jns
pushf
test
iret
or
popa
fwait
mov
inc
aam
adc
cmp
outsl
mov
cmc
or
jne
lods
ds
sub
cwtl
insl
xchg
leave
mov
pushf
fsubs
mov
xor
sbb
into
cmpsl
jno
fdivrs
test
jg
orl
lea
outsb
push
mull
add
mov
test
or
lret
ds
es
shld
ljmp
rorb
mov
sahf
outsb
insl
xchg
dec
xchg
test
in
out
add
rorl
dec
xchg
cmp
sub
fwait
mov
das
mov
cltd
rcll
insl
xor
sub
xchg
ljmp
hlt
test
popa
gs
push
cld
cmp
int3
sar
and
mov
clc
pop
incl
movl
dec
shr
mov
push
stc
movb
add
pushl
bt
cmp
mov
stc
pushf
test
call
dec
xchg
cmp
lock
mov
push
mov
xchg
dec
or
or
jns
fdiv
sub
mov
sbb
mov
sbb
mov
pop
fdivrp
out
shl
in
test
sub
dec
leave
pop
xlat
enter
or
mov
jmp
cmpsb
pop
mov
cli
push
push
mov
add
sbb
push
mov
inc
sbbb
rorb
insl
mov
sub
dec
inc
jecxz
jmp
clc
stc
pushf
sub
call
in
jnp
test
push
cli
sub
or
out
jno
inc
int
jg
push
mov
and
fwait
add
sbb
jmp
and
dec
lcall
stos
push
lds
inc
mov
stos
xorb
jl
adc
jmp
jne
jno
test
push
in
sbb
bound
and
mov
scas
adc
cmpsl
movsb
adc
xchg
ret
mov
cmp
jmp
adcl
xorl
and
popf
int3
in
xor
jecxz
inc
pand
sub
and
pop
pushf
push
aad
int3
jnp
arpl
adcl
cmp
push
push
jno
imul
mov
jl
xchg
into
ss
ss
jle
mov
js
and
into
in
push
das
pop
mov
adc
cmp
adc
sti
bsf
sub
push
mov
lea
rcl
ror
push
rol
mov
push
movsbw
bts
mov
test
push
test
jmp
and
xorl
call
jmp
test
out
jmp
imul
push
aad
jbe
mov
sbb
popa
and
push
inc
aam
xchg
bound
sbb
add
lods
xor
daa
push
mov
ljmp
mov
outsl
adc
addl
es
std
pop
pushf
fisttpl
aam
ret
and
bound
add
and
push
lea
jne
call
jmp
movb
not
jmp
stc
cmp
call
jecxz
movl
loopne
and
cld
adc
push
icebp
mov
sbb
or
mov
loope
mov
aam
and
insb
and
inc
adc
out
fildl
in
push
bound
cmpsl
fiadds
sbb
jle
stos
shlb
pop
xor
loopne
loope
ss
jae
jp
leave
jmp
pop
cmpb
aad
and
test
add
add
ret
test
jmp
add
test
call
mov
fwait
cmp
push
shl
jmp
mov
jnp
jne
pusha
dec
sbb
push
add
pop
in
inc
lret
adc
jne
jmp
outsl
mov
jo
mov
xor
mov
push
cmc
mov
mov
test
pop
loop
shl
xor
xchg
sub
fstpt
pusha
push
cwtl
ds
popa
mov
mov
jbe
mov
mov
lods
fucomi
mov
shlb
jl
add
pusha
dec
loopne
mov
mov
jns
neg
imul
popf
scas
fs
imul
push
cli
pop
pushf
and
push
jp
shlb
ds
adc
push
bound
out
add
jecxz
push
js
sbb
push
add
sub
sub
out
lret
push
xchg
push
popf
icebp
cltd
loop
in
rorb
push
mov
pusha
loope
cmp
mov
mov
je
and
scas
pusha
das
mov
hlt
fldl
clc
sbb
aaa
mov
in
sbb
xchg
push
popa
icebp
mov
stos
mov
fistps
cmp
subl
jl
insl
mov
pop
jb
outsl
mov
test
out
mov
inc
pop
mov
mov
pop
out
scas
mov
mov
inc
and
inc
ljmp
adc
or
lods
mov
scas
in
jecxz
je
mov
jo
frstor
push
jl
fnstcw
pop
out
cmp
repnz
jbe
roll
sbb
lock
cwtl
inc
mov
sbbb
icebp
test
add
xorl
push
arpl
insb
movsl
in
mov
push
add
push
arpl
lret
fstpt
lahf
lock
sahf
popa
mov
fnstsw
inc
push
mov
pop
xor
in
and
sub
and
and
fisubrs
inc
les
arpl
mov
and
mov
and
mov
sbb
loopne
lahf
mov
xlat
scas
imul
bound
loop
movsb
mov
test
rcll
sbb
mov
xchg
stos
outsb
arpl
mov
xchg
and
sub
cwtl
loopne
mov
dec
nop
xchg
incl
out
popa
test
xchg
pop
mov
enter
test
scas
xor
jb
sub
aad
pop
popf
mov
ror
imul
in
ds
clc
jbe
xor
and
mov
test
xchg
sub
pop
cmp
sbb
sub
cmp
inc
cmp
xor
jae
ds
int3
dec
lds
jg
pop
test
sub
aam
mov
je
arpl
enter
hlt
inc
data16
stos
xlat
imul
movsb
and
leave
arpl
movsb
fimull
mov
hlt
cmp
xlat
and
fistps
stos
lds
mov
lods
fiadds
lahf
pop
fwait
cmp
sbb
xor
and
stos
or
inc
pop
mov
xchg
test
xchg
insl
add
ljmp
pop
out
je
jge
loopne
rcrb
push
mov
fcmovne
cmp
and
negb
loope
push
and
fsubs
inc
xchg
subl
sbb
imul
pop
lcall
int
out
test
mov
lea
add
pushf
jecxz
jo
int
add
cmp
in
stos
call
cmp
inc
movsb
mov
pop
mov
mov
xchg
cmp
mov
sub
scas
add
sub
mov
dec
sub
pusha
fsubs
mov
std
push
lock
insl
pop
mov
jb
jp
cld
mov
out
or
ds
ja
dec
bound
imul
jecxz
mov
or
and
jno
shlb
fucomip
pop
cmpsb
dec
out
repz
mov
mov
arpl
cwtl
cli
jnp
fstpl
orb
loopne
add
mov
sub
mov
mov
xchg
cld
call
pop
std
ficoml
iret
xlat
pop
jge
nop
xor
xchg
into
pop
loopne
xchg
jbe
mov
mov
das
mov
sarl
pop
cltd
xor
ja
fsubrl
jecxz
lcall
xchg
mov
js
sbb
add
pusha
mov
and
dec
sub
adc
sarl
and
fisubs
or
push
pop
sbb
jne
pusha
and
ljmp
aad
daa
cli
pusha
xchg
arpl
lock
and
lods
ss
in
gs
js
outsl
pop
ret
xchg
cld
popa
pop
sub
mov
stos
mov
fcompl
outsl
shrb
insb
jl
nop
xchg
xchg
stos
ds
pop
cmp
das
cmc
xorb
push
sbb
jmp
lock
in
inc
lods
popa
fmul
sub
out
cmpsb
movsb
and
mov
pusha
cwtl
insb
enter
sub
test
mov
jg
faddl
sbb
xchg
mov
mov
pop
outsb
push
fsubrs
sbb
mov
add
and
sbb
sbb
outsb
jge
jns
fwait
popa
push
push
mov
les
mov
leave
fstpt
mov
cmpsb
xchg
mov
imul
nop
pop
ljmp
gs
xor
in
xchg
and
pop
stos
jg
ret
mov
lret
orb
loopne
mov
adc
mov
lahf
mov
shlb
cmpsl
mov
and
bound
xlat
add
out
cmp
mov
lcall
out
inc
rcrl
hlt
mov
lret
dec
pop
loop
mov
push
lret
pop
and
cmpsl
jecxz
adc
outsl
mov
cwtl
addb
sub
pushw
sbb
ret
mov
icebp
adc
test
add
or
aas
mov
fsubl
icebp
aaa
add
push
hlt
lods
scas
jle
sub
mov
mov
pusha
outsl
loopne
das
outsb
movsb
pop
je
out
test
xor
xor
adc
lahf
adc
xchg
loopne
cmp
sub
bound
dec
xorl
xchg
call
loop
into
push
or
cmp
sub
test
mov
mov
out
pop
sub
outsb
mov
int3
jnp
inc
fnsave
cmp
or
xchg
inc
mov
mov
cmp
int3
outsb
xor
cli
int3
or
clc
pusha
pop
lret
flds
add
ror
cs
dec
loop
movsb
daa
xlat
aas
jg
xlat
dec
pop
cmpsl
outsb
push
scas
inc
dec
xchg
int3
xor
jl
scas
loop
pop
movsb
cs
shrb
test
inc
je
dec
test
test
xor
pusha
adc
mov
in
in
fs
inc
push
in
loopne
xlat
cmpsb
cld
pop
out
subl
mov
call
iret
mov
sahf
stos
dec
inc
rcl
add
mov
jo
push
ljmp
push
gs
loopne
pop
jg
into
push
in
xor
loope
lock
rcr
test
add
cmpsb
lock
icebp
add
ret
in
jmp
mov
mov
fsubrs
cld
test
and
lock
shlb
sbb
fsubrl
mov
and
int
push
and
in
mov
sbb
into
rolb
add
dec
pop
rclb
das
loopne
pop
cltd
cmp
clc
sbb
jmp
jnp
fwait
subl
jno
dec
ss
mov
insb
nop
testl
bound
or
pop
mov
ret
jb
push
mov
or
lret
or
ljmp
and
lods
or
cwtl
mov
mov
pushf
pop
adc
pop
ret
jo
cmp
mov
lcall
fisubs
fs
pusha
ror
sbb
pop
jl
push
mov
fildl
pop
call
sub
inc
imul
mov
xlat
add
sbb
push
popa
sub
pusha
lds
jnp
sbb
sbb
int3
sub
cmp
sahf
lds
cmp
inc
push
lcall
call
adc
xor
shrl
mov
test
fisubs
inc
in
sub
es
gs
ficomps
loopne
mov
mov
lods
jmp
mov
aas
push
addr16
and
cmp
into
push
movsl
add
lahf
cmp
xchg
mov
or
adc
dec
ret
aad
les
add
gs
dec
push
roll
nop
sub
push
cmp
ss
sti
sbb
cmpsb
adc
shlb
mov
adc
mov
sub
loop
push
sub
loop
daa
sbb
js
test
push
cmp
test
xchg
aas
and
lcall
out
xchg
mov
mov
inc
sbb
dec
int3
and
add
shlb
jmp
fsubrl
pop
in
int3
movsl
push
or
mov
cmpb
xor
rorl
dec
or
into
or
in
stos
sbbb
or
fldenv
daa
push
mov
aas
pop
shlb
pop
pop
ljmp
cmpsb
lret
cmpps
movl
push
sub
daa
push
rclb
xor
or
imul
aad
cs
aas
lcall
mov
into
inc
push
inc
pop
scas
and
pop
bound
iret
imul
popf
mov
mov
ds
inc
push
ds
inc
rcr
out
popa
mov
icebp
mov
mov
fistpl
add
orl
jnp
das
and
sti
mov
outsl
outsb
orps
add
jmp
mov
pop
arpl
add
lock
mov
loop
aas
mov
pushf
mov
aam
rorb
sub
das
repz
pop
cwtl
pop
addr16
pop
mov
in
mov
push
push
dec
mov
pop
aas
xor
xchg
stos
stc
mov
int
mov
mov
pop
jle
cwtl
lcall
jg
add
lahf
out
mov
ffreep
into
scas
push
pop
mov
add
ds
push
test
xor
pop
movsb
inc
lcall
popa
mov
jg
enter
cld
adc
mov
mov
lods
xlat
data16
pusha
clc
mov
setnp
adc
notl
jge
add
cmp
jle
iret
xchg
mov
mov
xchg
push
inc
xlat
cmp
out
fistpl
pop
or
cmp
or
fsubrp
xor
jmp
and
inc
jnp
push
fdivrl
and
pushf
cmp
mov
cmpsl
sti
pop
dec
mov
xchg
jno
xchg
test
insb
adc
mov
sub
test
jg
clc
leave
mov
fcom
mov
cmpsb
fisttpl
xchg
sub
aaa
int3
sbb
pusha
dec
lcall
sub
mov
mov
fildll
inc
into
jl
sti
inc
or
mov
imulb
ss
test
jecxz
push
pop
and
mov
in
pushf
iret
data16
test
push
movsl
repz
adc
out
pushf
data16
inc
adc
nop
sbb
sub
sti
pop
stos
insl
into
lock
xchg
adc
fdivrl
shll
push
push
sub
inc
or
sbb
cmp
xor
mov
dec
ret
xor
into
jnp
pop
adc
icebp
cmp
sbb
add
sti
int
ret
sub
fidivrs
repz
fisubl
inc
cmp
dec
fmull
xor
bound
cmp
rcr
loopne
mov
push
add
push
test
mov
pusha
inc
ja
jne
les
dec
mov
mov
mov
and
and
fwait
adc
outsl
cmpsb
pop
lcall
pushf
cmpsb
bound
adc
es
les
int3
out
jbe
cmpsl
adc
xchg
call
movsl
add
nop
sub
out
in
out
sbb
sbb
jae
arpl
enter
int3
xor
call
outsb
call
sub
in
sub
xchg
lods
fisubs
or
cltd
divb
cmp
pop
sbbb
adc
push
leave
dec
mov
pop
pusha
sub
mov
iret
sub
push
adc
movlps
fisubrs
into
mov
pop
sbb
rol
push
into
dec
and
sbb
insb
stos
loopne
pop
jecxz
test
int3
and
lret
imul
dec
jp
and
ds
jg
neg
xor
fs
jns
subb
pop
pop
sbb
test
and
mov
or
shrb
push
push
adc
imul
cwtl
rorb
jmp
lods
outsb
movsbl
pop
shl
sub
les
push
movsb
inc
mov
loopne
mov
daa
xchg
int3
outsb
lds
fistpll
iretw
leavew
int
xor
push
addr16
hlt
and
sbb
arpl
divps
sub
dec
fdiv
jecxz
movsb
fdivr
xor
std
mov
sub
inc
enter
add
iret
mov
out
bound
arpl
push
aad
sbb
sbb
mov
xchg
sarl
cmpsl
out
sub
es
sarl
sub
in
jnp
jnp
adc
jno
sbb
test
test
jg
push
xor
test
outsb
out
movl
mov
fs
out
in
mov
mov
pop
stos
outsl
sbb
mov
fwait
xor
imul
fsubs
popa
stos
ret
js
xchg
mov
and
mov
mov
pop
aad
or
imul
ret
test
sahf
pop
mov
jbe
jle
int3
imul
pusha
clc
shrl
loopne
fs
or
sbb
sbb
and
mov
test
rcrl
rcr
sub
bound
and
xchg
sub
cs
xlat
or
cli
or
inc
or
insb
and
mov
fsub
or
mov
mov
and
cwtl
je,pn
dec
xor
sarl
hlt
cmp
movsb
bound
int3
hlt
orl
mov
sbb
push
icebp
xor
fidivs
out
mov
ljmp
loopne
iret
rcrb
test
add
xor
stos
in
xchg
cli
inc
pop
in
loopne
dec
mov
adc
lea
data16
xchg
ret
dec
push
loopne
push
test
inc
adc
pop
inc
push
push
pusha
xor
xor
push
sbb
jmp
cltd
mov
adc
cmp
icebp
adc
int
test
scas
adc
xchg
or
pop
jmp
sub
lds
mov
mov
rcrl
scas
push
mov
out
fcmovnbe
cmp
xchg
or
mov
je
les
out
adc
or
jne
mov
pop
dec
nop
sub
and
push
imul
lret
sbb
stc
shlb
stos
xchg
lock
imul
pusha
sub
adc
popf
inc
lahf
or
inc
fs
inc
cmp
xor
lret
je
fistpl
js
mov
loopne
call
cmp
sub
lret
add
int3
es
pop
xor
mov
mov
cmp
les
scas
cmp
imul
jge
out
xor
ds
mov
movsb
sarb
gs
push
stos
adc
outsb
repnz
lret
dec
mov
dec
adcb
dec
hlt
mov
in
dec
ret
push
jb
or
clc
mov
push
arpl
dec
clc
pop
adc
mull
sbb
loopne
mov
xchg
cli
lret
push
add
cmp
pop
lods
gs
into
loop
jle
pop
mov
fwait
daa
push
sbb
iret
sub
fcoms
test
jmp
jmp
cmp
sub
push
sti
and
out
pop
imul
into
filds
bound
in
xor
addr16
xchg
je
xor
outsl
pop
pop
jle
sarb
ficoms
mov
call
daa
jns
ret
sahf
push
pop
negl
pop
mov
mov
xchg
or
xchg
out
arpl
pushf
adc
imul
fdivrl
xor
jle
daa
leave
pop
cmp
int
and
pop
mov
int3
cmp
in
jbe
push
std
mov
inc
sahf
jnp
or
jp
pop
enter
movsl
xor
mov
hlt
leave
push
jp
add
push
repnz
out
into
imul
xlat
imul
adc
dec
dec
lea
ficomps
jp
cmpsb
xchg
sbb
out
jp
ljmp
outsl
pop
mov
movsl
xor
dec
mov
lret
push
in
push
xor
sti
dec
xchg
mov
in
daa
out
andb
cmpsb
adc
scas
push
cmpsb
or
mov
int
dec
sub
mov
out
adc
sub
dec
jge
cmpsl
loopne
sub
adc
mov
pop
aad
xor
xor
jp
sbb
int
push
pop
sub
mov
nop
scas
push
inc
loopne
andb
popf
movsb
mov
call
cs
mov
test
call
pop
fs
mov
stos
fisubrs
imul
or
add
sahf
stos
daa
insl
mov
add
mov
push
loopne
mov
dec
mov
insl
jno
iret
test
aas
jg
mov
sub
add
arpl
lret
sbb
js
out
outsl
or
js
cltd
jg
ljmp
jbe
dec
jle
mov
lret
or
cwtl
lret
pop
gs
sbb
subl
push
sbb
lcall
call
pop
push
jle
imul
jmp
cmpsb
jo
test
mov
loopne
mov
jmp
loopne
jmp
jge
inc
movsb
jmp
sar
cwtl
push
jg
shl
sti
lock
int3
sti
aad
push
add
in
sti
and
push
xchg
int3
or
mov
and
mov
or
es
xchg
cld
or
bound
ss
andl
mov
xor
jne
sbb
inc
adc
shl
iret
push
sarb
ret
mov
loopne
ss
scas
jl
fs
lret
lahf
jb
dec
in
lods
lods
into
iret
lea
scas
and
mov
sub
scas
test
test
push
push
cmp
pusha
lcall
mov
into
sbb
pusha
push
mov
mov
cmp
pop
mov
mov
sti
vshufps
adc
push
xchg
pusha
clc
dec
jnp
ds
sub
or
or
mov
and
mov
decb
fcomip
pop
rcrl
lcall
cwtl
imul
jo
pop
mov
imul
mov
insb
outsl
arpl
cwtl
push
inc
lock
jnp
jno
add
out
test
sub
cs
mov
cmp
and
jnp
out
and
add
outsl
cwtl
int3
xchg
aad
mov
xor
movsb
cmpsb
mov
ror
mov
call
mov
inc
fwait
aas
test
fwait
push
loopne
xchg
movsb
js
std
fisttps
inc
fildll
rcrb
movsb
stos
fwait
xchg
jne
mov
shll
ss
int3
adc
adc
mov
pusha
in
jnp
sub
push
stos
push
push
ds
jbe
mov
insl
imul
push
mov
lds
in
inc
dec
mov
mov
aad
push
mov
or
test
mov
inc
movsb
je
dec
loopne
lret
and
jb
sub
inc
shrb
lock
fstl
lock
xchg
pop
repnz
fwait
out
loopne
fcomi
test
fisttpl
jb
fstpt
loopne
bound
in
aad
testb
movsl
aas
clc
mov
popa
pop
rcll
pop
or
nop
ret
lahf
push
pop
cwtl
lret
jge
pop
cld
adc
pop
xchg
pusha
out
jnp
sub
cmc
push
lods
fs
decb
fucompp
pop
pop
outsb
add
jl
xor
dec
pop
xchg
mov
icebp
leave
bnd
mov
in
inc
fbstp
xor
cmp
movsb
iret
or
xor
inc
sub
cli
insb
ret
pop
push
fiadds
jo
push
sbb
sbb
in
popa
mov
aaa
and
cmp
add
dec
iret
jb
ret
lahf
cmp
sub
stos
fisubrs
sub
sub
outsl
xchg
cmp
fstps
lret
and
adc
pop
cmp
stos
fisubrs
cmp
loop
ss
push
dec
xor
inc
adc
sub
add
xor
out
loop
lock
xchg
push
int3
cmc
sahf
pusha
or
mov
fstl
call
cmp
stos
out
dec
loop
pushf
lods
jp
daa
fisubrl
mov
inc
leave
pop
outsl
inc
sti
nop
dec
filds
pop
hlt
xchg
aas
daa
int3
loopne
xchg
xor
rcl
dec
push
dec
jp
or
jp
and
cwtl
fistpll
add
test
insb
mov
mov
and
gs
dec
in
daa
cwtl
jle
pop
lahf
sub
push
inc
sub
mov
insb
adc
xorl
sub
and
mov
gs
fbld
pop
pop
ret
dec
outsb
mov
outsb
mov
nop
insb
cmpsb
push
add
loopne
jl
pop
jbe
lds
sbb
jge
or
adc
or
and
js
or
movq
icebp
cmp
aam
loopne
sarb
sbb
pusha
cmp
call
cmp
sbb
test
psubsb
clc
callw
test
pop
xchg
xchg
and
push
jp
outsb
ljmp
sub
outsb
mov
mov
push
int3
mov
in
mov
mov
aaa
sbb
mov
gs
inc
or
pop
mov
pop
loopne
repz
pop
jle
mov
pop
loop
pop
and
sbb
pop
dec
push
stos
daa
inc
xor
inc
stos
sbb
mov
dec
lahf
fadds
hlt
mov
add
sub
ret
pop
in
add
fnstenv
and
movsb
int3
pushf
jns
loopne
out
loop
jo
std
mov
jecxz
and
bound
les
shrb
rcl
lods
and
fsubs
popa
pushl
mov
loop
nop
xor
and
movsb
push
insl
fwait
lods
mov
int3
outsl
loopne
lods
data16
push
mov
mov
bound
sbb
fidivrs
aad
adcb
and
nop
push
daa
mov
idivb
mov
adc
add
in
insb
in
rorb
mov
mov
sub
loopne
mov
in
test
fwait
xchg
mov
adcl
loopne
lods
aaa
gs
imul
fisubs
testl
mov
or
jno
mov
pushf
call
test
lea
sti
sarb
dec
jno
xchg
loop
call
add
mov
rcr
testb
dec
int3
movsl
fimuls
pop
push
adc
dec
jns
es
bound
mov
outsl
shll
inc
aaa
cs
fadd
sub
ficomps
fimuls
and
in
mov
mov
imul
add
fsubl
and
dec
dec
shlb
sbb
mov
mov
mov
repz
inc
clc
inc
xchg
xor
sahf
aaa
cmp
lahf
dec
in
xor
loop
popa
xor
inc
dec
cld
push
add
rorb
cmp
stos
cld
and
dec
mov
enter
repnz
iret
fstps
es
std
out
mov
add
jmp
mov
pop
outsb
pop
pop
shrb
dec
xor
xor
inc
out
and
adc
rcll
std
cwtl
fs
ds
xchg
xchg
in
and
andb
sub
clc
les
aad
pusha
int3
or
add
gs
push
movsl
mov
xchg
dec
call
dec
xchg
cmc
insb
mov
fists
xchg
lods
add
dec
or
push
jp
and
and
inc
shll
data16
mov
rorb
inc
add
js
lds
xor
pop
scas
adc
dec
push
je
sahf
and
adc
mov
test
mov
mov
mov
test
dec
and
or
cmp
lret
mov
bound
push
cs
jle
fimuls
hlt
cs
jl
test
cs
jp
push
test
cs
aam
push
mov
cld
sub
aaa
pop
and
mov
jnp
pop
popf
les
pop
test
add
push
add
and
and
outsb
sub
mov
cld
ds
xor
push
into
out
dec
shll
mov
into
mov
outsl
fcoml
dec
aaa
xchg
fwait
adc
add
dec
adc
mov
scas
xchg
testl
mov
pop
fdivl
mov
mov
test
fs
mov
leave
jg
int
scas
dec
pop
or
xchg
dec
imull
cmp
not
push
pop
leave
not
testb
jns
xchg
movb
gs
adc
jbe
mov
movsl
lcall
dec
xchg
mov
int3
pop
dec
pop
mov
xchg
int3
dec
push
fidivs
fsubl
loop
shrl
jo
mov
adc
bound
ret
sar
mov
push
pop
cwtl
sbb
into
loopne
scas
mov
pop
pop
mov
lds
aaa
inc
movsb
inc
push
dec
push
jg
xor
addr16
add
stc
mov
outsl
sbb
insb
out
or
xchg
fistpll
movsl
push
xchg
imul
leave
cs
mov
mov
mov
mov
sarb
or
mov
adc
push
inc
test
mov
loopne
jns
test
icebp
add
pop
sub
insl
daa
mov
inc
loop
insl
cwtl
xchg
insl
xchg
test
xchg
pop
imul
lret
pop
xlat
les
xor
cmpsb
push
dec
jne
ds
leave
mov
bound
insb
int3
int
sbb
add
cmp
std
hlt
fwait
and
rolb
push
jle
sbb
mov
pop
sti
mov
repnz
shl
bound
arpl
outsl
push
and
scas
stos
in
test
pop
fsubs
je
int3
jp
sbb
bound
lahf
jge
pop
and
into
fisubrs
aaa
and
ja
inc
push
iret
fldt
ret
fidivs
or
mov
and
cmpsl
js
loopne
shlb
outsl
xchg
sub
mov
daa
mov
jl
imul
push
icebp
iret
and
mov
cmp
loopne
popf
xchg
mov
scas
jb
mov
mov
sarb
ss
and
pop
mov
mov
ss
jp
cmpsb
lods
int3
sbb
add
xlat
jo
pop
sbb
mov
push
lcall
mov
rclb
cmpsb
dec
dec
stc
xchg
int3
movsb
sbb
or
push
jge
aad
mov
rol
stc
hlt
in
fisubrs
add
inc
sti
sub
fxtract
jle
aam
inc
arpl
push
dec
xchg
cmpsb
subl
ret
je
ficoms
das
imul
cwtl
lret
popf
pusha
inc
cmp
lahf
mov
mov
sub
into
dec
mov
xchg
push
mov
call
sub
out
fwait
sub
test
sahf
les
lret
or
and
insl
pop
jmp
imul
push
ljmp
cmp
outsl
sbb
fmuls
lods
xchg
iret
mov
out
outsl
mov
daa
out
loopne
gs
and
js
and
push
jb
cmp
jo
mov
mov
push
push
and
mov
bound
push
daa
jmp
stos
ds
lods
dec
fcomps
add
lock
jg
push
cmp
xor
jecxz
dec
mov
les
push
and
sub
push
mov
rcl
int3
cmc
fnstsw
outsl
mov
rcll
adc
push
cmp
push
mov
daa
sbb
jo
pop
and
lret
in
loopne
pop
loop
and
mov
test
daa
in
dec
fldl
ljmp
in
xchg
dec
clc
dec
loopne
ffree
mov
mov
andb
sub
arpl
imul
cwtl
les
lret
mov
inc
leave
pushf
out
mov
cwtl
jne
jns
js
xchg
loopne
aas
add
int3
xchg
cld
js
cs
pop
int3
pushf
rorb
pusha
mov
pop
sub
aas
push
jge
inc
les
pushf
insb
adc
xchg
cmp
movsb
adc
dec
add
cmp
movsl
and
scas
inc
dec
and
xor
addr16
shlb
cltd
push
sbb
jp
xor
ret
jno
stos
push
jo
jge
rorb
aas
inc
in
xorb
js
aam
loopne
fadd
mov
out
aas
lock
mov
jo
mov
push
ret
or
mov
stos
shl
into
shr
test
int3
fdivs
fdivrl
mov
arpl
jnp
mov
out
movsb
sub
xor
sbb
insb
dec
push
fdivrl
iret
ja
inc
xchg
int
dec
pusha
jbe
adcl
jmp
aas
rolb
add
ljmp
xchg
mov
iret
cltd
mov
add
out
xchg
inc
jo
lods
xchg
add
in
adc
bound
sub
les
nop
push
sahf
in
inc
inc
mov
pop
cmp
sti
ljmp
cmp
pop
add
xlat
add
shlb
adc
ret
popa
push
xor
xor
or
pop
das
movsb
scas
ja
sti
mov
insl
mov
adc
insl
pusha
jl
test
pop
pop
xorl
ficoms
xchg
std
dec
test
pop
stos
loopne
adc
lcall
leave
lods
jbe
pop
les
xchg
fisttps
scas
adc
int3
jg
sti
std
movsl
mov
push
repnz
or
aas
mov
jmp
xchg
mov
mov
push
fldt
push
dec
lock
jge
arpl
sahf
lods
les
outsl
mov
aas
pop
popa
int
or
push
add
sub
rcll
jns
dec
rclb
inc
xchg
popf
xchg
inc
dec
loope
xchg
push
push
aas
push
inc
and
lock
adc
and
mov
and
push
movsb
out
fdiv
pop
mov
fwait
xchg
das
fs
jl
scas
jecxz
push
imul
push
add
mov
test
jb
frstor
jne
jle
mov
add
push
cmp
mov
insl
push
dec
mov
add
scas
aas
cltd
xchg
push
fs
jp
outsb
call
stos
sub
test
jnp
adc
xchg
dec
scas
repz
dec
xchg
ret
sbb
outsl
add
mov
jb
stos
and
popa
pop
and
lock
data16
push
loope
pop
pop
xchg
fneni(8087
pop
sbb
and
imulb
push
adc
gs
add
pop
in
lea
int
dec
inc
test
push
adcb
or
addr16
outsb
xchg
movsb
pushf
out
or
mov
inc
fnsave
mov
lds
bound
lods
addl
rorl
inc
rorl
xor
fwait
lret
cmp
aad
testb
in
mov
rcrb
push
aad
jle
dec
lods
and
mov
sahf
push
pop
pop
popf
jo
subb
nop
mov
enter
adc
out
lods
sti
iret
out
shlb
shll
insb
fneni(8087
mov
add
jl,pn
cwtl
fbld
sahf
pop
call
call
aaa
mov
xlat
xor
fistps
and
pop
scas
mov
pop
add
pusha
bnd
xchg
mov
sarb
aad
mov
and
jne
and
bound
shl
sbb
sbbb
mov
jae
jp
addr16
jp
lods
outsl
iret
fsubp
jl
xor
int3
or
xchg
pop
push
test
cmpsl
cmpsl
mov
popf
xor
fsts
adc
outsb
js
push
loop
movl
mov
mov
insl
aas
es
push
mov
das
cmp
scas
in
movsb
adc
pop
fidivrs
lods
call
cwtl
cmpsb
scas
repz
lret
aas
jno
fidivs
hlt
xchg
xor
fwait
jns
aas
lcall
mov
in
imul
fs
mov
pop
lret
push
sti
pop
sbb
mov
cmp
loopne
imul
or
loopne
mov
loopne
mov
ficoms
xchg
mov
aas
fcoml
adc
push
sbb
andb
add
lock
fidivs
mov
imul
inc
or
in
loopne
mov
pusha
dec
into
loop
inc
js
mov
scas
mov
adc
sbb
ljmp
mov
mov
push
adc
out
push
sub
mov
mov
lret
push
shll
cmpsb
ret
pop
fcmovnu
and
rolb
mov
das
or
inc
test
out
leave
and
repnz
jmp
pop
jecxz
cs
out
xor
sub
lods
and
mov
out
push
mov
iret
mov
repz
cwtl
pop
sub
dec
lret
xchg
daa
xchg
xor
loopne
out
push
push
pusha
and
dec
insl
xchg
sar
push
iret
in
cmp
sahf
mov
xlat
xor
lret
xor
repz
adc
cmp
fneni(8087
stc
test
loopne
pop
pop
cmp
shlb
movsl
sub
rorb
scas
mov
ds
and
mov
jb
call
sbb
inc
push
sub
pop
xor
aad
mov
jae
add
rcr
daa
pop
loopne
rorl
push
ljmp
imul
rolb
and
in
pop
pop
mov
pusha
ficoms
outsb
xchg
fcmovu
and
mov
cld
ret
inc
popa
pop
stos
dec
xchg
je
and
es
mov
push
bound
mov
and
dec
pop
mov
movsl
or
or
jnp
add
add
rclb
loopne
and
outsl
xor
pop
outsl
mov
push
adc
mov
add
int3
js
pop
rorl
int
fs
imul
stos
pusha
add
inc
jl
pusha
push
xor
mov
xor
clc
pusha
leave
xor
sbb
clc
pusha
mov
dec
push
cld
or
dec
mov
insb
cwtl
idiv
lret
dec
mov
dec
mov
cmp
inc
inc
insl
pusha
mov
mov
test
pusha
jmp
clc
pusha
stos
inc
pop
scas
adc
ret
cwtl
pop
scas
push
popa
mov
sub
xor
test
mov
jecxz
sbb
jo
mov
jb
jp
movsb
xchg
fbstp
mov
sub
cltd
add
sbb
push
call
inc
jno
inc
add
mov
cmp
pusha
rclb
dec
movsb
stos
jb
sti
and
pop
pop
cli
xchg
shl
loope
xor
ret
test
adc
dec
add
cltd
lret
mov
cli
adc
negb
cs
idivl
cli
sub
cmp
daa
test
jle
or
dec
sbb
adc
push
push
inc
stos
adc
loopne
in
in
mov
adc
dec
rcrl
ss
out
add
fcom
dec
mov
cmpb
lods
adc
cli
mov
mov
das
andb
xor
gs
cmpsb
inc
stc
lods
movsb
and
aas
cmpsb
fisubs
cmp
imul
push
outsb
push
dec
pop
ja
mov
fldt
fisubrs
and
mov
in
pusha
xchg
int3
jg
loopne
pushf
and
iret
loopne
jg
pop
aaa
push
inc
mov
outsb
fidivs
or
mov
sti
push
ss
mov
mov
mov
subb
push
scas
inc
popf
movsb
enter
movsl
loopne
adc
les
bound
test
adc
mov
cltd
push
add
fists
ja
fisubrl
mov
dec
push
dec
lret
xor
cwtl
int3
push
adc
mov
loopne
mov
cmp
inc
mov
lods
pop
dec
mov
ficoms
enter
cmpl
sub
xchg
into
and
or
pop
mov
xchg
push
lods
fs
repnz
hlt
sub
pop
and
or
stos
mov
or
inc
sub
lahf
fsubrs
sub
or
movl
mov
fisubs
daa
loop
scas
cwtl
les
mov
sbb
sbbb
or
fs
mov
and
cld
lock
jnp
add
dec
sbb
fmull
ror
iret
fs
into
xchg
leave
lods
in
scas
push
out
bound
prefetch
or
gs
into
stos
out
fsubl
sbb
xchg
icebp
imul
mov
inc
pop
sar
add
mov
inc
pop
bound
fistl
mov
push
scas
pop
add
push
iret
lahf
stos
inc
fcmovu
cmc
stos
scas
inc
sti
jl
sbb
aaa
test
outsl
gs
mov
out
not
xchg
cmpsl
out
xchg
ficoms
mov
test
add
cmp
cmp
push
insl
cmp
aas
pop
mov
add
jbe
int
enter
mov
adc
fnstenv
ljmp
ficoml
fisttps
ret
mov
or
and
ret
fwait
xchg
pop
push
push
push
fs
loopne
fs
jnp
sub
pop
aas
pop
movsb
and
nop
push
fwait
dec
into
add
pop
xor
mov
adc
lods
dec
fs
bound
mov
mov
mov
mov
bound
push
js
jb
ret
mov
in
jbe
lcall
fstpl
add
repnz
iret
push
loope
lock
shlb
in
add
js
jmp
pop
loope
xor
int
dec
mov
sbb
mov
cmpb
inc
sub
fcom
aaa
dec
leave
xlat
mov
cmpsb
sub
push
sub
xchg
sub
adc
push
push
inc
sub
jae
fs
cmp
addr16
xchg
sub
pop
mov
outsl
ror
sub
lret
movsb
push
inc
pop
inc
cmpl
mov
lret
xchg
pop
scas
push
mov
mov
movsb
dec
inc
test
push
lods
xor
pop
push
stc
jecxz
das
enter
push
mov
jbe
icebp
xchg
pop
mov
jle
bound
into
movsb
stos
adc
das
and
mov
dec
sub
arpl
fst
popf
xor
test
lahf
fists
push
mov
int3
lds
test
push
setp
mov
mov
sahf
sbb
lahf
mov
test
ljmp
add
lcall
leave
xchg
test
test
mov
jo
xorl
and
in
push
cltd
cmpsl
xor
push
cmp
sarb
jb
mov
jle
arpl
test
adc
adc
mov
mov
mov
and
int3
sub
popf
out
sub
or
out
adc
inc
arpl
cwtl
lret
lahf
xchg
dec
mov
ficomps
pop
inc
xchg
movl
push
pop
mov
push
fidivl
adc
sti
lods
mov
shrl
add
lret
test
pop
lret
or
std
iret
test
shrb
sub
bound
mov
add
das
sbb
xchg
dec
mov
lret
inc
outsl
or
popa
nop
adcl
lret
jle
icebp
shll
nop
std
test
movsb
sbb
stos
jbe
cmp
push
lods
and
cs
lret
inc
push
loopne
push
xchg
lahf
data16
popf
int3
push
mov
cmpsb
pop
insl
shlb
pusha
loopne
and
inc
out
mov
das
out
jl
and
mov
loopne
call
ljmp
in
add
jge
lods
stos
jle
add
ja
in
adc
dec
mov
bound
dec
int3
aam
add
jo
sti
cmp
lods
shl
mov
dec
push
jo
adc
xchg
xchg
jnp
cmp
and
hlt
les
add
mov
popf
in
lret
cmp
enter
cmpsl
ret
pop
xor
mov
mov
pop
mov
jns
test
mov
test
sub
pop
stos
movsb
gs
sti
cmp
xorb
xchg
push
aad
adc
fistps
push
outsb
shrl
jl
cs
int3
mov
or
addb
and
loop
jne
mov
out
and
cmp
js
sbb
mov
mov
cmc
mov
stc
adc
or
out
cmc
test
nop
mov
and
lret
icebp
jns
cs
push
out
sub
pusha
enter
nop
lods
xchg
sub
lods
ljmp
cmc
push
insl
insb
iret
nop
adc
mov
push
mov
mov
incl
movsl
mov
mov
repz
cmp
inc
clc
sub
cmc
mov
sbb
aas
dec
int3
mov
cltd
lahf
jge
push
mov
nop
jge
ret
jne
movsb
mov
in
dec
or
jb
and
lret
in
mov
add
sbb
mov
pop
dec
or
mov
cwtl
bound
int
jmp
movsl
jmp
aaa
into
enter
in
pop
nop
lods
scas
out
sbb
pushf
fs
jo
mov
hlt
gs
lcall
cld
cmp
push
insl
rorl
call
inc
movsb
repnz
xor
out
shrb
add
jne
das
cli
mov
mov
psrlw
sbb
or
fidivrl
in
les
push
cs
mov
xchg
icebp
popf
mov
jmp
mov
sub
push
cs
xlat
lahf
pop
int
sub
gs
mov
push
stc
pushf
fbstp
rcrb
xchg
int3
xchg
cltd
xlat
xchg
cwtl
std
mov
loope
bound
enter
jns
xor
stos
xchg
push
mov
add
movsb
xchg
iret
std
adc
call
cld
cmp
sub
pop
mov
icebp
mov
out
iret
out
add
and
out
ja
jp
mov
sbb
pusha
fs
and
outsl
sbb
xor
mov
mov
rcrl
mov
fstpl
or
mov
mov
mov
and
or
ss
sbb
daa
dec
rolb
cmpsl
xchg
ja
pop
nop
in
aas
outsb
fs
call
or
in
and
xor
adc
mov
pop
xchg
dec
mov
icebp
xchg
mov
xlat
lods
cltd
cmp
rcrl
int
dec
into
or
add
shlb
lcall
in
mov
ds
mov
imul
jnp
popa
cld
popf
rcrl
stos
xor
or
enter
sti
cmp
aam
adc
inc
sbb
cmp
push
shlb
loopne
push
pusha
push
mov
pop
dec
sbb
jl
pop
and
popf
mov
cmc
nop
test
test
outsb
mov
cmp
adc
daa
icebp
sub
cld
imul
cmc
jl
movsb
out
or
mov
pop
loop
out
mov
adc
push
and
shll
jno
jnp
in
in
pop
loopne
push
lahf
wbinvd
loope
and
mov
les
rorb
push
das
mov
adc
add
int
stos
dec
mov
movsb
inc
stos
cmpsl
pop
push
cmp
jecxz
xor
sbb
push
sbb
sbb
sub
iret
sub
ds
push
out
mov
jbe
and
das
loopne
test
pusha
in
xchg
movsl
mov
aad
dec
es
and
pop
stos
stc
push
sub
push
mov
fmul
xor
cmpsb
fisubrs
xchg
jns,pn
inc
xlat
cmpsb
scas
lods
insb
sahf
lret
sbb
pop
inc
cltd
cwtl
in
push
cwtl
pop
push
xor
mov
lods
addr16
cmpsb
fs
fildl
rolb
inc
mov
ret
mov
out
mov
push
shl
and
mov
test
sbb
cmc
int
insb
jns
and
mov
test
jns
mov
cmc
ret
ret
test
cmp
lea
mov
or
int
scas
fidivrs
or
mov
pop
lcall
fisubl
xchg
stos
mov
cmp
out
jecxz
mov
sub
xchg
sbb
adc
and
sarb
divb
inc
dec
ss
pop
cmp
int3
xor
xlat
ljmp
mov
cmp
adc
adc
and
xchg
shrb
add
jecxz
dec
imul
pushf
xorb
outsl
sbb
call
inc
out
sti
clc
sbb
das
arpl
int3
mov
imul
inc
xlat
das
in
mov
xchg
push
filds
mov
pop
bsr
dec
xor
out
mov
sbb
sbb
outsl
bound
mov
loop
mov
dec
lcall
into
mov
pop
movsl
cs
mov
les
sarb
in
jns,pn
sarl
bound
cld
repnz
cs
jge
loopne
call
js
adc
push
lods
and
in
push
movsl
arpl
into
cld
pop
xchg
loop
lret
pop
xor
push
test
and
fidivrs
pop
lcall
jmp
lea
arpl
neg
test
in
push
pop
in
loope
loop
js
fs
and
ljmp
sbb
addr16
adc
dec
dec
push
aaa
lods
inc
jle
repnz
arpl
and
std
ds
mov
inc
push
bound
lds
clc
mov
xchg
shlb
fiadds
rcrb
xchg
add
loop
dec
cmp
mov
or
push
insl
xor
jg
mov
pushl
dec
pop
dec
lea
cmp
push
scas
push
les
xlat
movsl
mov
call
shr
jl
fs
repnz
jl
std
ret
imul
or
or
repz
sub
cld
inc
dec
aam
cmc
push
push
test
test
testl
ds
sbb
data16
jno
and
dec
cs
sti
adc
mov
and
cmp
or
inc
cmpsb
cmc
mov
testl
loopne
jg
xchg
push
push
es
mov
js
fldenv
scas
mov
imull
mov
loopne
and
mov
push
cmp
pusha
mov
movsb
movsl
fwait
popf
xchg
std
xchg
fisttps
gs
and
mull
lods
in
jp
rclb
xchg
or
in
cmc
cmpsl
cmp
push
push
push
in
mov
adc
rcrl
xor
lock
dec
in
dec
pop
ret
lahf
push
sub
and
in
icebp
jnp
cmp
fldcw
or
pop
ds
pushw
inc
inc
lods
cs
xor
fcom
inc
insb
inc
icebp
push
shlb
loop
xor
sbb
mov
pop
in
lret
mov
push
inc
movsb
cwtl
push
or
into
and
mov
adc
jecxz
push
in
dec
jbe
mov
pop
cmpl
and
out
test
in
add
jno
lods
sbb
in
cmc
incb
inc
sahf
rolb
xchg
imull
pop
scas
shrb
mov
repnz
lods
dec
rcrb
add
aad
mov
mov
je
scas
shrb
dec
mov
fildll
inc
lds
bnd
push
ja
and
or
in
and
clc
movsb
pusha
punpckhwd
ficompl
lock
js
fcomp
loop
jb
shlb
shrb
icebp
sbb
xor
and
xorb
test
dec
add
and
jbe
mov
jp
sahf
mov
inc
sub
das
cmpsb
xor
repnz
mov
pop
dec
or
roll
call
push
fmulp
or
lods
xor
jnp
rolb
bound
icebp
pop
fisubl
loop
cmp
push
dec
push
ret
outsl
mov
push
jns
fs
mov
push
push
pop
repnz
add
fxch
ret
mov
loopne
pop
push
rcrb
cmp
ljmp
cwtl
inc
push
fcoms
bound
adc
rclb
test
pop
jecxz
dec
fisubs
pop
push
clc
pusha
pop
adc
ja
test
insl
pop
ret
mov
repz
repz
mov
repz
stc
pop
xor
stos
testl
loop
sub
jno
stc
lahf
fistps
je
jmp
rolb
fcomip
or
dec
push
mov
xchg
lcall
jg
pop
rcll
test
xor
pop
and
imul
dec
ja
ret
aad
insl
xchg
fbld
jp
push
ja
push
push
in
icebp
lock
loopne
xor
inc
fcompl
pop
jne
leave
cwtl
test
int3
push
idivb
stc
loop
arpl
pop
or
cmpl
in
sarl
cli
int3
les
lods
les
mov
cmp
rcll
cltd
push
xor
in
mov
dec
cltd
mov
shrl
pop
push
mov
mov
int3
inc
jle
fstps
int3
scas
jae
popa
xor
push
and
add
ret
mov
pop
or
add
mov
pusha
adc
pop
cmp
inc
mov
popf
stc
inc
push
cmp
stos
sbb
jnp
loop
lret
xchg
or
ja
pop
sbb
push
add
mov
push
and
and
adc
dec
push
jne
cld
test
lods
int3
repz
sti
addb
jecxz
push
aam
mov
mov
mov
and
dec
mov
jo
lods
push
sti
xchg
in
call
add
jl
enter
mov
xchg
rolb
ss
mov
dec
test
xor
mov
out
mov
test
sub
out
pop
shl
ljmp
sarl
ds
jns
mov
stos
shl
inc
movsb
int
inc
inc
enter
add
stos
jnp
pushf
fdivrp
ljmp
add
ret
jne
adc
pop
mov
jne
lcall
cli
xor
xor
shlb
inc
push
js
push
jae
icebp
xchg
les
mov
fstpl
mov
movsl
in
outsb
dec
xchg
sbb
xor
lods
xchg
lret
imul
fcmovnu
dec
fisubrl
call
fcmovnu
cld
ffree
pop
gs
data16
loopne
ds
cmp
test
jl
aad
roll
pop
mov
jnp
loope
mov
test
pop
push
stos
sub
push
pop
daa
testb
fs
loopne
rcll
fisttpl
add
mov
test
loopne
in
jmp
fstpt
ror
lahf
lock
sbb
jmp
pop
lret
cltd
and
outsl
add
xchg
ret
call
int3
into
pop
lahf
je
outsb
movsb
sub
arpl
into
inc
or
pop
add
lods
loop
push
insb
fs
sbb
pop
aad
push
arpl
leave
cli
insb
loopne
push
fisttps
jmp
add
mov
push
cmp
loopne
xor
stos
cs
js
lret
push
add
loop
add
xor
sar
stos
gs
mov
shll
repnz
push
es
ljmp
sbb
into
add
and
lock
add
leave
rol
rorb
sub
mov
jno
adc
int3
aaa
dec
loopne
sarl
insl
shl
adc
sarb
ss
jg
cwtl
pop
push
lret
jns
add
xchg
jns
sub
and
xorl
fistps
adc
jl
test
and
test
and
pusha
les
or
into
mov
xor
rcrb
pop
cld
pusha
mov
ss
add
inc
aam
leave
push
push
adc
mov
orb
inc
jmp
fnstsw
fneni(8087
pop
push
jecxz
jb
stos
push
sub
lea
shll
out
popa
rolb
push
dec
xchg
xchg
loope
xor
testl
test
xor
inc
mov
pusha
mov
mov
sub
movsbl
xor
and
aad
jle
test
dec
push
mov
jge
inc
or
dec
adc
pusha
mov
pop
stc
je
icebp
roll
scas
or
stc
incl
mov
std
pop
outsb
push
imul
fs
bound
pop
xchg
bound
in
add
idivl
pop
inc
and
sarb
sub
dec
gs
sub
and
and
sarb
pusha
mov
mov
popa
mov
mov
pop
call
fstps
mov
sub
mov
cmp
clc
pusha
shll
clc
pusha
andl
inc
loopne
jmp
mov
add
cs
clc
push
mov
mov
fisubrs
lcall
mov
fsubp
je
imul
add
xlat
fcmove
xchg
xchg
mov
inc
out
scas
mov
push
dec
dec
xlat
add
rcrb
pusha
pop
cmp
stos
pop
add
dec
or
outsb
nop
push
or
arpl
pop
arpl
cwtl
nop
sub
rcl
xor
xor
ret
mov
xor
or
das
pop
sarb
stos
push
insb
and
js
and
test
fwait
hlt
mov
repz
and
testl
xchg
sbb
xchg
and
xchg
fistl
xor
lds
and
xchg
xchg
stos
jb
and
bound
ljmp
xor
adcl
test
int
adc
and
sahf
xchg
ja
lods
movsb
sub
sbb
mov
int3
movsb
in
in
xlat
scas
xchg
popf
adc
adc
xchg
roll
sbb
ja
push
fwait
lcall
out
mov
ficoms
sbb
fwait
lcall
jle
sbb
call
fbld
and
jmp
fidivs
mov
xchg
mov
int
add
iret
cmp
repz
push
lcall
and
pusha
lds
rorb
ja
push
lock
sub
mov
lea
mov
les
mov
and
sbb
aas
push
sub
sbb
pop
inc
xchg
inc
out
xchg
lcall
push
enter
and
push
jb
lahf
pushl
cwtl
call
add
or
fisubs
mov
jl
nop
scas
bound
loopne
and
dec
test
adc
test
jl
arpl
jbe
pop
jecxz
mov
cmp
hlt
cmp
inc
daa
iret
jns
lcall
fisubrs
leave
dec
pop
cltd
or
dec
or
fimuls
test
movsb
adc
cmp
or
mov
jecxz
add
out
sbb
sbb
lret
test
cmp
or
int
push
push
scas
lahf
mov
pop
fistps
loopne
sub
inc
jmp
imul
outsl
gs
dec
mov
push
push
fistpl
or
and
ljmp
fwait
push
loope
cmc
rcrb
ret
daa
hlt
jbe
arpl
or
scas
cmc
int
mov
fsubl
jbe
pusha
pop
cmc
lret
stos
xor
or
dec
sub
fisubl
dec
sbb
dec
bound
xor
cmpsl
aas
out
sbb
and
out
pop
jl
test
push
pavgb
movsl
int
and
test
int3
arpl
lahf
call
inc
test
add
inc
sbb
pop
push
ljmp
mov
inc
int3
xor
std
jg
aas
daa
pusha
sbb
cmp
int3
es
sub
sbb
lods
fidivs
mov
pop
sbb
popf
dec
push
arpl
pop
lods
mov
loopne
pusha
loop
sub
and
push
fwait
pushf
push
jp
dec
jp
push
loopne
lea
xor
push
nop
test
std
int
adc
insb
leave
push
sub
add
outsb
outsb
xchg
jl
xchg
pop
pop
mov
icebp
cmp
jle
mov
pop
and
cmp
sbbb
ljmp
popa
mov
in
dec
sbbl
std
stos
sub
xor
js
inc
rorb
bound
inc
and
js
fs
stc
push
xchg
xchg
xor
dec
mov
gs
out
sahf
add
pop
sub
lret
sbb
xchg
loopne
xor
pop
lods
push
aas
and
xchg
mov
inc
leave
and
pop
dec
and
adc
outsl
lret
mov
outsl
or
scas
mov
sub
fs
das
loope
mov
xor
mov
into
loopne
adc
cli
inc
mov
mov
shlb
lret
fisubrs
loopne
pop
mov
loopne
mov
rclb
or
lahf
cmpsl
push
imul
clc
fucomip
fwait
xchg
or
sub
call
mov
ret
aad
mov
jns
xor
call
or
fwait
sbb
and
bound
xacquire
mov
push
cltd
imul
pop
adc
add
jg
sbb
shll
add
lock
fcompl
pop
cmp
mov
shll
imul
cld
adcb
sub
imul
testb
mov
test
loopne
test
loopne
test
loopne
test
fildll
and
test
scas
xchg
sahf
ljmp
xchg
jg
jmp
rorb
rcrl
mov
ds
je
shlb
jns
ret
push
mov
fisttps
add
lods
cmp
arpl
fldcw
and
push
add
add
fidivs
pusha
push
push
pop
fwait
mov
mov
xchg
pop
fwait
add
jae
lods
int3
push
shll
mov
adc
lcall
jns
cmc
sub
and
jecxz
xor
stc
out
sarb
fninit
iret
and
pusha
sahf
out
loop
negb
js
jmp
pop
andb
xor
subb
aad
daa
inc
mov
dec
into
call
aaa
mov
mov
fwait
int3
cltd
ret
mov
imul
adc
inc
fs
and
hlt
loop
cmp
sub
jb
int3
cwtl
test
ret
sub
test
aad
aaa
dec
dec
xchg
shlb
sahf
sub
fs
sub
aaa
mov
push
sub
mov
add
in
dec
cmpsl
jg
fsubrp
pop
push
inc
push
ret
cmp
xchg
daa
mov
arpl
shll
movsb
push
inc
or
pushf
cmp
push
dec
js
mov
pop
cs
stc
int3
inc
aad
inc
aas
dec
fstpl
or
fs
jl
imul
int3
outsb
push
aad
push
inc
movsb
fs
imul
jg
stos
pop
movsbl
cwtl
ret
lahf
loopne
gs
clc
call
call
data16
data16
lods
push
mov
cmpsb
data16
mov
pop
loop
cmc
frstor
out
sub
mov
in
cmp
inc
loopne
adc
data16
push
aam
inc
or
jno
aas
or
pop
stos
incl
cmp
movsb
jbe
ss
push
leave
jbe
shufps
jbe
test
jbe
stos
adc
ror
jbe
lds
fcomip
xchg
xacquire
loopne
xchg
pop
scas
xlat
shlb
cmp
mov
cmp
loope
xor
xchg
test
xchg
daa
or
pop
jmp
movsb
out
test
scas
loopne
xchg
xchg
add
jmp
adc
outsb
mov
loopne
inc
lds
sub
lcall
rcrb
outsl
in
mov
fcmove
or
inc
xor
push
sbb
insb
lods
stos
push
icebp
cwtl
mov
and
lods
or
inc
pushf
shrl
push
dec
nop
push
int3
push
sahf
sbb
sarb
push
mov
aaa
lret
int
add
fbstp
cmpsb
rol
cmp
cmpsb
movsw
push
subb
repnz
aaa
scas
out
sbb
pop
out
xchg
add
and
imul
xor
xchg
cmp
cmpsb
lea
push
dec
scas
adcl
adc
imul
cld
fs
stc
lret
push
xor
fstp
das
out
sbb
shrb
push
push
nop
iret
adc
inc
or
dec
jne
mov
cmc
sub
sub
dec
mov
mov
sub
loop
out
inc
iret
inc
repnz
insb
jns
mov
and
sbb
and
ret
cmp
jne
loope
lods
dec
and
in
rcrl
test
test
mov
cmc
pop
bound
adc
jecxz
rcrb
adc
jnp
or
fstpl
pop
push
jns
shr
stos
and
mov
bound
xor
bound
dec
aam
or
sub
cmp
fisubrs
lcall
outsb
cs
pop
adc
sarl
mov
ja
cltd
fwait
scas
lret
adc
xchg
sbb
cvtdq2ps
js
data16
les
lret
jnp
sti
mov
hlt
push
push
loop
cmp
test
and
mov
mov
xor
scas
enter
push
mov
pusha
jno
sarb
sbb
add
xchg
out
arpl
push
rol
push
call
outsb
pusha
lret
pop
js
nop
mov
mov
dec
lods
ja
scas
lret
jae
add
enter
xchg
bound
mull
mov
add
adc
xor
popf
je
add
mov
addr16
push
jne
icebp
js
rorl
sti
shrl
pop
stos
cmp
adc
in
mov
aaa
cmp
and
gs
ficompl
add
inc
or
loopne
xorb
cmp
stc
hlt
cmpsb
out
mov
push
mov
add
imul
loop
nop
cwtl
int3
cmpsb
nop
scas
or
fiadds
sti
ucomiss
aad
xor
movsb
ficomps
std
imul
jb
xchg
nop
xor
test
sub
push
jle
pop
cmpsl
loop
cmp
in
sub
ds
clc
pusha
lods
sub
out
mov
stos
sbb
or
or
jb
stc
sahf
xrelease
mov
cmp
cmp
loopne
cmp
scas
adc
xchg
xor
clc
or
xchg
xchg
aaa
leave
jbe
xchg
mov
jge
ss
rdmsr
jmp
xor
rcr
stos
cmp
jo
pop
and
push
or
ljmp
inc
fs
cmp
mov
call
inc
cmp
mov
mov
xchg
jb
les
dec
or
mov
imul
cwtl
push
fcmovnu
push
aas
dec
jp
xchg
sbb
xchg
xchg
jp
mov
les
lahf
test
adc
jnp
jp
mov
fimuls
pop
arpl
arpl
sub
fsubl
loopne
push
shlb
pop
into
jle
bound
int3
pop
jnp
lods
inc
cmc
xchg
mov
popf
push
jnp
inc
js
push
add
rcr
cmp
rcr
inc
push
lock
imul
insb
pusha
xor
scas
ret
mov
imul
lret
aad
and
addr16
cld
out
pop
cs
icebp
adc
pusha
add
push
fildll
xchg
sbb
xor
push
ja
add
divl
and
sub
mov
xchg
xlat
inc
lds
cvtpi2ps
test
test
adc
jbe
jne
jne
in
ja
addr16
push
es
fsubrl
lds
out
xchg
cmpsl
dec
pop
fisubrs
adc
popa
xchg
sbb
xor
pop
sub
pop
adc
sbb
mov
lret
movb
jbe
xchg
sub
mov
push
adc
push
pop
cmp
cwtl
sbb
pop
in
push
in
lods
cmc
adc
and
cs
test
or
cmc
lcall
ljmp
call
shlb
data16
mov
sub
outsb
decl
sahf
mov
out
lahf
push
mov
testb
mov
stos
int3
fwait
ret
xchg
push
mov
pop
fisttps
adc
sbb
pop
shlb
xchg
and
sub
cs
pop
sahf
jb
iret
mov
sbb
dec
add
gs
xchg
fisubs
push
int3
shll
mov
cmp
add
dec
in
gs
and
ljmp
cmpsl
mov
test
xor
mov
cmpsl
or
test
cmp
add
sahf
jbe
sub
test
mov
in
sbbl
mov
xor
pop
ljmp
dec
test
add
add
mov
lret
ficoms
imul
xchg
pop
ljmp
dec
int
push
cmpsb
xor
inc
imul
dec
sbb
out
fdivl
add
stos
jbe
les
inc
mov
das
into
pusha
cld
cld
push
lods
cmpsb
sbb
pop
stos
pop
loopne
rcrb
inc
push
xlat
hlt
fstpt
loop
test
mov
andb
rcll
in
pusha
fimuls
out
push
lret
bound
mov
sub
sahf
xlat
shrl
sbb
fisubrs
inc
and
cmp
and
pop
push
rolb
fists
and
cwtl
pusha
shr
jnp
jo
and
call
imull
dec
icebp
dec
xor
or
in
popa
mov
loop
xchg
sub
cmpsb
push
and
inc
stos
ficompl
mov
testl
adc
push
xor
push
cltd
mul
repz
ds
clc
repz
sarb
imul
andb
imul
sbbl
icebp
lret
pop
mov
loopne
jecxz
cs
push
dec
rcrl
jmp
add
dec
into
mov
loopne
clc
daa
orb
xor
jns
push
aas
fnsave
sbb
push
fcomps
push
add
or
scas
popa
cltd
mov
shl
sbb
sbb
aaa
pop
test
or
cmc
lret
out
push
mov
scas
movsb
in
aas
cmp
or
aas
push
or
push
in
dec
lcall
aas
aas
loopne
jo
and
mov
call
popa
push
xchg
call
and
mov
sbb
mov
pusha
loopne
int3
into
iret
ja
lock
pop
jnp
lret
comiss
lret
cmp
sbb
scas
push
mov
mov
sub
ljmp
pop
mov
outsb
or
daa
test
pop
and
fisubs
inc
dec
sub
push
mov
adc
das
sub
in
int3
adc
in
mov
loopne
les
mov
js
dec
dec
jg
xor
popf
repz
es
das
jle
lret
gs
mov
lret
popf
lret
push
push
xchg
nop
into
cs
mov
int3
adc
cld
xchg
outsl
adc
dec
repz
lock
mov
add
mov
popa
movsb
cmp
and
jg
cmpsb
push
or
pop
mov
or
roll
push
loope
or
mov
push
and
push
imul
adc
outsl
andb
jl
bound
xlat
into
rorb
nop
lock
lret
inc
negl
mov
inc
bound
push
dec
mov
leave
test
xchg
dec
inc
xchg
enter
and
mov
sub
pusha
xor
out
xor
xor
inc
imul
les
mov
inc
pop
dec
or
sbb
loopne
pop
daa
and
cmp
pop
lea
out
lds
loopne
mov
jnp
fs
push
int
orb
fsubp
jb
int3
xor
inc
ljmp
scas
cwtl
push
jb
sub
lret
jg
lcall
gs
paddq
pop
ss
push
sub
icebp
adc
shrb
icebp
int3
add
jg
or
and
sarl
sahf
xor
xor
pusha
loop
push
xchg
add
lods
ds
loopne
js
dec
int3
js
jle
jl
push
sbb
cs
mov
call
mov
loopne
clc
xchg
js
aas
popf
jecxz
dec
out
pop
add
lret
pusha
or
cmp
ret
sub
jecxz
xchg
inc
int3
pop
aaa
cmp
repz
pop
dec
insl
add
mov
cwtl
xor
sti
sbbl
loop
mov
rol
jnp
xor
lods
sub
mov
arpl
sbb
test
mov
xor
iret
mov
testb
and
call
mov
or
cwtl
fs
jmp
insl
out
cwtl
jne
stc
pop
je
jbe
stc
adc
mov
int3
jecxz
sbb
imul
xchg
icebp
pop
mov
add
xor
cltd
lods
and
lret
inc
xor
fsub
dec
and
popa
outsl
clc
mov
pusha
ret
test
dec
mov
pop
enter
sub
rcll
and
inc
ret
jmp
dec
xchg
mov
xor
add
fwait
test
lock
test
imul
sub
pusha
dec
push
mov
shrb
scas
icebp
jecxz
mov
loope
outsl
dec
xor
mov
cmp
sub
cmpl
jns
stc
xchg
rcr
cmpsl
sbb
out
push
les
ret
xor
gs
adc
rorb
mov
xadd
xchg
out
call
stos
lret
movsl
push
sub
stos
cli
push
jo
mov
lods
shrb
int3
enter
movd
pop
test
jo
or
inc
xchg
popa
popf
insl
push
das
arpl
xor
jne
mov
outsb
add
sub
inc
aad
fdiv
ret
icebp
cmp
pop
fdiv
pop
int
mov
test
and
and
adc
dec
ljmp
add
jl
fadd
fcmove
add
xor
fadd
in
daa
dec
test
inc
into
jge
mov
cmp
daa
lcall
dec
dec
movsb
sbb
flds
push
adc
mov
mov
loopne
jmp
xor
push
femms
cwtl
fistpll
mov
lahf
loopne
xor
movsl
add
cmc
pop
scas
dec
stc
push
arpl
outsb
sub
mov
popa
idiv
cwtl
lret
cs
daa
insl
int3
push
movsl
mov
inc
leave
movsl
mov
mov
adc
cmpl
or
test
xor
aas
and
sti
or
xchg
daa
mov
push
push
les
lahf
scas
pop
push
mov
pop
mov
and
ljmp
dec
add
dec
maxps
push
pop
mov
adc
pop
add
mov
shlb
inc
sarb
xor
out
int3
ds
shll
sahf
bound
test
cltd
pop
pop
cltd
scas
adc
inc
das
test
sbb
cli
leave
xchg
and
sbb
xchg
mov
sbb
dec
pusha
xchg
sub
sub
lds
shlb
stos
in
cs
les
rorb
pop
xor
jae
test
push
sub
add
xor
rcr
sub
dec
sbb
jbe
popa
fisubs
push
sti
mov
push
xor
dec
mov
and
pusha
aas
inc
mov
sub
arpl
mov
push
inc
push
imul
js
das
cmp
add
dec
je
fs
xor
imul
or
cmp
cltd
cld
fcomip
adc
ds
dec
dec
sbb
pop
and
inc
decb
in
mov
dec
loopne
dec
aad
pop
iret
cltd
lods
popf
mov
outsb
imul
pop
icebp
push
jmp
gs
rol
das
jnp
fcomp
cltd
adc
lods
dec
ret
cmp
pop
mov
lods
rolb
and
pop
ds
jmp
jae
fsubp
imul
js,pn
imul
arpl
in
or
and
push
jl
or
ds
insl
inc
ljmp
loopne
insb
test
pop
bsf
jbe
jns
push
fisubl
das
xchg
loop
sub
loop
xchg
pop
js
int
pushf
pop
pop
lcall
jmp
stos
in
mov
xchg
xor
pop
adc
lret
aas
mov
movsb
mov
and
pop
cld
sti
sbb
cmp
mov
pop
movsb
shlb
xchg
mov
inc
movsb
xchg
call
add
js
cwtl
mov
imul
aam
inc
cwtl
push
enter
stos
cwtl
adc
lcall
lds
jns
movsl
popf
ja
imul
pop
mov
xorl
add
fs
mov
cmp
or
ss
inc
mov
into
repnz
test
popa
or
sub
mov
outsl
nop
loopne
pop
pusha
jnp
insb
insl
bound
ljmp
dec
aam
stos
in
xor
repz
cltd
int3
shlb
add
rolb
dec
sbb
lods
adc
xchg
movntps
ret
inc
add
push
dec
dec
loopne
xchg
test
dec
mov
pusha
push
int
lahf
fwait
add
negl
or
sbb
out
lds
test
inc
das
ss
stos
inc
dec
popf
stc
push
mov
cmp
mov
cmp
mov
int3
mov
aad
mov
outsl
mov
outsl
sbb
daa
mov
dec
mov
mov
mov
cwtl
jle
inc
and
inc
lods
pop
push
into
stc
lds
lock
fnstsw
xor
push
or
lods
mov
cld
add
out
dec
leave
shlb
ret
push
mov
xor
push
int3
das
cwtl
mov
lahf
mov
insl
sbb
inc
xchg
loopne
pop
push
adc
xor
rcrb
into
daa
sbb
xchg
push
nop
mov
fmulp
gs
fbld
dec
cmp
pushf
push
scas
aad
mov
repnz
push
ds
lea
lcall
out
fld
cwtl
out
das
jle
stos
popa
outsb
fildll
sbb
shr
push
imul
ds
daa
mov
fisubrs
loopne
mov
and
cmp
jge
enter
dec
imull
sub
je
fsubrp
shl
ljmp
test
movsl
leave
scas
xor
shll
adc
inc
and
insb
cli
pop
jle
push
stc
test
jle
cmc
cwtl
jbe
cwtl
insb
cli
jne
inc
sahf
mov
into
fimuls
aaa
inc
xor
movsb
mov
sbb
cmc
mov
imul
or
inc
push
inc
sbb
xor
mov
mov
mov
mov
or
in
cmp
jmp
stos
mov
mull
jne
cltd
push
xchg
addr16
add
add
and
pop
and
xchg
push
in
push
or
jle
adc
nop
lds
test
ficomps
subb
insl
out
cmp
xchg
pop
mov
scas
std
or
dec
sbb
sbb
jae
aaa
inc
cwtl
imul
stos
push
xor
and
outsl
mov
decb
or
mov
mov
add
sub
sub
jecxz
push
loop
in
xchg
rorl
bound
sub
aas
xchg
scas
out
lret
sbb
ja
xor
fnstenv
sti
jb
test
sub
iret
leave
sub
cmpsb
lret
popa
icebp
inc
and
jecxz
fldt
pop
adc
out
fdivs
lock
jb
push
dec
push
insb
int
arpl
mov
imul
dec
xor
xchg
push
es
fimuls
cwtl
lret
icebp
xchg
repnz
fnsetpm(287
xchg
iret
je
cmp
std
cld
mov
sub
dec
push
pop
lods
fldenv
js
daa
sub
fisttpl
xor
xor
loopne
daa
loop
dec
aad
dec
mov
cs
int3
nop
inc
outsb
mov
xor
stos
ja
iret
sbbb
in
cwtl
lret
es
int3
aas
ret
xchg
push
pop
xlat
push
pop
cmp
mov
pop
ja
xor
in
xchg
arpl
fsubrs
add
mov
jne
mov
loop
dec
mov
ss
cmpsl
in
mov
dec
rcrl
out
aaa
ret
and
cmp
rcrl
mov
jnp
fs
dec
cli
or
mov
inc
fisttps
cmc
push
cmp
mov
subl
movb
fnsave
in
mov
jno
cmp
push
pop
pop
and
arpl
jnp
and
jns
sbb
stos
xchg
mov
mov
ret
jle
adc
fwait
pop
inc
cmpl
xlat
insl
mov
imul
movsl
push
sub
jg
or
inc
iret
push
cli
jnp
bound
and
mov
outsb
out
lods
sahf
dec
jp
aas
scas
cli
ljmp
or
pushf
cs
xchg
movsl
inc
xchg
cmp
shll
cmp
sub
xor
pusha
mov
ror
mov
push
jae
pavgb
repz
sahf
aaa
das
inc
hlt
insb
in
jp
popa
cmp
test
add
mov
adc
cld
cltd
cmp
fwait
stos
jb
mov
rorl
movsb
add
mov
cmp
adcl
cwtl
push
cmc
mov
mov
dec
lret
aaa
push
ja
int3
sbb
into
add
add
pop
or
hlt
add
fisttpll
mulb
cmp
push
jmp
add
and
cmp
subb
arpl
inc
stos
cmp
push
jns
arpl
push
stos
rolb
stos
rcrb
pushf
cmp
flds
fisubrl
stos
sar
and
mov
mov
mov
mov
lds
mov
mov
cwtl
jne
jg
int
in
aad
and
jle
popa
les
shlb
cmpl
mov
in
ficompl
cmp
xlat
fs
ja
sbb
sub
das
fidivl
sbb
sbb
shrb
fsubs
jo
mov
mov
jb
mov
pop
arpl
pusha
testl
push
int
sbb
cmp
jle
rolb
es
inc
popa
and
fiadds
std
cmp
mov
scas
es
adc
inc
xor
cmp
mov
es
je
imul
das
sahf
jno
das
ret
xorb
jmp
add
mov
sub
jnp
outsb
in
push
sub
int
fildll
add
xchg
jnp
outsl
insb
les
enter
mov
pop
jnp
in
cmpsl
mov
cwtl
pop
dec
and
loope
rorb
lret
andb
out
idivl
cmc
add
dec
test
lods
movsb
dec
outsb
es
push
mov
shlb
and
mov
leave
jnp
inc
fsubp
jp
negb
push
out
outsb
add
aaa
call
lret
lret
mov
outsb
inc
and
and
rcr
or
fs
inc
or
push
mov
loope
sti
orl
icebp
dec
and
cmp
mov
cmp
arpl
movsl
mov
xchg
divb
imul
jno
repnz
and
les
bound
cmc
or
mov
pop
jle
jno
cwtl
add
pop
bound
xor
stos
fwait
mov
stos
data16
cld
int3
or
stos
sbb
lret
stc
fnstenv
sub
mov
pop
jg
or
cmp
push
imul
scas
shrl
es
push
stos
or
or
daa
out
loopne
std
xor
clc
push
stos
and
mov
xor
sub
xchg
xchg
and
loop
pop
or
push
loopne
stos
rcll
mov
int
imul
or
jmp
jne
push
xlat
xchg
iret
dec
sub
jno
mov
lock
adcb
and
test
rcll
imul
and
inc
test
mov
out
ret
mov
ret
pop
add
daa
lods
xchg
orb
jbe
jnp
fnstcw
jg
fiadds
add
mov
bound
movsl
jecxz
arpl
or
cmp
mov
out
dec
mov
push
mov
cmp
stc
push
pop
mov
cmp
rcll
inc
lahf
push
test
push
mov
adc
pop
jl
dec
adc
daa
popf
push
pushf
cld
imul
ret
fwait
push
cld
gs
arpl
popa
fistl
es
pop
adc
test
dec
jns
xlat
cmp
push
stc
movsb
adcl
push
loope
out
daa
fstpt
xchg
mov
mov
ja
addr16
fs
pop
mov
jne
in
mov
rclb
inc
xor
cmpsl
nop
mov
fidivs
into
dec
fs
xor
aad
dec
jbe
and
out
push
bound
loopne
cmp
and
sahf
add
lcall
inc
push
stos
mov
sub
test
adc
cs
cld
repz
dec
insl
and
xchg
cld
xchg
adc
shll
jno
cmp
shlb
dec
pop
add
jp
lods
arpl
cld
jne
enter
cli
in
sar
fisubrs
movsb
in
and
scas
mov
pop
loop
adc
jg
sahf
inc
sub
xchg
or
inc
icebp
cmp
mov
or
ja
orl
mov
in
add
ss
dec
or
sbb
andb
or
pop
and
xchg
jmp
mov
and
fidivrs
inc
mov
mov
push
jns
jp
fisubs
lods
fisubrl
cwtl
push
int3
push
fisubs
cwtl
std
int3
push
or
and
mov
les
arpl
mov
jmp
xchg
sti
fisubrs
fstpt
add
push
pushf
fs
jb
and
in
fcmovnb
xor
fisubs
or
outsb
pop
clc
loopne
movsl
scas
jl
push
mov
daa
pop
lret
push
lea
pop
fstl
imul
xlat
pop
popa
mov
faddp
mov
insb
sub
lds
fmulp
addr16
pop
cmpsl
xchg
push
ljmp
cld
lret
scas
roll
fimuls
pushf
push
sub
fsubs
pusha
out
cmpsb
out
in
daa
out
movsl
sub
cmp
lods
lret
pop
shrl
dec
into
adc
lcall
daa
sub
inc
ficomps
bound
imul
std
xchg
movsb
clc
pop
imul
xchg
cli
pop
adc
subb
std
scas
mov
fdivrp
lods
and
ljmp
lods
mov
in
int3
repnz
fs
hlt
sbb
inc
mov
gs
inc
mov
out
cli
inc
mov
data16
inc
mov
out
incb
sub
inc
addr16
inc
mov
mov
mov
fdivp
lods
push
xor
loopne
popa
test
div
sub
jmp
and
xlat
insb
int
out
fnstsw
cmp
sti
mov
cmp
out
and
outsl
out
enter
or
add
outsl
shr
pop
sub
mov
nop
loopne
je
cmp
push
mov
fisubs
sub
call
mov
mov
pushf
cwtl
pop
inc
dec
sahf
ret
lods
call
fisttps
out
pushf
aas
movsb
xor
xchg
xchg
shr
scas
sarb
lods
js
jmp
loopne,pn
adc
bound
mov
decb
pusha
xor
mov
sahf
lods
shll
and
xchg
sar
fldenv
ret
or
test
mov
aas
loopne
dec
pop
inc
xchg
hlt
ret
ret
lcall
pop
in
stc
js
ret
in
jge
fidivrs
std
sbb
adc
je
add
mov
jmp
cmp
clc
push
xchg
cs
loopne
pop
sbb
addr16
repz
add
inc
test
cs
cmpsb
add
pusha
xchg
inc
sbb
push
jl
jecxz
dec
add
dec
add
lret
lods
faddp
pop
mov
ficoms
cwtl
cmc
cmp
or
xor
dec
rcl
dec
xor
dec
rcl
dec
add
xlat
dec
rcr
dec
xor
scas
push
sbb
lahf
bound
jl
adc
cs
or
fcomip
pop
shl
pop
and
clc
addb
mov
insb
ja
int3
jbe
stc
sub
cld
xor
pop
outsb
mov
stc
jb
pop
inc
add
outsl
pop
iret
push
or
lods
pop
aaa
add
mov
add
ljmp
and
dec
cltd
and
mov
imul
adc
bound
scas
sub
xor
es
in
sti
mov
outsl
popf
addb
cwtl
xchg
inc
enter
popf
test
add
push
jecxz
imulb
jp
int3
shrb
ljmp
stos
int
fildll
movsl
je
xor
adc
cmc
cmp
lcall
xlat
xor
lea
sbb
je
add
push
pop
insl
sti
icebp
test
add
scas
popf
inc
cmp
movsl
in
jle
xchg
add
push
sbb
stos
dec
lea
xchg
imul
clc
pusha
mov
fcoms
cs
lods
lret
jae
mov
gs
lret
or
jo
ss
or
frstor
aas
xchg
les
rcrb
scas
xchg
aaa
iret
push
lahf
add
cwtl
xor
jecxz
test
adcl
adc
lret
popf
outsl
adc
sti
mov
pop
jge
jae
ds
xchg
sarl
adc
add
cwtl
es
xor
ljmp
les
jnp
shlb
xlat
lods
cs
loopne
push
or
pop
dec
inc
gs
cmpsl
mov
cmp
jge
fisttps
roll
lcall
arpl
pop
cli
ret
adc
cld
ljmp
dec
out
adc
xchg
mov
shlb
inc
aas
mov
dec
leave
jmp
aaa
test
xor
out
rclb
scas
mov
pop
ficoml
pop
pop
roll
int
movsb
xor
inc
pop
or
sahf
icebp
decb
jne
jbe
push
dec
ficomps
dec
dec
lods
xchg
movl
out
jnp
dec
mov
movsb
or
dec
mov
lret
mov
call
call
fnsave
push
lcall
push
mov
loopne
daa
es
ffree
push
add
xor
or
and
sahf
adc
mov
dec
jecxz
movsb
and
or
or
add
int
pushf
sbb
out
push
xchg
pop
pop
test
clc
dec
sbb
dec
pop
out
jecxz
xor
clc
and
ja
and
push
lret
pop
out
aas
in
dec
aaa
pop
xor
push
aad
adc
outsl
nop
cmp
cwtl
popf
lcall
inc
sub
insl
hlt
adc
out
lahf
push
repz
cmp
mov
shl
out
arpl
and
lock
stc
js
and
imul
dec
jno
sub
imul
insw
push
jl
loopne
test
sub
xchg
stc
adc
xchg
xchg
movsl
jo
add
icebp
out
jg
and
mov
mov
stc
jo
jo
mov
fsubrl
mov
cmp
and
mov
inc
and
clc
ds
pop
outsl
mov
paddusw
out
dec
jecxz
mov
sub
nop
inc
jmp
jnp
fwait
lahf
iret
xchg
scas
insb
cmpsb
mov
and
wrmsr
pop
shlb
pop
mov
mov
out
add
fdivs
or
mov
inc
xchg
fchs
mov
dec
jl
insb
fs
shll
jns,pt
sbbb
pop
int
shrb
into
push
jle
inc
cmp
scas
cmc
ds
rcl
das
cmp
dec
cmc
icebp
pop
mov
fchs
pop
lea
pop
repnz
jb
cmpsl
rdtsc
push
mov
add
int3
rclb
and
fidivs
xchg
sub
mov
xor
push
fildll
out
xor
loop
movsl
jb
inc
scas
mov
mov
rcrl
arpl
and
cmpsb
and
push
inc
inc
arpl
fs
js
les
and
lods
xchg
jl
mov
fistpl
cmc
dec
fistpl
icebp
jge
loopne
subb
jns
inc
jl
lods
fnstenv
push
push
push
dec
outsb
jle
lods
clc
pusha
dec
in
popa
sbb
cltd
or
sbb
xchg
aas
shll
mov
addr16
call
adc
jmp
sarl
and
rclb
mov
or
sti
xchg
lods
int
and
adc
call
jg
ja
sub
in
xor
out
mov
mov
lcall
cltd
add
add
cmp
xlat
jge
mov
flds
xchg
ja
jo
pop
es
and
icebp
and
out
test
incl
scas
ds
xchg
mov
loopne
sbb
mov
sub
lcall
ljmp
test
push
pop
outsb
and
gs
outsl
mov
and
les
cmpsl
and
notl
sub
in
es
push
push
jge
es
lcall
lret
nop
cmp
mov
lock
inc
mov
sub
adc
xchg
jg
fsubs
repz
lds
jg
kmovw
adc
or
sbb
leave
lret
sbb
cmp
scas
loopne
push
addr16
out
inc
fnstsw
jbe
jno
adc
lock
and
test
jle
mov
xchg
outsl
mov
and
mov
ret
xor
push
mov
test
fisubl
bound
and
ficomps
in
adc
xor
jmp
lods
add
cwtl
sahf
xchg
inc
stos
int3
rorl
and
scas
push
in
push
insl
fwait
pop
clc
stc
or
jle
into
dec
scas
mov
test
mov
mov
fwait
insb
fcmove
cwtl
xor
mov
fistps
add
out
pop
loope
or
daa
jg
and
or
loope
jp
jp
lret
adc
imul
call
inc
xor
aad
mov
mov
xor
test
xchg
loope
sahf
gs
test
mov
dec
call
test
lods
scas
sbb
push
fldcw
inc
out
lods
test
sti
fldenv
out
add
ficoms
adc
pop
add
mov
les
pop
int3
scas
in
rcrb
dec
scas
jge
fidivrl
push
enter
cwtl
repz
push
mov
int3
out
gs
mov
inc
fs
or
loopne
add
leave
dec
das
adc
cwtl
xchg
xchg
fucomip
mov
xor
das
adc
mov
cmp
sub
pusha
push
inc
and
shrb
sub
syscall
cld
test
into
pop
stc
adc
and
es
jp
iret
sbb
cmc
fidivrs
daa
ficomps
add
xchg
outsl
popf
xchg
push
rclb
js
pusha
cmp
push
mov
movsb
mov
dec
pop
jns
jns
icebp
inc
fwait
stos
push
orl
cmp
daa
xor
xlat
add
hlt
cmp
out
lret
mov
test
arpl
out
xchg
mov
popa
gs
add
aaa
dec
add
out
movsb
fs
iret
push
pop
add
loopne
xor
call
dec
ret
int3
aas
push
dec
mov
add
inc
testl
mov
mov
mov
sahf
and
mov
fsubp
lret
jle,pn
pushl
jnp
jg
and
adc
loop
xor
stc
sub
fisubrs
sbb
ljmp
aas
int3
xchg
cmpsl
adc
std
dec
xor
bound
mov
lods
fucomip
add
dec
iret
add
and
ret
adc
fwait
add
int
arpl
int
jb
or
outsb
test
add
push
ret
sub
popa
rclb
and
adc
icebp
mov
adcl
cmp
icebp
jbe
push
adc
test
adc
sbb
nop
sbb
mov
pop
aam
into
stos
jl
xchg
mov
imul
push
test
test
sbb
movsb
mov
fbld
movsb
sbb
cs
and
mov
movsl
inc
xchg
push
lret
sbb
les
xor
pop
and
inc
adc
sub
out
ret
fidivs
dec
and
in
lods
cmp
scas
and
in
pusha
bound
jne
inc
lret
jne
pusha
add
loop
xor
stos
inc
outsb
jmp
push
adc
and
or
inc
push
int3
inc
xchg
dec
ret
lret
sub
cmp
jmp
sbb
dec
nop
xchg
jl
xor
leave
sub
addr16
gs
mov
imul
mov
les
sbb
pop
imul
nop
mov
pop
loopne
mov
inc
outsb
xchg
imul
mov
rol
outsl
sbb
mov
mov
fwait
movaps
push
dec
jmp
add
fsubrl
inc
mov
aam
fcmovne
xor
dec
loopne,pt
outsl
aad
dec
iret
dec
lods
pushf
mov
call
aas
dec
adc
aad
and
test
and
pop
outsl
inc
fwait
push
test
pusha
push
pop
pusha
cmp
mov
fidivrs
dec
mov
loopne
gs
jg
rorb
test
pop
mov
test
int3
sbb
call
inc
pop
sbb
jnp
pop
pusha
lods
mov
sbb
xor
int3
inc
mov
fwait
test
sub
fs
das
int3
xchg
mov
mov
movsb
lcall
and
mov
jmp
test
popa
out
cwtl
loop
push
mov
insl
push
push
inc
loopne
mov
loopne
lahf
inc
fwait
inc
cli
jge
adc
aad
mov
loopne
pop
shrl
add
movsl
flds
cltd
mov
jp
aas
fbld
movsl
sub
pusha
test
aad
xorl
push
jns
cmp
or
mov
or
test
dec
imul
or
lret
scas
cmp
pop
je
and
mov
dec
movsb
aad
jns
pop
jl
cwtl
cmp
pop
rorb
xor
pushf
fimuls
inc
adc
push
iret
clc
pusha
cmpsl
iret
shrl
or
mov
int3
mov
test
mov
sub
jo
lock
outsb
or
push
add
cmc
and
cwtl
mov
cli
xchg
ss
push
ljmp
inc
shl
clc
fistpll
adc
lahf
push
std
fildll
mov
mov
fstps
int3
xlat
in
insl
or
sub
inc
shll
mov
cwtl
movsb
fsub
ljmp
js
cwtl
cld
pop
into
cwtl
adc
mov
lret
scas
adc
lock
lods
pop
jns
and
mov
lock
gs
jns
push
jnp
imul
addr16
adc
mov
ficoml
mov
int3
std
push
pop
into
lock
adc
add
fbld
inc
movsb
clc
add
fists
jp
cli
add
test
sub
loopne
add
dec
add
mov
insl
arpl
loopne
or
loopne
adc
fstps
add
lods
jp
ror
out
flds
mov
adc
sbb
sbb
lahf
push
jle
jne
push
loopne
cmp
dec
mov
xor
push
in
loopne
and
int3
sub
mov
xor
jl
filds
hlt
arpl
test
jp,pt
xchg
scas
jp
lods
pop
mov
mov
leave
ror
lcall
cmp
mov
pop
scas
popf
aaa
push
fscale
add
cmp
insl
mov
xor
push
inc
in
and
xchg
jp
insl
fcoml
test
jp
sub
ds
cwtl
and
inc
loopne
pop
daa
sbb
cmc
or
in
ljmp
mov
jecxz
cs
add
sub
out
mov
scas
leave
imulb
test
clc
dec
lds
xor
jle
jb
int3
and
in
jbe
pop
xor
je
popa
push
push
scas
jp
insb
or
xor
add
fidivs
in
pop
pop
xor
popa
pusha
mov
ss
pop
ficoms
hlt
pusha
fnstcw
les
pop
push
and
cltd
pusha
mov
stos
jne
ss
or
int3
pop
sub
pop
ret
pusha
jnp
std
cmpsl
out
loopne
iret
icebp
bound
cmp
jmp
xor
rolb
xor
fimull
cmpb
adc
sbb
jo
lods
jo
mov
pop
mov
mov
aas
loopne
jo
adc
pusha
mov
lcall
cmpb
inc
add
pop
xorb
clc
mov
in
pushf
or
mov
mov
pop
nop
repz
loopnew
aad
nop
ljmp
imul
stos
adc
dec
addr16
push
repz
clc
hlt
ljmp
cmp
out
xchg
sbb
add
test
inc
stos
outsl
gs
cmp
sub
sti
in
sub
cmpsb
pop
popa
nop
jne
insb
jnp
jl
mov
lret
lods
xor
mov
push
pop
cmp
mov
lahf
in
gs
pop
out
in
cmp
sub
or
pop
xor
shll
in
inc
mov
outsl
xor
push
std
push
negl
and
daa
loope
mov
dec
test
and
cwtl
movsb
mov
fidivs
mov
and
mov
add
int3
movsb
or
push
aad
fnstsw
lret
test
mov
cmp
loopne
rol
test
sbb
mov
in
push
push
mov
push
mov
lods
test
sahf
or
mov
inc
mov
and
cmp
subl
mov
int3
mov
rsqrtps
das
fmuls
fildll
shrb
pop
mov
xor
cs
pushl
data16
and
or
arpl
addb
aaa
mov
bound
dec
cli
ja
lcall
ljmp
cwtl
loopne
mov
xchg
stc
cmpsl
and
imul
jp
inc
jecxz
fdivl
insl
sub
rcr
xlat
xor
inc
scas
int3
gs
pop
les
pop
in
int3
rcrb
inc
icebp
cmp
inc
loopne
lods
stos
fsubl
mov
bound
sbb
out
scas
ljmp
dec
dec
test
addl
inc
sbb
popf
out
jno
jno
pop
xor
push
icebp
mov
and
cmpsb
pop
orl
sbb
xor
push
mov
and
std
lods
mov
ds
outsb
out
cmpsl
xchg
loopne
shr
add
cltd
jle
push
xor
push
dec
sub
in
mov
test
mov
lods
add
pusha
lret
and
pop
loop
mov
fs
cmp
aas
fcmovnbe
inc
dec
js
sti
xchg
lds
mov
pop
xchg
ss
xor
xorl
lods
ret
sahf
inc
ds
andb
xchg
popf
imul
push
lret
adc
aad
inc
adc
pop
dec
add
scas
incl
and
mov
inc
jne
mov
and
jbe
cli
call
ja
outsb
xorb
sti
fs
push
mov
mov
out
lods
push
sub
aad
cmp
fwait
pop
adc
mov
dec
aaa
xor
nop
inc
dec
imulb
push
test
cmpsb
shlb
jae
scas
pop
or
mov
iret
es
lock
push
mov
mov
scas
mov
mov
lea
loopne
xor
xchg
jns
cwtl
jbe
xorl
sub
mov
pop
push
mov
scas
xor
mov
movsb
jecxz
popa
dec
inc
dec
pop
leave
lods
loopne
or
cmpsb
adc
lcall
int3
addl
sbb
sbb
rcr
xchg
and
out
test
loop
inc
shrb
dec
outsb
or
fs
xor
lods
movsb
inc
mov
pusha
add
jecxz
out
cmp
imul
mov
mov
stos
xchg
insl
and
fsubrl
enter
sub
dec
and
outsb
adc
imul
jge
ljmp
daa
mov
lret
add
sbb
lea
jg
mov
pop
out
test
into
xor
xor
push
mov
imul
sbb
dec
push
pop
and
fsubp
fstps
add
push
pusha
icebp
mov
sub
mov
rcr
dec
add
aam
cmp
lahf
aam
mov
and
iret
movsb
push
jmp
in
xchg
ffreep
jno
jmp
inc
scas
fsubl
push
test
hlt
out
or
xor
jno
clc
sbb
add
int
loopne
mov
gs
out
es
ror
fsub
jg
dec
out
data16
bound
and
call
sub
repnz
movsb
xchg
cmpl
add
int3
and
mov
repz
stos
jbe
std
stos
mov
sub
adc
aad
scas
mov
leave
push
and
lea
movsb
arpl
mov
lock
movsl
lret
insl
das
insl
daa
into
cltd
dec
mov
imul
or
mov
arpl
jecxz
push
mov
icebp
xor
inc
mov
or
iret
push
inc
add
jl
sahf
and
out
bound
push
add
jo
add
in
or
mov
fs
fs
xor
shrb
cmpsb
sti
mov
mov
roll
les
loope
and
inc
mov
and
shll
cmp
mov
test
in
test
jne
push
jbe
sti
lahf
and
mov
fistpl
push
shlb
in
rcl
push
add
test
dec
loopne
shll
jmp
cmp
jp
ljmp
fs
call
shll
gs
and
push
adc
test
rcl
das
xchg
ret
outsl
inc
or
dec
pushf
outsl
popa
bound
fisubs
insl
fwait
ja
inc
test
rcl
sub
shlb
iret
xchg
lock
mov
fsubrl
lods
gs
pusha
movsb
insb
push
push
sarl
pop
pop
mov
mov
sbb
inc
adc
test
pop
aaa
lcall
dec
sbb
out
xchg
pop
push
mov
loop
lods
mov
push
out
cs
pop
dec
stc
jmp
loop
jle
adc
push
sub
add
rclb
popf
and
push
imul
js
mov
lock
in
mov
cmp
imul
int3
out
std
sbb
dec
mov
mov
xlat
in
mov
dec
jge
inc
test
cmp
rcrl
sub
imul
mov
movsb
xchg
add
loope
mov
or
rcl
jp
ffreep
add
inc
cmp
cvttps2pi
mov
movsb
and
mov
pop
icebp
inc
mov
mov
pop
inc
push
push
call
loopne
rcll
dec
shlb
push
cmpsb
xchg
sbb
loopne,pn
adc
fnstsw
jg
js
rcll
mov
xlat
adc
clc
inc
outsb
cmpsl
pop
sub
out
daa
cld
int3
adc
testl
inc
push
mov
cmc
add
je
and
mov
xchg
das
cmpsb
xor
mov
sbb
cmp
int
sub
xchg
in
mov
fdivrs
fbld
cltd
pop
or
clc
dec
inc
les
aam
rorb
movsb
mov
xor
jp
hlt
call
rcrl
fistpll
lret
mov
pop
in
das
je
or
lea
pop
out
pop
lret
cmp
cmpsl
cwtl
les
adc
cmp
stos
fwait
dec
gs
js
or
fxch
pop
sub
xchg
imul
popa
popa
sarb
nop
int3
shlb
and
inc
iret
xchg
insb
repnz
pusha
jo
shrb
jae
mov
mov
mov
cs
jnp
and
push
loope
pop
jnp
sbb
ss
les
shlb
rol
mov
dec
loop
xchg
jl
int3
jg
lahf
push
je
ss
lahf
test
test
jge
imul
pop
pusha
jp
pop
inc
fptan
add
sub
daa
cmpsl
add
fildl
and
pushf
and
icebp
stos
mov
stc
xchg
int
pop
mov
test
pusha
fnsave
or
push
rorb
iret
push
dec
push
xor
xchg
jb
sbb
dec
testb
push
clc
popa
or
pushf
add
shll
jb
loopne
and
cmp
xor
jae
loop
daa
xor
cmp
movsb
out
cltd
sub
out
out
cmc
rep
popf
sub
mov
daa
loop
jae
scas
stos
popa
insb
loop
sbb
push
pop
lods
lcall
mov
or
stos
xchg
lcall
shll
roll
je
mov
mov
das
adc
xchg
xor
push
fmulp
in
mov
test
rcll
adc
ret
int3
jb
stos
es
lcall
or
push
aas
aam
inc
xchg
push
pusha
repnz
sub
push
mov
enter
pusha
or
add
add
shr
insl
in
sub
icebp
inc
xor
add
add
mov
or
outsb
push
jp
les
pop
fists
mov
sbb
rcr
xor
popa
sub
sub
pop
mov
pushf
mov
mov
jae
jnp
mov
mov
data16
repz
fcmovnu
sub
dec
sbb
call
les
mov
sahf
jp
xor
xchg
and
sbb
push
mov
mov
sahf
push
ret
scas
push
xlat
das
jecxz
loopne
fs
pop
je
pop
jecxz
push
lret
cltd
outsl
mov
and
psubusw
ret
fiaddl
fstpt
cmp
inc
xor
add
mov
dec
mov
pop
arpl
xchg
mov
cmp
loopne
ret
mov
mov
icebp
or
xchg
rcl
pop
repz
ror
cmp
pop
bound
popa
arpl
rorb
fsubl
rcll
sbb
pop
cld
int3
jmp
dec
addb
loop
mov
repnz
loop
jl
test
jecxz
and
faddp
jecxz
and
mov
cmp
inc
cs
or
loopne
push
aad
jecxz
cmp
test
xor
out
pop
movsl
outsb
sub
sub
nop
mov
imul
or
int3
push
aad
jecxz
add
mov
out
or
ret
push
dec
and
mov
insl
dec
jbe
repz
push
mov
lret
shlb
enter
outsb
stc
or
xlat
imul
sub
sub
xor
mov
aas
aas
mov
mov
iret
xchg
sub
mov
sahf
cltd
sbb
mov
test
int3
add
inc
push
loop
mov
popaw
sbb
shrb
add
scas
mov
cmp
incl
ret
xorl
pop
add
inc
mov
lods
movsb
add
stos
pop
push
scas
into
jp
inc
negl
mov
adc
shl
mov
jns
ss
adc
std
mov
adc
inc
ret
int3
pop
cltd
and
xor
pop
fcmove
jl
dec
repnz
jbe
andl
ja
mov
hlt
or
sar
and
imul
test
cmpsl
and
and
js
mov
gs
and
bound
pusha
push
xor
movsb
mov
push
bound
jge
mov
aaa
sbb
iret
inc
bnd
sarl
imulb
sub
rcll
mov
add
pushf
loop
cmp
cmp
xor
loopne
inc
mov
mov
out
inc
sarb
cwtl
push
push
jbe
call
lds
fld
inc
repz
jle
mov
std
test
inc
mov
xchg
icebp
loopne
repnz
cld
push
lret
mov
or
lea
cmp
sbb
mov
and
and
mov
push
out
push
shrb
ja
sub
push
mov
imul
idiv
xor
push
pop
fidivrs
mov
mov
sahf
sub
push
mov
inc
andl
bound
cmp
adcl
pusha
jne
icebp
les
xchg
mulb
and
and
fwait
test
adc
xor
fcmovbe
jae
pop
sahf
rorl
or
fistl
inc
cmp
xor
andb
addl
mov
add
mov
int3
or
push
inc
mov
cmp
xchg
jae
clc
movsb
les
push
mov
insl
movl
int
jg
call
fistpll
dec
mov
push
bound
push
sub
jle
into
in
xchg
mov
in
jg
cs
stos
fiadds
subl
cwtl
ret
lahf
pusha
loop
stos
lret
lret
cld
lods
jl
fidivrs
call
test
xlat
adc
xchg
push
imul
lods
add
shrl
pop
test
fwait
std
int3
cmpsl
fmuls
mov
xchg
mov
movl
ret
insb
jnp
mov
mov
test
xchg
mov
das
mov
stc
not
sub
aad
and
pop
stos
push
hlt
loopne
data16
mov
divl
fsubrs
lret
aas
loop
mov
mov
loop
shll
pmaxub
mov
or
jge
push
push
int3
fdiv
lret
push
out
xor
adc
push
adc
mov
jnp
aam
fs
and
into
fcoml
fstpl
popf
js
pop
lods
bound
sar
aad
bound
xchg
sub
clc
and
fsubrp
dec
pop
add
or
loop
pusha
into
les
int3
sub
fimuls
xlat
hlt
ljmp
stc
sahf
cld
pop
mov
ljmp
xor
loopne
rcll
aas
inc
xchg
mov
jae
or
push
mov
cwtl
adc
cmp
test
lods
cmpl
rolb
test
je
dec
es
push
iret
mov
cmp
and
fnstenv
xor
xchg
sets
mov
adc
add
pusha
movsl
jnp
xor
loop
mov
push
shrl
leave
hlt
mov
popf
hlt
repz
rolb
add
test
xchg
aaa
fnstsw
dec
pop
inc
movsb
aaa
add
cmp
mov
or
cwtl
loop
xlat
js
fiadds
fimuls
adc
push
mov
fildll
shrb
sbb
mov
cwtl
aad
aam
sub
imul
rclb
fsubs
inc
jl
enter
push
jg
outsb
mov
cwtl
push
adc
xchg
shrl
out
lock
inc
in
ret
push
mov
cwtl
das
xor
sbb
shrb
inc
dec
cwtl
mov
das
jne
loop
xor
lahf
push
pop
xor
ret
and
sbbb
outsb
aas
jnp
push
inc
sbb
inc
ret
cli
or
loopne,pn
fidivrs
xlat
dec
les
jno
cmp
dec
pop
fwait
lds
jno
jnp
imul
push
scas
outsl
push
push
lods
add
mov
lret
or
push
loop
push
xlat
jl
and
jne
jnp
notb
jo
cmp
pop
imul
add
and
test
and
mov
outsl
inc
pop
pop
sub
mov
aad
rcrl
loopne
outsl
insl
fs
adc
scas
fs
rol
scas
cmp
adc
pop
sub
and
insb
scas
fistl
dec
mov
cmp
jnp
sub
test
lcall
rcrb
pusha
mov
xchg
outsl
popa
cwtl
jl
fs
loopw
outsl
cwtl
mov
test
dec
int3
stos
test
test
icebp
nop
push
jno
add
sub
mov
loopne
test
inc
adc
push
xlat
out
jecxz
xchg
rcrb
xchg
xchg
push
sub
rorb
push
clc
divl
mov
cmp
sub
cmp
adc
idiv
outsl
mov
jp
push
xchg
lods
xor
sub
int3
xchg
add
lea
or
cmp
and
shrl
and
add
insb
call
pop
fidivrs
cmpb
int3
je
add
lods
shll
or
pushf
fidivrs
cmpl
mov
fmulp
imul
add
fidivl
fs
cltd
xlat
inc
and
loop
add
add
push
into
sbb
js
fildll
loopne
add
in
add
out
push
mov
stc
sbb
mull
sub
fs
in
and
lods
jb
loopne
in
push
jg
dec
xor
push
sbb
sbb
inc
sub
fbld
cld
clc
jp
cmp
insb
int3
pop
shll
add
test
mov
mov
fsubrp
imul
cs
cwtl
mov
orl
or
add
imul
add
or
fs
xlat
sbb
fmuls
push
mov
lods
int3
test
jmp
stos
idivb
mov
jno,pt
data16
jp
imul
push
imul
mov
lret
add
mov
es
add
or
jg
mov
adc
nop
test
xlat
roll
add
xchg
pop
movsl
push
jp
loopne
fcoms
fs
outsl
cltd
xlat
andb
push
lock
mulb
mov
pop
movb
outsl
push
loopne
jbe,pt
call
dec
push
jne
mov
pop
or
push
pop
inc
pusha
iret
int3
and
xor
stos
sbb
xchg
test
insb
scas
xchg
pop
lret
adc
adc
or
pop
daa
mov
stos
mov
xor
lods
push
cmp
dec
xchg
xchg
inc
or
cmp
icebp
jbe
rcll
lret
dec
or
imul
xchg
jae
add
pop
pop
or
je
inc
pop
add
cmp
and
in
xchg
test
pop
out
add
movsl
sbb
jae
lahf
mov
adc
out
push
loopne
fs
out
pop
xchg
push
dec
push
fdivr
sarl
test
sub
incb
push
fisttpl
push
push
mov
jle
fildl
xchg
mov
adc
pop
loop
mov
ret
ljmp
mov
sbb
cmpb
cld
test
daa
movsl
ja
ror
fnstenv
sub
cmc
mov
aad
mov
inc
scas
aam
mov
rol
mov
push
movsl
add
ss
lds
aaa
vpavgb
lds
pop
int3
vpmaxsw
ret
pop
mov
push
popf
insl
int3
cmpsl
mov
cmp
aad
pop
mov
inc
mov
mov
mov
jae
mov
cmp
lods
and
outsl
loop
push
in
pop
sti
aad
mov
lea
scas
cmp
nop
je
scas
add
add
ja
shl
inc
ss
daa
xorl
bound
xchg
stc
xchg
adc
push
xor
pop
cmp
add
push
rol
repz
sbb
adc
lods
std
mov
xchg
gs
inc
lahf
std
mov
jl
xor
push
ror
jnp
fisubl
gs
int3
dec
xchg
movsl
pop
int3
inc
movl
fstps
xor
gs
lahf
bound
jge
mov
std
test
sub
bound
sahf
call
das
cmp
fistps
or
ljmp
add
push
pop
push
jbe,pt
shll
add
and
stos
popf
sub
leave
mov
out
or
lcall
shr
push
fsubl
adc
mul
fucomip
xor
xor
sarb
scas
inc
mov
or
dec
mov
shrb
gs
xor
add
jl
mov
lcall
or
arpl
imul
cltd
and
dec
push
cld
push
sbb
out
or
jmp
mov
adc
fisttpll
lds
sbb
pop
mov
xchg
xor
cmc
cwtl
or
imul
sub
shrb
pop
movsb
aas
ljmp
negb
and
xchg
adc
imul
cmc
xor
stos
mov
ffreep
test
push
das
rcll
pop
sbb
mov
fsubrp
push
std
subl
bound
push
js
gs
daa
xor
and
fildl
push
xlat
add
and
or
outsb
sbb
cwtl
ljmp
test
cli
pop
adc
cmp
push
jl
sti
popa
adc
mov
lods
or
inc
ret
adc
dec
dec
repnz
mov
cwtl
mov
xchg
pop
gs
std
cmp
jl
scas
or
std
dec
inc
jns
iret
mov
frstor
aas
pop
movsb
xchg
mov
sahf
mov
and
pop
sbb
pop
cmc
sub
fmull
adc
jle
shlb
mov
add
mov
int3
cmp
lods
push
fistps
xchg
jo
test
pop
mov
ja
cwtl
int3
int3
out
adc
ja
lret
pop
adc
or
jp
pop
fildll
sbb
inc
pop
jecxz
lahf
mov
movsb
sbb
dec
push
shl
inc
dec
jg
icebp
iret
cmp
int3
nop
pop
sahf
pusha
inc
fcoms
mov
cld
into
mov
push
sub
std
push
sbb
push
push
cmp
outsl
sub
mov
dec
adc
out
xchg
add
xor
jo
jecxz
gs
mov
cmp
jmp
jae
lret
xchg
jl
fs
popa
outsl
cmp
cs
inc
push
sti
cwtl
pop
mov
mov
mov
xor
or
das
jmp
jae
hlt
stc
movsb
loop
lods
pusha
jmp
icebp
pushf
sahf
adc
daa
arpl
jg
test
stc
shrb
stc
inc
mov
mov
sub
insl
in
mov
cmc
arpl
sub
sbb
or
popf
jae
out
inc
push
aaa
ret
push
xchg
repnz
in
and
orl
push
xchg
leave
push
sbb
sti
cld
sbb
or
ss
mov
xchg
push
ret
jns
sub
rcrl
and
pushl
add
dec
loopne
add
mov
sbb
cmc
sbb
push
adc
sbb
lret
push
pusha
stos
sbb
pusha
lea
and
lea
fidivs
sub
sti
adc
pusha
sub
flds
and
inc
sarb
add
fsubrp
sub
das
out
jl
das
arpl
out
and
and
cwtl
cmpb
or
push
add
jmp
sbb
and
mov
inc
cmp
sahf
add
clc
and
stos
mov
jle
pushf
jl
pop
cmp
sbbl
xchg
lea
pop
pop
cmp
adc
adc
or
out
cmp
aam
xchg
adc
dec
rcr
mov
adc
pusha
and
cmp
arpl
add
das
movsb
sub
mov
outsl
test
fmuls
sbbb
jmp
push
mov
inc
outsb
loopne
cs
sbb
sbb
mov
xor
xchg
inc
pusha
into
xchg
mov
fmulp
out
cli
loop
inc
sti
xchg
or
mov
sbb
mov
xchg
xchg
xor
loopne
jmp
ss
inc
push
xor
into
or
fwait
xor
mov
jge
enter
pushf
lods
pushf
pop
leave
mov
mov
mov
int3
and
outsb
movsb
sti
xchg
dec
repnz
mov
xchg
lcall
mov
outsb
cmp
add
sahf
outsb
push
jnp
cmp
and
scas
mov
cmpsl
mov
lods
rolb
les
inc
pushf
cmp
sbbb
push
mov
pushf
lret
sti
sub
mov
outsl
jle
sub
sub
push
test
or
insb
cld
test
mov
icebp
inc
loopne
jns
pusha
pusha
add
and
xlat
ljmp
pop
fisubs
mov
mov
cmp
cmc
sub
mov
fs
jl
push
mov
in
push
lea
int3
repz
mov
fisubrs
int
popa
sub
leave
dec
jae
out
test
test
add
xchg
cltd
xor
lcall
pop
pop
fwait
pop
incl
push
je
imul
xchg
xchg
mov
aas
outsb
push
xorl
sub
and
mov
cmp
push
cs
test
sbb
test
shlb
cltd
xchg
push
mov
mov
jp
stos
shrb
mov
sbb
fcmovnbe
mov
daa
pop
mov
xchg
lods
xchg
pop
and
pop
aaa
fiaddl
test
inc
hlt
xor
cmp
cmc
imul
ret
cmp
mov
clc
nop
and
into
fistpl
insl
ret
ss
outsb
outsb
movsb
into
ficoms
negl
out
fs
icebp
decl
sti
inc
pop
mov
fld
movsb
add
xor
in
jo
sbb
mov
mov
pop
xor
and
mov
jns
xor
loop
leave
shl
mov
pop
stc
insl
inc
loopne
lret
cmp
dec
inc
mov
shrb
add
jge
push
mov
test
faddp
test
and
mov
sub
add
in
xorl
and
or
push
adc
loop
adc
shl
int3
outsl
dec
scas
addr16
adc
or
sbb
adc
push
jns
iret
lret
imul
orb
inc
mov
int
fiadds
sar
js
in
cmp
inc
jmp
addr16
push
jl
dec
popa
xchg
inc
pop
shrb
fisubrl
in
outsl
ficomps
add
xchg
cmp
xchg
or
cmpsb
adc
inc
xorb
add
bound
sti
adc
sbb
stos
mov
jnp
add
scas
sbbb
addr16
pop
pop
add
insb
mov
cmp
pushf
adc
xor
outsb
jb
adc
lcall
jg
xor
fisttpl
sti
pop
rep
add
and
sahf
xchg
mov
ljmp
enter
es
inc
dec
movsl
and
scas
jge
or
xchg
cmp
cmp
outsl
jne
sub
orb
xchg
fimuls
aam
jg
sti
inc
fwait
clc
dec
std
push
bound
pop
loopne
mov
mov
jmp
mov
lahf
xchg
ret
std
jnp
ds
outsl
push
fs
int3
add
aad
test
iret
push
jmp
push
ljmp
xor
gs
cmpsb
leave
iret
shrb
push
lea
iret
fs
xchg
adc
or
and
out
in
jg
ja
push
cmp
aas
and
scas
aas
pushf
call
call
imul
je
sbb
insl
xchg
pushf
and
shll
jp
repnz
jmp
cmp
stos
jnp
push
mov
cwtl
mov
cli
lret
dec
lret
push
jmp
in
in
jmp
cmpl
mov
or
ljmp
push
sub
add
movsb
nopl
adc
adcl
pusha
clc
cmp
and
js
lock
push
adc
fimuls
lods
bound
adc
push
cmp
fisubrs
lcall
jecxz
fildl
mov
stos
xor
add
inc
or
bound
jl
lret
loopne
sbb
mov
sbb
in
rcll
push
insl
bound
je
fimuls
jp
mov
cmp
sub
call
pusha
jp
ja
lods
pop
std
push
aam
icebp
icebp
mov
sbb
cmc
mov
inc
sbb
sbb
mov
scas
clc
iret
out
push
loope
lahf
ja
xlat
sub
scas
or
and
mov
dec
fimuls
ds
mov
incb
push
rcrl
gs
and
add
out
sbb
testb
loopne
cmp
loopne
cmp
sarb
dec
cmc
or
test
js
stc
pushf
rcl
and
lret
push
movsb
sbb
ss
mov
ljmp
dec
push
push
sub
in
cmp
int3
shlb
mov
and
outsb
xchg
and
loopne
scas
cmp
into
in
mov
mov
xor
jbe
mov
arpl
mov
and
and
ffreep
pop
shrb
loopne
out
in
jo
std
test
add
repz
xor
js
pop
bound
bound
mov
mov
scas
pop
outsl
adc
scas
incl
std
gs
imul
mov
and
pusha
sub
sbb
inc
jnp
xlat
adc
scas
add
add
int3
mov
lds
xchg
popa
add
lahf
xor
mov
push
popf
stc
icebp
test
pop
fcomip
mov
es
in
lds
dec
int3
addr16
xor
mov
daa
mov
mov
js
push
add
bound
scas
sbb
mov
es
mov
and
jl
mov
test
fwait
aas
pop
mov
arpl
jle
adc
mov
lret
scas
imul
iret
xchg
fwait
into
popf
daa
xchg
int3
stos
scas
add
mov
jl
rorl
stos
inc
movsb
fildll
jl
pop
jp
sahf
scas
shl
push
aas
aaa
lods
dec
inc
ret
inc
jo
rorb
or
sub
push
scas
rcrb
arpl
daa
mov
push
lds
fnstenv
loopne
mov
add
mov
mov
and
not
cld
pop
neg
shrb
mov
dec
leave
mov
lret
lods
fs
push
pop
jb
lret
add
addr16
stos
mov
daa
jb
dec
or
cltd
mov
int3
xor
leave
cmp
adc
xor
xor
into
jmp
fisubs
mov
mov
push
xlat
mov
and
sbb
ficomps
dec
add
dec
and
push
jg
xor
push
push
push
cli
into
test
mov
xchg
push
add
mov
rorb
mov
add
push
xchg
adc
cwtl
mov
lret
pop
movsl
push
push
mov
out
int
loopne
loopne
into
out
stos
iret
das
imul
sar
mov
ret
mov
in
sbb
loopne
push
xchg
out
and
daa
das
jl
dec
rcll
adc
mov
xor
mov
addr16
sahf
sbb
mov
or
es
cs
jnp
pop
in
repz
cs
shll
mov
arpl
push
mov
dec
or
xchg
jnp
mov
outsb
cmp
push
inc
cmp
jmp
fisttps
and
scas
xor
push
fisttpll
out
popa
sbb
jne
or
mov
lret
dec
sub
mov
and
or
call
add
cmp
xchg
jb
xlat
and
sub
mov
cmpsl
sub
cmp
cmp
or
les
pop
sub
aas
sbb
xor
cwtl
push
in
test
lds
mov
and
xor
mov
ljmp
in
movsl
xor
sbb
ss
dec
xor
or
xchg
or
inc
and
ret
inc
pop
or
inc
pop
jecxz
add
or
cmc
rcrl
pop
adc
pop
mov
push
mov
icebp
cmp
inc
jecxz
jbe
ret
scas
loopne
push
ret
cs
scas
pop
frndint
hlt
rorl
or
jbe
fisttps
fnstcw
xchg
loopne
rcrb
nop
les
push
mov
rep
push
push
aad
pop
arpl
cmpsb
repnz
ret
inc
mov
mov
and
sbb
dec
add
add
or
sbb
loopne
xor
js
sub
dec
jbe
add
and
call
jg
aas
icebp
pop
cli
dec
loopne
jbe
mov
push
jns
xchg
lret
mov
into
fdivl
add
mov
call
int3
in
icebp
lods
push
stc
xchg
or
sbb
lret
cs
jl
adc
sub
arpl
jl
stos
stos
mov
xchg
neg
sub
jl
or
fidivs
loopne
loop
or
cwtl
scas
mov
mov
repz
or
hlt
push
shr
mov
sbb
mov
jo
xor
repz
xor
jne
inc
aad
pushf
xor
sub
shr
pushf
add
xchg
xor
or
dec
jl
lret
lahf
lret
adc
cmp
lret
lahf
iret
lods
lahf
int3
loop
jg
fs
lahf
lret
jg
fwait
mov
lahf
les
jg
mov
mov
bound
pop
testl
int3
mov
dec
int3
sub
int
sub
inc
int3
sarl
cmp
cmp
xchg
lahf
xor
fsubl
mov
xchg
and
push
jno
stos
fdivl
sbb
cld
push
xlat
pop
ror
faddl
cmp
lret
ret
jmp
dec
cmp
mov
aad
dec
outsl
push
dec
inc
cmpb
inc
in
xchg
sub
in
jne
sub
dec
in
loop
in
jne
daa
push
lret
cmpsb
jle
loopne
mov
in
xchg
dec
scas
das
or
mov
iret
sbb
mov
ljmp
rclb
ror
or
push
ds
rclb
std
shlb
sbb
dec
mov
lahf
jne
xchg
sbb
lock
jnp
xor
mov
jp
mov
cmp
jmp
or
mov
mov
ror
scas
push
lcall
push
js
jnp
pop
xchg
sti
outsb
jle
sbb
lds
xchg
outsl
push
pop
jbe
push
push
ret
xchg
fs
imul
push
outsb
scas
test
cs
mov
push
jb
mov
movsb
gs
adc
test
int3
imul
mov
imul
imul
cmc
std
sbb
push
out
inc
je
and
mov
iret
mov
ffreep
and
cwtl
mov
mov
outsb
mov
jg
cs
sti
mov
xchg
xchg
push
push
lock
xlat
rcrl
int3
fdivrs
mov
cs
int3
push
std
inc
pop
in
push
add
lods
cmp
gs
sti
int3
daa
mov
das
out
ds
ds
ds
ds
loopne
je
out
jns
sub
cwtl
cs
cmc
inc
inc
add
pop
jns
cwtl
fisubl
and
outsl
stc
inc
bound
lahf
or
mov
inc
cmp
loopne
mov
fadds
cmc
mov
mov
inc
cmp
sahf
adc
mov
int
jo
push
pusha
cmp
xlat
inc
jno
xor
pusha
in
popa
insl
push
fbld
std
mov
jbe
into
mov
push
ja
call
rcrl
mov
lock
add
pop
popf
sbb
ret
int3
sub
cwtl
adc
and
js
ficomps
insl
bound
int
ja
sbb
fldl
testb
loopne
fnsave
movsb
inc
out
dec
rcrl
ret
bound
jle
mov
dec
inc
xchg
cwtl
adc
or
repz
loopne
out
daa
jno
fs
xor
fimuls
daa
aad
push
stos
scas
lods
inc
bound
nop
popf
xor
pop
mov
push
jge
cmp
sbb
insl
fnsetpm(287
jo
bound
rdtsc
scas
and
mov
xlat
push
xlat
dec
andl
and
mov
jle
test
pop
xchg
mov
mov
das
das
or
add
imul
sbb
sti
push
pxor
mov
sets
pop
inc
movsb
xor
aas
iret
fs
ds
stos
sub
popf
push
push
loopne
ja
mov
push
push
dec
push
aas
push
fidivrs
scas
add
push
daa
out
sbb
mov
jg
inc
das
lahf
fisubrs
mov
das
mov
out
and
sbb
aaa
and
inc
loop
inc
adc
ja
add
gs
scas
cs
push
mov
lods
test
aas
dec
fbld
aaa
mov
inc
cmpsl
out
arpl
mov
imul
cwtl
call
fucomp
lods
adc
lret
scas
mov
mov
cwtl
bound
dec
test
dec
mov
gs
lret
es
addr16
fs
dec
clc
pusha
push
loop
dec
or
lods
push
stos
gs
int3
and
dec
out
bound
mov
popa
mov
pop
loopne
mov
fwait
inc
push
push
lret
jns
and
pop
jnp
shl
mov
add
pop
jnp
push
mov
lahf
stos
add
mov
pop
push
and
lods
popa
inc
bound
bound
stos
add
int3
insb
stos
clc
lock
ficomps
pusha
pop
jo
inc
imul
lock
scas
inc
jg
ret
fcmovnb
loopne
fisubrl
rcll
cmp
gs
fadd
push
dec
rorl
lods
cltd
xchg
inc
push
sbb
sbb
outsb
push
outsl
and
scas
lock
ljmp
scas
add
daa
fwait
test
das
xchg
cltd
xchg
push
cmp
add
jecxz
pop
ret
in
stc
push
mov
stos
add
stos
ss
mov
mov
shrb
push
mov
xchg
stos
sahf
js
scas
sbb
jecxz
jmp
cwtl
repz
fs
xchg
sbb
push
ljmp
in
and
mov
lock
in
lock
shrl
lods
mov
call
cmp
test
xchg
sbb
fmulp
xlat
mov
repz
cmp
cmp
mov
in
sbb
dec
mov
mov
cltd
add
jp
negb
jle
sub
leave
add
push
in
int
pushf
push
mov
movsb
sti
sahf
cmp
or
and
add
sub
add
push
pop
stos
bound
cwtl
ljmp
jb
sub
or
bound
adc
mov
out
bound
dec
ret
dec
adc
fisubrl
mov
icebp
mov
or
sbb
pop
xchg
movl
pop
sub
hlt
xor
movsl
xor
jo
enter
popf
enter
pop
mov
test
mov
inc
inc
pop
mov
fcmovnb
inc
rclb
mov
mov
add
pusha
jnp
mov
xlat
inc
les
jle
or
lret
jge
xchg
fdivrp
ljmp
jge
sbb
mov
cltd
sub
sub
rolb
xor
add
xchg
loopne
add
fnstenv
xor
cmp
jmp
pop
inc
cmpsb
idivb
pop
mov
pop
cld
xchg
popa
add
sti
mov
mov
mov
mov
pusha
mov
les
jne
pusha
ss
sub
aam
rcll
jae
rcrb
xchg
out
loop
fistps
es
dec
jbe
loopne
clc
movsb
mov
push
dec
outsb
sarl
pushl
push
sbb
out
sbb
insb
mov
adc
adc
xchg
mov
decl
mov
sbb
pusha
test
sahf
lock
push
insl
xchg
lea
jl
cld
pop
sub
mov
push
adc
push
dec
and
test
sbb
and
mov
cs
iret
sbb
xor
mov
movsl
cmp
xor
mov
inc
int3
mov
pushf
and
jae
stc
jb
loopne
rcrl
adc
int3
adc
in
and
aaa
or
mov
add
jl
pop
mov
add
fstpt
pop
loop
sub
lea
inc
sti
add
pop
and
push
xor
icebp
mov
scas
imulb
sbb
inc
and
stos
mov
aad
pop
loopne
inc
and
sbb
and
outsb
pop
out
and
mov
std
push
jbe
mulb
add
xchg
pop
jl
xor
mov
and
fiaddl
arpl
sub
hlt
iret
cmp
icebp
sub
jmp
fisubrs
and
addr16
xchg
aad
cwtl
adcl
iret
pusha
add
jp
icebp
sub
xor
xlat
aaa
push
cmp
rcrb
lods
mov
ss
xor
aaa
xor
insl
loopne
cmp
lds
cmp
xor
pop
mov
out
push
and
mov
pop
cmp
clc
dec
jge
aas
insb
test
out
xor
rcll
pop
cmpsb
mov
sbb
inc
push
sbb
in
adc
push
push
out
mov
dec
pusha
insb
push
xchg
shrb
jge,pt
mov
adc
sbb
aad
scas
dec
mov
ja
dec
cmp
pop
inc
outsl
and
mov
mov
and
cmp
xor
mov
mov
aaa
lods
sbb
mov
fcmovne
rcll
fmuls
mov
shr
vmovlps
ss
icebp
outsb
outsl
mov
enter
hlt
pop
sahf
stc
jl
inc
cltd
mov
jo
and
icebp
sbb
test
outsl
xchg
or
pushf
roll
enter
sub
fsubl
and
hlt
mov
das
iret
out
sahf
push
push
aaa
mov
movsl
bound
xlat
cwtl
lea
pop
dec
dec
or
sbb
rclb
push
xor
jl
out
loop
in
or
cmp
add
iret
daa
mov
add
sahf
dec
data16
and
stc
push
ret
into
push
lret
pop
fldcw
lret
dec
es
ficoms
push
movsb
ds
xor
pop
jg
in
in
mov
lock
jmp
jg
call
pusha
bound
jl
dec
repz
jns
test
hlt
mov
popl
loop
loopne
pop
mov
les
popa
jmp
pop
mov
jmp
cli
scas
int
cmp
cmpsl
or
add
std
xor
loop
dec
mov
pop
faddp
sub
lahf
fs
int
jl
cmp
mov
cmp
jo
sub
mull
push
scas
fs
lods
out
mov
loopne
or
in
and
cwtl
movsb
xlat
push
lea
jecxz
fisttps
loop
sub
int3
jle
jge
pop
scas
mov
and
movsl
iret
leave
fldl
xor
fs
cmpsl
or
shr
loopne
xchg
scas
das
js
repnz
dec
movsl
dec
ja
jecxz
and
mov
arpl
nop
mov
pop
out
mov
cmp
xlat
or
mov
faddl
fdiv
aas
lret
mov
aam
lock
fisubs
cmpsb
into
data16
sub
stos
sbb
add
les
inc
mov
out
add
icebp
ffree
jecxz
pop
cmpsb
xor
push
fisttps
adc
xor
testl
fistps
and
fisubrl
int3
loopne
les
cmp
aaa
loopne
mov
aaa
pop
jb
or
add
in
dec
or
fcompl
fs
int3
or
dec
clc
push
adc
fisttpll
mov
and
mov
lock
inc
push
jl
fisttps
ja
inc
lock
pop
push
lock
es
in
sbb
mov
and
pop
dec
pop
adc
cmp
lock
outsb
cmp
and
bound
incb
and
add
xchg
mov
add
test
out
cmpsb
jb
repnz
mov
dec
mov
ljmp
fwait
and
xchg
and
movsl
andl
into
lea
dec
add
mov
adc
push
adc
cmpsl
push
mov
loopne
lds
mov
xchg
shl
lock
adc
out
movsl
jo
bound
mov
movsb
mov
jae
mov
int
shrb
mov
aad
push
add
push
sub
rorb
test
pop
adc
sub
repnz
jb
cmp
and
and
fidivl
mov
push
in
and
gs
lcall
mov
sbb
and
scas
fs
push
dec
push
imul
cmpsb
es
in
sbb
jmp
sbb
inc
popl
push
mov
loopne
sub
jae
inc
push
mov
xor
arpl
out
cltd
adc
lods
inc
pop
int3
xchg
daa
adc
sbb
test
pop
xchg
icebp
movsl
lods
cmc
jecxz
mov
cltd
push
sub
dec
add
icebp
or
pop
lods
cmp
inc
dec
mov
cld
push
in
lcall
fisubs
ficoms
les
inc
stos
lods
jge
int3
push
les
stos
leave
mov
adc
xor
pop
nop
cs
add
jl
sub
jbe
repnz
inc
lods
movsb
cli
int3
cmp
insb
mov
inc
push
imulb
xchg
lock
mov
inc
add
gs
sbb
mov
cmpsb
stos
iret
mov
dec
cmpsl
cli
int3
and
sbb
sbb
pop
cltd
cmp
out
push
nop
cmp
inc
sub
pop
inc
push
cmc
add
pop
out
dec
clc
dec
mov
push
push
ljmp
fidivrs
cmp
insl
and
mov
shlb
dec
pop
adc
xchg
stc
repnz
loopne
inc
cwtl
mov
ja
pop
lcall
outsl
add
daa
out
in
test
scas
jle
jge,pn
sbb
dec
pusha
cld
ret
dec
lret
add
bound
add
jns
mov
adc
cmc
inc
rclb
adc
jo
mov
negl
fnstsw
xor
push
cltd
pop
out
adc
jb
loopne
rcl
jo
and
push
jno
and
pop
aaa
xlat
push
arpl
dec
mov
sbb
xor
fsts
iret
and
cwtl
lods
stos
movsbl
cmp
rol
les
jo
mov
ret
add
sub
aaa
add
iret
rolb
and
fidivs
mov
fisttps
push
push
pop
xlat
xchg
cmpsb
pop
add
xorb
pop
ljmp
subb
les
rcll
xchg
pusha
shlb
hlt
pop
cld
jp
mov
and
mov
mov
push
aad
test
pop
xchg
mov
inc
sbb
mov
out
popa
pop
and
mov
xchg
sbb
cmp
pop
mov
mov
pop
and
mov
or
iret
nop
push
pop
adc
mov
inc
sbb
lock
cmp
xor
xor
mov
scas
mov
iret
push
push
mov
sbb
or
push
cltd
sbb
fsubrs
pop
shlb
add
dec
pop
jbe
and
sub
rcrl
dec
dec
xchg
cmp
xchg
and
inc
mov
fucom
sbbb
lcall
mulb
mov
push
and
inc
orl
fimuls
mov
sub
and
or
pop
and
mov
filds
jae
shrb
icebp
mov
pusha
stos
outsl
bound
adcb
insl
movsb
push
imul
ss
jl
leave
stos
loop
mov
aaa
dec
les
dec
int3
in
xlat
shrl
call
cmp
and
xchg
or
jp
pop
push
pusha
outsl
pusha
imul
and
push
push
inc
mov
dec
or
dec
xchg
gs
push
dec
xchg
adc
mov
out
popa
xor
jecxz
add
fwait
xchg
mov
je
shlb
pop
test
paddsb
xor
xchg
lahf
leave
sub
mov
pushf
cli
push
arpl
fisttpl
push
lods
add
dec
stc
mov
sub
int3
mov
sbb
inc
or
mov
push
jle
ror
mov
mov
cmovge
imul
insl
stc
jl
mov
cs
test
xor
sub
and
sahf
adc
pop
lcall
int
pusha
sbb
pop
frstor
stos
fnstcw
and
jbe
lods
jg
popa
push
fisubrs
mov
fcmovnu
loopne
jne
fbld
mov
add
lods
push
mov
sbb
lahf
adc
xadd
ret
loopne
mov
jnp
sti
sub
loop
push
cmp
movb
arpl
or
cs
lods
cmc
cmp
scas
arpl
or
bound
inc
mov
mov
mov
dec
movsb
push
pop
mov
xlat
in
cmc
xor
push
popa
sbb
sbb
xor
jae
mov
inc
popa
stc
xor
jns
popf
xorb
lods
ds
aas
ds
icebp
rorl
orb
loop
sub
sbb
rolb
push
pop
jnp
mulb
jnp
lret
icebp
fs
sbb
iret
sti
cwtl
ret
aaa
rorl
or
xchg
mov
add
nop
outsl
dec
les
cltd
arpl
xor
xchg
inc
jg
leave
mov
sbb
and
sbb
mov
cmp
out
popf
ja
out
loopne
jmp
jnp
sbb
jo
pop
test
sbb
inc
in
push
vpaddb
int3
in
iret
hlt
and
push
lds
cwtl
ret
movsb
scas
jge
in
std
cmpsb
pop
insb
imul
fistps
aaa
dec
add
popf
xchg
insb
rolb
popa
cltd
daa
outsl
ljmp
adc
adc
loopne
add
xor
int3
aas
fisubs
repnz
pop
rolb
addr16
pop
jbe
sub
in
mov
stos
cmp
pop
xchg
sahf
cmpsb
ds
addr16
sub
add
dec
and
mov
arpl
inc
aam
mov
pop
out
aad
movb
clc
inc
mov
subl
fwait
push
negb
cld
stos
add
or
inc
sub
jno
pop
shl
sub
cmp
lret
lahf
cmpsl
inc
push
push
add
test
mov
sub
cmp
lahf
test
mov
into
fistps
ret
ja
dec
out
div
scas
mov
fsubl
adc
mov
xchg
icebp
movsb
cmpsl
in
mov
scas
fistl
mov
popa
aad
popa
into
jl
sbb
mov
call
popa
les
aad
cwtl
lods
mov
sbb
fisubs
push
pop
dec
push
pop
push
scas
dec
jmp
fisttpl
out
pop
jl
pop
movzwl
ss
ret
fimull
outsb
fs
stc
rcrb
fwait
inc
or
fcmovne
xor
jle
cmc
mov
mov
rcll
in
lods
push
adc
je
into
jnp
or
cmpl
push
dec
mov
rorb
jmp
aad
int3
pop
int
or
orl
pop
push
std
rorb
lret
fucomp
sub
xchg
sub
and
sub
movb
or
and
fsubp
and
sbb
in
arpl
xchg
cs
dec
lret
mov
and
mov
lahf
pop
mov
mov
jne
pop
jg
movsl
cmpsl
dec
ljmp
cmpsb
dec
fiadds
push
add
mov
aaa
shr
imul
mov
jns
push
inc
stc
out
jno
ret
out
push
mov
testb
jno
sti
ss
ds
xor
sbb
loopne
mov
je
add
stc
sub
xor
sbb
mov
mov
lods
movb
test
jo
mov
sahf
icebp
sub
cmp
and
scas
jae
cmovne
sbb
mov
mov
sub
loop
adc
fbld
push
cwtl
aam
pop
cmp
test
push
in
call
out
lret
push
pop
cwtl
nop
dec
pop
mov
stos
ja
push
fwait
int3
nop
mov
jmp
in
in
and
int
push
lahf
inc
cmp
lods
roll
rorl
mov
leave
lds
pop
iret
scas
jge
cmp
mov
adc
inc
roll
insl
scas
sti
inc
ds
xchg
xor
xor
or
push
and
je
shll
and
jecxz
mov
sub
push
fadds
mov
movsb
mov
ret
scas
push
sti
jl
mov
fstpl
and
add
lcall
lds
jae
mov
push
movsl
xor
lret
leave
or
je
inc
xchg
push
push
cmp
jecxz
in
mulb
adc
fidivrs
insl
in
pop
dec
xchg
test
stos
fisubs
das
xchg
sti
mov
jmp
shl
lret
pop
enter
push
adc
mov
in
or
or
xor
icebp
test
shl
push
stos
insl
jns
jl
out
loop
xchg
test
xchg
and
sbb
mov
lds
and
mov
pop
sti
mov
roll
popa
add
dec
xor
xlat
or
jmp
pop
inc
es
push
into
insb
cmp
aaa
inc
sub
test
or
mov
lods
js
out
push
jp
sbb
sarl
jbe
add
in
add
out
jl
jb
jl
gs
pusha
scas
xor
or
mov
int3
sub
add
sbb
icebp
lds
push
popf
scas
xor
mov
mov
fnstcw
inc
lret
cmc
push
daa
popf
data16
popf
roll
sti
and
sub
outsl
ficoms
movsl
daa
in
daa
pop
sti
adc
maxps
mov
sub
and
and
push
cmpsb
lods
push
jno
dec
ficomps
mov
cld
movsb
adc
push
movsl
jno
and
pusha
mov
cwtl
stos
mov
and
dec
scas
fiadds
icebp
jbe
mov
or
pop
div
mov
and
add
sub
sbb
mov
or
or
pop
add
mov
adc
inc
test
push
lea
movsb
imul
into
and
pop
dec
pop
leave
cmp
sti
xor
xor
push
ret
push
into
inc
popf
add
fldenv
xchg
stos
loopne
daa
ror
push
aad
push
jge
shl
into
or
jp
int
lret
inc
sahf
test
jl
testl
mov
push
int3
add
scas
gs
mov
adc
xchg
fwait
xchg
dec
rcr
xchg
inc
roll
in
ljmp
je
pop
sbb
loopne
and
mov
cli
sub
adc
aam
mov
lcallw
pop
sar
mov
mov
xchg
hlt
mov
ss
xchg
sahf
and
mov
mov
hlt
in
push
jp
adc
mov
in
bound
mov
aas
lret
inc
rcrl
xlat
or
rcrb
sbb
pop
pop
sbb
in
push
cli
jle
outsl
mov
pop
jl
or
push
xor
out
gs
pusha
or
cmpb
mov
adc
popa
pop
mov
jo
mov
nop
scas
lcall
xor
push
rcr
fnstcw
loopne
jmp
gs
inc
popa
icebp
ret
test
pop
aas
ficoms
mov
dec
das
fildl
imul
ja
xchg
lods
cs
in
add
nop
xor
sbb
push
mov
ljmp
mov
xchg
test
clc
jl
js
xchg
pusha
fldt
sbb
xchg
imul
push
jl
loopne
push
fimuls
push
mov
cmpsl
lods
ficoml
data16
dec
outsb
call
ds
push
outsb
push
enter
stos
repz
aad
add
out
addr16
lods
scas
bound
mov
les
pop
cwtl
scas
lret
cmpsl
sbb
sbb
subb
add
iret
xlat
andl
pop
loopne
push
push
push
sarb
adc
test
pop
ficompl
mov
popf
xorl
into
les
push
pop
cmp
xor
and
jecxz
and
pushf
loopne
lock
int3
in
adc
cmp
rclb
sbb
rcl
lock
push
sub
outsb
mov
or
mov
call
push
stc
fdivs
clc
imul
fldt
iret
jmp
rol
lahf
xor
ret
push
mov
adc
jnp
inc
sbb
fsts
bound
cmp
stos
pusha
or
loop
cld
and
idivl
xchg
inc
dec
pop
sti
mov
sbb
mov
and
jo
xchg
into
sub
fisubs
ret
hlt
dec
jno
mov
scas
divb
mov
pop
mov
lds
fbstp
jle
shll
sub
lds
sub
fcmovne
mov
push
and
icebp
dec
sbb
sub
jge
xchg
bound
pop
ror
dec
push
mov
cmpsb
lods
arpl
std
sub
popa
movsb
pop
jecxz
fistpll
jecxz
and
and
iret
pop
and
dec
and
add
jmp
xor
jge
pop
mov
xchg
mov
mov
pushf
scas
lods
mov
sbb
and
xchg
and
mov
xorl
outsl
lret
push
pop
in
mov
imul
scas
push
int3
jnp
inc
repz
movsl
std
clc
mov
es
testb
test
inc
dec
shll
cld
adc
pushf
imul
bound
xchg
fidivrs
xchg
scas
mov
xchg
add
xor
in
in
ja
jns
rolb
bound
insl
inc
dec
dec
jns
fcmovbe
lea
sti
aad
mov
int3
or
cltd
aad
jmp
or
pushf
int3
call
pop
lret
and
into
sbb
and
push
out
imul
test
iret
push
outsb
clc
shr
adc
cmp
inc
jae
xchg
pop
das
xchg
inc
jno
mov
jnp
das
inc
fsubrl
cmpsl
lahf
das
xor
push
and
ficoms
sub
loopne
xlat
stos
jne
inc
or
fwait
sti
push
into
loopne
int
mov
jecxz
test
outsl
insl
add
je
and
sbb
shl
inc
xor
mov
inc
fistpl
test
lods
pop
int3
pop
cltd
hlt
adcl
call
hlt
mov
bound
bound
dec
sbb
sahf
push
popa
pop
imull
adc
outsl
std
addb
aam
sahf
ret
iret
loopne
cld
jns
mov
das
pop
loopne
sbb
sbb
and
lret
push
sub
fnstsw
adc
roll
insl
ret
xor
jb
add
cwtl
xorl
call
jbe
lods
mov
out
sbb
pop
and
ja
gs
popf
push
xor
iret
in
lret
rcll
sbb
lret
imul
or
lret
mov
testl
clc
loopne
shl
int3
add
xchg
and
mov
into
push
lds
divl
adc
aas
movsb
sbb
jbe,pn
jle
add
xor
lret
jae
shlb
call
xchg
mov
xchg
or
in
xor
fildl
and
fisttpl
dec
sahf
stos
scas
push
nop
fucomip
jae
leave
cwtl
inc
popf
aas
and
adc
pop
int
stos
int3
xor
jl
fists
jns
xchg
std
inc
scas
lds
dec
push
arpl
arpl
lods
mov
and
hlt
ja
cmp
mov
and
das
push
xor
dec
popa
or
lock
frstor
data16
clc
bound
jmp
hlt
gs
into
mov
jo
push
or
xchg
jge
js
mov
sbb
pop
bound
js
xor
cmpsb
cmpsb
add
fisubrs
ret
lods
call
sti
dec
outsb
sub
jle
movsb
inc
adc
mov
sbb
ret
jnp
lret
outsb
xor
out
mov
sahf
aad
jg
daa
into
sbb
push
mov
stos
cwtl
jle
ss
sti
mov
cltd
fimuls
jne
lds
push
loopne
and
ret
fsubrp
add
mov
cmp
xorl
xchg
pop
mov
out
inc
shll
mov
adc
jg
jae
and
aam
adc
out
xor
into
test
mov
mov
loop
push
rcl
inc
xor
xor
inc
xlat
and
xchg
mov
lds
or
cld
mov
and
fcomps
mov
and
bound
test
and
insl
movsl
std
inc
cwtl
and
lods
movsb
test
loope
inc
sbb
xor
sub
jnp
roll
cmp
dec
mov
push
push
enter
clc
call
xchg
push
lea
test
insl
mov
mov
fsubl
adc
sbb
imul
sahf
adc
in
cwtl
movsl
pop
jmp
shll
push
std
xchg
fsubrl
ja
pusha
dec
fs
cmp
mov
sbb
pop
fbld
out
in
inc
loopne
insl
movsb
cs
fucomip
shll
inc
inc
pusha
data16
jg
sub
pop
mov
cmp
push
pop
insl
adc
cmc
lods
das
imul
aas
mov
push
stos
je
xchg
movsb
lods
dec
loopne
je
filds
movsb
rolb
hlt
test
mov
iret
cld
rol
mov
and
mov
xchg
and
ret
data16
dec
push
arpl
adc
cs
add
test
xchg
xchg
pop
pop
xchg
lahf
fisubs
pop
xchg
fidivs
sti
pushf
aas
pusha
xlat
popf
lret
jp
int3
mov
stos
insl
pop
dec
mov
sub
sbb
and
daa
movsb
or
push
fsts
pusha
mov
sub
push
cmp
lods
outsl
outsb
xor
into
lahf
stc
pop
push
movsb
lahf
xchg
cmpsl
leave
mov
dec
mov
cmp
loop
repnz
sti
andb
sub
inc
mov
fimuls
testb
clc
lods
scas
outsb
xor
aaa
lcall
in
adc
xchg
mov
push
addr16
lock
inc
fsubrp
les
out
testb
clc
lods
add
cwtl
int3
sub
lcall
lret
mov
mov
cmp
or
aad
fucomi
stos
mov
sub
insl
mov
adc
xchg
cmp
inc
roll
decl
adc
jle
in
out
lret
mov
in
lcall
sub
sub
insb
lods
loope
lcall
pushf
loope
lods
lock
add
ret
pushf
loope
lods
inc
lret
and
xchg
lds
mov
mov
xlat
ds
mov
cmc
pop
pushl
imul
xlat
push
push
adc
xor
rolb
mov
ss
setl
jle
scas
test
ss
loopne
ret
in
fisttps
jmp
lods
push
rcll
mov
lods
jmp
js
and
movsb
popa
push
cmp
and
fsubs
xchg
ret
inc
and
imul
xlat
ds
mov
sbb
push
push
into
ds
js
jmp
fs
stos
insl
sub
es
ds
es
arpl
movsb
push
hlt
inc
outsb
ja
in
insb
es
fisubrs
clc
dec
in
ljmp
mov
pusha
jb
shrl
pop
fisttps
in
enter
test
mov
ss
scas
xor
clc
gs
pop
je
repnz
in
jge
cmp
jbe
xor
dec
fisttps
js
arpl
xchg
cwtl
stos
mov
lret
in
scas
cmpsl
mov
pop
iret
adc
cmp
or
rep
pop
adc
mov
inc
mov
mov
test
pusha
imul
movsl
mov
xchg
ror
cmp
mov
push
xchg
xor
inc
insl
lock
outsl
xchg
mov
mov
push
push
cmpxchg
cmpsl
or
xor
gs
gs
mov
xor
add
fwait
sbb
cwtl
mov
call
mov
xorb
push
pusha
insb
int3
mov
push
jbe
mov
sbb
lods
push
fbld
std
das
test
shll
testb
cmpsb
fwait
and
push
cld
adc
shl
cmp
cmp
shr
ljmp
sahf
negb
mov
loop
adc
negb
mov
les
fiadds
pop
cmp
daa
xor
push
xchg
test
and
mov
lods
hlt
and
adcl
jg
xor
in
shrl
ds
or
push
fisttps
push
pop
sub
ds
and
mov
daa
inc
mov
subl
mov
mov
movsb
gs
pushl
daa
xchg
cmpl
out
rorl
aaa
outsl
push
popa
rolb
inc
ficomps
aaa
sti
popa
rcll
jae
xchg
mov
sub
jno
pop
jns
lea
ja
pop
ja
adc
or
adc
mov
dec
scas
loopne
pop
movsl
into
out
adc
es
sub
ror
jbe
pusha
lret
scas
push
and
pop
loopne
aam
das
push
aad
out
aas
loopne
xlat
sub
clc
fidivs
fidivrl
mov
add
inc
push
mov
mov
repz
sub
pop
push
adc
je
hlt
push
lods
fwait
jecxz
bound
jl
pop
mov
test
loopne
cmp
aaa
leave
cs
jecxz
push
xchg
lret
lret
test
int3
int3
fs
int
out
into
clc
xlat
iret
add
push
iret
stc
repnz
cmpsb
xchg
adc
fsubrs
add
push
cmovbe
ja
scas
and
xor
shrl
cmc
pop
jmp
xchg
pop
xchg
test
push
jl
xchg
push
sbb
lcall
aad
xchg
and
push
xchg
test
ds
mov
movsl
mov
xor
mov
and
or
sbb
add
sub
and
adc
add
ja
addr16
mov
mov
cmpsb
cmc
fs
or
aaa
out
ljmp
mov
jmp
adc
movsb
scas
pusha
out
push
lods
jae
ret
dec
pop
jae
mov
icebp
cmpsl
fs
ret
add
dec
jne
roll
add
bnd
lahf
xchg
jo
vmovups
mov
push
dec
xor
iret
push
jl
popa
lods
push
aam
inc
loopne
andb
fisubl
xor
mov
js
mov
leave
and
pop
cwtl
pusha
rcll
fs
mov
clc
arpl
adc
sub
sub
mov
jnp
cltd
bound
lods
call
repnz
loopne
mov
mov
out
insb
imul
das
test
loop
ficomps
xor
adc
pop
cmpl
stos
data16
mov
sbb
loopne
bound
jl
or
neg
loopne
and
cmp
idivb
imulb
jmp
inc
pop
stos
into
inc
pop
int3
jp
mov
xchg
and
lret
jo
daa
insb
fdivr
dec
xchg
jne
mov
mov
pushf
sub
jno
jp
stos
pushf
das
or
pop
lods
scas
adc
lcall
push
mov
pop
movsb
sbbl
or
stos
cli
lret
loopne
lds
std
les
scas
ljmp
jl
push
push
outsb
iret
cwtl
stos
stc
cmp
imul
sub
loopne
repnz
add
and
sub
and
cli
inc
shr
jecxz
rolb
enter
lods
insl
in
mov
cwtl
cld
add
loopne
ljmp
mov
pusha
pop
pop
mov
cs
xor
sub
and
les
or
rcr
jbe
xor
adc
test
push
aas
loopne
dec
and
xor
mov
popa
aad
dec
lock
mov
out
shll
add
and
aas
movsb
negl
test
push
fxch
pop
xor
push
push
int3
jno
mov
fs
sbbb
test
lahf
push
test
fisubrs
ret
and
cli
sbb
popa
jnp
int3
sbb
arpl
nop
addr16
punpcklwd
push
ja
xlat
jle
push
ja
test
cmpl
pop
int3
ja
xor
iret
push
inc
loopne
jno
loopne
xchg
aaa
andl
push
int3
mov
fs
loop
xchg
inc
push
popa
and
js
aam
fsts
xchg
or
push
xchg
push
test
cwtl
lret
adc
mov
test
mov
loopne
cmpsl
and
int3
cmpsl
popa
fdivrl
imul
dec
mov
inc
mov
add
push
int3
rcl
mov
les
mov
loopne
cwtl
lret
ljmp
mov
pusha
mov
js
xor
in
mov
imul
mov
loop
push
lods
inc
rcrb
loop
loopne
xlat
and
mov
insl
or
loopne
shl
loopne
xlat
inc
fistpll
movsb
lods
xlat
shld
js
repnz
call
sbb
arpl
loop
repnz
lret
ljmp
call
imul
jnp
scas
call
ret
jge
and
ficoms
cltd
sub
mov
mov
and
pop
xchg
pop
push
mov
pusha
in
mov
jmp
ds
rorb
pop
or
adc
or
cmc
daa
les
inc
mov
push
mov
lods
adc
xchg
or
mov
jmp
adc
popf
or
push
shrl
sbb
js
or
test
out
push
xor
xlat
fcmovbe
outsb
sbb
test
xor
loopne
sub
arpl
sub
icebp
lock
sub
int3
and
stos
mov
and
sbb
in
roll
add
inc
lahf
sbb
xor
mov
pop
in
sbb
xor
inc
aas
push
or
adc
lock
in
mov
mov
inc
shll
ljmp
jl
imul
inc
inc
jbe
push
aas
loopne
dec
and
mov
dec
jmp
and
imul
js
add
in
add
mov
je
fs
inc
cwtl
imul
or
sbb
scas
xchg
in
jb
lret
adc
imul
jb
movsb
mov
push
rorl
mov
es
mul
sbb
movsb
loopne
ds
daa
repnz
add
dec
mov
jno
js
cmc
cmp
ljmp
lcall
incb
cmp
out
sbb
xorb
push
jecxz
pop
test
adc
mov
insl
jle
daa
inc
into
gs
bound
pop
inc
ret
inc
repnz
dec
inc
lret
jo
mov
cmp
in
sbb
mov
outsb
lret
xchg
jl
or
bnd
inc
mov
pop
inc
add
sbb
int3
and
pop
add
shll
xchg
aaa
shll
jl
cmp
and
sahf
xchg
imul
mov
or
push
movsb
loop
repnz
add
cwtl
test
repnz
lods
push
idivb
addr16
cmp
sarb
cwtl
aas
sub
popa
repz
mov
cwtl
inc
in
stos
adc
xchg
loopne
jp
test
cwtl
and
movsl
popf
fistps
inc
mov
bound
movsb
lahf
push
test
xchg
jecxz
cmp
scas
xchg
test
cmpsb
les
in
fwait
ss
cmp
dec
jbe
stos
mov
data16
pop
mov
fcomps
adc
push
sbb
jmp
xchg
int3
int3
mov
mov
mov
ret
xchg
cmp
adc
gs
mov
xchg
xorl
pop
jecxz
bound
pusha
loopne
and
fwait
test
lds
lods
mov
pop
inc
data16
and
sbb
push
clc
add
rorb
pushf
pusha
in
pop
and
arpl
mov
mov
shrl
int
push
fbld
shl
jl
pop
lods
pop
into
jmp
jne
dec
int3
test
lds
fisubl
enter
push
mov
inc
rolb
insl
xchg
mov
imul
pop
addl
lds
enter
enter
or
sbb
clc
pusha
aam
push
mov
pop
out
scas
add
xorb
das
jmp
xor
jnp
xlat
sbbb
out
scas
cmp
push
and
fsubrs
repz
aam
add
mov
xchg
insb
mov
jmp
insl
imul
or
xchg
or
cltd
cmp
sub
jmp
mov
jns
aaa
adc
jnp
dec
ss
data16
das
mov
mov
adc
xor
jmp
cwtl
mov
bound
mov
push
ffreep
add
jbe
cld
popa
popa
mov
test
fnstsw
das
js
movsb
mov
movsb
imul
adc
daa
mov
inc
dec
ljmp
mov
or
cmp
std
fists
mov
call
fists
int3
fwait
int
outsl
fsubrl
icebp
pop
in
add
out
xchg
xchg
adc
mov
cmp
sub
and
loop
fidivrs
xor
xchg
fcoml
imul
bnd
pop
and
inc
std
jge
int
and
xchg
aad
and
jbe
xchg
ja
loopne
xor
or
sarl
movsb
call
sbb
out
sbb
stos
sbb
and
mov
test
sbb
out
iret
sarl
fcompp
imul
sub
gs
sub
sbb
jg
test
sub
push
ljmp
pop
es
sub
or
cmp
xchg
cld
push
dec
sub
xchg
push
dec
sub
push
aas
ljmp
pop
or
add
inc
imul
inc
mov
xchg
std
movsb
dec
cmp
mov
cmp
stos
mov
cmp
adc
and
fdivs
sti
sbb
loopne
dec
push
cmp
jnp
je
lods
mov
sub
jnp
mov
sbb
dec
sbb
push
inc
jp
insl
sbb
lds
stos
push
xchg
sub
imul
cmpsl
sbb
jo
inc
pop
pushf
adc
sub
cmp
jmp
repnz
dec
xor
ret
or
test
mov
jl
mov
std
lock
pop
and
pop
imul
cmp
jb
jae
mov
pushf
dec
test
dec
imul
inc
imul
ret
imul
mov
pop
add
and
nop
mov
mov
ljmp
sub
imul
mov
inc
int3
adc
sub
sub
rorb
pop
pushf
mov
pop
xor
in
cli
xor
add
sub
outsb
mov
shlb
mov
or
dec
mov
daa
fstl
fimuls
mov
sbb
xchg
mov
shll
sbb
test
sub
cmp
sub
sub
ja
call
arpl
repz
or
sub
lcall
dec
jo
pop
xor
sub
add
jge
pusha
xor
test
xchg
sub
popa
movsb
ret
pop
push
xor
popf
arpl
ret
xchg
sub
xor
pusha
inc
sbb
mov
rcrb
dec
mov
add
shll
sbb
cld
and
mov
lods
sahf
sub
test
and
sub
mov
xchg
mov
into
popa
in
adc
pop
hlt
in
pop
in
cmp
int3
cwtl
mov
adc
lret
fnstcw
push
mov
xchg
sub
pop
xchg
mull
loopne
xchg
mov
les
xchg
mov
int3
das
mov
adc
lret
sub
test
sub
add
and
lret
add
sbb
jl
mov
jbe
sub
or
mov
les
lods
js
inc
adc
mov
jmp
lahf
or
jge
sub
movsb
jbe
imul
call
and
mov
test
jg
xor
dec
pop
fldt
ljmp
jae
loopne
push
xchg
add
aas
sub
mov
cmpsl
dec
fists
nop
ja
call
and
dec
mov
filds
sub
cwtl
popa
inc
aas
sub
mov
pop
dec
fbstp
mov
rolb
xchg
xchg
add
ds
mov
sub
mov
push
into
fs
jno
ficomps
notl
sub
lock
fwait
pusha
add
push
das
sub
sbb
mov
ffreep
fs
scas
push
sub
dec
xchg
mov
fsubr
leave
sub
data16
pop
inc
sub
lret
into
cs
push
adc
mov
idiv
das
xchg
bound
popf
ja
pop
mov
fiadds
sub
iret
arpl
jb
popa
add
ds
test
push
mov
push
movsl
or
clc
sub
and
int3
adc
pop
cmc
xor
cwtl
movsb
stos
xor
gs
cld
push
cmp
or
xchg
arpl
push
push
arpl
adc
dec
mov
test
loop
ficompl
add
divl
pusha
mov
mov
push
test
xchg
stos
stos
push
and
mov
xchg
add
pusha
mov
mov
mov
shll
cli
out
rol
lds
lods
ds
sbb
mov
pop
dec
mov
rcl
pop
xor
cmp
fidivrs
mov
mov
xor
push
add
push
push
fists
daa
bound
lods
jbe
sbbb
iret
imul
mov
pop
ss
pop
adc
mov
cwtl
xchg
pusha
sub
sbb
fstpl
jl
outsb
dec
test
mov
xchg
aad
adc
mov
pop
mov
add
jnp
push
xchg
movsl
mov
iret
repnz
inc
inc
popl
loopne
push
mov
mov
inc
xchg
inc
inc
fisttps
dec
mov
in
repz
cmp
push
fmull
outsl
mov
dec
push
imulb
dec
mov
leave
mov
hlt
push
xchg
and
imul
lret
aad
add
stos
int3
les
shll
lea
or
cmpsl
xchg
cld
repnz
lea
lret
fbstp
xchg
dec
xor
mov
inc
jg
sbb
shrb
lahf
mov
lahf
lods
sub
dec
xchg
sub
scas
mov
daa
pushf
loopne
sub
shrb
sbb
add
std
push
jbe
in
mov
aam
fdivrp
lret
sbb
push
adc
imul
js
dec
jg
aam
add
mov
in
les
in
or
or
push
lcall
in
pop
jbe
adc
pusha
ret
out
inc
push
adc
ljmp
out
mov
adc
adcl
push
jmp
jo
jae
imul
jmp
repz
mov
cltd
xchg
mov
adc
jp
in
int3
cmp
test
xchg
xchg
imul
loop
mov
movsl
sbb
cmp
jmp
loopne
sar
ss
mov
sub
pop
movsl
ds
das
popa
arpl
sti
sub
scas
or
aaa
adc
fbstp
scas
cmpsb
cmp
in
sti
mov
out
xchg
mov
mov
push
dec
or
outsb
jecxz
pop
in
xchg
mov
sahf
mov
cmovge
rcrb
les
hlt
lahf
movsb
jmp
dec
call
or
jl
fs
js
sub
mov
aam
xor
add
pop
and
mov
push
sbb
or
test
loopne
inc
mov
inc
rol
pop
push
mov
or
scas
out
inc
jo
aam
icebp
shll
pop
add
push
push
popf
mov
mov
sub
fwait
stos
push
nop
cwtl
cmpsb
push
in
dec
sub
adc
out
int3
mov
push
or
and
push
cmpsb
cmovae
pop
sbb
and
loopne
mov
sub
incb
sti
leave
adc
or
mov
test
mov
inc
loop
lret
sbb
sub
out
add
inc
jb
dec
push
ds
mov
mov
sub
and
sti
xchg
pusha
mov
sahf
sti
sub
adc
jmp
pop
cmp
jns
mov
mov
xor
pushf
aam
sbb
jns
pop
or
outsl
add
sub
ret
out
inc
inc
add
sbb
lods
loopne
push
jmp
test
mov
mov
pop
popf
popf
repz
fisubrl
nop
inc
mov
stos
imulb
dec
mov
call
dec
fucomi
insb
jl
cs
push
fsubs
rcrb
movl
or
fbstp
mov
inc
pop
fidivs
ret
pop
in
subl
inc
jb
popf
dec
shll
movsb
dec
pop
pop
and
es
lahf
jle
stc
jl
lods
in
add
stos
scas
and
data16
movsb
inc
imul
inc
xchg
jl
mov
mov
outsb
mov
sub
in
cs
fistpll
js
mulb
mov
clc
pusha
mov
fwait
test
or
dec
fbstp
ret
or
jno
push
bound
ficoms
aas
stos
stos
aas
outsl
push
cli
bound
jnp
xor
iret
in
addr16
add
inc
cmp
das
add
jl
or
iret
addr16
dec
mov
aas
bound
cmc
lds
push
lock
imul
movsl
and
test
stos
lret
outsb
mov
xor
sbb
and
in
bound
adc
cmp
mov
ja
mov
xor
in
dec
gs
rol
adc
mov
pop
es
xchg
dec
pop
or
fsubrp
cmpsb
les
jg
mov
pop
fwait
imul
lock
loop
mov
inc
mov
and
shll
push
jb
add
inc
icebp
movsb
jle
xor
test
pusha
das
mov
mov
loopne
mov
out
stos
aad
stos
add
add
push
lds
xchg
popf
lods
imul
xor
loop
push
test
mov
lds
sub
xchg
ss
pop
icebp
add
push
cmpsl
adcb
mov
out
ja
cmpsb
pop
daa
adcb
scas
xchg
mov
and
divb
and
not
dec
mov
cwtl
lret
movsl
xor
push
cmp
fisubrs
lcall
loop
fidivrs
push
dec
fs
loopne
pop
cmpl
lret
test
out
push
lock
sarb
mov
and
pop
addr16
daa
lret
cmp
mov
mov
xchg
push
or
fs
leave
mov
movsl
and
bound
inc
in
adc
jg
lret
jne
lret
inc
scas
mov
stc
shll
out
shlb
jne
mov
icebp
pop
hlt
inc
out
data16
ss
pop
nop
dec
out
jns
daa
stos
sub
int3
test
xchg
push
fistpll
dec
jl
fsubp
stos
nop
movswl
in
dec
push
aas
stos
std
ret
lahf
call
in
push
jg
aad
pop
dec
push
mov
jnp
leave
push
pop
and
lods
movsb
and
stos
loopne
in
mov
mov
in
mov
gs
lods
jecxz
mov
repz
cltd
int3
cld
aad
cld
jge
rorl
and
aad
aam
or
sub
xchg
int3
lods
out
push
outsb
dec
xchg
xor
xor
in
fucomip
test
imul
sbb
xchg
mov
movsb
or
add
int
or
sub
adc
pop
mov
add
lret
mov
icebp
push
in
push
in
jne
mov
push
or
xor
xchg
pushf
sbb
mov
mov
xor
stc
mov
enter
fists
jbe
mov
sbb
ret
and
test
adc
mov
insl
shl
nop
sahf
stc
pushf
mov
pusha
mulb
aad
sbb
jae
vcvtps2pd
lods
and
shr
out
popa
shrb
nop
push
inc
fildll
xlat
sub
jmp
bnd
sbb
sub
push
cli
xlat
pop
dec
mov
loopne
push
jae
mov
pop
fidivs
sti
mov
cmpsb
fwait
into
adc
scas
cmp
fmul
rcr
jge
mov
int3
pop
ficoms
lods
push
jle
lods
lock
xor
nop
pusha
adc
rorl
or
push
sub
icebp
sub
loopne
ljmp
inc
mov
sub
push
or
loope
icebp
scas
fistpll
mov
sti
mov
xchg
orl
or
mov
daa
dec
jl
jle
popf
pop
imul
xor
dec
or
dec
pop
push
push
movsb
shlb
xor
enter
sub
pop
sub
sbbb
out
pop
mov
xchg
cwtl
dec
adc
lds
pop
mov
mov
sahf
dec
mov
in
xor
push
mov
pop
cmp
movsb
push
pop
aas
mov
mov
movsb
sbb
test
gs
fsubs
pop
push
cli
sbb
pop
mov
std
dec
pop
and
in
aas
xor
shll
push
cmp
add
loopne
mov
loopne
insb
shll
xor
jae
inc
xlat
fisttpl
lea
mov
adc
fwait
mov
fisubs
fwait
je
mov
mov
and
inc
pop
in
insb
outsb
mov
mov
loopne
test
mov
lahf
mov
clc
or
mov
mov
sbb
jp
cmc
adc
das
dec
inc
test
pop
fld1
dec
add
sti
pop
sub
fisubs
movsl
inc
cld
ret
scas
out
into
jns
mov
repz
mov
mov
lcall
subl
inc
mov
cmp
pusha
jne
adc
loop
hlt
rorl
dec
cmp
sub
aad
imul
lret
pop
mov
hlt
cmp
mov
fstpl
cmp
adc
mov
shrl
inc
and
sub
lock
mov
ja
push
jnp
outsl
das
mov
fbld
xor
je
pop
jns
pusha
cmpsl
mov
jg
cmp
cmc
sbb
stos
mov
fs
call
add
mov
and
jne
cmp
sti
inc
movsl
arpl
jge
outsl
sub
xchg
test
insb
jne
pop
lret
fwait
add
jno
cwtl
inc
dec
mov
jb
mov
xchg
jecxz
aas
hlt
lock
int3
dec
popa
jge
fisubs
js
jecxz
jge
jns
imul
pop
xchg
stos
lret
das
add
dec
gs
js
loopne
adc
outsl
dec
inc
mov
shlb
mov
leave
addr16
mov
push
mov
fisubs
pop
add
les
jecxz
lcall
or
loop
cltd
cld
inc
ljmp
bound
aad
and
stos
pop
aad
scas
xor
lods
and
inc
aas
lods
into
push
int
aad
sub
push
insl
cmp
fisubs
xchg
in
mov
cltd
aas
bound
loopne
inc
mov
imul
fists
std
rclb
std
outsl
adc
lds
sub
inc
or
std
test
out
add
jbe
bound
loopne
js
pop
pushf
jns
out
jp
loopne
jnp
jl
jl
fs
jg
mov
jl,pn
imul
or
sub
ror
es
ja
mul
out
fs
sub
je
adc
xchg
test
push
stos
icebp
mov
xlat
add
out
push
mov
pop
popa
ficompl
frstor
mov
gs
cmp
imulb
add
daa
cs
iret
push
cmpl
test
outsb
loop
out
fsub
add
arpl
cli
lods
shlb
data16
and
ljmp
out
loopne
gs
arpl
aaa
add
ds
xor
arpl
rol
cwtl
xor
imul
sahf
jno
mov
xor
in
in
add
lret
rclb
mov
iret
sbb
adc
call
mov
push
in
inc
push
mov
cmpsl
popa
bound
xchg
pop
mov
and
sarb
or
xchg
lahf
add
hlt
jb
fistpl
xchg
adc
scas
gs
js
loop
pop
dec
pop
xchg
sahf
pop
push
mov
inc
test
leave
test
jp
fwait
mov
in
outsl
push
cmc
scas
pinsrw
clc
sub
jl
xchg
scas
jecxz
mov
sahf
mov
or
push
dec
inc
insb
xorl
add
dec
xchg
and
aam
das
add
fyl2x
ja
enter
insb
addr16
imul
adc
stc
push
jg
dec
movsl
aam
call
sub
fcmovb
int3
int
cmpsl
mov
bound
test
bound
mov
cltd
scas
mov
adc
insl
nop
ljmp
adc
fwait
push
aaa
sarl
mov
cmp
xchg
fisubl
pop
loop
pop
or
mov
out
and
loopne
fwait
sub
inc
push
repz
pop
pop
cltd
lret
inc
adc
icebp
xchg
and
pop
mov
and
xchg
ja
xchg
aas
push
sbbb
loopne
cli
lret
aad
mov
filds
add
out
mov
shrb
jl
or
clc
scas
cmp
shl
mov
testb
cmp
faddp
mov
insl
mov
jge
int3
cs
cs
cmc
pop
roll
add
mov
mov
into
and
mov
rclb
add
xor
adc
xor
mov
add
jb
xchg
out
mov
ucomiss
cmpsl
cwtl
stos
or
stc
rorl
popf
xor
cmpsl
jle
push
lret
and
jp
pusha
in
pop
or
out
mov
sbb
push
testb
popa
aam
dec
dec
pop
mov
pop
xor
iret
fstpt
bound
jns
xchg
popf
mov
mov
lret
dec
pop
mov
mov
insl
cld
orl
test
ja
sbb
mov
xchg
sbb
aaa
and
lods
rolb
jne
testl
pop
inc
orl
xor
lret
stc
push
out
imul
sub
mov
mov
sar
iret
adc
test
mov
push
rol
mov
mov
mov
aas
push
push
jl
push
aad
outsb
fldenv
pop
mov
sarl
mov
stos
rcl
or
jmp
mov
aas
mov
and
int
fisttpl
mov
rcl
insb
in
insb
call
int
xchg
cs
inc
out
sub
dec
adc
push
ror
test
mov
cwtl
lods
mov
jns
rcrb
gs
fucom
jb
test
stos
jns
test
pop
dec
jge
movsb
push
fnstsw
filds
pop
adc
call
sbb
in
ja
iret
lret
cmp
stc
push
jle
push
lods
ret
mov
add
inc
mov
lods
stos
or
ljmp
jg
icebp
mov
test
pop
add
lock
sbb
lret
push
imul
out
pop
xchg
incl
mov
add
aas
dec
xchg
jg
negl
jp
hlt
or
lea
stos
adc
int
xor
out
scas
imul
mov
ret
fisttpll
loopne
daa
push
insb
adc
into
dec
adc
aas
cmpsl
fisttps
jbe
sti
pop
enter
push
outsl
addl
or
adc
roll
sbb
aas
adc
jmp
dec
popf
sti
dec
and
sub
cmpsb
cli
jge
pop
xor
pop
mov
rcrl
shl
fstps
data16
pmullw
ud0
test
xor
push
fs
xor
mov
cwtl
movsb
dec
dec
cmp
jp
lahf
pop
out
in
cmpsb
fcmovu
jno
loopne
out
loop
rorb
sub
push
pop
jg
push
pop
adc
pop
imul
inc
cltd
inc
lahf
jno
sarb
out
imul
push
and
push
and
pop
shr
pop
inc
or
fisubs
or
clc
xor
sub
xor
into
pusha
fbstp
mov
out
aas
inc
pop
pop
pop
xor
out
lret
mov
scas
cld
mov
jl
sbb
out
stc
mov
loop
daa
insl
push
and
repnz
mov
das
test
and
mov
adc
push
sti
sbb
fwait
and
stc
movsl
loop
push
pop
popa
popf
lods
icebp
rolb
bound
jle
sub
or
jg
leave
sub
into
or
add
jne
mov
stos
push
shrb
ljmp
sti
pushf
inc
int
pop
pop
and
lahf
insb
sar
addr16
mov
test
cs
push
mov
inc
cs
inc
push
dec
loopne
and
bound
cmp
inc
and
lret
aad
imul
pop
gs
test
or
cmp
xchg
mov
je
cmp
adcl
sbb
mov
add
cli
add
jg
loopne
in
cwtl
les
popa
test
pop
aas
iret
ficomps
pop
pop
aad
lds
imul
pop
mov
or
mov
mov
cs
pop
xchg
pop
lods
cmp
inc
sub
mov
clc
call
pop
call
ret
fs
fstpt
aas
ffreep
jle
loopne
call
pop
lods
pop
sub
jbe
pusha
inc
cwtl
stos
int3
sub
pop
push
mov
mov
lret
cmp
cmp
add
push
mov
in
pop
scas
cmp
inc
mov
outsb
cmp
jg
mov
jnp
movsb
xor
ficoml
inc
cmp
pop
pop
ss
in
push
and
out
fistpll
fisubrl
gs
ja
or
xor
repnz
and
push
pop
loopne
and
aam
cltd
insl
mov
scas
sub
mov
pop
dec
push
outsl
pop
stc
push
jo
pop
mov
inc
arpl
scas
mov
xchg
pop
pusha
in
stos
lret
int3
in
decb
jbe
xor
cltd
inc
push
in
es
mov
cwtl
daa
push
mov
ficomps
and
cmp
mov
xor
leave
mov
pop
movsb
pop
call
mov
push
loopne
shrb
jno
into
xchg
test
les
jb
or
adc
add
dec
push
outsb
je
popfw
loopne
das
cmp
popf
xchg
outsb
cmpsl
push
cld
nop
cmc
mov
jl
jae,pt
sub
add
cmp
loope
fcomps
popa
sbb
lahf
sbb
xor
inc
mov
lcall
lods
jle
lret
lds
pushf
aas
ss
add
out
into
push
insb
inc
sbb
inc
mov
pusha
cwtl
jp
push
mov
nop
shlb
dec
shld
jge
mov
mov
jle
fadd
bound
bnd
cmp
fwait
and
sti
add
mov
xchg
add
jle
fmulp
repz
or
mov
shr
out
cwtl
jg
and
jb
pop
xor
shrd
adc
out
xchg
out
shll
xchg
stos
mov
and
dec
in
dec
notb
das
pop
mov
rorb
jne
ja
inc
pop
and
int3
mov
les
aas
icebp
jp
mov
fists
out
push
idivl
cs
ljmp
mov
mov
incl
rcrl
scas
push
xor
lcall
mov
mov
icebp
pusha
mov
insl
mov
out
out
xchg
sbb
fbstp
repnz
pushf
mov
xor
addb
sub
sub
mov
cli
ljmp
xchg
icebp
xchg
jl
lret
jge
out
and
mov
mov
adc
push
sbb
sub
add
pop
sbb
cwtl
push
sub
clc
adc
push
imul
cli
out
jne
adc
mov
pop
ljmp
add
push
pop
mov
cld
ret
dec
jns
sbb
jecxz
les
les
push
call
int3
and
and
test
imull
cmp
mov
pushf
gs
mov
jns
sbb
out
jp
push
test
mov
repz
mov
dec
cmp
es
scas
or
cmp
in
shl
mov
in
mov
xor
cmp
frstor
and
mov
push
mov
lahf
adcl
mov
push
xor
pop
arpl
inc
int3
push
xor
cmc
lods
sbb
mov
ficoms
mov
mov
stos
sbb
xor
mov
pop
mov
test
xor
add
or
out
stc
lahf
and
rolb
push
jne
or
ret
lahf
dec
adc
cmpsb
xor
xlat
inc
sti
pop
and
and
imull
dec
pop
pop
stos
push
mov
inc
push
adc
fldt
aas
adc
mov
adc
dec
movb
and
add
fsubr
inc
xchg
dec
mov
sti
jecxz
mov
int3
popa
dec
into
sti
les
lahf
int3
out
and
add
icebp
rolb
inc
subl
mov
or
cmp
js
adc
loop
outsl
shlb
cwtl
shrb
les
mov
mov
shll
fstpt
lret
sti
or
sub
fisubrs
inc
popa
push
sub
jne
xor
push
add
repz
or
mov
aas
sbb
stc
push
inc
cmp
movsb
jmp
aam
mov
push
mov
add
lock
fdivs
jg
out
jl
test
jg
out
adc
hlt
xor
outsl
stc
cli
jae
sub
mov
xor
pop
iret
pop
test
lock
pop
mov
jecxz
and
inc
dec
xchg
mov
mov
popf
lret
mov
ret
std
push
sub
xchg
je
loopne
cwtl
and
xor
adc
arpl
push
inc
mov
fcompl
sub
mov
in
push
push
scas
lahf
mov
xor
ret
or
pop
cltd
sub
in
push
xor
xchg
push
imul
jno
scas
pop
rolb
icebp
lret
pusha
pop
push
stc
mov
loopne
jae
or
adc
push
jne
stos
shl
into
nop
jle
pop
or
cvttps2pi
mov
addl
test
xor
xor
popa
and
push
mov
push
push
fmulp
in
jp
sahf
lcall
mov
fs
mov
cmpsl
ret
and
cmp
std
sbb
adcl
push
adc
in
cmc
sar
sbb
push
inc
inc
adc
imul
dec
lods
repnz
xor
es
in
jne
xchg
jbe
xorl
cld
and
jl
xchg
test
jb
testb
js
lock
sub
sti
pop
sub
jp
add
inc
das
adc
cmc
mov
pop
setge
stc
stc
das
mov
or
loopne
insb
in
int
sub
add
aas
adc
das
jge
and
mov
inc
out
xchg
and
and
mov
mov
sbb
push
cmp
cmp
aas
outsb
cmp
push
cmpsb
test
loopne
icebp
popf
sarb
push
mov
fwait
pusha
popa
dec
mov
xchg
cmc
mov
bound
mov
insl
iret
lret
out
test
cmp
es
add
xchg
inc
jns
inc
pop
push
cwtl
pop
cwtl
inc
mov
adc
popa
pop
fwait
cmp
pop
setnp
das
pop
test
fstpl
test
lods
add
clc
xor
sti
xor
fisttpll
mov
push
outsb
sub
mov
or
jecxz
jbe
out
js
push
bound
int3
inc
push
shrl
out
inc
mov
mov
sbb
mov
pop
mul
int3
fstpl
loope
and
push
lret
jns
xchg
sbb
push
dec
rcrb
push
push
hlt
insb
sbb
rcrl
ja
mov
les
mov
rcll
inc
inc
or
mov
adcl
inc
ss
pop
sub
int3
sahf
faddl
and
dec
icebp
lcall
mov
fisttps
aas
loopne
scas
mov
int
cs
scas
rolb
pusha
loopne
ret
ret
mov
rcll
pop
rorl
stos
jp
outsb
inc
pop
jbe
pop
mov
sub
add
and
lods
pusha
outsb
pusha
dec
sti
sbbl
cmc
aas
ficomps
mov
and
das
rol
lock
ja
test
pop
fisubrl
cmc
jo
push
jb
jae
je
leave
test
lods
shrb
cwtl
fneni(8087
and
data16
cs
in
movsb
outsl
leave
xchg
pusha
xor
insl
jne
cwtl
cmp
in
shll
pusha
push
cli
dec
push
mov
aas
movsb
pop
pop
jmp
sub
pop
bound
cmp
jns
sub
sbb
ljmp
xor
and
xor
pop
shufps
adcb
inc
add
ja
mov
lret
or
fldenv
int3
cwtl
stos
mov
dec
imul
mov
dec
out
pop
dec
cmp
cmp
push
push
xchg
dec
and
mov
push
push
mov
mov
add
xchg
mov
cmp
nop
rolb
pop
into
ret
push
filds
inc
push
and
dec
fldl
call
into
fbld
js
sbb
push
shll
lret
mov
sub
mov
sub
mov
mov
cwtl
or
out
mov
les
lea
xchg
fiadds
andl
pop
jge
stc
lcall
lcall
inc
mov
mov
sbb
pop
imul
push
jbe
dec
ss
xchg
hlt
fidivs
or
mov
adc
fsts
mov
push
jecxz
push
xor
and
lods
and
hlt
sub
shl
imul
xor
int
or
push
xor
movsb
in
cmp
push
sbb
cmp
xor
aaa
imul
fisubl
hlt
dec
int
iret
mov
cld
outsb
dec
stos
nop
mov
cltd
pop
push
std
cltd
fcomi
shll
add
fwait
mov
enter
pop
test
jp
xchg
cmp
push
lcall
and
outsb
insl
push
ror
mov
dec
mov
or
mov
mov
xchg
je
pushf
jl
xchg
jmp
pushf
pusha
dec
jmp
into
jecxz
jmp
pop
lods
scas
out
sbb
fcmovnbe
push
jo
mov
test
jae
push
inc
inc
mov
jnp
ljmp
jg
push
xor
test
enter
or
lret
cli
mov
jne
jbe
mov
push
call
stos
ficompl
arpl
mov
outsb
fcomp
mov
jbe
addl
fildll
nop
mov
sahf
ljmp
imul
insb
fisubrs
call
sub
stos
sahf
and
stos
scas
adc
out
jns
test
jmp
lock
xchg
fsubrs
pop
cmp
je
rolb
dec
mov
roll
and
rcrl
insl
shlb
jo
and
inc
int
out
cmp
call
test
adc
add
pusha
je
sub
int3
ror
mov
add
enter
fadd
mov
sahf
push
lods
int
dec
mov
cmpsl
call
sub
shlb
bnd
pop
xchg
and
jmp
lods
movsl
loopnew
sti
mov
xor
fldl
out
insl
and
jecxz
movsb
ror
cltd
and
outsb
stc
fmull
xor
aas
cmp
xchg
cmp
scas
scas
cwtl
and
sub
jp
sahf
sub
mov
push
jnp
bound
xchg
push
loop
stos
dec
mov
test
nop
cmp
dec
iret
push
mov
test
sti
xchg
pop
scas
jns
loopne
add
out
push
or
push
pusha
das
test
pop
sti
int3
jne
xchg
pop
js
rcr
and
test
xor
in
mov
iret
mov
and
push
mov
iret
inc
dec
jmp
fsubs
test
jnp
push
fs
adc
into
push
test
shlb
cmpsb
and
and
add
arpl
mov
pop
popa
rolb
test
or
xor
adc
add
adc
clc
mov
in
loope
fstpt
in
dec
xlat
jle
mov
lea
lds
lret
ja
and
mov
cltd
test
movq
or
sarb
sbb
int3
lock
mov
pusha
push
pop
cmp
add
negb
cltd
add
mov
lods
outsl
pop
pop
test
push
or
test
test
test
js
add
addr16
inc
mov
xor
mov
rcrl
cltd
sbb
inc
pop
mov
sub
dec
push
lods
iret
loopne
sub
in
pop
push
out
dec
jnp
ds
loopne
out
push
imul
jb
shlb
dec
stos
insb
movsl
stos
jg
push
adc
in
outsl
mov
aaa
cmp
push
jle
in
call
into
sub
inc
lea
notl
sbb
xchg
and
inc
xor
dec
nop
mov
jae
pop
mov
cltd
push
mov
int3
pop
rorb
out
mov
pop
outsl
mov
call
mov
iret
pop
mov
jno
xor
push
jecxz
xor
es
stos
pop
sbb
adc
push
outsl
push
dec
sbb
int
adc
mov
call
leave
mov
dec
mov
setp
loopne
lods
push
in
les
sub
mov
lret
icebp
cmpl
pop
pop
fisubrs
adc
scas
je
dec
loopne
test
movsb
mov
inc
pop
sbb
lret
mov
shr
test
and
jnp
lcall
or
pushw
daa
dec
outsl
push
jle
lahf
pop
push
rolb
jo
cmp
into
mov
and
scas
mov
pop
jne
out
pushf
and
out
cltd
adcb
and
in
push
jnp
loopne
dec
popa
insl
xchg
sti
push
stos
lods
in
rorb
add
pop
mov
mov
mov
in
xor
and
sbb
push
mov
adc
fwait
mov
push
mov
mov
addr16
in
insb
pusha
out
cltd
outsb
iret
aam
lock
push
cmpsb
adc
inc
mov
jecxz
in
pop
fadd
inc
movsb
in
fildll
inc
aam
pop
lds
ja
inc
fsubr
shll
imul
aam
sbbl
into
jno
repz
jmp
fisubrl
or
sub
sbb
sub
cmp
iret
push
pusha
fmul
mov
stc
shlb
ret
in
lock
dec
mov
int
lret
mov
xor
in
and
pop
mov
or
xor
adc
or
push
aas
test
pop
and
dec
popa
sahf
bound
pop
les
jl,pt
jno
push
repnz
in
fdivs
mov
mov
out
test
add
jb
xor
sbb
scas
sub
loopne
sub
je
cmp
int3
cli
ja
adc
in
sti
ds
cwtl
mov
sub
mov
mov
mov
int
cmpb
lret
outsl
js
insb
imul
inc
or
sbb
shlb
dec
mov
mov
xchg
mov
push
xor
out
sbb
lret
test
in
dec
pusha
jmp
or
bound
cmp
loopne
ret
scas
jnp
adc
dec
and
inc
outsb
incl
mov
loope
sbb
push
mov
mov
cli
fildll
fldt
adc
insb
mov
imul
fsubrp
out
test
and
ficoms
mov
xchg
inc
mov
sbb
je
insb
nop
dec
and
mov
fs
loopne
xlat
jns
out
fiadds
test
mov
scas
mov
cmp
stos
outsl
aam
out
jae,pt
mov
dec
nop
test
and
das
xor
inc
aas
loop
bound
xlat
scas
pusha
fnstsw
ja
xchg
frstor
push
sbb
popf
sub
out
cmp
xor
lock
sti
insl
call
cmpsl
movsb
mov
xchg
jae
mov
mov
ror
bound
hlt
movsb
loope
scas
int
dec
jle
mov
in
aas
inc
sbb
or
in
xor
hlt
xchg
outsl
xchg
in
xchg
jle
fisubrs
sbbl
sub
or
sbb
push
jmp
mov
call
jecxz
dec
dec
add
shr
adc
in
out
cmpsl
or
pusha
call
sbb
ljmp
std
jns
cmp
adc
test
lock
sub
lcall
popf
push
add
dec
std
cmp
into
or
outsl
sub
xchg
xor
mov
jmp
ds
push
imul
sbb
or
inc
scas
into
lds
scas
rcr
cmp
add
xchg
xlat
int
pop
mov
bound
insl
lea
jnp
test
mov
pop
sahf
or
jno
enter
jns
inc
cmp
in
and
push
inc
arpl
pop
dec
jmp
mov
test
pusha
cmp
mov
fsubrl
insl
push
cmc
sub
stos
pusha
add
lods
data16
mov
mov
dec
xchg
jnp
add
outsb
cmpsb
out
mov
out
call
mov
test
sbb
jg
fcoms
data16
clc
pop
or
push
das
fnstcw
push
mov
jb
lock
xorb
dec
in
test
loopne
xchg
pop
mov
dec
mov
lods
lock
jb
mov
cmp
icebp
push
push
mov
sahf
fistpl
outsl
test
out
fwait
mov
andb
cmpsl
test
jno
lock
shr
das
mov
lea
in
test
inc
push
mov
or
fdiv
xchg
sbb
les
lret
pmaxub
sub
pop
test
insl
mov
xchg
scas
data16
pusha
dec
push
iret
int
les
adc
and
add
and
mov
mov
dec
loopne
les
or
and
imul
loope
xor
dec
pop
in
adc
lods
test
inc
cmpsl
cltd
adc
xchg
bound
mov
scas
cs
gs
jp
or
jg
repnz
jo
insl
fldcw
fildll
imull
jmp
or
stos
int
mov
adc
popa
outsb
inc
pop
stc
push
inc
mov
iret
mov
add
scas
bound
or
mov
out
cmpsl
pushf
jmp
sarb
sub
pusha
insl
test
adc
scas
jae
pushf
or
jp
push
pop
jge
sub
mov
aad
add
pop
jle
dec
inc
hlt
mov
lock
xor
push
push
in
mov
cmp
faddp
pusha
inc
adc
pop
ljmp
adc
in
xlat
and
cmpsb
pop
dec
mov
cmpb
rcr
addl
fs
pop
lods
outsl
lods
bound
hlt
ds
cmp
sub
pusha
and
xor
jnp
out
loopne
xor
das
scas
fisttpl
outsl
lret
jnp
push
inc
xchg
aas
jge
sbb
test
mov
bound
in
insl
mov
jmp
push
sti
lods
push
out
out
ljmp
addb
pushf
in
scas
and
jnp
cli
jo
jno
lods
add
push
outsl
jbe
lcall
pop
cld
outsb
fdivp
rcrl
pushf
ss
insl
jge
pop
iret
cmp
xchg
imul
cmpsl
sti
dec
repnz
mov
pop
mov
insl
mov
loopne
cmp
sub
arpl
repz
loopne
add
sbb
cmpsb
je
jnp
mov
das
bound
mov
aas
sarl
xchg
ljmp
ds
xor
and
lahf
fisubrl
in
or
inc
je
xor
fsubl
adc
repz
lcall
lods
xchg
insb
mov
rclb
mov
jp
insb
sbb
cmovns
mov
sarl
or
xor
idiv
outsb
xchg
in
fcompl
xchg
push
inc
cli
loopne
sarb
fstp
int
xchg
xor
mov
je
add
mov
pop
icebp
lods
push
mov
pop
sub
iret
push
bound
jecxz
outsb
mov
in
stos
mov
xor
inc
pop
repnz
pusha
dec
cs
stos
and
out
scas
xchg
xchg
jae
bound
dec
pop
fcmovnbe
inc
lods
rep
call
in
mov
sbbl
lock
daa
push
and
push
jmp
mov
fldt
sub
xorb
xor
push
push
out
mov
repz
push
push
pop
cmp
sbb
jae
mov
pop
fisttps
push
enter
insl
mov
inc
pop
in
sub
std
cmpsl
jmp
jl
loopne
bound
adc
outsb
aam
mov
sbb
iret
bound
out
fisubrl
shlb
das
aam
push
pop
insb
mov
xor
push
xchg
rcrb
sbb
flds
sarl
xchg
fs
mov
cmpsb
sbb
pop
sarb
insb
int
and
or
popa
aam
adc
jb
ljmp
arpl
in
mov
adc
cmp
bound
push
fabs
mov
pop
test
pushf
ds
test
iret
ror
loop
cltd
mov
mov
push
pushf
sbb
in
mov
in
cmp
pop
jb
fisubl
outsl
ret
adc
or
mov
pop
push
out
stos
out
data16
push
enter
mov
pusha
add
dec
in
push
gs
mov
stos
fsubr
insb
lock
call
inc
push
rorb
or
outsb
in
ljmp
daa
or
fistpl
mov
mov
mov
sub
push
dec
jg
sub
out
fsubrs
insb
fiadds
or
scas
sub
and
nop
outsl
inc
adc
into
lea
fs
rorb
cltd
pop
sub
insb
in
loopne
sbb
in
lods
subb
mov
stos
outsl
and
call
je
bound
scas
add
pop
mov
loopne
fsubl
leave
xor
sub
cmp
mov
add
rcrb
jo
dec
and
jns
jo
pop
mov
jg
rcll
mov
faddp
cmc
iret
inc
in
movsb
outsb
test
sbb
mov
and
ds
mov
mov
arpl
cmc
push
icebp
mov
and
fmuls
pusha
stc
push
dec
xchg
cmp
xchg
mov
adc
in
das
sti
mov
mov
outsl
jbe
leave
sub
rcrb
dec
sub
jp
jns
cli
int3
mov
jmp
rcrl
mov
xorb
cmpsb
test
pop
sbb
sub
dec
mov
push
dec
imul
mov
out
jl
test
cmpsb
xlat
clc
subl
lods
lret
test
sub
sbb
int3
ficompl
es
stos
mov
fsubrl
push
mov
and
sbb
mov
in
sub
in
cmp
cltd
jg
pop
push
mov
cmpsl
or
shrb
daa
mov
mov
adc
jns
jne
jmp
push
loop
iret
shrl
lret
xchg
lret
mov
inc
jge
enter
test
fs
rorl
adc
aam
aas
inc
pushf
mov
cmp
insb
call
push
fnstsw
movswl
xor
sahf
pop
sbb
lods
std
std
dec
mov
pop
fucomi
pop
inc
incl
out
inc
test
push
or
or
inc
push
shl
xchg
test
and
mov
pusha
lods
rcrb
and
sti
gs
insl
xchg
xchg
ljmp
iret
mov
adc
bound
sahf
push
shlb
jnp
sub
cmp
cmpsl
dec
pop
aam
movsb
pusha
fdivl
and
fsubs
and
pop
jg
cmp
jecxz
cmp
outsl
insl
nop
or
and
and
or
cs
and
lret
imul
negb
sub
jle
mov
inc
sbb
mov
cmpsb
roll
mov
sbb
rcrl
pusha
andl
data16
ror
mov
add
daa
dec
inc
popf
mov
lock
sahf
cmpsb
dec
sub
dec
cmp
scas
xchg
sub
hlt
lods
das
dec
or
aas
dec
mov
add
mov
sub
or
cmpsb
outsb
outsb
jmp
scas
insl
pop
sbb
pop
pop
test
and
out
add
mov
dec
mov
aam
mov
aas
popa
jnp
dec
jmp
jle
insl
and
jne,pn
xlat
lods
and
pop
outsb
xor
std
cltd
or
cmp
adc
pusha
shll
lret
and
lock
cwtl
mov
inc
in
iret
push
out
dec
faddl
test
jle
push
leave
lret
int3
outsb
dec
iret
xor
lret
push
das
loope
in
icebp
lahf
out
lcall
inc
and
dec
inc
lret
cwtl
fisttps
mov
loopne
ret
mov
sahf
in
or
rorb
push
mov
nop
stos
mov
gs
lods
loop
mov
adc
push
cltd
insb
adc
dec
pinsrw
mov
add
jg
cmp
or
sbb
inc
sti
and
dec
cmpsb
fisttpll
cli
xchg
push
inc
cmp
xor
int
lock
je
in
cmp
idiv
push
outsl
sub
arpl
stos
mov
mov
xchg
sbb
aas
bound
push
cld
push
mov
push
incl
cltd
sar
rorl
mov
lock
int
and
jl
lret
lock
scas
push
add
imul
jecxz
daa
add
mov
cmp
mov
cltd
cmp
stos
fildll
sti
add
or
add
loopne
inc
stc
ffreep
inc
rcrb
jo
xor
cmpl
outsl
push
iret
lock
data16
pusha
rorl
cmp
xchg
adc
inc
in
fs
push
ret
fcoml
mov
sub
dec
sub
sub
mov
pop
nop
mov
aam
rorb
fsubp
ljmp
das
add
push
cs
movsb
mov
in
in
fs
fwait
xlat
push
mov
xchg
and
fwait
jmp
ljmp
pusha
pushf
cmp
dec
lret
hlt
lods
movsb
jecxz
scas
push
movsb
or
pop
bound
call
inc
dec
scas
jl
movq
push
daa
cli
pusha
push
pop
pushf
jmp
call
bound
insb
cmp
ds
cmpsl
jmp
test
jo
loope
fisubrl
andb
stc
shlb
mov
loope
rcrb
jecxz
mov
cmpsb
pop
loop
and
stc
cmc
test
cmp
test
push
dec
mov
cmp
pop
fs
mov
push
iret
push
loop
jmp
pop
imul
bound
lret
mov
inc
jp
int3
or
lret
fistpl
icebp
in
ret
fcomps
stos
cmpsl
in
out
xor
fmul
scas
outsl
cltd
lods
mov
into
jecxz
mov
les
xchg
and
sub
cmp
xlat
mov
and
mov
lcall
out
sti
mov
mov
pop
cmpsb
imul
movsb
mov
test
fwait
ror
aas
fisubrl
pop
and
xchg
xchg
jmp
inc
pop
xchg
out
xchg
loopne
cmpsl
insb
jg
shll
cmp
pusha
jno
lahf
cmpsb
dec
popf
cmp
lds
jmp
outsb
sar
pusha
mov
ret
sbb
loop,pn
cmp
mov
xor
mov
cltd
inc
ja
leave
in
push
fiadds
mov
shlb
cmp
in
mov
add
test
pop
cltd
jp
jecxz
mov
cmc
sbb
or
lahf
lds
out
fwait
bound
xchg
xor
and
call
pusha
mov
imul
out
xor
int3
data16
movsl
pop
ret
inc
mov
lea
lret
xor
dec
inc
imul
sbb
or
mov
aad
jle
lods
test
sbb
dec
pop
sub
imul
aam
out
leave
mov
xlat
imul
push
jecxz
enter
cmpsb
xchg
push
pushf
pusha
pop
cmp
ljmp
sub
dec
push
enter
sbb
cmp
ret
arpl
jle
shl
fnstsw
pop
mov
push
push
lret
cwtl
sti
jge
xor
loop
mov
adc
rorb
sub
mov
inc
mov
pop
bound
in
mov
repz
out
sahf
ljmp
mov
cli
and
mov
cmp
inc
lea
aad
out
add
xchg
mov
sbbl
iret
in
mov
rclb
cltd
pop
inc
jnp
push
out
daa
add
inc
pop
jno
jo
xor
push
xlat
inc
cmp
fdivrp
and
call
jns
jnp
push
pop
loopne
ret
jae
pusha
sub
data16
xor
pop
int3
shlb
jo
aas
jmp
push
push
outsb
nop
and
inc
mov
aas
pop
pop
dec
pusha
out
mov
into
aas
dec
sub
mov
ljmp
popa
push
push
in
mov
enter
push
push
mov
rol
push
jnp
jbe
out
dec
das
mov
imul
sbb
lcall
add
or
cmp
bound
mov
sahf
xchg
dec
mov
push
or
stos
or
inc
dec
dec
cmp
pop
test
fildll
outsl
fildl
insb
pop
sub
das
leave
cwtl
lret
mov
xorb
or
cmp
pop
loopne
push
and
nop
jnp
bound
jle
lcall
shrb
cmp
pop
int
adc
out
and
push
shrl
mov
into
icebp
mov
out
pop
mov
xchg
xor
jno
cmp
shrb
push
scas
nop
dec
int3
push
pop
mov
sarl
lods
cwtl
lahf
mov
and
insb
stc
mov
sub
sarl
and
cmpsl
test
outsb
lods
or
ljmp
test
push
loopne
aad
fcmovnu
fbld
cltd
fwait
xchg
and
je
or
rcll
pushf
push
shlb
jg
dec
aas
add
mov
cmp
mov
ljmp
out
cmpsl
sub
mov
pop
prefetch
mov
jle
outsb
je
push
mov
ror
loopne
dec
insl
cmpsl
cli
inc
pop
lods
test
push
idivl
lahf
push
adc
xorb
mov
movsb
int3
mov
xlat
imul
stos
mov
shrb
bound
fstl
cs
sbb
dec
xchg
cs
sbb
call
cs
lret
inc
mov
dec
sahf
jmp
test
into
leave
lods
and
push
inc
fwait
in
pop
sbb
shlb
or
rcrb
cmp
in
sahf
push
out
xchg
sahf
push
lods
or
pop
pop
test
bound
or
aad
out
int
mov
js
sub
call
call
mov
lea
out
mov
add
insl
mov
push
outsb
cld
rep
mov
je
xchg
sub
lea
minps
adc
repnz
leave
out
mov
lods
sarb
stc
xor
pop
bound
testl
scas
pop
aad
lods
mov
into
stos
lret
jle
scas
jb
jmp
and
arpl
or
dec
mov
xor
hlt
dec
and
out
fsubrl
inc
repz
mov
cmpsl
push
push
out
mov
int3
scas
or
ret
push
mov
outsb
and
shlb
mov
jle
fwait
inc
or
mov
out
shr
cmp
dec
push
fisttps
jno
test
xor
xorb
les
mov
sti
into
cli
mov
xchg
inc
dec
jle
fldt
into
push
jno
nop
jae
jmp
imul
or
cli
out
jno
rcr
pop
daa
mov
frstor
aas
in
fnsave
pop
push
nop
or
mov
mov
dec
mov
jmp
inc
popf
movsb
mov
dec
jg
test
and
xor
scas
pusha
cmp
adc
loopne
mov
loopne
inc
dec
cs
call
cwtl
in
xchg
in
push
jnp
or
bound
xchg
inc
xchg
mov
or
popa
dec
jae
arpl
sub
jne
mov
dec
leave
hlt
icebp
xor
cmp
push
imul
push
push
adc
cmpsl
loope
out
inc
and
jnp
mov
mov
jns
add
bnd
sahf
fadds
xor
in
inc
jge
cwtl
bound
in
sub
push
insb
or
jno
rcrl
stos
mov
js
test
pop
icebp
push
sbb
js
jo
cmpb
leave
nop
outsb
mov
adc
cmpsl
mov
mov
mov
outsl
out
inc
lret
lcall
dec
fucomip
outsb
andb
ret
pusha
xchg
add
jl
sahf
push
in
ret
enter
pop
jbe
stos
inc
cli
ficoms
clts
cmpsl
push
xor
ja
cwtl
sbb
test
jbe
stos
scas
sub
and
popa
loop
scas
jmp
imul
into
stos
push
mov
or
dec
fwait
cmp
pop
int
icebp
aam
sarl
jg
popf
sbb
scas
mov
push
dec
xor
stos
pusha
xchg
and
and
insb
in
scas
call
sbb
sbb
dec
sub
pop
out
mov
test
leave
out
mov
pop
test
push
add
push
leave
pop
sub
pop
or
int3
push
sub
mov
les
int3
out
mov
push
mov
loopne
shrb
sbb
in
jo
cmp
daa
dec
mov
lcall
fmul
push
outsl
or
test
idiv
mov
pop
mov
xor
sbb
xchg
jl
inc
adc
sahf
cmpsl
or
inc
cld
mov
pushf
xor
sahf
mov
lcall
imul
jbe
out
in
push
mov
arpl
fcomi
add
mov
push
jo
dec
aad
pop
cmp
aad
popa
dec
in
mov
and
pop
scas
test
shlb
xor
movsl
inc
test
bound
ret
das
jno
and
adc
test
xchg
inc
out
sub
mov
push
add
mov
insb
mov
loop
scas
outsb
pushw
xchg
ljmp
sub
insb
pop
push
out
das
dec
gs
leave
lcall
pusha
bound
call
andl
pushl
and
bound
leave
loopne
inc
jmp
loopne
not
adc
pop
dec
dec
in
mov
fstpt
push
xchg
lods
lret
in
in
loope
fwait
bound
add
dec
sub
outsb
int3
ja
cmpsl
scas
rclb
or
test
xlat
call
xchg
pop
lcall
push
mov
pop
xchg
aas
sbb
dec
je
dec
fnsave
mov
ljmp
fucomi
jmp
mov
loopne
mov
shlb
inc
test
pop
nop
scas
scas
out
dec
jmp
rcrb
lcall
mov
sub
and
cltd
jo
cs
das
mov
xchg
dec
stos
ret
push
jmp
in
call
xchg
xchg
pop
loop
mov
mov
out
loopne
push
test
inc
mov
cltd
or
test
fiadds
adc
in
jnp
fstpt
sbb
pusha
aas
mov
jne
jae
mov
pop
adc
pushf
cmpsb
in
enter
loopne
cmp
movsb
test
xor
and
loope
jmp
mov
mov
sub
cmp
sbb
nop
xor
outsl
iret
addr16
mov
lahf
jmp
out
lahf
loop
sbb
mov
and
or
mov
nop
sub
mov
sbb
cmp
add
xchg
hlt
mov
mov
mov
mov
cmc
iret
jne
pop
xor
pushf
fwait
mov
jo
and
xlat
mov
lahf
sahf
repnz
dec
andl
sub
in
and
push
std
pop
mov
lret
sbb
adc
and
sub
jnp
or
dec
inc
pop
pusha
pushf
aas
lea
int3
adc
dec
cli
pop
mov
inc
adc
sbb
mov
xchg
aas
mov
cmpl
shlb
jbe
fld
push
cwtl
daa
dec
nop
fs
fldl
and
sub
icebp
jae
jnp
jo
cltd
mov
lret
jo
fstpt
je
shll
inc
inc
cmp
mov
lcall
lea
movsb
popa
mov
mov
jbe
mov
mov
mov
rorl
add
jb
je
jp
push
in
mov
std
add
push
push
xor
cli
test
mov
push
cmp
std
out
jnp
mov
scas
and
xor
jnp
ljmp
and
stos
dec
jmp
push
dec
addr16
fwait
sbb
popa
ret
push
adc
push
fldcw
lahf
sbb
cmp
push
or
push
shll
shrb
mov
in
fsubrl
and
inc
add
rcrb
cs
sbb
jmp
xchg
xor
and
push
stc
inc
nop
dec
icebp
mov
sub
mov
shlb
mov
in
xchg
pop
fists
and
inc
jg
mov
sahf
jb
dec
nop
fwait
cmp
mov
pop
popa
in
xchg
jle
jnp
fs
inc
shll
outsl
push
and
xchg
pop
cmp
cmc
imul
xchg
andl
xor
ret
pusha
push
mov
mov
cltd
pop
and
sub
pop
sub
out
popf
cli
cli
push
adc
xor
pusha
ret
xor
ss
inc
imul
mov
mov
jnp
sub
mov
cmp
ror
seto
mov
mov
movsb
aam
iret
lret
mov
gs
in
leave
dec
loopne
popf
int3
adc
jp
adc
lret
mov
and
pop
dec
and
out
add
add
pop
jge
add
insl
or
insl
sbb
jle
icebp
int3
scas
pop
imul
orl
call
pop
out
fnop
push
ds
pusha
mov
ds
mov
out
test
sti
pusha
scas
mov
jl
stc
out
scas
pop
adcb
mov
cmp
xchg
stos
dec
insb
cltd
ljmp
lock
adc
mov
daa
shlb
rclb
test
sub
sbb
pop
fwait
lahf
scas
push
mov
sbb
xchg
aam
pop
pusha
push
les
lahf
loope
inc
push
testb
cmp
add
es
fisttpll
adc
and
gs
in
pusha
and
sti
sbb
je
mov
and
scas
pop
inc
cmp
mov
fsubl
or
and
leave
jl
int
xchg
pop
jno
and
xor
sub
push
into
push
pop
cli
mov
out
adc
stc
iret
test
fmuls
dec
test
dec
push
fs
loopne
ret
lret
mov
push
jnp
scas
sbb
push
cmpsb
and
jg
sbb
or
add
in
sbb
outsb
js
inc
repz
test
xchg
jns
pop
mov
pop
or
stos
icebp
scas
xor
jo
pop
add
fwait
stos
push
lea
mov
adc
inc
xor
hlt
push
pop
pop
out
cltd
fisubs
sbb
jns
and
adc
add
outsl
sahf
mov
pop
scas
sahf
jecxz
cwtl
jle
or
leave
in
stos
sbb
daa
push
or
sub
jo
push
pop
jl
mov
je
daa
stos
mov
mov
fdivrl
daa
lahf
sarl
pushf
into
push
mov
enter
aam
sbb
scas
pushf
bound
pop
sub
jne
mov
jl
cmp
jle
out
inc
cmpsl
jg
or
and
jae
enter
adc
pop
sub
mov
inc
cmp
pop
lods
cltd
and
add
jo
andl
jl
adcb
bswap
dec
int3
test
mov
xchg
repnz
pop
mov
test
pusha
addr16
and
pop
movsb
int3
fildll
fisubs
rcr
sbb
mov
popa
dec
lcall
pavgb
xor
mov
lahf
adcb
fs
xchg
test
and
sub
cltd
push
cmpsb
xor
sbb
imul
mov
lods
xor
push
sti
into
fcompl
mov
fisubs
data16
cmp
scas
fwait
inc
loope
jnp
out
push
mov
and
xor
pushf
and
jb
test
aas
sbb
movsb
push
inc
pushf
ffreep
sbb
cs
sub
adc
and
xchg
add
mov
cmp
jnp
jno
test
repz
shll
in
insb
in
fwait
mov
outsl
idivb
mov
loopne
fcomps
js
insl
imul
stos
mov
lods
cli
push
enter
fwait
scas
daa
pop
scas
shll
data16
or
mov
stc
jno
mov
or
pop
out
dec
push
adc
dec
and
enter
call
adc
pop
dec
das
inc
cmpsl
mov
rcrb
or
jnp
in
lret
and
clc
jo
pusha
insb
mov
jge
mov
ljmp
mov
pusha
loopne
into
and
inc
icebp
es
push
cmpsl
and
mov
xchg
fcmovu
mov
xchg
leave
test
add
xlat
sti
mov
scas
arpl
dec
das
push
bound
and
cmc
shrb
insb
mov
imul
sti
test
pusha
and
divl
jns
bound
mov
adcb
cld
mov
shll
repnz
cmpsl
aam
cmpsl
sbb
sub
dec
adc
into
or
in
xor
movsb
scas
out
lds
out
iret
orb
out
stos
lahf
cwtl
xor
sbb
mov
cmp
and
test
adc
push
sahf
pop
mov
sbb
pusha
mov
cltd
fildll
addr16
shr
push
lret
ljmp
push
nop
les
insb
ljmp
mov
scas
fs
out
mov
push
cld
shlb
fnsave
gs
loop
test
xchg
sbb
xchg
jle
sub
lods
out
inc
and
fdiv
inc
sub
fldl
cld
ds
rolb
outsl
mov
lds
jns
outsl
sbb
push
daa
push
xchg
in
cmp
sub
popa
inc
mov
incb
sub
cmpsb
and
pop
adc
jnp
pop
test
cmpsb
dec
das
fwait
pusha
enter
loopne
aaa
inc
and
lock
jo
cmp
jns
mov
lret
ss
push
test
aam
sbb
fcmovnbe
fidivl
imul
stc
mov
dec
nop
rorl
int
fimuls
push
push
test
loop
ret
fbld
and
testb
mov
push
in
loopne
ds
icebp
int3
mov
rolb
push
xchg
cmpsb
mov
insb
subb
outsb
mov
mov
pop
jmp
pop
pop
roll
add
test
mov
jmp
sub
adc
test
mov
aam
push
mov
pusha
inc
rcr
mov
mov
je
push
dec
dec
mov
push
outsb
sub
mov
and
stc
pop
mov
movsl
stos
jmp
push
and
sub
mov
int3
rcr
push
xor
outsl
or
insb
push
pop
les
divps
scas
lea
pushf
jge
sti
inc
mov
cld
inc
jge
cmpsb
aas
lcall
xor
scas
inc
jmp
aaa
jne
test
push
scas
xchg
mov
push
or
sarb
xor
test
movsl
nop
mov
jmp
movl
sbb
jmp
cld
mov
fld1
push
fcmovb
loop
sub
push
adc
in
pop
mov
das
cmp
mov
mov
nop
cmp
push
xlat
inc
sub
pop
arpl
in
mov
stos
pop
call
fmuls
inc
pop
mov
and
lcall
lret
lea
xchg
sbb
fdivrl
insb
jmp
pop
out
inc
mov
sbb
push
ss
sbb
cmp
xchg
leave
sbb
imul
mov
outsb
add
lret
scas
pushf
icebp
add
mov
adc
push
and
mov
inc
or
mov
and
je
mov
lahf
in
test
pop
loop
call
std
cld
pop
iret
mov
pop
repz
jae
inc
lcall
cld
mov
sub
inc
scas
ret
fbstp
movsb
in
lret
pop
out
push
cmpsb
out
and
xchg
xchg
pop
cmp
movsb
push
push
add
jno
in
pusha
test
push
subl
loopne
xchg
pusha
jmp
mov
mov
jo
mov
in
push
inc
cwtl
loopne
enter
scas
int3
shll
push
nop
fnclex
push
sub
out
aam
mov
and
int3
sub
add
rcll
in
iret
popa
mov
lret
mov
jg
jno
push
mov
or
insb
pop
repz
pop
int3
rolb
and
outsb
shll
push
int
insb
cmpb
and
and
in
cmp
lahf
dec
or
test
out
xor
movl
mov
push
pop
inc
enter
ror
icebp
push
scas
pushf
fs
stos
rol
xor
imul
push
repnz
push
push
lea
and
push
sbb
in
jle
scas
push
ret
cld
outsb
test
test
test
shl
daa
je
and
xchg
sbb
jg
inc
aam
cmc
leave
imul
insb
sub
and
mov
jae
push
mov
scas
inc
xor
inc
stos
sarl
cmp
mov
pop
in
loopne
jmp
jnp
mov
cltd
sub
mov
fsubrs
sbb
dec
jno
push
movsb
enter
xchg
ja
adc
fstps
data16
lahf
pop
int3
pop
add
pop
aam
push
in
pop
loopne
gs
pop
sbb
lods
dec
jg
and
xor
bound
inc
nop
mov
lock
fs
mov
shlb
dec
movnti
daa
pop
flds
sbb
mov
xor
mul
and
push
das
outsl
bound
cwtl
or
daa
push
addr16
in
xor
push
lahf
cmp
ds
jns
dec
in
xchg
mov
in
sub
sub
insb
add
aas
cli
test
mov
loopne
sbb
and
cltd
or
sbb
cmp
pop
loopne
xchg
leave
bnd
push
xchg
aam
adc
jnp
test
sub
cmp
or
insb
sti
mov
xchg
adc
bound
sub
xchg
push
popf
mov
xchg
mov
cmpl
scas
sbb
inc
repz
add
pop
scas
mov
push
mov
and
test
out
mov
popa
leave
das
in
les
into
sbb
cmpl
std
mov
bound
enter
popa
add
lahf
out
cwtl
dec
fcoml
icebp
pusha
lods
nop
add
jae
pusha
clc
lret
dec
jle
ja
dec
sti
push
divl
leave
out
jp
loope
aas
in
inc
mov
pusha
pop
loope
pop
lods
rcr
std
mov
mov
negb
in
leave
int3
inc
outsb
mov
xor
lods
xor
sbb
sub
cmp
push
cmp
pop
rol
lods
dec
mov
add
orb
cltd
hlt
aad
idivb
dec
ljmp
cmp
sbb
scas
adc
cmp
xchg
pop
outsl
fsubs
jo
faddl
adc
push
mov
rolb
dec
push
out
jp
outsl
outsb
xchg
sti
loope
aam
ds
jo
add
mov
mov
sahf
jl
loop
pop
in
sbb
pusha
int
lahf
pop
inc
mov
adc
sbb
sub
rorl
mov
out
fildl
addr16
outsl
adc
or
push
stos
daa
repz
bound
arpl
stc
sarb
test
lock
negb
sub
fldcw
sbb
data16
stc
mov
or
in
das
enter
pop
out
dec
jle
inc
aas
movsb
iret
outsb
mov
data16
cltd
ss
mov
sub
or
test
fimull
popa
in
out
loopne
push
test
mov
ja
sbb
xor
pop
cmc
outsb
addr16
push
sbb
pop
xchg
aam
into
pop
fidivrs
fbstp
lock
outsb
or
mov
push
fistpll
stos
ss
dec
add
and
push
lret
in
jmp
call
inc
mov
in
divb
stos
jno
dec
shlb
jmp
sbb
test
xor
bound
sahf
ret
lcall
push
into
stos
imul
out
sbb
shlb
jne
outsb
jmp
scas
sbb
pop
sub
sub
inc
stc
pusha
inc
lock
push
out
pusha
fidivs
jne
lds
jp
xlat
scas
pop
and
addr16
push
cmpsl
xor
imul
and
inc
adc
punpckldq
pop
jecxz
scas
lahf
fmul
or
std
into
add
aas
cmp
gs
pop
sub
iret
inc
into
and
xchg
outsb
jecxz
push
into
cwtl
cltd
cmpb
outsl
sbb
aas
mov
xchg
in
sbb
fldcw
mov
outsl
fwait
dec
pop
dec
jecxz
or
mov
jge
cld
pop
addr16
pusha
lahf
fs
pop
in
pop
loopne
or
jo
sbb
sbb
fsubr
mov
and
cmp
jmp
jbe
std
mov
das
sbb
push
scas
or
loopne
fildl
pop
xchg
sub
pop
pop
sub
mov
imul
xchg
fiadds
or
les
pop
push
aas
arpl
arpl
jo
shlb
popa
pop
mov
ret
cmp
mov
pusha
sbb
dec
sbb
mov
push
out
mov
sahf
sets
sbb
and
aam
sub
cmpsl
sbb
pop
and
add
xchg
xchg
bound
dec
mov
or
inc
movsb
mov
int
lods
jp
jg
mov
fsubrl
push
inc
addr16
cmpsl
in
in
nop
and
shll
pop
add
inc
fstpl
push
xchg
lcall
imul
xlat
pop
lcall
pop
xor
sbb
jns
aam
stos
out
add
cmp
jmp
call
jg
daa
pop
scas
inc
mov
xor
mov
cld
push
jnp
lds
stos
iret
cmc
sbb
pop
in
loopne
push
dec
cmpsl
and
add
ja
call
fdiv
push
lds
or
popa
cmp
negb
in
test
rclb
sarb
dec
ret
cmc
sub
xchg
inc
pusha
sub
lcall
lret
inc
xor
and
in
push
lods
int
out
pushf
mov
out
fcmovnb
push
add
mov
ret
push
sbb
mov
cltd
jo
sti
test
jbe
jmp
imul
and
fdivrl
pop
sbb
and
shll
sub
out
sbb
mov
mulb
ds
movsb
jbe
pusha
mov
push
cld
ja
jp
movsb
jecxz
and
cs
mov
jnp
pop
rcrb
mov
imul
or
lret
sbb
shll
jb
cmp
in
push
insb
mov
shlb
add
insl
ljmp
shl
lret
pop
mov
cs
cld
mov
add
pop
cmc
or
repnz
pushf
cli
ja
hlt
push
lods
dec
shlb
fs
cwtl
rcrb
push
lret
push
in
scas
inc
je,pn
cmp
aam
test
xor
cli
sub
addb
inc
lea
mov
xchg
inc
into
mov
sub
dec
push
imul
out
out
lret
out
xchg
sub
icebp
inc
xchg
daa
cwtl
pop
fwait
cmpsb
popa
sbb
xlat
stc
icebp
adc
test
sub
fmulp
or
bound
loopne
jnp
and
xlat
popf
int3
jmp
xor
lock
bound
lods
jp
and
lods
call
in
sub
in
and
cmp
xlat
xor
sub
and
mov
repnz
mov
jge
xchg
inc
fsub
pop
jnp
jnp
dec
outsb
popa
and
insl
nop
lods
gs
mov
inc
pop
adc
in
lahf
nop
sbb
inc
popa
sbb
push
mov
test
out
addl
fcoml
mov
into
push
xchg
lods
and
push
push
cli
mov
rorb
bound
inc
in
mov
out
pop
push
xchg
mov
daa
and
ss
into
xchg
push
cmp
xlat
mov
fidivl
setl
jo
cmpsb
fsubr
sahf
lahf
push
movsb
lcall
lods
movsb
jle
xchg
rorl
jle
xor
insb
pop
int3
dec
rorb
clc
jg
fdivp
idiv
sbb
scas
sbb
mov
loopne
out
mov
je
loopne
sub
pop
pusha
cli
test
add
rorl
mov
lods
sbb
insb
cmpb
test
sub
mov
sahf
jecxz
test
dec
xor
insl
push
mov
insl
test
push
lods
cmpsb
mov
fisttpl
mov
in
pusha
pop
sub
push
jb
scas
lods
fstpl
mov
xchg
ror
push
ljmp
cmp
stc
loopne
subl
mov
js
jb
pop
mov
loopne
scas
sbbl
inc
enter
icebp
dec
adc
rolb
xchg
push
in
dec
push
add
xchg
pop
lret
adc
fsubp
shlb
add
incb
and
xchg
jle
lods
ret
lea
or
shl
jmp
data16
mov
sahf
stos
ret
jmp
jnp
or
mov
mov
out
inc
mov
add
add
movsb
lret
lods
xchg
cltd
cmp
in
or
aam
test
inc
push
mov
adc
iret
xchg
adc
ficoms
imul
jnp
sub
or
stos
jo
and
inc
mov
sbb
mov
jmp
loopne
popa
ret
scas
pop
imul
andl
aad
shlb
or
call
pop
push
out
lret
mov
cmp
sbbb
cs
sbb
outsb
pop
mov
je
pusha
push
cli
adc
and
ds
loop
mov
das
sub
lods
fsubrs
mov
paddsw
lods
fsubrs
lahf
and
stos
sahf
out
stos
adc
mov
inc
or
sti
inc
fwait
shr
call
pop
xchg
push
mov
ret
icebp
scas
push
fimuls
iret
loop
bound
es
adc
sbb
lret
cwtl
jnp
or
scas
xchg
cmp
movsb
sub
pop
popf
pusha
jbe
inc
les
lock
insb
insl
sbb
dec
lods
cli
imul
push
fimuls
into
jge
adc
pop
sbb
lret
mov
loopne
popa
mov
sub
das
fistpl
jnp
scas
cmp
cmp
and
insl
fbstp
arpl
ja
js
in
mov
lret
roll
rcrb
mov
fisubrs
pushf
sbb
lods
leave
int
fistpll
pop
mov
mov
in
push
shlb
mov
call
cmp
pop
xlat
push
jbe
sti
and
xchg
xchg
std
push
insl
or
sti
insb
mov
aam
scas
mov
pop
outsl
or
fldcw
daa
ds
lods
dec
out
xor
lods
lahf
sahf
xor
lods
loopne
fs
lods
lock
fbld
fs
outsb
or
or
push
add
pop
lods
add
mov
mov
insb
and
out
or
sub
xor
sub
imul
call
negl
xor
push
lds
pop
push
jb
push
cmpsl
sbb
jo
jmp
jmp
sbb
rclb
mov
or
fmul
je
call
jne
loopne
out
scas
mov
sbb
mov
and
adc
aad
cmp
dec
ljmp
push
subl
jg
sarl
mov
push
call
fwait
mov
xchg
out
into
jbe
neg
push
cwtl
in
gs
test
movsl
mov
cwtl
xchg
loopne
pop
test
incl
addr16
push
jmp
add
and
popl
sbb
stos
arpl
insl
rol
pop
in
xchg
iret
push
mov
mov
pop
out
stos
fcoms
or
mov
fistps
mov
dec
dec
in
ljmp
mov
pop
jle
insb
orb
lods
insl
out
std
xor
pusha
out
fadds
pusha
loopne
xor
jmp
pusha
and
mov
jmp
fbstp
shr
dec
dec
lret
mov
outsb
mov
jp
and
jle
pop
test
sbb
pop
cwtl
loop
es
cmpsb
xchg
out
mov
lret
cmpsb
repz
adcb
mov
int3
out
int
mov
hlt
sbb
movsl
fdivp
adc
sub
push
int3
pop
sbb
sub
or
daa
in
and
add
xchg
test
stc
lret
ficoml
scas
imul
or
sub
enter
shl
adc
test
pop
cmp
mov
cld
adc
cmc
call
outsl
or
dec
in
xor
mov
fldenv
dec
scas
lcall
ret
insb
popf
je
aad
pop
pop
lret
fnstcw
push
xchg
insb
ljmp
sahf
lock
in
xchg
cmpsb
adc
sbb
and
sbb
sub
fcom
xorb
loopne
mov
or
xchg
mov
jno
push
pusha
pop
push
pop
add
adc
jg
ljmp
call
sbb
mov
scas
cmp
xlat
jo
mov
pminub
mov
jb
sub
in
cmp
sbb
loope
popa
stos
in
ret
sti
mov
loop
pop
push
out
loope
test
es
hlt
bound
nop
mov
call
pop
jmp
cmp
loope
popa
cs
pop
idivl
imul
ljmp
repnz
out
fwait
bound
mov
int3
andb
add
cmc
mov
jo
loopne
in
fs
in
fldt
bound
and
shrl
iret
setns
inc
inc
or
pusha
adc
mov
push
call
dec
pushf
in
mov
mull
jae
add
out
push
push
aas
rclb
sub
sbb
rcr
jecxz
xor
fists
pushf
ss
adc
pop
lret
out
mov
cmpsb
les
cmp
fsubp
xchg
stos
mov
cmp
in
push
jmp
jmp
and
or
mov
or
test
std
nop
and
push
rcrb
outsb
sbb
fldcw
mov
outsl
lods
out
add
mov
sbb
fsubs
pusha
fucomi
test
dec
rclb
jg
icebp
add
fcompl
pop
or
mov
mov
gs
mov
fistps
xchg
aam
andl
lds
es
inc
xor
icebp
push
sub
jg
push
inc
jmp
in
inc
pusha
ds
pop
int
and
xchg
das
test
xchg
scas
mov
pop
rol
shlb
jb
fcoms
xchg
out
in
xchg
outsb
push
loope
in
pop
mov
lock
sbb
cmp
cli
insl
shlb
iret
jo
and
sub
cs
in
xor
cmpsb
out
call
nop
add
mov
ret
push
xor
or
out
lret
test
clts
inc
cmpsl
stos
jno
sub
push
into
stos
mov
loopne
adc
cmp
in
and
push
sbb
push
pop
fisttpll
and
jne
push
aad
cmp
sub
inc
or
mov
mov
sbb
mov
sbb
push
pop
mov
mov
adc
jge
sub
sbb
call
test
xor
and
fstpt
dec
imul
mov
and
or
mov
int
mov
outsb
push
push
jecxz
pop
int3
lret
or
push
arpl
push
aad
mov
inc
sbb
fsts
popf
mov
fisttpl
enter
rclb
sarb
in
push
push
scas
xchg
push
push
pop
int3
scas
rcrb
xor
test
xor
add
pop
cmc
push
sub
sbb
out
test
movsb
cmp
imul
sbb
jae
loop
cmp
and
dec
mov
push
lret
cltd
std
icebp
fildll
push
pushf
icebp
setno
sub
fwait
outsb
call
int3
popa
pusha
xor
mov
insb
xchg
add
cmp
jg
addr16
xchg
in
fiadds
aad
jle
pop
flds
push
xchg
inc
sbb
mov
dec
mov
push
movsb
fs
call
inc
lcall
inc
bound
xlat
mov
mov
pop
xchg
xor
cmpsl
and
jbe
les
xor
push
aam
addr16
pop
add
cmpsb
lock
sub
push
data16
pop
filds
ret
ror
cmp
and
mov
fcomp
mov
xchg
lods
and
in
scas
dec
pop
mov
insb
jb
pop
lahf
fisttps
mov
and
jg
lods
ss
dec
icebp
es
insl
dec
fldpi
leave
and
decb
addr16
xchg
mov
xor
imul
aad
xchg
lret
bound
cltd
add
or
in
sub
pop
inc
sbb
and
mov
rolb
push
out
lods
lods
mov
insb
cmp
rorb
jp
sbb
ljmp
imul
lods
leave
stos
test
push
mov
jmp
test
fsubs
pop
pop
fisttpll
jl
ret
pop
clc
xchg
das
mov
mov
ljmp
shrb
sub
call
in
mov
outsl
ss
lea
das
ret
sub
aam
and
inc
push
dec
outsl
jnp
stos
aam
sbb
in
fldl
data16
out
sbb
lret
rolb
leave
orb
shll
add
add
cmp
mov
or
test
add
pop
mov
scas
or
shr
ja
inc
int
push
and
bound
das
into
or
add
add
push
insb
or
fmul
cmpsb
lods
je
push
fistps
xchg
push
loope
enter
sti
pop
popa
adc
cmc
fldt
sub
add
rol
adc
ljmp
loop
jb
ds
push
scas
xor
and
scas
and
call
push
sub
jmp
jge
jl
scas
xor
pop
mov
mov
push
fistpll
or
mov
cmp
and
loope
out
cs
adc
jg
les
inc
push
outsb
sbb
push
lret
push
mov
fstpt
loop
inc
push
push
fbstp
outsl
and
hlt
xor
push
shlb
pop
repz
pop
mov
add
and
ljmp
scas
mov
inc
xor
inc
icebp
stos
fbstp
nop
inc
in
sahf
dec
stos
jmp
mull
and
loopne
rcrb
clc
or
sbb
stos
adc
and
mov
cmc
xchg
or
xor
gs
test
lods
jmp
jecxz
pushf
outsl
subb
mov
or
xchg
push
rcrb
shr
adc
bound
je
out
repz
mov
scas
xchg
adc
mov
out
lea
arpl
push
loop
gs
adc
clc
out
sti
outsb
loopne
js
mov
or
fcom
shlb
subb
lds
cs
in
in
out
iret
ljmp
mov
push
arpl
aam
cwtl
andl
mov
insb
cvtpi2ps
bound
adcb
in
roll
or
cmp
ss
sub
or
jbe
sbb
ds
lahf
loopne
mov
in
jo
adcb
or
in
xor
or
pushf
out
shrl
jb
out
ret
inc
movsb
xchg
or
aaa
arpl
icebp
mov
xchg
sub
jnp
fs
bound
add
xchg
mov
cmpsb
ja
jg
gs
sti
cmp
lcall
cs
mov
cld
pop
add
xchg
push
repz
mov
sbb
add
insl
out
mov
insb
cmc
sub
mov
jo
lock
test
pop
das
sarb
add
sub
call
jmp
cmpsl
push
fucomp
cmp
pop
in
pop
xchg
xchg
iret
hlt
jnp
mov
cmpsl
dec
inc
inc
repnz
das
xor
jmp
imull
sahf
push
daa
loop
subb
jle
xchg
in
sbb
insb
bound
xchg
icebp
jge
dec
int
lahf
and
cmp
cmpsb
int3
adc
mov
pushw
mov
lods
imulb
bound
insl
loopne
sbb
xchg
mov
and
pop
and
and
pushf
and
push
lret
dec
pop
cmp
xchg
ss
pop
add
in
or
sbb
out
xchg
push
sbb
in
ret
adc
jmp
and
rolb
sti
jmp
fisubs
ss
pop
xor
iret
fildll
jne
xlat
sti
or
and
jl
mov
testl
mov
andb
jo
out
pusha
jo
out
pop
mov
lahf
enter
jmp
mov
aad
sub
push
push
cmp
scas
pop
pusha
sub
outsb
cld
mov
push
sbb
xorl
imul
loop
cltd
pop
stos
pop
jne
jns
dec
movl
movsb
add
rorl
cltd
inc
jae
leave
popa
insb
rolb
or
lret
loopne
mov
repnz
pop
and
and
nop
xor
or
mov
sbb
sbb
xor
mov
ds
outsb
or
xchg
icebp
fldlg2
push
mov
or
mov
sahf
in
pop
mov
xchg
sbb
inc
fsubl
adc
leave
out
bound
inc
aas
lods
cltd
jle
popa
cld
mov
dec
rolb
subb
movsb
outsl
mov
push
dec
out
inc
inc
pop
mov
mov
int3
xchg
sbb
fistps
cmp
popa
xchg
popf
pop
sub
push
enter
dec
ja
jg
lret
inc
pop
call
cs
mov
sub
push
push
lret
xor
stos
popf
iret
movsl
pop
jp
cmpsb
dec
in
sub
ret
fildll
imul
cmp
push
xor
in
and
mov
inc
xor
shll
daa
fbld
sbb
in
lret
and
and
pushf
cltd
into
push
xor
addb
ljmp
insb
xchg
pop
cmp
mov
pop
sub
add
scas
jp
add
mov
push
es
sti
jnp
push
mov
iret
xchg
fadds
sahf
mov
loop
les
call
xor
fmull
cmp
ljmp
jmp
in
iret
add
cld
xor
xchg
fwait
outsb
or
rorl
or
xor
iret
shlb
pop
ljmp
xchg
sti
out
jae
jne
or
cmp
pop
lret
xorb
pop
pop
and
mov
iret
cmp
in
mov
call
rcrb
lods
jne
sbb
in
xchg
fcmovnu
xchg
mov
pop
pop
inc
aad
push
pop
jle
pop
push
outsl
adc
pop
test
pop
test
mov
test
xchg
pop
mov
xor
in
or
lahf
sbb
adc
shlb
xor
pop
and
clc
leave
xor
sub
dec
push
sbb
mov
pop
imul
pop
sub
popa
leave
cs
ja
sbb
ja
mov
fildl
outsb
pop
test
push
mov
pop
bnd
rol
pusha
subb
addr16
gs
into
out
bound
xor
iret
pop
ds
adc
and
mov
dec
cmp
or
mov
sbb
inc
mov
push
es
shlb
shlb
mov
jnp
hlt
aas
pop
insb
aas
test
push
jmp
insb
sub
jmp
inc
int3
cli
or
add
dec
or
les
lea
pop
mov
fsubrs
and
mov
xchg
aaa
std
pop
sbb
and
sarl
mov
jbe
es
push
aad
lods
idivl
inc
mov
xchg
pop
xor
lock
scas
shufps
lods
xlat
add
mov
pop
movsl
inc
pop
movsb
add
icebp
push
fcompl
lods
xor
into
push
out
jg
bound
gs
push
mov
in
xchg
or
sahf
aas
addl
jno
dec
mov
shl
pop
iret
dec
push
cmp
scas
or
sub
mov
push
addl
call
pushl
ror
xor
xchg
sbb
dec
and
or
mov
in
mov
xchg
loop
out
leave
stos
fdivrl
push
iret
nop
and
jmp
pusha
or
out
cld
and
jp
inc
pop
and
mov
dec
lds
lret
nop
bound
sbb
ljmp
mov
jl
in
xor
fildll
psubw
xchg
mov
dec
push
icebp
fistl
int3
iret
jg
jnp
aas
bound
ror
add
inc
gs
push
mov
loopne
xchg
and
push
pushf
mov
iret
mov
in
gs
in
scas
push
inc
xchg
aas
dec
or
shlb
test
xlat
stos
repnz
adc
and
aaa
ror
pusha
push
sahf
push
or
pop
add
out
frstor
aam
outsb
int3
outsl
mov
sub
into
outsl
sarl
lock
add
enter
mov
or
xor
xor
jle
std
mov
push
loopne
scas
int
pop
mov
pop
stos
add
bound
cmp
lahf
ja
test
loopne
or
loopne
dec
push
ret
jb
xor
in
neg
and
and
cmp
mov
xor
mov
push
dec
or
pop
or
shlb
fidivrs
cltd
push
pop
in
cmp
inc
aad
nop
movd
out
imul
push
jecxz
or
lods
xor
push
xlat
lahf
bound
lods
mov
mov
jno
dec
imul
cmp
push
lea
fildll
mov
fcoml
sbb
sbb
lods
pop
bound
mov
jl
jne
mov
add
push
dec
push
cmpsb
insl
and
loopne
or
sti
jne
sbb
out
push
sub
shrl
popa
pop
push
das
cmc
push
lods
insb
push
bound
push
mov
pop
push
loopne
xchg
out
lods
mov
sti
xchg
aad
dec
movsb
mov
sbb
loop
inc
inc
adcb
mov
movsl
pop
bound
jp
add
push
ljmp
sbbb
pop
or
and
dec
imul
scas
dec
inc
cld
insb
bound
popa
sti
pop
mov
jmp
js
fcoms
outsb
fcmovu
lds
cmp
test
jl
jmp
pop
and
push
ret
loopne
pop
cmp
icebp
lret
fistps
xchg
jo
sub
cmp
test
movsl
xor
xcrypt-ctr
cmpsl
fistpl
sub
adc
insb
loop
xor
sub
loopne
or
xlat
cmp
mov
mov
lret
push
rcr
iret
fs
aas
shrl
ficoms
lret
fbld
push
test
ja
loop
aaa
loope
or
aam
pusha
bound
sub
bound
push
jl
push
test
lds
xor
lods
subb
pop
rcll
in
cmc
pop
mov
sub
les
pusha
jnp
xor
sbb
mov
pop
jecxz
sahf
sub
pushf
decb
int
sub
xchg
cmpsl
or
xor
mov
lock
xchg
sbb
loop
test
xchg
pop
js
xor
adc
ror
sub
loopne
mov
push
gs
adc
ds
adcb
fistps
sub
push
aas
jb
cld
jl
iret
inc
aaa
lret
cltd
mov
mov
gs
addr16
cltd
popa
xchg
dec
je
aaa
fmulp
stos
pop
sbb
and
xchg
pusha
cmp
sahf
push
jg
into
and
adc
insl
gs
stos
pmaxub
in
xor
rorl
jmp
pop
je
test
popa
cmpsb
or
sub
or
jae
shrb
dec
pushl
out
or
out
mov
jg
xchg
jmp
xor
inc
cltd
cmp
outsb
insl
sbb
lahf
and
jbe
pop
push
pop
lock
xor
mov
inc
lcall
pop
xor
xor
loopne
xor
mov
sub
cmp
ljmp
mov
icebp
add
mov
push
in
rclb
jo
push
stc
push
out
mov
push
cli
and
xor
imul
jecxz
out
in
push
xchg
mov
sbb
test
hlt
shlb
in
cwtl
sbb
enter
fs
mov
push
stc
lcall
cmc
bound
mov
and
xor
scas
mov
xchg
adc
sub
orl
jl
xlat
inc
pop
pop
insb
xlat
cltd
mov
cli
insb
fwait
int3
xchg
das
or
push
aad
out
dec
cmp
mov
stos
mov
fcmove
scas
sbb
add
push
nop
scas
push
push
mov
dec
and
or
adc
jecxz
mov
and
cwtl
mov
in
mov
sahf
sbb
in
jg
stc
or
aam
xor
ja
aas
jl
mov
mov
and
inc
push
in
lcall
sbb
dec
loope
fninit
lods
in
cmp
in
movsl
push
mov
lahf
sbb
stos
ret
sub
pop
lret
aas
mov
pmulhw
cltd
jl
leave
jg
shrb
and
cld
hlt
loop
loopne
sub
cwtl
in
or
int3
lods
inc
enter
cmp
popf
pushf
addb
sti
lods
inc
cmpsl
mov
dec
scas
fldt
add
push
shlb
cmp
js
ja
mov
or
fdivp
in
push
test
lods
push
xchg
sbb
mov
sbb
push
nop
int
sub
mov
inc
pop
enter
sub
pmaxsw
fwait
jnp
or
adc
adc
dec
xor
fnstcw
test
jl
pop
or
push
mov
sbb
xchg
inc
xchg
adc
jno
cwtl
call
inc
add
pushf
lods
cmc
lret
sti
shlb
sub
es
daa
mov
cli
mov
inc
pop
mov
or
jnp
add
mov
ljmp
gs
stos
sub
scas
adc
xchg
daa
xor
into
xor
lods
fsubrs
cs
push
insl
xlat
pusha
cmp
cmp
sti
pop
cli
out
pop
pop
fistps
push
xchg
out
loop
loopne
int
icebp
mov
fucomip
jl,pn
insb
mov
mov
xlat
je
and
pop
loopne
arpl
sbb
mov
in
negb
push
int3
and
mov
xchg
loope
lods
jg
in
sahf
pop
in
cmpsl
into
scas
repnz
mov
mov
sub
cmp
sbb
pop
into
xchg
mov
rcrb
adc
pop
cwtl
cmp
movsl
loopne
cli
mov
adc
dec
pop
mov
push
inc
cmp
cmp
mov
leave
sub
fstl
adc
adc
clc
gs
xor
or
mov
pop
scas
ja
les
decb
popf
lret
xlat
push
cltd
into
adc
shlb
insb
dec
outsl
sbb
jmp
stos
ja
out
cmp
xchg
inc
call
jle
stos
mov
stos
ret
inc
movsb
shll
add
fisubrs
and
test
mov
push
sub
jne
std
cmpsl
jbe
jl
out
mov
lret
dec
mov
movsl
xchg
popa
test
xor
sub
outsb
push
fs
xchg
iret
stos
mov
fists
fidivs
cmp
pop
sub
shr
push
iret
jecxz
lahf
xchg
pop
loope
out
push
adc
and
add
call
ss
int3
xchg
add
jmp
lods
lock
lea
dec
pop
jne
movsb
jmp
mov
and
aad
clc
pusha
and
pop
dec
mov
mov
loopne
es
jo
lret
inc
pop
cmp
in
jmp
les
outsl
pop
add
stc
into
dec
test
dec
aam
xor
adc
push
jmp
sti
sub
push
jmp
or
in
cmpsb
sbb
lcall
rcrb
push
mov
mov
test
andb
out
sub
loop
nop
and
jecxz
sti
sbbb
loopne
rcll
out
mov
mov
test
jle
ja
xor
cld
not
enter
fcompl
ret
and
lret
bound
movsl
mov
and
xor
stos
ds
jmp
pop
mov
in
mov
bound
mov
sbb
shll
test
sbb
and
pusha
cmpsl
dec
stos
orl
int3
and
jnp
data16
outsb
repz
into
xchg
in
push
mov
lods
rolb
movsb
mov
pop
in
test
cld
xchg
add
xor
sahf
ja
or
out
xchg
xchg
lods
jecxz
mov
imul
mov
ret
frstor
cmp
inc
scas
fwait
call
add
sub
fsubs
xchg
mov
test
ljmp
cmp
or
int3
bound
aas
loop
nop
roll
movsb
inc
arpl
les
xchg
mov
ret
mov
test
in
negb
and
call
cmc
ret
mov
add
push
mov
push
lods
and
call
bound
inc
into
add
in
sbb
scas
inc
leave
or
rolb
add
xchg
lods
sub
add
lods
cltd
cmp
int3
mov
mov
test
dec
fiadds
test
fistpl
test
pop
sarl
xor
mov
pop
sti
mov
cld
movsb
dec
add
pop
leave
ret
add
sti
call
sub
sti
lret
movsl
jnp
stos
fs
scas
mov
xchg
cwtl
sahf
and
pop
in
sub
and
push
into
icebp
int
nop
lods
xchg
sahf
jg
out
bound
xchg
mov
clc
notl
and
jge
scas
outsl
push
out
mov
fcoms
inc
jnp
in
test
repnz
repnz
cmpsl
movsl
insl
mov
loopne
dec
xchg
sub
push
leave
arpl
or
sub
pusha
ss
sar
sbb
xor
jb
push
cmp
scas
scas
movsb
push
aam
and
xchg
subb
mov
dec
mov
std
mov
in
fcompl
inc
and
stos
in
imul
int
jmp
stos
stos
das
sub
push
add
pop
push
cs
dec
or
and
arpl
sbb
scas
jge
pusha
bound
scas
js
in
jbe
out
fdivrl
mov
imul
fisttps
and
lods
or
stos
shll
loopne
pushf
pop
mov
setge
and
mulb
mov
popa
xchg
das
outsl
sbb
daa
insl
lods
sbb
lret
dec
jge
or
outsl
add
je
mov
adcl
jp
imul
cmpsl
mov
sbb
mov
into
sub
xchg
fldcw
adc
push
pop
or
xchg
je
test
test
mov
stc
sub
pushf
shrb
cs
rcrl
pop
fwait
and
mov
add
int
fisttps
das
les
mov
movsb
es
and
xor
dec
pop
push
ret
call
movsl
inc
das
aas
jl
fcoml
inc
imul
xor
loop
std
and
rcrl
adc
pusha
das
pop
jnp
sub
jge
cwtl
inc
jmp
scas
xor
fucom
push
xor
pusha
xchg
push
fisubrs
inc
test
pop
or
loop
insb
adc
mov
adc
xchg
adc
lds
fisubl
loopne
ljmp
pop
jne
fidivrs
test
and
mov
jae
and
lods
jle
shll
xor
les
sub
add
push
imul
or
pmulhw
push
adc
sbb
ret
push
loopne
fistps
scas
cld
lods
and
inc
call
sti
lds
lret
inc
loop
hlt
cmp
push
xchg
sub
out
cmc
lret
mov
inc
jg
pop
mov
jg
in
and
and
insl
push
inc
fdivp
cld
mov
lods
xor
arpl
sub
loopne
sti
sbb
mov
mov
mov
xor
and
or
daa
inc
mov
push
cmp
pop
lods
outsl
cmp
stc
cmp
xor
add
std
sbb
in
stc
test
mov
jecxz
pop
out
lret
fisubs
or
in
jbe
jmp
pop
sbb
mov
jl
fwait
bound
inc
outsl
mov
xor
mov
adc
pop
mov
cmp
sub
jnp
insb
xchg
mov
mov
cmp
mov
pop
jns
sbb
dec
sub
enter
stos
iret
rol
sbb
ds
sub
xchg
lods
adc
in
lret
movsb
gs
movsl
xor
sbb
out
cs
push
cmpsl
popf
fistpll
pop
jnp
sub
inc
call
cmp
xor
mov
push
test
inc
scas
inc
inc
fsubs
ljmp
neg
scas
test
inc
stos
push
imul
adc
sarb
lock
or
xchg
mov
lea
cmpb
push
rcr
sarb
sbb
bound
aaa
push
movsb
or
adc
inc
xchg
lock
sbbl
stc
lods
sahf
and
add
bound
fiadds
rorb
cmpl
leave
add
push
lahf
jbe
pusha
cld
ret
loop
test
cmp
stos
xor
mov
cmpsl
outsb
mov
push
xlat
addr16
in
sub
push
adc
xchg
arpl
xchg
dec
and
add
out
fcmove
jo
xchg
push
arpl
cli
test
sbb
lahf
jne
and
pop
pop
push
push
sbb
push
bound
jb
and
stos
lods
les
lock
shlb
xchg
jne
pop
mov
mov
mov
test
enter
push
and
pop
cmp
xlat
inc
into
jae
shrb
aad
mov
cli
into
clc
lods
testb
add
pop
cmp
xor
push
or
push
jbe
and
fcompl
and
outsb
repnz
test
nop
push
ret
mov
in
lods
pop
enter
fildll
lock
pop
inc
into
jge
imul
imul
or
and
dec
push
insl
inc
xchg
int3
mov
jg
ljmp
jne
ret
pop
pop
fucomi
iret
add
adc
jmp
push
movsb
add
xchg
xlat
sub
out
call
call
cmpsb
or
push
iret
icebp
out
cld
and
fcoml
pop
mov
insb
xchg
jbe
xor
and
push
iret
lcall
into
xchg
lods
push
adc
shrl
cmp
inc
sbb
std
cmpsl
outsl
push
mov
loopne
ss
cmp
adc
fisubs
sbb
pop
mov
jne
sbb
ds
gs
push
jmp
scas
bound
xlat
out
loopne
stos
cmp
mov
fs
lods
push
js
mov
jne
fwait
pusha
sti
out
cli
sub
mov
mov
sbb
insb
sub
or
pop
insb
cwtl
rcrb
jae
xchg
jecxz
pop
lahf
sarb
bound
loopne
stos
repnz
pop
insb
mov
push
xchg
aad
loopne
fwait
cmpsl
in
sub
sbb
mov
and
loopne
test
xchg
hlt
lret
adc
push
lret
call
jb
push
stos
cwtl
push
push
jmp
mov
cld
cwtl
int3
jmp
cs
pop
fsubs
dec
orb
push
cmp
int
adc
cmp
xor
imul
mov
daa
mov
loope
push
movsb
pop
test
cmp
enter
sahf
mov
adc
jg
arpl
mov
mov
pop
and
push
cmp
ret
lahf
pusha
repnz
pop
sbb
inc
sub
mov
rorb
insl
xor
test
mov
loopne
jmp
mov
cmpsb
inc
and
fcomi
push
adc
movsl
and
dec
outsl
xchg
out
or
lahf
cld
mulb
mov
inc
fbld
shlb
push
cltd
mov
movsl
cmpsb
xchg
pushf
xor
movsl
in
mov
pushf
loope
daa
sbb
inc
mov
in
mov
lods
mov
mov
adc
dec
addr16
push
push
and
dec
mov
inc
cmpl
imul
arpl
outsb
aas
and
mov
mov
out
daa
ret
jo
clc
dec
insb
jmp
or
in
lret
jle
mov
and
rcr
mov
stc
or
rorl
mov
dec
das
cmpsb
pop
ret
pusha
dec
xlat
jnp,pn
xchg
out
lods
xchg
scas
retw
push
mov
mov
jl
icebp
fidivrs
dec
test
push
loope
out
daa
frstor
test
xlat
rorb
clc
mov
loopne
in
ret
mov
int3
movsb
lods
out
sub
idivl
cmp
sahf
inc
adc
sahf
mov
fcoms
xor
push
sti
push
jbe
dec
clc
jmp
in
push
fldcw
lods
ds
cs
lods
insl
insb
pop
sub
lock
mov
jg
ja
adc
sub
ficoml
jb
fucomip
ds
xor
xor
sbb
add
sub
xlat
push
test
fdivrp
dec
push
cwtl
sub
push
sbb
or
pusha
adc
jns
ljmp
stc
fbld
scas
nop
adc
xchg
push
es
shll
ds
stc
lahf
adc
out
out
lock
loop
push
gs
mov
stc
sbbb
imul
mov
loopne
rcll
imul
and
popf
jge
inc
sbb
push
push
push
insb
data16
pop
jns
add
inc
sbb
xor
mov
mov
mov
dec
aam
test
xor
sub
iret
and
jo
stc
in
add
js
sub
cmc
adc
stos
mov
fdivp
pop
mov
enter
mov
es
test
xor
iret
push
dec
jp
dec
pop
cltd
pop
nop
xchg
fimuls
and
insb
push
sub
mov
loopne
fistpl
mov
add
negb
data16
popa
and
js
dec
fisubrl
movsb
fistl
movsb
fisubrs
adc
cwtl
clc
jmp
lret
gs
icebp
lahf
and
pop
mov
mov
lcall
or
outsb
ficoms
ret
out
in
aam
insl
bound
mov
mov
adc
push
iret
pushf
addr16
push
sub
or
loop
test
fwait
mov
shld
mov
outsb
push
adc
inc
pop
movsb
insb
dec
movsl
call
jne
jbe
pop
sub
jo
push
mov
inc
inc
mov
mov
mov
mov
bound
loop
fdivl
bound
jg
xchg
add
sub
sub
xchg
in
pusha
or
imul
out
jg
push
xorb
loop
add
ret
jae
jl
mov
cltd
inc
jmp
xor
lcall
daa
subl
shll
dec
jmp
aad
test
sbb
das
out
out
mov
ss
pop
xchg
mov
or
sub
enter
or
or
mov
and
inc
cs
push
mov
bound
inc
sarb
mov
leave
pop
in
mov
gs
sub
jne
fstpl
into
mov
sub
cwtl
bound
dec
cltd
push
sbb
enter
in
in
in
out
scas
sti
and
in
mov
imul
stos
sub
bound
fyl2x
fs
mov
and
push
sub
sbb
mov
stos
imul
sahf
pop
add
pop
std
push
jb
outsl
lds
mov
sahf
cmp
in
ds
pop
into
into
cltd
das
jnp
push
nopl
je
xchg
icebp
lret
jae
in
movsl
ret
pop
fwait
mov
pop
pop
test
into
andl
xchg
out
jae
test
pop
push
dec
mov
and
into
test
ret
pop
cltd
iret
push
ja
pop
push
xor
cmc
cmp
mov
mov
mov
dec
addr16
ja
jnp
int
imul
cmp
test
subl
fadds
out
je
push
stos
nop
outsb
or
dec
mov
fstpt
sahf
lea
je
pop
cmpsl
test
into
sbb
aaa
leave
lret
lods
rclb
inc
sub
push
or
xchg
adc
ror
fstpt
push
sbb
cmp
mov
bound
loopne
xlat
xlat
add
nop
jo
stos
sub
out
xor
cltd
into
fldenv
mov
out
add
cmp
xor
cs
mov
sbb
fsubr
test
bound
loop
out
jmp
in
ja
sbbb
lds
and
rcrb
cltd
lcall
sub
dec
ss
lock
cmp
fisttps
rcr
mov
lahf
sbb
dec
sahf
stos
add
scas
xor
fs
movsl
stos
int3
loopne
xor
daa
outsb
scas
outsb
negl
out
mov
es
mov
cmp
scas
lods
push
stos
das
xchg
loope
sub
fldt
sub
add
xchg
push
sahf
out
pop
xchg
lahf
or
popa
push
push
sbb
xor
push
scas
push
test
sub
push
adc
in
pop
lret
lods
scas
jl
ljmp
mov
mov
ret
sbb
aad
lods
push
jg
inc
lods
rorb
cmp
in
sbb
xchg
in
mov
xchg
inc
inc
mov
int
inc
repnz
imul
inc
loopne
movsb
add
lahf
xor
inc
outsb
xlat
xchg
sub
scas
lahf
shll
les
in
sbb
fsubs
jmp
imul
out
orb
dec
inc
out
mov
out
cmp
push
mov
sub
mov
jg
mov
in
icebp
jno,pt
fsubrl
sub
hlt
push
divb
pop
aam
outsl
aas
xchg
ljmp
int3
je
mov
push
add
popa
push
pushf
adc
ret
popa
pushf
dec
scas
sbbb
arpl
sahf
insb
sbb
ljmp
fisubrs
sar
sub
jmp
outsl
in
rcrb
sbbl
add
mov
cmp
sbb
xchg
in
or
in
scas
outsb
out
scas
lods
mov
adc
aam
loopne
mov
mov
lods
nop
repnz
xchg
test
out
aas
stos
popa
cmp
push
orb
mov
aaa
jle
inc
adc
mov
enter
loopne
add
and
pushf
sarb
sti
pop
clc
adc
notl
pushw
jge
cmp
dec
push
fisubs
mov
or
mov
add
std
mov
xchg
and
mov
or
and
cmp
ss
cmp
in
push
call
cmc
add
sub
dec
int3
shrb
pop
mov
pop
scas
sbb
xchg
lret
push
jae
mov
jne
cmc
and
lods
arpl
adc
jnp
jno
or
leave
mov
cmc
out
pop
pusha
fadds
int
bound
push
es
pop
test
call
and
stos
int
sbb
out
es
fsubs
pop
arpl
imul
or
shlb
inc
push
adc
inc
fistl
push
aas
fisubrs
and
aad
aas
ret
add
fisttps
mov
or
in
nop
ja
shll
sub
std
fdiv
sbb
repnz
rcr
mov
cmp
cmp
push
and
sahf
push
into
ror
push
push
sub
ret
mov
cmpsb
sbb
rcrl
insb
cltd
inc
xchg
xor
addr16
push
ret
xor
pop
fildll
add
cmp
jecxz
xor
in
and
insb
stos
mov
pop
in
jno
xor
loop
sub
add
inc
into
packuswb
clc
xor
dec
pop
mov
fldt
jno
pop
jae
fildll
pop
xor
inc
cmc
int
iret
scas
outsl
pushf
jmp
aas
pusha
out
bound
and
lock
inc
jo
jno
shl
pusha
sbb
cld
in
and
jle
ss
and
mov
fcoml
push
jmp
andb
jb
stos
and
les
push
jo
push
pop
jno
lret
cmc
nop
sbb
xchg
adc
adc
out
sahf
loopne
aaa
clc
xor
rcll
lock
sbbb
sub
mov
ja
bswap
scas
lock
outsl
xor
pop
aas
test
out
mov
mov
popf
sahf
push
push
imul
bound
pop
test
dec
dec
inc
mov
sbb
cmp
das
sub
inc
stc
push
or
in
lret
enter
cwtl
push
xor
into
mov
push
fcmovnu
xchg
push
inc
sub
fidivl
mov
push
dec
nop
push
mov
inc
mov
sub
add
loope
scas
lret
xor
fwait
test
push
dec
lods
data16
and
nop
xchg
push
shrl
fwait
push
loopne
jp
aam
jno
roll
push
cmp
lahf
inc
jno
iret
inc
or
pop
and
mov
mov
xchg
adc
ljmp
in
xor
xor
mov
cltd
sbb
pushf
es
ret
push
or
sbbb
fsubrl
icebp
iret
xor
icebp
push
testl
iret
jnp
scas
loopne
pusha
lods
mov
in
adc
stos
fcomip
iret
or
sahf
lds
in
dec
lds
insb
fucom
mov
das
sbb
xchg
fisttpll
loopne
bound
sbbb
bound
outsl
das
jne
test
lahf
jo
mov
inc
pmullw
pusha
bound
pop
and
ficomps
jb
pusha
pop
test
pusha
and
ret
pop
mov
pop
dec
inc
or
aam
add
xor
fsubrl
aaa
push
ss
scas
call
or
or
fldenv
xor
inc
jmp
outsl
in
push
rolb
sti
xchg
or
jb
cmp
or
cmc
and
cmp
push
clc
les
dec
jmp
shl
push
or
shrb
xchg
cmp
lods
pusha
insl
roll
fisubs
test
insb
xchg
flds
pop
ljmp
jecxz
scas
push
bound
cmp
add
iret
push
js
rcl
pop
in
pusha
gs
sub
push
mov
xor
pop
fistl
jae
addr16
dec
sub
jl
std
adc
loopne
xchg
mov
lret
push
mov
sub
ja
in
mov
inc
ds
hlt
jne
mov
sbb
xor
fwait
mov
ret
rorb
adcl
das
nop
jl
mov
xor
imul
and
fldcw
pop
and
adc
stc
sub
addr16
or
push
push
push
outsb
pusha
jno
cltd
and
test
or
mov
mov
mov
adc
in
cli
cmp
jl
or
mov
adc
sar
jl
test
lret
hlt
mov
scas
inc
loopne
and
std
lds
hlt
dec
and
jg
mov
in
push
push
stos
rorb
ret
cmp
add
push
push
sub
mov
fcmovnb
lahf
pop
xchg
sub
jne
pop
pop
test
stos
sar
pop
scas
jns
scas
dec
es
add
in
push
xor
cmp
lret
or
rorb
iret
int
es
test
and
xchg
jecxz
mov
insb
jmp
push
cmp
imul
mov
push
mov
push
inc
insb
cmpsl
and
out
xlat
outsb
adc
outsb
sbb
js
fbstp
jmp
sub
pop
adc
std
adc
ds
jecxz
jl
das
lods
movsl
nop
cmpsb
insl
pop
mov
and
mov
sub
mov
inc
fldl
push
inc
mov
xchg
idivl
fwait
xchg
out
scas
xor
inc
iret
pop
push
cmp
loop
sub
cli
data16
ljmp
xlat
leave
data16
rcrl
mov
fcompl
enter
scas
cmpsl
loop
inc
out
imul
popf
test
addr16
cmpsl
jmp
out
fiadds
mov
sbb
dec
xor
jne
movsb
insb
mov
fildll
jg
mov
or
mov
jp
pusha
pushf
xor
test
dec
int3
rcl
gs
mov
or
dec
and
ja
sbb
pop
arpl
int3
or
and
pop
sub
sbb
movsb
adcb
cmp
aam
xchg
iret
sbb
aas
adc
push
sbb
jns
aam
xchg
mov
dec
dec
cld
push
fisttpl
xlat
gs
sbbb
aaa
fldcw
mov
aad
jno
jge
lret
addr16
push
sbb
jnp
pushf
addr16
clc
xchg
pop
push
cltd
lods
ret
dec
scas
mov
fisubl
pushf
pop
pop
pop
outsb
outsb
out
out
sub
pop
pop
jmp
out
stc
push
popa
test
test
dec
ffree
cmpsl
mov
pop
out
daa
push
mov
aad
push
out
add
sbb
pop
xchg
mov
dec
push
les
pop
mov
insb
std
pusha
mov
loop
insb
xchg
xor
shll
sub
sbb
jg
xchg
push
or
adc
hlt
sub
das
movsl
popf
int3
mov
scas
jle
xchg
sub
ret
adc
sub
popf
jp
pop
sbb
pusha
mov
jne
test
cmp
aaa
arpl
and
mov
xor
and
nop
jmp
push
scas
lahf
mov
xchg
ror
lret
int3
and
pusha
in
in
lock
test
loope
mov
pop
cmc
adc
inc
xchg
bound
xlat
pusha
fwait
dec
fidivrs
aaa
nop
push
pop
mov
scas
lcall
inc
pop
cmpsl
cwtl
and
xchg
mov
out
shr
xor
out
xchg
dec
jmp
push
out
adc
mov
stos
mov
jg
ja
sbb
outsl
and
sub
push
cli
loopne
mov
int
pop
test
sti
ret
dec
sub
fcmovnu
outsl
mov
and
adc
xor
inc
shll
cwtl
sti
test
filds
repnz
push
jnp
imul
fildl
lar
nop
cmpsl
push
pop
add
pop
cmp
jg
fnsave
cltd
in
fwait
dec
stos
movb
sub
adcl
mov
test
js
lret
and
fstpl
outsl
dec
sbb
push
lret
mov
mov
cmp
sbb
xchg
shl
repnz
scas
cmp
push
dec
jge
test
pop
mov
int
adc
in
add
or
insb
jnp
or
fiadds
cmp
fistpll
xor
cmp
xor
stos
mov
lahf
jns
push
jmp
lods
mov
dec
arpl
repnz
cmpb
enter
mov
nop
pusha
lds
pushf
loopne
out
aad
out
cmp
pusha
cmp
popa
testl
mov
push
dec
sub
repz
dec
jg
jbe
in
sub
adc
jmp
push
pop
test
push
cmpsb
test
push
xchg
xlat
xchg
jne
fs
clc
in
add
lea
lea
add
test
iret
add
jmp
popa
out
ret
push
xor
inc
push
bound
sbb
gs
fcompl
dec
sub
lods
imul
daa
pop
xor
js
dec
into
stos
cld
outsb
xor
jmp
pop
fildll
iret
jns
lods
int3
imul
mov
jecxz
pop
sbb
pop
mov
rclb
ds
inc
or
into
mov
push
dec
insb
fwait
lea
icebp
popf
outsb
mov
pop
in
daa
outsb
test
shrb
mov
outsb
pop
cmp
xchg
cmp
les
push
jle
ljmp
out
dec
sub
cmp
sbb
inc
outsl
out
dec
cmp
daa
xchg
or
cltd
ljmp
mov
or
mov
scas
push
pop
fwait
mov
icebp
sbb
push
call
sub
fs
cmpsl
int
push
push
fcomps
jge
jmp
in
or
outsb
pop
idivl
push
adc
jmp
cmp
sbb
mov
sub
lock
pop
mov
nop
sbb
jmp
loopne
ljmp
lods
mov
dec
mov
fwait
pop
inc
jns
std
ljmp
shlb
inc
add
gs
mov
in
and
or
imul
out
and
ret
ljmp
cmpsb
or
adc
movsb
bound
pusha
mov
xlat
mov
dec
mov
into
and
aaa
or
xor
and
mov
cwtl
lods
fisttpl
out
and
ja
shl
and
pusha
addr16
je
and
aas
push
repnz
out
inc
jbe
mov
mov
jns
icebp
sbb
sbb
aas
js
jl
mov
mov
xor
addb
pop
cli
stos
test
scas
or
pop
loop
daa
pop
mov
out
or
loop
xor
mov
cmp
ficompl
bound
frstor
jnp
and
dec
fwait
in
inc
lret
fwait
cmp
pop
xor
push
das
iret
lods
out
insb
bound
rorb
pop
sahf
out
pop
outsb
adc
jle
das
lea
iret
fildll
pop
aam
int3
inc
sbb
jmp
bound
lahf
ljmp
mov
push
scas
orl
jns
jp
push
pop
mov
jge
mov
iret
fisubrs
jmp
cmpsl
int3
cld
out
imul
add
lods
xchg
in
fistl
push
popf
data16
outsl
sub
test
jnp
icebp
hlt
mov
cwtl
add
push
iret
xchg
push
movsl
scas
jnp
in
lcall
fs
out
xlat
insl
and
lds
pop
loope
or
ds
cwtl
in
lret
ja
fsubrp
pop
pop
xadd
push
stos
jns
sub
inc
cs
jmp
out
inc
fidivrs
jecxz
ljmp
int3
add
mov
add
mov
pop
movsb
notl
cmp
fdivrs
push
lahf
pusha
mov
xchg
xchg
or
rorb
jns
std
or
out
imul
push
lret
outsl
lods
mov
fidivrs
loopne
fildll
leave
fwait
push
sbbb
cmpsb
insb
call
and
and
mov
sub
nop
and
sub
inc
xlat
ret
mov
jno
mov
imul
js
and
pop
outsb
and
repnz
mov
jmp
push
lds
adc
shlb
out
stos
mov
mov
bound
dec
outsb
mov
sbb
dec
lret
jnp
cmp
outsl
sub
push
in
push
bound
movsb
fdivrp
mov
push
sub
sbb
pop
lods
jmp
pop
dec
je
push
inc
lea
sbb
out
jge
pop
dec
sub
in
push
int
dec
push
in
pushw
inc
push
cmp
mov
jmp
xlat
push
bound
es
jmp
insl
test
xor
xor
fsub
mov
mov
push
mov
int3
fadd
push
out
or
idivl
pusha
fstpl
push
ljmp
cmpsb
subl
lahf
push
je
xor
mov
pop
xchg
pop
lcall
xor
loope
cltd
nop
push
mov
and
jae
push
shrl
cmpsb
mov
loop
loop
repz
lret
out
jecxz
shll
cld
es
fsubrs
mov
por
int3
or
mov
pushl
rorb
xchg
fisubrs
shr
cmp
fsubs
jmp
shll
sbb
aas
mov
or
out
cmpsl
xlat
xchg
inc
into
inc
shlb
cld
sbb
mov
mov
lock
mov
pop
push
test
dec
test
and
scas
scas
mov
out
xchg
stos
scas
push
fadds
test
add
ficomps
loopne
mov
xor
xor
sahf
divl
fisttpl
in
loopne
pop
ja
sub
jne
push
sub
pop
mov
dec
negl
mov
lret
dec
cld
inc
call
sub
iret
out
mov
and
inc
icebp
push
sbb
sahf
sbb
cmp
sbb
lds
gs
pop
and
push
scas
in
inc
ljmp
faddl
push
fistpll
jbe
or
push
addr16
loopne
das
in
ja
adc
add
inc
icebp
mov
cs
outsb
ret
fcmovbe
sub
ror
mov
cmp
pop
push
cwtl
cmp
add
scas
pop
das
insb
xlat
shlb
lret
mov
stos
sbb
sar
cwtl
pop
aad
mov
dec
es
std
imul
ret
das
daa
clc
push
fisubrl
adc
mov
bound
jbe
outsl
mov
rcrb
mov
pop
mov
and
mov
adc
mov
cmpsb
mov
in
dec
addr16
in
cmpsl
push
sbb
push
cld
enter
in
and
roll
scas
cltd
scas
dec
lods
outsb
test
sbb
in
add
sbb
bound
mov
inc
add
cmp
xor
sbbb
scas
ljmp
dec
inc
lods
lds
into
mov
mov
xlat
adc
fists
xchg
in
mov
fmul
pop
cltd
add
sub
iret
shlb
pop
or
push
out
lret
sbb
std
push
mov
repnz
jecxz
lds
mov
mov
shrl
sti
popa
inc
pusha
jnp
push
out
test
pop
adc
loope
mov
push
pop
mov
lret
cld
inc
or
in
mov
push
jo
fmulp
rcrb
outsb
fdivs
sbb
out
cltd
mov
mov
add
mov
ret
into
outsl
adc
sub
into
xchg
jmp
std
sahf
xor
cld
lret
sbbb
hlt
out
mov
adc
cltd
push
sbb
bound
mov
int3
mov
or
xchg
push
mov
rcl
les
lahf
in
movsb
push
dec
mov
fsubrp
mov
in
orl
mov
iret
mov
mov
adc
dec
daa
jmp
sbb
xchg
jmp
and
call
push
shlb
jle
je
aam
or
xchg
lods
or
rorl
imul
les
fists
aas
jae
mov
mov
push
aad
xor
jbe
push
jne
inc
movsb
xor
dec
es
or
sub
pop
test
scas
jl
popa
sub
jl
mov
dec
xor
aad
int
push
cmp
es
jns
xchg
dec
jne
xlat
outsb
into
das
lods
out
insb
push
hlt
dec
pop
or
rcr
push
ds
mov
call
stos
push
cs
arpl
arpl
pop
sub
or
ljmp
mov
pusha
pop
cmp
je
or
out
je
inc
pop
jl
int
push
push
pop
mov
ret
imul
xlat
pop
scas
mov
outsb
mov
in
jle
fisttpll
popf
repnz
mov
cmpsl
les
aas
sti
sbb
mov
xor
push
lret
sbb
cwtl
scas
mov
scas
bound
fidivrs
stos
out
das
mov
int3
cltd
scas
cltd
cmp
xchg
and
cmp
sub
call
ret
push
mov
dec
iret
fwait
lret
or
into
mov
nop
dec
jmp
dec
mov
sub
fisubl
je
pushf
push
sbb
xchg
pop
push
xor
mov
mov
jns
insb
js
xchg
out
dec
or
lods
lods
loopne
pop
and
scas
pop
insl
push
outsl
loopne
loopne
push
and
lcall
shll
movb
jbe
xor
jmp
mov
lock
insb
cltd
mov
and
mov
xor
fsubr
cwtl
iret
push
mov
aam
mov
scas
nop
es
dec
loopne
mov
pusha
mov
and
ljmp
mov
mov
mov
xor
xchg
dec
and
push
insb
sbb
jp
ficomps
rcr
pop
loopne
fildll
loop
jbe
mov
fcompl
pop
xor
fsubrp
cmpsl
ret
add
fildl
ja
jecxz
test
inc
sti
push
adc
mov
gs
or
fstl
mov
mov
inc
pusha
sub
push
pusha
dec
lret
subl
je
mov
add
cltd
inc
push
pop
mov
mov
lret
shll
imul
in
movsl
fidivs
lret
imul
inc
and
movsb
dec
in
push
push
inc
push
dec
mov
cli
outsb
loope
sbb
jmp
push
out
stc
mov
cld
mov
into
push
inc
jbe
loopne
rcr
dec
adc
scas
mov
jmp
ljmp
orl
scas
jge
hlt
fidivl
imul
inc
or
mov
loope
fistpll
mov
mov
js
dec
icebp
jmp
leave
cltd
icebp
mov
test
mov
repz
icebp
dec
adc
push
mov
pop
mov
ss
add
push
mov
jnp
lret
sti
inc
and
fistpl
push
pop
mov
xor
in
xor
cmp
dec
test
pop
das
sti
and
lods
repnz
repnz
and
inc
pop
enter
inc
test
fisubs
lock
jb
sub
dec
call
subb
pushf
fcmovb
jo
jnp
push
dec
dec
shr
je
add
je
fistpl
jnp
push
ja
mov
sbb
jb
adc
adc
ret
insb
adc
mov
mov
mov
pusha
shrl
jle
ljmp
mov
bound
xchg
cmp
mov
dec
and
xor
arpl
sub
divb
cmp
imul
jecxz
cs
fadds
inc
idivl
imul
in
mov
cmp
scas
fistpll
cs
cmpsl
icebp
cmp
cltd
cli
bound
ja
pop
pop
pop
sbb
jmp
test
mov
dec
or
notb
mul
mov
sbb
pusha
out
pop
imul
shll
repz
dec
adc
fisttps
xchg
inc
pop
out
sbb
out
lcall
in
scas
in
rolb
cmp
mov
mov
imul
dec
sbb
jbe
mov
pop
nop
in
adc
push
add
popf
stos
into
or
in
leave
popf
mov
rorl
mov
mov
xor
aad
outsl
addl
out
std
dec
sbb
scas
stos
and
sub
dec
mov
imul
cmp
inc
out
add
es
fists
into
mov
xor
jp
loop
into
mov
stos
dec
ficompl
decl
cmp
test
movsb
out
mov
movsl
test
cmp
and
xlat
mov
out
adc
fsubrs
fs
ffreep
test
or
call
adc
xchg
mov
mov
push
mov
clc
in
mov
mov
cmp
pop
sub
shlb
imul
daa
mov
stos
push
cltd
mov
imull
sahf
jmp
test
int
fwait
cmp
dec
cmpsl
aas
ss
mov
lret
cwtl
xor
mov
sbb
mov
fisubrs
pop
pop
inc
nop
and
and
shll
scas
add
push
mov
sub
outsl
mov
sub
imul
push
test
loopne
mov
and
sbb
arpl
daa
dec
jg
cmp
fucomip
dec
cmp
jecxz
out
clc
pop
lcall
jae
bound
jb
iret
mov
test
jmp
andb
or
push
cmpsl
jg
xor
fsubl
jne
stos
insb
and
roll
mov
mov
pushf
pushf
push
insb
push
iret
test
pop
pushf
sbb
mov
xor
cmp
mov
or
gs
out
in
nop
gs
pop
sub
or
shlb
jno
movsl
out
cmp
cltd
dec
and
mov
xor
mov
xchg
inc
mov
out
pusha
cmc
aam
in
mov
faddl
ja
fstl
setp
sub
push
mov
jge
adc
test
lcall
incb
movsb
addr16
enter
mov
ss
aas
jne
sahf
icebp
sub
push
and
sub
les
shlb
test
push
sbb
pop
or
insb
lret
pushf
sub
fsub
cld
and
ds
push
jp
bound
test
daa
xrelease
mov
loop
dec
stos
xor
iret
push
mov
shll
and
push
pop
neg
inc
push
cld
insb
or
mov
xor
sub
sahf
dec
scas
push
push
pop
xchg
jae
lods
push
movsb
movsb
add
mov
jl
daa
xor
cmp
jnp
loopne
imul
jno
in
loop
add
bound
add
lret
push
adc
ljmp
mov
cmp
inc
mov
and
mov
in
sbb
push
cmpsl
lods
fistpl
jns
xchg
outsl
dec
adc
mov
lret
test
sbb
push
data16
les
pushf
pushf
mov
and
jge
jnp
loop
or
repnz
inc
inc
push
stos
mov
imul
mov
jbe
dec
xchg
outsl
xchg
xor
ret
fdivp
test
sarl
push
pop
sbb
inc
dec
cmpsb
push
scas
mov
pop
scas
mov
adcb
push
das
aam
stc
mov
adc
cmpb
and
dec
pop
sahf
jae
popf
mov
mov
repnz
scas
iret
sub
jnp
filds
sub
jecxz
push
cmp
push
test
out
shlb
push
inc
adc
push
cwtl
sub
stc
popa
test
pop
les
lret
fwait
aad
sbb
jnp
cmp
push
jbe
or
lret
imul
cwtl
xlat
cmp
decl
sbb
inc
sub
int3
cmp
out
xorb
pop
push
fisttps
xor
inc
test
stos
ja
mov
cmp
insl
dec
inc
loop
mov
ds
jle
popa
and
movsl
mov
sbb
mov
imul
iret
sti
icebp
outsl
movsb
loopne
lods
jmp
cltd
inc
inc
sbb
inc
add
pop
dec
mov
icebp
mov
mov
les
sahf
fucomip
test
cltd
cmc
xchg
jb
fimull
clc
push
mov
fisttpll
loopne
orb
in
mov
cmp
add
or
add
out
insb
mov
xor
fisubs
loopne
les
jmp
aaa
mov
fistpl
rcrl
push
xor
fsubr
mov
call
xchg
lahf
and
sbb
fnstenv
pop
cld
push
pop
fnstcw
xor
jg
cmp
enter
cld
insl
and
add
dec
enter
shrb
mov
and
fwait
pusha
andl
imul
shl
jg
and
gs
fdivs
inc
test
rorb
iret
cltd
scas
mov
mov
dec
jae,pt
cli
and
sbb
sbb
stos
lahf
out
rcll
fldl
mov
inc
mov
dec
gs
out
sbb
push
nop
call
outsl
cmc
pop
xor
mov
movsl
lea
sbb
pop
mov
dec
daa
in
dec
jp
stos
pop
daa
sub
mov
loopne
sub
cmc
stc
adc
imull
enter
or
cltd
pop
jecxz
sti
push
imul
mov
aad
or
or
scas
out
mov
inc
call
sti
mov
test
xchg
cltd
mov
xchg
push
pusha
pop
push
or
jno
call
jg
jb
pusha
out
rcll
and
mov
pop
sub
xchg
jne
dec
mov
aas
pop
jnp
loope
insl
push
cli
loope
bound
pop
dec
fsubl
call
call
lods
mov
inc
std
das
and
jmp
mov
mov
cld
sub
or
add
lret
mov
fidivs
push
sahf
movsb
aam
das
lret
into
outsl
jl
pusha
sub
iret
push
cltd
shrl
or
fidivs
ret
xor
and
test
shll
jae
loopne
rcll
and
bound
cmc
sub
outsl
xchg
and
or
sub
testb
mov
insb
inc
outsl
shlb
fbld
shl
insl
scas
sub
push
das
pushf
shr
scas
out
sbb
lret
cmp
scas
sub
dec
jo
rcrb
testb
pusha
xchg
jl
popa
lahf
loopne
movsb
inc
push
fildll
sbb
fwait
ljmp
ror
and
test
jnp
dec
push
lret
inc
pop
int3
outsb
fimuls
das
push
ret
jl
inc
sub
cmp
test
hlt
ljmp
sub
loopne
fucomip
dec
mov
outsb
lahf
xor
cmc
or
pusha
sub
test
cmp
fisubrs
fldenv
sub
dec
ret
loopne
popa
sub
dec
pop
mov
cmp
and
adc
inc
dec
pop
adc
cltd
mov
aam
in
mov
cmp
je
sbbl
adc
fwait
and
out
pop
bound
in
cmp
arpl
fisubl
pop
addr16
out
push
xor
out
stos
cs
insl
les
sti
xor
fucomi
iret
stos
out
in
pop
mov
or
bound
pop
or
pusha
data16
outsl
mov
cmc
or
cmp
lret
mov
cmp
mov
out
sahf
inc
mov
cmp
jge
add
les
andb
xchg
or
stos
addr16
int3
daa
fisttps
cmp
inc
cwtl
clc
aad
mov
or
addr16
sbb
xor
cmp
andb
rcll
int3
and
fsubrs
int3
pop
insb
bound
fcmovnbe
fistpl
sub
inc
movsb
jle
inc
cmp
inc
scas
mov
sbb
dec
lods
test
mov
mov
in
xor
shlb
pop
sbb
mov
pusha
lret
insl
push
or
sti
xchg
mov
call
and
movl
outsl
test
movsb
push
cltd
inc
insl
scas
outsl
outsb
dec
jge
jae
ljmp
loopne
pop
push
jl
nop
cmp
cmpsl
jl,pn
out
sarb
dec
mov
pop
into
pusha
mov
push
enter
sub
and
sbb
arpl
cli
mov
sub
mov
dec
jmp
jecxz
jo
in
dec
frstor
mov
cmp
or
bound
dec
xchg
fisubrs
mov
mov
test
cmp
push
loopne
mov
push
pop
jecxz
fcompl
dec
es
push
lea
inc
sbb
sub
ljmp
or
and
movups
outsb
ljmp
inc
les
repnz
sbbl
cmp
cmp
sti
test
enter
lret
sub
fstpt
and
xchg
pop
cmp
cltd
cmp
cmp
adc
sub
xchg
std
sbb
sub
jne
outsb
out
int3
mov
lcall
movsl
fisttps
adc
xchg
mov
scas
out
add
fnop
jne
mov
pushf
jne
xchg
enter
icebp
jle
popa
imul
push
fstpl
stos
sbb
dec
jb
push
test
mov
cmp
stos
stos
aas
fisubrs
sub
ljmp
inc
push
pop
xchg
fisttpl
pop
sub
dec
fld
sub
pop
push
xchg
out
push
or
mov
popa
sbb
fwait
orl
test
pop
cmp
iret
imulb
xchg
into
jno
lea
stos
pop
dec
push
loope
mov
add
popa
stos
std
js
lods
nop
das
int3
std
inc
add
lods
sub
aaa
ret
jns
xchg
lret
divl
in
cmp
adc
bnd
popa
call
inc
hlt
fcmovu
sub
or
jne
or
rorb
outsb
jmp
lods
mov
cld
jne
ljmp
mov
push
and
fwait
scas
lods
mov
cltd
bound
sahf
sarb
inc
or
xchg
in
mov
stos
stos
pop
add
daa
xchg
sbb
sub
nop
xlat
in
dec
clc
adc
mov
in
testl
jecxz
sub
out
jmp
adc
in
lods
test
in
shl
xchg
push
loopne
push
sti
mov
negb
add
outsl
xor
push
loope
fnstsw
daa
pushf
lds
add
addr16
adc
push
out
loopne
pop
sbb
cmp
push
andb
inc
push
imul
aam
mov
and
push
push
subb
inc
lock
shl
imul
nop
movsb
cmp
sbb
into
js
ja
icebp
repz
test
mov
push
cmp
daa
bound
or
and
mov
push
push
nop
cwtl
notl
and
inc
jecxz
xor
add
stos
pusha
mov
clc
cmpsl
inc
popa
nop
int3
lahf
sti
jno
fisubrs
and
loop
inc
sbb
test
out
pop
xor
push
cltd
jb
push
sub
loop
jne
out
sub
sbb
and
call
data16
sub
mov
dec
in
shl
jnp
mov
sti
cltd
sahf
nop
sti
mov
cmp
and
int3
fbld
pop
cmp
cmp
add
mov
mov
xor
test
sahf
push
aas
jb
jo
bound
mov
pop
dec
lock
in
lret
xchg
cmp
ret
dec
call
xchg
rcll
jl
fmulp
jle
pop
cltd
lahf
aad
cmp
jne
jle
and
lcall
mov
repnz
jecxz
sub
fisubs
cmpsb
insl
lods
imul
lock
pop
xchg
in
int3
fs
aam
shr
lods
add
push
aas
dec
loopne
push
push
testb
mov
adc
sbb
xchg
sbb
pop
mov
rcll
rorl
aaa
cmp
inc
out
popa
nop
js
arpl
mov
ds
pop
dec
jle
xchg
mov
cwtl
cmpsb
loop
inc
inc
xor
cmpsb
dec
mov
test
cmovl
mov
xchg
xor
mov
in
jns
jmp
sub
fs
jns
jmp
adc
rolb
cld
sub
je
mov
dec
fists
xchg
cmp
fimuls
das
inc
lea
negl
adc
sub
inc
jl
daa
push
test
xor
lods
cmpsl
mov
std
sbb
pop
cld
icebp
mov
dec
or
scas
push
outsl
add
shr
adc
mov
inc
sarb
and
iret
jnp
lods
stos
sub
jle
nop
mov
add
dec
mov
loopne
sub
fisttps
loop
mov
push
loope
std
std
out
les
xchg
popa
sub
and
loopne
clc
stos
ljmp
scas
lods
push
int
fistpll
outsb
push
std
aas
mov
inc
push
ds
fcomip
push
cs
fst
fs
iret
mov
mov
xchg
je
call
mov
xor
imul
js
data16
in
or
in
stos
jp
fisttpl
dec
push
cld
xchg
jno
and
pusha
aam
scas
out
push
arpl
pushf
jg
add
mov
add
leave
inc
xlat
imul
dec
sub
xor
fimull
mov
or
and
mov
xor
xchg
insb
imul
xor
insb
outsb
lret
cmp
fs
push
dec
ds
pop
dec
mov
ljmp
popa
xor
out
incb
jg
iret
jnp
ret
je
nop
jns
add
outsl
insl
ljmp
outsl
push
idiv
fnstcw
jns
pusha
cmp
mov
jnp
jae
sbb
ret
sub
xchg
popa
lcall
mov
adc
mov
fdivs
lret
aas
inc
sbb
mov
nop
ss
jo
or
pop
dec
dec
iret
jmp
fnstenv
add
xor
xlat
lret
insb
sub
xor
xor
repnz
mov
out
lods
in
inc
jle
or
loopne
pop
fisubs
jle
fwait
ret
and
sar
into
or
pop
pop
out
dec
push
and
in
and
sbb
insb
sbb
mov
or
rclb
dec
mov
sahf
pop
fs
bound
xor
icebp
cwtl
xor
sub
and
lahf
ds
arpl
clc
je
mov
aad
mov
addr16
dec
je
and
jp
outsl
addr16
out
sbb
push
cmc
nop
ds
push
idiv
adc
jle
mov
cltd
xor
cmpsb
es
enter
call
imul
test
inc
lods
sub
mov
sub
mov
lds
scas
loopne
shr
xor
int3
push
lret
repz
cmp
push
and
movsl
aas
push
and
push
jle
adc
andb
scas
or
movsb
rcrb
ja
in
movsl
jae
loopne
jnp
mov
jl
mov
dec
test
xchg
fistpl
inc
inc
test
sbb
cs
pop
cltd
loopne
push
icebp
ljmp
shll
push
outsb
xor
xchg
jmp
scas
xor
cmp
pop
test
or
icebp
mov
nop
pushf
dec
jo
test
int
std
push
and
fnstsw
shl
into
imul
sub
stos
lock
or
dec
shlb
neg
cwtl
push
outsb
push
ja
mov
scas
sbb
das
pop
mov
sub
add
cld
pop
daa
outsl
sahf
bound
int
roll
popa
ret
sub
out
shr
xor
jae
repnz
ja
addb
cmp
pop
out
test
and
insl
int3
scas
shll
lret
lods
and
inc
sahf
xlat
out
lock
call
scas
fsubl
call
lret
adc
ror
xchg
ret
loopne
dec
mov
test
mov
cmpsl
lea
pop
push
aam
data16
nop
mov
sub
dec
sub
sub
push
fisubrs
mov
xchg
add
sub
fidivrs
and
or
je
bound
nop
jne
cmp
fwait
lret
sti
frstor
in
stos
movsb
mov
ja
mov
les
jnp
add
pop
or
push
add
les
mov
pop
test
and
and
or
inc
and
lods
and
shlb
cmp
mull
add
dec
mov
bound
fucomi
sbb
fcoms
sarb
or
insl
rcrb
pop
dec
jb
push
pushf
sahf
add
dec
cmpsl
dec
clc
aas
mov
inc
fcoms
adc
loopne
adc
loopne
add
push
pop
mov
xchg
or
in
pop
ja
or
jecxz
add
in
fnsetpm(287
push
mov
out
fsubrl
std
and
ret
lds
addr16
jmp
fimuls
jl
loopne
cmp
jne
mov
loop
lods
dec
mov
loope
sahf
mov
and
xchg
fstpt
aam
mov
out
push
andl
into
xor
push
pop
adc
mov
aam
push
fildl
fcoml
bound
ret
jle
push
sub
aam
loopne
push
xor
scas
push
sub
hlt
test
mov
and
test
int3
or
sub
mov
mov
inc
and
es
pop
incb
jmp
or
sbb
shrb
cltd
lret
arpl
sub
jo
std
fistpl
lods
ficompl
leave
fs
adc
out
inc
test
mov
in
adc
cmp
push
iret
ret
push
add
push
push
mov
push
loop
sub
adc
push
xor
pop
push
aas
and
dec
xchg
sti
and
push
dec
cmp
mov
in
mov
out
dec
pop
xor
pushw
lock
pop
xchg
xor
adc
mov
outsb
jbe
insl
out
movsb
cmpsb
fdiv
cmp
xor
ljmp
loopne
push
loopne
inc
loopne
xor
and
rcr
pop
adc
popf
scas
in
insb
cmp
addl
in
movsl
sbb
adc
pop
das
xlat
sub
jmp
insl
mov
inc
dec
call
out
sahf
sbb
lahf
and
mov
enter
lods
repz
or
outsb
dec
movsb
lods
dec
pop
test
pusha
mov
sti
popa
mov
cmpsb
sbb
push
aas
scas
out
les
call
cmp
lret
mov
cmp
sub
mov
in
popl
jl
fs
loopne
jl
push
pushl
mov
punpcklwd
outsl
cmp
clc
insb
xlat
sub
popf
inc
pop
jecxz
pop
or
sti
scas
inc
je
enter
aam
loopne
popa
or
je
adc
leave
pop
loopne
dec
mov
jb
mov
ja
call
nop
mov
test
lret
xchg
ja
fs
fldt
imul
jmp
xor
mov
shrl
pop
sub
stos
xlat
cmp
mov
cltd
mov
xor
pop
loop
in
sbb
int3
sub
aas
out
icebp
stos
lods
test
ja
xchg
loopw
fidivs
mov
and
mov
iret
mov
sbb
fimuls
aas
mov
sarb
loopne
sbb
sbb
insl
ret
pop
mov
lds
mov
test
cmpsb
scas
or
xchg
inc
scas
xchg
test
inc
xchg
sbb
imul
mov
insb
xchg
push
loopne
ror
jbe
and
fmul
iret
cmc
into
inc
mov
iret
mov
jbe
loope
in
lahf
mov
sub
ss
sub
jne
mov
into
pop
iret
push
cmp
in
iret
clc
jmp
or
pop
cs
sub
int3
fwait
into
test
fsubl
insl
lret
mov
fwait
dec
shlb
ficoml
andl
cmp
cmp
ret
mov
jae
ja
das
xor
sub
movsb
and
popf
adc
mov
cld
bound
sub
dec
addr16
pop
cmc
rclb
test
pop
rorb
cmp
cwtl
nop
pop
sub
insb
push
push
aad
nop
cmpsl
xchg
fcomp
mov
sbb
aas
scas
adc
mov
clc
sahf
sbb
shr
jmp
jo
addr16
lds
mov
pusha
push
imul
stos
dec
neg
mov
in
push
mov
adc
out
dec
outsb
push
insl
adc
push
out
pusha
push
dec
add
loop
out
xchg
shl
je
test
add
push
out
fsubs
call
outsb
mov
add
fcmovb
inc
aad
dec
xchg
sbb
cmp
jle
pusha
fs
mov
out
fs
jno
mov
sti
stos
loop
lret
je
dec
mov
add
sub
or
push
mov
stos
jne
pop
es
gs
fisttps
and
sbbl
jecxz
andl
sub
push
outsl
loopne
fs
out
xchg
ljmp
and
int3
test
or
stos
cmp
loop
cmp
mov
enter
adc
jmp
pop
adc
mov
inc
out
and
sarb
push
jne
sbb
jae
jae
fsubr
scas
push
xor
cmc
sub
out
test
pusha
dec
sub
cmp
jo
xchg
push
adc
lcallw
pop
push
into
jne
outsl
push
les
test
outsb
add
cmc
int3
mov
jmp
mov
std
test
insl
xor
out
cmpsb
cltd
loopne
bound
nop
call
dec
fisubs
pop
push
and
inc
test
pop
dec
lods
stc
sub
pop
out
jb
pop
cmp
adc
into
and
add
inc
insl
cld
ss
movsl
sub
jbe
or
mov
sub
and
xchg
pop
lret
xor
sbb
cmc
mov
test
outsl
sub
scas
pop
test
pop
hlt
fcom
inc
test
push
adc
outsl
out
pusha
outsb
and
stos
mov
test
data16
jns
test
out
add
inc
adc
xor
add
fisubs
sti
popf
jecxz
cmpsb
insl
int3
insl
in
push
mov
mov
ret
jmp
decl
std
out
and
ret
rcrb
mov
cmpsl
not
outsl
and
ret
sbb
rorb
mov
scas
jno
shlb
inc
add
or
push
mov
xor
ja
mov
xchg
fistpl
sbb
xchg
mov
push
fnsave
jg
loop
inc
lds
nop
inc
stc
ljmp
jle
movsb
mov
sbb
mov
push
inc
test
enter
xchg
push
call
rcrb
stos
fidivs
loop
or
lods
insl
add
sub
pop
mov
push
mov
call
cmpb
jbe
xor
outsl
fadd
mov
ljmp
stos
fmuls
inc
nop
cld
mov
iret
or
es
fs
jmp
rorl
mov
std
addr16
mov
mov
ret
bound
sub
dec
cmp
inc
bound
sbb
daa
cmc
loop
gs
icebp
adc
sub
out
inc
pusha
inc
jno
stos
movsb
fidivrs
mov
outsl
jg
mov
sub
cs
push
push
outsb
in
inc
mov
or
loopne
inc
popa
cmp
inc
lds
stos
movsb
push
mov
xor
les
push
sti
inc
ljmp
sub
jo
mov
scas
jns
mov
mov
mov
xchg
or
in
and
stos
into
vmovss
data16
pop
mov
and
sbb
pop
std
mov
jae
out
mov
daa
push
cwtl
lods
mov
and
in
cmp
lcall
cmc
pop
jecxz
out
fdivrl
xchg
loope,pt
nop
cmp
xchg
adc
push
jmp
xchg
in
fucomi
in
cmp
mov
je
movsb
test
push
jns,pn
and
jns
mov
aas
in
xor
and
iret
dec
jnp
aas
cmpsl
popf
rorb
mov
pop
jne
xchg
adc
or
test
adc
fwait
push
jp
test
pop
xor
popa
mov
mov
outsl
sbb
rorl
mov
mov
pop
cltd
mov
icebp
mov
sub
dec
cwtl
dec
shlb
sub
dec
ds
pop
push
pusha
xorb
mov
fwait
mov
out
mov
out
sub
sub
neg
decb
fwait
adcb
jnp
jnp
aam
dec
in
mov
out
mov
sub
push
fsubrl
cmp
rcr
pop
xchg
fistps
lcall
lcall
cltd
test
lret
push
mov
repz
icebp
mov
lock
dec
mov
cmp
rcll
dec
jmp
mov
inc
xor
in
fildll
mov
sub
push
sub
or
repnz
xor
or
test
in
jnp
stos
stos
cmp
insb
sub
dec
jbe
push
imul
bound
and
xchg
jae
icebp
fisttpl
insl
sub
lcall
push
lock
mov
inc
ffreep
and
mov
mov
pop
mov
mov
jns
les
std
xlat
popa
and
adc
mov
lret
sbb
loopne
int
cmp
dec
mov
lret
std
fists
xor
or
push
filds
add
push
xor
lods
sub
mov
jecxz
and
jmp
sbb
jo
mov
std
mov
iret
scas
lahf
dec
jo
or
outsl
add
out
rorb
jns
inc
mov
pop
sub
sub
nop
call
push
sub
push
mov
inc
out
scas
cmpsb
sbb
xor
daa
into
or
es
in
in
and
mov
and
jecxz
mov
and
popa
and
sub
mov
mov
and
std
scas
push
xchg
mov
ffreep
jmp
mov
nop
fsubrp
scas
scas
jle
outsb
call
push
push
das
fbstp
fildll
sahf
cs
loopne
fs
cmp
sbb
out
push
mov
dec
pop
cmp
mov
iret
fnsave
add
push
mov
push
fimuls
jge
ficomps
sti
insb
ja
lods
pushf
mov
sarb
cltd
add
xchg
aaa
fistpll
mov
mov
pop
fbld
movlps
mov
cmp
add
inc
mov
bound
sahf
pop
outsl
stc
subb
jge
cmpsl
sub
sbb
mov
fstps
stos
js
dec
push
jo
xorl
addr16
in
cmp
fidivrs
pop
movsb
add
xor
cmp
jge
mov
sub
cmp
and
xorl
loopne
and
scas
mov
dec
inc
in
cmp
or
loopne
shlb
jge
sahf
and
or
popf
icebp
int3
xchg
fcoms
scas
sarb
or
or
in
fidivl
pop
fisttpll
insb
add
mov
adc
mov
or
pop
inc
das
aas
adc
mov
lea
lods
dec
sti
aaa
cs
pusha
test
inc
mov
arpl
out
in
ljmp
mov
pop
loopne
mov
repnz
and
call
xchg
mov
test
inc
cmp
loopne
sti
test
mov
ficomps
pop
adc
push
jnp
into
cld
insb
mov
insb
pusha
scas
and
enter
stos
lods
mov
fldl
bound
xor
lods
pop
jle
mov
and
inc
in
dec
outsl
mov
or
mov
ljmp
push
add
mov
out
out
mov
dec
cmp
cmp
jnp
int3
cmp
adc
pushf
bound
aaa
inc
cmp
inc
dec
stc
or
push
inc
pusha
adc
das
pop
dec
repz
sbb
mov
aas
add
xchg
mov
push
and
fs
inc
xor
xor
insb
sbb
mov
out
scas
bound
mov
push
xchg
bound
push
andl
and
jle
push
xchg
std
xchg
loop
and
pop
pop
cltd
cmp
sbb
out
inc
adc
into
inc
mov
mov
notb
cmp
sub
cwtl
mov
movsl
pop
pop
jo
shll
stos
scas
cmp
popl
mov
push
in
cmp
or
test
fs
ljmp
cmpb
cld
push
pop
cli
rorb
daa
pusha
mov
fyl2xp1
mov
mov
sub
cmp
shlb
int
mov
pusha
dec
xor
dec
cmp
loope
pause
ret
movsb
icebp
mov
cmc
test
loopne
xor
xchg
adc
and
inc
dec
sbb
add
cmpsb
aad
mov
push
jmp
imul
mov
rorb
pop
push
ss
fcomip
dec
repnz
and
pop
mov
cmp
mov
mov
shlb
dec
sub
adc
mov
leave
or
jae
mov
repnz
sbb
xchg
or
ds
pop
shlb
arpl
nop
sbb
and
out
jl
cltd
mov
add
into
lock
ret
and
cmpsb
push
mov
sti
inc
mov
fimull
add
in
sub
xor
out
inc
and
jmp
push
xor
fstpl
subb
aas
les
xchg
cmp
in
xchg
add
insb
aas
push
aaa
in
sbb
jmp
imul
cmpsl
sahf
add
mov
push
push
jne
bound
jmp
test
pop
push
enter
dec
in
mov
cmp
fstl
lods
call
jg
cmp
mov
out
lods
pop
sahf
jge
jle
lahf
mov
out
int3
and
mov
jle
jno
outsb
scas
xchg
xchg
mov
xchg
out
cltd
pop
outsl
jae
or
xchg
lods
cld
push
test
push
sub
out
and
xchg
repnz
outsl
or
scas
fadd
into
inc
jle
sub
jmp
bound
sbb
fs
pop
aas
out
das
xchg
cmp
cwtl
jp
lret
push
push
sub
or
stos
sub
cmp
in
shlb
xchg
dec
sarl
sub
fwait
dec
cmpsl
sub
loop
cmp
gs
cmp
inc
into
jmp
cmp
ljmp
sub
jle
and
movsb
mov
pop
cmp
lahf
nop
cmpsb
ss
lret
movsb
es
mov
dec
daa
jae
outsb
cli
xchg
repz
pop
mov
mov
jnp
and
inc
ds
into
xor
stos
int3
jo
bound
out
cmpl
popa
ret
or
mov
icebp
add
lcall
enter
fcmovbe
sub
cmp
shrl
push
push
lret
cmpsl
cmpb
or
ljmp
pop
mov
pushaw
pop
mov
inc
push
outsb
fstl
cld
cwtl
icebp
push
adc
pop
lds
faddl
xchg
mov
or
bound
jbe
sahf
loopne
mov
pushf
insb
sub
imul
sub
movsb
movsl
popf
bound
push
rcrb
imull
mov
cmp
scas
inc
pusha
fsubr
cmpsl
jp
cmpsl
fsubrl
cs
stos
fildll
ja
out
enter
sbb
rclb
dec
or
ror
sbb
xchg
fstps
ja
out
clc
mov
mov
stc
sub
or
cmc
orl
push
lods
lds
xlat
adc
insb
jo
dec
sarl
push
pop
insb
xchg
push
sarb
lahf
add
mov
test
scas
into
outsb
fildll
fistpl
popf
out
int
inc
movsl
lods
push
fildll
stos
loopne,pn
cmpsb
adc
push
and
dec
sub
jmp
stos
push
mov
jg
push
adc
fbstp
xchg
loopne
into
adc
push
test
push
call
cmp
lret
addr16
mov
cwtl
nop
out
loopne
mov
inc
stos
daa
into
out
movsl
jg
gs
sahf
es
adc
movsb
pusha
fs
and
ret
int
fbld
and
ret
jecxz
fcmove
mov
bound
lods
loop
mov
lret
inc
jo
add
fs
movsb
lret
leave
outsl
mov
pushf
dec
sub
xchg
adc
and
jge
imul
pusha
ficomps
iret
scas
scas
test
inc
nop
and
lods
out
int
fildll
das
test
out
fisubrs
lods
in
into
lods
adc
mov
stos
test
imul
int3
jmp
stos
loopne
push
test
test
outsl
test
int3
push
push
sub
out
cmpsb
test
data16
daa
lock
pop
insb
mov
fbld
outsl
in
mov
fs
mov
test
and
jecxz
mov
int
pusha
mov
push
and
or
jle
jmp
lods
push
inc
jle
loopne
sub
xchg
cmpsl
mov
mov
adc
arpl
lods
icebp
int3
sub
lock
sbb
jo
or
mov
or
sub
aaa
push
adc
jecxz
divb
and
sub
mov
popf
jecxz
stos
test
inc
push
test
fsubs
and
jns
xor
fistl
lods
mov
nop
iret
insb
xchg
es
pop
stc
add
or
sub
or
gs
sbb
leave
cmp
mov
call
jne
adcb
stos
shr
aam
adc
xchg
dec
mov
mov
popa
insb
pop
adc
cli
repnz
jecxz
mov
and
leave
and
xor
cmovns
pushf
leave
insl
add
pop
lods
mov
test
cld
push
push
insb
dec
icebp
push
fsub
xlat
xchg
inc
sahf
fst
lods
cmp
push
xchg
adc
ljmp
fsubp
in
scas
call
and
out
push
mov
xor
pusha
aam
mov
fsubr
fcom
repz
add
pop
icebp
bnd
outsl
mov
xlat
xchg
and
sbb
push
jmp
jg
test
inc
pop
mov
xor
cmc
and
jmp
mov
scas
jnp
les
jnp
pop
xor
fsubl
and
in
scas
push
inc
sbb
mov
lea
fistl
dec
pusha
xchg
adc
lret
pop
ljmp
mov
sub
lcall
pop
and
iret
scas
xor
xor
sub
mov
in
aam
cli
jno
xor
loop
mov
mov
xchg
call
cmpsl
dec
test
and
bound
dec
adc
mov
pop
out
ds
jmp
les
xor
xor
jge
insb
mov
lret
sarb
fcmovnu
cwtl
dec
push
int3
dec
push
out
lret
das
mov
dec
out
or
rcrl
test
push
and
popa
inc
mov
adc
and
sbb
cmp
fists
push
in
sub
sbbl
ficoms
jb
in
lahf
inc
hlt
xchg
mov
test
iret
mov
aad
add
and
int
or
pop
iret
cmp
cmp
test
imul
mov
clc
add
fdivs
mov
lds
mov
jp
das
sub
xchg
outsl
add
iret
mov
imul
addb
dec
push
in
imul
push
or
out
int3
pop
imul
movsb
xchg
in
outsb
out
pop
mov
inc
ficoms
call
addb
sub
fisubs
inc
jecxz
dec
cmp
icebp
push
pop
stos
imul
dec
add
xor
mov
repz
jae
xor
mov
enter
inc
lods
rclb
les
fsubrl
xor
xchg
add
sti
dec
int3
out
jmp
ja
inc
xor
or
mov
ja
jnp
insb
scas
mov
push
adc
inc
inc
popa
push
das
bound
mov
jmp
shlb
loope
aas
loopne
rcr
xor
iret
aas
shl
and
bound
iret
nop
inc
out
add
iret
cmp
push
mov
lea
lret
loopne
and
loop
mov
in
push
pusha
add
pusha
mov
outsl
iret
test
shrb
out
fmuls
test
mov
xchg
lret
mov
jnp
jns
pushf
mov
icebp
xchg
add
stos
push
lock
or
in
arpl
ljmp
push
ror
adc
pop
adc
push
repz
xor
pop
mov
fwait
or
pusha
fildll
lods
jnp
bound
pop
repz
add
mov
cmp
push
add
idivl
rcrb
mov
bound
cmp
cmp
aaa
pop
pop
addps
fidivrs
xchg
jns
out
mov
faddp
dec
out
cmp
enter
xor
clc
aas
push
push
std
jno
dec
or
mov
and
xor
adc
dec
inc
sahf
out
notl
loopne
xchg
aaa
or
lods
daa
icebp
iret
xchg
imul
dec
jbe
mov
and
sbb
lret
pop
sahf
std
xchg
sbb
loope
mov
out
mov
jne
jmp
xchg
loopne
bound
lahf
fbstp
mov
push
test
jne
xchg
pop
rcrl
ja
fdivl
push
mov
shr
inc
mov
xchg
fsts
mov
bound
nop
cmp
mov
rorb
or
or
cmp
jmp
int
test
sarb
leave
adc
cltd
stc
push
jg
mulb
mov
adc
jp
dec
mov
in
dec
pop
and
or
enter
jg
dec
sbb
dec
cli
scas
test
in
and
dec
stc
lret
push
jae
outsb
or
ss
stos
shll
rolb
mov
ds
aam
sub
lret
cmc
test
lret
jnp
mov
ret
loopne
movsl
shlb
xchg
adc
mov
leave
faddl
pop
mov
pusha
cs
outsl
adc
lods
in
outsl
cwtl
push
lret
int3
bound
incb
enter
mov
leave
sub
pop
shlb
cwtl
loopne
les
xchg
fistps
dec
lods
cmp
loopne
inc
dec
jg
and
mov
daa
arpl
fcoms
jecxz
dec
cmc
lea
out
out
shr
mov
sbb
jo
out
inc
rcll
fistps
cs
negb
sub
xchg
test
and
shl
mov
in
dec
and
jl
loopne
push
ret
loopne
imul
js
stos
test
mov
xchg
fs
fldz
dec
out
xor
mov
push
hlt
jg
repnz
push
xor
jl
imul
and
in
push
mov
mov
in
cmp
xor
mov
jnp
insb
fwait
cmpl
sub
pop
pop
inc
cmp
insb
pop
push
push
jbe
cs
leave
dec
call
insl
lock
getsec
jae
les
push
mov
outsl
mov
sbb
inc
ljmp
mov
pop
aas
xchg
out
outsl
fbld
jecxz
dec
mov
cmc
enter
cmp
clc
in
repz
jmp
mov
adc
lret
stos
pop
mov
push
rclb
cld
mov
popf
mov
movsb
mov
xchg
pop
mov
push
pop
insb
les
fisubs
shl
inc
or
xor
cmp
scas
fs
fs
jo
lcall
pusha
or
add
add
cmp
push
sbb
sub
xorl
pop
adc
push
ljmp
popf
and
mov
mov
loopne
adcl
rcr
add
add
fldenv
ds
scas
int
and
lock
repnz
mov
rcrl
popa
fmull
mov
ret
fistl
inc
mov
push
les
or
loopne
pop
ffreep
pop
inc
out
pop
arpl
loope
jmp
add
andb
jmp
pop
loopne
xor
pusha
dec
and
jge
mov
xchg
push
orb
dec
push
repnz
push
out
leave
cs
ds
lods
jo
inc
aam
mov
push
add
pushf
lret
pop
cmp
loopne
int
xchg
mov
insl
and
pop
pop
test
fildll
dec
sbb
sarl
add
shl
stc
iret
test
mov
pusha
fwait
dec
lret
pushf
ret
icebp
bnd
inc
lods
iret
jnp
aas
xorb
sub
hlt
pop
inc
das
xor
xchg
mov
jg
bound
or
repz
int
fwait
dec
mov
mov
notl
nop
mov
in
sbb
lea
mov
rcrb
outsl
cbtw
fidivrl
push
mov
xor
lods
loopne
mov
hlt
jnp
add
outsl
xchg
fmul
add
fsubl
adc
inc
mov
cmp
pusha
fwait
aas
popl
in
jnp
dec
sbb
mov
push
mov
les
ficomps
dec
jle
mov
mov
pop
daa
mov
testb
dec
dec
loop
fldt
iret
sarl
jecxz
mov
pop
pop
push
push
std
ror
stos
xchg
js
cs
loopne
mov
lret
stc
lds
dec
mov
dec
fisubrs
pop
loopne
cmp
aam
stos
shrb
sbb
add
dec
out
inc
dec
lret
outsb
sti
pop
add
pop
add
jae
jmp
pusha
popa
mov
and
mov
outsl
xor
and
and
xchg
fcoms
lret
aas
xor
and
xchg
mov
out
pop
mov
sahf
daa
pop
cli
and
outsl
dec
mov
mov
mov
fistpll
loop
out
inc
cwtl
inc
into
shll
fnstenv
cmp
dec
xor
lcall
scas
outsl
and
out
shll
repnz
pop
mov
dec
ds
sbb
iret
mov
sub
inc
cltd
rol
or
dec
push
add
out
stos
in
mov
dec
daa
dec
pushf
ljmp
pop
cld
aaa
mov
xchg
add
out
loopne
adc
mov
pop
leave
fdivs
insl
sbb
xor
ret
pop
das
cmp
aam
das
inc
in
fwait
call
sub
out
fstpt
lahf
cmp
push
cs
aad
jg
aas
adc
cmp
push
out
loopne
and
movl
sub
inc
scas
cld
lea
or
push
rcr
push
or
setb
aas
jg
and
cli
inc
cmp
cmp
sub
lods
push
lret
dec
pusha
inc
or
movsb
inc
or
adc
sub
iret
scas
bound
stc
xchg
or
mov
pop
jl
jge
aas
outsl
pop
fistpll
mov
popf
in
scas
push
ljmp
outsl
fchs
call
bound
imul
sti
lret
rorl
mov
mov
cmc
out
in
push
jo
out
sbb
mov
jg
or
jge
pop
loopne
les
fcomp
mov
std
pop
insb
leave
in
shlb
fs
call
faddl
leave
idivl
jmp
stc
jg
pop
pusha
adcl
sub
push
ljmp
shrb
sub
add
push
pushf
js
jo
test
lock
pop
cs
mov
mov
ds
add
pop
pop
imul
adc
cmpsb
or
fwait
and
loope
sbb
adc
cs
andl
aas
xchg
xchg
inc
mov
insb
sub
mov
add
and
mov
sti
outsl
adc
sub
jbe
outsl
mov
mov
sbb
data16
xchg
insb
int
dec
mov
or
push
xchg
xchg
lret
lret
ret
cmp
insl
jmp
in
out
inc
mov
lret
dec
inc
mov
dec
xchg
ret
loope
or
out
sub
jnp
mov
jecxz
paddsw
and
inc
sbbb
jle
cltd
or
xchg
icebp
bound
out
sub
sub
movsb
aas
push
jnp
mov
int
pop
xchg
sar
icebp
lock
sti
mov
cmc
pop
or
fadd
adc
and
fbstp
sub
mov
stos
lods
out
and
ja
xlat
cmp
aas
jmp
outsb
flds
ljmp
lret
push
arpl
add
mov
test
les
sub
xor
push
nop
xchg
movsb
push
xchg
pusha
in
push
pop
jno
popa
lcall
sub
xor
cmp
stos
add
fs
daa
cmp
cwtl
adc
or
cld
xor
push
fistpll
mov
lcall
fneni(8087
cld
movl
mov
jne,pn
dec
sub
repz
sub
pushf
loopne
test
pop
or
std
es
div
jae
jmp
mov
cltd
push
dec
jns
add
jg
shrb
das
outsl
aam
pmaxub
dec
jb
addr16
mov
inc
lods
or
inc
and
add
push
cs
das
mov
cli
shlb
stc
push
outsl
xor
push
fidivl
xor
shll
sbb
dec
cmc
push
mov
call
xchg
dec
insl
cltd
fildl
call
andl
out
dec
adc
loopne
stos
inc
outsb
jae
insb
fldcw
subb
addr16
test
dec
rorb
loop
xor
sub
pop
fwait
aas
push
insb
jno
in
cmp
mov
mov
out
sub
cld
xchg
insl
pusha
sbb
ror
add
lds
pop
push
insb
push
push
loopne
call
scas
push
xlat
xchg
mov
insb
pop
outsb
shl
mov
inc
mov
int3
mov
mov
loope
xchg
cltd
pop
jo
mov
lret
mov
dec
pop
pusha
dec
sbb
repz
inc
push
lret
inc
inc
dec
or
jl
xor
fmuls
repz
test
cs
xchg
in
mov
mov
ljmp
fsubl
loop
or
add
out
inc
cmp
mov
xor
lcall
shrb
cltd
cmpl
ljmp
mov
cld
inc
shll
mov
sub
mov
dec
pusha
stos
clc
ja
jo
loopne
jle
inc
pop
jbe
cmp
adc
lahf
fcomi
in
mov
or
out
mov
or
mov
push
cs
cmpsb
test
mov
outsb
push
dec
dec
sub
xor
mov
adc
lock
imul
in
push
fisttpll
pushf
pop
jmp
out
cmc
filds
insb
test
pop
xchg
add
cli
addr16
insb
jo
cmp
cmp
xchg
in
pop
rclb
fistl
rcrl
jns
mov
inc
push
mul
mov
cmpsl
inc
or
fs
sbb
lahf
arpl
mov
in
int3
aaa
aad
mov
shrb
mov
faddl
cs
mov
mov
mov
or
push
in
cld
int
rcrb
jno
call
fndisi(8087
int3
cmp
shrl
imul
popa
cmpsb
lcall
mov
hlt
bound
pushf
inc
stc
movl
es
bound
jbe
xlat
push
xchg
movsl
jecxz
aad
iret
mov
jo
jnp
rcrb
test
jle
inc
inc
loop
pop
xchg
xchg
loop
mov
jecxz
jno
imull
jge,pn
clc
and
and
push
jp
outsb
xorl
mov
jb
lahf
pusha
shr
and
les
jmp
cmp
mov
js
jno
fcomps
sbb
mov
inc
jge
push
add
clc
xchg
and
repnz
into
cmp
shr
lret
jno
rol
cli
loopne
sbb
jle
loopne
add
test
pop
xor
lock
sbb
cwtl
into
sub
pop
and
cmpsb
arpl
lods
jne
daa
mov
jnp
mov
xor
iret
xor
cmp
in
lahf
jecxz
pop
xlat
push
cmpsl
lahf
push
push
fcmovb
sub
test
repnz
out
repnz
xchg
push
lock
int3
xchg
mov
cmp
adc
aam
adc
dec
jo
adcl
and
rcll
rolb
cmpsb
pusha
pop
mov
fstpt
lods
pop
push
mov
je
cltd
xor
mov
sbbl
loop
ret
sahf
mov
lds
ret
sbb
and
or
mov
loope
sarb
sbb
loopne
lods
inc
pop
in
xor
fwait
push
mov
icebp
cmpsl
jb
lods
ret
xchg
ret
or
sti
stos
loop
xchg
mov
add
or
loopne
lods
fcom
sbb
int
cwtl
call
shll
repnz
or
mov
stc
cmp
loop
icebp
and
addr16
loopne
in
add
lods
mov
add
sbb
inc
test
in
sub
push
lds
outsl
pusha
sbb
mov
adc
call
pop
insb
jl
cmpsb
mov
repz
call
cmpsl
add
test
and
push
lods
xlat
lret
out
mov
fcomip
shl
lods
adc
mov
cmp
fmulp
or
mov
cmp
adc
pushf
repnz
in
and
jmp
mov
adc
push
sbb
push
pop
xor
outsb
outsl
jle
cmp
fidivrs
in
mov
fildl
int3
int3
fmull
shr
mov
sti
lods
jl
popl
or
int3
rcrb
les
mov
js
xchg
push
ljmp
faddl
ficoms
pop
scas
aas
icebp
iret
jmp
fildl
aam
enter
sti
outsl
push
or
lds
push
add
pusha
in
bound
mov
and
pop
pushf
and
cmp
or
out
sbb
push
out
lret
add
xor
adc
add
in
xchg
rorb
mov
arpl
enter
lahf
aam
xchg
les
sarb
sbb
pusha
mov
mov
mov
or
mov
mov
lret
adc
js
ljmp
js
addr16
cltd
js
or
mov
add
inc
int3
dec
sarb
das
aam
popa
sub
cmpsb
mov
mov
in
or
lds
jmp
xor
xor
sub
in
out
not
push
in
push
rorb
jmp
loopne
inc
mov
ss
stos
sub
jge
aas
lret
clc
subb
push
cmpsl
int
cmpsb
outsl
sub
and
scas
bound
ficompl
cli
mov
fs
and
mov
add
push
sub
sbb
pusha
rcr
push
scas
mov
and
xchg
mov
bound
loop
sub
loope
imul
xchg
cmp
andb
push
sub
loopne
pop
scas
cmpsb
subb
push
movsb
fbld
mov
add
cli
xor
xchg
jl
sbb
xchg
mov
lret
dec
inc
adc
shrb
add
outsl
xorl
stos
shlb
decb
mov
pusha
les
xchg
jg
xchg
sbb
or
xchg
lahf
mov
push
ja
jmp
popa
add
cwtl
fsubrl
jbe
xchg
pop
and
iret
icebp
shlb
adc
in
push
or
stos
mov
lods
fiaddl
xor
arpl
nop
clc
pop
push
idiv
push
loope
dec
sub
mov
jge
bound
jge
or
mov
cmp
out
xor
mov
xor
pop
xchg
jo
pop
pop
ljmp
in
mov
jl
cmp
pop
nop
jp
stos
or
imul
in
jb
sub
outsl
jmp
sub
add
add
rorl
sbb
pop
movaps
jg
mov
and
sub
stos
insl
leave
scas
pop
lods
and
or
add
and
pusha
mov
insl
rol
jl
scas
loopne
loopne
dec
arpl
bound
pop
stc
pusha
loopne
xchg
adc
mov
push
and
xchg
xlat
xor
ljmp
or
stos
xlat
insb
fs
mov
jo
outsb
mov
sub
test
mov
imul
hlt
jmp
mov
dec
inc
pusha
mov
rcl
lret
nop
sub
inc
rorl
mov
pop
mov
arpl
test
mov
dec
out
divb
clc
cltd
sbb
pusha
lret
mov
jg
subl
sbb
out
loopne
cwtl
adc
ret
xchg
xor
add
test
sbb
cmpsl
outsl
cmp
mov
fwait
scas
in
mov
fidivrs
mov
je
ljmp
ret
sbb
in
outsl
sbb
jl
lods
mov
jle
mov
arpl
rcrb
or
and
lcall
inc
fwait
sub
test
loopne
je
mov
cmp
xor
out
rcrl
mov
mov
js
and
pop
and
and
and
cmp
sbb
fidivs
push
lds
sbb
rcrb
data16
out
fsubrl
into
jae
call
dec
repnz
add
push
pop
mov
roll
insb
fldt
push
pushf
pop
fidivs
pop
xor
push
adc
push
jae
scas
push
and
sbbb
insl
ja
sub
insb
xorb
rolb
xlat
insl
loop
les
rclb
cmp
or
setl
fistpll
inc
int3
add
lahf
adc
bound
lods
test
mov
int
mov
loop
mov
repz
ficoml
jbe
sahf
test
inc
mov
popf
mov
and
dec
cmpsl
and
push
je
lds
mov
push
mov
jl
inc
stos
in
xchg
and
scas
and
pusha
int
pop
andl
mov
into
jns
arpl
sahf
cld
pop
outsl
sub
or
fwait
call
inc
pop
xor
push
push
dec
add
or
pop
outsb
push
outsb
pop
mov
pop
call
fnstsw
mov
push
mov
in
inc
push
mov
test
cmp
jecxz
nop
ds
test
stc
add
pop
fnsave
imul
outsl
in
push
pop
pop
lods
sbb
test
insb
dec
fisttps
fs
sbb
inc
push
cmp
imul
add
cmp
jae
lock
dec
or
adc
mov
out
test
popa
cmpsb
test
pop
std
lods
mov
fs
lret
iret
cld
add
in
xchg
divl
push
add
mov
fidivrs
xorps
pop
cltd
out
sbb
adc
out
jmp
mov
arpl
fisubrl
and
or
cltd
xor
je
jnp
mulb
inc
pusha
jg
std
fwait
mov
cmp
sub
pusha
lods
adc
cmp
mov
cli
push
arpl
jecxz
jnp
rclb
in
pusha
lahf
shrl
mov
insb
fwait
mov
dec
bound
xor
xchg
and
arpl
mov
dec
mov
pop
mov
adc
cmpsl
bound
fiadds
ffreep
outsl
subl
test
xor
je
dec
aaa
jo
mov
pusha
fisttpl
push
decb
xlat
iret
adc
pop
leave
aas
insb
pop
xlat
fidivrs
sbb
shll
mov
adcb
rclb
mov
push
cmp
lret
into
and
mov
cmpsl
add
cltd
add
lock
gs
outsb
push
mov
sub
cltd
ror
and
sbb
insl
xchg
push
insl
into
jp
adc
jnp
jg
aam
call
test
xor
pop
inc
cmpsb
adc
pop
pop
cld
pop
sbb
cmp
sub
js
fbstp
add
test
ficomps
mov
xchg
test
jbe
cwtl
jnp
jae
inc
adc
in
adc
push
pop
mov
outsb
mov
movb
cld
push
data16
cmp
cltd
lock
in
adc
mov
ret
mov
mov
aad
mov
rcrl
push
aam
negl
jg
rcr
cmp
nop
das
jns
dec
js
dec
add
xor
jge
lret
cmpsb
adc
int
cmp
add
insb
xor
sbb
mov
rcr
test
test
dec
cmp
or
shrl
and
pop
push
cmp
add
xor
loopne
sbb
lods
and
shrl
mov
inc
cwtl
sub
xchg
hlt
out
jl
pop
call
and
mov
inc
dec
jmp
lcall
insl
cli
push
loope
test
jge
loopne
pusha
and
pusha
rorl
add
ljmp
adc
sub
sbb
dec
insb
adc
int3
insl
pop
aam
add
lcall
ror
push
xor
je
mov
sahf
mov
or
lock
jno
idivl
add
loopne
cld
cltd
repnz
fisubs
fcoml
mov
test
lret
cltd
iret
test
inc
push
push
scas
fxch
inc
imulb
mov
sahf
cmp
fcmovne
mov
mov
ds
sub
mov
addr16
sub
in
scas
scas
data16
xor
or
fwait
iret
dec
ds
loopne
adc
sahf
xchg
into
test
sub
xor
sahf
dec
sbbb
push
xchg
xchg
add
sub
lods
fs
clc
cmp
mov
cmpsb
sub
in
sub
popf
cmpsb
sahf
pop
fld1
pop
mov
outsb
jns
ja
loopne
repz
xor
mov
and
test
popa
mov
loope
out
mov
cmp
mov
in
adc
arpl
sbb
test
jb
cld
cmpsl
mov
mov
imul
dec
pusha
icebp
in
xor
sahf
rclb
cmp
mov
sahf
movsl
mov
jae
mov
adc
push
loop
loopne
js
cli
push
push
rcr
rcll
mov
dec
push
or
ficoms
push
xchg
dec
sub
out
xlat
adc
icebp
xorl
mov
fdivs
out
or
dec
std
repnz
in
rorl
dec
mov
mov
add
stos
leave
sahf
inc
sbb
int3
cld
adc
cmp
mov
push
pop
xchg
and
scas
jae
jno
mov
cwtl
loopne
dec
add
sub
xor
push
xchg
cwtl
gs
outsl
push
testl
mov
test
adc
bound
dec
mov
popa
in
push
sbb
movsl
call
enter
adc
subb
cmp
pusha
cld
aaa
test
mov
push
pop
mov
arpl
mov
sbb
das
loopne
test
xchg
mov
xor
push
and
add
push
loopne
ds
push
daa
jecxz
mov
cmp
shl
aas
pop
pushf
push
in
push
cmp
lods
or
lret
fisttpl
xchg
insb
pop
xlat
mov
jae
outsl
aas
lods
ds
movsb
fdivrl
test
mov
imul
adc
inc
fisubs
pop
push
push
sub
push
xor
in
in
pop
imul
mov
fstl
cmp
push
je
push
pop
pop
loop
ror
push
push
add
into
push
push
fstpt
jbe
sbb
leave
sti
iret
mov
sub
mov
aad
adc
sub
add
pop
inc
test
les
inc
loop
pop
iret
jl
es
scas
sub
xchg
cmpl
cmp
lds
and
das
mov
jl
in
xchg
mov
fs
and
into
in
es
stos
pop
add
sahf
cld
push
xchg
fisubl
nop
mov
mov
adc
ljmp
adc
mov
lret
pop
js
mov
gs
push
pop
mov
rcr
push
push
clc
ror
mov
mov
out
push
and
shlb
push
out
or
divb
dec
sahf
icebp
lret
in
ljmp
push
stos
mov
scas
jno
sbb
mov
and
cmp
fimuls
lahf
cmc
stos
es
decl
cltd
mov
inc
std
dec
lret
mov
inc
stc
iret
push
inc
xchg
lahf
cmp
push
push
cwtl
iret
aam
mov
enter
adc
call
or
xchg
repnz
in
out
in
das
push
dec
outsb
ss
pop
lock
sbb
std
sbb
nop
sbb
xchg
jle
xor
jns
lods
fcomps
nop
sbb
les
cwtl
xor
adc
lret
test
shr
adcb
shll
and
sub
incb
sub
jne
lea
cld
in
ficomps
xchg
jns
pop
call
xor
call
gs
pop
outsl
in
andl
and
addr16
mov
mov
fsub
add
jg
test
cmc
mov
in
ret
jnp
pop
loop
ror
or
cmc
and
icebp
mov
out
adc
into
sti
sbb
push
jae
pop
lahf
push
or
mov
insl
enter
sub
jne
dec
mov
mov
movsb
icebp
sub
daa
sbb
cld
je
in
cmpsl
loope
lods
shrb
fmuls
lea
cmp
cld
imulb
int3
cmp
sbb
xor
in
lcall
fildll
cmp
or
data16
insb
std
out
push
daa
adc
div
aam
fsubr
or
outsb
mov
cmpsl
int
xor
sbb
nopl
les
xor
add
aam
inc
insl
mov
ja
pop
inc
inc
fwait
arpl
ds
out
push
call
dec
sbb
inc
adc
int3
sub
shl
pop
or
ret
in
ja
shl
in
stos
or
scas
and
outsb
sbb
sub
in
sti
frstor
scas
ret
pop
cmpsb
test
in
lahf
cmpsb
dec
in
fsubs
mov
lret
jnp
test
in
addr16
stos
ja
popf
shll
add
sub
add
sahf
loop
imul
lock
add
imul
inc
pop
movsl
into
pop
cltd
fsubrl
fstl
ret
mov
mov
dec
push
in
mov
bnd
push
sbb
popaw
lods
xor
or
ret
push
dec
jp
pop
jmp
inc
outsb
push
fmul
movsb
test
scas
cmc
mov
out
push
xchg
stos
jne
test
clc
mov
jo
cmp
sarb
lods
jns
or
cs
mov
sahf
xor
pop
sbb
or
xchg
out
arpl
mov
outsb
or
cmpsl
inc
into
cltd
mov
xchg
or
in
cmp
pop
test
xchg
jle
sub
mov
sub
stc
scas
test
into
xor
sub
lods
dec
cmp
outsl
lds
out
int3
fwait
lret
jp
lock
into
pushf
xor
daa
pop
aas
add
adc
idivl
xchg
xor
test
inc
and
addl
push
add
int
mov
adc
dec
mov
orb
insl
in
movsb
ficomps
cltd
xlat
jb
movsb
outsl
xorb
cmp
and
nop
in
push
mov
xchg
int
jnp
pop
xchg
test
add
addr16
cmp
mov
adc
lret
adc
cltd
rorb
pop
ret
dec
add
cmp
insb
cmpsl
mov
or
je
test
sbb
cmp
lcall
addr16
arpl
or
mov
xchg
xchg
in
sub
loope
cmc
lret
lret
and
mov
mov
sbbl
push
in
pop
pusha
lock
adc
enter
push
fwait
xor
test
inc
out
xor
loopne
adcl
inc
test
sub
loop
push
fucomip
idivb
in
outsl
fbld
cmpsl
mov
pop
lock
dec
xchg
mov
pop
dec
jl
outsl
adc
dec
mov
or
sub
jbe
add
loopne
pop
fidivrs
xor
xlat
out
push
cmc
cmp
mov
xchg
dec
test
pop
insb
into
pusha
cs
fs
fnstsw
in
testl
or
xchg
cmpsb
sti
imul
and
lods
cmp
fstpt
ret
xchg
fidivrs
clc
int3
movaps
imul
fsubrs
test
hlt
jne
in
push
popa
leave
xor
xor
cld
scas
mov
pop
jno
ds
pop
out
jns
lods
mov
inc
popa
push
add
dec
ja
adc
adc
in
xchg
ror
ror
mov
pop
test
stos
mov
push
jo
shlb
xor
push
mov
cmp
xor
sahf
cwtl
in
bound
pop
int
add
lcall
xor
je
jbe
push
pusha
push
xchg
or
bound
gs
jae
xchg
out
push
sub
stos
mov
sbb
mov
mov
cli
insb
mov
addr16
loopne
xchg
inc
jmp
fildl
out
mov
das
call
mov
pop
bound
jbe
rorb
shrb
pop
or
adc
in
mov
pop
cmpsb
push
pop
push
in
rorl
sar
mov
inc
push
test
pop
or
imul
dec
or
xorb
push
scas
inc
insb
in
adc
mov
stos
pop
jle
jae
push
pusha
dec
or
mov
sbb
add
sbb
call
iret
jge
inc
adc
ret
aas
dec
push
sbb
ds
in
iret
pop
cld
rol
pusha
pop
arpl
push
je
dec
adc
insl
or
sbb
mov
xchg
les
inc
xchg
insb
scas
das
sbb
icebp
sub
int3
arpl
rcll
daa
jg
in
fs
xor
cs
dec
or
cli
outsl
lods
add
je
push
das
mov
fwait
iret
push
xchg
push
in
pop
insl
lret
mov
cmc
test
icebp
outsl
sti
sub
cmpsb
push
ljmp
push
mov
mov
mov
xchg
jnp
test
add
fisttpl
lret
xor
xor
bound
mov
mov
lods
in
nop
test
loop
xor
jbe
push
sbb
scas
mov
in
mov
sub
dec
pushf
xchg
mov
xchg
fistps
xor
and
cmp
add
and
dec
outsl
cmp
mov
mov
in
inc
or
pop
subl
scas
gs
mov
outsl
mov
cmp
mov
cmc
add
fwait
std
cmp
insb
addr16
rclb
adc
stos
adc
sti
push
xchg
jmp
das
aad
daa
rorl
sbb
scas
popa
xor
rolb
inc
xor
mov
pusha
nop
jg
and
pop
jl
outsl
and
add
rcrb
lods
mov
shrb
outsl
adc
in
jo
in
dec
out
bound
push
outsl
pop
inc
add
nop
loope
into
mov
movsl
inc
jae
test
or
lret
and
bound
push
lds
cmp
mov
in
rcrb
sub
push
dec
mov
mov
jnp
loopne
in
shrb
mov
push
aad
movsb
push
dec
scas
js
fs
jmp
xchg
repz
push
mov
mov
mov
mov
and
in
jg
out
cmp
scas
and
aas
push
push
push
push
ret
loopne
stos
in
addr16
lret
ds
data16
jae
sahf
push
fstl
add
mov
pop
cmp
dec
mov
cltd
sbb
mov
sub
pop
test
ljmp
push
sub
cmc
and
jle
inc
mov
add
imul
movsb
mov
imul
mov
jnp
lods
mov
js
cmp
stc
sarb
mov
sbb
push
jmp
jo
sub
out
das
outsl
je
cmp
stc
aad
fidivs
and
in
push
out
shrl
in
mov
out
rcrl
push
loopne
std
jmp
push
and
testb
fnstcw
loop
sti
inc
cmp
inc
pop
cwtl
rclb
xor
cmp
sahf
mov
dec
outsb
adc
sarb
push
dec
cmp
sti
mov
mov
pop
les
adc
sbb
sti
fistps
dec
cmp
lret
inc
and
in
aam
iret
mov
inc
mov
or
jnp
hlt
push
mov
fists
push
repz
xchg
adcb
sbb
or
dec
outsl
xor
push
mov
cs
dec
scas
lods
insw
mov
addr16
mov
xchg
call
test
pusha
dec
push
mov
sub
xlat
jns
loop
cld
sbb
call
cwtl
loopne
push
daa
out
test
lods
and
mov
xor
push
adc
dec
les
fisttps
gs
mov
mov
fs
mov
jmp
mov
or
jns
jmp
fwait
xor
mov
jns
iret
pusha
iret
repz
xchg
add
and
cwtl
or
add
add
pop
loopne
push
and
xchg
jno
in
pusha
call
push
mov
dec
int
mov
gs
pop
cltd
das
roll
adc
cli
and
rolb
out
in
cwtl
rorl
sbb
push
in
push
and
pop
ret
mov
sub
ret
mov
sbb
pop
popa
xchg
cmp
xchg
inc
add
lods
and
or
cmp
or
ja
aas
iret
add
je
xor
push
movsl
es
xor
xor
adc
cmp
out
push
shl
cli
out
mov
adc
push
lods
push
int3
inc
insb
imul
gs
pushf
shlb
insl
pushw
test
mov
push
aaa
push
lahf
mov
lahf
adc
stos
ja
pop
mov
add
cmp
push
hlt
jg
aam
cmc
and
out
lcall
les
testl
fldl
cwtl
pushf
cli
mov
jp
lea
sarl
push
movsl
cs
outsb
aam
sbb
mov
inc
ret
iret
adc
shr
andl
push
ret
cmp
les
bound
inc
adc
mov
lahf
test
and
bound
and
repz
mov
inc
jns
mov
mov
in
pop
mov
push
dec
call
inc
test
cmpsb
pop
test
rolb
dec
add
aad
dec
xor
bound
iret
ljmp
jbe
les
shrl
xchg
and
mov
adc
xchg
xchg
popa
mov
pop
test
add
inc
fildll
aam
outsl
mov
jnp
or
lods
and
cmp
iret
fwait
loopne
jo
in
and
push
icebp
roll
mov
cs
sub
test
movsl
sub
xchg
lock
insb
shl
popf
loopne
cmpsb
inc
mov
push
jae
out
inc
test
add
enter
cltd
dec
pop
mov
lret
or
fists
sti
imul
cmp
dec
sbb
lret
adc
aas
fs
in
cltd
shll
jno
nop
mov
subb
call
and
das
push
or
int
inc
dec
scas
pop
lahf
and
and
push
mov
or
repnz
js
push
mov
push
movsl
iret
inc
jle
mov
mov
aaa
push
inc
shrb
xchg
out
push
jle
jb
pop
ljmp
ljmp
push
call
fdivs
cmp
xor
sbb
lret
mov
imul
jp
test
out
int
sbb
int
push
sti
stos
scas
sbb
jbe
std
mov
mov
mov
pop
aas
loopne
pop
pushl
pop
mov
fbld
loop
lahf
fidivl
push
cmp
pusha
lds
mov
push
sarl
xchg
cltd
int
or
mov
leave
cmp
shll
xchg
jle
jne
pop
jnp
push
shl
mov
mov
je
adc
cmovne
push
pop
lret
cltd
mov
js
add
int
push
ja
subl
mov
sbb
mov
adc
inc
pop
aad
cmp
sub
testl
mov
daa
shl
pushf
cmp
mov
fistps
xchg
imul
movsl
imulb
pop
pop
fcomip
lods
sbb
xchg
loopne
lret
imul
cmp
cltd
or
div
in
out
inc
jne
dec
cmp
and
int3
mov
dec
int3
gs
sbb
jg
ret
adc
ja
mov
out
ret
arpl
jle
mov
lret
pop
bswap
pop
ret
cli
clc
mov
jp
pop
pop
cli
mov
or
fstp
out
test
mov
mov
arpl
push
std
mov
cmc
mov
pushf
loopne
sub
cmp
addr16
ret
adc
and
test
dec
das
loope
push
mov
pop
xor
sub
dec
xor
sbb
iret
or
sbb
push
adc
orb
cmpsl
adc
add
xchg
call
xchg
es
lahf
bound
xchg
push
icebp
pop
loope
test
insb
cwtl
jg
ret
or
shrb
into
scas
jmp
in
cwtl
pop
jg
sarb
clc
in
cmpsl
mov
pop
or
out
lock
add
mov
orb
sub
pop
test
adc
and
scas
sbb
sub
iret
add
jp
pop
scas
xchg
xchg
xor
loop
push
lcall
sub
out
sbb
add
dec
jae
fwait
inc
gs
bound
sti
xchg
sahf
loopne
xchg
add
adc
sti
xor
popa
lret
into
cmp
lret
cmp
sahf
xor
das
insb
and
insb
jge
cmpsb
dec
dec
mov
lret
fwait
sub
in
fildl
nop
imul
scas
outsl
cmpsb
inc
sub
aam
sarb
sbb
pop
mov
push
call
inc
test
scas
fnstenv
adc
sbb
ljmp
pop
push
push
loope
sbb
ja
insb
dec
in
push
mov
cltd
scas
in
xor
xchg
mov
push
sub
mov
cmp
aam
jne
daa
cltd
imul
dec
in
lret
in
pop
or
or
in
lret
mov
outsl
pop
in
inc
lods
pop
push
sti
or
mov
sarb
cli
or
xchg
int
cld
jl
jns
push
fstpt
xlat
inc
cmp
mov
cmp
int3
loopne
mov
js
loopne
into
arpl
clc
imul
cld
jge
loop
and
ljmp
dec
pushf
pop
les
cmp
std
stos
mov
popa
in
fs
or
out
sbb
pusha
cmpsb
dec
sbb
xchg
or
cmpsb
jmp
test
lock
icebp
push
jnp
nop
and
xlat
pop
xchg
or
inc
negb
cmpsl
sbb
sbb
cmp
mov
sub
xor
mov
lret
bound
in
fstp
jo
push
sub
mov
shl
mov
int3
jecxz
push
jae
push
jno
or
popa
sub
cmpsl
popf
mov
mov
jg
fnstsw
cltd
push
and
push
fbld
mov
mov
sbb
cmp
xor
scas
inc
or
fldl
add
sbb
cltd
jl
cmp
data16
add
jae
loopne
jb
jo
lods
ret
mov
das
cli
mov
xor
adc
or
ljmp
imul
xchg
or
loop
inc
dec
sti
and
neg
jae
xchg
jg
mov
fisubs
adc
ljmp
sti
daa
inc
sti
loopne
xchg
jge
les
push
jmp
icebp
xor
cmpsl
jmp
pop
out
popa
lret
dec
sbb
dec
lods
andb
push
jg
fcmovb
xchg
adc
loopne
fiaddl
cld
and
push
xchg
cmp
mov
or
push
lds
cltd
push
in
pop
mov
jbe
and
cwtl
in
cmpsl
mov
mov
mov
popf
sbb
xchg
inc
xorb
clc
loop
stc
pop
pop
mov
icebp
data16
pop
out
xchg
out
sbb
das
iret
push
aad
xor
cmp
imulb
ljmp
and
arpl
push
jbe
sbbl
rcrb
aam
lock
je
cltd
xchg
and
or
test
in
adc
cs
or
jae
or
pusha
pop
sub
xchg
imul
add
and
xchg
push
push
lret
mov
mov
inc
out
mov
push
jge
ljmp
loopne
jns
in
pusha
fcomp
rcr
enter
jmp
jl
ret
pop
lock
mov
or
push
jecxz
inc
in
in
pop
adc
sahf
jae
sub
or
test
xor
cmp
sub
pop
or
shll
dec
or
push
sbb
push
sub
sbb
mov
cld
rcrb
and
inc
aas
dec
into
jmp
mov
scas
xor
call
insb
test
jo
cs
jae
adc
test
mov
mov
inc
in
mov
jmp
cli
jae
xor
push
jg
das
out
insl
mov
outsb
mov
int3
xlat
add
push
int3
inc
sbb
sbb
leave
pusha
sbb
sub
cmp
and
and
in
negb
xor
adc
jge
lods
mul
pop
js
mov
xlat
out
les
das
inc
xlat
sbb
and
out
cmp
das
popa
and
sub
daa
cli
mov
fcomps
loope
adc
and
pop
or
into
bnd
xlat
mov
mov
or
and
lock
movsb
stc
mull
inc
outsb
lret
or
mov
mov
shlb
std
sahf
subl
pop
test
arpl
aam
fmul
pop
dec
cmpsl
jge
mov
rcrl
arpl
pusha
popf
mov
cli
cmp
scas
lds
clc
cmpl
les
into
adc
movsb
mov
movsl
sbb
decl
cmp
ja
aas
sbb
fs
mov
in
and
pop
popf
data16
test
and
push
mov
mov
push
lahf
ret
dec
push
cwtl
loopne
cwtl
fwait
and
fiaddl
sub
imul
int3
xor
sbb
sarl
mov
es
in
adc
mov
movsb
aad
and
jmp
loope
lcall
sbb
pop
xor
sub
jno
sahf
lods
dec
int3
push
movsb
out
push
into
imul
inc
jg
adc
jo
push
sbb
arpl
and
xor
mov
adc
jg
mov
add
popf
mov
pushf
sbb
push
iret
adcb
dec
lea
jb
clc
inc
jle
scas
mov
call
ret
sti
pop
inc
lods
ja
aas
or
ror
jge
test
stc
and
movsb
lods
shrb
cmpsl
mov
sti
jg
cmp
cmp
aas
inc
sbb
outsl
out
mov
jb
and
imul
lcall
mov
sti
pop
sbb
add
fsubl
adc
cmp
lods
xchg
mov
sub
out
test
in
data16
xor
jg
in
mov
jmp
fdivrs
mov
scas
icebp
aam
jle
je
mov
mov
or
cmp
push
fldenv
push
rcll
cmp
xor
test
jg
call
cmp
inc
imul
inc
push
int3
jg
gs
bound
jno
sbb
adc
test
mov
dec
imul
stos
popf
popf
push
int3
or
or
call
shll
jp
mov
push
jl
ja
jecxz
shl
mov
scas
jno
pusha
xor
pop
cmc
mov
test
insb
inc
aam
pop
or
add
cli
inc
call
int
jl
sar
mov
mov
mov
out
imul
or
outsb
mov
dec
in
pusha
or
inc
test
and
push
ds
jb
add
jne
int3
scas
xchg
aam
mov
ja
out
lods
mov
pop
or
lret
cmp
push
orb
push
jne
dec
pushf
xchg
mov
fcomps
pusha
lds
pop
add
push
loope
test
jg
sbb
ljmp
xchg
cltd
out
arpl
in
pop
mov
call
pop
cmpsl
scas
clc
adc
sbb
into
adc
mov
xchg
andb
gs
neg
xorb
popa
xchg
pop
filds
cmp
lods
into
fmull
mov
fs
mov
or
xorl
movsl
leave
sub
ret
pop
mov
insb
enterw
pop
sub
xchg
lahf
cld
xor
inc
dec
pop
stc
mov
adc
dec
cltd
ror
sti
or
pop
fwait
lods
cmp
and
and
inc
int3
rorb
int
fwait
xlat
jnp
iretw
cltd
xchg
shrl
cs
sbb
cli
test
inc
jno
jbe
cmpsb
add
mov
test
fstpt
in
jne
dec
inc
dec
out
aaa
dec
in
or
in
mov
mov
gs
sti
fcoms
xor
push
test
mov
push
pop
cltd
mov
pop
movsl
sub
lods
lahf
push
push
inc
sbb
ficompl
cmp
pop
int3
pop
sbb
mov
fnstcw
push
insl
dec
gs
xor
pop
inc
sti
bound
mov
xchg
stos
test
jno
jp
fisubs
gs
loopne
test
jae
int
jo
mov
add
fisubl
in
push
xchg
pop
ror
sbbb
out
ljmp
mov
call
imul
add
dec
clc
cmc
and
sub
and
pop
shl
iret
outsb
daa
in
call
loopne
icebp
scas
lods
ffree
sti
sbb
add
inc
jns
push
insb
mov
clc
cmp
mulb
dec
imul
xor
out
add
cld
leave
push
cs
jmp
push
in
mov
xor
aam
rcll
iret
add
add
ss
cs
pop
cmp
sub
aas
shll
loopne
movsb
jno
outsb
jo
jle
fwait
push
pop
xchg
dec
popa
xchg
sbb
outsl
or
cmp
aad
dec
mov
mov
aad
in
addl
ret
je
lds
push
frstor
or
loopne
in
aam
stos
mov
in
fists
dec
mov
jle
xchg
jge
out
cmpsb
insb
das
adc
popf
sub
mov
aam
js
sbb
mov
out
loopne
shlb
cmpsl
sahf
ffreep
outsb
into
inc
test
or
fisubrs
mov
aas
stos
aam
add
jle
leave
xor
push
hlt
lret
sub
je
sbb
cltd
adc
dec
mov
jl
into
imul
nop
xchg
and
push
mov
push
and
and
sarb
xor
bound
xchg
in
xchg
aam
cmpsb
sbb
fwait
gs
incl
mov
sub
jle
ja
cmp
fwait
push
push
int3
cmp
insl
cmp
in
gs
add
leave
ja
lds
inc
orl
xchg
fs
fcmovb
mov
out
xlat
jno
xor
fsub
test
pop
xorb
fcoms
xchg
gs
out
xchg
xor
pushf
dec
les
lcall
iret
in
push
mov
insl
in
fwait
das
pop
das
outsb
push
iret
mov
fwait
mov
bound
addr16
and
dec
mov
fwait
adc
add
pop
scas
sbb
pop
sahf
adc
fdiv
fists
mov
xor
xchg
jae
test
add
push
icebp
pop
mov
lods
sti
cli
pop
xor
sub
lcall
pop
cwtl
sahf
jnp
mov
dec
pop
cmpsb
xor
shll
pop
repnz
mov
inc
fucompp
cmc
and
jo
and
ror
sarl
lds
cmp
and
dec
mov
dec
xchg
cmove
out
loop
cwtl
xor
adc
jbe
cmp
adc
icebp
cmp
lods
dec
mov
iret
cmp
int3
das
jns
adc
scas
lock
mov
nop
xchg
pop
aad
in
mov
mov
repnz
cmpsl
jno
dec
push
mov
xchg
int
jns
dec
shlb
push
int3
add
inc
icebp
xor
call
pusha
xor
push
cmpsl
mov
xchg
cltd
adc
cltd
insb
adc
in
pop
or
xor
loopne
dec
test
fsubr
lea
mov
cltd
jge
and
pop
and
bound
outsb
sti
fiaddl
ljmp
cmp
outsb
mov
icebp
les
add
sub
loopne
jnp
xchg
fnstenv
test
fcmovnbe
mov
shrb
xchg
xor
dec
cs
cli
int3
ret
push
ljmp
mov
ljmp
loopne
les
push
rcrb
pop
fisubrs
cmp
pushf
cs
jno
int
ret
sar
cs
fnop
xlat
aas
cmp
mov
movsl
lahf
pop
aam
data16
push
mov
les
fcoml
int
pop
push
push
scas
or
call
xor
dec
sbb
ja
scas
nop
inc
cmp
adc
cwtl
cmp
nop
mov
lods
scas
call
clc
insb
ja
jecxz
es
push
es
mov
mov
inc
add
pop
rolb
xor
or
shl
or
cs
add
or
shrl
pusha
bound
movsl
pushl
adcb
fdivrl
jne
xlat
out
push
push
inc
mov
test
pop
int3
loope
xor
addr16
out
sbb
cmp
push
pusha
fwait
cmc
je
xorl
sbb
aaa
addl
stos
xor
in
push
sarb
ss
mov
push
lods
jns
les
mov
push
adc
xlat
mov
jmp
inc
push
imul
shlb
push
fsubl
pop
orb
in
stos
in
push
dec
insb
stc
xlat
cmpsl
into
push
pushf
adc
addr16
fcompl
mov
das
mov
mov
nop
pop
pop
shlb
test
pushf
cmp
test
aas
pop
pop
cmp
add
sub
rclb
cmpsl
jmp
pusha
xchg
jle
lods
sbb
adc
mov
lret
loope
push
push
push
add
outsl
in
iret
adc
fs
bound
mov
lock
push
bound
cmp
loop
xor
push
add
test
sbb
sbb
jl
sub
xor
addr16
loopne
shlb
mov
enter
sub
mov
fs
or
sub
jo,pn
mov
rcrb
jg
add
bswap
and
gs
sub
xchg
sti
cmpsb
negl
lret
imul
call
imul
inc
dec
and
mov
fcoms
xor
inc
dec
jnp
mov
lret
sbb
popl
or
cld
pushf
lahf
cmc
or
push
add
test
mov
je
or
loop
out
ljmp
out
addr16
lods
pop
inc
xchg
and
data16
cwtl
push
xlat
lods
int
scas
pop
mov
nop
cmp
dec
lret
pushf
sub
or
inc
mov
pop
xor
mov
ret
push
pop
imul
stos
cmp
es
sub
test
imul
sahf
les
fildll
nop
inc
mov
scas
dec
and
pop
pusha
mov
int3
das
test
insl
int3
mov
lods
in
pop
sbb
scas
jl
les
push
fwait
enter
ret
stc
clc
outsl
adc
fisubl
sub
fdivrs
push
pusha
xor
es
mov
sub
outsl
cwtl
adc
lock
sub
and
pop
insb
pop
and
cmp
push
fildll
test
in
sbb
adc
lret
jno
xor
jmp
insl
fstpl
outsl
test
mov
lods
mov
lods
scas
inc
loopne
icebp
mov
lret
lock
scas
fiadds
xlat
outsl
sbb
ret
cld
mov
or
jnp
dec
cmp
sub
test
icebp
jb
pushf
dec
rolb
and
pusha
push
pop
xchg
in
inc
push
or
stos
xchg
out
dec
pop
out
out
into
pusha
int3
ds
shrl
mov
dec
in
fwait
pusha
in
iret
pop
mov
idivl
iret
mov
mov
pop
jmp
mov
cmpsb
xor
jno
sub
mov
push
sub
jle
jecxz
testl
pop
fcmovnu
jb
imull
lret
mov
mov
mov
out
loopne
inc
inc
push
outsb
insl
push
sbb
inc
mov
cmp
fstp
mov
rorl
fwait
sbb
cmp
fcmovnb
in
adcb
cmp
iret
pop
lods
inc
mov
scas
dec
push
cmp
mov
fwait
and
test
pop
xor
call
out
mov
push
in
cmp
rol
outsl
test
aad
mov
gs
testb
jg
push
push
loopne
out
or
int
mov
paddsb
push
add
idivb
adc
lock
outsl
test
mov
mov
ret
frstor
mov
sahf
icebp
iret
fnstcw
leave
mov
cmp
or
int3
jno
sub
inc
outsl
jle
xor
mov
clc
add
mov
lcall
fidivs
xor
in
in
or
cmp
inc
inc
mov
inc
xchg
jnp
ljmp
test
pop
out
rorl
push
mov
pop
or
push
out
aam
aas
mov
mov
or
cmpsl
mov
insb
adc
in
fnstenv
dec
sub
add
sets
xchg
imul
scas
ds
movsl
fistl
xchg
push
in
stc
and
scas
fs
stos
xor
cmp
int
mov
mov
outsb
inc
es
mov
mov
in
into
or
or
imul
and
add
sub
add
push
fistpll
xor
mov
ret
out
cmp
in
outsb
mov
inc
in
bound
loope
sub
leave
stc
arpl
test
sub
fwait
mov
pop
xchg
repz
stos
xor
xchg
iret
and
jb
nop
or
push
pusha
shrl
ficoms
fcoms
mov
loopne
jmp
push
mov
scas
mov
sbb
fbld
mov
ds
pusha
je
jnp
xchg
sti
loopne
outsb
in
daa
test
fst
imul
cwtl
sbbl
ret
jp
int3
je
daa
nop
sbb
mov
and
das
popa
sub
fucom
sarl
jae
lret
mov
and
cmp
pop
jge
clc
cld
xor
mov
xchg
sbb
adc
adc
xor
mov
bound
fimull
int
xchg
fdivs
lods
shr
xor
push
xchg
stos
imul
mov
ficomps
pushf
lods
and
test
outsl
cmc
test
cwtl
cld
cmp
fildl
and
pop
jp
test
rcrb
testl
dec
std
or
lods
loop
push
std
fistl
and
jge
sbb
xchg
aad
enter
loopne
int
mov
fdivs
inc
mov
sbb
or
push
mov
dec
mov
dec
test
xchg
sbb
fdivrl
cmpsl
or
sub
mov
fidivrs
mov
bound
adc
fstl
xor
bound
dec
jge
subb
pusha
and
mov
dec
mov
inc
adc
dec
fwait
bound
mov
jae
jns
xchg
cmp
stos
inc
lret
mov
loop
das
fcmove
mov
fidivl
bound
or
popa
sbbb
pop
xor
pop
movsl
and
dec
xor
pop
push
xchg
adc
lret
fnstenv
inc
add
pushf
mov
cmp
cmp
mov
cmpsl
repnz
sub
jb
xor
mov
sub
mov
fisubl
loopne
pop
xlat
movsb
xor
mov
sbb
or
iret
xor
add
dec
outsl
stos
jo
stos
mov
mov
adc
pop
or
dec
or
dec
ds
orb
movsb
add
xor
insb
in
jae
cltd
fidivs
xchg
adc
outsb
lods
fisttpll
cmp
mov
ds
fwait
cmp
stc
xchg
push
shll
pop
jb
pop
loope
adc
fldenv
mov
sti
sub
and
mov
adcb
cmp
test
in
cld
mov
mov
xchg
push
push
in
mov
clc
push
push
rclb
adc
sarb
jp
xchg
xorb
shl
cmp
cmpsb
push
das
loop
sarl
pextrw
push
nop
fdivrl
lea
cmp
and
leave
paddb
pop
in
xchg
fwait
int
test
cwtl
lret
aad
push
jo
jno
xor
mov
cmp
sbb
sahf
cmp
add
jle
push
js
pop
ret
scas
movsb
mov
push
test
and
sbb
imul
pop
push
int3
lahf
xor
xor
jo
pop
pop
shrb
inc
inc
imul
fildl
sbb
jecxz
mov
ja
add
bound
mov
mov
add
cld
xchg
in
jge
pop
ljmp
iret
ss
push
sbb
jb
jnp
inc
xchg
dec
xor
and
sbbl
cmc
fs
sbb
xchg
push
iret
lods
loopne
dec
loopne
out
js
jmp
data16
push
lahf
rorl
loopne
repnz
adc
dec
push
aas
xor
inc
cmp
mov
test
fwait
pop
rcrb
das
push
push
jno
int3
pop
aas
push
dec
int3
lods
push
call
xchg
scas
mov
orl
mov
dec
nop
mov
fiadds
ds
cmp
jle
xchg
pop
jg
insl
mov
in
mov
imul
js
mov
dec
sarl
into
push
mov
and
lret
mov
das
xchg
lret
call
popa
cmpl
idivl
fwait
sub
dec
insb
or
sub
in
fwait
dec
fbld
jecxz
inc
scas
call
mov
xchg
iret
es
mov
push
fisubs
sub
mov
fisubs
jmp
sbb
lahf
or
insb
pop
lahf
jle
sbb
int3
and
pushf
add
ficomps
or
outsl
lock
sbb
sbb
push
ficoms
scas
movsl
mov
and
sub
mov
or
stos
mov
int3
jmp
lret
fisubrl
int3
push
test
jl
imul
sub
sbb
inc
int3
add
jns
and
test
mov
xchg
xchg
js
lea
frstor
xchg
add
fidivrs
scas
test
mov
cmp
fmull
mov
inc
test
jo
mov
push
cmp
std
les
cmp
test
sbb
icebp
mov
push
fistpll
test
into
jecxz
in
mov
enter
pop
out
push
lods
push
pop
mov
lods
dec
cmp
movsb
mov
sub
adc
sub
and
dec
cmp
jecxz
mov
pusha
push
shlb
jmp
lahf
iret
in
jns
push
add
insb
and
mov
bound
sbb
subb
dec
jo
int
fmul
mov
sahf
lock
loope
call
icebp
mov
mov
mov
pusha
fcoms
xchg
loop
sub
icebp
and
sbb
sub
bound
add
add
cmpsl
and
dec
sar
jns
jmp
bound
loopne
fcmovu
xlat
pop
mov
shrb
rorb
adc
rcr
fadds
sbbb
into
out
cwtl
jmp
lahf
cmp
out
out
leave
nop
cmp
test
add
push
fdivrl
inc
sub
xchg
aad
in
ret
jg,pn
imul
decl
push
pop
out
fcmovnbe
aas
fnsave
jno
dec
ret
and
jo
nop
inc
lea
and
mov
lahf
loopne
or
out
and
imul
out
sbb
jle
and
scas
stos
out
subb
bound
test
or
std
jge
ljmp
icebp
mov
subb
out
bound
es
imul
xchg
xchg
nop
add
xchg
stc
jmp
test
inc
nop
setle
sub
inc
or
sub
adc
ret
icebp
mov
jecxz
push
nop
test
sbb
lret
sti
icebp
lcall
das
outsb
arpl
pop
jnp
inc
pop
stos
adc
fisubrs
jne
stos
lods
daa
int
and
test
xchg
ljmp
cmp
loopne
pop
sub
sub
repnz
mov
fidivrs
js
scas
xchg
dec
sarl
mov
ds
test
sbb
in
sbb
aaa
ficomps
int
outsl
nop
pop
js
xchg
andb
fisttps
mov
jle
jae
mov
dec
cmp
mov
mov
cmp
aas
test
aad
out
lret
xor
sti
andl
nop
mov
outsb
mov
xchg
iret
sbb
icebp
shll
jbe
cwtl
mov
lret
cmc
and
pusha
sub
sti
scas
mov
movsb
dec
fisubrs
filds
sub
xchg
ljmp
push
ret
mov
das
fdivrl
test
ficomps
push
xchg
dec
fisubrs
push
push
xor
cmp
addr16
lret
inc
shr
dec
or
mov
stos
jmp
add
cmpb
mov
push
mov
into
sub
icebp
outsb
mov
fisttps
jo
gs
inc
mov
mov
or
jae
fldl2t
mov
nop
insl
sub
mov
adc
mov
jl
enter
ret
xchg
shl
sti
test
mov
mov
fmul
and
xor
push
pop
js
xor
cld
xlat
pop
push
and
ret
out
inc
ja
fs
or
jbe
out
inc
test
icebp
inc
sub
sub
fsubrs
push
pusha
mov
sub
adc
pop
int
add
fcompl
xchg
in
cmpsl
ds
dec
sti
push
xor
jnp
das
mov
sbb
adcl
xchg
ljmp
mov
mov
mov
out
popa
and
mov
ja
xor
or
mov
stos
cmpsb
inc
mov
xor
jne
lods
and
lds
and
fsubr
or
push
jmp
push
test
jle
inc
jecxz
sbb
outsl
and
mov
push
popf
in
popa
xor
pop
ds
into
inc
ret
jmp
cmpsb
stos
fucomi
mov
pop
mov
jae
push
xor
fisttpl
pop
arpl
pop
pusha
cld
pop
out
fs
cmpsb
bound
dec
out
dec
jno
sub
nop
dec
test
push
push
jne
cs
push
mov
push
shlb
push
imul
cwtl
jle
ret
xchg
dec
sub
fstpl
mov
add
cmpsb
jg
inc
rclb
scas
xchg
cmp
pop
inc
xor
shll
add
push
and
outsb
push
mov
aaa
cmp
sti
add
clc
or
mov
cwtl
jbe
adc
cmp
jo
mov
das
nop
sub
mov
mov
dec
negb
ficomps
sbb
fdivrl
add
cwtl
movsl
sub
sahf
stos
jns
push
dec
in
xchg
iret
cs
dec
in
lret
or
mov
insl
test
or
mov
pop
nop
adc
sub
js
fsubrs
xor
lods
sub
inc
mov
jg
mov
out
subb
cltd
lret
inc
loopne
in
push
xor
cmp
push
lods
outsl
mov
nop
jns
ljmp
in
mov
add
pop
loopne
and
inc
stos
daa
push
movl
sbb
sub
mov
ljmp
pop
and
push
dec
std
nop
mov
xchg
scas
cs
dec
sub
out
jbe
mov
icebp
iret
mov
xchg
add
adc
inc
lret
add
movsl
sti
or
fsubl
xor
fbstp
pop
mov
sub
jle
sbb
ffreep
scas
cmpsl
std
xlat
jl
push
mov
iret
pop
xor
push
mov
sar
ljmp
push
or
lods
outsl
push
or
mov
inc
lods
scas
arpl
mov
xchg
pusha
shl
and
and
aas
leave
mov
repnz
lods
arpl
sub
jecxz
and
loopne
and
and
clc
lods
popl
sbb
jge
xorl
gs
adc
test
sahf
add
mov
call
mov
iret
scas
divl
or
cwtl
imul
ds
ffreep
inc
mov
xor
les
data16
aaa
adc
lahf
clc
sbb
push
add
nop
jp
rcrb
nop
jnp
xchg
daa
jge,pt
lods
out
icebp
xchg
or
inc
dec
shlb
dec
arpl
pop
push
mov
icebp
stos
push
dec
jle
imul
lock
jmp
insb
mov
and
pushf
js
lods
cmp
inc
aaa
int
test
or
cmp
adc
enter
lock
push
adc
nop
mov
xchg
and
ret
mov
cld
out
jle
add
pop
sub
stc
inc
cmc
aad
xor
fs
mov
add
and
stos
sarb
stos
repnz
insl
in
sbb
lods
xorl
test
loop
test
and
popf
inc
ljmp
push
mov
lahf
out
imul
dec
jo
out
mov
enter
cmp
js
inc
addr16
cmpsb
lock
stc
sub
sub
mov
pop
jnp
inc
jp
xchg
push
loop
mov
cmp
jle
data16
hlt
test
outsl
pusha
dec
add
and
in
push
jge
fldt
pop
sub
repz
inc
lods
int3
lock
cmp
add
call
sub
insb
or
push
out
adc
sbb
mov
lods
push
and
inc
leave
push
jnp
cmc
sub
test
add
nop
pop
shll
fwait
xchg
sbb
mov
jns
jg
jmp
sub
out
cli
in
mov
das
jno
in
outsl
out
adc
lock
loopne
cli
stos
lods
dec
lret
and
xchg
orl
mov
sub
pushf
popf
lret
jae
push
insb
sahf
movsb
out
psubq
filds
sbb
sub
adc
lods
lahf
adc
mov
and
in
scas
shrb
push
rolb
not
cmp
or
cmp
in
ret
sub
nop
or
leave
and
push
cltd
lods
add
gs
out
dec
xchg
dec
adc
push
and
lret
xchg
loope
sbb
sbb
push
and
aas
popa
icebp
xchg
adc
imul
hlt
clc
xchg
sub
mov
push
sub
adc
movsb
int
sahf
lahf
adc
movsb
mov
es
int
cmpb
push
je
lret
rorl
dec
iret
test
fwait
rclb
out
enter
into
lea
fwait
xorb
xor
ja
xor
bound
sub
pop
ljmp
call
inc
xchg
into
add
push
xor
out
add
mov
movl
pop
or
outsl
adc
dec
loopw
lret
jle
mov
xlat
mov
cmpsb
in
mov
xor
enter
cld
mov
insb
insb
mov
xchg
fldt
add
in
xchg
and
cld
add
adc
cmp
and
pop
lahf
or
movl
jecxz
mov
sbb
sarb
pushf
bound
xchg
out
or
fldt
cli
imul
or
jae
icebp
sub
mov
and
push
mov
mov
js
pop
jmp
call
clc
cmpsb
cld
test
xlat
mov
push
ss
and
stc
push
lods
scas
push
push
mov
dec
cmpsl
arpl
pop
out
stos
lcall
stc
xlat
push
into
xchg
out
cld
clc
lods
cmp
mov
inc
call
xlat
sbb
cltd
lods
sbb
pop
mov
xor
mov
in
mov
pop
not
cmc
xlat
push
jbe
pop
lods
movsl
inc
pop
bound
adc
dec
push
jbe
repz
or
rcr
jg
or
xor
xchg
inc
sbb
sbbl
dec
push
xorl
xchg
cmc
shl
jno
aas
inc
cmp
xchg
sbb
stos
iret
or
inc
sub
push
out
jg
js
xor
int3
push
cmpsl
sarb
xlat
outsl
loopne
jle
addl
jecxz
xchg
push
push
add
subl
xlat
rcll
scas
mov
std
movsl
js
in
es
in
fisubs
rcrl
and
cmpsl
mov
into
push
jle
sbb
pop
aad
test
and
push
xchg
into
cld
lods
xlat
xchg
iret
in
xchg
insb
inc
push
into
pop
lods
or
out
cs
fistpll
cmp
xchg
data16
movsb
pop
dec
cld
and
pop
pop
dec
mov
xchg
hlt
aaa
xchg
xor
sub
inc
push
in
bound
sbb
push
sti
test
daa
cld
shrb
pushf
test
into
fisubrs
out
pop
and
fwait
xor
mov
add
sub
push
fisttps
scas
pushf
xor
sti
fs
stos
cmp
jns
inc
xchg
inc
mov
rcr
jg
out
push
inc
negb
and
and
sbb
mov
shlb
push
pushf
dec
pop
xor
sbbb
cli
xchg
fsubrl
pop
dec
sarb
aad
adc
imul
hlt
js
mov
and
loopne
clc
push
mov
mov
mov
sbb
jge
add
bound
out
sub
inc
dec
sbb
pop
lcall
ds
mov
dec
cwtl
imul
movsl
outsb
mov
xchg
pop
pusha
inc
int3
add
lahf
clc
add
lds
mov
iret
xor
insb
lods
pusha
test
test
jo
inc
roll
nop
push
adc
push
push
sti
inc
idivl
pusha
adc
out
je
push
add
mov
add
sbb
or
lock
and
inc
call
sti
jbe
sbb
icebp
add
mov
outsb
push
mov
adc
lock
out
jge
movups
cmpsl
push
jae
cmc
push
cltd
xlat
cwtl
test
jnp
xchg
push
mov
sub
sbb
mov
scas
cwtl
adc
fildll
js
xor
out
mov
push
mov
aad
lret
adc
pop
sti
gs
inc
push
add
mov
and
cmp
inc
cmp
fistl
cmp
ljmp
sub
lcall
nop
jle
sbb
shrb
scas
js
mov
mov
adc
out
lods
and
mov
je
sub
dec
adc
mov
js
dec
xchg
shr
fsub
push
adcl
jo
ja
xchg
xor
dec
pushf
add
fisttpl
fisttpll
outsl
inc
dec
mov
test
lea
fdiv
fdivp
into
stos
aad
ljmp
lds
scas
jl
mov
icebp
lods
pop
ja
inc
xchg
mov
add
jmp
enter
cs
adc
in
pop
push
ficoml
test
mov
stos
mov
fyl2x
cmp
sti
daa
xchg
xchg
nop
call
mov
and
mov
xchg
and
in
and
push
and
arpl
mov
data16
xchg
bound
out
and
daa
lcall
int3
je
in
xchg
push
loope
jg
test
cmpsb
dec
dec
inc
lret
pusha
sti
jne
mov
bound
push
inc
lahf
cmp
out
mov
push
lods
dec
adc
dec
jb
insl
and
and
sahf
call
mov
call
out
mov
sbb
mov
jnp
stos
insb
out
test
xbegin
adc
mov
xbegin
repnz
rorb
lahf
push
scas
int3
jle
jg
bound
inc
push
clc
xchg
sbb
int3
dec
test
jo
pop
dec
inc
fucomip
andb
sarl
cmp
sti
and
pop
ror
outsl
mov
clc
dec
fsub
push
daa
das
mov
xchg
rcl
dec
inc
pop
mov
cltd
mov
inc
add
jg
add
sahf
push
lods
sbb
icebp
ja
cmp
bound
and
vandpd
out
lods
jo
pop
inc
xchg
dec
pop
mov
pop
pusha
xor
out
push
mov
mov
ljmp
sar
pop
sub
je
pop
scas
push
mov
xor
orb
imul
mov
mov
mov
rorb
sti
cltd
adcl
nop
jne
and
cltd
jl
int
xlat
pop
gs
and
bound
xor
icebp
or
int
push
lods
icebp
mov
lods
dec
frstpm(287
cmc
add
popa
imul
jno
push
pusha
mov
adc
mov
imul
add
ja
fucom
loopne
push
arpl
sbb
mov
cmp
jmp
mov
push
mov
push
sbb
xor
lods
push
test
lods
jo
imull
mov
ds
es
sbb
sahf
jecxz
dec
sbbl
imul
fisubrs
jge
fs
xchg
mov
test
cmpsb
sub
in
sti
imul
cltd
or
icebp
lods
loop
push
movsb
mov
dec
mov
xor
or
shll
lret
pushf
mov
lods
test
adc
aas
push
in
or
sbb
scas
mov
adc
fs
lock
cli
jne
xlat
dec
adc
in
push
scas
mov
lds
or
mov
add
adc
mov
stos
inc
mov
mov
cmp
cs
fsubr
push
insb
in
stos
jns
mov
imul
in
iret
adc
mov
shrb
jne
mov
je
stos
xor
push
mov
mov
sbb
pop
push
test
int
outsb
scas
fidivrs
add
or
cltd
add
or
xor
dec
outsb
xchg
shlb
add
xchg
in
dec
ficompl
push
push
push
divl
scas
cltd
rcrb
dec
inc
mov
jo
mov
jnp
and
orl
jmp
ret
call
inc
and
push
shlb
aas
push
sbb
lret
pop
das
jmp
mov
and
into
push
aas
scas
pop
cmc
mov
xor
pusha
xchg
addr16
or
xchg
pop
sub
adc
out
imul
add
iret
xor
lds
adc
bound
shlb
mov
jo
push
xor
and
ficoms
lret
mov
jbe
lret
and
les
or
sarb
test
inc
mov
pop
scas
cmp
push
enter
push
jno
jae
bound
out
push
in
sti
sbb
in
sub
daa
loopne
cmc
out
sarb
lds
psrad
scas
pop
fildll
xor
fstpl
es
mov
testl
pop
and
fmulp
ljmp
outsl
jl
lods
cs
push
jne
cmpsb
or
jne
lret
sbb
ljmp
imul
stos
xor
outsb
or
cmp
ficomps
xorb
mov
sbb
push
in
add
mov
dec
dec
mov
cmpsl
jae
or
imul
sti
or
mov
arpl
xchg
or
aas
jmp
in
inc
mov
adc
mov
push
js
mov
mov
movsl
mov
adc
stos
stos
fadds
lods
jo
lar
jecxz
jbe
xor
mov
fbld
mov
sub
loope
shll
jmp
ss
jp
mov
shr
inc
lea
lret
insb
xor
sub
inc
mov
sbb
mov
test
push
addr16
stos
dec
dec
dec
outsb
dec
inc
in
mov
sti
adcl
out
push
in
pop
lods
iret
insl
mov
call
out
jg
sbb
test
dec
push
push
mov
mov
jle
mov
push
out
xor
jg
and
popa
insl
dec
mov
mov
lret
fdivl
inc
sbb
popl
or
push
pop
ficoms
div
xlat
xlat
cs
movsb
sbb
and
mov
sub
xchg
add
fistpll
int
add
cmp
stos
sti
insl
dec
outsl
fstpt
ja
sbb
adc
push
fwait
xor
std
or
fbld
mov
push
adc
rcrl
jmp
sbb
dec
sbb
icebp
jo
mov
sbb
jnp
lret
xchg
pop
adc
xchg
outsb
cmp
mov
stos
dec
add
inc
jmp
sbb
cmp
sub
push
dec
xlat
iret
and
mov
lret
or
jae
outsb
sub
out
rcr
pop
rcrb
pop
sub
in
pusha
ds
fnstcw
stc
mov
and
xchg
iret
adc
inc
lock
ds
fistps
jae
push
in
loop
loopne
add
subb
out
and
test
sub
cmp
inc
lods
xor
mov
xor
sbb
jae
mov
stos
std
loopne
mov
mov
inc
and
out
call
sbb
or
cmpsb
loope
mov
mov
pop
and
inc
rorb
fisubrs
bound
and
cmp
fcompl
sbb
dec
imul
lcall
lods
push
out
sbb
leave
cmp
xor
jo
mov
dec
jmp
dec
and
push
lea
inc
sub
push
in
ja
mov
push
inc
ret
aaa
mov
in
push
jo
bound
add
dec
pmullw
xor
cmp
cmpb
pusha
out
cs
enter
inc
call
mov
add
shlb
leave
cld
adc
test
pop
out
or
js
mov
bnd
test
fisubrs
mov
lret
iret
jb
jns
mov
add
push
rolb
mov
mov
bound
pop
test
and
sub
and
test
jle
lret
in
cmpsb
inc
sarb
sti
cmp
inc
mov
mov
jnp
test
cmp
scas
daa
xchg
movsl
ja
or
leave
inc
movsb
pop
mov
mov
pop
cltd
rcll
jnp
or
inc
adc
enter
cs
pusha
in
pusha
bound
arpl
push
sti
test
xchg
xor
stos
and
pop
jne
push
cs
outsl
dec
fs
ds
push
cltd
pusha
jns
loop
mov
dec
ja
cmpsl
dec
lcall
cmc
lea
mov
dec
arpl
or
sbb
push
ds
fisubs
push
pop
push
lcall
fidivrs
leave
sar
in
or
cwtl
fisttpl
sarb
out
ret
icebp
push
rcrl
std
fbld
popf
loopne
mov
push
or
arpl
lock
popa
xlat
xchg
incb
in
test
stc
addr16
scas
mov
cmc
sbb
out
sub
fisubl
aas
stos
mov
fidivrs
fwait
test
push
fiadds
ret
outsl
cmpl
insb
adc
sbb
icebp
enter
std
arpl
fwait
sbb
movsb
dec
test
push
cmp
cltd
adc
sub
xor
scas
mov
sub
jecxz
mov
loop
jns
jne
and
icebp
cs
adcl
insb
mov
clc
scas
jne
dec
or
add
inc
inc
in
jg
and
mov
shr
cmp
adc
outsb
and
xor
jo
and
dec
scas
lret
jno
xchg
or
jae
sbb
fstl
repz
loop
test
mov
negb
dec
push
icebp
imul
push
jg
xor
pop
adc
fcmovb
nop
scas
xor
cmc
into
jp
stc
xlat
jecxz
mov
flds
or
or
icebp
scas
loopne
int3
popf
sub
pop
faddl
jle
popf
scas
cmp
shl
lret
sub
or
or
inc
fdivrs
and
fcmovu
das
cmp
adc
fcomps
cmpsl
or
mov
loop
pop
and
pushf
push
into
adc
pop
cmp
push
aam
incb
int3
pop
adc
aad
outsl
mov
dec
sub
test
jecxz
lods
rcl
adc
cli
push
push
outsb
mov
in
in
scas
fadd
jo
out
add
adcb
addr16
cwtl
fldt
imul
add
test
and
sub
repnz
mov
loope
push
cmc
jo
out
inc
mov
fisubrs
adc
rcrb
add
sub
push
lods
fildll
cld
and
mov
icebp
fildl
jg
fisubrl
xchg
sub
pushf
lds
xchg
fisttpl
push
mov
mov
and
sbb
popa
enter
in
mov
mov
fdiv
rclb
cmp
iret
mov
ficomps
dec
xchg
stos
dec
jmp
adcb
mov
add
dec
das
mov
fcmovnb
push
enter
inc
mov
cld
andb
fwait
loopne
jnp
push
jecxz
sub
adc
sbbb
mov
mov
pusha
cmp
cwtl
outsl
les
test
dec
adc
pusha
jae
inc
leave
sti
jnp
mov
test
cltd
sub
test
add
and
frstor
sti
stc
shll
mov
inc
pushf
stc
mov
sahf
test
mov
fldenv
mulb
mov
xor
pop
inc
fidivrs
in
add
stos
adc
mov
xchg
mov
inc
or
xchg
jno
and
insb
hlt
cmp
shll
xor
lds
jae
mov
inc
js
outsb
jg
shlb
mov
cwtl
out
xchg
sbb
mulb
insb
xchg
mov
pop
inc
orl
mov
jmp
cmp
xchg
jno
lret
sahf
add
dec
scas
sbbl
inc
in
test
xor
and
cmp
fstpt
into
or
mov
sbb
jp
iret
cmp
hlt
sahf
imul
out
mov
add
pop
imul
out
scas
shlb
lahf
dec
lods
sti
ficomps
outsl
or
pop
lock
pop
scas
cwtl
jnp
xchg
inc
adc
xchg
and
outsb
push
dec
pop
ljmp
pop
or
push
jbe
arpl
daa
sbb
adc
jle
adc
out
dec
pop
and
lds
pop
in
xor
mov
cmp
imul
loopne
xor
outsb
xor
cmc
leave
mov
iret
aad
sub
jnp
in
cmp
jno
jecxz
push
dec
add
mov
mov
cmc
cmpsb
push
mov
mov
mov
outsb
mov
mov
push
mov
ret
test
push
fwait
out
out
inc
bound
jbe
pusha
ss
pop
cmpsl
add
imul
or
mov
sbb
movsl
in
fldt
cld
cmp
mov
pop
iret
ret
mov
mov
sbb
loopne
and
mov
cmp
inc
pop
pop
push
loopne
clc
faddl
mov
jg
jg
add
scas
psllw
xchg
insl
or
ret
icebp
xor
iret
insb
lret
pop
mov
mov
sbb
mov
push
pop
jge
sbb
je
into
out
mov
cmp
sti
or
sbbl
sub
lock
aam
les
ret
test
movsb
loopne
bound
sub
xlat
sub
sbb
pop
das
cltd
mov
lock
mov
push
jle
pop
lret
adc
popa
sbb
sahf
ds
stos
outsb
fs
lret
add
bound
and
pop
fstpt
test
mov
push
or
int3
mov
imulb
icebp
push
mov
es
nop
lret
inc
add
out
adc
nop
sub
lret
lcall
int3
mov
gs
loop
fldt
mov
arpl
out
push
pop
push
fnstsw
cmp
or
arpl
loopne
lea
lds
xchg
daa
xor
test
mov
inc
nop
cli
notb
mov
insb
out
dec
lods
push
cmp
sub
insl
push
in
loopne
bound
push
and
pop
jae
icebp
shrb
out
outsl
ds
in
mov
inc
ffree
fistps
mov
push
cmp
stos
int3
push
adc
and
pushf
outsl
inc
or
cmp
hlt
incb
jg
push
in
pusha
bound
dec
loopne
mov
adc
loopne
mov
stc
push
cmp
cld
xor
das
scas
fwait
mov
xchg
sbb
nop
movsl
pop
sub
jno
mulb
sbb
push
mov
icebp
orb
in
pop
les
scas
or
xchg
test
insb
jp
inc
pusha
idivl
xchg
enter
pop
and
mov
stos
shlb
stos
push
scas
dec
arpl
test
inc
dec
fisttps
dec
jmp
fwait
jmp
sbb
fists
test
sub
cld
jno
scas
jbe
mov
std
or
loopne
movsb
xor
movsl
insb
test
cltd
dec
push
arpl
test
loopne
mov
push
cwtl
and
pop
xchg
data16
mov
cld
add
es
fwait
push
mulb
cmp
jbe
jno
loopne
stos
arpl
aad
jg
cld
jecxz
pop
push
stos
and
arpl
and
sti
and
inc
pop
notb
nop
push
scas
insb
and
pusha
mov
shlb
mov
mov
pop
jne
fmulp
jb
push
hlt
scas
mov
pushf
pop
pop
pop
cs
insl
xor
xchg
xor
xchg
inc
aas
mov
jns
sbb
adc
flds
mov
les
fnsetpm(287
xor
sbb
add
fwait
iret
lds
cmp
sbb
cmpsl
in
cmpsl
fimuls
inc
fdivs
cmc
pop
push
push
push
faddl
cmc
lretw
bound
ljmp
sub
sti
pop
lods
mov
int3
cmp
lret
xor
scas
sub
test
fcompl
inc
fidivs
sbb
and
cmp
adc
dec
outsb
shrl
pusha
fldt
lods
into
sub
movsb
in
mov
lds
fldt
mov
ds
mov
fildll
sub
jmp
push
imul
cltd
out
bound
loopne
dec
test
cltd
int
ds
das
jmp
repz
aas
mov
add
cmpsl
lret
xlat
jg
out
cmp
push
jbe
xchg
sub
xor
fdiv
into
mov
imul
push
or
test
test
pop
xor
mov
jbe
xor
sub
dec
mov
imull
mov
mov
outsb
std
nop
xor
iret
les
stos
jno
cmp
sbb
enter
sub
xchg
mov
xchg
mov
add
lods
lods
insb
outsb
bound
pop
push
push
push
pop
stc
push
or
inc
xchg
iret
and
xchg
stc
or
pop
test
pusha
push
addr16
mov
cmp
popl
dec
mov
and
pushf
xlat
mov
ljmp
fnstcw
push
xchg
add
push
int
pop
sbb
cmp
fwait
and
into
je
mov
mov
adc
cmp
insb
mov
push
pop
push
dec
arpl
loopne
mov
fldt
xor
loopne
pop
lock
loop
cli
add
lea
arpl
mov
mov
dec
mov
jmp
lret
push
sub
or
int3
sub
outsb
movsb
xor
les
mov
cwtl
cmpl
js
addl
pop
fcmovnbe
sbb
outsb
stos
pop
ja
insl
sub
addr16
dec
adc
mov
or
pop
test
or
xchg
push
or
and
xor
scas
data16
movsb
sub
lret
pusha
cmp
in
mov
stos
fsubs
data16
inc
dec
mov
jo
mov
into
and
or
lret
jns
in
sub
adc
and
stos
repnz
xchg
mov
sub
in
sub
lret
adc
scas
cltd
push
lods
lock
rclb
mov
lods
pushf
nop
clc
cwtl
es
addr16
fmuls
inc
mov
pop
adc
mov
shrb
mov
scas
pop
lcall
dec
cmp
cmc
sub
outsl
push
bound
xlat
xor
lock
shl
xor
enter
cmp
pop
jecxz
mov
adc
ss
sub
inc
scas
bound
push
sub
cmp
fstpl
mov
outsb
pusha
rclb
loopne
rcl
sub
out
push
adc
aas
cmpsl
inc
xor
in
adc
adc
push
shrw
adc
dec
fwait
sbb
mov
test
pushf
rol
xchg
insl
cmp
inc
xor
jle
adc
pushf
xor
mov
ret
jns
jg
mov
jge
or
pushfw
scas
adc
lcall
and
pop
scas
out
sub
cmpsb
fdivl
lret
push
clc
xor
movsb
loope
fcmovnb
sub
sahf
mov
fs
outsl
ds
add
into
int
mov
test
fcoml
xchg
xor
add
cmpl
js
jle
nop
scas
enter
push
push
aad
jo
mov
xor
jo
mov
loope
das
mov
pop
cwtl
sahf
ret
dec
jecxz
mov
inc
lahf
xor
cmp
mov
dec
lds
jns
in
aad
insb
jg
lret
repnz
outsb
push
jle
stos
inc
and
push
testl
into
add
jge
mov
shr
mov
fcomps
lcall
jp
pop
inc
mov
sbb
in
ja
arpl
xor
sub
xor
fdiv
sub
add
push
dec
mov
mov
out
inc
js
inc
aad
dec
xor
mov
inc
dec
or
add
add
cs
movsl
xchg
or
and
dec
mov
fnsave
call
or
loopne
iret
dec
int
popa
scas
dec
aaa
xchg
jns
xor
bound
fwait
jae,pt
mov
outsl
flds
mov
xchg
movsl
jl
gs
outsl
shlb
push
sbb
cld
and
and
mov
sbb
fbstp
clc
mov
mov
or
bound
test
fsubs
lods
sbb
pop
xor
push
out
insb
lret
jno
push
jg
or
ljmp
mov
aas
mov
lds
fimuls
inc
push
stc
scas
ret
or
jno
scas
and
push
loopne
test
pop
mov
cmpsl
pushf
call
jle
rcl
clc
clc
xor
lret
and
pop
dec
push
loope
clc
imul
jnp
leave
sbb
mov
xchg
imull
and
cmp
subb
int
decb
add
mov
stos
xlat
into
sub
ljmp
sub
xor
rcl
mov
cmp
xor
lods
imul
sbb
bound
clc
outsl
bound
pop
sbb
repz
cld
and
into
rorb
push
rcll
icebp
jl
xor
out
mov
shlb
lahf
lea
aad
int3
in
and
into
icebp
orb
sub
pop
lock
repnz
sbb
les
cpuid
cmp
xchg
dec
pop
push
xchg
cld
cmp
lds
xchg
enter
mov
aam
mov
mov
into
add
and
movsl
outsl
fwait
xchg
insb
fstpt
mov
jns
jecxz
xlat
scas
aaa
dec
dec
jo
cmp
test
sub
loop
loope
je
pop
xchg
sahf
add
jbe
inc
jg
mov
push
ljmp
jge
test
dec
push
rorl
pop
seta
push
mov
test
dec
jge
pop
shlb
out
sahf
icebp
cltd
sbb
sbb
outsb
sbb
out
rcll
sub
pop
push
mov
dec
popf
jmp
icebp
or
sub
in
inc
lahf
push
out
mov
pop
insl
bound
iret
hlt
in
mov
fucomi
jmp
lret
xor
push
cmp
into
mov
jmp
and
aad
push
sbb
das
out
pusha
bound
pop
mov
pop
push
dec
lock
inc
pop
cld
sbb
aaa
test
cld
xchg
mov
sub
in
xchg
test
insb
bound
addr16
ljmp
aaa
mov
jo
pop
jp
pop
jl
scas
cld
subb
fsubl
ljmp
jp
push
js
imulb
in
mov
pop
mov
cs
adc
push
loopne
pop
stc
push
ljmp
sbb
shl
dec
loopne
mov
shll
bound
xor
in
imulb
jmp
ror
pusha
sub
push
or
fdiv
mov
jl
stos
loopne
in
gs
push
enter
shl
push
aam
lahf
cmpb
inc
lahf
insl
mov
jae
mov
cs
stos
cmpsb
out
loopne
jb
daa
or
xchg
xor
dec
jbe
xchg
cld
scas
cltd
orb
shll
shr
pop
jno
add
inc
cmc
mov
je
dec
pop
movsb
push
push
mov
push
jmp
lods
out
insl
mov
xchg
into
push
inc
mov
mov
and
and
das
or
xorl
jo
xor
std
or
out
or
mov
popa
and
jecxz
xlat
cmp
xor
cltd
mov
sahf
pop
enter
push
daa
xchg
jno
in
dec
dec
aaa
sbb
mov
repnz
sub
mov
mov
bound
pop
jae
jecxz
out
xchg
sub
cmp
into
pop
fistpll
cmp
ljmp
adc
add
rcll
lea
push
inc
popf
push
aas
out
mov
inc
jno
rcl
cmp
loope
cmpb
mov
js
cmp
je
jecxz
xchg
vcmpsd
push
xchg
test
xchg
fldln2
stc
push
addr16
arpl
pop
sbb
in
das
fucomip
rorb
cmp
xor
sahf
imul
pop
sbb
push
sarl
or
out
pop
cmp
sbb
cmp
mov
inc
insl
pop
pushf
dec
popa
popa
mov
scas
ja
dec
iret
ljmp
push
pop
pop
pushf
xchg
cmp
push
xor
mov
lods
jae
mov
enter
stos
xlat
dec
loopne
cmp
in
rcrb
mov
jmp
cltd
in
inc
lahf
das
pop
bound
les
sub
cmp
into
lcall
lods
std
gs
outsl
iret
shlb
loope
aas
popa
loop,pt
test
mov
aas
test
pusha
out
rcll
pop
lret
icebp
enter
loope
jno
pop
dec
xchg
aaa
mov
outsl
imul
pop
pushf
repnz
xchg
insl
or
xchg
out
add
gs
xor
js
sbbl
sahf
jle,pt
or
je
mov
sbb
jg
das
lret
xchg
movsl
bound
dec
loopne
out
fdivrs
sub
outsb
imull
bound
push
cmp
subl
sbb
push
jbe
in
stos
mov
in
sub
jo
ljmp
int3
push
sbb
and
sbb
add
hlt
outsl
mov
add
mov
bound
and
and
out
cmp
fmuls
or
xchg
cmp
mov
jg
cltd
push
jp
out
cmc
jge
push
test
mov
xor
addr16
ja
pop
and
insb
shrl
aas
sahf
sub
dec
mov
push
fimuls
adc
cmpl
ja
push
cmp
inc
sub
dec
popf
filds
fwait
mov
in
clc
daa
rcrl
sti
bound
pop
cld
shlb
cltd
scas
inc
pop
dec
shlb
push
push
outsl
int3
jecxz
mov
divl
pop
and
lret
add
lcall
out
sbb
mov
fmuls
addl
mov
icebp
cmpsl
fdivrs
les
aaa
imul
xchg
or
rcr
and
cwtl
in
push
lods
cld
data16
adc
sahf
shlb
int3
pusha
lds
xchg
addr16
sbb
mov
sbb
outsl
push
in
inc
rcl
jo
repnz
sahf
cmp
sbb
sbb
into
jle
sbbb
icebp
lahf
and
test
test
xlat
std
push
in
lds
shlb
mov
int3
aaa
mov
pop
pop
out
mov
repnz
bound
inc
sbb
and
mov
enter
loop
in
cmp
inc
cmp
shr
movsb
mov
outsb
fstpt
sbb
gs
add
pop
and
and
int
scas
push
std
xchg
xor
jle
add
iret
dec
icebp
mov
rcll
jbe
sub
and
fwait
inc
into
je
inc
and
mov
and
sahf
sub
add
aam
out
bound
fidivrs
xchg
in
mov
in
sbb
out
mov
scas
mov
stc
mov
fmull
in
fildl
ja
cmp
icebp
std
sbb
roll
loopne
scas
xchg
lret
or
outsl
pop
imul
dec
cld
addl
dec
or
outsl
stc
xlat
mov
shrb
or
push
inc
mov
lahf
jno
outsb
cs
fsubrl
xchg
aaa
or
filds
dec
aas
and
mov
xchg
orb
sub
adc
adc
sub
repz
bound
outsl
sub
icebp
mov
fs
sbb
sub
nop
dec
bound
mov
test
std
and
addr16
popa
lock
fldt
mov
push
cmp
out
lods
cmc
je
and
push
cmp
mov
mov
mov
jne
int3
rcl
ret
clc
jge
loopne
add
mov
mov
insl
jecxz
mov
adc
mov
fistps
push
push
lods
mov
js
rol
mov
dec
pusha
jae
lahf
or
cltd
loop
in
jge
mov
add
and
loop
out
mov
outsb
and
jb
fimuls
pop
push
lret
pop
inc
xlat
mov
std
insl
shlb
pusha
add
sbbb
mov
sbb
repz
jp
mov
sbb
sbb
pusha
js
cltd
sbb
mov
xor
int
imul
andb
pop
cmp
mov
xor
jno
sub
outsb
sub
movsb
scas
add
pusha
lcall
pop
pusha
mov
cli
out
test
and
inc
jle
into
loop
push
and
and
hlt
in
pusha
int
sbb
scas
dec
xchg
popa
les
mov
lods
sbbb
les
jg
mov
mov
sbb
mov
mov
out
scas
pop
loopne
imul
mov
inc
out
pop
in
outsl
iret
scas
mov
push
lods
and
pop
das
xor
mov
nop
in
and
into
sbb
mov
test
loopne
mov
mov
lods
fisttps
imul
or
jo
jno
xor
dec
aad
mov
xchg
xchg
jmp
mov
jns
lods
call
lret
dec
jmp
pop
out
vpmaddwd
in
in
pusha
filds
shrl
shrb
push
sbb
fldt
in
data16
movsb
fisttpll
int3
xchg
push
in
pusha
xchg
insb
and
inc
xchg
pop
out
xor
stos
aas
movsl
pop
mov
mov
inc
mov
aas
sbb
cmpsb
sbb
adc
in
popa
lret
in
mov
fsts
inc
add
lahf
pop
mov
mov
icebp
or
jno
data16
stc
adc
sbb
outsb
xor
xlat
push
mov
xor
fnstsw
push
lcall
push
or
push
mov
aas
pusha
cmc
shr
jle
mov
adc
je
and
incb
daa
out
jns
test
mov
push
jnp
xchg
jbe
nop
jle
addr16
push
sbb
or
jle
mov
inc
stc
shrl
cld
adc
adc
pop
or
enter
and
shlb
xor
nop
test
test
outsl
cmp
inc
jo
jae
adc
cwtl
xchg
cltd
gs
imul
ds
sub
adcb
stos
movq
sub
loopne
add
or
xchg
mov
ljmp
lods
dec
mov
test
shrl
push
fs
lret
les
fwait
stos
sbb
and
cwtd
pop
shlb
push
xchg
addb
push
push
push
lock
icebp
pop
jmp
mov
jne
fdivrl
xchg
mov
or
iret
mov
vminpd
push
jmp
in
add
bound
insb
pusha
test
add
leave
frstpm(287
adc
cmp
aas
push
filds
jae
cwtl
sbb
jecxz
push
lahf
loopne
insb
fldln2
and
cmp
dec
mov
jge
cltd
jo
push
movsb
push
xor
fbstp
cli
xor
inc
cmc
fisttps
gs
mov
sub
push
or
jo
xor
sbb
nop
push
or
xor
dec
lds
sub
inc
and
ljmp
inc
push
cwtl
mov
mov
fcmovnbe
pop
jo
mov
adc
xor
push
xchg
ret
aas
stc
fbstp
lods
xor
fucomi
add
imul
fsubs
pop
cwtl
scas
push
stc
sbb
sahf
leave
into
loope
nop
insb
mov
out
mov
jno
xor
ret
stos
call
les
nop
push
adc
jo
in
fs
pop
pop
lock
fcoml
xchg
in
arpl
and
ds
je
insl
lret
dec
cltd
int
imul
in
rcl
mov
mov
insl
insb
mov
add
outsb
int3
adc
and
push
sub
and
sub
sbb
sub
add
add
xor
insb
pop
pop
jnp
std
std
dec
sahf
in
shll
in
jecxz
jmp
and
sbb
xor
hlt
inc
adc
frstor
test
fwait
shlb
pop
mov
mov
aam
fstpl
push
aam
cwtl
adcl
mov
sbb
or
fs
adc
dec
sub
outsb
lods
in
cwtl
loopne
ret
addr16
andb
into
loop
sbb
fwait
bound
and
mov
and
test
dec
mov
dec
nop
push
adc
jmp
lods
or
push
push
xlat
sub
iret
add
cmpsl
or
call
and
addr16
cmc
xchg
shrl
cld
push
adc
and
xchg
movq
cmp
or
fcomip
cmp
mov
jno
gs
fs
mov
pop
call
mov
push
or
lret
sub
out
cmp
jbe
lahf
in
sub
xor
xor
out
adc
mov
or
popf
into
outsb
add
mov
xchg
inc
and
jg
mov
and
out
in
fimuls
pop
and
lods
lcall
aad
or
sbb
push
mov
cmc
adc
jne
pusha
stos
outsb
fisubs
das
sarb
push
pop
push
aad
nop
push
inc
inc
pop
insl
xor
cmpsl
fwait
adc
mov
xor
out
jb
loopne
pop
imul
xchg
call
sub
or
xor
push
pop
inc
mov
insl
pop
xor
mov
jg
jge
push
out
xlat
xor
loopne
outsl
adc
inc
scas
cld
scas
inc
mov
inc
sbb
xor
adc
add
cld
aaa
inc
movsl
dec
sarl
or
pusha
shl
or
dec
jo
cs
loopne
cwtl
in
test
dec
lock
jae
xor
jmp
push
in
popa
lea
loop
mov
xor
mov
imul
out
mov
or
out
push
out
dec
xor
data16
add
nop
jmp
or
loop
jmp
jae
test
adc
dec
sti
push
sub
arpl
ja
loopne
cld
push
cmp
sbbl
bound
xor
stos
sbb
cltd
rolb
push
in
int3
and
pop
sbb
ror
or
sti
aad
outsl
xchg
mov
test
shl
stos
mov
and
leave
fiadds
jne
int
cmc
jle
sub
jb
push
in
int3
icebp
sar
in
movsb
cld
lock
or
or
inc
pop
call
mov
pop
pop
ror
in
shlb
nop
adc
in
mov
mov
cmp
mov
sarl
push
jmp
push
inc
pusha
inc
test
lahf
fadd
mov
lods
xor
ss
data16
push
test
sub
or
outsb
lods
dec
into
sahf
lods
notb
push
xchg
fs
add
sbb
cmp
mov
adcb
add
cmp
push
fs
inc
faddl
inc
mov
push
xchg
rcrb
pusha
into
test
adc
jp
sub
or
xchg
jp
xorl
mov
ret
adc
sbb
pop
iret
lret
in
xor
enter
sub
inc
xor
adc
and
das
enter
cmp
lods
outsl
add
popa
cltd
sub
cmp
popa
dec
sbb
xchg
pop
inc
xor
inc
loop
add
sub
rorl
or
mov
xchg
or
mov
jmp
insl
jns
xor
outsl
iret
bound
icebp
xor
jae
insb
mov
mov
xor
pop
pminsw
scas
ret
lcall
nop
or
mov
sub
mov
ljmp
rol
jle
movsb
mov
fisttps
movsl
pop
jle
or
push
xchg
pop
loope
aas
adc
mov
push
fucomi
xchg
jle
ffree
sbb
or
sahf
mov
pop
mov
in
mov
jg
cmp
es
mov
imul
xchg
cltd
push
cs
in
mov
or
sbb
pop
push
repnz
scas
push
dec
jb
mov
and
out
pusha
in
mov
stc
mov
in
sub
int3
loopne
mov
loopne
sub
sub
add
in
fstp
pop
mov
mov
jle
bound
loop
aam
ds
sbb
out
or
sbbb
sar
cmp
adc
inc
hlt
popf
imul
nop
pop
es
icebp
xchg
shrb
cmp
jmp
outsb
jmp
xor
shrb
stos
sti
test
and
ss
hlt
sbb
test
inc
loop
or
roll
call
cld
pusha
lods
leave
jne
out
pop
or
pop
mov
inc
sub
and
call
mov
jl
cmp
push
aam
jge
push
sub
test
cmp
jbe
fwait
sbb
mulb
sub
iret
ds
cmpsl
mov
int
imul
outsb
xchg
cs
enter
sbb
insb
pushl
or
pop
aas
push
das
lea
pop
out
mov
push
movsb
repz
mov
sub
push
loop
or
pop
or
testl
pusha
cmp
and
andb
lods
jno
sub
adc
mov
shlb
push
and
pmaddwd
cmc
lret
pop
lods
mov
mov
mov
scas
inc
xchg
dec
call
in
adc
out
xchg
out
push
cli
das
xor
inc
out
movsb
sbb
push
aaa
sbb
ss
dec
push
jns
push
sti
call
xchg
nop
pop
push
sbb
cmpsl
lret
test
jmp
nop
push
iret
xchg
iret
sub
stos
pop
loop
push
insl
aas
hlt
xchg
xor
int
imul
jnp
push
add
mov
mov
rcrb
dec
inc
aam
pop
and
rclb
and
push
mov
sbb
sti
mov
rcl
add
push
mov
push
out
aas
sbb
out
inc
mov
jb
nop
lahf
scas
out
fbld
and
les
dec
xchg
mov
mov
out
stos
pop
aas
in
or
movsb
in
js
mov
call
push
jle
outsb
mov
aad
loopne
fistpll
int
inc
lods
mov
and
aas
aam
and
dec
gs
dec
sub
mov
popa
lock
dec
in
mov
jle
inc
jne
aas
xchg
out
push
sbb
in
push
mov
push
jne
xor
and
cwtl
sbbl
fbld
into
int3
test
out
scas
and
fbld
ds
xor
std
lahf
test
std
cmp
je
insb
stc
movsb
sbb
sub
loopne
ret
sub
aam
inc
cmp
scas
in
mov
loope
loopne
movsb
sbb
dec
adc
mov
in
jne
test
jns
mov
mov
stc
incl
cmp
gs
pop
lods
mov
and
jle
or
rcrb
sarb
xchg
push
push
cmp
aad
or
push
mov
jmp
jbe
subl
or
push
push
cld
xor
nop
inc
in
daa
das
mov
inc
push
xchg
cmpsb
ss
cmp
sahf
js
aam
mov
test
ror
xor
in
das
out
test
add
in
pop
pop
mov
inc
sbb
cmp
mov
shll
xchg
test
add
lcall
jp
enter
or
cld
xchg
xchg
je
call
jnp
mov
add
imul
ds
fstl
xlat
push
call
arpl
push
int3
dec
jle
and
cmp
dec
xchg
and
lods
dec
or
dec
decl
xor
adc
inc
sbb
nop
fists
hlt
jg
pop
pop
pusha
adc
ret
dec
mov
mov
mov
es
cmp
jnp
aas
sub
mov
xchg
aad
loopne
jbe
cld
sbb
fisttpl
ds
inc
popf
adc
jl
adc
dec
pop
xchg
into
cmpsl
stc
jmp
icebp
popa
xor
add
pop
dec
dec
pop
lods
out
mov
sub
push
out
nop
rclb
mov
or
loopne
pop
stos
sahf
stos
push
xchg
jmp
or
pop
in
in
push
xor
sahf
mov
out
jg
bound
loope
idivl
fbstp
mov
xchg
shlb
pusha
in
fsubs
sub
cmp
pusha
xchg
jl
test
cwtl
cmp
sub
mov
insb
test
shrb
xor
mov
stos
or
push
into
jg
lods
pop
xor
fsubrs
pop
insb
insb
or
rcr
push
mov
push
popf
jle
call
cltd
pop
insb
fwait
jnp
jg
pop
xor
push
mov
mov
shl
push
clc
jns
lds
or
out
push
and
ljmp
test
and
jmp
inc
loopne
sbb
cltd
lahf
cs
daa
jle
jge
in
lea
pop
dec
mov
mov
lahf
scas
int
scas
lahf
int
scas
inc
int
scas
out
int
scas
jle
ljmp
inc
xchg
divl
push
dec
pusha
sahf
fcomi
subb
fisubs
jns
call
jle
pushf
mov
loop
or
pop
jle
push
mov
pusha
jg
cmc
dec
dec
jae
push
loop
fsub
sarl
aas
loope
mov
popf
sbb
dec
loopne
in
mov
mov
mov
sbb
scas
push
pusha
cmpsb
loopne
add
inc
pop
imul
into
or
fwait
loope
fadd
jge
aas
dec
enter
inc
imulb
lea
fsubr
xor
inc
fwait
movsl
xor
aaa
push
xchg
add
and
gs
and
aaa
jmp
xchg
popa
mov
pop
dec
cmp
dec
pop
mov
test
adc
mov
lods
jne
repnz
push
or
sahf
jecxz
loop
cmpl
sahf
mov
cmp
je
mov
xchg
enter
xlat
and
sub
xchg
das
test
cltd
mov
shll
sub
int3
jo
cmp
loopne
stos
sbbb
and
or
sahf
gs
xor
adc
sbbb
xchg
xor
mov
fwait
mov
pop
shr
dec
jp
fs
stos
mov
sub
out
pop
call
les
jmp
in
ret
sub
je
add
xchg
mov
cmp
insb
les
jle
and
push
lret
push
sbbl
cli
out
mov
cmp
xchg
out
mov
mov
jmp
jbe
fisubs
iretw
xlat
outsl
ljmp
jge
jmp
jl
pop
jmp
dec
and
push
pop
sbb
dec
pop
mov
icebp
mov
pop
addr16
dec
js
sahf
or
mov
jmp
sbb
xor
cwtl
outsb
jmp
dec
add
cmp
in
cltd
loop
lods
adc
mov
pushf
jne
ja
jp
int3
lods
adc
ljmp
sbb
call
xor
add
ljmp
mov
xor
xor
andb
out
jo
and
jb
insl
jbe
dec
enter
fwait
imul
into
jmp
mov
fs
pusha
sbb
sbb
popf
xor
mov
xlat
imul
pop
loopne
or
scas
or
and
movsb
loopne
aas
andl
sbb
aad
test
sbb
add
push
dec
mov
push
jae
jge
sbb
and
sbbb
mov
jmp
scas
pop
daa
dec
outsb
aam
js
cs
push
add
ds
sbb
jno
push
test
jae
push
inc
mov
mov
and
mov
mov
enter
loop
test
push
dec
pop
loop
subb
in
mov
xchg
test
mov
push
lods
sub
leave
in
fisubs
loopne
test
je
testb
inc
or
sbb
fldt
fwait
mov
mov
in
inc
mov
xor
dec
add
jnp
dec
add
mov
insb
jns
cmc
ret
std
dec
scas
fnstenv
rorb
fsub
pop
or
jno
sbb
lret
mov
jo
fadds
outsb
repnz
inc
xor
insb
jbe
mov
mov
xchg
fs
sub
cmp
ret
mov
and
inc
popa
in
cmp
xchg
ljmp
sub
subb
in
mov
bound
dec
push
mov
subb
pop
das
loopne
dec
repnz
out
cs
mov
inc
rcrb
push
pop
mov
mov
scas
lods
lock
inc
inc
and
jns
nop
bound
lret
cmp
fsubrs
pop
aam
test
push
test
adc
mov
xadd
sahf
xchg
mov
xlat
mov
sbb
cmpsb
in
call
rcrl
ja
popa
in
adc
psrad
or
mov
xor
stos
mov
ds
pop
cld
xchg
push
push
insb
out
lods
iret
inc
mov
ss
cmp
mov
inc
push
imul
inc
push
push
dec
test
mov
int
outsl
mov
test
lds
mov
adc
in
add
rcll
out
fwait
pop
stc
sti
jg
int
lods
sbb
sbb
sbb
popa
aad
adc
push
push
arpl
fdivrs
jae
xor
dec
sbb
loopne
nop
mov
pusha
std
sbbl
or
insl
xchg
push
or
arpl
adc
jno
movsb
test
stos
out
sbb
adc
jae
mov
add
aad
sarb
nop
inc
mov
in
dec
outsl
int
out
pop
aas
in
shlb
jle
mov
jae
mov
imulb
insb
push
mov
pop
inc
test
cltd
subb
fdivrp
push
pop
jp
call
mov
adc
js
pop
mov
mov
xor
cmp
mov
pop
inc
xor
sub
sti
pop
cld
cmp
mov
and
repz
repnz
mov
je
jecxz
mov
lret
sbb
mov
or
les
pop
insb
in
push
fcomip
mov
or
out
jno
insl
das
push
cld
sbb
shlb
fs
pop
pushf
sub
movsb
out
jnp
inc
addl
adc
insb
and
clc
cs
jle
ret
or
cltd
inc
in
cmp
fs
inc
push
repz
jmp
xorb
iret
push
stos
call
pop
mov
out
jbe
dec
leave
jecxz
jns
xor
dec
mov
insb
or
sahf
cmp
testl
addr16
mov
repnz
dec
test
cmpsb
js
push
lods
pushf
cmp
insl
cltd
lret
in
xlat
jmp
out
shl
or
or
inc
fdivrl
in
aam
xchg
pop
add
jmp
jmp
mov
rclb
int3
imul
repnz
movsb
out
das
adc
lods
je
sahf
pop
fstl
ss
fisubrl
jno
xorl
dec
pop
data16
out
mov
int
insb
outsl
lret
dec
xor
notb
cmp
je
scas
mov
push
in
mov
mov
fidivrs
sub
mov
lods
in
jbe
mov
insb
call
imul
int3
ja
inc
dec
pusha
inc
pop
popf
out
mov
xchg
fstpt
ja
add
mov
sbb
push
mov
aas
or
subb
into
xor
stos
faddl
imul
mov
pop
loopne
cld
dec
mov
push
xor
sbb
loop
pop
adc
cmc
daa
push
mov
outsl
inc
sub
cmp
sahf
xchg
jnp
or
mov
aas
mov
in
shlb
cmpsl
sub
movsb
or
aas
lret
and
mov
mov
insb
enter
pop
add
inc
sub
out
or
in
or
inc
dec
jae
out
push
rorb
mov
lahf
cmpl
sub
mov
lahf
pop
in
inc
inc
adc
cmp
outsl
rcrb
and
add
leave
js
push
rclb
jnp
subb
xor
mov
aaa
mov
mov
or
cmpl
cmp
outsb
jecxz
cmp
clc
and
push
fcomps
lods
sbb
in
sti
outsl
lret
push
mov
jmp
sbb
jno
pop
scas
insb
push
inc
pusha
in
rcr
mov
and
popf
xor
stc
xlat
in
push
pop
pop
push
stc
push
dec
and
dec
test
mov
lock
jmp
cwtl
sti
hlt
das
das
or
gs
std
call
pop
jle
push
sarb
push
out
pushf
mov
add
adc
gs
lcall
xchg
out
out
mov
mov
pop
push
stc
sub
into
data16
cmpsb
sbb
scas
push
popf
aad
jmp
jo
pushf
in
fcomi
sbb
pop
dec
dec
xor
fisubrl
and
outsl
mov
imul
scas
insl
stos
pop
cmpsb
sahf
lods
xor
pop
or
cli
push
push
out
outsl
and
push
xor
fwait
cmp
adc
cmp
mov
pop
jbe
adc
movsb
ljmp
xor
cwtl
jae
aam
sub
jno
pop
push
nop
xor
ret
enter
cltd
and
mov
jnp
js
xor
jnp
subl
loope
cmp
fsubrs
shll
mov
imul
lock
cmp
out
fwait
mov
jecxz
outsl
add
addr16
push
mov
test
sub
jecxz
in
cmpsl
mov
fdivp
sub
cld
sub
jge
mov
add
cltd
stos
jp
insb
sbb
sub
movsl
enter
dec
cmp
mov
dec
cmp
stc
inc
xchg
aam
enter
and
dec
and
adc
sahf
mov
leave
push
add
mov
cmp
adc
pop
nop
mov
clc
fisubl
xchg
das
inc
imul
pop
ss
stc
push
clc
mov
mov
testl
test
out
dec
push
pop
jl
dec
das
sarb
ds
ljmp
sub
movsb
mov
cmp
loope
data16
lret
outsb
sbb
mov
sub
pop
nop
push
push
cmc
loopne
pushf
mov
fildl
ficoms
adc
add
fwait
bound
cli
pop
and
stos
cmp
add
xlat
in
in
cwtl
test
inc
pushl
cltd
or
mov
mov
das
xchg
mov
ljmp
test
pop
push
dec
aad
or
xchg
jne
std
pop
xor
add
in
push
mov
sbb
sbb
in
test
pushf
test
and
add
mov
or
test
popl
in
adc
mov
lret
imul
mov
push
aas
es
into
rclb
and
icebp
adc
data16
hlt
add
fisttpl
insb
mov
xor
jmp
mov
mov
sbb
rolb
jmp
pushf
scas
leave
dec
adc
scas
imul
sbb
sbb
fidivrs
fucom
ds
cld
adc
in
scas
pop
aam
mov
sbb
clc
insl
sub
sbb
mov
push
cmpsb
lods
mov
pop
sub
push
sub
cmp
out
sarl
mov
push
mov
sub
push
inc
pop
xorl
ds
lret
sub
dec
fsubl
dec
mov
insb
jmp
bound
mov
je
fstps
cmc
pop
mov
and
insb
test
push
lods
cmpsl
nop
pop
jmp
sarb
pop
mov
mov
out
dec
fildl
mov
mov
adc
cld
mov
movsb
pushf
push
jg
fsubs
lret
bswap
scas
jo
pop
andb
fildl
jbe
call
popa
sub
lret
in
dec
into
push
lahf
lahf
cmc
popf
sub
repnz
xlat
sbb
xchg
pop
inc
aas
scas
sahf
out
add
pushf
je
jmp
xlat
insl
dec
pop
mov
nop
push
aaa
outsl
lret
enter
test
fst
je
xchg
cmpsl
xchg
sbb
hlt
adc
dec
mov
xchg
lea
pslld
xchg
sbb
test
inc
ja
lods
cwtl
ljmp
lods
add
add
mov
outsl
lea
das
mov
fwait
cmpsb
fimuls
out
push
lods
push
fldln2
add
scas
cmpsb
in
outsl
into
mov
out
icebp
stos
jle
pop
dec
punpcklbw
loopne
popf
pusha
out
mov
into
push
jns
sub
or
pop
mov
stos
loope
les
rcr
movsl
rcrb
test
scas
in
cmp
sub
jg
ss
fsubrl
out
clc
adc
pop
cld
dec
and
mov
xchg
jg
and
inc
xor
cmp
aas
lods
mov
scas
bound
mov
ljmp
loopne
mov
xchg
fnstcw
jns
sti
shll
divb
call
call
push
in
pop
mov
movsb
and
out
lods
and
out
fnstcw
push
mov
mov
in
dec
imul
jmp
mov
jo
cld
cltd
inc
nop
into
cmp
lock
push
mov
ds
mov
inc
addr16
push
xchg
inc
and
orl
sub
adc
ss
push
push
jo
icebp
mov
xlat
adc
fs
pop
mov
les
jl
je
sub
and
push
dec
sahf
sbb
jmp
mov
scas
loopne
mov
scas
je
ffreep
test
sub
int
ljmp
and
int3
push
cmc
nop
sbb
shl
rclb
pop
movsl
mov
aad
dec
xchg
jne
shrb
jmp
dec
and
scas
cwtl
or
out
loopne
bound
stos
ljmp
xor
out
sbb
sub
std
lret
out
pop
fnstsw
in
or
mov
add
dec
sbb
mov
jmp
or
jbe
loopne
pop
cli
cwtl
movb
inc
cs
xchg
inc
idivb
js
aaa
mov
ret
iret
mov
jmp
cmp
fst
movsl
inc
mov
jnp
add
pop
and
out
mov
jmp
loop
bound
adc
sub
mov
insl
mov
inc
push
je
ret
push
loop
add
sub
int
shr
inc
xchg
push
xchg
leave
lret
int
or
repnz
sbb
mov
mov
mov
jae
scas
mov
cld
xchg
dec
jle
aam
scas
stc
outsl
mov
sahf
mov
pop
shrb
mov
adc
lds
rol
movsl
aas
dec
sti
inc
aam
jae
mov
lahf
fsubrp
data16
mov
rclb
orl
mov
scas
and
ficompl
sub
and
cld
es
add
mov
mov
or
xor
out
or
les
out
mov
ss
in
scas
sbb
flds
pop
outsl
nop
or
pusha
test
jecxz
add
pop
or
cltd
out
push
fsubs
ja
or
and
dec
jnp
imul
xchg
push
jle
dec
mov
popa
jns
mov
sahf
in
popa
xor
stos
xor
movsb
fmull
dec
dec
sbb
cs
loop
fnstcw
lret
push
sti
sbb
stos
fstp
pop
pop
adc
lahf
ljmp
lahf
pusha
mov
fsts
fistpll
call
pop
cmpsl
outsl
movl
ljmp
dec
cltd
test
test
out
jl
lock
or
and
in
jle
dec
inc
inc
push
cmp
test
jns
out
jnp
adc
pop
cs
push
fbstp
bnd
pop
push
loop
test
jae
ret
sub
in
and
jno
push
ja
add
jb
inc
mov
out
or
sbb
ja
loopne
stos
rcrl
mov
sub
sub
dec
jmp
addr16
push
out
push
into
mov
or
fcom
lret
icebp
and
insl
cltd
mov
add
scas
mov
lds
mov
scas
popa
in
mov
filds
pop
in
jmp
fisubrs
loopne
ret
in
dec
daa
fistpl
jle
mov
and
ss
xchg
or
iret
pop
or
shlb
cwtl
inc
mov
scas
rcr
loopne
fsubr
je
lods
lret
mov
loopne
in
or
shr
mov
sbb
and
or
inc
sar
pop
mov
mov
mov
in
bound
push
cmp
iret
add
mul
cld
and
cmp
jno
sarl
repz
scas
aaa
pop
filds
test
mov
lret
iret
pop
sahf
sti
icebp
shr
gs
push
mov
ret
stc
je
lret
mov
jmp
or
push
inc
cltd
fcomps
xchg
dec
fs
inc
addb
and
mov
fisubrs
loopne
xlat
push
scas
push
bound
lahf
lahf
lea
sub
pop
inc
insb
lock
mov
dec
dec
outsl
add
mov
test
mov
sub
mov
sarb
inc
cmp
ds
arpl
sub
mov
push
cmpsb
fs
jb,pt
adcb
sbb
jle
add
pop
icebp
sub
cld
shrb
dec
out
cs
in
xor
repnz
adc
xor
hlt
mov
add
call
sub
sti
and
and
out
imul
mov
into
fisttps
dec
push
xor
pushf
outsb
test
cmpsl
cmc
jmp
sub
sbb
cs
push
inc
sbb
ja
rcrl
push
int3
aam
sub
jmp
test
ret
inc
insb
cmpsb
and
stos
push
xor
xor
dec
inc
jmp
mov
jne
int
xchg
jne
inc
aaa
sub
icebp
insl
in
iret
jle
mov
in
dec
scas
dec
and
sbb
jmp
xor
pushf
bound
ja
mov
add
icebp
or
cmp
ja
cmp
loopne
xchg
cwtl
jmp
scas
sbb
xor
inc
psubsw
test
mov
dec
or
xacquire
fwait
jmp
fs
fildll
and
cmp
mov
lock
ljmp
cltd
jo
cwtl
rcr
rcrb
imul
xor
or
inc
lret
mov
xlat
xchg
sbb
adc
or
jae
dec
subb
fsubs
pusha
push
xchg
sarb
lods
enter
inc
movsb
ja
jbe
bound
xlat
popa
push
mov
out
cwtl
dec
icebp
test
pop
mov
insb
imul
cmp
test
mov
fnstenv
rcr
push
push
int3
and
mov
sbb
scas
dec
loop
push
notl
nop
daa
subl
add
and
addr16
xchg
setp
push
push
cmp
lock
pop
mov
pop
mov
lret
movsb
vpshld
aas
cmpsb
popf
sbb
cmc
lds
mov
xchg
add
stc
xor
sahf
je
push
lds
cmp
int3
pop
xorl
nop
iret
stos
fdivrl
frstor
mov
fwait
std
push
inc
pop
insb
rcrb
mov
jbe
and
scas
fiaddl
mov
insl
push
sbbb
jp
mov
jbe
out
fldt
jno
pop
je
sahf
cmp
popa
jne
arpl
fisubrl
adc
popa
jge
sbb
ja
daa
pop
sti
mov
and
jno
popf
gs
iret
out
test
nop
icebp
mov
cmp
mov
scas
insb
mov
test
mov
stos
pushf
shrb
fidivl
ss
add
pusha
mov
out
or
xlat
cli
cmpsl
dec
fnstsw
fwait
mov
xchg
xor
inc
sbb
aas
leave
dec
mov
xor
sub
jo
in
mov
int3
inc
pop
sub
push
dec
xchg
adc
xchg
xor
sub
mov
inc
inc
push
cmp
dec
xchg
sbb
stos
cmc
or
loopne
push
data16
and
rclb
lods
jne
and
push
sub
ds
and
cltd
xor
fsubl
ret
xchg
scas
xor
pop
jbe
fbstp
push
xor
cltd
add
insb
pavgb
add
jbe,pt
aam
and
insl
mov
jno
push
inc
sub
ret
mov
mov
arpl
out
fwait
lock
mov
aad
test
rclb
sub
mov
shll
in
mov
jb
lds
lods
icebp
movsl
leave
scas
out
sbb
fstpl
or
lret
adcb
push
add
push
or
cltd
push
arpl
jmp
cltd
ds
stos
or
or
adc
and
stc
adc
xchg
cmp
mov
xor
mov
iret
stos
test
push
or
cltd
ds
push
mov
imul
dec
roll
and
mov
push
fisubrl
jb
pop
mov
fidivrl
pop
mov
andl
insb
scas
fidivl
mov
neg
fbld
je
ficoms
and
dec
rclb
test
xchg
sub
pop
imul
and
xchg
xchg
mov
movl
pop
mov
sahf
sub
cltd
or
or
scas
xor
loopne
pop
mov
push
int3
sub
cmpsl
and
mov
sbb
lods
mov
jecxz
iret
inc
arpl
nop
ljmp
les
scas
xor
aad
push
or
les
out
push
pop
cmp
cltd
mov
mov
icebp
test
dec
pusha
lock
stos
movsb
xchg
mov
inc
xchg
jge
cmp
sbb
nop
bound
push
xor
mov
or
outsb
cld
mov
in
fiadds
ret
add
xchg
les
mov
loop
pop
jb
stos
cmpsl
jl
cmc
ret
and
aad
push
jecxz
shlb
cltd
stos
mov
pusha
cmc
pushf
gs
fwait
ret
add
clc
push
icebp
pusha
mov
int3
pop
lret
add
lret
inc
pop
jnp
sub
cmp
in
loop
and
xchg
test
push
cmp
popf
fimuls
push
stos
adcl
dec
mov
popf
shlb
mov
test
cmp
bound
outsl
sti
jns
lock
fildll
push
inc
push
test
xchg
xchg
lods
xchg
push
sbb
sbb
inc
jg
dec
or
lea
fld
xlat
insb
or
daa
jno
scas
jnp
mov
ss
mov
push
stos
stc
ret
xchg
sub
mov
cmpl
mov
xlat
cmp
pop
arpl
inc
ficompl
adc
shlb
lea
lock
fstpt
call
mov
mov
mov
fildl
mov
push
mov
xchg
pushf
jns
idiv
cltd
imul
bound
dec
pushf
push
test
mov
pop
rolb
or
cmpsl
push
add
push
cmp
outsb
aas
int3
scas
sti
popf
dec
fwait
je
pop
or
rcrb
or
and
jnp
mov
push
mov
mov
inc
mov
inc
les
scas
ds
jb
pushl
xor
movsb
mov
aam
cli
nop
insb
mov
ljmp
push
psubb
push
test
jge
int
sbb
inc
ficoml
mov
dec
out
push
outsl
cltd
lahf
xchg
in
jecxz
jo
pop
fildll
sub
mov
mov
mov
adc
faddl
fwait
cmpsl
ds
lods
push
sub
xchg
pop
nop
lea
ss
insl
mov
cmp
imull
lods
xlat
call
mov
pop
mov
and
pop
call
add
test
jo
es
mov
sbb
enter
pop
sub
lret
nop
xchg
das
mov
sub
lret
lock
nop
shrb
jnp
popa
jl
les
scas
outsl
mov
pop
jle
or
mov
ffree
ret
add
pop
imul
aaa
in
scas
imul
insb
mov
mov
adc
push
insb
adc
stos
das
dec
pop
sub
pop
nop
push
sbb
mov
pushf
cmp
in
push
xor
mov
xchg
scas
xor
jns
decb
jnp
lock
mov
cmpsb
int3
stos
aaa
daa
and
jae
cltd
and
hlt
pushf
imul
adc
aas
pop
ds
pop
xchg
lcall
jns
mov
push
cli
adc
push
mov
xor
andb
ret
mov
dec
scas
or
pop
shll
mov
lret
fcom
jo
or
rclb
mov
cld
xor
dec
mov
loope
data16
pusha
sbb
stos
mov
pop
rol
incl
lahf
in
out
sub
fbld
mov
es
push
cmp
add
xor
cli
jae
xor
cltd
push
push
xlat
out
mov
and
std
mov
push
pop
fistpll
jo
mov
pop
testb
in
popf
icebp
fiadds
sahf
test
mov
in
mov
pop
scas
push
rorb
sahf
sub
movsb
data16
xor
inc
fldt
mov
ss
test
sub
pop
cmp
dec
xlat
pushf
clc
insb
lock
loopne
jnp
outsb
cmc
and
mov
sbb
pop
lret
dec
push
stc
cwtl
in
lret
mov
insb
xchg
fadd
cli
mov
xor
add
xor
mov
dec
mov
dec
out
negb
xor
pop
call
push
in
mov
xchg
add
mov
repz
pop
mov
popa
add
sub
inc
xchg
popf
mov
xchg
and
cltd
iret
inc
dec
lock
iret
fstpl
mov
or
push
and
xor
fstl
mov
pop
adc
xchg
pop
movsl
ss
adc
sub
stos
imul
jmp
stos
shrb
mov
jae
mov
bound
and
rcll
gs
shl
outsl
cmp
repz
xor
fwait
push
dec
cmp
push
lcall
lods
push
inc
out
leave
popa
jnp
in
mov
repnz
lret
fiaddl
ss
pop
cmp
std
in
add
orl
gs
in
or
xor
icebp
test
jo
data16
mov
int
test
scas
mov
rcl
xchg
cwtl
jae
mov
sets
mov
jmp
mov
stc
aaa
add
sub
mov
jmp
push
cmpsl
data16
mov
inc
imull
mov
aaa
call
addr16
and
in
sahf
xor
aad
ljmp
test
stc
call
jmp
insb
xor
stos
mov
decb
rorl
pop
jg
sbb
les
fbld
out
and
addr16
xchg
scas
sbb
cltd
pop
in
xchg
add
xchg
stos
inc
nop
dec
cld
add
or
out
cmp
int3
sbb
out
in
lea
pushf
inc
fcoms
and
push
jecxz
jo
add
push
out
popa
cmp
das
sbb
iret
push
inc
jecxz
jnp
fimuls
cld
xchg
hlt
es
cmp
lahf
dec
fmuls
mov
add
inc
and
je
mov
shll
xchg
sub
out
cmp
pop
out
adc
in
out
mov
stc
test
stos
fnsetpm(287
lea
xor
xchg
adc
and
push
outsl
xor
scas
sbb
jno
mov
cmpsb
mov
mov
add
arpl
mov
sahf
xor
and
mov
jae
or
fwait
mov
push
lds
loopne
pop
pop
dec
lods
ds
nop
aad
inc
test
insb
scas
mov
jg
dec
shrb
bound
movl
dec
ja
stos
sbb
xchg
arpl
xor
inc
es
test
std
fsub
imull
popf
repz
out
in
dec
cmp
xor
dec
out
fistps
xchg
fdivrs
movsl
adc
and
iret
jmp
xor
ss
loope
push
mov
rep
ret
stos
stos
jae
pop
mov
iret
cli
cs
bound
and
lahf
rcr
scas
out
mov
xor
sub
mov
jb
ret
enter
lods
mov
cmp
mov
jno
push
or
inc
jbe
std
fildll
pop
cli
test
int3
mov
mov
mov
add
xor
and
test
fmulp
push
xchg
ja
pop
cwtl
lret
mov
add
lret
sbb
aaa
jns
lods
sti
sub
lods
sbb
call
fwait
in
rcrb
or
mov
bound
cltd
dec
mov
add
addl
adc
jle
dec
jg
nop
lock
int
inc
add
jge
jg
pushf
adc
sub
gs
mov
movsl
sub
push
dec
sbb
bound
mov
push
lods
push
insl
lret
jo
dec
je
cs
push
sbb
loope
clc
mov
mov
nop
js
xchg
mov
imul
movsb
mov
dec
out
xchg
adc
rorb
mov
pop
cmpsb
mov
test
scas
cwtl
mov
fs
and
sbb
jg
xor
jl
sbb
mov
jno,pt
lret
clc
stos
lods
outsb
test
inc
sub
insb
xchg
test
daa
out
repnz
ss
call
rcrl
dec
xor
add
bound
mov
std
outsb
ret
sbb
sar
and
ja
jbe
stos
enter
mov
fisubs
lret
xchg
lods
loopne
es
pop
xorl
das
cli
adc
xchg
out
mov
pop
fadds
in
mov
cltd
lcall
mov
inc
imul
mov
mov
out
jle
jo
jle
leave
cwtl
loopne
jo
iret
out
adc
ds
fildl
test
stos
dec
mov
adc
jle
inc
push
mov
push
test
xchg
shll
mov
stos
fildll
sub
or
loopne
dec
in
scas
xchg
out
jnp
push
bnd
sub
data16
push
out
outsb
xchg
pop
jmp
inc
fcoml
and
mov
outsb
fistl
int3
dec
je
mov
das
mov
out
add
cld
mov
jns
sub
and
ror
jne
aas
push
femms
jne
jmp
ljmp
add
xchg
pop
insl
sub
outsb
out
xchg
stc
loopne
cmp
nop
int
mov
inc
add
and
mov
ljmp
jl
cld
inc
dec
xchg
dec
test
bound
pop
fbstp
bound
loopne
cmp
jnp
insb
outsb
pop
push
sub
pop
fsubrl
sub
inc
rclb
push
adc
ja
fisubrs
jmp
insl
sbb
pop
xchg
lcall
ja
xchg
ds
sbb
sub
ljmp
andl
stos
mov
fldcw
mov
je
dec
loopne
inc
movsl
mov
fdiv
ds
movsl
mov
lcall
daa
pop
cmp
das
mov
mov
iret
sbb
inc
fistl
lahf
push
pushf
bound
ja
pop
int3
hlt
ficomps
into
call
loopne
push
and
jl
lds
inc
and
inc
fwait
bound
sub
out
aam
jle
lret
or
jge
xchg
pop
fcompl
sbb
nop
fucomp
inc
shlb
fisttpl
jae
popa
pop
sub
xlat
movsb
ja
fstpt
lods
test
roll
xor
mov
mov
pop
sbb
fs
sahf
out
xchg
xchg
out
hlt
jle
mov
shlb
pusha
stc
cltd
sub
outsb
fisubrs
dec
lcall
data16
sahf
stc
in
or
xchg
jnp
pop
stos
mov
sub
jl
movsb
mov
out
add
mov
imul
cmp
fistpll
aas
xor
lods
adc
stc
scas
jae
iret
loopne
ljmp
pop
dec
jns
or
xlat
lock
cmpl
test
out
push
push
or
ljmp
mov
mov
aam
sarb
insl
sbb
or
pop
or
leave
test
stc
cmp
jg
aam
dec
xchg
ds
xor
mov
rol
ja
add
bound
fxch
lret
or
out
iret
push
push
cld
gs
loopne
jmp
lret
push
test
xchg
test
je
mov
sbb
or
sar
push
mov
test
int
gs
mov
lods
lock
dec
mov
push
int3
inc
das
popf
mov
sub
sahf
call
inc
mov
outsl
mov
call
aad
inc
movsl
pop
test
inc
jb
cwtl
xor
aad
ret
sarb
ds
jl
popf
in
add
jmp
push
mov
xchg
ljmp
out
inc
stos
mov
push
in
add
jp
push
sbb
mov
aad
xorl
dec
icebp
push
adc
sub
ljmp
adc
call
in
out
les
lock
pop
add
jmp
dec
cltd
dec
shrl
mov
lahf
sub
into
sub
sbb
inc
and
mov
sbbl
cmp
mov
inc
fs
sti
sbb
sub
mov
mov
adc
lret
adc
lahf
and
xlat
pop
mov
and
jmp
fcoml
fildll
pop
jne
jb
scas
mov
or
and
cmp
fiadds
loopne
gs
or
mov
sbb
lret
fwait
je
insl
les
loopne
shl
jl
xchg
mov
popa
sub
inc
sub
shrb
inc
fsubrl
out
les
and
test
in
dec
fimuls
popa
out
mov
mov
ja
outsb
aad
imul
stos
fists
iret
pop
pop
std
fnstsw
jne
imul
dec
rolb
sarb
jb
nop
push
mov
aad
insb
mov
mov
inc
sbb
outsb
movsl
fisubrs
cltd
xchg
arpl
int
lods
fistpll
pop
or
out
rep
pushw
sub
push
iret
popa
xor
sub
inc
ds
sub
in
cmc
jg
in
and
aaa
imul
lods
push
int3
lods
inc
fsubrl
sbb
insb
fld
cmp
ljmp
sub
lret
repz
lods
repnz
scas
adcl
cld
pop
lea
aad
rolb
maxps
sbb
sub
mov
nop
icebp
push
pop
aam
sahf
punpckhbw
pusha
dec
out
push
push
fisubs
fisttpll
in
rorl
hlt
fwait
mov
daa
cmp
sbb
mov
xchg
inc
push
push
xlat
bound
xchg
pop
xor
jne
sahf
std
pop
pop
fsubrs
mov
pop
and
mov
push
mov
mov
out
sbb
rclb
sbbl
mov
or
arpl
rorl
in
adc
sbbl
jbe
lcall
pop
dec
dec
movsl
lea
sahf
icebp
push
sahf
xor
fs
fisubrs
je
arpl
ja
mov
enter
and
adc
jo
dec
jae
mov
outsb
fadd
int
std
aas
in
pop
aam
ret
scas
jmp
dec
and
loopne
push
pushf
xchg
adc
mov
outsb
adc
inc
outsb
iret
sti
rcl
sbb
dec
call
push
int
jmp
sub
gs
test
test
call
adc
scas
sub
cmpsl
cmp
outsb
cmpsb
popa
or
fsubr
andb
mov
lods
cmpb
sbb
das
imul
in
lret
pop
es
jne
lret
imul
sarb
pop
and
lea
out
cltd
push
popa
xor
jno
sub
scas
sti
pop
repz
sub
andb
mov
xchg
sub
xor
add
sub
add
xchg
mov
or
pop
ljmp
push
adc
mov
inc
hlt
cmp
fdivrs
inc
fs
addr16
test
outsb
bound
sbbb
jae
sub
out
rcrb
mov
movsb
dec
mov
rclb
xor
outsb
xchg
scas
mov
xor
push
out
push
xchg
imul
jae
pop
rcr
pusha
clc
shlb
mulb
or
sub
mov
cmp
sub
mov
lock
add
sub
pop
pop
dec
sub
or
jns
mov
cmp
pop
mov
xor
loopne
cmp
add
jmp
fwait
or
ffree
js
sub
inc
addr16
loopne
push
aam
mov
sub
push
repz
inc
leave
mov
loope
push
int
nop
push
out
sbb
aad
js
mov
adcl
mov
mov
mov
push
stos
into
cmp
xchg
pop
outsb
lret
pop
mov
std
fwait
bound
xor
adc
das
dec
subb
sahf
mov
fwait
adc
push
in
cs
xchg
cmc
adc
pop
jmp
fnsave
sbb
cmc
xchg
sub
push
fsubrl
test
mov
incl
popa
int3
outsb
in
adc
popf
call
test
push
jle
icebp
and
mov
aas
and
or
sub
pushf
mov
lods
pusha
jecxz
mov
loopne
ds
int3
sbb
repz
pushf
xchg
fxch
lcall
and
jo
push
pop
lds
xor
mul
pop
cmp
xchg
lods
mov
into
sub
test
sub
dec
pop
inc
cld
pop
loopne
fsubl
fldl
xchg
test
mov
jns
hlt
cmp
inc
inc
leave
faddl
dec
stos
mov
data16
mov
and
cmp
cld
lret
pushw
repz
loop
push
imul
jae
lahf
ss
inc
fwait
stos
mov
fistpl
fwait
outsb
sbb
ret
cmp
shll
popa
les
xchg
cmpsb
sbb
ss
stc
fcmovnu
pop
mov
lods
inc
fldt
sbb
std
and
dec
xorb
leave
dec
inc
addl
push
mov
sti
scas
and
into
loopne
jle
sub
in
gs
lret
or
test
out
push
jmp
add
mov
icebp
test
sub
add
or
in
stos
lcall
pop
nop
cmp
loopne
ja
cmc
les
dec
sub
out
shrb
ret
xchg
int
adc
mov
xor
xor
adc
pop
outsb
add
cmc
enter
subb
sub
push
sbb
mov
rolb
adcl
fcomi
stc
enter
xchg
es
adc
int3
outsl
mov
outsb
inc
jo
cltd
mov
dec
and
pop
mov
add
pop
adc
jno
imul
or
sub
sub
mov
in
push
movsl
adc
mov
int
movsl
cltd
flds
es
adc
cmp
stos
fwait
daa
or
mov
insb
mov
sub
inc
cmp
xchg
pop
das
andb
pop
mov
fwait
testl
shll
arpl
mov
pop
cmp
mov
cwtl
and
out
inc
daa
xor
test
lods
or
sbb
mov
call
js
imul
or
xchg
sub
dec
sar
ljmp
sarb
mov
flds
test
push
mov
dec
hlt
popa
and
push
adc
cmp
mov
jno
push
mov
cmp
fwait
mov
mov
les
cltd
lret
add
cld
push
mov
or
mov
cmpsb
adc
dec
cli
lods
and
lahf
mov
insl
adc
mov
cmpsl
inc
push
ffreep
mov
fisubl
fcomp
xor
push
arpl
mov
sub
orb
test
scas
outsb
insb
loopne
mov
cmpsl
xchg
in
iret
cmp
popa
cmp
fneni(8087
aad
pushf
mov
jnp
movsb
fadd
enter
cmpsl
cmpsb
jle
ret
ja
shr
aad
push
cmp
insb
les
push
add
fwait
out
jmp
mov
mov
das
out
outsb
cmp
ret
xor
fs
scas
fucomp
mov
and
add
rolb
imul
sbb
scas
sub
and
inc
gs
xchg
push
je
pusha
push
jmp
pop
jno
lock
xchg
lcall
daa
movsb
mov
add
out
xor
mov
rclb
jo
insb
cmp
jecxz
or
gs
fisttpl
repnz
inc
add
fcompl
inc
or
sahf
and
mov
test
ja
nop
sub
decl
xchg
mov
mov
fstpt
mov
ret
in
shll
sti
ds
push
outsb
cli
lock
adc
push
pop
pop
sahf
shrb
lock
loopne
aam
pushf
loop
ret
cs
int
test
adc
inc
push
xchg
fs
outsl
idivb
cltd
leave
subl
insb
jns
xor
jecxz
stc
and
mov
cltd
andb
insb
outsl
mov
xchg
jp
pop
xor
loope
hlt
aaa
sub
push
subb
jbe
scas
cltd
popf
pop
add
lds
xor
xorl
ret
shll
and
pop
jns
fstpt
push
sbb
out
jns
out
mov
push
nop
jno
dec
mov
dec
mov
pushf
test
in
mov
xchg
sbb
mov
fsubrp
xor
sub
imul
pop
stc
fwait
je
adcl
popa
mov
jbe
push
jl
or
adc
gs
mov
ja
iret
in
sub
push
cld
mov
aad
bnd
sarb
lret
push
pop
cwtl
and
adc
xchg
loopne
fsubrl
scas
push
xor
sbb
fldenv
aaa
divl
dec
cmpsb
jae
je
cmpsb
mov
add
cli
inc
daa
sahf
popf
push
add
mov
push
test
sti
movl
inc
cwtl
cmp
ret
add
or
mov
into
sti
in
jnp
cmp
fistps
mov
dec
mov
sahf
cs
stos
pushf
add
imul
mov
or
out
and
scas
pusha
fsubs
and
cmp
jo
mov
xor
jnp
mov
test
arpl
lret
sbb
int
iret
movsb
push
nop
or
and
jmp
cmc
getsec
xchg
ror
ret
xchg
sub
scas
fs
mov
jmp
sahf
inc
sbb
pop
popa
leave
call
sti
in
push
inc
mov
in
data16
pop
cmp
or
fisttpl
sub
inc
mov
orl
aas
jo
adc
xchg
rorb
cltd
fs
xchg
sub
mov
add
xor
cmp
add
fistpl
mov
sub
sti
scas
cmp
mov
lock
mov
mov
pop
js
loopne
jnp
jl
fstpt
loop
inc
cmpsl
fstl
outsl
int
dec
push
popa
clc
pusha
fisttpl
cmpsb
js
push
sub
mov
and
in
fwait
stos
jl
jnp
sti
pusha
repnz
lea
fildl
sbb
push
bts
sahf
xor
and
in
push
dec
pop
push
sub
out
mov
pop
dec
push
cltd
gs
inc
adc
inc
lods
sti
enter
sbb
imul
cmp
sbb
inc
movsb
jle
sbb
aas
orl
repnz
push
mov
jmp
xor
fwait
rcr
sub
subl
cmp
push
pop
adcb
or
cld
sti
int3
mov
iret
mov
fisttpll
hlt
adc
loop
bound
sub
sbb
jp
xchg
aam
add
outsl
cs
mov
inc
mov
movsl
imul
push
mov
popa
xchg
ret
push
dec
outsl
stos
lret
pop
lds
push
mov
sub
out
test
mov
sahf
or
mov
lods
in
adc
scas
fcmovnu
or
inc
mov
outsb
stos
mov
push
mov
jnp
fcom
sub
inc
in
pop
ljmp
sbb
push
fcompl
xchg
and
imulb
enter
jmp
mov
sub
movsl
xchg
fdivrs
mov
dec
loopne
jg
push
adc
pusha
sbb
lods
sub
insl
push
jle
mov
arpl
aam
lea
ficompl
mov
push
pushf
xor
jle
cmpsl
lcall
dec
and
xchg
mov
or
cwtl
ret
inc
adc
negb
or
jg,pn
decl
out
push
lret
mov
xlat
and
out
icebp
arpl
mov
repz
sbb
cmpsl
lods
lret
and
in
or
mov
sar
dec
mov
cmp
pop
mov
cld
and
jl
andb
lret
lds
push
test
adc
sub
push
pop
stos
lret
cld
aad
int3
dec
shlb
sub
dec
push
xor
test
loopne
push
test
xchg
adc
aas
mov
jno
jnp
dec
adc
outsb
out
aam
adc
push
nop
mov
subb
pop
pop
call
or
lock
mov
add
push
fnstcw
push
or
lcall
hlt
mov
shrb
bound
aas
or
aas
icebp
add
loope
lods
pop
out
pop
sub
les
loopne
repnz
and
lods
lods
aad
pop
jge
popa
sti
push
out
dec
push
int
adc
xlat
push
in
into
in
lods
stos
insb
push
bound
push
cld
cs
cld
outsb
in
sub
pop
test
lock
mov
leave
mov
int
iret
inc
mov
sbb
add
and
push
push
lock
push
shl
sub
movsb
jbe
iret
bound
enter
xlat
js
imul
or
and
mov
lcall
lods
cmpsb
ret
je
sbb
icebp
cmp
jns
jno
fsubr
jmp
dec
pop
cltd
sahf
enter
or
xor
stos
les
repz
mov
out
lret
and
pop
es
and
ret
iret
cmp
stos
iret
mov
xchg
push
lahf
ljmp
ss
lahf
xchg
cmp
push
ss
mov
scas
daa
push
scas
inc
lahf
rcrl
jae
outsb
fstl
dec
ror
aam
xchg
push
dec
and
push
cltd
not
jno
lret
into
movsb
jle
xor
clc
push
dec
dec
pop
decb
cmc
jl
xchg
cmp
loopne
pop
mov
in
pusha
or
ja
inc
clc
call
adcb
sbb
pop
pop
outsb
outsb
push
out
andb
loopne
scas
sbb
inc
sbb
or
jno
pop
mov
test
cmp
jl
xor
lea
jp
test
sub
cmp
push
outsl
add
xchg
test
dec
lret
sbb
pusha
in
jmp
xor
lret
std
mov
or
mov
scas
sbb
lock
jle
adc
rolb
dec
pop
pop
mov
cmovnp
je
shlb
inc
push
fcmovb
dec
cmp
shlb
pop
int3
pusha
and
cmpsl
in
ror
imul
cmpb
fisttps
cmpsb
leave
inc
movsb
clc
adc
mov
out
push
pop
fdivr
mov
or
add
popa
push
sahf
push
ljmp
and
xchg
js
xchg
and
mov
into
dec
jnp
inc
fwait
js
loopne
shlb
sbb
in
dec
mov
iret
iret
std
int
mov
sti
movsl
sub
sbb
add
sub
imul
xor
pusha
mov
dec
xor
mov
dec
loopne
inc
int3
cltd
lock
push
or
icebp
into
arpl
adc
les
and
bound
out
sbb
shrb
int3
mov
popf
cli
cmpsl
mov
fstpt
minps
outsb
je
rorb
and
dec
pop
push
jge
sub
pushf
fiaddl
insl
loopne
jns
repnz
lcall
pop
mov
mov
lds
jo
icebp
pop
cmp
shrl
add
and
imul
mov
mov
xchg
lods
or
add
cmpsl
fldl
ror
cltd
adcb
sbb
fsts
leave
cli
adc
int3
or
cmp
gs
or
rcr
cli
xor
cli
cmp
sub
mov
test
xchg
loopne
cli
lds
mov
sub
into
out
scas
mov
sub
repz
or
sahf
and
scas
mov
fimuls
push
cwtl
fsubrl
push
pop
inc
xor
inc
adc
outsb
shrl
aaa
mov
mov
jo
sahf
icebp
outsl
jle
insl
outsb
loope
pusha
outsb
or
sbb
cld
movsb
out
hlt
aam
mov
sub
in
imul
out
fsubrp
sbb
and
cltd
inc
add
dec
out
xor
inc
ds
cmpsl
jmp
cltd
mov
xor
daa
clc
and
stos
sub
pop
sbb
add
mov
and
lret
outsl
test
mov
sbb
bound
out
imul
cs
scas
cld
mov
xor
add
sarl
dec
mov
pop
xorl
and
jb
lea
out
sub
stc
lods
add
dec
in
ja
pop
xor
pop
push
sbb
dec
push
and
or
dec
pusha
inc
jle
popl
lds
pusha
mov
adc
pop
add
int3
pop
imul
pop
mov
test
mov
fstpt
push
adc
idivl
dec
loope
sub
sbb
sub
and
cwtl
fcmovu
and
mov
cmp
fs
jmp
pusha
ret
pusha
ss
imul
popa
fsubr
out
scas
mulb
mov
xor
sbb
mov
mov
out
jg
test
push
lret
jle
lods
sbb
add
fidivrs
jmp
mov
mov
into
add
or
dec
std
insb
cmp
popa
jb
ljmp
pop
and
test
lret
sarb
jo
faddl
in
aam
push
mov
out
fwait
arpl
dec
out
inc
scas
je
nop
mov
jbe
hlt
dec
hlt
mov
inc
out
bound
xchg
out
xlat
mul
xor
xor
mov
pop
cwtl
dec
or
mov
sbb
mov
ja
out
ret
stc
shl
ret
sbb
out
stos
fnstsw
in
mov
test
call
or
dec
pop
pop
dec
pop
fwait
loopne
cltd
int3
adc
xchg
sti
fcomi
pushf
call
push
sub
and
lock
popa
mov
lods
cmpsb
aam
jmp
in
jbe
jae
cld
ret
pop
lock
add
outsl
orl
aas
xor
popa
push
popa
inc
xchg
sar
mov
and
sbb
sti
jge
xchg
jo
pop
bnd
xor
fstps
pop
jnp
sarb
inc
aam
fldt
test
inc
push
lahf
push
xchg
lahf
lret
bound
out
filds
add
push
add
lahf
iret
ljmp
icebp
aam
out
stc
ljmp
test
or
test
scas
rcll
ds
mov
cmp
movsb
test
loopne
mov
xor
stos
das
push
outsl
repnz
add
bnd
ficomps
gs
xor
and
and
ss
in
stos
pop
push
xor
daa
mov
jp
mov
mov
loopne
scas
mov
lret
mov
bound
fdivs
pop
xor
cltd
insl
and
repz
inc
icebp
inc
call
and
jne
repnz
jne
loope
in
mov
xor
lods
push
stos
aam
insl
fists
loopne
fisttpll
sti
test
mov
adcb
lods
mov
pusha
jmp
pop
inc
cs
scas
fnsave
jae
rcr
xlat
mov
cmpsb
imul
in
jp
orb
and
inc
jmp
daa
cmp
inc
sbb
test
aad
push
mov
aas
les
popl
fcmovne
jae
jge
and
test
xlat
dec
mov
andl
fistps
jno
cmpsl
push
mov
int
sbb
imul
or
into
xchg
aaa
inc
jmp
cmpsb
shll
or
jecxz
mov
push
cmp
loop
repnz
or
repz
lret
bound
ret
sarb
and
dec
arpl
fldt
aas
xchg
xor
jnp
aam
dec
and
and
mov
push
mov
pop
mov
mov
mov
push
ss
mov
out
and
xchg
repz
xchg
add
adc
nop
scas
orl
push
mov
push
cld
ss
or
icebp
out
mov
sub
push
pop
aam
lcall
jmp
shrl
scas
scas
sub
clc
xor
lods
imul
test
push
mov
out
pusha
mov
insl
inc
pop
sub
mov
repnz
xchg
sbb
fldt
in
cmpl
xor
jae
dec
xor
jne
std
iret
addb
insl
xchg
sbb
pusha
mov
dec
jns
or
push
stc
ds
insb
cmp
js
test
xchg
pop
add
dec
push
cmp
arpl
jnp
jecxz
sbb
pusha
bound
stos
cmp
add
adc
je
mov
les
sahf
jg
mov
jle
jle
fwait
cmp
sbb
push
out
jl
ja
xlat
leave
and
stc
and
mov
scas
mov
fdivrl
ss
inc
jmp
lock
aad
dec
daa
sub
insl
sub
adc
cwtl
xlat
ds
mov
nop
andnps
mov
call
aam
mov
fs
in
mov
cmova
add
jl
daa
cmp
insl
loopne
lds
sti
push
cmc
sub
pop
sarb
movb
xor
mov
push
add
pop
roll
mov
bound
lret
ds
xor
aam
rcrb
mov
fnstenv
pushl
data16
mov
je
orb
mov
mov
outsb
xor
adc
sbb
jo
pop
cld
icebp
sahf
xchg
jl
sbb
pop
daa
xchg
sbb
xor
jns
ljmp
out
inc
mov
cmc
xchg
and
push
outsl
outsl
mov
out
sub
leave
sti
loopne
cwtl
fdivs
sub
lds
sahf
es
lret
lods
push
or
idivb
cmp
popf
ja
xlat
lock
movsl
in
mov
rorb
adc
lock
out
imul
stc
cmp
cs
inc
out
outsb
inc
dec
arpl
bound
loop
adc
jecxz
mov
mov
xchg
gs
hlt
adc
insl
push
inc
jbe
xor
scas
scas
jmp
ds
inc
push
scas
in
ja
outsl
xchg
sub
sbb
and
sahf
aas
rcrl
cmpsl
cmp
test
add
stos
std
lret
insb
pop
add
dec
push
iret
or
enter
aam
jmp
shlb
mov
in
push
push
push
and
add
pop
cltd
stos
mov
dec
icebp
pop
or
mov
ljmp
rcll
ljmp
xchg
loopne
inc
pusha
in
and
mov
xor
ds
xchg
dec
mov
mov
sub
stos
or
push
sahf
adc
dec
push
lea
popa
in
test
je
fcom
sbb
in
pop
mov
gs
sahf
imul
int3
mov
daa
sub
imulb
jo
mov
into
out
jnp
cmp
pop
sub
xchg
in
rcrl
dec
adc
jne
scas
cmp
bound
orl
cs
cmp
xor
int
jle
xchg
pcmpeqb
bound
sub
in
cmpsb
test
call
pop
scas
outsl
inc
pop
subb
pushf
and
cli
xlat
push
xor
out
pusha
insl
push
xor
loope
pusha
int3
ds
xor
inc
out
out
inc
pop
cmpsb
mov
mov
cld
and
outsl
adc
mov
iret
cmc
stos
out
test
push
test
sbbb
mov
xor
insl
cmc
sbb
mov
aaa
loopne
insb
sub
in
add
xor
imul
jo
lock
iret
mov
inc
or
lock
lock
cmp
stos
cltd
sarb
jle
daa
pop
sub
adc
mov
repnz
fdivl
add
jmp
rcrl
sbb
sbb
gs
inc
dec
and
sub
fistpl
cmp
stos
inc
push
dec
pop
sbb
cmp
aaa
movl
fwait
cmp
ret
jg
pusha
enter
scas
clc
mov
mov
or
aaa
push
xor
push
sub
lods
dec
stos
pop
add
out
push
sub
leave
sub
ffree
outsl
shr
out
js
cld
icebp
xor
aad
jg
xchg
mov
scas
mov
jmp
or
sti
daa
xchg
cmpsb
scas
imul
cmp
jecxz
out
popf
nop
scas
pop
push
sub
nop
lock
lods
lods
dec
mov
test
sub
aaa
ds
cmp
xchg
idivb
ljmp
dec
iret
stos
das
jmp
aam
add
movsl
and
mov
lret
sti
add
mov
ljmp
add
xchg
xor
mull
stos
subb
loopne
out
scas
in
outsb
das
jmp
lods
stos
test
pop
insl
subb
and
lods
sub
subb
and
jmp
ds
jnp
into
inc
test
ret
imul
push
imul
jb
out
les
test
add
aaa
adc
or
push
and
push
in
int3
call
xlat
jge
fwait
mov
lahf
fs
mov
pop
data16
andb
call
push
sub
sub
pop
pusha
aaa
pop
mov
pop
pop
jmp
mov
loopne
fsubrs
sbb
jo
sbb
cmp
bound
pusha
inc
les
movsl
sbbl
jle
fisubrl
push
xchg
stos
push
mov
in
cmpsl
shl
cwtl
aam
loopne
xor
jns
mov
scas
push
pusha
inc
or
mov
cmp
cmp
sahf
loopne
sbb
lcall
pop
sbb
dec
leave
add
dec
mov
dec
inc
adc
mov
pusha
lahf
in
scas
dec
pop
sub
into
dec
and
ljmp
ja
mov
inc
enter
mov
cmp
adc
sahf
fsubrs
sub
mov
loopne
scas
out
and
inc
lods
dec
jno
xor
out
outsl
mov
scas
popf
sbb
loopne
jmp
dec
clc
test
fnstsw
shlb
out
addr16
pop
mov
inc
scas
cmp
in
in
or
loopne
push
iret
lock
lods
iret
fdivr
jo
leave
cmp
cwtl
mov
mov
fs
into
fisttpl
mov
out
push
sarb
stos
xchg
xchg
stos
adc
out
shlb
xor
dec
or
hlt
fisttpll
ds
fisttpll
push
or
in
xor
sbb
loopne
enter
and
inc
jge
out
js
mov
enter
sahf
insl
mov
repz
out
cld
sub
fildl
je
les
pop
cmpsb
inc
outsl
xor
incl
fsubrl
pop
adc
jbe
mov
fs
pushf
mov
je
popa
dec
rcr
mov
pusha
rcr
lahf
cld
xor
in
pop
out
adc
mov
test
pop
mov
sar
mov
rclb
jno
mov
xor
sbb
add
sub
fnop
cmp
popf
sub
aas
push
push
cmpsb
jae
push
xchg
scas
je
in
and
and
rcrb
dec
enter
popa
cmp
sbb
pop
fxch
or
imul
fs
fnsave
cltd
nop
fwait
or
sbb
fimuls
sub
xor
push
das
cmp
push
out
sub
test
loopne
test
and
fdivrl
pushf
mov
sbb
enter
js
cltd
mov
mov
mov
lods
xor
or
notb
std
lret
roll
xor
mov
and
aam
cltd
loopne
sti
jns
push
imul
or
insb
lods
mov
cs
cltd
dec
jmp
iret
mov
add
lahf
inc
sahf
add
lea
dec
pusha
mov
sbb
lret
pop
sti
insb
pusha
ja
outsb
cmp
push
mov
jmp
test
mov
sub
cli
scas
sahf
push
mov
add
add
xor
mov
mov
cld
lret
mov
mov
pushf
mov
leave
movsl
pop
sti
outsb
push
rcrb
jg
data16
pop
insb
test
out
andb
stos
mov
into
call
jno
mov
iret
dec
test
lahf
inc
aas
icebp
shrb
push
cmpsl
out
gs
or
xlat
out
data16
gs
lret
sti
test
lods
inc
cmp
xchg
rcrb
jmp
test
mov
push
ss
inc
sahf
es
rclb
cltd
jg
sub
and
or
popf
pop
or
gs
lods
rclb
pop
testl
xchg
pop
jmp
insb
pop
inc
mov
je
addr16
loop
js
jnp
out
or
mov
xor
mov
addl
sbb
aam
iret
mov
xor
dec
xor
cmp
test
and
lods
cmpsl
xor
pushf
cmpsb
int3
mov
dec
nop
je
push
jbe
imul
xlat
dec
sbb
jo
sbbl
rolb
mov
ror
cmp
xchg
lret
bound
cmp
dec
jno
push
fildl
mov
jbe
pop
mov
andb
dec
sbb
adc
aad
pop
and
push
inc
lock
ds
mov
push
rcr
sahf
jmpw
cltd
sti
jae
scas
test
add
out
shrb
nop
dec
aam
loop
cld
mov
push
pusha
rclb
jg
pop
repz
filds
pop
xor
inc
dec
lods
orb
push
sbb
sub
add
vmovdqa
mov
test
loopne
jle
mov
scas
loopne
push
imul
cmpsb
xchg
ds
push
jnp
in
xchg
add
clc
fdivrp
out
jnp
sub
mov
clc
dec
push
ds
lods
loop
push
jne
jno
and
push
rorb
cmc
daa
jle
sub
fildll
cmp
mov
fmull
xchg
pusha
stc
jb
or
enter
or
lret
or
sub
int3
pop
notb
xor
or
cmp
inc
rclb
jnp
cmpsb
sbb
push
pushf
mov
jl
xor
dec
mov
stc
nop
cltd
or
xor
or
bound
insl
pop
xor
push
test
arpl
stos
pushf
pop
cltd
jle
scas
jo
inc
lret
stc
sbb
mov
inc
pop
or
pop
pop
xchg
repnz
lds
sti
scas
iret
inc
cs
cmp
aad
ror
add
test
insb
and
mov
jo
loop
mov
push
scas
sti
int3
dec
pop
fisttpll
fsts
sub
in
pop
ret
push
pushf
insb
lcall
mov
lret
rclb
cltd
push
outsb
pop
lea
or
aas
mov
loope
mov
pop
fwait
in
test
pop
xchg
mov
adc
popa
aas
or
xor
mov
pushl
inc
inc
out
aas
test
shlb
mov
out
out
test
mov
int3
push
fisubl
fcom
in
cwtl
cmp
jo
jmp
adc
insb
fidivrl
fwait
test
les
bound
in
dec
mov
sbb
aaa
cmc
cltd
xchg
aas
test
adc
mov
pop
mov
sti
mov
xor
movsl
shrb
out
pop
cmp
int
pusha
je
out
sti
mov
xor
add
call
fs
out
fldt
sub
xor
push
mov
mov
mov
outsb
insl
cmp
or
pop
lods
lock
cmp
js
push
jle
jnp
inc
jl
rclb
in
cmc
les
inc
sbb
ret
mov
das
cltd
sub
das
in
rcrl
push
lods
nop
mov
sahf
push
pushf
pop
mov
cmp
inc
pushf
add
fidivrl
or
push
sbb
movsl
dec
cltd
cmp
and
xchg
or
push
xor
shll
mov
loopne
cltd
sbb
xor
insb
stos
xlat
push
sub
sub
pop
iret
mov
sub
or
cmpsb
out
mov
push
shl
xchg
nop
adc
aad
aas
shlb
add
inc
stos
pop
add
and
jno
fbstp
ud1
popa
cli
push
xor
xchg
fwait
xlat
ficomps
push
xor
mov
rorb
nop
negl
movsb
push
pop
cmp
scas
and
pop
push
pop
push
lods
jmp
pusha
pop
frstor
arpl
add
pop
mov
add
in
push
dec
and
adc
adc
daa
mov
sbbl
fadd
iret
push
lods
cld
test
xchg
fiadds
imul
inc
pop
mov
sub
ja
jno
and
push
dec
fs
pushf
addb
and
mov
test
cmp
in
xchg
cmp
jmp
xor
rorb
lock
icebp
in
sbb
das
in
sarb
int3
pop
in
pop
les
dec
or
pop
sbb
add
sbb
jno
or
mov
jnp
push
add
dec
and
in
push
fdivl
cmpsl
and
add
ret
xchg
mov
addr16
inc
call
jecxz
jnp
dec
or
pop
mov
jg
mov
out
shlb
add
cs
and
pop
ljmp
mov
bound
gs
into
xchg
mov
ret
jne
mov
mov
ds
aad
loopne
mov
mov
cltd
scas
loopne
call
cld
iret
push
shll
pop
enter
outsl
andl
cltd
xor
lret
stos
imul
add
lea
out
lret
push
or
clts
pop
mov
subb
out
outsl
pop
push
lret
mov
loopne
dec
out
pop
sub
call
add
xlat
dec
aam
call
dec
insb
pop
xchg
loop
fcomps
ret
mov
movsl
cmp
je
cltd
cmp
rcrb
adc
push
sub
pop
out
jnp
sbb
dec
pop
mov
rolb
rcrb
cmp
add
add
jns
inc
xchg
icebp
fucom
mov
test
addr16
stos
lret
or
ss
push
lea
outsb
int3
sub
test
sub
arpl
fbld
shlb
mov
rcll
movaps
ljmp
les
pop
sbb
in
testl
pusha
jbe
test
mov
sbb
ret
lods
loopne
jae
push
push
sahf
aaa
pop
cwtl
rcr
mov
lret
sub
pop
popa
sub
add
movsb
test
out
pusha
nop
pop
and
push
mov
dec
stos
dec
pusha
and
jno
pop
les
sahf
pop
stos
and
push
xchg
or
in
cmc
mov
stos
fucomp
sbb
mov
xor
dec
lea
pop
mov
ja
push
push
scas
add
icebp
mov
les
push
or
add
push
cli
push
shrl
cld
xor
out
pop
aad
loope
cld
and
xor
xchg
lock
movsb
xor
dec
aas
add
mov
pop
inc
adc
xor
inc
and
test
stc
es
test
rcl
ficoms
cli
mov
cld
in
push
dec
push
sbb
jno
test
mov
pop
les
loop
inc
mov
cli
int3
insl
mov
das
inc
mov
mov
adc
aaa
ss
pop
jnp
jle
cmp
pusha
xlat
fldt
mov
jno
movsl
pop
inc
mov
mov
repnz
lcall
mov
test
ret
push
dec
jle
daa
std
outsl
xchg
scas
cmp
stos
mov
outsb
and
mov
sbb
jp
pop
inc
jmp
xchg
stos
int
decb
repnz
xor
mov
ret
call
les
rcrl
pusha
cli
jae
cmp
mov
inc
lahf
arpl
push
movsl
and
out
gs
and
ficoms
jne
add
popa
fiaddl
es
jle
les
mov
sub
lret
and
mov
xlat
mov
nop
bound
mov
adc
fidivrs
shl
mov
subl
and
inc
jb
pxor
jb
shr
dec
mov
mov
mov
scas
sar
cmpsl
xchg
sub
inc
aam
adc
repz
iret
push
out
add
outsb
xor
push
xchg
cmp
xchg
sub
imul
sti
sbb
jns
mov
jge
mov
stc
sbb
fwait
aas
mov
or
insl
gs
lds
fisttps
shl
sarb
xchg
jl
aas
repz
adc
das
sub
lcall
dec
lea
mov
lods
aaa
push
jbe
jo
adc
lahf
cmpsb
scas
jle
push
adc
sete
gs
shlb
je
call
xor
mov
je
xchg
sub
in
outsl
ja
dec
dec
stos
orl
pusha
es
addr16
ja
mov
lcall
sub
clc
shrb
push
mov
ffree
scas
pop
scas
test
pusha
and
pop
and
repnz
pop
push
dec
cmpsb
repz
ficomps
mov
lods
mov
je
inc
out
stos
push
mov
jbe
mov
into
push
das
das
in
sub
test
pusha
stos
mov
test
dec
lcall
test
call
movsb
dec
stos
fsubs
fsubrl
xchg
jge
push
das
popa
add
out
cmp
mov
cmp
in
push
and
in
jge
pop
lods
jmp
mov
fsubrl
jnp
or
dec
shlb
scas
or
mov
sub
iret
pusha
push
in
dec
sbb
cmp
cmpb
sbb
push
cmp
xchg
shlb
leave
outsb
jl
fwait
add
out
or
lds
andl
and
aaa
jle
xchg
mov
shrl
lods
push
push
mov
fldt
mov
xchg
pop
xchg
sar
push
imulb
ds
ja
and
pusha
nop
bound
fistl
inc
in
popf
fcmovbe
jae
inc
int
in
popa
jecxz
mov
cs
adc
or
std
and
cmp
fcoml
lahf
call
adc
out
xchg
adc
push
bound
dec
fwait
and
nop
xchg
add
test
sbb
ja
movsl
push
ljmp
mov
mov
sub
rcrb
inc
icebp
push
mov
lods
jmp
jnp
loopne
push
outsl
fs
lods
rcrb
cmpsb
xchg
pop
test
dec
das
in
es
idiv
mov
aaa
jns
popf
es
movsl
in
insb
lret
rorb
xor
ret
jnp
movsb
lock
test
sbb
sti
jne
sub
in
or
mov
mov
ret
sbb
fwait
ret
in
aad
dec
sbb
outsb
stos
pushf
cmp
testl
mov
pop
push
jo
adc
jg
fsubs
inc
mov
inc
popf
mov
or
fsubs
outsb
push
mov
aaa
jne
sub
stos
mov
rclb
push
mov
loopne
loop
and
imul
fs
mov
test
call
je
les
cmp
imul
out
insl
aad
adc
arpl
sub
iret
mov
adc
mov
jne
and
rcll
or
add
pusha
leave
mov
movsb
xchg
cmp
xchg
mov
inc
fwait
scas
cmp
jmp
mov
icebp
sbbb
cltd
lahf
fsubrs
out
fwait
mov
ficompl
pop
aam
shlb
ljmp
test
loop,pt
mov
cmp
lahf
and
in
cld
jno
lods
or
fs
call
test
cmpsb
xor
bound
jg
in
and
mov
enter
xor
pusha
fimuls
pushf
pop
lds
xchg
jg
cmp
fstpt
cmp
shrl
xchg
orb
jae
push
push
mov
in
ror
bound
cltd
scas
fwait
mov
into
out
mov
mov
mov
sahf
lods
push
xchg
jnp
mov
negb
fs
fsubrp
jecxz
jmp
jmp
and
scas
inc
add
push
call
push
bound
cli
icebp
mov
mov
mov
sbb
pop
push
sarb
addr16
sarb
adc
pop
fisttpll
jne
ret
xchg
fadds
pusha
sbb
sahf
mov
leave
jmp
outsl
inc
outsb
mov
cmpsb
push
mov
les
and
rcll
dec
les
xorb
sbb
jg
adc
sbb
shr
lock
icebp
outsb
lret
and
loop
and
scas
sub
mov
sub
cld
inc
leave
les
scas
lret
sahf
outsb
imul
inc
sub
outsb
or
push
gs
test
mov
int
mov
push
add
stos
aaa
outsb
fdivs
sub
sbb
mov
mov
cmp
rcl
mov
dec
js
lret
inc
icebp
mov
mov
insb
push
mov
push
dec
shrb
pop
test
pusha
fs
lods
mov
test
jl
cwtl
xor
test
sub
jmp
dec
nop
rorb
cs
inc
popa
dec
dec
jl
and
and
scas
push
es
loop
aaa
in
cltd
rclb
push
ret
jnp
or
push
into
stc
scas
mov
test
es
popa
cld
movsb
push
test
mov
loopne
outsl
cwtl
into
std
lods
fstpt
scas
mov
pop
xlat
cltd
aas
and
ja
mov
xchg
dec
cmp
adc
adc
jg
out
mov
outsl
sbb
rolb
pop
dec
jae
iret
les
sub
cmp
cmp
ret
or
pop
aad
int
lods
and
das
xor
daa
jne
jmp
mov
cmpsl
outsl
ds
stc
jg
fldt
add
mov
or
addr16
popa
push
faddl
loopne
xor
sub
lods
cwtl
or
aam
add
sub
sub
sub
push
cld
mov
ret
mov
mov
xor
popa
xchg
dec
inc
push
and
xchg
pop
pop
daa
and
cmp
outsb
arpl
ja
mov
xor
loope
test
scas
mov
test
aas
fs
test
fisttpl
ja
push
xchg
aad
insl
mov
or
mov
pop
dec
js
pusha
pop
xor
push
scas
and
icebp
dec
or
in
bound
cmc
mov
sbb
add
lret
fbld
daa
and
es
test
jle
iret
cmp
fs
cmp
add
jl
xchg
icebp
lods
in
push
and
sahf
sbbl
dec
mov
loopne
insl
pusha
xor
and
push
and
cmp
xor
pop
pusha
add
in
lds
sbb
mov
pop
jnp
in
pushf
jg
xchg
shrl
in
loopne
inc
imul
je
es
movl
call
lea
es
inc
jno
outsl
fbstp
cmp
mov
inc
ljmp
pusha
daa
mov
add
fldenv
add
icebp
jp
fnsave
or
sub
loopne
int
scas
add
out
mov
mov
iret
popf
stos
aas
push
push
mov
bound
lahf
loope
jmp
loopne
test
loope,pt
inc
outsl
and
and
dec
push
mov
ror
sub
fdivrs
mov
push
jge
push
xor
xor
bound
das
and
lcall
sbb
inc
scas
fwait
aaa
out
imul
out
push
pop
repz
repnz
in
inc
jne
outsb
and
jle
or
lods
pushf
enter
in
mov
in
cs
mov
xor
les
loopne
test
lcall
cmp
aas
mov
pop
dec
sbb
daa
cmp
imul
int3
and
loopne
gs
js
ret
adc
clc
xor
cld
mov
out
nop
mov
loopne
jbe
cmpsb
call
fists
push
outsb
cltd
addr16
dec
lods
xlat
mov
xchg
fmull
addb
cld
rcrl
push
cmp
arpl
ja
xchg
sahf
pusha
mov
lret
outsl
mov
push
test
sahf
lods
cs
test
pop
es
and
or
mov
lret
push
dec
mov
push
insb
cmpsb
repnz
or
in
push
pop
mov
out
imul
sub
out
sbb
adc
dec
clc
and
shl
mov
dec
rcl
or
pop
cld
mov
and
jmp
dec
or
add
cmp
mov
fadds
adc
lock
iret
loop
negb
lahf
ljmp
mov
hlt
or
and
mov
pop
pop
mov
or
testb
lcall
rorb
ret
jecxz
jnp
in
pop
mov
push
mov
fwait
cmp
addl
adc
or
cld
dec
in
lock
stos
mov
loope
pusha
pop
loop
loopne
in
int3
pop
out
mov
xor
movsb
out
mov
push
movsb
mov
pop
cwtl
push
sti
pop
inc
pop
sbb
test
push
jl
ret
clc
cwtl
cmpsb
outsl
loopne
sub
fwait
push
mov
leave
inc
out
in
pop
icebp
pushf
movsb
and
ds
sti
mov
ja
out
out
cmp
sbb
mov
add
jo
fcoms
mov
test
or
lds
pop
xor
out
ret
cltd
sti
push
adc
fbld
cmpsb
add
inc
mov
add
lret
and
mov
stos
out
sbb
and
or
dec
pusha
pop
imul
popa
loopne
in
jmp
xor
push
outsl
xchg
in
outsl
and
xor
repz
add
sbb
pop
dec
out
ja
aas
inc
fstl
rorb
rorb
jno
test
jnp
xlat
sub
push
xor
bound
iret
gs
call
shl
push
or
out
xor
fwait
push
int3
scas
jnp
movsb
mov
mov
adc
adc
rcrl
lret
shlb
fs
repnz
and
enter
lods
add
pop
cmp
cmp
pop
inc
out
push
jl
iret
fmul
call
mov
es
jae
pop
incb
fcomps
jns
pushf
add
out
sub
jg
pop
stos
mov
push
loopne
and
ja
movl
push
add
jg
popf
xchg
mov
pop
movsb
out
and
cmp
mov
or
xor
or
xor
jno
stc
jae
outsl
hlt
stos
jg
std
mov
sbb
fst
jno
mov
out
mov
mov
out
loopne
add
mov
jo
xchg
pusha
pushf
pusha
shlb
or
fldt
loop
negl
ljmp
lahf
cmp
push
jnp
out
dec
cmpb
and
out
je
test
mov
scas
test
cmp
iret
and
int3
dec
popf
aaa
sub
sbb
jle
je
cmp
in
insb
push
enter
mov
lret
test
outsl
bound
dec
aas
push
dec
dec
jbe
mov
xlat
scas
loopne
mov
mov
mov
jecxz
bound
bound
bound
les
stos
dec
xchg
bound
sub
pusha
add
movsb
out
insl
adc
rorb
insb
scas
gs
xor
xchg
inc
movsb
push
jp
inc
scas
in
push
lret
int
cltd
js
cltd
out
mov
jo
fs
bound
outsb
jno
cmp
bound
scas
rclb
add
mov
mov
jecxz
test
or
filds
sbb
je
fucomp
add
rclb
fwait
test
test
push
xchg
movsb
adc
fnstsw
shrl
lods
ror
pusha
ror
lock
fsubr
bound
rclb
mov
fcomps
bound
iret
mov
fdivrs
bound
inc
fmuls
inc
movb
bound
inc
fsubrs
mov
lret
fmuls
dec
sahf
movsl
mov
movsl
cmpsb
int
out
bound
mov
cs
lods
inc
fisubs
movsl
cmpsb
das
bound
mov
lods
in
jmp
les
inc
in
adc
cwtl
in
and
cwtl
pushf
xor
sub
inc
bound
jg
inc
pop
sub
or
fsubs
inc
stc
and
in
or
xchg
lcall
out
sbb
outsl
pop
bound
adc
or
in
call
test
mov
or
enter
loopne
cltd
fmuls
out
or
add
mov
xchg
insb
loopne
xor
imul
or
or
dec
loopne
dec
out
out
jecxz
push
fimull
popf
loopne
lret
loopne
cltd
js
dec
loopne
das
addl
loopne
loop
xor
mov
mov
daa
or
loopne,pn
dec
pusha
mov
ljmp
movsb
shrb
out
stos
movsl
in
push
stos
cmpsb
loopne
or
dec
into
jecxz
pop
or
mov
mov
mov
addr16
fucom
pushf
testl
aad
xchg
aas
xor
jne
jle
stc
pop
orl
jecxz
xor
push
int3
sub
outsl
mov
fists
sbb
stos
ja
lds
mov
cmc
imul
out
je
out
jp
arpl
sub
or
sub
mov
jle
jecxz
ret
mov
mov
loopne
jnp
pusha
jl
pusha
enter
cmpsl
call
and
movsl
pushf
out
inc
repnz
in
loop
ret
notb
popa
ret
aaa
scas
add
add
xor
mov
jae
sub
outsb
test
inc
lcall
mov
cltd
adc
cmp
int
ja
lock
leave
pusha
imul
mov
js
shrl
test
xor
out
movsl
xor
fidivrs
cmp
rcrl
cmp
fdivs
bound
xor
jne
imul
adc
add
lock
aam
fwait
lret
ss
stc
int3
hlt
cmp
mov
mov
push
inc
fs
pop
xchg
pop
mov
out
movsl
push
cmpsl
cltd
mov
fsubrs
or
enter
and
arpl
lds
ds
or
lea
push
push
sub
jbe
push
js
sbb
inc
xlat
lahf
cwtl
bound
fildll
stos
sub
sub
push
push
stos
rclb
in
mov
out
std
fwait
mov
mov
fsubl
fcomps
add
or
mov
es
lods
in
lods
adc
imul
mov
icebp
push
adc
sahf
cmp
fcomi
pop
lods
mov
movsl
in
in
hlt
ja
push
xchg
add
and
add
jp
cmp
fwait
movsb
fildl
xchg
jns
loope
outsb
and
cmp
ret
inc
adc
xor
sbb
imul
inc
push
std
enter
lret
mov
sbb
aas
jbe
aaa
scas
sbb
cmp
aaa
inc
cmp
jbe
pop
in
jl
movsb
pusha
sub
jl
movsb
repz
pavgb
jo
cmp
imul
push
jmp
insl
or
mov
nop
xor
fidivs
jle
fiadds
and
icebp
sub
cld
xorl
sarl
into
sub
xchg
scas
jmp
lret
fs
lods
push
icebp
out
test
inc
es
fistpll
stos
sbb
pop
scas
fs
xor
xchg
push
xor
ret
mov
sbb
inc
cmovno
add
jno
jmp
out
shlb
fsubrl
or
dec
jno
stc
mov
stc
xor
pop
scas
fwait
testb
fildll
sbb
cmc
shll
mov
and
mov
stos
test
imul
shlb
xor
lock
leave
imul
jle
int3
dec
pop
xchg
pop
outsl
data16
xchg
dec
xor
int3
or
gs
sbb
xchg
jne
cmc
mov
cmc
fcompl
jns
lods
out
jl
ds
rorl
dec
repnz
and
xchg
cs
imul
sub
fcompl
xor
mov
sbb
popf
shrb
pop
out
out
lea
out
imul
cmp
add
push
add
xchg
pop
adc
aas
mov
push
icebp
xlat
loope
negb
arpl
out
mov
pop
dec
pop
sti
mov
inc
lods
mov
xor
ret
jecxz
shrl
lret
sub
sbb
sbb
fcompl
pushl
fimuls
mov
mov
xchg
outsb
int3
loop
aam
gs
popa
pop
inc
das
xor
push
sub
mov
xor
fwait
add
es
mov
das
iret
test
sbb
pop
ds
pop
scas
dec
mov
cwtl
aas
push
fdivrs
repz
out
push
pushf
out
icebp
leave
call
or
rcrb
imul
pop
push
or
popf
aam
out
mov
push
les
fdivs
pop
cmp
xchg
aas
out
fdivrl
xor
in
push
int
stc
add
into
int3
ljmp
fs
xor
sbb
ret
xchg
adc
inc
nop
dec
xchg
int
and
loope
cld
sbb
int
sub
into
ljmp
xchg
add
imul
mov
je
fdivs
sub
cmc
mov
mov
pusha
iret
sub
push
sub
add
into
sub
pop
shrl
enter
loopne
jecxz
loopne
inc
bound
andl
jg
mov
mov
clc
test
outsl
lods
imul
or
mov
fs
shrb
jnp
or
in
stc
iret
push
fwait
bound
adc
scas
ret
iret
mov
xor
sbb
out
push
dec
jbe
cltd
pop
movsb
jnp
jmp
stos
call
loopne
inc
dec
cltd
and
mov
notb
jge
push
outsb
push
jecxz
es
xor
dec
arpl
loopne
dec
sub
loopne
xchg
addr16
sub
imul
pop
xlat
sub
frstpm(287
leave
repz
push
icebp
in
addr16
test
and
jae
lcall
imul
bound
fists
cmp
sbbb
jle
lea
push
pop
leave
fidivrs
mov
mov
fsub
out
dec
shrl
frstor
xchg
iret
pushf
int
add
dec
pusha
jns
inc
add
jle
or
dec
inc
or
mov
loop
fbstp
cmp
xor
lds
mov
cwtl
icebp
mov
xor
imul
ror
add
mov
cmp
inc
popf
jle
sub
int3
mov
es
leave
scas
xchg
stos
popa
iret
mov
sub
lds
lcall
outsl
insl
loopne
ror
cs
in
mov
jg
lret
cmp
ljmp
aas
repz
rorb
jne
pop
ja
loop
adc
fmul
ja
out
dec
stos
loopne
iret
push
out
and
push
push
dec
nop
daa
scas
and
mov
mov
sti
dec
clc
push
cmp
or
das
and
and
fistpll
adc
lods
out
mov
inc
and
clc
jg
in
inc
mov
into
stos
subb
mov
jle
dec
ror
fsubrl
iret
push
bound
mov
sahf
pop
sbb
dec
lods
xchg
jl
mov
inc
lock
nop
push
sahf
mov
in
push
cwtl
or
xor
loopne
mov
pusha
and
xlat
xor
hlt
mov
pop
paddb
in
mov
jnp
rorl
or
int3
sub
aad
pop
movsl
in
int
mov
scas
jo
out
mov
out
pop
in
mov
cs
fwait
je
jno
pop
or
mov
stos
insb
fistl
dec
fsub
mov
fldt
imul
imul
mov
popa
jmp
icebp
xor
mov
or
sbbb
xchg
mov
pop
push
loopne
movsb
jecxz
loop
and
pop
dec
in
roll
push
das
outsb
and
punpckhdq
xchg
pop
rol
arpl
xchg
and
mov
mov
push
bound
lret
dec
mov
mov
jle
test
jo
out
xor
pusha
ret
push
ss
or
dec
pushf
scas
insl
loop
pop
rolb
andb
fdivs
ror
fbld
dec
pop
shr
fcmovnbe
int
mov
jnp
roll
sti
cltd
sbb
movsl
cmp
call
cltd
mov
jmp
cmc
fsubrl
mov
dec
sbb
jnp
jmp
scas
mov
jns
inc
adc
nop
inc
mov
push
pop
or
jl
jno
nop
jmp
push
dec
outsl
arpl
xor
push
out
out
dec
cwtl
out
push
int
stc
rcrb
and
xor
leave
jne
out
std
addb
cltd
fimuls
and
cwtl
pop
push
fmulp
cltd
dec
bound
inc
adc
mov
aad
jmp
fisttpl
push
call
mov
iret
outsl
in
jnp
popf
jle
lock
pop
mov
add
add
jecxz
les
inc
lock
and
adc
jmp
xchg
xchg
in
jno
data16
push
test
repnz
xchg
iret
xchg
popa
leave
fistl
cmp
pop
jl
or
dec
in
out
lock
push
and
fucomi
xchg
loopne
xlat
fisubl
jle
or
loop
cmpl
mov
gs
cmp
cmc
call
into
int3
cmc
xchg
pop
xor
mov
arpl
add
pop
cmp
mov
sbb
mov
out
jge
and
jmp
shlb
cmp
and
jmp
adc
inc
inc
pop
insb
test
fwait
ss
repz
pop
jl
into
insl
call
or
shlb
test
xchg
pop
test
mov
jnp
mov
sbb
sub
int
xchg
fwait
ror
clc
or
rol
pop
inc
popf
fisubs
mov
dec
shll
outsb
dec
sub
mov
ffreep
inc
mov
xor
dec
pop
movzwl
xor
ljmp
pop
adc
popa
sbb
mov
pop
in
and
in
push
int
or
aam
scas
loopne
or
fwait
jge
fwait
sbb
dec
pop
push
fstpl
push
in
mov
imul
test
adc
lds
out
sub
cmpw
pop
mov
mov
xchg
xchg
xchg
in
xchg
xchg
in
lock
mov
add
jle,pt
popa
js
pop
out
int3
lds
outsb
push
jl
repnz
lahf
xor
dec
add
mov
outsl
mov
test
inc
es
imul
xor
lret
scas
inc
bound
adc
add
bound
jnp
cwtl
inc
add
test
ljmp
mov
scas
hlt
ljmp
stc
inc
iret
arpl
adc
mov
outsl
xchg
and
or
or
xchg
lret
and
cltd
pusha
in
std
push
jl
mov
jg
and
lods
inc
mov
test
popa
cmc
pop
cltd
dec
jecxz
lods
aam
inc
push
test
jg
xchg
iret
arpl
mov
or
cltd
out
sub
add
stc
pop
push
mov
daa
lret
push
mov
mov
push
sub
scas
xor
outsl
in
adc
fwait
xor
jno
mov
cltd
iret
xchg
push
or
cmpsl
mov
mov
pushf
push
add
mov
sub
xlat
xchg
push
mov
loopne
inc
pushf
les
cmp
pop
insb
jb
push
xlat
mov
lahf
xchg
xchg
add
sub
pop
popa
lcall
push
call
inc
sahf
mov
push
push
mov
test
jl
cltd
and
adc
pop
pop
inc
jnp
pop
sbbl
scas
sbb
cmp
fstpt
shlb
dec
jl
push
add
mov
ja
ffreep
xchg
aam
push
push
jl
fdivrp
das
pusha
or
stos
mov
and
jae
fwait
pop
or
inc
cltd
inc
lods
push
out
fstpl
push
in
popa
hlt
aad
test
inc
sub
enter
or
jle
leave
sub
stos
popf
inc
testb
scas
cmp
out
scas
ror
jo
loop
mov
sub
fwait
mov
add
outsl
mov
mov
sub
lds
fmul
cmp
lods
add
pushf
push
scas
loopne
gs
push
push
sbb
sbb
mov
push
xchg
mov
pop
jle
and
rorl
inc
xor
mov
xor
test
ret
jbe
movsb
push
popw
jo
push
ret
inc
mov
cmp
ljmp
jg
daa
bound
cmpsl
sub
out
aad
lds
and
jns
nop
pop
xchg
push
iret
or
adc
out
pop
mov
sub
sbb
sbb
cli
shrb
dec
enter
shlb
fwait
dec
cli
mov
popf
sti
xor
sub
push
and
pop
jnp
cmp
or
mov
lret
leave
pop
faddl
xchg
adc
loopne
movsb
js
lods
ss
pusha
mov
in
ret
pusha
ljmp
outsb
and
stc
int
scas
jecxz
inc
or
mov
sbb
outsb
popa
enter
adc
ret
mov
test
mov
nop
orl
ret
adc
ja
adc
adc
inc
gs
out
inc
filds
sarb
test
jno
ffreep
sbb
adc
ljmp
dec
jne
mov
xchg
dec
loopne
add
cmpsl
in
adc
mov
dec
insl
jecxz
lods
scas
stos
push
icebp
mov
sub
sbb
sti
sub
bound
sbb
lcall
xchg
and
int3
iret
pop
stos
fldt
pusha
loop
mov
in
cli
fs
cmpsb
dec
addr16
or
sbb
das
mov
scas
shrb
push
ror
dec
xchg
nop
outsl
out
das
or
fisttpl
outsb
bound
xchg
push
stos
mov
scas
cmp
adc
outsb
scas
pop
ficomps
mov
sbb
out
movsb
imul
push
movsb
add
cmp
sub
adc
fwait
decl
lcall
out
lret
adc
mov
inc
iret
ljmp
lods
mov
sub
iret
scas
cld
out
outsb
mov
mov
xchg
fucomp
aad
sub
les
fsubrl
xchg
mov
or
add
sahf
mov
mov
lds
jnp
out
cltd
or
push
and
jle
lds
jns
jecxz
sub
fldt
aam
fsts
loop
pop
xchg
lods
jecxz
sbb
outsl
and
pop
sahf
adc
cmp
rclb
xchg
xchg
cmp
mov
fwait
xchg
xchg
fistpl
sahf
jnp
lcall
aaa
sti
cmp
sbb
fwait
das
jg
cmp
out
jo
sbb
outsb
or
outsl
xor
insb
loop
sbb
das
loopne
cmpsb
out
out
test
cld
adc
stc
cmc
mov
stos
lret
rcl
inc
orb
dec
sti
mov
lds
and
frstors
out
je
or
addr16
fucomi
adc
cmp
lahf
aam
xor
into
xor
je
push
leave
or
shlb
idivb
sbb
les
out
sub
movsb
adc
icebp
mov
mov
leave
lods
sar
xchg
xchg
mov
bound
adc
pusha
sub
mov
lods
imul
adc
call
mov
lahf
outsl
stc
inc
push
xchg
sub
lcall
arpl
movsb
int3
sbb
dec
loopne
pop
cmc
add
movsb
or
xchg
imul
out
sub
xchg
stos
iret
jmp
into
pop
insl
rorb
mov
leave
stos
cmp
neg
lahf
sahf
jns
movsl
fucomi
iret
cmp
rcrb
rcrb
mov
xor
mov
sub
mov
inc
jp
ret
mov
hlt
fsubrl
insb
pop
aas
mov
or
lret
push
shlb
ds
int
cmpsb
jnp
push
mov
mov
sbbb
xor
adc
je
jmp
sbb
loopne
pusha
test
add
pop
mov
in
jae
or
push
mov
movsb
adc
bswap
dec
lahf
iret
scas
scas
fsubr
xchg
cmpsb
dec
pop
in
das
fwait
js
push
in
ret
icebp
push
xorb
andl
test
xor
iret
mov
repnz
jmp
xor
and
aaa
lock
mov
subl
out
pop
adc
and
stos
lret
mov
cmpsb
dec
sub
loopne
bound
adc
lock
xor
pop
pop
outsl
cmp
in
movsl
iret
mov
add
stos
mov
incl
inc
jne
lock
sbbl
sub
mov
dec
lods
xchg
repnz
jo
cmpsl
lods
movsl
sti
push
bound
imul
test
xor
into
insb
in
dec
shlb
test
es
pop
lds
dec
cmc
lret
clc
es
sub
jg
das
cmp
xchg
dec
mov
sbb
sti
dec
and
rorl
fs
outsl
xlat
lock
sahf
sbb
cmc
jp
and
xlat
das
pop
popa
cli
mov
fisttps
mov
movsb
insl
stos
in
jge
sbb
stos
leave
cwtl
mov
cltd
xlat
add
pop
inc
xchg
inc
pop
enter
fcmovnb
pusha
jnp
pop
fimuls
out
sbb
aaa
adc
jbe
sub
das
repz
sub
sbb
bound
sahf
push
sar
sub
leave
or
xchg
adc
aaa
xor
mov
mov
jp
lock
and
je
scas
and
fs
sub
popl
out
addr16
outsl
dec
jnp
mov
fldcw
stos
ljmp
js
leave
inc
outsl
stos
js
imul
or
mov
push
mov
xchg
lods
push
out
outsb
bound
mov
jp
dec
aad
out
int
dec
fildll
push
pusha
dec
adc
push
cli
xchg
pop
push
das
cmp
into
mov
iret
lret
repz
sbb
imul
inc
popf
jmp
lea
cmpsb
out
dec
ss
cld
clc
sub
imul
cmp
jmp
lret
sub
mov
fildll
je
jo
push
mov
bound
mov
out
xchg
xor
lret
pop
mov
sbb
hlt
dec
test
lcall
pushf
sub
insl
movsl
insb
add
cli
bound
sbb
mov
cmpsl
inc
test
popf
icebp
pusha
jg
inc
add
jecxz
stos
and
arpl
jno
std
pop
outsl
xor
leave
cmp
add
addr16
movb
mov
adc
stos
mov
and
scas
bound
cmp
jns
sbb
xchg
shll
lods
mov
lret
xchg
enter
jno
lock
les
pushf
fisubrs
inc
hlt
sti
popa
decb
fwait
dec
jle
mov
xor
push
cli
xor
mov
xor
fwait
jg
in
xor
push
inc
stos
shlb
sub
push
inc
ljmp
test
jmp
add
jl
rolb
bound
icebp
clts
mov
lods
ljmp
mov
icebp
testb
mov
lret
ja
bound
cltd
mov
lret
bound
xchg
adc
mov
sbb
push
dec
inc
cmp
mov
fsubrs
das
push
aam
mov
dec
push
dec
or
fbld
xlat
repnz
mov
enter
pusha
fldt
pop
cmpsb
es
cmpsl
cmpsl
jg
jo
test
imul
je
int3
icebp
add
push
mov
loop
xchg
sahf
or
into
add
fs
xchg
shll
add
or
inc
outsl
sbb
test
mov
cs
mov
mov
popf
mov
xchg
into
outsl
ja
adc
outsb
fbld
divb
pop
dec
shlb
dec
icebp
leave
or
je
xor
ret
nop
mov
scas
outsb
aam
es
aam
lret
andl
mov
jge
push
sti
push
lods
and
cs
insb
lahf
mov
sarb
lods
sub
inc
inc
insb
gs
xor
in
sub
leave
les
xor
pushf
in
out
xchg
jmp
sub
xor
xchg
mov
subl
out
das
sbb
ds
jbe
lock
cmp
sub
fdivrs
mov
mov
sub
rorb
xor
mov
popa
cmpsl
pop
xor
ljmp
fistpll
dec
inc
mov
test
and
add
aas
mov
in
mov
mov
pop
and
fbld
ret
pushf
add
ret
out
imul
in
sbb
xchg
pop
mov
mov
das
test
pop
lock
cmp
sbb
mov
pushf
lods
fwait
dec
sub
sbb
push
ficoms
subb
adc
shll
push
mov
adc
cmp
sub
cmc
mov
push
int3
icebp
into
cwtl
ror
fimuls
test
push
rorb
fcompl
push
hlt
sbb
out
cs
in
clc
insl
pusha
xor
cmc
xchg
xor
push
stos
sub
push
out
mov
dec
push
mov
bound
out
jno
inc
dec
sbb
pop
fildll
push
pop
mov
mov
fwait
lds
scas
mov
cwtl
cs
leave
dec
aad
xchg
cs
mov
push
int
pusha
sub
push
and
add
je
mov
push
jb
lods
js
adc
add
lret
xor
shrb
in
in
notb
ds
lods
inc
fsubrl
jecxz
lods
sbb
and
pushf
inc
scas
push
stos
iret
xor
pop
dec
pusha
lods
shrb
dec
data16
fwait
xchg
je
arpl
lods
out
lea
pop
xchg
jnp
push
mov
out
mov
fstpt
cmp
add
push
inc
sti
dec
dec
jmp
sub
or
test
out
add
jae
or
fstp
pop
out
sub
mov
sbb
aaa
test
repnz
mov
pusha
lods
enter
cmp
aaa
add
cmpsb
pushf
int3
push
xor
adc
in
jns
pushf
push
imul
cs
xor
xchg
movsb
stos
xor
outsl
leave
add
lock
test
dec
test
xor
push
lret
test
pop
test
jns
cmpsb
xchg
or
shlb
outsl
rcl
es
mov
inc
or
mov
outsl
shrb
movsb
les
mov
cmp
sahf
movb
push
inc
fidivrl
sti
sahf
pop
xchg
mov
bound
addr16
jmp
fistpl
xchg
xchg
pop
in
adc
sbb
in
in
in
inc
xchg
scas
adc
push
mov
out
push
and
xor
dec
imul
mov
lret
sbb
lock
mov
fidivrs
push
sarb
das
and
movsl
xchg
cmp
dec
sbb
dec
sahf
jle
loopne
jge
xchg
mov
cmp
push
rolb
iret
push
or
cs
shlb
add
jae
push
imul
movl
movsb
inc
lods
push
cltd
sti
ret
dec
push
out
imul
cmpsl
popa
fs
inc
push
outsb
fisttps
xchg
pop
inc
mov
push
lods
das
mov
xchg
sbb
jbe
xchg
dec
cs
pop
bound
push
repnz
mov
sbb
lock
fdiv
rcl
lcall
mov
insb
xor
fbld
dec
mov
mov
into
out
pop
pop
mov
push
xchg
test
loopne
int
in
shll
outsb
fs
jb
pushf
in
mov
insb
popa
cmp
mov
imul
test
ss
lret
int
xchg
into
cmp
scas
fistpl
stos
mov
xor
icebp
jb
push
sub
jno
bound
xchg
dec
pusha
fsubrs
lds
pop
push
jns
mov
xor
test
lcall
sbb
lds
pop
subb
into
sti
inc
pushf
fs
push
pop
shrd
cmp
scas
das
insl
xchg
mov
in
jle
mov
xlat
ljmp
and
stc
push
jbe
fstps
aam
fstpt
mov
out
fildll
jmp
inc
popf
sbb
test
sbbl
outsb
add
jo
and
mov
xchg
pop
xchg
ds
adc
sbb
dec
adc
imul
add
aaa
sub
or
sbb
push
ret
notl
xor
push
cmp
fwait
imul
rolb
push
stos
cmp
dec
pop
test
out
pop
mov
or
adc
fiadds
jb
or
mov
lds
pop
sub
pusha
push
sbb
pusha
cmpsl
mov
imul
and
pop
mov
jp
inc
mov
or
lahf
xor
pop
cltd
sbb
scas
push
int
in
jae
xor
or
cmp
pushf
stos
std
push
pushf
and
das
rcrb
test
inc
out
out
cmc
cwtl
out
inc
movsb
push
ficoms
sub
push
test
ljmp
push
bound
rcrl
stos
cmp
adc
imul
outsb
repnz
ret
stc
aam
ljmp
mov
sub
out
add
sbb
loop
sub
mov
mov
mov
scas
pop
iret
les
sub
iret
pop
insb
fsubr
pop
adc
push
rorb
mov
call
dec
sbb
dec
out
adc
mov
lret
movsb
dec
sbb
add
mov
out
jno
scas
or
fucomip
mov
add
and
outsl
fbld
test
mov
int3
xchg
mov
arpl
shr
xor
gs
cmpsl
int
dec
cmp
xchg
dec
sub
adc
in
lahf
sbb
mov
sub
int
lret
jecxz
lret
cs
stos
sub
fstpt
stos
sbb
hlt
add
out
dec
dec
cld
aam
test
mov
shrd
mov
lret
in
pop
add
in
sub
pop
add
sbb
addr16
stos
jl
in
out
cmp
jbe
fisttps
xor
leave
push
sbb
cmp
xchg
lret
js
sbb
lock
mov
movsb
test
rclb
out
cmpsl
inc
fstpl
dec
pop
movsb
xchg
into
push
cmp
out
push
push
pop
pop
xchg
fcmovnu
cs
and
mov
pop
stos
fsub
push
jmp
sbb
pop
loopne
mov
shr
jae
arpl
imul
mov
jmp
xlat
add
or
in
mov
mov
mov
scas
sbb
fildll
enter
xor
jp
ljmp
mov
jg
out
xor
dec
add
mov
movsl
sub
sub
lahf
push
pop
negl
out
insb
inc
adc
xor
xor
bound
push
fwait
jecxz
jmp
insl
mov
mov
outsb
iret
xchg
fsubr
int3
clc
es
out
js
xchg
insl
xchg
inc
rcpps
out
jnp
push
inc
xchg
rcl
push
mov
je
cmp
lret
lds
imul
jle
mov
pop
push
lods
xlat
in
rsqrtps
pusha
sbb
and
aaa
cld
fwait
sti
icebp
lcall
mov
mov
cmp
outsb
test
adc
gs
arpl
ret
mov
lret
inc
into
js
test
dec
push
dec
jl
fmull
xor
ret
push
lret
decb
shlb
jecxz
in
mov
repnz
mov
push
pop
outsb
sbb
inc
mov
add
dec
pop
xchg
xchg
xchg
in
je
sbb
mov
mov
xor
or
or
in
mov
stos
jno
fdivl
mov
jae
shlb
dec
in
xor
cmpsb
repnz
stos
lods
bound
fldz
iret
outsb
add
xor
xchg
jae
push
mov
push
loopne
cmp
jmp
fsubrl
test
and
fisubl
push
daa
mov
add
pop
lret
jb
fsubl
jl
fwait
insl
xchg
mov
movb
cmp
cmp
add
scas
imul
cs
incb
insb
icebp
mov
sub
fistl
cmp
sub
addr16
push
shl
and
test
adc
and
adc
aaa
xchg
lret
jmp
dec
fs
sbb
fdivl
cmc
cmp
push
push
cld
pop
mov
mov
xor
jnp
arpl
mov
mov
mov
int3
adc
push
push
push
out
pop
xor
pushf
lret
into
inc
iret
jns
push
loope
fstpl
xchg
pop
fwait
inc
loopne
cmp
inc
jb
outsb
mov
imul
mov
adc
popa
bound
in
test
imul
xchg
add
loopne
out
lock
insl
jnp
push
mov
cld
in
push
xchg
and
in
cmp
mov
fdivrl
hlt
rcl
lret
js
lods
push
movsb
loopne
lahf
cmc
loop
pop
aam
popa
outsb
dec
or
jae
xor
shlb
movsb
out
dec
adc
jne
xchg
movd
xchg
or
enter
jnp
out
loop
xor
add
aad
mulb
mov
pop
xchg
mov
and
dec
scas
jno
fcoml
bound
out
sub
dec
pop
adc
iret
cmp
cmp
inc
push
test
inc
arpl
or
mov
in
fadds
mov
out
or
cmp
pop
push
inc
subl
xlat
jecxz
lods
outsl
xchg
call
add
sbb
xor
std
adc
jo
shlb
sub
jns
xchg
addl
call
rcrb
and
xchg
xchg
mov
insb
bound
and
adc
adc
mov
leave
and
ret
adc
aas
rolb
and
mov
xor
leave
test
xor
shll
xchg
lds
xchg
sbb
pop
push
out
cmp
sub
pop
lods
pusha
arpl
cmp
outsl
cs
mov
mov
shll
fs
mov
pop
xor
add
xchg
pop
adc
xchg
jg
adc
insb
push
sub
adcl
add
das
jg
push
movsb
pop
sbb
lods
fstpt
in
sbb
insb
rcrb
clc
pop
les
mov
and
les
and
test
xchg
insl
cmc
mov
pop
xor
pop
pusha
rcrl
sti
push
or
sahf
dec
push
test
out
inc
pop
test
inc
lods
mov
incb
jns
and
ja
imul
aas
ret
or
ds
adc
push
sahf
xchg
lret
sbb
divb
cs
imul
jnp
jmp
pop
or
adcl
test
jmp
cli
dec
fbld
mov
dec
pop
pop
dec
stc
fidivrs
sbb
mov
mov
add
fs
and
cmovb
xchg
sub
scas
lds
mov
dec
imul
stc
jle
insb
jge
add
add
cmp
lods
dec
xor
ljmp
cmp
xchg
inc
push
mov
cmp
out
scas
push
loopne
rclb
mov
push
out
cmp
push
rorb
and
ja
daa
mov
aad
mov
arpl
add
and
ja
in
xor
out
scas
stos
adc
cmpsb
out
stos
adc
pop
mov
mov
imulb
daa
or
shrb
imul
or
cwtl
or
dec
xchg
dec
mov
push
sub
test
sbb
mov
adc
push
inc
lods
iret
mov
mov
sub
popf
pop
icebp
fistps
jg
or
inc
cltd
xor
lahf
jnp
adc
mov
push
roll
call
mov
sbb
sbb
in
or
add
xlat
out
xlat
jo
aam
mov
cmp
lds
dec
in
add
movsb
stc
jno
lret
ljmp
jecxz
sub
add
ror
inc
pop
cmp
push
popf
out
jae
test
mov
enter
paddsb
imul
adc
pop
sub
adc
fisttpl
es
mov
push
call
int
pop
outsb
lret
sti
sbb
stc
ret
push
cltd
push
adc
and
cld
repz
aam
cld
inc
adc
insl
insl
push
add
shrb
xchg
mov
in
mov
shlb
adc
inc
pop
and
pop
sbb
insl
fisubs
add
mov
xor
mov
sbb
outsb
xchg
dec
adcb
xor
jge
nop
adc
and
dec
pop
addr16
addr16
out
pop
xchg
sbb
cli
loop
fisubl
mov
fcmovnb
adc
pusha
xchg
andb
pop
hlt
std
loop
test
inc
bound
sahf
cld
icebp
mov
mov
icebp
push
shrl
xchg
mov
push
mov
sbb
dec
push
in
mov
outsb
cmp
scas
cmpsl
ja
pusha
in
sbb
inc
aad
mov
fs
sbb
pop
loopne
and
push
cmp
adcl
addr16
mov
sti
adc
divps
sub
lret
nop
insl
ja
aad
sti
pop
jnp
js
adc
xor
pcmpeqd
in
jmp
lods
icebp
jns
loopne
push
fstps
jmp
int3
adc
cltd
xor
mov
dec
jle
daa
test
fildll
add
jo
aas
fildll
and
fucomp
out
xorl
rcll
and
sub
testl
push
leave
jge
shlb
xchg
aas
test
sub
mov
xchg
xchg
mov
push
in
enter
bound
ret
mov
out
int3
out
insb
repz
xchg
push
ja
cmp
aas
push
inc
lods
lea
sbb
imul
cmpl
xchg
mov
inc
lcall
mov
shl
add
dec
aas
mov
xor
repz
jle
std
sahf
cwtl
xor
popa
lret
and
ja
jmp
insl
bound
ret
xchg
mov
fildll
xchg
add
ljmp
push
xchg
inc
xchg
int
rorl
in
scas
jl
mov
push
loope
inc
scas
push
pop
shlb
inc
push
enter
pop
in
lock
outsb
out
daa
lods
shrl
sbb
xchg
in
and
leave
inc
or
adc
divl
mov
pop
imul
call
iret
mov
xor
movsb
nop
pop
push
mov
cmpsl
daa
inc
cmp
xor
lea
bound
stos
push
imul
xor
test
jle,pt
jg
sbbl
jg
iret
aas
xchg
or
out
in
push
pop
jne
addr16
inc
int3
stc
imul
call
fs
mov
ja
scas
sbb
add
inc
dec
xchg
stc
int3
mov
out
lods
pusha
sbb
push
enter
mov
out
jle
clc
outsb
iret
divl
in
sbb
shll
mov
mov
in
sub
pushl
into
or
fisubrl
into
sbb
adc
lods
jl
sub
insl
fs
push
popw
adc
mov
in
dec
lret
add
and
outsb
aad
add
and
insl
fistpl
push
cs
push
mov
mull
ds
and
xchg
push
loop
bound
test
ds
fldln2
loopne
mov
insl
in
cld
mov
or
in
and
pop
scas
sub
xor
and
loop
out
sti
mov
sbb
fsubrp
pop
sub
repnz
adc
pop
out
scas
sub
sbb
push
std
sbb
xchg
mov
out
fsubrl
push
icebp
fdivrs
dec
rcrb
fistl
pop
xchg
xor
movsb
add
sbb
movsb
in
lds
hlt
inc
loopne
nop
sbb
shr
scas
out
fs
call
inc
sub
stos
adc
pop
lret
fs
sti
aad
enter
push
scas
cmp
cmpsl
xchg
in
imul
repnz
gs
mov
xor
bound
push
sub
sbb
xchg
test
sub
cld
xorl
ret
add
test
and
mov
test
mov
pop
les
ljmp
inc
and
push
push
jnp
cmc
bound
outsl
in
inc
pusha
dec
mov
movsl
mov
test
bound
cmc
push
lock
mov
xchg
jle
mov
adc
sub
adc
outsb
push
enter
enter
jecxz
push
sbb
push
push
addl
repnz
out
jnp
ja
dec
mov
jmp
cltd
push
aad
cmpsb
jne
xchg
jg
hlt
loop
and
xor
mov
xchg
xor
imull
dec
or
jp
pusha
popa
xchg
and
jmp
nop
mov
aas
sub
jbe
dec
push
push
inc
add
jecxz
jnp
les
xchg
mov
push
cltd
jnp
xor
shr
dec
adc
lahf
push
dec
test
xchg
fcoms
push
mov
int3
dec
in
sbbb
sub
inc
cld
rdmsr
mov
cmpsb
mov
sub
loopne
push
mov
outsl
xor
xchg
inc
cmp
mov
inc
dec
pushf
mov
out
test
cwtl
shrb
xchg
jno
sub
orb
insl
ret
imul
imul
adc
push
leave
mov
inc
les
sti
push
inc
pop
pop
mov
pop
mov
sbb
ljmp
je
xchg
push
imul
addr16
mov
aad
fcomps
lock
les
ret
ret
out
add
add
xchg
arpl
lods
ret
jecxz
mov
scas
add
mov
adc
je
out
mov
lret
xor
mov
ficompl
push
dec
aad
in
out
mov
in
mov
stc
adc
xor
push
mov
add
mov
add
add
pop
or
lcall
sub
push
push
push
cmpsb
stc
sub
mov
cwtl
mov
rcl
xor
mov
das
outsb
cmpb
jg
xor
xorl
mov
xor
add
mov
ja
lea
imul
ja
pop
test
inc
test
bound
pop
stc
xchg
cs
gs
clc
mov
push
mov
test
cli
xor
call
inc
sub
and
inc
push
cltd
and
pop
rcr
imul
lock
cwtl
sub
inc
dec
push
out
loopne
outsb
jo
mov
add
inc
mov
cmp
pop
add
ja
aaa
sub
sub
mov
jg
xchg
outsl
jno
into
das
mov
test
adc
js
scas
sub
sahf
cmpsb
lret
adc
pop
push
xor
pusha
test
jnp
fnstenv
mov
das
fwait
rcrl
fistl
cmpsl
andb
insb
outsb
sahf
xchg
cmpsl
add
js
bound
xchg
lret
add
ret
push
mov
lret
lock
cmp
push
das
and
stos
movsb
lret
nop
mov
pusha
push
aam
movsl
xchg
bound
mov
inc
scas
mov
int3
mov
and
fucomp
lods
push
push
shlb
pop
or
cwtl
arpl
lret
insl
cmp
xchg
sbb
sbb
push
jno
adc
adc
and
jo
or
les
mov
shll
test
cmp
push
call
rcll
jge
dec
outsl
mov
cld
stos
aaa
mov
sub
xchg
and
push
cli
and
pop
das
movsb
mov
sub
mov
aas
adc
fsubl
ds
cs
in
outsb
sbb
in
and
fsubrs
punpckhbw
call
iret
add
cmpsl
mov
and
out
shrb
into
pop
xor
out
aas
les
mov
hlt
insb
xor
or
les
mov
mov
add
pop
mov
push
fs
xchg
cmp
repz
sbb
stos
cmp
inc
push
jns
ret
mov
rclb
lds
jo
adc
cmp
adc
lods
inc
sub
mov
pusha
sahf
outsb
xchg
cmpsb
das
sub
mov
or
add
xchg
cltd
push
arpl
test
fsubrl
push
out
outsb
test
xor
outsl
push
outsb
inc
adc
test
pop
sub
adc
push
fs
or
ss
pop
int3
mov
sbb
cmpsl
sub
xlat
test
xchg
addr16
dec
dec
insb
mov
jnp
inc
jg
les
test
loopne
outsl
sub
xor
mov
push
or
iret
out
inc
mov
xor
mov
arpl
or
imul
mov
pop
dec
insl
sub
pop
mov
lods
mov
xchg
sarl
inc
daa
xchg
inc
xor
cmp
fdivrs
iret
repz
aas
and
sub
pusha
bound
sahf
lds
lcall
sub
sbb
sbb
scas
pop
jno
repz
testb
cmpsl
cld
inc
push
bound
sbb
jecxz
inc
dec
push
lods
inc
inc
inc
jmp
out
std
push
in
aad
test
dec
dec
lods
shll
sbb
push
lock
fcoms
shrl
adc
push
sub
xor
out
or
rcll
xorl
sub
cltd
pusha
and
lods
mov
xchg
mov
sbb
sahf
mov
in
in
out
mov
ja
adc
push
and
scas
adc
fdivrs
fs
sarb
in
in
insl
fstpt
rorb
inc
inc
fdivrl
pushl
push
aam
sbb
inc
lea
or
test
hlt
pushf
mov
fistpl
pusha
les
xlat
and
sub
aaa
out
bound
inc
ljmp
fsubr
pop
mov
xchg
xor
pop
sti
push
mov
les
jp
pop
mov
into
fistpl
xlat
popa
mov
inc
push
cmp
aad
popa
dec
and
in
clc
sti
mov
sub
or
out
ja
mov
cmp
shlb
dec
sbb
mov
loope
sub
ds
sahf
leave
dec
inc
mov
cmp
xor
mov
in
js
mov
mov
out
scas
and
fldcw
scas
jnp
out
loopne
cld
mov
loopne
aas
mov
cmpsl
out
xor
andl
fistpl
mov
aas
jnp
fcompl
cltd
xlat
mov
imul
aas
and
cmp
sbb
mov
popf
fs
inc
mov
xor
cwtl
iret
test
sahf
out
and
pop
insl
lcall
lods
call
xor
sbb
add
aam
mov
loopne
jge
xor
imul
outsl
stc
mov
mov
in
push
pop
mov
test
in
ret
movsb
pop
and
pop
iret
test
test
daa
out
fs
lcall
enter
jno
out
mov
mov
xor
popa
and
push
call
xchg
push
xor
jle
mov
xchg
push
push
out
push
dec
cltd
icebp
stos
pop
es
je
ficompl
mov
stos
es
movsb
imul
bound
lret
je
fldenv
push
xor
cld
sub
jge
insb
fimuls
in
cltd
repz
loopne
outsl
pusha
fs
lret
call
fisubrs
mov
sbb
fbld
mov
jb
fnstcw
outsb
enter
jbe
out
xchg
popf
stos
ficomps
sahf
push
jb
mov
inc
sbb
xchg
mov
sarl
arpl
stos
mov
shrb
dec
insb
leave
jo
jle
fidivl
sbb
push
mov
pop
adc
scas
sub
pop
jae
in
mov
fs
dec
je
xchg
lea
push
in
push
adcb
inc
addl
nop
jns
icebp
jecxz
mov
cld
xor
jl
add
inc
je
inc
mov
scas
mov
add
add
mov
or
mov
mov
pop
imul
add
push
jl
mov
mov
and
mov
data16
pop
out
ror
xchg
xchg
xchg
out
cmpsb
roll
xchg
mov
in
clc
inc
mul
call
jae
push
mov
dec
jno
call
imul
repz
pop
jb
das
jecxz
sbb
out
xchg
sbb
lods
test
xchg
xlat
fbld
cmpsl
ds
sti
push
sbb
scas
cmpsl
xor
es
cmp
rcrb
sub
and
mov
pop
xchg
das
mov
popf
pop
sbb
xchg
mov
ja
inc
out
je
xor
mov
mov
loopne
out
es
inc
push
lods
loopne
or
jmp
daa
sti
dec
fcmovnb
in
jp
outsl
pop
pop
comiss
cs
loope
and
sbb
rcl
ds
lahf
add
int
mov
bswap
hlt
scas
sbb
xor
ss
vcvttpd2dqy
ds
sub
mov
scas
cmc
push
xchg
shll
lss
sub
pushf
cs
sti
push
repz
outsl
mov
imul
dec
es
inc
filds
fldcw
adc
pop
xor
jne
test
repnz
outsl
fucomip
pop
mov
adc
arpl
xor
fidivl
in
fnstcw
dec
mov
add
fs
mov
push
aad
mov
xchg
inc
jbe
rorb
iret
ljmp
test
mov
inc
mov
in
jo
mov
mov
mov
out
stc
into
in
jge
jge
add
pushf
punpcklwd
das
push
lds
rcr
cwtl
jne
sub
or
sub
pop
push
in
ja
mov
push
cmp
mov
mov
rorb
cmc
cmp
stos
cmpsl
mov
push
scas
mov
insb
dec
and
cld
int
fbld
dec
movsb
pop
idivb
cwtl
jl
lds
js
jno
int3
dec
push
addr16
lods
sbb
lock
loopne
subb
xchg
dec
dec
popa
xchg
insl
mov
xor
push
or
mov
xchg
repnz
mov
into
and
out
jl
testb
cltd
iret
add
pop
or
dec
and
scas
mov
or
or
int
js
cmc
movsb
jo
mov
fstps
loopne
sub
cmc
add
psubsb
in
int
lods
pop
add
mov
outsb
cwtl
xlat
fcompl
sub
outsb
movsl
les
in
cltd
mov
std
out
cmp
cmp
int
sub
ficoms
xor
insb
outsl
test
fdivrl
or
in
mov
cld
daa
mov
jnp
adc
outsb
sub
sub
ret
add
mov
cltd
sbb
cmp
mov
jp
xchg
rcr
insb
lock
fdivp
jle
inc
cmp
int3
gs
loop
orb
es
push
lods
sub
push
and
xor
mov
into
push
out
xorl
lahf
adc
push
shlb
xor
mov
pusha
stc
push
cwtl
lcall
cld
loope
xchg
xchg
mov
fisubrs
mov
mov
push
mov
cmp
mov
fldenv
outsb
ficomps
stos
rorb
dec
sbb
hlt
out
dec
shll
and
jp
add
xor
dec
fldcw
adc
or
pop
lods
loop
xor
mov
lret
add
add
dec
jle
stos
rcll
bound
pop
test
in
mov
cmp
bound
addb
testl
pop
push
pushf
lods
add
ror
inc
add
iret
push
in
mov
fstps
xchg
sub
sbb
or
xchg
adc
xchg
inc
xchg
pop
jnp
test
sbb
shr
aam
lock
mov
iret
out
movl
loop
mov
mov
scas
push
addl
sbb
jecxz
mov
xor
stos
sub
loopne
push
pop
cmp
into
int
popa
push
cmp
add
iret
gs
int
in
arpl
dec
pop
scas
lods
sbb
in
and
mov
insb
jnp
inc
xchg
and
push
mov
ja
repnz
jecxz
adc
xor
cmp
jne
insb
out
lret
mov
loopne
std
or
dec
lds
stc
addb
xchg
pusha
jns
push
mov
sbbb
sub
into
and
mov
daa
sahf
mov
mov
adc
insl
stos
adc
shlb
call
add
mov
dec
adc
stos
repnz
mov
pusha
cld
data16
sbb
stc
leave
imul
fs
fwait
bound
mov
int
into
ds
cwtl
cmc
cmpsb
sbb
and
lahf
pop
push
imul
push
cmpsl
iret
es
push
sbb
ds
jne
adc
jg
xor
mov
xchg
push
xor
xchg
pop
filds
mov
xchg
or
rolb
push
stos
xchg
roll
mov
adc
stos
xchg
push
test
enter
cwtl
repz
add
in
cwtl
cltd
dec
aas
mov
sti
lods
or
jmpw
or
mov
out
push
out
shrl
mov
nop
xor
scas
gs
ds
mov
mov
mov
pop
pop
mov
jmp
sub
dec
inc
jns
outsb
call
popa
nop
pop
test
out
push
lods
inc
sbb
cld
imul
lahf
daa
test
xlat
scas
scas
jbe
sbb
ds
fs
lods
popf
jge
mov
bswap
inc
lods
mov
and
int
jns
ljmp
daa
dec
lods
aaa
das
mov
mov
out
push
jae
sbb
js
js
xor
pop
and
daa
lds
imul
jl
push
dec
pushf
test
rclb
jno
cmp
inc
and
mov
push
imul
lods
movsb
sub
pop
iret
jg
filds
and
das
lds
xchg
mov
pop
stos
sub
sub
test
aad
lods
fists
xchg
les
inc
pop
push
ljmp
mov
repz
add
xchg
xor
xchg
and
fs
adc
sti
adc
add
jbe
xor
lods
mov
and
pop
adc
pop
leave
in
inc
mov
inc
inc
daa
adc
movsb
jge
fdivrl
sti
aaa
stos
cmp
out
and
lret
fcmovne
loopne
stc
popa
mov
pop
outsb
popf
mov
push
test
out
insl
xchg
xor
xchg
jo
jle
je
add
rcrl
shl
push
imul
divb
jb
fsubrp
js
fisubs
jb
ljmp
push
aam
xchg
cmpsl
lret
or
scas
outsb
popa
pop
fisttpl
xor
imul
in
int3
push
stos
aas
jg
call
int
ficompl
cmp
in
dec
push
jae
daa
bound
push
out
mov
push
enter
je
xor
mov
clc
loopne
add
mov
aad
int3
ljmp
in
mov
xchg
iret
ja
sahf
mov
sub
fcomps
movsl
leave
insb
and
cmpsl
outsl
fistpll
fs
fstps
mov
pushf
xchg
ds
cli
mov
scas
andl
mov
and
mov
clc
out
mov
cli
add
adc
lahf
mov
cmp
lods
stc
stc
repnz
dec
lea
dec
inc
mov
iret
outsb
aam
sub
cs
stos
orb
pop
daa
sarb
iret
lods
add
lods
jmp
rcr
jg
add
fidivrs
outsb
cmp
fwait
pusha
bound
jg
fidivrs
scas
rorb
into
das
jg
or
in
out
cltd
pop
mull
int
scas
ljmp
lds
loopne
or
or
insl
cmc
mov
pop
adc
sub
arpl
iret
add
das
scas
leave
dec
mov
inc
test
rcr
fcoms
insl
xor
mov
pop
in
sbb
repz
xor
and
mov
cmpsb
or
movb
xor
fidivrs
es
mov
push
loopne
sub
add
xchg
adc
mov
add
ror
jmp
popa
jp
or
mov
aad
adc
and
pop
out
and
and
fistps
out
cs
adc
dec
push
xchg
daa
sbb
cltd
pop
sahf
in
mov
push
lods
xor
cmp
xchg
push
ds
dec
mov
cmp
arpl
dec
rcr
mov
test
mov
sti
sbb
ss
insl
jnp
sub
jnp
lret
mov
faddl
xor
and
gs
pop
lea
jle
into
jbe
adc
insb
xor
outsl
xor
lods
push
mov
mov
pop
imul
mov
test
dec
mov
rcll
dec
pop
and
bound
adc
in
test
inc
xor
fs
rorb
lock
aas
sar
stos
iret
and
mov
icebp
ret
jne
push
lcall
push
scas
test
fcom
scas
lods
sarb
add
movsb
out
push
mov
sub
sbb
mov
lret
or
inc
sub
lods
jl
ja
lds
add
scas
and
add
sahf
flds
sti
movsl
inc
mov
stos
fcmovbe
xor
push
or
xor
and
sub
stos
sar
scas
addr16
sbb
popf
out
inc
mov
das
pop
test
sahf
cmp
icebp
ljmp
or
addr16
subb
scas
lret
inc
sar
orb
sub
imul
and
xorl
insb
pop
jo
xor
sbb
outsb
das
cld
test
imul
stos
push
bound
mov
cltd
mov
add
push
ficompl
inc
insb
inc
jmp
imul
test
lods
inc
lock
aad
pop
cmpsb
orl
pop
jmp
pop
or
fwait
bound
jno
push
int3
cwtl
sbb
sbb
cmpb
mov
enter
jns
loope
fcmovnbe
push
and
movsb
mov
bound
test
sub
gs
jmp
hlt
fnstsw
dec
mov
pop
pusha
iret
fistpll
sahf
sti
xlat
xchg
aas
stos
dec
vpaddd
mov
cmp
shrl
inc
iret
cmpsl
int
movsl
add
lods
cli
push
dec
push
fbld
jns
cmp
pop
maxps
scas
cmp
xor
insb
mov
jae
out
outsl
lret
lods
and
movsb
cltd
cmp
sbb
aaa
into
and
sub
fcmovnb
imul
cmpl
shll
dec
repnz
mov
lds
adc
cmp
push
cmc
mov
bound
mov
pusha
and
sti
out
ds
cmp
mov
mov
cld
jbe
hlt
sub
mov
jno
sub
xor
inc
not
mov
outsl
int
and
cmpsb
dec
aam
imul
mov
xor
xor
loope
fwait
ja
push
pusha
mov
bound
std
adc
test
lea
fs
out
fdivr
and
inc
ret
jnp
jns
cwtl
fnstenv
bound
add
cmc
cld
stos
popa
or
jnp
or
push
orl
in
or
dec
jns
pop
addl
xlat
pusha
sbbl
mov
push
sub
out
insl
lahf
stos
or
data16
imul
fs
pop
jg
out
lahf
xchg
and
insb
jmp
adc
test
sub
cmp
loopne
or
dec
jg
pop
xor
xchg
sub
pop
jne
pop
fistpl
insb
xor
push
shl
enter
xorl
cltd
push
pop
adc
inc
or
xchg
mov
je
mov
mov
mov
aam
loopne
arpl
pop
aad
push
icebp
lcall
addr16
mov
mov
pop
mov
movl
add
testl
sbb
adc
aam
in
popa
in
fwait
mov
lcall
rolb
mov
loop
test
loopne
faddp
mov
push
lock
fimuls
push
jnp
fisubrs
bound
inc
ret
lret
sti
mov
into
mov
add
jno
in
and
add
imul
out
stos
test
jg
push
jle
fmuls
in
mov
and
stos
sbb
dec
xor
pop
pusha
pop
mov
iret
or
das
loope
sbb
cltd
aas
call
popa
testl
nop
mov
into
insl
dec
lods
pop
aad
test
inc
daa
jmp
mov
xchg
data16
lret
push
test
test
insb
test
int3
add
out
jg
xchg
cltd
pop
add
xor
inc
mov
loope
jnp
xor
or
xor
je
pushf
inc
loopne
sub
add
outsl
inc
cmpsb
outsl
aam
adc
inc
sti
iret
cltd
push
mov
outsb
xor
or
inc
cmp
sub
out
mov
insb
jp
ret
stc
jp
jne
xor
push
adc
hlt
loopne
ljmp
ds
cmpsl
loop
pushf
shr
insb
sbb
and
xchg
movsb
scas
out
bound
cmp
pop
jae
jmp
push
lahf
jbe
cmp
mov
outsl
and
sub
cmpsl
inc
dec
pop
mov
jo
fidivs
cltd
loopne
push
sub
or
gs
inc
cld
xchg
repnz
ds
lods
sahf
mov
sbb
dec
pop
sbbb
sub
pop
mov
iret
les
or
outsl
arpl
iret
jmp
or
punpckldq
dec
xchg
add
xchg
fimuls
dec
push
dec
sarb
arpl
in
inc
insb
mov
mov
in
iret
sbb
fcmovne
sub
mov
scas
fisttps
mov
sbb
idivb
iret
or
mov
or
out
leave
sti
repz
hlt
shlb
in
iret
rolb
insb
jnp
adc
icebp
leave
dec
jnp
les
push
sahf
pusha
movsb
mov
aam
in
sub
scas
cmpsl
ds
and
outsl
adc
ret
push
or
lock
mov
fst
nop
mov
and
pop
sahf
mov
adc
push
push
out
or
fwait
lcall
aaa
faddl
fwait
or
dec
aad
ds
cltd
inc
pop
sti
clc
jnp
das
movsl
push
int3
mov
and
es
sahf
sbbl
ja
add
test
mov
lret
xchg
in
inc
or
fdivrl
js
leave
mov
xchg
addr16
shlb
in
xchg
mov
push
and
lea
out
and
adcl
ja
xor
mov
sti
mov
pusha
pop
mov
xor
scas
loop
in
jecxz
push
add
out
xor
add
push
cmpsb
mov
pop
or
call
test
imul
cmpsb
ja
shrl
mov
fdiv
and
xchg
popa
xlat
inc
shlb
les
rclb
stc
pop
popa
jo
dec
jecxz
xor
sub
adc
lahf
scas
stos
sti
cmp
push
into
cmc
pop
scas
cmpsl
inc
loope
in
repz
xchg
test
xor
xchg
pop
cltd
kandb
cs
or
mov
cmp
sub
std
stos
push
sub
push
push
int3
jnp
fisttpll
imul
mov
dec
test
mov
lahf
mov
outsb
mov
sub
rcr
int
dec
sub
ss
cmp
std
std
jle
popa
ja
lods
sahf
jno
push
out
outsl
pop
lret
or
cmpsb
jmp
or
stos
push
rol
shrb
in
ds
shr
stc
nop
or
jne
dec
ret
xchg
pop
cltd
in
loop
outsb
daa
iret
lods
stos
pop
imull
jbe
test
mov
xor
in
push
or
mov
pop
sbb
jle
outsb
mov
les
push
std
adc
push
jne
push
xor
pop
out
test
rcl
push
xor
cmp
fnstenv
inc
mov
out
lret
es
lock
inc
hlt
sub
jl
pop
aad
jno
xor
mov
arpl
jmp
pop
lods
scas
push
add
jno
jnp
loop
cmp
and
popa
xchg
iret
push
ds
test
xor
dec
xor
std
loop
sti
xchg
push
fs
into
fidivrs
adc
repnz
cmp
mov
cli
sbb
mov
push
pushf
sub
lret
in
xchg
jge
pop
mov
iret
mov
xor
fs
mov
scas
pop
adc
push
mov
call
mov
ds
push
ljmp
push
sbb
sub
jnp
test
fisttpl
test
int
lods
mov
mov
jno
call
loopne
shrl
cmp
fildll
and
add
jno
xor
push
xorl
add
mov
rclb
stc
mov
adc
mov
cmp
lea
and
jbe
push
xor
dec
icebp
repz
push
je
xor
bound
xchg
dec
scas
or
int
ss
push
movb
pop
cli
push
outsl
mov
in
fwait
inc
rorl
and
pop
test
popa
insl
or
fimull
mov
mov
dec
ja
mov
cmpsb
mov
pop
mov
lahf
or
into
stos
jl
out
rcrb
ljmp
pop
cmp
out
fnsave
insb
aas
aam
xor
outsl
fldt
ficoms
roll
xchg
push
data16
and
sub
mov
pushf
fisttpl
sti
vpminsw
sbb
std
pop
or
mov
jmp
mov
or
iret
out
cli
mov
stc
mov
or
cmovg
icebp
idivl
jae
adc
mov
or
icebp
and
test
sahf
cwtl
xlat
or
jle
jno
sahf
sub
sti
mov
cmp
jle
hlt
lods
loop
test
movsb
xchg
mov
test
rcr
lods
mov
in
jo
mov
mov
daa
mov
sbb
cmp
loopne
fistpll
push
bound
sub
add
pop
xchg
imul
jecxz
jnp
cmpsl
inc
lea
incb
mov
adc
in
xor
pop
xor
pop
inc
push
subb
push
push
xlat
subl
xlat
mov
push
bound
add
adc
bound
jnp
sbb
pusha
fcomps
and
xchg
xchg
sbb
insb
fstpl
and
gs
or
fisttps
xchg
insb
out
orl
out
xor
call
mov
jne
fwait
mov
lret
or
dec
push
push
outsl
ds
outsl
inc
movsl
rcrb
and
inc
sub
icebp
iret
lods
shlb
cmpsl
out
aam
bound
push
push
arpl
mov
add
push
mov
orb
inc
bound
dec
mov
aas
ljmp
cmp
int3
push
loopne
fsubrl
loopne
gs
cmp
mov
cmp
and
bound
gs
push
inc
les
sub
lret
fildll
sbb
mov
loope
jmp
mul
mov
in
dec
xchg
lods
das
in
data16
and
loop
scas
ds
or
adc
add
sti
jmp
lock
in
pop
xor
out
add
pushf
scas
nop
fdivrs
push
and
inc
leave
pop
rcl
mov
imul
ret
call
add
push
loope
or
in
inc
repz
loope
test
mov
nop
inc
dec
rorb
or
mov
dec
cmp
xor
mov
mov
fcom
cltd
push
xchg
pop
sbb
push
xchg
mov
mov
test
pop
mov
loopne
and
xchg
shlb
and
or
scas
aas
add
and
icebp
shlb
loop
in
ret
dec
lcall
mov
bound
pop
fwait
and
sbb
dec
nop
jno
xor
ror
lret
mov
loope
adc
in
dec
sahf
fmul
stos
pop
pop
setbe
fwait
mov
mov
lods
test
or
rcl
in
daa
inc
pop
mov
cltd
jl
sub
mov
sub
pop
add
jns
outsl
or
les
iret
pop
xlat
loop
cmc
mov
cmp
enter
fcomps
idivb
nop
cs
ret
mov
adc
inc
pop
je
fcmovu
sarb
shrb
cli
movsb
mov
inc
push
ret
pop
sbb
fisubrs
daa
sbb
push
xchg
cmc
and
pop
lcall
loopne
gs
rcrb
bound
fnstsw
push
sub
in
and
pop
cld
xchg
stc
dec
js
push
push
mov
mov
pusha
inc
les
rorb
stc
stc
ds
in
xor
lret
in
push
sbb
in
arpl
nop
mov
insb
inc
cmp
inc
and
movsl
sbb
stos
pop
mov
jnp
fisubrs
mov
das
inc
jle
in
mov
pop
clc
xor
gs
sub
lock
sarb
lret
or
inc
sbb
lock
gs
jl
sbbb
sahf
pusha
dec
cmp
mov
das
insb
in
xor
mov
and
mov
aaa
gs
insl
lret
cmpsl
test
or
jnp
sub
call
adc
cmp
rclb
mov
nop
inc
sahf
sti
sbb
cmc
call
icebp
mov
fcomp
rclb
je
or
int3
jmp
jnp
cmp
fs
sub
cmp
mov
push
aad
out
bound
aad
mov
adc
cld
dec
xchg
stos
dec
ret
jl
pop
lds
fwait
cmpl
mul
dec
out
fsubrs
imul
adc
adc
mov
dec
adc
insb
cltd
add
and
push
adc
cwtl
and
jae
out
pop
jnp
enter
mov
in
ss
add
inc
clc
loop
pusha
divb
adc
ds
and
sub
push
aam
adc
test
add
xchg
outsb
inc
loop
and
decb
mov
sbb
icebp
cs
dec
cltd
or
test
inc
jne
rol
mov
scas
je
dec
sahf
mov
loopne
loop
mov
scas
pop
fldt
push
imul
fldl
mov
mov
inc
dec
lahf
pop
dec
cwtl
call
imul
or
movsl
mov
daa
cmpsl
mov
lods
stos
movl
out
jne
sbb
daa
ret
in
loopne
bound
or
shlb
pusha
pushf
pop
mov
sub
and
mov
mov
cmpsb
mov
xchg
sub
sbb
or
and
sub
imul
mov
lods
dec
add
cmp
mov
in
mov
andb
pop
xor
fnstcw
insb
add
enter
and
notl
out
mov
cltd
rolb
pop
mov
aam
adcb
lret
fsubs
pop
push
std
mov
out
repnz
loopne
test
xchg
pop
and
fucom
push
out
aad
js
test
nop
sti
pop
xchg
call
rcrb
mov
rcrb
dec
in
push
imul
inc
jo
dec
lret
ds
xchg
lret
push
addr16
xchg
cmp
movsb
not
adc
es
movb
scas
roll
ds
add
inc
jno
pusha
xor
push
sbb
jge
fs
mov
out
fcoms
sbb
lret
cwtl
movsl
or
fistpl
mov
add
add
aam
push
icebp
ret
push
out
cmc
add
pop
push
outsl
or
out
scas
xchg
push
sub
sub
sub
shlb
push
jmp
cwtl
ret
scas
xchg
or
sub
daa
lahf
pusha
inc
stos
andb
scas
xchg
pop
xor
dec
nop
shlb
add
int3
lods
rcrb
dec
jns
pop
cmpsb
sub
loop
mov
mov
or
lods
fiadds
rolb
pop
xchg
lods
mov
rorb
je,pt
addb
pop
inc
lods
mov
adc
mov
dec
aaa
sahf
xchg
fsubp
scas
cwtl
data16
bound
push
dec
and
sbb
pushf
test
jnp
clc
insl
inc
and
stos
mov
inc
mov
push
fstpt
fnstsw
lock
out
pusha
push
mov
cmp
mov
jmp
mov
fcmovne
call
scas
bound
or
rcll
enter
pop
inc
insb
inc
fldpi
jnp
and
add
bnd
pusha
pop
xchg
stos
mov
movsb
cmp
mov
enter
in
cmp
loopne
mov
inc
in
pop
xor
daa
fcmovb
int
jecxz
fildll
insb
jnp
bound
and
sub
xor
mov
sbbb
pop
jge
sbb
out
sbb
push
iretw
xor
pop
imul
push
rolb
and
xlat
arpl
es
popa
std
dec
adc
lock
aad
pop
inc
hlt
cmp
mov
dec
sbb
shrb
lret
call
pop
insb
rol
pop
and
rcrb
out
sub
sbb
pop
fsubs
cmpsl
mov
cmpsb
sub
test
outsl
mov
out
inc
fwait
popa
iret
scas
aad
adc
add
clc
shl
loop
inc
repnz
loopne
xorb
fisttpll
in
call
test
outsl
mov
test
das
jnp
cmpsl
jl
pop
adc
out
mov
nop
push
pusha
shlb
and
cs
pop
push
test
orb
les
lret
inc
jecxz
add
jecxz
addl
pop
fdivr
bound
mov
xor
es
bound
inc
stos
xchg
mov
stos
xchg
xor
repnz
jg
push
or
ja
sahf
sub
mov
xchg
mov
iret
test
cmc
mov
lods
sub
mov
mov
sahf
sub
cmpsb
shlb
in
cmp
in
lahf
insb
sbb
loope
mov
mov
scas
pushl
fcoms
imull
adc
lock
out
outsb
mov
and
adc
lods
sahf
aaa
push
inc
scas
insb
mov
sbb
gs
mov
dec
les
mov
mov
cltd
dec
lock
sti
movsl
push
xor
aas
in
xchg
jb
mov
push
add
pusha
stc
pop
in
into
sbb
xlat
je
pop
mov
xlat
in
add
mov
outsb
mov
leave
add
mov
jecxz
inc
and
mov
shl
dec
lcall
sbb
clc
std
cmpsl
mov
cmpl
dec
cmp
pushf
sahf
fwait
pop
pop
ret
scas
push
xchg
call
sub
outsb
loop
rcrl
cmpsb
repz
add
jmp
xlat
dec
or
stos
lds
aaa
sub
xchg
clc
jb
imul
lret
xor
mov
cmpsb
inc
cwtl
stos
cmp
xchg
mov
inc
int
mov
sub
mov
lods
gs
push
ss
or
into
and
ficomps
test
sbb
pop
bound
in
repz
xchg
notb
ljmp
mov
inc
mov
lods
rorb
mov
sub
popa
mov
inc
cmpsb
divb
ljmp
dec
pop
sub
cmp
int
add
cmp
sub
pop
push
or
lock
xchg
in
adc
retw
lret
jg
out
les
sbb
push
lcall
jmp
fcmovnu
bound
adc
insb
out
cs
pusha
dec
ds
aaa
lea
or
mov
mov
lods
xchg
iret
mov
aaa
sti
int
or
add
das
jae
pop
jmp
outsl
inc
test
and
jns
mov
test
and
adc
mov
and
push
sbb
pop
mov
mov
add
add
jp
int
shlb
pop
or
insl
in
cli
add
arpl
push
cmpsl
lds
mov
mov
cmp
jmp
xchg
xorl
arpl
rorb
je
mov
out
insl
xor
imul
mov
and
pop
mov
ss
sub
pop
fiadds
popf
in
roll
inc
xor
das
pop
bound
icebp
cmp
loop
es
jnp
iret
or
adc
mov
scas
lock
mov
xchg
cld
loope
out
imul
jbe
sub
sub
or
and
repz
dec
scas
push
cld
and
mov
loop
mov
adcl
scas
mov
inc
inc
pop
cmp
xchg
or
in
xchg
fnsave
hlt
lods
mov
mov
add
cwtl
pop
lods
mov
addr16
daa
xchg
lods
popf
icebp
sub
dec
in
test
fildll
cmp
out
pop
xlat
mov
pop
fs
mov
andb
sbb
adc
mov
aad
add
icebp
lcall
xchg
cmp
iret
push
fs
stc
mov
ror
cmove
or
mov
mov
iret
push
pop
sub
push
cli
insl
cwtl
xor
lock
inc
ret
je
dec
jge
andl
sub
pop
pop
pop
and
push
mov
push
and
xor
test
out
adc
ficoms
paddusw
adc
mov
in
std
int
pop
movsb
cmp
in
dec
cmc
das
push
fildl
sub
or
out
scas
sub
in
ret
push
sub
sbb
lcall
dec
iret
add
into
lods
shlb
mov
leave
or
lret
iret
lods
bound
and
outsb
fnstsw
and
enter
fistl
push
sarb
or
aas
aas
in
sbb
fisubs
mov
jmp
rcrl
mov
mov
cmp
in
dec
test
add
mov
int3
xor
imul
jno
dec
sub
cmp
mov
mov
lods
jae
sarb
pusha
inc
lods
int3
sbb
sarl
rolb
adc
xor
xchg
mov
adc
por
mov
push
pop
fprem1
lods
addb
fs
iret
mov
ret
loop
test
inc
cltd
subl
adc
mov
loop
jmp
cltd
add
pop
out
and
test
cmp
fildl
int
leave
xor
inc
cmp
and
pusha
or
inc
dec
scas
bound
in
sub
incb
pop
sub
jae
adc
mov
ja
and
jmp
insb
outsl
dec
jnp
jb
scas
ret
loope
lock
xlat
mov
loop
insb
sbb
sahf
in
push
xor
repz
mov
cli
dec
std
cld
scas
movsb
outsl
jge
fimull
add
aam
pop
sbb
enter
outsl
mov
lock
jp
addb
ds
fdivrp
sbb
mov
jmp
push
mov
adc
mov
jl
jbe
jg
add
pop
clc
sub
mov
mov
jle
stc
inc
enter
aam
push
adc
loope
jo
dec
add
call
xchg
lock
fadd
mov
cwtl
jg
jo
lret
xchg
cmp
lret
cmp
scas
inc
cwtl
adc
push
add
inc
add
adc
xor
test
push
cmpb
lods
cmp
out
or
fadds
or
outsb
bound
iret
push
mov
fdivrs
leave
mov
xor
push
jno
cmp
inc
int3
pop
test
rolb
loope
stc
pop
mov
mov
push
and
xchg
inc
scas
mov
add
iret
sbb
or
rcrb
testb
and
pop
sub
jl
into
push
mov
in
push
iret
cmp
mov
xor
in
sub
mov
mov
push
orl
scas
jmp
or
fcoml
mov
inc
dec
in
inc
mov
add
scas
mov
movsl
adc
adc
pop
orb
mov
push
xor
dec
mov
xor
test
ret
mov
dec
jle
push
rcrb
pusha
scas
mov
pop
iret
outsl
push
push
mov
into
cmpsl
jne
in
mov
test
mov
popa
jnp
mov
push
aas
rorb
sbb
and
jno,pt
adc
dec
pushf
rolb
outsb
push
lods
ds
in
add
repz
mov
test
lods
aas
loop
out
cltd
adc
push
insl
jae
pop
push
aam
fsubrs
inc
in
jns
andb
mov
gs
jae
cmp
mov
and
mov
out
and
jno
dec
jl
jmp
push
push
add
scas
clc
and
outsb
stc
lods
sub
mov
aam
mov
aas
push
sahf
out
or
and
and
xchg
shrl
push
in
mov
test
stc
cld
scas
cmp
mov
pop
cltd
dec
inc
pusha
push
mov
or
test
mov
dec
dec
hlt
mov
arpl
aas
jo
mov
dec
loopne
fdivs
pop
add
and
jmp
stos
loopne
aaa
add
pop
enter
push
sti
das
cmp
xchg
sahf
push
nop
xchg
sbb
in
dec
sbb
xlat
xchg
jnp
in
cli
call
or
inc
push
mov
icebp
xchg
out
loopne
scas
imul
lods
and
insb
insb
and
xchg
push
filds
je
sahf
and
shl
enter
insl
icebp
pop
in
and
aad
and
jbe
mov
or
dec
and
jg
fnstsw
mov
pop
mov
pusha
lock
cld
rclb
mov
jo,pn
mov
jnp
mov
dec
pop
ret
xor
test
pop
loopne
in
ljmp
pop
push
out
inc
xlat
lods
jnp
inc
je
xorb
jne
lret
fimull
out
sar
test
jbe
push
mov
xchg
ja
jno
nop
cwtl
adc
test
inc
dec
out
or
lods
mov
push
and
les
andl
out
in
testl
mov
jge
lods
inc
push
and
mov
push
push
insl
pushf
cld
xchg
xor
push
sbb
push
mov
das
sahf
lea
jbe
push
icebp
sub
jnp
icebp
xlat
sub
loopne
xchg
das
out
bound
push
in
sub
cltd
or
cmp
fsubrs
rcll
loopne
mov
or
addb
adc
leave
lea
jmp
scas
pusha
cltd
repnz
pop
scas
pop
lret
daa
jb
dec
sub
sahf
mov
cmc
lods
pop
data16
repnz
adc
loopne
pop
pusha
sub
dec
xchg
clts
sahf
pop
insb
mov
pop
popa
cmc
dec
data16
jle
add
lret
aam
test
fdivrs
and
sti
mov
lret
lcall
sub
mov
inc
int3
fcmovnb
sub
add
pop
sub
in
int3
cmp
ljmp
mov
pop
cmpsl
sub
sarb
cmp
inc
sbb
sub
dec
push
fwait
fwait
cmp
fwait
sub
mov
stos
cmp
cmp
adc
mov
adc
aam
xchg
jp
pushf
cs
imul
mov
pop
mov
shr
mov
lods
insl
fcomps
shrl
lahf
xchg
clc
xor
sbb
xchg
in
or
imull
push
cli
rcl
push
js
movsb
sbb
pusha
cmc
test
push
pop
in
sahf
cmc
push
jl
lods
pop
xchg
inc
mov
adc
test
faddl
dec
movsb
dec
inc
fwait
imul
mov
jnp
rorb
and
sbb
dec
lea
push
sub
loopne
inc
push
cmp
stos
repnz
pop
in
pop
mov
and
test
les
fisttps
push
std
fadd
cmp
out
lods
rorb
jae
aas
ja
mulb
xor
dec
incb
out
or
movsb
repnz
movsl
push
lods
jge
sti
loopne
adc
mov
jae
sbb
dec
psubw
sub
pop
push
scas
pop
lcall
mov
int3
lds
pop
movsb
mov
aas
test
fcmovnb
iret
dec
les
pop
loopne
or
cwtl
fildll
pop
mov
xlat
fucomi
pop
xor
mov
sub
loop
lahf
xchg
inc
das
daa
dec
pushf
out
das
push
push
fmuls
sbb
jnp
jbe
in
in
in
bound
bound
pop
in
aas
xchg
xchg
test
das
cmp
sub
mov
xor
mov
mov
call
sbb
push
cmp
aas
fmull
stos
in
jl
loop
and
out
repnz
ja
bound
imul
dec
in
or
mov
adc
fisttpl
test
into
xlat
xor
pop
fisubrl
jle
fwait
fcoms
mov
sbb
pop
jae
roll
ja
ror
cmc
mov
sub
outsl
push
jbe
pop
cmpsb
test
insb
add
aas
je
sub
pop
loopne
ffreep
cmp
sbb
adc
lret
mov
cltd
jge
sbb
loope
imul
test
movsl
cmpl
fsubr
cmpsl
push
fstl
dec
jno
aam
insl
mov
add
test
inc
or
aam
mov
lret
gs
dec
push
std
xor
push
fldcw
push
lcall
jo
rclb
hlt
int3
fsubrl
outsb
scas
xchg
push
das
insb
push
hlt
jo
movsb
pusha
inc
sbb
xor
cld
mov
in
pop
les
ja
xchg
lret
jns
xchg
dec
in
es
pop
iret
mov
scas
push
and
xlat
or
rdmsr
leave
cmpsb
adc
nop
jmp
outsl
out
out
pop
lods
les
cmpsl
mov
dec
subl
xchg
int3
aad
or
add
arpl
inc
xor
mov
out
add
adcl
scas
adc
xor
or
or
loopne
xchg
lods
push
cmp
aas
stos
jo
clc
test
and
int
jg
sub
ds
lcall
sub
pop
mov
icebp
cltd
sub
jbe
std
mov
icebp
rdmsr
inc
adc
out
xor
lods
pop
and
sti
pop
sub
and
movsl
jo
mov
cltd
sbb
aad
fidivrl
or
lds
ss
scas
lret
out
lahf
mov
and
sbb
pop
lds
jns
jle
or
in
and
nop
scas
scas
adc
movsl
add
mov
into
loopne
sbb
andb
cltd
scas
mov
xlat
insb
adc
or
mov
ds
lods
sbb
popa
push
maskmovq
notl
test
mov
or
xchg
xchg
add
cltd
outsl
xchg
push
cwtl
push
adc
mov
and
mov
stos
inc
cltd
xor
cs
loopne
in
test
pop
aad
pop
test
fneni(8087
xor
repnz
add
test
je
fcmovne
push
jo
xor
sbb
aad
hlt
sbb
xchg
adc
mov
test
popa
and
jbe
int3
out
out
test
rcl
enter
out
mov
lods
inc
out
movsl
cli
popa
scas
xchg
sub
mov
dec
rcrb
push
dec
jbe
addr16
pop
imul
fwait
adc
test
fnsave
loopne
fsts
insb
rcrb
add
insb
loopne
stos
in
imul
push
mov
into
cmp
out
mov
popa
cld
fstl
pop
filds
mov
mov
jns
mov
or
sbb
lock
xor
test
inc
popa
add
movsb
in
lret
inc
inc
and
fisttpll
aaa
push
cltd
xor
ss
mov
cmp
mov
cmp
in
out
lods
push
daa
jae
mov
out
and
cmp
btr
mov
cld
movsb
out
lds
mov
sbb
adc
push
lret
outsl
push
fists
clc
or
xchg
out
adc
fmuls
pushf
cs
pop
sahf
mov
inc
mov
call
lret
test
push
dec
shll
push
leave
cmpsb
in
dec
data16
cwtl
xor
cltd
push
mov
loopne
sub
xor
xor
cltd
loop
push
jle
inc
bound
aad
cmp
bound
cmp
add
sbb
add
les
out
mov
push
testb
test
xchg
inc
cmp
popf
dec
shlb
call
ficompl
insl
mov
dec
mov
movsl
lock
mov
sub
sub
fneni(8087
test
mov
aas
sbb
pusha
jle
in
mov
lods
mov
cmp
rcrl
mov
jl
push
mov
pushf
enter
arpl
cld
cld
and
sbb
mov
push
rclb
bound
mov
mov
jnp
jle
add
xor
pusha
mov
cmp
jnp
sbbb
push
lahf
or
pusha
ret
mov
push
in
ds
into
or
dec
enter
daa
bound
sti
sbb
in
lods
aas
test
sub
sub
add
ret
cmp
push
mov
incl
das
inc
push
clc
jo
cmp
das
bound
icebp
push
cmc
inc
jecxz
mov
test
ret
aad
cmp
xchg
mov
jecxz
aas
cmp
shr
scas
test
vpsubusw
mov
xchg
lods
arpl
es
test
repz
mov
iret
or
stos
daa
and
dec
add
jp
xchg
je
mov
dec
adc
mov
jns
mov
mov
lds
leave
pop
movsl
pushf
out
xor
and
scas
movsl
xchg
cmpsb
push
lcall
cmc
mov
xlat
incb
out
int3
cltd
fldt
insl
lock
scas
ret
lcall
movsl
pushf
lahf
cld
and
cmp
xlat
push
shrb
lock
inc
xchg
sbb
cmpsb
xchg
cmp
jo
mov
dec
sbb
mov
fwait
adcl
jae
int
mov
pushf
mov
iret
test
lret
xor
cld
add
rolb
in
decl
out
test
sub
bound
mov
fwait
xchg
cld
data16
push
frstor
xor
lret
mov
loopne
call
int
pop
adcl
push
push
mulb
xorb
cmp
mov
or
pop
and
outsb
imul
cmp
fsts
pop
pop
pop
lods
loopne
sub
nop
iret
fcomip
mov
jp
aaa
pusha
mov
insl
insb
sub
int3
push
xlat
cmpsl
sub
dec
iret
test
cmovbe
les
pop
shll
es
jns
out
ja
push
roll
mov
int3
inc
or
push
outsb
adcl
dec
cltd
xchg
dec
popf
lods
rcl
push
and
sti
sbb
sahf
test
fmul
and
ds
stos
into
mov
imul
adc
outsl
push
int3
mov
int
mov
pop
lds
pop
lret
xor
fisubs
cwtl
mov
dec
imul
jecxz
loopne
and
sub
movl
pop
andb
sarl
aas
gs
mov
xor
pop
mov
shrb
jmp
cwtl
scas
js
xlat
dec
aaa
xor
lcall
dec
and
ja
mov
jle
arpl
fisubrs
fimull
sub
xlat
aaa
popa
fimuls
cmp
fcmove
outsl
jnp
sub
inc
popf
mov
nop
push
mov
fsubrp
inc
push
cmp
xor
bound
scas
fidivrs
or
scas
aas
test
jmp
in
in
fwait
xor
push
adc
jb
pop
dec
stos
fmuls
cwtl
int
rolb
mov
inc
jbe
les
cld
out
dec
jmp
lods
mov
orb
pop
inc
sar
lods
std
mov
mov
cmpsl
punpckhbw
std
rclb
and
dec
sbb
shr
scas
pusha
jmp
lret
rcrl
insb
mov
pop
rolb
mov
mov
scas
iret
sub
jle
mov
xchg
shrb
xchg
int
or
jl
rcrb
lods
lods
lods
push
jno
and
mov
les
and
xchg
cmpsb
hlt
inc
push
fsubl
test
mov
fists
test
rolb
sahf
mov
lds
mov
es
loope
ret
adc
mov
iret
mov
in
pop
cld
pop
xchg
xchg
aad
insl
pop
pop
movd
adc
scas
and
jb
mov
and
jecxz
push
mov
push
push
lods
sahf
hlt
dec
rcr
sub
pusha
lods
xor
out
lods
mov
jb
test
mov
inc
mov
xchg
xor
add
lret
scas
orb
mov
sbb
loop
cmp
pop
iret
lods
pushf
ss
mov
imul
mov
out
jb
call
pop
fisttps
jecxz
dec
scas
and
jmp
lock
es
add
mov
jmp
mov
insl
or
xor
pop
mov
movsb
dec
rcr
cmp
mov
xchg
pusha
jnp
lret
shr
ds
sbb
adc
push
mov
scas
pusha
add
std
jecxz
add
scas
push
cltd
das
int
or
test
xchg
sti
pop
sti
adc
ret
fsubp
inc
lret
into
in
and
cld
shr
mov
out
bound
pop
mov
sub
ds
test
or
sbb
pop
into
cmpsl
cmpsl
ret
pushf
stos
ret
ja
cmp
cmp
push
push
mov
scas
dec
aad
fwait
add
xlat
sbb
stos
lret
std
cltd
dec
add
pop
dec
xchg
xor
vpackssdw
pop
mov
lcall
jb
cltd
ds
add
xchg
mov
imul
repz
cltd
ljmp
fnstsw
lods
dec
xchg
scas
push
sbb
xor
ljmp
pop
sub
test
lock
lods
mov
mov
jge
xchg
add
add
and
dec
insl
shll
xlat
loopne
call
loopne
out
sbb
push
sub
ljmp
repz
loopne
out
mov
idivb
mov
mov
das
push
xchg
loopne
das
clc
cmpsl
xor
cli
inc
aam
adc
xor
bound
mov
stos
xor
and
jnp
ds
pop
clc
jne
pushf
add
pop
fmull
mov
inc
dec
mov
push
in
es
arpl
push
pop
cmpsb
sbb
mov
pop
pop
mov
fidivrl
adc
jno
fisttps
inc
test
loop
xor
sbb
test
fwait
cmp
sub
ljmp
lods
cmp
mov
and
insb
imul
and
pusha
add
outsl
push
cmc
mov
popf
mov
mov
dec
inc
fcoml
mov
jno
sbb
movmskps
cmp
adc
and
lahf
mov
push
dec
repz
daa
loopne
mov
xchg
xlat
enter
lret
out
nop
ret
sbb
negb
dec
cmpsb
mov
mov
ret
cmp
les
jbe
push
push
or
sbb
out
fs
rcrl
jg
bound
pop
add
in
mov
sub
in
jnp
lock
sbb
dec
aaa
and
jnp
bound
test
in
and
sti
popa
es
out
pop
inc
bound
mov
or
jb
and
add
push
test
rorl
sbbl
jg
xchg
dec
in
sar
add
insb
and
inc
repnz
je,pt
lcall
aaa
inc
out
pop
into
insl
scas
test
pop
int
ret
jnp
cli
xchg
xor
mov
cld
xlat
out
pop
xor
sub
cmpsl
in
sub
int3
xor
adc
out
mov
sub
popa
test
shrb
fiadds
aas
rcll
pop
sub
shll
add
push
shll
rorb
xchg
push
inc
enter
jns
fldt
es
xchg
outsb
mov
mov
fnstsw
out
adc
out
in
lods
in
jle
pmaddwd
push
les
sub
mov
insl
mov
xchg
and
nop
push
cltd
inc
push
xor
dec
cmp
stos
jge
dec
outsl
mov
addr16
sub
sub
mov
jnp
xchg
mov
sbb
out
lret
lock
xchg
xchg
aam
xchg
cli
mov
jb
pop
pop
push
add
insb
je
sbb
cltd
lods
aam
mov
ret
fxam
xchg
lcall
loop
aas
cmc
leave
daa
loopne
daa
push
push
push
pusha
lret
popa
cmpsb
aas
mov
sub
sahf
mov
fs
inc
dec
fildll
icebp
mov
mov
push
std
dec
outsb
xor
mov
shl
push
repz
stos
insb
test
sbb
stos
cmc
insb
adc
add
fucomi
repz
bound
jae
cltd
loop
pop
sub
sahf
adc
xchg
cmpb
shrl
inc
std
mov
lahf
mov
faddl
push
out
loopne
mov
inc
xchg
xchg
js
add
dec
jns
out
loop
jae
or
rcrl
inc
jae
lcall
pusha
leave
call
or
sbb
jmp
es
jo
adc
or
or
push
sahf
or
mov
out
shl
in
fistl
pop
push
push
inc
lret
iret
call
mov
or
scas
hlt
cmc
and
je
sub
andb
in
push
adc
int3
sub
or
scas
repnz
xor
mov
loope
dec
imul
shll
movsl
out
ja
or
push
mov
cmp
jmp
mov
idiv
mov
call
inc
push
adc
pop
dec
ss
sub
xor
pop
aad
jb
call
cmp
fwait
mov
pop
loopne
push
call
xor
repz
mov
cwtl
fsubrs
push
sub
outsb
ja
mov
jle
cld
mov
div
xchg
fs
mov
scas
lret
mov
out
int
cli
scas
scas
aam
jne
jl
mov
data16
adc
jb
insb
clc
imul
sarl
jbe
daa
dec
sub
sbb
call
sbb
jnp
sbb
jno
sti
insb
jmp
xchg
das
sub
scas
lret
repnz
movsb
or
sbb
ja
jbe
mov
jp
mov
mov
mov
mov
jnp
jmp
in
fildll
cwtl
push
bound
aaa
ret
es
test
adc
cltd
add
lret
je
mov
mov
mov
mov
mov
stos
hlt
mov
leave
mov
cmpsl
jae
cmp
xlat
outsl
ds
and
fnstcw
inc
jecxz
jns
leave
sbb
pushf
out
loopne
in
dec
insl
xor
mov
and
inc
rcrb
leave
jnp
cmp
je
loopne
rcrb
cli
cld
dec
push
gs
lret
mov
jecxz
ret
ljmp
fsubrs
out
out
stos
scas
dec
pop
inc
dec
test
not
pop
sbb
jg
or
enter
inc
pop
pop
xchg
sahf
add
ret
cs
push
ficoms
test
fstpt
push
mov
lds
loopne
add
jmp
in
or
cmpsb
inc
lcall
mov
mov
mov
xor
lods
sbb
cs
dec
dec
mov
and
aas
inc
jg
xchg
mov
lds
mov
std
or
mov
jnp
jns
add
lea
popf
cwtl
in
outsl
mov
jnp
aam
out
bound
fsubr
lret
mov
fidivs
xchg
out
outsl
xchg
icebp
mov
mov
lahf
cltd
scas
nop
gs
pop
mov
mov
mov
pop
xor
and
cmp
cmpsb
icebp
lret
ret
sti
xor
in
stc
call
ja
pop
sbbl
dec
aaa
subb
lods
jmp
xchg
dec
pop
int
lods
sti
bound
std
dec
hlt
mov
rcrl
push
outsl
dec
fisttps
icebp
in
cld
scas
mov
mov
sbb
cld
cmp
mov
inc
push
jle
lds
sbb
aam
dec
sahf
or
in
or
pop
jae
sub
negl
fneni(8087
test
out
add
ds
insb
testb
rcrl
sbb
jl
xchg
dec
lret
lret
pop
jnp
ljmp
cld
inc
bound
push
or
mov
pop
sbb
pop
dec
out
sbb
dec
dec
cmpsb
dec
mov
stos
mov
inc
xchg
loopne
fwait
mov
insb
push
lods
aas
add
in
aas
sahf
xor
ficoml
jo
sti
pop
ljmp
jle
jp
lcall
test
stos
testl
out
nop
pop
cmp
mov
inc
jo
sub
stc
inc
out
out
mov
bound
arpl
cmp
lret
das
les
dec
jmp
icebp
add
icebp
xchg
inc
sti
dec
loope
and
ds
jno
inc
aaa
scas
stos
push
mov
and
mov
sbbb
loopne
ds
stc
mov
popf
in
aas
adc
shll
lret
decb
sbb
bound
push
add
mov
insb
sti
loopne
push
jae
fwait
aas
movsl
test
mov
incb
and
fwait
insb
mov
notl
out
fnstenv
cmc
scas
mov
shl
imul
je
push
sub
or
stos
inc
out
mov
xor
fucomi
in
insl
push
out
xchg
cmp
and
inc
push
in
cmp
mov
test
dec
ret
or
adc
add
in
pop
out
xor
sub
sbbl
popa
adc
stos
sbb
mov
in
add
sbb
sahf
pop
adc
mov
or
adc
gs
mov
scas
arpl
inc
jns
pusha
aaa
int3
push
mov
fucomp
stos
std
clc
ds
lds
xchg
in
movsb
pop
icebp
ja
or
iret
mov
lds
stos
sub
push
and
add
lret
stos
fxch
icebp
in
and
sbb
xchg
cmp
cmpsb
xor
sbb
cli
test
mov
cmp
outsl
sti
add
pop
cmpl
fsubr
fucomp
fwait
out
xchg
xorb
mov
and
daa
lock
test
mov
bound
fwait
mov
jp
adc
mov
fiaddl
lret
push
idivl
and
dec
or
pop
mov
into
mov
daa
not
push
iret
out
xor
push
shl
test
cltd
fimuls
push
jmp
fiadds
push
xor
fsubrl
les
aas
popf
adc
jge
mov
lods
nop
push
pop
dec
test
mov
bound
sub
jge
jne
and
ret
lods
or
sub
cmp
out
xchg
jns
cld
rolb
xlat
mov
pop
or
repnz
push
insb
inc
aam
and
dec
fmul
adc
loopne
and
iret
mov
add
test
cmpsl
dec
lret
push
dec
mov
cld
adc
jo
push
insl
xchg
cmp
jmp
pop
jnp
fstpl
cmc
xchg
outsb
lods
fldenv
or
in
jl
push
loopne
es
jmp
bound
or
mov
jle
mov
sub
mov
test
loopne
dec
mov
inc
push
clc
xlat
out
bound
push
mov
call
loope
sti
sub
sarl
jl
in
rcll
call
ja
imul
lret
lret
out
mov
pop
out
iret
xor
xchg
int3
out
arpl
test
lahf
rorb
daa
jae
cmp
mov
je
out
ds
imul
mov
sub
and
push
mov
out
fsubrl
push
xor
lds
loopne
sub
fs
and
aas
aas
xor
xchg
es
aaa
or
pop
rclb
jae
lahf
add
mov
jle
sbb
mov
dec
cmc
adc
or
push
dec
adcb
pop
scas
jnp
mov
ret
push
out
xchg
lret
sbb
mov
and
enter
int
loopne
mov
lods
mov
insl
popa
xchg
maskmovq
scas
or
mov
das
push
push
pop
cmp
mov
xor
aas
inc
lea
jl
dec
mov
pusha
cmp
pop
sbb
jns
stc
lret
lock
and
arpl
adc
int
test
and
push
sahf
fwait
sub
xor
inc
int3
es
pop
cmpsl
xor
sub
jle
scas
icebp
pop
repnz
stos
pop
fsubs
stos
fdivs
cmpsb
bound
std
roll
out
mov
pop
xor
icebp
int
sti
jge
enter
sub
das
cwtl
jl
mov
test
daa
dec
aas
push
inc
into
scas
xchg
sub
push
outsb
push
mov
dec
inc
outsb
out
sbb
out
ret
pushf
lods
sti
jmp
mov
or
movsb
sub
lock
xor
mov
data16
jbe
movsl
jg
into
daa
and
adc
dec
fs
xchg
cmpsl
repz
mov
mov
pop
inc
and
cltd
insb
cmp
enter
ja
loop
mov
cmp
in
lahf
sti
stc
push
or
sub
jae
inc
test
adc
push
pop
dec
imul
fneni(8087
loopne
test
xchg
dec
sbb
aaa
sub
fbld
push
call
lods
in
xor
scas
inc
movsb
sub
inc
scas
cltd
xor
xchg
fisubrs
aam
or
fsubl
pusha
fwait
xlat
outsb
add
and
sarb
xchg
sbb
shlb
outsl
dec
sub
in
push
mov
popa
jnp
pop
bound
sarb
cld
ret
shrb
mov
std
push
jle
dec
rcrl
add
into
push
stos
sti
rcrb
add
jle
dec
outsl
push
lea
mov
out
xor
push
in
pop
pop
test
xor
stos
push
mov
jle
loopne
sar
mov
outsb
lods
push
stos
and
fwait
je
sahf
test
test
sahf
fsubrl
xchg
jne
enter
stos
sbb
shrb
jns
test
pushf
mov
xor
call
or
fwait
xor
movsl
pop
xchg
cmpsl
sub
xor
mov
cmc
fdivrl
out
cli
jl
stc
les
rorl
sub
add
sarl
outsb
pop
mov
pushf
in
je
xor
andl
pop
xlat
push
in
and
mov
dec
xchg
or
mov
pop
into
pop
out
mov
pop
push
cmp
js
push
mov
push
pop
or
sub
jnp
lahf
insb
mov
sbb
fs
xchg
xor
cmpsb
dec
sub
pop
stos
mov
and
inc
lahf
mov
test
mov
xorb
jle
push
in
fwait
cmp
xlat
fstpl
aas
inc
xchg
dec
mov
push
int3
fiadds
add
pop
scas
lahf
shll
ret
pop
addr16
mov
mov
ja
mov
inc
dec
stos
jno
cmpsb
push
movsl
inc
outsl
aaa
mov
pop
push
sub
lea
or
les
add
jl
int
test
mov
gs
jb
insb
stc
add
sbb
lahf
mov
insb
dec
pop
mov
movsb
scas
add
pop
cmp
pop
aad
mov
orl
cld
outsl
xor
stos
in
mov
outsb
push
ret
mov
scas
fisttpll
frstor
cmp
scas
and
idivl
adc
jp
ljmp
jae
gs
push
sarb
lret
pop
push
mov
mov
push
test
inc
arpl
negl
xchg
sub
scas
subl
mov
cmpsl
bound
push
mov
sti
movsl
mov
int
daa
lret
imul
aas
popa
push
pop
or
insb
push
adc
lock
lods
stos
outsl
add
test
mov
into
out
push
mov
sub
aad
pop
pop
sbb
jl
test
rolb
lcall
ja
push
pop
push
outsl
das
or
cmp
jno
js
pop
movsb
daa
push
lods
mov
in
or
call
fadds
ljmp
inc
push
outsb
mov
mov
push
fstl
scas
jmp
mov
clc
inc
cmp
addr16
lret
push
call
dec
jmp
sub
fisttpl
inc
sub
adc
es
fstl
sahf
pop
jmp
addb
mov
subl
scas
stos
xchg
xchg
popf
sub
hlt
test
mov
add
pcmpeqw
or
lods
jbe
jg
notb
cwtl
cmp
inc
mov
in
outsl
in
mov
lcall
inc
test
ret
mov
xor
adc
sub
pop
xchg
cmp
mov
shlb
sbb
jmp
lcall
push
and
xor
das
xchg
cld
gs
mov
imul
in
mov
out
cltd
shll
cwtl
outsb
cmp
shr
fisttpll
sarb
ljmp
xor
jle
lods
dec
fcom
sbb
shrb
or
in
mov
xchg
ljmp
mov
jl
enter
mov
mov
outsl
adc
mov
call
mov
std
dec
out
mov
pop
and
cmp
out
outsl
scas
jmp
xor
adc
outsl
rorb
fsubrs
pushf
and
pop
fstpl
arpl
mov
pushf
pushf
and
pop
insb
mov
pusha
xchg
shll
aas
fwait
xor
inc
add
mov
fdivl
cmp
pop
std
mov
nop
mov
test
fistl
and
sar
push
mov
fiadds
jbe
lods
iret
sbb
lds
jno
dec
outsb
jmp
fcoml
xor
stc
add
mov
test
cmp
and
movsl
push
int
bound
movb
mov
xchg
lods
cltd
imul
sub
js
xor
cmp
push
mov
dec
fsubp
xor
popa
sub
pop
fsubl
sahf
push
lock
or
or
mov
pushf
cmpsl
xor
lret
div
xor
jecxz
out
lods
inc
fldcw
test
pop
fcmovnu
mov
pop
ds
ja
inc
paddd
fidivl
sbb
rolb
pop
cmpsl
aad
rorb
cmp
sub
scas
js
shlb
mov
inc
jmp
inc
lock
mov
pop
sbb
add
out
mov
pop
into
js
mov
test
xor
push
maxps
into
call
call
scas
pushf
sbb
nop
inc
movaps
dec
loopne
push
inc
add
mov
inc
jo
inc
and
jp
lods
push
sbb
fistpll
sbb
shlb
pop
mov
push
scas
xor
stos
mov
xchg
add
or
addr16
jne
mov
and
cmpsl
xlat
mov
or
lods
xchg
lret
xlat
outsl
push
mov
add
fisubrl
push
pop
pop
cmpsl
pop
mov
scas
jo
or
es
out
pop
out
pop
mov
bound
cmp
pop
scas
add
jp
or
push
inc
mov
or
add
jmp
fbld
or
shl
lahf
mov
lods
cmp
shll
notb
push
mov
push
out
pushf
xchg
or
pop
pop
or
adc
cmc
lret
lahf
mov
ja
repz
mov
pop
inc
mov
out
ficomps
dec
rol
cmp
or
xlat
dec
imul
adc
adc
mov
fucomp
push
cltd
bound
cmpsl
dec
jle
int3
ficoml
jg
or
jl
or
jecxz
or
daa
fnsave
fsub
inc
aam
dec
cld
sub
push
enter
cltd
mov
or
aas
jno
push
ljmp
xor
jl
sub
add
loopne
scas
fsubrs
and
in
out
subb
pushf
add
sub
pop
or
loop
jle
sub
pop
movsl
pop
std
test
fildll
dec
pop
sbb
data16
sbbl
rclb
out
stc
mov
lahf
xor
inc
lock
push
push
add
rorb
push
sub
dec
fildll
adc
xor
pop
data16
push
push
sub
jg
fists
popl
xor
insl
push
data16
or
xlat
nop
sbb
xchg
mov
xor
jl
shrb
subb
and
push
shll
test
pusha
dec
jne
cmpsb
hlt
adc
inc
test
aad
xchg
lods
mov
rclb
add
sub
pop
fisttpll
imul
fdiv
pop
dec
hlt
xchg
xor
add
insb
stos
dec
push
sti
repnz
aam
fisttpll
mov
mov
inc
imulb
add
mov
ret
inc
push
cmp
add
aam
cmp
push
stos
push
adc
in
das
sub
push
jns
inc
leave
lcall
dec
pop
cmp
ret
in
add
fcmovnbe
or
leave
fimull
mov
loope
or
aas
hlt
pop
jmp
fdivrl
xor
lret
pop
pop
mov
sbb
adcb
sub
outsb
daa
inc
dec
mov
cmp
fs
fs
jns
xchg
jb
lock
lret
xor
iret
mov
push
lock
dec
pop
rolb
xor
sbb
in
aas
shrb
push
ret
cmp
test
ds
mov
out
and
or
mov
fistps
pop
shlb
pop
push
loop
aas
sahf
inc
test
mov
mov
cld
inc
popf
insb
scas
insb
out
jecxz
das
push
lods
mov
or
inc
pusha
push
inc
pop
aaa
loop
cwtl
mov
mov
cwtl
jae
or
mov
into
sbb
cld
cwtl
es
iret
inc
mov
dec
sub
addr16
outsl
leave
sub
fdivs
roll
or
cmp
inc
jbe
insl
rcrb
push
sub
ds
or
leave
jmp
push
mov
mov
and
enter
pop
inc
out
aam
push
icebp
push
jle
jg
lahf
int3
in
lods
xor
mov
ficoml
fmul
scas
out
dec
fwait
dec
int
mov
out
inc
in
mov
inc
lds
inc
pusha
ret
or
push
mov
scas
pop
and
push
inc
filds
sbb
lods
cmp
inc
out
add
xlat
push
cs
cmpsl
out
rcrb
inc
and
je
or
sahf
lret
and
jcxz
mov
push
jmp
or
mov
adc
pop
jmp
nop
sbb
push
ja
fdivrl
orl
xor
shrl
dec
sbb
iret
rolb
push
aam
push
rolb
inc
jns
lods
loopne
mov
push
inc
int3
outsb
fidivl
imul
je
les
rorb
lea
scas
decb
arpl
cltd
add
popl
ror
sub
jnp
stos
fs
push
bound
push
idivb
ds
rclb
std
jle
loop
cmp
push
mov
scas
pop
mov
sbb
and
lock
mov
mov
sbb
cmp
lret
add
fs
mov
mov
lods
xor
call
add
loope,pn
rorb
out
xchg
hlt
push
inc
mov
xor
and
dec
add
adc
int
mov
mov
lret
push
mov
sahf
fmuls
sahf
pop
mov
out
push
stos
mov
insb
or
aas
test
movsb
fs
popa
into
mov
and
push
scas
dec
movsb
pushf
out
pop
movsb
or
movsb
dec
in
enter
mov
dec
insl
jnp
or
outsb
out
and
scas
push
adc
lret
xchg
in
push
scas
shrl
adc
and
arpl
inc
enter
icebp
cmp
int
sub
adc
scas
jg
or
leave
xchg
mov
repnz
xchg
shr
mov
lock
mov
pop
aad
pusha
clc
fistps
repz
xchg
mov
loopne
xor
jg
leave
xchg
pop
jae
sahf
insb
shll
sub
cmp
add
push
out
lds
stos
lcall
sbbb
inc
mov
imul
mov
in
inc
sub
lock
and
int3
mov
xchg
push
cmp
jmp
lods
dec
fists
add
jbe
stos
test
add
data16
fs
fs
test
mov
push
es
mov
cmc
repz
sub
insl
add
sbb
jg
jmp
jbe
push
push
or
fidivrs
cmp
sar
push
mov
cmp
fwait
xchg
jl
sub
hlt
pusha
mov
mov
mov
mov
ret
popl
movsl
inc
shl
pushf
int3
mov
movsl
xchg
lret
mov
mov
cmp
loope
xchg
je
cli
iret
inc
jne
test
adc
test
jecxz
lret
and
sub
sbb
insl
icebp
mov
mov
cmpsb
fbstp
dec
lahf
inc
sub
push
fwait
cmovns
inc
pop
xchg
push
xor
and
pop
push
in
test
cli
pop
data16
bound
pop
mov
jmp
movsb
fldenv
dec
mov
test
das
pusha
ja
popa
jbe
aas
rol
subb
inc
std
lods
mov
test
iret
jne
leave
mov
shl
push
outsl
outsb
sbb
or
and
fs
sub
mov
inc
mov
mov
cmp
es
ja
rcr
leave
sub
enter
push
mov
cmp
insl
adc
je
movsl
out
dec
xor
out
sbb
ret
pop
test
or
lretw
and
mov
add
sbb
clc
dec
dec
in
jp
xlat
mov
stos
add
lock
mov
cltd
cld
fcmovnb
sub
lcall
nop
into
sub
loopne
push
cmp
fdivr
lock
sahf
and
mov
xchg
lea
sbb
jmp
mov
std
cmpsb
jns
adc
dec
push
cmp
movsl
cs
aaa
mov
aam
cmp
dec
lock
repnz
rclb
mov
cltd
mov
cmp
decb
test
lahf
xchg
insl
imul
pop
jae
push
xchg
add
push
dec
pop
pop
dec
test
xor
fdivl
xor
in
rol
adc
and
out
es
jbe
add
in
ds
cltd
lahf
bound
lds
push
xlat
push
scas
push
outsl
push
push
int
loop
bound
dec
ljmp
xor
out
cmp
xlat
lret
scas
lret
jo
push
rol
mov
adc
pushf
mov
mov
nop
jmp
jecxz
mov
add
jo
cld
or
push
adc
rol
iret
test
jl
outsb
ss
pop
jae
jecxz
enter
pop
add
pop
jbe
and
roll
fcmove
or
sbb
fcompl
pop
rcrb
ds
fcmovnb
xchg
and
int3
das
in
in
jmp
cmpsb
jge
push
mov
adc
pushf
push
xchg
lods
ljmp
lock
jge
nop
add
pop
repz
cmp
dec
fldt
fcoml
dec
pop
lock
sub
popa
adc
push
shr
and
idivb
bound
sbb
add
mov
cmc
fs
dec
cltd
push
jo
sbb
pusha
fstps
call
in
adc
stc
fmulp
sbb
adc
es
insb
in
sub
movsb
jne
hlt
popf
cmpb
leave
xchg
insl
jge
std
push
mov
sub
mov
sub
push
cld
jg
mov
into
cmp
filds
and
dec
aaa
mov
ret
adcb
lds
dec
mov
inc
orl
aaa
xorl
add
fisubrs
mov
lret
icebp
stc
out
cmp
nop
fisttpl
in
mov
sbb
jno
lods
outsb
sub
push
je
in
loopne
int
in
scas
aam
movsb
stos
xor
inc
ret
push
outsb
nop
sahf
in
rolb
mov
pmaxsw
daa
push
dec
retw
out
mov
sub
jg
adc
fcoml
cmpsb
lods
cs
stos
pop
lahf
into
mov
aam
pop
sarb
push
lahf
mov
mov
cmp
push
and
xchg
addb
jmp
test
and
add
lret
cmc
xchg
add
mov
push
adc
scas
imul
addb
xor
ds
das
cltd
and
stc
sahf
xlat
mov
frstor
push
pop
jno
mov
sub
test
jno
mov
cmpsb
das
pop
iret
push
xlat
dec
bound
aad
mov
mov
xchg
out
pop
fnsave
fcoms
les
fcmovne
int3
push
sbb
loop
inc
add
sbb
mov
aad
sbb
xchg
into
in
sub
roll
pop
leave
movl
mov
loop
push
mov
cmpsb
and
mov
xor
loop
and
js
hlt
cmp
icebp
das
imul
out
mov
mov
outsl
push
mov
inc
adc
jne
ret
out
scas
sbb
cmpsl
lcall
insb
hlt
nop
fldt
add
or
xchg
in
ret
aas
and
gs
add
negl
ror
xor
mov
out
insb
lock
xchg
fs
mov
xor
loop
push
mov
mov
lcall
gs
sbb
sbb
nop
mov
cmp
pushf
mov
andb
and
pusha
aas
test
out
pop
or
jo
dec
cmpsb
out
push
cmp
push
addr16
mov
or
xor
mov
xchg
in
iret
bound
xchg
mov
scas
mov
mov
sbb
inc
or
cld
pop
inc
movsb
add
pop
in
pushf
scas
push
aad
shr
jno
repz
push
outsl
pushf
icebp
cmp
mov
push
push
insb
icebp
filds
out
fst
mov
outsb
pop
out
into
inc
scas
je
mov
mov
fsubl
mov
push
sub
iret
mov
iret
cltd
fwait
mov
mov
xchg
push
and
dec
iret
ljmp
dec
sub
insb
push
fwait
dec
and
inc
adc
push
add
aam
sub
mov
test
sbb
pop
inc
mulb
jae
movsl
dec
add
adc
test
sbb
lods
xlat
ds
les
rolb
fcomps
imul
out
pop
lods
lods
in
test
scas
std
enter
test
mov
jb
mov
cmc
lret
jbe
sbb
mov
cwtl
mov
mov
pushf
out
or
jle
jg
lret
jbe
movsb
test
outsb
fistl
loopne
das
lret
insb
jle
out
sub
push
mov
cld
mov
push
sbbl
rcll
or
inc
xchg
repnz
dec
cli
sbb
mov
in
stc
sti
xor
adc
or
test
les
in
jns
aaa
sti
pop
ljmp
cli
inc
scas
jnp
pop
fmull
mov
or
xor
jl
inc
cmp
mov
jnp
nop
dec
sub
ds
push
xor
scas
arpl
into
dec
jnp
sub
subb
xchg
xchg
jmp
cltd
add
mov
test
cmp
pop
fbld
cmp
stc
inc
pusha
sbb
repz
add
test
loopne
aam
mov
inc
pop
shlb
push
in
bound
shr
outsl
jno
and
pop
pop
or
cltd
jg
iret
lret
xchg
sti
enter
push
mov
mov
ds
out
mov
adc
daa
cmpsl
in
in
mov
pop
xor
ficomps
out
mov
and
in
lods
inc
jle
jnp
xchg
add
popa
aad
pusha
in
gs
in
les
rcrl
fsts
cmpsl
lods
xchg
pop
iret
repz
test
xchg
rol
inc
loop
adc
int3
push
pop
add
add
aas
xchg
cmp
sbb
test
and
nop
les
cltd
roll
dec
mov
int
out
xchg
adc
jnp
mov
dec
sub
pop
mov
push
pop
int
inc
ret
or
push
cwtl
dec
xchg
popf
dec
daa
popa
cwtl
mov
cwtl
sahf
fs
mov
pop
jecxz
sbb
adc
xchg
lods
mov
pop
push
hlt
call
sbb
daa
shlb
push
mov
push
cmc
sbb
clc
iret
insl
cmp
mov
mov
out
xchg
cmp
aas
mov
loopne
pop
xlat
sahf
xlat
clc
insl
mov
int3
mov
mov
lcall
cltd
iret
leave
loopne
pop
aaa
lahf
je
pop
pop
enter
push
test
sahf
push
in
inc
mov
in
sbb
in
jle
icebp
sub
scas
sbb
test
mov
jg
adc
mov
jl
xor
bound
loopne
mov
insb
cmpsl
bound
jl
lea
lock
mov
loopne
ljmp
fistpll
mov
loopne
push
push
ret
cltd
shl
rclb
nop
jge
mov
mov
stc
dec
dec
push
jnp
not
insb
xor
inc
andl
pop
lods
int
subl
lods
in
lahf
mov
movsl
push
cmovge
add
push
mov
les
push
out
adc
adc
scas
mov
les
rep
clc
ljmp
add
test
xchg
js
je
inc
into
pop
in
cmp
fcom
sub
sub
mov
xor
into
pop
jecxz
or
imul
sub
loop
aam
out
sbb
scas
sub
scas
in
gs
dec
sub
in
aas
daa
jmp
outsb
fsubrs
push
add
mov
stos
leave
lret
test
lret
mov
into
mov
push
or
add
jmp
adcl
mov
fimull
mov
loopne
push
ficompl
jmp
arpl
fsubrl
das
cmc
mov
call
lods
mov
fldt
repz
sub
fwait
rcl
sbb
inc
inc
loope
je
in
dec
call
add
gs
lock
bound
mov
call
inc
into
cs
insb
out
jnp
mov
mov
loopne
sub
fdiv
or
sbb
ds
adc
push
bound
clc
imul
in
cmp
adc
dec
xor
dec
push
idivl
cs
xor
push
cltd
in
das
sbb
push
mov
popa
mov
mov
mov
outsl
cmp
cmp
cmp
mov
push
fistps
imul
mov
add
sub
mov
push
xchg
icebp
or
adc
and
test
inc
iret
sbb
addb
fwait
jecxz
mov
xor
dec
mov
imul
orb
pusha
fmul
push
test
lods
push
sbb
xchg
addr16
or
inc
int3
fwait
cltd
nop
add
xor
sub
cmpl
pop
cmc
xor
sub
xor
or
nop
lock
dec
push
xlat
sbb
mov
adc
push
jp
scas
pop
insb
add
outsb
enter
stos
xlat
jle
scas
xor
bound
mov
and
ja
fiaddl
gs
or
adc
scas
mov
dec
mov
pushf
jo
mov
ds
push
jge
pop
dec
in
push
out
and
jns
mov
inc
stos
pop
lods
ljmp
sbb
xchg
and
mov
test
xor
push
hlt
xchg
inc
cmp
dec
jns
out
sub
sub
sub
cld
loopne
add
dec
repnz
cmc
add
lds
aaa
fisubs
rclb
add
stos
cmc
sahf
push
inc
push
test
nop
pop
or
ds
dec
out
pop
mov
xor
dec
je
push
add
pushf
sub
pusha
push
mov
imul
shrb
icebp
aas
int3
bound
xor
je
mov
pop
fcom
repnz
dec
cltd
out
mov
loope
sbb
shrb
push
dec
jae
adc
mov
mov
out
sub
xor
mov
shlb
out
jb
out
mov
movb
jno
mov
test
push
sbb
mov
inc
mov
push
lock
mov
mov
je
arpl
mov
push
add
jb
and
cs
xor
inc
pop
cmpsb
mov
push
mov
xchg
and
fstl
loop
push
insl
div
sub
or
jo
mov
js
mov
popa
xchg
push
jnp
ret
aam
test
test
scas
and
adc
lret
mov
insl
push
xchg
enter
data16
rcr
mov
enter
xchg
mov
pop
ret
mov
push
dec
mov
mov
pop
or
lret
push
xchg
or
jg
arpl
pop
inc
jae
out
or
jb
mov
mov
int3
push
sub
aam
mov
into
scas
mov
les
insb
adc
loopne
aad
icebp
mov
lock
mov
sub
jae
pop
fisubs
cld
arpl
or
hlt
sub
mov
in
xchg
fadd
into
fucomip
cmp
fdivs
adc
xor
aam
stos
pop
loopne
mov
addr16
adc
scas
pushf
and
xor
and
pop
xchg
cld
inc
ret
dec
stos
mov
push
sub
mov
repz
daa
outsb
fisubs
pop
jno
imul
adc
mov
pusha
add
push
lret
insb
cmp
js
xor
pop
stos
mov
mov
aad
push
and
mov
in
jg
push
dec
scas
in
xor
sbb
into
cmc
pusha
fisttpl
lods
iret
pusha
add
push
fcom
jno
jbe
push
sahf
xor
push
out
push
outsb
pop
cmc
jo
je
imul
aam
mov
sub
jmp
incb
mov
xchg
mov
pusha
les
je
sti
lea
imul
pusha
jg
push
jo
hlt
mov
fimuls
into
sub
stc
or
adc
xchg
insb
adc
sub
call
pushl
mov
xchg
arpl
ret
repnz
mov
mov
shll
div
lods
ss
cltd
sub
faddp
std
repnz
push
push
aad
imul
push
jmp
jo
mov
in
jg
enter
into
sub
test
or
das
sub
scas
xchg
mov
iret
mov
test
adc
xchg
dec
pushf
inc
repz
rolb
fs
lret
out
xchg
push
scas
pusha
lea
roll
cli
stos
rcrl
popa
mov
and
push
cmpsl
pop
je
jge
out
or
scas
cli
jp
fidivs
sub
mov
arpl
sub
push
xor
pop
faddl
push
fisttpll
pop
inc
icebp
into
sbb
mov
mov
or
and
fadds
lahf
out
mov
xchg
call
in
shrl
nop
jg
ficompl
sbb
push
adc
mov
mov
jmp
xchg
test
out
mov
pop
jmp
xlat
ljmp
push
cmpsb
into
sub
and
mov
bound
add
gs
ds
mov
fwait
out
loope
lds
pop
lock
imul
out
repz
jb
stos
lds
dec
mov
mov
es
push
lods
cmpsb
in
jg
pop
stos
scas
addr16
inc
lea
or
cmp
loope
les
ret
inc
inc
movsl
out
xor
cmp
test
inc
jle
inc
dec
and
adc
push
call
out
repnz
imul
les
inc
add
vcvtsi2ssl
adc
mov
jo
pop
icebp
xor
pusha
pop
in
push
pop
inc
loop
jo
mov
insb
pop
and
lock
push
jo
pop
xor
xlat
xchg
loopne
mov
shrb
mov
outsb
jmp
std
mov
pop
out
mov
insb
dec
lahf
lret
pushf
outsb
insb
stos
lcall
mov
push
fs
jns
mov
out
into
pop
mov
je
out
mov
movsb
loop
sub
bound
test
icebp
dec
mov
data16
jmp
pushf
das
or
mov
jbe
cmpsl
aaa
into
pop
fbld
push
iret
mov
xlat
mov
movsl
pop
ja
cmp
lds
mov
pop
cmp
dec
jns
jo
in
xchg
xor
push
repnz
mov
and
dec
inc
xchg
mov
inc
lret
sbb
xor
jle
insb
and
jecxz
sbb
lock
inc
pop
sbb
or
int3
shrb
test
int3
into
lock
out
outsb
stos
dec
lret
add
data16
sub
cltd
out
xor
int
outsl
out
scas
push
subb
cmpsb
mov
fwait
inc
das
cltd
lods
insl
ss
fsubrl
arpl
push
cmp
pop
pop
cld
nop
insb
cltd
stos
jne
push
push
rcl
pusha
or
in
notb
or
out
andb
sub
loopne
mov
mov
and
adc
jns
not
push
rorl
sub
and
int
jae
dec
shrb
ret
jae
pushf
sub
mov
mov
or
pop
loope
xlat
mov
fdivl
jo
arpl
scas
mov
mov
cwtl
cmpsl
and
imul
jg
mov
sbb
dec
xor
call
sub
dec
cmc
push
xchg
jmp
in
xor
dec
add
test
mov
jbe
aam
out
in
imul
test
rol
or
inc
cmp
push
subl
mov
mov
aaa
pop
int3
insb
std
subb
jp
sbb
loopne
adc
and
addr16
mov
sti
adc
aam
mov
xchg
push
movsl
cli
sarl
rclb
dec
jo
push
and
add
loopne
pusha
test
mov
jo
test
leave
mov
cmp
out
xchg
aaa
fisubrs
or
jecxz
xlat
ja
push
sahf
iret
jmp
mov
leave
nop
push
imul
push
add
jnp
aad
mov
sub
mov
repnz
xchg
pop
adc
test
test
cld
cli
dec
add
jne
mov
jo
push
cmp
dec
lock
dec
push
stos
fistpll
jne
lcall
add
outsl
ss
add
push
cmp
push
jns
inc
cld
pop
cwtl
xchg
adc
mov
loopne
xor
push
leave
pop
mov
add
fwait
add
sbb
push
lahf
inc
bound
int
mov
outsl
cmp
add
adc
int3
inc
ds
lret
icebp
lods
pop
jno
dec
outsl
mov
sbb
xchg
mov
std
test
xchg
mov
movsb
push
int
subb
outsb
mov
xchg
lods
leave
addb
or
out
outsb
icebp
scas
call
dec
jnp
inc
or
jp
pop
rorl
out
aaa
pop
jbe
add
fcomps
jnp
test
sbb
sbb
pop
dec
xchg
cmc
out
cld
bound
cwtl
out
popa
push
mov
cmp
std
ljmp
push
lret
in
and
test
sahf
dec
sarb
cltd
jge
mov
in
test
dec
nop
push
lret
bound
imul
mov
add
ror
popa
adc
sbb
popa
cmpsb
je
lock
in
out
pop
fwait
or
rcrb
mov
leave
dec
mov
ffree
fwait
loopne
fcompl
adc
push
shrb
sbb
lret
in
pop
cli
lods
std
fistl
fucom
out
dec
into
mov
int3
lea
std
or
data16
mov
lret
sbb
jg
xor
push
not
jbe
dec
in
mov
imul
repz
cld
cmpsl
jmp
popf
aam
push
dec
in
scas
sahf
or
inc
nop
push
test
adc
cmpsl
cwtl
pusha
mov
dec
outsl
mov
jg
or
or
cmpb
testl
or
mov
in
lahf
mov
iret
fisubs
adc
int3
jge
insb
or
data16
cmp
fdivr
xor
fstps
and
and
cmp
pop
xchg
sti
dec
jnp
lret
add
inc
jp
push
repz
jle
or
es
icebp
out
mulb
xlat
inc
cmc
pop
lret
leave
mov
ja
or
out
loop
fistpl
bound
pop
jecxz
inc
cmp
jne
pop
adc
mov
push
add
bound
icebp
jge
or
sub
in
push
outsb
int3
int
adc
sbb
addr16
add
iret
mov
aas
xor
sub
add
mov
lods
loop
inc
mov
aas
mov
push
rcr
icebp
aas
mov
orb
jecxz
sbb
rcr
sbb
js
shl
inc
popa
push
sbb
cmpsl
mov
jnp
fisttps
daa
mov
dec
lea
int
or
xchg
inc
and
jl
out
mov
mov
and
or
enter
push
and
rcl
dec
xchg
pop
mov
lods
mov
fcoml
mov
mov
daa
mov
jecxz
int
push
add
inc
add
push
std
mov
lret
imul
insl
addr16
push
es
enter
mov
pushf
sar
loopne
aas
aam
push
in
cmc
xor
pop
repz
mov
pop
jecxz
decb
jp
jp
test
fs
push
stos
push
out
ljmp
sbb
scas
repz
or
fisubl
cltd
arpl
dec
adc
call
sbbb
add
out
push
shlb
and
push
mov
mov
imull
mov
inc
and
mov
cmp
fildll
sbb
stc
fcmovne
test
add
push
ss
push
shl
das
xor
xor
mov
adc
sub
inc
inc
mov
nop
out
aaa
clc
ds
and
sbb
mov
inc
mov
inc
mov
sub
mov
push
es
fildll
xor
rorl
sbb
mov
sahf
sub
int3
cltd
jo
gs
pop
shrl
loopne
daa
scas
push
mov
mov
test
push
xor
aad
insw
mov
add
pop
jmp
mov
push
enter
xchg
sbbl
xor
jecxz
jl
push
pop
and
les
data16
push
lret
push
out
insb
pop
mov
data16
push
mov
imul
sbbb
sahf
insb
and
push
call
pop
out
popf
pop
clc
js
sbb
je
inc
add
scas
dec
push
pusha
xor
popa
jb
or
outsb
or
ror
lock
and
gs
fmuls
xor
add
inc
icebp
popl
adc
dec
movsb
in
mov
dec
cltd
fwait
ret
dec
and
xor
loopne
or
nop
add
ret
mov
pop
cmpsb
dec
mov
nop
push
bound
outsb
adc
sbb
mov
add
push
nop
jg
dec
cmp
sahf
iret
arpl
setle
ja
fstp
mov
jne
loopne
pop
into
mov
mov
inc
into
daa
push
insl
shl
push
add
aas
shlb
cmp
mov
lret
sbb
int3
add
sbb
jecxz
inc
cmp
inc
fdivrs
enter
inc
pusha
jns
push
fsubrs
adc
pop
adc
jle
or
sbb
sbb
fisttpll
sarb
ror
mov
mov
sub
xchg
insb
cmpsl
push
andl
movsb
and
mov
stc
cmp
or
imul
inc
iret
or
jl
into
xor
mov
das
fldcw
call
adc
lea
jl
into
add
insb
cmpb
mov
xor
stos
fildll
in
cmpsl
int
iret
movsl
out
vdivps
mov
or
insb
fs
call
test
stos
insb
or
or
or
jg
xor
pop
push
sti
shrl
push
outsl
lock
mov
cmp
stos
stc
jp
mov
lret
fsubp
push
cmpsb
mov
imul
rcrb
mov
push
insl
test
sub
mov
filds
push
scas
push
mov
int3
mov
fwait
iret
call
pop
sub
and
mov
sbb
sarb
or
imul
sub
movsl
call
loop
pop
push
imul
xor
jno
mov
lret
iret
lods
jbe
cmpsb
lods
mov
and
push
iret
loopne
lea
mov
add
into
xchg
sub
mov
and
jmp
inc
enter
cld
and
and
lret
fistps
push
nop
mov
insb
iret
push
cld
rcl
gs
addl
cmc
sbb
mov
fisubrl
dec
ja
fmulp
dec
rcr
sbb
dec
push
pop
jle
test
cmp
dec
mov
fldt
por
mov
loopne
sub
cmp
xlat
stc
dec
push
addr16
das
lods
out
xchg
rcrb
iret
mov
sub
clc
mov
pop
cmp
sti
sarb
outsl
cmp
in
and
jnp
mov
icebp
cltd
jmp
lahf
cwtl
loopne
cmp
mov
jae
xchg
pusha
sti
adc
divb
jae
cmpsl
cmp
and
sub
ja
mov
icebp
fs
pop
cmp
xchg
scas
clc
cli
dec
add
sub
pushf
pop
mov
popa
pushf
and
xchg
cmp
cmp
sub
mov
les
inc
mov
or
in
dec
fstpt
les
call
scas
lods
lock
sar
bswap
scas
lahf
fists
xor
cmp
sub
fmul
cmc
shlb
rol
movsb
ss
ljmp
add
sub
popf
jle
rcrb
rcrb
fwait
bound
add
adcb
out
sahf
loopne
std
repz
das
lret
jbe
mov
loopne
out
mov
pushf
and
and
rol
mov
inc
push
div
dec
mov
cmp
xchg
int
ljmp
inc
inc
pop
pop
push
sbb
test
cmc
cmp
jne
call
or
dec
sbb
xchg
bound
lods
jne
pop
and
insb
and
jg
push
mov
or
sub
faddl
out
sbb
leave
scas
add
stos
stos
lods
push
add
fwait
sub
lcall
in
int3
mov
xor
sbb
cmc
scas
push
inc
sti
and
push
adc
mov
scas
mov
and
bound
xor
mov
jmp
fcom
cmpsb
cmp
push
dec
shrb
aam
push
stos
loopne
adc
mov
inc
lds
int3
insl
daa
loop
shrb
xlat
movsl
aad
adc
and
data16
out
movsb
movsb
shrb
cwtl
pop
push
fisubrs
ja
scas
sub
loop
outsb
and
mov
add
push
and
sub
loopne
jg
in
pusha
mov
mov
stos
test
loopne
xor
movl
push
ja
addr16
stos
shlb
push
inc
mov
inc
into
mov
jg
jnp
cltd
cmp
sub
fs
ja
or
in
and
rol
mov
mov
scas
sbb
and
inc
enter
sbb
xchg
jg
push
out
pusha
xor
int3
loop
enter
insl
test
outsb
movsb
repnz
iret
mov
xor
cltd
mov
insl
and
xlat
push
push
movsl
mov
xor
add
stos
push
pop
in
jno
xchg
fistpl
mov
xchg
in
bound
and
push
push
jnp
aaa
and
fimuls
in
cli
data16
stos
or
jle
daa
int3
cmp
enter
stos
out
addr16
pushf
push
fistpl
negl
sub
mov
sub
mov
movsl
shrb
push
js
das
ret
filds
pop
fdivs
or
in
fstpt
ss
outsb
test
pop
xor
push
js
outsl
subb
mov
jbe
arpl
xchg
dec
bound
pusha
mov
or
fidivl
dec
insl
out
jnp,pt
rcl
outsl
xchg
jecxz
or
lret
bound
mov
rolb
pushf
mov
int
ja
leave
pop
imul
and
into
mov
xchg
insb
push
insb
xchg
jmp
cltd
mov
shll
out
mov
lock
mov
mov
mov
call
into
popa
xchg
fcompl
insl
inc
jnp
mov
mov
cmp
rcll
fidivs
addr16
lret
popf
scas
jo
sbb
in
dec
je
add
lea
jle
push
orb
pop
pop
pop
shl
jl
out
jnp
in
sub
lret
mov
gs
rcr
movsb
leave
dec
pop
mov
pusha
pusha
test
dec
test
pop
lret
pop
mov
or
cmpsl
cld
cltd
imul
push
out
test
mov
push
adcb
xchg
sbb
or
lret
int
pop
int
jnp
int3
bound
jnp,pn
lret
mov
or
out
mov
iret
outsl
pop
dec
add
cmp
cmpsb
jnp
mov
mov
ret
cwtl
fisubl
repnz
add
ja
call
icebp
and
mov
insl
mov
fisubl
in
ja
std
ret
and
ds
jmp
lcall
inc
xor
dec
xchg
out
sbb
jp
mov
inc
movsb
xor
jno
std
adc
aam
test
repnz
pop
add
mov
pop
ret
jnp,pn
pop
mov
push
in
push
or
sbb
stc
jb
pop
int3
notl
fwait
scas
inc
jp
fildll
stos
js
sub
and
push
in
and
insl
cmpl
adc
mov
test
pop
outsb
xor
shl
mov
ficomps
inc
iret
mov
arpl
cwtl
push
test
mov
lods
int3
fisubl
xlat
jp
sub
cmc
int3
xchg
popa
ja
xlat
xor
pop
fnsetpm(287
scas
pusha
cmpsl
rol
rcr
jae
add
sahf
mov
ror
stos
in
andb
daa
out
mov
arpl
pop
adc
push
mov
pop
lds
xchg
outsl
mov
pushf
inc
lds
insb
pop
sub
pop
jae
ficomps
insl
call
xor
cs
stos
imull
lods
arpl
adc
push
jp
out
sbb
and
aas
out
mov
test
imul
xchg
adc
bound
and
jge
fcom
and
je
jae
cltd
test
mov
pop
aas
jg
jmp
mov
inc
cmpsb
and
lahf
scas
pop
jbe
iret
jg,pt
pop
mov
mov
pop
nop
test
jns
scas
popl
pop
mov
pop
pop
cmp
call
cltd
mov
mov
in
ljmp
sahf
movsb
lcall
stos
enter
scas
xor
fcomip
sub
cmp
cmp
aaa
decb
and
cmp
into
das
int
in
add
lods
sub
push
pushf
int
lods
mov
mov
lods
popa
rep
mov
jne
dec
ja
ret
mov
cld
testb
mov
adc
sub
or
adc
fisubrs
fmul
sbb
cmpsl
out
int3
or
push
mov
jne
lret
nop
cmp
mov
mov
lock
js
adc
or
dec
mov
into
mov
scas
adc
imul
jnp
daa
adc
pusha
mov
adc
pop
jp
jl
gs
push
push
icebp
in
cmpsb
insl
fisubs
movsb
jmp
sbb
out
jns
call
sub
call
mov
jmp
ljmp
jge
pop
cli
push
mov
gs
push
push
subl
adc
dec
push
loopne
subl
into
pop
mov
and
push
into
out
inc
outsl
sub
rsqrtps
lds
jno
js
or
fst
xchg
dec
adcl
mov
mov
inc
or
adc
mov
outsb
push
in
aam
scas
mov
mov
aas
in
adc
adc
fsubl
cmpsl
fsubrp
adc
outsl
mov
insb
int
insb
lahf
inc
pusha
dec
fldcw
inc
sbb
in
mov
push
jle
fcomi
js
dec
nop
mov
sbb
stos
jmp
mov
mov
pusha
push
ja
bound
lods
scas
lods
pop
sbb
push
inc
sbb
scas
lods
loopne
add
jecxz
or
jnp
subb
pop
scas
jo
outsb
scas
lds
fistps
mov
jbe
or
lods
in
scas
fs
xchg
and
cmp
out
push
jmp
pop
rorb
and
xchg
and
fstps
mov
das
sti
roll
cmp
aad
movsb
cltd
into
sbb
cmc
mov
cld
stos
mov
pop
loopne
add
jb
sti
jno
and
outsl
outsl
aas
orl
dec
filds
sbbb
cmpsl
cmpb
adc
jp
iret
or
mov
stc
mov
sub
mov
repnz
push
rorl
xchg
faddl
leave
or
mov
lret
xor
je
in
test
fildl
jg
or
iret
movsl
shlb
push
inc
in
mov
push
fcomps
pop
mov
cmp
xor
stc
int
repz
rorl
fmuls
jne
and
mov
sub
insb
push
addr16
in
mov
aad
outsl
aas
push
lock
loop
jbe
hlt
scas
les
push
fcmovnb
or
test
sub
sahf
je
adc
cld
aam
fisttpl
out
je
fs
ficomps
test
out
mov
push
push
mov
out
popf
seta
rorl
in
mov
cwtl
scas
bound
icebp
lahf
and
push
inc
or
add
hlt
hlt
in
or
or
mov
in
dec
nop
popa
insb
mov
push
xor
and
push
cli
adc
icebp
push
fdivl
int
add
or
jo
jle
sub
int3
fmull
bound
add
inc
in
loopne
inc
fs
jae
movsb
xor
aas
into
std
sub
outsl
je
fsubrs
push
xor
xchg
mov
adc
sar
shrl
mov
pop
mov
loopne
inc
cmp
int
mov
int3
out
jne
stos
pop
pop
movsl
out
loopne
adc
int3
and
fmul
cmpsb
outsb
out
int
jl
insb
jecxz
mov
and
adc
out
bound
ds
test
or
push
xor
lds
das
and
bound
inc
sbb
out
scas
test
scas
jecxz
sub
xor
aaa
mov
mov
bound
mov
cmp
out
scas
sub
movsl
dec
sbb
repnz
data16
sbb
cwtl
pop
pushf
mov
and
push
pop
mov
adc
loopne
movsl
movsb
xchg
shl
ja
arpl
lahf
jno
rclb
sbb
mov
stos
hlt
fbld
imul
ret
rorl
push
das
aas
lret
dec
xor
jnp
rclb
mov
test
shr
rdpmc
mov
scas
repnz
xchg
aaa
jbe
jae
lea
mov
shll
inc
xchg
sti
mov
jmp
outsb
rcrb
or
inc
aas
daa
icebp
mov
jo
mov
push
cmp
sbb
ret
or
lods
pusha
ja
fldcw
mov
outsb
jo
push
loop
fs
sub
imul
add
mov
scas
mov
jno
fcomp
jnp
sub
pop
scas
into
inc
es
lods
and
fldl
jno
mov
and
sbb
fisubrl
shll
cmp
int3
xor
mov
sub
imul
cmp
sub
icebp
call
push
frstor
lcall
pop
shrl
sahf
fildll
pop
sbb
iret
jnp
adc
fucomp
or
inc
arpl
aam
or
ret
mov
mov
mov
sbb
or
xchg
xchg
pushf
in
or
adc
mov
mov
xchg
jno
add
ljmp
and
mov
dec
adc
jg
outsb
inc
loopne
or
pusha
cs
mov
pop
bound
stc
shlb
push
fimull
sti
xchg
cmp
inc
mov
scas
inc
jg
adc
pushf
adc
push
adc
mov
adc
insl
mov
in
fldcw
mov
push
push
pop
add
out
repnz
and
mov
dec
pop
aas
out
cmpsb
push
rorb
pop
call
inc
inc
sub
xchg
xchg
ljmp
push
cmp
or
and
cld
mov
mov
sub
mov
jg
mov
inc
popa
xlat
out
pop
jno
and
xor
xchg
adc
aad
pusha
lods
sarb
adc
jge
add
shl
fsubp
arpl
dec
shlb
pusha
lods
in
mov
jae
out
dec
mov
add
mov
inc
sahf
in
add
mov
inc
jecxz
popl
out
jg
jns
fmuls
mov
cmp
dec
pop
out
ss
add
add
mov
test
test
ret
mov
adc
mov
roll
inc
data16
sub
stos
lahf
push
jnp
jbe
addr16
dec
mov
into
and
push
sub
fidivrl
or
call
in
ror
inc
jg
sub
ficoms
jp
icebp
adc
in
and
pop
fmulp
mov
iret
add
jecxz
test
js
fsubs
fbstp
pop
pop
movsb
addr16
stos
std
shl
test
ljmp
xor
pop
es
jae
out
sbb
push
call
pop
test
fsubs
and
jecxz
jg
fs
orb
mov
jl
test
sub
fdivrs
mov
mov
sbb
mov
xor
jp
int3
mov
jl
nop
lock
out
or
xor
fcmovnb
sbb
das
push
cmpsb
scas
pop
bound
mov
dec
add
repz
rcr
bound
das
fs
mov
shrb
ror
jno
test
inc
in
adc
mov
mov
sar
insl
stos
outsl
stc
daa
add
test
out
imulb
lds
sub
mov
insb
inc
das
int
inc
int3
lcall
sbb
push
les
out
cltd
dec
xchg
cmp
inc
iret
dec
jo
stc
pop
fcompl
aas
adc
cld
sbb
das
dec
xchg
or
pop
insb
cli
xchg
stos
mov
mov
movsl
jne
scas
sbb
lock
mov
out
sbb
aam
les
or
hlt
cmp
lret
cmp
bound
cltd
pop
call
shl
jae
test
fcompl
enter
sti
outsb
and
push
aaa
mov
mov
sub
rolb
pop
or
jbe
jae
loope
xchg
sahf
sub
imul
stc
call
sub
mov
ljmp
sub
pusha
cmpsb
icebp
jne
inc
or
xor
in
test
xchg
outsb
in
sub
test
xchg
fisubs
mov
lea
push
stos
lret
pop
cmp
lods
aas
adc
mov
stos
cmp
sbb
fsubs
std
jo
rorl
sbb
and
xchg
imul
mov
xchg
inc
fs
xor
xchg
mov
xchg
sti
pop
out
push
test
loope
rclb
xorb
ret
push
in
mov
cs
adcl
mov
subb
cwtl
lods
ret
mov
push
xor
cmp
pop
nop
cmp
or
out
shl
push
sti
rcll
imul
lods
je
add
loopne
jge
rcrl
cmp
adc
mov
cmpsb
jne
inc
stc
mov
cltd
xchg
stos
jge
insb
fcomp
jl
mov
jnp
mov
popa
xchg
xchg
sub
rcl
xchg
jae
ret
int
push
pusha
pop
or
push
jnp
ret
out
fmuls
call
sbb
aaa
sbb
insb
mov
inc
push
sub
mov
loopne
jle
fstpt
sbb
mov
xchg
adc
loopne
and
out
cmp
daa
mov
in
pusha
mov
fwait
loopew
push
or
lret
or
dec
sub
xlat
fidivrl
test
stos
xor
mov
fsubrp
lock
js
xchg
push
cltd
cmp
les
sbb
jp
mov
cwtl
inc
mov
jecxz
inc
xchg
xor
bound
lock
sbb
stos
inc
cltd
mov
scas
jo
mov
inc
lret
in
pop
mov
add
lsl
push
std
xlat
lods
lcall
jns
mov
pop
dec
mov
sarb
int3
sbb
shr
fwait
bound
or
fisubs
or
pop
into
outsb
push
jmp
fwait
push
addr16
ja
imul
adc
js
or
dec
or
fildl
shrb
xchg
mov
test
sarb
jle
test
fwait
mov
dec
aad
sbb
sub
popa
cmp
sub
cmp
inc
pop
in
and
outsb
mull
push
rclb
xchg
pusha
repnz
into
loopne
int
sub
fabs
repnz
and
jne
jne
scas
xlat
cmc
pop
dec
jp
fs
pop
and
xchg
inc
fs
lods
fs
ss
xor
adc
cmpsb
pop
sarb
adc
bswap
or
repz
ds
rorb
pop
xchg
rorb
pop
lods
out
xor
lods
xchg
shrb
jb
ror
mov
aaa
gs
pop
cmpsb
pusha
out
je
mov
testb
jecxz
or
sub
jp
outsb
fisubl
dec
das
mov
lret
adc
fwait
jo
dec
mov
jae
ja
cmpsb
in
cmc
loopne
adc
push
sbb
iret
and
pushf
pushf
sbb
sub
mov
fnstcw
data16
clc
pushf
push
lret
testb
outsl
adc
ja
imul
insb
popa
and
inc
jle
push
dec
mov
nop
outsl
sbb
in
cmc
test
ljmp
mov
xchg
jle
cmp
fwait
dec
push
add
sub
or
loopne
xlat
scas
dec
jg
inc
in
xchg
mov
mov
movsb
add
mov
jl
ds
imul
test
test
cltd
nop
sbb
jo
add
fsubrl
and
xorl
lret
xor
out
pushf
hlt
lret
cmp
jp
jns
ret
aas
xchg
pop
lods
add
loop
xor
lahf
in
stos
mov
and
fstpt
mov
icebp
mov
push
sbb
inc
push
out
outsl
shlb
in
ds
mov
dec
inc
repz
out
inc
xor
lea
aam
int
adc
sbb
adc
mov
das
mov
inc
cmp
bound
or
jae
xor
inc
mov
sahf
xor
mov
xchg
out
aas
in
gs
mov
addr16
in
mov
cmp
adcb
in
adc
das
dec
scas
jle
sahf
aam
das
or
not
jmp
xchg
fisttps
mov
jns,pt
addr16
sbb
dec
insb
dec
cwtl
or
mov
mov
xchg
sbb
mov
mov
test
imul
jb
fwait
xchg
mov
pop
mov
outsl
adc
or
fwait
addb
or
faddl
jle
movb
sub
mov
incb
out
outsb
out
js
arpl
xchg
xchg
pusha
xchg
mov
push
push
scas
sbb
lods
pop
pop
xor
xchg
in
cmpsl
mov
cwtl
cmp
lock
xor
fcoml
cs
sbb
out
not
cmpsl
outsl
xchg
sti
cmpsb
cltd
inc
aaa
mov
enter
fstpl
jnp
mov
dec
or
lods
out
outsl
roll
pop
loopne
pop
jle
in
cmp
stc
ret
jmp
jo
jecxz
in
das
push
test
jo
out
sbb
stos
sti
cwtl
dec
or
stos
xor
add
negb
fchs
push
xor
out
and
or
aad
rorb
or
xchg
imulb
out
lea
out
pop
enter
testb
cmp
pusha
jmp
shrb
icebp
cmp
out
pusha
btr
xorl
int3
test
push
iret
xlat
and
addl
leave
aam
fsubs
and
cmp
sub
push
ret
adc
out
pop
adc
push
dec
nop
scas
push
ss
push
jne
mov
fwait
aad
mov
rclb
mov
mov
daa
and
pushf
aam
xor
adc
int
mov
jecxz
push
xor
orl
jne
or
sbbb
adc
push
scas
push
lods
jmp
loopne
loop
sar
push
leave
es
sub
scas
cs
aas
bound
mov
repnz
popa
jo
insb
test
xor
jg
xchg
call
bound
stos
scas
fsubr
sti
js
fcoms
push
xor
iret
lods
push
jmp
outsl
scas
pop
stos
bound
out
addl
lret
test
pop
jne
push
inc
push
mov
jge
pop
sbbb
push
or
sub
lsl
loopne
sub
daa
or
mov
daa
xchg
pop
xchg
in
jb
xchg
fs
mov
jl
bound
and
cld
in
das
cltd
push
cmp
mov
pop
test
popf
sub
inc
jnp
lods
mov
subb
mov
push
lods
data16
xchg
inc
add
or
lret
add
cmp
lret
fnclex
sub
push
scas
or
sub
adc
sti
in
repnz
push
or
aam
fidivs
push
out
pop
jmp
or
mov
xor
mov
rsm
sahf
stos
pushf
test
arpl
dec
dec
lods
push
pop
subl
lods
jb
stos
comiss
sbb
fcmovnu
dec
in
mov
lods
insl
xor
pop
imul
nop
and
mov
and
ret
divb
pop
jae
aad
das
inc
popf
lret
cltd
in
xchg
outsl
bound
hlt
int3
sar
lods
popf
outsl
into
imul
inc
je
cmp
data16
je
sbb
jb
sbb
enter
jnp
mov
pop
push
jo
neg
and
addr16
into
xchg
test
jge
rcll
stos
clc
sub
xor
inc
mov
push
xor
sub
xchg
mov
nop
cmpsl
out
adc
dec
jecxz
lock
inc
cwtl
ret
mov
arpl
shll
sub
xchg
push
out
jb
cs
mov
insl
in
lret
sbb
mov
adc
xor
push
ljmp
or
and
mov
jle
ret
jle
int3
adc
xchg
dec
mov
sbb
pusha
inc
andl
adc
cmp
sarb
fwait
cmp
ds
test
shlb
in
les
negl
stos
popa
xchg
jp
ret
mov
addr16
mov
push
repz
adc
frstor
jp
cld
lret
pop
jns
into
fdivs
pop
fmull
xchg
stos
test
xchg
xor
lea
push
fstpt
mov
fidivrs
stos
mov
dec
mulb
sbb
inc
xor
cld
shrd
inc
cltd
add
iret
scas
insb
push
and
in
cmp
inc
clc
sbb
xchg
aas
aam
iret
call
enter
pop
mov
jecxz
push
fcomps
mov
int3
test
das
jp
popa
shrb
dec
cmp
lcall
mov
xor
aas
and
and
movsl
push
jecxz
pop
xlat
fdivl
jle
es
aam
mov
ret
cmp
push
or
jp
dec
scas
pop
imul
lret
bound
fisubs
add
mov
add
sbb
adc
jle
push
jl
in
push
cltd
pop
adc
jle
cs
mov
lret
mov
xlat
jmp
xor
push
repnz
xchg
out
add
sub
push
pop
sarb
cmp
sbb
mov
push
sub
roll
xor
notl
bound
xor
aaa
cmp
gs
ret
push
cltd
cwtl
rolb
fst
daa
xor
loopne,pt
ss
gs
sbb
shr
xchg
mov
sbb
test
jbe
iret
mov
cmp
fistpll
gs
cmp
fwait
movsb
cmpsl
out
fildll
mov
out
dec
ret
rcrb
and
xor
adc
sarb
push
adc
cmp
je
iret
loop
mov
insl
loopne
pushf
rcrb
inc
repnz
ftst
int3
or
lahf
mov
in
rorb
inc
inc
test
aam
sub
fs
sub
add
mov
mov
je
lar
into
addr16
insb
mov
fwait
pushw
push
and
loope
nop
je
popf
insb
popf
dec
cwtl
movsb
addr16
sti
pop
bound
cmpsb
insb
loopne
gs
jne
repnz
mov
cwtl
xor
seto
pop
mov
jae
mov
fistl
shrb
int3
sub
adc
jnp
fcmovne
lock
bound
daa
dec
push
ds
mov
or
mov
dec
pop
je
mov
out
pop
cmp
mov
subb
push
pop
iret
mov
jecxz
or
mov
push
rorb
aas
shrl
mov
iret
cmp
jae
pushf
xor
jo
out
add
insb
aas
add
stos
pop
lock
pop
cmpsb
nop
movsl
in
adc
bound
inc
movsl
inc
jno
shlb
cmc
arpl
cld
sbb
lods
call
dec
pop
jg
cs
push
xor
jbe
mov
ljmp
dec
lds
pusha
lahf
js
fistl
push
outsl
popa
push
adc
mov
repz
jb
mov
cmpl
pop
xor
pop
outsl
out
insl
les
jg
mov
push
xor
push
call
movsl
xchg
mov
mov
sbb
sub
and
pusha
push
xchg
inc
outsb
xlat
and
mov
fdivl
outsl
scas
aaa
jge
jae
mov
int3
imul
inc
mov
sub
arpl
fs
inc
mov
call
push
pop
into
dec
mov
jp
jl
int
lock
add
movsl
aam
inc
pop
push
in
bound
push
inc
scas
mov
stc
cli
pop
xchg
xchg
adc
stos
mov
fsubr
popa
outsb
ja
push
cltd
in
jle
shll
xor
insl
repnz
cmpsl
popf
xor
lods
in
shlb
ss
test
mov
push
jo
jo
in
inc
mov
call
pushf
cmp
js
pop
ret
fs
push
repz
xchg
fsubl
lods
sbb
xchg
ss
cmp
scas
das
jnp
in
pop
sahf
insl
sbb
insb
and
and
call
cli
rol
sub
mov
enter
jg
push
or
loopne
dec
gs
je
push
into
push
push
push
jb
jnp
fcoms
push
jle
adc
imul
mov
iret
movsl
inc
cld
mov
loop
dec
cli
in
fwait
adc
test
outsb
cltd
dec
faddl
adc
test
lret
xchg
or
push
jnp
mov
test
jle
adc
push
stos
push
push
mov
adc
sbb
inc
les
ss
outsb
in
imul
xor
rorb
into
js
add
cltd
mov
fildll
subb
leave
cwtl
outsl
subb
imul
cmp
xor
push
cmpsb
clc
out
or
lcall
jnp
imulb
jle
int3
imul
xor
test
add
arpl
insb
add
lock
sub
adc
std
icebp
lock
lods
cwtl
fs
lret
inc
or
in
or
or
gs
in
push
sahf
fcomip
cwtl
cmpsb
int3
fsubrs
and
lret
or
dec
lahf
jb
and
pushf
ljmp
dec
xor
pop
inc
jno
sbb
int
or
push
and
jnp
lret
ficoms
and
push
sbb
call
or
rcrb
pusha
test
lods
fdivrl
and
pop
xor
repnz
js
and
adc
push
mov
mov
mov
inc
cltd
out
bnd
ss
bound
gs
xchg
nop
push
hlt
loope
push
out
sub
push
cmpb
enter
fnsave
in
out
and
test
jge
scas
dec
adc
aas
mov
jnp
testl
push
jg
popa
neg
xor
sub
or
mov
mov
mov
pop
gs
xor
mov
nop
add
pop
jg
enter
loopne
fnsave
lret
push
loop
lret
and
and
lods
mov
arpl
mov
ja
stos
jmp
jne
imul
stos
add
or
ljmp
mov
inc
test
aas
shll
mov
push
xchg
test
js
mov
jno,pt
sbb
inc
in
or
xor
adc
movsb
pop
je
xchg
stc
lret
imul
stos
in
jns
mov
pop
pop
rcl
rorb
aam
aad
mov
paddsb
jmp
dec
push
lahf
and
loopne
adc
pop
mov
stos
out
cltd
cltd
cmc
xchg
jmp
inc
add
nop
movsb
fldt
nop
icebp
push
repnz
inc
add
fisttpl
adc
icebp
adc
sub
outsl
fldt
loop,pt
and
test
mov
mov
jb
sub
sub
xor
jle
movsb
in
fs
iret
dec
or
adc
lods
adc
cmp
inc
iret
jg
mov
jo
jp
in
mov
or
sub
fnstsw
inc
add
lret
xchg
cmc
and
test
ficomps
in
sahf
ret
test
stos
lods
jl
and
xlat
jbe
push
push
arpl
pop
push
cmp
in
sbb
adc
lods
or
test
outsl
pop
into
pusha
fs
icebp
push
sbb
jmp
mov
sub
fstpl
lret
xor
jle
add
pop
dec
pop
ljmp
sarb
jecxz
pop
sti
fnstcw
add
mov
sti
repnz
arpl
stc
dec
int
sarb
sub
das
int3
mov
add
push
sbb
and
iret
or
rcrl
xor
fistpll
push
outsl
pusha
mov
push
mov
aam
fsubp
inc
or
or
pop
shr
jp
leave
icebp
or
in
nop
in
add
adc
test
mov
add
aas
ss
mov
jae
je
lret
xchg
fldcw
add
dec
sti
test
sub
orb
pop
test
cmp
les
and
movsl
mov
in
sahf
jbe
sarb
or
fnstenv
lahf
popa
dec
adc
mov
cmpsl
lods
inc
sub
push
cmpsl
push
cmpsl
addr16
jl
ja
mov
xchg
aaa
xor
push
clc
mov
cs
pop
dec
in
je
in
fwait
jo
dec
or
or
fistps
dec
and
dec
inc
addr16
cmp
neg
nop
popl
fidivs
cld
and
adc
pop
xchg
lret
hlt
cmp
and
add
xchg
mov
ds
or
xchg
loop
cmp
in
sti
out
inc
jg
or
in
aas
inc
xchg
test
ret
outsl
jo
jmp
jecxz
push
sahf
dec
pushf
shlb
rol
sbbb
les
inc
outsb
out
pop
mov
iret
shrl
ret
xchg
cli
adc
rcl
movsl
mov
stc
rcll
hlt
push
movsl
jl
fwait
mov
bound
cmp
jae
shl
aas
xchg
ret
pop
add
or
adc
insb
rol
dec
add
arpl
add
in
popa
xchg
cmp
aas
inc
cmp
in
jo
sbb
inc
mulb
in
arpl
mov
scas
popf
repnz
fsubs
adc
cmp
mov
orl
xchg
push
aaa
scas
cmp
or
nop
adc
lahf
test
push
ss
pop
and
sarl
mov
repz
or
cmp
mov
inc
inc
cmp
sbb
ja
cmpsb
dec
gs
scas
jle
sub
outsb
mov
jg
ds
ss
jle
cmc
call
hlt
ja
imul
fcoms
sahf
scas
adc
out
es
lods
dec
lds
push
pusha
jno
or
in
jge
pop
ficoms
aad
sbb
sbb
xor
out
pop
das
mov
outsb
out
out
sub
xchg
sub
xor
mov
and
inc
inc
xor
ror
inc
mov
jp
and
movsb
out
xor
in
shlb
add
push
or
lahf
js
and
test
icebp
movsl
pop
test
rcl
push
mov
rcl
rorb
lods
jne
cwtl
cld
sbb
ror
call
addr16
pop
adc
fcmovne
xchg
leave
cmp
addr16
xchg
lods
lods
mov
out
push
sti
inc
rolb
pop
inc
leave
cmpsl
sbb
scas
stc
dec
jg
in
in
jg
cmc
push
lret
xor
add
imul
and
dec
rclb
out
mov
cmp
xor
dec
sub
lock
test
ss
inc
jb
sbb
mov
push
xchg
cmovbe
jl
insl
lret
pop
and
inc
mov
sub
lods
lret
bound
dec
xor
xor
mov
cli
pusha
sub
loopne
fpatan
jmp
mov
cmp
cltd
and
popf
lock
lret
xchg
arpl
mov
lods
jmp
pop
int3
pop
pop
pop
mov
scas
cmc
cmpsb
jmp
test
cmp
pop
enter
dec
daa
out
iret
lahf
pop
loope
test
and
inc
push
lahf
ret
xchg
test
mov
pushf
fucomip
lcall
dec
sbb
outsb
stos
imul
scas
xor
jge
mov
push
imul
fwait
andl
mov
sub
test
das
dec
sahf
mov
popa
outsb
mov
jnp
pop
push
jns
ret
mov
data16
adc
aad
add
mov
push
dec
xor
in
sti
mov
ja
pop
push
dec
mov
mov
in
cmpsb
and
cmp
adc
add
mov
popa
or
daa
mov
jg
sbb
sub
xchg
push
out
xor
inc
inc
jnp
push
stos
movsl
push
mov
xchg
repz
pop
pop
in
mov
cli
xchg
jecxz
xchg
data16
rcr
lahf
imul
add
ret
jae
push
dec
movsb
xchg
lods
mov
iret
nop
fs
bound
jle
adc
pop
and
push
cli
adc
inc
rcr
scas
xor
inc
push
sub
mov
push
imul
fwait
dec
xchg
clc
lock
jl
fsts
loopne
push
add
jo
push
sti
push
dec
pop
cwtl
cwtl
jecxz
bound
aas
scas
stos
cwtl
push
mov
pop
mov
cwtl
pop
jg
fwait
cwtl
or
aad
into
cld
sarb
xchg
push
inc
jg
ljmp
and
lahf
faddp
dec
mov
pop
test
mov
gs
sti
xchg
addr16
lods
pop
lods
adc
ret
ljmp
inc
pop
or
inc
jg
js
iret
xchg
push
mov
stos
data16
out
lock
rol
rcrl
pusha
cmpsb
jl
sbb
jo
mov
jne
outsb
jo
jl
jo
push
out
outsb
rcl
add
cmp
jecxz
in
or
lds
add
aam
ret
shll
push
in
ss
mov
and
loopne
push
outsl
int3
rolb
mov
add
leave
in
loopne
sahf
mov
xlat
jl
rorb
lret
jb
dec
mov
movsl
in
sub
mov
cs
mov
cmp
rcll
mov
mov
daa
test
lahf
test
bound
fdivl
into
xor
mov
dec
pop
sahf
push
pop
scas
push
lahf
jecxz
ljmp
outsl
test
not
pop
into
pop
std
inc
ljmp
scas
scas
cmp
inc
xchg
mov
and
imul
cmp
add
mov
fs
test
enter
adc
loope
fiadds
lods
push
pop
adc
sbb
pop
dec
ljmp
shlb
sub
jb
sub
cmp
jg
inc
call
push
stos
outsb
push
lahf
and
je
gs
mov
loope
popa
push
pop
or
andl
mov
scas
in
shr
scas
add
mov
pop
pop
arpl
push
pop
je
and
fsubrl
in
mov
subb
movsb
xlat
outsl
data16
push
mov
sti
add
sti
cld
imul
outsl
xchg
fildll
aas
pushf
loopne
push
adc
aaa
xchg
mov
jecxz
jp
add
ljmp
lock
imul
lds
add
movsl
sahf
stc
add
int3
aaa
out
inc
lret
test
mov
pop
mov
lcall
push
inc
jns
jnp
add
in
mov
sub
lock
lret
loop
scas
xchg
add
pusha
lret
into
cmp
xlat
xor
aas
push
jmp
lods
subb
cmp
inc
jle
xchg
lcall
int3
cmp
shlb
push
jg
jmp
gs
rcrb
push
mov
pop
push
lods
in
cmp
lock
jecxz
nop
dec
icebp
loop
sub
fisubrl
cs
or
pop
cmc
mov
call
outsb
mov
rdtsc
sbb
mov
pop
or
push
pusha
icebp
int3
xor
sub
mov
add
lahf
push
addr16
scas
scas
dec
pop
lds
enter
jl
int3
popf
movsb
xor
clc
scas
leave
jo
in
stos
stos
jmp
shlb
shrb
cmp
mov
das
jl
lahf
out
xchg
mov
dec
aam
fisubs
lods
cmpsl
inc
stos
mov
or
and
loope
insl
and
orb
std
cmp
xchg
mov
mov
mov
jmp
sub
push
push
sub
js
das
jmp
pushf
add
in
cwtl
push
cmp
mov
inc
test
lods
test
out
xor
xlat
ret
nop
xor
push
hlt
inc
pop
push
loopne
add
test
insb
scas
idivb
mov
jg
pop
push
in
sbb
inc
nop
lcall
mov
and
fsubrs
lock
xchg
fmuls
icebp
hlt
fwait
push
lahf
mov
adc
pusha
lahf
cltd
sub
push
pusha
jp
pop
scas
bound
popa
rol
mov
jae
or
lret
inc
xor
adc
pusha
xchg
cltd
push
shrl
push
fdiv
cs
pop
addr16
pusha
xor
daa
pop
jns
iret
dec
mov
bound
mov
mov
inc
dec
in
inc
iret
daa
inc
sbb
out
pand
aas
push
fisttpl
je
sub
sbb
mov
int3
test
sbb
push
inc
jo
daa
mov
daa
out
mov
or
repz
in
cmpsb
and
jne
test
das
xorl
leave
xchg
pop
ljmp
xchg
sahf
je
cmp
int3
jb
mov
movsl
lods
cmpsb
f2xm1
sub
sbbb
stc
mov
ja
pop
out
adc
shrl
nop
fs
lock
sbb
in
es
js
ljmp
dec
pop
xchg
add
aad
push
sbb
mov
in
pop
jb
les
iret
outsb
mov
push
cmpsb
cs
popa
incl
scas
or
outsl
nop
jl
sti
icebp
ret
and
in
pusha
out
inc
mov
cmp
mov
loopne
out
loopne
jo
outsl
in
scas
rolb
stc
cmp
dec
xorb
loop
jecxz
je
xchg
sarb
sub
test
int3
decb
jns
das
push
and
lods
add
jo
jle
lock
xchg
pop
lods
adc
in
rclb
sbb
jle
mov
xor
or
cmpsl
cmp
jmp
loop,pt
iret
dec
mov
icebp
sarb
push
sbb
stc
add
test
jl
pop
jns
sahf
loopne
mov
push
cmpsb
bound
jnp
or
repz
mov
imulb
sub
mov
in
ljmp
out
imul
inc
test
mov
jmp
in
jmp
dec
sub
jmp
mov
ret
push
in
push
movsb
test
lods
lret
in
mov
and
adc
or
movsb
lods
aaa
or
push
mov
das
mov
mov
xor
bound
aam
jne
mov
in
lret
sub
add
sub
sbb
jb
int
mov
out
stos
imul
push
jmp
or
add
jns
pop
fdivrs
loop
or
shlb
in
xor
ja
push
cmpsl
aas
lahf
xlat
divl
fbld
enter
push
arpl
es
jle
inc
shlb
rcrb
cmp
cmp
pop
leave
mov
pop
pop
xchg
scas
movl
mov
mov
cwtl
xchg
scas
into
jo
adc
test
rcrb
int3
sahf
gs
jmp
inc
inc
repnz
push
outsl
out
sti
or
imul
loopne
mov
lods
xchg
aam
lret
xlat
dec
insb
mov
and
pushf
imul
jmp
xchg
pop
mov
mov
jo
out
mov
pop
lods
sub
cs
cltd
sarb
push
fldt
jmp
ret
jle
stos
sub
adc
inc
or
jns
mov
dec
fcoms
aam
ds
movsl
outsl
fisttps
xor
lods
mov
aas
aad
pusha
sbb
popa
pop
dec
call
xchg
and
lcall
aad
adc
inc
leave
pop
push
xchg
jle
fcmovnbe
lock
test
pop
and
aad
adc
pop
lods
dec
mov
xor
push
mov
and
stos
xchg
loopne
aaa
mov
ret
or
cmc
mov
fsubp
mov
cmp
sbb
fstpt
out
xor
xor
fcmove
mov
add
sub
mov
dec
sbb
aaa
jmp
mov
ret
loop
add
fwait
sbb
scas
mov
stc
adc
pushf
shrl
add
pxor
jmp
mov
xor
mov
mov
dec
sub
out
add
sub
rcll
mov
pop
sub
and
sbb
push
sti
stc
or
insb
pushf
mov
loope
sbb
sub
jl
pop
add
sti
int
sbb
push
aas
mov
arpl
test
dec
outsl
je
jno
adc
enter
mov
ret
mov
mov
cmp
push
imul
out
or
push
sbb
mov
sbb
adc
shlb
insl
mov
gs
loope
pop
mov
stc
lret
outsl
or
dec
sbb
stc
add
or
das
jbe
and
xor
scas
inc
sbb
jno
jnp
icebp
rorb
and
movsl
sub
popa
stc
xor
mov
insb
out
loopne
and
enter
and
add
lock
scas
loopne
mov
mov
arpl
pop
movsl
rcll
imul
add
push
pop
mov
sti
fsub
pusha
lods
lahf
enter
push
enter
out
lods
dec
cld
outsl
loop
jo
or
ret
fwait
inc
xchg
and
sarb
mov
cmpsl
stc
out
out
jnp
jl
xchg
and
jbe
leave
scas
pavgb
add
mov
imul
in
pusha
xchg
mov
nop
sti
ds
add
mov
ss
or
mov
lock
pop
cli
daa
loop
lds
sub
push
setbe
lods
sbb
call
mov
fwait
and
sbb
sbbb
test
xchg
add
cwtl
lcall
cmp
in
sub
stc
mov
cmp
and
out
ds
test
mov
adc
xchg
jecxz
stos
nop
lock
inc
fs
in
cmc
dec
shlb
imul
cld
lea
rcpps
insl
push
xchg
scas
shll
mov
push
cwtl
out
push
cwtl
dec
sub
sbb
out
jecxz
xchg
or
add
arpl
cmp
andb
dec
pusha
jo
push
icebp
enter
cwtl
test
jge
lea
push
daa
int3
mov
mov
mov
dec
aaa
test
in
sbb
cwtl
adc
and
fcomps
mov
mov
pop
or
dec
call
js
add
pusha
dec
int3
or
int3
sbb
mov
ss
mov
pop
data16
and
sbb
xchg
cmpsl
jmp
push
jle
mov
and
push
mov
lret
and
les
adc
in
and
pop
inc
inc
test
lret
fwait
pop
jmp
andl
cmpsb
popf
fimull
add
jmp
iret
loopne
into
xchg
notb
mov
xchg
lods
inc
lahf
mov
adc
addr16
xchg
pusha
sbb
ret
jge
lock
or
int
sub
lods
pop
movsb
xlat
ss
cmp
jae
scas
ds
test
dec
lock
push
in
call
xchg
cmpsb
loop
mov
cs
pop
js
cmc
fs
dec
in
lahf
out
dec
fs
jmp
lods
ret
insl
and
cmp
sub
ficoms
shrb
ss
cmp
xor
mov
jge
rorb
mov
lock
cmp
and
xor
jmp
or
decb
pop
mov
mov
in
je
mov
dec
mov
dec
idivl
mov
dec
xchg
inc
inc
loop
mov
stos
in
pop
lahf
iret
rcr
mov
das
jecxz
aam
mov
add
sub
lea
cmpsl
pusha
cmpsb
mov
jbe
outsb
pop
in
or
mov
loopne
mov
or
aam
imul
popa
scas
addr16
ds
sbb
mov
mov
fldt
or
mov
mov
and
push
or
adc
mov
stos
int
xor
das
call
sub
loopne
hlt
cmpsb
cs
pop
cltd
in
mov
pop
push
cli
xlat
int3
jg
xlat
ljmp
lods
pop
lds
fwait
sbb
xor
mov
in
lcall
dec
mov
pop
in
out
inc
enter
imul
mov
fwait
dec
scas
dec
fdivl
and
sub
xlat
lret
sbb
into
pop
mov
mov
scas
add
aam
lahf
jo
dec
xor
ja
dec
in
inc
bsf
imul
pushf
int
fcmovne
in
pop
test
gs
mov
jle
cmp
cwtl
ljmp
int3
cltd
ret
push
imul
lock
lds
pop
xor
bound
inc
fyl2x
xchg
pushf
ja
sub
mov
insb
icebp
fcoms
push
adc
movsb
bound
in
push
insb
mov
lock
mov
sarb
jnp
int
xorb
inc
inc
adc
pushf
and
jl
pop
mov
pop
popa
jle
lret
push
mov
push
pusha
xlat
lcall
leave
push
cwtl
sub
fisubrs
xor
jecxz
pusha
fisttpll
mov
and
sahf
gs
lcall
xchg
dec
out
fisubs
in
lods
test
and
adc
dec
test
mov
jp
aas
cmc
push
add
cld
inc
adc
lret
cmpsl
pop
cld
push
add
out
data16
call
sbb
push
push
push
pop
popa
iret
cmpsb
scas
push
insb
and
mov
push
scas
lods
xchg
pop
sub
sub
loopne
add
rolb
nop
orb
pusha
adcb
and
in
mov
rcl
push
lock
push
pop
push
mov
ss
test
sub
mov
mov
lds
mov
jmp
in
sbb
and
jns
sub
imul
or
pop
stos
das
lock
pop
push
mov
cmp
fidivrs
push
outsb
sub
hlt
in
aad
dec
nop
or
je
fwait
cmp
pop
mov
stos
roll
psubw
iret
jmp
rolb
jo
mov
fs
inc
push
int3
dec
adcl
lock
adc
les
mov
ljmp
push
and
mov
int3
pop
xor
lret
inc
jle
imul
lock
adc
jg
or
jl
repnz
movsl
xchg
fnstsw
mov
outsl
mov
add
add
jo
fdivr
call
cmc
mov
scas
ja
lret
les
iret
lcall
insl
xchg
xchg
jo
pop
aam
iret
in
and
mov
test
pop
inc
lret
fisttpll
add
lds
mov
cltd
mov
fists
rcrb
fsub
mov
ljmp
and
jnp,pn
jbe
sahf
inc
pop
out
sub
pop
cltd
shrl
lahf
and
aas
stc
sahf
xchg
and
scas
into
in
daa
insb
xlat
ss
pop
mov
pop
outsb
push
dec
data16
mov
lds
scas
test
insb
stos
cld
lcall
sti
lret
cmc
lret
arpl
nop
jnp
jae
pushf
rclb
mov
into
fbld
mov
popf
lods
xchg
mov
movsb
mov
outsb
mov
ljmp
cmp
filds
and
iret
shrb
test
adc
mov
je
or
adc
into
mull
insb
shlb
push
popa
fcmovnbe
js
mov
xor
faddl
cmp
mov
test
in
inc
sub
sub
pop
xor
pop
pop
push
jnp
jnp
mov
repz
test
sub
ret
sarl
fs
pop
test
adc
fbld
sub
pushf
aas
loopne
dec
test
mov
int3
cmp
sub
adc
enter
cmpsl
or
lods
addr16
cmp
imul
or
cld
enter
pop
push
hlt
incl
pop
or
scas
mov
aam
scas
icebp
mov
movsl
xor
or
inc
cmp
pop
outsl
jnp
out
shrb
rcrb
cmc
cmovno
inc
scas
pop
rol
in
into
and
jmp
mov
push
int3
or
and
push
push
inc
cmp
ja
mov
insb
dec
or
jo
dec
inc
rorb
and
mov
or
scas
clc
adc
sbb
in
leave
push
push
push
xor
dec
mov
loope
aam
mov
mov
push
cmp
pop
adc
in
mov
lock
int3
xlat
rcrl
std
cwtl
js
pusha
xor
mov
pushf
shrb
insl
lahf
jnp
out
sti
cwtl
sbb
sarb
cmp
cmpsb
push
sti
dec
pop
fidivrs
or
or
pushf
in
push
sbb
mov
mov
dec
jmp
js
mov
fsubrs
cmp
pop
inc
scas
and
push
ljmp
in
in
xor
test
cmp
in
sbb
xchg
js
add
lods
mov
rcl
scas
mov
sbb
pop
sub
or
cmp
out
das
mov
push
xchg
jmp
test
xor
adc
adc
cwtl
lret
and
int
ss
insl
andb
cmp
dec
fwait
enter
push
insl
pushf
fwait
addr16
and
sti
add
aas
shll
sub
imul
shrb
mov
aad
dec
hlt
xor
add
hlt
bound
push
lret
dec
les
cmp
xchg
mov
adc
outsb
fdivrl
out
iret
shl
out
and
clc
loopne
push
and
ljmp
mov
stos
std
outsl
push
clc
test
imul
rcr
movsb
int
pop
jle
adc
xchg
jle
fwait
cmpsl
push
aaa
sbb
cltd
mov
lahf
in
das
not
mov
iret
cltd
adc
add
push
dec
push
mov
push
aas
lods
inc
leave
mov
out
jns
fdivs
loope
pop
sub
into
jmp
enter
lret
outsb
lods
sub
iret
xor
les
cld
mov
popa
hlt
push
cs
lock
ja
fists
pop
sub
fwait
mov
and
xor
sub
sub
push
cltd
in
bound
inc
aad
test
lods
outsl
add
cmpsl
fisubs
mov
test
aaa
push
scas
lret
clc
call
pop
mov
nop
insl
pop
int3
repz
xorb
sub
hlt
repz
shlb
mov
adcl
fcomp
mov
dec
mov
pop
insl
mov
push
sub
movsb
mov
int3
jae
and
das
in
cmp
add
iret
push
fcompl
push
lods
push
enter
push
repz
ret
out
xchg
and
mov
daa
int
popa
call
orb
dec
mov
pop
jbe
lret
add
xor
mov
insl
fwait
leave
xlat
or
and
pop
mov
mov
scas
sbb
lret
cmpsl
add
movsl
daa
std
push
cmp
push
loopne
rcll
xor
mov
cld
mov
and
mov
outsl
repz
fistps
ret
popa
out
mov
jle
stc
and
sub
shlb
lds
imul
dec
out
rcrl
mov
je
dec
cmp
xor
int3
imul
pop
add
or
inc
xor
stos
xchg
inc
or
jecxz
adc
lret
push
in
xchg
dec
in
jge
pop
sub
push
iret
insb
sub
pop
in
das
sbb
jnp
bound
mov
in
push
popf
rcl
xchg
push
jnp
ss
cltd
add
int3
mov
icebp
cmp
out
movsl
popl
mov
loopne
in
and
aas
fnstsw
xchg
das
pusha
scas
mov
les
jmp
loopne
out
mov
int3
fmul
test
outsb
je
xor
mov
or
push
push
out
bound
in
subb
jnp
in
jns
cmp
cmp
sahf
sbb
push
push
cmp
bound
or
test
cmpsl
mov
sti
xchg
or
mov
in
scas
ret
pop
das
cmc
outsb
cld
scas
mov
mov
or
rcr
pushf
mov
xchg
mov
sti
mov
push
fwait
bound
xor
je
mov
aad
jle
xchg
inc
push
pop
movq
add
pop
sub
ja
out
data16
imul
push
xlat
push
outsl
lds
xchg
mov
clc
iret
jecxz
jmp
aas
je
inc
mov
in
pushf
sbb
cld
push
out
adc
fildll
lret
int
test
rolb
loopne
mov
inc
imul
aas
gs
insb
mov
inc
and
xchg
mov
rcrb
pusha
cltd
inc
ds
jo
out
xor
xchg
mov
inc
insb
mov
loopne
hlt
xchg
xchg
pusha
aas
shrl
jne
add
gs
push
fists
mov
or
in
stos
cs
add
jecxz
cs
jbe
leave
rcrb
loopne
stos
cltd
repnz
out
adc
mov
subl
fadd
les
loopne
ds
insl
daa
addb
out
fdivr
loopne
scas
iret
aaa
mov
cmc
mov
mov
cmp
dec
pop
pop
addl
stos
stos
rcl
icebp
loopne
shrb
rorl
sub
pop
cmp
push
push
inc
cmpb
or
mov
fmuls
addr16
leave
mov
neg
xor
add
cmp
mov
xchg
add
sarb
dec
cltd
cmpl
pop
and
imul
addr16
mov
jo
aaa
mov
insb
xor
scas
aam
jo
mov
bound
pop
out
scas
push
out
mov
xor
add
ja
vcvttss2si
push
rclb
inc
stos
mov
ja
out
push
cli
adc
and
out
in
outsb
fldt
xchg
mov
jmp
pop
stc
loopne
jbe
fcompl
xor
test
incl
loop
mov
nop
inc
rorl
sub
sub
pop
sahf
pusha
push
cwtl
daa
std
lahf
jo
dec
jg
das
xor
testb
pushf
jae
jnp
out
push
cmp
sub
in
dec
loop
push
add
add
xchg
dec
stc
inc
sbb
subl
in
insb
jno
popf
and
or
inc
or
xor
xchg
repnz
jae
or
jecxz
loopne
stos
rcrb
sahf
push
fneni(8087
fcmovne
mov
xor
loopne
nop
cmp
or
andb
scas
cmp
mov
lods
insb
ljmp
adc
cmp
je
fstpl
mov
cmp
jne
lods
mov
jns
sahf
cltd
cmp
in
jg
inc
dec
mov
mov
ds
jns
jae
and
nop
sahf
add
mov
xor
outsl
ds
shll
outsb
pop
jg
outsb
mov
shll
adc
push
mov
pop
xchg
mov
rclb
dec
mov
loope
or
xor
and
scas
push
or
ret
cltd
arpl
mov
or
cmp
fmull
pusha
aas
popa
push
arpl
fldcw
in
adc
pop
dec
and
leave
and
outsl
out
xor
cltd
incl
lret
inc
jge
fsubrl
jne
call
inc
scas
lahf
mov
fidivrl
cwtl
inc
por
shr
inc
fmuls
leave
sbb
mov
xor
push
roll
and
or
cli
inc
mov
lcall
aaa
mov
stc
outsb
and
lds
data16
add
xchg
scas
push
jnp
subl
jne
adc
faddp
movups
jnp
daa
stos
sbb
push
push
sti
or
sub
sbb
mov
in
jnp
arpl
push
push
xlat
adc
or
daa
leave
xchg
cs
mov
push
xor
fs
or
or
in
ja
jns
fidivrs
adc
xor
fisubrs
arpl
dec
fildll
mov
lret
es
mov
lret
xor
pop
mov
jg
loopne
push
hlt
mov
dec
jb
stc
stos
pop
stos
mov
dec
add
pop
les
icebp
dec
mov
pushf
loopne
and
out
in
lods
test
outsb
sub
adc
out
sub
and
pusha
jnp
out
xchg
das
lods
cltd
xorb
cmc
cwtl
scas
call
lcall
insl
mov
stc
xor
aam
sub
or
jmp
add
lods
insb
cmpsl
push
cmc
enter
mov
mov
out
inc
cli
lods
sahf
cwtl
lods
xchg
dec
imul
and
ja
add
stos
add
fsubs
pop
mov
mov
in
or
bnd
jae
xchg
std
sub
mov
in
xchg
add
mov
jne
stc
xchg
adc
dec
xchg
shrb
jne
add
mov
je
jo
dec
aas
mov
imul
lock
les
jmp
out
mov
shrb
pop
das
fsubrl
out
push
in
jle
scas
xchg
aad
test
jns
ret
inc
dec
sbb
xor
sti
mov
mov
ljmp
test
shlb
sbb
pusha
mov
push
imul
mov
into
shrb
shlb
sub
js
lcall
mov
jnp
shlb
xor
int3
out
scas
addr16
andl
push
mov
push
pop
and
and
mov
repz
or
stos
lods
jg
in
inc
rcll
jo
in
sub
lcall
out
mov
jbe
mov
jmp
mov
mov
jg
cmpsl
fwait
cmc
jmp
push
add
adc
inc
cltd
push
mov
push
jl
mov
inc
sti
fldt
loop
add
popf
mul
push
imul
mov
lock
ja
jno
pop
sub
xchg
cltd
mov
push
inc
in
lahf
sub
push
roll
sub
xor
arpl
ljmp
or
call
mov
int3
push
dec
push
mov
jno
pop
inc
dec
scas
gs
mov
pop
int3
out
imul
lret
cmp
arpl
faddl
das
out
push
mov
adc
sar
je
jmp
into
mov
movsl
push
inc
cmp
outsl
pop
pop
scas
sbb
push
adc
dec
pusha
mov
outsb
cmc
das
sti
loopne
neg
loopne
outsl
pop
xchg
test
ljmp
fsubrp
dec
xchg
lcall
in
test
jnp
in
or
fldenv
xchg
pop
mov
addr16
loopne
cmp
and
ja
cmp
pop
scas
subb
pop
jg
pop
nop
in
push
mov
push
sub
das
shrd
push
fbld
sahf
cli
mov
push
pushf
pusha
mov
int
adc
inc
sub
adc
iret
and
push
mov
pop
cmp
cltd
outsb
mov
and
sub
inc
inc
mov
cmp
mov
pushf
outsl
clc
xor
sbb
std
push
ror
or
mov
out
rcrl
imul
xor
cmp
push
xor
mov
shlb
scas
mov
nop
push
sbb
les
pop
dec
loopne
ficoms
lret
ss
pop
inc
xor
mov
jnp
daa
mov
leave
fisttpl
in
outsl
or
fistl
hlt
test
stos
sub
mov
pop
jb
imul
in
rcrb
or
mov
mov
in
sbb
adc
outsb
mov
or
in
loopne
and
jae
pop
pop
mov
scas
cmp
test
or
dec
in
movsl
fadd
adc
mov
rorl
xor
inc
iret
in
and
aaa
push
fiadds
xchg
sub
aas
aad
out
add
int3
loopne
sub
shl
cmp
xor
out
into
xchg
cmpsl
ret
jle
in
out
data16
bound
cmpsl
jns
int3
or
cmp
in
test
rcrb
sbb
outsl
xchg
sbb
test
test
cltd
dec
fs
sub
push
pop
test
iret
dec
daa
outsl
pop
cmp
fcmovne
int
sub
cmp
xor
mov
xchg
lea
jle
imul
std
add
mov
jmp
adc
scas
jnp
aad
lret
push
sbb
and
fildl
test
mov
or
and
push
fstpl
pop
int3
inc
inc
fs
mov
jp
ret
fsubrl
cmpb
mov
clc
xchg
icebp
dec
lods
inc
sub
decb
lret
jns
ljmp
lods
data16
pusha
popf
xchg
aaa
mov
pop
call
arpl
shlb
xchg
aam
sbb
lods
or
icebp
cs
sbb
mull
pop
fcomp
imul
or
xor
movsl
enter
fldt
mov
mov
cltd
inc
cmp
testl
xor
push
hlt
fldt
cwtl
shrl
dec
pushl
in
inc
cmp
popa
out
in
bound
dec
movsb
mov
mov
clc
and
shrl
in
gs
dec
in
dec
int3
shll
iret
out
mov
fiadds
mov
add
scas
sbb
xchg
test
push
movswl
and
mov
repnz
push
pop
dec
ret
stc
insb
adc
imul
jnp
imul
dec
xlat
dec
lret
in
addl
jl
popa
pop
or
push
lret
pusha
pop
loopne
andb
int3
iret
bound
fs
xor
ljmp
fildl
movsb
mov
insl
xor
out
enter
repz
insb
int3
xchg
and
pop
push
cwtl
sbb
xchg
inc
out
and
pushf
inc
scas
out
mov
sbb
cmpsl
popa
arpl
adc
pusha
neg
xor
stos
push
fldt
dec
and
gs
fcompl
es
mov
inc
adc
dec
push
out
stos
mov
das
mov
aas
hlt
test
xchg
daa
pushf
push
lods
fldenv
jmp
call
pusha
test
std
shlb
inc
pop
push
sbb
mov
push
push
gs
pushf
mov
in
out
out
xlat
inc
das
fisttps
jecxz
pusha
push
push
stos
andb
mov
jmp
je
sbb
or
sarb
adc
mov
sub
cmp
push
sub
rcrb
rcrl
and
shl
and
dec
imul
sbb
shlb
lds
int
repnz
aas
push
mov
dec
lcall
inc
repz
or
rorb
lods
jp
cmpsl
ret
or
jl
loop
sub
lods
mov
repz
sbb
ja
mov
iret
add
push
and
cld
aas
cltd
and
jle
js
mov
push
jmp
aas
or
pop
cs
outsl
cltd
roll
ret
subl
clc
push
fwait
inc
push
pop
cltd
sahf
pop
scas
fisubs
sub
push
sti
cmp
cmpsb
adc
ja
call
cmp
out
in
inc
rcrl
or
icebp
jle,pt
sub
pop
out
and
lods
negl
push
xchg
and
mov
popf
sbb
mov
and
xchg
xor
adc
fwait
ss
and
add
mov
pop
aas
loop
sub
lret
cmp
loop
jnp
sub
cmp
lods
dec
stos
das
mov
insb
or
stos
lock
add
fdivrp
adc
dec
sub
fistpl
insb
lret
cwtl
sahf
in
imul
sub
out
in
lcall
lock
dec
adc
pop
outsb
lock
sub
mov
pop
pop
pushfw
fmuls
push
jnp
or
call
in
xor
jle
insl
fdivrl
xchg
pop
movsl
outsl
dec
adc
aas
mov
jle
insl
adc
outsb
cmp
ja
mov
aaa
lret
mov
xchg
dec
xor
aam
jl
pop
lahf
ja
imulb
or
mov
and
push
push
daa
int3
pop
movsb
cmc
mov
dec
mov
cs
imulb
xchg
push
sbbl
outsl
sbb
sahf
popa
sub
push
cmc
imul
xchg
inc
mov
add
sub
push
xchg
or
iret
add
inc
outsl
inc
sub
daa
lahf
xor
and
jmp
fstl
pop
shlb
cltd
xorb
inc
push
insb
mov
cltd
movsb
lods
and
adc
fwait
sahf
inc
and
into
cmp
scas
cmp
fisubrl
pusha
or
or
jge
jnp
inc
popa
push
lahf
cmp
test
sbb
jno
jl
rclb
ljmp
loopne
adc
xor
jo
in
in
add
insl
out
mov
mov
and
out
lods
fldenv
inc
cmpsb
cwtl
dec
das
cltd
xchg
int
push
out
sub
sub
mov
pop
xlat
xor
repnz
repnz
mov
int3
in
dec
movl
fbld
or
cli
in
push
cs
and
lods
add
cmp
push
and
ficoms
jnp
and
sbb
fidivrl
insb
push
arpl
jo
in
test
orl
xlat
rclb
dec
mov
enter
addr16
add
push
ja
scas
inc
into
movsb
out
imul
dec
outsl
in
test
xchg
loopne
sbb
mov
and
out
pop
scas
cmp
sahf
push
arpl
or
out
inc
inc
into
testl
cs
es
std
loop
push
call
out
sahf
je
jno
cmp
push
cs
push
in
xor
lret
insb
fdivrs
rcl
cs
loopne
clc
ds
push
xor
mov
mov
push
subb
add
pop
loopne
mov
into
loopne
and
jmp
scas
je
pop
sub
sbb
pop
lahf
lret
pop
push
or
cmc
int
in
cmovae
scas
mov
push
cmc
sub
test
lods
push
shrb
sbb
enter
push
enter
fildl
mov
pushf
jmp
test
sbb
aam
jecxz
and
mov
pop
mov
push
loopne
mov
dec
push
dec
nop
inc
aaa
push
fidivl
icebp
jmp
in
sbb
sti
sahf
imul
pusha
sahf
out
outsl
out
mov
or
hlt
mov
es
sbb
in
mov
js
outsb
adc
jns
add
or
push
out
loopne
sub
push
out
notb
das
enter
das
sbb
popf
cs
or
jg
xor
out
xchg
mov
pop
jg
push
mov
fdivl
sbb
ret
fisubrs
mov
icebp
iret
add
xor
inc
dec
dec
aad
mov
xchg
mov
sahf
in
fdivs
fs
push
sub
movsb
fldt
imul
pushf
rcrl
sbb
insl
out
add
pushf
xor
int
lods
aaa
in
cli
jge
and
test
mov
mov
push
loopne
mov
lret
pop
scas
push
addr16
mov
aaa
fldl
mov
outsl
insl
mov
push
pop
cli
and
xchg
cmp
jne
xor
jae
mulb
and
xor
in
cwtl
mov
in
mull
cmc
mov
mov
jle
xor
xchg
insb
rorl
jge
outsl
iret
shlb
mov
rcrb
push
js
js
pop
sub
pop
sub
sarl
scas
mov
int3
cmpsl
push
arpl
addr16
cmp
xchg
push
fs
mull
iret
and
mov
mov
xlat
push
xchg
test
and
add
xor
mov
ret
jno
and
int
out
int3
sbb
xchg
cmpsb
sahf
pop
xchg
addr16
mov
rol
lcall
shlb
mov
sbb
les
mov
int3
and
pop
jne
xchg
in
test
cmc
shrb
push
out
push
pop
fisubrs
push
not
fisttpl
cmp
push
popf
sub
fs
jne
add
xchg
mov
in
mov
pop
pop
xor
lods
fs
xor
pusha
sbb
sbb
xlat
mov
fs
xchg
int3
jae
popa
lret
in
push
xor
fucomi
shrb
mov
sahf
xor
out
fsubrp
outsb
fwait
mov
sub
sbb
mov
pop
sub
int
mov
jns
sti
fnstsw
dec
pop
adc
les
mov
pop
or
push
addb
jg
aas
je
jb
sub
pop
xor
pop
pop
test
pop
icebp
and
cmp
pop
js
mov
bound
add
pop
push
lock
stc
push
dec
xor
push
out
rcll
jg
mov
sub
outsb
mov
scas
mov
decb
lret
add
mov
or
mov
test
cmpsl
mov
addr16
insl
mov
aas
sti
lods
jnp
mov
pop
ret
hlt
imul
or
out
sub
ror
loop
insl
leave
xchg
and
lods
into
xor
dec
mov
scas
popf
jle
jae
and
cltd
pushf
and
fwait
outsl
cmc
fistps
cmp
adc
jae
adc
sbb
icebp
sar
fisubrs
xor
aaa
test
and
js
xor
sbb
lret
and
and
mov
xchg
inc
push
push
shlb
inc
mov
out
adc
adc
fimuls
dec
test
test
enter
pop
ja
pop
dec
mov
xchg
adc
pop
out
mov
js
fsubrl
xchg
mov
sub
push
xor
mov
inc
push
imul
jecxz
stos
stc
lock
add
in
iret
fstps
loope
cmp
cmpsb
mov
inc
mov
aad
sbb
mov
jg
outsb
pop
das
sar
test
aaa
push
sbb
lret
dec
mov
sahf
fcoms
aam
pushf
xor
push
inc
pop
pop
mov
popw
jle
push
ljmp
lea
stos
jg
repz
iret
addr16
mov
sub
movsl
andb
or
icebp
dec
loope
cltd
fdivl
out
imul
sub
not
daa
cmpsl
clc
sahf
push
xchg
add
dec
fdivs
add
repnz
pop
dec
dec
or
movsb
test
push
lret
push
mov
sub
out
fsubrs
sbb
sti
test
cmp
cltd
lds
in
jne
fmuls
test
mov
dec
jmp
lods
mov
inc
leave
mov
incl
outsb
jb
inc
jle
lods
cwtl
cmpl
jnp
xchg
mov
inc
ret
inc
cltd
int3
imul
sub
push
mov
jle
dec
jnp
aad
dec
dec
test
es
fdivl
push
stos
pop
push
fistpl
scas
out
pushf
sbb
iret
pusha
cmp
test
insb
rcrb
sub
out
mov
and
push
inc
pop
pop
jmp
sbb
into
mov
add
js
sbb
ret
cwtl
cmp
mov
or
push
jp
imul
cmp
inc
sub
imul
div
outsl
adc
loopne
xchg
sub
les
push
or
movsl
fwait
mov
pop
subb
fidivrs
pop
lea
pop
imul
add
mov
stos
inc
andb
insl
pop
mov
xchg
into
negl
enter
into
xor
adc
cltd
jle
mov
insl
pop
sbb
sahf
adc
roll
or
imul
jmp
icebp
sahf
add
pop
lods
push
or
jae
mov
imul
les
xchg
pusha
jno
jg
or
push
mov
icebp
xor
js
mov
jno
jbe
mov
jnp
mov
fidivs
jp
aad
out
lds
pop
sub
sbb
mov
inc
pop
and
fldenv
outsb
sbb
iret
mov
lods
out
mov
movl
cmp
inc
mov
ljmp
and
out
mov
call
inc
lcall
inc
xorb
pop
push
xor
aad
test
test
mov
aaa
push
sub
sbb
lret
fwait
in
icebp
cmpsb
daa
xchg
sub
mov
dec
push
sbb
sub
insl
fs
push
sub
das
insl
push
cli
sti
mov
clc
cltd
es
stos
mov
lret
and
jle
lock
sub
add
and
loopne
xchg
mov
push
dec
push
xor
stos
test
les
adcb
mov
lret
inc
aas
pop
or
cmp
mov
sti
jle
iret
sub
lret
xchg
and
pop
and
ja
lods
push
scas
out
je
push
cmp
adc
sub
fwait
sub
gs
in
les
and
call
mov
sbb
cmpsl
mov
push
mov
mov
out
mov
and
xorl
in
test
or
or
out
add
shrl
push
sbbl
addr16
sub
or
fdivrl
add
rcl
mov
sub
xchg
mov
sbb
jmp
nop
push
cmpsl
movsl
mov
pop
in
es
mov
rcrl
icebp
cmpsb
mov
dec
mov
inc
and
xchg
into
lock
xor
hlt
fdivs
test
iret
or
lds
mov
inc
aad
enter
sub
push
mov
nop
loopne
test
aad
dec
adc
mov
pop
leave
sahf
jns
mov
mov
fcomps
lock
or
inc
jge
dec
pop
int3
loopne
push
mov
fsubrs
shll
fstp
pushf
pop
insb
sub
inc
or
jnp
mov
loop
nop
leave
sti
xchg
insb
loopne
iret
adc
in
mov
fs
loopne
cmp
daa
mov
daa
mov
nop
icebp
imul
loope
sub
fs
jbe
mov
in
xor
int
pop
jecxz
sub
jg
jecxz
outsl
sbb
jg
cmp
fwait
aad
mov
popa
cmp
or
out
fs
movsl
sub
sub
outsb
push
inc
sbb
lods
in
sub
loopne
lcall
inc
test
cltd
call
sbb
cmc
and
mov
dec
xlat
pop
popf
pusha
sbb
pop
or
out
pop
mov
sti
clc
ret
pop
outsl
mov
add
outsb
jae
push
lods
sbb
ds
in
sarl
jg
jle
sub
sbb
insb
ss
cmp
sbbb
mov
adc
xchg
fcompl
movntq
sbb
xchg
jns
xchg
imulb
in
add
xor
scas
mov
repnz
jae
jmp
dec
lods
int
ret
std
inc
aas
in
insb
mov
fucom
jnp
enter
xor
std
or
push
mov
mov
out
xchg
cmp
into
std
pop
pop
in
in
push
mov
std
push
loopne
xchg
cmpsl
es
pop
adc
adcb
stos
outsl
lock
scas
cmp
sbb
xchg
sti
lods
lret
imul
icebp
sub
cmp
movsl
pop
cmp
xor
pop
xor
lret
add
sub
sbb
sahf
popf
lret
mov
stos
jle
insl
sbb
mov
jne
flds
lods
dec
outsl
and
aaa
ret
scas
xorl
ret
and
jnp
jmp
inc
cmp
sbb
call
sub
sbb
pusha
mov
and
scas
fimuls
gs
lods
or
cld
test
push
xchg
and
xchg
jae
inc
cmpb
xlat
gs
pusha
pop
cld
pop
jmp
mov
ja
insl
cs
cmpb
add
out
push
fcomip
das
std
mov
sahf
out
cltd
stos
jns
lods
and
add
add
cmpsl
stos
sub
call
mov
scas
sub
daa
ja
in
pop
sbb
test
insl
aaa
out
pop
dec
xchg
test
out
xor
and
int
insb
mov
negl
jo
lret
das
sbb
jae
mov
add
dec
mov
xchg
aas
loop
stc
dec
sub
xor
cmp
xor
sbb
inc
xchg
adc
loope
bound
push
loop
ja
not
flds
int
lods
sub
out
test
sbb
mov
test
or
pop
jae
dec
repz
mov
mov
jecxz
xchg
insb
jne
pop
dec
mov
std
lods
out
push
pop
rclb
sub
out
call
dec
loopne
stos
sub
outsb
sbb
pusha
int3
mov
mov
xlat
movsb
push
shr
mov
mov
lods
adc
inc
xor
pop
add
mov
mov
imul
cmc
insb
pop
xor
test
scas
mov
adc
scas
shll
pop
dec
cmpsl
ret
xchg
in
loope
loopne
xor
insl
lock
mov
loop
in
clc
popa
fildl
and
mov
fidivs
adc
pusha
dec
inc
imul
sub
cmp
xor
pusha
pushf
xchg
cltd
adc
sarl
jle
push
sti
push
fsubrl
inc
xchg
fmull
pop
mov
stos
and
xadd
or
ficoms
daa
mov
decb
or
sub
push
das
mov
and
iret
adc
shrl
cmp
clc
add
test
out
and
xchg
dec
and
repnz
repz
sti
jmp
popa
repnz
es
lea
ja
in
add
das
cmp
mov
mov
je
inc
or
jg
cld
scas
out
cmp
xor
sub
mov
fimuls
scas
repnz
xor
dec
in
inc
lret
cmp
push
in
mov
mov
movsl
rorl
jecxz
in
xchg
sbb
iret
add
scas
cmp
cltd
inc
movlhps
push
and
in
ja
and
sbb
push
xor
mov
mov
mov
lret
add
out
jbe
or
adc
int3
shrb
xchg
dec
xor
loopne
inc
in
add
inc
in
sub
ret
push
mov
ret
test
cmpsl
pushf
add
imul
add
xor
loopne
adc
adc
lods
dec
xorl
mov
int3
and
mov
jecxz
jmp
das
mov
push
out
or
xchg
sbb
testl
cmp
fs
scas
mov
call
or
pop
popa
adc
push
mov
outsb
andb
test
in
insb
sti
cmp
fildll
out
lret
movsb
call
out
mov
add
pop
jecxz
sbb
mov
das
pushf
sub
cltd
sbb
call
stos
mov
loopne
mov
stos
ret
int
int3
mov
xchg
stos
fwait
lods
ds
gs
das
mov
sub
cs
sub
xchg
scas
fidivrs
cli
pusha
sub
scas
jecxz
mov
xor
lods
lds
cwtl
pop
fsub
xchg
gs
popa
cwtl
or
inc
test
in
nop
xor
inc
or
add
pushf
adc
add
inc
lods
jns
mov
cmp
and
pushf
dec
shl
int3
and
dec
insl
xchg
cwtl
push
nop
icebp
jge
push
add
sub
imul
sbb
cli
divl
push
push
pop
push
xlat
xor
dec
sub
out
sub
pop
pop
cmpsl
pop
push
push
test
in
stos
mov
mov
sub
pop
mov
xor
mov
push
test
push
mov
dec
fsubrp
movsb
mov
add
or
jae
fisubs
pop
jns
adc
out
mov
adcb
es
add
dec
das
xchg
xchg
sbb
flds
dec
loopne
ds
fisubs
sbb
sbb
pop
frstor
clc
cs
fldcw
clc
dec
and
lcall
aaa
fldt
dec
mov
xchg
outsl
push
cli
stos
sbb
cld
push
leave
push
cmp
lcall
addr16
mov
cltd
pop
dec
or
int3
and
inc
das
lahf
cltd
xor
icebp
and
cmp
loopne
addb
inc
mov
mov
in
inc
mov
lret
jae
sbb
lret
test
cmpsl
cltd
mov
iret
xor
pop
mov
pop
jns
sub
scas
pop
fcomip
mov
into
das
popa
rcrl
out
ret
fsts
fwait
into
out
into
scas
roll
lret
lcall
aam
lea
mov
ficoms
int3
inc
loop
lret
xchg
xor
les
and
dec
pop
push
aam
mov
xor
push
mov
shrb
insb
inc
add
mov
imul
ret
xor
sub
jecxz
add
test
mov
inc
fildll
imul
and
or
sbb
jp
popa
or
adc
pop
dec
scas
push
enter
aam
movsb
dec
shr
call
push
sti
insb
pop
xchg
adc
outsl
mov
fldpi
fucomi
ljmp
mov
lock
dec
into
lcall
jl
int
or
or
push
xor
jno
mov
jns
pop
cmc
int3
stos
roll
stc
mov
jae
cmp
sbb
mov
fistl
pop
out
shlb
repnz
test
dec
es
cmpsb
in
push
add
jp
loopne
fwait
sbb
lahf
lret
lods
fstpt
mov
fisubrs
imulb
inc
push
insb
test
dec
into
mov
add
insb
scas
add
jb
cld
hlt
jbe
in
sub
mov
dec
dec
scas
cmp
push
or
cli
outsb
movsl
ficomps
out
pop
js
hlt
ljmp
outsl
jnp
dec
int3
xor
shl
push
xchg
shll
icebp
test
js
sbb
in
inc
sbb
push
cltd
enter
sbb
test
pushf
data16
lods
popa
sahf
clc
sub
test
sbb
sarl
push
aaa
mov
imul
xchg
in
mov
adc
cmp
scas
gs
push
stos
sbb
push
adc
js
or
insl
mov
add
mov
movsl
jmp
cmp
jo
cmp
aam
rol
rorb
jno
xchg
lock
mov
iret
cmp
dec
rcl
jecxz
sbb
iret
xchg
jbe
scas
js
mov
inc
mov
ret
sub
mov
sbb
push
xor
add
add
add
aas
ds
scas
jl,pn
frstor
jnp
xchg
aad
rorb
movsl
jo
jne
push
in
rcrl
sub
aam
dec
mov
das
xor
mov
shr
leave
imul
ljmp
pop
sub
pop
mov
iret
dec
repnz
add
loopne
jbe
call
or
lret
imul
add
test
movsb
test
push
xorb
mov
test
out
jle
mov
test
xor
gs
loop
mov
addr16
xchg
outsl
cld
pop
mov
cmp
leave
lock
mov
rcr
and
jecxz
aam
rorb
fisubrs
mov
rorb
data16
push
pop
xor
jmp
scas
fnstsw
or
aaa
icebp
insb
inc
jl
out
addr16
jnp
jp
pop
int3
cmp
xchg
cli
fistps
stc
mov
pop
jmp
cmp
nop
lods
sub
and
int
jl
mov
insl
iret
cltd
adc
push
sub
out
stos
insl
es
call
and
mov
insb
xchg
xor
fwait
jnp
xchg
sbb
das
and
stos
filds
into
xor
pop
testb
mov
je
addl
lock
xchg
add
arpl
sti
sbb
aaa
idivl
push
shl
inc
jnp
push
xchg
mov
subb
jne
fwait
adc
in
push
sahf
pop
test
mov
lock
aas
xor
lret
sub
jmp
xchg
pop
es
scas
xor
pop
mov
and
adcb
or
xor
cmc
repz
pop
outsb
mov
xchg
fidivrs
outsl
fidivrs
mov
xlat
fwait
arpl
or
jns
aam
pop
sbb
stos
and
je
das
lds
sbb
popa
mov
adc
lock
cmp
push
or
mov
and
mov
or
mov
pusha
xchg
mov
std
and
pusha
dec
cs
insb
popa
fadds
push
dec
and
xor
out
fcomp
add
in
gs
movsl
add
iret
daa
movsb
pop
xorl
and
movb
adc
mov
into
enter
mov
push
sbb
or
inc
xlat
adc
adc
out
outsb
ficompl
and
dec
cltd
repnz
mov
imulb
test
call
scas
clc
cmp
xchg
push
out
sbb
pushf
rol
pushf
iret
sub
xchg
dec
and
outsb
adc
pop
push
lods
daa
je
jo
sbb
adc
or
pop
push
sub
push
fisubrs
sub
fwait
out
in
xchg
jmp
inc
adc
or
ds
in
lret
dec
and
mov
pop
mov
add
cmp
dec
jge
loop
mov
js
test
fcompl
outsl
push
rol
cmc
loopne
mov
in
addr16
or
push
loopne
iret
adc
add
in
cli
mov
test
mov
popf
and
in
sbb
hlt
sub
lret
dec
and
push
xor
mov
in
and
jnp
in
xchg
sub
loopne
inc
mov
call
pop
sbb
pop
cmp
ret
roll
ret
add
xchg
xor
xor
imul
lods
leave
lods
xchg
lret
jo
pop
cmp
lret
xchg
cmpsl
call
sbb
xchg
jle
ret
aas
jl
lds
xchg
rcl
cmpsl
ja
cmpsl
mov
mov
xor
xchg
pop
insl
or
clc
lods
fs
xor
imul
mov
test
insl
sti
and
mov
ds
add
gs
flds
adc
dec
repz
dec
xor
mov
out
mov
mov
loopne
outsl
or
das
aas
cld
adc
lock
pop
push
cmp
test
add
je
mov
in
jnp
and
mov
xchg
rolb
in
mov
xchg
jbe
test
loopne
jg
xchg
repz
adc
or
stc
pushf
aad
sub
xor
sbb
out
ret
adc
and
fwait
inc
sahf
dec
jmp
xchg
mov
fyl2x
or
pop
dec
les
ret
inc
xchg
pop
or
insl
and
or
fs
pop
arpl
mov
add
test
aam
lods
ds
loop
mov
push
cmp
sbb
arpl
fs
adc
and
xor
ja
mov
inc
dec
fdivs
inc
jl
pusha
lods
add
pop
icebp
aas
jmp
cmc
push
lcallw
mov
out
cltd
scas
xlat
imul
adc
out
push
xorl
push
popf
mov
subl
jns
or
ds
sbb
out
mov
lods
cmpb
dec
enter
and
sub
push
jp
xlat
lods
sti
mov
insb
mov
icebp
insb
sbb
pop
xor
mov
or
cmp
jbe
stos
dec
icebp
dec
call
xor
rcrb
jo
fcmovu
jmp
cmp
in
pop
jnp
xchg
negl
outsl
sub
sub
push
mov
shrb
mov
push
sbb
mov
ret
lds
push
loopne
xchg
lret
sti
sbb
mov
mov
mov
or
addr16
pop
jne
jne
outsb
mov
aas
rcrl
adc
mov
fs
stos
or
mov
bsf
inc
push
call
test
mov
aas
xorl
add
pop
sbb
out
adc
arpl
insb
sbbb
sbb
jmp
pop
pusha
mov
addl
popf
out
add
fstps
jbe
addr16
mov
mov
dec
and
mov
call
jg
inc
jp
and
mov
negb
sbb
inc
mov
fistps
ljmp
add
xchg
mov
fsubl
add
imul
imul
push
mov
test
push
and
sub
fldenv
das
pop
jno
jns
sub
push
inc
rorb
push
ljmp
sbb
mov
repz
add
scas
push
enter
lret
clc
imul
insl
dec
sbb
arpl
push
subb
out
lret
cmp
jle
out
jnp
loopne
aam
insl
dec
push
leave
outsl
mov
or
push
inc
in
mov
adc
lcall
mov
push
inc
leave
mov
dec
jae
mov
aam
sub
or
arpl
outsb
lret
mov
xorl
pop
sub
ja
pop
lret
pop
xchg
das
mov
dec
xchg
jg
and
sbb
mov
imul
bound
int3
fwait
insb
scas
ror
enter
push
adc
cli
repz
jnp
dec
pop
lcall
or
and
pop
adc
and
or
ret
jae
ljmp
inc
ficomps
shrb
hlt
adc
insb
lret
pop
push
inc
imull
ret
cmp
add
dec
int
in
jge
adc
int3
sbb
mov
stos
aad
mov
sub
leave
pusha
call
mov
movsl
pop
dec
lods
cmp
leave
icebp
pop
mov
movsl
and
pop
sub
mov
pop
ret
pusha
xor
push
cs
add
or
mov
push
pop
and
int3
outsl
stos
pop
xor
aam
das
jne
cltd
adcb
and
and
cmpsb
fcomps
rorl
in
lock
inc
mov
loopne
or
jmp
in
push
jb
sarl
push
loopne,pn
stos
jo
lock
cmp
push
nop
cmpl
pop
test
dec
mov
daa
popf
incl
push
mov
and
pusha
cmp
mov
rclb
movsl
imul
lods
mov
sub
add
loopne
cwtl
jo
enter
pop
mov
shrb
pop
test
scas
aad
lock
pop
xlat
xor
cwtl
les
fimuls
jecxz
scas
cmp
ret
dec
outsl
sbb
jb
lret
and
scas
imull
xlat
pop
inc
mov
stos
shrb
fbstp
sbb
xor
imull
pushf
outsb
cmpsl
or
ss
leave
test
xor
sahf
or
xchg
sarl
xchg
jecxz
fcoms
iret
scas
mov
xchg
pop
out
out
sbb
in
push
mov
inc
enter
popf
push
adc
xchg
cwtl
sub
mov
and
pop
mov
xadd
push
std
cmc
sahf
mov
mov
sub
and
aam
imul
xor
mov
stos
jecxz,pt
aam
scas
add
sub
shrb
out
xor
and
cwtl
sub
bound
pop
jno
mov
or
pop
pop
and
sbb
loope
jns
pop
int
xchg
push
ljmp
outsl
add
lods
or
fisttps
daa
push
enter
repnz
loopne
iret
push
jl
loopne
jne
ret
mov
cmp
cmc
in
adc
inc
jmp
rcrb
mov
or
outsl
inc
aam
pop
and
cmpsl
repz
push
mov
int
fwait
loopne
fdivs
xchg
mov
outsl
xor
ljmp
inc
imul
xor
int3
sbb
jle
mov
adc
fsubs
in
lahf
sbb
cmp
jge
movsl
and
xor
shll
dec
pop
sub
xor
jg
lret
fsub
cs
stc
mov
push
daa
lock
cs
clc
orl
pop
out
and
dec
mov
sub
and
and
mov
cld
xchg
rcl
aas
loop
bound
inc
pop
mov
sbbl
gs
out
push
adc
xchg
lds
pop
pushl
mov
fsubrs
leave
mov
popa
cmc
movsb
stc
icebp
sahf
aas
push
ds
pop
sub
pop
stos
cs
ss
mov
adc
and
icebp
cltd
dec
sahf
insl
bound
xchg
pop
rolb
mov
mov
mov
frstor
inc
imul
mov
mov
mov
push
push
loop
lods
outsb
imul
or
lds
insl
pushf
or
scas
and
jle
loope
test
dec
push
fsubrl
ljmp
test
adc
lds
mov
movl
outsb
cltd
push
pop
cltd
or
mov
insb
into
clc
loopne
out
lret
add
pop
dec
shlb
ds
scas
xchg
outsl
loopne
scas
subb
and
loop
push
push
test
scas
insl
loop
xor
stos
out
pop
in
movl
jle
push
ja
rcl
push
scas
das
push
pop
dec
add
mov
test
addl
sbb
insb
xor
es
insl
test
popa
jae
xchg
movsl
adcb
nop
scas
iret
outsl
fbld
scas
aaa
jge
xchg
push
les
and
inc
mov
aas
xor
add
mov
scas
sbb
inc
scas
out
mov
aas
sub
js
add
fldln2
dec
dec
cmp
call
adcb
mov
or
sahf
cmp
mov
cs
inc
imull
int3
shl
mov
aas
loopne
dec
out
lret
dec
pop
jne
scas
pusha
sub
das
outsb
fisubrl
not
ljmp
in
scas
cltd
pop
gs
aad
add
loop
xor
andb
out
mov
pop
out
movsb
jnp
stc
mov
out
filds
aas
push
and
mov
movsb
and
fsubp
movsb
scas
dec
mov
cld
lret
das
pusha
inc
in
je
jge
xchg
pop
inc
fcomps
mov
mov
andl
mov
pop
fadd
jge
and
fwait
xchg
icebp
insl
sbb
sbb
iret
es
jbe
mov
fisubrl
popa
inc
enter
sub
into
in
aad
jg
les
shl
jb
fsubs
clc
fistpll
cmpsl
fcmovb
sarl
rcrb
lods
ja
in
mov
cld
lret
es
cmpsl
into
jo
mov
pop
sub
aas
hlt
jne
push
scas
cltd
and
iret
lret
pop
adc
add
es
push
cmp
mov
fbld
outsl
dec
out
xchg
mov
das
mov
xchg
dec
add
imulb
pushf
sbb
adc
lods
loopne
add
in
adc
lahf
inc
inc
lods
test
mov
lods
cmp
and
pop
mov
rcl
inc
lock
dec
and
ret
aaa
jg
cwtl
enter
mov
out
mov
push
xchg
inc
mov
jb
mov
shrl
scas
inc
out
adc
aam
loopne
in
jl
imul
stc
movntps
xor
scas
and
jl
pop
pop
xchg
adc
adc
add
scas
scas
pop
cmp
repnz
dec
xchg
sub
aas
jmp
shrb
xchg
mov
xchg
nop
inc
push
aaa
sbb
push
cmpsl
iret
out
push
adc
inc
in
shlb
and
sahf
insb
rclb
leave
cmc
inc
jmp
sub
fistpl
xor
jecxz
repnz
jns
add
add
xchg
fucomp
jmp
sbbl
inc
adc
outsl
mov
insl
adc
repz
pusha
ja
in
inc
loopne
mov
adc
stos
loopne
mov
leave
ljmp
pop
sahf
sub
sub
das
pop
jle
jo
mov
test
out
cmpsb
mov
xor
sahf
mov
rcrb
inc
sub
or
push
mov
inc
movsl
js
dec
pop
cmp
dec
push
outsb
xor
loop
pop
test
rcl
aas
ficoms
lods
add
insl
mov
icebp
divl
push
mov
scas
mov
pop
and
pop
mov
rolb
aaa
sahf
mov
mov
in
xchg
pushf
add
cmpl
aad
xchg
add
pop
push
mov
clc
ja
or
mov
stos
inc
sbb
cwtl
fs
js
xchg
inc
mov
outsb
lret
shlb
into
lods
jle
cmc
fcmovbe
inc
dec
pushf
sbb
mov
xor
and
fs
pop
in
jo
cmp
jp
iret
sti
movsb
inc
test
inc
xchg
push
xor
in
iret
jl
and
lahf
sub
cld
bound
dec
jmp
push
and
sub
and
scas
push
sub
add
jmp
xor
and
push
sub
cmp
ja
sti
push
inc
jo
push
and
jmp
mov
xor
andb
xlat
popf
shl
lss
out
bound
xorb
loop
mov
insb
jle
out
sbb
xchg
xchg
nop
xchg
imul
pusha
lret
loop
jp
mov
inc
decl
mov
sbb
in
subb
cmp
xor
int3
lods
pop
inc
pop
push
mov
mov
je
mov
roll
sub
fadds
scas
cld
scas
xchg
push
adc
subb
jae
add
vmovapd
inc
rcrl
push
mov
fwait
les
inc
out
xor
jo
es
ret
xchg
and
inc
je
cli
pop
out
adc
or
into
and
scas
push
sub
lcall
movsb
in
fwait
mov
call
mov
pop
dec
inc
pop
scas
in
mov
sub
in
shll
data16
push
cmpsb
mov
dec
fmuls
cmp
xor
dec
add
fstpl
mov
enter
mov
loopne
pop
popf
enter
xchg
test
pusha
call
inc
push
sbb
push
inc
out
negb
push
and
or
imul
adc
cwtl
adc
cmp
dec
shlb
fadd
aam
add
nop
cmp
jle
mov
mov
pop
mov
idiv
cli
loopne
cwtl
ret
jns
dec
xor
cld
cltd
fs
aaa
scas
jnp
push
je
lds
ja
push
jl
dec
pop
loopne
subl
shr
out
in
ljmp
gs
jecxz
aas
fs
fwait
xchg
outsb
mov
add
stc
mov
jle
sbbb
pop
sbb
xor
mov
push
dec
popl
nop
clc
fld
data16
cmp
mov
das
pop
bound
in
lock
ljmp
daa
mov
jg
pop
mov
mov
inc
or
cltd
fcomp
test
and
fsubs
test
shlb
add
sarl
or
aas
fs
test
aam
call
icebp
mov
stos
pushf
cmpsb
add
inc
xchg
sbb
mov
mov
mov
rcr
hlt
mov
jnp
aaa
push
in
mov
outsb
mulb
scas
inc
ret
pushf
in
loope
rclb
imul
dec
imul
xchg
scas
jecxz
push
adc
dec
pop
test
push
stc
push
inc
sub
cmpsb
xchg
cmp
adc
mov
cmc
jp
jge
aaa
rolb
pushf
sahf
add
cltd
mov
jne
rcl
out
adc
fcom
mov
je
push
ss
test
xchg
out
das
jbe
and
and
insb
movsb
push
cmc
adcl
xlat
out
cwtl
in
lods
and
lods
xchg
roll
scas
add
push
outsl
orl
roll
sets
pop
sub
aas
enter
push
jmp
cs
scas
inc
mov
scas
imul
testb
mov
mov
lods
mov
aam
lea
aas
rol
ret
test
push
outsl
mov
jmp
jecxz
loope
ds
sbb
cmp
aas
or
add
xorb
stos
iret
pop
add
mov
ds
push
xor
cmp
hlt
pmullw
cmpb
out
adc
test
sub
jmp
xor
mov
es
movsl
scas
ret
sub
jo
push
add
sub
push
xor
sbb
das
or
xchg
dec
int
sti
and
and
cli
cltd
inc
out
push
test
fildll
rcll
jno
or
addr16
jne
leave
repz
hlt
add
stos
mov
xlat
xchg
in
lret
or
push
repnz
fcompl
mov
xor
insb
loope
out
ror
push
ret
xchg
mov
and
sbb
or
js
rolb
in
dec
push
sbbb
push
das
xchg
insb
sbb
dec
scas
pusha
push
cmp
jns
gs
xor
inc
in
fwait
test
or
cmp
fistpll
pushf
adcb
fstps
das
pusha
scas
push
cmpsb
push
fidivs
mov
mov
mov
adc
pusha
inc
mov
lret
and
nop
nop
pop
sub
ja
ret
je
out
cltd
push
gs
and
push
scas
push
xchg
test
xorb
push
adc
sbb
out
cmp
jecxz
out
xor
pop
mov
pop
xor
push
jl
mov
nop
aam
incb
sub
cmp
or
stos
into
pop
loopne
shlb
mov
or
call
scas
push
and
lds
int3
movsb
push
cs
insb
ljmp
imul
ret
jg
xlat
sub
insb
les
loopne
rcl
leave
push
dec
pop
test
aas
cmp
fwait
pop
rorb
add
test
rorl
push
test
ljmp
push
mov
pop
mov
push
insb
xchg
mov
cmp
in
mov
minps
test
dec
out
pop
xchg
mov
sub
imull
pop
loopne
sub
inc
leave
mov
iret
mov
lret
orl
lock
scas
stos
sbb
stos
in
ja
pop
ds
or
and
fisttpll
rclb
cmp
pop
inc
pop
lock
xchg
stos
pushf
fistpl
pusha
mov
hlt
sub
mov
test
and
sub
mov
std
scas
nop
sbb
add
stc
insb
stos
enter
dec
test
cltd
xchg
xchg
mov
mov
imul
out
imul
sub
ret
mov
ljmp
adc
int
xor
jmp
inc
push
sbb
bound
andl
fwait
rorb
nop
push
add
mov
cltd
fnstsw
hlt
fstp
push
jae
pusha
jl
sahf
outsb
xor
jl
push
xor
out
xchg
sub
mov
adc
outsb
jbe
movsb
adc
ljmp
jno
pushf
mov
insb
ds
add
and
xchg
pusha
cmp
cs
gs
adcb
mov
or
push
sub
pop
insb
sbb
push
jb
mov
loope
adc
addr16
fldcw
mov
push
jnp
in
xchg
mov
ss
xchg
adc
cmp
mov
ja
hlt
or
xorb
ljmp
pop
and
scas
add
mov
aaa
into
in
fwait
xchg
stos
mov
inc
scas
xor
divl
rolb
jg
xchg
pop
testb
dec
repz
lods
mov
outsl
cmp
fldt
fsubrp
push
out
push
dec
imul
sarl
sbb
sti
test
jmp
mov
add
sbb
pop
inc
lock
ret
call
jno
in
ret
add
adc
xor
stc
int
mov
mov
sahf
icebp
fdivrl
in
das
xchg
sahf
loop
inc
mov
mov
scas
pop
test
xor
int3
cmp
jle
pop
rclb
and
or
xor
adc
push
vmwrite
mov
xchg
nop
enter
sbb
aas
mov
mov
push
or
subl
scas
mov
sbb
in
fnstcw
ss
insb
cmc
and
sbb
daa
ret
cwtl
pop
int
fmull
out
xor
ror
test
pop
adc
push
cmc
mov
ds
stc
jge
xchg
popa
je
js
fidivs
ficoms
test
lods
test
aas
fdivrl
pushf
xor
jl
push
popa
or
inc
pop
sti
rcl
test
cmpl
pop
cwtl
aas
mov
in
cwtl
fmul
pusha
call
pop
shll
fistl
and
outsb
in
aam
pop
fsubrl
cwtl
lds
cwtl
sbb
ret
outsb
sbbb
ljmp
mov
in
call
aas
sarl
adc
pop
sar
cltd
cli
cltd
jle
int3
sbb
cmpsb
js
scas
pusha
mov
cs
push
inc
lds
xlat
sub
push
out
out
push
adc
or
mov
add
mov
sub
or
sub
pop
into
dec
fwait
mov
test
push
lods
aas
jae
outsl
push
adc
push
jne
inc
cmp
stc
roll
or
lock
lock
sub
insl
inc
push
mov
fidivs
inc
enter
leave
out
int3
ja
pop
stos
fnstcw
and
mov
fildll
addr16
sub
push
jl
mov
pop
mov
mov
ret
adc
pop
cltd
mov
popa
xchg
insb
clc
mov
out
bound
ja
mov
rcrb
cli
lods
test
dec
pop
add
xor
sbb
insb
popa
jno
mov
and
loopne
mov
fimuls
sbb
jmp
jnp
in
jo
sarb
scas
fs
or
shrb
mov
add
scas
pop
out
std
add
adc
mov
sub
dec
out
pop
cltd
and
scas
pusha
mov
push
ljmp
stc
jb
iret
mov
je,pt
lret
popa
scas
sub
push
mov
mov
sbb
push
in
mull
bound
pop
add
xor
push
ja
repnz
and
iret
std
pop
mov
scas
and
fstpt
pop
cmc
fcompl
mov
adc
cmp
jnp
fldcw
rolb
ret
gs
je
test
ret
lret
dec
test
inc
xchg
xor
mov
and
xor
fistpll
orl
cmp
and
in
fsubl
adc
cmp
jbe
call
mov
bound
dec
test
push
insl
mov
lods
insb
outsl
mulb
das
mul
je
and
push
push
xor
mov
mov
lods
mov
into
mov
lods
mov
dec
das
sbb
pop
pushf
or
out
loop,pt
lret
xchg
jnp
insb
mov
pop
outsb
xchg
sar
and
pop
jnp
sar
lcall
fwait
xchg
fisttpl
sbb
insl
test
in
scas
jecxz
mov
xor
lock
jle
fsubs
xchg
addl
test
inc
or
ds
movsb
popa
movl
jmp
test
jo
mov
sub
faddl
push
jns
pusha
xor
pop
push
aam
push
xchg
mov
xor
adc
out
sub
aam
cwtl
lret
mov
imull
jmp
sti
pop
stc
xchg
sahf
shl
xlat
fs
dec
and
imul
stos
sub
mov
test
dec
lock
sub
in
bound
sahf
and
or
fmuls
lea
xchg
and
shlb
aad
push
mov
push
ret
dec
in
sbb
cmc
out
sbb
out
fwait
jne
in
mov
out
mov
mov
lcall
xchg
in
fisttpl
lods
jbe
push
daa
int
scas
sti
insl
pop
lock
mov
cmp
test
or
sti
adc
sub
inc
or
mov
pop
lods
sbb
leave
or
mov
add
ds
pop
mov
imul
sar
push
fdivrl
add
dec
mov
push
rorl
out
sub
and
popa
push
dec
in
jle
notl
lods
cmp
inc
in
mov
fcmovnu
pop
cld
jb
sub
pop
mov
outsb
mov
add
mov
jns
ret
fcompl
call
xor
call
mov
shlb
mov
or
sbb
pop
cltd
inc
sbb
xor
sbb
xchg
mov
in
sbbl
add
outsl
xorl
shl
sahf
in
negb
ds
or
cmp
popa
fistps
or
int
xor
out
xchg
dec
sub
cld
sarb
popl
jle
aad
fdivl
aam
and
mov
loopne
scas
xchg
notb
int
nop
sub
xor
sbb
lret
cltd
cmpsl
jmp
gs
aam
pusha
es
mov
or
ret
push
mov
out
test
cmp
or
jnp
xor
movsl
and
repz
mov
xchg
add
fldt
push
jle
pop
in
cmp
and
cwtl
push
add
add
sub
icebp
inc
jle
mov
ja
or
mov
jae,pt
sub
mov
and
ficomps
cmp
loop
fwait
sbb
xchg
inc
rcrl
pop
cmpsb
xchg
fadds
rorl
jg
cltd
outsb
mov
leave
cmp
psubw
lods
mov
mov
mov
add
or
jae
inc
add
cltd
fcmovnbe
jmp
cmpsl
rolb
das
call
sti
sub
mov
aad
dec
dec
gs
pop
mov
xchg
add
add
sbb
push
mov
jne
in
jb
push
ficompl
sub
mov
inc
into
sub
push
fwait
push
ret
inc
lods
add
push
faddl
cmc
fld1
mov
push
jae
fucom
inc
cld
scas
not
mov
sbb
pop
fs
insb
pop
test
mov
addr16
jl
addr16
mov
pop
cli
stos
mov
dec
lcall
in
call
test
fwait
xor
out
into
mov
pop
xchg
push
mov
mov
ficoms
fmull
pop
push
and
adc
cli
lods
cmpb
mov
push
into
iret
fs
loopne
stc
sbb
das
xchg
pop
aaa
fs
jecxz
jnp
sbb
inc
and
mov
adc
push
sub
jle
fildll
test
lods
push
inc
daa
sbb
in
stos
mov
mov
push
lcall
inc
cmp
popa
mov
cmc
push
pop
in
xor
rol
jae
inc
cmp
sbb
dec
pop
lock
xlat
scas
shll
inc
fsub
xor
inc
outsw
mov
lods
in
xor
push
xor
out
pop
call
mov
ja
into
test
pusha
inc
cld
mov
xchg
mov
aas
push
jge
cld
lds
in
jae
out
mov
int
dec
jns
in
sub
ret
outsl
inc
shlb
cmc
iret
jecxz
lahf
mov
add
les
pusha
in
mov
out
jle
cltd
test
add
outsb
dec
mov
insb
jb
mov
sti
cltd
test
loopne
cs
cmc
fsubs
pop
or
inc
sbb
and
pop
mov
dec
cmp
pop
cld
pop
test
mov
push
jle
inc
sub
out
cmp
ja
fstl
insl
jle
data16
push
int
in
sti
les
dec
xchg
dec
test
dec
fidivrs
push
loopne
ficoms
add
cltd
dec
popf
inc
popf
jl
sbb
jno
sbb
out
in
adc
push
or
mov
or
sbb
cmpsl
and
pusha
cmp
movsl
inc
aas
xor
mov
int3
in
es
or
iret
sub
mov
jns
inc
mov
rol
lret
cwtl
aam
addb
mov
inc
pop
stc
sub
adc
sub
std
mov
les
mov
mov
mov
clc
movsb
loopne
jne
pusha
mov
inc
test
push
shlb
mov
mov
rcll
mov
inc
sub
push
xchg
in
fildll
cltd
test
jge
int3
push
xchg
pop
sub
int
jp
loopne
es
test
xlat
sub
pop
stos
ljmp
ret
cwtl
sub
jne
dec
out
ret
ljmp
or
adc
int
jnp
in
cltd
or
lcall
pushf
pop
mov
pop
insl
aas
pop
adc
out
cs
sbbb
sahf
push
sub
addl
cld
push
dec
inc
int3
das
jnp
add
lods
int
add
out
mov
insb
inc
xor
shrb
sbb
and
into
or
pop
inc
pop
push
lods
int3
loopne
pop
pop
xchg
test
and
out
fwait
mov
cs
lock
lds
out
int
dec
test
jecxz
scas
lods
ljmp
imul
mov
mov
cmp
iret
das
lock
enter
iret
mov
ds
mov
sbb
sbb
mov
cli
cmp
stos
push
and
out
arpl
mov
mov
mov
add
hlt
xchg
push
dec
add
les
push
xor
loopne
int3
and
cmp
mov
cwtl
fsubl
mov
in
cmp
adc
mov
or
mov
xchg
std
sbb
xchg
cmp
ret
mov
mov
mov
fwait
xchg
frstor
mov
shrl
inc
jl
int
mov
repnz
and
dec
push
mov
pop
outsl
testl
or
test
sbb
dec
test
sbb
mov
mov
dec
push
loop
sub
sahf
mov
cmpsl
mov
or
sbb
fistpll
jl
dec
es
icebp
xchg
out
ja
mov
into
jne,pn
pop
xor
fildll
fucomi
fwait
mov
add
cmp
sbb
test
inc
jne
mov
je
cmp
cmp
push
xchg
iret
out
fildll
out
sahf
pusha
mov
add
movsl
pushf
addb
std
jmp
lock
adc
fisttpll
mov
shlb
pop
pop
add
mov
out
sub
jmp
adc
push
out
and
jecxz
movsb
rcrb
lcall
pop
enter
into
inc
inc
cmp
addb
sub
ljmp
mov
mov
das
xchg
shrl
in
popa
sub
sar
adc
aas
in
mov
loopne
nop
mov
cmp
outsl
hlt
lea
lret
sub
aas
ret
push
pop
mov
shll
sub
cmp
fistl
push
hlt
push
and
dec
push
mov
pop
addr16
sbb
jle
lret
lds
dec
dec
and
sub
dec
mul
jg
scas
inc
stos
cld
int
popa
shr
jmp
and
scas
adc
in
outsl
dec
add
mov
daa
and
jo
lock
cmp
mov
adc
xor
dec
cmp
icebp
xor
mov
int
cmp
outsb
clc
lret
out
in
mov
mov
lcall
fwait
pop
fidivl
call
andl
popa
fsubl
mov
and
cltd
pop
insl
mov
cmp
pusha
push
into
sbb
or
cmp
aas
mov
andb
in
das
scas
pop
xor
stos
lret
xchg
out
cmp
mov
int
shll
push
scas
add
int
scas
addr16
push
jle
cmc
lods
daa
outsl
xchg
push
shrl
push
std
cs
adc
pop
scas
out
frstpm(287
outsl
insl
push
jg
pop
out
inc
xor
sahf
cmpsb
sahf
xchg
loopne
pop
pop
in
push
aas
out
jno
mov
sbb
out
push
sbb
aam
icebp
xor
pop
stc
cmpsb
pop
dec
insl
ljmp
ret
imul
mov
je
lods
pusha
jp
add
mov
ja
add
fdivrl
jnp
mov
mov
jns
mov
adc
test
or
xchg
and
insb
subb
push
jae
mov
jge
cmpsb
cli
push
test
sti
mov
sbb
shlb
fdivl
andb
enter
stos
sub
or
test
mov
and
inc
mov
jne
pop
arpl
mov
jno
cli
out
push
repnz
dec
inc
mov
and
jecxz
scas
ret
bswap
and
pop
add
cmpsb
scas
fucomp
mov
in
jb
cmp
cs
es
fucomip
xchg
sub
lret
push
aas
mov
out
dec
pop
pop
mov
mov
xchg
pop
cmp
pop
cs
scas
loopne
fdivl
mov
test
push
outsl
sbb
sub
bound
push
sub
inc
xchg
shrl
inc
xchg
icebp
lods
push
jp
fadd
lock
mov
dec
mov
iret
dec
and
sub
cmpsb
scas
arpl
sbb
stos
je
ret
or
jb
das
sbb
push
inc
and
adc
push
je
iret
nop
pop
loopne
mov
fwait
dec
sbb
daa
dec
sti
fadds
test
jp
xorps
pop
lret
cmc
out
lods
jl
jae
shl
adc
andl
pop
jmp
lods
push
xlat
or
inc
iret
out
fcmovb
cmpsl
jmp
insl
negl
sbb
jle
shlb
mov
xor
in
push
das
pop
in
pusha
out
pop
out
push
inc
inc
daa
movsl
dec
outsl
fcmove
repnz
inc
out
insb
subb
mov
mov
pop
negb
sbb
imul
inc
out
call
lds
aas
addr16
push
mov
imul
cmp
dec
in
insb
pop
out
add
push
and
adc
ljmp
fmuls
outsb
mov
test
test
roll
jno
xlat
stos
out
mov
xchg
andl
fdivl
jmp
pusha
push
negb
cmp
out
add
aad
out
mov
and
sub
mov
gs
xchg
sbb
inc
jmp
mov
lea
jge
xchg
cmp
add
inc
dec
inc
dec
mov
jno
xor
xor
lahf
jmp
add
jo
mov
jne
subl
lods
cmp
popa
pop
mov
fdivl
out
bound
mov
inc
dec
dec
pop
jcxz
addr16
push
lods
mov
jg
push
shll
pop
call
mov
cwtl
dec
or
and
jmp
loopne
ja
out
and
imul
ret
xor
jb
fwait
xlat
in
dec
adc
pop
jmp
enter
test
js
pusha
ret
mov
clc
scas
addl
enter
add
mov
sbb
stc
xor
pop
cli
jno
inc
xchg
fs
push
subb
outsb
mov
xchg
sub
push
mov
mov
jo
xor
and
aas
jns
negl
inc
push
push
push
inc
push
pop
and
adcb
mov
aam
push
pop
cs
jl
lds
sub
cs
lahf
cli
outsb
xor
push
outsl
sbb
inc
sbb
dec
in
inc
adc
push
repz
andb
sub
inc
out
aam
inc
cmp
pop
call
test
push
scas
mov
pop
xchg
aas
mov
icebp
inc
test
int
fnsave
xchg
mov
repz
nop
ss
aad
xor
jo
outsb
jb
jge
add
imul
pop
mov
sti
mov
call
cld
insb
or
or
in
inc
push
sar
inc
mov
sbb
sahf
pop
aas
inc
scas
push
push
adc
decb
popf
or
dec
sbb
adc
ret
les
inc
xor
mov
mov
das
loopne
xor
test
sbb
leave
out
iret
inc
or
mov
sub
dec
leave
ljmp
roll
sub
popf
int
xchg
cs
push
leave
int
out
sub
jmp
call
and
test
mov
mov
out
popf
sub
lret
in
fcomip
inc
add
add
scas
icebp
push
sahf
xor
xor
ret
xlat
out
in
outsl
mov
pop
out
add
in
ficomps
shlb
xor
xor
fbstp
adc
mov
fisubrl
lret
scas
out
jbe
scas
test
loop
out
lahf
insb
fsubr
pop
pop
jne
dec
xor
jmp
shl
xor
or
ja
xchg
or
push
sti
outsl
and
mov
adc
js
mov
jge
mulb
cmpsb
xchg
das
inc
outsl
loopne
and
push
adc
xchg
stos
cmpsb
and
sub
inc
in
xchg
push
adc
outsl
adc
mov
xchg
mov
movsb
adc
addr16
out
lea
lret
and
cmpsb
add
jmp
pop
pop
fidivl
or
fbstp
lea
ss
lea
mov
arpl
and
lcall
lods
insb
mov
jnp
pop
das
mov
xor
lods
add
mov
les
cmp
or
sub
and
orb
dec
cli
add
xchg
dec
push
mov
lret
jb
movsb
loopne
xchg
dec
sub
mov
push
mov
mov
bound
rcl
les
pop
fldcw
scas
outsl
push
ds
jb
push
jl
outsl
pop
aam
push
insl
mov
out
movsb
and
cld
shlb
mov
and
andb
ror
pop
scas
or
mov
pop
pop
xor
arpl
nop
loop
leave
xchg
stos
jb
bound
mov
movsb
inc
mov
xlat
jb
insb
sub
dec
add
mov
cmpsb
test
data16
lock
movsl
xchg
cltd
mov
add
hlt
and
aas
inc
inc
pop
outsl
mov
mov
and
in
sbb
mov
jmp
imul
xchg
pop
pop
insl
lcall
out
scas
sub
jns
or
pminsw
cmp
and
outsl
in
loop
sub
xchg
pusha
xor
inc
push
inc
out
idivb
mov
pop
fninit
cmp
out
inc
out
sub
in
cmpsb
dec
cld
clc
int
sub
sub
sbb
pop
add
call
in
fnstsw
cmp
and
aas
xor
jmp
das
lahf
nop
mov
scas
cmp
lods
mov
add
xor
popa
in
cmc
test
jne
add
js
fwait
and
push
or
rolb
scas
xor
out
dec
test
shll
mov
ja
test
pop
adc
pushf
dec
fcmovb
adc
nop
mov
test
mov
cmpb
mov
xor
inc
int3
sub
cwtl
mov
outsl
rorl
subb
pop
inc
orl
push
nop
pop
xchg
dec
mov
inc
insb
and
jmp
fdivl
mov
imul
fsub
push
cli
loopne
loopew
cmpsl
stos
out
push
test
and
inc
scas
lods
out
outsb
xchg
pop
cltd
cltd
inc
pusha
stc
test
shlb
std
adc
cwtl
ret
repnz
clc
mov
in
xchg
std
push
popa
cltd
into
std
out
mov
std
movsb
lret
adc
imul
push
mov
pop
loopne
in
fisubrl
xor
jp,pt
repnz
jno
mov
outsb
push
cltd
ficoms
scas
pop
fucomip
pop
mov
int
test
fisttps
mov
sarl
sbbb
call
ret
lahf
int3
std
stc
insb
add
les
scas
out
sar
jle
outsl
mov
sbb
aas
repnz
out
lods
aaa
jbe
sahf
cmpsl
icebp
pop
inc
pop
das
and
andb
xlat
jbe
adc
add
inc
outsb
jbe
fidivrs
sub
adc
pop
pop
jle
pop
or
jbe
push
cmp
dec
out
sub
mov
addb
fcomip
in
ret
add
mov
xor
popa
imul
jnp
sahf
sbb
lods
stos
jnp
xor
stos
pop
xlat
aaa
jbe
mov
out
pusha
pusha
mov
imul
loop
or
in
mov
or
inc
out
fwait
mov
repnz
sbb
rorl
push
push
mov
adc
iret
mov
mov
cli
shrb
sub
and
inc
pop
icebp
fxch
cmp
pop
add
in
dec
rclb
cmp
rolb
mov
jecxz
bound
xlat
pop
mov
insl
sub
mov
cmp
jmp
nop
scas
push
idivb
mov
sub
outsb
jns
in
out
scas
jnp
jecxz
cmp
js
iret
inc
and
pusha
fildll
ror
pop
in
in
adc
sbb
dec
test
imul
ret
fisubrs
icebp
xor
jo
xchg
mov
xor
sarb
mov
add
dec
in
xor
pop
les
cld
jb
mov
sub
shlb
dec
lods
sbb
movsl
int
test
push
cmpsb
inc
dec
lock
and
es
pushf
inc
ret
cmpsb
inc
inc
pop
and
std
pusha
mov
xchg
scas
or
or
mov
sahf
push
xchg
push
jl
lret
dec
sub
call
and
outsb
aas
icebp
push
push
ret
inc
adc
iret
fwait
scas
sti
push
lds
in
enter
adc
mov
mov
dec
test
rclb
es
mov
or
mov
mov
push
add
cmc
ljmp
pushf
popa
ljmp
insl
dec
inc
bound
xchg
push
mov
nop
mov
cltd
popa
lods
mov
adc
mov
xorb
sub
mov
shlb
mov
pop
xor
or
xchg
lods
out
ljmp
rcr
cli
cmpsl
cwtl
clc
nop
push
fmulp
pusha
shl
lret
jp
pop
mov
arpl
mov
sbb
jmp
ficompl
fistpll
mov
and
and
scas
push
pusha
xor
or
out
fmul
inc
dec
outsl
bound
insb
daa
push
mov
into
mov
add
push
push
jg
fldenv
lcall
dec
dec
fsubrp
movsb
aad
push
dec
adc
mov
or
les
imul
cli
js
mov
adc
mov
sbb
bound
jle
arpl
gs
insl
movsl
jl
outsb
shrb
pop
push
push
jg
call
in
scas
movsl
in
lahf
enter
push
jecxz
int3
test
cmpsl
hlt
pop
cmpsb
inc
in
and
xlat
mov
insl
lret
pop
add
fsubs
jb
pop
mov
inc
imul
out
cmp
in
inc
fsubrl
bound
cmp
cmp
push
into
xorb
sbbl
movb
cmc
pop
ret
mov
cltd
shlb
mov
pop
fwait
std
fcomps
cmpsb
mov
out
loopne
jns
fwait
lods
xor
nop
loopne
or
movl
les
pop
das
cmpsb
fcoms
ss
add
pusha
push
in
imul
mov
ljmp
in
lahf
push
add
rolb
loopne
pushf
scas
sub
cmp
loop
dec
mov
imul
push
sarb
mov
lds
rcl
insb
inc
lock
pop
sub
fcmove
outsb
lods
jle
inc
in
sahf
psubb
jle
push
pop
sahf
mov
test
push
xor
xchg
dec
cltd
test
push
std
ja
sbb
int3
mov
cmp
pop
test
pop
ret
into
dec
push
sub
es
or
fcmovu
mov
jmp
inc
or
pop
push
fdivr
pusha
pop
mov
mov
jns
lret
push
iret
and
sbb
inc
orb
jle
dec
fildll
xchg
jge
shrb
aas
test
mov
sub
loopne
pop
xlat
mov
inc
mov
pusha
pop
imull
cltd
pop
lock
inc
dec
pop
loopne
inc
bound
push
push
xchg
lods
cltd
jmp
dec
lock
jmp
lret
mov
call
mov
mov
iret
mov
das
ss
adc
and
loopne
cltd
lahf
js
sub
cltd
aas
xor
int3
fisubrs
push
ss
cmp
scas
and
adc
adc
pusha
pop
add
mov
fistpll
fidivs
call
adc
andb
nop
int
int3
outsb
test
scas
push
push
pushf
int3
pusha
addr16
out
inc
nop
stos
int
lea
jl
inc
xor
in
test
mov
pushf
in
mov
push
xor
fcmovb
bound
push
jnp
adc
fisubrl
mov
cltd
inc
stos
lock
pop
mov
mov
lock
jge
jb
and
pop
loop
mov
enter
repz
xchg
cmp
dec
mov
inc
stos
insb
mov
outsl
inc
popa
jmp
push
lods
int
test
pop
sbb
fs
cmp
or
in
mov
and
mov
pusha
mov
mov
scas
out
fs
outsl
movsb
xor
jo
pusha
and
in
arpl
sub
lahf
push
mov
xchg
fs
sbb
and
ja
insl
sbb
xor
mov
stos
xor
imul
mov
sbb
pop
xchg
mov
repz
aas
sub
mov
popa
or
cmc
xchg
lods
xor
jo
xchg
xor
pop
jmp
call
inc
xchg
icebp
fdivs
fwait
add
cmp
lret
aas
mov
mov
inc
and
dec
lods
dec
loopne
jno
fwait
and
sbb
or
roll
ret
push
xor
into
cld
sbb
cmp
movsl
xor
enter
pushf
mov
out
mov
jmp
adc
jbe
movsl
mov
mov
ss
jno
scas
mov
aam
and
xlat
push
cwtl
mov
and
pusha
inc
dec
cltd
push
adc
mov
add
dec
call
xchg
rcrb
stc
ja
jp
xor
gs
sub
sahf
adc
jae
or
or
and
lods
dec
test
lcall
dec
neg
hlt
fst
outsl
aam
sbb
cmp
mov
pop
inc
sub
pop
push
jbe
cmpsl
jae
xor
sbb
mov
in
sub
push
xchg
or
lods
add
push
xchg
subb
mov
adc
jnp
inc
cmpsl
loope
push
xor
mov
in
pop
lock
inc
popf
xor
imul
call
jae
xchg
fldenv
or
xor
mov
cld
daa
into
xchg
xor
pop
in
movsb
mov
loopne
scas
mov
fs
xor
add
fcmovnbe
scas
popa
inc
push
insb
nop
stos
and
adc
mov
mov
sbb
sbb
push
call
lret
leave
mov
mov
cmc
or
mov
stos
jns
sbb
sbb
das
icebp
cmpl
hlt
pusha
aas
jno
shrl
sub
mov
mov
loopne
mov
lock
mov
sahf
sahf
leave
shl
xorb
call
push
in
mov
xor
sbb
and
pop
jno
push
add
shlb
mov
add
pusha
xchg
shrb
in
pusha
sbb
xlat
aam
shrb
mov
cs
mov
arpl
inc
pop
xchg
jno
dec
fildl
push
inc
cmp
pop
test
push
sub
jmp
sbb
cs
bound
arpl
add
add
daa
imul
ret
test
pusha
repnz
cmpsb
loopne
lret
and
pop
sub
fmuls
outsl
outsb
cmp
int3
sub
popf
cmpsl
popf
mov
scas
dec
or
test
push
xor
fcoml
add
in
pop
push
daa
insb
mov
orl
test
pop
orb
mov
das
outsb
pop
cltd
fcmovnbe
lods
and
add
fstpt
lret
jmp
in
sub
iret
mov
call
cmp
addr16
lods
mov
adc
push
jo
sti
movb
pop
ljmp
imul
jns
iret
sahf
sub
test
sbb
mov
sub
cmpsl
outsb
pop
cmp
adc
pushf
insb
mov
pusha
daa
iret
dec
and
dec
fcmovb
insb
jmp
test
and
lret
pop
pusha
outsl
fwait
push
adc
add
jge
out
jg
add
into
adc
xchg
dec
cmp
insb
push
xchg
dec
inc
lock
xor
fistl
jecxz
in
nop
jl
ret
pop
and
sbbb
add
outsb
sbb
jmp
pop
in
add
jo
sti
jg
je
popl
pop
xchg
or
bound
int
rcll
xchg
push
loope
and
push
inc
mov
jae
pop
insb
popa
push
aad
and
push
loopne
xchg
push
dec
sti
mov
push
call
or
mov
pop
in
testb
sar
std
and
lret
scas
aas
lods
mov
in
cmc
mov
das
adcl
and
out
mov
nop
add
bound
je
and
pop
cltd
fabs
pusha
in
movsb
stos
jne
mov
cmp
div
lock
lcall
lock
push
jmp
adc
sbb
call
bound
rcl
push
test
push
and
jecxz
pusha
shlb
sbb
adc
lcall
sub
lahf
in
andb
mov
imul
pop
sbb
mov
ljmp
pusha
in
sub
add
mov
sub
je
dec
lcall
xor
push
xor
arpl
test
xor
xor
outsl
loop
mov
mov
mov
pusha
cld
shrb
decl
xchg
aas
add
pop
into
rol
fs
push
dec
rol
pusha
call
out
mov
movsb
fcmovnb
inc
pop
fwait
mov
loop
adc
scas
or
in
xor
mov
je
lock
ret
push
cltd
leave
cs
mov
out
test
in
sub
loop
pop
cmpsb
mov
xchg
scas
in
mov
js
ja
ds
fwait
out
dec
mov
mov
adc
ffreep
sub
dec
jo
arpl
repz
sbb
sub
inc
je
fsts
and
push
js
aad
les
loop
leave
in
adc
mov
ret
cwtl
fldt
loopne
bound
movl
fimuls
cs
js
sub
push
iret
mov
push
and
inc
xchg
test
fstl
leave
sub
imul
fisttps
pop
sbb
or
pop
or
sbb
push
mov
pop
cltd
iret
in
jo
outsb
cmp
shr
xchg
loopne
pusha
loop
call
subb
cs
bound
push
js
xchg
fidivs
fstps
shll
fsts
fsubr
push
sbb
sbb
popa
cli
dec
and
xchg
pop
push
out
push
das
lods
fs
bound
gs
add
mov
dec
scas
loopne
repnz
test
test
or
add
mov
mov
mov
inc
cltd
pop
scas
cmp
mov
repz
push
nop
xchg
int
jae
add
das
mov
lret
lods
cmp
adc
lcall
xchg
roll
inc
jp
pop
mov
pop
cmp
or
pop
fsub
inc
lret
mov
fdiv
mov
mov
sbb
dec
stos
dec
inc
push
enter
repz
std
js
sub
sbb
pop
push
push
inc
add
or
pop
rclb
sbb
loopne
and
mov
cltd
xor
fnstenv
fs
pop
cmpsb
lds
push
sbb
sub
inc
jo
daa
repz
icebp
push
rcrl
sbb
add
adc
xchg
cwtl
or
fiaddl
cmp
addr16
dec
jo
sbb
lahf
cmp
stos
ds
inc
in
leave
lret
push
inc
fcmovb
mov
ds
test
push
data16
inc
cmp
imul
out
mov
cmp
lods
inc
push
idivl
push
data16
test
lods
ds
sbb
xor
sti
mov
cli
in
imull
mov
fisubrs
fldcw
or
xchg
iret
push
inc
out
xchg
fcoms
aaa
mov
scas
ficomps
and
xchg
mov
scas
daa
inc
inc
push
push
sbb
sub
dec
xor
stos
push
fldenv
leave
das
inc
xchg
mov
aas
je
sahf
loopne
mov
aam
popa
push
test
or
pusha
sbb
or
inc
sub
push
adc
rclb
adc
in
ljmp
outsl
sbb
xchg
pusha
pop
aas
and
test
incb
sub
lds
xor
jae
jae
insb
push
jb
cmpsb
and
enter
sbb
mov
pop
mov
imul
mov
dec
pop
clc
scas
stos
mov
out
in
dec
pushf
es
xor
cmp
xchg
dec
out
shrb
addr16
imul
out
adcl
inc
cmp
outsb
mov
lock
xchg
loope
scas
adc
nop
cld
shlb
mov
dec
out
ds
mov
in
xchg
pop
mov
shll
or
jnp
ret
fwait
clc
insb
mov
add
imul
test
outsb
fwait
push
aas
add
fisubrl
inc
inc
mov
mov
bound
pop
dec
fcmovnb
shrl
sub
jno
movsb
popa
cmc
sbb
cli
std
and
shl
fstl
out
cmc
sbb
inc
arpl
xchg
jnp
rorb
test
inc
mov
int3
or
popa
jnp
in
cmc
add
ret
cmc
data16
fldl
jle
shlb
lret
cli
fldt
es
mov
sub
aaa
fisubrs
insl
negb
jnp
js
lret
mov
out
xchg
ja
scas
cmpsb
lods
adc
lods
faddl
fcomps
jnp
addb
out
aas
inc
adc
push
mov
jmp
adcb
insb
add
pop
loop
iret
adc
stos
outsl
mov
sub
pop
sarl
sarb
jns
push
mov
jmp
inc
add
jmp
mov
jl
inc
or
cmp
xor
mov
jecxz
pop
and
outsl
jl
out
cmp
das
jmp
lock
arpl
outsl
dec
lods
int
mov
cmpb
xchg
mov
mov
imul
sub
inc
jnp
cmc
lret
out
popa
pop
sub
lret
out
cli
mov
mov
shl
mov
lock
stos
sbb
cmpsl
stos
out
xor
je
inc
arpl
ficoml
hlt
lods
dec
push
lahf
inc
push
out
mov
fsubl
call
mov
inc
stos
filds
xchg
call
adc
sub
jno
dec
outsb
sbb
lods
dec
in
popa
push
dec
fdiv
sahf
les
push
arpl
dec
mov
aam
xor
mov
xchg
sbb
adc
test
sub
aam
push
jmp
loopne
cmc
or
pop
loope
adc
mov
enter
icebp
test
out
in
rorl
stc
call
divl
push
fdivrs
and
fldenv
ds
and
lret
int
adc
std
push
divb
ror
ss
cltd
xor
in
cmp
sahf
test
mov
leave
xor
pusha
jbe
sahf
mov
movsb
sti
jb
cmp
int3
xlat
dec
int3
pop
or
inc
sti
lret
add
insl
inc
or
or
or
xor
cmpsl
into
fisubs
or
addr16
jmp
mov
rcrl
xorl
xchg
cmp
negb
fstpl
sbb
out
mov
sahf
pop
pusha
sti
cmpb
cli
xor
mov
clc
lret
arpl
int3
jne
pop
mov
in
mov
fnstcw
mov
fcoml
pop
push
fcmove
mov
movsl
addr16
outsl
divb
movsl
pop
out
ret
movsb
dec
aaa
push
adc
mov
and
mov
aas
mov
lods
out
ret
es
mov
icebp
popa
addl
out
cmp
and
mov
loopne
int
bound
mov
mov
das
subb
out
add
in
lods
in
fsubrs
shrb
pusha
insb
loopne
out
in
in
sub
sbb
cs
push
pop
insb
out
xor
rcrl
les
jno
out
leave
adc
adc
bound
and
inc
iret
cmp
inc
sarb
rdmsr
out
sahf
divl
test
sbb
or
sub
push
xor
movb
add
push
inc
and
sbb
stc
pop
aas
jmp
loopne
daa
inc
cwtl
loopne
faddp
jl
pusha
push
fiadds
and
or
std
in
inc
or
scas
jns
cld
pop
and
cmp
and
rcr
in
loopnew
adc
mov
js
ds
mov
xor
out
iret
adc
or
icebp
and
mov
push
ljmp
push
outsb
cmp
push
and
stos
out
jecxz
xchg
stos
push
das
bound
mov
sub
and
lahf
push
sub
adc
xchg
loop
mov
add
daa
xor
or
mov
mov
ret
mov
bound
mov
jb
lods
adc
inc
daa
notb
mov
bound
rolb
lret
imul
xchg
fbld
and
pushf
scas
aad
ret
iret
fcmovnbe
sti
fsubl
call
lret
mov
push
mov
adc
pop
or
push
push
push
jmp
cmpb
and
cmp
dec
divb
fsubrl
cmp
inc
in
fidivs
fldcw
sbb
bound
mov
faddl
adc
pop
push
sub
ret
mov
mov
ficomps
andb
inc
xlat
fldenv
adc
js
push
repnz
lret
in
fisttps
cmc
sbb
std
nop
fisubs
and
pop
sbb
aaa
dec
mov
scas
insb
pop
outsb
test
mov
stc
testl
xchg
int
mov
pusha
bound
into
add
pop
push
mov
popa
push
in
and
repz
sbb
add
jno
in
mov
cmc
scas
push
jmp
in
sub
xor
out
inc
jnp
cs
inc
shr
mov
insl
popa
lds
inc
mov
mov
mov
pop
jge
jge
aam
lods
add
gs
je
popf
scas
popa
out
xlat
lret
jno
sahf
aas
rcrl
push
std
push
outsl
mov
push
cmpl
shlb
mov
mov
pusha
mov
scas
cmp
mov
inc
in
push
into
into
jb
insb
bound
xor
and
mov
lcall
call
dec
xchg
mov
adc
cmp
repnz
fs
mov
or
or
push
and
mov
out
xchg
push
bound
shlb
pop
stos
popa
or
icebp
add
dec
out
inc
lcall
sahf
lods
nop
in
popa
into
mov
mov
loopne
xlat
mov
jl
adc
inc
mov
dec
rclb
cmpsb
xchg
testl
mov
bound
fucomip
and
pushl
out
dec
xor
jne
test
out
ljmp
and
or
inc
push
and
sbb
pop
dec
or
xchg
addr16
arpl
or
mov
mov
push
mov
and
or
push
cld
out
ljmp
test
xchg
cmpsl
and
lods
fnstcw
pop
and
loopne
cmp
mov
in
into
sbb
lods
loopne
fisubs
call
cltd
rorl
or
fcmovnbe
sub
scas
cmpsl
fpatan
lret
push
in
pusha
test
pop
lret
scas
mov
push
and
adc
stos
scas
xor
mov
outsb
dec
cltd
outsl
mov
sbb
cmp
jo
mov
adc
mov
mov
insb
inc
or
rcrl
aas
mov
int
pop
push
scas
sub
and
cmp
movsl
xchg
mov
cmpsb
movaps
push
dec
loop
xchg
inc
add
fists
fildll
into
fucomip
insl
iret
bound
push
inc
xchg
xchg
push
mov
sbb
in
in
mov
lods
xchg
sub
mov
outsl
add
aas
ss
rcrb
stos
call
out
int3
or
fldenv
sahf
cmpsl
cwtl
mov
or
popf
adc
ja
cltd
mov
jg
push
int
lods
call
fdivr
hlt
inc
vsubss
loop
sub
xorl
cld
stos
lcall
mov
jno
sbb
repz
cmc
cmp
cmp
push
xchg
mov
push
stos
jnp
fs
fsts
aas
push
pop
sub
sub
mov
or
adc
cmp
in
or
jae
adc
inc
push
int3
jo
loop
in
sub
jl
xchg
scas
jno
or
dec
iret
pop
jno
repz
dec
mov
mov
sbb
and
int3
mov
rorl
or
fldenv
inc
push
mov
push
pop
adc
dec
out
in
mov
mov
arpl
pusha
or
mov
pop
jae
cmp
test
xor
inc
push
or
add
pop
xor
cmc
or
pop
sarb
push
sbb
f2xm1
add
xchg
sbb
aam
or
pop
bound
loopne
add
fdivrs
mov
xor
mov
pop
nop
das
bound
imul
ja
das
xchg
test
mov
jge
push
or
jp
fisttpl
sbb
loopne
in
ss
sub
loopne
dec
adc
dec
jae
addr16
out
sbb
or
or
pop
jmp
lahf
mov
shl
adc
ja
dec
out
test
mov
outsl
jno
dec
arpl
jle
dec
xchg
addr16
mov
jecxz
xor
loopne
mov
mov
sbb
mov
adc
stos
ret
push
sbb
dec
js
into
testb
cmp
cmp
pop
mov
sbb
insb
cmp
movsb
insb
sbb
repz
inc
jle
mov
rcrl
or
adcl
xor
imul
insb
cmp
xchg
pop
or
cs
pusha
sbb
imull
dec
cld
xor
mov
sbb
test
dec
lret
fwait
xchg
inc
push
aam
push
xchg
sub
push
pop
imul
inc
fsubs
add
adc
call
mov
jl
jge
jo
dec
mov
inc
cmp
pusha
mov
jl
pop
dec
inc
in
shlb
fsubs
cltd
out
scas
lock
js
scas
or
pop
dec
and
sub
bound
es
sub
rol
mov
ret
and
fs
insl
cmpsb
push
lret
xlat
scas
mov
adc
loopne
pop
mov
mov
cmp
test
push
test
fs
shl
stos
sbb
sbb
shl
mov
dec
pop
xor
and
inc
mov
lcall
inc
sbb
scas
js
mov
dec
jecxz
xor
dec
and
loope
xor
es
pop
lods
mov
push
pop
dec
xchg
out
inc
push
das
or
sbb
xor
scas
push
jbe
bound
dec
lds
mov
fs
add
icebp
cwtl
cmp
mov
jb
mov
mov
je
lcall
test
and
pop
in
sub
outsb
jnp
imul
push
dec
inc
lea
mov
pusha
cld
rcrb
adc
cmp
and
iret
mov
int
pop
mov
pop
push
out
jno
data16
test
daa
mov
jne
xor
pushf
push
repz
xor
and
sbb
sbb
in
ucomiss
scas
bound
mov
xor
js
xchg
subb
cmp
gs
cmp
test
fcompl
and
fidivrl
cmp
add
push
mov
jl
gs
sbb
aam
nop
push
test
or
aas
add
scas
xchg
imul
cld
dec
movsb
in
fwait
sub
or
adc
mov
lret
dec
xchg
andl
ret
xor
push
pop
add
jo
les
lret
xchg
dec
sub
xchg
out
xchg
movsb
pusha
pusha
xchg
in
gs
dec
popa
stos
jg,pn
fisttps
push
cmp
push
mov
aas
shrl
fs
jo
outsb
xchg
inc
inc
aam
xchg
mov
insl
pop
es
inc
xchg
add
roll
inc
xchg
dec
pop
cmp
shl
mov
push
cmp
pop
scas
out
mov
pop
fldt
cmc
ljmp
pop
mov
push
int3
mov
pop
mov
movsl
inc
call
ret
enter
pop
out
call
outsl
add
out
subl
cltd
mov
mov
jge
jo
outsb
cwtl
int3
rcr
stc
out
lods
scas
sbb
pop
or
jnp
mov
movl
mov
inc
push
add
cmp
pusha
bound
push
in
fisubrs
cmp
xchg
scas
inc
push
mov
faddp
and
outsl
cmc
push
pop
mov
inc
add
call
subb
shlb
add
push
cmp
or
add
mov
cs
cmp
xor
vpcmpeqb
imul
mov
aaa
shr
or
in
rcrb
push
ret
jne
push
out
mov
aaa
or
push
imul
lds
mov
push
xchg
push
lds
cltd
jle
rcll
mov
xchg
dec
popa
xchg
scas
sti
fs
ret
sti
mov
and
push
mov
inc
int3
outsb
cmpsl
addl
cmpsb
pop
pop
xchg
xor
inc
test
pop
inc
and
pop
adc
mov
imul
mov
les
dec
shlb
pop
jle
cld
es
fnsetpm(287
cmp
sti
lock
pop
mov
pop
out
in
test
mov
mov
sahf
adc
mov
sar
jno
xchg
pop
dec
and
inc
into
add
iret
scas
sbb
mov
mov
insl
test
mov
mov
cwtl
outsb
push
pusha
cmc
fidivrl
push
fsubr
pop
scas
xchg
add
lods
push
ret
xor
fstpt
cmpsl
mov
push
pop
mov
jnp
stos
jg
lret
fcomi
out
test
jbe
pop
bound
rolb
fsubl
jp
sbb
fisubrs
and
mov
shlb
outsl
mov
mov
nop
fwait
xor
and
lods
sub
cmpsl
mov
repnz
mov
imul
cmp
iret
cmp
inc
pusha
stc
cli
lahf
cltd
stos
int3
nop
jle
cmp
push
into
mov
loopne
nop
pop
xor
fadds
ror
sti
or
jl
pop
push
xchg
jae
mov
in
fildl
fdivl
aas
pop
ss
mov
mov
cli
push
lfence
inc
in
enter
das
cmovno
and
xor
in
outsl
bound
mov
push
stos
lods
cld
jnp
sbb
mov
shll
loop
jns
in
xor
fsubl
ja
dec
movsb
pop
addb
rcl
movsl
repnz
out
loopne
push
jb
call
int3
ficoms
ds
mov
pop
dec
idivl
insb
pop
dec
push
jb
cmpl
push
inc
out
jmp
jmp
mov
in
imul
inc
rorb
mov
fwait
jecxz
sarb
xchg
fisttps
insb
imul
or
ds
ja
fistps
push
iret
pop
fisubrs
jnp
sbb
testb
hlt
fwait
rclb
aam
mov
mov
pop
mov
jnp
scas
loopne
mov
call
rcrb
push
pop
fs
into
test
outsl
add
xor
xor
pop
sub
or
in
fs
cltd
loop
xchg
imul
dec
cltd
lret
sahf
or
test
adc
jmp
sub
testl
adc
pop
jb
es
stc
icebp
add
mov
inc
test
push
mov
ljmp
xor
insb
sub
jnp
lea
lock
into
lods
jle
imul
lods
push
pop
mov
adc
in
je
jmp
inc
xor
lds
cmp
es
data16
sbb
dec
jno
jecxz
adc
adc
mov
dec
les
mov
inc
cmp
mov
mov
pop
test
mov
popf
or
pop
sbb
xor
shrb
sub
cmpsl
mov
aas
aam
les
ljmp
insl
and
push
in
inc
lret
out
je
and
cmp
inc
repz
sahf
sbb
or
test
jmp
cmpsl
lfs
inc
push
imul
jmp
shll
cs
loopne
inc
lods
dec
test
and
ja
arpl
je
lods
jle
mov
sub
dec
dec
and
mov
mov
xchg
sub
or
push
bound
mov
daa
ss
or
subb
sub
cmc
or
dec
sub
sbb
imul
shll
std
in
clc
add
cmc
shrd
pop
test
push
cmp
popa
clc
mov
out
loopne
or
fs
sub
cmpsl
aam
push
rolb
int3
stos
pop
inc
dec
mov
sub
mov
mov
or
stos
enter
cltd
fsts
je
out
adc
cmp
add
jle
fisubl
ljmp
and
in
fcomps
movsb
xor
stos
in
in
rol
push
pushf
popf
bound
fimull
jg
pop
loope
loopne
mov
cwtl
or
lds
mov
leave
or
push
inc
push
dec
scas
repnz
sahf
lret
data16
mov
daa
loopne
dec
or
ss
mov
sub
jo
sbb
nop
fwait
iret
dec
pop
loopne
cmpsb
push
or
out
dec
sbb
xor
jne
or
mov
cmc
lods
aam
bound
scas
lahf
adc
cld
pop
sbb
out
sahf
xchg
jge
scas
push
xor
sub
add
aad
cltd
push
dec
popa
mov
les
mov
mov
jmp
bound
mov
aad
mov
or
add
outsb
insb
add
in
ja
and
push
sbb
lods
imul
mov
cmp
or
xchg
mov
subl
cmp
pop
sarl
icebp
test
daa
pop
bound
pop
add
int3
cmc
xchg
add
cwtl
fcomps
push
mov
dec
jge
or
test
add
xchg
and
cli
lea
aas
xor
aas
call
call
push
xor
fildl
pop
insb
shl
shl
mov
mov
ljmp
and
movl
lret
xor
int
sub
mov
outsb
push
jg
sub
imul
jg
mov
xor
cld
push
inc
jmp
mov
das
enterw
mov
icebp
sub
test
imul
dec
mov
adc
jo
fdivrs
mov
mov
imull
insl
aad
dec
mov
in
mov
ss
jg
arpl
mov
mov
xchg
sub
sub
repz
jecxz
test
lods
stos
divl
sub
nop
popf
mov
sti
out
addl
out
lret
add
jnp
outsl
push
push
pop
in
outsl
push
xchg
sub
icebp
movsb
sti
lods
ja
stos
mov
insl
gs
pop
les
out
in
in
insb
push
dec
rorl
inc
push
pop
insb
pusha
inc
nop
and
iret
cld
mov
add
es
push
outsl
sahf
and
scas
ss
jp
mov
xchg
insb
push
sbb
cmpsl
push
ljmp
out
mov
xlat
jmp
movsb
out
push
test
push
ds
sbbb
das
test
add
out
gs
mov
mov
icebp
iret
ret
insb
int3
nop
lahf
cmp
sar
inc
test
lret
pusha
loope
mov
shlb
bound
stos
sbb
jmp
jmp
mov
int3
not
push
cmpsb
mov
in
lahf
mov
push
push
stos
lods
or
in
mov
adc
push
insl
mov
lods
imul
flds
add
je
ljmp
pop
ret
es
xlat
data16
inc
lds
fwait
xor
lret
pop
stos
sub
out
stos
xchg
imul
or
test
jl
imul
inc
pusha
jns
pop
add
scas
xrelease
sahf
lret
sbb
pop
jne
arpl
mov
sarl
sahf
out
xchg
rcrb
mov
outsb
out
imul
push
jg
lock
les
out
shrb
outsb
roll
mov
fbld
pusha
lret
lret
or
bound
rorl
push
jecxz
call
stos
jge
addr16
outsl
push
out
int3
lods
bound
mov
mov
xor
je
sub
shrb
les
or
or
scas
pusha
mov
fwait
in
sbb
and
nop
pusha
sub
fldt
bound
inc
pop
inc
loop
rorb
bound
rorb
inc
in
mov
add
push
sub
rorl
bound
pusha
inc
dec
rcrb
stos
mov
cmc
push
idivl
adc
or
bound
push
adc
mov
outsl
ja
or
pop
mov
xor
adc
jle
mov
mov
into
mov
dec
fmull
in
scas
sub
fs
call
outsb
insl
inc
sub
cmpsl
stos
jmp
dec
out
daa
inc
fwait
mov
stos
or
repz
test
fisubrs
out
sahf
or
jecxz
fstpt
sub
mov
cld
in
adc
nop
mov
popf
outsl
orb
insl
dec
bound
das
dec
loop
loope
bound
fnop
sbb
shrl
cmp
mov
loopne
xchg
adc
mov
je
mov
push
and
stc
loopne
movsl
xchg
xor
out
pop
mov
xchg
cmpsb
xchg
ds
sub
popa
jg
icebp
iret
popa
sub
popf
cmpsl
jne
das
repnz
push
ds
scas
mov
popf
xchg
push
mov
in
bound
outsb
sub
sahf
pusha
sbb
mov
cli
movsb
lock
daa
cmpsb
jl
out
and
mov
lret
dec
pop
cld
lret
mov
xor
push
ret
and
push
clc
push
push
dec
arpl
jecxz
adc
or
jg
dec
aad
ds
call
or
scas
pusha
js
push
push
and
push
ljmp
inc
nop
adc
int3
inc
mov
mov
rolb
fdivp
push
sbb
gs
pop
in
pop
aas
and
push
lcall
or
cwtl
jecxz
mov
mov
inc
in
mov
cltd
call
fs
bound
jbe
cwtl
pop
addl
mov
xor
stc
add
aas
lods
adc
cmpsb
and
push
scas
aaa
and
dec
in
inc
adc
xchg
mov
sahf
insb
insb
dec
int
aas
lods
or
stos
sbb
push
fadds
fmuls
push
fnstsw
ror
mov
in
cmp
jl
jno
aad
xor
in
mov
imul
nop
jle
jnp
pushf
lret
or
mov
mov
lods
push
popa
dec
fs
push
inc
shlb
inc
out
shrb
js
xor
shll
mov
stc
pusha
fcmovnbe
pop
dec
cmp
jle
inc
jp
xchg
fwait
pop
aam
iret
dec
es
out
sub
cmp
adc
push
jle
mov
out
jo,pn
sarb
cmp
xchg
lock
mov
ret
mov
mov
test
inc
loopne
jmp
les
jne
stc
pop
test
add
mov
xlat
pushf
bound
frstor
rcr
fnclex
xor
aaa
and
dec
in
add
rcll
mov
ret
and
mov
scas
mov
jge
mov
adc
loopne
inc
push
stc
and
int3
ficompl
dec
push
lcall
jnp
subl
loope
mov
pop
ror
sub
xchg
or
xchg
sbb
xor
pop
sub
lods
fs
or
gs
pusha
outsb
sahf
orl
push
dec
xchg
pusha
sub
cltd
insb
adc
and
gs
adc
adc
call
cmp
nop
adc
roll
nop
sub
xorl
outsb
xchg
cli
shll
lods
movsb
mov
popa
mov
push
xlat
cmovg
repnz
push
push
sub
bound
ficomps
enter
rcrb
push
mov
test
lahf
sbb
inc
pop
or
fs
fists
inc
sub
inc
movsb
cltd
mov
push
dec
xor
and
iret
imul
xchg
ret
inc
sub
mov
test
inc
int3
and
clc
shll
pop
push
cmpsb
dec
lret
adc
push
or
ret
sbb
push
push
mov
mov
cmp
arpl
out
mov
adc
or
sub
pusha
gs
aam
loop
or
fucomip
push
and
jne
lods
push
jg
fcom
jmp
mov
cmp
loope
lcall
mov
push
cltd
cmpsl
jnp
loopne
mov
movsb
clc
xlat
and
in
mov
arpl
mov
xchg
ljmp
xchg
push
jbe
jnp
out
jmp
dec
rolb
xor
sti
scas
out
out
xorl
imul
lds
icebp
movsb
xchg
cmp
push
add
fidivl
pop
enter
orb
or
push
push
call
ljmp
add
ljmp
ljmp
and
loope
imul
or
jmp
das
mov
add
jmp
aaa
jge
cmp
std
xchg
sub
pop
fsubrs
jge
cmpsl
mov
sbb
or
leave
mov
bound
inc
nop
test
test
pop
lcall
jnp
adc
pop
dec
pop
rcll
or
es
iret
cmp
cmpsb
jecxz
jnp
mov
xor
add
rorl
das
dec
sub
mov
pop
mov
out
les
into
movsb
lods
add
pmaxsw
xchg
pop
xchg
outsb
in
push
inc
xor
pop
add
lret
lret
pop
cltd
repnz
xor
dec
pushf
jecxz
xchg
sbb
add
mov
sti
sbb
outsb
leave
dec
sub
xor
mov
xchg
pop
pop
add
mov
xor
sbb
in
mov
ret
cmp
xor
bound
or
pop
adcl
xor
jb
cmp
and
andl
add
xor
mov
popf
scas
jecxz
or
mov
es
xchg
add
lods
jnp
mov
loope
xchg
cmp
mov
arpl
loopne
arpl
mov
lret
mov
pop
pop
sbb
adc
sti
cmp
out
int3
inc
cmpsb
add
lcall
lods
lods
cmc
cs
imul
in
adc
repz
repnz
add
in
rolb
in
loopne
fstpt
sbb
test
negl
aaa
and
cltd
das
mov
fdivl
mov
dec
iret
push
pushf
ss
imul
test
push
aam
lret
dec
push
dec
fs
and
mov
lods
lds
cs
rcrb
push
cmp
cmpsl
pop
mov
dec
sub
out
lds
enter
std
and
ficoms
ljmp
dec
mov
xchg
sti
scas
fists
and
test
jnp
pop
popa
sub
xchg
jno
push
popl
xor
es
pop
mov
pop
dec
fstps
call
ljmp
sub
testl
pusha
or
jnp
hlt
out
xchg
dec
mov
pushf
lret
or
mov
pop
sti
cmc
addr16
cmp
jne
push
scas
cmc
imul
jne
add
les
sbb
fisubs
jle
inc
lahf
bound
mov
inc
test
mov
cmp
mov
mov
fldt
loop
jbe
arpl
pop
pop
jle
fbld
cmp
xor
cs
push
push
xchg
lahf
in
mov
jmp
scas
inc
popa
test
lret
jg
lret
sbb
xchg
pop
mov
insb
repnz
stc
in
add
push
stos
mov
and
sub
add
sbb
mov
outsb
fldt
pop
lret
and
cltd
and
add
frstor
sub
push
test
das
jle
sbb
lods
ret
sti
into
dec
repz
sti
shrl
andl
sahf
jnp
fidivrl
push
lock
aam
pop
insl
mov
in
push
push
bound
pop
icebp
mov
cmp
add
out
ja
sbb
dec
sub
xlat
sbb
mov
aam
mov
data16
loopne
repnz
mov
jmp
xchg
push
jmp
mov
lods
orl
pop
pop
pusha
cmp
sbb
pop
jecxz
ljmp
add
add
in
in
out
mov
mov
test
cmp
add
mov
xor
mov
lahf
inc
xor
imul
mov
dec
xchg
xchg
sub
loopne
xchg
sbb
popl
adc
mov
mov
inc
lahf
push
fiadds
pop
cltd
xor
bound
cmp
mov
popa
xchg
cmpsb
cwtl
outsl
jnp
pop
popl
mov
cs
jmp
push
lahf
inc
scas
bound
xchg
add
jns
fwait
js
icebp
adc
dec
imul
imul
xor
push
pop
loopne
int
outsl
test
hlt
dec
sbb
sbb
flds
add
and
movsl
inc
addl
lods
lock
sub
and
jns
inc
xchg
lods
cmp
mov
push
inc
jnp
orb
push
fnstsw
push
ret
dec
call
mov
out
pushf
repnz
popa
fcomps
scas
push
add
jo
call
dec
mov
insb
fwait
rol
ljmp
jnp
lods
pop
inc
out
in
mov
ficompl
dec
jmp
mov
je
jo
mov
jmp
loopne
dec
xchg
lret
push
push
xchg
loope
mov
mov
mov
and
imul
add
mov
in
out
out
ret
cltd
push
xor
pusha
cltd
nop
mov
push
lcall
pop
les
and
add
outsb
cltd
xor
mov
mov
jmp
mov
inc
icebp
mov
xchg
xchg
imul
into
sbb
fnstenv
shll
xor
push
and
lods
mov
int
aas
mov
cmp
mov
divb
adc
fistps
dec
adc
sbb
imul
dec
insl
rolb
stos
sbb
mov
mov
jne
lock
cwtl
iret
lock
lret
jnp
sub
shlb
std
adc
out
or
add
enter
mov
jo
sbbl
push
dec
stos
inc
pop
cmp
xor
call
xchg
scas
data16
adc
sbb
out
lahf
lock
loopne
lcall
add
test
cmp
sbb
shrb
loopne
dec
test
outsl
aas
je
outsl
mov
jo
in
clc
cmp
scas
call
add
insb
xor
ds
sub
and
pop
ss
xor
outsb
mov
mov
sbb
pop
inc
jo
or
add
clc
sub
cmp
sarb
ret
rcrb
pushf
scas
in
outsl
cmp
cs
fcoms
xchg
mov
mov
mov
push
and
imul
push
pop
jecxz
adc
mov
iret
arpl
and
imul
push
ss
adc
les
iret
push
test
and
or
or
xchg
mov
outsb
and
int3
aaa
push
std
xchg
fdivrs
ljmp
popf
jae
mov
dec
jo
push
jmp
fmul
test
and
gs
fwait
cli
pusha
mov
push
and
gs
in
push
cmp
cmp
mov
int3
mov
dec
jo
cmc
aad
ror
pop
pop
cmp
fimuls
pop
loope
test
pop
scas
fldt
lds
mov
push
daa
sbb
lock
sbb
loopne
popf
xchg
es
loop
jns
rclb
add
xchg
nop
pushf
mov
mov
jp
fidivs
pop
pop
xor
arpl
out
stos
shll
cmp
shl
out
into
scas
mov
enter
jl
mov
dec
ds
sti
out
and
iret
pop
fwait
popa
add
add
div
je
pop
mov
add
and
lods
xor
pop
mov
and
add
test
mov
fiaddl
popa
sub
cmp
popa
nop
in
mull
push
lods
cwtl
xlat
insl
or
packuswb
xorb
and
push
loop
cltd
inc
inc
ret
jae
shlb
into
cmc
enter
sub
push
cmovno
mov
out
shrb
jae
shrl
ja
rcr
mov
mov
nop
mov
dec
cs
lea
iret
cmp
xlat
in
scas
xor
js
lea
das
adc
test
lahf
insl
arpl
mov
je
lods
jne
mov
inc
add
push
into
in
bound
push
xlat
hlt
xor
pop
mov
add
fld
xchg
pop
dec
pop
sub
add
jecxz
pop
fldenv
xchg
ljmp
sbb
sbb
mov
push
out
jmp
sbb
mov
ljmp
int
fbld
int
fbld
and
aad
pop
push
dec
cmp
test
loopne
mov
inc
mov
or
fs
ret
mov
push
nop
loope
push
mov
adc
aad
and
fs
and
ficomps
mov
jecxz
ficoms
and
loopne
xor
mov
popa
dec
lods
lods
adc
ret
out
adc
xchg
jbe
pop
movsl
mov
fcmovnu
inc
mov
nop
lods
and
scas
sti
fsubl
jecxz
inc
mov
mov
inc
pop
cmpsl
out
jno
sar
loopne
adc
mov
inc
iret
xlat
pop
popf
and
push
cmp
aas
fidivrs
in
ljmp
jmp
sbb
or
ds
lods
scas
orl
mov
add
push
iret
mov
scas
mov
jnp
ss
jae
xchg
hlt
cmpsl
pop
stc
xor
mov
pop
dec
and
sbb
lret
xor
fsubrs
cld
lock
or
es
int
call
mov
xor
bound
xor
xor
add
int
aas
into
in
int3
negb
shll
sahf
outsl
adc
add
mov
test
sbb
sbb
scas
or
shl
or
hlt
testl
or
fs
jecxz
sbb
scas
and
dec
mov
outsl
xchg
das
jge
mulb
lret
divl
sahf
mov
pusha
stos
mov
outsl
scas
inc
lret
in
dec
inc
movsl
add
dec
or
icebp
lret
call
and
divb
sub
dec
out
test
pop
in
pusha
rcrb
mov
icebp
je
fmull
push
jle
jmp
xchg
pop
fildl
fdivrp
push
outsb
xor
sbb
sbb
mov
push
mov
mov
jle
int3
insl
mov
insb
gs
or
pop
mov
xchg
mov
loopne
jbe
xchg
insl
add
loop
xor
and
mov
ret
push
sahf
scas
xchg
outsb
sub
or
jle
push
in
dec
loopne
in
mov
gs
inc
ljmp
sbb
test
pop
aaa
jne
cwtl
int3
in
mov
data16
pop
xchg
loopne
adc
test
imul
pop
jne
lret
jle
movsb
pop
or
mov
adc
cmp
fwait
jnp
loopne
in
outsl
insl
xchg
in
jne
lds
push
sbb
lret
sbb
inc
mov
test
outsl
push
loopne
jmp
cmpl
mov
out
test
sub
or
test
push
push
lds
loopne
push
movsb
add
mov
in
sbb
cmpsb
dec
cmpsb
pop
inc
xor
pop
adc
and
mov
nop
das
cmp
mov
adc
in
hlt
bound
sub
in
lahf
xor
das
cmp
pushf
shr
inc
or
xor
int3
bound
adc
or
and
out
mov
cmp
jecxz
cmp
inc
sbb
mov
das
rcl
add
dec
add
scas
lret
lahf
pop
xor
dec
subl
frstor
sub
fcomi
jecxz
mov
and
jne
fmull
sbb
jecxz
insb
out
dec
bound
addr16
cmp
nop
bound
add
or
scas
in
pop
cltd
scas
mov
cmpl
mov
clc
mov
les
out
in
aaa
jg
in
jge
jnp
out
mov
or
bound
inc
push
mov
repnz
or
mov
loopne
loope
sti
leave
lock
stos
or
rclb
lods
outsl
lcall
mov
sub
and
arpl
xchg
cwtl
jge
push
jecxz
insb
mov
daa
sub
jne
mov
and
scas
outsl
lods
imul
push
add
jae
testl
cwtl
int
loope
or
mov
pop
int
lds
insb
shll
dec
sbb
pusha
cmp
ret
inc
mov
and
mov
negb
pop
mov
loopne
pop
mov
push
pop
addl
add
icebp
jns
mov
leave
fimuls
push
loopne
data16
movsl
sbb
jae
mov
stos
call
cmp
shll
fidivrl
pop
mov
jg
xchg
cmc
loop
outsb
or
xchg
pop
pusha
lret
loopne
sub
insb
imul
sbb
scas
scas
out
mov
aam
xor
in
sub
shrl
dec
cld
mov
jnp
testb
xor
mov
inc
out
inc
mov
and
mov
inc
and
in
dec
sub
jo
nop
push
icebp
mov
lret
push
xchg
cwtl
adc
mov
outsb
and
or
aad
cmp
or
jg
adc
call
sahf
mov
rcrl
sahf
iret
mov
sub
stc
daa
cltd
jle
daa
pop
dec
mov
xchg
pop
out
cmp
dec
pusha
es
jg
fistpll
mov
adc
cmp
scas
icebp
test
jno
pop
ss
out
scas
cltd
incb
mov
jbe
and
cld
push
pop
sub
push
mov
dec
into
adc
xchg
mov
outsl
test
lds
andl
movsb
shr
mov
out
cmp
stos
sub
xchg
pop
add
cmp
mov
push
outsl
into
xor
pushf
pusha
cmpsb
aam
dec
inc
sbb
xchg
stos
rolb
mov
in
pusha
mov
je
xor
add
dec
and
mov
or
cmp
jnp
and
mov
push
stos
out
jmp
sbb
out
jb
and
push
mov
mov
dec
inc
outsb
outsb
gs
bound
dec
pop
outsb
icebp
push
js
jo
jnp
shr
mov
cs
inc
or
or
push
cmc
push
lods
or
jmp
xor
scas
lods
pop
jo
sub
cmpsl
mov
xlat
outsl
push
bound
cld
clc
xchg
fisubrs
scas
cs
cwtl
xlat
and
xchg
cmpsb
cli
call
into
loopne
sub
mov
test
cmp
xchg
adc
sub
daa
in
xchg
mov
sub
fsubp
sahf
adc
pop
lret
imul
xor
add
test
push
psllw
scas
or
insb
mov
pop
insb
andb
and
shrl
add
pop
or
je
push
ljmp
add
mov
and
loop
pop
cmp
and
fistps
fwait
popa
fmuls
mov
ds
out
sub
das
jne
arpl
xor
jmp
pop
lds
fisubs
push
or
cmp
dec
push
or
push
mov
push
loopne
iret
ja
xor
iret
mov
mov
push
sub
mov
mov
add
imul
or
cli
push
cmp
mov
sarb
jmp
bound
push
pop
adc
mov
incb
stos
outsb
mov
fwait
call
push
fimull
stos
inc
stc
jp
xchg
sbb
fdiv
mov
mov
jo
cmp
in
popf
pop
ljmp
or
sub
aas
lock
aad
sub
push
adc
sub
call
iret
in
mov
mov
cmp
jecxz
scas
mov
mov
dec
insb
jge
dec
sbb
in
push
mov
rclb
dec
pop
xor
in
shlb
sbb
or
fildll
inc
std
and
sub
xor
enter
scas
fwait
mov
jp
mov
pop
and
mov
push
fnstsw
sahf
pop
frstor
movsl
int
loopne
pop
sub
push
bsr
sub
repz
sub
bound
inc
and
loope
pop
imul
and
icebp
jae
mov
and
xor
cmp
fbld
push
popa
cbtw
or
and
rcr
dec
xchg
ljmp
hlt
dec
lret
movsl
out
pop
adc
add
gs
popf
jle
mov
js
fst
push
dec
add
mov
fistl
cmp
testl
jae
mov
clc
mov
add
shlb
cwtl
jmp
sbb
pop
mov
std
mov
cmpsl
rcr
and
and
addb
pop
in
and
into
out
mov
orl
call
mov
test
sbb
outsl
enter
add
add
bound
mov
rcll
push
lahf
add
inc
xchg
sub
jbe
pop
pop
push
mov
xor
cmp
xchg
out
lods
add
push
scas
and
fsubl
popa
mov
lds
nop
in
mov
xchg
lods
stos
popa
xchg
jnp
outsb
fmul
mov
loopne
xlat
stos
sbb
movsl
mov
pusha
mov
or
lds
push
add
adc
or
mov
and
xor
int3
loopne
stos
pop
mov
pop
insb
insl
cmc
addb
fstpt
xchg
ljmp
sahf
xor
mov
xor
sahf
in
sub
cmp
cmp
add
stc
lahf
jne
jo
lahf
scas
lock
or
sub
xchg
out
repnz
cmp
cmp
dec
inc
adc
cmpsb
push
mov
enter
mov
mov
or
fildl
aaa
mov
stos
insl
pop
in
fsubrs
and
lcall
test
cmp
movsb
daa
nop
lea
cmp
push
movsl
sahf
insb
or
cmp
push
lret
mov
fldt
add
and
xor
or
dec
jne
inc
adc
adc
cs
dec
test
ficoms
int3
mov
in
enter
lods
scas
mov
mov
jmp
test
lds
nop
leave
pop
mov
loope
inc
and
lock
bound
imul
mov
and
inc
adc
hlt
and
mov
loopne
fcmove
adc
mov
cmc
sahf
and
inc
xchg
inc
push
call
lret
out
hlt
bound
xor
call
fbld
rcrb
iret
lcall
aam
jle
popf
pop
xchg
adc
push
push
cmp
add
jne
inc
idivl
push
or
cltd
mov
xchg
mov
bound
sbb
mov
sub
pop
xor
lods
ret
jne
mov
rcrb
roll
in
aas
jmp
rol
test
ds
iret
lock
int3
in
in
pop
push
ds
jmp
jo
sti
and
lods
xor
fs
scas
test
mov
in
mov
ljmp
andb
sbb
std
push
je
inc
stos
dec
sbb
scas
frstor
sbb
push
xchg
into
loop
mov
and
loopne
das
cmp
mov
inc
mov
mov
mov
bnd
cld
push
shrb
cmp
movhps
outsb
xor
test
pop
stos
call
lea
nop
add
out
bound
pop
dec
cmp
in
mov
into
inc
int
loopne
shl
jg
xchg
out
ljmp
out
shlb
sbb
sbb
and
and
pusha
xor
rorb
imul
lahf
stc
bound
sarb
pop
push
in
inc
mov
js
fisttpll
sub
pop
in
insb
jmp
in
sub
sbb
jmp
outsl
mov
dec
insl
loopne
out
dec
pop
call
mov
pop
faddl
jno
or
mov
daa
pop
jle
iret
jg
mov
movsl
push
pushf
jecxz
mov
dec
pop
pop
inc
sub
push
popl
and
stos
jns
xor
dec
mov
pop
enter
xchg
cmpsl
lea
push
dec
mov
mov
jecxz
mov
aas
imul
mov
mov
mov
pop
loope
fildll
shrl
bound
add
adc
add
test
jo
ret
jmp
ja
sahf
loop
lock
std
les
in
adc
inc
int
mov
iret
sbb
dec
rorb
mov
mov
out
xor
outsl
mov
test
cli
inc
pop
dec
mov
xor
cltd
add
scas
jno
xor
mov
mov
jmp
cmp
cmp
xor
lea
add
jns
dec
cltd
and
push
inc
lods
rclb
ret
test
jecxz
into
and
inc
movsb
or
das
dec
in
bound
sub
mov
sbb
dec
stos
loop
sub
les
ds
inc
dec
pusha
cmp
sahf
jp
scas
sub
adc
pop
lods
mov
and
idivb
pushf
push
push
in
out
stos
sbb
lcall
add
cwtl
movsl
cmp
inc
dec
xchg
dec
pop
xchg
lock
in
cmc
push
nop
int
fiadds
mov
lods
mov
jo
xchg
fst
scas
mov
fidivrs
xor
les
pop
ljmp
adc
scas
arpl
xor
add
cmp
add
scas
popa
in
and
mov
andb
or
sub
cmpsl
inc
mov
outsl
add
xor
test
cmp
movsl
js
mov
add
add
aam
cltd
in
or
insl
pop
push
inc
or
movsb
dec
add
out
xor
cmp
xchg
cmp
mov
fistps
xchg
lods
test
daa
scas
lds
mov
rcrb
bound
mov
fimull
pop
dec
subl
in
int
aas
outsl
mov
mov
push
shl
aaa
cmc
or
add
movsb
out
and
mov
mov
sbb
cltd
cmpsb
sbb
icebp
mov
sub
inc
pop
gs
xchg
nop
test
xlat
fucomp
and
mov
int3
cltd
mov
cmpxchg
mov
push
push
out
cmp
call
xorl
icebp
imul
add
push
sbb
in
and
adc
inc
punpcklwd
shl
mov
into
cmp
pop
sbb
int
orb
or
mov
pop
sub
dec
mov
mov
daa
scas
mov
inc
xchg
adc
pop
and
loopne
add
loopne
pop
ljmp
repz
das
mov
mov
and
dec
jb
out
and
loopne
fadds
imul
or
outsb
xlat
int3
cwtl
add
mov
and
aam
test
lcall
jno
rcl
lahf
out
mov
mov
fcoms
scas
fsubs
popa
cmp
fidivrs
mov
mov
cmp
mov
inc
sub
push
icebp
fsub
jmp
je
dec
sbb
ds
sub
mov
loop
decl
xchg
mov
jo
ds
int
lods
and
sub
mov
lcall
pop
lret
jl
mov
pop
in
xchg
adc
stos
cld
lods
sbb
icebp
movsl
daa
cmp
push
out
lret
dec
mov
sub
push
dec
cmpsb
sbb
pop
fstpt
mov
iret
xor
outsl
adc
icebp
ljmp
fisubrs
outsb
outsl
add
loop
les
jle
lea
out
cs
loop
lret
call
mov
aas
in
jg
push
in
and
jb
adc
sahf
or
adc
cmp
stos
jnp
in
sbb
sti
and
cmpsl
stos
inc
mov
lods
mov
iret
daa
bound
gs
subl
out
outsl
and
int
cmpsb
sahf
add
lahf
xchg
inc
push
jl
bound
jle
jmp
sbb
lock
jnp
loopne
jl
das
cld
ret
and
mov
jns
pusha
insl
and
ja
imul
stos
movsb
das
mov
mov
out
cld
mov
leave
fidivrs
sbbb
cmpsl
xor
cltd
enter
fnsave
adc
fucomi
jbe
jge
aaa
push
sbb
cmp
push
outsl
stos
and
and
and
out
sub
and
mov
das
aam
and
mov
stos
and
ss
mov
push
arpl
push
mov
out
mov
and
iret
bound
out
or
pop
xor
rorb
push
xor
dec
icebp
pop
inc
das
xor
or
imul
and
int3
jb
sbb
cmpb
in
mov
imul
mov
out
in
dec
jne
aas
iret
pop
mov
push
enter
fcoml
mov
jg
pushf
and
jne
pop
outsl
add
xchg
popl
push
cmpsb
xchg
rolb
scas
mov
repz
sbb
insb
inc
sbb
in
js
jg
mov
jmp
test
mov
icebp
jge
pop
loopew
insb
lods
bound
out
test
popa
jne
das
jg
scas
mov
cmp
js
fstpt
dec
lret
mov
or
icebp
imul
bound
outsb
sbb
add
push
inc
cmpsl
and
xchg
inc
fstpl
outsl
mov
das
lds
out
iret
fucomp
and
cld
xchg
sbb
xlat
les
mov
lds
lods
dec
mov
jmp
jo
mov
fwait
dec
into
xchg
mov
mov
dec
mov
cmpsb
pop
scas
cli
mov
dec
pop
scas
in
in
outsl
sub
notl
ljmp
scas
cltd
cmc
mov
bound
popf
push
aaa
fadds
cmp
dec
inc
push
inc
push
xchg
scas
testb
arpl
pop
push
int
insl
sti
insb
rorl
mov
mov
mov
push
in
or
clc
pop
cltd
dec
pop
and
test
adc
push
push
mov
leave
fwait
mov
jns,pt
enter
insb
jg
fsubrl
out
lods
and
cmp
les
ja
xor
mov
or
mov
push
popa
popa
fwait
dec
jnp
popf
pop
iret
sbb
addr16
add
ret
pop
dec
fmull
pushf
adc
xchg
in
jo
and
sub
out
adc
loop
shrl
fwait
push
mov
insl
loopne
cltd
andb
xor
and
test
nop
mov
out
push
adc
xlat
inc
cmp
push
scas
fdivrl
add
mov
pop
pop
pop
inc
pop
inc
cmp
imul
std
loopne
cmpl
loop
dec
in
xor
scas
sub
popa
movsb
pusha
push
pop
in
int3
outsb
scas
inc
insb
popf
in
iret
loop
pop
mov
pop
lods
pop
pop
xchg
adc
aas
xlat
scas
movsb
push
cmp
repz
push
adc
sbb
dec
pop
test
cmp
jmp
cltd
lahf
dec
insb
pop
test
xor
push
jge
push
scas
pop
pop
pop
mov
dec
mov
daa
jg
scas
xor
adc
pop
bswap
mov
mov
or
test
and
addr16
jns,pn
jo
dec
sar
push
sub
pop
pop
fdivr
cmp
inc
test
loopne
xchg
pop
jl
lods
loopne
mov
imul
xor
stos
push
sbb
pop
imul
cmp
outsl
orl
rclb
inc
xchg
gs
cmpsb
xchg
push
pop
movl
fwait
cmpsl
cmp
shl
test
ljmp
sub
test
movsb
xor
mov
js
push
ror
cltd
xor
add
gs
cli
addr16
xor
xor
xchg
iret
cmpsb
pop
xchg
int3
cmpsb
ficoms
movsb
pop
adc
fdivrl
aas
pop
cmp
sti
outsl
aaa
jmp
popf
pushf
pusha
shrb
mov
mov
int3
pop
jns
xlat
je
hlt
loop
cmp
fildl
mov
sub
fucomp
cltd
sbb
lahf
mov
xchg
fsub
cmp
mov
xor
cld
inc
into
or
sbb
pusha
pusha
mov
pop
mov
fdivr
test
into
and
mov
lcall
cwtl
dec
loopne
addl
loop
sbb
shr
cld
imul
int
fisubs
pusha
sub
mov
or
loop
xchg
dec
in
inc
dec
lea
fiadds
in
adc
push
inc
pop
nop
shl
testb
popa
sub
add
outsb
mov
push
leave
stc
jle
adcb
mov
aam
sub
mov
in
bound
ljmp
inc
and
cmp
fadds
test
jbe
int3
mov
mov
out
dec
or
out
and
cmp
xchg
jp
int3
fidivrs
cmpsb
mov
add
rorb
cmpl
mov
shrl
out
les
mov
xor
aam
jmp
jecxz
fdivrl
xchg
push
lcall
pop
jno
push
outsl
lahf
pop
pop
outsb
dec
ja
or
ja
jns
xchg
jle
push
dec
call
js
jg
push
mov
nop
or
pop
imul
mov
cltd
sub
pop
sub
bound
push
std
cs
push
call
scas
mov
lahf
mov
fisttps
subb
imul
es
outsl
push
in
and
movsb
pop
and
and
pop
jmp
push
mov
arpl
lahf
test
dec
sub
pop
lret
dec
sub
push
movsl
cmp
cmp
push
lods
sub
pop
dec
sbb
mov
test
shrb
hlt
bound
iret
addr16
outsb
loop
in
or
mov
dec
test
xchg
stos
cmp
test
cltd
sahf
out
pusha
cltd
dec
cwtl
fs
out
iret
sbb
mov
cli
xchg
loopne
stos
fs
mov
mov
push
pop
sub
rorl
lods
mov
mov
shll
xor
sbb
cmpsl
cmpsb
aad
pmaddwd
jge
cmpsb
xor
or
inc
sbb
pop
pop
sbb
mov
mov
fisttpll
fwait
insl
ljmp
scas
gs
mov
jae
hlt
cmp
nop
aas
push
das
hlt
vcvttss2si
das
cmpsl
jg
pushf
test
push
movsb
xchg
adc
je
notl
fsubrl
ret
test
ret
and
adc
add
mov
push
lods
int
mov
xor
push
out
and
iret
insl
lea
lock
mov
scas
test
sub
js
das
outsb
frstor
iret
push
and
rolb
xchg
mov
insl
bound
inc
push
pop
cmp
push
sti
fdivrs
out
gs
test
add
sahf
fldenv
mov
sub
jle
inc
mov
call
outsb
cltd
sbb
in
mov
bound
and
mov
into
rorl
test
outsl
jb
cs
cmp
mov
imul
jne
dec
push
mov
mov
xor
lea
je
fstps
test
rcrl
and
jl
mov
iret
movsb
loopne
xchg
push
shlb
mov
jg
movsb
push
push
pop
shrl
icebp
loope
sub
jp
mov
sbb
cs
mov
lahf
xchg
dec
pushf
add
jmp
aas
fidivl
mov
mov
mov
push
pushf
lea
filds
mov
sub
jns
jg
lock
xor
sbb
xor
negb
mov
das
pop
lret
dec
les
mov
pusha
sub
insb
iret
adc
sub
sbb
inc
lock
std
jns
mov
pop
cltd
dec
insb
xor
sub
out
mov
pop
cmp
jmp
bound
mov
stos
outsb
xchg
lock
subb
pop
stos
insb
cmp
xor
sub
movsb
xor
mov
scas
lods
xchg
jmp
sahf
in
pusha
mov
call
lcall
pop
sbb
push
dec
test
aaa
mov
cld
pop
pop
into
cmp
pop
insl
repz
dec
mov
cli
movb
movsb
cld
inc
loop
enter
mov
mov
icebp
bound
sub
jo
lods
xchg
les
es
imul
mov
and
jecxz
out
cli
jge
mov
call
and
arpl
shlb
fsubl
lret
mov
mov
insl
sub
push
push
lcall
inc
mov
sbb
push
push
in
call
mov
je
test
faddl
sbb
call
push
bound
adc
ret
clc
fisubrl
and
jno
mov
into
push
fdiv
and
call
mov
mov
pushf
addr16
jecxz
fcomps
leave
jae
pop
inc
in
dec
sub
inc
fidivrs
jle
rorb
lods
mov
lods
int3
lock
pop
xor
pusha
std
xchg
popf
movsb
out
fsubl
inc
scas
fwait
cmpsb
xor
arpl
dec
add
pusha
sti
sbb
xor
popf
loop
movsb
lret
cmpsl
pusha
test
jns
outsl
imul
cmp
lret
and
ficomps
ljmp
mov
xor
iret
cmpsb
jns
push
xchg
and
rcrl
and
fbld
jae
leave
enter
ss
rcl
fwait
xchg
das
xor
dec
mov
into
jge
push
jne
or
scas
mov
pop
mov
inc
es
bound
loop
xchg
test
es
lret
jecxz
clflush
xchg
lret
pusha
shrb
mov
shrb
fbstp
xchg
cltd
and
push
lock
push
mov
sti
sub
ja
in
xlat
xor
test
jg
jno
ds
pusha
loopne
icebp
mov
mov
aaa
push
loop
xchg
mov
push
out
cltd
dec
int3
sti
loop
push
mov
add
out
out
cltd
xor
mov
fs
dec
movsb
jae
xchg
mov
pop
jnp
mov
int
shll
xchg
and
ds
aas
adcl
mov
push
fstl
or
and
bound
xchg
inc
jg
jo
loopne
test
loopne
popf
in
pusha
enter
stos
nop
pop
scas
aam
lret
fisubrs
inc
jmp
adc
pushf
push
iret
and
xchg
push
pop
dec
lods
dec
cmc
daa
pop
ret
out
dec
imul
or
scas
pop
insb
imul
mov
and
dec
push
aaa
lods
daa
jne
scas
jo
mov
jg
xchg
and
out
cmpl
mov
mov
or
lods
out
mov
or
aas
pop
lods
bound
cli
call
sarl
sbb
jmp
sbb
pop
sahf
inc
mov
mov
fcmovne
loopne
in
mov
sub
sbb
mov
enter
and
inc
mov
mov
xchg
and
stos
jo
rcrb
inc
pop
flds
les
pop
xchg
fsts
sbb
inc
mov
jns
ret
and
int
pusha
out
insb
fnstcw
mov
sub
fistpll
lock
scas
rolb
loop
and
test
mulb
and
mov
ret
mov
jmp
push
pop
pop
pop
rcrb
adc
mov
in
dec
cwtl
fwait
jg
adc
or
sbb
and
sub
imul
and
dec
jne
inc
lea
cmp
and
mov
dec
out
cmpsl
cwtl
mov
jle
push
mov
pop
insl
scas
test
mov
pop
push
outsl
push
std
dec
out
xchg
mov
popa
mov
mov
popa
fucompp
cmpsb
pop
sbb
xchg
push
sub
cmp
mov
loopne
sub
push
sub
and
or
push
subl
clc
push
imul
sub
or
lret
dec
cmpsb
rcr
es
xlat
fsubp
mov
lahf
or
mov
out
and
mov
scas
cmc
notb
jecxz
cs
test
jne
out
jne
ret
xor
jecxz
popa
mov
aaa
lahf
in
scas
aad
push
fsubrl
out
andb
bound
sub
mov
outsl
inc
lock
test
mov
inc
sti
xchg
loop
neg
lods
and
mov
or
inc
loopne
rol
inc
ret
add
cld
ret
out
sbb
jns
in
mov
lea
dec
add
xor
fidivrs
mov
leave
movsb
xchg
adc
loop
sub
leave
jmp
mov
imul
bound
mov
scas
insb
cmpsb
mov
scas
ja
insl
sbb
arpl
mov
leavew
mov
aas
sti
loop
fisubs
mov
push
add
sub
rorb
icebp
in
js
aam
jmp
and
xor
dec
scas
jnp
dec
push
inc
pop
sti
xchg
inc
pop
dec
shl
orl
rorl
scas
bound
push
cmp
call
mov
jg
lea
dec
pop
subl
popa
mov
xlat
jb
add
test
loopne
push
daa
sub
mov
cmp
out
ljmp
mov
ds
add
adc
xor
sub
cmp
imul
adc
mov
inc
fsubs
addr16
sbb
mov
push
push
add
cmp
jne
xchg
dec
mov
cmpsb
inc
shrl
or
fs
pop
imul
xchg
call
xor
std
cmpsl
push
cmp
and
mov
cmp
repz
sbbl
adc
movsb
in
test
cmc
push
push
iret
dec
pusha
dec
push
jecxz
popa
repnz
imul
shlb
loopne
fdivrs
push
dec
jmp
dec
ret
test
inc
mov
cmp
push
add
mov
jge
lock
popf
mov
push
ret
sbb
or
lret
mov
imul
mov
idivb
test
adc
scas
mov
cld
jmp
pop
cmp
xchg
inc
fxch
adc
in
sub
mov
outsl
xlat
dec
insb
pop
push
js
lds
dec
shlb
ret
sbb
sub
lods
outsb
rorl
movsl
push
pop
adc
jmp
shr
xchg
scas
dec
rcrl
sbb
les
stc
jmp
lahf
jecxz
sub
and
loopne
or
jns
and
dec
aam
add
dec
add
test
shrl
and
hlt
sbb
loopne
mov
pop
push
les
inc
inc
mov
fucomi
cwtl
les
lret
lods
mov
or
jmp
scas
add
lcall
test
and
cwtl
push
movsb
bound
jae,pt
add
gs
test
cmpsl
mov
enter
ficoms
rol
adcl
fwait
or
das
shll
jmp
sub
xor
pop
xchg
loopne
out
cwtl
arpl
scas
popa
testl
jno
mov
xor
inc
rorl
push
and
mov
mov
into
insb
out
addr16
mov
decb
stc
test
push
jnp
cmpsb
mov
push
test
aaa
pop
rcll
sub
jbe
cwtl
ret
inc
subl
inc
out
inc
adc
notl
scas
mov
in
mov
add
push
dec
mov
outsl
call
test
jae
insb
jmp
dec
adc
pop
xchg
jp
xor
bound
sarb
pop
sti
cmp
ficompl
sahf
or
sarb
in
pusha
cli
fwait
xchg
fwait
dec
inc
mov
mov
push
sahf
jmp
jg
jp
dec
imulb
and
js
dec
popa
xor
leave
mov
push
fdivrl
cltd
add
movsb
fucomi
mov
popa
bound
jl
pop
inc
fsubrl
cltd
mov
add
pop
fistl
pop
das
out
mov
adc
pop
mov
shl
pushaw
movsl
jmp
mov
push
push
mov
mov
int3
fs
dec
mov
bound
dec
pop
adc
out
and
xchg
pusha
jb
sbb
lods
gs
adc
xor
enter
sbb
aam
xchg
xchg
aas
push
in
sbb
xchg
jno
xchg
cmpsb
aas
jge
test
jecxz
imul
in
sbb
or
loop
xor
and
sbb
jne
insl
aas
push
lods
xorl
jno
aam
mov
mov
sub
xorb
lret
jl
sti
cmpsb
sbb
push
push
nop
cmp
arpl
jmp
mov
aad
mov
fcoms
movsb
imul
inc
jle
pop
rcl
decl
iret
popa
inc
adc
out
inc
mov
jg
nop
stc
sti
iret
loop
xor
outsb
adc
xor
loopne
stos
jne
jmp
or
pusha
lea
inc
jnp
xor
cmpsl
sub
jp
pop
jo
add
int3
pop
lods
sub
xchg
sbb
cmc
mov
ret
mov
sbbb
mov
cmpsl
lret
jp
scas
daa
rcrl
sbb
lock
fildll
add
popf
lds
movsb
xor
scas
decl
mov
ret
mov
mov
mov
mov
mov
out
dec
sub
dec
dec
adc
push
jne
adc
imulb
fs
stos
adc
bound
fstpt
popf
cltd
ss
repz
mov
and
outsl
cmp
mov
sub
jne
jne
test
ss
mov
xchg
pop
pop
int
loop
cmc
mov
jne
lods
xor
bound
fisubrs
int3
mov
cmp
arpl
xor
ljmp
xchg
leave
cmp
or
int
pop
sbb
pop
inc
pop
add
ds
xor
pop
out
lcall
pop
orb
lods
xor
out
and
into
cwtl
out
and
shr
sbb
push
xor
xor
cmp
ljmp
fsubs
into
in
nop
pop
sbb
cmpsb
adc
lods
mov
ds
divb
loop
call
or
jl
iret
iret
popa
std
pusha
push
stc
sbb
cmc
mov
dec
sbb
inc
pop
out
aam
out
add
xor
gs
movsb
nop
sub
stos
push
mov
push
jp
sarb
loopnew
arpl
pop
push
in
fdiv
bound
int3
xor
jl
push
xchg
inc
loopne
cmp
nop
mov
dec
fisubrs
int3
push
add
inc
jle
loopne
pop
or
mov
sbb
jg
in
sahf
xor
icebp
stc
nop
xchg
push
inc
arpl
arpl
int
jnp
push
aad
pop
xchg
sbb
sbb
pop
push
mov
inc
popa
cmp
xchg
push
jecxz,pn
je
push
jnp,pt
lret
sub
xorb
outsl
ltr
lea
mov
sbb
in
jg
pusha
gs
outsl
add
pushf
and
xchg
into
jmp
pusha
mov
in
mov
cmpsl
adcb
pop
cltd
into
sbb
pusha
xchg
mov
lods
adc
cmp
push
push
icebp
or
cmp
subl
mov
cmp
fs
jecxz
loop
lret
inc
push
cltd
cmpsb
inc
push
cmp
mov
pushf
clc
call
lods
inc
cmp
pusha
in
pop
sub
scas
cmp
pop
jmp
cltd
and
out
in
bound
dec
mov
or
pop
outsb
cmpl
sbb
scas
mov
mov
les
loop
stos
push
dec
shlb
xor
xchg
mov
push
xchg
popf
stos
xchg
or
incl
int
mov
pop
and
push
cli
outsl
loopne
xor
test
mov
out
jmp
dec
pusha
test
scas
andb
shlb
movsl
movsb
jg
stos
ret
and
mov
and
inc
cmp
mov
jge
mov
iret
mov
ret
shlb
scas
jns
xchg
dec
loopne
add
add
mov
pop
inc
vpmacssdqh
loopne
and
filds
adc
sbb
pop
and
outsb
mov
cmpsl
repnz
push
pop
js
pop
js
mov
shlb
popa
outsb
inc
push
std
mov
cs
add
rolb
sub
les
mov
fildll
sbb
lret
leave
sub
lock
adc
into
outsl
push
mov
ret
shrb
andb
mov
dec
pushf
stc
pop
dec
cmc
sub
test
test
mull
sti
js
xor
pop
stos
jb
jg
movsb
mov
cmp
and
sbb
aaa
cmc
into
push
in
xor
popa
cs
loopne
and
sahf
mov
lret
outsl
pop
fdivl
mov
adc
mov
mov
arpl
rorb
push
out
xchg
ja
mov
scas
cld
cltd
into
jne
arpl
movsl
insl
fistps
adc
decb
in
jo
int3
rcr
adc
div
pop
xor
and
dec
shrl
pop
or
mov
or
bound
mov
push
popf
mov
loopne
lcall
imul
outsl
jp
pop
arpl
xchg
enter
mov
cli
fldt
aam
mov
push
xlat
js
call
lret
and
pusha
inc
lods
pop
lret
push
out
fsub
outsl
out
ds
mov
fs
push
bound
xor
cmc
pop
jae
jo
mov
pusha
sub
loopne
scas
bound
inc
cmp
out
subb
mulb
insb
xchg
xchg
jns
subb
iret
jmp
mov
inc
xchg
cld
push
cmp
fidivrs
sarb
imul
cmp
divl
add
dec
and
mov
or
xchg
mov
repz
jnp
scas
shll
and
lock
jns
push
xor
pop
addr16
mov
adc
and
and
pop
in
sub
jg
or
std
mov
sbb
out
loopne
insl
sub
daa
sbb
xor
fucomi
loopne,pn
into
vsubpd
inc
and
jp
scas
test
xchg
rorb
and
cmp
rcrb
xor
out
dec
insb
pop
mov
cmp
inc
bound
dec
outsw
and
xor
xor
outsb
loope
ds
sub
popa
popa
js
sbb
jg
lods
and
push
loop
or
int
stos
jp
insb
cmp
test
add
and
rcr
or
xor
jl
int3
inc
in
iret
push
pusha
lods
xchg
out
mov
mov
or
adc
xor
cs
or
dec
les
push
xor
shr
jno
mov
dec
jnp
lret
int3
or
int3
out
cmp
xchg
filds
push
sub
into
cli
dec
sub
push
mov
xor
mov
pop
insl
lods
xor
pop
xchg
cmp
sti
pop
cmp
jp
repnz
std
push
hlt
dec
sbb
push
femms
fidivrs
jmp
lcall
pop
add
into
outsl
sbbb
mov
mov
mov
fisttps
movsb
jnp
fldenv
mov
push
fcmovu
shlb
lcall
pop
push
add
jle
scas
js
sub
idivl
insl
shld
mov
pop
cltd
mov
pop
xchg
mov
repnz
fsubs
push
in
shll
sar
in
mov
xchg
dec
out
sub
pop
cmp
mov
les
cmp
push
and
in
lahf
and
dec
jns
dec
jo,pt
mov
dec
pop
hlt
stc
aaa
testl
lcall
push
mov
jnp
push
ret
int
stos
xchg
movsb
cs
pavgw
dec
jnp
inc
pop
lcall
lret
sbb
cmp
push
sahf
sbb
cli
iret
shlb
xchg
mov
sbb
mov
addb
lea
je
sub
pop
mov
int
and
dec
push
test
sub
cmpsl
add
dec
leave
pop
scas
lcall
mov
sub
cmp
sbb
xchg
add
je
sub
mov
xchg
push
imul
xchg
loop
es
cmp
sub
xor
pop
sti
jae
adc
add
inc
popa
clc
dec
push
cmp
push
push
test
pop
push
xchg
mov
sub
sub
loopne
lcall
cmpsl
pop
scas
lods
pop
sub
mov
sahf
mov
pop
push
sub
je
insb
jecxz
rolb
pop
sbb
out
negl
cmp
mov
adc
fadd
arpl
push
ljmp
daa
dec
sub
sbb
les
fs
rcrb
xchg
iret
das
sbb
loopne
je
push
pop
test
mov
and
scas
mov
mov
stos
icebp
fisttpll
xchg
mov
mov
fsubr
jno
pop
mov
sub
dec
ljmp
sbb
mov
shlb
xchg
sub
pop
push
scas
push
jle
cmpsb
add
lahf
add
sahf
and
arpl
cmpsb
mov
cwtl
jge
cwtl
sub
sub
into
das
out
sarb
arpl
sub
jg
pop
push
test
pop
enter
dec
popf
fstpl
test
push
sbbl
sbb
scas
xchg
cld
outsl
dec
outsb
insl
cmpsb
and
data16
out
lret
inc
movsl
shlb
outsl
fwait
dec
shlb
arpl
repz
jecxz
push
mov
sbb
sarb
dec
in
std
pop
movsb
andb
int
pop
mov
push
push
xchg
int
movsb
mov
stos
lret
in
cmp
or
or
aam
sbb
mov
pop
iret
dec
jge
push
mov
push
mov
xchg
lods
cmp
or
pop
lods
xor
outsb
dec
in
jne
hlt
test
or
mov
jne
imul
dec
push
mov
pusha
sbb
nop
adc
add
bound
push
popl
xchg
push
or
out
outsb
add
js
lret
int3
jb
inc
mov
arpl
in
lret
repz
rclb
movsl
orl
bound
mov
mov
mov
in
mov
les
test
cmc
pop
cmp
sbb
pop
inc
popf
imul
loopne
shll
sarb
lcall
push
lret
lret
movsb
mov
push
ret
or
dec
and
inc
ja
push
fwait
or
sbb
sbb
test
int3
int3
or
in
decb
addr16
inc
push
jmp
fisttpll
adc
iret
fdivrp
and
movsb
mov
add
lods
les
jae
mov
insl
cmpb
mov
xchg
lods
xor
xchg
das
add
sbb
mov
ficoml
into
adc
lcall
gs
push
xchg
pop
lods
sbb
pusha
rcll
lods
or
and
fisubrl
push
cld
rcrb
loopne
cmp
clc
add
mov
dec
sbb
jns
cmpsl
imul
movsb
push
inc
and
mov
push
adc
xchg
push
loope
stos
sub
sub
and
xor
rorb
lds
mov
push
shlb
cmp
shlb
push
gs
sbb
in
int3
hlt
pop
aaa
or
xor
push
negl
push
cmp
int
lcall
lock
and
mov
mov
shrb
fadd
js
bound
mov
fiaddl
pop
ja
mov
ret
loopne
in
xor
or
sub
ror
out
or
mov
mov
and
lods
out
in
sbb
mov
mov
adc
mov
lock
icebp
in
mov
popf
lret
lea
jl
xchg
hlt
add
pop
cmc
pop
in
mov
mov
dec
test
pop
push
inc
and
or
cmpsl
pop
fcmovnb
movsl
ljmp
adc
cmp
sub
sub
push
dec
mov
movsb
out
jecxz
xor
enter
seto
orl
and
mov
hlt
test
cmpsb
and
mov
mov
cmp
dec
cmp
sub
push
xchg
ljmp
mov
loopne
sub
pop
sbb
mov
rcll
ljmp
xchg
cmp
lods
test
imul
or
rcrl
pop
ret
out
push
pushf
xlat
aaa
sbb
das
cli
push
push
dec
adc
sbb
jmp
stc
pop
or
xchg
sub
jno
push
sbb
scas
fwait
dec
je
scas
ljmp
jnp
sbb
lret
loopne
cmp
or
mov
bound
jae
lods
cld
pop
pop
cltd
rorl
sbb
and
leave
xchg
push
dec
test
push
enter
insb
or
shlb
xchg
insb
jae
test
mov
sub
sahf
outsl
sub
stos
int
and
scas
push
cmp
leave
and
pop
loopne
and
cs
das
cli
adc
out
outsl
out
je
or
mov
fwait
das
int3
call
and
xchg
cmovle
mov
fdivrl
outsl
insb
mov
mov
inc
xor
cmp
add
fcoml
dec
sbb
xor
pop
sbb
lods
sbb
mov
insl
adc
cld
adc
std
fcompl
gs
daa
call
ljmp
xchg
cltd
iret
and
cli
insb
dec
and
jecxz
xor
ret
in
lds
cmpb
xor
xchg
sub
cmp
fsubl
pusha
pop
sti
cmp
inc
fbstp
push
orl
pop
out
pop
jno
xor
inc
aam
add
add
popa
ds
sub
fidivrl
push
icebp
movsb
mov
jmp
jp
and
in
pop
cld
fcmovne
bound
or
test
outsb
in
iret
xorl
movsb
inc
in
push
or
xor
push
in
xor
mov
jg
call
popa
mov
sbb
scas
push
inc
xor
jo
lods
addl
sahf
arpl
mov
pusha
sti
mov
lock
iret
cltd
add
push
mov
inc
xor
or
mov
xchg
and
outsl
negb
out
sbb
sahf
pop
inc
mov
nop
rcrb
xchg
add
leave
mov
ficomps
int3
xor
pop
xor
insb
bound
test
aam
sarb
out
push
out
rolb
dec
je
inc
push
sahf
test
cmp
or
xor
out
lds
jl
mov
test
cmpsl
cmpsb
mov
aaa
outsb
xor
jne
scas
xchg
fucomip
and
sbb
test
add
in
mov
sarb
mov
and
cs
iret
fs
cwtl
int3
enter
sbb
mov
insl
cmp
dec
hlt
mov
or
loope
lret
and
mov
pop
insb
sub
je
or
mov
addr16
lret
sub
setae
mov
sbbl
in
adc
push
mov
pop
test
push
cld
in
ficoml
cmp
stos
insl
in
insb
test
jg,pt
jecxz
bound
and
and
xor
loop
stos
insl
and
or
pusha
lods
out
jle
mov
sbb
pop
jns
insl
and
out
and
and
sub
movsb
outsb
ds
pusha
rcr
sub
mov
dec
int3
push
imul
inc
adc
push
fwait
arpl
pop
dec
das
adc
pushf
fcoml
dec
cmp
jl
push
fisttpll
mov
mov
mov
and
push
in
inc
outsl
mov
insb
and
pop
in
ds
mov
outsl
sub
mov
repz
push
dec
cmp
ja
aad
in
mov
dec
cwtl
enter
sbb
iret
std
mov
lcall
xchg
pop
push
and
jnp
rol
outsl
push
in
cli
jb
push
pop
notb
imul
push
rolb
pop
or
movsb
test
sbb
es
mov
mov
xor
orl
mov
mov
push
mov
mov
scas
push
fadd
and
in
mov
fildll
popa
pusha
into
test
rcrb
stos
aam
insb
je
loopne
ror
mov
push
jl
rcl
and
mov
lretw
mov
out
or
pusha
pop
xor
into
or
xor
jge
inc
push
fidivrl
test
adc
enter
cmc
out
sbbl
mov
mov
pop
push
jg
push
and
lahf
add
rclb
aaa
sbb
pushf
daa
inc
and
movsl
and
test
bound
or
pop
arpl
js
pusha
pop
and
pop
nop
iret
test
loopne
sbb
sub
stos
or
mov
pushf
sub
sbb
imul
int3
vmovaps
mov
insb
xor
and
imul
push
or
mov
iret
test
jne
adc
shll
dec
add
int
ret
aaa
out
aam
divl
mov
dec
and
loopne
push
jnp
xlat
cmp
xor
or
jo
insl
xor
insl
mov
cwtl
lods
scas
or
or
stos
cli
in
andb
or
int3
in
push
mov
mov
fisubrs
aaa
cwtl
stos
test
int3
sub
fscale
pop
and
xor
lods
icebp
xchg
das
jne
fstp
mov
out
bound
lods
pusha
jecxz
or
test
lcall
les
sub
movsb
sub
xlat
jns
enter
test
lret
mov
movsb
neg
cwtl
or
not
cwtl
popa
mov
cltd
rcl
lahf
sbb
cltd
loop
add
push
sbb
mov
and
in
fistpl
inc
lret
sub
inc
in
daa
out
in
icebp
fnsave
mov
adc
pushf
xor
lods
adc
pusha
fbld
sbb
das
scas
lods
je
orl
addr16
add
and
ficoms
or
pop
mov
into
add
and
lret
pop
dec
add
and
add
lret
and
mov
cmpsl
mov
in
ljmp
jp
sub
sub
pushf
sub
bound
xlat
cmp
lret
ja
push
mov
mov
mov
mov
sbb
out
addr16
lock
push
les
and
lods
ja
inc
cmpsb
repz
icebp
leave
add
push
in
mov
fs
and
sbb
cltd
cmpb
sub
and
loope
sub
in
imul
cmp
add
lret
test
bound
add
nop
mov
in
sub
cs
lds
mov
lods
icebp
aaa
sub
sbb
xor
or
pop
sub
insb
or
mov
fwait
or
out
call
mov
xchg
insb
out
cltd
mov
rclb
pop
fildl
pusha
dec
lods
mov
push
mov
pop
push
pop
or
mov
pop
push
sbb
icebp
into
imul
pop
pop
jmp
movsl
push
aam
ss
push
and
mov
fsubr
ljmp
in
sti
jecxz
adc
jns
fnstenv
cmc
add
faddl
add
mul
mov
js
in
lods
in
cmpsw
insb
jno
xor
pop
or
sub
jl
mov
and
outsl
jle
mov
es
in
movsb
sbb
imul
sub
sub
mov
ljmp
add
pop
gs
adc
mov
jbe
shll
dec
int
mov
lret
ljmp
ret
ss
incb
mov
cmpsl
adc
ficoms
push
icebp
cli
loopne
cmpsb
jle
pop
dec
filds
dec
test
mov
call
fisubs
mov
mov
cmp
fistpll
cld
rcr
and
cmp
cmp
and
mov
add
decl
mov
mov
jecxz
outsb
jo
mov
movsb
push
rcr
and
sub
je
cmpsl
aas
ret
mov
out
jge
pusha
pop
push
lret
sbb
sub
push
out
dec
pop
je
cltd
mov
mov
data16
jmp
in
cltd
scas
bound
movsl
cmp
jns
mov
orb
mov
sub
jmp
cmp
sub
mov
jae
pop
rorb
cmpsl
pop
mov
fwait
jecxz
icebp
icebp
test
cmp
filds
cmp
sbb
in
push
and
idivb
in
mov
sub
call
mov
addr16
ja
outsl
dec
call
pusha
bound
stos
mov
bound
xchg
fimull
adc
out
lcall
ret
push
pop
pop
into
inc
and
pop
and
xchg
mov
xlat
scas
or
fs
mov
cwtl
pop
cld
jnp
pop
jo
adc
xchg
mov
xor
sub
sarl
std
std
adc
arpl
repnz
outsl
push
push
pushf
or
lahf
call
sbb
and
push
adc
nop
pusha
mov
popa
mov
push
push
mov
loop
lahf
fistps
fs
sub
or
mov
sub
mov
rcr
pop
push
and
mov
in
mov
or
je
pusha
stos
xchg
mov
inc
mov
mov
insb
or
pop
lret
xchg
pushf
fmulp
pusha
add
stos
jl
mov
sbb
fbstp
movsb
es
xchg
add
dec
sub
repz
dec
lea
mov
mov
clc
cmp
add
add
jo
cltd
in
push
push
in
prefetchw
cld
or
lret
push
xchg
adc
aad
cld
shrb
mov
test
add
cmp
arpl
pusha
test
mov
mov
jg
add
push
jnp
cltd
dec
pop
movsl
inc
arpl
lods
jg
nop
loope
lds
sub
shrb
cmpsb
iret
ret
mov
movsl
loopne
jnp
sub
js
into
add
adc
mov
inc
scas
and
inc
add
int3
lock
dec
xor
fisttps
pop
into
sub
out
movsl
dec
push
daa
fwait
mov
add
pop
int3
adc
push
bound
mov
cltd
mov
jnp
mov
daa
sub
and
mov
push
enter
dec
fsubp
pop
pop
or
orl
lea
push
jnp
loopne
bts
mov
cmp
mov
pushf
in
adc
push
xor
push
stos
push
xor
mov
jecxz
mov
mov
pop
sbb
or
cmp
iret
pop
cmp
cmp
pusha
xchg
mov
negl
mov
lret
sbb
aas
dec
ret
shll
scas
or
rcrb
aam
loop
mov
mov
cmpsb
add
repz
add
mov
pop
outsl
push
mov
movntdq
es
and
mov
lods
mov
xor
data16
out
xlat
mov
xchg
cmp
scas
ret
rcrb
popa
adc
pusha
test
lahf
xor
les
pop
insl
and
iret
add
jmp
lret
mov
mov
push
lret
test
incb
call
and
mov
push
sub
mov
sahf
test
roll
xchg
or
adc
dec
mov
fs
popl
push
arpl
into
jecxz
enter
pop
ret
mov
add
and
or
pop
arpl
sahf
loopne
imul
xchg
lret
mov
mov
cmp
dec
lcall
pop
add
dec
sub
shlb
enter
xlat
xlat
and
test
jnp
and
inc
sub
iret
mov
mov
repnz
rcll
push
push
ds
pop
enter
mov
loopne,pt
leave
repnz
test
and
push
mov
flds
and
or
testb
pop
std
mov
fistps
fsubrs
push
filds
cli
int
and
sbb
push
lcall
loopne
dec
mov
jno
add
cltd
cmp
lods
jnp
outsl
in
andl
sbb
jecxz
ret
js
addl
jbe
and
ret
mov
add
mov
int3
scas
sbb
or
xor
rorl
and
shlb
fcom
dec
jb
bound
mov
bound
xor
cmc
movsb
mov
xor
xor
shll
mov
sub
inc
mov
in
or
add
loop
xor
push
cmp
and
jl
xchg
pop
jnp
popa
jmp
loop,pn
sbb
mov
iret
sti
push
imul
and
mov
cli
cmp
into
jle
outsl
mov
push
jbe
mov
mov
fsubl
test
jo
xchg
outsl
mov
leave
mov
xlat
dec
test
dec
hlt
or
jle
ljmp
dec
lret
js
sub
pusha
push
mov
adc
cmp
mov
insl
add
dec
mov
lock
inc
cmp
ficomps
add
jl
cwtl
pop
data16
dec
mov
dec
and
dec
xchg
xchg
push
mov
lret
xor
lds
xchg
pop
ficoms
lods
jne
aaa
push
push
push
decb
inc
xchg
or
sbb
jnp
mov
les
mov
push
push
mov
inc
bound
ffreep
pop
subl
loopne
mov
xor
enter
nop
inc
dec
cld
hlt
cmpsb
rol
mov
xchg
add
test
pop
fdivs
mov
rcrb
dec
pop
scas
mov
fbstp
scas
pop
push
cmp
xchg
out
bound
imul
sub
mov
int3
inc
mov
adc
xchg
nop
sub
mov
aas
dec
nop
out
mov
fiadds
lods
in
mov
jns
subl
scas
popa
mov
pop
ljmp
inc
mov
mov
xchg
or
xchg
jmp
cmpsb
mov
xchg
ljmp
jp
das
cmp
lcall
mov
dec
les
sti
mov
sub
jnp
push
adc
popf
fwait
and
shrb
add
test
into
sbb
mov
int3
mov
outsl
lods
mov
rorl
mov
ret
int3
ret
xor
cmpsb
pop
outsb
in
push
or
aad
cmp
addr16
sti
hlt
movsb
fnsave
out
sbb
bound
pop
fbstp
fstl
movsb
push
and
insb
xlat
fs
aad
adc
jo
mov
or
pusha
hlt
data16
inc
and
orb
mov
test
int3
push
jl
loopne
int3
inc
fwait
mov
cmp
aas
mov
dec
insb
cmp
out
xorb
scas
cltd
fdivrl
sbb
adc
ljmp
lret
cmpsl
mov
mov
push
popf
xor
rcll
xorb
mov
fwait
jge
lods
fisubs
pop
subb
insb
movsb
into
ret
cwtl
mov
mov
lret
out
mov
out
mov
in
xchg
dec
test
jle
mull
xor
add
movsl
nop
or
lahf
mov
pop
fwait
pshufw
xchg
add
pop
test
iret
push
push
es
loope
lock
inc
cmp
je
push
cmc
repz
test
ja
push
xor
mov
push
dec
ds
inc
xor
inc
xor
mov
sbb
push
test
cmp
fists
jg
jo
sar
scas
push
lock
dec
dec
popa
sbb
outsl
arpl
insb
ss
mov
pop
leave
sub
ret
mov
js
push
fimuls
sbb
setae
fisubrl
or
lods
ljmp
fcomps
loopne
and
in
cmp
lcall
cmp
movsb
mov
test
adc
or
fs
push
mov
aad
fstpl
xchg
cmp
pop
mov
xor
dec
fidivrs
push
daa
ret
imull
push
lret
paddq
mov
pusha
mov
lds
mov
push
pushf
lods
inc
lods
popl
xlat
ret
sbb
and
data16
mov
mov
push
shll
and
loopne
lock
std
rolb
xchg
in
mov
inc
inc
rcrb
mov
pop
adc
mov
cmpsb
jp
xor
mov
dec
pop
and
push
lock
and
test
movsb
lods
stos
pop
orb
add
jns
cmp
jns
and
cmp
xorl
mov
jno
aas
mov
lods
or
mov
add
dec
pushf
push
scas
cld
adc
cmp
push
xor
mov
imul
sub
cmpsb
sub
mov
pop
ss
add
arpl
dec
ret
fwait
loopne
xchg
mov
enter
push
aas
lock
in
cmp
das
cmp
mov
sbb
call
ficompl
lods
pusha
cmp
lods
sub
aaa
dec
xchg
aaa
shrd
adc
in
repnz
mov
inc
into
imul
fwait
mov
adc
push
pop
pop
xor
sub
cmp
jecxz
pop
shl
enter
aas
push
mov
lock
test
add
add
pusha
pop
inc
lret
sub
pop
icebp
fisubs
das
dec
lods
pop
mov
imulb
cmpsl
xchg
in
add
ret
js
pusha
test
popa
int3
fwait
and
call
rcrl
push
cltd
jle
pop
sub
ror
es
add
out
aas
xor
lcall
xor
mov
cmp
ds
xor
das
test
sbb
xor
xchg
ficoms
xor
pop
push
or
fmul
mov
ror
xchg
mov
pop
stos
cld
test
dec
bound
inc
cmpsl
cmpsw
jle
jno
mov
test
mov
pop
shrb
pushf
mov
mov
jnp
lods
adc
jg
dec
loop
and
lcall
aas
ds
arpl
mov
int3
dec
and
adc
test
inc
lods
xchg
cmp
sub
stc
inc
mov
or
sbb
cmpsl
cmp
fwait
icebp
leave
shlb
sti
jo
ds
mov
cltd
mov
sahf
mov
xchg
mov
insl
mov
adc
xchg
repz
adc
and
mov
pop
fcomi
push
into
in
icebp
fwait
xor
cmpsb
mov
icebp
xchg
sub
xor
xchg
xchg
xor
jge
xchg
test
shll
cmpsb
test
mov
bound
icebp
scas
jnp
mov
mov
repnz
add
mov
insb
test
call
mov
mov
ror
loopne
addr16
mov
inc
scas
inc
xor
fimuls
mov
mov
mov
sbb
jmp
push
pusha
cmp
xor
or
jae
je
lock
out
pop
push
pusha
dec
and
mov
inc
push
sbb
sbb
pop
scas
fsubrs
pop
test
dec
and
ljmp
cs
rorl
and
xchg
mov
and
sbb
inc
xchg
inc
ds
xor
movsb
sub
cmc
aam
imul
test
imul
mov
pushf
fidivs
int
daa
das
insl
fnstsw
dec
pushf
xchg
lds
cli
popa
mov
mov
mov
ret
call
jge
pop
scas
xor
popf
jnp
mov
or
lret
pop
loopne
dec
sub
mov
push
outsl
out
push
lock
mov
fs
xchg
mulb
icebp
fptan
fstpl
jnp
fsubl
pushf
and
aas
bound
dec
xchg
mov
es
xorl
dec
push
jno
or
std
lcall
andl
lret
faddl
and
jno
jl
xor
test
lds
and
bound
call
out
sbb
iret
xchg
sti
xor
aam
xor
leave
jge
pop
xor
clc
nop
jg
dec
rorl
andl
push
fnstsw
movsl
cld
test
mov
and
add
cmp
fcoml
mov
sub
fwait
xor
push
or
leave
xor
imul
into
xor
cmpsl
sbb
xchg
scas
into
add
xor
mov
cmc
dec
pop
cltd
pop
cs
push
jecxz
fs
push
loopne
dec
mov
lock
cmpsb
sub
pop
xchg
enter
and
jle
jg
and
fwait
out
jne
aam
add
cmpsl
das
xorl
cwtl
or
pop
push
fisubs
fsts
scas
out
xor
test
push
push
insl
lret
stos
cmp
fisubs
out
xchg
pop
xorl
xchg
inc
add
jo
cmp
xchg
lock
and
jbe
stos
cld
xorb
into
lret
in
imul
into
out
nop
lahf
xlat
mov
inc
pop
movsb
popf
fnstsw
jecxz
push
mov
mov
pop
out
lahf
into
idivl
mov
nop
fiadds
and
or
pop
nop
scas
push
and
pop
loopne
and
test
leave
pusha
outsl
jle
shl
enter
push
pusha
js
xchg
add
imull
scas
mov
mov
mov
mov
loopne
shrl
pop
push
sahf
add
arpl
in
stos
stos
lock
inc
mov
pop
dec
mov
push
mov
ror
jge
mov
lock
sub
bound
lret
push
adcl
pusha
loopne
shrb
and
psubw
movsb
jbe
fs
dec
sarb
cmp
pop
loope
mov
lods
inc
pop
insb
cltd
jle
fisttps
rorb
in
cmp
lcall
add
pop
das
pushf
out
ds
test
popa
das
cmpsb
ds
add
dec
loopne
adc
mov
dec
xchg
inc
test
in
bound
cmpsl
and
push
jl
jge
fs
cmp
dec
fst
or
andb
clc
nop
stos
sbb
add
inc
mov
inc
iret
adc
dec
pop
add
xchg
outsl
enter
call
pextrw
sbb
cmpsl
nop
and
lds
jne
push
setge
push
enter
mov
mov
cs
xchg
adc
into
scas
test
out
test
nop
add
mov
aaa
data16
pop
adc
fdivl
test
push
mov
aam
xchg
ret
imul
call
inc
mov
lds
fdivrs
adc
push
jmp
cmp
adc
iret
mov
or
iret
sbb
mov
cmp
loopne
jmp
xor
sbb
mov
lcall
mov
fwait
mov
lods
mov
daa
out
push
jbe
decb
fidivrs
push
push
dec
mov
sti
add
psubq
add
gs
out
mov
cmp
and
adc
cli
pusha
mov
jbe
fisttpl
inc
test
sub
dec
scas
loopne
rcrl
pop
or
imul
fdivs
xchg
dec
xor
adc
push
loopne,pn
mov
ficomps
ljmp
addr16
fnsave
mov
mov
mov
in
orps
out
and
js
mov
cmp
gs
icebp
mov
pusha
adc
add
int3
mov
xor
pop
ret
or
movsb
movsl
and
shl
arpl
out
fnstsw
movsl
lds
mov
xlat
adc
cmp
scas
jl
push
aad
out
shll
std
addr16
xor
std
jae
out
pushf
dec
cmpsb
mov
adc
mov
stc
pop
sub
pop
rcl
mov
imul
mov
bound
adc
stc
xor
dec
shlb
sbb
cmp
mov
inc
std
lret
call
xorl
nop
je
dec
push
pop
sbb
push
div
lahf
inc
iret
imul
sahf
lods
dec
outsb
inc
pop
pop
jnp
mov
test
inc
sub
sub
fisubs
xor
mov
gs
jmp
mov
xor
add
jge
push
lods
and
into
scas
loop
lcall
mov
jp
sar
push
push
mov
lods
push
sbb
jns
add
sbb
sar
in
cmp
mov
xor
inc
jae
pop
mull
mov
pusha
ret
push
pop
inc
rep
and
rolb
lods
cmpl
fisubrl
bound
rcll
rclb
cwtl
movsl
enter
outsl
mov
inc
jp
repnz
ja
pusha
bound
scas
dec
out
and
mov
bound
mov
je
xchg
fs
push
loop
jo
xchg
add
push
pusha
sahf
in
add
loopne
mov
mov
pop
in
pop
inc
fadd
out
scas
push
xor
cltd
xorb
push
gs
mov
ss
test
jle
sahf
sub
cmp
mov
jb
ror
imul
jmp
into
jb
aad
pusha
int3
movsb
jno
lret
adc
push
aas
scas
outsl
inc
test
fwait
dec
sub
xor
push
adc
movq
jl
xor
scas
xor
test
cmpsb
adc
outsb
sub
add
das
push
mov
cmpsl
js
mov
push
bound
add
add
cmc
imul
stos
push
and
lea
sbb
adc
arpl
push
loope
repz
cltd
jg
and
loopne
sub
aam
popl
mov
or
insb
xor
push
fcompl
ret
xchg
inc
iret
arpl
bound
ret
jle
xor
into
inc
mov
into
mov
sbb
adc
mov
cld
push
xor
xor
inc
pushf
jnp
jg
jl
testb
cltd
pushf
inc
jge
into
or
push
lcall
das
std
sbb
mov
sarb
cmp
sbb
aas
outsl
xor
in
and
push
mov
jb
popf
push
xchg
out
mov
aaa
cmp
xor
push
inc
mov
mov
outsl
lahf
xor
adc
iret
bound
adc
dec
popf
lret
and
adc
jns
mov
or
mov
inc
out
push
push
fbld
sub
mov
or
adc
out
pop
aaa
jnp
or
lods
adc
push
sarb
aam
mov
push
push
cli
movsl
dec
jno
or
push
divl
popa
mov
dec
mov
xchg
sub
pop
shlb
cmp
cmp
sti
dec
shll
ljmp
shld
add
fcmovnbe
cmpsl
dec
fs
xlat
xchg
rcrb
fmul
pop
fiadds
mov
bound
ljmp
stc
scas
lret
or
test
and
lret
sti
in
int
fadd
push
popa
loopne
xorl
bound
sbb
pop
idivb
sbb
pop
sbb
push
aas
js
fucomi
and
add
xor
sbb
sbbb
pusha
pop
lods
sbb
scas
mov
stc
loopne
cmp
inc
adc
xchg
dec
jo
mov
cltd
das
lds
pop
insb
or
or
rol
or
xor
sbb
add
xor
mov
cltd
add
int
cld
cmpsb
pusha
repz
sti
aam
scas
call
dec
pushf
insb
xchg
xchg
lea
mov
in
lea
popa
std
fcmovnbe
outsb
int3
adc
sti
push
push
inc
cwtl
out
iret
pop
push
adc
mov
fmuls
fisttpll
mov
mov
dec
cmp
sahf
xor
rorb
xchg
dec
cmp
lret
imul
enter
cwtl
sahf
fcoms
jnp
lcall
scas
xor
pop
pusha
in
add
fbstp
mov
les
in
ja
dec
fcomps
std
fidivrs
idiv
arpl
mov
jmp
cltd
lock
dec
pop
xchg
dec
or
nop
insb
test
mov
sbb
aas
lret
mov
test
mov
add
sbb
mov
mov
icebp
jecxz
arpl
imul
js
scas
and
jo
stos
mov
adc
fs
jb
pop
jb
jne
dec
lods
pop
jg
xor
adc
ret
into
cvtps2pi
push
cmc
mov
mov
jbe
int
pop
push
jae
inc
or
adc
pop
or
dec
orl
sbb
dec
rorb
dec
xchg
mov
mov
cmpsl
and
sbb
ffree
outsl
fldt
add
sub
mov
sbb
pusha
pop
rcl
fildll
pop
pop
inc
dec
add
aam
xchg
jecxz
outsl
jnp
ss
out
sti
sbbl
and
loop
cmp
pop
sbb
or
arpl
lret
shrb
daa
push
and
repnz
bound
dec
cmc
popa
push
cmpsl
add
lock
jg
dec
xchg
dec
movsb
pop
dec
cltd
cmp
sahf
and
sbb
jecxz
movsl
imul
out
xchg
scas
lods
cli
sarl
movsl
inc
mov
call
jg
nop
fsubrs
mov
cmp
orb
pop
push
repz
popf
and
out
jno
outsl
dec
and
jbe
and
mov
mov
cmp
dec
add
into
and
and
pop
mov
pop
out
test
rorb
sub
or
ds
pusha
sti
or
sbb
insb
popf
inc
push
in
mov
scas
mov
mov
and
jle
je
mov
test
jae
jle
dec
mov
ret
ret
ljmp
mov
sbb
sahf
fwait
xor
sti
jno
addr16
xchg
cmp
cltd
shlb
mov
loop
outsl
add
mov
jp
or
popf
imul
inc
inc
mov
je
outsb
sbb
xchg
and
jecxz
sub
iret
push
push
push
addr16
cli
icebp
stos
in
xor
cvtdq2ps
mov
xchg
test
adc
fcomps
pop
push
mov
adc
pop
and
xorl
xor
push
push
mov
pop
cmp
cmp
ja
xchg
inc
jmp
loop
out
int3
rorb
lock
test
jmp
or
lock
dec
mov
out
mov
xor
jne
cld
sbb
pop
dec
adc
adc
imul
sahf
scas
imul
sbb
adc
push
cli
loop
jl
ds
jge
push
pop
cmp
stos
jns
aas
cltd
mov
stos
lods
mov
mov
fdivl
lret
push
out
ljmp
lret
in
fnsave
hlt
mov
cltd
shlb
stc
aaa
call
pop
adc
sub
outsl
cwtl
int3
enter
cltd
les
pop
cmp
mov
ja
aas
pop
imul
inc
fwait
cwtl
jg
shll
pop
outsl
mov
mov
mov
xchg
mov
cmp
xlat
push
xor
xchg
jae
add
iret
movsb
faddl
pop
add
pop
or
enter
ret
aad
mov
sub
and
rorb
jge
sub
push
stos
out
mov
inc
imul
jae
push
and
lds
insb
xchg
ret
push
pop
push
cmp
dec
pop
fisttpl
jl
jecxz
subl
test
test
jecxz
lcall
jl
sarl
fwait
add
mov
daa
jle
mov
lods
xchg
jae
xor
push
mov
jbe
imul
or
mov
jae
sub
movsb
or
insb
pop
dec
pop
pop
fldl
pop
xchg
loopne
lds
out
jg
sub
movsb
xchg
ss
and
and
pop
shlb
or
pusha
test
data16
xor
cmpsl
insb
add
and
inc
movsb
xchg
adcl
frstor
add
enter
adc
sub
xor
sub
repz
fnsave
pushf
adc
aaa
adc
es
mov
adc
lea
push
cmp
cltd
inc
sbb
push
stos
inc
into
cmp
mov
shrb
push
call
fcmovb
mov
or
into
scas
popa
mov
add
andb
outsb
xor
orl
cs
pushf
pusha
test
js
add
push
in
insb
pop
jecxz
jo
push
repz
int
in
je
nop
pop
gs
cli
add
xchg
mov
xchg
xchg
leave
inc
mov
dec
in
fadd
popa
adc
in
iret
jl
out
test
mov
xchg
mov
int
and
cmc
jb
cltd
pop
adc
inc
mov
inc
shl
mov
mov
outsl
inc
out
stos
jmp
push
bound
arpl
fsub
pop
xchg
and
xchg
add
add
jns
add
pop
mov
or
cld
mov
mov
cmpsl
sbb
testb
mov
movsb
outsl
pop
mov
outsl
dec
aas
ret
jg
stos
call
addr16
outsl
cld
pop
decl
adc
fs
outsl
xlat
sbb
outsl
pop
loopne
movsb
jl
mov
pop
add
inc
mov
sub
pop
ret
int
loopne
stc
aam
shll
out
lock
jle
xchg
out
lds
rcl
adc
mov
icebp
scas
xchg
jle
test
je
jmp
leave
ja
lcall
ljmp
std
call
jmp
in
mov
jo
mov
xchg
jl
lea
shl
movsl
test
lcall
faddl
call
jl
inc
sub
in
mov
lock
lods
lods
das
pop
scas
iret
and
imul
int
bound
xlat
into
and
loop
xlat
into
mov
xlat
into
and
dec
mov
inc
pop
popa
scas
inc
shrl
fs
sub
call
add
or
and
iret
push
aaa
add
mov
sbbb
fucom
dec
sub
jmp
adc
mov
out
jno
pop
mov
inc
jg
call
pusha
popa
mov
mov
push
in
push
and
adc
jecxz
or
fiadds
or
repnz
lret
sub
call
daa
dec
add
scas
repnz
mov
sub
cmpsb
pop
lock
push
movsl
iret
es
movsb
insb
and
push
push
jg
fildll
cmpsb
insb
scas
inc
lods
loopne
cmpsb
insb
and
pusha
cmp
addr16
jp
adc
stos
pusha
push
outsl
insb
das
push
sub
into
test
loopne
test
scas
inc
gs
lret
int3
repnz
addr16
dec
xor
jo
rcrb
fdivl
add
cmp
or
daa
hlt
jbe
jnp
xchg
inc
push
lock
jmp
inc
out
push
cmpl
dec
jg
mov
filds
rcr
ds
leave
rcrl
test
inc
cmpsl
pop
imul
dec
enter
xchg
mov
sahf
stos
dec
jae
inc
cld
bound
popa
outsl
rcrl
push
and
and
or
or
movsb
outsl
pop
sahf
push
ret
jg
aad
aas
jmp
jo
jno
mov
xor
fidivrs
pop
pop
push
fadd
lods
dec
nop
inc
fimuls
mov
jle
sbb
loop
inc
mov
in
xorb
leave
icebp
jp
lcall
rorb
inc
and
mull
in
icebp
sti
dec
inc
leave
and
adc
cltd
fldcw
icebp
mov
mov
andl
loope
and
push
adc
mov
test
in
fnsave
adc
pop
out
fldln2
and
cmpb
xor
in
inc
mov
cld
stc
push
sar
pop
bound
popa
scas
ds
dec
xor
xchg
sarb
cltd
jbe
pop
aaa
fimuls
rorb
aad
add
hlt
pop
add
sub
rcr
push
dec
gs
mov
outsl
scas
fcoms
and
nop
nop
cwtl
rcrb
cmp
pop
lods
in
inc
ja
scas
test
movsl
adc
cmpsl
rolb
ds
pushf
adcl
xchg
cs
subb
scas
add
push
stos
nop
jbe
jne
and
sbb
push
ds
outsl
iret
sahf
dec
gs
xchg
jno
mov
cmp
sbb
call
push
jnp
daa
jle
mov
xor
cmp
das
inc
cli
int
fiadds
in
jl
in
fsubrs
cltd
xor
add
mov
cmpsb
fisubs
jle
mov
scas
test
dec
dec
and
lret
add
lea
mov
mov
fwait
mov
inc
icebp
add
or
xorb
mov
xchg
push
in
and
test
adc
mov
mov
leave
pusha
sub
cltd
test
adc
les
aas
ret
in
stos
xor
jo
jmp
popa
aaa
aad
cwtl
cmpsl
cmpsb
jne
shr
inc
push
fcomps
mov
push
ds
push
bound
sub
dec
cld
mov
adc
xlat
inc
lock
jl
fcoms
xor
call
mov
mov
cmp
push
out
in
xor
xchg
dec
lods
and
sbb
arpl
scas
insb
mov
jl
dec
sbb
shll
push
inc
popf
data16
out
mov
jg
dec
push
jnp
pop
mov
lcall
shl
jns
dec
mov
cmpsb
dec
pop
pop
cmp
sub
js
mov
inc
push
mov
cmpsb
mov
lock
lods
std
and
aad
sbb
xor
jge
sbb
fidivrs
int
into
scas
pop
dec
sbb
ljmp
loopne
or
dec
pop
scas
xor
pop
jnp
jp
fsubl
jle
in
and
js
stos
adc
sahf
pop
mov
test
mov
aas
pop
dec
ds
in
dec
dec
jo
jecxz
mov
out
jl
sbb
stos
inc
fildll
fwait
in
xor
inc
xorb
mov
jno
jge
push
fstp
cwtl
mov
bound
push
loope
inc
les
ret
sbb
cmp
enter
cltd
push
mov
push
outsl
push
out
outsb
sub
dec
inc
loop
shll
das
add
lods
xchg
in
sbb
mov
icebp
or
pop
push
cs
and
out
inc
mov
mov
lods
lods
adc
in
decb
push
out
sub
in
cmp
aam
push
jg
loopne
jns
aas
call
and
lcall
jne
inc
sub
out
scas
sbb
push
decl
add
cmp
inc
mov
or
and
jg
lret
stos
fwait
sbb
insl
xchg
mov
lods
lea
mov
pop
popf
adc
lock
jo
shll
icebp
mov
sbbl
pop
pop
sbb
xlat
pop
das
insb
fnstsw
adc
and
rorb
loopne
insb
cmp
in
mov
dec
jmp
bswap
jl
pop
inc
mov
pop
inc
insb
mov
leave
adc
and
in
insb
cltd
adc
int
mov
xchg
push
sub
icebp
es
cmpsb
mov
sbb
cmovns
fcoms
aam
ds
pop
xchg
jo
int3
ds
push
not
and
scas
fstpt
arpl
sbb
adc
mov
mov
jecxz
cmc
push
jno
cmp
xor
mov
hlt
push
test
andb
cltd
and
jo
and
sbb
cwtl
movsb
les
mov
int3
mov
out
repnz
loop
loop
popa
jb
sub
iret
sbb
xor
movsl
add
pusha
jo
movsb
and
mov
xchg
les
sub
add
out
test
mov
push
sar
dec
or
adc
call
mov
decl
push
scas
stos
fs
cmp
repnz
xor
ja
addl
sub
sub
mov
fcomp
lock
movsl
fnstenv
inc
and
addr16
or
sub
sbb
rcrb
or
lock
jbe
fnstsw
lods
fisubl
gs
rolb
data16
inc
subb
sbb
push
sub
sbb
lcall
jns
loop
sbbb
fmuls
leave
pusha
out
jmp
pop
imul
adc
dec
pusha
sub
lcall
mov
pop
int3
fadd
pop
fnop
xchg
popf
scas
mov
in
jp
xchg
andb
push
cltd
xchg
mov
lock
xor
or
fcmovb
pop
cmp
jecxz
insl
jecxz
ret
jp
lcall
dec
mov
jmp
cmp
push
mov
jecxz
jl
cmpsb
xor
inc
je
mov
or
fcomip
push
lcall
cmp
add
add
insl
add
cmp
loopne
cmc
add
out
aas
in
pusha
outsb
dec
xor
rclb
adc
out
test
fistps
cltd
cmpsl
aas
sahf
sbb
sbb
jbe
push
out
cli
push
sub
cld
dec
out
out
scas
jl
jo
test
jbe
imul
popf
lods
sbb
xchg
push
jnp
xchg
sub
outsb
pop
jp
cwtl
andb
mov
rolb
fcmovnbe
fcompl
iret
outsb
inc
into
sbb
mov
icebp
les
mov
test
rcrl
xchg
add
decb
enter
push
mov
ret
or
mov
aam
aad
out
ds
insl
dec
dec
cmp
or
rorb
sbb
jecxz
jo
insb
aaa
mov
pop
inc
xchg
imul
mov
sbb
repz
cmp
ja
pop
push
in
out
daa
sarb
loop
add
mov
add
jecxz
mov
js
xor
jg
cmp
mov
imul
into
add
into
adc
sub
test
sub
clc
mov
mov
push
fchs
and
sbb
popf
dec
sub
sub
aam
dec
insb
sbb
leave
push
add
push
leave
iret
nop
divl
in
pusha
mov
jo
loope
jg
scas
mov
psubusb
insb
cltd
sbb
ret
cmp
das
pop
pop
test
sbb
xor
jg
mov
sub
cmp
dec
adc
mull
push
inc
dec
mov
leave
and
loopne
subl
int
mov
int3
xchg
scas
fists
dec
and
mov
ficomps
mov
dec
popa
pop
xchg
adcb
sahf
loopne
mov
adc
or
dec
ficoms
push
cmpsb
dec
mov
ljmp
pop
and
ret
nop
xchg
add
push
and
sbb
int
xchg
daa
dec
inc
push
cmpsb
dec
pop
mov
xor
and
cmp
pusha
add
scas
stc
jmp
retw
xor
bswap
jp
in
mov
mov
add
pop
mov
xchg
push
jecxz
jl
xchg
sahf
dec
mov
cli
imul
pop
sub
mov
int
imul
std
dec
xchg
bound
or
jne
lock
sti
enter
into
mov
mov
pusha
cli
jl
ficompl
jbe
fsubrs
clc
mov
fwait
popa
cmp
icebp
stos
outsl
sbb
rcrl
cs
xor
push
mov
cli
add
sahf
jmp
bound
adc
ret
cmp
xor
lods
int3
xor
gs
ja
mov
jmp
adc
das
fistpl
pop
cmpsb
fcompl
pusha
outsl
cwtl
rclb
lods
sahf
repnz
cmp
xchg
das
dec
mov
ds
leave
fsubrp
cmp
dec
sub
int
rcr
bound
jmp
scas
xor
mov
stc
enter
xchg
ds
rolb
ret
jecxz
lcall
loop
insb
in
xor
jmp
inc
sub
dec
test
setns
call
sahf
insb
shr
sbb
jmp
cmovo
dec
mov
aas
xor
pop
add
cmpsl
cmpsl
sti
xlat
scas
addr16
mov
stos
xor
les
scas
int
and
sbb
imulb
or
movsl
enter
std
loopne
sbb
fisubrl
or
jnp
mov
addr16
scas
push
out
lret
outsb
mov
mov
into
and
push
inc
test
lds
or
add
cmp
jmp
mov
lret
cwtl
mov
pop
out
bound
sub
fwait
shlb
or
in
pop
fmulp
xlat
dec
bound
sahf
pop
loopne
pop
add
cwtl
mov
ds
fisubl
or
movsb
cs
in
push
jmp
cmp
push
fcoml
add
cltd
push
adc
imul
mov
lods
stc
mov
int3
adc
je
mov
inc
cmpb
out
fsubl
sub
popf
loope
push
out
fildll
test
arpl
xchg
cmp
jno
push
cld
jle
jbe
testl
data16
and
and
stos
scas
push
jno
fisttpl
aam
inc
in
nop
lahf
rorl
ret
bound
xlat
into
or
into
fisubrs
jecxz
bound
cmp
aam
xor
stos
fldenv
jb
inc
cmpsb
mov
push
iret
sahf
iret
aam
add
testb
xor
jecxz
mov
mov
in
imul
nop
inc
test
popa
fiadds
iret
cmp
cmpsl
bound
and
lods
mov
dec
lret
popf
fildll
mov
lods
inc
jbe
rcrb
sub
dec
inc
aaa
loop
dec
sbb
jmp
pop
pushf
rclb
sarb
dec
fnsave
pop
outsb
lret
pop
sub
inc
pushf
arpl
mov
mov
lods
out
sahf
mov
sbb
xor
lahf
sti
cli
cvtpi2ps
xchg
xor
mov
les
add
in
out
mov
mov
ror
cmpsb
mov
pop
xchg
inc
cltd
cmp
data16
push
mov
mov
out
and
scas
cmpsb
jnp
mov
push
scas
int
das
lds
cltd
into
pushf
mov
mov
jnp
jmp
jnp
cmp
push
fistps
paddsb
lods
aad
mov
inc
pop
insb
adc
scas
in
mov
xchg
push
xor
jl
popf
std
fnstsw
arpl
insl
fbld
xlat
pop
lods
mov
xlat
imul
mov
cmp
popa
sub
mov
scas
and
pop
dec
dec
sarb
xor
enter
adc
pop
test
mov
or
scas
pop
es
dec
stos
sub
cmpsb
and
dec
mov
lods
lahf
outsl
or
lods
mov
cs
ljmp
lret
pop
dec
add
jl
sarl
xor
daa
jle
mov
mov
pop
cltd
mov
jnp
or
mov
mov
xor
push
jnp
imul
mov
pop
and
fwait
bound
call
cltd
test
inc
shlb
in
jle
xchg
fistps
and
mov
push
mov
add
jecxz
mov
icebp
dec
and
and
lds
aaa
je
xor
icebp
call
lahf
mov
mov
mov
jg
xor
push
leave
inc
push
mov
push
mov
pop
push
add
aaa
insb
push
stos
stc
jp
rcrl
sti
addr16
mov
imul
clc
shlb
repnz
mov
push
sbb
insl
mov
inc
push
xor
dec
ljmp
lret
hlt
mov
dec
aad
insb
jo
vpaddusb
dec
iret
in
mov
jg
jne
sub
fdivl
mov
outsb
test
fnstsw
rcl
in
pop
push
pop
sahf
lock
pop
pop
popf
adc
icebp
cmp
xchg
xlat
pushf
inc
inc
iret
mov
lcall
mov
les
stos
mov
sub
stos
movb
push
stos
push
test
push
loop
insb
xor
lret
frstor
mov
xor
insb
int3
xor
cmpsb
mov
das
push
scas
scas
and
and
mov
loop
fisubrs
rcll
push
sub
jmp
push
add
fs
idivl
int3
jecxz
popf
insb
sub
cmpsl
lock
sub
insb
daa
xlat
movsl
into
lods
movsb
jae
and
cmp
adcl
cmp
loop
add
and
mov
loopne
mov
jmp
xor
shll
fidivrs
icebp
in
push
and
in
pop
sub
mov
decl
sub
push
or
fistl
add
out
test
pop
testl
ja
mov
aam
loope
fs
sbb
xor
dec
push
and
ljmp
pop
test
xor
pop
fdivr
pop
mov
aas
and
sbb
iret
fadd
stos
ret
cmc
scas
das
in
repz
test
add
inc
test
pop
xchg
dec
aaa
mov
rorl
ficompl
repnz
addr16
loopne
inc
or
mov
jns
pop
pushf
dec
cli
mov
fwait
mov
dec
pop
sbb
gs
dec
adc
mov
cltd
fcomip
push
push
push
ss
push
xor
in
addr16
or
adc
insl
ljmp
push
jg
mov
add
jns
std
mov
mov
cwtl
sarb
out
xchg
lret
or
pushf
lods
rclb
cltd
aad
fiaddl
dec
xor
and
mov
pop
in
mov
mov
test
adc
in
cmpsb
lock
xchg
stos
fistl
mov
sbb
and
int
push
push
push
xlat
cld
mov
test
mov
add
and
das
sbb
hlt
loopne
es
cwtl
stos
pusha
mov
pusha
inc
mov
dec
mov
test
js
xor
adc
push
inc
out
rorl
dec
shl
lret
mov
xchg
sbb
or
scas
push
push
push
jnp
lahf
ds
shr
jae
adc
mov
add
xchg
movsl
mov
jbe
jle
or
sbb
sahf
jns
addb
adc
cmp
sti
xchg
adc
dec
xchg
movsb
xor
and
insl
inc
cltd
jb
outsl
add
and
add
jne
lret
inc
ret
ds
adc
or
mov
std
mov
jg
dec
pop
add
pop
cltd
pop
cltd
sub
loop
mov
dec
jnp
fidivs
xor
xor
bound
or
out
mov
cs
push
jecxz
ret
mov
mov
fsubrs
jnp
aam
fistpl
bound
movsl
aaa
dec
push
fucomip
fistpll
cmpsb
je
fwait
lods
pop
das
push
pop
int3
cs
and
push
ds
filds
mov
imull
push
jg
push
mov
push
aas
sarb
push
jmp
imul
pop
xor
fcomps
fstpt
nop
in
int3
ds
out
or
iret
inc
mov
xor
fisubrs
mov
imul
sub
in
pop
je
out
aam
push
stos
inc
scas
aaa
lahf
iret
loopne
or
or
aam
cs
pop
pop
enter
mov
inc
mov
and
orl
pop
dec
orb
mov
adc
les
fbld
dec
in
outsl
push
cli
pop
mov
add
into
sbbl
mov
mov
cwtl
push
pop
out
or
jmp
outsl
dec
test
aam
pop
add
loop
rorb
rolb
mov
push
stos
fiadds
js
dec
mov
stc
dec
cmpl
fcmovnb
jo
sub
pusha
ja
mulb
add
mov
mov
int3
mov
and
push
push
cmpsb
cmp
mov
jo
popa
mov
adc
popf
test
jmp
shlb
dec
xchg
sbb
test
aam
cltd
stos
jle
test
mov
pop
xor
stc
jmp
out
sbb
test
rcrl
in
ss
iret
aaa
adc
push
mov
stc
adc
and
xor
int
sahf
popa
or
push
jmp
xor
adc
cli
dec
push
outsl
cltd
gs
cmp
dec
inc
popa
mov
mov
jns
sub
popa
loopne
dec
lds
push
enter
insb
pop
jmp
aas
icebp
test
push
inc
push
jnp
clc
hlt
je
popf
nop
mov
mov
sbb
ljmp
cmp
xchg
mov
xchg
popa
js
xchg
pop
scas
sbb
hlt
mov
movsl
lock
out
sahf
fisttpl
or
lret
push
adc
mov
pushf
xor
in
out
adc
jle
in
inc
pop
mov
push
push
jnp
outsl
sbb
fbld
push
mov
dec
add
cwtl
cld
mov
inc
mov
fcmovbe
mov
mov
insb
inc
inc
and
cmpb
rorb
sbb
adc
add
jmp
out
cmp
jg
shlb
fistps
or
out
mov
xchg
push
lds
cmpsb
mov
xor
out
mov
add
and
add
jg
xor
sti
adc
popa
pop
jmp
sub
jl
jnp
jnp
mov
hlt
out
out
cmp
stos
ficoml
sbb
scas
shl
shll
rcrl
insb
cltd
icebp
dec
shlb
stos
add
popa
in
adc
dec
mov
in
push
adc
pop
cs
loope
push
inc
inc
sbb
dec
movsl
scas
sbb
iret
push
inc
jnp
int3
mov
outsb
sarl
push
fadd
rcl
sub
jle
mov
incl
add
mov
and
push
jg
lods
ja
lcall
pop
adc
jg
jo
outsb
cmpsl
mov
pop
lahf
cmpsl
and
xor
adc
out
pop
insl
jno
movsl
cwtl
and
lahf
insl
push
mov
scas
stos
aaa
fcoml
adc
mov
mov
dec
mov
pop
xor
adc
push
dec
cmc
iret
loopne
mov
jp
stc
sub
addr16
and
pushf
bound
pop
sarl
push
sub
sub
out
push
bswap
ss
dec
jmp
push
test
cltd
repnz
pop
nop
fldenv
pop
test
cld
insb
cld
xor
cwtl
into
mov
dec
pop
jns
and
fdivr
insb
jmp
xchg
xchg
incl
shlb
out
push
cld
and
imul
mov
add
icebp
rcrb
push
mov
mov
shlb
in
jl
lods
sahf
add
xor
adc
adc
pop
dec
leave
outsl
adc
push
test
lds
xor
mov
pushf
xchg
inc
es
xchg
pop
adc
mov
pushf
xor
and
orb
fdiv
lock
les
jb
push
out
fsubrl
bound
cmpl
mov
sbb
daa
int3
andl
loop
sbbl
and
icebp
repz
std
pusha
scas
mov
pop
stos
sahf
movsb
fldenv
ja
es
push
dec
xor
int3
push
dec
lcall
scas
je
mov
jle
into
push
add
mov
clc
adc
push
jmp
lahf
push
mov
adc
out
nop
mov
scas
push
mov
sbb
test
ljmp
sub
testl
push
addr16
mov
pop
es
pop
loopne
out
push
jns
cmp
mov
xor
mov
adc
aaa
fmuls
fwait
and
loopne
scas
fdivr
push
mov
std
sbb
push
call
push
call
out
subb
inc
pop
lahf
nop
cwtl
call
fbstp
pop
push
add
adc
pusha
pop
inc
mov
push
into
in
cltd
pop
mov
lods
adc
rcr
mov
inc
mov
in
mov
loopne
push
mov
sbb
xchg
push
xchg
outsb
sar
adc
daa
loopne
cmc
push
add
pusha
dec
gs
dec
inc
sbb
mov
test
das
pop
cwtl
lods
pop
loop
jnp
mov
loop
das
fsubl
pop
push
cld
mov
pop
and
pop
inc
adc
add
in
std
mov
sub
fldl
pushf
sbb
dec
iret
imul
aas
icebp
jo
push
fstpt
xchg
inc
jge
and
lahf
icebp
les
xor
pop
add
xlat
mov
lahf
fmuls
pop
push
cs
aas
lcall
scas
mov
mov
test
pop
push
insl
inc
jl
adc
xor
pop
sahf
into
push
cld
fmuls
xchg
leave
dec
aad
outsl
sbb
popf
mov
loopne
push
or
aad
mov
test
out
into
int
cwtl
xor
cmp
jo
adc
mov
enter
in
enter
lahf
sahf
dec
in
ret
cld
push
loopne
fsubl
dec
mov
movsl
iret
adc
dec
outsb
mov
les
movl
dec
in
add
and
pop
add
mov
push
push
test
and
stos
iret
mov
lods
jno
dec
push
mov
stos
push
pop
cwtl
sahf
gs
adc
dec
sbb
pushf
rolb
mov
sti
add
movsb
arpl
cwtl
push
addl
fmul
mov
sbb
and
mov
or
sbb
push
mov
ret
dec
lods
std
inc
insl
add
out
xor
std
xlat
sub
jl
mov
roll
dec
ds
dec
cmpsb
stos
in
dec
lret
fwait
mov
std
mov
ljmp
mov
out
pop
push
call
flds
mov
cmp
add
push
cmp
xlat
jno
or
jle
xor
jp
jnp
xlat
loope
fisubrl
pusha
dec
cltd
jle
scas
mov
inc
jmp
test
ret
loopne
push
xchg
ret
sub
sbbb
mov
push
mov
lcall
jns
incb
mov
mov
mov
sub
nop
bound
mov
pop
sbb
lcall
and
test
fisttpll
sub
adc
in
push
push
scas
mov
clc
pop
pop
cltd
gs
test
inc
lret
jo,pt
dec
subb
jno
pushf
imul
lcall
xchg
pop
sbb
iret
lret
out
mov
or
mov
ficoms
notb
lahf
or
fadds
pop
mov
push
dec
xor
outsb
and
stos
jnp
push
push
mov
out
jnp
insb
mov
mov
loop
push
outsb
jge
sbb
popa
add
leave
cmp
and
iret
nop
jmp
push
lock
mov
stos
lods
and
pop
dec
outsl
push
stos
mulps
and
push
push
push
or
pop
cltd
iret
and
fdivs
cmp
jl
cltd
xor
shlb
xchg
out
mov
sub
out
shr
jns
mov
mov
arpl
je
into
int
test
aad
rolb
test
popa
jge
nop
mov
ss
call
dec
jle
dec
adc
pop
mov
shlb
adc
xchg
cmp
mov
xorb
mov
jo
lock
mov
out
clc
inc
leave
sarl
mov
jns
adc
jnp
adc
insl
xor
xchg
cs
xlat
mov
inc
vmwrite
push
stos
pop
pusha
sub
lret
adc
stos
mov
and
or
pop
cld
scas
add
daa
dec
push
jg
jns
stos
subl
or
dec
and
cmp
movsb
pop
push
scas
add
loope
loopne
jo
les
pop
sarl
cmp
ljmp
push
scas
in
je
out
in
sbb
icebp
push
pop
push
sbb
aam
shlb
fisubrs
inc
cld
sti
mov
ss
mov
stos
add
sbb
out
sbb
mov
test
jmp
outsl
add
mov
jne
mov
pop
mov
cmc
mov
mov
pop
push
cs
repnz
loopne
mov
sub
jo
fcoms
inc
jp
ret
mov
add
inc
pop
or
dec
mov
bound
pop
mov
dec
xchg
dec
mov
scas
push
scas
outsl
out
jmp
jne
jb
or
lret
imul
add
pop
outsl
pop
enter
les
dec
xchg
roll
int
lret
cmpsb
jecxz
cmpb
cmp
je
cmp
orb
inc
rcrl
std
pop
jl
sub
sbb
dec
mov
jne
leave
cmc
jmp
push
in
sub
push
pop
ret
enter
mov
mov
fldenv
mov
sub
test
scas
and
ret
and
popa
js
or
scas
pop
ret
mov
inc
ss
mov
and
jmp
mov
shr
nop
cmc
stos
scas
mov
int3
loope
mov
in
das
mov
jle
jmp
aas
scas
js
outsb
into
mov
push
inc
pop
jle
cs
add
cmpsl
mov
pusha
test
loop
xchg
cmp
cs
mov
dec
mov
fstpl
gs
and
jbe
insl
pop
mov
arpl
cmp
mov
inc
adcl
sbb
data16
or
test
int3
push
addr16
lret
inc
push
and
push
pop
rcrb
aam
xchg
cmp
fldenv
xor
jecxz
mov
mov
inc
pop
int3
or
mov
mov
or
scas
sbb
int
inc
testb
test
icebp
or
js
pushf
mov
out
fbld
jbe
pop
stos
in
mov
lock
or
xchg
adc
push
xor
jge
cltd
sahf
add
test
je
jns
cmp
stos
scas
pusha
call
mov
in
in
ds
lcall
aam
cmp
nop
and
mov
inc
bound
push
pop
cmc
in
xchg
movsb
pop
mov
ret
call
pop
icebp
imul
aam
in
push
xor
mov
int3
fildll
scas
pop
popf
stos
rdpmc
outsl
scas
sahf
pusha
cld
shll
rolb
mov
adc
xchg
push
pop
xor
dec
js
add
jge
ljmp
sahf
jbe
loopne
push
push
mov
bound
dec
mov
movsb
movsb
or
fndisi(8087
and
in
inc
cmpsb
mov
jle
into
in
inc
jg
inc
adc
xchg
loop
jo
mov
add
mov
push
jnp
leave
stos
cmc
cltd
aam
out
dec
mov
subb
sti
and
movsb
scas
nop
jle
mov
add
jmp
bound
or
push
push
and
mov
mov
cwtl
test
out
and
sarb
jnp
fwait
mov
push
inc
jae
shlb
adc
in
aas
fsubl
xchg
mov
push
icebp
mov
or
cmovns
icebp
dec
cltd
adc
sti
cmp
call
add
repnz
inc
insb
scas
adc
mov
add
popf
nop
lods
int
and
xor
movsb
sub
or
loope
mov
filds
jmp
loopne
cmpsl
fistl
push
shrb
push
xor
push
dec
inc
pushf
shrb
aas
jmp
push
inc
dec
fnsave
aam
out
push
mov
fcmove
mov
add
mov
jecxz
sbb
ret
adc
and
adc
outsl
adc
fcoms
and
test
les
int
stc
imul
in
sti
sahf
inc
fimuls
and
pop
mov
outsl
je
and
cld
loopne
out
or
sarb
insl
push
mov
iret
cmpb
jle
inc
inc
inc
out
adc
and
push
ja
popf
into
fists
outsb
mov
mov
jg
mov
sti
pop
call
push
aaa
out
dec
pop
test
sti
mov
nop
mov
mov
xchg
ss
sbb
xchg
mov
out
jo
shlb
mov
mov
aaa
xchg
mov
rcrl
outsb
ljmp
call
jp
xchg
stos
mov
or
test
icebp
jno
and
jno
push
pushf
push
adc
pop
jg
dec
cmpsl
mov
nop
out
mov
jbe
push
xor
out
sbb
pop
mov
inc
adc
lcall
lods
dec
lods
stos
stos
ds
lods
aaa
dec
inc
and
jo
mov
jno
pop
or
bound
mov
pop
leave
mov
cltd
insl
sub
sbb
pop
pusha
jge
lahf
enter
mov
std
out
mov
pop
icebp
jg
fs
pop
jb
popf
dec
fiaddl
sub
mov
in
arpl
dec
ss
inc
out
or
jno
pop
iret
or
in
outsb
mov
lea
aad
pop
shr
push
rcrb
xor
mov
in
or
inc
jns
sub
xorb
cmp
out
scas
cmp
xchg
inc
mov
or
icebp
push
mov
pop
adcb
dec
imul
pop
xor
mov
int
orb
or
cmp
sti
roll
and
cmc
sbb
push
stc
or
insb
and
ss
add
and
lahf
insb
mov
xor
mov
sub
rcrb
push
xor
subb
xchg
dec
inc
bound
sarb
les
sbb
jnp
scas
hlt
icebp
aas
loopne
dec
daa
cld
mov
xor
and
fs
and
sar
inc
lods
push
pop
fnsave
aad
out
adc
rcll
insl
ret
sbb
and
mov
push
in
sbb
into
sub
inc
mov
sarb
iret
adc
xor
mov
cmc
mov
sahf
test
in
cmp
jo
gs
inc
push
push
mov
popa
add
inc
push
and
pushl
inc
in
mov
cmp
xchg
adc
mov
loop
sahf
lods
scas
decb
lock
cmp
xor
addl
fnstenv
push
mov
jp
push
xchg
in
jno
pop
mov
and
psrlq
es
outsl
lahf
loopne
or
loope
jnp
rcrl
jle
and
lret
aam
mov
or
mov
pop
push
lret
scas
adc
int3
mov
repz
ret
fsubrs
es
std
add
aas
push
call
or
test
push
push
mov
cwtl
pusha
pmaxub
sbb
cwtl
loopne
enter
fbstp
dec
dec
sarb
dec
adc
jns
outsb
pusha
push
xlat
jae
stos
stos
int
dec
push
ret
cmpsl
pop
lahf
mov
mov
sub
js
les
cs
addb
sub
pop
out
cltd
xchg
mov
into
inc
dec
and
add
xlat
fcoms
jle
mov
xchg
in
push
cltd
dec
sahf
push
ja
cmp
movsb
lods
sarl
and
sub
mov
mov
adc
loopne
cs
mov
jns
movsb
sbb
jl
mov
fdivrl
iret
push
push
pushf
push
stos
int
dec
jmp
iret
cs
loop
jle
jecxz
inc
or
xor
and
loop
ds
pop
and
gs
mov
push
int3
or
loope
fwait
jnp
adc
sbb
std
xor
cmp
mov
out
cmp
pushf
or
lea
incl
cltd
sub
ss
xchg
fcompl
adc
movl
sahf
mov
subl
push
fwait
push
outsb
mov
data16
int
scas
test
pop
dec
shlb
outsl
lds
popa
repnz
out
and
stc
push
push
push
movsb
sbb
insb
and
mov
push
mov
fwait
jae
dec
mov
aad
scas
insb
inc
test
lock
cmc
js
fidivs
mov
ror
dec
xchg
xor
pop
jge
mov
pop
dec
scas
jmp
dec
in
shr
xchg
inc
out
cmc
pop
test
or
adc
and
orb
call
pop
adc
fmul
dec
xor
inc
in
testl
and
add
xchg
add
insb
lds
mov
xchg
rclb
outsl
mov
pop
dec
shrb
mov
push
stos
shrl
dec
lods
push
cmp
lcall
nop
mov
into
mov
xchg
lret
ja
imul
imul
movsb
les
lods
jle
icebp
pop
and
push
outsl
lock
les
fsubs
shll
cmp
lret
mov
sub
jg
and
fbld
mov
inc
cmp
std
inc
dec
or
push
or
and
add
sbb
cmp
out
inc
jg
out
fs
mov
jle
sub
in
and
sub
dec
mov
adc
iret
fs
sarb
push
cltd
mov
lock
and
call
loope
outsb
bound
mov
xchg
stc
shl
fisubs
ffreep
sti
aaa
in
data16
mov
sub
pop
imul
in
and
mov
iret
outsl
cltd
push
out
jo
aas
test
sti
int3
sbb
out
shll
clc
in
cmpsb
orb
imul
xor
les
push
mov
mov
sar
repnz
sbb
dec
fsubp
test
or
sub
ret
push
sti
push
mov
pop
idivl
add
add
les
test
je
inc
in
repz
nop
cmpl
add
inc
ficoms
xor
add
dec
shll
add
xorb
or
repz
enter
push
jnp
cmp
xor
push
clc
lods
popf
mov
lods
out
push
shrb
lock
add
push
sbb
nop
inc
jl
repz
scas
stos
out
shlb
sbb
call
test
xchg
ret
popl
aam
ds
mov
ret
shll
mov
pop
push
push
sbb
cmpsl
sahf
dec
aam
mov
cs
sbb
fcmovbe
mov
pusha
add
out
in
push
cmp
cwtl
in
fcom
int
jecxz
js
or
mov
fildll
push
mov
pop
call
scas
data16
jle
out
xor
std
lret
bound
mov
jle
or
mov
dec
inc
les
adcl
mov
enter
mov
fs
test
cwtl
mov
nop
filds
mov
inc
adc
loopne
push
out
into
adc
ret
addr16
stos
mov
and
and
pop
push
loopne
sub
or
push
pop
inc
jg
repnz
xor
insb
mov
jnp
mov
mov
outsb
out
push
fisttpl
jmp
lods
aad
out
or
jb
push
dec
popa
loop
testl
rclb
outsl
ljmp
out
mov
lret
xchg
and
iret
in
xchg
inc
ja
scas
push
outsb
fisubs
shlb
lock
inc
jl
cmc
call
insw
inc
std
sbb
adc
mov
or
lahf
ret
inc
jg
xlat
xor
stos
xorl
xlat
cmp
jbe
pop
lds
mov
in
dec
call
inc
mov
insl
sbb
insb
loop,pn
adc
mov
dec
jl
push
push
mov
cs
enter
mov
mov
adc
sbb
je
pusha
sub
mov
addl
mov
pop
lods
sub
cmp
bound
cwtl
mov
call
cmp
test
mov
dec
mov
inc
imull
in
insl
fistpl
cmp
jp
fimull
pusha
rorb
mov
fsubrl
push
push
int3
lds
imul
inc
aad
xchg
xor
lahf
xlat
xchg
cmc
loopne
enter
inc
gs
mov
xor
in
mov
pop
ds
dec
lret
jno
aas
pushf
xor
jecxz
add
jmp
push
rorl
sub
mov
test
pop
fs
mov
imulb
jmp
into
xlat
mov
mov
fwait
inc
cmp
mov
cltd
or
fmull
shlb
xor
negl
sbb
ja
rorl
mov
outsl
push
sarl
adc
daa
arpl
test
jbe
sbb
push
mov
fisubrs
pop
lods
addr16
ljmp
stos
nop
es
push
fnstcw
cmpsb
jae
aaa
jns
in
jl
fstpt
loopne
js
in
fcompl
jecxz
xor
rorl
pop
jmp
xorb
cwtl
push
jnp
inc
push
fbld
mov
test
pop
inc
and
sub
xchg
andb
lahf
int3
fnstsw
lret
adc
mov
and
pusha
fldenv
xchg
inc
in
pop
inc
and
sub
loopne
add
mov
clc
in
test
jnp
xor
mov
mov
jne
fistpll
xchg
inc
fsts
push
lret
add
xchg
test
scas
ja
push
out
mov
outsb
cmp
dec
das
sti
xor
fstpl
sbb
pop
mov
xchg
lock
pop
shlb
ja
push
jno
outsb
mov
sbb
inc
aam
adc
imul
push
push
loop
pushf
and
sbb
xor
add
adc
inc
pop
repz
pusha
push
mov
out
push
sbb
sbb
nop
dec
sbb
adc
sub
adc
fs
dec
push
pop
mov
jae
sbb
inc
insl
add
es
mov
mov
int
jns
in
mov
negb
ret
mov
mov
jnp
andb
mov
repnz
and
push
aaa
adc
cmc
and
cmpsb
icebp
sub
xor
lock
dec
out
adc
push
lcall
mov
and
addl
push
dec
fucomip
fwait
adc
stos
orl
sub
or
xchg
in
test
bound
jns
jge
add
xor
insb
or
maxps
inc
xor
arpl
jae,pt
push
or
xchg
xchg
bnd
add
xchg
push
lods
jo
aam
in
inc
inc
fstpt
xchg
xor
push
inc
movsb
out
or
pop
fcomps
insl
sbb
dec
jno
fsubl
jge
dec
fldt
je
iret
mov
mov
ficomps
cmp
cltd
addb
sbb
icebp
scas
pushf
ror
aam
pop
aaa
das
fstps
push
data16
mov
and
or
jae
rcrb
fdivrl
mov
jno
outsb
pop
call
sub
cmp
scas
mov
add
push
and
scas
je
rcll
cwtl
mov
into
sub
fmuls
repnz
into
inc
xchg
jg
das
pop
mov
int3
pop
mov
jl
ds
push
cltd
lahf
jecxz
outsl
xor
addl
xor
inc
mov
cmpsl
mov
decb
xor
xor
outsb
or
out
pop
bound
jmp
sbb
aaa
lcall
pusha
pop
iret
sub
xor
sbb
cmp
movsb
bound
cmpsl
jo
and
inc
lods
add
int3
js
outsb
jno
out
ljmp
stos
imul
insb
loop,pt
mov
dec
mov
xchg
inc
dec
push
call
and
sbbl
aad
clc
xchg
jne
mov
lahf
pop
scas
sahf
lret
fistpll
adc
sub
sbb
das
mov
and
xchg
ret
cmc
insb
fwait
xor
jbe
xchg
shrb
jnp
inc
push
dec
dec
bound
mov
jno
pop
imulb
mov
sbb
mov
adc
shll
adc
cwtl
inc
add
bound
rcrl
aam
jge
ficompl
mov
scas
cld
inc
and
add
fistps
inc
loope
in
xchg
imul
and
jecxz
lds
inc
fnstenv
sbb
or
pop
out
adcl
repnz
clc
inc
sbb
outsb
fldln2
shlb
adc
dec
sub
insb
outsb
cltd
ret
cmpsl
mov
inc
pop
mov
sarb
mov
and
outsb
push
or
dec
les
add
movsb
jecxz
xchg
lods
test
fcoms
iret
push
mov
xchg
jns
outsb
adc
jge
sbb
imul
call
jae
shlb
xlat
sbb
pop
scas
rclb
pop
add
xchg
inc
push
xchg
and
loopne
xchg
mov
xchg
mov
scas
cmc
imul
sub
mov
inc
and
int
xchg
xchg
inc
pop
test
fwait
mov
popa
int3
rorb
mov
push
xorb
mov
jle
orl
popf
push
mov
imulb
mov
nop
cltd
fisttps
fsubs
rolb
mov
xor
in
sbb
or
outsb
pop
sbbb
push
xchg
jecxz
out
mov
test
sbb
in
push
push
ret
mov
call
in
jb
fdivs
inc
loope
mov
mov
mov
int3
push
cs
mov
leave
xchg
test
jg
jecxz
mov
mov
sub
sbb
lahf
xor
inc
jbe
fnstenv
lret
outsb
pop
adc
pop
loopne
test
jo
aam
and
test
pop
fsts
fcmovbe
adc
xor
pop
test
xlat
adc
stc
lret
enter
pop
jmp
xlat
in
shl
mov
or
jge
into
dec
scas
sti
dec
mov
push
jecxz
in
cmp
xchg
lods
ds
les
loop
adc
inc
sbb
into
cmp
jecxz
daa
iret
pop
aam
adc
jns
sub
int3
xor
out
and
mov
out
ja
mov
push
mov
mov
or
ret
mov
push
nop
frstor
fsubs
adc
icebp
stc
ljmp
lock
fs
shlb
fisubs
das
inc
adc
xchg
pusha
cmp
xor
xchg
dec
inc
jnp
mov
push
incl
add
outsb
in
push
mov
gs
cmp
dec
scas
dec
fs
shll
scas
inc
test
leave
pop
dec
loopne
ficomps
inc
adc
jns
sbb
cmp
int
outsb
std
xor
and
mov
and
and
mov
mov
es
mov
dec
and
loop
mov
fstpt
gs
icebp
pop
pushf
scas
cltd
lods
mov
adc
pop
in
jns
jbe
xor
sbb
lds
pop
lock
lcall
leave
mov
lods
jmp
les
cltd
fnsave
in
xchg
pushf
movl
push
xor
jp
fnstenv
lcall
jmp
push
int
imul
or
mov
addl
xor
in
cmpsl
jg
stos
jae
mov
add
adc
inc
repz
sbb
lret
test
pop
cltd
pop
sub
in
sar
dec
xchg
sbb
mov
mov
jl
cmp
ljmp
inc
mov
lcall
and
out
inc
cltd
pop
sub
outsb
and
mov
int3
loope
bound
cmp
xchg
sti
and
pop
push
xchg
insl
je
ficomps
bound
jno
mov
out
push
outsl
rorl
sbb
lcall
out
cs
ret
ss
ror
mov
fst
nop
outsb
ja
mov
das
ljmp
sub
mov
pop
icebp
adc
or
add
std
stos
hlt
push
fmuls
mov
lahf
ja
arpl
andl
cmp
adc
ret
in
clc
in
push
imul
mov
imul
shrb
cmp
cmp
mov
lods
call
data16
or
sbb
in
in
sarl
repnz
aaa
sarb
pop
dec
adc
or
add
push
mov
aam
mov
mov
nop
cwtl
jmp
int3
jg
lahf
sbbb
loope
mov
mov
scas
cmp
jg
pop
or
lahf
pushf
shrb
push
push
stos
add
mov
orl
aam
jp
jl
shll
xchg
test
arpl
scas
inc
and
clc
add
loop
and
shrb
mov
inc
jb
mov
mov
and
adc
lock
scas
loopne
add
loopne
mov
xor
push
or
out
xorb
lret
imul
in
jge
cli
mov
and
push
in
bound
cltd
mov
and
ds
adc
xor
mov
loopne
test
imul
jbe
icebp
cmp
and
inc
push
out
sahf
pop
orb
push
xor
in
add
xchg
xor
inc
jno
mov
fidivrs
sub
push
dec
shlb
loopne
imul
inc
sub
push
outsl
mov
adc
mov
decl
not
or
jb
inc
in
movsl
cmp
test
fdiv
mov
fdivrl
jb
push
inc
das
inc
stos
arpl
and
dec
pushf
inc
xor
dec
js
lock
ret
add
fs
xor
add
jecxz
in
data16
fs
push
bound
loopne
mov
cwtl
call
rcrb
cwtl
nop
imul
lret
or
jae
mov
pop
pop
outsb
mov
push
add
call
in
inc
add
data16
add
movsb
lret
icebp
iret
push
mov
imul
cmpsb
out
or
fs
movsl
sahf
adc
mov
and
mov
and
push
mov
sub
xor
cwtl
pop
mov
cs
dec
pushf
inc
mov
mov
iret
gs
in
jmp
sbb
aas
aam
jmp
push
or
lock
sbb
popa
cli
push
pop
sbb
insb
cltd
cmp
repnz
xchg
pop
scas
je
lea
fwait
jmp
or
popa
loopne
daa
xlat
xchg
cmpsl
adc
mov
dec
les
and
mov
rorb
add
aaa
ja
pusha
pop
and
cmp
sbb
scas
mov
cld
int
push
adc
outsb
cwtd
cld
out
shlb
xor
setb
cmpsb
push
jno
loop
pop
jne
gs
subl
bound
rorb
scas
inc
mov
push
sarl
and
mov
jg
bound
push
add
mov
sbb
call
call
movsl
sbb
add
test
and
adc
or
adc
dec
cmp
jecxz
nop
xor
shl
add
xor
push
pop
fbstp
xor
cltd
jecxz
dec
add
xchg
mov
jmp
inc
dec
xor
sahf
add
fadds
fcomps
and
cli
mov
pop
mov
iret
fcomip
call
gs
stc
inc
inc
scas
mov
jg
cmpsb
push
cmp
jo
mov
out
mov
sbb
mov
or
jmp
mull
xchg
mov
sbb
and
enter
mov
xchg
je
push
orl
and
outsb
xor
shrl
sub
inc
pusha
or
and
repnz
mov
push
cli
xchg
rcll
repz
jle
push
mov
mov
xor
fadds
add
dec
outsl
mov
test
fstpt
sbb
das
mov
xor
ret
sbb
lret
xchg
sbb
out
and
jl
add
inc
pop
push
inc
xor
call
push
cmp
loopne
iret
int3
iret
pushf
mov
sub
sub
fidivrl
xchg
rcll
arpl
outsb
test
sbb
xchg
test
iret
dec
xor
pop
and
jl
add
sbb
mov
or
cmp
jge
dec
dec
jle
mov
push
rcrl
fdivs
bound
xchg
jo
lret
dec
lods
int3
int3
mov
decb
pop
in
or
lea
lret
call
cmp
fnstenv
imul
or
inc
mov
insb
sti
pushf
add
arpl
cltd
push
in
iret
dec
out
pop
inc
rcrb
jno,pn
in
mov
je
push
out
xchg
fadds
pop
cwtl
leave
sub
sub
sub
test
lahf
and
pusha
mov
pop
sub
adc
lret
jnp
bound
dec
add
mov
jns
test
jns
push
mov
push
xor
cmpsb
bsf
test
nop
mov
subl
sbb
adcb
jle
xchg
mov
cmp
out
sub
enter
dec
add
fcmovb
ret
mov
mov
or
outsl
sti
or
sub
push
scas
mov
scas
leave
inc
test
inc
add
pop
mov
shlb
pusha
arpl
ret
in
xor
sbb
xchg
pop
psubsw
xchg
out
out
xorl
jge
pop
mov
loopne
push
mov
in
mov
push
add
nop
test
mov
jo
jmp
out
xor
jae
inc
lea
jmp
push
sub
std
fdivl
enter
mov
jnp
fmul
jg
adc
sbb
lea
imul
fildl
dec
or
outsb
sahf
scas
addl
xor
mov
in
ja
push
int
mov
insb
mov
int3
test
outsl
sbb
std
std
and
add
in
arpl
js
xorl
xchg
add
int3
jg
aaa
iret
jge
and
lea
push
push
rcl
pop
in
enter
mov
push
lods
or
in
imul
mov
fstpl
dec
sbb
mov
into
add
fs
imul
js
int3
adc
addr16
fs
imul
mov
das
pushf
inc
outsb
or
test
inc
mov
lcall
mov
push
lret
mov
imul
mov
jecxz
scas
xchg
xor
inc
xor
call
hlt
ljmp
movsl
pop
cmpsb
pusha
std
push
cwtl
imul
shrl
dec
das
shll
loopne
sbb
push
mov
incl
add
mov
and
inc
int3
cmpsb
call
call
out
das
and
addr16
pushf
adc
int3
adc
adc
xchg
sti
decl
rclb
popl
mov
insl
push
lret
mov
imul
outsl
pop
mov
outsb
or
inc
add
call
hlt
ljmp
movsl
pop
cmpsb
push
std
ret
inc
scas
imul
das
xor
imull
lods
jle
add
mov
fsubrp
dec
in
mov
pop
fstl
push
mov
dec
pop
mov
insl
out
aas
scas
dec
mov
adc
fs
pusha
fsubrs
inc
sub
add
stos
adc
mov
fcoml
cs
sti
push
mov
mov
test
add
sti
loope
inc
add
fists
lret
jg
pop
add
add
add
add
push
adc
xlat
jle
scas
popa
push
imul
mov
ficompl
popf
les
or
sahf
bound
in
shr
or
test
sbb
or
insb
jo
sbb
push
dec
push
inc
int3
outsl
das
or
lods
scas
into
dec
int
outsl
push
in
mov
mov
adc
arpl
cmp
lock
scas
outsb
loopne
inc
jbe
xor
jo
mov
outsb
aam
mov
insb
pop
imul
popa
shrl
adc
xor
jno
mov
mov
shrb
cmp
sub
dec
lret
mov
fdivr
out
es
rol
fcom
sahf
in
leave
arpl
sub
shlb
into
aad
xor
push
and
cld
and
and
push
shrb
mov
pop
and
popa
add
test
test
pop
out
out
popa
std
cmpl
call
in
test
call
xor
bound
loopne
clc
mov
lods
rcr
stos
and
and
shl
xchg
gs
push
and
or
test
sbb
ret
pop
adcb
shrb
fsubr
dec
mov
or
pop
add
lret
test
test
or
sbb
or
mov
xor
xor
or
cli
movsl
inc
arpl
xor
pop
push
shl
fdivl
adc
xchg
ljmp
pop
mov
push
gs
inc
fs
add
push
push
ss
inc
inc
push
movsl
fdivrs
push
mov
sub
std
mov
xchg
jne
popf
stos
add
and
lods
leave
scas
push
or
xchg
mov
mov
sahf
shlb
jnp
in
imul
ja
push
pop
inc
push
jge
or
and
xor
xchg
mov
cltd
inc
in
bound
push
xor
ja
fwait
imul
jne
mov
scas
icebp
imul
out
lahf
scas
jecxz
ja
mov
inc
inc
popf
and
adc
inc
cwtl
or
xor
xor
push
mov
dec
addl
mov
icebp
iret
cwtl
jno
int3
cmp
xor
loopne
icebp
jbe
test
mov
bound
test
dec
movsl
lods
add
fwait
in
int3
pusha
test
aas
push
pop
mov
push
dec
cmpl
cltd
gs
popf
and
xor
icebp
dec
mov
mov
pusha
test
sbb
pop
add
popa
xor
xchg
pop
lret
adc
mov
shl
cmpsl
mov
nop
out
pop
adc
cmp
rcrb
gs
pop
stos
push
push
push
cld
iret
push
dec
fwait
pop
popf
inc
push
mov
loopne
ds
xchg
lods
fcompl
repz
insl
insb
lods
cltd
stos
mov
pushf
movsb
lea
xchg
and
push
mov
mov
jl
push
sub
std
hlt
insb
push
or
jne
sbb
pop
bound
jg
and
pushf
xor
jg
inc
test
push
and
mov
out
xor
push
lock
mov
cltd
pop
dec
addr16
mov
add
inc
xchg
test
bound
outsb
daa
xchg
scas
jns
jno
andb
mov
sbb
mov
insl
in
orb
movsl
fisttpll
bound
pop
popa
stc
jmp
xor
arpl
adc
mov
icebp
push
or
test
mov
lods
pop
add
movsl
in
sub
idiv
adc
out
adc
mov
jae
test
inc
mov
mov
jae
outsb
aas
nop
cs
aam
add
pushf
mov
loopne
xor
ja
mov
bound
sbb
outsl
jmp
cmp
cmp
icebp
jbe
sub
scas
sbb
addl
fwait
add
jne
cmp
jo
repz
out
sub
cmpb
pop
push
xor
xchg
dec
cmp
dec
xor
cmp
push
add
repz
lock
ds
jle
and
mov
pop
adc
push
pusha
mov
inc
mov
and
dec
fists
ret
les
mov
data16
push
add
cli
dec
fildll
adc
test
jle
xchg
push
mov
push
int
mov
push
test
pop
adc
push
in
jnp
cmc
out
nop
mov
mov
test
push
bound
js
mov
mov
cli
scas
sbb
sub
pop
cmpsl
iret
mov
push
hlt
bound
adc
leave
mov
push
in
rcr
mov
in
cld
imul
cmpsl
adc
test
scas
lret
icebp
push
xor
rcrl
icebp
sbbb
inc
cwtl
xor
adc
mov
and
lcall
in
andl
sub
lods
outsl
add
fsubl
mov
jmp
sbb
mov
lret
scas
xchg
sbb
popl
addr16
xor
subl
and
cmp
icebp
les
bound
iret
imul
pop
and
fisubs
jo
lret
push
test
insl
lods
xor
xor
scas
rcrl
pushf
aas
mov
push
cmp
loop
fcmovnu
adc
scas
jnp
hlt
outsl
cmpsb
insl
enter
add
bound
imull
push
fcmovnu
stc
sub
cltd
mov
loopne
add
subl
mov
sti
iret
mov
imul
mov
push
rolb
popa
pop
into
pop
sub
stc
rorb
loopne
js
ret
les
fwait
pop
jge
rcrl
xchg
mov
lret
adc
push
xchg
fwait
loopne
scas
push
ja
add
sahf
push
aas
popa
repz
popa
int3
xchg
and
pushf
mov
lahf
push
loop
xchg
ljmp
out
fwait
cmpsl
js
loop
scas
mul
sub
cmp
mov
nop
jmp
mov
aad
mov
fsubs
inc
push
sub
cmpsb
testb
mov
xchg
sbb
testb
cmp
inc
in
cli
loop
rolb
test
js
mov
test
dec
sbb
pop
cmp
or
repnz
mov
and
dec
subl
dec
outsl
xchg
fidivs
lock
pop
push
adc
out
xor
daa
jecxz
lret
ss
jecxz
jns
loop
loop
bound
push
mov
push
outsb
loopne
negb
test
or
int
cmp
jl
lods
loop
xchg
and
mov
xchg
fcoml
inc
cltd
push
ds
xor
jecxz
xchg
aas
push
sub
mov
cmpsb
jge
lods
loop
xor
test
pop
sbb
fs
push
xchg
scas
out
enter
stos
outsb
shrb
std
lods
lods
mov
das
mov
mov
push
loopne
int3
sbb
test
push
adcl
into
outsb
in
pop
mov
push
mov
jbe
mov
xchg
push
mov
or
rolb
loop
and
mov
xchg
pop
mov
jl
test
mov
cmp
int3
push
data16
mul
xchg
insb
ljmp
mov
rcrb
sub
pushf
mov
jl
cmp
lea
sbb
xor
cld
pusha
sahf
stc
dec
and
test
scas
bound
adc
test
lret
xor
shr
fdivr
outsb
pop
enter
push
cmp
mov
pop
jb
sub
test
inc
pop
jmp
rcl
xchg
mov
push
out
hlt
fnstcw
add
stc
sub
pushfw
pusha
imul
rep
xor
test
cltd
mov
popa
into
scas
cmp
cmp
in
lahf
jmp
stc
mov
sub
cmpsb
push
repnz
dec
cmp
and
cmpsb
mov
jle
scas
add
sub
mov
jo
les
ja
push
into
push
subl
das
add
scas
sbb
out
mov
fildll
pop
ret
mov
jecxz
jp
das
push
xor
mov
mov
movsl
xchg
ja
lods
outsl
mov
add
sub
lods
test
stc
insl
inc
int3
stos
jp
stos
mov
mov
int3
dec
insb
inc
jl
xor
addb
xchg
xchg
and
in
sbb
mov
or
aam
xor
imul
call
sti
rcrb
jle
mov
push
adc
mov
movsb
outsl
lock
int
mov
arpl
sub
mov
fcomi
mov
jne
lret
adc
ffreep
jp
imul
cmp
push
cmpsl
adc
and
xor
aam
cmp
in
fstpt
ret
fwait
inc
in
pop
sub
sub
xchg
in
ret
xor
pop
jle
xor
movsb
insl
inc
cltd
nop
push
rclb
sbb
add
iret
rep
std
sahf
xchg
fbld
sub
rcrb
test
bound
mov
jmp
pop
xor
test
std
push
scas
scas
sub
call
add
decb
xor
mov
adc
mov
mov
cld
mov
movsl
sbb
cmp
subl
mov
jae
cmc
fildll
in
or
popa
rolb
jmp
fdiv
dec
aam
fdiv
mov
inc
xchg
aas
arpl
sti
sti
nop
xchg
or
fdecstp
adc
in
dec
sahf
jns
add
xor
lret
or
loopne
lock
aam
aaa
mov
jmp
faddl
push
or
adc
push
imul
loopne
and
adc
out
outsl
bound
pop
cmc
shl
pushfw
inc
mov
call
into
ja
mov
dec
int3
setnp
mov
pop
mov
sub
fsubl
aas
fistpll
scas
mov
lea
dec
or
xor
outsl
ja
add
cmp
mov
jecxz
imul
inc
fists
aam
xchg
sub
cli
out
cmp
xor
arpl
in
dec
cltd
mov
mov
sub
mov
add
fsubl
adc
scas
xor
or
imul
enter
fcmove
pop
je
arpl
adc
sbb
les
pushf
fcmovnbe
add
xchg
cltd
lahf
mov
lcall
push
stos
inc
mov
dec
out
int
lods
call
scas
incb
addr16
out
push
pusha
in
in
dec
sub
pop
sbb
sahf
ds
iret
sbb
xor
icebp
pop
dec
int3
mov
jno
movsb
push
gs
mov
or
add
cmp
lret
adc
xchg
sbb
xchg
lds
in
lds
shlb
int
pushf
adc
and
and
stc
add
xor
mov
in
sub
inc
clc
jl
ret
sbb
test
add
and
scas
jecxz
fs
cmp
xor
mov
adc
test
mov
adc
aad
sub
in
movsl
cltd
lret
xor
push
shlb
cltd
repz
test
out
push
loopne
jnp
pop
xchg
test
and
ret
pop
movsb
pop
push
push
sub
lcall
push
test
cmp
mov
and
lds
fwait
push
pop
iret
or
add
mov
dec
fldt
cli
loopne
xchg
mov
xor
cmpsb
cli
loopne
and
pusha
shll
pop
xor
sub
and
adc
iret
scas
rcrl
sti
xor
jl
cltd
pop
mov
mov
pop
xor
mov
push
add
push
fsubrl
mov
data16
pop
cmpsb
adc
push
pushl
and
cwtl
out
pusha
push
jo
aas
in
mov
inc
mov
scas
xor
sti
add
loopne
pop
in
push
fcoml
jnp
add
pop
lock
lock
pop
push
mov
shrb
sahf
add
mov
lods
cmpb
and
fwait
pop
mov
popa
add
out
add
mov
aam
mov
mov
divb
pusha
cltd
sub
add
jmp
sbb
sub
fisubrs
cltd
outsb
enter
xor
dec
jecxz
mov
mov
movsb
fisubs
mov
fs
xor
mov
mov
or
mov
fwait
and
push
xor
sarl
cmp
ja
mov
aas
cltd
loop
aam
mov
loope
or
add
sarb
mov
das
shr
pop
pop
or
test
fnstcw
mov
and
out
xor
sbb
inc
fsubrs
insb
dec
fisttpll
scas
inc
cmp
mov
movsb
fnstcw
and
or
push
scas
cltd
pop
hlt
cli
mov
inc
testl
shr
mov
or
xor
sti
sub
push
mov
cltd
jmp
xchg
out
in
fldt
lock
xor
sbb
insb
add
test
scas
push
push
or
lods
jl
jno
cltd
pop
pop
sahf
loopne
jp
mov
mov
inc
mov
mov
adc
jle
out
enter
sbb
inc
push
pop
or
and
adc
scas
pavgw
insb
and
out
in
inc
mov
out
pushf
mov
in
pusha
lock
mull
inc
mov
imul
insb
mov
jmp
push
mov
iret
pop
imul
ljmp
loopne
aas
sarb
fmull
jg
mov
lret
sub
jns
addr16
cmp
movsb
push
cld
xchg
les
outsb
ds
mov
sbb
inc
decb
push
jle
adc
cli
mov
dec
scas
stos
dec
mov
scas
cs
shrb
loop
mov
pop
test
icebp
iret
xor
enter
push
or
xorl
xsave
pusha
mov
sbb
sbb
push
sbb
mov
cltd
pop
cmp
int3
jle
lea
das
pop
cmp
sub
sbbl
int3
mov
and
out
lods
add
das
bound
cld
int
out
fisubrs
and
add
inc
mov
sbb
pop
adc
cmovb
sub
sub
movsl
or
pop
fstpt
xlat
mov
faddl
cmp
lock
xor
mov
outsl
dec
jg
xlat
test
mov
jecxz
xor
jae
push
lods
dec
fsubs
icebp
jns
andl
sub
adc
dec
out
xor
rclb
jno
sub
aas
ljmp
add
mov
jb
or
dec
adc
cmp
into
mov
icebp
cwtl
das
aas
rclb
sub
mov
sub
push
lock
insl
ja
pop
sbb
xor
cld
lahf
leave
outsb
das
xchg
push
stos
mov
fisttpl
orb
cmpsb
mov
jns
push
adc
push
iret
inc
daa
inc
in
cwtl
sub
cmpsl
in
xchg
into
pop
and
or
in
subb
mov
loop
lds
add
ds
call
xor
pop
aam
sbb
dec
cmp
pmullw
das
popa
fcomps
pop
inc
inc
aam
and
stc
sbbb
shlb
out
add
arpl
adc
jge,pn
pop
ss
int3
jo
ljmp
int3
mov
adc
dec
andl
mov
pop
in
lds
out
popf
bound
insb
test
push
mov
pop
movsb
fmul
hlt
dec
mov
call
or
jmp
dec
dec
ja
leave
out
adc
cwtl
ss
aam
int3
inc
and
inc
aas
mov
lcall
xor
sbb
jae
rcrb
into
sti
pushf
pop
sti
push
fstp
movq
mov
in
jecxz
pop
mov
insl
pop
push
xlat
enter
out
pop
mov
pusha
cmpb
xor
mov
jb
adc
insl
and
loopne
jmp
rol
mov
mov
mov
cltd
ja
ljmp
int
loop
mov
out
and
dec
xchg
adc
or
je
fs
mov
fsubrl
je
bound
jnp
pop
jb
lock
out
test
sahf
nop
popa
movsb
mov
sti
cld
sub
mov
and
in
call
mov
daa
push
mov
test
mov
push
push
iret
imul
in
cwtl
mov
test
push
shlb
ljmp
mov
lock
inc
mov
ds
and
xor
test
cmp
ds
push
cwtl
cld
pop
mov
sbb
xor
pop
mov
mov
sti
mov
das
out
mov
popa
sbb
call
outsl
dec
mov
ds
lcall
lret
out
loopne
add
mov
pop
xchg
dec
and
icebp
mov
out
pop
movsb
xor
sti
mov
shlb
and
test
add
shl
mov
fiadds
shrb
lahf
push
mov
hlt
xor
mov
inc
sbb
pop
cld
ret
aam
fwait
and
sbb
xor
stos
frstor
int3
arpl
dec
popa
push
dec
jl
cmp
out
lock
adc
cmpsb
fnstsw
xchg
and
mov
or
rolb
lods
popa
clc
cltd
lret
pop
nop
lahf
push
pop
into
ds
cltd
jl
out
outsb
sub
dec
pushf
add
sub
cmpb
in
jns
mov
cli
mov
dec
and
mov
add
pop
add
pop
mov
pop
clc
mov
in
pop
xlat
lret
into
lock
xchg
and
insb
pop
lret
add
and
pop
mov
push
outsl
and
lods
lret
sbb
jge
loopne
in
lret
fwait
shrl
and
out
push
xor
push
out
es
in
mov
or
and
jo
imul
ljmp
cwtl
and
pop
dec
lods
pop
xchg
in
sbb
pop
mov
iret
gs
add
mov
mov
int
mov
pusha
xor
push
cli
bound
popf
push
lods
cmp
outsb
sbb
adc
bound
scas
push
loop
cmp
xor
imul
rcrl
imul
cltd
stc
adc
mov
ja
insb
fisubs
jb
mov
xor
test
call
and
adc
jmp
mov
jo
inc
mov
dec
xchg
int3
xor
fdivrl
mov
fnsave
insb
daa
test
jne
stc
les
sbb
in
fstpl
dec
icebp
orl
jno
aam
lods
inc
jge
push
ficoms
lods
sbbb
faddl
jno
iret
push
daa
pop
in
xlat
adc
sbbb
inc
pop
incl
cmpsb
sbb
jge
std
pop
dec
inc
int3
cltd
pop
ret
sbb
dec
sahf
in
imul
cmc
lock
adc
fsubrp
stos
je
js
cs
lcall
xor
out
mov
sbb
pop
iret
jb
shl
outsl
icebp
add
mov
ret
and
lods
lret
mov
scas
fstpl
inc
test
fstl
shrb
dec
inc
lcall
inc
ds
mov
jno
push
or
test
lock
frstor
ret
in
pushf
stos
fadds
ror
sahf
dec
int3
push
add
pushf
fs
loopne
ret
aam
les
popa
push
data16
ja
push
pop
dec
clc
das
aas
insb
imul
and
fs
imulb
lock
shl
int
fisubs
lods
fistpll
jg
jg
lret
nop
xor
sub
mov
cmpsb
add
notb
jnp
adc
inc
notl
pusha
mov
mov
bound
jecxz
push
les
push
jmp
mov
clc
add
pop
sti
xor
jle
cmp
test
repz
pop
aad
insl
leave
fs
mov
outsl
mov
int3
mov
sub
push
sbb
push
aas
dec
cld
pop
mov
push
imul
popa
pop
leave
ret
mov
lea
enter
mov
adc
ret
push
outsb
sarb
sub
icebp
mov
sahf
and
ljmp
fldl
xor
sti
cmp
test
jno
add
jecxz
mov
sarb
sbb
and
jg
movsl
pop
insl
inc
enter
dec
jae
scas
jnp
mov
push
bound
xlat
aam
xchg
xchg
add
sub
aam
sbb
das
fistps
xor
gs
das
push
inc
jb
inc
into
pop
sbb
fmull
add
imul
nop
and
xchg
xchg
push
out
jge
fs
popa
nop
ds
les
xor
mov
sub
in
mov
aad
mov
sub
push
push
imul
sbb
in
lahf
push
push
cmp
mov
cmp
iret
stos
adc
fcomps
outsl
sbb
lods
lods
ss
lock
shll
iret
jp
inc
pop
sbb
push
call
sar
imul
mov
xchg
pop
or
push
mov
fmull
bound
push
add
jmp
out
sbb
lods
loopne
mov
mov
xor
out
jle
imul
jmp
mov
cmpsb
mov
iret
popa
js
push
mov
out
xchg
enter
clc
mov
nop
out
mov
push
int3
cltd
or
adc
sub
jno
or
sahf
mov
lahf
in
xchg
mov
sahf
mov
imul
push
aas
mov
pop
or
iret
pop
les
jmp
pop
in
pushf
pop
leave
insb
lods
loop
xor
movsb
in
jns
stos
jbe
fsubrl
push
cmp
cmc
pop
or
pop
scas
rcll
mov
xor
sub
in
popa
and
ds
outsl
mov
out
aas
jo
push
jl
shlb
inc
jmp
lcall
sub
mov
addr16
inc
mov
scas
mov
jge
outsl
mov
dec
cmp
mov
lods
mov
mov
orb
push
sti
cwtl
jl
into
aaa
mov
aas
and
xor
lret
push
sbb
sbb
push
data16
mov
xlat
sub
and
mov
cmp
sbb
and
out
or
pop
iret
inc
mov
mov
movsb
lahf
and
and
sub
jl
and
out
sub
out
mov
dec
pop
imul
jecxz
into
bts
aam
inc
pop
fcoms
js
sub
scas
cwtl
dec
mov
inc
dec
push
andb
and
faddl
ja
sub
test
out
cmp
es
and
mov
adc
and
sbb
mov
inc
cmp
enter
in
pop
fdivs
dec
cltd
mov
int3
jo
jge
arpl
sbb
sub
and
xchg
incb
xor
fmull
sbb
stos
pop
in
add
call
rcl
push
jnp
addr16
insl
outsb
pop
es
inc
push
mov
nop
jns
push
push
nop
push
push
or
repnz
arpl
out
fcomi
sub
scas
mov
shrb
js
adc
push
lcall
jp
cmp
sbb
push
std
ror
dec
xchg
cmp
lds
popf
je
mov
leave
mov
add
pop
je
push
sbb
imul
clc
ja
test
lcall
imul
subb
iret
ljmp
pop
sub
rolb
cwtl
add
out
xchg
int3
add
in
ss
icebp
popa
pop
mov
mov
roll
xchg
mov
pusha
repnz
lret
mov
dec
out
push
out
das
fdivrl
mov
or
mov
mov
lahf
in
enter
shll
jmp
in
insb
adc
adc
pop
xchg
push
out
adc
sub
mov
call
nop
popf
bound
dec
push
outsb
cwtl
insl
jmp
mov
sbb
or
xor
xchg
dec
test
sub
mov
xchg
cs
jns
mov
scas
mov
mov
inc
inc
mov
cmp
cli
aas
cmpsl
jmp
outsl
inc
shll
movsl
mov
jb
inc
push
pop
aad
pop
push
mov
iret
call
outsb
mov
or
push
dec
data16
call
push
adc
xor
or
popa
cli
mov
pop
scas
mov
nop
sbb
pop
bound
cli
pop
cwtl
push
sub
dec
out
popa
lock
or
xchg
pmulhw
cmpsl
pop
push
outsb
popa
cmpsl
je
sbb
sub
lds
inc
push
leave
lahf
xchg
cmp
dec
rcrl
jmp
iret
sbb
mov
pop
pop
pop
nop
and
mov
cwtl
outsl
sarb
bound
js
outsb
push
lahf
mov
or
sub
nop
stos
sub
out
aas
fcmovnbe
push
scas
jecxz
push
lcall
ret
pop
fbld
xor
mov
inc
fildll
mov
add
or
popa
pusha
les
es
test
test
inc
out
mov
shl
sub
stos
jl
fs
fmull
fwait
or
mov
push
out
out
movsl
push
ja
loopne
pusha
xor
nop
filds
jle
xor
rclb
xchg
pop
inc
pop
sub
ds
inc
scas
pop
xor
push
push
test
lcall
call
xor
jne
aaa
rcr
pusha
bound
and
faddl
adc
mov
push
sub
jne
ss
inc
jecxz
inc
iret
lcall
adc
nop
sub
jle
lods
push
inc
add
ret
xorl
decb
and
mov
pop
mov
push
pop
pop
ja
inc
scas
in
pusha
and
loop
std
inc
cltd
sahf
jnp
sbb
popf
sbb
mov
aaa
adc
cmpsb
outsb
mov
iret
out
xor
xorl
lds
or
div
aas
push
addb
test
int3
mov
cmp
shr
in
jge
fs
mov
sbb
and
sbb
cmpb
xor
aas
out
cmp
lods
xor
push
add
cmp
mov
loop
and
iret
jns
sahf
mov
lcall
ret
call
dec
out
inc
inc
mov
ljmp
fsubl
loop
int3
ds
mov
mov
jbe
bound
mov
int
adc
fildll
xor
dec
je
and
in
lahf
pop
cmp
bound
push
lods
xchg
or
outsb
jae
add
lods
jl
pop
iret
dec
adc
inc
cld
popa
aaa
jnp
mov
and
movsl
cmp
in
insb
imul
cld
out
icebp
pop
mov
dec
dec
lock
rcrb
pop
xor
cmpsb
daa
push
bound
add
mul
xchg
pusha
dec
out
arpl
rol
stc
rorl
push
cmp
mov
xor
bound
xchg
movaps
ficomps
mov
xorb
leave
lcall
jecxz
cmpb
sbb
inc
loopne
jge
std
mov
xor
dec
mov
in
stos
adc
push
or
lret
and
clc
mov
push
je
pop
adc
insb
neg
outsb
pop
mov
mov
mov
xor
aam
xor
imul
js
xor
fdivl
push
cmpsb
nop
adc
dec
push
les
aad
jae
xor
stc
push
ret
lock
or
xchg
xor
roll
cli
ret
fsubrl
into
mov
ja
mov
jecxz
xchg
sub
inc
data16
fcom
mov
les
pusha
or
shl
cli
mov
jle
adc
add
xor
out
hlt
inc
pop
loopne
ret
negl
mov
mov
out
out
jl
or
test
jno
mov
sahf
fdivl
fstl
or
out
fcmovu
sarb
cmpsb
pop
ret
insb
repnz
mov
push
ret
aaa
arpl
addb
push
cmp
mov
ds
pop
mov
iret
nop
test
push
jecxz
mov
xchg
pusha
addr16
inc
and
out
push
cli
aad
mov
pusha
adc
out
mov
pusha
pop
orb
inc
adc
loopne
sbb
jg
pop
mov
dec
cmp
jne
loope
loopne
push
mov
aam
jmp
sar
loop
push
in
cmp
cmpsl
cmc
out
out
dec
mov
mov
cmp
lret
add
or
push
subl
mov
das
loopne
cmp
insb
jae
fnstsw
rcr
inc
addr16
mov
rcrb
cmpsb
xchg
dec
xchg
jg
inc
xor
jg
lods
xlat
add
in
jne
mov
sahf
test
sbb
lods
mov
in
test
adc
sbb
jns
xchg
adcb
lahf
arpl
test
cltd
adc
jae
push
vmovaps
mov
call
adc
dec
xor
or
adc
lret
ljmp
and
test
push
test
cmc
nop
repz
dec
mov
insb
inc
lahf
fistps
lret
enter
cs
test
shlb
jmp
out
inc
mov
pop
mov
loopne
xchg
sahf
xchg
ret
xchg
dec
push
sbb
or
mov
add
push
push
insb
addl
or
aas
fnstcw
movsb
mov
mov
mov
test
inc
insb
and
fstpt
sbb
dec
mov
push
icebp
test
lea
fnstsw
pushf
aad
dec
sahf
inc
dec
pop
mov
mov
mov
sub
xlat
inc
jmp
add
push
sahf
addr16
push
xor
scas
shrl
arpl
notb
mov
mov
and
enter
loopne
sahf
sub
mov
iret
leave
dec
jb
push
inc
fistpll
xor
xchg
dec
je
je
xchg
inc
sub
xor
shl
lea
das
mov
mov
mov
mov
loop
jle
mov
push
sub
jns
pusha
shr
inc
xor
xorb
jae
push
rcl
fwait
cld
std
pop
in
mov
mov
cmp
and
add
lds
dec
mov
imul
rolb
mov
or
loopne
lds
std
xor
cmpsl
fwait
adc
incl
int
and
int3
js
rcll
inc
imul
mov
xlat
clc
or
sbb
filds
sub
iret
das
icebp
pusha
stos
jmp
or
lock
insl
adc
test
jnp
scas
lret
rolb
gs
inc
xor
or
scas
and
outsb
add
sbb
sbb
nop
pop
cltd
add
push
xor
push
scas
mov
mov
aas
movsb
cmp
loopne
jnp
add
jmp
jae
ss
pop
cmp
or
pushf
push
aas
es
movsl
aam
sub
xchg
movsl
scas
cmpsb
and
fimuls
out
aaa
movsb
insb
or
ljmp
cltd
mov
sub
mov
and
cwtl
dec
mov
or
js
shl
and
cld
push
lods
cmp
rcrl
sahf
inc
inc
or
mov
addr16
pop
lds
mov
stos
outsb
faddp
daa
lock
pop
or
jns
test
fs
sub
dec
mov
cmpsb
adcl
and
mov
lock
fs
in
xor
scas
push
gs
pop
lret
loopne
inc
icebp
lods
je
inc
pop
test
jbe
inc
shl
insb
int3
sub
icebp
stc
rcll
mov
mov
mov
ja
test
sub
std
mov
mov
mov
adc
push
gs
lret
xor
pusha
jmp
jbe
je
sbb
iret
pop
popf
jp
int
adc
in
repz
das
xor
add
push
pushf
lea
xor
test
inc
or
ds
stos
dec
je
push
adc
cli
scas
or
mov
mov
out
cmp
adc
sub
push
pop
pop
out
cwtl
dec
imul
in
pop
enter
repz
sbb
sbb
push
lds
jl
jbe
out
add
dec
fwait
xor
test
lea
push
shl
jmp
jl
sarl
xor
cli
sti
mov
mov
aas
rorl
adc
lret
ror
or
xor
in
aam
call
xor
and
pusha
cwtl
mov
or
or
shl
pop
loop
push
push
xchg
pop
insb
mov
pop
mov
test
inc
push
dec
popa
stos
js
mov
cmp
mov
bound
push
mov
sub
cwtl
iret
shrl
lret
pop
and
fsubrl
les
fs
pop
mov
pop
mov
inc
mov
sbb
aam
rolb
mov
ss
dec
inc
fmuls
mov
leave
in
sub
pusha
sbb
test
pop
inc
mov
outsb
and
add
sbbb
test
push
out
imul
jmp
lcall
rolb
cltd
adcb
jmp
mov
bnd
push
sbb
mov
pop
fmuls
cltd
cld
das
xchg
cmpsb
cmc
xchg
cli
out
jge
imul
pushf
jg
fwait
lods
add
jmp
push
mov
add
sbb
leave
or
fidivrs
xchg
rcrl
loop
cltd
lahf
shlb
mov
add
js
pop
mov
arpl
lret
jb
sahf
jmp
fistps
mov
inc
fbld
lcall
inc
lea
ret
dec
push
icebp
pusha
pop
shrb
lahf
test
ss
sbb
cmp
js
sub
push
ljmp
test
fwait
dec
xchg
aad
mov
inc
out
sub
jb
mov
std
sbb
cmc
shll
pusha
pop
mov
repz
ss
mov
jnp
add
imul
sub
push
shrb
sub
and
mov
data16
enter
pop
js
xor
mov
mov
cli
stc
mov
and
mov
push
repz
and
int3
inc
add
loope
push
inc
ds
leave
xor
fwait
pop
lea
into
and
sahf
push
mov
cmpb
adc
xchg
aas
test
lods
xchg
loop
sbb
pop
mov
adc
push
mulb
cmp
push
adc
mov
ffreep
dec
and
daa
jnp
pusha
push
push
jno
mov
mov
or
xchg
cmp
xlat
imul
pop
cmp
ficoms
adc
cmpsb
sub
add
sbb
adc
xchg
inc
imul
mov
test
cli
les
jp
sahf
loopne
andb
clc
cmp
push
aam
fwait
test
dec
add
movsb
dec
adc
arpl
or
mov
flds
test
push
dec
rorb
dec
orl
push
fcoml
inc
popl
rclb
loopne
leave
cltd
popa
inc
and
jp
ds
and
in
jbe
dec
and
add
imul
hlt
cmp
sbb
pop
mov
or
or
add
jb
int
out
add
cmp
pop
add
inc
stos
loope
lcall
push
jne
into
fadds
in
cmc
cmp
loopne
loop
insb
xor
mov
inc
dec
out
lds
pusha
sarb
or
push
inc
mov
insb
test
pop
cwtl
fidivl
mov
push
and
lea
shr
mov
enter
mov
test
daa
sbb
cmp
movsl
ss
mov
push
loopne
xor
mov
jmp
sti
aam
lret
add
data16
inc
push
push
jge
scas
jnp
insl
pop
inc
sub
pop
xor
add
adc
clc
ja
inc
fnsave
pushf
test
sbbb
inc
in
icebp
rorb
mov
das
aad
jo
sbb
out
es
inc
xchg
enter
aam
loop
out
mov
imull
fs
nop
mov
outsl
xor
cld
inc
scas
dec
scas
test
sub
jmp
outsb
inc
lods
test
out
adc
mov
mov
lds
stos
subb
jnp
add
leave
cmp
int
scas
bound
add
and
lods
xchg
lret
das
xor
icebp
lahf
popl
jbe
jmp
dec
bound
mov
outsl
add
out
jo
scas
add
mov
lret
mov
push
inc
shrl
addr16
push
mov
lahf
gs
scas
adc
pop
mov
lea
int
sbb
gs
pop
lods
dec
ficoml
inc
nop
mov
xchg
jmp
add
xchg
add
sbb
movsl
and
pop
pop
int
out
jae
fimuls
test
sbb
in
xchg
mov
fwait
sub
pop
shl
adc
mov
cmp
scas
cmp
inc
sti
pop
mov
scas
cmpsl
jecxz
jmp
dec
mov
sahf
jmp
popf
fcomp
mov
mov
sbb
inc
or
mov
out
mov
shrl
punpcklwd
mov
jno
test
add
mov
in
mov
mov
xor
gs
xchg
fninit
add
leave
ret
rcrb
fnstsw
cmpsl
loope
xor
cmc
icebp
mov
loopne
and
sub
icebp
nop
sub
pop
xor
dec
daa
repz
movsb
sub
idivb
inc
das
enter
mov
lock
fcompl
outsb
xchg
jp
aad
popf
stos
out
stos
lods
jne
mov
lods
adc
fcoml
out
push
pop
iret
sub
int3
fs
mov
fsubrl
adc
addr16
mov
mov
cmp
dec
mov
fldt
lahf
mov
xor
cmp
scas
jl
loopne
xor
dec
arpl
data16
aas
aam
pop
sbb
fdivs
dec
outsb
adc
repz
xchg
loope
fdivrs
jecxz
gs
adc
cmc
out
jb
inc
and
ret
and
loopne
mov
outsb
add
jmp
in
pop
xor
lods
out
push
inc
mov
pop
lods
push
dec
cmp
jecxz
mov
jae
cmpsl
push
jecxz
lods
jg
imul
addr16
iret
bound
and
rcrb
test
or
push
pop
fwait
cmp
outsb
jmp
and
mov
test
mov
inc
push
hlt
je
mov
mov
outsl
mov
subb
jmp
fs
push
cmc
shll
das
pop
pop
sbb
jmp
sub
pop
stc
mov
rcrb
or
sub
mov
call
mov
and
and
cwtl
pusha
jno
sahf
xor
in
mov
imul
cmc
out
mov
scas
xor
faddl
imul
lods
xlat
push
mov
icebp
inc
ror
pop
imul
bound
push
and
pushf
sub
loopne
in
mov
push
and
loopne
cmp
dec
outsb
int
and
adcl
mov
push
call
ret
and
test
cltd
adc
mov
scas
fdivrs
jnp
lahf
push
sub
shl
jmp
enter
das
xchg
lods
test
pusha
stos
or
sub
cltd
outsb
fs
imul
gs
dec
popa
xor
cmc
shr
dec
xor
call
push
or
adc
rorb
pusha
mov
and
nop
lcall
cmp
and
and
sbb
jmp
add
leave
and
in
jne
inc
cli
or
sbb
jle
sub
scas
stc
rol
pusha
test
xchg
lret
movsb
mov
incb
mov
mov
cltd
lock
mov
sbb
or
lock
add
and
into
loopne
aam
pop
imul
call
sahf
push
mov
xor
mov
mov
in
aam
aam
push
dec
jo
repz
js
pop
pop
jno
adc
ds
and
in
add
jo
aas
les
push
aas
xor
scas
cmpsb
out
inc
outsl
nop
cltd
dec
insl
and
fsubs
test
loopne
sarb
add
jo
xor
loop
mov
mov
mov
sbb
cltd
aas
mov
scas
in
and
jp
bound
lahf
das
adc
out
mov
push
dec
xor
cmpb
mov
and
rcrl
adc
rolb
les
dec
enter
mov
dec
leave
jb
adc
dec
and
and
sbb
nop
and
cld
fldenv
dec
fists
add
dec
mov
or
ljmp
sbb
into
adc
dec
cmp
loop
jmp
fbld
jp
pusha
shll
call
outsl
pusha
inc
packuswb
iret
sbb
negl
iret
jmp
in
jne
push
out
jns
es
rclb
stc
es
shrb
adc
xchg
imul
or
cld
sbb
je
fsts
shlb
or
sbb
sti
pop
push
scas
insb
xchg
mov
push
insl
ja
adc
les
idivl
ds
mov
or
or
rcl
xor
pushf
cwtl
or
push
pop
mov
and
loop
or
push
ja
sub
outsb
loop
jno
jle
icebp
int
sbb
jge
stos
sti
jnp
gs
test
mov
mov
mov
xor
test
dec
xchg
jns
lock
cmp
push
out
in
adc
icebp
sbb
jo
sbb
inc
lods
out
nop
inc
mov
fnstenv
es
bound
scas
push
pop
push
mov
iret
jmp
or
rorb
xchg
fisttps
pop
out
arpl
pushf
scas
fcompl
jmp
inc
sbbl
ds
jl
out
mov
sti
jmp
es
cmpl
and
xor
scas
xor
rolb
pop
cmp
jle
fstpt
ds
scas
lock
dec
jecxz
stos
inc
push
or
adc
jbe
push
xlat
xchg
lcall
andb
insl
movl
jge
mov
xor
push
shlb
and
dec
in
inc
fwait
inc
out
scas
inc
iret
jl
mov
sbbl
dec
sub
jg
cmp
lock
xor
fldcw
mov
lods
jge
adc
mov
push
dec
pushf
mov
rol
in
inc
test
in
mov
enter
imul
orb
xchg
shrb
or
bound
call
scas
push
jns
jo
test
sub
xchg
add
mov
loopne
sub
loop
add
fiaddl
cwtl
test
mov
out
test
repnz
mov
sbb
je
dec
test
pusha
lock
out
or
fdivl
stc
sub
ds
cli
pop
jg
in
dec
out
add
jo
scas
loop
pop
scas
cwtl
sti
pusha
shl
sbb
xchg
test
sub
aas
mov
fiadds
add
mov
lods
stos
jmp
mov
je
xor
mov
dec
jl
inc
scas
pop
mov
pop
jns
addr16
dec
test
sub
outsl
push
lret
xor
mov
sub
sbb
insl
out
and
jg
int
xor
xchg
lods
loope
jbe
je
jg
add
sbb
das
addr16
ficoms
test
insl
cmpsb
cmova
bound
jl
gs
insl
xor
push
xchg
loop
loop
jg
test
sub
cmp
into
lcall
aaa
outsb
adc
dec
fnsave
pop
mov
dec
les
jnp
scas
dec
sbb
mov
in
cld
orb
fisttpll
mov
add
enter
out
jmp
pop
inc
cmp
mov
scas
stos
lock
xchg
stos
push
mov
jle
les
das
sub
pop
jb
stc
xor
cmp
lcall
std
test
mov
ss
push
pop
push
dec
mov
into
fucomi
xchg
jo
add
lods
push
cmpsb
push
push
dec
cmp
mov
daa
mov
ret
inc
inc
fcomps
jnp
jnp
cmp
mov
and
push
test
js
mov
scas
stos
pop
loopne
add
mov
add
lret
xor
mov
xor
mov
jg
jp
adc
push
dec
rol
mov
insb
cmpl
or
jle
imul
daa
mov
and
inc
aam
inc
insb
or
xor
icebp
xor
mov
aaa
iret
or
leave
jg
test
bound
push
cmp
and
mov
xor
cltd
dec
shlb
lods
ja
ficomps
sahf
push
in
or
lahf
mov
ret
jp
lret
ja
shrb
pop
adc
test
lods
pusha
jg
and
adc
div
sahf
orb
icebp
in
movsl
popl
pop
loop
inc
nop
mov
and
xchg
push
sub
xor
inc
insb
xchg
dec
jl
pop
aam
pop
loop,pn
sub
in
lock
pop
scas
stc
xor
cmp
hlt
push
in
sbb
les
add
pop
in
roll
stos
pop
sub
and
sbb
stc
mov
loopne
hlt
iret
mov
cmc
or
lock
loopne
in
pop
shlb
sbb
inc
pusha
jecxz
xor
push
xchg
sti
cmc
inc
push
data16
ljmp
cli
and
sub
je
jo
xchg
loope
jmp
sub
fwait
jg
adc
test
outsl
sbb
xorl
mov
cmp
adc
dec
or
iret
loopne
sarb
inc
sbb
cmp
mov
push
cli
mov
ds
ficoml
popa
and
pusha
push
inc
ret
mov
and
mov
cltd
xorb
push
shlb
or
mov
loopne
fnstsw
out
sbb
jp
jmp
adc
aas
inc
mov
ret
cwtl
scas
out
insl
mov
shll
shrb
xchg
and
xor
sti
xor
push
inc
scas
lods
cld
or
out
mov
lret
mov
in
pop
jge
mov
sbb
or
and
in
rcl
lods
adc
repnz
sti
push
sub
or
sti
rol
hlt
mov
pop
pop
movsl
cmp
or
sarb
fistpll
shrl
in
es
call
repz
scas
scas
cmc
addb
cli
and
cmp
imul
in
ds
in
arpl
icebp
fs
sbb
enter
xchg
dec
inc
xchg
push
mov
mov
push
out
pop
lods
pop
rolb
adc
insb
cli
daa
aaa
sar
jle
adc
mov
adc
push
mov
pop
sbb
pusha
cmp
pop
mov
fdiv
dec
sbb
inc
arpl
sti
push
insb
cmpb
cmp
fwait
add
xor
push
jo
xchg
arpl
or
int
and
mov
jno
pusha
pop
cmpsl
sub
ds
test
xor
loopne
pop
fbstp
cmc
jp
mov
push
ret
jno
sub
ss
aad
inc
insb
inc
adc
jmp
leave
cld
adcb
stos
movsl
loopne
sbb
xor
add
mov
in
xlat
or
adc
movl
scas
in
add
in
push
aam
iret
xchg
shll
jns
lret
into
lcall
lods
jl
sarb
aas
cld
cmp
adc
push
loope
xor
ds
std
aas
call
int
mov
mov
cmp
scas
mov
in
scas
dec
cmpsl
pop
cmpsl
out
outsl
push
sub
and
jg
lret
frstor
adc
mov
jns
push
mov
call
fwait
dec
sahf
jmp
into
mov
bound
js
fisubs
sahf
aam
or
stc
loopne
jle
jns
arpl
pop
or
out
pop
xor
sti
loop
icebp
cltd
in
pop
adc
sahf
lea
and
scas
out
cltd
pushf
nop
adc
mov
mov
enter
das
push
sahf
push
push
sub
xchg
test
nop
inc
scas
gs
scas
push
std
pop
ficomps
sbb
push
jmp
lock
xor
je
ljmp
stc
jmp
push
inc
fsubl
rorb
push
rcrl
cld
in
ds
sbb
jnp
repnz
out
xor
push
int3
mov
subb
xchg
pusha
adc
data16
aas
jnp
and
pop
scas
arpl
cltd
and
imul
cmp
adc
sbb
sti
lock
xchg
push
cltd
scas
lret
js
inc
push
adc
cmc
stos
xchg
xchg
jno
les
or
and
jno
sub
int3
xor
jo
stc
fs
xlat
mov
out
push
mov
mov
iret
andb
cmp
push
in
hlt
je
add
pop
mov
out
push
mov
outsb
cmc
mov
inc
fiadds
mov
add
jg
imul
outsl
cli
mov
mov
cmp
mov
lahf
jmp
xor
fs
mulb
cmp
cmc
inc
jle
mov
cltd
adc
adc
xor
xor
and
pop
in
xor
je
fs
outsl
xor
dec
insb
pusha
pop
lock
insl
fistpl
inc
and
outsb
and
insb
les
mov
fmull
bound
xor
clc
lret
dec
stos
insl
cs
dec
mov
or
mov
or
loop
push
call
xor
adc
push
in
cs
cmpsb
add
adc
das
shlb
push
mov
and
or
test
test
mov
lret
push
mov
bound
pop
pmaxub
imul
scas
aaa
leave
repnz
ror
dec
andb
insl
fnsave
dec
mov
pop
std
sahf
out
and
push
aam
mov
cltd
in
jnp
cli
or
sub
mov
fcompl
mov
dec
imul
bound
sub
lds
test
icebp
je
mov
pop
mov
mov
loopne
insb
pop
inc
xchg
lods
xor
js
scas
pop
sbb
dec
aas
mov
lahf
bound
pop
mov
inc
decb
cs
lahf
adc
fwait
pop
sub
sbb
test
addr16
in
lods
push
sbb
arpl
in
fcompl
das
pushf
movsb
sbb
out
jnp
lods
mov
push
enter
lock
shr
into
push
inc
insl
sbb
test
adc
mov
lods
dec
pop
push
jmp
mov
in
fwait
arpl
cmp
fcompl
push
lahf
fstp
cmp
mov
out
xchg
add
popf
ret
dec
jg
sahf
shrl
jbe
mulb
mov
cli
or
and
sub
sub
mov
sub
movsb
jne
popf
sahf
data16
pop
mov
adc
iret
jecxz
aas
fisubl
fcomi
sbb
arpl
mov
xor
ret
add
pop
rdpmc
cs
sbb
mov
mov
pop
or
shll
jmp
dec
icebp
test
fmuls
rcrl
mov
mov
xor
xor
std
jle
aam
rolb
sub
cmp
inc
andl
test
pusha
push
and
pusha
fwait
bound
popf
dec
inc
into
shlb
jo
movsb
cmp
sahf
adc
inc
rcll
cmpsb
ret
dec
movsb
mov
inc
dec
or
pushf
cmc
into
daa
loop
xlat
xchg
jecxz
sub
mov
add
push
out
test
inc
pop
inc
in
nop
adc
jb
xchg
or
call
dec
inc
shlb
rclb
jmp
and
stc
jo
adcl
pop
hlt
add
add
or
mov
pop
nop
fs
clc
int3
lods
imul
jns
jle
dec
iret
or
rol
loop
nop
dec
xchg
or
cmp
push
into
dec
fstpl
inc
pop
in
das
push
out
out
lret
nop
mov
shrb
iret
cmpb
addr16
leave
mov
push
or
add
pop
loop
mov
or
mov
xor
sbb
fdiv
aad
adc
hlt
iret
std
or
es
adc
add
scas
mov
out
sar
mov
fs
push
pop
int
add
dec
inc
jne
xor
mov
shrb
cmc
andb
stc
outsb
aas
mov
int3
inc
lds
and
push
bound
in
mov
pop
iret
rcr
push
xchg
repnz
adc
ficompl
jle
iret
adc
cld
add
pop
lods
fs
mov
dec
push
pusha
xor
nop
cmpsb
mov
lods
mull
mov
sub
fdivrp
imul
imul
adc
aam
mov
xchg
inc
icebp
ss
scas
in
test
pusha
jo
inc
pop
lods
or
fsubrs
jmp
fists
cmpsb
sahf
rep
push
movsb
scas
inc
sub
sbb
addl
dec
stc
mov
push
pop
fistl
movsb
in
dec
mov
in
mov
arpl
arpl
loop
insl
bound
pop
out
mov
lahf
jmp
mov
jno
cltd
mov
fdivp
xor
lods
mov
sbb
call
lods
insb
dec
cmpsb
test
push
dec
sub
aad
lods
lahf
inc
out
mov
insb
scas
jecxz
xchg
call
imul
xor
out
adcl
xor
xor
xchg
sbb
imull
or
or
push
out
push
pop
lret
sarb
sbb
mov
in
les
xchg
leave
push
in
mov
inc
int
mov
ret
jg
js
sbb
sti
pop
fnstcw
mov
stos
or
mov
fst
push
insb
pop
ror
adc
ret
mov
outsb
cmp
iret
mov
outsb
mov
mov
push
dec
lock
outsb
in
unpckhps
dec
push
sub
cltd
lock
adc
mov
dec
test
push
push
sbb
mov
stc
loopne
add
pop
aas
jl
cwtl
xor
adc
push
lods
pushl
ret
dec
or
mov
outsl
imull
jp
lcall
fstl
fdivs
shrb
ljmp
lock
jle
inc
cld
or
lea
cmp
jmp
pop
clc
jnp
sbb
mov
adc
repz
nop
arpl
cmp
mov
xchg
stc
push
daa
shrl
mov
mov
outsl
and
fbstp
mov
int
or
fs
shlb
ljmp
insb
lahf
andb
int3
out
aaa
mov
jmp
loopne
xor
inc
push
inc
dec
test
pop
sbb
loop
push
push
iret
fsts
iret
outsl
loopne
pop
cld
cmc
mov
xor
in
insl
rolb
xor
xchg
xchg
and
iret
das
lret
cli
dec
pop
movsb
and
pop
xor
xchg
aam
rcrb
xchg
test
lods
pop
cltd
lret
leave
nop
xchg
mov
mov
mov
add
std
add
in
pop
lock
mov
sbb
shr
xchg
les
mov
pusha
jmp
sahf
loop
cld
mov
mov
adc
and
outsb
out
int
sarb
mov
xchg
mov
xchg
cmpb
icebp
push
push
call
in
pop
ret
add
enter
xchg
out
insl
outsl
mov
ja
push
in
mov
push
movsb
mov
xchg
mov
rclb
lcall
mov
test
mov
jmp
cs
dec
fadds
pusha
mov
mov
int
and
nop
and
int3
inc
jmp
xor
fsubrs
and
bound
scas
rcpps
iret
pop
or
sahf
sub
out
inc
push
pushl
adc
mov
mov
dec
in
xor
test
cmpsb
dec
push
cmp
sti
les
push
arpl
push
popf
fsubrl
enter
icebp
mov
adc
mov
pop
stos
sahf
jnp
pop
pop
or
imul
mov
mov
mov
scas
xor
outsb
out
cmp
je
and
mov
ss
loopne
mov
inc
ds
sub
xor
pop
lret
lock
lds
sbb
and
sub
pop
xor
mov
cld
lods
sub
push
push
jg
iret
leave
div
mov
pop
iret
jns
scas
adcb
ss
sbb
aas
outsl
outsl
insl
int
or
cmp
mov
sub
ficompl
xor
jg
stos
xor
stos
popa
out
bound
scas
sub
jg
jns
xlat
jno
movsb
js
ja
sbbl
repz
cmp
lods
std
aam
pushl
rcll
mov
jbe
inc
cmp
push
pop
paddsb
lea
aam
dec
push
push
xor
jb
push
std
inc
hlt
mov
jb
dec
or
xor
stos
popa
xchg
les
rcrb
fs
mov
jnp
call
insl
loop
icebp
jb
push
insb
jns
dec
ret
adc
ret
shl
dec
sahf
add
push
xchg
mov
push
jmp
rcrb
adc
cltd
cs
popf
outsl
cltd
test
ret
daa
xor
mov
dec
je
jne
div
shlb
fcom
icebp
out
mov
cmp
cld
jl
pop
stos
loopne
xchg
adc
mov
and
fs
and
mov
or
cltd
shrb
jnp
pushf
mov
insb
adc
into
bound
and
nop
repnz
add
sub
stc
jmp
xor
adc
fisubl
addr16
cltd
add
daa
lods
or
mov
mov
mov
mov
jmp
add
mov
cmp
mov
popa
jnp
js
icebp
in
jnp
push
imul
test
inc
loopne
into
imul
in
int
jp
mov
popf
mov
out
mov
sar
nop
fs
lret
push
out
loop
sub
rcl
lock
cmp
scas
fistl
outsl
pop
in
sbb
fdivl
loop
adc
ss
inc
cmp
mov
shlb
adc
xchg
aam
loop
rol
lock
test
in
into
mov
lret
into
mov
fcomps
inc
icebp
std
leave
popa
lcall
lds
mov
stos
sbb
mov
xor
mov
ss
sti
enter
adc
mov
push
and
addr16
pop
and
cmpsl
jg
jno
fadds
push
adc
mov
lahf
cld
rolb
aas
jo
or
pop
sbb
es
movsb
cld
push
popa
mov
sahf
out
cwtl
xor
ret
pusha
negl
or
xor
inc
cli
xchg
das
bound
call
outsb
test
mov
and
sbb
inc
leave
lock
xlat
xorb
xor
out
push
mov
mov
add
das
push
push
in
sahf
outsl
mov
fisubl
push
out
cltd
mov
mov
push
jo
jmp
jo
push
dec
jno
push
and
pop
cmp
cmp
lret
mov
or
inc
jo
popa
mov
jb
out
mov
scas
sbb
pusha
add
test
call
adc
push
js
push
push
std
fscale
pop
xchg
dec
or
xor
stc
cltd
outsl
stos
cmp
gs
xor
aas
jecxz
push
sbb
cmp
or
mov
add
cmp
adcb
pop
stos
aad
addr16
daa
and
in
cmpsb
lret
test
dec
dec
pusha
aaa
fstl
sbb
sbb
std
push
and
aam
outsl
and
frstor
inc
push
adc
push
rcrb
mov
add
mov
cltd
lea
iret
out
outsl
and
sub
adc
mov
pop
inc
jb
xchg
jle
or
inc
xor
inc
pusha
adc
add
ret
pop
xchg
sub
rolb
pop
sub
cmpsl
int3
push
inc
and
stos
jno
cmp
or
push
insl
sahf
hlt
jae
xlat
jns
cmp
lret
rcrl
inc
test
popf
int3
or
das
cmpsb
adc
ret
adc
jnp
orb
jno
lret
xor
inc
jge
sbb
je
cmp
arpl
add
or
andb
jno
shl
std
mov
ds
scas
mov
pusha
xchg
sub
mov
imul
iret
test
negb
inc
idivb
xorl
fmull
stos
jne
stos
mov
jecxz
jmp
test
fsubrs
jns
ja
pop
pop
sbb
stos
popl
pop
leave
dec
adc
repz
xchg
mov
mov
fdivs
js
inc
bound
pop
dec
xchg
mov
sbb
scas
and
xchg
dec
into
add
jle
jg
fildll
or
xor
xor
lret
insb
out
inc
arpl
call
sti
addr16
push
movsb
in
std
insb
pop
xchg
inc
add
ljmp
inc
mov
push
test
es
dec
gs
and
inc
iret
mov
cmc
xchg
pop
and
sti
sahf
je,pt
mov
mov
ss
push
push
int
push
mov
mov
dec
add
nop
inc
push
pop
dec
nop
pop
adc
push
stc
outsb
push
into
int
sahf
stc
adc
mov
inc
imul
sub
cltd
xor
fwait
pop
mov
mov
scas
pop
xchg
xchg
mov
mov
sbb
mov
rcll
push
pop
mov
mov
dec
cwtl
mov
add
jae
mov
push
lods
and
stos
repz
push
jbe
das
and
cwtl
into
push
out
push
and
push
ds
pop
jmp
or
outsl
and
arpl
mov
aad
mov
inc
stc
ds
imul
dec
fcmovnu
xor
or
out
lds
in
dec
mov
insb
or
mov
push
adc
sti
dec
sahf
push
add
lods
popf
add
sbb
stc
aam
xchg
inc
jge
sti
lods
push
lods
cmp
sbb
pop
into
sub
jmp
push
rcrl
jns
outsl
inc
clc
sub
pusha
mov
cmp
pop
cs
es
inc
shlb
movsb
movl
outsb
mov
cltd
nop
mov
in
in
xlat
mov
mov
bound
dec
lahf
repnz
or
add
in
jno
jmp
push
or
jae
in
rorb
xorb
push
jle
pop
inc
push
fwait
test
cmp
fdivl
dec
xor
in
orl
mov
lret
enter
cmpsb
xor
pusha
mov
mov
cwtl
xchg
shrb
test
bound
mov
mov
and
aas
shr
jae
and
lret
call
icebp
fdivs
je
fsubl
gs
cmc
jb
fcmovnu
cwtl
cmp
mov
fldcw
mov
xor
pop
xchg
cmp
pop
lea
and
mov
stos
roll
mov
or
or
mul
pop
sbb
popa
gs
outsb
icebp
fiadds
mov
shrb
sbb
push
sbb
jae
xchg
mov
sbb
popf
mov
push
dec
test
into
out
inc
arpl
outsl
pop
mov
push
jb
inc
cmp
xor
jp
pop
fcomps
ret
sbb
unpcklps
inc
add
add
jae
add
test
je
cltd
lock
test
pop
sahf
mov
push
jge
popf
mov
pop
testb
xchg
call
bound
lock
pop
fwait
sbb
push
push
jb
loop
cld
lods
pop
divb
gs
xchg
push
inc
in
ds
popa
sub
inc
fnstenv
fmull
popa
jno
movb
lret
cmpsb
sbb
mov
inc
ret
outsb
int3
mov
cmc
mov
xchg
iret
fidivs
pushf
test
int3
lods
adc
cmp
rcll
add
lcall
cmp
mov
push
or
push
pop
add
popf
aas
dec
add
or
icebp
jmp
popa
stc
iret
movb
mov
sbb
psrlq
orb
leave
pop
scas
pop
jae
mov
sbb
xor
sub
rolb
inc
mov
icebp
lret
and
mov
cmp
cs
jo
pop
dec
sub
jbe
paddsw
cs
pop
test
out
dec
es
sub
push
cwtl
jge
mov
pop
cltd
enter
xchg
outsl
jnp
out
lahf
test
sahf
data16
fists
push
mov
rcr
or
fisubs
test
fs
jnp
leave
imul
inc
das
popf
inc
ljmp
xor
mov
pushf
lea
fdiv
xor
int
cltd
imul
test
out
cmc
int3
mov
and
and
lods
inc
and
lret
mov
rcr
mov
pop
lea
push
mov
and
incb
dec
loopne
aas
lods
adc
pusha
pusha
xchg
icebp
cwtl
mov
test
popa
pop
loopne
test
popf
test
jl
les
iret
xchg
bound
ret
inc
ret
call
push
add
mov
fidivrl
mov
loopne
inc
pusha
nop
and
sub
sbb
call
sahf
stc
mov
or
das
sub
testl
mov
or
sahf
shr
cmpsb
cs
test
adc
insb
jecxz
jne
neg
insl
mov
cmpsb
cltd
sbb
mov
xor
addr16
repz
mov
mov
mov
adc
ss
out
push
xchg
leave
fldenv
ja
xchg
adc
xor
out
push
jmp
push
push
or
cmpb
nop
movsl
xor
out
xor
imul
pop
mov
cmpb
cwtl
mov
scas
mov
sti
iret
inc
adc
test
or
cmc
mov
fdivrs
add
movl
jp
ret
lock
pop
in
clc
add
pushf
sub
clc
or
movsb
jecxz
pop
int
cwtl
mov
cmp
call
scas
je
and
lods
dec
test
adc
sub
insb
xor
movsb
pusha
pop
mov
bound
push
mov
jnp
dec
repnz
jo
xchg
xchg
or
stos
sbb
sub
ror
dec
js
popf
cltd
pop
cmp
add
jecxz
mov
and
lock
fstl
adc
add
or
hlt
lods
inc
jp
mov
ret
stos
repz
or
lods
mov
daa
scas
mov
aam
dec
sub
test
cwtl
cmpsl
bound
pop
aaa
sbb
data16
loop
mov
lahf
fsts
ljmp
lds
out
jmp
mov
fcomps
mov
test
scas
sub
lods
sbb
push
pop
jg
sub
jmp
sti
rorl
xor
push
lret
loopne
stc
std
iret
jmp
bound
mov
je
arpl
mov
out
out
dec
int3
lock
mov
xor
jmp
mov
into
daa
jo
hlt
lret
and
dec
insb
sub
mov
jge
lods
push
sbbb
mov
push
ds
outsl
outsl
idivl
inc
icebp
mov
out
xor
mov
or
stc
mov
hlt
insb
mov
ret
iret
mov
mov
int
jg
inc
inc
fsubrl
jne
jge
push
fsts
lahf
in
fwait
bound
dec
iret
inc
sub
push
enter
xchg
fadd
xorb
in
orl
mov
cwtl
mov
pop
ss
in
addr16
dec
loopne
mov
lock
adc
cwtl
xor
int
addr16
stc
scas
icebp
inc
push
sahf
pop
inc
addr16
movsl
push
and
xchg
mov
mov
cmc
push
mulb
mov
push
int3
dec
jge
mov
fadds
sbb
fmull
imul
pop
sbb
xchg
push
arpl
ds
push
jns
sbb
stc
rolb
aam
stos
mov
or
xlat
sbb
mov
sbb
mov
cmpsb
cmp
imul
or
sbb
mov
mov
push
cmpsb
mov
test
mov
sub
imul
xchg
test
int3
int
inc
sub
push
in
in
xchg
dec
dec
sub
dec
rcll
fs
push
pop
iret
mov
into
and
pop
ss
mov
nop
bound
cwtl
es
pop
xchg
pop
jbe
pusha
push
gs
xor
mov
mov
test
sbb
xchg
test
dec
int3
xchg
jg
jbe
push
sub
ss
lret
pop
and
jecxz
sbb
mov
outsb
loopne
pushf
in
push
mov
mov
icebp
mov
scas
daa
fildll
lods
mov
mov
loopne
xor
test
and
ss
pop
jae
mov
rol
loopne
push
enter
nop
pop
je
sub
movsb
jle
mov
and
adc
cld
pop
and
ret
cld
xor
pop
xchg
rcll
das
pop
cmp
divl
jg
and
scas
out
jnp
sbb
test
ds
jo
jo
data16
ja
fnstsw
xchg
loopne
loopne
mov
jmp
push
insl
fsubs
sahf
adc
sub
outsl
scas
dec
rcrl
sar
inc
imul
and
mov
sbb
jmp
mov
imul
jle
inc
mov
xor
addr16
push
pop
dec
cmc
xor
adc
das
ret
and
jnp
cmp
daa
mov
and
andl
loop
pop
in
push
int3
and
pop
sahf
andb
adc
push
mov
xor
lock
push
dec
lret
cmpsl
filds
fisubs
andb
adc
sbb
lds
sbb
lahf
jbe
bound
mov
out
or
or
popa
lret
sahf
mov
scas
xor
popf
pop
ja
sub
pop
pop
stc
lcall
or
frstor
insl
push
adc
movsl
sbb
lds
sbb
jnp
sub
dec
cmpsl
adc
lods
pop
call
mov
or
mov
push
cmp
dec
sbb
push
cmp
pop
or
test
jge
mov
cmp
xchg
sbb
stos
mov
ss
in
lret
in
addr16
pop
out
add
test
cmp
and
into
jmp
sub
stos
mov
test
ljmp
out
adc
push
rcrb
gs
sbb
xchg
fidivs
data16
movsb
pop
enter
scas
aaa
lea
aam
rcrb
push
mov
into
out
loop
lds
subb
stos
dec
cvtpi2ps
sahf
add
lret
mov
les
sbb
dec
cmp
test
aam
loopne
mov
xor
cld
push
fs
arpl
mov
push
out
out
addb
xchg
ret
sbb
sahf
jnp
xor
loopne
insb
inc
and
stos
lods
push
lods
inc
mov
push
and
call
iret
gs
fs
out
jmp
pop
stos
ds
cmp
jle
call
push
mov
pop
and
loopne
mov
xchg
push
ds
and
arpl
dec
push
adc
popf
lahf
mov
jle
outsl
mov
or
xor
mov
pop
loope
outsl
lcall
ret
dec
inc
icebp
sbb
je
arpl
scas
mov
scas
icebp
fldl2e
rcl
jle
shrl
loopne
shlb
jo
jecxz
push
xor
shlb
mov
es
in
or
popa
loopne
xsha1
cmpsb
lret
xchg
jl
scas
int
outsl
xchg
fistpll
and
jae
mov
ja
out
dec
mov
fldt
aas
fldln2
test
xchg
shrb
push
inc
push
repz
mov
dec
dec
add
movsl
mov
out
xchg
gs
mov
mov
push
jl
jno
push
repz
inc
outsb
dec
cltd
sub
aas
mov
sbb
cmc
push
mulps
pop
pusha
iret
in
jmp
adc
stos
mov
sbb
mov
inc
dec
pop
out
fmulp
bound
insl
gs
xorb
sarl
popf
bound
lods
repz
addr16
scas
sbb
and
add
int3
fwait
cmpsb
bound
aas
test
mov
shrb
test
pop
insb
jnp
clc
pushf
xchg
in
fisubrl
mov
rclb
mov
int
sub
in
enter
mov
fcomps
fisttpll
int
pushf
fdivrl
insb
cmc
loopne
int3
mov
std
sbbb
lock
mov
push
adc
cmp
insw
or
leave
push
stc
mov
mov
into
cmp
int
outsl
xchg
jp
jbe
xorb
dec
xchg
lcall
in
filds
ret
shlb
dec
subl
popf
test
mov
or
dec
sbb
dec
in
mov
pop
popf
fmuls
mov
orl
pop
iret
cltd
xchg
data16
sbb
cmp
cmp
xchg
mov
sbb
jmp
enter
pop
das
xor
xchg
cmovnp
ljmp
dec
dec
fbld
sti
into
in
sbb
pop
ret
mov
push
sub
scas
pop
fmuls
add
ss
mov
in
jp
stc
jmp
push
test
loop
aam
xor
test
imul
mov
lock
cmp
idivb
push
cltd
mov
xchg
dec
mov
test
lcall
into
shr
imul
or
dec
push
sub
pop
popa
daa
shlb
pop
sbb
mov
push
mov
movsb
test
cmpsl
pushf
pop
mov
cs
mov
mov
ja
lods
cmp
int3
cmpsl
push
in
add
push
xorl
or
out
imul
xchg
scas
cmc
lcall
pop
xor
push
sbb
stos
sti
pusha
jne
pop
int3
jo
int3
loope
out
bound
xor
shl
pop
mov
ret
pop
xchg
int3
cmp
xor
dec
mov
or
and
jg
cltd
or
jl
int
inc
pop
mov
out
mov
cmp
jnp
xlat
psubb
das
mov
mov
jae
rol
fisttps
mov
sahf
mov
sbb
test
popa
sbb
jmp
xchg
mov
mov
cmpb
sti
pusha
mov
cmp
xchg
push
xor
and
scas
stos
lahf
jnp
mov
test
pxor
and
inc
pop
xchg
mov
ss
pop
sbb
je
jns
lcall
cmc
cmpsl
fdiv
push
pop
rcr
mov
jmp
and
push
test
fs
shrl
pop
jg
sub
jbe
add
aad
mov
lcall
mov
bound
push
dec
gs
fwait
cmpsb
dec
mov
dec
repnz
stos
ljmp
cwtl
inc
bound
mov
icebp
int3
pop
and
pushf
shl
out
outsb
les
into
mov
icebp
scas
out
jae
aaa
test
sub
loop
xor
jae
outsb
jno
jno
rclb
insl
insl
mov
inc
leave
icebp
ficoml
test
outsl
ds
gs
imul
push
fsubs
int3
outsl
fisttps
xchg
lock
pop
xor
pusha
pop
pop
pop
mov
cld
inc
jnp
leave
call
mov
in
add
out
push
addr16
xchg
dec
bound
jle
jge
jmp
in
lahf
lods
mov
mov
in
std
xchg
mov
xchg
pusha
dec
pusha
cmp
lock
in
dec
int
ljmp
scas
icebp
out
jle
shrb
xchg
fucomip
mov
dec
repnz
imul
jle
inc
cmp
xor
mov
jecxz
xchg
clc
hlt
sahf
adc
aas
test
or
dec
xchg
icebp
fiadds
jl
subl
lds
daa
mov
pop
cltd
stos
cmp
inc
jae
cmp
lret
push
lret
add
arpl
je
int
push
out
insb
jno
adc
mov
jmp
xchg
add
hlt
jo
sub
push
push
jno
dec
and
dec
inc
xor
sub
and
mov
mov
loopne
sub
xchg
arpl
cmp
lods
push
mov
push
jle
aas
fs
mov
pop
cmpsl
xchg
aas
pop
or
je
xor
in
lods
int
std
loopne
pop
subl
sbb
mov
mov
xchg
jb
cltd
adc
jns
sub
sbb
push
jl
out
sbb
stc
out
scas
dec
sti
jne
jb
fldt
push
cmp
mov
lods
inc
mov
fs
mov
outsb
test
aam
in
xchg
cmp
call
shl
and
cmp
push
xor
pop
jl
pop
movsl
xchg
jae
mov
mov
in
jl
mov
je
push
inc
in
inc
dec
leave
add
pop
in
xchg
in
mov
mov
jl
mov
adc
aas
movsb
jl
test
jne
arpl
imul
sarl
sbb
mov
add
and
loopne
scas
jbe
sbb
cld
jl
ret
cli
dec
mov
pushf
add
repz
sbb
rcl
mov
sub
dec
iret
es
clc
mov
int3
sahf
lock
or
ficomps
pop
ret
lods
cmp
mov
jae
ret
lahf
fldenv
popf
push
and
and
xor
jns
add
xlat
jecxz
cltd
into
scas
test
mov
xor
mov
sbb
push
outsb
jle
mov
ret
call
push
xchg
leave
insb
xchg
sub
adc
ja
jbe
sub
rcll
aas
jmp
test
mov
sub
and
lock
mov
lret
cmp
pop
clc
inc
fs
shrl
pop
shrl
scas
mov
hlt
bound
fcoms
dec
insl
xchg
notb
pop
adc
xlat
popf
pop
lret
jne
scas
xor
inc
das
imul
add
fnstsw
ret
loopne
into
outsl
or
loopne
push
icebp
filds
mov
or
mov
into
shl
xor
scas
mov
rol
mov
adc
inc
mov
ret
sub
stc
out
mov
push
pusha
popf
aaa
mov
adc
bound
rcll
fidivrs
negb
mov
aad
stos
inc
mov
es
movsl
lods
mov
and
adc
jnp
ss
inc
scas
mov
lods
int3
ja
xor
in
jbe
mov
push
cli
push
movsb
cmp
mov
int3
lret
mov
scas
arpl
xlat
sbb
mov
loopne
jo
mov
pop
cld
fistpl
fsubrl
xor
daa
jbe
scas
iret
cmp
cmp
pusha
jbe
scas
mov
loopne
mov
pop
std
xchg
or
data16
xorb
scas
testb
bound
mov
push
push
into
add
daa
push
or
fistl
decb
mov
inc
shlb
movsl
adc
scas
pop
jge
loope
lods
call
fdivrl
mov
bound
xor
or
cmc
in
push
jnp
bound
push
loopne
stos
icebp
lcall
bound
loopne
enter
je
adc
test
sub
into
dec
fcoml
in
ja
ret
aaa
sub
mov
mov
gs
test
lret
loop
cmp
cmp
and
xchg
mov
cltd
sbb
shlb
inc
sub
jp
cmp
lret
adc
cmp
sahf
mov
ds
cltd
ror
sbb
faddl
xor
nop
fs
cmp
fildll
les
test
clc
xor
adc
nop
call
push
aas
mov
sub
jle
dec
lea
inc
mov
test
mov
adc
std
add
sbb
loopne
push
loopne
mov
push
fists
inc
fildll
or
gs
cmp
xchg
inc
xchg
inc
bound
test
mov
inc
ret
push
int3
inc
test
jno
xchg
loopne
pop
cld
jge
lcall
adcb
mov
mov
fldcw
orl
xchg
scas
xchg
loopne
dec
and
xor
dec
int3
pusha
movzbl
cmp
inc
dec
dec
mov
xor
inc
mov
or
xchg
sbb
mov
and
dec
ret
xor
sbb
jl
rorl
les
mov
xchg
mov
mov
inc
pop
imul
out
gs
bound
pop
in
sbb
shll
cltd
inc
call
in
push
mov
jl
mov
push
decl
vmovd
mov
scas
loope
int3
ds
scas
hlt
fwait
sbb
call
in
int3
pop
mov
cmp
aaa
dec
leave
mov
push
pop
in
mov
scas
xchg
pop
adc
mov
jp
mov
test
shrb
cmp
insb
shlb
dec
mov
push
test
iret
jb
outsb
xor
pop
jle
mov
sti
iret
xchg
inc
test
pop
or
mov
mov
jnp
aaa
xor
adc
test
cld
mov
std
xor
mov
mov
mov
cmp
push
add
fsub
out
sahf
repnz
into
orl
jp
int3
xlat
ret
mov
fisttpll
test
and
jecxz
ret
xchg
fnstsw
loop
popa
sbb
mov
mov
push
in
movsb
sub
jo
jp
popl
cmpsl
leave
add
dec
jg
cld
or
pop
ficomps
inc
mov
loop
rorb
ret
cmp
mov
pop
outsl
mov
jnp
dec
mov
insb
cmp
lea
xorl
lea
ret
scas
inc
push
add
cmp
in
mov
pop
xlat
imul
mov
fisttpl
cmp
aas
fwait
insb
mov
mov
push
xor
jae
ret
lock
popa
xchg
imul
fs
stc
xchg
cltd
push
add
cwtl
out
cmpb
lods
movsl
sbb
bound
add
push
jecxz
pop
dec
out
movsl
pop
adc
mov
dec
push
adc
faddp
jbe
popa
jno
fidivrs
ret
icebp
push
movsb
sub
out
cmp
test
enter
imul
sbb
das
xlat
lahf
stos
iret
loopne
dec
les
jb
xchg
or
lods
lock
leave
in
iret
in
push
addr16
xchg
jno
inc
mov
xchg
xchg
dec
xor
lods
imul
iret
lcall
int
mov
movsb
ljmp
call
into
inc
fistpll
insb
test
rol
scas
out
into
cmc
outsl
das
test
outsl
out
test
in
sti
lods
loopne
push
sahf
mov
xorb
sti
es
lock
cltd
pop
das
sbb
push
pop
fnsave
js
xor
ror
loopne
filds
pusha
test
aaa
jne
pop
dec
cli
in
pop
ljmp
stos
jge
and
ret
stos
jle
fsub
lock
xchg
push
frstor
push
pushf
dec
popa
push
int3
pop
sbb
push
and
cltd
out
jp
bound
sbbb
inc
mov
cmpsb
and
push
fwait
insl
testl
dec
lock
and
inc
jp
mov
mov
inc
sbb
aas
cmpsb
mov
shl
into
negb
icebp
pushf
loop
in
xchg
push
xlat
xlat
or
jge
ret
and
push
pushf
push
mov
jge
mov
dec
sbb
xchg
aam
sar
nop
arpl
or
jnp
leave
cmp
mov
outsl
in
bound
and
je
cmp
scas
adc
sahf
push
xchg
push
stos
pop
ja
ss
aad
add
pop
cld
insb
add
daa
insb
sarb
fidivl
cmc
iret
loop
lock
push
pop
cwtl
xor
inc
test
sbbb
add
lock
popa
adc
jae
mov
fldcw
adc
mov
lahf
shr
lret
mov
bound
inc
addr16
idivl
stc
xchg
jl
das
inc
add
mov
sti
movsb
sbb
push
movsb
xchg
jno
lock
mov
sub
test
jmp
xor
outsb
add
sarb
test
test
aam
aam
dec
scas
cltd
pop
sbb
call
arpl
sbb
out
lock
nop
xor
idivb
shl
mov
sbb
scas
stos
test
mov
in
push
into
mov
mov
sti
inc
neg
lret
sbb
lcall
ja
inc
dec
inc
lret
movsb
outsl
lods
out
loopne
mov
je
fists
outsl
lods
push
and
lret
mov
jle
and
pop
sbb
fmull
dec
aad
push
or
mov
or
push
mov
inc
cmc
sbb
xor
xor
and
fwait
push
inc
fwait
negl
shl
mov
mov
jnp
bnd
add
mov
loopne
xor
lcall
add
sbb
push
popa
cld
test
imul
dec
mov
ljmp
test
loop
mov
xchg
adc
test
out
scas
pop
ds
in
and
out
sub
fs
ja
bound
add
rcrb
fdivs
pop
ds
pop
push
in
xlat
lcall
dec
lret
pop
push
mov
pop
jno
add
scas
add
fwait
dec
dec
daa
int
pop
jle
xor
pop
xchg
insb
inc
out
xor
mov
mov
push
out
mov
shr
cmp
push
es
dec
ds
add
and
pop
into
xor
mov
add
pop
cmpsl
inc
or
mov
cmp
fcomi
sub
inc
movsb
stc
popf
mov
aam
test
and
aam
push
loopne
xor
mov
jmp
das
adc
dec
adc
lock
jae
jecxz
loope
mov
mov
sbb
mov
pop
mov
test
pop
les
test
cmp
jmp
dec
stos
out
shlb
xchg
scas
aam
push
arpl
je
in
push
daa
add
cmp
mov
or
cwtl
push
adc
xchg
jbe
orl
sahf
mov
jmp
iret
sub
shl
ja
adc
data16
and
outsb
push
loopne
mov
pop
je
sbb
les
jo
jns
test
aaa
sar
leave
pop
xchg
inc
je
iret
out
inc
sahf
add
ljmp
emms
in
sbb
pop
clc
shlb
sar
loopne
mov
dec
jnp
jg
call
mov
inc
jo
push
hlt
sub
mov
jmp
mov
icebp
mov
icebp
or
lea
aam
jo
stos
out
cmp
add
pop
or
adc
popf
test
push
inc
mov
loop
push
icebp
xor
bound
fsubl
fldl
push
testl
push
xchg
notb
inc
in
test
std
or
sbb
mov
push
xor
jo
cmp
cmpsb
mov
je
icebp
sahf
cs
mov
imul
loopne
mov
outsl
xlat
push
sbb
fdivs
stc
aam
xor
aam
inc
push
inc
xchg
cmpsl
mov
insl
and
jecxz
jecxz
mov
aam
out
inc
jmp
fsubl
and
jmp
insb
ljmp
and
out
push
mov
in
jo
lock
xor
orl
ret
aam
inc
jo
mov
xchg
xor
cwtl
mov
bound
outsb
fisttps
out
jae
push
inc
dec
insl
sarb
or
push
pop
and
mov
fucomi
jp
ja
xor
and
enter
es
and
xchg
out
mov
sub
push
sbb
or
push
push
sahf
stos
xor
je
jnp
scas
xchg
xor
scas
pop
daa
movsl
lret
jnp
xor
sub
pop
arpl
call
jo
in
lret
adcb
push
imull
dec
adc
mov
ds
jnp
dec
mov
jge
test
mov
and
mov
dec
pop
pop
or
xor
adc
inc
mov
inc
push
or
testb
mov
push
sub
adc
stos
mov
cmp
jns
repnz
ret
mov
dec
add
mov
dec
sbb
aas
lods
mov
and
inc
stos
sahf
bound
or
or
or
mov
cmp
cwtl
sbb
or
jl
into
dec
dec
mov
add
push
test
scas
dec
dec
fsubrl
pop
in
push
int
mov
mov
cmp
enter
test
adc
push
out
dec
add
push
bound
in
inc
pop
aad
xor
into
inc
dec
pop
pop
xchg
andps
stc
stos
xor
mov
jg
aaa
stc
aas
loop
push
adc
in
and
pushf
out
daa
imul
arpl
stos
add
jnp
and
mov
gs
push
pusha
repz
mov
adc
in
std
push
inc
dec
adc
bound
orps
add
scas
push
out
sub
xor
cmpb
sbb
out
loop
ds
test
inc
lret
sub
mov
subb
repnz
into
jp
xor
data16
in
mov
pop
fistps
push
leave
cmp
jb
sahf
mov
mov
jmp
sbb
xor
out
int
sub
int
fwait
pusha
xchg
push
push
adc
out
mov
mov
lds
cmp
scas
and
fcmove
dec
inc
dec
lock
dec
shlb
sti
pop
sar
out
fisttpl
insb
rclb
pushf
loopne
shlb
xor
add
scas
sbb
test
add
imul
std
jo
pop
pop
pop
jae
out
push
jge
push
in
andb
bound
stos
jecxz
xor
jnp
loop
cli
stos
jb
push
stos
mov
les
cmp
xchg
sbb
inc
sbb
imul
test
sti
mov
pusha
aam
mov
inc
mov
xor
in
add
fsubr
aad
jg
cltd
aas
mov
in
push
jl
or
fsubrl
daa
loop
add
es
sbb
stos
mov
ljmp
xchg
push
ljmp
xor
in
shrb
test
fsubs
in
mov
cmp
xor
mov
mov
cld
dec
loop
mov
imul
in
data16
push
arpl
insb
cmpb
fnsave
shll
mov
or
jg
stos
push
rclb
test
sti
pusha
mov
inc
xchg
pop
inc
sbb
dec
ljmp
dec
xchg
push
xchg
test
adc
cld
fsubr
xor
cmpsb
push
mov
lret
pop
mov
push
sub
or
and
in
lret
and
movsl
and
push
repnz
repnz
mov
fildll
or
mov
test
mov
scas
sti
cmpsl
pop
mov
in
test
ds
inc
xchg
jp
sarl
mov
loop
and
jecxz
lds
mov
loopne
jbe
gs
insl
jne
mov
or
mov
push
in
call
mov
sbb
call
xchg
cmp
xchg
sbb
sub
inc
push
and
test
nop
jecxz
mov
cli
lds
call
or
ficompl
dec
dec
out
sarb
lock
aam
outsl
lods
pop
mov
xchg
inc
mov
mov
mov
add
sub
pusha
cltd
mov
cmp
xchg
fstps
push
push
in
and
pushf
jno
ffreep
lret
and
stc
push
jmp
cld
inc
xchg
out
jb
mov
push
lock
in
out
cmp
inc
push
add
in
and
dec
sarl
dec
push
in
iret
mull
push
lods
loop
mov
mov
lcall
mov
and
loopne
sti
pop
fisttps
insb
xor
ret
jmp
and
or
inc
add
in
outsb
mov
iret
mov
mov
cs
shlb
inc
pushf
iret
and
or
jg
add
adc
fcomip
aas
in
fwait
rcrb
mov
or
cs
out
test
sbb
test
mov
jbe
sub
andps
sahf
test
dec
push
sbb
test
pop
fimuls
rcrl
sbb
cld
sub
mov
dec
mov
outsb
leave
pop
adc
push
das
adcl
stos
ss
hlt
cli
xchg
jg
pusha
clc
mov
mov
into
rorb
sub
jnp
mov
xor
mov
or
mov
outsl
in
imul
push
and
dec
mov
inc
mov
jne
loop
iret
pop
fidivrs
jae
inc
cli
inc
stc
sub
xchg
cmp
mov
scas
cmpsl
data16
les
sbb
jle
xor
test
outsl
rorl
xchg
pandn
mov
mov
dec
inc
mov
loopne
mov
sti
and
je,pt
lret
into
xchg
mov
dec
mov
sarl
mov
push
jne
pop
lods
dec
cmpsl
inc
in
test
daa
add
rcr
int
outsl
xor
and
stos
fwait
mov
repz
daa
push
iret
jecxz
int3
pop
or
pop
test
repnz
push
xchg
push
mov
ljmp
scas
pop
outsl
push
mov
inc
xchg
jo
in
xor
xor
push
fsubrl
dec
mov
in
int
add
addr16
call
push
aam
mov
dec
loop
sub
and
in
lret
xor
and
scas
dec
ffreep
cmpsb
rep
mov
ret
add
mov
cmp
mov
scas
sahf
int
out
pop
bound
mov
enter
jae
sub
imul
dec
adc
mov
mov
fwait
add
push
cmp
iret
test
cmp
popa
fneni(8087
sub
push
enter
pop
adc
dec
neg
xor
cwtl
push
bnd
popl
inc
xchg
neg
pop
mov
mov
loopne
inc
aad
add
test
outsl
leave
fiadds
btr
push
shr
pop
xchg
adc
das
mov
cld
out
shr
das
xor
xor
sbb
lods
ret
cld
shlb
mov
sub
jns
xor
pop
sbb
clc
mov
out
jns
xchg
ret
gs
scas
and
dec
mov
push
insl
scas
sub
test
rcrb
std
jo
or
iret
pusha
mov
inc
das
scas
jno
aam
outsl
cltd
lock
pop
push
stos
mov
adc
loope
bound
jne
das
ja
pop
cmpsl
cltd
cmp
stos
cs
sbb
shrl
jmp
insl
mov
sub
dec
cmp
add
fcomi
mov
nop
lods
and
push
jnp
push
sahf
mov
daa
xchg
pop
xor
and
fisttps
xchg
or
dec
outsl
adc
and
fiadds
rorb
jmp
push
out
sar
push
stos
pmaxsw
pusha
dec
push
push
loopne
rol
mov
jle
lea
mov
insb
cmpsb
stos
cmpsl
ficoms
add
mov
push
popa
inc
push
in
push
int3
out
mov
ret
push
pop
data16
inc
sti
inc
out
lret
idivb
cwtl
ret
loop
je
subb
xor
cmpsl
aas
jmp
dec
ljmp
ljmp
xlat
std
push
push
icebp
add
push
pop
jbe
mov
test
jle
addr16
repnz
in
jno
adc
ds
std
dec
fisttpl
jno
loopne
je
shlb
ret
rcl
fbld
jg
jmp
rolb
jbe
popl
int
scas
jnp
adc
adc
mov
movsl
inc
mov
add
dec
and
or
pop
xlat
lret
aas
nop
push
sbb
or
shrb
adc
lods
into
mov
in
inc
inc
pop
adc
sbb
out
shlb
loop
std
cmp
jge
push
pushf
adc
xchg
cmpsb
jae
mov
cmp
pop
push
xchg
jg
inc
pop
push
pop
shlb
aaa
or
stos
inc
mov
lcall
fsub
adc
pop
arpl
orl
test
cwtl
out
popa
out
and
sbb
xor
jl
aas
pop
sahf
push
or
aas
push
add
jae
fadds
rcrb
sub
lods
push
mov
push
jecxz
xchg
cmp
movsl
dec
enter
inc
jg
leave
pop
pop
fimull
das
out
mov
rcl
loop,pt
push
fisttpl
in
das
lret
out
add
and
jg
jo
cmpsl
jmp
push
dec
adc
add
pop
imul
mov
fidivrl
arpl
dec
mov
in
mov
add
cmc
push
xor
adc
mov
jecxz
jne,pn
xor
lahf
push
add
ljmp
add
sbb
add
fcoml
and
hlt
inc
cmp
jle
jecxz
cltd
mov
push
fbstp
lods
and
popf
xchg
andl
lods
fistpl
and
xor
dec
add
movsl
bound
dec
outsb
rcrl
fsubl
inc
sub
sbb
lods
in
cltd
in
notl
dec
mov
dec
sbbl
pop
xor
cmc
fs
jne
les
nop
mov
jge
fmull
jne
sub
subb
or
cmpsb
fdivl
out
fwait
cmp
mov
fisubrs
pop
jae
adc
pop
mov
push
imul
fcompl
cmpxchg
xor
cli
xlat
xchg
cmc
lods
bound
stc
inc
daa
ret
cltd
dec
iret
repz
orl
std
jle
ret
adc
leave
movl
pop
hlt
push
cmp
mov
and
sbb
lret
pusha
or
push
je
out
bound
mov
dec
mov
add
ss
push
and
scas
clc
pop
mov
insl
cwtl
xor
out
mov
cmp
adc
into
enter
jg
mov
fstpt
adc
mov
pop
iret
out
dec
scas
fcoml
movsb
ret
xchg
scas
jb
push
fs
push
insb
sub
inc
adc
scas
cmp
mov
cmpb
test
test
std
inc
push
jo
test
jg
stos
dec
enter
out
sti
loop
hlt
pusha
in
mov
push
js
sahf
push
out
bound
add
xchg
js
lock
into
leave
and
dec
and
push
xchg
scas
js
sub
sti
test
push
and
jbe
dec
pop
stc
ror
mov
lods
mov
jb
cmc
mov
ror
mov
outsl
mov
inc
adc
cmpl
xor
dec
sbb
movsl
push
test
dec
ret
xchg
mov
or
or
gs
push
push
adc
test
jle
add
mov
je
bound
outsb
mov
xchg
pushf
push
push
cld
jno
aas
mov
les
jl
loopne
popf
shrb
out
loopne
into
outsl
mov
jge
pusha
mov
push
scas
loopne
mov
int3
inc
insb
add
xor
xor
pop
push
aaa
and
jns
mov
icebp
aam
jl
cmpsl
fldt
pop
enter
dec
bound
jae
sub
loopne
scas
mov
mov
test
jb
sbb
xor
daa
iret
and
ret
fistpl
mov
js
mov
push
in
icebp
and
jl
sbb
cltd
jg
out
sbb
nop
in
inc
sub
jg
and
mov
and
shrb
into
test
ret
addl
lret
movsl
xorb
sub
and
xchg
inc
insl
cmp
add
ret
mov
mov
cmp
mov
pop
mov
dec
loop
lods
fnsave
popf
fucomip
sub
js
mov
cmp
sti
push
mov
les
out
cmpsb
jb
xchg
dec
addr16
xor
lock
lds
sub
push
test
cltd
mov
shl
pushf
movsb
xor
cmovp
fdivrs
push
and
dec
test
push
mov
mov
les
cmpl
pop
scas
inc
and
into
jnp
popf
imul
addl
dec
pop
jmp
xchg
fwait
movb
push
adc
cmp
fidivl
jne
push
shr
jnp
push
mov
lods
jl
cmp
sub
call
mov
dec
in
jmp
or
xchg
lret
cltd
into
test
and
mov
xchg
dec
loop
xlat
andb
out
stos
in
inc
mov
and
ljmp
mov
cmp
jmp
iret
inc
or
fwait
insb
xchg
pusha
outsl
ljmp
pop
iret
pop
aaa
push
or
out
aas
cmc
sahf
popa
pop
rcrl
mov
and
cmp
mov
int
and
fists
arpl
cmp
mov
pop
pop
and
in
sub
adcl
jle
in
idivb
mov
shlb
add
out
in
std
faddl
rolb
sbb
xchg
shll
rolb
js
jae
adc
push
je
xchg
sub
adc
cmp
and
int
out
pop
mov
cmpb
and
inc
adc
inc
incb
fs
cmp
push
scas
ljmp
push
subb
loope
mov
mov
add
out
adc
lods
lahf
mov
loopne
cmpsl
les
roll
lods
mov
negl
insl
and
lcall
mov
cmp
and
sub
pop
and
adc
xchg
xchg
jns
notl
test
and
lock
insl
imul
mov
mov
pop
cmpsb
orb
daa
sbbb
mov
gs
aas
jns
push
stc
push
or
xor
add
pop
scas
mov
scas
in
bound
mov
gs
outsl
dec
xor
push
and
jge
push
fidivl
mov
dec
sahf
push
xor
dec
jle
mov
je
adcb
mov
cmp
jmp
bound
rcl
int3
fisubrl
pop
sbb
jno
loopne
adc
fiadds
bound
addr16
cmp
out
int
insl
mov
xchg
mov
jo
jmp
popf
out
jg
cmpsb
cmp
push
pusha
outsb
das
xor
xorl
iret
popa
test
xchg
ret
and
nop
jo
in
clc
cmp
xor
outsb
enter
subl
clc
xchg
scas
out
mov
add
sub
enter
push
adc
sarb
jmp
lcall
inc
push
dec
rorb
cltd
mov
sub
iret
cmp
movsb
in
pop
pushf
dec
cmp
cmp
jecxz
push
aad
mov
sub
push
stc
dec
icebp
push
testb
pop
push
xchg
mov
push
addr16
sbb
call
adc
jne
sub
xor
push
outsb
leave
pop
cmp
lahf
pusha
scas
icebp
or
js
jnp
insb
pop
or
daa
test
andl
mov
add
aam
insl
cltd
insb
cmovbe
int3
arpl
rcr
push
pop
cmp
pusha
jecxz
mov
int
pop
pusha
add
inc
aas
jno
jg
bound
call
sbb
mov
pop
push
mov
out
cmp
arpl
loopne
add
push
mov
rcrl
sbb
xchg
in
std
sbb
into
xor
ret
mov
adc
and
xchg
mov
and
and
test
lahf
xchg
adc
push
push
jg
or
cld
mov
lods
iret
mov
shl
push
lret
fcompl
mov
scas
scas
in
dec
or
adc
cmpl
in
and
dec
lahf
sahf
in
sub
fistpll
imul
nop
insb
in
cltd
nop
rclb
xor
out
and
sti
inc
jae
pop
fstps
sub
pop
or
xchg
sbb
or
fs
xchg
and
in
and
data16
iret
repnz
out
fs
dec
lcall
xchg
jb
and
cmp
xchg
xchg
mov
or
daa
xchg
das
ja
lea
xlat
iret
and
arpl
imul
clc
imul
mov
arpl
xor
jno
mov
sahf
data16
sbb
mov
outsb
lret
push
ja
sub
fs
sub
test
test
imul
dec
xchg
inc
or
xchg
outsl
imul
adc
cmc
inc
mov
and
ss
cld
fcmovne
push
adcl
cmp
mov
cltd
fucomip
jecxz
popa
mov
loopne
xchg
sbb
and
loop
mov
add
jl
lret
push
and
and
lret
pop
dec
ret
mov
cs
cmp
in
insl
sbb
int
adc
pop
call
fyl2x
loopne
gs
cmp
adc
or
dec
loop
xor
xchg
int
scas
filds
int3
cmp
call
dec
movsb
loop
pop
lcall
cmp
and
push
adc
loope
mov
mov
xor
push
xchg
fmuls
daa
ds
xchg
mov
in
cmp
mov
adc
sub
xlat
scas
sti
std
fmul
mov
sbb
push
adc
xchg
fs
aaa
cmp
loop
sbb
out
sti
mov
mov
mov
inc
loopne
fdivrs
jle
jns
add
mov
cmp
and
adc
xor
cmp
add
xor
arpl
pop
call
in
lahf
adcb
lea
pop
push
gs
sub
sti
pop
fistpl
xor
je
xchg
outsl
std
in
jo
in
or
insb
pop
fwait
jbe
idivl
push
aad
stc
push
jmp
jg
jg
pop
loop
xchg
sbb
or
sub
pop
lods
mov
dec
jmp
inc
out
xchg
loop
mov
call
scas
dec
pop
out
movsb
push
push
imul
fs
cwtl
out
lods
ss
push
cmp
mov
clc
arpl
mov
repz
mov
mulb
ds
adc
xor
jo
sbbb
or
push
xchg
mov
bound
repnz
stos
pop
mov
adc
pop
jmp
dec
xor
sbbb
out
ds
sahf
mov
iret
ljmp
sub
fsubl
push
arpl
mov
jg
test
push
out
sbbb
mov
jmp
outsl
push
inc
imul
xchg
andl
outsb
and
push
or
jo
scas
test
cmc
cmpl
adc
pop
inc
mov
cmp
mov
jmp
sub
bound
jmp
in
loop
mov
adc
mov
sbb
jge
adc
mov
test
decb
add
push
int3
insb
lods
mov
add
push
lea
dec
pop
jb
add
int3
adc
inc
pop
daa
cmp
scas
bound
repnz
jl
lret
stc
jecxz
es
sbb
jmp
lods
addr16
out
sub
and
inc
add
xchg
enter
stos
das
repz
mov
inc
and
jns
jecxz
cmp
in
test
in
test
fdivrs
mov
and
orl
mov
push
sub
loopne
push
loope
mov
cmpsl
inc
inc
bound
ficoms
and
outsb
push
xlat
push
jl
cwtl
sbb
das
push
inc
mov
cmpsl
inc
outsb
idivl
jg
into
shl
repnz
sarl
lock
or
push
loop
add
push
xchg
lret
xor
inc
lods
pop
stc
push
lods
scas
push
cmp
adc
aaa
hlt
ficoms
jne
mov
add
inc
out
iret
mov
push
lds
xor
pushf
mov
pop
ljmp
adc
sbb
jno
mov
or
xor
lret
xor
adc
out
cwtl
mov
ds
cltd
mov
fsts
outsl
jno
rcrl
mov
ja
sub
sub
stos
int3
pop
scas
mov
mov
mov
insb
jecxz
sbb
test
cmpsl
das
fwait
push
repz
pop
sbb
ljmp
push
out
xchg
into
cmp
out
lret
or
fs
shrl
mov
xor
mov
sahf
push
lods
mov
scas
ljmp
xlat
shrb
add
jmp
mov
lcall
cmpsl
outsb
dec
bound
push
cmpsb
ret
pop
in
add
outsb
or
dec
xchg
dec
aad
les
lock
test
das
cmc
mov
test
insl
daa
jecxz
dec
out
mov
jo
mov
xchg
xor
or
sub
mov
adc
jnp
aas
cmpb
jmp
mov
test
mov
adc
insl
xchg
pop
xchg
mov
sti
push
xor
add
mov
gs
jmp
sbb
lds
jl
js
bound
jnp
scas
in
sub
fldenv
fcoms
lods
or
jo
mov
hlt
repnz
popa
cmpsl
pop
ja
cmp
lds
and
jg
mov
cltd
test
jne
pop
out
push
jg
and
xor
icebp
add
inc
mov
loopne
adc
add
sti
jle
sub
into
dec
loop
insl
xor
mov
test
push
inc
and
rorl
jne
cmp
iret
es
fcomps
int
xchg
cmpsb
sub
adc
rcll
shll
movsl
sub
mov
cmc
fistps
xchg
and
lods
faddl
jge
jle
or
pop
arpl
and
jmp
or
out
nop
test
insl
sub
iret
jle
add
dec
and
outsb
call
push
add
lfs
pop
dec
dec
and
xor
std
xchg
xor
fimull
add
stos
jg
out
jmp
xchg
xor
push
sarb
dec
add
lret
bound
pop
jbe
jge
sub
stos
stos
iret
aaa
repnz
movsl
ljmp
insl
push
test
outsl
push
imul
testl
pop
cwtl
sbb
mov
adc
dec
mov
lret
rcrl
and
iret
or
les
and
jnp
cld
mov
es
push
sub
test
loopne
jecxz
movsl
lahf
test
loopne
popa
int
mov
mov
cmp
addr16
or
shr
adc
xorl
call
pop
loopne
xchg
mov
das
scas
ret
jb
cmp
testb
ss
mov
cwtl
xor
ret
add
cmp
test
add
push
sbb
mov
negl
jmp
popa
mov
sub
ljmp
fcomip
or
ljmp
sub
mov
std
test
fstp
add
sbb
jle
cmp
shll
repnz
gs
bound
jp
out
add
mov
or
add
js
insl
fsubl
sbb
rcll
mov
sahf
in
add
in
fadds
push
cmp
leave
and
insl
pop
jns
sbb
pcmpeqw
lret
adc
pop
es
inc
sbb
cmp
int3
loope
sub
lock
dec
mov
inc
pop
mov
cltd
sbb
imul
in
mov
cmp
inc
or
lcall
and
jne,pn
mov
jge
lods
xchg
ljmp
push
push
xor
insb
test
mov
orl
daa
rorb
out
mov
push
sarb
out
mov
pop
pop
stos
push
xor
sbb
test
add
push
aam
bound
pop
pop
jge
cltd
add
ret
dec
mov
pusha
mov
data16
bound
lret
das
les
pop
mov
bound
sub
inc
stos
aaa
mov
mov
push
adc
push
cmp
lock
das
insl
inc
push
mov
cli
push
les
xor
push
popa
cmp
imul
push
push
mov
pusha
jne
cmp
add
insl
in
fdivrs
fwait
dec
mov
int3
mov
lahf
movsb
dec
or
xchg
iret
fldlg2
sub
pop
in
add
scas
mov
outsl
test
lret
push
sbb
test
lcall
mov
cmp
push
pop
lea
loopne
xor
mov
and
inc
popa
insb
cmc
push
mov
ret
xchg
mov
iret
inc
add
push
xlat
sbb
seto
add
adcl
xchg
das
cmpl
mov
int
jne
mov
cld
sbb
ss
cmpsl
push
out
movsb
pop
test
scas
and
fs
imul
pop
jbe
pushf
jmp
sbb
ja
jbe
lahf
push
ss
push
test
popf
aad
ret
addr16
and
add
xchg
or
jns
xchg
jns
mulw
in
xlat
sub
inc
sbb
aas
loopne
cmpsl
and
xor
jle
jp
jbe
jbe
xsavec
into
fincstp
mov
pop
hlt
pop
mov
lcall
rcrb
xchg
or
xchg
iret
mov
mov
cmpsb
rolb
les
cmpsl
mov
mov
sbb
and
popa
rcrb
hlt
fisttpl
iret
nop
dec
sub
imul
dec
lds
std
in
dec
repz
and
jp
mov
sbb
insb
pop
add
cmp
sbb
test
fsts
add
int3
les
aad
dec
pop
jnp
test
rcll
pop
scas
movsb
aas
ja
dec
pop
aam
mov
xor
lods
jmp
mov
lret
stos
mov
ret
or
js
add
xchg
mov
push
stos
sbb
xor
orb
pusha
rorl
xor
dec
and
add
sahf
ret
lret
jge
sbb
sahf
fwait
xor
cmp
jne
stc
mov
mov
and
js
cmp
iret
pusha
lods
cmp
or
insl
addl
xor
repz
xor
and
lds
xchg
pop
jb,pt
jge
lods
mov
cmpsl
xchg
mov
nop
lock
cmp
in
dec
loop
das
sbb
test
cld
sub
dec
xchg
pusha
out
jmp
incb
adc
sub
scas
out
mov
mov
jo
jg
out
lahf
hlt
cmc
movsl
push
pusha
cmpsl
test
xor
mov
out
jae
pop
sbb
sahf
pop
and
enter
pop
xchg
and
adc
jo
jmp
mov
or
push
sbb
jne
popf
inc
arpl
sbb
mov
pop
and
das
je
and
mov
push
fisubl
pushf
and
loop
mov
jge
add
movsl
ds
outsb
dec
cmp
fisttps
push
mov
movntq
out
pusha
pop
aas
repz
mov
and
jge
xor
adc
sbb
fisttpll
push
outsl
and
fiadds
jne
dec
lahf
mov
push
mov
stos
test
cmp
rorl
popf
bound
pop
sti
shrl
push
arpl
int3
jp
rcrb
outsb
hlt
push
aaa
ljmp
mov
dec
push
or
imul
jnp
xchg
rclb
test
popa
mov
adc
cltd
jecxz
sub
in
shll
sub
inc
ja
push
lods
iret
aas
adc
add
sbb
gs
gs
in
mov
inc
mov
mov
xchg
xor
movsl
scas
enter
mov
int3
push
or
dec
cltd
push
popa
out
mov
add
pop
sub
xchg
test
mov
iret
pusha
sub
fcompl
jo
sti
xchg
mov
stos
ja
jle
inc
push
cld
iret
and
int3
rorl
mov
cmp
lods
into
and
and
lock
inc
mov
mov
test
fwait
sbb
scas
mov
int3
aas
outsb
mov
shrb
sub
iret
xor
inc
test
sub
aad
pop
inc
lcall
mov
or
adc
aam
xchg
out
scas
imull
test
and
push
ljmp
aas
jmp
out
jo
pop
mov
or
std
insb
and
mov
push
mov
dec
mov
pop
or
pop
in
dec
mov
or
outsl
xor
xchg
mov
lcall
loopne
or
mov
cltd
aad
outsb
inc
dec
mov
out
ljmp
fwait
int3
pushf
stos
mov
sbb
scas
negl
mov
push
lock
xchg
pop
shlb
jo
mov
nop
adc
xor
clc
add
scas
or
lcall
adc
call
orb
add
inc
pop
sar
mov
or
sbb
add
out
ret
insb
fcmovnb
out
insl
mov
stc
cmp
call
mov
push
in
sub
jnp
cs
rolb
iret
dec
cmpsl
sbb
mov
dec
add
mov
mov
and
imul
je
inc
fcomps
jmp
mov
cmp
adc
lods
in
mov
sub
and
insl
fwait
mov
add
in
lret
push
testb
sub
pushf
shr
jno
fimuls
sahf
mov
xchg
xor
aam
and
bound
hlt
ja
push
adc
bound
jne
sub
orl
mov
jb
jg
sbb
sbb
xor
xchg
sahf
loopne
dec
cwtl
bound
adc
out
mov
and
out
inc
insl
mov
rcr
ds
sbb
movsl
add
xchg
pop
xchg
mov
jle
pop
mov
dec
mov
sbb
bound
mov
jle
rolb
cmp
pop
fadd
xor
adc
mov
outsb
sub
pop
mov
lcall
test
out
lahf
loopne
cmp
pusha
popf
jmp
xor
popa
rclb
and
test
test
inc
popa
bound
mov
pusha
adcb
mov
mov
ror
push
push
cmc
aam
iret
sbb
jnp
in
test
daa
stos
pop
loopne
mov
mov
leave
pop
in
cmp
out
sbb
mov
in
sbb
cld
pusha
mov
sbb
xlat
rcr
adcb
dec
push
fldcw
lcall
inc
jmp
and
call
ficoms
aaa
mov
mov
adc
fdivrs
popf
inc
jmp
cmc
cmp
ss
lock
test
push
aas
push
push
mov
decb
xchg
jge
cmpsb
cwtl
stc
adc
lea
push
gs
rcrb
sahf
dec
outsb
xchg
pushf
into
psubsb
dec
jge
fimull
pop
xchg
test
enter
jmp
push
insb
call
cmp
lods
jo
shlb
idivl
insl
jae
cmpl
push
fistpl
xor
addr16
divl
xor
enter
fwait
ljmp
push
sub
push
xor
mov
and
inc
mov
jne
fidivrs
sub
xor
or
movsb
mov
and
test
shlb
pushf
out
pop
push
fdivl
cmp
mov
stos
imul
sahf
insl
loopne
bound
shll
adc
leave
ja
dec
sahf
cmpsl
lods
ljmp
dec
cli
fnsave
push
mov
lret
aad
and
in
cli
jmp
test
or
test
int3
jg
lret
imul
test
scas
lock
bound
cmp
pushf
dec
scas
xor
dec
pop
into
ret
push
mov
aas
in
loopne
push
adc
pop
iret
cmp
test
push
fwait
bound
int3
xor
ja
ret
mov
test
xchg
mov
push
fiadds
cmp
pushf
sahf
aad
push
aaa
test
in
mov
out
in
aas
xor
inc
sbb
outsl
shlb
bound
mov
pop
rcr
out
inc
pop
mov
ret
cmpsb
dec
lods
int3
jne
pop
js
fbld
loopne
aaa
cmpsl
dec
pop
ljmp
scas
daa
inc
xor
outsl
sbb
arpl
dec
lret
sbb
imul
rclb
fistl
aas
jle
loop
mov
das
fldenv
mov
ret
push
and
mov
sahf
xor
xor
mov
sti
jge
pop
inc
out
mov
mov
mov
dec
and
insb
scas
pushf
mov
pop
mov
add
pop
mov
ljmp
shll
out
pop
fsubs
jno
lcall
xor
shlb
fmulp
jae
dec
xlat
adc
xor
in
xchg
call
cltd
dec
addb
xor
popf
pop
incb
push
mov
notb
xlat
enter
add
shlb
movsb
clc
push
cs
push
and
les
mov
ds
pop
dec
and
lods
and
fwait
inc
sub
fimull
or
pop
cmp
push
sbb
sub
ljmp
int
jns
xchg
lret
fldl
test
imul
jmp
cmp
push
popa
sub
test
pop
lahf
lds
dec
mov
or
dec
add
stc
sub
jb
test
loopne
lds
lods
test
test
mov
push
into
dec
rol
pusha
mov
fistpll
mov
mov
mov
mov
cs
int3
int
cmp
iret
mov
cmp
aam
and
or
push
mov
ficoms
dec
mov
fistps
js
pop
loope
bound
popa
push
mov
test
enter
sbb
mov
sub
add
inc
jnp
loop
bound
sbb
mov
or
cli
push
outsb
in
mov
fs
cli
out
sub
lahf
add
test
dec
adc
in
xor
push
adc
xor
shl
or
ret
ficoml
fcoml
adc
mov
xor
or
sarb
in
lcall
lret
jg
and
pop
sbb
je
rolb
fidivl
pushl
sbb
inc
sahf
fstpt
loopne
je,pt
jns
dec
rcll
aas
aam
mov
jne
insb
rclb
fs
cld
or
fs
scas
push
sti
imul
movsb
ljmp
fidivrl
ljmp
pop
pop
movsl
daa
daa
mov
ss
cmp
das
sbbl
outsb
pop
mov
pop
cmp
shrb
mov
in
stos
pusha
andb
loopne
scas
fsubrs
jecxz
shrl
xor
cltd
fdivr
loopne
iret
ds
pop
xor
inc
out
adc
dec
les
inc
push
jecxz
mov
outsb
jns
push
repnz
jns
popa
pop
inc
stos
mov
push
push
xor
mov
push
cltd
pop
mov
icebp
out
neg
fcomps
mov
nop
xor
je
xor
adc
or
outsl
jp
pop
test
and
enter
pop
mov
xor
mov
iret
pop
or
lds
mov
and
ljmp
dec
cmpb
arpl
mov
int3
and
add
mov
rcr
jecxz
xchg
mov
nop
cld
or
mov
into
jae
in
adc
cmp
sbb
dec
imul
hlt
cld
mov
lret
in
das
dec
into
jecxz
jnp
shr
pop
out
xchg
mov
imul
int3
jg
pop
leave
mov
test
cmpsb
jmp
shr
hlt
aam
add
test
sti
mov
shl
das
pop
mov
dec
aad
test
out
add
sub
call
lret
loopne
nop
nop
ss
js
or
gs
lods
lret
mov
jp
shl
pop
sbb
cmp
jne
test
call
pusha
inc
pop
dec
dec
mov
nop
gs
sub
inc
mov
orl
das
ss
mov
lahf
fs
imul
mov
push
cmp
leave
adc
cmp
push
pop
cwtl
in
out
push
xchg
sbb
bound
xlat
mov
mov
fsubrp
jmp
call
mov
data16
out
pop
int3
push
scas
jno
and
and
outsl
in
and
sub
test
adc
loope
jmp
dec
jp
loope
mov
js
add
jle
imul
or
iret
dec
xchg
inc
mov
rcll
xor
push
and
and
and
lret
outsl
mov
rclb
cld
mov
push
iret
sti
je
ret
pop
test
xlat
mov
frstor
or
bound
dec
addb
stos
cmp
push
bound
dec
jae
mov
test
mov
stc
pop
imul
pop
fsubl
pop
sub
enter
ss
add
and
cltd
out
push
push
inc
jno
in
enter
pusha
adc
pusha
fisttps
push
movsb
scas
inc
push
xchg
xchg
cmpsl
jge
jne
dec
outsb
mov
cmc
dec
push
fucomi
pop
mov
jecxz
cmpsb
mov
xorl
sti
mov
and
sahf
scas
jg
push
into
nop
test
fisttpll
mov
pop
pop
imulb
lret
sbb
insb
dec
cs
fsubr
lea
ficoms
dec
je
cmp
push
movl
adc
cli
das
push
pop
adc
shll
sbb
jne
nop
mov
push
sti
xlat
cmp
fistl
cs
inc
push
sti
mov
das
sbb
out
mov
int
ja
andb
icebp
adc
mov
pop
test
imul
cmp
lea
mov
dec
mov
sti
mov
sahf
and
call
or
push
iret
sbb
int3
out
fadds
ja
xor
push
loopne
les
xor
inc
in
cwtl
cltd
aas
inc
pop
fistpll
fcmovb
imul
cltd
inc
das
pop
jmp
sarb
fldcw
ljmp
repnz
mov
cmp
shlb
sub
xchg
jnp
clc
movsb
in
cmp
ss
adc
adc
xor
add
mov
stos
fs
popa
fwait
aaa
add
jecxz
inc
cmpsb
inc
or
push
mov
fucomi
data16
push
ds
orl
or
test
cmp
pop
sub
xchg
pushaw
bound
dec
mov
ss
jb
inc
loopne
sub
adc
xchg
xor
inc
lods
filds
sahf
mov
lcall
iret
jmp
clc
in
xchg
dec
mov
or
push
mulps
imul
int
popa
scas
loopne
lock
mov
iret
ror
push
pop
mov
push
out
inc
enter
stc
outsl
cmc
cltd
test
mov
insb
jg
cld
popa
or
mov
lea
lods
mov
lods
xchg
nop
push
aas
cld
outsl
test
push
cmp
cltd
jmp
mov
scas
add
adc
fwait
sar
ret
mov
enter
mov
push
mov
or
and
push
inc
test
dec
jmp
jg
fnstsw
add
repnz
js
outsl
jbe
enter
sbb
dec
cmp
fildll
out
frstor
pop
out
arpl
cmc
cmp
or
fistpl
cmp
shr
nop
jg
leave
and
push
mov
ljmp
or
dec
ljmp
int3
sbb
fsubrs
fnstsw
ljmp
push
mov
cmc
mov
or
xchg
jbe
mov
leave
sti
xorl
push
add
fstpt
sbb
push
aas
and
and
sbb
inc
aas
mov
test
pop
fwait
popa
test
push
mov
sub
push
sub
out
out
lcall
jecxz
sub
in
stos
std
enter
mov
xchg
inc
jg
aaa
sbb
or
insl
shlb
pop
and
push
loopne
bound
stc
fcomps
stos
in
fdivrp
mov
mov
cld
inc
icebp
xchg
lcall
iret
movsb
pop
sbb
or
ljmp
or
stos
cmp
and
mov
jmp
sbb
pop
je
lock
shlb
out
inc
sub
pop
ja
movsl
xor
test
in
imul
sbb
pushf
push
popf
and
add
stc
fsubr
dec
push
and
mov
scas
notb
push
jge
mov
test
cmpb
mov
movsb
inc
mov
pop
enter
or
dec
fisubrl
cltd
add
mov
jle
inc
out
pop
mov
les
repnz
xor
mov
or
cwtl
mov
push
sbb
testb
mov
lods
add
movl
sbb
inc
incb
stos
pop
imul
pop
xchg
into
js
aam
js
push
dec
fmuls
mov
mov
out
mov
inc
popf
in
jnp
ret
pop
je
cmc
out
dec
xor
pop
pop
cmp
xchg
lods
push
inc
popa
test
jbe
pop
push
sbbl
adc
cmpl
cltd
jno
je
es
cwtl
cmpsb
aas
ret
shrl
mov
xor
inc
xor
mul
inc
jle
inc
notl
stos
ret
dec
xchg
cmc
out
mov
dec
scas
outsb
fmull
loop
std
dec
cmp
iret
gs
jle
testb
sarb
pushf
jl
cwtl
mov
test
shlb
enter
sub
subl
out
pop
push
bound
push
in
leave
mov
lret
aam
lock
fists
mov
js
push
add
pusha
lods
cmpsl
out
push
jns
mov
lods
das
push
cmp
loopne
xlat
xor
push
cmpsb
push
test
shrb
sub
cmp
jg
test
push
daa
nop
cs
add
cwtl
ljmp
test
fisubs
add
pop
cld
cwtl
in
in
out
add
and
in
lret
mov
xor
mov
mov
cmp
test
cmc
add
dec
in
sub
sti
inc
and
sbb
je
mov
imul
inc
pop
in
les
jmp
les
nop
xor
nop
mov
fldt
jne
mov
fst
sbb
sub
orb
dec
adc
out
cli
ss
push
cmp
push
test
test
jg
outsb
in
push
mov
scas
dec
mov
or
cld
adc
shrl
sbb
pop
jne
pop
stos
mov
scas
test
sub
or
repnz
mov
dec
sbb
cmp
pushl
outsl
int
pop
mov
push
xor
lock
cmp
int
adcl
sahf
lock
clc
mov
out
push
push
ret
pusha
pop
cmp
jmp
cmpsb
jns
adc
out
in
imul
fcmovb
iret
shl
or
movsb
bound
shlb
out
pusha
fwait
lahf
sub
bound
jae
adc
xorl
fisubrs
sub
fdivrl
scas
sahf
lock
jo
fistl
mov
or
jp
bound
and
or
mov
jmp
shrl
mov
popa
mov
int3
lahf
and
fwait
rorb
sub
xchg
ret
jmp
adc
xor
cmc
adc
xchg
int
dec
dec
xchg
inc
mov
jnp
push
xchg
popf
shrl
fcmovb
loop
iret
test
je
dec
sahf
mov
aad
pop
fsubrp
adc
hlt
push
mov
xor
cmp
jge
mov
or
inc
fistpll
push
arpl
bound
mov
sbb
adc
popa
gs
jns
pop
lods
xor
notl
out
shrb
in
outsb
and
pop
or
fcompl
inc
int3
mov
loopne
jp
jno
inc
or
scas
std
outsb
mov
sbb
iret
pop
and
repz
iret
pop
pop
fmul
mov
jle
mov
gs
lock
stos
cmp
and
and
push
mov
xor
push
pusha
imul
insl
pop
rolb
arpl
fiaddl
xchg
ljmp
pop
mov
push
mov
scas
call
ret
xor
dec
sub
jle
mov
rcll
jns
int
out
mov
shll
and
cwtl
shlb
out
inc
or
adc
sbb
dec
sbb
out
fs
jg
test
stc
dec
aaa
ficomps
notl
sahf
or
ja
push
ret
sub
lods
adc
mov
sbb
lcall
jnp
pop
or
bound
mov
xlat
lret
ret
out
inc
xchg
xchg
mov
loope,pn
mov
mov
or
daa
pop
mov
sahf
dec
imulb
inc
incl
arpl
loop
lea
xchg
inc
pop
pusha
xchg
movsb
dec
stos
outsl
lods
out
mov
and
xchg
jnp
orb
cmp
jg
or
fnstcw
or
inc
jae
cmp
out
mov
outsb
push
mov
and
cmp
mov
mov
mov
aaa
xor
sbb
sahf
ficomps
cmp
lock
popa
jg
inc
pop
sbbb
add
shll
repnz
cmp
lcall
and
in
dec
xorb
rorl
adc
insl
add
push
cltd
mov
dec
stc
shl
mov
jl
pop
ja
hlt
lea
jmp
shlb
push
pop
mov
outsb
adc
cwtl
mov
les
mov
inc
gs
and
rorb
outsb
dec
cltd
and
mov
dec
xor
call
addl
loopne
inc
xor
lock
cmpl
or
pop
jae
add
fistps
cmp
aam
rclb
rcr
cs
insb
push
push
jne
mov
sti
xchg
movsb
ja
cmp
lret
mov
fs
iret
iret
lock
divb
std
test
scas
test
add
into
mov
jle
inc
xchg
fdivp
xlat
jo
push
loop
xchg
or
mov
pusha
xchg
mov
not
test
nop
data16
inc
scas
pop
cmp
lret
push
das
pop
mov
pop
pop
movsb
pop
lods
insb
int3
inc
in
and
xchg
cmp
push
call
mov
and
xchg
mov
cmpsl
rcrb
xor
adc
mov
mov
pop
inc
cmp
movsl
inc
push
mov
lret
and
sub
jecxz
in
mov
jo
rorb
xchg
popa
push
or
jle
xor
out
pop
cwtl
or
addr16
mov
pop
rcrb
dec
popa
mul
mov
out
add
test
push
and
movsb
inc
fwait
pusha
enter
sti
push
sub
cwtl
or
inc
xchg
dec
insb
call
and
icebp
cmpsb
outsl
or
xchg
push
loope
arpl
pop
pop
xchg
loop
fwait
mov
das
lahf
fisttps
mov
js
push
std
xorb
sbb
repz
fbld
cmp
lods
insb
push
cmpsl
cwtl
sti
or
lret
jnp
out
stc
xor
mov
cmp
sbb
sti
lret
sub
pusha
test
fcmovnbe
cs
loop
sti
into
inc
lahf
push
test
sbb
testl
nop
jno
pop
iret
iret
dec
dec
xorb
out
insb
icebp
hlt
ret
movsb
dec
ficoml
out
arpl
test
btr
aas
bound
jecxz
push
sub
dec
adc
fnsave
dec
shrb
lock
mov
outsb
lock
scas
das
pop
iret
shr
andb
bound
sub
push
sahf
call
push
iret
fisubrs
fsubl
cld
push
push
cmpsb
mov
bound
repz
lock
sbb
iret
loope
dec
imul
js
dec
sub
outsl
add
icebp
pop
mov
int3
inc
inc
cmp
adc
adc
into
mov
imul
jo
mov
imul
cli
pop
add
iret
pop
pop
stos
inc
aaa
mov
in
mov
add
jo
push
pop
stos
outsb
inc
mov
stos
sbb
add
les
pop
pusha
scas
inc
push
popa
test
gs
mov
iret
aaa
mov
mov
mov
and
out
cmp
pop
pop
cwtl
stos
shrb
jb
out
xor
inc
dec
or
cmp
mov
into
cmp
xchg
sub
int3
ja
cmpsl
out
rcrl
xchg
and
inc
xchg
xor
stos
out
imul
aam
je
mov
clc
outsb
cmpsb
imul
pop
lds
and
les
int
pop
and
aas
in
pop
pop
sti
fists
sbb
pusha
xchg
and
jne
mov
dec
jnp
out
sti
push
bound
movsl
push
xchg
popa
aas
push
lret
adc
add
mov
scas
cmp
int
push
and
pop
sbb
aam
mov
xchg
mov
fistpl
lcall
stos
jl
stos
jae
mov
pop
sub
ror
push
arpl
les
sbb
fucom
ljmp
inc
push
fisubrs
les
xchg
test
test
mov
cmp
jnp
insl
in
lods
xor
xor
cltd
mov
sahf
lock
mov
jnp
bound
jl
popf
mov
ficoml
push
pop
call
inc
lcall
mov
dec
mov
addr16
in
pushf
lret
or
out
jae
sub
out
xchg
cmpxchg
sbb
mov
or
iret
movhlps
dec
inc
pop
xchg
jnp
add
lahf
ja
xor
lds
mov
lods
pop
xlat
js
pushl
mov
aaa
lret
notl
aaa
in
push
adc
xchg
jae
fwait
sbb
cmovbe
xchg
les
dec
sub
sub
sub
int3
sub
lahf
fstpt
mov
inc
insb
imul
enter
test
add
cs
cmp
fnstcw
mov
imul
repnz
cmp
inc
out
mov
ror
insl
dec
sub
cmc
push
jo
int3
mov
test
pop
arpl
cmp
bound
or
mov
cmc
scas
lret
xor
dec
and
mov
rorl
lock
test
loope
imul
test
push
xchg
sbb
xor
stos
push
inc
shl
inc
sbb
arpl
pushf
xchg
xor
std
mov
inc
adc
add
nop
xchg
sbb
pusha
mov
or
xor
loop
test
xor
repz
negb
push
fwait
mov
stos
mov
cs
int3
jge
push
push
mov
mov
push
dec
popa
cmpsl
stc
lds
inc
xchg
sbb
mov
movsb
call
out
mov
mov
frstpm(287
jmp
repnz
inc
add
iret
push
jecxz
pop
in
dec
loop
negl
xchg
paddsw
dec
mov
inc
push
aad
cli
insl
lods
int3
pop
push
lahf
push
pop
loopne
testl
pop
in
das
lea
lods
adc
mov
dec
inc
sahf
sub
outsl
mov
es
in
in
adc
mov
cltd
xlat
sub
push
rorb
mov
jno
icebp
aas
xchg
push
push
mov
ret
stc
repnz
push
int3
leave
inc
and
adc
pop
add
lret
test
jmp
push
and
std
ret
aas
inc
push
gs
cmpsl
int3
arpl
push
repz
jb
movsl
push
imul
out
dec
fisubs
int3
rclb
add
pushaw
mov
imul
int3
and
addb
add
sbb
jle
sub
xchg
insb
lahf
push
movsb
xchg
leave
shlb
call
lds
insl
push
cltd
inc
out
rol
bound
fs
ret
rcr
andb
clc
and
es
stos
out
dec
clc
hlt
push
lea
loopne
adc
mov
mov
pop
sarl
add
fsubrl
push
mov
out
jg
xlat
dec
sarb
cli
or
iret
push
push
inc
cld
lahf
mov
jbe
ds
mov
mov
pop
xchg
clc
sbb
add
insb
xchg
adc
pusha
enter
daa
dec
call
iret
mov
mov
lods
loopne
add
push
xor
js
add
in
sbb
or
out
stos
mov
adc
fdivl
fadds
aam
in
sbb
cmp
fcompl
mov
sbb
int3
mov
jo
push
nop
lock
mov
imul
xchg
jmp
or
mov
out
xor
fs
xor
push
sbb
add
cmpsl
adc
sub
fildll
jne
call
in
push
cmpsb
ss
imul
addr16
stos
ljmp
cmp
mov
mov
scas
mov
xlat
repnz
shlb
or
mov
and
lahf
test
push
sub
nop
pop
inc
icebp
iret
scas
movsb
aas
jmp
shrl
test
sub
sub
in
mov
retw
xor
jae
in
out
xchg
add
pop
sahf
enter
sub
insb
xor
stc
mov
hlt
add
nop
jno
test
add
or
out
mov
subb
dec
push
loopne
enter
loopne,pn
mov
insb
in
push
ret
out
outsl
and
lea
mov
cmp
pusha
and
and
loopne
xor
lods
pop
popl
pop
jle
xchg
rolb
ret
je
cltd
int3
mov
sub
imull
or
sbb
enter
subl
jp
inc
test
cli
lret
call
jbe
jae
add
mov
mov
cmpsl
call
push
iret
add
xchg
jo
les
mov
cmpsb
mov
mov
xlat
cli
shr
orb
fdivr
ret
inc
loopne
aaa
fidivrs
xchg
icebp
lods
je
xor
push
stc
push
aad
dec
into
pop
shrl
scas
lods
mov
repz
addr16
out
rclb
fs
add
repz
pop
mov
cmp
insb
aas
inc
cli
xchg
orl
adcl
lods
add
sbb
orb
repz
sbb
popa
pop
mov
lock
ljmp
inc
mov
arpl
xchg
push
loop
enter
or
out
cmp
loope
ds
and
dec
rolb
and
dec
xor
inc
lcall
pop
cld
fistpll
lods
jo
aas
xor
fs
js
lcall
dec
mov
std
dec
mov
xchg
xchg
dec
testl
mov
test
iret
jnp
loope
pop
fisttpl
mov
int3
rorb
das
adc
clc
pop
rorb
aaa
and
shrl
add
imul
imul
pop
hlt
push
fdivs
ret
inc
jg
das
aaa
mov
cltd
iret
les
lret
gs
icebp
mov
sahf
fistpll
pop
xor
cwtl
or
jae
sbb
cmpsl
movsl
lret
lret
clc
pop
mov
xlat
int
xchg
sti
lcall
dec
push
inc
int3
sbb
je
stos
cltd
pop
sub
sub
sar
jnp
in
sti
enter
jle
sub
xor
or
and
in
shlb
sub
mov
pop
arpl
and
popa
pop
leave
repz
es
add
push
xor
xchg
nop
out
outsb
scas
aaa
inc
inc
mov
sti
inc
shl
add
sub
sbb
sbb
ja
jb
movsl
pop
mov
adc
sub
pop
xor
jle
lret
in
sbb
jg
jle
adc
push
subb
sahf
xor
sbb
pushf
fimull
sahf
sub
and
clc
iret
mul
push
mov
out
loopne
movsb
pop
push
test
add
loopne
jne
aad
dec
add
mov
lock
pop
mov
js
mov
aas
clc
xor
push
fidivrs
aas
push
and
push
pop
mov
les
dec
lcall
mov
jl
inc
mov
push
mov
push
sarl
and
push
jg
pop
das
inc
pop
bound
ljmp
sbb
add
int
mov
pop
jecxz
jecxz
xor
gs
bts
jecxz
adc
pop
aas
pop
xchg
mov
sarb
call
rcll
nop
shufps
pushf
mov
push
xor
inc
mov
icebp
out
cmp
cmc
and
lcall
in
pop
mov
pop
push
in
adc
push
ljmp
mov
jne
test
lds
or
testb
ds
pop
xchg
mov
push
shlb
inc
jae
inc
jg
hlt
orb
dec
repnz
into
out
and
sahf
rcl
push
in
into
mov
mov
cltd
mov
lahf
loopne
stos
lret
loopne
test
dec
test
adc
and
mov
mov
movsl
bound
jno
in
stos
lret
pushl
es
ss
lock
mov
xchg
shrb
ds
cld
ret
cmp
jl
cmpsb
jno
movsb
imul
sahf
push
ss
into
lock
or
inc
push
and
rorb
pusha
adc
daa
shr
lret
fwait
push
jge
pop
cltd
lea
fstps
orl
shll
fnstcw
mov
cmp
pushf
outsl
or
sbb
loopne
inc
xchg
pop
mov
shrl
jne
jg
sbb
aam
shrb
sbb
push
mov
add
in
mov
and
push
push
decb
pop
call
stos
fsubrl
fcmovnu
pop
fnstsw
sub
and
adc
scas
icebp
clc
xlat
icebp
imul
loop
push
inc
xchg
or
rolb
test
scas
mov
sti
sbb
jbe
ja
out
xor
cwtl
add
or
mov
and
rolb
jae
les
xchg
nop
outsb
les
out
cmpsb
cmc
movsb
ljmp
not
incb
xrelease
mov
mov
frstor
leave
inc
shr
int
and
mov
lods
dec
repnz
jg
imul
mov
add
sarl
sbb
mov
scas
mov
and
pop
loopne
test
iret
sub
inc
sbb
fidivrs
fsubs
mov
sbb
xor
mov
shrb
fsubr
scas
mov
cltd
ds
sbb
stos
cmp
ljmp
push
add
insb
and
sbb
movsb
push
pop
push
pushf
jns
popa
xchg
sahf
push
notb
inc
in
jns
mov
and
xor
bound
xor
bound
mov
or
es
movsl
mov
xchg
scas
test
cmp
inc
jmp
mov
mov
dec
add
inc
xchg
fists
adc
push
mov
add
mov
outsl
icebp
int3
fcomps
pop
gs
out
or
popa
adc
xor
cltd
iret
cmp
clc
cli
stos
sahf
pop
fwait
pusha
xchg
cmp
outsl
loopne
xor
adc
fucom
out
shlb
outsb
mov
xchg
aas
mov
negb
dec
sahf
or
mov
ss
cmp
adc
bound
adc
and
or
and
dec
pop
sbb
xchg
inc
or
and
scas
dec
shrl
outsb
jmp
stc
mov
cmpsb
sahf
and
enter
ds
pop
lock
and
data16
mov
test
jmp
add
cwtl
mov
sbb
mov
cld
add
inc
mov
push
xor
xorl
stos
rorb
out
popf
and
cmp
xor
inc
sbb
cmc
outsb
push
add
bound
iret
cwtl
fnstsw
loop
lock
mov
pop
bound
mov
and
or
xchg
adc
sahf
pop
add
sbb
dec
push
sbb
fs
lret
push
mov
sbb
fldenv
fs
addr16
mov
xchg
inc
lahf
and
divl
push
roll
pop
xchg
pop
enter
fstpt
sub
xchg
cltd
lcall
aaa
push
pop
xor
les
bound
test
jge
inc
mov
jno
mov
jb
sub
repnz
cmp
add
les
insb
mov
fs
add
aas
cmc
js
pop
cmp
ljmp
loope
lods
mov
ja
xor
add
pop
shll
adc
movsb
mov
xor
mov
sarb
out
jbe
dec
inc
jmp
fdivp
popf
outsl
cs
cmp
bound
or
pusha
push
out
cmpsb
mov
xor
cmpsb
cld
mov
pusha
outsb
mov
or
and
adc
sahf
dec
jnp
cmp
jnp
xorl
and
push
jle
push
fsubl
loopne
in
push
sahf
outsb
xchg
cltd
xor
xorb
aas
loopne
lods
cmpsl
pusha
sbb
xor
out
dec
pop
push
push
fdivrl
gs
loop
xchg
cmp
mov
ss
mov
dec
dec
lret
pop
icebp
call
pop
les
andl
pushf
add
add
ja
jmp
test
jp
cmpsb
jno
aam
lods
add
pop
jns
push
test
adc
imul
test
cmp
xchg
sti
sbb
or
loopne
aad
sub
inc
lea
push
fucomp
and
xchg
cmpsb
mov
xchg
push
fdivs
vpaddd
and
mov
cmpsl
jbe
xor
mov
dec
push
xor
aas
repnz
call
pusha
dec
add
pop
cld
mov
mov
push
in
cltd
cmp
pop
jecxz
mov
pop
cmp
mov
test
sahf
cltd
fsubl
rolb
cs
sub
push
popa
sub
outsl
dec
stc
pusha
lock
in
bound
sbb
fnstsw
pushf
mov
mov
mov
xor
pop
mov
jmp
lock
test
sub
sarb
mov
mov
jecxz
jmp
xchg
dec
shl
outsb
scas
or
cli
ds
mov
lods
in
sti
rcr
mov
std
jl
xor
cltd
xchg
lret
mov
push
out
sbb
xchg
js
push
push
orb
aas
and
out
icebp
repz
popa
push
xchg
push
xor
cmp
add
or
and
outsl
bound
xchg
clc
pusha
pushf
testl
test
scas
push
fs
sub
ret
movsl
imul
data16
push
or
mov
sub
popf
push
popa
aam
push
ror
jns
adcl
adc
dec
push
push
test
enter
sub
push
call
mov
lret
inc
test
mov
push
movsb
add
in
push
dec
xor
stos
outsl
adc
xor
inc
fs
loop
fcomps
fcoms
sbb
mov
mov
fstl
out
xor
add
lods
lret
adc
divl
fistpll
shll
jl
lods
xlat
push
iret
scas
push
movsl
add
test
xchg
dec
mov
jecxz
jg
xchg
mov
jo
mov
adc
fbstp
in
scas
or
mov
ficoml
mov
aad
jbe
push
adc
dec
push
mov
mov
jp
jne
les
push
cmp
push
jae
ror
mov
pop
je
sahf
sbb
mov
sub
cmp
mov
xor
push
into
rcl
test
jecxz
lret
mov
lea
lret
fadds
and
xor
mov
enter
cmp
popf
int3
in
in
pop
outsl
push
ds
push
xchg
idivb
adc
shlb
lret
jmp
enter
pop
aas
in
bound
nop
cs
loopne
arpl
pop
popf
call
push
dec
xlat
out
and
xor
and
jo
jecxz
cs
cltd
jnp
mov
cmc
cli
cld
xchg
mov
dec
mov
in
enter
push
sbb
mov
icebp
lret
int3
inc
or
or
data16
or
outsb
les
cs
push
xchg
stc
and
je
mov
add
pop
pusha
popa
cmc
iret
fs
or
push
es
pop
int3
pop
push
imul
cmp
adc
insl
pop
and
inc
sbb
inc
xor
lret
sbb
mov
push
dec
mov
jle
test
lea
cltd
in
movsb
xchg
push
int
jae
stos
sub
enter
lock
mov
push
sbb
mov
jp
or
outsb
cmp
add
sbb
mov
mov
pop
jns
pop
fisubrl
mov
sbb
imul
pop
out
mov
aam
lret
push
ret
stos
xor
sub
sbb
test
sbb
xchg
or
cmp
push
in
call
ja
or
rcl
add
mov
push
push
mov
fdivrl
cmp
lock
gs
sbb
add
scas
bound
push
bt
in
add
cltd
enter
adc
mov
bound
push
ret
dec
add
pop
sti
mov
push
out
mov
sbb
lret
jp
outsl
mov
test
inc
fs
out
jnp
mov
cwtl
push
push
jmp
popa
jmp
or
cmc
dec
lahf
sub
out
jae
ja
and
shrb
mov
pop
adc
es
push
lock
out
xchg
and
adc
outsb
mov
cld
or
jbe
je
pop
push
pop
outsl
or
lahf
lret
ss
mov
push
in
lret
test
aas
add
fs
cltd
iret
cmp
mov
pushf
iret
aaa
add
mov
fistl
out
leave
adc
mov
add
divl
pop
add
xchg
outsl
push
gs
cmpsl
dec
mov
mov
inc
xchg
push
shlb
into
out
dec
inc
cmpsl
das
movsb
and
and
rcl
xchg
test
loopne
cmp
xlat
cmp
ficoms
add
mov
lods
inc
fisubrs
movsb
fwait
push
enter
call
sub
movsb
xchg
inc
push
jle
aam
bound
sbb
stos
inc
mov
stc
inc
out
fs
xor
andl
mov
inc
pop
dec
pop
std
jg
gs
xor
sbb
dec
push
xor
xor
psubsw
dec
adc
inc
cld
testb
imul
inc
pop
jge
dec
xor
bound
pop
xchg
pusha
sti
leave
aam
fisubrs
imul
call
push
xchg
xor
mov
or
lods
xor
out
jo
push
xchg
in
ja
frstor
push
push
scas
bound
jne
or
loope
and
clc
sub
xor
lret
jnp
xchg
aam
cltd
cmp
xchg
ss
dec
popf
ljmp
xchg
cmp
shll
jle
dec
inc
adc
mov
pop
int
mov
xor
pminub
aas
ret
dec
adc
dec
xor
in
pusha
sbb
sub
push
push
and
jo
subb
jne
loopne
jne
ljmp
ljmp
insl
fidivrl
popf
inc
movsl
into
fimuls
sbb
jnp
mov
je
insb
jbe
stos
mov
repz
add
arpl
push
jnp
pop
sbbb
in
cltd
jo
jecxz
hlt
stc
pop
push
je
sub
pop
cld
dec
jno
mov
lods
sbb
mov
aas
sbb
out
mov
in
int
inc
xor
adc
pushf
in
cmp
out
mov
pop
xor
xlat
dec
jns
push
test
mov
sbb
inc
rcrb
test
push
add
lods
daa
bound
add
and
jmp
lods
xor
bound
cltd
stc
cwtl
pop
dec
fbstp
cmp
cmp
outsl
out
pop
and
mov
mov
mov
pop
roll
mov
push
fwait
xlat
sarb
and
daa
or
push
lods
sub
jb
lea
call
loop
sar
or
xor
jecxz
sbb
or
mov
rcr
das
das
add
xor
out
sub
cltd
in
outsl
xchg
ja
inc
jno
xchg
dec
inc
mov
and
movsb
loop
les
mov
andl
add
cmpsl
fstpt
dec
shl
scas
mov
bound
cmc
sub
mov
xchg
aam
cmp
cli
aas
out
mov
lret
daa
in
mov
lods
jmp
cs
mov
bound
shll
jne
mov
das
outsb
sub
jmp
push
imulb
or
call
mov
xchg
mov
loopne
push
mov
and
enter
int3
cmp
movsl
in
into
inc
insb
rcrb
test
mov
pop
std
iret
sbb
leave
xor
or
add
mov
insl
lea
xchg
arpl
insb
das
adc
or
push
out
sti
lods
test
das
pusha
ds
lcall
cmpsb
adc
xlat
sbb
outsl
inc
mov
adcb
push
mov
mov
lcall
push
mov
into
arpl
popa
addl
mov
xor
jnp
stos
dec
mov
arpl
add
bound
call
cmc
and
push
cwtl
dec
sbb
cmp
popaw
lds
scas
bound
mov
push
xchg
movsb
in
mov
cwtl
je
dec
inc
loope
sbb
orl
decl
stos
addb
and
add
dec
rcrb
popf
xor
shl
dec
xor
scas
stos
ror
push
sarb
mov
cmpsb
cmp
fwait
dec
loopne
adc
pop
sub
lods
aaa
mov
cs
movsb
or
cmp
in
cwtl
ja
sub
jle
sbb
mov
mov
scas
mov
mov
insl
mov
mov
jmp
cmc
jmp
sbb
sub
fs
jmp
push
xchg
mov
xchg
xchg
das
jle
stos
mov
ljmp
xchg
cmpsl
data16
and
mov
pushf
pop
dec
xchg
cmpsl
loopne
aam
les
into
add
adc
xchg
jno
lcall
dec
int3
and
jno
in
xor
outsl
test
test
addr16
adc
out
ja
lea
dec
and
scas
cmp
cwtl
lods
mov
fdivrl
int
pusha
stos
orl
ja
iret
pusha
imul
jle
sub
pop
inc
sti
fucomi
int3
push
fwait
push
xor
xchg
jl
mov
cmp
push
pop
stos
jg
lods
mov
push
add
sbb
psubusw
mov
sub
jle
stos
loopne
lcall
mov
mov
add
pushf
xlat
adc
ds
xchg
cmpsb
adc
fildl
mov
call
insb
lahf
adc
dec
out
insl
push
scas
push
fisttps
sub
into
cltd
pop
dec
out
or
xlat
les
and
scas
loopne
mov
mov
test
loop
mov
je
inc
and
outsb
fxch
xchg
ljmp
int
insw
loop
cmp
cmpsb
andb
push
imul
xchg
mov
mov
add
dec
cmpsb
cmp
jmp
insb
adc
fistl
out
xor
je
sarl
jl
pop
das
pop
sub
gs
cmp
lds
mov
shlb
popf
gs
cmpsb
ret
xor
sub
loopne
push
push
sarl
cmp
adcl
jle
push
inc
insb
in
pop
pusha
pop
sbb
int
scas
std
rcrb
inc
in
jmp
test
lahf
xlat
push
jno
nop
inc
add
push
push
mov
push
dec
insl
int3
cmc
or
push
push
dec
aaa
repz
es
lock
mov
jbe
xchg
sbb
dec
cmpsl
les
pushf
pop
pushf
ficomps
shrl
pushf
cld
ficoml
push
jmp
push
lods
jle
int3
shll
push
add
nop
mov
mov
inc
imul
dec
int
add
cld
js
ret
mov
mov
cld
jge
push
sub
fs
jnp
xchg
scas
and
scas
es
push
loop
xor
fildll
scas
fdivs
enter
push
mov
mov
fwait
mov
ret
out
sub
lods
hlt
mov
iret
fwait
cmpsl
sbb
les
xchg
push
push
gs
cmp
out
lock
mov
jl
cwtl
fildll
sbb
push
mov
pop
inc
dec
es
add
insl
jo
add
inc
in
mov
iret
add
and
ret
sbb
int
and
outsb
clc
fists
loopne
cs
pusha
fisttpl
shrl
cmp
pusha
outsb
pushf
and
out
scas
mov
outsl
pop
lret
mov
push
jns
jmp
repz
pop
outsb
fisubs
cli
out
mov
push
mov
jmp
inc
andb
movntps
adc
push
jo
xchg
cmp
cmp
ljmp
pop
inc
hlt
or
pusha
and
out
fs
stos
and
loop
dec
jae
pop
mulb
sbb
in
dec
sarb
ficoms
lods
or
and
mov
insl
loopne
mov
fbld
cmp
sub
scas
addr16
push
push
inc
out
fldl
add
fisubrs
adc
xlat
mov
lret
into
xchg
cld
adc
cs
pop
cmp
lock
sti
lret
sahf
push
lea
or
xchg
iret
mov
push
sub
sbb
ficomps
repz
into
adc
jns
push
fisubl
imul
or
sbb
adc
push
ret
xlat
gs
push
push
adc
cmc
fucom
mov
lret
shll
pop
or
sub
rolb
push
lds
jecxz
or
and
or
loop
imul
xorl
mov
loopne
fstpl
lods
es
cwtl
ret
cmp
jg
adc
cmc
fsubr
push
out
cmpsl
int3
xor
ljmp
add
mov
sti
test
and
mov
xor
in
bound
cmc
mov
scas
pushf
in
loop
or
std
icebp
int
sbb
lcall
int3
add
sti
push
or
mov
pusha
rolb
xchg
in
jp
fbstp
fcoms
sbbb
dec
sub
and
in
xor
iret
add
sti
sarl
call
or
fsubrl
dec
dec
fs
xchg
fmul
je
adc
push
fldt
sub
push
popa
lock
mov
repnz
test
mov
add
push
dec
daa
aam
sub
frstor
daa
mov
out
or
fisttps
pusha
adc
mov
push
stos
pop
cmp
repnz
pop
add
adc
cmp
mov
pusha
lock
push
mov
xchg
pushf
aas
mov
aam
mov
das
movsb
inc
mov
pop
xor
fsubr
or
pop
sbb
add
mov
fsubrl
scas
sub
lods
test
inc
pop
cli
pop
xor
outsb
pusha
out
sub
cltd
mov
mov
jg
push
xor
movsl
sbb
mov
loope
aam
repnz
push
mov
mov
mov
cmp
or
sub
fcmovne
sbb
rcll
in
or
out
pusha
bound
xor
sbb
ret
pop
push
inc
dec
scas
xchg
fsubrs
mov
mov
lcall
icebp
push
xchg
packuswb
and
mov
sbb
pop
jl
push
and
into
arpl
fs
ret
stos
mov
mov
mov
cltd
add
sbb
mov
lds
sahf
leavew
lods
xor
fldcw
inc
pusha
xor
in
jp
repz
sbbb
ss
sbb
stc
scas
fldl
fdivrl
adc
mov
push
insb
pop
fistpll
aaa
push
mov
movsl
into
dec
repz
clc
push
and
xchg
rcrb
scas
vcvtps2dq
into
cmp
sbb
scas
xor
dec
scas
inc
mov
mov
dec
add
out
mov
sub
push
sbbb
push
pop
jle
inc
loop
mov
icebp
mov
ljmp
imul
aam
int3
inc
pushf
aaa
inc
adc
fwait
cmp
push
mov
cs
dec
xor
xor
movsb
jne
fcompl
jle
and
xor
cmc
filds
and
mov
outsl
sbb
insl
ljmp
jb
jle
sub
mov
scas
mull
sbb
adc
dec
cltd
inc
jnp
mov
stos
xchg
das
cmc
push
sub
or
pop
add
pop
jg
mov
fidivrs
mov
icebp
addr16
sbb
pop
jns
sahf
adc
jns
push
adc
push
and
push
bound
push
scas
fs
dec
push
pop
out
inc
dec
lcall
cmp
jge
out
outsb
movsb
jecxz
fisubrl
jnp
ds
cwtl
lods
out
data16
data16
stos
scas
push
jnp
cmp
dec
movd
fwait
dec
outsl
cltd
dec
xor
loopne
push
xchg
xchg
xor
sbb
ljmp
cltd
dec
cmpsl
sub
push
loop
call
dec
data16
movsb
adc
xor
nop
push
xchg
inc
mov
enter
or
xor
mov
shl
lea
push
mov
push
mov
xchg
imul
add
mov
in
adc
jnp
aas
and
sahf
lock
lahf
xor
mov
cmpb
push
les
in
lret
ret
jle
enter
sahf
daa
rclb
pop
sbb
or
movsl
enter
cmp
out
or
popa
cmc
popa
push
pop
arpl
pushf
popf
cmp
fisttpl
push
and
sbb
mov
or
das
add
xchg
push
cmc
xchg
imul
stos
push
jmp
lds
mov
cmpsb
jle
xor
and
mov
test
je
gs
inc
add
lea
mov
sub
lahf
scas
aas
cmp
mov
ret
fdivrs
loopne
sbb
lcall
aaa
lods
lods
sub
push
in
hlt
mov
dec
outsl
leave
push
mov
and
sub
xor
mov
cmpsb
xchg
shrl
mov
clc
cli
jno
pop
enter
add
jge
pop
adc
scas
iret
stc
mov
int3
mov
and
jne
loopne
sub
test
jg
lock
insb
fs
lds
daa
sti
jbe
mov
add
or
imul
lods
arpl
pusha
or
inc
dec
or
sub
mov
xlat
mov
inc
ds
sub
out
call
inc
cmp
pop
sub
dec
icebp
pop
popf
into
cmp
cld
popa
rorb
dec
les
cmp
xor
bound
cmp
daa
fimuls
nop
or
jmp
pop
push
aaa
lods
es
pushf
cltd
mov
and
pushl
lods
sub
xor
out
lods
aas
shrl
inc
out
call
and
push
aad
mov
pop
push
insl
test
bound
cmpsb
int3
fisubs
ficomps
jle
inc
xchg
test
gs
jnp
stc
shll
sbb
jae
in
adcl
push
loopne
test
cmp
ret
mov
lret
jg
dec
rorb
arpl
lods
xor
fs
dec
jmp
xchg
lret
sbb
sarb
mov
xor
aas
xor
out
sti
insb
imul
xor
or
or
jg
sti
pop
cli
mov
adc
mov
lock
cs
fucomi
dec
in
hlt
mov
ljmp
mov
dec
and
inc
mov
icebp
ja
inc
lret
jecxz
in
sub
cld
in
mov
lahf
pop
sti
fisubrl
xchg
xchg
inc
fdivs
push
stc
or
jae
scas
push
xchg
sbb
xchg
xchg
jle
xchg
pop
jns
xchg
gs
push
loopne
or
xor
sub
and
adc
adcb
sahf
rol
imul
outsb
jg
mov
out
orb
and
lods
subb
mov
subb
gs
mov
frstor
rcr
jmp
int3
mov
pop
shll
push
cmp
movsl
sbb
in
call
nop
test
shlb
mov
and
mov
test
shrl
sbb
inc
daa
shrl
int
mov
or
fdivrp
out
fs
mov
in
add
cmp
pop
repnz
push
out
cmp
lock
and
call
or
xchg
subb
jmp
rol
es
xchg
imul
jo
stos
out
dec
add
sub
fisubrs
movsb
popa
into
pop
pusha
movsb
xchg
xchg
cli
test
mov
inc
fildll
inc
dec
push
out
lcall
push
push
dec
push
iret
popl
fisubs
mov
es
dec
adc
mul
popa
stos
test
imul
cmp
jmp
or
jo
ljmp
sti
in
daa
pusha
adcl
and
push
insb
sub
in
scas
test
jae
rcr
fiadds
cmpsb
mov
mov
into
and
loop
in
mov
ss
mov
and
loopne
adc
mov
bound
lods
mov
fisttps
dec
and
dec
mov
jmp
and
and
or
es
add
mov
cld
dec
dec
int3
mov
cltd
int
sbb
adc
and
loope
mov
push
inc
enter
cmp
lahf
insl
dec
scas
mov
mov
sub
call
cmp
push
cmp
mov
enter
jmp
rcr
stos
sahf
fisubrl
mov
ljmp
arpl
outsb
jno
hlt
test
into
dec
subb
sub
sar
push
mov
push
aad
inc
shll
cmc
push
in
push
loop
push
es
inc
jnp
cmp
mov
xor
inc
sub
in
stos
repnz
out
in
subl
js
out
sti
iret
jns
lea
jbe
mov
xchg
stos
fsub
mov
int
jmp
inc
cmpsl
in
push
fcmove
outsl
pop
popa
mov
jecxz
mov
pop
mov
inc
lea
into
mov
push
int3
loopne
and
sub
popa
fidivs
inc
into
inc
push
push
or
jge
lahf
pushf
std
pusha
dec
int
pop
dec
into
cltd
or
mov
mov
xchg
test
xor
or
mov
sub
lahf
je
nop
push
orb
mov
jp
iret
mov
mov
into
addr16
mov
cmp
insb
xor
test
dec
and
ret
inc
pop
or
cmp
mov
mov
fs
mov
sub
out
jmp
ror
or
test
in
cwtl
dec
push
add
in
mov
push
push
daa
mov
mov
in
lahf
xor
ja
cmp
shrb
cmc
imul
cs
mov
or
in
nop
subb
orb
push
cmp
pop
xchg
or
pushf
mov
fcmovnb
leave
jmp
pop
cld
push
movsl
pop
arpl
jno
pop
push
xchg
cmp
pop
xlat
mov
lret
hlt
mov
out
inc
pmaxub
or
popf
outsl
adc
mov
mov
addr16
punpckhdq
arpl
fistpl
mov
scas
or
pushf
shrb
add
outsb
cltd
popf
sahf
aas
loope
sub
push
push
ljmp
ret
pop
fwait
nop
xor
add
outsl
push
arpl
outsb
fdivs
mov
test
repnz
mov
sbb
fs
push
stos
push
jge
ret
or
adc
fwait
sarl
icebp
mov
mov
push
mov
push
std
and
xchg
loopne
xchg
xchg
sbb
jno
int3
negb
inc
call
fs
sub
cltd
xlat
xchg
cltd
lret
push
pushf
fwait
mov
add
mov
mov
pop
and
fwait
mov
xchg
sub
sub
test
xor
addr16
xchg
mov
sub
ds
mov
js
out
aad
jnp
mov
insb
bound
or
cmovbe
loope
ljmp
cltd
inc
mov
rcrl
jp
gs
xchg
jmp
stos
mov
bound
pop
popf
arpl
xor
dec
jns
xorb
shl
sub
rorl
adc
std
xor
adc
out
ja
push
popa
adc
out
out
orl
lcall
push
dec
mov
sbb
jae
or
cmp
sbb
pop
fnstenv
scas
mov
mov
fs
bound
imul
sub
or
arpl
loopne
jp
cmp
call
push
call
andb
stos
imul
push
lods
scas
fs
pop
cmpb
lahf
daa
and
sub
and
and
pop
sub
scas
pop
stos
and
imul
pop
sub
and
aad
mov
gs
push
inc
mov
test
movsl
mov
fcoml
or
jae
shll
faddl
mov
inc
sbb
cmp
je
mov
lret
stos
sbb
jmp
stos
fisttpll
pop
cwtd
nop
aam
sub
fnsave
stc
xchg
in
test
imul
sarb
adc
ja
xor
ljmp
add
sbb
jns
out
iret
adc
cmpsb
pcmpgtw
mov
movsb
inc
gs
out
cltd
lock
jle
inc
testl
cld
fs
mov
adc
pushf
loopne
call
dec
cltd
ds
in
nop
in
fbstp
inc
aas
sbb
pop
lods
mov
mov
aas
dec
and
outsl
out
ljmp
cmpsb
sub
imul
pop
leave
test
popa
or
sarb
scas
out
loopne
jo
insl
in
mov
and
aad
xchg
fdivp
dec
adc
lds
xchg
lock
dec
cmpl
negb
gs
movsb
sub
test
xchg
xor
out
fldenv
push
in
dec
inc
in
gs
xchg
movsb
pop
or
xchg
mov
aam
ds
dec
xchg
test
fmul
cmp
mov
loopne
lcall
jae
add
dec
push
inc
fwait
lods
or
test
scas
or
xchg
lods
loopne
outsl
aas
mov
rcrb
sbb
add
fprem1
inc
or
cmp
add
outsl
jmp
xor
jb
insb
mov
pop
push
outsb
jne
and
xchg
fdivs
cli
xor
mov
clc
cmp
vpshufd
mov
mov
lret
jne
and
in
adc
jle
dec
stos
jnp
jnp
inc
mov
test
loopne
subb
js
pop
aaa
jle
adc
and
mov
pop
or
cmp
inc
and
or
insl
mov
pop
push
nop
addr16
mov
xchg
adc
int3
xor
lods
dec
pusha
and
cmpsb
clc
ljmp
cld
add
adc
test
mov
loopne
cltd
cmp
add
push
lock
mov
jo,pn
mov
pop
and
cltd
into
cmp
mov
shlb
mov
sbb
jae
icebp
ja
mov
sub
adc
jae
sub
jne
mov
jl
pop
out
xchg
jmp
ljmp
push
ljmp
movsb
cmp
fwait
dec
lret
xchg
popa
rcr
dec
push
lock
mov
push
dec
and
push
jno
push
cmpsb
jg
xor
in
sub
bound
mov
jp
mov
mov
sar
nop
cmp
cld
gs
mov
push
push
jae
mov
xor
out
cmp
jne
xchg
out
xchg
or
pop
test
loope
pop
filds
lods
adc
mov
cld
sahf
jg
iret
jne
push
shrl
aam
sub
bound
pop
fsubrl
or
and
jl
dec
push
fldt
pop
push
data16
sbb
mov
xlat
xchg
sbb
aas
lods
xchg
jg
jo
mov
pusha
lock
imul
ljmp
add
jmp
sub
adc
mov
push
pop
add
inc
mov
dec
sbb
sti
in
in
test
pop
mov
int3
inc
xchg
daa
adc
xchg
out
iret
stos
repz
dec
rcrb
fidivl
xchg
dec
nop
je
sub
lea
fisubrl
xchg
inc
jns
push
loopne
mov
inc
pushf
cltd
push
jmp
ljmp
insl
sahf
cmp
xchg
stos
outsb
ljmp
sbb
scas
push
out
rcrb
test
jb
iret
gs
mov
xlat
pop
iret
or
nop
std
shrl
push
jg
adc
dec
arpl
movl
adc
sbb
in
lock
mov
xchg
out
push
bound
push
mov
or
mov
xor
pop
out
pop
fldcw
inc
mov
cmp
sub
dec
insl
cmpl
lock
cmp
and
sub
insb
cld
push
dec
loop
insb
and
call
cmpsl
mov
cmp
dec
jmp
test
test
add
fcompl
imul
add
cwtl
pop
jno
pop
je
subl
sbb
rcll
hlt
neg
sub
popa
jmp
sbb
mov
inc
sub
mov
imul
leave
xchg
rolb
pop
in
call
ficoms
cmp
adc
es
fistps
pop
push
ljmp
pusha
sbb
test
pop
pop
mov
dec
pusha
int3
fstps
mov
and
mov
imul
inc
fs
sti
out
jnp
jp
push
je
xchg
jmp
dec
out
call
or
jmp
notl
das
sub
mov
jg
idivb
adc
sub
test
xor
inc
enter
mov
pmaxub
bound
fiadds
mov
jmp
add
in
out
imul
xchg
mov
les
sbb
cmp
in
sahf
ret
push
psrld
or
out
test
insb
pop
xchg
push
sbb
int
jle
sbb
mov
xor
lock
in
add
addr16
cmp
push
in
inc
xchg
scas
scas
jge
or
push
fidivrl
cmp
mov
popa
xor
outsb
push
mov
gs
sbb
and
cltd
out
pop
pushf
loop
xlat
lret
inc
repz
lods
enter
push
and
test
inc
xor
jp
rcr
and
fstpl
sbbl
pop
aam
pop
in
lock
jns
or
xor
jp
pop
popa
cmp
mov
insl
out
jbe
inc
icebp
xchg
sub
mov
dec
gs
pop
mov
cmp
and
dec
sub
pushf
add
inc
xchg
mov
push
jno
and
add
stos
imul
pop
aam
mov
cltd
ret
jnp
testl
adc
popf
jnp
xchg
mov
or
mov
mov
adc
outsl
repz
imulb
or
xchg
nop
pop
test
stc
pop
add
loop
scas
xchg
js
daa
pop
adc
mov
mov
mov
and
pop
nop
mov
inc
dec
rcrb
xchg
lret
movsb
mov
xchg
lret
movsb
in
jl
lock
mov
das
sti
mov
sbb
push
outsb
mov
cmp
stos
test
scas
fldenv
das
push
lret
mov
add
ret
mov
fidivrs
pusha
ds
ljmp
lret
aas
push
scas
fdivl
ret
in
stos
mov
ds
mov
cmp
out
mov
mov
shll
fisubrs
stos
imul
shr
cmp
nop
rorl
xor
sahf
mov
push
add
xchg
jg
mov
inc
sbb
scas
js
adc
in
xchg
int3
xlat
mov
mov
xor
lcall
cmp
lds
pop
or
popa
jmp
cmpsl
pop
cmp
sbb
push
cmp
adc
aam
hlt
out
mov
add
cmp
cld
or
ds
arpl
lea
in
add
or
jnp
or
notb
pop
es
xchg
inc
and
mov
adc
ja,pt
dec
add
inc
gs
into
mov
nop
mov
adcb
jmp
lcall
adc
addr16
aas
jmp
and
test
leave
inc
cmp
and
push
bound
imul
fisubs
pop
and
cmp
loop
hlt
adc
mov
or
aam
cmc
icebp
jmp
jne
push
sub
or
cld
xchg
insl
and
sub
ljmp
pop
jne
pop
push
sbb
dec
mov
push
shl
cmp
loopne
xlat
into
int
mov
cltd
jmp
add
sbb
jge
lea
xchg
in
xchg
jo
or
pop
jmp
xchg
shl
jmp
iret
jae
inc
jmp
pop
xchg
hlt
loopne
inc
xor
fistps
xchg
out
sbb
fistl
push
je
into
jecxz
inc
fcmove
cs
dec
movsb
push
jecxz
inc
pop
pushf
and
nop
pushf
bound
pusha
fistl
xor
pop
mov
cmp
ds
je
das
iret
je
aas
xor
pop
push
iret
cmpsl
idivb
sbbb
push
pop
cli
xchg
mov
inc
jmp
nop
out
adc
push
popa
add
pop
out
inc
iret
cmp
daa
cmp
rolb
mov
loopne
add
inc
sbb
inc
mov
dec
out
cwtl
fisttpl
push
cmpsb
or
or
inc
nop
cmp
mov
inc
movsb
int
out
das
cmpsl
stos
sti
lcall
mov
testb
mov
jg
popa
xchg
mov
outsl
icebp
mov
aas
out
andb
sbb
loop
inc
xchg
or
out
add
xchg
jg
mov
mov
imul
in
pop
pop
sbb
outsl
lock
dec
cmc
fdivs
out
xor
bound
sarl
jo
hlt
in
fwait
lods
xchg
lcall
lretw
mov
enter
cmpsb
sbb
xchg
and
push
ficomps
sbb
cmpsl
aad
mov
lea
adc
mov
cltd
jmp
cmp
loope
cmpsb
push
add
mov
and
test
scas
gs
lods
ja
movsb
enter
xor
rcr
test
mov
inc
bound
cld
mov
dec
add
mov
jno
shll
jns
jp
fimuls
and
mov
cmp
jg
scas
inc
in
cwtl
clc
inc
jae
add
jno
daa
xlat
in
xor
scas
cs
mov
sbb
mov
mov
push
and
pusha
int3
mov
add
outsl
jecxz
mov
mov
pop
push
xchg
pusha
cmpsl
outsl
in
into
stos
mov
fst
outsb
mov
push
mov
aad
mov
rolb
test
stos
dec
dec
inc
and
push
pop
cmp
xchg
push
flds
shl
in
mov
and
inc
lret
in
movsb
xchg
out
push
arpl
ds
pop
sarl
mov
dec
mov
test
dec
pusha
aas
push
xchg
leave
cwtl
loopne
or
test
jle
jmp
xor
adc
inc
push
mov
or
dec
dec
ror
sub
les
and
xchg
pop
cmp
iret
lock
out
scas
out
in
jo
and
fchs
pop
orb
cld
outsl
icebp
pop
cli
rcrb
ror
dec
cmc
push
and
jae
push
imul
test
js
mov
push
clc
andl
pop
test
jmp
fs
and
arpl
jmp
xor
lock
dec
daa
push
inc
cltd
dec
mov
inc
push
and
lods
idivl
inc
test
je
arpl
mov
xchg
add
mov
fwait
shrl
cmpsl
rorb
push
sub
sbb
stos
insl
enter
test
in
iret
inc
push
xchg
jbe
mov
pop
adc
jle
arpl
sbb
mov
inc
jno
mov
push
clc
bound
sbb
divl
idivl
adc
icebp
sahf
or
cmc
ss
dec
test
mov
xchg
scas
cmc
lret
adc
xor
cli
in
lret
nop
jecxz
test
jae
mov
fbstp
jge
adc
jge
cltd
xor
push
mov
inc
mov
inc
pop
lret
mov
xor
and
add
fistps
mov
pushf
ja
fstl
add
ss
inc
lock
mov
mov
lock
fcmovnb
shlb
dec
std
repnz
ret
popf
sbb
sbb
sahf
data16
add
mov
scas
mov
in
inc
lods
mov
push
int
das
jmp
inc
in
xor
loop
xchg
pop
je
insb
nop
cltd
andb
repnz
mov
adc
jno
loopne
bound
mov
or
repnz
loopne
cmp
ret
add
mov
mov
add
loop
icebp
mov
mov
jbe
push
popa
loop
bound
loopne
ljmp
test
xor
insb
fdivrl
mov
iret
aam
mov
push
cltd
cli
aam
dec
repz
pusha
mov
inc
out
sub
push
sbb
jecxz
fdivl
iret
andb
lcall
sub
fidivrs
and
jmp
mov
sub
inc
or
imul
adc
mov
test
cs
bound
iret
std
push
and
filds
scas
push
jle,pt
cmpsb
aad
aaa
bound
mov
mov
inc
scas
mov
test
insb
leave
adc
pop
or
push
xchg
aad
jg
enter
xor
mov
pop
sub
loopne
xchg
push
mov
mov
sarb
cwtl
jnp
movsl
mov
mov
sub
stos
sahf
fists
and
adc
xchg
or
cld
or
jmp
and
popa
pop
into
lock
mov
sahf
test
inc
pop
add
call
mov
mov
leave
xor
jo
hlt
scas
xor
inc
sub
stos
mov
insb
xlat
cmpsl
mov
pop
pop
iret
mov
and
mov
or
push
sub
stos
enter
add
lret
incl
scas
xchg
popf
mov
xchg
push
dec
or
pop
outsb
push
and
in
mov
rcrl
in
mov
mov
test
les
push
sub
push
push
inc
or
imul
inc
adc
inc
addl
pusha
mov
pop
insl
scas
nop
out
loop
fldenv
mov
sub
in
int3
and
outsb
popa
test
lods
loop
out
mov
cmpl
cmp
cmpsb
ficomps
fsubl
dec
dec
in
add
ret
ds
push
clc
call
adc
lahf
mov
mov
dec
bound
mov
test
insb
sub
clc
test
pusha
fiaddl
xor
push
enter
scas
les
pop
cltd
mov
in
push
and
dec
loopne
lahf
push
stos
cltd
cmp
aaa
in
mov
sti
js
lret
jge
pop
jo
lcall
enter
test
mov
lods
cmp
pop
pop
mul
add
std
cmpsb
jnp
sub
lret
lods
jne
fwait
repz
out
jno
imul
add
js
gs
mov
mov
xchg
inc
pop
cld
pop
pop
ja
mov
inc
add
outsl
jno
mov
push
xor
in
ljmp
mov
mov
and
pop
mov
pop
sbb
and
jae
add
popf
shll
dec
push
insb
jb
stc
dec
stc
xor
jle
cltd
push
pop
xchg
movsl
jge
aas
out
jns
dec
out
ds
jle
jno
sarb
push
mov
pusha
add
mov
scas
mov
aas
add
rclb
in
mov
insb
inc
test
cmp
mov
rorl
push
in
xchg
mov
jmp
pop
jecxz
rcr
and
mov
pop
loop
pop
lods
outsl
inc
push
ja
nop
enter
outsb
push
pop
add
mov
xor
aas
jbe
lcall
mov
popa
sub
iret
sti
xor
mov
xlat
xchg
stos
dec
sti
mov
ds
mov
pop
sahf
sahf
and
outsl
and
test
cmp
cltd
decb
sbb
sbb
xor
mov
iret
dec
inc
bound
subl
adc
mov
out
test
lods
cltd
dec
insb
insb
dec
jae
pop
push
push
frndint
push
or
lods
les
imul
and
sbb
sbb
insb
rorl
mov
pop
out
std
sub
bound
std
and
cmpb
in
fs
imul
mov
push
leave
cltd
push
xchg
adc
test
mov
call
push
cwtl
movl
int3
pusha
cmp
in
js
fcomps
inc
push
filds
pop
les
lds
cltd
data16
les
lret
jl
sbbl
mov
icebp
and
mov
dec
xchg
enter
aas
ljmp
bound
mov
decb
mov
and
aad
loop
repz
sub
cmpsl
jmp
mov
aam
into
ficomps
or
or
cmp
pusha
fcomp
sub
xor
jge
push
cli
lret
pop
xor
mov
nop
mov
mov
roll
cmp
add
sti
ret
aad
pop
pop
test
inc
add
stos
out
popa
jl
jge
dec
adc
subb
mov
adc
cmp
sbb
pop
jge
jecxz
out
fstpl
mov
roll
insb
out
or
outsl
sub
fsubl
int
jmp
lock
mov
pusha
lret
gs
cmpsb
and
mov
lahf
in
popa
push
fs
imul
and
scas
and
fisttpll
cwtl
mov
sahf
jecxz
push
popa
dec
dec
adc
out
add
arpl
ret
shr
push
pushf
cwtl
cmp
mov
outsb
cmp
mov
int3
test
push
pusha
mov
mov
pop
xchg
sub
push
mov
out
jl
jl
test
mov
dec
jbe
adc
out
jb
jmp
dec
scas
gs
pop
push
in
stc
arpl
mull
out
mov
pushf
and
in
pop
inc
aad
add
inc
in
mov
in
and
pop
sahf
jmp
gs
jmp
out
inc
in
xlat
outsl
loopne
dec
push
in
mov
fbld
inc
insb
clc
jecxz
pavgb
in
pop
insl
arpl
push
orl
cld
xor
pop
rcr
outsl
cmpsb
iret
fwait
scas
cmpsb
out
in
fistpll
test
push
inc
jecxz
pop
sub
sbb
mov
fsubs
addr16
add
push
fwait
and
test
mov
pop
das
je
imul
jmp
imul
fs
push
pop
scas
out
and
imul
or
pusha
adc
cld
fsts
jmp
mov
sbb
das
xchg
mov
mov
cwtl
push
dec
dec
cmpsl
mul
pusha
and
push
push
in
out
call
andb
out
add
out
jecxz
pop
cwtl
xchg
movsb
loope
out
pusha
xchg
call
in
out
out
or
push
bound
in
int3
into
sub
inc
cmpsb
out
out
inc
cmp
sbb
mov
inc
mov
inc
pusha
bound
inc
imul
out
sub
bound
out
insb
cmpsb
jns
jbe
add
ds
sub
int3
in
mov
add
outsb
mov
imul
pop
cmpsb
out
lret
pop
test
cli
int3
xchg
in
fstpt
mov
fsub
es
lock
pushf
jecxz
scas
in
arpl
cld
lods
mov
pop
in
in
mov
out
cmp
jg
out
push
mov
jp
pusha
xchg
movsb
popa
or
inc
xchg
add
inc
popf
aas
loopne
gs
das
xor
pushaw
fdivl
rorl
out
nop
xchg
dec
or
repnz
ljmp
xor
icebp
popl
dec
das
in
inc
push
mov
add
adc
mov
outsl
in
xor
mov
ljmp
jo
add
in
aam
out
mov
lahf
out
out
stc
push
stos
adc
sub
in
insl
test
pusha
in
out
outsl
inc
pop
or
sub
jmp
adc
xor
fisttpl
pop
fbstp
jg
int3
add
bound
inc
xor
mov
fsubp
jg
fists
adc
faddp
es
in
xchg
pusha
xchg
out
in
push
cmpsl
in
cltd
test
subb
jg
in
daa
shrb
push
loop
in
cmpsl
xlat
mov
into
push
inc
cwtl
cmp
pusha
xor
stos
test
push
mov
outsl
fimuls
outsl
sbb
outsl
aaa
jb
int3
data16
jmp
pop
bound
loopne
pop
loope
pop
pusha
pusha
daa
lods
mov
arpl
popa
movsb
jecxz
push
mov
out
mov
or
jmp
ss
lcallw
sub
pop
xlat
adc
dec
lret
jge
add
or
xlat
in
gs
dec
arpl
loopne
push
iret
in
shlb
insl
pop
pop
das
inc
mov
fisubl
jle
pusha
mov
push
rorb
add
mov
pushf
jle
jge
xorl
imul
adc
xchg
inc
cwtl
fistl
fisubrs
fs
xchg
pop
xor
jg
pop
fisttps
iret
lret
test
mov
test
jle
sahf
pop
out
stos
pusha
inc
arpl
pusha
or
test
in
jecxz
push
add
test
mov
dec
in
fildll
in
int3
add
cmp
xor
movsl
jmp
imulb
loope
outsb
imul
or
jmp
insl
in
sub
outsb
fisubs
push
dec
pop
scas
arpl
fbld
int3
lea
xchg
loopne
bound
out
stos
out
lahf
pop
outsb
jmp
pop
test
out
imul
int
xchg
enter
or
lods
ss
lret
in
fisubrs
sbb
lods
sub
cmp
int3
or
mov
das
popf
fdivrl
stc
pusha
stos
jp
mov
lods
cli
loopne
aad
xlat
in
arpl
test
ljmp
jg
fsubs
add
loopne
jmp
in
add
jmp
jl
jmp
lds
lock
out
sub
out
lods
out
out
loopne
push
fxch
and
loopne
ljmp
push
or
je
ret
pop
out
and
insl
xchg
cmc
clc
in
push
dec
gs
fsubp
fs
out
pop
cmp
mov
arpl
dec
in
in
mov
loope
xchg
in
adc
push
mov
lods
in
repz
sub
out
test
xlat
ficomps
int3
fisubs
les
into
loopne
into
cmp
cli
out
test
jmp
out
gs
out
or
mov
jle
push
in
ljmp
xchg
xor
fs
xchg
ret
xchg
inc
mov
xor
pop
mov
addr16
xlat
pop
out
fcompl
cmc
adc
pop
and
test
fimuls
dec
nop
outsb
fdivr
out
xchg
in
mov
mov
push
in
mov
daa
gs
jl
aad
stos
loopne
outsl
push
fcmovnu
rol
imul
push
scas
decl
ficomps
and
stos
int3
stos
clc
push
les
xchg
into
repnz
cmp
out
movsb
into
lods
sub
out
push
dec
mov
sub
adc
call
loopne
push
push
sub
mov
push
shlb
mov
stos
in
lret
fstl
mov
scas
sti
out
xor
and
jbe
pop
arpl
mov
lret
jecxz
xlat
into
jmp
jl
pop
in
fldcw
adc
fldt
lods
or
into
cmp
dec
outsb
loop
push
or
sbb
xor
andnps
cmpsl
push
out
push
inc
fildll
add
push
in
loopne
inc
cwtl
hlt
ret
aam
jmp
and
out
push
pusha
fsubrs
mov
in
adc
pusha
in
push
sub
cs
push
dec
push
outsb
das
xor
push
jmp
pushf
call
xchg
shrb
pop
push
mov
lret
cmpsb
imul
out
sub
pusha
dec
out
loopne
in
and
into
in
loopne
push
pop
push
mov
jmp
js
mov
gs
adc
pusha
aad
gs
add
and
jmp
pushf
call
out
jecxz
pop
adc
out
hlt
sub
outsb
pusha
outsl
push
call
imul
pop
sbb
adc
int3
mov
xchg
pusha
imul
push
jle
pop
push
mov
xor
push
out
lea
fwait
cmc
into
out
aas
in
pop
mov
add
mov
pusha
jbe
loopne
test
push
jns
lods
push
outsb
mov
mov
out
enter
insb
test
inc
push
ljmp
in
addr16
lds
ljmp
sub
arpl
lret
inc
test
add
mov
popa
into
sub
insl
and
pop
or
add
test
in
push
sub
jmp
mov
test
outsl
push
out
fildll
mov
test
mov
or
xor
sub
xlat
lods
cld
lods
add
enter
mov
test
adc
fisubs
push
femms
jo
test
imul
cmp
ss
mov
outsl
out
test
xor
push
pop
insl
out
mov
xchg
int3
mov
into
js
int3
and
jbe
fs
pop
pop
mov
lret
fadds
addb
lods
test
arpl
lods
inc
outsb
sub
int3
es
test
int3
out
lods
outsb
daa
inc
ljmp
sub
arpl
rolb
scas
int3
popa
aas
sub
push
lret
fucomip
inc
fisubrs
into
sub
jmp
add
mov
pusha
inc
cwtl
loopne
or
bound
outsl
out
or
test
and
xlat
lods
pop
push
out
lret
out
pop
mov
js
nop
arpl
mov
pusha
leave
mov
imul
mov
nop
in
bound
in
cmp
es
mov
iret
outsb
stos
adc
out
add
mov
inc
pusha
sti
pusha
jmp
call
sbb
pop
test
fsubrp
fmull
fistps
gs
cmp
fs
or
rcr
in
push
pusha
and
loope
pusha
arpl
add
out
push
into
out
push
into
add
insb
pusha
out
imul
sbb
push
pusha
pusha
data16
or
adc
xchg
lods
jmp
jae
xlat
cmc
fildll
mov
mov
imul
lea
fsubp
jne
push
sbb
sub
push
out
loopne
xchg
icebp
dec
fstps
cmp
stos
mov
inc
cld
clc
xchg
dec
lahf
cpuid
insl
pop
or
adc
or
mov
imul
in
int3
into
sbb
push
es
setg
inc
imulb
in
andl
int3
xchg
into
out
stos
loopne
scas
es
fisttpl
cwtl
sub
in
sarl
outsb
aaa
jns
adcl
fcoml
dec
fstpl
mov
out
ljmp
jg
mov
jmp
setge
jmp
faddp
lahf
jp
ss
cmp
and
mov
inc
dec
inc
fsubrs
adc
in
add
imul
pushf
cmc
leave
nop
fstps
mov
jne
jecxz
std
xchg
scas
test
mov
dec
jno
cltd
hlt
ljmp
or
ljmp
or
loopne
jmp
jae
adc
cmpsl
popa
cs
jecxz
cmp
lods
test
adc
shrl
push
xor
and
add
xor
in
stos
les
scas
mov
call
popf
jecxz
fnstsw
sarl
call
iret
sub
pop
push
pusha
test
xlat
and
gs
insl
test
sub
xlat
imul
shrb
sahf
xchg
out
fabs
shrb
outsl
or
ljmp
pusha
or
stos
fisttps
jecxz
mov
add
out
insb
out
fildll
mov
call
ss
enter
jge
add
dec
lods
movsb
pop
add
iret
in
jle
or
fimuls
sbb
clc
fisubrs
push
push
jmp
jp
adc
fidivrs
sub
scas
repz
sahf
test
movsb
ds
out
sbb
test
mov
inc
shl
out
pusha
add
int3
addr16
sahf
fs
out
jnp
lret
push
scas
mov
bound
outsb
mov
sub
pop
out
out
cld
loopne
imul
popa
into
xchg
scas
adcl
leave
in
outsb
iret
test
insb
pop
stos
outsb
fsubr
outsl
sbb
out
outsb
in
cmp
ja
cs
stos
mov
fbstp
out
jb
enter
addl
dec
lods
add
lcall
add
out
outsb
loopne
data16
xor
mov
ljmp
stos
jl
lret
out
add
repnz
xor
or
addr16
adc
test
and
xor
xor
addr16
add
in
sub
int3
data16
dec
fucomip
pop
add
mov
ret
mov
call
daa
jmp
xchg
loopne
int3
inc
mov
and
mov
add
cli
outsl
je
sahf
pop
loope
movsl
in
bound
fimull
outsb
push
jnp
in
movsb
mov
inc
pushf
and
mov
popa
pushf
data16
cmpsl
push
inc
xor
mov
fiadds
xor
jg
out
loopne
es
outsb
push
fsubr
add
xor
outsb
out
out
int3
or
jnp
in
pusha
out
insb
and
push
jmp
out
dec
push
push
jmp
sub
mov
mov
enter
addl
stos
loope
outsl
outsl
push
pop
push
xor
ljmp
popa
shrb
pop
push
in
mov
add
lods
jg
or
jmp
insb
adc
iret
out
or
push
and
pop
push
xchg
movsl
xor
add
push
out
xor
insl
int3
adc
fldenv
mov
pop
ret
jmp
insl
pop
pop
insb
pusha
add
and
in
out
data16
pop
shll
pusha
xor
jecxz
imul
and
jg
xor
inc
addr16
loop
movsb
add
lahf
or
imul
cmovp
in
imul
call
pusha
pushf
xorb
sub
decb
out
pop
mov
call
loop
cmp
into
xchg
scas
pop
loope
and
loop
cmp
loope
and
hlt
in
push
push
enter
sti
pop
jmp
test
insb
pop
push
in
imul
jg
xor
mov
and
mov
push
aam
dec
jl
insb
popa
cwtl
push
out
out
popl
jno
in
sub
arpl
add
outsb
push
aam
iret
push
jg
out
dec
mov
mov
in
pusha
or
iret
adc
stos
cmp
imul
out
cmpsb
call
pusha
lea
in
ret
in
inc
iret
mov
lods
and
idivl
into
imul
adc
and
test
scas
fbld
xor
mov
loopne
test
in
adc
cld
bound
jl
fs
xchg
dec
test
pusha
inc
push
xor
pusha
hlt
mov
outsb
adc
fs
pop
int
loopne
dec
test
outsl
add
lret
imul
call
and
and
int3
cmpsl
lods
xor
ficompl
jmp
sahf
adc
fdivrp
dec
jp
gs
incl
cmp
lret
cmp
cwtl
push
cmp
push
pop
inc
add
movsl
sarb
gs
or
fdivp
pop
lret
ficoms
jp
gs
mov
fisubrs
jp
les
hlt
lods
xor
or
cld
pop
lret
inc
or
imul
icebp
imul
test
popf
dec
outsb
push
call
enter
lret
cwtl
add
lret
fbld
fisubs
pushf
js
add
mov
pop
scas
int3
push
cmp
jecxz
cld
int3
and
imul
ljmp
int3
in
mov
call
xor
test
add
inc
fsubp
xor
mov
pop
sarl
into
and
pop
xchg
xlat
xor
mov
adc
fisubrs
mov
pop
jo
inc
bound
lods
cmp
insl
ret
pop
movups
sub
shr
nop
gs
jmp
add
push
nop
mov
xor
inc
std
test
push
mov
out
mov
gs
pushf
out
scas
loope
iret
rclb
rcrl
mov
or
out
fisubs
push
fisubrs
push
push
fsub
imul
jmp
fisubrs
loopne
shll
test
pusha
add
lret
into
pusha
mov
arpl
out
push
aad
pusha
adc
lods
out
out
dec
add
in
jmp
pop
fs
xor
mov
jecxz
add
int3
in
mov
pusha
add
cli
lods
and
adc
pusha
out
faddp
test
push
popa
call
mov
mov
rcl
cmp
call
ret
xor
in
mov
mov
mov
pop
pop
and
hlt
sbb
popl
lods
mov
in
shll
sbb
popl
popf
jge
outsb
mov
fmulp
imul
in
or
mov
xchg
pusha
xor
jp
jmp
push
in
or
fsubr
add
add
jmp
daa
push
out
xchg
imul
dec
in
bound
andb
inc
pop
loope
loopne
movsb
ljmp
call
outsl
mov
fucomi
fsubr
mov
sbb
ljmp
xchg
movsl
xor
cmp
insl
xor
cmpsl
jne
lods
sbb
cwtl
push
pop
lds
jge
pop
aaa
lret
gs
push
jmp
aas
cmpsl
out
out
fsubp
dec
aas
add
lods
outsb
sbb
out
jae
push
cwtl
xchg
push
sub
and
fldt
xchg
fs
gs
lods
mov
addr16
int3
out
fisubs
test
es
into
arpl
lock
popa
pushaw
bound
lods
adc
addr16
flds
loopne
scas
je
push
add
jp
pushf
loop
outsb
and
ljmp
adc
jmp
out
xor
arpl
jmp
pusha
sub
pop
dec
lods
loopne
imul
nop
imul
lods
ljmp
enter
sahf
lea
out
gs
push
into
imul
add
cltd
fcmovu
xor
xor
iret
sahf
fsubr
pop
or
fcoml
cmp
cmpsl
out
mov
pusha
insl
out
xchg
pop
or
bound
cmp
xchg
ljmp
inc
into
or
jl
pushf
gs
push
insl
out
loopne
arpl
stos
cmp
jg
mov
cmpsl
movsb
call
sbbb
das
loop
out
imul
xor
jmp
insl
outsb
jmp
ljmp
pop
jg
in
loope
jno
call
data16
and
pop
xor
arpl
outsl
out
or
dec
jecxz
gs
es
cmp
scas
fldl
imul
in
int3
add
loopne
push
fisubrs
out
pop
sub
outsl
pop
dec
mov
movsb
shlb
into
gs
jmp
iret
popa
pushf
or
jmp
gs
gs
out
out
lods
repz
int3
in
pop
paddsw
and
test
pusha
sbbb
imul
in
lods
mov
insl
out
ljmp
cwtl
inc
mov
pop
js
lods
aam
pop
pop
xor
outsb
or
por
and
mov
dec
cmp
mov
test
sbb
mov
xor
fistpll
jne
dec
jmp
xchg
in
dec
ja
call
movsb
arpl
shll
add
push
popa
pusha
cmp
fisubs
lea
loop
or
lods
gs
lods
add
or
out
insl
pusha
pop
cwtl
pop
or
mov
int3
jmp
or
out
insb
sbb
push
and
ljmp
or
and
in
out
in
int3
push
mov
xor
out
int3
add
in
jmp
push
fucom
jmp
mov
mov
xor
pop
mov
pushf
mov
and
loopne
mov
ret
jb
in
adc
in
data16
pop
sub
call
inc
in
loopne
push
outsb
call
in
in
out
lods
mov
cwtl
push
jmp
pop
pusha
pushf
ljmp
stos
call
or
xchg
mov
cmp
sbb
sub
ficomps
sbb
sub
nop
sbb
pusha
jno
mov
or
int3
adc
mov
dec
lods
or
int3
cmp
lods
or
pusha
xor
rcl
por
mov
gs
mov
in
mov
icebp
xor
or
scas
pop
gs
ficoms
pushf
out
inc
xchg
pop
or
fucomi
in
test
or
mov
loopne
scas
dec
outsl
in
push
or
fchs
pusha
add
xor
xor
movsl
fsubp
pop
lahf
inc
insb
in
test
nop
das
fmull
inc
mov
pop
and
mov
insb
add
repnz
lret
orb
test
loopne
sbb
lods
imul
cmp
jnp
mov
movsb
imul
leave
adc
daa
jl
push
stos
movsl
adc
loopne
fidivrs
sub
imul
sahf
lea
jge
movl
inc
loop
outsl
loopne
or
dec
in
push
mov
imul
or
test
movsl
insb
loop
imul
mov
push
loopne
jnp
loopne
push
add
imul
fnstsw
aas
pop
xor
je
pusha
cwtl
stos
fisubl
push
xor
ljmp
paddd
in
out
push
dec
popl
xchg
mov
xor
mov
fadds
mov
in
push
les
out
adc
loopnew
outsb
bound
cmp
mov
into
ret
int3
out
lret
push
loopne
push
das
in
jmp
arpl
or
imul
enter
fbstp
mov
jbe
outsl
in
pusha
movsl
loop
into
adc
daa
pop
jmp
outsl
adc
fcompl
pop
shlb
shr
pushf
out
mov
pusha
mov
mov
insb
call
je
mov
lahf
and
push
push
notl
cwtl
out
out
mov
cli
pusha
out
lods
inc
popf
js
dec
xor
clc
pusha
dec
mov
je
movsl
arpl
nop
cmp
movsl
push
xchg
ljmp
jp
test
lods
enter
pusha
in
xlat
int
fsubr
inc
iret
out
cld
test
sbb
call
gs
xor
shr
pop
pop
scas
inc
aas
push
cmpsl
push
fdivrp
pop
in
dec
jmp
and
push
out
xchg
lahf
xchg
xchg
push
mov
inc
mov
pop
arpl
scas
out
sub
cmp
pop
pop
mov
ljmp
push
enter
sub
out
loope
pusha
stos
call
movb
pushf
loope
test
repz
fcmovne
out
jmp
scas
or
lret
outsl
outsb
insl
sub
push
lods
outsb
outsl
lahf
lret
pusha
rol
mov
insl
fwait
loopne
loopne
stos
jmp
loop
xlat
insb
shlb
push
in
ret
push
mov
cld
les
std
gs
sahf
repnz
loopne
jnp
fisttpl
ror
add
xor
and
stos
insl
mov
rcrl
xor
sub
sbb
das
and
outsl
pushf
inc
outsb
fdivp
xchg
xor
mov
imul
jg
cwtl
in
outsb
adcl
adc
adc
adcl
adc
jl
fbstp
and
aad
insl
adc
fcompl
iret
sbb
xor
xor
mov
into
ljmp
loope
inc
imul
fsubl
enter
fndisi(8087
pop
sub
dec
jmp
jmp
in
mov
push
adc
enter
and
jmp
or
pushf
adc
pop
pop
adc
lahf
cmp
jecxz
push
push
xor
cwtl
mov
mov
in
mov
cmp
fsubrp
xchg
pushf
mov
fdivr
repnz
fdivp
push
outsb
in
repnz
fs
jge
pusha
roll
test
popa
push
aam
insb
mov
and
es
pusha
daa
loop
push
mov
in
fcomp
gs
push
dec
mov
jmp
push
in
loope
ljmp
in
addr16
or
jecxz
or
addr16
movsl
in
push
fneni(8087
pusha
js
daa
inc
mov
push
mov
loopne
cwtl
add
mov
push
add
in
in
jne
sahf
out
in
loop
iret
or
rcrl
outsl
pop
in
lret
into
fcoml
outsl
rcr
xor
vmovlps
daa
dec
mov
in
aad
and
filds
and
jmp
push
adc
in
and
push
das
call
int3
arpl
mov
xlat
fidivrs
cmc
into
mov
jbe
test
call
cmp
das
cmp
lods
aas
outsb
into
test
push
cld
in
icebp
xor
pop
sbbl
mov
into
test
xor
les
arpl
xlat
cmpsb
pop
sub
mov
lods
lret
pop
call
test
sub
jmp
outsb
imul
or
insl
or
dec
sub
scas
test
popa
fimuls
or
pop
insb
pusha
or
ljmp
addr16
mov
stos
cld
lret
loopne
out
into
out
enter
aad
test
iret
inc
push
out
in
insl
test
addl
les
inc
mov
sarl
and
dec
cli
dec
call
addr16
jb
dec
fildll
popa
push
insb
or
lods
inc
pop
push
scas
dec
in
in
pop
or
inc
fwait
pop
bound
jmp
mov
xchg
inc
movsb
fmulp
out
mov
lds
rorb
add
in
das
sub
xchg
push
rcrb
aas
xchg
jle
mov
shrb
outsb
outsb
mov
jmp
fdivrl
outsb
int3
ljmp
punpckhbw
lods
or
inc
test
fimuls
cmpb
ljmp
nop
movsl
lahf
push
dec
pusha
and
int
loope
stos
fldlg2
cwtl
scas
add
arpl
pop
cwtl
pop
imul
pop
in
xor
lods
ss
in
cmp
and
in
orl
cli
scas
test
pusha
scas
les
lods
insb
ljmp
adc
xchg
cmp
scas
lods
outsb
in
iret
jnp
lods
push
stos
scas
pop
imul
fimuls
out
pushf
pop
lret
jg
pusha
popa
aas
mov
adc
jb
outsb
imul
mov
lods
lcall
rclb
sub
lods
cmp
add
test
jns
scas
inc
xor
lods
ljmp
mov
cwtl
adc
xchg
sub
pusha
aas
cmp
push
dec
mov
lods
leave
das
add
xchg
int3
js
int
insb
mov
das
mov
fmuls
pop
rcll
int3
jg
inc
sub
fbstp
insb
cs
ret
aas
cmpsb
movsl
push
rcll
adc
insb
test
pop
mov
iret
sub
pusha
shr
les
ret
pop
mov
fsubrs
outsb
push
sbb
cwtl
sub
int3
or
iret
scas
insl
into
shrb
mov
in
outsb
lods
dec
mov
in
inc
iret
into
cs
bound
imul
in
fs
orb
out
clc
sbb
stc
and
insb
out
out
jl
fistpll
push
in
cltd
pusha
push
mov
pop
imul
sub
or
adc
out
scas
int3
dec
fs
pop
out
insl
add
cmp
mov
filds
mov
repz
push
insb
scas
push
int
scas
outsl
dec
addr16
fcoms
inc
fimuls
lret
xor
mov
xor
mov
in
outsb
mov
ret
out
and
inc
das
pop
or
dec
and
mov
cmp
push
fildll
cmp
jmp
inc
dec
stos
sub
fcoml
imul
xor
arpl
das
loopne
outsl
and
icebp
lret
loopne
pop
pusha
lods
das
loopne
mov
xchg
cmpsl
push
jo
into
in
mov
into
insb
test
adc
scas
data16
and
mov
pusha
xchg
test
loope
mov
insl
les
shrb
pop
sub
xor
outsb
and
test
test
imul
or
cmpb
inc
add
in
outsb
in
js
push
ret
xor
outsb
lahf
test
pusha
mov
and
insb
push
sahf
int3
leave
ljmp
lcall
movsb
sahf
rol
test
cmp
daa
bound
mov
ret
lods
fdivp
hlt
stos
pop
leave
xchg
adc
clc
fs
imul
imul
call
in
pushf
ret
or
das
aam
iret
cmp
push
mov
lods
pusha
lahf
pop
dec
clc
out
xor
fbstp
pop
into
and
pushw
cmp
movsl
mov
push
pusha
inc
inc
mov
call
push
aas
jge
lcall
cld
int3
scas
jecxz
xor
push
dec
pusha
movsb
or
lods
dec
das
cvtps2pd
fsubrs
mov
and
push
adc
shl
int3
pop
cld
ret
sub
popf
mov
jecxz
iret
or
add
jl
filds
scas
add
push
fcmovnu
in
out
scas
inc
mov
push
out
ret
outsl
insl
lods
lock
int3
call
das
pop
mov
jnp
scas
ficomps
cli
dec
push
fisttps
popf
fisubs
test
fistps
and
mov
push
shrb
jecxz
int3
jno
sahf
push
lahf
ds
jne
outsb
call
in
mov
sub
fidivs
push
and
decb
lret
lret
dec
out
push
jb
pushf
scas
scas
sub
fsub
outsl
iret
push
mov
inc
popa
stos
adc
insb
push
pop
or
shr
leave
mov
push
lea
sub
mov
mov
mov
mov
popf
fmull
cmp
outsb
push
jo
lahf
std
or
nop
popa
add
push
xchg
jno
add
push
and
mov
jp
mov
imul
gs
pushf
lds
data16
and
out
scas
jl
push
in
xchg
into
jle
fucomip
pusha
cmp
adc
and
push
lods
test
loope
outsb
loopne
lahf
pop
xor
push
mov
push
fisubs
xor
dec
out
pusha
pop
movq
test
into
sbb
mov
loopne
int3
shr
imul
out
pop
int
cmpsl
jmp
jae
outsl
outsl
subb
imul
dec
lods
out
lods
outsl
push
and
pop
shlb
out
loope
psubusw
outsb
inc
cld
push
cmp
stos
mov
xchg
rolb
push
addr16
iret
cld
mov
or
sbbb
imul
xlat
jecxz
sub
cli
outsl
mov
cmp
icebp
mov
rorb
sahf
jbe
incb
pop
hlt
sbb
mov
mov
stos
addb
sbb
mov
outsl
sbb
in
jbe
ljmp
in
cmpsl
in
mov
sub
mov
subb
push
pop
xchg
sub
adc
daa
inc
addr16
testb
data16
jmp
xlat
lret
pop
mov
shr
sub
push
out
mov
sbb
mov
xchg
xchg
nop
insl
or
add
jnp
cltd
add
mov
aaa
jnp
out
es
fsubl
lods
and
pop
andb
adc
arpl
fistps
xor
pop
ja
mov
jge
inc
sub
stc
push
pop
ret
aas
add
sbb
fcoml
arpl
xor
xor
aaa
sbb
push
ds
sbb
cli
and
mov
cmp
aaa
inc
or
cmp
or
daa
not
xor
sub
push
jo
js
push
jge
shrl
shll
inc
dec
cmp
out
or
xchg
fstp
jl
cmp
clc
mov
int3
sete
cmp
inc
pop
cwtl
shrl
test
popa
xor
lea
loop
xchg
pushf
mov
dec
imul
das
popf
test
push
mov
sar
out
add
pusha
lea
je
cmp
add
pusha
lea
jmp
push
mov
into
xor
adc
dec
dec
push
popf
mov
xor
jne
test
fmul
gs
push
jecxz
push
out
sub
mov
jbe
insl
mov
or
jo
or
stos
or
push
dec
cld
push
repz
cmc
mov
jo
sbb
dec
jno
or
push
pushf
mov
out
jmp
lret
adc
sahf
pop
jle
add
test
and
push
sar
jg
cmp
xchg
fsub
push
int3
xlat
mov
sub
movsl
sarb
add
mov
xchg
or
shll
arpl
jg
xchg
mov
jecxz
add
negb
add
xor
shll
xor
sub
push
shrb
xchg
sbb
mov
dec
cmp
push
je
dec
mov
xor
dec
dec
aad
dec
cmc
pusha
inc
shl
or
icebp
mov
repnz
xchg
mov
mov
mov
xor
ss
lock
pop
sub
shl
dec
xorb
sahf
in
push
aaa
xchg
mov
cmp
repnz
add
cli
fcomps
dec
fists
and
mov
mov
movsl
out
and
push
enter
arpl
popf
mov
mov
gs
and
push
arpl
rcr
jno
out
out
inc
sbb
inc
dec
subl
jg
out
fsubrs
xchg
movsl
push
xor
sbb
mov
inc
jmp
mov
call
jae
insl
in
and
cmp
out
jp
into
pop
mulb
pop
into
cmpsb
and
leave
adc
enter
add
xlat
adc
in
data16
out
shlb
clc
sub
out
dec
sub
push
jnp
mov
push
jo
rcl
fmul
mov
out
adc
and
movsb
pop
bswap
call
sub
stc
cmp
not
lea
lea
mov
mov
call
mov
loope
outsb
inc
loop
outsl
test
cmc
push
dec
je
cmpsl
mov
scas
insb
pop
inc
loop
push
in
cli
lock
dec
pop
inc
lods
pop
pop
xor
add
pop
inc
jle
movsl
or
fwait
lea
ja
rol
sub
adc
pushf
shl
cmp
sub
add
pushf
call
call
inc
hlt
xor
popf
out
cld
or
jp
xchg
jecxz
ja
sbb
mov
mov
inc
or
movsb
and
and
xor
mov
loope
jno
cmp
sbb
and
fldt
add
shl
or
xor
mov
sub
or
add
mov
adc
stos
xchg
xchg
cmp
fisubl
sub
pop
jmp
jle
xchg
aaa
pop
insb
loope
hlt
xchg
inc
orl
inc
test
sub
cmp
sub
mov
mov
outsb
inc
dec
insl
mov
data16
sar
sbb
xchg
add
into
pop
dec
int3
inc
inc
fwait
xchg
rcrl
push
or
inc
insb
imul
xor
dec
xchg
faddp
jecxz
sub
loope
jl
cmpsb
pop
adc
xor
cmp
rorb
shll
testl
cmp
add
mov
shll
int
out
and
jns
mov
mov
xchg
pushw
lods
or
daa
clc
lock
inc
dec
pop
sbbl
cwtl
nop
or
addl
je
divl
pop
pop
test
push
rclb
adc
sbbb
movsb
jmp
xor
mov
popa
fadds
jo
push
push
fidivrl
cmp
cli
idivl
push
cmp
push
sub
popf
js
fcoml
repz
frstor
int3
test
pop
xchg
leave
fcoms
inc
xchg
mov
jp
xor
sbb
jnp
cltd
sbb
mov
add
test
inc
jno
leave
out
hlt
add
push
imul
pop
xchg
icebp
mov
sbb
push
fwait
and
out
and
fisttps
add
add
mov
stc
jb
lret
jmp
int
sub
mov
mov
adc
inc
mov
mov
push
xchg
jmp
les
scas
lret
adc
pop
mov
jne
sbb
int
popf
js
fdivrs
lds
mov
or
xchg
inc
cmp
iret
xor
cmp
or
xchg
mov
add
xlat
inc
cmpsl
shll
call
jge
pusha
pushl
lea
je
pusha
mov
adc
movb
lea
jmp
lcall
mov
push
cltd
div
or
movsb
out
orl
xor
adc
push
arpl
sbb
js
int
test
cmpsb
mov
movsb
das
ror
inc
jnp
sub
cmp
jmp
iret
mov
mov
jecxz
and
lods
rolb
sbb
lahf
xor
stos
ret
decl
xchg
add
and
movl
lea
ja
ror
push
pushf
pushl
pushf
add
pusha
not
bt
bt
push
stc
neg
jmp
call
pushl
pusha
mov
pushf
pushf
pushl
ret
lahf
mov
cmc
shl
jmp
lea
jae
call
jge
movsl
adc
in
stos
shl
aaa
fs
mov
hlt
cli
pop
push
xor
dec
add
iret
aam
lcall
andb
aaa
pop
and
outsb
pop
mov
cmp
pop
sbb
lock
mov
fbstp
jp
popa
inc
mov
xchg
cmp
sahf
inc
out
test
ficomps
sbbl
sub
test
not
rclb
mov
inc
cmp
fdiv
mov
leave
inc
dec
push
jb
movsl
out
adc
push
cmp
inc
jle
mov
push
dec
dec
adc
mov
imul
sbb
fwait
and
aas
sbb
repz
xchg
adc
inc
scas
xlat
inc
insl
aam
mull
pop
adc
incl
mov
ja
sbb
loop
inc
lods
dec
pop
lock
sahf
jp
hlt
nop
shlb
xor
out
bound
sbb
fs
xor
fs
enter
mov
jle
mov
mov
ljmp
xbegin
xor
xor
and
mov
adc
cmp
test
in
in
sub
mov
xlat
jecxz
mov
and
test
pop
cmc
cmp
push
out
mov
mov
data16
test
frstor
jo
insl
inc
dec
popa
cmpsl
ldmxcsr
roll
fistpll
pop
jnp
out
lock
xchg
xchg
or
push
pusha
pop
and
scas
ja
mov
xlat
inc
mov
xchg
js
add
testb
outsl
mov
jbe
loopne
cwtl
cmpsb
ret
push
repz
adc
loopne
xor
lret
das
inc
pop
pushf
rcl
fdivr
fidivl
fstl
add
add
mov
xchg
out
test
fldcw
xor
jp
subl
leave
outsl
fildl
inc
fwait
cmp
mov
aas
rorb
dec
or
cli
pop
sbb
jno
fidivrs
fldt
dec
xchg
adc
push
jge
dec
sub
lcall
fstpl
stc
shlb
mov
jbe
iret
lock
stos
loop
cli
and
and
mov
jmp
push
push
xor
xor
fs
insb
add
xchg
push
adc
jg
leave
or
xchg
mov
pop
and
addl
jmp
mov
movsl
int3
and
cmp
notb
ljmp
jns
jle
cld
push
or
shlb
movsb
jb
cmp
xchg
roll
std
dec
pop
cld
inc
imul
jbe
mov
xor
popl
sub
lea
popa
iret
pop
out
int3
add
jno
hlt
lods
mov
shlb
mov
mov
mov
movsl
enter
pop
inc
mov
jo
fs
je
pushf
clc
cmp
pushf
push
pushf
pusha
lea
je
test
test
cmp
clc
cmp
jmp
aad
inc
adc
xchg
mov
ficoml
xor
xchg
sub
ret
sarl
fistl
push
and
fisubl
rolb
popa
test
mov
push
adc
pop
adc
div
push
pop
pushf
jle
add
xchg
pop
mov
jmp
fstpl
ret
or
andl
insl
mov
roll
mov
add
fcoms
inc
adc
sbb
movsb
cmpb
add
add
jno
jg
pop
sbb
aas
aas
push
insw
nop
xchg
sbbb
push
mov
lret
dec
clc
push
aaa
ret
adc
jns
out
ss
lods
adc
fadd
sbb
mov
shr
sub
and
dec
sub
or
sahf
movsb
test
mov
ret
out
mov
mov
dec
dec
xlat
push
inc
test
shrl
mov
mov
into
mov
mov
pop
dec
sbb
xor
mov
push
daa
mov
mov
stc
push
pusha
outsb
add
mov
test
sbb
in
out
fwait
pop
rclb
movd
sbb
icebp
pop
xor
outsb
sahf
cmpsl
loopne
cmpsb
cmc
cmp
jl
dec
imul
xchg
enter
in
sbb
movsl
and
lahf
adc
rolb
stos
rol
cmpsl
loopne
test
or
aam
xchg
mov
sub
adc
enter
loope
and
subb
lahf
jg
cmp
pusha
out
xchg
stos
inc
or
fdivrl
xor
lods
out
adc
insl
inc
xor
jo
add
xadd
jmp
pusha
bt
add
bt
bt
not
jmp
add
bound
adc
bound
sbb
bound
add
add
add
add
add
add
push
insl
bswap
not
bswap
pusha
lea
jmp
push
call
notb
sahf
fcoms
das
push
mov
pop
stc
push
imul
dec
stos
mov
inc
nop
lret
in
sbb
flds
jp
sbb
inc
add
jns
fidivrs
imul
xchg
fninit
mov
fsub
shlb
sahf
sahf
mov
outsb
inc
sub
inc
jl
dec
mov
sub
shl
mov
pushf
pushf
cmpb
pusha
mov
lea
jne
lea
sub
rcr
dec
mov
ror
call
cwtl
sub
or
mov
cld
adc
xchg
enter
bound
mov
sbb
mov
push
pop
imul
or
lcall
test
decb
lret
mov
fnstsw
mov
scas
imulb
rcr
mov
ss
xor
stos
adc
inc
popf
rclb
int3
orl
sbb
xor
xchg
imul
mov
cmp
mov
stos
aam
or
mov
inc
xchg
xor
das
mov
cltd
add
imul
ja
adc
imul
sub
and
repnz
aam
mov
mov
inc
loope
xchg
inc
test
pop
jg
cld
inc
loope
mov
ret
test
sbb
mov
push
imul
dec
loop
jo
int
push
pop
push
push
mov
xchg
jns
cmp
jmp
xchg
addb
pop
dec
mov
jo
or
stos
pusha
insb
filds
shl
mov
fidivs
les
out
xchg
ljmp
and
dec
pop
lods
and
and
xchg
outsl
cmp
inc
add
sbb
aam
fisubs
inc
nop
lea
in
fistps
cmc
cltd
dec
or
inc
js
adc
inc
arpl
dec
insb
out
sti
loop
negl
pop
or
imul
loope
jmp
stos
jno
cmp
lea
out
inc
cld
push
inc
pop
push
xchg
xchg
pop
mov
stmxcsr
jmp
enter
push
shll
mov
dec
repz
daa
add
cltd
int
popa
mov
and
lcall
scas
repnz
lahf
jp
push
or
inc
mov
xchg
pop
mov
fcomi
pop
push
sbb
lds
scas
bound
nop
bound
sbbb
xor
xlat
in
pop
dec
cmc
adc
jae
mov
mov
movsb
xchg
pusha
rcrb
sbb
mov
out
mov
dec
sbb
adc
xchg
sub
add
leave
pop
fcompl
push
add
cmpsb
sub
xchg
fildl
fdiv
addl
mov
push
push
jne
in
and
push
push
mov
xchg
or
out
push
xor
stos
jmp
mov
xchg
mov
out
cmp
dec
pop
sub
shlb
xchg
xor
insl
aaa
add
push
aam
adc
adc
pop
lcall
mov
cmpsb
pop
xchg
in
roll
xor
scas
leave
out
xor
xchg
out
and
xor
outsb
inc
ret
pusha
jnp
scas
mov
lret
push
daa
stos
in
fnstenv
adc
inc
pop
mov
pop
fildl
mov
sub
mov
les
notb
dec
lcall
xchg
daa
mov
mov
xlat
subb
lcall
adcb
dec
ss
sbbl
jg
dec
jl
in
mov
adc
lods
std
or
dec
or
in
mov
xchg
jne
js
js
jg
shrb
jge
loopne
push
insb
jbe
stos
sbb
cli
push
push
ja
or
mov
xchg
rorb
icebp
xor
xor
lock
mov
test
ss
fs
cmpsl
inc
add
sahf
jp
pop
test
jge
or
jge
int3
leave
push
sub
inc
outsb
test
pusha
inc
cmp
dec
shr
pop
jns
sahf
or
aaa
pop
jp
add
out
sub
sub
testl
mov
xchg
or
pop
or
shl
sbb
or
aad
shr
mov
sbb
jp
jno
fisttpl
add
loop
rcrb
or
mov
cmpl
data16
out
je
int3
incl
xor
adc
cmp
push
mov
aad
out
mov
or
mov
pop
insb
mov
push
xchg
xchg
xchg
xor
hlt
cltd
cmp
cmp
cli
dec
push
inc
dec
xchg
xchg
adc
xchg
mov
out
mov
dec
inc
add
pop
and
das
jne
or
xor
xor
shlb
xchg
push
mov
mov
add
outsl
call
and
je
xor
inc
fdivl
jmp
xor
lret
fcom
stc
or
xchg
adc
add
fs
jne
shrd
movsbw
mov
pusha
mov
test
pusha
cmp
add
push
push
movb
test
movzwl
inc
or
mov
pushl
add
test
pushl
mov
call
rcrb
mov
pop
subl
repnz
je
mov
jl
jno
jle
divb
push
pop
sarb
and
sub
fidivrl
sbb
pop
sahf
out
ljmp
inc
fdivrs
scas
mov
es
and
and
mov
in
leave
mov
jmp
dec
xor
mov
inc
pop
and
mov
dec
lret
movsb
test
stos
in
push
adc
outsb
jo
int
add
jnp
jnp
insl
stos
out
aad
lds
or
int3
icebp
add
jno
xchg
xchg
aam
and
cmc
mov
aaa
aas
xchg
inc
lods
adc
bound
call
popa
mov
sbb
push
xchg
loope
jns
mov
push
loope
movsl
jbe
out
in
or
hlt
lahf
add
stc
mov
mov
mov
push
mov
add
std
icebp
and
enter
and
hlt
pop
in
ja
out
mov
mov
sub
add
sbb
es
call
xor
cmpsl
cmpsl
lret
cmp
mov
outsl
cltd
repnz
mov
jmp
add
dec
gs
popa
addr16
outsl
js
add
fs
jb
pusha
movl
pushf
push
pushl
ret
test
clc
push
test
mov
call
movl
mov
movl
pusha
lea
jmp
jo
cmpsl
push
outsb
inc
sbb
test
cmc
mov
insl
push
fisttpll
stc
pop
push
stc
or
aaa
pusha
orb
imul
fdivr
cli
mov
and
sub
and
mov
cli
xor
cmc
inc
das
add
inc
and
js
pop
push
fidivl
or
shlb
int
push
pusha
js
inc
addr16
push
andl
cwtl
mov
and
jb
add
test
or
stos
add
pop
inc
xchg
adc
bound
outsl
neg
mov
sbb
sbb
es
test
bound
sbbl
ljmp
roll
lods
dec
cmp
xlat
in
shll
add
enter
add
sbb
jl
imul
scas
sub
pop
adc
movsl
outsb
test
aad
fcomip
rcr
mov
push
in
int
push
cmc
pop
imul
mov
ja
inc
dec
scas
js
push
adc
sbb
adc
pop
xchg
rcr
ret
lahf
push
jb
popa
push
cltd
fsubrp
pop
popf
or
pusha
shld
mov
mov
and
stc
cmc
cmc
add
sub
test
pusha
pusha
add
call
add
push
pushf
push
mov
bt
test
pushl
lea
je
cmc
call
lea
call
jmp
push
pushl
popl
pusha
bt
cmc
cmp
mov
mov
push
lea
ja
call
add
dec
outsl
arpl
inc
jb
add
leave
push
push
jmp
cmp
lea
add
cmp
bsf
movzbw
call
jnp
mov
aas
push
xchg
ret
adc
push
xchg
xchg
pop
push
aam
dec
stos
je
shrl
dec
pop
add
mov
sbb
enter
mov
inc
cmp
divl
cmp
push
jl
jnp
stos
sbb
mov
jecxz
push
roll
xor
je
xor
inc
sub
add
inc
popa
stos
lea
xor
daa
mov
mov
dec
data16
xchg
leave
leave
loope
jp,pt
jecxz
leave
outsl
jno
in
mov
outsb
inc
addr16
popf
mov
insb
imul
clc
xchg
lea
or
rcll
add
dec
pusha
fsubrp
and
cmp
mov
or
lods
sbb
movsl
ret
lds
ret
nop
aam
fdivl
mov
or
sbb
jb
in
inc
fs
lea
mov
xor
ficomps
xchg
test
add
sarl
outsb
movsb
stos
shl
fs
shl
and
mov
push
xchg
dec
adc
pop
push
adc
mov
mov
es
in
into
ffreep
and
idivl
sbb
mov
sub
xchg
mov
lret
imulb
inc
iret
lea
mov
lods
cmp
outsb
inc
mov
push
add
rolb
xor
cmpsl
leave
dec
jbe
daa
pop
cmp
into
mov
jg
mov
push
cmovns
mov
jns
sti
push
pushf
cmp
loopne
bound
aas
lds
sub
mov
pop
mov
mov
adc
add
sarl
xor
dec
outsl
xchg
stos
jl
fs
and
jl
hlt
inc
lods
push
xchg
mov
jnp
loopne
push
mov
push
pushf
jmp
hlt
jg
in
xor
bt
cmp
cmp
mov
pushf
movw
call
mov
call
stos
rcl
outsb
inc
mov
xchg
push
pop
in
and
or
adc
push
jo
cmp
jl
jmp
sbb
cmpsb
jle
xchg
sbb
mov
cs
xchg
adc
or
push
jmp
adc
mov
bound
lret
repz
or
das
pop
lods
aaa
bound
repnz
add
fimull
add
pusha
mov
stos
nop
jb
or
out
or
push
pop
arpl
xchg
pushf
inc
test
daa
les
jmp
inc
adc
add
lcall
addl
fdivrs
inc
push
decl
mov
aas
jl
testb
in
jmp
xor
push
test
popl
sbb
xchg
fidivrl
repz
mov
fcoms
ret
pushf
xor
int
insb
rorb
inc
push
subb
xchg
push
stos
scas
pop
nop
add
cli
pushf
pushf
in
or
cmp
add
shll
fnstcw
cltd
pushf
xor
test
mov
fsubs
xor
add
data16
lea
aam
mov
mov
mov
daa
sti
das
outsb
lods
gs
or
fs
or
push
adc
mov
inc
cmp
push
cmpsl
fsub
call
mov
addr16
subl
add
sti
daa
dec
xchg
mov
push
cltd
mov
xchg
fnstcw
sbbb
ss
scas
mov
scas
mov
fidivs
mov
sub
movsb
lret
ret
mov
xor
ds
sti
int
test
push
mov
mov
stos
enter
add
test
mov
lret
push
int
inc
sbb
lret
adc
sub
outsb
cwtl
pushf
stos
xlat
fimuls
xor
mov
fldenv
adc
lock
jno
lret
add
inc
mov
outsb
lahf
les
and
xchg
mov
mov
test
and
ja
popf
xor
movl
mov
add
ds
xlat
int
imul
pop
out
outsb
cld
enter
add
jno
and
xor
sarb
cmp
cwtl
jns
xchg
shrb
mov
push
cmpl
hlt
sbb
mov
int
cmp
jmp
push
xchg
add
ret
jecxz
and
jo
lcall
cli
clc
ret
jnp
ja
jbe
inc
popf
mov
movsl
and
inc
push
and
aaa
loopne
xchg
lret
aaa
inc
outsl
sub
sahf
or
testb
xor
mov
into
shl
push
jle
inc
mov
std
pop
lods
dec
dec
push
insl
out
inc
dec
ret
cmp
aam
and
mov
mov
dec
scas
fucompp
sub
pop
add
cmovs
or
cltd
dec
push
repz
mov
ljmp
movsb
testl
in
sbb
je
cwtl
rol
jae
mov
add
pop
lahf
push
push
in
mov
push
mov
imul
test
add
inc
int3
mov
sbb
sbb
mov
push
adc
mov
fdivrs
notl
mov
sbb
dec
rolb
pop
or
daa
ja
test
pop
aaa
push
sub
jp
out
pop
sbb
cwtl
lret
bound
mov
jbe
pop
ljmp
jp
pushf
jbe,pt
ret
leave
loopne
or
add
xchg
fcmovnu
xchg
mov
int3
mov
outsl
test
cmc
sbb
mov
sti
lahf
push
ret
mov
dec
cmpsb
loope
lret
in
rorl
and
lret
adc
dec
icebp
cmp
and
jl
mov
mov
int
push
inc
xor
and
scas
adc
nopl
jbe
lock
sbb
inc
xchg
jp
jecxz
push
xchg
lret
iret
in
push
pop
jb
mov
xchg
mov
sbb
inc
hlt
push
es
pushf
rol
std
inc
inc
push
xchg
mov
or
imul
mov
enter
imul
sbb
xchg
jg
inc
dec
dec
test
sahf
clc
popa
push
and
iret
test
addl
insl
fistps
fldl2e
pop
xchg
sbb
xchg
bound
pop
into
out
repnz
pop
pop
mov
mov
add
imul
neg
pushf
jmp
movsl
enter
inc
iret
out
sbb
ja
rcr
and
bound
xor
sti
fnstenv
xor
lds
mulb
pop
inc
lea
mov
cmp
ds
test
lds
sti
arpl
xor
adc
cmpsl
push
insb
jo
movsl
push
jno
mov
icebp
sbb
xchg
enter
mov
add
fs
imul
add
fimuls
std
insl
inc
lret
jmp
cmp
pushf
cltd
fdivr
stc
daa
dec
dec
arpl
testb
adc
stos
daa
mov
popa
push
or
adc
cwtl
or
add
sbbb
jl
pusha
inc
push
in
ret
sti
push
shl
out
mov
xchg
push
push
cmp
int3
mov
test
rolb
sbb
mov
pop
movsb
sub
insb
mov
mov
stos
adc
imul
add
ja
mulb
test
inc
xchg
in
push
push
push
jns
ror
add
lret
aas
mov
xchg
stc
ds
sbb
xchg
fs
sti
iret
ret
cs
jb
popa
or
dec
dec
pop
popa
xorb
pop
aas
add
xchg
insl
imul
icebp
je
popa
add
or
or
mov
into
ljmp
sti
jle
sub
mov
dec
jno
push
push
ret
pop
jo
and
add
ss
lret
cmc
jl
rcrb
es
cmp
add
lods
sbb
in
popa
mov
sbb
mov
jle
pop
insb
push
dec
cmpsb
jle
xchg
mov
jecxz
add
add
mov
dec
out
jmp
sub
lahf
pushf
cmp
or
mov
jg
pop
adc
icebp
inc
movsb
mov
in
cltd
cmp
inc
inc
aad
jecxz
insb
inc
rorb
mov
cwtl
repz
mov
jecxz
mov
xor
in
iret
loopne
cmp
rcll
cs
cmpsb
inc
xlat
js
shl
in
daa
push
xor
push
jg
mov
cmp
dec
push
lock
dec
fists
sub
in
mov
push
push
out
and
push
ret
xchg
adc
inc
mov
or
xchg
int
push
cmpsl
adc
sub
out
sub
lret
js
in
xor
add
insl
inc
sbb
movsb
mov
jg
test
lods
or
xor
sbb
mov
hlt
lock
shl
jle
movsl
mov
push
mov
and
arpl
push
and
xchg
dec
mov
cltd
mov
ljmp
sub
mov
add
dec
pusha
rcr
dec
add
test
pop
pop
jl
cmpsl
mov
mov
pop
sbb
faddl
sti
insl
inc
shl
adc
sub
mov
js
bound
in
jae
or
movsb
addr16
ds
cld
add
testl
addl
imul
lea
and
add
xchg
push
imul
scas
pop
push
movl
push
or
mov
leave
test
pop
mov
add
pop
push
mov
repnz
cs
jo
push
xor
ja
mov
fs
jb
cmc
clc
cmp
push
push
pushf
lea
jae
setnp
mov
pushf
pushf
sar
mov
neg
mov
movl
call
js
iret
stc
insl
inc
push
sub
or
testb
xchg
in
test
das
scas
rcll
popa
cs
push
xchg
mov
or
pop
inc
inc
rcrl
adc
jl
js
add
inc
pop
imul
je
sub
push
out
in
clc
and
push
imul
jo
adc
mov
pop
out
dec
push
xor
adc
scas
mov
push
ret
into
or
push
movb
mov
repz
ret
and
adc
and
pop
sahf
mov
outsb
jbe
jl
add
lahf
adcb
xchg
jmp
out
outsl
adc
jbe
cmp
mov
jb
mov
pop
xor
and
out
stos
or
fstpt
enter
sbb
add
arpl
scas
in
andl
adc
mov
shlb
out
in
jne
lret
dec
jno
mov
shll
data16
insl
stos
cmp
inc
cmp
lock
xor
xchg
repz
iret
add
lcall
cmc
int3
addl
lahf
jecxz
in
int3
and
outsl
adc
push
cmp
push
or
loopne
stos
cmp
scas
das
mov
scas
rcrb
sbb
out
mov
cmp
and
sub
push
lret
jg
addb
rcll
lods
ds
jge
mov
push
push
add
daa
push
sbb
xchg
xchg
inc
mov
cwtl
pusha
lahf
movb
mov
mov
lea
movzbl
lea
bswap
lea
pushl
pushf
movl
pusha
pushf
push
mov
pushf
pushl
ret
pushf
push
lea
ja
pushf
movw
pusha
lea
jmp
mov
imull
cmp
fdivl
test
push
out
cltd
mov
pusha
xor
jge
add
mov
outsl
stos
cmc
in
and
filds
add
jp
in
cmp
out
mov
xchg
clc
popa
xlat
data16
inc
or
dec
xchg
movsb
loope
es
push
rcrb
sbb
add
enter
pop
sti
lret
jle
mov
push
aam
shrl
jo
pusha
mov
push
add
lods
push
ret
pop
testl
testb
dec
clc
mov
jmp
sub
push
or
movsl
fsubs
ja
roll
pop
dec
mov
icebp
dec
fistps
add
insl
inc
das
insb
xchg
les
xor
lahf
in
repnz
sub
out
xor
mov
mov
js
shll
pop
mov
insb
sub
mov
dec
push
into
jge
icebp
xor
mov
push
repnz
mov
mov
icebp
dec
sub
add
add
mov
sub
jno
aam
add
and
pop
and
or
test
dec
jnp
sub
mov
add
mov
test
push
mov
jg
jecxz
push
out
pop
jmp
jle
dec
xchg
cmpl
faddl
xchg
test
mov
shld
xor
mov
popl
pop
cmp
in
xor
push
lcall
notb
not
lea
lea
jl
lea
cwtl
movzbw
pop
call
jcxz
imulb
pop
lret
pop
imul
mulb
ds
xchg
shlb
out
rolb
and
xchg
adc
lahf
and
movl
int
add
push
ds
fs
push
push
jae
sbb
stos
lock
push
lea
neg
jno
rcl
pusha
and
pushf
out
adc
fwait
mov
xor
xor
out
xchg
mov
ljmp
or
cmpsl
sar
aaa
jnp
icebp
sbb
imul
cmp
cmp
loope
add
cmp
loope
adc
addb
mov
adc
js
xlat
mov
adc
xchg
push
sti
iret
dec
das
and
daa
adc
fcmovnu
sarl
rcrb
jmp
sbbb
iret
imul
imul
pop
fs
cltd
xor
sub
ss
push
add
lret
aam
push
sbb
leave
sahf
pop
xor
mov
jae
adc
inc
ss
scas
repz
data16
insl
inc
ret
xor
lods
ret
adcl
adc
mov
adc
xor
lds
rcl
in
adc
and
sub
xchg
pop
pop
mov
movsl
push
adc
jg
outsl
inc
pop
mov
xchg
jb
out
pop
cmp
mov
addl
fs
add
or
xor
mov
bound
popa
sub
and
mov
out
mov
mov
xchg
sar
push
inc
pop
imul
aaa
popf
aam
mov
sbb
bt
add
ror
movzbl
mov
shrd
pusha
jmp
push
imul
das
imul
gs
jne
mov
add
data16
push
add
lds
repnz
ret
cmp
pop
xchg
cmp
mov
jo
sub
sahf
sbb
add
pop
inc
popa
and
mull
inc
mov
add
in
xor
loop
xchg
cmpsl
push
push
into
mov
and
arpl
cmp
pop
mov
lret
lods
adc
fstp
nop
sbb
mov
ljmp
into
ljmp
or
repnz
jmp
add
xchg
repnz
inc
inc
pop
xchg
mov
xorl
sub
jecxz
outsb
dec
aad
xchg
cmp
jbe
js
out
inc
fs
add
xchg
mov
jne
mov
dec
mov
clc
push
in
dec
mov
rep
inc
movsl
int3
lds
bound
mov
and
leave
xor
out
mov
adc
test
xor
push
jno
inc
inc
sbb
sub
mov
pop
cmpsl
xchg
or
rcrl
lret
mov
jnp
cmp
add
cmc
xchg
clc
mov
jmp
aaa
arpl
and
and
mov
cmpsb
add
pop
pusha
mov
jmp
shlb
rep
inc
push
jno
mov
loop
and
xchg
repz
adc
int
mov
stos
lahf
mov
out
dec
popa
cmp
aad
fucomp
mov
lahf
adc
xchg
stos
inc
dec
cld
test
cmp
pop
xor
adc
negl
jnp
enter
stos
dec
sub
sub
ja
clc
adcb
lahf
popf
inc
jmp
fidivs
imul
divb
mov
arpl
sbb
mov
sbb
or
jl
ss
cmc
incl
fwait
mov
dec
daa
subb
pushf
aam
jns
les
fdivp
insl
inc
in
fs
scas
adc
adc
insb
fwait
jnp
add
cmp
scas
push
sbb
out
sbb
xlat
icebp
xor
sbb
out
filds
fildl
add
fsubs
jo
mov
sbbl
mov
mov
aas
and
jecxz
cwtl
or
stos
add
insl
inc
das
dec
xchg
dec
lods
xchg
jns
loop
inc
gs
popa
or
sub
mov
pusha
xchg
cwtl
mov
push
jp
pop
mov
aam
mov
je
repnz
push
mov
sub
xchg
push
dec
lret
ret
test
cmc
sahf
insl
les
scas
in
int3
xor
lods
jp
mov
out
ds
dec
push
or
divl
hlt
dec
into
sahf
pop
scas
rcrl
sub
lods
call
jg
aam
push
repz
scas
mov
adc
mov
ret
cmpsl
xorl
test
and
jmp
lea
ja
pusha
lea
jb
stc
bt
cmpb
jmp
movb
lea
je
bt
cmp
push
call
jmp
mov
inc
sub
mov
es
test
movsb
sub
sarl
push
outsl
in
cmpsl
es
add
cltd
add
push
inc
push
pop
push
sti
mov
mov
pop
and
shlb
mov
hlt
cmpsl
lret
or
repz
xor
jle
mov
call
nop
jno
shlb
dec
fsubrl
or
fwait
mov
sbb
or
cs
stos
lahf
ret
sarb
rol
add
stos
movb
lea
jb
clc
test
cmp
push
lea
jae
xor
pushf
pusha
mov
btr
ror
pop
mov
mov
add
stc
bsf
mov
bt
bt
bt
xor
stc
cmp
bt
test
repnz
push
pushf
lea
jne
inc
mov
shl
sub
add
mov
clc
clc
sub
bt
test
pushl
push
pushl
cmp
call
call
mov
out
insl
inc
mov
jo
mov
push
dec
pop
repnz
mov
lret
mov
sarl
pop
into
lds
jb
xor
cmp
xchg
xor
out
pop
movsl
xor
dec
inc
mov
sbb
xchg
adc
stos
in
sti
movsb
jne
mov
iret
push
fdivr
cli
call
dec
pop
out
ret
sbb
dec
cli
cmpsb
adc
add
fstps
popa
ljmp
jmp
push
testb
mov
dec
dec
shll
pop
imul
loop
sbb
popa
mov
imul
inc
push
movsl
popa
jbe
lret
adc
lahf
inc
jmp
push
xor
mov
int
mov
inc
mov
test
dec
imul
or
dec
ja
jo
push
push
out
data16
lahf
or
stos
fldt
fucom
sub
jnp
lret
ss
leave
lahf
lret
leave
test
mov
test
lods
sahf
dec
pop
sbb
scas
xchg
aas
mov
fstpl
push
fwait
les
lret
jbe
add
push
fwait
aad
pop
pusha
dec
and
jl
mov
xchg
dec
in
sti
in
insl
inc
enter
loopne
jmp
push
cmp
mov
arpl
mov
push
xchg
add
sbb
adc
add
mov
push
jbe
push
into
mov
sub
xor
btc
sub
mov
inc
push
add
push
ljmp
mov
xchg
lret
push
mov
hlt
test
mov
fcmovne
push
inc
xor
insb
and
insb
test
fwait
dec
sub
cmpsb
xchg
jns
out
push
test
in
or
inc
xchg
push
movsl
sbb
dec
pusha
cmp
int3
mov
clc
bt
cmp
call
lea
jno
push
push
jmp
push
push
js
insl
inc
dec
mov
insl
insl
jp
rcll
sbb
stos
lcall
mov
iret
inc
dec
pop
aaa
jb
out
pushf
xor
repnz
xor
dec
push
sahf
ds
pushf
daa
test
aaa
cmp
mov
or
sahf
jne
pop
orb
sub
mov
mov
gs
jno
test
cmp
mov
adc
mov
call
pushf
push
mov
push
mov
lea
jmp
inc
mov
lea
sar
sub
mov
shl
cmc
rcr
lea
add
cmp
rcr
inc
shr
sbb
mov
rol
pushf
add
bswap
mov
lea
push
mov
seto
not
pusha
lods
stc
cmc
stc
neg
pusha
mov
mov
push
dec
push
clc
not
push
push
cmp
clc
sub
cmc
cmc
lea
jle
cmc
cmp
setb
jno
lea
movzbw
movsbw
pop
jbe
push
mov
lea
ja
push
pushf
lea
jb
call
inc
loope
ret
xor
pop
imul
xorl
pop
sbb
loope
ret
mov
or
popa
xchg
ja
jecxz
stc
mov
cmpsb
int3
push
jmp
inc
out
xchg
lcall
fnstsw
popf
or
shl
adc
mov
mov
loop
add
rcr
inc
out
dec
mov
mov
push
xchg
es
lea
push
xchg
stc
popa
xor
push
lret
test
xor
cmp
int
inc
add
pop
pusha
xchg
gs
cmpsl
add
mov
lea
jne
push
jbe
push
pushf
movl
pushl
pusha
pushl
lea
jmp
pushf
movl
lea
call
call
pop
add
ljmp
jnp
fcomip
and
push
test
mov
pushf
test
pop
std
inc
add
sub
mov
sar
in
je
xor
cmp
repz
sub
add
andb
xchg
mov
fbstp
inc
inc
pop
push
xchg
shll
push
dec
incb
pop
xchg
dec
je
out
pop
mov
dec
dec
outsl
push
and
push
push
out
cwtl
lret
inc
mov
insl
jbe
lcall
shll
xor
jmp
std
xchg
insl
inc
je
mov
push
pop
push
test
jbe
mov
sbb
push
das
cmp
sub
xchg
cmp
jp
pusha
and
cmp
jb
push
mov
ss
loop
aas
fcmove
lock
scas
or
lea
cmp
loop
add
leave
push
andl
rorb
or
push
mov
in
sub
xchg
cs
mov
rol
pop
jecxz
std
call
movl
jmp
pop
insl
test
mov
lock
mov
sub
out
mov
xchg
adc
adc
sub
shlb
push
adc
je
cmpb
je
out
les
outsl
lock
clc
ljmp
inc
hlt
icebp
lock
decl
sub
and
ret
imul
add
fwait
mov
fimuls
add
fldcw
inc
sub
clc
in
push
mov
sub
pop
pusha
imull
adc
push
out
jg
aaa
loope
add
sub
inc
and
mov
clc
mov
jno
sub
movsb
jecxz
and
xchg
aam
mov
stos
and
ljmp
jmp
fcom
mov
mov
sub
cmpb
jge
push
stos
rol
push
push
mul
and
sbb
popa
mov
or
and
push
scas
xchg
mov
call
mov
cltd
mov
loopne
mov
mov
adc
jmp
jge
cmpsl
add
fcoml
loopne
test
out
push
mov
lock
jmp
mov
shlb
mov
lea
loopne
fsubrs
add
outsb
dec
bound
popa
inc
out
shlb
nop
push
xchg
mov
mov
and
outsb
pusha
dec
sub
pop
sbb
mov
pop
add
cmp
push
push
xchg
movsl
stc
jmp
adc
jnp
js
stos
add
xor
outsb
sbb
mov
sub
outsl
and
test
lret
loope
jno
sbb
dec
push
and
adc
mov
adc
repnz
push
mov
fnsave
pop
sub
mov
loopne
jno
inc
cmpsb
js
push
add
mov
push
push
mov
bound
inc
inc
in
pop
mov
popa
loope
mov
pop
sbb
xor
push
xor
pop
sbb
and
repz
ja
mov
jl
jne
jmp
xchg
mov
mov
and
mov
in
sub
mov
push
hlt
add
repnz
fildl
rcl
add
push
cmpsb
loop
stc
and
sbb
sti
and
mov
adc
insl
sbb
fs
mov
xchg
rcrl
nop
insl
into
daa
popa
js
fsubr
in
out
in
pusha
mov
bound
adc
aaa
pop
xlat
pop
dec
sbb
repnz
cmp
outsb
inc
push
insb
out
das
push
bound
in
push
fsubrs
mov
push
sub
pusha
nop
jmp
mov
add
inc
jle
test
cmp
stos
fs
jecxz
xchg
imul
jmp
xor
bound
imull
sub
fs
insb
pop
sbb
arpl
sbbb
adc
mov
push
repnz
fsub
cmp
xchg
insb
adc
add
ss
lock
lds
cmpsb
arpl
and
insb
in
push
sbb
les
mov
jmp
mov
or
in
loopne
mov
or
fstpl
je
scas
roll
mov
xor
sbbl
test
inc
push
push
sahf
popf
push
pop
stos
jmp
or
xor
iret
repnz
and
mov
aas
ret
mov
cmp
lret
or
push
pushf
sbb
and
inc
lods
ds
pusha
lret
push
fs
adc
xorb
jmp
roll
dec
outsb
ret
aam
push
mov
jecxz
int
mov
stos
inc
and
popa
push
test
movsl
inc
push
in
push
jmp
sub
pusha
nop
outsl
xlat
jl
ret
and
in
adc
fs
in
subb
in
int
aam
lea
bound
push
imul
clc
stos
jae
inc
push
lcall
sbbb
test
data16
xor
xchg
xor
ret
fisttpll
cmp
push
bound
lods
cltd
fdivs
or
inc
pusha
xlat
add
sbb
push
mov
arpl
lcall
mov
loope
sbb
out
lds
and
mov
dec
insl
mov
sbb
jb
push
pop
pop
in
push
fidivrs
popf
subb
shll
mov
dec
xchg
mov
adc
xor
add
xchg
fdivl
mov
insb
out
push
addb
frstor
iret
pusha
jmp
inc
pop
fistpl
addr16
out
into
push
lds
bound
mov
pop
popa
stos
jnp
fwait
push
clc
popa
loopne
pop
dec
xor
push
or
jecxz
je
pop
iret
push
scas
ja
cltd
jo
inc
jmp
jno
movsb
jae
js
sub
and
lahf
cmc
inc
mov
pop
loopne
xorb
and
fsubrl
and
mov
loopne
xor
jecxz
xchg
insl
push
jae
test
outsb
aam
adc
xchg
cmc
add
stos
xchg
sub
ret
sahf
push
xchg
push
pop
add
roll
outsb
sbbl
ret
test
les
push
xchg
pusha
adc
scas
stos
dec
cltd
xchg
into
insb
pop
cmpsl
cmp
jae
fistl
push
outsl
lds
popa
js
add
cmp
aam
scas
pop
and
data16
sub
sbb
and
push
sub
mov
push
leave
fcoml
into
lahf
cmp
cmp
out
sub
sbb
dec
test
bound
in
cmpsb
std
mov
cmp
jle
shl
aam
jo
jmp
mov
pushf
shr
inc
jb
scas
and
cmpsb
shl
xchg
pop
fs
pop
cmp
push
ljmp
push
mov
enter
sbb
lret
dec
sub
mov
lret
pusha
enter
adc
adc
cld
add
push
xchg
fcompl
shlb
test
and
push
ret
push
lods
ds
std
shrb
loope
popf
sub
orl
dec
call
iret
or
test
lret
push
adc
xchg
hlt
scas
mov
lret
lcall
jg
mov
pop
xlat
in
iret
push
pop
cmp
shlb
inc
sub
test
xchg
pushf
mov
inc
scas
sbb
adc
out
sub
cwtl
lahf
ds
mov
fs
fdivr
mov
add
push
les
xor
sub
adc
cwtl
cmpsl
inc
ss
in
jo
push
mov
mov
add
adc
xor
mov
gs
ja
mov
cmp
iret
pop
fimull
push
mov
push
push
xchg
xchg
pop
rol
push
mov
lods
xchg
fwait
push
inc
push
in
jns
sub
push
dec
and
xchg
sarb
mov
sbb
inc
js
popf
insb
jno
scas
dec
out
outsb
movl
stc
push
popf
cmpsb
xchg
mov
mov
xor
test
lret
in
lock
std
xchg
pop
push
push
pop
cmpsb
shll
sub
bound
jg
es
outsb
arpl
add
cwtl
shlb
rcr
out
mov
mov
rorb
sbb
ljmp
popa
test
push
xchg
push
push
xor
loop
xchg
outsl
fsubs
call
data16
stos
inc
mov
mov
aaa
xchg
stos
xchg
push
scas
dec
shll
in
fadds
nop
push
xchg
out
cmpl
cmc
pop
movsb
pop
mov
pop
inc
add
inc
mov
insb
xchg
inc
adc
xor
iret
sti
out
pop
xchg
sub
mov
iret
in
test
or
jo
in
mov
mov
loope
sub
scas
sbb
fs
rolb
mov
popa
inc
inc
push
out
into
ret
leave
add
jmp
jmp
call
and
repnz
push
in
push
sarl
sbbb
lret
scas
imul
divb
mov
inc
push
js
mov
push
jg
xchg
movsb
mov
movsl
arpl
mov
pop
lock
js
inc
lock
push
je
push
and
or
bound
in
fadds
mov
mov
jp
movsb
jo
jbe
jb
and
stc
in
shrb
outsb
shll
mov
in
dec
std
out
shlb
mov
add
loop
into
in
push
addr16
mov
mov
fbld
neg
sarl
jle
and
frstor
xor
fists
sahf
ja
sub
aas
and
subps
out
arpl
or
rclb
out
pop
mull
ret
add
mov
scas
push
jbe
inc
dec
call
mov
insb
mov
jnp
xchg
loopne
call
scas
push
daa
inc
add
mov
push
dec
inc
insl
mov
adc
pop
sub
fdivrl
dec
mov
xlat
mov
sbb
xchg
outsl
lods
iret
mov
sbbl
bound
cmpsl
ljmp
shlb
adc
in
mov
shll
xchg
mov
pop
inc
push
std
test
nop
aam
rcll
dec
les
out
mov
outsb
mov
pcmpgtb
mov
cld
rcl
push
push
push
push
mov
push
jnp
inc
pop
xor
test
push
ret
pop
xor
pop
lods
pop
jge
pmullw
xchg
jb
rep
mov
cltd
pusha
cld
call
outsb
fcomi
mov
out
mov
pop
outsb
push
cmp
and
iret
and
sbb
jmp
mov
pusha
xor
bound
std
dec
cs
lret
push
lcall
push
out
cmp
roll
nop
or
arpl
imul
into
data16
lret
mov
das
push
or
ljmp
fcompl
aad
sbb
shr
ret
sub
hlt
pop
mov
les
xchg
jmp
mov
push
push
fsubr
pop
inc
cmp
inc
push
pop
lcall
or
dec
jno
push
insb
sbb
fnclex
ret
addr16
add
pop
faddp
sub
leave
push
jns
stos
pushf
call
loop
popa
fs
xor
push
shr
rol
aam
int3
pop
push
pop
push
push
jmp
lahf
adc
and
sub
or
bound
ja
xchg
adc
test
cli
cmp
repz
filds
in
inc
loopne
sahf
or
iret
rcrl
pusha
ss
enter
lret
add
lock
sbb
loop
mov
stc
outsl
insl
es
pop
mov
test
jno
outsb
stos
hlt
inc
xor
fucomp
push
jb
push
xchg
lahf
jae
fdivs
outsb
or
lret
aaa
scas
push
push
or
push
push
add
out
cld
push
xchg
push
or
add
bound
jmp
push
pop
mov
decl
daa
inc
and
in
push
out
xchg
cmp
jge
inc
fcmovnbe
inc
jmp
dec
lret
pushf
roll
std
xchg
xor
insb
jne
imul
out
mov
in
jmp
andl
sub
pop
outsb
loopne
mov
fldt
addr16
arpl
sub
mov
adc
fucomip
movsl
adc
dec
adc
jns
imul
pop
pop
aas
or
dec
jmp
inc
sbb
mov
push
fimull
or
xchg
mov
mov
cmpsb
adc
out
fstl
orl
sbb
xchg
pop
cmp
mov
sub
fucom
ficoms
lods
out
mov
fs
test
jmp
push
shr
stos
push
inc
jg
popa
fldt
cwtl
insb
mov
jecxz
in
test
mov
insb
js
loop
push
pop
lret
test
fildl
ljmp
mov
leave
push
movl
fldcw
or
cmp
insb
loopne
jne
iret
push
sub
cmp
stos
xor
repnz
pop
dec
push
adc
daa
xchg
adc
popf
push
xor
icebp
mov
xchg
sbb
mov
push
pop
mov
jmp
in
sbb
mov
fucomi
jg
jnp
fwait
ja
sub
fistps
test
xchg
pop
sti
popa
daa
call
push
adc
cs
mov
xchg
sub
adc
push
sbb
push
js
sub
mov
mov
cs
popa
ret
lahf
popa
icebp
jo
aam
loopne
in
push
cmp
push
ret
jecxz
cmp
out
in
stc
push
in
xchg
fdivrs
mov
inc
push
add
mov
in
dec
shrb
pop
cmp
fidivrs
sub
int3
inc
push
loopne
rorl
push
repz
decb
mov
in
fsubrl
das
fwait
test
iret
shl
mov
push
sub
mov
outsb
mov
jg
mov
cmp
push
loop
sub
repz
jo
jb
mov
fsubr
je
mov
in
sub
rol
mov
adc
bound
or
call
cmp
dec
insl
ljmp
cltd
cli
pop
push
mov
and
and
xchg
xor
jmp
loopne
pop
sar
mov
outsl
outsl
xchg
jo
pop
add
outsl
shll
pusha
out
loop
out
sbb
insb
add
xchg
scas
and
mov
push
loopne
mov
mov
fstl
and
je
call
lods
fsubs
bound
fcmovu
cmp
out
mov
jmp
popf
jecxz
test
push
loopne
int3
sub
insl
int
pusha
test
call
mov
lods
call
dec
popa
mov
cs
das
out
scas
pop
pop
mov
lods
in
imul
imul
mov
fnstsw
outsl
push
pop
outsb
xlat
in
and
in
add
lods
pusha
out
sbb
lods
mov
movsb
into
out
jbe
sub
in
push
lods
sbb
outsb
scas
sub
imul
aas
and
in
aas
mul
jecxz
loopne
arpl
and
int3
test
pushf
bound
call
add
call
mov
pop
and
and
out
mov
imul
ljmp
fs
adc
push
outsl
insb
in
inc
adc
outsb
movsl
jmp
jmp
lds
and
outsl
outsl
inc
out
fisubs
out
movsb
sub
enter
enter
out
outsb
fisubrs
icebp
bound
insb
insb
test
test
sbb
loopne
add
frstor
fnstsw
cmpsl
cs
into
loopne
lahf
jmp
cmpsb
int3
test
data16
jbe
int
fucom
jnp
scas
add
loopne
mov
inc
das
jnp
cmp
gs
lahf
jmp
xlat
loopne
mov
arpl
out
xlat
loopne
imul
outsb
daa
imul
jbe
bound
cmp
cmp
xor
gs
addb
fdivrs
arpl
bound
fdivrl
enter
arpl
dec
in
pusha
enter
mov
mov
loope
subb
popa
iret
ret
or
inc
xchg
in
add
inc
pop
jmp
push
cmpb
pusha
int
lock
cmpsl
cli
mov
push
or
mov
nop
push
mov
mov
push
out
pop
xchg
shlb
cwtl
loope
push
aaa
in
xchg
enter
aas
inc
mov
push
fwait
adc
jmp
fs
repnz
push
cmpsb
shll
stos
dec
xchg
test
sub
inc
push
jecxz
or
loopne
popa
jo
in
int3
aam
bound
scas
jo
xor
mov
push
pop
sbb
hlt
ret
xor
push
jo
pushf
push
sti
int
push
rcl
jmp
cmp
dec
ds
dec
inc
push
cmp
je
or
jp
loopne
xchg
jnp
das
lea
clc
xor
pushf
sahf
test
das
sbb
sub
int3
gs
into
sub
add
sub
xchg
sahf
xchg
out
mov
mov
ja
sbb
adc
test
push
jns
xchg
mov
mov
loope
push
in
sub
jno
dec
lock
mov
add
dec
addr16
in
xchg
inc
push
mov
hlt
out
shll
xor
bound
fadd
pop
dec
loope
dec
mov
sub
repnz
xchg
cmpsb
jge
ds
mov
in
xor
cmp
and
pop
fs
mov
insb
push
fisttpll
stos
movsb
testb
jmp
or
shlb
cmpsl
jb
roll
rcrl
xchg
or
xchg
dec
or
push
sbb
ds
jns
fcmovnb
lcall
or
scas
push
pop
out
sub
bound
es
push
mov
out
stos
jmp
mov
aad
push
xchg
arpl
dec
cmp
adc
push
add
addr16
iret
push
add
mov
inc
mov
jbe
inc
push
ljmp
pop
inc
iret
add
shl
sub
sbb
adc
test
xor
in
in
cmpsl
push
pop
adc
adc
adc
xor
push
jno
sub
repnz
in
cwtl
es
ljmp
mov
cmp
mov
push
ficoms
jl
adc
cld
xchg
decl
lods
jno
lock
js
inc
inc
gs
cmp
add
inc
mov
call
std
js
mov
lods
ds
negl
push
and
cmpb
jns
inc
ret
push
add
xchg
call
push
call
xorb
xlat
push
lret
fbld
add
and
out
pop
daa
push
push
push
push
mov
pop
insl
xor
adc
mov
or
imul
popf
bound
push
js
ficomps
in
sar
and
push
mov
daa
popa
jns
es
pop
push
mov
fildll
movsb
push
mov
lds
xor
cmp
dec
fists
add
add
add
or
aam
pop
ret
mov
jno
jb
lahf
test
enter
jl
cltd
cmp
loope
sete
cmp
mov
mov
dec
iret
xchg
mov
mov
xlat
lds
xchg
lods
loopne
mov
rcl
bound
cwtl
jl
push
aas
sbb
mov
ret
lret
push
insl
inc
mov
add
rorl
mov
int
lahf
sbbb
xor
aad
sbb
push
jg,pt
mov
mov
out
mov
pusha
pusha
mov
pop
mov
mov
xor
or
cmp
rcrl
decb
ret
jae
roll
stos
clc
sar
shll
add
push
in
xchg
sub
pop
xor
ret
pusha
pop
shlb
jl
sbb
inc
loope
push
push
sbb
dec
mov
daa
sub
mov
bound
pop
mov
cmp
dec
pop
push
das
sub
lahf
lods
push
xchg
in
das
and
das
xor
push
arpl
xchg
xchg
pushf
or
sbb
mov
push
inc
stc
loope
mov
push
sbb
je
pop
cli
hlt
mov
cld
mov
cmp
repnz
lahf
les
sub
sbb
roll
mov
xor
mov
adc
xor
add
out
push
subb
add
jle
xchg
lds
neg
mulb
loopne
mov
mov
cwtl
adc
popa
adc
fwait
cmp
xchg
jecxz
pop
shrb
shr
and
push
movsl
fsubrl
bound
lods
lea
movsb
pop
mov
stos
mov
js
leave
jmp
mov
jo
mov
data16
push
rclb
push
stos
mov
cmpsl
ret
or
adc
inc
rcrl
lods
arpl
popa
adc
jne
xchg
jbe
push
stos
pop
jg,pn
xchg
cwtl
mov
mov
fnsetpm(287
dec
xorl
push
fisubrs
insb
add
jp
popf
and
popa
xchg
cmp
cmp
sbb
add
sub
jns
iret
js
xor
xchg
jmp
out
push
mov
loopne
int
fldt
fisubrl
mov
pop
or
xor
cmp
mov
out
movsb
fs
cmpsl
sbb
fdivs
cltd
dec
or
outsb
gs
push
test
stos
sub
data16
cmp
cmp
xchg
cltd
cli
ficoms
cmp
mov
inc
xchg
xchg
mov
mov
in
out
push
or
and
subb
push
in
xchg
lret
xchg
jle
add
mov
pusha
rolb
pop
jg
fisubrs
aas
pusha
xlat
out
jmp
pop
ret
sub
mov
cltd
iret
ja
push
in
mov
push
dec
sbbb
inc
adc
inc
in
ret
arpl
in
shrb
inc
dec
mov
das
xchg
mov
int
mov
jmp
out
mov
outsb
mov
insb
add
cmpsl
xchg
mov
es
jg
adc
or
jecxz
sbb
into
lds
popa
fcom
movsb
add
xchg
outsl
stos
mov
gs
sbb
jno
outsb
or
push
jno
shll
inc
fisubs
xor
jae
int
push
popa
aam
xor
andb
fbld
ret
popa
xchg
int3
and
cmp
jmp
push
fisttpll
push
mov
push
iret
into
jb
aas
dec
xchg
mov
add
lods
jo
fdivs
mov
xlat
int3
or
sbb
mov
popa
cmpsb
sub
adc
mov
popa
iret
popf
push
pop
adc
pop
in
add
cld
sbbb
movsl
insb
dec
fwait
jmp
push
mov
rcl
insl
mov
iret
xchg
test
jge
cs
aad
ret
cmc
push
and
rclb
popa
jnp
fldl
sarl
shlb
loop
and
cmpsl
sahf
rclb
inc
cmpsl
mov
jns
cmpsl
pop
jmp
and
scas
lret
jmp
jmp
dec
ret
rorb
int
push
cmp
dec
xor
outsl
out
push
lret
ss
pop
js
or
inc
sbb
xor
shl
lret
lcall
std
sub
cmpsb
je
jle
mov
fwait
jnp
dec
gs
lods
mov
rcrb
cli
loopne
or
hlt
cltd
in
imul
add
lods
sbb
shll
inc
push
scas
sbb
test
shrb
dec
xor
mov
cld
pop
and
push
sub
test
mov
inc
mov
jo
ret
loopne
cwtl
mov
rcrb
int
lret
call
mov
mov
lock
outsb
push
jmp
stos
mov
sub
jbe
mov
cmp
mov
jmp
push
scas
and
cld
loopne
ficoms
push
hlt
arpl
repz
mov
movsl
jge
lea
in
xor
dec
addr16
out
mov
add
inc
movsb
cltd
lods
cmpsl
jo
push
xchg
push
movl
xchg
int3
add
in
dec
dec
fildl
les
repnz
or
shlb
test
dec
jp
push
sahf
dec
xor
xchg
sarb
mov
and
cwtl
ret
pop
pop
ret
std
mov
push
rcll
adc
lods
pop
add
punpckhbw
cmp
imul
adc
addr16
out
mov
mov
pop
loope
out
insb
in
bound
subl
xorl
notb
rcll
and
fists
ss
adc
mov
in
ret
in
lcall
cmp
arpl
pop
xchg
push
scas
shrl
jle
lds
out
test
ficoml
xchg
andl
test
cmp
adc
sub
subl
aas
cld
lcall
js
fists
xlat
adc
call
and
mov
sti
nop
push
jnp
fwait
lret
mov
mov
fs
shlb
sbb
insb
sub
dec
mov
mov
bound
cmpsb
xchg
push
push
xor
fcmovnu
shlb
in
stos
jle
lret
xlat
add
push
scas
push
cmp
in
lret
sbb
cmc
popf
outsb
ss
cld
cmpsb
cmp
push
mov
call
outsl
push
mov
mov
in
insl
push
pop
dec
pop
jo
mov
cmp
push
sub
loopne
aas
cmp
in
sub
lahf
dec
sbb
punpckldq
xchg
lret
cmp
mov
out
dec
ret
sub
fbld
andl
xlat
test
gs
push
lret
bound
xchg
aas
es
xor
nop
mov
clc
rcll
test
mov
dec
lret
sub
inc
mov
and
nop
lock
pop
and
inc
pop
jle
dec
ds
stc
push
jmp
notl
inc
and
dec
cmp
cs
and
xchg
test
cs
and
subl
repnz
mov
lahf
adcl
add
jbe
xchg
scas
mov
mov
popf
sub
call
dec
arpl
xor
ret
popa
adc
sbb
mov
lahf
lods
les
pop
dec
ljmp
cmp
sub
fcoms
into
and
mov
outsb
pop
push
xchg
in
dec
movsb
dec
sub
int3
out
adc
movsb
in
repnz
loop
jg
or
movsl
scas
push
dec
add
call
jecxz
fadd
jmp
push
mov
in
jnp
sbb
dec
dec
jl
sbb
cwtl
ss
sahf
push
xchg
loopne
inc
addb
andb
lcall
in
adc
cmpsb
adc
and
mov
out
xchg
push
adcb
int
outsl
sti
sbb
mov
out
push
cmp
cmp
ja
sbb
lret
fistpl
xchg
mov
xor
mov
bound
outsb
pop
add
cmpsl
xchg
decb
test
cmp
jno
sub
pop
xchg
mov
mov
inc
sub
test
std
imul
and
xchg
mov
insb
xchg
test
and
jno
js
xchg
outsb
mov
outsl
sbb
push
fimull
mov
sbbl
pushf
lea
add
jns
mov
and
jp
jmp
mov
in
loopne
popa
push
ja
iret
lock
fidivrs
clc
xorl
cmp
scas
shl
mov
adc
cmp
stos
push
mull
inc
out
mov
mov
or
inc
les
push
scas
cmpsl
dec
push
movsb
add
lret
imul
mov
int3
push
sahf
mov
in
fldcw
adc
movsl
push
pop
mov
xor
jmp
or
imul
jmp
das
inc
push
or
and
push
dec
inc
ret
mov
sbb
fucomi
mov
loope
xchg
sub
lret
pop
sbbl
cmp
movsl
shl
xor
cmp
fildl
or
scas
subl
mov
out
dec
push
and
and
je
mov
and
xchg
adc
loop
aaa
insl
addl
sahf
inc
add
and
dec
or
pop
adc
add
xor
int
mov
pushf
push
lret
in
in
push
cmpsb
rcl
adc
popa
pusha
push
pushf
stc
cmp
cmp
into
das
ja
add
or
jbe
into
lods
ja
cli
pop
clc
ljmp
lret
addr16
hlt
popa
push
sub
cltd
leave
inc
add
adc
jg
mov
adc
fs
loopne
stos
or
mov
jmp
xchg
out
das
ffreep
and
cmc
orl
shlb
f2xm1
jg
lods
subb
push
lahf
xor
mov
lods
or
stc
sbbb
mov
sub
out
std
bound
in
popa
push
cs
adc
repz
sbbb
movsb
sbb
dec
in
pop
inc
outsl
adc
nop
pop
lahf
push
insb
jp
int
mov
push
add
dec
adc
cmp
pop
xchg
loope
push
ret
push
in
mov
adc
cmp
push
add
pusha
out
pop
test
int3
inc
add
pop
repz
ret
in
enter
sbb
pop
mov
out
outsl
lods
leave
mov
sti
or
mov
iret
arpl
lret
rolb
data16
ret
loope
pop
jle
mov
push
or
test
bound
je
cmp
sub
test
idivl
jl
or
ja
ret
ds
lods
xchg
cmp
pusha
adc
xor
jle
out
aam
fistpl
or
insl
les
in
nop
xchg
push
jmp
pusha
imul
xchg
sub
mov
jl
mov
mov
inc
in
and
aad
pop
push
outsb
xor
jecxz
xchg
mov
adc
jmp
or
dec
out
in
clc
js
lea
sub
repz
add
test
in
inc
mov
cmp
add
xor
or
xor
rorl
push
sub
push
and
pop
mov
cmp
aaa
ret
push
out
lds
adc
sbb
leave
int3
or
jmp
aam
ss
aam
fistl
push
inc
imul
inc
pop
jbe
cmp
fwait
push
adc
pminub
dec
sti
xchg
ror
enter
lds
in
cmc
pop
insb
add
sub
dec
into
test
loope
pop
jbe
cmc
xlat
outsl
push
test
inc
mov
inc
aas
scas
push
movsb
mov
mov
loope
push
jae
cmc
cmp
push
lods
les
inc
push
mov
inc
lea
fwait
inc
sbb
push
dec
and
sub
sbb
js
push
fsts
push
fadd
dec
dec
sbb
sub
push
sahf
nop
adc
outsb
mov
pop
mov
icebp
push
add
pusha
insb
test
ljmp
jmp
mov
pop
jle
bound
stc
mov
cld
aam
or
insb
fbld
sub
fdivl
out
sub
cwtl
arpl
sub
or
sub
aaa
shlb
scas
leave
cmp
filds
jmp
jecxz
leave
or
inc
cmp
in
and
in
push
cld
xchg
in
inc
pop
mov
scas
fwait
push
out
stos
stos
lods
inc
loope
bound
imul
cmp
stos
das
sub
mov
cmp
lods
adc
test
fidivrl
inc
out
push
into
scas
mov
jae
push
les
lahf
fxch
shlb
xlat
sti
out
jmp
xlat
test
adc
in
les
hlt
ss
out
insb
adc
push
rcrb
jo
xchg
pop
sbb
das
dec
push
sub
mov
jbe
in
insb
lods
test
lea
in
push
or
and
cmp
bound
push
pushf
aam
jne
mov
pop
movsb
push
sbb
cwtl
add
fwait
call
arpl
add
arpl
fsubrl
aas
pusha
into
xchg
loopne
stc
dec
mov
cmp
dec
and
in
sbb
push
add
fmuls
sub
jmp
dec
push
and
mov
inc
pusha
sbb
push
pop
cmp
ss
push
orl
je
xchg
sbb
push
inc
out
fistl
outsb
xchg
out
push
or
push
pop
pop
and
call
mov
push
sub
fsub
fs
andb
pusha
insb
imul
dec
inc
push
in
cmpsl
js
scas
push
in
add
cwtl
scas
mov
push
pop
outsb
lock
bound
mov
fistpll
shrb
adc
mov
and
clc
sub
scas
sbb
mov
mov
test
and
pop
das
call
xlat
add
int3
fs
data16
bound
jle
cs
and
inc
inc
pop
jg
loope
jmp
bound
jae
imul
mov
scas
push
fisttps
sti
mov
xor
inc
adc
pop
in
nop
mov
loopne
bound
dec
cmp
lret
cmpsl
les
fnstsw
push
pop
sbb
mov
stc
dec
inc
mov
pop
mov
pop
mov
loop
daa
mov
push
cli
push
sub
jno
out
call
mov
test
jmp
int3
sub
xor
lods
out
sub
popa
pop
je
sti
addr16
cmp
lods
in
je
les
and
jmp
sbb
pop
sbb
jg
sbb
pop
pushf
movsb
test
jb
add
and
rcrb
cmpsb
inc
mov
jmp
push
insb
xchg
scas
cmp
mov
gs
jnp
jne
jle
arpl
add
loopne
adc
cmpsl
cmp
sahf
shll
xchg
pop
sbb
jae
add
cmpl
ljmp
nop
mov
icebp
adc
mov
ret
cmp
lcall
dec
pop
in
jnp
jle
or
push
bound
int3
sub
sub
dec
xor
jns
cwtl
xchg
jbe
xlat
ja
mov
fadd
push
mov
mov
inc
bswap
sub
cmp
iret
gs
sbb
sbb
rorb
insl
add
imul
dec
xor
js
out
adc
insb
iret
iret
lahf
jge
movsb
cmp
aaa
jle
xchg
inc
in
and
icebp
imul
mov
sub
add
jnp
sub
rcrb
popl
and
or
pop
and
xchg
lcall
negb
fdivrp
sbb
int
and
fldcw
fldln2
pusha
sbb
fwait
aam
pop
movsb
jecxz
push
divb
add
mov
push
jne
mov
xor
imul
push
mov
mov
in
inc
push
adc
sub
cmc
ja
orb
leave
pushf
push
add
btr
dec
stos
xchg
xor
lods
dec
call
sub
dec
xchg
leave
xchg
cmp
fs
fisubl
rcl
movsl
js
inc
out
out
rdmsr
xchg
decb
mov
mov
test
shlb
jmp
cmp
lret
xor
jbe
lds
enter
jmp
jecxz
mov
test
inc
push
mov
xchg
and
and
or
stos
test
in
or
data16
push
cmp
inc
cwtl
sub
lods
mov
push
outsb
and
gs
rcr
sub
xchg
aam
sbb
test
push
jge
insb
xor
mov
cmpsb
inc
cld
jae
dec
jo
call
xor
rol
call
daa
mov
pop
xor
pop
xchg
pop
mov
jns
mov
push
movsb
lock
outsl
push
xchg
sub
bound
pop
mov
and
mov
cmp
js
in
iret
push
add
fldl
mov
repz
daa
mov
xchg
fmull
jl
movsb
sahf
xchg
rol
pop
cmc
leave
fcmovnb
sbb
mov
xchg
xchg
and
lock
scas
cmp
cmp
dec
pop
lret
jmp
je
cmp
mov
pop
cwtl
jns
inc
movsl
int3
bound
or
sbb
loope
in
and
stos
xchg
fsts
pop
ljmp
scas
mov
cmp
xor
ja
call
lock
in
aas
aad
movsb
mov
lcall
bound
popa
cmp
sub
sub
add
dec
call
insb
outsb
aad
sbb
mov
push
incl
cs
inc
cmp
pop
bound
in
xchg
or
flds
jmp
cmpsl
outsb
xor
cmpsb
sarl
jle
lds
add
leave
mov
lea
int3
fstpt
mov
push
adc
jae
mov
jmp
js
push
jne
fbld
mov
subl
call
push
jb
loop
repz
lret
dec
stos
add
lret
mov
fdivrs
lret
roll
stc
icebp
sahf
xorl
mov
ficoms
pop
dec
out
xlat
lret
lods
ret
push
test
mov
das
bound
roll
inc
out
pop
cmp
sub
mov
push
cltd
mov
sub
lahf
pop
gs
das
and
jecxz
inc
pop
or
push
inc
decl
lret
scas
out
and
mov
sbb
gs
mov
push
cmpsl
and
in
scas
mov
pop
movb
push
ret
xchg
sub
rorb
je
pusha
jmp
cmp
aas
or
mov
in
jns
push
lcall
sub
loopne
aad
xor
jne
mov
int
iret
imul
pop
xchg
sub
pusha
fcompl
out
cmpsb
das
insl
in
movsb
xchg
mov
cmp
fsub
insl
les
insb
xor
dec
mov
jg
or
cltd
out
adc
push
or
push
ret
fnsave
in
popa
das
push
adc
loop
insb
dec
out
lods
rcrb
and
cmc
dec
inc
pushf
add
bound
fmull
inc
inc
mov
mov
in
dec
out
inc
ret
scas
sbb
mov
xchg
mov
jle
pop
fldl
fldl
inc
mov
push
jp
fcoms
nop
out
lcall
or
jle
mov
jg
cmpsb
mov
pop
sarl
sbb
and
fucomi
jmp
and
adc
repz
cltd
out
dec
xor
inc
bound
pop
xor
notb
jno
lret
lock
aam
loope
push
aas
mov
lods
cmp
lret
mov
lods
push
sub
adc
push
cmpb
rolb
pop
shrb
dec
jno
fs
jge
add
jg
xchg
lods
jle
insb
lcall
mov
out
jg
aam
jecxz
mov
mov
je
xchg
mov
decb
cmp
mov
jnp
jmp
mov
push
in
push
fs
cmp
ljmp
shlb
sub
mov
cmp
add
add
enter
arpl
jae
add
xchg
cltd
inc
es
push
sbb
aad
xchg
and
inc
out
bound
jle
in
push
push
add
leave
add
call
loopne
lods
xchg
cmpsb
ss
pop
test
mov
nop
sar
fs
enter
dec
pop
or
jecxz
dec
int3
mov
hlt
pop
sub
add
fcom
adcb
sub
je
js
sbb
mov
or
ljmp
aaa
cmpsb
jae
lods
ja
add
cmc
test
jae
mov
insb
repz
jns
sub
adc
mov
aaa
jmp
je
out
ret
push
dec
jl
lods
jg
in
cli
js
in
test
cmp
cwtl
pop
jb
dec
stos
into
lods
mov
int
lret
cwtl
push
nop
fildl
mov
pop
shrb
bound
scas
stos
aam
cmpsl
pop
push
xchg
dec
insl
dec
mov
xchg
mov
mov
lahf
or
mov
or
jbe
in
sbb
pop
fwait
stos
mov
push
mov
lea
lods
jmp
cwtl
pop
pushf
mov
sbb
call
mov
cmp
and
sarb
cmp
jge
incb
test
mov
and
push
xor
imulb
add
adc
and
or
add
hlt
insb
jmp
xchg
mov
xor
pop
inc
fistl
pop
or
dec
push
lods
push
and
push
int
lret
dec
mov
sbb
jge
loope
in
xchg
pushf
adcl
push
nop
enter
push
call
xchg
mov
cmp
push
xor
bound
dec
add
or
jle
faddl
gs
ret
rcl
in
stos
mov
fisttpll
lds
fstps
sub
dec
aad
rorb
hlt
ret
jl
lea
push
ret
and
rorl
movsb
fimuls
scas
ss
mov
int3
dec
rcrl
pop
cmp
iret
sti
pop
aaa
ret
mov
int
jbe
mov
rcrl
adc
popa
mov
xchg
sbb
cmp
ret
loope
xchg
mov
or
jmp
clc
sub
xchg
push
shll
push
in
jo
mov
adc
cmc
sbb
inc
bound
sub
mov
mov
adc
push
mov
test
xor
jno
faddl
dec
enter
pop
pop
imull
dec
fmull
enter
push
push
cs
movd
lods
ss
xor
xor
test
inc
sahf
xchg
adc
cmpsl
insb
jo
cmp
andb
mov
and
cli
iret
jg
xchg
dec
add
repnz
xor
fisttps
ret
mov
mov
gs
jge
lods
gs
pop
shrb
cwtl
adc
mov
push
pushf
lea
cmp
xchg
push
cmp
je
jecxz
sete
nop
sub
pop
push
xorl
mov
int3
call
mov
jmp
enter
lcall
inc
popf
xchg
imul
or
in
sub
dec
int3
call
leave
sbb
mov
shl
push
and
fiaddl
and
lcall
test
pop
mov
fwait
jecxz
cwtl
xor
and
mov
nop
lcall
adc
mov
adc
jle
imul
daa
aam
loop
movsl
mov
xlat
sbb
sbb
pop
cmp
out
sub
add
ret
in
inc
sub
call
mov
jns
inc
xchg
mov
sub
inc
sub
leave
dec
jae
adc
push
out
pop
xrelease
xor
call
inc
mov
jo
das
mov
pop
adc
jb
push
enter
aad
jo
negl
dec
jmp
push
in
addr16
call
add
lahf
fdivrp
push
negb
cmpsb
inc
xchg
clc
and
mov
loop
loopne
xor
bound
mov
out
cmc
push
push
push
push
iret
rol
mov
out
lret
jne
xor
out
jp
insl
pop
mov
lods
mov
mov
adc
jne
and
jb
insb
inc
inc
popa
push
popf
sbb
ss
mov
pop
and
les
mov
in
jle
fucomi
call
fistl
or
jge
fwait
pop
jae
push
push
pop
xchg
stos
adc
hlt
sub
add
mov
addb
sub
arpl
push
adc
xchg
dec
stos
iret
push
mov
jecxz
lock
daa
cmp
divl
inc
mov
ds
or
leave
cmp
ret
mov
mov
imul
pop
push
movsb
ja
mov
mov
inc
pop
push
or
push
movsl
orl
sbb
stc
add
jnp
test
and
cmp
cmc
mov
xchg
pop
pop
outsl
jmp
outsl
imul
pop
ds
pusha
mov
dec
outsb
les
sub
mov
je
xlat
fildll
push
int
das
mov
pop
outsb
in
push
mov
xchg
push
xchg
cwtl
ret
sti
insl
sub
in
sahf
stos
add
mov
mov
movsl
sbb
call
jmp
and
jle
movsb
daa
sub
lds
inc
out
popa
and
rclb
mov
push
xchg
push
mov
bound
rcl
dec
and
lds
data16
jae
add
jg
das
cmp
cmp
sub
sahf
je
repnz
pop
xor
mov
pop
leave
inc
jb
jmp
and
pop
movsb
or
bound
jo
xchg
mov
push
int
sub
std
push
sahf
nop
and
dec
dec
daa
xor
mov
sub
pop
cmp
xchg
in
mov
xor
mov
ror
nop
jp
cmp
loop
inc
sbb
add
jp
cmp
jge
pop
mov
in
loope
imul
es
pop
xchg
push
pop
mov
lds
add
adc
push
rolb
jnp
xlat
lret
push
inc
bound
cli
fwait
lods
lret
aam
pop
out
mov
xchg
jecxz
sti
inc
bound
lret
mov
or
or
scas
das
mov
push
les
andl
mov
jp
test
loope
and
push
push
ret
jne
sarb
loopne
xor
pop
push
test
xchg
insb
int
mov
push
adc
cmpsb
xchg
lds
repz
stos
push
aad
push
jb
lea
shr
push
add
shr
mov
add
pushf
push
ret
ljmp
out
movsl
push
data16
sti
movsl
inc
sbb
push
bound
rclb
lods
int3
cmpsl
lods
xchg
ss
xchg
loopne
xchg
mov
sbb
lea
adc
jne
push
out
in
jo
pop
sub
mov
lods
cli
rorb
inc
lock
loopne
int3
pop
mov
sbb
shl
dec
jbe
push
or
outsb
mov
test
cmp
ljmp
out
pop
out
jle
cmp
out
fcmovbe
out
ljmp
test
das
cmc
in
stos
add
fwait
movsb
sub
push
lret
mov
push
adc
int
adc
sub
pop
fstpt
test
xlat
jb
dec
mov
mov
lods
sbb
popf
bound
fildll
outsb
iret
dec
xchg
mov
add
aam
lods
pushf
push
test
xor
push
fs
inc
es
stos
sub
pop
push
popa
enter
rol
mov
dec
mov
cli
sahf
dec
ss
stc
jo
inc
shll
enter
jbe
das
pop
ret
mov
sahf
pusha
cld
or
and
sahf
les
enter
cmp
repz
jno
inc
stc
jno
scas
dec
adc
push
cmp
sbb
fdivrl
mov
int3
add
fsub
iret
dec
out
pop
rcll
outsb
or
inc
lret
stos
leave
sbb
mov
and
jbe
push
push
cmp
shll
stos
call
mov
xchg
mulb
inc
mov
lret
int3
lahf
add
adc
popa
fadd
mov
xchg
dec
jle
adc
in
fwait
cmp
cmp
insb
jmp
push
lds
adc
fadd
mov
in
adc
dec
jg
add
push
enter
jmp
faddl
dec
imul
xchg
push
lock
hlt
imul
scas
in
dec
add
shrl
mov
pop
add
pop
and
scas
jmp
mov
xor
push
fadds
fs
xor
mov
movsl
mov
xchg
ljmp
adc
or
dec
call
sub
pusha
imul
push
jnp
in
xlat
mov
not
adc
push
inc
ds
jmp
xchg
lea
sbb
fisttpl
mov
mov
pop
out
mov
xchg
sbb
fmuls
incl
mov
lahf
into
in
outsl
jbe
lea
jp
subb
lea
sub
loopne
in
mov
sbb
sub
ljmp
jg
mov
sub
pop
lods
jb
hlt
mov
mov
mov
ret
shlb
jne
jge
adc
mov
pushf
mov
or
loope
sbb
or
call
sbb
jmp
and
pop
test
scas
push
mov
insl
lret
pop
icebp
ljmp
fstpt
bound
es
pop
loopne
dec
inc
mov
cmp
bnd
fnsave
jnp
pop
loopne
ja
fsubrs
cs
hlt
pop
pop
iret
aad
cmp
fs
push
push
ss
jl
push
cmp
nop
sar
mov
sbb
fimuls
fcmovnu
jle
mov
mov
nop
sbbl
cmpsb
cli
and
pop
lods
push
std
sbb
adc
pushf
sub
lods
mov
sbb
pop
push
movswl
cld
aam
jmp
and
inc
lahf
loop
xchg
mov
inc
insb
sub
insb
jno
pop
xor
das
mov
inc
fcmove
shlb
cwtl
pushf
out
jb
ss
fcoml
js
pop
push
iret
xor
pop
mov
loopne
xchg
lods
or
bound
les
push
idivl
or
and
mov
mov
inc
pop
mov
in
inc
cmp
mov
ret
add
pop
cmp
lret
mov
and
ss
hlt
mov
jo
movb
pop
pop
sub
lock
push
cmpsb
sti
or
adc
jno
xor
jb
mov
idivb
sbbl
scas
cwtl
or
ret
outsl
inc
test
insl
and
jle
sbb
mov
sete
loopne
mov
dec
sub
test
mov
enter
sarb
fldt
stos
mov
daa
cmp
cmpsb
and
push
mov
fstpt
insb
mov
shl
sbb
adc
inc
cmp
sahf
mov
out
sbbl
jns
xchg
or
push
mov
adc
sbb
dec
adc
jecxz
and
jmp
out
aas
das
lock
push
push
imul
idivb
mov
in
imul
sbb
enter
mov
loop
cmp
enter
outsb
mov
push
imul
jl
cmp
inc
call
mov
std
cs
pop
or
arpl
fistl
jle
shl
lods
or
xchg
call
mov
scas
dec
or
push
pop
inc
imul
scas
fwait
xlat
out
loopne
ss
sbb
nop
push
jecxz
push
xchg
lods
test
jnp
adc
jmp
mov
data16
jmp
pop
sti
sub
bound
or
cwtl
das
ljmp
pop
jbe
push
add
mov
inc
adc
nop
lret
mov
jle
lock
mov
pop
cmp
and
stc
fcmovne
repnz
and
int
out
fdivp
test
loope
push
push
cmp
shlb
push
mov
mov
jmp
jmp
bound
lock
ror
and
push
jg
ss
stos
iret
sbb
lds
push
add
jbe
fisubrs
sbb
gs
mov
inc
fucomi
push
in
push
sbb
scas
call
or
xchg
shrb
adc
out
pop
mov
jge
mov
mov
cltd
xchg
jnp
in
sub
lock
adcl
dec
movsb
cmpsb
aad
psubsw
dec
pop
inc
adc
fstl
shrb
in
jecxz
pop
sub
mov
sub
es
rorb
stos
push
lock
adcl
jmp
push
aaa
les
fmull
mov
jmp
inc
fistpl
imul
jle
ss
dec
xor
sbb
in
aas
adc
and
int
sahf
push
pop
or
cmpsb
ss
push
mov
ret
ljmp
push
xchg
les
shll
push
push
pop
jb
movsb
cmpsb
outsl
std
adc
mov
dec
shlb
je
xor
mov
lahf
inc
push
push
and
cmc
dec
sub
in
push
mov
mov
mov
inc
fdivrs
mov
xor
push
shll
loope
mov
rolb
loopne
sbb
push
mov
outsb
sbb
xor
mov
out
adc
lods
int3
movb
jle
lret
push
rorl
aam
fsubp
loopne
sbb
jne
cmc
push
outsb
lods
leave
xor
cmp
inc
mov
ljmp
mov
subl
or
mov
mov
sti
push
adc
mov
enter
lods
sbb
jmp
sbb
rolb
or
xchg
shrb
sub
jle
lret
ljmp
pop
or
jp
dec
stos
sbb
cmc
mov
subb
out
leave
xorl
daa
in
pop
pop
lcall
fstpl
pop
dec
adc
repnz
ja
cmp
inc
jmp
fstl
bound
imul
addr16
adc
je
rolb
test
push
lahf
out
das
xchg
iret
stos
aaa
jo
mov
xchg
or
addr16
jo
push
cmp
ret
or
movsl
lods
aaa
scas
adc
es
xor
xchg
add
dec
push
or
shl
jmp
mov
pop
sbb
in
out
and
jp
lods
bound
push
lds
sbb
leave
pop
jne
rcll
mov
pop
sub
loope
cmc
pusha
daa
subl
jnp
jp
sub
and
mov
mov
and
mov
and
hlt
rorb
cmp
adc
xor
cmp
jmp
into
scas
insb
rcr
cs
lea
push
out
and
xchg
cmpsb
rcl
pusha
jg
fmul
cmc
adc
cmp
cmc
mov
pop
cwtl
dec
lea
sbb
mov
cld
add
stos
dec
insb
popa
inc
add
loop
push
push
pop
test
dec
out
fbld
addr16
mov
lds
iret
push
call
nop
cmp
gs
ret
push
sarb
push
xchg
mov
lahf
mov
je
mov
imul
pushf
popf
push
push
loop
jmp
dec
insb
xcrypt-ecb
cmpsl
or
mov
or
push
nop
mov
test
dec
cmp
imul
pop
sahf
jo
pop
push
aad
insl
enter
or
stos
push
in
lcall
insb
out
cmp
push
lds
pop
das
sbb
and
ss
or
sub
xor
insb
push
mov
stos
mov
je
addr16
pop
ljmp
fwait
outsb
xchg
adc
mov
and
bound
jecxz
gs
lods
insb
ss
rclb
pop
scas
mov
jno
sti
or
pushf
push
movswl
ret
push
bound
stos
jmp
cmpsb
fadd
loop
ss
mov
leave
push
add
jbe
loopne
in
jg
sub
call
enter
mov
cmp
pop
mov
jecxz
mov
dec
mov
cmp
mov
scas
xor
push
and
cmpsl
jg
mov
jo
sbb
sbb
dec
xchg
ret
push
pop
push
fwait
xchg
sub
lcall
imul
xchg
lret
out
xlat
addr16
bound
aad
lds
push
lods
cmp
mov
sub
lods
cmp
jg
cmp
cmpsb
in
dec
loop
adc
rorl
int3
call
rcr
sbb
push
push
clc
xor
or
and
add
push
outsl
fdivr
cmp
repz
mov
fwait
adc
addr16
andl
cld
mov
ja
in
add
mov
int
leave
pop
insl
in
push
jecxz
insb
push
aam
cmp
xor
ds
in
push
mov
cld
call
push
mov
cltd
paddw
sbb
sbb
cltd
sub
in
mov
cs
mov
dec
fisttpl
out
scas
cmp
cltd
gs
mov
stos
push
dec
bound
cmp
push
pop
cwtl
push
jg
pop
leave
sbb
popa
sbb
pop
cmp
adc
cmp
out
mov
outsl
pop
movsb
xor
push
test
in
in
fstl
loopne
pop
xor
sbb
fists
push
scas
dec
mov
sub
test
test
mov
lret
dec
jle
xchg
shlb
out
sbb
pushf
out
sbb
push
sbb
fmulp
sub
push
and
xor
out
hlt
clc
mov
orl
aaa
adc
iret
ja
shlb
jmp
lret
xor
icebp
int
shrb
pop
mov
mov
outsb
sub
fdivs
fnstcw
lcall
cmp
roll
jmp
sahf
jecxz
pop
scas
jg
mov
int3
shll
inc
scas
mov
mov
dec
pop
jle
mov
test
dec
scas
out
push
inc
adc
mov
data16
push
cmp
inc
jbe
ds
notb
mov
int
in
fwait
aas
call
push
shr
push
pop
xchg
out
lahf
js,pt
cmp
xor
add
fistl
cwtl
rclb
lea
out
popa
pop
add
rcl
push
and
sub
cwtl
gs
xchg
xchg
and
mov
mov
xor
cmp
cmp
iret
xchg
sbb
push
mov
jmp
in
bound
jmp
rcpps
mov
popa
inc
lahf
ja
dec
repz
push
inc
xor
dec
pop
pop
lret
sahf
jmp
mov
pop
gs
cmpsl
adc
cwtl
dec
pop
lods
pusha
jne
inc
loope
sub
pop
mulb
daa
insl
jle
mov
std
roll
sarl
push
cmpsl
repnz
stos
mov
push
lock
sub
scas
mov
inc
mov
loope
jae
sti
outsl
jbe
add
loope
in
fadds
ret
mov
imul
fimuls
mov
je
movsl
stos
scas
lods
dec
scas
fucomi
sbb
push
ret
push
rcl
call
mov
sub
jmp
call
push
pusha
shll
add
cmp
stos
sti
std
fdivl
loope
fnstenv
stos
push
mov
sbbb
orb
inc
mov
dec
mov
out
aas
jg
xor
push
mov
in
cmp
mov
lret
loopne
xchg
mov
push
in
jmp
jg
bound
sub
push
inc
or
add
ret
lock
fwait
push
jmp
jnp
les
and
test
bound
aam
inc
xor
ret
mul
mov
cmc
push
dec
in
mov
cmp
std
loop
nop
push
dec
xchg
fsubr
adc
or
les
fcmovu
daa
outsl
jmp
pop
mov
fstps
mov
fs
mov
xchg
nop
jecxz
jns
push
out
test
lds
in
enter
xor
xchg
cmpsl
inc
pop
les
pop
mov
or
mov
cmp
or
jo
jmp
xchg
call
inc
fldl
mov
cmp
lea
ss
or
or
in
shlb
in
and
xchg
es
sarb
jb
shlb
sub
jb
cmp
pop
pushf
cwtl
mov
jl
das
dec
inc
pop
cmpsb
shrl
mov
movsb
mov
cmpsl
pushf
punpckhbw
pop
pop
in
fdivs
shl
mov
outsl
inc
test
push
push
push
or
mov
hlt
sub
ret
out
lods
push
push
imul
inc
sti
fisubrs
sahf
mov
flds
pop
xchg
div
mov
cld
lret
gs
clc
adc
sahf
insb
xchg
sub
loop
mov
mov
das
or
jmp
popf
push
orb
jbe
in
jmp
inc
jl
lods
and
pop
jns
in
fnstenv
imul
or
pushf
int3
push
pusha
sub
sub
pop
pop
cmp
fs
lret
pop
pop
cmp
sbb
mov
push
repz
xor
cwtl
out
in
pop
mov
xchg
std
push
mov
push
push
ret
pop
push
lock
and
mov
pop
mov
xor
in
pop
out
sbb
out
fucomip
outsb
pop
mov
push
mov
leave
sub
sub
inc
cmp
mov
in
pop
xor
stos
aam
gs
cmpsb
and
scas
cmp
inc
into
test
notb
cmp
push
cmp
cmp
sub
xor
imul
pusha
cli
fbld
mov
push
int3
loopne
push
xor
out
inc
cli
push
pop
mov
push
push
ljmp
mov
test
negb
lock
es
or
stos
loopne
aaa
ret
icebp
inc
push
outsb
stos
lcall
mov
popa
push
subb
push
xchg
cld
stos
cld
push
bound
ljmp
xchg
mov
sub
push
push
cmp
push
or
push
lock
mov
push
js
cmp
mov
mov
push
test
jne
mov
in
lcall
es
or
std
cli
push
dec
fisubrl
loope
cmc
pop
mov
xchg
pop
fucomi
ljmp
lret
lret
fs
loop
push
jmp
inc
xchg
push
mov
out
es
and
sub
arpl
cmp
ret
mov
frstor
out
leave
sub
ja
push
pop
fidivrs
lahf
mov
stos
or
mov
insl
mov
je
cld
add
mov
dec
lea
push
leave
pop
jno
pop
out
dec
pop
and
mov
test
sahf
mov
cmp
enter
sub
push
in
movsl
out
lods
or
sbb
or
mov
adc
scas
sub
out
sub
sahf
mov
cmp
and
incl
mov
pop
lods
inc
lock
or
int3
mov
addr16
cmp
lcall
mov
mov
jl
sbb
mov
int3
jae
aas
mov
mov
leave
int
into
xchg
loopne
push
in
lock
test
leave
fdivrl
shrb
jo
sahf
cmc
in
addr16
sub
jl
push
loop
cmpsb
es
jns
dec
enter
jmp
push
mov
push
mov
adc
clc
and
push
inc
sbb
imul
iret
cmp
imul
sbb
cmp
jmp
push
test
and
jae
inc
insb
rcll
sub
jne
pop
push
rcrl
cld
cmp
sbb
stc
xchg
popf
call
pop
lret
fcmovu
into
xchg
aas
and
sub
push
dec
sub
data16
cmp
insb
push
les
xor
xlat
jge
xchg
cmp
mov
in
inc
push
lds
into
mov
cmp
xlat
cmp
and
mov
mov
push
xor
adc
xchg
aaa
ror
mov
stos
adc
movsb
outsl
inc
xchg
pop
cmc
inc
arpl
fsubrl
dec
sbb
sbb
cld
mov
push
add
pop
push
mov
cmp
and
push
js
pop
ret
mov
in
pusha
lcall
sbb
sbb
sbb
aaa
fisubs
inc
sahf
dec
out
rcrl
aaa
push
cs
adc
sub
insl
add
xlat
jnp
xor
jne
add
test
bound
pop
mov
push
fstl
cmp
ljmp
loop
cmp
xor
mov
mov
clc
push
dec
push
fiadds
add
ljmp
push
pop
cmp
in
xor
subb
pop
sbb
in
scas
sub
sbb
cmp
jns
add
jecxz
cmp
stos
shrl
push
fimuls
cmp
dec
dec
sbb
rorl
cltd
pop
les
test
lcall
ds
les
out
sub
cltd
outsb
leave
mov
ret
out
dec
test
cld
xor
bound
fidivs
mov
add
sub
nop
mov
push
pop
mov
adc
xchg
jmp
out
inc
nop
mov
ds
adc
mov
pop
out
cmp
std
arpl
and
clc
loopne
cld
mov
push
out
shl
insb
daa
scas
mov
mov
cltd
dec
dec
mov
xchg
mov
and
mov
push
fimuls
insl
dec
sub
push
rcrl
scas
sub
mov
lock
push
pusha
nop
dec
mov
stc
push
or
jno
imulb
mov
xchg
bound
push
dec
jns
notl
movsb
mov
sub
and
push
adc
sbbl
inc
xor
push
sbb
sub
dec
fcmovnb
lea
adc
xchg
js
stos
imull
xchg
mov
jg
aam
shlb
xchg
inc
mov
pop
mov
sbb
aas
movsb
stc
and
and
loopne
adc
adc
sahf
jno
daa
dec
cmp
outsl
sti
insl
call
jne
and
shlb
pusha
iret
push
push
cmp
movsl
cmc
xor
sahf
sub
xchg
xor
loopne
mov
mov
cmc
sub
hlt
loope
sbb
imul
in
and
mov
mov
fnstcw
insl
xor
jns
in
scas
xor
or
xchg
test
ficoml
xchg
sub
test
lods
fsubs
push
adcb
fwait
ror
pusha
aas
adc
add
dec
bound
movsl
xchg
inc
aas
out
out
mov
scas
inc
jl
pop
popa
or
jg
or
cmpsb
jp
fildll
out
inc
test
leave
js
sahf
dec
pusha
add
pop
mov
jge
pop
lahf
cmp
sbb
insb
int3
add
imul
mov
stos
shlb
push
jmp
stos
insl
or
gs
stc
insb
sub
call
sbb
bound
mov
mov
js
sub
call
out
paddsw
cmc
or
push
fwait
cmp
movsb
in
js
mov
or
pop
jmp
arpl
mov
dec
dec
and
lret
cmp
test
js
lcall
pop
in
cmpb
cs
fdivs
jg
int3
jecxz
call
out
or
xchg
enter
insb
shrl
lcall
lods
ss
mov
nop
fwait
sbb
jmp
and
pop
sahf
xor
outsl
sub
add
repnz
inc
push
mov
push
lods
mov
pop
mov
mov
cmp
sbb
jge
jp
stos
out
bound
outsb
lret
jns
movsb
in
call
xor
pusha
push
lret
jo
shrb
in
imul
call
fsubs
pop
xlat
mov
call
ficoml
add
stc
call
inc
scas
in
push
jmp
jg
lcall
jl
pop
push
stos
mov
mov
call
cmp
aam
out
or
or
lods
stos
out
push
or
dec
call
push
sbb
int3
cmp
adcl
xchg
in
shrb
jns
sub
ds
sbb
mov
push
cmp
or
aam
popa
cmc
mov
dec
lock
cmpsl
dec
cmpsl
cmp
inc
jb
sub
mov
dec
aas
jecxz
push
lods
dec
or
call
jg
push
push
in
in
mov
test
xor
movsl
or
xor
stc
das
dec
mov
test
enter
out
mov
sub
in
jl
aad
popa
pushf
test
imul
movsl
pop
jo
adc
ja
js
mov
repz
jbe
or
daa
in
addr16
jg
lcall
xchg
pushf
ljmp
add
fsubrs
sbb
inc
js
insb
jecxz
hlt
stos
rcr
and
ror
inc
ja
cmp
test
shll
dec
test
bound
mov
pusha
or
leave
call
bound
xchg
stos
xor
mov
test
push
mov
sub
loopne
xchg
faddl
dec
mov
adc
jae
lods
lds
icebp
into
dec
rorl
fisubl
bound
js
jp
push
mov
shll
inc
push
shlb
movsb
scas
adc
jecxz
jne
loope
pop
jmp
lea
mov
dec
jbe
fcoml
inc
inc
and
or
mov
xchg
jg
push
cmp
test
mov
inc
mov
mov
dec
hlt
sub
dec
scas
pop
cltd
adc
out
xor
or
outsl
in
sub
enter
jp
mov
fsts
enter
mov
into
insl
jnp
add
mov
aam
jle
and
int
mov
mov
shrb
shlb
inc
sbb
adc
jae
call
nop
pop
cmp
loop
dec
push
jg
xchg
int3
add
enter
rolb
es
mov
aaa
push
imul
scas
mov
jbe
aas
sub
inc
push
sub
adc
enter
mov
imul
jmp
pop
rorb
jnp
iret
and
or
ret
mov
jae
ljmp
cs
xchg
out
inc
dec
push
lret
hlt
xor
ja
lret
mov
scas
adc
push
jge
push
in
in
and
lret
imul
cmpsb
mov
mov
pop
ret
les
rol
clc
xor
and
fisubrs
fcompl
out
outsb
cmp
mov
bound
aad
jmp
test
rcrb
out
jmp
push
pop
addl
loop
negl
fsubl
mov
xlat
popa
jg
or
sbb
push
cld
mov
push
add
pop
inc
mov
sbb
test
subl
insl
pusha
add
mov
dec
push
xorl
sbb
enter
pop
mov
fld
int3
cmpsb
push
adc
xchg
test
scas
mov
dec
shr
cmpsb
data16
cmp
subb
xor
in
sub
pop
sub
pop
ret
lret
dec
std
shlb
mov
movsb
sub
mov
movsb
push
pop
or
lods
loopne
ret
int3
and
es
sbb
es
adc
adc
gs
add
pop
test
mov
pop
bound
inc
ret
inc
sahf
pushf
inc
jae
inc
test
add
dec
pop
movsl
fstpt
ret
dec
add
push
into
fcoml
out
add
cmp
int
and
push
mov
cwtl
jle
js
add
cmp
and
xchg
push
cmp
repz
ficompl
mov
mov
push
das
push
ja
inc
addl
dec
repz
xor
mov
jb
add
cmp
fwait
aas
pop
iret
pop
mov
push
xchg
or
cmpsl
mov
enter
xlat
dec
out
dec
fidivs
sahf
sbb
push
or
pop
ficoms
lock
push
pop
in
xchg
daa
adc
dec
les
pop
inc
xchg
insb
dec
filds
out
lret
stos
sbb
and
mov
pushf
lods
pop
inc
mov
mov
mov
cmp
add
push
dec
aad
adc
push
push
daa
fistl
cmp
test
and
idivl
pop
or
inc
int3
lock
pop
rcl
sub
cld
adc
fldl
ficompl
pop
insb
shl
addr16
xchg
cmp
aaa
mov
and
adc
xor
xor
mov
movsb
xor
push
push
cmp
arpl
mov
cs
into
test
push
ljmp
and
mov
gs
gs
cmp
and
lret
les
jle
movsl
cmp
ja
xchg
ja
aad
popa
loop
outsl
or
pop
mov
cmp
insb
rol
pusha
hlt
std
and
dec
push
or
jmp
lods
fsubs
xor
bound
enter
leave
xor
mov
mov
fcoms
cwtl
out
mov
push
pop
out
scas
pop
cmp
inc
adc
push
push
out
out
icebp
scas
mov
rorl
pop
inc
jg
scas
and
pop
mov
xor
mov
bound
div
cmp
sbb
push
cmp
shlb
inc
dec
pop
movl
push
pop
out
lret
push
lock
pop
inc
jnp
repz
inc
add
movsb
test
dec
xchg
push
cld
mov
dec
out
les
xchg
dec
xchg
lods
mov
push
lods
imul
shlb
sub
lcall
pop
cmp
icebp
jae
popa
fdivr
in
mov
inc
xor
mov
mov
jne
out
pop
dec
inc
fnsave
test
mov
push
cld
mov
or
lods
mul
in
ja
mov
push
out
sbb
jae
dec
scas
scas
inc
push
jno
add
testl
mov
mov
jecxz
pop
jmp
mov
adc
mov
inc
loope
das
sbb
lret
lds
sub
add
icebp
adc
loope
aad
cld
loopne
stos
sahf
push
push
movsb
push
insl
hlt
jecxz
mov
nop
mov
lcall
data16
loopne
adc
inc
popf
jmp
pop
lods
sub
test
dec
sbb
incb
pushf
sbb
xchg
int
sbb
outsb
ja
mov
ljmp
push
cld
in
fs
shrl
add
xor
stos
iret
push
mov
in
pop
fdivrs
mov
pop
ljmp
das
sbb
rcrl
out
repz
loope
push
or
bound
xor
mov
mov
push
pop
jmp
rcl
push
mov
insb
sbb
pop
test
jmp
pop
xlat
js
sti
lret
iret
mov
xchg
fsubrs
mov
push
pop
aas
jg
stos
jnp
bound
loopne
add
push
push
daa
rcll
call
jb
xchg
outsl
into
scas
pop
xchg
icebp
dec
shlb
mov
push
in
or
iret
test
sub
mov
adc
lods
test
call
enter
mov
and
xchg
mov
sub
bound
xor
filds
jmp
pushf
in
and
fistpll
int3
push
sub
pop
hlt
and
or
sub
vmovaps
dec
mov
ficoms
mov
call
stos
stc
mov
jg
and
push
testl
xchg
inc
loop
push
cmp
mov
movsl
mov
out
xchg
inc
inc
push
sbb
jl
repz
aas
mov
push
rclb
sub
into
pop
mov
into
xlat
mov
fdivrl
xor
push
and
testl
sti
lret
call
arpl
movsb
sub
lods
outsb
push
sub
aas
int3
xchg
and
cld
mov
push
lahf
insb
cmpsb
dec
push
shlb
mov
test
bound
sub
out
lods
fwait
mov
sbbb
jle
inc
lret
inc
xchg
add
insb
inc
lods
sub
mov
push
adc
mul
aam
xlat
or
adc
push
or
mov
fs
inc
outsl
lret
outsl
add
xor
popf
mov
cmp
das
fwait
and
ret
mov
negl
inc
cmpsb
das
jnp
cmc
and
mov
sbb
xchg
push
jg
push
sub
sahf
add
mov
cli
fildl
imul
pop
sbb
inc
iret
pop
aaa
adc
adc
ret
lock
sahf
insb
pop
add
mov
and
loope
hlt
lds
xchg
cmp
and
lret
mov
pop
push
gs
sbb
pusha
or
and
ret
iret
notl
push
bound
das
out
push
cmp
test
movsb
les
dec
faddp
repz
jae
xchg
out
fldcw
dec
outsb
dec
mov
insb
stos
cld
ret
inc
jle
lds
dec
sbb
push
daa
popa
push
or
lods
pop
inc
aas
rolb
loop
pusha
bound
push
imul
xor
aam
stc
push
jmp
sbb
jp
sub
jbe
sub
push
or
fs
addr16
mov
loopne
and
pop
jbe
arpl
mov
mov
push
lret
jns
xchg
lahf
movaps
scas
movsl
lock
test
hlt
daa
in
push
dec
sbb
scas
mov
lds
negb
leave
mov
out
pop
outsb
dec
frstor
sub
cld
adc
jbe
in
mov
sub
aad
push
inc
cmp
mov
in
jne
xor
dec
in
cmpsl
cwtl
push
int3
cli
pusha
xor
aas
loopne
mov
test
out
negb
imul
and
xor
call
sub
or
cltd
xlat
daa
scas
mov
subl
mov
inc
add
push
outsl
nop
push
sbb
shll
pop
or
arpl
nop
sbb
lds
daa
popf
xor
mov
mull
popf
insb
sbb
lahf
cli
mov
xor
ss
or
sti
mov
xchg
xor
dec
bound
cmc
aaa
pusha
loopne
mov
push
inc
and
or
mov
and
lret
les
in
testl
sbb
ret
bound
mov
roll
inc
and
mov
sbb
gs
insb
xor
test
add
in
jecxz
pop
mov
mov
ss
cld
int3
fnstsw
cltd
fs
adc
add
icebp
jg
scas
arpl
mov
push
jl
mov
inc
push
ficoml
outsl
cmp
loope
ljmp
hlt
repnz
sub
ja
mov
fs
jae
mov
push
insl
call
sbbl
mov
inc
js
cmpsl
lcall
push
outsb
jno
ja
testl
mov
mov
pop
cmp
sub
cmp
or
inc
xchg
jmp
cld
popa
push
iret
lea
mov
in
ret
mov
stc
insl
sarb
mov
sti
in
inc
lea
lods
adc
jmp
rcrl
es
sti
test
aas
and
jmp
aad
adc
out
arpl
repnz
pushf
in
aas
mov
scas
inc
jne
or
inc
fdivrp
in
jnp
adc
jns
imul
mov
loopne
adc
mov
adc
mov
fucom
out
jl
iret
sbb
mov
jecxz
push
pop
xchg
jecxz
adc
aam
jmp
adc
inc
and
xlat
add
mov
aaa
outsl
or
sub
cmc
jnp
dec
in
inc
xchg
mov
xor
and
ror
outsb
out
repnz
mov
iret
or
xchg
dec
arpl
mov
out
mov
sar
jmp
loop
mov
push
js
push
mov
imul
sbb
inc
push
push
lea
aaa
in
jne
movsl
iret
jecxz
pop
jecxz
pop
jns
imul
rorb
cmpsb
xor
in
addr16
xchg
add
ja
mov
dec
dec
add
andl
pop
cwtl
outsl
cmp
enter
mov
imul
mov
push
out
jecxz
mov
or
sbb
jae
arpl
test
test
xchg
jle
das
xchg
imul
test
int3
rorb
ficoml
pop
shlb
out
mov
lahf
and
sti
pusha
gs
ror
movsl
aas
ret
into
cs
out
xchg
out
adc
inc
xlat
xchg
pushf
movsb
scas
sbb
mov
push
xorb
mov
iret
lahf
adc
outsb
dec
and
pop
int3
xchg
xlat
inc
imul
pop
stos
jns
ljmp
pop
pop
outsb
push
mov
xchg
add
mov
mov
sub
loop
fwait
iret
clc
lods
stos
test
out
sti
lock
icebp
jge
push
repz
sub
ja
fsub
jge
movsb
mov
pusha
dec
push
loopne
xor
out
clc
ret
pop
or
fdivl
bound
pusha
inc
out
data16
inc
mov
fwait
dec
jle
ret
cmp
in
and
xor
sub
addr16
mov
mov
scas
mov
jmp
jae
mov
fnsave
and
clc
cmpsl
pop
inc
in
push
rcrl
inc
push
insl
iret
xor
sub
push
lret
rcrl
pop
push
cmc
shl
sub
mov
mov
sbb
mov
push
fbstp
inc
stc
mov
ljmp
mov
sub
or
adc
mov
loope
and
std
addr16
push
and
or
notl
mov
push
lds
sbb
stc
inc
out
cmc
jle
aas
ret
jns
adc
sahf
adc
jbe
jns
cwtl
pop
cmpsl
iret
sub
loopne
and
adc
sbb
dec
sbb
ret
dec
fdivl
loope
sahf
iret
cli
push
jle
fwait
into
push
arpl
cmpsl
fistpll
ret
xor
in
pop
pop
nop
in
mov
add
add
xchg
fcomps
cmc
insl
pushf
jg
mov
aad
lret
jno
imul
cltd
xchg
jmp
test
mov
inc
fs
mov
movsl
test
imul
add
jbe
cmc
mov
fbld
sbb
lret
clc
mov
out
imul
addr16
mov
or
loopne
decl
push
pop
loop
xor
pop
int
loope
or
jbe
shlb
or
fldcw
pop
jmp
dec
fsubrs
loop
sbb
or
mov
pop
hlt
ret
or
ficoml
repnz
sarl
sbb
fisttpll
shrb
mov
ja
jne,pt
ret
loope
pop
ret
lahf
jmp
adc
loopne
bound
test
jle
stc
loopne
in
mov
call
xchg
xchg
or
cmp
dec
ja
pop
jmp
fs
test
clc
xorl
ja
lds
stos
mov
loopne
outsb
inc
into
and
push
jne
sub
add
in
out
mov
xchg
sbb
shr
cmp
xor
push
rclb
call
addr16
popf
data16
addr16
cmp
cmpsb
xchg
cmp
mov
fiadds
push
lea
pop
sub
push
jo
outsl
pmaxub
inc
addb
or
insb
jecxz
adc
frstor
adc
fwait
xlat
mov
push
stos
sbb
mov
push
push
push
dec
xchg
out
cs
xor
xor
adc
lods
enter
ljmp
xchg
push
pusha
jo
imul
dec
bound
rolb
xchg
loope
xchg
cmc
mov
pop
push
scas
rclb
and
imul
adc
imul
cwtl
fcompl
mov
gs
imul
jg
fsubs
ljmp
or
out
pushf
jmp
out
enter
lret
sti
cmpsl
cwtl
add
data16
and
enter
mov
push
lahf
insl
in
push
outsl
lahf
fmull
jg
leave
mov
lea
gs
shlb
pop
in
lock
in
mov
fs
jle
or
sahf
shll
mov
xor
push
fisubl
pop
sbb
jmp
push
dec
pop
cmp
push
negl
nop
fadd
inc
push
hlt
inc
sub
mov
xor
inc
jmp
xchg
dec
idivl
bound
les
cmp
push
push
push
mov
mov
jno
pop
cmpsl
addr16
popa
inc
adc
dec
mov
push
mov
mov
push
imul
rcrl
cli
test
fcoml
adc
in
pop
out
inc
lahf
aad
push
cmpsl
out
or
je
sbb
dec
pop
or
jbe
lret
mov
data16
hlt
call
cwtl
mov
push
je
xchg
mov
push
std
pop
mov
fwait
sbb
icebp
sti
push
scas
sbb
adc
out
popf
sti
inc
iret
aaa
sub
or
je
int
int
adc
and
pusha
mov
xor
scas
push
sti
lds
mov
push
lret
ret
ss
push
test
fcmove
mov
xchg
jg
aad
push
or
call
testb
adc
andb
sbb
inc
xchg
sahf
lret
adc
outsl
or
push
and
sti
orl
xor
inc
mov
shlb
sbb
icebp
das
and
cmp
xchg
push
xchg
scas
sub
int
mov
jno
aaa
shlb
pop
mov
movsl
jecxz
in
adc
iret
push
fdivrs
push
sbb
ss
insb
das
mov
adc
in
popa
mov
cmpsl
mov
leave
in
push
jg
ss
cmp
dec
iret
test
bound
lds
mov
adc
jmp
in
popf
sub
and
or
pop
mov
adc
adc
lock
aam
mov
push
dec
fsts
addb
and
cmpsl
or
leave
sub
pushf
fcomps
imull
dec
in
sub
xorl
jno
cltd
loopne
jecxz
pop
imul
hlt
lcall
fs
pop
aaa
bswap
nop
out
and
push
insb
mov
cltd
mov
or
jmp
cld
pop
pushf
push
sub
mov
out
aas
sub
int
lods
push
mov
cmc
out
and
xchg
in
pop
adc
and
fwait
pop
jmp
push
xor
cmp
sub
test
fidivs
push
cli
stos
ror
lods
cmp
cld
mov
cli
sbb
mov
test
fsubrp
scas
or
mov
sahf
punpckhbw
or
jge
or
and
pop
add
mov
into
push
cs
fcoms
ret
bound
xor
jecxz
mov
push
arpl
rcrb
scas
ret
inc
jmp
adc
push
int3
inc
or
addr16
cmp
add
fwait
pusha
scas
cld
subl
push
daa
mov
cmp
mov
pop
fdiv
push
inc
sub
mov
clc
out
lods
cmp
lret
je
out
push
dec
mov
fsts
std
or
xchg
out
into
mov
push
cmpsl
mov
xchg
push
sarl
inc
cmp
push
test
xchg
push
adc
addr16
ss
inc
jne
insl
mov
in
sahf
cmp
xchg
cmpsb
int3
test
mov
fcompl
ljmp
push
sbb
in
sub
icebp
int
jmp
iret
adc
cmc
into
loope
call
out
sbb
dec
rorb
fs
insb
jne
lods
jmp
in
jp
xchg
mov
das
jg
xchg
call
sub
push
xchg
fnstsw
push
lret
push
test
jmp
adc
xor
fldcw
sahf
in
mov
push
in
cmpsl
imul
test
in
mov
sub
not
cs
jnp
data16
mov
or
xchg
push
lcall
add
xchg
or
movsl
sbb
out
rcll
sbb
cmc
out
out
call
lds
lock
push
ret
int3
mov
out
ss
faddl
xor
cmp
xor
enter
dec
and
mov
loope
dec
lods
shll
xor
xchg
dec
gs
je
mov
cmp
es
into
push
cltd
mov
bound
jne
xor
les
inc
push
jmp
outsb
jnp
mov
or
sbb
inc
flds
mov
adc
je
mov
pop
mov
push
push
ljmp
mov
push
in
add
cld
ss
int
loop
movsb
gs
popa
das
inc
subl
lock
out
mov
push
jno
leave
rep
das
out
jne
adc
pop
rcr
push
popa
shrb
lcall
pushf
stos
xchg
jo
icebp
addr16
lret
lods
test
notb
pop
hlt
fisubrs
mov
pushf
mov
cmpsl
xchg
dec
cld
inc
das
dec
fistpl
aas
lds
inc
adc
sahf
sar
lcall
test
insl
daa
jge
ret
cltd
xchg
dec
in
jae
add
mov
mov
lds
xchg
jl
iret
bound
push
pop
pop
insl
in
pop
xlat
adc
in
call
bound
mov
sarl
mov
pop
call
cmp
and
inc
int3
ja
adc
push
cwtl
or
aas
pushw
in
cwtl
push
xor
cltd
or
in
push
out
push
xchg
push
mov
stos
push
shrb
jp
out
lret
add
jecxz
test
xchg
sub
fcomi
data16
lods
pushf
in
decb
ret
out
jmp
dec
jmp
pop
testb
imul
and
pop
pop
jmp
out
mov
dec
jno
mov
inc
lcall
inc
out
dec
popf
cmp
test
pop
pop
dec
sbb
jle
aad
stos
outsl
cld
movl
xchg
shrb
andb
mov
jmp
rcll
pop
aaa
push
lds
mov
xchg
stos
dec
add
cmp
mov
push
lret
mov
fs
jge
push
rorb
insb
xor
jb
pop
adc
test
xor
and
push
dec
mov
and
mov
addb
push
andl
sub
mov
movsb
mov
jno
cmc
lahf
fstpl
lock
jecxz
stos
adc
cli
arpl
cmp
pop
jle
mov
shll
es
mov
out
out
mov
adc
pop
insb
push
icebp
call
pop
push
in
in
arpl
xchg
mov
rorb
cmp
movsb
jp
jns
es
pop
add
sbbl
imul
mov
push
pop
mov
cmp
orl
out
les
dec
iret
addr16
or
outsl
sbb
push
call
pop
std
les
mov
inc
jns
pop
sbb
mov
cmp
jge
and
xor
add
push
inc
mov
andb
pushf
dec
add
sbb
fucomi
cmpsb
test
adc
scas
or
pop
lret
cld
dec
ret
push
and
pop
test
mov
rclb
stc
or
roll
add
stos
sub
je
call
xchg
mov
mov
iret
adc
jl
enter
jno
push
push
jl
jo
call
inc
pusha
xchg
dec
pushf
scas
push
fnstcw
xchg
loopne
in
movsl
shrl
adc
xchg
sbb
pop
out
sahf
nop
mov
cmp
xchg
rorb
xchg
pop
cmp
in
mov
jmp
pusha
fisttps
pop
and
enter
sbb
loop
or
push
and
out
adcb
dec
pushf
inc
mov
cmpl
cmp
cmc
mov
pop
fldenv
jno
dec
sbbl
fdivr
int
into
mov
inc
mov
insb
push
sub
fwait
pop
pop
ljmp
add
xchg
cld
or
lods
and
cmp
cmpsl
ds
into
js
xchg
orl
or
out
setno
jmp
adc
in
ss
sub
pusha
mov
and
into
out
mov
xchg
mov
jno
xchg
call
adc
fistl
sub
push
cli
stc
outsl
out
sub
lahf
mov
dec
xchg
stos
testl
fcomps
push
dec
daa
jl
jne
fadds
xor
mov
jg
ret
adcb
mov
lss
sbb
hlt
cld
dec
xor
or
jnp
adc
dec
push
int3
in
xchg
adc
jl
jmp
push
sub
or
push
sbb
mov
push
push
push
shl
arpl
cmc
cmp
jbe
or
adc
cs
sarl
data16
push
stos
mov
inc
into
sub
dec
cmpl
and
xchg
and
test
out
lock
mov
inc
loopne
push
mov
ror
lock
push
iret
add
lret
shll
es
mov
inc
cltd
imul
test
dec
xlat
js
test
pop
push
lret
lret
sub
in
push
xchg
mov
pusha
push
scas
jae
jl
in
sub
shrb
cmp
push
cmp
repnz
inc
push
and
lods
xor
rclb
sub
insb
ds
and
sbb
cmc
add
xchg
or
mov
iret
inc
push
jbe
pusha
adc
rolb
in
sarb
fs
orl
imul
push
mov
mov
add
push
ret
sub
cmpsl
jb
push
mov
mov
mov
xlat
jle
aaa
or
lea
stc
call
rclb
jmp
out
lods
sub
lods
mov
loope
mov
sub
rorb
jmp
sbb
movq
pop
mov
fdivl
xchg
imull
divl
nop
push
push
aas
iret
mov
or
add
mov
insb
in
dec
cmc
fstl
shll
ja
jecxz
mov
bound
out
loop
addr16
push
xor
andl
hlt
push
dec
rcrl
push
icebp
repnz
test
inc
lret
mov
lahf
mov
adc
fisubs
dec
rorl
cmp
lret
ret
test
and
pusha
cmp
shlb
ds
inc
nop
les
cmp
mov
mov
adc
dec
pushw
push
mov
push
cmp
into
lret
cmp
nop
cmpsb
bound
mov
out
jmp
push
jl
cli
imul
add
negl
in
outsl
scas
out
fwait
pop
xchg
out
ret
cmp
int3
iret
xor
daa
imul
or
cmp
shlb
in
cld
or
iret
xor
subb
dec
in
xor
jmp
xor
les
pop
dec
push
mov
xchg
or
pusha
lods
mov
ljmp
sbb
xor
fnstsw
repnz
enter
xchg
fnstcw
nop
xchg
cwtl
popa
mov
das
int3
push
mov
pop
in
addr16
loopne
movsb
xchg
lods
inc
pop
cmpsl
hlt
and
mov
and
xorb
adc
add
rcl
sub
aam
call
mov
xchg
fwait
lods
add
int3
lods
cmc
xlat
sbb
test
mov
scas
mov
add
leave
jmp
pop
in
xchg
scas
pop
add
movsb
xor
sbb
insl
push
jle
pop
jmp
repnz
xchg
jl
sbb
xchg
push
jbe
sub
xchg
add
push
mov
leave
fcomps
cmp
add
icebp
cmp
std
push
es
stos
lret
into
push
pop
cmp
dec
scas
jmp
int
lret
repnz
arpl
xchg
push
std
sahf
loope
xor
xchg
cld
nop
push
fidivrs
inc
rcr
bound
mov
mov
cmp
arpl
ret
sub
mov
mov
adc
xor
pop
mov
mov
in
out
add
cld
test
pop
lods
pop
cmpsb
and
cmp
inc
cmpsl
xchg
lods
lret
in
pop
daa
pop
sub
sahf
filds
jle
sahf
lea
and
add
mov
dec
mov
xchg
aas
cmpsl
loopne
into
mov
cld
das
shlb
sbb
test
push
mov
cwtd
faddl
movsb
sub
icebp
jge
or
test
frstor
shrb
adc
scas
lea
pop
test
adc
bound
rorb
ljmp
inc
and
lret
icebp
pop
and
iret
push
pop
ficoms
jbe
and
sub
pop
enter
cwtl
lods
outsb
or
testl
loope
fnsave
cltd
out
sbb
mov
popa
lret
dec
mov
enter
fildl
mov
push
jle
rorb
xchg
jmp
cmp
les
mov
outsb
fdivp
lcall
mov
insb
nop
xor
cs
out
push
add
jmp
add
fcoml
mov
cltd
dec
pop
data16
cmp
fnstcw
loopne
and
in
push
daa
jmp
shrb
xor
pop
stc
lock
mov
adc
dec
pushf
lahf
mov
in
inc
in
mov
sahf
arpl
mov
shrb
xor
stc
insl
adc
movsb
push
movsb
cmp
movsl
cmp
xchg
fstpt
xor
imul
cmp
xor
cmp
xor
out
movsl
and
push
sbb
or
aam
jnp
add
cmp
loop
pop
andl
xor
imul
pop
cmc
loope
addl
mov
jbe
imul
adc
mov
shrb
cmp
shrb
std
sbb
ds
mov
test
out
pop
mov
fldt
bound
inc
and
ja
loop
push
sbb
adc
and
in
rorl
arpl
and
inc
cmp
adc
sbb
jle
test
or
mov
adc
and
jo
sbb
fistpll
xchg
pop
push
fdivrs
xchg
add
or
lret
sbb
imul
call
push
enter
bound
mov
push
repnz
mov
mov
sti
dec
arpl
sbb
out
lods
and
mov
pop
in
imul
movsb
dec
cmpl
icebp
push
arpl
and
mov
test
jge
pop
fidivl
add
dec
dec
in
stos
sub
inc
xchg
das
loopne
cmpsb
mov
inc
out
jle
subb
jle
xchg
inc
and
push
ss
lea
leave
es
in
pop
xchg
lods
test
sub
je
iret
sar
lahf
fwait
out
movl
out
cs
sub
cmpsb
int
fistpll
paddb
mov
or
aad
jecxz
push
dec
push
retw
fwait
dec
ret
xor
into
xchg
fcmovnu
sti
lods
dec
jmp
adc
pop
data16
repz
ljmp
fistpl
insl
pop
stc
pop
ret
out
dec
dec
aaa
int
fadds
or
aad
xchg
sub
cmpsb
out
mov
mov
pop
iret
dec
mov
cli
sti
rorb
mov
xchg
and
mov
pop
stos
subl
or
jmp
push
dec
les
mov
jo
xchg
jle
mov
and
stc
enter
ja
or
in
cmp
pop
repnz
jne
adc
cmpsl
pop
xor
das
push
testl
mov
pop
leave
shl
push
sub
pushf
bound
sbb
adc
cs
cmp
stc
push
mov
pusha
enter
push
dec
cmpl
clc
imul
mov
push
xorb
mov
int3
jae
mov
fwait
dec
add
add
and
jbe
sub
jle
xchg
jae
push
push
add
adc
shrb
fists
fwait
push
mov
in
stos
imul
dec
rcrb
stc
stos
inc
push
jmp
xor
push
push
pop
push
dec
test
jno
fcoml
test
dec
xchg
sub
mov
fwait
imul
imul
push
andl
or
lock
fdivl
daa
das
loopne
and
and
sbb
dec
sub
incl
dec
and
adc
xchg
pop
iret
cwtl
popf
xchg
fnstenvs
clc
or
fbstp
mov
xor
adc
xchg
ljmp
mov
jg
sub
jmp
inc
adc
cltd
mov
mov
outsb
mov
popa
xor
scas
mov
aaa
arpl
out
out
pop
js
shlb
jno
jg
mov
es
jg
enter
mov
fwait
xchg
mov
rol
pop
xchg
pop
movsb
or
sub
loop
jecxz
lea
jmp
mov
fwait
push
push
or
pop
stos
cmc
pop
rorl
sub
mov
pop
movsb
cli
cli
aam
xor
jne
ret
dec
sbb
mov
inc
xchg
sbb
xchg
dec
jg
or
loope
cmp
mov
sub
lret
add
sub
shl
push
out
data16
mov
sahf
sub
outsl
pop
sub
jmp
gs
fcmove
add
mov
jmp
push
jg
add
movsb
imul
rolb
sahf
dec
cli
out
gs
jl
xor
sub
stos
ficoml
iret
shlb
dec
dec
fdivr
shlb
jns
movsl
movsl
xor
iret
adc
and
push
cld
add
sahf
mov
xchg
sahf
sti
call
push
sbb
mov
pop
jnp
shrb
cmc
push
in
sbb
rcrb
push
dec
cmpsl
push
mov
imul
mov
rcll
sbb
sbb
les
pushf
in
push
dec
in
push
push
sbb
sub
mov
inc
loope
pushf
out
fisttps
rol
push
add
lahf
push
push
rcl
in
mov
mov
jecxz
mov
xor
jmp
mov
sahf
test
movsb
mov
fdivl
addr16
mov
imul
lahf
sbb
lahf
pop
stc
xor
out
bound
icebp
nop
bound
std
cmp
jp
ret
mov
fiadds
cld
je
xchg
fwait
xorb
cld
adc
dec
data16
pop
jmp
in
push
sbb
movsb
ja
cmpsl
xchg
xchg
cmpsl
adc
xor
lods
aas
fs
movsl
ja
ljmp
pop
xlat
aad
add
sub
xlat
push
rcrb
cmc
outsl
aam
scas
add
xor
push
insb
dec
sub
ja
push
cmp
xor
leave
mov
mov
repnz
pop
push
pop
arpl
xor
les
insl
out
dec
mov
bound
iret
ret
test
add
mov
pop
xchg
sti
mov
cltd
popf
outsl
insb
push
push
fcompl
pushf
xorl
pop
mov
xchg
dec
or
sbb
sub
push
mov
sbb
dec
xchg
mov
in
in
cld
xlat
push
aaa
sbb
outsl
test
in
push
jg
dec
popa
jno
mov
add
outsl
xor
iret
outsb
lds
cwtl
daa
negb
fwait
mov
cmp
sbb
adc
jns
fsubs
jmp
mov
scas
xchg
rolb
fsubrl
cmp
push
push
sub
pop
bound
popa
cmpsl
in
outsl
inc
stos
rcll
or
fdivr
pushf
jecxz
inc
enter
or
scas
fdivr
popa
sbb
jb
and
stc
gs
lahf
push
out
jmp
fwait
shll
clc
xchg
and
mov
arpl
repz
and
or
push
lcall
fs
dec
sbb
xor
iret
jmp
lock
add
pop
push
pop
ja
push
popa
mov
mov
adc
or
push
shr
or
icebp
jb
jns
aas
mov
dec
cmp
jne
jp
cmpsl
bound
sbb
mov
gs
push
push
dec
pop
lods
bound
pop
bound
sarb
shll
sti
imul
push
xlat
scas
js
xor
cmp
sbb
pop
push
ljmp
mov
cmp
jle
cmp
mov
insb
or
les
add
repnz
mov
jo
push
sbb
inc
push
out
fs
inc
mov
adc
push
xlat
js
jnp,pt
out
pop
push
jmp
aam
inc
aam
mov
or
push
movsb
ret
mov
call
fimuls
push
mov
or
mov
call
call
push
add
cmp
or
pop
test
push
mov
enter
into
push
outsb
push
fmuls
pop
sti
jp
mov
push
inc
loopne
int3
pop
lret
push
psllw
fwait
and
inc
in
lcall
ds
insl
jle
in
mov
loope
sbb
pop
jo
xor
iret
adc
imul
mov
xor
xchg
shlb
sbb
adc
into
mov
xchg
lea
cmc
dec
addr16
cwtl
lds
cmp
xchg
pop
dec
fcoml
outsl
addr16
loop
test
xchg
dec
adcb
mov
mov
call
cmpsl
adcl
and
jnp
sub
cmp
setl
scas
ffreep
orl
add
xchg
fcoml
out
out
cmp
mov
or
cmp
test
jne
das
push
inc
push
mov
adc
push
xor
shrl
shrl
mov
and
out
loop
push
push
fimull
xchg
icebp
adc
in
or
push
mov
scas
cmp
icebp
add
sbb
je
pusha
test
bound
push
out
adc
mov
out
cmp
mov
push
cmp
outsb
mov
push
push
fstpl
push
jmp
push
mov
lock
imul
sbb
test
or
in
ds
xchg
xchg
mov
addr16
sbb
imul
addr16
pop
adc
push
addr16
push
dec
mov
jle
cmp
nop
push
mov
dec
bound
movsb
inc
xchg
ss
sub
into
lods
aas
sti
xchg
lods
fdivrs
cs
scas
in
xor
arpl
push
inc
lock
idiv
jmp
push
xchg
cmp
jle
sbb
or
aaa
or
sub
inc
sahf
add
pop
mov
in
into
xorl
xor
lret
add
lcall
jne
sub
push
in
cmp
add
out
in
lods
xchg
out
jno
lods
addr16
push
and
fdivl
add
fcomp
andl
mov
jbe
scas
ret
decl
test
mov
int
xchg
loop
call
sub
pusha
add
dec
sbb
cmc
push
dec
cmp
cmpsb
pop
mov
fucomi
test
neg
push
pop
adcb
inc
iret
bound
pop
out
or
sbb
jo
cmp
lods
js
mov
jne
incl
sahf
cmp
cmp
push
mov
rcr
orb
sub
push
into
mov
insb
push
dec
mov
push
loop
bound
jg
lahf
shrb
sub
test
fsubp
push
iret
out
add
sahf
arpl
mov
daa
imulb
or
imul
incl
ljmp
jmp
movsb
push
jmp
das
mov
mov
mov
mov
xor
movsl
add
pop
push
scas
notb
out
cs
mov
push
inc
in
stc
pop
xchg
test
push
enter
push
xchg
mov
sub
or
aam
pop
repz
push
inc
test
inc
sbb
clc
bnd
sub
pusha
stc
insl
adc
dec
gs
call
push
popf
jp
xchg
mov
xlat
sbb
cwtl
push
jp
ret
dec
pop
mov
jmp
sub
leave
ficoms
dec
fs
inc
outsl
jle
sub
fs
outsb
inc
sub
ja
push
xabort
test
rclb
and
fildll
push
pop
dec
mov
je
jmp
into
mov
lods
in
into
psrad
sbb
fwait
add
dec
pop
xchg
mov
in
outsb
push
jg
in
jecxz
imul
add
jl
cmp
sti
nop
outsl
hlt
gs
jae
jge
pusha
aas
sti
mov
jo
into
sahf
or
icebp
dec
and
lods
xor
aaa
repnz
in
cmp
or
dec
xor
dec
lods
xchg
insb
cmp
pushf
jg
xor
sahf
shl
jmp
fimuls
cmp
sbbb
mov
pop
xor
pop
arpl
lods
push
xchg
daa
repz
jb
pop
sub
jle
xchg
sarb
pop
bound
mov
mov
fldt
imul
and
mov
mov
adc
bound
cwtl
lods
lret
push
insb
mov
cmp
and
and
stos
lret
mov
xchg
imul
repnz
lret
fsts
mov
dec
push
pop
and
clc
or
pop
cmp
sub
ret
in
aam
mov
ret
jnp
lds
and
xchg
dec
popf
pusha
dec
mov
bound
shrl
sbb
in
adc
bound
inc
mov
out
jg
dec
xchg
fnsave
fnstsw
adc
das
sti
mov
into
xchg
test
pushf
xor
jnp
addr16
add
cmp
xchg
add
aaa
push
sahf
or
adc
xchg
mov
int
fwait
cmpsb
and
jmp
insl
push
fwait
leave
xchg
jle
pop
mov
scas
inc
cmpsl
mov
movl
xchg
pusha
inc
ja
fistpll
sub
lret
movsl
out
cwtl
sahf
xorl
cmp
icebp
ds
cli
dec
shll
jbe
out
ficomps
test
fwait
and
sbb
adc
and
iret
dec
stos
push
adcb
in
sbb
outsl
mov
lret
cmc
fists
les
iret
jmp
xchg
das
and
je
mov
pop
pushf
leave
movl
mov
cs
fdivrs
in
iret
mov
ja
mov
and
mov
aad
leave
mov
cwtl
ss
inc
scas
and
dec
mov
dec
lds
and
mov
cmp
andb
pop
jb
mov
imul
sbb
and
pop
and
jnp
inc
gs
dec
pavgw
dec
in
cmp
je
cmp
dec
sar
es
add
push
gs
lahf
insb
sub
jmp
dec
stos
xchg
enter
mov
insl
mov
cmp
lret
cld
ljmp
aam
lea
pop
gs
lret
xchg
jne
stos
adc
mov
data16
inc
in
dec
add
aam
pxor
insl
pop
lock
bound
rcrb
sahf
xor
in
adc
jle
scas
xchg
xor
enter
adc
fwait
movsb
inc
sti
sub
lods
sbb
andl
mov
fimuls
in
imul
icebp
test
adc
rorb
andl
adcb
pop
pushf
and
testl
jno
adc
pop
mov
shrb
pop
adc
push
pop
pop
aad
mov
call
fwait
jmp
insb
ja
in
leave
mov
and
cmp
stos
xor
cmp
jae
mov
rcrl
push
fdivrs
stos
ficompl
mov
inc
xchg
xchg
sahf
sbb
insl
jmp
xchg
mov
dec
fldenv
or
hlt
lods
fcompl
jmp
xor
jecxz
push
scas
mov
inc
fistps
outsl
push
mov
decb
gs
ss
sbb
push
movsl
push
mov
mov
inc
or
jp
xor
or
xchg
addr16
mov
xchg
hlt
fwait
xchg
ljmp
xor
xchg
fdivl
ret
mov
xor
add
add
shr
push
inc
stc
in
push
rolb
in
push
ds
int3
sub
inc
cwtl
imul
push
sbb
xorl
xchg
mov
out
ljmp
mov
out
xchg
in
cmp
mov
pop
pop
and
out
jg
jecxz
jno
sub
cltd
call
cmpsb
pop
loop
push
scas
sub
cltd
pushf
in
push
adc
sub
int
bound
fmul
scas
mov
ss
dec
mov
push
stc
ret
pop
inc
outsb
ror
stc
pop
push
add
fcomp
or
adc
ret
cmp
or
popa
test
ljmp
adc
std
cmc
aas
or
dec
call
xchg
fdivrs
pop
mov
fnstenv
jmp
bound
loopne
pop
shrb
sbb
lcall
les
mov
leave
pop
mov
pop
cmp
in
mov
mov
xor
push
inc
pop
andl
repz
adc
adcb
mov
loope
nop
mov
scas
push
stos
push
lds
add
xor
adc
mov
mov
fdivs
lods
mov
adc
inc
dec
lods
imul
ret
mov
add
ja
push
ss
mov
movsb
test
mov
lcall
xor
xchg
add
sbb
sbbl
popf
cmp
mov
ds
push
sahf
insb
rol
stos
bound
sbb
sbb
shll
inc
jmp
movsb
inc
adc
push
mov
or
es
push
inc
testb
popf
testl
out
outsb
bound
and
xchg
pop
cmp
rcrb
inc
xchg
sub
dec
lods
out
inc
pop
out
jg
pop
lea
pop
outsb
dec
cmp
ret
adcl
cmp
xchg
push
lcall
std
pushf
xor
inc
in
push
enter
xlat
mov
ret
bound
sub
xorl
jl
fcompl
stc
fsubs
cmpsb
add
subb
mov
cmc
repz
pop
mov
push
push
dec
ds
std
cmp
jp
fcmove
lock
mov
pop
bound
jle
aad
jno
in
mov
dec
cmp
and
loopne
test
pop
add
jp
push
stos
jle
push
fwait
push
fstps
cmp
xchg
scas
cmc
loope
cmp
cwtl
loop
test
jle
in
dec
pop
pop
sub
adcb
adc
fstl
xchg
lods
push
sbb
and
popa
loopne
jbe
pop
sbb
test
rorb
ds
push
fsubr
mov
ror
std
lcall
loop
push
pop
cmp
and
mov
sub
adc
cld
ret
sub
mov
sbb
jmp
aas
adc
jp
out
scas
cmp
ss
cmp
add
bound
jg
lret
int3
sub
ja
lahf
call
xor
in
movsb
push
gs
cwtl
inc
in
imull
mov
mov
mov
sbb
jmp
imul
mov
insl
cs
push
shr
mov
imul
cmpsl
in
stos
dec
call
push
pop
sti
push
cmpsb
or
jecxz
add
xlat
dec
jae
loop
cmp
stos
popf
test
addr16
scas
test
jne
mull
push
sbb
lret
dec
lea
outsb
cmp
and
jg
bound
adc
andl
rorl
movsl
cmpsb
jae
push
xor
popa
imul
pop
cmp
sarb
mov
xchg
xorl
xor
pusha
rolb
cmp
lret
xchg
fs
push
and
xchg
push
clc
aam
sbb
scas
shlb
daa
roll
xor
pop
in
or
fnstsw
std
das
movb
mov
call
adc
xlat
cmp
cmc
xorb
lret
xor
sahf
pop
push
jg
movsb
data16
xchg
call
int3
xchg
xor
mov
insl
mov
or
push
bound
xchg
mov
fcompl
bound
scas
movsb
aas
pop
and
imul
cmp
addr16
xor
sub
dec
out
ret
and
cmc
ror
out
or
neg
pcmpeqd
lret
mov
xor
jnp
jo
fstpt
mov
daa
inc
cwtl
and
imul
insb
fidivl
lcall
pop
push
rcrl
scas
pop
addl
xchg
in
cmc
adc
out
stc
jle
sarb
add
cmp
fcmovnb
cwtl
dec
mov
sti
push
jne
out
push
js
push
or
inc
push
adc
sub
call
stc
adc
lcall
das
dec
or
dec
cmp
les
push
push
mov
jno
daa
je
fcoml
repnz
sbbl
mov
push
or
bound
and
cltd
lret
scas
dec
jl
outsl
scas
jno
sub
es
dec
push
stc
cmp
or
push
ss
mov
or
dec
aaa
out
mov
leave
jmp
cmpsb
dec
cmp
je
insb
cmp
stos
cli
mov
in
push
imul
jl
bound
mov
inc
lock
adc
fwait
xor
cmp
sub
or
mov
out
jmp
sbb
xchg
sub
lds
outsl
cmp
xor
mov
or
call
xor
gs
add
movsl
arpl
scas
push
push
popa
xorl
out
and
pop
stos
testl
xchg
cmp
in
fadds
pop
and
addr16
mov
aad
or
dec
bound
push
ficomps
adc
mov
test
lods
push
inc
or
cmp
dec
pop
mov
jmp
mov
xlat
bound
cmp
shlb
add
and
mov
cltd
scas
into
leave
sbb
jbe
adc
xor
or
mov
push
or
loopne
inc
lods
out
inc
mov
mov
ret
jno
pushf
mulb
test
jge
addr16
jecxz
imul
xor
add
insb
push
cmp
leave
cmp
push
mov
sbb
dec
or
fldenv
bound
repz
xlat
rolb
loop
cmc
lods
push
sub
arpl
hlt
sahf
mov
adc
push
sbb
cmpsl
test
sub
mov
xor
sbb
clc
and
adc
xchg
xor
aaa
mov
push
shrb
mov
dec
outsb
cmc
sbb
and
add
stos
fildl
sahf
enter
push
dec
sahf
dec
add
pop
xchg
mov
push
cmp
in
and
ja
and
lret
mov
push
sub
or
test
hlt
sbb
sbb
out
dec
and
lahf
and
mov
push
jno
add
shlb
xchg
iret
fsubr
and
addr16
imul
repz
leave
mov
add
imul
adc
pop
or
pop
xor
pop
enter
les
mov
mov
push
dec
adc
dec
sarb
lret
pop
mov
insb
mov
mov
mov
mov
inc
jmp
push
sub
je
mov
sahf
into
mov
imul
xchg
jae
aaa
outsl
lock
test
mov
mov
out
popa
rclb
mov
cmp
inc
xchg
xchg
dec
sbb
add
sub
loopne
insl
sbb
dec
mov
cmp
mov
pop
bound
and
sbbb
push
mov
jmp
pushf
and
sub
out
push
add
bound
sarb
jno
jne
jae
xchg
jp
mov
iret
inc
orl
push
xlat
pusha
mov
jb
ret
inc
or
aaa
push
jnp
adcb
push
mov
mov
jmp
dec
adc
pop
xlat
xlat
pushf
xlat
xchg
mov
dec
jmp
push
jmp
dec
push
call
fcmovb
ret
and
fwait
inc
adc
idiv
cmc
call
scas
repz
into
scas
into
out
push
xor
in
pop
cltd
or
movsl
push
jl
lock
popf
ja
mov
sub
push
xor
repz
jmp
sarb
push
test
push
xchg
push
sbb
adc
in
bound
data16
lret
stos
mov
jb
outsl
inc
addr16
pop
pop
fsubl
and
cmc
insb
lock
pop
ficompl
das
jmp
call
jbe
xchg
das
repnz
stos
sbb
dec
ljmp
mov
xor
add
lods
sub
pop
jmp
inc
or
es
in
int3
jmp
ficomps
push
insl
cwtl
xchg
jns
inc
test
add
mov
movsl
in
rcll
leave
out
test
lds
inc
xchg
xchg
mov
fwait
lcall
mov
xchg
js
orb
inc
or
jns
fcompl
es
je
das
push
inc
push
inc
call
and
add
subb
pop
loopne
rcrl
shrb
jb
js
leave
ret
ja
test
and
jp
lods
lock
xlat
mov
adc
xchg
push
stc
popf
dec
push
out
divl
in
stc
aas
pop
mov
xsavec
ja
cmp
fimull
fsubrs
inc
sbb
test
fsubs
dec
fbld
inc
imul
push
xor
leave
in
or
mov
or
mov
or
sahf
out
mov
scas
mov
pop
sub
sub
jb
pop
in
mull
pushf
and
fimuls
pop
loopne
sbb
ret
loope
bound
imul
cmp
dec
jle
daa
xor
arpl
insb
jnp
add
xchg
jg
in
pop
lock
repz
jmp
sti
or
mov
sbb
das
in
sbb
bound
inc
mov
fs
enter
jg
addb
push
mov
stc
bound
cwtl
sub
and
lods
notb
loopne
xchg
adc
xor
mov
das
cwtl
push
fisubrs
sub
cmp
adc
ss
mov
cli
mov
outsb
jmp
mov
mov
or
jnp
xchg
xchg
rorb
push
scas
out
mov
pop
mov
test
and
xchg
nop
or
jno
aam
sub
enter
cmp
aam
ja
js
xorb
sub
and
jg
mov
xlat
hlt
pusha
outsb
dec
outsb
and
sbb
push
pop
popf
loopne
pop
movsb
mov
inc
mov
or
lods
and
and
fs
insb
inc
test
or
ljmp
ret
mov
mov
imul
sub
mov
loopne
cmpsb
test
xchg
jo
push
movsb
out
push
mov
xlat
mov
shll
insl
sbb
in
imul
cmp
push
sarb
dec
mov
mov
xchg
mov
mov
lret
sbb
mov
pop
sbb
dec
push
test
mov
fstps
sbb
xor
cs
fildll
jno
cmp
lcall
shlb
inc
mov
sbb
pop
push
mov
out
mul
and
lods
xor
fnsave
sbb
cmp
push
imul
fnsave
push
jno
subb
in
mov
cmc
fstpl
inc
jg
bnd
cmc
das
out
dec
mov
jno
das
bound
es
in
pop
push
mulb
out
shlb
roll
fs
punpckldq
out
cmpsb
out
jg
fistpll
insb
lret
jo
push
mov
cltd
cmp
pop
pop
scas
out
xchg
out
cmpl
and
rorb
in
out
jae
stos
cld
cmpl
arpl
push
mov
out
push
sbb
std
mov
pop
mov
adc
stos
adc
jmp
sub
mov
pop
push
popw
jmp
and
bound
cmpsl
xchg
cmpsl
shll
in
mov
mov
mov
pop
movsl
adc
sahf
sbb
pop
jecxz
add
addr16
jns
fldenv
icebp
xor
mov
aam
push
ss
jno
es
mov
sbb
adc
sahf
xor
sti
push
nop
cmova
jle
aas
xlat
ja
pop
jo
or
hlt
push
mov
xchg
divl
enter
imul
scas
sub
ret
xchg
inc
jmp
lret
push
rcrb
call
mov
mov
inc
mov
add
cmc
cmpsl
scas
xchg
pushf
lods
test
dec
gs
insb
dec
out
and
mov
cmp
repnz
rolb
push
and
iret
jmp
mov
mov
pop
dec
pop
fxch
bound
scas
push
ja
pushf
jmp
mov
jnp
xor
ljmp
xchg
into
inc
add
push
sti
xchg
out
xchg
dec
or
in
push
push
pop
jg
icebp
pop
subl
adc
push
adc
mov
popf
xchg
pop
xor
in
push
mov
subb
adc
iret
lods
lret
iret
imul
popa
int
ds
fsubl
ja
jp
fimull
inc
sub
ljmp
ret
shlb
sbb
xchg
mov
push
xor
push
adc
clc
sub
mov
inc
test
mov
xchg
xchg
iret
push
fs
mov
and
mov
inc
or
dec
and
rol
or
inc
sub
push
jmp
or
mov
and
and
and
pusha
push
out
bound
mov
cmp
not
cmpl
mov
call
cmp
pusha
aad
xchg
leave
in
and
aad
std
mov
into
insb
jge
cwtl
test
push
shl
push
jge
in
data16
cwtl
fstl
outsb
outsb
mov
sahf
mov
pop
sub
jmp
xchg
fstpt
inc
push
movsl
test
adc
dec
xchg
sbb
dec
repnz
or
sarl
lret
test
movb
sahf
push
leave
push
jmp
shl
mov
sbb
inc
push
xor
cmp
call
clc
insb
pop
xchg
pusha
jp
sub
mov
int
jl
xorb
daa
fsubrl
xchg
in
test
dec
sbb
sbb
and
test
jmp
test
mov
imul
mov
addb
ss
mov
pusha
or
stc
push
pop
stos
call
jb
call
cld
cwtl
test
inc
arpl
dec
or
fldl
xchg
adc
or
xchg
out
lret
test
jmp
aas
sub
mov
mov
sti
jg
subl
push
push
addb
and
push
iret
fiadds
daa
add
cmp
pop
mov
pop
add
pop
lret
lods
inc
adc
xor
loope
mov
cld
sub
add
dec
xchg
jae
stc
pop
push
in
xor
enter
pop
lock
push
movsb
push
nop
stos
mov
mov
fists
cltd
jmp
adc
test
push
ror
ds
clc
pushf
mov
push
pop
xor
enter
lea
les
out
nop
push
pop
or
in
ja
test
imul
xchg
sbb
dec
in
cmpsl
lods
xchg
pop
push
sub
mov
inc
pop
pop
test
push
stos
test
adc
stos
push
pusha
cmc
or
in
sbb
push
nop
or
scas
ljmp
shrl
out
mov
in
lock
inc
pop
or
fstl
ja
dec
les
daa
ds
into
pop
icebp
push
push
cmpsb
fwait
push
add
popa
and
ljmp
int3
fldcw
das
push
loope
sbb
cmp
cltd
pushf
repz
xor
mov
fildll
gs
repz
inc
shr
bswap
inc
test
cmp
fwait
mov
push
shrb
inc
imul
mov
inc
dec
push
test
dec
call
and
or
push
sub
xor
pop
sarl
outsl
inc
sub
push
out
in
bound
fcomi
imul
jb
fs
fmuls
lret
outsl
push
cmp
popf
subl
push
pop
push
stos
mov
lods
lret
sbb
insb
xchg
loopne
jns
xchg
lds
mov
call
and
sub
jmp
push
out
mov
sub
push
inc
xchg
repnz
insl
stos
rcrb
stc
pushf
mov
lods
sbb
xchg
mov
shrb
lahf
clc
in
or
int3
sarl
daa
stc
insl
lds
jne
or
jmp
addr16
pop
xchg
xchg
dec
xchg
rorl
ds
add
fnstenv
dec
rcrl
in
rorl
shlb
or
or
jmp
push
rcrb
and
jg
fs
out
outsl
sub
les
out
dec
mov
test
or
or
mov
cmp
leave
mov
mov
mov
inc
loop
mov
mov
sahf
cmpsl
enter
cli
mov
cwtl
pop
xchg
cmovp
mov
sbb
sbb
dec
inc
pop
pop
outsl
dec
ret
test
dec
outsb
les
sub
mov
sahf
xchg
xchg
or
andb
push
cmp
fstpl
adc
fisubrs
ret
shll
frstor
mov
pusha
aaa
movsb
and
push
xlat
shr
imul
iret
add
jnp
fs
cmc
lds
call
pushf
lds
in
push
xor
lods
and
movsb
cs
jmp
dec
aam
lret
push
cmp
aam
add
fsub
push
xchg
insb
push
lcall
push
sub
pushf
and
fidivrl
arpl
test
iret
xchg
add
fs
add
cmp
jecxz
mov
mov
jbe
push
addr16
loop
xchg
push
stc
dec
sbb
mov
cmp
xchg
inc
leave
dec
ss
push
lahf
xor
push
fdivl
lods
cwtl
xorl
adc
sbb
test
icebp
sti
push
mov
add
test
sar
je
sbb
push
mov
jg
out
shl
xchg
push
mov
push
pop
sbb
das
jae
push
cld
jg
aam
loop
xchg
cltd
xchg
xor
push
jno
test
pop
sub
mov
add
iret
xchg
mov
pop
jnp
inc
add
out
sub
stc
sbb
shlb
push
jmp
inc
call
add
jnp
jmp
xor
es
mov
xor
bound
push
cmp
sub
add
clc
or
int3
clc
inc
jno
sub
push
mov
cltd
pop
mov
bound
mov
test
pop
int3
xchg
mov
mov
rcl
push
ss
call
bound
das
or
movsb
lcall
outsl
pushf
sbb
sahf
push
jmp
cmp
cmp
inc
sbb
cmp
push
int3
sub
mov
xchg
mov
push
cmp
call
pop
xor
dec
cmp
stc
arpl
lods
addl
sub
scas
xor
pop
adc
add
adc
sahf
add
mov
cmp
mov
jecxz
ret
lds
push
cmp
adc
pop
mov
call
shrb
insb
lods
loopne
fsubs
push
bound
mov
cs
xchg
or
pushf
mov
nop
es
cmpb
push
iret
bound
cmp
call
xchg
fwait
outsb
or
lcall
mov
inc
ret
loopne
subl
insl
cld
push
je
in
sbb
iret
mov
ss
and
mov
jbe
sub
jmp
mov
icebp
sub
sub
inc
sub
adc
or
xchg
lret
hlt
inc
push
popa
sbb
mov
jmp
movsl
ficoms
pop
jle
xor
arpl
fucomp
push
jle
jne
lret
out
mov
push
cmp
cltd
in
icebp
shrb
loopne
inc
and
andl
shrb
call
cld
orl
lret
ja
test
mov
sbb
pop
or
aam
stos
aas
and
cmpb
mov
jmp
push
das
jbe
pop
sub
lods
dec
xchg
cwtl
cmp
xor
jae
jecxz
gs
idiv
sub
xor
pop
sarb
jnp
and
push
add
xor
fwait
iret
jge
jg
daa
xchg
fadd
add
mov
push
incl
pushf
daa
pop
push
cld
inc
pop
pop
pop
jmp
and
test
xor
mov
adc
aas
pusha
push
mov
jo
sub
scas
js
xchg
pop
repz
mov
insb
push
lret
outsl
mov
jo
jp
dec
aam
bound
jmp
aad
ss
fisttpll
addl
xchg
aam
insl
add
fisubs
cltd
sbb
sub
sub
jg
bound
xchg
fs
shll
sub
inc
jge
xchg
sbb
bound
and
push
cmp
jne
cmp
jmp
subb
test
pop
xchg
dec
jecxz
mov
mov
mov
push
pusha
sbb
or
movsb
mov
ret
bnd
ret
sbb
jmp
inc
fwait
rorl
pop
jp
sbb
imul
push
xor
push
mov
jns
mov
cmp
inc
fsubrl
jb
push
xchg
movsb
and
cmc
cmp
mov
inc
push
lods
arpl
fistps
inc
cmp
lcall
mov
push
rol
rol
icebp
push
int
jnp
call
loop
and
fstsw
push
enter
push
sbb
mov
scas
enter
and
pop
cld
js
pop
jae
jnp
and
into
rcll
sub
std
jg
cmp
pop
rcrb
repnz
ja
add
pop
rcll
sub
ss
push
sub
jae
jl
lods
cmp
aaa
das
es
cmp
xchg
outsl
pop
cld
shr
cmc
dec
ret
mov
scas
mov
dec
in
push
push
jno
add
adc
jns
jg
sub
mov
and
adc
sbb
cltd
push
mov
push
into
push
cmp
mov
subl
adc
adc
mov
loope
push
mov
cmp
xor
data16
xor
lods
fldt
jecxz
adc
jge
pop
push
cmp
sub
out
add
das
enter
inc
ds
in
data16
or
mov
lods
jmp
dec
movsb
dec
mov
movsl
push
das
lahf
bound
or
pop
jecxz
jbe
jecxz
ja
sbb
in
xor
test
mov
lock
dec
fs
xchg
dec
arpl
push
push
and
pop
notb
xchg
aam
test
xchg
mov
pop
and
lret
icebp
or
push
lcall
movsl
movsb
and
js
sbb
loop
ja
test
adcl
jae
pop
cmp
jns
cmp
inc
popf
pop
inc
out
sub
imul
scas
les
inc
cmp
push
subb
inc
jp
jmp
jge
mov
daa
scas
xchg
rcrb
lds
jp
xlat
jecxz
inc
ret
rep
shll
mov
mov
lcall
test
push
ljmp
punpcklwd
call
mov
stos
sti
xlat
cmp
test
sub
nop
mov
call
std
movsl
sti
push
or
bound
roll
lds
scas
js
jp
xor
ss
out
rolb
out
or
int
addl
addr16
dec
jnp
shrb
roll
lock
jecxz
xor
jmp
call
cld
mov
xchg
dec
adc
ja
mov
arpl
jl
mov
mov
xchg
shll
std
hlt
pop
inc
jne
stc
sarb
pop
pop
out
pop
dec
psubsw
aam
ljmp
inc
aad
test
mov
xor
ja
or
pop
outsb
std
movsl
mov
fsubr
lods
push
repz
fistpl
cmp
int3
loopne
loopne
imul
push
rcrl
mov
out
stos
push
jmp
fwait
jmp
or
jmp
or
call
repz
xchg
rolb
push
sti
iret
scas
fs
shr
into
push
cmpl
sub
xchg
push
rorl
and
or
xor
fdivs
dec
sbb
test
outsl
std
xor
clc
sbb
call
jno
mov
inc
and
or
cmpsb
jle
aad
xchg
int
aas
enter
cmp
lods
pop
cmp
fisttpl
and
sahf
sbb
hlt
lock
xchg
repnz
notl
xor
gs
pop
repnz
test
pop
and
popf
xor
sti
out
dec
iret
pusha
push
js
jmp
andl
or
loopne
add
daa
out
cmc
mov
gs
out
push
push
nop
sbb
cmc
or
mov
or
loope
cs
aaa
pop
insb
lret
loopne
mov
add
bound
inc
push
mov
push
inc
or
pop
jl
bound
inc
in
mov
sbb
gs
dec
inc
jnp
mov
scas
mov
ret
push
and
fs
fldcw
cmc
push
xchg
shrl
cvtps2pi
out
lods
outsb
jg
xchg
insb
sahf
in
sbb
dec
push
xor
sbb
mov
fwait
cmp
cmp
ljmp
mov
push
stos
es
dec
push
popf
jns
and
das
fwait
nop
adc
imul
pop
pop
pusha
repz
lock
inc
stos
mov
outsl
or
inc
leave
ret
fisttpl
adc
out
test
mov
bound
mov
push
cmp
out
loop
cmp
test
and
pop
or
rcrl
lock
fbld
inc
inc
jle
sub
jle
adc
pop
ds
cmp
js
mov
out
mov
ss
rorb
dec
addb
mov
jmp
push
push
mov
xor
movsl
dec
pop
and
clc
jmp
cmpsb
pop
xchg
shrl
dec
nop
or
push
adc
dec
jmp
dec
inc
sub
in
jmp
and
jg
int3
subl
es
cld
and
out
scas
das
sbb
lret
in
lock
add
inc
scas
aas
cmp
jae
pop
sub
jg
or
scas
out
sub
fistpl
or
push
iret
mov
daa
shlb
add
jg
test
in
les
mov
adc
imul
mov
jbe
out
and
dec
jo
dec
pop
vpcmpeqb
outsl
add
adc
adc
js
bound
and
xor
xor
push
aaa
dec
jne
mov
out
aam
mov
dec
mov
or
adc
xchg
push
jae
les
mov
xor
test
sub
leave
cli
les
in
cltd
sub
adc
data16
cs
xchg
inc
push
xchg
lock
aam
popf
cld
andl
add
cld
xchg
jle
xchg
or
adc
icebp
sarb
in
ljmp
cs
jbe
sub
in
insb
lock
mov
out
sarb
dec
out
pop
lds
popf
jne
xor
sti
addr16
ds
mov
or
loop
xor
sub
jg
out
shlb
xchg
lock
decl
push
in
mov
push
inc
fstl
jmp
cmc
insl
jb
fs
xor
add
push
xor
fwait
mov
cmp
xchg
sbb
std
loope
divb
lret
and
xchg
in
mov
cmc
sbb
push
movsl
out
test
xchg
pop
into
mov
push
pop
ret
mov
loop
dec
jnp
push
dec
fsubrp
inc
mov
int3
xchg
popl
jae
pop
pop
repz
pop
cmp
pusha
sbb
or
cmpsb
xchg
mov
lret
in
imul
ljmp
cmp
movb
movaps
pop
arpl
mov
pop
outsl
shll
mov
mov
pusha
pop
lock
jb
mov
movl
lds
xchg
sub
xchg
test
fs
bound
pop
ret
ror
icebp
pushf
pop
dec
sysret
sahf
das
repnz
or
cltd
lret
cs
push
push
dec
sbb
mov
das
xor
cmp
sbb
adc
sti
dec
mov
jecxz
int3
stos
cmp
add
sbb
imul
push
xor
test
cli
push
lret
mov
inc
int3
nop
shll
imul
icebp
cmp
in
mov
or
jmp
fdivrs
mov
mov
ja
sahf
iret
adc
cltd
or
inc
out
lea
fildl
pop
bound
rolb
shr
mov
jae
or
idivb
mov
or
jg,pn
stc
adc
and
ljmp
push
mov
stos
xchg
scas
jno
push
fsts
mov
mov
dec
pop
bound
cmp
mov
jae
xchg
dec
sub
mov
lahf
int
cmpsb
xchg
mov
insb
xchg
imul
mov
xor
inc
and
adc
fwait
jmp
ret
bound
cs
aad
movsb
and
and
xlat
loope
xchg
lock
jnp
dec
das
insb
in
lock
imul
bound
mov
adc
out
dec
dec
sti
adcb
xor
repz
cld
sbb
fwait
push
nop
cltd
jl
push
push
in
loopne
cmp
and
cwtl
dec
mov
stos
jecxz
fstpl
push
and
add
jnp
push
sub
hlt
dec
pxor
lret
les
cs
jg
inc
arpl
push
adc
mov
mov
xchg
test
cmpsl
mov
push
push
dec
push
push
xor
into
jae
sti
jge
pop
fsubr
inc
mov
sti
imul
sti
dec
daa
outsl
mov
mov
jmp
mov
or
mov
call
push
aad
cmp
aam
out
iret
out
in
push
out
push
out
pop
stc
and
jecxz
loope
mov
push
ja
lock
mov
sub
pop
pop
xor
pop
and
movsl
pop
sub
jecxz
cmpb
mov
stos
sarb
test
push
adc
repz
xor
imul
scas
outsb
ficomps
mov
and
dec
sbb
cmp
pop
jmp
cmp
push
push
inc
mov
stos
push
imul
enter
insl
rcl
sbb
mov
cld
add
add
insb
out
dec
repnz
xchg
mov
or
imul
in
mov
xchg
push
add
leave
das
andl
ss
mov
mov
test
push
aam
mov
in
fistl
stos
fadds
push
push
and
movsl
hlt
idivl
push
push
movsb
fwait
shl
pop
shlb
mov
push
rorl
pop
add
lcall
inc
aaa
popa
jg
sbb
aam
fcos
jl
jne
call
ds
jae
push
dec
jg
call
jg
je
nop
adc
mov
cmc
and
les
out
mov
sbb
mov
mov
jle
js
fwait
jbe
mov
fistl
pop
add
push
in
cmp
mov
test
and
jecxz
insb
push
bound
lods
push
add
loop
sub
jg
xor
pop
scas
jne
data16
cmp
push
ret
sbb
push
setne
scas
mov
lods
xchg
imul
jo
movsl
or
jmp
outsb
push
add
and
inc
fldcw
xor
in
push
stc
inc
icebp
jns
loop
mov
fisubrs
xor
mov
xor
xchg
push
leave
pop
in
sbb
popf
sbb
cmp
rolb
push
in
pop
repz
or
pop
dec
mov
daa
xor
adc
adcl
les
dec
fwait
sub
cld
mov
push
dec
xor
xchg
mov
xor
enter
xor
push
gs
cwtl
and
shrb
addr16
in
jo
push
movsl
aad
andb
das
fs
inc
push
sbb
push
push
test
icebp
stos
xchg
into
fdivl
pop
std
sub
out
outsl
jle
pop
jnp
lret
pushw
pop
push
xchg
popa
push
mov
add
mov
aam
div
xlat
cmp
mov
sub
mov
jae
push
test
or
mov
adc
loopne
dec
movsb
movsl
enter
insb
mov
popf
out
cmp
ds
movsb
pop
sahf
dec
dec
mov
and
xorl
lret
adc
sub
out
and
add
pushw
ret
sub
xchg
sti
sub
mov
xor
int
ss
dec
mov
loop
xchg
dec
clc
cmp
cs
lock
das
dec
dec
and
ljmp
mov
push
iret
pop
sub
out
mov
shrb
fcomps
repnz
dec
insb
dec
rclb
rcrl
push
hlt
aad
jo
push
pop
inc
and
imul
cwtl
mov
xor
insb
mov
mov
scas
jnp,pn
jae
mov
jl
cmpsb
mov
cmp
outsb
mov
out
inc
call
jne
pusha
test
and
scas
jmp
out
xchg
clc
shlb
sbb
bound
mov
rcll
pop
inc
movsbl
xor
cmpsl
je
push
mov
or
mov
pop
or
mov
xor
jecxz
leave
push
out
sarl
cltd
sub
lcall
dec
dec
in
jnp
dec
lret
jbe
dec
into
lahf
pop
out
push
mov
xchg
jecxz
sub
add
insb
jecxz
push
movsl
fdiv
cld
addr16
enter
daa
test
out
in
push
inc
lret
dec
daa
add
sub
pop
sbb
insb
gs
aad
dec
mov
cld
or
dec
mov
push
sbb
xorps
rcll
fcomps
in
inc
cmp
das
sti
push
fiadds
stos
loope
fdivrl
ds
and
add
mov
xchg
stos
ljmp
push
push
outsb
cmpsb
stc
xor
ficompl
dec
bound
fwait
mov
loop
shlb
jmp
imul
es
ret
sar
lahf
scas
clc
bound
enter
or
jl
ret
cltd
sbb
and
lods
pushw
lds
in
bound
xor
push
mov
sbb
shrb
pushf
repnz
dec
mov
jnp
fisubrs
jo
sbb
mov
mov
out
xor
sbb
cmc
pop
or
jne
scas
icebp
aam
fisubrs
sub
adc
clc
mov
xor
testl
arpl
inc
fs
ljmp
push
ss
pop
jg
imul
mov
adc
stos
jl
xchg
lret
addr16
aad
cltd
gs
test
sub
repnz
fwait
xor
loope
ficoml
xor
xchg
in
lret
adc
push
mov
add
ja
xchg
push
int
mov
jmp
add
outsb
push
imulb
dec
in
xor
sub
ss
cmp
lods
sub
xchg
dec
call
inc
orl
push
gs
in
outsl
out
mov
loopne
bound
xor
andl
cmp
adc
and
lods
das
lahf
push
xor
out
xor
or
jg
out
aam
mov
cwtl
cmp
iret
pusha
popa
lods
ja
cld
push
jge
xor
push
sti
dec
xchg
add
repnz
bound
les
dec
xlat
shlb
fsub
adc
movhlps
or
pop
icebp
fbstp
test
testb
shlb
push
mov
dec
rcr
cpuid
cltd
push
sbb
sahf
nop
inc
mov
jne
jp
inc
cmc
fdivrp
jle
dec
mov
outsl
jns
pusha
mov
and
push
mov
jne
mov
imul
or
mov
mov
dec
pop
mov
push
shl
adc
in
outsb
xor
xchg
pop
shl
inc
test
imull
test
test
in
ss
cmp
push
fistl
loope
cmpl
lcall
test
mov
xchg
mov
mov
mov
shll
lret
es
fdivrs
push
mov
loopne
push
popa
jmp
sbb
jp
lret
push
sbb
les
pop
mov
jle
push
and
inc
das
xor
lcallw
jmp
mov
sub
aaa
pop
pop
call
push
or
adc
mov
mov
inc
push
dec
sbb
stc
insb
mov
bound
pusha
cmp
mov
idivl
mov
inc
lds
mov
inc
lcall
cmc
sub
pop
pusha
pop
sub
lods
cmpsb
pop
scas
mov
adc
lds
push
and
fs
fwait
rol
mov
in
mov
insl
cmc
sub
sub
inc
push
clc
mov
outsl
cmp
das
cmp
adc
aam
cmp
dec
outsl
pop
cmpsl
sbb
js
cli
cmpsb
enter
mov
push
mov
lds
mov
insl
push
and
cwtl
sbb
xchg
rcrb
mov
push
xor
movsl
popa
push
and
hlt
popa
xor
and
imul
jle
or
sbb
inc
dec
or
pop
push
sbb
shl
es
or
in
mov
push
cmp
mov
fcomip
test
popf
push
icebp
icebp
lods
shl
cmpsb
cmp
xor
lods
sub
fdivs
es
mov
mov
fsubrl
insb
repz
mov
call
fcmovnb
out
int
add
cmp
mov
push
lods
call
test
cmc
ljmp
or
fcomp
pop
adc
rcr
inc
outsl
cltd
and
pushf
or
xchg
scas
js
mov
das
movsb
inc
inc
cmp
mull
inc
or
call
sub
pop
stos
fadds
mov
mov
push
add
pop
push
sub
sbb
loope
cmpl
and
sbb
inc
push
sbb
test
leave
mov
sub
sub
mov
jne
into
jo
sub
adc
xor
icebp
ds
out
fiadds
enter
pop
mov
imul
xor
movsl
pop
xlat
lods
cmp
loopne
pop
push
mov
lock
gs
dec
inc
outsl
add
fwait
pop
clc
mov
nop
push
cli
lea
sti
mov
loope
push
jp
jne
lock
mov
aas
mov
inc
pop
in
push
out
outsl
imul
scas
mov
mov
xchg
imul
xchg
ss
mov
and
aam
ja
scas
push
aas
dec
dec
mov
and
push
dec
xchg
dec
movsb
pushf
xchg
and
daa
sub
outsl
das
ret
sub
xchg
ds
pop
jp
icebp
js
idivb
inc
fwait
mov
shrb
js
dec
sahf
inc
dec
jno
cld
es
clc
mov
mov
cltd
xchg
popa
movsb
fldenv
inc
jno
repnz
jg
pop
lret
jmp
iret
sbb
sub
sbb
shll
pop
add
add
scas
jecxz
out
scas
mov
mov
pop
aad
add
fstl
in
mov
into
and
mov
ja
ja
pop
jecxz
jb
jne
pop
pushf
aad
sahf
jnp
inc
mov
fdiv
jno
mov
push
cmp
leave
dec
stos
nop
ja
ret
dec
aad
dec
bound
dec
shl
fwait
rorb
pop
add
pop
push
jmp
xchg
mov
out
xchg
pop
sub
inc
mov
scas
sbb
enter
shll
inc
les
aaa
lods
mov
xchg
loope
and
jmp
bound
pop
dec
jle
jg
in
lds
pushf
in
push
dec
ja
mov
mov
sbb
bound
clc
ret
and
sbb
jg
mov
push
lcall
mul
jno
and
jl
push
fwait
mov
pop
daa
js
push
cmp
mov
and
mov
dec
and
sub
jne
pop
dec
pusha
pop
outsb
daa
xor
arpl
push
jb
shrb
repz
mov
fcoml
aaa
mov
pop
ljmp
setle
bound
lods
rorb
das
adc
mov
push
inc
xor
mov
neg
mov
cld
pop
push
push
shlb
into
out
fstl
cmp
inc
adc
aas
and
scas
fidivl
mov
dec
fsubr
push
inc
outsb
xlat
cmp
stos
fiadds
mov
out
fists
aam
add
sti
sub
mov
test
mov
rolb
jge
or
lcall
push
mov
mov
jmp
sbb
mov
xchg
cmp
mov
in
or
add
decb
js
lret
aad
andb
enter
cmp
cmp
jbe
push
push
fsubl
ja
xchg
jbe
arpl
and
out
dec
cmc
lods
push
test
add
loopne
mov
push
pop
arpl
mov
inc
lds
cwtd
les
add
sahf
adc
mov
jmp
call
xor
jg
sbb
push
xchg
adcl
jmp
insl
pop
pop
sahf
jae
fstpt
fs
pop
mov
lahf
push
sarl
sbb
dec
dec
es
mull
pop
sahf
fldenv
sti
jmp
lock
ja
bound
sbb
aas
jle
cmp
jle
clc
mov
adc
xchg
xor
dec
dec
jp
outsb
sbb
push
xor
daa
mov
and
dec
lea
aad
daa
cmp
test
inc
pop
je
and
mov
push
or
jbe
fidivs
mov
pusha
pop
mov
dec
das
scas
xor
dec
pop
stc
cmp
loop
sahf
jmp
nop
push
mov
lret
movsb
sahf
push
inc
repnz
dec
mov
pushl
push
push
jb
cmpsl
mov
aas
popa
shlb
jle
push
sti
movsb
rorb
pusha
fldcw
shr
pop
gs
aad
push
mov
outsl
push
add
push
push
outsb
or
jb
rolb
bound
ret
push
add
or
arpl
inc
push
scas
push
sbb
mov
pushf
insl
inc
push
push
fsubl
outsb
cmp
jmp
or
es
bound
lahf
fs
push
repz
dec
cmpsl
lret
leave
aad
test
cmp
mov
xchg
xchg
push
pop
adc
jns
mov
jmp
inc
dec
out
xchg
cmpsl
dec
lods
in
inc
out
shr
cmp
push
dec
fiadds
inc
hlt
daa
ret
jo
cmp
out
test
add
test
dec
mov
iret
push
les
mov
adc
mov
sbb
ret
adc
ret
sti
testl
push
imul
leave
push
into
loopne
ss
inc
mov
int
aam
pop
std
pop
push
adc
mov
int3
inc
jns
jbe
sti
pop
pop
aas
scas
fdivrs
mov
pop
cmp
daa
fs
cld
subl
into
push
scas
dec
jl
xchg
cmp
inc
imul
or
xchg
xor
mov
lods
mov
cmp
xor
rcrb
jmp
ja
jne
cmp
adc
test
call
jno
in
sti
sub
mov
lret
push
xor
pusha
push
inc
adcl
in
pop
mov
dec
jo
xchg
xor
push
and
repz
test
sub
cwtl
subb
aaa
adc
daa
ret
aas
mov
push
or
cmpsb
adc
xor
inc
push
inc
or
mov
fsubs
mov
iret
or
sti
loopne
ret
ja
fidivrs
push
mov
xor
divb
sahf
add
inc
mov
daa
stc
push
scas
add
jecxz
or
fildl
sahf
sbb
lret
out
rolb
xor
bound
cmpsb
roll
movsl
dec
sarb
gs
inc
push
sbb
sahf
cld
in
fsts
jg
lret
ret
adc
cwtl
push
sub
inc
jne
sbb
jns
data16
fists
xor
add
int3
sub
sbb
mov
testb
and
stos
mov
xchg
inc
mov
or
out
inc
in
inc
ret
cmc
jne
repnz
enter
jbe
mov
and
push
mov
cltd
enter
lret
push
pop
pop
add
xchg
loopne
jge
push
sub
testl
popa
xchg
add
call
dec
xchg
pusha
inc
ja
mov
cltd
iret
ljmp
mov
ficoms
jg
bound
jmp
push
mov
mov
jmp
mov
jg
bound
in
scas
push
inc
out
and
jmp
data16
sti
loop
mov
xchg
jecxz
push
mov
and
jbe
or
xchg
sbb
mov
out
nop
jmp
bound
pop
mov
pop
or
jl
ja
sahf
outsl
bound
fsubr
push
loop
shlb
call
in
arpl
out
sahf
xchg
mulb
sub
jg
leave
cmp
pop
push
jle
frstor
sbb
inc
rcrl
sub
dec
shrl
xor
movsl
std
cmc
cmp
fcompl
mov
jnp
mov
pop
loop
push
out
hlt
push
nop
cmc
pop
insb
ljmp
mov
lret
mov
sbb
or
jecxz
cltd
roll
pusha
aaa
xchg
add
jbe
lahf
jmp
dec
mov
pop
enter
xor
leave
out
push
inc
dec
xor
mov
gs
cmc
cltd
pop
mov
xor
jae
push
sbb
jmp
jo
mov
cmp
imul
std
or
xor
and
outsl
cld
xor
in
dec
mov
inc
fmulp
push
cmp
or
nop
ret
nop
sub
dec
stc
sahf
call
pushf
push
loopne,pt
aam
arpl
test
mov
test
mov
pop
aam
sub
dec
rcrb
mov
push
movl
cmp
int3
pop
jg
lds
push
in
cwtl
pop
add
pop
jle
addr16
mov
pop
stc
or
lret
ja
lods
cwtl
dec
xor
and
lock
cmp
inc
inc
nop
in
out
push
iret
bound
ret
and
xchg
js
fucomip
push
dec
push
std
out
loope
sub
inc
add
mov
fisubrs
or
xchg
lds
dec
cmpsb
in
cwtl
sub
lods
fwait
and
jg
adcb
pushf
jecxz
push
sub
pop
mov
jmp
push
sub
fcom
adc
frstor
push
bound
lds
add
sbbb
into
add
sbb
xchg
xor
add
loopne
inc
push
xlat
ja
pop
je
inc
jecxz
cmp
mov
test
add
dec
in
sub
out
pop
xchg
mov
inc
sbb
arpl
fildl
sbb
fcompl
push
shlb
stc
frstor
push
add
push
sti
movsb
jbe
mov
mov
mov
incb
mov
cmp
xchg
mov
jo
mov
les
test
lret
jns
xchg
repz
out
ss
dec
sub
rolb
xchg
inc
rorb
stos
int3
mov
inc
leave
ds
xchg
jbe
or
sub
mov
out
xchg
les
push
mov
sbb
mov
pop
in
dec
ror
test
fwait
xor
int3
xchg
aaa
loopne
cmpsl
and
insb
lcall
dec
shrl
cmp
data16
in
push
cltd
ljmp
sbb
jo
inc
push
cmpsl
hlt
pop
dec
push
in
addr16
arpl
imul
xchg
push
adc
and
mov
in
push
cwtl
ss
mov
insb
pushf
mov
lods
add
std
pop
push
jae
xchg
iret
scas
or
lret
push
shrl
xchg
gs
movsb
dec
jmp
inc
mov
jae
xor
push
repnz
pop
in
in
xchg
movsl
out
jb
jne
mov
cmp
loopne
fs
lods
jmp
call
outsl
popf
loopne
scas
insb
sub
push
les
dec
loopne
in
je
ror
jg
inc
lock
mov
xchg
aam
push
jno
push
jp
ljmp
inc
dec
lods
jae
xchg
lock
fmul
dec
ljmp
and
mov
jmp
test
jns
pop
jbe
fwait
mov
inc
pop
out
sahf
dec
out
repnz
sahf
leave
and
sub
inc
call
pop
and
inc
mov
fisubs
xor
shlb
fwait
kmovd
int
stos
inc
sbb
popa
lods
jnp
loope
pusha
loope
arpl
push
or
ret
outsl
lret
loope
cwtl
aad
fcomip
jle
in
sbb
push
pop
mov
push
mov
add
xchg
sbb
sti
lret
enter
pop
jp
repz
nop
push
add
lock
adc
out
call
mov
test
sub
cmp
inc
pop
jb
mov
pop
inc
inc
dec
sub
dec
adc
in
fwait
out
dec
dec
out
mov
icebp
cmp
in
into
push
iret
sub
enter
xor
dec
lock
inc
repz
cmpsl
fisubl
in
mov
fstpl
xchg
sbb
mov
pop
test
and
insl
push
jp
popa
push
stos
data16
push
mov
push
cs
inc
mov
sti
rcrb
dec
repz
cmp
out
inc
push
fmuls
pusha
cltd
in
xchg
and
ret
ljmp
into
push
sub
dec
xlat
xchg
out
pop
push
and
pop
lea
add
subb
sahf
por
stos
cmc
mov
mov
push
mov
push
xchg
iret
loopne
push
or
cmp
or
adc
adcl
imul
add
lds
ret
loop
roll
and
pop
push
add
sbb
lahf
push
and
pop
imulb
hlt
lods
in
add
aam
mov
fsubrs
iret
sbb
adc
inc
out
and
mov
aad
paddusw
inc
mov
imul
mov
mov
fldl
cwtl
js
mov
push
in
or
jae
adc
xchg
shlb
push
negl
in
mov
sti
ds
lret
sub
int3
inc
jg
outsb
push
mov
lea
aam
push
mov
in
cltd
push
mov
dec
cmp
mov
mov
push
xchg
sarl
das
cmpsb
lret
inc
fs
loopne
push
xor
push
or
bound
push
cmp
or
fwait
imulb
in
lahf
bound
out
push
insb
movsl
cltd
fimull
push
mov
xchg
in
push
lock
insb
pop
pop
enter
mov
xchg
push
dec
cld
rcrl
fdivp
incb
or
loope
push
jp
stos
mull
lret
in
push
jecxz
mov
inc
jne
jne
pusha
push
loope
sub
cmp
dec
scas
shrb
loop
insb
inc
mov
outsl
dec
outsb
push
mov
fiadds
pop
push
insl
sbb
in
rorb
mov
ret
jae
and
or
iret
cmp
jle
xor
sarb
in
mov
pop
pop
shl
and
xchg
sarb
adc
pusha
push
es
sub
fsubl
stc
jmp
inc
or
cmp
mov
jo
mov
push
and
lods
push
dec
pop
or
xor
jo
push
mov
or
jecxz
jmp
test
xor
pop
cltd
add
mov
call
and
dec
pop
mov
enter
call
arpl
mov
or
push
orl
cwtl
xchg
popf
push
addr16
mov
iret
and
loopne
iret
jae
mov
jge
jmp
jg
ret
add
jl
pop
xchg
xchg
mov
push
add
cli
mov
stc
in
lret
test
shr
mov
sahf
stos
pusha
xor
xor
sub
scas
or
lds
pop
lock
push
gs
cmp
sub
pop
cmpsl
fldt
push
xor
cltd
jmp
sbb
fstpl
cli
repz
sub
push
and
or
xor
ljmp
xchg
or
jnp
inc
lret
mov
push
inc
addr16
clc
mov
xor
pop
cmp
push
jg
push
lahf
rcrb
mov
orb
push
in
pop
arpl
push
in
ficoms
pop
movsl
jmp
jb
in
xchg
jne
fdivrl
mov
cli
add
pop
sbb
jbe
movsb
popa
addr16
gs
jl
iret
nop
stos
bound
idivb
fidivs
movsb
cmp
pop
jno
into
add
jmp
add
push
andb
jle
mov
or
std
cmp
mov
lcall
sbb
push
movl
test
call
inc
fadds
cmp
sbb
inc
rcrb
les
sbb
ret
jo
push
mov
es
sbb
sbb
pop
add
cltd
push
mov
mov
and
ret
cmpsb
fwait
pop
and
inc
lock
dec
add
fld
sub
test
and
ja
cmpb
jne
jns
xor
mov
cmp
xchg
call
lock
mov
es
scas
push
lahf
mov
adc
aas
jo
add
cmp
insb
inc
xchg
pop
or
or
mov
sub
adc
ss
sub
jmp
fiadds
icebp
outsb
loope
bound
pop
push
testb
inc
inc
fwait
dec
pop
cmp
loop
cmp
sub
ficomps
push
mov
ret
dec
pop
sbb
cmp
cmp
dec
call
adc
lret
ror
push
jno
dec
dec
in
gs
mov
push
mov
ret
push
imul
jbe
stc
mov
jns
stc
sbb
rorl
mov
popa
clc
sbbl
push
shll
xor
enter
je
or
jnp
mov
mov
cmp
ret
push
push
iret
mov
lods
fldt
fs
cmc
cmp
xchg
std
addb
jle
inc
outsl
push
leave
stos
or
lcall
movb
pop
or
lods
lret
lret
call
loope
je
repz
insl
lods
cmp
mov
mov
mov
inc
iret
repnz
push
jecxz
cmpsl
jmp
cld
or
mov
adc
push
add
add
stos
std
cmpsb
out
jle
scas
and
push
loop
loopne
data16
loopne
icebp
inc
fisubl
xchg
mov
enter
sti
push
jo
mov
insb
sti
mov
mov
lahf
cwtl
roll
imulb
pushf
popf
mov
in
cmp
insl
jo
cmp
sub
lea
mov
xorl
scas
mov
cmc
pushf
insl
mov
adc
push
int
loopne
mov
cmp
mov
push
push
cmp
test
pushf
idivl
and
pop
mov
inc
int3
inc
fildl
les
cmp
xor
push
push
imul
rorl
adc
jle
push
pop
cmpsb
inc
mov
loope
jg
adc
push
sahf
xchg
or
cmc
in
scas
test
dec
jg
pop
push
shlb
jo
inc
pop
sub
lret
cwtl
push
xor
dec
in
mov
inc
or
mov
pop
mov
xchg
push
ret
outsb
in
xchg
mov
sbb
jne
fnstsw
shrb
xchg
jbe
cltd
jmp
jnp
push
cmp
sbb
lea
out
push
sub
push
sahf
outsl
push
test
lods
cmp
mov
jmp
negl
in
add
fdivrs
data16
rolb
ss
add
lods
stos
adc
popf
dec
fucomi
fucomi
pushf
push
xchg
dec
dec
hlt
cmpsl
dec
outsb
pop
jmp
mov
imulb
xor
pusha
cmp
adc
and
push
bound
add
pop
xchg
pop
aam
and
xchg
scas
ljmp
dec
adc
push
loopne
cmp
scas
sahf
or
add
dec
and
dec
lds
mov
mov
ss
or
xlat
aas
repnz
and
mov
adcb
imul
js
dec
daa
out
andl
push
push
popa
xchg
imul
cwtl
iret
mov
pushl
push
lret
in
pop
loope
lock
sbb
fwait
mov
fidivs
movsl
lret
mov
sbb
pop
lea
xor
lret
fbstp
and
mov
aad
mov
shll
mov
pop
aam
loopne
push
aad
push
or
mov
pop
mov
mov
cmp
enter
stos
movsb
and
mov
push
push
test
test
flds
scas
mov
sub
and
adc
sarl
sbb
push
into
das
mov
imul
subl
std
enter
loopne
jbe
dec
xor
push
xchg
addl
fdiv
test
movb
jl
jb
xor
jle
mov
lods
enter
mov
rorb
enter
add
fidivs
mov
test
and
jo
lcall
add
push
shrl
ret
adc
xchg
or
or
inc
or
mov
mov
cmp
fstpl
adc
lahf
insl
in
pop
data16
aas
cmpsb
lret
fs
lock
cmp
mov
mov
int3
pop
into
hlt
dec
dec
loopne
and
mov
dec
xchg
or
loopne
or
sbb
and
push
adc
mov
push
loop
hlt
popa
push
mov
xchg
jnp
xor
bound
cmc
or
lods
int3
and
push
ret
out
cmp
sub
xchg
lret
cmpl
xchg
pop
out
lea
inc
fildl
push
jg
rorb
aam
xor
sub
jae
cmc
mov
fsubrs
mov
push
push
xlat
mov
iret
xor
iret
rclb
jae
scas
in
or
jecxz
idiv
mov
in
push
push
in
mov
cmp
in
cmpl
mov
loope
scas
mov
cmc
shrb
mov
jp
push
bound
jnp
outsb
and
cwtl
jne
das
jmp
pop
ss
aam
les
cltd
ret
mov
mov
mov
push
cs
push
mov
daa
add
ds
bound
xor
test
aaa
or
pop
lea
fwait
adc
xor
cmp
loop
sbb
rolb
and
mov
call
iret
sub
shl
cld
cwtl
pop
inc
mul
cmp
mov
das
push
push
cmpsl
and
cld
mov
push
and
pop
rcrb
cmp
push
or
outsb
sar
inc
push
mov
add
cs
call
icebp
aad
sub
loope
outsb
in
cmp
jle
cmc
in
xchg
add
push
sub
fmul
lods
out
dec
push
outsl
fdivs
imull
fmul
adc
xchg
orb
jae
rcl
jmp
into
lea
nop
push
push
in
push
jnp
sbb
mov
aam
and
pop
xor
mov
xchg
stos
jne
adc
ja
sub
daa
int3
outsb
sahf
test
or
aad
adc
daa
stos
dec
into
mov
sbb
mov
in
mov
dec
mull
loop
sbb
fstps
test
insl
push
ret
adc
cltd
mulb
popa
cmpsb
jno
cs
cli
xchg
mulb
and
aas
sbb
stos
fld
cltd
mov
push
xor
stos
push
jo
pop
dec
fildl
dec
dec
or
enter
aas
clc
stos
and
shrb
decb
sub
out
popa
lahf
push
inc
ds
lret
fcmovb
jl
xor
fst
ja
imul
push
pop
je
sbbb
inc
lods
mov
ret
and
and
addb
jecxz
outsl
push
cli
push
sbb
cwtl
cmp
iret
inc
inc
in
int
aam
stos
add
aas
cli
adc
loopne
dec
jge
std
pminsw
mov
mov
mov
push
sbb
in
jmp
call
jnp
out
inc
adc
dec
mov
lods
mov
arpl
cmp
cmpb
or
stos
sti
loop
push
sahf
arpl
sbb
push
and
xchg
jmp
imul
not
mov
or
pusha
push
add
loopne
jno
dec
fsubrs
je
into
sbb
sbb
pop
adc
ror
in
push
pop
adc
pop
pop
in
jns
test
lret
cmc
mov
and
pushl
xor
xchg
aas
in
stc
push
imul
andl
add
setno
push
sahf
adc
repnz
int3
decb
imul
cmpb
loopne
mov
add
sbb
in
lcall
and
test
clc
mov
out
mov
shlb
adcb
xor
shll
mov
loopne
gs
or
shrb
mov
pop
mov
mov
inc
cmp
sub
das
dec
mov
xor
add
nop
test
adc
push
imul
call
push
push
mov
shl
shll
mov
repz
les
lahf
xor
mov
mov
in
fildl
push
cli
lmsw
and
ror
pusha
mov
adc
ss
pop
cmpsb
popf
cld
movb
adc
jbe
sbb
jg
jno
dec
cmp
or
push
pusha
mov
and
push
mov
data16
loopne
xor
scas
mov
sub
mov
les
jecxz
inc
pushf
pop
jnp
jecxz
and
stos
bound
and
int3
rcrb
add
push
push
xchg
add
aad
iret
sub
push
mov
lea
das
cmp
pop
ds
push
pop
jb
mov
mov
sub
cltd
sbb
insb
pop
ret
mov
cld
cld
mov
cmp
negb
int
inc
fistl
adc
es
ljmp
arpl
rcr
ds
out
lods
push
mov
out
cli
pop
push
repnz
sub
push
push
xor
out
jle
in
add
outsb
sub
rorl
push
inc
xchg
mov
cs
insb
sub
rcr
cmp
addl
cmp
les
dec
adc
fistpll
push
jne
inc
mov
cli
mov
cli
mov
pop
mov
jmp
movsl
jb
rorb
insl
mov
sarl
add
pop
repz
xor
idivl
or
in
push
jmp
or
test
xchg
cld
inc
inc
lock
mov
jmp
in
leave
jb
push
cltd
mov
mov
push
xchg
out
lods
repz
xchg
sti
fucom
sub
sub
push
push
pop
jl
or
sub
ja
mov
inc
test
and
xor
xor
outsl
fmul
in
fadds
or
mov
jmp
push
rorb
pop
xchg
sbb
adc
pop
adc
mov
out
insb
mov
popf
add
lret
xor
cmp
divb
dec
sbb
sbb
and
xor
push
imul
add
pop
mov
or
aas
lret
cmpsl
fwait
mov
inc
lods
iret
in
or
xchg
ljmp
mov
jns
sbb
cmp
pushf
xor
addr16
mov
shr
in
rcl
jb
fnstsw
xor
or
jae
mov
mov
hlt
rorl
sbb
or
xchg
xorl
mov
enter
in
mov
cmpsl
and
push
das
cmp
xchg
cmp
add
push
ret
fistpl
xchg
fildll
xchg
in
sbb
jno
cmp
jne
rclb
or
mul
pop
push
mov
push
leave
mov
iret
addb
or
icebp
test
mov
mov
fs
push
jg
dec
xor
pop
out
jg
movsb
pop
jb
add
sub
sub
int3
xchg
jle
fwait
dec
adc
mov
imul
mov
or
add
enter
pushf
test
pop
orb
out
mov
rcrl
cmp
push
aas
shlb
mov
gs
mov
test
push
hlt
repnz
sahf
por
das
cmp
jb
adc
cld
fsubp
out
lock
call
adc
sbb
cmp
js
test
xor
and
adcb
and
adc
out
test
shlb
jo
jnp
push
push
pop
cmp
mov
push
sub
std
fs
cmpsl
sahf
push
stos
cmp
push
test
xor
pop
xchg
jecxz
popf
hlt
dec
bound
jne
outsl
sbb
std
insb
push
mov
insb
pop
out
movsl
in
dec
bound
loope
push
ljmp
movsb
adc
sbb
mov
inc
push
jns
cmp
lods
out
je
int
cmpsl
decl
and
mov
or
jno
mov
int3
mov
mov
fisubs
sub
xor
mov
mov
xor
mov
mov
and
cmpl
add
add
mov
lods
cmpsb
lea
push
ret
sub
add
sahf
pop
and
dec
cmp
push
and
sbb
ljmp
add
mov
xchg
push
fs
int
push
lret
fstpl
roll
cld
jecxz
scas
push
sub
popa
pop
pop
xlat
imul
push
sub
mov
push
jle
sahf
pop
addr16
std
push
cmpsb
xorl
mov
pop
stc
push
fsubrs
xchg
mov
sbb
out
push
push
hlt
insb
push
adc
lret
aaa
call
iret
or
pop
aaa
jae
std
lcall
fwait
mov
pop
sub
aas
cmp
nop
pop
lods
jno
jle
xchg
in
sbb
ret
dec
repnz
arpl
call
xchg
mov
scas
cmpl
cmp
fldt
addr16
cmp
data16
or
cmc
bound
cmc
fcomp
leave
mov
xor
sbb
jg
push
aad
outsb
cld
sahf
cmp
xchg
or
xchg
test
js
mov
xchg
lds
lea
cli
ret
adc
jecxz
lods
cmpsl
dec
fsubl
test
out
out
bound
add
mov
popa
es
dec
mov
shlb
popa
jle
add
repnz
push
rorl
insb
sub
pop
jle
mov
cmp
call
ja
inc
jle
mov
push
rclb
xchg
dec
cmp
nop
mov
les
xor
fdivs
push
fisttps
jbe
subl
das
inc
cld
dec
imul
fisttps
jmp
je
out
xchg
fimull
push
test
jle
add
inc
cltd
sub
and
cmp
outsb
in
in
push
cwtl
gs
dec
inc
mov
loopne
loopne
push
rcr
cmc
push
cmp
pop
shrb
lret
and
pop
push
dec
out
sub
nop
ret
inc
outsb
shrb
jne
int
movsb
cmpsb
push
sti
test
shrb
fs
fildl
jg
je
jbe
mov
pop
push
test
inc
lods
loop
adc
enter
mov
mov
pop
dec
and
push
push
mov
jg
in
lock
and
scas
and
in
cmp
stc
out
repnz
shl
and
xor
xchg
int
mov
xchg
movsl
insb
fbld
or
pop
mov
pop
jl
and
mov
dec
ret
shlb
aad
xchg
push
mov
fists
push
notb
lret
mov
sub
cmpsb
pushf
fnsave
cmpsl
cltd
leave
in
push
movsb
xchg
mov
iret
and
lret
imulb
add
dec
mov
loope
fcmovbe
fsubs
cmpsl
cmpsb
subl
fwait
jmp
dec
mov
mull
or
dec
stos
push
pop
add
inc
loop
mov
fnstenv
outsb
push
div
sub
cs
jmp
pop
cmp
es
inc
notb
inc
scas
cmp
cs
mov
sbb
lret
divb
mov
sahf
mov
pop
push
nop
or
xchg
test
push
scas
cmpsl
into
inc
sbb
stos
or
repnz
jb
adc
stos
mov
imul
push
pop
orb
into
dec
jno
call
and
jmp
jns
inc
xor
mov
scas
bound
mov
mov
loope
pop
xor
adc
mov
jg
fwait
loope
insb
pop
out
pushf
mov
ljmp
dec
repnz
or
sarl
fidivl
xchg
ja
ds
rcrb
jmp
clc
jo
pop
ret
sub
in
test
cld
xor
cwtl
and
lret
mov
out
and
or
imul
cmp
movsl
ret
push
mov
std
scas
test
mov
and
jge
das
xor
xchg
stos
sahf
jmp
pusha
cli
push
adc
dec
cmpsb
decb
mull
adc
jo
jmp
add
aas
pop
and
ds
xchg
xchg
mov
sbb
jb
ljmp
out
xchg
sub
push
call
mov
adc
std
fldcw
xchg
mov
scas
jno
aad
lahf
jg
jne
cld
sbb
js
ds
lcall
push
notl
push
pushf
movsb
into
rolb
push
cld
push
sub
mov
cld
xchg
dec
out
sbb
push
scas
push
jl
mov
xchg
add
push
jb
cmp
loope
call
push
mull
push
cmp
mov
insl
pop
outsl
jmp
adc
mov
jo
inc
out
aas
jge
jg
and
cli
stos
xor
es
and
cmc
mov
jne
sahf
jmp
lods
mov
icebp
xor
cmp
enter
cmp
inc
jo
data16
mov
pusha
push
push
or
cmp
sti
shl
test
out
push
inc
pushf
in
fsubp
push
pop
insb
ret
push
dec
aam
fcmovnu
adc
ret
inc
jecxz
call
jmp
xor
mov
test
xorl
rolb
push
cmpsb
test
shll
push
notb
add
daa
out
push
xchg
iret
inc
dec
cmp
scas
pop
repz
pop
mov
xchg
cmp
fs
jle
pop
es
sbb
pushf
outsl
pop
mov
mov
nop
popa
cmc
sahf
mov
andb
shrb
pop
mov
fwait
cmp
shlb
scas
leave
add
pop
mov
sahf
insb
cld
mov
shr
popa
add
out
ljmp
inc
loope
jb
lock
out
das
push
push
popf
jns
cmp
movsl
shrb
mov
push
pop
push
les
jns
mov
jmp
fwait
push
lret
mov
fs
lods
jo
sbb
xchg
dec
scas
xchg
sub
nop
add
rcrl
mov
push
xchg
stos
repnz
cltd
and
sbb
push
lods
movsb
repnz
or
pop
jecxz
insb
sub
andb
sbb
add
enter
sar
icebp
pop
inc
es
sbb
jo
xlat
data16
jle
push
mov
in
push
sahf
add
dec
outsb
push
sub
loop
lods
movsb
cmc
sbb
cmp
dec
mov
repz
push
and
xchg
testl
pop
in
dec
add
pop
out
push
aad
mov
sub
mov
sbb
mov
out
jmp
fistpl
jo
sub
out
leave
inc
pop
push
push
data16
icebp
pop
mov
test
nop
cwtl
push
out
pop
xor
nop
jbe
lret
test
aam
or
xlat
lods
aas
ret
int3
lods
imul
xor
loop
pop
lods
popa
dec
cmp
lods
sbb
push
sub
xchg
mov
dec
cmp
lds
cld
push
jmp
or
or
jp
xor
outsl
es
ret
pop
sub
stc
push
je
jmp
xchg
inc
xchg
cltd
fnstenv
push
insl
shlb
add
jecxz
jmp
mov
push
lea
sub
insb
sub
test
mov
and
mov
push
or
pop
mov
jne
aad
out
jne
frstor
gs
cmpsl
push
jb
in
push
sub
iret
mov
add
xchg
inc
mov
xchg
mov
sub
cld
mov
jnp
xor
adc
sbb
xchg
fidivl
fisubs
int3
adc
fistps
insl
push
inc
mov
xchg
rolb
fmuls
mov
mov
pop
out
fists
push
pop
jle
jnp
mov
fnstenv
mov
into
insl
adc
imul
mov
jb
out
push
inc
or
mov
sbb
jmp
lods
jmp
imul
or
adc
mov
jno
mov
fsubp
pusha
push
pop
lods
gs
xor
sub
pop
lds
jns
mov
test
movsb
add
xor
cmp
sub
fidivl
jp
addr16
scas
std
popf
fidivl
pop
lods
lret
scas
pop
jae
test
push
vpunpckhdq
test
sub
push
cvtps2pi
xchg
sbb
push
movsb
in
jnp
xchg
or
sub
push
xorb
sub
lea
pop
aas
jge
pop
fimuls
movsl
call
inc
pop
mulb
pop
insl
fidivrs
pop
ljmp
xor
jae
stos
call
push
inc
or
xor
inc
outsl
push
jb
pusha
and
cs
rclb
pop
pusha
mov
push
sub
push
sbb
xchg
aad
jmp
mov
outsl
or
push
loopne
rolb
negb
add
aaa
fimuls
stos
pusha
xchg
xchg
inc
mov
sub
scas
mov
mov
insl
and
fistpl
pop
aaa
out
mov
pop
sbb
lock
sub
cmp
lret
bound
or
stos
sbb
rcrl
sub
dec
data16
add
dec
nop
ret
add
push
inc
xchg
ja
aad
ret
cld
lret
mov
xor
popf
sarb
cltd
xchg
xchg
jbe
mov
loopew
hlt
pop
mov
daa
test
nop
and
sbbb
xchg
adc
add
pop
sub
and
roll
push
cmp
mov
jnp
adc
bswap
mov
jno
mov
ss
push
nop
aas
inc
push
xor
inc
pop
jo
sub
add
xorb
dec
mov
add
or
mov
and
imul
mov
jbe
rol
cmp
mov
or
ds
arpl
bound
nop
push
sub
scas
dec
adc
dec
stos
push
dec
mov
popa
incb
or
sbbb
cmp
in
jnp
jle
adc
shlb
cmp
push
sub
in
push
add
in
adc
mov
fcom
and
xchg
mov
cwtl
aas
les
int3
loopne
roll
mov
pop
stos
dec
inc
flds
shlb
sbb
ret
dec
int3
inc
dec
int3
stos
cmp
fisubl
adc
inc
xor
lock
lahf
cmp
andl
subl
enter
in
adc
push
aas
jb
in
adc
and
pusha
inc
or
xlat
or
sub
call
aas
mov
cld
push
jge
call
mov
adc
ja
fildl
or
loope
mov
dec
mov
mov
movsl
mov
xor
push
int
rcrb
fsubrl
fisttpl
int3
xchg
hlt
ss
clc
and
stc
cld
cmp
mov
outsb
imulb
ja
mov
mov
cmc
add
mov
inc
loope
out
int3
push
loop
popf
add
cli
adc
push
in
andl
mov
and
test
iret
cmp
pop
cmp
adcl
into
paddsw
and
pop
sbb
ja
mov
scas
or
xchg
mov
dec
xlat
cwtl
mov
test
out
xorl
inc
adc
inc
fcoms
inc
cmp
cmpb
sbb
and
hlt
les
or
test
jecxz
aaa
sti
add
cld
insl
push
cwtl
scas
call
cmc
hlt
mov
mov
shll
or
or
push
sahf
sbb
dec
lods
es
bound
movsb
xor
out
jne
jnp
and
cmc
call
add
sahf
sub
ds
hlt
enter
cmp
inc
push
bound
cmc
jno
jp
clc
pop
leave
sbb
jle
clc
out
cmp
in
push
inc
cmc
cmp
scas
es
add
bound
cld
cmc
out
clc
push
push
ja
push
sbb
bound
loop
insl
inc
jl
mov
mov
fucom
mov
jg
jb
jle
add
shl
push
or
sub
sub
dec
daa
mov
inc
movsl
sub
cmp
es
adc
pop
scas
mov
dec
xchg
mov
daa
cmc
int
outsl
leave
inc
int
jmp
insl
and
lds
pop
jmp
ss
lret
bound
push
inc
das
push
pop
jnp
dec
jmp
ja
add
pop
cmc
mov
pushf
xor
or
icebp
mov
jle
xor
stos
sub
popa
mov
iret
mov
test
jb
mov
jae
pop
scas
mov
fistps
aam
cmp
lea
shrb
mov
push
and
or
push
dec
xchg
es
loopne
call
repz
fsubrs
push
int
push
and
lock
xchg
fidivl
xor
xchg
pop
jl
imul
es
repz
mov
xchg
ja
dec
push
sub
mov
jae
xor
lds
cwtl
in
push
inc
out
movsl
icebp
inc
sbb
mov
nop
jmp
dec
add
mov
sti
lds
add
cmc
push
mov
inc
fidivl
lods
jnp
pop
mov
mov
mov
mov
jp
jae
outsb
shr
sub
dec
mov
jle
sahf
jg
inc
sub
inc
push
clc
inc
mov
ret
icebp
ljmp
push
dec
mov
mov
or
jno
fbstp
cmc
add
lods
sbb
bound
fs
das
jne
mov
dec
icebp
push
cld
in
roll
or
and
jmp
ds
lret
das
cmc
ljmp
xchg
int
inc
xchg
xchg
out
bound
mov
cmp
cmpsl
ja
sbb
lret
test
ret
cmc
das
pop
bound
adc
lods
xor
jle
incb
divl
stos
addl
jge
jne
mov
add
mov
and
insb
sub
gs
and
mov
pop
ficoml
jg
adc
fsubl
dec
push
fs
bound
mov
enter
mov
push
xchg
adc
inc
xor
xor
jns
xor
mov
lds
cmp
jae
or
bound
pop
outsl
sbb
dec
mov
and
jmp
inc
mov
cld
push
cmc
push
es
repz
pop
pop
test
mov
push
and
add
xor
xchg
adc
je
dec
fnstenv
insb
aaa
push
jle
mov
cmpsb
push
push
out
push
cmc
repz
nop
in
mov
jle
jg
mov
cmp
adc
mov
dec
cmpsl
out
mov
and
fs
xchg
imul
add
push
push
loopne
jmp
push
push
pop
cmpsl
stos
mov
and
mov
pop
imul
pop
shlb
mov
mov
sbbb
inc
enter
cmpl
inc
mov
leave
mov
nop
inc
xchg
and
popf
call
push
inc
jl
pop
mov
push
stos
out
pop
imul
fnstsw
push
lods
lods
dec
xlat
loope
call
xor
and
icebp
mov
subb
fldenv
in
gs
iret
mov
sub
pop
mov
dec
mov
ss
cmp
mov
rcrl
in
sub
cltd
jno
lret
fdiv
cwtl
mov
mov
dec
cmc
lods
ret
mov
push
ficoml
movsl
xchg
push
ja
test
jl
call
popa
lods
nop
imul
xchg
bound
inc
fincstp
les
insl
mov
sub
dec
into
inc
sub
adc
subb
push
decb
in
bound
pop
cwtl
call
movsb
sub
rorb
ret
pop
dec
test
xlat
in
sbb
rcll
xchg
sti
addr16
xchg
or
cli
sbb
cmp
or
dec
data16
sahf
hlt
xor
mov
divb
fisubs
nop
jmp
fildl
dec
or
aas
bound
push
xchg
push
scas
les
push
lcall
sbb
mov
lret
andb
insl
cmp
rorb
shrb
je
mov
pop
jle
push
movsb
rcll
or
xor
cmpsl
add
mov
rorb
incl
fcoml
aaa
pop
int3
cmpsl
test
int3
movd
mov
push
adc
adc
xor
mov
inc
in
dec
ss
imul
pusha
dec
bound
fldl
out
movsb
jmp
push
dec
push
shrb
mov
movd
xchg
fs
pushf
jb
xor
nop
jecxz
scas
andb
inc
push
mov
nop
mov
inc
outsb
das
int
scas
xchg
jbe
andl
pop
pop
shr
mov
in
jo
cs
or
hlt
xchg
mov
jnp
mov
testl
mov
cltd
xchg
sbb
jae
xchg
pop
xor
push
dec
inc
adc
or
jmp
pop
inc
sahf
sub
sahf
int3
and
sti
push
dec
scas
enter
clc
xor
pop
xchg
xchg
cmp
sbb
sahf
mov
add
sbb
mov
inc
jnp
xchg
out
push
adc
add
in
popf
inc
jecxz
push
add
ret
out
enter
lods
lret
in
fbld
add
shr
insb
mov
stos
gs
sub
push
dec
aaa
fistps
jmp
cmp
mov
mov
lret
enter
bound
jns
int3
fildl
fsubl
inc
in
push
or
adc
lds
lock
ss
cwtl
mov
mov
outsl
pop
repz
jne
fdiv
fsubrl
test
xor
push
enter
stc
mov
sub
push
sbb
lret
loope
sub
cli
or
out
mov
rclb
iret
pushf
inc
fnsave
xor
sbb
lcall
jle
arpl
mov
push
movsl
int3
test
mov
stos
xor
pop
out
shll
scas
out
in
or
jnp
cmc
lcall
pop
add
jns
push
xor
jo
inc
cli
adc
cmp
stc
sub
mov
int3
lock
fstl
gs
mov
cmpsl
iret
mov
fisubrl
push
fwait
mov
stos
in
bound
test
cmc
sub
sbb
loop
xor
push
mov
pop
gs
push
push
lcall
int
nop
push
jle
movsb
test
and
repz
push
cli
sub
push
push
or
sub
negl
xorl
cmp
pop
jbe
sub
or
dec
inc
cltd
popf
bts
or
je
sbb
cmp
ret
stc
out
mov
pop
pop
mov
das
loopne
es
shrl
in
push
bound
lods
add
push
and
sarb
cli
out
cmp
push
jns
mov
fadds
push
mov
enter
sub
adc
mov
jl
fs
mov
push
or
push
mov
into
jmp
cli
adc
mov
in
aas
pop
insb
insb
stos
mov
test
sbb
mov
pusha
scas
shl
test
or
push
data16
int
push
ror
cmp
outsb
out
call
jecxz
xorb
and
notb
lods
adc
inc
lock
mov
arpl
xlat
push
cmp
and
jecxz
insl
lret
add
pop
testl
xchg
jecxz
jg
imul
ror
out
cmc
push
dec
inc
ret
mov
sarl
bound
mov
lcall
in
and
dec
xor
push
xchg
xchg
inc
xchg
mov
xchg
cmp
fbstp
cmp
je
push
loope
dec
repnz
cmp
icebp
lahf
dec
or
outsl
stos
sbb
mov
jno
fsubrl
lahf
in
fwait
lret
dec
push
mov
loop
sbb
into
mulb
mov
mov
or
fnstcw
fistpl
stc
cld
lcall
incb
je
daa
shr
stos
cmp
lret
xchg
icebp
in
cltd
mov
fstpl
test
stc
iret
or
movsl
bound
push
dec
clc
scas
das
xor
push
fcmovnbe
mov
leave
sub
xchg
cmp
outsb
arpl
and
push
cltd
es
pop
xchg
gs
outsl
pop
rclb
movsl
test
sbb
xchg
push
xchg
xchg
add
jns
repnz
mov
and
out
lock
sbb
lret
ret
test
pop
push
popl
push
jbe
aas
jp
iret
mov
rcpps
xchg
xchg
cmp
out
call
iret
push
jae
inc
out
xorl
ret
ja
and
lods
mov
add
stc
xchg
sahf
dec
bound
std
xchg
xlat
aas
daa
lods
es
push
push
inc
cli
adc
mov
mul
iret
call
outsl
rcr
adc
enter
bound
sbb
lods
addr16
inc
gs
xchg
ljmp
jmp
std
mov
in
mov
in
or
xor
and
loopne
imul
jge
mov
ficoms
out
push
adc
ja
xchg
cmc
flds
mov
fwait
lods
inc
ljmp
inc
pop
lds
cmp
pop
iret
inc
or
cs
cmp
popa
cmpsb
cwtl
scas
imul
inc
cmp
mov
push
jg
aaa
iret
xchg
int
lret
or
addb
fiaddl
xor
mov
xor
cmp
lods
push
pop
ret
mov
mov
jle
mov
popa
hlt
cs
cld
jmp
out
push
inc
push
push
xor
jnp
push
leave
inc
lock
push
xchg
repz
push
fiaddl
and
shl
iret
mov
ficompl
fmuls
in
das
jnp
sar
pop
lods
leave
xchg
cs
cmp
pop
xor
sbb
les
jmp
push
mov
popf
mov
jmp
lock
push
mov
sbb
out
xchg
push
mov
adc
xor
xchg
or
adc
jle
jle
or
loopne
push
xor
add
pop
enter
xchg
sti
xlat
es
into
adc
xchg
cmp
or
lret
outsb
out
mov
or
jmp
test
xlat
fwait
stos
ljmp
ss
lock
bound
addr16
repz
dec
mov
jno
jnp
jbe
inc
inc
mov
iret
js
jg
mov
cmp
adc
inc
add
bound
and
jg
pop
movsl
mov
gs
bound
aad
adc
in
call
fcoms
push
jno
jl
mov
cmp
xchg
fcomps
jns
aas
fs
lret
pusha
notl
fnstenv
ds
cwtl
test
add
jg
xchg
sub
aaa
test
push
dec
adc
push
int
call
push
pop
pop
ss
out
lds
cld
push
mov
push
mov
cmc
mov
pop
lcall
push
arpl
imul
mov
and
cltd
ljmp
pop
inc
mov
lret
push
mov
jmp
push
jmp
aam
push
iret
fdiv
and
pop
pusha
jmp
dec
jecxz
mov
in
sarl
pop
dec
and
les
bound
mov
mov
clc
pop
or
movsb
das
xchg
dec
xlat
cmp
jmp
lods
push
add
data16
clc
das
pop
add
movsl
xor
pop
bound
sub
imul
stos
test
mov
aaa
lret
dec
jns
mov
push
leave
push
cmp
lock
stc
in
bound
int
jbe
daa
cmp
xor
xchg
or
lret
jecxz
sub
repz
cwtl
loopne
mov
aas
jmp
inc
into
arpl
and
cmp
outsl
mov
pop
pop
mov
jle
dec
in
hlt
call
int3
fstpt
cmp
out
pop
inc
ficoms
and
pop
stos
and
test
cmpsb
xchg
cmp
xchg
and
shrb
in
push
scas
or
sahf
mov
outsb
mov
xor
push
fwait
aad
cs
dec
mov
cmp
fidivs
fsubl
out
add
dec
push
xchg
out
or
pop
aam
imul
inc
sbb
push
jecxz
in
push
movsb
lret
adc
scas
xor
inc
sub
adc
push
xlat
enter
mov
cmp
js
cmp
pop
adc
push
cld
push
cld
jns
bound
sahf
xchg
adc
rorb
cmpb
rcrb
mov
fwait
or
out
imul
repnz
push
jmp
and
dec
fisubrs
mov
xor
sub
fistps
pop
jp
pop
mov
pop
mov
jo
adc
adc
test
loope
push
xchg
fstpl
iret
cs
out
lds
add
fidivrl
mov
push
popf
shll
cs
out
int3
dec
lret
hlt
out
nop
xchg
mov
bound
outsb
push
pushf
das
stc
lods
mov
mov
xor
jbe
cmpsb
test
ficoms
popa
lods
bswap
and
pop
add
mov
add
inc
in
xchg
icebp
or
mov
adcl
sub
mov
xchg
xorb
lahf
dec
and
and
imul
push
divb
popf
mov
and
lret
pop
lahf
out
sub
ret
mov
ret
inc
pop
jl
mov
pop
jle
shrl
inc
adc
fwait
pop
ret
nop
mov
cld
xorb
scas
push
fcmovbe
enter
pusha
mov
xchg
test
loope
enter
sub
cmc
mov
stos
lds
stos
out
jns
enter
jle
test
jae
cmp
incb
pop
xchg
in
jle
shlb
jecxz
dec
stos
sub
js
roll
lock
decl
lock
imul
push
arpl
mov
dec
cmc
outsb
or
and
inc
in
xchg
and
mov
xchg
in
push
jnp
movsb
xchg
shrl
xor
ret
mov
movsl
push
scas
lcall
pop
inc
jno
xor
loope
daa
adc
popf
rorl
and
inc
out
mov
in
cmpsb
mov
jg
or
push
stos
adc
mov
cld
jmp
fwait
or
inc
and
dec
add
incb
or
ret
mov
cmp
jp
inc
push
cmpsb
cmp
and
mov
cli
shlb
pop
jmp
outsl
rcll
out
pop
icebp
add
mov
mov
sbb
mov
mov
cmovnp
cmp
mov
push
arpl
and
jmp
into
xchg
insb
and
je
mov
add
shr
popa
cwtl
mov
jo
mov
inc
xchg
add
aaa
fs
push
jne
cmp
loopne
mov
pop
xor
jl
pop
pop
mov
fldl
mov
fadds
push
jne
mov
subb
mov
add
pop
cltd
mov
push
pusha
mov
add
ss
add
mov
shrb
push
aad
adc
cmpsb
data16
loope
jp
mov
push
ret
call
loopne
fnstcw
mov
out
mov
mov
in
inc
in
addr16
cltd
lock
gs
enter
nop
arpl
movsb
dec
jmp
cmc
sub
pop
jbe
push
jne
pop
mov
ljmp
call
add
jb
cmp
xor
notb
pop
add
adc
popa
cmp
push
cmc
jne
rcrl
sbb
jle
mov
out
jne
insb
push
cmc
cmpsl
push
testb
insb
and
loop
xchg
or
inc
mov
aas
test
cmc
es
test
push
in
iret
sub
dec
cltd
sub
jle
int3
inc
iret
fwait
mov
mov
or
sub
xchg
rol
inc
pop
adcl
push
sub
jle
es
push
sbb
popf
pop
xchg
xor
das
jb
pop
pushf
adcb
lret
pop
sbb
jmp
test
jns
out
mov
sbb
stos
int
inc
xchg
push
notb
dec
aaa
shlb
sti
insb
jo
lods
dec
inc
stos
mov
mov
das
stos
mov
dec
xchg
adc
out
add
jmp
sub
fsubrs
ljmp
enter
jmp
sbb
fwait
cmp
mov
adc
loopew
sbb
dec
pop
iret
lea
pop
push
dec
and
das
sahf
bound
in
sbb
shll
xchg
sub
in
dec
sbb
bound
dec
shl
andl
dec
into
mov
and
insb
lock
pop
hlt
push
ret
cs
push
scas
ja
int
call
lods
outsb
bound
lret
or
orb
pop
dec
push
xchg
lcall
ja
push
out
bound
push
sbb
xchg
lods
and
xchg
loopne
or
scas
cmp
push
lods
movsl
mov
jmp
out
inc
imul
ja
jmp
test
lret
mov
adc
dec
lcall
sbb
push
push
out
sub
fxch
and
jb
lahf
iret
shrb
mov
fcoms
std
pop
sarb
sbb
outsl
and
adc
xor
xor
mov
inc
xchg
fwait
sahf
les
loop
ss
push
jle
or
inc
cmp
cmp
jg
cli
cwtl
sahf
in
daa
jl
scas
mov
adcl
test
or
and
arpl
push
sbb
push
mov
dec
pop
lea
orb
test
push
outsb
aaa
cltd
inc
pop
adc
sbb
inc
mov
lock
iret
push
and
notb
into
aas
push
sub
mov
jb
mov
pop
out
enter
sarl
pusha
cmpsl
movsb
jno
out
loope
dec
adc
sahf
loope
pusha
jge
or
int
sub
cmp
insb
bound
popa
mov
adc
in
mov
xor
xor
inc
mov
aam
imul
or
xchg
add
rclb
pusha
cmp
mov
cmpb
in
or
mov
push
mov
push
dec
cwtl
inc
mov
cmpsb
push
and
shr
fsubrs
shll
std
mov
lods
aaa
imul
cs
lcall
sub
push
addl
ss
lret
ja
cli
test
outsb
adcb
jo
cwtl
jle
push
push
mov
push
xchg
mov
lret
jmp
push
adc
jno
mov
mov
jns
mov
jl
push
sahf
push
int
cmp
jno
mov
mov
fmuls
add
aam
pusha
cmp
clc
push
fisubrs
cmpl
int3
sahf
dec
jge
insb
mov
rol
inc
push
cmpsl
add
icebp
sti
out
shr
push
in
xchg
mov
jl
cmpsb
sti
lds
jg
icebp
test
jnp
insb
xor
jle
mov
push
in
pop
into
mov
and
out
sarl
mov
push
iret
jo
bound
sahf
daa
xchg
pop
jmp
lock
bound
push
jl
inc
cmc
pusha
int3
insb
add
mov
push
outsb
cmpsb
pop
daa
push
push
lahf
lds
push
ror
cmp
or
jge
orb
pop
jno
out
test
sbb
sub
fwait
sub
mov
cmpb
pop
rcrb
push
cmp
out
dec
push
push
iret
pop
mov
enter
sub
std
jg
sbb
mov
push
mov
adc
xchg
mov
mov
push
inc
lods
pop
lret
divb
cltd
sbb
ja
lods
xorb
push
or
nop
mov
cmp
inc
fildl
mov
in
and
call
pop
pop
jg
pop
lret
jg
xlat
jns
mov
push
xchg
sahf
sti
bound
push
in
jge
sarb
int3
outsl
sbb
sub
push
scas
int3
mov
sub
mov
loopne
pusha
push
mov
cmc
ja
jne
fsubrs
pop
es
cmpsl
sub
pop
xor
cs
aaa
int3
push
bound
mov
mov
xchg
ljmp
rorb
shrl
adc
mov
jnp
ffreep
in
cmp
inc
or
icebp
push
cmp
mov
pushf
inc
jno
xor
inc
inc
shrb
ficompl
push
sub
sbb
jl
cmpsb
gs
inc
pop
popf
idivl
iret
sub
sub
out
and
push
cmp
sub
les
jns
mov
push
xchg
jnp
xor
aam
popa
cld
cmp
jle
lret
adc
data16
push
jae
aaa
enter
orl
jb
cmp
push
xlat
test
inc
rorl
xor
add
lea
lods
adc
out
push
scas
cmpsb
cmp
arpl
jno
aaa
fadd
lahf
out
xor
cltd
adc
testl
dec
add
rcr
and
push
ljmp
adcb
jno
xchg
in
insb
jae
push
mov
shrb
stos
in
ss
cmpsb
xor
loopne
push
and
mov
mov
push
jmp
out
jge
dec
arpl
idiv
stos
sti
push
cltd
call
dec
les
inc
imul
or
data16
lods
sbb
insl
sbb
or
cwtl
or
jecxz
insb
cltd
inc
cld
push
push
ret
xchg
test
sahf
sbb
pop
mov
mov
mov
push
jbe
mov
xor
dec
cwtl
mov
push
push
in
mov
outsb
sbb
test
aaa
pop
int3
or
roll
xor
push
mov
pop
jnp
pop
out
jo
adc
out
pop
fdivr
inc
inc
add
push
push
sahf
das
inc
cmp
ja
outsl
jae
push
out
scas
stos
mov
push
mov
jge
ret
sub
lret
dec
add
test
daa
jle
leave
pop
enterw
cmpsl
out
movsb
jb
inc
mov
push
pop
cmp
inc
adc
lods
pushf
jns
loop
sbb
aam
je
insb
dec
add
mov
leave
das
jle
repnz
fmul
stos
outsl
cwtl
add
enter
lea
xor
js
and
and
fxch
sbb
mov
into
push
js
mov
jp
stc
int
shlb
xor
std
shlb
lahf
or
sahf
imul
gs
rclb
mov
mov
cmp
sbb
add
lret
in
outsl
xchg
or
xchg
inc
inc
ja
jge
lock
in
cmp
gs
add
mov
out
inc
jle
pushf
fadds
gs
das
nop
loope
cmp
outsb
lock
je
or
stos
push
push
fisttps
sbb
mov
dec
movsl
imul
cmc
stos
rcrl
mov
fwait
xor
add
jg
or
push
imul
push
push
mov
cwtl
cmpb
cltd
jbe
and
mov
sbb
movsb
ret
pop
jp
mull
aaa
add
insl
addl
xchg
in
push
mov
pop
std
stos
sahf
sbb
xlat
jmp
and
bound
stos
ret
pop
test
loopne
lahf
mov
xor
pop
mov
inc
sbbl
mov
jae
testb
jmp
scas
subl
out
lock
test
jae
and
and
fcoml
sti
cmpsb
push
insb
pop
add
push
setno
cmc
mov
mov
push
mov
repz
in
pop
in
fcomps
aas
imul
add
movsb
push
push
and
push
inc
fs
mov
dec
sahf
or
dec
jge
out
mov
dec
cmp
pop
xor
iret
lret
imulb
adc
fdivrs
cmp
pop
adc
std
mov
cmp
sub
insl
jne
or
push
in
push
and
mov
add
test
xor
add
push
mov
mov
mov
adc
in
clc
imul
or
pop
dec
movsb
test
dec
xchg
xchg
add
ja
inc
xlat
or
or
mov
aad
repnz
fwait
mov
stc
shlb
sbb
mov
fs
dec
push
push
dec
push
pop
faddl
std
mov
pop
and
jb
xor
loop
sbb
xchg
and
adc
push
push
movsl
sub
jle
mov
lret
add
popf
fistpll
lret
cli
outsl
sub
jnp
xchg
add
xor
repnz
das
cmc
test
and
cmp
out
std
fisttps
inc
leave
bound
fisttpl
inc
out
sub
pop
mov
dec
shlb
aad
mov
push
or
inc
into
sahf
in
dec
fsubr
inc
push
pop
cli
push
out
les
lcall
aaa
or
push
into
pop
mov
in
inc
mov
dec
xchg
mov
fs
push
mov
shrl
movsl
into
adc
int3
jle
cmp
sar
or
and
pop
in
fldcw
test
push
popa
pop
xlat
loopne
jle
dec
jnp,pn
adc
inc
iret
jb
mov
dec
movsb
push
adc
icebp
pushf
ror
mov
ljmp
test
pop
mov
rorl
adc
scas
das
test
mov
or
shrl
xor
in
xor
push
push
int3
mov
cmpsb
daa
ret
pop
mov
shlb
call
inc
adc
push
jp
pop
sti
add
nop
data16
mov
iret
push
insb
push
mov
add
push
testb
jmp
pop
adc
inc
or
repnz
push
clc
testl
rol
ffreep
sbb
shlb
push
aas
sbb
dec
cmp
jae
mov
mov
dec
push
mov
xor
jmp
cmpsb
sub
xor
test
push
push
mov
push
testl
scas
xor
popf
xchg
inc
sub
out
pop
in
sbb
popl
xchg
pop
mov
and
callw
fadds
hlt
mov
enter
push
jle
xor
xchg
jbe
aas
dec
cltd
outsl
movsl
das
push
mov
outsb
dec
push
ret
js
mov
jo
push
incl
cwtl
aas
adc
cwtl
push
pusha
mov
shl
clc
arpl
rorb
xor
inc
out
jnp
xor
add
pop
and
cmp
enter
push
jnp
mov
xchg
loopne
jp
das
into
push
xor
stc
in
mov
sbb
xor
jno
pop
mov
pop
rclb
sub
insb
xor
or
pop
add
lods
nop
out
lock
pop
push
push
loopne
or
fsubrl
pop
aas
in
test
cmp
mov
jmp
cmc
stc
sub
fsubl
jne
jae
sub
loope
fldt
popf
xor
mov
push
imul
loop
imull
stos
xchg
jl
sti
loopne
bound
ret
repz
sbb
lcall
adcl
bound
daa
pop
enter
andb
jmp
loopne
imul
decl
out
push
push
lods
sub
in
pusha
ds
hlt
sub
jb
in
lcall
xchg
lods
bound
push
mov
idiv
pop
xlat
outsl
cmp
push
les
in
pop
js
ljmp
push
scas
push
fimuls
mov
push
aad
pop
mov
jmp
jge
daa
nop
push
jne
pusha
add
push
iret
dec
pop
sub
cwtl
icebp
sub
lahf
stos
movq
add
rcrb
sbb
into
addl
sbb
pop
mov
filds
mov
adcb
mov
ja
test
divb
lods
testl
and
jmp
jnp
mov
test
and
test
mov
mov
sub
pop
lahf
jbe
ljmp
inc
mov
insl
lock
pop
mov
xor
sub
out
cmp
ret
movsl
adc
popa
incl
inc
mov
jmp
cltd
xchg
ss
mov
adcl
addr16
stos
dec
loop
sahf
bound
scas
mov
lcall
sub
test
jae
sbb
pushf
lahf
icebp
xchg
jo
ror
sbb
imul
sbb
xchg
jns
pop
mov
and
stos
pop
lret
pop
aam
mov
jnp
xchg
sti
push
add
and
jns
fidivrl
push
and
push
ret
sub
sub
push
mov
jno
jnp
mov
testl
cli
in
bound
inc
xor
or
loop
fsub
adc
pop
or
ss
push
in
and
enter
cltd
or
push
jl
inc
adc
inc
bound
pusha
add
dec
xchg
fimuls
sti
nop
lds
jne
lcall
jle
mov
jle
lahf
ljmp
fsubrs
imul
push
loopne
test
pop
movl
mov
nop
stc
xchg
mov
mov
pop
shll
ja
pop
stos
add
inc
mov
sub
repz
mov
adcl
xchg
inc
gs
mov
dec
data16
jne
dec
sar
popa
push
sub
hlt
out
mov
aas
frstor
mov
daa
xor
fdiv
jno
or
roll
add
fwait
or
fdivr
cmc
pop
xlat
cmp
bound
inc
jle
ret
fcmovne
inc
in
mov
in
xor
popa
add
in
pushf
ret
sbb
and
and
fmull
cwtl
je
jb
pop
fdiv
mov
push
aam
xlat
test
mov
in
pop
jnp
popf
ja
jge
push
js
rorl
shl
les
in
mov
test
js
int
jo
dec
sbb
cmp
in
cmp
inc
outsl
bound
cmp
fdivrs
cmc
sub
xchg
call
dec
insb
mov
and
aad
jecxz
nop
push
xor
jns
dec
imul
xor
mov
jnp
mov
pop
lret
bound
xchg
xchg
push
outsl
aaa
or
leave
movsl
cmc
xchg
jmp
sahf
movsl
cwtl
test
sbb
mov
push
dec
enter
adc
mov
fdivrl
inc
sub
lock
mov
add
or
ss
in
push
sbbl
jle
adc
sub
push
jb
jo
push
popa
jle
xchg
sub
jg
inc
scas
notb
jbe
jae
pop
push
xor
call
out
fs
fwait
pop
mov
jbe
dec
jle
cmc
into
fnclex
add
lea
adc
pop
fcompl
adc
mov
add
xor
ss
in
sahf
arpl
movsb
pop
fcmovne
aas
adc
xchg
xor
in
inc
pop
and
xchg
push
ret
test
lret
fadds
aam
pushf
push
or
dec
les
sbb
and
sub
jg
push
add
daa
mov
hlt
lcall
lock
daa
in
jmp
aaa
test
insb
es
out
pop
rcr
insb
mov
sbb
bound
lods
xchg
xor
shll
ja
sarb
fs
xchg
xlat
mov
insl
ja
mov
lods
dec
add
mov
repnz
ds
bound
loope
mov
repnz
rep
lds
adcl
divb
cmp
pusha
lret
mov
sahf
fwait
cmp
xchg
jmp
pop
cltd
mul
mov
lds
dec
push
xchg
js
pop
mov
adc
loop
andl
stos
int3
call
inc
ret
and
ja
inc
pushw
dec
in
push
sub
loopne
ljmp
jge
lret
add
xchg
push
adc
dec
or
jae
pop
add
mov
push
pop
bound
clc
xor
in
and
push
lock
inc
xchg
mov
fistl
xchg
push
xor
scas
in
sub
inc
mov
pop
jbe
inc
out
adc
xor
push
aas
push
and
add
fimuls
in
push
xchg
sbb
cmpsl
dec
loope
push
insl
loop
push
dec
sbb
adc
inc
xor
dec
jmp
pop
call
test
mov
push
dec
jmp
add
or
out
push
sub
sahf
je
inc
stos
cmpsl
fs
scas
push
cld
es
js
xor
hlt
ss
fucomi
clc
add
scas
sbb
les
loopne
add
sbb
inc
push
and
rcrl
inc
jecxz
imul
xor
shlb
xchg
pop
cli
jmp
repnz
movlps
mov
and
int3
and
popa
aas
rcrb
loope
mov
pop
adc
jg
test
xchg
sub
ss
push
loop
jecxz
jg
inc
jne
dec
pop
fdivr
adc
ret
icebp
ficomps
pop
dec
mov
popa
aam
adc
pop
jo
cmp
pop
pop
repz
lds
cmp
cltd
mov
movsl
dec
in
cmp
out
inc
push
fcom
rorb
scas
loope
cmp
jnp
in
push
xorl
mov
stc
cmpsl
cmp
cld
icebp
out
movsl
push
sub
inc
outsl
push
sub
stos
jnp
fstpl
inc
jb
and
icebp
push
test
pop
adc
outsl
push
mov
lcall
pop
fcoml
andb
call
pop
jnp
popa
xchg
or
xchg
push
movsl
add
bnd
push
shll
xorb
je
and
cmc
pop
jg
or
shrl
bound
sub
dec
push
ret
mov
in
test
rolb
jae
jge
stos
xchg
mov
js
imul
or
rclb
out
cmc
add
pushf
lods
mov
push
or
push
push
sub
mov
add
cmp
in
shlb
lret
lds
adc
xchg
call
clc
int3
pusha
jmp
sbbb
push
mov
pop
daa
pop
jbe
dec
dec
aad
dec
mov
pop
negb
loopne
adcl
xchg
mov
cmpsl
rolb
cmp
xor
push
lret
bound
jle
pop
xchg
cmc
dec
pop
dec
mov
or
push
fldt
and
pop
scas
cmpsl
out
ret
mov
pop
jl
inc
fdivl
or
lods
and
cmc
push
rorl
sahf
jnp
lcall
lods
scas
nop
push
xor
lds
pop
aad
ljmp
pop
rol
pop
out
add
orl
inc
js
nop
xchg
cld
fdivrs
push
aas
mov
adc
xlat
insl
mov
in
cmp
push
ss
or
shrb
push
aaa
rorb
mov
adc
data16
dec
decb
pop
sbb
scas
movsb
cmp
lret
insl
pop
xchg
lret
xor
mov
out
and
repz
sbb
pop
and
insb
lods
xor
lds
dec
shll
and
inc
pop
or
mov
xor
ljmp
dec
loop
out
and
jle
push
dec
lret
inc
mov
inc
int
imul
fwait
pop
mov
scas
pop
mul
xchg
push
out
sahf
int3
add
xchg
rcrb
jge
mov
pop
jmp
fmuls
test
mov
fsubrl
bound
addr16
xchg
pop
jecxz
xchg
inc
mov
fcoml
aaa
xchg
negl
loope
sbb
lret
cltd
mov
xor
fdivrl
jmp
out
sbbl
pop
fcmovnbe
movd
ss
cwtl
jne
mov
xchg
xchg
or
xor
inc
int
lds
inc
test
xchg
jmp
dec
push
mov
les
mov
lahf
mov
enter
bound
test
aaa
mov
sub
les
pop
lods
fcmovnbe
test
push
xchg
mov
xchg
aam
test
enter
bsf
cmpsb
lods
pushf
data16
shl
stos
jge
icebp
nop
and
mov
cwtl
push
rorb
add
fsubrs
sti
icebp
dec
test
pop
loopne
add
iret
push
cltd
fdivp
push
and
mov
shrb
xlat
mov
aaa
and
mov
cld
data16
clc
pop
pusha
sbb
stc
or
mov
and
call
repz
bound
xchg
jg
jae
out
cltd
pop
fdivl
lcall
xchg
fucomip
mov
adc
daa
adc
cwtl
or
fsubrl
bound
arpl
fwait
cmp
sbb
sbb
lds
aam
bound
mov
pop
arpl
mov
imul
mov
test
and
mov
arpl
ja
imulb
test
sbb
xchg
imul
jl
cmc
or
test
out
xchg
pop
mov
out
sbb
push
pop
dec
sbb
scas
sbb
xchg
jge
std
jno
lret
cmc
fnstsw
test
push
cmp
add
outsl
jg
and
loopne
push
mov
sub
cwtl
movsb
xor
or
sub
ret
out
push
movsl
jl
or
out
mov
mov
and
lahf
icebp
sub
insl
test
adc
aam
and
insl
repz
dec
or
jp
jno
or
jl
cmp
ds
cmp
push
cwtl
imul
aas
inc
inc
jnp
clc
call
jns
pop
cltd
aas
leave
jnp
and
jne
push
repnz
jmp
cmp
mov
outsb
mov
mov
mov
lahf
loope
imul
push
in
in
sahf
sub
arpl
pop
test
sub
fs
mov
das
bound
sbb
pop
gs
in
dec
jne
mov
lods
jbe
add
add
lds
mov
mov
add
sub
pop
adc
das
bound
icebp
sarl
add
or
test
jmp
outsl
and
addr16
out
adc
sbb
outsl
sahf
iret
in
lods
push
mov
lock
push
out
pushf
jno
stc
push
sbb
xor
rorb
mov
test
dec
hlt
loope
sbb
and
inc
xor
mov
out
lock
rclb
arpl
lahf
inc
hlt
imul
jp
pop
lret
aam
pop
nop
mov
xlat
call
sub
ja
jmp
adc
gs
sub
inc
sti
in
push
lds
sub
test
je
mov
rcl
jg
pop
adc
loopne
xchg
push
dec
xor
jns
sbb
lock
dec
xadd
inc
xchg
inc
test
ret
mov
push
push
inc
dec
stc
scas
dec
or
adc
sub
fcompl
jo
gs
jns
insb
add
repnz
arpl
cltd
and
lahf
sub
cmp
xor
shlb
push
mov
add
or
push
cmp
sub
stos
aam
loop
jne
adc
push
sti
loopne
fsubrl
sub
in
jmp
xchg
mov
xor
mov
bound
das
mov
mov
mov
or
dec
jae
xchg
mov
adc
pop
push
xlat
aas
cmp
inc
lods
leave
jmp
icebp
loope
xor
push
js
push
mov
jb
dec
rclb
pop
clc
sahf
push
shll
mov
fildl
jmp
jbe
add
xchg
in
addr16
mov
pusha
mov
mov
mov
sub
cli
test
int3
push
ret
int
jg
pop
ljmp
cmp
mov
inc
fs
mov
jg
inc
push
out
mov
stos
and
test
mov
mov
out
insl
std
int
jp
test
mov
xchg
pop
subl
fwait
or
xchg
inc
inc
popa
jle
cltd
or
push
mov
jne
jbe
insl
cmpsb
addr16
ficomps
fnsave
mov
mov
lret
gs
cwtl
aad
inc
js
push
fwait
mov
sub
arpl
jecxz
adc
das
ja
outsl
addr16
add
test
or
and
fs
out
xchg
mov
ja
aad
xor
out
cwtl
call
sbb
jne
push
inc
incb
orl
in
fdivrs
cmpsb
lret
inc
jg
mov
icebp
in
cltd
in
or
je
loopne
lcall
jg
mov
ror
scas
push
add
fwait
out
push
dec
inc
push
test
mov
cli
push
xor
jb
shrb
jne
movb
ss
pop
sbb
icebp
push
into
mov
ss
push
das
push
cld
jns
movsl
cmp
je
ror
cmp
lock
rcll
shr
inc
push
mov
je
call
pop
pop
mul
fwait
adc
and
sub
xor
adc
inc
js
mov
movsl
jnp
mov
into
add
jecxz
ficoml
call
cmp
les
mov
cs
mov
subl
push
and
ret
fmull
shrl
add
loope
xchg
pusha
shlb
imull
push
mov
xor
cld
or
aas
adc
dec
ret
adc
cmp
hlt
push
xor
pop
lea
scas
xchg
aaa
call
fsubr
cli
bound
arpl
icebp
inc
xchg
add
fdivs
or
addr16
push
jmp
aad
dec
subl
jmp
jecxz
lods
in
dec
push
insl
repnz
mov
mov
pop
xchg
push
icebp
add
and
cld
push
fnstcw
mov
shrb
pop
mov
sbb
pop
adc
mov
pop
sbb
inc
cmpsb
sbb
out
enter
data16
aad
xchg
nop
loopne
dec
sub
push
mov
adc
mov
add
subb
mov
das
les
pop
dec
in
in
pop
iret
clc
andl
adc
jnp
popf
int
insl
in
imul
scas
jmp
dec
in
mov
out
les
stos
xchg
mov
cmc
test
pop
aas
add
jno
or
in
mov
into
lock
mov
inc
cmp
cmp
jl
push
shll
cmpsb
out
xchg
lahf
fdivrs
jo
xlat
mov
jae
jns
rcrb
adc
mov
adc
inc
add
jg,pt
test
imul
xlat
pop
insb
incb
push
bound
xor
xlat
movsl
dec
inc
sub
xlat
sbb
icebp
xor
cmp
pop
inc
inc
sti
rcr
xchg
nop
mov
push
gs
fs
aam
push
movsb
jae
ficoml
stos
jnp
fisttpll
pop
idivb
pop
in
fs
mov
or
leave
push
push
pop
imul
imul
push
sub
sti
lahf
push
rcll
inc
in
add
in
sub
xchg
rol
fldt
bound
and
lods
mov
cmp
test
sarl
mov
out
push
push
push
sti
fadds
jnp
add
jge
push
jg
jne
inc
adc
dec
xchg
lahf
pusha
call
adc
addr16
ja
int
leave
jb
outsb
or
shl
mov
adc
pop
out
scas
mov
icebp
loopne
push
mov
sahf
mov
rcl
jl
fists
aaa
cmp
cmpsb
lcall
test
das
bound
call
or
loop
das
out
out
adc
or
shl
div
push
mov
ja
mov
outsl
mov
dec
dec
sbb
mov
divb
mov
xor
dec
cs
jnp
pushf
scas
repz
push
mov
sbb
inc
xchg
sbb
test
jle
jp
fucom
daa
bswap
xor
dec
xchg
sbb
fwait
pop
mov
adc
aaa
jl
mov
sti
cmpl
lods
mov
add
push
sbb
pop
out
sub
test
adc
jle
jg
sub
xchg
mov
in
lret
or
in
arpl
outsb
rclb
fwait
adc
inc
xchg
jnp
enter
add
rclb
std
pop
lahf
sbb
enter
lahf
mov
lcall
and
in
or
es
mov
adc
push
push
int3
ljmp
lahf
stc
into
sub
xor
iret
push
and
sbb
cwtl
mov
and
push
jp
pop
outsb
test
add
cmp
out
push
and
pop
mov
inc
mov
and
inc
cmp
jge
into
lcall
inc
fdivl
test
iret
popf
out
and
out
mov
adc
cmp
aas
loopne
sti
fs
xchg
mov
arpl
add
sub
leave
sbb
push
fisubrl
xor
and
out
aas
loope
push
iret
mov
xchg
inc
cmpsb
leave
jp
ss
sbb
cmc
mov
jle
mov
sbb
cmp
fwait
popl
in
pop
jne
xchg
jmp
pop
or
decb
bound
lret
push
push
sti
xchg
rorb
jge
das
in
je
push
xchg
aas
stos
mov
xchg
jle
outsl
bound
sti
dec
inc
adc
icebp
cmp
xor
popf
enter
mov
lret
call
push
outsl
test
mov
jo
dec
leave
stos
lahf
push
inc
pop
adc
in
dec
in
pop
xlat
shl
cmp
js
mov
sbb
ret
inc
cmovg
sub
sbb
in
cmp
push
test
scas
cmp
icebp
rclb
xor
dec
ss
stos
inc
fld
sbb
add
push
xchg
out
aas
ret
push
pusha
call
adc
das
insb
daa
nop
jmp
jecxz
outsb
int3
xlat
outsl
jbe
in
test
xor
jae
push
call
mov
sbb
jmp
mov
mov
cwtl
push
push
das
orl
bound
fsubs
ret
js
xor
in
in
mov
test
mov
mov
or
and
outsb
jecxz
lcall
push
sbbl
inc
sti
and
clc
push
cmpsb
cmpsb
dec
push
loope
jge
cmpsb
or
daa
or
test
jecxz
lods
int
push
mulb
push
pop
pop
and
fwait
jp
int3
jmp
neg
or
fnstsw
in
bound
sti
shl
mov
scas
push
cmp
test
inc
lods
sbb
scas
sub
fisubrs
je
imul
dec
cmpsb
bound
cltd
push
sbb
jnp
mov
sbb
push
popl
inc
gs
xor
cmpsl
sbbb
lretw
imul
and
or
push
and
mov
sahf
add
mov
ss
ds
inc
push
jge
xchg
es
fstpt
addr16
cmp
out
mov
pop
mov
mov
jno
jg
outsl
and
fimuls
adc
cld
insl
ja
lods
push
jl
push
jne
and
sub
insb
or
cmp
fstps
gs
mov
clc
shlb
cs
jmp
or
gs
add
adc
call
sar
int3
mov
pop
fwait
cmpsb
adc
add
push
push
cmp
out
push
fucom
repnz
add
stos
cmp
or
cwtl
fcoms
ret
pusha
fwait
push
stos
in
adc
push
push
jae
out
cli
xchg
pop
scas
xor
cmp
stos
lret
jnp
aam
test
fimuls
jne
movsl
imul
jp
mov
pop
and
push
xor
pushf
pop
sub
movsl
jno
sub
cli
ljmp
xchg
mov
push
sub
push
fadd
cmp
xchg
jmp
or
push
popa
imul
cmpb
pop
stos
psrlq
mov
gs
push
aas
fs
insb
fcomps
imul
sbb
add
std
into
push
mov
dec
sub
xchg
xchg
inc
scas
hlt
rcrb
ja
test
push
jb
nop
push
rorb
xor
push
movsl
cmp
xor
iret
aam
dec
scas
test
movsb
xchg
addr16
pop
or
imul
sti
ret
les
push
pop
into
cmpsl
sbb
nop
dec
lods
fwait
push
mov
mov
das
cmc
push
mov
lret
in
cmc
call
test
ds
lret
fwait
into
push
or
fwait
bound
outsb
stc
loopne
in
push
out
ret
pusha
scas
mov
cld
int3
out
orb
mov
repz
push
push
jecxz
sub
dec
les
or
int
mov
movsb
pop
xor
test
pop
sbb
xchg
xor
xchg
pop
bound
js
out
pop
mov
push
lock
rcrb
jmp
ss
dec
sub
lds
xor
xor
sahf
fdivrs
mov
shll
decb
or
mov
and
adcb
inc
repnz
clc
out
fwait
xchg
dec
cwtl
dec
inc
sbb
cli
and
out
popf
and
dec
mov
popa
sbb
scas
ja
ret
xor
and
pop
jp
pop
repz
shr
mov
xchg
mov
jmp
mov
push
mov
dec
fisubrs
mov
iret
popf
mov
jecxz
xchg
fsubr
in
dec
fwait
add
scas
jns
loope
sbb
sub
fwait
stos
out
push
pop
mov
sahf
dec
cld
push
fstpt
and
jbe
xor
push
xchg
sub
push
lcall
lods
lods
vpmulhuw
ja
push
adc
or
or
mov
adc
and
sub
xor
jbe
sub
dec
sahf
lock
aaa
pop
mov
dec
add
cmpb
jns
mov
les
pop
and
dec
adc
push
sbb
adc
xor
ret
pop
cltd
insb
xlat
jecxz
rcrl
pop
jns
adc
sarb
mov
cmpsl
cwtl
repnz
in
xchg
pop
jmp
cld
push
pop
add
aam
mov
sarb
push
addr16
das
fs
mov
dec
adc
pop
mov
adc
mov
xchg
cmp
sub
imul
cmp
sti
icebp
adc
or
mov
sub
fbld
int3
dec
dec
arpl
xchg
int
dec
inc
jecxz
mov
call
mov
lahf
dec
fstpt
push
and
nop
aam
les
in
xchg
enter
popa
icebp
xchg
mov
mov
gs
adc
jle
bound
shlb
fucomi
into
push
xchg
shrl
dec
pop
cmc
fsubl
rorb
xchg
cmp
call
xor
scas
push
mov
adc
mov
dec
mov
sti
add
jno
jmp
mov
leave
push
aam
in
or
stos
dec
xor
pop
cltd
jle
notl
cld
cmp
jle
das
out
jbe
and
jp
out
xchg
mov
jmp
sub
inc
shr
jp
jp
stos
fisubl
rcrl
cmp
adc
or
jecxz
xchg
jp
inc
loop
pop
iret
adcl
pop
mov
sub
mov
or
xchg
push
scas
add
push
sub
jmp
lahf
push
loop
lds
jbe
sahf
xchg
or
pop
fcompl
outsb
cmp
loopne
push
in
pusha
xchg
xchg
enter
fcompl
and
mov
in
out
scas
sbb
stos
sets
inc
and
mov
add
fdivl
popa
sar
stos
in
jnp
push
addr16
imul
fcom
push
jbe
les
data16
es
icebp
sbb
bound
jne
es
push
add
add
subb
sub
mov
imul
out
arpl
push
xchg
sbb
ljmp
sub
sahf
mov
in
neg
mov
cmc
pop
sbb
andl
scas
cmc
push
mov
lret
cltd
leave
movsl
mov
lods
lds
outsl
cmp
ret
scas
in
push
ret
and
dec
xor
stos
xchg
mov
ficompl
xlat
stc
iret
je
aam
rcll
ret
xchg
mov
jnp
loopne
fs
mov
call
pop
pop
les
fwait
das
addr16
mull
in
jmp
stos
xlat
push
fwait
dec
mov
add
shlb
mov
sbb
repnz
rcrb
mov
pop
add
repz
mov
cmc
and
jnp
cmpsb
xchg
cmpsb
orb
sbb
adc
fwait
iret
xchg
mov
pop
ja
xchg
mov
out
cmc
mov
jmp
xchg
jb
aam
in
jae
sub
stc
ret
inc
cmpsb
mov
jmp
cli
xchg
iret
rolb
mov
andl
pop
and
stos
push
or
testl
in
and
mov
pop
int3
xor
enter
jno
inc
xor
outsl
lret
push
lock
push
push
xchg
rorl
add
and
jg
jle
repz
add
push
mov
lret
pop
sub
aam
push
cs
and
push
pop
enter
jo
lret
inc
mov
bnd
data16
cwtl
cld
ds
and
bound
sbb
sub
and
add
adc
stc
imul
leave
xchg
shlb
outsb
insl
and
mov
in
pop
daa
repz
push
icebp
insl
mov
pusha
call
repnz
and
jg
inc
mov
popa
pop
mov
or
pop
pop
mov
add
dec
push
cmpb
sbb
outsl
bound
popf
int3
out
nop
dec
sub
mov
bound
fidivs
xchg
sahf
insb
add
dec
cmpb
jo
and
popa
ret
mov
mov
call
mov
std
pop
lods
adc
cmp
sbb
push
inc
das
sbb
test
dec
inc
push
mov
shl
dec
pop
dec
cld
push
dec
das
mov
adc
fcomip
test
pop
imul
nop
inc
push
fiaddl
cs
inc
jnp
push
dec
mov
mov
add
push
cwtl
adc
divb
cwtl
cli
aaa
jp
cmp
shrb
jp
insl
dec
daa
ljmp
and
push
sub
lret
xor
repnz
arpl
call
imul
push
xchg
push
jno
mov
icebp
inc
aam
inc
ficompl
xor
das
movsb
cmpsb
fstpt
mov
and
out
mov
or
movsl
add
je
inc
movsb
enter
iret
bound
push
adc
jb
mov
or
call
call
push
lods
push
adc
push
pop
xor
leave
fldenv
test
fldt
scas
cmp
insl
mov
test
sahf
mov
addb
hlt
nop
mov
clc
push
out
lods
stos
fnstsw
int3
jns
mov
mov
ret
insb
xor
jmp
cmpsl
into
push
xor
inc
rcrb
cmpsb
jge
mov
adc
cs
jle
test
pop
cs
stc
data16
xchg
sarl
jae
cltd
push
push
rcrb
icebp
fisttps
lds
pop
lock
in
push
sub
pop
mov
xchg
mov
jbe
cmp
pop
popa
lahf
add
fnstsw
inc
push
lret
fsts
push
rorl
addr16
cli
mov
mov
sbb
sub
mov
scas
sbb
pop
ja
pop
and
mov
fwait
push
fcoml
dec
add
stos
bound
push
loopne
or
or
jbe
xchg
sbb
or
fwait
push
test
mov
insl
mov
rcll
push
push
out
test
jmp
sbbb
jmp
mov
dec
mov
xor
sub
mov
testb
push
call
push
sbb
mov
pop
push
lret
push
insb
add
mov
xor
lds
aam
movsb
gs
jle
clc
sahf
mov
cmc
leave
mov
cmc
xchg
in
adc
xchg
lods
test
ljmp
incl
dec
outsl
bound
pop
pop
mov
insb
and
in
inc
mov
addl
pop
sbb
add
lods
arpl
jle
rorb
mov
push
fldl
std
popa
pop
cmpsl
mov
sbb
cmp
xchg
cmc
addr16
outsl
repz
jmp
inc
jle
in
mov
pop
sub
inc
pop
jmp
data16
pop
pop
jnp
flds
pop
scas
test
xchg
bound
sbb
in
dec
in
pop
stc
or
cld
inc
add
jge
ja
inc
mov
fnclex
ficoml
mov
cmp
sub
mov
mov
sahf
enter
icebp
lock
loope
outsb
and
pop
lcall
fsubrs
push
adc
int
push
bound
push
jno
sarb
bound
out
push
mov
adc
xchg
pop
sar
test
iret
cmp
mov
stos
pushf
and
int
xchg
cmpsb
inc
outsl
and
xchg
ss
sbb
fildll
jbe,pt
shrb
push
sub
or
bound
outsl
cltd
call
xchg
mov
data16
inc
jne
leave
mov
repnz
cmc
ss
lods
inc
xlat
dec
lcall
mov
ss
xchg
cmpsb
aad
xchg
fdivr
cs
mov
pop
out
mov
dec
xchg
movb
int3
cs
xlat
arpl
fcmovnbe
jnp
rcrl
inc
cmc
jmp
rcrb
mov
mov
lret
js
sub
ja
mov
aaa
aas
dec
test
jno
rclb
pop
popf
gs
in
insb
jae
shrl
sub
push
ret
jmp
sub
mov
stc
in
lds
fisubrl
lret
inc
gs
js
sbb
jno
adc
lret
mov
insl
gs
call
lret
mov
push
icebp
data16
rolb
cmp
inc
and
jmp
shrb
mov
xchg
sahf
and
cwtl
sarl
add
sub
mov
pop
je
pop
pop
push
mov
lcall
add
adc
xchg
jge
inc
jecxz
stos
inc
adc
out
or
sub
lods
into
mov
je
ss
mov
push
mov
dec
mov
mov
mov
pop
mov
scas
dec
bnd
cmp
mov
nop
dec
fsts
int3
outsl
push
mov
xchg
xchg
addl
push
clc
add
ljmp
dec
mov
mov
dec
aaa
mov
mov
insb
mov
xor
sub
jg
in
sahf
push
mov
imul
sahf
addb
sub
and
pop
iret
sbb
cmpsb
jle
mov
fsubrl
add
lcall
pop
jmp
pop
cmp
cwtl
xchg
mov
out
shrb
mov
and
mov
sub
gs
mov
jl
lods
cli
jg
and
enter
outsl
ja
enter
in
fsubrl
cltd
lods
add
dec
outsl
jecxz
sub
sbb
in
arpl
jecxz
out
shr
push
cmc
cmp
cmpsb
into
inc
shrb
pop
ja
sub
cmpsb
jo
mov
and
sub
into
and
shlb
xchg
testb
and
int
mov
mov
cmp
ret
lahf
out
movsl
bound
cmpsl
pop
rcll
jo
jmp
ljmp
addr16
outsw
ret
outsb
adc
je
gs
cmp
pop
stos
cwtl
sbb
test
daa
scas
push
cmp
movsb
xlat
out
jp
cmc
sub
lcall
cmp
cwtl
lahf
icebp
inc
lds
or
mov
outsl
sub
test
push
xor
lock
sub
and
in
push
lock
cltd
sub
inc
mov
ja
pop
fiadds
mov
pushw
jns
push
outsl
adc
push
mov
pop
sub
sub
or
pop
adc
sti
mov
fsubrs
pop
out
stos
loopne
cmp
sti
pop
sti
nop
or
pop
pop
mull
insb
jo
scas
stos
frstor
push
xor
movsb
jg
je
ljmp
in
sub
outsb
jae
jle
cmp
mov
out
iret
cmp
cmc
lods
and
mov
push
loopne
push
idivl
add
fdiv
adc
mov
sbb
xor
rcrl
cmp
popf
jmp
fsubrl
iret
cwtl
test
adc
push
in
movsb
mov
and
iret
xchg
mov
push
mov
fisubrs
pop
loope
test
mov
loop
enter
inc
lret
pushf
movsl
out
repz
adc
xchg
rcll
sbb
shl
xchg
or
bound
in
mov
hlt
adcl
in
pop
cmpsb
inc
inc
xlat
popa
scas
add
jae
fucomi
mov
xchg
dec
add
xor
fwait
loopne
stos
push
mov
movsl
stc
lods
insl
ret
xchg
sub
push
push
rorl
xchg
push
cmpsb
inc
sub
xor
outsl
and
and
push
addr16
movsb
add
fisubs
bound
call
call
cltd
pop
xchg
ret
scas
pop
lock
jnp
inc
jo
dec
push
shlb
movsb
mov
test
and
add
adc
mov
lcall
mov
ret
dec
add
addl
test
and
faddl
xor
sti
jg
repnz
xor
aas
nop
sbb
pop
call
outsb
jae
popa
rclb
cltd
ret
xlat
or
mov
jle
loopne
jl
pop
xchg
cmp
int3
mov
push
add
push
jmp
add
push
mov
aam
pop
in
sbb
sub
int
cmp
icebp
movl
jmp
lods
testl
stc
xor
inc
outsb
push
fisttpl
and
ds
dec
faddl
push
leave
push
mov
cwtl
in
push
sbb
addl
sub
pop
psrld
loopne
das
mulb
and
ret
xchg
outsb
pop
xor
insl
sub
andl
pop
jno
cmp
inc
push
pop
aas
or
cmc
das
idivb
jne
cs
cltd
xor
jae
pushf
scas
push
sub
hlt
call
iret
push
jmp
mov
sbb
xchg
lods
out
pop
inc
sbb
rclb
mov
bound
and
xchg
bound
xor
cld
rclb
loopne
adc
push
or
mov
test
stc
into
int
aad
jl
sbb
fsubrs
je
arpl
lcall
popf
les
cmp
call
xchg
std
fsts
scas
lcall
sti
cltd
filds
insl
pop
push
psrlw
dec
xlat
sub
fcoml
mov
in
xchg
stos
jecxz
aaa
sub
jne
shr
imulb
add
enter
and
sbb
bound
inc
sahf
in
adc
jbe
lock
cli
into
mov
mov
pop
xchg
adc
push
rorb
out
sbb
or
ret
push
sub
xchg
js
cli
ja
test
testl
and
add
jg
das
mov
sub
test
lcall
cmp
xchg
mov
in
cmp
pop
lcall
cmpsb
pop
sbb
dec
ret
xor
cltd
xchg
mov
sub
iret
push
and
aaa
xchg
pushf
mov
add
lea
adc
mov
int
mov
xchg
pop
cs
jo
lock
je
cmp
jae
into
and
rclb
in
push
lret
sub
aaa
out
repz
jo
xchg
push
pop
shlb
imul
lods
cmp
bound
int
incb
fmull
in
cmpsb
rolb
imulb
dec
push
mov
lods
mov
sbb
cwtl
call
bound
inc
repnz
pop
clc
sub
fmuls
in
cltd
addr16
cmp
xor
sbb
cli
loopne
in
mov
and
pop
mov
mov
mov
mov
cmpsl
popl
loope
jo
and
mov
loope
jmp
jbe
mov
fdivrp
rol
mov
mov
jg
lds
notl
sarl
sbb
subb
outsl
sbb
xor
push
xchg
popa
enter
push
aas
cmp
pop
sbb
fidivrs
popa
dec
cmpsl
and
das
sbb
stc
inc
fs
pusha
shrb
adc
push
jae
pushf
sbb
leave
lods
test
cltd
rorl
sti
xor
mov
sar
insl
dec
lret
push
insl
jnp
sbbb
ds
push
push
xchg
sub
sahf
add
ret
mov
lds
les
xchg
mov
mov
dec
jno
cmp
fisubs
ja
popf
mov
cmp
cmpsl
pop
xor
into
rcrb
push
dec
inc
lahf
shlb
and
mov
sbb
adc
cli
push
test
lahf
lret
jmp
stos
or
addl
rcll
cmp
cltd
fcmovne
imul
aam
imul
pop
push
mov
cmp
pop
lds
sub
movsl
loope
inc
push
les
pop
das
inc
jg
insb
sti
into
outsl
push
cmp
jmp
push
daa
int
xchg
and
movsl
pop
cmp
xchg
sbb
mov
idivb
jmp
roll
bound
jecxz
sub
inc
ljmp
push
es
pop
daa
add
pop
bound
sahf
lods
push
cs
push
fs
sub
push
div
rorl
pushf
outsb
test
dec
out
cltd
loope
les
sbb
mov
int3
push
jg
inc
inc
or
scas
cs
bound
dec
jp
inc
ficoms
lods
mov
push
mov
xchg
and
xor
popa
sarl
fs
pop
xlat
lods
mov
cmp
sbb
js
enter
mov
rcrb
in
xorl
pop
xor
pop
out
popl
push
vmovhps
and
cmp
xchg
insb
jge
mov
xchg
arpl
jne
add
mov
jns
cld
adc
das
add
and
cmp
into
sub
movl
jbe
or
je
xchg
add
cltd
movsb
xchg
jne
adc
std
mov
stos
adc
bound
cld
add
jp
cmpb
inc
adc
inc
loope
bound
and
adcl
sbbb
addr16
sbb
dec
add
loop
mov
pop
push
dec
add
lcall
mov
cmp
add
cld
pop
lock
insb
insl
cwtl
pop
ljmp
or
cld
cmpsb
add
pop
lods
xor
cmc
sbb
and
pop
pop
push
shrl
iret
dec
push
in
scas
pop
inc
movsl
cld
testb
aam
sti
mov
inc
dec
sbb
and
cs
and
push
leave
mov
gs
ss
mov
ss
arpl
push
or
pop
dec
fmull
xor
xorb
call
inc
enter
pop
adc
jl
jg
jne
pop
ds
xor
in
push
sbb
enter
cmc
in
insb
xor
cmc
sahf
and
push
fsubrs
lock
fsubrs
ret
mov
sti
and
movsb
movaps
push
in
pop
test
movsb
dec
pop
sub
lds
or
mov
mov
mov
cli
into
subb
out
cli
inc
aaa
mov
insl
jne
ja
dec
loope
adc
cmc
push
mov
lods
jmp
imul
cmc
push
cmp
lods
cmp
popa
mov
mov
mov
sahf
fldcw
mov
jmp
pusha
push
dec
sahf
jle
into
push
insl
sub
fdivs
out
out
push
jg
imul
mov
mov
dec
and
xchg
mov
sub
mov
inc
push
test
cmp
imul
dec
push
daa
adc
scas
jle
loope
inc
and
sbbl
addr16
sbb
or
and
push
aaa
xchg
inc
jno
sub
jg
mov
jecxz
adc
push
imul
adc
pushf
insl
dec
dec
mov
call
push
or
mov
sbb
nop
inc
and
mov
ret
loopne
push
popf
nop
sti
add
into
sub
lret
aam
lret
ja
iret
xor
xor
jae
xor
dec
test
sbb
lret
xchg
aas
inc
aaa
push
roll
pop
adc
and
dec
xchg
mov
sarb
rol
sahf
mov
cltd
stos
mov
pop
stos
sbb
add
adc
mov
rol
lods
mov
ss
or
jp
test
cwtl
xchg
ret
sahf
cmc
push
mov
fwait
or
sti
iret
sbb
out
push
dec
rcll
sub
cmp
in
lock
les
jl
mov
mov
bound
push
xor
sahf
lds
pop
cmpsl
dec
cmp
sub
jle
add
jno
fwait
pop
dec
lods
es
adc
push
sbb
jnp
jne
in
adc
cmpsl
out
xor
adc
in
inc
xchg
push
add
xchg
cmp
jg
add
loope
jmp
lods
push
mov
push
push
and
mov
sbb
addr16
cwtl
int
mov
decb
mov
adc
out
aad
push
packuswb
push
xchg
stc
test
in
bound
in
xchg
push
push
lret
or
pop
inc
fsubrp
jle
dec
shlb
jnp
bound
xchg
test
push
add
sub
mov
mov
xor
test
inc
pop
xor
mov
loope
push
pushf
bound
sahf
incb
mov
mov
fsubl
xor
sub
xchg
subl
ret
lret
or
inc
bound
inc
xchg
adc
or
push
loopne
loopne
ljmp
fistpl
mov
jne
les
cld
jns
faddl
gs
imul
call
das
xchg
fcmovnb
test
push
and
or
and
inc
movsb
pop
xor
dec
and
sbb
sub
and
push
int3
add
iret
fsubr
adc
push
push
mov
testb
bound
adc
shrb
cmc
dec
adcl
jbe
mov
adc
cmp
add
icebp
push
sbb
testl
xchg
rolb
data16
dec
push
shl
cli
mov
ret
stos
shrb
fldt
jle
dec
cli
bound
cmp
push
cmp
fcoml
jle
push
std
aaa
jae
push
sub
mov
repz
mov
imul
call
inc
int
sar
mov
neg
daa
aaa
insl
iret
jmp
cmp
xor
stos
inc
jle
xchg
xchg
stos
pop
scas
xchg
test
sbb
mov
cmpsb
stos
jg
jns
push
subl
lods
pushf
adc
lahf
imul
sbb
gs
dec
push
gs
xor
sub
or
sub
adc
sbb
mov
cmp
iret
shrb
push
or
or
and
push
mov
jns
pop
arpl
jno
or
push
subb
repnz
shl
bound
fadds
outsl
and
lds
fwait
mov
jne
pop
jl
push
push
sub
mov
pop
loopne
cmp
pop
loopne
sub
xor
or
je
movsl
lahf
xor
call
nop
ret
jo
mov
jmp
xorb
push
out
lods
stc
mov
xor
cltd
in
inc
fistl
test
mov
pusha
adc
setnp
stos
mov
in
push
xor
sub
imul
ljmp
out
mov
mov
in
push
jecxz
and
pusha
mov
out
adcl
outsl
inc
stc
or
lret
das
stos
mov
lods
jno
add
divps
pop
test
push
dec
test
jg
das
or
xor
push
enter
inc
jae
test
inc
cmpsl
add
or
add
sbb
ja
shrb
mov
movsb
push
aas
and
mov
nop
push
inc
cwtl
rolb
push
pusha
loop
dec
mov
add
or
jge
push
fcmovb
sbb
aas
jae
rcl
push
enter
inc
cmp
jp
xor
sbb
push
xchg
std
outsb
xor
push
scas
cmpsb
pop
inc
push
inc
cmp
cmp
shll
jo
add
test
ss
bound
insb
retw
lcall
iret
call
in
mov
sar
outsl
fdivl
fadd
push
jle
scas
mov
xchg
pop
mov
mov
sbb
sbb
sub
addr16
xchg
jmp
rcpps
and
int
outsl
dec
pushf
fisubrs
inc
out
mov
addr16
adc
pop
call
gs
ficompl
lret
gs
cmp
in
adc
aas
cmp
cmp
pop
sub
mov
adc
push
sub
inc
xchg
push
aas
or
mov
es
ss
xchg
lods
pop
pop
call
cmp
push
sahf
dec
mov
mov
jg
aaa
dec
lods
mov
inc
push
imul
and
pop
pop
jmp
push
out
push
rcr
and
and
imul
loop
js
or
stos
jb
std
fcoms
rorl
sub
push
cmp
in
dec
push
aam
out
jmp
stos
add
iret
mov
xchg
mov
push
pusha
push
push
and
in
sbb
fistpll
mov
or
jg
jbe
push
in
xlat
sub
popa
sti
adc
aaa
pop
mov
popa
jae
push
push
adc
popa
and
cwtl
xorl
in
outsb
sti
js
arpl
pop
call
dec
icebp
sub
cmp
jge
xchg
cmpsl
sarl
hlt
fisttpl
imul
xlat
repz
push
mov
out
ds
pop
call
push
stc
and
pop
scas
repz
enter
mov
mov
mov
adc
clc
mov
scas
in
out
gs
loopne
jmp
pop
cmc
push
push
ss
cltd
das
pop
jo
push
or
int
repz
aas
loop
mov
mov
enter
adc
or
outsb
fimuls
scas
xchg
bound
pop
xor
xchg
or
sbb
mov
mull
stos
mov
mov
je
push
loop
mov
cmc
mov
and
dec
mov
jno
in
in
mov
push
scas
outsb
jne
pop
aad
add
imul
jle
dec
push
dec
sbb
cli
jle
das
dec
push
xor
push
incb
call
stos
xor
jl
cmp
outsl
mov
sbb
sbb
adc
inc
out
nop
cltd
out
ficoml
shll
inc
mov
add
fdivrs
mov
add
sbb
roll
not
ficomps
sub
outsl
mov
dec
pop
iret
rcl
xchg
lock
mov
out
push
data16
jb
push
dec
push
mov
fidivrs
movl
lret
xor
add
sbb
jae
or
aas
lds
inc
mov
xchg
mov
jo
jne
xor
mov
test
fwait
sub
in
les
ljmp
cmp
adc
inc
repz
push
fmull
cmc
out
les
cmp
decl
cmp
xchg
sub
daa
cmp
fucom
and
push
add
xor
pop
call
add
rcrb
out
inc
jmp
push
daa
cwtl
push
popa
rcrl
mov
pop
stos
cmp
hlt
inc
flds
push
cmp
mov
in
outsl
mov
outsb
pop
lock
cmc
and
mov
and
mov
int3
out
pop
xchg
orb
popa
jno
cmc
push
push
adc
mov
inc
out
call
out
lock
sbb
push
mov
stos
jmp
andl
push
sub
popa
lock
movsb
push
ret
movsb
dec
jle
pop
mov
cmp
xchg
sbb
jb
dec
movsw
or
jecxz
int3
push
xor
in
sti
add
or
and
jae
shl
aad
mov
lods
aaa
xchg
dec
or
movsl
je
and
or
add
dec
insb
xchg
loope
add
mov
pop
scas
or
sahf
adc
jb
out
pop
and
pusha
lret
insb
cmpsb
enter
stos
mov
jae
add
inc
push
flds
jno
icebp
gs
push
jg
mov
push
xchg
xchg
adc
mov
xchg
cmp
ja
push
popf
pop
inc
sub
out
andl
cmp
js
mov
push
jl
jle
fildl
jmp
add
add
dec
out
push
jb
ljmp
stos
jne
je
shrl
push
in
mov
dec
pop
out
jne
push
and
sbb
cmp
out
push
jb
loopne
push
push
sahf
add
mov
inc
aaa
test
mov
xorl
fcoms
push
xchg
jp
ror
xlat
xor
rorb
pop
out
xorl
xchg
dec
jne
lcall
mov
cmc
dec
das
and
cmc
jmp
rcl
mov
pop
sbb
xor
xchg
cmp
rclb
scas
mov
mov
add
mov
mov
stos
inc
mov
faddp
xchg
sub
fwait
dec
cmpsb
int3
add
aas
mov
jp
fcomps
imul
inc
mov
mov
mov
fimull
stos
andl
jae
emms
js
push
ret
lods
pop
flds
pusha
std
bound
aas
dec
negl
std
sti
sarl
mov
aas
fistpl
daa
pop
jno
icebp
iret
xchg
pop
xchg
fnstcw
test
inc
out
call
jne
dec
test
add
pop
loop
mov
lock
xor
pop
inc
movsl
fwait
mov
dec
mov
incb
pop
or
and
scas
mov
nop
lods
dec
imul
out
push
adc
popfw
xchg
mov
jnp
outsb
in
sub
mov
sub
or
push
into
or
dec
sti
pop
mov
loope
pop
push
bound
pop
jae
sbb
push
push
mov
inc
xchg
inc
dec
mov
xlat
clc
xchg
stc
fists
or
sub
add
cmp
rorb
push
dec
mov
lds
inc
shl
lock
push
jb
mov
pushf
and
outsl
or
push
mov
rorb
in
bound
repz
rcll
nop
xor
mov
and
jnp
sub
pop
repz
orb
in
fcom
push
addr16
cmp
and
jae
xor
enter
rorb
or
in
pop
xchg
jno
mov
pop
ljmp
lock
sub
push
fists
adc
or
cmp
incl
roll
mov
icebp
jae
push
es
sbb
push
mov
fnop
push
dec
mov
xlat
in
add
sub
dec
push
fmuls
cltd
dec
cmpsb
cmc
xor
lea
fsubr
outsb
sarb
filds
mov
fistl
mov
int3
popa
and
lret
sub
inc
ja
test
in
in
and
lds
sub
addr16
iret
rol
cmpsl
cmpsl
gs
adcb
popa
push
or
add
test
or
pushf
cmp
cmp
inc
sbb
push
xchg
movsb
push
shlb
or
push
ret
pop
enter
andl
pop
test
fs
mov
negl
movsl
jl
inc
fisttpll
lcall
shlb
shll
pop
outsl
xchg
xor
adc
in
scas
scas
mov
xchg
pop
imul
adc
cs
jl
mov
loopne
inc
jmp
inc
loopne
loopne
jmp
and
fwait
mov
popa
aas
push
or
push
lret
in
push
xchg
leave
out
jne
leave
call
movmskps
pop
aam
mov
sahf
loopne
pop
push
xlat
and
jo
xor
sub
mov
repz
xor
ss
sahf
cmpsb
sub
add
into
ret
push
pop
out
and
jae
sub
sbb
inc
cmpsl
stos
dec
fcomps
or
push
push
push
cmp
jns
dec
iret
sub
stos
scas
sbb
mov
mov
decb
ja
mov
mov
js
scas
movsb
dec
inc
xchg
add
inc
les
popa
pop
ss
sub
jno
into
mov
nop
clc
mov
aaa
fisttpll
xor
testl
into
sbb
loope
xor
repz
push
icebp
xor
mov
ret
add
adc
lods
jbe
dec
mov
loope
xlat
sbb
imulb
add
cmp
icebp
jge
in
push
shll
inc
sbb
push
mov
out
sub
out
imul
cli
pop
mov
daa
cmpsl
xchg
mov
xor
push
inc
pushf
cmp
jo
ja
jmp
into
hlt
and
test
sbb
adc
insb
cmp
mov
loopne
jnp
push
jle
xchg
iret
jge
cmp
insl
cmp
inc
sub
insb
dec
outsb
stos
aas
push
jge
xchg
aad
xchg
fdecstp
and
ret
in
rclb
dec
mov
add
flds
icebp
addr16
push
ja
ficoml
push
xchg
test
clc
xlat
jae
xor
xchg
lock
sbb
pop
mov
dec
and
push
xor
mov
cmpsb
pop
fisubl
fldl
cld
dec
in
add
in
loope
insb
cmp
and
lock
or
sub
cmp
imul
in
adcl
scas
inc
push
add
push
push
call
or
push
xchg
push
roll
out
fadd
jmp
mov
ror
add
xchg
pop
mov
stos
mov
jne
cmc
push
dec
icebp
call
ret
rcrb
fidivrs
in
and
test
add
jae
or
sub
sbb
adc
cmc
movsl
dec
dec
lds
inc
cmp
cmp
js
xchg
dec
es
mov
push
dec
sbb
loop
xlat
in
cwtl
or
gs
rol
fwait
fwait
pushf
in
scas
jmp
adc
lods
lock
aam
movsb
sub
add
stos
pop
or
fs
mov
nop
loop
adc
cmpsl
sbb
mov
push
sub
les
xor
xchg
outsl
mov
test
bound
ret
lods
mov
fstp
icebp
mov
push
std
aas
push
fmuls
fisttps
inc
bound
scas
and
fcompl
popf
scas
les
cmpsb
sahf
sbb
sahf
push
lock
mov
bound
dec
sti
fsubr
pushf
sahf
imul
out
xchg
dec
fs
repnz
add
fiaddl
lcall
mov
mov
inc
jg
loopne
xchg
inc
jp
mov
inc
das
push
fildl
cwtl
imul
add
ds
push
inc
jno
aas
in
in
push
mov
enter
in
shl
mov
out
pop
xor
stc
pop
data16
inc
and
jmp
inc
sbb
jo
rolb
bound
sti
shl
popf
xchg
pop
ds
idivl
jnp
ror
pop
das
imul
xchg
idivb
out
lea
cltd
idivl
aas
push
inc
in
mov
stos
xor
push
test
cld
push
adc
cmp
pop
fcmovne
ja
xchg
stos
sbb
and
lods
shl
lahf
push
dec
push
clc
loopne
out
cltd
dec
hlt
shrl
adc
in
aam
xor
push
fmull
inc
push
push
push
xchg
insb
in
shrb
pop
adc
iret
push
cs
or
ja
les
mov
jae
push
aam
pushf
pop
popa
imul
pop
mov
sti
out
xchg
outsl
and
mov
mov
outsl
and
mov
rcrl
mov
jnp
scas
test
dec
insl
inc
mov
add
push
xchg
dec
mov
and
jmp
add
aaa
stos
pop
jge
mov
inc
pop
mov
or
movsl
sub
test
call
mov
jg
push
mov
loopne
lret
dec
daa
fchs
gs
stc
inc
jle
rcrb
cmpl
orb
and
cmc
push
ljmp
adc
stos
xchg
minps
push
push
pop
sub
sub
or
ret
aad
dec
xchg
shlb
dec
add
movsl
insb
sbb
insb
push
xor
jecxz
add
jnp
mov
clc
and
outsb
out
bound
test
dec
push
cld
jb
mov
mov
mov
ret
push
push
lock
out
add
pop
dec
pop
aam
gs
add
ret
mov
mov
orb
dec
sub
push
sbb
jo
ret
ds
mov
loope
outsl
push
pop
loope
outsb
std
add
pushf
insb
push
lcall
push
push
mov
cwtl
xor
cmp
loope
jp
xlat
push
push
cli
dec
mov
add
jmp
pop
jp
inc
xchg
lahf
and
lcall
aam
jl
ss
js
data16
mov
test
icebp
movl
mov
in
ja
inc
cmp
les
inc
testl
mov
aad
hlt
fcoms
scas
lcall
push
mov
shrl
add
pushf
sbb
xor
mov
xor
and
movsl
xor
pusha
cmp
movsb
jb
icebp
lods
push
les
stos
movq
les
loopne
test
pushf
int3
dec
pop
sub
bound
aaa
ret
push
in
cmp
cmpsb
pop
push
dec
fsubl
in
pushf
sarb
repnz
cmp
mov
cmp
into
nop
push
add
fisubrs
out
jle
pop
movsb
mov
sbb
psllw
xor
push
xor
pusha
jno
push
dec
push
scas
inc
ds
iret
js
adc
dec
dec
imul
xchg
cmp
and
or
dec
mov
pop
clc
icebp
outsb
ja
inc
dec
xor
jnp
cli
aam
dec
fldl
push
add
jbe
jg
sarl
aas
arpl
mov
sub
iret
dec
call
dec
dec
ret
push
dec
inc
in
and
dec
test
xchg
add
jns
pop
daa
cli
clc
outsl
push
push
cld
ljmp
inc
fnsave
adc
nop
mov
and
mov
bound
jnp
aaa
adc
mov
xchg
push
sbb
jge
xor
pushf
rcll
and
push
pop
mov
cs
arpl
cld
cmpsb
ret
inc
dec
adc
test
cli
or
shr
dec
xor
fcoml
pop
dec
xchg
shl
push
jecxz
notb
mov
fcompl
jmp
sub
mov
push
pop
add
in
push
outsl
loop
cmp
loope
mov
cmpsb
mov
mull
xor
leave
xor
nop
cmc
cltd
sub
mov
jle
xlat
cltd
ficoms
scas
mov
out
fmulp
jecxz
iret
rclb
xchg
inc
negl
stc
call
shr
push
stc
stos
sbb
lcall
adc
ficompl
inc
inc
pop
pop
sbb
out
lods
cmpsb
fwait
scas
and
mov
movsl
push
push
mov
add
ret
outsl
out
aaa
lahf
out
xchg
or
jae
ljmp
push
jnp
dec
rclb
push
xor
insb
jecxz
iret
bound
lret
ss
xchg
loop
dec
push
lahf
sbb
jle
insb
pop
sahf
test
fists
xchg
and
iret
bound
pop
inc
jne
shll
pop
sub
test
xchg
fs
xchg
push
push
outsb
cwtl
into
xchg
out
mov
rcrb
mov
cmp
push
outsl
jle
fsubl
jne
test
add
push
mov
imul
and
mov
push
in
or
stos
xchg
jg
mov
inc
push
sbb
bound
call
cld
push
and
enter
mov
pop
adc
in
xchg
mov
xchg
movsl
mov
pop
sar
jnp
pop
sti
mov
mov
bound
jbe
and
mov
lods
pushf
inc
scas
vpslld
data16
bound
rcrl
shl
inc
movsl
and
jl
sub
std
mov
mov
mov
xlat
mov
and
mov
inc
push
push
cmc
or
jae
mov
aas
xor
inc
push
inc
push
push
jne
bound
mov
jmp
sub
mov
jge
mov
shlb
outsl
fsts
pushf
mov
dec
inc
sbb
out
xchg
pusha
mov
pop
xchg
adc
pop
nop
jl
bound
sbb
or
ret
xchg
cmp
insl
push
push
shlb
pop
xchg
loop
push
push
shrb
ret
int
push
xor
pop
icebp
arpl
cmp
sbb
adc
mov
adc
cmp
cmp
xchg
cmc
pop
inc
leave
std
xor
repz
dec
xor
ljmp
ss
xchg
fwait
shr
xor
jb
sub
ss
imul
push
ljmp
add
and
cmp
dec
stos
jecxz
flds
stc
lock
mov
arpl
mov
dec
jg
push
aam
push
add
pop
xchg
test
pop
sti
dec
jp
jge
mov
xchg
xor
jo
cwtl
bnd
and
popa
push
sbb
fcomps
stos
sarb
xchg
leave
fdivr
pop
add
out
test
jl
fmul
jecxz
inc
jns
or
mov
iret
mov
pop
push
das
bound
mov
in
push
sbb
mov
mov
clc
addb
xchg
cmpsb
mov
mov
fidivl
jmp
cltd
pop
decl
mov
cmp
push
xor
push
jmp
xchg
dec
pop
lds
push
outsb
fstl
adc
jno
shlb
sub
stos
popa
pop
ret
icebp
lds
iret
mov
jle
jle
push
mov
adc
jb
xor
ret
push
xchg
test
adc
jns
add
cmc
mov
xchg
testb
sahf
xchg
sarl
shll
sub
mov
or
fidivs
popf
shll
jg
arpl
push
jno
xchg
push
mov
push
push
cwtl
jl
mov
adc
pop
les
stos
xlat
push
mov
out
mov
arpl
outsb
inc
sahf
js
in
in
orl
mov
fstpt
jecxz
lret
js
pop
jle
fcmovne
fwait
jecxz
cmpsb
jl
movsl
xor
rcrb
loope
bound
divb
fwait
cmpsl
leave
push
push
cld
pop
inc
mov
pop
bound
and
xchg
or
mov
lds
movsb
ds
mov
jmp
bound
faddl
stc
scas
movsl
negb
pop
push
mov
jmp
lret
sar
cmc
inc
sbb
or
shlb
or
fs
fisubl
fs
mov
mov
cmc
out
or
andb
jl
mov
add
jae
cli
sbb
pop
scas
nop
repnz
shlb
pop
imull
pop
rolb
push
cld
hlt
jecxz
jmp
xor
xlat
test
cmpsl
sbb
mov
jmp
sub
mov
push
imul
xor
inc
shlb
mov
idiv
rclb
lret
inc
out
pop
fwait
insl
pop
lods
add
push
pop
pop
test
and
adc
sbb
and
insl
jg
incb
pop
xor
ret
inc
mov
mov
ds
add
mov
cmp
xchg
outsb
cmp
sub
or
dec
out
push
int3
aas
sub
pushf
ja
xor
shrb
mov
mov
adc
jge
mov
movsb
pusha
xchg
mov
and
and
sarb
test
rcrb
addl
rolb
repnz
out
jns
outsl
push
xor
cld
mov
mov
dec
outsl
jle
cmp
push
jne
adc
cmc
fisttpl
mov
fisttpl
arpl
xchg
pop
mov
mov
sub
in
jge
stos
sub
es
cld
lahf
lds
pop
mov
mov
adc
xorb
dec
leave
push
imul
bound
mov
pop
in
sub
mov
jmp
faddl
push
cmp
iret
nop
sbb
lret
add
iret
adc
mov
lret
in
jns
mov
or
loop
shll
add
stos
sub
clc
enter
mov
sbb
fwait
enter
lock
jmp
outsb
dec
or
imulb
pop
xchg
int3
lfs
insl
dec
aaa
lods
scas
push
add
ja
into
insl
fsubrs
ret
and
xchg
scas
out
bound
xor
push
push
xchg
sub
mov
jg
out
in
daa
ljmp
or
icebp
iret
out
int
cmc
call
xor
iret
arpl
pop
cmp
xor
jl
push
jne
fcmovnbe
adc
aas
fisubs
sub
or
and
andl
xchg
sbb
ljmp
xchg
cmp
outsb
je
fistpl
ljmp
dec
inc
push
mov
push
push
and
ds
adc
pop
in
daa
xchg
pop
movsl
mov
lret
filds
imul
mov
lods
adc
cmc
inc
cmp
jecxz
stos
inc
aas
push
sarb
lcall
jmp
bound
dec
inc
jle
add
cmp
popa
jmp
insb
popf
aaa
mov
das
pusha
sahf
and
mov
jmp
aad
outsl
or
push
jg
in
inc
mov
mov
ljmp
roll
and
inc
xor
inc
leave
lcall
cmp
push
dec
lahf
repz
loope
push
pop
nop
dec
notb
mov
jnp
fldl
cmp
xchg
out
jbe
jns
fcoml
add
xor
jge
pop
xor
pop
ret
sbbb
cmp
sub
mov
mov
add
ds
scas
stos
add
ja
lret
push
std
dec
xchg
inc
stc
cmp
jae
and
cmp
iret
test
jp
enter
stos
jg
imul
adc
cmp
in
or
js
in
push
cmp
pop
sbb
std
xchg
rorl
add
lcall
add
and
pop
sub
imul
fdivrs
frstor
stos
lcall
jb
jp
jge
push
and
les
cltd
inc
inc
xchg
sbb
jne
mov
jg
ja
icebp
stos
out
dec
imul
int3
push
push
xchg
sub
pop
mov
mov
ja
lds
je
test
and
xor
cltd
push
int
pusha
push
sarl
aaa
clc
hlt
rorb
bound
cmp
jle
and
ss
out
mov
and
call
das
in
push
pop
shrb
daa
mov
iret
push
push
je
in
iret
push
xor
das
popa
jecxz
aad
sbb
ficompl
push
sahf
adc
mov
cmp
test
cmc
shlb
outsl
add
cli
sahf
stos
or
jg
rolb
xchg
fcompl
lret
ja
push
or
fs
xchg
push
sub
push
push
jne
push
iret
sbb
xchg
sub
dec
outsb
or
jnp
inc
sbb
sbb
fisttpl
mov
or
and
jns
dec
sarl
jmp
cwtl
int3
mov
shlb
xchg
movsl
cmp
cmpsl
stc
daa
mov
mov
jnp
outsl
inc
in
and
in
fcmovbe
sbb
pcmpgtw
nop
push
iret
fadd
mov
insb
loop
icebp
movsl
dec
add
popa
hlt
pusha
cmpsb
adc
dec
jecxz
inc
ljmp
push
adc
imul
rcrb
clc
and
push
xor
out
mov
add
push
mov
mov
and
adc
cmc
dec
in
loope
fisttpll
ret
push
lods
loopnew
es
icebp
pop
call
and
mov
push
xchg
ficoms
push
daa
shll
add
xchg
rorb
insl
ret
sub
int3
push
push
popf
ljmp
lahf
xor
pop
fcoms
mov
push
jmp
mov
inc
sub
or
add
popa
xor
ja
pop
stc
mov
push
outsl
shlb
and
cmp
xchg
jmp
imul
sub
fmulp
fistpl
es
outsl
or
inc
cvtpi2ps
shrb
iret
and
testb
mov
lods
imul
mov
mov
test
push
aas
cmpb
jp
lods
icebp
mov
arpl
jg
movsb
adc
inc
pushf
or
dec
xchg
mov
pop
roll
jmp
lcall
movsb
test
addl
ret
fistl
jnp
into
mov
pop
xor
mov
ret
adc
jl
add
loope
adc
or
pushf
dec
adc
cld
xchg
loopne
pop
stos
mov
push
push
pop
cmp
in
stos
xlat
mov
into
sbb
cwtl
pop
fidivrs
push
cmp
outsl
xchg
mov
and
cmpsl
dec
lret
xor
inc
lods
jne
and
xchg
add
lds
sbb
and
push
lods
pop
fs
xlat
out
leave
icebp
imul
rolb
dec
push
mov
jnp
push
sub
mov
fstpl
scas
cmp
scas
dec
movsb
idivl
push
sbb
fcoml
cmc
inc
pop
ja
sub
cmpsl
lcall
faddl
jbe
pop
daa
mov
cmpsw
mov
xchg
insb
sub
outsl
push
es
cmp
adc
sub
dec
shlb
inc
orb
mov
push
aad
inc
test
xchg
les
mov
iret
xchg
mov
es
aaa
inc
and
mov
or
cltd
loop
rolb
iret
adc
test
adc
inc
stos
jg
pop
lret
sub
int3
sub
push
outsb
popf
clc
push
inc
frndint
in
sub
mov
xor
test
xorps
fmull
push
jmp
push
sbb
aam
imul
mov
arpl
dec
and
fnstcw
arpl
es
or
ret
mov
xor
dec
and
sbb
fwait
in
sbb
sahf
repnz
in
ret
vsqrtps
lahf
in
add
sbb
sahf
stc
fildll
mov
testb
inc
dec
dec
or
sahf
sub
cmp
push
xchg
sahf
insl
sbb
pusha
xchg
fwait
movsb
mov
bound
sbb
into
pop
insl
xchg
xor
fsubs
sbb
nop
popf
add
ret
push
mov
and
imul
sbb
addr16
xor
push
fidivl
js
mov
jecxz
jnp
cmp
mov
sti
idivl
aaa
je
out
cltd
imul
or
test
jno
popa
mov
jbe
jae
mov
inc
cmpsl
shrl
loop
out
cltd
mov
das
fdivrl
sub
shll
cmpsb
subl
push
daa
je
and
inc
and
push
or
cmpsb
xchg
pop
les
or
cmpsl
add
pop
cmp
cmp
gs
addr16
bound
iret
icebp
fsubs
or
lret
addl
sti
int
xchg
or
mov
xchg
dec
sbb
in
inc
dec
inc
xchg
inc
shll
inc
pop
into
lret
icebp
push
inc
cli
sbb
clc
adc
ss
imul
adc
dec
hlt
iret
aaa
xchg
and
mov
dec
mov
jle
add
pop
jmp
rcrl
ss
jp
cwtl
lcall
jmp
je
pop
push
mov
mov
addl
add
inc
pop
mov
cmc
ljmp
sub
pop
fstps
cmp
jl
out
in
test
aaa
add
pop
pushf
dec
xchg
les
loopne
bound
lods
or
mull
lods
jnp
mov
into
mov
sbb
leave
decb
xor
repz
cmp
rol
mov
mov
ret
mov
pop
bound
mov
xchg
cltd
and
fstpl
pop
sub
mov
or
nop
movsl
jb
xor
addr16
bound
clc
sub
xor
fmull
shl
push
nop
xor
ret
add
mov
or
out
push
and
pop
and
les
int
das
pop
sarb
dec
xchg
dec
testb
outsl
mov
and
in
test
imulb
mov
push
clts
inc
xchg
ret
inc
fdivrl
sahf
lods
cmp
jp
and
ljmp
insl
test
lret
sahf
stc
and
push
orl
test
pop
cltd
insl
aad
movsl
ja
or
pop
repz
sbb
cld
or
mov
shlb
xchg
hlt
and
rcll
loopne
rorl
loopne
popf
xor
pop
xchg
insl
movsb
jno
loopne
push
xchg
negb
int
cmp
jnp
mov
xchg
mov
fnstcw
aam
int3
or
cltd
pop
pop
cmp
call
sbb
fcompl
push
es
fimuls
inc
leave
sub
mov
mov
mov
in
fcoms
bound
sub
adc
xchg
push
outsl
mov
icebp
and
stc
out
push
out
dec
call
lcall
out
cmp
icebp
cmc
shrl
bound
adc
inc
in
mull
in
pushf
push
sub
ja
push
push
pusha
add
mov
pop
dec
jnp
jnp
stos
cmp
inc
insb
mov
jmp
pop
sahf
ljmp
in
loope
push
pop
and
bound
sahf
xor
stos
add
inc
pop
push
or
mov
loop
or
ret
pop
js
mov
push
sti
inc
in
sarl
add
enter
loopne
pusha
dec
dec
inc
inc
cmp
adc
out
into
cld
jp
cpuid
scas
imull
jns
aad
sbb
rcrb
mov
in
popf
push
xchg
sub
sti
mov
mov
jle
in
lods
loop
adcl
push
popa
mov
scas
dec
xchg
popa
inc
jne
and
test
in
adc
aas
test
push
sub
push
mov
dec
cwtl
in
xor
movsl
fidivs
insb
mov
dec
xchg
inc
inc
push
int3
sub
xor
inc
gs
lret
pusha
sbb
jae
dec
jnp
cli
in
jno
pop
push
movsl
adc
cmpsl
out
push
cmp
repz
and
xor
clc
sub
adc
mov
iret
and
xor
movl
js
push
mov
pop
cmpb
and
push
inc
cmp
pushf
mov
cmc
daa
mov
aas
jno
dec
xchg
mov
aas
maxps
fnstsw
out
dec
sarb
pop
notl
das
loope
imul
icebp
fdivrs
push
inc
js
jns
jle
es
mov
icebp
in
add
or
xor
pop
push
fwait
and
pusha
lea
nop
in
das
inc
scas
out
test
ret
cld
mov
jl
cmc
imul
stos
push
adc
cmp
nop
subl
push
dec
out
repnz
sub
movsb
dec
mov
icebp
out
pop
roll
subl
in
jo
enter
jp
push
stc
in
xchg
xchg
push
or
sbb
pop
stc
scas
push
cli
subl
xchg
push
sbb
pop
pusha
mov
xchg
int3
bound
sarb
mov
loopne
and
insb
cmp
cmp
mov
loop
jnp
sti
bound
scas
les
jmp
and
scas
jno
outsl
xor
jno
sub
ja
push
inc
push
add
mov
sbb
jo
in
push
shrl
push
xchg
push
dec
add
in
cwtl
pop
in
fadd
mov
inc
pushf
cmp
sbb
xchg
jge
rcr
pop
outsl
addr16
imul
popf
inc
movsl
dec
jmp
out
iret
bound
imul
rclb
test
bound
adc
jmp
roll
iret
ficoms
and
std
out
movsb
bound
push
movsb
and
out
add
push
les
mov
cmc
xchg
add
pop
dec
xchg
mov
ljmp
dec
sbb
cltd
stos
xor
ljmp
and
shlb
lret
pop
int
fnstcw
push
js
aaa
push
pop
dec
push
call
in
push
in
mov
aam
mov
pop
sahf
repz
push
aad
xchg
shlb
mov
and
xchg
loopne
push
pop
cmp
cs
adc
jg
ss
popf
in
dec
call
cmp
sub
push
cmp
sbb
enter
lret
in
jmp
sti
das
js
out
es
jle
xchg
movsl
cmp
in
push
decb
sbb
lds
sub
adc
lcall
sbb
popa
pop
shll
pop
ja
and
imul
out
scas
push
out
jmp
aam
in
stc
into
shrb
jae
sbb
mov
iret
sbb
loop
pop
negl
flds
pop
push
pop
inc
cwtl
addr16
loop
subl
popf
fidivs
xchg
std
push
xchg
adc
ja
ret
insb
outsl
out
mov
or
push
dec
shll
mov
gs
jecxz
fcomps
sub
aad
adc
sub
inc
jb
popa
das
xlat
xor
lcall
pop
nop
push
cmp
js
push
push
and
and
movsb
push
rcrb
jmp
out
sarb
sub
mov
lds
xorb
in
lods
sbb
loope
mov
inc
jnp
test
or
ret
cmpsb
add
cmp
fwait
xchg
mov
cmp
sahf
mov
and
cld
dec
inc
shl
jle
xorl
sbb
loop
lock
arpl
fs
dec
and
repnz
mov
xor
call
int
pusha
inc
add
inc
sub
inc
mov
arpl
fldt
jmp
mov
insb
fcmovu
out
pop
fcmove
dec
cmp
bound
out
mov
les
data16
idiv
dec
out
lcall
xchg
repnz
imul
sti
aam
xchg
push
test
mov
mov
out
lcall
jb
ds
pop
sbb
pop
jmp
sbb
inc
sub
cmp
mov
cmpsl
outsb
push
cmp
inc
mov
jo
push
sbb
das
push
fs
push
sbb
movsb
jmp
jno
sbb
pop
shll
inc
sbb
lret
jne
shrl
add
mov
repz
imul
push
pop
shll
clc
mov
push
and
dec
xor
jle
lods
or
daa
push
xor
sarl
lcall
test
loope
cmp
pop
jmp
or
lea
mov
pop
hlt
daa
daa
ret
push
ja
jae
jns
dec
jg
fidivl
rcl
out
lds
inc
fstps
inc
movb
imul
jbe
or
push
fimuls
stc
int3
enter
insb
mov
test
bound
out
call
stos
shrb
fistl
push
jl
jmp
xor
call
ljmp
movsl
bound
inc
xor
mov
dec
sub
cmp
fs
out
pop
sub
mov
jnp
xor
inc
rorb
mov
lret
push
jle
xchg
sbb
jle
mov
push
ss
xorl
inc
pop
sub
ror
pop
movsb
xor
jmp
pop
pop
out
jmp
dec
outsb
nop
cmp
cmp
mov
int
insb
je
sbb
fwait
aam
dec
inc
call
hlt
push
nop
enter
test
insb
adc
les
xor
std
mov
jnp
inc
adc
mov
stos
mov
sub
test
xchg
mov
push
add
jae,pt
bound
pop
push
inc
lret
jg
shr
ja
sub
dec
mov
push
cwtl
fdiv
addr16
stc
cmp
mov
mov
call
jg
and
popa
ret
push
imull
icebp
ficoms
pop
testl
dec
mov
pop
add
cmpsl
jne
push
mov
add
sti
jne
imul
shll
ret
add
outsl
test
arpl
sbb
lods
daa
push
cmp
xchg
pop
mov
dec
xor
loop
aam
das
mov
addr16
scas
push
out
jns
shll
insl
scas
test
add
in
sahf
enter
push
das
aas
xchg
pop
test
ret
push
sbb
fldenv
gs
out
insb
cli
sbb
sbb
jo
lret
xchg
in
movsl
js
and
or
sahf
add
dec
or
mov
stos
and
daa
inc
fmul
push
cmpsb
aad
cmp
call
fstpl
loopne
std
shrb
gs
sub
jecxz
popa
leave
jae
daa
cmpsl
push
push
stos
dec
lds
inc
push
pop
movsb
cld
mov
clc
cld
into
push
arpl
sbb
adc
sub
dec
fsubrs
push
repnz
add
dec
in
repz
sub
xchg
fildl
iret
xchg
cld
pop
cmp
nop
fadd
iret
jne
xor
mov
pop
xchg
roll
iret
sti
pop
in
xor
pop
ficompl
jno
scas
cmp
dec
ja
cmp
cmp
xchg
popa
jne
pcmpgtd
adc
mov
sbb
xchg
add
and
out
push
bound
rcr
decb
mov
or
jbe
insb
pop
pop
adc
imul
and
xchg
rclb
aas
mov
mov
add
mul
mov
lock
inc
cld
mull
cltd
fwait
stos
pop
xor
enter
inc
sub
cs
iret
loopne
adc
movsl
hlt
std
pop
sti
arpl
mov
fldcw
orb
sub
lods
loopne
stos
push
mov
adc
repz
adc
xor
out
jecxz
bound
je
fdivp
or
data16
xchg
rolb
addr16
dec
cmp
and
fsubrs
lret
push
cli
jno
pop
clc
jle
pop
mov
push
test
imul
push
ljmp
loop
std
data16
ret
sbb
sbb
fmul
jnp
mov
enter
sarb
jle
jl
mov
sub
mov
pop
into
movl
mov
or
xor
mov
xor
sbb
push
movsb
sahf
mov
push
cmp
stos
add
sbb
cmp
adc
shlb
or
sarb
inc
test
mov
sbb
mov
loopne
xlat
dec
mov
xor
pop
lahf
push
repz
jge
jno
fstl
sub
aad
dec
pop
lock
scas
xchg
push
push
outsb
mov
outsl
sub
push
sbb
fwait
insl
cmc
jecxz
out
lret
clc
fs
rcll
shl
push
psrlq
leave
out
push
lods
mov
sub
shlb
mov
aas
ja
daa
std
pop
inc
pop
dec
push
xlat
push
pop
imul
aaa
dec
inc
or
out
or
out
les
push
call
xchg
loopne
insb
cltd
mov
mov
jb
repnz
push
cmp
ljmp
sbb
cmp
jmp
cmp
aam
ficompl
push
jmp
pushf
in
enter
nop
aaa
cmc
mov
jae
pop
mov
jnp
out
or
mov
test
ret
out
dec
je
iret
sbb
addr16
cmpsl
arpl
xor
sbb
mov
sahf
adc
mov
cli
jp
xchg
adc
xor
push
std
int
inc
shll
inc
sar
fs
lods
popf
mov
and
movsb
lea
gs
cs
xchg
xchg
inc
dec
ja
pop
pushf
mov
mov
pop
sar
jnp
mov
jb
movsb
fs
push
aas
mov
dec
jg
mov
aas
out
inc
sub
mull
dec
cltd
bound
mov
jge
mov
push
bound
push
mov
add
movsl
sub
outsb
cmp
sahf
sbb
outsl
push
jno
cltd
mov
lret
mov
fs
push
sti
inc
add
cmp
push
xor
ret
out
andb
mov
jns
pop
out
into
dec
insb
nop
in
js
inc
ret
movsb
outsl
ja
mov
orb
xchg
add
pop
push
push
in
jbe
fistpll
aas
gs
popa
mov
pop
inc
push
sbb
shll
dec
or
or
inc
mov
cmp
dec
and
int3
fistl
jbe
push
stos
ds
popa
push
push
jmp
sub
ljmp
aam
adc
hlt
and
or
push
rolb
setnp
push
sahf
xor
cmp
out
int3
outsb
in
push
jns
mov
lea
xor
adc
adc
pmaddwd
lods
mov
mov
mov
dec
shlb
mov
ret
lods
xlat
popa
dec
insl
scas
lret
loope
push
inc
pop
jl
xchg
xor
sahf
dec
data16
sar
mov
jnp
aas
shll
int
sbb
fistpl
jnp
rcrb
jle
out
in
imul
cmp
or
jbe
push
jbe
adc
push
aad
rorl
sbb
ss
mov
nop
sub
bound
push
in
push
mov
data16
mov
call
pop
pushf
cmc
int
addr16
jae
fldenv
mov
mov
iret
inc
dec
lds
sbbb
and
pop
mov
lods
addr16
rolb
ds
data16
fucomi
inc
outsl
clc
push
or
mov
push
mov
or
fldenv
dec
mov
push
in
jg
ss
mov
dec
pop
sbb
fsubrs
jbe
jae
push
scas
in
inc
movsl
bound
inc
and
pop
idivb
xchg
out
inc
push
xchg
and
arpl
dec
ss
mov
sbb
movsb
cmp
cmc
dec
dec
xchg
inc
xor
push
jp
jbe
adc
ror
daa
add
dec
xchg
imul
dec
stos
inc
clc
ja
mov
aam
jno
pop
out
inc
xchg
lret
or
sub
rcrb
sub
addb
sbbb
andl
sbb
test
sub
jns
sahf
les
and
sahf
adc
daa
mov
faddl
sbbb
bound
aam
inc
jnp
sbb
pusha
mov
ficomps
and
push
pop
imul
sub
int3
push
push
push
out
outsb
xor
inc
into
xchg
jg
mov
xlat
jl
loopne
mov
cmpsl
jno
mov
mov
fdivs
jmp
bound
push
jp
mov
jmp
sti
xor
sti
mov
push
pop
dec
mov
iret
or
bound
dec
mov
lods
xor
mov
into
jl
or
movsb
dec
popa
cwtl
repz
iret
jg
movsl
and
cmpsl
xor
dec
inc
mov
sahf
dec
fwait
ret
jmp
lock
mov
int3
dec
int3
inc
xor
add
and
push
cmp
dec
pop
shrb
sbb
test
push
inc
and
push
lahf
gs
sub
mov
xchg
push
cmc
out
das
push
iret
inc
loopne
xor
jmp
push
mov
rolb
fsubrs
rclb
inc
sbb
sub
daa
cltd
jbe
stc
out
ret
or
gs
cmp
out
cmc
xor
lds
orl
jg
mov
movb
push
bound
orl
dec
xor
xchg
jp
sub
dec
or
xchg
push
sub
pop
inc
and
out
mov
sub
les
jb
jae
cmp
push
in
dec
inc
movsl
sub
xchg
test
int3
negl
mov
xor
sub
in
stos
sub
dec
outsb
adc
mov
into
mov
not
push
lds
call
cmp
push
and
shl
adc
mov
sbb
les
xor
add
and
stos
pop
cwtl
push
jno,pt
mov
cmp
adc
pop
popf
popaw
add
jmp
add
pop
bound
and
outsb
cwtl
fisttpl
out
sbb
jle
aaa
sahf
addr16
lret
cld
stc
and
jnp
push
lock
mov
push
std
mov
fbstp
std
out
popa
push
mov
mov
das
in
or
dec
stos
adc
xchg
sub
inc
in
rcrb
leave
inc
mov
mov
sub
lret
or
dec
or
mov
cmp
cmp
jle
jp
dec
jge
or
cs
push
push
nop
sti
test
xor
ret
jae
jge
or
enter
adcl
adc
mov
cld
das
and
mov
in
and
adc
inc
jmp
stos
lahf
pop
pop
add
sub
mov
cmp
pop
andl
push
sti
js
push
xlat
sbb
std
push
sub
call
movsb
push
mov
fisubs
sarl
lds
jnp
xchg
add
rorl
push
jae
aaa
mov
and
jmp
movsb
test
cld
movsl
and
pop
mov
imul
call
sbb
mov
inc
inc
aas
mov
adc
sbb
repz
mov
enter
dec
inc
aam
ds
sbb
inc
in
adc
imul
mov
dec
out
sub
pop
push
mov
pop
bound
xchg
mov
lods
rclb
enter
jno
icebp
decb
scas
mov
movsl
inc
jecxz
push
sub
xor
mov
adc
ret
cmp
ret
lea
mov
pop
aad
dec
inc
and
out
cmpsb
xchg
and
sub
mov
insb
push
cmp
push
inc
dec
mov
push
mov
lret
shl
mov
nop
push
popa
clc
mov
sbbb
add
jmp
sub
cltd
dec
lea
jge
lds
and
pushf
rol
push
cmp
xor
push
gs
xor
fildll
push
adcb
mov
xlat
iret
mov
rolb
mov
popa
pop
test
das
adc
fstpt
in
jg
inc
jo
lods
loope
cmpsl
jae
mov
stc
sarb
xchg
push
stos
pop
aaa
ret
addr16
ss
pop
hlt
cld
roll
aas
outsl
sbb
stos
in
subb
scas
cmp
dec
iret
fdiv
cmpsb
mov
add
cmp
nop
push
sbb
sbb
aam
bound
adc
repnz
inc
dec
call
and
outsl
fwait
movsl
push
iret
or
iret
mov
movsl
xor
aas
adc
jns
mov
dec
insb
mov
stos
stc
into
scas
call
std
in
mov
mov
test
cmp
fs
lea
adc
push
adc
mov
pop
int3
xchg
push
mov
mov
ret
xchg
out
mov
adc
pop
jg
pop
loopne
mov
addb
mov
mov
adc
rorb
mov
xchg
sbb
inc
sub
movsb
sub
xchg
inc
lds
test
bound
rcrl
dec
dec
int3
add
ret
cs
cld
fmulp
in
std
addb
pop
rcll
mov
jns
mov
jp
sub
in
iret
cli
fidivs
mov
sbb
jb
and
inc
in
bound
pop
mov
xchg
std
rclb
js
ds
outsb
add
and
sbb
iretw
add
and
cmp
xor
jmp
out
jmp
adc
or
and
push
lds
push
lret
mov
mov
icebp
test
mov
mov
fists
insb
icebp
rcll
bound
cmpsb
std
and
push
negb
aas
push
cld
rcrb
add
push
pmullw
xor
xchg
or
fimuls
sbb
mov
jg
movsb
push
and
daa
pop
aad
pop
sysret
fcmovnu
icebp
jle
xchg
mov
jno
fwait
rorl
inc
cmp
adc
inc
dec
aas
inc
adc
or
outsb
cmc
sbb
push
mov
aaa
sbb
pushf
push
mov
sbb
push
in
icebp
push
mov
mov
incb
std
jecxz
adc
push
stos
lcall
enter
dec
or
leave
je
pushl
mov
aam
push
dec
pop
test
cwtl
xor
pop
inc
push
sahf
sbb
fs
out
enter
jnp
push
push
jae
rcrb
mov
test
div
xchg
push
push
jo
movsb
cmovl
scas
cmp
out
sub
sahf
cs
inc
xchg
xchg
movsb
xor
xchg
sub
sbb
dec
movsb
mov
cmp
or
mov
sub
movsb
repnz
adc
mov
cmpsb
push
mov
lret
push
icebp
iret
out
dec
jae
cmp
mov
ret
daa
es
mov
mov
push
imul
int3
xor
pushf
gs
adc
or
adc
ficoml
mov
cmp
sub
pushf
jno
jne
fwait
mov
jmp
mov
movsl
cmp
lods
sbb
add
ljmp
loope
lock
test
subb
lock
xchg
xor
repz
or
add
sti
or
jecxz
sarb
scas
push
cmp
jo
lahf
clc
lock
pop
mov
enter
push
stos
lret
lods
cltd
jne
es
movsb
sahf
int
xor
jp
scas
cmp
cltd
stos
or
and
cmp
pushf
jl
cmp
mov
inc
fldl
mov
sbb
mov
mov
fsubs
lret
les
stc
mov
jge
cmp
jne
into
pushf
xchg
xchg
cmp
mov
pop
arpl
push
ror
paddd
jno
add
mov
sub
in
dec
loopne
decb
ficompl
bnd
mov
mov
mov
cmpsb
cld
jmp
pop
cld
mov
sbb
jae
jle
ret
cmc
bound
inc
out
call
cli
mov
jg
jmp
dec
mov
out
adc
xchg
rorl
scas
scas
sbb
lock
or
mov
and
jmp
adc
and
jl
in
inc
cli
mov
aas
bound
xlat
out
outsl
push
sahf
mov
loopne
xor
int
pop
hlt
sbbl
movsb
jnp
push
rol
cmp
dec
rcrl
mov
pop
notl
pop
xchg
mov
shl
cld
inc
cmp
incb
push
jp
pop
jl
jecxz
je
sub
lds
sbb
jo
mov
jle
inc
mov
leave
inc
insl
pop
orb
addr16
les
ret
xchg
scas
nop
pop
xchg
jae
dec
fdivs
in
call
aaa
mov
data16
call
ret
mov
xor
sbb
cwtl
pop
cltd
rcrb
ret
push
pop
orl
cmp
ds
fisttps
mov
stos
sti
adc
sbbb
sub
jno
inc
push
adc
out
or
loop
cmp
cmpsb
xor
out
sub
mov
push
out
sahf
pop
mov
or
cmp
jnp
mov
dec
cmp
imul
push
in
xchg
in
rcrl
mov
xchg
xor
add
mov
or
jnp
xor
scas
and
pop
or
push
sahf
loopne
shlb
and
adc
or
testl
cltd
fnsave
dec
inc
out
fisubl
in
imul
test
out
fstpt
inc
test
shrb
xchg
xlat
stc
mov
fnstenv
dec
dec
lret
xchg
faddl
jnp
or
rcrb
sub
gs
fcomps
mov
jbe,pt
dec
dec
xor
adc
sub
fwait
aam
fstpt
mov
jno
add
push
or
xchg
or
or
cmp
test
mov
fidivrl
xor
scas
in
fisubs
and
jo
outsl
jns
xor
nop
xchg
mov
adc
fisttpll
push
imul
adc
push
dec
cmp
cmpb
cmp
jmp
pop
push
faddl
mov
add
inc
hlt
or
mov
jmp
push
mov
mov
xchg
add
dec
rcll
movsl
xchg
push
iret
add
lds
clc
dec
adc
sbb
jg
loop
ficompl
inc
xchg
pop
outsb
out
adc
rorb
push
or
mov
shll
rorb
fisubl
sub
push
add
push
fistl
imul
dec
sub
jmp
gs
xchg
adc
data16
inc
xchg
les
push
inc
cmp
enter
xchg
xchg
mov
mov
inc
and
lock
popf
bound
xorl
stos
imul
mov
push
fwait
xchg
bound
pop
test
mov
jl
xchg
inc
in
push
xor
add
mov
push
jae
aaa
push
fs
in
jno
enter
cmp
cmp
ret
enter
and
xchg
lcall
mov
cmp
xor
aad
nop
cmpsl
pop
sbb
pop
movb
clc
aaa
pop
cmc
mov
int3
jne
sub
stos
mov
int3
xchg
pop
and
mov
sub
icebp
lret
inc
shll
out
aaa
push
orl
push
and
dec
sub
scas
mov
push
cmpsb
in
nop
add
in
xor
sbb
cmp
inc
or
mov
add
xchg
lds
or
push
imul
js
jmp
pop
rcll
in
lods
and
inc
cmp
sbb
pusha
stc
push
xchg
sbb
dec
dec
xchg
mov
xchg
jg
mov
xchg
jmp
push
push
cmp
jo
cmp
adc
iret
mov
mov
jne
cld
mov
scas
mov
sub
stc
mov
inc
test
pop
test
and
dec
rol
iret
pop
loope
cld
aad
add
int
lahf
imul
ss
stos
jno
stc
mov
xor
sti
rol
stos
std
je
pushf
mov
stc
mov
mov
cmp
ljmp
lods
fcoml
orl
push
xchg
and
ret
loop
loop
fldenv
mov
sub
int
jl
in
adc
ficoms
adc
cs
add
pop
aad
sti
cmp
nop
mov
ficoml
pop
xor
andb
lds
out
jo
dec
jne
push
dec
jns
mov
nop
pop
mov
push
inc
xor
mov
cmp
sahf
lret
jg
fs
push
push
jmp
pslld
icebp
pop
xchg
lsl
imul
cmpsb
imul
xor
enter
jbe
xchg
loopne
pop
shrb
jo,pn
dec
mov
xchg
push
jne
and
bound
cld
gs
inc
fimull
inc
mov
mov
mov
mov
mov
iret
pop
mov
int3
lea
push
dec
sti
imul
test
and
nop
subb
test
inc
dec
cld
rolb
sub
jbe
sub
movsb
pusha
mov
sub
or
cmp
addr16
mov
movsb
decl
int
dec
stos
inc
mull
ljmp
ret
jmp
insb
sub
cmpb
inc
push
loopne
cmp
adc
loop
iret
inc
jecxz
loop
cmp
sbb
pop
jle
cmp
mov
lea
sbb
fisubs
bound
adc
cmpsb
add
loop
in
scas
rorl
xchg
iret
clc
addl
shlb
mov
xchg
inc
or
lock
jl
add
xchg
loopne
or
pop
lea
push
pop
rcrb
das
mov
push
push
lcall
pop
loop
push
mov
add
or
inc
jbe
cld
inc
out
mov
iret
stos
lret
out
lret
jmp
push
lret
jo
call
mov
add
xor
gs
ss
sub
lock
call
dec
sub
out
and
inc
xchg
rorl
jno
stos
dec
ja
push
push
mov
lods
xchg
lds
test
xchg
faddl
faddl
fs
hlt
cld
inc
xor
pushf
push
flds
push
fbld
inc
cmpsb
outsl
pop
sbb
xchg
xlat
sub
xlat
mov
bound
xor
out
pop
rcrb
sbb
push
add
xor
mov
and
and
cmp
pop
sub
push
ret
cs
scas
or
cmpsb
dec
fldt
jmp
xlat
enter
push
test
inc
xor
dec
dec
mov
cmc
movsb
pop
test
add
or
xlat
dec
iret
fwait
sub
in
imul
cmc
inc
nop
pop
stos
test
and
mov
mov
and
mov
sbb
xchg
fdivrs
out
push
mov
repnz
inc
insb
mov
fbstp
push
inc
pusha
movb
out
xor
jmp
je
sti
repnz
js
sbb
int3
jo
fcompl
movsb
push
cwtl
divl
cld
hlt
inc
pushf
xchg
outsl
sub
movsl
test
std
in
jns
cld
pop
inc
mov
or
and
sub
fcompl
testl
outsb
xor
jmp
and
push
iret
dec
shll
adc
ss
stos
in
jns
lret
lock
in
sub
ljmp
inc
fadd
add
sub
sbb
pop
or
fmulp
int3
mov
bound
ss
mov
enter
mov
test
bound
and
pop
adc
lock
and
pop
pop
out
int3
imul
iret
dec
jae
pop
and
out
notb
in
and
sub
pop
mov
pop
shlb
fcomp
dec
shlb
fsubrp
divb
xor
out
push
mov
das
test
inc
stos
enter
dec
call
lock
bound
test
mov
test
pop
rol
mov
mov
stos
bound
cmp
xlat
ja
daa
jmp
pop
add
in
cld
xor
aas
add
sub
in
push
lock
loopne
inc
dec
xchg
cmpsl
stos
pop
adc
pop
push
cwtl
fs
xchg
sbbl
fsubl
int3
aas
psubsw
or
pop
cmp
push
loopne
mov
and
xor
pop
xor
sbb
cmp
xchg
das
push
rclb
sti
outsl
addr16
add
add
push
xchg
mov
add
xor
fcoml
addb
in
ja
sti
movsb
inc
or
cwtl
jmp
ds
jl
inc
insb
push
sub
xchg
add
ds
jb
ja
frstpm(287
pop
mov
ja
sub
cmpsl
cmp
jl
xchg
push
aaa
sahf
pop
das
mov
adc
into
sub
mov
fistl
gs
popa
shlb
rolb
leave
imul
repnz
pop
js
cmpsl
dec
scas
mov
add
xchg
pop
shlb
in
sti
outsb
pop
stc
cmpsb
dec
into
cltd
xorl
rorb
cmp
push
das
push
test
jnp
mov
add
call
and
inc
jmp
xor
xor
dec
repz
out
push
popf
idiv
ret
gs
jmp
and
pop
inc
jne
sub
mov
pop
andl
jnp
xor
test
sarl
mov
jp
test
addr16
pop
add
or
jg
bsf
mov
pop
cmp
int3
dec
and
cmp
sahf
or
and
sbb
jmp
lcall
and
mov
js
add
mov
mov
sahf
push
adc
test
fsubs
mov
addb
cmp
repnz
sbb
push
mov
mov
cmpsl
js
mov
sahf
fwait
jmp
idivb
insl
jns
cmp
ss
cmpsb
push
call
dec
lea
rcrl
addr16
repz
dec
inc
fldl
in
loope
xor
push
and
bound
jmp
fs
xor
sub
gs
cmp
adc
call
fistpl
outsb
jno
fwait
leave
mov
sub
test
push
adc
clc
fisttpll
inc
dec
and
inc
jmp
add
outsb
adcl
and
xlat
push
jmp
inc
sub
imul
sub
adc
sbb
inc
and
lds
iret
pop
cmp
leave
fmul
bound
mov
stc
addr16
insb
fcoms
out
push
addr16
xchg
add
and
mov
push
jo
sbb
pop
ret
pop
cmp
pop
xor
push
js
loopew
dec
test
push
jno
or
mov
push
js
call
xor
enter
fstpt
cmpl
lods
dec
ret
bound
fwait
je
call
sbb
and
xchg
std
adc
rcrl
or
pcmpgtd
push
fimull
and
jmp
popa
push
lret
push
popf
insb
xor
mov
sarb
pop
pusha
cli
sub
dec
push
xchg
xchg
ret
sub
mov
ret
sub
repz
inc
jge
xor
xor
bound
xchg
adc
mov
add
shlb
mov
push
js
lret
push
adc
roll
mov
loopne
lock
mov
mov
sub
popf
scas
shl
and
sub
shlb
jl
stc
xchg
rcrb
pop
mov
sbb
jns
push
call
sti
mov
or
or
fcomps
pop
or
push
bound
fidivrl
les
cmp
dec
push
jle
out
pop
rorb
mov
stos
push
shll
lods
mov
adc
shl
daa
lcall
push
and
stos
out
test
mov
pushf
aad
pop
push
xchg
incb
xchg
ret
jo
mov
push
jmp
dec
cmc
fs
dec
pop
data16
scas
add
fxch
push
inc
call
subl
jl
xlat
mov
fsubrs
leave
hlt
insb
jmp
test
pop
xlat
sub
nop
sti
fsubrp
jmp
add
test
call
mov
mov
aaa
lgs
cmp
cmp
xor
mov
inc
mov
pop
call
leave
push
fstl
nop
and
push
sahf
pop
lds
je
iret
push
outsb
xor
jmp
arpl
jp
fcomip
ljmp
dec
movsb
push
or
cmp
add
shr
btc
jl
inc
fucomi
in
pop
or
mov
imul
cmpsb
xchg
int3
cmp
repz
inc
mov
mov
push
inc
cmp
into
push
movsl
stos
adcb
in
push
daa
jg
pop
push
fs
jmp
addb
push
negl
das
lods
insl
adc
and
mov
out
xchg
ja
notl
lret
mov
or
paddb
mov
pushf
dec
mov
loopne
bound
sbb
fst
sti
call
xorl
arpl
cmp
adc
push
out
xlat
adcl
ficoml
in
pop
js
xchg
mov
add
jmp
lea
pop
sbb
fldt
iret
dec
dec
mov
add
jns
dec
bound
sahf
stos
sar
adc
adc
cmpl
sahf
cld
xchg
lods
add
inc
fsubs
mov
mov
shrd
fdivrl
mov
or
add
pop
adc
scas
jle
cmpsb
pop
xchg
or
scas
fsubrp
inc
or
fcoms
shlb
and
adc
push
gs
das
mov
rcrl
inc
dec
dec
fstpl
out
negb
mov
jp
sub
or
cltd
lods
jmp
psubw
aad
lods
loop
push
aas
xchg
mov
aad
addr16
xchg
arpl
out
mov
lock
dec
mov
out
sahf
mov
jae
in
pop
mov
out
in
push
mov
ret
xchg
enter
push
ret
push
testb
testb
mov
or
repnz
aas
jmp
mov
jmp
sti
shlb
cmp
pop
and
rclb
imul
pop
add
insb
loop
ret
ret
lret
outsl
outsb
popa
xlat
jne
xchg
mov
sbb
addr16
loopne
call
scas
ljmp
aam
sbb
sub
fucomi
mov
jb
add
loopne
aaa
stos
int
dec
cmp
xorb
mov
xor
xor
jl
inc
mov
mov
les
repnz
loope
push
push
xchg
push
test
iret
ss
nop
or
add
jg
jmp
sbb
push
pushf
movb
add
cld
inc
fs
lods
push
adc
addl
add
inc
inc
dec
push
inc
aas
dec
or
lods
fildl
test
movsb
cmovo
movsl
sub
pop
adc
test
sbb
jbe
and
push
rcr
stc
sub
or
sbb
sub
clc
sub
aaa
and
push
and
xorl
dec
cmp
shrl
movsb
out
pop
in
xor
mov
fwait
out
or
xchg
lock
mov
add
enter
imul
mov
ljmp
pop
icebp
aam
icebp
mov
divb
scas
adc
adc
testl
adc
in
inc
fisubrl
decl
xchg
stos
jns
xor
cmp
pop
lret
xor
outsl
jmp
jae
lcall
ss
arpl
movsb
shlb
popf
lds
fldcw
shlb
push
neg
jns
add
arpl
ds
pop
div
mov
dec
nop
sbb
sub
pusha
sbb
mov
jmp
push
fldcw
enter
xchg
mov
dec
inc
pop
das
push
rclb
cmc
nop
ret
sbb
popa
adc
out
sti
ficomps
fsubl
cmc
xor
js
adc
cmp
sbb
bound
mov
fstps
or
jge
pop
nop
pop
sub
mov
outsl
dec
push
loop
movsb
dec
xchg
nop
leave
stos
push
cmp
cmc
xchg
pop
loopne
cs
gs
jecxz
jmp
jle
sub
pop
loope
cmp
xor
jmp
bound
mov
or
jmp
cs
inc
scas
aad
mov
push
jnp
jp
fwait
loopne
pop
sahf
jmp
imul
sub
cmc
aaa
ret
ss
pop
stos
adc
jmp
push
fdivr
aas
xchg
push
mov
cmpsl
or
pop
addl
loopne
test
add
mov
push
adc
hlt
xchg
jo
test
andl
mov
sub
pop
sbb
sbb
mov
leave
adc
dec
in
xor
mov
enter
test
push
add
sahf
push
frstor
aad
call
adc
in
popa
ret
pop
int
or
jg
test
sti
push
mov
std
leave
filds
rolb
xor
stos
jmp
pop
push
or
or
sub
mov
cmp
pop
test
sub
jle
jns
lods
shrb
out
nop
inc
cwtl
mov
imul
jno
scas
mov
sub
dec
push
xchg
or
inc
call
adc
cltd
pop
mov
dec
mov
incb
cs
test
cmpsl
aaa
pop
cld
or
nop
push
sub
fistpll
jecxz
iret
push
mov
pop
in
or
or
mov
mov
insl
pusha
jle
or
cmp
mov
xor
lods
sahf
inc
or
dec
mov
daa
inc
fwait
mov
mov
pop
out
xorw
xchg
adcl
enter
push
popf
adc
jno
into
and
and
lds
adc
push
xor
nop
push
mov
xchg
cld
push
sbb
or
iret
addr16
js
pop
fstl
pop
mov
adcl
inc
aaa
lret
cmp
and
rolb
jae
xor
sub
or
xchg
pop
push
push
in
sbb
push
dec
xor
or
and
outsl
ja
inc
cwtl
bound
jl
out
mov
and
std
int3
add
push
out
lret
inc
or
jmp
mov
add
pop
or
jg
xchg
lods
pop
cmpsl
xchg
movsb
out
dec
add
sbb
xor
ret
mov
pop
int
adc
pop
repz
lret
sub
pop
in
mov
inc
lods
jg
push
and
jg
bound
push
imul
sti
leave
mov
ljmp
push
das
sub
and
gs
sahf
lock
adc
dec
dec
into
out
push
fcoml
cmp
outsl
mov
testb
popl
pop
gs
mov
or
dec
int
std
mov
insb
fsubrs
lods
aaa
cmp
xchg
pop
xor
insl
add
xor
ja
gs
fmuls
push
call
xlat
mov
push
iret
in
xor
sub
jp
sbb
inc
cltd
mov
dec
ret
popa
fists
mov
arpl
mov
sarb
cwtl
scas
lock
mulb
jle
stos
cmp
out
sahf
lret
jbe
jne
dec
stos
add
out
xor
pmuludq
xor
fsubs
popa
xor
mov
jle
pop
stos
mov
hlt
jmp
stos
dec
mov
push
js
jp
out
call
jbe
dec
push
stos
enter
cmp
push
sti
and
lock
mov
dec
fdivr
add
fdivr
sti
xchg
jecxz
push
cmp
mov
and
push
fwait
jmp
mov
and
xchg
rcr
push
lds
mov
pop
or
lret
jmp
ret
mov
jne
shrb
mov
or
sti
xchg
scas
test
mov
inc
adc
push
fisttps
push
inc
popa
lds
orl
dec
xchg
pushf
lret
jne
jle
cwtl
insl
rcrb
and
sbb
sbb
call
test
fsubl
loop
xchg
or
je
aam
imul
repnz
mov
push
pop
lods
mov
shr
dec
xlat
mov
sbb
outsl
mov
ss
add
lret
dec
add
add
inc
jmp
xlat
or
and
mov
into
jle
mov
fisttps
fiadds
sbb
pop
mov
pop
inc
out
cmp
mov
frstor
pushl
fldenv
dec
jmp
cli
jno
xchg
xchg
jecxz
sahf
jb
leave
cs
inc
and
or
adc
jmp
sub
push
sub
xor
mov
dec
outsl
add
lods
push
popl
sbb
sarb
out
jmp
ret
push
imul
sub
cmp
negb
jl
cs
dec
jne
xor
pusha
dec
push
pop
jb
jbe
mov
ret
push
mov
cmp
std
add
call
int3
lret
xchg
jmp
ljmp
pop
mov
jl
and
mov
pop
loop
rep
mov
in
xchg
push
daa
push
movsb
in
mov
mov
xor
fimuls
cmp
inc
push
icebp
push
ret
cld
inc
lods
pop
jno
inc
push
add
push
test
dec
pop
popf
js
shll
push
movsl
xchg
xor
imul
inc
mov
lret
add
dec
test
jno
jmp
enter
test
xor
jmp
bound
xchg
and
ja
pop
nop
shll
sub
adc
pop
icebp
and
or
sbb
rcr
sub
fwait
call
lret
xchg
inc
shr
xchg
ret
outsb
xor
roll
pop
jle
push
pusha
mov
ljmp
jle
shll
jle
imul
les
push
fwait
add
js
outsb
inc
in
addr16
mov
push
add
fsubrs
loop
push
jbe
jnp
pop
mov
je
and
fcoml
mov
iret
daa
cmc
xor
add
shll
cmp
sbb
repnz
jnp
jnp
movsb
mov
xor
fadd
inc
jg
xor
jno
mov
pop
add
pop
jp
or
push
push
mov
push
and
cwtl
test
test
sbb
cmpsb
add
dec
mov
fnstsw
mov
scas
or
jno
arpl
into
or
out
rcl
jl
lret
lret
lods
xor
push
ja
decb
loope
sbb
ret
or
cwtl
jns
pop
pop
cmpsl
push
pop
sbb
mov
sti
stos
or
and
push
fwait
inc
outsb
adc
cmp
xchg
adcb
pushf
inc
cmp
loopne
and
sub
and
insb
mov
dec
adc
aad
sub
js
int3
xor
shrl
aas
push
inc
mov
or
push
lods
sbb
lds
pop
mov
pop
jns
mov
gs
xchg
and
xchg
out
xor
rclb
scas
loope
push
out
xchg
and
or
sbbl
das
bound
cmp
cltd
mov
dec
sub
lods
cmp
add
ss
mov
dec
lcall
mov
mov
add
in
pop
out
push
decl
repnz
insb
and
sahf
mov
cmp
xor
pop
jp
jmp
adc
sub
xlat
push
imull
inc
pop
mov
xchg
bound
dec
xor
inc
and
hlt
and
inc
lret
push
sbb
ljmp
xchg
cmc
cmpsb
imul
in
call
mov
aam
push
pusha
xrelease
push
lret
insl
pop
inc
xor
push
lahf
xchg
fmull
mov
ljmp
mov
call
sub
xchg
sbb
ret
or
mov
xor
or
jns
cmc
pop
repz
int
in
push
mov
pop
cmp
repz
xor
out
adc
roll
popa
out
inc
insl
xor
mov
loop
dec
mov
imul
push
sub
cli
les
ja
cmp
adc
mov
mov
aam
test
shl
gs
subb
add
jb
sahf
lret
xchg
loop
int3
lods
loope
push
das
or
mov
lcall
mov
cld
ret
fcmove
outsb
sti
mov
inc
push
lods
jmp
gs
bound
in
inc
adc
rorb
ljmp
loope
push
inc
fisttpl
sbb
or
ja
int3
ret
jle
push
outsb
mov
mov
push
adc
push
xor
xor
int
mov
jmp
mov
ret
push
xbegin
jle
cmc
aas
into
neg
test
scas
loope
dec
mov
lahf
nop
xchg
test
mov
ljmp
mov
pop
out
or
sub
rcl
loope
xor
add
jle
xor
mov
adc
shll
push
pop
iret
rolb
loopne
mov
mov
fsubs
in
xor
and
pusha
jle
mov
clc
mov
out
add
cmp
fwait
xlat
inc
ds
mov
mov
mov
aam
std
xchg
fadds
cmp
dec
into
xchg
push
nop
and
or
or
scas
sbb
push
outsb
jnp
jae
inc
lods
call
pop
mov
or
push
insb
popa
sbb
push
scas
inc
stc
aas
aad
jb
ss
jmp
lock
add
das
bound
push
mov
cmp
sbb
lret
std
bound
push
inc
or
bound
cmp
mov
push
mov
sub
lcall
aam
cmp
xchg
lods
xor
cmp
testb
push
and
and
pop
cmp
xor
mov
or
jmp
bound
ja
mov
xor
mov
call
sbb
and
stc
pop
sbb
ja
aad
pusha
xchg
mov
sahf
call
ljmp
pop
jmp
outsb
adc
loop
mov
sub
jle
mov
sub
scas
inc
into
push
js
pop
xor
lds
xchg
push
call
cld
or
jns
daa
test
push
loope
andnps
aad
outsb
addr16
pusha
mov
add
and
cmpsb
fidivs
dec
fisubs
sbb
std
mov
in
mov
push
clc
repnz
pop
sub
pusha
sub
cmp
cmp
imul
mov
push
sti
sbb
mov
in
xchg
stc
addb
aam
xchg
jo
xchg
incb
loop
vandnps
lcall
gs
jne
pop
dec
add
mov
in
mov
insl
sbb
or
add
imull
and
cmp
mov
notb
mov
subl
ja
cmc
adc
xchg
cltd
push
scas
and
dec
sahf
add
xor
bound
fwait
or
les
outsb
sbb
cld
imull
pop
lret
push
add
fisubrl
push
fimull
lods
leave
sbb
mov
sti
jno
add
ss
lret
bound
and
dec
mov
in
mov
outsb
jmp
push
add
fucomip
xlat
stos
mov
leave
and
incb
mov
jg
lea
loop
push
add
cs
xchg
das
jne
dec
std
test
sub
fwait
cmp
daa
aam
shll
jae
fsubrl
ds
fs
in
outsb
push
xchg
popf
or
lret
enter
xchg
daa
out
adc
outsb
les
and
pop
dec
inc
jnp
xor
sub
push
bound
mov
popf
cld
push
mov
sub
dec
xchg
inc
add
mov
stc
xchg
dec
mov
inc
push
lods
insl
pop
in
push
mov
cwtl
pop
mov
icebp
fadd
scas
inc
or
lods
mov
out
mov
jb
leave
test
mov
cmp
jmp
sti
js
push
mov
loopne
rorl
cs
jg
ret
add
enter
xchg
stc
lcall
add
pop
in
sub
bound
out
mov
dec
gs
je
leave
jl
mov
arpl
in
insb
sbb
inc
fistpll
call
inc
int
adc
insb
ja
lds
test
dec
inc
push
sbb
xchg
push
imul
fs
in
xchg
push
xchg
jle
test
sub
rorb
and
sbb
popa
in
xor
stos
xor
cs
cmpsl
push
std
dec
sbb
in
mov
fs
cmp
call
push
add
mov
loope
enter
or
push
dec
in
xlat
fisttpl
fistpl
sbb
push
xor
movsl
call
and
inc
xor
cmpl
sar
fidivs
int
lahf
hlt
jl
inc
in
pushf
adc
cs
inc
push
dec
push
in
jbe
mov
or
out
wbinvd
rorl
cmpsb
mov
testb
popa
aaa
xor
rcrb
push
js
xor
inc
into
leave
sub
push
sahf
xor
xchg
or
popa
lahf
jle
shl
icebp
push
pushf
in
push
dec
rclb
adc
loope
call
lock
push
es
jne
sub
rorl
xchg
ljmp
sahf
xchg
inc
push
cwtl
stc
push
shr
lea
cmp
mov
sbb
popa
and
stos
push
ss
lahf
cmp
mov
lret
orl
dec
xor
push
xchg
sub
clc
add
in
mov
or
cli
es
lcall
mov
insl
dec
jns
sub
fmul
add
aad
and
aam
ljmp
xor
jnp
outsb
adc
sub
stos
jbe
aas
push
neg
dec
ja
xor
push
adc
aaa
xor
fcomps
mov
pop
icebp
pop
and
aas
fsub
or
dec
jb
mov
push
aaa
inc
cltd
movsb
loope
out
int3
sub
shll
cltd
pop
lahf
xchg
test
inc
in
lock
lea
push
mov
or
inc
shlb
ret
add
sub
sahf
sbb
dec
bound
sbb
push
push
cmp
add
adc
pop
dec
repnz
cmp
nop
dec
lret
jbe
stc
mov
sbb
mulb
shlb
push
push
insb
dec
or
movsb
add
cmp
testl
xor
lcall
add
or
icebp
cmpsb
xchg
jmp
movsb
xor
bound
mov
pop
xor
push
mov
lcall
pop
stos
gs
iret
fisubs
cmp
jnp
inc
push
in
test
lret
je
adcl
dec
fisubl
gs
push
cltd
fldl
stc
bound
adc
xchg
pop
popa
cmpsl
shlb
bound
xchg
add
sub
xor
dec
loop
sbbl
movsl
in
dec
jle
sbb
pop
fnstsw
daa
neg
push
aad
cmp
fsubl
sub
dec
jle
mov
dec
inc
fnstsw
pusha
test
jp
aaa
arpl
xor
cmp
xchg
and
jmp
xor
stos
rcrb
gs
mov
data16
and
call
lock
inc
xchg
in
outsb
inc
push
cld
ficoml
xor
push
sub
lods
or
pop
mov
leave
in
test
stos
loop
js
arpl
mov
into
vcvtps2pd
inc
sub
xor
jg
push
lret
icebp
push
pusha
dec
mov
xlat
rcr
pop
cmc
jae
dec
mov
add
xchg
lret
int
out
int3
incb
scas
push
mov
sub
std
pop
bound
lcall
jb
sti
mov
dec
cmc
push
cltd
jne
sbb
subb
inc
add
sarb
std
cmp
adc
adc
rol
mov
add
cli
stos
adc
jns
test
xor
cmpsl
test
jp
icebp
rcrl
call
enter
pcmpgtd
js
sub
or
arpl
addb
fs
jne
jae
outsl
xchg
imul
fnstenv
jl
cwtl
fsubrl
or
ljmp
jecxz
sbb
cmp
and
iret
mov
int
jl
mov
lret
jae
mov
mul
add
in
rcrb
addr16
xlat
adc
jns
pop
mov
aam
xor
pop
cmp
add
dec
and
fwait
inc
outsl
cltd
pop
mov
sbb
movlps
sub
jle
or
ds
ja
lret
iret
pop
lahf
inc
fs
push
sub
sub
add
out
sbb
jnp
loope
fwait
mov
cs
cs
adc
je
stos
sub
iret
dec
mov
loope
push
out
mov
dec
shlb
bound
popl
adc
aam
roll
aam
das
fidivrs
stos
mov
mov
push
sbb
in
jg
push
jge
sbb
inc
xor
mov
adc
test
aaa
cmp
jb
adc
mov
mov
bnd
and
cmc
lods
push
in
lock
in
imul
in
in
mov
aad
mov
lret
lret
xor
inc
cmpsb
or
mov
push
leave
sub
jnp
repnz
movsl
aaa
out
movsb
and
sub
pushf
lods
dec
xchg
sub
aad
int3
aam
inc
sbb
test
dec
mov
pusha
mov
shll
test
pop
pop
xchg
mov
into
daa
inc
out
xor
cmp
fistpl
xchg
call
adcl
test
adc
adcb
inc
adc
sub
lds
xchg
push
scas
push
sbb
cltd
lock
sti
inc
mov
xchg
fyl2xp1
mov
mov
in
pusha
mov
cmp
js
push
adc
xor
fs
ljmp
loopne
insb
xchg
repz
cmp
dec
ss
xor
fisttps
sbb
mov
repnz
mov
adc
ret
push
jb
fisubs
or
or
pusha
repz
mov
jecxz
and
pushf
pop
hlt
xor
sub
adc
fcomip
clc
xor
xchg
sub
rcll
call
call
jmp
jnp
xor
pop
or
inc
loope
aad
xor
push
ds
mov
sub
xchg
enter
arpl
testb
xchg
aad
in
mov
stc
push
and
sub
lock
cmp
dec
sbb
fidivl
sti
mov
mov
mov
stc
test
loope
or
into
mov
scas
inc
inc
shlb
clc
cmpsl
loope
cli
ja
push
mov
loop
sub
ret
inc
in
test
pusha
xor
push
push
lea
rcll
loop
ja
rclb
xlat
or
in
outsl
push
jns
and
lret
sbb
push
mov
repnz
pop
pushf
in
daa
inc
cmp
push
mov
stc
out
mulb
lods
push
je
rcr
fisubrs
js
push
outsl
pop
cmc
and
hlt
xchg
out
filds
clc
sti
push
mov
out
cwtl
cmp
and
push
inc
cmp
sbb
jmp
xor
fisttps
in
jmp
icebp
xor
push
push
sub
idivl
js
loope
xor
xor
popa
add
or
pop
call
mov
js
jb
adc
in
xchg
loope
add
movsw
shl
rcl
xchg
mov
and
shl
cli
mov
and
xor
push
js
stos
or
out
in
and
clc
push
std
push
test
adc
stos
out
pop
cmp
pop
mov
enter
and
mov
sbb
sub
jo
lahf
les
jmp
dec
mov
lods
jge
fstp
pop
imul
mov
and
hlt
jbe
fsubrs
cwtl
dec
push
stos
pusha
cmp
js
enter
outsl
in
mov
push
mov
push
cmpsl
icebp
xor
cmp
iret
or
and
jmp
cmp
into
mov
inc
sahf
mov
sbb
push
mov
into
stos
loope
movsl
sub
icebp
xor
add
adc
lods
jb
push
cmc
int
arpl
rcrl
loopne
inc
jae
movsl
xor
repz
sbb
or
out
mov
fdivs
add
fadd
mov
add
pop
jns
out
jp
out
cmp
clc
nop
xchg
icebp
xor
ret
mov
in
scas
sub
pop
in
inc
test
cmp
scas
mov
lock
push
lods
mov
in
repz
xor
dec
test
rcrl
inc
icebp
stc
sbb
divb
push
xchg
rcrl
mov
lods
add
jmp
sub
arpl
clc
lods
je
mov
bound
mov
sahf
cltd
xorb
dec
or
push
mov
jb
js
negl
in
mov
das
sub
je
cmp
dec
inc
mov
mov
call
insb
mull
mov
addr16
pushw
enter
insb
jmp
es
sub
out
inc
or
sub
pop
mov
lods
sti
push
mov
pusha
outsl
and
sbb
imul
pushf
int3
pop
xor
jb
xor
call
lret
mov
jmp
lods
popa
cmp
add
inc
cwtl
fs
or
push
loopne
imul
dec
icebp
cmp
out
js
dec
fmulp
jno
aam
mov
imul
fisttps
and
mov
js
lds
sbb
popa
call
sub
in
xor
xor
sub
mov
clc
imul
fimull
sbb
sbb
imul
lds
test
push
loope
nop
adc
lods
fnstcw
stos
adc
out
imul
sbb
and
or
and
or
out
enter
movl
outsb
clc
stc
mov
in
fsubs
push
jo
mov
pusha
push
test
enter
repz
test
cs
adc
sbb
xchg
mov
add
jge
loop
jae
fnstenv
or
loope
jg
in
jno
shrl
lret
xor
jmp
or
fs
repz
stc
push
addr16
nop
sbbb
loopne
scas
add
mov
cmpsl
jno
sub
lods
sub
div
mov
and
je
fidivl
jp
add
fiadds
shlb
cmpsl
mov
frstor
icebp
jmp
or
or
loope
mov
push
jmp
push
pop
imul
push
cli
ja
add
sub
or
sbb
aam
stc
repnz
push
jmp
push
call
pop
or
fsub
sbb
ret
in
cmp
loope
ret
jno
and
mov
lock
push
movsl
scas
and
xor
dec
lods
sbbl
xchg
mov
sbb
out
mov
cld
fcoml
xor
fsubr
scas
add
sub
daa
and
icebp
cmc
and
push
mov
add
cmc
xchg
data16
cmp
pop
les
imul
mov
xchg
push
outsl
push
push
add
and
jns
cmp
cmp
in
imul
aam
movsl
push
dec
dec
out
imul
jmp
xor
cmpsl
push
mov
mov
mov
ss
mov
and
adc
loope
repz
int3
dec
jmp
aas
das
cld
clc
and
or
pusha
adc
mov
jmp
lods
push
iret
pop
out
shr
cmp
mov
das
adc
lods
mov
push
cmpsb
test
orb
lods
inc
lea
xor
ss
stc
or
mov
push
mov
cmp
lods
dec
pop
mov
outsb
adc
mov
and
out
out
add
in
outsb
push
add
xchg
mov
inc
sbb
fistps
and
pop
icebp
aaa
cld
into
mov
and
cli
insl
xor
fildll
adc
sti
add
mov
xor
adc
in
hlt
in
in
call
jo
gs
in
cmovns
mov
movsl
filds
js
jo
mov
daa
ret
mov
scas
int
scas
lahf
pop
mov
lret
in
jmp
hlt
dec
lods
je
mov
and
xchg
shrb
sti
aad
mov
mov
mov
mov
test
out
pop
mov
xor
mov
jl
in
or
push
and
rorb
fidivl
jmp
sub
loopne
in
enter
lock
lods
lods
loope
fsts
xor
sub
xchg
sub
add
ds
push
dec
jp
repz
loopne
lret
out
pusha
add
cmp
imul
or
push
clc
cmp
inc
xor
hlt
sub
sbb
lock
stos
in
in
outsb
lods
sbb
out
mov
xchg
jecxz
sub
cli
js
out
clc
sti
cwtl
lock
sub
mov
sbb
out
jle
push
lret
jns,pt
mov
es
cmp
in
das
sbb
lods
xchg
jmp
mov
pop
icebp
mov
lret
cld
xlat
rcrb
jle
movb
test
js
loopne
imulb
or
add
xor
mov
jp
fsubl
sbb
in
call
icebp
addr16
imul
js
mov
in
sub
dec
stos
push
nop
cmpsl
jmp
fistps
nop
icebp
cmp
je
insb
stc
sbb
ret
mov
stos
mov
lret
pop
sub
js
ficoms
aas
fists
clc
sbb
jp
inc
lods
pop
out
mov
jmp
loope
popa
xchg
xor
cmpsl
daa
lods
out
jne
inc
loop
js
test
idivl
stc
mov
mov
mov
adc
and
clc
jecxz
sti
js
push
in
mov
fcomp
and
xor
ss
shrl
jae
jl
daa
arpl
fsubrl
add
adc
insl
or
push
jns
out
ljmp
jmp
dec
inc
push
mov
enter
cmc
aam
and
cmp
push
jecxz
and
pushf
dec
bound
imul
push
cmp
ss
push
cmpsb
mov
jecxz
adc
jge
push
mov
jg
imul
sub
cs
in
mov
icebp
xor
sbb
push
test
jbe
sub
sbb
dec
addr16
cmp
daa
mov
es
addr16
int
dec
push
popa
xor
test
push
mov
pop
jmp
jp
push
imul
repz
in
push
xor
or
ja
xchg
repz
shl
add
push
push
out
loopne
cltd
enter
push
adc
add
in
mov
inc
cmp
jmp
jno
fistps
and
mov
je
lds
out
sub
jno
adc
addb
ss
jmp
dec
lahf
loope
jecxz
mov
push
aad
test
xchg
int
out
arpl
sti
fists
in
add
clc
fldcw
jge
push
fcmove
xchg
cs
in
sub
std
jbe
push
cmp
movsb
fs
or
and
ret
out
out
mov
hlt
test
rorb
pop
mov
cwtl
in
insb
mov
xor
and
xor
mov
cmp
inc
out
imull
aam
xchg
push
std
jecxz,pt
and
jmp
pop
dec
inc
jp
mov
in
and
or
mov
data16
aaa
je
push
mov
dec
inc
xchg
add
mov
ret
popl
outsb
sub
mov
sub
mov
and
sub
lds
arpl
jb
insb
sbb
pusha
pop
js
cwtl
pop
cmc
add
xor
push
jo
xchg
in
mov
ror
push
in
test
push
push
in
add
sub
scas
ss
shrb
sub
data16
les
in
stc
or
shlb
sub
test
cltd
dec
push
test
push
xchg
aam
mov
gs
cmpsb
mov
ljmp
pusha
sbb
insb
jmp
sub
pop
mov
arpl
fdivr
out
inc
enter
fbld
mov
nop
mov
call
push
push
in
pusha
cmp
enter
cli
in
push
push
inc
insl
pop
icebp
cmp
mov
jmp
insb
xor
js
push
adc
or
xchg
lock
out
and
js
lock
mov
nop
push
test
push
clc
repnz
cmc
cmp
sub
inc
pop
jp
mov
mov
cwtl
sub
das
jmp
scas
sub
inc
outsl
cmp
push
cmpl
xor
or
inc
icebp
clc
movsb
sub
leave
lahf
sub
fs
stos
and
adc
fdivp
mov
xor
pusha
sub
lea
dec
adc
and
ret
jg
iret
popf
imul
mov
sbb
lods
insb
inc
iret
jg
sahf
shlb
mov
insl
adc
adc
sti
imull
jmp
mov
mulb
stos
imul
jne
shlb
dec
mov
in
int
sbb
ja
sbb
out
jmp
sub
push
in
insb
repnz
outsb
xchg
lods
sub
clc
fbld
jl
inc
inc
je
mov
and
scas
fiadds
test
loope
mov
cld
icebp
cmp
enter
pusha
fwait
mov
sbb
mov
add
dec
fidivs
mov
fs
and
sbb
mov
outsb
ljmp
push
jmp
movsl
inc
add
mov
hlt
sub
cmp
mov
mov
and
loopne
ret
sbb
lock
xor
mov
stc
add
mov
jo
shr
dec
inc
out
movsb
fs
mov
in
sub
jnp
fisubrl
mov
mov
push
jns
push
mov
out
lods
js
outsl
xchg
outsl
adc
lods
push
xor
shlb
sbb
call
push
addl
lods
mov
stos
mov
adc
push
mov
lods
fsubrs
mov
ljmp
jmp
add
in
lods
punpckhbw
nop
movsb
add
aas
sub
test
adcb
push
lret
ficoml
adc
sub
scas
mov
nop
fs
or
call
cmp
insl
enter
lods
jecxz
push
enter
shlb
lock
aaa
sti
or
cld
mov
enter
inc
fs
push
push
lods
cwtl
push
loop
jmp
jo
add
mov
push
das
stos
loop
lods
popf
and
mov
and
mov
sbb
push
push
cmp
sub
enter
out
pusha
add
fchs
and
mov
and
out
lds
call
stos
out
jp
pushf
cli
out
call
cmpsb
repnz
out
fucompp
in
hlt
pusha
in
enter
es
cli
shlb
lock
and
int3
shlb
scas
inc
dec
call
movsl
testb
jmp
fdivrs
sbb
fmulp
jno
inc
shrb
fcompl
cmp
in
cld
rclb
fucomi
xchg
test
addr16
adc
xchg
fdivrs
bound
movsl
sub
mov
scas
imul
adc
push
incb
into
js
mov
stc
outsl
and
xchg
data16
std
outsl
movsl
push
into
rorb
adc
cmp
add
mov
cmpsb
lods
sub
dec
xor
movsl
in
test
sarl
xchg
push
or
or
out
cmpsl
arpl
mov
push
cld
ror
sti
push
mov
mov
push
sub
clc
cmp
data16
pop
add
das
cmp
out
insl
adc
jmp
and
or
shll
jno
arpl
mov
sub
aas
add
cmp
cmp
mov
xor
mov
sti
imul
mov
or
loop
hlt
das
cmc
sub
in
push
test
fcoms
arpl
lods
xchg
pop
jg
cltd
mov
daa
ljmp
adc
mov
add
xchg
jmp
adc
lods
pushf
cmpsb
decl
roll
cmc
sub
into
scas
test
add
mov
icebp
pusha
incb
sub
jmp
jno
push
sub
add
pcmpgtd
cwtl
sbb
pop
je
ja
movsb
inc
in
mov
test
xor
sbb
movsb
jmp
icebp
cmp
loope
jno
mov
repz
or
xchg
fnstcw
pop
shl
iret
jl
pusha
icebp
cld
and
cwtl
fcoml
and
clc
mov
cli
xchg
push
outsb
mov
dec
movsl
rol
insb
push
xor
add
sub
jmp
cmc
push
jg
stos
lods
fdivrs
xor
sbb
movsl
loop
iret
stc
mov
clc
jp
idivb
enter
and
outsb
push
insb
in
cmp
or
enter
ret
shr
outsb
jmp
jno
repnz
mov
lret
add
sub
enterw
outsl
shrb
or
arpl
cmpsb
adc
in
jl
daa
sbb
call
sarb
adc
fsub
jge
jnp
lds
dec
fsubl
pop
das
hlt
xlat
cmp
call
push
in
imul
in
push
movsb
scas
cmc
das
fistpll
insl
jmp
cmpsb
sub
std
cs
popf
push
call
pop
sbb
fs
jbe
popa
inc
rolb
and
jmp
mov
std
adc
movsb
adc
inc
iret
clc
scas
out
and
add
fisttps
enter
xchg
dec
shrb
push
sbb
das
imul
nop
adc
cs
or
mov
push
aaa
sbb
loop
sub
lods
call
test
and
fisubs
push
cmp
clc
xchg
ja
outsb
jno
mov
jo
in
pusha
cmp
lods
in
aam
cmp
push
fdivrs
in
stos
jo
enter
cmp
mov
push
sub
repz
push
inc
inc
jmp
cmovns
lock
cmpsl
push
std
shlb
js
loopne
fdivl
pusha
sub
sbb
mov
adc
cmp
add
lahf
rdmsr
cld
fs
mov
mov
inc
cmpsb
mov
sbb
pop
cmp
mov
cwtl
mov
adc
cmp
cmp
rcl
out
mov
jl
shrb
mov
std
insl
xor
mov
enter
jmp
add
lods
mov
shl
sti
or
in
je
mov
movsl
clc
in
and
jp
cmp
and
mov
mov
xchg
jnp
icebp
push
aad
mov
inc
ja
jb
repz
repnz
mov
lock
and
aas
pop
clc
lods
push
arpl
insl
and
arpl
dec
out
ss
movsl
loop
outsl
adc
aad
lds
roll
xor
or
in
scas
and
pop
jno
lock
lods
push
pop
and
adc
pop
insb
scas
test
push
cmpsl
jnp
cmp
shrb
loopne
dec
repz
out
sbb
pop
sub
sub
lock
pop
mov
pusha
sbb
mov
testl
adc
xchg
jbe
push
jne
inc
push
shlb
in
sub
insb
test
and
xor
and
test
loopne
out
filds
mov
test
stc
movsb
mov
idivb
xor
in
cmp
mov
xchg
gs
lahf
hlt
enter
push
inc
nop
das
repz
xorl
jno
push
dec
cmp
jge
fnsave
sahf
pop
popf
lret
js
ret
or
lar
out
in
add
inc
out
sub
sub
dec
fdivs
mov
stos
in
or
push
lock
stc
sub
repnz
jne
adc
xor
mov
pop
fstl
adc
lods
sub
cwtl
sbb
xor
xchg
or
pop
cli
jmp
repz
cmp
scas
setl
outsb
sub
sbb
out
fwait
stc
fidivl
popa
mov
loope
lods
pop
movsl
jno
dec
mov
xor
sbb
xchg
out
and
es
in
out
insl
adc
push
cmp
mov
and
mov
in
repz
push
ljmp
jo
jmp
mov
mov
out
outsl
adc
push
iret
mov
lock
mov
repnz
fisubs
movsb
and
cmp
mov
adc
test
lock
fwait
push
dec
test
sub
adc
repz
mov
cmp
pop
ror
lock
inc
dec
shl
in
ds
out
mov
daa
push
sub
mov
addr16
nop
dec
ljmp
je
js
mov
dec
or
hlt
push
fdivs
pop
add
incb
nop
sti
lret
add
pop
fidivrl
pop
jno
xchg
js
jo
sbb
iret
iret
sub
mov
ret
adc
mov
add
hlt
dec
push
or
and
repnz
imull
stos
pusha
inc
test
xor
pushf
jmp
jle
push
mov
jl
scas
cmp
out
popa
out
dec
mov
shrb
sbb
clc
jle
clc
xchg
jnp
xchg
je
int3
cmp
hlt
lea
inc
shrl
lret
testb
shrb
out
xchg
dec
dec
sbb
cmpsl
lods
arpl
mov
idivb
xor
push
cmp
add
enter
in
movsb
cmpsl
sbb
insl
sub
movsb
add
sub
xchg
dec
ret
xchg
bound
xor
cli
add
add
addps
dec
ja
xchg
and
xor
imul
lahf
pop
push
mov
sub
cmp
inc
fsubrs
add
or
or
jnp
insb
mov
jge
mov
daa
int
push
fwait
xorl
cmc
sub
xchg
push
mov
imul
cwtl
sub
cmpsl
cmpsl
inc
popf
xor
mov
mov
push
and
jnp
sub
add
lock
fwait
xchg
pop
jne
loopne
jp
in
jl
xchg
std
cmc
xor
jmp
imul
int
fwait
push
mov
jmp
jne
pop
int3
pusha
xchg
pop
sub
testb
sub
movb
cmc
lahf
cli
jecxz
and
rorl
pop
inc
sbb
pop
out
xchg
jnp
mov
jge
cmp
mov
sahf
xor
loop
test
inc
bound
aam
and
xchg
cwtl
xor
mov
lock
pop
pop
jae
call
cwtl
pusha
popl
ds
push
outsb
dec
dec
pusha
jae
enter
pop
add
data16
icebp
sbb
cmpsl
add
cld
adc
mov
pop
mov
mov
mull
das
or
add
aam
mov
sbb
mov
xchg
js
les
sbb
loopne
inc
jne
std
pop
ljmp
cwtl
insb
xor
js
mov
cmp
mov
pop
pop
adc
fwait
sub
int3
fdivrl
mov
cmp
bound
insl
lahf
leave
jae
scas
cmp
mov
out
fsub
lods
lods
scas
jmp
sbb
push
lock
popa
mov
loopne
sahf
sbb
cld
sarl
mov
dec
push
movsb
inc
mov
pop
lcall
cmp
pop
jo
mov
ds
stos
stos
movsb
rcrb
call
in
inc
cmp
andl
mov
inc
andl
adc
bound
inc
fucomp
lcall
and
fidivrs
test
xorl
mov
dec
aad
lea
cmp
das
in
push
dec
fs
push
cmp
and
lret
testl
gs
xchg
shrb
je
fcoms
push
outsl
les
adc
mov
fdiv
pop
xchg
dec
daa
dec
enter
adc
mov
mov
sub
int3
and
loop
mov
ret
push
fstps
lock
jns
mov
lret
clc
arpl
pop
push
xor
shr
scas
push
clc
cmp
inc
sub
xor
dec
pushw
ret
bound
mov
lods
mov
outsb
mov
popf
call
xchg
mov
pop
cmpsb
scas
jecxz
jle
mov
jge
lret
in
fwait
mov
push
sub
aaa
pop
sbb
pop
pop
or
add
sbb
inc
sarb
ret
in
in
fsubs
sub
repnz
data16
adc
jle
push
cmp
or
add
test
mov
jmp
in
fldt
pop
test
push
pop
dec
inc
pop
lret
out
mov
lds
dec
sbb
cmp
loope
push
add
sbb
lea
jae
pop
and
xchg
push
insl
iret
in
cmc
rcll
pop
jae
xor
in
scas
daa
push
push
dec
ret
fs
sub
fwait
icebp
ja
cmp
jb
nop
pop
xchg
cld
mov
mov
into
push
sub
and
ja
enter
or
cmc
sub
or
and
jmp
pop
call
push
mov
or
lock
cmp
and
lods
add
add
enter
jns
sbb
cwtl
cmp
icebp
out
bound
pop
lods
sbb
and
pushf
ss
xchg
into
mov
es
lret
xchg
test
paddsw
bound
adcl
pop
cmc
movsb
inc
pop
sub
adc
xor
mov
cltd
sbb
pop
shl
lcall
fcmovbe
or
je
sub
inc
sahf
sbb
in
push
lret
push
cltd
mov
jmp
iret
test
push
and
mov
shrb
xor
mov
je
sub
push
xor
sti
fsubrs
add
push
mov
dec
xlat
addr16
jne
mov
fwait
jg
pushf
or
jno
ss
mov
in
das
lea
nop
cs
arpl
in
aam
rorb
dec
jmp
xor
in
fs
push
rcrl
sahf
lcall
cltd
dec
inc
into
push
mov
dec
xchg
test
shr
mov
cmc
xchg
inc
aad
ja
les
dec
push
out
and
icebp
mov
cli
jmp
pop
mulps
gs
lods
dec
loop
int3
sbb
subb
xchg
ss
mov
mov
or
bound
fimuls
outsb
jmp
add
push
movsb
and
inc
adc
xor
mov
enter
mov
and
dec
hlt
inc
cs
or
adc
ljmp
dec
push
mov
out
and
je
ret
movsl
icebp
jns
push
fwait
daa
xor
pop
jae
bound
jge
jl
xchg
shll
inc
push
sub
in
bound
les
mov
mov
pop
dec
push
aas
and
push
stos
xchg
movsb
sub
add
or
xor
int
and
push
mov
and
sbb
inc
mov
out
sbb
shr
and
mov
sbb
popa
jg
in
mov
jns
sub
and
popa
lods
sbb
decl
ret
mov
bound
sbb
jmp
or
mov
pop
xlat
pop
mov
and
push
sbb
aas
jp
cmp
mov
cmp
mov
fstpl
cli
rclb
cmp
push
shrb
outsl
adc
ret
and
insl
push
mov
xchg
mov
movsl
inc
cmp
push
pop
test
js
mov
mov
out
push
subb
in
push
scas
sub
inc
lods
cld
ret
test
stc
cwtl
lcall
cmp
mulb
adc
xchg
pop
fadds
push
frstor
pushf
stos
scas
mov
xchg
fldcw
mov
in
aad
js
push
shlb
or
adc
dec
out
xorl
jbe
ljmp
dec
push
dec
inc
xchg
sbb
cli
ja
mov
ja
sar
add
ljmp
fstpt
stos
scas
pop
pop
imul
in
add
ja
sub
add
push
bound
pop
fnstenv
dec
or
aam
xor
push
push
int3
std
xchg
mov
test
scas
pushw
mov
cmp
pop
sarb
mov
aas
ret
cs
push
rcr
outsl
sbb
scas
sbb
outsb
xor
cmp
loopne
jmp
fs
push
insl
jl
cmc
addr16
pop
jmp
out
pusha
fsubrs
sahf
inc
rcrb
mov
addl
pushf
mov
cmp
hlt
xor
xchg
xchg
cmp
shr
inc
sub
push
jecxz
mov
fst
lahf
dec
xchg
jmp
lock
call
stc
add
or
cmp
ficompl
cmp
xchg
xor
mov
lock
addl
jmp
add
cmp
es
and
loope
es
ja
inc
lds
mov
xor
jo
pop
sbb
jle
adc
adc
pop
jae
nop
fcmovnb
cmp
lret
out
mov
sbb
and
dec
xor
mov
daa
mov
fwait
out
sub
fdivrl
stc
and
in
scas
xchg
mov
ds
cmc
cmpsl
shlb
mov
sub
cmp
sti
mov
lret
in
in
aaa
cltd
jb
cmpsb
cmp
jle
std
sbb
mov
rcrb
bound
dec
mov
repnz
xchg
mov
hlt
push
decl
add
dec
inc
dec
aas
test
push
ds
sbb
cmc
ss
in
aad
xlat
das
xor
shlb
hlt
push
xchg
ljmp
in
out
add
pop
pop
mov
test
inc
outsb
mov
in
ds
shlb
add
test
sahf
call
inc
push
out
fnstcw
pop
push
dec
push
sbbb
jae
add
outsb
adc
sub
movsb
lahf
lds
call
stos
cmp
xchg
test
call
push
icebp
push
push
aam
les
and
bound
jnp
sub
fidivrs
mov
inc
sbb
xchg
mov
pop
loop
jmp
jae
or
push
sar
mov
iret
in
aad
xor
sub
ljmp
fwait
sub
rolb
or
int3
mov
dec
pop
xchg
bound
or
dec
rcrl
cmpsl
sbb
push
add
xchg
stos
insb
mov
dec
or
pop
dec
icebp
xor
test
out
popa
mov
dec
pop
xor
iret
push
jmp
pop
sub
push
int3
push
inc
cltd
fnstcw
push
xchg
jo
jae
cmpsl
jae
xchg
sub
pop
jnp
jae
xor
add
pop
sub
sti
and
dec
pop
jno
sbb
sub
mov
mov
and
sub
outsl
nop
nop
mov
push
ret
negb
mov
jae
mov
mov
push
jnp
cmp
in
lahf
push
rclb
mov
adc
js
dec
sub
cmp
sbb
inc
mov
lods
imul
outsl
das
aaa
jne
cmp
push
xor
or
pop
loope
and
mov
pop
dec
adcl
jecxz
enter
pop
outsl
sbb
cmp
enter
inc
cmp
jmp
out
xchg
mov
fiadds
bound
cltd
xchg
inc
stc
fisubrl
pop
pop
jmp
and
gs
fsubrs
jmp
outsl
iret
inc
xor
cmc
nop
sub
mov
sbb
shr
inc
cld
mov
pop
cmp
add
push
nop
pop
sahf
ffreep
lods
popa
push
jns
les
jno
les
cld
push
pop
mov
sub
cmp
sub
int3
test
loope
enter
int3
mov
dec
push
push
fmull
mov
xchg
sahf
xchg
sar
inc
inc
inc
pop
outsl
lods
push
lcall
jmp
push
mov
cmp
xchg
mov
cwtl
inc
and
dec
cmp
jecxz
push
mov
aam
clc
jl
fwait
popf
outsl
sahf
dec
push
xor
testl
dec
gs
mov
inc
enter
jge
jns
mov
idiv
adc
inc
enter
mov
mov
int
sti
aas
jmp
jmp
les
xchg
stc
jnp
stc
adc
cli
aam
adc
clc
mov
pop
jns
xor
mov
insl
test
mov
movl
stos
sub
add
mov
mov
mov
xchg
xchg
sti
mov
nop
mov
out
adc
bound
push
lods
mov
mov
cli
pop
jnp
xor
jbe
mov
pop
fnstcw
dec
mov
ljmp
sub
data16
imul
out
sbb
jmp
jnp
adc
cmpsl
or
mov
rcr
pop
sub
inc
nop
scas
lret
push
push
arpl
les
xor
daa
mov
push
sub
xor
int
repz
or
adc
outsl
xchg
mov
cmp
adc
jae
push
sub
jae
je
cltd
mov
mov
lahf
adc
aaa
aaa
adcb
lods
push
xor
cmpb
inc
and
dec
pop
cmp
stos
push
dec
mov
dec
gs
and
jae
rolb
xchg
repnz
push
mov
xchg
out
sub
inc
adc
testb
out
add
iret
orb
repz
pushf
jnp
sbb
lret
sub
lds
shrl
inc
inc
jo
ljmp
fidivl
jbe
or
add
pop
pop
cwtl
push
and
pop
mov
mov
int
sbb
mov
sub
pop
sub
push
mov
fwait
mov
add
mov
mov
testl
cmpsb
pusha
movsl
jae
pop
rcl
shrl
mov
stos
sbb
jns
mov
lret
xor
add
out
ljmp
xchg
shll
mov
xor
scas
outsl
les
loope
cmc
movsb
mov
lods
inc
sub
push
repnz
daa
adc
push
data16
fisubs
jg
pop
xchg
push
adc
sbb
mov
mov
push
shll
mov
jl
or
frstor
mov
xchg
outsl
std
fimull
gs
mov
data16
jae
stc
push
cmp
insl
mov
sahf
test
gs
jge
jl
jne
xor
pop
call
cmp
cwtl
mov
sarl
jmp
out
push
push
insb
pop
mov
pop
inc
out
bound
addr16
pop
sbb
xor
mov
jnp
xchg
push
divps
popa
jp
mov
inc
shll
outsl
pop
xchg
lods
aad
mov
jg
and
mov
outsl
mov
xor
or
jae
or
xchg
mov
add
imul
pop
mov
arpl
cmc
sbb
push
nop
push
dec
jno
icebp
mov
scas
cmp
and
and
insl
sub
cmp
mov
pop
mov
cmc
shll
lea
leave
ret
or
paddq
int3
xor
pushf
inc
cmc
pop
or
push
push
jecxz
ds
pop
das
push
ljmp
lds
cltd
mov
leave
push
jmp
cwtl
fstpt
xchg
inc
out
loopne
test
repz
scas
mov
movsl
or
mov
nop
add
shl
aas
repz
repz
scas
mov
rorl
sbbl
mov
push
jg
bound
int
insb
idivl
xor
testb
insl
push
xor
xor
fsubs
insl
data16
in
adc
sbb
xchg
outsb
sub
xor
fs
pop
mov
out
jge
pop
xlat
xor
push
and
adc
mov
mov
pop
cmpsb
iret
jecxz
dec
push
xchg
in
das
push
ja
xor
popf
xchg
inc
jmp
stos
cmp
stos
add
mov
mov
mov
imul
cwtl
jnp
jg
fldenv
pop
jg
fadds
popf
sbb
push
push
push
pop
call
aam
das
inc
imull
xor
and
sbb
add
cmp
add
push
pusha
insl
jae
xchg
or
add
out
js
imul
sub
int
test
xchg
int
xor
rcll
mov
stos
push
insb
lret
jb
dec
ficoml
or
cmc
mov
push
jae
cltd
enter
push
adc
mov
in
and
jae
lret
cmp
add
out
decb
movzbl
imul
jmp
and
test
in
stc
imul
lahf
stc
mov
mov
das
fs
sub
cli
lds
pop
inc
push
lret
xor
into
push
or
mov
dec
mov
lods
jno
mov
push
cltd
pushf
adc
gs
pusha
cmp
sub
out
icebp
mov
out
fbstp
call
sub
xchg
cld
cmp
clc
mov
loopne
test
xchg
repz
pop
cmp
test
adc
xchg
loop
inc
xchg
cmp
inc
iret
imul
xor
into
push
sub
xor
iret
sbb
out
sbb
dec
mov
ficoms
roll
inc
ja
and
sbb
mov
push
scas
jmp
aam
gs
nop
fdivr
xchg
dec
aaa
push
fimull
lods
shll
repnz
aas
xchg
mov
push
lock
sub
call
xor
cmc
stc
call
shrb
xor
pushf
dec
lds
push
aam
cmc
push
test
sub
std
ljmp
pop
inc
sti
stc
xor
adc
out
mov
push
nop
sub
or
out
lcall
dec
shr
or
adc
add
push
int
jp
mov
lock
jmp
inc
int3
mov
stos
stos
das
addr16
fcomps
ss
or
out
repz
movsb
cs
xlat
ret
jnp
outsb
out
adc
movsb
xchg
ficoml
dec
repnz
mov
sbb
enter
mov
inc
out
inc
xor
or
rol
adc
sahf
cli
sbb
les
cmc
push
fidivs
mov
mov
jle
and
repz
sub
or
fdivs
sbb
in
sub
call
fs
sub
fbld
ja
shll
push
jnp
xor
jle
adc
xchg
adc
ret
sub
arpl
scas
pop
fstpt
stos
lds
lock
scas
jmp
ds
sti
gs
mov
dec
xor
jp
in
fucomi
loop
mov
movsb
ss
insb
push
fisttps
xor
mov
stos
mov
push
sarl
mov
mov
repnz
cmc
and
push
xchg
sub
aaa
pop
push
mov
xor
call
jb
out
popa
push
popf
xchg
inc
data16
cmc
add
adc
push
mov
ja
lcall
adc
cmpsl
sub
int3
dec
sbb
movsb
mov
repnz
push
jge
call
dec
int3
in
pusha
ja
nop
es
ja
add
pop
int
inc
bound
push
sti
filds
movsb
sarb
ss
cmp
out
xchg
sarb
cli
mov
jecxz
mov
mov
icebp
jno
mov
xor
pop
xchg
insb
fdivrs
out
or
int3
or
addl
sbbb
imul
mov
adc
shlb
cmc
lods
pop
sbb
mov
xchg
ror
sub
pop
push
jb
call
jbe
inc
out
imul
pop
nop
xor
enter
lods
ss
out
in
push
imul
push
pop
aas
jbe
in
dec
icebp
repnz
loope
dec
jb
cmc
dec
sub
mov
stos
dec
into
data16
movsb
push
cli
xlat
pop
push
sbb
sub
dec
or
mov
add
outsb
jno
jo
add
jbe
arpl
aad
rcrb
ljmp
pop
shr
inc
popa
xchg
loopne
fadds
outsl
mov
mul
sbb
sbb
ret
jbe
loopne
push
push
ds
inc
mov
insb
mov
add
and
enter
xchg
in
ficomps
scas
jmp
mov
outsb
push
sbb
xchg
jle
lret
push
mov
cltd
or
jcxz
psubw
mov
dec
pop
popa
sub
enter
mov
loopne
pop
icebp
sub
in
pop
jmp
mov
and
nopl
loop
push
popf
cwtl
cltd
inc
push
push
cltd
lret
push
ja
out
sub
out
push
scas
or
xchg
sahf
xchg
xor
jmp
push
bound
scas
nop
sbb
mov
xchg
popa
nop
mov
mov
push
les
test
jecxz
into
nop
sahf
cltd
dec
jae
es
adc
push
bound
in
push
xchg
or
pop
inc
xchg
movsb
idivl
pop
movl
aad
xor
icebp
and
sahf
iret
xchg
stos
js
add
mov
shrl
fs
insb
addr16
mov
jae
mov
scas
push
mov
out
push
inc
stos
imul
cld
out
xchg
rcr
mov
sbb
rorb
mov
out
jmp
out
sub
sbb
mov
jg
outsb
repnz
in
pop
pop
mov
inc
iret
fsubs
stos
mov
les
xor
sbb
jno
and
enter
xchg
fincstp
iret
lods
sub
frstor
jo
inc
out
push
pop
insb
test
or
fcompl
and
xor
mov
les
mov
clc
jmp
addb
test
push
mov
push
cmp
sahf
cmpsl
jecxz
and
pop
mov
push
test
and
popa
cwtl
lahf
push
adc
xchg
insb
aas
fstpl
jnp
int
jle
movsb
pop
sbb
push
scas
jmp
cs
cmp
and
xchg
mov
clc
cmc
dec
inc
insl
pusha
and
in
bound
shrb
and
push
mov
jnp
mov
nop
dec
fnstenv
sub
loopne
mul
cld
pop
test
out
push
mov
sbb
loopne
sbb
inc
jl
negl
repz
mov
xor
leave
mov
mov
or
stos
pop
js
adc
lock
jnp
add
rcr
sahf
sti
mov
notl
add
jmp
mov
in
in
cmpsl
in
in
push
fwait
repz
xchg
mov
scas
ss
lea
jne
lds
ja
in
sub
mov
ljmp
das
pop
outsl
jmp
out
dec
xor
jmp
hlt
mov
nop
push
adc
push
sbb
sti
bound
in
imul
push
push
jle
cwtl
fsubl
out
shrb
cmp
outsl
sbb
or
sbb
jns
xor
sarl
and
sti
jecxz
and
and
in
imul
lret
adc
bound
and
lret
xor
adc
mov
fwait
shrb
in
aam
loopne
jecxz
std
lds
push
and
and
xor
xchg
push
xor
incb
decb
scas
and
filds
imul
insb
enter
push
xor
cmp
pop
cmpsl
arpl
xor
push
mov
pop
jb
jg
outsl
repz
mov
shll
inc
sbb
push
mov
ja
inc
bound
rorb
or
je
ret
sbb
test
mov
adc
into
add
and
sti
loop
pop
ja
loopne
push
push
sub
imul
push
mov
test
in
cltd
xchg
mov
or
idivb
sbb
xchg
in
mov
mov
pop
and
fs
nop
push
into
push
mov
daa
cmpsl
sub
dec
in
imul
pop
pop
jns
int3
or
pop
pop
rol
movsb
das
inc
fs
andl
call
imul
jg
cmc
jmp
xchg
mov
mov
scas
push
int
stos
rorb
lea
pushf
add
cmpl
roll
test
bound
and
cmp
add
mov
dec
lods
mov
cmp
stos
mov
lods
inc
fistps
xchg
out
pusha
lock
dec
sub
call
xor
rol
ja
or
pop
out
cmovl
jl
negl
mov
leave
in
cmp
fimull
loop
jmp
xor
xchg
fs
adc
repnz
push
or
bound
popa
xchg
add
pop
pop
xchg
mov
mov
insb
lret
cmp
inc
xor
push
scas
cs
hlt
cmpsl
scas
out
fstpl
and
mov
dec
aad
pusha
mov
jmp
mov
push
mov
jnp
sahf
xor
push
mov
addr16
or
out
cmpsl
int
jmp
shll
aaa
jmp
in
stos
dec
repnz
adc
movsb
dec
dec
sbb
sbbl
sysexit
push
push
mov
loopne
add
sbb
fs
in
inc
cmc
out
pushf
insl
push
inc
and
adc
xchg
roll
loop
shl
rcrb
in
scas
dec
mov
xlat
pop
jnp
push
aaa
les
and
lahf
aas
xor
int
inc
mov
les
pusha
fwait
sub
mov
cmc
cmp
mov
dec
pop
imul
sub
xor
int3
mov
adc
jae
or
bound
ss
outsb
pop
mov
sub
dec
cli
inc
or
stc
push
and
std
lods
fldt
mov
jne
dec
rorl
stos
cmp
stos
inc
cwtl
push
mov
mov
lock
dec
loope
lret
and
adc
or
add
cltd
inc
cmp
cs
or
dec
jge
dec
idiv
repnz
xchg
sub
stos
ds
or
scas
in
out
cmp
xchg
xchg
jmp
mov
sahf
and
mov
lret
cld
and
mov
les
idivb
jns
cltd
in
ja
jns
mov
aam
mov
notb
aas
fs
fistpl
and
jae
int
cmp
scas
add
or
sti
mov
sbb
enter
stc
jge
ret
jnp
dec
nop
push
out
into
adc
loop
or
jecxz
cs
iret
adcb
in
mov
cmc
xchg
cmp
xor
subb
jo
sub
imul
push
push
pop
aaa
fcoml
in
mov
jecxz
enter
es
notb
and
jb
jo
push
jnp
mov
pop
push
xchg
fmull
loopne
pop
inc
pop
call
mov
into
mov
sbb
jp
xchg
push
bound
mov
cld
adc
or
fildll
aad
pop
int
sti
sub
lods
push
gs
cltd
push
ret
xor
push
mov
int
sbb
and
popa
pop
mov
dec
test
xor
es
add
ljmp
movsb
cld
repnz
inc
adc
jge
cmp
mov
bound
frstor
jae
xchg
insl
outsl
jle
rcr
xchg
fwait
shll
bound
in
insb
push
imul
sub
sub
pop
das
lcall
xchg
iret
push
ja
out
int3
hlt
mov
shl
notb
push
out
ret
ds
mov
sbb
cwtl
adc
mov
test
push
das
iret
push
jbe
xor
imul
jle
data16
mov
inc
and
xchg
sub
gs
lods
sarl
jecxz
in
mov
in
or
pop
test
mov
loop
cltd
fwait
xchg
push
push
shll
mov
outsb
pop
jne
hlt
jno
xorb
nop
push
jg
fmull
leave
nop
fcompl
pop
daa
cltd
inc
into
xor
data16
das
ja
push
inc
push
xchg
out
mov
aam
jmp
jmp
fiaddl
push
and
fs
jmp
sbb
cltd
test
sub
shlb
fidivs
push
lods
fsubr
push
repnz
xchg
inc
and
cld
das
mov
push
ficoml
mov
mov
cmp
lcall
push
pop
add
jbe
inc
ret
push
add
pop
mov
xchg
sbbb
add
add
xor
das
inc
lcall
or
push
push
mov
add
and
cmp
dec
cmc
ret
movsb
loope
stos
arpl
aam
imul
sub
cmp
shrb
jecxz
jmp
mov
scas
outsb
mov
and
dec
insl
pop
das
addr16
sahf
ret
les
cmpsl
ja
sbb
loope
mov
lret
bound
dec
cmp
jbe
js
ds
in
cmp
and
sti
mov
cmpsb
sbb
cwtl
call
addr16
bound
lahf
and
xor
push
jne
xchg
repz
imul
fcmovnbe
or
popa
popf
push
movsb
lods
dec
push
sub
xchg
mov
dec
mov
or
jmp
push
gs
push
sahf
jno
mov
adc
lods
cltd
mov
nop
outsl
stc
jb
arpl
cmp
xchg
inc
pop
ljmp
mov
pop
sub
arpl
mov
adc
pop
bound
mov
dec
ss
addb
xchg
rorb
in
rcl
insl
stc
loope
ds
ljmp
cmp
jb
clc
mov
sbbl
fsubs
cs
roll
jbe
jns
adc
and
pand
pop
testb
test
out
pop
push
push
xchg
sub
in
lock
xor
jno
push
es
mov
push
insb
add
ret
jg
bound
inc
adc
unpckhps
adc
dec
mov
push
in
idivl
scas
jp
fmulp
out
insb
ret
cmp
dec
sub
aaa
sub
enter
mov
bound
lahf
sbb
loop
mov
mov
ss
inc
movsb
cmpl
jbe
jmp
out
pop
test
inc
pop
movsb
xchg
dec
pop
or
repnz
hlt
push
imul
xor
out
cmp
xor
add
xorb
jae
sub
adc
xor
bnd
test
xchg
xor
mov
gs
hlt
bound
test
cmpsb
adc
loopne
js
rcrb
dec
push
push
leave
in
fists
mov
sti
inc
push
je
cmp
mov
das
xchg
xor
movsb
in
out
mov
lea
data16
mov
ret
mov
sti
pop
repnz
bound
rcl
jnp
lods
push
mov
cmpsb
das
xor
aad
fucomi
or
and
enter
add
iret
jmp
popf
pop
and
and
xor
xchg
fwait
mov
sbb
mov
fldl
push
sahf
popf
rcll
sub
or
fwait
lds
aas
leave
sbb
and
and
dec
jmp
outsl
sti
jbe
cmpsl
bound
ja
mov
xchg
sbb
cli
ret
and
pusha
ret
push
sub
fcoms
fsubrs
loope
push
adc
fwait
bound
or
out
xor
test
iret
and
mov
push
sub
jl
int
clc
ss
ss
dec
rcrb
inc
cmp
xor
enter
popa
pop
lock
cwtl
std
mov
movsb
mov
mov
jno
insb
scas
push
idiv
add
rorl
cmpsb
iret
rcrl
in
in
ss
sbb
add
imul
ja
into
adc
popa
scas
std
add
mov
jne
sub
dec
xchg
dec
das
dec
in
sbb
pop
das
scas
fists
in
ds
ja
inc
fwait
xor
std
ja
sub
das
lea
sub
and
mov
pusha
test
stos
out
mov
es
sahf
xchg
ja
sar
mov
and
adc
sub
rorl
int
jmp
and
loop
adc
add
xor
add
aaa
outsb
lods
call
fsubs
cmc
mov
repnz
or
ds
add
push
sub
loopne
frstor
retw
cmp
in
jg
jno
rclb
add
aas
in
pop
xchg
inc
out
push
icebp
fnstcw
out
cld
call
das
jecxz
mov
aam
out
mov
and
xor
pop
dec
inc
jae
pop
bound
cld
sub
pop
test
stos
xor
or
xchg
dec
leave
push
inc
cmc
fs
xchg
je
insb
fistpll
mov
mov
shrb
fisubrs
repz
fcompl
mov
paddsb
mov
call
scas
cmpsl
aam
or
fnstsw
dec
loop
cltd
cmp
jle
lds
jmp
inc
cmpb
jb
imul
mov
divb
int3
fldenv
imul
sbb
dec
xchg
cmp
pop
xchg
jmp
bound
fstpl
and
pop
sti
ja
xor
sub
rolb
out
je
cmp
mov
jmp
cmp
cli
cld
and
add
insb
pop
and
xchg
xor
xor
out
mov
sbbb
pop
xchg
pop
push
fs
iret
out
sub
push
pop
mov
sahf
aaa
fbstp
jae
inc
jg
jmp
jns
aaa
pop
inc
pop
pop
mov
gs
push
sti
bound
dec
out
push
and
adc
insl
andb
push
sbb
pop
ja
into
lcall
adcl
loop
out
dec
bound
xchg
or
pop
sbb
add
rclb
cmp
test
or
orb
sahf
inc
daa
mov
cmp
dec
in
test
mov
push
rcpps
imul
mov
call
adc
mov
sbb
jae
nop
cmp
push
call
stos
rep
fcoml
out
std
in
ja
add
outsb
cmp
xchg
cmp
sbb
in
fldcw
lock
cmp
adc
adc
imul
pop
mov
ret
push
daa
enter
xor
gs
push
scas
mov
adc
inc
push
pop
in
lods
xchg
lods
pop
sbb
sbb
cli
sarb
stos
cli
push
sbb
dec
es
cmp
inc
mov
rcrb
cld
ret
or
pop
push
sahf
xchg
out
inc
sbb
test
fsub
xorl
inc
dec
jno
dec
lcall
and
xchg
scas
cmp
jmp
push
in
xlat
pop
mov
sahf
adc
imul
pop
aam
and
cmp
jg
adc
test
les
inc
adc
and
jle
ficomps
mov
insl
xor
call
rep
pop
daa
jnp
add
cld
jae
and
shll
sbb
call
inc
pop
out
jae
push
cmc
xor
aad
inc
or
push
jbe
mov
lret
pop
icebp
sub
test
lds
sti
add
dec
jb
push
or
movsb
lret
mov
fxch
ljmp
fwait
arpl
in
dec
push
test
xor
std
outsl
sub
or
hlt
loop
into
mov
and
fsts
pop
adc
pop
orb
cmp
insb
fstpt
jl
jecxz
sbb
ja
mov
pop
push
mov
cld
cmc
lret
add
out
jnp
es
bnd
sub
push
mov
mov
bound
push
jne
cmp
fcompl
loopne
push
popl
push
or
lods
sti
xor
lods
fwait
jmp
movsb
jmp
pop
repz
rcrb
shrl
mov
leave
adc
jae
rorb
out
test
pop
push
jge
push
pop
mov
clc
xor
mov
icebp
insb
jbe
push
mov
in
dec
mov
xlat
das
mov
aas
inc
mov
push
ja
imulb
sarb
xchg
popa
mov
cs
push
jle
lret
xchg
or
out
pop
jno
sbb
sahf
adc
inc
mov
test
ret
sti
pop
fsubp
adc
push
inc
fldl2e
or
sbb
xor
dec
ret
lret
in
fs
push
push
mov
cmp
jne
in
dec
push
xchg
push
rcl
ja
sub
fsubr
push
and
aaa
inc
or
aam
mov
xchg
xlat
dec
pop
adc
push
xchg
sub
es
jmp
gs
lock
inc
pop
mov
xchg
jl
xor
iret
sbb
fsub
push
cmp
xchg
loopne
call
xor
dec
mov
leave
jae
int3
pop
cmpsb
adc
scas
and
test
mov
push
sbb
ds
sbbb
insb
adc
jnp
pop
jns
xchg
push
adc
out
push
and
iret
fsts
sbb
sbb
stos
jecxz
sub
push
fstl
or
les
xor
test
xor
sahf
sbb
sub
sbb
dec
outsb
dec
sti
jg
fldt
inc
sahf
jno
pop
movsl
sahf
shlb
dec
outsl
pop
imul
mov
in
and
fistpl
test
push
rcrb
inc
jbe
lahf
movsl
out
outsb
cld
repnz
or
xchg
std
push
sbb
test
sbb
jno
lret
pop
ds
pop
fsubl
bswap
pop
and
and
sub
jae
jno
xchg
lea
sbb
and
lock
mov
lock
and
ficompl
lods
fcmovnu
fiadds
pop
scas
push
in
push
fsubr
test
xor
cwtl
sarl
bound
mov
cmpl
lock
jnp
sub
pop
push
gs
shlb
xchg
add
xchg
mov
xor
or
frstor
or
dec
enter
notb
sub
std
and
fst
fs
movsl
pushf
aam
cmp
ss
or
je
bound
in
xchg
jne
xor
loopne
mov
out
pop
pop
add
sarb
jb
mov
fisubl
aas
shl
and
insl
inc
fldt
jl
retw
bound
xchg
sub
cmpsl
fwait
and
mov
loopne
or
jmp
jecxz
call
xchg
fwait
aaa
out
jmp
leave
jbe
xchg
xchg
pop
jbe
loope
cmp
push
in
bound
enter
jbe
inc
nop
add
or
dec
xchg
sub
pushf
fwait
jmp
push
es
sbb
xchg
cli
xor
mov
repnz
mov
push
cld
fstl
inc
in
das
sub
jnp
outsb
jbe
shlb
jmp
mov
push
bnd
pop
lods
icebp
xor
cmc
mov
pop
cmp
out
js
inc
dec
frstor
inc
bound
icebp
sbb
cwtl
hlt
lret
sub
inc
dec
bound
scas
popa
push
mov
xchg
sbb
cmp
dec
leave
pop
lcall
lahf
lock
rolb
stos
cmc
push
xchg
jne
insb
mov
sub
add
lret
sub
fsubl
cmp
push
or
popf
xor
jmp
mov
int3
hlt
cli
xor
xchg
insl
roll
push
adc
push
stc
and
addr16
das
xor
lret
iret
sti
fdivrl
push
cmpsl
mov
and
pop
ret
loopne
sbb
mov
xchg
lds
stos
shrb
mov
ds
loop
add
popf
xor
adc
inc
fbld
jo
add
cwtl
xlat
jg
shrb
mov
js
xchg
leave
xor
pop
popa
movsb
pop
scas
rcrl
xor
mov
pop
pop
in
jne
mov
dec
inc
mov
ja
xor
ret
repnz
or
mov
outsl
sbb
jmp
scas
nop
cmp
and
inc
lret
lea
sarl
and
out
mov
iret
xchg
sub
ficoml
dec
scas
add
fcoml
imul
mov
cmp
push
ljmp
ret
jnp
jle
push
inc
jmp
or
cmp
fbstp
xchg
xor
addr16
sti
out
fnstsw
cmp
sbb
popf
mov
dec
or
jge
fdiv
stos
add
in
sub
jnp,pn
loopne
and
mov
jle
scas
mov
push
mov
bound
xor
dec
xchg
pop
pop
mov
jmp
cmpsl
push
jae
pop
or
test
mov
icebp
cld
inc
call
xor
lods
cmp
add
les
xchg
adc
iret
lret
xor
push
jne
pushf
cs
arpl
xchg
push
aam
int3
test
sbb
stos
cmp
inc
out
mov
dec
rolb
push
rorl
fucomip
rcrb
dec
cmp
add
cmp
jl
mov
mov
lret
leave
lret
jne
imul
mov
lea
pop
out
popf
sbb
fidivs
icebp
mov
cmc
lds
mov
cli
imul
cmp
adc
pop
push
pop
loop
sbb
xchg
and
fsubr
mov
repz
daa
ja
mulb
movq
insl
or
mov
mov
pop
push
push
push
lahf
aam
sub
pop
aaa
jmp
test
icebp
cmpsl
cli
cld
xchg
lods
xor
stc
dec
add
loopne
sti
call
cld
jne
rorb
inc
push
daa
enter
sub
in
out
push
cmp
adc
gs
ds
out
mov
mov
stc
xchg
xchg
popa
jne
bound
add
ror
fs
xchg
xchg
out
test
dec
pop
mov
idivb
std
test
bound
stos
cld
inc
arpl
test
int3
add
mov
in
in
mov
xor
and
xchg
dec
fidivrs
sub
test
sbb
in
adc
int3
test
sahf
shlb
mov
lds
push
sarb
sbb
add
ljmp
mov
adc
sbb
mov
jecxz
adc
dec
fldt
mov
adc
bound
loop
popf
or
idiv
sub
cs
rcr
out
lret
jle
mov
les
ljmp
and
mov
add
xchg
hlt
cmc
xchg
sti
lock
mov
lcall
iret
push
inc
push
fs
dec
or
cltd
mov
pop
xchg
js
lods
repnz
inc
stos
jle
rcrb
dec
sbb
ss
hlt
pop
jl
sub
in
mov
rcrb
jbe
test
es
dec
popf
xor
xor
insb
jns
push
fldenv
push
fldl
shlb
stos
dec
outsb
into
bound
xchg
jae
imul
subl
mov
push
mov
adc
cs
or
icebp
dec
adc
sbb
pop
dec
arpl
jp
pop
aam
ret
in
repnz
fdivrs
aas
rorb
int
push
pop
call
cwtl
cwtl
xchg
or
add
imul
jno
pop
jbe
cmp
sub
cmp
popa
dec
mov
decb
push
enter
cmp
test
push
mov
outsl
mull
sbb
das
sbb
fwait
inc
inc
pop
bound
ficoml
in
jnp
xchg
xor
lock
enter
aaa
lcall
push
mov
pop
push
dec
testl
testb
jge
inc
iret
pop
cmp
das
test
push
fisubrl
stos
push
test
popa
movsl
lock
lds
and
mov
testl
cltd
push
les
lahf
ss
rcll
in
bound
notl
fsubs
fisttpl
sub
aaa
cmp
nop
fisttpl
pop
in
in
jnp
jl
mov
and
jae
inc
stos
mov
out
sbb
push
stos
jae
out
repz
pushf
pop
mov
out
mov
arpl
xor
lret
imul
es
xor
adc
rcrl
dec
jmp
movsl
scas
mov
xor
cs
les
jle
lret
dec
jg
dec
gs
clc
iret
inc
or
movsb
inc
out
bound
xchg
adc
push
mov
and
and
arpl
aam
repz
jns
out
mov
push
pop
imul
sub
cmp
jbe
mov
inc
ds
movsb
push
out
push
mov
lds
jmp
mov
jmp
sbb
lods
mov
cmpb
inc
inc
dec
mov
push
pop
idivl
stc
call
cltd
fmuls
jbe
ss
bound
sub
add
pop
ja
icebp
and
hlt
push
jp
mov
cwtl
iret
cwtl
mov
mov
add
mov
sub
dec
cmp
pushf
mov
inc
push
rcl
push
sti
orl
pop
rol
pop
arpl
pop
push
cmpsl
cmp
ret
and
and
mov
rclb
loopne
outsb
jle
cmp
and
and
pop
fs
call
dec
xchg
hlt
lds
ret
push
sti
dec
pop
in
mov
fadds
loope
les
jecxz
addr16
ja
jmp
cmp
les
sbb
std
popa
movl
inc
xchg
sahf
dec
int
adc
adc
sbb
mov
ret
mov
int3
jno
in
mov
call
mov
or
int
out
insb
mov
inc
or
mov
lret
and
fcompl
clc
out
dec
mov
test
xchg
jmp
jle
jle
imul
cltd
xor
aad
push
xor
sti
imulb
mov
xchg
push
pop
dec
push
mov
daa
enter
adc
cmpb
es
pushf
loope
and
xor
lock
xchg
jnp
sub
jle
push
push
or
mov
jns
pop
cld
xor
push
xor
push
js
sub
stc
sbb
call
sbb
cld
mov
loop
xor
ret
mov
jno
dec
sub
in
xor
xchg
push
lock
ret
imul
or
clc
loope
cltd
mov
sti
pop
es
mov
imul
mov
or
xchg
dec
cmpsl
push
cmp
push
nop
cltd
or
pop
xchg
lret
sbb
adc
xor
sti
jecxz
add
fwait
js
jae
lahf
and
xchg
sub
cs
mov
das
sbb
sbbb
je
push
addr16
int3
shrb
jg
pop
sub
mov
nop
push
rcr
jmp
pop
popf
enter
pop
repnz
into
inc
mov
xchg
icebp
addr16
push
pop
pop
fs
imul
sbb
push
sahf
shl
rcrl
sub
mov
push
mov
add
js
mov
lcall
and
push
xor
outsl
cmpsl
xchg
out
inc
sub
sub
jg
pop
out
ljmp
lock
sub
jge
lods
jg
lret
sbb
das
xchg
mov
cld
daa
divb
call
out
test
inc
dec
call
icebp
out
outsb
dec
fnop
movsl
pop
pushf
sbb
pop
in
mov
arpl
lock
sbb
loop
cmp
fdivl
mov
sbb
jo
sbb
stc
notb
jle
and
sti
xchg
stos
incl
ret
fadds
cmp
add
sub
stc
lods
dec
test
cmp
lret
inc
xor
ja
shlb
sbbl
lock
movsl
jg
xor
cld
nop
sub
mov
data16
mov
je
mov
in
xor
adc
int3
dec
ret
popa
std
push
mov
xchg
jne
jmp
add
repnz
xchg
movsb
jo
pop
xchg
jl
inc
push
push
ljmp
adc
aaa
sub
xor
xor
cmpsl
cmp
add
jo
stos
inc
jnp
in
das
aaa
mov
xor
mov
insb
outsl
cltd
jg
mov
mov
das
inc
add
push
sub
fwait
dec
adc
subl
or
bound
pop
jnp
je
bound
movsb
cli
test
gs
adc
insb
loopne
fldenv
fildl
stos
inc
cmpb
popa
in
jle
jle
adc
scas
push
jne
cltd
lods
mov
notl
push
addr16
mov
movsl
ss
jmp
pop
pusha
push
imul
mov
xor
iret
movsl
call
jmp
icebp
mov
in
addr16
sahf
movsb
add
adc
xchg
inc
adc
push
xchg
iret
stos
pop
call
loope
sub
dec
mov
add
push
call
aam
mov
shl
xor
mov
outsb
mov
mov
aam
outsl
mov
cmp
inc
sub
xchg
sub
pop
cmp
xchg
mov
clc
in
add
mov
add
jmp
jns
mov
sub
fld
bound
pop
pop
dec
mov
mov
outsl
scas
push
inc
mov
jmp
pop
push
xor
fstpl
jl
mov
imul
test
bound
lcall
repnz
jnp
xchg
xor
jne
pop
push
jns
call
mov
mov
bound
lea
es
push
mov
jnp
icebp
cmp
daa
or
jnp
incb
ljmp
adc
dec
xchg
and
and
mov
lea
fnsetpm(287
pop
test
mov
mov
ss
int
ret
dec
cmpsb
adc
sbb
mov
mov
and
je
xchg
adc
dec
xor
fnstcw
out
dec
aas
push
mov
sbb
iret
lds
or
cmp
sub
pop
or
repz
inc
xchg
fcoms
scas
push
mov
cmp
fcmovu
sub
loopne
bound
or
int3
pop
cmpsb
push
mov
aad
iret
jno
fwait
mov
cli
or
loop
and
mov
push
rcrl
jns
or
subb
fcom
repz
xchg
dec
sti
jmp
shrl
sbb
pop
lock
mov
or
jno
pushf
lods
cmp
mov
sbb
inc
dec
insl
inc
lret
sti
sub
cmp
rorb
bound
cmp
cmp
bound
or
adc
mov
adc
pop
and
pop
and
inc
sti
test
add
push
push
sti
mov
push
mov
dec
rclb
xchg
jae
xchg
push
mov
xchg
mov
test
dec
jnp
cmp
repz
adc
inc
notb
ds
xchg
add
add
inc
bound
mov
adc
dec
jmp
shrl
jg
cmp
lea
movsb
movsl
imul
xor
mov
add
bound
lahf
pushf
fldl
stos
cmp
test
in
shr
sub
push
decb
pop
fstpl
and
imul
imul
aaa
out
xor
in
outsl
int3
push
bound
add
xor
in
fisubrs
xchg
mov
rcll
push
push
mov
insb
mov
into
lods
jmp
xchg
enter
aam
repnz
push
adc
sbb
xchg
enter
in
enter
adc
xor
sub
rcrl
pop
les
sub
and
bound
mov
sbb
das
cwtl
in
push
aad
aam
xchg
sbb
and
ds
push
jmp
mov
ja
pushf
dec
imul
scas
bound
mov
sbb
in
test
sub
cld
in
scas
or
stos
add
scas
out
pop
pop
std
xchg
shrb
sub
xchg
or
mov
sbb
sub
loope
mov
fisubrl
push
sahf
sbb
jmp
fidivs
insb
iret
in
jnp
adc
sub
mov
sub
push
imul
loop
fcoml
pop
mov
pop
and
sub
push
add
mov
rcll
pop
int3
imul
and
adc
push
xchg
outsl
inc
out
dec
rol
push
cltd
ja
sub
push
int3
cwtd
aam
inc
aad
pop
and
jp
iret
sti
inc
jg
pop
mov
push
shrb
fwait
adc
push
ljmp
lret
sbb
dec
adc
dec
mov
inc
notb
shll
loopne
dec
in
xor
cmpb
ficoml
or
es
call
mov
lock
loopne
lret
jmp
jmp
adc
sub
enter
cmc
and
push
push
adc
aaa
jl
call
cltd
cmp
and
addr16
in
subl
inc
sahf
mov
scas
dec
jbe
aad
push
xor
pushf
pusha
inc
and
xor
stos
cmpsb
enter
lods
jo
bound
mov
push
sbb
nop
std
mov
xchg
sub
jecxz
fwait
cmc
dec
out
xor
aam
adc
pop
jne
cmp
adcl
mov
add
filds
aas
frndint
repz
aad
orb
ss
and
test
outsb
add
push
mov
jno
ds
das
loope
mov
jle
lods
push
inc
inc
pop
pushf
jbe
repz
es
dec
stos
xchg
jmp
aaa
movl
sbb
stos
loope
jne
sarb
enter
out
outsl
ss
sahf
clc
arpl
jp
xchg
arpl
mov
cmc
jmp
and
push
push
out
nop
pop
icebp
pop
or
push
cltd
popa
jecxz
nop
push
xchg
rclb
iret
int3
xchg
mov
jmp
aaa
jb
xor
pop
es
mov
sbbb
stos
dec
or
xor
add
icebp
lea
mov
leave
pop
sbbl
lret
mov
popa
sbb
popl
push
sub
add
mov
pushl
mov
out
mov
mov
pusha
dec
mov
push
cmp
push
cmp
xorb
xor
push
int
jle
fmull
mov
negb
pop
jecxz
sub
js
sti
scas
aaa
cmp
xchg
shlb
shll
pushf
addb
js
jbe
sub
push
mov
mov
jle
jl
push
cmp
andb
ja
into
pushf
jg
or
shr
or
push
in
and
jle
dec
xor
cmpsl
mov
jle
call
stc
mov
jnp
popf
adc
loopne
ficoms
cmp
mov
bound
pop
sub
jo
and
jnp
fs
push
fwait
loopne
xchg
pop
push
out
adc
mov
jnp
loope
or
jge
pop
iret
adc
jmp
test
push
cmpsb
jp
orb
xchg
pop
push
or
out
out
shlb
popa
xor
call
rcll
fs
imul
cli
adc
in
loope
push
inc
dec
xchg
loope
cmp
jp
jmp
mov
sub
push
jg
ja
pushf
push
push
es
sbb
fwait
xchg
lret
movsl
lock
fadd
aaa
movsb
arpl
cmpsl
xchg
pop
cmp
testl
popf
xchg
ret
cmp
mov
mov
jp
mov
fistps
sbbb
in
fnsetpm(287
iret
sub
shrl
imul
sbb
pop
bound
push
or
movsb
push
xor
mov
and
js
fcoms
rcrb
cld
push
out
pop
aam
fsts
movsl
dec
cmp
clc
sahf
aaa
cmpsl
cltd
gs
xchg
add
ret
add
push
and
inc
in
add
leave
out
add
push
jg
repnz
sub
push
xor
adc
cmc
push
push
jle
movsb
fcompl
mov
sub
inc
add
cmp
mov
imul
and
sbb
insl
lock
mov
push
xchg
jae
mov
adc
aad
sub
popa
fsubl
fs
cmp
push
cmpsl
scas
loope
push
rep
ja
fisubrs
into
in
pusha
pop
loop
out
mov
cmp
mov
and
in
xchg
push
movsb
pop
pushf
shlb
xchg
daa
and
cmp
jae
in
xchg
popw
cld
xchg
stc
ret
fwait
iret
mov
outsb
out
push
fiadds
das
shlb
sbb
dec
ret
sti
mov
mov
outsb
aad
jmp
cltd
cmp
pop
push
cmc
and
fisubrl
insb
adc
or
nop
mov
nop
enter
adc
popf
add
add
mov
mov
in
mov
in
in
addr16
sbb
inc
mov
sahf
repz
clc
sbb
aaa
fxch
repnz
push
push
jnp
pop
out
sbb
call
cmp
ljmp
aam
pop
shrl
mov
sahf
cs
dec
sti
push
dec
mov
cmp
cmc
scas
test
ja
insl
bound
imul
ja
push
into
incl
inc
in
lret
fildl
in
xor
cmp
or
sbb
or
xor
xchg
push
stc
mov
add
adc
xchg
mulb
gs
mov
jle
jmp
scas
ds
sub
push
add
fs
adc
out
cmp
push
das
outsb
out
adc
fxam
pop
nop
sub
mov
mov
cmc
jne
or
in
sahf
stos
push
jne
iret
mov
add
mov
lock
jbe
fdivs
rclb
jne
pop
sub
adc
adc
push
repnz
rorl
adc
dec
movsb
inc
sub
push
mov
dec
adc
data16
enter
shll
nop
dec
and
xor
mov
add
pop
jne
dec
out
ja
fcoml
sub
jmp
mov
xor
out
imul
mov
pop
jg
lods
cltd
dec
or
outsb
test
pop
jmp
iret
shlb
xor
cmp
les
mov
cmpsb
sub
push
sbb
faddl
sbb
lret
mov
and
iret
fldl
xor
cmpsl
aas
cltd
dec
add
repnz
jmp
adc
jle
jno
movsb
push
aad
pop
xor
inc
stos
push
test
push
test
mov
jmp
imul
repnz
mov
mov
push
push
sub
add
fsubl
lods
mov
xor
inc
dec
push
imul
xchg
leave
jne
cmp
xchg
cmp
push
pop
dec
xor
int
cmp
lods
out
push
mov
push
jmp
mov
sbb
mov
or
dec
mov
push
repnz
push
cmp
mov
push
sahf
dec
pop
repnz
push
sar
lods
shl
and
push
and
xchg
out
repnz
mov
call
cmp
sahf
mov
cmpsb
dec
mov
mov
fmuls
or
sub
pop
cmpsl
mov
push
sarb
fcmovnb
mov
mov
push
jl
inc
dec
shrl
mov
pop
call
insb
add
sub
inc
out
imull
add
mov
push
jecxz
inc
in
push
rcr
and
jg
fwait
daa
xchg
xor
sub
fwait
je
push
jne
mov
rolb
aad
stos
xchg
movsl
dec
fcoms
das
loope
mov
loope
pop
js
push
enter
dec
shlb
and
push
xor
leave
hlt
adc
ja
out
pop
push
xor
mov
fstpl
lds
dec
enter
faddl
movsl
or
rolb
out
cmp
mov
add
add
test
stos
and
inc
and
imul
stc
inc
notb
sahf
sbb
imul
bound
mov
and
xchg
xchg
dec
inc
test
in
popw
cmp
in
pop
insl
dec
sbb
mov
inc
test
lea
pop
mov
jnp
cltd
lret
ds
cmp
jg
mov
and
test
in
lods
les
jle
or
pop
out
push
xchg
inc
pop
loope
mov
xchg
bound
xor
fsubrp
lahf
jle
into
pop
sub
jl
and
push
pop
repnz
test
mov
shlb
xchg
fpatan
mov
sbb
mov
popa
and
jg
dec
pop
push
adc
jo
jno
pop
adc
mov
jp
loopne
orl
arpl
jle
popf
js
and
push
push
bound
insl
and
es
dec
nop
fucomip
outsl
xor
bound
arpl
sub
pop
shll
mov
inc
sub
addr16
mov
lea
testb
xor
imul
mov
jno
stos
jo
incb
mov
out
xor
add
out
mov
or
dec
cmp
add
mov
and
xor
jle
test
addr16
pop
pop
lods
mov
jg
pop
fidivrs
sub
push
jo
fcompl
mov
adc
jmp
movsb
loopne
jge
scas
sub
jmp
push
int3
push
jae
mov
bound
jmp
add
sahf
mov
test
cli
sbb
push
sbb
into
nop
lods
or
stc
pop
and
adc
add
xor
das
sub
aas
and
pop
adc
mov
fistpl
inc
push
data16
or
in
gs
xchg
mov
and
insl
mov
les
and
imul
stc
adc
dec
gs
cmp
jle
imul
cwtl
iret
fsubrs
dec
lods
push
sbb
add
ret
repnz
loop
mov
sahf
sub
cmp
shll
mov
push
bound
lods
xor
in
test
data16
push
fcompl
and
incb
test
sarb
pop
test
or
repnz
and
pop
xchg
fsubrs
iret
sbb
test
pop
movsb
jnp
loope
mov
push
or
imul
adc
sbb
scas
in
cli
data16
pusha
push
adcb
xlat
add
sbb
dec
cmpsb
mov
imulb
sbb
mov
ret
lret
clc
iret
push
aam
xchg
pop
outsl
and
push
xor
cmp
inc
outsb
push
jnp
int3
in
mov
inc
pop
mov
daa
push
mov
lret
test
popf
pop
incb
mov
nop
fidivl
sbb
dec
lds
sub
pushf
mov
sahf
into
sub
bound
addr16
lret
rol
loopne
movl
and
in
insb
pop
inc
loop
xor
std
push
mov
inc
push
sbb
sub
inc
sub
int
pop
in
fwait
xchg
push
shlb
lock
add
out
cld
xor
idivl
arpl
mov
xchg
popa
jae
in
pusha
mov
out
addl
cmc
scas
in
add
mov
cwtl
pop
mov
js
inc
int
test
fistpl
shrb
lds
xor
push
inc
jmp
xor
or
mov
pop
dec
sub
incb
mov
adcb
in
fcomi
fidivl
add
push
out
sbb
pop
inc
and
dec
jnp
dec
pusha
jge,pn
mov
adc
ja
enter
call
mov
js
std
cmpb
xchg
push
inc
in
adc
xchg
and
inc
insl
pop
xor
js
or
and
add
fbstp
and
push
repnz
fistpl
sub
jnp
push
adc
sub
mov
das
loop
loopne
roll
push
fbstp
lret
jno
and
int3
jne
pop
ficompl
mov
pop
test
cmp
aaa
out
xor
and
dec
bound
aam
push
lods
cltd
ljmp
mov
dec
loope
dec
mov
sub
in
mov
ret
mov
bound
aaa
pushf
out
ror
daa
sub
push
ffreep
int3
cmpsb
dec
test
pop
rcrl
aaa
lods
jbe
xchg
iret
pop
cs
push
test
lock
fninit
cmpsl
mov
add
sub
in
in
mov
rcl
imul
pop
pusha
dec
popf
and
xor
pop
mov
iret
bound
icebp
xchg
xorb
xor
aad
push
xchg
mov
movmskps
cltd
imul
or
adc
das
lods
lahf
xchg
sub
mov
pop
cli
add
jae
insl
daa
cs
xchg
dec
aas
dec
sbb
xor
bound
rorl
aad
das
cli
adc
rcr
imul
out
popa
xchg
xchg
fwait
out
adc
cmpsb
adc
push
adc
push
pop
xchg
ss
int
fmull
enter
dec
inc
pop
push
push
cli
cld
ret
ljmp
add
push
mov
and
jbe
sbb
sub
imul
in
push
xor
lods
cmc
xchg
cmp
mov
imul
pop
mov
fadds
fimuls
dec
push
pop
fsubr
push
mov
cmp
xchg
aad
lea
mov
sar
sti
push
cld
or
cmc
pop
iret
cmpsb
jecxz
push
mov
cs
out
test
call
mov
xor
xchg
pop
out
arpl
adc
jae
test
arpl
fisttpll
dec
testb
cmp
bound
shrl
jl
loop
sbb
fists
jae
divb
stos
fistps
rol
call
and
outsl
bound
sti
sbbl
repz
clc
pop
xor
sti
mov
ret
mov
mov
xor
add
shrb
repnz
jne
push
inc
mov
iret
adc
outsb
orl
push
sahf
gs
or
push
add
xchg
mov
and
shr
ss
ret
push
or
mov
add
xchg
sub
fldenv
pop
imul
bound
ret
loopne
cmp
cmpsl
das
frstor
pop
and
cmp
aam
shr
ret
ret
push
xlat
mov
pushf
and
jg
cli
fistpl
mov
jle
ficoms
and
mov
mov
popf
mov
xor
aad
pop
adc
rcr
pop
push
daa
or
push
sti
push
lret
push
mov
sarb
bound
mov
jnp
outsl
pushf
outsl
jmp
jae
out
fs
jne
or
push
mov
add
lret
leave
sub
xchg
call
addr16
xchg
stos
jns
ret
cmp
loopne
pop
imul
movsl
cmpsl
sub
jno
xchg
push
out
cmp
push
mov
into
icebp
loopne
out
xor
dec
mov
loope
jmp
shll
sbb
sub
push
add
pop
int
testb
in
or
push
pop
iret
xchg
jnp
xchg
and
lret
and
test
mov
sti
ret
enter
push
pop
xchg
cltd
das
in
lods
pop
aam
mov
jnp
mov
aaa
fst
and
adc
out
pop
pop
fnsave
cmp
lock
pusha
not
enter
push
cmp
cwtl
insb
bound
xor
sbb
mov
mov
inc
stos
xchg
mov
dec
fwait
leave
idivb
pop
push
or
push
ds
imulb
in
aaa
push
pop
mov
push
cld
push
or
pop
out
xchg
xor
fs
jo,pn
push
rcl
aas
lret
dec
jmp
insl
push
andb
rorb
out
jmp
out
push
pushf
mov
or
lret
movsb
jne
aad
sbbl
jns
cmp
sbb
lea
in
pop
jmp
mov
les
mov
repz
out
mov
scas
inc
out
cmpsl
inc
nop
jl
inc
mov
sbb
cld
call
push
xchg
bound
push
pushw
push
cld
sub
mov
xchg
out
aam
rcr
ja
clc
jno
jmp
shl
or
pop
sbb
xchg
dec
enter
orb
arpl
push
sub
sbb
lock
mov
outsl
das
jle
stos
call
es
std
pop
lret
fs
inc
sbb
pop
pop
aas
push
mov
popa
out
shll
adc
mov
aam
xlat
pinsrw
adc
out
push
mov
jmp
inc
gs
inc
test
push
aaa
les
roll
popa
xor
lock
call
lock
or
adc
fucomi
xchg
scas
sti
or
test
std
dec
inc
hlt
lea
adc
shrb
or
adc
push
xor
insb
push
sub
call
cmpb
stos
in
and
cmpsb
out
sub
nop
dec
mov
insl
jmp
test
fs
test
jbe
adc
or
xchg
pop
and
jmp
mov
mov
sti
and
cmp
xor
popa
jne
cmp
push
lods
sbb
cwtl
lahf
andl
xor
xchg
sbb
xor
pop
leave
mov
fwait
push
cmp
mov
adc
inc
jnp
mov
xchg
dec
push
lret
das
or
insl
cwtl
stc
insb
xchg
lds
jnp
cld
in
push
popf
stos
mov
mov
ss
daa
in
mov
pop
fwait
sarl
dec
pop
xor
test
xchg
fwait
pop
push
out
lret
fstpl
out
dec
pop
mov
mov
sbb
ret
shll
mov
add
xor
pop
clc
cmp
ss
popf
mov
iret
or
ret
outsb
lock
adc
incb
or
test
scas
push
xor
addr16
mov
bound
ret
inc
and
ja
bound
lahf
push
xchg
inc
xchg
mov
xor
mov
or
aad
lods
out
adc
push
in
call
cmp
cmc
xor
out
jne
pop
or
loope
adc
cli
push
pusha
jle
pop
sbb
push
test
lods
pop
es
sti
ss
sbbl
jmp
ffree
push
outsb
pop
iret
xchg
fldt
dec
xchg
cmp
inc
mov
stc
and
mov
test
sbb
jge
push
rorb
jmp
push
adcl
bound
push
rorb
adc
jp
cmpsb
sub
mov
repnz
push
mov
sbb
and
jl
mov
mov
ljmp
pushf
bound
into
inc
test
inc
cmp
or
ja
movsl
in
aas
fstpl
shl
les
jbe
adc
enter
mov
inc
loope
sbb
push
cmp
jns
add
sahf
jecxz
rcl
cmpsb
push
les
adc
mov
test
cmp
ja
xchg
imul
fistpll
in
adc
pop
repnz
and
out
mov
ja
adc
sbb
dec
add
xchg
mov
out
jae
popa
add
pusha
inc
pushf
adc
lds
hlt
sub
testb
cld
sti
shll
fisubl
xchg
cmova
mov
fstpl
cmp
movb
stc
xor
add
fdivl
adc
push
mov
xchg
dec
stos
sbb
jns
push
jns
mov
mov
jecxz
roll
xchg
sarb
cli
daa
fidivs
pusha
stos
test
mov
dec
std
add
cltd
aad
imulb
jo
cwtl
ds
fstpt
notl
adc
add
ret
push
xor
push
int
pop
aad
mov
push
mov
dec
lods
sub
pop
loope
rcrb
es
rol
dec
aad
sti
pop
xchg
add
in
or
mov
and
cmp
cmpsb
imul
ss
repz
icebp
scas
movhps
imulb
xlat
xor
out
in
repz
bound
xor
in
out
out
ljmp
fisubrs
cltd
out
add
icebp
pushf
and
gs
mov
outsb
push
and
push
ljmp
jnp
pop
inc
mov
cli
jecxz
fsts
inc
inc
sti
sub
outsl
test
add
cmp
lods
cltd
aad
outsl
das
pop
dec
daa
aas
add
movsb
leave
rolb
cwtl
adc
gs
sbb
inc
fadd
gs
adc
jo
lcall
mov
xor
or
cmp
sub
sub
mov
xor
pop
cltd
inc
push
loope
push
je
dec
or
pop
out
popa
pop
adc
sbb
push
dec
push
sahf
test
icebp
cld
nop
push
mov
les
scas
mov
sub
enter
outsb
loopne
test
mov
js
jg
sar
iret
cs
push
in
repnz
adc
sbb
loopne
mov
fstps
das
subl
pop
movsb
dec
daa
aad
js
push
cmp
cmp
jae
sub
sahf
jecxz
xor
shlb
std
pop
in
icebp
add
aam
fcmovu
stc
adc
iret
push
sub
mov
fwait
push
out
mov
add
mov
inc
pushl
in
mov
cltd
addb
dec
xor
xor
sub
add
mov
out
adc
sbb
out
das
add
jle
push
sahf
mov
sub
sub
push
or
mov
mov
test
stos
in
je
insl
xchg
dec
cld
mov
or
clc
mov
mov
xor
cmp
rcll
bound
lods
ja
inc
add
jo
shrl
js
sub
loop
or
subl
movsb
repz
mov
outsl
imul
insb
fistl
dec
mov
push
adcl
sbb
cwtl
mov
pop
jno
xor
mov
imul
adcb
divb
jae
mov
movsl
imulb
jmp
lahf
sar
insl
stos
int3
xchg
and
int3
cmp
cwtl
sbb
shlb
pop
test
inc
cmp
mov
push
roll
bound
dec
sbb
xor
shrb
arpl
jmp
add
insb
inc
xchg
movsb
notl
xchg
out
in
add
clc
add
xchg
fcmovu
cli
jmp
xchg
stos
cli
lods
lret
fmuls
lods
lahf
je
cmp
mov
push
and
into
and
repz
xchg
addr16
int3
loope
jp
ds
jle
ja
lock
xor
or
jnp
dec
push
dec
sub
jo
lods
sbbb
test
adc
test
mov
inc
js
cmp
aam
push
shrl
in
jmp
inc
andl
and
icebp
mull
inc
test
stos
outsl
fwait
push
ljmp
movsl
xchg
cmp
in
test
push
test
push
rcr
stos
dec
pop
insb
mov
mov
dec
pop
jno
mov
pop
out
sub
idiv
or
fs
xchg
inc
jmp
bound
adc
shll
cmp
jle
push
jnp
pop
cmpsl
jecxz
jo
bound
sahf
fisubs
inc
in
push
sahf
test
add
fadd
lods
sti
outsb
pop
outsl
inc
jl
out
inc
inc
rcll
ja
in
jae
pushf
loope
xor
cmp
hlt
mov
pop
and
cmpsb
mov
inc
and
out
loop
mov
mov
push
inc
insl
inc
mov
jnp
cltd
test
push
ljmp
inc
pusha
bound
jns
sbb
es
push
jle
xchg
call
mov
push
ret
pop
jl
xchg
or
xor
dec
cli
sub
aaa
xor
dec
cmp
push
add
cs
in
sub
xchg
aam
jmp
stc
in
data16
xchg
outsl
bound
nop
mov
xchg
sub
pop
adc
push
push
and
or
xchg
in
call
and
lret
shrl
jno
xor
mov
inc
xor
push
out
sub
mov
nop
test
push
fsub
ja
imul
sbb
enter
push
pop
adc
cli
insb
and
mul
inc
cmpsl
adc
pop
aad
ja
lock
push
mov
clc
fimull
sbb
repnz
mov
push
jno
sti
int
inc
add
pop
push
lock
mov
icebp
sahf
mov
mov
sub
nopl
jnp
cmp
gs
mov
jecxz
shlb
inc
pusha
call
fadds
jne
cli
xchg
stos
pop
ja
sbb
or
jle
add
lcall
out
sub
mull
xchg
or
data16
push
push
out
or
inc
je
xchg
push
stos
cmp
scas
pop
jnp
imul
sub
push
movsb
test
adc
mov
insb
fnsave
lods
push
adc
sbb
sub
js
pop
aam
push
test
outsb
ret
jmp
pusha
or
lea
mov
fsubrs
mov
add
adc
xchg
lods
inc
and
bound
jmp
insb
pop
mov
push
in
and
pop
xchg
xor
mov
dec
xor
mov
or
es
mov
sbb
jp
out
pop
xor
pop
idivb
push
or
iret
pop
add
enter
jg
mov
into
xlat
xor
aaa
push
cmp
inc
lcall
mov
mov
jbe
mov
mov
push
in
jmp
lret
push
inc
sbb
cmp
lret
cmp
ret
inc
and
fisubl
cli
or
jbe
in
push
sub
jecxz
push
mov
lahf
scas
inc
or
testl
fcmovnbe
jnp
dec
outsb
xor
fdivrl
mov
stos
leave
out
cmpl
outsl
fstpl
das
add
push
adc
cmp
push
mov
in
call
pop
lea
push
loopne
out
dec
inc
mov
int3
in
jns
add
sahf
loope
mov
daa
dec
cld
lret
arpl
jl
mov
jmp
push
scas
sahf
jg
xor
pop
iret
inc
cmovge
or
lods
inc
push
pusha
stos
mov
jmp
jp
cmp
lds
adc
in
bound
mov
cld
jno
movsb
sbb
adc
pop
xor
cltd
fsts
lods
mov
mov
lcall
bnd
mov
sti
push
loope
mov
inc
push
in
inc
xchg
shlb
lret
adcl
cmp
jne
imul
push
jo
out
stos
pop
push
aas
enter
add
mov
mov
fiaddl
xor
fisttpll
out
insl
enter
sbb
jmp
stos
das
jle
and
out
shll
mov
mov
mov
mulb
lahf
jno
xor
popa
push
les
or
jns
faddp
mov
popa
xlat
mov
or
std
sahf
enter
inc
push
es
cltd
pop
sbb
in
lock
jmp
js
cmc
pop
push
pop
dec
sahf
sbb
aaa
sahf
stc
insb
xchg
bound
pop
in
jl
out
jns
mov
xchg
out
into
dec
adc
xchg
fsubrl
in
cltd
xor
testb
sbb
cmc
gs
in
mov
daa
jecxz
imul
cld
in
lock
mov
dec
xor
sub
mov
mov
arpl
lods
mov
xchg
push
cli
xchg
outsb
scas
es
mov
sub
rep
inc
mov
xor
push
add
adc
orb
sbbb
push
dec
out
push
ss
addr16
add
pop
or
pop
jg
add
das
mov
sub
pop
int
andb
out
sub
push
adc
clc
in
stos
bound
sub
lcall
pop
xchg
jnp
xor
icebp
pop
xchg
cmp
mov
imul
insl
xor
dec
inc
pop
or
iret
sbb
mov
fdiv
xchg
jl
xchg
add
and
xchg
jmp
jmp
ret
rorb
sar
and
pop
jae
aaa
cmp
addr16
fs
xor
mov
out
in
jne
mov
xor
and
movsb
pushf
jle
mov
lahf
jne
stos
int
jmp
mov
iret
dec
lods
test
imul
sbb
mov
fidivs
mov
shlb
cmp
inc
adc
jne
cltd
stos
jmp
bound
push
adc
iret
adc
push
mov
jmp
fucomi
and
and
pop
or
and
add
repnz
jb
cmc
fcoms
sub
xlat
cmp
fiadds
repnz
jg
rol
adc
xor
cs
xchg
sub
jmp
add
faddl
mull
mov
test
cmp
out
xorl
lock
loopne
fisubl
sbb
jmp
mov
or
add
lock
sbbl
out
inc
push
push
or
call
cmp
sbb
daa
cmp
and
lock
cs
or
icebp
xchg
sbb
out
in
js
cmp
or
push
jnp
in
int3
jno
loop
cmc
fs
notl
mov
insb
out
xor
push
inc
push
lretw
scas
mov
mov
lret
add
fwait
gs
sbb
mov
jno
inc
cwtl
repnz
pop
cmp
mov
ret
movsb
dec
repnz
lods
sbb
sbb
inc
and
cltd
subl
out
sbb
xchg
mov
test
iret
insl
pop
js
int3
mov
das
out
loopne
or
cmp
inc
dec
fwait
pop
jmp
sbb
pop
popf
cmp
movsl
pusha
loope
push
in
insl
sbb
push
xchg
out
push
aaa
in
test
movsb
movsl
in
cmp
bound
ljmp
repz
dec
ficomps
rep
mov
bound
xchg
gs
outsb
pop
insl
adc
test
shlb
adc
cmpsb
inc
sub
or
pop
jge
mov
shlb
cltd
push
jne
mov
das
lahf
pop
sbb
aaa
push
aam
xchg
push
mov
fucomip
lret
nop
push
and
mov
xor
in
aas
add
mov
mov
fnstsw
loop
mov
iret
push
vmovsldup
cmc
add
ja
or
enter
jae
into
mov
add
out
cmp
enter
in
xchg
add
dec
out
push
in
icebp
or
adc
data16
mov
sub
in
push
xor
or
xlat
inc
rcrl
roll
outsb
cld
stos
xchg
pop
push
dec
ss
mov
stos
mov
outsb
mov
insl
gs
cld
in
loop
jae
ret
add
stos
xchg
push
fistpl
sub
mov
movsb
mov
sub
add
push
outsl
mov
cmc
cmp
push
or
push
ret
cmpsl
call
sbb
sub
and
cmp
lods
faddl
mov
ljmp
ret
hlt
add
mov
add
lret
adc
xor
bound
add
dec
insl
test
mov
jg
sub
push
loopne
test
insb
outsb
xchg
inc
movsl
push
mov
cmp
das
sub
mov
pop
and
movl
mov
mov
pop
jne
or
sbb
sarb
push
push
adc
cmpsb
mov
dec
jmp
insb
sbb
inc
xchg
mov
jg
lret
repnz
mov
and
pop
fs
cltd
dec
add
bound
xor
fldt
push
dec
inc
shl
mov
rcll
out
mov
pushf
test
mov
test
arpl
mov
or
les
outsb
pop
inc
js
pop
pop
dec
in
insl
xchg
mov
jg
mov
inc
pop
mov
fildll
in
nop
nop
push
jns
ss
fnstsw
and
out
push
in
jp
sbb
sti
cmp
push
rcrb
fs
jmp
negl
xchg
xchg
sub
and
mov
std
xor
pop
sub
inc
daa
cmpsb
aaa
sbb
cli
xchg
shl
test
inc
sbb
pop
mov
or
xor
ds
sbb
and
std
je
out
push
pop
or
aas
pop
cmc
xchg
fsubl
loop
cmp
repnz
pop
ret
pop
pop
or
add
loop
mov
dec
cmp
push
mov
je
addr16
test
cs
push
mov
jnp
dec
movsb
cwtl
sub
in
dec
jg
pop
jmp
dec
out
xchg
arpl
negb
aam
lock
xor
cmp
addr16
push
cmp
lea
sub
stos
sbb
xor
dec
add
fistl
xorl
adc
inc
scas
setg
sbb
nop
and
sub
leave
lods
je
imul
enter
hlt
mov
dec
cmp
inc
mov
mov
and
dec
adc
jge
cmp
into
imul
push
push
fidivrl
xchg
cltd
xor
iret
gs
xchg
stos
push
pop
jmp
bound
cmovo
sbb
rcll
scas
in
out
inc
xchg
outsl
sbb
cmp
lret
add
rcrb
cmp
in
sarl
test
mov
pop
pushf
xor
test
mov
rolb
movl
sub
adc
dec
lcall
pop
mov
pop
negb
sub
jbe
adc
lock
inc
divb
call
adc
mov
mov
sub
jge
xor
jecxz
push
das
bound
xchg
inc
and
subb
xor
lret
outsl
js
pop
aam
push
out
call
cltd
sub
fisubl
or
pop
xor
pusha
mov
outsb
adc
sub
mov
xchg
cmp
mov
lock
sbb
jno
mov
mov
sub
out
adc
sub
fcoms
push
fcoml
cs
into
push
jmp
cmpsb
mov
clc
push
inc
push
cmp
aam
cmpsl
ss
add
jle
mov
adc
cmpsb
inc
testb
hlt
or
dec
jbe
sub
or
and
pop
fdivrs
daa
inc
notl
xchg
cmp
mov
add
xchg
fcmove
push
mov
mov
bound
sub
push
push
dec
jg
mov
push
js
imul
js
mov
inc
mov
xchg
int3
into
cltd
cmp
cmp
mov
sbb
mov
repnz
xchg
push
pushf
cwtl
pop
mov
cmp
ffree
rolb
inc
cltd
in
or
jle
sbb
cmp
outsb
sub
loopne
pop
push
scas
pushf
xor
mov
xor
push
mov
push
inc
loopne
jno
mov
pop
pop
push
dec
icebp
add
and
mov
sbb
push
movsl
sub
loope
xchg
inc
add
pushf
test
xor
inc
call
and
dec
and
sub
into
push
mov
ret
outsl
cmc
das
sahf
in
push
rep
movq
and
jmp
mov
push
mov
scas
jmp
jb
iret
mov
icebp
insl
loop
add
sbb
pop
cli
lds
push
lret
movsb
iret
bound
cmp
lret
push
mov
mov
jbe
cmp
jl
sub
or
jns
sbb
mov
lock
ja
pop
mov
and
push
sbb
loopne
mov
push
in
adc
sbb
pusha
jo
imul
pop
hlt
fld
jo
out
mov
cld
insb
out
cmp
inc
out
cmp
pop
adc
fldenv
sbb
icebp
inc
ret
inc
mov
outsl
cmpl
push
jae
pop
rcr
inc
pop
call
dec
das
imul
jns
imul
adc
dec
add
ds
stos
mov
adc
test
fistps
roll
adc
out
mov
addl
sti
int3
mov
dec
push
sbb
repz
std
sarl
fucomip
sbb
je
add
xchg
jl
js
std
bound
xor
les
mov
jmp
and
lcall
pop
or
insl
push
sbb
push
pop
lret
push
jmp
xchg
or
mov
mov
sub
mov
aam
sub
sub
ret
cmpsl
cmp
imul
inc
in
push
xor
inc
cmp
xchg
or
out
jmp
ljmp
aaa
inc
jb
inc
dec
cmp
push
lods
sbb
loopne
or
ljmp
into
inc
mov
rorl
mov
xor
dec
xchg
add
pause
pop
stos
sub
pop
jmp
loopne
notb
cmp
icebp
push
stos
shlb
cmp
add
dec
ja
addr16
adc
sbb
repnz
lret
add
fildll
test
push
add
push
lea
sub
sub
inc
imul
add
call
add
xchg
mov
mov
push
lods
xor
sub
jecxz
push
cs
xchg
daa
mov
int
loopne
scas
mov
sbb
js
out
pop
jg
dec
pusha
sar
sbb
add
cmp
daa
test
ljmp
dec
mov
ljmp
nop
frstpm(287
add
sbb
dec
pop
lret
jmp
jmp
insl
fiaddl
xor
out
aam
test
test
add
dec
dec
scas
xlat
pop
cltd
mov
enter
out
lret
mov
pop
loopne
sub
or
pushf
subl
cmp
push
sub
cltd
mov
jno
cmp
out
out
adc
cltd
int3
push
adc
and
aam
xchg
or
mov
sub
xchg
push
daa
dec
inc
pop
push
fdivl
call
lods
and
lcall
jecxz
imul
lret
pop
mov
into
jmp
pop
lret
popf
jnp
mov
xor
and
push
or
fsubp
daa
sahf
mov
gs
orb
xchg
push
test
xchg
jo
mov
xchg
andl
psubsb
test
mov
push
fs
into
jnp
mov
popa
stc
mov
add
lds
sbb
inc
daa
popl
jbe
jno
adc
addr16
adc
jmp
or
imul
sub
push
bound
in
shrl
lds
shr
xchg
aas
call
sbb
test
ror
sbb
out
cmp
jp
fcomps
mov
cmp
stos
lea
cmp
push
lods
fidivl
ds
push
movsb
xchg
je
ror
pop
psrlq
cmp
loop
push
stos
add
call
pop
leave
jge
mov
call
mov
int3
push
mov
cmp
pop
pop
mov
or
das
jmp
cmp
movsl
sbb
out
fistpl
or
lods
bound
cwtl
cli
orl
mov
int3
sub
pop
bound
adc
pop
ret
and
cmp
pop
scas
or
cmp
push
mov
ds
int3
cmp
int
and
stos
mov
gs
push
popl
push
out
outsb
push
movsb
jle
jg
pusha
iret
out
hlt
adc
test
lock
lods
icebp
insb
jg
push
sahf
add
push
movsb
cltd
aam
adc
xchg
jbe
xor
daa
adc
jne
test
iret
vphaddwd
loope
mov
gs
sbb
mov
pop
dec
cmp
popa
cmp
jo
jnp
insl
in
add
shlb
frstpm(287
xchg
xchg
mov
shll
lods
in
lds
cld
std
iret
dec
pop
add
xor
loop
cmp
dec
xor
and
sti
scas
xor
sbb
xor
dec
dec
es
nop
mov
adc
jnp
push
mov
sahf
xchg
stos
movsb
loope
imul
dec
dec
inc
stos
xor
imulb
inc
xor
hlt
outsl
push
pop
int3
jecxz
inc
dec
dec
aaa
les
lods
fwait
bound
mov
pop
add
jnp
scas
leave
mov
cmp
adc
and
fsts
lods
and
and
mov
sub
enter
xor
jp
sbb
mov
test
xchg
gs
mull
bound
inc
push
outsl
or
aam
adcl
dec
sahf
xor
fimuls
xor
dec
lret
loopne
xlat
shl
arpl
loopne
dec
jmp
push
pop
out
push
mov
dec
push
mov
mov
xor
mov
aaa
mov
push
push
leave
pop
push
mov
mov
out
or
popf
arpl
push
shlb
fadds
cwtl
and
lcall
push
pop
negb
pop
popa
out
cld
stos
dec
aaa
and
arpl
push
bound
add
sahf
dec
in
mov
jmp
cld
negl
testl
jbe
loope
imul
push
pop
jns
adc
fsub
bound
jg
call
iret
lcall
in
bound
mov
movsb
ja
mov
xor
sahf
mov
cmc
rolb
cmc
cwtl
lea
mov
mov
shlb
call
and
call
mov
adc
mov
clc
or
cmpsl
sti
sub
sub
inc
ficoms
lret
shl
push
jbe
pop
fcomps
aas
icebp
mov
mov
jp
push
mov
pop
repz
pop
jns
mov
insl
in
sbb
mov
fstpt
imul
pop
fst
outsb
and
add
jae
push
cmp
pop
fmul
push
and
mov
fsts
nop
fcomps
aad
lods
lcall
xchg
xchg
in
je
jnp
push
jnp
cs
test
pop
shlb
add
mov
scas
scas
push
test
test
and
push
notb
and
mov
iret
sbb
lock
movsb
scas
bound
cmpsb
xor
cmc
mov
loop
mov
adc
aad
dec
arpl
insb
imul
bound
js
pop
jp
xor
sbb
push
cli
jb
sub
jg
add
cld
xor
dec
test
bound
rclb
rclb
call
dec
cld
lret
xlat
xchg
dec
cli
subb
push
inc
test
sar
mov
stc
shlb
or
push
add
bound
mov
sahf
arpl
addr16
adc
mov
jg
jg
cmpsb
jp
and
int
lea
repz
jl
outsb
out
inc
leave
shlb
inc
add
and
sbb
orb
fisttpll
xor
mov
cmp
and
and
sub
cltd
pop
cld
or
push
test
pop
lods
mov
jmp
stos
sbb
stos
mov
loopne
bound
mov
mov
icebp
push
push
add
scas
cld
fs
sahf
dec
pop
cltd
inc
sub
rcll
inc
imull
push
jnp
cld
pop
and
shr
mov
scas
mov
cmpsl
pop
jecxz
jle
push
or
les
dec
sbb
popa
xor
sahf
cld
mov
and
insb
pop
popf
xor
sub
ljmp
jmp
xchg
pop
rolb
fistl
jae
pop
ficomps
into
outsl
pushf
adcl
pop
cmp
int3
sub
or
call
fsts
daa
jmp
jo
push
jp
sti
or
dec
imul
aaa
sub
shll
lret
mov
cmpsl
notb
in
dec
shr
lods
mov
insb
rcrb
sbb
push
push
mov
cmp
cmc
xchg
enter
fildl
fbld
xor
stos
popa
call
lds
jns
mov
addb
pop
dec
add
pop
cmc
mov
fstps
fs
or
adc
and
sub
sti
aaa
int3
mov
jmp
sbb
and
cmp
sti
jl
xor
fsubrl
push
shlb
clc
inc
sahf
xorb
int3
cli
xchg
int3
and
jae
nop
or
add
inc
dec
enter
js
sub
cmp
call
sti
inc
fdivs
mul
test
lret
bndstx
ret
mov
push
mov
jmp
sub
arpl
test
xor
arpl
mov
xorl
jg
in
push
mov
bound
sti
push
in
pop
sbb
inc
test
fwait
in
sbb
xchg
das
out
sub
hlt
insl
out
add
out
fmull
mov
or
aam
adc
jmp
das
xor
inc
outsb
adc
mov
push
mov
fdivl
push
jno
or
mov
hlt
hlt
xlat
out
loopne
push
outsl
xchg
outsb
push
jle
push
xlat
cmp
jecxz
and
jge
jp
push
popf
add
insb
mov
call
fs
inc
lds
jne
mov
pop
jmp
fisttpll
jg
aam
xor
int3
das
mov
clc
out
out
xchg
or
cmpsb
ficoms
xchg
adc
sbb
cmp
xchg
testb
pop
push
and
imul
dec
sub
lcall
daa
cltd
pop
fsubrl
push
es
rclb
ljmp
xor
pop
xchg
lds
ret
dec
arpl
jno
loope
push
sbb
mov
std
pushf
dec
xchg
loope
sub
stc
inc
xchg
hlt
jnp
sub
pushf
jmp
mov
add
mov
lock
or
jmp
inc
jle
xor
in
fsub
lar
mov
mov
mov
mov
in
das
outsl
rol
xor
jo
adc
scas
mov
fcoml
shll
pop
cld
in
ss
mov
rcrl
sub
dec
xlat
mov
ss
lcall
insl
movsb
mov
imul
fdiv
and
xchg
and
cmpsb
out
or
add
dec
cmp
loop
lcall
iret
cmc
mov
mov
mov
mov
pusha
fsubrs
stos
xor
push
das
popf
xor
adcb
dec
jnp
inc
iret
add
add
ss
leave
inc
std
cltd
sbb
fcmovb
jbe
and
test
addl
dec
ljmp
pushf
iret
pop
mov
in
imul
xor
scas
rol
inc
pop
fldenv
adcl
inc
lret
lret
shr
scas
sbb
leave
mov
xchg
cmp
mov
inc
mov
adc
bound
dec
sub
push
dec
call
jno
or
pop
out
cmp
sbb
jecxz
adc
popa
push
popf
xor
int3
rolb
icebp
insb
jne
xchg
pop
cmp
xor
insl
jl
push
out
lods
fdivrs
push
push
jne
jnp
push
shl
ficomps
ss
and
push
int3
xchg
jmp
outsl
cltd
mov
int3
mov
or
ja
push
or
bound
aaa
lcall
sti
xor
rorl
ss
jno
and
inc
jmp
lods
jo
add
rcll
stc
push
mov
cmpps
jno
outsb
push
fucomi
push
mov
hlt
sti
cmc
into
jns
cltd
push
and
lret
popf
push
cmp
pushw
loop
stos
lds
jp
or
and
inc
jmp
dec
inc
push
out
out
adcb
mov
push
mov
adc
jecxz
xor
push
rcl
sub
pop
repnz
lcall
leave
jmp
push
std
out
sbb
cmp
xchg
jb
sbb
bound
testl
mov
pop
mov
imul
xchg
fldcw
jmp
cltd
push
hlt
in
aas
jnp
imul
pop
cmp
stc
pop
lea
push
xor
call
nop
mov
ljmp
pop
ret
jg
push
scas
shl
repz
stos
or
mov
ss
xchg
popf
pop
push
das
mov
mov
xchg
leave
cld
mov
dec
mov
cmc
and
out
add
mov
in
mov
das
add
shlb
cmp
ffree
cmp
test
mov
push
mov
loope
push
arpl
lcall
scas
pop
dec
hlt
pusha
adc
jle
inc
out
xor
scas
mulb
lret
pop
sbb
xchg
icebp
and
lret
daa
jl
inc
in
jnp
jne
jmp
fwait
int
movsb
or
sahf
xchg
sub
sub
movsl
repnz
subl
mov
testb
cwtl
sub
xor
ja
pushl
fwait
lret
pop
enter
cmp
pop
js
imul
leave
popa
cld
mov
loopne
stc
adc
out
mov
jns
jno
and
repz
cmp
mov
push
cmc
outsb
jecxz
shlb
lds
rcrl
cmp
xor
shl
in
scas
mov
sbb
bound
pusha
in
dec
cmc
popf
testb
push
dec
scas
sbb
test
jmp
cmp
sbb
or
lds
lock
xor
lock
test
or
nop
mul
push
inc
xchg
repnz
cmp
or
push
fcomps
xor
xchg
adc
outsl
out
bound
inc
add
and
pop
fldt
dec
out
pop
bound
fs
std
fisttpl
dec
pop
push
iret
mov
loop
bound
test
movsl
cmp
fstpl
and
adc
sbb
pop
dec
pop
fbld
push
shlb
loopne
add
call
jle
jbe
push
and
stos
daa
iret
jb
daa
jno
gs
add
mov
jmp
or
inc
jnp
xchg
rclw
imul
sub
fistl
xchg
fcoms
sub
sbb
cmp
je
sbb
into
fstpl
mov
xchg
inc
add
test
shr
push
sahf
imul
cmpsl
and
call
hlt
cmp
push
repnz
mov
outsl
mov
push
xor
addb
pop
scas
pop
cmc
fcoms
or
adc
popa
dec
cmp
inc
ljmp
xlat
sub
or
lcall
mov
scas
jmp
cld
movsb
in
test
jns
sub
out
and
add
nop
sub
push
aad
lret
popa
jne
in
cltd
push
decl
add
sbbb
icebp
push
pushf
sub
aam
mov
mov
data16
rcrb
adc
sbb
and
mov
hlt
into
das
jnp
data16
sub
cmp
jb
loope
jmp
pop
sahf
jne
stos
fidivrl
sub
ja
lret
jo
pop
repnz
mov
out
pop
movsl
mov
popl
push
adc
insl
testl
cmpsl
mov
arpl
out
sub
cmp
daa
fidivl
xlat
push
iret
sbb
and
or
mov
dec
daa
dec
in
std
testl
aam
cmpsb
adc
push
mov
call
dec
push
stos
jnp
xor
lods
jmp
inc
fsubs
pop
mov
inc
sarl
and
mov
sub
push
gs
jns
jae
sbb
and
jbe
inc
test
jno
xor
mov
out
repz
push
mov
movsb
inc
mov
lahf
outsb
or
out
stc
fstpt
jmp
cmp
dec
outsl
clc
mov
mov
push
cmp
jecxz
sti
sahf
pop
je
mov
insl
inc
cmp
sarl
iret
lahf
inc
push
xor
dec
popa
dec
mov
rolb
push
fcomps
mov
loopne
addr16
inc
fdivs
insb
mov
lret
mov
mov
push
jo
mov
iret
negb
sar
cs
jbe
pop
pusha
xchg
xchg
outsl
iret
cs
addl
mov
sbbl
ja
xchg
xchg
xchg
insl
lock
je
ds
nop
les
out
mov
mov
ljmp
enter
jbe
out
or
test
cmpsl
movl
sbb
adc
pusha
fldt
insl
test
out
adc
js
sahf
lods
repnz
push
sbb
jbe
jmp
punpcklbw
and
test
fs
ja
fmul
bound
adc
mov
sbb
and
imul
jbe
bound
movsb
push
mov
cmp
add
pop
xor
and
push
shr
inc
jb
mov
push
mov
mov
add
mov
pop
ficomps
or
cmp
jne
xor
ja
xor
dec
test
or
into
jbe
pop
push
outsb
aas
mov
gs
or
or
test
jle
sbb
scas
pop
mov
scas
es
call
aam
xor
cltd
ret
add
xchg
cwtl
pop
sbb
data16
loop
rorb
arpl
pop
add
testl
adc
cmp
xchg
cmp
pop
push
jae
les
int
cmp
xor
push
mov
mov
cli
mov
pushf
imulb
xchg
js
cs
push
loope
cmp
jns
xchg
sub
xlat
push
and
pop
adc
ljmp
mov
mov
cmp
fldl
cs
sti
jmp
cmpsl
fcomps
cmp
xchg
bound
icebp
cli
fs
out
iret
push
dec
cmp
mov
imul
test
ret
in
sub
cmp
dec
pop
mov
sub
repnz
int
or
cmp
bound
jmp
lods
sbb
jmp
test
loope
das
push
sbb
cmp
mov
push
sub
push
popf
mov
fdivl
mov
arpl
bound
adc
dec
jb
adc
or
clc
sar
add
lds
or
sub
and
cmp
out
aaa
gs
cmpsb
sub
jno
inc
cmc
jnp
cmp
lcallw
sub
sbb
test
add
fidivs
xor
adc
aaa
cmp
les
scas
imul
fildll
sub
pop
lock
std
add
imull
add
movl
push
in
shrl
add
jecxz
movl
neg
test
lods
mov
aad
or
imul
inc
sahf
and
ret
je
icebp
jo
rolb
jmp
pop
mov
scas
imul
fcmovnb
cmp
outsb
sbbb
adcb
mov
pop
loopne
pusha
popf
loopne
fldenv
or
cmp
pop
enter
jle
inc
or
fisubrl
aaa
add
negl
jp
call
lret
push
xchg
lods
sub
int
dec
push
das
movsl
enter
mov
bound
adc
cmp
out
sbb
inc
loopne
xchg
ljmp
les
push
or
mov
sbb
out
and
pop
xchg
addr16
js
xchg
push
jg
mov
add
pand
adc
test
push
dec
lret
fdivrs
in
push
stc
push
xchg
in
repz
in
out
bound
pop
mov
xlat
pop
jne
adc
inc
sbb
cmp
push
add
rorl
sub
inc
xor
out
fwait
or
insl
push
adc
and
sub
test
in
push
mov
mov
push
out
mov
sub
mov
mov
jns
aaa
jbe
aad
push
loopne
or
sbb
int3
cmpl
jae
cmpsl
push
jmp
xor
xor
fucompp
bound
cli
inc
mov
pop
jae
js
inc
aas
cwtl
mull
test
push
movsb
inc
enter
dec
push
add
adc
nop
out
mov
ljmp
jne
and
jmp
leave
andl
cmpps
in
push
sub
xchg
sarl
jg
inc
arpl
jle
or
insl
into
lds
out
rorb
adc
js
push
push
jns
js
scas
sbb
mov
add
inc
mov
jmp
mov
popf
sti
int
dec
sti
xchg
pop
and
ret
add
cli
movsl
jmp
faddp
outsb
out
and
test
lea
pop
xchg
cmc
bound
mov
xchg
lret
push
pop
das
jmp
rclb
xor
sub
mov
repnz
or
push
iret
jecxz
loop
add
les
pop
sub
inc
int3
in
xor
ss
xor
bound
ret
scas
test
outsl
imul
pop
stos
mov
mov
cmp
push
xor
push
or
bound
aad
lret
sbb
cwtl
lret
jmp
pop
ret
inc
mov
push
sub
pop
pusha
or
mov
stos
mov
lods
sbb
imul
push
shlb
faddp
andl
dec
mov
and
ja
cli
rcpps
jle
xchg
pop
lea
jo
sti
icebp
lock
les
js
inc
push
mov
inc
inc
ret
bound
sbb
jle
add
into
push
push
ret
roll
mov
push
lahf
mov
imul
stos
fildll
push
xor
fsubrl
add
jnp
adc
push
lock
ret
rclb
jg
push
adc
dec
roll
xchg
clc
push
pop
inc
adc
fwait
inc
jno
aad
push
cs
popf
cmovbe
mov
push
pop
dec
mov
cmp
ret
mov
adc
or
dec
cs
flds
popf
fsubrs
xchg
icebp
stos
xchg
mov
dec
push
adc
jnp
pusha
outsb
push
scas
add
jb
cmp
xchg
or
jecxz
pcmpgtb
inc
sub
mov
dec
add
lret
xor
sbb
xchg
nop
sarb
mov
imul
adc
out
push
jecxz
repnz
test
ss
enter
lret
inc
push
shrl
add
sbbl
pop
scas
ficompl
lds
loope
lds
int3
inc
idivl
loopne
pushf
xor
hlt
std
push
adc
leave
lret
stos
loop
xor
aad
push
movsb
mov
push
xor
rcrl
adc
outsl
jg
fsubl
and
les
call
stos
sbb
xor
xchg
mov
cmp
mov
jmp
cmp
popf
mov
cmp
sti
cmp
jmp
stc
dec
popa
jmp
daa
scas
xchg
popa
test
insb
xchg
int3
mov
testl
or
call
push
cmp
in
mov
and
adc
out
xor
sti
popa
push
mov
in
test
mov
ret
jae
ljmp
bound
outsb
pop
loope
sub
imul
bound
jmp
pop
sbb
xchg
mov
mov
cmpsl
test
iret
xor
mov
add
imul
sub
push
icebp
into
bound
xchg
or
rol
cmpsl
dec
xor
sbb
insb
sub
xchg
ljmp
dec
mov
fcomi
loop
pop
aas
iret
sub
pushl
push
xchg
mov
xor
stos
dec
pop
loop
add
clc
out
mov
mov
xlat
cmpsb
sahf
mov
add
sub
xchg
ret
push
clc
mov
aas
push
movsl
cmpsb
xor
fcompl
xchg
jg
out
or
hlt
cltd
or
xor
mov
xchg
iret
nop
jns
xor
inc
fld
or
aas
popa
jo
add
mov
push
or
mov
sub
inc
mov
pop
fnstenv
mov
stc
mov
scas
sahf
lods
cmp
and
xor
xor
jge
psubb
int3
div
cmpsb
sar
fisubrl
ja
lods
repnz
in
mov
cmc
and
fdivrl
cmp
cmpsb
push
xor
lahf
dec
test
cmp
mov
mov
enter
sub
fstpl
dec
push
or
adc
shrb
push
shll
clc
push
xchg
stos
jns
inc
sub
movsb
cmp
insl
push
mov
jo
inc
cmpsb
mov
sbb
push
dec
mov
push
call
mov
bound
jg
jle
pop
push
sub
pop
mov
testl
hlt
jg
cmp
inc
dec
icebp
xor
test
xor
pop
movb
xor
pop
sbb
sub
cmp
lret
in
inc
push
push
sbb
pop
cmpsb
add
pop
out
cmpsb
dec
or
mov
call
in
lss
pop
loope
jg
shl
gs
mov
dec
cmpsl
and
cmp
leave
icebp
iret
lods
mov
idivb
cltd
iret
inc
stos
inc
sets
imul
fwait
stos
push
add
fmull
or
cmp
daa
lock
push
add
fcmovnb
push
sbb
ss
jmp
ret
stos
enter
imul
xchg
repnz
or
in
xor
add
in
imul
cmpsb
pop
or
into
jp
icebp
les
into
clc
mov
sahf
mov
scas
and
lock
add
push
sbb
add
jecxz
shl
xor
xchg
pop
inc
aam
or
cmc
xchg
bound
iret
sub
mov
mov
imul
cld
sahf
push
shlb
sahf
movsb
sub
and
mov
or
pushf
adc
outsb
imul
in
xorl
bound
aas
imul
dec
xchg
xchg
sub
lods
lock
testl
mov
shrb
cmc
dec
insl
jmp
popa
and
inc
lods
out
xor
test
push
dec
or
iret
cld
test
cmp
cmc
fsubs
and
xchg
push
sub
int
scas
inc
nop
fnstsw
push
jmp
popa
mov
cli
sbb
bound
mov
in
int
sub
or
xor
push
lea
movsb
adc
test
and
hlt
push
push
iret
mov
dec
andl
xor
inc
lea
xchg
test
imull
push
inc
outsl
mov
ljmp
pushf
icebp
push
outsb
mov
ds
ja
inc
push
xor
push
push
ljmp
loopne
bound
or
scas
sub
movsl
int3
test
mov
xchg
cmpsb
xor
into
dec
cmpsl
inc
adc
and
push
pop
mov
repnz
mov
dec
xor
push
pop
and
xchg
mov
cmp
xchg
test
jl
mov
aam
push
in
xchg
mov
icebp
inc
aad
xchg
pop
daa
aam
push
xorb
push
dec
jecxz
pop
dec
cmpsb
push
enter
mov
sti
cmp
pop
shl
inc
inc
push
adc
insb
scas
xorb
mov
add
and
adc
pop
arpl
mov
ds
xchg
bound
dec
imul
adc
or
pop
loope
sbb
push
ds
pop
xor
adc
jl
bound
dec
fs
test
lahf
scas
sbb
jl
in
outsb
inc
aaa
bound
das
leave
fidivrl
add
ffreep
gs
mov
jmp
jno
sbb
jbe
jmp
push
push
das
push
insb
mov
add
sbb
push
clc
jmp
movl
stos
jo
and
stc
mov
cmp
repz
roll
fstl
adc
cwtl
loop
xor
cmp
xchg
xchg
fsubr
cli
bound
aam
push
cltd
ret
scas
dec
dec
insl
mov
cld
inc
jle
lds
cwtl
dec
stos
test
jmp
mov
bound
mov
cmc
daa
ja
sub
pop
lods
mov
fwait
jbe
pop
ja
dec
test
mov
and
push
jmp
dec
mull
inc
pop
push
fucomi
or
fdivl
enter
repz
test
pusha
xor
sub
out
sbb
in
gs
and
addr16
pop
clc
push
lret
popa
stos
push
pop
gs
lods
ja
mov
sti
enter
sti
stos
fwait
inc
bound
fistps
fs
fwait
shrb
aas
mov
pop
pop
out
pop
bound
sbb
jge
das
fimuls
mov
push
lods
and
pop
mov
rclb
push
out
sahf
scas
bound
lock
add
leave
add
stos
dec
mov
xor
push
mov
add
xor
inc
pop
sub
xor
pop
pushf
jae
bound
pushf
cmp
cmpsl
mov
out
test
bound
sti
in
int3
in
pop
ljmpw
adcb
fisttps
cmp
and
xor
mov
pusha
movsb
mov
jmp
push
xor
dec
shlb
in
inc
mov
leave
loope
bound
jns
repz
sub
and
adc
rclb
inc
fisubrs
rorb
lods
and
xchg
push
test
fbld
cld
out
ds
push
sbb
adc
int3
and
ret
pushf
lods
and
jns
loope
and
icebp
int
mov
pop
jmp
arpl
lds
test
out
int3
lret
pop
sahf
rolb
ret
scas
scas
lock
nop
inc
imul
fwait
aaa
js
aas
jns
jb
mov
dec
pop
rcrb
repz
adc
dec
or
mov
mov
or
mov
fld
xchg
icebp
lods
jbe
test
xor
add
ds
push
int
into
jnp
sarl
sbb
pop
add
fbld
fists
push
shl
inc
jb
mov
insl
mov
bound
fnstsw
mov
rorl
push
push
sbb
inc
bound
cwtl
insl
lret
push
mov
subb
iret
bound
push
jg
imull
mov
mov
jo
add
test
and
push
adc
pop
jmp
jne
and
fwait
push
mov
test
pop
in
and
das
sbbl
fwait
push
and
jns
pop
test
xchg
push
addl
sbb
arpl
bound
data16
insl
test
popf
cmp
and
fcomip
fmuls
ljmp
mov
pop
nop
lret
in
lret
mov
and
cmpsl
les
sub
pop
sbb
nop
dec
je
scas
push
into
cld
gs
inc
call
iret
xor
lahf
outsl
xlat
in
inc
cmovbe
sti
clc
mov
sbb
in
sub
push
sahf
mov
aas
dec
loopne
jo
in
popa
cmpsl
les
mov
scas
shrb
push
and
sarb
or
cltd
sub
mov
sub
pop
sbbl
inc
cmp
pusha
pavgw
jns
sub
or
ds
push
inc
ja
inc
leave
repz
incl
iret
inc
push
aam
mov
push
ss
cmp
dec
cmp
iret
pop
loope
stos
imul
xchg
sarb
movsb
xchg
mov
bnd
and
push
scas
sbb
or
jbe
inc
scas
sti
sub
push
add
fidivs
ja
aaa
vminpd
les
in
gs
mov
jnp
and
pop
ss
fwait
iret
dec
cmc
xor
ja
push
lret
ret
pop
dec
push
bound
mov
fucomi
mov
lods
fcmovnu
inc
imull
int
jmp
mov
iret
bound
sub
ret
xchg
push
sub
movsb
cmc
call
lahf
mov
cltd
mov
adc
test
push
rorb
test
pusha
cmp
imul
stos
imul
loope
and
in
pop
inc
pop
outsl
inc
das
lret
outsb
mov
inc
movsl
cld
fsubrl
jmp
adc
push
inc
lahf
mov
icebp
cld
sub
rorl
dec
mov
pop
lea
test
mov
add
clc
jae
push
push
ja
mov
mov
ret
sahf
xor
mov
cmc
pop
out
sbb
sub
sahf
mov
xor
test
lods
and
das
mov
ja
xor
mov
fwait
jp
or
test
nop
inc
inc
push
inc
roll
xchg
jo
and
nop
sub
mov
xor
pop
les
cmpsl
out
bound
test
mov
ror
inc
and
sbb
dec
inc
add
mov
sti
jne
out
cs
lds
repnz
xchg
bound
jnp
lret
icebp
sti
lds
fisubrs
mov
imull
shl
arpl
pop
pushf
enter
inc
jns
mov
xor
int
jmp
lds
mov
jmp
hlt
in
mov
dec
addl
cs
out
fwait
xor
ficoms
pop
dec
ds
shr
push
pop
push
aaa
rolb
dec
mov
push
sub
das
je
and
nop
pop
mov
inc
cld
cmc
jno
in
and
mov
frstor
xchg
lods
andb
push
xchg
lret
out
xor
sahf
add
sbb
inc
add
outsb
inc
xlat
and
cmpsl
push
test
mov
mov
xchg
fsub
out
or
repnz
pushf
in
sarb
push
pop
mov
xchg
out
xchg
ja
shll
or
test
lds
cmpsb
mov
jne
push
and
test
add
frstor
ficoms
dec
mov
out
xor
mov
out
adc
mov
sub
idivb
int3
add
or
aas
mov
mov
inc
inc
mov
pop
dec
or
mov
add
pop
das
ja
sbb
xchg
or
xor
mov
sub
push
out
arpl
push
xchg
leave
mov
scas
rclb
mov
popf
xchg
rcr
ljmp
idivl
pusha
js
loopne
adc
sbb
jae
call
nop
pop
xchg
stos
push
xor
insb
jecxz
repnz
lea
xor
pop
sti
add
andps
call
and
xchg
into
xchg
aaa
aad
movsb
aam
fstpl
orl
popf
data16
mov
shl
fwait
popf
xchg
jns
icebp
xchg
mov
out
addr16
ret
aaa
testl
xchg
sub
cltd
sub
mov
sub
stc
hlt
fs
lods
and
loopne
ffreep
push
add
pop
or
scas
push
lret
in
bound
es
jmp
fisttps
shl
pop
cld
jmp
out
bound
or
sbb
scas
xchg
ss
inc
es
xchg
and
test
push
dec
popf
sahf
inc
mov
out
push
jmp
sbbl
xor
sbb
adc
mov
inc
sbb
add
and
sti
dec
mov
sub
push
xlat
in
stos
int3
or
mov
or
adc
jl
scas
sub
push
pop
data16
dec
outsl
cmp
mov
sub
jnp
sub
hlt
add
mov
imul
pop
outsb
adc
inc
or
roll
jle
icebp
ljmp
fnsave
in
into
mov
mov
into
cltd
dec
mov
inc
adc
pop
push
je
sbb
icebp
loopne
testb
incb
inc
fstl
fcoml
repz
mov
mov
stc
and
out
lods
cmpsl
cmp
out
hlt
test
or
loopne
adc
inc
outsl
js
push
sbb
movsb
or
arpl
and
push
mov
in
imul
les
xchg
test
idivl
ret
insb
mov
int
sub
push
filds
insl
mov
hlt
add
sahf
mov
inc
inc
les
mov
lcall
ret
out
ljmp
jbe
dec
clc
adc
popf
mov
dec
jg
or
mov
roll
mov
mov
cld
daa
dec
aad
mov
xchg
loope
out
pop
rol
int3
lret
lcall
aad
jle
dec
daa
jmp
push
mov
daa
xchg
xchg
jns
scas
cmpsl
inc
repnz
jg
push
arpl
mov
xor
adc
xor
mov
fdivrl
pop
pop
jmp
mov
xchg
lret
dec
push
inc
loope
test
mov
jae
jl
inc
mov
fs
sbb
fwait
roll
cmc
fwait
add
mov
es
shr
or
test
jmp
ficompl
mulb
sahf
pop
pop
icebp
js
xchg
gs
outsb
cld
loopne
add
paddusw
jo
and
in
imul
stos
cmc
ffreep
and
sbb
sub
xor
jg
test
push
or
cmp
shrl
mov
and
add
pop
inc
aam
cmp
mov
pop
nop
pusha
bound
bound
imul
loop
ret
dec
flds
fmul
fimull
arpl
ss
frstor
bound
or
cmp
jne
aaa
mov
int
bound
imul
test
fs
push
mov
rcr
sub
push
xlat
fwait
leave
push
mov
pusha
sub
aaa
pop
fstpl
add
and
ja
mov
jg
pop
dec
and
or
repz
mov
int3
dec
fwait
js
fwait
cwtl
icebp
out
cmpl
ss
inc
mov
mov
add
call
cld
inc
cld
dec
daa
sbb
outsl
push
jle
scas
and
or
mov
arpl
addl
push
loop
push
in
fldt
jae
xor
pop
cltd
pop
jno
add
lock
pop
in
scas
cs
push
inc
fcoml
xchg
lret
in
push
ja
push
mulb
ja
iret
sub
outsl
push
xchg
data16
mov
push
inc
rcrb
jns
cmp
fs
push
fadd
adc
aas
cld
mov
inc
sub
pushf
aam
movsb
dec
mov
shr
bound
xchg
jnp
std
sbb
iret
add
pop
pusha
rep
ret
xor
call
add
and
stos
cmpsb
pop
push
int
pusha
outsl
push
inc
inc
out
add
push
stos
xchg
shrl
sbb
mov
ret
loopne
cltd
mov
hlt
sub
xchg
stc
cmpsb
arpl
jnp
xorl
xchg
sbb
dec
ds
or
addr16
mov
movsb
pop
mov
fucomi
in
test
shrb
add
push
mov
cmp
jnp
ja
fwait
popa
imul
xor
sbb
aam
lret
mov
or
mov
push
mov
rorl
daa
jmp
or
jmp
clc
mov
rorb
rcl
push
bound
xlat
push
sub
xchg
pushf
lret
xor
jno
inc
stos
je
sub
pop
stc
or
and
loop
mov
daa
shrl
call
adc
call
mov
das
lretw
sbb
and
jmp
push
orl
cwtl
xor
xchg
adc
cmc
lock
mov
mov
in
ja
sti
sahf
in
inc
push
mov
push
jp
mov
out
fwait
adc
cmp
mov
loopne
jo
out
cmp
mov
shl
xchg
push
pop
pop
inc
je
sub
mov
push
loopne
insl
lret
pop
roll
sbb
out
mov
push
rcrl
mov
movsl
and
stos
call
cmp
stc
movsb
bound
xor
push
push
xchg
mov
mov
jmp
addr16
sarl
add
cli
iret
cmp
sbb
gs
stos
ss
int
movsl
aas
fwait
das
sbb
xchg
fs
fisubl
popa
jmp
cmp
adc
sub
int3
cltd
xor
cmp
xchg
into
int
lahf
lock
add
outsl
fcomps
mov
mov
out
shr
dec
bound
mov
xor
ret
call
ret
idivl
push
xchg
pop
cmc
xor
sahf
add
lods
loopne
ljmp
jg
nop
add
cmp
cli
push
loopne
ret
mov
int3
or
add
bound
lock
test
cmc
into
movl
pop
loopne
cmp
dec
push
cmp
or
push
stos
mov
jle
jecxz
in
lret
mov
push
jno
popa
imul
push
pushf
aas
cmpl
rorb
lods
rcl
or
out
cwtl
pop
cld
outsb
roll
enter
and
push
loope
or
pop
cmp
add
push
loopne
imul
sub
mov
mov
fucomi
in
test
stc
mov
pop
pop
pmaddwd
add
sbb
lahf
push
mov
out
sbb
pop
mov
loopne
jns
loope
push
or
or
fsubl
push
rcr
sub
inc
int
aam
or
ja
add
mov
aaa
cmp
dec
adc
mov
fldt
nop
ficoml
fmul
cmp
ds
sub
pop
push
dec
mov
mov
or
imul
ds
mov
inc
mov
loopne
mov
fdivr
subl
push
sub
popa
lods
repz
lock
cmp
cmp
bound
xor
dec
sub
movl
xchg
and
cmp
sarl
cmc
cmp
dec
test
out
outsl
pop
push
pop
mov
ret
push
mov
cmp
cmp
fcomps
out
push
sbb
outsb
lret
rcll
pop
leave
mov
adc
or
cs
jne
cmc
les
js
cmp
pop
push
add
and
mov
dec
cmpsb
sbb
repz
mov
xor
stc
xchg
add
push
and
stos
lret
lock
into
jnp
imul
inc
loopne
les
mov
xor
xchg
mov
jmp
pushf
out
jle
mov
push
dec
int
and
call
pop
arpl
std
fs
mov
push
push
mov
push
and
cmp
and
out
hlt
in
sbb
out
dec
insl
bound
mov
ret
lret
pop
movsb
mov
bnd
push
addr16
pop
mov
iret
adc
fildll
out
daa
out
popf
inc
mov
ds
push
insl
sti
sbb
jnp
dec
xchg
xchg
jg
in
pop
mov
hlt
in
iret
neg
and
jmp
out
jl
push
inc
dec
nop
test
inc
arpl
cwtl
movsb
cmpsb
mov
mov
dec
push
lret
and
outsl
stc
in
mov
sahf
les
jmp
imul
out
lahf
jnp
cwtl
push
jmp
shrb
aaa
insb
sbb
or
in
sub
push
out
out
sub
enter
enter
stc
push
push
mov
jge
mov
pusha
in
xchg
dec
ficomps
xchg
sahf
push
sub
test
aas
xchg
aad
arpl
and
push
pop
push
pop
bound
push
xchg
dec
lret
xor
popf
jl
movsl
ds
scas
or
mov
pushw
pop
adc
and
paddd
push
fsubrl
fidivrs
je
shr
inc
iret
cmp
push
mov
cmp
btc
or
pop
popa
out
mov
jnp
or
iret
mov
mov
sub
arpl
enter
insb
sbb
mov
nop
dec
xor
stos
mov
inc
mov
int3
mov
and
push
fidivl
mov
stos
test
mov
mov
fsubl
out
test
rcll
sub
mov
fnstcw
jmp
jno
dec
add
cmpsl
or
sbb
shlb
fsubp
out
bound
lahf
push
push
jb
or
out
mov
and
sbb
pop
and
fs
scas
add
cwtl
bound
fcmovnb
dec
jmp
in
dec
das
icebp
aas
rorl
or
shll
fcoms
js
loopw
pop
and
imul
push
lea
aaa
xchg
insb
imul
incb
bound
sbb
sti
lods
jne
mov
mov
scas
push
add
icebp
push
addr16
xlat
pop
jl
ret
ljmp
fdivs
cmpsl
daa
jge
and
shrl
cmp
xor
and
push
xor
call
push
xchg
or
mov
xor
or
pushf
out
cmpsl
mov
les
loop
and
add
in
mov
push
loope
mov
jo
stos
ficomps
jno
mov
jmp
add
gs
pusha
push
pop
cltd
dec
int
movsb
ljmp
fistpl
pop
sbb
out
xchg
in
mov
xchg
int
mov
lods
movsb
ja
dec
out
sti
pop
dec
pop
fwait
pop
add
das
or
loop
adc
push
hlt
shlb
push
sub
testl
in
aam
bound
cmp
push
bound
mov
mov
jmp
push
dec
cwtl
sub
push
sbb
inc
lods
adc
dec
test
mov
cmp
hlt
mov
aas
xor
iret
lds
scas
outsl
or
es
leave
insl
push
lods
gs
jno
mov
cmc
repnz
jo
in
jge
test
test
mov
cmp
cmp
sbb
dec
rclb
je
ss
sub
loopne
pop
repz
pop
call
cld
or
or
out
xchg
or
xchg
fwait
add
mov
imul
or
jmp
mov
insb
mov
nop
pop
aas
pop
js
mov
enter
in
das
bound
lods
jno
jg
pslld
jle
pop
and
orb
repz
icebp
mov
xchg
mov
movsb
sbbl
pop
adc
sbb
bound
and
outsl
addr16
pop
dec
mov
jmp
mov
push
mov
inc
test
jns
inc
mov
sti
ds
fistpl
iret
insb
pusha
cmp
shrb
push
cltd
es
sub
mov
daa
leave
dec
sbb
add
call
mov
dec
sbb
stos
stos
inc
push
cltd
pop
inc
jae
cld
cld
push
and
xor
int
lods
sahf
out
sub
addb
mov
cld
shlb
pop
mov
repnz
aad
mov
cld
sbb
dec
sbb
pushf
sarb
pop
les
les
sbb
in
jge
popa
loop
into
adc
xchg
stos
mov
popa
mov
popf
cmp
jmp
outsb
push
cmp
lret
lds
fucompp
xchg
inc
inc
rolb
fucomp
shrl
inc
mov
out
out
add
jbe
and
xor
jb
fdivrl
mov
jle
fstpt
gs
inc
sti
dec
clc
fistpll
sub
or
dec
xchg
mov
push
rclb
ja
fsubrs
or
mov
gs
jg
rcrb
mov
in
in
sbb
out
cmp
push
dec
push
xlat
dec
aam
mov
addr16
push
mov
insb
or
ja
push
sbb
mov
out
push
lahf
rcll
mov
sub
out
stos
sbb
and
pop
push
inc
cmp
les
sti
les
jmp
bound
sete
xor
ud2
ja
loop
mov
adc
cltd
and
push
insl
cmpb
xchg
inc
sbb
adc
and
xchg
or
cwtl
mov
xlat
loop
sbb
scas
movaps
jmp
in
imul
push
xchg
or
popa
jb
out
inc
mov
loopne
and
gs
pop
inc
lods
jnp
icebp
jne
out
clc
or
jle
lcall
add
sbb
decb
add
loope
push
int3
mov
in
sti
and
push
mov
lods
outsl
push
xor
inc
push
xor
pop
inc
sub
aad
andb
lea
push
xchg
jbe
cmp
inc
outsl
fwait
add
cmpl
movsl
outsb
or
mov
lock
gs
mov
dec
cmp
stc
out
sub
and
xor
dec
pop
pop
ss
cmp
cmpl
jnp
movsl
sahf
fbld
arpl
imul
add
jmp
push
mov
cli
rolb
inc
mov
sbb
out
bound
out
dec
loopne
jae
pushf
adc
pop
jmp
jp
and
sub
cmp
addr16
aas
sub
into
cmp
cli
mov
ret
pop
mov
sub
cmc
cmp
xchg
shlb
or
aas
mulb
mov
in
fcmovnu
cmp
sar
jno
pop
add
cmp
and
dec
into
push
bound
mov
popa
xchg
popa
dec
aaa
mov
nop
lods
lahf
stos
mov
push
ret
push
mov
leave
rcll
sbb
cmp
cmp
fdivrs
pop
sub
lods
sbb
movsl
inc
das
inc
bound
in
stc
add
pop
inc
roll
stc
xor
out
nop
push
cmpl
sub
cmpsb
jb
cmp
popa
ja
aaa
fnsave
loope
into
shrl
fcmovnbe
sbb
int3
movsb
dec
rclb
popf
xchg
mov
jne
out
xchg
mov
sub
push
adc
dec
jae
cmpsb
ja
pop
dec
and
jg
push
push
sbb
push
sub
cmp
lods
add
mov
sbb
pop
mov
out
dec
push
sbb
cmpsl
fisubrl
int
into
sub
out
enter
sub
dec
and
ljmp
fwait
mov
ljmp
adc
sbb
pop
adc
stos
nop
sbb
push
jmp
mov
movsl
loope
fs
pop
lock
add
fs
out
insl
jl
pop
pop
xor
aam
rcrb
into
push
mov
fsubl
or
inc
repnz
nop
js
out
dec
in
insl
bound
xchg
sub
sar
lahf
scas
clc
std
rcrl
dec
shll
mov
lods
lock
jae
push
mov
cltd
es
cs
push
daa
fdivs
push
cmp
push
stc
pop
lds
test
ss
fidivs
lods
imul
push
add
inc
stc
f2xm1
scas
out
mov
sub
sti
push
xchg
or
bound
les
rolb
dec
mov
out
cmpsl
xchg
inc
stos
mov
sbb
xor
mov
jae
stos
inc
fwait
push
xchg
mov
sub
cmpsb
add
out
and
push
jnp
jbe
int
xor
pop
jae
lahf
out
cmp
in
pmovmskb
cld
mov
data16
jmp
push
nop
insb
mov
addl
out
lock
or
pop
ljmp
mov
pop
insb
pop
push
testl
pusha
pop
mov
iret
push
or
mov
xchg
sti
gs
aad
testl
mov
or
jbe
mov
frstor
jno
in
inc
and
addr16
cmc
mov
pop
push
xlat
stc
bound
and
sahf
scas
bound
xchg
mov
xor
stos
imul
es
lds
inc
cmc
scas
outsb
ja
loopne
sub
xchg
shll
mov
fisubrl
pop
jp
mov
jae
and
or
xchg
pop
dec
mov
pop
loope
mov
sub
fucom
inc
or
mov
int3
jnp
and
mov
push
cmp
rorl
xchg
aas
negb
mov
pop
sbb
mov
xchg
pop
ficoms
and
fistpl
mov
stos
jecxz
fnsave
xchg
push
out
dec
inc
sub
cmpsb
and
dec
add
push
mov
inc
pop
sbb
push
push
fcomip
std
mov
lret
mov
cwtl
adc
mov
aam
mov
adc
cmp
iret
pop
mov
out
jp
lods
pop
lods
out
mov
mov
or
dec
push
popf
movsb
pop
and
lock
outsl
xchg
adc
pusha
jo
pop
cmp
decb
sbb
mov
sub
jnp
daa
leave
rcrl
adc
hlt
mov
jl
insb
fistl
leave
fs
cs
scas
add
sbb
clc
cmp
cld
mov
pop
repnz
ss
popl
push
andl
jnp
ficompl
mov
pop
and
out
or
in
in
stos
pop
jbe
mov
mov
pushf
mov
push
inc
push
push
in
fisttpl
clc
sbb
push
cmc
out
push
adc
movsb
push
cmc
outsb
rcll
lods
jle
cmp
das
loopne
cmp
iret
and
movsb
xchg
repnz
add
enter
loope
lock
arpl
ja
loope
sarl
mov
jmp
out
call
hlt
mov
jne
lret
xchg
andl
add
push
inc
ja
jnp
mov
jno
in
ret
aaa
jne
pop
sti
push
mov
push
push
fisubrl
nop
jb
cs
repz
push
sub
int3
addr16
out
negl
mov
or
push
push
scas
test
inc
cmpsb
push
inc
dec
and
adc
jg
and
mov
inc
ret
das
aad
lods
iret
ss
add
add
push
sahf
stc
and
movsl
sub
es
fs
cmp
and
outsb
inc
pop
cmc
jl
xchg
lret
cmc
or
dec
jecxz
ja
jge
inc
insb
loope
je
inc
cmp
mov
ljmp
aaa
cwtl
jno
adc
xor
test
jne
jno
call
xor
arpl
adc
popl
stos
inc
push
sbb
movsb
int3
or
mov
or
push
push
mov
cld
aam
scas
add
insl
sub
xchg
les
iret
pop
xchg
mov
outsb
fucomip
filds
pop
xchg
cmp
shrb
or
jmp
mov
jne
sahf
scas
loopne
fsubl
data16
cmpsl
cmp
popa
aas
push
pop
pop
xchg
cmp
xchg
icebp
subb
cmpsb
stos
mov
loope
clc
hlt
pop
and
lahf
bound
sahf
scas
aaa
push
mull
push
loope
sbb
cmp
shrb
inc
stos
xor
inc
jp
xchg
movsl
mov
addr16
lahf
push
inc
push
vmptrld
icebp
test
in
cld
mov
mull
xor
fldt
enter
sbb
sbb
xchg
jmp
lahf
nop
stos
push
dec
mov
and
fldl
push
sarb
mov
mov
loope
sbb
icebp
dec
idivb
pop
scas
fnstenv
push
push
dec
loope
push
fadd
mull
push
jb
jmp
mov
inc
jo
dec
and
adc
cld
add
das
mov
test
call
pushf
sahf
stc
test
insb
cmpl
int
rorb
aaa
jg
push
pop
popf
dec
mov
inc
mov
fcompp
mov
aas
push
cld
hlt
negb
scas
sbb
and
and
iret
mov
clc
shlb
iret
popa
rol
mov
iret
stos
in
jb
mov
inc
out
loope
xchg
mov
inc
xor
rcrb
out
aad
gs
jp
add
cmp
imulb
mov
mov
cmc
iret
lcall
jae
cmp
das
inc
xor
push
lds
pop
mov
andl
xchg
inc
cmc
jns
cs
xor
les
jl
int3
ds
adc
mov
cmp
sbb
add
push
dec
das
sahf
jg
adc
in
mov
in
sahf
scas
xor
iret
push
dec
xor
in
lods
add
sub
sub
int3
arpl
int
nop
sbb
fimuls
adc
sbbl
pop
dec
pop
mov
mov
iret
inc
pop
inc
mov
leave
iret
mov
xchg
push
subl
icebp
jg
cmpsb
ficompl
dec
in
inc
dec
out
jne
xchg
cld
icebp
cmpsb
imul
add
je
adc
cmp
jmp
mov
bound
cld
rcrb
and
outsb
jmp
pop
fdivr
pop
xor
mov
lcall
ja
mov
jb
fcmovb
push
pop
lret
cltd
cmp
push
inc
and
aad
pop
das
ret
aaa
cltd
add
outsb
stos
push
sbb
push
shll
or
sbb
mov
lret
xor
call
cmpsl
popa
nop
test
notb
data16
push
aas
sahf
adc
cmpsb
pop
and
arpl
xchg
loop
push
in
divb
adc
jno
dec
cmpsb
cmp
not
xor
or
dec
mov
test
xor
push
loop
out
xorb
inc
fsubr
push
mov
inc
add
jp
jmp
movsl
in
adcl
cmc
jg
enter
stos
xchg
inc
shr
xchg
xor
call
out
lock
out
je
aas
lods
bound
xchg
js
int
aam
jns
in
ret
fcmovbe
adc
cltd
pop
jmp
lahf
push
push
sbb
xchg
sub
mov
and
mov
or
pop
out
imul
bound
sub
cmpsl
xchg
push
or
sbb
or
sub
cmc
pop
sbb
ja
pop
lock
icebp
and
pop
or
xor
mov
mov
mov
mov
mull
and
push
push
or
js
inc
xor
mov
movb
jmp
sbb
push
and
sahf
mov
mov
gs
out
out
jmp
ret
xchg
push
push
xlat
cmc
fldln2
out
mov
outsb
dec
cmp
and
test
and
popa
fistl
sub
lret
mov
out
test
loopne
xor
jmp
mov
gs
das
bound
sub
gs
xor
mov
mulb
cmp
mov
dec
jmp
bound
cmp
push
xchg
movsb
aad
pop
push
rol
mov
dec
mov
add
add
cmp
dec
scas
push
test
icebp
call
out
add
sti
ja
lods
aad
mov
xor
xchg
xor
mov
ds
lds
push
dec
pop
out
pop
push
jae
into
cmp
stos
and
mov
movsb
and
and
xor
fwait
mov
add
xor
and
cs
mov
push
inc
xchg
bound
inc
push
sahf
fwait
call
fdivl
ret
mov
cmc
mov
sbb
xchg
test
lock
jmp
dec
xchg
jb
bound
rolb
mov
mov
fcoml
xchg
out
or
scas
into
push
enter
inc
or
mov
push
in
or
or
jb
mov
lret
mov
pop
bound
pop
add
scas
mov
inc
jmp
cmp
out
pop
imul
gs
nop
cld
jae
lods
call
sbb
cltd
cmp
mov
out
outsb
cmp
push
pop
fcomps
out
mov
pop
mov
loopne
push
jns
adc
xchg
mov
push
arpl
addr16
jmp
xor
test
scas
inc
dec
jle
jp
cmp
xchg
sbb
push
imul
bound
adcl
inc
push
loope
sbb
aam
rcr
pop
or
push
pcmpgtb
fs
mov
fcmovnb
imul
pop
jnp
popf
lds
data16
xor
fistpl
pop
or
fmull
enter
fisttpll
bound
xchg
loopne
stos
pop
inc
and
pop
mov
int3
shr
xchg
push
push
rolb
insb
ja
cmp
mov
sti
push
in
or
jnp
imul
lods
ss
test
pop
jno
test
ja
je
jge
int
xchg
jae
mov
stc
shrb
mov
aaa
or
jbe
push
loope
sbb
xor
movsb
pusha
sbb
test
push
stc
inc
cmp
out
fdivrs
imull
ret
jecxz
cli
push
sahf
xrelease
ret
fs
mov
insl
pop
cld
loopne
push
cwtl
arpl
mov
pop
sbb
dec
jle
stos
sub
mov
add
xchg
sub
sub
pusha
dec
fs
lds
fxch
sbb
xchg
cmp
vmovaps
in
bound
jmp
bound
cmc
clc
push
iret
gs
push
inc
pop
popa
lods
push
imul
rcl
orb
fwait
mov
jg
rol
repnz
ja
dec
mov
xchg
fcmovbe
ret
outsb
or
push
mov
cmp
scas
push
push
cmp
test
xchg
fcmovne
pusha
push
mov
jns
or
add
mov
fistl
iret
into
stc
mov
inc
out
sbb
rcrb
cs
ja
jp
stc
mov
enter
into
mov
adc
mov
stos
aaa
sub
daa
lock
sbb
cwtl
pop
repnz
mov
xchg
push
mov
push
iret
fcomi
adc
test
push
pop
sub
roll
gs
addl
push
fwait
sbb
stc
out
loope
clc
out
dec
in
rcll
mov
loope
mov
pop
jle
push
into
andl
sub
inc
cmp
or
xor
xor
sub
in
repnz
sahf
iret
dec
mov
shrl
nop
sbb
sahf
lahf
mov
in
inc
push
dec
aad
push
push
mov
shrb
xchg
shlb
sub
pop
ret
test
push
mov
mov
pop
sti
lods
cmp
sub
mov
mov
clc
stc
ret
xor
out
sub
mov
cwtl
adc
push
add
test
bound
popl
xchg
lods
pop
adc
push
mov
stos
addr16
xor
add
dec
mov
cmp
lock
dec
fcomi
leave
cld
or
xor
aam
xor
dec
xorb
adc
xlat
mov
scas
cli
jns
es
jle
iret
cli
jns
in
ss
pop
jecxz
inc
arpl
sub
cmp
push
lea
stc
sub
dec
in
sub
shll
scas
pop
cmp
xor
std
dec
icebp
fbstp
adc
sub
out
and
sbb
mov
pop
jecxz
sti
lds
sub
push
mov
cmp
pushf
insb
sbb
test
pop
repnz
sub
xor
add
ret
sbb
cmpsl
push
cmp
inc
and
inc
sub
repz
pusha
jmp
cwtl
das
out
test
lock
test
dec
cmp
pop
dec
jno
subb
movl
repnz
cwtl
dec
out
jno
shrl
ficomps
and
ds
popf
scas
sti
lods
cmc
cld
mov
sub
icebp
into
mov
arpl
mov
pop
dec
aad
rcrl
outsb
xor
inc
adc
cmp
jg
pop
iret
aam
jp
inc
add
add
cmp
idivl
jne
or
imul
fisttpl
bts
cmpl
ds
cli
mov
pop
in
pusha
psrlq
push
xor
jno
pop
fld
jns
lods
cmp
dec
xor
icebp
jge
cmp
sub
xchg
jnp
stos
popf
mov
jb
fidivrs
adc
jmp
pop
test
jbe
push
lcall
sbb
push
pop
mov
ret
mov
js
mov
out
data16
ljmp
dec
inc
out
and
xor
dec
lret
mov
and
sbb
cwtl
into
push
in
sbb
bound
out
dec
scas
fcompl
push
sub
and
push
lcall
and
mov
push
dec
stos
shrb
mov
pop
add
ss
bound
mov
mov
fwait
aad
movsb
push
jno
bound
sub
mov
subb
sbb
mov
fcomip
mov
mov
movsb
mov
loope
cmp
push
dec
mov
shr
bound
ljmp
cltd
fsubl
cmpb
sbb
repz
sahf
xchg
sbb
test
mov
cmc
sbb
out
push
cld
ret
jnp
cs
addr16
hlt
rcrl
push
movb
insb
enter
sub
rcl
inc
sahf
or
add
loop
sahf
sbb
outsl
daa
mov
insl
and
mov
out
xor
out
fwait
outsl
mov
cmc
sub
or
inc
add
and
negb
cmp
lret
sub
mov
test
popf
daa
pop
jp
xor
xor
and
pop
icebp
cmp
lods
and
mov
xlat
sub
jno
push
imul
movsb
add
mov
fs
pop
ja
je
dec
inc
mov
xor
leave
das
xchg
test
testl
pop
loope
lods
pop
mov
orl
cltd
rclb
andb
xchg
push
notb
mov
sbb
add
jae
das
dec
cmp
out
push
shr
movsb
cld
adc
sub
or
bound
dec
push
dec
inc
into
out
fildl
movb
call
lds
push
call
dec
jae
cs
mov
fsubrs
shrl
push
pop
mov
loop
pop
push
adcb
rcr
dec
fsts
stc
paddd
mov
movsl
rcrl
rclb
add
dec
xchg
lea
adc
cmc
mov
pushf
loopne
iret
dec
lret
add
sub
jmp
bound
sub
div
mov
fdivrl
push
bound
cmp
pop
cwtl
rolb
shl
pop
or
push
enter
ret
jb
js
cmp
out
cmp
gs
test
icebp
push
shrb
dec
data16
into
cmp
mov
mov
repz
jb
fnstsw
in
jne
push
sahf
mov
lods
out
and
push
bound
mov
jg
cltd
lds
in
sti
test
movsb
lcall
inc
lcall
add
inc
jmp
or
in
sub
int3
mov
adc
jns
inc
test
sarl
call
sti
xchg
fidivl
jl
ja
in
jae
ror
sbb
shrb
aaa
and
push
add
jbe
xchg
mov
cmpsb
inc
int3
jl
mov
cmp
and
fists
imul
fwait
sbb
pop
inc
test
and
and
lods
in
jle
rorb
enter
mov
xchg
lods
stc
in
xchg
shl
mov
mov
xor
sub
mov
dec
cmp
mov
push
ljmp
push
sbb
and
xchg
pop
push
in
cmp
daa
adc
inc
stc
jae
lds
jbe
push
int3
push
out
fwait
mov
sub
lcall
add
jecxz
je
sbb
sti
fnsave
mov
push
mov
fimull
cmp
mov
pop
mov
push
inc
push
mov
sbb
scas
test
fidivl
gs
ret
out
fwait
arpl
out
add
rcl
stc
inc
leave
addr16
ss
cmp
push
stc
push
leave
loope
xchg
les
jae
jl
push
insl
push
push
push
jle
shlb
bound
adc
push
adc
mov
andb
jle
repnz
pop
shlb
jmp
sub
loope
fcmovnu
test
push
cmpsl
in
mov
repnz
cmp
pop
mov
je
xor
jae
shll
xchg
in
stc
inc
mov
push
fsubrl
jnp
movzbl
push
push
ret
push
push
bound
fcomi
sahf
mov
inc
pop
jo
icebp
pop
push
shr
int3
sub
jecxz
adc
dec
add
adc
jle
bound
jbe
inc
test
sbb
xlat
jmp
cmp
sbb
data16
add
lods
lret
mov
xchg
leave
int
scas
fwait
out
sbb
fstl
mov
test
pusha
jmp
sbb
cltd
ficomps
jo
jae
push
and
xchg
cmp
int3
paddq
jp
mov
add
jp
call
jge
out
mov
lock
sub
test
test
nop
imul
and
cmc
push
cmp
xor
sub
clc
pushf
jmp
cmp
mov
lock
stos
call
enter
dec
sarl
imul
call
rcrb
pop
test
ror
movsl
nop
bound
lret
ds
sbb
out
mov
clc
ss
pop
shlb
lcall
xchg
fcompl
push
stos
mov
push
lods
dec
pop
in
loope
sub
out
xchg
inc
into
and
jmp
push
adc
xor
in
xor
movsb
sub
cwtl
cmp
mov
push
xchg
xchg
lods
ss
mov
push
sub
xchg
cmp
lret
adc
and
lock
je
jmp
lods
and
sbb
les
in
lcall
add
xchg
jl
push
aad
dec
imul
cmp
in
sbb
mov
sub
cli
push
xchg
jecxz
cmp
mov
jmp
dec
jno
push
pop
and
cld
rorl
push
outsb
sti
mov
addr16
jae
gs
sahf
mov
push
test
mov
push
iret
dec
add
sbb
mov
dec
pusha
out
insl
loopne
xchg
fnstsw
cmc
mov
ds
mov
sti
jno
jae
and
outsb
sbb
push
das
bound
pushf
add
daa
inc
popa
fcoms
adc
push
in
pop
rorb
cmpsl
sub
pop
ja
pusha
orl
popf
bound
push
jle
mov
lcall
or
sbb
icebp
gs
out
lock
adcl
mov
jnp
push
fdivs
or
rcrb
bound
sbb
ss
cmp
je
pop
dec
unpcklps
out
xchg
push
jb
call
jle
outsb
icebp
stos
bound
and
out
sub
inc
frstor
stc
sar
test
out
dec
loopne
xchg
sahf
cmc
sbb
jbe
mov
inc
scas
out
mov
add
mov
fwait
cmc
lret
mov
push
call
lds
or
pop
sbb
push
sub
into
cmpsl
nop
xor
es
arpl
ljmp
cmp
iret
or
cmp
iret
add
cli
jge
cmp
push
mov
xchg
es
addb
mov
mov
fwait
pop
mov
xlat
dec
int3
xorl
stos
out
ret
pop
push
fistpl
enter
lfs
popf
xor
cmp
lods
adc
nop
rcr
stos
clc
aam
sub
fdiv
mov
ret
mov
cwtl
aaa
in
mov
push
pop
pop
repnz
jmp
nop
aad
pop
inc
add
add
sub
adc
popf
xchg
mov
ss
adc
scas
inc
stos
fwait
pusha
lock
push
fstpt
jns
pop
jns
mov
jmp
inc
dec
pop
mov
mov
push
shlb
adc
xchg
addr16
dec
into
pop
mov
popf
sub
int
rorl
stc
lahf
rcrb
addl
addr16
sahf
inc
xchg
mov
xor
lret
stc
pop
inc
push
adc
xchg
jb
jmp
shrl
fcom
insb
daa
dec
test
ret
sbb
dec
std
cwtl
cltd
lahf
out
gs
aas
jmp
dec
or
mov
and
fwait
or
ret
fists
xchg
jp
fsts
sarb
test
dec
int
call
pop
jno
inc
sti
mov
lret
incb
int
shll
jbe
pop
mov
push
popf
enter
pop
cs
shlb
test
push
push
mov
or
gs
lahf
in
add
dec
lock
dec
mov
fldt
sub
ds
mulb
or
lds
das
sub
xchg
dec
lods
mov
iret
adc
popa
adc
push
es
imull
pop
xchg
in
push
mov
sbb
add
pushf
push
push
mov
out
mov
fisubrl
fildl
inc
push
fimull
add
inc
imull
jnp
pop
cmp
loopne
push
mov
mov
xor
ds
cwtl
push
push
cmp
mov
cmp
or
ja
push
fidivl
insb
and
ljmp
push
push
mov
push
sahf
xchg
dec
cmpsb
adc
gs
shll
mov
xor
es
aas
bound
mov
out
push
bound
fsub
ret
or
ret
inc
pushf
cmpsl
ror
push
addl
sub
rol
int
imul
mov
push
lds
sbb
push
pop
mov
fildl
lds
sub
ljmp
bound
movsl
icebp
outsb
out
mov
test
rorb
negl
outsl
push
out
in
in
pop
add
ja
int3
pop
pusha
push
cmp
lds
sbbb
notl
in
stc
es
mov
ds
inc
cld
push
popa
in
lret
das
sub
xor
or
fcoms
xchg
mov
sub
test
cmp
test
and
rcr
push
jp
in
sahf
cltd
out
mov
cmp
jmp
pop
adc
rcll
stos
pop
movsb
jecxz
cmc
insl
popa
inc
dec
push
mov
pop
lcall
gs
adc
enter
xor
stos
scas
mov
decb
roll
or
pop
sbbl
in
push
xchg
rcrl
popa
fwait
bound
jmp
cmc
int3
shlb
mov
jecxz
sarb
movsl
or
stos
aad
inc
jge
in
and
xchg
and
roll
stc
ja
lret
in
clc
push
jecxz
or
lret
add
lods
sub
insl
stos
test
mov
push
mov
mulb
push
int
shll
xchg
xchg
mov
insb
hlt
mov
enter
std
loop
or
out
dec
je
imul
add
js
mov
mov
shrb
aaa
pop
jno
cwtl
in
adc
lds
jp
add
sbb
push
inc
inc
sti
sti
daa
scas
ret
mov
ljmp
shrl
dec
mov
ss
add
lds
adc
jno
repnz
add
popf
push
subb
repz
int3
fs
sbb
xor
sub
jecxz
push
sar
bound
insb
lds
mov
mov
and
cwtl
bound
adc
push
fnstsw
enter
shlb
insl
sbb
mov
xlat
cmp
dec
sahf
stos
fstps
sbb
loope
ss
test
add
push
jcxz
push
push
lret
mov
sbb
sub
mov
lahf
xchg
inc
add
add
sarl
push
mov
mov
dec
xor
stos
shlb
fcompl
addr16
xchg
test
push
mov
repz
push
cmp
push
popa
adc
dec
mov
das
sbb
pop
cld
ficomps
addl
mov
cltd
inc
add
insb
rcrl
cmp
inc
pop
cmc
and
lret
movsb
jl
mov
inc
or
pop
fists
sub
scas
in
mov
push
test
inc
gs
scas
sub
cmp
pop
aaa
pop
adc
mov
imul
mov
cwtl
and
cltd
bound
in
push
repz
xchg
addr16
inc
daa
jmp
or
bound
mov
and
xor
push
mov
adc
nop
cli
repz
and
push
cmp
lods
popf
ret
adcl
inc
add
iret
xor
leave
inc
mov
daa
hlt
cmp
dec
and
inc
jmp
int
inc
adc
iret
je
mov
xor
aaa
scas
fnstenv
out
jmp
pop
ds
cli
cmpb
arpl
jecxz
bound
outsb
lods
mov
pop
add
scas
lods
push
hlt
fsubrl
fisttps
popa
sub
sbb
insb
xor
jle
lods
fbld
mov
xor
or
xchg
in
add
push
bound
les
outsb
lods
lods
push
and
mov
xchg
ds
add
xlat
pop
int
mov
iret
call
or
loop
fdivrl
rclb
dec
test
mov
outsb
pop
jb
mov
test
mov
inc
nop
jno
cmp
sbb
cmp
das
stos
ret
mov
jns
imul
jg
mov
lret
popa
xor
push
iret
addl
bound
dec
shrl
mov
shrl
iret
adc
mov
testb
shrb
pop
xchg
or
ret
test
sub
out
pop
test
sub
lcall
rcll
in
into
das
sub
out
aad
mov
mov
sbb
loopne
in
mov
cmpsl
iret
lret
push
jmp
pushf
sbb
call
sbb
scas
xorl
cli
loopne
gs
mov
in
xor
inc
call
stc
adc
xor
nop
lret
outsb
sarl
dec
cld
jnp
pop
test
cmp
mov
movsl
jmp
push
push
stos
pop
pop
push
sti
rcl
dec
outsl
mov
ror
and
inc
inc
push
push
fstps
rclb
pop
pushf
pusha
jbe
sbb
cmp
aaa
adcl
pop
cmpsb
hlt
mov
pop
mov
pop
sbbl
xchg
or
mov
inc
outsl
push
scas
outsl
sahf
lret
in
sub
pushf
in
pop
cwtl
adc
and
lret
mov
call
sbb
mov
ljmp
inc
jo
fcompl
mov
mov
mov
mov
insb
lret
push
jae
fwait
or
daa
repnz
lcall
push
adcl
push
inc
pushf
js
sbb
mov
adc
dec
cld
sbb
jmp
xorl
subb
mov
stos
in
adc
cmpsb
push
iret
loopne
nop
fiadds
arpl
push
pop
add
jle
shl
jnp
xor
scas
ja
mov
lret
mov
loopne
sbb
mov
sub
aaa
shl
lcall
mov
push
aam
mov
loopne
dec
imul
jae
fwait
lock
mov
dec
and
or
out
aad
sbb
push
xchg
idiv
sub
cmpsl
or
lret
aad
notb
jge
fwait
xchg
out
mov
sbb
adc
xchg
pop
pushf
sbb
stc
xchg
ja
dec
pop
push
push
or
and
dec
into
in
or
jecxz
jnp
outsb
ss
xor
sahf
lods
lcall
rolb
mov
push
aad
mov
pop
mov
pop
test
cmp
repz
push
mov
fstpl
xor
jg
jnp
fstl
scas
dec
sbb
mov
mov
adcb
lea
cltd
call
imul
add
shr
add
xchg
movsl
aas
insl
mov
xlat
sub
int3
pop
daa
xor
movsb
jnp
push
lock
pop
sub
and
adc
add
add
ljmp
pop
insl
pop
jmp
inc
repnz
lods
fstpl
mov
ja
loopne
xchg
ja
mov
cwtl
dec
xorl
loopne
bound
or
fs
mov
lods
mov
test
scas
xor
repnz
push
mov
aad
cmp
rcrl
lret
add
outsl
mov
outsb
outsb
dec
mov
xor
lods
lock
fnstcw
clc
in
movb
leave
dec
jae
mov
mov
mov
inc
dec
pop
sbb
dec
ret
push
mov
pop
pop
push
xlat
sub
lret
bound
jb
in
jle
xchg
fistpl
sbb
pop
and
in
xchg
mov
testl
out
leave
stos
and
jnp
mov
fistl
data16
xor
xor
daa
fwait
pop
inc
scas
xor
aam
adc
cmc
out
mov
or
icebp
into
adc
xchg
loopne
mov
sbb
xchg
adc
or
aam
shlb
clc
cwtl
push
push
sub
fists
adc
or
dec
sahf
adc
int3
cwtl
addl
inc
in
jecxz
jo
in
jl
dec
sbb
pop
or
mov
add
idivl
xor
ret
jp
bound
pop
sbb
imul
enter
pop
bound
mov
mov
cld
adc
into
out
sub
ljmp
lock
aam
sub
push
sub
fs
test
inc
push
fldcw
mov
fcmovnu
andb
jno
sub
scas
and
xor
les
dec
je
xchg
xlat
inc
pop
in
xchg
outsl
mov
push
imul
xchg
xor
fwait
pop
add
pop
iret
sub
push
mov
sbb
or
jmp
and
aam
mov
inc
insl
dec
sti
pop
fyl2xp1
push
push
xor
iret
stc
sbb
test
xchg
mov
inc
mov
pusha
js
cs
sbb
jge
data16
sub
ljmp
call
ret
add
push
inc
insl
arpl
mov
or
sahf
test
aam
sbb
sub
mov
add
scas
and
fistpll
cmp
xchg
daa
ds
xor
pop
cmovb
inc
and
stos
insb
xchg
call
rolb
in
in
add
or
pop
push
addl
and
sbb
pop
mov
push
inc
push
mov
adc
add
lcall
jns
or
pop
repz
mov
fimull
std
pusha
mov
test
mov
adc
sub
push
call
imul
push
and
dec
xlat
adc
jmp
cmpsl
add
and
jno
sbb
pop
aad
lods
scas
sub
leave
xchg
push
cltd
loop
xchg
pushf
in
and
or
test
scas
adc
xor
xchg
jnp
lret
xchg
addr16
add
push
lahf
push
adc
adc
mov
scas
jbe
or
and
fildl
scas
push
mov
aam
pop
in
pushf
sbb
fstps
and
push
aad
xor
xchg
add
mov
cmc
in
imul
adc
test
xchg
mov
inc
out
std
bound
aaa
add
inc
rol
inc
fcomip
and
jb
xchg
xor
add
jnp
push
fisttpl
cltd
shrb
sub
lret
jmp
xchg
pop
out
sbb
stos
push
xchg
sub
out
adc
jmp
ja
dec
bnd
cmpsb
das
mov
mov
in
mov
inc
cmpb
and
jge
mov
jne
adc
xor
in
call
push
and
pop
stc
dec
aam
jb
fstpt
push
pcmpeqw
pop
sub
sub
gs
call
and
cwtl
cwtl
cmpsb
jle
or
ret
add
inc
push
push
sbb
cs
ja
xchg
pusha
ds
nop
inc
outsl
inc
mov
inc
push
mov
shlb
in
mov
aaa
out
and
cmp
mov
in
lods
bound
in
icebp
pop
mov
fildll
cwtl
sbb
cmp
sub
push
aam
sahf
inc
into
into
test
pop
jo
jnp
fstl
add
inc
mov
pusha
jo
lahf
adc
jmp
sbb
xor
sbb
js
pop
lds
shll
mov
fbstp
pop
pop
push
repz
mov
mov
push
pop
stos
ret
sahf
call
lret
cltd
js
or
pop
pop
out
loope
add
movsb
in
sbb
jns
mov
std
mov
cmpsb
stos
sub
insl
mov
in
inc
and
pop
jno
dec
dec
push
aam
sbb
and
fs
or
fldl
xor
out
pxor
fistpl
jbe
popf
mov
imul
dec
sub
aad
fcoml
mov
repz
or
pusha
adc
fldenv
or
cmc
ja
or
jl
xchg
push
adc
outsl
jle
imul
sbb
jp
jnp
rorl
mov
insb
mov
insl
int
cmp
out
movsl
sbb
adc
repnz
push
cli
mov
cmp
lret
jmp
out
popa
push
pop
lods
mov
xor
scas
push
fnstcw
shrb
xchg
add
aas
jp
push
xchg
pop
fistps
push
hlt
pop
mov
cld
gs
daa
loop
lret
sub
inc
cltd
cmp
jnp
loop
pop
add
xchg
xchg
cmp
or
xchg
push
sarl
cwtl
push
xchg
aas
pop
pop
shrb
cmpl
fdivrp
push
add
push
cli
mov
jnp
cmp
outsb
and
mov
mov
xlat
pusha
in
adc
push
jno
nop
loop
loopne
mov
pop
push
cmp
arpl
dec
adc
xchg
cli
ja
mov
jl
xor
fmull
mov
pop
jl
and
xchg
pop
sub
push
dec
pop
mov
je
adc
insb
ja
insl
or
push
xchg
cltd
pop
sub
xor
fdivr
push
jge
push
rorb
sub
cs
test
les
lods
je
jecxz
and
dec
sbb
out
gs
mov
pop
cli
cmpsl
cmp
divb
cmp
scas
sbbb
test
push
iret
sub
and
js
cmp
fnstcw
aas
shll
in
ljmp
dec
lahf
dec
in
inc
dec
jg
repnz
mov
aaa
fs
fs
or
dec
add
jmp
lcall
test
inc
outsb
stc
pop
ss
dec
mov
xchg
push
or
pop
popa
cli
ja
mov
inc
push
daa
scas
fwait
jbe
xchg
pop
jp
out
andb
dec
pop
mov
fwait
and
in
pop
adc
sub
and
js
jmp
cs
shr
dec
imul
test
mov
les
es
cmp
mov
xchg
movsb
push
xchg
fwait
call
pop
fnstcw
xor
xlat
sbb
out
mov
mov
les
shr
enter
addr16
sub
and
pop
fildl
call
in
push
das
mov
aaa
test
mov
fcomp
clc
loope
jmp
sbb
xor
cmp
fwait
inc
shr
sbb
inc
cmp
pop
sti
fs
jle
lods
jmp
lahf
pop
lcall
or
push
shl
imul
shrb
shrl
cmc
xor
in
inc
push
test
loope
mov
out
xor
gs
lret
cmp
xor
push
ja
rolb
out
xchg
in
or
aam
cmp
outsl
les
mov
dec
imul
lret
xor
mov
and
out
repz
outsb
mov
fstpl
push
incb
pop
or
stc
out
push
or
and
sahf
pop
add
fistpl
add
mov
addr16
sbb
sub
movsl
or
dec
mov
mov
sarl
out
movsb
push
into
jge
mov
icebp
shr
cmp
push
out
cmp
xor
iret
cmp
and
pop
adc
mov
jns
dec
add
enter
in
push
clc
fld
cs
adc
bound
pop
dec
outsl
sub
mov
xchg
shll
cmp
jo
xlat
insb
lret
jp
dec
push
jg
xor
push
lahf
dec
stos
push
push
addr16
jb
sub
fldcw
movsl
fsubrs
mov
lock
mov
leave
and
mov
in
push
sbb
fs
mov
pop
cmp
pop
fsubrs
mov
inc
int
scas
mov
xor
and
inc
push
push
ret
dec
jnp
xchg
icebp
test
out
int
push
push
lcall
sub
pop
push
dec
movsb
imul
push
into
push
imul
and
push
lret
dec
inc
inc
xlat
stos
popa
pop
stos
mov
add
leave
pop
mov
sarl
hlt
xor
push
stos
xorl
mov
pop
jo
push
jle
pop
xor
sarb
daa
fcomps
push
cmp
lods
pushf
stos
mov
pop
pusha
js
lcall
sbb
testl
inc
fdivs
les
mov
ds
loop
xchg
es
dec
dec
shrl
or
callw
and
std
stos
adc
mov
or
mov
mov
cmp
sub
mov
stos
push
call
pop
icebp
cmp
call
jmp
push
add
and
loopne
xlat
bound
imul
sbb
cmp
mov
sbb
int
jle
jecxz
fistpl
inc
or
lods
push
enter
mov
cld
push
jbe
mov
dec
test
imul
cmp
popa
xchg
mov
iret
xor
imul
cs
pop
pop
int
cmp
add
xor
andb
out
rcrb
or
test
shr
jge
leave
lods
xchg
in
push
lahf
sub
mov
mov
push
imul
out
cmpl
sub
jbe
or
dec
fdivr
inc
call
add
rorl
jle
push
negl
mov
xor
jae
rclb
xor
fnstcw
sahf
mov
xchg
or
inc
fdivrl
pop
add
jne
mov
jb
add
dec
xchg
rorl
lahf
push
movsb
xchg
xchg
shrb
cmp
test
mov
cltd
sti
sub
xchg
lret
stc
cmpl
xchg
fdivs
les
jp
inc
cmp
int3
xor
int3
inc
cmp
sarl
mull
xor
cld
xor
xchg
subl
bound
lea
xor
mov
movsb
cmc
shl
xchg
push
jle
jnp
or
pop
std
sbb
xor
stc
dec
inc
mov
sbb
pop
insl
xchg
fsubr
adc
pop
pop
test
push
aad
or
pop
lret
mov
daa
inc
inc
mov
xchg
pand
jbe
pop
dec
and
jg
cmp
imul
mov
mov
testl
iret
mov
add
movsl
jo
out
push
dec
sub
out
iret
mov
std
outsb
imul
lods
xor
js
jo
jmp
xlat
scas
pop
mov
loopne
jge
lcall
push
mov
xchg
fiaddl
orl
ljmp
jo
pop
mov
mov
push
jp
push
cli
inc
mov
out
ror
roll
incl
insb
scas
loopne
out
pop
push
xchg
sbb
mov
sub
mov
mov
outsb
sub
daa
bound
mov
int3
in
jnp
sbb
or
cmp
icebp
push
leave
mov
fsubrl
xor
sub
sub
negb
xor
push
mov
xchg
das
cli
iret
dec
push
into
add
sti
xor
xchg
xchg
iret
dec
test
mov
ret
mov
add
jmp
enter
gs
popa
pushf
outsb
lea
mov
mov
insb
lods
pop
pop
mov
jnp
xchg
push
sarb
stos
mov
and
xchg
les
cmp
push
pop
push
mov
jle
and
ss
daa
out
dec
mov
pop
insl
push
mov
cltd
setge
shrb
sub
pop
sub
dec
ret
mov
bound
push
or
inc
rolb
mov
push
in
cmc
push
cli
push
mov
mov
push
push
sub
push
int3
gs
mov
sti
pop
xchg
stos
lea
adc
iret
lea
pop
push
sbb
cmp
gs
jmp
insb
into
sbb
xchg
pop
fucomip
bound
xor
loop
mov
mov
iret
cmp
lods
in
and
xchg
mov
mov
adc
repnz
adc
aas
insb
outsl
adc
and
bound
dec
sbb
push
fistpl
mov
aad
out
push
test
cltd
push
imul
lret
aam
iret
and
aad
cmp
xchg
in
test
popf
mov
out
out
or
mov
jbe
jg
push
popa
mov
sbb
cmp
jb
adc
mov
enter
in
and
lret
imul
imul
push
imul
sbb
mov
outsb
mov
mov
loope
gs
inc
push
sti
mov
addr16
inc
sti
movsb
mov
adc
jnp
and
outsl
stos
mov
mov
movsb
bound
sbb
or
outsl
bound
xchg
sbb
push
cmpb
call
xchg
ret
mov
fcmovb
and
ret
fcmovnbe
out
pushf
push
push
pop
push
int3
negb
and
cmp
add
lds
jg
jbe
cwtl
and
pushf
sti
cwtl
imul
dec
es
test
xor
andl
push
pusha
sarb
jno
ds
nop
pop
cmpb
inc
adc
mov
insl
pop
jle
xor
scas
push
inc
loop
and
push
mov
and
cmp
xor
arpl
fnstenv
cld
cmp
xchg
mov
adc
jecxz
rcrl
add
jecxz
inc
push
jo
lret
cmpsl
stos
push
push
or
jno
and
pop
in
jecxz
push
ss
jno
push
xchg
into
adc
adc
dec
pop
cmp
ljmp
cwtl
addb
mov
arpl
fisubl
pop
loop
jae
jae
sbb
or
jnp
repnz
sbb
pop
popf
stos
roll
imul
lds
js
mov
mov
das
int3
push
dec
push
xor
sbb
mov
in
pusha
cmc
adc
hlt
jo
int
and
sbb
sbb
jge
jo
pop
xchg
cmpsb
push
xchg
jns
jecxz
stos
inc
dec
jnp
sbb
test
cmpsb
scas
sarl
sub
push
and
into
or
popl
data16
mov
and
jno
cmp
jp
int
adc
vpmacssdqh
int
adc
add
repnz
dec
cmp
fistl
ss
hlt
insb
and
jmp
mov
jle
adc
lret
shlb
mov
push
call
dec
insb
stc
popa
lret
nop
xchg
xor
pop
add
dec
fwait
test
test
or
loope
hlt
les
pushf
jnp
mov
pop
dec
dec
cmpsb
pop
and
daa
mov
mov
xchg
jae
push
lock
rorl
sub
pusha
sub
sbb
or
ja
push
rorl
adc
pop
popa
cmpsb
xchg
insb
dec
xchg
and
adc
dec
push
rcl
lret
scas
iret
insb
inc
push
andb
lods
inc
call
or
subl
adc
test
mov
adcl
mov
cmp
rcr
push
sbb
cmc
nop
test
addr16
xchg
sahf
aam
daa
sbb
sbb
loop
pop
mov
divb
cmp
xor
cwtl
push
lret
testb
in
sbb
jle
sbb
fimull
mov
cli
clc
push
test
ljmp
push
xchg
pop
sbb
jo
push
lcall
ja
or
addl
mov
sub
lahf
nop
mov
jae
and
push
fwait
mov
popa
push
sti
insb
int3
mov
jmp
mov
xchg
scas
adc
daa
loope
push
lahf
inc
push
push
xchg
nop
and
int3
jo
mov
inc
xor
repz
sarb
stos
mov
xor
insb
cs
pop
adc
push
jbe
dec
mov
jbe
in
popa
mov
stos
fsub
call
adc
jmp
cmp
dec
stc
jmp
js
iret
lret
cmp
push
mov
stc
mov
inc
cli
inc
out
sub
repnz
push
xchg
mov
xorl
ror
repz
xchg
cmp
cmc
mov
push
jmp
pop
ffreep
rclb
scas
dec
pop
inc
pop
icebp
insb
punpcklwd
add
pop
push
mov
mov
or
mov
xchg
repz
add
mov
cmp
ds
mov
xchg
stc
mov
iret
jmp
test
cmc
push
cmc
mov
scas
mov
and
add
push
jl
mov
jnp
fs
add
jg
xor
and
stos
pop
das
dec
mov
pusha
jle
dec
or
inc
fsubrs
ss
roll
push
or
xor
aad
xchg
dec
iret
sub
cmc
adc
sub
xor
lret
int
mov
push
pop
dec
fwait
iret
xchg
push
mov
xor
ss
dec
into
xor
leave
mov
sub
out
jmp
arpl
mov
add
out
jno
in
dec
sbb
mov
insb
push
jmp
lods
hlt
cmp
xchg
adc
adc
xchg
nop
xor
aaa
je
push
jnp
inc
imull
xchg
dec
mov
cmc
pop
pushf
adc
xchg
in
or
mov
or
icebp
sahf
test
loop
bound
rolb
or
lds
mov
mov
and
or
lods
fs
cmp
add
in
push
or
loopne
out
xor
mov
addr16
jo
pop
or
cmpsb
aam
sbb
push
in
es
shlb
xchg
cmp
xlat
fildl
rorb
adc
pextrw
push
mov
cmp
repz
call
mov
lods
fisubs
pop
sbb
xor
pushf
insb
push
pop
mov
add
xor
fbld
or
mov
nop
addr16
lret
jae
cmp
loop
call
mov
scas
jg
negb
or
inc
push
and
mov
xor
jno
push
add
loop
jle
sub
in
adc
faddp
jb
pop
add
mov
push
xchg
cmpb
mov
push
enter
outsl
dec
jnp
test
mov
cmpb
or
add
dec
jle
pop
dec
fwait
les
inc
movsb
out
xchg
bound
push
sbb
aam
mov
ds
xchg
sub
nop
dec
sbb
mov
stc
cld
cmpsb
int3
mov
xchg
enter
push
and
data16
out
popf
jnp
lret
ja
movsl
cmp
cld
repnz
fidivl
mov
hlt
add
les
lds
enter
mov
pop
adc
bound
aas
push
cs
out
mov
bound
pop
out
mov
cmc
or
pop
nop
jmp
push
pop
imul
mov
iret
addr16
inc
mov
lretw
push
pop
jo
jae
test
movsl
xor
cltd
sub
pop
das
xchg
lods
mov
pusha
xchg
cmpsl
mov
push
push
push
outsb
inc
jns
roll
popf
stos
pop
mov
pop
andb
push
gs
nop
xchg
push
mov
bound
xor
adc
lods
shl
mov
push
sub
aaa
dec
add
insl
sub
pop
inc
push
xor
xor
fs
inc
and
cmp
mov
stc
addr16
ss
enter
cmc
mov
pop
imul
sti
sar
xorl
in
sub
inc
outsb
sub
fisttpll
mov
sarl
sbb
es
sti
mov
push
sub
pop
stc
push
xchg
test
imull
scas
popa
xorb
gs
mov
xchg
fwait
xchg
les
fstl
cmpsb
push
out
cmpsb
das
popf
cmp
sbb
cmpsb
xor
mov
cltd
ret
daa
xchg
jno
test
inc
xor
add
addr16
inc
std
push
sbb
pop
xchg
iret
cmp
inc
push
fs
push
inc
push
pop
ja
add
in
adc
clc
mov
scas
movsl
bound
lock
sbb
imul
xor
push
dec
cwtl
outsl
dec
mov
outsb
jnp
jmp
mov
push
push
add
std
das
mov
cmc
cmp
in
mov
outsl
cli
lods
push
aam
ret
adc
out
repnz
in
bound
cmp
cmp
rcrb
ds
ret
mov
xlat
cmpsb
cwtl
dec
mov
cs
test
jle
and
xor
dec
dec
lret
in
or
das
mov
push
mov
jmp
in
rorb
jle
jmp
cmpsl
pushw
push
sahf
or
imul
push
pop
lock
ss
addr16
mov
pop
sub
cmp
mov
adc
xchg
xor
ret
dec
cmp
jmp
jp
sub
mov
lret
hlt
mov
cmc
call
mov
fs
push
inc
cmp
mov
bound
aaa
repnz
fstpt
mov
jmp
push
push
nop
insb
push
iret
imul
std
push
mov
cmpsb
enter
xor
into
mov
or
jmp
jg
lock
jb
inc
add
mov
adc
lret
push
pop
fsincos
cmp
pusha
push
sub
jne
push
ret
xchg
stos
inc
sti
insl
cs
fdivs
inc
xchg
pop
or
arpl
cld
aas
sbb
mov
mov
push
negb
pushf
repz
mov
out
jecxz
cmp
sti
lock
sbb
enter
fld
out
mov
lds
cmpsl
push
nop
js
push
add
dec
jno
pop
xchg
add
push
popa
icebp
stos
adc
sub
and
add
stc
addr16
push
dec
dec
xor
sbb
popa
pop
push
cltd
outsb
and
cmp
sub
cmpsl
and
cmp
test
pop
repnz
movsb
ja
inc
pushf
push
cmpsl
shl
clc
aad
lock
or
sbb
sahf
lahf
jmp
cmp
xor
out
stos
push
aas
mov
jmp
ficompl
mov
fisubl
fbstp
pop
cmpsl
in
mov
mov
mov
scas
push
jecxz
fdivs
add
mov
fwait
push
cmp
lods
lock
cmp
jno
push
loopne
icebp
push
lcall
dec
out
fnstcw
aad
out
outsb
cltd
cmp
inc
or
jmp
mov
aad
bound
sub
or
out
stos
cmp
or
sub
push
push
or
inc
ljmp
push
mov
jp
jnp
mov
pop
movsb
stc
inc
lock
jg
lea
and
lret
and
xchg
rcll
inc
fsts
lret
fwait
lcall
imull
mov
push
jmp
mov
mov
out
rolb
mov
je
aas
es
pop
sub
push
and
mov
pop
cmc
inc
lret
pop
ja
inc
pop
call
and
sahf
cld
in
popa
sbb
je
xor
push
inc
sahf
sbb
add
dec
lret
cmp
or
push
test
cmp
sub
mov
scas
bound
sbb
mov
push
mov
pop
test
sub
pop
sub
jmp
jbe
push
cltd
jbe
bound
call
scas
sub
pop
inc
movsb
iret
out
xchg
lds
lods
lods
sti
ja
pop
in
lret
mov
xor
das
push
jl
cmp
add
add
jo
jne
pop
cwtl
pop
loop
lock
or
nop
sub
in
mov
add
xchg
test
pop
flds
ja
add
mov
mov
nop
pop
stos
les
adc
call
popa
and
subl
lret
adc
sub
jbe
mov
add
cmp
bound
lods
pop
and
mov
out
xchg
jno
lods
add
xchg
or
jbe
scas
sahf
jecxz
outsb
imull
xor
and
sahf
movsb
pop
data16
mov
sti
jle
cmp
mov
jmp
out
mov
sub
jge
sub
cmpsb
jg
pop
std
sbb
mov
mov
movsb
xor
jae
cli
enter
sbb
mov
sbb
lea
mov
out
popa
mov
jae
aad
orl
int3
push
and
and
scas
add
fmull
or
xchg
mov
push
outsb
es
in
xchg
sbb
pushf
std
inc
adc
aaa
bound
push
insb
sti
loopne
testl
cmp
popa
or
mov
sbb
and
push
nop
arpl
mov
xor
mov
je
rclb
repnz
mov
lds
push
push
imul
push
sub
inc
call
sahf
jns
jns
xchg
imull
test
push
xchg
mov
xchg
jge
and
fcoml
or
loopne
add
movsl
test
push
push
fnstenv
lcall
pop
xor
inc
pushf
mov
xchg
adc
outsb
sti
in
sub
cmpsb
xchg
scas
xor
loopne
push
inc
mov
bound
dec
mov
iret
in
lock
addr16
es
pushf
push
js
movsl
sbb
cmpsb
pop
push
pusha
pop
xor
inc
scas
adc
dec
repnz
cwtl
cwtl
mov
push
test
in
cwtl
pop
xchg
jmp
jmp
nop
jo
pop
ja
or
lods
jnp
rolb
xchg
sub
or
aad
imulb
in
cmp
jl
fsqrt
sbb
lea
fldlg2
xor
sbb
imul
test
bound
test
mov
sub
clc
clc
inc
cwtl
mov
rorl
out
or
push
pop
ja
loopne
push
jo
push
lods
fs
and
mov
xlat
or
inc
cmp
idivb
sub
loopne
sbb
xor
out
rep
cli
sahf
cli
mov
imul
push
test
xlat
iret
mulb
xchg
cmc
enter
sti
shll
rcrl
dec
or
and
arpl
outsl
in
and
cmp
xor
shll
fs
shl
fmuls
mov
dec
lret
push
insl
ja
je
mov
mov
cld
enter
pop
aam
in
sbb
push
sbb
push
sub
jne
in
add
and
sub
pop
das
jmp
or
shl
sub
test
mov
sbb
iret
mov
mov
mov
out
push
mov
pop
jno
xlat
pop
iret
insb
faddp
jno
push
gs
push
mov
loopne
bound
or
cmpsb
pop
scas
lds
sbb
pusha
ljmp
xchg
or
iret
and
sahf
aam
ss
cmp
incb
pop
faddp
addr16
push
jns
xchg
int3
fdivrs
sbb
xchg
js
das
push
in
cmp
addr16
adc
es
sub
neg
cmp
lahf
test
dec
sahf
imul
cmp
jle
or
test
ret
pop
pop
shll
je
xchg
push
xchg
ljmp
pop
pop
pusha
inc
fs
xchg
test
ret
sarb
mov
jmp
sub
pop
cli
mov
xchg
orb
dec
cmpsb
insb
mov
stos
xchg
add
mov
or
addr16
insb
sbb
rcr
sbb
ror
push
push
mov
bound
mov
xchg
lahf
xor
dec
pop
mov
pop
or
xchg
push
push
inc
stos
testl
adc
cld
push
add
loopne
mov
into
dec
mov
mov
jb
mov
loope
fsub
into
das
push
and
sub
dec
call
in
sub
push
mov
add
ds
fwait
movsb
add
cmp
xorl
hlt
push
roll
jae
push
sbb
ret
and
pop
sbb
idivb
pop
xor
test
lret
cld
push
cmpsb
cltd
xor
sub
scas
mov
enter
ja
cs
sbb
jae
dec
ljmp
jle
xchg
arpl
pop
or
mov
mov
dec
sbbb
insb
mov
mov
ja
fildll
push
pusha
sbb
push
test
int3
sub
mov
pop
xorl
outsb
ds
addr16
rolb
push
and
pop
testl
mov
ret
mov
bound
sti
and
in
push
loop
cltd
adc
rcrl
insl
loopne
ss
mov
movsl
pop
outsb
loop
cld
sub
mov
ret
les
sub
rorl
xchg
mov
sarl
or
and
cmp
jle
popa
mov
rclb
push
pushl
fwait
in
mov
fucompp
push
pop
sub
or
shrl
pop
cs
pop
test
xchg
out
sub
subl
gs
xor
push
inc
cmpsl
inc
es
addb
or
jmp
push
pop
mov
cmp
loope
push
mov
bound
cwtl
bound
and
dec
and
daa
stc
pop
sub
mov
in
fildl
mov
push
push
and
jnp
pop
out
adc
mov
mov
mov
ja
outsl
ret
leave
add
push
xchg
test
add
lahf
scas
push
jns
test
mov
fcoms
jae
mov
adc
xor
mov
out
cmp
xchg
cmp
cmpsl
mov
mov
bound
cltd
fbld
out
out
pop
stos
or
in
xor
pop
or
ja
ds
cmp
out
jnp
push
ret
push
push
int
fmull
pop
bound
iret
push
and
ss
movsb
sbb
push
out
sbb
xchg
nop
push
stc
cld
xchg
es
fsubl
mov
adc
xchg
bound
cmp
push
inc
cli
mov
push
pop
mov
test
movsb
cmp
cli
sbb
into
sti
aam
lock
jb
sub
cmpsl
pushf
inc
pop
jmp
fimull
sbb
jmp
mov
pop
ror
cs
cwtl
andl
mulb
fs
mov
out
movsb
out
arpl
movsb
fwait
aad
mov
and
and
movsl
lds
mov
or
xchg
add
loopne
sti
scas
or
lcall
mov
and
daa
das
jae
out
bound
popa
push
jnp
sbb
fistpl
leave
sbbb
xor
inc
mov
mov
ret
lea
jg
and
repz
loope
mov
lods
or
mov
fisubl
call
ss
add
sahf
push
sti
cmp
nop
cmpsb
mov
dec
stos
scas
sub
movl
mov
arpl
jle
or
or
pushf
lds
fcoms
pusha
ficompl
and
mov
pop
mov
mov
push
dec
lods
data16
sbbb
call
pop
lds
sbb
xchg
xchg
cmp
scas
mov
push
aaa
xchg
cmp
mov
bnd
mov
into
test
cmpsl
sbb
pop
mov
xchg
add
je
sbb
pop
dec
jle
cmp
adc
out
ds
fsub
sbb
jnp
div
mov
dec
xchg
push
pop
enter
mov
mov
int3
fistps
lahf
pop
dec
ds
ss
fcoml
mov
scas
cs
sbb
mov
xor
lahf
jns
fdivs
rcr
insb
mov
jge
in
inc
mov
mov
mov
out
dec
mov
mov
ljmp
sbb
xor
repz
or
rolb
stos
pushf
shlb
adc
inc
imul
cltd
call
mov
and
xor
ja
sub
jmp
push
dec
xchg
inc
cs
cmc
inc
cwtl
lcall
mov
pop
out
lret
mov
push
iret
pop
cmp
rolb
adc
add
ja
mov
xor
lock
loopne
push
in
jnp
and
imul
xorl
popa
pop
jmp
cmp
pop
es
rcl
cmc
sbb
inc
sti
movhps
lds
and
mov
sti
xor
sahf
cmp
into
adc
and
add
aam
out
xchg
xchg
inc
xchg
fmuls
dec
cli
es
shr
jnp
outsb
sub
lcall
bound
aas
int
nop
gs
mov
sbb
mull
lods
push
mov
rolb
mov
xchg
rcrl
sub
push
clc
fwait
cmp
shrl
xor
pop
or
dec
or
aas
iret
cltd
loope
rcll
xor
stos
aas
jbe
push
test
mov
push
cs
cmp
sub
mov
pop
lret
mov
fstps
scas
push
dec
je
mov
adc
rclb
push
nop
push
xor
icebp
pop
mov
sbb
or
dec
jmp
push
das
clc
mov
adc
or
iret
arpl
push
fs
jae
jp
fwait
adc
xor
out
fnstenv
gs
jmp
in
and
push
fs
jns
or
pop
repz
popa
aad
mov
leave
dec
rorl
nop
daa
mov
cmc
xor
jo
stos
jp
decl
movsb
aam
hlt
fmulp
cmp
pop
movsl
jnp
popa
push
cmpsl
xchg
cmc
mov
inc
or
cli
jae
xchg
push
xchg
bound
push
push
cmp
jg
andl
sahf
or
jne
outsl
push
adc
iret
leave
add
dec
pop
xor
sub
fnstsw
dec
dec
dec
shr
in
aas
mov
and
outsl
ss
sub
lea
mov
loop
mov
push
pop
ret
mov
cltd
pop
fsubl
dec
xchg
or
adc
add
xor
pop
sbb
push
jmp
in
aad
out
movsl
out
lds
jl
insb
jmp
bound
sbb
sub
sti
sub
fdivrp
cmp
cli
add
mov
bound
and
rclb
and
addr16
dec
bound
rclb
push
fsubrs
mov
xchg
popa
sbb
hlt
loopne
mov
sub
cltd
stc
push
call
sbb
pop
or
out
das
pop
sub
jecxz
xor
jmp
repnz
push
mov
fwait
sti
push
lods
lock
xchg
jmp
js
push
or
imul
pop
mov
cmp
bsf
sbb
clc
sarb
xchg
test
shrb
jno
es
xor
sub
rorl
inc
call
sarb
jne
fs
dec
test
lock
push
xchg
in
icebp
mov
aas
push
fsubl
sub
scas
adc
pop
es
clc
push
insl
mov
inc
imul
jg
mov
cmp
fbld
push
push
cmp
xchg
dec
pop
test
notl
mov
inc
mov
push
out
aas
cmp
xor
test
xchg
orb
inc
insl
and
ret
pop
jnp
inc
out
mov
inc
andl
aaa
dec
adc
outsl
incb
push
fcomip
inc
and
js
popa
into
dec
xchg
xlat
in
loopne
push
push
nop
pop
cwtl
sbb
movsl
mov
bound
or
lahf
xchg
js
mov
es
rclb
scas
aaa
out
in
cld
icebp
sti
sbb
jb
xor
mov
jno
or
es
mov
and
int
fs
sub
iret
jmp
adc
das
in
jb
pop
push
sahf
jae
sub
movsb
push
insb
and
xchg
aam
sub
iret
mov
pusha
dec
adc
fadds
mov
and
xchg
jns
ja
addl
dec
sub
scas
and
add
lods
into
inc
mov
shl
push
out
in
push
jle
sbb
pop
mov
outsl
testl
in
dec
xchg
pop
pop
ficoms
dec
lcall
icebp
int3
shll
adc
outsb
xchg
les
add
mov
cmp
int
imul
add
fstpl
lahf
mov
add
loope
test
mov
mov
add
neg
mov
nop
arpl
xchg
mov
dec
ret
xchg
scas
pusha
cwtl
minps
aam
scas
call
cmpsb
sbb
push
inc
js
enter
shrl
xchg
add
jnp
mov
int3
fdivl
dec
push
sbb
cmc
jmp
mov
nop
loop
push
int3
pop
or
jae
rclb
lahf
mov
adc
lods
aam
sbb
and
test
add
dec
jge
push
inc
sub
mov
shrb
test
jle
push
subl
arpl
adc
adc
lahf
imul
loope
jno
sbb
lock
push
fwait
imul
push
push
movsl
sbb
push
cld
sbb
mov
dec
add
jns
shl
push
data16
cwtl
xchg
in
pop
mov
mov
int
cmp
sub
cmp
ret
fnstcw
sbb
aas
sub
out
push
pusha
xlat
push
xchg
repnz
pop
dec
adc
test
cltd
loopne
loopne
icebp
fstps
jns
inc
jne
cmp
pop
ja
popf
outsl
loopne
das
mov
xchg
test
fdivrs
cmp
sti
mov
popa
cwtl
dec
iret
xor
aas
jecxz
jmp
lret
outsb
or
push
cmpsb
scas
test
scas
stc
pusha
adcb
push
test
push
inc
out
out
adc
mov
repz
push
scas
out
push
in
je
push
mov
mov
in
out
in
stos
xor
ret
xor
mov
addr16
rcrl
lret
movsl
push
test
fistl
pop
push
mov
pop
stos
mov
mov
lcall
mov
data16
mov
cmpsl
inc
adc
pop
ret
mov
lret
and
jnp
mov
jl
dec
cmc
inc
in
jne
imul
mov
jg
inc
in
push
mov
push
push
rcll
cmpb
pop
cmp
and
xor
lods
and
or
fstl
fiadds
or
ja
push
stos
test
or
and
fisttpl
xchg
pop
aaa
xchg
fnsave
bound
int3
push
or
andl
stos
push
push
pop
in
fwait
mov
mov
sub
fsubrs
std
in
xor
jmp
sbb
cli
or
pop
nop
pop
js
imulb
out
mov
lret
mov
popf
jp
ljmp
push
cs
add
popf
xchg
adc
fsts
enter
out
xchg
rclb
mov
inc
adc
mov
std
xchg
cmp
leave
jns
add
jecxz
inc
lods
sub
push
pop
push
fs
outsl
adc
mov
lret
outsl
pushf
sbb
mov
js
jae
outsb
add
lods
jecxz
xchg
sti
dec
xor
push
cmp
je
test
shll
es
xchg
outsb
mull
pop
xchg
jle
enter
pmulhuw
les
xchg
mov
dec
push
leave
adc
adc
test
xor
lock
sbb
jae
pop
or
insb
jmp
movsb
dec
inc
xchg
fildl
rorb
sahf
test
adc
cmp
enter
pop
cmp
cmc
push
and
xchg
pop
cmp
xor
fbstp
xor
mov
stos
gs
mov
cmc
cmpl
ret
jg
testl
lds
in
gs
jo
leave
xor
push
mov
loopne
insb
dec
and
ret
lret
sbb
cmp
mov
and
es
inc
shrb
mov
icebp
ret
repz
scas
enter
ljmp
addr16
aad
push
push
out
xchg
pop
xchg
pop
xchg
adc
lahf
dec
dec
subl
jmp
lcall
push
cmp
addr16
and
sub
lock
mov
mov
inc
xchg
pop
aaa
jae
xchg
int3
add
shlb
and
pop
xor
jno
dec
pop
cmpsl
test
clc
push
iret
inc
iret
xor
xchg
sbb
push
iret
cmpsl
jae
mov
addr16
ss
push
mov
rol
inc
push
clc
jg
dec
pop
jne
push
sbb
loop
js
xchg
mov
insl
in
adc
or
lods
lgs
enter
stos
out
mov
clc
dec
ss
std
es
mov
xor
shl
mov
fsubl
sarl
sahf
in
jno
loopne
std
dec
pusha
ljmp
test
sub
lret
int
mov
cmp
ret
pop
enter
xor
and
dec
in
bound
dec
fs
fmull
cltd
nop
es
outsb
mov
test
int3
stos
enter
fiaddl
lea
fisttpl
xchg
and
cmp
enter
push
movsb
cmp
push
cmpsl
push
jecxz
mov
outsb
xchg
dec
dec
mov
imulb
mov
out
mov
jge
leave
xchg
pop
mov
sbb
xchg
push
ja
lods
mov
fisttps
push
dec
push
outsl
mov
or
jge
or
call
fisubrs
in
push
add
push
and
fadds
cmp
push
jmp
push
pusha
insl
dec
jl
sub
mov
pusha
aaa
aad
cwtl
outsl
in
adc
pop
and
xor
jne
neg
push
pop
xchg
push
int3
arpl
loopne
fs
pop
jae
adc
push
inc
subb
arpl
inc
mov
mov
mov
sahf
inc
rolb
push
and
gs
xor
jle
mov
or
cmp
aaa
push
enter
test
mulb
add
push
int3
and
iret
js
enter
cmp
popf
cld
pop
pop
jl
out
push
push
jl
cmpsb
mov
rcr
sti
hlt
out
clc
lds
mov
stos
lret
pop
loope,pt
push
xchg
fidivrl
fcoms
jns
adc
or
ret
or
in
movsl
push
push
ret
sbbl
cmpsl
scas
sub
out
inc
dec
push
fs
das
jp
aaa
pusha
push
dec
adc
out
ds
mov
mov
shrb
mov
jmp
xchg
sbb
push
fstpl
rorl
push
ret
fisttps
jb
iret
add
popl
or
popa
insb
and
in
xor
into
jne
adc
outsb
int3
insl
fidivrs
or
inc
pop
xor
jecxz
push
push
popf
sahf
and
rcr
push
mov
cli
cwtl
push
and
add
pop
dec
adcl
xor
jl
imul
xor
mov
subl
in
sbb
fwait
rcll
mov
rcll
inc
or
cmpsb
inc
shlb
or
mov
push
jle
or
sbb
cmp
ja
or
out
js
pop
shlb
frstor
inc
test
loopne
fildll
pop
adc
std
push
inc
pop
and
loopne
fistpl
lcall
adc
xchg
sbb
xchg
pop
into
mov
mov
sbb
in
sar
jnp
imul
jbe
fwait
iret
popf
jnp
cmp
aaa
scas
into
add
inc
popa
loopne
mov
cld
loope
test
sbb
movb
xor
adc
mov
pop
lods
leave
xor
add
jbe
aam
mov
mov
ljmp
sbb
add
out
mov
push
loope
sbb
add
fucomi
test
jno
pushf
icebp
repz
mov
jb
nop
and
in
das
jmp
cmp
pop
mov
xchg
cmc
int3
or
dec
outsl
sbb
inc
xchg
mov
in
lock
movsb
jmp
push
or
jle
and
pop
or
lock
arpl
icebp
dec
xchg
imul
sti
lods
mull
out
xor
lret
fsts
jns
in
sbb
ret
or
out
or
jnp
jne
out
dec
mov
outsb
push
push
add
jae
cmc
repz
movsl
jnp
xchg
les
fwait
jl
jle
data16
cmp
jl
xchg
xchg
push
jae
test
loopne
gs
jae
sarl
shll
cld
mov
lcall
and
ss
cwtl
jno
popa
int3
cmp
xchg
add
lods
cli
xchg
xlat
clc
das
lret
dec
nop
push
std
lods
cmp
push
sub
bnd
cwtl
das
out
sbb
iret
rolb
cmp
mov
addr16
cmp
jle
mov
lret
loop
push
movsb
mov
test
mov
push
enter
in
loopne
cmp
rclb
cmp
lea
adcl
scas
nop
xor
int
xlat
in
test
outsl
adc
mul
lcall
xchg
scas
cmp
rclb
jno
sbb
addr16
loopne
pop
dec
xor
jno
stc
fwait
shll
dec
out
jp
sbb
push
sbb
jmp
popa
imul
lods
cltd
lods
mov
adc
or
inc
out
das
insl
std
lcall
sbb
adc
mov
push
pop
sti
out
push
push
lods
andb
xlat
or
fsubr
test
pop
xor
jae
pop
push
push
xor
xchg
leave
or
mov
sbb
fsubrs
nop
push
pop
and
adcl
xchg
sbb
cmpsb
out
push
mov
ret
shlb
fsubs
add
mov
pusha
adc
push
out
and
cltd
je
add
rcl
std
sbb
mov
jp
gs
push
dec
or
call
or
push
push
cmp
mov
repz
pop
call
dec
cmp
lods
sub
inc
mov
push
scas
popa
mov
divl
adc
pop
out
xchg
test
fucomp
mov
incl
in
cmp
enter
inc
test
cwtl
sarb
pop
js
clc
xchg
loop
xor
iret
stos
rorl
call
rorb
arpl
push
leave
xchg
scas
xchg
inc
jno
pop
mov
fwait
movl
cmp
push
sub
inc
jne
insb
adc
push
and
ja
push
ljmp
sbb
aam
in
lret
hlt
mov
cs
mov
popa
adc
ljmp
cmp
mov
jmp
or
adc
inc
pusha
push
pop
test
dec
xchg
mov
jle
mov
movsl
pop
hlt
mov
mov
cmc
outsb
rcrb
loope
add
and
fsubrl
pushf
ja
xor
sbb
dec
xchg
add
mov
dec
arpl
cmp
push
movsb
cmp
pop
imul
jp
cmpsl
or
jb
jg
inc
cmp
lods
frstor
push
jge
bound
cmp
cmp
or
popa
mov
mov
sub
inc
xor
push
lret
dec
mov
inc
pop
test
enter
sub
jle
xchg
and
push
add
mov
jmp
bound
shlb
cmp
leave
inc
pop
mov
nop
imul
inc
or
inc
mov
sbb
push
mov
push
pop
shrb
jno
sbb
aas
aas
sti
scas
sbb
dec
xchg
inc
aas
bound
jne
jnp
jnp
or
pusha
pop
add
out
push
iret
sbb
ret
dec
sub
loopne
loop
lret
pop
push
leave
jae
and
inc
fsubrs
jle
xchg
or
or
push
push
mov
mov
dec
test
out
and
jnp
push
ss
cmp
movsb
lret
jae
jg
dec
outsl
add
js
fsts
out
adc
sbb
sbb
cmpsb
mov
lods
inc
dec
and
lods
adc
sub
sub
outsb
mov
or
outsl
inc
test
rcl
pop
out
out
fstl
fwait
enter
insb
insl
fldenv
cmpsb
mov
cmp
lahf
ja
cmpsb
fs
mov
cmp
fs
call
cld
mov
mov
cmc
mov
out
mov
or
jbe
iret
inc
xorb
add
or
push
mov
loopne
ljmp
jmp
push
jnp
xchg
adc
outsl
xlat
js
xorl
cmp
adc
xchg
xor
out
xor
ret
adc
pop
call
iret
and
mov
sahf
push
add
add
fiadds
into
mov
adc
mov
mov
dec
bound
aam
push
imul
inc
in
stos
cmp
dec
cltd
and
ds
jns
jg
adc
lods
insb
cmc
es
inc
cltd
jecxz
aad
xor
loope
cmp
mov
lcall
add
hlt
sarb
nop
aaa
hlt
je
testl
add
push
and
push
or
push
mov
movsl
insb
inc
rcrb
mov
in
rcrl
idivl
sub
mov
xlat
push
pop
lods
sahf
rorb
je
inc
test
sub
sbb
cmp
mov
nop
stc
cmpsl
sbb
sub
adc
nop
aaa
insb
repz
pop
test
imul
and
mov
push
cli
aaa
imul
jae
fwait
mov
push
fistpl
inc
into
or
stos
jmp
xchg
out
fwait
daa
lahf
movsb
repnz
lock
xchg
xchg
or
in
jp
jecxz
jmp
jbe
fisttpl
hlt
lret
xchg
sub
jmp
pop
testb
out
out
enter
or
add
or
sbb
mov
sbb
subl
shlb
add
insb
mov
dec
xor
push
cli
mov
mov
adc
xor
push
nop
dec
jb
xor
push
adc
sub
dec
push
adc
cmp
pop
cmp
icebp
push
and
lret
popa
pop
addl
jo
ja
cmpsl
or
iret
mov
cltd
call
out
jb
pop
xchg
adc
stc
mov
in
sbb
inc
lcall
out
shll
repz
or
mov
jns
sbb
dec
xor
xchg
push
pop
xchg
pop
mov
mov
and
cwtl
jmp
rcrb
xchg
xor
xchg
jmp
shr
out
pop
ret
dec
push
gs
pop
bound
cmp
and
push
cs
jmp
sbb
mov
sbb
sub
push
mov
push
mov
cmp
mulb
stos
xchg
adc
loopne
jae
xor
pusha
push
nop
call
ljmp
mov
push
inc
subb
test
sub
fwait
in
pop
loop
pop
inc
fdivl
loop
insb
pop
mov
inc
pop
aam
pushf
add
bound
fwait
rolb
mov
bound
movb
call
cld
into
or
sbb
or
dec
pushf
icebp
or
pop
cltd
xchg
jmp
subb
pop
repnz
fiadds
and
bound
sahf
push
out
jg
xchg
sbb
mov
mov
sti
out
xor
mov
mov
and
mov
cmp
loope
push
inc
jo
cltd
sbb
lret
inc
movsl
fsubl
push
push
xor
icebp
iret
sbb
inc
xor
add
pop
fcompl
icebp
mov
xor
xchg
sbb
testl
divb
decb
popa
cmpsl
outsl
rolb
sbb
xor
dec
iret
push
jb
lods
mov
xlat
adc
in
pushw
sbb
and
mov
xlat
movsb
ss
mov
test
out
jle
cli
div
jnp
insl
push
shl
sbb
sbb
push
mov
inc
or
and
and
ja
xchg
nop
adc
pop
cmp
insb
pop
iret
jno
dec
int
rep
imul
dec
cmp
inc
imul
outsb
dec
inc
pop
jo
pop
loope
push
test
aaa
int
mov
lcall
fwait
pop
xor
aas
mov
sub
cmp
pop
xchg
xor
push
addb
subl
bound
pop
lods
insb
cmpsl
dec
cltd
sbb
pop
mov
add
fsts
aad
ds
pop
push
dec
sbbl
lock
popa
inc
jmp
lret
cmp
inc
adc
jle
rclb
js
sbb
cmp
xchg
dec
jp
int3
cmc
bound
push
xor
lods
popa
pop
fwait
cld
es
fwait
sar
jg
xor
inc
adc
add
xor
adc
fisubrl
outsb
pop
pop
aaa
and
loopne
xor
js
movl
loop
inc
cmp
pop
les
push
mov
mov
test
jl
out
mov
mov
lret
push
arpl
sub
out
lret
fstpt
jno
sbb
cli
mov
shlb
adc
sub
testl
push
into
mov
push
or
int3
jae
mov
pop
pop
je
mov
push
stos
repz
je
pop
mov
lds
xchg
fnstcw
sti
daa
adc
xor
js
xchg
push
inc
mov
mov
leave
mov
mov
jmp
sbb
pop
add
arpl
jmp
sub
mov
rcrl
xchg
lahf
aas
enter
pop
into
mov
jge
shll
xchg
jp
inc
mov
jg
xchg
mov
insl
xchg
stos
arpl
mov
push
icebp
rclb
adc
xlat
pop
sub
and
lcall
pop
and
xor
add
mov
iret
int3
dec
lods
inc
fidivrl
fldt
push
jbe
or
inc
pushf
sbb
and
cmp
sbb
push
fistps
xor
jbe
int
icebp
jnp
pop
aam
cmp
fwait
or
in
push
push
jle
add
push
jbe
ja
or
adc
mov
push
sbb
sub
stos
pushf
pop
sub
and
xchg
cmp
inc
hlt
mov
lds
cmp
adc
inc
add
add
insl
sbb
xlat
mov
push
lret
inc
fisubrs
cmp
jle
ljmp
repnz
and
nop
sub
pop
dec
cmp
fimull
push
fstl
rorb
loop
jg
dec
adc
push
sahf
or
out
ljmp
push
cmp
repz
loopne
push
sbb
dec
jae
fisubs
mov
popa
push
cmp
adc
in
jg
test
add
int
dec
add
insb
stos
and
mov
inc
pop
dec
fists
arpl
or
dec
xchg
push
mov
push
sub
aas
lods
insl
push
mov
mov
loope
addr16
data16
pushf
in
adc
pushf
loopne
insb
or
mov
ret
scas
out
lods
sahf
xchg
jae
push
cmc
sub
sbb
push
iret
xchg
fldt
aas
xchg
stos
jmp
das
rolb
mov
fsubl
pop
pushf
insb
add
jnp
xor
dec
adc
into
jl
ret
cli
cmc
mov
imul
sub
xor
pop
adc
adc
and
lds
jne
pop
iret
adc
lds
and
or
dec
mov
cmpsb
or
sarb
addr16
ds
leave
cld
fucomip
mov
jmp
sub
jb
cmp
inc
out
mov
fsub
call
cmpsl
aad
ss
push
shrl
mov
popa
test
sub
adc
jno
inc
aad
test
mov
sbb
push
mov
push
sub
push
mov
jmp
mov
push
xor
push
jno
pop
and
cmp
nop
loopne
incl
rcrb
lods
sbb
out
ret
in
pop
rcl
shrb
jp
pop
and
addr16
stc
mov
sbb
mov
push
xchg
and
outsb
sbb
aaa
shrl
data16
enter
data16
fwait
push
sti
notl
lods
repz
in
push
fs
mov
stc
xchg
dec
pushf
fcmovb
cmp
movsb
addr16
jae
or
inc
call
push
movsl
xor
and
fimull
call
jns
popf
mulb
bound
enter
fistpll
sub
pusha
push
xor
shrb
outsb
sbb
fmulp
push
and
lret
cmp
test
call
or
das
repz
daa
out
push
movb
jae
jne
pop
push
mov
pop
leave
lret
mov
push
mov
and
cmp
out
xor
aam
xor
mov
adc
jle
nop
dec
negb
movsb
sbb
inc
rcl
movsl
fsubr
sbb
xchg
mov
cmp
lds
rclb
std
stc
sub
lock
inc
jbe
loop
dec
pusha
inc
jle
dec
or
test
and
movsl
in
mov
inc
mov
bound
push
ja
int3
and
int
rcrl
fwait
adc
imulb
xor
and
push
cmp
ret
popf
ret
push
cs
dec
ss
testb
mov
xchg
out
dec
jae
and
lret
lods
pop
cmp
es
mov
rcrb
ss
dec
imul
gs
mov
cmc
and
jle
pop
inc
push
cmpsl
and
mov
imul
aam
clts
xor
mov
pop
xchg
sub
sub
cltd
dec
gs
mov
mov
mov
or
push
jmp
push
adc
sbb
push
imul
dec
cld
cwtl
pop
sbb
mov
mov
mov
inc
push
sub
jns
mov
and
iret
mov
std
jae
popa
xchg
call
xlat
out
mov
xchg
fs
adc
push
aas
dec
fs
mov
or
and
jl
or
test
addr16
fistpl
xor
push
shrb
fcmovu
jecxz
push
push
popf
nop
push
cmc
push
jecxz
lods
mov
sahf
daa
cltd
shr
pop
inc
or
mov
ss
jge
gs
inc
stos
stos
pop
sbb
inc
ds
pushf
pusha
daa
aad
imul
jo
fldenv
push
stos
outsl
pop
sahf
xchg
cmpsl
xchg
fistpl
out
iret
movsl
hlt
add
stos
js
mov
mov
stos
loopne
push
loopne
cmc
out
adc
decl
mov
das
stc
push
cmp
adc
or
xchg
pop
inc
mov
sarb
insl
divl
push
push
dec
cmp
mov
inc
lea
pop
fadds
mov
push
inc
int
aaa
insl
xchg
notl
cmp
in
bound
push
pop
aaa
dec
stos
push
fcomp
push
gs
imul
push
bound
xchg
fnstcw
call
rcrb
aas
mov
imul
cwtl
arpl
pop
imul
xchg
pop
aaa
test
jle
or
add
out
push
iret
xor
jno
dec
add
inc
sbb
stos
test
cs
and
push
xchg
das
dec
jnp
xchg
dec
test
dec
mov
or
or
rcll
sbb
out
loopne
arpl
sub
loope
lods
lret
mov
inc
in
lds
pop
rcrb
push
sti
mov
inc
ljmp
xchg
mov
es
sub
lods
bound
inc
mov
mov
jge
adc
lods
dec
push
inc
mov
mov
mov
mov
xchg
inc
movsb
scas
push
cli
out
pushf
imul
std
adc
and
mov
cmp
out
cmp
cld
push
rorl
cmp
aam
fsubs
lret
call
sub
mov
les
adc
dec
push
or
rcl
xor
dec
cld
in
lea
xchg
mov
decb
movsb
push
pop
push
push
loopew
add
rorl
jl
sahf
aad
ret
in
iret
mov
mov
js
lods
sarb
push
ficoms
out
les
shll
out
push
lahf
cwtl
inc
sbb
mov
jbe
mov
adc
jp
gs
roll
sbb
loop
push
lods
inc
mov
xchg
aas
xor
cmpsb
subl
push
fnsave
and
out
je
jmp
push
subb
test
xor
js
push
jle
inc
xlat
lock
testb
pusha
shr
mov
mov
sub
addr16
les
aaa
lods
jae
fstps
and
nop
mov
mov
push
mov
mov
push
mov
and
rorb
out
cmp
in
add
pop
pop
sub
lock
and
xchg
mov
iret
push
xor
inc
mov
inc
or
fcmovb
call
cmp
sub
mov
dec
inc
pop
cmp
add
imul
leave
jle
ja
and
inc
cmc
leave
xor
jecxz
stc
push
adcl
pop
lds
or
rolb
sbb
mov
cmp
ret
enter
sbb
inc
inc
and
js
ja
and
lods
pop
cmc
lcallw
sub
jbe
mov
out
nopl
movsb
pusha
xor
in
lock
or
cmp
jmp
pop
sub
popa
jbe
jmp
add
repz
xchg
sbb
and
pop
rorb
jb
or
lret
lret
push
cmp
mov
and
cmp
iret
push
dec
mov
sbb
pop
lods
add
cli
es
mov
xchg
arpl
cmp
rol
arpl
adc
xchg
sti
js
push
jl
dec
xchg
pop
into
gs
mov
mov
push
push
dec
lds
ja
inc
and
and
nop
insb
push
adc
out
loop
into
imul
adc
gs
sbb
lret
xor
ret
cmp
mov
inc
push
dec
xor
sbb
inc
out
mov
out
jbe
jle
dec
insb
jb
sub
sbbl
pop
jmp
add
dec
push
cmp
bound
adc
sahf
arpl
mov
dec
inc
inc
or
inc
outsb
push
dec
xchg
push
jg
call
outsb
in
enter
call
mov
aas
imull
dec
jno
int
into
dec
cmp
jnp
and
in
outsl
mov
data16
iret
push
ss
mov
rolb
ficoml
jae
cltd
adc
mov
and
int
fstpt
sti
lods
xor
cmpsl
movsl
pop
mov
sbb
and
adc
aam
mov
int3
jne
xchg
cmp
mov
bound
dec
mov
and
jmp
popf
lcall
or
jns
nop
jns
pop
mov
data16
push
add
shl
mov
jne
jmp
add
mov
mov
insb
and
fmuls
popl
aaa
adc
movsb
pop
repnz
ds
pop
subl
jle
xor
inc
and
bound
cmp
sub
ffree
push
ds
dec
je
fcoml
mov
rolb
test
pushf
fsubs
or
shlb
loope
test
push
shll
int3
bound
inc
xchg
mov
lret
xor
rorb
sbb
and
call
leave
inc
cmc
inc
aaa
cltd
ret
shr
hlt
lods
clc
mov
fsubrs
xchg
pop
push
xchg
ret
cltd
outsl
bound
and
gs
call
or
mov
outsb
ja
xor
sbbb
outsl
cmc
enter
cmpsb
mov
jnp
jg
popa
and
or
or
shlb
test
ja
sahf
sub
int
test
test
inc
repz
inc
jne
iret
mov
cmp
jp
movsl
xor
out
cwtl
sub
sub
inc
xor
std
adc
stos
add
add
lock
repnz
push
repz
jecxz
in
push
jge
sahf
cltd
push
mov
and
in
aas
xchg
sarl
data16
cs
out
stc
push
pushf
mov
and
mov
mov
gs
jbe
push
push
pop
adc
daa
imul
loop
test
loope
xchg
insb
and
xchg
and
cmp
xchg
outsb
negl
int3
mov
int3
add
insb
mov
scas
sbb
enter
push
add
adc
xor
daa
in
out
cmp
jle
test
gs
inc
mov
dec
loopne
xchg
jno
popf
sub
push
or
loop
push
sahf
mov
mov
inc
jnp
pop
test
icebp
dec
mov
iret
pop
clc
shrl
lods
pop
sti
mov
imul
jecxz
bound
sahf
insl
adc
out
fs
mov
out
inc
mov
scas
pop
or
or
fists
cmovae
xchg
xor
scas
fists
sbb
lds
insl
mov
aad
push
bound
jmp
test
mov
movsl
dec
mov
push
xchg
or
push
or
cmc
or
adc
pop
jle
insb
aam
push
sub
shld
les
jno
mov
pop
xor
cmp
adcl
imulb
sbb
cmpsl
insb
pop
xchg
rcll
adc
dec
pop
repnz
sti
dec
adc
mov
and
xor
mov
mov
pop
int
add
and
ret
cmp
sbb
les
xchg
jno
fsubp
sbb
mov
add
in
cmp
sub
imul
and
incb
or
xor
pushf
jecxz
mull
fdivrl
push
aas
sbb
xchg
xor
fnsave
lds
fistl
cmp
outsl
jne
test
ss
stos
and
adc
mov
pop
popa
loop
js
inc
aas
add
inc
add
test
push
or
or
testl
aaa
xchg
ja
cmp
xlat
sti
pusha
leave
fucomp
or
cltd
cmc
mov
push
and
jge
movsb
xchg
jg
out
jne
sbb
in
mov
lahf
inc
das
int3
push
inc
aad
adc
das
cmp
aas
push
int
adcb
push
bound
loopne
xchg
filds
adc
push
fwait
aam
and
inc
outsl
lcall
lcall
push
loop
sbb
xchg
lds
insb
in
ss
mov
bound
insl
lds
rolb
jbe
shrl
fcmovbe
les
or
cmpsb
in
test
mov
and
je
xor
imul
push
sub
lret
addr16
in
lret
sub
jnp
or
sahf
js
mov
xchg
dec
call
mov
sbb
mov
prefetch
movsb
pop
sbb
or
jae
frstor
cwtl
dec
cwtl
sahf
xor
sbb
call
into
sub
and
cmpsb
mov
inc
mov
xor
fnstenv
push
daa
cmp
stos
fwait
testl
out
in
outsb
xchg
aam
pop
and
lret
pop
xchg
xchg
stc
jne
cmp
jns
js
mov
inc
mov
push
sbb
mov
and
loopne
addr16
cltd
or
push
mov
setae
pop
aam
js
mov
addr16
cmp
push
adc
mov
or
iret
cmpsb
pop
sub
mov
and
xchg
aad
lret
push
adc
mov
pop
lcall
test
rolb
call
adc
jnp
loope
mov
push
sub
es
mov
sbb
ret
mov
and
push
lods
leave
inc
inc
ds
loope
push
addr16
movl
shll
rcrl
in
ret
ds
aas
push
and
jnp
push
add
mull
inc
pop
in
call
in
push
pushf
nop
pop
push
jo
push
arpl
mov
shrl
push
leave
rclb
idiv
pop
out
insb
gs
mov
cwtl
shll
xlat
loope
mov
add
mov
dec
in
fcmovnu
and
arpl
addb
sti
imul
loope
xchg
mov
pop
jp
cld
mov
popf
push
out
aad
add
ret
outsb
stc
dec
leave
mov
cmpsb
jae
push
lret
cli
push
push
ss
jle
das
xor
sbb
jg
pop
ljmp
enter
xor
cmc
fcmovnbe
aam
jbe
pop
pop
lcall
push
std
push
wrmsr
ljmp
push
mov
mov
mull
cmpl
rclb
dec
nop
addr16
xchg
jne
adc
adc
test
mov
adc
add
mov
icebp
out
insl
push
pop
sti
inc
test
sti
addr16
or
imul
push
lret
insl
sbb
aaa
mov
dec
inc
fimuls
mov
insl
addr16
cmc
test
call
push
cmpsl
mov
pop
and
movb
inc
mov
stos
icebp
mov
pop
scas
jae
decb
and
push
movsl
mov
jns
cs
mov
imul
out
push
mov
jne
pop
dec
call
xchg
test
sbb
cmpsl
sub
fwait
jle
clc
cmp
jmp
mov
iret
adc
data16
cwtl
dec
test
jbe
insb
into
inc
iret
jmp
ficoml
in
in
xchg
mov
cmp
mov
inc
pop
adc
pop
fcoml
jmp
mov
cmpsl
and
adc
push
icebp
loope
mulb
pop
jp
dec
cmp
xorb
mov
clc
or
in
ja
fbld
repz
mov
inc
inc
mov
outsl
int
int3
stos
jg
jbe
jp
test
clts
int3
push
mov
shll
xchg
pusha
sub
imul
in
int3
loopne
mov
enter
xor
lret
mov
add
cmp
movsb
das
push
push
cmp
rclb
repnz
adc
call
mov
pop
inc
lock
ss
cmp
push
nop
cmp
cmp
push
decl
enter
and
push
jnp
mov
push
dec
sti
cli
sbb
and
inc
imul
cmpsl
inc
out
ror
jp
lret
push
leave
xor
cmpsl
mov
pusha
lock
mov
in
xchg
test
repz
insb
popf
jns
add
sub
bound
jne,pn
pshufw
hlt
ss
hlt
dec
insb
shll
inc
cli
xchg
fs
push
pop
lods
scas
out
or
scas
and
jg
jbe
xchg
aaa
cmpsl
xlat
cmpsb
jae
scas
sub
pop
test
or
cmpsl
mov
and
or
int3
mov
push
in
sub
add
or
movl
mov
lret
add
pop
mov
dec
pop
scas
dec
andb
iret
mov
stos
sbb
push
xchg
lods
push
xchg
xor
mov
xchg
sbb
ss
mov
pop
loopne
push
or
fs
mov
lret
xor
ss
cwtl
push
pop
aaa
mov
lahf
jmp
popa
les
out
fsubr
loope
inc
fsubrl
outsl
sbb
inc
ja
fisubl
xchg
call
mov
sahf
mov
push
seto
fldt
mov
cld
mov
xchg
xchg
dec
dec
xor
pop
mov
inc
fwait
in
push
lea
xor
cwtl
push
inc
jns
mov
sbb
sbb
mov
and
sub
or
cmpb
mov
nop
push
cmpsl
aaa
mov
pop
and
and
or
in
mov
addr16
mov
cld
sbb
adc
jge
in
cmpsl
push
mov
icebp
and
mull
push
sbb
xor
xor
dec
rcrb
inc
jecxz
icebp
mov
data16
leave
cmp
loope
push
lcall
lods
lahf
insl
mov
dec
call
shrb
test
mov
dec
daa
mov
adc
mov
das
fwait
mov
push
jnp
fucomip
add
mov
dec
fcmovb
pop
add
sti
sub
inc
push
rorl
inc
popf
xchg
shlb
mov
xchg
mov
xchg
and
pop
mov
xchg
out
in
dec
and
add
cmp
popa
lret
push
mov
jle
mov
sub
popa
push
aaa
mov
lds
push
dec
xchg
xor
ljmp
je
and
ret
sahf
hlt
fsubs
ljmp
xlat
sub
bound
cwtl
test
jge
sti
pop
repnz
fwait
stc
inc
nop
inc
repnz
xchg
rol
out
sub
xor
imul
xchg
in
sahf
nop
mov
push
aam
enter
out
push
je
shl
adc
sbb
mov
pushf
stos
pop
lods
mov
vmovmskps
push
iret
mov
push
lods
push
ljmp
mov
and
jecxz
sub
sbb
sbb
and
mov
sbb
or
jmp
push
call
cmc
bound
int3
jmp
movsb
dec
sub
inc
cmp
or
push
out
sbb
std
pop
das
outsl
jg
test
push
repnz
in
or
inc
ss
aaa
jge
aad
sub
ret
lcall
mov
or
bound
and
js
popf
rorb
in
lods
ljmp
daa
xchg
cwtl
pop
pushf
scas
jne
repnz
pusha
sbb
cmpsb
popa
mov
dec
fs
push
push
shl
jns
loopne
popa
out
aaa
jp
cmp
int
mov
rorb
test
ret
dec
cmp
stos
dec
jmp
test
cmp
repnz
popf
dec
cmp
mov
shlb
pop
out
sahf
sbb
push
shrb
jae
cmp
sub
insl
in
mov
and
adcb
add
mov
idivl
sbb
sbb
rcl
bound
stc
pop
push
movsb
pop
lahf
mov
fildl
iret
inc
dec
jbe
push
enter
push
cmpsl
fdivl
pop
test
cli
and
nop
push
pop
fidivrs
inc
cmp
incl
mov
and
cld
mov
ljmp
sub
push
mov
adc
icebp
jae
popf
dec
sahf
int
repz
xor
mov
std
or
into
dec
jg
push
loopne
inc
call
bound
push
lock
dec
fs
and
adc
aas
push
rclb
jns
jnp
out
out
pop
sub
inc
push
pop
repnz
rep
inc
lret
sub
fstl
and
dec
enter
int3
popa
xchg
push
xchg
hlt
cmp
pushf
fsubrl
scas
in
xchg
lock
mov
and
insb
addr16
xchg
int3
or
js
loopne
cld
imul
loop
ret
out
mov
loope
mov
pop
jg
gs
push
push
sbb
cmpsb
shl
sub
lcall
frstor
mov
xchg
push
jae
push
sahf
stc
enter
movsl
leave
and
movsb
xchg
push
test
rclb
rorl
bound
push
jl
imull
jae
es
jecxz
jmp
rcrb
jne
cli
lods
inc
jmp
shlb
inc
movsb
or
popa
mov
jge
pop
pop
fwait
test
lret
push
xor
cmpsb
scas
popa
inc
xchg
and
cmpsl
push
push
push
out
dec
jno
xor
jg
cmp
cmpsl
inc
mov
push
jmp
insb
in
adc
sahf
xor
push
mov
sti
and
add
jno
inc
dec
cmp
dec
icebp
push
dec
pop
into
xchg
jns
adc
pop
shll
or
in
sbb
inc
notl
int
lcall
js
and
mov
call
bound
sbb
add
fbstp
repz
into
cld
xchg
pop
xchg
xor
push
cmpsl
outsb
or
xorb
mov
aam
sub
mov
pop
das
out
test
iret
mov
iret
inc
fsubrs
mov
pop
sbb
fwait
inc
inc
stc
outsl
push
loop
pop
and
jb
inc
mov
cmc
mov
out
idiv
xorb
xor
xor
cld
sub
mov
push
sti
jae
scas
or
enter
imul
stos
adc
push
scas
popf
shll
inc
push
sahf
cmp
jmp
js
pop
outsl
push
mov
lods
add
sbb
mov
scas
int3
fwait
sub
inc
ret
jmp
lea
aaa
push
insb
inc
pushf
sbbl
cli
mov
test
jp
sahf
adc
out
xchg
bound
outsl
push
mov
pop
mov
jae
ficoms
sbb
out
inc
dec
add
xchg
aam
mov
and
add
shl
test
or
sub
sti
xor
xor
add
aaa
movl
jnp
xor
shr
sub
inc
das
pop
mov
into
and
push
push
xor
test
loope
push
pushf
or
iret
xor
mov
out
adc
movsl
sbb
ja
push
mov
mov
ss
and
push
jmp
xlat
out
cmpsl
rclb
dec
push
mov
les
jne
fists
ret
sbb
jmp
shrl
lret
repnz
pop
mov
pop
rcrb
data16
sbb
iret
add
cli
mov
adc
push
loopne
pop
sbb
push
add
rorb
xlat
sub
rorb
fwait
add
daa
lods
adc
rol
stos
ret
mov
jle
add
imulb
mov
fmull
divps
imul
enter
push
or
pop
test
in
icebp
pop
xorl
dec
mov
icebp
int
xor
sub
xchg
out
cld
push
mov
jno
xchg
or
or
lock
jmp
movsb
mov
lods
dec
cli
repz
je
mov
test
iret
push
js
roll
rcll
fildl
std
sahf
repnz
sbb
and
movsl
mov
push
stos
lret
and
aad
jno
out
push
stc
int3
cmp
icebp
rclb
mulps
mov
stos
shrl
scas
jecxz
repnz
jb
js
push
jae
bound
jns
es
push
and
xchg
cmc
jno
jge
jmp
xchg
inc
lods
in
jecxz
xor
subb
mov
mov
enter
imul
int3
shr
sbb
cmpsb
pop
mov
jne
dec
lock
bound
mov
lret
or
sub
mov
sub
rcll
or
scas
fcompl
imulb
push
sub
jge
jns
jae
xlat
jae
arpl
cmc
and
rclb
push
gs
pop
rcrl
aaa
fs
jle
jne
mov
sbb
mov
js
add
repz
iret
push
popf
push
sbb
pop
push
mov
aas
push
jnp
inc
inc
push
xor
mov
sub
sbb
gs
mov
test
xlat
shlb
imul
das
lods
popa
xchg
inc
and
mov
lods
sub
jb
cvttps2pi
jae
rol
inc
mov
sbb
and
call
loopne
xor
ja
jns
push
add
imull
push
sub
or
repnz
pop
ret
fidivrs
xchg
push
cmp
mov
and
stos
ss
dec
dec
leave
inc
xor
fsubl
in
shl
lret
add
aaa
lock
jl
xchg
mov
cmpsb
xor
mov
dec
push
xchg
cmp
cmpsl
mov
sub
iret
push
inc
ss
mov
jb
fimull
loope
push
xchg
jp
push
sub
cmp
pop
in
dec
cld
jmp
mov
bound
cmp
ret
enter
sbb
cmp
or
lcall
cmc
or
iret
push
mov
push
pop
imul
jnp
pushf
mov
movsl
push
dec
stc
popa
dec
or
lret
in
insb
icebp
mov
jle
dec
iret
fucomip
arpl
lea
or
flds
out
pop
into
xor
insb
fninit
push
enter
inc
in
dec
fisubrs
test
cltd
rolb
movsb
out
xchg
andl
mov
adc
xor
sub
mov
test
jne
inc
out
xchg
pop
outsl
dec
inc
fnstcw
stos
scas
sahf
cmpsl
jnp
push
movl
icebp
test
push
fwait
or
sbb
add
mov
imul
outsl
fistpl
adc
xchg
dec
jp
dec
int
cld
push
inc
cltd
add
cmp
lret
or
nop
mov
adc
call
lods
movsl
push
imull
push
cmp
mov
das
sbb
jmp
xlat
xor
sarb
insb
rol
cmc
mov
push
pop
ret
mov
lahf
xchg
add
lea
arpl
mov
and
xor
sub
add
jbe
in
clc
push
imul
out
cltd
js
jns
clc
leave
lds
cli
xchg
push
pusha
push
insb
mov
fistpl
into
push
sbb
sarb
push
mov
jne
pusha
push
push
sahf
sbb
add
call
scas
clc
adc
add
sarb
out
rep
popa
insl
pop
xor
cmc
in
iret
mov
pop
bound
add
inc
cmpsb
fdivr
les
jp
mov
mov
les
xor
push
ja
dec
aad
jg
sub
inc
mov
pop
push
add
lahf
iret
and
cmp
push
pop
pop
fdivp
gs
out
push
popl
je
mov
dec
sbbl
xor
shl
inc
cmp
pop
pop
jp
les
xor
xchg
dec
pop
aam
mov
scas
jb
or
jle
sub
inc
pushf
insl
loop
cmp
fs
mov
push
scas
mov
sbb
int3
pop
stos
test
add
cmp
pop
jbe
jno
xchg
and
pop
arpl
loope
fwait
dec
cmc
hlt
ja
stos
lret
icebp
mov
xchg
lret
aas
ja
outsl
fwait
inc
pushf
icebp
dec
push
push
pop
das
inc
jmp
xor
lcall
lods
mov
movl
push
enter
addr16
xchg
or
hlt
push
sub
cltd
pop
adc
mov
pop
mov
jle
push
push
bound
icebp
test
add
pop
call
jmp
into
add
push
xchg
and
jmp
lods
push
xor
inc
jl
xor
jae
pop
fiaddl
imul
and
cld
or
fisubrs
sub
push
imul
xchg
fs
push
mov
sub
mov
arpl
cmp
push
inc
ret
cmpsl
addr16
add
jge
jge
and
test
mov
lock
cltd
lret
cmp
sarl
jecxz
arpl
jle
pop
push
scas
stos
inc
or
cli
adc
repz
mov
push
mov
es
and
icebp
leave
push
bound
repnz
aaa
in
xchg
and
nop
push
mov
and
cmp
mov
lea
arpl
insb
push
push
ss
sahf
pop
adc
ja
adc
fsubl
dec
push
sarb
clc
xor
xor
dec
xchg
pop
push
imul
jge
fdivrs
mov
imul
add
sub
mov
das
fnsave
add
and
rol
iret
push
jns
and
pop
xor
sbb
jle
jl
sahf
shl
or
outsl
bound
jb
push
cmpsl
sbb
mov
add
push
mov
lret
mov
xor
stc
pusha
jge
pop
lods
cmpsb
cmpsl
xchg
sahf
jnp
ret
jbe
jecxz
jo
repnz
push
maskmovq
std
dec
sub
jb
sbb
in
and
fcom
gs
in
dec
shlb
sbb
jle
push
inc
ret
fdivr
xor
sbb
stc
ljmp
js
push
cmp
cmp
leave
sbb
pusha
lret
or
aad
adc
fstpl
popf
xchg
insb
iret
or
lret
mov
and
pusha
cmpsb
xor
movsl
sbb
add
scas
mov
mov
jmp
jge
cld
add
cwtl
mov
add
jae
je
stc
push
inc
sub
in
cwtl
iret
call
lahf
iret
sub
inc
push
lahf
jle
fdiv
jmp
xor
push
sahf
pop
jno
js
bound
mov
lods
es
xor
xor
repnz
sbb
stos
std
sub
sub
cltd
movsl
pop
sub
jg
inc
lahf
shrl
loope
adc
lods
mov
sbb
xchg
fisubl
jle
fucomi
stc
xchg
leave
or
sahf
mov
and
xor
imul
cmpsb
call
pop
dec
pop
out
daa
xchg
imul
inc
jle
movsb
lahf
aaa
sub
mov
ljmp
push
add
arpl
cmc
ret
or
bound
push
add
pop
and
pop
es
or
sub
pop
in
out
std
bound
adc
sub
inc
push
push
jg
xor
scas
adc
jmp
sbb
stos
mov
lret
dec
pop
dec
out
mov
sti
dec
shlb
icebp
fildll
ret
adc
push
jmp
push
adc
cmc
sub
cli
inc
xor
add
dec
pop
int
lods
cltd
sub
fdiv
gs
aas
daa
xor
in
imul
and
stc
scas
or
loop
mov
je
popf
and
mov
loopne
xor
fistpll
bound
insb
xchg
adc
fadd
insl
and
mov
adc
out
aad
mov
repnz
sbb
fcompl
inc
lods
push
push
xchg
aas
cwtl
mov
sahf
adc
xor
mov
push
pop
rcrb
pop
jmp
and
shl
orb
stos
outsl
sbb
outsl
mov
fs
pop
adc
jp
push
in
adc
clc
repnz
test
cwtl
das
inc
jecxz
xlat
repz
cmpsb
rcll
pop
aaa
sub
nop
in
lock
ss
xchg
adc
std
sbb
pop
iret
or
xchg
sbb
or
mov
out
push
pop
cmc
aam
call
dec
mov
jg
inc
test
test
js
mov
sub
xchg
out
inc
mov
in
pop
frstor
iret
or
dec
jnp
pop
ret
sub
out
push
dec
stos
loopne
jmp
bound
dec
jb
jno
nop
push
jp
jmp
icebp
arpl
dec
fwait
sti
push
and
mov
into
sub
int3
test
sbb
popa
jmp
push
pop
xorl
daa
or
iret
fwait
pop
stos
cltd
xor
dec
push
loope
call
push
pop
sub
movsb
mov
ljmp
push
nop
cmp
lods
jg
fs
aad
std
push
add
sub
dec
sub
mov
movsb
mov
push
aad
pop
fldl2e
jle
popa
test
pop
aaa
push
dec
mov
pop
in
rolb
sub
or
sti
cmc
jmp
fcmovbe
fdiv
ljmp
addr16
ret
iret
nop
cmp
inc
sarl
out
test
xchg
fdivl
mov
inc
lea
dec
stos
sbb
cmp
sbb
pop
sub
and
movl
xchg
in
out
jae
add
jecxz
repz
into
mov
cs
dec
or
adc
ret
push
mov
push
outsl
bound
pop
adc
add
jmp
xor
daa
xor
insb
int3
push
xor
popa
rolb
xchg
jns
inc
xchg
mov
push
adc
sarb
int3
dec
std
xor
mov
mov
push
dec
pop
xor
xor
out
mov
xchg
cmp
jg
mov
mov
push
das
pop
jbe
or
sahf
insl
mov
insb
stc
xor
jnp
iret
insl
leave
pop
cmp
push
dec
mov
inc
mov
dec
movsl
and
bound
push
lea
xchg
fldt
lahf
outsb
das
mov
scas
add
rcr
xor
daa
orl
cs
cmp
out
sub
es
cltd
jle
fstl
dec
and
adc
lds
xchg
adc
fwait
pop
ljmp
stos
jnp
push
sub
inc
xor
push
fsubrs
lock
jmp
xor
push
pop
das
cli
iret
mov
sbb
test
sub
dec
int3
icebp
jge
les
jns
mov
xor
inc
sbb
in
ficompl
fildl
jge
sub
andl
or
cmp
and
fstps
xor
sbb
jmp
adc
cmp
push
js
pop
fisttps
jle
bound
repz
inc
hlt
xchg
bound
shll
insb
rcrb
xchg
xchg
dec
popa
or
dec
cltd
jns
xor
push
out
into
daa
fimull
out
cli
xlat
inc
push
mov
mov
fcoml
out
movsl
icebp
xor
dec
push
inc
mov
lods
into
movsb
ljmp
cmovb
jnp
scas
push
xor
sbb
xlat
dec
lcall
call
pop
sbb
fistpll
push
push
test
rorb
sti
jnp
mov
jbe
push
sub
cmp
lret
or
cmp
jmp
and
mov
shl
xor
int3
mov
stos
or
pop
call
inc
stos
rcrl
pop
adc
loopne
test
sbb
gs
pop
lcall
cmpsb
incl
mov
testb
fs
stos
xchg
or
jle
lret
imul
lods
pop
cs
fcoml
popa
movsl
cmp
push
jecxz
pop
ja
out
mov
mov
adc
imul
rcll
lret
ljmp
addl
inc
sbb
andl
and
es
repnz
push
jmp
lock
dec
mov
out
dec
cli
insl
push
inc
cmp
ljmp
scas
push
into
cltd
outsl
push
daa
dec
push
and
sbb
mov
push
pop
and
jne,pt
and
test
test
pop
in
sub
dec
sbb
dec
ljmp
jnp
out
jle
jnp
stc
imul
out
xor
push
cmc
jg
mov
aas
lock
jecxz
aas
bound
sqrtps
int3
mov
mov
adc
push
cmp
stos
pop
int3
loopne
icebp
das
std
mov
cmpb
fisttpl
xor
aad
hlt
lods
scas
in
sub
inc
enter
test
and
push
test
push
or
cmc
sarb
jp
int
ljmp
in
sbb
es
xor
lea
jnp
ds
aam
dec
or
pop
mov
cmp
ss
push
jns
pop
es
fsubl
adc
and
div
lret
sti
pop
cld
lret
incl
lcall
push
pop
notl
out
in
push
jae
mov
mov
add
fs
xchg
daa
inc
std
bound
push
cmp
inc
pop
cltd
push
sub
jp
push
pop
jmp
mov
das
xchg
and
into
pop
mov
loopne
cmc
sub
ss
jp
sarb
sbb
mov
and
adc
test
cld
call
sbb
inc
cmp
pushf
mov
pushf
push
or
mov
inc
sub
mov
aas
jge
lret
int3
repnz
sub
adc
out
dec
lahf
cmp
mov
xchg
sar
push
xor
lret
push
movsl
mov
sbb
xor
jecxz
mov
sbbl
les
sarl
xchg
aam
call
xchg
leave
xor
fs
push
es
pop
das
push
inc
frstor
adc
imul
out
and
cmp
int
les
rclb
fsub
pop
je
out
or
cltd
and
aas
xchg
xchg
pop
iret
xchg
out
lods
das
lock
add
add
dec
cmc
mov
inc
pop
dec
into
pop
arpl
scas
xor
push
fcompl
bound
movsb
outsb
add
or
jo
sbb
dec
gs
xchg
popa
lret
jnp
mov
movl
push
stc
rolb
mov
sbbl
rorl
out
cld
enter
aam
pop
xchg
pop
sub
stos
sti
shr
pop
call
xchg
sub
jns
ret
lods
mov
jne
lret
sahf
and
iret
addl
mov
lds
ja,pn
dec
out
cmp
and
xchg
inc
mov
call
add
out
imul
cmpsl
int
pop
stos
cmp
sub
pop
insl
icebp
pop
insb
test
pusha
imul
lods
inc
push
xchg
mov
iret
sbb
push
inc
outsl
roll
pop
nop
push
dec
mov
add
loop
pop
add
mov
pop
ja
xchg
xor
pop
jmp
cmp
pop
jge
cli
cltd
dec
push
lret
push
inc
test
ljmp
jne
sub
mov
iret
xchg
mov
inc
out
inc
cmp
sbb
call
sahf
divb
jo
int3
outsl
filds
pop
inc
sti
push
pop
sarb
roll
scas
dec
pusha
sbb
bound
loopne
outsb
adc
insb
scas
push
enter
icebp
push
mov
pusha
cmc
pop
nop
mull
movsb
js
adcb
mov
xor
inc
push
loopne
lods
stos
fmuls
jge
popa
jmp
in
sti
or
stos
enter
jns
pop
cmc
inc
cltd
sbb
inc
test
push
stos
lahf
test
stos
mov
push
lds
cmpsl
push
clc
jnp
and
xor
inc
xchg
in
nop
push
mov
aas
in
jmp
dec
mov
pop
add
pop
pop
rclb
xchg
sub
and
xchg
mov
mov
sbb
cltd
inc
in
jb
icebp
pop
pop
jne
loopne
andl
sub
xchg
and
jnp
mov
nop
dec
cmp
hlt
and
cmp
push
sti
pop
sti
mov
pop
shlb
pushf
outsb
xlat
test
sbb
enter
xchg
jecxz
jae
sahf
push
jg
fcoml
dec
mov
mov
xor
jg
inc
shrb
jmp
xor
cmp
loop
mov
push
and
int3
imul
cmpsl
dec
popa
popa
call
cmpb
hlt
cmp
dec
sbb
cmovae
scas
in
call
pop
xor
and
loopne
shrb
enter
cmp
notl
mov
push
fstps
add
xor
repz
arpl
lods
jle
sbb
mov
inc
sub
xchg
imul
adc
out
mov
push
and
mov
aad
insb
sub
or
loopne
daa
cmp
fucomi
push
sub
das
push
mov
adc
movsl
jmp
int
in
lret
cmp
dec
into
rcrb
cmp
pop
insl
arpl
nop
ret
iret
in
cmpsb
dec
mov
mov
lods
push
rol
and
add
mull
out
add
cmp
inc
mov
lret
outsb
push
push
insb
jnp
push
out
pop
push
movsb
push
dec
mov
fldt
bound
mov
cmp
mov
gs
inc
test
ret
fildl
ljmp
or
movsb
neg
sub
push
mov
outsl
fcoms
xchg
fisttps
and
loopne
adc
pop
out
mov
push
add
push
aas
call
add
mov
repnz
dec
repz
outsl
sbb
lret
push
jecxz
sbb
cmp
xchg
or
cmp
sar
dec
push
ja,pt
enterw
push
outsb
push
xlat
mov
mov
or
stc
or
xchg
dec
pusha
jnp
daa
dec
fadds
mov
jmp
popf
jae
push
or
inc
lds
mov
xchg
inc
gs
pusha
sti
test
in
cmp
sahf
sbb
aas
xor
out
add
data16
mov
stos
rcll
test
jbe
test
ds
out
cld
insb
mov
call
mov
mov
jg
mov
sbb
sarb
shlb
inc
dec
jb
lret
lahf
loope
jmp
js
int
pop
cmp
xchg
sti
cmpsb
mov
jb
mov
inc
push
or
aaa
xlat
jg
mov
mov
add
xchg
jge
pusha
mov
push
mov
stos
cmc
adc
cmp
out
jnp
mov
in
push
data16
xchg
mov
mov
leave
arpl
cmp
xchg
leave
cwtl
dec
into
imul
and
and
or
lock
or
stos
loopne
sub
pop
ret
repnz
movsl
xchg
scas
xor
mov
adc
cs
ds
pop
aad
lahf
lret
pop
js
xchg
and
adc
lret
push
cmp
mov
mov
aas
fs
xor
movb
mov
jecxz
mov
scas
cmc
jge
jno
push
push
mov
dec
add
enter
ljmp
test
inc
je
bound
call
mov
outsl
push
fwait
scas
jae
int3
insb
lds
inc
ja
jb
rclb
or
outsl
enter
add
test
mov
ljmp
and
jno
cmp
push
sbb
insb
jno
xchg
cwtl
jg
pop
arpl
sub
push
mov
test
sub
sti
call
std
add
outsb
jnp
cmp
shrl
inc
xchg
xor
aad
jns
in
call
and
bound
jp
cmpl
mov
cld
ret
and
add
in
mov
adc
jle
dec
pop
cmpsl
and
dec
outsl
test
adc
nop
adc
fadds
fsubrs
jmp
push
fsubrl
pop
test
nop
test
xorl
lods
sbb
pushf
rcrb
repnz
in
int
xchg
mov
mov
add
dec
inc
pop
outsl
jbe
jmp
insl
ret
psubsw
or
out
jno
daa
fmull
shr
sbb
ja
mov
push
in
push
sbbl
pop
popa
gs
inc
pop
mov
mov
cmc
das
cmp
rcrb
and
mov
jg
ss
jl
insl
and
pop
test
cmc
and
in
push
mov
es
inc
xchg
imul
or
out
ds
outsb
push
bound
in
sbb
jno
mov
aad
xor
xor
pop
dec
xchg
movsb
pop
cmp
iret
sti
sbb
stos
fs
mov
pop
adcb
insb
jo
aas
ds
push
sti
addr16
pop
push
and
sub
jmp
jmp
or
test
pop
idivb
addr16
popa
cwtl
sahf
sub
shrb
fnsave
addr16
lds
adc
mov
test
dec
mov
scas
andb
out
add
sub
pusha
aad
sahf
scas
lret
loope
pop
out
xchg
loopne
pushf
mov
sahf
mov
sub
pop
adc
inc
jle
mov
not
add
jle
xchg
pushf
xor
push
push
sub
push
add
test
and
lea
js
xor
mov
inc
not
push
inc
sub
enter
fcoml
cli
cmp
and
cmp
clc
sahf
stos
lahf
lcall
repnz
pop
gs
pop
rorl
aad
outsl
jecxz
aam
xchg
or
adc
icebp
jmp
sbb
popa
les
test
loope
and
add
add
lret
repz
pop
mov
out
add
enter
dec
mov
loope
mov
sub
xlat
inc
mulb
or
in
jo,pn
test
enter
sub
dec
mov
adc
ret
inc
jg
lods
dec
inc
xchg
lods
inc
mov
clc
lret
xchg
dec
mov
sbb
in
sub
insl
in
insb
and
and
sbb
punpckhbw
imul
push
lcall
jb
sbb
jmp
push
test
ret
cmp
int
call
rcrl
stos
push
repnz
lret
sub
push
cmp
test
insl
or
cmp
ffreep
mov
nop
fbstp
cmc
push
inc
ror
bound
movsb
cltd
iret
xchg
fsub
push
inc
movsb
sub
jg
cmpsb
int3
push
jle
mov
mov
xchg
les
shll
shl
cmp
xor
ds
pop
sub
fucomip
shl
fisubrl
clc
add
shl
inc
fwait
and
lcall
mov
popa
jl
jae
inc
pop
test
mov
pop
lret
imul
xor
jnp
hlt
mov
and
pop
stc
cmp
add
jnp
stos
xor
popf
sub
sahf
test
xor
xchg
jg
sbb
mov
out
push
push
lock
flds
and
lret
mov
cmp
cwtl
addr16
pop
loopne
jge
rolb
dec
cmp
cmpsl
xor
stos
repnz
in
sbb
cmc
shrl
lds
loopne
push
mov
arpl
fwait
ja
movsb
iret
mov
scas
lret
adc
mov
cmpsl
sbb
xchg
mov
ret
ljmp
mov
shrl
xor
sub
adc
psubusb
adcl
sub
mov
test
mov
nop
in
jmp
imul
mov
daa
lret
test
sahf
mov
mov
mov
dec
sahf
dec
iret
push
mov
flds
fwait
push
inc
cmp
or
mov
test
push
stc
xor
sbb
cmpsl
lret
and
fwait
sti
mov
mov
std
push
xlat
sub
js
mov
imul
ja
test
dec
sahf
mov
fildl
sub
sub
or
stc
inc
mov
dec
mov
mov
and
jle
pop
jbe
movsl
dec
test
mov
add
stc
adc
sbb
pop
sub
and
cmp
loopne
jno
push
mov
insb
sbb
sbb
call
test
adc
cmp
inc
sahf
lret
inc
jnp
mov
lret
pop
mov
das
mov
hlt
std
in
mov
push
lea
lds
imul
mov
bound
jecxz
adc
test
das
jmp
xor
stc
and
cltd
rcrl
xchg
push
fdivl
sbb
push
xchg
dec
add
scas
nop
cltd
mov
xchg
les
pop
adc
sub
push
adc
fisttps
lods
leave
sarb
push
in
fcomp
cmp
gs
pop
and
push
mov
jle
jmp
push
xlat
addb
pop
loop
and
fmuls
push
sub
mov
mov
lahf
add
xchg
enter
jno
je
push
push
es
imull
sbb
enter
into
outsb
sbb
push
mov
sbb
pop
gs
fcoms
sahf
mov
vmread
scas
fnstcw
not
shl
push
inc
mov
sub
cmpl
xor
lock
lds
gs
xor
aaa
push
out
or
ret
push
fdivl
nop
mov
pop
out
sar
bound
or
stos
dec
push
fimull
pop
cld
xor
ficoms
add
hlt
fstpt
adc
and
sub
jbe
push
mov
in
in
lar
rol
dec
jmp
dec
out
gs
enter
les
cltd
iret
test
jge
outsb
imul
push
es
les
fnstcw
push
out
imul
ficoml
xor
xor
jb
mov
sahf
call
inc
mov
xor
enter
mov
call
stos
dec
arpl
incb
fsubrs
fldl
orps
mov
jl
in
mov
in
lea
cmp
das
push
loop
lret
arpl
pusha
mov
cs
pop
xor
inc
add
insb
push
ds
lock
push
xor
jo
movsb
bound
dec
roll
fsubr
cmpsl
cltd
fwait
out
adc
stos
jb
jnp
inc
sub
jmp
xchg
xor
aad
sahf
or
sub
and
sbb
pop
pop
sbb
push
mov
push
lret
fcoms
and
xchg
bound
or
out
nop
ja
sbbl
stos
sub
ret
xchg
loop
pushf
mov
jecxz
call
pushf
xor
into
push
jmp
insb
sub
jmp
push
push
sub
loop
xchg
pop
sbb
mov
sub
push
bound
inc
addl
sub
cmp
sub
dec
or
in
or
pop
fdivl
test
outsb
jo
cmc
xor
in
push
mov
sti
xchg
out
bound
aam
stos
inc
adc
xchg
and
mov
mov
mov
inc
lods
addr16
mov
push
push
adc
sbb
out
pop
imul
xor
mov
inc
sbb
stc
jp
es
mov
fisttpl
lods
pop
fcmove
sarl
pop
aam
lcall
imul
mov
push
mov
out
sub
dec
test
fistpl
inc
test
and
loop
jle
cmpxchg
movsb
mov
movb
pop
cwtl
outsb
jmp
xchg
cmc
sub
jmp
pop
das
daa
or
hlt
iret
pusha
sahf
shr
cmpsb
scas
dec
cmp
mov
push
adc
push
out
loopne
loop
pop
ja
pop
sbb
xor
sub
pop
xchg
cmpsl
jbe
xchg
repnz
mov
lahf
aaa
fisubs
call
dec
test
insb
imul
push
pusha
pop
cmpsl
mull
dec
cld
dec
add
out
cmp
es
dec
sar
jo
es
push
cltd
pop
les
shl
adc
sti
ret
lds
cmp
fisubs
ror
imul
cli
dec
and
call
and
jno
enter
cmpsl
mov
sub
int3
out
cmp
mov
adc
pop
push
or
mov
mov
push
add
test
bound
push
sub
fldl
jp
xchg
jg
in
daa
pusha
dec
lret
call
bound
test
lea
jmp
cmpsl
mov
popa
cld
dec
aaa
test
repnz
cmc
popa
ljmp
sbb
dec
add
in
das
push
inc
arpl
ljmp
cmpsb
cwtl
lea
cmovge
arpl
dec
lret
adcl
jae
test
fsubl
in
add
xchg
mov
pop
in
inc
push
dec
mov
enter
or
lods
in
pop
mov
lret
add
mov
add
fisttpll
fldl
mov
push
or
mov
scas
outsl
icebp
cmp
xchg
jae
sar
bound
movsb
inc
inc
sbb
dec
lret
bswap
pop
lods
jno
testl
jae
pop
mov
incb
inc
into
outsb
repnz
inc
push
add
arpl
pop
add
pop
push
lea
xchg
imul
andl
pop
aaa
mov
fwait
push
outsl
dec
lods
sub
sub
outsb
bound
and
push
sti
lods
pop
dec
fwait
push
daa
fsubrl
inc
xchg
das
or
mov
mov
dec
mov
mov
sub
out
add
push
scas
enter
es
push
mov
imul
push
les
xchg
imul
mov
dec
adc
rcrl
adc
mov
dec
arpl
outsl
dec
inc
fisttps
xchg
push
push
cs
test
es
je
or
les
mov
mov
cmp
test
mov
push
cmp
jp
or
fistps
sarb
into
add
out
dec
in
cmp
sbb
mov
mov
mov
loope
ret
sub
cli
jno
push
add
imul
test
cmp
push
mov
mov
bound
lcall
rcr
aam
sbb
jge
inc
outsl
nop
aad
adc
rcll
mov
pushf
xchg
nop
lods
jb
or
loope
je
cmp
lret
movsb
imul
add
xchg
and
fs
mov
push
jae
push
sahf
in
std
bound
fistpl
loopne
pop
sbb
adc
or
mov
add
cld
mov
fnstsw
ret
sti
stos
ljmp
ja
loop
fcoms
les
jae
push
iret
iret
push
cmc
pop
out
xchg
push
mov
pushf
aad
xor
or
dec
xor
lock
mov
sub
orl
das
test
iret
cmc
es
and
sub
sub
imul
jmp
dec
pop
gs
sub
aas
push
adc
ficoml
xchg
push
test
int
stos
jmp
jnp
cmpsl
fs
fimuls
inc
cmp
stos
sbb
cmp
movq
dec
mov
cs
xor
cld
sub
dec
sub
fs
inc
inc
inc
mov
aaa
rep
sbb
enter
fs
or
sbb
push
aas
and
bound
jbe
pop
ss
cmp
pop
push
mov
test
mov
inc
or
loopne
add
inc
sbbl
add
jae
jno
add
push
ja
mov
mov
push
adcb
into
xchg
cltd
ja
xor
test
aas
ds
push
push
mov
notb
insl
fcoml
movsl
imulb
pop
pusha
push
push
lea
mov
pop
push
inc
stos
dec
add
stos
testl
cmp
andb
movsb
cmpxchg
lods
arpl
xor
imul
mov
scas
out
fstl
mov
dec
dec
add
jb
popa
call
sti
ret
int3
lods
in
jnp
cwtl
imul
xor
sahf
pusha
add
es
mov
movsb
gs
imul
filds
lods
arpl
mov
push
mov
call
aam
fcoms
ljmp
out
xchg
fistps
adc
repnz
sahf
cwtl
xor
mov
mov
xor
push
notl
aas
insl
rolb
bound
jne
and
add
shl
add
pusha
sbb
fs
cmpsb
repnz
clc
add
inc
adc
mov
repnz
sbb
sahf
add
nop
push
inc
push
or
loope
xor
push
lds
aaa
repnz
out
inc
sbb
xchg
enter
out
jne
jne
sub
push
pop
jo
fcoml
cltd
fadd
push
scas
add
push
jae
sub
jmp
push
add
add
pop
push
inc
pusha
dec
ret
ja
test
fadd
lds
lea
mov
or
mov
in
ja
pop
rolb
lods
add
mov
mov
mov
jg
jbe
bound
cmp
xchg
adc
lcall
popa
push
dec
adc
aaa
ja
jns
stos
pop
mov
js
pop
or
cwtl
or
int3
inc
iret
loopne
ss
cmpsl
mov
push
mov
stos
stos
out
out
pop
imul
ret
fldenv
scas
cmpsl
ja
gs
movsb
cmpsl
pop
out
mov
inc
lcall
mov
push
bound
mov
int3
stos
push
cmp
add
ret
sbb
pop
movsb
adc
mov
jns
test
mov
cmc
popf
mov
cltd
call
push
mov
call
add
push
scas
xchg
push
push
loopne
out
scas
push
in
cmpsl
cmp
std
bound
stc
push
mov
add
pop
sarl
push
stos
jns
xor
loope
or
sbb
call
xor
sub
pop
mov
push
dec
and
push
imul
pusha
or
adc
add
jmp
xor
mov
jb
mov
fucomip
mov
jne
mov
cmpb
fcomi
popa
add
lds
fwait
dec
scas
cs
lret
jns
pop
repz
jae
push
fwait
out
bound
mov
adc
sbb
cmpsl
add
les
and
jne
push
pushl
mov
imul
sub
sub
sub
lret
cld
pusha
repnz
ljmp
dec
xchg
fcmove
dec
cmp
stos
insb
mov
cmp
jbe
pusha
gs
mov
fwait
pop
call
sbb
inc
xor
call
xor
adc
leave
push
ss
dec
push
xor
inc
sbb
insl
dec
jmp
out
adc
in
and
imul
xor
sbb
ljmp
add
adc
jne
sub
inc
roll
mov
fs
mov
sbb
in
push
and
sahf
dec
pop
jnp
fstpt
inc
fisubrl
es
dec
enter
icebp
xorb
mov
shll
das
pop
lret
and
push
xchg
add
loop
push
or
out
fildll
das
lods
shrl
push
rol
fs
hlt
xchg
movsb
cwtl
jle
push
repz
addl
mov
cmp
pop
jmp
mov
adc
mov
enter
sbb
sub
push
outsl
add
sub
fstpl
mov
stos
scas
jle
jmp
lcall
pop
arpl
cmp
cmp
imul
es
call
jmp
xor
push
hlt
cmc
push
cld
mov
rcrb
push
pop
sarl
cmc
mov
and
cwtl
xor
jp
mov
add
int3
fdiv
jle
push
push
inc
mov
jecxz
push
sbb
xchg
lret
scas
adc
mov
fs
ret
int3
nop
call
rorb
xor
bound
push
dec
ror
test
mov
lock
dec
or
ret
push
js
push
add
sahf
push
cmpsb
xchg
mov
cmp
scas
mov
in
fcompl
rcr
push
test
inc
out
and
jne
mov
xchg
xchg
jmp
inc
cmp
pushf
bound
mov
push
xchg
xchg
dec
int
xor
test
sbb
mov
aaa
cmc
pusha
push
push
dec
push
in
imul
xchg
test
loop
push
sti
xor
add
ja
lods
mov
xchg
fadds
call
mov
add
popf
hlt
icebp
xchg
push
ss
jnp
xor
pop
mov
add
pop
sub
sbb
xor
mull
adc
xchg
sti
popl
push
and
pop
iret
inc
out
popf
or
fimull
hlt
test
out
ja
stc
push
adcb
clc
fiadds
mov
lds
in
and
sbb
mov
gs
nop
xlat
in
cmp
and
in
cld
sahf
sub
lret
lahf
mov
inc
imul
scas
jns
or
nop
cs
outsl
stos
stos
ja
gs
xor
das
daa
std
jg
or
loopne
push
cmpsb
in
gs
sbb
and
cmp
movsb
icebp
push
inc
and
jno
sahf
ret
xchg
int
test
dec
das
xor
pop
loop
fstps
andl
jno
popa
call
push
lret
out
push
mov
mov
and
sbb
int
or
dec
mov
sub
aad
hlt
inc
xchg
or
cmp
pop
dec
das
rclb
add
dec
pop
insl
incb
jo
lret
mov
cli
jecxz
aad
jb
sbb
push
pusha
hlt
lret
pusha
or
ret
mull
aam
in
stos
imul
bound
dec
pop
fwait
push
mov
pop
pop
adc
sbb
faddl
jns
dec
loope
cmp
push
sbb
iret
iret
pop
inc
pop
mov
xchg
sub
bound
ret
adc
adc
loop
mov
enter
mov
outsl
addb
cld
iret
lret
and
or
push
fadd
mov
aam
mov
ds
lock
cltd
test
xchg
push
sub
jnp
loopne
push
xlat
pop
pushf
push
rcr
loop
xchg
jle
cwtl
fstpt
int
punpckhwd
mov
mov
mov
stos
push
iret
xchg
or
inc
in
daa
push
mov
mov
mov
add
push
add
scas
jbe
out
mov
cmovns
sub
jo
jecxz
dec
xchg
roll
add
jg
and
movb
fs
sbb
push
pop
xchg
xchg
sub
jecxz
inc
pop
push
or
pop
cltd
cmp
popf
dec
and
dec
cwtl
pop
in
sub
adc
insb
orl
imul
or
call
and
push
scas
mov
pop
push
testb
bound
and
mov
mov
mov
xlat
nop
bound
ret
jmp
jmp
inc
mov
cmp
pop
cli
in
push
mov
fs
repz
fidivrl
mov
iret
loopne
iret
hlt
xor
fsubrl
xchg
add
enter
sub
and
mov
xchg
inc
and
ds
and
mov
push
arpl
inc
shlb
sbb
or
cli
out
enter
cmp
pop
aam
or
xor
mov
mov
in
jmp
adc
sbb
cmp
pop
gs
es
and
pusha
jae
push
push
xor
out
jmp
repnz
inc
pusha
cmp
call
push
cmp
gs
outsl
push
cmp
adc
push
addb
rorl
loopne
insb
fwait
sub
jecxz
sbb
sub
sbb
dec
jnp
es
jmp
xlat
out
in
popa
jae
lods
pop
push
cmp
repnz
pop
mov
and
sub
in
pusha
inc
insb
loopne
test
mov
lods
inc
daa
or
outsl
push
push
cmpsb
push
iret
mov
ret
enterw
add
fs
pop
bound
push
std
mov
sub
fdivrl
lret
std
cmpsb
popf
bound
je
push
int
into
xor
cwtl
mov
aaa
jmp
dec
push
sub
out
push
bound
or
xor
sub
xor
push
aad
adc
popf
roll
das
cltd
push
and
cli
mov
ficomps
push
cltd
mov
stc
xor
adcb
enter
adc
test
push
cmpsb
mov
sbb
pop
std
cmc
push
fisttps
pop
out
mov
mov
mov
jecxz
es
fld
push
jmp
mov
mov
inc
sub
push
push
and
add
add
push
cmpsb
sub
je
xchg
enter
or
cli
pop
mov
lock
sub
pop
and
push
and
cmpsl
ljmp
xor
mov
or
daa
inc
imul
fcompl
loop
in
inc
mov
add
call
fimull
stc
leave
sub
xlat
mov
sub
cmp
ret
add
jo
addb
cs
cmp
arpl
enter
mov
pop
cmp
mov
xor
mov
pushf
xor
fs
mov
push
fcomi
adc
xchg
bound
or
jg
mov
gs
in
jmp
icebp
jns
pop
pop
push
fcoml
pop
push
sub
inc
xchg
es
mov
xchg
cmp
gs
repz
sub
jecxz
ss
icebp
mov
cwtl
shll
out
mov
push
dec
lret
dec
sbb
je
or
out
out
push
fisttps
gs
aad
push
ja
sbb
inc
enter
stos
mov
ja
cmpsl
imul
xor
push
push
daa
iret
jae
fs
bound
pop
roll
imul
push
call
pusha
or
mov
lods
rcrb
and
idivb
or
stos
stos
adc
or
sub
mov
vpmaxsw
jbe
mov
aam
cltd
push
jns
lods
test
jmp
xor
rclb
insb
cmp
movsl
jbe
xor
push
cmp
or
faddl
leave
inc
push
xchg
setb
mov
inc
and
push
fiaddl
mov
ss
dec
scas
fwait
and
data16
pop
jbe
ljmp
jg
mov
in
lock
push
xor
daa
sbb
push
iret
sbbb
push
pop
out
lret
in
sub
fstpt
cmp
mov
iret
cs
outsb
test
and
scas
and
icebp
test
cs
icebp
outsl
mov
les
rorb
pushf
fwait
test
pop
outsl
push
lret
jae
fdivl
pusha
ror
push
or
iret
pop
pushf
jmp
int3
stos
mov
ret
mov
cltd
jge
dec
inc
mov
sub
iret
push
out
xor
sbb
dec
lea
pop
lods
out
arpl
out
inc
ljmp
movsb
mov
data16
xor
arpl
imul
sbb
and
int3
inc
mov
sub
or
xchg
mov
mov
pop
inc
pushf
out
mov
push
iret
fs
dec
or
imul
fwait
loopne
push
loop
cld
je
sahf
sub
xchg
ss
push
fsubrs
stos
push
add
sbb
or
sub
aam
cmc
push
push
popa
ja
jge
rcll
inc
jg
mov
cmpsl
icebp
in
adc
push
add
gs
pop
cli
sbb
or
pop
cmc
fdecstp
divl
adc
sub
jns
sbb
pop
pusha
cmpsb
jmp
and
fstl
cmp
sub
imul
or
pusha
jnp
dec
ja
popa
ljmp
mov
pop
push
or
sub
pop
pop
push
and
sub
ret
adc
sbbl
lea
outsl
jg
lcall
lret
cmpsl
vpand
inc
xor
cltd
subl
or
out
cmp
repnz
pop
push
testb
cld
xor
sub
xlat
test
xchg
insb
ret
mov
imul
iret
sub
nop
idivb
inc
lds
lods
cmc
dec
sbb
fisubrl
sahf
mov
fstpl
scas
stc
addr16
fdivrs
sbbl
aaa
lcall
pusha
movzbl
lds
rcrl
dec
call
ja
sarb
iret
xchg
out
jle
cwtl
or
ret
clc
call
xor
cmp
push
and
lcall
cmp
jno
jnp
iret
jg
outsb
ficoms
outsl
or
sub
iret
ljmp
loope
push
sub
bound
ja
sbb
push
sarb
scas
mov
jmp
pop
mov
sub
xchg
sti
jl
sahf
out
jge
into
imul
std
out
fwait
sbb
addr16
jnp
push
xchg
ljmp
xlat
test
stos
adc
out
cwtl
mov
jbe
pop
outsl
mov
cmp
push
in
push
ds
jg
mov
and
int
sbb
sub
xor
shlb
cmpsl
or
push
imul
push
push
sub
mov
pop
scas
push
cmp
test
add
xchg
mov
stos
push
push
lods
shr
popf
filds
in
test
enter
icebp
jmp
mov
cmova
movsl
dec
icebp
nop
andb
lods
mov
repnz
dec
xchg
mov
mov
cmp
jnp
push
mov
sub
jno
dec
and
leave
dec
jl
jne
lret
in
in
mov
or
fs
sbbl
pop
adc
add
ja
outsl
ljmp
xchg
test
movups
ds
hlt
inc
imul
inc
mov
pusha
dec
ljmp
adc
mov
push
hlt
ljmp
and
or
add
xor
pop
fsubrs
cmc
ret
mov
sti
loop
mov
outsl
imul
cmp
sahf
dec
jae
out
adc
rcll
jmp
out
xor
push
aaa
mov
push
rorb
lret
lds
cs
ja
cltd
aaa
aaa
fld
ror
sub
push
push
and
xchg
cmc
and
and
push
xor
fbld
cltd
popf
les
loop
jg
sbb
gs
in
divl
scas
adc
xchg
outsb
clc
mov
mov
add
outsl
dec
push
repnz
sub
imul
imul
push
movsl
das
shrl
cmpsb
iret
jnp
popf
js
loop
ret
mov
cld
xor
jae
push
jg
inc
mov
in
or
inc
ret
jmp
add
enter
pop
mov
inc
jle
xchg
fisubrs
mov
pop
scas
out
mov
movsl
negl
add
into
mov
inc
pop
in
jne
sbb
or
pushf
insl
sahf
lods
xor
aas
stc
mov
cmc
jnp
movsb
sbb
mov
bound
repnz
dec
dec
cmp
imul
enter
push
jge
movsl
fwait
mov
lcall
js
jmp
dec
andb
hlt
in
scas
lds
pop
mov
das
loop
jo
imul
repnz
lods
stos
sbb
ficoms
and
mov
mov
cltd
sbb
mov
stos
fimull
outsl
sahf
rcr
call
outsb
in
cmpl
ds
aad
dec
and
jl
fidivl
mov
dec
push
push
sbb
inc
dec
fwait
pop
fldt
sub
push
push
fldcw
addr16
jmp
enter
push
stc
pop
and
popf
int3
cli
pop
inc
cmpsb
add
cli
jle
stc
negb
popf
in
cmp
push
in
fists
push
lds
dec
pop
repnz
mov
jg
lret
xchg
test
enter
in
lret
in
ss
xchg
stc
inc
push
and
sub
dec
pop
sub
loope
jne
daa
std
cmp
jle
mov
adc
bound
rorb
jge
pop
iret
out
xorl
adc
sbb
insb
add
lcall
mov
mov
add
mov
das
push
mov
push
lcall
bound
adc
mov
xchg
dec
xor
adc
sbb
mov
mov
push
cmpxchg
out
jmp
bound
push
test
pop
add
push
xchg
fldt
cmp
pusha
pushf
jge
jno
shll
ficomps
mov
dec
cmp
bound
pusha
mov
ret
adc
and
and
cmp
pop
lret
rolb
cmp
inc
push
rcrl
clc
jne
mov
bound
jae
idivb
ret
sti
pop
push
mov
lret
sarb
rclb
fsubrs
aam
fildl
iret
sbb
mov
inc
sub
mov
adc
xor
inc
and
xor
push
dec
mov
je
or
in
push
sbb
xor
jns
jecxz
aas
rclb
and
cmpsb
inc
pop
in
iret
push
js
insl
out
repnz
and
or
out
ss
push
cwtl
jp
movsb
bound
xorb
scas
scas
push
inc
fs
pop
and
dec
in
pop
int
lahf
sti
add
imul
int3
mov
pop
mov
mov
out
sub
jp
scas
add
test
jg
jmp
gs
ljmp
and
call
sbb
push
inc
cmp
imul
pushf
jl
pop
movsb
rolb
xchg
jne
pop
popf
mov
ss
jle
add
pop
bound
pusha
shl
jne
jg
scas
lock
mov
imul
mov
fildl
dec
lods
mov
lds
mov
pop
sbb
cmp
adc
push
fbld
and
rcrb
xchg
les
sahf
push
adc
std
mov
mov
or
cmc
into
aas
test
jle
fidivrl
das
repz
jmp
or
push
add
lcall
loopne
pop
insl
jl
xchg
inc
jmp
mov
ficomps
push
ret
fs
mov
ret
fcomps
sub
pop
daa
mov
pop
and
fwait
rcrl
push
add
or
loope
cmpsl
jb
jle
mov
loop
das
stc
mov
adc
shl
mov
sbb
adc
and
call
fwait
rsqrtps
pop
lock
cwtl
cmp
xor
icebp
fldt
pusha
sub
bnd
gs
clc
scas
mov
mov
ret
dec
fdivrs
xchg
sub
push
xchg
dec
mov
lea
mov
ds
pop
push
bound
and
or
lahf
xchg
mov
inc
loopne
dec
push
popa
xchg
iret
in
add
and
and
sbb
push
xchg
sub
and
lock
pop
inc
dec
or
xorl
inc
outsb
int3
mov
mov
adc
enter
or
stos
lcall
mov
fcmovu
je
loop
xor
lock
shlb
repnz
sub
xor
pop
xor
stos
push
ret
xor
add
push
shll
sub
push
inc
push
mov
lods
shll
mov
cld
aam
or
outsb
adc
gs
loop
testb
mov
fwait
cmp
dec
icebp
int3
push
movsb
push
rclb
xlat
imul
pop
movl
fcompl
int3
inc
push
imul
hlt
and
pop
fmuls
sbb
jl
xor
cltd
add
stos
idivb
es
jl
push
stc
lahf
adc
cmp
jae
call
test
push
pop
or
cmp
mov
push
hlt
jmp
fbstp
adc
mov
push
inc
fadd
cmc
or
cmp
dec
clc
mov
inc
out
pop
jmp
push
push
inc
xchg
sti
or
jecxz
in
xchg
adc
mov
adc
adcb
cmp
adc
push
rcll
popl
or
sarb
lods
ret
icebp
fbld
fldcw
fdivrl
in
push
jge
push
stos
cld
add
push
xchg
std
orb
pusha
dec
pop
cmpsb
loopne
push
aas
mov
mov
repnz
mov
mov
cwtl
xchg
add
cltd
movl
stos
dec
sbb
and
or
inc
dec
inc
adc
fsubl
jno
pop
sub
dec
mov
shr
push
mov
ret
mov
jmp
aam
arpl
subl
std
or
pushf
testb
out
sub
or
insb
and
pop
jae
push
mov
daa
repnz
push
push
jnp
repz
mov
xor
stos
inc
adc
dec
push
pop
sbb
outsl
push
test
dec
jl
and
shll
mov
xchg
lcall
gs
or
mov
ljmp
push
or
dec
lods
pop
bound
lret
and
int3
pushf
cmp
lods
and
jle
shr
push
dec
lret
fstpt
dec
int
mov
jmp
nop
sahf
idivl
mov
cmp
imul
cmp
ret
adc
or
out
bound
xchg
push
xor
ror
test
mov
ja
in
subb
push
int
and
in
test
addl
mov
cmp
inc
push
cli
sub
xor
fcmovne
jns
mov
das
gs
sbb
xchg
jne
divl
jb,pn
sbb
inc
pop
aas
iret
push
push
jmp
inc
push
mov
mov
cmp
cmp
cmp
xchg
push
jg
sbb
cmp
std
fs
jecxz
ds
add
arpl
insb
push
je
xchg
push
dec
xchg
rcrl
cmp
mov
push
testl
push
lret
jnp
shll
lea
arpl
inc
pop
adc
jns
mov
loopne
xchg
push
sbb
push
out
repnz
dec
ficompl
in
cli
jb
or
sub
lods
or
adc
push
inc
and
xchg
sbbl
pop
out
stc
or
xor
aas
pop
out
scas
stos
bound
sub
imul
xor
mov
fsubl
addr16
sahf
or
sub
pop
out
mov
out
or
push
pop
gs
xchg
ja
jae
pop
dec
cld
mov
mov
adc
nop
int3
dec
icebp
xchg
ljmp
push
mov
insb
hlt
les
js
dec
adcb
sbb
add
pop
adc
fdivrl
cmp
std
es
stos
data16
shr
mov
cmp
lds
sub
insl
rcrl
std
or
xchg
bound
push
adc
stc
js
mov
sbb
jmp
pop
push
sti
clc
enter
push
push
enter
and
pop
lahf
sub
bound
aam
in
push
js
scas
push
or
push
cmp
std
pusha
dec
cmpsl
loope
jmp
movl
xchg
mov
xchg
rcrl
stos
jl
out
fstl
xchg
adcl
mov
add
iret
out
inc
int
outsl
xchg
and
loop
jne
xor
movsl
xchg
lds
fnop
rcrb
inc
or
cmp
call
push
inc
sti
push
cmp
and
xor
push
fisttpll
sub
decb
adc
adc
push
lods
push
ljmp
lods
push
cwtl
je
ror
push
fcomps
xor
sbbl
mov
jl
addr16
push
ljmp
js
xor
xor
iret
les
xchg
mov
lret
mov
sbb
clc
cwtl
pusha
sub
push
jecxz
ret
jge
ret
mov
push
add
jbe
sti
fmuls
rorl
lock
insb
cmp
xchg
xor
jo
push
repz
jmp
pop
pop
cmc
pop
mov
jle
mov
cmp
imul
stc
jnp
lds
das
repz
xchg
insl
pop
xchg
fnstcw
scas
fdivs
lcall
mov
adc
push
std
jno
divb
xor
pop
int
and
mov
aad
stos
fsubs
cmp
fs
and
adc
dec
or
dec
jb
mov
pop
xchg
stos
fucom
push
jmp
sti
popf
repz
fwait
jno
sub
repnz
movsl
jp
xchg
mov
cltd
addb
push
incb
pusha
pop
out
in
pop
sub
les
lods
push
jp
push
xchg
sub
fadds
getsec
ficoms
xor
push
mov
imul
inc
scas
mov
cmp
lcall
jle
pop
mov
lret
cltd
loopne
bound
call
push
cld
cs
loopne
aaa
fdivrl
mov
add
jne
sub
dec
scas
cmp
test
mov
push
push
fsubrs
jno
push
pop
mov
xchg
push
mov
cld
mull
popa
mov
jp
fistps
aaa
pushf
add
les
inc
xchg
fimuls
and
pop
shlb
mov
lret
adc
daa
xchg
mov
jg
sahf
dec
cmp
insl
stc
push
push
xchg
xorb
and
aam
sub
scas
ss
lahf
das
adc
mov
mov
sub
lret
ds
inc
mov
mov
mov
sbb
pop
sub
cmp
insb
mov
mov
sbb
dec
aam
xchg
jg
jnp
fidivs
jne
and
ljmp
push
fmul
call
mov
int
addl
lock
mov
mov
add
push
and
mov
imul
loope
out
xchg
add
in
or
or
in
jae
push
adc
push
lret
stos
adc
jle
das
sub
in
jns
mov
into
cmovno
jo
in
sbb
ljmp
or
push
sti
in
mov
cld
data16
scas
sbb
jmp
inc
lds
lds
int
cmc
sar
dec
xor
mov
lcall
push
jp
mov
jae
scas
sub
jecxz
mov
pop
cltd
pop
in
movsl
sub
int3
jg
push
imul
ret
push
add
adc
aam
adc
sub
jb
mov
push
stc
cmp
stc
aad
and
stc
push
sarb
fnstenv
int
and
jl
push
cmp
push
mov
stc
roll
stc
mov
out
sub
add
int
bound
xlat
nop
and
sbb
shrl
negb
add
cmp
push
js
mov
and
jmp
inc
lock
ficompl
sub
imul
lcall
jg
ret
push
scas
mull
xor
js
aam
cwtl
xor
cmpsl
movl
or
jmp
fs
fidivrs
push
stc
incl
insl
std
mov
movl
decl
jp
mov
xchg
inc
jg
sbb
call
xchg
push
outsb
and
js
clc
sahf
and
imul
sub
insb
sbb
push
rclb
fistl
adc
jle
loop
out
mul
iret
add
in
shlb
push
int3
push
sbb
test
pushw
setae
xchg
stos
mov
scas
pop
insl
aaa
pop
test
pop
pop
lods
cmp
mov
test
jge
sbb
sub
sbb
test
sahf
jno
cmp
pop
mov
mov
call
test
jl
xor
fnstcw
push
push
fnsave
push
push
cli
ds
mov
in
sarl
add
call
mov
out
dec
shlb
dec
pop
lahf
xchg
add
int3
cmp
fildl
push
push
das
fwait
sub
in
cmc
cmp
jae
xchg
dec
or
xor
push
dec
xchg
push
loope
cwtl
jmp
push
jmp
mov
bound
xchg
stos
test
outsl
repz
push
push
mov
out
andb
push
imul
dec
jmp
shlb
xchg
cwtl
das
jmp
lods
pop
stos
cmc
lret
iret
rcrl
mov
push
pop
jg
ss
imul
and
ret
xor
jmp
cmp
and
xorl
mov
stos
and
jmp
aam
bound
lahf
je
js
loop
enter
pop
in
sbb
pop
cmpsb
adc
or
bound
dec
aas
lods
mov
jmp
pop
add
imul
imul
shrl
pusha
jmp
jne
ret
shll
jmp
jnp
loopne
or
cli
popa
push
das
push
mov
pushf
scas
enter
add
cwtl
mov
popa
int3
inc
int
pusha
ja
fstl
ds
into
pop
test
push
cmp
pusha
mov
shll
and
adc
inc
adc
in
lods
push
mov
nop
mov
aad
xor
cmpsl
ljmp
fiadds
push
outsl
jg
sarb
fmull
xchg
adc
jb
cld
push
les
jno
xchg
imul
xor
loopne
jmp
sub
add
mov
lcall
cmpsl
add
and
in
push
push
sti
lret
or
push
sahf
scas
fwait
lret
sub
mov
sub
mov
xlat
xchg
sub
sub
push
fldcw
inc
dec
cmp
lds
pop
jnp
inc
call
stos
xchg
xor
sub
ja
int
aam
fstpl
or
stos
loopne
xlat
add
mov
lret
dec
jnp
jae
xor
popa
in
pop
fistpl
ret
jecxz
bound
or
out
push
movhps
pop
jno
jns
pop
xchg
jne
mov
ficoml
ljmp
push
dec
mov
insb
xchg
inc
shll
bound
pop
es
push
sbb
lods
xchg
dec
movsb
imul
push
jmp
push
jecxz
ja
jle
test
sbb
and
lods
ficoms
cltd
pop
daa
enter
sub
sbb
jle
mov
shlb
cmpsl
push
arpl
push
cmp
xchg
lods
and
out
ret
xor
pop
mov
xchg
scas
add
or
jmp
push
lret
shrb
mov
lret
mov
pusha
enter
das
cmpsb
mov
push
incb
adc
jns
ret
fidivrl
sbb
scas
and
dec
gs
icebp
lods
not
cwtl
xchg
ret
pop
pop
pop
adc
adc
sbb
std
pop
jg
mov
insl
sub
push
mov
push
inc
shll
sbb
and
sub
inc
test
xor
push
addr16
xor
add
lcall
xchg
cmp
arpl
mov
lahf
out
push
pusha
xchg
sahf
sbb
push
popa
sub
jecxz
xor
orl
les
sbb
inc
bound
push
xchg
xor
push
add
add
mov
stc
mov
shrb
idiv
xchg
pushf
and
jnp
push
jg
add
jmp
fiadds
dec
mov
cltd
xchg
test
leave
sbb
ja
pmulhuw
int3
sbb
xchg
adc
push
aam
cmpsl
cmp
xchg
cmp
sub
xchg
inc
push
or
daa
mov
mov
jp
out
mov
call
sti
cmc
rcll
pop
into
xchg
enter
loopne
push
and
nop
call
pop
jno
xor
push
fcom
imul
xchg
inc
pop
fsts
adcl
ljmp
adc
push
arpl
adcb
jle
inc
mov
sbb
xor
out
fldt
jmp
sub
fistl
pop
pop
xchg
pop
push
ljmp
movsb
cmpsl
jb
and
sub
jmp
jae
push
int3
sti
xchg
aad
push
fwait
negl
adc
lods
lods
lods
cmovbe
movsl
nop
jae
adc
inc
dec
popa
sbb
lea
or
pop
bswap
push
outsl
push
daa
testl
out
push
add
push
imull
pop
lods
sub
in
mov
stos
iret
sub
icebp
pop
sub
fdivrs
jle
cmpsl
sub
pop
or
push
bound
lods
inc
inc
scas
pop
ljmp
mul
popa
jmp
out
out
cld
mov
mov
insl
cli
xchg
in
call
hlt
out
mov
lret
push
and
adc
mov
jmp
push
pop
cmp
jbe
cmp
dec
jle
jno
mov
xchg
daa
cs
sub
or
or
std
ja
push
movsb
jns
out
mov
mov
dec
cmp
bound
push
mov
imul
or
aaa
stos
insb
add
jmp
fmulp
lret
jb
in
sub
jecxz
repnz
jecxz
pop
dec
push
lods
daa
into
pop
push
sub
xor
inc
adc
cli
aas
ror
bound
xchg
addr16
dec
push
sahf
mov
cs
fwait
cmp
add
xor
lret
inc
pusha
sarl
out
jnp
aad
push
mov
pusha
pop
clc
pushf
lods
dec
pushf
into
lods
or
and
lock
into
scas
imull
jns
mov
push
mov
hlt
aam
sbb
cmp
cld
cli
repnz
sahf
pop
cmp
and
bound
or
or
mov
fdivrl
xchg
hlt
and
ss
popa
sbb
fwait
mov
mov
aaa
fldenv
ds
andl
cmp
pop
ror
into
aam
outsl
pushf
rorb
push
scas
lds
dec
gs
in
cmp
popa
cltd
imul
cmp
mov
stc
xchg
popa
out
and
push
push
fcompl
rolb
dec
push
aam
lods
ljmp
loopne
mov
out
xor
push
stc
add
andl
pop
inc
in
and
xor
cmc
in
cld
addr16
test
idivl
testb
call
and
mov
jnp
aad
dec
pop
gs
mov
out
push
xor
repz
push
nop
inc
and
mov
pop
movlps
jecxz
ljmp
adcb
scas
push
stc
jecxz
repnz
pop
les
sub
dec
mov
jno
and
mov
sub
inc
popa
inc
out
iret
add
in
shlb
inc
pop
call
testb
mov
dec
or
ss
add
mov
scas
adc
imulb
mov
add
adcl
das
out
mov
pop
loope
push
mov
mov
pop
sti
call
dec
push
fwait
imull
std
mov
outsb
or
push
loope
push
pop
mov
dec
pop
bt
lock
ret
jmp
cmp
loop
inc
in
mov
push
fninit
xor
cltd
push
dec
repnz
in
xchg
shlb
mov
int
enter
cltd
test
test
push
and
cld
test
lret
mov
push
mov
movb
enter
repz
fcomi
push
inc
dec
push
iret
ss
sbb
nop
push
outsb
add
dec
pusha
or
push
mov
cmpsl
in
inc
test
mov
mov
or
jb
mov
in
push
rcrl
sarl
js
repz
push
jo
push
inc
inc
in
mov
inc
inc
sbb
aad
test
sbb
fwait
rorl
lcall
fdivp
rcrb
mov
ret
xchg
sub
in
add
sbb
loope
push
push
scas
pop
cmc
test
pop
mov
inc
xor
lds
push
outsb
fwait
sbb
lret
xchg
iret
call
jle
and
cld
es
enter
popa
movsb
jl
sbb
xchg
aas
xorb
and
jp
and
push
popf
lods
sbb
fstpl
sub
out
push
arpl
jmp
jg
push
orl
scas
inc
push
ret
add
enter
add
push
sbb
or
sbb
lahf
mov
cmpsl
xchg
movsb
sbb
mov
scas
das
add
stc
or
iret
clc
loope
push
pop
call
inc
push
or
das
inc
andb
xor
lret
xchg
div
subb
or
dec
cmp
pop
pop
mov
fadds
into
pop
inc
loope
mov
dec
pop
mov
push
enter
iret
into
jmp
cmp
ja
dec
test
jmp
sbbb
fstl
jp
iret
xor
in
lods
das
add
inc
test
mov
inc
out
mov
cli
inc
mov
cltd
inc
jb
mov
or
int3
faddl
add
mov
sub
xor
sbb
test
int3
hlt
sti
imul
add
jl
mov
dec
sub
and
sbb
cld
out
in
in
push
ss
scas
adc
cwtl
cmp
mov
out
ja
mov
in
cmp
sub
add
cs
and
pop
cwtl
aam
jmp
push
mov
jae
adc
lods
cmova
push
hlt
sbb
cmp
inc
push
repnz
mov
insb
fwait
iret
repz
push
jmp
sbb
repz
push
xor
bound
cs
ds
pop
jle
pop
pop
cld
scas
sarl
outsb
leave
outsl
cmpsb
shll
cmpsb
jle
mov
fdivr
in
pop
mov
outsl
aad
xor
loopne
mov
cmp
push
mov
ljmp
fwait
xchg
int3
and
inc
in
test
loope
icebp
fucomp
scas
in
test
inc
lretw
pop
sub
jns
xchg
xchg
and
inc
lahf
mov
lcall
sub
cmc
and
xor
out
lahf
xor
and
xchg
push
adc
inc
add
ss
dec
loope
jbe
sbb
lcall
xchg
sahf
in
test
fdivr
mov
out
or
ss
pop
mov
inc
fs
pusha
push
inc
stos
stos
std
xchg
mulb
andb
xchg
fs
push
mov
xor
das
xor
in
daa
in
xchg
push
scas
fcomps
loop
imul
inc
lcall
xor
jle
and
lods
cs
jnp
push
pop
pop
cmpsl
jg
sbb
mov
mov
gs
sub
mov
cltd
call
stos
movsl
ret
dec
lods
in
adc
fcomps
nop
lock
jne
mov
bound
rol
mov
push
in
pushw
into
lods
jmp
jo
cmc
ret
mov
rclb
or
sbb
cmc
nop
jle
faddl
add
sbb
xchg
push
adc
dec
mov
adc
lret
es
mov
js
add
pop
jns
movsb
lahf
inc
cmp
push
pop
jg
iret
std
add
push
cmp
cltd
inc
into
jg
cs
shr
dec
lcallw
cmp
in
lods
addr16
in
insb
daa
leave
cmp
or
ljmp
jns
pop
or
inc
cwtl
daa
loop
mov
es
push
loope
pop
sbb
insb
push
sahf
leave
pop
push
dec
out
cmc
pop
adc
scas
sti
push
lcall
or
mov
adc
pop
pop
and
jno
enter
mov
sti
les
loope
rorb
imul
mov
fsubp
inc
push
push
mov
call
and
mov
cmp
daa
fadd
mov
xchg
enter
mov
cmpsb
in
xor
inc
fcomps
out
pusha
or
push
jle
out
data16
pop
push
pop
imul
and
outsb
iret
push
testl
jae
cmc
push
adc
pop
xchg
add
outsb
mov
push
cmpsl
aam
sbb
inc
fucomp
test
cmp
add
les
bound
xorl
sbb
push
sbb
ret
pusha
mov
pop
daa
and
push
add
hlt
push
xlat
adc
jo
movsb
pop
and
gs
or
mov
addr16
cmp
push
es
ljmp
mov
push
add
les
in
int3
cmp
fnstenv
cmp
and
repnz
enter
pop
pop
lahf
push
out
jnp
aam
movb
sbb
pop
mov
jmp
jmp
fsubrl
cwtl
out
fisubl
xchg
jb
shll
out
ja
dec
ret
fadds
les
das
test
test
xchg
daa
cltd
or
in
xchg
into
push
mov
mov
aas
jns
add
push
sahf
test
das
stc
inc
push
jg
xorl
and
mov
out
int
mov
mov
jle
sub
fwait
mov
xor
stc
cltd
and
dec
ljmp
push
pop
filds
add
fmulp
push
jecxz
mov
xchg
mov
pop
fwait
sahf
enter
xor
in
adc
ljmp
into
pop
in
inc
sbb
adc
mov
shrl
push
and
pop
cmpsl
test
in
sbb
jne
mov
cmp
sbb
outsl
pop
aad
je
shll
sub
bound
enter
dec
ja
pcmpgtd
adc
pop
mov
bound
and
lock
test
sbb
fstpl
cmpsl
jno
cvtps2pd
jae
fmuls
xor
add
imul
fisubrs
lcall
sbb
xchg
xor
loopne
jg
jae
call
jle
scas
fwait
mov
mov
sub
divb
gs
insb
sti
out
rol
mov
sub
mov
in
sub
pop
loopne
and
jmp
jmp
call
aaa
pop
iret
push
pop
leave
add
push
pop
pop
push
or
lea
insb
sbb
sub
bound
lock
fsubr
jmp
jo
popa
inc
insb
cmpsl
insb
ja
les
push
lret
enter
cwtl
or
ficoml
jo
xchg
outsl
outsb
inc
inc
push
adc
neg
int3
mov
jmp
sub
push
pop
push
test
inc
es
int3
jmp
in
ss
mov
adc
jns
into
mov
push
mov
pop
jne
cli
fcoml
leave
xchg
gs
sub
xchg
ficoms
push
mov
popf
xchg
sbb
mov
fidivs
outsl
lret
push
pop
xchg
dec
adc
aaa
jmp
push
or
decb
xor
fcoml
dec
xor
fimuls
out
pop
stos
lret
gs
ret
aaa
or
mov
imul
roll
jp
inc
push
xchg
mov
cmp
mov
push
xor
cwtl
es
cmp
idivb
jnp
and
push
inc
cmp
clc
sbb
jle
rorl
jnp
mov
inc
and
and
mov
cmp
jle
pop
mov
jb
adc
cli
pop
sbb
std
rol
jae
push
fildll
inc
dec
cmc
lds
or
rep
add
mov
add
cmp
inc
jecxz
adc
push
jne
mov
bound
sahf
jmp
cmp
lahf
adcl
jle
mov
jmp
lret
or
cmp
xor
cld
pusha
push
aaa
call
or
xchg
and
gs
or
add
push
sti
out
mov
in
inc
mov
push
pop
lahf
sbb
call
xor
jmp
cmp
and
out
xchg
add
ret
mov
outsb
lret
or
pusha
adc
mov
sub
push
mov
dec
mov
dec
sub
outsl
inc
lea
xor
and
cli
and
sbb
mov
std
arpl
loope
push
adc
gs
mov
sbb
lods
mov
or
jecxz
cmp
and
shll
or
push
dec
mov
push
xor
out
lea
sbb
int
scas
data16
sbbb
iret
sub
push
add
push
push
and
ror
mov
out
jns
outsl
jmp
int3
pop
daa
jns
mov
out
or
push
sbb
je
in
xchg
fwait
out
push
mov
test
mov
rcl
dec
fdivr
adc
je
mov
jge
ss
mov
js
add
fldt
push
push
mov
shl
stc
push
loop
pusha
or
loopne
xchg
fsubr
and
push
in
es
in
mov
insb
bound
sbb
cld
xchg
add
sahf
iret
jge
fiadds
call
test
dec
dec
jnp
test
es
xorl
fstps
fdivl
mov
mov
outsl
pop
mov
jle
das
sti
and
mov
xchg
cmc
cld
outsl
jnp
pop
ficomps
lahf
std
push
pop
outsb
and
stos
push
mov
sub
imull
sub
cmc
mov
int3
pop
mov
in
fstl
out
pop
sahf
stos
lds
repz
sub
jle
popa
push
add
lods
enter
and
mov
shrl
push
dec
add
test
lds
push
push
je
inc
xchg
xchg
js
cltd
sub
in
push
out
inc
cmp
sbb
ficoml
cmp
cmpsl
xchg
imulb
and
add
je
adc
cmpl
pop
int3
jns
adc
bound
in
mov
dec
xor
mov
inc
popf
xchg
xor
sahf
mov
int3
inc
ret
je
sub
xor
xor
ret
movsb
enter
push
push
and
xchg
mov
repnz
gs
add
xchg
and
push
add
pop
fs
daa
mov
inc
dec
outsl
lods
lret
xchg
fsubl
out
mov
das
mov
push
into
out
pusha
dec
adc
mov
lret
insl
and
sti
ds
les
icebp
imul
ret
bound
scas
ss
sub
or
pop
into
outsb
cmp
insb
push
in
push
into
xchg
mov
sbb
cmp
inc
sbb
incl
inc
cmpsl
xchg
dec
movsb
scas
xor
mov
dec
and
cmp
xchg
push
sahf
push
cmc
fbld
outsb
xchg
mov
xchg
roll
js
mov
loope
xchg
das
xchg
cmp
dec
nop
push
fisttps
pop
iret
and
mov
and
call
push
stc
fs
out
cmc
cmp
cmp
shrb
andl
aaa
push
sarl
adc
jle
jl
xlat
popf
pusha
aas
mov
cmp
movb
mov
iret
or
out
in
pop
jle
rcrb
test
sti
add
inc
or
sahf
rclb
inc
nop
popa
push
inc
lods
mov
loop
lret
test
xor
iret
fisttpl
xchg
jns
lret
bound
popa
enter
mov
pushf
or
and
sub
jbe
mov
cmp
dec
cwtl
push
push
add
or
fstp
dec
iret
push
in
ds
mov
pushf
pop
shll
cmp
push
shl
xor
inc
mov
mov
subl
lret
jmp
jl
jg
inc
and
sti
out
ret
inc
ljmp
sar
aaa
fldl
imul
mov
ret
fs
lods
jne
dec
scas
mov
add
insl
mov
jecxz
gs
mov
xchg
sahf
test
dec
and
ja
stos
jmp
ret
add
pusha
shlb
gs
mov
push
mov
int3
jle
shll
mov
scas
cltd
push
xor
inc
cwtl
pop
bound
pop
xor
sub
in
push
and
iret
adc
imul
hlt
in
aad
fwait
push
dec
ret
mov
or
cmp
out
addr16
sub
lods
call
ljmp
and
or
jae
sub
cmpsb
sarl
shlb
sbb
ret
push
jnp
lea
bound
pop
shrb
out
mov
and
adc
stos
fnstsw
push
mov
scas
sbb
cmp
push
loope
mov
hlt
rolb
pop
in
imul
jb
push
jae
enter
fldenv
orb
aas
nop
or
dec
mov
adc
and
mov
cmc
pusha
sub
fxch
popa
aaa
shrl
xor
push
repz
lods
lcall
or
add
pop
fdivl
jle
out
shrl
jecxz
push
outsb
push
rcrb
mov
adc
fwait
inc
in
jnp
push
fwait
mov
inc
in
push
and
test
lods
sti
cmp
pushfw
inc
add
mov
fs
insl
sbb
out
mov
cmp
xchg
gs
in
test
cld
into
and
pop
outsl
cmpsb
sbb
loopne
push
xchg
call
sahf
fidivl
fwait
pop
adc
lock
pop
mov
fsubr
mov
out
pop
pusha
sbb
cmp
mov
push
xor
push
ret
fcomp
xor
dec
xor
mov
pop
rcrb
push
aad
sbb
and
push
lahf
nop
and
or
cmp
add
call
fdivl
sub
mov
in
dec
in
out
mov
fimull
add
jmp
imul
or
sub
push
rcrb
xchg
pusha
test
insb
push
add
inc
mov
fcoms
ret
add
stos
jge
cltd
fisubl
sub
or
jp
notl
mov
mov
fsubrl
lcall
enter
sbb
aas
push
cld
adc
or
pop
pop
xor
xchg
mov
jae
in
jle
stos
cmpsl
mov
adc
adc
push
mov
xchg
pop
imul
ss
aas
xor
call
jbe
and
and
jne
loope
aas
mov
les
pop
sti
mov
fs
loopne
jge
lret
mov
xchg
pop
enter
bound
data16
and
cmpsl
cmp
xchg
add
or
sti
mull
out
push
in
xor
icebp
jae
cwtl
sub
push
push
fisttpll
test
lret
cmpsb
xor
add
mov
and
sub
out
clc
xchg
sbb
mov
test
dec
xchg
cmpsb
lret
xchg
sbb
sub
clc
cmc
icebp
sbb
sub
lods
inc
pop
push
in
or
adc
or
adc
jno
jnp
push
cmp
xor
pop
cmp
mov
push
lret
cli
sub
popa
cmpb
xchg
pop
or
stos
dec
inc
daa
cmpsb
xor
add
cwtl
das
testl
jl
subb
xor
and
add
loope
test
repnz
mov
or
adc
mov
mov
push
dec
movsb
jp
leave
cli
mov
cmp
das
fwait
call
jnp
sub
aaa
bound
cs
sub
jno
pop
rorb
dec
test
ficomps
mov
out
xor
xchg
or
int3
ret
test
ljmp
push
inc
sub
sti
movsb
mov
cmc
xor
out
mov
mov
mov
add
xor
lds
int3
out
sti
sarl
test
jmp
push
subb
or
fldl
jge
loop
ficomps
stc
aaa
adc
push
push
cmovge
iret
and
mov
leave
sbbl
shrl
mov
imul
mov
bound
push
mov
fisubrs
push
gs
push
dec
js
sti
lds
fstps
pop
out
xor
inc
stos
push
insl
mov
imul
data16
shll
sarl
xchg
leave
lds
cltd
mov
and
fadds
fwait
push
push
adc
mov
out
xchg
jo
call
loope
mov
pop
mov
sub
bound
out
daa
hlt
push
mov
push
inc
push
push
insb
xchg
roll
lds
jle
or
and
inc
jnp
ljmp
inc
cli
popa
add
sahf
mov
mov
inc
cmp
push
inc
test
adc
or
jp
push
popf
add
xor
sub
outsl
xor
xor
lods
dec
and
sbb
leave
daa
mov
test
cwtl
jnp
cmc
mov
and
cmpsl
jae
sti
cmp
test
into
movsl
cld
mov
pop
jl
mov
xchg
enter
pop
sub
mov
stc
push
add
icebp
insb
inc
fwait
sbb
sbb
and
fidivrs
or
add
test
popf
mov
icebp
mov
call
out
aad
sub
pusha
adc
pop
cmpsb
adc
in
aas
push
pushf
push
push
add
into
jbe,pt
lods
jns
mov
cmpsl
jl
in
out
or
fimull
dec
sbb
sbb
jne
xor
add
mov
jbe
pop
add
dec
mov
mov
jne
lea
shrb
sub
xor
shrb
leave
mov
sahf
and
push
sbb
incl
clc
fdiv
mov
into
sahf
mov
jl
and
andb
jle,pt
dec
and
fs
in
in
stc
xchg
ficoml
repz
dec
cmp
lcall
push
push
pop
xchg
mov
scas
push
hlt
rolb
sub
popa
imul
ret
sub
inc
icebp
lret
aaa
jo
addl
push
push
leave
push
or
push
lds
imul
adc
and
cmpsb
loop
mov
insl
aam
pop
cmp
imul
mov
fsubs
cmc
xchg
mov
cmp
jno
mov
inc
mov
xor
jle
mov
sub
arpl
or
cli
lcall
imul
test
dec
and
add
loopne
shlb
out
outsl
and
in
and
inc
in
cltd
in
idivb
and
leave
es
iret
jl
sbb
jne
rcrb
xorl
push
push
mov
in
sahf
or
sub
in
push
je
hlt
inc
hlt
test
sbb
push
or
in
lahf
je
repz
dec
icebp
mov
fimuls
mov
sti
add
ds
packsswb
test
out
in
test
das
cmp
xor
mov
or
dec
push
jnp
rorl
mov
mov
call
cmp
inc
dec
dec
scas
repnz
dec
scas
clc
fdivrp
orb
jge
jmp
test
mov
pop
iret
mov
sbb
nop
push
lret
dec
test
push
adc
repz
inc
cmp
loopne
ss
nop
mov
sbb
ret
and
addb
mov
adcl
jg
push
pop
mov
cmp
dec
cmc
pop
lea
sbb
test
or
enter
cmp
pop
push
push
iret
outsb
mov
jne
or
dec
fwait
xorl
mov
out
sbb
add
movsb
in
mov
add
outsb
xor
mov
mov
pop
push
xchg
xchg
jecxz
push
cltd
pushf
mov
xor
cltd
cmp
or
lods
nop
jmp
or
es
pop
sub
shlb
sub
loopne
repz
shlb
gs
fiaddl
fildl
xor
adc
mov
push
sahf
call
sar
xorl
sbb
and
rolb
lock
mov
pop
inc
subl
dec
mov
aam
sub
enter
or
mov
fwait
push
inc
dec
mov
inc
mov
and
jmp
lret
ja
pop
les
stos
jp
dec
imul
sbb
stos
cmp
lock
push
or
pop
cltd
mov
push
stos
aaa
cmp
xor
sub
icebp
cmc
lock
cmp
adc
add
xchg
cmpb
divb
pop
loop
daa
add
push
push
adcb
fldt
sahf
test
movsb
sbbb
jnp
in
jno
push
out
testl
sub
lret
enter
jg
xchg
xchg
pusha
adc
adc
push
bound
lock
iret
xor
lcall
in
push
mov
mov
xchg
or
out
pop
ja
sbb
jl
mov
xchg
push
into
enter
cltd
rcrl
stc
imul
lcall
sub
adc
sub
push
enter
arpl
lretw
mov
data16
sub
mov
xor
push
and
dec
adc
mov
jle
push
mov
fists
arpl
ljmp
repz
jmp
mov
pop
lea
mov
cmp
mov
push
imul
popa
mov
les
es
lahf
or
jnp
out
mov
bound
push
loopne
sti
repz
jmp
int
lcall
or
es
sub
and
lret
jae
aad
stc
idivb
add
or
sub
cwtl
bound
daa
negb
cmp
sub
nop
gs
push
out
jbe
push
stc
jmp
sub
mov
dec
push
repnz
add
movb
lods
and
cmp
add
pop
popf
xchg
jae
jp
and
cmp
xor
sahf
into
scas
mov
mov
lods
sub
pop
aam
icebp
fnstcw
cmp
cli
xchg
gs
js
arpl
sarb
pop
push
jge
push
and
cli
push
imul
push
bound
das
call
push
scas
lods
push
cmc
xchg
movsl
ret
repz
xchg
push
jb
leave
movsb
fwait
or
insl
xlat
mov
cwtl
fiadds
call
mov
fldcw
lret
sbbl
xchg
sub
stos
cmp
sar
rol
add
mov
out
push
popf
xor
xor
sbb
inc
in
inc
cmpsl
lahf
outsl
je,pn
push
leave
mov
int
sub
jns
js
das
filds
out
cmpb
add
test
push
fwait
sub
stc
jnp
lea
push
cmp
cmp
stos
jmp
pop
add
sub
roll
push
hlt
mov
in
bound
push
cwtl
xor
notl
test
cmp
stos
pop
jbe
mov
mov
call
dec
pop
push
push
jp
inc
jmp
cmc
enter
push
xor
icebp
push
jmp
adc
flds
sbb
push
test
cmpsb
ja
cmc
push
cmpb
bound
adc
mov
dec
stos
xchg
and
xchg
inc
inc
loope
out
movsl
xor
push
je
int3
call
jae
mov
insb
cmp
sub
jg
sarb
pop
and
scas
insb
jb
mov
inc
cmp
jmp
pop
or
dec
xorl
leave
xchg
je
fisubs
repnz
sbb
nop
shll
stc
sbb
lcall
repz
les
or
mov
cmp
insb
sub
lret
ja
loope
das
lock
adc
sbb
cmpsb
fmulp
or
out
bound
push
je
xchg
xor
scas
jnp
cmp
nopl
mov
addr16
mov
fs
xchg
movsl
cmp
icebp
jmp
enter
fwait
insl
cmp
and
xchg
clc
cmp
es
pop
adc
jbe
pop
lcall
aaa
lea
xchg
pop
inc
int3
jmp
icebp
mov
or
rorb
mov
in
and
pop
imul
and
into
cwtl
xorb
adcl
mov
loopne
xchg
push
lret
lret
dec
arpl
cld
out
cmp
scas
in
sti
push
test
test
ret
stos
adc
insb
les
sub
rclb
outsl
pushf
fildl
ja
mov
jmp
adc
scas
sub
jns
leave
in
jmp
fidivs
xchg
cmpsl
pop
mov
loop
ret
push
sub
dec
cmp
pop
adc
outsl
loopne
cmp
imul
stc
in
push
mov
stos
rep
mov
mov
mov
sbb
aam
cmp
fadds
xor
fsts
adc
frstor
pop
scas
cld
dec
pop
movb
scas
bound
push
add
loope
inc
add
jne
push
repz
lods
pop
bound
lret
or
movsl
addl
xchg
push
outsb
ret
popf
mov
jg
push
data16
aam
bound
nop
outsl
enter
sbb
jmp
mov
add
pop
xchg
loope
xchg
lock
sbb
testl
jp
sbb
fwait
cld
div
fwait
lret
dec
and
cmc
mov
imul
jmp
cld
or
adc
dec
push
test
xchg
pop
xchg
movsl
ds
add
and
adc
or
mov
popa
mov
or
push
pop
dec
cmp
mov
push
into
adc
aam
xor
sbb
lods
inc
xorl
shrb
jnp
rorl
rcl
mov
lcall
cli
and
popa
mov
xchg
push
nop
fidivrl
daa
cmp
in
push
imul
das
in
sbb
mov
adc
xor
inc
mov
sub
pop
adc
data16
cmp
cld
aas
pop
dec
in
jnp
or
cmc
cmp
jl
xchg
fisubs
push
ljmp
repz
push
aad
outsb
or
push
push
bound
pop
fwait
xlat
movsl
das
dec
mov
lock
xor
int
bound
or
push
mov
sbb
cwtl
jns
pcmpgtd
and
cmc
xchg
scas
mov
mov
fdivrl
sbb
enter
cmp
icebp
add
jge
push
test
push
jne
fadds
push
movl
lock
lret
ret
pop
inc
js
push
insb
mov
pop
gs
aam
sbb
js
out
add
jmp
push
lods
sbb
jecxz
popa
daa
or
mov
call
and
adc
lock
ja
sub
rcrb
lods
fwait
mov
add
sub
push
jle
cli
jecxz
mov
fldl
inc
test
dec
lods
subb
cmp
rorl
stos
and
shll
addr16
cwtl
aad
mov
sbb
push
xchg
mov
sahf
popl
or
mov
push
cmc
mov
sbb
movb
jecxz
mov
push
jecxz
rcll
fnstcw
jnp
jo
mov
fldlg2
mov
call
or
ljmp
int3
in
bound
add
ret
adc
dec
lods
test
sbb
inc
test
or
xorb
sarl
test
jge
mov
loop
cmpb
push
arpl
mov
pusha
push
fisubl
imulb
test
scas
push
adc
sbb
std
adc
cmc
xchg
fdivs
shll
push
xor
jb
mov
xor
and
dec
fmuls
divb
data16
daa
sbb
push
jmp
push
add
dec
push
mov
and
shll
or
bound
pop
sahf
mov
in
inc
jo
or
rcrl
clc
inc
xorb
pop
bound
sub
adc
es
popf
dec
mov
xchg
lret
pushf
cmc
and
pop
pusha
cs
andb
mov
mov
mov
bound
push
adc
call
repz
mov
jo
add
js
jp
jg
mov
cs
cltd
adc
inc
dec
jmp
lret
jbe
dec
mov
push
fwait
mov
push
shlb
push
in
test
lahf
cmp
enter
popf
mov
in
mov
das
dec
pop
sarb
mov
push
test
sbb
sbbl
mul
jne
mov
xor
shrl
push
cmp
xchg
mov
inc
lret
popa
test
cmc
popa
aam
bound
sbb
push
ror
jmp
test
mov
and
sub
adc
push
push
xor
dec
cli
bound
pushf
movsb
push
popf
test
and
and
dec
jle
lahf
mov
xchg
or
jle
lahf
push
imul
mov
imul
lret
push
add
int3
adc
inc
push
test
aaa
lcall
xor
cmp
test
push
bnd
push
ljmp
cld
mov
jae
in
mov
movsl
jne
pop
imul
loop
cmc
and
aam
into
adc
sub
scas
pop
movsb
fisttpl
jns
fs
adc
cmp
cmp
outsb
xchg
cli
mov
mov
bound
imul
cmp
jae
and
xor
push
fs
arpl
ss
dec
out
jbe
dec
sbb
mov
fistl
test
jle
cltd
addr16
popl
outsb
adc
fisttpll
push
lahf
add
jne
jae
jecxz,pt
xchg
jne
push
mov
cmp
mov
icebp
pusha
jae
or
push
jmp
adc
mov
lea
fs
jmp
push
pusha
xor
xchg
push
adc
fwait
push
dec
sahf
mov
xchg
cmc
pop
sbb
dec
inc
jnp
dec
rclb
add
push
ja
mov
mov
ret
fwait
jnp
dec
dec
testl
bound
fcoms
leave
fnstsw
or
push
jecxz
adc
aam
cmpsb
addl
stos
cmp
in
jecxz
ja
mov
out
push
lret
iret
bound
inc
lods
scas
inc
sbb
xor
push
mov
lods
ja
loope
push
pop
push
les
sbb
jmp
hlt
cmc
inc
pop
test
jb
and
bound
add
push
int3
shrb
push
lcall
sub
lods
js
or
arpl
daa
pushf
scas
lods
cld
inc
and
or
adc
nop
jo
rolb
leave
inc
call
out
jmp
bound
cs
pop
pop
or
cmp
or
add
mov
mov
dec
sub
popf
into
pop
sub
xor
sbb
outsl
mov
dec
push
mov
cmp
xchg
dec
out
inc
mov
mov
push
popa
cmc
ljmp
and
xchg
inc
and
test
aad
sbb
cld
inc
dec
push
xor
outsb
jae
push
daa
out
push
daa
xchg
mov
arpl
pop
hlt
xchg
mov
push
imul
out
xor
mov
lahf
repz
es
gs
jmp
inc
inc
push
out
inc
das
mov
loope
lods
adc
clc
jg
push
sahf
cmpsl
gs
popf
xchg
mov
shll
je
shlb
jnp
icebp
fsubp
add
cwtl
and
or
pushf
or
sub
gs
out
lock
pop
lds
fucomi
lret
js
mov
push
stc
cs
push
sub
cmpsl
xchg
das
jbe
in
cli
fwait
inc
popf
ficoml
cmp
out
test
sbb
gs
lock
leave
xchg
push
cmp
fidivrl
sti
shll
lret
sbb
sub
pop
mov
insl
in
sbb
movl
or
mov
and
jb
iret
popa
add
mov
call
pusha
mov
inc
push
adc
push
lods
sub
mov
mov
jno
cmp
pop
stos
in
sbb
jns
jp
imul
loope
pop
lcall
or
push
jmp
push
cmp
fsubrp
mov
outsl
xchg
aas
in
push
jp
test
or
push
int3
or
xchg
les
inc
test
push
push
adc
enter
inc
filds
cmpsl
dec
ret
inc
mov
shlb
or
sahf
cmp
repz
fcmove
lret
lds
add
loopne
dec
cltd
sbb
mov
loopne
stos
push
lahf
xchg
add
clc
push
or
andb
push
push
add
lods
xchg
adc
sbb
repnz
cld
aad
int
iret
sbbb
sbb
sbb
mov
mov
lods
sbb
cltd
out
sbb
and
in
fwait
push
fimuls
push
aad
jmp
sub
cwtl
shrl
adc
ss
lahf
dec
clc
xchg
into
test
or
push
incb
push
and
push
scas
ss
dec
push
adc
icebp
xor
out
ficoms
fmuls
out
inc
xchg
call
rcr
mov
outsl
mul
mov
pop
fsubs
cltd
leave
shrb
lret
adc
add
xor
sub
outsl
es
pushf
sbb
sbb
cmc
pop
fistps
mov
fisubrl
mov
sti
daa
loopne
bound
xor
push
or
mov
mov
mov
fisttpl
rorb
adc
push
jae
arpl
and
stc
scas
push
sti
xor
int3
push
cmc
icebp
movhps
test
sahf
cmp
out
push
xor
cs
adc
inc
push
jbe
mov
push
stos
pop
gs
xchg
mov
cwtl
push
inc
call
cmpsb
xor
hlt
int
insb
mov
aad
sbb
mov
jmp
out
arpl
stc
lods
out
enter
xor
sti
shr
outsb
xchg
fistpl
mov
std
lret
push
adc
ja
out
dec
pop
mov
push
mov
inc
iret
sub
fs
adcl
xchg
rcll
bound
ret
cmp
sub
fadd
ss
shlb
push
add
fwait
mov
pop
add
mov
aad
arpl
jo
out
lds
mov
push
pop
cmc
out
ja
popa
into
outsl
loope
mov
in
jg
bound
sti
ss
inc
adcb
jmp
pushf
leave
icebp
arpl
mov
add
mulps
sbbl
sbb
push
push
pop
sub
popf
mov
outsb
cwtl
outsl
fdivrs
imul
adc
sub
aaa
inc
fidivl
rolb
lods
sub
inc
mov
sahf
mov
mov
stc
sbb
gs
out
cmp
fidivrl
js
sti
push
bound
adc
cltd
inc
sti
cmp
add
das
lock
or
insl
jle
sbb
sti
sub
mov
cmp
add
pop
xchg
mov
sub
popf
cmpsb
aas
data16
jle
cmpsb
push
push
gs
mov
jmp
out
stos
lock
test
imul
mov
mov
jnp
sub
test
lret
cmp
bound
in
shrl
aaa
outsl
and
mov
loopne
pushf
mov
adc
and
push
fsubs
or
mov
je
ss
cmp
pop
inc
xor
and
push
xchg
lods
mov
mov
mov
add
bound
xor
loope
call
cmp
cmp
xchg
aad
loopne
pop
push
sub
xchg
in
inc
int3
into
shlb
das
jl
cmc
mov
push
jae
shll
lahf
insb
cmc
mov
dec
xchg
js
int
push
mov
sub
mov
lea
aas
stos
test
outsl
and
and
pop
inc
popf
rclb
ljmp
and
stos
outsb
mov
or
dec
imul
iret
push
adc
mov
lods
xchg
fildll
jge
push
or
push
xor
xchg
aas
add
in
push
vpcmpeqw
bound
mov
sahf
push
fidivs
popa
enter
jmp
punpckhdq
push
cld
push
cltd
cmpb
sub
out
or
cld
xor
into
in
mov
xlat
in
outsb
sub
sti
inc
sahf
push
or
dec
outsl
outsl
bound
in
adc
flds
push
cmpsl
inc
fidivrl
rorb
dec
cmpsb
dec
inc
sti
div
ret
sub
or
push
push
test
push
icebp
cmp
in
pop
sti
add
push
stc
xchg
data16
pop
arpl
cmp
pop
xchg
mov
xor
pause
push
sbb
and
push
fs
pop
xchg
mov
push
lret
push
les
push
imul
fdivs
out
lods
loop
ret
into
jmp
gs
mov
jmp
push
not
sub
inc
or
insb
mov
adc
jmp
bound
aam
push
clc
or
dec
jbe
sbb
cs
and
call
je
ja
jmp
repz
adc
fnstsw
adc
adc
and
not
out
imul
mov
data16
gs
ja
xchg
lods
inc
cmpsb
je
sahf
ret
mov
pop
push
mov
ljmp
out
aad
mov
inc
repz
xor
ss
push
in
pop
es
adc
xchg
popa
sbbb
mov
xchg
inc
les
push
outsl
push
xor
mov
mov
sbb
lock
aad
or
dec
insl
aad
lcall
leave
mov
inc
and
mov
or
hlt
cs
and
xchg
rol
cwtl
bound
outsb
icebp
inc
push
popa
sub
xchg
adc
rcrl
inc
jb
xchg
sbb
sbb
sbb
push
aam
or
jo
fmuls
xchg
dec
add
mov
pusha
bound
push
int
xchg
data16
fsubr
cmp
xor
lods
mov
adc
in
xchg
mov
test
push
adc
cmp
loop
mov
insl
mull
fiaddl
push
mov
mov
arpl
out
inc
xor
jle
daa
imull
orl
fdivl
paddusb
sub
aam
xchg
cmp
movsb
xchg
push
out
or
push
mov
ss
pop
mov
adc
cmp
fbld
push
jle
popf
sub
out
lret
fidivrs
adc
mov
sub
mov
nop
sub
push
imul
cltd
add
mov
out
mov
aas
inc
sarb
loopne
mov
or
adc
addl
or
js
mov
test
aam
call
mov
dec
jecxz
cmc
and
sub
or
push
dec
push
push
and
and
pop
int3
xor
push
dec
xchg
add
pop
dec
fnsave
cmp
dec
ficomps
addr16
test
enter
out
pop
stc
pop
jo
sub
pushf
mov
insb
sbb
aaa
roll
sbb
lods
adc
test
mov
dec
daa
sti
mov
xor
repz
xchg
stc
and
xchg
xchg
xchg
add
mov
sahf
mov
out
movsb
in
leave
int3
sahf
js
cltd
mov
sahf
bound
popa
bound
xchg
add
pop
punpckldq
add
imul
push
lods
in
lar
xorl
sbb
pop
lds
stos
shll
shr
outsl
iret
jmp
push
xchg
int
adc
mov
andl
imul
scas
mov
aas
add
stc
sub
int
arpl
imul
out
push
int3
pusha
pop
lret
fidivrs
xchg
sar
out
cmp
sub
fcomi
mov
stc
sar
ja
fcmovu
addr16
push
xor
adc
movsb
or
and
sti
fs
pop
decb
stos
push
rorb
imul
mov
xor
jmp
mov
xchg
incl
or
mov
hlt
sbb
out
aam
pop
sbb
xchg
outsl
jmp
jnp
scas
imul
pop
mov
cld
inc
daa
pop
aad
xchg
aaa
in
jo
outsl
xchg
mov
mov
cmp
out
xchg
cmpsb
shll
mov
adcl
mov
mov
pop
bound
mov
jge
and
lea
rorl
push
fwait
xchg
pop
or
out
push
and
push
iret
sbb
push
push
lret
faddp
and
repz
jecxz
int
xor
jne
fistpl
fistl
loopne
popf
iret
inc
mov
ficomps
bound
xchg
dec
fwait
xchg
inc
outsl
adc
cmpsb
sub
dec
push
or
sti
jb
add
adc
sub
pushf
jmp
jmp
push
xchg
mov
pop
adc
jmp
loop
rcrl
pop
adc
jns
push
aas
cwtl
mov
mov
syscall
xchg
and
dec
lret
sbb
das
cmp
cld
shll
adc
je
push
int3
mov
vpand
push
sbbl
push
push
outsb
lret
mov
subb
xor
add
pop
jmp
mov
dec
cmpsl
in
pushf
push
movsb
xor
cmpl
add
arpl
out
xor
dec
sti
ljmp
repnz
aad
ljmp
add
xlat
fwait
in
push
loopne
ficompl
or
fstpt
jbe
dec
pop
cmp
shll
bound
aad
ret
out
cmp
les
dec
or
or
mov
cmpl
sbb
xchg
sub
iretw
mov
jae
enter
mov
popf
in
in
fldt
insl
test
push
scas
fsub
jmp
ret
xchg
dec
imul
ja
repz
push
sti
pop
inc
and
push
pop
repz
ja
call
insb
dec
inc
cs
call
cmpb
sbb
adc
xchg
mov
test
std
outsl
cmp
jmp
inc
push
in
fwait
cli
push
mov
push
loop
mov
cmp
outsb
dec
mov
push
sbb
xchg
loope
arpl
out
sahf
addr16
out
sub
imul
jmp
addr16
cmp
push
or
pop
imul
and
inc
jge
sub
stc
push
inc
push
cmp
cmpsl
lods
call
dec
lods
bound
out
in
pushf
arpl
dec
cmp
dec
mov
outsb
xchg
inc
dec
data16
and
mov
fldenv
pushf
ja
pop
sarl
icebp
test
push
mov
cld
lock
mov
insl
and
xchg
mov
and
sub
sbb
mov
mov
hlt
in
cs
push
mov
cmp
arpl
xor
aas
pop
cmpsb
test
aad
bound
sub
imulb
jg
lret
xor
sub
mov
inc
je
cwtl
sbbb
push
fs
int
pop
lods
mov
sbb
cmc
jo
mov
mov
mov
fst
call
movsb
add
jae
rorb
jno
xchg
int
jl
sti
push
or
sbb
or
ud1
cmp
jle
inc
idiv
add
ljmp
adc
mov
jg
sbb
fsubrl
sahf
push
cs
popl
push
je
mov
out
xlat
and
add
xchg
mov
addr16
push
add
sub
in
push
cmpsl
pop
dec
aaa
fistpl
inc
push
insl
lods
jmp
js
jmp
jnp
addr16
and
adc
pand
and
cmp
adc
jb
movsl
test
sub
mov
popf
cmp
inc
fadd
mov
jns
mov
stc
sub
cs
ss
out
or
cs
je
pop
push
sbb
sbb
lds
ret
inc
movb
xor
call
and
push
outsb
lock
test
fs
jle
pushf
push
aad
out
imul
xchg
mov
adc
mov
mov
adc
ds
sub
jle,pn
and
pop
out
or
fldcw
inc
adc
shll
push
xor
daa
cld
call
fsubrp
or
addl
sub
push
cmp
arpl
add
dec
scas
imulb
sub
into
iret
and
dec
aas
sbb
mov
ja
addr16
pop
push
lods
fwait
jns
pop
mov
xchg
insb
pusha
pop
invd
push
sbb
hlt
ret
stos
mov
or
test
inc
sbb
push
arpl
push
push
stc
mov
aaa
test
popf
repz
xor
or
adc
cmpsb
adc
dec
test
repnz
int3
scas
mov
mov
push
pop
addr16
add
cwtl
lret
popa
push
jle
adc
xchg
inc
mov
pop
or
mov
fwait
andb
stc
push
out
mov
gs
push
pusha
jns
js
mov
xchg
cmpsb
sub
xor
rorb
int3
stc
repz
push
sbb
inc
addl
cltd
or
pop
gs
adc
jle
sbb
enter
mov
gs
push
jns
xchg
call
fmuls
push
jl
pop
xchg
enter
sbb
out
stos
in
mov
cld
sarb
int3
mov
ss
mov
subb
ja
das
pop
lods
push
pusha
or
popf
repz
fnstsw
arpl
and
dec
mov
mov
push
addr16
mov
lods
cmp
jecxz
push
lock
fdivrp
inc
loopne
out
notl
aas
xchg
cwtl
jo
test
fwait
pushf
bound
push
dec
ret
or
int3
mov
jns
mov
cli
call
xchg
add
ror
push
dec
xchg
dec
lea
jb
add
test
call
loope
in
push
add
sti
gs
or
mov
push
aam
cmp
dec
out
mov
ret
call
fldl
add
in
mov
mov
adc
pop
jno
cmp
jns
add
sub
sbb
aam
push
xor
inc
lods
inc
negb
pop
faddl
lret
stos
push
sub
pusha
fs
icebp
filds
xchg
lcall
sub
iret
jne
out
push
xchg
fwait
mov
nop
repnz
inc
ret
bndstx
nop
jg
lret
inc
cmpsb
dec
insl
aad
test
mov
aaa
sub
and
push
rclb
adcl
push
xchg
fisubs
pop
in
out
imul
sub
mov
jb
insb
sahf
in
jmp
xchg
xor
iret
inc
sbb
in
and
add
cld
jge
sbb
nop
ret
sub
mov
push
mov
fwait
js
mov
mov
push
push
dec
in
nop
mov
push
outsl
loope
sbb
add
add
jg
pop
push
mov
insb
xchg
addr16
xchg
out
inc
negb
mov
sbb
add
dec
gs
inc
adcb
add
nop
inc
sub
cmpsb
in
xor
xchg
pop
int3
jne
fidivs
bound
dec
pop
xchg
inc
pop
mov
mov
pop
std
outsl
sub
js
inc
and
loopne
cmp
js
movsb
shlb
bound
in
mov
adc
and
nop
insl
lea
jecxz
adcb
xor
sbb
mov
sbb
cli
pop
add
push
stos
outsl
std
leave
jp
mov
adc
shl
inc
xchg
mov
push
fisttps
pop
bound
push
mov
mov
cltd
cmpsb
jecxz
adc
in
or
pop
dec
sbb
bound
std
mov
mov
pop
push
mov
in
cmp
push
add
in
push
decl
jmp
inc
push
ljmp
xchg
jp
pop
push
insl
dec
xchg
sbb
jbe
xor
mov
rorb
mov
popf
cld
in
mov
cwtl
push
xchg
mov
or
rcrb
and
cmp
sbb
lret
out
and
or
cmp
js
call
sub
shlb
test
inc
cmc
pop
fcoml
mov
iret
pop
xor
repnz
out
enter
push
sub
pop
lret
pop
mov
movsb
fsubrl
xorl
jo
xchg
movsb
jecxz
bound
rorl
dec
xor
dec
push
call
inc
cmp
xor
mov
push
mov
popf
sahf
ja
aas
stc
add
jmp
out
xchg
cmp
cmpsl
mov
mov
pop
in
loopne
inc
cli
or
jecxz
bound
stos
xchg
fcom
testl
dec
inc
mov
sub
dec
adc
pushf
cltd
push
fdiv
xor
rcr
inc
scas
addr16
jbe
ficomps
les
mov
cmp
xchg
sti
inc
adc
lods
xor
arpl
pushf
cmp
je
out
imul
xchg
xchg
or
push
out
out
pop
mov
jecxz
in
mov
lock
lock
inc
pop
push
push
int3
cmp
pop
mov
mov
sahf
inc
sbb
mov
daa
mov
test
nop
bound
sub
adc
movsl
mov
inc
push
pop
stc
nop
mov
outsl
aas
add
xor
inc
fs
push
test
pusha
mov
int3
scas
pop
add
sub
mov
ja
call
jg
xor
insb
addr16
out
xor
movsb
mov
inc
xchg
fbstp
sahf
sub
ret
xorb
push
sahf
into
jne
xor
out
adc
out
cmpb
sbb
sbb
xlat
insl
push
pop
out
xor
push
lcall
cmc
iret
lods
lods
dec
dec
dec
shrl
cwtl
lretw
arpl
test
in
jge
push
push
nop
push
xchg
outsl
andl
clc
mov
push
mov
jno
call
dec
push
xchg
mov
mov
test
push
xchg
sbb
outsb
lock
or
or
push
bnd
cmp
mov
jae
sbb
cmpb
pop
sub
xor
jge
xorb
push
mov
nop
jmp
push
xor
dec
inc
inc
add
fxtract
fstpl
lret
sub
adc
outsb
mov
dec
jmp
stc
call
std
and
mov
add
or
inc
in
jo
cmp
mov
shll
gs
lds
daa
xor
gs
dec
repz
jle
push
mov
lahf
cmc
and
andl
roll
enter
ljmp
jne
sub
icebp
inc
jne
loope
push
fstpt
fidivrl
push
in
sub
xchg
xchg
sbb
jl
adc
sub
pop
sub
mov
inc
out
cmp
stos
mov
xor
and
and
dec
mov
insl
stc
cmpsb
ja
jnp
iret
sar
fwait
and
adc
addr16
xchg
mov
int3
fcoml
arpl
push
pushf
inc
fwait
push
inc
mov
or
ds
mov
mov
push
leave
lret
aas
mov
popf
adc
movsl
aas
or
mov
stc
cwtl
cmpsb
aad
jp
fnstsw
into
clc
mov
mov
sub
nop
sbb
lret
sbb
jl
sbb
or
std
idivb
jne
aaa
sarl
lret
dec
cmp
xchg
out
int3
xor
jae
xor
lret
mov
inc
and
push
add
pop
mov
xor
dec
jbe
cld
cmp
or
test
ja
lds
sbb
cwtl
ret
push
pushf
mov
xor
or
pop
push
bound
cmpsl
mov
out
into
dec
push
movb
rcll
push
inc
adcb
or
stos
andl
mov
lods
push
fidivrs
repnz
sbb
out
sti
jle
jnp
push
icebp
into
xchg
xor
repnz
bound
cmp
dec
xchg
cmpsb
dec
push
jnp
fcomp
sub
dec
gs
out
jmp
push
mov
dec
pop
mov
movl
ljmp
pop
dec
lods
fidivl
int
push
lods
test
cmpsb
in
ret
mov
fldcw
leavew
ret
loop
pop
fwait
or
push
mov
lds
add
imul
lock
inc
cltd
add
fcoml
lods
sbbl
adc
sub
insl
test
jo
rcrb
es
in
arpl
push
mov
ss
jbe
push
iret
xchg
mov
push
ja
mov
or
mov
in
int
jnp
in
adc
push
sub
and
push
sub
arpl
inc
mov
iret
push
test
fsubs
pusha
mov
xchg
not
mov
pop
call
in
fwait
pop
inc
ljmp
scas
icebp
stos
push
and
rolb
and
mov
int3
dec
push
push
imul
or
int
int
addb
adc
jl
pop
imul
cld
jnp
dec
jg
mov
les
mov
repz
jmp
pop
and
pop
add
les
dec
cmp
mov
xor
shl
xor
cmc
dec
push
jmp
mov
xlat
aas
call
cmp
xchg
shll
inc
cld
jmp
imul
aaa
and
shll
sahf
xor
push
cmp
enter
pop
fldcw
and
shr
push
xchg
ficoms
push
scas
repz
dec
xor
mov
mov
or
mov
push
roll
loope
sub
ljmp
mov
in
lock
testb
or
aaa
and
jno
sahf
dec
push
ret
in
jle
repz
jo
mov
call
xor
stos
out
loop
scas
inc
sub
and
jae
stos
es
dec
pop
mov
ror
jg
fldcw
jae
push
pop
test
sahf
call
mov
sbb
iret
jmp
out
data16
nop
dec
mov
pushf
adc
sub
sbb
xchg
xchg
icebp
lret
push
arpl
fildl
lcall
sahf
xchg
mov
inc
pop
pop
cs
std
pop
xor
fisttpll
cmp
jle
pop
flds
xor
mov
sbb
call
cmp
mov
lock
aad
paddsb
xchg
fdiv
loopne
jmp
push
mov
lock
popf
out
lret
xchg
dec
shll
outsl
or
jns
dec
mov
push
sbb
jmp
mov
call
in
scas
xlat
sub
shrb
ss
sub
test
mov
pop
xchg
or
movsb
push
lods
inc
movsb
mov
shrb
push
test
jmp
lcall
or
ss
jmp
xor
ja
xchg
or
ss
adc
mov
outsl
or
repnz
sahf
mov
out
mov
jnp
loop
push
rcll
and
loopne
jge
mull
into
pop
aam
xchg
mov
jmp
addr16
dec
aaa
bound
scas
push
push
jecxz
add
js
pop
fildl
push
icebp
mov
mov
inc
scas
notb
lods
ss
rclb
or
addr16
arpl
add
xlat
shlb
xchg
jnp
scas
test
int
sbb
mov
scas
and
je
xchg
push
mov
rorb
adc
cmp
stc
imulb
incb
lret
jecxz
sti
cmp
pop
cltd
cmpsl
std
sbb
jb
push
xlat
push
pop
cmp
enter
push
push
lcall
not
and
aam
data16
rolb
pop
popa
in
test
js
das
mov
out
insl
jge
xchg
jo,pt
aas
jl
adc
jno
lea
xor
dec
sbb
dec
mov
mov
xor
mov
test
test
in
out
or
mov
adc
ret
fildl
pop
dec
gs
mov
xchg
test
orl
into
push
dec
aaa
nop
aam
scas
xchg
push
jmp
cmp
jle
fcmovu
inc
fnstsw
popf
mov
push
stos
mov
jae
jns
je
pop
pusha
adc
pop
cmp
cld
and
push
addr16
lcall
jns
adc
sub
mov
sub
mov
adc
and
bound
ret
mov
lea
arpl
push
mov
pusha
xchg
outsb
pop
ret
cmp
stos
xor
mull
push
sbbb
insl
push
loope
pop
jns
push
decb
sub
mov
hlt
fsts
fcomi
lds
popa
les
pop
pop
mov
fisttpll
cmp
cmp
ja
xchg
ror
sub
inc
andl
in
pop
xchg
or
call
arpl
shr
mov
xlat
mov
xchg
sti
dec
push
sbb
stc
iret
lods
add
shrb
sub
movsl
push
inc
jle
stc
push
add
sub
push
aas
sarb
pusha
aad
faddl
shr
mov
adc
xchg
inc
push
mov
xchg
mov
cld
in
je
bound
cmc
sbb
cmp
mov
lds
out
adc
mov
adc
mov
popf
sbb
sbb
lret
adc
leave
fs
xor
and
sub
pop
ja
mov
loopne
xchg
dec
fsubrs
rcll
in
push
popf
std
fsubrp
repnz
in
bound
xchg
call
xchg
cmc
adc
pop
icebp
ss
pop
xor
out
ror
jg
push
cltd
sbb
mov
jecxz
pop
lea
int
and
imul
scas
popa
cmp
jno
push
scas
adcl
lahf
daa
sbb
mov
imul
or
jmp
fwait
xchg
xchg
test
inc
fists
iret
out
push
pushf
shl
stc
push
mov
sti
movsl
add
mov
in
js
lret
mov
sub
out
mov
jp
push
fcoms
cmpsl
push
push
mul
test
sbb
outsl
enter
lcall
push
cwtl
xchg
adc
into
stos
or
jnp
xchg
mov
and
mov
mov
nop
mov
jae
push
rcr
jnp
pop
jae
jmp
pop
test
ja
pop
andb
cmpsl
mov
push
test
test
imul
xor
lea
mov
test
xor
mov
adc
scas
cmp
arpl
xor
pop
xor
outsl
pop
sti
outsl
jl
cmpsl
cmc
cmp
test
cmpsb
fildl
shll
neg
and
cli
fsubs
not
daa
push
enter
stc
fnstenv
sbb
adc
adc
je
sbb
lret
sub
mov
dec
sti
and
mov
sub
outsb
shrb
add
cmp
inc
bswap
sbb
mov
push
fnsave
and
jae
sub
sbb
dec
divl
sbb
cwtl
sub
push
repz
and
cltd
lret
in
jae
sti
stos
leave
in
jmp
xchg
fadd
dec
mov
cmp
pop
es
arpl
adc
mov
fistl
cld
push
xchg
inc
inc
sti
xchg
push
cs
sub
adc
jmp
into
sub
pop
xor
je
push
push
int
or
ljmp
jle
cli
push
jmp
xchg
lcall
sub
xchg
fwait
dec
scas
mov
jle
pop
test
pop
ds
jecxz
cs
cmc
lahf
adc
jae
lret
scas
stc
fldt
xchg
pusha
in
xchg
dec
jnp
adc
in
divl
scas
mov
cmc
pop
jnp
adc
xor
push
arpl
cmp
push
xor
ret
jmp
inc
neg
subb
mov
clc
push
test
pop
mov
jecxz
icebp
sahf
popa
out
dec
js
mov
outsl
push
lods
xorl
jmp
cmp
dec
in
push
sti
xchg
lods
sub
sub
pop
jns
not
dec
sbb
icebp
dec
daa
andl
push
aam
push
sbb
lods
out
mul
pop
out
imul
test
or
ljmp
cwtl
cld
or
loope
mov
push
add
fwait
ss
out
mov
pop
sub
fcomps
in
call
xchg
imul
push
mov
movsb
cmp
test
pop
lock
push
sahf
jl
scas
inc
iret
xchg
or
std
bound
sbb
outsb
sub
notl
push
pop
adc
jl
in
dec
je
mov
bound
mov
jbe
jnp
and
sub
jle
sub
aam
lods
xchg
push
push
into
mov
jg
lret
out
bound
xchg
fwait
pop
jno
inc
movsb
xor
mov
sub
xchg
js
lcall
xor
push
inc
test
fnstsw
rcrl
rcrb
jbe
movsb
push
sub
mul
stos
icebp
shl
leave
mov
push
push
add
ja
test
mov
addr16
xchg
pop
sbb
push
repz
and
ret
jno
jmp
cmpsb
push
repnz
jl
repz
imul
addl
dec
jmp
dec
repnz
popl
gs
insl
loop
in
push
push
push
cwtl
out
fisttpl
push
add
icebp
lods
mov
sbb
rclb
xchg
outsb
xchg
add
int3
xchg
insb
js
gs
sub
in
mov
or
sub
cltd
jo
mov
outsl
mov
loopne
lods
sahf
stc
lds
dec
dec
popa
jle
push
mov
lahf
repz
jnp
sub
ja
out
push
pop
push
cmp
add
enter
dec
push
outsl
dec
pop
ret
or
movsb
pop
insb
jmp
push
cltd
data16
sbb
push
inc
dec
imul
push
cli
shrb
mov
mov
xor
pushf
cmc
push
ljmp
cmp
icebp
dec
jecxz
fwait
inc
push
push
sbb
ret
jbe
scas
push
sub
scas
jp
sbb
pusha
push
int3
nop
clc
jnp
mov
inc
insb
mov
scas
xchg
pop
and
push
inc
fwait
gs
add
lds
fdivp
push
push
addr16
pushf
fcomi
call
mov
stos
jle
addr16
sub
in
mov
std
nop
mov
out
rcrb
and
imul
lods
outsb
push
push
repnz
rcrb
mov
mov
add
out
cwtl
and
sbb
popa
js
xor
or
enter
dec
xchg
jo
stos
cmpsl
ret
push
pop
xor
test
mov
mov
jmp
out
insb
xchg
fnstsw
jmp
pop
ret
sbb
mov
lds
mov
outsl
and
out
cmp
ja
xor
adc
fneni(8087
gs
dec
push
ja
push
bnd
mov
dec
insb
dec
es
cmp
clc
push
cmpsb
std
sub
push
sar
adc
adc
mov
inc
aaa
mov
cltd
imul
mov
faddp
adc
mov
out
cmpsl
insl
or
in
cld
jl
or
jns
and
mov
inc
mov
mov
jnp
repnz
sarb
in
inc
xor
out
jge
insb
imul
fwait
movsb
inc
jns
and
popa
mov
sbb
mov
fsubrl
bound
jnp
rorb
and
iret
fmull
and
dec
xor
rcll
aad
call
in
outsl
out
imul
call
mov
fsubs
aas
xor
shlb
xor
xchg
push
cwtl
push
scas
jmp
pop
sti
push
push
mov
test
or
aas
push
subb
call
lods
cmp
push
cmp
mov
push
jmp
push
pop
dec
cwtl
inc
adc
fs
lds
mov
int3
xchg
jns
adc
icebp
xlat
ds
popf
add
pop
ss
fs
mov
insl
mov
dec
fiaddl
xor
or
cmc
dec
xor
call
push
arpl
or
lock
adc
mov
aam
jmp
cmpsl
inc
jnp
xor
nop
in
ss
rorl
cmp
nop
aaa
mov
dec
popa
cmc
addr16
clc
jo
daa
push
jle
xor
lret
int3
mov
test
sub
fdivrl
inc
pushf
js
jbe
mov
sbbl
fidivs
sub
pop
and
in
cmc
mov
dec
mov
push
shlb
inc
adc
shrb
mov
cld
cmpsb
fldt
inc
lahf
jmp
push
js
jne
push
jmp
cmp
mov
lret
push
xchg
loop
dec
or
int3
cmpsb
adc
iret
jbe
bound
push
mulb
sub
scas
gs
cltd
dec
mov
jecxz
int
add
cmc
inc
sbb
scas
sub
jl
sbb
iret
bnd
xchg
lock
push
lock
ret
cmp
pushfw
push
mov
jns
bound
mov
pop
ret
inc
mov
add
lcall
mov
mov
in
aam
das
bound
add
xchg
imul
into
push
push
inc
push
mov
fcomp
push
fdivrs
mov
mov
subl
push
jns
movsl
xchg
xorl
inc
add
imul
lods
in
stc
test
sbb
or
dec
jnp
jle
les
add
jne
push
aam
mov
cmp
push
das
out
mov
dec
mov
data16
and
cs
or
lock
fmul
push
and
fstpl
sub
into
jnp
shr
sahf
xchg
roll
jmp
push
imul
and
dec
sbb
xchg
pop
fs
push
sti
in
or
mov
jge
mov
xor
mov
adc
imul
call
mov
pusha
cwtl
outsl
repnz
dec
icebp
mov
stc
dec
mov
cmp
xor
cld
es
adc
cltd
out
push
mov
scas
and
pusha
pop
add
mov
push
fsub
cmp
push
dec
inc
pop
mov
cmc
jne
sub
stos
addr16
pop
jmp
sub
out
pushf
bound
stc
repnz
iret
aad
and
popf
lret
jg
insb
leave
lock
loopne
jmp
lds
addl
mov
fwait
testb
inc
or
addl
insb
testl
mov
push
sbb
shr
pushf
aam
mov
lret
fucomi
push
lock
adc
in
repz
push
push
pop
sahf
adc
jle
mov
mov
push
jnp
mov
lock
bound
movsb
sbb
rclb
in
into
cld
add
or
inc
push
test
sahf
ret
xchg
jle
ror
cltd
daa
lea
adc
out
popa
mov
mov
xor
cs
jo
sbb
test
fstps
sarb
sub
or
cmpsb
sti
rolb
popa
jnp
ss
aaa
lret
mov
xchg
xchg
aam
mov
dec
sbb
inc
out
mov
push
pop
xchg
xor
xor
add
cli
aaa
and
stc
data16
mov
jle
jno
sarb
lret
repz
mov
imul
lods
jg
jb
and
lret
lret
mov
sub
pop
js
ficoms
in
popf
jne
push
sbb
pop
bound
js
inc
sub
subb
jb
push
bound
fs
jl
fcoms
pop
push
stos
push
inc
pusha
ret
mov
insl
xor
jp
mov
xlat
cmp
and
mov
mov
mov
push
punpckhdq
test
dec
and
mov
dec
mov
sub
fwait
xor
push
cmp
push
aam
lret
lahf
aam
clc
jae
movsl
add
or
sub
out
cs
aam
data16
sarl
sub
push
nop
es
push
mov
cmc
sahf
call
out
lahf
push
push
pop
outsl
outsl
pop
adc
lcall
es
lods
jae
iret
lods
scas
inc
cmpsb
nop
add
lods
sbb
mov
or
scas
pop
push
lahf
sbb
aad
lods
test
pop
mov
mov
stos
rcrb
into
lcall
outsl
call
jp
outsl
inc
fwait
pop
ret
and
add
cmp
aad
adc
and
cmc
mov
lods
lret
jns
push
or
repnz
enter
sti
pop
je
cwtl
adc
out
sbb
leave
test
sub
and
mov
sbb
cld
or
test
xchg
jge
scas
push
xchg
cwtl
add
xor
in
iret
fcomps
cld
aad
add
and
push
adc
stos
push
repnz
dec
jnp
in
inc
push
imul
xor
in
pop
mov
xor
inc
add
inc
cmp
mov
ja
pop
push
shr
inc
jecxz
lret
scas
and
test
fadds
mov
and
fcompl
adc
xor
mov
jnp
push
jge
iret
adc
xor
arpl
mov
test
push
dec
mov
insl
sbb
cwtl
xchg
ror
scas
sbb
sub
sahf
inc
insb
test
insb
xor
inc
nop
dec
das
bound
inc
sbb
xchg
xchg
dec
shll
outsb
dec
sbb
ffreep
pop
mov
xchg
mov
pop
hlt
push
xchg
pop
jmp
mov
fst
sub
pop
sbb
das
test
aaa
xor
fs
mull
xchg
or
data16
out
adc
adc
mov
pop
xor
iret
fildll
push
mov
int3
mov
add
push
add
shll
bound
push
notb
cmp
enter
enter
enter
and
dec
pop
push
dec
push
insl
daa
adc
movsb
sbb
mov
or
daa
iret
fnstcw
lret
cmp
stos
les
push
sub
subb
ret
ljmp
hlt
inc
rclb
rolb
push
bound
fisubrs
xchg
mov
dec
inc
sti
ficompl
xor
jno
cli
jg
gs
mov
lret
or
push
scas
jle
cmc
iret
xchg
int
sub
data16
mov
sbb
cmpsb
add
xor
pop
int
pop
mov
mov
sahf
cltd
inc
jnp,pt
test
cli
stos
add
push
fdivrl
stos
cmp
stos
out
movsl
cmp
outsl
fnstenv
push
ds
js
ret
inc
outsb
sbb
dec
push
rcl
mov
iret
ret
and
or
imul
loop
sub
iret
bound
je
cmp
pushf
out
inc
adcb
dec
stos
repz
jbe
inc
pop
cmp
pop
out
push
inc
call
mov
loope
sbb
in
jbe
dec
lea
pop
cmp
xchg
add
cmpsl
int3
xor
jb
stc
jmp
jbe
aad
adc
inc
das
int3
add
nop
test
push
sub
bound
js
ficoms
inc
pushf
aam
aad
int3
or
push
cltd
push
sbb
and
mov
and
cmp
xor
out
or
xor
sub
pop
test
xlat
fildl
cmp
xchg
pop
loop
out
jl
mov
cmc
jmp
jecxz
std
test
std
push
xchg
cs
fcoms
sti
outsl
pop
push
out
cmp
ss
push
jnp
shll
push
ss
xchg
lret
loopne
pusha
pop
or
mov
xlat
jmp
adc
mov
xchg
or
pop
or
pop
jo
frstor
mov
cwtl
fwait
pushf
sub
in
cmpsb
imul
push
push
shlb
data16
arpl
dec
out
jle
movsb
popa
pop
data16
daa
das
repz
push
stc
fstpt
aad
fdivrl
push
cltd
xor
mov
xor
addr16
ret
out
push
outsl
loopne
out
and
jae
data16
cmp
sbb
push
fwait
xorl
jmp
jae
jb
bound
fsubrs
fwait
xchg
mov
push
ds
in
insb
ds
jp
mov
out
add
mov
pop
add
jmp
mov
xchg
xchg
push
shlb
js
cs
sub
pop
fs
sub
lahf
cmp
nop
out
push
in
xor
in
lock
sub
adc
jge
mov
lret
cmc
test
fidivrl
jge
ret
ja
lds
mov
lods
outsl
xor
jno
push
jnp
leave
push
shr
xor
add
add
push
fidivs
dec
ret
stc
jnp
dec
test
mov
imul
insb
inc
cmpsl
stos
iret
loopne
xor
outsl
inc
sub
dec
lods
inc
dec
jbe
xor
das
fmull
mov
iret
aas
mov
fidivs
xchg
scas
out
sbb
div
fs
push
and
fadds
xor
mov
mov
cmp
cmp
nop
iret
jno
push
mov
enter
mov
loop
sti
stos
pop
ljmp
jg
pop
xor
fs
ret
movsb
out
xchg
xorl
sbb
pop
fwait
dec
bound
arpl
pop
sbb
aas
sbb
xchg
in
pop
js
mov
nopl
roll
gs
sub
add
bound
stos
adc
pop
jg
mov
pop
push
pusha
push
xor
mov
cmp
enter
sub
aas
push
mov
mov
xchg
sub
leave
fmull
ljmp
xor
mov
je
nop
push
dec
mov
es
xchg
jl
inc
pop
sbb
mov
jmp
dec
fisttpl
lahf
adc
and
pop
pop
lods
loopne
js
push
icebp
or
iret
mov
xor
sti
jnp
or
pop
shrl
daa
pop
lahf
cltd
push
enter
mov
in
enter
adc
bound
push
or
in
push
repnz
xchg
push
mov
in
sahf
sub
pop
adcl
dec
lahf
enter
int3
jg
cmp
or
les
jae
repz
inc
inc
ss
cld
insl
mov
push
cld
out
cmc
push
rep
cmp
pop
clc
sti
dec
and
insl
iret
outsb
pop
int
mov
mov
inc
lret
pushf
xchg
jbe
adc
or
pusha
or
aaa
mov
mov
push
mov
mov
cmc
mov
ja
add
adc
cmp
jmp
movsl
aas
arpl
adc
lds
inc
push
jle
inc
sahf
sahf
xor
adc
bound
and
ss
or
adc
jg
and
roll
mov
push
push
mov
push
imul
addr16
xchg
in
lock
or
ljmp
dec
sahf
in
adc
xor
sbb
jnp
xchg
hlt
push
bound
push
cmp
das
push
xchg
adc
xchg
sub
add
js
call
fidivrl
push
push
push
jl
lods
push
into
loopne
sub
addl
pop
test
std
inc
adc
call
adc
pop
dec
sbb
dec
pop
jge
aas
ljmp
lret
je
adc
sub
xor
push
sub
std
adc
xchg
stos
mov
int
adc
rolb
cmp
mov
lea
lret
lret
jae
ficoml
xor
add
push
movsl
push
lods
and
lcall
orb
lret
dec
movsl
cmp
outsl
loopne
cmp
scas
jne
inc
xchg
inc
lret
pop
mov
ret
jp
or
and
insb
push
sahf
xchg
and
stos
mov
or
mov
mov
mov
push
jae
push
mov
cmpsl
mov
pop
dec
subb
cmp
sti
xlat
call
dec
fmul
mov
push
or
out
aas
orl
push
or
xor
scas
xchg
cmp
movsl
xchg
dec
bound
push
outsl
lock
cmp
inc
pusha
mov
or
test
pop
or
inc
mov
sbb
pushf
jmp
das
pop
cwtl
cmc
shr
push
mov
movsl
jmp
je
or
and
dec
inc
popa
add
cs
test
sbb
in
ret
leave
dec
mov
int3
lret
fisttpll
jnp
fcomip
add
jl
rcl
in
mov
jle
push
stc
iret
mov
std
xchg
sti
cmp
out
xchg
xor
jbe
push
mov
add
andl
push
cli
add
cmp
pop
jb
mov
test
aaa
fwait
iret
call
sbb
icebp
inc
xchg
jmp
add
mov
mov
lods
cwtl
fstl
movsl
shll
inc
dec
inc
lds
push
loop
add
iret
stc
jmp
sahf
in
jnp
insl
jmp
pop
adc
sbb
andb
icebp
push
sahf
in
mov
dec
imul
lret
out
in
repz
std
jle
jae
add
addr16
cwtl
pop
es
xchg
mov
mov
stos
push
push
test
in
ret
sti
push
popf
insb
and
imul
and
int3
jne
jb
bound
and
int
mov
inc
pushf
adc
out
lret
mull
jecxz
outsl
push
sub
mov
ret
jmp
test
and
sbb
mov
mov
inc
fimuls
add
test
bound
cmc
mov
jne
shlb
dec
mov
xchg
add
shl
adc
scas
push
das
dec
push
mov
or
dec
xchg
aaa
mov
inc
int
mov
push
clc
subl
fcoml
std
and
ds
insl
fcompl
cmp
jbe
xlat
jg
or
cmp
inc
popa
mov
push
add
subb
adc
mov
pop
add
sub
and
in
cmp
mov
lds
leave
adc
inc
cltd
sub
sub
jp
rol
xor
popa
addr16
aaa
into
dec
icebp
bound
xor
cmp
mov
in
icebp
shl
sub
sbb
popa
addr16
xor
fwait
nop
and
aaa
sarb
jge
or
outsb
push
mov
daa
xor
push
sub
mov
adc
fwait
mov
add
dec
dec
mov
lret
bound
xchg
and
adc
xchg
xchg
imull
jne
adcb
jne
push
bound
divb
notl
sti
iret
loopne
add
bound
lret
jae
pop
stos
push
fsubl
loop
fwait
cli
adc
push
sbb
jmp
mov
out
insb
push
sbb
repz
sarb
stos
push
scas
jnp
scas
cmpsl
push
sarl
scas
imulb
inc
cmc
out
xchg
enter
xlat
xchg
dec
adc
test
jmp
call
and
ss
in
mov
xor
dec
jo
push
inc
icebp
push
jae
jns
cld
cmp
or
into
nop
jmp
dec
in
sbb
hlt
push
push
and
mov
pusha
stc
pop
mov
or
insb
jnp
inc
inc
push
cld
xchg
cmp
jg
into
out
stos
dec
cmp
jbe
fdivs
cltd
mov
push
outsl
cld
das
cmp
mov
call
les
jnp
shrb
cmp
stc
lods
stos
gs
adc
push
sub
ja
inc
jno
sub
int
lds
mov
lcall
mov
xchg
scas
pop
mov
pop
in
mov
jle
and
cmp
cmp
loop
or
flds
jo
aad
jg
cmp
xor
lds
mov
insb
and
sub
movsl
or
push
in
mov
pop
pop
pop
les
bound
mov
jne
adc
or
jno
dec
adc
sbb
or
gs
loop
mov
add
iret
int
movsb
xchg
stos
das
bound
mov
add
dec
enter
lds
pop
mov
sti
push
data16
movsb
in
or
insl
lahf
push
fstps
jno
mov
loop
sbb
mov
cmp
dec
jle
mov
jmp
gs
cmp
test
cmp
pop
mov
outsb
shl
je
jo
pop
xor
mov
je
int3
fs
or
loope
cmp
push
out
mov
inc
push
std
push
ret
lret
sbb
out
lcall
adc
mov
and
mov
popa
adcl
inc
pop
shll
mov
push
fdiv
and
dec
adc
mov
fldcw
and
shlb
push
cmpsb
lret
testl
adc
cmp
xchg
lods
ds
and
cmp
lret
jnp
addr16
mov
xchg
aaa
fcompl
xchg
cld
test
les
shr
lock
ror
es
mov
bound
lds
out
inc
push
mov
aam
rol
testl
mov
xlat
xor
in
loopne
xor
and
out
gs
int3
xchg
fwait
pop
adc
in
inc
fisubl
dec
add
push
adc
fs
push
pop
sbb
and
jle
mov
jo
mov
pop
inc
mov
lret
sub
or
pusha
aaa
sub
divb
js
and
xchg
popa
ret
scas
testb
das
ds
adc
bound
in
push
jmp
jnp
xor
ljmp
aad
cmp
mov
pop
lods
fnstcw
fidivs
fnstenv
mov
sbb
xchg
push
cwtl
test
xor
inc
lret
mov
sub
push
inc
das
sub
push
sti
andb
xor
xor
jbe
xchg
insl
sub
inc
dec
popf
adc
es
or
sbb
lahf
pusha
jg
push
cmp
popa
fdiv
sub
xchg
inc
out
insb
nop
inc
sub
jle
test
cmp
out
xor
bound
mov
push
in
test
dec
pop
faddl
dec
repnz
movsl
cmp
mov
jmp
ret
push
cmpsb
jno
cmp
inc
stc
cld
jl
jle
aas
pop
pop
xchg
sbb
pop
jmp
adc
popf
xchg
xor
mov
bound
mov
push
call
push
idivb
scas
pop
push
stos
repnz
popf
mov
mov
loope
sahf
sub
sbb
jns
js
mov
out
jno
xchg
jns
out
xchg
fildl
xchg
dec
fs
push
inc
cs
cltd
add
jmp
ficoml
xchg
lds
mov
roll
pop
ds
test
sti
and
loop
jno
fdivrl
lods
mov
adc
outsl
and
inc
stos
nop
xchg
push
ret
push
loope
sbb
add
xchg
nop
xor
shlb
sbb
xchg
pop
or
cmp
pop
mulb
repnz
and
jns
das
dec
xor
mov
imul
test
loopne
loopne
jmp
stc
fisttpll
sub
mov
mov
pop
scas
shrb
cmp
sbb
dec
out
push
rcrl
test
add
and
add
pop
ror
pop
xchg
int3
jo
mov
jbe
loop
fstpl
mov
sub
mov
jp
sub
popa
outsb
push
inc
mov
inc
mov
mov
mov
cmp
mov
adc
cmp
lret
int
jae
sbb
js
xor
cmp
out
fwait
sub
sbb
and
mov
test
jp
jmp
cmp
icebp
les
addr16
stos
or
sti
or
stos
add
jmp
add
bound
aam
or
xchg
inc
xchg
in
mov
mov
stc
mov
mov
jecxz
out
lret
add
dec
and
cmc
sub
cmp
and
pop
scas
call
and
fdivs
bound
les
test
cmpsl
stos
inc
mov
mov
and
and
push
fadd
out
call
dec
shlb
mov
data16
and
cwtl
mov
es
sahf
mov
in
divl
push
rcrb
js
daa
xchg
sbb
jg
nop
sbb
faddp
mov
addr16
pushf
mov
add
jbe
call
push
dec
mov
pop
js
add
inc
ret
xor
pusha
dec
lods
call
aaa
push
and
dec
cs
push
or
mov
sub
push
dec
fcom
hlt
outsb
jo
jae
mov
dec
adc
xchg
sbb
jp
bound
push
push
mov
negl
dec
add
sbb
and
mov
dec
mov
ja
adc
repz
add
jae
ret
pushf
xlat
mov
push
pop
ja
sbb
frstor
and
jl
jmp
stos
repz
jecxz
lcall
mov
pop
xlat
xchg
jbe
cwtl
das
push
repnz
pop
mov
pop
sar
rorb
or
xchg
push
pop
cmp
jl
or
add
jnp
pusha
mov
inc
add
fstpt
jg
inc
sti
loope
pop
fisubl
sahf
cmc
push
inc
dec
adc
mov
outsb
arpl
imul
test
sub
inc
push
pop
push
stos
dec
push
nop
fcmovb
jmp
adc
push
shl
ficoms
add
inc
pop
mov
fmuls
inc
jb
jge
dec
nop
lret
inc
jmp
into
mov
lcall
push
out
inc
addr16
sub
pop
out
lret
in
loopne
push
ja
pushl
inc
fs
mov
inc
mov
mov
cmp
inc
add
in
add
outsb
push
lds
dec
loop
push
push
cmc
jle
xorb
mov
mov
sbb
fstpl
movsb
jmp
xchg
jmp
in
ficomps
jae
add
imul
inc
popa
xor
xchg
pop
adc
lret
addl
adc
lods
pop
and
mov
mov
push
mov
xchg
add
mov
push
sahf
jnp
xchg
out
cmpsb
xchg
xchg
andl
inc
mov
or
arpl
int
call
lret
jmp
cmp
mov
sub
cltd
cmp
mov
push
arpl
cmpsb
inc
nop
into
mov
and
xor
sub
mov
sbb
dec
add
loope
push
aad
cmp
mov
insl
je
fmuls
aad
push
and
mov
mov
jecxz
push
pop
xor
sub
jle
sub
xor
jp
loop
xchg
inc
pop
jnp
movl
sbb
lds
inc
outsb
in
fsubrl
pop
mov
les
inc
int3
out
addr16
mov
pop
xchg
sub
cmp
loopne
push
fs
push
lods
fwait
jb
xchg
pushf
psllw
add
rorb
add
sbb
movsl
mov
negl
cmpb
movlps
hlt
push
lret
jmp
and
cmp
sbb
sub
imul
cmc
mov
xchg
sub
and
outsl
or
adc
sbb
jle
push
dec
jo
pop
mov
mov
mov
adc
xor
in
xchg
scas
inc
stos
bound
fdivp
stos
cld
into
xchg
or
inc
adc
jns
ret
fdecstp
xor
iret
push
xorb
inc
mov
in
jmp
and
cli
push
xor
in
sbb
mov
iret
pop
mov
lret
push
cwtl
fidivrl
or
cmc
sahf
jne
add
out
cmp
mov
rep
shll
sbb
cltd
movb
mov
rcrl
push
scas
nop
dec
xchg
test
mov
addl
mov
in
ss
sbb
pop
fistpll
jle
pop
sti
aam
adc
jnp
daa
add
cmp
inc
cmp
imul
lods
inc
pop
xchg
sti
inc
out
mov
lds
push
shlb
and
mov
addr16
fidivs
and
and
inc
inc
cmc
mov
push
jle
cli
mov
in
adcl
push
hlt
imul
jne
aas
mov
fdivrs
andl
out
mov
push
xor
fstpt
mov
push
sarl
jl
aaa
xchg
imul
xchg
loop
xchg
mov
sbb
sbb
jp
loop
outsl
inc
iret
inc
cmp
mov
fdivs
bound
mov
mov
shlb
es
cwtl
popa
lret
out
insb
daa
push
mov
ljmp
imul
ror
pop
es
rorl
int3
loop
inc
hlt
adc
mov
insb
push
cltd
pop
xorl
lahf
ficoms
aaa
insl
fiadds
pop
ljmp
xchg
sti
fimull
adc
push
dec
adc
jmp
repz
fimull
lods
lret
sbb
mov
adc
push
ds
out
ret
lret
xorl
aaa
mov
loopne
into
mov
bound
inc
sub
add
das
xchg
std
mov
push
or
ss
jg
jle
in
bound
sub
xor
insb
xchg
push
dec
gs
push
popa
es
mov
dec
sbb
cltd
cmpsb
les
int3
mov
popw
push
and
inc
sub
sbb
jecxz
ret
test
call
out
push
fistl
jae
adc
enter
mov
push
out
sub
inc
call
test
test
mov
std
icebp
lret
frstor
cmp
mov
aad
loopne
mov
fsubrs
inc
stos
jne
mov
dec
sbb
mov
inc
push
call
leave
xor
or
xchg
insl
adcl
daa
xchg
xchg
icebp
jns
mov
insl
add
jl
ja
iret
es
mov
outsb
loop
lea
sub
pop
push
out
fsub
cmc
dec
int3
pop
lods
cmp
xor
pop
push
lods
jg
jbe
sbb
push
mov
dec
and
sbb
test
dec
outsl
xor
push
add
and
stc
js
adc
in
mov
sbb
mov
add
or
sub
bound
lods
push
dec
mov
pusha
ja
xor
test
cmp
gs
dec
xor
sahf
in
imul
inc
ret
sbb
jecxz
mov
rsm
loope
inc
jnp
cmp
jo
fisubs
cmp
cmp
jmp
dec
pop
xor
push
movsl
icebp
imul
pop
and
jg
inc
mov
stos
fldt
test
test
push
cmp
fisubrl
aas
cmp
test
ja
or
mov
shr
dec
lea
orl
fisttps
outsb
inc
test
out
jl
and
iret
jno
cmp
xchg
into
out
fidivrs
pushf
jns
push
push
stos
fisubrs
fidivrl
int3
lock
inc
stos
fsubl
sbb
xchg
or
push
outsl
add
scas
bound
cmp
push
push
push
pop
mov
das
cli
loope
in
gs
pop
ret
xchg
in
adc
and
mov
inc
mov
scas
cmp
push
inc
into
adc
lds
pop
xchg
fbld
mov
or
xor
push
mov
je,pt
adc
jg
push
scas
ret
add
ret
addr16
mov
pop
js
lods
rol
mov
sub
xchg
inc
jmp
insb
cmovae
bound
xchg
test
jmp
cmp
add
jg
adc
sbb
cmp
ja
pop
cmp
repz
push
jle
pushf
movsb
aam
int3
mov
rorl
js
lret
xchg
dec
cltd
sub
insl
lea
orl
mov
mov
lds
aam
data16
fisttpl
hlt
call
add
xchg
addr16
lcall
in
xchg
fldt
xlat
scas
incb
jle
pop
js
pushf
adc
xor
imul
dec
or
mov
ret
leave
jns
mov
and
rorb
enter
fiadds
or
push
add
adcb
orl
int3
outsl
test
push
sbb
insl
sub
loop
mull
push
int3
xor
and
popa
cmpsl
dec
out
loop
cmp
aam
aas
popa
inc
addr16
mov
sbb
jecxz
int3
cld
adc
or
cli
gs
imul
pop
icebp
and
popf
out
xor
in
cmp
or
out
xor
xchg
sti
xor
out
call
xchg
pop
xchg
mov
movsb
les
dec
mov
fstpt
mov
push
push
jae
xor
gs
lcall
inc
push
jno
bound
mov
pop
insb
or
push
add
fisttpl
sbb
pushf
ud2
enter
imul
sarb
scas
jo
mov
and
cmp
stos
rorl
scas
iret
mov
and
mov
cmpsl
cmp
cmpsb
movsl
push
cmp
jno
mov
cld
jp
negb
dec
mov
pop
and
aas
sbb
xchg
jbe
ljmp
es
outsl
sti
mov
xchg
mov
out
jnp
lods
bound
push
dec
jle
imul
xor
bound
jmp
lahf
jecxz
lea
shll
daa
mov
cmp
mov
test
pop
pop
imul
sahf
and
fxch
icebp
out
std
mul
adc
in
inc
xlat
pop
adc
add
sub
pop
lods
stc
mov
inc
mov
cmpsb
push
pop
lods
das
andb
into
or
in
outsl
bound
mov
add
je
call
jmp
test
mov
bound
idiv
and
data16
cmp
inc
pop
ja
imull
in
xchg
adc
aad
sqrtps
sub
xchg
mov
mov
xchg
loopne
test
in
call
ljmp
movsb
xor
out
add
inc
jmp
or
xor
inc
adc
into
aas
fcomps
mov
cmp
fcom
xor
fisubrs
push
inc
insl
scas
scas
cmp
cmc
sub
mov
loop
sub
or
out
hlt
lods
push
mov
cmpsb
insb
test
push
roll
out
mov
sub
iret
pop
adc
jae
mov
in
aas
inc
sbb
xchg
cmp
jno
push
cmp
call
mov
pop
push
and
push
gs
push
iret
xchg
cmp
add
pop
push
pop
negb
dec
scas
sbb
cwtl
push
or
roll
test
daa
das
lods
dec
adc
sbb
mov
shrb
shrb
push
add
cs
ret
xchg
and
js
pop
imul
nop
arpl
xchg
push
mov
out
pop
mov
jecxz
pop
xor
pushf
cmp
push
jp
add
xchg
push
lret
pop
call
xor
in
sbb
lods
sbb
xor
push
push
arpl
lret
fdivs
orl
aas
dec
ja
dec
sbb
jp
xchg
adc
stc
mov
dec
pop
and
jecxz
adc
scas
inc
and
into
push
xor
adc
jae
pop
sti
and
lret
pop
mov
mov
lock
in
sub
subl
mov
das
jmp
and
sub
or
jo
push
pushf
aad
mov
add
gs
sbb
repnz
xor
ret
test
outsb
pop
push
sub
cli
push
in
push
pop
mov
pop
adcl
sbb
xchg
lret
and
fs
add
cmp
sahf
or
jmp
out
lret
sbb
ja
pop
sbb
leave
int3
enter
inc
mov
popa
jle
cmc
test
inc
lds
cmp
mov
gs
pop
imul
jl
add
dec
ret
push
push
lret
sbb
fsubl
scas
sti
inc
movsb
mov
cmp
gs
xor
movsb
test
sbb
stos
mov
and
cmc
mov
cmp
mov
loopne
lret
lret
or
lods
jle
sub
cltd
xlat
ss
mov
loopne
xchg
mov
bound
dec
aas
imul
cmp
rcl
inc
cmp
mov
vcvtpd2psy
dec
cmpsb
jae
inc
rol
fs
and
mov
cld
xor
push
repnz
daa
inc
pop
add
int
push
dec
rclb
push
sbb
sbb
neg
dec
inc
cmp
cmp
outsb
repz
fdiv
and
bound
push
test
mov
dec
push
out
shl
xchg
add
mov
mov
add
jne
xchg
dec
movb
repnz
adcb
and
or
bound
das
js
mov
cmp
lea
add
jo
and
push
cmp
inc
loope
jae
shrl
cmpsl
inc
jg
sub
ja
pop
sbb
decl
and
xor
add
std
or
add
cmp
or
das
dec
push
mov
out
and
mov
and
in
int3
sub
ficompl
sarb
rorl
cli
stc
out
icebp
jno
jae
fldcw
outsw
fcoms
dec
sarl
and
repnz
fstl
jg
std
test
decb
jp
jge
xchg
push
push
adc
mov
inc
mov
pop
sub
mov
out
or
push
jmp
dec
dec
mov
movsl
pushl
cwtl
popl
pop
in
pop
push
xchg
jmp
jp
xchg
inc
loopne
xor
or
incl
fs
in
insl
sub
pop
jns
mov
call
movsb
stos
xchg
cmp
xor
push
je
sub
push
imul
mov
imul
or
out
and
cmp
xchg
and
xor
mov
scas
nop
mov
sub
xchg
push
mov
pop
adc
sub
jae
xlat
or
adc
mov
in
movsb
ds
lods
ret
test
xchg
clc
nop
icebp
iret
xchg
inc
mov
cmc
jnp
mov
bound
andb
xchg
inc
loop
out
ret
dec
repnz
pusha
sub
cmp
adc
sbb
dec
fldpi
pop
movsb
outsl
jno
lods
xchg
data16
aad
push
arpl
movsb
dec
sub
pop
or
cltd
ror
xchg
xchg
push
pop
popa
cmp
or
pop
gs
cmp
cmpl
and
and
movsb
adc
xchg
pusha
lret
mov
inc
push
or
lahf
lret
les
out
out
jle
mov
mov
repnz
jg
or
mov
mov
xchg
pop
dec
inc
sarl
cmpsl
push
jmp
por
xchg
xor
movsb
cld
pop
mov
lahf
lret
push
sar
aam
push
mov
sbb
sbb
movsb
sub
sbb
enter
mov
push
enter
jmp
adc
sbb
push
pop
mov
shlb
ja
outsl
test
inc
mov
xchg
and
daa
int
sub
adc
and
xor
push
sbb
out
ja
xchg
xorl
insb
pop
push
dec
dec
xchg
cmpsb
orb
movsl
aam
divl
inc
dec
adc
out
sbb
adc
test
icebp
jmp
pop
outsl
push
cwtl
fisubl
loop
push
in
xor
xchg
testb
or
xor
lods
push
loopne
mov
dec
sbb
sbb
cmp
mov
les
or
in
scas
fcompl
pop
test
addl
sbb
es
sbb
dec
sahf
lret
xchg
adc
or
jecxz
add
repz
ja
in
dec
testb
out
in
jmp
cwtl
dec
bound
ret
xlat
xchg
sub
mov
mov
lock
adc
js
push
rcrb
lahf
jne
das
imul
xor
push
inc
lcall
ds
daa
iret
dec
fs
insl
or
sbb
idivl
xor
inc
out
push
cmp
cmpsl
daa
sbbl
out
xor
push
int
rcll
sbb
test
push
adc
idivl
cs
imul
stos
pop
lret
int3
adc
lret
mov
repz
pop
xor
xor
int3
fwait
jmp
test
jmp
push
or
push
mov
aaa
arpl
xchg
repnz
sbb
rcrl
in
je
shl
and
ss
sahf
sbb
call
jmp
cmp
rol
sub
add
push
push
in
mov
pop
mov
push
ret
dec
jb
mov
imul
lcall
repnz
jbe
push
out
sub
in
aad
ja
std
dec
mov
pop
loopne
pop
bound
mov
lods
push
in
sbb
cmp
pop
xchg
and
insl
loope
xchg
push
les
push
mov
push
xchg
xchg
add
jg
les
ja
js
stos
push
sub
xchg
out
dec
jle
sub
adc
mov
inc
lcall
rsqrtps
lret
mov
dec
dec
ja
jle
or
cmp
mov
icebp
arpl
pop
ja
pop
mov
mov
sahf
push
mov
pop
fnstenv
inc
mov
push
std
sub
jp
push
xchg
repz
notb
adc
ss
push
sbb
xchg
pop
cmp
in
push
out
cmc
adc
in
mov
vmovshdup
dec
sub
jp
aaa
test
test
aaa
and
mulb
test
rcrl
aaa
cmp
clc
and
out
in
cmp
lds
sbb
mov
arpl
and
dec
out
sub
into
lods
mov
and
loope
jle
shl
and
add
repnz
shrl
daa
mov
fistl
int
ret
jae
iret
pop
arpl
outsl
shll
dec
in
adc
sbb
sbb
bound
fimuls
stos
push
adc
mov
aaa
sub
pop
test
xchg
lods
sahf
insb
shlb
test
test
and
shr
mov
stos
stos
mov
pop
xor
mul
lret
jne
in
mov
call
idiv
test
push
leave
push
repnz
cmc
fsubr
or
inc
stos
push
imulb
xchg
xchg
cmp
push
fisubs
arpl
lock
push
jge
sub
pop
sahf
shr
add
sbb
cmp
jp
ret
or
sub
out
popf
pop
out
or
sub
out
mov
das
int
push
xor
push
fs
mov
cs
out
dec
xchg
ret
add
inc
xorl
push
mov
mov
push
ljmp
xor
jg
fcompl
cmpsb
ja
js
out
xchg
pop
in
sub
clc
ret
adc
ss
loope
mov
aad
bound
fdivs
lret
iret
stos
fisttpl
fcomi
mov
push
jg
add
icebp
push
movl
lods
mov
push
cwtl
jl
std
insb
in
sub
jo
pop
or
cwtl
stos
bound
mov
pop
or
mov
jg
test
out
push
fnstcw
pop
lcallw
pop
jnp
push
jmp
pop
adc
out
jle
push
push
insb
cld
lods
lret
rol
add
stc
and
lods
push
add
xor
arpl
cwtl
in
jmp
add
dec
pop
inc
nop
dec
bound
xor
cmp
fwait
xchg
and
stos
repz
xor
mov
sbb
add
enter
xor
pop
mov
das
scas
jne
les
sub
adc
in
adc
jmp
roll
into
ljmp
aad
mov
xchg
mov
and
outsb
sbb
xchg
hlt
or
push
mull
mov
mov
push
fwait
push
mov
xchg
xlat
lods
xchg
fcom
sub
pusha
out
pop
sbb
add
cmp
cmp
fwait
mov
inc
aam
out
repz
ret
push
lods
fwait
pop
imul
rcrl
lahf
scas
jnp
outsb
out
loopne
cwtl
bound
push
je
xor
push
push
imul
outsl
stos
mov
mov
lds
mull
sub
dec
mov
mov
push
pop
sbb
push
push
into
push
push
and
sub
jnp
shll
out
leave
xlat
mov
cmp
jmp
and
insb
das
pop
out
mov
mov
or
jmp
ret
inc
jne
cmp
fsubrp
lret
and
xchg
jns
roll
mov
ja
in
es
mov
sub
out
mov
les
leave
sbb
pop
test
lods
push
cmpsb
cli
shll
mov
jle
push
adc
sbb
xchg
outsl
push
push
push
into
mov
jnp
cmp
xchg
sbb
pop
test
xor
out
loopne
cmpsl
sub
out
fcomip
or
sbb
xor
ja
inc
fld
popa
push
punpckhbw
jne
outsl
mov
clc
mov
sub
ljmp
stos
sti
test
push
sti
cmp
xlat
add
fidivl
push
sahf
jnp
fs
add
xchg
cmpl
test
cmp
imulb
push
push
cmpsb
and
and
and
out
test
or
shr
push
or
pop
pop
shr
cmp
adc
out
out
or
mov
jp
push
xchg
jmp
push
and
mov
pop
add
jg
inc
mov
push
and
ja
fucomp
into
sbb
sti
push
cltd
mov
nop
cld
and
mov
cli
cwtl
bound
lods
leave
mov
mov
fdivrs
jle
jle
cmp
push
xlat
shrl
sub
ja
mov
ss
ja
and
shr
mov
int3
jge
jae
dec
push
aam
das
xchg
cli
std
mov
enter
fwait
mov
fistpl
cmp
pop
gs
lcall
out
add
pop
dec
test
dec
fwait
and
sahf
mov
lods
insl
xor
pop
adc
jle,pt
insb
imul
fstps
jne
imul
out
pop
push
sbb
xor
mov
in
cmp
pop
and
sub
push
lcall
inc
sahf
or
xchg
rcrl
mov
push
psadbw
mov
pop
jmp
adc
cld
add
imul
xchg
insl
add
mov
or
push
sub
or
jmp
xchg
push
insl
addr16
cld
inc
adc
xchg
out
xchg
out
push
jl
pop
sub
pusha
add
js
push
mov
imul
pop
inc
loop
xchg
inc
mov
xchg
call
lds
sbb
in
aaa
stos
sbb
mov
inc
std
leave
inc
sub
xor
mov
das
call
sbb
jp
cmp
cmp
lret
stc
adcb
dec
pop
mov
and
imul
testl
loopne
mov
aas
and
cmp
ljmp
movsl
jns
inc
and
xchg
xor
mov
xorl
jmp
cltd
pop
inc
shrb
cs
mov
xchg
lret
push
sbb
dec
in
xchg
test
or
repz
lods
xchg
cmc
push
loope
mov
mov
fs
imul
call
repnz
movsl
sahf
or
loope
push
pusha
mov
or
sub
daa
fwait
and
fwait
xchg
ret
nop
bound
lods
ret
inc
mov
dec
movsb
push
xlat
xchg
push
jb
jmp
arpl
pop
bound
js
mov
test
mov
push
das
ljmp
adc
out
pushf
sub
ljmp
sarl
inc
call
int3
test
repz
jmp
cmp
mov
mov
in
add
sbb
pop
mov
sub
test
push
outsl
rclb
push
sub
cmp
mov
mov
mov
hlt
mov
push
adc
frstor
push
addb
scas
ficompl
push
dec
adc
aaa
cmpsb
or
push
mov
addl
push
adc
call
jae
gs
push
outsl
cli
pusha
mov
fisubrs
stc
mov
test
mov
xlat
cmpsb
pop
iret
sbbb
jg
inc
stos
ficompl
push
mov
push
inc
cmp
or
xor
pop
fmuls
mov
sbb
test
test
inc
sbb
fcompl
xchg
cmp
jae
push
and
pop
add
cwtl
cmp
mov
lock
jmp
or
inc
xor
bound
cmp
mov
and
movsb
outsb
xchg
sbb
or
je
mov
pop
fsub
in
loopne
xchg
notl
jmp
es
and
add
aam
loop
lods
sti
adc
hlt
and
pushf
ss
aaa
inc
lret
fsts
adc
add
sbb
and
xchg
inc
out
or
cmp
fs
pop
pop
ret
jg
mov
outsl
clc
dec
in
mov
js
or
das
mov
add
repz
xchg
jmp
ret
cmpsl
cmp
jp
mov
fdivrs
jmp
sbb
into
scas
adc
pop
jmp
cltd
in
jg
je
inc
sbb
push
inc
xchg
movsb
loopne
mull
push
sbb
test
loopne
mov
ja
loop
push
mov
mov
dec
repnz
cmp
lcall
push
sar
in
bound
mov
stos
sub
jb
sub
jmp
sbb
mov
push
jne
push
pop
inc
pop
jle
push
iret
outsb
inc
sub
or
mov
dec
jg
push
daa
test
ret
sub
adc
test
ss
lods
rclb
dec
in
mov
mov
int3
sbb
cmp
mov
mov
arpl
mov
mov
push
mov
pop
stc
push
scas
adc
sub
mov
pop
iret
or
add
ret
push
sub
outsl
ljmp
pop
push
sub
xorl
add
fisubl
push
and
test
push
dec
xchg
inc
mov
xor
xor
outsl
jp
cmp
test
aaa
pop
lock
mov
pusha
imul
jnp
push
pop
outsl
pop
jg
push
cwtl
sbb
mov
pushf
out
xor
xchg
mov
sub
xchg
adc
jle
inc
into
cmp
movsb
pusha
jb
mov
mov
cmpsl
xchg
push
sahf
mov
jmp
inc
or
loopne
lods
and
xchg
rcrb
mov
jge
in
push
xchg
jmp
sub
fidivrl
mov
addr16
pop
xchg
adc
mov
insl
cltd
mov
cmp
xchg
dec
fistpl
pop
negb
lock
jno
sub
fadd
jmp
push
adc
and
or
cli
popa
and
jbe
out
pop
push
cmp
mov
push
push
jnp
mov
fwait
fcom
or
push
leave
inc
int3
mov
cmpsb
ljmp
mov
jle
push
sbb
push
sbb
popf
jo
sbb
pusha
dec
adc
dec
fs
enter
stos
or
in
repnz
int
fwait
loopne
jb
mull
sub
bound
push
jg
xor
mov
jb
sbb
test
xchg
ja
pop
mov
fisubl
inc
rcrl
xchg
or
mov
cltd
mov
roll
mov
cmc
xchg
mov
shrb
lret
add
in
xchg
adc
mov
ljmp
xchg
cmc
xor
jle
pop
jns
adc
lcall
push
adc
inc
push
fidivrs
push
aam
fs
cmp
mov
pop
outsb
mov
mov
sahf
dec
aas
daa
ss
mov
mov
push
push
pop
mov
adc
outsb
jp
sahf
ror
cmp
lret
dec
aad
pop
mov
inc
mov
mov
lret
lods
xchg
or
rorl
mov
and
mov
jno
negb
loopne
mov
xor
inc
pop
rol
mov
test
push
lret
jmp
ljmp
dec
xlat
movsb
mov
sti
push
subl
xchg
and
in
into
shr
fistl
mov
test
cwtl
mov
jecxz
pop
adc
ljmp
rcrl
mov
and
or
bound
xor
test
mov
jne
insb
push
rorb
sub
jmp
lret
xor
push
insl
pop
dec
jno
cmpsl
dec
pop
mov
pop
and
pop
arpl
lret
int
sbb
arpl
xchg
mov
pop
push
or
insb
xchg
jo
es
mov
or
lods
mov
inc
cmp
push
jbe
bound
test
xor
pop
cli
sub
jg
lcall
cmp
push
mov
ret
mov
ljmp
aas
mov
bound
cmp
pop
inc
popa
scas
ja
in
cmp
adc
xchg
sahf
mov
jnp
and
pop
sti
adc
mov
pop
shrb
dec
xchg
sarb
jnp
push
dec
nop
dec
popf
mov
cmpsl
enter
mov
xor
mov
sub
mov
sbb
hlt
dec
push
push
and
xchg
add
test
xor
dec
rclb
shlb
out
push
idivb
aam
cs
or
mov
cmp
out
push
mov
imul
push
daa
push
pop
or
das
cwtl
and
jg
jns
xor
imul
mov
in
sub
jb
out
les
icebp
sahf
mov
jmp
mov
adcb
xchg
cld
cmp
arpl
push
fisttpll
lret
mov
das
cmp
adc
popa
dec
jne
xorl
stc
cmp
test
inc
cwtl
stos
dec
movsl
dec
dec
jns
subb
das
aam
jmp
fisubrl
jns
nop
and
cmpl
imul
jbe
imul
dec
jle
enter
push
repnz
fstpl
int3
xor
pop
cmp
orl
pop
cmp
xchg
inc
pop
shlb
in
pop
mov
inc
pop
outsl
dec
orb
mov
les
and
ja
add
push
aad
adc
gs
lds
jmp
sbb
dec
out
inc
dec
jecxz
cwtl
cmp
xchg
gs
jge
sub
scas
add
iret
push
push
adc
sub
rorl
sbb
movsl
sub
jne
iret
out
pushl
and
mov
add
cmp
inc
xor
mov
cmp
mov
xchg
stc
mov
lock
cmpsb
mov
iret
lds
push
or
test
xor
sbb
cwtl
ret
jae
lds
les
push
mov
mov
dec
cmp
mov
out
call
cmc
out
aaa
xor
pop
cmp
mov
cmp
inc
insb
out
lret
adc
xor
icebp
cmp
jle
push
mov
stos
add
popa
pop
hlt
or
rcrl
mov
mov
mov
int
pop
call
and
sub
insl
sti
push
sbb
repz
rclb
xchg
mov
test
fadd
mov
mov
mov
pop
or
xor
scas
inc
xchg
bound
sbb
pop
and
in
pop
lods
xchg
ds
repnz
dec
sbb
inc
fldcw
ja
mov
les
xor
mov
lret
jno
lock
rcr
bound
sahf
popa
neg
adc
mov
fs
cmp
xor
lock
cltd
and
jmp
pop
outsb
mov
push
jg
mov
push
fdivrs
pop
sub
dec
pop
xor
add
lahf
mov
icebp
xorb
add
jb
push
inc
shrb
mov
pop
and
pop
cli
xchg
pusha
push
push
pop
cmp
movsb
push
ja
push
in
inc
hlt
test
sub
imul
sar
pop
gs
fs
mov
adc
pushf
dec
xor
scas
mov
mov
shl
pop
pop
or
sti
pop
xchg
in
dec
gs
push
pop
dec
cmp
push
pop
add
push
sub
xchg
lods
into
cmpsl
ja
and
fldl
and
cmpsb
sahf
fsubl
inc
cmp
jg
ja
xor
gs
pop
hlt
pushf
ret
dec
js
out
sub
push
dec
sti
jmp
push
bound
mov
adc
fwait
test
bound
inc
xchg
out
fdivrl
xlat
add
getsec
popf
inc
mov
add
mov
nop
sbb
mov
and
sbb
mov
add
int
pusha
stos
rcl
cmp
das
imul
movsb
inc
mov
jg
or
bound
or
incb
rclb
scas
xchg
into
or
cmpsb
popf
gs
add
out
lds
jmp
cmpsb
mov
shll
fimull
xor
shll
cmp
loope
not
inc
ja
imul
pop
stos
mov
jle
adc
clc
iret
aas
into
data16
mov
pusha
pop
xor
sbb
xchg
pop
xchg
inc
xor
xor
sub
movsb
stc
mov
ss
add
arpl
and
outsl
lods
add
xlat
cmpsb
jbe
call
xchg
incb
lret
jecxz
mov
mov
rep
jge
mov
push
dec
into
decb
mov
pop
and
lcall
xlat
xor
iret
bound
scas
jbe
and
sub
xchg
loope
mov
in
es
scas
call
call
adc
out
xchg
xor
sbb
adc
fsubl
lcall
jmp
scas
lahf
sbb
dec
jle
jae
xor
and
push
cli
inc
mov
aam
cmpl
mov
cmc
push
cmp
lds
adc
bound
int3
leave
dec
subb
pop
mov
mov
test
bound
xchg
mov
adc
shr
aad
js
loope
lahf
imul
bound
lock
mov
in
jle
xchg
push
inc
loope
pushf
jp
mull
sbb
jb
mov
cli
or
in
es
stc
js
lods
push
jnp
dec
add
dec
in
std
out
dec
mov
loopne
repnz
pop
icebp
stos
jle
sbb
inc
add
push
int3
stc
adc
mov
push
xchg
mov
dec
ja
mov
clc
popf
and
cmc
cwtl
fcoms
sub
lods
push
jns
xchg
or
pop
add
xchg
andl
cwtl
xor
jb
shlw
adc
xor
jecxz
filds
xor
mov
cmp
inc
ret
lds
push
popf
adc
jmp
mov
sahf
call
fcmovne
inc
std
xchg
cltd
mov
add
xchg
jno
xchg
push
mov
int
mov
or
rclb
xor
cmp
mov
push
call
adc
inc
push
inc
lods
sbb
sti
jmp
enter
or
test
sar
orb
mov
mov
les
adc
inc
xchg
lahf
xchg
cmp
lods
mov
stos
jle
and
sub
xchg
clc
dec
add
mov
xor
ds
xchg
pop
xor
not
adc
jl
pop
inc
call
lret
or
sbb
or
xchg
xchg
inc
jg
rclb
jge
push
jne
mov
arpl
sbb
outsl
das
mov
sbb
mov
add
cwtl
aad
test
cmp
dec
mov
in
push
gs
jmp
xor
int3
jg
dec
pop
lods
pop
out
mulb
xchg
and
mov
jbe
outsl
jg
mov
push
cmp
clc
add
mov
jle
inc
ljmp
in
stos
aaa
mov
cmp
rcrb
addr16
lret
jl
sarl
and
arpl
pop
cmp
fbld
std
jno
pop
sub
daa
adc
inc
iret
jmp
sbb
test
pand
and
mov
inc
ret
fs
sahf
rcrb
repnz
testb
mov
les
add
arpl
push
rol
lcall
dec
insl
daa
sub
xor
loopne
les
or
push
mov
iret
clc
pop
dec
icebp
xchg
mov
daa
scas
cmp
test
stc
and
push
lods
in
xor
sub
popa
call
mov
les
or
xor
out
sub
bound
adc
shlb
fcom
inc
xor
adc
sbb
or
gs
test
jbe
gs
jg
pop
mov
dec
sbb
rorb
sbb
jbe
xor
cmp
mov
inc
sti
popa
mov
push
cmp
add
mov
ror
and
and
mov
xchg
imul
mov
ret
fisttpl
dec
psubsb
mov
and
stos
sti
mov
sub
jno
cmp
out
mov
inc
sbb
xchg
dec
and
shlb
dec
lcall
into
inc
mov
pop
lea
mov
mov
push
add
mov
xchg
lea
aaa
jnp
movsb
cmp
pop
bound
out
jae
push
lds
scas
in
push
jno
inc
mov
jl
in
rcpps
or
inc
add
mov
push
jmp
stos
cltd
xchg
fwait
pop
movsl
xchg
test
pop
mov
push
push
pop
out
mov
pop
arpl
shrb
leave
jno
jp
or
jmp
ficompl
lods
dec
aad
dec
push
jns
push
test
jle
mov
jl
push
cli
mov
insl
adc
out
xchg
and
sub
push
adc
and
fs
push
in
jne
ret
in
inc
sbb
cmpsb
mov
lea
nop
inc
push
push
lcall
js
xor
shll
aas
call
leave
sbb
mov
cmp
into
stos
imul
jle
mov
jmp
push
test
and
stc
lcall
lds
aad
mov
push
inc
jl
dec
pop
das
pop
xor
sti
push
push
cmp
mov
fldcw
mov
xor
lods
and
jge
mov
dec
push
bound
adc
jb
sahf
and
ljmp
jo
ss
and
xor
fwait
and
mov
adc
out
cltd
push
cli
cld
sbb
test
scas
mov
xchg
test
rorl
dec
push
lea
out
add
fwait
push
into
cmpb
cmp
inc
mov
repnz
ficompl
popa
sbb
pushl
or
ss
or
and
xchg
out
loop
sbb
fcom
shl
mov
mov
sbb
aaa
mov
push
sahf
xchg
cltd
aas
outsb
test
push
das
mov
fyl2xp1
gs
addr16
ds
push
cs
fidivs
jecxz
ja
sub
mov
aad
push
hlt
push
scas
mov
imul
xorl
bound
xchg
ljmp
fnstenv
cmp
sbb
mov
mov
mov
pusha
jmp
push
movsl
pop
pop
repz
cwtl
out
pushl
sub
mov
enter
call
bound
push
pop
in
popa
repz
add
popf
and
and
xchg
stos
fildl
dec
lds
xor
cwtl
and
adc
sbb
sub
sub
pop
addl
data16
cmpsb
xor
test
adc
mov
xlat
stos
jae
loop
sti
xor
mov
popf
inc
lds
sub
push
pushf
cli
mov
shr
lods
push
or
sar
jns
dec
inc
scas
xor
les
pop
clc
cltd
pop
insl
cmpsb
lret
mov
or
or
mov
adcl
leave
cmpl
push
jl
mov
sti
loopne
ret
and
call
sub
in
fdivs
jns
movsl
call
stos
mov
aas
iret
stos
cmpsl
sub
xchg
lods
lock
nop
mov
sbb
jmp
xchg
jae
rcrb
and
pop
roll
gs
jb
lret
pop
fiadds
ljmp
sbb
jmp
stc
inc
loop
and
xor
inc
mov
xchg
loopne
enter
pushf
cs
ret
push
push
jecxz
ss
cld
pop
ret
push
dec
fiadds
insl
adc
mov
xor
inc
movsb
dec
jmp
jne
add
jp
jmp
add
add
cwtl
iret
pusha
pop
add
xchg
cld
push
dec
jmp
daa
or
adc
dec
mov
push
push
pop
or
xchg
push
pop
in
fsubrp
push
xor
or
mov
push
sub
sbb
inc
inc
push
fbld
orb
jmp
xchg
int
xor
rorl
dec
cmc
ljmp
dec
lcall
outsl
fistl
mov
xchg
mov
in
mov
jno
and
and
push
movsl
inc
mov
jo
cmp
fwait
addr16
inc
das
mov
cmp
fsubr
jl
xchg
lods
dec
xor
mov
in
mov
lret
hlt
lcall
lret
xor
sub
notb
scas
hlt
push
push
lea
dec
das
adc
xor
sub
insl
cmp
clc
mov
inc
inc
mov
mov
fcmovnbe
or
inc
pop
adc
lret
cmpsl
push
jno
movsl
mov
mov
sbb
push
adc
mov
sti
ss
call
xchg
push
xor
jmp
inc
loop
add
mov
scas
arpl
jmp
fwait
jne
or
fwait
cmpb
leave
in
push
jbe
xor
mov
call
ds
xor
push
cwtl
adc
jle
stos
aas
add
out
fwait
sub
inc
jg
mov
mov
ret
nop
dec
inc
mov
pushf
inc
cmp
add
sbb
adc
cmp
push
push
pop
push
adc
or
sbb
aas
sbb
add
mov
pop
adcb
inc
lret
ja
aad
dec
cmpsb
jg
rcll
pop
mov
push
cmc
pop
push
jne
bound
enter
inc
push
add
mov
xchg
mov
sub
push
or
popa
imul
rorl
cmpsb
sub
mov
loop
xor
lret
insb
data16
icebp
addr16
jno
ss
bound
cmp
push
dec
int3
xor
or
xchg
mov
jl
mov
xchg
incb
in
fsubrl
sbb
add
and
jmp
jae
pop
repz
or
cmc
cmp
inc
adc
or
mov
sbb
mov
movsl
daa
loop
mov
repz
mov
movsb
add
sbb
add
push
iret
jg
fdivl
mov
sahf
aaa
bound
aam
insl
fisttps
gs
jo
in
popa
xor
stc
mov
push
shl
sbb
lods
outsb
mov
push
pusha
sbb
mov
nop
ljmp
mov
sti
icebp
test
push
ss
push
sbb
push
sbb
sarb
shlb
and
cmp
xor
dec
pop
mov
shr
cmp
pop
hlt
jg
sti
ret
cmp
ljmp
inc
movsl
int
aad
and
fcoms
ds
push
dec
xor
mov
pop
jae
adcb
pop
add
jle
jmp
mov
and
dec
lds
mov
and
mov
mov
ret
fsubrl
outsb
out
pusha
adc
lods
gs
push
cli
pop
cwtl
push
mov
hlt
and
out
sub
out
mov
popa
pop
ficoms
rolb
in
adc
dec
or
cwtl
push
fbld
adc
les
dec
rorb
or
inc
cmp
sub
int
xor
or
aad
lods
into
es
dec
shll
fwait
jnp
sub
hlt
mov
addr16
mov
jne
sub
jae
popa
std
rorb
jg
pop
mov
push
mov
sbb
lret
sub
mov
mov
mov
add
loope
or
testl
andl
pop
rorb
fldl
jmp
or
jno
insb
rorb
cmp
clc
inc
cmpsl
jl
add
in
push
inc
jg
sbb
inc
sub
andl
inc
in
repz
loopne
sahf
mov
repz
int3
push
or
fmull
jnp
nop
push
std
daa
add
push
test
das
push
sub
loope
push
jmp
repz
push
push
ds
mov
sub
mov
subb
jnp
dec
cs
add
scas
mov
mov
push
mov
inc
rcrb
sub
push
out
add
ds
lods
cltd
mov
dec
cmp
xchg
fwait
push
push
lret
das
test
test
mov
mov
push
pop
cmp
jecxz
mov
call
push
dec
ficompl
mov
sub
pop
sbb
sub
xor
mov
push
ret
out
ljmp
pop
test
pushf
adc
mov
mov
and
lret
mov
out
test
repnz
repnz
lret
lods
mov
cmp
in
push
fldt
sub
add
sbb
leave
push
xchg
leave
enter
adc
mov
mov
mov
test
js
xchg
dec
scas
and
cmp
fldt
sbb
imul
cmp
add
scas
jnp
out
pop
jo
popa
add
ret
jae
rol
or
sub
adc
mov
xor
mov
push
and
xlat
cltd
mov
in
testb
ljmp
add
popf
aaa
testl
xlat
or
or
sbb
enter
cmc
divb
scas
dec
mov
xor
and
adc
int
ds
bound
push
or
loopne
push
fs
pop
cmp
push
push
mov
xchg
movsl
xor
pop
jg
dec
xchg
sub
aas
inc
sbb
push
das
push
cmp
pop
repnz
xchg
ljmp
loopne
mov
popl
repnz
sbb
getsec
pop
outsl
nop
pop
xor
loop
mov
sbb
lds
push
in
out
pop
pop
xlat
ret
test
mov
and
fs
out
fs
repnz
rcr
mov
aas
addr16
scas
xchg
push
insl
or
mov
rclb
adc
xor
pushf
sub
outsb
sub
fwait
push
pushf
cwtl
jl
or
sahf
and
int3
lea
ficomps
pusha
fidivrs
dec
cmpsl
test
mull
daa
stos
sti
iret
mov
mov
insb
jno
lret
jbe
xchg
rcr
xchg
in
lods
call
mov
push
cmp
sub
stos
xorb
mov
cmpsl
xchg
jmp
push
mov
cwtl
gs
loop
dec
ds
sahf
out
adc
jo
jmp
push
les
loop
xor
stos
jp
xor
jg
sub
sub
jnp
leave
fisttpll
push
xchg
pop
shll
push
addb
je
jg
cmp
jl
inc
mov
push
call
out
jmp
adc
jo
pop
cmp
sahf
mov
subl
inc
cmp
mov
mov
push
dec
sbb
sub
loope,pn
enter
jle
push
imul
popf
or
sbb
test
push
xchg
rolb
stos
jle
xchg
mov
xor
adc
into
mov
fistpl
push
sti
rorb
stos
outsb
cmp
sbb
pop
lcall
das
xor
cmp
loopne
in
and
test
mov
dec
fstl
sub
fildll
fistpll
push
das
int3
and
and
ficoml
cmp
shl
jmp
inc
add
xor
xchg
cmp
loop
rclb
les
sub
ror
sub
subb
mov
cwtl
push
cld
jbe
mov
mov
inc
adc
pop
add
nop
mov
fs
call
sbb
in
dec
mov
jns
scas
push
cmpsl
nop
mov
push
negb
push
dec
ror
cli
loop
notl
addb
ficoms
out
jmp
nop
pusha
mov
lcall
movsl
in
sub
cmp
cltd
mov
mov
xor
push
ds
sub
mov
es
xchg
int
rcrb
cltd
jle
loope
aad
push
push
pop
loop
mov
dec
dec
idivl
popa
pop
adcl
movsl
bound
dec
fistpll
cmp
cmp
xor
xchg
test
inc
enter
and
popa
outsl
icebp
insl
adc
shrb
push
xchg
sbb
mov
push
pop
jo
add
mov
lods
add
loope
test
lods
mov
dec
push
mov
add
out
push
xlat
ljmp
rcl
add
std
movsb
or
sbb
xchg
jp
adc
in
aam
enter
xchg
iret
add
mov
xchg
mov
pop
add
pop
jnp
cmp
scas
cli
cmc
into
lods
out
inc
cmc
movsl
frstor
shlb
push
push
jmp
jo
lcall
push
std
lcall
out
jg
jp
xchg
xor
pop
cmp
movsl
iret
or
pop
ret
cltd
stos
cltd
out
imul
das
icebp
lods
xor
or
std
sbb
std
push
sbb
xor
lds
out
pop
mov
es
mov
add
shrl
imul
pop
mov
mov
xor
mov
addb
jbe
shrb
mov
pop
push
mov
pop
mov
mov
icebp
sahf
mov
jg
mov
std
nop
and
icebp
mov
mov
mov
aas
dec
sub
lret
in
dec
inc
adc
insb
inc
insb
enter
cmp
sub
insb
cmp
stos
enter
out
test
jb
mov
fs
aam
in
inc
sub
add
push
dec
adc
cs
mov
fwait
cltd
mov
imul
xchg
add
pop
sbb
test
out
cli
in
xor
std
adcl
jo
sub
test
je
mov
lcall
sahf
mov
push
js
jmp
jmp
roll
cmpsb
xchg
xchg
xor
shll
xchg
or
inc
jnp
jg
xor
push
adc
icebp
dec
jnp
mov
data16
out
out
xchg
xorb
lds
outsb
pusha
xchg
aam
stos
stc
sbb
push
sbb
pop
push
mov
mov
pop
sarb
mov
call
scas
mov
int
mov
fildl
or
lret
add
les
clc
dec
ljmp
pushf
push
inc
call
push
enter
data16
pop
int
data16
aam
fwait
jmp
popa
mov
test
stos
in
call
dec
shl
testl
insb
sub
les
test
cmp
cmp
inc
push
lea
xchg
in
sub
sarl
stos
push
push
insb
imulb
cmp
fsubrl
mov
xchg
xor
push
inc
xchg
sti
js
bound
mov
icebp
das
jbe
test
push
sub
std
imull
lret
inc
jl
int
push
mov
cld
add
aaa
std
mov
and
sbb
test
les
cmc
cmpsl
fwait
test
lret
sahf
fstpt
xchg
rcr
mov
dec
jnp
and
add
jle
test
sbb
or
idiv
push
inc
xchg
jnp
std
adc
les
cs
and
pop
push
movaps
imul
mull
dec
dec
cmpsb
inc
aam
in
in
stc
mov
adc
lock
scas
aad
sub
outsb
dec
imull
xor
test
stc
imul
bswap
aam
xchg
repz
repnz
cmc
loopne
in
aam
inc
in
arpl
xchg
inc
sub
ret
aaa
sar
insb
push
add
cmpsb
mov
adc
inc
xchg
roll
push
insb
dec
inc
pop
inc
sbb
or
das
inc
aad
adc
rcrb
mov
xchg
adcl
test
mov
into
jbe
pop
clc
or
lds
inc
sti
out
mov
in
popa
xchg
jg
pop
xor
and
push
pop
test
push
popf
xor
or
sbb
jnp
ss
repz
lret
ja
add
lret
js
push
loopne
inc
imul
jnp
mov
jmp
stc
inc
sbb
int
cmp
enter
repz
mov
in
inc
in
bound
inc
sti
add
xor
clc
cmp
arpl
fstps
xchg
pusha
add
cmp
xchg
stc
movsl
xchg
sarl
mov
inc
push
fsubrs
jns
out
xlat
lods
add
jmp
push
pop
or
shrb
add
in
push
ja
je
iret
outsl
nop
sbb
push
mov
pop
inc
popf
push
sarb
stc
cmp
mov
loop
xchg
xor
fadds
rorl
and
adc
push
addl
idivb
movsl
stos
pop
scas
push
xor
push
bound
mov
popa
insb
cmp
sahf
dec
add
out
repnz
jo
cltd
pop
adc
scas
push
pop
cld
shlb
push
mov
ror
sbb
xor
jnp
push
sti
jmp
out
push
pop
mov
mov
cs
out
or
outsl
push
enter
pop
push
mov
cmp
es
nop
push
push
or
jmp
bound
je
pop
dec
inc
lret
sbb
testb
in
mov
add
cmp
cmp
loop
sbb
pop
sti
faddp
jg
jnp
push
xchg
push
sti
adc
cmp
fsubs
add
pop
nop
or
mov
pop
and
aaa
adc
jnp
push
xor
mov
leave
sbb
add
pushf
iret
popa
jbe
call
mov
inc
cmpl
js
mov
addr16
addl
jmp
mov
popl
xchg
icebp
xor
push
in
add
mov
pop
ss
test
leave
mov
mov
mov
fs
xor
or
dec
inc
imul
mov
fucomp
in
fs
js
enter
jmp
cmc
push
adc
stc
adc
out
add
dec
aas
mov
cli
insb
rcll
or
or
dec
inc
push
test
lret
sti
add
jbe
push
call
ja
test
repnz
mov
rolb
jl
adc
or
push
dec
push
push
repz
stos
arpl
dec
sti
mov
inc
xchg
dec
arpl
jmp
lcall
enter
xchg
lods
punpckhdq
sub
cmp
aaa
shll
test
call
daa
stos
call
pop
sti
dec
push
sbb
add
sub
mov
clc
ret
sub
ficompl
push
and
add
shlb
jae
fists
cld
or
cmpsb
lret
adc
xor
test
push
dec
fs
addr16
jae
pop
xchg
pop
in
xchg
iret
arpl
pop
xchg
loope
xchg
outsb
call
mov
mov
sub
ret
divb
adc
add
pushf
mov
andl
sub
jmp
and
cs
or
inc
jg
push
arpl
call
xchg
jnp
pop
cmc
and
mov
adc
or
rclb
std
adc
les
enter
bound
or
nop
xchg
mov
pop
mov
sbb
adc
pop
fcomps
cmp
nop
pusha
and
adc
loopne
sbb
dec
and
movsl
mov
xchg
ret
addl
ljmp
lods
ljmp
and
jae
sbb
and
or
lcall
jle
out
mov
sbb
fiaddl
hlt
inc
test
cmp
push
add
mov
bound
insb
es
aaa
ja
xor
popf
and
sub
fdivs
mov
xchg
movsl
loop
add
sub
and
sbb
and
or
nop
pop
arpl
nop
in
push
in
insb
daa
pushf
enter
shlb
push
xorps
cld
push
inc
shrl
lret
fstps
jo
fnsave
push
push
add
mov
popf
xchg
mov
xor
nop
xchg
movsl
daa
fcomp
popf
dec
popa
in
xor
jmp
fucom
loopne
push
fistl
test
sbb
push
addr16
hlt
push
insl
xchg
xor
loope
sbb
mov
adc
mov
int
adc
or
push
xor
mov
ja
adc
cli
insb
orl
and
outsb
outsl
nop
or
lar
into
mov
pushf
sub
test
mov
mov
adcb
push
addl
loope
sbb
mov
iret
lret
cmp
cmc
in
lret
mov
shrb
dec
cmp
pushf
inc
push
mov
lods
pop
xchg
add
scas
jl
adc
mov
popa
mov
fnstenv
in
lret
jae
cmp
js
call
loope
push
ja
xchg
pop
bound
cmp
mov
ret
aam
loop
and
mov
sub
push
xlat
and
cmp
loope
and
in
test
jb
and
mov
es
sub
sarb
int
jg
pop
mov
pop
out
push
mov
ds
decl
aad
push
add
ja
lds
push
xor
and
cs
mov
xchg
in
pushf
push
stc
ficoml
dec
push
nop
xchg
stc
jl
adc
jo
out
xchg
aad
mov
xor
jecxz
pop
shlb
sti
push
orl
dec
cmp
addr16
mov
shll
stc
leave
add
mov
repnz
insb
ds
dec
or
stc
fucomip
lods
ds
sub
call
test
inc
test
lret
fldl
sub
dec
xchg
pop
in
add
push
mov
cltd
or
add
jno
add
sti
repz
pop
movsb
push
xchg
mov
push
xadd
xor
dec
fwait
iret
addr16
and
push
jae
sub
stos
push
fs
nop
push
rcr
shrb
fcompl
cwtl
ret
bound
and
or
icebp
fistps
and
xchg
out
jne
adc
dec
subb
dec
or
or
jle
sbb
aam
test
outsb
pop
imul
push
jmp
push
jae
add
shl
and
xchg
and
fwait
sbb
pushw
cmp
repz
sub
dec
fwait
xchg
test
iret
bound
jecxz
js
dec
stos
jne
int
and
bound
pop
push
clc
repnz
pop
mov
dec
inc
push
outsb
addb
testb
mov
cmpsl
cs
in
jne
lea
push
fistl
incb
push
xchg
sets
sbb
cmpsb
mov
cs
insl
mov
inc
push
bound
jl
fnsave
adc
in
mov
nop
sub
dec
adc
and
xchg
sbb
bound
or
jg
int3
add
cli
mov
test
out
add
and
mov
and
inc
in
js
and
mov
loopne
mov
inc
adc
jmp
outsb
and
lds
xor
in
sahf
or
sub
cmpsl
add
cmpl
scas
fwait
and
fwait
int3
push
orl
in
push
add
mov
and
dec
sahf
fwait
ret
push
or
dec
addr16
mov
in
jecxz
adc
pop
mov
cmp
mov
xlat
dec
call
lods
rcll
pusha
stc
xlat
push
popa
gs
shlb
sub
out
jae
inc
je
jne
test
mov
or
cmp
enter
mov
pop
insl
pop
push
xor
ret
fiadds
adc
ljmp
adcb
js
push
push
cmp
dec
pop
xchg
test
ja
jp
pushf
jns
jbe
out
cmp
push
cwtl
out
inc
arpl
push
out
ljmp
gs
lret
fistl
inc
inc
sub
sub
pop
xor
sahf
stc
xchg
dec
push
jecxz
dec
fildl
repnz
in
and
outsl
cmp
ljmp
nop
push
stos
jno
scas
cs
mov
mov
adc
push
andl
xor
sbb
pushl
notl
push
add
pop
push
mov
hlt
mov
xchg
or
mov
shrl
sbb
inc
sub
dec
leave
mov
mov
es
cwtl
andl
xor
popl
int3
inc
fs
repz
adc
sbb
pop
jns
adc
or
aas
lret
stc
push
ljmp
in
pop
mov
mov
repnz
push
lods
sahf
dec
adc
sbb
pop
or
cmp
test
jne
inc
mov
inc
xor
rolb
pop
or
push
add
or
sub
and
add
stos
ret
push
ja
rcll
outsb
mov
out
jb
sar
xchg
outsw
push
cs
bound
enter
sti
add
jmp
push
mov
frstor
int
lds
mov
jle
rcrl
aaa
pop
roll
call
xor
cmp
scas
lock
je
mov
jmp
sub
aaa
sbb
mov
mov
popa
push
testl
pop
sub
inc
loope
ds
fwait
push
lret
sbb
pop
out
outsb
push
jg
ja
sahf
push
mov
and
inc
fcomip
shl
mov
mov
push
pop
repz
sti
add
call
jmp
cmp
jne
mov
ds
or
fidivrs
add
std
nop
bound
aaa
cmp
cmovnp
mov
shlb
mov
mov
mov
pop
inc
jmp
test
adc
stc
fld
mov
jmp
mov
lods
push
stc
ds
xor
mov
jne
andl
jb
push
inc
pop
dec
mov
loopne
cltd
sub
aam
into
ljmp
aad
sub
push
mov
and
js
hlt
in
push
or
add
push
bound
bound
cmp
or
in
test
inc
loop
cmp
jbe
adc
sbb
sbb
fcmovb
call
xor
repnz
adc
xlat
in
cmp
test
bound
scas
loopne
mov
xlat
dec
mov
js
jno
mov
fidivs
lahf
or
into
sub
mov
cmp
xlat
add
sub
ds
xchg
sbb
outsb
fsubr
dec
jae
enter
jns
and
cwtl
or
xor
sar
out
loop
clc
sti
mov
sti
leave
adc
push
or
in
xor
jmp
sarb
inc
jle
pop
cltd
add
pop
outsl
pop
or
push
cmp
sub
gs
lret
and
lock
bound
bound
int
mov
pop
loopne
pop
shrb
jb
repz
sbb
popa
bound
lds
out
mov
cmp
cmp
loopne
lods
or
sbb
in
cmp
call
jno
pop
cmp
aad
push
lret
ja
subl
fdivl
add
lds
push
subl
fwait
in
dec
call
mov
clc
outsb
scas
test
xlat
cld
cmc
les
sbb
inc
inc
jg
lahf
pop
loope
mov
pop
daa
adc
push
imul
jmp
dec
aad
test
push
or
jno
and
bound
inc
mov
cld
and
sub
cld
push
inc
or
movsl
xor
in
bound
add
out
decl
mov
test
dec
rorl
loopne
bound
jnp,pn
dec
push
mov
lock
cwtl
push
arpl
shll
inc
cld
das
bound
cmp
popf
movsb
ja
es
mov
mov
data16
adc
inc
movsb
dec
repnz
add
fwait
xchg
stos
int
sti
imul
adc
inc
xchg
mov
mov
mov
stos
inc
adc
scas
jne
push
fcomp
clc
rcrl
lds
xchg
iret
xor
mov
jmp
pushw
jo
rcll
aaa
orb
and
fisubl
ds
lret
sti
sbb
mov
fistpl
push
push
iret
jp
int3
push
stos
jmp
or
pop
cs
pushf
pop
and
lcall
jbe
push
mov
mov
je
mov
inc
xchg
dec
adc
out
xchg
xchg
sti
movl
mov
int3
adc
ljmp
ret
dec
jae
ja
push
push
dec
sarb
mov
adc
push
dec
in
cmp
imul
or
xchg
jae
insl
and
cli
cmc
rorl
loop
sbb
adc
popa
push
mov
dec
inc
into
hlt
xor
ror
loopne
jae
test
add
adc
enter
loopne
gs
dec
and
inc
dec
out
imul
repz
hlt
fistl
je
xchg
sbb
mov
lret
sti
imul
jmp
stos
lods
xor
sub
out
sti
out
push
mov
loope
jmp
and
sub
iret
out
loopne
popf
ret
aad
cmp
xchg
orl
subb
pusha
sarb
mov
test
cmpsb
jl
into
pop
sbb
vmovaps
push
lods
test
sbb
pop
stc
rcrl
pop
cmp
xlat
and
out
xchg
int3
inc
ja
mov
int3
clts
in
adc
jecxz
lar
adc
xchg
ja
arpl
pop
das
movsl
cmp
out
mov
lods
sub
pop
addr16
jmp
lcall
xchg
jae
lods
or
ja
lods
cmpsl
push
fs
or
repnz
imul
popf
ja
or
stc
popa
inc
ret
xchg
repz
movsl
fmuls
fmull
pop
std
insb
inc
sub
push
mov
divb
mov
jp
stc
dec
add
ret
pop
loop
subb
pop
outsl
repz
mov
leave
mov
pop
sub
push
dec
into
or
sbb
mov
xchg
out
inc
call
mov
mov
repz
add
leave
testb
nop
add
ljmp
test
pop
mov
cmp
or
push
lret
scas
xchg
xor
mov
in
ret
in
daa
xchg
fbld
sub
push
or
or
mov
fsubrl
shrl
ja
inc
cmp
in
cmp
jns
add
jnp
pop
xor
lock
mov
add
and
mov
lds
cmp
leave
insb
dec
nop
imul
mov
iret
test
je
aad
icebp
dec
aaa
jmp
cmp
pop
jne
pop
mov
jno
lret
in
and
jne
dec
jo
dec
fildl
inc
mov
sub
pop
filds
xchg
fwait
push
jmp
push
cs
jns
xchg
and
nop
or
bound
ret
shufps
cmc
mov
pop
cmp
test
push
test
inc
or
xorl
jge
stos
sub
stc
pop
ss
fcompl
fidivrs
push
jmp
mov
roll
gs
arpl
jle
cmp
push
xchg
mov
xchg
data16
rcll
stc
mov
jmp
aad
cmc
outsl
push
and
mov
xor
xchg
orl
scas
cltd
lcall
ja
loop
mov
adc
cmpsl
cmpsb
lret
js
mov
push
pop
insb
mov
cmp
in
das
push
loope
sbb
ss
das
inc
add
jne
imul
xchg
loopne
faddl
or
adc
bound
in
dec
adc
jmp
in
mov
pop
push
pusha
popa
push
mov
mov
fs
outsl
outsl
daa
mov
pop
push
push
push
out
jne
pop
cld
jmp
scas
jae
push
daa
mov
mov
icebp
scas
or
or
cmp
out
les
andl
popa
push
aad
pop
and
and
scas
jns
jno
dec
lcall
ret
dec
sub
jge
sub
sti
jno
fs
jl
inc
add
into
mov
adc
cmc
aad
adc
sub
int
or
pop
insb
imul
fs
lcall
cmc
mov
push
pusha
add
out
in
xchg
inc
push
and
mov
push
lea
and
bound
inc
lret
addr16
push
inc
aaa
call
es
mov
jns
es
mov
nop
push
stos
bound
cs
sti
and
jmp
dec
sahf
pop
ja
ret
out
xchg
sub
cmp
sub
push
fstps
xchg
movsb
adc
insb
jae
inc
fwait
pop
in
push
lahf
mov
or
leave
aaa
ret
push
xchg
sbb
and
notl
push
inc
insb
ret
xchg
xchg
sahf
jnp
shlb
lods
in
adc
mov
mov
mov
icebp
popl
rol
in
push
cmpb
pusha
mov
bound
inc
sahf
popa
and
pop
filds
lret
mov
mov
gs
cmc
pop
std
aas
xchg
insb
mov
xchg
rolb
daa
fldt
jne
jg
icebp
jg
fs
in
idivl
gs
or
xor
movsb
sbb
xlat
pop
pop
ds
and
push
push
fidivrs
repnz
mov
addr16
movsl
lock
fwait
inc
xor
cmpsl
jae
xchg
inc
es
dec
mov
mov
popa
mov
jg
test
shlb
push
mov
aaa
bound
js
mov
cmp
pop
fisttps
call
in
xchg
mov
xchg
fildll
sbb
inc
push
mov
fs
pop
imul
cld
pop
inc
out
insb
push
shr
mov
xchg
add
push
bound
mov
icebp
fsubrl
iret
or
in
jnp
imul
out
sub
push
mov
push
mov
sub
es
bound
jne
cmp
pop
mov
push
aaa
fsubl
ja
scas
push
stos
cld
push
rclb
mov
popa
int
jae
mov
leave
mov
cltd
or
push
add
jmp
lods
mov
xchg
adcb
jmp
pop
test
push
test
stos
mov
and
push
cmpsb
inc
jle
inc
fs
sbb
pop
add
enter
fcmovne
outsl
imul
and
pop
mov
bound
rol
mov
pushf
pusha
xor
popa
out
js
pop
cltd
cmp
inc
push
std
add
mov
fsubl
aam
gs
js
fs
pop
xchg
sbb
inc
lcall
cmp
push
shrb
je
rcll
fmul
cs
mov
data16
shrb
stos
adc
xchg
bound
sub
cwtl
icebp
inc
push
testb
mov
pop
lds
inc
push
adc
jle
outsl
clc
mov
mov
fwait
out
stos
daa
call
cmpsl
and
pop
mov
or
lock
jle
loop
and
fists
pop
xchg
mov
sti
push
add
cmp
lret
sti
sub
jg
pop
repnz
xchg
jno
xchg
pop
loop
std
roll
inc
outsl
int3
mov
pusha
xchg
pusha
aas
xchg
dec
and
mov
clc
ret
sarl
xchg
movsb
pop
xor
fs
in
test
test
shl
js
fwait
push
fsub
dec
xor
push
sub
fnstenv
sti
leave
ja
sti
bound
cs
nop
push
add
xor
dec
iret
test
xor
idivl
pop
inc
movsb
icebp
add
sti
jle
test
mov
push
ja
out
mov
cmp
and
push
lds
and
enter
mov
mov
call
pop
fiaddl
push
test
xchg
mov
scas
shrb
xchg
sahf
lds
repnz
sbb
jae
cmpsl
and
jnp
mov
add
movsb
sti
push
rorl
jmp
push
nop
into
call
cltd
sbb
mov
insb
mov
push
je
stc
push
dec
pop
mov
bound
cmp
cwtl
cmp
fimuls
jae
aas
xchg
dec
cmpl
push
mov
scas
rcrb
stc
in
dec
and
in
repz
xchg
insb
push
mov
jg
fbstp
xchg
and
or
lock
sub
cwtl
outsb
in
mov
sahf
and
in
inc
push
jge
cmc
sub
jmp
test
inc
les
out
push
in
movsl
add
sbb
outsl
and
and
iret
push
mov
ss
push
push
add
jnp
fnstenv
xchg
imul
ja
data16
rcl
out
outsb
cli
sahf
xchg
mov
cmc
inc
xor
mov
icebp
and
mov
pop
or
xor
nop
jno
inc
push
and
lahf
pop
mov
push
les
enter
lret
daa
and
stos
push
or
pop
lcall
mov
into
or
cltd
sub
cmp
imul
inc
jp
out
cmpsb
xchg
dec
pop
jno
bound
mov
loop
les
inc
inc
dec
inc
ret
push
inc
iret
mov
inc
jne
outsl
andl
fsubs
movsb
or
or
mov
mov
cmp
lcall
inc
cmp
pop
loop
gs
cmpsb
add
inc
test
add
push
cmp
sub
and
mov
rolb
sbb
pop
push
std
stc
dec
mov
sub
in
add
and
pop
nop
shl
adc
imul
mov
xor
loope
sub
int3
push
repz
or
pop
daa
mov
clc
out
sbb
push
sub
jp
aaa
arpl
mov
mov
mov
jbe
iret
nop
sub
mov
pop
cs
push
insb
pushf
das
mov
scas
sub
cmp
insl
ja
loop
leave
enter
adc
les
jecxz
push
mov
stos
pop
adc
data16
in
repz
push
shl
ljmp
ds
dec
rorb
rcrb
push
xchg
ja
fwait
sahf
fdivrs
jno
out
cs
stc
cmpsb
nop
pop
and
push
out
in
xor
xchg
sub
xchg
mov
jl
and
test
daa
sub
pop
rcrb
lds
jecxz
or
lock
and
enter
ss
sub
fisttpl
insl
cmp
sbb
lret
push
mov
pushf
xor
ret
stos
nop
sbb
mov
mov
sbb
mov
daa
and
movsb
iret
shlb
icebp
mov
add
push
push
xorl
test
ror
sbb
mov
push
sarl
jmp
push
jno
xlat
rcll
mov
mov
into
js
xchg
in
rcll
mov
pop
in
inc
push
sbb
mov
adc
xor
aam
clc
imul
sub
loop
das
nop
inc
pop
xchg
sbbb
push
clc
enter
sbb
divl
stc
fsubl
iret
push
into
sub
int
mov
inc
dec
mov
add
call
outsb
add
push
stos
add
into
inc
faddl
in
lock
les
int
in
jecxz
das
xchg
adc
shlb
xor
popa
mov
in
xor
outsl
test
dec
sbb
lods
or
xchg
stos
in
dec
stos
ja
cmp
loop
outsb
jecxz
cwtl
xor
sahf
sti
iret
push
fdivrl
and
jp
inc
and
pop
repnz
push
sti
dec
push
xchg
inc
sti
das
ljmp
sbb
pop
pop
dec
push
es
int
jmp
push
cld
test
jne
xchg
sti
les
mov
hlt
push
aas
cmc
loope
cmc
mov
mov
dec
mov
jmp
cwtl
push
xor
and
fcmovb
ret
xor
cmp
push
ror
repnz
sub
adc
push
and
hlt
shr
mov
popa
data16
pop
movb
mov
push
jns
sub
loope
push
sbb
adc
xor
popa
scas
xorb
push
popa
add
leave
movb
xchg
add
cmp
fwait
xchg
sbb
dec
outsb
jnp
sbb
sub
es
stos
jno
out
fdiv
mov
lcall
push
loopne
xor
mov
mov
shl
cmp
gs
or
repz
xor
hlt
xchg
and
daa
std
inc
inc
sahf
ljmp
lret
mov
jmp
and
cmpl
xor
cmc
xchg
push
xchg
fisttpll
out
fwait
pop
test
sub
scas
insb
xlat
cmp
mov
xor
mov
push
rolb
cmc
ljmp
sbb
test
adc
pop
push
xchg
cs
icebp
pusha
sbb
jle
push
pop
or
mov
cli
rcr
push
or
lds
mov
dec
rcr
jae
fisubrs
in
cs
call
sub
sub
bound
imul
jb
mov
into
xor
ljmp
cli
pop
cmp
iret
call
int3
sti
fistpl
and
jmp
enter
jg
ret
sub
jns
enter
lcall
pop
adc
mov
hlt
xchg
call
jl
lds
nop
or
add
rcr
pushf
xchg
out
es
pop
pusha
pushf
mov
fwait
aaa
push
pop
les
sub
jecxz
gs
and
cmp
dec
out
mov
outsb
out
fistps
and
bound
movsb
lods
mov
jnp
mov
sbb
fcompl
xor
add
inc
stos
scas
cmp
sti
sbb
inc
push
sbb
js
push
ss
xchg
repnz
cmpsb
sahf
and
mov
add
in
push
mov
mov
push
movsb
lahf
inc
cwtl
sbb
dec
in
scas
and
push
jg
iret
mov
stos
jnp
repnz
lret
push
xor
xor
mov
cmp
in
std
sbb
pop
jnp
mov
out
sahf
popa
pop
data16
popa
mul
push
jns
sbb
lret
mov
mov
push
aad
jnp
mov
xchg
in
adc
test
cld
and
or
mov
out
push
pop
mov
push
sahf
je
mov
daa
or
out
sub
ja
gs
inc
or
ror
dec
cwtl
in
in
loop
jecxz
call
adc
lock
cmc
jbe
mov
inc
cli
pop
xchg
jmp
in
xchg
je
addr16
push
orb
xchg
pop
in
xor
notb
cmpsl
mov
adc
add
mov
xchg
and
daa
dec
xor
cmp
cmp
stc
dec
test
cmpsl
sahf
cmc
push
push
das
adcb
inc
dec
fildl
push
pop
xor
cmp
stos
inc
data16
out
sub
dec
pop
mov
mov
dec
pop
push
subl
gs
loope
sbb
jle
cld
jl
popf
push
mov
std
xchg
mov
loope
push
or
shl
or
popf
aaa
xchg
mov
xchg
sbb
mov
cwtl
push
mov
divl
cmp
ja
call
int
inc
sub
pop
lret
rorl
inc
std
daa
xchg
ljmp
imul
sub
lret
jge
lds
gs
or
outsb
mov
lock
inc
push
mov
aaa
clc
stos
jne
sbb
push
aaa
ljmp
pushf
outsb
bound
cmpsl
mov
arpl
lret
fdivp
mov
add
or
fiadds
fsubrl
sti
loop
dec
ja
dec
sub
mov
mov
sbb
add
and
jb
dec
mov
cmc
and
aam
xchg
mov
sub
mov
inc
pushf
pushf
push
push
jg
test
in
rcr
faddl
and
ljmp
jmp
iret
xchg
imul
icebp
into
xchg
call
subb
bound
sti
mov
ret
inc
cmpsl
subl
loope
lods
outsl
cld
icebp
sahf
add
dec
mov
movsl
dec
pop
sti
adc
push
aas
ja
mov
bound
mov
mov
scas
loopne
dec
out
pop
push
pop
pusha
sbb
sub
bound
mov
sub
pop
outsb
jle
sahf
push
lret
fucomp
inc
pop
xchg
jnp
test
lds
lahf
sbb
dec
xchg
ror
sbb
iret
mov
jns
jno
and
cwtl
push
xchg
es
mov
pop
push
call
ret
out
dec
push
call
xchg
out
pusha
es
sbb
jecxz
imul
xchg
mov
or
loope
push
rclb
ja
add
ret
mov
push
push
xchg
imul
insb
or
out
lods
adc
mov
int3
mov
xor
push
lds
leave
andl
dec
lock
aam
and
js
imul
cmc
into
or
negb
cli
dec
into
rolb
inc
loopne
jl
cltd
iret
adc
mov
push
out
add
lock
je
cmp
cmp
cs
cmp
outsl
ja
dec
shlb
aam
call
int
xlat
xchg
lret
fcoml
push
into
imul
sbb
in
out
rorl
jns
fisubrl
jecxz
xlat
jle
add
push
inc
addl
bound
popf
pop
icebp
pop
jg
cmp
mov
out
pop
fs
xchg
adc
lock
mov
inc
fisubl
inc
inc
or
dec
into
dec
out
movsl
pop
fwait
aas
jbe
test
push
jl
jmp
insl
ss
in
xchg
in
dec
lret
mov
cwtl
test
repnz
test
sub
enter
rorl
orl
push
test
dec
sub
add
dec
mov
ret
lahf
dec
pop
xor
mov
out
push
and
movsl
xchg
jae
clc
notl
sbb
cmp
test
xchg
and
cmp
int3
push
out
push
push
inc
or
aas
dec
es
sbb
and
inc
push
cmc
lret
roll
jbe
fcmovne
dec
mov
jge
sbb
push
jle
sbb
movsl
inc
imul
sub
icebp
mov
ds
adcb
fwait
fs
scas
arpl
leave
outsb
cmpsb
sbb
inc
faddl
out
adc
lret
and
stos
mov
xor
in
movsb
jg
mov
jb
ss
roll
enter
pop
loop
lea
cli
push
in
andl
stos
add
cmpsb
pop
pusha
sbb
cmpsb
jmp
sarl
pusha
pop
push
fdivrp
xor
inc
stc
stc
aam
jnp
les
les
jecxz
ficoms
decw
mov
push
dec
mov
dec
push
imull
xor
mov
sub
xor
lret
pop
stos
test
push
in
test
imul
int3
iret
jns
cmp
rorl
decb
inc
js
arpl
cmp
add
das
push
and
push
cmp
xlat
xchg
adc
icebp
jns
jmp
clc
fs
repnz
mov
enter
sbb
push
push
or
aas
mov
lods
jp
xchg
cs
mov
hlt
sub
jg
mov
data16
xor
add
aas
cmp
jns
fidivrl
aam
out
std
and
cltd
out
cmp
gs
data16
cmp
sub
xchg
sub
lea
loopne
xor
cmpsb
stos
dec
outsl
bound
movsl
fnstsw
mov
xor
pop
fstl
aas
data16
ret
adc
pop
ds
adc
popf
push
cli
loop
add
mov
mov
sti
cmpsl
xchg
cld
repnz
xor
pop
cmp
mov
popa
adc
fwait
jns
iret
addr16
ret
les
inc
xchg
jecxz
inc
out
out
sti
pushf
shll
cmp
push
or
iret
in
cwtl
dec
sbb
out
call
push
xor
mov
sbb
aam
insl
add
js
sahf
jns
stos
nop
aad
loope
push
ss
xor
mov
js
xchg
push
jg
fisttpl
and
or
iret
bound
pop
and
inc
repnz
push
mov
and
insb
mov
insb
push
mov
bound
lret
push
cs
jb
push
cmc
data16
pop
xchg
or
or
cltd
in
dec
and
lret
xlat
mov
pusha
enter
loope
push
jnp
jg
outsl
scas
xor
icebp
les
xor
in
ret
xor
loopne
insb
stos
or
inc
insl
outsb
push
mov
jl
out
push
outsb
addr16
mov
cmpsb
int3
ficoms
stc
push
xchg
ljmp
mov
imul
ret
mov
jae
mov
xchg
pop
shl
call
leave
push
mov
pop
movb
popa
pop
push
inc
fsubs
and
repnz
stos
jo
es
arpl
push
pop
push
mov
cwtl
int3
cmpsb
push
xor
push
faddl
stos
insl
in
add
stos
jmp
pop
or
arpl
cmpxchg
inc
js
arpl
dec
xchg
xor
cltd
fistpl
aad
movsl
fs
gs
repnz
push
sub
movhps
inc
and
or
jg
sbb
fldcw
in
push
sub
insb
dec
add
sub
fsubl
clc
scas
hlt
add
nop
cli
pop
data16
dec
pop
out
enter
ds
adc
pop
mov
loopne
scas
popf
cmpsb
mov
addr16
pop
sbb
and
add
push
movsl
das
and
sti
mov
das
aaa
arpl
push
pushl
idivb
imull
fcoms
dec
es
js
mov
iret
jmp
cld
daa
scas
xchg
pop
iret
call
pop
ss
sbb
cmp
inc
cmc
push
outsb
rcrb
fwait
rorl
clc
xor
loope
cld
inc
pop
push
and
cmp
pop
imul
cmpsb
jb
or
pop
sbb
mov
jns
xchg
mov
test
sbb
add
pop
cli
inc
xchg
pop
xor
mov
jmp
xchg
outsl
shlb
cmp
in
xchg
negb
pop
sbb
dec
stos
testb
cmpsb
jle
ret
xchg
pop
call
fldt
ss
ret
sub
dec
out
mov
sahf
je
mov
xchg
jle
inc
lock
data16
ret
pop
mov
xchg
imulb
outsl
bound
int3
scas
gs
cmc
stos
push
xchg
mov
aaa
repnz
enter
jno
jmp
or
scas
pop
in
cmpb
pop
mov
movsb
loop
enter
dec
mov
fldl
mov
hlt
ljmp
mov
mov
mov
cwtl
shll
cmpsl
xchg
pop
sahf
mov
bnd
push
mov
in
push
pop
insl
push
fimull
andb
or
push
xlat
call
xor
call
jno
cmp
pop
pop
fwait
jle
lds
das
shrl
bound
cmp
xor
cs
sti
aad
pop
lret
adc
pusha
ficoml
out
push
jbe
es
mov
adc
out
data16
jno
dec
stos
fidivrs
xchg
push
pop
pop
mov
add
rolb
in
lods
std
and
fstps
insb
rcll
lods
push
pop
inc
add
dec
enter
int
clc
fistl
add
push
lret
and
fs
bound
movsl
int3
or
lret
aad
or
inc
mov
imul
popa
out
and
dec
orb
push
push
repnz
pop
adc
cmp
out
in
ja
stc
xor
jbe
imul
das
and
adc
frstor
inc
mov
fs
iret
fimull
loop
pop
bound
dec
daa
adc
cwtl
imul
push
movsl
dec
xor
pop
xor
loop
inc
or
int
imul
lret
outsb
bound
jle
push
ret
push
push
dec
cmp
jp
dec
outsb
scas
repz
fadds
adc
push
test
sahf
and
leave
cltd
sbb
pop
insl
lods
cmp
clc
ljmp
pop
rcrl
rorb
call
jnp
test
xchg
in
push
add
jecxz
fs
insl
cmp
filds
mov
mov
push
icebp
pop
push
out
add
sbb
pop
push
idiv
int
cmp
jg
repnz
add
add
mov
push
push
scas
mov
test
cmc
out
fistpll
arpl
mov
shll
cld
arpl
iret
mov
pushf
jb
pop
enter
outsb
sti
roll
shr
data16
push
xor
inc
loopne
out
jmp
mov
cli
lret
jl
pop
jne
test
sti
aaa
jle
arpl
sbb
rcrl
mov
lcall
xchg
incb
sahf
out
pop
enter
cmp
xorw
push
lds
call
xchg
repz
sar
inc
xchg
out
and
nop
xlat
insl
mov
sti
mov
scas
sbb
jg
dec
vpor
push
dec
add
shll
scas
jno
jno
ljmp
stos
bound
xor
push
xor
or
adc
fdivrs
xor
push
pop
movsl
fnstcw
roll
adc
and
jbe
pop
call
cmp
fwait
jp
mov
loopne
cltd
cmpsl
cmpsl
jns
and
xchg
pop
or
cmp
jmp
aad
mov
adc
iret
in
cmp
cmc
out
dec
push
cmpsb
scas
aam
inc
nop
mov
sub
and
push
push
test
sti
cmp
inc
dec
xchg
fcoml
dec
ret
in
sub
iret
jecxz
iret
bound
or
mov
fldcw
arpl
int3
cld
jnp
in
rol
lds
lock
daa
cmpw
cmp
push
ja
xor
mov
dec
repnz
push
push
fistl
ret
dec
aaa
xchg
test
mov
stos
scas
lds
iret
and
jno
roll
test
scas
fldl
es
jo
lods
cmc
jle
push
nop
adcb
adc
and
cmp
lds
adc
mov
xchg
jmp
andl
mov
scas
icebp
add
mov
add
ret
cmp
sbb
out
lret
loop
jecxz
insl
cmp
inc
ljmp
lcall
imul
data16
out
xlat
or
inc
ja
mov
jp
and
int3
pushf
or
cld
push
lock
fldt
insb
aaa
jle
sbb
cltd
dec
int3
jp
push
mov
stos
popf
xor
stos
or
adc
mov
push
inc
jns
bound
ss
fists
sub
loop
out
call
or
imul
iret
inc
sub
pop
inc
loop
bound
stc
xor
sahf
dec
inc
inc
adc
or
add
imul
inc
aam
jmp
fmuls
and
mov
cmpsb
rcl
add
and
or
add
push
fistpll
mov
pop
pop
fs
pop
cmp
adc
or
pop
jbe
je
mov
call
jp
xor
pop
sub
xchg
push
ds
aas
test
sbb
scas
push
repnz
in
xor
shll
or
mov
andb
mov
arpl
das
mov
jge
inc
jge
add
pop
dec
xchg
add
lods
mov
fidivl
sub
icebp
call
sar
sti
push
dec
in
faddl
incl
cmp
subl
pushf
lods
push
push
jl
fwait
addr16
push
push
lds
and
bound
sbb
mov
pusha
orl
loopne
xchg
mov
js
xor
cltd
xor
inc
movmskps
xor
fwait
dec
cmc
or
sub
ljmp
mov
xchg
bound
cs
or
cmpsb
sti
data16
lcall
adc
cmp
test
test
add
mov
push
insb
iret
cmc
jne
sbb
jnp
fisubrs
mov
xor
inc
cmp
bound
movl
nop
insb
fistpll
fisttps
das
or
ja
push
pop
hlt
imul
stos
nop
sbb
or
lods
jne
icebp
or
ss
in
leave
pop
lea
loopne
pusha
lock
cmpsl
sbb
add
push
iret
jnp
xchg
into
lret
xor
inc
push
jno
push
mov
push
xchg
jne
out
push
lret
mov
cmc
jmp
lds
shll
inc
sub
das
xchg
push
mov
fistps
jns
mov
inc
inc
jno
cmp
mov
xchg
insl
mov
leave
rcll
dec
cs
in
mov
or
cmp
pop
jae
hlt
push
add
bound
int
leave
out
pop
aam
mov
cmp
movsb
scas
sub
call
push
adc
jns
and
cmp
pop
sahf
ror
jnp
add
xor
and
ret
adc
sti
sbb
loope
push
mov
and
cmpsb
pop
popf
hlt
outsl
inc
add
adc
test
push
jno
jl
pop
sub
cmp
adc
add
inc
xor
stos
mov
aam
fldcw
xor
and
mov
imul
test
in
xor
pop
jbe
stos
in
inc
cmc
push
test
mov
movsl
push
je
movsl
add
rcrl
lods
fcoml
pop
and
xchg
ds
mov
rcr
push
movsb
sti
iret
mov
hlt
out
mov
sti
jmp
and
pop
cmp
sahf
xor
sbb
xchg
enter
cmc
xor
bound
insb
push
int
mov
and
add
andb
stc
fmuls
mov
test
xchg
decl
xchg
into
loopne
push
bound
push
xchg
push
sub
in
aad
cmpsb
xchg
repz
jmp
xor
inc
call
dec
clc
mov
dec
add
pop
sbb
xchg
inc
jmp
popf
bound
into
cmpsl
adc
and
jle
bound
divl
push
xchg
sbb
pop
fsubrs
int
stc
mov
iret
aaa
lahf
adc
push
out
push
sarb
mov
repz
sub
repnz
out
stc
and
ficoms
sub
xchg
das
pop
pop
xchg
mov
xchg
cmp
fcoml
sti
daa
icebp
insb
and
lock
sbb
lds
fists
call
je
std
mov
dec
xchg
sti
xchg
movl
cwtl
add
add
fisttpll
xor
iret
and
sub
cmp
das
dec
fcmovne
and
repz
sbb
adc
sub
dec
js
mov
push
mov
ljmp
sub
xor
jnp
inc
inc
push
mov
inc
bound
and
enter
test
gs
insb
add
repnz
xor
jecxz
rcll
out
int
in
mov
lahf
adc
test
fmul
push
fucomip
ss
pop
jne
mov
ret
cmp
rcll
mov
jne
test
scas
addr16
std
ret
push
hlt
and
push
fs
enter
loope
test
xchg
and
aas
mov
jmp
push
xchg
jge
fwait
data16
fwait
xor
dec
stos
mov
and
inc
push
std
les
pop
add
push
test
inc
and
xchg
and
stos
push
call
movsl
les
neg
out
inc
in
push
jno
js
lret
xchg
xor
cmpsl
push
lods
aaa
fs
fsts
xor
adc
push
or
mov
mov
mov
pop
jnp
add
push
das
inc
fldenv
pop
pop
push
xchg
dec
cli
mov
shlb
lock
aam
neg
imul
jl
push
stos
xor
xchg
outsl
cmpsb
pop
fdivrl
jp
shlb
ds
int3
fldt
repz
adc
mov
ljmp
data16
push
mov
xor
fdivp
test
cmc
mov
push
and
scas
in
fwait
add
sbb
sub
add
mov
shl
addr16
push
add
pop
lea
lret
arpl
sub
push
popa
out
iret
aam
enter
nop
int
adc
fwait
movsl
jae
pushf
cmp
or
push
xor
cmc
sarl
in
std
aam
sbb
lods
mov
push
sti
and
pop
inc
cmp
xor
lock
mulb
jp
ja
cs
mov
mov
pop
cmpsb
cs
and
add
cmp
stc
into
pop
fucomi
jae
xlat
stc
js
sub
or
je
dec
mov
jmp
jmp
dec
stc
jmp
cmp
test
xor
test
pop
enter
jb
lods
stos
jp
jo
arpl
loop
mov
cwtl
xor
lret
fcoml
int
pusha
or
mov
jge
aas
cmpsl
pop
out
rorw
cmp
in
dec
shll
dec
testb
add
bound
mov
outsl
and
push
outsl
jmp
inc
push
sbb
int3
or
jmp
call
arpl
dec
mov
lret
es
jnp
in
jg
adc
sub
push
cmp
arpl
pop
xchg
movsb
sahf
adc
bound
mov
dec
sbb
push
sbb
fiaddl
push
cli
mov
mov
lds
push
fs
jle
xor
ja
idivb
mov
push
push
pop
pushw
ret
outsl
push
fisttpll
cmpsl
bound
pop
pushf
and
icebp
push
addr16
mov
dec
ss
mov
xchg
or
xorb
ficoms
fidivrs
mov
mov
xlat
test
push
push
pusha
xchg
dec
adc
stos
sbb
mov
add
sbb
inc
cmp
pop
jp
mov
jae
sub
push
mov
call
jecxz
jnp
icebp
push
inc
lret
jmp
xchg
test
fsubs
dec
mov
mov
jl
out
loop
jle
out
or
jmp
xchg
cld
clc
push
xor
insl
inc
incb
xor
mov
jmp
jae
cmp
outsb
mov
and
push
dec
push
inc
dec
push
pusha
adc
dec
xchg
adcb
cli
aaa
mov
xor
sbb
jb
repnz
in
dec
es
add
inc
mov
mov
pop
movsl
shlb
cmpsl
nop
ss
aas
fs
sti
imul
lods
dec
aam
dec
jl
nop
aad
xor
cmpsb
sbb
add
aaa
xor
xchg
test
sbb
fiadds
bound
push
sbb
xchg
lahf
iret
loop
addl
pop
sar
pop
cmp
push
stos
fcmovb
cli
shr
dec
xchg
insl
jnp
xchg
popf
inc
les
fs
out
or
cwtl
loopne
cmp
inc
aam
or
mov
xchg
mov
lret
and
push
jnp
add
jl
pusha
movsb
or
cmp
jge
push
and
pop
cld
jo
addr16
stos
xlat
fadd
sub
in
cmp
cmp
jl
mov
rolb
outsl
cltd
bound
aam
jl
andb
adc
ja
cwtl
sbb
outsb
fcoml
mov
rorb
sbb
mov
aad
loop
push
ja
xchg
aad
mov
push
fbstp
out
xor
iret
pop
mov
rorl
ja
push
or
fsubs
mov
test
sbbb
pop
scas
mov
imul
or
add
ja
shr
in
inc
fs
jle
cmpsb
jb
dec
int3
adc
push
sub
je
test
test
sahf
mov
cmc
test
ror
shrb
cld
subl
mov
mov
test
mov
cld
mov
sub
sub
popa
cmp
pop
push
jbe
lret
shrl
or
stos
outsl
jo
push
aaa
xchg
movsb
mov
test
mov
pop
add
cltd
insb
test
pusha
cmpb
std
dec
out
in
xor
push
in
nop
pop
or
push
jno
or
lret
mov
mov
inc
in
fldl
fcoml
or
imulb
imul
adc
mov
jecxz
mov
and
sub
cs
lods
jb
add
shr
and
jnp
gs
hlt
sbbb
lods
lahf
bound
in
xorl
mov
inc
stc
adc
mov
mov
pop
out
sbb
push
and
in
pop
out
add
repz
pop
pusha
dec
idivb
inc
push
jnp
xor
shrl
jbe
mov
mov
pop
das
mov
out
pop
cs
push
out
push
cmpsl
dec
roll
mov
or
sub
push
aas
push
sub
jge
fmull
loop
mov
push
mov
call
jp
push
in
pop
push
jne
jb
mov
and
ficompl
jnp,pn
push
daa
cmc
and
cmp
gs
enter
add
test
aaa
ss
pop
mov
sarl
test
cmpsl
aas
sbbb
dec
mull
push
lods
je
je
push
mov
outsl
hlt
imul
inc
ret
xchg
repz
loopne
sbbl
mov
fwait
jmp
stos
inc
cmc
add
push
jbe
in
ja
outsl
or
or
dec
loopne
push
ljmp
mov
push
pop
xchg
faddl
sbb
push
iret
fsubs
push
das
xchg
push
pop
jle
xor
aam
addr16
test
cltd
add
js
aaa
pop
jnp
ss
adc
sub
fimuls
rolb
ret
adc
mov
mov
xchg
dec
inc
sub
jno
enter
daa
push
dec
loope
rorb
push
push
mov
cld
jle
xor
mov
and
cli
xchg
lods
mov
fdivrs
adc
push
xchg
in
mov
push
jp
cld
mov
push
out
dec
cli
cmpsl
sbb
or
aam
jnp
repnz
xchg
je
test
xor
inc
paddsb
push
scas
cmp
push
xchg
mov
sub
pop
push
jbe
test
mov
popf
inc
dec
out
mov
in
cmp
lds
das
and
loop
adc
sbb
mov
push
cmp
jmp
das
push
pop
dec
push
nop
mov
cmp
out
push
lods
fldcw
enter
xor
scas
pop
cmp
loopne
cmp
mov
push
lods
int3
test
inc
mov
pop
repz
in
xchg
mov
mov
jle
cmp
inc
dec
mov
in
push
xor
sbb
pop
out
orb
pushf
enter
icebp
mov
pop
jge
jp
shll
cmpsb
xchg
fwait
js
adcb
enterw
in
jbe
add
js
sub
fwait
xchg
and
sahf
or
xchg
movsb
add
and
xor
push
sbb
bound
rcrl
push
pushf
jge
jnp
ss
movsl
shlb
stc
arpl
movsb
xor
jmp
loopne
push
sbb
jge
lods
outsl
sbb
out
jno,pn
or
xchg
fbld
aaa
out
push
cld
xchg
mov
fisttpl
mov
dec
jle
fldt
jbe
call
cld
cmc
jmp
push
pop
add
pop
xchg
frstor
mov
mov
out
mov
mov
into
or
jl
push
or
int3
cmc
jns
cmp
mov
jg
in
and
or
mov
jne
enter
stc
inc
out
bound
int3
pop
cmc
push
or
or
add
hlt
xchg
fisttps
pop
aam
add
dec
ss
pop
push
popf
or
inc
rcll
push
mov
lahf
push
int
out
mov
sahf
mov
pop
inc
mov
pushf
pop
xor
out
push
pop
jg
gs
test
int
inc
cs
in
sbb
jg
xchg
imul
nop
inc
sub
mov
dec
push
rcll
or
loop
or
stos
cmp
jmp
insb
jecxz
bound
cmc
mov
jb
in
cwtl
sti
nop
rcrb
ds
sub
jmp
inc
sbb
xlat
adc
sbb
xor
and
sbb
jmp
and
inc
jg
icebp
sbb
pop
jb
addr16
sbb
sbb
push
push
or
vcvtps2pd
in
push
and
sarb
pop
jle
sub
mov
addr16
bound
int
sbb
fldt
std
outsl
push
fnstsw
cmp
push
mov
stos
leave
rclb
arpl
add
push
arpl
and
cs
inc
pop
push
push
jae
push
cmp
push
inc
push
pop
ss
ret
dec
push
bound
add
loop
and
push
mov
mov
pop
xor
daa
jmp
mov
inc
mov
stos
movsb
shll
sbb
bound
inc
inc
sbb
aaa
jnp
imul
insb
cmpl
cwtl
inc
sub
or
cld
mov
jb
push
sub
orb
in
insb
push
inc
xor
dec
mov
pop
mov
xchg
lret
cs
jle
dec
mov
jb
xlat
sub
popa
push
movb
dec
aam
add
outsl
js
cmp
mov
iret
cmpsl
js
pusha
pop
clc
jg
movsl
ret
push
jmp
pushf
hlt
or
cmpsb
add
out
xor
jmp
push
sub
popf
push
icebp
push
or
add
xchg
push
pop
cwtl
sub
popa
addr16
rol
sahf
inc
fistl
xlat
mov
insb
xor
xchg
stos
fsubr
pop
push
push
fists
lea
out
push
push
shl
or
pop
loop
rclb
punpcklwd
test
mov
jne
stos
int
push
stos
inc
add
dec
andl
mov
into
xorb
out
sub
stos
mulb
jno
sub
mov
mov
or
mov
dec
mov
adc
mov
mov
pusha
mov
js
shl
movsl
push
push
into
pop
and
cmp
imul
test
or
enter
mov
adc
jle
ret
into
rclb
add
push
xchg
rcrl
adc
scas
stos
insb
xchg
sub
ljmp
sbb
clc
jno
inc
fstl
ret
jae
in
repnz
xor
xchg
lahf
push
and
filds
adc
inc
sahf
xchg
inc
cwtl
mov
rorb
ds
pop
outsl
inc
aad
imul
popf
mov
push
mov
ret
roll
fdiv
push
mov
loop
fildll
sbb
pop
cltd
ret
mov
mov
fcomip
pop
lods
sub
in
ds
lahf
shrl
cltd
push
cld
scas
sub
loope
pop
outsl
rcrl
lds
sbb
addl
dec
es
jmp
xchg
aas
es
inc
sbb
movsb
fidivrs
cmpsl
jns
in
addr16
add
jmp
fisubl
sbb
xchg
test
mov
sbb
int3
xchg
and
rcrb
sub
xchg
sbb
in
sarl
sbb
push
aas
sub
mov
push
inc
push
inc
jno
pop
mov
push
pop
jo
and
fbld
xor
xor
loopne
inc
dec
adc
icebp
lret
sub
aam
and
jl
shr
jp
ljmp
xorb
cld
stos
mov
gs
aas
insb
sbb
pop
adcl
jnp
mov
or
in
stos
ss
test
xchg
lret
mov
aad
test
and
add
mov
pop
adc
jnp
fmull
mov
mov
pop
cmpsl
jg
mov
dec
and
rcr
call
mov
push
loop
mov
push
fildl
fmul
push
popa
fiaddl
orb
xor
and
pop
xor
call
or
je
cli
lret
sahf
mov
fistl
push
fwait
and
push
popa
fwait
stos
sub
mov
js
cmc
mov
mov
sbb
xchg
push
sti
and
in
std
test
mov
in
into
notl
jo
jae
sbb
mov
mov
test
pop
push
bound
into
push
or
and
push
mov
jb
mov
test
and
dec
xchg
push
xchg
mov
loopne
repz
jmp
sahf
out
scas
pop
adc
pusha
bound
inc
aaa
xchg
jno
subb
bound
xchg
lahf
cltd
sahf
out
pusha
iret
xchg
ss
jns
in
sbb
in
ret
movq
iret
inc
pop
fdivs
add
mov
repz
sub
sahf
sbb
jle
mov
cmp
outsb
mov
lea
mull
xchg
dec
and
cmpsl
dec
decl
popf
and
fildl
scas
and
push
pop
or
xchg
sub
pop
aam
cmp
imul
xor
mov
call
pop
aam
lock
fmulp
cmp
icebp
lret
and
sub
ret
or
dec
in
push
or
or
jle
inc
ljmp
in
push
pusha
leave
rorl
push
cmp
data16
mov
lock
inc
je
cmp
rol
xchg
dec
sub
lods
sub
xor
cmp
stos
add
je
push
xor
xchg
js
cwtl
cmp
push
cli
pop
rcll
lcall
cmp
jecxz
outsb
adc
mov
and
adc
add
jno
push
xor
pop
iret
in
sbb
dec
sbb
sbb
lds
mov
mov
fs
mov
xorb
adc
cmpsb
daa
in
enter
in
xchg
push
add
outsb
into
dec
cmc
addr16
cmp
pusha
push
lret
pop
ret
cmp
push
adc
scas
fbstp
aas
inc
pop
into
loop
or
sub
daa
js
outsl
pop
mov
push
mov
inc
gs
jl
inc
xor
ljmp
mov
mov
into
jb
int3
xor
jo
ret
inc
or
dec
repnz
aad
push
test
mov
or
negl
jne
add
lods
test
sbb
js
inc
push
and
push
pop
jge
fisttpll
int
dec
mov
sbb
pop
dec
push
aam
push
std
orb
mov
bound
out
xchg
mov
and
mov
icebp
cli
lea
or
in
cmpsl
lahf
outsl
ja
out
popa
pop
pop
sbb
addl
fdivrl
fistl
jbe
sub
mov
les
pop
iret
cs
or
negb
leave
xchg
add
inc
ficoms
stos
addr16
dec
add
inc
add
nop
stos
jb
fs
or
insb
sahf
pop
fwait
sub
mov
dec
mov
pop
int
sub
fsin
push
or
daa
inc
xchg
leave
push
bnd
pusha
repz
cmp
push
test
add
or
sbb
jae
push
icebp
ss
fmul
enter
stc
adc
test
ficoms
fsubrs
mov
push
jns
dec
pop
ret
and
repz
and
jecxz
sbb
imul
in
ja
pop
sahf
iret
out
ja
pop
mov
in
push
jo
mov
call
gs
loopne
xchg
pop
adcl
sub
loopne
rcl
cmpsb
sbb
adc
rclb
mov
adc
ss
pop
cmp
mov
lods
sbb
sub
testl
inc
cmc
mov
stos
stos
and
fistps
push
lret
jo
add
ss
aad
icebp
mov
cmp
inc
sub
dec
fdivl
push
lret
mov
mov
addr16
jo
fistps
push
sbb
mov
test
jge
in
dec
in
faddl
aad
pop
insb
push
jne
stos
xchg
xchg
inc
dec
aam
mov
lods
push
ds
hlt
dec
sbb
push
adc
mov
push
xchg
int3
fdivs
pop
pop
jge
bound
test
xchg
mov
and
incb
fwait
loopne
cmp
test
xchg
cld
and
xchg
push
iret
rclb
aad
mov
subb
in
push
addr16
faddl
in
orb
iret
test
lahf
xchg
ja
jmp
or
mov
jo
add
iret
pop
and
int
push
bound
jns
addl
inc
out
sub
repz
xchg
xchg
sub
ret
add
aam
test
push
add
addr16
call
mov
add
rcrl
jecxz
push
pop
sub
jge
and
push
ss
test
iret
xchg
dec
jns
inc
pop
jne
inc
icebp
mov
push
testl
dec
lret
pop
int
cmpsb
sub
insb
push
dec
cmp
push
fwait
sti
sti
fldt
mov
stc
lods
xadd
sub
push
xchg
daa
xchg
and
mov
pop
xchg
in
adc
pushf
jno
test
inc
lret
mov
dec
stos
xor
adc
call
inc
push
rorl
pop
push
and
in
cld
ss
fs
push
sti
arpl
xor
add
ret
ja
xchg
jno
call
cmpsl
add
pop
inc
call
scas
fwait
adc
mov
mov
push
sub
scas
mov
dec
xor
call
mov
or
popf
shlb
lret
fiaddl
out
ret
bound
neg
stc
cmc
xchg
sbb
ret
js
and
std
lret
jnp
lods
mov
insl
bound
inc
mov
and
je
add
mov
stos
addr16
dec
mov
inc
cmp
mov
xor
dec
outsl
sub
aam
int
cs
out
mov
dec
js
xor
push
stos
mov
mov
jmp
sub
lods
or
xor
jnp
lods
shr
lods
cmp
ds
cmpsb
sub
arpl
pushf
push
adc
xchg
bound
and
cmpsl
je
push
cmp
inc
js
jnp
mov
sbb
nop
cld
aas
push
inc
in
mov
xor
and
out
out
iret
jmp
loop
ret
lahf
add
xchg
or
sbb
in
div
addr16
push
inc
sbb
dec
sahf
shr
scas
push
out
dec
pop
rorl
or
fwait
mov
jnp
inc
cmpsl
mov
mull
fnstsw
sub
fdivs
and
jle
push
xchg
pop
push
imull
inc
push
adc
test
jo
push
mov
lds
mov
push
xorl
push
fstpl
lds
les
dec
cmp
cmp
cltd
call
mov
dec
xor
pop
push
lods
push
inc
mov
mov
or
mov
sbb
stc
push
lods
stos
cmpsb
call
shl
sbb
add
xchg
pop
adc
lret
add
add
scas
mov
or
cmpsl
xchg
nop
mov
pushl
jge
pop
xchg
fnstcw
fsubr
push
clc
ss
adc
mov
xor
clc
cld
outsl
pushw
mov
sub
stos
stos
cmc
jbe
shr
fcomp
xor
or
int
push
push
xor
pop
ret
pop
add
cli
sub
out
icebp
int3
or
cmc
push
adc
or
add
cmp
inc
lea
cwtl
jle
mov
push
fistl
sub
int3
loope
push
rolb
fstl
in
sub
jle
es
les
adc
inc
mov
daa
arpl
push
and
jo
lods
sub
or
inc
mov
int3
dec
std
scas
in
and
or
lcall
mov
fwait
push
jo
ds
outsb
or
int
negb
ljmp
jo
adc
addr16
adc
push
or
pop
fs
in
sbb
stos
cmpsl
dec
ss
cwtl
sbb
pop
and
in
adc
xchg
sub
fldt
pusha
add
nop
or
stos
inc
adc
popa
pop
fsubl
std
bound
dec
scas
imul
dec
es
adc
fldt
ss
aaa
loop
jmp
and
bound
add
pop
stos
stos
lret
mov
inc
test
es
das
adc
mov
dec
in
mov
xor
sahf
xor
or
in
add
mov
nop
cld
push
mov
jg
inc
jge
cmp
gs
add
test
loopne
adc
cmp
mov
sbb
nop
xchg
jl
ljmp
push
cld
or
loop
jne
mov
pop
out
push
adc
cmp
cmp
mov
sub
add
and
push
loop
cmc
test
inc
bound
insb
xchg
shll
mov
mov
mov
dec
xor
mov
adc
push
mov
dec
sbb
and
iret
push
sub
fadds
lock
jne
cmp
and
push
cmp
xor
ret
cld
in
mov
addr16
call
ja
sar
mov
xor
adc
push
xor
cmc
in
cld
insb
shl
iret
xor
cmp
insb
mov
jmp
cmp
out
scas
xchg
xchg
inc
arpl
cmp
bound
push
xor
jae
mulb
and
xchg
mov
push
popf
stos
inc
sarl
rorb
subb
pop
pop
stc
add
push
repz
lds
add
jmp
mov
jecxz
pop
iret
push
push
nop
fcomp
jmp
and
adc
fdivrs
mov
adc
xchg
xchg
stos
add
movsb
pushf
fwait
movsb
jge
mov
ss
lret
loopne
stos
loopne
push
and
add
ret
jbe
push
bound
jne
loope
jno
push
inc
xchg
lock
add
add
out
push
push
in
icebp
loope
sbb
shrw
push
imul
loop
sub
jne
cmc
daa
pop
push
dec
call
pop
das
gs
fwait
ret
xchg
lret
sbb
sbb
das
adc
jmp
testb
jg
jmp
mov
jmp
dec
sub
push
cmp
stos
mov
bound
mov
mov
hlt
fnsave
and
nop
je
add
iret
out
or
movsl
or
sub
cmc
jle
in
jle
mov
xor
loop
lcall
shlb
cmp
sbb
pop
push
inc
scas
add
pop
stc
or
ffree
bound
sti
and
adcl
jno
dec
xchg
daa
push
pop
sub
mov
in
xor
bound
push
call
xlat
and
in
fmull
in
icebp
aas
push
add
adc
xchg
push
and
pop
hlt
fsts
addr16
in
inc
jl
stos
push
pop
xchg
add
mov
jl
ja
das
fsubrs
pop
dec
jl
push
fwait
add
sub
dec
lods
add
rcrb
mov
ds
bound
jmp
cmp
xor
rcll
xor
mov
daa
push
add
mov
push
lcall
sahf
testb
movsl
and
lock
mov
adc
aas
inc
scas
cmp
dec
dec
icebp
push
push
jae
add
sbb
xchg
mov
mov
dec
cmc
xchg
inc
fistl
jecxz
fs
mov
inc
ffreep
push
jns
xor
xchg
and
iret
push
dec
pop
add
out
call
or
jne
adc
dec
add
iret
adc
xchg
jmp
push
cltd
push
xor
xchg
subb
jmp
js
bound
das
cltd
mov
adc
fsubrl
bound
mov
inc
aad
in
cld
pop
ret
cmp
fnstsw
aaa
jg
cmc
out
in
push
in
push
inc
mov
les
shr
bound
jnp
and
push
sbb
addr16
aad
cwtl
pusha
push
stc
push
xor
iret
inc
cltd
sub
into
push
pop
xchg
fcoml
pop
sub
and
dec
xor
jmp
pushl
es
lretw
push
cmpsl
test
cmc
shl
xchg
pop
push
push
add
adc
mov
stos
mov
dec
sbb
jmp
negb
icebp
in
pop
out
bound
cmp
xchg
ds
test
faddl
jle
ret
vpaddsw
mov
ja
aas
and
lret
ret
nop
push
mov
mov
mov
add
inc
insl
mov
push
out
loop
lds
adc
aas
dec
jo
clc
jbe
mov
sbb
xor
inc
scas
call
loopne
sub
and
mov
lods
push
pop
stos
adc
xchg
orb
mov
sub
mov
dec
jae
std
scas
add
lea
mov
in
mov
cmp
push
mov
pop
xor
mov
nop
add
mov
movsb
repnz
dec
cmc
mov
or
fstp
pusha
bound
inc
add
sub
lock
jge
stos
imul
cmp
pop
mov
mov
fdivp
popa
pop
int
aas
psrlw
xchg
push
fwait
fwait
into
xchg
ja
jbe
xor
add
pop
jmp
inc
fidivl
orb
sub
sbb
adc
ds
push
dec
cmp
dec
cli
xchg
add
or
jb
cmpsl
ret
sahf
xchg
push
mov
push
outsb
daa
inc
iret
inc
inc
pushf
cvtdq2ps
fs
in
cmc
push
mov
pusha
es
adc
jmp
sub
mov
mov
outsl
dec
shrl
jg
in
mov
xor
jp
cmp
inc
adc
iret
dec
push
xchg
mov
pop
dec
cltd
int3
jne
pop
loope
flds
gs
stc
add
in
out
sub
shll
and
xchg
dec
mov
stos
aad
sub
outsb
sti
mov
sbb
rcpps
jmp
xor
shl
jne
stos
cmpsl
cmc
ret
push
jno
stc
mov
out
inc
dec
insb
out
fisttpl
cmpsb
dec
popa
sbb
bound
lret
push
xchg
shrl
push
ja
and
aaa
out
sub
stc
and
sbb
dec
addr16
scas
in
mov
cltd
popa
movsl
inc
outsb
iret
bound
push
lds
lret
in
jae
movsl
pop
fs
push
sbb
jmp
add
xor
xor
or
adc
rcll
enter
mov
hlt
repz
jle
cld
adc
andl
lret
outsb
shrd
sbb
repnz
sbb
test
call
push
icebp
jne
fbstp
in
cmp
js
int
jnp
sbb
and
jmp
dec
and
xchg
cmc
sahf
gs
push
mov
jbe
lods
adc
bound
loope
lock
movsb
call
daa
jns
or
cwtl
ja
inc
mov
sti
dec
ret
or
bound
push
sbb
dec
mov
fcmove
cmp
mov
xor
cmp
popa
mov
inc
and
cld
ljmp
xor
lods
hlt
int
fninit
loopne
insb
jmp
scas
inc
call
int
dec
mov
cmp
iret
ja
xchg
faddl
testb
rcll
outsl
push
mov
and
push
xchg
sub
cmp
jno
pop
cwtd
stos
xchg
outsl
bound
xor
cmc
ret
nop
mov
dec
mov
sub
push
push
xor
out
push
cmp
xchg
shrb
mov
and
inc
cmpl
ror
xchg
jg
jae
movsb
lock
mov
add
nop
cmpl
and
imul
mov
cld
cld
call
shll
fistpl
jmp
mov
sbb
rcrb
cs
sbb
lea
xor
jmp
gs
in
lahf
xor
test
pop
bound
shll
mov
gs
cmc
out
fmull
sub
jg
fiadds
mov
test
inc
xor
test
dec
or
loopne
js
bound
xor
push
mov
int3
mov
fmuls
addl
int
add
fstpt
xor
fs
lods
push
repz
or
ss
push
stos
pop
out
test
int3
cmc
insb
add
mov
arpl
push
lods
mov
mov
cwtl
orb
shll
fwait
movsb
cs
mov
push
sub
sbb
loope
aam
cmp
inc
cmp
imul
stos
sahf
fwait
dec
lods
sti
in
scas
outsb
sbb
lea
movsl
inc
cld
pop
xrelease
mov
testl
out
divl
pop
cmpsb
add
inc
ja
mov
sti
shr
pop
sub
mov
loope
mov
es
sbb
xchg
bound
out
jns
cs
adc
jge
add
xchg
add
or
rcrb
aaa
dec
fsubs
stc
addr16
jnp
dec
adc
adc
adc
jg
iret
cmp
out
and
sub
push
xor
sub
pop
sub
mov
jo
ror
ds
xor
xchg
or
sub
bound
pop
fmull
std
inc
outsb
dec
mov
inc
cwtl
roll
ret
negb
imul
ljmp
sar
daa
les
xor
cmp
das
jbe,pn
mov
in
push
push
loopne
int
leave
adc
movsb
inc
out
iret
push
nop
dec
push
push
ret
jo
das
mov
out
pop
bound
fldt
imul
jecxz
cld
sahf
or
mov
scas
push
test
jg
gs
scas
or
inc
movsl
cmp
pop
mov
sub
xchg
pop
cwtl
jno
pop
icebp
lods
int
insl
push
loopne
fsub
call
movsb
sub
sub
push
loop
out
insb
loope
ds
lret
sub
mov
loope
lea
cltd
sar
sub
xchg
jmp
or
je
dec
mov
arpl
lahf
popa
cmp
mov
leave
insl
pop
xchg
insl
roll
loope
pushf
rep
mov
cmpsl
add
push
pop
adc
xor
dec
call
adc
in
or
jne
loope
adc
in
leave
loope
iret
xchg
in
stc
adc
out
lret
push
js
jg
loope
out
test
sbb
push
xchg
shlb
ror
scas
dec
mov
addb
lahf
insb
addr16
jno
xchg
xor
roll
out
mov
call
loope
cmpsb
lods
fwait
cmp
movsb
addr16
popa
in
sub
pop
jle
loope
movsl
pop
les
icebp
or
lods
mov
int3
sti
jns
out
add
sub
sbb
push
fsubs
and
scas
fsubl
shlb
loope
test
fsts
mov
loope
xor
into
xorl
js
into
jae
je
fs
ja
shrb
outsl
shr
and
jmp
push
in
fldcw
push
adc
jns
insb
test
jge
inc
icebp
cs
fsts
fsubl
mov
ret
insb
cmpsl
jg
test
inc
sbb
shl
dec
mov
in
icebp
shl
mov
mov
mov
xchg
or
push
out
pusha
cs
jae
stos
cs
jl
loopne
and
stos
in
jo
fidivrs
loope
out
repnz
loope
cltd
push
xchg
fbld
jl
sub
aam
xor
mov
push
ret
rcl
mov
mov
les
mov
imul
scas
nop
call
clc
hlt
cmp
and
loopne
jae
mov
or
xchg
out
sbb
lea
mov
and
lahf
js
in
imull
pop
sbb
loope
insl
or
pusha
mov
and
lahf
push
loope
jnp
xchg
push
sbb
pop
mov
fsubs
push
mov
jmp
mov
scas
movsb
loope
fs
and
jmp
sbb
sahf
out
loope
jl
adc
scas
mov
jp
shl
jne
push
in
and
fldcw
ds
std
scas
cmpsl
and
cmp
add
in
test
movsl
and
call
mov
cs
mov
data16
xchg
mov
int
sub
rol
out
pusha
call
cld
jmp
jl
cli
loope
movsl
int
ss
dec
scas
lea
pop
mov
out
jl
jp
mov
in
out
and
out
and
in
addr16
shrb
lock
das
lahf
cmp
jbe
loope
adc
rorb
inc
test
loopne
pop
mov
or
mov
shll
daa
loop
inc
pop
pop
pushf
push
add
je
inc
ljmp
rol
test
add
push
adc
negl
popa
out
xchg
loopne
leave
loopne
add
push
shlb
jge
add
jo
pop
mov
daa
gs
xor
xchg
shlb
loope
pop
jecxz
mov
lods
pop
fwait
mov
arpl
das
fiadds
pusha
movsl
inc
mov
aas
jb
lahf
jo
lret
in
in
push
loope
or
pop
insl
cmp
inc
mov
sti
xchg
cli
fsubr
mov
add
add
mov
mov
insb
add
pop
dec
fucomp
addr16
xor
jmp
jg
clc
loop
dec
sub
mov
in
lret
popa
mov
jo
or
push
mov
lock
shl
je
outsb
or
fdivrs
loopew
fistpl
or
leave
jge
pop
mov
mov
add
lods
in
add
loope
push
dec
sbb
loope
push
clc
dec
push
sti
mov
jnp
arpl
lods
iret
loope
pushf
pusha
fdiv
or
mov
inc
sub
stos
push
rol
loope
push
or
xchg
dec
orb
enter
inc
pop
pop
loope
mov
jb
loope
or
jns
cmpsb
sub
out
into
out
shrb
stc
fadd
outsb
scas
in
adc
xchg
das
mov
pop
loope
out
xchg
xchg
or
shlb
jb
inc
out
dec
stc
xor
outsl
lahf
movsb
loop
int3
cmpsb
inc
add
fs
sbb
popf
out
fsub
sub
mov
add
sub
ja
push
xorb
sbb
arpl
cmp
jge
xchg
jmp
in
xchg
aas
das
mov
or
add
mov
xor
cmp
jecxz
lahf
sub
cmp
adc
loope
push
xor
mov
push
loope
mov
sahf
fildl
adc
call
mov
mov
add
mov
mov
cmp
push
shrb
mov
sub
aam
pop
aam
mov
or
add
sub
pop
pushl
add
ffree
into
arpl
stos
and
and
push
lock
cmp
scas
loope
inc
adc
mov
pop
sbb
jecxz
add
ljmp
pop
mov
in
bound
fadd
insl
sbb
sub
bound
xlat
pop
imul
xchg
idivl
jbe
push
lahf
jge
pop
inc
pop
mov
and
loope
sub
ficomps
loope
in
xchg
in
pushf
add
dec
out
fidivrl
bound
and
mov
sbb
mov
and
jl
loopne
sti
ljmp
les
dec
enter
test
sbb
pop
mov
adc
sub
shlb
je
push
scas
mov
pushf
insl
out
fstpt
scas
mov
mov
pop
roll
pop
add
cmp
scas
loopne
cmpsl
in
and
das
cli
insb
testb
in
mov
sub
jl
in
aam
add
popa
mov
mov
loope
ror
mov
push
in
test
stc
lahf
lods
loope
pop
lock
les
iret
loope
add
inc
mov
pop
adc
push
jb
imul
scas
in
insb
movsb
lock
faddp
mov
and
mov
sbb
loope
or
push
pop
sub
mov
out
out
inc
repz
jo
lcall
sub
rclb
xchg
lea
fsubr
push
mov
std
rolb
jno
sbb
sub
xchg
fwait
daa
sarl
aam
loope
mov
loope
add
loope
pushf
cmp
cwtl
scas
and
iret
nop
lret
les
mov
lea
out
fmuls
in
mov
or
xchg
add
adc
xchg
mov
loop
in
insb
pop
iret
pop
cmp
mov
cmc
lret
out
fisubrs
loope
pushf
stc
xlat
mov
std
shll
xchg
mov
scas
scas
loope
mov
fwait
push
call
pop
lock
mov
ljmp
inc
inc
sbb
bound
mov
lret
fs
mov
daa
jns
in
into
shl
imul
push
das
mov
pop
icebp
and
sub
insb
out
dec
pop
adcl
pusha
in
scas
cmp
lahf
in
jno
loope
dec
xchg
stc
mov
int
lcall
xchg
popf
jp
jmp
adc
loope
mov
hlt
mov
loop
sbb
outsb
mov
sbb
hlt
in
rcr
mov
and
loope
xor
xchg
cmp
mov
lea
cmp
ret
fsubr
or
cld
data16
dec
fistpl
vpor
cmp
cmp
jmp
iret
mov
xor
scas
ljmp
jne
iret
popa
push
daa
lea
hlt
mov
stos
pushf
and
xlat
dec
add
mov
sbb
fwait
and
push
or
mov
adc
sbb
pop
lock
in
dec
jmp
mov
scas
sbb
repnz
jb
add
aas
rolb
out
cmpsl
test
aam
rcr
je
add
and
dec
bound
rcrb
pop
or
add
iret
xchg
add
pop
xchg
loope
movsl
dec
sti
xor
jle
imul
and
pop
popf
mov
int3
in
sti
ret
fcmovu
out
out
sahf
add
push
push
out
mov
jo
dec
mov
popf
daa
pop
sub
insb
aam
call
jae
lret
jb
mov
or
mov
mov
in
repnz
lret
insb
push
cmp
lock
dec
cmp
loope
mov
enter
sub
rcrb
mov
xchg
or
sar
add
lret
add
cmp
mov
in
in
push
insl
fucomip
cmpsl
dec
adc
push
shl
dec
push
mov
ljmp
into
sarl
xchg
lea
call
insb
iret
lret
jle
mov
hlt
loope
add
loope
mov
pop
leave
into
and
xchg
jns
mov
loope
jp
jo
add
inc
std
leave
mov
jbe
rorb
cld
loope
add
sub
mov
pop
fistpl
call
outsb
sysenter
sahf
roll
test
movsl
dec
sti
ss
jo
iret
jmp
jl
test
fisttpll
xchg
loope
adc
enter
push
xor
pop
jmp
and
mov
rcrb
lods
xchg
loopne
in
mov
jmp
rcl
mov
mov
mov
clc
loope
hlt
adc
ret
sarb
or
fsubl
fcoms
jmp
pop
cs
ds
mov
lods
in
mov
jns
mov
jb
sbb
imul
pusha
push
lret
mov
adc
stos
pushf
inc
nop
fld1
mov
orb
push
or
push
adcb
jns
pop
imul
iret
rcll
inc
sbb
jecxz
jg
adc
loope
and
in
xchg
fnop
mov
sub
daa
pop
in
movsl
cmp
icebp
rol
pusha
outsl
mov
mov
dec
je
scas
scas
dec
mov
fs
sti
jle
pusha
xchg
in
xor
je
shrl
push
out
jp
and
nop
dec
fsubr
out
in
pusha
test
fld
loope
jg
cmc
sub
loope
in
push
repnz
inc
and
adc
mov
rorb
stos
loope
xchg
pusha
xchg
add
jnp
cwtl
mov
hlt
scas
enter
cmp
or
jae
lods
call
xacquire
add
pusha
mov
test
add
fldcw
jns
mov
insb
shl
cmp
not
sti
in
and
out
mov
dec
int
mov
out
mov
lods
push
jno
pusha
lret
jge
mov
pop
xchg
or
jne,pn
test
fwait
pop
std
cmp
ljmp
loop
inc
fnstsw
insl
mov
call
dec
pop
call
jge
push
insb
adc
std
mov
lods
and
aad
insl
in
fs
pop
leave
cwtl
test
inc
ds
cs
jle
jl
jp
js
out
push
lea
leave
test
nop
std
add
pcmpeqb
fstpt
jl
jp
fsubs
fstpl
push
mov
xchg
arpl
int
cmp
iret
jge
mov
pop
pop
push
dec
leave
mov
dec
ds
adc
jns
inc
fdivr
push
mov
mov
call
mov
shl
movsb
xor
nop
int
fsubs
xor
arpl
mov
sbb
jo
pop
mov
jp
fcoms
ds
je
jo
outsl
test
add
push
adc
and
xor
mov
int
lods
push
mov
lea
mov
out
insl
pop
mov
dec
add
in
push
clc
mov
jmp
mov
in
push
pop
mov
push
fsubs
std
add
out
cmp
aam
jecxz
lahf
int
fs
mov
sbb
jge
mov
insl
ljmp
ds
call
and
pop
outsb
std
in
jecxz
xchg
and
and
ljmp
mov
mov
inc
popf
dec
push
dec
mov
lea
jge
imull
fistps
sbb
ds
scas
stos
fcompl
dec
dec
xchg
sbb
jp
mov
loopne
insb
insb
movsb
fldz
add
scas
int
mov
and
lods
arpl
inc
bound
pop
jge
add
in
push
pop
dec
dec
shlb
dec
sub
pop
jp,pn
adc
mov
dec
call
and
jo
fstl
ds
lods
ja
mov
scas
popf
data16
jge
insl
imul
out
xchg
push
call
pop
rclb
pop
fst
jne
sub
pusha
lods
sub
cltd
push
js
popf
or
jl
jmp
lea
jge
int3
test
pop
insl
sbb
add
dec
mov
imul
stos
pop
push
outsb
stc
sub
mov
mov
dec
or
pop
lods
lcall
lea
inc
jge
cmc
sub
sbb
mov
jl
jmp
dec
push
jno,pt
adc
mov
xchg
push
jb
push
bt
pop
out
repnz
add
mov
out
mov
dec
rolb
mov
mov
mov
out
xchg
call
movsb
inc
arpl
out
pop
ds
sub
sahf
push
test
push
dec
std
fs
rcl
xor
stos
jmp
addr16
rclb
lods
stos
push
mov
cmpsl
xchg
jge
loopne
leave
test
pop
leave
jl
cmp
gs
add
iret
cs
subl
daa
mov
mov
out
std
jmp
in
push
or
sub
int
call
push
fcompl
lret
mov
in
leave
test
push
jge
fcoms
insl
in
pop
aam
scas
dec
leave
sbb
pop
push
dec
test
or
or
call
rorb
int
push
rol
add
addr16
jge
insl
gs
test
dec
cmp
and
test
adc
mov
push
and
std
cld
sahf
xor
and
out
sbb
leave
jno
xor
int
mov
xchg
lods
inc
add
mov
insl
push
mov
negb
popa
loope
ljmp
rcrb
pop
mov
outsb
test
out
or
cmp
and
mov
fidivrl
int3
fstps
fstpt
mov
in
cmp
inc
sarb
stos
dec
sub
push
cli
std
leave
gs
stos
stos
jmp
inc
mov
in
jmp
and
test
ret
mov
jo
cld
ficoms
mov
pop
or
dec
jp
cmc
leave
sbb
int3
pop
ljmp
or
sub
pop
mov
in
cmp
or
in
in
fnstsw
mov
mov
sub
js
popf
cmp
out
push
sub
jae
jmp
sub
test
ds
xchg
cs
and
push
and
into
in
sub
xchg
sbb
and
cmpsb
jo
int
fsubrp
mov
mov
xchg
lea
in
adc
fdivs
test
jle
cs
push
mov
mov
mov
fidivrs
jecxz
out
add
out
or
mov
push
mov
adc
test
inc
jo
insl
fs
in
mov
ds
xchg
stos
call
pop
push
rcrl
jge
cmp
lret
push
test
add
jo
lods
pop
popf
fwait
jle
fsubr
in
or
leave
imul
or
repz
out
cmpsb
pop
cs
scas
insb
mov
dec
mov
xchg
int
add
sbb
adc
ja
in
in
int
mov
mov
shrl
ja
mov
ja
fsubrl
pop
dec
mov
sbb
xor
pop
cmp
scas
dec
ret
and
xor
out
mov
aad
int
mov
inc
popf
jmp
and
jge
insl
daa
mov
xor
aam
dec
ds
xchg
lock
mov
and
jmp
ljmp
js
xor
fnstcw
shll
sbb
pusha
ds
pop
lea
jge
dec
cmpsb
call
pop
call
sbb
add
lret
das
std
dec
out
out
mov
in
ffree
xchg
loop
ljmp
test
or
add
andl
jbe
mov
sahf
pop
jo
sbb
out
push
mov
in
stos
out
stos
fldl
sub
lods
mov
es
and
out
jle
fcoml
pop
cli
push
mov
pushf
dec
leave
addr16
xchg
in
jmp
mov
das
icebp
inc
sub
test
out
lods
lods
scas
out
cwtl
lret
fisttpll
mov
sub
jne
loopne
js
jl
fidivrl
popf
das
movsb
lea
adc
mov
add
mov
sbb
inc
in
push
out
push
test
and
out
adc
add
push
enter
pop
lods
imul
shr
dec
push
jge
mov
inc
insl
sub
dec
push
cmpsl
outsb
pop
gs
leave
jnp
sbbb
enter
ljmp
cwtl
cs
sti
arpl
push
inc
cmpsl
lea
push
jge
addr16
insl
repnz
dec
pusha
ds
mov
xchg
mov
push
dec
mov
or
xchg
jmp
into
jo
frstor
jb
pusha
lret
lahf
jg
rorb
push
ficomps
leave
imulb
mov
insl
rcr
pop
xchg
xor
jne
mov
jle
jl
fisubrl
shll
orb
push
std
lret
jg
int
add
out
leave
and
leave
repz
int
sbb
push
fsubs
popf
ret
leave
test
scas
insl
push
arpl
inc
add
jg
push
in
push
lods
push
bound
push
dec
pop
mov
inc
sub
in
out
or
fnstsw
jp
test
mov
out
in
scas
and
adcb
stos
sub
out
stos
outsb
insl
mov
into
int
mov
or
jge
insl
sahf
push
and
push
js
pusha
push
out
push
fcompl
pop
jmp
scas
dec
loop
sub
dec
sub
iret
lret
cmp
ds
test
pop
jge
sahf
push
sbb
leave
jmp
test
shll
add
push
adc
push
or
mov
out
leave
fsubrs
out
push
gs
out
mov
test
ljmp
lods
pop
call
pop
jge
mov
enter
push
pop
mov
xor
add
push
xchg
jl
xlat
push
add
jmp
scas
out
fisttps
frstor
int
sub
or
or
mov
aad
mov
cmpsl
xchg
scas
subl
sbb
xor
pop
popa
int
adc
out
mov
rcr
mov
add
enter
add
loop
push
aad
sbb
pop
push
js
jle
in
inc
cs
push
leave
ja
aam
out
push
sbb
adc
insb
push
xchg
pop
int
sub
bsr
mov
out
inc
leave
add
fsubrs
pop
adc
push
cld
ret
faddl
sbb
leave
cwtl
test
mov
adc
pushf
aad
int3
push
decl
leave
iret
hlt
fisttpll
mov
jne
sbb
xlat
mov
mov
ss
insb
mov
out
sub
inc
cmp
rol
pop
pop
push
jmp
inc
int
push
outsb
lock
insl
test
sbb
adc
scas
test
xchg
lods
inc
dec
jb
push
js
leave
jle
insb
jo
pop
data16
ds
lds
cs
push
movd
stos
dec
clc
push
outsl
fidivrs
xchg
add
insl
lods
mov
mov
sahf
imul
xor
pop
rcl
push
dec
jg
ljmp
call
scas
fisttpll
daa
sub
ljmp
enter
jecxz
ffree
mov
dec
or
movsb
cmp
rolb
popf
pop
push
out
pop
leave
fldcw
lea
insl
push
out
lret
ds
add
cmp
mov
into
jo
fsubrl
inc
int
addr16
lods
out
stos
jo
int
fisubs
adc
leave
pushf
test
addl
mov
mov
xor
lock
leave
enter
cmpsb
arpl
fisubrs
cmp
lock
push
scas
out
push
lahf
mov
out
jge
or
nop
insl
inc
scas
jo
and
sysret
loopne
loop
lret
fimull
cwtl
xor
jmp
scas
fistps
out
adc
add
stc
dec
leave
leave
test
mov
mov
sub
ds
dec
test
sahf
stos
inc
arpl
push
jle
scas
nop
sub
adc
addr16
mov
loope
mov
mov
mov
mov
movb
insl
cli
fmuls
and
push
ja
dec
ds
xchg
test
push
xlat
outsl
loopne
into
insl
mov
out
or
fstl
mov
mov
lods
pop
mov
rol
cs
pop
xchg
push
jmp
xchg
cmp
adc
mov
mov
imul
mov
mov
add
js
push
inc
in
jge
enter
aam
lcall
or
ds
call
xor
push
push
js
pop
sbb
inc
das
in
aam
out
leave
push
pop
mov
inc
orb
outsl
popf
leave
or
lcall
inc
and
inc
adc
fdivrs
fs
sbb
or
sahf
mov
add
out
sub
loop
in
int
scas
imul
add
faddl
push
in
jge
sbb
in
daa
pop
pop
imul
movsl
add
lcall
push
imul
jg
js
cmpsb
frstor
jle
push
nop
and
loop
push
mov
lea
fxsave
dec
adc
mov
lods
fmull
mov
pusha
lods
loop
lret
fs
adc
lods
int
ja
jmp
xorl
or
push
sahf
push
push
push
push
out
jecxz
rcrb
and
out
or
push
sbb
and
ret
fstpl
mov
push
das
inc
add
rorb
jge
insl
leave
pop
test
xchg
dec
pop
fisubrs
pop
push
xchg
movsb
mov
push
rorb
mov
jbe
loopne
pop
sub
inc
push
dec
popf
in
call
dec
imul
jg
sub
std
jmp
push
inc
leave
test
ds
push
push
stos
mov
enter
push
push
lds
and
fldl
int3
ret
aad
fs
mov
out
jae
out
add
xchg
fisttpll
loopne
sahf
push
in
push
stos
xlat
ljmp
insb
jbe
test
leave
xchg
test
dec
pop
pop
and
movsb
out
ljmp
xchg
cwtl
outsl
test
sbb
jl
test
xchg
inc
sub
subb
inc
sahf
out
loop
sub
shrl
fmuls
push
push
xor
and
shlb
jbe
rorb
push
sub
lock
push
cmp
push
xor
xchg
sahf
shll
mov
rcl
popf
jns
and
je
or
fsts
aad
int3
ds
and
or
or
jmp
ljmp
mov
fcoms
mov
int
xchg
push
js
mov
popf
sbb
cmp
cmp
sbbl
mov
inc
mov
subb
jo
push
push
jle
jl
jp
sub
ljmp
fldl
testb
mov
rcll
arpl
insb
shrl
pop
popa
sub
sbb
in
movsb
jo
pop
sahf
dec
add
jbe
fiadds
xor
push
mov
mov
pop
lods
js
out
add
fnstsw
push
mov
fcoml
inc
adc
or
sahf
dec
add
cmp
dec
inc
dec
in
test
cs
mov
xor
push
scas
call
daa
dec
fs
push
and
int
daa
cmp
sbb
mov
nop
insl
popf
add
shll
test
add
mov
call
das
xchg
adc
adc
xchg
cli
inc
push
lcall
xchg
fimuls
xor
aas
push
movsl
roll
imul
pop
and
cli
scas
cmpsl
js
fcmovb
lods
mov
push
jae
cmpb
mov
adc
xchg
xor
in
mov
xor
cs
in
fs
in
xchg
out
push
cltd
mov
and
xchg
mov
popf
push
push
xchg
aam
sub
sahf
lea
popa
fisubl
push
dec
movsb
push
jle
mov
mov
dec
push
inc
mov
sub
push
dec
inc
call
mov
and
push
lods
or
leave
ds
jge
stos
pop
xor
inc
cmp
sti
into
loope
push
dec
mov
ret
pop
popf
fsubr
and
dec
fwait
xchg
out
fisubl
sahf
fldt
loop
pop
popa
dec
test
or
stos
add
pop
mov
xor
cmpsl
mov
out
or
pop
inc
aam
es
xor
insl
sbb
mul
movsl
sahf
inc
sub
sub
mov
stc
add
mov
cwtl
mov
and
or
mov
pop
std
out
rolb
daa
mov
and
xchg
js
mov
gs
iret
lea
cmp
nop
fcompl
jmp
and
mov
add
out
femms
xchg
call
cwtl
fisubs
fldl
inc
add
or
leave
xchg
and
lods
pop
sbb
adc
out
mov
jae
loop
pop
iret
xor
mov
and
pop
sbb
gs
pop
std
xchg
out
lods
lods
cmpsl
dec
jo
int
fimuls
lods
out
les
sub
jge
sahf
fisubl
outsb
jle
bound
xchg
jo
lea
jl
cli
pop
mov
iret
out
fsubrp
out
out
sti
sahf
fnstsw
pop
dec
shl
inc
mov
in
cmp
mov
inc
jns
jge
insl
pop
push
cmp
fs
sub
fldcw
cmp
mov
stos
push
call
or
dec
out
sub
mov
push
ret
ljmp
xchg
andl
jecxz
daa
lret
push
outsb
dec
add
hlt
mov
leave
ret
sub
loopne
mov
inc
addr16
xor
push
scas
mov
aaa
mov
aas
or
mov
xor
or
inc
imul
or
add
or
dec
add
xor
jecxz
push
leave
ret
test
sub
shr
out
fucomp
mov
jo
mov
dec
popf
bound
cs
into
and
movsb
outsl
xor
xlat
insb
pop
sub
xchg
gs
add
dec
mov
mov
inc
push
and
and
push
cmp
addr16
mov
and
xchg
mov
xchg
fdivrl
lret
fisttpll
shr
ds
mov
call
mov
iret
mov
cmpsb
push
mov
dec
int
les
and
out
scas
stos
gs
fisubrs
pop
aaa
fs
dec
leave
pop
test
imul
mov
mov
movsl
pop
pop
and
pop
push
shl
or
mov
mov
add
dec
xor
xchg
mov
xchg
jno
int3
pop
leave
dec
cld
gs
mov
push
mov
sub
sub
adc
rorb
sbb
std
push
out
out
cmpsl
in
ror
enter
imul
lods
lods
bound
arpl
mov
out
das
add
dec
cmp
push
sbb
mov
mov
fldt
mov
sbb
sbb
pop
mov
mov
or
js
or
mov
fisubl
pop
sqrtps
fiadds
inc
int3
fisttps
cmpsl
arpl
daa
jno
push
subl
dec
fsubrl
or
sub
outsb
and
aad
int
dec
scas
or
pushf
cmp
add
int3
mov
mov
std
sbb
outsl
movsb
into
es
xor
fstpl
data16
push
jmp
cwtl
lods
and
popf
pop
mov
cltd
pop
jge
dec
mov
push
adc
test
popa
sbbl
call
sub
daa
jmp
jo
fnsave
ret
inc
mov
fwait
loop
jl
and
jge
jmp
dec
insl
or
scas
push
push
push
ds
cs
cmp
xor
rcl
inc
outsl
xlat
call
loop
sub
push
or
enter
sbb
enter
popf
imul
scas
arpl
xchg
mov
mov
orb
scas
rorb
je
adc
scas
rolb
inc
and
push
adc
cmc
test
push
sub
clc
bsf
rcr
push
cmp
bswap
bswap
push
shl
mov
dec
mov
cmp
inc
pushf
not
mov
shl
bt
movb
sub
lea
call
xor
jle
scas
enter
inc
inc
insb
xchg
lret
push
shll
mov
insb
jl
inc
in
pop
into
sbb
xchg
movsl
ja
lods
cmc
int
pop
adc
lods
addr16
or
and
sbb
loop
xor
jo
imul
jl
lcall
in
sti
inc
jmp
aaa
test
outsl
stos
mov
scas
and
repnz
sub
int3
inc
add
nop
fwait
add
loope
leave
scas
mull
out
pop
inc
cmc
or
icebp
jno
orl
std
dec
cs
sub
or
test
add
call
clc
bt
cmpb
pusha
lea
jle
pushf
pushf
lea
jne
bsf
not
test
mov
call
push
insl
sub
imul
push
mov
insl
adc
sbb
fbstp
mov
les
repz
aam
mov
add
lock
dec
nop
ljmp
push
cmc
imul
mov
sar
pop
bound
mov
sub
imul
mov
and
dec
outsl
push
mov
inc
lret
gs
push
iret
mov
inc
addr16
lock
ss
lcall
cmp
sub
not
ss
mov
aam
in
cmpsl
fists
mov
mov
leave
mov
in
insb
jno
fsubp
clc
and
scas
int
cwtl
bnd
stos
adc
lods
jmp
imul
xchg
mov
mov
lcall
lahf
or
mov
ja
and
jmp
iret
bound
rcl
scas
andl
mov
sbbb
lcall
in
or
jp
sti
cs
shl
lahf
sub
xchg
and
jle
mov
lret
scas
sub
stos
rcl
pop
add
outsl
pop
dec
mov
pop
subl
lea
jne
push
mov
jmp
les
jge
into
fchs
lods
pop
fisubs
pop
dec
and
jge
cs
cld
sub
mov
out
adc
addr16
cmpsl
insl
inc
push
mov
pop
test
subb
rorb
neg
cmp
cmc
clc
push
xor
cmp
pushf
cmp
neg
cld
movb
clc
pushw
popfw
jmp
test
sub
pushf
push
pusha
pushf
repnz
call
inc
adc
into
imul
enter
das
inc
jbe
into
mov
inc
arpl
jmp
ficompl
or
ret
nop
push
fldcw
arpl
aaa
inc
mov
or
inc
sar
dec
addr16
mov
jmp
bnd
enter
cs
mov
lea
pushf
pusha
lea
call
pusha
pushf
lea
jae
clc
sub
jmp
call
adc
sub
notb
aas
lahf
pop
cwtl
jae
jl
cmp
fcmovu
mov
and
push
std
mov
fldz
into
jo
cltd
insb
mov
outsb
pop
sub
std
jmp
sub
jo
lret
call
lcall
pop
imul
cmp
pushl
test
mov
pushf
lea
je
push
movl
pusha
add
stc
clc
call
pusha
xchg
pusha
dec
cmc
cmc
bt
shl
not
mov
push
lods
clc
cmc
bt
ror
mov
jmp
call
jno
pop
into
imul
pop
test
shl
cmp
fwait
sbb
or
lea
test
in
dec
and
shrl
add
xchg
mov
dec
repz
rcr
test
jg
testb
fisubrl
or
insl
jnp
hlt
cmp
in
jle
sbb
add
adc
out
jmp
sbb
dec
mul
mov
sbb
jmp
mov
test
and
hlt
outsb
lea
je
jmp
pushf
lea
ja
mov
inc
mov
jle
dec
setbe
inc
pushf
movb
cmc
xchg
bsr
mov
push
jmp
lea
pushf
bswap
pusha
mov
push
pushf
jmp
jmp
pop
mov
int
inc
mov
dec
bound
dec
imul
push
and
add
int3
add
fsubrs
insb
inc
out
in
or
adc
or
cmp
push
jg
test
fucomi
cmpsb
in
jne
adc
scas
push
loope
mov
sub
enter
in
mov
add
cmp
scas
clc
jb
popf
mov
jge
xchg
adc
lock
clc
dec
xchg
mov
rcrl
ja
pop
loopne
cld
push
mov
pop
int3
imul
popa
imul
jmp
dec
inc
mov
cmp
outsb
aam
mov
lods
ljmp
dec
out
jo
fs
cld
jg
and
andb
shr
xchg
jp
ss
addr16
in
cmpsl
pop
add
and
addl
xchg
outsl
lods
sub
sub
imul
lret
mov
mov
cld
sub
rol
jl
push
mov
lods
mov
lret
imul
int3
push
push
push
pop
insl
leave
lret
hlt
dec
adc
shll
and
lret
jmp
push
ljmp
rsm
test
lret
pop
xlat
flds
adc
push
out
imul
add
mov
pop
sub
enter
mov
dec
pop
mov
das
gs
mov
lea
jne
rcr
rcl
push
shrd
xor
cmp
pushl
mov
xor
or
neg
ror
add
cmp
mov
stc
pushf
cmp
pusha
test
movl
jmp
cmc
cmp
not
lea
cwtl
mov
push
mov
call
pushf
pushf
lea
ja
pusha
imul
bt
cmc
cmp
add
movl
push
pusha
pushf
lea
jmp
cmc
jmp
jp
fmulp
imul
mov
gs
stos
lret
lahf
xchg
inc
fwait
mov
mov
xchg
jp
pop
mov
hlt
int3
mov
pushl
es
sub
ss
test
and
mov
in
in
inc
and
add
adc
mov
aaa
sub
pop
sti
jne
mov
lea
pop
jle
mulb
cli
lods
xchg
cmpsb
xor
inc
out
pop
mov
fstl
ret
inc
pop
push
mov
sbb
cmpsl
stos
stos
addr16
cli
jle
bt
push
clc
sub
pusha
cmc
call
pusha
sub
pushl
jmp
sbb
add
imul
xchg
push
imul
sbb
push
aad
mov
pop
mov
idivl
out
ror
mov
ss
mov
gs
mov
movlps
pop
addb
daa
xor
ljmp
outsb
mov
movsb
mov
jb
lret
jae
test
or
cmp
lods
add
cmpsl
out
mov
push
cmp
ret
dec
fadd
stc
sarb
sbb
jbe
cmpsb
test
fsubl
sub
fs
into
pop
imul
push
cmp
add
test
cmc
call
fildl
xchg
cwtl
mov
sub
sub
xlat
pop
addr16
push
negl
jns
scas
enter
or
rcrl
je
jecxz
aam
add
adc
or
jne
cltd
or
lock
repnz
or
mov
xchg
iret
hlt
imul
repz
lahf
jle
repz
aad
popf
call
push
and
gs
test
ss
mov
cltd
jle
pop
xor
xor
lea
jae
xchg
mov
dec
setg
inc
pusha
setp
push
mov
lea
push
call
movb
inc
push
movb
lea
jmp
add
inc
gs
gs
push
jb
inc
popa
arpl
inc
outsb
je
jns
jmp
leave
jb
leave
imul
and
gs
jecxz
cs
mov
cltd
mov
inc
in
inc
lods
test
fdivr
mov
adc
inc
mov
jp,pn
lods
call
rcrl
stos
push
test
add
inc
addb
jo
repz
ret
leave
mov
es
dec
loopne
loopne
clc
cmpb
xchg
je
sbb
inc
jg
adc
push
mov
lret
xor
sti
dec
jns
out
push
int3
xor
enter
mov
mov
push
push
cmpsl
int3
cmpsb
stos
orb
and
xor
and
push
incb
dec
out
popf
pop
inc
dec
insl
cli
push
call
jae
in
sub
orl
sbb
sub
or
mov
xorl
or
icebp
int3
mov
out
call
fildll
hlt
cmp
mulb
lods
mov
add
shlb
sahf
aam
jmp
jb
push
fs
movsl
inc
imul
jae
mov
imul
xorl
and
sub
push
outsb
sub
mov
das
mov
fdivrl
cmpsl
pop
cmp
out
inc
jbe
ret
lahf
leave
mov
imulb
mov
iret
jo
or
cld
or
dec
dec
ja
sbb
xchg
pop
add
cs
jl
scas
and
call
mov
mov
sahf
fwait
loopne
sub
cmpl
loop
popa
sbb
lods
push
inc
adc
mov
add
inc
fs
jg
rorb
inc
mov
mov
sub
mov
fwait
and
int3
xchg
movl
enter
mov
push
loope
mov
ja
mov
sub
adc
sbb
adc
movsb
loopne
xor
sahf
jns
scas
inc
cs
lret
push
xlat
mov
or
adc
rcr
fucomp
adc
lea
mov
scas
sbb
jne
imul
aaa
xor
int3
enter
shr
loop
and
mov
iret
mov
or
sub
out
into
push
add
ret
ss
and
test
pushf
lahf
jo
mov
stos
jnp
inc
dec
fsubr
adc
pop
pop
jns
jb
push
or
xchg
push
stos
stos
jne
aas
jl
test
inc
adc
adc
add
jge
cld
lret
add
repz
pop
leave
pop
hlt
aad
push
mov
imul
adc
ljmp
scas
adc
mov
pushf
xor
cmp
mov
call
pop
cmp
push
rcll
mov
je
fdivs
iret
hlt
repnz
inc
dec
or
adc
dec
pop
fwait
sbb
xlat
xor
mov
push
jnp
lret
and
out
out
rorl
ds
imul
out
loope
in
mov
les
ss
cltd
movsb
mov
lds
push
push
adc
mov
jnp
in
int3
int
or
jo
shl
add
pop
jl
cltd
and
insb
push
popf
fmull
mov
push
mov
ja
mov
sbb
call
push
lea
je
pushf
jmp
movl
pushf
call
mov
movb
dec
jmp
or
mov
pushf
pushf
lea
je
push
cmc
sar
add
rcr
bts
cmc
sub
xchg
rcr
pushf
shr
lea
adc
mov
dec
add
rol
movsbw
add
sub
sub
mov
push
pushl
clc
shr
movw
cmp
push
pusha
mov
call
jmp
cld
mov
lea
out
das
pop
jns
loop
jp
dec
cmpb
pop
mov
mov
outsl
clc
xchg
cwtl
jge
fwait
repz
jge
sbb
es
loope
add
inc
xchg
sub
mov
sarl
test
adc
pop
pop
cmc
cwtl
push
push
push
mov
xor
dec
mov
lods
repnz
jb
nop
jb
aad
jae
fxtract
sbb
movsl
loop
fists
lcall
cli
test
pusha
mov
push
jmp
lea
ja
clc
imul
stc
pushf
lea
jo
cmp
add
push
lea
jmp
mov
inc
or
push
add
imul
pop
pop
rorb
or
fimull
addr16
cmpsl
mov
sbb
repz
dec
pop
jbe
incl
and
pop
jae
ret
mov
sbb
mov
adc
movsb
pop
sub
jecxz
bound
imul
push
lret
xor
repz
sub
repz
int3
cld
cmp
divb
cwtl
sub
sub
mov
test
jae
and
cmp
cli
in
mov
sbb
jns
mov
push
test
fcmovnb
leave
pop
push
adc
add
shll
mov
xchg
inc
or
int3
mov
or
and
out
loope
repz
imul
push
pop
push
mov
fucompp
dec
pop
mov
pcmpeqb
mov
out
rcr
cmp
mov
jns
addr16
mov
fwait
outsl
lahf
dec
fnstcw
hlt
sub
push
test
sbb
bound
xor
ja
inc
je
and
sub
mov
or
mov
imul
scas
push
push
loop
inc
ljmp
and
mov
iret
mov
add
cmp
dec
jo
lea
inc
adc
mov
std
cmp
shll
in
popa
jecxz
add
out
add
inc
and
inc
jp
fcmovnb
cs
scas
js
inc
xor
and
xchg
hlt
sub
dec
and
fwait
jle
mov
rcll
pop
jb
stos
mov
xchg
cli
iret
jae
jg
mov
or
push
lahf
push
xor
add
jg
int3
sar
add
mov
inc
xor
mov
push
mov
call
pushf
pusha
movl
pushf
pushl
lea
jmp
cmc
jmp
ret
jnp
ret
push
add
fcomip
inc
pop
lret
inc
aas
nop
inc
sahf
rorl
sub
dec
fldcw
xchg
stos
hlt
jge
cwtl
push
jns
adc
inc
sbbb
jp
das
stc
adc
mov
cmp
xor
unpcklps
repnz
add
and
aas
dec
jl
sahf
jbe
push
fnsave
inc
mov
pop
xor
clc
add
insb
mov
and
cmp
in
cmp
xchg
shrl
sbb
push
xchg
test
push
xchg
mov
stos
jnp
lahf
out
cmc
fsubl
cmpsl
xor
mov
das
add
jg
cmp
stos
push
or
adc
jg
in
sub
stc
and
setne
aas
test
nop
setbe
inc
mov
cld
mov
incl
mov
push
je
loopne
inc
or
and
out
hlt
gs
cmpsl
cmp
inc
dec
loope
mov
adc
pop
push
jge
loope
sub
xchg
imul
in
scas
lds
test
sbb
jmp
or
xadd
jnp
sub
add
in
push
sub
mov
inc
xor
inc
push
mov
loopne
fsubrl
dec
insb
in
mov
loope
xor
jg
push
push
mov
push
xchg
cld
jnp
xchg
dec
add
in
arpl
sub
inc
leave
pop
jp
dec
test
sub
adc
pop
push
aad
xchg
fidivrs
ja
pop
inc
ljmp
flds
inc
bound
rcrl
shl
addr16
stos
mov
add
pusha
pusha
push
push
lea
jmp
setle
lea
pushf
call
pushf
lea
je
cmp
stc
jmp
inc
inc
dec
xor
cs
insb
add
in
icebp
mov
push
data16
in
jmp
and
lret
in
stos
sub
xorl
and
mov
jnp
out
shll
popf
sub
xchg
lods
rol
nop
lahf
xchg
lcall
pop
cmp
cmp
iret
mov
add
cmp
push
adc
ret
decb
inc
call
mov
pop
cs
gs
inc
cmp
jmp
add
dec
push
xor
in
add
mov
add
inc
sbb
mov
mov
je
or
call
dec
das
mov
push
pop
pop
mov
shll
jge
mov
lods
shr
pop
dec
dec
arpl
pushf
pop
sub
push
loopne
pop
mov
pusha
notb
xor
add
fnstcw
arpl
mov
pop
rorl
fsubrl
mov
lods
outsl
das
dec
pop
loopne
prefetcht1
mov
mov
pusha
sahf
xorl
imull
subb
pop
movsl
inc
fistps
sub
sbb
mov
push
push
test
iret
popa
cmp
sbb
jbe
mov
iret
mov
jne
pop
daa
mov
push
fcoms
jo
xchg
fcmovbe
xor
arpl
push
sub
xchg
outsl
daa
ret
adc
mov
fsubr
adcl
dec
addr16
dec
jmp
es
imul
int
out
cs
or
adc
lret
sbb
ja
sub
sbb
pop
movsl
mov
jl
roll
nop
add
test
enter
sub
mov
jge
daa
nop
dec
pop
shll
js
cwtl
pushf
sub
inc
adc
aam
imul
ret
sub
aaa
lods
cmp
mov
xor
pop
loope
pop
jo
push
mov
or
pop
sbb
mov
and
mov
pop
enter
data16
enter
push
jb
xchg
int3
inc
lret
fistpll
inc
test
pop
dec
dec
and
add
pop
es
push
pop
jne
test
dec
xorb
inc
lods
and
in
push
add
or
into
ret
cmc
sbb
sbb
mov
scas
mov
sub
out
jb
repnz
lods
pop
test
mov
jle
and
das
add
outsl
cs
or
cmp
push
jmp
lret
pushf
pop
xor
sub
bound
add
in
lock
mov
mov
jle
fistpll
pop
icebp
cmpsl
mov
xchg
mov
sar
cmp
mov
movsl
jns
stos
cmp
leave
pop
lds
rcrb
mov
outsb
sub
insl
arpl
je
mov
jmp
push
call
insl
lods
adc
shlb
sbb
cwtl
call
mov
push
or
mov
inc
jae
movsl
mov
test
and
test
dec
fisttpl
adc
jnp
into
in
sub
rcll
dec
sahf
aaa
stos
shrl
sbb
aaa
int
push
addr16
sbbb
mov
lret
icebp
aad
and
adc
lcall
xchg
adc
xor
lea
js
mov
xlat
mov
sarl
dec
and
xor
sbb
inc
lods
andl
fdivp
or
pop
cltd
stos
mov
rclb
leave
xchg
imul
or
nop
or
out
gs
inc
popa
shlb
add
aam
jmp
and
dec
gs
rcll
cmp
cmp
cmp
rcrl
xor
and
or
jns
cltd
and
subb
jg
mov
adc
cmp
sti
ficoms
loope
and
jle
in
das
arpl
jmp
add
loope
pop
out
adc
mov
add
aas
out
pushf
stos
add
jnp
loope
and
incl
or
ror
daa
sub
xchg
cwtl
mov
dec
jbe
push
aad
mov
sbb
sbb
icebp
lahf
sti
jp
outsl
stc
insl
jp
jno
sub
sub
inc
pop
das
mov
jae
fnstenv
fidivs
mov
hlt
sbbl
ja
xor
or
sbb
testl
popa
jmp
repz
inc
adc
cmpsl
cmp
jbe
inc
stos
in
mov
js
test
push
adc
insb
jg
dec
roll
dec
mov
jecxz
xchg
ja
lret
aaa
sbb
shll
insl
mov
popa
push
testb
jecxz
in
jp
out
push
ja,pt
mov
xchg
mov
inc
in
add
add
add
cvtps2pi
add
add
adc
add
cmp
xor
add
add
or
add
add
add
pop
sub
add
add
add
add
add
subb
add
add
mov
add
add
add
add
pusha
xlat
xor
add
add
or
add
fdiv
sub
add
add
pop
dec
sub
add
add
dec
mov
add
add
add
scas
xor
inc
mov
xor
jbe
daa
add
xor
or
sub
add
add
test
cmp
pusha
pushl
lea
jae
pusha
lea
jmp
jmp
inc
lret
jmp
lcall
lds
mov
aad
mov
mov
push
xchg
lods
pop
dec
push
xchg
lret
div
out
dec
sub
aad
pop
inc
push
ss
adcl
imull
subl
aaa
leave
sti
xchg
incl
inc
mov
jl
push
xchg
or
mov
jp
jmp
xchg
inc
sub
mull
mov
jle
jbe
and
lcall
aaa
push
sarb
push
lods
or
call
bt
cmp
add
pusha
test
mov
jmp
cmp
jmp
call
adc
sub
inc
xor
ds
in
icebp
inc
cli
int3
int
jge
imul
repnz
xor
add
inc
mov
out
sub
fwait
xchg
imul
sbb
loop
inc
addr16
push
sar
sahf
cmp
xlat
mov
push
std
sahf
jl
mov
bsr
xor
andl
push
and
add
push
jns
sub
loope
sub
sbb
ljmp
subl
jae
lret
mov
test
cmp
jno
xlat
or
push
adc
enter
mov
inc
jecxz
adc
lock
test
xchg
sub
shrb
insl
sub
rorl
std
pusha
pop
imul
ret
mov
in
sbbb
mov
xchg
movsl
jno
jbe
lods
fucomp
add
sbb
out
in
inc
inc
cmp
add
fldenv
subb
cmp
rclb
mov
stc
cmpsl
test
jae
imul
jmp
hlt
dec
dec
outsl
mov
jl
les
rcrb
out
sub
imul
and
ret
mov
lcall
mov
and
xchg
and
daa
push
jae
sarl
pop
bound
xchg
stos
int
inc
addl
push
and
out
xor
dec
cmp
mov
sbb
cmpsl
mov
mov
sbb
xchg
lods
xchg
inc
push
dec
rcll
and
sar
push
add
test
fcmovb
xchg
pop
leave
mov
inc
or
cmp
loopne
and
jnp
in
inc
cmpps
aam
repz
xor
dec
movsl
js
sti
es
inc
ljmp
lods
inc
dec
adc
into
enter
dec
xor
int
mov
jne
loopne
popf
in
push
jno
movsb
cmc
arpl
push
xor
push
push
psubd
push
stos
sub
out
and
movsb
bound
mov
in
das
push
shl
and
pop
or
test
pop
pusha
rcr
mov
test
cmpb
pushf
mov
lea
jne
add
sub
ror
xor
dec
ror
mov
and
mov
dec
pusha
add
inc
pushl
mov
pushl
bt
bt
test
pushf
lea
je
pushf
pushf
lea
jmp
jb
pop
mov
inc
mov
or
and
mov
adc
in
lds
jne
jno
out
or
orb
xlat
subl
int3
xchg
cmp
cmc
cmp
sub
jns
outsb
bound
repz
cmp
xchg
and
arpl
mov
inc
outsl
xor
mov
push
sarb
dec
push
pop
jge
jo
add
ja
insb
ss
test
sbb
mov
outsl
push
dec
fsub
js
xor
mov
inc
xchg
dec
xchg
mov
sbb
sub
or
or
inc
out
hlt
testl
fwait
repz
sbb
movsbl
add
and
rclb
inc
mov
sahf
out
cmc
inc
mov
xchg
nop
movsb
mov
lcall
dec
sub
push
jmp
jb
xlat
cmpsb
mov
mov
insb
lods
loope
stos
out
pop
xchg
stos
mov
icebp
push
push
mov
jnp
xchg
mov
fs
jnp
test
call
mov
shl
neg
mov
ror
mov
mov
repnz
mov
pusha
pushl
lea
jne
setl
sets
call
bt
cmpb
pushf
call
fistpl
xorb
sbb
jle
lock
xor
or
xlat
bound
dec
movsb
shr
test
mov
xchg
jle
dec
sbb
cmp
jae
pop
insb
scas
dec
mov
mov
movsl
rcll
mov
rorl
xchg
pop
sub
scas
outsl
jge
cmpsl
xchg
imul
push
nop
ret
leave
stc
in
mov
dec
xor
sub
lret
lea
jb
push
pushf
mov
pushl
ret
pushf
jmp
jmp
clc
test
pusha
clc
cmp
pusha
jmp
test
mov
inc
out
push
push
push
xchg
fdiv
cli
xor
mov
lcall
mov
cmpsl
dec
mov
iret
xchg
pop
sti
incl
mov
lods
adc
cmp
cmp
adc
les
decl
mov
and
jl
xchg
outsl
push
aad
lret
outsb
lods
scas
mov
mov
in
pop
or
push
lods
mov
loop
out
cmp
mov
icebp
and
fadds
clc
cwtl
jp
adc
test
and
pop
push
lea
pop
sub
popf
push
lea
call
pusha
movb
pusha
pushf
lea
jmp
push
push
mov
inc
cmpsl
iret
and
cmp
sar
inc
gs
das
pop
sbb
dec
xor
inc
mov
mov
mov
adc
imul
inc
iret
call
mov
or
call
nop
cmp
mov
test
movsl
fwait
push
mov
xchg
adc
movl
xor
rcr
lret
mov
pop
ss
lret
xor
push
xchg
or
dec
sahf
sbb
seto
movsbw
pop
movzbl
mov
lea
lea
pushf
call
pusha
lea
je
call
lea
jne
jmp
sbb
mov
inc
sub
cmp
jg
mov
mov
lret
lea
pop
data16
lock
push
lock
shlb
fbld
add
fistps
dec
inc
lret
adc
adc
popa
pop
ret
fprem1
pushf
pop
lds
icebp
mov
push
lahf
negl
add
lcall
lods
cmc
int3
aaa
xchg
out
sahf
jne
jo
shrb
fstl
xor
roll
sub
fwait
loope
cmp
mov
movsb
mov
mov
int3
mov
mov
sbb
das
inc
jnp,pt
int3
cli
sub
xchg
test
scas
leave
dec
cmp
lds
lods
mov
mov
out
dec
xchg
or
and
add
dec
movsl
cmp
mov
push
mov
loop
repnz
xor
cmp
sti
jle
das
xchg
pop
mov
loop
mov
lahf
lret
fiaddl
fsubrs
hlt
xor
adc
xor
mov
inc
loope
gs
mov
jb
jo
int3
aaa
repnz
pop
inc
lretw
lods
or
push
cld
faddp
int
sub
xchg
fdivrs
push
push
loop
mov
movsl
fsubrp
bound
popa
inc
ljmp
xchg
pop
ljmp
pop
xchg
js
cmpsl
lea
xchg
lods
ja
or
cmp
fists
inc
xchg
xor
lock
add
repz
pop
xor
jmp
xor
xchg
adc
add
popf
xchg
fsqrt
cld
add
fwait
movsb
loope
fildl
and
enter
mov
xorl
add
adc
cmp
mov
std
test
pop
jb
adc
or
mov
jge
add
in
cmp
pop
xchg
cli
unpcklps
ljmp
sub
in
cmc
xchg
push
mov
lock
hlt
push
fdivrl
mov
movsb
loope
clc
pop
insb
movsb
and
popa
cmpb
or
push
pop
pop
jno
xor
fdivr
cmp
push
sbb
scas
imul
mov
std
push
sub
lds
inc
jmp
jecxz,pt
mov
sbb
lea
data16
dec
outsl
push
jge
daa
cmp
xchg
shl
paddq
dec
adc
aam
cmc
adc
mov
pop
mov
pop
xorl
or
mov
mov
scas
mov
dec
imul
cmp
xor
xchg
jle
jmp
imul
add
pop
je
mov
cmp
cmpsb
imul
dec
test
jo
fnsave
dec
out
cmp
mov
or
sub
mov
enter
xor
sub
sbb
xchg
jns
rcrl
mov
cmc
and
xor
xor
sub
lods
insb
fidivs
xor
ds
mov
ds
add
stos
xchg
and
les
push
jp
lods
hlt
mov
in
cld
jecxz
movsl
add
pusha
imul
mov
loop
cmpl
mov
neg
shr
xor
add
pusha
pusha
mov
push
pushf
push
mov
setl
jmp
mov
pushf
push
pushl
ret
mov
pusha
scas
imul
jmp
jno
mov
in
test
daa
xor
hlt
fisttpll
jo
xor
mov
push
mov
outsw
scas
lret
push
xor
into
adc
cmp
dec
sbbl
cmc
adc
xor
stc
xchg
add
lret
pop
nop
in
mov
jle
jge
or
xchg
xlat
add
cmp
push
roll
fcompl
and
sbb
jg
andl
movsl
stos
stos
adc
icebp
lods
imul
in
cmp
jns
xchg
lcall
clc
cli
xchg
mov
fadds
push
orb
adc
add
mov
lret
jge
push
push
std
and
bt
cmp
cld
fsubrs
push
mov
gs
adc
dec
insl
out
enter
mov
and
pusha
ss
and
pop
cmp
stos
stos
ljmp
mov
mov
pusha
pushf
call
ljmp
mov
or
push
mov
and
test
out
aas
dec
sbb
call
jae
lock
mov
jecxz
sub
push
jp
pushf
shl
mov
cwtl
stos
dec
movsl
aad
rcr
aas
mov
lock
faddp
loopne
push
stos
ja
test
sub
popl
mov
mov
pop
int3
mov
xlat
addb
test
xchg
add
xchg
ret
lds
or
data16
adc
xor
in
mov
lods
imul
hlt
add
outsl
test
cli
mov
cmp
jno
jo
test
mov
ljmp
or
sub
dec
cmp
pop
pop
and
movsl
xlat
adcb
inc
test
lcall
es
xchg
pusha
ds
cs
jmp
inc
mov
xlat
cmpsl
pushw
test
adc
lds
sub
rclb
mov
fisttpl
push
push
imul
test
addr16
sub
inc
sub
and
addb
pop
in
adc
in
adc
add
test
push
jae
push
fwait
jns
mov
fisttpl
mov
sbbb
sbb
xor
push
mov
cmp
mov
cld
mov
xchg
bswap
movl
lahf
pop
setnp
lea
mov
push
movl
jmp
lods
inc
cmpsb
stos
imul
sub
mov
fiaddl
cmp
inc
add
out
or
push
stos
lods
int3
int3
pop
cs
fldenv
test
lods
bnd
adc
xchg
imul
and
inc
jl
mov
inc
imul
mov
imul
loop
sbb
mov
sub
imul
pop
outsl
insb
test
xor
pop
ja
sbb
sbbb
jl
cli
gs
lods
add
test
push
dec
test
mov
push
test
sbb
leave
and
cli
inc
pusha
fsubr
loopne
data16
pop
gs
arpl
outsb
push
jbe
and
cmp
ja
mov
data16
xchg
ss
movsl
out
add
jns
and
jmp
mov
nop
aam
sub
adc
inc
jecxz
dec
xchg
mov
pop
pop
je
stos
ret
arpl
push
inc
mov
mov
iret
arpl
inc
inc
stc
dec
stos
jb
subb
nop
cmp
mov
aaa
add
pop
cld
stc
xor
pop
lock
ljmp
sbb
mov
mov
std
in
sbb
aaa
mov
outsl
imul
dec
push
lea
fs
mov
mul
cmp
xchg
jmp
mov
and
push
add
out
jmp
pusha
jnp
in
push
push
push
or
jns
mov
dec
or
shr
inc
lea
pushf
jmp
push
not
movzbw
movzbl
lea
movb
lea
jb
pusha
mov
movl
mov
pusha
mov
movb
movw
pushf
pushl
ret
not
sub
movsbw
inc
shr
lea
add
cmp
call
int3
popa
xchg
pushf
movsl
movsl
mov
push
addr16
xor
cmpsb
xchg
push
or
pusha
cs
shr
add
or
sahf
inc
lcall
and
push
and
sub
xor
mov
adc
push
stc
movsb
pop
stos
mov
out
push
arpl
arpl
stos
test
cmp
sbb
cmp
pusha
hlt
loopne
sub
in
sahf
pop
icebp
mov
dec
fnstsw
fwait
mov
sub
cmp
ljmp
cli
cli
pop
pop
and
add
fs
or
adcl
xor
addr16
sub
dec
outsl
test
xchg
xor
movsl
je
addr16
fmuls
cltd
dec
jns
es
or
lahf
pushf
xor
and
pop
add
push
sahf
lcall
mov
pop
xchg
push
or
push
cld
ret
popa
stos
add
push
push
jl
mov
in
repnz
and
jmp
test
jecxz
mov
adcb
mov
jbe
ret
pop
addr16
mov
jge
push
fbstp
test
mov
inc
in
xchg
out
fdivrs
out
aaa
cli
or
xchg
ret
pop
cs
add
add
mov
lods
lods
pop
sub
jnp
lahf
test
jecxz
jo
or
jae
jl
sub
popf
jae
mov
xor
out
sarb
sbb
jnp
jecxz
fidivrl
push
mov
out
push
push
push
jb
insb
push
cmp
jmp
mov
push
and
cwtl
adc
mov
dec
mov
push
jge
int3
out
xor
pop
jnp
popf
mov
jnp
popf
jns
fidivrl
xchg
dec
sahf
pushf
inc
cli
jnp
imul
add
push
cld
outsl
jl
jmp
sti
jae
idivl
jo
repz
add
push
cmp
and
lahf
sbb
mov
xchg
popl
das
lcall
in
fucomi
mov
stos
jl
les
pop
cwtl
jle
insl
notb
addb
int
push
jb
mov
or
mov
xlat
repnz
sbb
nop
mov
cld
in
cmpsb
imul
shl
sub
mov
lds
in
cmpsl
outsb
mov
out
fstpt
lods
lahf
clc
clc
sbb
sbb
inc
mov
bound
inc
pushw
inc
sub
add
enter
mov
ficomps
jl
test
pop
fsubr
and
sub
data16
imul
aam
out
push
xchg
shrl
push
ja
inc
lock
cmp
lret
sbb
mov
fiaddl
aam
pop
outsb
movsl
scas
mov
mov
int3
cmp
adc
push
std
sbb
xchg
lea
and
and
sub
pusha
sub
outsb
mov
cmp
data16
add
in
divb
insb
mov
dec
and
xchg
xchg
xor
jmp
or
jbe
mov
xor
sub
out
icebp
jne
push
push
pushf
lea
jbe
inc
jmp
push
es
inc
adc
xor
mov
lcall
jp
movsl
scas
rolb
mov
mov
dec
pusha
mov
shl
outsl
out
ficomps
andl
dec
mov
xchg
in
insb
mov
cmp
push
pop
fdivl
adc
shll
inc
mov
fidivrl
fs
scas
lds
loope
loop
adc
aas
pop
out
sub
je
push
inc
cmc
dec
and
ljmp
imul
jl
inc
pop
inc
nop
aad
clc
and
imul
and
iret
pop
adc
push
push
loop
popf
jne
cmp
xor
pxor
test
stos
mov
mov
mov
jns
ret
mov
or
loop
orb
arpl
sbb
mov
sub
push
out
mov
mov
dec
sub
faddp
enter
int3
int
push
xor
xchg
mov
jmp
add
fs
jo
adc
xor
in
sbb
mov
inc
out
push
repnz
inc
rcll
mov
xchg
push
ljmp
or
cmp
jnp
xchg
jl
dec
jns
aas
cmp
mov
dec
and
movsb
and
inc
loop
xor
int
in
push
adc
daa
cltd
pop
xor
popf
fnstsw
mov
pop
mov
js
push
into
or
and
pop
sbb
call
pop
mov
mov
mov
out
xchg
inc
out
pop
leave
sarb
pusha
pusha
repnz
push
lea
jne
shl
not
adc
mov
bt
sub
inc
mov
cmp
sub
clc
stc
test
pushf
pushl
popl
stc
clc
cmc
cmp
jmp
rcll
in
sub
xchg
xchg
mov
cltd
jmp
and
aas
sub
dec
shrl
ljmp
mov
mov
push
insb
cwtl
sar
cmp
mov
add
jbe
fwait
std
mov
xor
inc
pop
or
in
cmp
shll
cmp
sub
pop
loope
mov
sahf
fnstenv
xchg
and
dec
outsl
mov
mov
pop
filds
ret
popa
cmp
ljmp
pop
ja
and
aaa
dec
pop
sti
jge
daa
fnsave
shl
lds
sbb
insl
dec
push
xor
xor
shl
adc
cmp
scas
sub
adcb
movl
jmp
push
mov
cmpsl
lret
in
dec
bound
sub
jg
fs
dec
jb
das
jecxz
push
rcrb
insl
jp
jecxz
adc
cli
push
daa
js
ret
xor
stos
jnp
test
inc
xchg
xchg
sbb
jae
xor
lea
push
iret
sarl
cltd
inc
mov
xor
call
sbb
jg
daa
subb
fidivrs
jne
popf
push
imul
jmp
std
cmp
mov
cli
push
push
push
push
mov
or
mov
jae
loop
sbb
orl
aas
pusha
pop
js
aad
rclb
mov
or
inc
push
and
fdivr
ret
jl
shlb
data16
icebp
and
cmp
jno
mov
je
xor
or
xor
mov
lock
mov
stc
fidivs
xor
inc
xlat
mov
inc
mov
pop
cmp
fcmovnb
jbe
insb
cld
sbb
mov
scas
jl
or
ret
lret
push
cmp
loop
cmp
mov
stos
int3
loope,pt
and
arpl
adc
cbtw
movsl
mov
push
sub
popf
dec
xor
mov
mov
xchg
repnz
sbbl
je
xor
add
pop
jb
jl
dec
nop
push
cld
xchg
shr
pop
cmp
push
xorl
rcr
rorl
iret
add
fwait
andb
cmpsb
ficoms
sarb
imul
and
jbe
loopne
sub
es
xor
sub
pop
test
xchg
scas
in
je
cmpl
mov
xchg
pusha
mov
xor
out
dec
and
sub
push
pusha
std
iret
dec
adc
rolb
cmp
sub
insb
xchg
ljmp
sbbl
inc
leave
imul
cmp
xchg
sub
mov
outsl
jl
add
dec
mov
mov
mov
sub
outsl
mov
and
sarl
inc
lock
stos
or
jo
xor
xchg
lahf
sub
xor
pop
cmp
mov
int3
mov
xlat
imul
outsl
lods
adc
xchg
adc
out
sub
mov
sbb
lods
jne
fmull
int
sub
jo
xchg
add
iret
movl
mov
cmp
jb
movsl
mov
jg
clc
sub
adcb
mov
xchg
imulb
mov
xchg
lods
or
cwtl
add
xor
adc
and
lret
or
push
lahf
lahf
jle
and
ljmp
xchg
es
les
in
or
jp
xchg
lret
andl
add
mov
cld
aam
imul
push
out
testl
addb
sub
aam
lock
shlb
mov
test
call
orl
dec
mov
sti
sbb
sub
xor
sbb
test
cmp
dec
mov
aaa
pop
jns
push
vmwrite
ja
dec
sbb
fcomps
gs
adc
imul
jno
dec
inc
mov
out
aaa
pop
pop
std
loop
daa
jge
arpl
ror
add
dec
xor
lock
mov
jecxz
pop
stos
out
xchg
push
mov
faddp
popa
cld
mov
push
xchg
sub
sbb
cmpsl
jg
test
mov
xor
mov
dec
push
xchg
dec
into
lahf
nop
jno
sahf
repz
lods
jae
pop
xor
data16
ja
mov
movsb
mov
inc
dec
pcmpeqb
lods
cmp
rcl
xchg
push
xor
aas
icebp
leave
mov
xchg
adc
pop
enter
addb
xchg
cwtl
or
out
sti
xchg
pushl
push
lahf
imul
aaa
pop
mov
inc
enter
mov
adc
xabort
pop
cmp
out
adc
sbb
negb
bound
stos
sbb
pop
retw
cmc
ja
ds
je
pop
or
push
lds
and
inc
pop
scas
mov
mov
pop
xchg
ss
push
data16
sub
stc
lahf
popf
imul
xor
add
repz
outsb
jb
call
fistpll
addb
sub
mov
xchg
inc
cmp
pop
mov
mov
mov
test
and
lods
sub
adc
enter
aad
sahf
inc
out
je
mov
fdivrs
shrl
sbb
aaa
jp
in
icebp
adc
mov
hlt
jae
dec
dec
leave
fs
popf
imul
or
push
bound
loope
gs
pop
pop
sbb
sbb
addr16
loop
fdivr
adc
adcl
inc
inc
jl
les
bound
pop
out
sub
mov
mov
popa
xchg
lret
push
scas
aaa
sbb
inc
push
jno
fildll
jg
and
ljmp
maskmovq
testl
jmp
out
add
xchg
xor
nop
pop
les
inc
add
inc
and
add
jae
popf
fmull
sub
pusha
xchg
pushf
mov
xchg
out
int
pop
pop
pop
or
inc
test
mov
push
cltd
mov
mov
bound
inc
xor
adc
mov
int3
shlb
and
jne
pop
jo
das
push
ja
cmp
filds
fwait
testl
add
xor
inc
fldl
pop
out
repz
sub
pop
test
cmp
shll
pop
in
xor
jb
xchg
jno
rclb
mov
xchg
and
dec
push
push
mov
xchg
mov
jno
dec
dec
ret
inc
dec
dec
inc
push
dec
xor
cs
insb
add
sub
mov
cmp
repnz
call
bt
add
stc
or
pushf
call
rcll
test
xor
and
push
test
mov
leave
cmp
pusha
ret
gs
adcb
loop
inc
popf
clc
sub
out
fldl
jns
in
in
sti
stc
leave
push
out
mov
mulb
imulb
xchg
leave
mov
out
stos
rorl
in
mov
or
lds
push
xor
aam
cmp
cmc
and
and
xlat
mov
daa
xchg
gs
inc
int3
call
out
xor
mov
clc
cmp
jns
pushf
shlb
scas
aad
stos
out
mov
push
pop
mov
loop
dec
popa
sbb
shrb
jl
mov
xor
and
xchg
mov
pop
mov
and
xchg
js
adcb
scas
cltd
sub
and
cmp
jle
fmull
int
addr16
outsl
adcl
aad
sub
and
mov
push
outsl
pushf
mov
out
jle
adc
mov
loop
jmp
call
adc
inc
cli
xchg
ret
pop
dec
push
mov
xor
inc
sarb
jnp
mov
push
jae
pusha
out
in
inc
je
imul
jg
mov
xchg
dec
fcomi
mov
cmp
inc
push
mov
stos
int
cmpsb
or
jo
aad
dec
mov
cmp
out
mov
xchg
stos
push
jns
js
inc
push
insb
stc
jg
ss
push
or
stos
das
in
dec
push
cs
lock
aad
pop
fwait
loopne
divl
data16
cmp
push
mov
pop
nop
lcall
add
inc
lcallw
sbb
sahf
mov
or
cmp
out
or
dec
cmpsb
fwait
into
mov
mov
push
fwait
mov
ss
out
insl
mov
adc
mov
sarl
notb
aaa
xor
jae
rcrb
fwait
subb
aas
adcl
xchg
enter
lcall
jne
and
lahf
mov
pop
xchg
lret
inc
inc
push
test
mov
movb
pushl
push
adc
sbb
mov
adc
into
iret
mov
adc
sub
dec
outsl
movsl
lret
aaa
jl
stos
loop
gs
jmp
inc
clc
sbb
push
setp
jmp
or
jnp
repz
or
pop
jae
test
cmp
jnp
pop
jge
insb
int
xchg
mov
sbb
fwait
jg
xchg
fadd
popf
jl
stos
insb
sub
pop
aam
shll
jae
movsl
adc
sbb
jmp
testl
sti
stc
loopne
loop
inc
cmp
repnz
lahf
mov
imul
dec
pop
popf
fisttpll
or
jo
jne
pop
js
jbe
xchg
push
jp
jae
push
mov
in
mov
jp
and
mov
adc
and
add
mov
stc
cmp
adc
add
add
jb
aad
std
jge
stc
nop
mov
jns
and
mov
out
or
mov
imul
dec
xchg
fwait
push
stos
mov
mov
aad
aas
test
mov
pop
cmpsl
add
sub
cmpsb
stos
dec
mov
scas
stc
xchg
jns
cmp
outsl
inc
arpl
loope
dec
pop
loop
in
lret
dec
out
adc
mov
jl
les
xchg
mov
sub
jnp
loopne
or
cmp
add
jle
xchg
inc
cmp
lock
popf
sub
popf
sbb
mov
and
or
add
sahf
stos
scas
fcmovu
fistl
sub
or
inc
push
cwtl
imul
out
and
mov
mov
lret
sbb
lret
enter
xchg
test
sbb
in
pop
dec
mov
jmp
adc
fs
dec
add
fs
call
jmp
arpl
fisubrs
push
scas
cmp
out
xor
sbb
loop
and
sbb
jns
or
popa
fdivrl
xchg
fisubl
mov
cmp
and
mov
jg
fsub
loop
outsb
push
je
pop
jne
xor
mov
push
mov
movl
pushl
ret
ret
or
xchg
imul
out
sbb
je
hlt
jne
adc
xlat
jns
imul
shl
cmpsl
enter
and
mov
xor
ret
push
mov
cmpb
test
addb
fdivl
sub
xchg
jp
or
xchg
aam
negb
sahf
insl
fiadds
hlt
fwait
cmp
pop
aas
mov
stc
fistpl
add
xchg
mov
movsl
and
adc
inc
and
lea
jne
xchg
bt
movzbw
bsf
mov
bswap
sub
bt
mov
cmp
clc
sub
jmp
xorl
and
xorl
mov
jmp
mov
movsb
cmp
adc
mov
or
je
addr16
pusha
bound
sub
loopne
inc
cld
daa
jno
and
test
mov
mov
push
jge
ds
lods
mov
mov
dec
shl
mov
cmpsb
aam
sahf
mov
mov
fwait
stos
js
sub
clc
icebp
daa
xor
outsl
jl
scas
lods
mov
push
and
and
dec
inc
xchg
jle
movl
push
lea
jmp
cmp
or
dec
insb
sahf
lcall
roll
jl
push
inc
fcom
mov
cwtl
pop
cmp
mov
cmp
mov
arpl
movsl
mov
sub
ds
test
js
fnstsw
movsb
out
xchg
push
mov
xchg
push
mov
sar
jae
ja
fistpl
sub
fwait
mov
xchg
scas
loope
add
in
mov
lea
jbe
xor
clc
sub
stc
mov
sar
jmp
fnstenv
xchg
imul
idivb
mov
pop
jae
push
and
or
ret
scas
jg
pop
gs
movsb
ljmp
or
xor
stc
push
mov
test
and
in
incb
lea
mov
inc
xor
jb
test
cmp
xchg
in
sahf
pop
into
stos
pop
int3
dec
push
mov
xor
orb
rcl
push
cs
or
jno
jnp
cmp
push
gs
push
push
inc
push
xor
cs
insb
add
add
cmp
mov
bound
xor
pop
fxch
test
aaa
jb
data16
aas
into
xor
dec
sub
adc
sbb
ret
jmp
push
dec
cmp
rclb
cld
or
xor
xor
nop
mov
push
pop
mov
clc
adc
xor
xor
xor
imul
mov
or
leave
xor
les
dec
xor
pop
cmp
mov
jb
mov
or
inc
adc
bt
pushf
jmp
sbb
bound
fcompl
dec
xchg
cltd
add
imul
stc
sbb
or
mov
and
call
popa
jns
lock
inc
imul
loope
mov
pop
push
lock
sub
repz
inc
xchg
out
push
mov
push
dec
fs
or
jmp
imul
dec
gs
movl
push
movl
movb
pushf
pushf
push
lea
jmp
xchg
stc
aad
imul
mov
and
and
adc
mov
jnp
iret
mov
or
dec
xor
jno
test
add
xchg
int3
loope
mull
xchg
clc
push
int3
ret
popf
rorb
xor
aaa
xchg
cmp
push
and
sbb
and
dec
sub
push
aas
pop
mov
lods
daa
shlb
or
jne
enter
pop
adc
rcl
movsb
push
sub
int
fs
xor
scas
push
rcl
pusha
xor
fbld
sub
or
lret
jb
ficoml
cmp
test
mov
dec
xchg
pushf
push
pushf
add
pusha
mov
cmp
push
call
pop
xchg
cmp
adc
jbe
mov
in
dec
dec
xchg
sahf
mov
lea
pop
add
mov
xchg
aam
inc
popf
enter
jne
loope
sub
jmp
mov
adc
mov
dec
call
xor
rclb
aad
cmp
je
rcll
push
inc
push
dec
out
add
enter
test
addr16
mov
xor
call
insb
gs
aad
sbb
sub
xor
cmp
pusha
lea
ja
pushf
pusha
pusha
pushf
lea
jmp
pushf
cmp
jmp
sbb
mov
jp
jmp
cmc
add
fs
push
into
lds
mov
jnp
into
fdivp
pop
add
mov
popf
lahf
arpl
dec
xchg
sbb
jmp
ret
test
and
daa
xchg
mov
adc
jae
fs
push
jne
sub
adc
cmp
out
aaa
cmpsb
jb
push
lcall
push
cmpsb
inc
lcall
mov
int3
adc
and
mov
xchg
push
mov
lea
ja
pusha
jmp
lret
xchg
imul
lret
and
jne
into
jne
jo
call
outsb
jbe
dec
mov
icebp
lock
cli
mov
jnp
dec
push
mov
mov
out
arpl
xchg
inc
sub
aas
and
xchg
add
loop
pop
mov
cmp
lahf
in
xor
inc
fisttpll
out
push
inc
xchg
imul
scas
roll
push
jae
jge
out
mov
loopne
in
pop
jb
addr16
fildll
jp
mov
sbb
cmpsb
inc
sbb
add
stc
roll
shll
loop
and
mov
lcall
pop
mov
sub
jb
std
lods
rol
lea
add
cmc
dec
jg
pop
lods
and
sti
pop
jnp
push
pop
sbb
sub
aam
aaa
pop
push
inc
lret
pushf
mov
add
cmp
scas
stos
call
dec
sbb
in
je
xchg
push
daa
daa
es
imul
xlat
push
and
mov
and
ljmp
pop
sarb
das
or
lods
xlat
aam
adc
fsts
mov
sbb
mov
mov
jnp
sbb
ss
mov
ds
or
mov
out
pop
mov
cmp
and
jae
mov
ljmp
or
fidivs
and
not
movb
lahf
mov
mov
movzbw
lea
lea
push
movl
jmp
outsb
cmp
insb
mov
out
sub
mov
xchg
lds
jnp
fwait
in
and
or
aam
push
popa
dec
pusha
mov
sbb
fmul
push
mov
sarl
add
and
mov
xor
cmp
dec
mov
inc
xchg
jge
dec
sub
jecxz
inc
dec
lods
mov
into
dec
jns
sub
bnd
inc
insl
ficomps
inc
mov
and
iret
push
out
out
cmp
test
out
mov
mov
leave
loope
pop
pop
lods
mov
mov
frstor
and
cli
bound
lods
lock
mov
jecxz
stos
sbb
popa
xor
xchg
dec
mov
sbb
mov
psubd
xchg
in
ljmp
ret
mov
imul
rcr
inc
shlb
shlb
and
andb
das
mov
cmp
hlt
imul
sbb
imul
push
push
movb
pushl
ret
lods
mov
vpshaq
or
push
or
aas
dec
xchg
jae
cltd
imul
xor
mov
xchg
les
adc
xor
inc
pop
mov
dec
inc
jae
sub
leave
popa
sbb
push
add
leave
mov
into
jae
stos
inc
lret
pop
push
inc
out
into
mov
imull
jmp
cmp
mov
in
cmp
pop
out
pop
push
xchg
cmpsl
adc
ss
push
adc
sarl
lds
pop
and
xor
in
fnstenv
adc
inc
inc
push
js
sbb
movb
insl
sub
push
xor
roll
xchg
and
cwtl
ja
nop
jg
jge
gs
fistl
push
jge
hlt
mulb
lods
adc
jge
sti
test
or
and
adc
lds
sub
cmpsl
mov
fimull
imull
aaa
repnz
sti
xchg
or
test
lds
mov
in
mov
movb
and
jmp
pop
into
mov
push
loop
scas
into
or
shrl
repz
adcl
add
pusha
not
push
push
jmp
pusha
lea
jne
sbb
mov
clc
jmp
stc
add
test
cmc
cmc
not
pushl
jmp
and
jb
imul
push
subb
adc
jle
ja
jae
fstpl
sti
cmpsb
pop
mov
and
aad
sbb
or
popa
jge
inc
sbb
subl
and
xlat
sbb
xchg
push
push
imul
adc
in
dec
jge
ja
inc
mov
push
ljmp
mov
dec
cs
adc
sahf
test
xchg
sbb
xchg
jmp
jns
add
out
and
pop
add
cmp
sbb
inc
imul
jmp
dec
mov
hlt
bound
mov
or
push
jp
mov
ficompl
pop
dec
fwait
cmpsl
adcl
or
mov
sti
add
movsb
sbb
les
ss
testl
jg
insl
pop
aas
pop
pop
pop
jae
add
pop
lds
sub
lods
arpl
or
pop
jmp
fs
pop
mov
cmp
testb
sbb
pop
mov
nop
insl
cmp
ss
mov
dec
jnp
int3
loope
xchg
push
inc
mov
imul
out
and
mov
sbb
pop
xchg
or
ja
adc
outsb
and
test
cmp
jmp
ljmp
mov
cmpsl
jp
adc
enter
pop
mov
out
pop
fimull
leave
push
call
mov
xchg
sub
push
sub
cmp
xlat
dec
rcll
pop
insb
testb
push
std
jl
or
int3
out
jmp
mov
jge
mov
test
xlat
push
cld
xlat
mov
pslld
hlt
sub
jge
test
or
bound
aas
cmp
lea
push
pusha
call
xor
imul
sbb
mov
stos
in
adc
repnz
mov
adc
ds
int
les
imul
ds
mov
call
cli
sbb
push
mov
add
sarl
jmp
push
and
inc
pushf
imul
pop
mov
fisttps
ficomps
pop
jb
jecxz
pop
test
stos
mov
cmpsb
dec
cltd
mov
cmp
mov
jecxz
sub
xchg
les
fs
outsl
mov
sbb
add
and
mov
fisttpll
push
sub
js
adc
enter
jmp
cmpsb
jne
dec
inc
pop
test
clc
lret
push
xor
fistpll
pop
push
ds
ftst
push
fistpll
mov
push
loopne
je
mov
adc
cmp
cmp
push
arpl
outsb
iret
mov
sbb
jb
sbb
in
add
dec
addl
xchg
inc
and
sbb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
adc
hlt
cs
mov
test
lea
stc
push
add
and
lds
loop
in
pop
xor
sbb
pop
push
dec
pop
dec
mov
and
xchg
xchg
pop
mov
icebp
or
stos
push
cmp
repnz
xchg
mov
xor
lret
and
adc
inc
js
je
jb
arpl
jae
ljmp
pop
xchg
cwtl
and
pop
add
loopne
aas
jle
push
adc
lods
adc
add
pop
dec
insb
andl
cmp
test
dec
mov
fstpl
and
out
xor
and
lock
movsb
das
dec
adc
mov
or
gs
test
enter
xor
fsubl
adc
mov
push
jg
fcoml
out
aad
fmulp
dec
pop
iret
ljmp
or
xorl
out
bswap
lahf
mov
aaa
repz
inc
or
je
dec
sub
fucomi
or
push
push
xchg
ret
jmp
sahf
and
jecxz
cmpsb
ds
push
insb
jmp
mov
orb
out
xor
lret
int3
imull
sub
pop
cmc
sub
mov
fcmovu
fwait
mov
push
mov
repz
xchg
mov
sub
inc
in
dec
xor
int3
add
and
fpatan
outsb
push
dec
inc
imul
repz
mov
sbb
mov
add
sbb
inc
lcall
xlat
jne
lret
test
ret
inc
js
or
subb
xor
jl
rcl
add
or
lcall
mov
jl
mov
sahf
sub
mov
stc
aad
lret
shlb
inc
test
lahf
call
int
lock
sub
out
js
dec
icebp
dec
cmp
mov
xchg
div
aas
inc
popa
bound
xchg
inc
aaa
xchg
int3
or
enter
mov
setne
mov
push
pushf
bt
test
call
shlb
mov
inc
xchg
shr
xor
jno
lods
hlt
cli
or
push
sahf
mov
in
cmp
dec
mov
lea
cmp
lret
xor
stos
adc
xlat
sbb
xchg
adc
daa
cwtl
add
adc
cmp
ret
mov
push
lret
dec
aam
icebp
ret
mov
gs
pop
mov
fnstenv
push
dec
push
hlt
adc
sbb
xchg
ret
dec
test
xor
sbb
out
push
fsub
adc
fsubrs
fsubr
outsb
stos
add
movsbl
mov
jmp
jge
faddl
jno
dec
testl
or
int
and
in
and
out
and
dec
lcall
pushf
adc
outsl
sub
std
mov
addr16
cli
add
add
insl
and
cld
insb
stc
xchg
cmp
fwait
jbe
rol
or
cmpsl
or
or
jge
push
xchg
lds
inc
sub
in
mov
add
jmp
xchg
add
add
and
stos
outsl
scas
imul
sahf
jle
jmp
hlt
cmp
aas
jns
sbb
fucomp
je
mov
loope
xor
mov
in
pop
fdivrl
out
adc
push
xor
add
adc
inc
inc
push
xchg
mov
stc
ds
push
cmp
cmc
int3
jge
sub
imul
lcall
xlat
stc
in
fidivrl
pop
stos
rcl
xchg
push
dec
mov
pop
inc
fsubr
repnz
mov
push
xchg
jbe
test
bnd
dec
jne
arpl
ds
mov
cmc
cwtl
sbb
cmpsl
fidivs
test
jae
and
imul
aaa
aas
push
test
stc
mov
mov
lret
sbb
dec
test
add
cmp
mov
ss
ja
sub
xchg
mov
push
add
sub
push
mov
sbb
dec
jo
js
scas
imul
lret
push
xor
xchg
lock
add
inc
fldt
js
dec
inc
adc
in
inc
or
inc
rorl
ss
inc
sbb
mov
lds
lret
or
shr
adc
xchg
imul
inc
out
or
xchg
xorl
inc
cltd
cmp
push
lret
adc
fs
cmp
mov
cmp
push
cs
nop
inc
fists
test
fbstp
fwait
xor
mov
in
pop
inc
inc
or
std
and
fldt
lret
ss
mov
mov
into
inc
iret
cmp
cltd
nop
shll
jno
leave
and
push
fdivrp
push
stos
andl
dec
pop
nop
lret
cmp
mov
arpl
inc
test
sub
sbb
mov
or
cld
leave
sub
mov
lds
ror
and
dec
or
inc
adc
xchg
mov
mov
dec
and
pushf
jp
lods
push
mov
ja
ljmp
lcall
outsb
sbb
cmpl
bound
gs
sar
movsb
sbb
inc
arpl
or
fdiv
subl
sub
gs
xor
push
imul
sub
add
mov
mov
or
mov
mov
xor
mov
or
cs
arpl
fisubrl
pop
or
add
pusha
or
xor
stc
mov
and
jle
push
dec
jbe
cltd
lret
inc
xchg
sub
or
mov
or
inc
outsl
pop
cmp
lret
std
clc
and
mov
negb
lods
jge
jge
nop
shrl
pop
xor
sahf
testl
sbb
into
aas
pop
push
out
push
in
std
lea
in
insb
mov
xor
jecxz
xor
out
iret
adc
jnp
inc
xchg
rorl
xor
mov
outsl
mov
cli
cwtl
and
hlt
jb
jmp
out
andb
idiv
sub
iret
repnz
test
test
shl
es
xchg
into
jg
imul
lock
out
mov
fwait
jno
cltd
iret
jne
and
mov
les
cmp
rorl
lahf
imul
dec
fdivr
jnp
out
test
add
decb
in
add
jne
jmp
or
or
fs
adc
push
mov
leave
cmp
adc
xchg
mov
push
stc
mov
loope
loop
test
decl
fidivrs
aas
fdivrl
shrb
add
stos
inc
sbb
add
adc
int3
cwtl
mov
jp
mov
fdivrl
ret
pushf
xchg
push
or
addr16
ds
cmp
inc
adc
adc
mov
add
ret
lahf
dec
xor
mov
mov
insl
pop
pushf
jb
sub
mov
in
sbb
inc
push
xchg
pop
and
stos
pop
leave
mov
mov
xchg
in
subl
lods
ljmp
loop
mov
pop
xchg
sbb
xchg
xor
or
popf
pop
mov
pop
jge
or
cmp
pop
xchg
xor
cmc
lret
push
ds
xchg
add
pop
lret
pop
inc
shl
pop
stc
jbe
pushl
xor
mov
sbb
dec
pop
rorl
mov
clc
or
js
fwait
cmc
cmp
fisubrl
mov
insb
lods
daa
rcrb
subl
outsl
cltd
adc
shlb
fstp
push
rcll
imul
xor
pop
test
or
mov
outsl
bound
jb
cld
adc
push
movsb
mov
shll
mov
mov
mov
jmp
pop
leave
loope
test
adc
es
mov
int3
xchg
pushl
mov
or
xchg
adc
outsl
xabort
enter
je
fsubr
daa
inc
cmp
stos
fsincos
add
scas
xchg
add
test
sbb
ja
imul
sbb
inc
dec
fs
xchg
shr
jno
ret
popa
mov
jb
pop
in
bound
jmp
cmp
push
push
pop
sub
shlb
cltd
int
jle
mov
sbb
xchg
and
pop
jle
jge
popa
cs
leave
arpl
push
lods
and
mov
xlat
xor
push
nop
dec
clc
push
inc
imul
add
cmp
mov
test
mov
cmp
mov
dec
dec
mov
in
or
shl
inc
pushf
xchg
call
push
xchg
subb
sbb
jl
lahf
int
or
cmp
push
or
les
fucomi
cmpsb
ljmp
les
int3
dec
fmuls
sbb
xor
pushf
insl
mov
add
dec
xor
data16
mov
inc
mov
cmc
xor
iret
pop
or
subl
mov
popa
mov
outsb
jp
imul
jae
cld
adc
cld
pushf
jg
inc
cmp
mov
int
sbb
aas
push
mov
sbb
gs
inc
hlt
lods
aaa
pop
jae
fadd
dec
outsl
lock
mov
xchg
xor
and
icebp
dec
sbb
pop
jbe
mov
shll
and
js
mov
loope
ret
push
cltd
and
stos
inc
rcrl
roll
adc
addr16
mov
cltd
dec
mov
pop
jno
mov
adc
and
aas
pop
xchg
rol
add
add
push
push
test
mov
stc
stc
cmp
call
lea
ja
cmc
and
sub
movzbw
shrd
movzbw
bsf
add
test
cmc
mov
adc
and
mov
test
push
pushf
pusha
repnz
pushf
pushf
pushf
call
pushf
or
lea
jle
jne
bsf
lea
pushf
mov
jmp
sarl
imul
xor
adc
pop
lock
adc
and
dec
push
adcl
dec
jl
iret
outsl
call
push
inc
cmp
pusha
mov
mov
lcall
mov
sbb
mov
push
out
loopne
leave
out
mov
filds
inc
xchg
aaa
pop
sbb
mov
xchg
inc
sbb
lods
mov
je
ret
push
frstor
aaa
andl
xor
jge
inc
and
jae
f2xm1
das
cmp
xchg
cmpsb
mov
dec
adc
orb
rorb
push
xlat
mov
or
push
ds
jb
mull
ja
int
adc
adc
movsb
dec
dec
jl
adc
push
mov
repz
mov
mov
inc
pushf
dec
sub
gs
mov
inc
sub
pop
or
out
aam
dec
sahf
mov
jb
scas
jmp
test
mov
cli
cmp
imul
pop
arpl
cltd
lds
cmp
ljmp
add
imul
in
fistpl
orb
mov
cltd
sahf
jae
lahf
clc
fsub
int3
xchg
sub
dec
dec
sarb
test
call
fildll
imul
adc
jecxz
mov
dec
js
pop
cmpb
pop
icebp
cmp
and
imul
lods
test
movlps
xlat
jecxz
or
cmp
popf
pop
lds
scas
lcall
movl
pushf
pushl
pushl
movl
pushf
mov
movw
pushl
lea
jmp
lds
cmpl
add
push
push
andl
xchg
and
add
push
dec
pop
ret
cmp
cmp
jns
mov
push
movsl
mov
call
lret
and
sub
jo
insl
add
mov
fildl
icebp
add
mov
mov
cs
xchg
pmulhw
push
add
sbb
cs
sub
stos
iret
add
inc
dec
dec
pop
je
lret
adc
xchg
sarb
mov
lea
ja
push
movl
lea
jmp
movb
bswap
mov
jmp
stc
clc
pusha
sub
pushf
mov
cmp
push
push
push
pushf
lea
jmp
stos
aam
jnp
inc
gs
xchg
mov
dec
jne
mov
aas
fisttps
cld
sti
pop
shlb
mov
mov
xor
inc
mov
test
cmpsl
js
cmpsb
les
dec
fcomps
test
ret
jo
dec
test
incl
xlat
sbb
mov
rorl
add
outsl
testb
xor
xchg
lret
xchg
test
xlat
mov
out
cmp
cmc
jp
inc
into
xor
stos
out
stc
or
inc
gs
xlat
lock
add
xor
cmp
sbb
dec
imul
cld
out
loop
cld
push
push
lds
mov
adc
pop
hlt
cmp
mov
xchg
clc
pop
in
clc
mov
pop
or
or
addl
xchg
rcl
inc
mov
test
push
in
push
test
imul
fdivrl
inc
je
dec
daa
push
pop
loope
addr16
cli
cmp
arpl
inc
pop
sti
fisttpl
and
idiv
push
stc
sbb
ss
sahf
cmpl
lods
in
outsb
push
rcll
adc
push
xor
dec
jl
out
fisubrs
ds
test
mov
adc
scas
push
dec
aam
pop
cmp
shl
div
and
push
mov
or
addr16
pop
add
mov
inc
movsbw
mov
pushf
pushf
call
cmp
jns
inc
fisttps
shr
das
dec
bound
xlat
cli
and
adc
call
std
in
insl
aam
sbb
imul
sbb
or
inc
lahf
mov
fsubr
push
adc
into
dec
iret
daa
xchg
ret
or
dec
int3
jl
dec
push
cld
enter
push
flds
adc
popa
ja
cmpsb
mov
push
sub
cmp
adc
pusha
js
sar
adc
xor
dec
jbe
fildll
and
xor
cmpl
or
xor
inc
lods
xchg
mov
inc
in
hlt
cli
ret
gs
mov
jae
aas
pushf
add
bound
xchg
xor
insl
scas
push
adc
dec
xor
mov
jle
xchg
mov
loopne
ss
lock
stos
or
adcb
in
shlb
outsl
fldln2
xor
cltd
lret
and
pop
cwtl
xchg
jae
sub
or
pop
mov
dec
test
icebp
xadd
sbbb
or
subb
jnp
in
std
bound
push
xor
ljmp
push
push
dec
and
xor
int
pop
rclb
mov
stos
add
sbb
xor
fcomps
daa
mov
sbb
mov
mov
xor
andl
inc
mov
mov
push
and
into
sti
sub
dec
mov
xor
shlb
mov
imul
cmp
lods
mov
rcr
push
pusha
pop
dec
or
or
sbb
gs
test
inc
push
dec
push
fisubrs
fldenv
lock
jno
jecxz
jo
pop
adc
dec
sti
and
adc
pop
into
call
pop
cmpsb
rep
pop
dec
movsl
ja
mov
and
data16
movsl
cmpsb
loop
and
daa
arpl
jo
mov
insb
psubusw
inc
cld
sbb
mov
xor
movb
stos
es
sti
sbb
adc
data16
sbb
decb
nop
sub
repz
clc
jp
mov
and
ret
push
popa
insl
jo
xor
push
outsb
push
addr16
rcrl
es
fcoml
les
pop
xchg
shl
hlt
cmp
std
mov
mov
aaa
mov
bt
cmp
cmp
pusha
lea
jmp
hlt
cmp
hlt
and
xor
stos
and
cltd
push
sarb
ret
cltd
push
aaa
decb
mov
hlt
into
and
mov
insl
inc
bound
shl
pop
jle
std
add
and
mov
int
mov
daa
mov
jnp
mov
bound
stos
ret
add
push
js
rcl
adc
cmp
imul
and
dec
outsl
fiaddl
cs
lea
jmp
movw
lea
jb
push
cmp
pushf
lea
ja
xor
pusha
shl
add
add
mov
shl
dec
mov
pusha
bt
cmp
mov
pushl
lea
jb
pushf
jmp
enter
imul
iret
inc
outsl
aaa
pop
dec
orb
enter
mov
popa
or
add
inc
arpl
mov
addr16
adc
push
cmpb
mov
jbe
inc
dec
insl
xchg
dec
pop
xchg
ret
rcl
sub
enter
xor
pushf
sbb
repnz
int3
ljmp
jp
loopne
iret
mov
les
dec
pop
clc
add
dec
push
xor
pop
fldenv
and
mov
test
jno
adc
sbb
adc
cmp
int3
hlt
and
or
jbe
pop
rdtsc
pop
mov
es
lock
lds
sub
mov
inc
dec
stc
dec
ja
xchg
fmull
xorb
rolb
imul
out
jnp
fisubl
fs
in
mov
sbb
jecxz
out
nop
add
xchg
adc
jne
out
jbe
clc
je
jmp
inc
dec
mov
xchg
sbb
add
pop
bound
in
push
jecxz
mov
addr16
gs
push
aad
jl
push
mov
lahf
push
shrl
loopne
push
or
out
xchg
sbb
mov
movsb
divb
cmp
and
xlat
sarl
pop
insl
stos
ror
mov
movsb
push
iret
and
dec
jl
subl
cmp
lcall
setle
adc
inc
and
out
xchg
pushfw
filds
inc
jle
incl
cmp
bound
mov
jp
add
fs
jne
push
push
mov
mov
pushf
pusha
jmp
cmp
pushl
jmp
mov
lea
jae
pusha
lea
jne
jmp
pushf
push
pushf
lea
je
cmp
test
push
sub
stc
cmc
cmp
call
in
ja
je
inc
cmpl
les
cmc
mov
xchg
jnp
lret
adc
stos
jbe
bound
inc
cmp
ds
jmp
dec
subb
jecxz
pop
insl
sbb
push
sub
pushf
lret
and
sub
insb
cmp
jp
les
lahf
loope
dec
pop
es
dec
jmp
dec
push
dec
jp
mov
aam
push
sbbl
ss
sub
jmp
roll
cmp
sbb
bound
mov
jmp
pop
mov
xchg
shrb
lods
mov
rclb
push
loop
push
rcrl
sbb
and
imul
mov
mov
loope
sbb
in
nop
pop
jmp
lahf
inc
sub
mov
pop
mov
sbb
jg
jecxz
lea
pop
addr16
push
sbb
xchg
sahf
adc
mov
xchg
es
in
fwait
push
sbb
dec
pop
mov
arpl
jo
and
in
pop
jne
test
mov
lea
je
cmp
pusha
jmp
outsb
sub
inc
stos
shl
and
ret
pop
cmp
js
xor
fisubs
pop
inc
in
clc
cmp
push
lret
pop
adc
in
jg
ja
jb
je
outsb
mov
xor
fnsetpm(287
push
dec
fdivr
dec
mov
add
daa
pop
push
mov
push
jbe
lea
jle
orl
pop
push
sbbb
push
jo
stos
js
insl
mov
sti
sbb
rcrl
imul
lahf
or
movsl
add
mov
enter
cld
sti
aad
dec
mov
sub
cmp
mov
inc
fld
add
mov
scas
out
xchg
fs
cwtl
cs
inc
sub
sbb
ret
jnp
add
ds
push
addr16
mov
dec
or
cmpsb
pop
mov
shl
int3
cmc
mov
pop
ret
cmp
popf
pushf
lods
leave
cmc
gs
test
pop
loopne
xor
jecxz
add
push
adc
sub
xor
mov
aaa
cmp
insl
rcll
mov
pushf
movb
movb
mov
pushl
ret
cwtl
ss
imul
xor
mov
stc
adcb
dec
add
pop
rcrl
test
ja
in
mov
and
cmp
lods
les
fldcw
add
cltd
in
sbb
pop
push
popl
sub
in
mov
dec
dec
leave
divps
lods
jle
int3
pop
jae
sub
push
daa
aam
mov
lds
fidivl
addr16
iret
dec
dec
call
jge
push
fwait
hlt
or
arpl
xchg
sahf
pushf
int3
loope
das
js
jl
xchg
and
jno
inc
loope
aas
push
xchg
outsl
jnp
push
imul
adc
cmp
jge
add
call
add
cli
and
xchg
jns
mov
push
push
outsl
mov
popa
je
push
btc
or
repz
sub
jmp
arpl
mov
jnp
pop
inc
sbb
mov
push
jmp
not
adc
andb
jo
and
dec
js
jge
loop
cmp
xor
xchg
adc
mov
roll
in
mov
xchg
sti
incl
or
jmp
inc
pop
mov
jb
icebp
add
lock
clc
dec
lret
inc
inc
cmp
dec
inc
int
lds
sub
imul
loopne
shl
push
inc
jo
test
xor
mov
sbb
shll
pushf
mov
mov
push
das
dec
das
mov
leave
mov
ljmp
imul
xchg
add
movsb
cs
roll
mov
push
jb
adc
rcrb
fs
mov
mov
mov
xor
arpl
adc
in
je
inc
or
sbb
outsb
pop
std
mov
stc
sub
push
push
fwait
loope
mov
pushf
cmpsb
cmp
jge
hlt
cs
test
mov
aaa
out
fwait
shr
je
and
loop
sbb
scas
jnp
inc
andl
add
cmp
in
mov
adc
mov
cmpsb
adc
outsb
cmpsl
sub
push
pop
cmp
xchg
jmp
lock
stc
in
push
cmp
jno
outsl
shll
xor
fcompl
mov
pushf
or
fldt
daa
and
or
and
mov
testb
xchg
and
and
xchg
movsb
mov
repnz
adc
xchg
lcall
mov
and
xchg
jmp
dec
inc
dec
dec
xor
cs
insb
add
test
mov
mov
testl
push
pop
mov
xadd
adc
mov
neg
push
sar
mov
pusha
mov
cmp
add
pusha
jmp
bt
cmp
pusha
push
call
stos
sti
popf
outsb
imul
mov
xlat
popa
cwtl
cmp
es
popa
or
sbb
sti
aad
and
mov
jg
shr
call
xor
out
popf
fldl
and
pop
jge
jnp
inc
ss
jmp
or
scas
fcoms
popf
jb
cmp
dec
pop
mov
jg
sub
xchg
cmc
sti
pop
fisubrs
sahf
push
lods
cmp
sahf
ret
mov
xor
pushl
mov
pop
mov
int3
imul
and
and
jmp
mov
push
pushf
lea
jmp
lea
call
jmp
pushf
test
or
jmp
jg
out
insl
imul
movsb
mov
mov
dec
sbb
out
dec
std
std
adc
mov
cld
popl
jp
adc
dec
outsl
inc
arpl
cmp
enter
and
arpl
or
push
popf
jns
fstl
add
into
adc
insb
xchg
fnstenv
xlat
cmc
movsl
lret
xchg
mov
in
insb
mov
or
mov
xlat
pop
pop
sbb
jo
jmp
push
lret
push
daa
mov
loopne
shlb
lcall
push
daa
inc
push
lahf
mov
shlb
out
or
insb
imul
xchg
cmc
pop
push
ljmp
arpl
or
add
rclb
or
fsubr
les
js
mov
sti
lcall
test
sti
jg
in
mov
addr16
mov
xchg
daa
nop
mov
sbbb
adcl
pop
jmp
sub
repz
mov
jg
fiadds
out
call
mov
push
dec
das
jae
sub
dec
jb
lcall
dec
pop
pusha
jle
clc
or
sub
and
int3
add
in
lods
insb
imul
test
sbb
stos
test
in
gs
jecxz
je
dec
outsl
fs
pmaxub
cmp
and
xchg
movsb
add
push
ljmp
mov
sub
mov
cmc
push
xor
mov
pushf
pusha
sub
pusha
jmp
lea
jne
btr
adc
shr
sub
aam
shr
mov
sar
not
add
xor
add
mov
cmc
bt
push
test
push
lea
je
pusha
pushf
mov
push
lea
jmp
push
jmp
imul
cmpsl
mov
inc
nop
stos
mov
es
inc
or
int3
adc
adc
jnp
push
jp
leave
outsb
xchg
insb
xor
scas
cmp
or
inc
xor
cmp
mov
pushf
or
notl
mov
mov
movsl
pop
sub
sbb
fcompl
rorl
inc
ja
daa
std
fldenv
push
xor
pop
sub
push
gs
push
imul
pop
dec
jbe
and
pusha
lea
ja
cmc
sbb
clc
shl
sub
cmc
pushf
clc
lea
add
sar
mov
shl
inc
sbb
mov
cmc
jmp
mov
movzbl
pop
pusha
pushl
ret
push
loop
imul
ljmp
sbb
stos
or
icebp
rorb
cs
jg
adc
movsl
fwait
jnp
mov
cmp
cwtl
cmpsl
repnz
pop
mov
pop
mov
push
mov
dec
outsl
mov
push
imul
adc
push
outsb
test
or
inc
dec
gs
or
pop
lds
push
xlat
cmpsl
test
adc
xchg
pop
arpl
cmp
adc
or
mov
inc
sbbb
pop
push
les
lret
cmpsl
leave
imul
cmpsb
add
ret
sub
in
lcall
jmp
sbb
lcall
sbb
or
mov
in
inc
cmpxchg
lds
mov
mov
test
addr16
mov
push
dec
das
inc
lds
andl
add
inc
gs
popa
jbe
inc
imul
add
adc
or
arpl
and
mov
rorb
pop
sub
and
das
xor
lods
dec
outsl
jne
jb
jp
repz
and
call
loopne
arpl
std
xchg
std
mov
dec
in
mov
adc
popa
xchg
gs
sbb
ds
es
testb
fdiv
test
mov
call
aas
or
movsl
in
adc
xor
enter
adc
movw
pusha
pusha
lea
jmp
call
shl
btr
mov
not
mov
cmc
cmp
pusha
repnz
call
repnz
cmp
inc
mov
sub
add
sub
popa
int3
mov
out
jg
xor
xchg
sub
decb
testb
clc
cmc
cltd
sub
popa
jnp
test
and
mov
in
push
clc
pop
sbb
jge
and
mov
mov
outsb
test
pop
imul
out
or
cmpsl
movb
sbb
or
inc
clc
push
inc
outsb
xchg
jl
lret
adc
xchg
std
pop
pop
push
sub
int
or
push
xor
roll
dec
push
insl
lcall
jg
fldt
inc
out
cmc
fidivs
dec
push
mov
or
push
loope
popf
ret
mov
sbb
mov
adc
rcrl
inc
aaa
scas
sbbl
rcll
sub
or
in
push
or
lods
es
jl
inc
cmovae
mov
sbb
lds
lret
leave
loopne
cmp
addb
cmp
or
and
inc
push
mov
cli
add
mov
stc
insb
mov
rcll
mov
cmp
je
in
imulb
popf
out
mov
test
dec
jb
sbb
popf
pop
jp
jns
loop
adc
jo
insl
scas
les
mov
loop
sub
insl
xor
and
adc
imul
sbb
cmp
or
jge
pop
dec
in
lea
jnp
xor
cmp
add
or
mov
mov
fidivl
add
pop
xorl
ret
pop
cmc
lret
xchg
jge
and
test
xchg
inc
jl
repz
mov
push
mov
push
sti
push
sbb
shlb
enter
sbb
iret
mov
pop
xchg
push
daa
mov
ficoml
cmpl
inc
mov
xor
or
push
imul
cmp
jmp
jle
dec
jae
cld
pop
pop
int3
cmpsl
and
pop
or
daa
sbb
or
push
pop
jg
mov
and
push
rol
ret
stos
sub
sbb
fnstcw
fisttps
ret
stos
repnz
sub
fwait
xor
movsb
shl
daa
loope
dec
xor
iret
repnz
out
add
mov
jg
cli
test
xor
movsb
inc
jge
loope
test
mov
rolb
xor
movsb
int3
out
mov
or
or
testb
cltd
and
inc
add
shll
mov
js
or
xor
mov
or
sub
outsl
jg
mov
pushf
fisttpll
sbb
dec
xchg
cmpsl
mov
or
xchg
imul
or
inc
push
test
push
negl
scas
and
iret
dec
std
inc
rorl
cld
scas
insb
xchg
movsb
and
lds
sub
jge
cli
fnstsw
fnsave
mov
cld
adc
sub
mov
mov
icebp
cmp
frstor
push
cmpb
xchg
lods
jmp
cmpl
xchg
fwait
add
ss
xchg
sar
push
aaa
xor
add
sbb
xor
and
imul
stos
repz
jb
sbb
and
aas
sbb
inc
in
scas
jl
mov
mov
add
mov
aaa
cwtl
cwtl
in
mov
scas
adc
sub
jge
call
popa
test
in
xchg
and
cmp
sbb
aas
jmp
pushf
fnsave
dec
jg
mov
jne
shufps
mov
xchg
and
hlt
mov
popa
std
pop
and
imul
sahf
fwait
sub
cmpsl
pop
or
pop
pop
mov
imul
lret
xchg
or
popa
ja
test
cmc
shll
ret
jnp
inc
mov
neg
mov
push
dec
sbb
fs
outsb
fs
arpl
ja
mov
sti
xchg
pop
leave
imul
fldl
jno,pt
xchg
xchg
mov
or
jecxz
inc
fmull
add
inc
enter
cmc
out
push
enter
js
inc
push
popa
into
inc
mov
addb
xchg
jecxz
popa
mov
scas
lcall
and
mull
loope
xchg
bound
jle
jle
imul
xor
sbb
or
dec
clc
mov
mov
fistpl
push
fnstcw
enter
and
test
decb
push
je
lods
les
loop
stos
sub
sbb
imul
bound
mov
push
ficomps
fsubl
push
sti
and
out
mov
xor
pop
inc
bound
jne
mov
adc
out
adc
jge
xor
push
and
out
push
mov
repz
pusha
xchg
arpl
neg
shll
int3
sti
insb
xor
outsl
mov
testl
movsl
jb
outsb
mov
and
mov
add
add
adc
in
fwait
lds
call
mov
push
imul
pop
insb
add
out
xor
xor
xchg
outsl
and
test
cmpb
aas
ja
dec
xchg
and
cwtl
mov
and
rol
call
or
neg
mov
imul
mov
add
adc
cld
or
cwtl
in
adc
push
adc
xor
mov
lods
scas
aas
in
push
sub
inc
xorl
mov
adc
stc
test
lods
les
cmp
sub
bound
jle
xor
adc
shll
outsl
outsb
adc
jmp
inc
inc
pop
xchg
mov
repnz
inc
mov
ljmp
mov
cmp
shlb
call
adc
pop
lods
stc
data16
sub
push
xchg
add
mov
inc
adc
mull
lahf
xor
mov
sbb
add
lcall
test
sub
aaa
ror
test
mov
xchg
leave
sbb
insl
pop
mov
xlat
cltd
ja
shlb
cs
movsl
cltd
div
jno
adc
scas
insb
xchg
jne
mov
imul
mov
cmp
or
pop
loopne
mov
jmp
sbb
js
or
dec
insb
cmp
xor
xchg
divb
out
jmp
insl
mov
shrb
scas
xchg
pop
fmul
test
pop
cmpsl
mov
imul
ja
in
push
push
push
pushl
push
push
push
jl
add
sbb
test
adc
push
pop
ja
ret
dec
dec
jp
mov
mov
dec
mov
push
sbb
enter
xor
sbb
incl
lock
push
lea
jae
setbe
mov
shl
push
pusha
mov
movsbw
inc
sbb
btc
mov
movb
movl
xor
push
test
stc
repnz
movb
lea
jne
dec
push
mov
movzbw
sub
bsr
movsbl
pop
shl
mov
call
inc
pushl
adc
mov
mov
pushl
ret
pusha
movl
pushf
push
pushl
movb
lea
jmp
add
clc
cmp
stc
bt
mov
cmp
test
pushf
mov
mov
lea
ja
je
test
cmp
bt
add
test
clc
pushf
cmp
pushf
call
addl
xchg
add
popa
test
lret
push
push
les
add
out
adc
int3
dec
aad
sbb
call
sbb
sub
mov
jl
es
data16
cmpsb
aaa
xor
sub
cmpsb
ret
gs
mov
push
xor
jns
jge
xor
cmp
rclb
jl
inc
fs
arpl
js
sar
sub
or
inc
mov
adc
mov
sbb
aad
cwtl
lcall
mov
inc
daa
xor
pop
sbb
sahf
ror
dec
ja
add
in
adc
cmp
leave
pop
pusha
imul
aas
jge
into
push
cmp
mov
cmp
je
inc
shll
ja
mov
mov
adc
shl
rclb
lret
pop
jnp
push
aad
popf
sbb
cmp
in
xlat
pop
sti
jb
into
xchg
xor
xchg
pop
sbb
lret
sub
add
mov
pop
cmp
fwait
xchg
das
xchg
aam
jno
in
jmp
je,pt
repz
push
mov
int
rcll
pop
push
jbe
xchg
imul
sbb
dec
xchg
lods
mov
pop
adc
stc
imul
jne
into
xor
test
mov
mov
mov
stos
xchg
add
sub
test
mov
mov
inc
pop
push
xchg
cmp
pop
cmp
dec
push
std
xorl
je
hlt
mov
cmp
xchg
mov
ror
sbb
push
adc
bound
inc
cwtl
shlb
es
imul
insb
sbb
cmpsb
std
movsb
aam
div
leave
and
xchg
and
pop
cmp
push
pop
pop
jb
scas
in
sbb
jp
mov
push
sti
add
pop
and
mov
das
out
sahf
lods
dec
es
inc
mov
outsl
mov
cmc
lret
or
adc
lcall
nop
push
je
jne
push
jb
movsl
cmp
and
xchg
mov
lret
mov
js
jne
sub
jbe
sub
sbb
inc
sbb
cmpsb
stos
pop
xchg
sbbl
xchg
outsb
adcb
mov
cltd
idivl
mov
jne
push
and
icebp
ja
pushf
push
xchg
push
mov
adc
ja
in
pop
adc
call
stc
jae
sahf
scas
pop
imul
mov
sbb
jns
xchg
mov
sbb
mov
and
outsl
mov
cli
mov
ss
sbb
cmp
mov
mov
sub
adc
test
cld
ja
subl
enter
inc
mov
cmpsl
push
jb
xor
push
cmc
cli
xlat
add
outsb
xorl
jmp
xor
inc
mov
imul
into
or
addb
cmp
lods
mov
dec
xor
fbstp
cmp
lret
adcl
ret
pop
cmp
adc
lods
cmp
sahf
insb
repnz
mov
or
cmp
cmpsl
pop
push
push
ds
jecxz
mov
mov
aaa
in
stos
jg
lcall
xlat
pusha
cmp
ret
xlat
stc
repz
dec
xchg
popf
mov
push
pop
js
mov
xchg
add
add
cmp
call
inc
adc
pop
imul
cmpsl
jmp
and
jbe
nop
mov
adc
push
into
lds
or
dec
outsl
adc
pop
or
cvttps2pi
pop
mov
sbb
jle
fdivp
push
dec
fdiv
cmc
pop
pop
mov
jmp
push
push
add
in
cmpsl
enter
gs
cmpsb
inc
add
leave
xor
sar
or
shll
mov
mov
mov
dec
outsb
jne
out
lods
jo
pop
lret
xor
out
mov
inc
xor
push
push
fwait
sahf
fwait
rcrl
pop
dec
sub
cltd
jo
pushf
imul
mov
mov
ja,pt
push
push
call
pop
and
mov
stos
ss
jnp
fadd
push
pop
cli
inc
push
lahf
sbb
dec
xchg
aas
mov
jecxz
outsl
pop
add
xor
es
and
dec
adc
add
cmpsb
sub
sbb
bound
ja
pusha
add
adc
cmc
aad
dec
outsb
movsl
ret
push
push
outsb
sahf
lahf
movsl
mov
dec
add
popa
xor
push
pusha
movl
call
pushf
pushf
pusha
push
movl
call
pusha
lea
jne
mov
pusha
mov
stc
or
pusha
lea
je
not
setl
not
lea
call
int3
cwtl
push
pop
imul
pop
push
pop
pushf
mov
subb
repnz
bound
xor
iret
in
pop
decb
fldln2
and
dec
push
ret
pop
imul
cltd
jge
pop
add
adc
inc
sbb
negb
sub
adc
cmpsl
sub
mov
cmp
jl
xchg
fnstenv
mov
add
popa
mov
jmp
sub
mov
add
ljmp
and
imul
icebp
shl
ret
iret
pop
pusha
movsl
jne
ficomps
inc
in
jnp
mov
int3
std
and
repnz
or
mov
mov
fnsave
mov
mov
test
mov
test
mov
dec
mov
addl
out
jle
lret
cmpsl
pop
in
les
std
dec
sub
rclb
ljmp
popa
movsl
cmpsb
mov
hlt
repnz
scas
cmp
push
sbbb
push
jbe
mov
xchg
xchg
lods
out
or
jmp
sti
or
add
push
xchg
test
subl
mov
push
xor
jle
rolb
mov
push
sti
lds
cmp
mov
pop
cltd
sub
imul
jmp
ds
insb
mov
jbe
iret
mov
or
test
mov
pop
and
shll
adcw
jge
jb
sti
cmpl
adcb
idiv
or
xchg
popf
scas
mov
rep
cmp
push
enter
in
sbb
lahf
lret
jno
adc
push
repnz
pop
mov
jns
mov
fsub
add
and
ds
std
mov
ds
shlb
and
mov
in
dec
je
push
cmp
push
aad
jns
mov
jmp
sub
mov
dec
movsl
sbb
fsubr
cmp
int
movzwl
inc
and
mov
jmp
btr
add
or
fstps
push
mov
mov
sub
and
jae
loope
adc
fwait
and
lret
in
aam
xlat
cmpsl
jbe
addr16
sub
leave
mov
fsubrs
dec
sub
jmp
aas
stos
xchg
adc
dec
test
call
push
nop
stos
scas
aad
idivl
pop
xchg
xchg
jecxz
and
loopne
xchg
adc
add
and
pop
jmp
mov
lods
pop
imul
lds
shrl
push
push
call
fidivrl
imul
rorb
jnp
icebp
nop
cmp
les
imul
mov
out
shrb
xor
push
in
cwtl
inc
or
loope
sub
mov
andb
je
subb
arpl
adcb
les
nop
jae
sbbl
push
cltd
repz
and
xor
mov
pop
and
cmp
dec
push
int
fiadds
jge
lds
pop
imul
dec
stos
lret
test
aad
sub
mov
pop
mov
gs
pop
orl
jns
iret
cs
adc
ljmp
insl
imul
pop
jo
ja
dec
gs
sarb
add
sub
dec
movsl
test
repz
and
outsl
scas
int
popf
jnp
loopne
int3
sbb
jne
cld
push
or
xor
lahf
jnp
fstpt
sbb
popf
adc
mov
ret
lahf
xchg
outsb
movsb
and
push
ja
jns
int
cmp
push
sbb
fwait
test
push
rcr
jl
andb
inc
and
jecxz
dec
xchg
mov
pop
nop
xchg
fadds
insb
in
and
mov
and
sbbl
sub
and
mov
rcr
lret
nop
xor
scas
lcall
push
imul
mov
ja
and
jg
pop
sbb
aad
loop
xchg
xchg
xlat
std
xor
dec
mov
call
mov
dec
adcl
adc
movsl
mov
add
dec
popa
lea
insb
imul
cmp
lcall
adc
ret
aas
aad
arpl
mov
aam
movl
test
popf
stc
int3
stos
lret
int3
dec
pop
out
arpl
dec
lret
add
pop
fcompl
pop
sbb
xor
mov
clc
ret
movsl
jg
ja
xor
cmp
mov
das
jno
aad
or
pop
inc
vpmacssww
lea
je
pusha
cmp
pushf
lea
jne
jmp
inc
and
imul
cltd
sbb
push
lret
scas
int
movsl
inc
movaps
mov
jo
lahf
mov
mov
ljmp
movsb
xor
sbb
cmpsb
test
inc
addb
push
jne
mov
sbbl
repz
push
mov
mov
ret
insl
pop
adc
iret
push
push
xchg
ror
add
pop
add
lea
and
or
xor
xchg
data16
call
cmpsl
lret
imul
test
orl
gs
push
mull
pop
inc
xor
ds
lea
lahf
pusha
add
mov
dec
push
hlt
mov
pusha
inc
test
jae
mov
push
lahf
or
push
push
mov
movsl
iret
adc
lods
and
sbb
ljmp
rolb
inc
cwtl
or
cmp
mov
dec
fwait
icebp
and
add
imul
push
ja
arpl
push
mov
mov
jbe
movsl
fimuls
addr16
ljmp
pop
jmp
fists
fnstenv
pop
cmp
sbb
inc
pop
mov
popa
ret
and
scas
and
test
imul
subl
test
mov
mov
xchg
loopne
add
aaa
jnp
repz
icebp
add
xchg
dec
jmp
dec
leave
mov
mov
bound
pop
push
in
insb
mov
cmp
popa
repz
mov
insl
inc
stos
or
push
inc
cmp
aad
dec
push
xor
xor
xor
dec
sarb
lcall
cmp
jns
lret
mov
ss
lret
test
mov
cmpsb
lods
int3
adc
inc
jp
lret
dec
adc
inc
and
xorl
mov
lea
jmp
mov
jmp
sub
add
lock
fimull
or
pop
jo
mov
addr16
test
daa
dec
mov
xchg
cmp
adc
lds
dec
xlat
push
hlt
and
inc
cmp
std
jl
cld
mov
aaa
adc
in
adc
xchg
lods
xchg
pushf
hlt
push
pop
addr16
ficoml
inc
push
ja
shll
mov
clc
jp
scas
pushf
call
out
sbb
pop
ja
in
or
sub
push
loopne
pop
sub
shrl
cmpsb
pop
mov
stc
xchg
jo
inc
pop
cmp
adc
add
mov
rcrb
dec
inc
sahf
sub
sub
push
cld
mov
leave
xor
mov
push
sub
jl
mov
insb
shll
inc
xchg
daa
sbb
xor
loopne
pop
cmp
aam
xchg
test
nop
xchg
stos
in
ss
arpl
orb
lods
aam
push
stc
test
xor
lea
jns
inc
push
push
pushf
lea
call
jmp
pop
psubusw
inc
out
dec
push
insl
sahf
enter
push
push
xchg
mov
xor
stc
lret
mov
and
test
push
xchg
adc
lds
xchg
mov
inc
iret
pop
jnp
lea
and
sub
fstpt
pop
int
add
movsl
test
mov
lcall
adc
push
test
push
test
pop
xchg
jno
faddl
cwtl
int
add
imul
std
stos
mov
ds
mov
insb
dec
jg
push
arpl
fistpll
fimuls
xor
test
mov
test
mov
test
sahf
stc
mov
fmull
mov
pop
jl
cmpl
cmpl
cmpsb
andl
dec
daa
or
mov
xor
jle
hlt
int
ret
fstpl
in
inc
and
pushl
pushf
push
pushf
pushl
ret
pusha
lea
mov
movsbw
mov
jmp
not
lea
mov
lea
cwtl
lea
push
mov
lahf
lahf
pushf
pushl
popl
movb
mov
pushf
lahf
movl
push
bswap
push
cwtl
lea
pusha
mov
pushf
movl
pushl
pushl
popl
push
mov
movb
pushl
ret
lock
jno
xchg
fsubrl
enter
fists
inc
pop
sub
or
xchg
mov
cwtl
scas
mov
pop
jl
add
pop
pop
aas
repz
push
or
push
mov
mov
cmp
scas
adc
xchg
mov
push
fwait
mov
es
nop
sub
in
imul
jnp
aad
push
dec
jns
test
jmp
and
repz
sbb
xor
jbe
lock
mov
sub
xlat
fcompl
mov
arpl
sti
inc
push
outsb
inc
inc
mov
xor
push
scas
mov
call
out
xlat
icebp
add
or
mov
push
cli
enter
add
inc
mov
lds
add
xlat
scas
shl
fmull
mov
add
std
and
js
fsubp
cmc
and
push
fwait
sub
cmp
sbb
inc
push
pop
gs
ftst
sbb
pop
adc
dec
and
adc
decb
lret
aad
insb
jb
int
test
loopne
clc
test
pusha
in
push
clc
test
jae
xor
aaa
fcomi
or
stos
imul
and
add
mov
cwtl
roll
inc
mov
cmc
push
cmp
out
push
outsl
jns
popa
adc
push
sbb
sub
cmpsb
fsub
inc
jnp
mov
dec
add
sahf
stos
pop
jg
lods
dec
imul
sbb
fsubr
sub
xor
sti
mov
mov
lret
sahf
out
rclb
push
jno
dec
mov
insb
sub
push
mov
xchg
push
xchg
mov
mov
inc
lods
inc
sbb
arpl
dec
or
push
movsl
xchg
shll
rclb
push
jo
scas
ljmp
stc
jmp
dec
mov
xor
pushf
rep
pop
mov
mov
pushf
movl
pusha
lea
jmp
sbb
dec
imul
cli
adc
ja
lods
stos
out
add
or
adc
cmp
inc
adc
movsl
and
insl
in
jmp
lea
push
and
push
scas
xchg
orb
push
dec
add
ja
andb
add
cmpsl
scas
xchg
fmull
and
or
cmp
into
pop
bound
xchg
insl
dec
jns
mov
movsb
mov
and
xor
sbb
pop
mov
xchg
dec
imul
pusha
pushw
xlat
add
dec
mov
inc
lea
outsl
add
das
bound
lods
repz
out
addr16
lret
pop
pop
outsb
cmpsl
jns
fwait
jnp
sbb
sbb
daa
cmp
enter
hlt
in
ljmp
in
jns
rol
pop
hlt
jle
and
cmpsb
inc
int3
adc
mov
lahf
mov
icebp
daa
es
insb
mov
loopne
lcall
jmp
dec
imul
mov
pop
xchg
and
and
sbb
test
lret
mov
push
pop
or
stos
lods
cmp
push
out
cwtl
mov
jp
std
add
add
inc
add
lds
and
xor
addb
or
fcomps
es
cmp
out
xchg
outsl
out
cmpsb
jmp
cs
xchg
xor
cli
fidivrl
or
int3
xrelease
sub
mov
push
add
jb
call
dec
imul
push
sbbb
jae
ss
pop
push
test
dec
add
gs
sbb
cmp
mov
mov
cld
mov
inc
loope
adc
ret
popf
decl
sbb
lea
and
sub
shl
dec
das
mov
movsb
cs
int3
rorb
xor
add
adc
mov
movsb
int
sub
cmp
inc
loope
dec
imul
out
sub
and
dec
mov
stc
repnz
nop
push
int
lret
and
imul
pop
aas
mov
sahf
lahf
movsb
insb
push
jbe
mov
xchg
cmpsl
and
stos
setle
stos
inc
rcrb
push
js
in
or
insl
sbb
lds
push
sub
push
sbb
adc
test
shl
xor
dec
mov
jb
shrb
ret
mov
inc
sub
xchg
xchg
shl
add
xor
shrl
hlt
ficompl
repz
shl
cmp
cmp
inc
lock
mov
popf
pop
movsl
sbb
pop
sbb
sti
aad
cmp
cmp
lods
and
add
fs
xor
xor
out
xchg
jp
ljmp
lret
push
push
mov
mov
orl
repnz
xor
dec
imul
dec
mov
int3
aad
and
xchg
adc
push
repz
push
sub
repz
push
rorl
test
xor
inc
mov
pop
inc
js
roll
dec
sbb
aaa
fidivs
nop
shl
mov
jmp
dec
icebp
pop
xchg
bound
add
push
ljmp
pop
pop
es
jle
add
idivl
inc
xchg
push
mov
je
enter
mov
jg
mov
push
cmc
cmp
cwtl
adc
push
imul
popa
mov
rorb
ja
mov
ficompl
xlat
push
pop
lret
xor
ds
shll
xchg
sbb
jae
sbb
cli
xchg
jp
push
xchg
in
fdiv
and
ret
frstor
sbb
dec
cmp
aas
xchg
std
decb
mov
xor
mov
lahf
mov
out
sub
cmp
jno
jl
js
dec
das
addr16
and
iret
sbb
mov
shll
mov
pop
cwtl
ss
imul
mov
hlt
insl
and
into
mov
lea
out
adc
mov
mov
mov
fistps
stc
std
add
sub
insb
clc
sbb
sbb
loopne
aam
lret
popa
dec
sub
cmp
cmpsl
mov
mov
cli
cmpsl
test
or
popf
subl
jo
out
cwtl
iret
jp
or
loope
mov
push
ret
mov
andl
dec
xchg
fcmovu
inc
xchg
mov
and
push
jae
xor
stos
lock
jo
push
sub
lcall
add
movl
push
movsl
and
push
add
pop
in
mov
test
rol
add
aas
sahf
ss
sbb
jp
xlat
fwait
shrl
inc
js
mov
jo
andb
mov
inc
lcall
dec
imul
push
inc
jns
sahf
mov
dec
iret
dec
icebp
sbb
xchg
rorl
call
push
pop
sahf
xchg
stos
mov
rcrb
push
inc
in
adc
fldl
call
lds
mov
lods
sbb
inc
lods
test
pop
aaa
out
idivl
int
mov
movsb
ljmp
inc
lods
loop
and
sbb
iret
iret
xor
enter
in
inc
mov
jo
mov
subl
gs
xchg
mov
pop
iret
repnz
push
or
popf
ret
add
lea
jne
test
dec
mov
call
sbb
pushf
ret
ret
and
fstpl
dec
insl
stos
in
sahf
xor
jl
insb
pop
cs
loope
mov
movsl
cli
xchg
test
push
dec
mov
outsl
inc
shl
mov
inc
addl
test
popa
xchg
lods
push
into
mov
and
je
push
jp
aas
ja
gs
inc
xor
add
ja
xor
popf
sbbl
xchg
fsubs
das
xor
ficomps
and
jl
lds
sub
clc
cmp
movb
lea
ja
sar
pusha
cmp
push
sub
movzbw
dec
call
aad
fildl
inc
cli
push
inc
inc
mov
pop
jno
scas
mov
xorb
jae
adcb
fsin
bound
mov
or
jbe
xor
in
sub
xor
mov
fsubrl
icebp
stos
ss
and
out
mov
xchg
xor
xor
roll
in
imul
and
cli
pop
imul
mov
lods
jne
mov
mov
jle
xor
rcr
dec
dec
mov
jno
insb
shll
push
pusha
mov
dec
imul
xchg
les
xchg
push
jbe
ret
fdivr
adc
js
and
push
dec
in
sub
push
out
pop
push
sub
mov
aam
or
adc
cmpsl
shll
call
das
rclb
test
cmp
inc
push
out
fistpll
sub
les
pop
in
adc
add
xor
je
inc
imul
jno
mov
jb
xchg
fdivrs
or
sub
in
sbb
and
mov
xchg
xor
test
outsl
das
mov
icebp
add
shl
lahf
les
out
mov
pop
and
icebp
jbe
sub
setns
or
adc
jge
or
and
push
popf
cmpsb
mov
push
cmp
mov
jl
adc
jmp
ror
rol
rcr
and
mov
test
bt
push
pushl
cmp
jmp
mov
rolb
inc
testl
insl
xchg
lods
fsub
icebp
add
and
cmpsl
or
jno
inc
or
push
enter
push
xchg
outsb
xchg
into
arpl
jns
sahf
push
mov
jmp
imul
cmp
mov
xchg
mov
mov
movsl
notb
cmp
pop
jmp
mov
fwait
cmp
mov
mov
jl
stos
or
mov
mov
aaa
jl
sahf
aad
sbb
xchg
lods
int
jp
inc
lea
jo
in
fcoms
push
movsl
leave
in
xor
xchg
fldl
decl
dec
or
pop
aaa
sar
xchg
mov
pop
lahf
mov
lret
sbb
sub
mov
in
xor
hlt
les
setnp
cltd
sahf
sbb
popf
cmc
pop
pop
jno
loope
insl
and
mov
inc
add
push
mov
int
pushl
xlat
popa
cmc
aas
and
loopne
sbb
cmpb
ret
mov
les
dec
xchg
mov
imul
daa
sub
lret
or
mov
mov
lret
in
mov
lret
arpl
inc
lahf
mov
cmpsl
dec
ljmp
stos
ds
mov
into
adc
ja
mov
jle
mov
dec
push
mov
aas
lea
adc
negl
inc
inc
mov
push
cmc
lahf
les
incb
mov
nop
stos
jge
dec
xchg
popf
decl
jecxz
jbe
adcl
sub
ret
lods
hlt
xor
fcmovb
test
sbb
lahf
scas
out
jecxz
bound
shlb
xchg
dec
ret
ret
out
pusha
fwait
movb
jmp
inc
movsl
sub
inc
lcall
iret
loop
bound
nop
shll
push
pop
cmpsl
enter
popa
scas
cmpsl
push
gs
or
ret
mov
add
es
shr
test
clc
leave
or
fnstcw
pop
dec
jae
jle
cmp
adc
adc
data16
xlat
je,pt
or
mov
imul
sub
or
push
xchg
sar
mov
stc
pushl
stc
test
add
cmc
movzwl
shrd
bsr
sar
mov
clc
jmp
in
nop
inc
imul
or
push
mov
ds
lea
push
ret
loop
jg
sbb
mov
push
xchg
dec
sahf
clc
loop
add
xchg
aas
adc
pusha
push
or
aam
scas
std
mov
arpl
add
lret
xor
scas
adc
cwtl
mov
mov
dec
sub
test
add
inc
and
jmp
xor
out
inc
push
push
or
lahf
mov
setb
push
mov
push
movw
mov
lea
jmp
bt
stc
add
stc
call
scas
fadd
inc
imul
enter
jg
loop
and
pop
add
stos
sub
stos
ja
inc
inc
cmp
push
jp
adc
sub
pop
repz
insl
scas
test
bound
sub
inc
addr16
mov
fcmove
repnz
stos
inc
or
lret
icebp
mov
icebp
mov
cmpl
pop
fisttpl
pushf
in
push
adc
push
push
cwtl
lods
out
and
int3
loopne
jns
enter
shl
push
sub
add
inc
mov
arpl
imul
fnstsw
stc
mov
mov
pop
orl
sti
mov
xlat
mov
cwtl
cmpsl
or
flds
shl
dec
ret
jg
mov
mov
or
iret
shrb
mov
xor
int3
sub
lock
add
push
sub
scas
enter
leave
inc
ljmp
sar
inc
imul
mov
jg
cmpsb
fisttps
xor
stc
pop
or
hlt
sbb
add
jno
insl
jmp
xor
lock
jb
aas
pop
dec
xlat
xor
mov
xchg
imul
repz
mov
cli
push
jae
sti
xchg
mov
loope
jae
xor
psubd
mov
dec
sub
xchg
xchg
jae
dec
pop
fdiv
and
lods
lock
push
es
push
sti
fs
int
pusha
mov
jmp
inc
adc
inc
imul
rolb
adc
je
popf
out
aaa
or
cs
leave
push
fdiv
xor
mov
lcall
push
fimull
mov
fsubl
lcall
roll
test
lods
mov
popf
dec
cld
push
jno
subb
mov
nop
push
dec
rorl
outsb
out
fistpll
lock
loope
and
aam
in
mov
movsl
push
inc
or
mov
dec
xor
mov
fnstenv
nop
pushf
fmull
sub
jb
mov
cld
inc
in
jg
ljmp
gs
test
jg
enter
shl
push
out
mov
jecxz
sub
andb
fnsave
and
xor
fadds
pop
rcrl
dec
add
inc
faddl
arpl
xchg
nop
mov
jecxz
loope
push
mov
pop
out
imul
iret
scas
out
movsb
sbb
lock
ss
xchg
sub
sahf
sbbl
lcall
outsb
movsl
stos
shr
inc
sbb
sti
aam
aas
inc
inc
insb
and
inc
imul
sar
adc
je
stos
mov
xchg
scas
sahf
mov
and
adc
mov
and
lret
xor
cmp
jp
fwait
repz
adc
hlt
test
push
or
xor
fidivrl
cmc
and
loope
push
sub
fldenv
xor
sub
lahf
push
add
mov
cmp
dec
xor
dec
sub
lds
mov
outsb
ja
in
inc
push
xchg
sahf
and
mov
add
mov
inc
imul
das
jl
cmpsl
fstp
adc
repz
mov
push
xchg
ret
adc
dec
pop
aas
adc
mov
stc
lods
shlb
jge
xchg
mov
ds
adc
scas
add
ret
or
int
cltd
loopne
loope
mov
jmp
movsl
idivl
pop
push
mov
pop
ret
lds
sub
push
ss
leave
loop
jp
mov
mov
push
inc
xchg
sub
and
jo
lret
add
inc
shl
sbb
mov
int
cmp
xor
sbb
scas
cmp
fmuls
inc
sub
mov
cmp
sub
data16
test
fbld
cmpsb
pop
fistpll
js
out
cmp
fsubs
sbb
loop
imul
jecxz
cmpsl
imul
mov
xchg
inc
in
shrl
sbb
cmp
fsubr
lea
sbb
mov
sub
lret
add
shrl
dec
dec
scas
and
jle
pop
scas
int
pop
addr16
cmc
sbb
lret
xor
push
lret
jo
mov
fsts
inc
jno
int3
jp
mov
pusha
cmp
sbb
xor
pop
inc
mov
sbb
jns
inc
sbb
or
out
ret
nop
ret
add
jb
ret
or
dec
inc
pop
jb
icebp
hlt
test
andb
xor
imul
fwait
xor
inc
fidivrl
pop
inc
out
push
xor
or
sahf
mov
cld
pop
and
dec
jae
leave
movsb
cmp
fldt
ja
ljmp
inc
pop
add
scas
je
inc
cmpb
ss
nop
inc
push
xor
cmp
iret
in
fs
stc
mov
outsl
outsl
adc
mov
sub
adcb
push
and
or
movb
mov
push
xchg
and
add
cmpsb
fidivs
mov
mov
sub
dec
push
pop
inc
cmp
xchg
ret
xor
mov
popf
je
stc
mov
push
dec
adc
xlat
jmp
stc
jle
movsl
push
sub
test
push
repnz
mov
std
xchg
fwait
dec
add
sti
and
inc
leave
push
mov
inc
adc
add
adcb
leave
stc
mov
mov
xchg
cmp
xchg
shr
clc
push
inc
ja
mov
adcb
or
das
cwtl
subl
movsb
add
push
lret
or
or
and
push
xor
pop
xor
adc
push
cmc
pusha
and
mov
ja
jae
sub
mov
repz
enter
icebp
insb
mov
fs
aad
rcll
aaa
insb
imul
arpl
clc
dec
xor
sahf
mov
dec
test
cmpsl
loopne
inc
bound
push
bound
inc
imul
lahf
xor
outsb
pop
push
dec
imul
jle
mov
jnp
fstpt
mov
outsl
fildl
test
popa
mov
adc
out
mov
fidivrs
inc
sub
mov
lods
scas
mov
dec
clc
mov
loope
enter
popf
mov
pop
and
mov
mov
popf
mov
rorl
push
xchg
mov
add
inc
jns
lahf
jecxz
inc
gs
xchg
add
pop
test
xchg
lods
loopne
dec
psubsb
cld
dec
inc
int3
call
cmpsb
cmpsl
xchg
xor
sub
dec
in
push
mov
jnp
loop
adc
les
pushf
insb
or
or
push
inc
xchg
enter
cmpsb
ret
fdivs
mov
pushf
mov
stos
in
push
bound
mov
mov
sub
mov
inc
jge
in
repz
cmp
insb
in
mov
lds
test
imul
push
movsl
dec
jge
sbb
dec
sbb
or
xchg
je
cmpsb
push
imul
xchg
sbbl
lea
fsub
xchg
fiaddl
xor
test
repz
and
mov
sub
stc
or
addr16
ret
ret
mov
pushf
les
inc
mov
or
imul
dec
cmpb
xor
add
in
stc
movsl
adc
sbb
push
xor
jg
sub
lret
pop
jle
into
mov
dec
push
jne
cmp
lods
xchg
rcll
lock
mov
jbe
mov
xor
lret
ds
lea
mov
ret
dec
push
pusha
popf
ror
mov
xor
jmp
lea
call
add
rol
mov
pusha
cmpb
pushl
push
lea
jne
movsbw
sub
rcl
sbb
mov
jmp
pop
mov
mov
sub
inc
mov
clc
xlat
loopne
sub
jne
pop
out
mov
insl
cltd
fdivr
cmp
push
xchg
pushf
lcall
cmp
add
sahf
inc
xor
shlb
xorb
ret
xchg
scas
mov
sub
pop
popf
std
push
xor
push
dec
pop
je
dec
sbb
int3
popf
jl
sub
imul
push
sub
outsb
lods
mov
outsl
lods
adc
mov
xchg
rclb
pop
clc
call
icebp
ret
imul
mov
or
mov
aad
cmpsb
sti
jle
dec
add
dec
pushf
cld
neg
jns
mov
scas
outsb
testb
mov
lret
pop
pop
fdivp
adc
and
not
bswap
das
in
lret
or
add
or
outsb
inc
and
rcr
out
imul
cmpsl
sbb
and
movl
push
push
movl
pusha
lea
jmp
jne
pusha
movl
movl
mov
movl
movb
pushl
pushf
pusha
lea
jmp
cwtl
movzbw
movzbw
mov
mov
cwtl
call
fistl
jb
aad
pop
and
inc
imul
sub
addl
gs
jg
dec
or
or
push
stc
adc
popa
or
ljmp
bts
dec
dec
fimull
mov
dec
fcompl
inc
fdivrs
aaa
xchg
push
lods
fcmovnu
sbb
popa
pop
sahf
mov
out
push
insl
dec
push
push
pop
hlt
pop
int
mov
cmp
filds
mov
outsb
imul
ret
sbb
mov
jb
in
repz
push
cli
pop
cs
std
leave
iret
out
fadd
pop
enter
insl
test
popf
jbe
sbb
cmpsl
out
cmpsl
jne
aas
pusha
out
xor
inc
cli
pusha
cs
add
into
add
int
outsb
or
cmpsb
jae
nop
and
roll
mov
rcr
jae
inc
sub
xchg
int3
push
inc
push
dec
jl
nop
aam
add
push
in
test
cmp
mov
jle
lods
scas
int3
leave
add
test
sub
jmp
xor
dec
cmp
xchg
inc
popf
aaa
dec
popf
push
push
add
icebp
mov
jbe
std
jl
test
mov
enter
popf
subl
sub
xor
push
fnstenv
outsl
push
jb
mov
mov
push
push
jae
add
insl
mov
dec
sub
imul
sub
fdivr
cmp
rcrl
xor
add
or
out
jae
cmp
pop
lahf
add
sbb
insb
xorl
ficompl
lcall
movsl
or
ret
loopne
pop
loopne
lock
jecxz
xor
and
lock
xchg
call
loopne
xchg
in
mov
das
xchg
insb
push
cmp
xchg
rorb
daa
dec
jge
stos
lods
ljmp
or
and
jb
addr16
imul
out
add
xor
stc
cmp
pushl
popl
push
call
or
jb
cld
sbb
test
or
push
push
out
stos
mov
sbb
pushf
push
jp
rcll
xchg
incb
ret
shrl
inc
lcall
lods
fwait
divl
push
les
xchg
mov
pop
add
inc
jns
bound
pop
or
je
mulb
jp
sbb
shlb
into
or
inc
int3
sbb
sub
push
push
out
enter
xor
gs
imull
lcall
rolb
add
scas
fnstcw
aaa
pop
sahf
mov
ja
leave
roll
outsl
sti
out
in
mov
inc
call
dec
fmul
stos
mov
sbb
inc
mov
mov
in
nop
scas
lea
mov
push
sahf
in
and
aad
xlat
xor
mov
xor
and
mov
jle
pop
ss
sub
cmp
mov
jmp
imul
arpl
xchg
enter
movsb
sbb
cwtl
loop
lea
jne
setnp
movb
pushf
mov
mov
ja
not
lea
lea
lea
pusha
pusha
pushf
movl
movb
mov
movw
pushl
ret
xchg
dec
pushf
xor
mov
addr16
hlt
cmp
push
cltd
loop
jo
mov
xchg
inc
data16
dec
je
movsb
fwait
inc
sahf
xor
aaa
insl
mov
push
or
xchg
test
inc
addb
push
and
push
int3
adc
pop
arpl
ljmp
jne
jp
aaa
icebp
das
adc
sub
loopne
aas
mov
imul
dec
js
pop
or
lods
xchg
dec
jp
lds
sbbb
les
subl
fs
pushl
ret
cmp
repnz
out
daa
and
addr16
mov
and
je
pop
jg
lahf
imul
fmulp
jb
mov
loop
inc
bound
or
mov
dec
jecxz
sub
cmp
mov
add
xchg
inc
pop
les
pop
jmp
xchg
fdivl
adcl
mov
or
add
aas
and
xchg
mov
clc
sub
mov
add
cs
and
and
mov
aaa
cmp
cs
clc
add
movw
mov
pushl
pushf
lea
jne
pusha
pushfw
popw
clc
jmp
divb
fwait
xor
sub
cmp
cli
or
jne
enter
pusha
push
ja
test
push
cmp
push
inc
outsb
inc
shlb
aaa
jecxz
push
stos
test
xchg
mov
pop
cmp
dec
or
push
movsb
xor
arpl
or
inc
or
out
pop
aaa
cmp
fcomi
je
dec
adc
stc
dec
int
adc
mov
imul
or
add
mov
xchg
mov
lahf
or
add
inc
lds
push
outsb
mov
out
sbb
test
stos
insl
jmp
mov
mov
cli
and
xchg
dec
mov
sub
push
cmp
sub
mov
pop
add
mov
inc
push
jle,pn
out
xor
mov
in
adc
xchg
ljmp
add
xchg
mov
pop
and
cwtl
add
dec
sub
mov
xor
add
push
xor
add
insb
mov
xchg
fistl
push
inc
lods
lcall
adc
jae
sub
dec
scas
xchg
jae
loopne
das
or
hlt
aaa
pop
xlat
repnz
jp
rcl
ds
decb
jl
mov
dec
xchg
xchg
test
adc
inc
push
push
ja
roll
jmp
jle
hlt
xchg
inc
stc
iret
test
xchg
stos
pop
inc
sbb
jmp
out
xlat
add
mov
shrl
repz
add
xlat
mov
xchg
imul
push
aaa
aad
out
pop
pop
cmpsl
lahf
or
add
sbb
adc
jmp
cwtl
into
iret
or
push
pop
in
aad
xchg
gs
fdivrl
dec
test
and
imul
pop
pop
add
repnz
mov
daa
dec
movsb
mov
pop
popa
cltd
cs
gs
mov
xor
dec
push
jnp
push
ds
jecxz
lods
outsl
sbb
stos
sbb
cltd
divb
pop
mov
ljmp
mov
or
mov
mull
arpl
mov
xor
jae
into
call
in
xlat
or
aad
or
mov
imul
shl
pop
add
int
dec
clc
and
scas
add
popa
xchg
arpl
mov
out
sub
push
hlt
ss
and
lock
lods
push
mov
cmp
stc
das
dec
adc
jmp
loopne
jae
sti
xor
jmp
pop
arpl
test
and
or
ss
xchg
rcrl
jg
inc
sbb
adc
test
xor
xchg
cmp
push
insb
xorb
stc
stc
mov
ljmp
gs
cmp
aas
cld
mov
and
cmc
sub
lods
rol
push
dec
popf
mov
jp
pop
push
jl
adc
aaa
aam
pop
and
sbbb
or
cmp
bound
subl
sti
fistl
pushf
mov
cmc
jmp
mov
mov
call
movb
movl
mov
push
push
mov
movl
pushf
mov
pusha
lea
jmp
xchg
cli
aam
imul
scas
enter
jno
rol
fidivs
pop
mov
dec
loop
jg
push
add
push
jae,pn
cli
mov
inc
mov
jmp
adc
rol
mov
scas
and
add
out
inc
enter
sbb
bound
push
incb
subb
mov
xchg
addl
neg
mov
daa
ss
scas
or
add
xor
cmp
add
push
push
mov
pop
pusha
xchg
xchg
les
in
xchg
add
push
xor
test
mov
inc
pop
cmc
add
ficompl
ficoml
push
or
mov
pop
adc
fcos
aam
dec
cmpsb
enter
mov
in
das
sti
sahf
jge
jo
loope
push
or
pop
insb
mov
popf
sahf
sbb
xchg
hlt
adc
xor
xor
movsl
or
lods
jnp
adc
lds
shl
ss
push
jl
mov
adc
xor
mov
push
imul
jae
popa
addr16
imul
cmp
imul
jbe
stos
mov
enter
dec
add
mov
xchg
mov
gs
scas
outsb
addb
push
xor
inc
ret
jg
dec
dec
sbb
jp
into
bound
arpl
and
test
adc
movsl
test
mov
add
pop
pushf
fidivrl
aad
push
daa
mov
rcr
mov
sbb
mov
add
jge
push
insb
sarb
add
arpl
fs
xor
cs
insb
add
mov
fsts
push
ret
out
mov
cmp
and
lret
loopne
sbb
mov
loopne
xchg
cld
loopne
sub
xchg
jmp
shr
adc
lods
add
in
dec
jnp
cmp
jo
mov
in
xor
in
shl
shr
aad
or
jl
out
xchg
insb
fsub
je
jo
push
and
gs
scas
mov
loopne
lods
sub
and
mov
mulb
mov
dec
pusha
in
jmp
int
ljmp
lcall
and
in
dec
lcall
mov
jne
push
push
pusha
xchg
push
jmp
pusha
pop
gs
test
sbb
and
mov
into
mov
or
sarb
cmpb
mov
fstpt
movsl
push
sub
iret
sub
xor
inc
out
in
inc
test
xchg
mov
loope
pop
out
je
adc
ret
inc
loopne
dec
loope
mov
test
fs
xor
push
test
out
push
xchg
outsl
inc
jb
xor
inc
in
pusha
dec
push
loopne
lods
es
add
push
test
out
push
int3
loope
movsb
and
xor
lods
out
loopne
mov
jecxz
inc
iret
pop
out
xor
in
addl
in
in
mov
and
jbe
sahf
ficompl
shlb
mov
inc
aad
jne
shlb
leave
mov
int
stos
or
clc
jl
test
cs
pop
lock
pushf
imul
imul
ljmp
fcompl
mov
test
mov
ja
loope
cli
test
push
leave
and
stos
pop
das
outsb
jecxz
pop
sub
sti
mov
fimull
out
imul
jnp
jo
out
push
inc
xchg
dec
and
outsl
ljmp
inc
insb
mov
es
outsb
dec
lret
pop
sub
jo
xor
jg
or
ds
adc
pusha
andl
jae
lods
add
mov
fnstsw
into
push
sub
popa
sub
es
cmpsl
scas
imul
cmp
and
push
fldl
fistps
fs
cmpsl
mov
jmp
in
scas
roll
daa
xchg
clc
out
lret
xor
push
test
mov
push
scas
or
out
cmp
sbb
scas
leave
nop
sub
scas
inc
xchg
outsb
lcall
repz
cmpsl
test
and
mov
int
and
xlat
cmpsl
dec
fsubl
inc
mov
pop
push
shrb
jno
scas
movsl
inc
movsb
xchg
call
mov
adc
mov
cmp
cmpsb
add
inc
mov
jge
xchg
cmp
bound
imul
pop
orl
or
push
clc
out
push
cld
pusha
inc
psrlw
mov
cmp
jae
push
loope
scas
adcb
pop
xor
pop
xchg
xor
xchg
or
rcrb
shrb
ret
jne
mov
mov
sahf
xor
jl
xchg
lods
stos
inc
sub
scas
xchg
stos
ss
cmp
into
sub
mov
jmp
xchg
or
cs
stos
rcll
push
sub
sti
shll
comiss
pusha
mov
jmp
push
popa
mov
outsb
mov
lds
push
xor
dec
or
es
shrl
adc
shrd
scas
pop
cmp
xor
push
out
test
test
shlb
mov
mov
adc
jg
pushf
xor
scas
xchg
or
rorb
push
push
in
push
sti
in
xchg
mov
push
stc
mov
mov
jge
mov
xchg
loope
dec
adc
jmp
in
push
cmp
and
xchg
in
movsl
leave
pusha
mov
sbb
mov
jmp
mov
scas
xor
icebp
inc
gs
lret
dec
mov
icebp
shl
pusha
ljmp
lods
add
pusha
push
inc
aam
iret
adc
pusha
lods
fwait
cltd
or
jnp
lock
pusha
repz
mov
into
pusha
adc
shr
mov
jmp
in
bound
cmc
lahf
pushf
outsl
pusha
and
jecxz
js
pushf
rorl
shr
mov
je
clc
ljmp
sarl
pop
sub
aas
scas
adc
dec
int
frstor
cmp
push
mov
lret
test
mov
sub
cwtl
movsb
out
and
push
stc
pop
shlb
inc
xor
mov
mov
or
mov
adc
jle
mov
pop
lds
jne
repz
scas
push
rol
stos
shlb
pop
cltd
fistpll
sbb
rorb
cmpsl
ret
sub
shll
inc
cs
in
outsb
add
jns
or
lods
loopne
sub
inc
add
mov
jno
pop
mov
inc
pusha
js
sbb
push
and
nop
cmp
cmc
shr
pusha
ljmp
inc
js
stos
imul
mov
push
fbld
push
test
jmp
jmp
add
cld
loop
sarb
test
std
rclb
push
push
xor
ss
loope
xchg
imul
stos
push
dec
add
jg
leave
push
scas
inc
call
dec
sub
leave
loop
stos
cltd
push
test
into
jns
sbb
jae
inc
mov
push
push
adc
test
jle
adc
jns
xor
pop
push
jb
jns
adc
sub
ljmp
pusha
loopne
into
in
mov
fsubp
push
out
in
subl
pop
loopne
and
push
shlb
into
lods
movsl
pushw
lcall
leave
cld
pusha
fdivl
ficoml
fwait
lahf
mov
jl
push
cmp
xor
push
adc
inc
xchg
movsb
adc
and
cmc
loope
jne
inc
hlt
ret
inc
out
je
in
out
jmp
data16
pushl
rcl
mov
aam
mov
outsb
add
iret
rcl
in
movsl
mov
mov
shll
scas
lods
inc
aad
dec
sti
fs
jmp
test
hlt
add
aas
mov
jno
fldl2t
push
in
cmpsb
insl
pop
mov
sbbl
jne
add
imul
hlt
into
dec
adcl
xchg
push
mov
sbb
mov
fsubr
imul
jae
inc
repnz
mov
jne
arpl
int
xchg
fcomi
and
out
je
lock
push
mov
int3
out
les
scas
fsubp
and
sub
loope
hlt
addl
adc
enter
test
outsl
enter
mov
hlt
jns
insb
inc
mov
outsl
push
scas
mov
ja
adc
aas
je
push
lahf
adc
shlb
fidivrs
push
adc
ret
in
jmp
add
test
xchg
dec
rcrb
adc
cltd
ljmp
ljmp
retw
sahf
stos
out
push
sub
push
scas
and
fwait
stos
insb
cld
or
xchg
js
movups
or
scas
out
dec
push
sahf
adc
loopne
sub
jle
mov
xor
mov
cmp
push
inc
add
push
push
enter
ficompl
sub
insl
ljmp
add
mov
jmp
sub
aam
push
mov
inc
mov
fsubrs
sub
lods
sub
iret
pop
jmp
mov
js
mov
jp
mov
sub
insb
shrl
mov
cmc
ret
fs
xor
aam
jo
add
movhps
push
neg
inc
call
push
faddl
stc
sbb
out
push
in
out
in
adcb
into
inc
jbe
and
in
pop
sbb
scas
outsb
xchg
les
lret
shll
orl
pop
xor
cs
iret
out
fimuls
jne
addr16
imul
dec
fsubr
fisubrs
call
les
scas
out
les
test
mov
faddp
lahf
fdivrp
scas
lods
xchg
rcrb
sahf
push
jae
mov
scas
lret
dec
iret
stos
sub
stos
sti
pop
out
xlat
or
add
mov
jne
inc
cmp
pusha
push
add
out
js
and
jmp
inc
les
int
fwait
mov
jmp
gs
and
jae
inc
ss
jb
je
popa
out
aam
sbb
inc
inc
in
sub
pop
cmc
cmp
jecxz
mov
push
or
sub
adc
scas
jnp
jg
xchg
rol
add
fs
xchg
sub
imul
loopne
icebp
std
push
stc
pushf
mov
inc
pushf
loopne
mov
shrb
dec
fwait
mov
out
pusha
or
dec
fwait
lahf
push
mov
lret
adc
lods
jmp
int3
sub
lret
add
aas
scas
out
iret
lods
xor
mov
cmp
pop
in
push
out
subl
mov
fldt
out
and
mov
int
in
insl
lret
sub
loopne
xor
scas
dec
int3
mov
dec
popf
mov
add
pushf
sti
fldenv
push
dec
pop
jmp
add
scas
imul
sbbb
lock
fldt
mov
push
jnp
fisubs
mov
and
jp
lgs
xchg
stc
jne
test
and
jne
insl
mov
enter
scas
mov
cli
sbb
aas
mov
in
jecxz
push
dec
out
daa
subb
arpl
or
and
test
cwtl
xor
inc
jg
mov
add
sub
mov
jo
dec
and
mov
das
loopne
cmpb
pop
jl
xchg
insb
inc
jne
addr16
out
addr16
cmp
cli
loop
fisubrl
scas
lods
daa
adc
push
jge
sbb
out
test
das
sub
ror
scas
pop
imul
or
pop
push
popa
subb
jno
pop
std
jmp
rol
pushf
gs
cli
adc
dec
add
outsb
rorb
stc
xlat
and
and
lds
mov
dec
std
test
leave
mov
test
jmp
stos
int
mov
leave
faddl
pop
stos
lods
push
loopne
cmpb
fsubrl
mov
mov
mov
cmpb
mov
in
cmpsl
call
pusha
iret
push
out
lret
enter
lods
outsb
scas
mov
cmp
fsubrl
clc
test
loopne
mov
loopne
insl
pusha
insb
movb
pusha
daa
mov
lock
addr16
push
dec
test
pop
or
add
test
mov
in
loop
movsb
push
in
mov
imul
out
pop
mov
and
pusha
add
xor
mov
push
rcl
ror
lods
dec
push
scas
cwtl
insb
enter
mov
jns
jge
fnstsw
push
pusha
sub
in
andl
lret
es
xor
lods
out
scas
xor
rcr
insb
mov
and
mov
scas
iret
subb
into
pusha
push
iret
push
scas
mov
fbstp
loopne
inc
into
and
add
and
loopne
fistps
iret
iret
scas
jecxz
mov
lods
arpl
scas
in
jg
and
push
pop
movsb
iret
inc
scas
in
xor
es
and
add
daa
into
out
lods
data16
iret
into
scas
out
mov
lods
cmpsl
sahf
pop
sub
mov
jmp
pop
pop
imul
aas
xlat
ljmp
push
xrstor
into
out
lods
sub
pop
imul
scas
stos
insb
mov
lods
sub
lea
in
fs
jp
loope
dec
cmp
sbb
ljmp
mov
pop
insb
dec
cmpsl
loope
pusha
jo
add
lock
xor
lahf
rclb
jg
fmull
gs
cli
mov
sub
test
adc
scas
sahf
loope
call
lea
xor
das
popf
int
dec
add
mov
jge
out
mov
out
nop
loope
jp
sub
lret
loope
lcall
adc
out
fmulp
mov
test
mov
mov
out
mov
mov
xor
mov
cmpsl
rol
push
xlat
outsl
inc
jmp
sbbb
and
mov
lock
push
lahf
iret
dec
inc
inc
xchg
out
cli
sarb
jg
xor
and
push
lret
and
xlat
rclb
add
out
lret
shlb
leave
fldl
int3
jle
into
adc
jmp
jge
fbld
xchg
rcl
ficoms
add
sarb
sbb
sbb
lahf
push
call
ficomps
jg
outsl
pusha
stos
xor
out
outsl
mov
adc
xor
jl
mov
cmpsb
rcrb
jg
push
jno
dec
rcrb
nop
lea
rol
cmpsl
loopne
outsb
sarb
pusha
sahf
sarb
negl
dec
cwtl
mov
jle
subb
rcr
stos
int
popf
insb
outsb
cs
rclb
adc
pop
push
int
popf
xor
dec
out
mov
aas
pop
jmp
lds
pop
es
sqrtps
loopne
sub
and
mov
jbe
xlat
rcr
jmp
mov
test
lods
jmp
ror
cs
sub
lcall
and
jo
jmp
adc
mov
pop
outsb
jge
inc
dec
lahf
scas
ror
add
rorb
fcomps
rorl
push
std
shr
push
scas
stos
rcrb
adc
sub
das
loopne
jecxz
pop
shrb
push
inc
shrb
jl
shlb
out
sar
call
jmp
test
push
rcrb
int3
and
scas
xor
dec
jmp
outsl
cwtl
stos
and
stos
jmp
outsb
sub
fimuls
outsl
call
nop
push
lds
call
in
jmp
shlb
xor
pop
mov
js
mov
popf
insl
add
fimuls
stos
jmp
data16
inc
out
mov
jnp
push
imul
js
push
dec
out
out
push
ljmp
outsb
mov
pop
sub
dec
lahf
sub
and
scas
or
mov
loopne
pop
mov
rcr
ffreep
lds
lret
and
lahf
int
sub
pusha
lock
in
lcall
pop
adc
pushf
jp
bsr
test
mov
cmp
inc
das
cld
rcl
jmp
clc
shr
jge
insl
dec
shl
jmp
aad
jmp
leave
and
pop
cltd
inc
or
mov
insl
add
mov
pop
repz
ffree
pop
int
push
xchg
rorb
call
jge
cmp
sub
dec
cs
inc
sbb
pusha
lods
or
rolb
fdivp
mov
out
xor
cmp
test
pusha
cld
inc
and
stos
mov
mov
mov
outsb
rcl
fs
lods
xor
scas
mov
jmp
insb
rorb
popf
shlb
jl
jb
dec
inc
cmpsl
xor
int
outsl
inc
xchg
rcl
lds
scas
cli
or
sub
push
call
out
rcl
mov
push
nop
lea
xor
mov
mov
leave
add
push
rcr
fs
int3
lss
mov
aam
jmp
push
adc
add
dec
fs
call
xchg
adc
mov
fdivrp
rcr
mov
cs
inc
sarb
inc
call
out
addb
in
jmp
out
xchg
rolb
push
sarb
xchg
int
fists
in
inc
jbe
adc
nop
das
rclb
lret
pusha
aas
test
lods
fnstsw
jle
xadd
loopne
jmp
daa
mov
outsb
push
push
jge
shr
fiadds
jmp
out
aad
mov
sarb
outsl
fisubs
mov
pushl
mov
cs
or
ficompl
cmpsl
das
inc
mov
sarl
pmaxub
jne
jge
push
push
nop
dec
popa
out
popl
popf
sarb
sub
in
push
jmp
outsl
sub
and
shr
xlat
mov
cwtl
push
jmp
sarb
pop
fnsave
out
jle
push
imul
daa
shrb
in
aam
adc
jge
shlb
mov
and
xchg
jb
shl
lea
rolb
inc
push
imul
xchg
mov
adc
add
hlt
jbe
in
lcall
adc
imul
je
mov
mov
fnstsw
scas
dec
rclb
mov
psrlw
inc
test
rol
lahf
and
adc
fsubl
aad
push
outsl
int
iret
inc
or
outsl
and
lods
push
lea
outsb
cwtl
mov
xlat
dec
ficomps
call
test
lahf
fmulp
xor
and
inc
xchg
mov
mov
call
push
adc
mov
adc
shlb
inc
mov
mov
shlb
shrb
xlat
rol
lahf
shr
and
cwtl
int3
mov
or
lret
push
sarb
and
jmp
bound
in
rolb
inc
outsb
or
xchg
adc
sarb
loopne
adc
add
iret
repnz
loopne
lods
nop
pop
loop
outsl
fs
dec
call
int
shrl
popf
rcr
inc
es
into
scas
outsb
test
jl
fidivrs
xchg
jmp
rcrb
call
subl
ficomps
xchg
xor
roll
popa
jmp
push
loopne
and
inc
jmp
push
rcl
sbb
out
inc
xchg
rcl
sarl
mov
outsb
inc
adc
mov
outsl
and
adc
adc
rolb
into
pusha
icebp
into
jg
or
lods
xor
or
adc
or
mov
fmul
push
rcr
outsl
mov
push
rol
lods
cli
subb
push
lea
jo
pusha
or
cmc
push
mov
push
and
rcrb
push
xor
lds
and
fcoms
in
rol
cmpsl
loopne
inc
sbb
push
rclb
jle
pop
lahf
fadds
lcall
jge
test
adc
pop
outsl
iret
xchg
dec
aas
rcr
mov
mov
shrb
jl
loop
xor
fs
and
daa
and
stos
mov
add
stos
cli
ljmp
rolb
out
fisttpl
fisttpll
fs
test
jnp
and
rorb
push
cmp
aas
sahf
insl
xchg
dec
dec
shrb
fdivrl
lods
mov
int
pusha
mov
pop
pop
fmuls
lods
inc
outsl
mov
and
adc
push
shrb
adc
mov
rcll
and
punpckldq
and
lret
faddp
sub
adc
push
and
xchg
shr
sbb
lods
ret
xlat
outsl
and
cwtl
mov
push
sub
clc
mov
xor
stc
rcrl
shlb
scas
pushf
outsb
outsb
shrb
sbb
and
out
inc
rclb
ds
outsl
scas
lods
scas
loopne
mov
adc
inc
mov
scas
pop
pop
shrb
pusha
loopne
push
int3
nop
mov
pop
loopne
outsb
rcrb
shrb
push
rorb
pop
int
popf
fisttps
pop
shlb
jge
lea
and
inc
das
add
aam
jl
loop
mov
rclb
mov
lret
arpl
pop
push
das
and
sub
imul
lahf
mov
mov
scas
sub
lock
and
insb
nop
into
and
xor
mov
test
lock
jge
pop
xor
fidivrs
sub
nop
aas
dec
stos
loopne
add
outsl
pusha
pusha
jle
sub
mov
cmpb
pop
mov
pop
cs
lock
clc
mov
inc
test
inc
addl
popf
jno
or
inc
mov
inc
cs
push
aas
shlb
out
outsb
xor
stos
mov
pusha
sbb
ljmp
shrb
iret
popf
shll
jg
imul
adc
outsb
lock
jo
inc
cld
in
push
das
mov
outsl
mov
insl
addr16
mov
insb
clts
sub
pusha
inc
xchg
int
subb
in
scas
or
int
outsb
and
stos
fs
pop
loop
subl
push
pushf
and
loope
andb
daa
xor
adc
out
addr16
add
pop
outsb
scas
mov
cmpb
lock
mov
adc
loopne
mov
test
mov
sbb
scas
sub
insl
fcmovnu
add
mov
sub
fistpll
dec
xor
lods
fisttpl
mov
arpl
insl
popa
lahf
test
test
scas
sarb
push
or
outsl
sub
popf
in
mov
imul
sub
pop
fisttpll
push
and
jle
inc
lret
pop
outsl
mov
in
bound
movsl
rcrb
test
stos
outsb
mov
inc
loopne
test
subb
jo
jge
out
sbb
fmul
mov
push
jg
fwait
push
or
inc
stos
jo
pop
push
imul
dec
pusha
cwtl
bswap
fs
inc
lret
jle
imul
xorb
outsb
mov
ret
mov
lahf
adc
lock
data16
push
mov
pusha
test
addr16
lds
push
cmp
pusha
lea
in
fdivrs
and
mov
pusha
das
mov
inc
stos
shr
call
pusha
pop
adc
inc
stos
and
inc
fisttpl
out
or
or
nop
push
push
out
or
mov
mov
stos
lea
es
fildl
pop
loop
pushf
mov
add
add
out
in
sahf
inc
cmp
bound
out
cmp
push
pop
int3
fs
scas
outsb
loopne
xlat
dec
lea
or
push
out
xchg
fisubrs
arpl
out
lods
jle
gs
pusha
inc
aas
insb
iret
test
jo
fsubr
jle
jl
push
mov
dec
in
rclb
aas
cmpsb
in
adcl
es
push
in
out
mov
stos
andl
pop
jmp
add
and
mov
out
call
loopne
inc
in
call
pop
outsl
pusha
lods
push
decl
loop
lock
in
sbb
pop
mov
and
arpl
subl
outsl
scas
inc
pop
lcall
lds
inc
test
scas
inc
lods
sbb
inc
or
pop
pop
add
push
stos
mov
jmp
outsb
iret
jge
repnz
out
out
jg
insb
and
xor
sub
in
mov
push
pusha
adc
ljmp
inc
jge
outsl
enter
sbbl
adc
lret
ffreep
pop
and
iret
mov
sbb
sub
cmpsb
out
adc
lods
fstpt
out
das
pusha
in
ret
sub
nop
dec
and
or
aas
xchg
loope
sub
arpl
in
pop
fdivr
cmp
iret
aas
mov
popf
mov
out
xor
or
mov
outsb
scas
insb
xchg
jge,pt
sub
inc
lods
dec
iret
add
cmpsb
inc
out
and
xor
jecxz
lahf
outsl
out
fs
stos
shr
subb
shll
das
imul
addr16
stos
xor
movsb
ret
call
data16
dec
loopne
mov
test
push
push
pop
mov
jmp
das
jle
outsb
inc
ret
pusha
iret
es
and
lahf
dec
mov
out
arpl
daa
push
es
loope
mov
and
and
mov
loope
movsl
push
adcl
push
shll
push
sub
cmp
pushf
mov
ret
mov
in
sub
dec
imul
push
jge
scas
mov
imul
mov
fcomps
dec
xor
lock
adc
mov
cmp
out
lretw
lock
addr16
lods
movsb
aam
sbb
repz
addr16
mov
push
out
jns
pop
xor
sub
loopne
and
push
iret
scas
and
mov
into
lods
cmpsl
mov
and
sub
push
lahf
xor
xor
ret
enter
push
lcall
mov
aad
outsl
cmp
push
jecxz
add
roll
dec
pop
stos
inc
cwtl
call
inc
scas
pushl
arpl
dec
add
dec
dec
mov
and
imul
js
inc
rclb
add
dec
outsb
addr16
call
addr16
mov
and
mov
mov
adc
push
incb
fs
sbb
imul
push
shrl
and
test
mov
loopne
ljmp
daa
imul
int
or
test
int3
or
cmpsb
mov
out
out
iret
mov
cmpsb
gs
popa
sahf
outsb
sub
outsb
lret
adc
cli
and
or
push
inc
fimuls
mov
cmpsl
outsb
cmp
add
fsubrl
push
lea
rclb
data16
lods
or
push
mov
mov
mov
popf
testb
add
rorb
rolb
cmpsl
pusha
adc
lea
rcl
outsb
xchg
test
fsubrs
fisubl
stos
mov
mov
and
push
scas
das
scas
push
in
cmpsl
dec
mov
inc
int3
lds
ljmp
pop
loop
fsubs
jle
inc
push
push
dec
cmpsb
lods
cs
inc
mov
out
cmpsl
out
out
sbb
lds
daa
in
enter
imul
insb
outsb
call
insb
and
test
inc
cmovbe
vpaddb
loopne
arpl
loop
sub
and
or
sahf
sahf
jmp
sub
xchg
insl
das
ds
fmuls
call
fisubrl
sub
addr16
das
out
sub
mov
dec
test
enter
push
or
inc
lret
and
mov
lcall
movzwl
loopne
sbb
out
insb
mov
ljmp
out
fmul
cmpsl
fsub
mov
sub
and
inc
imul
loopne
add
scas
cmpsb
nop
leave
ljmp
ja
scas
ljmp
daa
in
jecxz
mov
inc
data16
xchg
rolb
cmp
cmpsb
movsb
enter
das
fadds
fsubs
in
jle
xchg
jmp
lea
xchg
pop
jmp
das
cmp
addr16
inc
dec
push
jne
fsubrp
jo
cmpsb
and
jle
das
out
mov
addr16
in
pop
dec
and
daa
xchg
call
dec
imul
push
mov
pusha
movsb
test
or
subb
mov
pop
mov
das
sub
lock
cmpsl
fucomip
mov
cs
in
sbb
les
sbb
orb
inc
and
and
mov
cmpsb
loope
mov
fisttpll
lret
ret
nop
dec
rclb
iret
and
or
inc
lret
inc
jle
lds
out
cld
pusha
xor
sahf
addr16
call
inc
pop
les
dec
push
in
xchg
movl
into
sahf
fxch
daa
insb
dec
adc
mov
inc
xor
dec
push
scas
test
sub
test
add
out
push
mov
sahf
outsb
cmp
pop
add
fsub
mov
lods
dec
out
in
mov
inc
lret
dec
lret
scas
in
push
in
xchg
test
out
int
iretw
and
loopne
dec
out
call
mov
or
or
les
mov
mov
mov
dec
and
cvtdq2ps
mov
imul
fucomi
nop
es
push
es
lea
data16
daa
sbb
inc
xchg
push
shl
jmp
pusha
dec
jle
loopne
fcomps
out
mov
xchg
nop
into
adc
or
sbb
fsubrs
dec
or
outsb
dec
dec
das
dec
or
popa
dec
push
nop
and
movsb
mov
fimull
test
iret
test
leave
test
cs
daa
mov
mov
inc
int
and
fsubr
push
into
les
rcr
mov
or
dec
or
daa
pop
mov
fisttpll
xchg
fadd
adc
js
add
mov
scas
les
data16
push
pop
loopne
popa
xchg
sub
in
push
or
pusha
repz
out
xor
fisubs
imul
mov
stos
xor
in
out
scas
sahf
adc
mov
daa
das
adc
nop
popf
or
out
push
lods
ret
mov
sti
sub
or
in
dec
shl
int
in
push
jmp
mov
inc
out
call
mov
lods
std
outsb
jle
es
into
push
mov
mov
mov
call
scas
and
outsl
mov
pusha
xchg
rcrl
nop
lds
decl
inc
inc
xchg
sub
sbb
pop
mov
popf
add
stos
adc
mov
mov
pusha
push
and
insb
out
call
jecxz
mov
inc
addl
pop
xchg
push
dec
push
int
clc
addb
insb
inc
push
add
xchg
inc
mov
loop
in
push
mov
sub
test
adcb
outsl
outsl
neg
enter
mov
fcmove
mov
enter
mov
lahf
push
sub
inc
shll
imul
pop
cmpsl
imul
mov
mov
inc
ret
loopne
xor
test
mov
outsb
mov
iret
frstor
imul
mov
cwtl
mov
adc
daa
pop
mov
int
stos
stos
daa
das
jae
movsb
adc
ret
mov
jmp
mov
or
out
jle,pn
sbb
or
and
fmul
daa
das
push
out
ret
popa
scas
xor
cmpl
stos
lods
or
in
mov
or
fwait
enter
sub
pop
push
sub
pop
add
loopne
and
push
test
push
add
lock
add
in
inc
pop
cmpsb
in
outsb
inc
jne
ror
adc
movsl
mov
je
pop
jmp
pusha
int
inc
pop
mov
pop
out
pushf
in
leave
pop
or
dec
daa
lds
addr16
pop
push
test
push
push
outsl
pop
lahf
mov
ljmp
sub
lock
lods
insl
cmpsl
and
dec
inc
jg
les
pop
lea
inc
lea
imul
les
and
and
insb
jmp
das
das
orb
or
push
xor
mov
cmc
inc
cmpb
call
mov
xor
push
mov
popf
and
fistpll
outsl
push
sub
ret
arpl
pop
and
lret
or
mov
enter
pop
xor
rolb
and
xor
xchg
ret
test
mov
movsl
movsb
shlb
sahf
lea
fildll
sub
adc
mov
fsubl
nop
or
add
stos
dec
movsl
fmul
inc
xchg
adc
lahf
adc
daa
insb
inc
insb
addr16
popf
push
test
sub
scas
les
outsl
jo
pushl
push
out
and
pop
nop
push
cmp
sbbl
loopnew
shrb
aas
push
les
xor
iret
mov
and
sub
das
mov
popa
sub
sub
movsb
and
sub
push
inc
mull
enter
fmuls
lock
loope
lods
imul
cmp
andl
lahf
outsb
and
call
inc
jae
adc
imul
inc
add
add
insb
mov
fisubrs
das
xchg
lret
insb
pop
insb
lret
fadd
fldenv
lahf
test
mov
call
or
xchg
inc
mov
push
push
iret
outsl
cwtl
inc
mov
dec
mov
rolb
fwait
jmp
mov
iret
shll
test
imul
mov
test
mov
cmpsl
push
fcomi
dec
rsm
outsl
and
popa
out
lcall
lods
out
sub
add
fcmovne
fucomp
sahf
pop
fldcw
ret
cmp
fsubrl
loopne
lods
lahf
mov
sub
rdtsc
lods
into
out
push
fadds
loope
add
insb
outsl
inc
pusha
ljmp
enter
in
sub
ret
mov
enter
or
es
mov
and
jnp
enter
mov
dec
das
loope
jmp
pusha
fisubrl
sub
dec
lods
es
dec
daa
out
out
mov
xchg
push
jecxz
adc
outsb
push
or
dec
nop
push
setl
outsb
add
loopne
cmpsl
sub
lods
dec
jge
mov
xchg
vpsubsb
mov
out
nop
push
iret
add
popa
out
pop
push
pusha
jmp
aas
hlt
pop
fsub
lods
rcrl
scas
out
and
out
xchg
adc
loop
cmpl
enter
cwtl
fs
push
out
mov
out
es
push
mov
or
dec
jle
push
mov
loop
pop
sti
and
add
outsl
mov
mov
mov
scas
incb
adcl
cwtl
xchg
and
outsb
gs
dec
cs
lea
cwtl
dec
rorl
in
imul
fisubrs
mov
cmpsb
scas
rolb
gs
in
imul
lods
mov
jmp
and
push
inc
popf
mov
jle
test
les
iret
inc
xadd
daa
mov
cmp
xchg
xor
call
push
sub
vfmaddpd
scas
sahf
or
cmpsb
out
or
pop
add
push
insb
add
xchg
out
imul
out
popa
pop
lret
popf
sub
cmpsb
scas
mov
push
push
pop
movswl
out
imul
and
in
movsb
cmpsl
pop
inc
sti
lock
inc
mov
sub
sub
insb
mov
xchg
xchg
daa
data16
mov
outsb
addr16
pop
cmpsl
imul
mov
decb
add
mov
sub
rorb
int3
cmpsb
test
adc
sbb
push
ret
lret
inc
xor
in
insl
mov
adc
dec
inc
xchg
ljmp
gs
cmpsl
inc
inc
adc
imul
cmp
gs
outsb
lahf
adc
adc
pop
into
iret
ret
sahf
and
dec
mov
iret
mov
ret
mov
add
or
jns
add
decb
test
test
and
es
scas
adc
lods
add
pusha
rcrb
dec
xor
add
ret
adc
mov
dec
sub
pop
das
dec
aad
inc
mov
test
push
faddp
and
lret
addr16
or
movsb
xor
data16
ja
and
sahf
push
popf
add
xor
in
and
sub
test
pop
xchg
pusha
cmpsb
enter
int
add
and
or
lahf
mov
bound
mov
pusha
aas
dec
or
pushf
int3
arpl
call
dec
test
lods
fisubl
call
fsubl
or
arpl
cmp
sub
iret
in
out
dec
xchg
xchg
or
dec
add
cmp
cmpsb
call
sub
jbe
cs
int3
lret
movsl
lods
and
iret
cs
mov
ret
popa
sub
sbb
push
or
test
stos
sub
mov
shlb
lahf
mov
dec
mov
push
das
movsb
push
test
fisubs
shrb
sub
pop
mov
aam
int
arpl
bound
imul
loopne
cmpsl
pop
cmp
scas
idiv
loope
sub
popa
gs
addr16
enter
fsubs
lods
mov
sub
and
movsl
mov
cmp
adcb
jmp
sub
pop
bound
ret
sub
psubsb
mov
sub
xor
add
pop
fisubrl
outsb
sub
rorl
add
jne
push
in
or
add
adc
and
mov
push
mov
xchg
dec
cmp
sbb
sbb
adc
dec
push
lret
out
jge
sub
sahf
mov
push
out
lea
add
cmp
imul
push
xchg
add
out
addb
loop
andb
out
adc
mov
pusha
scas
xchg
sbb
fildll
or
add
lahf
addb
test
and
mov
adcb
push
fcomip
sahf
mov
sbbb
and
cmpb
sbbb
inc
and
sbb
inc
xorb
jge
lods
loopne
orb
and
adc
orb
jnp
out
fisttpll
sub
stos
or
push
sarl
adc
into
jge
pop
pop
mov
test
sbb
pop
ljmp
push
lock
add
outsl
mov
test
mov
sahf
mov
mov
out
jge
and
push
popf
mov
loopne
dec
out
xor
sahf
mov
pusha
adc
add
mov
pop
iret
mov
dec
adc
adc
adc
in
lea
mov
shrb
add
fistps
mov
push
or
lods
subb
test
popf
faddp
and
jge
or
adcl
fistpl
sbb
cmp
out
stos
sti
adc
call
out
xchg
sub
sub
cs
outsl
shl
and
gs
and
adc
outsl
aas
sub
out
adcb
lods
inc
test
xor
mov
mov
adc
and
adcb
push
out
pusha
jnp
and
pushf
xchg
jmp
std
bswap
jge
loopne
jnp
and
pushf
movsl
sub
sub
aad
inc
jg
pop
arpl
mov
and
dec
out
and
push
xlat
jle
loopne
xorb
int3
into
lods
data16
sbb
mov
or
out
movb
popf
sub
adc
popl
fwait
pusha
sbbb
jle
in
hlt
push
jge
data16
xor
in
outsl
stos
movsb
push
cmp
jp
jle
fnstsw
fisubs
test
stos
push
test
sbbb
das
into
jns
sub
int3
push
mov
and
fistps
pusha
mov
fwait
and
or
out
pop
mov
sbb
out
push
fisttpll
adc
sub
out
fisubs
pop
pop
popa
add
popf
insb
mov
xorb
loop
add
testl
adc
rolb
outsl
inc
adc
int3
jle
shrl
mov
sub
mov
in
mov
adc
inc
add
cmc
mov
and
inc
test
and
mov
xor
lods
adc
inc
popa
adc
in
lea
xchg
lea
test
shl
jo
adc
fisubs
jns
movsb
mov
into
lods
pusha
and
in
test
insl
fisubrl
dec
xlat
je
dec
and
leave
jle
sahf
movsb
outsl
lret
movsb
loopne
andb
clc
lock
movsb
add
jle
inc
and
scas
loopne
mov
and
push
lea
inc
mov
movsl
lods
mov
test
frstor
ljmp
test
cmp
out
lods
add
inc
and
andb
mull
xlat
popf
movsbl
lods
scas
cmpsw
pop
push
cmp
dec
pusha
rolb
mov
arpl
and
xchg
lds
push
mov
adcb
test
cld
inc
popf
movsl
mov
mov
lods
adc
test
sub
push
lahf
inc
jne
test
dec
outsb
dec
pop
ret
dec
xor
popl
mov
jge
in
dec
and
data16
adc
mov
mov
das
pusha
add
inc
lods
addr16
daa
push
add
scas
jge
dec
jmp
lods
rclb
in
adc
movsl
pop
sub
leave
lock
inc
inc
mov
xchg
jo
cli
xlat
in
push
mov
jne
subb
pop
outsl
sahf
cmp
scas
into
inc
iret
imul
mov
sub
adc
das
insl
faddl
and
pushf
push
les
dec
int
stos
inc
adc
movsb
and
dec
enter
imul
lods
les
rcll
lock
and
push
movsl
push
or
insl
xlat
dec
iret
scas
int
inc
pop
test
scas
test
jg
adc
dec
iret
loop
mov
imul
outsb
filds
leave
push
lcall
ret
sti
scas
dec
and
push
mov
daa
adc
xchg
cmpsl
out
xlat
ret
das
pop
and
outsl
sub
dec
push
movsl
dec
test
dec
scas
loopne
loop
aas
lods
dec
xchg
pop
mov
jle
sub
dec
das
jmp
xchg
lret
cmp
or
pusha
out
scas
andl
push
loopne
imul
jle
outsb
mov
ffree
das
fsubp
lahf
fmulp
inc
cld
lods
ret
xor
push
loopne
pop
cld
pop
mov
iret
shl
dec
int
outsb
pop
cmpsb
lods
push
orb
dec
scas
cmp
inc
scas
add
popf
jne
jle
arpl
xor
inc
cmpsb
int3
outsl
mov
mov
movsb
and
sbb
xor
cwtl
les
mov
push
fs
imul
inc
dec
pand
fisubrs
outsb
xchg
dec
xchg
outsb
fisttpll
adc
cmp
shll
mov
cmp
fwait
insb
shlb
negb
cmp
push
cltd
iret
pop
pusha
cli
cmp
push
cmpsb
sbb
lcall
insl
or
cli
push
dec
into
add
inc
push
out
iret
pusha
cltd
ds
fadds
pop
cltd
test
push
mov
xlat
push
mov
leave
pop
imul
push
cmp
fisubrl
fs
or
test
sbb
iret
lret
cmp
mov
cmp
pusha
scas
ljmp
mov
aad
movsl
xor
ftst
and
je
xchg
add
jo
add
stc
test
sbb
sbb
inc
and
dec
aad
push
push
mov
icebp
sub
aad
fisubs
pop
rol
cmc
movsl
loopne
jae
aas
es
and
loopne
inc
es
push
out
sbb
dec
mov
movsl
jb
dec
fstpt
test
mov
jmp
pop
loope
loopne
leave
imul
adc
mov
test
and
adc
sbb
adc
in
into
movsl
jge
sbb
mov
pmullw
xor
adc
mov
loopne
aas
shll
push
lods
popa
in
shl
pop
iret
jecxz
arpl
fs
in
gs
iretw
out
insb
call
lods
imul
scas
imul
into
in
lods
cs
pop
lods
iret
out
scas
das
insb
outsb
xlat
scas
into
out
lods
and
scas
iret
loopne
pusha
sub
out
popa
jecxz
loop
cmp
arpl
in
lods
es
cmpsb
iret
scas
sub
test
in
pop
lods
iret
insl
scas
das
insb
out
xlat
scas
into
mov
mov
movsl
scas
cmpsb
insb
cmpsl
xlat
test
test
in
iret
sub
sbb
lods
int3
mov
scas
mov
insb
into
pop
lods
dec
cmp
scas
or
into
fldt
fwait
scas
mov
imul
pop
dec
or
jp
setns
jns
push
pop
mov
pop
cmp
xlat
push
fxch
leave
lods
mov
mov
pop
into
dec
fs
inc
pushf
ret
sub
mov
fs
pushf
sar
into
and
push
xlat
sub
mov
fs
pushf
pop
rcrb
movsbl
lret
pop
or
mov
mov
out
rorb
clc
xlat
out
mov
test
insl
clc
xlat
jge
lea
jl
lods
push
mov
fucomp
ss
jne
cwtl
push
mov
or
sar
aaa
ljmp
pop
testl
ja
cwtl
push
mov
or
sub
dec
clc
and
lock
xchg
pop
int
insl
pop
jge
lea
jl
mov
int
pop
mov
int3
add
or
int3
test
push
int3
test
pop
int3
xchg
xlat
and
pop
pop
imul
or
fwait
xlat
stos
fs
pop
in
and
or
sbb
mov
insb
and
mov
mov
mov
add
push
js
pop
xchg
pop
dec
in
jl
je
int3
sbb
mov
inc
fwait
lahf
lret
pop
sub
es
pop
dec
mov
rcrl
jg
das
jo
mov
sbb
jg
sub
push
mov
mov
andl
sets
out
mov
and
cli
sub
pop
dec
mov
popa
add
pop
loopne
out
das
ljmp
ja
insl
fbld
push
xlat
out
into
insl
out
and
cltd
stos
insb
push
pop
stos
mov
mov
ret
or
mov
in
ljmp
xlat
out
and
inc
scas
ljmp
lods
insb
jno
insl
iret
subl
and
mov
mov
xlat
ror
movsb
lods
loop
pop
repnz
out
add
adc
outsl
jno
mov
out
inc
lods
arpl
cmpsb
iret
bound
out
into
subb
into
popa
inc
mov
ret
lods
shlb
pop
jecxz
push
xlat
add
stos
lods
adc
pop
and
scas
scas
xor
and
inc
xlat
mov
arpl
iret
jae
cmpsl
insb
adc
into
xchg
lods
sub
mov
outsb
insb
ret
xlat
outsl
into
shrl
fdiv
iret
and
add
into
out
and
ljmp
into
insl
lods
fs
pop
je
loopne
test
and
movsb
lods
and
fadd
mov
cli
movsl
into
cmpsb
lods
cmc
call
scas
push
insb
push
es
stos
lods
lods
pop
inc
iret
lods
scas
push
insb
outsl
xlat
gs
or
lods
in
pop
addr16
xchg
scas
push
into
mov
lods
lds
iret
aad
popa
xchg
mov
or
xchg
movsb
mov
les
movsl
lret
jbe
and
mov
iret
sti
aad
and
adc
xorb
add
outsl
xlat
das
cwtl
shll
test
jne
test
ret
cmp
aad
mov
mov
shll
jmp
and
sub
daa
push
adc
out
mov
and
push
cld
loope
adc
lret
and
fildl
xchg
inc
xor
pop
mov
or
insb
adc
lods
push
jecxz
out
in
xor
in
jbe
andl
insb
ficompl
cmc
mov
push
aad
out
push
leave
adc
jae
pushf
test
jmp
lds
sub
out
xor
fsubl
movlps
inc
fcmovne
out
xlat
daa
xlat
add
xorl
call
or
sbb
scas
scas
scas
inc
loopne
scas
fs
pop
and
or
fwait
insb
sub
ret
push
int3
and
in
rsqrtps
cmpsl
movsl
cmpsl
insb
out
orw
and
in
jmp
or
out
and
inc
call
subl
push
stos
xorl
jae
ljmp
iretw
mov
stos
mov
lea
add
xchg
das
insb
lret
fisubrs
ror
int
push
mov
xor
int3
subb
dec
aas
vmovdqu
loop
imul
cmpsb
xor
xchg
rcrl
push
lret
ljmp
pop
mov
jl
call
cmpsl
pop
jmp
or
insl
jl
call
cmpsb
movsl
add
push
mov
stos
adc
cmpsb
sahf
in
adc
push
mov
mov
dec
out
fsubrl
loop
mov
xchg
das
int
cmpsb
sub
out
scas
scas
sub
adc
enter
call
and
loopne
or
scas
sbb
insb
in
sub
lret
es
and
pop
insb
fs
stos
xchg
sub
mov
in
insl
cmpsb
push
inc
insb
outsl
stos
loop
sub
jmp
mov
sub
jne
dec
xchg
into
in
add
and
pop
je
push
ljmp
xor
lret
and
and
or
int3
add
gs
sub
insb
data16
scas
je
push
adc
es
dec
loop
adc
add
mov
inc
rclb
andl
cmp
in
loopne
scas
insb
loopne
pusha
out
mov
mov
outsb
test
leave
add
out
fisttpll
mov
xor
xchg
or
pop
out
out
insb
cmpsl
mov
outsl
cmpsl
bnd
pop
in
xchg
daa
and
push
cmpsb
and
sbb
loopne
aad
inc
push
cmpsl
movsl
lret
xchg
adc
and
pushf
scas
xchg
push
lret
adc
pushf
mov
xlat
inc
test
push
cmpsb
jae
and
int3
inc
xchg
jle
dec
jmp
lds
cmpsl
push
movsl
out
test
inc
jne
push
out
pop
lds
adc
addl
jb
mov
leave
in
pop
mov
in
enter
push
aaa
sbb
jnp
scas
mov
pop
push
lods
sahf
sarb
in
pusha
lret
pop
mov
std
mov
fistl
push
fistpl
xor
stos
xchg
scas
add
mov
add
inc
dec
push
int
mov
scas
fsub
push
inc
out
and
fldenv
icebp
inc
sbb
rclb
aad
jae
fwait
jo
sbb
and
lahf
xor
jno
pop
cmp
insb
call
fmul
push
sbb
hlt
fsts
xchg
es
mov
rcrb
dec
dec
and
and
mov
mov
xadd
push
dec
mov
scas
sbb
or
sti
into
jmp
fcmove
pop
sarb
in
mov
lods
movsl
pop
out
scas
call
iret
adc
test
cmc
adc
scas
daa
stos
xchg
movsb
cmpb
popa
stos
es
pusha
cmpsl
xor
mov
and
and
cmp
pop
sub
cwtl
bound
xchg
pushf
jne
lea
push
in
mov
scas
int3
int3
cli
xchg
jb
mov
aas
fisubrs
outsl
arpl
dec
dec
out
cltd
out
pop
fs
pop
dec
addr16
mov
or
inc
pusha
fmull
lods
pusha
lcall
loopne
test
insl
mov
mov
ljmp
out
in
insl
icebp
fisubrs
in
test
cmp
pusha
fists
pusha
mov
and
loop
jp
bound
int
jecxz
imul
mov
cmp
fisttps
jge
jmp
dec
out
loopne
into
fldenv
out
out
and
sub
fs
xchg
fs
imul
leave
ljmp
push
pusha
push
in
iret
imul
pusha
add
ret
in
and
inc
and
pusha
and
fidivs
test
je
in
mov
out
pop
and
xor
push
lods
addr16
popa
out
pusha
movsb
lret
xor
jne,pn
in
cli
and
in
insb
insl
sbb
lret
arpl
push
imul
jne
lods
and
loopne
add
test
in
loopne
ljmp
mov
push
jmp
addr16
jecxz
in
pop
movsb
aaa
jmp
inc
call
jp
push
sbb
popa
or
imul
inc
mov
popa
out
jae
pop
enter
pop
xchg
sub
cmp
in
in
pushf
pop
jl
shll
subl
jmp
mov
out
mov
jns
inc
insl
mov
mov
insl
lcall
enter
sbb
ror
cltd
pop
or
imul
inc
inc
das
in
sbb
mov
outsb
aam
sbb
add
xchg
sub
lcall
mov
shll
or
pop
les
inc
cmp
mov
dec
xchg
inc
pop
das
xor
test
pushf
stos
je
push
clc
in
adc
xchg
out
mov
jle
mov
pop
out
out
mov
std
push
mov
clc
int3
and
jmp
fdivrl
mov
insb
pop
dec
loope
sub
fcmovne
loope
stos
fwait
mov
pop
dec
mul
notl
adc
xchg
jmp
mov
jge
pop
aas
inc
cmpsb
in
in
add
mov
aam
pop
stos
leave
fisubl
xor
and
faddl
in
lods
test
push
pop
mov
mov
dec
push
scas
insl
inc
pop
jns
push
mov
mov
mov
lcall
sbb
dec
pop
shll
stos
dec
lret
lds
mov
lods
fmul
pop
pop
jno
mov
in
jbe
cli
dec
inc
out
fildll
and
lret
les
add
das
lahf
mov
mov
setnp
lret
jmp
fdivrs
bswap
sbb
push
enter
pop
stos
enter
in
arpl
jne
add
stos
cmpsl
test
orl
sub
adc
hlt
and
xchg
insl
ljmp
addb
cmc
iret
scas
repz
inc
add
mov
mov
push
ljmp
add
fisttpl
scas
or
adc
leave
jne
ret
aad
icebp
gs
sub
imul
shll
mov
mov
movsl
pusha
xor
scas
pop
push
loopne
xor
cmpsb
icebp
jnp
enter
lods
scas
push
scas
fbld
imul
ret
movsl
outsb
lret
adc
insb
sub
clc
push
mov
rcrb
push
stos
fisubs
pop
inc
pusha
pop
and
mov
and
and
push
in
gs
lods
out
clc
xlat
out
sub
adc
sub
test
sub
iret
jmp
mov
stos
pop
insb
mov
xchg
cmpsl
and
lret
inc
mov
movsb
pop
push
es
jmp
lods
test
mov
lods
and
outsb
es
movsl
inc
push
sub
jecxz
jno
cmp
bound
cmpsb
mov
cmpsb
iret
xchg
movsb
xchg
out
inc
and
cmp
mov
and
movsl
pop
and
xor
and
sbbl
sub
enter
bound
insb
push
subb
sub
ret
and
mov
hlt
mov
fisubrs
das
inc
int3
out
mov
xchg
jne
cltd
push
mov
and
in
fs
xor
mov
xchg
sarl
adc
lds
xchg
lds
es
push
movsl
test
shrb
mov
pop
nop
push
lds
inc
shlb
movsl
mov
inc
roll
fisubrl
mov
and
mov
inc
in
hlt
rep
jle
and
push
hlt
xor
das
mov
pop
inc
sub
scas
int3
aad
mov
and
mov
fucomi
call
cmp
sub
leave
add
inc
popf
in
movsl
in
imul
fiaddl
loopne
mov
test
cmc
push
inc
mov
test
lods
mov
lcall
repz
jns
stos
lret
cmc
adc
lock
xchg
aad
lods
lcall
mov
insb
and
push
aaa
push
jmp
inc
fildll
bound
das
push
rorl
push
in
adc
xchg
add
push
call
iret
outsb
out
dec
cmpsl
fadds
inc
lds
jecxz
push
push
jmp
mov
es
popa
mov
mov
xor
in
insb
sub
push
insl
jne
xor
lret
jbe
loop
dec
mov
outsb
mov
nop
repnz
push
hlt
add
mov
jmp
scas
jmp
cmpsb
pop
or
mov
mov
test
enter
xchg
mov
inc
cld
test
inc
fs
test
cwtl
stos
pop
sub
leave
scas
lea
insb
out
fisubrs
and
push
leave
cmp
insb
or
inc
aad
cmovp
notl
cmpsl
jno
pop
out
data16
mov
inc
sub
mov
out
mov
dec
paddsb
test
jae
ret
ret
cltd
gs
and
shrb
dec
fadd
pop
bound
dec
movsl
push
bound
jae
xchg
xor
xchg
mov
mov
inc
lds
push
or
in
mov
cmpsb
fildll
mov
pop
daa
dec
jecxz
cmc
or
cmpl
jno
callw
out
fadd
test
dec
adc
and
outsb
lds
push
adc
fsubrp
dec
out
enter
int3
insl
push
cmpsb
inc
outsl
and
in
dec
xchg
scas
and
xchg
sbb
sub
pop
in
lret
scas
add
mov
push
inc
or
lods
mov
popf
outsb
mov
push
fldt
pop
xor
add
pop
sarl
dec
in
and
hlt
dec
out
test
dec
sub
add
jmp
cmc
fwait
pop
jl
call
sub
lds
push
imul
add
dec
cmpsb
movsb
xchg
inc
inc
movsl
push
call
mov
lods
mov
pop
cmp
add
mov
outsl
or
and
pop
dec
paddusb
push
mov
lcall
scas
mov
jne
aas
repz
and
loop
mov
cmp
fsubs
cmp
in
push
vpmulhw
test
andb
shlb
jl
lods
and
js
loop
dec
shrb
aam
push
insb
rcr
call
push
ds
dec
mov
fbstp
xchg
stos
mov
mov
fs
or
push
cld
xchg
hlt
not
out
xor
lea
mov
cmp
mov
test
std
sbb
addr16
std
or
fs
jnp
jae
arpl
bound
dec
jmp
leave
lods
in
in
movsb
sub
fcmove
add
xchg
mov
cwtl
outsl
fsubr
ficompl
incb
sti
sbb
in
inc
and
int3
leave
cltd
mov
stos
scas
ljmp
cmp
das
lret
fstpl
mov
rcll
pop
push
insb
fisubrs
std
push
movsb
sbb
jp
dec
outsl
pop
jnp
jp
mov
cli
jp
in
aad
pop
mov
cmp
push
xlat
call
mov
fdivr
pop
mov
lock
sub
repz
pushf
in
shr
test
sub
pop
scas
pop
mov
cltd
test
es
pop
sbb
inc
int3
aaa
imul
sub
pushf
dec
cmp
sub
jmp
or
xchg
ljmp
push
or
mov
insb
lret
pushf
push
and
js
out
inc
sbb
pushf
jl
fs
dec
lea
mov
shlb
in
jnp
sub
xchg
mov
mov
cli
cmpsl
ss
out
iret
fwait
loope
push
lcall
push
dec
in
scas
cld
jo
mov
push
icebp
shlb
fdivrl
or
push
push
cmp
ljmp
int
sub
data16
insb
leave
jp
mov
loopne
fcmove
xor
pop
sbb
inc
test
dec
outsl
inc
dec
lret
fbstp
pop
mov
out
sarl
stos
movb
hlt
movsl
sub
jl
fcomps
outsb
in
outsl
and
sbb
outsb
les
jnp
leave
stos
lea
inc
pusha
or
fucomi
inc
call
push
pop
or
push
cmp
sub
sbb
out
jbe
daa
out
or
cld
sub
cmc
xchg
insb
leave
or
in
xchg
mov
jmp
scas
or
jnp
popa
cmpsl
pop
mov
jp
mov
pop
enter
pop
pop
push
popf
cmp
insb
pushf
out
rorl
stc
shrb
pop
push
mov
jle
xchg
out
scas
imul
in
xor
xor
shl
mov
in
push
ljmp
pop
or
in
cmp
mov
or
jl
call
jl
xchg
dec
gs
fcompl
outsl
pushf
push
mov
out
js
mov
mov
mov
push
outsl
leave
mov
push
cs
dec
xchg
insb
shlb
and
and
jl
popa
int3
pop
mov
ljmp
cltd
arpl
dec
push
cmpsl
iret
push
insb
pop
lret
push
sbb
push
in
ficoml
test
lcall
ss
xchg
cmpsl
cmp
and
call
lcall
pop
jp
insb
out
dec
jl
xchg
dec
outsl
jl
sub
ds
fsubrs
mov
inc
jg
mov
test
pusha
push
lret
adc
push
jno
pop
inc
pushf
xchg
pusha
fs
rcrl
sbb
jne
loop
xchg
cwtl
gs
pushf
pop
outsb
out
imul
insl
push
sbb
scas
sqrtps
mov
add
out
movsl
stc
jecxz
dec
mov
dec
mov
outsb
loope
dec
mov
add
in
jns
mov
loopne
sub
inc
movsb
out
cld
repnz
pusha
shrl
hlt
ret
in
test
dec
sbb
inc
push
lret
pop
adc
xlat
out
cmpsb
paddb
push
sbb
out
int3
scas
cltd
mov
out
cld
xor
ficompl
out
xlat
pusha
mov
nop
or
jecxz
ljmp
lock
jg
rorb
mov
dec
add
rclb
loopne
adc
mov
outsb
out
std
jg
or
nop
mov
cwtl
rorb
addr16
scas
mov
jo
lahf
imul
pop
movsl
es
rcrb
fs
sbb
aaa
jae
outsb
cmpsl
pavgb
inc
cmp
mov
in
fiaddl
sarb
pop
outsl
mov
loopne
and
mov
fsub
iret
bound
fs
lods
movsl
pop
out
daa
scas
data16
cmpsb
xlat
out
sub
sub
ljmp
imul
scas
scas
insb
out
xlat
and
scas
ror
popa
add
lods
mov
pusha
lods
mov
adc
jo
and
push
cmpsl
inc
and
sbb
pop
imul
scas
fistps
sbb
pop
popf
sub
mov
lret
outsl
inc
mov
jmp
pop
sub
sub
iret
ljmp
or
jmp
pusha
enter
mov
xlat
into
pop
mov
call
jbe
jne
out
pop
out
jae
outsl
pop
jo
fcom
shlb
shr
enter
insl
sub
xchg
rcr
jecxz
loopne
or
mov
mov
fadds
cmpsb
pusha
jl
pop
xchg
out
mov
test
hlt
mov
or
cmp
shr
mov
fistl
mov
sti
mov
int
shlb
rcr
or
dec
sti
in
and
fiadds
mov
call
mov
mov
call
fldt
adc
push
shrb
cltd
mov
mov
es
and
loopne
mov
or
cs
and
in
outsl
lods
push
inc
scas
outsb
insb
xor
mov
lods
imul
dec
insb
xlat
and
and
test
rcrb
add
and
jae
cwtl
mov
aad
in
jecxz
loope
jno
mov
mov
into
mov
rep
in
shrb
pop
jle
addb
es
in
popf
les
lock
int3
hlt
loop
pusha
or
mov
jae
in
cmpsb
jns
xlat
mov
loope
sub
sub
iret
mov
xlat
sub
add
lock
stos
insb
loopne
sub
nop
lods
stos
add
iret
iret
scas
sub
into
and
lahf
scas
out
insb
and
outsb
into
push
lods
out
fistps
jg
xlat
loopne
lods
pusha
jg
test
into
push
into
popa
lods
scas
mov
mov
fcmovb
repnz
push
push
ret
aam
lods
cs
out
dec
cmpl
inc
inc
std
mov
sub
cmpsb
push
rolb
scas
ljmp
inc
dec
sub
stc
scas
lods
iret
es
stos
push
cld
insb
fwait
xlat
dec
into
jmp
mov
pop
leave
iret
or
pop
into
inc
lods
inc
add
filds
mov
insb
int3
xlat
lret
lods
or
pop
iret
je
shrb
subb
mov
scas
dec
insb
inc
xlat
push
into
subl
pop
iret
fxrstor
into
or
ret
scas
shrl
into
lret
lods
jnp
pop
mov
xchg
shlb
out
cmp
mov
in
push
call
xlat
shrb
add
mov
outsb
cwtl
cmc
int3
es
jecxz
clc
stos
test
mov
dec
fadd
pop
shlb
mov
shr
cmc
mov
pop
out
xchg
in
rclb
out
fisubrs
mov
sub
insl
jge
lret
rolb
pop
aas
fsubrs
mov
push
ja
pushf
xchg
dec
ja
mov
out
push
pop
adc
sbb
cmpsl
loopne
jmp
rcll
sub
in
jnp
in
bound
int3
lods
sub
and
sbb
add
in
and
dec
fwait
je
dec
jns
xchg
movsl
into
mov
shl
dec
sbb
stos
mov
imul
sub
pusha
iret
out
scas
stc
pushf
cmpsl
mov
adc
out
in
and
fs
and
inc
pusha
cli
scas
sub
das
in
fidivs
inc
mov
outsb
out
fbld
push
push
jmp
or
lods
jo
adc
or
or
xchg
sbb
pop
loope
sbb
sahf
xchg
inc
or
call
mov
xchg
mov
pop
testb
push
cmc
out
add
fmul
clc
jp
push
hlt
jmp
xchg
xchg
icebp
xor
imul
sub
push
jl
mov
loope
es
cmp
jno
jecxz
int3
in
or
loope
xor
or
mov
mov
rcrl
loope
mov
cltd
pop
lock
movsb
inc
jmp
jno
shl
dec
dec
xchg
hlt
pushf
lcall
pop
out
mov
push
mov
mov
mov
push
insb
loope
imul
jbe
pop
jo,pt
lds
mov
push
xchg
hlt
bound
or
push
dec
icebp
loope
loop
out
in
xchg
shrb
jge
rcll
cmp
sahf
loope
pop
push
xor
inc
xchg
popa
jo
jle
fs
jmp
cmp
dec
ror
scas
movsb
sahf
cltd
xor
shl
xor
fstps
inc
jae
ljmp
loope
repz
sbb
iret
mov
mov
lcall
rcl
loope
lock
daa
call
test
divb
push
jge
xor
mov
dec
xchg
xchg
cmpsl
cmc
xorl
adc
add
jns
aaa
mov
cmp
sbb
subb
imul
lods
adc
loop
jp
inc
cmpsl
pop
pushf
pop
add
hlt
repnz
mov
aam
fstp
cmp
out
pop
aam
or
mov
loop
add
sbb
xor
lods
insb
mov
push
pop
addr16
stc
push
dec
loope
daa
mov
mov
adc
push
mov
mov
xlat
fdivrs
push
dec
mov
in
ficomps
insl
enter
gs
jae
and
imul
xor
bound
test
test
int3
jo
pop
cltd
jge
xor
dec
mov
loop
loope
pop
call
push
jo
jnp
xchg
enter
int
loope
lret
imull
sahf
pop
mov
cld
mov
clc
pop
mov
les
xor
loope
or
dec
jnp
loope,pn
in
mov
lcall
andb
testl
fbstp
nop
xchg
iret
xchg
jo
mov
jl
jecxz
nop
addr16
cs
sbb
or
pop
nop
mov
pop
cmp
mov
scas
jb
test
scas
mov
in
scas
or
fldt
movsl
or
scas
pop
nop
in
mov
mov
mov
and
insl
lock
imul
pop
mov
dec
lods
adc
cmp
or
enter
lods
sbb
sub
ljmp
loopne
cwtl
jmp
mov
pop
enter
sub
push
enter
mov
in
push
xor
pusha
fcomi
push
loopne,pn
xchg
inc
xchg
mov
std
xlat
cmpsl
iret
leave
aam
std
sub
sub
jae
sub
xor
std
xlat
test
pop
aam
mov
pop
jg
xor
mov
outsl
ljmp
cmp
mov
fs
sbb
cmp
or
mov
fsubl
jge
add
or
stos
xor
mov
jecxz
mull
push
shll
in
dec
in
scas
ljmp
sub
mov
adc
enter
iret
jmp
mov
sahf
pop
scas
stos
mov
dec
inc
je
das
imul
mov
pmaxub
std
push
dec
int3
movsl
and
ljmp
ljmp
scas
jl,pn
mov
mov
rclb
insb
or
xchg
dec
inc
rcrb
sahf
pop
mov
fwait
mov
mov
push
dec
idivl
nop
cmp
not
stos
inc
sub
lcall
or
mov
jbe
in
lahf
ljmp
fldcw
data16
jge
adc
insl
rcrb
pop
pop
mov
out
loopne
lods
pop
mov
cmp
aas
loopne
cld
frstor
pusha
xlat
push
loopne
out
into
out
mov
movsb
and
cwtl
sbb
pop
xchg
add
push
add
stc
push
push
mov
xor
loope
adc
popf
mov
out
inc
subl
lcall
out
sbb
aas
addr16
int
fiaddl
test
outsb
xchg
and
shll
add
idivb
push
adc
clc
rcrl
pop
add
int3
movsl
jmp
aam
movb
imul
out
cmp
or
dec
pusha
mov
dec
imul
pop
jp
push
xor
jb
lods
out
daa
imul
arpl
sahf
xchg
movsb
push
inc
std
and
push
aas
and
imul
push
adc
jle
out
outsb
jae
dec
push
out
daa
ret
out
jno
fistpll
xchg
jns
out
push
gs
mov
lock
mov
jmp
pop
jae
xor
int
imulb
mov
movsl
mov
js
mov
add
dec
mov
pop
gs
jns
pop
adc
ds
jnp
mov
or
inc
push
push
insl
xchg
vmwrite
pop
clc
popf
call
xchg
xor
into
lahf
push
push
mov
mov
jle
pop
xchg
or
mov
fcom
mov
pop
mov
push
lea
push
call
jl
pop
jge
sbb
lret
in
movsb
sbb
mov
repz
xchg
push
sub
jp
imul
adc
sub
dec
jb
mov
in
xor
das
aas
xlat
clc
add
dec
sub
movl
pop
bswap
btc
movsbl
mov
cmc
pushl
cmp
call
push
mov
pushf
movl
pusha
jmp
str
push
movl
jmp
add
imul
or
cmp
rcrl
push
push
addr16
hlt
rcl
fwait
dec
sahf
les
dec
mov
test
test
dec
push
lea
or
push
mov
shrb
dec
jae
scas
sbb
mov
loopne
pop
or
dec
pop
jge
std
jecxz
xor
rcrl
push
or
inc
test
sbb
clc
xor
adc
inc
into
sub
inc
xor
scas
cs
dec
nop
lcall
mov
push
adc
and
inc
mov
decl
lea
jne
sbb
mov
stc
clc
test
add
cmc
call
pusha
mov
mov
mov
pushl
pushl
mov
pushl
ret
pushf
jmp
call
fsubl
cmpsl
fisubrl
sbb
mov
cmpsb
mov
call
mov
mov
xor
movsl
arpl
stos
mov
decl
cmp
mov
pop
mov
stc
and
into
mov
insl
push
imul
mov
decl
or
fidivs
sahf
dec
pushf
insb
dec
sub
add
lret
in
sbbb
mov
lds
pop
cmp
pop
ljmp
enter
bound
mov
mov
inc
xchg
cli
cmpsl
pusha
sub
fisubl
shrl
inc
and
lahf
lret
jp
jo
add
aas
call
clc
xor
icebp
mov
mov
out
into
cmc
pop
cmp
idiv
mov
pop
jbe
sub
xor
inc
addl
testb
stc
pushf
xchg
outsl
pop
fistl
stc
dec
pop
inc
stos
inc
cmp
sbb
add
push
sub
cli
dec
push
lods
cmc
rclb
add
pop
push
dec
and
adc
iret
lock
xor
mov
fmul
dec
adc
test
add
fs
sbb
mov
push
jno
stos
mov
inc
and
inc
adc
sbb
cmp
movsl
cwtl
in
sub
inc
addr16
cli
cmp
push
add
subb
mov
mov
pop
mov
repz
lods
test
sub
push
push
lea
fists
dec
outsb
sahf
inc
scas
fs
pop
lahf
or
push
add
jnp
iret
fldcw
clc
dec
xchg
fiadds
inc
test
jnp
xchg
and
xchg
adc
bound
sbb
scas
fcmovu
adc
or
xor
sub
nop
push
dec
jo
mov
aas
sahf
dec
sti
loope
fistps
cmp
mov
movsl
sub
pushf
mov
inc
ds
and
movsl
jmp
dec
sbb
sbbl
iret
outsl
push
mov
pop
xlat
xchg
jne
and
les
cli
lcall
and
rorl
add
jne
mov
fldcw
popa
sti
cmp
imul
push
jg
cmp
pop
ret
and
lret
mov
testb
or
in
cs
cwtl
push
mov
rorb
out
ljmp
test
pop
fsubl
pushf
mov
ljmp
insl
out
popa
push
das
repz
inc
jae
loopne
rorb
push
ja
mov
std
sbb
xor
mov
xlat
jmp
inc
inc
mov
loope
hlt
sbb
fildl
loope
push
jge
xchg
out
fsubrs
and
pop
adc
loopne
sub
loop
inc
inc
rcrl
xchg
adc
fdivs
mov
inc
pop
jp
sub
pop
lret
sub
push
ljmp
mov
and
mov
inc
iret
pop
mov
jmp
push
dec
call
xchg
jo
clc
ljmp
stos
mov
xlat
sbb
cmpl
mov
popf
add
dec
negl
mov
sbb
push
add
jne
sbb
sub
inc
lods
sbb
inc
mov
xchg
dec
dec
not
movsl
icebp
lods
lret
pop
dec
mov
pushf
mov
jo
mov
adc
pushf
mov
fcomip
icebp
cmp
fadd
call
ja
mov
mov
arpl
mov
popa
outsb
pushf
jnp
cmp
stos
shl
mov
push
iret
cmp
repnz
xor
xor
test
aad
xabort
or
jbe
and
arpl
xchg
mov
pop
aas
xor
and
mov
xlat
push
sti
cmp
mov
ds
xchg
lock
inc
add
lcall
ror
push
pop
push
adcl
cs
fidivrs
fsubr
pop
and
pop
js
icebp
mov
mov
sarl
push
fisubrs
test
aas
test
dec
sbb
add
lret
clc
nop
fdivrs
movsl
cmpsl
fstps
sbb
mov
inc
fnstenv
cmpsl
adc
out
out
xor
clc
push
xchg
xchg
rolb
pop
dec
pop
cltd
mov
cmp
stos
cmpsl
les
call
addb
ljmp
xor
mov
mov
sar
xor
dec
mov
jb
mov
loope
lret
aam
dec
inc
mov
push
mov
enter
mov
fmul
das
dec
daa
js
jecxz
and
dec
mov
dec
imul
add
inc
inc
xor
xor
adc
mov
call
out
cmp
inc
xchg
jge
cmpsb
stos
sbb
in
mov
inc
aas
std
and
fiadds
scas
test
sbb
test
insb
xchg
inc
pop
insb
stos
pop
mov
xchg
lds
not
mov
or
add
mov
mov
inc
rcrl
mov
les
jo
loopne
xchg
in
sbb
test
mov
out
andl
inc
aad
dec
jbe
mov
dec
pushf
daa
int3
lret
clc
cmp
mov
js
xchg
pop
popa
lea
push
xlat
sbb
cs
xor
das
outsl
sbb
jnp
add
int3
inc
pop
rclb
rcrb
inc
mov
mov
jp
add
cmp
lea
jns
test
cmp
stos
jo
loopne
mov
pop
pop
jo
in
in
lock
push
sub
push
in
scas
jge
lea
sub
add
inc
aad
inc
xor
sub
scas
xlat
adc
int3
pop
mov
xchg
inc
repz
aaa
testb
push
pop
adcl
call
cmp
dec
mov
jge
std
adc
add
sub
mov
orl
jle
cmp
adc
repnz
add
cmpsb
int3
push
sbb
mov
sbb
sub
int
or
repz
xor
inc
mov
mov
jl
rcl
sub
inc
clc
mov
lret
mov
jmp
cltd
fdivrl
xchg
test
pop
sbb
mov
mov
or
je
mov
push
push
out
repnz
fadds
xchg
repz
mov
adc
dec
pusha
xor
pop
adc
xor
inc
push
out
aaa
cmp
dec
lea
test
jp
dec
call
es
popf
xchg
rorb
dec
fs
and
pusha
rcrb
cmc
pop
leave
cli
outsl
pushf
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
enter
cmp
add
inc
and
inc
add
pushf
mov
pushf
push
mov
pushl
pushl
ret
pusha
call
movb
mov
push
sub
mov
cmc
bt
pushl
popl
jmp
je
aaa
aam
inc
sahf
rcl
or
out
cmp
add
jle
testb
js
popl
aad
xor
lods
cltd
jbe
jb
shll
imul
mov
adc
scas
imul
bsf
bts
ror
mov
test
cmp
pusha
bt
cmpb
mov
jmp
loope
cmp
push
push
cltd
mov
iret
adc
xchg
xchg
ljmp
fcompl
hlt
cmp
inc
scas
int3
icebp
xchg
and
mov
mov
sbb
push
loopne
push
xchg
push
rclb
out
repz
fwait
push
jl
imul
xchg
mov
je
mov
mov
inc
lret
gs
arpl
call
push
clc
mov
or
adc
dec
xchg
pushf
iret
call
and
out
dec
xchg
fdivrl
ds
pushl
test
push
in
daa
cmp
jmp
clc
push
icebp
fldt
or
leave
jb
xchg
pop
mov
pusha
rcr
sub
and
sti
inc
lcall
adc
inc
insl
jno
bound
inc
fstl
mov
dec
pushf
and
pusha
pop
sub
and
xor
mulb
pop
call
loope
push
xor
pusha
rcl
dec
in
adc
adcl
mov
lcall
mov
pop
out
push
xchg
fdivrs
neg
iret
scas
fimull
ja
rcl
and
sahf
mov
lds
push
dec
xchg
pushl
mov
pusha
pushf
mov
pushf
pushf
pushl
ret
test
movw
add
bt
bt
movb
mov
movw
clc
test
call
pusha
jmp
je
add
push
dec
outsl
jae
lret
cmp
jno
int
and
dec
loop
xchg
test
loop
inc
inc
psrld
int
mov
mov
mov
ljmp
jo
popa
test
aaa
int3
mov
push
mov
repnz
gs
mov
subl
and
shrb
cmp
or
pop
adc
lcall
adc
inc
aaa
jno
mov
fsubr
sti
jbe
jno
dec
add
add
sbb
push
or
dec
mov
xor
mov
cmp
in
sub
out
rorb
aad
int3
aaa
cmp
or
popf
adcl
pop
cwtl
mov
into
or
mov
fmull
ss
aam
stc
pusha
ds
and
aam
and
pop
lahf
out
prefetcht0
lahf
enter
cmpsb
sbb
jnp
cmpsl
shrb
cs
lea
inc
insb
scas
enter
push
dec
jno
inc
inc
stc
fcoms
push
xor
cli
stos
mov
mov
fistpl
stos
inc
movsb
int3
aaa
xchg
xchg
jmp
fsubs
lods
mov
aaa
int3
pop
jo
xchg
loopne
xor
mov
sbb
lahf
mov
push
clc
jno
lret
dec
push
inc
push
dec
dec
dec
cmp
jmp
push
and
and
jne
jne
ds
cltd
cltd
mov
and
pop
lcall
frndint
dec
mov
push
pushf
pushf
adc
pusha
movb
movl
lea
call
pusha
jmp
cmpsl
cmpsb
iret
push
hlt
sbb
stos
scas
sbb
lahf
mov
lret
jmp
and
lret
insl
rorl
push
aas
popf
jo
hlt
jno
movd
scas
pop
or
loop
imul
addl
leave
xchg
lea
xchg
shrl
sbb
sub
loope
cmp
jno
mov
push
icebp
xor
rclb
rol
iret
push
stos
xlat
call
leave
shl
push
fdivl
loop
inc
in
jl
jge
addl
mov
fwait
sub
fstpt
jmp
inc
pop
ljmp
xor
outsl
mov
cmp
fstpt
addr16
pushf
mov
xor
sub
cwtl
popf
clc
dec
mov
shrb
dec
outsl
out
xor
clc
out
add
rclb
sti
mov
sub
and
sub
xlat
mov
xchg
jmp
fs
mov
inc
jne
push
mov
fstpl
mov
push
pop
lea
popa
imul
insb
xor
add
dec
mov
ss
popf
ret
mov
std
adc
movsb
adc
xor
mov
mov
imul
xlat
ss
adc
jo
lock
inc
test
push
mov
adc
in
sbb
rol
mov
mov
push
aam
int3
arpl
fistps
ret
lret
rcrb
push
enter
dec
fs
mov
ja
mov
dec
jo
pushw
popfw
pushf
inc
pushf
pushf
adc
lea
push
call
pop
test
xchg
mov
dec
mov
inc
pop
testl
outsl
das
and
xchg
ficoms
iret
mov
cmp
in
icebp
jl
or
sbb
xchg
inc
push
mov
add
sbb
jge
scas
fsts
rcrl
stos
cmc
sub
lahf
sub
not
in
dec
dec
imul
inc
pop
lret
pushf
outsb
shrb
xor
test
lea
call
pushf
pusha
jmp
scas
pop
ss
push
in
insb
jne
mov
inc
mov
addr16
lea
sbb
jno
or
add
fiaddl
cmp
sub
push
pushf
add
stos
imul
cwtl
sub
addr16
mull
cli
rcrb
repnz
mov
sub
popf
xorps
rcrb
pop
in
enter
xchg
mov
fsub
add
js
popf
or
rolb
push
sbb
sahf
mov
and
pcmpeqb
fwait
sbb
dec
test
or
xchg
out
mov
fimull
in
shlb
adc
popa
neg
mov
or
dec
mov
xchg
outsb
push
and
mov
inc
or
cmp
enter
adc
mov
insb
js
ret
icebp
mov
xor
int3
push
jge
cld
pop
dec
jae
mov
jo
mov
push
push
xchg
jnp
ret
fs
popl
pop
outsl
and
pop
xchg
leave
mov
add
dec
pop
adc
push
in
pusha
cmpsb
repnz
hlt
mov
lock
incb
fldcw
sbb
test
fdiv
aaa
aas
pop
jbe
ljmp
cli
jmp
ja
jmp
daa
mov
int3
push
dec
jne
mov
dec
jne
enter
fldt
iret
mov
fldenv
jl
mov
pop
mov
dec
inc
sar
jge
lret
lea
jo
mov
fwait
sbb
push
dec
outsb
out
jp
out
dec
sub
test
js
or
call
jns
xor
aam
icebp
in
fs
insb
pop
into
nop
das
inc
iret
mov
repz
aas
jecxz
movsb
test
pop
dec
test
inc
push
fs
stc
incl
mov
dec
sti
inc
or
flds
inc
cmc
push
call
neg
movb
xor
cmp
cmp
test
pushf
neg
call
clc
mov
push
jmp
pop
inc
jbe
enter
adc
outsl
rcrl
sub
imul
fsubrs
xor
mov
stos
xor
jmp
sbb
mov
shll
lea
loopne
ret
jnp
push
and
xor
xchg
cmp
sbb
jge
jae
cmp
sahf
pop
mov
and
sub
xchg
push
ss
scas
lahf
cmp
outsb
adc
dec
es
push
jnp
movsl
mov
fwait
popf
mov
arpl
fwait
pop
std
js
push
es
mov
lret
xor
fsubrp
and
addl
pop
pusha
pop
pop
lret
nop
das
mov
sbb
popf
enter
pop
arpl
xchg
and
js
jge
mov
inc
stos
jl
or
mov
jnp
rcrl
fs
push
pop
mov
xor
xchg
repnz
cli
and
push
jne
dec
call
mov
pop
pop
orl
rolb
int3
add
mov
mov
inc
stos
adc
ja
adc
fs
aaa
xor
jmp
mov
icebp
adc
ja
adc
push
and
pushf
and
imul
lods
xor
sbb
push
inc
adc
ja
adc
xor
not
adc
rorb
mov
call
into
adc
jp
mov
adc
xchg
stc
pusha
lcall
xorl
pop
fists
xor
mov
pop
imul
stos
adc
cmp
out
jl
not
adc
outsb
std
jbe
xor
cmp
int
out
xor
ret
jmp
dec
data16
pop
mov
jge
pushf
and
imul
adc
jne
or
mov
cmc
push
cltd
xor
sbb
mov
mov
jmp
jge
adc
ja
adc
push
aas
fsts
xor
adc
add
sahf
mov
mov
lods
lcall
gs
push
mov
adc
xchg
out
pushf
jp
ja
push
mov
mov
cltd
xor
adc
pop
mov
adc
mov
fidivs
mov
inc
and
mov
das
jle
xor
push
mov
and
popa
fimull
sub
pop
cmp
xor
adc
and
ja
adc
rcrb
adc
adcb
xchg
sbb
jmp
cli
adc
ja
adc
add
divl
mov
stos
adc
xor
adc
adc
ja
adc
jb
fidivs
xor
mov
and
imul
ja
test
imul
adc
ja
adc
and
testl
popf
cmpsl
and
adc
test
lods
xor
mov
stos
pop
testl
imul
push
mov
rcll
ja
adc
xor
ja
pop
mov
dec
push
mull
sbb
ja
adc
xchg
sub
adc
ja
adc
inc
ficoml
adc
cmpsb
sub
xlat
jne
push
fimuls
dec
dec
je
rcrl
and
data16
push
sti
xchg
add
repz
push
imulb
jne
adcl
sti
xchg
ds
pop
adc
mov
jb
jmp
pushf
hlt
cmp
repz
xchg
mov
mov
inc
fsub
adc
dec
mov
jne
in
mov
push
stc
xlat
popa
sbb
mov
test
fiaddl
pusha
fidivl
push
subl
and
add
mov
imulb
push
xchg
mov
popa
xor
adc
daa
rol
inc
add
cmpsl
jecxz
adc
or
aas
sub
sub
sti
and
inc
cmp
adc
loop
jecxz
and
sbb
aad
cmp
mov
ljmp
pushf
jbe
or
push
dec
clc
shl
lret
xchg
scas
out
cmp
ror
in
lds
or
push
or
mov
pushf
pusha
cmp
pusha
call
stc
andl
inc
bound
orl
sub
push
jmp
gs
in
adc
ljmp
into
hlt
sahf
sub
mov
mov
movsb
into
jge
push
cmp
mov
mov
mov
xor
leave
out
add
imul
add
pusha
clc
call
imul
test
push
or
stos
sar
cs
loopne
mov
push
daa
ret
push
ret
and
mov
mov
sahf
ret
cltd
lock
fcoms
icebp
clc
clc
std
sbb
scas
cmp
in
repnz
mov
mov
pop
push
xor
jno
pop
ja
push
mov
lret
mov
insl
negl
arpl
sub
push
fildl
mov
mov
cmp
stc
push
xor
jnp
lea
sub
call
xor
stc
push
movb
cmp
neg
test
bt
push
jmp
sbb
xor
push
xor
outsb
jb
out
sub
mov
jne
xor
and
rcrb
xchg
mov
cld
push
push
sbb
inc
push
mov
cmp
ljmp
jae
mov
cmp
sbb
inc
loope
xor
imul
aas
cmp
or
fstpl
fs
cmp
xchg
hlt
mov
cmc
xlat
iret
pushf
mov
mov
jb
ret
adc
xor
xchg
cmpsb
push
icebp
push
mov
in
inc
mov
movb
clc
xchg
shrd
test
movsbl
mov
mov
pushl
sub
mov
rep
pop
bswap
mov
pushf
pushf
mov
lea
jmp
bt
sub
cmc
test
bt
test
cmp
pushf
mov
movb
push
lea
jmp
sub
push
les
test
dec
imul
mov
sahf
lcall
les
outsl
das
icebp
xchg
mov
adc
jecxz
add
popf
sbb
loop
jo
enter
jge
aaa
inc
cmp
adc
pop
or
mov
ss
shll
sbb
pop
push
mov
loopne
fs
cmpsb
jmp
mov
cld
aas
mov
sbb
push
fbld
dec
jne
lcall
adc
js
out
sarl
mov
fmull
scas
jmp
push
and
sub
jo
mov
xchg
adc
or
pop
cs
fldenv
add
dec
ljmp
scas
xchg
and
jge
lret
popa
dec
or
scas
jg
decb
dec
push
jae
mov
rcrb
adc
dec
sbb
into
cmc
daa
clc
lock
in
cmp
sbbb
sti
ss
lahf
xchg
mov
dec
out
dec
jne
mov
out
and
pusha
lcall
jb
mov
movsl
or
xchg
xchg
mov
cltd
or
xchg
lock
movw
bt
cmp
call
push
test
xor
pushf
cmp
neg
cmp
cmc
pushf
push
shr
jmp
push
movb
movl
pusha
push
push
call
jmp
lea
jb
cmc
pushf
cmpb
jmp
ljmp
pop
mov
jecxz
stc
cmp
mov
lret
jl
cmp
inc
pop
xchg
outsl
stc
xchg
orl
leave
pop
cs
in
data16
cld
adc
orl
adc
nop
pusha
xlat
push
sub
das
lret
lret
and
mov
xor
add
xchg
daa
jae
add
inc
arpl
cmp
mov
xor
push
mov
dec
pop
sub
push
jmp
bound
ret
addr16
or
cmp
xchg
xchg
ret
fsubr
call
mov
inc
xchg
mov
hlt
xchg
test
mov
lret
imul
in
repnz
mov
sti
and
lds
xchg
lahf
mov
mov
pushf
mov
lds
push
int3
enter
adc
sarl
dec
sub
pop
rcrl
push
cmp
add
mov
pushf
cltd
loopne
push
cmp
push
mov
mov
dec
mov
repnz
push
shrl
test
ljmp
lahf
faddl
adc
fs
xor
inc
push
mov
inc
enter
nop
movsb
xchg
imul
ds
repz
pop
scas
or
cmc
sub
lret
inc
add
and
movsb
and
pop
mov
lahf
jp
cltd
ja
sub
inc
mov
jg
aam
lods
and
dec
loopne
and
mov
inc
cmp
xor
add
pop
bound
add
fisubl
cmp
icebp
xor
inc
and
dec
inc
jmp
and
movl
pushf
pushl
mov
lea
jmp
mov
mov
push
xchg
stos
aam
jae,pn
mov
daa
adc
mov
push
outsl
jno
movsl
mov
and
shrb
inc
push
inc
jge
mov
cmc
xor
jne
shll
cld
cmc
sub
adc
sbb
xlat
mov
cmp
adc
and
xor
mov
jmp
jne
pop
les
sub
inc
dec
lock
movsl
pop
sub
je
cmp
and
cmpsl
cltd
and
pop
mov
sub
jp
cmpl
cwtl
or
adc
mov
add
cmp
jno
sahf
mov
lock
xchg
and
ljmp
int
repnz
adc
call
clc
mov
cmp
rcl
rcl
and
mov
cmc
cmp
pushf
pusha
lea
jbe
bswap
mov
btc
add
cmp
inc
lea
mov
xor
add
add
sub
movl
jmp
ficoms
jno
std
adc
mov
adc
popf
test
mov
fwait
or
punpckldq
push
mov
or
sub
cbtw
add
jns
mov
or
pushf
push
enter
scas
inc
mov
mov
mov
mov
push
ss
xchg
mov
sti
mov
xchg
or
fnstenv
cmpsl
or
mov
push
ret
pop
popa
sub
cmp
pop
sbb
and
das
ljmp
fadd
rcrl
jl
xchg
xor
inc
push
bound
adc
rcrb
out
test
inc
ja
mov
lea
ja
jmp
cmpsb
jno
mov
out
cli
adc
jae
enter
sub
in
mov
jb
lods
dec
push
repz
shlb
sub
sar
jecxz
pop
mov
je
or
out
movsl
jb
arpl
lret
inc
in
fdivrl
in
leave
fmul
in
pop
inc
cmp
pop
arpl
sti
test
xor
sahf
test
dec
out
pushaw
inc
sub
jmp
sarb
arpl
sub
mov
adc
add
loop
or
push
cld
sbb
inc
jp
xchg
jae
bound
xor
xchg
int
dec
int3
lcall
jo
inc
inc
lcall
mov
out
push
subl
pop
xchg
mov
sub
or
jle
pusha
sub
les
leave
add
std
cmpl
fsubs
std
cmp
mov
adc
jo
xor
push
sti
push
mov
and
je
sub
sub
mov
jge
push
int
pop
inc
test
cmp
push
js
stos
push
leave
cmp
rolb
test
xchg
dec
jno
xchg
dec
pop
sarb
jg
mov
adcb
xchg
subl
in
iret
filds
rcr
inc
outsb
clc
mov
cli
arpl
rcrb
ja
pop
inc
lea
in
cmp
insl
jnp
call
jo
loope
or
insb
scas
push
cltd
enter
rol
shr
bt
cmp
mov
pushf
pushf
pusha
repnz
movw
call
imul
fnsave
dec
push
jp
jecxz
adc
fwait
xchg
leave
dec
cld
out
xchg
jno
dec
xlat
into
sahf
xchg
shld
inc
add
jb
ds
xchg
arpl
and
ja
cltd
loope
sbb
sarl
inc
mov
sbb
addr16
or
sbb
jg
outsb
jecxz
push
and
xlat
push
in
adc
insl
faddl
out
fmull
insl
jbe
mov
mov
ljmp
inc
lret
out
pop
mov
roll
aas
jge
loop
lock
jo
popf
jne
pop
les
mov
mov
stos
adc
fistl
and
inc
cmp
lea
sarl
adc
and
bound
mov
leave
leave
dec
pop
xchg
std
sahf
sub
mov
andb
out
xlat
fs
leave
dec
int3
push
mov
mov
out
dec
adc
xchg
xor
rcrb
out
pop
xor
pop
out
lods
outsl
jno
sbb
mov
sbb
cltd
mov
decb
cltd
sub
dec
ds
mov
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
enter
or
clc
es
jnp
jle
std
inc
and
push
mov
sbb
cltd
cmc
pop
or
filds
sbb
int3
cwtl
sub
lea
sbb
jns
sub
sub
xchg
or
inc
cmp
fsubp
shlb
cmp
in
repz
es
das
scas
das
cwtl
and
ficoms
jp
pop
sahf
mov
and
fwait
add
cld
push
ficoms
jp
jmp
mov
cwtl
mov
or
sbbb
fisttps
pop
cmp
mov
jnp
aad
sbb
cmp
int
push
es
push
lahf
pop
jl
fisubrs
ret
ret
inc
push
jmp
lret
pop
cmp
shlb
inc
out
pop
push
jg
lods
mov
mov
xchg
adc
iret
dec
xorl
pop
add
into
stos
js
sbb
fstpt
xchg
sar
inc
push
pop
mov
sbb
adc
test
lods
loopne
dec
imul
pop
xor
xor
push
and
inc
pusha
mov
sar
shll
outsb
push
mov
pop
fldln2
and
sub
mov
sbb
andl
pop
in
shl
notl
xor
out
or
xchg
ret
mov
mov
ja
mov
insb
mov
xor
ret
and
test
aaa
push
jmp
cmp
cld
inc
sti
dec
loopne
mov
xor
fcomps
loop
inc
rclb
jns
inc
das
aaa
lock
faddp
mov
es
mov
xchg
push
sub
fistl
xchg
push
lods
jl
xor
or
loope
idiv
jo
leave
mov
fisttpll
sbb
mov
dec
xlat
pushf
aas
jns
movsl
adc
es
clc
mov
cmp
lods
ret
jmp
dec
jno
fistl
sti
mov
adc
mov
cmp
push
lret
add
icebp
aad
sub
push
jmp
shl
clc
iret
lods
lds
movsb
rcl
mov
and
mov
lret
pop
and
je
pop
cmp
sbb
in
fdivs
mov
xor
in
fsubr
out
dec
pusha
add
inc
and
adc
push
pushf
lea
jmp
call
cmp
inc
inc
loop
inc
dec
test
arpl
test
into
sub
push
mov
std
ret
fcompl
or
dec
sbb
dec
in
sub
mov
xlat
dec
loop
jp
mov
cmpsb
loop
fsubs
negl
xchg
sahf
pushf
mov
mov
cmpl
movzwl
dec
and
ss
je
rclb
and
movsl
icebp
hlt
sti
add
inc
aas
pop
xchg
stos
repnz
inc
outsl
movsl
scas
mov
add
jmp
lock
push
es
loope
xchg
ja
dec
xor
mov
aas
imul
push
inc
xor
xchg
mov
push
xor
adcb
xchg
push
aam
lret
jp
jecxz
in
dec
pop
mov
insl
movsl
push
test
push
leave
mov
dec
lock
mov
stc
cmpsl
and
roll
sub
popf
push
scas
mov
aam
movsl
sbb
add
and
call
addr16
ficoml
xlat
jae
mov
cmp
cmp
mov
lea
jb
pusha
push
pushl
lea
jmp
mov
xor
repz
js
or
imul
aaa
outsb
push
ja
lods
aad
ss
popf
jg
arpl
fptan
adc
push
into
arpl
sahf
mov
fidivs
sub
mov
roll
dec
setae
or
in
inc
push
jo
or
mov
push
jns
iret
outsb
mov
pop
fs
stos
xchg
outsb
clc
mov
mov
sbb
jne
mov
arpl
out
sbb
fimull
mov
jo
lahf
add
cwtl
mov
xor
and
and
push
jb
incl
push
sahf
mov
add
adc
sub
push
push
shl
fbld
xor
and
cmp
negb
cmp
or
mov
fdivrp
jno
xchg
cli
into
or
les
xchg
lret
push
push
add
xchg
inc
lods
mov
push
enter
mov
mov
inc
lds
outsl
imul
movsb
leave
aam
dec
negl
or
ret
xchg
movsb
add
add
addr16
xchg
mov
mov
enter
imul
cli
sub
adc
sbb
vpsllw
daa
mov
jecxz
and
imul
mov
or
std
xchg
push
repz
les
loop
inc
push
pop
addr16
aas
je
add
xchg
cld
xor
and
inc
push
mov
mov
pop
popa
insl
mov
andl
sbb
arpl
xorb
dec
push
mov
bound
fwait
mov
into
aaa
sbb
add
mov
dec
test
int3
or
cmp
imul
push
js
jecxz
push
xchg
xchg
shl
sub
cltd
mov
push
test
cmpsb
dec
repz
fcom
orl
into
in
pop
adc
push
idivl
into
xor
call
and
push
insb
imulb
je
es
out
cmpsl
cmp
fucomi
sub
add
and
push
pop
fcomi
imul
jle
sbb
ss
push
lret
or
mov
clc
cmpsb
xchg
pop
inc
aad
and
or
lcall
adc
push
imul
je
pop
fpatan
jo
add
fs
jne
movsbw
movsbw
lea
pushf
movb
lea
mov
setbe
lea
push
mov
jmp
call
dec
sbb
mov
inc
clc
push
pop
movsb
lret
imul
inc
popf
jnp
jle
ja
rcll
push
aaa
inc
dec
push
jp
movsb
mov
scas
adc
mov
movsl
sub
addr16
rcrl
and
lods
data16
roll
mov
in
xor
jns
mov
xchg
push
push
jb
cmpsl
test
jo
lods
add
mov
hlt
rcrl
cli
imul
cmp
jecxz
jae
or
sbb
xchg
outsl
inc
bound
out
aam
ds
xor
cli
xchg
adc
hlt
mov
add
sbb
aad
inc
and
pop
add
sub
mov
not
add
cmp
or
cmp
insl
and
stc
push
dec
mov
jne
call
jne
push
xor
subl
fstl
adc
cli
inc
sub
pop
pop
cmp
and
data16
cwtl
sub
push
repnz
or
stos
cwtl
cli
mov
mov
and
jle
cmp
mov
movsb
test
lret
imul
jno
fisttpl
xor
stc
fadd
inc
push
cmpsb
mov
call
sub
ss
xchg
push
pop
mov
lds
lods
xor
jge
sbb
insl
idivl
or
lret
pop
repnz
dec
leave
add
adc
inc
test
div
xor
push
mov
pop
sub
pop
repnz
mov
negl
icebp
add
pushf
push
imul
sbb
rcr
sbb
clc
inc
int
leave
add
jno
mov
inc
sub
bound
inc
pop
mov
inc
cs
jmp
fildll
icebp
sbb
jp
in
test
push
int3
pop
push
sbb
jne
pop
insl
dec
xor
gs
out
rclb
pop
icebp
or
cs
mov
ficomps
inc
dec
aad
fucomip
cmpsl
or
popa
jecxz
or
imul
lahf
mov
stos
pushl
mov
mov
lcall
adc
lret
fwait
shll
movsl
mov
sbb
jno
cmpsb
mov
js
adc
das
pushf
lea
jb
pusha
movb
mov
push
lea
jmp
decb
mov
inc
jns
fcmovbe
sbb
fimuls
sbb
cmp
test
imul
addr16
cli
pop
push
mov
or
div
sub
inc
scas
sbb
in
ret
xor
test
in
mov
lret
push
loopne
je
andb
sbb
out
mov
jb
imul
rclb
fmul
and
or
mov
dec
sub
out
push
outsl
add
icebp
xlat
add
jno
push
rorl
or
xor
mov
fwait
rcr
adc
addr16
or
sbb
ds
sub
mov
inc
inc
arpl
mov
xchg
pop
loop
lods
jmp
push
sbb
lods
add
adc
dec
data16
and
jbe
mov
incb
loop
insb
neg
pop
mov
scas
inc
popa
cmpsl
daa
or
cld
pop
cli
dec
popa
add
mov
push
mov
or
mov
lea
cmp
lcall
sub
in
or
lret
push
mov
pop
sbb
sbb
and
pop
insl
cmp
loopne
fistpl
mov
xchg
data16
inc
cmp
mov
xchg
pop
bound
ja
in
inc
mov
pusha
push
clc
lret
cli
imul
add
pop
ja,pn
popf
lods
loop
and
data16
sub
fstps
in
bswap
pop
pushf
movw
pusha
movw
pushl
ret
stos
inc
test
push
jp
iret
clc
pop
push
mov
xchg
push
jle
loopne
cmp
inc
jne
jns
leave
movsb
outsb
mov
inc
push
cmc
rol
out
insb
mov
addl
inc
fsubr
sub
jmp
mov
jmp
out
adc
or
ds
xchg
jp
mov
out
iret
xchg
bound
mov
xchg
sub
pop
enter
sub
push
pushl
popl
clc
pusha
clc
cmp
pusha
lea
ja
push
clc
sbb
dec
sub
bsr
btr
add
add
bswap
mov
shl
shl
mov
bt
repnz
jmp
mov
push
lea
call
pushf
pushf
pushf
call
test
xchg
and
sub
fmull
and
insl
jmp
lea
ret
sub
mov
lds
lret
fisttpll
xchg
ja
jl
fbld
pop
movsl
lods
hlt
test
inc
xor
outsl
jge
mov
adc
loop
pop
jmp
cltd
and
push
out
jp
dec
pusha
roll
push
es
lea
or
xchg
mov
in
add
mov
shlb
mov
jmp
adc
adc
sub
ret
ljmp
in
mov
xor
cld
lods
pop
jnp
push
das
sbbl
dec
stc
int
faddl
pop
cmp
or
dec
lahf
jl
inc
imul
imul
vmovhps
push
daa
stos
pop
repnz
outsl
out
sbb
pop
js
push
sarl
fmull
gs
adc
and
es
cmp
rol
adc
mov
jl
mov
insb
jl
push
rclb
adc
sub
push
pop
adcb
je
adc
fstps
pop
movsl
insb
push
sub
xor
sbb
fnstsw
clc
pop
pop
ja
test
xchg
dec
xchg
push
out
popa
mul
cmpsl
std
mov
or
inc
push
lcall
loopne
mov
sub
incb
cmp
xorl
fcoml
xlat
stos
push
andl
jo
xor
cmpsl
mov
dec
xor
pop
adc
xor
and
sub
out
leave
in
andl
rcll
es
mov
push
sub
iret
jg
dec
int3
pop
xchg
and
hlt
mov
dec
cs
mov
test
and
xor
sub
mov
sub
aaa
push
sub
cmpsl
stc
xchg
jle
ret
movsb
pop
ds
mov
adc
push
push
jecxz
and
push
push
or
jg
sub
fs
jne
pushf
cmc
ror
pushf
cmc
add
cmp
call
iret
scas
push
arpl
sbb
xor
push
mov
mov
xchg
jecxz
xor
and
outsl
adc
pop
xchg
cwtl
cwtl
popf
mov
and
mov
sub
pop
sbb
out
cwtl
or
cmpsb
shrd
cmpsb
pop
lret
test
addr16
pushl
outsl
pop
dec
and
repnz
jnp
mov
xchg
adc
ret
xor
lods
push
add
dec
push
push
test
sub
std
dec
lds
cmpsl
and
fistpll
fcomp
or
js
shll
fs
adc
xchg
sbb
cltd
insl
sbb
popf
sbb
repz
sbb
sub
push
mov
mov
jmp
dec
scas
loopne
xor
mov
sub
jmp
movsl
scas
jmp
xor
imul
adc
neg
push
setl
stos
setae
movb
call
ficomps
jp
idivl
dec
test
or
jp
or
pop
push
clc
jl
rcrl
shll
or
and
push
push
xchg
pushf
fchs
add
ss
lea
jne
adc
fimuls
add
ud2
loopne
lock
pop
pop
bswap
jmp
aaa
adcl
and
shl
dec
dec
jnp
fldenv
insl
icebp
bound
rorl
mov
int
int3
aaa
popa
fisubl
or
in
shlb
test
dec
cmpsb
aaa
cmp
mov
sub
movsl
mov
xchg
sub
push
imul
sbb
movsb
sub
mov
and
fidivl
dec
mov
fcmovnu
adc
add
jnp
add
stos
push
movsb
iret
cld
sbb
inc
sbbl
sub
mov
jno
addr16
ret
pop
mov
fistpl
mov
aas
mov
lods
lds
jp
mov
pop
popf
add
lret
roll
outsb
stos
loopne
lds
lahf
jne
and
push
jo
lcall
mov
clc
mov
icebp
lods
mov
adc
mov
push
ds
jmp
out
xchg
mov
add
stos
push
inc
pop
lea
and
into
add
jbe
push
or
fsubrl
push
out
cmc
xor
xor
mov
arpl
pop
jns
xchg
and
nop
jne
jle
mov
push
and
push
mov
cld
xchg
push
inc
ja
and
test
cmpb
mov
aas
jnp
rorl
addr16
mov
out
xor
mov
nop
pop
stos
push
in
out
add
in
and
inc
mov
test
cmp
rcr
imul
jp
jnp
pushf
push
mov
xor
adc
int
xchg
cmp
addr16
xlat
push
xor
pusha
mov
movsb
mov
ss
roll
daa
repnz
incl
or
divl
jmp
int
pop
xchg
fcomps
xchg
loop
fs
into
ljmp
cmpb
mov
pushf
leave
jb
or
jmp
push
lea
movsbw
jmp
sub
test
repnz
pushf
call
call
add
ja
jbe
dec
jne
dec
jo
outsb
add
ret
rcl
call
pushf
movl
pusha
movl
pushl
call
ret
cli
aam
push
jno
aam
and
jns
jmp
inc
out
sub
rcrb
jg
loope
cli
xchg
lods
gs
pop
dec
adc
andl
dec
pop
sbbb
xchg
push
cmp
mov
pop
outsb
aad
outsl
movsb
loopne
jg
movsb
int3
mov
inc
pop
add
jns
sahf
mov
scas
bound
xchg
sti
mov
dec
lret
mov
xor
and
in
pop
mov
xor
mov
mov
adc
negl
or
test
inc
pop
and
add
rcr
int3
push
outsb
lods
push
outsb
mov
or
mov
pop
push
movsl
adc
mov
les
ret
xchg
or
mov
popa
add
inc
jp
addb
mov
das
or
andb
inc
fistpll
mov
call
dec
mov
xorb
mov
add
jns
pop
test
aad
sbb
adc
adc
xchg
hlt
jl
cmp
in
and
aam
xor
stos
cmp
adc
sbb
add
cmpsb
aam
cmp
pushf
stc
xchg
rclb
inc
push
cltd
ljmp
dec
bound
rcl
sub
cmp
inc
cmp
or
arpl
out
adc
orl
ret
enter
sub
cs
mov
push
jmp
fcompl
xor
mov
sub
outsb
ja
movsl
dec
mov
inc
pusha
pushl
movl
pusha
movb
lea
jmp
pusha
lea
je
bt
clc
push
mov
add
pushf
pusha
mov
push
lea
jmp
mov
inc
xor
mov
imull
cld
das
xchg
sbb
sub
mov
and
pop
insl
mov
xor
push
or
je
gs
daa
mov
push
out
in
je
popf
sbbl
pop
dec
lahf
mov
xor
rcl
or
imul
lahf
out
and
movsl
lods
lds
cmp
push
daa
rolb
push
ss
push
lods
dec
sub
and
inc
nop
rcl
pop
adc
ljmp
loope
fs
ret
inc
add
fsub
sti
xor
int
sbb
jle
gs
mov
lds
cwtl
push
dec
mov
pop
dec
es
cmp
mov
scas
sbb
leave
cmp
insl
push
xor
loope
cwtl
fcoml
xchg
mov
in
dec
js
cmc
adc
cmpsl
das
daa
arpl
cmp
jmp
in
xor
insl
inc
and
sti
loopne
and
test
lcall
pop
mov
add
fnstsw
dec
sti
jmp
lahf
fwait
push
mov
adc
and
aaa
pop
je
iret
add
push
cmp
addb
mov
iret
shl
jne
mov
and
sub
push
and
pop
out
mov
push
cmp
fisubrs
mov
cmp
sub
add
sbb
mov
enter
cmpsl
mov
jnp
dec
add
jne
mov
insb
push
cmp
int
shll
fisubrl
lret
add
clc
aaa
int
rorb
or
or
push
out
aad
jbe
push
add
inc
iret
gs
and
pop
fdivs
mov
into
in
adc
add
shrb
mov
and
jg
movsb
and
data16
hlt
jp
mov
adc
mov
scas
lods
pop
gs
or
push
and
shrb
adc
sub
pop
add
cmp
fisubs
push
lahf
pushf
adc
or
outsb
jnp
adc
inc
lret
add
outsb
jnp
xor
addr16
enter
outsb
jnp
stc
cmp
add
mov
shr
lock
cmp
push
movsl
push
and
mov
and
push
in
test
sahf
pop
pop
outsb
es
ja
xor
jmp
jae
aaa
pop
outsl
mov
fnstsw
cmc
pop
imul
cld
xchg
inc
pop
icebp
dec
dec
xchg
das
stc
xor
nop
aaa
test
mov
inc
cmp
or
or
dec
lret
push
jne
int
jmp
or
test
lods
cli
cli
xchg
mov
js
push
ljmp
or
cmp
test
or
xchg
and
sbb
jb
or
push
in
test
in
insb
jne
mov
lcall
incl
enter
sub
lods
push
adc
sub
pop
xor
xlat
dec
ret
inc
mov
insb
into
sub
mov
and
push
adcb
dec
daa
mov
dec
es
aad
mov
repz
push
loope
test
dec
xor
addl
or
dec
push
loope
out
and
mov
dec
fs
lods
mov
pop
sbb
repnz
je
dec
and
mov
and
test
mov
outsb
push
lret
xchg
inc
pop
dec
sbb
cmp
pushf
pushf
icebp
aad
hlt
gs
mov
loop
mov
push
and
negl
xor
test
sub
stc
fwait
mov
jne
mov
into
movsl
test
jp
mov
enter
add
push
jmp
out
push
imul
lea
ja
pushf
lea
jb
bt
cmpb
call
adc
inc
mov
jle
icebp
add
or
xchg
aam
sub
into
jns
lods
sbb
jbe
mov
dec
pop
jl
or
dec
jo
xchg
outsl
pop
xchg
cmpsb
and
xchg
mov
or
mov
push
and
adc
jne
leave
jle
mov
mov
les
mov
pop
or
in
rcrb
scas
mov
xchg
bound
cmpsb
pushf
aad
mov
inc
insl
mov
add
push
bt
bt
cmpb
pusha
call
push
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
lcall
mov
inc
mov
lahf
lods
int
daa
or
rclb
sbbl
pop
cwtl
mov
popf
mov
mov
cmp
rcr
hlt
adc
push
movsl
jbe
cmpsl
jb
lret
cmpsb
mull
pop
loop
std
pop
arpl
loopne
icebp
jo
push
jae
jg
mov
cmp
jb
pop
mov
dec
shlb
test
adc
imul
mov
sbb
out
pushl
lods
orb
and
sub
pop
pop
in
mov
repnz
rcrb
add
es
adc
scas
popa
and
das
jns
mov
fildll
sbb
ss
loope
lcall
adc
test
shl
cmp
xor
push
adc
or
test
fwait
cli
call
fs
jmp
mov
setg
lods
mov
pusha
cmp
neg
pusha
dec
mov
not
pushf
push
sub
jle
sub
cmc
cmp
jmp
lea
ja
clc
cmp
jmp
cmpb
jmp
add
pop
ljmp
add
fdivs
popa
ljmp
add
pop
sub
add
sub
and
xor
jno
sub
xchg
xor
xor
jns
sub
xchg
and
add
xor
cmp
add
add
add
or
sub
or
xor
mov
sub
sbb
add
xor
xchg
ljmp
add
sbb
add
add
add
add
add
fnstenv
mov
add
add
add
add
xor
sub
xor
test
add
add
add
add
pop
sub
add
add
add
add
add
sbb
add
xor
mov
add
add
add
add
xor
add
add
ljmp
add
sub
add
ljmp
add
fnstenv
sar
sub
xchg
and
add
add
ljmp
add
fnstenv
add
inc
xor
mov
and
rcrl
fwait
aas
das
lret
pop
cmpsb
jno
in
xchg
push
jae
loope
int
es
dec
lea
js
mov
xor
clc
insl
sbb
lret
out
es
jmp
push
ss
call
dec
jo
mov
mov
out
or
push
jnp
cmpsb
shl
ljmp
pushf
sub
jae
std
enter
xchg
push
pop
hlt
int
xchg
ret
or
dec
push
test
sub
push
mov
pop
mov
fimuls
mov
mov
inc
jo
cmp
cltd
js
aaa
aas
push
insl
ljmp
cmpsb
jge
ja
icebp
xlat
mov
das
jae
loopne
lahf
or
fsubrl
dec
aas
mov
inc
mov
sarb
loope
xchg
mov
inc
push
inc
push
dec
xor
cs
insb
add
inc
lock
add
push
mov
sti
jb
push
aas
xchg
nop
and
xchg
sub
mov
jae
pop
sar
shll
rclb
fimull
pop
aad
cmp
fiaddl
in
mov
push
loope
xchg
xchg
insb
cmp
movsb
add
jle
xchg
imul
dec
js
fucom
es
jmp
mov
and
push
stc
cmp
decb
push
push
lret
aad
or
xchg
hlt
js
mov
push
div
test
fwait
pop
pop
aaa
mov
ss
fidivl
jne
fnsave
push
mov
dec
in
sti
mov
xor
sar
mov
or
xchg
cmp
enter
movsl
int3
lahf
movsb
cld
push
mov
dec
push
fcompl
pop
movsl
xor
inc
out
mov
test
dec
rcl
push
and
xor
js
leave
adcl
stos
rorb
jno
push
in
sub
repnz
adc
ret
std
in
arpl
fisttpll
and
adc
mov
mov
test
lds
lret
aaa
push
or
or
loope
fdivrl
in
lods
je
xchg
mov
mov
repz
outsb
add
and
cltd
int
aas
in
repz
fstl
adc
call
cmp
sbb
push
je
lods
shl
lret
mov
xor
and
jb
clc
pushf
cmp
mov
lea
jae
bswap
mov
pushf
mov
pushf
pop
call
int3
popf
pusha
mov
call
cwtl
dec
sahf
pushf
push
rcl
add
imull
and
adc
inc
xchg
sar
sbb
xchg
pushf
mov
flds
pop
stos
jnp
adc
mov
or
shl
out
mov
das
ljmp
jb
mov
cs
pushf
xchg
in
fsts
cmp
lods
jmp
cmp
cmpsl
lret
gs
cmp
fbstp
pop
lds
and
push
adc
and
mov
push
es
pushf
push
sbb
jge
rcl
pop
gs
lods
and
add
test
ds
into
and
jle
push
jecxz
out
cmp
in
push
leave
mov
mov
lcall
mov
daa
gs
mov
stc
push
popa
dec
fcoms
pushf
push
or
stos
andl
pop
fimull
xor
sarb
or
sbb
add
in
cld
rcr
shl
xchg
shl
bsf
lea
mov
shr
jmp
shl
fwait
push
xchg
mov
fs
loope
xchg
add
mov
xchg
xor
cmp
out
mov
sub
xlat
mov
js
loop
jb
daa
icebp
pop
xor
cs
fldcw
fisttpll
sub
js
mov
xchg
out
sub
mov
das
in
cmp
adc
call
js
imul
xchg
rcl
decb
dec
jp
adc
insb
pop
inc
push
adc
lcall
stos
ret
loope
cli
aas
inc
arpl
negl
ljmp
push
ljmp
lock
in
popf
rol
pop
ret
dec
pop
cs
cltd
and
cmp
jnp
jae
dec
ret
dec
outsb
sbb
jnp
mov
and
adcl
faddl
inc
mov
stos
jle
sbb
mov
mov
shrl
popf
sti
fldl
repnz
repnz
sub
movsl
mov
or
imul
std
and
mov
lcall
cmp
fistpl
mov
lcall
mov
adc
add
js
leave
push
sub
inc
mov
into
lock
test
orb
mov
mov
imulb
movsb
and
fmull
mov
cltd
cs
sbb
ret
sub
dec
loope
mov
fs
or
scas
jg
faddl
arpl
xchg
popa
push
and
jmp
aas
addb
cwtl
xchg
nop
stos
push
pop
decl
test
lock
jmp
mov
mov
lods
lods
cmp
lods
leave
push
mov
push
stc
add
bt
bt
cmc
mov
cmp
cmc
lea
mov
bt
cmp
call
lret
cltd
push
movsb
enter
xchg
mov
jmp
jns
xchg
fisubrl
inc
lds
shlb
jns
movb
xlat
jmp
in
dec
cmpsl
jno
lcall
adc
mov
push
lock
jle
aam
je
sub
jecxz
xlat
inc
add
pop
sub
adc
gs
stos
insb
inc
movsl
rcr
jge
pop
mov
push
lret
jmp
or
hlt
loope
lret
jns
inc
and
fists
jnp
fcomps
inc
xchg
sub
jl
or
in
inc
stos
cmpsl
add
bt
shld
inc
mov
cmc
push
test
add
stc
pushf
jmp
push
or
xchg
not
shrd
movsbl
das
mov
btc
shld
sub
ror
test
shl
call
call
mov
inc
dec
je
mov
jecxz
inc
dec
pop
push
cwtl
leave
repnz
xchg
xchg
and
jo
cwtl
insl
mov
fimull
out
sub
push
mov
inc
pop
test
lret
ror
cli
lds
popf
sbb
nop
push
push
cmp
sub
clc
push
int
pusha
inc
iret
pop
das
cmp
leave
mov
lea
cmp
aaa
dec
jle
ljmp
imul
das
add
scas
and
in
je
cmp
jmp
ljmp
xchg
lods
pop
movw
call
push
inc
push
inc
push
dec
xor
cs
insb
add
into
xchg
push
fisttpll
adc
dec
pop
movsl
mov
sti
cld
pop
add
pop
mov
push
test
jg
adc
leave
and
push
dec
cmp
icebp
mov
xor
movq
jnp
mov
out
mov
mov
adc
pop
enter
xchg
icebp
push
inc
cld
daa
jno
add
add
fistpl
dec
fadds
push
negl
mov
cli
mov
sti
loop
jbe
inc
scas
and
lea
pop
inc
dec
dec
xchg
sahf
loope
mov
adc
jl
dec
mov
push
pop
add
inc
ja
call
imul
mov
push
stos
adc
mov
pop
pop
pop
imul
jp
nop
mov
repz
sbb
inc
fbstp
mov
gs
dec
fisttpll
movsl
sti
and
je
shrb
not
xor
dec
xchg
jne
ss
scas
push
into
cmp
in
ret
jle
xchg
idivb
pop
lods
or
push
mov
add
pop
mov
ret
stos
mov
cmpsb
les
imul
test
std
rolb
inc
and
dec
pushl
popl
clc
cmp
call
neg
xchg
push
ja
rcll
and
lcall
out
or
imul
arpl
fs
testl
std
adc
pop
push
mov
rcr
mov
subb
lea
adc
sbb
movsl
xchg
xor
mov
jbe
mov
pusha
filds
cmp
mov
pop
sbb
cmpsl
sub
mov
loopne
cs
push
pop
mov
cmpsb
aam
mov
lret
inc
push
cs
fcoms
push
xchg
fwait
mov
test
cltd
mov
jp
ss
push
xor
xlat
icebp
and
cmp
jle
outsb
lea
xorb
pop
xchg
xor
sub
jbe
lods
add
add
xor
xchg
xchg
mov
call
add
lods
push
adc
cmp
mov
iret
sbb
xchg
ss
ret
mov
sbb
and
adc
adc
push
shlb
testb
pushf
or
lods
jge
mov
jmp
mov
sti
xor
lods
ret
push
push
nop
mov
lahf
rcrb
sbbb
xchg
push
inc
jae
stos
vmovlps
mov
cmp
cmpsb
adc
fiadds
or
es
popa
adc
or
xchg
out
add
jmp
mov
sub
fs
imul
add
mov
mov
outsb
add
lods
dec
ljmp
ds
sbb
xchg
cwtl
add
sbb
adc
push
or
push
mov
repz
inc
jg
repnz
ss
cmp
out
lods
push
nop
shl
js
adcl
mov
jbe
mov
dec
adcl
push
lcall
mov
sbb
leave
std
mov
data16
out
jne
inc
pop
fimull
out
mov
cmp
or
xchg
shl
sbb
movsl
outsl
dec
push
mov
inc
test
push
pop
adc
push
xlat
adc
dec
jne
push
inc
xchg
push
sub
push
mov
sub
dec
std
dec
cmp
test
popa
mov
das
scas
into
clc
cmp
adc
jg
xchg
jge
xorl
inc
bound
arpl
sub
scas
mov
xchg
or
int3
loope
rorb
cmc
xchg
in
jns
fcomps
and
cmp
xchg
add
popf
mov
sub
pop
pop
pop
sbb
lock
enter
cmp
mov
mov
pusha
add
pusha
inc
call
adc
je
lcall
adc
je
fsubs
ds
cwtl
jnp
inc
mov
or
ja
cmpsl
sqrtps
cmp
pop
or
xor
dec
test
add
sbb
push
rcll
mov
cli
xchg
xchg
call
sub
addb
sti
insl
add
dec
out
xchg
push
xchg
fwait
lods
testb
dec
imul
loope
insl
mov
cmpsb
jns
or
xchg
xchg
ror
movsb
push
push
stos
hlt
lret
fldl
out
cs
lret
pop
data16
cmp
push
mov
outsl
stos
out
inc
inc
ret
sti
arpl
sub
insl
cmp
js
sbb
cmpl
ss
rolb
cmc
aas
cmp
arpl
loop
mov
mov
add
pop
adcl
xor
xchg
mov
jbe
and
insb
xchg
mov
call
aam
sub
int
xlat
mov
cld
popf
or
bound
loope
xchg
inc
push
sahf
add
inc
inc
mov
sub
test
push
mov
or
rorb
adc
imul
xchg
pop
cmp
add
push
cld
test
sbb
add
mov
dec
xor
dec
and
fwait
insb
inc
adc
ret
fyl2x
sbb
lcall
inc
hlt
pop
inc
sbb
or
jne
xchg
push
loopnew
cmpsb
dec
inc
sbb
jp
adc
dec
aaa
lock
add
out
shrl
pop
inc
sbb
dec
scas
subb
jmp
ret
sub
or
or
enter
pop
fisttpl
les
sbb
rcl
mov
add
enter
push
adcl
fists
mov
mov
sbb
pop
je
les
sarl
lods
push
popa
sbb
jmp
mov
xchg
or
mov
loope
push
enter
push
je
hlt
mov
roll
in
scas
pop
mov
mov
outsb
ret
inc
xor
enter
adc
add
sbb
jmp
lock
lea
xchg
push
leave
jmp
test
stos
pop
hlt
adc
and
negb
pop
sub
mov
test
hlt
jne
push
std
pushf
push
xchg
test
aam
xchg
pushf
jmp
jecxz
mov
fwait
xor
push
mov
or
ss
inc
lcall
push
add
push
in
xor
push
mov
mov
xchg
imul
add
mov
nop
push
pop
jbe
mov
cmc
cmp
xchg
mov
dec
mov
sbb
add
mov
icebp
movaps
cmp
mov
cs
jae
jl
xor
gs
cmpsb
iret
into
lahf
inc
scas
sub
jmp
dec
ljmp
stc
jno
dec
ljmp
push
inc
mov
lods
addb
test
push
dec
mov
fs
mov
push
lret
fiadds
pop
jo
xor
sub
sahf
xor
lret
xchg
fisubs
dec
xchg
pushf
mov
add
jo
ret
xor
jecxz
sahf
nop
sahf
ret
push
cltd
mov
dec
mov
cmp
xor
pushf
test
sbb
xchg
or
loope
or
mov
ds
ss
test
add
fcmovne
testl
pop
and
pop
daa
jns,pt
data16
inc
add
push
pop
sbb
mov
jo
add
insb
push
fisttpll
ja
rcrl
in
jmp
cltd
fildl
push
pop
pusha
jns
add
mov
sbb
adc
adc
cmpsb
mov
test
pop
mov
bnd
pop
xor
adc
dec
and
test
sbbb
mov
fucom
shr
xchg
mov
hlt
add
addr16
mov
stos
das
push
inc
sbb
or
out
mov
out
push
ds
jnp
jecxz
imul
movsb
out
jno
pop
sub
mov
nop
dec
cmpsb
xchg
hlt
cmp
xchg
push
cs
cld
imul
and
add
cmpsl
mov
jp
sbb
call
icebp
cwtl
dec
cltd
out
adc
mov
cld
sbb
int
inc
xor
lods
ja
loopne
outsl
mov
xorl
ja
pop
sub
xor
push
fiaddl
push
hlt
inc
dec
shlb
xor
jle
in
xor
clc
xor
sbb
pop
lea
add
xor
pushl
ret
fimull
mov
in
cmp
xorb
movsl
inc
and
in
inc
addr16
jge
test
sub
ja
shl
iret
in
test
fdivrl
ret
enter
les
movb
repnz
roll
aad
sarl
leave
xor
in
xor
movsl
fldcw
jl
mov
sahf
lea
sbb
jl
fadds
lret
lds
cwtl
xchg
mov
mov
mov
inc
jb
fldcw
fs
popa
sbbb
mov
dec
mov
inc
jge
sbb
sbb
jb
lea
pop
xchg
push
pop
mov
xor
scas
xor
addb
iret
sub
sbb
es
cmp
mov
dec
dec
jl
and
lods
rorb
out
mov
push
mov
or
push
cmpsb
hlt
and
sbb
fdivrl
jne
aad
sbb
gs
sahf
xchg
pop
ljmp
or
in
inc
push
sub
mov
or
xor
adc
aaa
mov
mov
arpl
push
pop
xor
xchg
mov
or
out
mov
sub
sub
inc
jmp
push
mov
add
sub
cwtl
stos
pop
jecxz
sbb
dec
pusha
cwtl
enter
push
rcrl
sarb
push
cld
and
mov
sub
ficoml
dec
xchg
mov
hlt
mov
aam
dec
mov
lea
js
into
cli
sub
jp
mov
mov
je
lret
push
aam
xchg
pushf
aam
rorb
in
fs
xor
cmp
or
adc
aam
jnp
movsl
into
cmp
inc
loope
pop
jne
cmpsb
xchg
cs
mov
adc
sub
or
dec
pop
insl
pop
dec
int3
add
test
jecxz
sbb
mov
clc
push
in
dec
in
pop
push
or
and
fs
ja
mov
fwait
andl
sbb
mov
cltd
cmpsb
pop
int3
sbbl
and
inc
sbb
push
jg
movsl
mov
nop
push
jbe
jns
ror
push
sbb
mov
lods
mov
shl
arpl
repnz
push
lahf
cltd
aad
aam
je
jecxz
lret
fsubrp
stc
dec
mov
daa
or
insl
push
add
dec
dec
nop
test
loopne
mov
mov
and
fstps
test
sub
mov
sahf
in
clc
or
imul
adc
xchg
stos
cmpsl
sub
dec
rcll
popa
and
cmp
rolb
out
data16
aaa
lret
adc
loop
jbe
int3
movsl
mov
lcall
jmp
jb
sub
sub
mov
leave
mov
lods
lods
push
loop
in
fdivs
sarb
enter
int3
ret
push
cwtl
cmp
into
fbstp
adc
add
faddp
out
lcall
stos
roll
dec
pop
outsb
rolb
pop
sub
in
jg
sub
jnp
int3
movlps
pop
lahf
mov
or
jae
xorb
push
je
into
lahf
dec
mov
mov
push
jb
mov
sbb
adc
inc
push
jg
mov
aam
in
or
push
cmpsb
sub
pop
add
mov
jle
cmp
imul
cmpsb
and
xchg
ss
shr
enter
add
pop
dec
jo
ret
xchg
cmp
popf
mov
fcompl
jle
stc
xor
int3
stos
push
ss
xchg
mov
movsl
stos
xor
into
rcr
sbb
xchg
sub
sbb
rorb
mov
sub
xor
push
jno
cwtl
clc
int3
xchg
push
jb
mov
loope
mov
orl
cltd
sbb
or
fcomip
je
mov
stc
and
push
mov
outsl
dec
lahf
std
cmp
ret
mov
dec
cmpsl
adc
push
xchg
mov
and
lods
mov
idivl
jp
decl
mov
mov
mov
or
lcall
movsl
iret
jae
jne
add
add
enter
add
mov
xchg
sarb
dec
stc
and
jge
pop
in
or
lea
stos
icebp
andl
fidivrs
mov
lods
mov
inc
dec
shlb
push
xrelease
mov
mov
setne
not
setnp
pop
mov
pushl
push
pushf
mov
not
mov
movsbw
bswap
pop
push
pusha
push
pushl
ret
lea
jb
push
pushf
lea
jmp
add
stc
clc
test
mov
clc
cmp
test
mov
lea
je
jmp
lea
je
jp
pushf
mov
pushf
adc
pushf
pushf
pusha
lea
jmp
cmc
stc
movl
not
cmp
test
call
pushl
pushl
ret
pushl
lea
jne
cmc
shld
xor
shld
neg
shld
bswap
mov
neg
test
add
or
neg
mov
test
bt
test
pushf
lea
je
push
movw
pushf
lea
jmp
push
or
xchg
clc
sbb
sahf
push
lcall
adc
stos
xor
cmp
rorl
xlat
adc
cmp
adc
and
pop
out
jbe
ja
mov
sub
add
mov
inc
and
inc
jbe
fstps
and
imulb
cmp
cmpsl
adc
dec
mov
iret
imulb
jbe
mov
cltd
cmpsb
cmp
inc
scas
iret
cmp
in
jae
push
mov
repnz
pusha
movsb
scas
mov
and
push
imul
ds
dec
fwait
cs
dec
cmpsb
js
mov
adc
je
imulb
inc
push
sbbl
xorb
imul
push
pop
cmp
push
push
dec
insl
mov
aaa
ljmp
cmc
fldz
jmp
and
cltd
fs
sbb
and
push
adc
std
pop
pop
jne
jns
aam
xor
jecxz
mov
jno
pop
jno
loop
push
dec
push
mov
es
dec
nop
scas
mov
dec
psraw
add
out
mov
adc
out
in
inc
arpl
es
push
and
jo
dec
das
mov
or
pop
and
cltd
or
addl
ljmp
push
pop
jmp
cld
stos
popf
and
test
mov
mov
ret
pop
sub
cmpsb
mov
mov
add
dec
imull
mov
or
mov
test
mov
sbb
and
inc
and
jns
jge
cmpsl
enter
dec
pop
jne
xchg
test
mov
xchg
je,pn
aam
inc
rorl
add
add
movsl
pop
ret
test
sub
sbb
jg
cwtl
cmc
sbb
movsl
pop
lea
inc
xor
sub
push
stos
and
dec
test
adc
in
inc
sarb
cmp
dec
iret
xlat
cmc
adc
push
insl
jp
scas
fcomps
inc
ds
sbb
shl
sbb
push
sahf
leave
add
dec
inc
ret
insl
sbb
mov
loop
mov
insl
xor
xor
aaa
pop
pop
jge
aad
cli
dec
sahf
and
mov
fisttps
pop
xchg
mov
jno
adcl
cmp
jae
mov
sub
add
daa
mov
outsl
je
mov
daa
push
outsl
mov
jne
push
stos
or
mov
test
pop
pop
fsubrp
lea
mov
cmp
aad
out
ds
outsl
mov
mov
mov
cmp
test
adc
or
jecxz
test
sbb
ds
insl
push
jp
sbb
cmpsb
ljmp
call
call
mov
push
pushf
mov
jmp
imul
fisttps
in
or
dec
dec
push
jae
push
dec
imul
fs
ret
fcomp
jae
into
pop
pop
and
cvtpi2ps
xchg
in
push
dec
push
xor
xor
xchg
in
mov
pop
mov
mov
jns
loope
xor
insl
adc
pop
aam
inc
push
push
cmpsb
stos
mov
addr16
ja
sti
loop
jns
push
mov
xchg
and
shr
or
xor
pop
xor
pop
adcl
test
out
je
jecxz
pop
push
mov
call
lret
dec
adc
ja
and
mov
mov
mov
pop
repz
test
test
ffreep
andb
sbb
sub
dec
jns
mov
xchg
inc
popa
inc
shl
xchg
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
movl
mov
lea
jmp
adc
subl
pop
jbe
test
fwait
stos
lods
mov
das
sub
mov
shlb
mov
sub
inc
or
push
push
add
or
push
aad
pop
inc
sbb
rcrl
test
xchg
ds
mov
movsb
divl
pop
pop
ret
insb
lds
aam
lods
jae
mov
and
andl
mov
and
mov
fs
shl
and
aaa
popf
push
pusha
mov
mov
pusha
lea
jmp
add
push
call
xor
test
filds
jg
mov
jae
inc
lods
nop
dec
loope
xor
fimuls
jmp
sub
or
ja
enter
jno
mov
sbb
jbe
mov
in
or
ret
inc
push
and
hlt
rcl
mov
mov
movsb
push
jg
mov
arpl
int3
adc
push
or
pop
mov
out
jge
shll
out
jp
xchg
push
mov
cmp
lret
pop
jne
sbb
movsb
xor
mov
mov
jnp
mulb
push
out
aam
scas
repnz
not
lret
add
inc
jmp
clc
fnsave
lret
pop
testb
cmpsb
fs
cmpsl
or
addr16
xor
and
fistpl
jge
push
popa
rcrb
loopne
pusha
ss
xor
popf
loope
movsl
jl
xchg
imull
dec
push
mov
loop
sbb
inc
dec
outsl
cmp
cmpb
jmp
inc
push
inc
subb
mov
fcomip
sbb
mov
pop
shll
mov
movsl
pop
lcall
jbe
into
imul
movsl
add
jae
inc
pop
fcom
xor
sub
mov
out
aam
cmpsl
out
xor
add
xchg
dec
gs
jmp
call
push
inc
pushf
sbb
pop
xchg
pop
loope
xchg
fs
cwtl
dec
sarb
adc
es
add
cs
mov
jns
test
lcall
inc
inc
xchg
fyl2x
xor
jne
jecxz
repz
ss
aam
outsl
or
cwtl
ret
jb
stos
push
inc
repnz
incl
sub
pop
fdivr
ljmp
adc
add
dec
mov
mov
idiv
pop
movsb
push
mov
leave
mov
les
mov
test
jge
xlat
push
mov
outsl
mov
jge
jmp
scas
jg
cmp
mov
cs
adc
into
push
dec
insl
insl
lret
push
test
cmp
mov
gs
fsub
es
pop
push
lcall
sub
imul
dec
call
sbb
sti
jbe
aam
aas
and
push
lods
repz
mov
mov
ret
leave
arpl
mov
sub
in
xchg
sbb
adc
cs
decb
dec
rorl
xchg
imul
fmul
mov
test
mov
imul
push
imul
mov
add
sbb
pop
std
std
mov
pop
ret
ja
xor
int
or
mov
pop
je
xor
pop
jg
in
jge
test
dec
push
and
aam
pop
leave
add
out
aam
adc
test
scas
jge
icebp
mov
into
add
dec
inc
inc
inc
and
in
xchg
push
jbe
push
inc
sbb
sub
xorb
filds
rorb
push
cmp
mov
pop
jg
fnstsw
cli
gs
cltd
push
jno
shll
inc
mov
dec
lret
outsb
pop
in
fdivrs
mov
scas
sub
jo
and
ret
sub
cmp
mov
cltd
ja
ds
push
dec
fimuls
dec
sti
jp,pn
mov
imul
out
jns
movsb
fsub
sti
daa
aaa
push
mov
jne
sbb
cmpsb
leave
stc
test
pushf
pusha
pushf
pushf
lea
je
test
test
jns
push
sub
test
bt
cmp
push
mov
lea
jmp
rcll
jg
inc
mov
inc
insl
movsl
enter
push
sti
cmp
xchg
stc
lock
pop
inc
ret
adc
jle
js
inc
and
xlat
mov
out
mov
rcll
push
into
xor
cmp
movsb
lret
sbb
cmp
jno
or
lret
sbb
lret
mov
sbb
fsubrl
scas
add
cs
mov
xor
out
add
scas
fisttpl
adc
aas
pop
dec
arpl
mov
pshufw
sarl
add
les
cmp
cli
inc
xchg
and
sbb
ret
out
sbb
aam
rorl
sbb
lcall
inc
shll
xor
inc
cltd
and
adc
xchg
inc
test
mov
inc
mov
dec
mov
dec
popf
cmp
jb
icebp
les
jl
fnstcw
mov
clc
outsl
js
sarl
jl
or
xchg
sbb
mov
add
decl
inc
jle
inc
xchg
mov
or
jns
mov
adc
sbb
insl
jge
int3
icebp
push
or
adc
mov
std
fs
and
js
push
idiv
mov
jb
movd
and
sub
adc
sti
xchg
jmp
pushf
in
xchg
jle
dec
mov
sbb
mov
pop
jb
xor
add
js
adc
jg
jmp
mov
jns
aad
je
orl
jnp
rcrb
sbb
jo
scas
test
push
inc
sub
inc
mov
dec
out
push
jge
inc
ja
aam
adc
inc
cmpb
in
in
arpl
ljmp
xor
sar
leave
and
cmp
cmp
sub
int
push
or
mov
inc
ret
sbb
dec
or
faddp
pop
mov
insl
loop
mov
mov
xchg
in
sub
pop
mov
sub
inc
or
sub
cmp
xlat
push
pusha
xchg
cmp
push
cmp
xor
lcall
cwtl
dec
dec
add
and
insb
loopne
ljmp
loopne
and
sub
xor
inc
inc
movsb
xchg
imul
or
int3
push
cmp
mov
in
loop
shll
adc
shrb
mov
add
cmp
pop
out
xor
cwtl
jg
aam
jp
loopne
pop
and
inc
por
stos
jmp
mov
icebp
cmp
repz
loope
popa
jg
cld
or
test
jmp
out
not
mov
pushf
movl
push
pushf
lea
jmp
call
sub
adc
ret
cli
inc
inc
adcl
je
les
fnsave
in
mov
mov
jp
out
mov
push
mov
stc
lahf
mov
out
ficoml
nop
jne
js
cmc
sbb
sbb
jb
jecxz
pop
push
mov
jns
xor
cmc
push
pop
pop
cwtl
cmp
and
mov
in
xor
mov
add
outsl
mov
or
or
out
and
pushf
pusha
add
movw
lea
jmp
lret
pop
mov
inc
xor
fcomp
cmp
imul
inc
cwtl
js
pop
xor
mov
cmpsb
rcl
sbb
jb
xlat
aas
pop
lret
jge
popf
add
adc
in
leave
psadbw
adc
mov
jp,pt
mov
sti
add
popa
cmp
inc
test
call
ret
xor
movsb
test
idiv
ds
xchg
add
push
rep
lods
add
stos
cmp
leave
iret
and
leave
sarb
aas
sbb
je
out
gs
das
mov
bound
dec
int
push
aaa
popf
icebp
cltd
mov
mov
aam
shrl
rorl
add
stos
cli
loope
sbb
mulb
push
movsl
mov
add
pop
sub
lret
jb
or
mov
dec
inc
outsl
jge
or
imul
xchg
rcll
aaa
clc
test
call
jns
jp
inc
data16
mov
xor
pop
sbb
adc
mov
cmc
lods
xor
iret
xchg
inc
loop
clc
imul
inc
fdivrl
sbb
test
xchg
add
pop
imul
inc
imul
ss
aam
adc
mov
fisttps
repz
dec
test
mov
jns
mov
and
fs
jmp
pusha
pushf
lea
jae
call
push
mov
cmp
shrd
pusha
movsbw
lea
movzbl
pusha
mov
add
mov
ror
sar
movzbw
mov
pop
mov
ror
bsf
sbb
bswap
mov
stc
mov
bts
inc
or
xchg
mov
not
rcr
jmp
shll
sub
add
jne
mov
sbb
ds
outsl
ss
popa
ljmp
push
testb
cli
addr16
mov
fwait
sub
push
pop
push
das
mov
lret
pop
clc
mov
mov
cld
xchg
aam
pop
movsl
in
into
sbb
jnp
and
adc
shl
fbld
cmp
lret
xchg
cmp
mov
xor
ljmp
sahf
lahf
ret
sbb
test
rorl
es
push
pop
cmp
push
inc
les
sti
inc
or
popa
cmpsl
pusha
mov
sub
lods
push
push
mov
pop
xchg
shlb
cwtl
repnz
jg
ljmp
fdivrp
loopne
lods
hlt
aam
or
je
je
loope
jns
adc
stc
sti
adc
mov
fldl
mov
in
mov
lock
inc
loope
jl
mov
orb
aam
fwait
add
call
xor
lret
xchg
mov
and
pop
sbb
cltd
subb
andps
mov
js
aad
xor
fnstenv
or
ss
nop
subl
pop
fldt
pop
lret
jp
movsl
roll
les
pop
imul
push
sarl
std
shrb
adc
ficomps
ret
enter
push
jl
adc
mov
mov
dec
insl
fdivr
dec
push
adc
ja
inc
mov
insl
outsl
add
or
lcall
or
repnz
cli
jmp
ljmp
das
movsb
ds
jmp
xlat
mov
aam
outsl
fildl
push
add
iret
aam
xor
xchg
in
loop
push
jecxz
push
and
repnz
add
inc
pop
shlb
and
je
add
pusha
pushl
pusha
inc
push
lcall
inc
jle
in
aaa
jg
xorl
add
lock
out
andl
inc
pop
lret
outsb
incb
mov
dec
pop
hlt
ja
leave
adc
clc
and
xor
jmp
out
in
xor
fcomp
aaa
aam
andl
sbb
and
mov
mov
add
lcall
mov
shrl
cmp
enter
jp
sbb
push
sbb
jge
pusha
push
ljmp
rorl
inc
mov
dec
mov
xchg
pop
cmp
into
jmp
adc
xchg
insb
sar
pop
in
cmc
sub
pop
pop
jmp
push
setg
inc
push
xchg
neg
inc
jmp
cmpsl
lret
int
push
cmpsb
mov
add
mov
es
adcl
int
pop
adc
inc
cli
or
stos
cmp
dec
dec
int
jge
push
mov
sub
loop
push
pop
jo
mov
xchg
insb
gs
adc
pop
add
sub
insl
mov
mov
sub
sub
hlt
hlt
sbb
outsb
outsb
lods
lret
xchg
rdtsc
enter
aam
and
push
push
mov
sub
jne
ret
adc
mov
mov
gs
fmul
int3
xchg
inc
sbb
mov
aam
lds
cmp
push
jl
ret
xchg
mov
xor
push
adc
dec
xlat
push
fs
add
adc
adc
fistl
lret
in
aas
dec
mov
mov
pop
enter
adcl
inc
push
nop
stos
fcmovnbe
adc
aas
add
add
ret
in
add
pop
divl
xchg
mov
inc
xchg
cmpsl
lock
jns
sub
adc
pusha
loopne
inc
fistpll
in
jnp
sub
xor
int
push
jns
clc
inc
xchg
lock
push
stos
testb
push
mov
leave
aas
push
push
icebp
inc
shl
mov
enter
movsb
subl
sar
sub
je
mov
fsubrl
arpl
and
je
jmp
push
push
shlb
mov
cli
daa
cmp
mov
pop
scas
fsubl
push
mov
mov
sbbb
rcl
out
or
rcrb
xchg
jb
std
jl
xchg
scas
adcl
lret
jmp
sbb
mov
dec
test
insl
jno
std
in
fs
add
mov
push
cmp
dec
cmpsb
nop
cmpsb
mov
shlb
push
jp
inc
fs
xchg
sbb
xor
cmp
jecxz
into
dec
mov
ja
add
pop
fisttps
inc
hlt
aas
cltd
mov
call
pusha
addb
dec
scas
dec
jb
mov
mov
test
ss
inc
dec
jp
pop
pop
rclb
adc
ljmp
cmpsl
lods
loopne
push
push
push
inc
sbb
fmulp
jo
pop
inc
cwtl
xor
mov
inc
fs
mov
cli
std
cwtl
mov
aad
aaa
ds
pop
push
popa
jo
or
pop
into
dec
or
ret
jbe
stos
iret
les
leave
iret
jmp
mov
push
mov
sti
push
test
addr16
sub
add
push
mov
clc
or
jmp
icebp
ljmp
arpl
jb
push
inc
sub
cs
aaa
mov
or
test
lret
mov
cmpsl
out
and
hlt
rolb
cmp
stos
xor
jp
bound
pop
mov
je
movsl
data16
inc
outsl
scas
filds
push
xor
mov
xchg
or
mov
xorb
jno
add
sbb
gs
scas
pop
adc
aad
jnp
sub
cld
jns
jg
repz
leave
push
data16
and
jae
push
test
pop
jge
fsubl
je
lds
or
ret
iret
inc
sbbl
stc
lret
hlt
stos
scas
xchg
out
lret
add
shlb
mov
xchg
push
jb
sbb
mov
jge
push
and
jg
add
dec
addr16
aam
pop
jg
jl
push
insb
jno
gs
mov
inc
dec
je
lods
out
pop
and
lock
cmp
lea
or
je
inc
daa
sub
mov
fwait
pop
mov
stc
cmp
sub
push
das
out
sub
hlt
mov
gs
sub
jne
test
or
dec
sbbl
xchg
ja
addr16
and
negb
cli
inc
dec
xchg
dec
mov
or
xchg
pop
dec
loopne
adc
outsb
pop
sub
lock
orl
pusha
out
shrl
in
in
mov
jne
stc
jno
inc
lret
js
cmpsb
in
or
jne
out
and
push
test
push
fcomi
cmpb
mov
fnstsw
testl
mov
and
xlat
test
adc
fnstenv
repz
dec
mov
inc
and
lea
les
pop
fs
inc
mov
aad
faddl
lret
fisttps
cmp
int3
inc
rcl
sub
mov
xlat
push
and
repz
aaa
cwtl
sub
jne
sub
test
jo
inc
push
sub
or
test
add
inc
in
mov
xchg
pop
mov
ds
ret
ja
sbb
xchg
icebp
jb
cs
mov
inc
test
lcall
fucomp
fildll
cmp
push
or
xchg
jle
jecxz
push
loop
push
pusha
pop
cmpsl
or
mov
cmpsb
leave
bound
jge
lock
pop
inc
jp
xchg
mov
ja
adc
sarb
es
out
in
popf
mov
mov
xor
mov
scas
xor
flds
lret
or
repz
mov
sub
stos
rorb
inc
cli
ds
addl
fbstp
cmp
fwait
decb
lahf
jg
adc
scas
testb
lods
stos
out
cmp
shr
inc
inc
push
mov
shr
mov
dec
clc
cmc
add
movzbw
stc
shl
shr
stc
clc
mov
neg
and
not
neg
add
movsbl
mov
push
jmp
cmp
loopne
push
inc
push
jle
test
inc
pop
aam
push
pusha
es
ds
sbb
inc
mov
imul
mull
cmp
pop
jns
sub
sub
sub
push
lock
mov
push
cmp
mov
inc
xchg
mov
cmpsl
jg
fmuls
sbb
dec
insb
jns
fwait
stos
aad
pusha
popa
and
jns
sub
inc
push
ja
mov
inc
jbe
xchg
sarl
addb
outsb
or
mov
testl
and
shlb
mov
aam
lds
cwtl
jle
xor
mov
addr16
ljmp
cltd
inc
cmpsb
xor
push
pop
add
pop
or
pop
testl
sbb
fdivrp
data16
rol
xchg
in
inc
imul
ja
outsl
push
adc
lds
sub
bound
mov
mov
sbb
je
fsubrs
pop
test
hlt
ret
adc
scas
mov
inc
loop
pop
mov
add
mov
sub
movsb
adc
shll
xor
gs
cmp
mov
inc
sub
pop
dec
test
movsl
push
outsl
pop
push
mov
inc
sbb
cld
arpl
jnp
adc
dec
add
add
add
rcl
push
rcr
mov
cwtl
rcr
shr
movzbw
sub
movzbl
shl
rcl
push
inc
xor
das
push
clc
aam
sar
push
pushf
sub
movzbl
movzbl
pushf
lea
pushf
movl
mov
pushf
mov
call
push
mov
adc
pushf
pushl
push
pusha
lea
jmp
and
sbb
push
data16
fcomip
pop
pop
mov
data16
adc
xchg
leave
call
lcall
into
push
add
xchg
jns
push
jle
xor
dec
scas
loope
dec
ja
icebp
es
aaa
dec
jp
and
push
inc
xor
mov
insl
push
outsb
test
jnp
les
repnz
jmp
and
pop
mov
dec
xchg
cwtl
ret
rolb
or
or
mov
pop
inc
mov
jmp
mov
jae
inc
lock
fdivrl
mov
or
mov
shlb
pop
pushf
movl
mov
push
lea
jmp
stc
sub
mov
xchg
loop
add
push
shll
dec
push
dec
sub
push
pushl
arpl
cmp
test
dec
push
clc
cmp
daa
cli
les
in
jecxz
dec
scas
xlat
cmpsb
jp
dec
and
mov
in
pop
cmp
test
pushf
dec
dec
addl
je
sbb
stos
adc
sbb
push
sbbb
outsl
mov
jl
mov
cmp
push
jb
sub
imul
jmp
sbb
loope
les
push
and
sbb
sub
cltd
leave
out
push
je
mov
iret
insb
jmp
sub
cmp
imul
nop
movsl
xchg
hlt
stos
jne
jecxz
das
mov
sub
cmc
scas
pop
inc
xor
pop
outsl
subb
dec
pop
pop
cltd
xchg
jle
push
add
outsb
into
iret
imulb
jne
test
std
inc
fs
fnstsw
mov
clc
jb
sbb
outsb
test
jae
outsl
repnz
jbe
ffreep
scas
and
pop
enter
mov
jbe
jecxz
into
mov
in
and
dec
imul
xchg
out
jne
les
daa
xchg
jae
xchg
push
mov
mov
push
xchg
es
sbb
aam
fstpt
pop
sub
inc
or
test
or
pop
xchg
sahf
mov
arpl
and
or
test
push
scas
lret
jo
mov
pop
in
lret
pusha
rcrl
test
psubusb
data16
ret
dec
jns
xor
jb
adc
push
mov
push
jne
mov
bsf
jnp,pn
shll
inc
sbb
sub
aad
push
or
and
cltd
inc
fdecstp
add
add
leave
ret
pushf
insl
xchg
enter
xchg
call
mov
push
pop
mov
lcall
mov
sub
or
dec
xchg
lahf
iret
addb
push
xlat
lea
call
test
clc
pushf
call
inc
xchg
add
push
bound
and
jbe
xchg
or
jge
test
pop
sbb
nop
pop
jno
inc
xchg
mov
scas
or
in
or
aaa
add
mov
or
inc
sbb
cmp
aas
mov
ret
shll
popa
cmpsb
pop
pop
icebp
shlb
lret
lret
loop
fstpt
cmp
ss
cmp
ret
testl
mov
xor
les
inc
pushf
jmp
add
inc
push
outsb
jne
je
insl
add
mov
adc
test
mov
mov
into
call
add
cmpsl
iret
rcrl
adc
xor
sti
and
scas
roll
movsl
test
xor
outsb
rolb
add
fst
test
jecxz
ror
andl
sub
and
leave
adc
adc
fistps
inc
cmp
xor
call
int3
shr
xor
test
lret
pop
mov
add
lds
pop
add
inc
sub
je
scas
aad
inc
jg
scas
hlt
idivl
std
in
divb
std
negb
loopne
sub
pandn
push
dec
scas
cmpsl
pop
hlt
xchg
aas
movsb
call
cmp
push
xor
adc
in
scas
adc
cmpsl
ds
lcall
int3
push
nop
call
gs
push
cmp
ffree
add
push
insb
mov
call
andb
or
in
es
pop
lret
test
leave
push
mov
adc
mov
push
pushf
lea
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
pop
imul
xchg
pushf
test
dec
fs
nop
rcll
rcrb
pop
daa
inc
loopne
cmp
adc
rcll
push
lret
mov
fimuls
adc
iret
push
rcr
xchg
and
pop
push
xlat
lret
fsubl
xchg
add
cmp
jp
js
lret
xlat
jae
cwtl
or
mov
cmp
pop
push
jae
pop
out
push
fwait
jge
add
aad
xor
lret
gs
jmp
dec
test
xchg
fwait
loopne
push
push
aad
inc
insl
mov
pop
jne
jp
in
imulb
ljmp
in
cmp
repz
sub
push
cs
fmuls
in
rclb
cmp
stos
pushf
ret
cmp
mov
mov
std
adc
push
or
popf
jns
cmp
sub
mov
testl
in
jmp
sub
int3
in
lret
sub
stc
pushl
lea
jb
cmc
cmp
pushf
jmp
movsbw
mov
mov
pushf
pusha
movw
pushl
ret
jle
add
inc
aam
pop
push
imul
arpl
stos
jg
push
int
cmc
cli
cwtl
cmp
jns
adc
fistpll
xchg
repnz
mov
jle
or
repz
mov
cmp
insl
in
insl
and
movsl
mov
jge
sbbb
adc
into
sub
push
stos
sub
clc
pop
mov
pop
jae
push
ja
lock
out
lret
xchg
ret
dec
xor
inc
mov
push
xchg
test
aad
pop
data16
sbb
and
fiadds
push
jo
lret
push
aas
dec
dec
mov
loopne
or
insl
daa
fnstcw
test
leave
and
addr16
cmp
push
mov
inc
int3
pop
bound
xchg
xchg
int3
addb
or
sahf
test
ret
lods
divb
mov
insl
fcmovnb
sub
mov
xor
stos
mov
sbb
push
push
call
sub
imul
inc
and
jne
in
sbb
gs
cltd
mov
inc
mov
call
pop
rcll
incb
fsubrl
nop
sti
pop
pop
inc
in
adc
inc
shrl
xchg
imull
jecxz
in
pop
in
lods
sbb
sub
jmp
clc
and
jge
scas
mov
clc
popf
in
rclb
push
ret
sub
ja
push
sub
in
push
push
mov
adc
mov
sub
dec
mov
repz
mov
cltd
mov
jno
jmp
shr
xor
repnz
lock
std
std
addl
ret
jbe
popa
ror
pop
or
mov
pop
jmp
xor
xchg
pop
cld
in
jge
test
dec
outsl
and
aam
push
iret
add
call
xchg
ja
rcrl
lret
add
pop
xchg
inc
jp
in
xchg
push
imulb
cmp
ret
push
pop
push
enter
fmuls
mov
movl
jl
pushf
movl
pusha
mov
push
pusha
lea
jmp
repnz
push
gs
in
negb
ds
nop
rcl
sbb
fwait
or
call
lret
lret
insl
sar
std
xorb
sbbl
out
and
mov
test
adc
jl
popf
lock
xor
out
inc
push
bound
leave
push
sbb
fnstsw
rol
lcall
imul
rorl
xor
mov
inc
jo
sub
iret
xchg
sub
fsubrl
push
adc
adc
pushf
inc
out
hlt
insl
pop
lods
filds
cli
push
pop
cmc
rorl
cmp
leave
fsubr
sub
xchg
cli
out
cld
pop
fcoml
jg
and
mov
movsb
jae
mov
add
push
cld
sbb
or
jne
aad
imul
repz
sbb
and
dec
sbb
lds
cmp
adc
dec
cmc
mov
lahf
ja
add
jne
mov
push
dec
dec
pop
ret
jno
jp
jmp
sbb
add
shl
and
lea
jg
ljmp
rcrl
into
test
push
xor
arpl
dec
jne
das
add
mov
mov
jb
test
sahf
dec
gs
mov
mov
add
add
test
fwait
and
cmpsb
mov
xchg
test
xor
pop
push
push
sbb
add
lods
xchg
insl
movsb
int3
in
push
push
mov
mov
movsb
sbb
in
sahf
out
test
dec
imul
xchg
mov
mov
pop
xchg
jo
loop
in
imulb
or
mov
pusha
arpl
cmpsl
sbb
dec
push
orb
mov
out
test
inc
adcl
xor
decb
cmp
repz
lret
dec
in
arpl
cmc
cs
pop
xchg
add
adc
add
enter
jecxz
andl
cwtl
cmp
int
fisubl
mov
leave
out
add
pop
push
push
out
mov
mov
cs
pusha
pushf
inc
movb
movw
pusha
lea
jmp
push
pop
shll
inc
add
cs
lahf
movsl
stos
rcr
repnz
mov
clc
pop
mov
xor
mov
mov
mov
and
sahf
inc
push
mov
dec
ret
sub
lcallw
cmpsl
in
int3
xor
in
inc
mov
stc
xor
shrb
out
fwait
push
add
or
mov
cli
sahf
mov
enter
xchg
push
fnclex
push
or
enter
inc
mov
lds
dec
mov
pop
aaa
js
xlat
inc
lods
movsl
or
xchg
jp
jge
sarl
push
adc
jb
jle
xchg
dec
mov
and
movsl
cmc
add
xchg
push
sbb
daa
xchg
and
xchg
andb
shrl
inc
lds
call
push
push
sahf
jg
adc
mov
insb
jb
pushf
mov
push
push
std
sbb
and
fadds
jp
ret
fbld
and
add
inc
out
adc
push
jl
stos
test
cmpl
addr16
cmp
jecxz
push
pop
shl
inc
je
jno
or
mov
mov
jns
xor
pop
stos
out
test
aas
xchg
inc
sbbb
cwtl
or
loop
jbe
sbbl
jmp
out
popa
pop
xchg
jg
sbb
call
add
adc
jecxz
test
mov
jl
xchg
mov
and
jo
pop
movsb
mov
popa
push
cli
cmp
jg
in
sub
sarb
pop
and
and
movsb
gs
and
jle
orb
push
in
or
jnp
mov
push
xchg
mov
or
js
jp
das
fmuls
sahf
inc
add
hlt
test
pop
mov
clc
popf
jmp
mov
pop
leave
mov
or
dec
pusha
in
and
mov
repnz
inc
outsl
push
push
call
pop
into
lret
stc
bswap
call
lea
jne
call
pushl
lea
jb
clc
bt
pusha
cmpb
pusha
jmp
pushf
pushl
popl
pushl
pusha
movw
pushf
pushl
ret
add
inc
gs
jne
jb
outsb
je
bound
arpl
fs
jns
push
jmp
pmullw
pusha
push
cmp
aam
incl
mov
mov
lret
adc
jecxz
scas
inc
imul
addr16
xchg
movsl
push
pop
fildll
pop
inc
jb
lock
jge
jno
imul
lahf
mov
push
sbb
pop
bound
push
aaa
xchg
sbb
push
mulb
out
loop
icebp
bound
stc
dec
repz
pop
fsubs
test
inc
cltd
adc
dec
pop
stc
push
loopne
call
dec
sbb
aad
dec
pop
pop
mov
movaps
sub
lahf
pop
push
out
out
adc
aas
inc
adcb
fldenv
pushf
pushf
adc
loopne
jg
sub
ds
mov
and
rolb
mov
jno
fsubrs
inc
repz
roll
scas
pop
aam
mov
cmp
es
popa
sub
sbb
push
or
bound
int
repnz
fwait
ret
and
xchg
mov
movsl
rcrb
sahf
push
pop
sahf
adcl
fisubl
outsl
pop
jo
out
jnp
cmp
ja
push
sti
roll
cmpsb
ljmp
scas
not
popf
ret
adc
mov
movsb
cmpsl
icebp
repnz
pop
xor
inc
das
aam
mov
inc
jne
adc
inc
ret
push
xchg
scas
das
outsb
dec
xor
mov
sbb
or
in
jmp
jmp
outsb
jno
rolb
ret
sbb
push
sub
xchg
shlb
sahf
cltd
mov
or
in
jo
add
sub
add
and
call
jne
push
inc
addr16
data16
add
cmp
insl
push
xor
movsl
pop
xor
jg
mov
into
jl
push
jno,pn
clc
imulb
xor
mov
repnz
and
xor
out
data16
pop
push
add
cwtl
rcr
and
lahf
fs
in
bound
scas
jae
jmp
cmp
inc
jo
push
arpl
ret
loopne
fwait
cmpb
dec
fadds
add
in
pop
sub
repz
or
sub
inc
mov
pop
sub
into
dec
push
cmp
sub
scas
push
and
ljmp
add
push
dec
adc
inc
add
push
dec
push
push
jnp
iret
mov
inc
add
jge
cmc
jmp
neg
stc
mov
call
pusha
movb
lea
jbe
bswap
jmp
lea
mov
pusha
call
int3
sbb
dec
lods
mov
int3
mov
cld
push
movsb
push
xchg
repnz
pop
xchg
ja
xor
and
ss
repnz
pop
sub
popf
push
inc
jecxz
cmpsl
and
mov
jl
pop
jge
or
adc
inc
sbb
pop
mov
bound
movsl
xchg
mov
and
nop
mov
movsb
lahf
sar
test
sub
pushl
movb
lea
je
clc
jmp
pop
mov
pop
push
jns
mov
addl
pop
xor
addl
aas
repnz
gs
mov
test
outsl
push
xchg
enter
cmp
insb
gs
int
aas
inc
dec
int
cwtl
mov
xchg
or
mov
sbb
icebp
cmp
repz
ret
dec
sub
je
pop
pop
roll
mov
mov
leave
or
inc
ret
inc
sub
test
adc
mov
xchg
ret
popa
mov
jp
push
movsb
inc
pop
push
sub
test
mov
mov
mov
and
jge
mov
fwait
aas
push
out
cmpsl
adc
sbb
gs
xor
lds
xchg
adc
sbb
fidivrl
or
sti
test
jne
and
mov
arpl
test
stos
lea
jno
push
sub
xchg
sbb
dec
or
ret
hlt
scas
aam
and
in
cmp
cmp
xor
inc
ds
xor
inc
ds
in
cmp
xor
das
in
das
cmp
xor
cmp
inc
in
cs
cmp
das
sub
xor
xor
xor
sub
cmp
xor
inc
in
icebp
aas
int3
pushf
pushf
lea
ja
pusha
lea
jb
test
call
lea
jne
pushf
call
cmc
jg
pop
push
mov
xchg
pusha
xchg
daa
stos
cmpsl
mov
loop
lds
inc
jmp
mov
dec
push
mov
imul
cmp
and
insb
lret
push
sbb
jo
shl
mov
aam
dec
jl
or
mov
movsl
in
and
cmp
mov
in
and
in
shlb
ja
mov
push
xor
add
ljmp
sbb
pop
push
xchg
fwait
cwtl
fsubp
adc
inc
ja
rorb
fnsave
pop
lds
xor
sub
mov
pushf
fdivl
xchg
lea
rolb
push
mov
push
repnz
addr16
movsl
or
or
call
push
push
mov
jo
sub
jecxz
push
fstpl
adc
and
cmp
into
push
dec
dec
dec
dec
cs
insb
add
das
imul
jecxz
pop
mov
add
test
scas
sti
pop
ljmp
lods
inc
fmul
and
popf
push
ret
int
loop
lahf
dec
mov
mov
cld
dec
outsb
pop
sbb
inc
cmp
jg
loope
in
fstps
or
lgs
cmc
xchg
icebp
dec
cmp
dec
xchg
xchg
popa
aam
cld
mov
ja
pop
push
mov
cwtl
cmp
in
test
cmpsb
ljmp
xlat
mov
and
pusha
arpl
imul
stos
iret
fs
xchg
or
jmp
ljmp
push
in
movb
pushf
movl
pusha
pushf
jmp
mov
inc
dec
cmpsb
rorb
dec
xchg
add
out
push
pop
jmp
ret
test
out
shlb
outsb
jl
test
pop
xor
adc
addr16
sarb
add
fistps
dec
xor
adc
or
and
mov
repnz
lds
sub
xchg
add
mov
rorb
xor
sub
int
add
call
shl
xor
or
dec
push
orb
add
inc
bswap
in
push
je
mov
call
scas
loope
dec
adc
or
loope
divb
mov
fs
and
imul
add
jno
les
push
push
pop
in
addr16
loope
aad
lret
dec
insb
mov
pop
and
cmp
hlt
movsl
loope
dec
sbb
add
dec
cld
cmp
mov
sar
sbbl
jbe
loope
xchg
daa
fnstcw
push
jmp
out
outsb
dec
loope
pop
mov
dec
lock
aad
out
test
sbb
loope
or
lds
cmp
cli
loope
add
sub
and
push
lahf
loope
lret
stos
push
repnz
mov
icebp
push
shlb
shrl
repnz
mov
xchg
pop
cltd
mov
loope
and
fnsave
add
loope
loopne
mov
loope
and
mov
jecxz
inc
in
aas
lock
jne
fldt
xlat
push
loope
pop
cli
push
push
pusha
add
loope
insb
pop
jo
fstps
loope
mov
lock
jo
fldt
push
jno
in
mov
loope
pusha
mov
lahf
popl
mov
mov
or
pop
jmp
cld
call
mov
idivb
cs
hlt
push
adcb
cmpsb
loope
xorl
mov
es
mov
cmp
shlb
add
xchg
cmp
shld
pop
outsl
mov
pop
andl
jmp
test
mov
cmpsl
aaa
sbb
fildll
imul
in
add
arpl
loope
mov
sub
test
int3
lock
mov
add
lea
add
and
push
out
pop
jnp
das
mov
call
dec
jb
orl
pop
loope
mov
cmp
mov
insb
jnp
push
pop
or
xchg
sub
and
or
dec
insl
fdivrl
mov
fistpll
pop
jb
loopne
andb
cltd
fnstenv
out
cmc
std
mov
xor
pop
shlb
call
dec
loope
test
mov
and
inc
sahf
mov
dec
push
ds
imul
sbb
mov
addl
and
out
adc
cmp
fcomps
icebp
mov
push
movsl
loope
loopne
es
lds
mov
lcall
sarl
xlat
or
jns
loope
xchg
add
cmc
in
scas
outsb
and
loope
adc
nop
loopne
loope
sub
jbe
rorl
push
std
jns
test
test
dec
sub
cmpsl
push
je
frstor
lods
movsb
or
loope
into
jecxz
dec
mov
sbb
test
sub
mov
jle
add
loope
cs
jl
push
dec
adc
repnz
pop
sbb
adc
int3
pusha
inc
add
jl
dec
xor
lds
xor
loope
roll
not
cld
jecxz
out
jmp
mov
mov
ret
fabs
cmc
icebp
sbb
lods
outsl
test
hlt
mov
and
loope
lock
lods
cmc
insl
cmp
add
loope
mov
ffreep
or
popa
sbb
push
xor
movsb
loope
ret
nopl
daa
loope
dec
jp
jbe
sbbb
fsubs
es
out
pop
sti
mov
pop
jecxz
inc
loope
out
sbb
outsl
inc
add
outsl
shlb
clc
lds
add
jo
xchg
push
test
shll
mov
test
arpl
inc
push
inc
into
stos
mov
in
mov
mov
mov
xchg
loope
jno
insl
mov
js
movsb
mov
out
cli
nop
enter
nop
test
push
xor
or
mov
in
sub
enter
pop
xchg
and
loope
fisubl
nop
mov
loope
pop
cmp
sbb
rorl
jmp
roll
ret
push
jle
gs
in
fistps
lahf
rclb
sbb
pushf
add
jecxz
test
adc
pop
adc
add
jne
je
insb
cs
fsubs
and
push
ret
jmp
out
xchg
in
xor
xchg
jmp
out
in
xor
fimuls
mov
stos
add
insb
jne
add
loope
jl
stc
fcoms
mov
cmp
sbbb
loope
ljmp
push
insl
outsl
int
cli
pushf
repnz
sar
inc
jne
cmp
jp
jmp
pop
js
pushl
jne
outsl
mov
aas
jnp
es
mov
test
pop
shr
test
jle
hlt
ret
jmp
push
movsb
mov
sub
mov
xor
sti
div
cld
jmp
cmp
loop
ret
push
loope
sbb
push
xor
je
pop
or
loope
or
aas
add
push
cmp
movsb
dec
cltd
xchg
loope
inc
outsl
or
scas
rol
imul
shrb
outsl
push
or
add
test
das
je
dec
loopne
add
add
jmp
repnz
inc
push
mov
loope
mov
movsb
mov
cmp
ja
dec
sbb
insl
cmp
shlb
ds
jnp
push
jl
lret
and
imul
push
hlt
cli
xorb
lahf
std
mov
mov
and
sub
es
insl
push
sub
loope
repz
call
dec
push
incl
fists
xor
loopne
in
ljmp
jmp
push
loope
rorb
jno
dec
sub
addb
push
xchg
pop
sub
insl
and
addr16
ljmp
pop
push
jle
arpl
jmp
pop
add
lret
dec
and
and
mov
out
fxtract
jmp
out
mov
imul
inc
call
loope
mull
push
dec
pop
adc
sub
jnp
outsl
mov
out
cmp
dec
mov
xor
loope
sti
fisubl
ja
adc
and
push
cs
inc
loope
fwait
and
lcall
mov
arpl
mov
aas
imul
add
sub
stc
test
loop
push
mov
fstpl
std
out
sbb
inc
adc
jb
ja
in
inc
dec
andb
stc
lahf
das
pop
jo
pushf
faddl
mov
lods
push
cmp
loope
lcall
loope
in
fistps
pop
out
mov
lret
daa
popa
xor
nop
aaa
xchg
pop
pop
gs
xor
mov
pushl
jo
adc
shrl
loope
add
mov
aad
loope
jle
and
rclb
sub
int
add
insl
in
sub
out
out
adc
es
push
ds
cltd
pop
loope
mov
jmp
cmpsb
xchg
dec
loope
test
loope
call
jge
mov
jmp
in
push
insl
clc
out
xchg
ficompl
fcomps
or
int
imul
push
pop
sub
mov
ret
aam
xchg
pop
jnp
loope
mov
mov
add
sti
mov
ljmp
pop
pop
inc
nop
add
leave
repz
loope
bound
lahf
imul
push
neg
jo
dec
ja
out
jmp
cltd
insb
imul
inc
adc
das
push
loopne
jmp
inc
mov
test
lea
push
jmp
loope
cld
fwait
stc
pop
inc
and
loope
pusha
sub
clc
paddw
aas
loope
fistl
adc
loope
inc
aad
popl
xor
jbe
sub
insb
lods
push
movsl
push
loope
frstor
xor
cmpsl
dec
shll
mov
lea
jp
add
icebp
insb
rorb
js
mov
rcr
cltd
shl
mov
sub
sub
movq
fs
out
jno
cmpb
stos
inc
movsb
pusha
sub
pusha
push
xlat
test
mov
in
pop
inc
iret
jno
mov
add
aas
into
insl
lods
pushf
lret
pop
sub
pop
scas
mov
sbb
dec
lods
jbe
pop
es
test
adc
jno
rcr
and
push
scas
scas
insb
xlat
dec
into
pushf
lods
in
cmp
mov
fldcw
mov
or
inc
scas
xchg
insb
repz
and
push
out
addb
loopne
pop
pop
iret
lea
dec
into
stos
lods
pop
cmp
scas
xchg
insb
aad
push
into
xor
ror
into
and
mov
push
adc
fwait
scas
lret
xlat
dec
into
cwtl
lods
call
mov
in
adc
lods
mov
pop
inc
iret
mov
sub
ljmp
insb
xchg
xlat
and
rcrl
mov
xlat
lahf
into
add
lods
scas
imul
into
or
ret
lods
jo
pusha
push
xlat
jle
popf
lods
cld
ficompl
iret
jmp
xlat
jne
je
ret
icebp
fcomip
mov
scas
scas
popf
insb
std
xlat
sbb
mov
scas
lds
mov
shl
mov
scas
popf
insb
std
xlat
or
imul
insb
inc
xlat
inc
into
inc
lods
inc
inc
push
iret
scas
mov
into
jns
xlat
mov
movsl
iret
fs
shrl
ror
out
lock
sbb
call
inc
pop
arpl
xchg
into
xorb
fdivrl
lcall
int
stos
cmp
test
add
lods
cltd
mov
mov
in
push
inc
xor
push
push
rorl
push
add
pop
fidivrs
int
pop
ja
fimuls
inc
scas
jg
ds
adc
mov
add
dec
xor
sbb
jp
test
ljmp
mov
sti
pushf
sub
cli
movsl
mov
cmpsb
popl
lods
loope
cltd
jp
mov
in
cs
cli
or
mov
add
sub
mov
push
ret
mov
push
adc
inc
fwait
jo
mov
sbb
fisubrl
in
push
in
cli
push
dec
mov
aam
cmpsl
lods
stos
loopne
push
and
mov
mov
jl
mov
sbb
xor
outsb
lret
hlt
sub
dec
js
cltd
inc
pop
add
mov
mov
out
push
pop
mov
in
dec
mov
mov
stos
pop
xor
adc
imul
add
sub
adc
jge
rcl
lret
mov
test
mov
cwtl
iret
push
inc
push
hlt
scas
mov
stos
ljmp
inc
mov
hlt
int3
cwtl
imul
mov
xlat
cs
push
or
cs
popa
cwtl
push
and
mov
mov
mov
lods
ja
push
dec
xchg
andl
lret
test
mov
fmull
loopne
adc
outsl
or
add
pop
inc
lods
sub
pop
enter
push
aas
add
mov
or
adc
dec
loop
call
or
pushf
imul
xor
scas
inc
pop
mov
xchg
dec
call
mov
testl
adc
iret
sbb
jne
xor
lret
adc
int
add
cltd
mov
sub
int3
movsl
movsb
nop
ja
lea
mov
or
leave
fdiv
int
mov
or
sbb
add
insb
or
icebp
add
mov
and
xor
mov
out
pusha
pop
cli
xchg
loopne
inc
insb
out
push
cwtl
or
aaa
repnz
imull
mov
jno
mov
insl
das
mov
dec
mov
add
out
jle
mov
sub
or
push
pop
dec
into
xchg
xchg
pushf
cltd
gs
or
insb
pop
mov
push
cmpsb
mov
in
dec
lods
mov
dec
pushf
push
xchg
inc
mov
pop
fmuls
adc
pop
cmpsl
ljmp
pushf
pop
int3
mov
sbbl
stos
sbb
cmpsl
push
mov
mov
xchg
pop
lahf
mov
sbb
pop
lret
cltd
insl
pop
daa
or
int
jne
ja
mov
lret
mov
das
fistl
and
push
leave
clc
lods
cli
mov
shrb
sub
and
sub
and
daa
mov
pop
fst
xor
cmp
xchg
pusha
pop
sbb
rclb
sub
in
rclb
push
adc
pusha
sub
xchg
scas
nop
jmp
pushf
cs
call
mov
cli
xchg
pusha
mov
call
pusha
sub
lods
xchg
ljmp
stos
inc
dec
shrb
call
arpl
out
mov
push
adc
mov
adc
clc
rol
and
and
or
call
sar
shr
loopne
pop
call
fs
mov
into
xor
mov
test
pop
loope,pt
out
pop
mov
mov
fnstsw
jb
add
lods
clc
mov
popf
loope
xchg
adc
in
xorl
cmc
ret
jne
fsub
test
jmp
call
loopne
add
je
jmp
fldl
pop
lret
jecxz
mov
ss
push
push
movsl
das
fsubr
push
cmc
adc
add
push
pop
out
xchg
fildll
pop
in
loopne
rcll
jmp
push
mov
rorl
cli
out
push
fbstp
jecxz
fmull
adc
pop
out
push
ficoml
pop
pop
out
pop
in
cmp
jmp
rorb
sbb
in
mov
xchg
fldt
out
pop
push
aad
iret
and
pop
jb
mov
mov
scas
sub
push
bnd
jge
fcoms
xchg
ss
pop
sub
push
pop
ret
fisttpll
iret
lcall
imul
sbb
icebp
loope
jecxz
repz
mov
sub
add
mov
dec
or
push
insb
cmp
outsl
and
lcall
jecxz
nop
xchg
aam
adc
xchg
jne
test
xchg
cld
jl
lods
and
insl
fstpt
mov
scas
xor
mov
jno
adcl
pop
mov
movb
loop
mov
inc
fsubr
lea
and
xor
or
rcrb
movsb
aad
mov
roll
mov
ss
mov
in
and
insb
into
sbb
adc
mov
jl
push
lret
cmc
inc
pop
out
jecxz
or
jmp
pop
insb
mov
mov
push
sub
shlb
in
add
push
ret
lea
jecxz
adc
pop
in
mov
sti
loopne
mov
jecxz
in
rorb
pop
in
fnstenv
and
jle
out
shrb
in
mov
mov
pusha
or
into
add
add
insl
out
subb
ret
sbbl
mov
dec
call
rcl
mov
jae
adc
repz
or
jmp
pop
push
out
rorb
pop
in
xlat
push
fsubs
inc
jg
inc
mov
add
ret
lods
iret
repz
jno
jl
jmp
out
sbb
push
pop
jecxz
lods
or
cmc
cwtl
adcb
imul
insb
stos
mov
inc
dec
lahf
and
into
sahf
lahf
in
push
push
popa
pop
cwtl
pop
loopne
pop
cmp
inc
out
out
ljmp
popa
mov
mov
cmc
ficoms
pop
xor
shll
add
pop
shrl
pop
rolb
mov
xor
rorb
movsl
in
rcll
popa
sub
rclb
in
push
add
xchg
outsb
and
pop
cmc
shl
stos
pop
test
clc
mov
xchg
ds
push
cmp
in
push
in
and
pop
cs
dec
mov
ss
sub
stos
inc
mov
jae
push
jl
mov
stos
inc
jo
inc
je
loope
fcmove
lcall
js
jno
scas
stos
xchg
or
or
add
add
aas
mov
mov
xchg
ror
cltd
test
in
repz
cmpsb
outsb
in
rcl
bt
js
mov
lock
jle
lahf
inc
leave
fcomi
sti
xchg
ja
inc
cld
arpl
jae
inc
hlt
xlat
movsl
jo
sbb
insl
sbb
pop
je
jnp
scas
pop
mov
push
add
xchg
or
push
aam
cmp
jl
cmp
gs
es
stos
fcmove
popf
icebp
mov
cmc
mov
pusha
repnz
fistl
ror
xchg
push
aaa
fdivrp
test
mov
in
pop
mov
push
fs
loope
daa
es
movsl
push
mov
int
insb
pop
ljmp
jbe
fisubrl
dec
dec
xchg
jge
mov
inc
and
xorl
mov
test
sbb
ret
xchg
jp
cmpsb
cld
loope
sbb
mov
fstpt
mov
dec
lahf
scas
mov
mov
xchg
pushf
in
rcll
ret
into
pusha
in
mov
fsubp
push
out
in
subl
pop
loopne
movsb
pop
ds
xchg
cli
ret
mov
xorl
enter
mov
shlb
std
push
push
and
hlt
jo
jge
mov
mov
ljmp
jns
into
push
aam
push
cmp
out
fildll
xchg
mov
call
mov
pushf
sub
lea
pop
sub
mov
mulb
nop
dec
shll
into
loopne
subl
lret
out
out
in
xchg
pop
mov
jmp
jp
pop
add
mov
jl
pusha
lahf
outsl
enter
push
jmp
mov
mov
fsubs
out
fucomip
jb
mov
out
mov
lea
test
push
mov
and
sbb
ja
push
ret
orl
push
lahf
in
div
test
push
sbb
or
test
xchg
cmc
aad
push
inc
fisubs
mov
inc
pop
dec
mov
mov
pusha
shlb
mov
inc
rorb
ljmp
pop
mov
into
mov
int3
and
stos
mov
out
ret
lea
pushf
js
cwtl
outsb
jecxz
pop
and
xchg
mov
shl
xor
js
add
movsb
jp
ja
xchg
cmpb
mov
sbb
pusha
shr
mov
cmpsl
insl
pusha
fs
mov
outsb
sub
sub
sbb
push
mov
push
aam
insb
cmc
stc
in
sahf
aad
or
daa
fdivr
jbe
mov
adc
jnp
test
scas
pop
add
sarb
int
jle
xor
adc
jne
mov
mov
test
sbb
int3
or
push
in
push
xchg
mov
pusha
and
mov
fld1
inc
mov
fwait
cmp
and
sub
imul
fcoms
or
jns
push
add
mov
fs
pushf
ss
jl
arpl
mov
fildll
pop
in
sahf
jo
or
stc
shrl
adc
and
out
push
add
jo
scas
out
mov
mov
mov
pushf
movsb
insl
movsl
sub
cmpb
lret
enter
cltd
jmp
sbb
and
lods
shll
movsl
cmc
addr16
adc
sub
xchg
push
mov
mov
mov
inc
into
push
fwait
outsb
cwtl
xor
xor
mov
push
pusha
pop
es
or
dec
scas
push
nop
pushf
bound
test
mov
xlat
or
stos
mov
push
movsb
in
mov
xor
jne
xchg
or
roll
add
cmp
push
out
pop
fnstsw
cmp
mov
nop
push
arpl
imul
push
jbe
lock
mov
mov
mov
mov
loopne
call
or
push
arpl
xchg
push
pop
jg
mov
push
orl
shl
push
adc
xor
jbe
add
or
sub
cmp
cli
sbb
xor
in
loop
rol
and
movsb
inc
outsb
ss
loopne
sbb
and
push
in
mov
cmpsl
push
movl
pop
cli
or
cmc
push
repnz
imul
inc
mov
jecxz
stc
leave
loope
rolb
movsb
inc
dec
mov
add
test
dec
push
push
js
xchg
jmp
push
iret
ds
jmp
mov
mov
stos
xor
adc
cmp
je
imul
cli
pusha
mov
push
mov
fdiv
inc
mov
adc
xchg
aad
xchg
hlt
and
add
pop
jmp
pop
je
sub
aam
or
sbb
inc
mov
loope
mov
mov
mov
scas
jo
dec
es
stc
nop
xchg
or
sbb
cltd
sub
out
lods
insl
nop
cmc
inc
push
outsl
loop
jp
gs
stos
scas
mov
mov
sahf
sub
sub
sub
push
mov
pop
jge
push
mov
sbb
or
cmp
inc
cmp
incl
shlb
sub
pop
mov
cli
jp
sbb
outsb
or
stc
test
cltd
xor
cld
mov
jo
adc
inc
scas
lods
push
add
in
xchg
sbb
mov
fisubrl
ljmp
cmp
out
lods
fidivrl
stos
pop
out
icebp
int3
xor
pop
push
xchg
fistps
arpl
fstpt
popa
or
pop
xchg
xlat
jo
sub
mov
dec
pop
insl
mov
pusha
ffreep
cld
dec
jmp
pop
mov
and
in
pushf
push
sub
xchg
js
daa
scas
in
jecxz
fisubrs
jmp
mul
mov
lret
pop
mov
or
dec
pop
mov
adc
pop
inc
mov
mov
jo
lods
pop
in
leave
dec
loopne
mov
loopne
cs
sbb
in
out
outsl
inc
rcrb
imul
and
mov
lcall
lret
in
mov
mov
in
lcall
movsl
andb
and
pop
rclb
arpl
or
in
out
push
adc
add
loope
push
jno
dec
pop
loope
stc
ja
inc
inc
sbb
xor
decl
fnstsw
xchg
js
fdivl
mov
sbb
loope
test
orb
lret
std
or
pop
and
test
sar
lds
sbb
xchg
mov
adc
inc
xor
pop
shr
enter
rcll
jo
jb
cmp
mov
inc
nop
mov
and
into
pop
gs
imul
inc
lods
pop
out
adc
adc
cmc
xchg
sub
inc
push
loopne
xlat
pop
mov
cmp
jecxz
loope
mov
stc
xchg
mov
or
and
sbb
mov
popf
loope
popa
jo
adc
orl
mov
inc
lea
loope
adc
sar
add
jl
das
ja
and
bound
dec
ret
loop
aaa
and
hlt
sahf
daa
inc
nop
xor
mov
jne
addl
pop
dec
mov
xor
push
loope
mov
mov
loope
xchg
loopne
lret
loope
aad
lea
mov
loope
inc
push
mov
pop
cmp
jne
dec
dec
inc
mov
push
inc
es
jbe
rcll
cld
pop
into
loope
je
sub
xchg
sbb
inc
jecxz
loope
mov
xchg
loope
test
out
cmp
cltd
and
rcr
in
cwtl
loope
push
cmpsl
arpl
jg
push
clc
pop
mov
imul
mov
out
push
aam
nop
add
into
je
stc
mov
sbb
lret
loope
sbb
push
hlt
loope
imul
loope
mov
adc
in
sbb
jnp
scas
stos
dec
mov
shlb
mov
das
push
adc
test
sub
jge
jle
gs
sub
repz
push
leave
sbb
jb
cmp
jnp
sti
and
lock
outsb
xchg
jne
mov
inc
rolb
adc
xor
jle
add
shlb
mov
in
inc
shl
ds
or
or
cmpsl
rclb
cmc
jecxz
cli
loope
js
xor
mov
incb
insl
jb
jecxz
test
cltd
pop
mov
into
add
mov
ljmp
push
movsl
xchg
mov
jo
cmpl
jb
push
stos
outsb
or
inc
or
cmp
xor
pop
or
lcall
cmp
dec
scas
xchg
xor
loope
jne
inc
dec
push
leave
movsb
loope
jecxz
ficompl
or
xor
loope
sub
call
mov
test
out
in
push
loope
scas
xchg
mov
cld
rorb
lret
insl
mov
mov
pop
xchg
loope
scas
clc
mov
cmp
inc
loope
fimuls
shll
ljmp
jbe
adc
push
mov
xorl
fiaddl
jo
icebp
inc
cmp
repnz
scas
loope
push
push
cmc
mov
out
inc
jge
dec
mov
scas
adc
xor
xchg
bound
leave
sbb
int3
loope
jecxz
push
or
aaa
adc
loop
push
fs
mov
push
dec
fstpt
lods
cli
dec
int3
loope
ret
xchg
rcrl
rol
pop
xchg
inc
add
nop
out
ja
sahf
push
ret
and
cmp
xor
sbb
sub
insl
or
sahf
sarb
loope
jae
push
xchg
jno
push
pop
bound
cltd
aam
pop
fxch
je
in
pmaxsw
sbb
fdivl
stos
sbb
loope
cmp
mov
loope
test
or
iret
jo
fdivs
scas
in
shlb
loope
lods
data16
lahf
in
out
out
jnp
mov
popa
es
leave
loope
jl
push
sub
inc
aas
sbb
shll
add
mov
or
rcll
icebp
lret
or
dec
shlb
mov
jle
loope
daa
xchg
push
jmp
fimuls
lds
test
and
sbb
popa
aad
in
add
addr16
ror
sbb
lock
mov
mov
inc
loope
lods
dec
je
jmp
loope
inc
dec
mov
push
out
loope
int
and
popa
mov
or
add
dec
loope
xlat
pop
test
cld
into
loope
sub
push
pushf
mov
mov
mov
stos
or
lock
cmp
loope
sahf
xor
add
xchg
gs
loope
outsb
ret
dec
data16
cmp
shll
orb
aas
popl
dec
add
xchg
stc
jo
push
sub
mov
dec
outsb
mov
lret
in
lods
lds
and
lahf
das
add
mov
cs
leave
pop
mov
mov
jge
dec
jle
loope
jl
cli
xchg
push
dec
in
and
xor
call
push
fdivr
or
loope
lds
mov
mov
jmp
jp
sub
mov
loop
adc
in
nopl
loope
fwait
je
xlat
xchg
jo
push
jmp
outsl
in
dec
gs
add
fdivrl
notb
popf
sub
fistpll
lock
cltd
enter
test
in
add
fs
loope
lret
dec
adc
pop
loope
aas
scas
jae
adc
fisubrs
loope
xchg
xor
das
loope
jp
inc
div
sub
aam
mov
add
add
shlb
sahf
sub
mov
xor
mul
xchg
frstor
out
loope
test
loopne
xchg
shl
ljmp
jmp
jge
fwait
scas
lahf
loope
inc
sub
xchg
popa
dec
adc
inc
loope
sti
jne
enter
sub
and
add
lahf
data16
xor
push
cmc
imul
or
jecxz
jp
popf
loope
pop
insl
loopne
fldln2
dec
rcrb
xor
xor
lea
push
repnz
clc
loope
nop
and
insl
cmpsl
shr
frstor
mov
out
sub
or
jecxz
shr
adc
aad
sub
jb
lods
stos
fwait
dec
jmp
shrb
push
bound
loope
inc
fidivrl
push
loope
mov
inc
outsb
loope
idivb
push
pushf
leave
and
negl
dec
loope
push
add
mov
in
xor
out
loope
sbb
lock
jno
loope
imulb
jecxz
fadd
loope
ja
jle
push
fistpl
jmp
loope
cmc
lret
imul
test
inc
into
add
xor
mov
jmp
mul
push
fcmovb
andl
loope
sub
add
cmp
and
push
xor
out
xchg
std
inc
and
shr
xchg
inc
repz
insb
push
mov
or
pop
dec
repnz
shrl
cli
mov
rolb
gs
rol
rcrl
sbb
jnp
popa
daa
loope
xchg
jge
mov
arpl
loope
mov
adc
add
xlat
lea
push
and
jno
popa
nop
mov
loope
popa
in
push
test
js
push
shlb
mov
pop
cmp
stos
push
or
scas
movsb
out
jo
push
fildl
loop
jecxz
dec
rolb
and
and
mov
cwtl
lea
or
testb
jg
adc
loope
sub
into
xor
mov
fs
xor
scas
jmp
push
aaa
loope
xchg
aad
sub
fldcw
and
jns
jnp
xor
mov
dec
pop
loope
fst
fists
jo
stos
test
mov
inc
aam
loop
mov
jmp
push
jmp
imul
in
repz
loope
aaa
mov
jne
push
cmp
fidivrs
jae
dec
jp
loope
shlb
lock
lret
mov
sahf
mov
mov
outsb
jg
or
push
sbb
into
leave
mov
jecxz
or
rolb
outsl
sub
arpl
sahf
aas
jmp
inc
outsb
and
arpl
pushf
lret
cld
lcall
inc
std
dec
orb
sbb
pop
xor
mov
or
ficompl
mov
in
push
lret
loope
insb
enter
lods
jp
push
lahf
repnz
mov
dec
mov
int
call
movzbl
aad
ret
movsb
push
addr16
les
fstps
push
push
and
loope
mov
cmpsl
dec
jo
lret
in
imul
lock
rolb
fsts
adc
and
leave
sub
in
and
cmc
xlat
loope
dec
scas
aas
xchg
jge
jne
xor
sub
aaa
lock
lea
jecxz
dec
mov
outsl
cmp
loope
and
shl
flds
adc
sbb
xchg
data16
jno
mov
xchg
sub
popa
arpl
nop
loope
mov
inc
insb
lock
and
data16
cmp
push
shl
loopne
mul
insl
sbb
jo
mov
jle
loop
test
out
nop
sbbb
loope
sbb
sbb
bound
aas
pop
or
inc
loope
adc
mov
loope
dec
adc
jmp
push
jmp
jecxz
dec
sbb
jmp
add
leave
mov
xor
data16
dec
repnz
push
lahf
std
loop
jl
loope
shrb
mov
add
fwait
shll
jmp
in
out
loope
pop
push
xor
xor
xchg
adc
aad
in
push
pop
push
jbe
jb
shl
leave
jg
loope
adc
xchg
in
pushf
loope
popf
inc
aam
xchg
cmp
mov
xchg
hlt
pushf
lds
addr16
in
dec
jb
ljmp
push
inc
sub
loope
mov
insb
adc
mov
or
sub
push
xor
shrb
xchg
mov
adc
dec
xchg
inc
push
inc
dec
and
mov
xlat
movsl
pusha
xor
cmp
out
inc
loope
sbb
out
stc
xchg
pop
xor
and
ja
mov
in
xchg
pop
int
add
adc
cmpsl
andb
repnz
in
sti
sub
mov
lods
in
loope
push
cmp
shlb
sbb
adc
inc
rcrl
dec
insl
cld
in
loope
pusha
les
insb
add
mov
mov
loope
mov
and
scas
sbb
mov
mov
cld
mov
es
sub
cmp
cld
sub
js
add
inc
or
jo
test
loope
call
inc
push
sahf
add
gs
jle
ja
cmp
mov
ljmp
in
cld
data16
hlt
or
jg
and
imul
jmp
cmp
arpl
push
loope
mov
stos
cli
and
mov
push
and
pop
xor
js
jmp
test
dec
pop
clc
loope
pop
sti
mov
ds
inc
add
loope
stos
or
push
mov
xchg
mov
addr16
fwait
jmp
addr16
and
cmp
adc
cld
jl
les
or
xchg
cltd
fucom
cmpsl
aam
xchg
mov
hlt
and
ljmp
loope
ficoml
inc
loope
rcr
out
sub
pop
lock
cmpsl
xchg
icebp
cmp
mov
sbb
rolb
or
je
xchg
or
xor
loope
pop
pushf
push
jg
imul
pusha
adc
rorb
lret
mov
fwait
or
out
sub
pop
and
push
dec
sbb
icebp
in
mov
aas
loope
inc
xor
mov
insl
loope
push
arpl
leave
mov
jecxz
push
aam
stc
aad
push
cld
loope
or
sbb
sbb
cmp
shll
sbb
mov
jns
mov
repz
movsl
repnz
into
frstor
mov
adc
xorl
imul
ud0
stos
mov
iret
cmpsl
leave
cmp
sahf
jge
xor
mov
push
and
loope
andl
sub
mov
in
xchg
shrb
push
mov
jne
add
je
imul
mov
sub
adc
fstpt
loope,pn
insl
ror
and
jmp
lods
icebp
xchg
cmp
loope
aas
ror
and
cmpsb
xor
loope
cmp
loope
in
into
outsb
inc
enter
mov
stc
pop
jg
sti
gs
xchg
faddl
loope
divb
lahf
int
ffreep
loope
inc
or
out
ljmp
fs
loope
push
push
popf
jne
push
loope
lahf
enter
mov
mov
jns
dec
and
adc
mov
fidivl
stos
sarl
jb
push
loope
push
jge
cmp
and
pop
sub
fbld
and
xchg
test
jmp
jne
orl
mov
subl
push
lods
mov
push
jns
or
mov
gs
ret
and
arpl
rcr
adc
push
jo
jb
pop
adc
lret
jbe
cmp
mov
aaa
adc
int
mov
sub
mov
dec
jnp
addr16
mov
push
or
loope
mov
lret
jnp
dec
out
push
jns
cs
adc
imul
das
in
inc
lret
fcom
int3
pop
or
and
loope,pt
sbb
imul
dec
and
inc
scas
jmp
dec
loope
test
fldpi
add
out
add
and
mov
kmovb
add
in
outsb
jmp
mov
inc
adc
and
insl
dec
inc
cmc
pop
jo
in
xchg
and
lds
xchg
push
and
loope
movsb
fs
lahf
repz
loope
push
mov
rolb
out
loope
adc
imul
mov
int3
outsb
loope
or
in
loope
cld
lea
repz
lahf
lock
sbb
or
mov
pop
push
popa
dec
cmpsb
sub
inc
shrb
in
in
adc
decl
repz
in
add
push
data16
into
out
mov
cmp
or
loope
and
outsb
push
lahf
or
adc
xchg
mov
inc
test
jmp
jmp
ror
aaa
loope
lods
cmp
aas
sbb
mov
add
sub
int3
lea
les
repnz
fmuls
lock
mov
pop
jmp
pop
inc
sub
pushl
popf
pushf
in
fs
and
addl
outsl
gs
push
sbb
sub
pop
hlt
and
jecxz
xchg
out
fisubl
or
mov
loope
outsl
mov
cli
movsb
loope
outsb
addr16
loope
jge
dec
jg
push
mov
cmpsl
xchg
jo
jbe
mov
jo
push
adc
push
jo
xchg
xchg
jno
cmp
jo
jl
ror
mov
fwait
inc
push
xchg
or
fdivrs
mov
and
pushf
repz
xor
in
xchg
cs
adc
loope
cmc
aaa
sub
sub
push
popa
notb
pop
sub
mull
adc
inc
daa
and
mov
sbb
enter
cld
pop
mov
ret
sbb
loop
loope
dec
stc
lcall
jo
scas
das
div
mov
in
push
mov
pop
int3
cmp
loope
mov
push
popf
loope
les
pop
adc
inc
xor
test
sub
nop
add
pop
push
sub
mov
mov
push
lahf
loope
pusha
ds
subl
test
push
ja
dec
dec
cmp
int
lock
and
or
dec
adc
scas
cmp
mov
loope
aad
xor
mov
aam
movsl
inc
sbb
loope
lcall
loope
jbe
call
add
dec
jae
pop
pop
loope
loop
mov
orb
test
xlat
sub
jl
in
cltd
mov
jnp
jecxz
sub
rorb
jno
mov
and
cltd
ret
mov
std
adc
sahf
push
jg
pop
test
xor
loope
mov
lods
xor
mov
imul
mov
jb
xchg
pop
push
dec
js
cmp
data16
repz
lret
dec
sti
loope
outsl
xor
mov
xor
lea
jns
in
jno
ret
cltd
and
inc
mov
pop
sub
sbb
jnp
push
jo
mov
cmp
aas
cmp
pushl
push
jmp
mov
loopne
fsubrl
and
roll
jg
aam
loope
cmp
mov
mov
fcomip
stos
sbb
xorl
ret
ljmp
push
stc
loope
push
nop
jmp
loope
dec
in
ret
popa
iret
and
movsb
or
jns
mov
insl
xor
cmpsb
pop
test
pop
out
sub
clc
std
sahf
pop
jmp
mov
and
test
add
loope
inc
leave
xchg
cwtl
jae
sub
lcall
adc
sub
mov
xor
out
cwtl
in
js
test
mov
push
out
cmpsl
sbb
loope
lea
je
and
movb
push
loope
test
fcompl
rcr
outsl
in
mov
sahf
push
mov
pop
mov
loope
mov
lcall
cmc
test
and
lods
iret
ret
stos
sub
out
insl
fndisi(8087
cmp
leave
or
jb
dec
cltd
sub
dec
mov
lret
add
add
jg
xchg
into
xchg
pop
pop
lcall
inc
dec
roll
jo
loope
cmp
test
bound
jno
mov
scas
or
lds
aad
loope
int3
lock
add
inc
push
jmp
cmp
or
jnp
mov
sbb
dec
sarl
fnstsw
sbb
in
mov
loope
fidivrl
or
add
or
repz
add
fwait
lods
loope
cmp
mull
in
test
sbb
pop
xchg
add
test
aas
add
outsb
sub
out
jmp
loope
dec
ss
pop
outsb
push
loope
sbb
ret
je
adc
out
jns
repnz
jecxz
or
loope
int
stos
mov
dec
cmp
jmp
inc
loope
fldcw
movsb
loop
loope
xlat
mov
pop
push
loope
out
jecxz
and
je
mov
or
outsl
dec
scas
push
sub
mov
int
push
xchg
push
mov
cmp
push
loope
aas
jmp
mov
dec
sub
jmp
inc
loope
cmp
fmuls
add
sbb
std
loope
test
sarl
xchg
popf
aas
add
in
fwait
inc
ja
iret
and
shl
mov
jmp
loope
clc
dec
dec
jp
test
xor
sub
out
ror
lods
lret
aaa
outsb
and
add
mov
jg
icebp
cli
xchg
jns
sub
aaa
loope
adc
cs
jmp
inc
sbb
add
xchg
and
in
sbb
je
repz
and
adc
mov
add
jbe
cmp
jo
jg
fimull
inc
loope
mov
icebp
ds
popf
jne
in
mov
jecxz
jmp
sarb
loope
jae
mov
loope
xchg
adc
jmp
xchg
nop
add
lea
repz
mov
in
sub
mov
push
lods
fldl
jae
cs
imul
xlat
adc
jge
xor
aaa
mov
sub
ja
jle
and
jo
loope
mov
test
in
inc
shlb
ret
jge
add
mov
outsl
mov
daa
cld
cmp
incl
jge
dec
ljmp
iret
fsubs
lods
loope
inc
lret
xchg
outsl
je
jne
fwait
orl
movsl
pop
inc
pop
insl
fabs
cmp
mov
add
inc
test
sti
loope
popa
mov
pusha
movsb
or
mov
andb
cs
jmp
and
enter
fimull
push
add
loope
lret
ror
push
jnp
jo
jmp
and
out
sarb
testl
cltd
adc
aad
push
jl
aam
lea
jo
push
push
jle
loope
mov
and
lods
cmpsl
rclb
jns
rolb
sti
and
shlb
jno
sub
in
jecxz
push
addb
cmpsl
popl
add
and
nop
xor
mov
psraw
xchg
sti
pushf
std
push
filds
out
bound
roll
mov
je
ret
leave
arpl
push
loope
cltd
xchg
imul
scas
outsl
cli
cmp
int
xchg
test
mov
adc
mov
lret
inc
fwait
push
cltd
or
adc
clc
psraw
cmp
fnstenv
jae
shlb
shlb
out
dec
loope
cli
cmp
pop
loope
sbb
es
stos
bound
and
jno
fcom
mov
cld
cli
adc
loop
mov
jecxz
xchg
push
or
out
ficoml
ljmp
loope
int
jle
xor
loope
repnz
cmpsl
nop
pop
mov
cld
mov
lret
add
add
jge
je
push
push
adc
testb
or
out
loope
cmp
insl
dec
mov
or
sub
xchg
mov
jo
inc
aad
popa
inc
ret
inc
add
ja
jmp
dec
pop
lock
test
mov
xor
xor
jecxz
ret
insl
nop
adc
out
push
mov
inc
sub
mov
add
popa
fidivl
data16
add
cs
ret
push
jmp
scas
sub
xor
fiaddl
lods
dec
jno
dec
push
and
movsl
push
sbb
pop
sbbb
loopne
fucompp
mov
loope
cmp
das
into
mov
dec
inc
jno
out
mov
sbb
loope
in
imul
pop
jbe
sub
cs
addb
adc
push
enter
xchg
fcomip
inc
loope
xchg
pushf
cmp
push
add
sbb
mov
add
js
fsts
cmp
xor
rcrb
bound
mov
adc
xchg
push
cmp
outsl
mov
outsb
loope,pt
cmp
lock
dec
repz
lods
cli
mov
orl
sbb
stos
push
aam
ds
lods
loope
xor
test
mov
arpl
cmp
aam
out
jo
adc
xor
inc
loope
lret
jnp
cwtl
xor
int
mov
loope
aam
pusha
fistps
mov
inc
pop
inc
loope
cld
xchg
cmp
adc
mov
stos
cmp
xchg
push
mov
xor
clc
push
loope
out
sbb
loope
jmp
cmp
dec
lea
mov
xor
and
xor
insl
fadds
mov
pop
add
inc
sahf
rcrb
adc
jne
ljmp
mov
mov
sbb
adc
xchg
outsb
cmp
loope
loopne
cli
popa
inc
and
loope
loop
decb
cmp
or
push
shr
jl
inc
mov
movsb
popa
inc
int3
inc
pop
xchg
mov
cmc
cltd
loope
lahf
mov
mov
adc
dec
xor
loope
xlat
das
jnp
mov
loope
es
mov
jp
lods
mov
lock
jecxz
jns
loope
stc
imul
and
daa
inc
subb
loope
popa
cmp
add
jg
push
js
xchg
sbb
pop
mov
pop
add
push
test
and
aam
jne
adc
cmp
xor
cmc
jg
jne
xchg
adc
std
add
push
xor
xor
inc
cli
repz
jb
loope
mov
es
loope
xchg
jbe
push
repnz
mov
loope
add
xchg
loope
shl
inc
sbb
dec
jo
je
inc
in
xchg
jp
jb
and
ja
js
jo
loope
in
or
dec
jo
mov
aam
xchg
mov
cmpsb
imul
fdivs
hlt
arpl
mov
leave
outsb
bound
mov
in
cmp
xchg
imul
lea
jmp
shl
andb
cmp
ja
xorb
jne
adc
loope
jno
and
shrb
call
add
test
aam
fs
sub
loope
and
aad
push
sti
bound
mov
cmpsb
loope
mov
sbb
sti
lcall
jecxz
loope
add
outsl
mov
imul
aam
shlb
and
mov
jp
call
hlt
inc
fucom
inc
repnz
xor
popf
cltd
dec
sbb
mov
adc
mov
aas
es
stos
insb
test
dec
aad
adc
dec
ror
or
daa
jno
dec
cld
iretw
cwtl
push
mov
xor
lock
cld
shl
xchg
icebp
dec
lret
mov
and
mov
add
jo
adc
add
shl
fwait
push
adc
sbb
mov
stos
jno
dec
stc
jecxz
add
arpl
sub
inc
pushf
gs
es
loope
test
mov
lcall
push
adc
mov
cltd
inc
in
cmp
lods
and
stos
repnz
mov
stos
push
loope
xchg
mov
loope
sbb
fisubrl
push
xchg
in
dec
mov
loope
lcall
shll
mov
in
push
cmp
cmpsl
pop
jns
aas
in
adc
jmp
and
loope
js
test
jo
iret
repz
out
sahf
and
shlb
outsl
xchg
push
cltd
cmp
mov
outsb
sub
mov
lcall
shl
push
add
mov
xchg
and
adc
ljmp
inc
and
sub
or
sbb
pushf
pop
mov
sbb
fwait
outsl
mov
inc
pusha
xchg
inc
fs
mov
jns
lcall
jo
pop
and
std
dec
push
pop
jo
push
or
out
push
jns
cmp
jno
and
int
mov
hlt
stos
adc
mov
loope
jl
mov
dec
jbe
hlt
fwait
dec
mov
sub
dec
aam
loope
xlat
xchg
xor
js
std
leave
mov
dec
mov
push
shrb
js
icebp
mov
and
loope
iret
stos
dec
imul
sub
mov
cmpsb
not
jge
xchg
decl
clc
and
mov
aam
adc
jg
int3
enter
sbb
add
cs
out
stos
cs
xlat
loope
pop
and
adc
pusha
nop
jmp
jmp
loope
clc
or
loope
icebp
pop
aas
pop
scas
push
jl
lds
dec
push
nop
xchg
pop
popa
ret
jo
push
jo
fldl2e
mov
jp
loope
push
mov
aas
add
outsb
loope
in
dec
aaa
add
popa
test
add
pop
mov
rclb
popa
clc
mov
dec
rcrb
push
pop
dec
jb
add
les
cmpsl
xor
mov
andl
adc
add
lds
lock
loope
sub
push
loope
popf
jnp
xchg
pushf
insl
shl
mov
xor
sbb
cmp
loope
adc
push
in
add
repnz
divb
loope
inc
cmc
ja
movsl
popl
in
cmpsl
inc
sarb
push
cwtl
in
loopne
jb
dec
sub
sub
push
outsl
sahf
into
add
out
mov
rcrl
sub
inc
xorb
fidivl
rorb
push
or
pop
loop
dec
inc
sub
xor
sbb
in
and
scas
imul
mov
xchg
xlat
mov
arpl
dec
sarb
pop
sbb
jp
loope
jne
pop
setnp
add
test
aaa
loope
mov
outsb
lret
rcr
sub
mov
jmp
in
aaa
fidivs
imul
dec
ja
xor
pushf
xchg
jmp
cmp
icebp
mov
mov
loope
mov
dec
sbb
stos
xchg
out
loope
int3
in
jp
mov
mov
add
ss
jo
cmpsl
aas
leave
icebp
loope
push
adc
outsl
stc
pop
pop
int3
cmp
cmp
sbb
je
in
ficompl
jae
mov
xchg
mov
inc
sbb
data16
mov
xor
clc
xchg
mov
mov
repz
loope
jge
mov
aad
sti
testb
dec
xor
shr
xchg
imul
sub
loope
or
bswap
popa
sbb
mov
stos
add
xchg
jg
ja
stos
loope
dec
fisttps
shl
cmpsb
aam
xchg
mul
push
or
mov
mov
mov
ljmp
mov
and
outsl
xor
inc
or
add
ds
out
xchg
into
inc
jmp
cwtl
xor
pop
pop
xlat
scas
loope
cmp
xchg
loope
pusha
fwait
mov
loope
cmpsb
iret
add
repnz
mov
push
lock
jmp
push
and
pop
jmp
shl
repnz
adc
jle
loope
hlt
push
jno
rclb
jecxz
pop
mov
cmp
sbb
and
rorb
gs
lret
jecxz
sbb
repz
sub
jl
jecxz
cmpsb
push
pop
mov
repz
cltd
jmp
xlat
xchg
loope
xchg
out
rolb
js
orb
loope
into
fisttps
mov
fsubs
mov
arpl
mov
aaa
loope
xor
and
in
loope
jmp
dec
je
xchg
jge
popf
add
in
lods
lcall
pop
cmp
xchg
and
rorl
out
pop
mov
call
icebp
dec
cwtl
lods
xchg
js
adc
sub
pop
add
int
loope
add
xor
out
fsub
inc
cmp
xchg
jno
fldt
pop
add
or
jnp
and
cmc
mov
out
cmpsb
sub
dec
mov
push
insb
adc
cmpl
loope
mov
loop
in
xchg
cld
aaa
fsub
in
cmpb
stos
je
mov
sbb
cmp
push
mov
fidivl
adc
es
loope
test
inc
and
mov
or
cwtl
movsl
jecxz
dec
xor
aaa
adc
mov
and
pop
imul
cltd
mov
jle
mul
xor
mov
loope
cli
movsl
leave
dec
xchg
scas
fstpl
cltd
les
nop
sub
into
cmc
movsl
in
fsts
cli
shll
mov
subl
cltd
hlt
pop
sub
push
ds
jae
jge
mov
loope
sub
mov
es
gs
sbb
dec
into
movsb
and
mov
adc
add
subl
xlat
jo
mov
cmp
loope
mov
cld
insb
das
fidivrl
sti
loope
and
jns
loope
ret
dec
dec
mov
loope
add
lahf
loope
xchg
jb
loop
xor
add
mov
in
push
mov
or
fistpl
daa
and
dec
xchg
sub
pop
fbstp
loope
jle
out
xchg
outsl
add
mov
mov
mov
test
pop
iret
insb
pop
mov
xchg
add
insl
dec
aam
sub
and
lcall
rclb
imul
cs
pop
jmp
mov
add
fs
call
psraw
addr16
xchg
stos
loope
or
hlt
loope
rolb
loope
ss
mov
xor
movb
xchg
in
loope
clc
add
loop
loope
sub
add
lcall
insb
xor
add
sbb
das
idiv
push
loope
cmpsb
setl
lret
leave
nop
loope
jg
mov
mov
jnp
addr16
into
inc
and
fstpl
xor
push
xchg
mov
pushf
pop
add
dec
cmc
cs
out
aam
inc
insb
int
loope
jnp
sub
mov
sti
xchg
aas
bswap
mov
cmpsb
dec
jne
ret
mov
mov
in
sbb
loope
loop
cmp
leave
xor
stos
clc
adc
loope
fdivrs
jnp
dec
loope
jg
lret
add
mov
inc
out
jae
loope
cli
test
loope
cwtl
adc
loope
pusha
push
mov
loope
scas
out
sti
frstpm(287
jae
loope
xlat
push
lods
add
call
inc
inc
sub
sbb
xor
add
orl
mov
scas
les
je
or
xlat
jecxz
mov
lahf
addl
rcrb
movsl
mov
xor
loope
sub
ret
push
cmpsb
loope
mov
das
fwait
arpl
sub
icebp
pop
test
pop
lahf
dec
and
gs
or
and
scas
fiaddl
push
clc
std
lahf
stc
cli
jo
add
xchg
in
in
sub
gs
aam
movsb
fucom
and
and
sbb
jb
push
adc
loope
movsl
pop
repnz
int3
lock
cmc
loope
jo
out
dec
add
cld
sti
xor
mov
push
pop
loope
push
mov
int3
loope
pop
outsb
or
add
out
loope
xchg
xchg
cs
dec
cmp
data16
ja
shlb
jg
iret
gs
fbld
add
clc
fldenv
dec
loope
cltd
lods
lock
push
xchg
loope
xlat
adc
popa
jp
test
push
dec
sub
cli
loope
and
rcrl
push
test
mov
je
inc
leave
loop
push
shrl
loope
cs
psrad
pop
loope
xchg
xorl
jo
rcrb
dec
fsubrs
insl
dec
mov
xchg
cmpsb
mov
add
insl
jae
jnp
ljmp
arpl
enter
adc
mov
aam
imull
push
jbe
loope
and
dec
mov
pop
stc
int
loope
dec
and
pop
xchg
add
in
cli
fadds
pop
mov
lahf
sub
in
loope
popf
ljmp
jge
aas
inc
fs
and
jae
xchg
or
mov
mov
int
ljmp
notb
jb
mov
fcomps
pop
jge
aam
dec
add
addb
add
push
rclb
mov
loope
or
in
mov
loope
add
loopne
jp
push
mov
xchg
add
mov
dec
insl
mov
loope
pop
fwait
orl
push
cmp
xchg
inc
mov
jecxz
enter
mov
mov
jecxz
loope
movsl
xchg
dec
sub
arpl
push
mov
fincstp
cmp
test
icebp
fdivrl
lcall
loope
inc
jns
loope
dec
adc
movsl
cltd
into
loope
xchg
fstpt
cli
mov
inc
test
adc
add
mov
jno
push
gs
pop
scas
mov
arpl
sahf
dec
idivl
loope
cld
or
pop
out
loope
inc
add
cmc
ret
adc
xchg
int3
mov
loope
adc
mov
mov
dec
popf
sub
xor
inc
push
add
inc
jmp
std
sub
dec
pusha
cli
aad
push
sbb
dec
out
rclb
outsl
test
hlt
bound
loope
imul
insl
in
jmp
cs
sarb
cwtl
mov
scas
lock
out
dec
shrb
push
xchg
ljmp
out
cmp
repnz
sub
push
mov
pop
loope
sub
mov
repnz
loope
pop
cmp
adc
repz
data16
es
sbb
loop
cmp
cli
push
sbb
jecxz
add
mov
ret
popa
push
call
push
clc
adc
mov
cmc
loope
enter
jno
cmp
stc
xchg
aas
mov
pop
pop
jo
and
sub
loope
jmp
jle
out
out
std
xlat
inc
test
xchg
int
cld
imul
mov
lods
pop
jb
xchg
jnp
mov
loopne
mov
imul
arpl
loope
sbb
pushf
ja
fldcw
pop
loope
xorb
ljmp
jmp
push
add
addr16
movsl
test
adc
pop
stos
arpl
mov
loope
clc
stos
or
std
dec
loope
hlt
andb
adc
cmp
fcoml
push
mov
loope
js
iret
ret
insl
ja
mov
xlat
stos
push
mov
nop
loope
cmp
pop
cmpl
orb
ds
sub
jo
fstps
inc
cmp
inc
test
out
mov
popf
jge
int3
je
loope
aaa
out
test
xchg
adc
loope
jmp
aam
xchg
stc
xlat
loope
lcall
pop
ss
pushf
js
jmp
lods
pop
and
cltd
mov
push
or
jg
int3
sub
testl
cltd
ljmp
testb
shlb
mov
cwtl
xor
out
pop
jp
loopne
mov
dec
jge
xchg
test
cmp
jg
add
leave
dec
push
in
cld
jmp
jp
xor
adc
cmpsl
sub
daa
mov
adc
leave
add
jge
jecxz
jp
xchg
mov
xor
cld
mov
add
xchg
push
int
loope
jle
cli
dec
jne
dec
add
adc
mov
pop
pop
lods
mov
mov
add
insl
enter
jmp
sub
mov
clc
sbb
cmp
and
adc
fsubl
xor
pop
jnp
sub
mov
loop
rcll
loope
or
lret
out
push
pop
outsb
pop
dec
mov
sub
mov
and
loope
dec
sbb
jle
lock
mov
inc
jg
lahf
and
inc
add
sub
mov
mov
jns
loope
cmp
fwait
dec
pop
mov
test
addr16
push
cmp
loope
xor
dec
movl
aam
mov
cmp
je
cmp
cmp
jmp
in
jae
mov
cmp
add
insb
mov
aaa
and
ret
cmc
mov
mov
idiv
or
shlb
sbb
xlat
loope
inc
sbb
add
dec
out
xchg
fldt
sahf
mov
jo
loope
sbb
stos
loope
jl
mov
loope
je
xchg
add
loope
and
test
fwait
mov
pop
pop
sti
mov
or
loope
sub
test
adc
mov
mov
loope
pop
mov
push
and
stos
mov
or
push
and
add
fistl
loope
inc
or
sub
jecxz
push
notb
cmpsb
jmpw
es
aaa
or
xchg
cmpsl
ficoms
jmp
je
or
adc
out
push
fcmovnbe
loope
lea
leave
jl
sbb
cs
lret
jmp
mov
ret
add
jmp
rcl
or
and
sbb
xchg
cmp
pop
or
cmc
push
ficoml
out
shufps
loope
mov
sbb
loope
mov
pop
lock
push
loope
adc
test
mov
xchg
das
fdivrl
idivl
loope
ret
lret
loope
jle
push
rcr
int3
loope
xor
loope
jp
adc
icebp
or
inc
in
sbb
loope
jp
xchg
scas
clc
push
fsts
loope
sbb
jae
and
and
and
push
and
add
imul
lahf
mov
loope
stc
adc
stos
sub
mov
mov
fs
out
js
std
mov
movsl
ds
sub
fistl
add
scas
out
jns
arpl
out
mov
aad
dec
loope
test
adc
rclb
lret
or
and
mov
jl
call
mov
jmp
and
sbbl
inc
loope
ret
push
mov
pop
loope
sub
loope
mov
jne
mov
stc
jmp
sub
loope
aaa
jl
and
cmpl
cs
jmp
jae
sbb
das
scas
movsb
test
ret
mov
aad
shl
lods
imul
or
mov
roll
push
rcrl
out
cmc
cwtl
sti
xor
push
in
add
mov
gs
daa
ss
sbb
cmp
rcrl
scas
push
shl
mov
in
mov
ret
popf
cmp
lcall
outsl
and
jl
sti
push
mov
aam
push
cmp
add
xor
jo
rol
xchg
mov
ja
ljmp
subl
and
cmp
rclb
dec
test
adc
daa
aam
aaa
sub
inc
and
icebp
gs
xor
add
sub
mov
loop
lock
add
aam
jae
mov
and
outsl
loope
sub
mov
mov
dec
popa
loope
lcall
insl
lods
jmp
ret
jmp
loope
adc
sub
fsub
pusha
ds
jmp
mull
jmp
mov
jecxz
push
sti
lock
or
das
sub
nop
loope
incb
cmpsb
bnd
sbb
push
xor
dec
dec
sbb
sbbb
cld
xor
addb
or
aaa
in
sbb
xor
push
inc
xchg
sub
fwait
in
and
adc
loope
pushf
xchg
sbb
loope
fisttpl
cmp
or
jae
mov
fwait
push
jns
mov
nop
sub
mov
ss
push
das
mov
fst
loopne
cld
jp
sub
pop
bnd
mov
push
sahf
leave
scas
rcr
and
mov
scas
sti
cmc
ret
push
jge
pop
xchg
jmp
add
loope
in
test
mov
xor
mov
repnz
fsubrs
fstpl
insb
adc
stos
insl
je
incl
loope
or
sub
inc
test
mov
jo
ljmp
sbb
loope
int
sub
loope
sbb
push
call
cwtl
mov
mov
fsub
iret
or
mov
mov
mov
test
addr16
add
fsubp
int3
and
scas
xor
jecxz
fildll
or
imul
and
adc
mov
cltd
loop
loope
xor
push
sub
mov
mov
lret
scas
sbb
aas
fs
add
sbbb
in
ret
loope
cmp
loope
dec
pinsrw
xor
xchg
lock
xchg
jns
jg
and
stos
dec
cmpsb
push
in
lcall
sub
hlt
xor
iret
jo
adc
fnstenv
cmpsb
jb
dec
loop
xor
jmp
or
iret
loop
loope
xlat
ret
sbb
dec
leave
mov
decb
and
jle
in
dec
add
loope
inc
xor
cmp
fs
push
pushf
leave
pop
arpl
jge
pop
test
popf
mov
jo
mov
sbb
push
es
insb
loope
insl
call
pushf
loope
sbb
les
and
xlat
sbb
adc
pop
enter
lcall
das
push
jg
pop
cld
stc
test
cmpsb
or
xchg
loope
jne
mov
loope
ret
xor
sti
sub
pop
sbb
jmp
arpl
mov
adc
mov
jmp
insl
pop
jmp
cli
or
cmp
adc
es
lock
and
std
out
mov
xchg
imul
jecxz
xchg
gs
sti
hlt
loope
pop
xchg
jnp
mov
sahf
jns
daa
dec
and
fistpll
jmp
int
stos
ret
jp
cmp
mov
clc
in
loop
or
inc
xchg
push
nop
dec
xchg
xlat
test
test
mov
ds
lret
sbb
loope
push
xchg
das
mov
pop
imul
xor
aam
test
dec
and
mov
call
inc
das
divb
dec
rorb
mov
loope
jnp
dec
and
adc
out
outsl
lods
es
loope
out
sbb
push
jg
sub
imull
fwait
xchg
loope
cmp
addl
popa
shrb
sbb
mov
les
fs
aas
rolb
in
inc
pop
rolb
mov
gs
loope
inc
and
loope
inc
fs
aam
ret
push
loope
jno
stos
je
mov
rol
sub
pop
bound
fidivs
lret
jle
jmp
inc
dec
test
pop
xlat
jno
in
cltd
mov
lcall
pop
lea
loope
lods
inc
xor
jo
pop
pusha
adc
jmp
fcompl
orb
rolb
es
aad
jmp
xor
dec
subl
or
loope
push
add
or
xchg
test
sub
mov
ss
loope
sbbl
loope
push
mov
sub
lcall
and
pop
out
leave
mov
sub
push
mov
movsl
in
add
loopne
aas
enter
inc
test
ljmp
sbb
pop
xor
mov
jae
and
or
out
iret
push
punpckhdq
add
imul
push
inc
cmp
loope
int3
into
sbb
test
test
fsubrl
pushf
pop
fwait
loope
stos
aaa
imull
xor
es
sub
jecxz
mov
adc
negb
stc
shll
inc
mov
lock
cmp
jmp
aad
inc
xchg
loope
cmpsl
scas
in
push
jbe
loope
mov
mov
ds
push
loope
cmc
cmp
pop
popf
and
mov
test
dec
jne
aad
mov
mov
incb
pop
loope
icebp
sub
loope
imul
sbb
dec
outsb
mov
in
loope
sti
sub
mov
out
jmp
sarb
sahf
cmp
jae
loope
jge,pt
cmc
ja
adc
push
outsl
add
sbb
incb
clc
decl
or
dec
push
and
mov
jmp
loope
push
fstp
cmp
cmp
shrl
popf
push
mov
popa
adc
loope
rcrl
push
inc
pop
loope
xor
mov
cmp
or
mov
xor
xchg
rep
loope
and
jno
popa
adc
push
pushf
repnz
sbb
or
loop
push
gs
in
mov
fwait
xor
loope
and
and
dec
pop
fiaddl
mov
adc
loope
xlat
sar
scas
mov
xchg
loope
js
pop
jbe
fstpt
das
mov
imul
sub
out
mov
mov
jmp
lcall
xlat
jecxz
xor
movb
fisubrl
sub
addr16
jge
dec
cmc
popa
ja
push
fwait
jo
add
and
add
mov
jo
jp
pusha
int3
fiaddl
and
lock
icebp
outsl
sbb
loope
bound
mov
pushf
push
xchg
sub
dec
aad
xor
loope
dec
jo
out
imul
loope
test
sbb
pop
aam
pop
loope
pushf
lret
imul
gs
mov
ljmp
outsl
test
or
loopne
dec
jmp
loope
fidivrs
and
push
xchg
jmp
bound
repz
lahf
enter
cmpsl
cmp
sbb
mov
sub
mov
xchg
mov
addr16
add
loope
pushf
in
out
push
data16
mov
loop
and
jle
push
subl
cli
adc
sub
enter
jecxz
cwtl
out
lock
bound
mov
shr
roll
orb
ds
loope
sahf
adc
fldcw
mov
jl
jnp
mov
pushf
es
xor
loope
fldt
push
rcrb
out
jae
fisubl
loope
pop
iret
stc
lret
jl
xor
lods
pop
loop
out
jnp
popl
cmpsl
test
out
adc
sbb
std
and
xchg
aam
and
xor
addr16
stos
mov
cwtl
gs
out
push
xor
fsub
sub
fisubl
in
in
icebp
jmp
lahf
xchg
mov
cmp
loope
fwait
mov
repz
test
shlb
jae
dec
or
and
loope
fldt
adc
mov
xrelease
loope
cld
push
jmp
jg
jmp
loope
mov
mov
loope
maxps
add
loope
addr16
pop
divb
fdivrs
sahf
cmp
call
sbb
mov
cmp
mov
xchg
mov
movsb
adc
push
pop
pop
ror
jp
adc
int
nop
lret
push
mov
pop
jb
jmp
or
ljmp
or
jo
adc
fsts
loope
int3
mov
cld
jbe
mov
xchg
adc
adc
mov
jmp
in
and
cs
xchg
fistps
sub
mov
mov
pop
sub
ja
icebp
xchg
adc
mov
xor
or
in
fs
aam
rcrb
ss
lods
or
mov
dec
gs
jns
gs
jne
add
ret
fsubrp
inc
not
adc
addr16
loope
lahf
scas
lods
dec
sbb
lcall
add
inc
call
mov
jl
loope
imul
loope
dec
inc
fstcw
mov
mov
sub
and
jnp
jmp
sti
push
arpl
out
mov
loope
push
sbb
aaa
add
mov
in
js
rcr
ss
loope
outsl
cs
movsb
dec
gs
jle
sahf
jae
sub
xlat
xor
test
xchg
cmpsb
loope,pt
push
dec
adc
xor
sahf
pop
loope
repz
arpl
popf
sbb
add
loope
pop
mov
inc
iret
inc
hlt
loope
xchg
jae
mov
xor
loope
sub
pop
cmp
int
mov
add
mov
arpl
ja
fs
cld
xor
stos
jno
push
xor
fsubp
add
mov
inc
test
mov
mov
jle
mov
dec
test
rorb
cld
in
jecxz
lret
push
test
inc
xchg
sub
xchg
loope
shrb
xchg
loope
stos
das
ret
add
mov
pop
sarb
sahf
out
jg
rorb
xlat
mov
in
gs
cmp
aam
mov
xchg
out
lcall
jo
cwtl
ds
idivl
aad
enter
or
mov
jl
inc
fwait
test
call
push
cltd
jne
jmp
pop
je
shl
addl
clc
cmp
negl
mov
jg
in
out
fcompl
nop
ret
xor
insl
stos
or
mov
add
jmp
sbb
push
loope
or
fbstp
loope
ljmp
loope
push
lahf
sub
loope
sbbb
inc
fwait
mov
stc
xchg
sti
arpl
sbb
cmp
xor
pop
data16
cwtl
xor
xor
mov
xchg
sahf
mov
lret
loope
cli
popf
cmp
mov
fistpl
mov
inc
pusha
mov
outsb
push
ds
loope
divb
mov
lcall
hlt
dec
fs
leave
decb
test
and
jl
outsl
jo
fisttpl
push
ret
sbbw
mov
in
or
and
loope
add
fmuls
sub
loope
add
cmp
mov
mov
pop
jmp
enter
mov
ror
shrb
ja
dec
loop
mov
in
cmc
or
loope
pop
jl
xor
outsb
inc
cmp
fsub
cmp
sub
mov
sbb
cmp
or
jo
jb
mov
inc
jmp
or
arpl
int
stos
fistpl
std
popf
sbb
cmp
mov
pop
mov
lock
push
dec
mov
scas
mov
loope
fimuls
shl
ret
mov
jg
aad
loope
jg
adc
aaa
and
jmp
pop
std
scas
loope
ljmp
loope
popf
fists
add
cltd
cld
daa
sbb
jae
and
xchg
loope
stc
mov
adc
jo
loope
fldpi
mov
loope
into
pop
hlt
adcl
fdivl
cltd
dec
loope
gs
jmp
hlt
pop
adcl
js
cmp
xchg
insl
fwait
xor
ljmp
lock
jne
mov
jmp
aaa
push
sub
dec
out
push
shlb
loope
es
subb
push
nop
cs
mov
mov
and
xor
jo
stos
loopne
mov
pop
loope
outsb
jo
or
mov
imul
movsb
jle
aas
sub
inc
xorb
out
cmpsl
loop
daa
push
jg
xchg
add
cli
jnp
ds
inc
push
arpl
int
popl
mov
cltd
loop
rcrb
jo
aam
cmpsb
and
movsb
mov
popa
nop
xor
repz
xchg
loope
and
mov
xor
in
cmpsl
stc
xchg
loope
jp
xor
loopne
loopew
nop
mov
insb
mov
jo
jmp
cmp
mov
or
out
bound
push
loope
repnz
div
push
jo
fs
fidivs
out
sub
outsl
push
loope
push
out
xor
iret
loope
sbb
scas
lret
nop
jo
pop
fucomp
pusha
out
aad
jnp
loope
push
fs
std
jecxz
loope
adc
pop
icebp
mov
loope
es
rcl
add
insb
test
pop
mov
pop
cmp
xlat
test
pop
and
xchg
jecxz
cmpsl
shrb
inc
mov
stc
push
popa
mov
sbb
push
loope
daa
inc
pop
push
sbb
or
pusha
movsl
cmpsb
das
loope
test
mov
loope
ss
mov
jne
outsb
out
or
cmpsl
jmp
xchg
mov
sub
sti
jae
pop
lcall
loope
test
add
clc
test
in
lock
ss
mulb
pop
insl
movsl
in
xorl
push
loope
mov
inc
mov
xchg
ss
or
ret
in
lret
adc
jecxz
arpl
push
sbb
sbb
lock
es
mov
loope
iret
loop
arpl
mov
insl
and
jo
movsb
mov
out
jecxz
out
loope
dec
and
push
jno
loope
dec
je
cmp
enter
addr16
int3
loope
lock
test
loope
lcall
xchg
xchg
pusha
or
iret
loope
adcl
das
sbbl
fwait
addr16
shl
nop
cld
ror
jnp
mov
inc
shr
jl
adc
inc
and
insl
cltd
loope
daa
mov
push
loope
shll
xchg
and
enter
xchg
push
fwait
add
insb
jmp
and
xchg
das
inc
out
loope
sbb
lds
push
mov
fistl
mov
and
in
xor
mov
stos
inc
fdivrs
inc
test
and
add
divl
cmp
mov
jo
jbe
and
inc
and
dec
mov
push
jo
es
lcall
cli
xor
loope
cmove
icebp
pop
push
jmp
fldenv
subb
int
and
imul
push
loope
sahf
in
cmp
mov
sub
repnz
sbb
inc
lea
in
mov
jb
cld
loope
jle
cmc
mov
sub
dec
inc
aas
sub
loope
sub
retw
pop
out
jns
loope
mov
call
loope
pop
sub
rorb
loop
popf
and
imul
dec
jle
outsb
dec
add
ds
and
mov
or
insb
in
cmp
add
ljmp
loope
out
ror
pop
dec
ret
mov
shll
test
loopne
loope
fdivr
lds
call
push
mov
jg
imul
dec
mov
mov
repz
hlt
add
in
les
loope
xor
or
sub
out
lods
mov
dec
in
add
mov
push
cwtl
or
scas
loope
addr16
mov
loope
scas
push
ret
or
jo
adc
out
enter
and
movsl
pop
in
push
in
lock
pop
mov
jge
jmp
sub
test
shlb
sub
and
mov
in
and
pop
push
xor
jnp
dec
xchg
add
jecxz
sub
xchg
popa
loope
pcmpeqd
mov
repz
xor
outsl
into
sti
jmp
push
pop
and
cmp
push
iret
div
xchg
add
push
xchg
scas
xchg
lea
add
xor
mov
stos
pop
in
dec
push
and
nop
xor
loope
aas
shrb
out
fsubr
shlb
je
ljmp
aad
repnz
pop
ret
lods
mov
adc
insl
jl
js
insl
sub
loopne
jg
mov
rcr
ds
add
loopne
and
inc
enter
pop
pop
pop
loope
nop
push
imul
jl
add
mov
push
adc
and
jecxz
push
out
into
sub
inc
stos
add
mov
mov
inc
clc
loope
shll
icebp
imul
loope
xlat
fs
das
mov
loope
stos
xchg
push
jbe
roll
lret
pop
inc
xchg
mov
mov
outsl
pop
fldenv
mov
cwtl
mov
fsubs
sub
pushf
push
andl
mov
test
inc
stos
sti
dec
loope
mov
negb
setno
loope
and
icebp
jecxz
xor
push
pop
rorb
push
data16
xchg
mov
and
insl
jge
lret
shlb
call
inc
stc
loopne
jne
pop
dec
or
loope
or
or
sti
data16
outsl
insb
ret
call
pop
and
dec
push
std
adc
jae
repnz
mov
add
and
sbb
lcall
inc
outsb
ja
mov
adc
js
or
jnp
or
fcoms
ljmp
daa
mov
and
add
and
shl
loope
out
imul
out
sub
loope
shlb
jge
fistpl
pushl
or
xor
mov
stc
add
ja
aad
js
cmp
mov
xor
pop
sbb
mov
add
ret
bound
fwait
lods
jmp
mov
add
jmp
and
mov
inc
mov
jmp
dec
adc
mov
jmp
xchg
xlat
out
icebp
xor
std
loope
fsubrs
cmpsl
or
loope,pt
xor
mov
mov
daa
xchg
inc
sub
loop
mov
lds
xchg
popf
loope
xchg
test
lss
or
test
jle
sub
and
and
lock
pop
addr16
xchg
jo
fldenv
lss
xorl
xchg
les
out
loope
in
jbe
inc
sbb
dec
loop
sub
or
test
fisubl
out
xor
loope
add
sbb
rcrb
xchg
push
int3
es
cmp
rolb
add
mov
loop,pt
mov
and
push
mov
std
gs
jmp
push
sub
xchg
int
add
mov
popa
imulb
inc
or
jb
add
insl
pop
sub
mov
inc
xorb
inc
insl
fbstp
into
or
fs
mov
pop
jge
shlb
loop
sbb
mov
loop
loope
jmp
subb
adc
pushf
and
out
in
test
and
jo
fbld
pop
test
sub
adc
cmc
adc
or
iret
call
cmp
or
mov
mov
mov
fbstp
sbb
clc
mov
pop
test
xchg
cs
mov
mov
dec
daa
add
test
add
push
std
popa
loope
arpl
sbb
push
pop
sub
lods
inc
out
stos
jne
xchg
mov
out
mov
mov
aad
mov
loopew
sbb
pop
test
fsubl
aaa
sub
or
mov
loope
cltd
sub
mov
ds
pop
lods
pop
push
inc
out
in
jecxz
imul
jmp
fstpl
es
ljmp
shlb
pop
mov
rcr
mov
pop
cmp
xorb
std
push
loope
sub
mov
imul
lods
fcmovb
std
dec
and
pop
loope
mov
mov
loope
mov
aaa
cmp
push
repz
loope
subl
loop
ret
imulb
icebp
sub
jno
in
sahf
mov
mov
mov
push
mov
scas
pop
pop
pop
loope
mov
xor
sub
mov
mov
jnp
inc
in
call
jb
loope
cmpsl
js
pop
imul
push
loope
loopne
pop
pop
fsubr
push
push
xor
xor
gs
popa
sub
xchg
mov
cmpl
adc
ljmp
dec
outsl
loop
inc
rolb
lret
lahf
xor
and
enter
fsubs
and
inc
shr
push
dec
rol
dec
mov
push
inc
fsubrp
rorl
out
ret
int
adc
test
stos
and
jecxz
xor
test
push
add
fidivs
xorl
loopne
add
add
aam
stos
mov
repnz
cmpsl
dec
jbe
jle
mov
fcom
or
fists
pop
pop
jecxz
jne
xchg
ja
cmp
imul
mul
inc
inc
pop
ljmp
push
rcl
out
rorl
inc
test
jp
je
mov
jle
add
cld
daa
push
jecxz
push
or
loop
repnz
mov
test
cmp
sbb
push
and
out
pop
inc
lret
add
mov
test
rorb
lds
dec
fadd
leave
mov
xlat
xchg
out
adc
clc
lods
cli
fsubrs
in
xchg
in
ja
daa
into
jle
ret
out
jne
xor
aad
in
and
loope
ss
negl
cmp
je
dec
push
shll
shl
stc
mov
fsubl
add
lcall
sahf
jmp
ss
push
outsb
cs
loope
xor
into
lcall
xlat
mov
adc
lock
push
mov
into
xlat
jb
cwtl
es
xchg
adcb
inc
in
add
and
cli
dec
test
lds
mov
pusha
and
out
loope
popa
add
mov
mov
and
ret
shlb
add
rclb
rolb
jo
fs
arpl
aam
imulb
fimuls
jb
loope
and
hlt
cmpb
dec
push
pusha
scas
and
iret
bound
jl
sbb
jmp
and
in
jo
aas
inc
or
mov
data16
xor
addr16
mov
loope
mov
lret
insb
mov
or
mov
mov
mov
loope
mov
mov
popa
int3
loope
mov
loopne
popf
rcrb
push
sbb
rclb
inc
lock
out
xor
repz
pushf
fnstcw
mov
jmp
loope
fsts
inc
add
mov
lods
cmp
add
mov
cmp
adc
loope
sub
insw
push
loope
sub
mov
add
ret
movsb
xchg
incb
xchg
and
xchg
ffreep
fabs
jae
lret
lock
cmp
mov
add
imul
mov
mov
mov
pusha
daa
pop
jmp
int3
jl
rcrb
mov
popa
pop
arpl
and
xor
les
pusha
xchg
lods
inc
lahf
scas
stos
loope
xchg
fcoms
dec
aaa
xchg
orb
sbb
pushf
cmp
push
stos
push
cs
popa
jae
rclb
push
ss
js
mov
in
fs
add
loopne
mov
add
cmp
xchg
pop
inc
push
lret
sbb
add
pop
test
shl
dec
jae
push
pop
xor
shl
dec
inc
push
sub
rolb
cmp
pop
mov
inc
loope
negl
repnz
jmp
loope
popa
scas
adc
insl
sti
adc
push
mov
ffreep
xor
mov
leave
and
sbb
or
jecxz
push
jne
hlt
loope
xor
loope
pop
sbbl
into
shrl
cltd
pop
xchg
xor
adc
jmp
xor
loope
sub
pop
jo
jmp
hlt
mov
jo
imul
xor
jns
loope
movb
xor
xor
push
inc
xchg
ret
aas
test
push
cmpsb
sub
loope
out
ss
in
pop
enter
pop
lret
fwait
jae
pop
fcomp
push
loope
adc
ret
push
loope
and
loope
mov
sub
inc
pop
addr16
jb
and
dec
xor
loope
daa
mov
pusha
loope
cmpsb
fucomi
jg
push
cwtl
shlb
loope
sub
idivl
jb
push
adc
arpl
les
mov
and
dec
movsl
xchg
jmp
fimull
dec
jl
pop
jns
loope
test
push
add
out
loope
fcoml
xor
aad
sub
loopne
add
loope
cmc
fs
jno
pop
fisubl
adc
loope
dec
adc
lea
xchg
psrld
adc
mov
pushf
repz
xor
and
test
inc
enter
push
test
out
mov
scas
ficoms
cli
out
mov
cmp
xor
in
xchg
mov
shl
xchg
into
mov
rol
loope
movsl
inc
movsb
in
cmpsb
dec
out
loope
add
lods
test
xchg
loop
dec
pusha
inc
loope
add
gs
icebp
popfw
push
mov
rcr
push
mov
mov
jo
inc
xlat
add
dec
loop
iret
xchg
pop
lahf
cld
addr16
adc
jmp
push
subb
rorb
mov
je
push
mov
rolb
loope
mov
push
loope
popf
fnstenv
push
sub
loope
bound
ret
mov
loope
sub
adc
xor
out
js
nop
cmp
or
cmp
and
cmp
in
inc
in
or
scas
xchg
mov
in
mov
jo
repz
ret
loope
das
push
hlt
out
cld
and
cltd
aam
aaa
and
pop
popf
mov
imull
js
outsl
mov
pop
xchg
cwtl
cmp
enter
fwait
in
int3
ja
bound
dec
pusha
inc
xor
cld
mov
sbb
mov
jp
jmp
mov
repz
and
aam
inc
mov
out
mov
sbb
sbbl
loope
or
das
jg
jb
lock
cmc
in
jnp
iret
adc
loope
push
add
and
ffreep
loope
pop
mov
mov
inc
sbb
jmp
jo
shlb
lods
loope
adc
mov
add
lcall
push
or
push
mov
cmp
loope
hlt
outsl
dec
sahf
fdivr
loope
inc
mov
lods
push
mov
xchg
push
jno
loope
pop
jge
dec
mov
insl
call
pop
icebp
push
add
adc
iret
or
cli
xchg
pop
jo
loope
in
das
add
lods
sub
hlt
xchg
lods
loope
ja
in
pop
cld
push
lret
jp
es
mov
rcl
jmp
or
mov
mov
add
xor
test
pop
inc
dec
mov
mov
jo
xchg
sub
sub
and
mov
cmc
mov
and
and
mov
hlt
sbb
out
mov
lds
int
fs
pop
or
cmp
xchg
aas
jnp
push
sbb
xor
dec
cmp
add
and
into
sahf
repz
loope
inc
pop
push
mov
lahf
xchg
push
adc
xor
loope
frstor
out
lea
int
xchg
loop
xchg
mov
mul
jae
xchg
mov
clc
sub
es
and
lods
fnsave
bswap
inc
mov
pop
iret
sbb
push
loope
jbe
jns
dec
jo
jp
jno
ljmp
dec
imul
xchg
jne
cmpsl
repnz
cmp
dec
jbe
sbb
fbstp
and
aad
mov
loope
and
sbb
loope
out
xchg
push
loope
pop
lret
pop
push
mov
notb
jmp
bound
jp
and
in
lods
or
ret
jecxz
in
insb
add
mov
je
mov
xchg
add
sbb
loope
inc
jecxz
sbb
out
add
sub
int3
gs
and
mov
mov
dec
mov
loope
test
inc
dec
pushf
shlb
mov
stc
cmp
ficoms
jecxz
fsubrs
xor
nop
lahf
xor
shr
insl
cmp
pop
rcll
not
mov
in
ljmp
add
iret
scas
out
scas
fcompl
push
push
addr16
aam
xchg
jae
loope
lock
sarl
jp
repnz
adc
and
mov
int
or
bound
inc
xchg
aas
test
data16
cltd
or
dec
mov
mov
jmp
jae
addr16
push
loope
fwait
push
and
mov
cmp
divb
popf
ss
sbb
fidivrs
rol
dec
sti
out
mov
faddl
mov
fisubs
int3
jmp
ljmp
push
mov
popl
sti
int3
adc
test
mov
sub
dec
jmp
jb
inc
loope
pop
mov
sbb
into
mov
ds
jge
jb
push
rol
push
cmp
mov
std
stc
pop
loope
rol
mov
or
cmpsb
jle
loope
xor
sbb
dec
jl
dec
jns
sub
xor
jge
out
mov
fstpl
cmp
push
outsb
sub
or
xchg
adc
loope
pop
mov
push
sub
add
sbb
or
fmuls
sbb
pop
mov
arpl
cmp
dec
xchg
ljmp
lret
repz
push
das
adc
xchg
aad
call
pop
xchg
test
sub
mov
jne
movsb
loope
ret
lret
sarb
mov
das
pop
test
fsubrs
in
adc
lahf
pushf
add
mov
xor
add
outsl
inc
shlb
int3
clc
pop
cmc
out
jge
sub
mov
loopne
sub
cs
inc
mov
pop
sbb
loope
lods
and
stos
movsl
lock
repz
jmp
lods
push
shlb
pop
popf
jp
pushf
in
inc
pop
mov
xchg
pop
movsb
xchg
ja
jmp
sub
inc
lahf
sub
push
negl
out
and
mov
mov
mov
lea
ret
lods
js
jge
test
loop
lds
mov
cmp
pushl
ljmp
sti
es
push
std
loop
push
push
sub
push
pop
xchg
mov
mov
cmp
out
rcrl
add
movsl
out
push
loope
fcmovnu
out
shlb
push
in
mov
add
sub
mov
fs
loope
push
stos
or
loope
aad
inc
inc
into
inc
xor
dec
movsl
jo
addl
jp
jae
sbb
or
xchg
cmp
mov
notl
bswap
outsl
insb
loope
cmp
in
adc
jne
test
negb
out
and
adc
add
cs
addr16
pop
popa
fcom
loope
or
cli
jp
push
inc
andl
or
add
pop
mov
pop
loope
cmp
lods
jmp
sti
mov
sub
loope
push
xchg
pop
popf
mov
sub
xor
and
or
mov
test
lock
imul
jnp
scas
sub
daa
mov
nop
jmp
xchg
mov
call
or
mov
sbb
adc
daa
add
scas
shlb
ljmp
mov
fs
mov
int3
std
in
loope
jge
imul
in
arpl
xchg
dec
push
jns
loope
outsb
dec
sbb
cmp
and
pop
xchg
loope
and
xorl
in
pop
jbe
loope
mov
inc
xor
jl
inc
jge
data16
adc
mov
dec
dec
dec
cmp
in
nop
and
pop
mov
pop
in
sbb
jne
loope
mov
xchg
adc
mov
idivl
push
cmp
xor
sti
mov
add
sbbl
xchg
and
cld
push
popf
int3
loope
sbb
mov
loope
clc
inc
xor
icebp
testl
in
push
push
mov
inc
adc
and
ds
pushf
mov
adc
scas
jle
popa
imul
loope
stos
cmp
add
std
jne
or
in
popf
loope
xor
sbb
loope
incb
movsl
add
in
dec
test
cmp
insl
mov
pusha
adc
add
add
fistpl
and
lahf
xchg
push
pop
xchg
fdivs
lret
adc
add
cmp
je
sub
jecxz
loope
pop
jmp
fstp
loope
push
js
pop
lcall
push
out
mov
repz
aam
sub
ljmp
jb
and
addl
loope
mov
aam
pop
cwtl
sub
popa
mov
bound
loope
je
pop
xchg
mov
ja
rcll
rorb
sahf
out
aaa
popa
loope
jge
adc
mov
pushl
mov
fisubrs
adc
lret
loopne
mov
faddl
stos
pop
jae
out
and
jo
mov
scas
loope
xchg
fidivl
ds
lds
mov
addr16
stos
lock
cmp
xor
mov
push
out
out
sub
rolb
cltd
pop
lahf
sub
jo
mov
shl
int3
and
rcr
cwtl
jnp
xor
stos
lret
fscale
ds
jmp
out
push
loope
sbb
loop
sub
cltd
loope
xor
in
insl
fs
loope
fists
loope
jo
or
and
cmp
push
test
xor
stos
arpl
loope
xchg
movsl
push
out
xlat
out
and
mov
loope
les
jge
xchg
push
mov
mov
inc
popa
sbb
aad
pop
lock
in
sub
or
loope
mov
mull
int
loope
push
lret
shll
call
dec
imul
sarl
lea
in
add
dec
pop
jmp
xor
and
push
and
subl
in
mov
xchg
lret
loope
dec
jb
xor
loope
sbb
loope
sbb
xchg
mov
dec
mov
popf
cmp
imul
mov
push
ret
sub
mov
rclb
mov
orl
je
mov
loope
loopne
jns
dec
repnz
iret
mov
xchg
lock
loope
mov
sub
xor
and
mov
movsb
loope
stos
mov
cmp
push
xchg
cmpl
sub
in
or
nop
mov
jbe
and
add
xlat
jmp
popf
loope
or
push
scas
loope
dec
repz
jle
mov
addr16
loope
adc
aam
mov
fwait
scas
in
int
mov
mov
lcall
jnp
shrb
and
loope
cwtl
cmp
loope
xor
xor
fwait
cmc
xchg
mov
xor
repnz
pusha
mov
add
xor
ja
repz
loope
push
addr16
xchg
into
cwtl
mov
mov
sbb
gs
fucomip
push
loope
jnp
sub
mov
pop
dec
stos
adcb
test
sahf
cmc
jmp
push
lock
mov
fisubs
loopne
shll
leave
push
mov
mov
fldz
cmp
inc
loope
fisttpl
loope
sbb
xor
and
xchg
fmulp
jno
pusha
stos
ror
lock
loopne
sbb
outsl
fiadds
loope
rclb
fs
aas
mov
sti
das
adc
xor
bound
ja
jo
dec
xchg
gs
jo
in
push
and
push
loope
imul
loope
aaa
push
popl
loop
loope
xor
lret
in
into
rclb
in
mov
scas
out
loope
popf
push
sbb
mov
cmc
push
fs
push
stc
das
stos
mov
inc
shrb
std
jge
sub
push
add
mov
aaa
subb
push
dec
loope
bound
shl
sbb
adc
mov
dec
jmp
sub
or
loope
pop
push
lcall
sub
sub
shl
xchg
mov
into
idiv
or
adc
scas
rcll
pop
cmp
test
push
xchg
movsb
data16
xor
inc
mov
fs
out
lds
imul
sbb
lahf
sbb
stc
jbe
or
lea
fndisi(8087
dec
mov
jp
cmpsb
test
add
stos
int
loope
xchg
aam
loope
lahf
mov
pop
shlb
lret
stos
loop
mov
push
inc
popf
loope
mov
scas
sti
ja
xlat
ss
cltd
addr16
in
hlt
sbb
movsb
ret
int
dec
aam
jmp
fsubs
loope
arpl
mov
loope
add
dec
mov
sbb
dec
adc
jg
xchg
or
repnz
insb
andl
in
xchg
loope
mov
push
xor
test
out
ret
lods
loope
sbb
out
lock
jge
insl
inc
js
cli
fwait
ret
xor
mov
add
int3
loope
aaa
and
and
jo
pop
mov
loope
cltd
insb
push
ret
dec
loope
mov
ffreep
push
jmp
test
jo
mov
mov
dec
mov
mov
loope
sti
aaa
dec
xchg
xor
pop
out
loope
insb
mov
je
push
cmp
xor
fsub
out
or
cmp
fs
shl
lret
scas
jecxz
jge
push
insl
mov
mov
push
leave
xor
sbb
sub
jecxz
cs
clc
hlt
sahf
mov
jp
lock
decb
int3
mov
fldt
mov
popa
dec
cltd
pop
lock
jecxz
out
shl
std
inc
loope
pop
mov
add
pop
lahf
call
dec
in
das
je
mov
loope
stos
and
popf
cmp
and
inc
mov
pop
in
movb
dec
mov
loope
sbb
les
loope
cmp
in
pop
xchg
inc
into
mov
loope
call
sbb
xchg
hlt
jno
push
loope
inc
addr16
bound
jmp
xchg
scas
jbe
pop
loope
mov
out
add
loope
pop
mov
pop
dec
ret
loope
movsl
add
pop
inc
fdivrs
add
push
pop
jo
nop
inc
mov
dec
rolb
mov
movsb
pop
pop
shlb
ds
in
lods
shlb
ss
fldenv
fwait
jle
jnp
xor
test
incb
or
loope
mov
std
jg
xchg
jbe
add
push
cmp
push
lret
cld
pop
push
pop
inc
outsl
pusha
and
lock
jecxz
loopne
movb
mov
mov
loope
jno
mov
into
sbb
scas
jp
loope
push
loop
mov
mov
loope
ret
dec
mov
cmc
fsub
xchg
sub
fildll
shlb
ret
loope
mov
stc
push
mov
cld
add
out
cmp
inc
in
rorb
ficompl
testb
shll
loope
xor
sbb
mov
insl
out
adc
gs
imul
mov
outsl
fcmovu
rcll
movsl
xchg
loope
or
pop
adc
std
lods
dec
or
sub
loope
mul
mov
loope
sbb
xchg
or
pop
popa
push
inc
adc
dec
out
les
mov
loope
mov
dec
pusha
in
add
je
jle
jo
sbb
cld
rol
stos
and
notb
loop
lcall
iret
mov
ss
loope
cmc
je
push
lods
pop
loope
clc
lret
mov
lahf
cmpsl
inc
mov
shlb
std
in
or
mov
loope
ror
ret
add
mov
pop
mov
xchg
pusha
loope
sub
nop
mov
inc
sub
dec
add
loope
insb
or
loope
fdivl
mov
fdivrs
fucomp
dec
pop
push
xlat
sub
outsb
es
std
test
test
mov
jbe
in
in
loope
out
mov
loop
loope
mov
mov
add
xor
dec
in
into
jae
dec
jno
xor
adc
jnp
ljmp
jle
adc
dec
dec
push
repnz
aas
xor
jl
jecxz
lret
fucom
push
cltd
mov
or
out
in
out
lcall
jecxz
shr
shrb
add
fs
stos
and
xor
popf
xor
loope
mov
cwtl
movsl
adc
inc
outsl
dec
je
loope
shrl
test
pusha
dec
xor
and
xchg
and
loope
cmp
mov
ds
loope
leave
out
inc
jae
loop
loope
xor
iret
loope
mov
stos
push
scas
xor
and
dec
push
jmp
sahf
add
cmp
xchg
lock
xor
cld
icebp
loope
movsb
hlt
adc
das
ja
popa
and
xchg
jmp
and
das
mov
sbb
stos
iret
loope
movsl
js
enter
push
jl
sahf
into
lea
loope
pusha
imul
divl
fiaddl
mov
mov
pop
rclb
loope
mov
jae
sub
cmp
ror
arpl
loope
push
sbb
push
loope
jb
mov
out
popf
loope
shr
in
or
shlb
adc
gs
std
cmp
and
repz
mov
inc
test
in
add
cld
mov
xor
pop
shl
or
dec
inc
std
fadds
in
jbe
xor
movsl
xchg
push
sbb
ds
or
push
xchg
mov
xchg
xorb
jne
push
add
rorb
pop
andb
lahf
std
bound
pop
repz
loope
dec
jns
icebp
insb
test
ds
jbe
push
pop
lods
out
jo
xor
outsl
les
lds
push
cmc
mov
sar
mov
in
inc
in
insb
add
stos
int3
mov
push
rcr
les
xchg
cmpsb
movsb
mov
sbb
pusha
mov
or
jns
and
loope
imul
scas
lock
int
outsb
xchg
js
push
and
cs
push
cmp
mov
cli
rcl
pop
mov
outsl
xor
jo
lcall
xor
adc
movsb
test
ljmp
mov
dec
cmp
push
mov
sub
mov
lret
adc
dec
stos
pop
sbb
jmp
iret
outsb
dec
loope
js
dec
mov
je
mov
outsl
lock
popf
cmp
inc
in
movsb
jbe
jle
xor
je
and
lods
gs
pop
rclb
xchg
cmpsb
cltd
int
ja
dec
rorb
mov
push
jo
and
mov
call
jae
loope
fldenv
pop
pusha
jo
mov
lret
shr
aad
xlat
jb
mov
lock
add
mov
pusha
dec
insb
pop
jae
clc
addr16
adc
jo
in
imul
jne
test
push
mov
pop
loope
sub
inc
scas
test
mov
mov
in
loope
ss
sub
popa
sti
xor
in
fcompl
ja
test
shrl
into
notb
hlt
sub
inc
mov
scas
inc
je
and
push
sub
in
mov
stc
mov
mov
flds
js
or
rorb
xchg
mov
push
fs
loope
or
cmp
pusha
inc
insb
into
int3
loope
push
rcrl
mov
dec
cwtl
sub
addr16
pop
lret
insl
cmp
sub
jl
loope
or
push
out
xor
sti
jae
xor
jmp
imul
and
outsb
lret
sahf
out
xchg
pop
loope
mov
push
pop
hlt
gs
loope
int3
pushf
adc
jo
xchg
in
rol
in
jmp
adc
insl
shlb
dec
out
ss
mov
ja
int
loope
jae
xor
jb
loope
xor
lcall
movsl
xor
loope
sub
sbb
insl
loope
inc
nop
and
ret
sbb
adc
jmp
frstor
dec
mov
add
jmp
mov
fbstp
loope
insl
push
test
dec
loope
sbb
outsb
sub
lret
lret
lock
cmpsb
or
stos
mov
jo
sub
ss
inc
nop
push
loope
cmc
xorl
jmp
jo
xchg
das
popa
loope
rcrb
loope
xchg
clc
pop
jns
dec
outsb
cmpl
ss
jae
or
xchg
fucom
sbb
inc
rorb
fcoml
jns
sub
das
loope
mov
pop
dec
mov
mov
out
daa
ds
or
nop
jmp
dec
pop
int3
movsl
scas
and
loope
jl
mov
mov
or
loope
inc
js
fcompl
sti
push
sub
pop
mov
sub
mov
pushf
jecxz
or
fnstenv
loope
fadd
push
test
pusha
push
mov
aam
add
jmp
lock
mov
in
les
cwtl
outsl
cli
rcrb
insb
fwait
sbb
roll
ljmp
sarb
inc
cmp
test
in
pop
fildll
inc
lcall
jnp
ljmp
sbb
mov
pop
out
push
pop
in
roll
in
mov
mov
pop
loope
xor
inc
addr16
loope
lcall
rcr
aam
loopne
xor
loope
cwtl
lret
sub
or
jb
loope
pusha
ss
push
scas
loope
ja
pop
lret
loope
out
rcrl
adc
adc
into
mov
jnp
jmp
fs
push
or
fsubp
cmp
push
enter
scas
mov
jns
loope
outsl
shrl
or
lea
dec
xchg
loope
mov
ds
repnz
jbe
in
cltd
jmp
hlt
adc
xor
adc
imul
shlb
loope
rclb
test
stos
pop
adc
in
in
sti
jnp
jno
jo
bound
imul
sbb
push
add
mov
ficompl
push
loope
dec
adc
loope
push
lds
rolb
sbb
repnz
fistpl
std
in
hlt
loope
stos
loop
shl
mov
daa
push
jmp
sbb
loope
cmpsl
xor
mov
or
xchg
loope
xchg
fisubrs
test
outsb
mov
and
lock
inc
add
mov
loope
pop
lock
push
testb
test
push
loope
mov
inc
loopew
das
clc
dec
xor
xor
out
pop
loope
mov
lock
lret
aam
pop
rorb
push
sub
mov
push
inc
fstps
push
sahf
cs
xor
lahf
xchg
add
mov
adc
sbb
lods
sub
jb
mov
pop
loope
jne
fmuls
sahf
fwait
pop
loope
in
xor
aas
scas
pop
mov
sbb
jecxz
js
mov
xchg
clc
out
xchg
cltd
push
pop
loope
sbb
mov
das
fs
in
jo
ja
xchg
jmp
stos
sbb
inc
adc
sbb
mov
pop
inc
and
push
adc
icebp
loope
dec
sbb
loope
clc
add
push
shlb
sub
jg
mov
mov
cmp
out
in
sub
clc
pop
sub
adc
mov
pop
aaa
cmp
or
jp
inc
in
bnd
xchg
jo
mov
ds
test
int
mov
pop
xor
fsub
push
xchg
imul
inc
and
pop
and
mov
out
mov
sahf
test
adc
dec
loope
in
in
ljmp
push
mov
dec
xchg
cwtl
loope
cmp
push
push
mov
mov
jle
lsl
sti
sahf
or
jo
insl
nop
cmp
or
push
and
pop
pop
sbbb
xchg
add
jecxz
mov
out
or
xor
adc
adc
or
ftst
loope
pop
mov
jle
adc
mov
cwtl
xchg
or
aam
xor
jmp
adc
mov
dec
aad
sbb
mov
addr16
enter
fucompp
idivb
test
push
out
loope
leave
aas
icebp
pop
inc
in
mov
xchg
sub
popf
mul
adc
cld
mov
iret
push
xor
fstps
xchg
in
add
add
ljmp
fisttpll
xchg
in
push
jmp
imul
add
push
test
daa
push
fbstp
loope
arpl
mov
sbbl
iret
add
sti
loope
flds
xor
xor
push
adc
xor
insl
pop
jecxz
loope
aaa
xor
pop
lock
mov
mov
jns
call
ds
jmp
push
mov
mov
lock
loop
and
add
lods
mov
loope
inc
imulb
repz
loope
inc
inc
add
loope
jno
mov
pop
das
or
push
push
pop
sarb
jae
xchg
jmp
inc
nop
in
inc
cmp
xlat
outsl
push
fsub
scas
lods
or
jge
sbbl
je
push
imul
jle
mov
inc
sbb
popa
daa
out
mov
jne
out
ss
lret
cmpsl
cmpsb
adc
sahf
xchg
jo
aaa
mov
lahf
iret
sub
in
pshufw
jae
jge
sbb
pop
mov
leave
stos
sbb
popf
pop
cmpsb
std
incl
imul
das
adc
mov
sbb
fisttpll
xor
jae
cld
imull
xchg
ret
daa
mov
pop
add
xchg
and
jle
jne
lods
mov
enter
pusha
push
imul
scas
dec
jno
inc
cli
jo
adc
shl
divb
mov
icebp
push
cli
push
dec
push
fstps
add
jl
push
loope
jbe
add
rorb
cmpsl
mov
fldl
mov
and
sub
loope
xchg
or
lock
fidivl
and
popw
jae
loope
loopne
jb
push
movsb
fwait
loope
insb
sbb
push
xchg
and
rcr
scas
or
push
clc
out
leave
push
ds
stc
loope
mov
mov
lock
sbb
jmp
sahf
jnp
jmp
xlat
mov
das
enter
cld
mov
sbb
push
pop
push
xchg
adc
imul
sbb
inc
push
scas
xor
push
stc
push
or
scas
cmpsl
mov
push
pop
loope
and
into
sbb
cmp
xor
jae
ljmp
mov
xor
sub
xchg
loop
jne
std
icebp
sbb
cmp
push
cmpsb
push
adc
mov
mov
hlt
sbb
pop
or
sbbb
inc
aam
mov
jae
mov
pop
lahf
and
fwait
inc
cmp
out
xlat
cmp
stc
inc
sbb
mov
in
aad
xchg
xchg
pop
loope
lock
push
or
ret
loope
sarl
add
ja
fcmovnbe
fsubrl
lcall
sub
inc
loope
pop
sbb
inc
or
or
ss
rolb
movsl
neg
lret
and
fmul
sti
loope
adc
std
lods
out
dec
ficoms
mov
movsl
test
or
in
cmpb
mov
cmp
loope
imul
cmp
push
dec
inc
hlt
loope
push
addr16
in
or
jle
push
pop
sub
sbb
xchg
movl
jecxz
leave
scas
js
loope
test
or
adc
jmp
xor
mov
dec
in
pushf
mov
sub
loop
or
int3
and
adc
mov
enter
out
pop
rcr
adc
inc
je
cmpsb
in
test
jo
imul
mov
loope
push
adc
aam
lret
lea
xor
out
ret
test
mov
push
jns
add
sar
out
push
shll
inc
cmp
sub
ljmp
sbb
inc
push
into
outsb
pushl
loope
movsb
aad
sti
xchg
xlat
rol
das
xchg
push
outsb
jmp
test
clc
loope
xor
xlat
fs
idiv
adc
loope
xor
andb
inc
mov
test
loop
cmc
and
testl
adc
pusha
and
loope
add
fdivl
xchg
lock
nop
jne
cmpsb
aam
loope
push
xlat
pop
cmp
inc
loope
pop
jge
sbb
pop
shr
das
outsl
rcll
xor
js
leave
cs
jp
in
in
dec
xchg
pop
ret
in
cmp
or
or
loope
repz
inc
push
dec
movsb
jo
push
jge
enter
idivl
loope
xlat
call
adc
xor
jo
pop
shrb
loop
lahf
inc
scas
loop
leave
inc
das
popa
test
and
add
js
imul
dec
in
cmpsl
in
add
loope
out
movsb
jecxz
sub
lock
push
inc
pop
out
add
imul
lods
push
fidivrs
cmpsb
out
pop
lock
loope
sbb
call
pop
push
movsl
jmp
loope
ja
push
pop
les
fisttps
mov
test
seto
xchg
sub
ja
aas
stos
fs
jecxz
loope
push
or
iret
shr
or
call
into
loope
test
mov
loope
or
stc
dec
pop
dec
loope
mov
dec
arpl
sbb
inc
cltd
stos
mov
repz
push
loope
movl
cwtl
sub
pop
inc
or
sbb
lret
inc
adc
mov
push
mov
rorb
in
fwait
push
loope
andb
loope
add
cli
loope
mull
hlt
push
movsl
call
and
lret
lock
mov
cwtl
insl
pop
and
xor
dec
incl
mov
adc
pop
xchg
in
mov
movsl
fndisi(8087
or
adc
jo
and
dec
inc
loope
mov
lock
xchg
ds
jnp
pop
loope
pop
mov
das
loop
loope
lea
sbb
or
add
cwtl
inc
outsb
hlt
test
loope
cmc
sbb
jecxz
call
loope
in
sahf
xor
add
lock
adc
cwtl
outsb
jae
mov
daa
je
push
js
add
aaa
push
inc
test
fst
push
or
loope
imul
adc
pusha
mov
lods
and
jo
pop
xor
shl
push
leave
jl
in
xor
pop
pop
xchg
insb
jo
jns
inc
cmp
leave
adc
add
in
scas
xchg
addl
fmuls
lock
cli
dec
xchg
shl
in
std
bound
push
scas
insb
inc
dec
mov
pusha
push
into
or
pop
add
xchg
aad
xchg
sub
cmp
loope
mov
sbb
lds
sub
jo
loope
cmp
stos
jle
and
loope
into
mov
adc
sub
inc
mov
and
movhps
push
nop
in
lcall
xchg
movsb
adc
test
jnp
push
mov
das
inc
aaa
inc
jecxz
jmp
and
jb
insl
jmp
push
fs
stos
push
ret
or
pop
jo
leave
mov
lods
jge
lock
mov
mov
std
ljmp
mov
add
xchg
ss
ljmp
pop
idivb
jge
insl
dec
fmuls
adc
outsb
jbe
cld
dec
enter
sub
in
aam
mov
data16
xchg
iret
xlat
mov
sbb
nop
cmp
loope
and
cmp
push
pop
mov
xchg
mov
mov
or
jnp
push
and
mov
loope
lds
dec
inc
data16
add
pop
push
loope
ljmp
loope
xchg
stos
xchg
test
push
or
jbe
mov
loope
testb
jo
in
jg
out
rcr
imul
sbb
and
adc
mov
xor
ja
insl
hlt
xchg
push
cld
loope
and
loope
mov
pusha
mov
lcall
out
fsub
and
call
cmp
or
scas
and
sbb
imul
roll
ds
jl
sahf
aaa
jae
fwait
in
pop
lock
push
sub
add
cmp
test
loop
mov
out
jmp
aam
insb
cmpsl
and
test
push
sahf
and
mov
jmp
jae
imul
loope
lahf
sahf
jnp
mov
loope
pop
inc
mov
pusha
loope
in
aaa
inc
ret
pop
pop
jo
add
pop
add
xor
push
xor
mov
nop
lcall
jmp
repnz
int
lcall
and
push
loope
sbb
into
sbb
aas
outsl
add
lcall
aam
outsb
loope
out
mov
add
int
lcall
jmp
cmp
inc
mov
dec
scas
mov
or
xor
pop
cs
into
orb
mov
jecxz
notb
insb
stos
push
cmp
jge
jb
loope
sbb
jp
mov
outsb
loope
xchg
setno
data16
cmp
add
jo
andl
stos
clc
gs
mov
mov
imul
hlt
test
loope
sub
dec
in
pop
icebp
sub
fidivs
fistps
and
cmp
adc
cmp
fmul
pop
adc
loope
scas
xchg
jb
lock
mov
or
push
cld
xchg
outsl
sub
and
loope
xor
and
gs
inc
or
pop
pop
fstl
and
sub
jmp
je
cmp
dec
push
pop
add
mov
in
sbb
mov
rcrb
adc
lods
mov
inc
fidivs
scas
dec
gs
push
mov
push
push
out
shll
mov
mov
cmp
add
xchg
psubd
lds
out
outsb
test
call
dec
push
pop
pop
pop
cltd
out
mov
repz
loope
pop
daa
pop
xchg
xchg
mov
inc
xchg
add
pop
or
lret
nop
stc
pop
fildl
dec
mov
into
out
push
add
loope
es
xchg
lods
repz
std
pop
data16
call
push
rcrb
pop
loopne
add
repnz
sbb
shrb
push
pop
mov
pop
mov
adc
popf
dec
add
inc
fwait
pop
mov
inc
cli
lods
imul
inc
mov
xor
or
pshufw
or
mov
cmp
pushf
mov
subb
mov
sub
or
pushf
xchg
and
loope
pop
sbb
cmpsl
je
cmpsb
loope
daa
lods
sub
loope
out
sbb
or
mov
gs
sub
jno
shrb
jmp
jmp
loopne
and
mov
lret
sti
add
add
mov
lods
shlb
add
and
push
inc
out
aad
lret
mov
inc
popf
loope
add
loope,pn
pushf
xchg
lods
gs
ss
jns
cltd
sub
shl
jnp
test
leave
aad
mov
sub
push
cmp
loope
int3
add
adcb
loope
imul
aaa
loope
mov
out
jae
cli
aad
test
mov
cmc
xor
repz
mov
inc
cmp
ss
imul
es
add
in
jmp
xchg
add
xor
jg
mov
int3
imul
rcll
loope
fistpl
and
arpl
jmp
ljmp
in
aas
adc
loope
lds
cwtl
xor
gs
mov
hlt
out
in
mov
test
loope
push
cmp
addr16
lock
cmp
adc
call
loop
fcmovnbe
jnp
mov
in
lea
inc
mov
enter
jb
add
int
in
out
inc
movsl
loope
dec
loopne
fwait
and
imul
movsb
push
data16
lock
outsb
push
xor
pop
mov
mov
push
add
jae
ret
mov
aam
lock
add
in
pop
lcall
xchg
fidivs
enter
mov
sub
xchg
adcl
inc
addr16
popf
or
lock
pop
jmp
loop
pushf
lahf
loope
jmp
enter
les
imul
adc
ss
cmp
add
pop
sub
lcall
test
jl
sbb
std
adc
dec
push
mov
jno
into
imul
xchg
jmp
popa
loope
add
jge
dec
incb
jo
insb
mull
cmc
shl
dec
aas
mov
cmp
subb
mov
sbb
pop
fiadds
push
pop
leave
into
loope
inc
inc
test
gs
fs
out
push
fisubl
loope
mov
xchg
or
lock
out
loope
mov
dec
push
and
inc
movsl
and
cmp
dec
je
push
shl
lret
lcall
stos
and
cmp
mov
out
loope
scas
sub
repnz
sbb
int3
jle
dec
xchg
loope
dec
aaa
into
sarb
loope
aam
jge
in
dec
inc
loope
or
sub
push
ja
sub
ss
movsl
shl
or
fidivrs
sti
lahf
in
addr16
jnp
jo
fcomps
xchg
test
add
xor
pop
push
repnz
fucomp
push
mov
jno
xchg
mov
shlb
neg
stos
scas
in
mov
pop
nop
lahf
sub
and
push
push
in
push
fs
jae
loope
sbb
cmpsb
loope
cmp
ret
adc
mov
ds
dec
adc
fimuls
out
pop
icebp
in
xor
adc
arpl
loope
stc
loop
inc
or
dec
jp
in
popf
jmp
fwait
aaa
rcrb
les
pushf
pop
movsb
fldl
xchg
daa
and
adc
out
mov
shl
dec
mov
movl
push
sbb
in
lahf
add
in
daa
test
push
mov
sub
in
roll
jb
cwtl
in
fisttpl
inc
scas
enter
push
arpl
inc
stc
shlb
cmpsl
push
addl
add
xchg
jg
xchg
in
in
fcomps
xorl
sbb
and
inc
loope
xor
addr16
xchg
loope
xchg
pop
inc
shrb
loope
push
cmp
mov
jo
cli
ljmp
push
movsb
andl
je
movq
sahf
inc
loope
iret
int
and
lods
cmpsl
sub
jmp
int
mov
outsl
les
xor
push
xor
fiaddl
js
sub
jmp
cmpsl
loope
aas
insb
jmp
mov
repnz
xlat
mov
adc
mov
cmp
dec
lcall
js
gs
dec
loope
dec
stos
les
in
adcb
loopne
pop
arpl
loope
cmp
add
int
add
cld
dec
push
dec
fs
movsb
jge
mov
popa
fdivl
in
divb
inc
mov
inc
cmp
and
cmp
xchg
adc
aam
mov
popa
test
loope
adc
pop
push
insl
cwtl
mov
lods
in
push
pop
jae
and
mov
faddl
mov
lahf
xchg
cs
icebp
mov
sbb
xchg
repz
aaa
dec
inc
and
insl
xchg
loope
jb
popa
sbb
dec
lea
std
sarl
ja
pop
loope
into
daa
in
fsubrs
or
push
jb
mov
aaa
sbbl
jne
cmc
ljmp
mov
xchg
loope
sahf
faddl
decb
loope
dec
cltd
xchg
data16
std
cmp
fnsave
pop
in
insl
loope
in
add
leave
mov
dec
lods
jne
xor
pop
mov
test
arpl
mov
xchg
and
or
js
jmp
dec
fsub
pop
adc
int3
stc
loope
fsts
movsb
loope
pushf
orb
sub
push
mov
in
adc
mov
push
and
jg
sbb
loope
fidivrl
xor
hlt
dec
push
pop
add
add
scas
adc
and
int3
es
repnz
cmpsl
loope
popa
imul
loope
into
adc
jno
int3
jo
iret
mov
or
sbb
xor
fdivrl
xchg
lret
ret
jne
in
mov
imul
loope
cmc
sub
ds
stos
loope
mov
fwait
andb
sub
sbb
repz
mov
cmp
push
dec
dec
clc
cmp
jnp
add
aad
loope
movb
loope
lods
add
sub
xor
ficoms
test
lds
out
jg
stos
pop
loope
ss
xchg
cmc
enter
sbb
dec
movsl
std
fwait
loope
push
lea
cltd
pop
add
loope
push
mov
adc
jb
adc
add
shll
psllq
insl
jne
ja
in
or
push
fistpll
ret
jnp
loope
aad
inc
and
pusha
loope
inc
fucomi
jmp
mov
std
jno
inc
lea
insb
xchg
es
loope
pop
sbb
out
push
and
scas
adc
aad
rorl
hlt
inc
sbb
push
loope
xor
inc
adc
lret
add
loope
aas
outsb
dec
sbb
test
lds
sub
leave
inc
pop
loope
add
add
sbb
xor
lock
fcomps
aam
lods
lock
jl
mov
add
cmpsb
addr16
stos
pop
push
and
loop
push
and
icebp
loope
adc
stos
dec
lcall
repz
movsl
movlps
loope
push
in
jg
xor
gs
mov
nop
fwait
dec
jae
mov
sub
xchg
inc
loope
js
lods
rorb
out
clc
int
imul
scas
and
cmp
movb
jns
sub
lock
xchg
loope
mov
in
loopne
xchg
icebp
inc
inc
std
push
xadd
sbb
cs
aam
push
out
jo
sbb
repz
cmpl
stos
adc
mov
jmp
dec
fldl
out
lods
out
lock
call
das
pop
mov
mov
xchg
add
popf
nop
xor
push
clc
movsb
cmp
cmp
sti
push
dec
jns
xor
jns
loope
jno
out
mov
push
push
ret
cmpsl
sti
or
mov
inc
stos
jmp
imul
test
cmp
imul
xlat
push
adcb
insl
test
das
dec
loope
cmp
daa
add
std
inc
pop
mov
jno
mov
cmp
cmp
lcallw
push
fs
jnp
arpl
inc
fdivrl
test
sub
loope
adc
add
loope
test
sub
adc
jl
ja
aas
jne
cmp
outsl
adc
sbb
loope
mov
xchg
lds
test
sub
rcrb
loop
js
icebp
pushl
pop
mov
mov
shrb
ds
aas
dec
fidivl
jnp
in
or
mov
add
cmp
jle
loope
loop
cltd
mov
mov
jo
mov
adc
mov
fildl
inc
mov
int
inc
sub
movsl
js
jle
repz
inc
or
shr
popf
jmp
repnz
lods
jne
push
addb
cmp
ss
mov
imul
push
loope
cmp
cwtl
les
jae
sub
fisubrs
lahf
loope
xor
imul
or
ret
je
mov
xchg
jecxz
jmp
and
loope
repz
cmp
mov
xor
mov
sub
inc
push
cmc
jo
sbb
xor
xchg
outsl
mov
sub
leave
es
jmp
xchg
sbb
stos
push
mov
std
loope
mov
pop
and
and
push
sub
push
sbb
mov
enter
adc
lcall
add
inc
and
fbld
imul
dec
mov
pop
xchg
cmp
mov
jne
imul
jae
loope
test
jle
jp
loope
pop
pop
scas
sub
mov
leave
sbb
mov
das
and
loope
xchg
xor
sub
fcompl
pop
aam
leave
loopne
pop
in
mov
ficoml
sbb
imul
pop
inc
pushf
call
xor
lahf
inc
jmp
jmp
loope
imul
cwtl
pop
jl
push
repnz
loopne
and
out
mov
mov
and
cmp
aam
insl
sahf
pop
jle
sub
cld
pop
jmp
pop
sbb
sbb
fnstenv
call
aas
insb
sti
loope
cli
adc
mov
rolb
sbb
iret
sbb
sarb
or
loope
lock
mov
push
sbb
jbe
mov
sbb
xchg
andb
mov
xor
call
xor
jae
jo
xor
push
xchg
jmp
popl
and
loope
and
mov
cmp
aad
out
mov
dec
js
inc
je
jno
add
mov
inc
loopne
jo
inc
push
mov
add
enter
ljmp
sub
sub
xchg
lcall
comiss
mov
insl
mov
adc
inc
sbb
push
arpl
test
ljmp
pop
int3
int
cmp
push
jo
push
adc
out
daa
inc
ss
loope
leave
call
repz
mov
dec
adc
lods
std
pop
shl
sbb
popf
pushf
loope
iret
daa
adc
sbb
loope
rcll
inc
and
push
jmp
lret
sbb
xor
dec
loope
pop
movsb
repz
pusha
popf
movsl
loope
cmp
int
jecxz
pop
loope
and
fstpl
push
std
push
loope
out
push
adc
pop
mov
loope
pop
inc
ja
sub
loope
fs
hlt
cmp
xor
repnz
gs
loope
sbb
out
cs
imul
mov
aam
push
mov
loopne
add
in
push
loope
add
into
imul
outsb
jae
enter
loope
testb
inc
mov
loop
data16
loope
aaa
inc
lahf
pushf
dec
imul
fstpl
mov
add
jp
mov
fidivrs
sub
les
imul
lds
jno
inc
or
loope
sbb
dec
add
push
dec
jg
clc
xchg
dec
jnp
loope
sub
pop
jle
in
add
rcll
out
cs
enter
jmp
popf
nop
pop
jmp
arpl
and
cli
mov
push
fwait
rorl
mov
or
xchg
imul
hlt
dec
mov
cld
enter
out
push
push
inc
movsl
jmp
mov
loope
fcoms
cmc
repz
xchg
push
xchg
mov
fldt
cmp
rclb
cmpsb
dec
jmp
loope
leave
lock
dec
sbb
mov
sbb
adc
lret
xchg
fisttpl
ljmp
sahf
loopne
repnz
loope
add
mov
sti
dec
add
lahf
je
dec
mov
out
cmp
pop
fs
and
jmp
inc
mov
stos
xchg
dec
loope
push
and
mov
stc
sbb
jo
pop
mov
mov
jne
jae
and
mov
rorl
inc
and
sbb
adc
sub
mov
sub
mov
pop
cli
imull
jno
mov
push
mov
ja
ror
lds
and
popf
loope
je
bound
out
mov
out
xor
fdivp
xor
and
jbe
ss
into
add
lods
pop
sub
loope
or
mov
hlt
jno
pop
jecxz
mov
nop
fcmovnbe
mov
loope
jmp
lock
es
mov
pop
bound
adc
fadd
push
ja
mov
jg
fs
push
addb
jmp
loope
xchg
jmp
mov
hlt
data16
loope
scas
outsl
pop
in
sbb
shl
ret
and
xchg
loop
jo,pn
push
sub
cmpsb
mov
outsl
adc
xor
ficoms
divb
add
call
out
push
pop
gs
test
loope
arpl
mov
loope
in
clc
pop
xor
adc
mov
xor
sar
loope
sbb
movsb
jae
jnp
rcrb
arpl
fwait
fidivrs
loop
push
loope
sub
cmp
jo
xchg
mov
aaa
mov
cmp
or
das
cli
jmp
push
inc
and
lock
in
imul
loop
in
dec
shrb
mov
inc
jne
hlt
shl
sbb
add
fstl
dec
xchg
addb
push
mov
fsubrs
loop
add
push
aad
mov
add
sbb
in
cmpsb
das
addr16
test
mov
std
or
rolb
je
inc
fwait
repz
add
out
pop
std
jg
loope
mov
pop
test
or
loop
data16
mov
cmp
repnz
mov
fdivrp
daa
jno
inc
adc
push
out
nop
and
mov
into
lods
inc
xchg
cld
loope
inc
pop
fildl
cltd
sarb
lock
push
bound
dec
stos
jmp
dec
out
xchg
sarb
addl
mov
jae
loope
pusha
clc
mov
mov
test
jecxz
test
inc
incl
jle
jb
and
xor
sub
loop
loope
test
fadds
push
dec
push
stos
out
xchg
jp
loope
repz
push
push
std
lret
jle
in
dec
mov
bnd
out
lock
fxch
out
rcrl
fimull
jl
xchg
sub
jbe
or
lds
sbb
stc
pop
sbb
adc
loope
mov
xor
incl
test
xchg
inc
fstps
cmp
jecxz
push
insb
jecxz
loope
push
inc
popf
nop
xor
jnp
mov
in
add
sbb
daa
jl
sbb
jo
mov
sbb
push
addr16
cmp
dec
rcrb
push
mov
mov
pop
pusha
mov
popa
jno
out
adc
sbb
enter
xchg
sub
push
shrb
pushf
mov
test
dec
sar
leave
xchg
add
and
mov
xor
jp
ficoms
gs
das
dec
or
cmp
sub
mov
lcall
mov
out
mov
loope
jg
movsl
pop
dec
fisttpll
add
dec
call
insl
lock
jmp
adc
data16
and
out
loope
mov
add
sub
push
rcll
int3
xlat
fsubl
xor
pop
jmp
xchg
pop
loope
pop
jb
lods
adc
js
ficoms
and
clc
in
and
roll
aas
add
daa
xor
pop
add
inc
hlt
pop
mov
decl
enter
jmp
dec
and
loop
adc
jge
push
lahf
cmpsb
imul
jg
enter
sub
divl
imul
imulb
jp
cmpsl
inc
loop
pop
imul
mov
mov
mov
sbb
orb
in
loope
inc
mov
mov
xchg
sub
in
jecxz
stos
mov
mov
das
aas
leave
loope
lds
dec
dec
sub
or
in
inc
mov
xchg
add
call
test
ret
pop
xchg
cmp
cltd
dec
loop
adc
movsl
mov
push
push
jle
in
xorb
out
mov
fwait
jo
mov
in
pushf
pop
loope
mov
mov
loope
ret
arpl
or
cs
sbb
fndisi(8087
or
fisttps
push
pop
loope
fiadds
and
movsl
aad
imul
mov
jo
inc
in
push
out
fadds
push
cmp
rcrb
loope
or
lret
sbb
pop
and
rorb
frstor
mov
or
sti
push
lcall
add
pop
ljmp
jg
rcrl
add
aaa
loope
call
mov
lods
mov
arpl
aas
sahf
out
loope
das
mov
pop
shrb
xchg
and
sub
test
pop
push
jl
mov
and
pop
loope
daa
test
hlt
mov
pusha
mov
pop
movsb
mov
mov
cmp
sbb
hlt
mov
xor
mov
push
jae
pop
loope
jnp
test
pop
cs
push
mov
and
pop
dec
insb
mov
mov
pop
repnz
rcll
mov
stos
test
aam
mov
mov
in
adc
pop
dec
push
ret
imull
fdivs
sti
dec
add
mov
ss
incb
mov
pop
push
js
loope
imul
adc
aaa
bound
lret
jl
mov
mov
or
ljmp
andw
push
cli
ss
xchg
jmp
mov
mov
sbb
dec
push
stos
lret
bound
jo
mov
test
lock
push
nop
mov
add
dec
repz
push
pusha
outsb
sub
stc
popf
adc
test
cmp
pop
pop
in
xchg
rclb
mov
seta
sbb
loopne
fcoms
aaa
adcl
mov
xor
and
mov
pushf
sbb
rcrl
ret
mov
and
pop
gs
push
loope
outsb
add
sbb
mov
out
add
loope
cmp
adc
pop
mov
xchg
pop
xchg
mov
pop
data16
mov
loope
jb
mov
cmpsb
in
jmp
xchg
xchg
loope
sub
xchg
shll
loope
adc
ret
dec
push
loope
or
rcrl
cs
jb
inc
fs
dec
in
pop
adc
loope
cmc
rcll
jecxz
loope
fidivl
mov
pop
xchg
sub
repnz
pusha
sahf
mov
mov
jg
das
loope
sbb
adcl
xchg
ret
int3
loope
out
movsb
jmp
rorb
das
mov
xchg
int
fstl
mov
jmp
aam
shll
add
movsl
xchg
jmp
xchg
loope
fdivrs
or
add
fmuls
and
loope
movsb
or
jno
ss
ret
scas
mov
jnp
rol
pushf
out
xor
je
mov
xlat
and
xchg
inc
push
jecxz
enter
push
rcrb
fldenv
in
push
in
sbb
lea
fwait
loope
mov
adc
mov
je
mov
rcr
sub
push
leave
push
shr
icebp
cmp
dec
addr16
cwtl
loopne
jne
outsl
mov
lock
repnz
push
pop
in
js
cmpsb
adc
loop
fimull
ror
fdivr
jnp
sbbl
aaa
jne
push
test
hlt
dec
fsubr
gs
jge
add
push
xor
insb
loop
test
sub
mov
in
push
pop
pop
stos
int3
repnz
xor
mov
shlb
cltd
insb
cmpsl
out
addl
std
push
sbb
inc
lods
push
ljmp
ds
loope
out
fsubrl
outsb
pop
stos
loope
mov
xlat
sti
out
loope
sub
mov
test
lds
loope
xchg
stc
add
push
mov
dec
jo
or
out
cmp
imulb
loope
xor
faddp
jno
loop
adc
jns
push
lock
lret
loope
add
aas
jp
loope
pop
dec
xchg
mov
add
fsubp
sarl
jns
shlb
loope
push
movsb
add
add
ret
sti
jecxz
test
pop
gs
aam
js
mov
mov
sbb
sbb
out
loope
adc
fwait
loope
push
xchg
fidivs
push
cwtl
add
mov
aam
cmp
loope
dec
out
in
jle
loope
notb
push
lods
mov
or
and
mov
mov
mov
jmp
jo
decl
jmp
insl
in
ja
push
xchg
std
iretw
xchg
loope
mov
cmp
loope
movsb
jb
or
xor
clts
loope
mov
outsl
and
sub
mov
out
dec
dec
ret
and
lock
mov
jmp
inc
jge
xor
movsl
mulb
inc
add
loope
packssdw
mov
mov
dec
pop
push
ljmp
loope
and
loope
mov
xchg
test
je
lret
adc
cmc
pop
mul
push
add
loope
mov
mov
outsl
fwait
jmp
jno
or
adc
pop
xor
fistps
ja
sub
test
inc
loope
outsl
in
mov
sarb
es
xchg
stos
lock
jno
test
shrb
mov
es
pop
xchg
pusha
stos
xchg
hlt
and
loope
dec
rorl
jg
xor
pop
jns
lcall
fcoms
push
push
cmc
lret
loop
loope
cmp
sub
loope
ficomps
insl
loope
or
in
sbb
es
push
fcoms
fnstcw
pushl
sub
jo
loope
mov
gs
sarl
aad
adc
cmpsl
mov
jmp
loope
push
xchg
in
push
mov
and
les
addb
cmp
jae
xor
pop
psraw
pop
sub
add
or
pop
insb
sub
jo
cmpsb
or
cmp
jg
push
pop
dec
xor
shrb
movsl
ja
cmc
adc
add
in
test
in
add
xor
fisttpl
pop
pop
loope
movsb
sarb
lock
stos
repz
cmpsb
test
jmp
das
pop
add
loope
push
ret
in
jbe
cwtl
aad
loope
cmp
sub
mov
pop
or
jle
pop
rcrb
ret
push
js
out
push
xchg
add
loope
sbb
fldl
xchg
sti
jo
rorb
out
cld
add
mov
in
outsl
loopne
test
cmp
in
push
push
mull
out
ds
lret
dec
inc
and
add
xor
mov
xchg
cs
loope
jne
add
jo
test
push
mov
ljmp
test
xlat
push
sub
lock
aam
push
xor
xchg
imul
mov
imul
test
mov
cmp
rorl
aaa
rorb
in
lret
pop
sbb
jl
and
jl
ljmp
clc
aam
cmp
xchg
loope
xchg
lret
mov
icebp
aas
mov
out
aad
cld
int3
rcrl
pop
or
je
in
std
push
mov
mov
outsl
loope
xor
dec
or
cmpb
scas
loope
jo
add
cs
loope
jnp
lcall
push
pop
test
jmp
add
inc
or
out
mov
mov
jmp
push
cmp
mov
push
and
movsb
test
loopne
loope
lds
add
mov
add
jae
or
subl
xor
lock
push
loope
cmpb
arpl
fucom
lcall
in
mov
in
adcb
stos
loop
xchg
rorb
mov
jl
jmp
loope
mov
enter
leave
adc
push
out
hlt
mov
sti
cmp
fs
inc
stc
jns
sub
in
sti
xor
xchg
or
in
mov
loope
ror
push
inc
push
loope
pop
mov
enter
jo
repz
in
shr
aam
sbb
enter
jbe
in
inc
loope
push
and
loope
cmp
mov
mov
out
xor
loop
imul
shll
adc
loope
push
lea
loope
dec
stos
sbb
into
xchg
add
addr16
ret
scas
dec
arpl
bound
mov
sub
pop
dec
iret
pop
out
xchg
or
in
fcoml
xchg
sbb
inc
faddl
arpl
cmp
xchg
loop
jle
das
repnz
add
enter
or
clc
jns
mull
pop
shrl
jmp
into
mov
loope
repz
inc
inc
pop
fs
inc
cmpsb
adc
pop
jo
add
out
mov
add
loope
pop
pop
xchg
cmp
xor
adc
pop
adc
sti
inc
mov
pop
loop
repnz
xor
jo
mov
xchg
push
imul
in
mov
push
push
pop
jg
aad
rolb
ljmp
cld
fwait
sbb
loope
pop
and
loope
imul
mov
lcall
sbb
ja
xor
fnstcw
push
loope
mov
fs
push
mov
inc
dec
nop
xchg
sbb
dec
in
push
daa
push
sbb
mov
pop
loope
ret
cmc
pop
out
add
aas
int
fistpl
xor
push
shlb
and
pop
cmc
cmp
add
sbb
sti
cmp
pop
ds
orb
jg
subl
in
cmp
fsubp
lret
mull
ret
dec
jno,pt
clc
in
pop
mov
int
jo
mov
push
dec
scas
loopew
call
push
mov
mov
mov
pop
adc
popf
adcl
loope
rcll
psrld
sub
lds
loope
push
movsb
fisttps
shll
jne
mov
jae
ficompl
push
and
outsl
mov
aaa
scas
mov
mov
cld
loope
movsb
call
test
out
lahf
lock
push
aam
enter
sti
jo
mov
inc
cld
rcll
decb
add
ljmp
jecxz
cmp
lock
pop
daa
jecxz
xlat
and
stc
call
cmp
loope
pop
movsb
in
enter
sub
jnp
add
loop
xor
repz
loope
push
dec
adc
and
rcrl
and
loope
xchg
mov
jle
inc
loope
or
jp
jns
pop
add
sub
icebp
out
or
xchg
mov
ja
shlb
mov
arpl
outsl
imul
push
jo
jp
stos
in
adc
push
iret
popf
aam
imul
xlat
in
lds
push
loope
fs
sahf
add
shlb
and
xchg
loope
mov
dec
fimuls
cmp
inc
cmc
sbb
in
popa
icebp
mov
sahf
jmp
imul
push
and
mov
pop
imul
loope
les
adc
mov
out
mov
jmp
mov
in
pop
lds
loope
or
and
push
adc
loope
sarl
sahf
xchg
mov
and
imul
pop
int3
shl
loop
call
test
adc
mov
aaa
jno
std
lcall
test
adc
and
leave
fwait
cs
popa
loope
and
shrb
stc
jecxz
lock
hlt
add
das
or
imul
fucomp
push
shlb
cltd
fwait
out
js
int3
loope
sub
or
enter
adc
lret
adcb
scas
or
dec
pop
mov
lock
xor
xor
aad
cwtl
dec
out
sub
mov
cltd
test
je
jmp
dec
mov
mov
stos
mov
or
loope
mov
pop
mov
sti
xor
das
mov
mov
lods
arpl
fnstsw
loope
cltd
sahf
aad
pop
sub
rcrl
mov
pop
std
inc
leave
cmp
enter
sbb
and
loopew
inc
push
xorl
dec
pusha
pushf
pop
push
ret
push
jmp
jne
xor
cmp
loope
mov
push
add
std
shlb
xchg
jmp
pop
in
imul
push
scas
lock
lret
mov
insl
out
sti
test
xorb
loope
adc
popa
movsb
mov
inc
mov
imul
xor
mov
idivb
xchg
jns
loope
sub
stos
xchg
xor
movsl
jo
repnz
outsb
in
push
sti
cli
loope
sbb
cld
neg
lea
sbb
pushf
xchg
call
adc
fsub
icebp
jg
mov
scas
popf
jns
pop
push
call
jnp
sbb
loope
sarb
xchg
aaa
push
jle
loope
bnd
stos
mov
loope
ret
mov
sub
jnp
sti
mov
subl
sub
push
cmpb
es
data16
loope
lds
ret
ficoml
ljmp
pop
push
mov
out
mov
jecxz
rcrb
loop
jnp
enter
loope
cs
xchg
frstor
jno
inc
cmpb
out
push
adc
lret
decb
stos
rcl
es
mov
mov
call
jecxz
ss
mov
or
das
nop
sub
loope
sub
jno
inc
xchg
jo
roll
in
and
scas
mov
loop
cmpl
mov
dec
pop
outsb
jmp
mov
mov
clc
loop
adcb
xorl
mov
dec
pop
js
mov
dec
adc
movsb
popa
cmpsb
or
dec
hlt
push
movsl
jne
pop
lock
inc
mov
loope
pop
sbb
insb
lret
adc
add
mov
jmp
xor
jae
push
out
inc
nop
add
add
les
ja
mov
mov
in
aaa
addr16
mov
jo
mov
push
dec
ljmp
sub
jo
int3
and
loop
test
add
out
sub
lret
cltd
data16
loope
lods
lods
iret
imul
mov
jmp
push
loope
adc
add
pop
pop
loope
test
add
push
adc
rcrl
or
pop
loope
cltd
cld
cmp
inc
pop
loope
sub
or
movsb
pop
jno
arpl
loope
lods
aad
mov
cmpsl
fdiv
ret
push
rcr
push
fsub
int
add
std
rorb
ja
jne
loope
adc
inc
lds
hlt
loop
leave
inc
mov
ret
jmp
push
gs
mov
int
mov
mov
pop
addr16
cmp
push
in
cld
repnz
leave
jbe
push
mov
imul
imul
loope
stc
xor
loope
insb
jno
mov
mov
jae
loop
adc
lahf
cmpsl
jmp
mov
and
sti
es
ds
roll
dec
enter
xchg
jbe
movsb
or
rcrb
cmp
push
jmp
jmp
mov
mov
mov
xchg
ret
push
dec
xchg
dec
xor
add
loop
inc
xor
popf
inc
mov
jno
scas
mov
out
mov
bound
mov
loope
push
aaa
jecxz
pop
cs
pusha
ret
cmp
in
jo
enter
arpl
cmpsl
test
scas
sub
mov
pushl
loope
dec
mov
push
adcb
loope
jb
rcrl
imul
push
pop
and
and
gs
xor
iret
enter
jl
loope,pn
shlb
leave
inc
test
fsubp
lahf
jp
and
bound
xor
and
hlt
xorl
fdivrs
xlat
dec
pop
sti
jne
loope
stc
es
inc
xchg
loope
lea
xlat
mov
add
jns
push
shrb
iret
lahf
scas
arpl
xchg
stos
push
stos
or
mov
repz
repnz
fiaddl
jne
fsubrs
pop
dec
mov
pop
loope
rcrb
add
sbb
das
pushf
mov
hlt
cmp
lcall
xchg
scas
les
and
jmp
add
fistl
adc
cmp
or
sbb
into
loope
jp
mov
pop
jnp
dec
mov
das
sub
lock
jmp
cli
cmpsb
popf
clc
loope
inc
push
jae
jmp
mov
nop
jb
adc
push
into
sbb
xchg
clc
inc
xor
fiadds
addr16
ja
data16
dec
cmp
add
mov
jle
daa
sub
dec
add
xor
call
das
jb
imul
mov
leave
inc
loope
nop
jnp
xor
in
dec
mov
push
rclb
das
insl
or
mov
in
and
jo
sub
fidivrs
mov
loope
inc
cmc
cltd
les
nop
adc
enter
out
mov
imul
pushf
subl
and
ljmp
sti
mov
cwtl
call
loope
in
ret
mov
mov
mov
loope
std
sbb
ljmp
mov
xor
and
popa
in
in
inc
aaa
data16
xlat
leave
loope
out
dec
lret
repnz
sbb
test
adc
out
cmpsl
ss
pop
loope
repz
movsb
scas
push
or
insl
outsl
jle
mov
in
std
mov
push
fwait
pop
sbbl
or
add
outsl
cwtl
cmp
pop
iret
pusha
jmp
add
mov
jmp
inc
pop
loope
pop
xor
loope
pop
push
mov
pushf
imulb
dec
loope
or
pop
cwtl
ds
sub
jo
jecxz
lret
sbbl
push
jns
or
dec
pop
jp
mov
ljmp
and
loope
cltd
add
xchg
shlb
jbe
daa
aaa
mov
mov
and
xor
dec
pop
bound
and
pop
fwait
adc
mov
jno
mov
push
xlat
decb
inc
mov
jne
out
cmp
and
push
mov
testb
jae
push
jg
icebp
mov
adcl
es
cmp
sub
jnp
fisubrs
loope
sbb
or
pop
adc
push
push
in
outsb
dec
xchg
xchg
jmp
stos
mov
out
mov
fisubs
jge
xorl
push
jecxz
icebp
shrl
mov
mov
adc
push
aad
jp
clc
mov
lret
inc
fs
loope
mov
add
roll
and
inc
das
loope
add
roll
loope
into
jg
incb
jo
repnz
xor
inc
loop
pop
fs
sub
inc
jle
mov
sbb
mov
notb
shl
nop
mov
lods
cmpsl
cmc
push
ret
aam
or
dec
mov
enter
data16
jo
inc
sbb
loope
mov
cmp
repnz
out
aad
loope
bound
insb
sbb
mov
mov
sub
lods
adc
adc
loope
jae
aaa
xor
adc
mov
or
pop
loope
jmp
sub
adc
dec
iret
xchg
gs
inc
loope
mov
pop
mov
mov
fmuls
mov
xchg
loop
dec
jecxz
mov
inc
add
push
sbb
add
loope
cs
out
out
loope
insl
pusha
filds
test
cmpsb
rcrl
add
mov
repnz
ret
lods
movsl
movsb
loope
pushf
fcomip
daa
in
mov
ficomps
js
mov
aam
inc
loope
bound
loope
sarl
loope
fisubrl
jmp
loope
cmpsb
and
loope
push
jmp
fnstsw
dec
sub
mov
cmp
ljmp
mov
lock
neg
mov
jmp
mov
shr
scas
pop
lods
std
ret
adc
mov
push
loope
or
inc
jne
inc
ja
dec
inc
lea
clc
icebp
mov
stc
in
lods
faddl
mov
xor
xor
loope
out
cld
mov
and
jmp
cmp
mov
in
xor
xor
mov
outsl
jge
daa
inc
stc
lcall
jmp
jnp
mov
jmp
push
jl
addb
mov
addr16
jecxz
icebp
hlt
cmp
je
jbe
sbb
inc
iret
xchg
loope
lret
or
fldcw
loope
neg
rorb
pop
jno
xor
rolb
outsb
mov
pop
or
ret
lock
xchg
loope
fdivrs
shl
push
stc
incl
jo
pop
cmp
fucom
push
pop
cmpsl
loope
push
aas
cli
inc
pop
adc
mov
or
sbb
jmp
xchg
scas
loope
sbb
adc
rcr
cmpsl
adc
or
jge
dec
popa
xor
mov
jl
into
or
sbb
push
xor
bound
pusha
add
pop
xchg
mov
pop
xchg
leave
call
cmp
and
jmp
mov
loope
les
in
loope
xchg
cmpsl
std
mov
or
fs
xchg
test
ret
shl
mov
lods
js
std
pop
inc
loopne
dec
cmp
mov
mov
repz
jmp
xor
out
out
xor
scas
jmp
std
gs
dec
and
enter
mov
jg
test
test
push
sbb
mov
pop
mov
mov
and
fnsave
out
in
xorl
je
fidivrs
shl
shl
adc
clc
lock
cmp
sub
mov
insb
lock
or
cli
aad
addl
mov
adc
loope
subb
loope
sar
jl
xor
loope
inc
lcall
xchg
push
inc
pop
dec
lret
test
daa
and
or
pop
add
jmp
jmp
popl
leave
lahf
call
mov
pop
jns
jo
test
imul
inc
sub
pop
ss
mov
jno
sahf
loope,pt
or
stos
pop
xchg
lock
dec
sbb
out
fiaddl
jmp
jp
les
dec
and
or
mov
into
in
or
fistps
sub
and
jae
jne
cmp
js
sbb
in
xchg
sbb
inc
add
add
out
mov
jo
mov
jecxz
push
in
leave
mov
jns
fsts
add
or
or
test
dec
enter
loop
in
sbb
add
push
int
fs
mov
cmp
jb
bound
les
popa
mov
jno
push
jmp
jmp
in
loope
pusha
xchg
add
loope
mov
adc
pop
shlb
inc
loope
jno
movsl
stos
mov
jo
jl
fistpl
icebp
in
dec
aas
dec
push
loope
fidivl
popf
cmp
fwait
outsb
sarb
dec
pushf
in
inc
out
insl
mov
in
iret
dec
divl
xchg
xor
gs
mov
into
push
pop
les
and
mov
mov
mov
jg
arpl
jecxz
or
lods
loope
adc
pop
jb
jno
cmpl
xchg
loope
inc
inc
jle
mov
pop
sub
jo
push
cmp
lret
xor
push
test
dec
fnsave
test
inc
mov
xor
xchg
sbb
mov
dec
mov
jne
cmp
dec
dec
out
mov
lret
pushf
jo
push
mov
movsl
jecxz
repnz
aam
push
fdivr
in
leave
and
add
fabs
mulb
mov
jmp
jle
sahf
movsb
shlb
inc
fidivrs
add
push
inc
dec
lcall
pop
add
pop
imul
inc
stos
sarb
add
and
adcb
nop
mov
je
sub
push
dec
mov
insl
aas
push
popa
loop
loope
jns
push
cmp
xchg
cs
data16
js
inc
out
jo
adc
mulb
sbb
lcall
mov
xchg
sub
adc
cltd
mov
int
loope
jae
push
ret
data16
loope
lods
mov
fmulp
xor
movsb
jg
mov
and
loope
ret
or
adc
loope
daa
outsb
mov
loope
pop
icebp
gs
mov
inc
cmc
mov
scas
sbb
dec
movsl
loope
mov
test
jmp
xchg
loope
adc
loope
add
add
sbb
popf
xchg
nop
dec
sub
jns
sbb
loope
in
push
xchg
and
ds
das
or
je
push
jbe
loope
test
inc
add
shlb
mov
mov
loope
jne
hlt
inc
mov
push
loope
xor
cs
mov
shlb
leave
data16
jne
mull
scas
add
fwait
push
repz
inc
mov
dec
lods
sbb
ja
icebp
sbb
sbb
add
pop
loope
mov
mov
scas
add
fdivl
jo
jp
jbe
loopne
outsb
sub
mov
mov
and
mov
cmpsl
in
faddp
sub
sub
and
je
cmpsb
dec
rcrb
insb
xchg
adc
out
andb
inc
ljmp
fsubp
adc
cmp
shr
xchg
pop
xchg
lret
nop
rcrb
jge
mov
push
mov
jae
pop
imul
pop
out
sbbl
repz
out
mov
movl
int3
in
in
inc
pop
movsl
xor
xchg
xor
cmpsl
fsubp
or
mov
in
insl
push
mul
xor
rolb
dec
scas
mov
pop
push
sub
out
or
in
push
sbb
pushf
cmp
dec
idiv
pop
nop
shl
xlat
mov
adc
or
sbb
jmp
jb
xor
aas
stos
mov
xchg
add
in
int
sub
push
jmp
lret
pop
loope
ljmp
cmpsb
enter
mov
mov
loop
xor
fwait
inc
mov
or
push
add
adcb
mov
in
sub
jo
cmc
cmpsb
sbb
test
adc
ljmp
xchg
mov
stc
loope
adc
andps
cli
aam
mov
movb
rcrl
adc
pushl
mov
xchg
inc
aam
inc
mov
aam
xchg
mov
test
pop
imull
lcall
movsl
mov
push
int3
jl
std
mov
pop
add
adc
loope
or
dec
pop
inc
loope
mov
jae
loopne
subb
rcr
cmp
out
arpl
add
movsl
lock
ljmp
loope
test
lods
sub
leave
mov
jb
pop
xchg
outsb
push
mov
mov
arpl
adc
gs
mov
or
lidtl
sbb
sub
std
ss
inc
sub
or
aad
adc
inc
mov
out
adc
lahf
loop
mov
cmp
sbb
adc
js
lahf
cmp
and
jns
add
cmpsl
xor
adc
mul
bound
cs
pop
scas
cltd
jg
push
and
mov
int3
push
dec
adc
pop
sub
cli
mov
pop
jne
rcrl
mov
loope
push
jmp
out
mov
out
mov
and
loope
sbbb
out
adc
loope
add
mov
rclb
out
in
sahf
out
mov
iret
xchg
inc
testl
dec
mov
add
pop
adc
daa
ret
mov
sbb
sarb
and
insb
jg
add
pop
cltd
das
push
cmp
cmp
sub
ss
pusha
add
sub
rorb
fisubl
mov
imul
int
mov
dec
push
mov
adc
pop
loop
add
jmp
pusha
sub
and
mov
mov
icebp
loope
xchg
out
cmp
mov
mov
dec
jmp
loope
aas
mov
push
loope
inc
jmp
aaa
xchg
cmp
int3
add
test
je
pop
iret
lahf
xorb
mov
cmp
roll
jmp
loope
fucom
cmc
jo
mov
in
fs
test
inc
cmc
or
cltd
in
loope
out
dec
out
scas
sub
xchg
push
in
scas
xor
xchg
enter
mov
xor
jae
in
stos
fwait
xor
out
lcall
ljmp
inc
adc
loope
push
fisubl
in
pop
int3
mov
lock
pop
dec
or
cmp
mov
cs
std
lods
jno
jne
pop
pusha
in
idiv
js
out
loope
inc
dec
imulb
jle
xchg
lock
imul
inc
cld
loope
fildll
test
or
sbb
sub
dec
cmp
mov
mov
loope
push
sbb
sbb
loope
jle
add
loope
lahf
xchg
repnz
fidivl
dec
popa
mov
ss
mov
pop
mov
xchg
mov
jmp
icebp
mov
mov
xchg
mov
pop
mov
jmp
and
pop
mov
pop
lock
movsb
inc
call
loope
dec
rep
jl
das
and
dec
xor
in
sbb
push
rorb
jge
xlat
scas
sub
imul
jle
lea
mov
shlb
inc
fs
add
cmp
sub
daa
das
mov
xchg
add
jmp
stc
adc
jo
dec
adc
ret
ljmp
loope
lret
inc
xchg
pop
scas
loope
lds
pop
jns
mov
sbbb
dec
loope
insl
mov
cwtl
scas
movsb
mov
and
paddw
jmp
sub
mov
inc
in
sub
arpl
loope
rcr
mov
cmpl
mov
push
ror
mov
cmpsb
aaa
dec
bound
scas
loope
and
aas
push
mov
std
lret
mov
mov
loope
add
shl
fwait
stos
xchg
loopew
mov
jo
dec
mov
mov
jmp
or
shlb
in
ss
loope
adc
cwtl
mov
xchg
xor
pop
in
dec
loope
add
loope
xchg
xchg
filds
sbb
add
push
ljmp
loope
adc
leave
iret
fs
loope
sub
inc
xchg
loope
enter
mov
add
cvtps2pi
jmp
cmp
outsl
adc
sub
xor
ss
pop
cli
jb
mov
shlb
or
mov
xor
push
imul
outsb
xchg
xor
mov
push
loope
sub
sbb
jns
loope
inc
inc
rcl
dec
sti
jo
scas
push
dec
ss
jge
inc
loope
cmp
mov
pushf
call
inc
mov
push
loope
mov
hlt
cmpsb
loope
iret
xor
fmuls
xchg
and
inc
push
in
les
adc
mov
mov
sahf
rcl
jl
iret
pop
xchg
push
jecxz
inc
loope
pop
jge
fwait
in
sub
test
cli
sahf
and
mov
shlb
sub
jle
and
repz
in
push
xorl
lock
fmuls
xor
in
loope
xor
jmp
sahf
stos
adc
popa
add
xor
mov
mov
pop
hlt
mov
ljmp
test
push
or
out
negb
jl
sbb
fldcw
loope
lods
mov
add
mov
sarb
pop
add
push
or
in
and
rcr
std
loope
inc
test
nop
loope
sbb
pop
das
leave
and
mull
push
pop
dec
lock
sbb
adc
sbb
mov
cmc
mov
scas
mov
pop
ret
jo
pop
inc
loop
ljmp
int3
mov
xchg
or
push
mov
sbb
or
and
jo
sub
pop
mov
iret
and
fcmovnbe
repnz
sbb
inc
lret
push
pop
aad
adc
aaa
push
adc
stos
in
push
jecxz
dec
add
loop
test
sbb
fstl
mov
mov
fldenv
clc
push
fst
test
xor
or
ljmp
or
mov
xor
mov
pop
jmp
jae
bound
loope
jle
adc
mov
fwait
test
cmp
mov
shrb
pop
loope
nop
inc
inc
aas
int3
and
add
push
or
add
cmp
les
scas
out
ljmp
leave
andl
stos
out
mov
call
loope
xor
fld
xor
dec
out
mov
lea
in
loope
and
jo
add
test
pop
jmp
test
in
stos
gs
sub
xchg
lods
sub
out
loope
xor
or
mov
loope
fs
adc
std
in
in
gs
adc
lcall
mov
lret
jp
pushf
and
pop
loope
sbb
mov
loope
in
stc
mov
mov
add
jo
add
rep
lahf
bound
stos
xchg
sbb
in
imull
jmp
mov
mov
xorl
xor
aad
mov
and
imul
loope
lret
das
jle
iret
sbb
dec
mov
mov
xchg
in
mov
andb
inc
mov
cli
xchg
adc
leave
shlb
jl
loopne
inc
xchg
push
lock
cmpsl
jecxz
sbb
push
xor
loope
xchg
push
lods
je
loope
xlat
mov
aaa
loope
adc
int
scas
inc
loope
sti
outsl
lock
jmp
repz
and
or
fs
cmp
lds
xchg
je
fimull
jmp
lcall
lods
mov
data16
clc
loope
xchg
or
shr
das
mov
mov
cltd
xchg
push
push
and
popa
loope
out
test
jmp
bound
repz
inc
aam
ljmp
and
cmpsl
mov
pop
cmp
and
push
sbb
fstpt
aam
or
rorb
scas
jle
jae
and
data16
in
and
lahf
pop
cmc
aam
adc
jbe
xor
js
mov
out
test
mov
adc
loope
or
add
mov
out
out
mov
out
inc
flds
outsb
mov
mov
jbe
icebp
arpl
jo
inc
rorl
sub
out
push
jmp
and
jo
mov
rcll
xorl
in
mov
mov
popa
aaa
in
movsb
loope
push
jno
mov
punpcklbw
test
call
shlb
fsubp
sbb
jl
jle
repz
outsb
sub
add
add
call
sub
cmc
cli
or
jae
shl
shl
std
gs
cmp
sbb
in
adc
mov
jmp
sbb
jmp
loope
fdivrs
mov
loop
inc
in
loope
jge
pop
mov
cmp
loope
cmpsl
jg
clc
jle
inc
xor
adc
cmp
sbb
std
fimuls
imul
loopne
pop
mov
ret
mov
inc
fidivrs
cltd
arpl
movsl
sub
cmp
or
or
inc
xlat
outsb
ss
gs
int
mov
outsb
movsb
or
loope
push
rorl
add
dec
or
mov
mov
mov
outsb
mov
sbb
popl
shlb
adc
in
int
jb
loope
xor
mov
dec
mov
movsb
pop
pop
inc
jo
rcrl
aas
mov
in
cs
jmp
sar
loope
in
test
add
in
data16
push
pop
in
sbb
or
inc
mov
aam
push
pop
or
lret
lcall
loope
add
sub
cmpl
push
cltd
jmp
dec
add
insl
stos
pop
inc
daa
xor
loope
iret
sbbl
push
mov
out
nop
adc
shlb
int3
xlat
popa
push
sbb
cmp
imul
adc
ret
push
jb
addr16
cmpsb
andb
adc
adc
push
dec
inc
push
shl
fstpl
xor
xchg
mov
arpl
mov
cmc
out
rorb
loop
and
xor
adc
stc
xor
mov
dec
daa
andb
inc
test
ficompl
lods
mov
shlb
lahf
push
jge
shll
push
lock
sub
inc
lret
rorb
popf
ja
pop
cwtl
push
jmp
fistps
mov
int
mov
es
cmp
inc
push
in
add
jle
mov
dec
lret
sub
loope
cmp
cmp
jmp
pslld
sub
xchg
popa
rorb
incb
andl
imul
sar
loop
in
mov
add
inc
cmp
shlb
fstpl
lock
outsl
xor
adc
in
lock
int
xorb
jmp
loope
xchg
mov
gs
loope
jnp
insl
outsb
dec
repnz
pop
outsl
sub
fiadds
cmpsb
loope
push
dec
aas
cmp
test
xchg
jae
jp
xchg
jge
jle
enter
xchg
add
rorb
and
dec
ljmp
mov
jge
sbb
cs
jmp
fs
lea
sbb
out
mov
arpl
outsb
dec
cmpsl
loope
inc
jecxz
jnp
lea
pop
loope
push
dec
into
push
loope
fcompl
add
mov
scas
mov
nop
mov
es
icebp
loope
imul
cmpsb
pop
sub
jmp
xor
js
add
in
mov
cmc
daa
mov
add
cmpsb
call
in
pop
sub
movsl
loope
inc
xchg
hlt
fcompl
repnz
adcb
int3
out
dec
add
cwtl
loope
loop
push
adc
mov
sbb
loope
cmp
sbb
fstpt
or
mov
lods
clc
and
hlt
imul
sarl
inc
xchg
ret
out
fstp
out
mov
shlb
adc
in
xchg
cltd
fabs
orl
loope
push
out
xor
and
jmp
loope
in
dec
and
std
popf
loope
sbb
dec
insl
push
pop
loope
push
xor
mov
sbb
scas
mov
jo
push
sbb
jge
loopne
ljmp
dec
fldenv
std
mov
insb
pop
in
fwait
cs
xor
pushf
repz
and
out
cmp
aaa
mov
in
repz
das
movl
in
vminpd
loope
leave
sti
mov
pop
mov
pop
mov
sahf
push
xchg
sub
xlat
insb
push
jns
loope
mov
add
into
xor
fwait
loope
call
mov
fstl
scas
mov
cmpsl
std
test
mov
and
push
hlt
enter
test
notb
in
lret
pop
mov
adc
adc
mov
push
fistpll
fidivrl
repz
sub
cmp
loope
add
and
rolb
xor
shrb
jecxz
inc
sub
ljmp
fsubrs
ret
mov
cmp
clc
out
shrb
mov
jmp
loopne
jmp
test
jmp
in
filds
loope
in
mov
loope
adc
pop
sbb
and
add
xor
dec
push
daa
test
jecxz
adc
mov
mov
xchg
jp
icebp
xor
xchg
cmp
xor
popw
repnz
out
scas
push
add
sub
or
out
iret
test
loope
ss
mov
sarl
jl
mov
xorl
cmpl
popa
adc
loope
push
fisttpl
loope
cmp
pushf
adc
loop
icebp
pop
js
loope
ljmp
add
fldenv
or
push
inc
notl
test
shlb
push
fmul
shl
or
pop
aad
scas
adc
shlb
jle
jmp
cmp
push
data16
jo
inc
lahf
rolb
push
dec
and
repz
sahf
mov
movsb
jo
gs
mov
out
mov
sbb
jbe
test
pop
cmp
or
hlt
add
sub
jo
mov
loop
shrl
mov
loope
jo
outsb
mov
clc
out
stos
in
mov
cs
ljmp
lods
jo
xchg
test
testb
jmp
scas
nop
dec
pusha
stos
rorl
jno,pt
loope
adc
mov
add
mov
add
incl
inc
xchg
loop
jge
inc
loope
and
pop
sbb
sbb
ret
pop
mov
movsb
push
xor
dec
mov
loope
xor
ret
cmpb
dec
add
shrl
lea
jle,pn
loope
nop
outsl
inc
ror
loope
das
in
jbe
inc
inc
push
jo
test
aam
in
scas
mov
xor
push
lret
stos
jmp
pop
fcoms
test
dec
push
inc
sub
ss
mov
stc
jne
shl
sbb
mov
push
loope
rorb
call
push
sbb
inc
imul
inc
dec
loope
dec
adc
add
pop
rolb
jmp
cs
sbb
hlt
jnp
out
inc
ds
add
mov
aad
jmp
loope
dec
pop
inc
add
movsb
jg
mov
push
jle
cmp
rcrb
imul
jae
mov
jb,pt
cmp
mov
jmp
cmp
popa
mov
xor
in
hlt
add
xchg
out
push
sbb
fisubl
in
loope
in
push
loope
jnp
cmp
aad
mov
scas
xchg
stc
stos
sarb
jp
loope
scas
and
sub
flds
nop
shl
in
call
loope
sbb
pop
add
scas
std
in
mov
jl
mov
loope
clc
mov
or
add
cmp
loope
adc
jecxz
pop
and
pop
inc
out
repz
jp
fmul
in
push
mov
and
test
cmp
mov
fcomps
mov
pop
lret
inc
in
aas
orl
jmp
cmp
pop
cwtl
xor
jmp
call
adc
xorl
cmp
icebp
xchg
loope
fadd
cmp
jno
loope
sbb
mov
loope
mov
shrl
in
roll
call
cld
fadds
ss
pop
in
scas
insb
ja
loope
xor
push
jae
adc
mov
mov
hlt
add
loope
mov
push
aas
jnp
loope
in
or
outsb
imul
cltd
cmp
sub
aam
jb
loopne
shll
mov
xchg
loope
stos
bound
loope
rcll
loopne
pop
jle
mov
xchg
js
aam
xchg
sub
shlb
jmp
and
idiv
scas
pop
pop
ds
test
jmp
push
pop
test
lock
mov
inc
mov
outsb
or
test
push
loop
ljmp
lds
sahf
out
cmc
add
loope
push
sbb
insb
inc
aad
rclb
sub
pop
test
pop
inc
loope
fsubr
jmp
mov
movsl
imul
rol
negb
aas
mov
dec
cmp
adcb
loope
test
sbb
and
sarb
sarl
jns
sbb
iret
clc
sub
mov
mov
loop
arpl
ss
lahf
or
in
loope
mov
mov
loope
mov
pop
dec
add
adc
pop
mov
repz
adc
push
lock
ss
lea
cmp
or
mov
mov
jae
adc
cmpb
jecxz
pop
fisttps
in
sub
push
pop
add
jl
dec
pop
loopne
push
jb
dec
jns
loope
test
and
cmp
cmp
push
loope
aaa
or
mov
inc
or
cmp
inc
sbbl
fbld
loope
mov
mov
push
xchg
clc
loope
testl
das
pop
cwtl
gs
mov
mov
in
dec
mov
stos
dec
out
lret
adc
std
fucomp
jmp
cmp
je
dec
mov
pop
daa
xor
nop
lea
pop
xchg
jmp
loope
aam
xchg
adc
ljmp
aaa
sarb
loope
mov
mov
dec
xchg
faddl
lock
ds
test
test
loopne
pop
cmp
loope
jmp
and
rorb
mov
movsb
daa
leave
or
jnp
std
mov
sub
call
into
cmp
outsl
jge
int
xor
add
push
jae
push
push
or
inc
popl
popa
ss
enter
in
xchg
cmp
cs
lea
jb
loope
movsb
mov
jmp
sbb
loope
sub
cmp
jae
push
pop
je
mov
cmp
mov
add
xchg
test
lock
fstpl
icebp
mov
out
xchg
jb
mov
fimull
xchg
loope
add
mov
addb
loope
sbb
insl
out
int3
js
mov
push
out
pushf
loope
nop
jmp
sbb
mov
jns
add
cltd
loope
negl
or
jb
and
pop
push
sub
inc
and
add
mov
xchg
scas
loope
test
push
and
dec
loope
push
lods
mov
xchg
in
call
aad
mov
loope
add
push
rolb
out
stc
arpl
mov
mov
rorl
mov
xchg
jg
stos
call
jno
mov
jns,pt
pop
je
lret
sub
stos
test
mov
loope
mov
push
stc
std
jp
loope
and
pop
xor
inc
js
mov
lahf
dec
pusha
sahf
add
in
jmp
loope
xchg
xchg
inc
fldcw
loope
cmp
cmp
pop
pop
add
mov
mov
pavgw
dec
sahf
dec
int
pop
cmpsb
arpl
loope
xchg
push
mov
lock
call
fdivl
loope
add
rep
loope
mov
mov
enter
call
adc
xor
push
std
adc
fs
loope
jno
ss
xor
loope
ja
bound
add
mov
sar
loop
inc
and
cmpsl
in
mov
loope
loopne
out
cmp
cmp
scas
sub
sbb
in
loope
inc
and
lods
loope
jb
mov
pusha
cmp
loope
adc
test
inc
push
adc
and
rorb
imul
sbb
enter
shll
rolb
aaa
adc
imul
int3
in
in
insl
outsl
ret
daa
dec
loopne
repz
fstps
inc
jmp
sbb
xor
jp
loope
es
sub
shrb
out
stos
or
mov
cmp
loope
in
mov
test
add
or
rorl
xlat
push
pop
dec
lcall
lods
lret
daa
add
add
movsl
or
adc
fdivrl
adcl
rorb
jae
stc
fabs
xchg
fsubrs
psubsw
js
loope
int
rcll
fmulp
loope
popf
stos
leave
jae
repz
loope
iret
ds
cmp
shl
fwait
cmp
lods
add
adc
mov
sub
loope
add
xor
mov
lcall
fnstcw
xchg
aad
jecxz
cmpsl
xor
ja
aaa
lret
into
sub
mov
cmp
push
popf
shl
gs
movsb
in
add
loope
xchg
and
loope
insb
lds
idivl
dec
loope
adc
shlb
lahf
or
pop
cmc
lock
sub
int3
in
lretw
inc
mov
pop
sub
add
out
call
cmc
sbb
loope
push
in
inc
pop
inc
mov
jle
or
loope
call
jns
mov
add
out
fsubl
in
jo
stos
sub
jle
sbb
loope
push
sbb
into
xor
loope
mov
pop
lahf
sub
cmp
jne
xlat
ljmp
ret
xor
loope
insb
rorb
mov
mov
outsb
jmp
push
mov
fwait
sahf
repz
loope
jle
push
sub
comiss
mov
sub
or
sbb
mov
mov
jp
mov
push
aas
arpl
es
sahf
dec
xchg
mov
movsb
fimuls
fs
mov
in
mov
repz
sub
jge
pop
add
mov
pop
add
mov
scas
call
repnz
xchg
mov
adc
push
in
pop
movsl
or
inc
aam
and
fistpl
test
push
or
mov
loope
jo
push
adc
add
pop
pop
mov
mov
mov
insb
xchg
and
pop
xlat
jo
stos
mov
pushf
mov
shl
fldt
testl
fcompl
test
jg
jmp
mov
xor
out
cltd
push
loop
and
jmp
fdivrs
xchg
add
scas
test
int3
in
es
imul
cmpl
movsl
mov
nop
sub
xor
sbb
pop
test
sbb
mov
cmc
mul
mov
dec
cli
push
sub
inc
and
popf
out
gs
add
pushf
mov
aaa
loope
jne
into
ljmp
add
sub
test
sbb
les
fmuls
push
mov
add
loope
mov
arpl
stos
test
repz
jecxz
sbb
int3
pushf
xor
dec
loopew
rorl
scas
or
inc
xchg
loope
xchg
or
loope
out
mov
bound
imul
cmp
in
pop
psraw
jo
js
push
adc
loope,pt
cmp
xor
push
and
lds
daa
fabs
mov
dec
ss
test
xor
jecxz
lock
mov
jmp
mov
mov
and
js
dec
sbb
jg
push
loope
mov
into
dec
pop
loope
aaa
lods
scas
jmp
pop
loope
std
inc
rcrl
rolb
adc
jl
xor
out
pop
lcall
fistpl
push
fsub
mov
mov
loope
mov
mov
loope
cmp
push
lods
inc
inc
mov
xchg
cmc
movsl
arpl
jnp
outsl
loope
aaa
or
jae
push
stos
loope
addb
xor
xchg
or
scas
jno
hlt
aaa
iret
mov
mov
lret
dec
jnp
out
bound
xor
adc
add
pop
aam
outsl
mov
js
pop
adc
jo
xor
inc
das
pop
xor
and
pusha
sar
mov
mov
cmc
and
push
insl
addr16
scas
sub
adc
loopne
jecxz
and
sub
fdivrs
jmp
fwait
add
sbb
addr16
mov
rol
ret
sahf
push
xor
cmp
call
and
hlt
lcall
mov
dec
push
pop
loope
lods
xlat
sub
icebp
dec
rcrb
mov
pop
lcall
cltd
xchg
pop
aaa
fdivs
adc
loope
shl
jmp
xchg
add
popa
lods
mov
push
scas
clc
in
out
inc
mov
nop
rorl
jo
pop
xchg
push
push
loope
push
pop
das
and
mov
sub
mov
xor
sub
inc
dec
cltd
or
mov
xchg
in
rcrb
daa
inc
in
adc
push
pop
loope
xchg
outsl
mov
push
scas
shr
push
out
jo
adc
or
fcompl
push
dec
loope
sbb
sub
subl
es
call
addr16
loope
in
or
sbb
sub
call
adc
xor
in
xchg
xor
or
adc
dec
and
pop
test
loope
std
js
cmp
jmp
or
jns
loope
inc
push
ljmp
xor
aad
loope
test
ljmp
lock
shrl
out
hlt
jmp
sub
shl
aam
int
mov
out
add
push
lcall
sbbb
dec
or
dec
inc
and
adcl
mov
cmpsl
add
int3
or
inc
or
das
mov
and
ljmp
addr16
pop
arpl
lcall
mov
mov
push
loope
sar
jns
sbb
loope
pop
pop
lods
stos
inc
mov
xchg
jne
mov
loope
clc
call
xlat
ret
pop
cmp
pop
daa
push
loope
xor
test
inc
mov
push
jecxz
push
pop
jo
pop
insl
imul
fimuls
fs
jecxz
adc
fbld
or
test
add
fstl
in
mov
fmull
loopne
imulb
cmp
lahf
sbb
or
clc
add
gs
cmp
cld
aad
push
cltd
add
loope
iret
je
mov
mov
push
scas
xor
jno
sbb
inc
pop
in
mov
outsb
mov
addr16
xlat
push
add
cmp
sub
div
add
pop
out
std
jae
xor
cwtl
or
push
loope
leave
fists
pusha
inc
xor
enter
mov
rcrl
scas
movsb
lcall
loop
sahf
lret
jo
cmp
lcall
sti
ds
loope
xchg
cltd
xchg
xor
mov
dec
testb
aas
insl
outsl
insb
std
or
xor
jecxz
sbb
ss
lock
loope
inc
decb
mov
loope
arpl
pop
xchg
orb
jno
jnp
movsl
mov
mov
adc
loope
sbb
or
mov
adc
loope
jns
jo
push
add
pop
stos
dec
mov
mov
or
cmp
repnz
cmpsl
scas
fidivrl
lock
push
xor
dec
cmpl
jmp
inc
xchg
or
add
mov
outsl
shlb
xchg
mov
ljmp
mov
pop
ds
lcall
inc
enter
jge
cltd
mov
and
int
std
add
imul
pop
xchg
jo
xchg
pop
or
jmp
loope
push
mov
dec
loope
jmp
sub
mov
fbstp
cmc
into
in
dec
mov
jecxz
int3
pop
or
out
xorb
xor
mov
in
negb
jecxz
lahf
dec
mov
loope
mov
cmpsb
loope
aaa
movsbl
jns
inc
loope
pop
insl
jne
nop
jecxz
lahf
jns
loope
xor
test
loope
mov
mov
sbb
aad
pop
or
add
stos
push
in
jmp
out
sbb
ja
cmpsb
loope
mov
cmp
mov
xchg
shrb
nop
loop
int3
in
aad
in
xchg
inc
add
loope
adcb
mov
pop
ljmp
ret
out
or
loope
sbbl
push
pop
stc
jmp
and
repz
xlat
gs
cld
inc
jns
lahf
xchg
and
pop
push
test
adc
loope
aas
and
push
popa
inc
in
mulb
jae
sar
test
xorb
push
arpl
shrl
enter
loope
jl
ja
cwtl
xchg
mull
iret
out
and
cmp
mov
inc
je
jo
out
cmpl
pop
dec
or
jo
inc
inc
sub
pushl
inc
add
jmp
xor
and
loope
leave
mov
push
rolb
and
add
sti
jecxz
inc
outsl
loope
dec
aaa
es
or
loope
xlat
dec
shl
cld
inc
loope
cmp
pop
aas
jns
mov
cmp
or
mov
imul
bound
xchg
shl
mov
sub
mov
mov
and
sbbl
leave
add
sbbb
mov
movsl
outsb
rorb
cmp
mov
cmp
and
inc
aas
mov
out
in
sub
add
arpl
notl
bound
jno
iret
imul
das
jbe
repnz
je
cltd
jecxz
cmpsl
fsubp
mov
and
sub
pop
adc
jecxz
call
add
je
inc
std
add
xchg
in
dec
mov
int3
mov
loope
iret
jmp
inc
cmp
cltd
test
jp
and
loope
or
push
jmp
sbb
xchg
pushl
test
jg
xor
push
loope
pop
in
in
cmp
bound
inc
mov
jo
adc
or
scas
xchg
mov
inc
loope
js
loop
fcmovnbe
les
loope
lea
sbb
adc
mov
es
pop
xlat
lcall
adc
push
mov
mov
sti
adc
and
adcb
repz
in
or
dec
test
inc
lcall
pop
ret
loope
in
jb
xor
cmp
subl
loop
aas
jne
ds
loope
cltd
jbe
ss
sbb
add
adc
mov
mov
jo
and
stc
fiaddl
movsl
ljmp
adc
or
mov
loope
xchg
push
out
iret
iret
or
loope
idivb
scas
push
test
jp
loope
sbb
xor
loope
jnp
addl
mov
inc
aad
push
sub
jo
lret
scas
lods
loope
and
sub
popa
in
ds
int3
sbb
mov
scas
pusha
rcrl
cmp
iret
out
push
out
loope
adc
scas
sbb
inc
inc
push
adc
stc
sbb
and
mov
push
loope
add
in
fs
xchg
pop
xor
mov
loope
lret
cmp
loope
or
sub
lahf
arpl
mov
ret
lods
and
jbe
hlt
mov
push
nop
xchg
xchg
add
loope
test
in
loope
sbb
lret
ds
int3
pop
loope
push
mov
and
mov
xchg
and
sub
std
fildll
mov
data16
popa
inc
jecxz
pop
pop
jns
push
sbb
xchg
xchg
lods
jb
loope
adc
mov
add
mov
loope
outsb
xlat
inc
mov
mov
and
mov
cmp
cmp
fwait
push
in
add
imul
shr
in
je
adc
and
or
loope
fsubs
in
fidivs
mov
jmp
jmp
cmp
push
and
mov
dec
jl
ss
loope
adc
xlat
aas
in
push
loope
lds
adc
sub
sarb
dec
stos
jmp
adc
sahf
push
loope
movsb
stos
scas
lock
sbb
ds
inc
adc
and
dec
adc
sbb
mov
loope
loopne
jmp
and
pop
pop
imul
outsl
mov
sub
loope
xor
push
loope
inc
arpl
jbe
js
loope
push
test
add
add
in
mov
lcall
es
sub
xchg
loope
and
push
jno
xchg
add
jb
jmp
jae
loope
push
push
lret
mov
or
sbb
stos
xchg
add
pushf
leave
and
cmp
mov
jp
std
icebp
hlt
jno
nop
call
stos
sbb
into
mov
loope
jno
test
sbb
cld
cmpsb
loope
sbb
lret
sbb
sub
loope
mov
cs
repnz
cmp
gs
jne
mov
gs
mov
in
jb
and
ret
aaa
in
mov
mov
repz
stos
test
loope
push
pop
inc
push
insl
ja
loope
iret
sti
sub
out
jo
dec
addb
out
test
inc
loope
cmpsw
mov
jmp
mov
into
test
jb
stos
inc
and
shlb
popa
adc
sahf
sub
test
mov
flds
push
inc
cmp
loope
div
jmp
xchg
dec
pop
dec
and
inc
popf
fcomps
sub
loope
mov
loope
cmp
stos
test
push
jo
adc
mov
loope
out
testl
aaa
pop
push
movsb
loope
fcmovb
inc
push
sub
std
stos
gs
pop
jmp
jo
jmp
insl
dec
mov
and
ret
cmp
sbb
movsl
pop
iret
aad
push
ja
sub
cltd
adc
jae
shll
push
sub
loope
cltd
mov
addr16
loope
outsl
repz
out
mov
sti
sahf
ss
jle
roll
int3
sbb
jmp
sarb
inc
mov
loopne
int
xchg
mov
sbb
add
cmp
pop
in
repnz
cmpsb
icebp
in
xchg
jmp
in
rcl
sub
loope
aaa
roll
pop
loope
fs
add
adc
xchg
loope
dec
ds
jg
ret
imul
mov
sar
push
mov
pop
jae
jbe
push
mov
jg
mov
jmp
push
loope
outsb
sti
test
ja
cmp
lods
nop
cmpsl
iret
pop
xchg
xchg
pop
add
shlb
add
es
and
push
ds
fmull
rclb
enter
in
je
add
ljmp
sub
jo
leave
outsb
or
ljmp
fwait
ret
jmp
loope
outsb
jge
push
mov
incl
ret
mov
jbe
ljmp
loope
mov
push
jae
das
inc
loope
xor
ss
loope
jo
repnz
mov
adc
push
mov
sti
ss
movsl
loop
std
loope,pt
mov
test
fiaddl
bound
fwait
mov
out
adc
test
mov
cld
loope
mov
mov
push
jmp
stos
xchg
inc
push
aaa
mov
push
dec
sub
or
sub
loope
and
adc
xchg
ret
stc
push
loope
sub
add
xor
outsb
rclb
mov
xchg
es
xchg
push
movsl
fwait
cmp
in
sub
mov
push
inc
xor
and
loope
cmc
xchg
in
lret
loope
mov
sub
dec
cwtl
divb
loope
insl
aaa
inc
out
aas
sbb
jno
dec
mov
dec
scas
je
rcl
fmul
and
pop
pop
xlat
mov
cli
pop
test
rcl
insl
xchg
and
jnp
pushf
inc
sub
jl
jno
mov
lahf
mov
rclb
test
mov
popa
cmc
dec
loope
pop
jno
jns
push
mov
jae
add
dec
jo
lret
mov
mov
sti
mov
bound
je
loope
aas
test
xchg
or
jns
mov
addr16
ret
and
sub
stos
pop
shlb
mov
out
adc
mov
and
dec
mov
imul
xchg
aad
xlat
jg
mov
data16
scas
js
aas
push
nop
jge
daa
mov
mov
pop
cmp
dec
loope
lods
inc
jae
insl
outsl
cmp
iret
sbb
mov
xor
mov
rcrb
adc
push
xchg
inc
loope
fwait
sbb
icebp
dec
fistpll
jno
loop
adc
rclb
lret
inc
mov
jne
loope
push
xchg
xchg
xchg
jb
xchg
push
inc
loope
add
jbe
movl
push
mov
add
fld
mov
jge
test
mov
lods
or
jmp
outsb
repz
imul
out
sahf
jmp
xchg
dec
pushf
mov
adc
dec
cld
leave
sarl
lcall
mov
lods
loope
xor
ja
mov
dec
mov
in
jg
pop
sbb
sarb
rcrl
adc
ja
decb
and
jno
roll
loope
push
and
loopne
jp
repnz
sbb
repz
sub
xchg
inc
pop
aaa
mov
ja
fistpl
push
cmpsb
adc
clc
bound
daa
sub
das
in
lret
or
lods
jg
sahf
push
cli
rolb
cs
imul
orb
cmp
aam
aad
fadd
cmp
shl
push
out
outsb
loope
sbb
jecxz
sub
rclb
jecxz
xor
cmp
shl
repz
add
call
push
add
int
inc
iret
loopne
loope
stos
push
xchg
jae
mov
repnz
call
aas
negb
mov
push
xchg
rcll
inc
in
and
pop
loope
out
or
cmpl
cmpb
stos
imul
jg
addr16
lock
jmpw
je
pop
loope
xchg
hlt
into
and
add
pop
jecxz,pn
outsb
jb
inc
loope
faddp
repz
or
cltd
addr16
sub
js
jl
cli
rcrb
or
aaa
or
out
jle
std
test
add
xor
cmp
mov
jmp
mov
mov
loope
add
push
inc
jns
loope
jmp
jle
xchg
stos
loope
jnp
jp
leave
loope
cmp
fsub
enter
daa
and
xchg
loope
push
lods
test
loope
clc
es
dec
jmp
decb
into
mov
loope
popf
iret
stos
mov
xchg
and
ret
xor
jne
mov
loope
loopne
mov
and
mov
movq
lods
mov
inc
push
pop
sbb
mov
adc
push
add
mov
loope
and
clc
dec
loope
sub
dec
cmp
or
xchg
test
aad
push
shrl
xor
jmp
sti
loope
add
inc
pop
xchg
dec
cmc
pushl
mov
jo
push
orb
inc
andb
out
rolb
popa
dec
movsl
push
rclb
js
xor
xor
test
and
loope
pushl
ret
je
cs
shrb
inc
and
hlt
out
jecxz
loope
xchg
aad
mov
dec
push
jno
pop
or
mov
push
jg
dec
or
aam
jb
popa
add
stos
pusha
sbb
in
sbb
inc
jmp
add
pop
cwtl
jmp
daa
mulb
sub
in
insb
in
in
mov
adc
outsl
lahf
loop
imul
push
in
sarl
int3
xchg
ror
dec
jne
nop
cmp
cltd
dec
push
daa
push
pop
or
pop
scas
dec
loope
push
sar
ja
mov
test
sub
lea
mov
and
cmp
cld
repnz
inc
pop
mov
dec
adc
sub
jo
fdivrs
lea
loope
aad
mov
or
rcl
sbb
clc
ljmp
int
jecxz
pop
xor
jbe
pop
shrb
dec
movsb
stos
push
mov
sbb
js
out
mov
push
in
lret
stc
xchg
add
xor
loope
and
or
add
add
inc
sbb
jmp
jge
xor
sti
mov
cmp
jecxz
fwait
fs
call
imul
loope
fs
mov
jno
sbb
pop
jae
fidivrs
sub
push
out
mov
pop
icebp
inc
xor
mov
in
ja
mov
pop
loope
in
xor
movsl
fdivrp
fucompp
jbe
decl
xchg
push
loope
xor
outsl
repnz
loope
out
aaa
pop
adc
adc
lcall
xor
sar
dec
lahf
jmp
into
clc
pushf
inc
mov
add
inc
sub
sub
iret
push
xor
dec
xchg
adc
mov
aas
cmp
das
call
and
add
or
mul
insb
or
aas
nop
mov
inc
imul
jo
and
loopne
loopne
adc
mov
pop
daa
scas
sbb
ret
fndisi(8087
sub
and
decl
pop
outsl
jge
shll
mov
loope
push
lahf
lods
sti
lret
dec
dec
popa
cmpb
jmp
jbe
loope
push
adcl
icebp
sarb
cmp
dec
pop
cmc
and
loope
mov
movsl
push
fdiv
cmp
ss
stos
jno
mov
mov
push
test
lahf
jge
loope
push
or
repnz
nop
aad
das
mov
xchg
imull
in
stos
into
pop
adc
or
mov
loope
sub
rolb
icebp
xchg
std
push
or
cwtl
adc
adc
dec
pop
cmp
xor
or
push
xchg
cmpsl
fcoms
lds
add
iret
jp
lods
inc
ljmp
cmc
add
aaa
sub
in
in
mov
pop
cmp
mov
jmp
into
loope
mov
push
lret
in
sti
frstor
xor
enter
loope
inc
cmp
add
cmpsl
jmp
or
loope
int3
je
inc
push
mov
dec
push
sar
push
mov
call
jbe
lcall
jmp
fwait
imul
inc
movsb
sub
rcr
mov
in
mov
dec
xchg
mov
mov
rcll
int
loope
std
aaa
test
loope
jb
hlt
pop
and
mov
sbbb
iret
xor
sahf
sub
call
loope
pop
mov
int
out
xor
cwtl
jno
outsl
mov
xchg
rcrb
in
jmp
cmp
adc
loope
pop
int3
int
loope,pt
push
pop
mov
in
test
dec
fisttpl
add
out
inc
inc
mov
jns
cmp
push
add
scas
pop
pop
es
sarb
or
loop
push
loope
push
sbb
repnz
gs
dec
loope
in
js
mov
and
jb
push
push
fidivrs
aam
arpl
add
ljmp
loope
lock
or
nop
mov
cmp
pop
gs
push
push
jmp
aad
jmp
in
scas
ret
push
paddd
mov
leave
xchg
lods
imul
xchg
pop
sbb
mov
sbb
push
inc
jmp
out
iret
jns
outsl
leave
icebp
fmuls
xchg
loope
int
scas
mov
jl
loope
scas
or
imul
insl
mov
leave
mov
inc
pushf
bound
aas
loope
test
cmpsb
jnp
xor
mov
xor
ret
orb
and
cmp
test
jecxz
mov
jo
xchg
mov
loop
sub
mov
out
rclb
test
scas
and
loope
jno
lret
into
enter
cmp
loope
adcl
fcmovnb
cmc
push
nop
mov
jg
stc
out
addb
adc
fcmovne
loope
fisubrl
data16
jns
mov
push
pop
dec
and
xor
call
icebp
shr
dec
mov
pushf
push
inc
and
mov
xor
scas
mov
fwait
shlb
push
loope
fildl
loope
cmc
fld
sbb
or
pop
or
in
ret
pop
rcrl
loop
shl
daa
jle
jb
jg
xchg
mov
push
aaa
test
les
notb
js
mov
inc
out
rolb
and
shl
int
cmp
adc
cmpsb
loope
or
and
jle
adc
pop
popl
ds
inc
dec
sub
xchg
int3
mov
aam
xchg
and
jae
loope
push
out
lret
popa
jo
sbb
inc
in
popl
mov
mov
cmp
ja
jne
loope
pusha
jns
popf
jmp
xor
fdivl
and
out
adc
push
gs
outsl
push
inc
pop
and
test
and
shufps
dec
jo
mov
jg
les
insl
loope
outsl
nop
cmp
fldenv
xchg
adc
fldt
ror
jo
dec
sub
push
adc
es
test
lods
add
loope
cs
lret
push
aam
loope
push
in
inc
loop
sbb
loope
or
cwtl
or
lea
sub
out
leave
xor
mov
ret
sti
xrelease
pop
jmp
sbb
fdivl
out
inc
xchg
loopne
ret
adc
jl
sub
mov
fsts
test
and
or
test
ljmp
loope
lahf
test
mov
data16
jle
add
aaa
cwtl
orl
das
dec
push
loope
enter
xor
mov
add
in
jge
ja
adcb
jmp
xor
pop
sti
arpl
mov
xor
mov
mov
movsb
outsb
xor
mov
mov
push
sub
out
movsb
and
xchg
jecxz
add
enter
ljmp
sbb
lods
clc
loope
rcrb
loope
cmp
loope
cmpsb
mov
and
out
enter
loop
movsl
scas
div
hlt
sub
sarl
hlt
sbb
inc
repz
lock
mov
mov
mov
arpl
ret
jmp
xchg
repnz
dec
mov
and
inc
daa
aaa
adc
lock
mov
inc
lods
loope
mov
lahf
ret
in
mov
in
sub
dec
loope
lods
outsb
xchg
push
and
cmp
push
push
lcall
mov
push
or
mov
cmp
loope
or
and
mov
pop
jl
jg
cwtl
push
jecxz
pusha
mov
mov
jo
or
ficomps
jmp
inc
add
mov
mov
outsb
test
or
idivl
pop
and
mov
loope
insl
mov
add
mov
imul
shll
jb
loope
push
xlat
jns
scas
mov
sub
in
mov
aad
test
xchg
jge
xor
faddl
adc
adc
xor
mov
and
rorl
push
loope
out
leave
sub
out
jne
and
pop
psraw
sbb
add
pop
cli
xchg
aam
hlt
into
loope
pusha
fadds
mov
add
pop
sub
es
clc
dec
push
push
cmp
dec
ljmp
aas
cli
in
add
mulb
xlat
pop
push
test
cltd
dec
shl
pop
pop
iret
loope
lret
xchg
loope
sbb
mov
xchg
and
jl
test
into
mov
loope
lods
dec
jne
push
mov
icebp
cmp
sub
ror
jae
movl
outsl
loope
cmp
nop
jb
mov
jbe
push
pushf
add
and
pop
dec
loope
in
cmc
rclb
inc
loope
mov
xor
cmp
iret
jno
push
xchg
mov
sbb
push
js
rclb
inc
mov
fwait
jmp
stc
jle
jl
in
sbb
mov
lea
mov
movsb
mov
push
loope
push
rcrl
nop
out
dec
in
les
or
js
fwait
xchg
push
jmp
addr16
in
ret
insl
test
pop
popa
sbb
xchg
cmp
es
sti
loope
mov
aas
out
add
jp
and
add
loope
popf
xadd
inc
add
data16
and
jl
mov
add
jmp
pop
mov
movsb
leave
cld
nop
stc
gs
or
inc
lods
loope
dec
js
test
in
xchg
jmp
leave
or
call
loope
negb
ja
call
pop
adc
lret
push
jns
cmpsl
mov
push
loope
mov
fcmovnu
loope
push
imul
outsl
jb
jnp
shlb
dec
outsb
push
pop
xchg
lcall
mov
loope
adc
andl
loope
push
arpl
fnsave
sub
pop
call
xchg
jg
pop
loope
subb
mov
pop
ret
jbe
imul
mov
jle
js
fcoms
loope
sub
jg
outsl
pop
loope
xchg
ja
test
es
imul
sbb
sarb
pop
jb
arpl
cltd
incl
icebp
pop
cmpsl
out
push
and
movsl
loope
mov
sbb
in
jmp
or
and
mov
mov
loope
inc
stc
adc
movsb
xor
mov
loop
lock
es
inc
sub
inc
ljmpw
loope
dec
repnz
pop
loope
jb
lods
addr16
mov
and
fmuls
adc
dec
jae
pop
jo
xchg
ljmp
and
push
jmp
imul
and
rorb
dec
dec
loop
xor
mov
mov
dec
cmpsl
xchg
jmp
loope
ret
cmp
es
inc
gs
jge
dec
adc
lock
data16
in
xchg
dec
in
inc
jg
jecxz
loope
repnz
inc
into
mov
mov
add
mov
mov
mov
mov
pop
push
shlb
icebp
ds
iret
or
mov
aaa
rol
cmc
jnp
in
mov
or
jmp
push
leave
mov
xor
or
add
loope
mov
and
loope
jne
mov
xor
or
rclb
jmp
js
cs
loopne
ror
mov
sub
mov
and
pop
add
pop
pop
adc
sub
dec
push
ja
cwtl
xor
jno
jmp
sbb
in
mov
mov
pushf
loope
cld
into
jbe
repz
xchg
lea
sahf
ja
loope
loopne
les
fisttpl
loope
mov
cmp
xchg
pop
sub
dec
push
inc
adc
jle
mov
pusha
fs
test
cmc
sub
loope
inc
sti
add
inc
xchg
loope
mov
lock
imul
or
mov
lock
pop
out
push
leave
aad
push
loope
icebp
pop
es
jmp
loope
jmp
sahf
lock
nop
xchg
mov
dec
sbbb
xor
stos
mov
xlat
jae
sbbl
pop
pop
jb
lcall
popf
insb
fs
xchg
aam
ret
cltd
out
or
je
pop
loope
pushf
test
loope
inc
fs
popa
addl
or
scas
mov
mov
or
push
fs
jmp
dec
cmp
inc
dec
jmp
or
adc
or
int
mul
jp
sarb
push
mov
jmp
sbb
add
stos
fwait
jecxz
cmp
leave
outsl
jo
sub
inc
in
dec
dec
je
pop
insb
ds
imul
sub
xor
dec
pop
pop
clc
jg
mov
in
in
pushf
push
add
xor
mov
pop
loope
jecxz
into
inc
dec
loope
lret
jle
iret
fsubp
pop
jnp
and
or
add
leave
and
loop
cmpsl
addr16
add
pop
mov
sbb
cmp
loope
sub
adc
loope,pn
cmc
mull
pop
pop
jo
mov
xor
mov
xchg
loope
das
mov
in
loope
rolb
pop
ss
rcrb
inc
js
in
loopne
adc
movsb
lds
cmp
and
pop
aam
fs
mov
sbb
dec
cwtl
loope
jp
sarl
xchg
mov
sbb
mov
sub
loope
lods
out
fadd
or
daa
loopne
mov
jnp
mov
or
lcall
into
out
insl
mov
icebp
std
loope
xor
out
repnz
mov
mov
or
mov
loope
push
test
mov
ret
and
cld
add
lea
gs
sbb
outsl
mov
pusha
xor
and
fsubrs
sbb
or
xchg
inc
in
inc
xor
pusha
xor
fmulp
xchg
and
fmuls
sahf
clc
fists
mov
scas
call
sbb
or
jmp
push
cmp
mov
xor
push
enterw
add
ljmp
testb
pop
cs
sub
outsb
dec
adc
adc
loope
xor
int3
leave
stc
imul
sbb
jecxz
mov
loope
adc
push
dec
nop
sbb
test
ja
cmp
mov
cmp
cli
pushf
cmp
cs
jmp
mov
sbb
inc
cmp
xchg
daa
addr16
sarb
icebp
push
insb
nop
bound
lock
pop
fldt
cwtl
rcl
scas
sub
shr
sarb
loope
xlat
mov
out
xchg
add
andl
add
into
jmp
sub
es
dec
adc
pushl
popa
mov
stc
aam
push
sbb
dec
ljmp
lret
loopne
pop
mov
push
dec
mov
mov
push
mov
movl
jb
xchg
imul
cmc
cwtl
dec
loope
pop
jo
fsts
loope
icebp
mov
cs
sbb
loope
pusha
ret
push
or
mov
loop
xorb
loope
sbb
mov
arpl
stos
xchg
in
xchg
shr
lret
jo
add
loope
lock
jg
xor
loope
xor
cmp
loope
cmp
cmpsl
dec
insb
repnz
mov
outsl
push
push
shr
sbb
ret
int
shr
loope
or
repnz
sti
fcmovbe
loope
xor
mov
rolb
jle
out
mov
loope
icebp
jo
inc
mov
pop
loope
mov
push
loope
daa
add
adc
add
in
jge
mov
subb
loope
fists
out
inc
push
loop
and
repnz
adc
and
jo
xchg
imul
ja
loope
sub
cmp
mov
popf
je
fmull
cmpsl
loope
lea
repnz
jns
or
pop
mov
bound
loope
adc
out
cmp
or
out
lret
jmp
loope
iret
idivl
cmp
jnp
or
jno
movsl
xchg
cwtl
out
fnstsw
and
add
add
test
loope
outsb
pop
inc
lea
loope
adc
add
jno
pop
xchg
mov
adc
xchg
xchg
movsb
aam
enter
mov
adc
pop
aaa
loope
xchg
push
rorb
ss
adc
adc
iret
inc
xchg
inc
sti
sub
loope
addr16
and
jne
imul
shrb
dec
scas
push
xchg
xor
pop
aad
push
and
push
outsl
push
shll
in
out
mov
pop
shl
call
stc
into
xlat
in
loope
sbb
cmp
repz
nop
dec
xchg
push
lcall
in
add
roll
xlat
shl
outsb
cmpsb
mov
mov
add
shrd
loope
cmp
sub
sbb
aad
loope
inc
cmp
inc
xchg
mov
pop
sub
hlt
loope
lret
loop
jle
loope
and
dec
dec
jo
outsl
xor
test
mov
in
mov
dec
add
jg
jo
leave
jnp
data16
xor
jb
sbb
cmp
out
sbb
or
push
mov
fldenv
arpl
aad
xchg
pop
adc
rol
cmc
sbb
rolb
fs
cli
xor
in
arpl
cmp
xor
push
add
pop
jnp
pop
out
shlb
and
mov
sbb
add
mov
aas
pop
dec
jmp
les
and
mov
fsubs
push
dec
mov
sbb
jno
loope
xor
or
mov
fcompl
cmp
movsl
add
inc
shlb
sahf
repnz
ret
mov
cmp
popa
scas
loope
ljmp
xchg
and
mov
sbb
pop
insb
and
loope
fiaddl
jb
mov
xchg
mov
ret
outsl
cmp
and
loope
sbb
pop
cmp
jae
lods
in
xchg
inc
jnp
movsb
rorb
pop
jb
mov
and
add
dec
xor
loope
dec
sahf
dec
ljmp
lea
out
shl
in
inc
loope
sub
fsts
cwtl
adc
sarb
xchg
rorl
out
or
outsl
xor
mull
push
jbe
xor
cmp
inc
sbb
pop
mov
sub
push
movsb
out
sbb
call
clc
xor
mov
mov
lods
push
jl
loope
jmp
xchg
loope
ss
jbe
mov
es
push
aam
jns
push
bound
jmp
lahf
jno
dec
loope
lock
xor
pop
push
xchg
jb
adcl
shl
or
adc
loope
insb
xchg
clc
out
loope
add
das
ficomps
loope
sub
outsb
jle
je
mov
hlt
mov
push
mov
divl
mov
mov
movsl
mov
cmp
pop
dec
jnp
leave
test
or
lock
lcall
loope
sbb
jns
cmp
int
loope
add
mov
xor
mov
iret
testb
cld
mov
loope
adc
push
movsb
mov
xor
lcall
imul
push
fs
mov
or
push
test
add
dec
mov
pop
loope
pushf
jns
or
lret
rorb
fisubrs
push
das
loope
aas
mov
jae
mov
jmp
rcrb
adc
jmp
arpl
loope
mov
sbb
pop
push
gs
roll
stos
jp
loope
in
enter
scas
xor
xor
add
fsin
add
and
push
push
pop
mov
mov
push
inc
fsubr
jmp
jge
pop
push
outsb
sarb
loope
pop
mov
push
push
xor
adc
pop
loope
mov
jmp
cmpl
out
mov
and
add
in
sub
push
outsl
inc
rclb
enter
pop
ret
fs
incl
mov
xor
iret
adc
dec
pop
outsb
jo
inc
jmp
jns
pop
loope
push
pop
sbb
inc
loope
inc
enter
ljmp
xor
push
sarb
adc
fisttpll
sub
sub
fabs
fwait
leave
push
std
mov
xor
xor
mov
subl
bswap
mov
cmp
sub
mov
mov
loope
or
push
sub
inc
jmp
pop
neg
pop
push
bound
and
popf
and
mov
lods
pop
mov
loope
ret
push
outsb
loope
shrb
call
loope
cmp
mov
aam
sub
push
jo
out
pop
sbb
adc
iret
in
jecxz
inc
nop
mov
aam
loop
out
js
pop
stos
jo
das
shl
pop
inc
fildl
roll
testl
xlat
mov
aam
mov
cltd
loope
sbb
out
enter
xchg
ds
loope
lods
inc
xlat
jo
adc
mov
js
cmp
xchg
mov
fstps
out
cli
insb
sti
je
imul
sub
insl
rcrl
ret
test
out
sub
jmp
sahf
adc
insb
xor
mov
push
xchg
movsl
mov
shl
adc
xchg
push
cs
push
imul
loope
or
imul
loope
mov
mov
mov
xor
push
mov
sysenter
xorl
loope
int3
or
add
sub
inc
sub
iret
out
sbb
mov
dec
pop
pop
push
cmc
adc
pushf
sub
sub
scas
in
into
rclb
test
pop
pop
adc
movsb
xor
loope
mov
fsubs
lock
push
cli
jecxz
cltd
ljmp
jo
test
or
loope
jle
jp
movl
ss
jns
rclb
popl
add
jmp
pop
mov
cmp
adc
imul
and
movsb
loope
jae
pop
gs
test
aaa
add
inc
pop
bound
inc
mov
xlat
cs
dec
jmp
test
loope
xor
sbb
pop
ror
loopne
pop
sbb
loope
ficomps
or
xlat
add
add
jnp
xchg
mov
push
test
loope
mov
std
pop
mov
xor
add
notb
loope
sub
inc
and
sbb
pop
cmp
and
loope
pop
in
rcl
es
dec
shlb
pop
insl
and
push
loope
jmp
fucomi
loope
lds
inc
imul
and
xchg
loope
and
pop
or
loope
pushf
rcll
inc
fs
mov
adc
inc
pop
jg
mov
lock
jnp
loope
cmp
in
cmpsb
sbb
dec
loope
mov
push
push
or
std
mov
or
lret
data16
vmread
addr16
loope
sub
push
loope
push
scas
into
fs
ds
shr
in
mov
es
popa
icebp
xor
rep
or
push
pop
mov
aad
test
sbbb
push
in
fisttpl
adc
lock
cwtl
jmp
sub
lcall
dec
jmp
jl
mov
clc
mov
stc
push
xchg
je
rcl
and
ss
mov
lds
aad
loope
int
loopne
ds
or
lods
cmpsl
movsl
rorl
push
loope
mov
dec
cs
ret
sub
and
shl
add
pop
data16
and
jns
push
inc
loope
mov
shlb
jmp
call
adc
addr16
jo
xchg
pop
fidivrl
ret
loope
fildll
pop
loope
dec
dec
jmp
adc
mov
notl
out
in
jmp
loope
or
add
push
jbe
loope
lahf
mov
jne
nop
out
insb
loope
test
lcall
mov
jge
loopne
jle
repz
fwait
clc
int3
sub
mov
mov
sarl
xlat
jne
repz
cs
push
dec
and
in
push
scas
cmp
cmpsb
jmp
fwait
loope
jge
or
std
push
data16
in
out
or
jge
add
popf
mov
ret
adc
sub
loope
pop
push
aas
ljmp
mov
divl
add
cltd
dec
bound
test
loope
test
loope
push
and
loope
cmp
xor
pop
cltd
pop
es
loope
sbb
bound
js
dec
xor
push
jmp
lcall
icebp
jo
dec
lock
mov
mov
xchg
xlat
cld
sbb
js
gs
cwtl
hlt
sbb
loope
les
test
mov
stc
loope
sub
gs
fsubp
mov
sub
lock
and
cmp
sti
aad
jmp
shlb
lsl
movsb
jne
push
cmove
xchg
pop
sbb
mov
dec
jns
cmc
mov
lds
fisubs
ss
jno
repnz
sbbl
push
ljmp
out
std
jmp
or
jmp
mov
mov
jecxz
add
loope
movsl
aaa
cli
ffree
add
xor
lretw
loope
cs
outsb
test
jnp
xchg
jmp
loope
lods
add
mov
shl
outsl
sbb
jns
cmp
or
inc
push
mov
sub
sub
mov
jne
popa
add
std
or
lret
push
loope
hlt
mov
dec
loope
jb
jno
sub
loope
movsb
mov
sub
xor
fsubrl
adc
idivl
jae
jbe
cmp
inc
inc
popf
fadd
popa
cwtl
mov
adc
in
dec
movsb
shll
pop
lock
xchg
cmp
mov
loope
sub
adc
ja
fistps
fstpt
loope
xchg
mov
adc
bound
addr16
test
loope
inc
shll
push
xor
iret
lds
loope
push
add
and
cmp
dec
loope
mov
add
or
mov
pop
ret
sub
and
loope
ss
into
adc
dec
dec
cmp
int
pushf
scas
inc
mov
push
std
adc
pop
mov
dec
rolb
mov
xlat
popf
loope
sub
push
loope
fs
xorb
insl
ficomps
jg
imul
xchg
loope
daa
pop
sbb
or
cmpsl
loope
sub
cmp
jb
pop
lahf
loopne
mov
jb
sti
loopne
inc
in
loope
mov
jg
shrl
ljmp
push
arpl
popf
loope
sbb
loop
cmp
or
push
add
loope
mov
lds
xor
ds
mov
aam
xchg
cld
pop
jne
inc
xor
lock
mov
idivl
xor
sbbb
loope
int3
inc
adc
pop
inc
call
out
xchg
data16
mov
in
xchg
push
out
pop
pop
fsubl
push
inc
loope
fwait
and
cwtl
loope
dec
cmpl
in
and
xchg
mov
in
add
int
inc
sbb
pop
jno
es
inc
in
xorb
decl
out
nop
in
mov
and
mov
dec
adc
sbb
das
stc
mov
push
aaa
xchg
xchg
mov
cmp
cmc
scas
loope
and
mov
loope
outsl
jg
mov
add
jns
subw
mov
push
cmpsl
mov
or
repz
cld
pop
fucomi
mov
loope
inc
sub
shl
jno
fs
dec
loope
push
addb
mov
loope
lods
xor
inc
pop
and
xlat
cld
imul
daa
loope
adc
cli
loope
mov
in
cmp
fnstenv
outsl
xchg
jl
pushf
xchg
movsl
ret
xor
fisubrl
push
xchg
xchg
and
pop
cmpsl
in
inc
lds
pop
out
pop
in
cli
arpl
test
mov
loope
cmp
rclb
pushf
rolb
push
xchg
mov
loope
shrl
loope
je
mov
enter
pop
outsb
leave
insl
push
cltd
loope
pushf
sbb
jb
pop
test
jecxz
mov
decl
push
pop
and
lock
outsl
ficoml
out
mov
mov
xor
scas
imul
push
pop
insl
mov
mov
fs
shr
jp
addb
nop
imulb
sbb
xor
add
hlt
fwait
push
mov
dec
mov
mov
dec
repnz
mov
sbb
lods
lea
xor
out
mov
cld
mov
cs
dec
loope
mov
sarl
add
mov
clc
dec
jmp
jno
stc
push
lcall
in
add
cmp
sbb
push
sub
jns
jg
loope
mov
imul
mov
cmc
jnp
shlb
arpl
in
pop
loope
xchg
jle
fbstp
or
cltd
into
add
jg
jge
mov
pusha
addr16
xchg
adc
pop
loope
jbe
push
loope
mov
in
in
das
shlb
in
pop
xor
sub
jnp
in
insb
loope
mov
int
repz
loope
mov
jle
add
xor
sub
loope
jne
and
rcrb
ja
xchg
jp
add
and
xchg
pop
mov
dec
cmpsl
push
pop
push
cli
mov
lock
jecxz
cmp
out
sub
mov
aad
cmp
loope
aam
jl
jle
jmp
pop
inc
and
push
outsl
loope
mov
inc
ficomps
mov
cmp
les
out
in
adc
pop
xchg
or
jo
xor
pop
xchg
in
cmp
scas
push
and
xor
int
add
cmp
inc
jnp
lds
test
xlat
inc
je
dec
xor
es
pop
add
dec
loope
out
pop
xchg
loop
aas
lock
sbb
jmp
add
rorb
xor
cmp
fxam
inc
sub
repnz
push
xor
add
in
ret
mov
dec
je
in
js
int3
jne
stc
and
dec
dec
fidivl
loope
jnp
cmp
negb
jb
push
movsb
jp
fidivl
mov
jecxz
sbb
cs
lahf
mov
and
sub
lock
inc
jmp
and
lock
mov
and
adc
in
mov
cmp
mov
mov
cltd
add
loop
push
rcrl
xor
push
popf
lds
mov
arpl
sub
outsl
push
and
adc
pop
les
cmp
repnz
sbb
mov
add
loope
mov
enter
and
mov
and
test
cld
jmp
es
cmp
addl
test
leave
int3
dec
loope
aas
cmp
jmp
sub
ds
loope
popa
inc
pop
cmp
mov
sahf
mov
mov
loopne
addr16
lods
sarb
in
iret
pushl
cltd
mov
lret
adc
fsubrs
mov
mov
cld
push
addb
iret
sbbl
push
mov
aaa
and
mov
ror
cld
fdivp
mov
xor
push
pop
mov
add
cwtl
loope
sti
pusha
jo
xchg
jns
mov
mov
es
std
sahf
icebp
sbb
xor
mov
lea
mov
sub
pushf
jnp
jle
and
lods
outsb
sti
loope
fsubrl
pop
mov
fldl
test
addr16
mov
test
shl
mov
mulb
in
aad
subb
mov
push
adc
sbb
loop
stos
out
jne
out
jl
ja
loope
rorb
repnz
dec
loope
sub
push
test
clc
add
stos
loope
int
mov
punpckldq
loope
jb
mov
push
jne
jmp
stos
xchg
lods
cld
shlb
lcall
dec
push
idiv
gs
addr16
adc
add
testl
out
sub
loope
jp
ret
cmp
mov
add
iret
imul
adc
scas
lret
push
insl
jmp
shlb
mov
dec
jecxz
notl
stc
fld
jns
loope
out
pop
mov
fst
rolb
jecxz
mov
loope
insl
jnp
or
sbb
out
loope
cwtl
pop
xchg
cmp
sbb
xchg
fs
clc
aaa
or
std
dec
mov
mov
mov
sub
cmp
adc
fwait
mov
rclb
xchg
inc
std
shl
and
pop
add
jmp
sub
shl
jmp
mov
mov
loope
push
and
sti
loope
int
inc
insb
std
and
lods
outsl
jo
add
sarb
mov
test
rcr
push
loopne
or
in
push
rorb
dec
shll
aaa
popa
sbb
push
adc
ret
test
push
arpl
jns
jno
adc
out
and
arpl
pop
movsb
cmp
pop
out
daa
insb
repnz
aam
xchg
sub
test
sbb
mov
cmp
fnstsw
jmp
mov
pop
mov
mov
jmp
jb
add
in
mov
lcallw
andb
pop
popa
loope
mov
ljmp
sbbb
push
and
in
and
in
repnz
loope
out
push
aas
pop
push
loope
or
mov
subl
jmp
fwait
loope
fs
inc
or
push
add
je
int3
and
lahf
test
adc
shrb
popf
testl
mov
js
stc
les
shl
shlb
loope
fdivrs
sub
xchg
loope
rclb
pusha
movsb
lcall
int
mov
addr16
cmp
pop
or
sbb
jle
fsubrs
loope
cld
adc
pop
fimuls
or
loope
jno
mov
mov
push
lods
out
fndisi(8087
stc
dec
dec
pop
divl
mov
sti
loopne
arpl
scas
shl
sub
and
aaa
adc
jmp
mov
push
cltd
mov
inc
add
repnz
cmp
in
loope
inc
das
xchg
lock
mov
mov
bound
mov
sbb
sub
add
ss
in
or
add
into
xchg
and
push
dec
loop
and
xchg
mul
out
mov
loope,pt
or
mov
loopne
jmp
lods
ret
push
add
loope
xchg
push
nop
int
movsl
loope
mov
loope
je
scas
lahf
push
push
push
or
inc
outsl
loope
outsb
out
test
mov
loope
pushl
jnp
loope
and
mov
sub
addr16
pop
fs
or
dec
mov
and
cltd
mov
out
incb
add
push
jl
inc
jecxz
dec
xlat
ja
push
push
sbb
and
jns
mov
je
xchg
data16
or
cmpb
xchg
mov
into
psrad
data16
pop
sbb
repnz
loope
jg
jae
out
pop
lods
or
add
pop
jmp
jne
rcll
test
sub
in
inc
mov
pop
ds
push
or
loope
xor
enter
mov
jmp
cld
adcb
in
and
test
mov
mov
test
loope
cmc
test
lods
aam
mov
mov
cs
loope
and
mov
mov
shll
shlb
pop
insl
push
lret
jbe
dec
pop
mov
nop
adc
rol
sub
insb
es
jnp
jne
in
push
in
jno
sub
cs
adc
inc
std
inc
adc
sarl
mov
pop
dec
les
in
mov
loope
ds
jb
int3
sub
rcrl
shlb
mov
or
lods
sub
cltd
pop
test
and
imul
loope
xchg
es
push
test
lock
cmp
xchg
jecxz
fisttpl
iret
loope
mov
jbe
in
ret
sub
or
mov
loope
jle
mov
pusha
shrb
out
lods
push
cmp
jne
mov
lock
movsb
pop
cli
fistl
lock
test
jecxz
pop
shl
ss
shll
pushf
shll
inc
loope
pop
pop
sbb
inc
add
fxch
mov
outsb
sbbl
push
loope
es
daa
shlb
jg
sbb
aaa
add
cmp
mov
sub
mov
dec
std
jne
pop
in
mov
add
cltd
leave
hlt
gs
ror
xlat
mov
cmpsb
repnz
xor
dec
add
imul
push
pop
loope
add
sbb
shll
dec
loope
mov
pop
jnp
pop
lret
cmp
movsb
jmp
outsl
mov
shll
aas
push
into
ficoms
stos
popa
aad
insl
iret
cltd
dec
or
pop
dec
jne
jge
xorl
fcoml
dec
arpl
jnp
push
mov
mov
sub
xorb
mov
adc
jmp
mov
mov
loope
push
test
sahf
aam
sub
or
loope,pn
shll
xor
add
je
ret
add
push
sbb
stos
mov
int
stos
aaa
scas
mov
sti
pop
lea
inc
sahf
xor
mov
addr16
mov
test
sbb
pushf
adcl
cmp
push
ljmp
icebp
sub
insl
loope
mov
xor
mov
stos
shll
clc
mov
repnz
dec
add
loope
lcall
loope
adc
ljmp
jle
outsb
pop
jb
jno
jp
xchg
int
and
add
sar
mov
xchg
lgs
loope
leave
pop
mov
cmp
push
and
movsl
adc
mov
into
jmp
jmp
imul
cmpsl
add
add
lea
pop
popf
sbbl
mov
dec
cmp
dec
pop
popa
mov
imul
inc
nop
mov
cli
pop
arpl
pushf
push
je
jmp
xor
into
lock
ja
jmp
ret
fsubrl
rorb
cmp
scas
in
jp
sub
xlat
add
fsubr
loope
pop
scas
add
leave
mov
jmp
in
cwtl
fdivr
loopne
cmp
fistpl
dec
mov
loope
les
adcl
ret
lcall
in
aaa
mov
test
das
or
aas
js
outsb
loope
cmpl
loope
adc
xchg
mov
mov
jo
pop
subb
sub
loopne
sahf
jae
in
popa
loope
mov
enter
es
pop
pop
jmp
sti
loope
rorb
daa
mov
pusha
mov
insb
pop
scas
mov
mov
dec
subb
out
repnz
jne
or
sarb
sarb
mov
jmp
cli
lock
pop
jb
add
jg
cmpsl
in
mov
mov
test
aam
or
jecxz
and
loope
or
cmpl
gs
daa
xchg
push
icebp
mov
sub
mov
mov
pop
insl
jecxz
xchg
rcrl
jo
out
lret
test
mov
sub
lea
adc
cwtl
cmpb
aas
rcr
loope
mov
cld
popa
adc
add
shlb
cmp
jne
jmp
pop
jbe
sub
or
mov
movsb
push
cmp
push
test
out
mov
inc
sub
adc
addb
add
andl
test
mov
jnp
mov
rol
stos
lods
lcall
imulb
jge
ljmp
adc
and
push
add
cltd
ljmp
aaa
xchg
imul
addr16
mov
sub
test
shrb
repz
icebp
fs
pop
loope
or
int
mov
sub
fwait
sub
jecxz
dec
popa
adc
sbb
fisubrl
loope
cmp
daa
int3
xchg
loope,pt
jp
jno
lds
loope
lcall
loope
jmp
and
mov
flds
xor
push
jl
out
vpsraw
scas
sti
loope
mov
in
loope
fsubl
xor
adc
mov
xchg
into
movsl
lods
loope
mov
pop
cmpsl
inc
fstps
jo
int
dec
dec
in
adc
pop
in
adc
sub
cld
push
loope
adc
lock
push
repnz
pop
rolb
cmp
jno
loope
ljmp
jo
dec
and
out
add
ljmp
xchg
shl
sahf
jmp
jb
inc
leave
mov
loop
dec
mov
testl
lds
dec
sub
fldt
lcall
out
xor
sub
mov
mov
ss
cmp
xchg
ja
sbbb
dec
and
test
ljmp
mov
addr16
mov
mov
sbb
inc
inc
loop
loope
jmp
mov
mov
or
ret
in
and
mov
mov
sub
call
push
enter
arpl
cwtl
popf
add
pop
loope
shrl
mov
cmpsb
loope
aas
pop
push
out
adc
stc
sbb
test
dec
sbb
cld
adc
xor
jmp
jae
loope
ret
sbb
repnz
in
pop
fidivs
je
loop
out
int3
loope
lock
out
mov
loope
arpl
fmul
js
and
out
scas
movsb
adc
xchg
or
or
lock
scas
push
addr16
add
ljmp
mov
mov
test
lock
je
mov
xor
in
lock
push
ret
mov
in
aad
test
mov
mov
push
out
jge
ljmp
inc
push
dec
shlb
cmp
mov
mov
rorb
and
imul
loope
push
push
loopne
popf
or
push
mov
xchg
xchg
jno
mulb
push
inc
mov
push
cld
xchg
ss
fs
adc
or
fwait
pop
sub
jo
sub
and
push
or
sub
mov
or
movsl
push
sub
pop
int3
sbb
lret
loope
push
inc
mov
add
loope
mov
ret
in
cs
mov
inc
sub
mov
add
ja
xchg
jb
lock
enter
adc
pop
std
cmp
je
inc
cli
jmp
mov
sub
imul
inc
iret
sub
shlb
orb
fbld
adc
leave
lock
outsb
sub
jp
jno
loope
xchg
dec
cmpsl
adc
dec
mov
aad
inc
lock
out
xchg
std
fsubs
addl
jmp
ret
jmp
fsub
jns
jo
or
xchg
out
push
mov
icebp
inc
loope
xor
inc
xor
in
and
loope
ja
shlb
inc
mov
mov
loope
movsl
mov
xor
in
stos
lock
jle
stc
loope
sarb
lcall
call
inc
adc
xor
push
ret
pop
loope
jno
dec
adc
into
push
loope
test
das
push
loope
daa
jb
stc
mov
cmp
mov
push
mov
dec
jnp
or
insb
ja
mov
aas
in
jl
iret
and
sbb
jge
jbe
mov
cmc
in
mov
std
orl
into
ja
push
sbb
xchg
ljmp
and
mov
cmp
loope
jbe
aad
pop
jns
jecxz
lock
push
lods
or
in
insl
cmp
es
push
loope
push
sti
jb
daa
out
in
fisttpl
xor
inc
mov
xlat
pop
or
cmpsl
push
call
loope
xchg
mov
xchg
loopne
loope
lds
and
int
cmpsb
ss
mov
shlb
jmp
cmpsl
loope
add
mov
movsl
sbb
daa
push
jmp
loope
pushf
repnz
push
dec
jb
loope
sarl
loope
adc
pop
pop
mov
sbb
mov
jo
or
test
mov
mov
fnstenv
repnz
enter
jb
inc
sub
fstps
adc
loope
or
pop
shlb
loope
int
lds
mov
or
mov
fdivrs
inc
test
adc
sar
mov
cltd
jmp
dec
repnz
adc
sbb
mov
inc
iret
adc
dec
fidivrl
xchg
loope
shll
mov
imul
loope
push
fs
jbe
jl
aam
jecxz
and
mov
std
iret
cmp
cmp
fs
pop
shrl
fsubs
lahf
mov
dec
mov
lret
or
dec
movsl
js
lock
loope
fiaddl
loope
out
aas
insb
xor
lret
ftst
mov
sub
inc
dec
mov
neg
jmp
dec
dec
lcall
sub
cmpsl
rorl
sub
push
cmp
sub
mov
imul
mov
xchg
or
inc
lods
and
test
int3
fmull
push
jl
loope
jne
xlat
jbe
push
data16
cmpsb
pop
mov
loope
xor
pop
inc
cmc
shlb
in
ljmp
xor
shll
iret
push
mov
or
add
in
lock
mov
int
mov
xor
cmp
pushf
cmc
mov
aam
jmp
in
push
mulb
and
adc
repnz
aam
rorb
fbld
lret
shll
or
jmp
push
xor
dec
jae
and
lret
xor
sub
push
sbb
jnp
rcll
std
mov
dec
loope
lds
inc
cmp
pushf
jae
xrelease
push
inc
subl
mov
test
adc
out
inc
sub
nop
pop
fwait
mov
add
xchg
jns
popa
loope
mov
pop
pop
mov
mov
imul
mov
jmp
jno
test
dec
scas
or
push
push
clc
in
jmp
dec
jmp
and
loope
movsb
repnz
sub
jns
xchg
jecxz
ret
mov
mov
dec
test
fs
into
and
ja
jne
insl
out
adcl
xor
loopne
loope
aad
out
mov
jnp
lock
lahf
pop
mov
jo
sbb
fstps
push
inc
mov
mov
dec
orb
xor
loopne
and
mov
mov
sub
adc
jge
add
pop
dec
loope
push
mov
iret
mov
sub
xchg
jge
push
clc
sub
pusha
insb
lahf
pop
push
shl
and
jecxz
js
cmp
adc
inc
loope
call
mov
in
enter
hlt
loope
lcall
jo
jne
and
lahf
push
out
inc
movsb
loope
xchg
mov
loope
sbb
xlat
insl
lods
pop
gs
and
jae
movsb
or
dec
rcll
dec
mov
test
inc
mov
out
ja
jp
mov
mov
mov
sahf
mov
cltd
mov
sbb
ds
cmp
mov
unpcklps
add
popa
insb
and
aas
imul
movsb
adc
mov
nop
sbb
pop
into
xor
dec
add
pop
loope
fdivrl
jnp
jno
insb
loope
ret
rol
pop
test
pushf
insl
imul
nop
adc
les
push
stc
adc
mov
lods
loopne
aad
in
psraw
cmpsl
jb
cltd
std
pop
int3
loope
call
rorl
xor
xchg
loope
sub
out
pop
ljmp
pop
lea
sub
and
cltd
jns
dec
std
add
pop
and
stos
int3
loopne
rcrb
dec
enter
mov
pop
in
mov
add
mov
rcrb
clc
mov
insb
or
push
add
xor
hlt
pop
sub
popa
sbb
inc
adc
dec
mov
in
pop
std
loop
pop
loope
ss
bound
or
movlhps
iret
inc
mov
add
adc
loope
add
aam
loope
nop
ret
popf
xor
subl
pop
mov
sub
setae
xor
adc
test
fistps
loope
test
mov
xor
sbb
aas
fsubrl
shlb
jnp
cmp
cmp
loope
stos
xchg
or
in
outsb
dec
cmp
inc
inc
mov
jp
popa
fdivl
loope
jns
rol
aaa
loope
inc
mov
loope
clc
xchg
xlat
jge
inc
ret
jo
in
cld
mov
repz
sub
cmp
inc
xchg
and
add
in
std
sub
xchg
adc
jae
mov
inc
ss
jno
jns
push
in
xor
pushw
lea
xchg
nopl
leave
loope
lret
popf
sti
jp
shlb
jmp
fidivs
cmpsl
sahf
mov
adc
jae
iret
rorb
daa
xorb
in
dec
iret
leave
testb
sub
and
loope
sub
jmp
sbb
jle
pop
clc
adc
lock
and
outsb
loope
fsubl
dec
mov
test
xchg
mov
mov
shll
pop
pop
sbb
push
orb
mov
xchg
dec
data16
aaa
cmp
add
jl
jmp
push
mov
pusha
leave
xchg
and
add
insb
sub
in
mov
mov
adc
or
cmc
pushfw
xor
lock
mov
add
daa
and
jle
out
mov
mov
daa
jmp
xorl
out
cmpsb
mov
loope
out
cs
mov
jle
test
shl
xor
xor
push
je,pt
movsb
mov
and
cmp
loope
pop
fiadds
loope
mov
daa
jb
in
xlat
mov
add
in
stc
sbb
fadds
push
gs
xor
xor
jl
lods
loope
add
test
loope
mov
sbb
leave
inc
lods
or
call
push
lods
xchg
jns
xor
push
sub
rolb
in
fdivr
xlat
or
out
shl
cmc
sub
lea
push
jno
cmpb
js
ret
mov
fisttpl
mov
lods
pop
and
dec
pop
pop
adc
sarb
loope
shll
add
sti
inc
dec
lcall
mov
lea
xchg
nop
icebp
xor
rorl
dec
cltd
fs
popl
clc
lcall
push
cmpsb
jo
inc
test
in
adc
fadd
daa
repnz
cmp
pop
popa
pop
xchg
xchg
jno
shlb
xorl
xchg
mov
xor
je
nop
or
cltd
fcmove
mov
loope
pop
xor
mov
push
cli
push
cmp
push
loope
ds
test
dec
out
add
inc
jbe
and
mov
cmp
out
incl
and
fsubrs
jae
mov
lods
or
call
xchg
fndisi(8087
xchg
push
mov
icebp
loope
int3
das
insl
jmp
sbb
push
arpl
push
jb
loope
pop
fsubl
pop
scas
pop
out
je
ds
popa
sbb
rcrb
mov
pop
sub
fimuls
mov
out
test
repnz
daa
mov
adcl
dec
sti
loope
pop
lods
push
rol
lahf
scas
test
stos
cmc
outsb
addl
loope
clc
repnz
add
jmp
dec
ja
xor
notl
jnp
in
lcall
scas
jl
add
inc
loop
aad
sub
loope
lds
push
loope
push
inc
mov
mov
mov
les
xchg
inc
ret
lret
sub
xchg
inc
and
xchg
jo
push
dec
push
fimull
nop
test
loopne
add
sbb
add
lahf
xchg
popf
loopne
arpl
loope
into
lcall
cmp
movsb
jge
xchg
scas
or
dec
jns
lcall
in
aas
add
cmc
mov
hlt
data16
mov
pop
pop
loopew
lret
movsb
cmp
loope
sub
out
sub
dec
fstl
int
stos
sub
not
sub
fs
test
inc
stos
cmp
outsb
push
loope
fiaddl
int
pop
loop
add
pop
mov
imul
mov
in
sarl
out
es
mov
sub
out
icebp
data16
mov
sub
imul
inc
imul
vsubss
jl
ret
pop
jns
cmpsb
in
pop
cmp
push
mov
dec
loope
aam
pop
je
add
inc
fisttps
xchg
loop
loope
js
mov
pop
in
jecxz
loope
jecxz
sbb
mov
dec
icebp
pop
leave
testl
arpl
mov
cli
mov
xor
shll
sub
mov
loope
and
xor
jmp
stos
lds
loope
jl
cmp
add
adc
scas
jnp
xorb
icebp
loop
nop
xor
sbb
lret
xorb
call
out
imul
shrb
mov
loope
push
outsl
mov
loope
repz
xchg
xlat
and
pop
loope
ficoms
sub
cmp
nop
push
or
gs
jo
push
xor
out
fmuls
rcrl
pop
or
inc
decl
pop
pop
mov
fiaddl
jecxz
adcb
out
arpl
and
repz
mov
lcall
dec
test
jmp
jl
jmp
rcr
loope
push
outsl
adc
push
add
dec
jmp
loope
xor
daa
clc
popa
xchg
or
lods
push
or
loope
sbb
inc
and
jno
loope
cld
cmp
push
sbb
loope
mov
mov
loope
sub
xchg
dec
out
test
cmp
sbb
add
mov
jg
push
and
popf
std
imul
into
loope
mov
fidivl
cmp
mov
lock
pop
shll
jo
imul
sub
in
xchg
push
fisttpll
repz
sub
ss
inc
int
test
loope
pop
and
testb
andl
and
or
in
push
add
loope
mov
movsb
imul
mov
int
dec
mov
loope
out
repz
jne
jmp
loope
insb
ret
fs
mov
aas
ret
inc
add
and
insl
lock
pushl
cs
daa
std
dec
mov
mov
pushl
test
xchg
test
pop
rclb
loope
adc
add
inc
fwait
xlat
inc
test
addb
mov
imul
sub
inc
and
mov
mov
lea
loope
fldl
enter
cmp
dec
jecxz
mov
and
imul
scas
outsl
sub
ret
adc
loope
incl
fwait
xor
sbb
lret
rcrb
mov
pop
cltd
pop
xchg
icebp
out
ja
xorl
sti
xchg
dec
in
pop
imul
pop
bound
loope
arpl
xor
lock
mov
in
mov
sbb
mov
loope
and
mov
shrb
je
sub
jp
cmp
nop
jmp
aam
in
enter
adc
test
loope
push
imul
lret
mull
fwait
mov
or
stc
bound
mov
mov
xchg
icebp
sbb
gs
popa
loope
dec
push
mov
bound
stc
dec
mov
shrb
fdivl
dec
loope
add
movsbl
sub
lcall
stos
mov
idivb
inc
andb
and
sub
loope
cltd
mov
pop
sub
mov
jo
nop
jmp
gs
and
les
outsb
movsb
fnstenv
add
sub
and
in
loope
cmp
dec
test
lret
xor
lahf
testl
ret
loope
xchg
cli
out
mov
ror
repnz
shlb
scas
pusha
mov
push
loope
xchg
and
test
dec
ret
scas
push
sub
loope
add
add
adc
push
fstl
mulb
jp
cmp
imul
mov
cltd
inc
cmc
imul
loope
cmpl
cld
orl
in
sbb
loope
xor
repz
out
or
mov
sbb
sahf
clc
loope
adc
icebp
in
decb
push
or
pop
cmp
cwtl
test
enter
sbb
loope
and
inc
push
sti
and
or
scas
jo
iret
fidivrs
cmp
xor
cld
xor
mov
mov
loope
push
xchg
inc
scas
imul
rol
imul
movsl
loope
outsb
arpl
test
test
dec
jmp
arpl
mov
xlat
loope
stos
lret
bound
outsb
and
cmpsl
loope
pop
in
adc
loope
adc
icebp
cmp
pop
or
loope
adc
dec
xor
inc
aad
and
std
mov
jmp
adc
insb
jae
ret
or
xor
cmpl
scas
data16
dec
mov
addb
sbb
shll
or
shlb
ljmp
das
aad
insl
pop
into
loope
inc
and
add
xor
push
orb
sqrtps
ss
stos
xchg
jmp
push
dec
dec
out
repz
sti
loope
aas
xchg
fimull
dec
mov
scas
cmpsb
push
jbe
idiv
outsb
loope
prefetch
or
xor
mov
ret
push
add
inc
jb
dec
gs
mov
xchg
mov
inc
clc
loope
shrb
pop
lock
ficoms
jmp
push
mov
mov
gs
jns
cmpps
insb
jecxz
lret
mov
testb
and
popa
cmp
pop
loope
pop
arpl
jp
rcrb
out
sub
mov
adc
inc
or
mov
cmpsb
mov
and
loope
cltd
dec
sbb
sarb
les
lahf
mov
in
add
lret
mov
jae
mov
in
out
fisubrs
loope
inc
ret
scas
push
loope
test
jb
pop
mov
fdivrs
jp
fmull
mov
fucomip
loopew
add
ljmp
ss
mov
or
mov
jmp
and
sbb
xor
push
sbb
in
popa
jp
lea
jbe
xor
mov
mov
lahf
mov
fmul
inc
fsubrs
out
xchg
lea
xchg
push
loope
imul
or
mov
gs
test
cwtl
loope
sub
iret
jno
lcall
dec
push
shll
addr16
fsubs
cmpsl
loope
xchg
sbb
imul
fisttpll
adc
ret
iret
add
cmp
mov
inc
add
and
rorl
pop
or
nop
xchg
or
inc
cmpsl
loope
mov
cmp
lods
xor
mov
bound
jns
loope
mov
dec
and
mov
and
daa
icebp
jmp
lret
loope
pop
fsts
lea
sbb
mov
mov
call
fsub
mov
xor
dec
loope
push
and
shlb
add
xorl
out
ss
mov
imul
decb
icebp
mov
sahf
rcrb
rcrb
lret
loope
adc
arpl
loope
jl
andb
inc
loope
lahf
push
loopne
dec
dec
xchg
nop
int
sbb
push
cwtl
sbb
ja
xchg
cmp
and
pushf
shll
push
mov
loope
add
cmp
daa
inc
adc
jns
fisttps
jmp
adc
cmc
mov
push
sbb
in
or
mov
cltd
mov
into
mov
adc
mov
dec
lock
int
add
pop
pop
xor
rcr
insl
jg
loope
sub
sbb
ja
xchg
mov
stos
enter
jp
ljmp
xor
dec
sub
pop
dec
push
sahf
aam
adc
ficoml
or
pop
mov
xchg
lds
test
enter
xor
fs
pop
test
mov
fsubl
jecxz
pop
das
jg
aaa
hlt
ret
xchg
push
loope
in
jmp
fwait
in
cmpsb
jo
sahf
imulb
jne
jle
out
push
stos
loope
xor
xor
loope
fstpt
sub
cmp
dec
cltd
xchg
daa
xlat
jnp
loope
ret
adc
add
mov
xor
push
lcall
daa
jo
bound
loope
pop
into
rcrl
mov
mov
lock
fcom
mul
or
mov
loop
cmp
idivl
rol
loopne
adc
xchg
icebp
fildl
push
insb
mov
pop
jmp
sub
dec
push
int3
and
out
test
push
xor
mov
in
mov
shl
stc
cmp
movsb
loope
add
fidivs
and
push
arpl
popf
and
pop
bound
cmp
adc
pop
dec
xchg
jecxz
jle
vmwrite
sbb
xchg
pop
fwait
clc
loope
mov
scas
sub
cltd
test
add
xchg
pop
mov
loope
vsubsd
repz
cmp
mov
dec
loope
and
arpl
inc
push
loope
xchg
jmp
mov
mov
push
fs
xchg
fsubrl
aaa
adc
frstor
loope
fcmovu
pop
shll
jmp
mov
fs
xor
push
jl
loope
je
aam
loope
jg
rcl
test
mov
push
lcall
fdivs
mov
mov
pop
xchg
lods
sub
loope
int
push
enter
add
add
pop
test
imul
lock
shl
clc
xchg
jmp
cwtl
loope
pop
ss
mov
dec
fildll
clc
pop
popf
sub
pusha
in
ficoml
nop
xor
in
push
js
out
test
iret
loope
bswap
pop
push
aam
loope
push
lcallw
cwtl
mov
outsb
popa
mov
pop
loope
push
xchg
mov
and
jg
popf
cs
ljmp
in
inc
pusha
and
adc
jnp
ror
stos
add
pop
mov
push
sahf
in
in
addl
out
inc
outsb
ret
sbb
sub
jecxz
cwtl
aam
loopne
pop
cmp
loope
push
fidivrl
jnp
pop
loope
jl
inc
movsl
pop
push
das
dec
popa
and
or
in
mov
push
cld
dec
add
test
pop
push
sub
mov
pop
and
inc
add
fildl
adc
cmp
push
jnp
dec
pop
gs
fdivl
out
sbb
add
push
mov
mov
test
mov
clc
add
inc
jb
mov
or
stc
loope
fdivrs
push
loope
sbb
popf
inc
jo
pushf
push
idivl
gs
xchg
mov
and
push
pusha
cmpsl
aad
mov
loope
gs
push
loope
push
rcrb
ja
sub
outsl
xchg
push
jbe
fwait
pop
adc
xchg
in
es
int
mov
push
aas
hlt
gs
sbb
iret
mov
or
loop
scas
movsb
orl
aad
imul
in
xchg
and
mov
daa
in
stos
pop
mov
bound
es
xor
pop
inc
fnsave
iret
mov
xchg
das
loope
out
lret
sti
inc
flds
mov
mov
ss
or
dec
loope
popa
add
inc
add
sbb
loope
pop
call
fstpt
dec
in
into
jnp
lcall
jl
push
and
sub
inc
push
jp
jle
mov
imul
add
js
inc
les
sahf
and
repz
loope
xlat
daa
cmp
loope
jne
push
mov
jmp
iret
cmp
loope
pop
mov
mov
or
arpl
popf
cmp
shrb
dec
sbb
jo
mov
js
loop
test
mov
xchg
lds
sbb
jns
sti
inc
and
sub
pop
jmp
push
add
sahf
adc
lods
mov
cwtl
fabs
pop
lds
orb
sti
mov
cmp
mov
arpl
push
add
and
push
movsl
shrb
xor
push
js
xchg
loope
adc
mov
add
loope
aaa
cmp
inc
clc
stos
add
sti
jne
pop
jnp
imul
hlt
loopne
and
inc
jecxz
popa
push
mov
cmpsb
mov
into
dec
in
dec
sbb
loope
or
push
mov
das
xchg
lret
pop
jmp
call
sbb
cmpl
arpl
loope
mov
je
or
push
fstpt
jmp
sub
xor
cmp
loope
addr16
lea
mov
cs
xchg
sub
movsl
sarb
push
sub
popa
loope
jb
inc
inc
dec
mov
out
adc
add
cmpl
mov
dec
dec
dec
mov
sbb
or
icebp
lcall
push
std
adc
sar
imul
inc
mov
add
jmp
sbb
pushf
dec
push
sub
cs
inc
sar
scas
leave
popa
loope
out
cld
pop
imul
divl
repz
jae
andb
loope
ret
cltd
fcmovne
jbe
enter
repz
int
mov
xchg
insl
addb
inc
push
and
fnstsw
test
sti
xor
push
testl
loope
pop
std
in
add
xor
mov
ret
lods
pushw
add
jmp
loope
or
loop
inc
cmp
fldl
sbb
loope
and
mov
notl
scas
rclb
fwait
shl
xchg
aaa
lea
mov
adc
sub
cmpb
and
push
sti
and
adc
mov
call
jp
dec
loope
outsl
cltd
adc
pusha
jg
popa
xchg
mov
push
in
ljmp
lock
repz
insl
jp
pop
loope
flds
imul
mov
xor
ljmp
jmp
scas
call
daa
pop
int
andb
add
mov
in
sub
inc
adc
dec
mov
sub
add
shlb
js
adc
sub
loope
xchg
test
loope
roll
lods
loope
mov
ss
bound
and
pop
decl
pop
inc
xchg
loope
insb
mov
lods
rorb
or
or
int3
outsb
inc
mov
ja
dec
sub
fsubs
pop
fs
int
add
mov
addr16
divb
out
loope
repz
ror
add
cwtl
nop
mov
mov
lea
mov
loope
and
sub
sub
push
jmp
int
loope
insl
adc
gs
std
aad
push
in
lock
fldl
sti
sarb
lea
or
movsb
cmpsb
out
add
xchg
push
loope
pop
pusha
lods
mov
inc
sbb
outsb
pop
loope
lret
add
push
sar
movsl
in
insb
inc
jle
bound
or
push
mov
in
dec
jnp
orb
sub
and
sbb
adc
movsb
dec
addb
push
push
fdiv
jns
mov
add
xor
rcrl
arpl
scas
mov
loope
and
loope
aaa
icebp
sub
cmpsl
int3
loope
dec
xchg
aas
jae
scas
cmp
movsb
stos
pop
mov
scas
pop
loope
in
mov
mov
fcoms
test
js
add
or
cltd
clc
push
loope
xchg
dec
lds
adc
insl
sbbl
mov
insb
mov
push
aaa
movl
pop
pop
loope
int3
jb
and
int
lea
sub
mov
test
lcall
andb
imull
inc
out
and
loope
test
pop
into
mov
adc
jmp
mov
cwtl
and
mov
loope
ficoml
insb
loope
repz
mov
nop
mov
mov
bound
cmp
push
jo
into
fidivrs
pop
in
popf
jo
loope
push
jno
lret
loope
andb
cmp
notl
je
dec
popf
stc
xchg
iret
pop
add
add
loope
loopne
cmp
cmp
outsl
loope
xchg
adc
lret
pushl
mov
gs
inc
cmpxchg
cli
out
lret
pop
jmp
mov
mov
sub
icebp
jle
jb
jns
out
shlb
fisubrl
jmp
mov
jg
push
sub
jmp
loope
je
pop
scas
mov
icebp
ljmp
add
push
xchg
lret
mov
loope
insb
pop
outsl
lods
movsb
sub
loope
repz
and
shl
loope
aas
mov
sahf
dec
dec
xchg
lock
or
jne
out
pop
xchg
or
loope
jne
stos
mov
mov
mov
fstpl
lcall
iret
jge
in
loope
int3
mov
xchg
lock
sub
insb
dec
mov
dec
sarb
jne
ret
int
dec
and
aaa
popf
lcall
ja
mov
test
bound
adc
loope
in
add
int
push
loope
push
sbb
loope
nop
and
sahf
sbb
lock
add
loope
adc
ret
cmc
loope
dec
xor
mov
repz
arpl
leave
adc
das
cmpsl
lcall
mov
jo
cmc
jmp
and
jl
jae
rcrb
popa
into
xchg
pushf
dec
and
loope
push
idivb
push
lahf
test
xchg
mov
out
sbb
jo
pop
push
lcall
pop
or
sbb
xor
pop
in
retw
xchg
cmc
jmp
jp
mov
add
lcall
loope
ret
lahf
mov
sub
stc
mov
mov
mov
or
mov
jg
or
data16
lock
stc
outsl
out
test
int3
mov
test
sbb
ljmp
cmp
add
in
xchg
add
in
loope
mov
shrb
sub
sub
stc
cltd
out
sub
mov
or
sbb
add
sub
jbe
inc
ljmp
imul
loope
sub
out
jg
loope
lock
pop
lret
mov
cld
imul
jge
pop
sbb
inc
sub
call
xor
mov
arpl
out
rclb
xlat
cmp
pop
and
cmp
cmp
outsl
loope
xor
lods
sbb
insl
loope
ja
push
adc
fadd
lock
out
add
mov
loope
sub
push
loope
outsb
mov
mov
sti
dec
push
fists
rorb
fucom
mov
xor
mov
xchg
add
aaa
jmp
rcll
mov
push
lock
inc
dec
or
loopne
mov
jno
js
nop
mov
cmc
aas
loope
cltd
or
or
negl
out
jl
and
mov
mov
sbb
and
dec
je
cmp
icebp
push
scas
mov
cld
cmp
cmp
jae
gs
push
nop
in
out
loope
pop
clts
mov
push
mov
push
gs
xlat
ds
add
loope
pop
xchg
imul
fs
mov
xchg
sub
bound
ss
mov
loope
cmp
cli
sub
inc
or
loope
cmp
adc
int3
inc
cld
push
inc
out
jmp
dec
inc
enter
push
out
xor
dec
mov
out
push
cs
leave
fsubl
and
ud0
testb
xor
mov
das
jno
leave
mov
mov
jmp
loope
mov
mov
pop
aas
dec
ljmp
lcall
and
jmp
nop
daa
cwtl
in
mov
jmp
jo
test
mull
ljmp
adc
test
push
enter
leave
xchg
xlat
andl
pushf
and
add
in
aad
stos
and
and
xchg
pop
loope
frstor
and
dec
push
mov
mov
xchg
xchg
rclb
xchg
int3
and
pop
rol
into
outsb
sub
gs
out
xor
pop
jbe
pop
loope
mov
movsl
pop
mov
inc
test
push
lret
popa
shl
add
jge
nop
push
or
test
push
loope
fwait
pop
xor
or
loope
repnz
inc
sub
loope
popf
push
hlt
out
adc
dec
jnp
mov
loope
lcall
loope
int
jae
pop
and
adc
loope
pop
push
jmp
xchg
pop
sub
sahf
aad
pop
push
dec
jge
sub
mov
add
or
and
shr
nop
push
popa
fsubrp
or
into
push
imul
sbb
pop
loop
rcl
stos
add
dec
jecxz
scas
nop
xchg
mov
add
loope
adc
mov
mov
in
rep
bound
mov
mov
out
stc
jmp
ret
loope
mov
jno
inc
mov
xchg
sub
push
xchg
mov
loope
loop
sub
mov
push
push
loopne
iret
add
inc
nop
aad
cli
mov
and
push
sub
mov
pop
negb
and
loope
jg
push
pop
adc
mov
in
into
push
pusha
jo
cmp
lds
out
dec
mov
js
pop
xchg
jmp
leave
loope
pop
sbb
lock
mov
or
mov
sub
loope
inc
xchg
add
push
jb
add
bound
push
jnp
push
xor
inc
jns
cmpsl
aad
mov
fwait
pop
inc
pushl
push
xchg
fcoms
aas
or
jbe
rcrb
add
jp
dec
loopne
push
sbb
dec
sub
jmp
popa
loope
insl
outsl
repnz
lahf
push
mov
aas
and
das
in
xor
in
in
xor
dec
adc
aas
jo
and
cld
adc
test
pop
jp
icebp
xor
loope
inc
sub
ja
imul
xchg
lods
or
fs
or
rorb
jae
push
xor
test
rol
fcmovnbe
jl
xchg
or
mov
insl
loope
add
mov
das
test
add
mov
mov
lahf
push
mov
jmp
or
rcrl
lods
jo
cmp
loope
lcall
and
clc
lock
call
loope
mov
jb
sti
neg
inc
push
mov
bound
loope
xlat
mov
shlb
into
testl
cli
xchg
jecxz
mov
stc
mov
xor
insb
mov
mov
call
loope
js
out
xchg
pop
loope
adc
and
push
pop
loope
dec
inc
jae
imul
xlat
push
loope
int3
pop
adc
inc
and
jae
movsb
scas
mov
icebp
pop
or
loope
addr16
xchg
inc
dec
outsb
fsub
or
es
jl
inc
mov
nop
inc
mov
shll
jo
or
mov
out
jnp
addr16
int
dec
add
in
bound
inc
mov
pop
sub
mov
aaa
and
pop
rdpkru
fists
iret
gs
ret
inc
mov
icebp
pop
loope
test
imul
sti
jmp
dec
sar
imul
fbld
loope
or
add
or
jbe
sahf
leave
loope
xor
and
jo
inc
jo
mov
pop
call
loopne
stos
jb
and
mov
sub
test
in
stos
mov
push
lods
ds
sarb
sub
xchg
into
loope
out
push
outsb
or
jo
pop
sahf
ficomps
jnp
insl
mov
das
push
push
repnz
lret
push
fucom
mov
repz
and
xor
pop
pop
jecxz
mov
and
nop
lods
aam
fcomp
or
in
mov
jle
dec
cmpsl
pop
stc
loop
inc
sub
mov
adc
insb
ljmp
xor
mull
enter
fsubrp
rorb
xor
bound
or
movsl
mov
notl
adc
lds
mov
cld
or
mov
into
lods
jp
mov
pop
shrl
mov
xlat
dec
push
sbb
loope
mov
js
loope
movsl
inc
roll
test
xchg
dec
cmp
pop
shl
fmull
rorb
pop
int
mov
fcomps
push
mov
sti
add
adc
cmp
cmp
loope
lods
mov
mov
sahf
sbb
loop
data16
loope
push
clc
in
repnz
mov
iret
mov
and
outsl
add
loope
scas
add
aad
dec
nop
loope
add
pop
mov
daa
std
jmp
js
lea
enter
call
push
push
adc
mov
mov
or
mov
aam
jo
mov
sbb
and
loope
leave
jl
outsl
sbb
data16
hlt
popf
sbb
mov
ljmp
jne
fs
loope
jbe
jge
lods
sar
or
in
xlat
jns
iret
aas
inc
and
push
popa
jb
rorb
jl
movsb
pushf
in
ss
iret
push
xchg
jmp
in
jb
adc
in
pusha
loope
ljmp
out
cmp
add
pop
loope
sub
cltd
jb
das
loope
insb
roll
xor
addr16
cld
loope
pop
movsb
jl
sysret
jg
mov
mov
ljmp
and
mov
cmpsl
lret
sub
push
cmpsb
loope
dec
stc
add
loope
cmp
sbb
dec
aaa
rol
js
add
or
fstps
loope
scas
push
lods
popf
jbe
push
xchg
push
pop
sahf
jl
loope
add
test
push
rolb
clc
loope
sbb
sub
jle
and
pop
and
out
loope
dec
hlt
pusha
aad
icebp
loope
xchg
push
and
imul
mov
loope
pop
outsb
stos
jle
sub
jo
pop
mov
and
pop
sub
scas
loope
mov
push
ds
pop
loope
mov
subb
aad
xchg
out
or
xchg
scas
xchg
mov
mull
mov
shl
xchg
or
test
in
lock
jmp
test
and
dec
sbb
cwtl
cmp
sbb
rclb
adc
stos
sub
inc
out
jmp
dec
adc
pop
dec
add
pop
jmp
arpl
das
loope
insl
or
mov
leave
push
shrb
gs
ss
and
in
lahf
xchg
hlt
sub
mov
mov
inc
das
loope
daa
ds
inc
xchg
pushf
lock
pop
hlt
aam
fs
adc
xchg
lret
popf
inc
arpl
loope
ljmp
loope
mov
push
dec
loope
fwait
inc
jg
fsubrs
aad
sbb
pop
or
add
cmp
cld
loope
or
push
add
loope
and
jge
dec
popf
pop
loope
jno
fcmovbe
stos
dec
js
adc
in
cmp
je
push
sahf
mov
loope
jl
pop
dec
jg
mov
loope
ret
mov
mov
in
sbb
loope
sub
adc
jnp
add
pop
cmp
pusha
mov
sarb
in
xchg
idivb
std
adc
ds
outsb
sahf
testl
sbb
ret
stos
mov
popl
in
inc
push
mov
mul
jnp
dec
pop
ret
pop
loope
movsl
mov
push
sahf
insb
cmp
repz
cli
mov
pop
loope
out
call
shlb
or
in
fsubrs
and
inc
pop
push
gs
push
and
loope
pop
or
loope
cmp
les
cltd
inc
psraw
ret
xchg
std
in
push
dec
in
sbb
js
pop
or
push
pop
cmp
mov
fs
mov
shlb
mov
ret
xchg
pop
cmp
cmp
aaa
add
cltd
and
clc
outsb
shlb
pop
insl
imul
in
sub
jmp
and
roll
ds
in
cmp
in
push
or
loope
lods
mov
inc
iret
jae
jmp
adc
mov
xor
loope
test
psllq
cmp
stos
sbb
mulb
jo
cmp
lock
sbb
outsl
fmulp
call
sub
out
xchg
or
inc
pusha
mov
lahf
fdivrp
sub
loope
cmpsb
inc
int3
cmp
loope
dec
insl
sub
push
pop
adcl
sub
and
push
daa
test
loope
insl
jl
sub
dec
shr
pop
xchg
test
out
pop
lods
ret
test
inc
sub
aas
loope
iret
sarl
fwait
mov
leave
sbb
add
das
loope
jne
popf
xchg
test
and
push
ljmp
add
nop
aaa
mov
lret
lcall
or
cmpsb
xor
loope
inc
push
and
shll
ss
jecxz
stos
mov
outsl
add
loope
dec
test
ret
cmpb
jo
fsubrl
shl
aam
sti
or
pushf
lock
out
dec
testl
test
cmp
dec
cmp
incl
fisubrl
cmp
xor
ds
pop
loope
inc
sti
loop
mov
mov
gs
mov
xor
jmp
nop
cmpb
int3
xor
daa
cmpsb
and
sti
cmp
cmpb
sub
inc
or
dec
xor
add
xchg
mov
lock
pop
daa
mov
fcoml
cmp
pop
or
mov
loope
cli
subl
or
ljmp
pop
push
mov
jno
sbb
jge
out
orb
insl
push
inc
icebp
out
inc
mov
ja
decb
cs
loope
in
and
rclb
mov
mov
cmp
in
dec
enter
test
jp
jl
add
cmp
pushf
int
ja
xor
loope
mov
loope
mov
aaa
add
pop
adc
mov
fmull
jbe
and
addb
pusha
xor
mov
mov
push
fisttpl
mov
cwtl
jp
shlb
out
loope
push
pop
test
rorl
mov
jge
push
pop
mov
push
je
imul
ljmp
dec
nop
loope
into
in
pop
gs
inc
mov
cmc
les
push
push
lods
and
rorb
cmp
push
shlb
fidivl
scas
pop
test
in
mov
out
jbe
scas
dec
popf
jle
jae
mov
mov
push
mov
stos
insl
sti
test
mov
fnstsw
bound
mov
xlat
cltd
pop
mov
inc
sbb
push
xor
ss
shr
loope
test
insb
mov
adc
loope
jnp
pushf
test
sub
or
inc
mov
out
in
ja
push
insb
mov
and
addr16
into
lret
popa
cmp
bound
test
fwait
loope
outsb
scas
ret
testl
dec
je
mov
shlb
lret
mov
loope
jns
fidivrs
mov
addl
dec
xor
in
ss
loop
jmp
loope
pop
jae
hlt
mov
and
mull
out
push
shlb
ret
int3
mov
pop
xchg
movsb
shrb
push
cmp
lds
js
testb
mov
shll
mov
cwtl
or
dec
pop
rolb
loope
dec
decb
loope
sbb
pop
or
pop
jecxz
cmc
notb
mov
inc
gs
icebp
mov
popa
fcoms
mov
jnp
es
inc
lock
bound
ljmp
loope
push
stos
mov
scas
sub
inc
adc
sbb
mov
jg
fwait
daa
inc
push
loope
aad
mov
mov
call
call
dec
pop
sub
fildll
jmp
ret
ss
movsl
inc
dec
loope
int
add
dec
push
mov
mov
rcl
pop
sbb
ljmp
arpl
call
repz
loope
sbb
int3
loope
jo
ret
nop
dec
sub
jo
mov
in
out
cltd
leave
mov
fsts
add
addr16
stos
insb
loope
sub
sti
fimull
mov
movsl
ret
sbb
mov
arpl
daa
loope
in
lret
aam
out
jnp
loope
pusha
xchg
movsb
cmp
pushf
jb
add
adc
sarb
outsb
faddp
mov
loope
leave
cmp
loope
orb
cmpsb
in
sbb
js
loope
cltd
insb
dec
stos
mov
and
jle
inc
sbb
jo
mov
cmp
loop
jp
movsb
loope
clc
mov
shll
add
loope
jb
inc
lods
mov
mov
icebp
loope
dec
pop
mov
jns
dec
iret
popa
pushf
sub
push
stos
cli
dec
mov
pop
shlb
mov
mov
push
sub
add
fwait
pushf
sub
cld
xchg
lods
inc
xor
adc
adc
dec
sahf
test
xor
insl
mov
loope
jns
add
inc
cld
loope
mov
push
shl
adc
push
pop
sub
dec
add
push
mov
insb
xchg
jecxz
jle
push
jns
mov
aad
ret
rclb
dec
pop
dec
gs
rolb
jmp
xlat
fs
jmp
mov
jo
sbb
cli
stc
xchg
cmp
loope
jbe
inc
push
mov
sbb
daa
test
and
jle
in
imul
adc
aad
sub
push
inc
push
mov
xor
cvtps2pi
pop
mov
dec
fdiv
cs
aad
cld
xor
mov
jg
mov
loope
push
push
xlat
mov
adc
mov
pushf
mov
push
les
dec
adc
in
sbb
cmp
add
loope
push
aam
loope
je
jg
hlt
xchg
mov
push
addr16
loope
mov
jne
lock
jo
in
xchg
in
mov
inc
push
push
jo
test
repz
rcrb
call
sbb
std
out
jge
and
iret
loope
stc
mov
adc
loope
out
mov
lock
fsubp
jmp
pop
adc
stos
mov
pop
call
adc
cmp
test
fidivrl
pop
jae
shrb
in
mov
jbe
aad
jecxz
mov
loope
dec
and
push
fisubs
shlb
pop
xchg
inc
lret
and
jne
pop
jge
leave
loope
dec
pusha
push
not
scas
pop
loope
js
or
and
loope
add
out
not
rorl
outsb
cmp
enter
adc
pop
fisubrs
jecxz
mov
or
mov
pop
in
jmp
inc
jecxz
loope
xchg
push
sbb
xchg
dec
sub
or
push
and
xor
cmc
fisubrs
iret
mov
jo
mov
add
adc
inc
std
imul
xchg
lea
rcll
jmp
mov
inc
adc
jne
push
dec
out
mov
sub
lret
sub
pop
lds
jns
mov
hlt
add
psadbw
in
scas
xorl
jo
stc
test
loope
jecxz
cltd
stos
lahf
sbb
loope
or
insb
cs
aad
fxch
jno
sahf
je
movsl
sbb
dec
iret
push
push
fucomp
or
sbb
jg
movl
and
ror
shr
das
and
in
loope
xchg
pop
repnz
pop
mov
lods
cmp
jl
mov
pop
lcall
adc
dec
xchg
mov
psubd
add
mov
push
adc
mov
adc
call
pushf
in
add
and
loope
jp
test
or
inc
pop
clc
ret
cltd
mov
ljmp
add
jo
lea
pop
mov
inc
cmc
jmp
nop
in
jp
dec
xchg
js
mov
mov
and
loope
adc
in
lahf
jp
outsl
aam
pop
in
pop
std
mov
es
lcall
test
cmc
and
loope
push
mov
cli
cmp
add
dec
rcrb
aaa
pop
pop
aas
test
dec
repnz
int3
decl
mov
mov
mov
imul
inc
loope
adcb
loope
fsubs
subl
jo
icebp
mov
xor
xor
mov
sbb
sub
je
outsl
fsubrp
fcos
pop
out
xchg
stos
stos
inc
pushf
mov
pop
ret
jle
movsl
nop
fs
xorl
adc
mov
jmp
adc
add
sbb
adc
data16
dec
ds
pusha
inc
shl
mov
mov
adc
or
loope
sbb
jo
mov
loope
dec
push
pop
adc
movhps
sbb
fdivrl
out
loope
push
jbe
roll
int3
loope
cwtl
pop
movsl
adc
and
mov
mov
push
dec
loope
xor
fildl
loope
rcll
dec
push
mov
insl
loope
push
cmp
sub
and
and
xchg
fdecstp
into
iret
movsb
mov
xor
dec
out
loope
fdivl
mov
mov
aas
cltd
push
daa
pop
xor
rcl
out
jb
or
test
aas
mov
pop
test
mov
mov
cmp
push
ret
loope
mov
inc
or
and
xchg
inc
pop
mov
xor
sub
mov
clc
ror
mov
cmp
xor
pop
js
cmc
pop
fmuls
loope
mov
daa
aam
and
cmp
dec
mov
shlb
loope
add
sbb
aam
mov
mov
push
inc
jb
sarl
loope
mov
cmpsl
mov
sbb
mov
pop
stos
pop
cmp
gs
xlat
sub
or
fndisi(8087
iret
inc
ret
lahf
loope
pop
fstl
pop
dec
mov
out
mov
mov
pop
cwtl
sbb
dec
jnp
xchg
xor
loope
scas
mov
loop
loope
cmp
jo
pushf
push
in
push
jbe
xchg
cmpsb
outsl
loope
cmp
inc
cmp
fwait
pushf
shlb
jmp
jns
xorb
sub
or
ss
test
sub
mov
arpl
outsl
xor
pop
out
sub
fimuls
jne
pop
pop
iret
jmp
ds
mov
nop
shrl
mov
mov
leave
inc
mov
pop
loope
movsl
jo
jmp
neg
xor
xchg
fiadds
push
pop
jmpw
and
shrb
add
out
cli
les
mov
dec
loope
andl
cmc
fisubl
loope
cmp
or
mov
pop
push
loope
sti
and
pop
lods
loope
push
mov
push
pop
mov
add
popa
inc
loope
sbb
push
aad
icebp
loope
push
sarl
add
loopne
mov
jns
in
in
test
retw
cmp
fwait
outsb
stos
jl
add
stos
rorb
pusha
out
mov
outsb
mov
push
and
aaa
in
xlat
mov
jns
and
inc
test
in
pop
loopne
dec
repz
inc
enter
pop
mov
loope
mov
inc
add
rcrb
icebp
shll
cwtl
loope
xor
fsubrl
lahf
addr16
lcall
and
mov
in
ret
cltd
orb
loop
stos
adc
std
loope
jae
in
cmp
loope
call
mov
sub
call
shrl
std
or
test
stc
sahf
cmp
push
repz
xor
loope
and
push
mov
stos
or
rorl
fistpl
imul
jmp
shrb
mov
dec
pop
loope
sub
jl
adc
adc
scas
push
bound
in
int
cmp
loopne
loope
jnp
pop
movsb
in
je
dec
mov
or
xchg
ss
call
fstp
jg
mov
push
lea
add
push
sti
fwait
loope
daa
jmp
sub
lret
push
pop
adc
add
rolb
push
jae,pn
movsb
fnstsw
jge
lret
sti
xor
shrl
jno
jo
sub
push
out
aam
and
mov
adc
int
loope
push
jmp
out
lahf
andb
fwait
jmp
lds
loope
inc
mov
xchg
loope
xchg
in
sarb
xor
out
sbb
add
scas
in
data16
shl
and
call
inc
dec
das
mov
sub
inc
push
cmpsb
loope
xorb
lock
mov
sub
push
punpckldq
into
xor
mov
shl
lret
mov
loope
push
jecxz
xchg
aaa
gs
iret
loope
js
insb
and
jns
jb
test
xor
mov
xor
shrl
jne
sbb
dec
dec
adc
shrb
xchg
dec
out
cwtl
dec
rclb
dec
fucomi
cmc
insb
movsb
repnz
loope
sbb
and
les
loope
outsl
mov
pop
test
ret
lea
or
dec
loope
ja
jge
in
push
loope
cmp
and
jno
dec
arpl
push
ffree
stos
shrb
subb
sbb
xchg
mov
push
sub
jl
push
repz
mov
ss
mov
mov
loope
xchg
nop
sbb
mov
loope
jmp
jno
shrb
daa
jbe
mov
push
xchg
roll
pop
hlt
cltd
in
mov
and
jae
loope
repnz
mov
in
mov
xor
out
cmp
loope
and
pop
sbb
jge
in
jp
call
cs
in
mov
fs
or
into
mov
stc
out
test
pushf
loope
loop,pt
cltd
dec
lock
jp
popa
sahf
call
insb
jg
cmc
outsl
jo
mov
xor
loope
push
and
ret
iret
out
dec
fmuls
mov
cmpsb
mov
jmp
jbe
adc
ljmp
xchg
movsl
xor
data16
xchg
shlb
int
and
or
xor
push
mov
add
ret
hlt
xlat
movsb
xchg
loope
idivb
loope
lods
pop
out
add
loop
fcomps
cmpsl
call
pop
jo
ret
loope
mov
stos
jmp
imull
faddl
jne
pop
push
mov
xchg
mov
fwait
cmpsb
pop
shlb
sahf
dec
rcrl
adc
loope
mov
mov
push
cmp
jo
jmp
ret
loope
test
jb
inc
mov
int
xchg
inc
pop
xor
jecxz
lret
sbb
imul
add
andl
insb
mov
mov
cwtl
jge
dec
ret
sbb
jns
andl
mov
out
mov
shlb
sub
add
fxch
int3
int3
dec
lock
lret
loope
push
cmp
loope
mov
xchg
repnz
mov
mov
pop
sbb
xor
outsb
pop
and
stc
rcll
loope
xchg
xchg
adcb
pop
gs
das
mov
xchg
loope
movsl
je
rclb
xchg
loope
leave
pop
push
insb
in
pop
jmp
into
push
sbb
lods
lock
out
fstl
inc
mov
push
add
insl
and
gs
jle
mov
loope
jg
push
imul
pop
test
lahf
push
ret
inc
loope
lea
sbb
add
sub
aaa
xchg
movsb
rcr
sub
xchg
ljmp
push
or
lret
in
lahf
dec
iret
test
sbb
in
in
cs
scas
push
xlat
loope
and
jb
mov
sbb
test
sar
in
psraw
popa
sbb
dec
out
jmp
stos
jmp
mov
sahf
arpl
or
insl
inc
test
fmuls
xchg
ret
loope
sub
inc
lds
popa
imul
loope
push
sbb
je
arpl
insb
or
mov
sbb
cmc
dec
lcall
push
bound
test
loope
test
jle
sub
cli
loope
jge
lret
mov
in
sbb
push
push
inc
mov
adc
fdivl
lock
lret
push
loope
pop
xorl
scas
xor
inc
inc
or
rorb
fldenv
imul
mov
cwtl
fs
xchg
jmp
outsl
xchg
in
aaa
xchg
jnp
loope
into
push
push
loope
fstps
push
mov
or
insl
push
jns
je
cmpsb
popa
hlt
gs
fcomi
aad
pop
cmc
and
bound
loope
push
ret
cmp
stc
loope
jp
xor
lock
insl
jmp
mov
sub
jno
inc
sahf
and
adc
int3
jg
aaa
shl
push
ret
xor
add
in
out
mov
cmp
test
xchg
mov
and
jo
je
int
mov
fbld
jb
mov
push
inc
or
or
test
fmull
roll
sub
adc
fisubrs
cld
mov
aaa
loope
scas
clc
loopne
sbb
jo
push
stc
cmp
loope
jno
sbbb
jbe
loope
pop
sti
sub
stc
ss
sbb
data16
mov
shlb
cwtl
sub
push
in
sahf
add
jmp
sbb
add
ss
ja
lods
clc
push
out
loope
xor
jbe
gs
jmp
xchg
cmpsb
loope
lods
aad
mov
xchg
adc
scas
mov
cwtl
shlb
ljmp
imull
leave
iret
mov
mov
push
std
xchg
inc
loope
or
add
nop
or
test
es
jo
mov
sbb
lcall
jb
pop
arpl
mov
ret
jo
inc
rclb
loop
push
mov
push
mov
sarl
sub
dec
out
and
inc
mov
or
loope
jo
enter
das
jo
fdivrs
outsl
xchg
mov
push
cmp
movsb
leave
dec
push
subl
or
push
ss
fisubrs
iret
loope
mov
inc
movsl
loope
lods
pop
push
mov
mov
test
hlt
in
sub
fst
imul
mov
and
ret
aas
dec
mov
push
mov
xlat
js
ljmp
das
push
clc
loope
fwait
mov
scas
and
fabs
mov
loop
or
sbb
jno
xor
inc
inc
rcrb
xchg
stos
jle
sarb
loope
jl
int3
xadd
push
cmp
jmp
xchg
aam
out
pop
insl
adc
loop
inc
stos
lock
fdiv
and
in
mov
sarb
call
sysenter
bound
arpl
lcall
and
adc
fbstp
inc
imul
insb
pop
loope
mov
adc
sti
loope
popa
aaa
faddl
in
mov
out
or
pmaxub
jge
fisttpll
pop
gs
loope
and
xchg
filds
paddsw
aaa
shl
inc
sub
pop
loope
shrb
pop
insl
pop
cld
jl
cmp
out
mov
pop
dec
or
hlt
mov
inc
mov
and
xchg
add
sub
adc
test
loopne
pop
inc
adc
out
xor
ret
loope,pn
sub
pusha
sub
push
loope
loop
stos
adc
push
loope
aaa
cwtl
sti
mov
sbb
mov
loope
lods
ds
test
cmpsl
rcl
push
jnp
sbb
ret
out
sub
loope
lods
sub
loope
sub
cld
push
pusha
pop
fnstenv
ss
aas
jmp
cmpsl
jecxz
jg
sarb
movsb
fstpl
loope
push
bound
and
scas
loope
popa
gs
fcmovnb
push
shll
sbb
shlb
mov
push
loope
sub
mov
loope
adc
hlt
adc
leave
push
jl
pushf
cltd
xchg
out
stc
loopne
dec
icebp
fwait
mov
pop
stos
imul
loope
inc
jae
xchg
mov
jne
in
mov
decl
lods
fucomip
inc
push
sbb
dec
stos
mov
jge
inc
mov
mov
es
or
jo
loopne
push
xchg
push
out
out
push
bound
inc
and
sti
cmp
xor
pop
loope
push
cli
add
xchg
push
ja
testl
sbb
jae
xor
lret
fsubrl
loope
sub
pop
pop
in
inc
imul
ds
clc
pop
mov
imul
cmp
fidivs
shl
pop
mov
mov
xchg
sub
test
leave
xchg
ljmp
dec
push
das
mov
call
pop
dec
jecxz
jle
and
loope
mov
dec
cmp
xchg
cld
dec
or
pusha
mov
mov
lea
hlt
mov
loope
add
aad
or
add
adc
mov
push
and
xor
mov
loop
inc
sub
loope
in
cld
orb
in
outsb
rcrb
data16
adc
in
aad
mov
mov
mov
mulb
push
jns
pop
jp
in
mov
add
xorb
js
hlt
out
in
lahf
dec
jmp
mov
mov
out
cmp
jb
bndldx
lret
pop
dec
jmp
jecxz
gs
hlt
imul
lock
js
adc
jns
enter
add
in
pop
icebp
in
imul
test
mov
ficompl
mov
and
test
ret
scas
and
movsl
dec
loope
outsl
mov
adc
loop
jae
arpl
push
pushf
shll
shll
cmpsl
add
xor
in
inc
pop
inc
adc
loope
xchg
bt
addr16
mov
or
add
inc
loopne
xor
mov
add
cltd
mov
inc
mov
in
pop
sti
loope
gs
pop
xlat
bound
or
mov
sub
or
xor
jnp
loope
bound
push
loope
test
mov
fs
loope
jecxz
mov
xlat
rorb
in
ret
loope
xor
setl
inc
lock
sub
ficoms
pop
ja
in
push
push
jo
negl
dec
shl
inc
addr16
jns
cmc
insl
mov
cwtl
scas
loope
adc
in
cli
int3
loope
push
lock
out
mov
cmp
testl
mov
adc
sbb
psraw
imul
je,pt
cmpsb
mov
mov
loope
cmc
cmp
xor
and
out
jl
push
cmp
ret
or
push
or
outsb
bound
jb
jo
iret
sub
cmp
dec
jno
sub
test
jnp
lods
loope
lcall
pop
jl
cwtl
rclb
xchg
loope
cmp
mov
pop
or
jmp
jno
push
cmp
movsb
pop
imul
push
loopne
clc
mov
dec
dec
movsl
pop
xchg
add
outsl
out
cmpl
mov
xchg
or
test
call
cmp
dec
push
stos
xor
mov
enter
arpl
pop
std
and
sbb
sub
sbb
jo
sub
test
and
push
jmp
call
stos
mov
add
out
pop
and
outsl
scas
loope
stos
xchg
scas
adc
mov
pop
imul
push
pop
xor
jmp
and
int
mov
xlat
mov
aaa
loope
or
push
or
jmp
inc
aad
sbb
adc
repz
test
cmp
out
cmp
xor
push
dec
int
out
jns
loope
push
cmpl
jo
nop
xchg
stc
lods
mov
push
sub
enter
loope
jb
loop
xor
jno
inc
dec
sub
pop
mov
jge
ret
arpl
adc
push
jmp
xchg
cmp
orl
lods
and
adc
sbb
scas
nop
incb
ud1
mov
hlt
ljmp
push
push
lcall
jb
xor
jmp
popf
out
ss
rcrb
jg
jge
es
loope
loopne
push
scas
mov
xchg
inc
jmp
repnz
xchg
push
sub
fidivl
xor
or
std
in
loope
ja
ljmp
xchg
mov
xchg
frstor
addr16
fndisi(8087
xor
fsub
sbb
sarb
lret
scas
mov
jecxz
bound
push
pushf
pop
mov
test
popf
adc
arpl
movsb
loope
mov
das
dec
call
ret
jbe
loop
fs
and
pop
sub
add
insb
cmp
jmp
and
sbb
or
sti
aad
cltd
fisttpll
enter
pop
mov
loope
and
sbb
movl
add
push
jge
in
xchg
mov
mov
pop
popf
pop
add
jb
mov
loope
imul
push
loope
data16
test
es
rol
divb
jo
adc
and
int3
loope
push
push
leave
je
pop
or
inc
jo
dec
jne
jmp
loope
hlt
sub
mov
loope
aaa
sbb
jns
js
jnp
orps
adc
jecxz
or
sub
add
jae
cli
pop
rcll
lret
movsb
and
out
testb
xchg
loope
mov
adc
in
jl
pop
mov
adc
in
js
cmpsb
icebp
out
data16
mov
out
rcl
pop
ljmp
xor
lahf
shr
add
ret
imul
mov
dec
add
cmp
fistl
bound
jle
das
and
push
ljmp
pop
lods
sub
mov
ss
xchg
cltd
push
mov
mov
stos
mov
vmwrite
cmp
pop
and
les
out
push
popa
in
fldl
loopne
pop
add
shr
inc
insl
sub
cmp
pushf
mov
mov
inc
test
xor
ficompl
int
mov
xchg
mov
mov
or
lret
shll
adc
call
loope
jp
lds
sahf
fnstenv
cld
js
adc
inc
std
mov
ss
mov
jno
mov
in
or
cld
sbb
in
jle
std
loope
ljmp
iret
divb
add
or
jle
cld
adc
insl
ljmp
std
mov
cmp
icebp
xchg
loope
notb
jo
mov
lret
jle
pop
pop
loope
test
push
fildll
mov
addb
cmp
dec
xchg
sub
mov
pop
mov
jne
sub
xchg
pushf
lahf
loope
cmpsl
cmp
lret
loope
sub
and
cwtl
scas
loope
pop
es
outsb
mov
sarb
repnz
sub
test
out
hlt
insl
loope
or
out
sub
fsubrl
repnz
out
push
loope
cmp
insl
loope
stos
cli
xchg
sub
leave
das
dec
mov
popf
or
inc
gs
jns
jb
in
pop
fisubl
fsubp
repz
rcrb
xor
push
icebp
xchg
out
and
fcom
sub
je
sti
jbe
mov
lock
jne
jmp
test
and
adc
fdivl
imul
mov
xchg
inc
cmp
ds
stos
das
push
push
jo
cli
xchg
jo
pop
jg
cmp
adc
pop
jmp
rcr
jo
mov
and
out
repz
cs
and
xor
loope
lods
sarb
mov
push
xlat
in
rcrl
cmovbe
dec
loope
xchg
es
insb
xor
xchg
jo
idivl
fldt
loope
inc
mov
cmc
loope
pop
roll
dec
fwait
jns
ja
mov
inc
jecxz
adc
jns
dec
pop
loope
xchg
inc
jp
inc
mov
lahf
jne
xchg
rcr
ret
movsb
fnstsw
shlb
adc
arpl
xor
mov
cltd
jecxz
cmp
loope
bound
xchg
cmp
add
add
loope
jp
sbb
jne
loope
mov
int3
lcall
push
add
jp
push
out
bound
test
add
push
cmpxchg
sti
fs
xor
test
pushf
push
bound
add
or
stos
imul
popf
pop
mov
loope
in
fisttpl
lea
add
ds
mov
xchg
sbb
or
test
and
and
jmp
loope
in
mov
xor
gs
xchg
out
test
mov
dec
xorb
icebp
cmp
push
cltd
into
inc
jg
xchg
loope
lret
lea
mov
mov
shlb
xor
jmp
loope
adc
jl
cmp
lods
mov
inc
loope
das
stc
mov
loope
je
mov
loope
push
push
add
fcomps
lock
mov
sahf
loope
fstpt
mov
rcl
and
push
jno
mov
shrb
fcomps
ss
xacquire
jmp
jo
mov
sub
jno
lret
jmp
hlt
dec
pusha
mov
test
jmp
push
sub
mov
es
push
fsubrs
and
enter
pop
movsb
popa
lea
and
rclb
in
push
cmp
inc
xchg
shl
sub
insb
imul
ficoms
lods
push
stos
mov
cmp
push
dec
jnp
rorl
sarl
mov
jo
cs
lret
jmp
stos
dec
fsubp
aas
xchg
outsb
adc
mov
and
cmp
push
cwtl
mov
hlt
jge
jecxz
and
cmp
es
pushf
daa
gs
rorb
shr
mov
mov
mov
gs
loope
xchg
pop
in
sub
inc
fisubrs
pop
fsubs
scas
stos
sbbb
sbbl
mov
xchg
loop
fwait
add
push
cmpsb
leave
rcll
xchg
movsl
xor
fcomp
cwtd
vprotd
ljmp
loope
jns
mov
push
aaa
test
psubsw
mov
loope
aad
fistps
pusha
ret
dec
pop
leave
jge
pop
aas
loope
mov
sahf
int3
imulb
loope
jmp
jb
loope
dec
sub
jecxz
and
push
mov
jecxz
loop
loope
lea
ss
mov
dec
repnz
jb
loope
lds
cmpsl
or
mov
dec
jmp
jo
mov
stos
and
div
testl
mov
mov
bswap
jo
jno
nop
in
lret
and
jle
js
jmp
fxch
fisttpll
jo
add
lcall
xchg
pop
loopne,pn
das
mov
push
clc
aas
cmc
arpl
or
loope
sub
mov
or
scas
movsb
imul
push
imul
repz
out
push
loope
subl
das
mov
jbe
ret
rcr
jae
dec
sar
push
sub
pop
inc
or
mov
fwait
insl
imul
xchg
jns
mov
dec
stos
mov
mov
sbb
pop
cwtl
jp
outsb
mov
je
decl
push
fldenv
xchg
loope
fwait
in
pavgb
jle
test
iret
pop
add
xor
jmp
loop
sub
pop
enter
sbb
mov
out
mov
loope
jle
arpl
dec
cmp
loope
cmc
popf
lcall
adc
aad
pop
dec
xchg
add
icebp
cmc
and
jne
fs
bound
add
and
shlb
mov
mov
out
pop
xchg
jo
frstor
pusha
sbb
sbb
imul
dec
jb,pn
btc
cmc
imul
stc
sahf
lret
mov
inc
daa
sub
cwtl
and
inc
cli
loope
sub
push
and
imul
popf
add
add
mov
jmp
sub
rcl
mov
icebp
jmp
shl
mov
cmp
dec
std
daa
adc
pushf
in
pop
ret
ss
stc
in
aaa
repz
xchg
pop
push
jmp
js
test
addb
rcl
and
mov
out
mov
cmp
pusha
push
loope
or
and
jl
jecxz
cmpsb
std
call
mov
test
xchg
loope
lret
jns
ffreep
jl
dec
sub
lret
fmul
fwait
mov
icebp
mov
nop
loope
hlt
pushf
xchg
or
sbb
ret
jo
cmp
xor
aaa
loope
sub
adc
call
out
add
add
sbb
test
inc
or
loope
sub
sti
pop
push
xchg
leave
loope
jae
outsl
push
xchg
or
mov
fsubs
mov
fidivrl
or
cmpsl
rcl
push
dec
mov
pop
test
jns
nop
cltd
shlb
xor
into
in
xor
cmp
scas
test
imul
mov
pop
cmp
orl
cwtl
iret
and
out
add
and
in
inc
lds
dec
loope
imul
dec
pop
cmp
les
stc
dec
pusha
loope
movsl
je
mov
jmp
add
dec
popf
mov
in
aad
loope
mov
test
xor
lret
lock
mov
add
and
pop
cltd
test
scas
es
cmp
adc
in
inc
lods
into
aaa
jp
loope
cmp
mov
loope
adc
dec
mov
shll
aam
fimuls
imul
lea
loope
fs
call
mov
cmp
call
stos
pusha
jmp
nop
sbb
loope
fbld
sbb
or
bnd
mov
push
clc
cld
pop
out
cwtl
add
shlb
notb
jecxz
rorl
pop
or
jnp
mov
hlt
imul
xchg
xor
lods
lea
and
sbb
jnp
cli
jne
jp
push
daa
push
xor
les
xor
loope
insb
adc
idivb
and
shr
stos
daa
xchg
cmp
sub
jns
loope
out
xchg
sub
cmp
scas
xor
xor
mov
imul
xchg
dec
int
loope
pop
mov
or
xorl
and
mov
lods
and
cmp
jne
mov
add
mov
inc
loope
pop
inc
inc
shll
xor
int
jmp
inc
into
inc
cwtl
and
push
les
loope
jnp
call
or
loope
hlt
or
xchg
les
adc
rcrb
inc
iret
out
jbe
ljmp
jp
jg
ja
dec
scas
dec
xor
inc
mov
pop
in
jne
loope
in
inc
push
insb
repz
loope
pop
adc
add
cli
jmp
lods
cwtl
inc
jo
mov
aaa
xor
out
mov
loope
lcall
nop
in
cwtl
dec
sub
cmpb
cmp
mov
xchg
sbb
fisubs
and
outsl
add
popa
loope
and
jecxz,pn
mov
mov
and
gs
jo
and
out
pop
pop
mov
pop
clc
jmp
nop
mov
mov
js
iret
std
cmp
mov
cmp
mov
nop
popf
cs
jle
loope
jae
scas
jmp
mov
rorl
imul
sahf
xchg
scas
mov
pop
cmp
sub
push
cmpsl
popf
inc
dec
add
or
and
dec
add
ljmp
jecxz
addb
lock
loope
jnp
mov
loope
mov
mov
loope
mov
mov
push
xchg
insl
jo
jmp
push
push
in
fisubl
mov
movsl
add
cmp
jmp
outsl
loope
rorb
inc
loope
jp
jmp
pusha
jge
push
aas
mov
js
loope
push
mov
dec
loope
daa
add
jnp
or
test
add
xchg
dec
cmpsl
jns
jo
neg
lcall
loope
add
jo
scas
shll
mulb
sbb
jmp
pushl
jo
adcl
in
movb
fmul
dec
jle
ds
pop
inc
jo
cmp
or
in
push
adc
lcall
pop
add
push
mov
movsb
mov
ds
cmp
aaa
mov
add
sbb
loope
mov
cmp
rol
lcall
std
test
adc
push
addr16
cld
loope
aaa
and
adc
jmp
sbb
fabs
frstor
iret
scas
or
cmp
je
cld
mov
push
jae
ficomps
out
adc
imul
loope
rcl
fistl
mov
movb
cmp
xchg
aas
mov
adc
fstps
push
lret
sub
lea
into
cmp
xchg
loope
jp
fs
cs
sbb
xchg
push
adc
insl
sub
test
data16
xchg
js
sbb
jmp
mov
lahf
xchg
jp
loope
fdivp
inc
and
cmc
loope
xchg
sbb
cmp
fdivrs
nop
push
mov
fistpll
pusha
mov
fldt
push
jecxz
add
sbb
dec
shlb
push
add
mov
lock
bound
push
popf
loope
lea
dec
mov
imulb
ljmp
sbb
mov
rorb
add
xor
mov
cs
pop
loop
add
xchg
pusha
fs
loope
or
out
test
sub
std
xor
mov
iret
mov
rcll
xchg
js
shr
push
in
stos
bound
je
or
push
pusha
mov
xchg
popa
mov
pop
jbe
jle
hlt
out
iret
loope
push
lods
mul
std
adc
shlb
mov
in
andb
cltd
pop
loope
add
cmp
mov
adc
jnp
in
test
loope
cmp
cltd
hlt
shrl
outsw
mov
lahf
loope
test
adc
add
sahf
and
enter
ljmp
cmp
xchg
push
pop
xchg
insb
cmp
nop
test
or
mov
mov
testl
nop
outsl
cmc
jmp
fwait
shlb
xor
mov
scas
fsubl
push
enter
lock
mov
push
loope
repz
aas
ss
jne
sbb
mov
or
mov
pop
adc
push
loope
ds
loope,pn
imul
dec
xchg
fcmovne
shlb
mov
out
cmp
push
add
cmp
jg
push
xor
loope
testl
jb
loope
loop
cmpsb
loope
xchg
pop
lds
cs
das
outsb
xchg
aaa
inc
add
mov
mov
jecxz
popa
mov
daa
aad
pop
das
in
push
mov
stos
jmp
loope
ljmp
jo
sarl
jecxz
es
movsb
nop
jl
dec
ss
sahf
sub
jo
fistpl
into
loop
pop
mov
je
jns
mov
loope
std
pop
rclb
push
mov
push
adc
jecxz
out
xchg
fisubs
fwait
sbb
shlb
inc
cmc
bound
add
sub
js
push
daa
jmp
dec
add
movsb
rcl
loope
ja
add
inc
sub
push
mov
das
xor
xor
pop
mov
andb
int
loope
push
jns
loope
xchg
scas
lret
sahf
mov
sti
mov
ljmp
std
in
adc
sub
cmp
leave
lods
loope
lds
xor
fnsave
aaa
test
adc
push
aas
or
movsl
push
inc
int3
mov
repnz
pop
dec
sarb
xor
mov
stos
loope
insb
push
aam
insl
outsb
or
mov
fcompl
dec
andl
loope
adc
insl
inc
loope
mov
pop
mov
adc
cmc
cld
pop
aad
cmc
dec
loope
shrb
aaa
stos
shl
js
sub
loope
add
jnp
sbb
mov
jmp
loope
aad
pop
or
jp
inc
mov
or
mov
stos
clc
ja
dec
adc
jmp
ret
lods
in
mov
aaa
ret
inc
repnz
xor
cld
and
cwtl
dec
mov
pop
and
lock
mov
in
adc
cmpsl
and
push
jmp
insb
repnz
in
jecxz
jo
adc
dec
loope
push
jno
sub
loope
mov
stos
add
lods
das
out
push
mov
push
lock
aaa
pop
lock
insl
in
jno
in
sub
loope
outsb
outsl
lods
inc
int
dec
loope
cld
sahf
and
mov
leave
imul
cmp
loope
repz
mov
lret
cmp
loope
sub
scas
loop
cli
loope
int
push
mov
int3
dec
xor
hlt
cmpsl
or
and
xchg
rcrl
adc
jg
dec
cld
mov
pop
jne
fildll
add
mov
mov
push
clc
lret
xchg
imul
inc
ficoml
inc
in
mov
cli
stos
sub
xchg
imul
jno
mov
or
xchg
aam
cmc
sbb
loope
ljmp
cmp
shl
loope
test
push
add
inc
xor
orl
inc
xchg
loope
push
sarl
es
loope
in
adc
add
outsl
mov
stos
lret
push
pop
cld
in
loope
pop
push
mov
imul
sbb
js
andb
loope
mov
jne
mov
fisubl
nop
addr16
clc
rol
mov
mov
outsb
imul
sbb
mov
es
pop
fsubs
insl
scas
jno
out
jg
mov
mov
out
loope
ja
arpl
mov
pop
cmp
shrb
lods
xchg
mov
or
cli
pop
jl
xchg
dec
mov
loope
jb
inc
imul
mov
std
pop
fidivrl
mov
sahf
sub
loope
aas
daa
mov
lret
jns
imul
loope
mov
or
movsb
mov
jnp
mov
lcall
xchg
push
cmp
nop
mov
fcoml
mov
rclb
jecxz
lock
and
loope
rcrb
push
mov
cmp
mov
outsl
pop
cwtl
sarb
push
in
jmp
loope
lahf
adc
or
add
loope
xor
inc
add
dec
cmpsb
in
adc
das
jbe
sub
ja
frstor
push
out
jnp
mov
pop
bound
cltd
mov
sub
in
sub
and
add
xchg
ja
push
cmpsb
loope
pop
or
inc
inc
push
xchg
jecxz
jb
xor
xchg
call
push
daa
inc
dec
shll
lret
or
stos
sub
cwtl
enter
pop
and
and
or
arpl
ficoms
pop
aam
outsb
leave
lods
and
mov
inc
inc
imul
loope
ret
enter
adc
add
add
loope
pop
mov
mov
mov
mov
xchg
sahf
fdivrl
add
stc
adc
and
jg
mov
mov
push
mov
xchg
ja
mov
loope
xor
cmpsb
test
stc
jp
xchg
sbb
rolb
out
lret
enter
bound
outsb
loop
sarb
fdivs
or
and
mov
sti
sub
push
mov
mov
rcrl
cwtl
aad
shl
push
test
shrl
loop
fsubrl
pop
ss
sbb
loopne
fstpt
mul
xchg
jecxz
loope
dec
jecxz
xor
gs
loope
jmp
sbb
daa
jne
dec
cmp
mov
in
cmpsl
pop
shlb
jecxz
test
add
arpl
into
test
xor
mov
ja
add
push
cmp
mov
dec
pop
adc
sub
and
rcl
xchg
stos
dec
mov
and
and
fs
pop
adc
mov
mov
mov
addr16
push
cli
loope
push
ret
cmp
sbb
inc
outsl
mov
sbb
lock
push
shl
cltd
das
lock
or
jecxz
jo
in
leave
add
mov
addr16
loope
jns
test
loope
adc
push
sub
xchg
xchg
loope
adcb
inc
call
push
dec
daa
and
and
fs
cmp
lods
dec
xor
loopne
mov
test
mov
loope
cwtl
popa
lods
adc
mov
nop
fdivr
push
add
jg
loope
shlb
push
xor
mov
inc
aaa
lods
inc
cwtl
arpl
clc
sbb
and
cmp
lock
arpl
leave
pop
rol
push
jns
pop
movsb
les
sub
add
adcl
jae
jnp
movsl
mov
imul
push
mov
loope
ljmp
loope
mov
idivl
mov
push
lcall
push
dec
out
and
je
and
xor
clc
loope
jns
inc
fwait
dec
pop
sbb
pop
es
stos
xchg
cmp
push
or
addr16
add
scas
lods
dec
into
out
xor
in
jecxz
xorb
pusha
mov
mov
add
mov
lock
lds
dec
inc
and
fdivr
in
popa
adc
loope
imul
fwait
popa
dec
cmp
xchg
test
adc
ficoml
pop
mov
fsubrp
sbb
loope
xorps
push
and
pop
sbb
insb
mul
sub
and
fbstp
out
and
mov
out
bt
loope
imul
lret
dec
aas
cli
imul
faddl
dec
cs
test
loop
loope
call
sbb
jmp
add
std
rolb
mov
loope
push
movsl
or
push
loope
push
xchg
loope
daa
jno
cmp
sbb
lahf
mov
mov
mov
aas
pop
cmp
mov
adc
jecxz
jnp
mov
push
mov
lods
lods
call
enter
dec
loop
dec
jmp
loope
jge
sub
sub
icebp
add
shll
loope
push
or
movsb
dec
push
es
insl
loope
pop
inc
ss
mov
sub
loope
dec
popf
pushl
sbb
jp
or
loope
fmull
dec
inc
in
xchg
mov
loope
enter
aam
pusha
loope
cmpsl
mov
dec
xchg
lods
insb
and
mov
pop
std
dec
movsl
loope
jbe
arpl
movsb
aam
sar
daa
loope
pop
pop
or
cmp
pop
ds
dec
outsl
jecxz,pt
mov
bound
jne
in
xor
dec
adc
sbb
jg
bound
insb
pop
shll
dec
orl
xor
loope
adc
mov
movsl
jo
std
pextrw
scas
out
pop
out
xchg
jno
sbb
popf
pop
and
push
shl
pusha
or
icebp
loop
pop
loope
jmp
in
ret
inc
loope
jns
ss
dec
repnz
jo
adc
dec
sbb
xchg
aam
jge
dec
cmpb
insb
pop
push
jae
in
aaa
out
inc
xchg
out
mov
sti
les
aam
clc
jmp
xchg
sub
bound
in
fs
lret
adc
ret
jae
rorl
adc
push
pop
dec
push
mov
and
xor
jbe
sub
inc
push
aad
mov
loope
xor
lock
mov
xchg
jne
mov
xlat
cmpsl
loope
bound
sub
lock
pop
pop
out
sti
lods
dec
mov
loope
or
test
loopne
fnstcw
lcall
hlt
loope
xchg
adc
insl
cmp
mov
mov
add
dec
and
push
xchg
movl
xor
iret
test
inc
dec
cli
repz
loope
sub
fstpt
add
xor
xchg
in
adc
pusha
fsubrs
int3
xchg
xor
sub
in
inc
mov
pushf
mov
out
or
scas
mov
pusha
xor
mov
arpl
repz
cmp
cli
out
inc
movups
add
pushf
jne
sbb
loope
mov
shl
out
insl
mov
push
std
loope
sbb
dec
lock
xor
insl
les
stos
pop
js
in
xchg
or
jle
pop
xor
les
jge
mov
sbb
jmp
and
mov
jae
shll
fadd
xor
push
cmp
dec
pop
jne
add
fs
gs
and
jnp
stos
loope
aad
mov
mov
loope
jge
jl
daa
jnp
loope
push
xorl
sbb
mov
cmp
mov
cmp
in
int
movsb
mov
adc
inc
mov
xchg
sarl
in
and
shr
test
loope
push
mov
cmp
mov
rorl
loope
jnp
sub
jmp
and
cli
test
js
das
or
dec
adcb
lock
jo
popa
ss
jp
jecxz
int3
pushl
xchg
adc
shll
lahf
mov
mov
or
outsb
jge
xchg
and
movsb
cmp
cmpsl
xchg
jae
rcrb
fadd
mov
jecxz
push
addl
add
movsl
mov
in
cmp
pop
es
ja
inc
into
int3
ret
fidivs
loope
mov
mov
push
imul
xor
mov
dec
repz
and
mov
cmpsl
sub
dec
pushl
addr16
leave
pop
loope
jecxz
xor
imul
ljmp
rcr
dec
movsb
xor
jmp
ret
mov
dec
lea
rorl
es
fadds
inc
loope
mov
xor
loope
pop
push
scas
mov
into
mov
xchg
movsl
xchg
mov
or
addb
mov
jmp
in
shrb
loope
pop
and
push
push
lds
adc
dec
lods
jmp
fdiv
and
cmp
xor
pushf
fwait
xchg
dec
pop
add
stos
xchg
rol
xor
jecxz
push
popf
cs
loope
dec
cmpsl
xor
pop
in
loope
fcoms
sub
ljmp
bound
cmpsl
pop
repz
scas
xlat
mov
sub
ret
lock
in
jb
cld
mov
cwtl
iret
cli
adc
lret
xorb
loope
push
mov
scas
dec
or
xchg
adc
jecxz
or
mov
test
call
push
mov
mov
test
cltd
pop
loope
je
sub
adc
lock
mov
inc
dec
iret
and
xchg
mov
outsl
xlat
shl
push
in
sub
or
test
mov
aas
loope
int
out
pop
insl
jge
scas
outsb
xorl
jb
or
fs
add
sbb
push
repnz
mov
dec
pushl
arpl
xchg
ljmp
fiadds
enter
pop
stos
xor
in
push
out
cwtl
pop
aam
push
inc
je
push
and
add
repz
ficomps
mov
leave
push
jo
movsl
bound
inc
mov
jge
adc
loope
push
adc
fisubl
fsubrl
push
fmuls
loope
hlt
ljmp
stc
mov
xchg
jp
in
stos
loope
push
lea
loope
sti
jmp
loope
mov
xor
getsec
pop
daa
push
stc
sub
mov
pop
popa
add
pop
inc
inc
pop
push
jg
imul
pop
loope
mov
das
repz
loope
jle
push
cwtl
cmp
pop
mov
shrb
shll
jecxz
fwait
add
lea
dec
loope
imul
add
addr16
inc
jmp
inc
jo
mov
dec
leave
in
or
lahf
loope
push
jne
repnz
ds
ja
xchg
mov
pop
pop
out
in
loope
xlat
sar
dec
fldcw
out
in
sahf
dec
jbe
lods
loope
pop
jg
std
pushw
push
xchg
inc
cwtl
testb
addr16
mov
jo
sub
cmc
adc
pop
or
popa
cltd
or
sbb
mov
adc
dec
add
ss
repnz
adc
lods
adc
pop
cli
lods
mov
bound
hlt
outsb
imul
xor
mov
mov
pop
adc
adc
mov
mov
and
popf
aad
es
xchg
mov
xor
repz
fwait
mov
std
jmp
outsb
cmc
imul
inc
jmp
dec
add
test
cmc
xchg
out
or
jne
jecxz
sbb
loope
sahf
ficomps
loope
pop
dec
outsb
loop
mov
ljmp
lods
sarb
in
push
adc
inc
lds
cmp
fbld
push
call
aam
push
stos
clc
gs
lock
xor
addr16
or
pusha
push
loope
int
fyl2x
fsubp
mov
imul
sar
xchg
lock
lret
lods
mov
mov
lret
mov
loope
mov
loope
xor
je
lret
lock
sbb
call
loope
adc
mov
push
fists
or
pop
cmp
repnz
add
jmp
adc
movsb
sbb
repnz
fwait
lcall
or
cltd
jnp
push
roll
add
test
or
or
loope
pop
ljmp
or
loope
loopne
lret
pusha
and
dec
out
dec
mov
outsl
ljmp
xchg
mov
pop
mov
push
jbe
xchg
xor
xor
clc
add
in
cli
pop
mov
add
push
mov
sbb
insl
lcall
mov
es
fdivr
shrl
xchg
inc
lock
sbb
or
lret
loope
cmp
jb
loope
jecxz
das
and
subl
push
shlb
stos
pop
sub
sub
jae
fisubrl
xor
sub
stos
push
inc
mov
mov
leave
jo
adc
or
inc
loope
decb
xchg
jo
pop
ficompl
aad
cmp
loope
ss
cmp
jnp
cmpsb
fninit
psllq
rolb
inc
icebp
repz
fidivrl
imul
sbb
xchg
loopne
xchg
cli
add
xchg
cmp
notb
xchg
loope
inc
mov
nop
loope
cmp
push
loope
movsb
enter
dec
mov
fs
add
pop
push
sarb
and
pop
jecxz
fadds
int3
xor
pop
sub
xchg
in
out
cmp
cmp
in
cmp
leave
loope
popf
insb
mov
iret
test
pop
pusha
in
xor
mov
xchg
and
pop
jb
out
inc
idivl
mov
cmp
stc
add
or
push
in
shrb
outsl
fcoms
and
loop
inc
mov
sbb
pusha
fs
lock
adc
subb
nop
inc
push
mov
jl
out
jno
lods
cmp
aad
lret
add
xor
loope
mov
adc
stc
inc
loope
nop
movsb
outsl
cmp
fwait
push
pop
and
mov
adc
adc
push
push
mov
add
mov
mov
jnp
loope
lods
sahf
pusha
xor
push
rcl
push
xor
mov
loope
or
loope
and
mov
shrl
outsl
xor
jo
mov
mov
addr16
sbb
fnsave
xor
cltd
shlb
mov
mov
gs
in
inc
loope
cmp
int
and
ljmp
aad
mov
out
sub
or
into
adc
fcmovbe
push
rcrb
xchg
lret
and
imul
adcl
dec
pop
enter
les
sub
jno
mov
aas
pusha
loopne
imul
xchg
in
adc
inc
cmp
mov
test
scas
icebp
cwtl
loope
jp
int
pop
cli
xchg
loope
add
dec
adc
out
jnp
imul
pop
aam
xchg
scas
int
imul
cwtl
jl
mov
mov
cmp
xchg
xor
dec
jecxz
push
loope
mov
cltd
ds
int3
ss
fs
gs
jp
popa
loope
mov
je
xchg
mov
inc
shrb
outsb
sbb
icebp
arpl
mov
xchg
shrd
das
push
dec
xor
jns
jecxz
loope
mov
loop
loope
into
mov
or
sub
loope
mov
mov
or
test
xor
imul
ljmp
mov
fsubrl
out
xorl
jo
sbb
loope
test
or
arpl
iret
push
dec
lods
pop
loope
push
cmp
xchg
cmp
pop
call
rcrl
cs
sbb
push
and
mov
loope
ja
outsl
push
loopne
push
mov
xor
lods
arpl
mov
loope
sbb
out
and
imul
mov
jp
das
inc
sahf
in
ret
mov
icebp
outsl
rol
jo
into
cmp
mov
jmp
cltd
cmpsb
dec
inc
loope
and
jo
test
xchg
out
imul
cmpsl
stc
push
pushf
sub
ss
lock
insl
cmpb
loope
mov
test
mov
addr16
and
xchg
loope
enter
test
shll
hlt
fs
cwtl
xchg
loope
push
fsubs
loope
jae
outsb
jns
mov
cs
fcoms
add
mov
mov
loopew
xlat
ret
push
and
adc
pop
loope
sbb
test
movsb
jo
es
mov
or
dec
ds
je
jo
mov
xchg
mov
mov
sbbl
data16
lret
mov
adc
xchg
mov
loope
rcr
sub
out
cmp
ss
mov
bound
das
aam
movsb
push
cmp
gs
aas
sbb
out
mov
aam
sub
out
bound
inc
jg
imul
xor
repz
ljmp
cmp
sarl
loope
and
je
and
daa
sub
sbb
and
mov
add
mov
cmp
call
das
mov
jne
andb
sarb
lret
iret
aam
popa
mov
std
ficomps
adc
es
jb
mov
mov
jmp
xor
repnz
call
loope
jg
sub
pop
xchg
push
jo
addl
test
pushf
cmpsl
mov
lcall
fs
jmp
adc
in
out
mov
sub
fmuls
sub
cmpsb
out
pushf
cmpsl
loope
or
stos
mov
ret
loope
xlat
sbb
data16
xchg
and
das
orl
insb
lock
jno
aam
push
xchg
arpl
std
xor
add
and
repz
repnz
jl
sahf
xchg
loope
or
inc
loope
inc
xor
movsb
pop
lock
testb
in
lahf
aam
aad
fs
outsb
insb
dec
stc
jo
dec
pusha
cld
loop
or
dec
cmp
loope
xchg
cwtl
pop
adc
dec
loope
jp
mov
scas
rolb
call
push
mov
jge
mov
inc
or
cmp
pop
mov
lea
loope
adc
je
mov
jb
aad
cwtl
jmp
loope
pop
dec
fnsave
pop
lahf
cmp
lret
inc
xlat
loope
jne
mov
xchg
dec
adc
jl
add
sbb
or
out
xor
jmp
add
push
popf
dec
xor
scas
mov
pusha
mov
add
shl
out
push
jge
xchg
adc
add
cwtl
pop
pop
in
jp
adc
fildll
mov
loope
repnz
jmp
dec
jns
loope
repz
push
jmp
dec
std
push
and
lcall
mov
and
pop
cmp
push
out
mov
movsl
mov
out
xchg
loope
mov
mov
dec
push
cli
xchg
fnstcw
loope
mov
pusha
cmp
lea
loope
jge
pop
jne
sub
loope
push
stc
out
out
loope
xchg
out
inc
and
jo
ret
sbb
scas
inc
into
rolb
popf
aaa
and
loopne
mov
adc
mov
jnp
in
sbb
loope
idivl
cwtl
pop
xor
mov
pop
mov
fcoms
pop
imul
mov
out
xor
rcrb
jmp
push
insl
mov
mov
cmp
add
into
jmp
lock
loope
push
fcmovb
loope
adc
in
fucom
gs
lock
cmp
shl
jae
push
arpl
loope
jne
idivb
xor
cmp
in
aad
loope
loope
push
lcall
std
dec
add
sbb
cmp
and
int3
lahf
dec
ljmp
loope
jl
iret
adc
mov
in
imul
loope
je
pop
add
push
test
fisttps
cmp
inc
ret
insb
mov
cmpsl
add
jo
out
xchg
xchg
repz
popa
stos
lods
jge
and
dec
in
inc
loope
xchg
add
in
push
cltd
gs
popa
call
rolb
jle
loope
cs
sahf
cmpsb
loope
mov
lds
ja
mov
sub
pop
enter
or
pop
loope
and
fimuls
mov
popf
loope
shrl
xchg
in
test
rol
sar
jb
xchg
lcall
in
mov
jmp
jle
shlb
inc
xor
insb
loope
out
jge
inc
push
ljmp
jecxz
jo
test
cwtl
inc
and
es
mov
push
sub
xorl
inc
das
jmp
loope
mov
mov
cmpsb
xor
sarl
mov
ret
in
inc
clc
imul
sahf
mov
add
mov
pop
testb
stos
icebp
lods
adc
jmp
loope
outsb
jbe
aam
mov
mov
scas
sbb
add
in
in
cmpsl
movsl
xchg
decl
hlt
lret
or
repz
dec
dec
jnp
fimull
loope
repnz
jo
jne
int3
and
rorl
repz
jno
sub
pushf
ret
add
xchg
lds
lret
and
and
mov
cld
loope
add
sahf
push
pop
push
dec
dec
add
in
mov
xchg
push
sbb
jge
scas
scas
push
xchg
mov
jmp
vpsllw
ret
xchg
psadbw
mov
cmp
jecxz
sub
test
add
out
es
jbe
add
mov
lods
jae
dec
loope
stos
je
mov
cmc
adc
cmp
mov
pop
push
loope
aaa
and
ret
jmp
pop
mov
call
fidivl
ss
jmp
add
push
mov
in
cld
roll
loope
mov
in
sub
arpl
dec
or
std
popa
mul
and
data16
int
outsb
iret
cmp
loope
adc
dec
pop
sbb
test
lret
sahf
sbbl
pop
sbb
test
push
insl
lods
sub
sti
dec
std
sahf
jmp
jecxz
std
jge
loope
shrb
jg
inc
call
cmpsl
push
loope
pop
fsts
cli
int3
adc
gs
push
cltd
fcomps
test
loope
out
and
push
push
lret
loope
dec
stc
pop
pop
xor
cltd
loope
jns
loopne
fildl
jo
xchg
add
call
push
and
cwtl
repz
sahf
loope
and
mov
adc
inc
inc
fld
loope
xorl
loope
ret
xchg
test
fs
rcrb
loope
push
xchg
ljmp
lret
test
loope
aad
enter
in
aam
popf
cwtl
or
fldenv
adc
mov
shl
mov
cli
jmp
mov
push
leave
shlb
repnz
jns
outsl
popf
jecxz
imul
fbstp
insl
inc
fwait
aam
adc
xchg
loope
fists
pop
neg
jbe
das
sti
clc
aam
add
sub
pop
outsl
sahf
jp
lcall
in
fisttpl
dec
mov
pop
fmul
iret
pop
loope
mov
sar
in
sub
sti
cmp
jno
jp
addr16
pushf
jge
ljmp
fs
jb,pt
jecxz
repnz
dec
xor
cmpsb
fiaddl
adc
dec
in
add
sub
sbb
stos
loope
pop
dec
mov
inc
icebp
inc
loope
out
adc
es
or
stos
in
cmp
bound
fs
shrl
cli
xchg
and
cmp
mov
ret
loope
outsb
out
adc
sub
sbb
ljmp
push
xchg
jo
shrb
std
loope
xchg
push
jb
fisubs
paddb
mov
mov
jl
testb
push
sbb
in
das
scas
les
inc
loope
leave
xchg
adc
sahf
push
enter
xor
mov
in
or
test
mov
dec
loope
inc
fsubrl
or
add
xor
rcrl
ja
clc
fiaddl
inc
push
sti
mov
imul
ljmp
int
out
mov
mov
scas
and
push
xchg
loope
cmp
jg
mov
nop
imul
mov
in
loope
jmp
fwait
je
ljmp
adc
mov
xchg
rcrb
fsubs
mov
das
xor
xchg
mov
sub
dec
xchg
test
jb
lret
shlb
push
jl
push
sarb
shlb
and
cmp
mov
popa
outsb
loope
add
push
data16
into
cmpsl
mov
mov
sbb
add
out
lcall
pushl
pmuludq
loope
icebp
pop
test
jnp
mov
loope
lcall
loope
dec
sbb
ret
ljmp
sub
adc
cmp
lods
and
lock
das
dec
mov
loope
pushf
push
add
loope
xchg
mov
loope
jmp
aaa
sarb
add
loope
mov
loope
hlt
mov
lock
scas
jns
mov
pop
cs
out
imul
stc
loope
adc
inc
jmp
pop
lahf
and
in
loope
bound
std
add
cmovb
loope
adc
sbb
test
sti
sbb
and
iret
jle
mov
call
or
mov
loope
mov
pop
shr
dec
jge
mov
add
jg
shll
sub
fcomip
loope
jae
imul
xchg
inc
sbb
je
push
pcmpgtb
fsub
test
add
loope
adc
test
mov
jns
sub
cmpsb
std
aam
jmp
lcall
jne
dec
add
fnstsw
sti
mov
pop
aaa
addr16
and
fs
jge
loope
test
sbb
loope
popa
lods
xchg
mov
xchg
adc
push
test
add
and
push
inc
sbb
push
adc
je
inc
mov
sub
sti
in
jmp
loope
frstor
daa
popf
js
loope
icebp
mov
cwtl
loope
add
lods
imulb
out
loopew
sbb
jno
jo
inc
rcl
fldln2
dec
enter
mov
pop
push
loop
push
in
loope
sub
ret
and
or
in
mov
lods
cmp
loope
xor
jnp
push
stos
popl
sbb
subl
nop
or
rol
out
adc
and
mov
in
lcall
roll
pop
or
out
cmp
nop
lock
addr16
cltd
mov
add
push
jo
shll
inc
xchg
call
loope
jmp
jns
lcall
jge
push
fadd
imul
xchg
in
test
test
loope
ds
jmp
mov
std
into
ss
loop
xlat
or
add
loope
push
push
loope
ds
or
ljmp
out
lcall
ds
imul
in
jmp
sbb
out
push
rorb
ret
rclb
arpl
xlat
mov
pop
iret
je
out
inc
loop
mov
pop
paddd
loope
mov
dec
popf
cs
in
push
xchg
jnp
cltd
jbe
lret
imul
movsl
or
stc
adcl
test
sub
lods
or
cwtl
loope
orl
fildll
loope
out
xor
mov
ja
gs
out
dec
xorb
add
hlt
popa
lock
pop
nop
jmp
aam
shr
cs
mov
mov
xor
adc
dec
loope
sbb
adc
out
loop
cli
daa
out
testl
mov
je
add
inc
loope
sar
cltd
std
shlb
scas
loope
js
push
call
pop
xchg
xor
loope
insl
fistpll
jmp
outsb
bound
and
xchg
lcall
loope
cmp
bound
pop
adc
jmp
push
ret
cmp
lods
nop
xor
shrb
mov
cltd
mov
das
xchg
scas
fnstenv
dec
clc
jb
jns
ljmp
sub
xchg
xlat
movsb
jb
loope
pop
fidivrl
add
scas
loope
jnp
ret
pushf
sbb
mov
addr16
cmp
jmp
xor
pop
sbb
xor
xchg
mov
lods
loope
push
test
rorl
sub
test
jo
jle
mov
mov
loope
testl
dec
add
dec
loope
movsb
mov
mov
daa
jp
outsb
dec
loope
dec
aad
iret
push
lret
sarb
xchg
sbb
cs
les
xor
loope
mov
loop
insb
sub
bnd
xor
jb
test
fsubp
dec
pop
popa
inc
pop
jg
mov
in
dec
jb
movsb
lea
outsb
inc
ds
or
and
lock
sti
pop
inc
test
adc
loope
lret
fwait
cmc
fstpt
fabs
mov
inc
cmp
insl
fsubrl
xchg
mov
xor
rclb
clc
out
mov
sahf
loope
cmpsb
push
cli
bound
loope
jl
pop
add
push
pop
insb
inc
orb
aas
pop
sbb
pop
and
fsub
leave
cmp
nop
cwtl
loope
scas
aas
lods
ret
dec
int3
jo
cmp
push
push
nop
fwait
dec
and
test
or
repnz
add
push
js
ror
push
mov
jmp
mov
dec
in
and
call
mov
jne
jnp
lcall
imul
cltd
leave
loope
cmc
clc
mov
out
loope
hlt
mov
loope
sub
addb
add
ljmp
cmp
cmpsl
or
inc
push
jecxz
subb
xchg
xchg
iret
dec
nop
adc
mov
xchg
and
mov
loope
xor
lcall
and
mov
inc
push
push
arpl
sub
leave
cld
loope
sti
ds
ret
jge
inc
xchg
aam
jmp
bound
sbb
add
out
mov
cmp
loope
xchg
stos
pop
add
rol
in
mov
mov
loope
pop
xchg
push
dec
sbb
jo
sbb
pop
aam
adc
out
popf
cmp
cmp
sbb
in
add
pop
popa
icebp
movsb
shlb
jge
jmp
rep
mov
push
fstps
and
pop
and
or
jecxz
imull
jnp
icebp
loope
ret
cmp
mov
aad
pop
std
mov
stc
loope
sbb
jmp
xchg
sub
push
arpl
lds
push
or
mov
adcb
cmpsl
loopne
int3
sub
repz
pop
movsb
sbb
loope
imul
lds
ja
jmp
loop
scas
rcrb
and
ss
into
mov
jb
repz
loope
sub
or
scas
in
mov
xchg
jmp
rcrb
shr
add
xchg
jecxz
imul
sub
xchg
pushf
xchg
cmp
inc
std
scas
pop
add
push
and
out
and
in
sbb
test
adcl
cmp
ret
jg
mov
test
loope
adc
mov
pop
jnp
js
std
and
ljmp
out
push
jne
out
adc
add
jmp
xorb
js
rcrb
fidivl
inc
ja
out
cwtl
loope
cli
pop
cld
lock
pop
loope
sub
mov
mov
inc
dec
hlt
test
outsb
push
push
inc
imul
cmpsl
loopne
bound
mov
std
dec
repnz
jae
pop
mov
cwtl
test
loope
addr16
mov
outsl
repz
scas
shrl
xchg
dec
loope
das
cld
push
sti
rcrl
clc
test
enter
popa
sub
rorl
outsb
lahf
or
jge
mov
outsl
push
sub
sub
jne
aam
sbb
lock
mov
or
jbe
nop
gs
in
loope
push
push
js
jns
rcrb
xchg
imul
lock
jno
test
sbb
mov
mov
mov
data16
add
aas
add
push
inc
or
or
xor
call
fs
sbb
pop
movsl
and
shrl
add
and
push
mov
sub
cli
loope
mov
shl
je
loope
fwait
js
or
repz
adc
fistpll
xor
adc
adc
mov
add
jecxz
push
loope
dec
or
out
pushf
in
loope
sbb
rorb
add
pop
dec
fs
and
push
and
sub
scas
addr16
sub
nop
mov
pop
loope
call
test
mov
enter
or
sub
mov
cmp
in
icebp
loope
or
out
mov
cmp
loope
lea
lods
or
in
xor
cmpsl
lock
loope
jmp
call
adc
test
jmp
lret
and
sti
lods
dec
mov
fcomps
add
test
adc
icebp
push
cld
shr
loop
lock
mov
xor
shlb
loope
fldl
or
fwait
shll
push
rclb
loope
push
arpl
mov
mov
orb
xorl
pop
daa
loope
clc
flds
xchg
inc
in
xchg
adc
es
xor
and
ja
inc
nop
in
int
or
cli
loope
inc
push
clc
fcmovnbe
scas
lods
loope
jmp
outsb
mov
xlat
xor
mov
push
dec
js
sub
cwtl
lods
dec
jg
rol
add
push
jo
imul
hlt
loope
das
pop
cli
mov
lret
pop
jl
or
pop
rorl
cmp
push
hlt
shlb
add
rcrb
mov
imul
or
xchg
or
mov
movsl
add
or
mov
mov
add
clc
dec
out
add
xchg
loope
mov
mov
es
das
pop
pop
in
loope
test
dec
test
xor
cld
loope
aad
pop
inc
xor
add
dec
mov
jo
cltd
pop
ljmp
mov
into
js
and
lret
mov
jmp
loope
lcall
loope
or
loopne
adc
rorb
add
xchg
mov
xlat
test
xlat
mov
jnp
add
cmp
xchg
leave
sbb
mov
in
inc
xor
loope
outsb
cmp
call
mov
jo
hlt
pushl
cmc
pop
lock
cmp
inc
mov
arpl
daa
and
jo
lock
sub
and
adc
shl
mov
loop
test
xor
mov
mov
inc
div
stc
xchg
popa
mov
test
dec
scas
mov
mov
xorb
fsubrs
xchg
jecxz
rorl
push
sahf
xor
mov
jmp
and
xor
std
fdivr
daa
and
mov
dec
mov
jnp
ret
loope
sbb
dec
sahf
movsb
aam
outsl
loope
outsb
inc
fsubrp
and
xor
xchg
sub
loope
mov
push
loope
cmp
test
fs
cltd
rol
xchg
addl
push
add
loope
mov
scas
sbbl
aas
dec
loope
add
leave
xor
mov
ss
mov
or
or
and
lods
dec
addl
cld
cmc
mov
pop
cltd
rclb
mov
mov
shl
es
jb
xchg
jnp
lock
pop
inc
stos
jmp
cmpsb
adc
pop
pusha
hlt
das
and
jne
sbb
dec
stos
inc
mov
mov
iret
xor
fdivrs
add
add
jmp
incb
call
cmp
pushf
lock
jl
sub
push
or
mov
je
fnsave
mov
loop
sub
repnz
loope,pt
and
pop
rcrb
mov
mov
negb
loope
subb
loope
mov
out
cmp
out
loope
and
or
push
pushf
pop
in
dec
push
loope
jp
fimuls
pop
xor
ficompl
sbb
jecxz
loope
sub
cmp
lcall
push
inc
sti
ror
aad
sbbb
push
lcall
cli
push
insb
in
mov
in
sub
loopne
movsl
in
test
fstpl
mov
push
pop
xor
cmc
sub
jg
xor
std
mov
enter
test
inc
xor
les
jmp
xor
add
and
pop
pusha
sub
cltd
inc
dec
xchg
jmp
ljmp
mov
inc
loop
clc
xchg
jae
ja
inc
ret
aam
cmp
int
mov
imul
and
xchg
xchg
sti
mov
adc
insl
testb
mov
mov
pop
loope
shll
dec
ds
lock
jno
fildll
dec
lods
mov
xchg
dec
cmpsl
inc
and
jo
sub
cmp
cs
imul
lea
daa
inc
inc
cmpsl
loope
test
cmp
or
loope
sarl
cltd
sbb
sbb
inc
gs
lds
test
add
push
aas
outsb
lock
add
fwait
arpl
xor
shll
int3
rorb
jle
loope
inc
aas
inc
cmpsb
aad
push
lock
fs
and
jo
movb
lret
push
dec
mov
in
loope
cmp
lods
jno
std
loope
addr16
test
pop
dec
cmp
mov
push
dec
push
pop
xchg
or
in
cmp
add
test
pop
in
push
adc
cli
mov
loope
in
inc
movsb
lcall
rcll
ljmp
jmp
repz
jne
or
and
cmp
jae
jo
roll
or
imul
mov
add
jns
pop
pop
fimuls
mov
xor
inc
jg
xor
sub
and
mov
mov
sbb
mov
bound
mov
jb
shrb
cld
loope
outsb
stc
add
xchg
cs
mov
popa
add
fs
mov
push
mov
in
repnz
jb
rolb
int3
push
mov
and
cmc
sbb
sub
loop
lock
fwait
sbb
lcall
adc
ds
pop
jecxz
cmp
xchg
outsl
loope
dec
fistl
or
inc
lret
and
adc
jbe
add
adc
aam
js
pop
loope
insb
scas
test
repz
push
push
push
xchg
nop
loope
sbb
inc
jl
arpl
mov
xchg
in
mov
mov
and
adc
xor
add
loope
cli
mov
add
mov
fs
mov
cmp
mov
adc
loope
jmp
in
cmp
inc
lret
add
insl
lcall
and
lods
xor
into
std
add
pusha
xor
stos
loope
adc
dec
lea
dec
dec
add
imul
in
into
jp
std
cwtl
add
sub
xor
mul
stos
xor
fwait
push
jnp
cmpsb
loope
insb
dec
xorb
jecxz
fdivrl
das
xlat
ss
stos
bound
mov
stc
mov
testl
out
jnp
jbe
pop
in
js
inc
insl
es
push
daa
mov
pop
adc
mov
div
fs
jecxz
push
pop
call
popa
and
arpl
push
add
out
scas
sub
pop
je
movsb
push
mov
pop
lcall
jbe
sub
pop
jb
fs
rol
fwait
xor
inc
mov
cld
test
jo
jbe
out
sahf
aaa
fidivl
and
mov
sub
and
sbb
test
mov
fldcw
pop
and
rclb
fcoml
cmpsb
gs
ja
push
loope
jmp
out
xchg
repnz
loope
inc
fs
adc
loope
mov
pushl
in
loope
xlat
fcoml
lea
mov
sbb
jmp
scas
fsubp
rcll
dec
pusha
repz
loope
ret
pandn
xchg
loope
arpl
outsl
cmp
add
rorl
cli
dec
and
sbb
dec
jp
inc
lcall
pushf
popa
out
out
loope
scas
pusha
mov
out
imul
testl
out
loope
test
cmp
les
lods
loope
inc
xor
jmp
loope
roll
sbb
push
imul
cmp
stos
out
loope
ja
mov
loope
clc
mov
pop
and
pushf
jo
push
out
xor
mov
cmp
fdivrs
mov
mov
es
xchg
out
add
jp
mov
adc
inc
push
loope
xchg
iret
jns
in
mov
insl
sbb
loope
dec
dec
sbb
push
loope
cld
lods
sub
nop
into
sub
mov
inc
jo
cltd
and
in
cmp
mov
inc
jecxz
int
xchg
scas
dec
das
lret
cmp
or
adc
pop
divl
jg
gs
lock
fs
jno
ret
shrl
inc
mov
repz
aas
xor
mov
gs
push
pop
lock
or
out
int
dec
pop
loope
inc
mov
test
dec
push
loope
or
cwtl
scas
loope
jecxz
pop
ja
aad
jo
push
aam
sbb
mov
lret
dec
into
out
and
add
lock
fildll
lods
test
pop
mov
add
addr16
jnp
loope
push
sbbb
andl
mov
mov
ds
mov
sub
jbe
loope
comiss
lret
add
inc
cmp
and
dec
loope
bnd
mov
cmc
int3
scas
mov
jb
mov
add
or
inc
imul
adc
sub
imul
cmp
cmp
int
mov
sbb
and
push
mov
out
mov
or
dec
clc
in
sub
xor
out
cmp
lock
jecxz
dec
nop
icebp
dec
and
xchg
or
cltd
mov
loop
add
scas
stos
leave
loope
mulb
nop
movsb
cmp
inc
repnz
loope
jns,pt
inc
sti
in
loope
add
imull
data16
ja
fldt
xor
xchg
loope
xchg
inc
and
sub
cmp
xor
push
sar
xchg
jo
icebp
gs
sbb
ficoms
xor
lods
push
in
rclb
cwtl
insb
mov
dec
cmp
loope
cmpsl
sub
insl
in
lods
mov
or
shll
les
loope
stos
fcmovb
fwait
jnp
call
add
idivb
std
jo
lcall
sub
xlat
push
ret
loope
js
push
fcmove
addl
nop
popa
sti
loope
out
pop
aam
lock
ret
push
pcmpeqw
mov
xlat
aad
hlt
ss
inc
call
mov
jae
loope
loop
adc
jl
dec
sbb
das
jns
loope
cmp
mov
xchg
sbb
mov
hlt
and
in
loope
sbb
cmp
dec
data16
loope
jnp
xor
fidivrs
or
mov
loope
js
jno
test
push
mov
scas
loope
push
daa
add
imul
arpl
lahf
jmp
and
loope
mov
push
and
mov
xor
shl
xchg
add
data16
stc
loope
scas
sahf
popf
arpl
cs
and
and
call
lock
loope
push
sbb
add
setae
arpl
add
sub
jmp
mov
out
cmpl
loope
insl
and
loope
xchg
sbb
sahf
std
sbb
adc
and
arpl
jmp
push
repnz
movsl
bound
pop
inc
pop
in
loope
push
pop
pop
lds
and
mov
call
loope
movsb
test
inc
mov
mov
vphsubwd
push
mov
es
add
in
mov
adc
push
push
mov
shrb
jecxz
mov
ljmp
push
loope
adc
xor
and
mov
adc
jbe
in
test
call
jne
adc
xchg
loope
mov
iret
lahf
shl
push
fdivrs
imul
dec
xorb
fcmovne
and
loope
je
mov
mov
out
push
repnz
xchg
shl
xor
jo
jg
xor
add
push
adc
xchg
inc
test
adc
sub
popf
rcr
jle
ss
out
mov
inc
push
mov
loop
cli
lret
imul
out
data16
loopne
and
in
and
mov
cmp
pop
inc
or
dec
push
and
loope
mov
adc
xorb
push
mov
loope
daa
test
xchg
shl
imul
xor
in
jae
cs
jge
mov
int3
xor
mov
sarb
sub
lock
loopne
xchg
loope
xor
lretw
and
repz
and
fmul
sbbb
pop
jo
mov
inc
arpl
ficompl
subl
mov
repz
or
loope
sahf
mov
mov
loope
loopne
call
loope
add
and
sbb
fldcw
adc
lret
mov
xchg
ljmp
jmp
pusha
or
rorb
cld
std
rolb
and
sahf
loope
mov
cwtl
ja
loope
or
loop
loop
loope
sub
outsb
shl
add
cmp
out
xlat
push
mov
hlt
dec
jmp
adc
test
pop
pop
jbe
das
adc
add
inc
add
shlb
lods
int
adc
push
xchg
jmp
sbb
fmull
sub
popa
push
push
xchg
addr16
int
jo
lret
clc
jecxz
and
scas
jno,pt
add
lret
mov
or
mov
popl
aas
or
push
out
pusha
mov
test
mov
mov
mov
pushf
and
test
pop
enter
pop
cmp
stc
loope
mov
test
and
ss
movsb
pop
mov
mov
stc
loope
xchg
mov
lahf
loop
out
out
jns
fstp
test
sbb
loope
push
cmp
popa
loope
dec
sbb
mov
sbb
into
test
xchg
test
iret
sbb
loope
mov
movsb
pusha
loope
xor
jl
dec
pop
cmpsl
cmp
dec
ds
jo
loope
insl
add
leave
icebp
nop
leave
push
push
dec
jmp
loope
imul
pusha
in
add
dec
aad
sarb
stos
cwtl
loope
mov
cmp
clc
sti
leave
popf
push
inc
mov
pop
rcr
inc
xchg
imul
sbb
sbb
pop
loope
pop
mov
dec
sub
loope
pop
clc
push
shrb
mov
sub
fs
or
popf
roll
test
or
and
rcrl
js
out
pop
lock
repnz
lret
add
pop
mov
cs
fcmovnbe
jmp
mov
mov
jb
test
int
cmp
addr16
adc
inc
mov
or
fists
adcl
movsl
insb
sarl
out
and
mov
loope
push
stos
jo
insb
mov
adc
add
or
shr
mov
in
inc
mov
add
in
jne
and
loop
aam
cmp
fisubl
push
loope
and
jl
js
es
dec
xchg
inc
mov
adc
in
xorl
mov
sti
scas
rclb
push
fstpt
dec
loope
add
inc
mov
lret
loope
mov
mov
dec
and
outsb
jo
xor
movsl
ljmp
xlat
xchg
dec
sub
clc
rol
push
xor
arpl
mov
stos
in
add
mov
loope
rcrl
subb
jg
fbstp
jo
pop
add
popf
jmp
add
add
mov
adc
jo
loope
pop
push
pop
loope
fld
pushf
test
jne
sub
xor
sbb
jp
aam
aas
lcall
sbb
out
outsl
out
repz
out
lea
lcall
loope
fnsave
xorl
cld
imul
mov
xor
rorb
sub
mov
push
outsl
cld
and
loope
icebp
hlt
cli
es
add
aad
push
or
psraw
push
adc
pop
inc
out
std
inc
pop
fdiv
in
insb
mov
iret
outsl
daa
inc
mov
push
cmp
xchg
loope
jg
xchg
aam
cmp
push
js
sarb
jae
xor
int3
jp
vcvtsi2ss
adc
sbb
aad
or
ret
mov
int
rcr
or
out
pop
nop
bound
adcb
filds
mov
scas
xchg
add
push
in
in
leave
hlt
or
into
add
lea
push
test
data16
cmp
je
adc
stos
dec
or
loope
fs
ds
sbb
dec
shlb
jae
outsl
lret
stc
imul
pushl
add
ficoms
and
inc
loope
lret
fadd
repnz
jb
ja
xchg
sarb
cli
pop
loope
xor
mov
pop
jp
out
pusha
loope
push
fisttps
loope
jge
fs
cmp
or
int
loope
and
call
dec
dec
test
fbstp
test
popf
jno
sbb
in
ljmp
aam
inc
movsb
loope
push
test
in
sub
sub
jmp
mov
xlat
jge
ret
ja
js
clc
das
gs
sub
sbb
add
lret
cmp
loope
cmp
je
shl
inc
adc
mov
shlb
mov
js
push
sarb
jno
mov
xchg
jo
imul
adc
loope
jp
outsl
fisttpll
iret
loope
and
xchg
jb
inc
ljmp
cmp
inc
loope
mov
and
push
xlat
shlb
fcomps
xchg
mov
cwtl
and
add
cmp
and
dec
bound
add
or
test
and
loope
cli
lods
pop
xorb
push
cmp
add
pushf
cmpsb
outsl
rorb
scas
push
in
push
loope
adc
jecxz
mov
loope
test
icebp
and
cmp
sti
outsb
pop
je
mov
in
fldl
in
jne
sub
jmp
movsl
jge
loope
xor
add
jbe
or
mov
push
and
lock
pop
nop
ss
shlb
loope
test
incl
in
out
leave
faddl
loope
testb
loope
gs
lret
ljmp
jno
or
pop
mov
loope
push
xor
loope
or
iret
loope
cld
mov
push
mov
xchg
adc
mov
iret
jge
gs
das
add
cmp
es
or
dec
nop
xchg
loope
ret
out
mov
popf
movsl
loope
enter
pusha
loope
scas
icebp
pop
jecxz
pushw
loope
test
add
bound
into
shl
push
in
xchg
lock
xor
or
aaa
repz
mov
jno
out
in
repnz
cltd
stc
loope
mov
out
fnstsw
loope
mov
sub
push
lock
adc
cld
repz
sub
fistl
and
es
xchg
mov
lcall
repz
push
and
cmp
cmp
adc
shll
cld
iret
lcall
mov
in
repz
jno
mov
bound
push
scas
push
cmp
push
dec
sub
stos
loopne
loope
jnp
movsb
or
push
jns
add
fwait
testl
jp
iret
inc
adc
and
enter
sbb
ret
testl
scas
push
jecxz
loope
repz
movsl
xor
icebp
rcrb
call
loope
dec
and
sub
insl
loope
outsb
xchg
push
cltd
mov
and
dec
out
int
push
mov
inc
std
mov
icebp
lods
add
out
mov
mov
mov
sbb
dec
fcoms
movsl
bndstx
push
dec
mul
cmc
and
test
cmp
inc
pop
loope
jbe
sub
pop
sub
js
out
ja
mov
loope
mov
dec
pop
fs
jae
jno
jb
dec
mov
test
jl
push
dec
and
mov
mov
push
in
loope
mov
mov
mov
scas
loop
repnz
or
shrb
mov
jo
sti
and
in
loope
mov
xchg
loope
push
aaa
jg
jmp
inc
test
loope
pop
mov
lea
push
loope
sub
loope
out
popa
sarb
incb
lods
je
mov
jle
loope
imul
into
loope
sarl
pop
repnz
shll
push
out
jo
aaa
popa
cmp
xor
jbe
push
sub
loop
hlt
xor
fcompl
add
loope
mull
mov
sub
iret
and
mov
dec
jle
mov
mov
and
mov
pop
inc
push
lret
cmp
push
flds
sbb
pop
pop
lock
inc
mov
loope
mov
inc
jle
inc
loope
cli
in
or
loop
loope
or
jns
adc
sbb
popf
lea
insb
mov
shll
ljmp
cmp
arpl
data16
loop
pop
out
icebp
loope
fs
mov
sub
fwait
cmp
js
adc
inc
loope
loopne
les
mov
cmp
mov
sub
popa
incl
push
jmp
cmpl
push
ss
popa
jae
aam
mov
icebp
mov
push
and
xchg
insb
out
pop
push
dec
lret
sbb
rorl
or
in
push
xor
repz
loopne
or
cmp
cwtl
loope
mov
xor
loope
or
imul
jo
pop
inc
jmp
xchg
test
loope
enter
dec
cwtl
sub
xchg
push
fs
loope
leave
pop
mov
ret
mov
mov
pop
stos
cli
xlat
push
loope
push
mov
out
loope
cmp
pusha
pop
loope
and
add
cli
cmp
loope
cltd
stos
not
pop
mov
sbb
test
inc
loope
inc
mov
es
movsl
loope
jno
scas
insb
push
sbb
fistl
mov
sub
sbb
out
xchg
loope
mov
clc
je
sub
popa
inc
adc
mov
lcall
add
jge
pop
out
int3
lds
rcr
push
jno
mov
sbb
jmp
pop
faddl
and
push
push
clc
xlat
in
xor
xchg
jmp
rol
push
lds
jecxz
and
js
shl
inc
in
in
loope
and
call
loope
dec
add
mov
and
loope
out
mov
mov
scas
mov
gs
mov
sbb
in
sbb
ret
mov
or
sbb
into
aam
mov
sti
or
lcall
stos
pop
mov
and
cmc
xchg
in
pminub
and
insb
into
je
loope
or
adc
jg
es
rcrl
cmp
les
pop
out
fwait
mov
jo
cmp
in
jns
addl
cmp
into
sbb
or
add
xchg
jo
inc
dec
dec
dec
out
adc
sahf
loope
test
cmpsl
push
add
es
pop
pushf
xchg
arpl
ds
popf
loope
xchg
nop
and
dec
jnp
cltd
cmpsb
jmp
cmpb
lods
int
rorb
jno
sub
lret
pop
push
ja
testl
cwtl
xchg
in
nop
shll
xor
shr
jg
aam
hlt
jb
push
std
inc
loope
out
xchg
inc
loope
pop
rolb
ficoml
imul
dec
and
test
push
pop
push
and
and
and
add
loope
jae
adc
loope
mov
sahf
mov
jle
cmovge
mov
jo
sti
sbb
adc
sub
stos
pop
push
arpl
mov
or
lret
lahf
push
aaa
xchg
cmpsl
mov
daa
lret
adc
or
loope
in
js
enter
in
int
xlat
xchg
loope
ret
inc
aaa
cwtl
adcb
lods
and
fwait
xor
std
mov
loope
insb
lcall
aam
sbbl
stos
adc
call
cltd
fdivrs
push
pop
shl
rolb
movsb
push
cmp
imul
je
stc
adc
mov
or
popa
jge
rorb
mov
ljmp
sarb
pop
mov
adc
stc
fs
outsl
or
inc
sub
adc
loope
popf
fists
pushl
fiaddl
push
pop
loope
cli
sub
mov
pop
sbb
xchg
mulb
mov
cwtl
and
xor
rcrb
xchg
push
mov
loope
stos
mov
enter
loope
out
sarb
int3
mov
addr16
jecxz
mov
daa
sbb
mov
fnstenv
aam
icebp
mov
inc
movsl
sub
cmpsl
inc
and
loope
or
movsl
sub
roll
pop
or
xchg
in
popa
stos
mov
adc
mov
faddl
inc
cmc
push
push
fldenv
loope
dec
hlt
out
dec
iret
data16
mov
mov
int
lcall
push
dec
movsl
loope
repnz
sbb
push
sub
adc
scas
cmp
cwtl
imulb
lcall
jge
add
andl
jecxz
test
sahf
das
jb
fstpt
sub
xchg
loope
sti
jmp
pop
push
in
push
sbb
stos
inc
out
xchg
mov
adc
int3
inc
pop
push
dec
loope
int
loop
add
pop
fabs
jg
mov
inc
das
lods
jne
jo
aaa
jnp
cmpsb
mov
push
hlt
sub
shrb
xchg
add
daa
mov
loope
pop
movsl
mov
and
jb
mov
call
push
pop
es
cmc
dec
pop
scas
fs
outsl
inc
xlat
in
test
shl
jo
arpl
and
push
cli
lea
in
pushf
out
add
sub
adc
out
ret
lahf
inc
ds
lret
mov
ffree
adc
stos
addr16
pop
cli
lods
add
arpl
sahf
xchg
shl
push
hlt
add
ret
adc
xchg
lahf
cwtl
outsb
js
inc
loope
xor
scas
jl
loope
push
and
loope
and
fisubrs
imul
hlt
arpl
dec
mov
mov
out
leave
ljmp
sub
mov
shr
loope
stos
mov
pop
loope
addl
rclb
les
in
xchg
and
jbe
mov
xor
cwtl
dec
dec
out
loope
aad
test
shlb
movsb
popa
pop
cmp
mov
addr16
push
adc
cmc
dec
loope
fsts
xor
sbb
adc
push
js
fbstp
push
lret
jns
loope
ja
mov
outsl
xor
pop
pusha
movsb
jne
mov
minps
xor
fidivrl
or
leave
loope
jl
rclb
or
test
sbb
dec
pop
xchg
jno
xchg
loopne
fs
cli
push
es
push
cmp
jo
rolb
in
pop
and
jb
jo
adc
add
mov
push
fsubs
cmp
xlat
loope
cwtl
mov
sub
jmp
data16
es
mov
jmp
xor
mov
inc
jmp
adc
sbb
stc
ljmp
mov
in
sub
or
out
lret
xchg
fwait
loope
xor
push
jmp
popa
lods
loope
jbe
add
shlb
loope
roll
push
inc
cmp
dec
sub
adc
pusha
loope
and
jge
push
mov
mov
lret
pushf
xchg
dec
adc
loope
aas
cmpsb
arpl
imul
loope
xor
sub
loope
cmp
popf
loope
pusha
and
je
xchg
dec
add
out
xlat
loope
aam
lea
loopne
mov
and
cmp
push
sbb
pop
loope
adc
sbb
xchg
xor
loope
sbb
loope
push
cmp
add
dec
and
push
pop
dec
test
push
xor
bound
cmp
lret
loope
jp
add
mov
push
out
pop
popf
fsubp
sbb
imul
sub
jnp
jl
ljmp
push
cmp
pop
ja
out
mov
pop
jnp
pop
loope
add
mov
out
inc
push
test
jmp
loope
popf
mov
add
stos
in
dec
pop
lahf
push
out
push
mov
loope
dec
lahf
fsts
or
cmp
or
out
jo
fsubl
in
aam
mov
inc
pop
leave
ftst
inc
mov
sub
loope
push
pop
inc
add
loope
push
mov
loope
xor
out
mov
add
movsl
jo
rcrl
out
out
xchg
push
inc
push
loope
scas
cmpsl
push
add
inc
pushf
loope
aam
std
popf
pop
rorl
test
xchg
push
test
mov
mov
cwtl
mov
clc
sub
test
lahf
popl
inc
popa
addb
lret
push
push
call
loope
popf
adc
insb
addr16
jmp
ja
cmp
sarb
fistps
mov
sub
push
push
cld
das
jo
repnz
ja
mov
gs
adc
xlat
jmp
pusha
out
into
test
dec
test
mov
nop
ss
loope
scas
mov
push
loope
inc
dec
in
jb
pop
xadd
movsl
jmp
and
jmp
jmp
loopne
loope
pop
push
mov
addl
aaa
leave
dec
adc
lock
lret
cli
mov
mov
ret
loope
xlat
sbb
jnp
loope
inc
lret
int
stc
movsl
mul
xchg
dec
push
ja
add
jmp
and
aad
cmp
cmp
lds
sub
jmp
adc
add
adc
mul
movsb
inc
cs
jl
sub
filds
divl
sub
ficoms
aad
mov
mov
loope
dec
bound
shrl
sbb
loope
mov
mov
xchg
fstl
daa
cs
and
loopne
sbb
mov
jbe
dec
xor
inc
mov
add
or
adc
jecxz
in
add
mov
pop
push
jmp
frstor
xchg
aam
cli
push
sub
repnz
sbb
loope
pop
icebp
push
jne
in
loope
stos
and
loop
mov
imul
ljmp
pushf
loope
iret
dec
nop
dec
push
mov
add
mov
pavgw
sbb
loope
pop
mov
je
push
lock
es
or
push
xchg
pop
js
cmpsb
push
push
pop
loope
push
cmp
loope
pusha
int3
add
std
test
push
das
add
mov
jnp
xchg
mov
mov
xor
mov
out
mov
cmpsl
xchg
loope
cld
ficomps
out
loope
arpl
add
call
cmp
mov
cmpsl
jmp
inc
jb
mov
inc
int3
fiadds
pop
loope
andb
je
mov
sbbl
movsl
jmp
xlat
sub
mov
enter
jp
mov
fs
xchg
fwait
data16
enter
jecxz
in
lds
sarl
inc
leave
inc
cmp
fs
xchg
in
iret
xor
cld
inc
dec
lock
jnp
adc
and
call
ss
or
jb
push
insb
sub
sub
push
das
stc
pop
out
jns
push
mov
sub
loope
imul
inc
loope
roll
cltd
push
pop
je
dec
pop
cmp
mov
jecxz
push
data16
and
enter
ja
push
fstpt
push
sbb
mov
dec
xor
mov
loope
andl
jo
mov
cld
jo
hlt
repnz
mov
pmullw
mov
and
adc
shll
push
sarl
xor
dec
mov
scas
test
aad
scas
loope
jmp
aam
mov
or
loope
cmpb
sub
daa
jecxz
out
lock
jno
jl
pop
adc
stos
mov
mov
xor
mov
mov
loope
xchg
push
pop
lods
jle
divl
push
in
push
inc
jns
mov
push
mov
lock
icebp
out
jbe
outsb
fstl
dec
mov
mov
dec
in
shlb
fiadds
loope
fs
jl
add
push
xchg
xchg
jnp
xchg
loope
mov
shlb
xor
loope
in
adcb
in
push
ljmp
jne
fs
ret
mov
and
ss
xor
inc
scas
push
push
mov
jns
lahf
xorb
clc
loope
xor
cmp
imul
pusha
faddp
jbe
loope
pop
mov
xchg
lcall
push
outsb
sub
cltd
sbb
pop
mov
ja
arpl
test
ffreep
inc
xchg
loope
pop
sbb
aad
pushf
xchg
je
add
jle
mov
ud1
stos
cld
add
sahf
int3
out
fstpt
mov
loope
inc
jmp
sub
sbb
fs
xchg
bound
popf
insb
and
call
mov
xchg
fwait
clc
incb
mov
jnp
dec
out
push
dec
ljmp
pusha
dec
cs
sti
adc
loope
js
leave
xor
xorl
lcall
inc
divl
inc
fwait
stos
push
sub
loope
push
lahf
jbe
inc
in
jns
std
inc
or
mov
mov
fldt
pusha
loope
movsl
add
adc
gs
mov
sub
loope
xchg
lods
push
jno
loop
loope
out
ret
mov
mov
js
push
gs
mov
imul
outsl
movsl
pop
loope
aad
fistps
add
frndint
mov
out
scas
push
xchg
cmpsb
pushf
dec
test
in
cli
sub
jne
sahf
loope
xchg
hlt
dec
mov
insb
loope
lods
push
cmp
jo
mov
mov
cmp
jmp
mov
outsb
mov
fwait
or
mov
fdivrs
lods
and
aam
fnsave
cmp
push
into
pop
shll
nop
cmpsb
mov
inc
mov
loope
fs
nop
sbb
insb
add
rolb
loope
repnz
pushf
jmp
sub
and
cmp
loope
mov
push
in
shrl
jl
in
sbb
bound
loope
jl
lret
movsl
dec
mov
arpl
or
jmp
push
mov
loop
ret
lock
dec
fsubrp
incl
mov
rorb
clc
out
jmp
or
mov
icebp
ja
in
les
rcrb
in
adc
and
movsl
mov
lods
adc
push
xchg
mov
popa
aaa
iret
les
bound
xchg
xor
adc
mov
fisubrl
push
and
aas
loope
rorl
js
cmp
mov
cld
ljmp
fstpl
inc
xor
xor
push
mov
jmp
dec
loope
js
inc
xorw
loope
cwtl
bound
loope
mov
pushf
or
gs
loope
out
fwait
popa
ror
sbbb
mov
and
fucom
sbb
dec
sbb
jmp
push
pop
ss
loop
pop
loope
xor
jno
loope
sbb
xor
xchg
loope
test
leave
loope
aaa
mov
pop
and
aad
insb
cmp
icebp
sub
fcompl
insl
lock
xchg
adc
mov
fs
shlb
lods
cmp
int
lods
imul
out
lahf
sbb
loope
test
insl
sti
loop
and
std
add
jne
and
cmpsl
scas
sub
outsl
loope
bound
loope
mov
pop
andb
jp
test
dec
mov
jnp
sbbb
or
stc
out
pop
add
loope
gs
enter
xlat
loope
arpl
addb
lret
dec
test
jb
pop
mov
pop
xchg
pop
in
stc
loope
or
push
out
pop
xchg
in
fisubs
adc
pop
inc
cmp
rep
cs
jbe
pop
into
add
in
jnp
shlb
fisttpl
mov
incb
sub
pop
jle
nop
inc
dec
cmpsb
add
mov
out
xor
pop
loope
loopne
daa
mov
fistpll
dec
imul
xor
ficompl
or
and
jo
out
inc
loope,pn
shl
iret
and
popf
loope
inc
push
fdivr
das
loope
fstl
hlt
sub
sarb
outsb
xchg
movsb
fs
cmc
sub
jl
sbb
ret
rorb
add
lods
clc
push
movsl
pop
cmp
add
iretw
sub
loope
push
jb
add
imul
in
je
mov
aam
and
jb
iret
mov
mov
out
inc
loope
stos
adc
inc
jne
rol
lcall
movsl
and
rcrl
in
test
sbb
loope
jnp
adc
lods
ljmp
test
es
adc
mov
test
or
fmull
xlat
cmpl
mov
push
and
xchg
xchg
push
lock
pop
jmp
pop
inc
dec
sarb
inc
pop
test
pop
lcall
mov
cmp
pop
adc
cmpsl
je
aas
jge
sub
jb
sbb
repnz
mov
popa
das
fucom
adc
cmc
pop
add
adc
stos
cmp
imul
xor
mov
in
ret
shr
dec
loope
inc
mov
loope
cmp
and
mov
outsl
out
gs
mov
out
shl
adc
rorb
jb
addr16
mov
clc
xchg
fwait
popf
ds
loope
bswap
sti
aaa
sub
jo
dec
flds
into
loopew
add
add
loope
les
jmp
adc
js
pop
enter
and
in
and
loope
addr16
sbb
cmp
scas
hlt
shrb
push
ret
and
cmp
clc
push
dec
loope
pushf
mov
mov
loop
loope
fidivrl
push
inc
mov
push
cs
insb
mov
jno
cmp
sbb
ja
and
pop
shrb
fstps
xchg
xchg
add
mov
frstor
adc
mov
std
fcoml
and
jae
cmpsl
shll
rclb
xor
xchg
loopne
loope
fcmovnb
jg
out
fiaddl
cli
loope
sbb
dec
mov
hlt
icebp
sbb
loope
add
sarl
add
inc
popa
jecxz
cli
loope
xchg
mov
jmp
jnp
lret
mov
adc
loope
popa
add
dec
jo
mov
dec
adc
lahf
pop
mov
ds
sbb
and
scas
scas
lods
adc
std
scas
push
and
and
loope
aam
out
add
mov
push
add
icebp
mov
loope
mov
sub
cmp
loope
bound
loope
push
jae
push
pop
cmc
dec
loope
pop
arpl
test
imul
loope
jl
paddb
and
dec
gs
fisttps
fwait
imul
addr16
fcos
or
dec
popa
mov
inc
ds
jmp
fadd
lahf
mov
hlt
mov
loope
inc
inc
pusha
pop
jae
out
loope
leave
lock
jns
add
mov
rcrl
dec
add
pop
adc
mov
dec
mov
ja
jmp
loope
loopne
jne
cwtl
aas
or
dec
mov
jecxz
dec
jnp
call
xor
push
idivb
jns
jmp
fistps
jno
test
aaa
pop
stos
jp
lcall
loope
cmp
jo
pop
imulb
sbb
daa
mov
cwtl
enter
in
test
repnz
pop
sti
inc
nop
lock
dec
cmc
jno
mov
and
jp
mov
cs
hlt
jmp
mov
seto
iret
rolb
cmpsb
loope
inc
sbb
push
add
rorb
sbb
add
add
loope
sub
sbbb
push
shl
loope
jb
mov
loope
movsb
fcomps
fbld
psubusw
and
jge
push
hlt
push
dec
in
mov
loope
ficoms
mov
cwtl
loope
push
push
push
loope
cld
sub
pop
popf
sbb
loope
in
sti
jbe
ja
cmp
sbb
lcall
lret
dec
sar
dec
xor
push
and
push
adc
add
loope
jbe
jl
js
imul
aas
movsl
mov
fadds
xor
mov
loope
or
push
cld
xchg
aam
orb
mov
pop
inc
mov
mov
dec
cmp
hlt
fs
into
aaa
stc
xchg
adc
xor
mov
in
cltd
repnz
incl
out
roll
addr16
fsub
cmp
andb
lret
dec
fadds
pop
pcmpgtd
and
xchg
enter
in
mov
int3
sbb
cmpsl
insl
loope
adc
popl
xchg
fisubrs
cmp
clc
mov
pop
inc
loope
aas
mov
popa
pop
bound
jp
movsl
faddp
adc
mov
dec
lahf
push
loope
mov
pop
jne
sbbb
sub
pop
shrb
sub
inc
mov
pop
outsb
mov
xor
dec
sbb
cmc
insb
fs
xchg
add
pop
jmp
ljmp
int
imul
inc
mov
loope
xchg
dec
notb
jb
loope
inc
and
xor
popf
call
mov
int
adc
and
sti
ljmp
movsb
loope
jno
scas
pop
or
repnz
outsb
cwtl
loope
sti
mov
cmp
mov
sahf
add
sub
out
push
mov
rcrl
and
jo
jmp
std
sbb
dec
ret
dec
loope
fadd
jp
mov
sub
mov
mul
iret
loope
scas
cmp
pop
lret
jmp
sbb
rclb
shrb
xchg
iret
loope
sti
mov
push
loope
orb
test
mov
add
loopne
das
sbb
scas
loope
dec
cltd
mov
out
cmp
cli
sbb
loope
add
ds
jnp
jg
fisttps
jmp
test
mov
push
into
fisubrl
jmp
xchg
mov
hlt
dec
fcmovnbe
shll
inc
push
insb
sti
pop
jo
scas
sub
lret
sub
pop
inc
stc
and
in
out
testb
or
cs
dec
jae
lock
dec
lods
test
test
outsl
inc
pop
push
add
push
loope
xor
insl
mov
sbb
rcrb
cmp
icebp
jmp
fs
movsl
adc
aam
das
stc
loope
fnstenv
sbbl
leave
jg
loope
aaa
imul
jp
add
jl
in
xchg
mov
shll
lods
cwtl
push
jmp
pusha
cmp
sub
jecxz
inc
pushl
add
xchg
test
add
jb
out
pop
mov
xorl
lods
fmul
pop
ret
dec
mov
push
sub
test
mov
push
loope
pusha
lcall
pop
loope
dec
js
sbb
movsl
loope
mov
repnz
sub
fildll
aam
xchg
je
cmp
movsl
scas
std
pop
iret
loope
sub
pop
inc
lret
jg
loop
gs
jp
mov
in
mov
mov
mov
pop
jmp
or
xor
lock
shrb
sarb
and
lret
insb
pushw
jo
push
cmpsl
cmp
stos
mov
addr16
pushl
sahf
pop
sbb
dec
loope
daa
mov
and
scas
das
jge
mov
fildll
testb
in
xor
lea
mov
hlt
in
inc
lock
cmp
pop
out
jecxz
inc
sub
fcompl
fadd
ljmp
dec
out
push
jo
test
sbb
in
mov
pop
xchg
jns
loope
adc
loope
pushf
jg
mov
push
cltd
insl
dec
lret
add
dec
loope
in
xor
mov
inc
or
inc
mov
sbb
jns
fs
ficomps
add
xor
add
mov
mov
adc
push
mov
loope
mov
subl
adc
cmpsl
ds
in
inc
or
loope
aad
adc
push
inc
cmp
js
les
clc
inc
mov
push
sub
mov
test
ljmp
add
call
stc
leave
loope
dec
mov
cmpl
loope
rolb
leave
pop
jl
ret
bound
dec
xchg
cmp
sbb
loope
enter
mov
xor
xor
push
movsl
xor
and
push
mov
lods
scas
inc
cmp
sahf
test
push
loope
adc
imul
les
jno
push
cmp
loope
or
xchg
dec
pop
outsb
loopne
sbb
test
jecxz
notl
loope
das
aad
imul
in
pop
int3
fimuls
repnz
or
out
sbb
xchg
les
stos
push
cs
in
loope
mov
test
jnp
add
shlb
or
xchg
hlt
aad
lods
ja
pop
mov
movsl
out
fs
fsubp
xchg
fcomps
sub
push
jmp
arpl
jmp
lods
ss
std
out
loope
cmp
lret
loope
mov
rolb
jmp
sub
push
ss
loope
les
xor
mov
xchg
or
lods
and
sub
test
mov
imul
jmp
cli
add
loope
pusha
mull
sti
stos
jge
adc
ds
cmpb
lock
scas
inc
mov
and
iret
fiadds
decb
adc
repz
adc
push
dec
js
sbb
scas
loope
filds
sbb
movsl
xchg
data16
icebp
mov
popa
loope
test
cli
jp
sbb
in
mov
ret
ss
ja
in
repz
inc
loope
es
inc
js
pusha
mov
xchg
test
mulb
loope
jns
mov
push
pop
inc
jmp
lret
sbb
loope
in
jl
fs
paddsw
es
mov
adc
cmpl
push
xor
test
sbb
loope
in
sbb
imul
icebp
loope
xchg
pop
xchg
addr16
xor
out
movsl
jle
cmp
loope
and
push
sahf
test
xorb
xor
shl
out
push
adc
and
push
ss
stos
fsub
out
adc
dec
popa
and
mov
out
jb
inc
adc
into
cmp
loope
out
loop
inc
dec
movsl
iret
or
xor
push
sub
jo
ffreep
xchg
int3
in
dec
aad
or
enter
lods
loope
push
add
in
cmp
loopne
pop
jle
pushf
cmpsl
sbb
push
dec
jmp
decl
flds
testl
daa
loope
in
cltd
in
ret
mov
lock
stos
test
fwait
cwtl
lss
xor
rcll
loope
hlt
jl
cwtl
clc
push
lock
mov
jns
rcrl
and
ret
idivl
les
mov
jmp
jo
mov
push
sub
cmc
adc
jmp
fidivs
loope
pop
mov
cwtl
fwait
mov
in
sbb
sbb
les
in
out
jmp
cmp
repz
std
rorb
add
in
or
jbe
adc
inc
loop
loope
xchg
xor
nop
cmp
loope
add
inc
loope
jae
mov
mov
rorl
jno
jmp
repz
push
add
jl
loope
add
test
xchg
inc
jp,pn
leave
cld
mov
insb
iret
clc
scas
loope
movsb
pop
arpl
push
add
fwait
outsb
fs
mov
pop
dec
cld
insl
loope
mov
push
pop
fbld
lods
pop
test
cli
rcr
inc
push
sbb
test
mov
call
mov
cmp
inc
mov
dec
nop
out
popa
les
int3
add
mov
lret
loope
adcl
mov
mov
shlb
jle
hlt
in
ds
loope
lods
aad
aaa
pop
aas
mov
fdivrs
std
mov
pop
loope
orl
cmp
repz
mov
dec
shr
lcall
dec
and
loope
adcl
mov
shr
sbb
sub
add
add
cld
loope
inc
jp
sarb
xor
test
adcb
jl
or
fs
pextrw
sysexit
jae
test
push
add
xchg
std
jmp
loope
xchg
sarb
test
adc
mov
jg
fidivrl
mov
xor
push
sbb
in
dec
dec
or
loope
add
or
jns
rorb
push
xchg
in
icebp
push
loope
lods
xor
mov
jmp
add
pusha
arpl
inc
addb
loope
xchg
sbb
out
push
loope
mov
enter
loope
pop
cmp
inc
jge
gs
or
shlb
jmp
jmp
mov
in
xchg
cwtl
or
insb
imul
scas
aam
lds
push
mov
and
loope
jbe
xor
cmp
loope
lret
adc
pushf
adc
loope
leave
divb
andl
cmp
add
in
adc
in
sub
jne
mov
in
lock
sub
nop
mov
call
jns
push
movb
cmp
add
adc
push
pop
dec
leave
xchg
xorb
cmp
jle
jo
xchg
and
pop
in
mov
rcrb
call
mov
lret
pop
and
dec
hlt
and
mov
loope
adc
ret
loope
fnstenv
mov
fidivs
in
jg
insl
push
iret
or
xor
fcoms
loope
lret
jl
mov
decl
ds
adc
fsubr
dec
mov
std
loope
xchg
cwtl
lcall
cmp
adc
rorb
jb
mov
adc
jge
mov
cmp
pop
repnz
mov
popa
pop
cmovnp
inc
test
into
lds
mov
loope
hlt
xor
cli
lcall
loope
xchg
in
sbb
sub
scas
movsl
pop
xor
and
push
xchg
dec
pop
loope
imul
test
out
rclb
mov
addr16
int3
lods
add
push
nop
xor
js
out
dec
out
loope
cmc
sbb
adc
adc
lret
adc
addl
jp
inc
rclb
movsb
out
xchg
loope
fwait
test
enter
loope
cmp
mov
pop
mov
aam
int
pop
incl
xchg
fsubs
and
sub
loope
lods
mov
mov
fdivl
aas
push
iret
pushf
call
xchg
fs
and
sub
xchg
inc
shrl
push
add
jo
inc
mul
dec
je
cmp
movl
outsb
loope
xorb
mov
rclb
mov
aaa
mov
hlt
loope
daa
stos
imul
mov
lret
sbb
loope
xchg
loopne
arpl
loope
int3
and
pop
in
push
xor
push
loope
das
jmp
loop
jb
js
jl
push
add
mov
aam
stos
dec
leave
cmc
loope
cmpsl
outsb
and
lahf
lret
icebp
loope
cld
cmp
loope
fsts
lock
pop
fdivrs
inc
xchg
add
loope
fstp
test
loope
gs
insb
enter
loope
push
scas
daa
lret
or
in
jbe
push
out
xchg
and
xor
addb
out
loope
rclb
fildll
inc
aas
mov
cmpsl
jnp
loope
das
jae
mov
mov
outsb
inc
or
and
pop
mov
push
mulb
sbb
inc
pop
add
lahf
jne
stos
in
bound
dec
sti
or
shll
cmp
loope
adc
test
mov
mov
pushf
mov
push
xor
fldt
jns
sub
and
push
mov
mov
loope
fmul
gs
cwtl
pusha
mov
jns
sub
ljmp
js
int3
jne
in
fistpll
stc
loope
test
mov
loope
scas
sub
sbb
fsub
js
cmp
fisttps
cs
test
aas
cli
lock
add
lret
mov
sub
in
fsubs
rorl
aad
loope
rcl
repnz
mov
loope
sbb
push
sbb
adcb
pop
lcall
outsb
jo
jl
iret
mov
out
xchg
mov
in
loope
sti
test
shrb
mov
mov
lods
add
mov
sub
inc
mov
mov
imul
loope
cmp
pop
pop
loope
xor
jno
hlt
add
loope
mov
xchg
mov
push
mov
enter
ljmp
dec
sbb
mov
mov
sub
addr16
mov
add
and
repnz
inc
filds
adc
loope
int
aad
add
xor
sbb
pop
out
xor
cltd
loope
repz
pop
leave
in
imul
loope
add
mov
cs
xchg
movsl
test
sbb
ja
pop
lock
fcomps
mov
mov
dec
jmp
mov
pop
cli
scas
inc
js
lcall
push
inc
mov
inc
sti
jb
or
movsb
int3
loope
mov
icebp
lock
sbb
jecxz
dec
push
fistps
loope
xchg
xchg
jbe
dec
loope
cwtl
test
lods
std
lcall
add
jecxz
icebp
mov
aas
insb
cli
int3
xchg
outsb
popf
loope
or
adc
jne
jecxz
jae
cwtl
loop
std
push
sub
mov
xchg
and
sub
or
pop
dec
cmpsb
pop
fdivs
xchg
loop
jl
fnsave
or
cmpsb
xchg
imul
loope
je
jo
add
loope
sbb
scas
cs
cwtl
lock
int
adc
and
gs
mov
sub
lcall
xor
pop
sub
jae
sahf
test
outsb
dec
xor
inc
test
jnp
cli
mov
xchg
add
sbb
mov
xor
out
and
and
push
xchg
sub
sub
mov
or
and
int
in
mov
dec
pushw
loope
imul
ss
pop
out
je
push
outsb
sbb
ret
sti
aam
jb
xchg
inc
shrb
add
sbb
shlb
clc
popf
cltd
loope
and
mov
push
clts
loope
push
or
inc
mov
ret
push
or
and
repz
arpl
loope
pop
xchg
or
and
stos
in
mov
mov
mov
mov
push
je
mov
mulb
inc
mov
xchg
add
fmuls
lock
lret
cmpsl
stos
call
loopne
jg
std
pop
push
inc
push
lahf
loope
mov
xchg
icebp
jo
pusha
add
out
jb
ret
lret
sub
inc
repnz
cltd
loope
sub
dec
inc
lock
jmp
icebp
jmp
adc
aam
xchg
pop
mov
scas
mov
loope
adc
shl
test
out
data16
icebp
push
and
hlt
jecxz
je
loope
imul
jmp
fisubrs
pop
ja
sti
or
lods
sub
ret
add
dec
rolb
in
loope
das
iret
pop
call
gs
loope
daa
xchg
subl
dec
lret
cmc
rcr
push
jnp
jecxz
and
ret
mov
xchg
sbb
loop
lods
ds
loope
mov
fwait
dec
loope
jnp
sarb
add
test
jecxz
mov
jmp
insb
sbb
add
fisubrl
xchg
loope
adc
push
pop
xor
aaa
dec
idivb
loope
or
ret
loope
ffreep
pop
xchg
sbb
loope
bound
mov
insl
pop
jne
sub
fndisi(8087
and
loop
jge
push
lahf
ret
cmpsb
inc
xor
push
test
cmp
or
jbe
push
fmul
cmp
scas
sarb
and
int
push
jo
adc
jmp
pop
loope
or
outsb
loope
mov
loope
cmp
call
or
pop
out
outsb
inc
xchg
push
xchg
ljmp
inc
loope
mov
push
or
scas
sbb
xor
test
pop
mov
pop
xchg
push
insl
aam
jmp
ret
out
loope
push
push
dec
insb
sub
loope
and
dec
ds
push
loop
into
sbb
lea
std
mov
xchg
icebp
loope
data16
cmpsl
outsl
pop
xchg
xor
inc
ss
and
mov
vcvtpd2psx
loop
shlb
das
adcl
fsubs
in
dec
loope
stc
and
xchg
shr
mul
xchg
push
xor
ljmp
fimuls
hlt
dec
inc
jno
shl
aaa
popa
je
ds
aad
fsubp
cmp
adc
inc
jae
mov
mull
push
jge
jmp
xor
mov
xor
dec
loope
outsl
aam
xchg
cmp
push
or
mov
jo
sub
hlt
loope
lock
pop
or
loope
or
mov
cmc
shrb
mov
loopne
movsl
or
sarl
mov
mov
rclb
mov
clc
jmp
cmpl
sub
pop
xchg
jo,pn
sbb
fcoml
xor
imul
dec
sub
shl
out
adc
gs
loope
adc
inc
push
xor
loope
jnp
aam
lret
loope
or
or
dec
jne
loope
dec
in
and
loope
fs
push
pop
aad
loope
add
push
cwtl
adc
loope
sub
push
fnstcw
push
faddl
loope
sbb
mov
lds
out
loop
jmp
and
int
adc
sub
test
mov
pop
aaa
push
xchg
enter
fucom
fs
imul
fwait
and
leave
shl
int
test
in
sbb
sbb
cmp
push
add
test
mov
push
pushf
jns
loope
adc
xchg
mov
adc
xlat
out
xor
pop
outsl
adc
test
push
repnz
es
mov
xchg
pop
gs
dec
cs
aaa
enter
dec
fisubrl
leave
sub
mov
mov
xor
sahf
data16
add
xor
sahf
loope
mov
xor
ljmp
jl
test
ljmp
add
dec
jmp
loope
gs
cld
loope
inc
or
fnstenv
adc
aad
pop
pop
aas
cwtl
dec
inc
or
inc
loope
lds
sti
fldenv
hlt
dec
mov
std
loope
cmp
nop
lcall
jb
mov
loope
sbb
inc
cmp
loope
mov
lcall
fisubs
loope
cmc
pop
mov
add
punpckhwd
mov
add
insl
pushf
jnp
scas
xchg
xor
inc
or
rcl
xchg
and
loope
cmpb
jmp
ret
add
loope
mov
loope
push
dec
mov
loope
lea
out
xchg
clc
loope
aam
gs
cld
xchg
mov
mov
xor
out
addr16
loope
and
gs
cmpsb
xchg
mov
jmp
ficomps
push
and
es
add
or
xor
push
xchg
loope
idivl
aad
pop
popf
push
loop
das
or
pop
or
stos
or
loope
or
adc
loope
xchg
fwait
sar
xchg
adc
outsl
and
outsb
inc
rcrl
push
jnp
xchg
jmp
repz
idiv
js
mov
inc
mov
jbe
or
add
inc
mov
stos
scas
and
adc
xchg
je
dec
int
pusha
imul
gs
push
loope
inc
js
andl
loope
aam
icebp
mov
push
gs
ljmp
loope
sbb
pushf
jne
fldpi
push
push
and
push
xchg
stos
sbb
and
das
jo
idivl
popf
or
loope
addr16
call
cmp
jo
push
loope
mov
xchg
jno
inc
push
dec
dec
outsl
in
push
daa
jb
arpl
in
loope
mov
mov
ficompl
push
adc
push
cli
mov
stos
andl
mov
daa
ret
imul
or
shrb
fistpl
fucompp
cli
xor
mov
loope
fnstsw
mov
jmp
inc
insl
les
xchg
mov
cmp
addr16
arpl
loope
call
outsl
sub
movsl
xchg
subl
pop
or
loope
inc
pop
std
push
sbbb
loope
data16
sbb
or
lret
xor
pop
add
sbb
xorb
aaa
aas
loope
sub
jle
xchg
lock
hlt
mov
out
xchg
lahf
lock
aas
xor
mov
outsl
outsb
in
int3
lret
push
nop
loope
pop
mov
icebp
rol
in
and
aaa
xchg
jecxz
int
mov
sbb
pop
pop
rclb
xor
mov
dec
jl
js
jae
and
enter
addr16
mov
les
jecxz
ljmp
mov
jne
sbb
cmp
and
in
sbb
hlt
loope
mov
cmp
insl
ja
xlat
icebp
push
inc
test
jnp
mov
sahf
push
jne
loope
pop
sarb
les
shrb
pop
and
xchg
and
loope
mov
sub
stos
rcll
addr16
imul
addb
loop
or
jo
sbb
inc
loopne
jnp
or
addr16
inc
out
sbb
inc
aad
popa
sbb
mov
pop
imul
push
loop
adc
sbb
popf
test
push
jae
es
gs
daa
mov
push
and
hlt
inc
sbb
in
sub
aam
sub
loope
add
mov
sbb
lahf
or
jmp
and
cmp
ret
jmp
das
jmp
loope
fs
pop
push
lock
ljmp
dec
jp
loope
test
outsl
jl
popa
mov
push
vucomisd
pushf
test
push
dec
cs
xor
or
pop
in
hlt
roll
loope
sub
and
pop
test
sti
mov
out
hlt
mov
ss
loop
push
mov
mul
fstl
icebp
adc
and
mov
cmp
into
in
jle
insl
out
add
jbe
dec
pop
repz
dec
push
jp
and
test
mov
inc
cmp
adc
xchg
jnp
sub
mov
rclb
sub
testl
or
std
xchg
shrl
icebp
push
in
ljmp
rcll
xor
js
dec
icebp
out
out
jmp
cld
cld
es
and
loope
push
push
sub
popa
pop
jecxz
imul
mov
call
test
xor
mov
xchg
cmp
mov
add
mov
push
mov
or
xor
mov
ret
mov
and
shrl
loope
movsl
cli
movq
out
push
push
ja
test
call
jb
test
shll
repnz
add
cltd
sti
lods
dec
push
imul
loope
iret
and
mov
jmp
add
jg
pop
pop
out
sbb
loop
loope
fs
mov
sbb
lret
icebp
dec
and
sti
inc
loopew
gs
inc
mov
test
insb
jae
arpl
sar
test
fcmovne
shl
adc
mov
loope
mov
add
test
and
and
ffreep
nop
loope
int
adc
mov
mov
pop
loope
push
scas
icebp
sbb
xor
jno
mov
loope
idivl
sub
rcrb
jge
inc
mov
adc
popf
les
mov
add
stos
out
mov
out
idivb
loope
das
ja
nop
or
mov
loope
and
jnp
rcrb
popl
mov
in
clc
out
dec
xor
push
mul
jo
add
cltd
out
dec
xlat
sub
mov
sub
gs
fsub
jo
cmp
dec
lret
xchg
shll
sub
add
dec
xor
xor
loope
push
jl
ret
sbb
mov
mov
dec
push
fsubp
pop
pop
outsl
insb
cmpsl
iret
mov
loope
cli
sbb
fsub
or
mov
push
ljmp
cmp
or
jle
inc
shl
ficompl
push
sti
jb
test
aaa
mov
out
lret
loope
test
inc
mov
lahf
add
pop
and
sbb
jecxz
push
and
dec
inc
mov
cs
add
dec
and
jns
pop
xchg
mov
fdivs
push
cmc
loope
gs
or
cli
loope
mov
cmp
xor
loope
pop
lods
ret
jne
punpckldq
loope
or
mov
cmp
and
mov
loope
xchg
call
pop
rolb
pusha
pushf
sbb
loope
jnp
popf
cmp
push
xlat
rcrb
xchg
daa
mov
cs
mov
jb
rorb
rol
bound
push
loope
mov
scas
xchg
jecxz
shlb
fistl
jmp
jns
mov
loope
mov
test
test
sbb
ret
fldt
inc
enter
pop
hlt
dec
cwtl
add
cli
loope
lret
stc
jp
jnp
dec
loope
mov
push
loope
or
arpl
pop
pop
xor
push
inc
xor
rorb
mov
mov
aas
adc
mov
mov
out
add
loope
lock
sub
mov
loope
dec
mov
pop
mov
rclb
inc
cmpsl
in
mov
scas
loope
mov
lret
dec
insl
sar
fsubr
adc
je
std
addb
cmp
in
push
out
jl
add
test
or
jg
jo
and
push
mov
adc
jno
xor
ret
sub
clc
or
cmp
xchg
jo
ds
nop
push
loop
js
and
and
out
add
and
outsl
movsb
loope
repnz
stos
mov
mov
in
inc
fsub
les
sub
inc
loopne
loope
cs
call
test
jg
test
scas
mov
shl
ljmp
bound
and
int3
loope
fwait
in
jmp
loope
cmp
jmp
ss
xor
adc
inc
or
enter
jno
outsb
popf
stos
lea
pushf
push
ds
adc
fdivl
in
dec
in
xchg
rclb
fildl
loope
push
clc
mov
xor
pop
sbb
jno
fstp
imul
mov
insl
inc
rcr
jl
push
std
les
lds
adc
mov
or
movsb
push
test
cmp
mov
sarl
gs
mov
enter
ret
in
xor
or
dec
pop
sub
loope
into
or
pushf
lcall
or
sub
xchg
lret
lret
dec
mov
inc
and
mov
ja
cmp
test
jb
jmp
jmp
cli
loop
loope
scas
dec
adc
adc
int3
loope
add
testb
cmp
paddw
fninit
out
iret
loope
push
push
icebp
adc
addr16
std
mov
shl
imul
inc
inc
loope
xor
fidivs
sub
dec
and
jne
arpl
and
push
shrb
mov
loopne
loope
popf
push
sbb
xchg
movsl
jae
loope
nop
lret
loope
add
out
mov
xchg
xchg
mov
inc
sub
pop
subb
fistpl
sahf
mov
mov
or
fnstcw
xchg
push
mov
out
in
jns
cmp
mov
das
lret
add
inc
sub
iret
push
cmp
loopne
pop
loope
nop
sar
and
adc
sahf
jecxz
mov
and
leave
jg
mov
sarb
xor
mov
xor
out
push
jge
sbb
jp
or
loope
popf
jb
cmp
cmp
andb
pop
lahf
adc
jbe
jb
pop
aam
loope
xchg
es
ret
shl
sbb
pusha
dec
cli
add
xor
add
ficoms
xchg
popa
pop
or
lods
dec
push
cmpsl
push
stos
xor
shl
loop
xor
ja
in
call
push
and
fsub
icebp
inc
dec
push
xor
sub
jmp
and
cwtl
xchg
inc
leave
xchg
insb
loope
movsb
lcall
in
xor
xor
cs
cmpsb
aam
loope
in
inc
jae
jle,pt
loope
add
into
andl
mov
jo
mov
divb
sahf
lods
xor
mov
rol
sbb
inc
inc
lcall
mov
jmp
cld
fsubp
and
mov
add
test
out
dec
and
jecxz
inc
lcall
jns
loope
xchg
pop
push
push
add
mov
popa
ljmp
imul
rolb
xchg
cmpsb
and
in
xchg
iret
adc
loope
in
push
xchg
popa
mov
rcrl
mov
mov
frstor
pushw
xor
jle
loope
pop
test
aam
insb
loopne
arpl
movb
add
mov
flds
aad
mov
pop
mov
jcxz
pop
jmp
jg
mov
and
movsb
sbbb
sub
jg
push
test
xabort
popf
sub
loope
cld
add
push
mov
dec
cmp
pop
add
fndisi(8087
ss
xchg
incl
scas
stos
mov
imul
call
inc
mov
cmc
push
jecxz
ret
loope
add
add
loope
cmp
pop
jl
cmc
mov
mov
pop
jbe
popa
lcall
jno
xchg
xchg
loope
fs
cmc
mov
ja
movsb
imul
xorb
popf
lret
or
mov
std
mov
mov
out
xor
int3
sahf
dec
mov
in
add
loope
jmp
test
push
enter
and
and
sub
dec
push
in
jmp
inc
mov
or
shr
call
jecxz
dec
sbb
cmp
stc
push
inc
pop
jmp
cwtl
push
loope
incb
sub
jb
push
inc
loop
aas
loope
dec
push
jecxz
and
lock
outsl
sbb
scas
leave
rorb
daa
jp
std
fs
cmp
addr16
ss
arpl
cmpsb
cmc
loope
fidivrl
add
insl
cmp
mov
fs
pushl
loope
fcmovu
stc
adc
notl
loope
scas
and
loope
xor
idiv
shl
sub
insl
fwait
nop
test
adcl
rclb
mov
or
jl
cli
loope
shrb
in
cmp
push
pusha
pop
xchg
mov
jg
mov
cmp
in
sub
inc
dec
loope
push
dec
sbb
or
jge
scas
cmp
loope
mov
in
loope
test
or
loope
jne
add
pop
inc
andb
das
xchg
sub
in
inc
and
pop
loope
jecxz
pop
stc
cmp
in
push
enter
or
aas
inc
xor
in
mov
mov
mov
icebp
mov
clc
mov
into
loope
push
and
push
push
outsl
jb
sub
sbb
xchg
fists
loope
sub
shrb
loope
push
inc
cmp
in
movsl
loope
gs
aam
push
test
loope
dec
mov
scas
and
lret
sti
dec
sub
pop
and
mov
add
jnp
ret
dec
pop
vpsubw
jae
pop
lods
or
mov
enter
nop
inc
cmpsl
out
loope
mov
pop
fndisi(8087
jns
jae
adc
and
xchg
loope
shld
add
in
lock
test
mov
inc
dec
test
adc
ljmp
push
divl
sub
sub
dec
testb
andb
bound
loope
adc
mov
add
loope
add
push
js
jns
loope
lahf
xchg
jg
mov
lods
jnp
add
pop
in
notb
push
pushf
rcr
loope
cmp
outsb
lea
mov
mov
xor
jle
xor
loope
imul
inc
xchg
inc
cmp
daa
es
pop
or
dec
pop
inc
lret
negb
outsb
loope
cmp
dec
mov
les
repnz
xor
or
dec
jecxz
dec
loope
imul
cmp
shll
pop
mov
popf
mov
sahf
cmp
das
aaa
test
loopne
jmp
push
pop
jns
test
fldenv
pop
jnp
loope
sbb
and
pop
pop
pop
aaa
push
mov
js
adc
test
sub
mov
jmp
cmpsl
push
xor
imull
mov
ret
inc
pop
inc
test
mov
int3
push
scas
jbe,pt
inc
jmp
loope
rclb
jnp
movsl
pop
mov
stc
mov
aad
cmp
sub
add
std
adc
add
lock
insl
dec
dec
push
adc
mov
pushf
popa
xchg
xchg
push
repnz
movb
dec
sub
je
into
out
shrb
lock
jmp
jnp
xchg
jle
aaa
mov
xchg
cmpsl
pop
daa
jmp
loope
shll
xchg
jmp
add
xor
out
adc
addb
jecxz
dec
add
cmp
pop
inc
mov
lods
dec
inc
jo
sub
dec
jmp
loope
fsts
aaa
je
shl
xor
addr16
insb
sub
loope
rorl
dec
xor
hlt
dec
sti
loope
mov
fs
cwtl
out
test
stc
mov
imul
xchg
pop
stos
fldt
fsubrl
pushf
scas
dec
xchg
cmp
mov
push
xor
xlat
jl
mov
sub
loope
pop
ret
fnsave
add
in
xor
fmuls
and
ljmp
mov
loope
jmp
adc
pop
in
xchg
and
rol
pushf
sbb
loopne
push
sbb
adc
out
lds
loope
mov
cmp
cs
push
pop
js
push
clc
loopne
jno
je
inc
div
out
jmp
andl
loope
sub
cmpsl
iret
loope
mov
dec
xchg
and
cwtl
xchg
jb
xor
loope
mov
fistpl
sarb
cmc
mov
jbe
sub
ss
shlb
mov
jmp
sbbl
les
mov
xor
inc
mov
out
pop
sub
jns
loope
les
out
subb
jae
mov
fabs
sbb
and
adc
nop
pop
call
aaa
and
xor
incl
out
pop
and
push
fcmovne
dec
jmp
cltd
loope
push
jae
loopne
ja
gs
and
imul
flds
loope
lds
ds
testl
xchg
jb
movsl
mov
push
mov
imul
push
gs
dec
fistps
add
jo
push
cmp
in
xor
jg
inc
es
out
loop
outsl
cmp
push
je
cli
div
adc
push
xorb
arpl
or
push
xor
pop
loope
sub
nop
movsb
loope
pop
sub
xor
scas
loope
mov
mov
shl
jne
xchg
jg
sbb
or
iret
cmpsl
pop
push
jl
stos
or
mov
xchg
pop
mov
mov
cs
jmp
mov
popa
shrb
xor
cmp
mov
call
lock
rcll
dec
inc
xchg
cs
out
lea
inc
or
mov
adc
cmp
or
dec
and
fidivrl
daa
test
in
inc
loope
rolb
jb
adc
out
loope
lods
mov
sarl
jne
add
mov
flds
test
loopne
adc
pop
add
test
dec
sub
push
add
mov
mov
and
pop
loope
nop
mov
xor
rolb
pop
add
cmp
outsl
in
add
call
mov
shlb
ret
shlb
xchg
mov
pop
fsubr
jmp
jg
out
gs
jbe
je
loope
push
push
add
or
jns
push
out
out
sub
jne
xlat
mov
loope
or
lret
addr16
dec
and
dec
cmp
jnp
test
in
inc
stos
sbb
shl
dec
xchg
loope
aaa
sti
das
mov
loope
cltd
pop
ret
or
and
dec
pop
and
out
sub
shl
add
mov
add
imul
push
clc
and
mov
xchg
or
fdiv
movsb
out
jl
adc
nop
jp
nop
add
clc
mov
aas
data16
sbb
call
adc
ret
scas
or
inc
add
out
in
jns
lahf
aam
loope
sbb
sbb
in
jecxz
mov
pop
repnz
into
in
popa
mov
call
cmp
or
push
in
lock
bound
aam
sub
in
loope
stos
cld
xchg
inc
mov
adc
aad
mov
or
pop
mov
bound
mov
cmp
lods
loop
ret
or
push
pop
sub
fbld
fdivr
in
and
add
cmp
js
add
mov
out
push
fldl
mov
loope
pop
xor
aas
out
loope
xlat
dec
lods
shll
loope
adc
inc
pop
mov
dec
int3
xor
arpl
arpl
jo
mov
xchg
xchg
stc
loope
out
mov
xor
aam
sub
insl
in
pop
fsubs
loope
cwtl
lods
mov
nop
jecxz
sti
mov
or
dec
sahf
or
mov
pop
insb
xchg
and
ljmp
cwtl
xchg
stos
popa
lock
jmp
dec
loope
in
sbb
out
loope
mov
test
loope
lds
jo
dec
pop
ror
or
scas
jp
sbb
aad
std
push
daa
inc
mov
pop
movb
pop
repnz
out
rcrb
adc
jne
pop
sbb
xor
add
loope
mov
pop
cwtl
jecxz
loope
push
iret
stos
jno
out
mov
scas
mov
imul
jecxz
and
pop
jl
scas
lock
xchg
cmp
into
mov
mov
sub
in
pop
mov
xor
outsl
jmp
add
mov
out
enter
mov
mov
push
fsubrs
outsb
imul
stos
cltd
jmp
int3
push
loope
in
jmp
and
jno
add
daa
mul
xlat
xchg
cmpsb
pop
nop
jae
dec
loope
adc
aaa
pop
push
inc
or
pop
js
adcl
xor
test
loope
pop
fucomip
sahf
outsb
adc
mov
and
loope
scas
addb
sbb
xor
shrl
adc
jne
imul
mov
xor
push
mov
popf
ds
loope
fcoms
int3
adc
or
sahf
bound
mov
enter
loope
daa
clc
das
out
inc
jo
movsb
ret
out
cs
jmp
inc
push
xchg
loope
lcall
loope
pop
movsb
xor
mov
fdivr
femms
xlat
push
bound
mov
push
nop
mov
mov
in
je
rorb
leave
inc
outsl
lods
scas
ja
shlb
add
test
stc
push
or
ret
loope
jge
and
scas
sbb
in
loope
xchg
inc
loop
cmp
mov
mov
shll
push
popf
sub
iret
mov
in
cs
mov
loope
pause
xchg
xchg
dec
xchg
adc
outsl
jnp
jns
mov
dec
dec
dec
jno
orl
mov
adc
fidivrl
mov
cmp
cld
sahf
shr
xchg
cli
dec
loope
push
lea
cs
mov
jne
and
loope
fs
lret
cmp
cmp
or
insl
into
mov
ss
test
test
sahf
and
outsb
jge
ljmp
sub
mov
dec
or
pop
dec
fildl
push
js
dec
fbstp
and
xlat
call
loope
into
push
insl
addr16
push
push
loope
push
mov
in
pop
mov
dec
jo
or
sbb
adc
mov
xor
lahf
jno
cli
insb
lret
pop
shrb
adc
std
and
lahf
ds
into
mov
inc
addr16
jl
stos
jb
pop
or
sti
jle
push
add
loope
sub
rorl
push
xor
in
loope
inc
into
jb
push
xor
jns
data16
pop
ljmp
mov
out
cld
mov
xlat
loope
or
stos
sbb
mov
mov
arpl
loop
jo
and
inc
adc
xor
xor
push
jmp
sub
stos
cmp
cmp
das
mov
sbb
das
mov
cmpsb
push
fwait
rolb
xor
stos
loope
aaa
out
mov
into
push
mov
fnop
cmc
pushf
jmp
loope
xchg
inc
adcl
push
adc
ss
cwtl
addb
lret
and
stos
std
sbb
inc
shlb
push
push
out
cmp
mov
lahf
leave
pushf
sub
xchg
out
ficoml
pop
popa
shlb
movsb
adc
xchg
push
sub
jno
out
or
in
andl
out
jo
mov
push
push
xchg
adc
lock
and
push
mov
xchg
dec
mov
add
mov
adc
jne
jo
nop
or
arpl
cmp
xchg
loope
imul
arpl
ja
shlb
in
mov
push
mov
out
jge
and
es
loope
adc
dec
andl
xchg
cmpsl
repnz
fcoml
add
lret
adc
push
xchg
sbb
sahf
pop
sub
push
aas
nop
jmp
or
jae
or
roll
outsl
lods
stos
lahf
dec
loope
test
and
and
pop
cmp
out
add
aas
stos
cwtl
xor
loope
sbb
cmpb
push
xchg
mov
loop
nop
mov
xchg
sub
pop
out
scas
mov
pop
cltd
push
stos
mov
xchg
jle
lcall
xor
arpl
aad
loop
mov
mov
lea
fs
mov
ret
mov
pusha
scas
sbb
fisttpll
rcrb
push
mov
sub
xor
out
dec
or
mov
scas
jno
and
ret
dec
inc
jecxz
jmp
out
jl
stc
jnp
cmp
xor
lahf
cltd
loope
xchg
adc
jle
adcb
in
ret
sub
loope
pop
mov
and
push
mov
lcall
push
loope
nop
idivb
fsubrl
loope
mov
sbb
rolb
adc
in
pop
loope
es
add
loope
xchg
dec
pop
and
rcrb
in
push
loope
xchg
inc
adc
ds
imul
cmp
test
std
aad
add
push
call
loope
cld
jbe
dec
sub
mov
shl
mov
sbb
push
scas
in
out
orb
loope
mov
mov
jg
xchg
push
and
out
xchg
and
inc
adc
ds
sbb
jo
shl
sbb
cwtl
push
lret
mov
mov
pop
cmp
inc
loope
repnz
jae
pop
mov
loope
cwtl
cli
cmp
jbe
dec
dec
xor
shlb
dec
roll
cmc
mov
loope
in
fildll
pop
cmp
mov
daa
movsb
pop
rol
out
inc
mov
pushf
or
out
loope
push
rorb
iret
or
jecxz
push
pushf
in
push
int3
push
mov
mov
lahf
rclb
icebp
leave
cmc
pop
jg
mov
orb
in
adc
xor
loope
xchg
jecxz
lds
push
aas
mov
ficomps
add
mov
loope
insb
mov
jne
cltd
loope
test
jbe
outsl
shll
loope
mov
push
push
shlb
mov
mov
xor
loope
adcb
lcall
or
stc
out
les
mov
mov
adc
loope
push
shl
cmpsb
or
xchg
loope
xchg
outsl
xchg
inc
pop
cmp
loope
dec
adc
xchg
loope
cmpsb
in
mov
mov
rcl
ds
call
push
and
insl
sbb
jmp
adc
mov
and
dec
shl
mov
loopne
lahf
loope
je
pop
jecxz
xchg
sbb
lods
mov
mov
std
pop
xchg
pop
out
xchg
and
in
xlat
rorb
xchg
in
and
loope
add
movl
stos
out
or
aad
cwtl
out
mov
lock
cmpsb
jmp
jp
cld
adcl
dec
loope
stos
xlat
inc
jae
push
jmp
shlb
daa
pop
xchg
add
fsub
xor
sub
dec
loope
adc
xor
rcl
sub
push
mov
cmp
add
dec
cmpsb
mov
aas
inc
xchg
pop
int
mov
jmp
cmp
orb
mov
shrb
cwtl
mov
dec
mov
fisubl
nop
jl
or
popf
js
out
xchg
pop
mov
sub
ja
dec
imul
nop
ret
loope
pop
and
dec
hlt
sub
jecxz
test
ja
dec
fs
add
loope
mov
lods
int3
mov
xchg
test
push
loope
hlt
pop
mov
cli
lcall
xchg
shlb
lret
loope
ja
adc
push
pop
mov
dec
cmp
inc
loope
or
pop
adc
cmp
and
repnz
add
push
dec
inc
xlat
lret
mov
and
in
into
int
inc
flds
sub
mov
loope
ret
mov
push
loope
mov
aaa
inc
fisttps
loope
cli
fidivrl
jge
cmp
fnstsw
pusha
repz
aad
add
mov
add
pop
cmp
out
sub
jae
dec
adc
and
gs
sbb
jp
dec
pop
loope
pop
cmpsl
or
fsubp
mov
mov
insb
adcb
mov
loop
lods
cld
ret
push
sarl
mov
int3
jnp
sbb
lods
int
push
lahf
mov
aas
loope
adc
xor
sarb
fadd
push
popa
scas
or
enter
das
bound
adc
test
cltd
fimull
loope
shrb
lods
loope
push
mov
leave
jns
add
out
jmp
or
cmp
mov
roll
jmp
jnp
push
loope
cmpsl
cmc
in
sbb
and
mov
mov
xchg
sub
sbb
push
adc
jmp
dec
sahf
cmpsb
into
stos
lock
ret
ja
pop
xorl
inc
outsl
xchg
pop
sbb
dec
lret
cmp
xchg
push
xor
xchg
or
not
push
rclb
adc
std
mov
pop
mov
push
sbb
lcall
test
or
test
out
cwtl
imul
daa
dec
loope
fldl
mov
push
inc
jb
adc
nop
inc
mov
gs
fldenv
sub
jp
and
scas
loope
xchg
mov
imul
mov
in
cmp
stos
sub
push
lret
int3
or
loope
mov
add
stos
in
and
add
inc
cmp
mov
push
pop
or
call
icebp
sbb
shll
sub
pop
pushf
cmp
mov
inc
and
lock
loope
test
movsl
clc
or
jo
xchg
cs
jo
adc
loop
or
xchg
loope
add
mov
push
dec
dec
mov
dec
rclb
sbb
mov
sub
sub
arpl
xchg
cli
cs
cs
jo
movsl
mov
dec
pushf
stos
jmp
push
sub
daa
jns
int3
loopne
test
loope
mov
jnp
loope
dec
push
in
xor
push
jo
mov
mov
loope
js
add
sub
xchg
pop
leave
jo
cld
cs
sub
pop
adc
std
shlb
stos
sti
sbb
mov
fwait
or
sbbb
loope
pop
mov
out
sub
sub
scas
call
and
dec
das
ret
loop
arpl
movsl
in
ret
xor
jns
test
loope
and
jp
outsl
add
loope
ret
gs
and
mov
stos
lea
push
sub
inc
adc
icebp
or
pop
ror
pop
das
test
clc
test
hlt
dec
and
adc
and
loope
mov
mov
ds
mov
movl
loope
and
ss
popf
sub
test
add
iret
call
loope
cwtl
jmp
out
xor
push
test
jmp
mov
sub
shl
mov
out
loope
mov
scas
cmp
icebp
loope
imul
loope
movsb
lahf
xchg
xchg
push
int
loope
sub
clc
jg
push
inc
add
out
jne
ds
lds
addb
repz
xchg
stos
jmp
sarl
cwtl
inc
sub
sub
fsub
sahf
xchg
jns
dec
cwtl
les
scas
aam
out
dec
out
in
sub
sbb
test
push
lods
cmp
loope
lods
add
add
shr
popa
test
cli
addr16
mov
rcl
inc
jle
mov
xchg
cmpsl
push
int3
xchg
test
dec
inc
and
or
aad
loope
cld
cmc
out
mov
stos
mov
stos
fldenv
lea
jnp
mov
loope
dec
sbb
add
lods
movsl
in
orb
inc
pop
ds
rclb
lahf
jne
leave
and
mov
xor
mov
xchg
jo
mov
pop
aaa
rolb
pop
inc
loopne
sbb
lock
sub
es
loope
push
repz
mov
sbb
cmovle
arpl
leave
outsb
shlb
lods
loope
imul
stos
insb
xor
mov
in
inc
cmp
scas
pop
lods
push
rcll
cmpsl
jae
outsb
aaa
les
xlat
and
into
lret
pop
out
cmpsl
inc
loope
jnp
imul
xlat
cmp
aas
xchg
jmp
sbb
sub
push
stc
cmp
in
jle
dec
stos
mov
jg
sub
push
pop
push
dec
je
iret
fwait
pop
js
cmp
jnp
xor
insl
and
loope
mov
cmpb
flds
adc
and
xchg
push
fsub
in
mov
sbb
dec
mov
arpl
nop
xchg
push
mov
dec
loope
add
xchg
add
stos
std
in
cli
addr16
loope
imul
xchg
mov
mov
lahf
cmp
and
cwtl
hlt
outsb
add
mov
mov
loope
mov
ds
mov
loope
scas
inc
and
mov
rcll
je
lods
pop
fs
push
clc
inc
cmp
test
ds
adcl
jmp
daa
fdivr
lock
push
jae
pop
jmp
cltd
loope
sub
lock
lcall
shl
test
aas
and
cmp
loope
mov
pop
lods
and
mov
and
add
add
out
jns
xor
sbb
imul
and
cld
dec
xor
or
and
adc
push
jne
or
sub
mov
movsb
popf
in
xorl
mov
or
js
enter
xchg
lea
gs
mov
loope
roll
cltd
mov
rcll
shlb
stos
dec
and
js
lds
lahf
pop
loope
shll
dec
mov
inc
dec
mov
loope
and
cltd
es
pusha
loope
ljmp
loope
push
push
test
dec
push
lcall
loope
inc
or
iret
inc
push
mov
ror
dec
fwait
imul
loope
sub
enter
mov
or
bound
push
cmpsl
and
add
jle
insl
popa
mov
mov
sti
stos
repz
outsb
dec
loope
lds
xchg
inc
push
adc
loope
pop
cmpsl
ja
inc
pop
loope
popf
dec
mov
loope
push
outsb
push
rcl
and
mov
fildl
sbb
dec
stc
mov
scas
pop
fidivl
shl
nop
sub
push
fnstenv
sbb
loope
icebp
testl
and
stos
add
push
dec
push
sbb
mov
leave
ds
clc
or
out
add
loope
sub
negl
mov
roll
shl
dec
jb
call
fisubs
push
jmp
loope
in
notl
movsw
xchg
loope
adc
outsl
ss
cmp
loope
in
push
fs
pop
gs
mov
pop
setge
std
lahf
sbb
aam
cmp
pop
repz
js
imul
mov
push
or
pop
shl
or
sbb
in
les
jp
adc
inc
jnp
loope
ja
cltd
dec
cld
loope
adc
cli
xor
aad
sbbb
imulb
mov
ror
in
sub
push
mov
mov
inc
push
aas
mov
je
mov
ret
push
mov
gs
push
xchg
or
pop
jnp
push
js
shll
inc
jno
stos
pop
cmc
add
out
out
cmc
add
mov
loopne,pt
rol
aas
sbb
in
xor
bound
jg
and
xor
inc
xor
arpl
bnd
outsb
push
mov
lods
call
jo
xchg
in
mov
jns
mov
mov
xorb
xor
mov
xchg
add
testl
loope
and
lcall
jge
or
mov
pushf
push
mov
cmp
inc
ret
fisttps
test
call
mov
pushf
dec
xchg
mov
mov
repnz
subl
iret
adc
test
call
movsl
xchg
scas
loope
fwait
mov
mov
sar
hlt
jge
sub
or
aad
fistpll
xor
out
xchg
inc
rclb
sub
pop
in
test
sahf
push
push
loope
mov
arpl
pop
dec
loope
and
cmp
pop
add
ds
inc
sbb
add
out
cmp
push
push
or
push
mov
xor
inc
xor
std
xchg
jmp
daa
in
sub
jmp
adc
jg
dec
inc
jo
jno
in
aam
cmp
mov
push
sbb
mov
jnp
sbb
imul
popa
cmp
loope
add
mov
addr16
cmp
push
jbe
push
ljmp
and
pop
lods
inc
fs
sti
mov
sub
cmp
insb
test
sub
jno
sub
ljmp
pop
mov
lods
loope
mov
inc
movsl
cs
or
add
test
mov
std
popf
shll
and
das
xor
push
aas
dec
fdivl
or
addr16
in
and
mov
adc
fisubl
and
jae
shrb
arpl
cmp
mov
add
add
xchg
fldt
enter
jg
stc
loope
mov
loope
mov
std
and
lods
cltd
mov
mov
popf
push
inc
loope
cmp
cwtl
scas
jne
ja
sbb
sbb
gs
stos
loop
mov
in
lds
out
and
mov
dec
push
fstps
xor
js
in
push
stc
add
mov
and
std
fcoml
stos
leave
std
popf
jecxz
pop
dec
xor
mov
sbb
mov
xor
or
mov
xchg
loope
inc
das
xchg
pop
sti
arpl
loope
bnd
test
imul
jb
cs
mov
loope
xchg
sti
mov
fstl
and
dec
loop
ja
ret
jmp
aam
das
adc
xor
ret
shrb
icebp
mov
sub
xor
jmp
dec
xchg
jp
out
sub
pop
fnstcw
loope
mov
orl
mov
cld
cmp
mov
push
adc
ror
mov
inc
sahf
sbb
pop
mov
loope
in
fldt
mov
loope
pushl
loopne
loope
sti
pop
jmp
jg
sbb
sub
mov
jecxz
jle
loope
stos
mov
loope
adc
call
pop
movsl
in
sbb
scas
es
sbb
loope
test
mov
cmpps
add
in
pop
jg
in
push
dec
mov
out
push
adc
pop
add
vpsraw
scas
dec
aas
scas
loope
xchg
loope
imul
lock
lahf
jmp
xor
ljmp
mov
xor
mov
add
dec
jg
outsl
push
scas
inc
inc
loope
sub
popa
adc
push
aaa
mov
dec
and
test
cmp
inc
mov
movsl
or
enter
aam
pop
lret
test
and
and
push
dec
arpl
imul
sbb
hlt
jmp
sub
pop
fwait
dec
das
adc
adc
es
cs
mov
add
out
jb
or
and
inc
scas
sbb
loope
stos
in
ror
lods
loope
jb
jno
sti
sbb
rcrb
jbe
mov
addr16
inc
mov
push
adc
out
sub
jmp
xor
loopne
xlat
xchg
gs
mov
lcall
xchg
popf
aaa
lock
sbb
xor
sub
loopne
mov
pop
jecxz
push
loope
out
nop
sub
or
fldl
shrb
loop
adc
sahf
and
mov
push
dec
loope
and
aaa
stos
or
cmp
add
sahf
in
int3
jge
push
jmp
sub
shl
add
adc
pop
imul
push
mov
jg
lret
lret
test
in
shl
pushf
ror
adc
dec
dec
add
mov
jno
out
imul
mov
jmp
cmp
lahf
popf
add
adc
in
into
cmpsb
push
cltd
shrb
xlat
imul
rcr
in
loope
addr16
xchg
aas
jno
mul
jmp
jns
mov
add
test
or
sbbb
adc
sub
xchg
cwtl
jae
mov
jmp
adc
loope
xor
lock
push
pop
fcompl
addl
cs
inc
cmpsb
nop
insl
iret
shlb
mov
js
pushf
les
mov
mov
jae
jle
xor
jbe
mov
mov
loope
add
lds
pop
cmpsb
push
mov
xchg
mov
mov
out
aam
loope
test
cltd
cltd
adc
jne
imul
sub
push
cwtl
test
jmp
jmp
addr16
fstps
ds
cwtl
fsubrs
das
jmp
and
and
rcr
ss
je
stos
loope
mov
cli
ret
lcall
jb
out
stos
loop
ds
jmp
in
sbb
mov
enter
andl
cwtl
loope
pop
push
jnp
test
xlat
loope
add
or
xchg
add
and
add
adc
mov
cmp
nop
outsl
cmp
std
pop
repnz
mov
imul
or
add
jle
test
sub
ret
movsb
int3
lahf
int
sarl
pop
test
sub
sahf
push
dec
movsl
loope
out
out
jne
cwtl
cmp
mov
scas
hlt
inc
nop
mov
aam
loop
jecxz
dec
loope
cltd
data16
lahf
or
mov
jo
push
jg
mov
lock
loope
inc
sbb
decl
mov
icebp
xchg
jmp
inc
pushf
or
loope
pop
xchg
mov
inc
lock
mov
mov
xor
jo
inc
jbe
push
jmp
loope
pop
jg
dec
pshufw
aaa
pop
aad
popa
fwait
in
sub
add
cmp
cmp
loope
lahf
fs
leave
jns
loope
dec
push
fwait
hlt
and
loope
add
mov
sbb
xchg
js
loop
loope
or
mov
pop
mov
rcl
je
or
or
ljmp
push
loop
ljmp
mov
push
insb
bound
loope
out
mov
and
loope
push
aam
lea
lret
daa
jmp
add
lods
loope
mov
stc
imul
jo
mov
dec
mov
cmp
rcrb
jecxz
and
jne
jecxz
mov
sub
or
jb
jae
sti
or
mov
add
dec
push
xchg
push
pop
sub
sub
add
jmp
ljmp
dec
outsb
pop
pop
cwtl
shll
add
mov
mov
jnp
in
push
loope
mov
std
cli
push
jb
jmp
dec
call
add
mov
cli
pop
sub
pop
lahf
loope
test
mov
loop
sub
cli
and
and
xchg
lahf
icebp
daa
test
or
adc
insb
lods
loope
imul
shrl
jge
loope
mov
dec
cmp
jb
mov
push
enter
jno
insb
andl
nop
xorl
sbb
push
jg
lods
or
loope
xchg
dec
mov
and
stos
loope
in
cmp
and
std
xor
dec
mov
mov
stos
and
mov
jg
push
mov
gs
loope
adc
clc
pop
mov
xchg
jg
in
loope
js
adc
cli
loope
cmp
dec
gs
jecxz
loope
xchg
jo
outsl
push
add
das
mov
push
lods
lcall
pop
push
test
addr16
add
cmp
stos
sub
pop
scas
lock
loope
jno
and
sbb
mov
in
pop
mov
loope
mov
xchg
sbb
pop
push
mov
and
popa
push
xor
cmp
int
cmc
mov
das
mov
xchg
in
or
arpl
andb
jge
jo
rcrl
in
loope
mov
scas
nop
inc
add
dec
pop
push
jo
in
in
pusha
fiaddl
cmp
lods
shlb
mov
cmc
fwait
loope
aas
fmull
js
sub
dec
adc
call
push
push
jo
std
add
mov
add
ret
test
stos
fsub
mov
cmp
add
add
jle
pop
push
and
pop
dec
adc
pop
dec
push
mov
cmc
shrl
jbe
hlt
inc
push
cli
xor
scas
sub
loopne
in
rcpps
adc
mov
ss
out
dec
mov
adc
fwait
in
pop
mov
sti
cmp
add
cld
loope
aam
fsubrl
xchg
cmp
adc
adc
loope
push
loop
jl
mov
mov
in
push
xchg
mov
fabs
or
jno
vmread
addl
daa
mov
inc
sbb
test
add
rdpmc
add
add
in
enter
and
scas
jmp
test
or
test
stc
loope
sbb
xchg
sti
test
lcall
inc
loope
mov
arpl
xor
dec
loope
xchg
xchg
into
imul
adc
pop
shrb
cmc
ror
cmpsb
clc
out
loope
xor
and
pop
mov
mov
insl
cltd
xchg
jmp
pop
inc
cmp
loope
and
or
push
xor
dec
mov
sub
ss
pushf
jae
out
sub
loope
adc
jo
push
mov
outsb
inc
loope
mov
loope
std
mov
adc
xor
xchg
divps
loope
pop
mov
sbb
mov
jge
inc
loope
clc
push
adc
cmp
call
xchg
jne
loope
icebp
nop
pop
mov
xor
out
pushf
mov
adc
dec
or
out
mov
mov
or
jmp
loope
leave
data16
pop
mov
add
add
andb
pop
dec
jne
dec
cwtl
xchg
push
or
mov
shl
movsb
movsl
xchg
ret
xor
mov
stos
pop
xorl
cli
add
addr16
out
loope
fnstenv
je,pn
sub
jns
int3
cmp
push
xchg
loope
imul
push
sub
orl
mov
mov
jmp
popf
ud1
loope
in
jbe
cmp
jo
inc
subl
xchg
add
sub
sbb
fsubrs
mov
fldl
xor
arpl
pop
loope
hlt
int3
cmp
pop
cltd
rclb
test
in
dec
sbb
arpl
in
cmp
imul
loope
mov
dec
pop
repz
push
test
or
out
xchg
push
stc
or
loope
mov
mov
mov
andl
jae
out
nop
cmp
and
pop
push
imul
mov
cwtl
gs
fdivrs
push
repnz
leave
scas
hlt
fldt
mov
popa
iret
adcl
sbb
aas
loope
inc
adc
mov
add
jge
sti
jecxz
les
push
lahf
pop
mov
xchg
jmp
icebp
out
pop
rclb
fmull
fnop
call
adc
test
adc
sbb
jle
push
cld
cmp
imul
pop
mov
and
jecxz
gs
loope
incl
adc
clc
out
jl
dec
in
jmp
pop
sbb
loope
int
fs
add
imul
movsl
stos
test
loope
mov
iret
push
leave
je
loope
pop
inc
or
ret
lock
stos
out
into
lahf
mov
cmp
sbb
loop
fcomps
scas
sub
xlat
mov
arpl
aas
cmp
push
xchg
jne
aaa
ret
nop
fstpl
icebp
sarl
call
loope
xor
dec
leave
cmp
bound
rorb
int
lods
adc
nop
outsl
sub
dec
and
insl
mov
dec
jns
cmp
xchg
sbb
push
cltd
jge
int3
pop
loope
sbb
popa
sbb
shl
inc
clc
mov
inc
and
out
xlat
xchg
popw
cli
daa
fidivs
jmp
xchg
or
lds
push
dec
jnp
out
cmp
scas
popa
mov
outsb
loope
lods
mov
mov
in
popa
add
loope
shlb
xchg
jp
jo
jge
fisttps
ljmp
ss
outsb
lods
fdivl
and
dec
ficomps
add
dec
movsb
sbb
pop
sar
mov
xor
or
mov
andb
and
in
dec
cmp
jo
pop
or
movsb
loopne
daa
ljmp
ficoml
mov
cmp
push
hlt
jmp
outsb
ljmp
loope
push
xorl
mov
loope
jl
pop
jae
pop
sbb
scas
loope,pn
cmp
test
in
iret
in
cmp
loope
pop
int
xchg
aad
cld
lods
xchg
pop
pop
loope
jnp
into
insl
mov
es
sub
add
cmc
mov
loope
into
dec
dec
mov
sub
mov
cltd
scas
xchg
add
mulb
cmc
gs
mov
cs
out
fstps
push
dec
in
cmp
in
sahf
mov
dec
jno
pushf
out
dec
loope
or
fisubrl
loope
push
les
loope
mov
cld
or
pop
mul
xchg
pop
mov
xchg
jo
or
lahf
jno
loopne
xchg
filds
inc
dec
test
rcr
dec
and
pop
jmp
sub
add
dec
loope,pn
pop
nop
testl
inc
aas
les
push
mov
jnp
gs
sti
repnz
mov
mov
and
xor
mov
inc
cld
loopne
loop
dec
adc
aam
jmp
push
mov
mov
add
sti
xor
xchg
loope
add
xchg
mov
cmpsl
jge
mov
xor
in
das
mov
push
pop
fnstenv
pmaxub
lods
and
inc
loope
pop
jbe
sbb
pop
loop
mov
scas
fsubr
stos
lret
sub
dec
adc
mov
mov
pop
jns
loope
jg
icebp
rcr
mov
cmp
mov
loope
dec
rol
adc
pop
lea
inc
dec
sbb
mov
jge
mov
icebp
mov
xor
add
jmp
mov
sahf
xchg
xor
imul
call
nop
push
sbb
cmpsb
cwtl
jecxz
loope
xchg
fdiv
add
jo
loope
outsb
fldcw
xchg
cmpsb
je
push
vmovsd
pop
push
cmp
loope
ret
xchg
cmpsl
js
lcall
mov
pop
mov
test
out
daa
and
mov
imul
or
mov
loope
sub
aad
cwtl
push
test
in
xchg
aas
push
repnz
popa
stc
shll
or
lahf
daa
fwait
shlb
mov
cwtl
lods
jae
idivb
or
adc
pop
and
jge
loope
sub
adc
mov
xchg
loop
dec
add
call
in
dec
test
bound
jge
or
push
leave
shl
cmp
dec
jp
dec
xchg
mov
dec
ret
in
fisubs
loope
xor
fs
loop
aaa
pop
jns
loope
inc
xchg
fidivl
inc
jnp
sbb
inc
jmp
loope
scas
or
mov
shrl
in
xor
add
jbe
fisubl
loope
mov
rcr
rorb
fisttpll
in
jmp
dec
xor
rol
loope
pop
sub
push
sbb
dec
mov
pop
out
jne
sub
aam
fbstp
add
pushf
stos
dec
mov
mov
xchg
adc
scas
lahf
cmp
loope
inc
insb
jae
mov
je
mov
js
leave
jmp
loope
xor
pop
add
sti
loope
add
jecxz
xchg
sarl
mov
push
jmp
insl
stc
sarl
std
inc
jle
xchg
aam
add
je
xor
int
mov
lods
push
jle
idivb
loope
cmc
stc
mov
or
enter
inc
jl
loop
fsubp
mov
scas
loope
mov
push
ret
pop
xchg
mov
adc
pop
call
sbb
mov
sub
jbe
dec
sbb
or
clc
pop
push
loope
jns
and
mov
or
icebp
in
push
lcall
daa
shrb
je
sub
fcoms
mov
movsl
out
loope
imul
adc
fstps
loope
shrl
hlt
add
shl
mov
mov
bound
pop
mov
jmp
pushf
mov
mov
in
in
subb
imul
xlat
pushf
mulb
sbb
adc
lret
jb
ret
das
pop
add
test
mov
shrd
shl
or
or
call
mov
lcall
cmc
dec
outsl
dec
loope
mov
pop
cli
mov
popa
mov
jge
es
loope
lea
push
mov
add
pop
popa
call
lock
hlt
in
je
leave
mov
push
or
sbb
ds
setbe
mov
jns
int
rorb
loopne
sub
or
cmp
jno
or
mov
jns
mov
sub
mov
sbbb
cli
loope
inc
jb
adcb
lock
and
mov
jp
mov
popf
cli
scas
adc
inc
or
aaa
mov
push
jb
repnz
inc
cwtl
and
movsb
ds
lcall
rorb
fs
xchg
sahf
dec
out
mov
sub
sarl
movsl
sahf
ret
repnz
test
cs
inc
js
test
daa
in
fsub
es
inc
push
xchg
dec
mov
mov
in
xor
inc
lcall
jg
lret
loope
pop
mov
dec
shll
test
dec
sub
cmp
loope
mov
insl
sti
stos
xor
js
push
push
mov
add
sbb
loope
push
scas
lods
je
add
loope
dec
mov
dec
ret
jle
fnstcw
scas
jmp
mov
push
loope
jg
inc
cli
cmp
or
push
inc
icebp
and
pop
test
test
jo
imul
lods
ljmp
fmull
xor
nop
dec
loope
insb
dec
test
mov
loope
popf
cmp
jb
xor
hlt
loop
lea
andl
test
inc
push
incb
out
add
movsb
test
xchg
loop
shl
outsb
popa
test
dec
rolb
loope
popa
scas
rol
fwait
in
add
addr16
xor
push
and
outsl
insb
and
fucomip
pusha
mov
push
aaa
cld
loope
sbb
adc
ja
jp
pushf
gs
push
cmp
cmp
lds
cmpsb
outsl
jbe
rorb
cltd
enter
loope
rcrl
push
push
xlat
jne
mul
arpl
push
push
mov
cmp
mov
pushf
out
mov
repz
jecxz
adc
loope
adc
jne
fsub
xchg
adc
test
pop
add
jg
lahf
jo
mov
shll
inc
xor
xchg
and
cwtl
in
lock
jmp
ss
loope
inc
jb
psadbw
sti
jo
pop
xchg
mov
imull
lds
lret
pop
stos
mov
dec
loope
xchg
jnp
jg
pop
cmpsb
std
jmp
popa
xchg
adc
mov
out
mov
dec
jle
arpl
mov
ret
enter
push
pop
mov
dec
loope
insl
sub
mov
loope
gs
pop
loope
add
pop
icebp
aam
jmp
mov
fstpt
test
jle
jmp
mov
in
imul
int3
loope
xchg
xchg
leave
mov
inc
int
adc
mov
rcr
cmp
out
popf
jb
movsb
mov
push
xlat
sahf
xlat
lods
jne
add
sub
scas
xor
nop
mov
cmpsl
fcmovnbe
int
and
fwait
lds
xchg
mov
pop
je
loope
scas
loop
push
sbb
loope
mov
int
loope
push
loopne
mov
sahf
addr16
loope
lods
pop
pop
gs
xor
loope
xchg
adc
cld
push
mov
and
in
les
jns
mul
loope
rolb
cltd
xor
divl
icebp
sub
or
jle
mov
jge
stos
scas
iret
decl
outsl
pop
leave
bound
sub
sbb
inc
cld
sbb
jne
fucomp
movaps
xor
xor
add
es
shrb
mov
out
andb
out
lds
dec
out
sub
aas
loope
jno
js
pop
xor
jp
xor
out
leave
pop
cmpsb
das
mov
lahf
in
pop
pop
stos
mov
sahf
push
fwait
call
mov
fldenv
mov
in
or
mov
fs
addr16
in
mov
adc
pusha
and
sbb
cwtl
adc
pop
push
vpextrw
lds
in
push
test
jp
shl
enter
jo
xchg
mov
push
xor
fs
dec
andb
and
mov
jge
inc
in
pop
xchg
sbb
push
gs
stos
pushf
mov
ret
cmpsb
imul
out
loopne
jge
aad
out
es
loope
mov
iret
push
lahf
xorb
lret
fsubp
ljmp
add
mov
es
sub
pop
stc
add
popf
pop
xchg
add
fmuls
sbb
jp
in
cmp
mov
sub
gs
sub
scas
test
imul
pop
dec
test
push
xor
xchg
jle
pop
cmp
or
xchg
stos
lods
jo
cmp
xchg
add
fwait
inc
aam
loope
icebp
mov
dec
loope
push
sti
sbb
push
add
mov
lods
and
pop
in
adc
scas
add
insb
daa
ja
fwait
test
jne
cmp
mov
push
iret
sahf
mov
mov
inc
test
loope,pn
dec
cld
aam
sahf
fwait
mov
insl
jp
mov
data16
jmp
lds
mov
call
in
loope
pushf
xor
fimuls
popa
hlt
mov
and
imul
test
mov
mov
frstor
mov
into
mov
ja
cltd
in
incl
jl
imul
loope
xchg
aaa
or
out
dec
mov
pop
jae
in
nop
adc
loope
ja
mov
sbb
loope
push
adc
add
sbb
push
aad
mov
pusha
loope
sahf
inc
sbbb
mov
loope
xchg
test
add
loope
xchg
icebp
adc
inc
ds
dec
jmp
jo
cwtl
loope
and
lret
in
cltd
dec
rcrb
loope
xchg
test
loope
pop
inc
jae
in
inc
loope
je
xor
pop
loope
stos
xchg
sub
rclb
insb
enter
sub
xor
dec
loope
shll
inc
jo
repz
or
pop
adc
addr16
inc
fistpl
imul
mov
mov
movsb
js
mov
lret
lods
jo
int3
not
sub
dec
test
cs
mov
adc
push
jge
cltd
mov
lock
inc
lods
scas
loope
pop
cmpl
rcrb
xchg
push
loope
stos
call
xchg
jmp
sti
lods
add
pop
add
test
in
sub
enter
stc
pop
sbb
jae
in
je
jl
loope
cmpsl
insb
jecxz
fadds
sbb
dec
pop
lcall
in
in
add
mov
loope
aad
mov
daa
fildll
mov
aas
outsl
add
and
pop
jnp
loope
mov
cmp
fndisi(8087
test
bound
jecxz
and
fimull
loope
cmpl
ja
fwait
loope
jl
cli
mov
pop
and
sbb
jno
loope,pt
jbe
outsb
xchg
mov
fs
mov
pop
add
add
loope
fst
gs
rorb
cmpsb
gs
mov
mov
in
cmp
insl
jg
pop
mov
jae
je
repnz
loope
xchg
imul
hlt
ret
jecxz
add
psllw
jo
stc
mov
inc
test
xor
sub
aas
es
lret
inc
jmp
dec
cs
mov
mov
jne
push
add
and
sti
jg
cmp
inc
sub
adc
add
mov
cmp
push
xor
gs
pop
pop
jns
adc
addr16
jnp
sub
push
xor
popa
int
repnz
sbb
mov
jmp
jmp
mov
jp
dec
jae
in
fdivrs
add
xor
and
xchg
pop
push
cld
lcall
or
sbb
out
push
mov
add
bswap
cmp
rcl
es
dec
js
add
and
mov
jmp
sub
lcall
loope
movsl
notb
or
lock
scas
fnstcw
adc
lcall
loopne
into
loope
or
jmp
cmp
fdiv
and
mul
in
cmp
call
or
bound
and
outsb
loope
add
lret
push
sarb
mov
insl
outsb
jmp
mov
popa
mov
push
insl
popf
push
fdivl
sahf
cmp
push
fisubl
inc
rolb
and
mov
lcall
cmpsb
jmp
call
pop
mov
loope
ret
fbstp
jns
pushf
mov
loope
pop
push
stos
xlat
sbb
lock
out
lcall
aaa
loope
inc
xor
mov
mov
ja
adc
mov
and
push
sti
js
orb
adc
push
add
psraw
push
insl
cmpsb
ja
mov
and
rcrb
push
inc
cmp
fdivrs
shl
arpl
adc
loope
lret
xor
loope
sub
xchg
inc
mov
dec
leave
xor
inc
adc
nop
mov
addr16
or
loope
xchg
mov
fwait
loope
xchg
hlt
pusha
mov
aaa
mov
pop
enter
arpl
jmp
mov
xchg
sarl
ljmp
popa
and
ja
loope
daa
adc
roll
lock
mov
loopne
add
in
out
insl
fwait
mov
mov
hlt
jne
and
in
or
addr16
pop
adc
ret
mov
dec
mov
jmp
jmp
add
addr16
mov
sbb
mov
xchg
dec
loope
jmp
leave
loop
adc
mov
cli
mov
jne
loope
fwait
leave
nop
and
movsb
mov
loope
lret
scas
push
xchg
int
cmp
cmp
aas
jmp
add
sbb
xchg
je
or
jno
mov
jp
loope
jge
pusha
cmp
pop
loope
or
out
and
in
or
out
imul
repnz
addr16
xor
fildl
jb
sub
xchg
stos
and
xor
xchg
sub
jle
push
sbb
nop
bnd
adcb
jno
loope
sub
jbe
add
bnd
adc
ret
add
lods
jmp
jae
jo
lods
push
aam
in
stos
mov
cmpsl
push
xor
sub
inc
test
push
movsl
test
and
jmp
mov
leave
push
jo
add
sbb
or
bound
jmp
mov
pushf
loope
inc
stos
dec
mov
ja
loope
adc
divb
jns
js
loopne
adcb
test
loope
pop
mov
lret
pop
leave
loope
and
push
loope
cmp
cmp
pop
cs
push
test
fwait
inc
rorb
movsb
add
xorb
push
in
out
mov
cmp
lret
mov
push
out
inc
out
pop
add
add
pop
jno
movsl
or
in
addr16
xchg
push
loope
imul
pop
push
daa
loope
pop
or
vmwrite
arpl
sub
xor
test
in
negl
sub
push
cmp
dec
in
rol
jae
or
test
mov
outsl
sti
add
dec
mov
jmp
ret
sbb
mov
cmc
pop
test
int
jo
or
mov
and
add
imul
mov
jmp
lock
xchg
in
and
mov
xor
sub
std
hlt
loope
enter
flds
stos
loope
lods
lods
test
lock
adc
sbb
pop
sti
jne
mov
insb
jno
cli
add
rcrb
xchg
mov
push
jp
bound
lods
and
adc
xor
loope
sub
pop
adc
rolb
loope
mov
movsl
lods
loope
lret
jbe
jmp
and
xchg
sarb
movsl
push
sarl
inc
jae
push
mov
sub
lret
cmp
in
and
ficoml
push
inc
xlat
mov
loope
or
push
faddl
mov
jne
enter
inc
mov
cld
add
mov
cmpsb
push
addb
pop
jmp
jmp
arpl
cmp
or
push
add
mov
jl
loope
addr16
sub
mov
jmp
lock
mov
jns
or
jb
scas
mov
das
pop
loope
lahf
mov
sbb
cmpsb
pop
pop
xchg
mov
loope
fcmovne
adc
cmp
rcr
test
mov
add
add
and
loope
dec
or
sbb
sub
addr16
loope
mov
sbb
loope
adcw
out
adc
push
mov
sbb
sub
stos
int3
sub
loope
mov
fidivrl
dec
inc
mov
ja
inc
decb
fucomip
or
lock
xor
mov
scas
mov
mov
loope
mov
fldenv
pop
in
rcl
pop
mov
sahf
pop
scas
popf
imul
lcall
test
nop
aad
movsl
xor
aam
fimull
loop
dec
aas
dec
sub
inc
jl
jo
jmp
in
mov
mov
shrb
roll
cmp
lds
and
das
dec
sbb
loope
pop
push
sahf
test
jp
cmp
repnz
jo
out
in
mov
adc
lock
lods
adcl
insl
aad
leave
into
mov
and
stos
jae
imul
mov
jl
out
sti
sarb
adcl
adc
cltd
pop
loope
jbe
mov
test
mov
sti
outsb
sahf
int3
dec
popa
scas
cld
imul
in
add
loope
inc
xor
loope
mov
or
rol
inc
mov
movsl
loope
push
shrb
mov
out
out
ret
and
mov
mov
xchg
in
outsb
jle
push
push
std
iret
pop
aam
pop
inc
loope
mov
loope
jecxz
imul
dec
mov
dec
dec
and
jne
mov
dec
inc
add
movsl
xchg
ss
leave
pop
push
mov
add
inc
loope
arpl
test
xorb
push
leave
test
int3
nop
mov
ss
das
dec
lds
sub
xchg
mov
pop
add
loope
cltd
cmp
sbb
add
adc
mov
leave
and
push
push
xchg
adc
mov
xchg
loope
insl
fwait
repnz
cli
out
adc
rcr
data16
inc
push
dec
jmp
adc
mov
mov
arpl
lea
adc
mov
push
in
addr16
loope
popf
pop
and
mov
mov
cs
loope
mov
lds
sbb
dec
rorl
jns
das
loope
es
xor
lcall
sahf
iret
fisttps
jmp
ret
mov
mov
jmp
push
sub
xor
sbb
dec
js
push
ljmp
sub
in
or
imul
mov
imul
aam
jo
stos
pushl
push
cmpsb
out
cmp
mov
pop
and
repz
mov
add
ss
mov
and
pop
inc
cs
dec
into
or
inc
jecxz
xorl
in
mov
je
mov
les
cmp
inc
or
out
mov
dec
adc
sub
sub
xchg
in
sbb
cmp
dec
loope
clc
jae
mov
js
rclb
cmp
ja
enter
iret
jl
notb
ljmp
out
xchg
push
lea
clc
shrl
lahf
mov
dec
jmp
lods
loope
cmp
ja
iret
test
push
sbb
jns
xchg
cmpsl
loope
dec
ret
dec
scas
push
lock
add
enter
pop
loope
push
hlt
test
loope
mov
inc
mov
sbb
in
sub
pusha
fadds
loope
test
dec
lret
or
imul
incl
xor
movsb
xor
loope
in
adc
popf
push
jg
sub
loope
test
dec
sub
dec
iret
sti
jmp
loope
pop
lea
pop
xor
pop
lods
out
dec
fstps
pop
mov
push
mov
loopne
adc
sbb
dec
aad
dec
dec
sahf
cmp
cmpsl
test
and
sti
mov
add
call
loope
cmp
jnp
lret
loope
std
xor
scas
adc
fcmovnu
cmp
repz
movsl
mov
jbe
dec
sti
pop
loope
aam
call
loope
mov
jg
add
cmpsl
cmp
in
add
mov
loop
out
mov
pop
das
in
arpl
cmpsb
loope
adc
cli
mov
int
aaa
cmp
xchg
xchg
loope
push
or
dec
loope
mov
jns
in
test
jno
inc
int3
scas
outsb
loope
push
in
sbb
jg
jb,pt
jae
loope
inc
loop
fcomps
and
sahf
inc
outsb
mov
loope
stc
lret
out
mov
sbb
lcall
dec
mov
inc
mov
jle
cs
sbb
pop
inc
jp
jno
pcmpgtb
jmp
repnz
mov
jbe
pushf
and
shl
aad
xor
in
std
bswap
fmuls
pushf
popa
fisubl
push
xchg
imul
add
ljmp
jg
mov
andb
inc
ret
mov
mov
xor
mov
push
mov
mov
aad
jo
jmp
cmpb
mov
pop
js
shrb
jge
ret
es
push
rcl
call
loope
push
mov
imul
sbb
push
pop
and
data16
or
pcmpgtd
loope
lcall
loope
pop
push
nop
dec
mov
clc
loope
jle
stc
loop
repz
lods
sbb
ficompl
ret
push
inc
xor
pop
sbb
mov
dec
loope
dec
xchg
mov
loope
dec
cmp
xchg
loope
pop
mov
mov
push
loopne
cmc
clc
lcall
xor
xor
loope
cmp
xchg
dec
mov
js
xorb
adc
loope
mov
outsb
cmp
mov
cmc
in
scas
fstp
loope
mov
pop
adc
xchg
mov
outsl
jb
imul
jecxz
gs
popl
push
loope
mov
jge
adc
xorb
and
cli
or
jnp
fsts
movsb
ja
jl
sti
mov
mov
mov
cmpsl
rolb
xchg
rcr
dec
movsb
mov
and
and
loope
sar
xchg
call
inc
inc
lret
adc
mov
andb
loope
insb
push
jp
mov
cltd
vmovlpd
gs
inc
mov
jg
sbb
int
aaa
push
mov
pop
insb
add
add
sarl
inc
inc
jo
daa
sbb
dec
loope
mov
adc
and
ss
daa
rcl
scas
mov
add
in
ret
dec
pop
loope
jnp
int3
out
mov
rcl
out
cmp
js
popa
mov
fisubs
add
mov
test
mov
pusha
test
loope
shll
inc
mov
sub
loop
sub
loope
lock
cmc
inc
movsb
and
push
nop
sub
mov
xor
mov
lock
loope
lcall
fucom
push
xchg
sub
xchg
or
into
daa
xor
inc
leave
add
fucom
out
add
loope
outsl
stc
jae
mov
loope
hlt
xor
lds
mov
mov
cmp
mov
mov
ret
add
fisttps
out
sbb
mov
xchg
dec
lods
loope
add
outsl
xlat
adc
jmp
jmp
cltd
lea
int
dec
xlat
loope
fisttpll
adc
adc
jae
je
cltd
ret
loopne
nop
js
push
and
pusha
loope
sub
cmpb
pop
mov
sub
movsb
loope
pop
imul
jnp
mov
jecxz
cmp
sbb
loope
fiadds
loop
mov
jmp
mov
loope
dec
scas
adc
mov
aam
sub
pop
or
loope
mov
enter
loope
iret
int
cmpsl
xchg
adc
jg
fucomi
xor
je
pop
iret
sbb
xchg
stc
and
aad
sub
into
jle
pop
loopne
mov
cmc
jns
lock
mov
fsubr
jecxz
xlat
pusha
scas
repnz
in
loope
out
pop
jl
hlt
rorb
scas
lods
mov
out
xchg
loope
fstpl
sub
cmpsl
loope
and
xchg
std
ljmp
cmp
xchg
loope
ja
dec
es
orl
mov
fldenv
sub
xchg
iret
inc
add
mov
add
stc
jecxz
xor
fsub
add
loope
lcall
call
push
mov
shr
loope
xor
fldl
push
aam
in
jg
leave
scas
and
dec
jae
mov
ljmp
push
dec
or
testl
inc
inc
out
dec
mov
xor
test
mov
mov
outsb
adc
call
in
pop
popl
int3
pushf
lahf
push
jmp
add
loope
pop
push
mov
fisttps
icebp
loope
sbb
sub
loope
call
sub
loope
jo
or
or
push
int
push
imul
lods
adc
outsl
inc
clc
pop
loope
xor
mov
out
andl
mov
arpl
shr
add
pop
movsb
fstl
into
rcl
or
add
mov
and
add
sbb
lods
sbb
mov
cltd
xchg
rclb
pop
and
dec
and
gs
mov
or
pop
aas
std
scas
inc
adc
add
mov
jp
cmp
inc
and
dec
lock
imul
scas
loope
add
mov
loope
adc
jl
sbbb
jno
add
sbb
gs
loope
mov
scas
xor
sbb
fsub
push
dec
out
jl
mov
fnstcw
call
inc
inc
dec
and
loope
loop
pop
lret
lock
mov
xchg
out
pop
ss
loope
pop
aaa
mov
cli
mov
ljmp
stc
repz
mov
rol
lods
jne
dec
icebp
arpl
loope
jnp
test
js
imul
fs
std
loope
repz
jp
lret
lahf
xchg
loope
div
pusha
push
stc
dec
push
push
jp
daa
pop
dec
mov
sahf
fsub
sarb
mov
inc
sub
jnp
mov
mov
pushf
out
test
jle
jge
ljmp
fidivrs
mov
loope
and
sbb
mov
fwait
loope
adc
aad
mov
insl
nop
imul
mov
not
jno
dec
js
ja
adc
imul
bound
cmpb
inc
or
jp
repnz
xor
or
shlb
testb
jb
mov
out
jecxz
leave
loope
adc
mov
loope
rcll
fidivl
xchg
and
mov
in
pop
push
loope
and
jmp
xorb
add
in
cmp
cwtl
push
mov
jle
push
xlat
loope
mov
les
inc
fwait
loope
xor
ja
pop
lods
sti
loope
cltd
hlt
incb
xchg
scas
fnsave
fidivrl
outsl
sub
cmpsl
sahf
test
sbb
inc
repz
loope
aam
fucomip
or
adc
int3
sbb
mov
push
dec
jo
mov
jbe
daa
pop
pop
arpl
push
imulb
out
xor
shr
lea
loope
inc
bound
insl
sarl
and
ret
jl
icebp
mov
imul
push
cmp
jnp
push
fs
loope
ret
in
out
mov
fndisi(8087
xor
aad
and
shll
popf
sbb
loope
test
xchg
and
cs
jmp
push
imul
data16
sub
popf
popa
cltd
pop
rolb
ss
push
mov
mov
cmc
loope
andl
dec
shr
test
cmp
inc
add
and
lock
mov
adc
test
inc
insl
adc
fcompl
mov
icebp
mov
mov
rorl
shl
push
cmp
jge
loop
rcrb
cmc
std
cmp
jmp
out
xor
inc
cmpsl
bound
je
and
cld
das
std
lret
and
loope
imulb
xchg
test
scas
inc
xor
cmp
push
sti
aam
loopne
loope
pop
addr16
hlt
aas
shrl
idivl
aaa
xorl
xchg
in
inc
pop
lods
insb
cli
out
int
lea
jmp
sar
loope
fstpt
push
push
loope
xor
or
push
inc
scas
rcrl
add
mov
loopne
in
mov
lods
mov
or
jne
and
pop
out
sarb
or
mov
mov
sarl
ljmp
dec
mov
pop
shr
in
add
inc
cmp
loope
jecxz
sbb
dec
ss
inc
dec
stos
scas
ret
int3
mov
lock
lret
mov
cmp
push
add
mov
bound
loope
ljmp
loope
add
imul
cmpsl
lret
cltd
jp
mov
stos
nop
xor
rorb
pop
movsl
xchg
or
and
sbb
data16
aas
loope
mov
shl
adc
dec
or
aaa
cltd
adc
and
sub
in
push
in
sub
daa
aaa
lock
mov
mov
xchg
imul
icebp
loope
into
std
push
pop
pop
pop
ss
add
sub
shl
stos
adc
pop
aam
sbb
ljmp
rcll
popf
inc
outsl
jmp
cmc
push
lds
std
repz
push
enter
push
mov
pusha
cmp
gs
les
sub
pop
pop
daa
or
cltd
popa
loope
jg
imul
inc
cli
fstp
fstpt
jg
addr16
incb
fs
mov
push
and
push
daa
aam
jl
test
mov
inc
dec
xlat
mov
in
and
push
push
push
cmpsb
mov
lea
data16
xchg
jns
mov
nop
xor
fldl
add
stc
and
stos
pushf
subl
insl
addr16
or
into
jge
mov
loope
aas
sti
sub
inc
ljmp
xor
loope
push
push
shll
les
sbb
loope
insl
fwait
mov
loop
loope
repnz
mov
jle
addb
flds
jecxz
mov
fwait
pop
lret
gs
or
xor
out
jns
scas
mov
sti
pop
xchg
imull
and
scas
jmp
popa
adcl
or
adc
add
jle
loope
cmp
lock
out
xor
mov
addl
rcl
jmp
or
mov
lock
popa
pop
loope
xor
and
lret
pop
lahf
loope
icebp
out
popf
inc
push
pop
mul
fsts
cmp
push
mov
inc
sbb
outsl
popa
or
mov
fisttpl
movl
addr16
mov
loop
push
rclb
xchg
roll
jmp
lret
and
add
mov
fs
mul
outsl
jne
enter
sbb
xor
addr16
clc
jg
loope
sar
jmp
push
or
outsl
pusha
call
sub
xor
mov
mov
xor
dec
sub
and
lods
divb
loope
sbb
jbe
sub
loope
mov
pop
ret
add
hlt
add
lock
mov
stc
repnz
or
adc
mov
in
pop
mov
and
mov
leave
pushf
sub
aaa
xlat
negl
cmp
cld
in
lods
mov
or
and
adc
int3
push
js
push
ds
mov
mov
xchg
or
jg
lods
test
jle
dec
dec
sbb
loope
loopne
sub
jb
call
xlat
jg
ljmp
add
pop
aaa
hlt
lds
out
loope
out
sub
aad
mov
cmp
in
add
adc
mov
aam
mov
adc
aaa
xchg
jmp
inc
imul
mov
jae
loop
ds
fsubrs
jmp
jmp
jle
dec
ret
in
and
jo
push
and
shl
jo
push
enter
call
or
cmc
lds
in
sub
loope
das
jbe
addr16
data16
sarb
xchg
addb
je
fistpl
into
xor
dec
xchg
in
js
pop
lods
ljmp
mov
lds
pop
orl
mov
repnz
push
bound
cmp
mov
cmp
in
mul
mov
pop
aam
loope
sub
mov
aaa
push
jg
iret
rcl
and
out
mov
int3
out
loope
and
add
cmp
dec
inc
mov
cld
loope
into
xchg
jge
lahf
out
loope
adc
fnstcw
push
cmpsl
rolb
in
cmpsb
imul
pop
in
mov
xor
xchg
loope
into
sub
inc
cli
loope
fsubrl
nop
std
push
adc
jae
push
xor
mov
aas
dec
jmp
test
mov
push
dec
xchg
jne
mov
or
jp
das
ret
loope
fwait
jmp
or
sbb
shll
addr16
out
loope
cs
shll
sbb
icebp
push
sbb
sbb
mov
sbb
shl
les
pop
test
jl
insb
mov
mov
dec
jne
movsb
cli
add
pop
mov
cmp
jne
jmp
xchg
or
repnz
mov
cmp
loope
cltd
in
aaa
add
shr
lock
mov
sti
cld
lock
stos
pop
dec
repnz
push
arpl
stc
fs
dec
mov
push
jecxz
adc
loope
iret
mov
shr
lret
loope
jns
xchg
push
sahf
sbb
sub
enter
xchg
stc
inc
loope
jmp
inc
cmc
je
loope
jle
scas
xlat
daa
pop
jmp
shlb
sbb
in
mov
inc
jg
sbb
loope
popf
add
pop
and
dec
push
xor
or
push
ss
and
pop
shll
adc
aam
cmpsl
sub
mov
ret
dec
fs
hlt
scas
add
sbb
in
nop
fiadds
push
inc
jge
pop
or
loope
aaa
fisubl
shlb
jno
or
movsb
fldenv
out
fsubl
loope
sub
or
sti
push
pop
add
pop
dec
and
out
daa
movsl
les
imul
loop
push
gs
aam
sub
loope
adc
loope
lcall
loope
data16
stos
shrl
dec
test
jge
movsl
mov
std
push
loope
adc
jcxz
xchg
iret
loope
cmp
lds
fwait
in
shlb
dec
sti
enter
lock
add
lods
push
sub
jecxz
fildl
cwtl
icebp
or
out
jl
jb
loope
aad
xor
sarl
loope
inc
in
jle
repz
loope
outsb
cmp
jo
pop
aad
ret
loope
loop
jns
jp
js
pushf
in
loope
dec
xorb
or
mov
or
adc
fs
mov
xor
xor
jno
in
xchg
pop
inc
fmull
or
rorl
lea
push
inc
add
in
push
in
jne
inc
xlat
inc
aam
cmc
loope
movsb
lds
addr16
push
xor
mov
lods
stos
sbb
push
cltd
cmpsl
repnz
sbb
sbb
xor
dec
outsb
les
lods
add
inc
push
pop
cmp
stc
loope
jne
sbb
mov
push
xchg
lea
adc
rorb
cli
pop
call
filds
pop
inc
pushf
in
dec
add
out
push
pop
adc
sub
xchg
and
mov
les
loope
pop
mov
pop
loope
movsl
mov
pop
mov
push
loopw,pn
or
sarb
xchg
jg
add
push
pop
scas
shll
xchg
lret
push
in
cltd
pop
loope
pop
std
sbb
pusha
rorl
addb
pop
aam
sbb
mov
xor
data16
add
aad
int
jno
jae
xchg
add
push
dec
cmpsb
sub
and
adc
fucomip
aaa
mov
sub
add
movsb
int3
es
inc
shl
les
mov
inc
and
js
xlat
jmp
shr
ds
jne
shr
sub
loop
push
push
clc
scas
push
loopne
enter
add
scas
and
mov
loope
cmp
rorb
pop
test
mov
xchg
inc
or
cmp
mov
push
into
jl
xor
pop
sub
dec
test
or
mov
inc
ja
jecxz
adc
stos
push
test
aaa
jbe
mov
mov
and
or
hlt
or
and
sbb
inc
enter
cmp
scas
loope
mov
sahf
sub
jbe
push
and
fnstcw
and
loope
push
test
jp
inc
in
pop
ds
push
or
inc
loope
movsl
xchg
mov
sbbb
outsb
je
aaa
sub
xchg
adc
add
imul
cltd
addb
je
jbe
shrb
ljmp
movsb
fildll
push
fisubs
jl
xchg
arpl
fndisi(8087
jb
shl
push
sbb
fstps
nop
loope
adc
jp
inc
mov
gs
cld
add
cmova
mov
js
loope
pushf
cmp
mov
aad
xor
push
ljmp
push
ja
push
arpl
pop
in
cmp
loope
jno
cld
andl
cmpsb
repz
jae
lea
mov
jle
push
scas
and
ficoms
jmp
dec
push
fsub
dec
aad
lods
sbb
inc
xchg
loope
addl
bound
loope
jl
push
adc
scas
add
imul
cmp
xor
xor
cs
adc
fiadds
mov
inc
jmp
loope
pop
pop
out
sub
cmp
clc
rcrl
call
mov
sbb
pop
jae
sarb
sub
loope
add
xchg
add
add
push
sahf
sbb
xchg
lods
stos
iret
and
and
jmp
sbb
fiaddl
ret
jnp
movsl
lcall
scas
shll
loope
in
cli
outsl
lock
dec
push
pop
jge
inc
cmp
mov
loope
mov
rorb
inc
cmpsl
stc
add
sbb
adc
cld
loopne
outsb
jns
inc
ret
adc
jle
loope
jmp
pop
psraw
clc
jo
push
cwtl
ret
pop
add
cmp
jae
loope
adc
iret
loope
lcall
addr16
stc
pop
adc
repz
and
add
sub
fadd
sbb
and
or
out
loope
andl
ror
cmp
cmovb
xor
mov
cmp
cmp
loope
imul
inc
ja
push
mov
out
push
pop
test
insb
cltd
jo
fisubl
inc
cmpsl
add
test
xchg
mov
cmc
stos
xchg
subb
sti
mov
mov
data16
ljmp
cld
cmp
adc
jle
shlb
xchg
sbb
push
movsb
mov
push
cltd
repnz
mov
or
enter
leave
mov
mov
mov
mov
nop
pop
adc
push
sbb
jmp
into
and
push
out
insl
ljmp
loope
imulb
loope
dec
into
sub
stos
fdivs
xor
add
aad
push
std
loope
movsb
mov
loope
into
mulb
enter
xchg
jno
movsb
outsb
rcrb
cmpb
out
push
xor
adc
jmp
push
push
mov
jne
dec
push
loope
cs
lock
popa
int
add
movsb
loope
jo
mov
outsb
and
sbb
xor
ljmp
inc
adc
aad
or
and
or
push
clc
scas
popf
out
into
nop
inc
pop
pop
and
add
cmp
pushf
mov
repz
sbb
outsb
loope
and
mov
mov
mov
mov
jge
sub
loope
lods
pop
fisttpll
dec
fucomi
outsb
cmpsb
mov
push
pop
jle
xor
int3
aam
cmp
hlt
or
sarb
adc
loope
das
decl
loop
shrb
in
jmp
mov
jmp
inc
pop
gs
rolb
call
mov
arpl
sti
loope
push
iret
int
data16
loope
test
call
jmp
ljmp
gs
pop
ret
test
jo
je
rolb
mov
ret
push
push
inc
mov
in
loope
pusha
push
ja
lds
test
pop
sbb
subb
jne
mov
mov
sbb
xchg
lcall
loope
test
test
dec
inc
jo
lods
ret
fidivl
loope
jge
int
lea
dec
dec
mov
daa
lock
mov
cmp
or
ret
or
dec
jno
cltd
aaa
cmpsl
rclb
mov
and
jmp
cmp
stos
mov
loope
aad
leave
cmp
loope
mov
data16
push
daa
cwtl
aam
jecxz
mov
lahf
sub
cmpsl
loop
push
rclb
stc
sahf
xchg
or
call
mov
mov
and
loope
out
xor
int3
sub
loopne
lods
or
adc
gs
cmpl
push
lods
loope
fisubrl
pop
loope
push
ljmp
inc
les
rcrb
push
jmp
or
js
sub
fistpll
push
or
movsl
mov
xchg
sub
in
cmc
jo
sbb
iret
loope
mov
icebp
mov
fcoms
inc
xchg
mov
ds
jmp
push
loope
je
mov
loope
cwtl
xchg
cltd
faddl
xchg
jo
mov
push
adc
dec
in
cmpsl
out
jg
sub
icebp
jnp
push
sbb
iret
fdivl
or
xor
mov
loope
or
mov
jp
nop
xor
mov
mov
push
loop
adc
adc
in
fimull
sub
jb
mov
push
aaa
mov
popf
shl
inc
rclb
sbb
ss
inc
movsl
in
cmp
adc
js
cwtl
ljmp
mov
imul
loope
adcb
mov
pop
pop
jge
jns
mov
pmulhw
loope
pop
cmp
ljmp
loope
cmp
xchg
aam
lock
cmpsb
jae
mov
das
mov
jmp
lods
rolb
push
leave
jae
jmp
jbe
aam
inc
xor
loope
stc
jg
sub
fucomi
loope
and
or
sub
loope
gs
lock
popa
xchg
push
loopne
jmp
jne
mov
xchg
cmpsl
gs
loope
mov
mov
fsubrs
mov
inc
call
lret
add
ds
fdivrs
in
pusha
ds
push
loope
xchg
inc
loope
adc
popa
mul
imul
outsb
rorl
mov
loope
dec
mov
mov
cmp
aad
and
arpl
ret
push
popf
sub
sbb
cs
data16
adcb
dec
cmpsl
arpl
mov
fs
scas
sbb
cmp
adc
lret
scas
repz
push
test
out
scas
dec
loope
add
push
loope
sbb
daa
mov
call
push
subl
out
mov
mov
dec
mov
lock
call
popa
in
arpl
push
dec
mov
not
or
adc
inc
jnp
or
xor
or
mov
cwtl
add
jp
test
or
ret
movsb
jmp
add
xor
sbb
push
lods
es
addr16
stc
in
or
call
sub
xchg
sub
loope
dec
movsb
push
push
stos
popa
loope
shlb
and
mov
pop
in
push
test
mov
pop
mov
in
add
push
jp
data16
mov
mov
std
in
in
data16
movsb
enter
movsl
push
das
pop
cwtl
pop
mov
stos
inc
xchg
aam
xchg
jecxz
inc
adc
add
or
ja
out
and
xchg
mov
sbb
pop
adc
rep
daa
in
add
popa
mov
cmpsb
ret
loop
lods
sahf
loope
fistl
cmpsl
mov
jo
xor
les
rorl
xchg
mov
fcoml
mov
jns
jo
or
mov
jl
cmp
jb
int3
popf
mov
imul
shrl
sub
lock
xor
repnz
rcll
xchg
adc
add
inc
insl
repnz
jmp
pop
mov
loope
pushf
add
aas
and
daa
xchg
aaa
fincstp
in
lock
sahf
loope
mov
divb
mov
ret
lds
jp
shrl
push
shrb
filds
aam
push
adc
shlb
cmpsb
lods
add
in
jno
ds
mov
sbb
loope
cmp
lods
push
cmp
test
clc
cmp
stos
nop
and
ffree
mov
xchg
mov
xchg
lock
inc
aad
add
adc
lds
pop
loope
out
frstor
loope
fists
je
aaa
loope
push
xchg
xor
inc
outsb
lret
fstps
loope
shl
sahf
ds
test
loope
push
je
std
or
push
loope
rorl
and
loope
bound
push
loope
out
mov
loope
xchg
xchg
jg
sub
repnz
mov
cwtl
jge
pushf
cli
loope
leave
aad
lret
loope
out
shl
scas
out
rolb
pop
divb
ret
mov
jb
jp
ljmp
mov
push
loope
test
gs
es
add
inc
push
aam
mov
push
and
inc
loope
sbb
fsubp
adc
mov
loope
inc
std
outsb
and
sar
pop
xor
repnz
loope
icebp
into
push
sub
adc
pop
test
and
fimuls
cmp
sub
inc
jae
mov
loopne
loope
jp
pop
xchg
daa
out
xor
add
nop
stos
js
test
or
leave
dec
out
repz
jne
decl
lock
in
les
mov
loope
cmp
out
loope
aam
call
subl
mov
stc
jnp
in
mov
xchg
and
outsb
fs
push
mov
mov
cli
repz
push
cmp
add
loope
or
mov
loope
cmpsl
lcall
les
loope
mov
mov
lock
negb
pop
push
pop
bound
and
and
les
jmp
aas
int
shrb
dec
pop
ljmp
add
xor
push
loope
pushf
pop
fs
out
shrb
fwait
mov
sub
lds
shll
dec
cmpsb
push
dec
push
push
add
adc
jb
rolb
dec
xor
ljmp
in
popa
loope
bound
and
push
stos
adc
jl
mov
inc
test
dec
icebp
out
test
loop
out
loope
test
dec
lock
xor
insb
js
loope
ss
sbb
pop
cltd
or
divb
loope
daa
out
dec
mov
or
add
inc
sub
and
lds
sbb
shl
loope
jb
outsb
xchg
retw
xor
mov
es
dec
aad
sbb
jmp
sbb
loope
pop
add
loope
in
and
fwait
scas
loope
sbb
jne
fnstsw
jno
test
jb
ret
loope
repz
fisttps
in
aad
hlt
add
cmc
scas
loope
push
mov
mov
jo
movsl
les
js
sub
pop
rcrb
int3
outsb
xor
fsub
inc
sti
xchg
scas
jle
fldcw
mov
add
stc
jmp
pushf
add
lahf
pop
mov
cmc
cltd
loope
or
dec
sbb
push
xor
call
pop
adc
loop
cmp
mov
push
dec
adc
mov
jne
mov
int3
bound
dec
loope
cwtl
out
mov
loope
and
out
fists
xchg
mov
popa
cmp
mov
pop
xor
sarb
ja
jmp
pop
push
lods
repnz
mov
mov
loope
sbb
shll
repz
push
stos
pop
loope
in
je
bound
mov
shlb
lock
out
gs
mov
dec
mov
loope
mov
push
mov
dec
jmp
ss
loope
add
dec
loope
pusha
ret
cmp
aaa
dec
mov
mov
sbb
and
mov
out
push
loope
mov
lret
push
loope
pop
scas
jbe
push
or
loope
or
mov
sbb
jnp
mov
dec
jle
aad
cmpsb
loope
sub
inc
fistps
loope
xor
jo
push
sti
add
mov
aam
xchg
jecxz
xchg
loope
or
lret
stc
mov
arpl
inc
imul
loope
mov
mov
and
mov
test
ficoms
sahf
or
rcrl
adc
iret
sub
fmul
mov
cmp
xchg
sbb
test
dec
and
mov
iret
xlat
jne
add
or
in
lods
loope
jge
or
lds
in
mov
pop
xchg
push
cmc
loope
push
fcompl
jl
loope
xor
add
movsl
iret
add
xchg
sbb
loope
sbb
shl
pop
xor
iret
test
xchg
repz
cltd
mov
loope
pop
insl
lahf
dec
sbb
adc
cs
xchg
xchg
stc
ja
loope
push
push
mov
das
adc
push
mov
fucomip
loope
imul
loope
pop
mov
shlb
and
ljmp
pushf
pop
xchg
dec
lods
ficoml
fstl
in
int3
rorb
aad
mov
loope
cmpsl
pop
popf
scas
inc
xchg
loope
cltd
xor
fs
push
jp
push
loopne
jne
xchg
push
fst
sbb
lods
pop
int
ret
mov
jecxz
dec
frstor
fildll
mov
loope
mov
loope
lods
push
scas
push
mov
xlat
and
shrb
push
dec
adc
loope
or
out
add
pop
sbb
push
call
xchg
ret
loope
rclb
in
fisubrs
mov
dec
loope
push
push
inc
pop
mov
mov
jno
lret
loope
aam
fwait
mov
and
add
adc
cmp
xor
or
loope
push
test
ljmp
cmp
push
sub
push
xchg
mov
loope
leave
mov
jns
mov
xchg
bound
and
dec
adc
das
pushf
lret
popa
aam
mov
imul
in
mov
sbb
mov
or
rclb
in
pushfw
jecxz
jo
pop
movsb
inc
mov
mov
insl
xor
ret
jo
in
mov
stos
push
stos
xchg
mov
adc
ljmp
xlat
les
mov
and
dec
jecxz
adc
mov
out
inc
test
loope
rclb
gs
pop
loope
mov
mov
xchg
add
loope
xchg
sbb
xor
mov
mov
loope
out
cli
cmp
adc
out
mov
outsb
xlat
dec
loope
mov
out
sbb
mov
jge
fidivrs
test
rorb
xor
sub
adc
jo
mov
out
jmp
ljmp
pushf
pop
xor
xchg
add
in
int
jp
out
jmp
ja
enter
xchg
lods
add
lcall
xlat
das
mov
mov
ret
mov
gs
jb,pn
arpl
mov
ret
mov
mov
aas
sarb
movsb
mov
aaa
adc
push
inc
push
push
and
js
push
jnp
sbb
push
lods
loope
icebp
sub
inc
sub
dec
insb
and
mov
xor
add
mov
loop
out
jmp
jmp
xor
sub
rolb
pop
mov
js
in
ja
dec
idivl
xchg
and
or
addb
shlb
ret
imul
push
sahf
jb
imul
mov
add
mov
loope
xchg
jno
cmpsl
popa
adc
cmpl
pop
rclb
pop
dec
es
mov
enter
fsts
loope
push
mov
js
mov
rcrl
fildll
ss
rorb
add
in
js
pop
ja
in
scas
add
out
or
loope
adc
outsl
add
push
mov
roll
fwait
inc
sahf
aaa
aam
rcrb
jge
popf
and
pop
inc
loope
inc
in
cmp
lods
xor
jge
add
jmp
mov
mov
and
dec
loope
pop
in
mov
insb
mov
push
jo
pop
inc
loope
dec
stc
cmc
cmp
and
jl
jmp
mov
sub
add
dec
jmp
leave
pop
gs
adcl
out
call
loope
call
sbb
cmp
mov
popf
mov
or
js
xchg
loope
sub
shl
repnz
hlt
imul
loope
inc
push
jb
jno
dec
xor
adc
mov
loopne
insb
aas
mov
mov
clc
fisttps
adc
andb
sbb
and
sbb
mov
mov
repz
js
or
cmpsb
insb
xchg
insl
not
add
mov
fwait
mov
push
rcl
movsb
adc
pcmpgtb
repz
and
cmp
sbb
in
ja
imul
add
add
xchg
inc
jnp
pop
js
inc
xlat
and
sub
push
nop
fcmovnbe
pop
ret
add
xchg
or
xlat
aas
out
sub
and
loope
push
jae
jg
mov
loope
mov
test
adc
mov
adc
dec
mov
and
in
out
add
loope
xchg
and
stos
loope
jecxz
mov
push
mov
icebp
arpl
jb
sbb
mov
adc
insb
add
shlb
in
cld
cld
push
loope
or
jne
pop
shl
movsl
sbb
pop
xchg
jp
mov
inc
in
mov
mul
in
mov
lock
mov
mov
sbb
loope
mov
add
inc
test
push
repz
push
ja
jnp
gs
hlt
dec
ret
ds
ret
and
cmp
mov
adc
loope
lods
pop
cld
iret
repnz
inc
ds
sub
jmp
ret
decl
das
adc
mov
adc
pushf
aas
mov
pop
repz
cli
add
outsl
into
loope
lcall
loope
or
icebp
mov
rcr
insl
mov
sbb
loope
shl
int3
dec
jg
cmp
push
mov
cmp
mov
mov
daa
aam
in
pushf
adc
scas
call
mul
push
ror
jg
mov
jne
xor
sbb
leave
mov
sbb
ja
imul
and
fistpll
test
fdivp
aas
sbb
dec
add
cmp
and
add
mov
and
movsl
movsb
popa
mov
ret
mov
adc
insl
jno
inc
loope
pop
test
int
in
jnp
mov
mov
fisttpl
shrb
loope
xchg
xor
stc
or
or
lret
loope
into
sbb
xchg
cmp
adc
adc
cmpb
dec
lea
sahf
ja
pop
sub
cltd
jo
fs
and
cwtl
mov
movsl
adc
loop
ret
fiadds
adc
xchg
loope
loopne
push
xchg
fs
push
jo
xor
push
jno
push
shl
pop
and
sub
xchg
xchg
rclb
loope
inc
adcb
lret
or
std
jo
add
and
sub
jns
lahf
stc
dec
add
jmp
jmp
popa
loope
cmp
push
xor
dec
es
inc
les
mov
dec
xorl
mulb
push
push
out
mov
jnp
jle
jns
jmp
add
cmpsb
inc
cmp
sub
mov
loope
loopne
call
and
and
aam
push
popf
jnp
rcr
jmp
repz
inc
sub
jo
sub
inc
add
pop
into
shlb
ss
in
pop
loope
inc
mov
pop
jmp
outsb
testb
push
jp
pop
sarb
loope
sti
icebp
mov
push
std
adc
ret
jns
push
loope
jle
sbb
loope
mov
lret
sub
loope
popf
jne
lds
frstor
jo
dec
lcall
push
loope
xchg
in
pushf
lret
sahf
loope
jno
xor
ret
loope
mov
xor
loope
pop
or
mov
fidivrl
scas
push
xor
xchg
jge
or
pop
cmp
loope
mov
repz
outsb
sbb
jmp
mov
cltd
cmpsb
repnz
xchg
hlt
insb
loope
mov
je
mov
das
inc
loop
lds
repz
jmp
in
inc
data16
jecxz
sbb
push
sbb
aad
and
jmp
shlb
fcmovne
mov
push
cmp
add
jmp
cmp
mov
inc
or
inc
jo
push
rcrb
or
inc
rorb
movsb
fimull
testb
or
xor
test
outsl
sbb
loope
jl
fcomps
sbb
lock
mov
out
arpl
sbb
push
test
rcll
push
push
lock
movl
push
xchg
mov
sbb
in
imul
jne
insb
mov
ljmp
add
aaa
push
frstor
loope
sub
jbe
lcall
mov
xchg
je
push
or
mov
add
push
js
push
mov
or
push
cltd
push
jmp
sbb
lret
lahf
movsb
mov
loope
jae
or
ss
lidtl
fadd
or
mov
cmpsb
loope
and
inc
arpl
loope
sbb
cmc
loope
mov
xchg
psraw
cmp
xchg
shll
imul
outsb
shlb
cmp
jecxz
loope
adc
rorb
or
jmp
outsl
xor
cli
in
das
pushf
int
mov
idivl
sub
dec
sbb
in
loope
push
arpl
lock
ss
popf
sub
dec
and
lock
jmp
add
jno
out
shlb
loopne
int3
rcll
sub
test
ret
test
xor
jl
ficoml
adc
stc
pushl
stc
dec
xor
out
mov
mul
aam
pop
icebp
mov
sbb
in
fldenv
fcomps
add
mov
jmp
or
pop
xor
mov
mov
shrl
and
jae
es
pop
mov
xor
mov
enter
mov
jmp
gs
std
imul
loope
outsl
push
jo
call
jmp
jecxz
mov
loopne
mov
mov
push
fucompp
lds
sub
ds
bound
sbb
loope
cld
notb
cmp
sbb
lret
dec
dec
loopne
nop
loop
mov
fs
push
insl
fmuls
and
jns
loope
xchg
dec
in
mov
mov
xchg
and
push
add
jge
loope
or
sub
test
pop
loope
mov
fsubrs
jne
xchg
dec
jns
shrb
fistpll
xor
adc
inc
or
shrl
xor
daa
ljmp
add
loope
sarl
arpl
fiadds
xor
inc
mov
jb
xor
daa
xchg
std
loope
inc
loop
popf
sbb
or
in
clc
test
xchg
shll
movsb
loope
xlat
inc
pop
jne
pop
outsb
jg
sub
jmp
loope
mov
push
rcl
outsb
sub
cwtl
test
out
in
aam
push
cmp
sub
in
sbb
ret
jno
ss
repz
and
sbb
icebp
mov
out
mov
add
movsl
in
mov
sub
cmp
aad
aaa
add
ja
and
js
xor
sarl
sub
bound
aaa
and
jae
movsb
lret
out
sub
jb
lret
jmp
bound
loope
subl
aas
loope
lcall
leave
enter
data16
pop
call
and
loope
ja
pushf
xchg
int3
cmp
rcl
mov
mov
pop
jmp
or
jl
test
mov
movsl
inc
loope
and
bound
mov
daa
jne
lock
cmpsb
loope
lahf
xor
xchg
add
loope
mov
jmp
mov
dec
dec
sub
ja
loope
popf
mov
fidivs
mov
inc
pmulhw
sub
stos
icebp
push
jno
jo
mov
f2xm1
faddl
scas
xor
fs
loope
popa
gs
or
cmp
xchg
aam
jg
add
outsl
mov
loope
dec
repnz
xchg
aad
ljmp
pushf
push
in
movsl
push
cmpsl
push
dec
sbb
std
or
add
clc
loope
mov
push
sahf
mov
push
dec
pop
insb
jne
mov
sti
dec
fwait
xchg
ljmp
inc
mov
mov
and
imul
jo
dec
loope
jl
hlt
dec
mov
loope
mov
popa
mov
leave
nop
lcall
sbb
pop
lods
lock
push
ret
fsubrs
push
mov
lfs
mov
adc
sub
or
inc
call
popf
xchg
out
fsubrs
fcomi
jmp
enter
add
mov
push
dec
jp,pn
mov
inc
repnz
scas
pop
adc
jne
sahf
pusha
hlt
jnp
loope,pt
cmc
sbb
push
mov
loope
xchg
stc
sub
and
clc
push
lret
push
sub
jecxz
pop
fwait
xchg
sub
mov
std
fistpll
test
cmpsl
imul
addb
and
inc
xorb
into
pop
pop
cwtl
in
mov
add
mov
pusha
push
in
loope
pop
adc
call
mov
xor
mov
test
xchg
data16
sbb
cli
xchg
or
or
inc
cmpsl
lods
push
insl
pop
mov
loope
xor
mov
xchg
mov
out
loope
push
lahf
ret
fnstsw
nop
push
out
xchg
jo
jle
leave
sbb
jl
mov
xchg
aad
sub
lds
pop
in
jo
mov
clc
mov
and
ss
pop
add
insl
icebp
mov
and
pop
mov
jmp
push
mov
loope
int3
fldcw
jo
stos
jge
sbb
fucomp
mov
into
aad
pop
nop
mov
in
fcmovb
mov
mov
lahf
or
xchg
inc
or
jb
pushf
add
jecxz
mov
icebp
inc
xchg
loope
call
mov
xor
jmp
jno
aas
loope
leave
decb
mov
shlb
or
mov
jmp
loope
lret
shlb
and
xchg
fldt
fidivrl
jecxz
pusha
or
fwait
inc
hlt
loop
mov
fucom
loope
add
sbb
enter
and
jno
mov
jle
xchg
and
dec
pop
jecxz
jo
pop
sbb
xchg
mov
jo
loope
lods
dec
sub
notl
cmp
ljmp
inc
fucom
scas
jo
pop
jmp
inc
stos
data16
outsb
xor
xchg
in
andb
fsubr
cmp
out
jno
loope
xchg
pop
iret
push
lcall
es
dec
sbb
loope
push
ds
xchg
sub
pop
or
ret
test
push
cltd
push
in
fstpl
pop
shl
jge
push
xchg
cmpsb
clc
or
sbb
popa
mov
loope
fisttpll
jae
xlat
and
sbb
out
sbb
inc
adcl
xlat
stos
rolb
aas
pop
mov
loope
test
fwait
into
jmp
mov
sub
and
out
orl
out
lcall
rdpmc
xchg
pop
nop
mov
jnp
in
in
js
push
loope
dec
test
loop
fnstcw
jmp
mov
dec
ds
mov
dec
lods
mov
push
xchg
inc
movsb
das
sbb
test
and
xchg
imul
adc
jle
fwait
rorl
mov
in
mov
loope
push
in
inc
add
insb
test
aam
adc
in
popa
aam
loope
add
push
add
xor
enter
inc
sahf
loope
je
out
push
mov
les
jmp
dec
test
push
stos
shrl
inc
loope
les
mov
lock
sbb
jecxz
xor
in
rorb
adc
dec
sbb
xor
mov
loope
daa
lret
mov
andl
movsb
in
loope
sub
gs
cmp
loope
cmp
mov
sub
push
insb
lret
divl
add
stc
xchg
in
or
cmp
test
xchg
cmp
mov
out
pop
ror
js
xchg
push
out
scas
mov
stos
int3
mov
int
fnstsw
mov
movsl
cmp
jno
dec
jl
lds
cmp
and
int
mov
push
dec
jl
inc
mov
in
fs
and
push
cmp
int3
fnstenv
sbb
inc
xor
divl
pop
leave
call
mov
in
mov
inc
aad
pop
xor
outsb
rol
inc
rorb
inc
iret
mov
cmc
popa
sub
cmp
push
movsb
lcall
leave
mov
jns
loope
stos
subl
or
addr16
jo
pusha
ficomps
in
adc
cmpsb
jge
ss
iret
shl
mov
and
or
inc
dec
popa
int3
loope
fcompl
outsb
push
ljmp
pop
xor
adcb
aas
pop
cmp
loope
nop
icebp
inc
dec
sbb
xchg
mov
cmpsb
loope,pt
loopne
bound
lret
outsl
out
loope
add
incl
push
lock
shlb
insl
scas
pop
mov
js
ret
stos
sub
pop
gs
in
fs
popf
outsl
mov
or
call
es
mov
adc
imul
fwait
test
mov
nop
js
aam
in
mov
lock
xchg
roll
add
in
sub
sbb
dec
nop
jnp
push
loope
bound
push
loope
mov
int
sahf
jno
loope
pusha
xlat
push
loop
sub
icebp
stc
in
adc
pop
sbb
mov
insl
dec
mov
outsb
push
cld
push
or
pop
imul
test
movsb
mov
add
pop
aaa
popa
mov
mov
mov
lret
mov
jl
lods
stos
pop
jecxz
insl
or
mov
mov
sbb
mov
stc
sub
cmp
adc
popa
loope
cmp
add
test
loop
mul
push
cwtl
or
loope
dec
pusha
mov
int
scas
push
addr16
loope
mov
sub
flds
sbb
adc
xor
out
js
insl
addr16
jbe
lods
dec
dec
jo
inc
les
mov
mov
push
iret
loope
adc
inc
or
add
push
jmp
add
loope
cld
pop
std
dec
push
pand
inc
xor
mov
sbb
sahf
jbe
xchg
loope
mov
sub
ss
inc
adc
mov
pop
cmp
adc
pop
or
imul
sbb
mov
dec
cmovae
lods
mov
iret
loope
ja
dec
sub
out
sbb
not
xchg
loope
mov
je
loope
sti
push
les
mov
xchg
xchg
add
cmp
inc
push
sbb
sbb
adc
push
loope
ja
js
mov
gs
dec
in
out
stos
pop
insl
mov
outsb
in
push
and
leave
loope
call
daa
pop
add
loop
gs
enter
sarb
addl
shll
test
cmpsb
adc
lock
mov
pop
out
sub
mov
loope
arpl
jmp
loope
or
out
pop
daa
push
in
aad
mov
enter
out
rclb
jo
mov
push
fsubr
and
dec
loope
stos
in
jmp
insl
outsl
cltd
loope
aaa
sbb
rcrl
jne
xchg
rcrb
pop
jo
in
stos
gs
das
cli
aaa
insl
or
jmp
add
jns
outsl
loope
shlb
push
xor
loope
dec
sub
inc
loope
cwtl
pop
mov
cmp
lea
jge
dec
rcrl
cmp
fiaddl
dec
shlb
xchg
loope
mov
lret
div
roll
sub
cmp
push
lods
loope
mov
xor
fidivrs
icebp
popf
jo
cmpsb
jmp
and
in
sbb
sti
loope
xchg
inc
pop
adc
and
cmp
imul
out
inc
loope
sarl
loope
incb
rol
pop
inc
dec
loope
ds
push
mov
inc
enter
stos
loope
cwtl
dec
sub
dec
xchg
xchg
adc
xchg
repz
cmp
loopne
sub
inc
loope
adcb
cmpsl
adc
shr
jp
cmp
jmp
test
xchg
out
or
xor
xchg
scas
popa
movsl
jo
into
cmp
jl
call
cmpb
or
and
loope
call
loope
pop
jmp
and
mov
loope
push
cmp
inc
push
push
idiv
loope
and
lcall
sarb
or
pop
jo
dec
inc
call
loope
into
xor
push
dec
xchg
xchg
add
xchg
in
add
in
cwtl
pusha
test
pop
fisubl
cmp
test
lock
or
stos
push
mov
sub
adcb
inc
out
loope
jp
cmc
jge
sahf
mov
rcrb
movsl
pusha
je
lock
sub
sub
pop
jo
or
jge
cmp
loope
sbb
mov
inc
outsb
adc
arpl
loope
lret
lods
inc
push
xor
out
cmc
sub
cli
out
xchg
dec
or
in
neg
dec
imul
sub
mov
mov
rorb
roll
jmp
shl
add
stos
cmp
popa
inc
test
cmp
push
pop
jmp
inc
pop
jmp
sub
sbb
movsb
in
aad
loope
rcll
xorl
sbb
loope
lds
push
cmp
cmp
fs
jecxz
mov
cmc
sbb
in
rol
xchg
loope
cmp
sti
movsb
cmpsb
adc
lods
sub
mov
mov
inc
orb
in
fwait
xor
push
sub
ljmp
xchg
imul
pop
mov
add
sub
mov
mov
xor
mov
lock
popf
pop
les
add
xchg
jbe
add
add
cs
adc
sti
push
das
xchg
xor
mov
lods
pusha
pop
lods
mov
mov
mov
sub
lock
rcrb
cmpb
sahf
cmp
pop
or
andb
lret
ds
ret
std
add
bound
mov
jbe
shr
arpl
not
ret
push
inc
xchg
mov
repnz
xor
mulb
inc
incb
call
push
mov
loop
dec
sbb
idivl
add
arpl
dec
mov
out
dec
xor
rorb
sub
cmp
ds
aaa
sub
filds
clc
popa
push
pop
inc
rcr
sub
inc
push
loope
inc
jns
cmc
insl
jb
ds
jge
jg
shrl
shr
pop
add
ret
int
outsl
xor
rorl
push
cmc
in
popa
insl
mov
mov
fildll
inc
jo
aad
xlat
jbe
pop
xor
inc
loope
xor
loope
out
mov
jmp
addr16
cmp
or
xchg
imul
push
sbb
je
std
lods
and
shlb
cmpsb
and
add
les
cmc
vorps
rolb
push
stos
mov
pusha
in
cmpsl
lods
mov
cmc
icebp
jno
mov
mov
dec
dec
pop
xchg
loope
mov
stc
loope
ret
mov
les
dec
fsubp
in
jle
xchg
xchg
xchg
pop
push
mov
and
or
xchg
mov
jecxz
loop
fsubl
sbb
mov
pop
push
pop
loope
dec
mov
or
cltd
push
aam
mov
add
mov
jecxz
pop
xchg
adc
jae
push
int
sub
rcrb
popa
enter
in
jecxz
sti
out
loope
cmc
aaa
rclb
pop
or
les
loope
pop
sub
loope
jl
enter
mov
scas
xor
jnp
push
adc
clc
cli
push
mov
lods
into
loope
mov
cmp
stos
cld
ja
mov
popa
or
xor
test
notl
out
loope
push
out
mov
ljmp
xlat
shl
in
and
mov
adc
cmp
es
sahf
xchg
sbb
xor
out
movsl
out
mov
aas
repnz
and
sbb
loope
adc
repz
cmp
jno
in
ja
mov
gs
cmpl
sbb
lret
cs
hlt
in
test
cmp
jmp
jge
sbb
sbb
repz
sbb
pushfw
out
mov
cmp
repz
imul
or
mov
xchg
and
cwtl
ficoml
xchg
xchg
pop
jbe
movsb
loope
push
push
mov
insb
test
push
stos
cmpb
loope
sbb
jns
pop
dec
or
fadd
or
xor
jo
mov
sub
je
aad
sub
out
jo
mov
mov
jne
loope
aam
push
xchg
cmp
mul
mov
ret
repz
loope
jno
mov
mov
mov
jmp
jb
decl
jl
cld
loop
add
jle
fdivs
push
sbb
dec
in
pop
std
pop
mov
iret
sub
add
adc
jmp
lock
add
jb
pop
ret
sub
int
lds
stos
loope
or
mov
or
adc
test
or
adc
cmp
loope
cmpsl
inc
dec
shlb
and
dec
loope
testl
push
sub
push
in
mov
mov
add
and
jo
popf
mov
sbb
push
xchg
sub
push
loope
lea
xor
mov
sbb
sub
dec
loope
insb
fadds
repz
aam
jle
jnp
cmp
sbb
or
mov
pop
out
int3
adcb
pop
add
testb
add
add
pushf
dec
aam
jle
test
js
sbb
push
or
push
inc
mov
sub
inc
loope
lcall
loope
outsl
daa
cmp
insb
shl
mov
pop
mov
imul
fldl
push
xor
loopne
outsb
int
out
loope
in
jnp
xchg
jns
insl
mov
inc
int
and
sti
sub
pop
lds
jae
ror
mov
mov
push
dec
sbb
jmp
out
in
loope
or
jbe
lcall
dec
inc
mov
push
subl
xlat
cld
stc
cwtl
add
pushf
das
adc
stos
leave
stc
cmp
pop
inc
loope
jg
or
shrl
lret
ss
loope,pn
mov
fldt
xchg
in
inc
jbe
dec
int3
or
lret
fdivl
jg
fists
pusha
fsubp
iret
sar
icebp
movb
dec
arpl
loopne
loope
jno
gs
repnz
jne
fimull
xchg
clc
cli
lret
sub
popa
sub
loope
sbb
pop
dec
push
movsb
loope
jnp
imul
push
inc
lods
cmp
jnp
sbb
xchg
fdivl
pop
push
mov
adc
mov
pause
pushf
movsl
fcomps
jne
jg
popa
lock
add
cmpsb
add
pop
sbb
xchg
aad
loope
jne
jae
pop
test
dec
jo
pop
jmp
insl
jecxz
das
dec
mul
xchg
lods
mov
mov
mov
scas
ficomps
cli
outsb
pop
aas
inc
es
jecxz
loope
js
das
loop
pushf
xorl
bound
es
xchg
jg
int
imul
xor
xchg
xor
xchg
ret
scas
xchg
call
xchg
push
mov
mov
aad
add
sbb
ja
mov
loope
mull
lds
movsb
mov
pusha
insl
adc
lock
xor
rclb
lahf
push
loope
clc
xorl
mov
sub
call
loope
pop
scas
imul
outsl
sti
sub
sub
xchg
xor
jne
outsb
jge
std
nop
pop
loope
out
mov
xchg
sbbb
addr16
xorl
in
add
out
push
imull
pop
fcmovnbe
mov
cltd
dec
jo
push
fsubrp
or
in
cmc
xchg
aas
push
mov
fs
push
mov
pusha
dec
jmp
int3
push
mov
arpl
notl
inc
mov
loope
rcl
mov
ret
xorb
xchg
xchg
cmpl
and
pop
jecxz
mov
test
hlt
mov
xor
dec
loope
es
pop
movsb
adc
cld
xchg
ljmp
jmp
or
insb
loope
loop
jnp
push
cmp
and
in
cmp
adc
out
clc
mov
stc
mov
sub
mov
movsl
fabs
sub
push
and
les
cmp
out
rcrb
loope
pop
mov
int
push
mov
fwait
sbb
mov
or
push
lret
add
dec
in
pop
mov
push
jb
iret
insl
mov
loope
fistpll
sub
idivl
loope
enter
push
test
ror
mov
sub
inc
jo
je
cmpsl
jg
xchg
and
loope
add
xchg
loope
rcr
sub
aaa
sbb
add
mov
jno
pop
or
mov
mov
cltd
sbb
inc
loope
fs
cmpsl
pop
or
add
in
adc
into
xchg
fwait
loope
pop
out
mov
push
xchg
cwtl
cmp
xor
inc
loope
pop
ficoms
mov
mov
ret
or
mov
xor
test
jo
fwait
sub
jge
fcoml
loope
insb
stos
mov
pop
jb
pop
ret
int3
sti
div
mov
mov
inc
mov
sbb
xchg
test
call
inc
std
sbb
inc
jnp
mov
mov
inc
sub
outsb
or
pop
xchg
pop
and
xchg
loope
sub
test
loope
adc
in
shrb
subb
push
xchg
and
loope
pop
push
fsub
add
or
insb
adc
sub
lea
fstl
mov
cli
not
pop
cwtl
rcll
cld
pop
push
sti
jmp
and
data16
or
loope
sbbl
add
cmp
jg
mov
inc
das
roll
arpl
xor
push
and
and
aas
adc
mov
pop
xor
jle
xchg
jmp
loope
dec
push
test
rclb
cltd
inc
push
iret
es
dec
or
out
sbb
ss
jo
in
imul
cs
insl
xor
loope
and
xlat
call
les
int3
jmp
call
loope
cmp
icebp
sub
sub
jns
fs
leave
inc
movsb
int
loope
sbb
dec
loope
sarb
jmp
inc
cmp
mov
rcrb
xor
jo
sti
int3
std
adc
loope
dec
sahf
dec
nop
test
push
xchg
jge
mov
inc
sub
sub
frstor
shlb
and
push
xchg
loope
cmp
adc
push
stc
les
shr
int3
in
add
int
jbe
or
loope
push
xor
add
xchg
in
repz
pop
sub
xlat
lds
xchg
test
add
mov
dec
nop
inc
mov
test
data16
fcoml
and
pop
mulb
jo
daa
pop
and
into
loope
in
jno
adc
mov
enter
in
je
push
mov
loope
mov
shld
add
adc
shll
scas
loope
mov
aas
or
mov
movsb
arpl
sub
xlat
sbb
inc
call
xchg
push
in
push
dec
dec
outsb
std
fbld
cmp
je
xchg
in
sub
js
addl
push
jb
popf
loope
mov
aam
lea
pop
adc
xchg
loope
mov
aaa
jno
nop
rcrb
add
cld
ljmp
pusha
or
out
jns
cmpl
mov
dec
gs
add
pop
loope
incl
xchg
fptan
fwait
sub
lea
je
out
push
in
fdivs
dec
cmp
push
in
pushf
lret
mov
xor
ss
mov
xchg
sub
loope
decb
mov
inc
sbb
cmp
cmpsb
mov
xchg
jmp
push
loope
mov
jmp
jne
loope
and
cs
inc
jl
xchg
fistpll
mov
les
icebp
mov
rcl
xchg
out
mov
xchg
ds
jecxz
mov
ja
inc
mov
or
and
pop
or
sbb
call
loope
incl
jno
sahf
loope
pop
lcall
loopne
aam
sbb
or
xchg
loope
xchg
test
gs
lcall
push
mov
pop
push
mov
lret
test
dec
push
push
xchg
sbb
push
and
pop
mov
sub
mov
in
fld
sbb
jb
out
inc
jae
cltd
fsub
ss
dec
add
push
cs
loope
cmp
cmpxchg
mov
xchg
add
pop
mov
adc
call
xor
or
inc
stos
adc
bound
xchg
jne
cli
dec
xchg
jge
movsl
out
cmp
std
loope
fstl
dec
std
xchg
popf
jmp
and
mov
sub
std
mov
inc
or
idivb
xchg
loop
and
insb
loope
lock
call
cli
push
jecxz
out
adc
aad
fsubp
push
pop
movaps
xor
cmp
adc
mov
cld
decl
mov
call
stos
cmpsl
in
in
stc
loope
fcoms
popf
sbb
push
mov
je
sbb
into
mov
loope
fisubrs
cmp
pop
add
popa
jl
loope
adc
jno
loope
jecxz
scas
or
cmp
loope
sbb
pop
popf
cmpsb
fs
rorb
test
jae
sub
xlat
jbe
shl
int3
cmc
mov
or
into
loope
sub
xchg
adc
cltd
bound
mov
adc
leave
push
into
loope
nop
fidivl
push
loope
xor
xchg
aaa
loope
iret
aam
mov
jae
xchg
mov
push
call
cmc
cmp
lods
fisubrl
loope
push
push
mov
aad
loope
mov
popf
mov
arpl
out
push
or
dec
loope
mov
nop
repnz
outsl
sbb
out
xor
out
mov
mov
enter
cmpsl
or
push
sbb
cmp
and
sbb
dec
mov
ret
repnz
push
or
loope
daa
jle
pop
mov
iret
cmp
jb
xorl
test
jmp
in
out
out
bound
push
inc
enter
sub
test
lock
add
andb
mov
outsb
out
pop
inc
call
mov
daa
mov
mov
push
decb
jmp
inc
fwait
and
sbb
mov
jecxz
sub
aas
loope
jle
xor
xor
and
jmp
aam
aaa
lcall
loope,pn
adc
xor
sarb
add
sahf
xchg
loopne
out
out
fimull
sbb
int
cli
cmp
loope
xchg
test
jmp
and
sbb
mov
xor
sti
pop
mov
call
je
aad
popf
push
xchg
sub
ret
jnp
outsb
dec
jns
sub
push
ja
xor
out
loope
pop
fldcw
mov
inc
mov
fmul
in
rorl
mov
lcall
je
in
push
jmp
out
jl
xchg
mov
adc
push
bnd
imulb
fiaddl
cmpsl
sbb
aaa
fwait
jl
jmp
fs
loope
pushf
lods
pusha
adc
mov
shll
sbb
sub
loope
std
jne
sub
mov
nop
out
int
shlb
mov
out
jb
rcrb
shr
and
xchg
adc
iret
loop
push
mov
loope
nop
scas
sbb
jo
and
das
ljmp
or
inc
in
cmp
jo
inc
dec
push
inc
out
push
mov
pop
add
lock
test
xchg
stos
rep
lcall
cwtl
sub
sti
in
cs
or
cltd
outsl
popf
in
loope
jo
sbb
stc
test
jbe
adc
fs
push
out
pop
loopne
jno
icebp
dec
rcr
mov
pop
mov
push
call
lcall
add
dec
jp
sbb
loope
sub
lret
mov
inc
inc
jg
add
cs
xor
add
jmp
jp
loope
mov
cld
ljmp
inc
inc
add
push
sahf
loope
add
dec
loope
dec
pop
jo
mov
xor
xlat
adc
jnp
ret
outsl
inc
mov
jmp
lock
fwait
sbb
les
mov
jmp
inc
push
dec
aad
std
movsb
pop
inc
pop
cmp
iret
loope
sub
mov
loope
shr
push
cmp
mov
orb
out
pop
jle
loope
iret
pop
and
fadds
shlb
pushf
adc
scas
in
mul
jo
mov
loopne
lahf
cmp
adc
xchg
test
cmpl
dec
cmpsb
js
jmp
and
jecxz
mov
push
loope
xlat
lcall
mov
sar
mov
sbb
sbb
outsb
fsub
push
lret
jp
cmp
test
rcrb
test
int
pop
out
add
mov
add
push
jmp
mov
jnp
mov
xchg
xchg
imul
das
out
loope
xchg
lcall
in
mov
inc
fs
scas
jp
aad
sub
mov
or
testl
xchg
out
sbb
fst
stos
dec
imul
jmp
loope
dec
mov
loope
loop
cli
push
mov
je
sub
bound
andl
test
cs
jo
sub
dec
cmc
jo
in
ds
xchg
pop
scas
push
loope
test
or
mov
dec
mov
stc
loope
xorl
push
pop
jne
shlb
xor
jmp
add
cmp
ljmp
loope
movsb
adc
adc
sar
movsl
lock
xlat
jg
jb
push
adc
xor
outsb
mov
add
incb
shr
addr16
test
and
in
lods
ljmp
out
mov
add
lret
inc
xchg
add
bound
inc
and
cld
add
pop
ds
jmp
repz
cmp
mov
mov
imul
jmp
mov
or
aaa
xchg
add
insl
jge
mov
lock
dec
rcr
je
lods
out
stos
jbe
aaa
loope
bound
mov
pop
loope
ret
push
enter
jecxz
push
aaa
es
rcrb
mov
sub
les
sub
pop
pop
mov
in
ds
jo
cmp
mov
xor
std
loope
dec
jge
jmp
ret
sub
daa
stc
xchg
adc
lods
nop
aad
mov
push
mov
push
xchg
lret
insl
ret
out
mov
loop
ss
in
repnz
loope
xor
pop
sbb
and
mov
sbbb
inc
xchg
and
scas
loope
bound
out
mulb
icebp
pop
sub
jmp
jle
dec
mov
mov
and
or
push
andl
add
xchg
hlt
push
fsub
push
bound
scas
fldt
mov
popf
xlat
sti
sbb
jmp
pusha
shr
lret
nop
das
xor
add
outsb
cmp
stc
loope
sub
jb
pop
add
jnp
mov
imul
pop
insb
sbb
movq
xor
loopne
jecxz
popa
aas
imul
jg
add
test
pop
inc
ljmp
adc
or
loope
into
icebp
popa
push
dec
xor
mov
das
mov
fnsave
mov
mov
jmp
in
cli
push
loope
dec
lods
je
loopne
hlt
shrb
inc
test
in
sbb
ja
mov
push
inc
add
cmp
jecxz
hlt
sub
loope
cmp
dec
sti
loope
fcoml
jnp
jne
ds
test
push
jns
mov
lods
repz
pop
adc
xchg
stc
mov
pop
inc
sub
fbld
out
pushf
ds
fdivrs
or
mov
icebp
rolb
cmovl
out
jmp
fsub
ret
iret
dec
mov
std
pop
adc
into
js
jmp
xor
loope
test
cmpsb
loope
mov
lret
stos
cltd
loope
mov
xchg
adc
push
loope
sub
out
lock
loope
sub
xchg
mov
dec
pop
loope
les
fildl
andl
js
jmp
aaa
xor
dec
repnz
adc
cs
jmp
lock
adc
sti
sahf
or
loope
cmp
out
push
ret
aam
dec
shl
fldl2e
scas
adc
call
jp
mov
pop
push
inc
fstpl
sub
loop
add
xchg
in
jecxz
rolb
ret
in
mov
loope
adc
gs
jle
loope
cmc
and
dec
inc
loope
inc
mov
jbe
imul
lret
pop
dec
mov
or
push
insl
xor
sarb
cmpsl
or
push
adc
in
test
adc
loope
js
push
outsb
add
mov
shl
pop
test
je
or
dec
aam
nop
loope
stos
fisttpl
out
adc
ds
lods
pushf
inc
jmp
sbb
cltd
lret
loope
leave
jecxz
arpl
pop
out
scas
addr16
jle
jmp
jecxz
loope
xor
daa
xchg
xchg
and
int3
pop
mov
sub
nop
cmp
lock
out
add
out
ret
mov
sarb
bound
jecxz
mov
cmp
pushf
nop
jnp
loope
insl
mov
inc
loope
xchg
push
cmpsl
gs
cwtl
and
subl
fs
jo
std
push
inc
mov
cmp
sbb
jns
fistpl
push
stos
dec
dec
decb
loope
cld
push
jmp
add
pop
insl
mov
mov
jmp
sub
stos
xor
lret
in
imul
sti
mov
cmp
sub
push
mov
bound
lcall
jb
inc
inc
push
popf
mov
ja
adc
and
sbb
imul
dec
test
dec
pop
dec
pop
xchg
jmp
fidivrs
nop
ja
aas
dec
cld
loope
jge
mov
lahf
loope
dec
ljmp
jae
divl
ja
addl
mov
imul
loope
cmpl
or
lcall
jmp
enter
jmp
inc
xchg
loope
pushl
dec
rcrb
test
mov
mov
repnz
fstpl
popw
dec
add
shrb
test
lock
test
sbb
lock
push
dec
loope
and
inc
mov
jge
add
mov
mov
and
push
cmp
add
ljmp
xchg
or
data16
xor
das
jmp
sbb
inc
aaa
loope
stc
sarl
ror
data16
notb
test
shl
or
insl
cli
lret
loope
loopne
cmpsl
sub
jnp
adc
outsl
push
cmp
mov
loope
pop
int
mov
fdivl
xor
aas
and
inc
imulb
fnstsw
push
add
lock
in
mov
push
cwtl
add
jl
lea
shlb
mov
dec
cmp
outsb
ret
repnz
pop
xor
or
and
jo
test
out
pop
imul
loope
ja
mov
mov
into
xor
addr16
jg
push
loope,pn
rcll
and
push
pop
loopne
das
inc
dec
or
mov
sub
ret
pop
sub
or
sbb
or
pusha
rorl
rorb
and
dec
cmc
shlb
push
sub
insb
jae
inc
daa
loope
fisttpll
and
repnz
push
loope
mov
lods
pop
loope
pop
xor
sub
cltd
pop
xchg
out
out
out
add
jmp
das
pop
mov
and
in
add
fld
sarl
in
int3
adc
inc
xchg
loope
rcrb
fisttps
lock
jne
cmp
gs
or
jo
adc
inc
jnp
cmp
sub
loop
jmp
mov
mov
aam
dec
in
lea
aas
test
xor
out
out
shrb
pop
add
in
mull
inc
pop
loope
mov
andb
test
add
xlat
ret
cltd
add
rcr
loope
mov
push
or
loope
pusha
repnz
jp
jns
mov
add
xor
pusha
xor
jl
loope
mov
je
mov
outsl
mov
xor
or
add
xor
adc
sub
cli
cmpb
jge
dec
dec
fsubp
movsb
loope
push
fwait
sub
mov
push
add
out
nop
rorl
mov
mov
mov
es
loope
movsl
sti
fiadds
sbb
sub
fistps
out
adc
adc
adc
negl
inc
dec
out
gs
inc
pushl
loope
dec
repz
loope
sbb
xor
mov
inc
jmp
mov
push
fwait
adc
xor
loope
inc
icebp
in
lret
loope
fbld
mov
pop
push
mov
loope
aam
ret
sbb
fdivs
mov
mov
fsubs
jmp
pop
adcb
insl
inc
inc
repnz
jmp
cmpsl
xchg
fdivl
and
jnp
icebp
shrb
mov
loop
adc
push
pop
pop
repnz
jo
push
test
xchg
pusha
push
inc
arpl
fs
scas
xchg
add
adc
inc
sub
sbb
insl
adc
sbb
mov
out
or
in
sub
int
insl
loope
xchg
test
mov
ljmp
insl
mov
mov
or
mov
inc
sbbb
stos
cmp
add
aam
loope
sub
sbb
mov
dec
push
mov
pop
addr16
pop
les
movsl
arpl
and
cmp
jp
pop
loope
scas
lods
cli
jo
jmp
popf
out
pop
push
xchg
mov
loope
jbe
xchg
inc
ljmp
in
mov
stc
rcr
jl
out
fdivl
out
aaa
xchg
jmp
das
cli
leave
loope
xchg
mov
in
cmp
sbb
inc
cmp
call
cmp
roll
in
rolb
arpl
aaa
insl
aam
shlb
cmp
out
mov
or
jnp
loope
fstl
std
iret
and
lock
or
pop
shrb
js
sub
hlt
xchg
mov
in
int
jnp
cwtl
push
movsb
pop
cmp
in
movsb
les
loope
xchg
and
mov
mov
iret
or
cmp
add
add
mov
xor
out
int
xor
push
mov
lock
jmp
rorb
loope,pt
sub
mov
add
mov
inc
into
loope
movsb
lcall
mov
xlat
frstor
cmpsb
loope
pop
clc
mov
out
testl
jo
lods
jmp
sti
test
fndisi(8087
aam
cltd
adc
out
jle
cwtl
lret
xchg
bnd
imul
in
mov
out
and
clc
jo
push
cli
out
mov
cmp
mov
ljmp
repz
adc
xchg
push
ret
pop
mov
fisubs
mov
mov
push
jno
jmp
test
adc
xor
je
dec
sub
loope
out
sbb
loope
testl
mov
mov
adcb
jb
and
ss
outsl
loope
test
mov
push
in
xchg
loope
jle
iret
fwait
sbb
call
xchg
test
jo
dec
aam
ja
jbe
fsubl
cmpsl
jge
xchg
movsb
call
das
inc
out
movsl
mov
jg
scas
push
xor
and
mov
cmp
xchg
and
rcr
xchg
mov
xchg
popa
inc
cmp
int3
jne
ror
push
loope
jg
loope
test
lahf
sub
in
mov
loopne
pusha
fdivl
fwait
sub
es
dec
cli
jecxz
jo
adc
fucomi
pop
inc
mov
fstps
es
mov
xchg
sub
add
addl
repnz
and
loope
mov
cli
sub
ds
inc
out
or
sahf
mov
clc
ss
imul
xchg
dec
cmp
mov
jo
test
loopne
lods
mov
sarb
faddl
xor
loope
sub
or
mov
enter
pop
and
test
mov
add
cli
gs
mov
jo
in
sarl
cmp
mov
push
cld
imul
out
sahf
jg
popa
inc
sbb
adc
add
aad
jne
and
push
dec
into
loope
pop
icebp
dec
sub
pop
mov
mov
stos
out
test
test
sbb
push
outsb
or
push
lret
loope
bound
stos
mov
fwait
add
addr16
loope
or
jmp
mov
push
loope
shlb
in
sbb
cmc
inc
fildll
xor
jns
sti
sub
add
mov
jb
xchg
nop
dec
ljmp
dec
lea
cwtl
mov
push
lret
cs
gs
pop
loope
adc
sbb
mov
fists
jno
loopne
pop
mov
shlb
or
push
fcmovu
addr16
and
dec
ja
and
or
adcl
dec
mov
jnp
add
lcall
das
fs
push
mov
jg
iret
jo
push
jl
cltd
out
xor
inc
adc
movsb
hlt
loope
stos
insl
or
jnp
mov
sub
mov
jbe
cld
cmpsb
mov
inc
in
gs
iret
add
fildll
lods
in
jo
imul
loope
and
lcall
je
loope
pop
jb
clc
jae
jmp
cmp
xor
shlb
mov
je
faddl
daa
out
stos
mull
jne
cmp
test
addr16
adc
loop
mov
push
aam
cmpsb
pop
xor
xchg
inc
xchg
inc
out
std
loope
cmp
pop
jecxz
mov
gs
add
mov
sbb
cmp
mov
inc
je
in
pop
pop
mov
xchg
fs
push
fldcw
fsubp
stos
testl
int
push
inc
xchg
inc
mov
dec
add
mov
jb
mov
aad
push
lods
inc
jo
lfs
push
loope
mov
xchg
mov
fxam
shl
notl
sub
pop
cmp
scas
mov
loope
push
add
add
push
icebp
sub
xchg
test
xchg
mov
ja
push
mov
push
xchg
add
mov
repnz
inc
pop
loope
das
cmp
jo
add
lcall
cli
call
iret
or
and
jg
loope
rclb
jo
cwtl
cmc
in
loope
xchg
jno
xchg
test
jecxz
loopne
pusha
sbb
loope
mov
pop
mov
fnstenv
daa
sbb
jecxz
or
imul
adc
jle
leave
out
loope
push
hlt
lret
cld
in
sub
ret
andb
mov
pop
ss
or
lret
xor
jecxz
and
mov
scas
add
mov
data16
jg
add
sub
push
inc
inc
xor
idivb
cmp
nop
mov
or
pop
mov
ror
repz
cmp
loope
cmc
insl
dec
inc
mov
xchg
sub
mov
cmpxchg
out
out
lret
adc
std
loope
jne
ss
lods
loope
jecxz,pn
addr16
fbstp
sbb
out
sbb
lock
add
cmp
mov
mov
aad
inc
mov
sub
push
and
mov
mov
inc
in
jo
in
repz
push
shl
js
std
loope,pn
out
cmp
adcb
loope
push
bound
int
mov
lret
in
movsb
xchg
je
add
ret
cmp
lods
push
test
test
in
push
fnsave
cmp
jns
or
and
shrl
xorl
push
jno
pop
js
xor
cwtl
adc
dec
das
loope
mov
out
and
pusha
sbb
jecxz
and
sahf
cmpsl
and
dec
push
xor
adc
insb
jecxz
sbb
jne
adc
cmpb
shlb
nop
cld
cmpsb
ret
mov
repnz
pop
out
nop
jl
jae
jmp
lock
push
or
jecxz
adc
dec
loope
mov
mov
jae
push
loope
int
mov
loope
cs
push
sub
ja
insl
sbb
lret
mov
jmp
jmp
sti
cmpsl
loope
adcb
int3
test
sarb
in
push
mov
sar
xchg
stc
or
call
pop
nop
lods
add
lods
shll
xor
inc
data16
add
imul
loope
incl
insl
inc
cli
shrb
push
fisubl
xchg
out
jg
loope
int
adc
addr16
loope
ja
imul
add
psraw
push
xchg
in
mov
fildl
pop
movsb
xchg
loope
xchg
push
push
mov
pop
daa
stos
xor
and
cmp
xchg
xor
and
jl
jbe
mov
es
jo
sub
in
pop
iret
add
ds
dec
and
jns
pop
mov
stc
jl
sbb
xchg
cmp
and
dec
xor
shl
jge
movsl
sbb
pop
push
pop
and
xchg
jne
xchg
cmc
test
stc
ljmp
mov
inc
xchg
jecxz
lea
loope
clc
cmp
outsl
test
add
cmpb
mov
inc
into
pop
or
cmpsl
jmp
push
sub
inc
test
inc
loope
jbe
dec
call
mov
jle
dec
pop
fdivr
mov
movsb
xchg
lods
cltd
xor
push
mov
mov
loope
popf
repz
test
push
outsl
sub
add
or
cld
xchg
lods
jecxz
dec
xchg
pop
xchg
xorb
pop
popa
inc
inc
xchg
push
push
mov
and
xor
loope
or
int
jae
jo
ljmp
mov
or
mov
adc
sub
loope
jle
adc
dec
lock
lods
sub
clc
add
enter
jbe
dec
mov
dec
add
adc
add
orb
dec
jmp
mov
jecxz
xor
stos
es
adc
aam
jp
out
jecxz
add
rcrl
loope
sub
or
mov
mov
or
es
cwtl
insb
pushf
mov
ljmp
das
push
fisubs
shr
loop
mov
sti
add
bound
fcom
scas
ljmp
jle
dec
loope
and
xchg
push
negb
mov
notl
push
scas
add
sti
add
jbe
dec
mov
sub
mov
shrd
test
sbb
xchg
aaa
sti
jo
adc
pop
call
loope
mov
in
loope
adc
dec
loope
pop
mov
mov
fs
in
adc
and
cmp
pop
and
pop
ss
imul
test
mov
sbb
andb
xor
dec
loope
inc
lret
nop
sbb
or
adc
adc
and
testl
movsb
into
addb
adc
mov
mov
push
out
scas
cmpsb
inc
add
and
movsb
stos
in
add
mov
adc
pop
pop
and
sub
test
loope
mov
mov
add
mov
jno
push
dec
cs
adc
les
pop
jne
orl
mov
loope
in
lret
or
xor
push
dec
arpl
sbb
insb
mov
pop
mov
mov
loope
ret
sub
pop
and
inc
push
mov
inc
pop
jno
push
loop
gs
insl
adc
leave
shll
or
arpl
fimull
es
enter
jle
push
mov
je
mov
lock
dec
out
loope
mov
dec
loope
xor
aaa
xor
push
mov
cmp
adc
loope
sub
adcl
lock
push
lret
pusha
cli
cltd
loope
pop
cmp
mov
loopne
scas
cmp
xchg
mov
andl
add
push
add
jnp
dec
shlb
shl
roll
iret
loope
xor
sahf
lds
js
adc
into
in
or
push
loope
hlt
pop
lock
in
negl
daa
adc
pop
loope
inc
dec
or
sahf
add
and
bound
mov
call
outsl
fwait
xchg
adc
dec
arpl
and
ljmp
mov
sahf
inc
loope
pop
test
stos
loope
push
pop
mov
ret
and
push
mov
loope
add
pop
jmp
jmp
inc
sub
mov
jge
outsb
or
test
mov
flds
sets
mov
mov
imul
mov
dec
xchg
stos
popf
call
sbb
xchg
add
inc
movsb
loope
push
nop
aaa
fsubrl
pop
ds
jp
popa
jmp
mov
pop
mov
cmc
pop
mov
or
in
cli
loope
sbb
dec
stc
mov
dec
cmp
sub
jecxz
xchg
aad
and
in
movsl
or
loope
gs
imul
shl
pop
pop
push
sbb
mulps
adcb
xchg
sti
jecxz
les
add
push
push
dec
mov
push
std
add
aaa
in
push
cmp
pop
add
add
add
lret
repnz
mov
xlat
lds
loope
inc
popf
insl
push
push
pop
loope
jbe
xchg
cmpsb
mov
mov
mov
or
jae
gs
cmpb
xchg
cmp
lahf
pop
xor
loopne
sub
xchg
stos
mov
jmp
xor
xor
test
push
jno
cmp
lods
loope
enter
insb
mov
push
adc
loope
cmp
push
mov
cmp
sti
jmp
pop
or
jbe
je
dec
and
cmp
pop
jb
or
xchg
sub
ficomps
push
test
push
mov
inc
loope
fsubrs
lods
pusha
sub
mov
shlb
loope
in
dec
push
adc
fistps
in
enter
in
loope
push
jecxz
jp
dec
stc
loope
mov
adc
xchg
in
jns
jecxz
mov
out
test
push
dec
pop
mov
sbb
popa
push
adc
in
mov
cmova
jns
std
jmp
xchg
arpl
xchg
jo
aam
int3
popf
aam
mov
and
loope
sub
divb
aaa
push
dec
loope
in
cmp
repz
std
xchg
adc
inc
shl
ljmp
clc
jmp
push
push
movsl
aas
in
iret
jne
call
pop
pusha
ds
mov
lods
fcmovnbe
mov
jp
shl
icebp
jae
scas
outsb
dec
out
shlb
nop
push
and
jmp
pop
add
and
jns
loope
daa
cwtl
xor
in
testb
sbb
loop
sti
inc
push
js
cwtl
daa
loope,pt
dec
imul
mov
lea
cmpsl
and
inc
push
gs
popf
cmp
in
dec
sbb
aam
add
aad
mov
nop
jmp
loope
neg
push
adc
dec
test
pop
sbb
cmp
insb
xchg
in
cmp
lds
loope
lods
or
mov
and
xchg
cltd
loope
adc
push
jnp
insl
shrl
int
into
mov
mov
test
push
leave
insb
in
mov
dec
hlt
int
pop
jae
rcll
loop
scas
insb
inc
push
pop
icebp
ss
mov
out
jmp
cmp
or
test
int
ficoms
mov
adc
in
inc
cmp
sbb
out
lea
lods
pop
loop
js
mov
jo
mov
adc
insb
repz
push
pushf
lcall
mov
js
mov
in
loope
cmp
xorb
push
out
jae
call
mov
jno
loope
inc
pop
das
dec
push
add
jo
loope
jecxz
mov
sub
jl
xchg
aam
jle
pusha
repnz
and
push
cmp
xchg
mov
lock
lods
jb
imul
pusha
xor
loope
xchg
jno
arpl
lock
sub
cld
and
loope
inc
shl
adc
mov
jmp
cli
in
into
test
or
mov
xlat
js
addr16
fsub
clc
xchg
push
mov
jle
fmull
subl
push
sub
add
scas
icebp
mov
pop
outsl
mov
out
loope
cmp
test
cwtl
loope
out
inc
call
add
loope
jg
loop
xchg
cmpsl
loope
xor
insl
cmp
pop
mov
mov
dec
push
das
fistpll
in
loope
ja
lock
pop
ret
cmp
jecxz
jne
add
imul
aas
loope
popf
mov
shl
dec
cmp
inc
loope
jnp
cmp
adc
insb
sub
lret
push
sarb
dec
loope
cmp
and
mov
shrl
imul
outsl
adc
andl
pop
mov
loope
ds
mov
push
cmpsl
loope
out
push
sub
repz
insb
adc
inc
adc
ficompl
rcrl
daa
cmpl
jmp
mov
cld
scas
jns
lock
stos
ret
jae
in
fiaddl
aaa
loope
out
adc
aam
loope
out
mov
jns
loope,pn
inc
jle
cli
loopne
repz
xchg
in
push
sbbl
fs
xchg
aas
outsb
and
shl
xorl
or
dec
loope
jp
scas
and
loope
sub
repz
mov
lret
cld
pop
imul
fnsave
loope
mov
cwtl
pusha
loope
in
lds
lret
loope
mov
cmp
lahf
pop
push
test
bound
push
fs
mov
std
mov
test
cmp
cwtl
mov
xlat
push
sub
scas
lcall
jp
data16
cmpsb
imul
icebp
jecxz
popf
jnp
mov
push
cmp
loope
jmp
xchg
orb
push
mov
in
popa
xchg
inc
or
int
push
imul
es
jne
add
les
mov
pop
ljmp
cs
add
popa
pop
loop
imul
ret
das
xchg
in
mov
add
enter
int
mov
push
dec
scas
fsts
jmp
jbe
mov
cmp
in
cmp
inc
loope
into
rcrl
cmp
loop
sbb
xor
insb
bound
loope
push
int
sbb
fldenv
loope
xlat
sbb
dec
std
fcmovnb
enter
fs
in
nop
mov
jle
into
sub
loope
lcall
insl
xchg
std
daa
dec
mov
pop
add
mov
hlt
stc
adc
pop
jp
inc
inc
mov
inc
repnz
scas
sbb
in
mov
pop
in
pop
mov
cmp
je
mov
jne
aad
xlat
out
mov
loope
dec
push
dec
mov
out
fabs
ja
and
xor
jmp
or
cmp
lcall
insb
sti
into
decb
jo
mov
cmp
loope
add
push
loope
outsl
lods
call
loope
adc
pushf
loopne
clc
mov
jmp
dec
cmp
stos
mov
xor
pop
pop
add
mov
inc
jno
loope
loopne
push
dec
loope
cltd
xchg
popf
pusha
xor
jmp
xchg
and
ja
push
cmpsl
mov
jmp
aad
adc
push
loope
outsb
sahf
pop
scas
or
cmp
mov
jo
mov
nop
pop
in
jae
inc
mov
sbb
imul
hlt
xor
lds
sub
pusha
test
js
je
add
sbb
or
test
pop
out
add
shll
or
and
jo
mov
cmpsl
adc
in
jl
add
lds
test
sub
push
ljmp
xchg
test
leave
fstps
push
mov
and
sub
push
in
sbb
mov
mov
fisttps
pusha
scas
out
imulb
loope
pop
jg
pop
sub
repnz
pop
fwait
in
or
jmp
mov
loope
dec
inc
xlat
mov
pop
lea
popa
add
rorl
loope
pushf
xchg
mov
loope
pop
pop
divl
stos
movsl
addr16
gs
out
pushl
adcl
cmp
cmp
mov
into
mov
ljmp
add
outsl
shrb
sti
notl
clc
pop
jo
je
xchg
add
xor
pop
andl
ret
and
cmpsb
loope
bound
cmp
das
dec
and
mov
mov
ja
and
fs
mov
jns
cmc
std
xchg
add
int3
movswl
mov
mov
movl
pop
dec
xchg
mov
insb
out
sub
xor
cmpsb
call
sti
repz
loope
xchg
cli
pop
js
fdivl
or
xor
jo
add
data16
push
mov
insb
cmpsb
loope
jns
mov
lds
or
mov
mov
xor
xchg
js
mov
shr
inc
mov
jmp
into
loope
adc
cmp
adc
fldl2e
and
loope
adc
push
hlt
inc
inc
sbb
scas
out
daa
push
mov
dec
add
adc
loope
inc
jno
xor
loope
jne
ds
dec
xor
sub
mov
cmp
sub
mov
mov
outsl
inc
xlat
lahf
imul
es
loope
xor
sbb
mov
stos
loope
fcoms
repz
cmp
insb
movsb
cmp
pushf
mov
scas
aas
loope
adc
dec
seto
lock
loope
rorb
xchg
nop
nop
mov
xor
jecxz
mov
and
inc
cmp
mov
inc
pop
loope
push
push
xchg
les
mov
out
stc
loope
icebp
mov
pop
or
and
mov
sub
into
lahf
pop
mov
popf
jo
sarb
cmp
mov
dec
or
dec
push
ljmp
push
loope
push
mov
and
mov
xchg
pop
or
adc
pop
ss
cmp
pop
ljmp
out
call
cmpsl
mov
pop
shl
mov
inc
adc
adc
jno
in
cmp
add
out
loope
inc
adc
loopew
jecxz
pop
cld
daa
fadds
inc
mov
out
loope
sub
mov
into
pop
push
imul
xchg
jns
pop
sub
loop
lock
pop
out
jmp
jns
jo
ljmp
add
loope
cmp
pop
mov
clc
xchg
and
jo
loope
jnp
push
out
pop
sbb
setle
mov
loope
scas
mov
push
loope
mov
jmp
jns
loope
sub
and
mov
cld
loope
jmp
idivb
loope
xchg
fwait
in
push
add
sbb
sub
fs
lods
xchg
dec
cmp
loope
js
rol
insb
xlat
imul
loope
adc
xchg
jecxz
shl
pop
sti
fs
jp
cmp
lock
dec
push
in
add
das
loope
movsl
xchg
scas
ss
loope
cmp
insb
push
enter
fisubrs
loope
sahf
mov
loope
aad
dec
push
loopne
lahf
add
mov
push
jnp,pn
mov
inc
pop
fwait
loope
testb
test
mov
mov
incl
jo
cmp
rcr
js
jl
faddl
pop
rcll
mul
test
shrb
ja
jecxz
sub
lahf
in
push
loope
roll
bound
push
pop
in
sbb
lret
or
aam
hlt
loopne
test
mov
or
cltd
lock
pushf
sbb
adc
enter
decl
dec
sahf
xor
inc
movsl
or
iret
lds
loope
xor
pop
cmc
inc
cmp
test
popf
insl
loope
xor
lock
dec
arpl
sub
daa
push
ret
push
loope
aam
stc
xor
loope
mov
jne
mov
cmpl
and
loope
stc
mov
clc
rcl
xlat
outsl
gs
mov
adc
ds
testl
or
loope
fcomps
aam
sbb
xor
or
lods
mov
sub
pop
add
into
nop
cmp
ss
pop
jmp
in
cwtl
adc
pop
push
adc
out
push
loope
pop
inc
sub
dec
xor
vunpcklpd
or
and
les
aad
xorb
mov
add
in
inc
push
outsb
loope
jmp
sbb
add
shl
lds
sbb
in
sbb
cltd
add
and
push
nop
in
xor
bound
sbb
fdivs
aaa
ret
loope
mov
addr16
aas
outsb
xor
test
mov
or
vgf2p8mulb
add
adc
xor
sbb
add
iret
xchg
into
or
sahf
cmpsl
nop
and
jae
jne
mov
dec
sbb
xchg
imul
jne
ds
or
shll
gs
shll
inc
jbe
in
sub
jo
nop
fwait
popaw
out
mov
xor
inc
movsb
mov
loope
adc
stos
cli
jo
sub
mov
pop
lods
and
loopne
stos
sti
ja
loope
dec
cld
fadds
call
mov
add
loopne
sub
outsb
loope
jo
mov
je
jg
xchg
mov
push
xor
sub
loope
and
xchg
inc
xor
loope
ja
inc
rolb
cmpsl
loope
jbe
and
loope
xor
addb
mov
xor
clc
out
inc
pop
nop
bound
imul
xchg
cmp
call
mov
test
shll
ss
sahf
inc
xchg
cs
add
inc
imul
iret
push
mov
repnz
imul
dec
sbb
mov
jae
or
hlt
adc
sbb
jb
enter
jo
push
loope
cmpb
mov
jns
and
adc
fs
xor
in
and
gs
bound
cmc
out
jecxz
adc
ret
push
loope
lret
sub
push
gs
bound
lock
loope
insl
xchg
or
add
pusha
lea
jns
fucomp
pop
pop
sahf
and
cld
loope
int3
int
cli
push
and
push
push
shlb
mov
add
lcall
imul
mov
ja
pop
shl
in
aaa
xchg
rolb
fisubrl
or
pop
popa
and
bound
lret
in
clc
mov
push
popa
mov
mov
mov
in
xchg
leave
notl
test
pop
adc
loope
sarl
pop
loope
aam
jge
pop
cmp
cmc
jg
hlt
loop
add
je
sub
and
loope
cmpb
loope
fidivs
pushf
test
shrb
ret
nop
in
insb
loope
cmp
inc
repnz
dec
pop
bound
hlt
dec
loope
cmp
insl
cmp
call
fnstsw
push
inc
loope
shll
mov
dec
iret
push
mov
adc
loope
aas
lock
rcll
or
aad
loope
iret
jmp
pop
loope
jmp
mov
mov
in
push
mov
std
loopne
jae
insl
in
loope
stc
imul
stc
xchg
loope
cmpsb
insb
push
dec
and
inc
xchg
push
push
and
or
std
shrb
data16
roll
push
jl
rcl
adc
fsubp
jmp
out
loope
adc
push
loope
inc
sbb
out
mov
nop
aaa
pusha
in
cmp
outsb
loope
das
ret
pop
and
adc
push
mov
xorl
cmpsb
imul
test
inc
cmp
mov
dec
clc
loope
mov
jmp
icebp
jne
pop
mov
popf
in
scas
adc
inc
das
in
imul
frstor
push
dec
add
push
adc
lret
inc
sbb
push
dec
mov
in
in
dec
push
and
push
jle
push
mov
das
sti
loope
stos
or
in
ds
mov
cmpsl
cld
pop
sub
sbb
add
fstpt
sub
sbb
push
ret
hlt
insb
popa
mov
sub
inc
mov
push
js
loope
sbb
sub
loope
dec
incl
addb
repnz
cltd
sbb
in
dec
loope
pop
sub
xorl
into
loope
jg
jmp
loope
xrelease
mov
and
rorl
popa
loope
lods
sub
push
mov
loope
fadds
ja
sbb
jle
or
jmp
jge
sub
and
or
out
cmovb
sarl
xchg
insl
jne
push
loope
fs
mov
fimuls
mov
cs
push
pop
jle
out
loope
int3
dec
mov
add
imul
jecxz
mov
loope
mov
shl
les
mov
jge
add
nop
jae,pt
scas
or
mul
popf
testl
ja
pusha
sbb
xor
rcll
sbb
sub
in
adc
or
icebp
mov
jno
cmp
out
rcrw
andl
push
xorl
shll
imul
lock
orl
rorl
call
nop
mov
jmp
dec
mov
inc
and
mov
mov
loope
std
imul
jp
hlt
mov
adc
pop
mov
es
lods
loope
adc
subl
push
fcoms
pop
sbb
and
dec
int
jae
fisubl
fs
ret
loope
cmpsb
mov
cmp
sbb
mov
ss
lret
loope
addb
push
sahf
loope
cmc
jmp
mov
push
mov
mov
mov
lcall
pop
jle
push
adc
shl
mov
mov
push
loope
dec
loop
inc
notl
aad
ja
scas
ss
loope
pusha
jae
inc
xor
pushf
loope
loopne
ljmp
gs
in
and
cmp
lret
scas
rorb
adc
adc
fs
mov
jbe
xor
ror
enter
jmp
in
loope
mov
std
lods
sbb
dec
xor
inc
js
jmp
sarb
push
mov
pop
or
arpl
test
jns
dec
mov
movsb
xchg
sbb
outsb
dec
loopne
and
fdecstp
loope
and
loop
jecxz
loope
imul
lahf
cld
aaa
test
fidivl
in
inc
sub
lock
cmpsb
and
jb
or
es
icebp
inc
repnz
std
repz
adc
push
int3
sbb
or
iret
je
jo
and
popf
stc
shlb
xchg
das
mov
fistl
pusha
imul
aam
sbb
adc
gs
shlb
xor
xor
sahf
jns
cmp
jnp
dec
jmp
mov
cmc
fcompl
lock
nop
out
sub
dec
pop
int3
loope
movsl
fists
xchg
push
test
loope
xor
sbb
loope
mov
xor
pusha
pop
push
loope
dec
fwait
lea
test
xchg
movsl
xor
gs
lock
mov
add
mov
shrb
or
dec
cmc
loope
test
mov
dec
cmp
inc
cs
jb
aas
ja
mov
lock
adc
jmp
jb
push
adc
sbb
mov
lea
aam
loope
pop
mov
inc
fidivrs
jno
out
push
or
jnp
xor
data16
shlb
in
cmp
mov
sub
cmc
fmuls
or
call
jmp
dec
mov
cmpb
loope
mov
test
sub
push
insb
push
xor
daa
adc
imul
mov
mov
sub
nop
jmp
sbb
imul
sbb
jecxz
sarb
loope
insl
sarb
add
jp
aam
loope
push
mov
pop
clc
xchg
aad
imul
adcb
notb
iret
call
and
xchg
jmp
sbb
xor
loope
stc
out
push
mov
inc
test
xchg
clc
pushl
ds
sbb
mov
mov
pop
mov
sbb
scas
sub
sbb
in
shll
das
loopne
mov
dec
in
dec
nop
adc
stc
adc
xchg
jns
mov
mov
add
loope
arpl
adc
mov
scas
push
inc
loope
pop
mov
mov
fimuls
sahf
inc
add
cmpsb
xchg
js
loope
subl
pop
je
ret
cltd
in
aam
jo
or
mov
sbb
xchg
xchg
rep
mov
loope
pop
inc
rclb
dec
cmp
loope
inc
dec
andl
mov
cld
dec
xorb
adc
xchg
testb
icebp
bound
jmp
jo
xchg
add
das
jmp
loope
xchg
jb
jle
out
loope
aaa
push
repnz
pop
ja
fisubl
test
iret
ds
dec
loope
sbb
imul
incl
loopne
loope
jp
adc
mov
sbb
adc
or
sub
sub
loope
mov
hlt
mov
enter
int
push
loope
arpl
mov
loope
out
sub
loope
or
lret
and
stos
sbb
out
jle
jecxz
jo
mov
outsl
sub
ljmp
lock
xlat
iret
imul
loope
mov
data16
push
loope
out
xchg
and
clc
dec
push
sbb
loope
mov
loope
adc
pop
jge
inc
lock
aam
cmpsb
push
dec
push
lahf
loope
xor
push
loope
jp
daa
pop
mov
dec
cltd
loope
push
or
dec
xchg
mov
mov
arpl
xchg
data16
andb
loope
imul
imul
lea
mov
test
out
cmc
inc
cmp
pop
loope
mov
in
mov
push
subl
loope
mov
adc
push
push
loope
test
or
xor
sub
sub
aas
add
mov
arpl
cmpsl
pop
push
jmp
out
mov
sbb
loope
clc
jnp
add
and
out
ds
loope
aad
in
dec
es
or
xor
inc
jp
jns
out
mov
loope
mov
push
rcr
xchg
fstp
iret
xlat
sub
cmp
repz
dec
lahf
jp
insl
lcall
loope
mov
sbb
xchg
loope
js
aad
lret
lock
and
sbb
sbb
mov
loope
or
in
pop
sub
loope
dec
cli
hlt
cmp
xchg
jne
testb
rolb
sti
adc
push
and
sbb
adc
sbbb
out
cmc
loope
xchg
mov
mov
andl
xor
in
mov
testl
icebp
mov
negb
mov
clc
mov
bound
xchg
push
loop
out
loope
int
pop
xor
lock
jno
xchg
jle
push
mov
and
inc
cs
dec
loope
xorl
mov
loopne
loope,pt
mov
lods
in
leave
loope
pop
xor
test
mov
add
in
lcall
and
lds
in
daa
or
loope
jno
jae
dec
callw
mov
rcrb
sahf
inc
loope
cmp
mov
pusha
lea
push
adc
xchg
or
and
pop
loope
push
and
mov
jae
push
cs
jb
xchg
sbbb
in
and
sahf
lods
mov
in
cwtl
mov
dec
cs
jmp
adc
loope
dec
dec
mov
jecxz
loope
ret
cmp
xchg
push
mov
xor
mov
inc
inc
sub
loope
aas
repz
mov
aaa
loope
sahf
cmp
xchg
push
ja
jl,pn
mov
mov
pop
jo
jmp
cmp
and
ret
std
mov
lret
sbb
out
hlt
mov
loope
jecxz
lret
xor
lock
cmpsb
in
stc
jge
loope
pop
dec
sbb
mov
addr16
repz
fldl
fmuls
mov
loopne
out
shl
imul
in
cmc
loope
xchg
out
sbb
loope
push
leave
scas
ret
dec
sub
inc
adc
push
inc
adc
push
add
jecxz
pop
ret
sbb
push
or
or
sub
xor
hlt
adc
loop
test
out
loope
aam
out
mov
stc
std
loope,pt
in
lret
cmpps
orw
push
scas
ljmp
sbb
add
xlat
add
jmp
scas
jmp
loope
ficomps
rcrb
push
loope
pop
xchg
call
loope
lds
shl
xchg
sbb
cld
fisubl
cmp
outsl
loope
sarl
jno
xchg
aad
pop
pop
pop
adc
mov
loope
jo,pn
test
xchg
leave
loope
mov
outsb
mov
jnp
add
cmp
movsl
adc
xchg
out
sub
loope
inc
fimull
cltd
mov
cmp
jno
mov
ret
enter
xor
loopne
shlb
loope
push
xor
loope
lret
jmp
ja
jo
lcall
mov
pop
add
addb
mov
out
xabort
jmp
loope
mull
mov
ret
imul
and
in
gs
mov
xor
jno
inc
popf
lret
loope
ss
in
inc
mov
dec
nop
insb
in
mov
jne
fdiv
test
dec
jae
adc
loopne
cmp
mov
inc
cmp
jo
and
out
test
cmc
rol
pop
in
pop
cmp
mov
in
pusha
push
pop
jno
add
jmp
in
lahf
aaa
dec
cli
cs
shr
into
and
insl
xorl
stc
pop
loop
imul
notb
das
loope
fsub
addl
add
movsl
mov
inc
test
iret
jo
or
repnz
aam
mov
and
in
dec
test
adcl
mov
jmp
loope
fld
xchg
mov
inc
cmp
inc
pop
cmc
jo
test
xchg
fistpl
and
mov
cmpsl
out
popw
flds
cmp
mov
xor
rclb
mov
out
pop
push
cmp
jge
inc
call
jae
xchg
scas
and
loope
push
xor
jbe
loope
lea
fdivrs
scas
adc
pop
in
mov
mov
add
jecxz
pop
sbb
pop
jbe
shrb
ds
pop
sub
cmp
into
orb
lock
push
push
enter
loope
punpckhwd
adc
insb
loope
addr16
cmp
xchg
xor
jo
andb
imul
jae
push
push
aad
mov
in
add
into
cmpsl
xchg
loop
sbb
loope
add
mov
daa
es
push
cltd
filds
lods
sub
jg
mov
or
jo
sbb
arpl
imull
incl
ds
cli
push
cmpsl
aad
push
leave
xchg
loope
fwait
mov
sbb
and
setl
sbb
rcr
shll
mov
or
push
sti
push
mov
pop
jmp
scas
cs
mov
pushf
aad
popa
mov
inc
fisttpll
stc
pop
and
sti
push
xor
and
pop
loope
sarl
dec
loope
popa
shr
push
or
fistl
jp
jo
cmp
roll
lock
call
jmp
pop
add
push
mov
cld
xor
movsl
loope
xlat
pop
mov
jp
mov
loope
xchg
cmp
loope
push
stos
js
hlt
sbb
dec
sbb
cmp
dec
imul
pop
mov
xor
dec
add
or
in
loope
pusha
pop
adc
mov
aaa
lahf
movsb
data16
dec
loope
cmc
in
lea
push
mov
loope
mov
add
mov
aaa
pushl
scas
or
shlb
aad
inc
in
test
loope
pop
inc
negl
jo
lock
mov
or
jo
xchg
fcompl
and
dec
and
mov
ja
xchg
jmp
into
and
loope
xchg
fwait
push
imul
adc
cmp
loope
daa
lock
pushf
js
ret
shl
scas
mov
ds
pop
popf
in
adc
sub
out
jae
loope
sbb
push
inc
outsb
pop
test
mov
mov
xchg
call
inc
psraw
hlt
xor
xchg
mov
add
imulb
inc
repnz
stos
xchg
jmp
push
pop
dec
mov
outsb
movsb
jb
adc
xor
push
loope
inc
andl
mov
mov
enter
addl
jmp
jns
inc
jo
imul
ljmp
jno
lock
arpl
add
lret
add
aaa
inc
loope
mov
dec
int
pop
shl
cs
xchg
sbb
jmp
loopne
pop
popf
or
mov
test
xchg
loope
push
lcall
insb
push
mov
sbb
hlt
loope
adc
xorl
dec
push
lcall
loope
dec
jle
int
stos
sbb
loope
les
and
test
mov
fabs
or
xchg
in
xor
mov
aad
mov
inc
pushf
sub
and
and
outsb
dec
sub
sar
std
frstpm(287
into
daa
xor
rol
jo
push
cmp
xor
outsb
movsl
or
lods
loope
in
add
mov
mov
fstpt
or
popl
sub
mov
ret
aaa
popf
daa
mov
loop
loope
nop
pusha
orb
ret
mov
jl
xchg
lock
add
ljmp
xor
push
gs
int3
repnz
loope
jb
mov
outsl
ds
mov
dec
or
pop
push
cmp
loope
xor
or
in
sbb
mov
loope
scas
sub
sahf
loope
dec
daa
sub
ret
jnp
loope
inc
pop
mov
das
ja
loope
lock
testl
or
loope
jne
int
js
jno
test
lods
pop
jl
sbb
xchg
rcrb
and
cs
or
icebp
in
xchg
fcomip
lock
dec
popa
inc
add
loope
and
repnz
shrb
inc
pop
or
shlb
clc
push
push
sbb
in
bound
xor
fsubp
push
fmull
and
in
adc
mov
or
mov
sub
subl
cmp
pushf
nop
cmp
rcl
pop
pop
fdivs
loope
xchg
aaa
xor
cmpsb
adc
clc
lea
or
mov
lret
mov
cli
xchg
dec
daa
push
scas
aas
sbb
or
push
popf
mov
xchg
lahf
sar
sub
jge
pushf
push
loope
xchg
jecxz
push
mov
sbb
lret
mov
loope
or
sbb
add
adc
loope
cld
cli
inc
mov
loope
imul
jb
loope
adc
jl
in
test
pop
lcall
mov
in
dec
mov
mov
jmp
repnz
idivl
mov
insl
mov
sub
cmp
fcmovb
out
mov
rcll
mov
push
mov
dec
jp
daa
lret
lock
mov
jmp
pop
push
xchg
bnd
scas
mov
lret
sub
push
in
mov
mov
outsl
ss
mov
hlt
sbb
add
ja
xor
adc
adc
loop
loope
repnz
scas
pop
sbb
lods
mov
push
out
jno
loope
push
out
loope
das
jmp
in
loope
jnp
ret
or
mov
add
and
fxam
sarl
fcompl
push
sbb
mov
sbb
jmp
stc
shl
sti
inc
pop
jecxz
je
lret
fistpll
sub
add
push
and
sti
xchg
repz
jecxz
jmp
inc
in
pop
loope
lret
pop
inc
or
imul
jecxz
cs
jns
loope
bound
sbb
pop
loope
sub
mov
inc
insb
out
addr16
mov
adc
mov
cs
xor
mov
push
addl
mov
fsubs
cltd
dec
pop
loope
imul
xor
adc
and
les
sbb
loope
jmp
xchg
sbb
mov
in
xor
jo
push
inc
ljmp
loope
sbb
cmp
dec
dec
out
lcall
daa
jp
das
sub
inc
mov
mov
and
mov
loope
xchg
pop
lahf
jb
loope
aam
cmp
popf
mov
mulb
aaa
lds
leave
jo
xor
jge
outsw
aad
loope
push
insb
mov
rol
enter
lock
add
jp
inc
loope
pop
push
filds
or
mov
and
notb
aas
xchg
loope
push
loopne
sahf
scas
push
out
loope
pop
jge
adc
fsubr
xchg
inc
sahf
mov
imul
sub
adc
sub
push
loope
fdivrs
rol
sbb
testb
cmp
mov
cli
push
fdivrl
dec
push
outsb
test
inc
adcl
in
loope
sbb
dec
loope
popa
ljmp
or
sub
popw
sub
shl
stos
jo
negb
xchg
loope
gs
add
inc
mov
in
jns
xchg
int
in
lsl
es
loope
push
aas
test
inc
movsb
jmp
loope
in
shr
mov
dec
cs
pop
lock
stos
loope
pop
mov
into
push
and
mov
mov
gs
push
inc
jae
cmp
pop
pop
stos
loope
es
loopne
pop
add
aaa
hlt
mul
jne
jbe
pop
loop
xorb
add
loope
mov
inc
and
jg
xor
loop
cs
pop
sub
pop
jmp
cmp
cmp
lahf
xchg
inc
push
pop
inc
adc
jmp
arpl
out
popa
std
scas
lcall
shr
loope
mov
push
dec
std
loope
cld
sub
xchg
es
adc
das
and
lock
adc
pop
jecxz
and
loope
shlb
popa
sbb
or
in
rorb
cli
push
mov
loope
jno
and
or
mov
push
mov
jle
sti
fs
push
sub
test
aam
xchg
mov
jae
imul
sti
or
inc
loope
enter
mov
pushaw
xlat
mov
loope
int
les
jge
leave
popa
mov
in
imul
loope
push
cmp
mov
push
mov
psraw
jp
lahf
fs
jae
pushw
movsl
xor
movsb
js
jo
dec
inc
and
in
fsubr
int
loope
pop
insl
scas
cmpsb
or
aas
xor
sub
sbbl
ljmp
xor
cltd
loope
xchg
lods
jle
mov
jb
dec
or
push
shl
cmp
adcl
dec
mov
scas
cmp
ja
ds
mov
mov
out
rorb
notb
jnp
cmp
pop
dec
shlb
sub
test
movl
loope
movsl
sub
sbb
insb
push
sbb
dec
jae
jp
cmpsl
loope
and
pop
loope
adc
push
das
push
lahf
push
loope
pop
push
lret
sbb
or
loope
mov
pop
popf
or
loope
cld
add
loope
or
inc
lds
loope
xchg
mov
jmp
pop
or
pop
imul
xor
mov
sbb
loope
inc
xchg
pop
aad
or
adc
mov
leave
jg
xor
and
mov
mov
mov
sbb
daa
jge
test
xchg
rorl
loope
xor
mov
ret
pop
mov
stos
cmpl
mov
jae
mov
jmp
sub
and
sub
sbb
fs
jge
adc
loope
jmp
roll
cli
jp
inc
in
outsl
aam
loope
fs
pop
es
mov
push
clc
fbstp
or
jecxz
xchg
rolb
mov
les
add
push
stc
add
or
sub
dec
movsb
and
mov
jmp
pushw
dec
enter
or
ror
sbb
and
insb
jg
pushf
sbb
mov
jle
into
es
in
test
mov
loop
rsqrtps
leave
sar
mov
and
in
lahf
loopne
add
int
jmp
shl
sahf
pop
stc
data16
in
loope
jmp
jbe
loope
scas
sbb
pop
andl
test
and
jb
cmp
pop
mov
sbb
int3
xchg
stos
loope
int
dec
inc
jo
pusha
imul
in
ret
pop
outsb
mov
fucomi
add
out
add
loope
mov
std
rolb
xor
pop
stos
or
pop
popa
adc
pop
rolb
pop
lcall
loope
jno
daa
pop
mov
adc
std
sbb
fld
out
loope
into
test
xchg
dec
sub
pop
test
pop
loope
gs
leave
in
mov
xor
sub
xchg
adc
or
adc
or
or
sub
icebp
jmp
or
lret
loope
les
dec
stos
jb
loopne
fcomp
xchg
add
aaa
das
lods
add
dec
xchg
clc
int3
imul
dec
loope
int
lret
or
shlb
adc
fucomip
stos
and
outsl
lcall
int3
lock
fsubp
lret
fnsave
xorl
ds
pop
in
inc
ss
jbe
test
out
pop
imul
jno
int
mov
jo
les
scas
jmp
sar
out
jecxz
pushf
mov
and
jg
jae
addr16
sub
call
loope
repnz
xor
dec
pop
mov
std
jmp
inc
ret
and
mov
arpl
fisubs
push
shlb
ljmp
add
mov
in
arpl
std
jecxz
stc
mov
out
adc
iret
shll
and
mov
pop
sub
fsts
mov
loop
push
and
jne
ss
shrb
ret
loopne
into
xor
sub
jo
and
jno
loope
add
jbe
nop
inc
leave
adc
xor
ret
mov
jecxz
add
cmpsl
and
pop
xchg
or
out
xchg
in
dec
push
loope
mov
pop
jo
inc
mov
adc
enter
loope
and
push
repz
push
xchg
inc
daa
fcmovb
xchg
loope
pusha
xchg
pushf
int3
xor
xorl
jl
test
sbb
arpl
dec
in
cltd
pop
into
and
mov
jge
jg
imul
das
outsl
loope
adc
nop
fiaddl
cs
loope
insb
cmpsb
mov
decl
mov
pop
cmp
sahf
adc
iret
mov
xchg
in
xor
or
loope
pop
mov
and
xchg
pop
stc
daa
cmp
aaa
and
add
aad
cli
sbb
roll
sub
cmpsb
jo
mov
xlat
loope
jp
adc
bound
mov
nop
lret
add
mov
loope
and
fistps
mov
lcall
add
orb
and
aam
loopne
mov
mov
in
push
stos
mov
std
shlb
loope
adc
mov
mov
clc
fisttpll
fisubrs
loope
push
pop
push
rorb
push
pop
dec
lds
inc
loope
mov
stos
leave
dec
rorl
fistl
popa
hlt
lret
pusha
adc
mov
push
add
sub
lock
lods
lahf
cmpsl
push
outsl
add
clc
into
mov
out
sbb
inc
in
adc
rcpps
shlb
mov
pop
dec
xchg
test
or
lods
scas
or
mov
lahf
push
int3
das
jmp
mov
js,pn
sti
loope
inc
mov
push
inc
sbb
enter
popf
jmp
cmc
loope
and
add
fsts
fs
rorb
scas
pushf
outsl
and
add
jb
mov
sbb
aas
and
jae
arpl
cmp
sarb
vunpckhpd
call
bound
in
sahf
mov
hlt
push
jnp
jmp
fwait
rcll
pop
clc
sarl
cmc
push
inc
mov
xlat
adc
jae
pushf
loope
jle
movsb
jno
and
loope
fdivl
push
inc
adc
push
dec
jmp
ficoms
jmp
mov
or
dec
mov
sbb
mov
mov
push
ret
dec
adc
inc
mov
sub
loope
repnz
xlat
mov
push
xchg
shr
imul
adc
mov
ja
push
movsb
jo
aam
imul
cmpsl
out
loope
imulb
xor
daa
pop
loope
sbb
dec
sti
mov
icebp
les
mov
inc
push
sbbb
mov
loope
dec
push
loopne
jp
cli
mov
xchg
aaa
cmp
mov
lea
bound
xor
loope
push
cmp
inc
cmpsl
mov
loope
subb
mov
fsub
repnz
clc
stos
xchg
pop
mov
loope
out
leave
es
movq
lock
mov
xor
fdivrl
rep
pop
loope
cwtl
fildl
lea
loope
fidivrl
roll
xlat
fst
test
jp
fisttpl
and
loope
sub
test
mov
rcr
mov
push
jg
mov
pop
cli
out
loope
fidivl
sbb
add
cmp
and
jmp
push
adc
ljmp
xor
ss
mov
adc
push
mov
arpl
add
cwtl
loope
inc
fbstp
sub
int3
loope
mov
sarb
xchg
jle
push
out
pop
dec
loope
test
rol
icebp
pop
in
loope
rcll
loop
mov
sbbb
jp
adc
cmp
imul
test
push
sub
cmpsl
fmull
popa
xor
jno
lds
stos
sub
loope
ror
jo
bnd
aaa
and
loope
arpl
je
and
push
push
pop
in
test
loope
cmp
sbb
adc
or
inc
dec
jmp
loope
cmp
xor
pusha
or
mov
cwtl
loope
std
inc
popf
jnp
adc
loope
lds
scas
cmp
rclb
scas
movsb
in
enter
xchg
lock
add
aas
in
mov
test
insb
adc
loope
je
popf
ficoms
sbb
jo,pn
cld
cmpl
in
in
dec
loope
ret
pushf
push
jae
adc
and
sbb
inc
jo
jl
or
cmp
push
mov
jmp
adc
ss
lds
dec
adc
dec
pop
shll
test
int3
iret
jns
leave
ljmp
insb
jecxz
add
loope
lahf
lds
addr16
fidivs
int3
push
push
add
out
pop
sti
fsubr
hlt
ret
mov
loope
jp
push
inc
sets
jl
loope
jmp
loope
mov
mov
fwait
movl
std
sbb
jne
cs
add
push
and
mov
insb
loope
out
iret
adc
fimuls
out
loope
pushf
lods
xor
xlat
rcl
mov
cld
xchg
shll
jne
loope
fsubr
push
loope
into
sub
ljmp
cld
arpl
mull
sub
fwait
and
test
mov
pop
ja
and
gs
jno
loope
scas
mov
and
push
inc
mov
popa
inc
loope
fwait
stos
je
outsl
inc
ret
cmpsb
cwtl
adc
fists
mov
nop
jnp
xchg
or
pop
jno
and
push
movsl
fsubr
dec
sbb
and
sub
testb
shlb
pop
pop
or
and
cmpsl
jae
and
push
out
jo
sub
jns
loope
rcl
ret
cmp
sarb
lods
call
in
jne
jmp
mov
mov
add
loope
sub
dec
add
cmc
pop
dec
sbb
mov
rcll
out
dec
cmpsb
in
stc
ret
adc
mov
scas
xchg
xor
and
and
sbb
push
loope
repz
mov
pop
mov
ds
or
add
add
jl
or
fnsave
inc
mov
mov
loope
lds
call
dec
sbb
insl
test
test
std
fs
push
sub
inc
sbb
loope
icebp
data16
or
test
loope
inc
ss
sbb
adc
adc
int3
cmp
gs
or
bound
pop
sub
std
or
js
loope
xchg
enter
adc
mov
push
loope
lahf
stc
or
gs
outsb
mov
jge
sti
shlb
repz
loop
outsl
pop
xchg
jno
loope
ret
cmp
and
insl
loope
sbb
into
sahf
lock
out
mov
pop
loope
cmp
mov
mov
inc
mov
je
pop
nop
mov
mov
in
ljmp
inc
idiv
js
xchg
fistps
test
loope
xor
imul
fsub
fnstcw
fucomp
add
jl,pn
add
inc
mov
cwtl
dec
jecxz
cmc
ja
or
fwait
aas
ror
dec
jle
jo
dec
sbb
push
mov
loope
fsubl
jnp
into
mov
pcmpgtw
xlat
fs
mov
xor
xor
loope
sub
add
add
test
insl
sahf
xchg
std
xchg
lret
push
inc
scas
pop
mov
or
jmp
and
jl
mov
lret
ret
xchg
test
jecxz
data16
loope
pushf
gs
insl
dec
daa
in
das
out
iret
cltd
pop
cli
mov
and
push
dec
insb
adc
popa
loope
stc
mov
lcall
lahf
xchg
dec
sarb
push
xor
movsb
mov
lahf
pop
cmpsb
shl
out
orl
push
push
lock
fisubl
cmp
fistpl
aaa
ss
mov
or
lods
out
mov
pmulhuw
xor
negl
push
mov
in
dec
or
jle
jle
leave
imul
out
mov
cvtdq2ps
mov
outsb
pop
jne
test
lods
lcall
loope
int3
push
mov
push
repnz
push
fldcw
fldl
stos
loope
fsubl
ret
lahf
jno
into
push
inc
add
and
mov
psrlw
jo
into
and
out
rolb
push
loope
repz
decl
add
mov
xchg
xor
mov
mov
mov
push
add
test
add
in
mov
test
mov
jnp
jb
sub
mov
or
jle
ds
dec
aas
ds
loope
inc
mov
pop
cmc
int3
loope
inc
cmp
std
sarb
inc
scas
push
shl
out
insb
mov
mov
push
cmpl
inc
jge
movsb
das
loope
fwait
push
cwtl
je
mov
pop
jg
sbb
mov
jb
lods
and
mov
movsb
xchg
xlat
in
push
loope
inc
push
sbb
add
xor
add
mov
pop
pop
add
loope
rol
and
adc
xchg
popa
sbb
loope
in
aam
mov
mov
add
and
adc
loope
lock
pop
lods
dec
fnsave
push
cmpb
addr16
and
lahf
and
std
push
pop
das
jmp
into
mov
mov
mov
mov
jo
addr16
shrl
push
mov
sbb
ja
or
and
clc
xor
mov
loope
jmp
mov
test
loop
inc
mov
and
sub
mov
xchg
mov
aaa
add
sub
cmp
xchg
fcompl
mov
jo
imul
leave
sbb
imull
xchg
jg
in
cs
out
loope
cmp
mov
and
cmpsl
push
fs
int3
pushw
sahf
lock
cmp
inc
or
rol
sub
mov
call
loope
in
mov
and
mov
movsb
mov
pop
std
out
cmpsl
or
in
fsubrp
jbe
in
jecxz
out
jns
mov
xchg
adc
es
or
mov
fadds
leave
jmp
loope
and
shlb
loop
jecxz
pop
loope
jnp
xor
ljmp
loop
fnstcw
xchg
add
loop
loope
out
out
push
out
mov
inc
jbe,pn
data16
jle
and
out
notl
int
xor
or
aam
aad
xchg
fs
rorb
pushf
mov
sbbl
fwait
jmp
frstor
dec
mov
leave
lock
out
push
mov
adc
shr
imul
mov
lock
xor
jmp
mov
arpl
iret
push
in
jo
adc
imull
orb
xchg
add
lcall
out
lods
adc
add
pop
inc
shr
cs
call
cmp
mov
xor
pop
icebp
imul
push
clc
fwait
sbb
adc
fsubl
pop
adc
fiaddl
adc
stc
jmp
jne
loope
and
lods
mov
loope
push
clc
mov
sub
loope
inc
jmp
and
push
shlb
sbb
scas
dec
add
hlt
and
loope
mov
adc
mov
fdivrs
dec
rorb
out
ror
jp
mov
xchg
enter
mov
cwtl
xor
push
loop
xchg
in
push
and
sbb
cmp
push
pop
jecxz
test
inc
mov
loope
pop
mov
aaa
cmc
sbb
xor
push
dec
fimuls
shlb
jnp
mov
loope
jl
js
pop
mov
loope
jecxz
adc
das
sbb
pop
loope
fs
stos
pusha
mov
stc
hlt
jl
add
sbbl
gs
rclb
mov
mov
mov
add
popf
shll
mov
push
pop
loope
movsl
push
sub
loope
test
cmpb
jo
sub
lret
cmp
mov
loope
js
fldl
daa
lock
loope
dec
lods
or
jae
mov
mov
inc
rcll
or
fwait
cmc
sbb
loopne
mov
jle
je
jmp
imulb
dec
lret
loope
add
dec
repz
jb
mov
and
loope
sar
dec
out
loope
jns
gs
cltd
add
loope
push
sub
pop
out
sub
xor
insb
xchg
cmpsl
mov
sub
lock
jmp
inc
lea
dec
xchg
loope
rcrb
cmp
and
inc
inc
lods
jge
xor
or
imul
mov
shr
push
in
cmpsl
xchg
shrl
aad
jmp
jg
mov
xorl
pop
test
popa
jmp
out
add
mov
fabs
pop
inc
mov
sub
test
popa
stos
insl
xor
aaa
mov
dec
fwait
mov
cmp
add
pop
mov
ja
loope
jp
mov
loope
nop
mov
dec
push
inc
icebp
rcl
int
mov
xor
mov
sub
inc
push
jns
hlt
fistl
lahf
loope
decl
pop
xchg
gs
loope
hlt
pop
sbb
scas
inc
mov
lret
sbb
xor
loope
stc
dec
mov
arpl
mov
popa
jle
movsl
repz
mov
mov
js
test
loope
les
mov
jmp
loopne
loope
or
fs
fldenv
or
shlb
mov
in
das
icebp
lods
add
loope
mov
pusha
enter
cmp
mov
into
jp
xor
int3
jo
test
in
or
outsl
sub
imul
dec
out
bound
push
cmovns
aad
loope
xor
bound
testl
push
imul
mov
cwtl
testl
inc
and
xor
ds
fs
pushf
icebp
repnz
test
dec
inc
xor
xchg
xor
call
mulb
in
inc
loop
push
push
sub
loope
pop
mov
ret
lret
loope
mov
add
sub
test
faddl
dec
mov
mov
inc
hlt
je
mov
add
mov
shrl
int
scas
repnz
shrb
or
aad
mov
shlb
mov
lahf
loop
jecxz
repz
fcmovbe
sbb
add
or
push
mov
push
sub
jnp
loope
into
pop
data16
fucomip
mov
mov
adc
pop
ret
repnz
loope
jne
dec
or
pop
mov
sbb
insb
xchg
cmp
push
sbb
xchg
inc
mov
lock
aad
ljmp
jno,pt
jmp
pop
test
mov
jmp
loope
adc
push
test
xchg
push
xor
ljmp
push
jmp
loope
cmp
out
mov
and
lret
add
idivl
jns
icebp
sub
xor
mul
dec
std
ret
adc
in
test
loope
push
adcb
rcr
add
pop
xlat
dec
aam
das
mov
loope
cmp
push
loopnew
insb
mov
repnz
inc
fndisi(8087
cmp
cwtl
cmp
sbb
ret
insb
xor
cmp
dec
push
into
inc
loope
mov
cli
xlat
loope
pop
aam
xorl
dec
not
shlb
mov
jp
and
icebp
mov
insb
mov
pop
fsts
xchg
out
popa
sub
in
je
inc
or
mov
xchg
xchg
push
xchg
mov
shlb
mov
ss
insb
pop
shl
and
iret
adc
in
loope
repnz
xchg
scas
xchg
aad
xor
push
imul
loope
mov
gs
jecxz
add
pushl
loop
mov
jb
mov
and
xchg
jno
adcl
mov
pop
jge
mov
push
push
mov
cs
inc
in
in
lcall
int3
inc
adc
sub
cltd
call
sbb
movsb
mov
je
out
mov
clc
shl
in
pop
dec
push
dec
loope
xor
or
push
popf
fstl
inc
in
xor
sbb
pop
imull
xor
lds
add
lock
stos
lret
add
enter
das
adc
cmpsb
pop
sub
and
loope
xchg
test
mov
inc
es
mov
and
ja
jmp
loope
sbb
sbb
jae
add
fisttps
cwtl
jo
js
fidivrs
jmp
insb
xchg
es
xor
roll
mov
pop
or
out
pop
sarb
mov
jae
mov
into
dec
xor
and
lods
pop
testl
scas
push
aas
loopne
mov
inc
mov
lods
mov
inc
shll
lahf
sub
sub
mov
loope
addb
or
shrb
xchg
lock
sbb
sti
ds
jo
imul
or
add
loope
fstl
ds
sbb
jno
cmp
xchg
loope
dec
lret
je
push
mov
fmulp
jmp
xor
jl
or
push
lock
cmpsb
movl
cmp
jg
outsl
repz
dec
xor
cmp
sti
enter
es
movl
loope
or
pop
loope
mov
popa
and
add
sub
pop
cmp
jae
sbb
inc
cmp
pop
loope
cli
test
ss
add
loope
lcall
loope
paddusw
mov
loope
fcomps
push
add
cmpsl
aad
jle
inc
leave
mov
movsb
jns
and
mov
xchg
das
adc
cmpsb
mov
js
inc
jmp
sahf
dec
push
in
leave
loope
jno
mov
loope
cltd
pop
addr16
push
hlt
ljmp
sar
ds
mov
popa
lods
dec
loope
jne
in
popf
gs
mov
les
das
loope
mov
jle
test
or
insb
jo
push
xchg
xor
enter
loope
es
jge
mov
lock
xchg
jno
ss
push
loope
and
jbe
rolb
jecxz
mov
cmc
or
and
pop
in
arpl
ds
enter
or
jmp
jmp
test
cmp
popf
loope
lods
shrb
pop
repz
jo
sbb
int
dec
das
inc
mov
xchg
out
jle
sbbb
or
test
mov
shr
outsb
pop
lea
loope
arpl
out
sub
loope
hlt
lods
adc
add
mov
mov
jmp
loopne
outsl
jmp
adc
xlat
xor
in
aam
mov
outsl
mov
jb
add
mov
sub
cmpsl
lahf
pusha
std
in
mov
and
adc
xor
repz
sbb
fsubr
dec
pop
add
data16
adc
loope
dec
cltd
inc
cmp
loope
dec
jbe
ret
or
test
xchg
stos
and
mov
mov
rcrl
or
out
lret
sarl
and
xor
js
mov
mov
jbe
out
aad
jecxz
adc
loope
subb
mov
sti
ja
adc
loope
jno
fisubl
rcll
ret
sub
leave
mov
cld
fnsave
not
out
inc
adc
stos
push
add
loopne
out
jb
mov
mov
jl
pop
pushf
int3
arpl
xlat
mov
mov
inc
jns
hlt
sub
rolb
jmp
data16
outsb
xor
pop
popa
push
jle
insl
nopl
jbe
pushf
push
push
scas
mov
dec
add
loope
push
lods
lea
add
loope
cmp
aaa
out
cmc
push
dec
loope
loopne
int3
addr16
fldln2
jmp
pushf
adc
shlb
test
jbe
mov
adc
divb
loope
push
sub
outsl
loope
pop
leave
jae
pushf
xor
and
and
in
and
int3
fisubs
adc
xlat
std
loope
lcall
push
popa
xchg
loope
lock
xchg
mov
mov
popf
add
mov
loope
cmp
out
mov
outsl
scas
push
mov
aad
sti
xchg
stos
mov
cmp
int3
mov
push
mov
sub
shrb
stc
mul
mov
popa
ss
fbstp
jmp
js
les
push
cwtl
push
add
out
mov
popf
mov
js
and
repnz
fstpt
rcll
sti
mov
lahf
or
push
push
in
imul
add
ss
xchg
xor
push
aam
fcmove
pop
loope
inc
stos
adc
ret
test
sbb
pushf
ja
push
out
jmp
cwtl
mov
movsl
sub
jo
fstpt
xlat
test
loope
clc
out
pop
mov
pop
aaa
xor
or
js
loope
cmp
pop
jb
loope
test
fs
or
pop
pop
loope
pop
out
mov
loope
mov
loope
add
jbe
sti
shrb
ret
xor
loop
aaa
in
loope
ss
add
xchg
wbinvd
and
push
loope
mov
pusha
repnz
fdivrl
mov
xchg
ja
popf
insb
cwtl
xchg
loope
push
rcrl
pop
xlat
gs
push
inc
ds
pusha
leave
mov
dec
loope
cmp
and
mov
jge
inc
or
jmp
add
pop
flds
mov
out
or
pushf
adc
iret
addl
out
sti
rorb
shl
xor
fcomp
push
shl
and
bound
rcll
jge
jns
mov
imull
jb
rolb
imul
in
mov
push
insb
fadds
mov
cmp
mov
or
inc
xor
add
add
fs
add
xchg
movsl
cmp
cld
adc
je
out
and
out
dec
inc
lock
shlb
cld
in
jno
ljmp
loope
add
pop
loope
ljmp
pop
jp
fidivs
popf
sub
xlat
or
out
fmuls
je
add
pop
test
xor
loope,pn
sbb
inc
outsl
cmp
push
mov
sbb
gs
rolb
out
and
add
leave
daa
scas
mov
inc
aas
stos
cmpsb
arpl
sub
fldt
fdiv
imul
insl
rorb
iret
mov
clc
imul
repz
jg
loope
adc
dec
orl
or
pop
pop
nop
xor
outsb
pusha
mov
add
and
fisttps
pop
cmpsl
popf
outsb
sub
bsf
jb
aam
pop
push
nop
rol
xchg
add
jo
cmc
loope
jge
xor
cld
cmpb
push
in
lock
add
out
sbb
xchg
cmp
in
ss
jle
pop
in
call
dec
out
jecxz
loope
pusha
sbb
xor
mov
loope
sub
in
ljmp
dec
aam
pop
sbb
arpl
loope
cld
adc
xchg
xor
push
rclb
arpl
jmp
sarl
loope
mov
sub
mov
cltd
test
ljmp
lds
out
xor
jbe
sub
jmp
jecxz
inc
aad
jnp
add
loopne
mov
or
int
jmp
stos
je
lock
add
jb
stc
arpl
insb
shlb
or
out
punpcklwd
and
loope
mov
sub
daa
jge
je
je
jecxz
enter
popa
repz
cmp
shrb
push
pop
inc
xchg
ljmp
cmp
and
loopne
xorb
push
add
fs
lret
in
cmpsb
addr16
mov
ss
mov
imul
sub
pop
loope
flds
mov
and
jmp
call
loope
dec
popf
or
jbe
pop
loope
cltd
movsb
nop
fisttps
jae
pop
dec
lods
mov
and
add
and
xchg
jne
in
add
pop
sub
pushf
fdivp
je
jbe
decl
in
gs
sahf
sub
call
fnstcw
clc
pop
ja
test
loope
sbb
std
cld
loope
cmp
mov
and
mull
mov
sbb
push
inc
add
loope
add
mov
loope
mov
out
lds
push
mov
push
xchg
loope
jl
pop
repnz
mov
pop
les
cmpb
cmp
mov
xchg
adc
iret
pusha
es
repz
jno
sub
loopne
push
mov
sub
sbb
pop
rorb
loope
push
daa
pop
adc
ljmp
cmc
jecxz
and
loope
leave
shrl
lock
or
adc
mov
push
addb
loope
lock
mov
and
insl
mov
pusha
or
and
loope
cs
xlat
loope
jae
sub
sub
ss
iret
xchg
test
add
xlat
loope
fwait
and
loope
inc
sbb
imul
loope
cwtl
repnz
loope
mov
subl
aad
adc
inc
popa
insl
mov
loope
insb
sbb
scas
mov
jp
xchg
push
popf
add
fsub
jg
dec
loope
adc
test
adc
outsl
in
xchg
jnp
push
arpl
aam
loope
xor
subl
push
in
inc
push
lea
mov
mov
shlb
sub
in
pop
movsl
pop
sub
loope
inc
xor
adc
loope
pop
aaa
push
adc
rolb
or
out
xchg
movsl
loope
test
pop
xchg
lcall
in
cmp
mov
cmp
xchg
loope
add
xchg
nop
sbb
jmp
loope
insb
adc
or
lcall
jnp
cmp
pop
mov
fwait
cmp
in
push
mov
pusha
dec
sbb
sbb
mov
inc
and
add
xor
in
shl
lock
xor
rcr
loopne
add
mov
or
mov
jp
xor
mov
and
jnp
push
xor
cmp
loope
or
dec
int3
and
and
adc
jmp
insb
jns
loope
pop
pop
adc
cmpsl
arpl
xchg
aam
std
jmp
jecxz
cmp
loope
push
data16
jae
xlat
andb
out
cltd
mov
jmp
push
pusha
outsl
sub
outsb
shl
cmp
cmp
jo
inc
xchg
icebp
mov
jno
and
sbb
dec
insb
jl
or
pushf
push
push
pop
movsb
adc
loope
pop
lret
xor
je
icebp
imul
sub
out
jmp
sbb
je
inc
push
xchg
test
addr16
aaa
push
loope
pop
xchg
dec
sub
mov
loope
add
cmp
mov
cli
fistpl
push
gs
loope
jmp
and
push
loope
fisubl
sbb
pop
cmc
sarl
nop
push
loope
lods
push
mov
push
sub
repnz
pop
inc
mov
loope
lcall
loope
arpl
dec
mov
xor
lock
xchg
popa
dec
add
in
ret
jns
pop
ret
jge
push
cltd
jecxz
dec
out
cli
shll
jnp
cmp
cmp
enter
in
loope
mov
mov
jbe
test
xchg
scas
ret
pop
daa
cltd
jnp
shlb
mov
lods
mov
enter
aas
lret
push
addl
jg
dec
pmaddwd
jns
inc
push
in
test
dec
cmp
xchg
and
or
sti
mov
dec
sahf
or
mov
cld
push
test
pop
loopne
loope
les
fdivr
mov
jmp
sarb
hlt
in
les
push
inc
jmp
out
mov
out
fistpl
push
or
jbe
enter
loopne
pop
xchg
std
xor
popa
fistl
jnp
movsb
or
pop
inc
jmp
in
push
cmp
jno
and
stos
icebp
mov
jmp
test
mov
outsb
jg
cmp
popa
loope
push
sti
stc
nop
add
dec
in
sbb
inc
icebp
dec
shrl
jno
jge
lcall
shrb
std
adc
cmpsl
jmp
sbb
mov
jns
mov
push
shl
int3
iret
mov
jo
test
mov
push
jle
mov
incl
push
loope
and
daa
loope
mov
call
lret
pop
int3
rorb
jo
loope
outsl
xchg
cmpsb
mov
loop
lock
sbb
inc
push
loope
lea
sbb
imul
dec
jecxz
jne
xlat
loope
or
insb
mov
and
xor
iret
lcall
or
jp
insb
rolb
jno
in
xchg
loope
cmp
xadd
loope
pop
aad
push
ficomps
push
add
stos
loope
jp
test
jne
jmp
mov
scas
inc
ret
loope
mov
adc
mov
movsb
loope
repnz
xor
lcall
xchg
sar
loopne
xchg
xchg
int
sbb
scas
loope
pushf
imulb
in
jnp
inc
mov
add
sub
sbb
cwtl
add
xchg
js
jmp
lea
dec
cmpsl
ljmp
jmp
popf
mov
or
gs
dec
xchg
out
add
jle
popf
add
in
sbb
or
jno
push
push
lret
mov
cwtl
cld
loope
in
xchg
dec
mov
or
xchg
arpl
icebp
loope
cmpsl
fadds
jmp
push
and
pop
imul
shll
and
xor
jb
int3
add
cld
andb
or
sbb
add
mov
incb
stos
adc
mov
int3
xor
test
loope
jl
fsub
gs
dec
add
push
pop
out
and
mov
xorl
out
dec
cmp
mov
push
adc
cmp
loope
lret
xor
std
movsl
add
shlb
imul
mov
loope
push
ljmp
fcmovnbe
lds
and
test
imul
popa
add
rcr
stc
loope
scas
xor
add
das
fwait
idivl
mov
jae
mov
jmp
dec
out
lret
loope
cs
jp
insl
pop
loope
sub
jnp
sbb
loope
out
mov
pop
andb
push
loope
or
xchg
fcoms
movsl
loope
and
inc
push
and
loope
scas
mov
xorl
dec
mov
ljmp
insb
aas
in
fimuls
loope
and
mov
loope
cmp
pop
dec
mov
sbb
bound
movsl
push
xchg
cmp
loope
aam
bnd
loope,pn
sbb
jae
loope
cmpsl
or
loope
xchg
push
sti
in
pop
loope
imul
xor
scas
loope
sbb
aaa
push
sub
inc
repnz
push
mov
loope
dec
fmuls
loope
sbb
or
pop
out
fildl
nop
jae
add
jns
idivl
mov
js
pop
and
out
mov
sbb
lea
mov
inc
call
mov
lods
add
or
jo
lock
pop
and
imul
or
rcrb
repz
sub
jnp
jecxz
add
push
loopne
pop
mov
and
add
lcall
loope
xor
repz
popa
jae
cltd
into
sti
out
pushf
xor
in
jo
iret
xchg
adc
mov
sub
ljmp
xchg
jo
push
push
ds
push
div
out
cmp
or
stos
shr
cs
mov
popf
shl
push
imul
in
out
cmpsl
pop
jecxz
loope
out
nop
adc
outsl
pushf
stc
pop
and
push
testb
and
ret
or
loope
xor
and
cmp
in
sub
test
mov
mov
xor
call
out
cmpsl
mov
hlt
sarb
sar
mov
pop
shl
negb
in
loope
inc
addr16
jp
dec
mov
add
into
dec
out
clc
mov
loope
cmc
in
lods
bound
mov
mov
pop
pop
out
sub
pop
mov
loope
push
and
dec
std
pushf
iret
loope
push
mov
addb
jle
cmc
pop
test
push
xchg
push
jae
iret
sbb
test
ljmp
cmp
addr16
jmp
loope
xlat
adc
repnz
mov
mov
out
cld
stos
rclb
mov
out
into
and
sarl
inc
lret
or
int
sbb
sbb
andl
inc
mov
into
rorb
xchg
fdivrp
sub
jo
dec
mov
loopne
push
je
fabs
xlat
mov
or
xchg
test
loope
inc
add
loope
aad
repnz
jp
mov
cmp
movsb
scas
mov
pop
cmpl
rcrb
es
lock
mov
mov
mov
rcrb
xor
and
addr16
inc
or
and
insl
scas
ljmp
out
fwait
loope
sub
cmp
movsb
addl
or
in
test
loope
xor
or
adc
pop
mov
jbe
push
or
and
xchg
outsl
xchg
outsb
imul
scas
pushf
jge
clc
push
mov
mov
shr
mov
mov
loope
xor
mov
sbb
mov
xor
mov
rcl
dec
loope
gs
or
push
and
add
loope,pn
lds
daa
loope
mov
insb
mov
push
in
jo
movsl
pop
jg
in
adc
cmc
push
loope
or
sbb
loop
test
jne
jo
shrb
or
jo
mov
iret
lret
out
ret
decl
ja
stc
rolb
loope
pop
add
pop
jae
inc
loope
mov
sahf
lcall
push
fs
std
int
enter
loope
and
stc
test
fabs
and
ljmp
filds
ss
jae
rorb
add
cmp
lods
loope
arpl
in
je
mov
loope
jo
inc
sub
xor
pusha
xlat
or
dec
fcmove
sub
add
shl
push
cmp
xor
out
loope
jecxz
int
pop
aam
aad
mov
jmp
cmpsl
mov
push
mov
fnstcw
sub
and
adc
jl
mov
test
sub
add
sub
push
cmp
add
ret
mov
sub
loope
dec
mov
js
in
pop
sarb
mov
loope
add
xchg
jae
lds
jecxz
loope
movsl
xor
test
xor
je
jb
jne
nop
mov
mov
rorl
sub
loope
mov
cmp
xchg
cmc
mov
dec
loope
fsubr
fs
xor
mov
add
sbb
call
inc
sbbb
out
mov
jmp
mov
cmpsb
add
or
popa
lds
rcrl
cmp
aam
mov
je
sub
sbb
sub
add
pushf
xchg
loope
lret
push
dec
loope,pt
or
mov
add
and
jmp
dec
sahf
movsl
loope
cmp
sbb
xorb
loope
movsl
test
sub
rorb
inc
outsl
mov
jbe
scas
or
and
gs
adc
in
in
add
inc
mov
add
or
loope
popa
imul
lahf
jp
mov
loope
mov
outsb
or
imull
cmp
fwait
ljmp
and
in
int
adcl
inc
loope
jl
or
push
add
add
fnstcw
loope
push
stos
jmp
leave
cmp
das
cmp
mov
xchg
aam
lahf
scas
repnz
ficompl
jl
xchg
iret
nop
arpl
shll
aad
push
mov
daa
xchg
stc
xchg
loop
cwtl
pusha
adc
js
loope
mov
loopne
xchg
insb
and
dec
fabs
mov
arpl
jne
pop
inc
push
mov
loope
addr16
dec
cmp
mov
jb
shlb
add
mov
popa
or
fwait
scas
stc
cmp
push
sub
int
jo
xor
gs
push
out
mov
addr16
out
test
loope
xchg
data16
sahf
push
dec
add
popa
and
ret
stc
jg
add
insl
dec
jmp
loopne
outsl
dec
mov
call
add
sahf
shl
repz
mov
clc
shl
adc
ja
cmp
mov
pop
mov
pop
pop
cltd
outsl
notb
andl
arpl
adc
jge
push
loop
loope
dec
sub
cmc
pop
pop
loope
dec
jl
cltd
cld
cwtl
jge
mov
cmp
dec
loope
out
stos
mov
addr16
mov
pushl
dec
pusha
pop
xchg
shr
push
adc
pop
loope
lods
inc
sti
scas
jo
or
sbb
stos
sub
movsl
cltd
jp
loope
xlat
or
ds
dec
loope
fwait
jle
bswap
sub
ror
mov
cmc
imul
stc
scas
pushf
outsb
jo
add
jb
jp
loope
dec
pop
dec
in
scas
imul
jo
add
push
lods
pop
xchg
mov
push
sbbb
adc
xchg
xor
cs
xchg
push
in
push
ljmp
rcll
ja
push
fs
loope
shlb
or
jp
fisubl
loope
cmp
xchg
inc
lock
mov
andl
pop
and
clc
insl
pushf
mov
loope
div
xchg
divb
sbb
popa
xlat
pop
jg
dec
xor
mov
jb
adc
push
sahf
loope
addl
insb
loope
sub
lcall
jae
ss
pushf
mov
xlat
sahf
popa
push
add
or
cmp
testb
or
push
xor
sbb
test
sti
ja
inc
push
les
add
out
call
loope
mov
icebp
add
fwait
outsl
loope
pusha
jae
add
sahf
lods
pop
adc
leave
and
scas
loopne
lea
das
in
sbb
dec
loope
push
or
mov
lods
jmp
stos
cs
insb
cmp
mov
add
cmp
and
jg
mov
test
arpl
dec
mov
lock
xor
jp
mov
std
sub
push
stos
ds
xchg
rclb
lods
xor
test
movsb
je
shl
pop
inc
mov
jmp
and
in
cmpsb
loope
jg
iret
out
inc
push
xlat
loope
pop
ficompl
aam
xor
loope
aaa
adc
push
lds
mov
push
psraw
loopne
fdivrs
fisttpl
out
jmp
inc
pop
stos
add
aaa
loope
cmp
sub
movsl
cmp
stos
mov
cmp
fwait
mov
jne
in
xchg
push
xorl
loope
push
or
push
and
cltd
pop
pop
mov
out
pusha
fidivrl
mov
std
or
adc
mov
push
leave
mov
popa
jecxz
add
loope
icebp
test
cs
jae
scas
ja
or
loope
inc
jnp
cmpsl
loope
jns
stos
mov
cmc
mul
int3
out
or
daa
fwait
lahf
cmp
orl
icebp
loope
iret
cmp
mov
adc
adc
pop
and
mov
arpl
sub
loope
mov
cld
xchg
loope
mov
js
loope
lret
and
xor
loope
stos
pop
insl
mov
inc
jg
mov
sub
jo
scas
add
call
dec
push
cs
jle
fucom
addr16
mov
cmp
push
aaa
call
and
mov
insl
es
fst
jg
popf
add
aad
mov
mov
loope
lods
jo
mov
xchg
sbb
loope
push
in
adc
shl
dec
inc
dec
movb
add
loope
inc
mov
jne
sub
pusha
push
cwtl
push
inc
add
out
adc
or
cmp
int
test
sub
loopne
jne
cmp
lock
dec
stc
arpl
fiadds
rolb
repz
outsb
mov
loope
mov
test
xor
loope
xchg
fstpt
data16
jno
incb
mov
out
iret
loop
movsb
cmpsb
shll
dec
movsl
in
ret
int
dec
nop
sbb
popf
dec
arpl
loope
repnz
cmpsb
xchg
loope
cmpsl
lret
outsb
add
loope
and
jne
or
loope
ds
lods
push
mov
jmp
aam
js
jae
jo
pusha
jecxz
loopne
sbb
or
rorl
clc
popa
imul
loope
fdivl
stos
xchg
sub
test
pop
outsb
icebp
loope
subl
loope
out
cltd
clc
scas
js
hlt
call
xlat
in
enter
outsb
jmp
ret
pop
mov
mov
js
push
or
sbb
lods
in
popa
fadds
and
hlt
loope
sbb
mov
loope
add
and
push
insb
loope
popf
rorb
mov
lods
jo
js
cltd
push
in
cmp
out
loope
sarb
pop
in
xlat
test
shl
in
mov
sbb
fwait
xchg
pusha
push
fabs
js
adc
push
loope
or
shrl
insb
adc
movsl
inc
loope
sub
insl
emms
jb
loop
add
fiadds
scas
sbb
dec
mov
adc
sub
xacquire
lock
jb
mov
inc
xchg
loopne
inc
sbb
push
push
jo
xchg
aam
sarb
roll
sbb
loop
pop
xor
jmp
loope
subb
jp
mov
xchg
or
call
inc
je
mov
out
aaa
fstpl
int3
outsb
out
push
add
pop
jmp
lds
outsl
mov
adc
movsl
jnp
sar
imul
xchg
inc
out
mov
es
and
mov
repz
sub
lods
sub
popf
and
mov
adc
cmpsb
int3
loop
mov
fmull
inc
mov
push
xorb
popa
mov
loope
mov
mov
or
or
aad
imul
loope
push
leave
ret
sbb
int
mov
not
fwait
out
loope
mov
sub
lret
loope
xchg
aaa
xlat
int3
arpl
jo
jae
clc
in
loopne
pop
mov
fstps
cld
shl
jmp
mov
xchg
jmp
ret
out
in
loope
sub
rclb
fdivs
ss
push
inc
inc
sub
in
fidivl
loope
js
push
mov
adc
push
insl
xor
mov
stos
mov
daa
loope
in
jl
shrb
ret
lret
popa
popa
loope
pop
mov
and
xor
out
fcoml
loope
adc
cmp
pop
jns
arpl
loope
jnp
mov
xchg
inc
cltd
loope
push
xchg
sbb
test
and
pop
or
loope
add
lret
or
pop
mov
or
mov
jbe
xor
push
pop
repz
out
inc
xor
sub
mov
clc
push
loop
enter
sbb
cli
loope
mov
cmp
and
rcrb
dec
mov
pop
bound
lcall
inc
pop
add
push
insl
mov
jo
and
das
fwait
pop
scas
and
and
sbb
jmp
sbb
repnz
in
and
cmp
mov
cld
mov
fisubrl
push
lock
adc
or
imul
imul
rolb
test
mov
iret
xchg
mov
jp
or
fcmovb
mov
repnz
mov
test
cmpsb
cmc
loope
push
pop
stos
push
pop
ljmp
pusha
and
jb
cli
fnstsw
test
mov
cmp
loope
sbb
xchg
add
ja
repnz
jmp
add
cltd
dec
xor
mov
in
dec
addr16
jo
out
hlt
jg
out
fcoms
andl
in
push
loope
jmp
jl
cs
jmp
lock
mov
jge
aas
and
in
xor
xlat
loopne
out
sti
ja
adc
and
adc
jbe
cmp
fisttps
sub
jg
pop
sub
ds
dec
in
cli
out
jmp
loope
imul
test
and
xlat
mov
sub
hlt
les
ret
xchg
arpl
mov
loope
sub
inc
lahf
mov
adc
pusha
cmp
and
xchg
ss
addr16
rcll
out
push
mov
jbe
cmp
in
and
sub
loope
mov
adc
sub
xorb
lock
std
jmp
push
loop
loope
mov
mov
and
das
xor
adc
dec
pop
out
sahf
and
xlat
adc
in
add
push
xorl
inc
or
lock
xchg
xor
imul
dec
push
dec
and
sub
mov
mov
sahf
push
sub
out
sbb
cltd
inc
xchg
xor
bound
add
loope
jge
lcall
or
mov
mov
loope
push
imul
and
pop
sbb
addr16
mov
add
cmp
adc
inc
xchg
loope
push
lods
add
or
jecxz
lds
std
loope
mov
aaa
push
loope
loop
call
loope
gs
or
jmp
mov
dec
lcall
bound
mov
loope
aam
xor
mov
icebp
rol
xchg
fs
jmp
rolb
xchg
jne
cmpsl
mov
and
lds
push
mov
shll
push
sub
pop
loope
iret
sub
imul
loope
xchg
or
mul
sub
repnz
movsl
push
pop
sub
pop
stos
loope
cwtl
mov
fwait
push
mov
pop
cmp
mov
leave
add
jae
mov
shr
aaa
jg
in
push
loope
icebp
outsl
je
enterw
and
loope
cmp
clc
loope
mov
pop
pop
loope
or
cmp
stos
jecxz
mov
fidivl
xchg
jl
sbb
sub
jae
add
cmc
xchg
loope
dec
nop
pop
pop
adc
daa
loope
pop
ds
pop
mov
inc
dec
xchg
cmp
shlb
adc
arpl
in
sbb
in
pop
je
shl
test
leave
in
pop
inc
lcall
lds
sub
jl
jp
jecxz
pop
loope
cmpsb
clc
insl
and
pop
or
and
mov
scas
adc
int
fdivr
in
jl
outsl
xchg
mov
je
mov
pop
adc
mov
inc
or
test
push
cmp
daa
adc
pop
add
mov
gs
adc
jns
mov
mov
jmp
mov
pushf
stos
dec
add
sbb
loope
mov
out
cmp
jle
push
loope
sub
shll
add
dec
jae
in
mov
inc
fwait
push
loope
jb
xor
sub
out
mov
fsubrl
lods
mov
pusha
sbb
mov
add
jno
popa
out
jnp
call
push
int3
ja
out
out
inc
aad
loope
adc
or
imul
test
mov
cwtl
jne
lret
sub
dec
ss
xchg
jo
fwait
push
cmp
loope
cli
fld
fiadds
out
jecxz,pt
jmp
add
jo
sbb
push
hlt
popa
mov
and
sub
cmp
jne
adc
shll
ss
loope
sub
mov
outsb
int
lds
out
push
fabs
push
aam
sahf
lock
dec
aam
push
lret
jecxz,pt
xor
mov
test
cmp
out
push
loope
rclb
das
xchg
jmp
push
cli
mov
and
gs
ljmp
dec
cmp
push
nop
in
test
loope
jmp
std
or
xchg
and
ljmp
pop
xor
push
lret
std
jmp
je
inc
stc
loope
lock
rclb
push
cmpsl
jbe
vpunpckhbw
cmpsb
mov
cmp
mov
pop
sub
xchg
imul
cmp
add
loope
mov
push
or
out
inc
sbb
das
andl
dec
or
mov
nop
mov
mov
ljmp
loop
dec
rcl
or
fstps
incb
push
add
imul
xor
push
or
shll
adc
inc
cmpl
leave
mov
adc
shll
dec
lds
test
bound
or
loope
sar
push
sbb
aas
dec
push
mov
dec
loop
push
cltd
loopne
inc
in
xchg
cmp
mov
stc
xor
subl
cmp
icebp
mov
inc
je
jl
fisubrs
or
test
add
imul
jg
cmpsb
in
loope
sub
daa
ret
dec
stos
leave
popf
mov
loop
sbb
ret
sbb
xor
loope
call
lods
inc
insl
out
sahf
jl
or
add
push
xor
int
loope
enter
cmp
loope
jecxz
aam
dec
loope
inc
das
addr16
push
pop
loope
mov
xchg
sub
or
negl
or
fcomps
adc
call
sbb
and
jno
inc
loope
daa
adc
cmc
xor
push
loope
divl
scas
cltd
outsl
add
shrb
scas
arpl
or
lahf
pop
loope
daa
stos
int3
xchg
imul
test
out
loope
fwait
and
aas
jmp
loope
xor
daa
lock
sub
in
and
dec
lods
inc
loop
inc
mov
cmpb
jnp
adc
adc
fwait
popa
icebp
loope
sbb
fdiv
adc
loope
sub
adc
jl
mov
push
mov
loopne
jmp
clc
test
jle
stc
loope
mov
or
js,pt
push
adc
push
shrb
jbe
inc
and
cmpsb
cmpl
jmp
lods
jecxz
imul
mov
inc
push
lods
inc
cwtl
mov
mov
inc
out
fcompl
push
dec
gs
push
and
outsl
lock
in
in
jo
lret
jecxz
inc
ficoml
out
push
sarb
leave
pop
loope
and
neg
fiaddl
xchg
inc
dec
fildl
lods
or
pop
lds
jmp
jmp
fstps
data16
clc
in
loope
or
xchg
in
fcomps
jo
stc
loope
cmp
dec
negl
sub
fs
icebp
nop
in
jmp
das
sub
shlb
xchg
mov
test
adc
loope
sarl
ljmp
rol
fldt
fnstenv
jbe
jo
jb
cmpsl
mov
cmp
mov
xor
jmp
push
rolb
cltd
loope
enter
outsl
push
mov
out
shrb
adc
loope
imul
test
shrl
mov
adc
int
loope
fwait
lds
xchg
mov
dec
mov
sahf
mov
aas
cld
jnp
lods
call
dec
addr16
mov
mov
jmp
shll
cmp
loope
repz
jbe
mov
jnp
rcrl
fstpl
jns
dec
das
add
pop
xor
lods
imul
ret
sbbb
popa
fldl
loope
loopne
movsb
test
jecxz
jmp
aaa
inc
and
pusha
mov
pop
mov
push
dec
cmp
dec
jecxz
xchg
in
loope
sarl
pushf
loope
adc
out
or
jge
fistl
repz
pop
sarl
dec
lret
mov
into
loope
push
lahf
mov
in
or
mov
arpl
xchg
jns
jmp
push
adc
sub
mov
lea
insb
loope
lock
divl
insl
mov
cmpsl
mov
and
and
das
inc
in
test
addr16
cs
cmp
clc
mov
orl
loope
cltd
aad
xchg
or
loope
pop
sbb
pop
divb
sub
stos
mov
inc
fcom
fs
and
xorl
sahf
repz
and
test
loope
hlt
out
push
adc
dec
in
add
xchg
mov
out
loope
add
icebp
movsl
push
lds
ret
leave
loope
mov
mov
add
or
imul
and
aas
loope
mov
test
cmp
mov
fchs
pop
decl
mov
pusha
push
sbb
sbb
push
filds
loope
pop
jno
jo
loopne
cmp
loope
into
adc
jg
mov
shlb
jmp
andb
adc
xor
fidivrs
out
loope
cld
and
out
sbbl
or
fldenv
mov
in
into
lcall
int3
mov
and
shr
add
or
push
loope
andb
and
inc
jge
dec
lock
rorb
mov
test
pop
or
iret
sbb
and
repnz
aas
xchg
and
jmp
bound
xchg
xor
mov
adc
xchg
pop
flds
ja
mull
scas
xor
mov
or
pop
mov
adc
icebp
pusha
jle
jno
clc
sbb
mov
push
mov
gs
mov
push
pop
loope
xchg
cmp
fldt
or
mov
loope
dec
jl
addl
popa
push
dec
push
arpl
sub
lds
loope
lods
icebp
fsubr
orl
inc
cmp
mov
stos
sub
out
int3
adc
inc
movsl
add
mov
loope
mov
sub
loope
ss
rcll
jge
loope
cmp
or
loope
shlb
add
or
pop
out
adc
out
lret
and
loope
jmp
mov
leave
add
jp
fwait
outsb
loope
inc
pop
xor
rolb
mov
fldl
pop
int3
mov
lret
push
push
and
lcall
mov
jo
mov
lods
loope
or
stc
andb
loope
or
mov
pop
push
loope
sbb
cld
scas
test
jo
stos
jns
inc
sbb
popa
push
punpckhdq
loope
sub
cmpsl
int
dec
enter
out
sub
dec
jmp
push
or
clc
mov
nop
jp
shl
push
dec
lahf
add
loope
mov
leave
lods
mov
aad
jb
outsl
mov
ds
pop
out
daa
pop
addb
mov
adc
cltd
cmp
xor
ret
mov
add
flds
and
mul
in
push
and
inc
xor
xor
outsb
jo
jle
js
mov
popa
lods
bound
fstp
out
testb
sub
daa
adc
sar
add
lods
push
mov
fsubrs
loope
cli
aad
push
mov
test
sbb
and
inc
add
cmp
sbb
sub
sti
push
loopne
je
inc
pop
mov
xor
xor
je
cmpsl
add
inc
mov
test
mov
loope
xchg
fbld
mov
loope
daa
cmp
fnstenv
adc
addr16
mov
ds
arpl
mov
lahf
hlt
popf
sarb
and
pop
std
jmp
push
loope
test
dec
das
xor
loope
mov
and
loope
push
cld
in
push
jmp
jo
aas
mov
xchg
out
jns
and
cs
mov
loope
adc
pop
loope
dec
mov
mov
ficoms
mov
in
je
mov
jo
outsl
imul
add
lock
xor
mov
fnop
mov
xchg
dec
inc
loope
jb
orb
lods
push
fcmovb
sbb
loope
xchg
mov
loopne
adc
mov
out
out
fwait
loope
jge
movsl
popa
sbb
lcall
pusha
loope
mov
ds
cmpsl
pop
xor
mov
lock
mov
mov
loope
or
lret
shrl
insl
dec
inc
loope
and
lods
lock
leave
mov
add
xchg
loope
decb
pop
pop
loope
push
dec
push
imul
ja
mov
shl
mov
push
mov
bound
push
arpl
adc
fwait
mov
cmp
stos
and
fstl
loope
cmp
insb
and
scas
orb
adc
mov
xor
negb
push
pusha
rclb
cld
cmpsl
lods
clc
into
mov
add
and
test
shr
sbb
cmpsb
bound
dec
scas
enter
cli
dec
fstpl
lcall
loope
add
fsubr
cwtl
lods
ljmp
pop
jno
addl
sti
loope
sbb
aam
pop
fdivp
loope
lcall
loope
jns
loop
std
js
loope
pop
push
insb
inc
push
int3
jg
mov
mov
sbb
paddsw
inc
loope
rcrl
add
xor
xor
loope
shlb
and
out
pop
adc
cli
pusha
xchg
inc
inc
imul
leave
sbb
pop
pop
test
loope
push
fcomip
add
push
test
loopne
loope
es
add
jne
sbb
loope
and
gs
dec
cwtl
repz
mov
sbb
loope
sbb
xor
xlat
add
leave
mov
ror
loope
sbb
inc
and
ljmp
mov
in
jno
es
push
ss
lds
dec
fisttpll
push
out
push
jmp
sub
dec
loope
push
jnp
pushf
mov
std
add
dec
mov
cltd
stos
sbb
push
loope
loopne
mov
out
scas
clc
icebp
sbb
loope
jg
dec
ljmp
mov
xor
pop
ss
into
dec
jecxz
insb
dec
adc
loope
xlat
imul
xchg
hlt
dec
loope
gs
mov
aaa
inc
adc
xchg
jo
ja
jns
inc
fldenv
inc
pushf
mov
movsl
or
scas
fstpl
loope
test
gs
loope
fdivrl
cmp
cli
js
subl
loope
mov
daa
lods
add
xor
and
popf
repnz
into
ss
pop
mov
xor
inc
in
ja
loope
icebp
out
shll
sbb
stos
push
movsl
jns
loope
fmull
call
fildll
or
mov
dec
mov
insb
or
mov
pop
loope
loop
adc
call
cs
or
aas
pop
loope
or
inc
mov
push
cmpsl
mov
sub
lret
popf
push
arpl
loope
add
sarl
adc
hlt
dec
adc
cli
test
pop
scas
dec
adcl
and
out
jecxz
outsb
jle
jb
int3
mov
loope
lret
hlt
lea
dec
pusha
out
mov
jp
fsubrl
jo
cmpsb
sub
xor
filds
add
repnz
pushf
loopne
sbb
nop
insb
mov
push
cmp
inc
loope
addb
loope
sub
push
sti
xor
loope
sbb
mov
lock
inc
inc
fucomip
cmp
loope
pop
xchg
jle
jp
aas
and
mov
xor
loopne
push
push
cmp
lea
je
vxorps
adc
mov
out
scas
cmp
pushf
sub
cld
outsl
and
xchg
xchg
imul
push
cmp
sub
dec
arpl
test
loope
insl
mov
retw
add
or
jecxz
mov
mov
jno
rorb
loope
scas
cmpsl
subb
lahf
xor
push
inc
loope
xlat
mov
faddl
push
adc
jmp
int
rorb
ret
in
push
add
pop
jecxz
nop
loope
call
cli
inc
dec
sahf
sub
lahf
add
dec
mov
in
jl
xor
mov
jecxz
xchg
sbb
and
xchg
loop
add
xor
arpl
int3
or
sbb
popa
add
aas
jne
xchg
xchg
mov
popa
pop
pop
pushf
roll
adc
inc
sub
mov
daa
repz
inc
sti
andb
pop
sbb
and
mov
loope
pop
mov
loope
out
mov
loope
mov
pop
adc
dec
nop
pop
and
adc
stos
cmpsb
popa
loope
andb
mov
jmp
pop
push
daa
push
fsub
sbb
lods
jmp
loope
add
jb
or
dec
in
loope
in
pop
pmaxsw
iret
loope
push
fstpt
sbb
adc
adc
loope
dec
frstor
cmp
movsb
rolb
jle
bsr
popa
mov
mov
add
jge
xor
je
daa
ja
mov
stc
iret
pop
lods
inc
mov
arpl
pop
lea
loope
xchg
and
scas
pop
imul
sub
stos
mov
xchg
cli
push
decl
mul
xor
xor
jb
inc
xchg
cltd
scas
pushf
loope
pmullw
sub
test
push
fwait
outsl
jb
in
bound
inc
adc
pop
loope
push
mov
aas
stos
gs
test
sbb
test
or
or
mov
ljmp
pop
imul
ror
jno
in
mov
loope
push
adc
loope
jl
and
push
and
push
and
jge
jnp
popf
pop
push
sarb
sub
jmp
mov
in
xor
movsl
loope
dec
xor
shr
and
pop
std
pop
js
imul
jae
gs
enter
jns
jp
pop
loope
mov
sub
or
or
adc
adc
test
das
fldcw
gs
aaa
dec
mov
cli
mov
xor
mov
add
mov
and
out
aad
loope
mov
jae
sarl
sub
scas
dec
sahf
or
mov
push
cmc
inc
mov
lcall
inc
adc
pop
pop
jmp
in
outsb
loope
aad
sbb
xor
into
push
enter
jecxz
pop
fcomp
inc
push
loopne
in
jmp
loopew
leave
insl
jl
push
les
out
push
imul
rcll
dec
pusha
roll
jne
sbb
mov
pop
cld
mov
cltd
dec
sar
gs
fsubrl
inc
xor
mov
mov
sub
dec
and
imul
pop
lret
xor
adc
int
push
jne
jo
push
adc
hlt
jge
sub
xor
add
jmp
mov
sub
stos
sahf
loope
cltd
ja
mov
pop
fldcw
loope
and
add
scas
lahf
jmp
stos
cmp
nop
lret
outsl
rclb
in
push
movl
lret
dec
push
nop
xchg
sub
cmp
lods
loope
jp
fadds
push
push
add
mov
adc
clc
loope
jg
pop
xchg
or
lock
int3
into
jecxz
jp
sub
mov
iret
xchg
inc
loop
subw
xlat
int3
mov
loope
ds
mov
ljmp
icebp
cmp
sbb
enter
popa
xor
insl
mov
ret
ss
xor
jecxz
out
shll
and
loope
aad
push
jle
out
pop
and
scas
ljmp
data16
roll
jne
stos
lahf
cmp
dec
loope
xchg
mov
in
imul
mov
sbb
push
loope
adc
in
jle
das
dec
rclb
int3
repz
imul
es
leave
loope
sbb
jo
test
stos
xchg
loop
loope
insb
inc
or
sbb
sti
or
test
aad
clc
add
movsb
loope
pushf
lahf
cmpsb
lock
push
fwait
push
fdivrs
or
xchg
xchg
in
leave
fmull
sti
and
loope
pop
sbb
int3
arpl
rolb
fs
adc
cmp
in
jmp
cmp
and
rcl
and
dec
mov
loop
pop
lods
jge
and
daa
imul
xchg
loope
push
test
and
adc
lock
pop
cmpsl
jns
add
cs
out
in
mov
loope
jne
add
xchg
jo
jp
outsl
lods
loopne
cmc
fdivrl
cmpsb
and
mov
xor
in
sbb
std
push
negl
pop
or
jmp
cwtl
lods
jne
scas
into
loopne
mov
mov
dec
ret
stos
test
je
fs
inc
mov
pop
push
shl
popf
mov
cmp
popa
or
loope
data16
lds
lods
xor
add
mov
shl
xchg
neg
sub
xor
jecxz
inc
ds
cmpsb
paddd
jne
cmpsb
je
mov
cmc
fcmovnu
push
sub
iret
xchg
andb
sbb
pop
in
xchg
and
adc
cs
shl
rcrb
nop
loope
sbbl
push
dec
dec
inc
jmp
in
gs
lock
xor
pop
rcrb
addr16
into
add
jo
pop
xor
xor
bound
xor
jb
push
imul
pusha
call
mov
mov
loope
ja
adc
jle
and
cs
in
std
jp
mov
fwait
stos
and
mov
loope
sbb
xchg
adc
or
jmp
insl
mov
fdivr
mov
pop
loope
clc
push
or
mov
data16
in
sarb
cmp
insb
pshufw
mov
aas
repz
sbb
test
loope
cmp
inc
loope
fbstp
loope
jp
lock
xchg
and
mov
jge
jo
xchg
jmp
out
xchg
dec
sub
dec
loope
cmpsb
jl
in
sti
jo
leave
call
loope
lock
cmpsb
iret
cmp
ret
loope
adc
jne
add
pusha
rorl
mov
xor
or
jecxz
xchg
cmpsl
in
cmp
test
in
dec
jg
test
in
fwait
aas
or
adc
jmp
pop
push
or
jns
add
loope
jg
mov
shrb
in
xchg
xchg
std
jle
and
xchg
mov
mov
inc
repz
mov
xchg
jl
rclb
cmpb
inc
test
loope
sbb
add
xchg
fcomps
loope,pt
xchg
or
movsb
imul
cmpl
les
jmp
shlb
lock
cmp
jmp
and
scas
stc
jmp
mov
mov
ret
pop
jnp
fwait
add
lds
adc
jo
fisttpl
fadds
nop
push
cs
mov
loope
add
jmp
loope
bound
mov
movl
and
adc
push
std
stos
or
test
sbb
loope
bnd
dec
fistps
push
add
dec
shll
dec
nop
loope
dec
mov
or
fcmovu
loope
je
clc
or
nop
inc
ja
mov
jmp
mov
dec
lds
adc
mov
mov
arpl
in
cltd
loope
push
cmp
inc
sub
xchg
sub
movsb
popf
insb
in
push
loope
and
mov
call
push
mov
loope
sub
loope
pop
add
lds
pop
cltd
add
loop
sbb
cwtl
mov
insb
jmp
xchg
dec
arpl
mov
inc
in
jnp
cmp
call
test
sahf
add
add
imul
lods
jle
pop
xchg
or
sbb
gs
jmp
mov
jne
push
xchg
xchg
mov
fs
jge
push
xchg
loope
add
lods
dec
inc
out
loope
inc
lahf
out
push
jecxz
mov
mov
test
and
mov
loope
aas
mov
jns
fwait
xchg
loope
pop
cmpsl
pop
and
leave
pop
test
test
push
lods
sub
sbb
loope
mov
pusha
jb
adc
xchg
loope
inc
leave
push
loope
rolb
xchg
dec
pop
loop
fcompp
add
out
xchg
sub
jae
test
pop
imul
mov
js
mov
divb
in
and
mov
movsl
dec
repz
stc
mov
divb
leave
adc
sbb
sub
js
and
mov
jo
inc
mov
insb
pop
shlb
xchg
out
push
flds
pushf
out
lock
sti
in
in
mov
jo
sub
dec
ret
enter
dec
and
pushf
add
in
loope
xchg
in
pop
xor
in
iret
or
mov
inc
mov
mov
pop
imul
pop
movsl
imul
ss
pop
and
loope,pn
sbb
xor
cli
adc
test
and
jle
inc
mov
sub
lcall
dec
loope
cmpsl
les
dec
add
xchg
jnp
mov
data16
sbb
xor
cs
xchg
fldt
mov
or
daa
call
mov
in
mov
fbld
xorl
add
and
sbb
fldcw
sbb
call
std
and
cs
cwtl
adc
out
fdivrl
pop
xor
xchg
mov
call
shl
cld
push
jns
add
pop
into
out
mov
lcall
push
loope
mov
and
mov
jo
mov
add
mov
inc
jb
aad
fsts
add
ja
adc
dec
pushf
jo
mov
loope
outsl
mov
shrb
adc
jne
cmp
mov
xchg
shl
and
lock
out
loope
into
mov
rclb
dec
fcoms
fs
push
loope
mov
jl
subb
ret
xor
lahf
jmp
and
push
mov
inc
fisubrl
imulb
ret
push
loope
cs
lcall
loope
and
movsb
mov
mov
loop
lods
mov
loopne
push
leave
push
rorl
jo
xchg
fbstp
lock
and
das
rorb
imul
xor
mov
push
cmp
lret
cli
dec
jp
repnz
push
loope
repz
add
sub
inc
enter
dec
loope
in
ss
out
jae
mov
out
loope
testb
sub
loope
les
lret
incb
xchg
nop
stos
loope
fcompl
mov
mov
lock
cwtl
push
fistpl
add
push
sahf
repnz
sbb
push
mov
loopne
je
out
sti
enter
cld
sub
pop
into
dec
scas
loope
dec
mov
mov
movsl
jp
mov
int3
jnp
insl
ss
dec
loope
or
adc
jbe
sub
xchg
push
or
loope
mov
jae
out
dec
ja
loop
xor
xchg
addr16
loope
push
xor
sub
mov
adc
fmuls
jnp
adc
mov
xor
jmp
popf
add
shll
mov
pop
es
fldcw
pop
lret
sbbb
xor
leave
xchg
cli
stos
int
push
xor
xor
mov
scas
jno
jo
inc
add
sbbw
fldenv
pop
dec
mov
bound
mov
cmp
jo
mov
push
lock
adc
int3
nop
fidivs
dec
lods
jge
pop
and
rcl
lcall
jno
inc
jne
lret
jecxz
mov
shl
ds
cli
mov
pop
lds
mov
loop
mov
loope
je
sbb
loope
lods
xchg
push
jno
arpl
mov
push
add
insb
xor
sbb
pop
mov
arpl
loope
xchg
pop
js
mov
xchg
jp
cmp
in
loope
dec
mov
or
leave
sub
js
ds
push
mov
pop
lock
xor
pop
and
jmp
outsb
pop
sbb
inc
dec
inc
insl
fistpl
fucom
jo
cld
shlb
in
aam
inc
rolb
mov
mov
in
js
or
loope
mov
and
jb
jmp
push
mov
cmc
test
cmp
les
push
push
jno
add
push
hlt
cmp
call
loope
push
push
sub
xor
add
dec
mov
out
inc
jnp
icebp
push
mov
outsb
fiaddl
add
loope
jno
jle
std
or
xchg
nop
inc
out
clc
pusha
mov
mov
xchg
cltd
popf
dec
loope
aas
mov
out
popa
add
jle
and
loope
sub
inc
loope
lock
addr16
cmpsb
or
pop
clc
and
pop
inc
mov
mov
jmp
jo
xchg
lock
ret
in
pop
loope
push
sub
push
lret
xorl
sbb
adc
mov
test
jmp
sub
jo
icebp
fst
xchg
lret
mov
add
test
mov
sbb
out
js
cmc
cwtl
loope
xorb
punpckldq
mov
test
cmp
jg
add
clc
loope
mov
mov
scas
cmp
test
lods
inc
xchg
rorl
stos
mov
loope
frstor
loope
aad
jmp
loope
leave
push
dec
jmp
lock
mov
xchg
ffreep
jo,pn
jnp
jb
subb
adc
loope
adcl
pop
mov
movsl
rcl
pop
mov
leave
scas
out
push
add
iret
cli
insl
mov
sti
mov
and
push
mov
jmp
or
imul
ljmp
lods
fs
mov
push
push
loope
test
mov
or
in
lods
sarl
roll
xchg
push
dec
cmpb
cmpsb
and
jmp
call
inc
mov
push
jecxz
mov
sub
adc
filds
xor
jo
mov
mov
jmp
pushf
push
daa
and
mul
xchg
push
dec
sub
fldl
cmpsl
clc
in
push
pop
mov
in
adc
aas
or
imul
mov
add
jo
push
adc
and
inc
adc
push
jecxz
pop
rorb
jmp
int
loope
popa
or
jg
lret
sahf
clc
mov
popf
data16
bound
dec
std
mov
sub
mov
pop
jbe
jb
xchg
je
loope
je
lcall
ret
dec
lea
loope
inc
jmp
inc
loope
xor
imul
cmpsl
aaa
je
fildl
or
rol
ja
jg
clc
and
loope
dec
ret
adc
jne
dec
loope
bound
rcll
fsubp
jae
xchg
fstpt
jge
loope
sti
or
loope
arpl
cmpsb
pop
mov
fsub
stc
mov
add
jmp
sbb
clc
out
cmc
addr16
push
add
mov
in
inc
xchg
jecxz
mov
imul
mov
mov
imul
sbb
sbbb
icebp
sbb
dec
push
das
aad
add
dec
adc
adc
cmpsb
loope
popl
jnp
push
lock
mov
add
pushf
in
or
pop
mov
jb
cmp
loope
dec
pop
cmpsl
int
or
in
lcall
fildll
push
ss
in
sarb
fwait
imul
mov
mov
sub
mov
loope
in
fildl
fdivl
int
mov
loope
into
pusha
cmp
jb
fnstenv
mov
dec
and
xor
popa
add
jecxz
loope
and
adc
mov
movsl
loopne
add
iret
loope
lea
push
std
ja,pn
mov
in
fs
call
neg
in
add
ficoms
push
aam
push
leave
insb
loope
enter
lret
dec
mov
test
mov
push
and
loope
xchg
cmpsl
cltd
xchg
push
inc
shlb
aad
ljmp
sub
adc
adc
loope
loop
dec
xlat
cltd
lods
jo
mov
repz
out
push
fwait
daa
jmp
pop
sti
push
or
dec
push
in
lcall
lods
sub
data16
movsl
loope
rcrl
pusha
faddl
mov
dec
in
aas
fiaddl
xchg
shrb
iret
pop
call
out
cltd
mov
jge
fs
insb
sbb
sbb
adc
adc
inc
cmpsl
xchg
aad
and
inc
xchg
lock
loop
mov
mov
xchg
mov
out
dec
pop
loope
insl
rcrl
in
cmc
out
incl
addr16
dec
bswap
bound
lock
int
lea
inc
or
push
movsb
sub
cmovne
outsb
loope
imul
xchg
js
mov
push
bound
es
or
loopne
movsb
pop
loope
icebp
repnz
xor
call
push
outsb
xchg
lcall
gs
xchg
pop
inc
subb
loope
lea
lock
insl
out
mov
add
je
insb
loopne
icebp
int
movsb
pop
jmp
add
and
adc
incb
push
fsubrl
inc
push
cmp
fs
cmp
loope
or
arpl
adc
mov
stc
or
push
inc
push
ds
jnp
mov
xor
push
sbb
pusha
call
pop
mov
in
arpl
inc
push
loope
test
xor
fimuls
insl
dec
call
dec
push
daa
dec
jno
cmp
adc
xor
aas
int
fs
inc
sbb
sbb
out
mov
enter
call
sbb
pushf
cmc
jae
dec
loope
aad
mov
std
mov
pop
xchg
out
leave
push
xor
mov
sbb
and
cld
jmp
jmp
add
push
or
dec
loope
or
fs
mov
out
outsl
dec
outsl
dec
movsl
add
mov
into
call
repnz
cltd
mov
aas
cmp
rol
mov
fistpl
mov
loope
mov
inc
adc
pop
loope
pop
mov
lret
adc
fxch
push
inc
cmp
shl
or
lock
arpl
lock
sahf
jnp
in
cmp
cmpsl
mov
test
add
repnz
ror
mov
pop
loope
inc
adc
add
cmpl
or
stos
loope
leave
sbb
pop
pushf
shlb
nop
fdivs
je
mov
cmc
jg
xlat
addr16
loope
sbb
mov
jo
faddp
orl
rcr
pop
jnp
inc
cli
gs
xor
lret
jo
in
cmp
dec
loopne
jecxz
sub
loope
enter
shll
dec
jmp
sbb
inc
leave
cwtl
sbb
loope
adc
out
push
rclb
jmp
sbb
loope
xchg
pop
add
cmp
xor
mov
or
lds
cli
push
xor
es
cltd
pop
rclb
adc
mov
adc
in
cltd
jbe
xchg
test
adc
and
mov
loope
push
dec
movb
mov
adc
push
jns
loope
inc
addb
and
imul
out
adc
insl
pop
stc
addr16
xor
pop
std
push
mov
ja
daa
xchg
or
push
rcll
pop
stc
add
cmpsl
mov
cltd
cmp
out
addr16
rorb
adc
and
stos
sahf
je
pop
jp
loope
popa
cmp
or
and
ficoms
daa
sbb
nop
lock
or
fwait
adc
pop
cltd
push
loope
aad
mov
andl
imul
xor
jb
test
dec
daa
jle
pop
insl
lcall
inc
in
mov
xchg
jmp
outsb
in
loope
pop
adc
outsl
cmp
add
cld
push
sbb
ret
fimuls
jp,pt
mov
or
cmpl
out
jno
in
mov
scas
loope
adcl
push
test
mov
jnp
hlt
adc
jmp
inc
inc
fcmove
and
filds
loope
mov
cli
mov
inc
xchg
clc
xchg
out
mov
call
mov
loope
lret
mov
pusha
fistl
and
aam
jl
add
cmp
jmp
cmp
testl
test
cmp
jle
loope
ss
fnop
pop
test
popa
das
inc
notb
je
cmp
into
jp
sbb
dec
jne
inc
loope
je
nop
outsl
mov
lcall
daa
mov
adc
fisttps
call
xor
sub
sub
in
push
scas
xchg
cmp
mov
push
add
mov
ljmp
into
mov
and
sti
adc
push
ss
mov
and
loope
or
and
and
xchg
in
jl
js
clc
rcrb
cmpsb
sahf
out
or
push
out
loope
dec
out
lahf
or
sti
loope
mov
rclb
aaa
mov
mov
push
sarb
sahf
jmp
mov
jne
out
das
inc
sub
pop
loope
sub
test
fisttpl
mov
clc
mov
and
movsb
mov
shr
mov
dec
daa
sbb
mov
aad
loope
mov
mov
sbb
frstor
mov
sub
pop
loope
add
adc
adc
jmp
mov
dec
cld
and
call
or
inc
adc
push
test
pop
mov
lar
mov
imul
ret
in
outsl
cli
inc
pop
decl
push
in
cmp
pop
nop
loope
movl
ret
in
aaa
xchg
stos
push
cmp
loope
sub
mov
fisttpll
xor
loope
and
inc
mov
add
hlt
jmp
cli
mov
or
loope
enter
pop
mov
mov
jnp
ds
sub
loop
push
filds
xor
push
mov
and
enter
mov
shr
dec
out
pop
in
cmp
sub
movsb
enter
cmp
add
cmc
mov
dec
inc
psraw
movsl
push
loope
insl
sub
dec
lock
ror
dec
mov
jg
roll
dec
mov
shlb
lods
gs
loope
in
jnp
imul
xor
lods
mov
adc
push
ret
xchg
js
test
xor
mov
stc
push
jl
popa
inc
add
push
roll
jle
dec
jbe
xchg
xchg
add
decl
out
in
mov
sbb
mov
cmpsl
icebp
dec
jmp
out
sub
cld
jne
loope
cmp
sbb
lcall
cmp
sbb
out
mov
inc
cmc
loope
jecxz
loop
jnp
dec
push
popf
notb
jmp
in
loope
mov
mov
call
jmp
fwait
mov
loope
jno
mov
insl
movsl
mov
add
loope
movsb
shll
jl
loope
jne
test
loope
dec
lahf
dec
jbe
cwtl
adc
sbb
dec
call
loope
dec
jmp
push
jecxz
loop
loope
imul
jbe
js
mov
jmp
loope,pt
lcall
jo
mov
inc
push
jecxz
push
push
fwait
loope
ljmp
loope
dec
adc
pop
enter
jbe
test
sub
mov
loope
fwait
outsb
mov
dec
dec
push
loope
dec
ret
stos
pop
outsl
in
loope
das
inc
arpl
bound
jmp
inc
mov
loope
push
xor
push
xchg
xchg
jmp
data16
sub
jae
daa
movsb
mov
cltd
lret
sarl
loop
outsb
cmpsl
add
pop
adc
out
adc
and
mov
jecxz
loope
push
lea
scas
jl
loope
push
sub
jno
bound
lock
push
loope
xchg
jns
jmp
loope
mov
test
roll
popf
mov
push
outsb
mov
pop
rcrb
clc
test
sbb
jecxz
pop
xor
loope
ss
mov
loope
stos
iret
xchg
push
push
mov
lret
pop
imul
push
push
leave
stc
repnz
sbb
pushf
inc
xlat
dec
rorb
pop
dec
sub
push
test
add
add
loope
movsb
out
in
mov
and
cmp
testl
jnp
loope
mov
mov
ljmp
jmp
jnp
ja
xchg
and
jbe
data16
jb
mov
pop
and
lret
inc
sbb
scas
dec
stc
rclb
jmp
ja
loope
xchg
add
cmp
rcl
test
jo
adc
jbe
mov
loopne
xor
pop
cmp
push
cwtl
add
pusha
cmpb
ljmp
ja
jge
in
ljmp
mov
sbb
jae
dec
inc
and
jbe
xlat
push
mov
cmc
insb
lahf
loope
pop
icebp
fcoms
fistpll
hlt
push
loope
scas
jbe
add
or
mov
inc
daa
mov
jmp
mov
xchg
sbb
int
orb
xchg
jns
call
mov
xor
mulb
imul
loope
sub
pushf
ret
mov
fs
cmp
les
fisubl
loope
nop
inc
sbb
xchg
xor
mov
ret
pushf
pop
xor
cmp
xor
loope
jmp
inc
outsb
jo
jo
adc
mov
outsl
ret
jmp
leave
jl
loope
popa
nop
add
out
loope
lods
shl
negl
mov
jp
cld
inc
insb
cmp
loope
test
andl
xor
and
mov
movsl
sbb
loope
ljmp
jo
movsb
inc
shll
and
push
popf
loope
mov
sbb
loope
js
mov
loope
jns
lret
xor
jmp
clc
popl
stos
fstpt
loope
cs
in
jne
loope
mov
sbb
adc
and
shl
cmp
adc
inc
js
loope
lock
cmp
loope
mov
mov
cmp
lods
mov
dec
popf
loope
bound
or
enter
jecxz
loope
fs
push
out
ds
or
test
cwtl
jno
push
pop
and
adc
and
lds
fiaddl
mov
in
incl
jo
xor
xchg
jecxz
jl
sbb
or
fistl
jo
dec
jb
jle
dec
jno
hlt
xor
xchg
push
loope
pop
adc
or
cmp
xchg
pop
mov
lods
mov
addl
fldl
jno
loope
mov
in
lret
daa
movsl
mov
aaa
sbb
sbb
loope
adc
add
push
sarl
jge
dec
and
out
fdivs
xchg
imul
add
popa
mov
scas
loope
arpl
dec
add
push
add
popf
pop
in
mov
push
mov
and
test
std
ffree
loope
mov
mov
mov
aad
pusha
sbb
out
adc
push
loope
dec
add
mov
xor
inc
ljmp
fcomps
mov
dec
cmp
arpl
insl
push
mov
push
cli
push
roll
loope
mov
imul
test
mov
pop
loope
pop
xor
call
pop
in
ret
sbb
sbb
stc
jge
loope
cwtl
mov
mov
loop
jl
or
loope
jb
je
mov
sbb
cmc
lods
push
sti
and
test
fmuls
ret
dec
pop
arpl
aaa
sahf
fsubl
xchg
icebp
jno
cmpsl
shlb
sarb
les
mov
je
pusha
loope
adc
sbb
mov
loope
add
push
and
mov
add
cmp
or
addr16
and
idivl
in
sbb
pop
mov
loope
fwait
jg
xorb
ror
mov
sub
fabs
fcmovbe
lock
dec
imul
xchg
xchg
pop
in
mov
loope
mov
mov
add
mov
xor
xor
dec
loope
in
lock
add
mov
or
jg
stos
jl
sub
notl
jg
imulb
test
or
loope
dec
aam
inc
inc
arpl
xchg
hlt
aaa
mov
cmp
leave
or
orl
aaa
popa
ds
in
mov
enter
or
ret
push
addr16
outsl
mov
pop
push
adc
jo
jmp
mov
mov
notb
pushf
out
dec
adc
inc
gs
int
push
add
rorl
outsl
pop
inc
test
add
jmp
sub
loope
dec
loop
fcomps
add
or
aas
jmp
add
out
aas
jl
loope
popf
outsl
jnp
jmp
mov
inc
pop
mov
or
push
cmp
xchg
adc
add
movsb
jnp
loopne
in
jbe
mov
loope
outsb
into
cmpsl
ret
stos
mov
inc
push
mov
les
rolb
push
negb
in
xor
add
push
pusha
xchg
push
and
loop
lds
cmp
ficoms
loope
mov
mov
loope
mov
rorb
jecxz
test
push
loope
je
movsl
mov
out
dec
leave
inc
pushf
fsubp
rclb
xorb
xchg
mov
out
movsl
sub
int3
inc
lods
in
jl
ret
xchg
test
or
push
inc
jg
in
sahf
mov
outsb
cmpsl
scas
push
and
clc
jns
je
roll
add
test
mov
mov
into
xor
jmp
pop
sub
dec
mov
js
aas
int3
pusha
ss
cltd
add
inc
rolb
loope
mov
cmp
fmulp
stc
leave
and
mov
jp
mov
aad
insl
sbb
cmp
notl
inc
mov
jne
out
push
xchg
loope
cmc
outsb
xor
mov
jns
inc
and
fwait
test
loope
xchg
mov
jmp
pop
insl
cmc
mov
repz
sbb
nop
loope
mov
or
mov
mov
scas
adc
shrb
out
xchg
and
inc
hlt
rcrb
out
mov
into
pop
cld
clc
test
sbb
add
dec
lret
adcl
repz
xchg
out
inc
fcomip
nop
rcll
test
lret
add
into
ret
pop
sbb
shlb
outsl
gs
cmp
ss
loopw
sub
adcb
jecxz
mov
call
es
jbe
push
sbb
loope
jno
js
jle
das
loope
adc
cs
cmp
loope
mov
fisttps
pop
lods
leave
loope
addb
jbe
outsl
loope
iret
mov
ljmp
cltd
mov
inc
inc
loope
les
out
jnp
and
cmc
mov
loop
fs
and
jl
sub
cmp
loope
sbb
or
sbb
pop
loope
xchg
or
pusha
insl
jmp
lock
scas
loopne
dec
lahf
xchg
pop
loope
lret
push
jbe
fadd
sbb
xlat
jge
enter
hlt
int
add
dec
in
mov
xchg
inc
enter
jl
jmp
stos
bound
mov
shl
aas
pop
push
loope
pop
fwait
or
push
bound
add
ja
or
insl
and
mov
ret
sub
pop
loopne
fwait
das
jmp
loope
cli
imul
outsb
cmpb
inc
iret
sub
cmpsb
pop
mov
inc
dec
fs
jg
xchg
dec
cmc
cmp
inc
stos
dec
mov
adc
xchg
aaa
fdivs
mov
loope
xchg
dec
fildl
out
jecxz
roll
andl
jne
mov
loope
je
push
sub
ja
rcl
cld
jp
in
fwait
call
js
mov
cmp
nop
ja
push
and
cli
mov
addl
fwait
pop
loope
les
fisubrl
dec
add
pop
sbb
push
imul
loope
dec
fistpl
add
iret
arpl
in
mov
out
adc
adc
lods
jb
loope
inc
lcall
fcmovnbe
das
loope
sarl
clc
subl
xchg
pop
push
jmp
xor
fucom
out
cs
sbb
loope
dec
outsb
push
mov
loope
mov
cmc
and
imul
into
mov
or
mov
fcomps
mov
out
and
mov
loope
jns
or
ljmp
mov
rolb
loope
lea
lock
adc
arpl
cmp
test
in
aam
loope
pop
jge
insl
mov
cmp
ret
loope
inc
pusha
lcall
out
aaa
jae
mov
shlb
jecxz
in
loop
jnp
loope
pop
xchg
fildll
mov
out
push
mov
push
loope
insb
into
pop
mull
popf
stos
cs
and
lock
cmpsl
rcrl
shlb
xchg
loope
popl
int3
scas
push
shl
repnz
push
lods
or
jns
loope
mov
xor
push
jb
mov
push
push
int
inc
rcrl
lock
std
rolb
mov
ret
pushf
scas
loope
fstpl
push
ss
jmp
movsl
and
out
int3
lds
add
fsubl
and
lcall
out
adc
shll
sub
ljmp
in
movsl
ret
mov
xchg
out
xchg
jo
cld
dec
fbstp
push
fs
cmp
scas
jbe
pusha
jno
lods
loope
mov
sbb
xchg
scas
xchg
pop
xchg
xchg
cmp
mov
clc
stos
mov
loope
dec
jl
and
inc
in
leave
bound
pop
stc
lock
dec
dec
pop
in
out
push
rep
loope
push
test
psrad
jbe
xchg
push
arpl
adc
cli
loope
out
shll
jo
jnp
arpl
mov
mov
pop
outsb
pop
and
loop
loope
test
pop
sub
lods
pop
ljmp
xor
mov
loope
fiaddl
push
mov
xor
mov
pop
and
popf
loope
push
and
and
pop
pop
xchg
fs
ljmp
sarb
loope
xchg
lds
pop
test
in
sub
in
in
rorb
das
add
ds
lea
insl
or
loope
adc
aaa
popa
imul
mov
xchg
adc
out
mov
push
fidivs
and
cmp
push
xchg
data16
mov
mov
setbe
xor
jne
pop
xor
dec
sahf
loope
gs
jmp
pop
dec
fldenv
insl
stos
or
xor
es
sub
jmp
mov
mov
in
lret
je
loope
test
xchg
loope
lods
or
outsb
test
mov
loope
cmp
sbb
int3
jmp
ljmp
test
dec
and
test
xchg
ds
cmp
in
and
out
cli
mov
popf
fnstsw
aaa
loope
inc
mov
sub
sti
mov
inc
cmp
add
inc
mov
insl
lods
sbb
data16
inc
stos
push
cmpsb
cli
es
xor
loope
lods
sbb
mov
dec
loope
mov
insb
sub
aaa
pop
leave
mov
and
jecxz
lods
mov
loope
xchg
push
push
shl
and
inc
loopne
sbb
loope
xchg
jns
or
les
ljmp
xor
stc
mov
mov
loope
adc
dec
ljmp
and
and
loope
loopne
lds
jmp
jmp
mov
popl
iret
mov
loope
je
das
cwtl
cmpsl
out
pop
loope
out
mov
int
jle
loope
das
push
adc
mov
arpl
andl
mov
int3
dec
shl
xor
add
loope
pop
xchg
test
xchg
ljmp
loope
sub
insb
loope
inc
sub
loope
adc
pop
sbb
loope
cmpsb
adc
loope
inc
mov
add
or
and
in
jge
das
cmp
lcall
divl
loope
dec
clc
insb
mov
je
mov
adc
loope
in
sbb
loope
lret
pop
dec
out
add
loope
fs
ja
mov
cmp
je
test
loopne
or
shlb
insl
ljmp
mov
mov
jl
mov
pop
dec
leave
mov
jo
ret
mov
in
aas
mov
stos
movb
mov
shlb
push
insb
add
jge
loope
jno
sbb
cwtl
or
add
fidivl
lds
ret
lea
call
jae
out
jecxz
addr16
rolb
jle
pop
dec
loope
mov
outsl
sahf
sub
ja
test
jno
loope
cmp
or
and
push
pop
lock
addl
push
in
loope
jmp
int
aad
adc
jl
lcall
shl
or
les
lret
ret
pushf
push
jno
push
push
and
cmp
jmp
loope
inc
les
loope
adc
aas
xchg
mov
test
push
cli
into
loope
popa
loopne
mov
fstl
lds
jmp
loope
jmp
ffreep
loope
test
mov
mov
pushf
je
lea
lock
cmp
pop
sbb
mov
push
xchg
cs
test
cmpsl
xor
in
mulb
jo
lcall
mov
mov
mov
push
or
nop
mov
out
popa
jno
pop
lods
mov
shrl
loope
js
pop
pop
jp
ficoms
jl
mov
mov
loope
push
push
pop
data16
add
scas
xor
lahf
roll
loop
inc
lret
jbe
in
xor
loope
nop
or
loope
push
lock
mov
loope
or
shlb
mov
daa
sub
pop
repz
in
outsb
test
fsub
push
and
leave
pop
cmc
cltd
jg
fwait
gs
bound
jo
dec
adc
loopne
xor
pminsw
daa
test
xchg
push
out
rcrb
or
imull
jmp
mov
imul
in
jle
and
popa
loope
cmp
stos
jo
call
jecxz
nop
push
cli
xor
adc
je
loop
push
loope
add
mov
jo
rorb
jecxz
xchg
push
loope
mov
cwtl
push
jg
mov
test
sub
jmp
stc
mov
inc
shrl
test
in
xchg
mov
jp
loopew
mov
mov
sbb
insl
cltd
cmpsb
loop
adc
dec
gs
decl
xor
jae
stos
loope
or
xorb
std
loope
and
pop
arpl
jl
loope
push
dec
cmp
pop
js
add
cld
cmc
adc
insb
lcall
push
sbb
loopne
cltd
sub
insb
mov
imul
mov
xchg
pop
lret
and
dec
sbb
loope
push
pop
inc
out
inc
sub
lds
loope
das
pop
imul
add
fucomp
mov
sbb
stos
cli
mov
mull
and
cmp
mov
dec
push
xchg
inc
cmp
adc
jbe
insb
enter
shrl
sub
fwait
popf
outsb
fabs
push
add
xor
lea
loope
or
js
xchg
jnp
insl
orl
stos
or
add
outsb
fmul
or
xchg
push
xor
adc
and
or
call
pop
cmp
pop
jp
in
stos
sub
loope
imul
imul
call
rcr
pushl
sub
test
sarb
stc
add
pop
jmp
push
sbb
leave
dec
loope
dec
sbb
es
add
jp
inc
fisubrs
les
orb
and
hlt
loope
mov
jbe
add
dec
inc
movsl
fcmove
ja
inc
jmp
inc
loope
fdiv
and
dec
cmc
sbb
outsb
loop
mov
nop
inc
iret
adc
lods
push
jnp
cmp
pop
adc
scas
mov
loope
stos
lock
js
loope
inc
and
fcompl
insl
add
push
xor
out
loopne
int
cmpsb
loope
sub
xrelease
daa
andl
loope
insb
shll
gs
sahf
sbb
xor
cmpsb
mov
xchg
loope
ss
jle
inc
mov
loope
insl
divb
pop
cwtl
add
mov
sbb
jo
cld
jg
push
xchg
lods
mov
and
arpl
xchg
sar
sarb
jg
popa
in
arpl
loope
out
inc
sbb
loope
push
fsubrl
sub
push
loope
leave
ficomps
sahf
je
int
jmp
dec
nop
ret
adc
mov
ret
cmp
outsb
xlat
jo
jno
lahf
es
call
add
push
mov
jecxz
or
push
out
sub
jg
xor
dec
gs
mov
xor
daa
cmp
scas
loopew
cmp
mov
mov
or
or
pop
jo
mov
fwait
stos
mov
movsl
hlt
outsl
sbb
lahf
xchg
data16
lock
push
xor
jg
xchg
int
scas
test
mov
dec
mov
mov
mov
pop
mov
hlt
add
in
jp
ss
jmp
loope
shll
loope
mov
fnstsw
data16
loope
xor
xchg
push
push
mov
leave
or
lcall
dec
outsb
jmp
mov
fadd
repnz
mov
dec
bound
fs
jle
or
jo
push
lcall
xchg
jo
lret
gs
jno
fdivrl
loope
or
fidivrs
jae
cwtl
pushf
repnz
movsb
movsl
loope
adc
mov
iret
cmp
nop
loope
push
pop
test
loope,pt
daa
cmc
lcall
cs
mov
and
out
imul
xorl
pop
mov
out
xor
adc
jecxz
addr16
insl
loope
inc
sbb
aam
xchg
jp
or
jb
shl
push
mov
mov
in
cltd
or
aaa
out
jmp
stos
das
out
lods
jo
insl
or
ret
xchg
loope,pn
pop
int3
mov
push
sti
mov
ds
popf
mov
jmp
cmp
lock
or
dec
out
jno
jecxz
loope
js
fs
in
or
add
dec
dec
fcom
pop
loope
push
sub
pop
sbb
add
js
mov
fidivl
lods
jns
inc
jmp
push
and
mov
adc
adc
scas
out
push
sub
sbb
loope
gs
xor
and
pop
fists
mov
pop
adc
dec
jp
jbe
pop
jo
push
and
lods
filds
or
push
pop
out
lock
out
repz
loope
sbb
mov
add
fsubrs
push
add
lcall
fldenv
pop
mov
test
loope
xor
xor
lds
adc
cmp
push
imul
pop
adc
sahf
and
lock
out
and
push
cmp
add
add
fisubs
gs
jg
sbb
in
sub
cmp
mov
lret
and
mov
jle
pop
mov
xor
pop
cmp
lret
ljmp
loope
jl
mov
adc
and
add
xchg
jmp
popa
dec
test
data16
sbb
cmp
inc
lods
xor
cmp
out
jne
cwtl
push
pop
xchg
loope,pt
mov
dec
pop
loop
loope
mov
inc
iret
loope
fstps
dec
mov
aam
hlt
out
pop
jecxz
xor
mov
data16
pop
loope
xchg
lods
pop
mov
loope
and
and
shlb
enter
cmp
imul
or
adc
jns
mov
pop
lahf
mov
mov
arpl
sbb
lods
call
push
scas
jns
out
ja
dec
loope
xchg
enter
daa
bound
into
loope
xacquire
in
loope
push
aad
loop
das
jns
enter
jo
push
add
add
pop
cmp
sarb
hlt
aas
loop
pop
loope
xchg
jbe
outsb
shll
push
mov
loope
pop
loopne
int
xor
cli
xchg
pop
fmull
je
loope
mov
mov
loope
sub
add
cmpsl
pop
sbb
mov
incb
adc
shrb
push
lea
daa
cmp
loope
xchg
inc
stos
fisttpll
test
in
mov
xor
pusha
inc
loope
jl
pop
cltd
push
es
loope
xchg
pop
sub
dec
push
xchg
cmp
jbe
or
insb
dec
dec
loope
cmpsb
cmp
dec
mov
ret
movsl
ds
pusha
mov
test
loope
stc
push
nop
add
loope
sbb
ja
aaa
jbe
jo
dec
push
loope
pop
push
fildl
loope
jecxz
test
loope
adc
mov
add
loopne
loope
jnp
dec
or
stc
push
xchg
add
mov
cmc
dec
cmp
out
andb
mov
imul
in
loop
loope
sub
out
pop
loope
outsb
in
push
pop
jae
fwait
dec
mov
and
loope
push
imul
jo
insl
pop
mov
mov
add
testl
int3
push
adc
in
xchg
pop
outsl
mov
shr
adc
insl
loope
pop
jns
jne
jae
rcrb
cmp
das
ja
push
loope
sbb
rolb
mov
mov
movsl
xor
cmp
jne
popa
lahf
cli
lods
push
loope
sub
call
arpl
movsb
mov
and
sbb
rcrl
fcomps
in
rorb
and
mov
inc
cmp
sbb
popl
jns
inc
push
sub
lock
adc
add
xor
xor
mov
jb
out
or
jo
addl
jmp
loope
rcl
in
idivb
lock
shll
addr16
out
and
cwtl
mov
add
mov
loope
sbb
in
mov
sahf
sub
imul
and
jmp
mov
jle
mov
sub
pop
inc
mov
lea
mov
loope
sub
pop
std
loope
mov
dec
call
jg
or
push
out
pop
xchg
stc
movsl
loope
inc
jne
xor
mov
loope
pop
outsl
cli
xor
jg
loope
repz
xchg
xchg
mov
jecxz
iret
jo
xor
outsl
aam
push
addr16
loop
loop
loope
iret
lock
test
sbb
jb
and
bound
cwtl
loope
shl
pop
mov
xchg
pop
loope
subb
and
xchg
mov
mov
popf
sbb
xchg
ja
loope
or
jbe
or
and
jecxz
and
push
lods
xchg
xor
outsb
movsb
gs
aam
fnstcw
movl
jb
loope
fcoml
and
jl
scas
loopne
sbb
adc
in
mov
jne
sub
jo
out
cmc
pop
pop
mov
xor
rcrb
aas
bound
sub
arpl
inc
push
loope
jle
and
ficoml
inc
int3
mov
dec
stos
es
das
cmp
dec
insl
or
fucomip
jp
jne
push
xchg
aad
jnp
push
mov
mov
loope
mov
fwait
inc
loope
daa
and
sarb
jle
jecxz
cmp
movsl
leave
lock
cltd
jo
sarl
jmp
ret
inc
push
loopew
ljmp
mov
out
mov
adc
xor
pop
test
out
jno
loope
adc
pop
xlat
stos
notl
sahf
iret
das
jge
and
lock
sahf
ret
fadds
insb
loope
aas
std
dec
lea
hlt
icebp
fldt
out
aam
mov
mov
aam
jns
push
or
mov
fs
mov
and
mov
dec
add
jle
mov
jecxz
sub
push
repz
loope
inc
inc
xchg
mov
insl
loope
pop
fcompl
add
das
shl
por
jmp
inc
dec
pop
icebp
fcoms
jl
pop
aas
add
jnp
mov
or
es
orb
dec
loope
push
xlat
push
cs
sub
incb
popa
in
dec
add
inc
xor
and
loope
loop
divb
pop
pusha
mov
jo
push
test
clc
or
push
mov
pop
cltd
loope
push
and
bound
sti
lods
adc
imul
out
clc
push
push
stc
loope
jne
add
loope
pop
dec
or
cmc
clc
leave
loope
jns
lcall
push
dec
pop
loopne
jmp
jge
loope
pushf
pop
jp
mov
mov
cmp
adc
pushl
in
mov
and
xchg
pop
jmp
rcrb
insl
imul
nop
jnp
ret
adc
aas
testb
aad
mov
cld
jmp
jnp
mov
shrb
loope
xchg
xchg
leave
stc
cmpsb
into
sub
push
cltd
dec
das
movb
sti
and
popf
push
insl
loope
shll
movsl
mov
cmp
ret
or
add
iret
clc
mov
inc
jg
and
std
testl
mov
fistl
loope
mov
fnsave
and
adcb
cs
xchg
ror
push
push
push
fiaddl
mov
dec
xor
in
loope
dec
add
and
icebp
sub
or
or
stos
inc
mov
and
pushf
lahf
add
aad
push
loope
pop
aam
test
loope
sbb
fnsave
sub
push
dec
loope
cmp
ja
std
call
insl
pop
lock
add
out
cmp
push
rcr
jnp
pusha
std
clc
outsl
arpl
sbb
shrb
ss
insb
push
cmp
dec
loopne
jmp
test
js
outsl
out
sbb
stos
outsl
mov
sub
mov
sub
jmp
cmp
nop
lock
and
in
or
loope
jno
jge
mov
stos
insl
jo
loope
jg
int3
outsb
out
loope
cltd
lret
pop
jb
ret
aaa
and
shll
add
xor
jmp
inc
sahf
push
sbb
loope
jno
in
add
xor
xor
and
int3
xor
or
push
leave
jle
loope
movsl
daa
cli
das
jo
aas
loope
icebp
jl
push
pushf
in
loope
imul
loope
or
add
addr16
jmp
out
shll
or
and
mov
pop
inc
or
and
bound
repz
and
jge
inc
mov
and
cmp
shl
loope
push
frstor
inc
setne
sub
mov
xchg
fstpt
cmp
js
test
xchg
shl
add
fs
xchg
sbb
shl
fdiv
loopew
fwait
subl
loope
add
jae
mov
loope
sti
mov
and
and
sub
pop
and
mov
rolb
mov
mov
popf
adc
add
pop
out
in
jbe
call
pop
or
sti
loope
iret
jne
lock
pop
hlt
mov
jbe
and
xlat
mov
inc
add
mov
shrb
imul
cli
in
out
mov
xchg
adc
aas
pusha
in
mov
pop
loope
mov
out
adc
into
fsubrs
rcl
std
inc
gs
movsl
mov
shl
outsl
loope
loopne
jbe
dec
inc
loope
inc
xorl
popf
loope
mov
sbb
dec
in
nop
call
cltd
dec
pop
or
push
cmpsl
dec
rol
shrb
sti
pop
jecxz
loop
mov
lds
push
and
lret
ss
xchg
or
push
out
pop
jmp
sub
shr
cld
jbe
stos
sub
stc
adc
mov
aam
bswap
les
cmpsb
and
insb
in
arpl
sub
loope
fnstsw
pushf
mov
inc
lock
sbb
xor
in
mov
cld
out
pop
jns
loope
nop
sub
sarb
mov
jnp
into
mov
lret
sub
push
decb
xor
sub
arpl
aas
out
pop
sub
cmpsl
ficomps
enter
xchg
test
mov
and
outsl
push
cld
in
xor
add
and
daa
psrld
xor
test
pop
pushf
or
jecxz
pop
pop
lods
mull
cmp
push
ret
adc
adc
scas
fcoms
mov
iretw
sarb
out
cwtl
cmp
cld
repnz
loope
push
cmpsl
mov
loope
out
arpl
sahf
inc
mov
bound
mov
loope
jle
adcb
daa
loope
nop
inc
or
mov
imul
out
loopne
imul
dec
pop
ss
push
and
loop
adc
adc
rcr
je
call
divl
insb
push
popa
sbb
add
add
sub
mov
cld
sub
aas
aaa
or
loope
mov
test
movsb
mov
dec
mov
in
js
lock
or
mov
pop
xor
out
daa
sub
ljmp
adc
mov
es
xor
loope
jo
stos
out
mov
loope
and
loope
fistpl
pop
loope
push
xor
xor
in
lds
sbb
in
rcrb
jle
faddp
leave
fbstp
loope
or
push
imul
pop
mov
sahf
jge
lret
adc
sti
push
sbb
loope
add
loope
inc
push
pop
or
push
cltd
lcall
in
in
sub
sub
fcoml
cmp
arpl
fcmovb
mov
in
iret
dec
fabs
mov
push
int3
lods
loope
pop
mov
xchg
and
aam
jo
lock
sbb
loopne
push
shl
mov
shr
push
inc
loope
jmp
cmc
ja
xlat
mov
sbb
stos
and
jmp
inc
mov
sti
out
out
lock
xchg
inc
loope
or
pop
fucomip
hlt
loope
fs
scas
and
mov
dec
iret
mov
and
test
mov
sbb
mov
loop
addr16
mov
sbb
push
mov
imulb
lret
fsub
pop
push
arpl
mov
push
xor
mov
addr16
jnp
dec
cmp
loope
cmp
adc
pop
mov
loope
mov
adc
inc
leave
add
push
in
addr16
inc
sub
mov
not
push
dec
out
enter
insl
inc
and
cltd
fdiv
shrl
sbb
gs
sub
loope
and
xor
adc
negb
jecxz
testb
stc
jb
sti
mov
retw
xor
mov
push
push
fisubrs
scas
loope
jae
decl
xchg
loope
cmp
or
pop
dec
aas
loope
aam
mov
inc
and
fisttpl
clc
mov
int
pop
push
pop
mov
pusha
xor
dec
sbb
pop
aam
push
fbld
aad
pop
pop
or
fdivr
mov
in
lock
adc
je
lahf
jle
add
loope
mov
into
push
or
adc
and
in
lods
lods
jns
add
movaps
pop
adc
and
mov
loope
jae
fwait
cli
sbb
add
cld
les
shr
add
imull
lods
cmp
jmp
leave
loope
repz
adc
pop
xor
mov
push
nop
fidivl
push
xchg
xchg
loope
aas
lret
sub
jge
int3
lods
pop
cmc
es
sbb
or
cmp
cmp
and
xor
lock
cli
inc
loope
sbb
call
int3
jne
loope
movsl
movsb
xor
sbb
dec
loop
arpl
sub
xchg
loope
aaa
cmp
and
adc
xor
stos
inc
imul
mov
jo
out
push
shl
xor
loope
dec
push
stos
dec
imul
and
jne
out
adc
fdivr
mov
adcl
push
sbb
mov
loope
mov
insl
in
and
std
sub
iret
inc
sarb
cmp
in
mov
push
into
push
jbe
jno
movsl
ljmp
es
out
sbb
in
mov
sub
call
lea
jns
jecxz
cmp
mov
leave
jecxz
cltd
lock
jns
push
push
add
enter
jle
inc
cmp
outsb
lock
into
jb
popa
pop
loope
iret
mov
stos
scas
hlt
loope,pt
and
add
mov
fs
test
mov
mov
or
adc
or
push
imul
in
pop
out
pop
loope
loopne
jnp
inc
aam
loope
mov
xchg
add
xor
fisubrl
roll
or
arpl
fcoms
pop
jae
mov
mov
mov
loope
sub
rorb
add
push
shld
sarb
sbb
and
jae
aad
ljmp
sahf
lea
out
cmp
and
jecxz
push
insb
lahf
loope
add
stos
adc
jmp
loope
lods
cmp
sbb
icebp
loope
mov
into
push
or
cmpsb
jmp
jg
jmp
push
lock
inc
adc
popa
cmp
ret
loope
cmp
and
sbb
out
ror
aaa
out
loope
mov
loopne
and
mov
outsl
and
sti
out
fstpt
loop
jo
xchg
or
nop
lret
dec
std
stos
lahf
mov
or
es
in
jecxz
add
pop
sbb
std
mov
or
sub
cltd
push
loope
or
roll
mov
jmp
loope
mov
scas
xorl
das
ficoml
mov
jmp
pop
shrb
sub
and
jmp
jns
cmp
sub
push
or
sbb
sbb
sarl
loope
pop
push
lret
jmp
test
push
loope
pop
jg
cwtl
xorb
mov
mov
andl
dec
ss
sub
sarl
jle
sub
mov
cmp
add
dec
mov
push
mov
dec
mov
fistps
icebp
out
bnd
cmp
xchg
lods
inc
lret
loope
adc
mov
push
leave
add
mov
inc
jmp
jmp
aaa
cs
xor
cmc
inc
movsb
dec
inc
and
ss
ja
out
and
in
test
sti
jo
lret
cmp
gs
ljmp
scas
jmp
push
mov
imul
jnp
pop
mov
loope
xchg
fcmovnb
scas
out
jg
add
fwait
and
or
mov
std
lret
mov
loope
in
out
sbb
cmp
jo,pn
hlt
and
pop
out
mov
and
xor
jl
shl
das
ja
hlt
mov
loopne
xlat
mov
dec
or
pop
test
imul
jae
mov
in
scas
lret
xor
jl
loope
xchg
mov
push
lods
cmpsb
scas
xor
out
mov
in
fistl
pop
inc
loope
dec
repnz
out
dec
xchg
outsb
aam
movsl
dec
jmp
push
pop
mov
loope
ljmp
loope
aaa
mov
dec
loope
test
pop
shl
mov
mov
mov
mov
mov
sti
mov
adc
dec
loope
cmp
arpl
hlt
loope
fnstenv
push
sub
push
nop
and
dec
rolb
push
cmp
jmp
loope
rolb
jl
mov
call
jno
lock
dec
dec
fnstcw
shr
push
lahf
xor
loope
jns
adc
mov
movsb
shlb
imul
scas
mov
and
lods
shr
lret
popf
adc
pop
leave
and
mov
or
add
ret
movsl
xchg
je
cld
fs
clc
add
lahf
sbb
sar
sub
loope
xor
jl
in
pusha
push
subl
fstps
jmp
mov
push
sub
adc
and
inc
loopew
insb
lcall
hlt
xor
daa
inc
mov
sub
loope
mov
mov
adcl
stc
popa
dec
xor
cmp
ja
test
pop
mov
push
xchg
lock
sub
jmp
pop
loope
adcb
ja
les
mov
out
and
add
push
sub
fbld
sub
inc
jbe
add
insl
mov
and
and
lret
mov
dec
mov
cmp
adc
dec
and
inc
aas
fldz
sahf
jno
loope
push
xchg
bound
lea
sbb
loope
jmp
mov
loope
and
mov
int
mov
mov
ds
inc
jbe
sub
pop
xor
pop
std
inc
loope
cltd
add
ljmpw
mov
and
fisubl
inc
loope
sub
push
loope
sti
mov
insb
lea
push
std
or
and
push
mov
pop
jecxz
popa
out
sub
adc
loope
insl
cmp
rorb
gs
lahf
repnz
inc
xchg
or
pop
int
sbb
jmp
inc
dec
adc
loope
mov
add
cmp
loope
jg
fisttpl
pop
mov
cmp
loope
leave
stc
inc
jo
lods
inc
loope
jecxz
clc
mov
or
and
in
xchg
cmpsl
hlt
in
adcb
clc
sbb
fists
jmp
cmp
mov
add
outsl
fs
jbe
loope
adc
xor
loope
sbb
ss
dec
xor
loope
arpl
and
loope
clc
out
sbb
xchg
adc
iret
mov
inc
cmpsl
outsb
insb
sbb
and
push
inc
add
sub
fcomps
cmp
mov
data16
mov
popf
sbb
and
add
lret
scas
sahf
pop
fsubrs
jmp
sbb
loope
pop
jno
dec
xchg
xchg
sub
fscale
loope
mov
adc
add
inc
clc
insl
test
out
loope
mov
loopne
fcoml
jmp
loope
cmp
aam
mov
shrl
pushf
fsubs
outsb
rcr
add
xchg
insl
mov
fs
mov
loope
cmp
dec
inc
loope
in
lahf
ror
pop
adc
mov
fisubs
add
inc
push
sbb
push
outsb
dec
jmp
in
sti
js
enter
js
sbb
jo
inc
out
adcb
and
lcall
push
push
xlat
mov
mov
loope
inc
sti
jb
pop
lcall
push
mov
mov
les
dec
in
jle
sub
xor
mov
inc
loope
pushf
push
push
test
jecxz
ret
mov
mov
aaa
dec
pushf
loope
or
jb
loope
adc
scas
mov
xchg
lea
pop
loope
mov
loope
xlat
outsl
and
xor
jbe
adc
adc
sub
loope
jne
add
in
jns
sarb
aad
push
fcoms
mov
ffreep
shl
js
ss
mov
ret
push
fsubr
aaa
sub
inc
jmp
aas
sti
mov
ljmp
add
jle
mov
dec
cwtl
in
insb
loope
mov
mov
pop
ja
lret
xchg
orl
add
popa
out
xchg
in
xchg
mov
sarb
pop
or
mov
mov
adc
popa
idivl
jecxz
aam
mov
sti
loope
pop
dec
into
push
add
jo
mov
lret
xor
notl
inc
mov
xchg
stc
repz
cmp
icebp
loope
sub
and
test
in
mov
daa
push
adc
xchg
fcompl
ja
push
push
out
mov
mov
in
scas
cmovb
loope
imul
jl
loope
lods
lret
pusha
xor
mov
loope
dec
sub
lcall
xchg
xchg
cmp
repnz
inc
test
in
ficomps
cmp
ds
push
mov
imul
xlat
pushw
add
mov
or
popa
pop
and
arpl
lea
rcrb
cs
inc
xchg
fidivs
shrb
jecxz
adc
loope
or
jno
and
inc
xor
mov
loope
or
int3
leave
xor
jecxz
loope
dec
jecxz
xchg
pop
scas
push
loope
nop
xchg
mov
adc
cmp
inc
andb
mov
sub
inc
sub
loope
es
push
je
in
lock
imul
sbb
rorb
test
gs
mov
js
leave
std
int
adc
cwtl
pop
loope
sarl
sbb
xchg
cmp
lret
pop
adcb
bound
fadds
test
sbb
stos
xchg
call
cmp
add
in
loope
and
ficomps
enter
lds
cmp
and
popf
aas
in
inc
inc
add
mov
fildl
push
sub
mov
fs
loope
repnz
fstpl
outsl
pop
sti
xchg
push
insl
cld
push
rolb
cmpl
jnp
inc
fdivl
push
jo
call
dec
pop
or
loope
or
insb
dec
and
dec
movsb
sarb
loope
push
sbb
inc
adc
mov
inc
mov
pop
mov
cmp
push
loop
push
or
stos
xor
dec
inc
loope
push
aad
inc
lods
lcall
mov
push
xor
jle
loop
adc
jg
or
loope
test
loope
popa
mov
loopne
lea
xor
out
loop
xchg
jo
negl
pop
pop
mov
and
and
inc
jne
cli
jg
enter
movb
loopne
repnz
lretw
sub
xor
aam
fistpll
push
popf
sbb
mov
mov
push
data16
lcall
mov
in
cmp
or
into
xor
lock
loopne,pt
mov
jecxz
cwtl
enter
rorb
data16
dec
add
sub
or
adc
jmp
add
cmpsl
push
loope
sub
jnp
jns
push
push
test
mov
sbbl
int
xchg
mov
or
int3
lds
iret
shll
mov
and
sahf
es
and
loop
out
lock
sub
mov
lock
incb
lahf
cs
loope
test
or
jecxz
or
out
sub
hlt
mov
loope
movsl
mov
lods
xor
jg
mov
fucomi
push
and
clc
xor
mov
jp
imull
imul
xchg
push
repnz
in
sub
xor
aam
lret
fnstcw
xchg
addr16
mov
stos
fistpll
mov
mov
or
jne
mov
adc
movsb
loope
inc
dec
or
dec
repz
push
jne
les
jno
sbb
xlat
sub
mov
loope
testb
ret
mov
inc
xchg
jmp
mov
loope
jo
jae
mov
inc
mov
mov
ss
mov
push
xchg
jnp
fcmovnbe
cmp
adc
add
lret
loope
xor
stc
std
add
add
jmp
cmp
int
rcr
jmp
cmp
pop
mov
movsb
cmovbe
push
daa
outsb
fabs
repnz
fmuls
inc
ljmp
mov
int3
mov
cltd
mul
js
test
loop
sarb
adc
xor
in
jno,pt
stos
fs
sub
ret
fs
loope
ljmp
loope
fdivrp
leave
cmp
inc
sub
out
jno
js
xor
dec
xor
pop
loope
xchg
in
loope
mov
push
loope
fsubs
cwtl
xor
mov
in
and
jl
or
push
cmpsb
loope
cmc
push
and
push
sub
rclb
sbb
jge
dec
ficompl
adc
lock
loop
and
sti
out
loope
jae
sbb
mov
add
jecxz
lock
mov
pop
xor
leave
pusha
out
mov
test
push
xchg
iret
inc
bound
pop
and
add
pop
scas
cli
loope
pop
mov
lock
pop
movsb
sbb
push
push
ret
je
mov
dec
xchg
jmp
and
jo
add
aas
ljmp
jns
loope
lahf
push
std
ljmp
leave
add
mov
jl
rclb
cmpsl
ja
in
loope
into
fisubl
loope
outsb
mov
push
scas
ja
sbb
movsb
mov
orl
sub
mov
mulb
loope
cld
adc
out
and
and
gs
or
loope
cmp
pop
dec
inc
ljmp
xor
lods
das
lock
mov
int3
lock
sbb
cld
mov
sbb
adc
pop
sarb
add
and
cmp
iret
loope
fldenv
pop
jl
arpl
lahf
sbb
in
ret
stos
add
sub
jmp
subl
mov
pushf
xlat
in
xchg
push
jnp
jo
fsubrl
rolb
loope
fsubrp
call
xor
dec
pop
jp
sub
hlt
js
loope
sbb
leave
movsb
in
jns
loope
mov
xor
fadd
mov
je
nop
sub
cltd
jnp
mov
shll
arpl
add
sub
loope
scas
test
lret
shl
jl
dec
lea
sbb
mov
dec
in
add
jp
cwtl
add
xor
aad
and
push
mov
adc
jmp
or
fsubl
inc
push
lret
pop
insb
loope
icebp
cmp
mov
mov
add
xor
lret
stos
sub
xor
inc
xchg
sahf
scas
loope
movsb
in
shll
mov
push
xchg
out
sbb
jo
aad
push
inc
out
cmpsl
push
mov
mov
pop
icebp
imul
mov
mul
mov
out
or
into
sbb
outsl
gs
outsb
loope
in
inc
push
jno
dec
rorb
jns
adc
add
pushf
aas
int3
cli
mov
ret
and
imul
jo
xor
mov
lods
out
mov
mov
dec
lcall
fiadds
jo
cld
sub
inc
repz
push
xor
addl
xchg
cmpsb
leave
sub
xlat
sbb
ret
movsb
jmp
popa
movsl
mov
inc
sbbl
add
loope
mov
mov
nop
aas
test
cmpsb
notb
adc
xchg
in
dec
ljmp
sbb
mov
loope
xor
scas
mul
inc
pop
loope
ret
iret
jne
aas
loope
add
adc
sarb
test
jo
in
sbb
in
or
js
jo
data16
vmaxpd
adc
pop
loop
mov
add
mov
rcrb
xchg
xor
rcrl
inc
aas
sub
loope
fucom
and
jle
sbb
stos
jmp
add
sub
loope
jl
out
xor
bound
add
push
add
fistps
aad
pop
aas
imulb
and
lds
fadds
pop
daa
std
nop
in
mov
push
mov
fsts
mov
ljmp
mov
jle
inc
pop
loope
add
cmp
loope
movb
insb
ja
rolb
inc
fstp
out
fstl
test
movsb
aaa
loope
mov
inc
push
jmp
sub
mov
jo
push
pop
xchg
cld
out
xchg
vhsubps
gs
sahf
ljmp
fwait
inc
mov
pop
xchg
and
mov
ret
sbb
xchg
jmp
std
fnop
xchg
push
add
push
loope
cmpl
push
mov
pop
push
sub
leave
imul
or
orl
outsl
sbb
loope
leave
loop
icebp
push
xchg
loope
push
insl
filds
lcall
in
insb
push
push
jne
push
rcl
mov
btc
mov
ljmp
mov
iret
cmp
test
adc
in
xor
in
pusha
push
push
loope
popa
mov
sbb
xchg
jecxz
cld
and
repz
and
in
mov
xlat
pop
jecxz
inc
push
imul
stos
roll
fcmovb
pop
bound
pop
sub
pop
insb
into
jo
dec
dec
aas
call
inc
int3
out
and
je
xchg
loope
out
loopne
aam
out
xchg
popf
gs
push
rorb
jo
add
jns
xor
out
add
icebp
and
ja
mov
adc
sarl
or
lds
add
xor
leave
mov
arpl
cmp
nop
loope
icebp
ds
out
shl
push
fsts
das
sub
adc
loop
pushl
pop
stc
loope
dec
in
add
jno
push
mov
mov
add
aaa
push
enter
mov
jnp
mov
jle
arpl
pushf
mov
inc
lods
add
mov
inc
xchg
outsb
cs
inc
push
icebp
jmp
stc
mov
push
dec
mov
popf
sbb
mov
leave
sub
lret
cmc
xor
and
push
xchg
in
pop
pop
loope
or
inc
addr16
imul
jp
lock
test
loope
mov
dec
jbe
sub
test
loop
ret
push
cwtl
mov
mov
pop
gs
aaa
ds
cmpsl
loope
and
stc
push
inc
or
jg
cmp
rcr
cld
inc
cs
stos
and
add
inc
inc
or
jmp
cmpb
cmp
add
js
shlb
mov
mov
pop
ret
aas
jo
jg
push
fs
jo
out
cli
cmp
xor
enter
jmpw
lock
loope
ficoml
cmp
ss
mov
jle
or
pop
lock
mov
mov
shlw
push
xchg
mov
notb
cltd
call
gs
in
std
stos
inc
imul
into
push
push
or
js
in
addr16
and
les
out
aam
loope
cs
jae
mov
loop
divb
movsl
jb
push
decl
adc
jmp
jo
xor
push
int3
leave
insl
loope
fcomps
stos
loope
mov
and
jg
loope
rcrl
loope
mov
call
loope
mov
adc
loope
lds
repnz
inc
dec
dec
loope
mov
ss
jo
sub
in
insb
cs
mov
push
mov
loope
inc
mov
icebp
in
mov
je
in
pop
or
test
push
lcall
ror
xchg
out
lret
cmp
cmpsl
fildl
mov
fisubl
mull
loope
xor
xlat
addr16
mov
pop
in
shlb
add
and
add
leave
test
test
arpl
or
mov
lods
mulb
loope
jmp
leave
push
lods
nop
mov
ja
ficomps
inc
ljmp
xor
gs
jle
and
mov
cmp
movsl
xchg
outsb
pop
fcmove
jle
cmp
imul
loope
mov
pop
loope
mov
lret
push
mov
dec
xchg
push
cld
push
jmp
movswl
mov
fmull
in
mov
loope
or
call
loope
jg
dec
sub
orl
pop
or
add
in
xor
gs
nop
in
out
lretw
mov
test
mov
jmp
leave
das
jo
ret
repnz
lods
jb
mov
inc
dec
push
loope
cltd
addr16
mov
mov
adc
cli
push
loope
xor
out
loope
pop
cmp
jp
push
ljmp
mov
jecxz
inc
movsl
cltd
sbb
divl
mov
bound
add
jl
clc
or
fnstsw
addr16
cltd
std
clc
call
jmp
aad
xchg
loope
push
data16
mov
xor
lcall
inc
inc
scas
loope
cld
fbld
cmc
mov
sbb
imulb
incl
fucomp
stos
mov
push
xor
push
inc
mov
lcall
mov
lods
xchg
loope
mov
dec
es
add
stc
mov
or
loope
in
adc
loope
sub
or
aad
mov
nop
adc
bound
sarb
sbbl
push
jae
jp
lret
jns
out
out
outsb
loope
aas
dec
in
mov
pop
lea
in
inc
lock
or
pushf
fcom
add
add
inc
add
imul
jmp
das
loope
mov
adc
lods
cmpl
testb
stos
test
cli
jae
mov
push
in
loope
pop
push
fmuls
push
pop
mov
and
jecxz
ret
sbb
mov
mov
lods
loope
pop
ficompl
loope
aas
aad
gs
in
loopne
movsl
loope
les
pop
jmp
ljmp
aad
popa
and
cmp
clc
jnp
daa
push
jmp
sbb
stos
push
add
cli
or
in
sub
lock
in
adc
out
sbb
mov
mov
stc
pop
adc
cmp
loope
lds
pop
mov
fildll
insl
dec
fidivrs
adc
leave
dec
in
loope
jbe
aam
scas
pop
lods
mov
xchg
movsb
pop
adc
push
sarb
fs
loope
mov
pushf
jge
in
pop
and
and
fs
xor
int
dec
inc
fcmovnb
rclb
or
addr16
jo
jbe
ljmp
loope
or
or
mov
imul
jo
sbbl
inc
push
cmp
test
call
mov
or
fwait
rorb
push
jnp
pushf
pop
adc
mov
or
xchg
loop
cmp
loope
rcll
jno
fwait
dec
pop
pop
cmp
imul
xchg
inc
dec
sbb
fiaddl
enter
add
and
cmc
sub
out
aad
loope
mov
movsl
mov
repnz
jp
int3
pop
add
fimull
ljmp
insb
adc
dec
cs
jmp
out
fldt
push
push
push
add
mov
add
mov
sbb
dec
mov
inc
loope
sbb
fdivl
mov
cwtl
rol
int
in
mov
pop
inc
in
push
fidivrs
test
jmp
mov
dec
pop
fstps
and
mov
jmp
loope
dec
push
and
call
out
inc
test
dec
and
xchg
mov
inc
pop
loope
dec
sbb
mov
inc
popa
mov
pop
imulb
loope
lret
sbb
push
push
cs
aaa
cmp
in
xor
jge
repnz
es
outsl
or
xchg
dec
mov
push
and
push
outsb
dec
rcll
addr16
arpl
xchg
sbb
test
cli
add
sub
push
loope
jne
push
push
sarl
movsb
xchg
cs
mov
push
mov
mov
mov
mov
in
movsl
and
nop
jno
inc
sar
shlb
adc
vmovdqa
enter
jo
xor
test
mov
pop
or
push
iret
pop
mov
xchg
sub
dec
mov
mov
xor
imul
sbb
jmp
or
addr16
fndisi(8087
sbb
loopne
pop
fnstsw
pop
shrl
cmp
inc
test
fistpl
loope
adc
mov
pushf
jae
sti
loope
sbb
cmc
negb
lds
out
push
mov
sti
test
xor
mov
mov
pusha
fldl
cmp
push
xchg
mov
out
int
outsb
rorl
das
xchg
dec
adc
enter
inc
lcall
push
adc
arpl
out
testl
push
or
loope
clts
rcll
jmp
add
xor
mov
and
inc
cmc
mov
add
or
xchg
pusha
adc
mov
loope
jbe,pt
cmp
outsl
std
out
in
adc
mul
dec
outsb
repz
cmpb
and
std
in
fucom
push
addr16
aaa
out
out
jecxz
and
mov
jg
inc
in
call
lea
and
mov
inc
aaa
mov
jns
jae
fisubl
fisttps
in
idivl
fnsave
loop
lock
stos
loope
mov
das
test
cmp
mov
pop
mov
testb
sbb
leave
adc
loope
iret
hlt
push
mov
xchg
scas
sbb
roll
in
cmp
inc
imul
loope
mov
outsl
loop
arpl
loope
xchg
xchg
mov
dec
icebp
loope
jp
leave
inc
inc
repz
gs
loope
dec
inc
cmp
mov
loope
lret
dec
push
insb
mov
jle
adc
dec
loope
icebp
test
int
enter
je
fst
jo
loope
mov
mov
sub
test
mov
mov
addr16
fisubl
aas
adc
push
loope
es
cs
das
loope
xchg
movsb
push
inc
push
sub
shll
loop
push
xchg
push
mov
dec
lock
mov
sub
sti
aam
ret
add
add
dec
fisubs
clc
jle
lahf
shrb
xchg
imul
shlb
in
decl
outsl
mov
jns
mov
jmp
cmpb
out
pop
xchg
push
mov
lahf
pop
incb
push
xadd
jno
hlt
cmp
push
add
xchg
js
cmc
sub
sbb
in
out
ret
mov
ret
dec
roll
jl
or
jmp
loope
in
inc
enter
in
sbb
mov
loope
fisubrl
lea
loope
mov
jl
pop
ss
inc
pusha
push
add
iret
or
loope
ror
aas
fnstenv
loope
mov
cmp
rcrl
jle
push
xchg
lock
call
pop
pusha
loope
jne
pop
add
push
mov
inc
adc
loope
das
outsb
pop
mov
repz
in
sub
loope
xchg
jg
je
lret
leave
adc
stc
lock
push
jmp
adc
jo
loope
push
popf
pop
xor
push
pop
loope
in
mov
addr16
retw
loope
push
pop
insb
xor
sahf
hlt
loope
gs
stos
loope
rcrl
dec
sbb
loope
sbb
xchg
jecxz
and
adc
pop
sub
int3
xor
insb
pop
shlb
adc
scas
and
push
addr16
fstpl
fs
loope
xlat
sbb
repnz
loope
decb
cmpsl
aas
sti
and
std
sub
dec
mov
loopne,pt
xchg
loope
push
lret
jne
push
pop
scas
loope
ss
xor
movsl
loope
mov
xor
daa
loope
js
push
cmp
lahf
sub
mov
call
je
pushf
add
loope
jbe
fisttpll
inc
lock
xor
out
add
mov
and
jns
mov
xor
sub
data16
mov
out
fwait
daa
std
rcl
mov
outsl
psubsw
or
addr16
fadds
rcll
sbb
in
loopne
xor
adc
pushf
enter
ljmp
sub
out
add
dec
outsl
sub
lock
jle
lcall
imul
fists
imull
sub
loope
sbb
loope
cmp
shl
lahf
inc
adc
loope
add
push
dec
loope
push
and
inc
cwtl
loope
mov
and
push
xchg
pushf
loope
xor
cmp
cltd
mov
mov
jle
jno
cwtl
mov
xchg
add
xchg
nop
out
loope
jg
inc
adc
and
jns
sub
mov
loope
mov
xor
ss
mov
imul
test
xor
es
and
push
mov
cld
cmpsb
aad
inc
data16
fcompl
scas
or
jmp
in
ror
mov
push
mov
dec
jb
data16
and
mov
xlat
loope
loop
out
fisubs
and
loope
pop
loopne
mov
jecxz
cmp
push
dec
out
repz
pop
sub
into
xor
mov
aas
jae
pop
insl
mov
loope
aad
add
jno
jbe
ljmp
repz
and
stos
mov
xor
push
lret
shll
xchg
out
mov
pop
jmp
mov
cmpsl
and
mov
xor
fninit
call
pop
mov
jg
pop
mov
sub
jbe
ret
call
sub
loope
movsl
leave
pop
mov
cmp
or
mov
pop
mov
loope
adc
loope
push
mov
add
dec
imul
push
popa
outsl
aam
loope
add
out
mov
ds
lods
mov
inc
test
inc
fninit
imul
mov
or
inc
out
daa
cmp
adc
jns
mov
push
jge
cmc
loope
cli
pushf
lods
es
cmp
fsub
sub
xchg
mov
sub
testb
leave
jp
lock
jge
test
adc
stos
jmp
faddl
or
fldt
notl
loope
mov
and
test
add
mov
sub
mul
or
jae,pn
jmp
pop
lret
movsl
and
inc
nop
in
shll
adc
test
fwait
pop
popa
push
es
jmp
cli
movsl
jae
addr16
add
adc
xor
rcrb
push
sbbb
jmp
jne
sarb
jg
adc
loope
in
cmpsb
dec
sub
and
jno
or
sahf
mov
rol
loope
cli
test
push
in
adc
andnps
loope
dec
nop
mov
les
repz
xor
ret
enter
mov
mov
cmpsl
pop
jno
add
mov
xlat
fldt
and
test
mov
push
loope
adc
and
rorb
jae
inc
in
ss
add
jecxz
inc
scas
data16
and
loop
push
jp
mov
add
xorl
lock
loope
jle
mov
loope
xchg
iret
push
stos
mov
dec
in
loop
ljmp
mov
xlat
jns
pusha
and
inc
add
cs
mov
push
and
arpl
cmpsl
add
jge
jmp
inc
aas
loope
testl
add
add
repnz
mov
cld
fsubp
adc
xchg
lds
std
mov
int
adc
int3
cmp
loope
push
xor
inc
sub
inc
movsl
das
pop
cmp
mov
inc
loope
mov
loope
or
insl
add
jmp
loopne
je
sarb
jo
out
movsl
or
jmp
loope
push
jp
jb
push
xchg
pop
jns
pusha
mov
js
xchg
ljmp
jl
add
push
test
popf
push
mov
stos
sti
out
fsts
xchg
sub
dec
loope
in
cld
push
rorb
ss
in
and
pop
xchg
sub
sbb
ljmp
sarb
mov
jnp
loope
add
xor
jl
hlt
loope
mov
cmp
jno
psraw
negl
testb
sub
cmp
out
addb
pop
inc
mov
data16
repz
loope
loopne
jecxz
lret
xor
xchg
andb
mov
pop
dec
sbb
movsl
pop
add
pop
xor
adc
insb
cmp
andb
lods
loope
xor
fistps
jmp
bound
adc
adc
in
rcrb
loope
mov
call
loope
nop
scas
inc
xchg
jmp
and
test
fs
cmp
repnz
imul
lock
fsubrs
inc
mov
ja
enter
loop
shll
arpl
orb
fildl
fimull
insl
dec
decl
lahf
subl
push
sbb
imul
xchg
shlb
fadds
jp
ljmp
lret
push
mov
xchg
mov
int
loope
test
les
loope
out
dec
out
mov
push
jo
add
bound
jp
call
inc
cmp
add
je
fnstcw
into
cs
push
jmp
mov
test
sti
ds
stc
loope
std
or
sbb
stos
jnp
cmpsb
stos
or
cmpb
test
sub
mov
out
into
test
ret
popf
jmp
pop
pop
mov
gs
mov
andb
loope
rcrb
inc
pop
shrl
loope
add
mov
mov
fidivs
pop
cs
mov
jmp
stc
in
dec
cltd
ja
jo
pusha
scas
push
dec
push
ljmp
and
and
lea
rcrl
std
and
jo
xchg
shl
jecxz
pop
adc
loope
dec
loopne
lock
divl
loope
gs
sbb
std
loope
ficoml
mov
in
sub
loope
or
push
adc
ret
aaa
mov
nop
stos
shlb
or
loope
dec
gs
xor
cmp
push
rcr
test
jmp
shlb
cmp
stos
push
fildll
jae
loope
add
sub
lret
fimull
mov
cmp
into
sarb
enter
lods
jo
jp
xchg
in
test
jnp
leave
mov
fs
mov
rol
lahf
movsl
mov
rorb
ljmp
adc
mov
daa
and
decl
in
pop
mov
jae
loope
cmp
mov
sbb
cmp
add
and
jmp
movsl
in
bound
out
add
add
or
inc
sbb
ficompl
jmp
mov
aad
inc
das
pushw
rcl
jmp
mov
push
loope
cld
fadds
lea
push
das
add
out
push
inc
loop
int3
jo
sbb
add
mov
pop
and
pop
inc
add
rorb
pusha
stc
mov
ljmp
loope
shl
xchg
push
mov
jo
lock
sbb
call
loope
push
or
mov
loope
sahf
xchg
cmc
xor
imul
and
cmp
push
mov
dec
cs
hlt
xor
sarl
jmp
in
insl
movsl
cmp
sbb
or
sub
pop
lods
call
adc
xchg
outsl
or
and
loope
add
movsl
frstor
push
divl
jbe
nop
cmc
add
dec
cmp
jb
inc
out
in
adc
loope
add
out
sub
iret
outsb
mov
pop
or
loop
gs
rorl
mov
je
xchg
lret
xchg
insl
mov
lcall
fndisi(8087
pop
cmc
popf
loop
stc
nop
add
inc
in
mull
inc
loope
inc
mov
cmp
mov
and
bound
loope
lods
shl
in
outsb
ljmp
sub
bnd
inc
adc
gs
mov
pop
cs
fsubs
or
lret
in
mov
dec
fimuls
xor
in
jo
pop
mov
mov
push
dec
mov
push
inc
adc
pop
pop
fs
loope
pop
out
mov
shlb
hlt
cld
mov
aas
jae
push
cli
sbb
push
jns
loope
add
loope
out
je
push
and
mov
bnd
icebp
leave
lahf
enter
loope
mov
data16
stc
aas
leave
call
sbb
loope
push
add
push
pop
aaa
pop
loope
mov
adc
call
xchg
pop
loope
mov
or
loope
xchg
daa
popfw
aam
and
loope
xchg
ret
mov
mov
aam
jl
mov
jns
jmp
mov
mov
mov
xor
loope
incb
scas
mov
dec
cmp
jmp
or
loope
in
out
mov
mov
cmp
jge
and
xor
adc
arpl
xor
rclb
dec
cmpsb
movsb
adc
sti
and
out
leave
std
sub
in
inc
lahf
and
sub
loope
inc
pop
cmpsb
or
adc
imul
inc
inc
adc
lret
sarb
insl
cmc
push
clc
dec
cmp
and
sti
push
jno
daa
pop
add
cwtl
xlat
mov
dec
inc
push
sbb
inc
add
mov
inc
mov
jl
aad
cmp
js
gs
cwtl
ja
loope
sbb
mov
repnz
mov
mov
je
fsub
mov
fucom
test
adc
sub
aas
lret
and
into
xlat
sbb
cmp
adc
push
sub
loope
xor
sar
mov
sbb
ret
scas
adc
loope
stos
and
icebp
iret
mov
stc
push
out
pop
loope
push
mov
loope
xchg
sbb
sub
pop
test
data16
add
dec
mov
lods
inc
pop
sub
popa
cmp
mov
in
cltd
in
xor
sub
pusha
fldcw
cmpsb
cmp
add
jne
int3
pop
mov
cmp
lret
xchg
sbb
jb
jo
scas
subl
push
in
lahf
outsb
insl
gs
xchg
sub
jp
mov
or
cmp
cltd
jo
je
in
ret
es
xor
nop
or
scas
shlb
or
pop
sub
rcrb
popa
push
mov
pop
enter
fwait
loope
stos
repnz
cmp
pusha
shl
faddl
jno
push
push
scas
lods
jbe
sti
out
loope
sbb
dec
inc
mov
pusha
mov
ret
ljmp
mov
pop
outsb
push
sub
lcall
roll
cwtl
scas
sbb
mul
loop
mov
pop
repz
adc
loope
popa
movsb
lret
out
loope
add
mov
loope
repnz
fidivrs
add
cmp
mov
je
and
pop
mov
xchg
in
push
or
nop
out
xchg
sbb
loope
adc
loop
loope
xor
jbe
stos
sbb
jo
push
cmp
cltd
mov
and
in
fidivs
jns
loope
dec
cmc
rorl
test
loope
mov
pop
js
or
xchg
daa
mov
loope
out
mov
loope
movsb
inc
fmuls
icebp
push
in
shlb
nop
adc
inc
fcom
jne
sub
in
test
mov
sbb
inc
enter
xchg
mov
scas
dec
pop
mov
loope
lret
inc
rol
loope
ss
js
jnp
pop
fiadds
and
and
mov
add
push
add
repnz
outsl
in
popa
pop
jecxz
out
pop
inc
scas
scas
mov
mov
clc
adc
pop
sub
test
mov
loopne
ds
xor
cmpsl
bound
xchg
mov
movsl
das
mov
in
test
hlt
shlb
nop
inc
lock
push
add
adc
aam
cs
jge
call
push
xchg
loope
ss
adc
aad
jnp
sarb
mov
movsb
xchg
mov
loope
push
mov
push
pop
cmpsl
adc
icebp
mov
loope
pop
imul
mov
mov
inc
int3
push
jg
movsl
shl
in
dec
xorl
loope
lods
shrb
loope
and
cmpsb
xor
loope
inc
cmp
add
mov
mov
dec
mov
incl
xchg
outsl
loope
push
mov
lret
dec
mov
lock
scas
mov
jle
loope
bound
sub
test
add
mov
out
loope
inc
xchg
push
xor
or
pop
jo
addr16
mov
cs
jmp
adc
add
jno
xor
imul
add
insb
mov
inc
xor
mov
push
jmp
test
int3
xor
rcrb
aam
push
inc
pop
hlt
out
orb
mov
or
insb
loope
mov
and
loope
sbb
fsub
mov
stos
jnp
add
xchg
stc
hlt
in
mov
mov
fwait
inc
mov
mov
dec
loope
fs
push
fnstcw
fwait
nop
das
test
nop
xchg
loope
jb
mov
rcr
fndisi(8087
xchg
mov
push
lds
outsl
mov
out
loope
mov
shlb
dec
cli
in
xchg
mov
movsb
mov
subb
loope
or
jge
insb
cmp
repnz
dec
pop
enter
mov
mov
sub
push
mov
je
or
loope
insb
cli
or
loop
jnp
fcomi
outsl
mov
call
cmpsl
out
aas
stos
loope
and
imul
inc
out
adc
mov
dec
mov
in
pop
fsub
loop
lods
xchg
jmp
shrb
jmp
push
std
fsub
inc
mov
nop
loop
adc
xchg
adc
in
xchg
push
sti
ret
pop
rorb
cld
cmp
mov
jge
loop
loopne
xchg
and
loope
mov
imul
mov
fstps
fisubs
xor
pop
mov
mov
loop
fimuls
sbb
scas
pop
shll
loope
sub
test
jns
imul
inc
pop
das
sahf
rclb
in
xor
loope
leave
sarl
sub
repz
push
loope
pop
push
mov
inc
aam
fdivrl
jns
push
push
mov
mov
ss
pop
dec
mov
js
stos
push
das
leave
aas
insl
lock
iret
jecxz
mov
movsb
adc
xor
es
ficompl
popa
outsb
loope
fsts
popa
flds
pop
pop
loope
dec
mov
or
dec
fisubrl
xor
hlt
fsubs
adc
cmp
out
cmpsb
lea
ret
ja
rolb
or
and
loope,pn
ss
xchg
out
stc
fnsave
pop
loope
jb
int3
ja
inc
sahf
loope
dec
cmpsb
das
fbld
popa
push
mov
sbb
add
inc
inc
addl
sbbl
add
daa
lods
jno
in
inc
pop
sahf
loope
in
clc
jmp
lea
jecxz
mov
and
int3
push
or
xchg
mov
adc
dec
loope
pusha
test
sbb
mov
jne
xor
add
testb
cmp
xchg
inc
or
mov
in
mov
daa
pop
loope
xor
mov
mov
mov
loope
pushf
mul
and
jno
mov
or
orl
scas
repz
outsb
pop
push
adc
add
in
out
icebp
jnp
jae
loope
nop
add
stc
sub
das
inc
xor
xchg
push
cmp
mov
bound
pop
xchg
adc
push
insl
cmp
adc
dec
loope
push
push
scas
pop
push
test
loope
lds
adc
dec
cmp
xchg
inc
jne
cli
pop
pusha
gs
pop
add
mov
ret
in
dec
testl
lods
lock
jb
jecxz
fbld
pop
mov
mov
out
push
jns
lods
mov
cwtl
repz
fsubp
mov
movsb
adc
jb
xchg
sub
pop
shlb
and
sarb
xchg
add
roll
mov
push
dec
sub
xchg
lahf
sub
add
dec
repz
xor
movsl
xchg
mov
xor
xlat
jecxz
repz
inc
jmp
mov
bndstx
jmp
mov
add
pop
lretw
mov
pop
adc
jmp
pop
lea
sub
or
sub
or
dec
add
outsb
sbb
out
dec
aad
add
adc
test
loope
cmpsb
fistpll
loope
out
inc
xor
jp
loope
lock
push
cmpsb
sub
cld
jl
dec
mul
insl
and
push
bound
scas
inc
adc
xor
out
and
mov
loope
pushf
pop
jmp
jbe
gs
arpl
cmp
repnz
or
pop
rolb
or
push
bound
xor
add
mul
aas
jae
outsl
pushf
loope
lea
xlat
mov
cli
mov
out
shl
jg
xchg
jmp
call
out
lret
test
inc
push
sbb
loope
jge
inc
fcompl
jmp
xchg
ja
out
sub
add
ljmp
ljmp
loope
cmp
add
jns
mov
inc
push
cli
popf
in
lods
sahf
loope
push
sarb
xchg
addr16
mov
repnz
subb
loope
lds
pop
ljmp
in
push
add
sahf
loope
jae
std
lret
mov
jnp
xor
add
in
adc
je
insl
jbe
mull
mov
shr
jns
push
push
cmp
cmc
aam
icebp
pop
addr16
or
mov
mov
cli
nop
clc
movsl
loope
pop
and
in
ret
jp
jo
add
mov
ss
loop
gs
in
dec
and
mov
push
lods
lock
pop
jns
cli
js
mov
and
loope
cmp
fs
repnz
stos
loope
or
iret
sarb
add
lock
sahf
test
inc
and
mov
lods
es
das
mov
sub
cmp
pop
mov
movsb
loope
sub
das
mov
push
repz
sti
sub
push
lret
repz
sub
pop
loope
test
idivl
mov
shrb
adc
call
xor
std
shll
int
sbb
les
lock
mov
dec
push
loope
fbld
ret
mov
add
je
mov
push
push
loope
pop
sub
imul
dec
pop
mov
xchg
mov
or
xlat
int3
cmp
out
or
in
cli
leave
inc
stos
bound
pop
adc
aaa
push
loope
mov
pop
cmp
jae
test
std
nop
out
push
push
out
and
dec
leave
sahf
pop
mov
in
popf
ret
icebp
daa
test
lahf
incl
lock
and
loope
sub
loope,pn
or
into
push
jmp
insb
jecxz
add
cwtl
aas
insb
nop
dec
xchg
push
nop
sbb
mov
push
lret
test
jg
out
gs
aad
sbb
push
sbb
jge
adc
xchg
or
ror
loope
mov
int
mov
loope
jp
mov
sahf
pop
mov
mov
insb
cmpsb
mov
inc
or
fiadds
stos
loope
addr16
fwait
and
popl
aad
loope
jb
out
add
push
rolb
inc
cmp
inc
mov
pop
repz
xlat
loope
pusha
cs
adc
mov
rorb
hlt
jmp
scas
and
mov
mov
xor
in
outsb
js
das
fsub
lock
dec
loope
cli
dec
cmp
dec
gs
jb
and
loope
cmp
daa
loope
data16
in
mov
push
push
jmp
jge
pop
or
into
dec
add
cmc
or
dec
insl
sti
scas
daa
xor
pop
sub
push
stos
sbbb
aaa
stc
mov
rcrb
out
andb
inc
aaa
add
scas
pop
sub
add
loope
mov
loope
call
jle
out
mov
out
mov
mov
in
stos
mov
jo
mov
add
divb
xchg
ret
jmp
test
pop
jo
push
or
and
sbb
loope
cli
mov
andb
bound
xlat
or
insl
sbbl
pop
insb
sbb
push
out
js
and
sub
loope
add
or
add
into
mov
or
mov
or
cltd
repz
ljmp
lods
popa
sbb
lcall
fdivp
adc
fildll
xchg
je
pusha
cmp
push
xor
loope
lret
pop
int3
imul
pop
dec
fwait
push
insl
enter
lds
jmp
cmc
stos
fdivrl
es
testb
ja
push
loope
push
push
and
test
mov
add
scas
xchg
ljmp
ret
in
scas
cmp
fs
push
loope
add
loope
sub
adcl
or
out
mov
mov
pop
push
mov
jecxz
inc
jmp
fucom
divl
movl
jle
cwtl
stc
aam
mov
pop
mov
cmc
mov
or
cmp
push
push
data16
and
js
cmp
mov
jmp
jb
mov
les
mov
mov
bound
fwait
loope
mov
insl
mov
cmpsl
cmp
js
add
stc
and
jge
pusha
adc
sub
lret
hlt
dec
in
rolb
or
xchg
loope
fstpt
cmp
jnp
dec
add
push
outsl
fsubs
out
jb
mov
add
mov
stos
les
out
ds
sub
xor
jecxz
repnz
aaa
in
or
or
movsb
adc
aad
dec
inc
inc
loope
call
loope
mov
jmp
std
mov
pop
cmp
mov
jb
jmp
hlt
fisubrs
sbb
push
jb
xchg
loope
mov
fcompl
loope
sub
dec
mov
xchg
stos
fwait
jge
ja
movsl
mov
stos
jb
gs
out
pop
ret
and
sub
or
bound
mov
inc
loope
int
xor
and
sub
pop
inc
cmp
divb
jecxz
mov
lock
ss
xchg
jne
push
loope
or
out
cmp
adc
pop
call
sub
xchg
jo
loopne
in
and
insb
cltd
or
gs
in
loopne
inc
xchg
test
or
call
push
xchg
cld
fs
shlb
lret
loop
dec
loope
movsl
pop
mov
out
mov
neg
out
mov
loope
jne
pop
call
test
popf
add
loopne
fdiv
jecxz
add
ja
scas
add
or
bound
mov
push
insl
loope
pop
sbb
xchg
jo
jo,pn
jns
adc
movsl
in
mov
dec
inc
xor
inc
dec
shl
pop
insl
push
in
or
cmp
inc
aas
in
lret
loope
frstor
pop
push
sbb
loope
neg
rorb
cs
ret
xchg
lods
mov
cltd
fucomi
rolb
sti
das
cmp
shl
in
jnp
ja
lods
add
and
int
in
clc
out
xor
mov
test
or
daa
mov
and
loope
pop
jo
fimuls
mov
test
xchg
jmp
loope
arpl
cltd
mov
mov
dec
dec
xchg
mov
aaa
mov
or
rolb
mov
push
xchg
jecxz
and
and
add
push
popf
sub
mov
loopne
dec
or
das
daa
iret
mov
jge
push
insl
loope
gs
mul
fcompl
add
aad
xchg
and
in
push
loope
mov
push
loope
sbb
mov
push
mov
call
pop
mov
add
mov
cmp
mov
hlt
sbb
pusha
popa
mov
or
loope
jb
shrb
ds
and
rcrb
cmpsl
push
ficoml
cmpb
and
jl
add
inc
ljmp
mov
mov
xchg
adc
in
push
dec
xchg
daa
xorl
pop
mov
cs
std
adc
cmpsb
sar
inc
add
jge
outsl
fwait
ss
loopew
lea
fcmovnbe
lods
cli
add
push
aas
loope
fcmovbe
sub
inc
adc
in
sub
popa
adc
outsw
in
fsts
cmc
and
das
jmp
in
es
fimull
sub
jge
pusha
ret
scas
mov
mov
and
loope
push
repnz
sbb
push
xor
sti
and
jno
mov
loope
insb
push
test
push
jo
sarb
fsubl
push
loope
or
pop
loope
dec
and
popa
loope
jae
clc
iret
pop
push
jnp
cmp
cmpsl
add
mov
lahf
pop
fcomps
loope
dec
mov
mov
fstp
cmpsb
cmp
push
mov
mov
sbb
movsb
in
enter
loopne
mov
pushf
loop
xchg
call
jl
out
lea
loope
stc
sub
push
lock
jmp
and
xor
test
xchg
cmp
mov
rorb
cwtl
scas
arpl
lcall
pop
stc
in
je
gs
mov
hlt
movsb
adc
add
jl
loope
sub
outsl
mov
cmp
jo
pop
sub
jno
mov
lahf
jb
add
loope
xor
dec
aaa
jo
mov
pop
or
fnstsw
xor
stc
jmp
jecxz
cmp
jmp
jp
adc
loope
jl
sbb
and
rcr
jne
rcrb
add
out
push
ret
loope
mov
loope
jae
xchg
cltd
inc
or
shlb
insl
pop
daa
push
jecxz
in
add
push
cs
cmp
jle
cmpsl
imulb
jno
repz
fidivs
sahf
ss
jg
imul
hlt
loope
sbb
call
adc
test
enter
pop
scas
addr16
xor
stos
psubsb
xchg
mov
dec
or
dec
jmp
cmpsl
test
add
les
bound
subl
sbbb
divb
bound
je
dec
das
dec
fistps
loope
cmpsb
call
jecxz
fstp
test
jo
xor
cwtl
and
inc
and
push
pop
cltd
add
jo
cmpsb
insb
dec
in
cmp
loope
movsl
dec
jl
lods
sbb
in
fmulp
in
int3
imul
sahf
jmp
dec
jmp
sarb
jmp
adc
loope
outsb
xchg
add
in
pop
inc
loope
fsubrs
imul
sbb
adc
stc
sub
mov
dec
out
inc
lock
test
add
or
jmp
push
dec
add
dec
iret
nop
mov
loope
xchg
lds
inc
loope
or
aas
pop
in
mov
or
sub
enter
sbb
sub
sbb
mov
sbb
loope
jb
and
adc
cld
pop
rol
xchg
sub
inc
enter
int3
jns
inc
push
xchg
mov
push
push
sub
popa
cs
movsb
loope
pop
mov
out
mov
daa
loope
mov
xorl
mov
jo
mov
loope
mov
xchg
outsb
ds
push
leave
sbb
jb
rep
fwait
sub
rcr
mov
jg
sbb
cmp
cmc
inc
and
pop
xor
jb
inc
shlb
add
jecxz
jp
sbbl
lods
xchg
rolb
mov
pop
mov
jnp
pop
mov
loopne
aaa
loope
aad
cli
dec
imul
aas
out
or
pushf
loope
adc
stos
mov
jno
sahf
shrl
xchg
or
in
in
inc
add
testb
subb
lock
adc
das
nop
mov
nop
adc
in
mov
inc
pop
shr
jmp
loop
jo
test
enter
imul
cmp
dec
mov
push
mov
outsb
call
rclb
sub
rolb
sub
inc
push
lret
pop
xlat
mov
lahf
loope
movsl
xchg
aad
adc
ljmp
out
ds
lcall
push
addr16
cmp
inc
loope
pop
mov
pause
mov
jno
push
inc
push
jle
sub
rol
xchg
xor
and
jae
add
mov
sahf
mov
fistpl
cmp
sbb
and
push
mov
add
jp
fdivrs
enter
out
cmpl
nop
loope
adc
movsl
loope
fimull
enter
loope
mov
pop
sub
cli
jnp
in
loope
cmp
ljmp
es
leave
rcrb
loope
in
and
loope
or
into
push
loope
jl
insb
sbb
and
in
jge
inc
loope
dec
adc
loope
mov
loopne
cmpsl
jo
jmp
in
test
in
jp
pop
sahf
xor
lock
sub
loope
lcall
loope
dec
mov
fwait
test
gs
add
je
clc
sbb
std
dec
cli
loope
jmp
imul
mov
int3
pusha
stos
lods
push
loope
push
cltd
stos
adc
insl
jo
add
mov
mov
push
and
shrl
push
push
ljmp
lret
dec
in
loope
sbb
jo
sub
and
jmp
cmp
dec
loope
mov
inc
cmp
scas
pop
push
mov
into
rcrl
xor
jo
aad
adc
out
inc
sbb
popf
sub
sbb
lds
std
dec
fnop
pop
push
add
leave
sub
nop
xor
mov
mov
jmp
add
cmc
loope
shlb
sbb
into
and
pop
xchg
cmp
popf
in
sub
push
ja
fxam
and
mov
adc
mov
jmp
push
das
jmp
xchg
dec
arpl
mov
fadds
or
adcb
and
jge
push
mov
fcoms
cmpsl
cwtl
sbb
in
loopne
rorb
cmp
dec
loope
pop
pop
jb
push
mov
loope
cltd
mov
push
pop
sti
mov
cmp
outsl
add
loope
jae
push
adc
aam
sub
ds
push
loope
pusha
iret
inc
mov
fildl
cvttps2pi
xor
sbb
pushf
jg
notl
gs
and
jmp
mov
hlt
dec
cs
xchg
jo
lahf
fistpll
inc
jl
jecxz
cwtl
out
dec
ret
cmp
inc
daa
imul
push
pop
out
jle
repnz
mov
push
shl
into
add
jecxz
bound
test
push
popf
loopne
loope
fwait
adc
sbb
xchg
loop
push
sbb
mov
cmp
xchg
repnz
sbb
adc
andb
jo
je
push
daa
in
sbb
or
imul
jge
jb
jp
ds
sub
stc
mov
xor
adc
rcl
xchg
pop
loope
sbb
ret
jl
push
in
insb
repz
rorb
push
sub
jg
mov
sub
and
aas
loope
enter
in
int3
loope
cmp
or
inc
jae
cmp
or
and
in
xchg
sub
pop
shlb
mov
scas
rcrl
pop
jle
loop
sub
repnz
ja
pusha
mov
fidivs
loope
push
hlt
fsubrs
mov
pop
jmp
add
loope
lahf
jae
mov
pop
inc
jo
jecxz
xchg
int
lret
fmulp
jo
push
mov
std
js
bound
jo
test
outsl
jae
xor
mov
andb
and
pop
mov
sub
test
xchg
xchg
jns
aas
push
lret
enter
sahf
fucom
sti
test
cltd
push
pop
mov
stc
sub
loope
push
lret
out
ret
ret
cld
xor
loope
neg
cmp
jle
call
and
mov
mov
or
arpl
mov
in
inc
shrl
xchg
sub
in
push
pop
loope
mov
jg
push
ss
and
xchg
pop
das
xchg
adc
lcall
int
or
loop
sahf
adc
and
stos
xchg
mov
movsl
loope
rcll
mov
lods
push
mov
mov
jae
or
xchg
leave
das
sub
lret
mov
push
xchg
gs
push
sbb
addr16
jo
aaa
cmp
xor
scas
lock
or
out
iret
inc
lea
add
test
xor
lret
mov
in
jno
xchg
popf
loope
rcll
jle
sbb
out
jmp
sbb
push
movsb
xor
sub
cli
sarb
out
adc
adc
inc
fstl
loope
insb
enter
cmp
loope
mov
movsb
sub
cltd
daa
scas
cmc
mov
out
and
jo
push
and
fnstcw
jo
icebp
push
into
mul
cld
imul
loope
xchg
jmp
lahf
loope
add
scas
inc
rcl
cmp
lea
mov
int
repnz
stc
cmp
call
loope
xchg
out
xchg
idivb
daa
jo
push
ret
mov
cmp
and
enter
pop
lods
and
xor
cmpsb
clc
inc
in
adc
cmp
and
sbb
loope
repnz
lahf
fstpl
cmpsl
imul
xchg
sbb
add
dec
loope
cmc
xchg
xor
cmp
push
loope
jge
cmp
mov
fmul
or
jecxz
test
push
or
or
push
in
arpl
add
add
jne
mov
popa
mov
adc
dec
push
sbb
mov
aas
out
ret
imul
inc
mov
inc
adc
sub
adc
sti
xchg
or
out
jge
movsl
loope
xor
clc
loope
mov
aaa
ss
aam
xor
andb
mov
mov
jmp
sub
lock
xor
jns
inc
mov
xchg
mov
fstps
ljmp
mov
bound
in
inc
ret
mov
bound
jge
pop
shll
pop
mov
mov
popa
sub
adc
hlt
pop
mov
daa
jns
icebp
jnp
inc
cmpsl
pop
aaa
xchg
push
sub
loope
rcrl
pop
lcall
cmpsl
lret
mov
daa
add
in
xchg
loope
mov
fs
jb
fbstp
popw
xchg
xchg
test
or
xor
xchg
pop
aad
sarb
loopne
xchg
into
orb
test
mov
fwait
lea
loope
in
pop
mov
mov
add
ljmp
jp
pop
loope
xchg
les
mov
sarb
loop
std
loope
mov
leave
cwtl
pop
in
ss
or
pop
jnp
xchg
push
jecxz
push
insl
dec
add
mov
dec
sarl
arpl
ljmp
fsubl
sbb
out
mov
ffree
loope
pop
lock
ss
push
lahf
mov
ljmp
loope
and
jbe
xor
rcll
int
arpl
test
mov
or
dec
pop
push
mov
outsl
cmpsb
ret
or
xchg
repz
pop
mov
movsl
rclb
jae
mov
fnstcw
sbb
js
push
push
xchg
test
vcmpsd
loope
xchg
jmp
test
cmp
cmp
stos
pusha
xor
jge
jae
mov
fisttps
loope
inc
les
movsb
lret
inc
mov
insb
ret
fsubr
lock
punpcklwd
and
cmpsb
fnsave
and
inc
add
or
lea
mov
subl
push
loope
insb
stos
in
sub
adc
add
shl
loope
add
test
cmp
jmp
ss
stos
jbe
xor
popa
xor
loope
xlat
not
loop
ds
loope
cltd
xchg
dec
cmpsl
jge
loope
sub
rol
pop
mov
loopne
xchg
or
stc
pusha
mov
dec
push
mov
dec
mov
fldenv
test
mov
inc
cmpsl
and
pop
adcl
jmp
mov
outsl
jecxz
sbb
sbbl
add
mov
pusha
loope
mov
sub
scas
mov
and
sub
mov
mov
dec
add
pxor
cld
cmpsb
flds
xor
jbe
movsb
fs
sbbl
xchg
in
adc
adc
pop
jae
push
jmp
fabs
sbb
loope
lret
outsb
insb
fsubp
loope
adcl
push
fisttps
loope
mov
or
movb
lods
negb
cld
dec
or
xchg
and
loope
adc
aaa
mov
push
mov
inc
dec
and
pop
push
add
repz
mov
cmp
or
mov
jnp
cmpsl
imul
fsub
dec
push
jmp
scas
out
push
sub
pop
mov
mov
and
test
cs
repnz
ret
sbb
fs
jge
inc
stc
jg
out
xchg
mov
loope
int3
lret
jmp
add
xchg
stos
sbb
pushf
out
pop
imul
mov
inc
loope
xlat
pop
add
loope
int
push
cmp
repz
and
fs
xchg
fistps
push
fnstcw
hlt
js
loope
sub
or
rclb
aaa
dec
loop
cmpsb
loope
or
arpl
adc
leave
stc
cmp
push
add
lahf
cmp
add
push
lds
js
push
mov
mov
or
into
out
int3
loope
xchg
sbbb
std
and
fsubrs
fs
loope,pn
inc
das
arpl
lock
outsl
loope
pop
xor
enter
push
dec
mov
xchg
ret
pop
jmp
loope
xor
push
adc
outsb
mov
add
leave
lods
loope
and
jo
pop
mov
in
jecxz
push
push
loope
mov
pop
orb
loope
loop
xor
loope
fcompl
call
into
insl
adc
jmp
dec
pushl
in
decl
std
ss
mov
mov
clc
xor
jmp
mov
add
xor
and
xchg
loope
push
push
nop
mov
cmp
sbb
int3
xchg
or
loopne
loope
scas
hlt
push
sahf
cmc
xor
cld
es
push
in
mov
shlb
nop
xchg
loop
mov
dec
or
lods
push
dec
or
loope
and
sahf
jge
xor
push
mov
jo
sub
popa
into
add
sbb
icebp
sub
push
jne
and
ja
orb
roll
popa
lods
aas
jns
dec
xchg
pop
xchg
loope
mov
loope
movsl
cmp
dec
nop
or
aaa
inc
jno
mov
adc
mov
dec
or
loope
cld
cmpsl
mov
loope
shll
lsl
stos
loope
push
aas
insl
pop
adc
out
cld
repz
fiadds
and
cmp
adc
inc
aam
mov
loope
stos
mov
sti
cmp
adc
data16
fsubrp
mov
outsb
std
xor
scas
xchg
out
cmp
mov
xchg
loopne
std
out
mov
cli
jnp
dec
bound
xor
popl
iret
leave
rclb
cmc
mov
dec
cs
rcl
xchg
daa
cmp
pop
adc
pop
shr
ret
pop
inc
rclb
into
insl
xor
pop
out
shrl
aaa
cmp
out
sub
cmp
loope
adc
mov
jmp
insb
pop
xchg
loope
jmp
add
loope
mov
int
out
loope
flds
rcrb
loope
mov
outsb
jnp
leave
mov
mov
dec
test
jo
pop
mov
out
aaa
push
fs
inc
das
add
mov
sahf
xchg
pop
xor
adc
loope
enter
push
sbb
inc
push
mov
js
loope
mov
in
bound
loope
gs
cmp
ds
in
pusha
sti
fs
fimuls
sub
add
or
adc
mov
stc
jb
loope
push
inc
sar
xchg
pop
loope
ja
mov
idivb
pop
pop
jb
push
xor
aad
repnz
push
jo
leave
mov
cmc
sub
outsl
and
dec
aaa
jge
int
movsb
mov
add
out
jge
and
in
push
mov
aam
add
lods
mov
fmull
call
push
xchg
loope
sbb
or
push
cmc
xchg
dec
or
loope
pop
xchg
out
imul
cmp
into
jl
sub
loope
cmp
xchg
dec
cwtl
es
jp
movl
in
xor
jle
mov
nop
xchg
lods
adc
popf
hlt
fistpl
loope
rorb
push
inc
inc
loope
jl
jle
inc
and
nop
push
mov
pop
cld
xor
repz
jmp
imul
push
push
dec
xchg
xchg
or
loope
mov
orl
imul
xchg
cmp
lret
add
add
fdivl
ja
inc
xchg
fldcw
nop
dec
adc
xlat
xchg
loope
mov
cmp
mov
imul
shrb
jmp
loope
out
cli
cmpb
jo
dec
scas
lcall
loope
cmp
push
dec
mov
in
test
icebp
addl
push
pushf
loope
xor
leave
loope
insb
inc
push
xor
imul
std
loope
stc
lret
mov
or
sbb
pop
xor
hlt
push
out
adc
push
shl
mov
pop
mov
ret
arpl
mov
outsl
xor
cmp
es
push
sub
jo
inc
loope
fcmovbe
pusha
iret
push
or
loope
dec
dec
inc
xlat
and
pop
push
jp
xor
dec
mov
add
push
fstpt
fmul
in
pop
cmpsl
cltd
loope
mov
xor
push
cmp
loope
pop
test
xchg
or
push
jo
pop
adcb
lods
push
adc
or
sub
sbbl
loope
andps
call
dec
lret
dec
les
jae
inc
icebp
rorb
mov
inc
scas
push
mov
jo
decl
out
out
add
dec
gs
cmc
in
jae
shlb
cld
sbb
jns
and
mov
aad
imul
and
loope
adc
inc
nop
mov
and
movsl
cmp
loopne
lds
cmp
mov
loop
mov
cs
inc
push
jmp
xchg
scas
aas
mov
mov
mov
outsl
adc
mov
sbb
std
test
cwtl
jl
loop
lcall
loope,pt
faddl
xchg
inc
mov
push
push
scas
repnz
loope
jg
sub
sahf
gs
loope
sub
test
scas
dec
adc
sbb
loope
fcomi
jnp
cmp
sti
or
mov
jp
mov
imul
movsl
outsb
add
cmp
outsl
push
das
lock
and
jecxz
fimull
mov
and
enter
fs
test
cwtl
pop
adc
jl
inc
insb
aaa
pop
loope
cmp
mov
fisttpll
cmp
and
gs
in
and
inc
inc
dec
sbb
adc
sbb
cmp
mov
out
fs
pop
inc
adc
mov
pop
fwait
popf
mov
arpl
and
or
int
mov
ds
ljmp
sub
push
fnstcw
loope
and
pop
std
lock
inc
loope
mov
cmp
repz
pop
movb
jg
dec
mov
jo
cmp
loope
mov
lret
cmp
ljmp
out
in
xchg
out
loop
jp
loope
dec
pusha
in
cltd
outsb
sahf
popl
int3
loope
dec
test
add
fmul
cwtl
insl
sbb
out
das
inc
shlb
pop
test
xchg
and
repz
sub
or
dec
int
jl
mov
cli
lock
lcall
mov
and
dec
ficompl
or
js
adc
in
jg
and
jno
data16
mul
jle
fdivrl
mov
outsb
add
pop
leave
add
lret
sti
lds
mov
in
arpl
mov
cmpsb
bound
or
mov
imul
out
jns
pusha
movsbl
adc
or
call
loope
mov
push
and
mulb
cltd
fldl2t
mov
xor
and
in
cwtl
pop
lahf
movsl
push
loope
sbbb
inc
xor
xchg
nop
in
dec
decl
lcall
push
mov
sbb
cmpsl
loope
orb
sub
sti
xchg
jo
test
adc
lahf
jno
ljmp
std
jns
shlb
test
loope
jae
sbb
sub
mov
mul
cmpsb
cli
rcll
or
inc
mov
mov
push
jge
loop
stos
add
add
jecxz
xchg
in
add
dec
fistl
lock
sbb
rclb
mov
xor
sbb
push
or
fsubrp
add
int3
loope
xor
loope
pusha
leave
fsubrs
pop
ljmp
in
or
rcrb
mov
clc
push
mov
and
pop
mov
mov
loope
dec
mov
and
imul
loop
mov
jno
loope
out
adc
lcall
mov
jg
inc
loope
loop
pushf
and
int
mov
sbb
lock
cmp
test
loope
lock
das
push
stc
bound
xor
jmp
stos
data16
inc
pop
popf
fadds
loopne
push
inc
jmp
icebp
add
pusha
sarl
mov
jo
sbb
or
pop
int
popa
jecxz
lock
mov
add
cmp
or
mulb
loope
mov
in
ret
shl
lock
pmullw
sub
movsb
sarl
mov
jae
ss
cmp
nop
in
fiaddl
sar
jmp
lods
loop
lea
nop
xor
cmp
and
inc
loope
es
test
or
pop
loope
and
add
sbb
rcrl
push
pop
push
loope
dec
add
jecxz
out
popa
sbb
jp
sub
je
daa
push
loope
xor
inc
pop
nop
rolb
scas
andl
sbb
shlb
cmp
sub
xchg
xor
jg
push
fwait
mov
dec
loope
mov
xchg
leave
mov
mov
fisubrs
loope
push
xor
xor
mov
sbb
ss
std
jge
mov
cmc
xchg
into
fldz
push
loope
fsubrs
mulb
mov
adc
imul
xchg
inc
xchg
stc
xchg
rcrb
mov
xlat
cli
ret
sbb
inc
and
mov
pop
loope
popa
mov
dec
ror
xor
add
ljmp
in
out
sub
sbb
xor
cmp
mov
sbb
mov
insb
xorb
lods
loope
unpckhps
les
lahf
in
xchg
cmp
repnz
mov
loope
adc
jbe
mov
or
leave
push
shlb
dec
enter
fucom
scas
popa
loope
addl
xlat
scas
and
ss
in
les
inc
insl
loope
add
inc
push
iret
mov
xchg
jmp
pop
aaa
cli
loope
cmpsl
in
dec
loop
ja
sarb
insb
xor
sarb
xchg
adc
inc
icebp
cld
js
mov
jmp
mov
loope
movl
aam
xlat
dec
jecxz
das
and
pop
xchg
je
push
jle
xchg
jecxz
jmp
shr
fcompl
stos
mov
cmc
sub
push
out
jns
jo
jb
jmp
addr16
in
loope
xor
scas
aaa
inc
mov
cmpsb
lret
bound
xlat
loope
jb
test
sbb
shrb
or
lea
and
loop
xchg
lods
jle
loope
jnp
icebp
lods
and
xchg
out
xor
rcrb
pop
and
sub
inc
add
dec
mov
pusha
dec
pop
add
pop
mov
faddp
push
rorb
or
mov
xor
lods
out
ret
rorb
or
mov
popa
loope
sbb
mov
jns
mov
dec
sbbl
ret
inc
xor
add
leave
sbb
ds
mov
sub
push
xor
add
lods
loope
cmp
fs
mov
jecxz
pop
add
cmp
loop
decb
cmpl
gs
ljmp
ret
scas
imul
sahf
pushf
popa
push
mov
and
dec
cmp
lcall
call
sub
jmp
sbb
adc
fwait
scas
xchg
dec
loope
jle
lret
cmpl
bound
push
rcr
icebp
stos
and
ret
mov
or
lods
lcall
fdivrs
jmp
jp
sub
fsub
jl
xchg
scas
in
cwtl
mov
loope
add
loope
mov
test
push
out
lods
xchg
jns
xchg
fsub
sub
les
push
adc
mov
leave
jecxz
xor
rcr
loope
scas
jp
jmp
insb
inc
pop
push
loopne
or
or
or
ret
mov
mov
inc
rcll
or
inc
sub
mov
mov
enter
stos
push
imul
clc
jns
push
adc
xor
addr16
cmp
rclb
sub
sbb
push
jmp
rcrb
dec
dec
add
iret
sub
in
rcll
jle
leave
insb
loope
loop
ret
or
jnp
jp
out
push
rorb
loope
out
into
pop
cmp
les
inc
xor
nop
and
xor
jae
call
icebp
xor
in
adc
les
orl
out
and
dec
sarb
xchg
loope
and
or
pop
movsb
ljmp
jl
xchg
call
jno
loope
mov
std
adc
mov
loope
outsl
mov
lods
les
loope
cli
jbe
dec
or
loope
add
loope
mov
xor
jmp
cwtl
lret
xchg
mov
lea
add
push
clc
sub
dec
and
loope
cwtl
mov
lock
mov
inc
rcrl
mov
loope
aaa
ja
pop
push
ret
gs
inc
pop
pop
test
jo
movsb
mov
mov
insb
pop
lock
jbe
icebp
sub
ret
imul
cmpsl
cmp
lock
mov
lea
push
lock
add
mov
adc
sub
loop
loope
roll
pop
jno
loope
cli
stos
mov
pop
dec
lock
cltd
jecxz
lret
cmp
sub
arpl
or
loope
dec
pop
outsl
in
push
dec
sub
insl
pusha
mov
inc
outsb
jmp
sbb
adc
mov
loope
pop
sub
out
into
out
add
jne
loope
lock
sahf
sar
xchg
cld
pop
repnz
imull
jmp
add
test
ja
ret
movsl
dec
jo
push
callw
jno
loope
mov
cmp
and
out
or
and
jns
mov
loope
outsb
repnz
movsl
subb
lods
and
cli
pop
sbb
mov
jmp
push
xchg
add
push
jno
in
jmp
std
lods
cli
cmpb
loope
xor
in
test
sub
je
loope
cli
push
pop
call
clc
xor
das
iret
or
leave
mov
add
lods
scas
sub
sar
push
nop
mov
out
jno
loope
push
xor
divb
lahf
call
push
dec
inc
ficoms
mov
aad
icebp
inc
out
jne
mov
imul
push
rclb
push
cmpsl
js
xchg
in
outsl
loope
dec
adc
jo
ss
mov
mov
dec
jl
mov
sbb
push
shrb
rorl
js
ds
mov
mov
and
scas
mov
in
loop
cmpsl
leave
mov
fsubrl
pop
scas
and
insb
jo
xor
mov
push
in
loope
pop
adc
loope
sbb
dec
loope
sub
xor
dec
jle
loope
test
icebp
loopne
loope
push
xchg
mov
lahf
adc
sub
ret
mov
fs
loope
dec
sbb
or
sub
pop
cs
addr16
mov
loope
lods
dec
out
pop
jmp
loope
inc
aas
rolb
sub
jmp
ret
in
cmpsl
mov
lods
jle
enter
popf
loope
mov
das
push
sbb
push
es
ficompl
cmpb
pop
mov
cmp
push
in
bound
mov
js
sarb
imul
or
test
sub
xor
push
adc
jnp
loope
js
xchg
ja
popa
mov
jmp
daa
push
add
adc
test
shrb
cmp
gs
loope
sti
dec
push
fnstenv
shlb
xchg
fisubrl
or
testb
addr16
dec
jno
aas
mov
mov
lret
pop
or
mov
xor
xchg
pop
mov
inc
mov
ja
imul
shrl
sti
mov
dec
xchg
mov
loope
jno
orl
pop
pushl
into
sub
and
out
pop
int3
cwtl
dec
push
add
xchg
loope
and
push
pop
repnz
mov
loope
popf
jecxz
fldenv
mov
loope
add
pop
jne
loopne
xor
pop
adc
loope
fadd
aaa
push
xchg
jle
jo
out
pop
jns
in
lods
mov
mov
flds
mov
push
or
push
outsb
push
mov
ss
sub
loope
push
push
pop
int3
add
loope
and
aaa
dec
xchg
cmpsl
ljmp
jae
jg
outsl
test
stos
test
loope
adc
cmpsl
sub
cmpl
enter
xchg
pusha
loope
mov
cmp
mov
ret
jns
loope
pop
inc
xchg
insl
and
popf
loope
das
insb
popa
mov
add
loope
xor
fmull
jecxz
mov
imul
mov
insb
bswap
rcr
cli
jnp
loope
pop
std
clc
push
call
xor
xor
andb
ds
push
mov
push
cmp
jl
loopne
lock
xchg
ja
push
mov
jmp
je
sub
jo
dec
daa
ret
dec
add
test
inc
lea
jbe
mov
mov
mov
xchg
cmp
loope
mov
lahf
and
mov
lret
ljmp
xor
jmp
sbb
loope
jmp
jl
loope
in
lods
pop
inc
mov
pop
in
shl
push
adc
aaa
ljmp
std
push
fsubr
orb
out
jl
dec
mov
jae
add
inc
pop
sahf
call
out
in
rclb
cmp
xchg
mov
adc
xchg
pop
dec
push
outsb
mov
je
cmp
push
jmp
loope
sbb
mov
sub
es
aad
mov
loope
stos
mov
lcall
adc
cmp
shlb
aaa
adc
test
in
fcmovnbe
mov
mov
jae
lea
repnz
or
jns
insl
fiadds
pop
stos
std
xchg
xchg
loop
pop
cmc
loope
jmp
cmp
notl
xor
packssdw
jae
mov
in
addb
mov
rcrb
dec
shlb
mov
push
cmpsb
jnp
cs
dec
add
loopne
dec
loope
sbb
loope
inc
out
rclb
test
loopne
jmp
loope
adc
mov
fs
mov
push
stc
cmp
pop
sbb
loope
xchg
aaa
in
data16
movsb
jne
test
and
pop
loope
dec
nop
add
cmpsl
iret
xchg
cmc
out
sub
mov
mov
mov
in
xchg
push
jne
sahf
rcrb
fadd
xchg
std
mov
hlt
arpl
sbb
out
lods
dec
dec
imul
aam
aaa
pop
or
mov
scas
and
xchg
loope
mov
and
int
jbe
dec
ret
push
cmp
or
dec
or
test
sbb
in
into
lods
movsb
lahf
loope
leave
pop
imul
cld
pop
adc
sbb
loope
jae
jbe
xchg
movsl
in
loope
sub
cld
sbb
lcall
and
mov
mov
test
das
ljmp
mov
cmp
loope
lahf
inc
leave
mov
adc
inc
xor
cmp
or
mov
mov
mov
mov
iret
loope
add
ss
dec
lret
inc
jl
mov
jo
in
pop
lock
aas
loope
out
sahf
cmpsb
dec
loope
adc
mov
xchg
mov
dec
rol
loope
popa
xor
enter
sub
or
ja
sbb
jo
leave
xchg
mov
loopne
add
jno
push
pavgw
lret
mov
push
iret
cmpb
fldcw
push
out
pushf
gs
out
mov
loope
inc
bound
jp
stos
push
mov
adc
adc
shrb
enter
pop
mull
imul
inc
jno
aad
xchg
xchg
sar
xor
mov
jo
add
cld
sti
cmp
ret
push
popf
mov
push
movsl
xor
xchg
insb
iret
loope
cltd
int
ds
mov
js
jp
sbb
cli
out
mov
inc
mov
dec
fildl
lahf
lock
pop
jge
out
cmovnp
adc
fneni(8087
in
sbb
les
gs
cld
loope
pop
repnz
loope
xor
pop
ret
add
into
pop
pop
dec
loope
inc
int3
push
mov
add
or
mov
inc
or
clc
mov
xchg
jo
pop
je
data16
out
adc
dec
loope
repz
adc
lock
dec
in
xor
push
in
push
test
or
loope
jge
shll
cmc
and
push
in
jl
insb
mov
loope
test
add
push
loope
xchg
loop
sub
scas
pop
shrb
add
outsl
arpl
loope
lds
push
xchg
push
test
mov
les
cltd
lock
sub
pop
adc
shr
movsb
in
adc
lock
ret
and
and
inc
dec
das
mov
out
fiaddl
loope
pushl
dec
loope
addl
std
mov
pop
int3
fnstsw
rcll
jne
lock
lds
out
sbb
inc
andl
inc
mov
add
xorl
xor
mov
gs
mov
inc
loope
adc
das
rcl
loope
adc
lds
std
loope
es
inc
je
or
sub
cmc
mov
xchg
cmp
loope
jmp
add
stos
or
sub
popf
and
fildll
ja
or
addr16
push
in
loope
push
out
add
mov
outsb
push
jmp
loope
xchg
shrl
and
je
push
cmp
push
cld
das
sahf
outsl
mov
iret
push
loop
mov
repnz
mov
std
jecxz
jmp
frstor
rorb
jg
in
into
popa
or
jne
out
jns
lahf
aas
add
sub
xlat
xor
dec
scas
pop
vphaddudq
mov
pop
or
das
and
jnp
stos
movsb
loope
rdtsc
aaa
cltd
repnz
icebp
loope
or
mov
dec
xor
fwait
mov
push
in
add
and
xchg
loope
in
xchg
das
pop
loope
cmc
addr16
xorl
xchg
repnz
in
loope
push
lds
loope
lock
das
decl
loope
pop
add
push
lock
test
out
lods
cmp
adc
mov
loope
mov
in
add
iret
add
push
jo
mov
orl
jp
mov
shrl
loop
mov
jns
adc
mov
sarb
adc
adcb
loope
adc
stc
scas
jb
loope
xchg
movsl
fnstsw
cmp
rclb
les
out
sub
rol
sbb
cmc
popa
in
and
bound
mov
loope
push
pop
lahf
jmp
hlt
lret
loope
sti
add
push
cmp
loope
or
cld
data16
fbstp
int
adc
fs
inc
add
adc
ljmp
loope
ret
xchg
addl
jns
std
push
cmp
insb
rolb
repnz
xlat
mov
xor
xchg
fwait
jns
and
iret
lds
push
ret
jmp
pop
jno
test
scas
cmp
jmp
xor
insl
loope
or
icebp
mov
push
rolb
test
in
imul
lret
pop
std
adc
jo
cmp
stos
loop
pop
ja
or
lods
ret
mov
fs
loope
mov
dec
loope
adc
fists
adc
jl
out
je
loope
mov
mov
aaa
fldln2
push
pop
loope
je
pop
mov
cmp
loop
loope
outsb
xchg
enter
scas
loope
les
dec
loope
mov
add
loope
cs
or
out
iret
inc
mov
cltd
cmp
add
push
jno
jmp
adc
loope
clc
lods
insl
std
jmp
push
popl
xchg
xor
stc
mov
loope
lcall
jns
loope
jle
adc
movsb
inc
cmp
inc
stos
in
dec
psraw
xor
xor
sub
std
daa
fdivrp
ret
in
mov
sbb
pop
cmp
jmp
data16
int
add
and
mov
ja
les
rolb
jmp
adc
ret
int3
xchg
je
loopne
loope
mov
cmp
cld
lods
mov
add
push
loopne
andb
loope
mov
movb
loope
adc
pop
pop
push
jns
fs
cmp
jne
jg
out
adc
repz
loope
jb
add
pop
scas
xlat
push
cmp
jo
inc
mov
sub
fimuls
sbb
mov
ret
xor
loop
shl
mov
pop
push
push
cltd
dec
xchg
loope
inc
pop
cmpsl
sbb
xchg
adcl
sti
xor
gs
popa
jle
clc
jmp
loope
push
inc
pop
scas
js
loope
sub
sbb
mov
loop
out
lahf
loope
lret
push
ja
push
inc
loope
add
aam
mov
fldt
mov
loope
push
lea
sbbl
adc
cltd
push
cs
lahf
xchg
adc
jp
imul
sbbb
outsl
sbb
inc
addr16
into
jno
push
mov
adc
loop
movsl
in
ja
jecxz
repnz
fimuls
adc
mov
xchg
adc
or
push
cld
std
mov
pushf
test
xor
jno
icebp
jmp
lahf
loope
dec
mov
sub
cmpsb
pop
xor
shlb
loope
in
test
jp
loope
movsb
inc
aaa
out
mov
mov
sub
push
mov
mov
fsub
lcall
mov
and
and
jno
dec
add
sbb
jo
or
popa
dec
loope
push
test
std
pop
mov
loope
stos
add
cmp
std
ja
xor
dec
js
cld
jbe
jo
dec
call
jmp
loope
mov
sbb
xchg
lret
and
mov
or
mov
jne
fdivl
pop
mov
adc
loope
dec
cmp
fnstenv
push
xchg
js
lea
jecxz
adc
jae
jo
lock
andl
out
mov
xor
stos
fucom
icebp
mov
aaa
imul
cmpsl
inc
aad
cmp
repz
loop
or
inc
add
and
mov
dec
out
fadds
sub
ss
outsl
push
sbb
mov
cmpsb
jne,pn
push
test
xchg
pop
cmc
ljmp
ret
in
cli
sbb
rclb
push
push
and
sub
popf
pop
jb
ja
out
jb
aad
cli
in
adc
inc
cmp
test
loope
fiadds
lcall
jl
adc
jle
lods
loope
inc
in
sub
call
icebp
xor
std
mov
loope
and
loope
repnz
jo
sbb
lret
xchg
mov
fld
ss
fmul
push
loope
inc
fsub
mov
testb
es
push
aad
loop
sbb
loope
out
add
dec
add
outsb
or
cmp
paddusw
loope
xor
mov
pop
sarb
sbb
test
popa
mov
xchg
sarl
jmp
xor
stc
mov
mov
inc
add
mov
mov
pop
add
inc
js
sub
jecxz
stos
daa
mov
pop
jl
fsubr
pop
fldl
cli
xchg
ljmp
icebp
push
out
incb
sbb
xor
sub
in
scas
rclb
jecxz
and
jge
add
mov
mov
pop
cmp
pushf
add
mov
lods
cmp
and
xor
and
loope
xchg
clc
cmc
test
lods
shl
stc
lcall
sarb
xor
loope
stos
imul
popa
pushf
add
mov
mov
das
sub
pushaw
fcmovbe
loope
push
inc
push
shll
dec
loope
cwtl
lcall
mov
xchg
jge
imul
cmpsl
push
loope
mov
loope
mov
clc
adc
mov
ljmp
mov
jge
xchg
loope
push
imul
int
mov
in
inc
pop
inc
ds
lock
int
insb
out
pop
out
lea
pop
loope
jmp
movsl
fwait
leave
fdivl
push
sbb
mov
jo
add
mov
cmp
pop
jae
or
and
xchg
mov
stos
and
push
xor
sub
mov
push
gs
stos
jecxz
andl
fsub
fidivrl
int3
es
xchg
or
pop
popa
addr16
pop
jbe
rcrl
mov
mov
je
push
xchg
mov
jo
rcll
aam
push
xor
test
hlt
push
cmp
into
sub
inc
push
popa
shl
loope
ret
loopne
xchg
ljmp
int
jmp
and
and
es
mov
lahf
icebp
bound
sub
add
ljmp
add
fsubl
sarb
out
shl
push
and
and
jne
sub
loope
das
inc
scas
repz
mov
inc
push
pushf
aam
js
or
stos
push
imul
lahf
cmp
sti
inc
mov
aas
push
jne
lods
sbb
in
or
lea
es
enter
xor
std
cmpsb
loope
bound
hlt
sbb
loope
leave
fidivrs
pop
enter
stos
mov
pop
jecxz
adc
jmp
lock
inc
pushl
jmp
push
loope
insb
fs
cmp
inc
or
in
in
fiaddl
pop
loope
test
sbb
imul
out
jg
insb
imul
mov
sarl
iret
pop
popa
add
pop
ds
mov
push
lds
mov
jmp
cmpsb
and
sbb
cli
inc
movl
pop
fcompl
mov
mov
leave
loope
shr
out
icebp
test
cwtl
push
jge
repz
in
daa
adc
test
mov
push
lret
mov
lcall
loope
push
or
rcrb
imul
adc
adc
mov
and
and
xchg
enter
fsubs
insb
loop
rolb
jecxz
dec
aam
sub
loopne
idivl
mov
ss
mov
push
into
fcompl
sarl
xlat
mov
dec
scas
add
and
jl
or
jecxz
push
movb
push
ja
sbb
gs
push
in
imul
icebp
cmpb
or
loope
mov
test
rorb
mov
sub
xchg
testb
sbb
daa
imul
xlat
mov
mov
lods
mov
xchg
push
popf
in
inc
inc
sbb
xchg
push
lods
jne
loope
cmpsl
mov
cmpb
cmpsb
imul
dec
outsl
adc
push
or
mov
jns
stc
inc
aam
mov
mov
or
jae
cmpsl
rorb
lock
jmp
js
loope
push
pushf
cs
jle
dec
scas
pop
inc
xchg
jo
movsw
in
mov
cli
movsb
pop
pop
pop
mov
jmp
sub
xchg
add
enter
lock
sub
cmpl
cmpsl
aad
add
add
test
jns
ret
mov
repz
shrb
jl
pop
loope
lret
push
cmpsb
in
rorb
dec
xchg
cmp
test
imul
and
iret
pop
or
push
add
notb
insb
mov
xchg
mov
loope
jge
es
mov
loop
sbb
lock
mov
jmp
ret
divb
iret
scas
mov
loope
cltd
outsb
ljmp
loop
jns
adc
loope
mov
xchg
incb
out
xor
mov
cmpsb
hlt
insb
mov
lods
jmp
pop
clc
in
sbb
push
mov
and
loopne
cmp
push
add
push
data16
fs
hlt
add
mov
nop
cmp
int
ljmp
xchg
and
adc
aaa
dec
enter
fistps
call
push
stc
push
loope
enter
movsl
mov
mov
mov
and
and
je
stc
loope
dec
lahf
and
add
sti
pushf
dec
shl
ret
mov
loope
dec
cwtl
rolb
insl
mov
push
pop
sarl
and
aad
adc
iret
loope
inc
jle
fisttpll
push
loope
rorb
pusha
jecxz
insb
into
inc
shll
jmp
loope
addl
adc
ja
mov
push
stos
push
add
cli
cld
shlb
nop
add
out
outsl
aam
jns
jmp
icebp
in
dec
cmp
lods
xor
ja
inc
in
call
mov
cmpsb
test
arpl
test
lock
xor
mov
mov
xor
repz
das
cmp
mov
loope
and
mov
popa
enter
add
mov
mov
dec
shr
loope
pop
push
fldt
pop
call
je
das
adc
loope
repz
sbb
mov
loop
outsb
ficompl
mov
lahf
mov
jno
loope
sbb
inc
dec
jae
loope
xor
cmp
mov
popa
xor
jecxz
add
mov
cmp
out
loope
daa
inc
adc
aas
ss
movsb
call
cs
rcl
xor
push
adc
ret
inc
loope
and
cs
in
in
int3
lahf
cmc
cltd
ret
adc
pop
mov
sti
test
jns
loope
xchg
inc
jmp
push
mov
xor
lret
loope
add
inc
jmp
mov
adc
leave
adc
jbe
cmp
negl
sub
sub
mov
in
cld
sub
cmpsb
jmp
push
js
xor
mov
test
test
loope
mov
in
lock
adc
loope
rcll
sub
std
xchg
fldln2
fs
and
loope
add
sub
in
fsubr
out
pop
adc
adc
cli
push
ja
das
inc
ss
mov
pusha
adc
lahf
pop
mov
loope
pop
dec
sub
mov
mov
decl
aad
add
xor
loop
imul
lea
jo
push
lcall
push
loope
repz
xchg
pop
adc
ds
aas
jmp
movsl
insb
out
lock
push
ja
rcrl
mov
mov
adc
dec
out
ret
inc
loope
les
jbe
jge
test
neg
fucomp
mov
daa
lea
cli
xchg
add
mov
cwtl
lahf
imul
jp
push
in
std
mov
cmp
and
insl
sub
mov
adc
xchg
repz
sub
cld
mov
inc
loope
incb
frstor
loope
clc
call
adc
mov
add
mov
in
icebp
xchg
arpl
mov
jne
subb
sub
and
cmp
jns
or
leave
test
loope
push
rorl
ss
jbe
adc
out
loope
jecxz
inc
fildll
push
movsb
ret
es
loope
push
ss
packssdw
mov
push
lock
inc
gs
fidivrs
inc
mov
inc
jmp
leave
and
loope
cs
sub
loope
fwait
xor
out
loopne
loope
rolb
test
lcall
jne,pt
call
das
jge
lods
testb
mov
or
imul
es
loope
rcrl
adc
xchg
aad
sbb
jnp
mov
loope
adc
scas
fnstenv
ret
test
fsubp
loope
div
xor
loope
inc
bound
push
cmp
rcrl
std
jmp
cld
mov
mov
loop
and
rclb
adc
das
inc
pushf
int
inc
cmpsl
inc
mov
scas
mov
lahf
rcr
push
das
in
clc
loope
cmc
sub
les
add
and
pusha
loope
push
imul
insl
fcompl
add
mov
inc
fidivl
in
xchg
addr16
mov
rcrb
lcall
lods
addr16
in
adc
xchg
xor
hlt
loope
cmp
and
lcall
xor
fs
int3
loope
xchg
call
leave
rolb
dec
int
rol
les
sub
inc
int3
icebp
pushf
leave
adc
push
dec
mov
gs
mov
jo
cmp
lods
loope
mov
push
sub
push
mov
sbb
insb
add
or
js
loop
add
jg
ljmp
mov
xor
xchg
push
dec
jns
and
pop
jno
loopne
add
sbb
mov
scas
loope
call
push
mov
andb
cmp
loope
fwait
push
add
int3
fldenv
test
sbb
cmp
std
jecxz
ss
cmp
xchg
in
mov
shll
loope
fistps
jmp
mov
outsb
es
mov
stc
jns
sbb
rol
loope
jmp
daa
aaa
jg
aas
cwtl
loope
xor
xchg
push
loope
out
bswap
or
push
popa
shrl
aad
inc
pop
dec
adc
push
loope
push
int3
pop
cmc
xor
xchg
loopne
cmp
cltd
inc
insl
jae,pt
cmp
pop
loope
popa
and
inc
loope
mov
adc
jecxz
sub
imul
jno
push
lret
add
int
loop
push
mov
push
test
shl
pop
pop
dec
jp
stc
and
lock
add
adc
adc
jmp
dec
cmp
nop
adc
cmpsl
popa
sbb
and
or
mov
loope
mov
sub
nop
or
mov
jecxz
aad
int3
sub
cmp
lret
pusha
data16
aaa
movl
in
sub
loope
and
or
push
push
rclb
and
fisubs
dec
cs
ss
aas
lods
xchg
into
or
jns
lret
mov
and
hlt
pop
movsl
xchg
sahf
push
push
sbb
jo
mov
call
gs
loope
dec
add
jg,pt
clc
inc
inc
popa
in
xor
test
mov
push
outsb
cmp
mov
pop
movsb
or
icebp
frstor
xlat
bound
das
jbe
stos
sbb
pop
mov
or
out
test
loop
mov
lahf
push
jmp
decb
notl
fadds
loope
mov
mov
mov
icebp
mov
out
loope
outsl
scas
jbe
lahf
mov
cmpsl
sbb
leave
dec
adc
pop
mov
out
cmpl
cmp
dec
shlb
rcrb
push
pushf
loope
cmp
jbe
cmp
daa
sub
pop
xchg
cmp
mov
loop
lret
cmp
add
push
mov
xchg
insb
in
mov
xchg
fcoml
call
mov
aam
xor
push
mov
in
mov
mov
int
dec
pop
in
ret
push
xor
lret
cmpsl
ljmp
sarl
lods
stos
push
loop
scas
mov
mov
ja
loopew
rolb
or
push
loope
jecxz
js
ljmp
xchg
mov
jb
lock
add
jecxz
scas
in
out
ret
loope
and
xchg
and
stos
out
adc
jmp
mov
sbb
push
clc
orl
sub
or
cmpl
mov
push
notb
iret
into
unpcklps
mov
lahf
adc
subl
pusha
add
lock
dec
call
ss
mov
popa
pop
jns
sti
loope
jb
hlt
nop
das
pop
cli
loope
outsl
test
mov
push
jp
outsb
mov
enter
dec
sbb
mov
loop
cmp
add
pushf
stc
nop
clc
scas
xchg
pop
ja
cmp
push
loop
lods
loope
pop
push
mov
outsb
cmp
nop
insb
mov
jnp
xor
jb
loope
popf
rorb
fsubr
loope
out
js
and
sbb
stos
subl
sub
lret
lret
mov
imul
xlat
jmp
xor
adc
jmp
mov
ljmp
loope
sub
inc
shl
jne
sbb
and
mov
sub
cmp
jle
ret
dec
out
or
loope
andl
loope
fdivrs
aaa
insl
xor
loopne
cmpsb
sub
int
jmp
in
mov
dec
rclb
push
push
xchg
or
in
fldenvs
jmp
cwtl
int
test
jno
add
sub
or
int
jns
cmpsl
inc
icebp
jmp
jb
xchg
loope
aad
out
mov
ret
loope
daa
jne
int3
lods
in
loope
lea
add
stos
cmc
je
or
lds
andb
test
aam
cmp
add
pop
popa
or
dec
adc
or
xchg
cmp
push
xlat
arpl
xor
and
xchg
mov
sti
prefetch
xor
out
loope
push
or
pop
push
push
sti
loope
cli
cmp
dec
bound
outsl
mov
mov
lods
inc
pusha
bound
xchg
loope
mov
mov
mov
insl
cs
loope
inc
test
arpl
adc
into
adc
gs
ret
mov
insb
loope
and
enter
stc
dec
adc
add
call
cs
sub
clc
stc
jmp
and
cli
loope
data16
fldcw
and
loope
xchg
mov
sub
sbb
push
inc
sbb
shlb
test
xor
jcxz
or
add
dec
cmp
pop
sub
in
iret
les
push
shlb
subb
fsubp
dec
mov
jle
jo
push
pushf
add
jnp
loopne
or
xchg
cmp
mov
add
pop
mov
movzwl
cmp
jno
lock
popf
enter
jecxz
ljmp
xor
stos
pop
jnp
sub
jbe
adc
or
imulb
cli
dec
loope
push
mov
pop
mov
fidivl
loope
mov
cmpb
loope
dec
pop
dec
lret
jmp
scas
cwtl
add
mov
rcrb
dec
je
jae
cmpsb
mov
arpl
pop
lcall
mov
fnstcw
loope
mov
mov
add
test
out
cmp
outsl
dec
jp
lock
add
xchg
pop
in
push
add
push
ds
pop
pushl
mov
iret
mov
cwtl
enter
ret
std
cs
inc
xor
push
loope
shll
jnp
addr16
and
hlt
stos
insb
adc
scas
outsb
inc
jp
loope
pop
ret
int3
sub
mov
loope
sub
addr16
xchg
dec
scas
aas
xor
push
lahf
loope
shlb
jg
aaa
and
and
out
mov
pop
adc
xchg
add
out
mov
sbb
jae
and
loope
jecxz
push
push
ficoml
imul
add
ljmp
inc
pop
mov
sbb
lea
sbb
notl
inc
mov
sbb
sub
xchg
repz
xor
or
dec
loope
cwtl
fldcw
and
jno
pop
mov
loope
cmc
enter
loope
decb
mov
cmp
ljmp
jne
movsb
hlt
psraw
adc
cmpb
loope
push
or
pop
std
mov
inc
movl
sbb
in
cmc
lea
clc
mov
iret
fsubs
repnz
aad
and
or
cmp
mov
rcrl
and
xchg
cmp
mov
lock
test
jmp
cmp
jo
cltd
stos
mov
mov
push
loop
ds
shl
push
ss
cmc
mov
subl
or
rcll
cmp
jmp
les
jecxz
dec
xchg
popa
and
jne
enter
dec
bound
mov
adc
sahf
jne
adc
cmp
popa
xchg
in
sarb
loope
push
mov
loope
and
dec
xchg
jno
sub
les
mov
hlt
dec
sbb
jnp
insl
dec
mov
xor
mov
mov
lock
dec
loope
xchg
leave
fisubrl
sbb
out
loope
bound
mov
or
outsl
ds
jg
push
add
cmpl
ret
cmp
jg
loopw
loope
mov
sbb
xor
add
arpl
sub
or
push
loope
stc
xor
lock
fisubs
push
imul
jle
testb
jecxz
lods
loope
fsts
gs
cmp
inc
loope
inc
push
mov
mov
je
test
push
sub
mov
cmc
sbb
loope
lcall
jecxz
pop
jmpw
das
cli
fstp
pop
loope
push
in
pop
cmpsb
xchg
add
xchg
in
xchg
pop
push
mov
add
pop
jnp
loope
or
in
cmp
sub
add
outsb
jmp
xor
cmp
push
push
adc
mov
inc
push
push
add
loop
jno
adc
add
add
sbb
out
outsb
enter
xchg
add
loope
sti
sahf
sbb
addb
test
int
jp
jae
cld
loope
and
mov
cli
lods
pop
push
xor
cmpl
cmpsl
lret
dec
mov
repnz
int
sarb
and
imul
aam
dec
xor
pusha
jns
push
cli
and
icebp
jl
xor
insl
ds
jmp
pop
stos
roll
stos
jae
sub
test
in
jmp
aas
jmp
insb
inc
loope
xchg
imul
pop
inc
mov
stos
cltd
cmpsl
mov
push
test
sub
aam
repnz
loopne
ret
xor
loope
jle
ljmp
xchg
xchg
and
loop
stos
loope
and
mov
enter
mov
cld
ja
mov
loope
outsl
and
ficoms
ja
adc
aad
sbb
repz
in
mov
gs
xchg
xchg
ss
popf
xor
mov
mov
cmp
test
and
sti
jecxz
push
loope
add
leave
xor
xchg
mov
lods
mov
dec
int
inc
loope
or
lock
loope
testl
popf
int
ficoml
lret
jo
jne
or
pop
pop
lea
push
rcl
scas
sub
jg
inc
out
rorl
xor
pop
ljmp
loope
and
add
cmp
dec
shl
loope
dec
iret
sbb
outsb
jae
or
stc
popa
pop
scas
pop
jmp
popa
mov
jns
mov
sub
aas
stc
sar
or
mov
jne
loop
xchg
iret
jb
addr16
adcl
mov
stc
in
lret
in
mov
pop
rcrb
imul
xchg
mov
addr16
loope
imul
in
sbbb
stos
fdivrl
repnz
repz
push
fwait
cmpsl
sub
out
push
int3
xlat
test
cmp
add
in
das
loope
rcrb
and
jbe
ficoms
popf
daa
sti
mov
add
outsb
fwait
xchg
add
loope
dec
jmp
in
sub
push
lock
arpl
lock
add
in
add
xor
xchg
shll
ret
sbb
lea
or
outsb
push
shlb
mov
int
mov
loope
mov
mov
loope
leave
and
popa
mov
sidtl
test
add
xor
adc
repz
or
mov
mov
bound
nop
fwait
and
xor
in
and
push
loope
adc
mov
sarb
loope
xor
fistpll
mov
add
xchg
dec
sbb
outsl
dec
inc
mov
lock
sub
in
call
cmp
loopne
mov
bound
pop
and
xor
insb
dec
loope
call
int
loope
inc
lahf
xchg
or
add
or
arpl
loope
movsb
or
mov
imul
cmpsl
ret
orb
test
dec
jecxz
cmp
scas
loope
jp
enter
mov
sbb
mov
add
add
inc
xchg
inc
loope
xor
cmp
xor
testb
aas
push
fcoms
jp
pop
mov
cmpsl
sub
fsubr
mov
push
adc
js
lcall
jl
mov
in
mov
dec
ljmp
push
xchg
imul
cmc
shl
icebp
dec
jno
popf
inc
popa
dec
fcoms
jmp
sbb
stos
loope
or
xchg
rclb
sbb
scas
and
mov
push
arpl
loope
and
or
sbb
in
xor
mov
jmp
or
add
xor
scas
push
sbb
daa
icebp
cmpsl
test
es
and
das
cltd
loope
fadds
pop
add
push
push
jecxz
flds
out
push
sbb
ja
xorl
mov
lods
aaa
mov
mov
js
sub
mov
xchg
clc
adc
imul
jnp
sub
sub
into
in
loope
inc
imul
sbb
cltd
std
mov
loope
and
mov
inc
outsl
loope
lock
jecxz
insl
or
xor
sub
mov
aad
add
fs
dec
cmp
mov
in
pop
repnz
enter
add
and
mov
je
mov
mov
push
in
std
scas
lcall
jbe
push
sarb
and
mov
cmp
fcomi
inc
lret
fcoml
leave
loope
jne
daa
movsl
dec
mov
adc
mov
leave
loope
call
fistps
add
sbb
ljmp
push
test
ja
loope
pop
jno
add
adc
cwtl
test
cli
enter
je
mov
jmp
aad
arpl
fdiv
inc
insb
cmp
loope
jl
in
dec
sbb
or
sbb
arpl
movsb
add
rcr
roll
jmp
es
daa
insl
popf
rclb
shlb
ja
bswap
repz
std
loope
pop
lock
sub
loope
sub
mov
and
push
sbb
mov
test
loope
push
or
jno
push
jo
int3
stos
sub
adc
and
fnsave
jo
push
test
out
ret
inc
xchg
jno
mov
mov
sti
fs
ds
lods
push
or
push
or
jo
adc
adc
mov
sbb
fnstsw
push
xchg
lahf
jl
loope
or
loope
cmp
push
push
mov
rolb
inc
add
outsl
shl
pop
imul
test
sti
out
push
cmp
inc
inc
pop
jo
pop
jp
insl
loope
sbb
rorb
popa
shl
sub
add
stc
inc
and
in
repnz
sbb
dec
mov
cmp
and
dec
jo
mov
loopne
and
push
lret
mov
mov
adc
jmp
mov
rcll
loope
mov
mov
rolb
mov
xor
lods
nop
jns
loopne
sub
ss
jle
push
pop
js
mov
testl
loope
in
in
pushaw
pop
icebp
mov
add
lock
popf
je
or
std
xor
jo
or
repnz
lahf
int3
outsb
sub
fsts
aas
cmp
mov
adc
fwait
mov
pop
loope
je
div
push
loope
dec
xor
sub
inc
sbb
and
in
arpl
xchg
std
orl
jge
lahf
test
aam
loope
mov
das
xor
rcll
or
jg
cwtl
cmp
xor
loope
mov
push
lahf
mov
jg
out
mov
iret
stos
inc
loope
iret
ds
jo
aad
scas
pop
add
nop
ljmp
in
in
cltd
lcall
push
add
cmpsb
sub
lret
adc
clc
mov
rorb
je
and
and
out
popf
add
gs
mov
sub
jecxz
jne
shrb
test
loope
inc
cmp
adcb
loope
incb
jge
cmp
movsb
inc
shll
or
push
icebp
and
lock
dec
loope
outsb
fisubrl
stos
jle
xchg
outsl
clc
in
push
imul
popa
roll
lods
add
xor
les
xchg
push
and
loope
lods
lods
cwtl
jbe
inc
xor
lds
xor
data16
add
sbb
jne
dec
pop
fstpt
xchg
ret
jbe
cmp
and
loope
or
xchg
loope
cmp
loope
outsl
cmpsl
mov
sbb
popa
sbb
les
mov
in
mov
lods
pop
scas
shrb
mov
sub
cltd
add
shr
cmp
bound
push
loope
add
sub
cmc
ficompl
sub
push
pop
addr16
imul
dec
mov
cmp
xlat
fimuls
mov
and
sub
ret
cmc
push
ja
jecxz
fndisi(8087
sub
sbb
in
jge
fcom
xchg
jp,pt
mov
mov
test
loope
inc
xor
pop
insl
inc
and
xchg
loope
clc
pop
mov
rclb
outsb
lret
out
push
sbb
punpckhdq
sbb
icebp
mov
fs
aaa
mov
adcb
pop
popf
lret
test
jb
int
call
call
ds
sub
loope
xchg
addr16
mov
in
insb
sub
icebp
add
fisubs
and
xor
dec
inc
je
push
and
popa
adc
cmpsl
loop
add
xor
decb
lods
int3
in
sub
mov
nop
jecxz
mov
xor
in
jg
daa
mov
jmp
vmovq
xchg
subb
rcrb
stc
adc
jecxz
mov
cs
cmpsl
sub
mov
aaa
ficomps
popf
adc
mov
loope
in
push
xchg
push
push
je
xchg
inc
adcb
rcl
mov
sub
stos
mov
jle
imul
loope
and
pop
mov
pop
mov
mov
push
jb
out
cmpsb
pop
xlat
stos
loope
outsb
xchg
leave
jno
or
and
mov
pop
mov
inc
es
into
ret
mov
mov
cmp
sub
cs
inc
sbb
and
dec
adc
jns
mov
sbb
repnz
scas
jae
dec
scas
pop
gs
mov
xchg
pop
lock
add
cltd
inc
rclb
lods
jno
pop
test
repz
mov
sbb
int
cmp
ret
outsb
and
lahf
leave
inc
and
loope
sar
stc
push
fadds
mov
insb
fs
jmp
fisttps
shlb
jg
mov
decl
jmp
test
jnp
rcr
pop
mov
sub
mov
dec
push
mov
loop
jo
aam
movsl
out
pop
jmp
xor
loopne
and
dec
sbb
sar
imul
mov
loope
das
icebp
push
int
and
fiaddl
nop
cmpsl
movsb
sub
dec
xchg
stc
loope
shrl
adc
loope
faddl
out
into
xchg
xor
lods
mov
ss
lcall
sub
sbb
xor
sbb
mov
loope
push
cld
les
insl
repz
adc
cmc
sub
out
notb
and
sbb
pop
repz
mov
loope
stos
fs
mov
cmp
mov
cmpsb
imul
orb
pop
std
push
and
jg
add
loop
dec
sbb
fucom
sub
push
ror
xor
add
jae
in
fldenv
loope
xchg
fimuls
arpl
mov
stos
or
in
lock
imul
pop
dec
les
xor
test
loope
out
lret
jns
ret
loope
shrb
bswap
cmpsb
pop
push
cs
push
imul
sbb
neg
loope
adc
mov
push
cmpsb
mov
loope
das
out
mov
pusha
imul
jmp
cmc
sbbb
sti
sub
fs
js
push
and
movsb
push
loope
nop
insb
jg
inc
sub
cmp
adc
ljmp
or
sbb
pop
add
es
push
dec
xchg
cmp
mov
test
loope
mov
xchg
xchg
and
or
inc
aaa
adc
push
ficomps
loope
inc
out
ja
lods
xchg
mov
sbb
pop
es
fwait
lods
std
call
in
scas
movsl
js
mov
mov
jge
bound
cmpsl
jnp
test
sarb
call
pop
shl
std
xor
das
sbb
loope
xlat
jecxz
rolb
sub
movsb
bound
hlt
mov
xor
sub
lds
rorl
ret
mov
int
leave
fildl
jmp
in
lods
xor
insl
adc
out
ds
dec
sbb
pop
inc
addb
fsubr
in
loope
adc
cmpsl
and
loope
data16
inc
in
loope
mov
mov
stos
mov
loope
in
inc
insl
test
inc
scas
or
sub
fndisi(8087
cs
ret
push
push
pushf
pop
insl
sub
loope
lods
arpl
into
pop
adc
cmp
sub
mov
mov
push
fbld
mov
repnz
sub
daa
mov
mov
arpl
xchg
push
nop
inc
and
lret
and
push
jle
shlb
sbb
push
lods
out
scas
in
jmp
loope
and
jp
xchg
add
daa
test
testl
js
gs
mov
fldl
pushf
jl
shl
or
adc
movsb
dec
adc
loope
cmp
mov
nop
paddsb
loope
lods
and
fisubrs
xchg
or
xorb
leave
sbb
test
xchg
xor
adc
and
lea
and
shl
aas
test
loopne
push
inc
shll
mov
mov
push
cmp
sbb
adc
fcomps
loope
cs
inc
cmp
scas
pop
mov
and
jp
imul
fdivs
mov
addr16
les
jmp
or
xor
insb
dec
jmp
test
add
cmpsb
sbb
std
ret
cld
mov
sahf
sarb
stos
cmp
and
add
push
pop
inc
sub
movsb
inc
gs
mov
or
fs
ret
out
sub
stos
cld
or
xlat
iret
mov
aaa
jo
adc
mov
in
dec
lret
push
mov
dec
js
xor
test
xchg
pop
sbb
daa
fwait
dec
jmp
notl
ljmp
inc
jge
repnz
mov
push
out
pop
push
loop
jecxz
loope
test
imul
push
jle
pop
jne
arpl
out
in
cmc
mov
mov
xchg
in
cmp
loope
mov
or
mov
sbb
aam
loope
xlat
in
lods
and
loope
outsb
outsl
popf
or
mov
arpl
icebp
fiaddl
add
inc
std
stc
ljmpw
andl
jge
mov
jnp
sub
ss
scas
pop
mov
mov
sbb
dec
into
rorl
add
hlt
pop
xchg
jbe
mov
ret
xor
cmp
and
mov
cmp
push
cltd
xchg
adc
ss
mov
push
pusha
ret
mov
aad
dec
cmp
int3
imul
mov
mov
loope
xchg
popf
push
sbb
decl
repz
inc
sbb
sub
lea
push
sub
inc
inc
loope
movsl
pop
mov
add
popa
pop
jl
mov
and
jmp
sub
adc
inc
rclb
jmp
std
jecxz
push
pushl
push
imul
in
inc
data16
dec
sahf
xlat
notb
mov
rorb
popa
cmp
pushl
jg
jno
loope
fcomps
push
loope
pushf
stos
cwtl
sub
imul
push
sub
je
call
jne
popf
jnp,pt
sti
jmp
nop
mov
cld
xor
mov
jo
clc
out
sarb
shrb
jne
lret
push
mov
clc
xchg
cmpsl
stc
sahf
add
nop
jo
inc
dec
orl
push
fsub
jg
daa
pop
dec
into
inc
loope
aad
sbb
lods
jecxz
lock
jae
repz
mov
insb
loope
orl
decb
push
loope
cwtl
movsb
mov
outsl
shl
addr16
in
jne
in
adc
out
fwait
inc
cmc
loope
fimuls
cwtl
bound
jmp
aam
loope
pop
fdivrl
add
mov
in
and
or
jo
push
jge
fsubl
loope
xor
mov
loope
into
xchg
jecxz
cmp
aam
lahf
nop
rorb
cmc
cmp
inc
mov
ret
jae
inc
enter
in
inc
loopne
data16
lret
adc
rorb
xchg
add
mov
xchg
jmp
rcr
dec
loope
stc
std
stos
sbb
xor
jp
out
cltd
mov
add
adc
arpl
aaa
loop
xchg
dec
mov
stos
fwait
ja
in
jae
jo
ret
mov
cwtl
in
mov
cs
mov
fildl
ds
add
mov
fisubrs
call
fdivs
mov
ret
jl
cmc
pop
push
shlb
sbb
jnp
jl
lock
fcmovnbe
lret
outsb
sti
jmp
or
jb
push
test
adc
inc
out
out
les
sbb
enter
fstpt
int
mov
jns
dec
pop
in
shr
loope
jmp
imul
rorb
mov
adcl
mov
dec
leave
mov
sub
outsl
sahf
pop
loope
inc
push
cld
ljmp
xchg
ret
loope
test
pop
xor
sub
divl
cmp
call
loope
fsubs
mov
inc
scas
sti
loop
cltd
cmp
and
pop
fisttpl
scas
push
adc
dec
or
jge
gs
cmp
aaa
cmc
mov
ret
mov
sarl
fwait
add
jns
shlb
xorl
adc
testl
jmp
test
ljmp
je
and
ja
data16
fisttpll
adc
and
and
es
xlat
js
adc
in
loope
inc
cmp
push
dec
cmp
cs
push
cmp
loope
add
cld
loope
xchg
test
scas
sti
imul
loope
mov
mul
xor
dec
mov
mov
loope,pt
fsubrp
xor
mov
lret
roll
loope
inc
pop
mov
loope
cli
lds
test
dec
lock
pop
cmp
push
lods
loope
inc
neg
int
dec
mov
stos
jg
dec
bnd
jmp
rcrl
arpl
adc
loope
xor
stc
shufps
ficomps
out
loope
int
mov
addb
jmp
jo
cmpsb
jmp
mov
stc
loope
inc
xor
fnsave
pop
jg
add
mov
aaa
stos
push
out
sti
jno
and
loope
xor
add
loope
das
xor
imul
js
ds
push
shlb
jmp
ret
xchg
sbb
nop
ret
mov
hlt
or
sbb
mov
sbb
pop
jmp
loope
lcall
loope
xorl
xlat
loope
stos
cmpsl
jae,pt
ja
loope
jmp
icebp
adc
sub
mov
jle
inc
lock
xchg
jmp
or
pusha
mov
adc
and
das
dec
insb
loope
sub
pop
out
popf
loope
push
cmp
das
mov
loope
sub
clc
aaa
loope
fsubrl
jmp
mov
lods
lock
and
loopne
jmp
loope
pop
push
inc
in
jb
nop
add
rcll
lret
ljmp
jae
and
arpl
iret
or
mov
lret
loope
orb
cmp
jne
rclb
or
fwait
add
ja
andl
call
outsl
mov
add
mov
jbe
ja
push
cltd
je
loope
xlat
pop
loop
sbbl
jbe
dec
pop
out
jg
inc
inc
add
mov
std
jmp
or
clc
mov
mov
insb
sbb
std
fidivrs
loope
push
scas
push
push
inc
loope
mov
stc
aaa
ljmp
mov
mov
cmpb
xor
rcrb
jp
inc
and
jb
jns
incl
fsubr
leave
mov
push
mov
inc
jno
test
mov
out
ss
insb
iret
jns
xchg
or
mov
sub
shll
ja
leave
push
sub
leave
xchg
jl
in
jge
sarb
je
pusha
sbb
sub
adc
mov
push
out
mov
sbb
je
loope
push
jns
xor
cltd
movsl
loope
xor
inc
fidivrl
jbe
insb
pop
aad
or
pop
loope
in
adc
sarb
in
cmpsb
inc
ds
leave
shlb
push
and
xor
mov
mov
push
lods
jle
push
pop
out
jg
packsswb
aas
push
lret
loope
std
or
incb
mov
int3
or
dec
jo
pop
lock
inc
in
pop
mov
loope
or
dec
loope,pn
jno
push
mov
sbb
pop
iret
push
mov
repnz
cmc
daa
call
mov
fndisi(8087
pop
add
les
call
loope
std
je
xchg
mov
pop
fs
dec
in
loope
fmull
adc
icebp
jo
data16
fsubrp
aad
insl
popa
ljmp
add
movsl
das
xor
in
pop
in
jns
pop
stos
mov
push
xchg
loope
push
dec
fs
aas
loope
fmul
es
or
pop
sarb
sarb
imul
enter
lds
adc
in
jle
mov
push
add
lret
aaa
loope
into
cmp
mov
scas
jle
out
mov
repz
and
mov
jmp
push
loope
xor
adc
dec
data16
mov
xor
mov
cmpsl
fidivs
imul
push
icebp
jp
sbb
jmp
adc
orb
data16
lea
outsl
and
xor
add
push
mov
cmp
mov
sbb
jecxz
loope
jle
dec
pop
std
movsb
add
bound
mov
loopne
iret
ret
insb
setbe
imul
add
scas
int3
mov
test
mov
add
or
jg
push
xchg
icebp
loope
imul
pop
cli
loope
pop
or
xchg
loope
mov
sbb
loope
shrb
dec
inc
push
pop
mov
aad
fistpl
daa
loope
sbb
sbb
jg,pn
cmpsl
aad
loope
test
rolb
inc
adc
xor
cmp
dec
nop
mov
lahf
iret
fidivl
out
dec
push
std
ret
dec
jmp
gs
push
jecxz
fsubr
inc
out
loope
jb
mov
cs
enter
push
sarb
or
ja
loope
sub
pop
repnz
and
loope
dec
inc
clc
and
fsubp
mov
adc
dec
loop
mov
fbld
xbegin
pop
xor
rcl
out
leave
xchg
shlb
fidivrl
fs
push
jecxz
loope
loopne
sbb
jge
jo
gs
adc
xor
popa
aaa
loope
int
fstps
in
add
loope
xchg
loope
sarl
pop
cltd
sbb
ja
leave
cmp
xchg
lods
shr
sti
mov
out
pop
cmpsl
sbb
shlb
cmc
dec
aad
push
jl
test
fisubl
xchg
xchg
cli
fbld
stc
loope
push
mov
cmpsb
and
loope
push
jl
icebp
or
test
add
jg
loope
push
loopne
in
loope
xchg
iret
lret
lea
loope
outsl
adc
aad
jae
loope
mov
fs
mov
sbb
ret
test
lock
loopne
push
in
sub
and
loope
mov
push
loope
inc
das
into
call
out
sbb
xlat
jmp
rcrl
lret
xchg
cmpsb
inc
loope
andb
loope
push
fmulp
xchg
push
inc
pop
bound
or
loope
je
test
push
movsl
inc
jmp
inc
xlat
push
cmp
xor
pusha
dec
loope
mov
ret
jecxz
pop
inc
shr
ret
inc
pushl
in
xchg
xchg
in
adc
imul
mov
iret
loope
fdivrp
das
dec
int3
inc
inc
sbbl
cmpb
pop
or
push
jmp
dec
loope
aam
in
adc
dec
or
inc
push
or
jle
jp,pt
shrb
adc
imul
sub
jmp
mov
ret
inc
lods
jmp
shr
pusha
shl
dec
or
cmp
test
stc
or
pushf
loope
push
call
into
jne
std
loope
sub
daa
adc
xchg
loope
repz
push
test
ljmp
into
push
movsb
xchg
loope
outsb
stos
nop
mov
jb
loope
fldl2e
and
test
and
dec
orl
inc
sti
fsin
mov
shrb
ljmp
add
pop
std
loope
push
pushf
adc
out
rolb
fsts
fucomp
arpl
rcl
test
jmp
loope
fstpt
mov
shl
popa
out
sti
push
inc
lods
xor
leave
mov
cwtl
pop
sbb
test
movsb
dec
and
pop
rorb
sbb
push
loope
pop
data16
adc
or
ljmp
cmp
loope
sahf
stos
int3
cmpsb
repz
xor
jo
jecxz
xchg
out
sub
out
adc
jl
inc
ds
push
loope
ja
xchg
int
jmp
icebp
in
test
push
out
pusha
lret
mov
xchg
jnp
test
mov
notb
loope
pop
pushw
pop
cs
adc
fisubs
adc
dec
incl
jno
jb
and
dec
popf
push
add
rcl
movsl
adc
sub
out
shlb
sub
and
lods
sar
jg
add
mov
shrl
pop
pop
in
mov
jmp
stos
shl
pop
inc
fwait
ret
es
push
cli
jnp
mov
inc
or
add
jp
or
loope
inc
enter
outsb
out
inc
loope
cmpsb
lret
pop
or
jae
cmp
cmp
jg
idivb
sub
push
loope
xchg
or
stos
imul
dec
add
jae
jo
mov
cli
sbb
data16
inc
notb
mov
movsb
out
adc
ja
xchg
bound
aad
loop
cmp
cmp
mov
data16
andb
push
sbb
stos
push
xor
loope
mov
lock
xor
js
popf
in
pushf
pop
in
inc
mov
cmp
lret
outsb
cmp
in
ljmp
sub
pusha
xchg
popf
and
mov
add
push
lock
sub
mov
jge
dec
rcrl
lcall
mul
jg
inc
xor
xchg
dec
in
mov
mov
and
scas
test
jns
bound
ret
push
sub
rcll
mov
and
flds
lret
xchg
loope
pop
imul
adc
fsubp
ljmp
inc
std
mov
sbb
xor
and
sti
inc
mov
iret
daa
pop
outsl
cltd
adc
mov
push
xchg
and
sbb
push
push
arpl
jo
adc
stos
out
iret
imul
inc
inc
rolb
adcb
scas
pushf
loope
in
and
outsb
test
mov
push
or
adc
call
mov
data16
repnz
inc
push
xor
loope
sub
fisubrl
or
lret
fstpt
inc
in
sub
loop
mov
inc
shr
movsl
out
sti
push
loope
push
add
loope
daa
add
sub
rclb
mov
ljmp
jmp
lret
mov
fimull
sbb
xlat
decl
daa
push
pushf
loope
sub
addl
pusha
pop
in
insl
aaa
gs
roll
sub
jg
adc
jmp
outsb
push
mov
sub
lcall
mov
jecxz
mov
cmpsl
stc
sub
iret
xor
int
mov
sbb
cs
loope
into
sub
insl
mov
pop
cmp
loope
inc
cltd
je
enter
inc
sub
mov
loope
adc
nop
loope
cmp
sub
jle
loope
test
rorl
iret
in
lock
inc
xchg
icebp
jmp
daa
dec
scas
jo
mov
out
aad
lret
mov
mov
enter
dec
sti
repnz
push
sbb
mov
cmp
cwtl
imul
test
scas
icebp
jae
call
lods
add
cmp
and
xchg
add
sub
loope
divl
add
out
xor
loope
shlb
push
jne
mov
adc
sbb
and
add
or
push
aaa
nop
xor
loope
decl
loope
pop
sbb
dec
lods
ds
push
loope
adc
jae
in
lods
scas
xor
sbb
bound
loope
xchg
lahf
aad
push
and
shl
add
sbb
sbb
jl
loope
cmp
pop
hlt
lods
push
cmpsb
mov
and
stos
lea
in
pusha
mov
fidivs
add
sbb
mov
idiv
stos
lock
and
mov
sub
sub
and
jns
xor
inc
in
inc
dec
andb
fwait
loop
adc
add
fcmovne
loope
xchg
cs
pushf
xor
cmpsb
ja
out
jg
sub
push
rcr
nop
shll
add
adc
aad
mov
testl
mov
je
loope
repnz
rorb
pop
in
aam
daa
popf
negl
fcoml
push
loope
int3
test
lock
fucomip
and
mov
fs
popf
jbe
mov
scas
addr16
jge
loope
insl
dec
sbb
jns
loope
push
adc
loope
call
inc
fsubrs
cmp
loope
push
js
movsb
mov
mov
mov
dec
fstp
push
loope
push
lds
sbb
dec
pusha
outsl
loope
sub
add
cmp
loope
mov
add
mov
shr
test
push
jl
fsubs
pop
mov
xchg
loope
add
jge
inc
iret
call
test
push
xchg
add
dec
shlb
addl
fdivp
mov
adc
lcall
or
loope
int3
daa
lods
cmpsb
vmread
loope
sub
mov
jns
outsl
mov
out
dec
add
mov
loop
sti
in
jno
or
imul
aad
inc
loope
mov
out
test
dec
loope
cld
lcall
cmp
imul
mov
ljmp
loope
pop
loopne
dec
jbe
jmp
jge
or
vcompresspd
loop
pop
mov
cld
add
sbb
scas
mov
jp
xlat
and
xor
shll
sahf
cmp
ss
ljmp
shlb
jmp
jnp
loope
in
loop
enter
xor
inc
subl
jg
pop
cltd
cmpsb
and
jbe
push
loope
aaa
push
mov
xchg
loope
mov
mov
loope
xor
pop
loope
scas
lret
hlt
pop
fsub
add
push
loope
aam
cmp
sbb
cvtpi2ps
hlt
jg
ret
clc
mov
jno
mov
pop
sbb
inc
jmp
jecxz
lahf
in
add
imulb
movsb
loope
mov
xchg
jge
popa
inc
and
scas
pop
sub
loop
and
ja
stc
adcl
mov
mov
jmp
out
push
scas
push
repz
and
loope
rol
aam
jle
or
cmp
out
push
fcoml
push
loope
mov
mov
shlb
lret
jns
mov
sbb
loope
cmpsb
cmp
inc
fcoml
or
cs
mov
test
cmpsb
loope
and
sub
inc
pop
adc
jo
push
mov
dec
out
add
mov
icebp
loopne
jmp
inc
loope
jp
movsl
xor
fistps
or
les
xchg
adc
sar
dec
out
loope
sbb
and
cli
add
fldl
loope
out
sbb
shlb
mov
in
jge
mov
rclb
out
mov
scas
loope
addb
sub
add
les
or
jb
push
adc
cmp
sub
sbb
cs
loope
clc
sbb
aas
push
mov
jns
loope
xor
in
stos
pusha
in
pop
outsl
jmp
loope
aam
loopne
call
js
hlt
xor
xchg
loope
cwtl
shll
add
sub
jae
addr16
movsb
loope
inc
sbb
shl
push
addr16
loope
cmp
xchg
push
mov
ds
das
arpl
fimuls
in
sbb
sbb
scas
movsb
lods
xor
cmpsl
loope
rolb
daa
js
xor
and
arpl
insb
jmp
jb
loope
pusha
xor
in
test
daa
jo
mov
popa
pop
mov
sub
js
outsb
adc
xchg
loope
imul
xchg
sbb
xor
mov
and
jnp
xchg
cmp
sbb
loope
adcl
inc
cwtl
loope
adc
pop
sbb
xchg
das
mov
loope
pop
int
mov
dec
sub
out
sub
in
fnstsw
out
mov
addb
test
stc
cltd
dec
loopne
mov
xor
hlt
out
ficoms
mov
loope
push
xor
mov
lcall
imul
pop
xchg
xchg
in
pop
jecxz
jl
and
sbb
lret
xor
leave
sahf
and
jge
mov
fcomip
iret
mov
inc
mov
or
push
push
jo
mov
and
adc
ret
enter
jns
repz
std
outsb
sbb
out
aad
mov
mov
loope
jp
leave
dec
in
jb
loope
xor
and
cmp
push
mov
adc
clc
ljmp
out
xchg
shrb
imul
mov
mov
fs
xchg
loope
mov
and
cs
add
sub
loope
shl
scas
mov
jmp
pop
hlt
in
mov
add
xchg
or
iret
popf
cmp
orb
mov
jmp
out
sbb
stos
push
lds
inc
dec
ljmp
dec
mov
sub
mov
mov
mov
mov
sbb
setns
jns
jo
out
cmp
jb
mov
jne
push
xchg
les
stc
loope
popa
push
lcall
loopne
fsts
pop
mov
xchg
push
jle
in
pop
imul
jmp
or
shlb
mov
mov
call
pop
aam
movsb
addr16
bnd
fabs
pop
subb
lock
adc
movsl
movsb
push
loope
mov
adc
mov
and
loope
sub
hlt
dec
int3
xchg
lods
lds
xor
pop
in
scas
int
cli
ss
xchg
or
loope
mov
or
movsb
xchg
mov
mov
jnp
loope
mov
dec
sbb
iret
ss
hlt
xchg
inc
out
gs
ljmp
in
jo
jb
shll
or
add
add
mov
sub
lods
push
out
adc
pop
sahf
cmp
or
ret
orl
push
out
hlt
sub
fadds
es
loope
add
repz
mov
cmp
xor
mov
inc
push
push
cmp
pop
or
cmpsl
inc
jnp
loope
movsl
test
ds
loope
int
mov
mov
mov
and
in
js
mov
inc
loopne
imul
cmpsl
test
jno
jo
sahf
test
insl
in
shlb
pop
and
in
jg
sub
loope
lcall
movl
dec
clc
loope
sbb
loope
sub
and
cwtl
adc
dec
mov
jb
push
jo
push
inc
mov
icebp
xchg
std
adc
loope
insb
mov
jp
mov
cmp
add
stos
inc
loope
adc
data16
iret
push
bound
loope
mov
ret
rorb
jne
mov
mov
lock
insl
adc
jmp
inc
lret
repnz
push
cmpsb
arpl
rolb
dec
inc
ss
xor
clc
ficompl
inc
loope
mov
dec
loope
rcll
xor
femms
in
nop
nop
insl
mov
jecxz
xchg
jecxz
sub
loope
add
lock
loope
pop
outsl
pop
je
enter
xchg
insb
xor
test
call
outsl
jae
inc
mov
push
mov
adc
repz
add
cmpsl
cmc
rorl
into
loope
enter
or
testb
sbb
arpl
adc
aam
jp
sbb
jg
loope
cmp
repz
enter
out
stos
push
cli
sbb
add
in
xor
bound
icebp
rolb
enter
les
imul
jg
xlat
jle
xor
mov
loope
sub
push
sbb
fidivrs
je
call
mov
in
push
or
loope
addr16
inc
dec
xor
xlat
idivl
jmp
fdivr
gs
mov
sbb
pop
je
clc
mov
cmpsl
jecxz
sbb
xlat
std
dec
lods
hlt
pop
insl
and
shl
dec
cltd
in
adcb
xor
dec
inc
icebp
pusha
add
in
fadds
movsl
bound
mov
mov
inc
adc
aaa
jmp
lcall
xlat
insl
movsb
loope
es
push
loop
sub
adc
mov
cmp
push
adc
out
rcll
les
mov
fsub
and
das
loope
faddl
pop
and
lcall
xchg
loope
xchg
or
sbb
decl
cmp
stc
test
loope
in
fwait
arpl
and
or
and
push
mov
loope
outsb
shlb
mov
iret
into
js
jp
mov
inc
push
loope
out
aaa
xor
and
loope
jo
lds
push
call
loopne
fidivrl
inc
loope
fnstenv
mov
data16
mov
loopne
mov
xchg
inc
pop
ret
mov
shlb
push
lock
std
xor
imulb
jmp
addr16
jo
ss
stc
loop
sahf
fndisi(8087
mov
add
or
fwait
dec
mul
cld
mov
sub
and
loope
cmc
jne
es
xchg
sub
mov
push
addr16
fsts
xor
xchg
lret
push
popa
jecxz
std
jg
jmp
xchg
nop
xchg
rcrb
inc
rorb
dec
cmpl
aam
and
repz
mov
fmull
loopew
inc
or
add
iret
pushf
xchg
out
or
mov
push
shrb
or
pop
pop
pop
loope
ret
ret
pop
adc
movsl
dec
lahf
mov
shl
in
test
popa
mov
lret
xchg
das
loope
xor
ret
int3
loope
add
dec
inc
cmp
and
loope
xchg
fisubrl
adc
pushf
ss
jl
inc
les
push
mov
sbb
and
sarl
loope
iret
aam
js
push
stc
loope
fcoml
dec
dec
icebp
loope
cwtl
fcmovnb
imul
inc
fsubl
std
mov
fwait
sub
pop
fcomp
lock
int3
push
xor
loope
testl
loope
dec
movsb
sbb
scas
scas
or
js
je
dec
loop
out
mov
fmuls
cmp
bound
push
or
dec
push
cli
sbb
test
loope
inc
jmp
adc
mov
loope
pop
iret
fwait
scas
fsub
imul
lea
dec
loope
mov
test
std
fucompp
and
mov
insl
jo
adc
sub
jecxz
or
je
mov
sub
push
imul
fcompl
adc
sbb
jo
jmp
in
jecxz
iret
rcll
mov
imul
adc
cmpsb
sbb
xor
sti
mov
dec
std
sbb
sar
in
mov
dec
subl
dec
lock
jge
dec
jbe
and
lcall
and
loopne
enter
mov
stos
iret
arpl
loope
in
inc
popa
pop
ja
jmp
fisubrs
mov
lock
sbbl
add
es
das
mov
mov
and
lcall
lods
stc
out
push
inc
rcrb
mov
jle
lds
aad
add
adc
jg
xor
shlb
out
jg
scas
sti
and
ljmp
cmpb
and
in
sub
test
outsl
call
dec
pusha
roll
jae
inc
and
loope
mov
pop
sub
mov
pop
andps
xor
incl
outsb
sub
test
or
fdivr
adc
ds
sbb
cmp
repz
and
mov
jmp
addr16
add
sbb
lods
jbe
or
fdivrl
mov
sub
cmc
sub
xchg
mov
loope
inc
ficompl
and
inc
out
fs
loope
xor
aas
mov
cwtl
cmc
stc
xchg
out
addr16
loope
out
ret
out
scas
shrb
rcll
jg
cltd
fwait
push
loope
fidivl
dec
notl
mov
push
sti
mov
loope
xor
stos
jb
add
or
loope
xor
pop
loop
or
shrb
fidivl
je
push
shll
cmp
dec
fsubrs
loope
js
popl
jae
mov
inc
repnz
jmp
xor
jecxz
xor
pop
ret
shll
inc
loope,pt
jle
lock
mov
sbb
mov
jmp
loope
jns
or
mov
sbb
push
je
loope
dec
sarb
mov
test
sti
inc
sbb
orl
lret
loope
insb
pop
pop
sbb
jno
shlb
xor
jg
mov
cmp
out
mov
roll
push
int3
xor
loope
mov
xlat
icebp
jnp
loope
mov
out
mov
daa
js
fadds
adc
cmp
xchg
aas
and
ss
in
pop
je
pop
dec
shl
out
dec
sbb
outsb
xchg
fsub
adc
dec
adc
addr16
add
clc
movsb
mov
loopne
or
xchg
loop
pop
pushf
jo
test
push
in
ja
ds
dec
iret
push
loope
test
jne
mov
pop
and
clc
rcrb
loop
xchg
mul
test
inc
pop
insb
stos
pushf
loope
push
popa
cmpl
lods
shl
dec
mov
aaa
and
bound
push
sub
add
and
mov
inc
mov
icebp
cld
ror
dec
call
mov
push
and
push
sti
loope
xor
pop
int
loope
lret
or
mov
jge
push
or
xor
loope
add
mov
imul
fcompl
jl
loop
testl
sub
into
fwait
andl
cmpsl
insb
aas
loope
mov
mov
jo
and
jns
stc
in
xchg
or
cltd
stc
dec
add
insb
xlat
mov
mov
in
outsl
out
jne
loope
mov
int
das
add
loopne
pushf
inc
clc
cmpsb
push
dec
sub
xchg
loope
icebp
cmp
ret
jbe
bound
jo
inc
cld
cwtl
icebp
in
lcall
mov
ror
add
in
mov
js
push
repnz
aaa
or
loope
and
mull
scas
in
js
cli
mov
xchg
mov
pop
inc
push
cmp
pop
jg
cmpsl
mov
stc
ljmp
adc
mov
sub
sar
pop
pop
mov
cli
iret
and
pop
jns
xor
inc
loope
and
xchg
mov
cwtl
loope
xchg
aad
out
ret
jne
cmp
sarb
mov
jmp
or
loope
test
ret
insl
scas
or
inc
jo
inc
xlat
fistps
rorb
sbb
fnstsw
loope
clc
jne
push
sbb
push
mov
ja
pop
rcll
xchg
lods
ror
lret
jg
xor
fwait
loopne
xor
adc
rcrl
mov
xchg
dec
jmp
rorb
ljmp
sub
push
cmp
loope
inc
dec
subl
cmp
in
lock
inc
out
loop
jnp
int3
loope
cmp
leave
daa
fdivrl
fs
sbbl
pushl
shrb
loope
adc
dec
sub
repnz
loope
pop
cs
jecxz
loope
ss
sbb
test
cmc
ljmp
push
jmp
jmp
cld
mov
sti
mov
ljmp
std
int3
nop/reserved
add
in
cwtl
and
loope
mov
popa
xchg
push
cmp
loope
adc
loope
popf
or
jg
sub
inc
shl
push
jge
fisubl
shlb
ficomps
push
cwtl
xor
jl
mov
push
xor
xchg
loope
ret
xchg
lret
ja
addr16
sub
mov
mov
xchg
cs
div
cmp
adc
in
aas
cmp
add
or
fnstenv
or
push
sbb
jmp
mov
daa
xor
or
jecxz
loope
dec
not
dec
sub
loope
pop
or
and
push
addr16
push
out
xor
mov
inc
or
pop
pop
js
and
jae
nop
dec
inc
in
mov
jo
roll
mov
mov
cmpsl
loope
cli
sahf
ret
jae
push
lea
aam
or
add
iret
in
fidivrl
loope
test
les
scas
and
add
loope
stc
inc
fwait
inc
mov
ror
aam
loope
dec
adc
jp
pop
loope
andl
loope
sbb
scas
pop
loope
cmc
fldcw
rorl
xor
and
adc
push
pop
shl
xor
mov
repz
adc
push
jae
xchg
jne
lock
jecxz
jecxz
out
sbb
call
ds
insl
or
fists
scas
aaa
in
mov
sbb
fs
loopne
push
push
dec
loope
ja
dec
mov
aas
loope
jle
sbb
fisubl
jg
in
hlt
sub
and
ja
jge
stos
ss
shrb
jno
out
adc
je
push
cmp
mov
mov
shr
out
pop
icebp
adc
and
loope
xchg
jp
or
or
in
loope
xchg
scas
push
nop
and
inc
pop
loope
inc
or
jnp
mov
std
inc
imul
imul
jg
sbb
loope
fucomip
outsl
mov
fxch
xor
out
push
shlb
aam
les
loope
dec
xchg
adc
loope
jns
sub
lfs
mov
xchg
imul
loope
mov
fmul
loope
mov
nop
repnz
outsl
mov
cmp
add
jns
sub
and
mov
mov
insl
sbb
cmp
inc
xlat
mov
dec
pop
add
cmp
jae
shl
pop
outsl
add
neg
scas
and
lds
jo
imul
call
lea
loope
fsubr
push
jns
mov
jo
shrl
mov
mov
mov
aaa
ss
mov
push
popa
adc
loope
push
sarl
out
repnz
rolb
cs
ljmp
dec
cmovg
sbb
push
mov
mov
mov
sub
iret
pop
pop
loope
mov
scas
test
insb
xchg
lods
inc
jbe
rcll
sti
inc
mov
mov
jb
stc
xor
lods
fimuls
xor
sbb
xor
adc
mov
add
push
test
ret
lea
loope
loop
call
loope
pop
ljmp
xchg
stc
jmp
aad
mov
fcmovbe
sbb
sub
xchg
add
mov
mov
inc
loope
imul
mov
out
std
dec
fdivl
das
loope
sub
or
and
jo
iret
pop
xor
cmp
nop
xlat
loope
ljmp
sub
push
or
jo
adc
hlt
xlat
call
loope
dec
or
ds
and
test
andl
iret
js
cs
sub
loope
xor
xchg
ja
popa
loope
push
and
addr16
or
xlat
cmpsl
into
addr16
ret
jae
inc
cmc
repz
test
jp
push
out
imul
popf
sub
ss
jle
adc
jg
mov
add
add
push
cmc
push
jl
jbe
icebp
fsts
loope
sub
pop
or
sti
popf
loope
repz
jg
pop
repnz
imul
xchg
test
les
test
in
in
insb
ss
xorl
jl
pop
or
jb
fsubp
rclb
subb
add
shrl
inc
cmp
dec
rclb
pop
mov
inc
mov
lret
loope
dec
adc
cmp
data16
jb
das
scas
inc
sub
ja
push
sub
cli
in
mov
outsl
hlt
xchg
pushf
inc
in
das
jb
xchg
loope
test
in
out
popa
pushf
loope
sbb
imull
mov
jl
loope
pop
outsl
stos
aaa
mov
roll
jae
test
in
jmp
lock
loope
ljmp
loope
js
sbb
sbb
adc
sub
sti
loope
out
popf
lock
jae
pop
sysenter
jne
rorl
xor
test
setle
pop
mov
cmpb
push
jmp
idivb
ds
and
test
inc
repnz
mov
adc
mov
mov
les
jmp
mov
push
das
mov
in
push
sbb
jns
jo
sub
or
jmp
mov
cmp
lahf
xchg
subb
mov
arpl
and
xlat
pop
mov
mov
mov
jg
mov
loope
and
rcrb
scas
fildl
adc
jmp
mov
icebp
popf
pop
shll
out
push
fdivs
outsb
adc
add
in
int3
mov
sub
or
out
mov
adc
or
mov
mov
pop
loope
xlat
jb
sbb
mov
sbb
jo
push
jp
push
out
fmuls
pop
loope
mov
adc
and
pop
inc
addr16
jae
add
imul
loope
sti
addr16
jecxz
fwait
shlb
adc
out
pop
loope
pop
jnp
jmp
mov
adc
jmp
dec
in
out
std
jo
or
in
dec
add
adc
je
imul
add
push
xchg
sbb
pushf
dec
hlt
cltd
dec
inc
lods
add
mov
fdivrs
popa
loope
std
cmc
and
loope
loopne
icebp
sub
add
popf
jnp
divl
pop
loope
stos
sbb
fimuls
and
add
adc
mov
loope
ds
popf
mov
imul
jo
lret
int
mull
adc
cmp
jbe
adc
testb
loopne
mov
xor
rcr
xchg
xchg
push
test
inc
mov
pop
dec
sub
jmp
outsb
loope
lds
cltd
loope
stc
cmp
pop
loope
mov
adc
push
arpl
leave
cmpsl
scas
mov
fs
push
out
loope
inc
stos
adc
rorb
push
nop
es
clc
rcrb
add
mov
lods
sub
xorb
loop
in
stos
xchg
dec
cmp
loop
pusha
mov
xor
sbb
cmp
xor
outsl
popf
xchg
loope
inc
fcomi
int
call
pop
inc
bnd
les
daa
pop
dec
sbb
sbb
mov
loope
hlt
pop
or
xchg
xchg
mov
mov
cmpl
js
movsl
sti
add
push
orb
aad
or
shll
popa
inc
in
cli
loope
ljmp
xchg
dec
pop
lcall
aaa
lods
pop
xchg
adc
push
pop
loop
sarb
jae
pop
movsb
call
pop
cmpsb
mov
fisubs
fdivs
xor
lock
loope
dec
adc
out
add
mov
cwtl
mov
lock
lahf
loope
add
push
loope
dec
push
movb
dec
add
sub
dec
xor
jnp
mov
pop
adc
aad
into
ljmp
out
pop
xchg
je
andl
xorb
jecxz
pop
mov
jmp
es
pop
loope
inc
js
mov
ljmp
mov
mov
loope
inc
jne
pop
in
add
int3
inc
leave
xchg
sti
ja
arpl
inc
dec
jmp
inc
cs
jo
scas
mov
cmp
addr16
rolb
clc
inc
cltd
in
add
xchg
imul
xor
cmp
mov
adc
popf
imul
sbb
addr16
mov
push
add
in
daa
cs
mov
adc
jbe
aaa
bound
popa
pop
inc
ja
and
hlt
lret
pop
cmp
or
push
lods
ljmp
loope
cmp
loope
adc
repz
sbb
loope
pop
cmp
push
pop
xchg
loope
outsl
data16
mov
cld
lds
rcr
in
dec
int3
pop
movsl
in
lods
cs
jmp
ret
adc
jge
sahf
aam
xor
dec
inc
xchg
jno
lret
sbbl
jb
ljmp
jns
push
pop
pop
push
jmp
mov
jbe
and
or
mov
stc
repz
inc
arpl
loope
imul
jne
ficomps
pop
movsb
loop
xchg
rcl
adc
mov
adc
pop
xor
jo
sbb
imul
pop
cmp
jmp
add
pop
add
cmpsb
aaa
jmp
ljmp
aad
xor
rolb
dec
fists
repz
cld
mov
das
icebp
mov
imul
repnz
jmp
jno
loope
lret
jg
popl
add
jp
loope
pop
mov
pop
js
nop
sbb
inc
pop
mov
stc
or
push
push
sbb
in
mov
add
xor
xor
xchg
inc
data16
cmp
mov
cmpsl
jge
jae
push
loope
sub
in
inc
sbb
call
sub
ss
and
cmpsb
int3
mov
std
jp
inc
sar
push
inc
cmp
fcoml
ljmp
and
mov
loope
popa
mov
cwtl
add
push
aas
pop
sub
arpl
mov
gs
movsl
adc
mov
sqrtps
jns
jo
mov
sub
stos
jae
jg
loope
push
out
xor
jo
dec
push
dec
popf
or
lods
xchg
in
jecxz
mov
jmp
pop
and
fisttpl
add
dec
or
and
fadd
sub
loopne
xchg
pop
fistpll
dec
mov
out
out
pop
cs
fnstsw
scas
xchg
notl
mov
push
loope
addr16
das
ficoms
loop
loope
xor
lds
xor
push
imul
ljmp
in
stos
and
rorl
daa
push
loope
cmp
stc
add
int3
xor
add
sarb
repnz
dec
imul
lahf
test
fidivl
aas
loop
add
insb
xor
ret
lret
xchg
imul
cmpsl
mov
inc
cmpl
xchg
push
adc
jns
loope
sub
mov
aam
adc
cwtl
je
rcll
out
loope
adc
ja
in
sub
add
push
dec
jp
xchg
loope
int3
mov
push
loope
mov
dec
scas
loope
jb
ret
mov
pop
mov
loope
and
fnstcw
mov
mov
inc
in
inc
ret
imul
loope
les
int3
dec
mov
rorb
pop
dec
xchg
fistl
loope
int
scas
je
jno
ljmp
xacquire
addr16
adc
out
xchg
adcl
pop
loope
mov
jo
loope
xchg
sbb
mov
and
clc
sahf
adc
xor
loope
mov
loope
outsb
testl
pop
jb
push
frstor
loope
jmp
loope
sbb
mov
jle
popf
loope
mov
xchg
mov
push
loopew
mov
xchg
arpl
leave
loope
dec
int
inc
pop
sti
push
loope
sbb
add
loope
sub
push
sub
shlb
cmc
lea
add
aaa
bound
out
sbb
in
cltd
and
aas
aam
movsl
ljmp
xchg
mov
xchg
push
xchg
incl
mov
mov
andl
xorb
insb
hlt
mov
lds
in
add
loope
rorb
jo
movl
sbb
int
cmc
sbb
cltd
scas
jecxz
test
arpl
jae
mov
test
cltd
sub
ljmp
in
pop
les
loop
rcrl
xor
or
xchg
loope
mov
mov
loope
sahf
jg
mov
push
jmp
pushf
xor
push
cmp
pop
in
addl
adc
loop
xor
dec
test
add
cmp
jno
sub
push
jbe
outsb
adc
xchg
loope
xchg
dec
lock
mov
or
loope
ror
lret
jmp
jnp
sbb
into
or
outsb
jge
loope
scas
pop
push
imul
aad
test
or
dec
addl
push
push
shl
subl
pop
jnp
sub
mov
out
out
mov
or
loope
js
xor
or
dec
or
arpl
sub
adc
xchg
loope
popf
mov
mov
push
jb
popa
addl
jmp
loope
mov
and
fmul
dec
imul
loope
jg
push
cmc
shll
aad
sub
push
repz
aam
dec
xchg
loope
pop
fdivrs
sbb
fidivs
loope
adc
pushf
lock
mov
scas
loope
push
push
push
inc
call
sbb
pop
loope
sbb
jecxz
xor
loope
jmp
fs
pushf
pop
sbb
jecxz
pop
ja
insl
lods
jae
xor
adc
and
mov
cltd
or
enter
loope
cmp
mov
sub
lea
xor
dec
dec
xor
icebp
push
jecxz
mov
adc
push
loope
test
and
insl
into
test
inc
or
mov
movsl
addb
icebp
and
loope
dec
cwtl
ss
sub
ror
loope
inc
test
pop
sub
add
add
ja
test
das
es
jmp
jno
lcall
mov
cwtl
jmp
sbb
or
jg
cmp
and
xchg
mov
shrb
out
loop
outsl
outsb
loope
vmovdqu
mov
aaa
loope
xor
iret
cltd
push
mov
lock
das
xchg
out
or
dec
mov
loope
xor
insb
lret
fucom
push
or
dec
loope
xchg
pop
ret
int3
mov
sahf
in
fs
mov
jmp
sbb
loopne
ds
ljmp
dec
xchg
es
mov
add
out
js
or
mov
dec
fdivl
insl
in
mov
loope
jmp
fcomps
movsb
or
inc
cmp
lods
adc
jns
or
sub
mov
enter
push
push
in
aaa
xor
sbb
loopne
cmp
in
addr16
das
cli
or
pop
loope
clc
cld
cmp
cmpsl
and
add
lods
out
loop
push
mov
adc
lcall
shlb
cmpsb
push
jo
js
mov
pop
mov
sbb
shlb
leave
je
xor
mov
inc
xlat
add
push
mov
fimull
aam
push
dec
xchg
das
mov
add
cltd
shr
and
xchg
ss
inc
fstpt
cmp
mov
mov
test
pop
pushf
sarl
icebp
sbb
xlat
push
push
loope
loopne
fists
adc
loope
inc
cwtl
xorb
jo
ds
loope
push
imul
mov
fdivs
rorl
mov
lods
jle
pusha
call
movsb
xchg
iret
cld
ljmp
dec
xor
mov
mov
add
push
sarb
sub
dec
cmp
xor
hlt
in
aad
cwtl
insl
loope
negl
mov
stc
pop
inc
cs
fwait
mov
loope
mov
in
scas
mov
andl
ja
jo
bound
mul
sbb
or
jo
repz
or
lret
nop
add
jg
and
jecxz
cmpsb
out
mov
and
xor
cmpsl
xorl
stos
aam
add
xor
loope
sbb
inc
les
fs
push
xor
sub
mov
std
mov
in
in
sub
icebp
dec
pop
dec
jl
xor
fwait
rcrb
cmpsb
jecxz
repnz
pop
jg
or
xlat
xor
push
loop
loope
cld
hlt
push
repnz
lods
leave
shlb
fisubl
and
and
pop
jno
test
cmp
popa
loope
sbb
sub
imul
jmp
mov
es
mov
lcall
mov
mov
dec
and
imul
stos
addr16
mov
imul
sarl
loope
es
lds
inc
mov
ljmp
int3
lsl
fcomps
cld
adc
jno
push
lret
jecxz
aad
or
std
fisttpll
jno
loopne
fidivs
push
or
push
loope
jmp
xchg
mov
inc
mov
or
and
bound
pop
inc
xchg
and
stc
jnp
mov
mov
adc
cmp
dec
enter
xchg
jo
out
sbb
push
ljmp
jo
inc
cmp
shl
in
mov
std
loope
stos
ret
call
loope
in
add
es
sbb
sbb
mov
loope
jmp
out
shlb
daa
in
call
rolb
and
shrb
or
ljmp
cltd
adcl
sub
movsl
or
jmp
ret
scas
pop
jne
xor
push
loope
lahf
rorb
fwait
adc
into
int
test
loope
sahf
arpl
lret
nop
pop
lods
sbb
adc
out
jg
scas
lods
out
mov
popa
sti
inc
push
mov
dec
or
xor
scas
jmp
inc
mul
jae
das
pusha
mov
repz
xor
fcom
inc
loope
psubb
lods
jl
and
stc
jno
jge
lock
add
imul
xchg
mov
loope
mull
mov
add
cli
inc
mov
mov
dec
mov
ds
scas
jmp
mov
cmp
and
cwtl
mov
popa
xchg
dec
mov
and
cmp
dec
xchg
mull
xor
dec
rcrb
ja
xchg
loop
xor
mov
mov
jecxz
js
shr
or
loopew
hlt
mov
lods
inc
pop
cs
test
nop
outsl
movzbl
jno
ficoms
and
sbb
push
mov
incb
or
movsl
add
shr
loope
cmpl
jns
mov
mov
dec
push
sub
fsubrs
mov
in
loope
xor
daa
inc
jo
pop
imul
fdiv
push
adc
lock
mov
imul
pushf
dec
cmpsl
push
push
leave
cmp
mov
loope
movb
loope
hlt
flds
lds
test
push
inc
rcl
aaa
push
loope
xchg
out
sahf
aad
jl
and
sub
rcll
dec
test
dec
iret
cmp
sub
out
xchg
nop
jle
xchg
push
and
scas
mov
jecxz
add
ds
cmpsl
sub
and
ss
loopne
jbe
dec
std
add
add
sub
sbb
rcr
rolb
cli
cwtl
push
sbbl
xchg
loope
loopne,pn
fsubs
dec
mov
push
mov
sti
jmp
shr
inc
orl
xor
fsts
repz
jo
adc
pop
arpl
call
push
add
dec
leave
rcl
iret
mov
cmpl
loope
sub
inc
bound
mov
sub
adc
stos
loopne
rorb
jae
in
gs
cmp
loope
out
sahf
mov
mul
js
mov
inc
dec
cld
outsb
loope
add
sti
fucom
mov
mov
aad
lods
or
cmp
push
cltd
sbb
mov
mov
sub
pop
jmp
clc
inc
rcrb
mov
xchg
cmp
mov
stos
pop
loope
lds
pslld
xlat
pop
mov
pop
dec
loope
xchg
mov
fcmovbe
out
sub
dec
cmp
sub
dec
adc
xor
es
scas
add
pop
cwtl
adc
mov
jo
push
movsb
ret
loop
jno
mov
dec
enter
int
cmp
pop
add
push
mov
mov
lods
pop
bnd
loope
aas
test
xchg
xchg
jmp
loope
test
jo
loope
adc
add
cmp
loope
push
xchg
dec
lock
mov
cmp
cmpsb
or
andl
movsl
mov
xchg
mov
sub
loop
loope
out
lea
loope
clc
pop
jnp
lods
jge
and
in
sbb
jg
push
loope
mov
icebp
shl
xchg
mov
and
inc
out
rcl
push
pop
inc
in
xchg
aas
out
rcrb
and
je
aam
lcall
dec
cmp
loope
and
orl
shl
sub
outsl
sub
jg
and
xor
loope
xchg
movsl
sti
mov
ljmp
test
xchg
fwait
in
into
loope
dec
fdivrs
aas
std
jp
jmp
cwtl
lock
movsb
cmpsl
inc
sub
mov
movsl
cwtl
loope
sub
mov
mov
ljmp
sahf
cltd
push
gs
mov
aaa
fxam
push
dec
add
mov
pushf
lds
sub
fcmovne
insb
loope
sahf
outsb
das
cmp
push
sub
sub
pop
mov
add
outsl
push
or
jmp
jb
cs
or
loope
sbb
adc
xor
or
xchg
push
jl
dec
loope
add
cmp
pop
xchg
push
dec
lods
outsb
mov
pop
lret
cs
cltd
jecxz
roll
loope
pop
or
sub
loopne
call
lret
aaa
addr16
loope
out
testl
dec
cltd
mov
jmp
pushf
inc
xchg
inc
loope
es
pop
mov
mov
int3
pusha
xor
sub
dec
inc
and
adc
fisttps
and
movsb
jb
and
out
data16
and
sub
das
inc
movsl
sbb
lret
jmp
sarb
inc
sbb
sbb
out
movsb
gs
ja
sbb
pop
cmpsb
loope
lea
lret
or
cwtl
mov
jbe
xlat
cli
nop
les
fnsave
repz
or
nop
xchg
imul
movsl
cli
xor
or
jecxz
test
fistpl
aam
xor
clc
mov
cltd
xor
sbb
ds
out
cmp
push
xor
or
loope
lahf
and
ud1
loope
jle
inc
movsb
dec
loope
lock
notb
movsl
arpl
fmuls
bound
in
les
in
xchg
arpl
xchg
loope
push
ljmp
mov
js
outsb
loope
jecxz
in
shlb
push
dec
loope
pusha
js
out
notl
or
dec
loope
sub
lock
repnz
shlb
stc
jmp
add
ljmp
sub
ds
xor
cmp
xor
in
mov
xlat
adc
shlb
jp
out
pop
fistpl
and
loope
push
xchg
rclb
aaa
push
cli
lods
xchg
inc
in
push
loope
push
repnz
push
adc
cmp
pop
jo
mov
mov
dec
imull
insb
gs
bound
loope
mov
js
pop
cmp
popf
arpl
into
idiv
inc
in
xor
mov
sub
fsqrt
icebp
ja
inc
fidivl
add
cmc
sbb
mov
pop
in
popf
into
sub
push
es
iret
adc
int
cmp
mov
lcall
jo
in
dec
mov
cmpsb
loope
push
push
pop
std
and
rorb
jnp
nop
sub
popa
dec
jb
dec
pusha
jecxz
pop
cmp
fs
loope
nop
xchg
or
and
cmp
sub
xchg
jb
mov
jl
movb
mov
mov
jmp
push
or
stos
rcrb
pusha
loope
dec
and
scas
sti
loope
mov
out
mov
adc
call
loope
mov
mov
mov
inc
push
mov
pop
pop
sahf
loope
xor
adc
xor
adc
push
add
mov
fcmove
lock
scas
iret
sub
dec
push
mov
jb
and
out
xchg
mov
mov
out
jle
shlb
xchg
imul
sbb
mulb
faddl
les
out
sti
stc
or
bound
mov
cmpsl
lret
loope
add
test
cmpsb
cmp
pop
fildl
and
or
push
xor
hlt
adc
mov
enter
ficoms
rdtsc
cwtl
jmp
add
test
sub
cmp
pop
loope
dec
cltd
add
iret
aam
jne
fbstp
push
fldl
jns
pop
dec
xchg
imul
pop
nop
mov
loope
xor
mov
loope
mov
mov
rcrb
in
test
loope
push
fnsave
mov
jbe
xor
cwtl
pop
jmp
sub
pop
or
inc
es
mov
dec
std
add
pop
call
ljmp
movsl
adc
loope
sub
xchg
cmp
jb
ja
mov
pop
js
mov
sub
mov
add
lock
and
jns
push
mov
loope
cmp
int3
sub
in
loope
sbb
mov
sbb
dec
loope
lret
test
jmp
loope
mov
sbb
pushf
orl
xchg
sahf
jecxz
push
loope
cmc
subb
dec
in
scas
mov
nop
loop
push
and
lahf
test
pop
sub
out
ret
repz
gs
adc
jg
hlt
es
loope
xchg
xor
loope
and
add
scas
loope
outsl
pop
movsl
mov
fldt
loop
dec
sub
loope
inc
faddl
cs
pop
cmp
push
gs
jne
or
mov
mov
jbe
jle
std
mov
inc
loope
push
mov
add
test
loope
sbb
add
fists
adc
or
clc
mov
mov
and
sahf
mov
add
mov
vmwrite
es
mov
mov
loop
jne
in
loopne
xor
out
in
repz
test
add
push
out
call
dec
lock
push
mov
pop
and
mov
nop
out
popa
jno
add
add
ds
sti
test
loope
out
lea
push
test
push
popf
sbb
into
xor
out
cld
mov
mov
xchg
mov
dec
aaa
loope
mov
cmpsb
ret
loope
cmp
out
sub
jecxz
test
add
inc
shl
add
imul
xchg
jmp
cmp
outsl
adc
icebp
mov
add
push
loope
loopne
cmpsb
ss
push
shrb
sub
xchg
iret
add
pop
outsb
mov
js
lods
mov
lock
or
in
dec
sub
shl
loope
mov
mov
shlb
mov
ljmp
jns
rorb
loope
lods
add
inc
xchg
mul
lock
push
ret
in
int3
out
add
call
cmp
cmp
scas
loope
inc
fwait
out
sub
xchg
dec
adc
jmp
push
loope
dec
and
lods
sbb
out
sbb
loop
push
cmpsl
mov
arpl
cmp
inc
dec
mov
xor
rcrb
or
ss
loope
sub
mov
adc
out
adc
loope
testl
loope
dec
jg
aam
push
stc
jecxz
bound
loope
mov
adc
push
out
loope
je
cli
mov
push
mov
imul
jnp
stos
sbb
jmp
in
mov
adc
inc
out
jmp
mov
lods
pop
div
pop
adc
stos
loope
xchg
cmp
sub
popa
mov
push
test
mov
jmp
nop
outsb
push
dec
adc
xor
aas
mov
cmp
jae
loop
jbe
pop
loope
xorb
nop
dec
outsb
mov
mov
jmp
sbb
nop
xlat
push
shr
imul
fisubs
mov
cs
xchg
adc
out
push
int
push
loope
push
cmc
and
loope
jno
std
mov
fcoml
loope
rcr
push
xchg
or
push
gs
into
sub
pop
aad
dec
loope
dec
xchg
push
xchg
in
jo
inc
lahf
mov
pushf
psraw
pop
jb
iret
mov
pop
lcall
mov
add
aas
mov
outsl
aad
inc
xor
adc
sub
xchg
fists
push
mov
test
push
adc
enter
pop
loope
outsb
jmp
shlb
cmpsl
loope
int
aas
mov
mov
je
bound
mov
xor
push
cld
out
movsb
fwait
inc
push
insb
in
loope
repz
loope
xor
dec
loope
inc
imul
das
jp
out
add
dec
rcl
or
repz
loope
mov
pop
or
rclb
loope
push
out
or
in
icebp
xchg
mov
jmp
lock
adc
jmp
test
subl
loope
xchg
arpl
in
mov
or
ret
inc
cmpsb
arpl
adc
loope
popa
push
es
loopne
mov
outsl
adc
inc
pop
bound
loope
cld
add
icebp
xchg
pop
push
loope
data16
std
loope
clc
jno
mov
lods
imul
std
cmp
jmp
test
mov
leave
sbb
adc
cmp
out
adc
sbb
ret
int3
out
jae
lds
shll
add
mov
mov
cmpsb
loope
js
pop
xor
jae
lret
loope
inc
sarl
sti
shlb
ds
stos
fisubs
sbb
sbb
mov
pushf
cmp
sti
pop
inc
loope
mov
xchg
stos
sub
lahf
and
inc
xor
les
and
in
cli
adc
loope
pop
scas
lret
js
loope
pop
xor
fmull
jle
movb
sbb
ss
enter
add
or
adc
xlat
dec
and
push
loope
sub
icebp
ficoml
mul
aaa
sti
stos
adcl
and
lret
mov
loope
lcall
addr16
rolb
aad
pop
or
imul
and
ljmp
leave
xor
into
inc
repz
imul
fstps
loop
loope
stos
cmp
mov
aas
add
loope
mov
cltd
scas
loope
dec
jbe
mov
push
test
jo
xor
mov
cmc
fs
pop
loope
les
fwait
push
adc
mov
aam
sbb
dec
ljmp
loope
inc
push
mov
leave
shr
ss
loope
outsb
add
sahf
lods
loope
cmpb
add
adc
jne
push
mov
xchg
loope
bound
push
jae
das
add
pop
in
jg
fmul
dec
in
add
sahf
xchg
loope
mov
xchg
mov
pop
jno
sub
sbb
repz
loope
dec
mov
mov
imul
or
dec
cld
pop
out
and
or
test
cmp
dec
loope
in
jp
mov
int
test
movsl
add
loope
testl
mov
xchg
insb
pusha
push
sti
loope
pop
loop
out
rcrl
aas
loope
add
mov
push
add
lahf
sub
adc
cli
pop
fucomi
pop
sbb
cmp
sbb
mov
dec
loope
cmpsl
xchg
loope
scas
push
xchg
mov
inc
jae
jmp
jnp
loope
ds
adc
mov
fs
cli
imul
fs
mov
jmp
fistpll
nop
lret
cmpb
or
mov
pop
lds
jne
xchg
nop
imul
dec
pushf
cwtl
jno
loope
xor
mov
adc
in
add
loope
xor
imul
cmp
loope
pop
inc
and
loope
push
sti
add
and
dec
out
ret
loope
inc
add
add
mov
jo
adc
dec
movsb
in
jle
rcr
ja
inc
adc
sti
nop
or
lock
push
fndisi(8087
sarl
xchg
fisttpll
jne
ret
test
lods
and
xor
ljmp
adc
pop
adc
mov
and
loope
xor
or
loope
mov
mov
daa
jnp
push
cld
xor
and
mov
mov
ret
loope
inc
lea
lcall
jmp
mov
loope
rcr
lds
adc
incb
popf
std
mov
mov
nop
sbb
push
sahf
out
jmp
mov
fwait
aas
sar
orb
jne
cs
flds
push
out
dec
sub
sub
das
in
and
mov
orl
shlb
xor
in
test
jecxz
repz
loope
sbb
dec
test
push
cmp
xlat
pop
ljmp
push
mov
mov
pop
cmpsl
dec
mov
sub
xchg
jecxz,pt
popa
int
mov
cltd
pop
cmpsb
jo
inc
repnz
daa
daa
inc
out
lock
dec
pop
out
push
jle
xorl
out
mov
fwait
stc
loope
lcall
and
insb
xchg
lea
xchg
cmp
xchg
fndisi(8087
andb
ja
sub
jl
sbb
jmp
call
pop
clc
in
je
jns
xchg
in
sbbl
and
sbb
ja
xor
xor
rclb
pop
mov
loope
jl
mov
add
pop
dec
hlt
mov
loope
sahf
push
push
cmp
adc
xchg
add
loope
lret
ss
pop
xchg
fdivl
sub
pop
push
es
pop
iret
push
pop
imul
fimuls
fldl
loope
or
mov
jo
inc
inc
sub
out
sub
jnp
cmp
mov
inc
push
out
mov
int3
ret
push
in
data16
loope
and
movd
pop
fistl
mov
jg
inc
lcall
cld
loope
pop
pop
outsb
shr
push
cmc
nop
inc
mov
cmovs
orl
sub
loop
push
jmp
inc
dec
stos
xlat
jmp
aad
pusha
cltd
lahf
loope
mov
out
js
stos
loope
push
xor
aam
mov
decb
and
mov
int
fstps
bound
popa
and
in
dec
pop
loope
arpl
sbb
jecxz
loope
sub
cmp
imul
daa
hlt
repnz
loope
std
push
dec
fldl
sti
test
push
enter
xor
push
cwtl
jo
insb
mov
pusha
sbb
loope
test
jb
cmpsl
mov
aaa
xor
xor
push
std
pop
and
bound
fstl
loope
mov
divl
cs
loope
fs
lcall
mov
outsl
adc
ljmp
aas
stc
xchg
xorb
xor
adc
cmp
subl
and
ret
rcll
loope
lods
out
sub
aaa
loope
fsubr
jge
inc
sbb
add
dec
lahf
adc
jns
fnstenv
out
cltd
cmc
js
les
and
loope
int3
add
or
inc
cs
xchg
loope
gs
dec
or
jnp
stos
mov
jno
xor
nop
or
loope
push
inc
inc
outsb
loope
mov
ficompl
cmc
push
mov
loope
aam
mov
jge
lods
pop
mul
leave
dec
fwait
in
pop
inc
loope
out
sub
pop
cltd
mov
imul
xchg
popa
or
inc
loope
inc
filds
into
stc
loope
sbb
test
dec
xlat
dec
xor
push
or
loope
insb
rcrl
int
xor
fcmovbe
cwtl
cmp
lods
icebp
inc
loop
loope
lcall
ljmp
push
xchg
sub
loope
out
andb
adc
pop
and
ret
cmpsb
jbe
ret
mov
push
jno
mov
jne
sbb
pop
loope
repz
push
add
inc
cld
fldl
mov
jb
shl
into
jle
pop
movsb
sbb
xor
or
fucomp
cmp
mov
add
loope
mov
shrb
sahf
jg
flds
aam
cmc
loope
and
and
sub
movsb
sti
dec
jmp
cmp
fdivs
loope
out
inc
popf
addb
fnstsw
xchg
fisubl
push
loope
and
pop
scas
shlb
loope
pop
fdivrs
xor
pusha
lcall
pop
enter
cli
roll
loope
icebp
or
jl
mov
sub
mov
loope
cmp
xchg
loope
loop
sar
cld
aam
loope
and
fsts
mov
cmp
adc
sub
pusha
dec
loopne
loope
cli
jge
aas
clc
out
jae
dec
or
inc
sbb
dec
outsl
outsl
pushf
scas
lods
call
mov
das
aad
rcrl
cmp
push
jle
jl
arpl
sub
loop
mov
loope
popl
mov
ret
cmpsl
loope
inc
xor
mov
cmp
loope
and
ds
push
cmp
fiadds
lods
stos
iret
fnstcw
das
and
lcall
fisttpl
add
test
xchg
ljmp
jb
push
fsubrl
lock
ror
pop
daa
xor
pop
in
dec
pop
mov
shlb
fistpl
push
push
sbb
jb
jle
les
inc
mov
mov
push
pusha
cmp
paddsw
inc
loop
loope
dec
xchg
jge
pop
pusha
inc
loope
push
push
or
or
out
sub
in
stc
pop
mov
jnp
loope
mov
jge
mov
stos
in
mov
mov
fbstp
sarb
loope
adc
out
mov
jmp
mov
mov
push
push
fnstsw
add
loope
ret
xchg
addr16
mov
xor
push
shrl
adc
imul
fs
ljmp
jo
ja
cmp
pop
push
adc
or
sbb
int
cmpsl
ljmp
imul
inc
ljmp
idivl
jns
and
leave
int3
xchg
xchg
fcomps
outsb
mov
out
pop
ret
mov
cmp
pop
jbe
daa
mov
push
das
cwtl
pop
fsubl
pop
nop
push
xchg
mov
push
rclb
gs
mov
loop
dec
add
push
or
mov
dec
push
push
out
movsb
loope
pop
mov
cmp
mov
or
and
es
sub
pusha
loope
rol
mov
jo
inc
mov
call
cmp
dec
add
cld
add
roll
jmp
mov
loope
addb
enter
sbb
in
andl
xchg
mov
inc
gs
pushf
pop
enter
loopne
jo
mov
outsl
xor
test
dec
adcl
lods
jmp
and
pop
loope
mov
mov
shrb
mov
insl
xlat
lods
xchg
movsb
lahf
inc
mov
and
loope
push
push
adc
loope
lret
movsb
xchg
daa
mov
scas
stos
ret
jbe
mov
inc
xchg
jmp
insb
jp
fldcw
rcrb
mov
inc
fsubr
insb
add
mov
cmp
jecxz
movsb
jmp
rorl
rorl
xchg
test
jno
test
jmp
dec
in
push
loope
sub
fiaddl
cmpsb
pop
loope
jbe
int
cmp
loope
push
sbb
loope
jle
cmpsl
mov
jp
shr
adc
inc
add
popf
dec
sarb
loope
dec
and
fninit
or
pushf
pop
mov
nop
jne
ljmp
push
in
mov
adc
sahf
sbb
in
mov
loope
mov
idiv
mov
xlat
xchg
loope
or
or
stos
imul
mov
std
loope
inc
dec
add
push
sbb
mov
ljmp
das
hlt
sahf
sbb
cmp
dec
adc
mov
aam
mov
int3
nop
fstps
mov
fwait
insl
enter
mov
aaa
push
sub
adc
push
outsb
rcr
sub
jmp
ret
xchg
ljmp
leave
loope
mov
dec
inc
adc
lods
push
loope
inc
mov
rcrb
loop
movsb
jle
ljmp
pop
inc
mov
xchg
cmpsb
sbb
in
push
repnz
shrb
xchg
push
into
push
pop
in
xchg
loope
les
adc
inc
push
cmp
or
jne
mov
sahf
mov
inc
insl
fsts
dec
sahf
aas
loope
jp
mov
lods
sub
repz
nop
dec
lods
dec
add
dec
loopne
sbb
mov
popf
gs
dec
inc
loope
js
xchg
lods
incb
out
push
adc
hlt
dec
dec
or
jno
call
mov
cmp
mov
loope
mov
outsl
pop
loope
jp
dec
cwtl
nop
lods
pop
loope
mov
icebp
ss
scas
incl
mov
mov
xchg
xchg
add
insb
adc
outsl
rorb
adc
adc
push
xor
sub
cmpsl
add
mov
xchg
dec
rol
lcall
movb
imul
and
mov
mov
add
ror
add
push
lods
mov
in
adc
push
adc
push
dec
add
test
lods
pop
adc
imul
hlt
test
adc
dec
jne
stc
jmp
loope
jns
mov
cs
xchg
fiaddl
dec
loope
jbe
clc
adc
ja
loope
dec
and
shlb
add
mov
and
mov
in
fsubl
mov
add
mov
mov
or
loope
xchg
xchg
xor
loope
cli
inc
cmp
fadds
lods
loope
test
or
loope
shl
push
and
loope
and
fisttpl
fs
and
adc
mov
insl
les
mov
push
das
push
pop
and
insl
shrl
loope
in
adc
push
je
ja
in
jo
aad
sub
push
in
mov
testl
pop
loope
sub
cwtl
cmp
dec
jno
cmpsb
adc
inc
dec
enter
aaa
push
shlb
add
in
loopne
mov
fs
xor
loope
xchg
jmp
sub
or
loope
mov
fwait
mov
test
jbe
loope
push
addl
or
loope
xchg
jno
jb
pop
leave
and
cli
mov
pushf
in
add
fs
sarl
push
lods
out
in
mov
sbb
ret
mov
fcmovu
loope
lcall
std
jge
jmp
push
les
icebp
jb
popa
in
mov
mull
iret
inc
sub
rclb
clc
loope
hlt
sbb
xlat
ret
loope
js
scas
fisubs
call
or
dec
push
sub
push
rcrl
mov
mov
lahf
mov
pop
movsb
out
loope
decb
leave
loope
aaa
out
test
sub
push
lock
sub
jecxz
ret
ret
sub
rorl
mov
jo
test
pushf
jle
mov
test
iret
add
aam
lea
mov
xor
test
loope
aad
xor
dec
shr
fstpl
out
push
dec
fs
rcrb
out
and
sub
call
xor
jmp
push
xor
or
loopne
roll
lock
aas
mov
dec
loope
sub
popf
jae
rcll
ret
mov
std
inc
loope
or
jnp
loope
shll
fwait
xchg
popf
cmp
fdivrp
and
loope
out
or
and
jl
aas
ret
sti
sub
pop
adc
cli
add
loope
jge
sbb
in
dec
xlat
movsb
les
subl
sub
sbb
pop
in
add
popa
xchg
xor
ret
jo
xchg
test
lret
or
pop
inc
aam
mov
jge
mov
or
xorb
out
in
jae
pop
cltd
adc
and
pop
sbb
loopne
rcrb
aaa
pop
gs
xor
int
lods
sbb
cwtl
jmp
inc
mov
iret
test
push
ja
aaa
loope
jge
or
sub
jno
test
mov
loope
shl
sbb
repnz
test
out
pop
push
push
sub
inc
fs
test
fimull
and
dec
push
ret
jmp
mov
mov
and
push
jmp
push
icebp
push
mov
xor
hlt
loope
ret
jb
andb
movsb
xor
mov
repz
dec
enter
aad
cmp
iret
jb
push
fwait
arpl
and
loope
sbb
cmp
xor
jb
outsb
fiaddl
cmp
cs
pushf
dec
nop
sti
popf
sub
pop
in
int
cmpsb
loope
enter
mov
imul
call
sbb
adc
sub
nop
in
loope
jnp
push
xchg
add
je
clc
jecxz
frstor
leave
add
push
xchg
loop
call
mov
jp
inc
rcr
or
adc
add
pop
jmp
pushf
fldenv
loope
jae
xchg
mov
mov
movsb
shrb
das
pop
jo
or
xchg
mov
mov
mov
and
movsl
xchg
cmp
das
inc
cmc
sub
cmp
pop
and
lret
pop
pop
loope
mov
and
les
jmp
xchg
rorb
jecxz
cwtl
hlt
loope
cmp
dec
xchg
je
lcall
add
stc
inc
loope
dec
js
sarb
mov
jecxz
stos
jo
test
out
mov
xchg
pop
and
loope
fnstcw
xor
mov
jl
add
jnp
loope
cld
xchg
mov
in
stc
loope
pop
fsubrl
dec
rcll
movsl
pushl
sbb
out
pop
hlt
cwtl
imul
pop
in
cmp
add
sti
shlb
test
icebp
in
cltd
addr16
pop
nop
and
in
sub
mov
pushf
aas
fistps
std
out
mov
fadd
imul
mov
adc
out
subb
pop
loope
or
pushf
stc
pop
mov
cmpsl
std
push
adc
lods
fcoms
add
jmp
jmp
add
jo
jo
pop
insb
mov
mov
loope
data16
xor
pop
loope
jecxz
popa
outsl
add
iret
add
sarb
hlt
xchg
lahf
and
cli
shll
mov
mov
cld
xlat
das
mov
push
loope
jmp
inc
pop
out
loope
adc
xlat
idiv
xor
lods
or
shll
ljmp
pop
mov
inc
adc
fists
pop
cmp
mov
rolb
sub
lea
and
fcomps
test
mov
sti
cmpb
push
in
jmp
loope
or
iret
dec
stos
dec
or
mov
and
inc
sar
imul
scas
cmp
loope
ds
stos
dec
dec
mov
shl
ljmp
mov
imul
iret
negb
mov
jecxz
xchg
popa
cltd
insl
popf
shrb
mov
xor
jle
push
or
mov
push
mul
pop
aaa
fadds
loope
fisttps
jne
sub
sar
adc
loope
sub
aas
lcall
je
cmp
setbe
shlb
subl
int
jae
gs
aam
leave
cmp
mov
fucom
sbb
scas
mov
sub
pop
or
push
ljmp
mov
andb
and
aam
push
lods
xchg
jl
inc
cli
loope
xchg
stos
ret
loope
into
pop
jbe
add
test
je
movsb
ja
lcall
data16
jbe
pop
mov
roll
cmp
adc
into
iret
addr16
outsl
int
push
fiadds
xchg
inc
dec
xchg
adc
pushf
cmp
sub
mov
scas
and
imul
xor
loope
imul
xor
pop
loope
movsl
nop
loope
or
in
mov
xor
mov
stc
lods
lods
lcall
xor
aas
idivl
pop
loope
cmc
nop
sti
dec
andb
clc
das
xchg
loope
push
mov
loope
xor
lds
adc
add
cmp
ret
loope
xorl
loope
mov
mov
lock
ja
push
into
jmp
fs
cmp
sbb
btc
lcall
mov
mov
pop
in
insb
mov
and
cmpsl
cmp
add
mov
add
insl
push
gs
aam
stos
mov
inc
sbb
inc
sar
ja
ljmp
pop
and
add
lods
xor
push
loope
jg
pop
lcall
xor
push
loope
inc
push
pop
nop
bound
scas
scas
mov
jns
loope
popf
addb
loope
push
adc
lcall
ret
loope
and
lds
mov
es
lcall
movsb
adc
mov
xchg
mov
sbb
mov
or
adc
push
push
loope
rorb
mov
outsb
xor
push
fsubr
fsubl
loope
std
or
shlb
loope
xor
int3
stos
sub
lock
mov
xor
push
xchg
inc
loope
int3
mov
rolb
sub
in
pop
add
push
ss
jnp
out
pop
loopne
push
loope
xchg
xor
or
stos
sbbb
out
add
test
pop
mov
push
pushf
jbe
dec
push
xchg
xor
arpl
loope
cld
bound
in
push
sahf
loope
jns
outsl
sbb
sub
in
hlt
aam
cli
insb
pop
mov
roll
push
out
xchg
xchg
es
ljmp
add
cltd
test
repnz
or
in
lret
and
jp
popf
ja
in
inc
loope
gs
shll
hlt
mov
imul
xchg
nop
fwait
mov
adc
jo
jmp
push
ljmp
in
jmp
outsb
dec
sbb
push
repz
out
imul
adc
lea
loope
mov
cs
loope
fcoms
sbb
rorb
mov
mov
leave
pop
gs
loope
es
lret
adc
add
push
sub
push
or
push
lods
loop
in
aas
aad
inc
ret
arpl
aam
sub
je
loope
dec
sahf
nop
xchg
sbb
lcall
popa
push
pop
xchg
rorb
test
das
mov
hlt
pop
adc
ljmp
pop
pop
jb
and
cmp
pop
adc
addr16
cli
adc
out
jmp
push
xor
sbb
aas
pop
icebp
xor
sub
and
imul
dec
mov
pop
push
cli
push
movsb
ss
loope
out
addr16
aam
loopne
push
lret
mov
fstpt
fs
jmp
loope
ficoms
lcall
jnp
or
mov
std
cmp
lods
ss
and
andl
sub
fld
jmp
cmp
mov
jp
push
xor
sbb
loope
sub
dec
imul
sahf
in
ds
loope
mull
data16
sub
bound
push
out
mov
lods
push
jnp
xchg
loope
sbb
push
loope
lock
rolb
loope
and
sub
dec
and
inc
jmp
adc
clc
arpl
pop
push
and
loope
jg
mull
cmp
push
mov
dec
or
sbb
push
loop
mov
das
out
arpl
bound
rclb
jg
scas
in
sub
inc
loope
mov
aam
arpl
add
insb
int3
ja
adc
scas
inc
jmp
mov
xchg
cld
xor
push
fstpl
int
loope
cltd
stc
xchg
mov
sbb
xchg
inc
xlat
shlb
and
loope
bswap
sbb
sub
mov
xor
jb
jp
lods
cmp
sub
fcmovnu
loope
cmp
cmp
lcall
repz
mov
rcrb
pop
or
int3
mov
mov
clc
movsb
ljmp
add
add
adc
mov
stos
lret
dec
loope
and
and
loop
and
aas
mov
outsl
fmul
loope
jmp
push
fimull
or
mov
je
out
xor
xchg
adc
les
loope
push
sarb
cli
push
mov
mov
or
add
nop
ja
in
insl
mov
shlb
inc
cmp
or
popa
addr16
jmp
lods
inc
loope
sbb
pop
jmp
popf
repnz
adc
adc
call
pop
loope
out
in
jnp
add
aad
loope
leave
pushf
xorl
lock
sbb
xor
jge
pop
in
loopew
mov
jns,pn
popl
loope
ret
outsb
or
push
rorl
rcrl
icebp
pop
popa
mov
clc
ss
sub
rcl
test
inc
out
mov
pop
fdivl
sbb
out
lret
jne
xchg
nop
sub
push
xchg
lcall
aam
out
out
push
mov
jmp
stos
out
loope
push
xchg
insl
and
sbb
lret
or
inc
mov
mov
add
rcr
cli
shlb
insb
inc
in
hlt
loope
das
or
adc
and
loope
mov
loopne
and
outsb
mul
sub
lock
sbb
fucom
rol
out
ljmp
inc
pushf
lahf
pop
loope
fwait
pusha
leave
sub
push
mov
clc
cltd
in
fidivrs
shl
jge
scas
pop
int
mov
inc
scas
rorb
jmp
js
sbb
sub
and
adcl
loop
sti
popf
pop
imul
iret
jg
pop
cmpsb
loope
xchg
mov
jmp
test
mov
mov
push
cmp
mov
inc
jns
push
icebp
xchg
lret
repnz
bound
push
jb
sbb
sti
push
and
pop
pop
roll
xor
pop
push
popf
shr
dec
xlat
pop
sbb
sub
out
mov
lea
add
sti
jg
mov
lcall
dec
loope
ljmp
vmwrite
inc
sahf
mov
in
inc
mov
jo
add
push
leave
out
fsubrl
push
loope
xor
mov
pop
push
loope
pop
das
sub
adc
and
sbb
jge
lcall
push
loope
lret
push
aam
xchg
loope
lds
loope
repz
loopne
mov
test
cs
xor
dec
loope
test
mul
and
mov
pop
loope
mov
dec
mov
stos
pop
inc
dec
js
cmp
js
mov
push
or
jae
jns
std
push
cmp
popa
jecxz
sti
fsubr
mov
mov
aaa
push
loope
sahf
and
loope
sub
jo,pn
sub
dec
addr16
fdiv
imul
js
movsb
movsl
shl
lahf
stc
or
ljmp
add
mov
dec
sbb
fisubrs
xchg
clc
adc
mov
sti
mov
push
mov
shlb
scas
push
mov
mov
insb
in
loope
dec
insb
inc
neg
lret
fsts
popa
mov
loope
push
adc
in
addr16
dec
loope
out
pop
lahf
push
and
lret
jbe
in
daa
fldl
loope
and
ja
cli
inc
gs
cmp
in
pop
or
jmp
jge
fndisi(8087
mov
cs
adc
in
rcrb
inc
jnp
int3
andb
inc
insl
push
jo
adc
sti
loope
cmp
dec
repnz
xchg
leave
add
or
jnp
loope
cltd
pop
or
jb
sbb
movsb
sahf
jl
pop
loope
mov
ss
cmp
cmc
and
loope
stc
mov
mov
xchg
xchg
mov
cs
addr16
sub
pop
in
xchg
mov
adc
fisubl
outsl
int3
imul
adc
arpl
in
mov
js
in
test
out
fnsave
call
and
sub
loope
test
fincstp
repnz
subl
loope
scas
lcall
xchg
inc
add
in
loope
push
out
inc
imul
loop
mov
arpl
sub
jecxz
and
push
std
jne
push
xor
in
or
imul
loope
dec
adc
push
loope
push
fdiv
cmp
sahf
xchg
shl
fwait
cwtl
add
dec
jp
xchg
loope
mov
mov
loope
mov
inc
aaa
scas
and
push
pop
add
push
mov
nop
adc
or
xor
and
pop
dec
rcrb
loopne
shrb
pop
movb
in
mov
mov
adc
push
xchg
or
loope
add
cli
pop
rclb
or
pushf
and
repnz
addr16
into
gs
popa
or
jo
mov
scas
sti
jb
lock
sbb
aam
cs
fisttps
lea
jmp
imul
aam
jno
ds
pop
in
push
jo
loope
or
sub
xchg
imul
shlb
and
out
add
loope
or
or
mov
sahf
imul
shl
loopne
sub
inc
mov
rclb
fucom
mov
push
mov
jmp
cmp
jp
dec
inc
icebp
loope
std
icebp
jg
xchg
sbb
pop
loope
jge
outsb
lock
enter
inc
push
in
pop
pop
adc
mov
xor
or
es
lahf
pop
push
add
rorl
adc
loop
pop
loope
loopne
inc
mov
das
loope
aam
bound
xchg
fidivs
dec
mov
xor
ret
loope
xchg
or
clc
out
in
insb
xorb
jge
xlat
add
nop
sub
loope
pop
jmp
pushf
outsl
aas
int3
mov
or
mov
jnp
inc
loope
into
xor
loope
negb
push
jnp
adc
jne
and
mov
gs
xor
dec
push
pop
mov
and
loope
out
push
mov
push
aaa
and
sub
and
cld
loop
mov
sarb
push
xchg
mov
inc
or
cwtl
ss
scas
shrl
jo
sbb
xor
lahf
loope
stos
divl
loope
dec
cmp
mov
add
mov
arpl
jecxz
lret
shr
fidivrs
imul
clc
adc
std
shll
jmp
push
xchg
and
mov
dec
mov
lahf
adc
xchg
push
jl
aaa
lea
cmp
imul
cli
jmp
push
stos
mov
push
sar
insb
push
rol
cmc
pop
imul
and
in
mov
or
xchg
cmpsl
hlt
sbb
mov
popa
mov
insb
aam
loope
insl
push
gs
push
add
addr16
xchg
xchg
cs
fucomi
or
add
dec
jmp
mov
call
scas
inc
pop
loope
std
adc
stos
cmp
loope
aam
sub
scas
loope
jb
adc
cmpsb
pop
push
rolb
jne
sbb
in
stos
push
jb
jp
loope
pop
push
pop
mov
add
fs
jae
aam
jp
jle
adc
or
lock
into
jno
jmp
pushf
jmp
loope
cmp
out
movsl
or
add
loope
imul
fstpt
add
shr
push
mov
ret
loope
movsb
push
push
mov
test
cwtl
jp
in
jmp
int3
push
std
jbe
jmp
sub
xor
rolb
cmpsl
shr
mov
mov
jno
fs
inc
xor
psllw
in
fsubrs
mov
inc
aas
aaa
cltd
sub
loope
in
out
add
ljmp
ljmp
mov
inc
cmp
mov
sbb
loope
and
test
call
shlb
mov
add
mov
outsb
fldt
ja
xor
rclb
shlb
cmp
jo
mov
arpl
fs
jl
imul
leave
pop
sahf
rcrb
or
push
cmpsb
push
and
in
sbb
lea
mov
loope
fisttps
mov
dec
rcr
shrb
xor
adc
xchg
adc
out
test
aaa
popf
cli
rorl
das
shrl
ljmp
cld
ficompl
loope
adcl
or
add
push
lods
ja
test
out
test
loope
negb
jo
in
xchg
cwtl
xor
or
push
jl
aam
jge
fnstenv
add
push
and
enter
sbbl
clc
adc
xchg
loope
mov
arpl
or
loope
xorb
loope
int
imul
cltd
xor
std
jmp
dec
shl
push
pop
fnstenv
cmc
loope
or
je
out
dec
ss
stos
dec
sub
cmp
xchg
shl
sub
daa
pop
aam
mov
xor
pop
cmc
mov
adc
sbb
xchg
or
push
roll
test
repz
push
loope
cmp
shll
mov
fldt
sti
and
xor
pop
jae
mov
ret
jno
xor
mov
jne
lods
add
cli
loope
or
int
addr16
repz
aam
fadd
outsl
loope
mov
sysret
dec
pop
ret
add
add
lret
push
push
stos
push
mov
jo
outsb
loopne
rcrb
hlt
dec
dec
and
jb
fsubp
mov
loope
and
xor
leave
xor
loope
sbb
mov
loope
out
jecxz
mov
jns
sub
cmp
stc
nop
lret
dec
loope
inc
sbb
inc
cmp
loope
mov
loope
and
sub
dec
jb
mov
pop
shll
push
adc
adc
lcall
repnz
scas
sub
bound
cwtl
add
add
outsb
ret
test
cs
jmp
arpl
loope
mov
nop
test
loope
xchg
popf
int3
fndisi(8087
mov
or
push
loopne
addr16
sbb
xor
shl
jbe
jecxz
in
enter
mov
xor
paddb
loope
test
out
loope
cmp
fidivl
pop
pop
pop
xchg
jmp
shrb
lahf
push
push
sub
sub
sbb
push
mov
jmp
shlb
insl
mov
and
xchg
lods
push
fs
rolb
sbb
dec
sbb
jns
int3
xorl
jo
pop
push
adc
out
jo
nop
loope
ss
movb
sbb
in
adc
xor
or
mov
dec
movsw
push
loope
aam
mov
push
arpl
stos
repnz
stos
pop
sbb
sub
mov
mov
mov
in
push
lock
jmp
jmp
mov
adc
jno
loope
push
jns
cmp
push
loope
std
dec
hlt
lods
divl
loope
add
test
mov
das
ss
loope
sbb
int
test
mov
jae
pop
add
das
xor
adc
into
jo
mov
and
mov
jnp
test
stc
xchg
jo
and
in
loopne
mov
and
ret
mov
push
sbb
inc
add
mov
divb
lock
scas
add
mov
xor
loope
roll
pushf
push
or
sbb
inc
in
sub
mov
loope
push
jbe
lds
push
loope
aad
xchg
sub
adc
imul
in
movb
cltd
into
repz
test
sub
in
jge
cli
loope
and
hlt
loope
inc
push
test
xor
into
cmp
shlb
nop
jae
in
mov
out
mov
fs
shlb
in
fs
xchg
scas
adc
loop
add
jp
jae
sbb
mov
loope
mov
movsb
mov
pop
stc
jb
jmp
cs
or
cltd
sub
dec
cmpsl
lea
loope
inc
push
in
inc
or
inc
loope
cmp
pop
bound
loop
dec
mov
cmpsb
mov
stos
loope,pn
and
outsl
ret
popa
andl
lock
xor
adc
sbb
mov
push
jne
pop
loop
mov
ficoms
stc
insb
sub
packssdw
pop
mov
mull
sbbl
add
jmp
loope
adc
fs
sarl
int3
fucom
lret
adc
inc
cltd
mov
add
pop
clc
pushf
shr
ds
pop
into
imul
xor
jge
sub
in
jo
aas
jp
jnp
jb
or
mov
push
pop
cmpsb
mov
jmp
xor
shrb
push
popf
inc
scas
sahf
push
inc
out
sbb
add
jo
cltd
das
dec
cmp
loope
cmp
jbe
in
insl
aaa
iret
popa
loope
ret
dec
out
fildll
loope
fstpt
pop
call
inc
mov
test
aaa
loop
int3
pop
dec
jb
jmp
orb
dec
div
mov
vpsrad
js
push
ljmp
xlat
les
stos
dec
mov
cmp
idivb
lock
dec
sarb
sub
aad
xor
pop
cmpsl
daa
loope
leave
sarl
sbbb
outsl
cmp
xchg
loope
sbb
lock
mov
loope
jae
inc
sub
xor
jne
loopne
loope
sub
add
enter
shrw
jo
add
push
jmp
loope
push
js
pop
out
insl
fnstcw
dec
mov
fst
jbe
mov
dec
jle
out
aas
and
loope
mov
dec
loope
daa
mov
clc
decl
pop
mov
popa
and
fwait
addr16
lock
icebp
jne
in
ret
das
sbb
mov
js
nop
loope
lods
sbb
xor
mov
divb
movsl
loope
mov
jecxz
orl
sbb
call
iret
test
out
jp
xchg
loope
scas
fstpt
cmp
mov
xor
fs
jmp
jmp
sbb
push
sub
jno
ret
xchg
test
lds
lcall
inc
cmp
frstor
stos
jo
and
enter
cmpsl
jmp
test
push
test
ljmp
mov
lock
fdivs
mov
rclb
loope
lret
cmc
xchg
cld
or
dec
xchg
xor
shlb
ds
mov
push
jp
sub
andl
cmpsl
fidivrl
or
call
loope
shrb
mov
int
loope
scas
adc
xchg
xor
loopne
cli
test
push
aaa
mov
cmp
loope
pusha
dec
xchg
pop
inc
jmp
xchg
es
lcall
ficoml
scas
cltd
push
cs
mov
fdivrl
inc
test
in
add
cs
loope
jae
jnp
out
insb
loope
sub
or
pop
adc
jno
aaa
enter
loope
icebp
sbb
jle
inc
cmp
popa
ja
dec
pushf
dec
adc
repnz
inc
jbe
adc
xor
sub
push
mov
inc
cmp
ror
in
andl
jecxz
popf
loope
aad
ljmp
mov
dec
jns
xchg
and
test
jle
enter
loope
mov
jl
rorb
inc
xchg
xchg
xchg
xlat
sbb
sarb
call
mov
jecxz
cmp
push
repnz
out
mov
loope
pop
outsb
pushf
pop
jmp
loope
cmp
and
or
or
lret
pop
movsl
add
sub
hlt
push
scas
jne
loopne
jmp
loope
stc
sbb
ror
push
lea
sahf
mov
mov
add
add
xchg
xchg
sub
and
and
mov
sbb
push
mov
lcall
loope
jne
shrb
mov
imul
xor
test
xchg
rclb
rcrb
jbe
bound
loope
sbb
insb
gs
lret
jg
loope
sahf
or
mov
loope
mov
add
lock
jl
lea
jmp
shl
dec
loope
sahf
in
arpl
inc
loopne
jo
cs
cmp
shr
ds
out
fucom
loop
jp
movsb
adc
mov
arpl
std
enter
pop
loope
int
xchg
mov
enter
cwtl
jb
jecxz
xchg
pop
xor
dec
sar
movsl
xchg
xchg
adc
push
loop
pop
or
enter
stos
loope
xchg
sbb
mov
scas
sub
cmc
fld
into
and
push
in
add
mov
das
vdivps
pop
fadds
fimuls
jmp
jmp
sar
pop
dec
ss
xchg
jo
adc
sahf
mov
out
test
cmp
sbb
push
icebp
jmp
js
mov
xor
push
mov
addl
loope
fstl
sbb
xor
loop
sub
lock
adc
jecxz
cmc
jno
je
fcoms
cltd
rcrb
mov
add
add
cmp
or
and
sti
adc
in
cmp
repnz
sub
sub
sbb
mov
add
int
loope
cs
and
push
rolb
in
mov
int3
enter
scas
mov
arpl
push
mov
test
add
sbb
gs
mov
adcl
repz
jg
inc
fwait
out
push
insl
pusha
lret
jne
xchg
sub
mov
xchg
loope
jno
and
or
dec
mov
add
bound
mov
flds
xchg
add
test
cmp
sbb
xchg
notb
sub
fdivp
scas
movsl
outsl
sti
jmp
loope
xchg
test
push
mov
rcr
jecxz
popa
in
loope
out
fwait
mov
push
jo
sar
dec
mov
inc
push
pop
dec
xchg
jnp
xchg
pop
cmc
jmp
loope
push
dec
lods
lretw
or
mov
push
loopne
pusha
and
jle
sub
cmpsb
loope
mov
mov
cld
repnz
pop
cwtl
testb
add
jo
das
xchg
xchg
and
clc
hlt
xlat
mov
mov
mov
fcmovbe
dec
daa
jae
movsb
sub
dec
and
rorb
daa
jecxz
sub
loope
sub
dec
cmp
sub
movsb
cs
imulb
jne
mov
test
lcall
cmp
js
add
jb
cs
out
inc
into
add
loop
dec
mov
rep
lds
loope
add
loope
fucompp
notl
mov
push
ljmp
cltd
mov
xor
adc
and
jg
ljmp
test
loope
mov
xlat
orb
rclb
jecxz
repnz
jo
inc
mov
and
icebp
rorb
push
in
arpl
cwtl
test
pushf
loope
xor
pop
adc
sub
sar
jmp
sbb
je
push
jnp
aas
jge
pop
jae
rcrl
pushf
mov
cltd
popf
add
lcall
mov
loope
mov
xor
lahf
loope
cs
inc
mov
rorb
sbb
in
jecxz
cmp
decb
outsb
aam
clc
loope
shrb
sbb
loope
test
xchg
cs
lock
subl
push
in
loop
movsl
sub
jp
cwtl
js
fcoml
mov
repz
shr
xchg
ficomps
push
dec
in
pushf
mov
into
loope
mov
shll
arpl
loope
cltd
cli
sbb
loope
sbb
nop
dec
xchg
sub
repnz
fbld
pop
xchg
push
push
mov
or
loope
jmp
das
sbb
loope
movups
arpl
out
adc
jnp
outsb
loope
loopne
ds
roll
cld
lret
mov
bound
loope
pop
or
aad
repnz
push
clc
jmp
loope
adc
fwait
lock
icebp
jmp
shld
addr16
push
dec
mov
sub
stos
cwtl
adc
xor
and
lret
xchg
loope
ret
dec
and
scas
loope
movsl
xchg
sbb
outsl
jmp
cltd
cmp
leave
mov
repz
movsl
lea
inc
loope
or
adc
mov
pop
pop
cld
insl
mov
aam
loope
lret
jns
inc
loope
std
push
mov
addb
loope
xchg
movsl
rcrb
lahf
cli
cwtl
loope
xor
data16
mov
in
les
cmc
imul
jb
mov
loope
mov
lods
loope
xlat
fdivs
sub
and
loope
test
push
loope
or
jo
das
roll
push
push
pop
cmp
jecxz
inc
jecxz
push
loope
xchg
cmp
sub
loope
add
pop
test
mov
dec
jne
xor
loope
fisttps
sub
mov
imul
mov
in
fidivs
push
jae
popa
mov
sub
sbb
std
xchg
xchg
and
imul
adc
sub
mov
mov
push
jno
sbb
adc
push
push
mov
inc
loope
das
xor
dec
jo
clc
insl
cmp
mov
mov
cmp
loopne
or
shl
mov
mov
xor
scas
insl
into
xor
sbb
inc
pop
hlt
pop
jns
loope
notl
sub
dec
ss
cmp
test
pusha
or
leave
xor
xchg
ret
jg
adc
push
mov
cmp
outsl
test
mov
bnd
out
shl
ret
xadd
js
jp
cli
rorl
mov
movsl
test
xor
sahf
ds
shlb
cltd
jo
pop
pop
xor
cmpsl
loope
dec
jp
scas
hlt
mov
insb
pop
insl
mov
andb
add
out
fld
fcompl
fwait
inc
mov
mov
adc
out
xchg
loope
adc
sbb
and
imul
subl
aas
pop
sbb
fs
push
loope
das
leave
cltd
dec
test
ds
lahf
in
mov
test
sub
ja
push
mov
loope
or
sub
push
or
dec
sbb
pop
xor
xlat
adcb
jmp
pand
loope
sbb
mov
shl
xchg
ror
pop
call
add
mov
xor
into
adc
test
sahf
loope
fdivrl
jo
mov
sbb
call
xor
or
and
loope
add
xchg
movb
loope
shrb
jae
push
mov
cmp
or
rcrb
loope
xchg
add
bnd
xchg
pop
dec
mov
sub
push
call
rcll
dec
push
cltd
jbe
push
sub
and
insl
dec
loope
push
inc
sbb
loope
add
daa
mov
dec
outsb
and
imul
loope
mov
xor
inc
cs
jmp
mov
lcall
push
loopne
rolb
add
pop
gs
imul
pop
inc
mov
or
mov
xor
out
imul
mov
and
sub
inc
movsl
jbe
jmp
adc
aas
push
adc
jmp
dec
dec
mov
mov
jne
imul
sbb
dec
push
and
insl
int
and
iret
sbb
jge
sbb
fucom
lods
cmpl
data16
adc
xor
int3
mov
rcl
cmp
lds
inc
push
loope
out
fs
fisubrs
mov
xchg
adc
sbb
xlat
and
jno
cmpsb
cwtl
ret
fdiv
mov
mov
ret
clc
xor
pop
xor
xchg
pop
xchg
leave
icebp
adc
pop
or
or
mov
insl
loope
mov
mov
cmp
ret
ljmp
ja
jno
sbb
out
aas
jns
imul
roll
popa
cs
repnz
mov
inc
cli
loope
in
mov
sbb
mov
jecxz
in
clc
loope
xor
cwtl
inc
in
pop
loope
sbb
mov
out
inc
loope
push
push
enter
fsubp
xor
jg
dec
and
fdivrl
mov
or
inc
push
icebp
push
gs
stos
loope
pop
scas
inc
mov
xor
mov
shl
mov
cmp
out
sti
iret
ljmp
je
in
dec
aad
sarb
lods
in
cli
outsl
dec
movsb
cld
shlb
dec
mov
bswap
push
loope
jle
sub
iret
icebp
dec
add
loope
mov
loope
insl
ret
cmp
loope
jnp
cmc
jl
popa
xchg
addr16
shll
movsb
jo
add
push
mov
leave
ret
jo
jl
push
sub
mov
lods
cmp
pop
dec
ljmp
ret
fisttpl
enter
and
mov
jmp
int3
outsb
mov
pop
dec
stos
dec
aas
je
push
loope
scas
jnp
jp
js
loope
xchg
cmp
sub
adc
lods
fcomps
imul
fstps
mov
aaa
xor
or
xor
xchg
arpl
std
mov
push
dec
mov
or
mov
push
leave
repnz
lods
dec
mov
cmc
repz
loope
ret
lds
cmpsl
xlat
rol
int
in
repnz
sti
adc
inc
pop
aam
in
jle
arpl
int3
loope
push
sbb
sbb
movsl
fldenv
sub
cs
gs
add
mov
sub
sbb
in
mov
dec
imul
cltd
cmp
inc
in
clc
or
jmp
lahf
sbb
jmp
mov
adc
cmpsb
nop
lret
mov
std
aam
inc
lret
scas
jecxz
mov
arpl
add
test
negb
loope
xchg
lods
loope
dec
xchg
mov
loope
mov
dec
jns
and
cld
mov
mov
sub
in
lcall
adc
or
jecxz
loope
and
or
stos
push
fs
pop
mov
dec
test
mull
xor
sbb
jmp
pop
push
int
into
enter
mov
push
icebp
sub
inc
loop
loope
in
sarl
mov
loope
cmovl
inc
lds
lcall
adc
pop
push
cld
jo
ret
sti
call
in
inc
fdivrl
jg
push
push
scas
imul
add
pusha
mov
xchg
or
inc
jnp
mov
pop
pop
loope
sti
push
push
push
aas
add
push
out
jle
icebp
mov
push
pop
cmpb
loope
cmp
in
adcl
aaa
and
gs
add
arpl
movsl
std
in
insl
adc
pushf
movsb
icebp
jmp
pop
cmpl
shlb
adc
icebp
dec
scas
popf
js,pt
dec
gs
fwait
push
loope
adc
dec
and
dec
loope
cwtl
mov
sbb
sti
cmp
in
loope
mov
lock
sub
lcall
jb
adc
loope
jno
jle
jnp
and
fsubs
push
pusha
mov
leave
and
jns
xor
fbld
or
mov
jg
loope
jmp
dec
jo
test
jo
out
push
mov
xor
leave
jo
loop
sarl
ljmp
rclb
push
mov
cmpsl
mov
dec
loope
or
js
cmpsl
pop
bound
xor
loope
fs
jbe
out
dec
sub
lods
sbb
add
adc
jmp
inc
push
mov
fs
add
enter
mov
loope
pop
mov
add
mov
enter
lods
push
into
sub
aaa
adc
sahf
or
aad
cmp
sub
sub
int
call
imul
mov
mov
addb
loope
sub
and
scas
popa
mov
and
stos
fcompl
loop
shlb
loope
mov
mov
vphsubbw
shlb
push
dec
in
ss
lahf
xlat
sbb
popf
and
sbb
adc
sub
dec
stos
test
in
jne
mov
idivb
sbb
sbb
mov
clc
popf
fabs
test
dec
xchg
ret
jl
mov
jecxz
imul
out
xor
out
mov
ja
pushf
loope
or
push
mov
xlat
mov
inc
or
jo
lods
leave
incb
sar
jecxz
loope
testb
cld
mov
aad
and
dec
shr
adc
fisubrs
movsb
pop
push
loope
sbb
stos
imul
jo
loop
stos
and
lea
icebp
sub
xor
mov
loope
ljmp
pop
cmc
pop
xchg
aaa
fs
pop
ficompl
mov
lods
jecxz
pushf
inc
loope
or
fwait
int3
loope
dec
dec
or
je
loope
inc
bndstx
pop
xchg
shlb
xchg
push
ret
mov
mov
dec
dec
pop
test
push
jmp
in
sbb
adc
mov
mov
pop
inc
leave
fdivl
popa
les
lret
dec
xchg
mov
loope
shl
mov
sti
mov
xchg
fs
pop
arpl
mov
shlb
cs
loope
lds
imul
imul
loope
add
adc
sub
add
and
cmc
sub
idivl
insl
into
loope
push
cmp
loope
fdivrl
xchg
repz
jle
lods
loope
dec
mov
lock
xchg
inc
and
sub
ss
loope
and
mov
dec
iret
loope
jl
jo
in
mov
mov
mov
push
in
mov
fwait
mov
inc
adc
jbe
loope
ljmp
icebp
out
cwtl
add
inc
ss
adc
pop
in
repz
jo
and
ficoms
mov
sub
inc
sub
mov
jo
dec
push
fs
jecxz
mov
adc
adc
pop
arpl
cld
stos
mov
insl
mov
push
push
push
cmp
outsl
jg
loope
or
xchg
sbb
mov
mov
int3
movsl
arpl
rcr
jmp
ret
sarb
and
push
or
push
jmp
out
stc
testl
cmp
loope
or
push
ds
mov
push
lds
mov
shlb
pop
aam
in
inc
popa
cwtl
sub
xor
stos
pop
mov
xor
cmp
aam
mov
vpsubsb
cmpsl
adc
mov
inc
clc
jl
mov
and
and
sub
sub
push
jo
int3
loope
pop
sub
xor
cmp
push
pop
ficoms
mov
out
push
stos
or
loope
xor
out
out
pop
mov
popf
aas
shll
out
and
outsl
cmp
into
and
call
scas
xor
adc
jle
out
inc
dec
dec
jecxz
mov
in
or
jl
loope
xchg
inc
fcoms
scas
jae
mov
jmp
notb
popa
mov
xor
inc
sub
and
mov
scas
xor
stos
xchg
sbb
cvtps2pi
loope
xchg
out
loopne
inc
cmpsb
std
loope
fnstcw
sbb
enter
les
jo
hlt
pop
sub
movsb
jns
cmp
repz
popf
faddl
loope
xchg
push
or
and
int
sbb
or
and
push
push
sbb
jl
je
xchg
orl
xchg
mov
inc
mov
mov
into
imul
xchg
pop
out
inc
dec
dec
push
jecxz
gs
imul
and
ds
adc
out
xor
popa
and
loope
xchg
movsb
cmp
inc
mov
push
mov
loope
sbb
loope
xchg
shlb
pushf
je
xor
jo
movsb
cli
cmp
xlat
loop
fsts
cltd
jmp
push
popa
inc
loope
movsb
pop
xchg
fsubrs
mov
lret
xor
or
es
cmp
popa
stos
loopne
loope
int
dec
adcl
lock
loope
into
jl
test
loope
xor
ds
lods
sub
jecxz
sub
aam
orb
sub
outsl
cmp
fbstp
jno
jo
cmp
inc
out
sub
push
in
rorb
loope
fistps
and
inc
das
cmp
jo
adc
or
inc
jns
enter
xchg
push
aas
mov
jnp
mov
sbb
test
xchg
mov
inc
repnz
lretw
loope
cmp
lret
jle
jg
push
mov
add
push
sarl
cli
and
into
mov
adc
insb
iret
mul
push
inc
mov
and
mov
jge
cwtl
out
mov
in
xchg
hlt
mov
push
rolb
dec
cmp
pushl
jns
jmp
mov
loope
lods
sbb
add
mov
fistpl
sub
out
cltd
jmp
and
jl
mov
xchg
insl
scas
outsl
ss
loope
subb
loope
push
sub
sti
test
mov
rorl
ljmp
loop
fisubs
das
lock
aam
add
aad
mov
or
jmp
in
movsb
in
dec
push
test
pop
sbb
jo
loope
or
xlat
push
insb
aas
pop
loope
js
mov
xchg
cmp
rcrb
mov
fbld
fwait
pop
ljmp
out
sbb
sbb
stc
push
loope
das
imul
jo
xchg
xor
xor
and
dec
push
or
and
mov
out
push
inc
neg
jne
bound
loope
pusha
pop
sub
sbb
loope
insb
ss
out
push
rolb
ret
and
iret
in
push
xchg
or
stos
sbb
xor
aad
filds
imul
es
ret
sbb
jns
in
dec
movsb
xor
loope
frstor
xor
loope
sti
sbb
mov
ds
add
loope
adc
or
sbb
rolb
popf
jecxz
out
out
or
xchg
push
rol
xor
mov
mov
addb
mov
jbe
mov
shlb
fdivrl
loope
dec
lcall
adc
sbb
lret
mov
loope
in
mov
les
inc
mov
jmp
in
fdivrs
test
in
inc
xor
stos
in
scas
mov
mov
jge
mov
shr
mov
pop
jg
jle,pn
dec
add
inc
and
testl
in
add
loope
les
xchg
insl
mov
sbb
xorb
movsl
and
into
jnp
repz
push
rcr
mull
rclb
xor
jl
jp
add
sub
push
jmp
loope
push
pop
data16
mov
mov
lcall
lods
jecxz
mov
testl
cld
and
out
sbb
push
xchg
rcr
jp
imul
xorb
movsb
popa
fisttps
mov
pop
mov
jns
gs
outsl
dec
les
loopne
ja
lock
dec
ret
lcall
aas
xor
iret
test
mov
out
cli
adc
shll
inc
pop
cwtl
aam
scas
loope
pop
mov
clc
inc
sar
pop
push
sub
mov
in
push
loope
jbe
xchg
mov
cmp
dec
mov
gs
fwait
inc
imull
jmp
adc
rcll
daa
clc
and
xchg
scas
jo
fcomps
mov
stos
mov
inc
add
es
in
jbe
and
gs
add
cmp
mov
lcall
fstps
mov
cmp
shrb
loope
mov
loope
test
push
ret
loope
push
add
aad
arpl
xchg
push
in
dec
mov
loope
js
xor
pop
subb
lahf
loopne
inc
loope
xor
jp
loope
out
xor
call
pop
es
into
mov
jne
fs
jecxz
push
psraw
mov
pusha
insb
dec
sub
sahf
add
lods
xchg
push
lret
xchg
mov
mov
sub
and
xchg
in
push
and
or
lods
mov
loope
sbb
cmpb
jns
stos
jae
je
stos
popa
loope
js
imul
or
jmp
mov
mov
pusha
fimuls
sub
loope
pop
inc
cmpsb
pop
leave
scas
xchg
addr16
mov
test
mov
sarb
ror
mov
sub
call
clc
sahf
loope
repz
ficoms
jmp
adc
insb
call
mov
xchg
sbb
push
loop
xlat
aaa
loope
jle
ljmp
and
in
and
iret
cmp
jo
into
int3
lret
outsl
in
cli
ja,pn
loope
fs
movsb
mov
jbe
stos
mov
rcr
addr16
mov
loope
lahf
hlt
cmpsl
pop
cmp
mov
cld
push
cmp
or
enter
and
loope
out
adc
loope
jo
sti
scas
mov
arpl
sbb
push
cmpsb
add
fdivl
push
fistpll
clc
push
jae
cs
mov
sub
out
xchg
loope
vsubps
xchg
ret
jo
filds
cmpsb
add
mov
loope
fmulp
jecxz
xchg
jmp
imul
pushf
xor
hlt
add
and
cmp
out
pop
dec
imul
push
lods
stos
cltd
mov
sbb
movsl
das
loop
sub
and
adc
jmp
popf
sbb
add
inc
lock
cmp
cld
outsb
pop
ja
mov
popa
sbb
mov
sub
mov
jmp
imul
daa
dec
es
adc
mov
fildl
jmp
xor
sub
loope
aam
add
loope
adc
loope
adc
jbe
inc
aad
loope
enter
xchg
dec
shrb
add
add
inc
popa
scas
mov
and
pop
jno
js
jg
loop
clc
fs
ljmp
addl
loope
mov
and
loope
dec
outsb
xchg
jnp
in
loope
xorb
xchg
call
pop
xchg
ud2
lods
fiaddl
mov
sahf
xchg
cld
mov
hlt
in
sbb
ja
loope
sub
or
pushf
xchg
fsubrp
repz
out
adc
dec
loopne
fld
outsb
lods
daa
or
repz
popa
mov
rcr
jmp
fiadds
loope
imul
push
cmp
adc
mov
bnd
pop
loope
push
jmp
cs
and
inc
jo
xchg
jns
mov
mov
adc
sbb
mov
stos
inc
leave
dec
loope
and
aad
or
les
lret
inc
out
sub
insl
cli
loope
jmp
cmpb
fcoms
jne
shr
sub
loope
mov
loope
lea
das
add
xchg
loope
xorl
jl
push
adc
xchg
es
add
daa
dec
ret
inc
loope
nop
iret
imul
pop
mov
add
xchg
flds
xor
pop
loope
jo
arpl
mov
loope
pop
clc
sub
loope
inc
cmp
add
mov
mov
jmp
xchg
fbld
or
fucomp
scas
pop
xor
xchg
in
ficoml
rcl
xor
push
jmp
cmp
icebp
pop
std
dec
inc
pop
add
sub
sbb
jecxz
loope
push
cwtl
cmp
es
mov
sub
lock
incb
fs
les
fldcw
addb
xor
cmpsb
pushf
sbb
mov
int
xchg
sub
dec
rorb
loope
nop
cmp
adcl
cmp
ss
xchg
and
dec
call
cltd
lret
inc
jno
shlb
ret
mov
loop
jmp
into
loope
lea
jo
xchg
in
fadd
loope
mov
mov
adcb
addl
loope
dec
arpl
jne
jae
adc
fs
aas
sub
in
mov
xchg
js
stc
outsl
push
int
loope
lcall
loope
xchg
cli
stos
mov
scas
loope
add
or
popf
je
loope
adc
add
inc
ja
mov
movsl
push
andb
loope
cmp
test
loope
icebp
pop
jb
mov
loope
push
aam
jl
shll
das
mov
in
test
pop
loope
stos
out
mov
jle
loope
mov
xorl
pop
xor
jge
popa
roll
ljmp
test
jo
mov
mov
inc
jmp
push
push
pop
add
mov
mov
and
cmpsb
mov
cmp
add
movsb
push
loope,pn
mov
decl
stc
stos
int3
jmp
dec
mov
push
or
filds
js
jnp
xchg
or
adc
stc
leave
push
push
mov
shrb
notb
mov
enter
stc
orb
inc
dec
sub
pusha
mov
in
cmp
xchg
les
cli
sub
mov
out
xlat
dec
loope
pop
jbe
rol
mov
cmp
lods
pop
sbb
mov
icebp
ret
aad
jo
loop
jmp
inc
outsl
xchg
dec
sub
mov
jmp
and
mov
stc
dec
cmp
addr16
faddl
out
insl
pop
cmp
mull
loope
jmp
in
mov
add
mov
mov
xchg
cmp
xlat
add
sbb
insl
xchg
test
xchg
aad
pop
popa
fistpl
loope
jne
mov
xor
movsb
addr16
lcall
js
pop
cmc
loopne
sti
popa
sbb
mov
leave
movsl
cmpsl
mov
icebp
jbe
add
loope
das
inc
vaddpd
mov
xor
mov
out
mov
push
ljmp
leave
or
or
dec
mov
shlb
jno
sbb
pop
mov
mov
mov
int3
and
sti
mov
ds
xchg
fdivl
mov
loope
int
sti
icebp
mov
loope
or
iret
ret
loope
pop
insl
cmp
pushf
cli
dec
inc
sub
inc
jg
pop
rclb
loope
inc
bnd
test
lds
jo
sahf
mov
xchg
lcall
jl
nop
mov
and
fwait
adc
jle
into
sbb
std
pop
outsl
inc
loope
shll
and
fs
cmp
dec
push
mov
cmp
xchg
push
sti
dec
or
pop
loope
xor
sbb
push
icebp
jb
and
pop
das
aaa
scas
loope
and
out
xchg
cmc
popa
or
lret
or
sub
push
out
test
aad
jb
ficomps
xchg
loope
cmp
push
test
rorb
call
add
xchg
inc
jmp
inc
mov
int3
ficompl
or
jmp
pop
loope
out
pop
adc
push
loope
repz
das
es
mov
jo
daa
test
jne
adc
das
sub
fistl
cmpsb
mov
inc
ss
mov
loope
std
incl
imul
loope
fcmove
push
inc
shll
cltd
out
nop
jno
and
pop
call
or
jle
sbb
loop
pop
into
loope
xchg
outsb
dec
lahf
dec
sub
imul
add
pop
mov
mov
sbbb
dec
outsl
xchg
iret
aad
cmp
mov
sarl
fwait
push
adc
lcall
pause
inc
inc
pop
jns
loope
xchg
and
jmp
mov
in
in
lret
inc
push
rorb
adc
push
jb
ds
cmpl
shll
pop
ret
mov
out
xchg
addl
mov
incb
int3
sahf
addr16
cmp
jo
push
repz
jmp
fldenv
out
jb
push
xchg
in
test
lock
pop
cmp
scas
or
cmp
jae
int3
push
jbe
std
je
pushf
icebp
enter
jle
popa
sub
push
jmp
xchg
lea
loope
mov
iret
inc
pop
ja
loope
push
jge
xchg
mov
mov
sbb
lock
loope
pop
pop
push
adc
and
push
jnp
mov
fwait
bound
je
push
pop
xlat
xchg
xor
lds
loope
add
ds
jns
xor
inc
push
mov
in
js
xchg
fsubl
loope
shl
pop
jae
into
loope
cmp
sub
push
jns
or
and
dec
jecxz
loope
push
add
mov
inc
stos
dec
xchg
pop
leave
aad
pop
mov
scas
roll
loope
push
sbb
dec
das
shl
loope
lods
push
inc
push
out
cmp
inc
shll
lret
ljmp
mov
movsl
sbb
loope
or
xchg
outsb
pop
add
jo
bound
xchg
ret
icebp
add
loop
ljmp
jecxz
mov
fidivs
ja
loope
sarl
cmpsb
inc
ja
mov
js
inc
andl
dec
adc
mov
call
push
jp
test
mov
repz
dec
lock
jmp
pop
scas
vmovups
mov
std
fbstp
loope
or
mov
and
and
loope
fdivr
rcr
pushf
or
imul
test
mov
ret
sar
add
mov
testb
mov
adc
mov
mov
mov
imul
aam
xor
ljmp
scas
adc
adc
loope
js
cmc
jmp
mov
mov
cltd
sbb
dec
inc
loope
xchg
out
and
daa
cmp
out
or
add
mov
mov
pop
sub
aas
pusha
push
pop
xchg
inc
inc
fsub
in
jmp
cli
add
jne
mov
adc
xor
sarb
jmp
xor
and
cmp
sub
sub
fsts
mov
sbb
test
mov
and
mov
sub
mov
incl
jl
fsubp
inc
adc
scas
jmp
inc
loope
dec
sahf
cmpb
addl
jo
inc
mov
loope
adc
pop
loope
aam
lods
pop
adc
add
ljmp
jp
xchg
or
les
in
pusha
test
push
sbb
shr
cs
into
stos
or
ret
fdivrs
in
dec
loope
xchg
int3
lds
arpl
loope
dec
cmp
fabs
fiaddl
aaa
loopne
adc
add
xchg
out
dec
mov
loope
aad
movl
cmp
xchg
jge
in
fcmovnbe
sbb
loope
aaa
movl
push
mov
cld
dec
jge
xchg
jmp
adc
imul
jmp
cmc
mov
push
adc
fstpt
inc
push
and
or
pop
lahf
sarl
push
test
fptan
fisttpll
dec
mov
and
loope
dec
mov
pop
subb
loope
repnz
loope
jns
mov
loope
in
add
add
xor
ret
adc
jo
fnstenv
pop
ljmp
std
jge
frstor
js
ret
pop
sub
xor
mov
xor
add
xor
mov
lret
lods
loope
hlt
pop
inc
mov
adc
and
stos
cld
in
adc
or
pop
jo
lea
popa
mov
pop
nop
adc
in
iret
enter
and
lcall
es
push
in
mov
fs
loop
mov
add
fwait
test
enter
push
test
add
jmp
xor
int
or
sub
mov
xchg
xor
gs
ficoml
test
scas
sahf
push
mov
aad
add
xor
sub
dec
adc
mov
xchg
sbb
inc
cmp
pop
jp
inc
repnz
in
loope
roll
mov
aam
ja
loope
xor
sbb
mov
or
adc
jo
sbb
das
dec
loope
or
shll
movsb
popa
movsl
sub
mov
dec
fnstenv
in
ret
fdivr
loope
sbb
jg
frstor
loopne
xchg
pop
mov
adc
fsubrl
xor
and
lods
push
mov
cmp
aaa
clc
push
sbb
pop
jg
out
and
shrb
pop
push
cmp
aad
in
push
xchg
int
into
in
pop
stc
and
xor
cmp
jo
sbb
ficomps
cwtl
jmp
sub
mov
loope
mov
ljmp
jb
push
jo
cltd
sbb
out
test
mul
cmpsl
sbb
jo
lods
into
mov
push
rolb
shr
pop
pop
leave
add
sbb
bound
lret
mov
push
mov
aam
cli
pop
stc
push
pop
dec
aaa
stos
outsb
mov
jno
inc
lcall
push
aam
xchg
inc
jo
iret
xchg
mov
mov
cltd
popa
popa
out
ret
loope
dec
dec
mov
loope
pushf
xor
mov
popl
jg
sub
dec
mov
jmp
gs
loope
sbb
sbb
jo
jae
jmp
inc
stos
fmulp
add
mov
out
in
mov
in
or
lods
daa
cmp
xchg
pop
pop
movsb
jmp
inc
loope
cs
lret
arpl
ds
out
and
add
cld
loope
scas
cmp
mov
cmpsb
daa
jl
jl
sbb
loope
out
arpl
mov
pusha
mov
dec
mov
les
mov
sbb
pushl
dec
das
stc
loope
pop
jg
adc
aaa
pusha
sahf
inc
rol
inc
loope
cwtl
cmp
push
insb
je
out
lock
push
test
pop
mov
push
and
insb
lds
notb
mov
jne
lahf
mov
lock
cmp
dec
leave
je
in
stos
cltd
mov
test
mov
cmp
pop
inc
xor
loop
lods
loope
jmp
std
popa
loope
adc
lock
ds
mov
lea
pusha
jecxz
std
lods
daa
adc
out
xlat
jno
scas
push
loop
pusha
loope
and
aad
test
lret
cmp
loopne
loope
lea
jo
leave
mov
mov
dec
mov
in
stos
out
sti
jl
jbe
pushf
loope
jp
or
cmc
or
fldl
xchg
f2xm1
push
test
loope
mov
out
mov
cwtl
loope
les
loope
aam
jbe
push
jp
out
out
mov
dec
les
lcall
mov
lret
dec
loop
push
movsb
xchg
daa
add
bound
iret
jae
popa
out
int3
ret
sbb
xor
out
xchg
imul
mov
mov
loope
dec
xchg
push
jge
jo
movsl
movsb
dec
xlat
loope
sbb
aas
xor
push
mull
scas
inc
loope
enter
fcoml
xchg
out
sub
push
das
in
pusha
mov
pop
pushf
lahf
dec
cmpsb
in
xchg
outsb
loope
movsb
xchg
jns
mov
mov
inc
jecxz
cmp
cmc
or
pop
push
jmp
mov
jne
int3
fs
iret
call
popa
and
cmp
movsl
in
stos
jp
clc
fmul
in
mov
and
loop
push
adc
loopne
inc
loope
xor
imul
or
repnz
push
jb
shll
cmp
je
fwait
jecxz
addr16
stc
loope
push
leave
sahf
mov
push
pop
roll
pop
lret
loope
lahf
arpl
and
push
loope
adc
pop
into
lret
addr16
stos
jmp
addr16
movsl
fildl
cmc
mov
out
lret
je
sti
lret
jl
aad
push
shl
jp
xchg
dec
or
add
call
mov
xor
arpl
sub
and
xor
mov
pushl
pop
ljmp
mov
xchg
push
inc
out
cmp
and
in
cld
lds
xor
enter
push
in
out
push
and
arpl
daa
xor
mov
push
loope
iret
rclb
insl
adc
ds
xor
mov
dec
fists
mov
enter
sbb
mov
bound
xlat
add
adc
push
shll
stos
mov
lock
pop
out
sbb
jo
inc
jecxz
nop
loopne
inc
loop
loope
push
sub
addr16
jmp
ljmp
sti
and
sub
inc
loope
cmp
nop
shlb
aad
outsb
es
lahf
push
aam
loope
mov
xchg
rolb
mov
in
push
or
sub
out
loope
jl
dec
sti
scas
push
lahf
shlb
fnsave
jo
call
das
stos
dec
xor
nop
loop
ficompl
ret
mov
mov
dec
addl
xchg
pop
arpl
and
and
jmp
mov
mov
dec
in
aas
jae
adc
xor
pushl
test
cmp
adc
add
enter
xchg
cmc
imul
decb
xchg
add
mov
cmp
and
push
or
or
and
xchg
lock
cwtl
pop
outsb
adc
vpcmpgtb
xor
sarb
inc
loope
push
hlt
shll
mov
lock
mov
inc
cmp
mov
and
xchg
or
jp
add
jmp
push
fcomps
movsb
aam
loope
dec
sbbb
xlat
jns
ret
loope
or
sti
or
test
jl
outsl
jno
or
add
loope
fistl
mov
out
loope
out
jge
mov
cmc
xor
xchg
mov
push
sbb
aaa
mov
push
js
dec
int
ret
jae
jecxz
inc
or
adc
cmp
jl
jp
icebp
loope
and
or
dec
cld
loope
jecxz
cmpsb
in
dec
xor
pop
add
jo
inc
loope
rep
sub
push
js
mov
and
adc
stc
lods
sbb
std
adc
dec
mov
sub
jns
mov
jne
loope
icebp
rcl
sub
repnz
jle
jne
loope
mov
cmpsl
and
movzbl
loopne
lahf
test
movsb
call
dec
push
nop
lds
pop
adc
pusha
jns
iret
jecxz
loope
ss
add
lret
daa
ds
loope
xorl
mull
xchg
adc
and
push
mov
call
adc
or
cs
cli
jmp
mov
lahf
loope
lea
mov
jl
cmpsl
mov
bound
insl
das
repz
cmpxchg
push
test
dec
xchg
mov
mov
cmp
loope
cmp
cli
loopne
lea
std
stc
iret
fadds
xchg
xchg
pushf
loop
icebp
insb
jp
loope
cltd
and
in
jns
loope
dec
mov
call
pop
ja
pop
cwtl
pushf
icebp
shr
and
dec
jecxz
inc
aam
ret
imul
jns
inc
xor
sbb
jnp
and
enter
and
pushf
popa
xchg
std
inc
out
sarb
in
cmp
jo
xor
in
call
jb
in
loope
mov
aas
cli
mov
mov
adc
jecxz
jecxz
loope
arpl
xor
fdiv
loope
pusha
jmp
repnz
pop
cltd
fwait
loope
lds
and
fimull
loope
xchg
mov
les
cmpsb
mov
movsl
js
push
adc
out
clc
and
dec
scas
loope
faddl
pop
cs
jmp
hlt
js
int
xor
jo
out
mov
loop
push
ljmp
std
adc
shlb
ret
int3
xor
mov
fs
push
imul
mov
out
mov
xor
test
inc
test
loope
mov
imul
mov
push
dec
lea
lods
pop
loope
lock
mov
mov
jo
or
fs
test
aas
inc
sub
loope
mov
loopne
loope
shll
and
mov
mov
mov
loope
imull
jnp,pt
push
jo
xor
sub
mov
rcrl
xchg
xchg
shll
loope
mov
aas
loope
jbe
movsl
aad
push
or
pop
xor
fs
and
add
pop
jl
push
mov
fsub
inc
lock
dec
cs
xchg
mov
and
mov
loope
mov
sbb
rcrl
or
loope
incb
divl
and
and
jge
inc
ficoml
xor
orb
movsb
aas
jnp
outsl
sarb
xchg
pop
test
call
loope
lahf
inc
mov
loope
icebp
fcoml
xor
dec
cs
push
and
jle
loope
mov
push
add
push
adc
fnstcw
into
xor
push
xchg
push
scas
or
ja
mov
mov
loope
push
and
scas
inc
pop
int3
lock
dec
inc
stos
dec
adc
insl
and
push
fsts
mov
lock
outsb
sbb
movsl
sub
loope
cmpb
aaa
ss
lds
adc
xor
sbb
dec
movsb
out
sbb
jmp
mov
mov
xor
xchg
dec
adc
out
add
fmuls
aaa
adc
cltd
aad
mov
mov
in
xchg
sbb
faddp
dec
xor
inc
xchg
sbb
pop
stos
inc
jmp
loope
out
test
fnstsw
and
push
in
push
add
push
xchg
loope
sbbl
jmp
push
and
call
lock
adc
pand
push
adc
sbb
and
scas
mov
mov
add
adc
clc
mov
stos
and
and
jne
xor
xchg
inc
lock
int3
adc
cld
loope
cs
lock
or
fs
fistl
lret
xor
add
cli
mov
clc
jmp
xlat
shrb
sub
jo
loope
popa
jl
push
inc
aaa
dec
and
sbb
in
dec
pop
lods
pop
aas
loope
pop
mov
test
cli
loope
aam
outsb
pop
frstor
add
jl
out
loopne
bound
cmp
and
lcall
adc
loop
gs
bound
mov
rolb
cmpsl
pop
gs
push
dec
sub
fcomip
adc
cmp
roll
pop
loope
cwtl
scas
add
outsl
scas
loope
mov
lea
imul
es
subl
inc
dec
daa
test
cwtl
cmc
rcl
inc
aaa
jnp
mov
lods
lret
loope
mov
xchg
jns
mov
sti
mov
das
sub
and
loope
in
cltd
mov
xchg
mov
mov
mov
lock
fiaddl
inc
cltd
mov
jl
sbb
and
adc
mov
mov
les
js
sbbb
adc
sarb
sbb
test
fwait
xchg
dec
in
test
aaa
sti
lret
icebp
push
dec
repz
mov
sub
mov
aam
push
xlat
sbb
movsb
cli
das
popa
shlb
fnclex
test
push
je
in
bnd
dec
gs
push
push
cli
popa
daa
dec
adc
inc
ljmp
cmp
jno
stc
sbb
mov
leave
iret
jns
out
jo
shl
mov
stos
sub
adc
bound
xor
push
dec
dec
sbb
pop
lods
inc
sbb
cltd
push
cs
cmp
loope
in
jmp
repz
jo
cmpsl
ljmp
jmp
mov
xor
jae
lea
loop
les
loope
or
jo
das
jp
nop
out
sbb
xchg
cmp
dec
push
cld
adc
les
xchg
loope
xor
lds
jns
push
mov
jg
loope
out
mov
add
or
mov
jne
sbb
dec
insl
out
loope
pop
aad
xor
popf
cs
push
sbbl
cmp
mov
insb
jbe
loope
dec
scas
into
adcb
loope
test
cmp
mov
mov
xchg
jae
xor
mov
or
loope
call
fisubrl
loope
divb
jle
test
leave
rorl
test
sbb
mov
or
test
jp
mov
add
popa
ss
lods
rclb
pop
pop
inc
mov
and
addr16
mov
loope
mov
das
add
jno
jmp
add
xorl
cmc
cld
loope
push
sub
clc
xchg
or
imul
out
jmp
loope
out
push
lahf
testl
aas
mov
data16
dec
fs
je
sbb
pop
loope
and
push
insl
movsl
pop
arpl
psraw
xor
lds
pop
cmc
mov
loope
mov
lea
outsb
jnp
insb
inc
pop
mov
jo
ljmp
sbb
cmp
cli
and
push
mov
loop
and
lahf
push
or
lods
nop
test
add
outsb
mov
shlb
xor
out
lret
jo
sub
lret
mov
adc
popa
repz
repz
clc
sti
mov
sub
inc
xchg
bound
iret
jne
sub
add
out
mov
cld
inc
push
insb
gs
cmpsl
outsl
loope
mov
loope
dec
adc
ret
xor
loope
mov
std
xchg
addr16
push
mov
and
xchg
add
lods
out
divl
loope
lret
dec
jb
dec
loope
push
add
xchg
lcall
imul
loope
mov
cld
jo
and
xor
cmpsb
push
gs
loope
testb
int
clc
loope
push
xchg
push
and
loope
xchg
fsub
pusha
push
loop
insl
in
or
cmp
and
into
jne
sbb
jb
mov
mov
pop
push
imull
xor
decb
pushf
add
sahf
das
outsl
rcrb
mov
dec
in
mov
movsb
loope
dec
lret
sbb
push
cwtl
and
sub
iret
cld
and
jno
loopne
outsb
dec
lds
jne
mov
push
ret
ja
xor
mov
add
sbb
mov
mov
adc
loope
cwtl
fiadds
jns
loope
stc
outsl
gs
mov
mov
xchg
cmpsb
call
addr16
add
sbb
mov
jle
rcpps
mulb
scas
inc
push
xor
loope
addr16
call
enter
ret
jo
data16
out
jmp
popa
loope
fisubrs
mov
xchg
jge
stos
jmp
jne
cmpsb
dec
push
aam
insb
loope
mov
int3
or
lods
push
loope
xor
in
cmpsb
loope
dec
sti
imull
mov
or
out
iret
mov
jl
xchg
mul
hlt
clc
xchg
sti
pop
jle
fildl
adc
lea
cmp
mov
jle
mov
push
mov
sub
clc
jecxz
xchg
mull
lcall
outsl
jp
aas
loope
fdivp
xor
mov
cmpsl
or
daa
ljmp
pushf
out
jg
push
bound
mov
pop
repz
xchg
loope
pop
sbb
add
aas
mov
outsl
lahf
pop
sti
loope
inc
sub
lock
add
inc
xchg
bound
jo
pusha
add
out
test
dec
mov
in
sahf
lock
push
xorb
addr16
loope
xor
jecxz
int3
sbb
addr16
and
mov
jo
or
xchg
adc
lods
ss
or
test
mov
or
xor
mov
and
gs
jne
adc
pop
pop
add
cltd
add
popa
iret
call
cmpb
sub
fsub
imul
sahf
pop
loope
jle
and
mov
jnp,pt
ret
shl
icebp
adc
mov
xor
add
dec
jg
sub
jnp
mov
ret
arpl
hlt
jo
and
dec
ljmp
mov
jmp
sub
xchg
xchg
inc
lock
jae
cli
roll
mov
push
shl
add
movsl
scas
mov
inc
push
loope
les
inc
inc
xor
push
loope
hlt
stos
mov
sub
inc
ss
stos
shl
xchg
in
leave
std
movsb
adc
pop
sti
pop
mov
loope
shrl
loope
adc
mul
fldenv
ja
shll
inc
loope
sbb
add
loope
imulb
jae
in
pop
loope
aad
pushf
dec
jg
push
gs
movsw
test
xchg
inc
inc
popa
and
iret
stos
jmp
xchg
pop
test
mov
dec
jmp
loope
sbb
es
inc
jbe
push
jecxz
push
cmp
loope
or
pop
enter
push
mov
xchg
or
xor
or
stos
jecxz
add
sbb
call
fwait
jle
mov
shll
add
lock
xchg
pop
pop
fsts
pop
loopne
loope
test
cmpl
inc
clc
movsl
jmp
lock
loope
lods
sar
mov
sub
movl
shlb
push
inc
add
and
mov
mov
add
adc
in
stc
xchg
xchg
or
inc
pop
ds
inc
pop
push
clc
lret
lret
nop
xlat
inc
scas
arpl
shl
add
bound
rolb
cwtl
outsb
sub
loope
lret
cmp
push
or
int3
mov
mov
mov
je
jnp
jne
inc
sub
out
ret
adc
arpl
jmp
ss
dec
xchg
mov
xor
mov
mov
inc
jmp
add
dec
cld
repz
pop
jmp
xor
loope
add
out
cmp
inc
fmuls
insl
jo
fstps
sub
and
sub
jb
adc
scas
sbb
rclb
mov
in
pop
sarb
or
jo
loopne
lret
push
loope
jno
data16
popa
loope
adc
add
cltd
cmp
sub
sbb
cmp
jge
fs
jl
push
loope
orb
add
cwtl
or
movsb
push
aas
in
mov
call
pop
add
fwait
and
dec
jecxz
xor
cltd
sbb
loope
xchg
ljmp
nop
sub
cmp
xchg
imul
enter
mov
loope
cld
or
inc
fadds
jmp
popa
push
pop
inc
outsb
mov
push
mov
rcrb
or
mov
movsb
sub
shll
cmpl
das
je
dec
loope
mov
mov
loope
scas
icebp
inc
pop
cmc
cmp
mov
test
push
jmp
fidivrs
and
je
push
jg
fildl
xchg
xor
add
push
xchg
arpl
inc
rorb
fisttpll
lret
mov
inc
outsb
clc
jne
adc
mov
pmaxsw
pop
dec
cs
movsl
je
xor
jecxz
imul
pop
loope
mov
lret
fs
lea
loop
mov
or
out
adc
mov
cltd
push
daa
fs
loope
movsb
or
and
sub
sbb
pop
outsb
fsub
gs
inc
rorb
xor
loope
mov
jae
loope
push
aam
push
adc
mov
jmp
pusha
lret
inc
out
xchg
mov
add
loope
out
push
push
iret
pop
loope
and
orl
dec
mov
sub
lods
xchg
adc
scas
inc
into
loope
inc
idivl
pop
sahf
adc
and
or
mov
xchg
pop
movsb
mov
loope
stos
repnz
dec
or
and
out
mov
cs
gs
clc
or
sub
adc
mov
aaa
sbb
xchg
inc
loope
jp
test
fwait
inc
incl
cmp
ret
adcb
ja
dec
scas
loope
inc
mov
dec
pop
jb
fnsave
add
loope
adc
jbe
pop
or
or
loope
xchg
cmp
jne
or
icebp
addr16
lock
aas
lods
xchg
divb
in
js
mov
ljmp
cli
out
insl
jnp
xor
popa
mov
inc
xorl
add
fsubs
push
push
inc
mov
jno
in
aaa
inc
loop
paddw
jmp
mov
xchg
pop
arpl
loope
hlt
xlat
mov
imul
ret
cmc
loope
mov
xor
mov
je
pop
lcall
ss
pop
mov
adc
or
xchg
jecxz
jne
cltd
fwait
loope
pop
mov
sbb
test
mov
int3
ja
mov
xor
xchg
push
insl
rolb
cmpsb
xlat
leave
pop
pop
fs
in
mov
arpl
jb
loope
dec
cmp
pop
fs
sub
loope
sbb
sbb
jae
jmp
nop
fsin
add
shr
cmpsb
push
mov
adc
jg
mov
cwtl
xor
lea
xchg
jo
sub
push
das
loope
xchg
mov
jb
mov
loope
in
lods
pusha
add
jmp
mov
loope
sbb
mov
cld
xchg
cmp
xchg
mov
cmp
sti
mov
mov
test
dec
xlat
xchg
fdivs
xchg
je
popa
and
es
adc
loope
mov
sbb
insl
int
arpl
cmp
or
lock
pop
shl
ja
inc
jo
std
jmp
fldcw
mov
pop
enter
dec
mov
and
xor
je
dec
jo
fidivrl
and
ret
loope
jno
shrl
mov
mov
or
je
dec
ja
fucom
mulb
jmp
test
jmp
icebp
mov
loope
pop
mov
jns
xor
loope
add
push
inc
push
mov
inc
mov
subl
and
fisttps
cld
sub
xor
xchg
loope
leave
jns
in
int3
and
push
and
lahf
in
es
sti
sub
dec
push
cmp
loope
fwait
roll
sbb
rorb
loope
pop
xchg
ror
loope
and
pushf
cmp
iret
xchg
mov
loope
arpl
dec
loope
push
xchg
cmp
jbe
sbb
xchg
lret
adc
mov
and
lea
or
push
xor
sub
mov
mov
int3
ds
or
loope
imul
mov
and
iret
dec
repnz
ret
lahf
or
cwtl
in
insl
lock
iret
outsl
mov
and
aas
xchg
add
lock
mov
xchg
call
lcall
loope
mov
in
inc
loope
das
pop
jl
jge
out
dec
sarb
es
cmp
stc
incl
push
xor
push
std
out
rcrb
mov
and
or
aas
gs
adc
xor
sub
cmp
xor
pop
push
pop
popf
jo
es
ljmp
lock
out
popa
pusha
sbb
in
loope
scas
jae
inc
rclb
mov
adc
ja
cmp
je
loope
cmp
loope
pop
lret
nop
dec
add
loope
test
int3
imul
sbb
xchg
arpl
inc
out
clc
xor
xchg
leave
idiv
add
inc
xlat
push
push
loope
lahf
push
ljmp
xor
mov
xchg
mov
or
sarl
aas
out
ret
adc
add
in
mov
or
rcrb
mov
movl
arpl
mov
scas
mov
cmp
dec
jg
loope
sbbl
or
and
ficoml
cltd
jmp
imul
xchg
bound
pop
out
push
gs
jb
stos
sub
loope
cmpl
loope
hlt
mov
cmp
fwait
stos
sub
in
f2xm1
mov
mov
pop
add
lock
insb
jnp
in
daa
cmp
sbb
loope
or
and
outsl
jmp
push
add
lock
loope
inc
and
je
adc
cs
push
add
in
cmc
repnz
xor
push
lret
sti
loope
inc
dec
or
xor
jo
les
jg
arpl
add
mov
loop
sahf
leave
xchg
loope
sbb
stos
sbb
insl
aaa
jmp
jnp
and
mov
lret
pushw
jl
cli
pop
cmp
das
ljmp
sub
adc
call
dec
faddl
push
pop
leave
or
jbe
xchg
pop
or
loope
loope
xchg
enter
adc
loope
mov
mov
loope
cmp
and
cmc
std
lret
or
mov
add
test
jecxz
lea
dec
xchg
pop
orl
ljmp
and
std
loope
xchg
jns
ret
dec
inc
mov
sbb
repnz
repnz
add
loope
pop
aas
pop
and
sti
fsubl
mov
add
dec
loope
scas
fstpl
dec
inc
jp
xor
push
add
jmp
pusha
lcall
loopne
fdiv
mov
ret
jbe
sub
insl
sub
in
mov
mov
mov
les
cmpsb
in
rcll
pop
loope
cli
xchg
xchg
mov
je
shlb
repnz
jb
add
mov
and
fdivs
mov
in
scas
shlb
aam
fnstenv
pop
out
mov
loope
xchg
movsb
jnp
and
loope
es
inc
dec
out
xor
sub
ficoml
jo
mov
inc
xlat
mov
dec
jmp
jnp
dec
inc
and
mov
movl
ljmp
adc
push
loope
ja
or
mov
loope
inc
sub
jmp
xchg
adc
push
jmp
xchg
loope,pt
into
dec
dec
and
push
stc
jmp
cwtl
cmc
sub
ja
in
and
in
pop
repnz
mov
mov
loope
ja
and
loope
rorb
and
loope
jne
pop
rol
jg
ds
jbe
ss
jae
jne
xor
mov
jmp
loope
nop
addr16
dec
repz
and
pop
movsb
jp
mov
mov
add
sub
cmpsl
xchg
mov
test
sub
mov
jne
loope
mov
jg
lcall
sti
shr
sub
aad
test
daa
mov
jno
int3
int
ret
jmp
pop
xchg
mov
push
loope
rorb
insl
loope
pop
insb
push
mov
test
das
xor
ficoml
mov
ja
gs
popa
sub
sub
xchg
or
mov
shrb
daa
mov
arpl
jmp
cltd
inc
or
cmpsb
add
jecxz
loope
adc
pusha
sbb
jge
rcl
ret
cld
jg
jmp
dec
and
add
shlb
inc
lea
movsl
xchg
je
inc
ss
jle
fisubrs
lret
pop
inc
mov
cwtl
push
lock
daa
adcl
xchg
in
mov
stos
sbb
mov
jo
xor
xchg
jnp
out
sahf
and
loope
fs
or
cs
and
call
add
cmp
xchg
and
jbe
push
shlb
cltd
sub
sbb
addr16
and
hlt
loope
stos
push
jl
or
push
mov
mov
mov
test
inc
sbb
scas
pop
loope
fidivl
loope
jb
mov
inc
xchg
sub
loope
sub
cld
shll
sbb
and
mov
mov
fisubrl
mov
jo
sub
and
sub
mov
ret
push
mov
push
inc
sbb
loope
out
lock
dec
adc
dec
and
and
outsb
dec
pop
lods
loope
mov
test
jb
xchg
shl
sbb
push
and
adc
fldln2
fisttpll
sub
xchg
loope
mov
cli
or
lock
jge
sbb
hlt
sti
pop
adc
xor
loope
mov
test
sbb
or
loope
rolb
ljmp
shr
or
add
xlat
pop
xchg
mov
repnz
aad
and
lret
inc
nop
sub
xchg
adc
jmp
loope
jne
inc
inc
in
out
and
add
mov
sub
test
outsb
and
sub
jb
je
xchg
push
fnstsw
int3
sub
mov
dec
jmp
sub
pop
mov
shlb
cs
pop
or
out
sbb
adc
xchg
fwait
in
ror
les
loope
and
mov
stc
jno
loope
ss
addb
loope
mov
loope
and
or
cmp
inc
repz
dec
dec
mov
ljmp
ss
movsb
fdiv
pop
and
mov
mov
mov
jmp
repnz
movsl
insl
cmp
jne
arpl
int
addr16
add
inc
mov
dec
loope
aas
incl
push
mov
insl
or
xabort
mov
jno,pt
dec
out
lret
in
cmp
cmc
popf
sub
jnp
movsb
xchg
push
in
lds
in
jbe
cmp
cmp
inc
sbb
arpl
aaa
dec
mov
add
pop
rcrb
dec
push
push
xchg
mov
stc
jle
repz
fcomps
mov
push
inc
adc
rcl
loope
mov
pop
pop
loope
stc
or
dec
std
lret
inc
loope
jnp
jecxz
fstps
push
cmp
fwait
es
push
in
nop
loope
xchg
and
jo
loopew
mov
xor
test
mov
rcrb
xchg
push
mov
loope
sub
fidivrl
pusha
out
ja
loope
sbbb
loope
jo
insb
cli
lahf
movsb
mov
leave
lea
shrb
jno
and
inc
cs
outsl
jmp
adc
push
loope
dec
pusha
clc
std
das
fbstp
scas
call
push
dec
and
mov
adc
in
loope
leave
xor
jg
add
out
cmc
loope
xchg
fisttpl
and
inc
cmp
data16
daa
sahf
bound
sbb
inc
adc
rcl
cmp
push
pop
loop
xor
outsl
add
inc
cmp
lea
push
push
jecxz
loope
mov
and
ret
imul
adc
fcos
in
cmp
loope
movsb
sub
insl
das
jbe
pop
loope
imul
add
lea
int
int3
fldt
jmp
cmovo
jge
ja
test
xchg
push
loope
mov
xor
and
jecxz
cmpsl
sbb
iret
loope
jae
test
mov
mov
rcll
in
loope
cmpsb
lcall
incl
in
imul
je
sahf
call
sub
into
jno
lods
movsl
push
out
iret
cli
std
ds
mov
loope
mov
fst
loope
adc
ds
mov
into
push
mov
loope
scas
stos
and
add
sbb
shrl
popf
sbb
xlat
xor
jg
jmp
loope
nop
mov
dec
mov
mov
sub
jmp
sbb
xchg
shrb
xchg
in
add
sarb
loop
and
inc
ljmp
cld
mov
or
and
adc
mov
arpl
fildl
xchg
out
pop
repz
insb
cmp
lods
mulb
mov
out
or
iret
sbb
pop
adc
into
call
add
adc
negl
mov
cs
nop
jg
xchg
dec
mov
xchg
fisubrl
movsb
es
jo
or
cmp
in
xchg
inc
mov
jns
adc
cwtl
loope
mov
sbb
adc
mov
in
decb
call
mov
sub
dec
loope
xor
xchg
insb
popa
dec
cs
loope
pop
jp
push
cmp
loope
sti
mov
pop
loope
mov
rorb
sahf
add
aam
push
mov
xchg
stc
cmp
jecxz
add
jo
push
enter
sbb
pushl
mov
int
jo
sahf
flds
aam
fistpll
xchg
sbb
std
popa
dec
mov
sub
mov
ss
jnp
push
add
adc
or
loope
cmp
ds
and
sti
les
stos
mov
mov
loope
inc
jae
inc
or
inc
mov
dec
lret
loope
inc
adc
inc
test
movaps
push
in
jle
cmp
loope
dec
sub
jg
fbstp
loope
pop
cmp
iret
lcall
push
xor
cmp
andb
sub
jg
out
and
daa
scas
es
mov
bound
outsb
ja
cs
sbb
clc
in
orb
or
jo
aad
ljmp
sbb
fimull
cltd
enter
or
pop
loope
mov
mov
loope
jbe
jge
fidivrs
ss
out
aas
pop
loope
xchg
or
jo
test
arpl
loope
jmp
fstpt
mov
loope
jae,pn
mov
dec
mov
sbb
inc
nop
add
das
nop
loopne
int
out
mov
loope
mov
sub
loope
mov
and
sahf
arpl
cli
push
dec
loopne
ja
inc
nop
sbb
bound
pop
ljmp
pop
int3
jecxz
ficomps
sbb
test
lock
sub
cmpsl
rorl
jnp
ds
mov
mov
and
push
mov
repz
xlat
movl
inc
push
aas
mov
hlt
fwait
int
loope
cmc
ret
ret
adcb
data16
lahf
adc
dec
loope
cmpsl
aad
lds
test
inc
ss
jno
loope
lock
mov
loope
movsb
bound
rol
and
jo
pop
adc
fiadds
jno
pop
rcrb
cmp
bound
inc
addr16
sbb
xchg
add
and
add
loope
push
mov
mov
mov
loope
add
sub
push
pop
add
adc
test
loope
je
sahf
adc
jno
mov
dec
shl
test
or
pop
lret
and
mov
in
insb
jg
mov
mul
fcmovnb
fsubrl
push
outsl
shl
sbb
mov
addr16
loope
cmp
stos
lahf
mov
xchg
stc
cs
shlb
popa
inc
mov
sub
or
outsb
jns
ljmp
jle
fsubrl
nop
jo
mov
sub
in
mov
adc
ret
cmp
xchg
into
mov
fcmovbe
mov
dec
int3
mov
mov
mov
fiaddl
push
sub
jmp
insb
mov
rorb
add
adc
test
aam
mov
andb
jno
jle
cltd
mov
pusha
jo
scas
jl
xchg
pop
lret
movaps
sahf
loope
cmpsb
pop
shrl
rclb
sub
fnstenv
out
push
mov
pop
es
ret
sbb
loop
lods
jmp
cmp
scas
pop
stos
loope
mov
jmp
in
pop
xchg
dec
mov
inc
jo
inc
jecxz
scas
ljmp
je
xchg
out
or
loope
int
loop
outsl
stos
sahf
ljmp
rol
mov
cmp
stc
bound
scas
loope
subb
enter
loope
mov
shll
mov
pop
mov
sbb
in
int
pop
push
jbe
mov
jae
xchg
cmp
inc
enter
sub
clc
fistpll
mov
lds
loope
and
xchg
mov
outsl
mov
push
test
cld
out
loope
cmp
repnz
int
sub
jmp
mov
xor
push
arpl
es
lds
xor
in
fiaddl
adc
idiv
mov
imul
jne
add
repz
pop
loope
push
dec
xchg
movsl
rcrb
sub
je
sbb
add
add
inc
add
loope
in
dec
xchg
sbb
fdivrs
ret
imul
imul
addr16
lcall
loope
insb
adc
xor
bound
test
pop
cwtl
xor
in
loope
in
adc
sub
or
adc
dec
loope
cmp
push
mov
popl
add
adc
and
es
outsl
loope
cmpsl
sub
std
dec
mov
xor
leave
fistl
fs
loope
movsl
ret
fucom
loope
mov
sbb
test
jmp
cmp
jg
in
js
cmp
mov
mov
adc
scas
xor
xchg
jo
pop
rep
cmp
loope
cmpsl
cwtl
and
mov
punpcklbw
pop
pop
or
stc
lret
xchg
pop
pop
loope
lods
adc
mov
push
jae
test
sbb
test
mov
xchg
orb
pushf
je
std
sub
mov
mov
dec
mov
test
nop
inc
xchg
loop
inc
out
andb
cmpsb
loope
cmp
lret
adc
or
or
pop
sub
call
shrl
or
test
mov
adc
jl
push
mov
repnz
lock
jg
loop
xchg
mov
pop
cmp
fnstcw
pop
outsb
or
push
inc
out
lea
bound
loope
sub
add
insl
call
jmp
imul
mov
or
test
push
aaa
int3
pop
sbb
push
pop
adc
pop
mov
adc
lock
loope
int3
pop
jg
notb
push
fwait
loope
cmpsb
xlat
jbe
cmp
sub
mov
inc
inc
jmp
outsl
shlb
pop
stos
add
ljmp
test
ret
and
aas
jo
daa
bound
or
loope
aam
jae
fistpl
jb
xor
cwtl
mov
sti
xor
repz
xchg
mov
in
pop
inc
aaa
loope
popf
add
cwtl
add
loope
addl
jecxz
add
ficompl
add
pop
aaa
adc
add
loope
lods
js
lret
shl
pushl
hlt
inc
fidivl
loope
add
dec
sti
sarl
js
xchg
enter
mov
in
cmp
inc
jbe
mov
pop
adc
fsubrl
inc
stos
fsubs
in
clc
insb
shll
loopne
cmpsl
data16
scas
outsl
add
inc
dec
test
push
pop
mov
jnp
sub
sti
lahf
das
sahf
loope
push
push
cmpl
sbb
adc
mov
popf
xor
pop
dec
or
mov
in
stos
cmp
mov
jmp
jo
test
lock
jmp
test
es
add
pushf
and
in
sarl
ret
int3
ret
pop
sahf
jo
mov
call
jmp
out
cmp
out
jmp
lods
loope
xchg
xchg
icebp
sbb
lock
jmp
push
add
mov
dec
jmp
insl
push
cltd
inc
mov
mov
add
sbb
jae
dec
loope
test
add
arpl
leave
push
dec
sub
xchg
loope
jmp
stos
loopne
dec
adc
add
into
rorb
pop
loope
pushl
mov
inc
mov
loope
lods
lahf
cmp
add
sbb
add
stc
ret
loope
xchg
out
inc
xor
push
loope
xor
jnp
add
int
push
les
inc
adc
sbb
loope
outsl
fidivl
rcll
jl
lahf
out
cltd
mov
jg
mov
mov
jnp
out
xor
adc
cmp
sbb
in
loope
and
jl
call
shr
jecxz
inc
lahf
mov
mov
and
lods
shl
mov
movsl
sbb
mov
pushf
stos
fiadds
mov
sbb
call
mov
in
xchg
push
es
test
aas
jle
dec
shl
xor
mov
add
js
test
or
adcl
cs
mov
je
cmc
insl
loope
lahf
push
lds
iret
cwtl
loope
rcr
adc
gs
xor
in
lret
xchg
jmp
loope
es
movsb
sbb
scas
mov
mov
pushl
hlt
add
push
cltd
loope
and
rorl
arpl
cwtl
push
push
mov
sbbl
jge
not
rclb
loopne
mov
and
lahf
mov
sbb
pop
mov
xchg
pop
adc
mov
loope
mov
mov
inc
xor
fsubr
xchg
fstpl
add
jns
pushf
xorl
sub
loope
add
push
dec
dec
push
lcall
mov
sysret
int
push
loope
mov
fucom
sbb
fildl
jno
pop
loope
pushf
mov
fldl2e
xlat
add
loop
in
cmp
loope
fwait
ds
dec
loope
mov
push
cmp
and
add
shll
icebp
call
loope
add
mov
outsl
and
adc
dec
popa
movsl
fsubl
jl
jae
pop
in
dec
lcall
into
pop
dec
mov
loopne
adc
lds
cmp
sbb
xor
out
sbb
mov
sub
call
dec
lret
cmp
or
sbb
jno
int
add
out
mov
lods
imul
push
add
sbb
loope
cld
arpl
pop
push
dec
pop
loope
out
inc
add
push
cmp
int
jg
jo
cvtpi2ps
cmp
jns
shrb
shlb
push
loope
mov
ds
aaa
xor
nop
jne
notl
mov
out
aas
shl
fcomps
in
xor
push
dec
mov
adc
mov
loope
call
movsb
pop
loope
adc
add
rol
enter
mov
mov
mov
cmp
xchg
sahf
and
loope
adc
rorl
loope
stc
popf
in
fsubs
jae
adc
nop
sub
popa
popa
imul
mov
arpl
lahf
stc
sub
std
mov
stos
cltd
pop
and
cld
loope
sub
or
daa
mov
rcrb
xchg
repnz
imul
lcall
sar
je
stos
ljmp
subl
sarb
inc
dec
mov
or
mov
pop
jno
ret
and
loopne
jmp
fdivrs
cld
rorb
dec
inc
lahf
sbb
loope
mov
cmp
pop
sbb
test
adc
imul
insl
and
mov
loope
cld
and
jo
mov
fstpt
adc
or
loope
xor
loopew
in
jns
loop
stc
jge
cmp
fcmovnb
loope
mov
cld
ds
out
loope
xor
dec
sarl
scas
insb
lock
cmp
fisubrl
rclb
in
push
or
pshufw
and
loope
mov
mov
push
add
dec
pop
out
outsl
cwtl
loope
test
dec
lahf
jo
aam
inc
enter
mov
mov
loope
scas
enter
cwtl
sub
pusha
loope
jnp
scas
jecxz
ljmp
mov
loope
jbe
mov
and
jno
call
push
xchg
imul
sbb
mov
imul
inc
loope
cmc
or
and
xor
jnp
jno
call
add
or
sahf
xchg
mov
mov
ffree
ljmp
inc
shl
mov
aad
ljmp
mov
shl
push
pop
loope
mov
xchg
loop
cmp
push
fcmovnbe
inc
enter
mov
push
mov
stos
aaa
jp
cmpsb
mov
jg
dec
stos
and
test
cmp
mov
or
loope
or
mov
push
mov
push
and
xchg
stc
push
or
in
mov
pop
loop
and
inc
shrb
das
mov
and
mov
mov
push
and
jg
cmpsl
sarl
cltd
jmp
insl
and
loope
nop
mov
push
lds
or
push
sbb
xlat
dec
cmpsb
loope
mov
test
and
xchg
shlb
shll
call
mov
fsubp
jmp
test
push
lock
mov
inc
sub
in
jmp
mov
dec
rorl
les
stos
or
cmp
inc
xor
rorb
fldenv
push
push
dec
mulb
add
leave
loope
call
dec
nop
loope
cli
outsb
cmc
or
js
loope
mov
out
pop
scas
je
mov
xchg
sbb
jmp
mov
int
cli
mov
out
loope
sbb
or
loope
xchg
ret
sbb
inc
loope
popf
cli
mov
pop
push
jmp
or
adc
add
adc
add
mov
add
dec
sbb
loope
jl
and
aas
loope
push
xor
gs
cltd
cld
loope
in
xor
out
and
xchg
adc
xor
cli
pop
mov
aam
mov
in
cs
push
pop
shlb
into
loop
loope
mov
insl
loope
scas
pop
mov
dec
and
imul
mov
loopew
fisubrl
out
jecxz
add
mov
repz
rcrl
mov
pop
jns
aaa
add
in
sub
xchg
leave
insb
push
popa
ret
notb
arpl
jmp
mov
dec
jo
imul
rcll
jae
out
in
mov
fcmovnbe
xchg
stc
sbb
lret
inc
sti
xor
jg
loope
mov
xlat
mov
inc
movsl
std
cwtl
jmp
in
push
je
clc
sbb
xor
in
arpl
sti
loope
cmpsb
pop
jp
mov
loope
mov
sbb
addr16
jmp
imulb
cs
mov
in
cmp
jg
fcoms
loope
jne
pop
mov
testl
in
loop
sbb
loope
nop
pushf
mov
add
lea
jecxz
popa
cmovbe
aaa
loope
sbbb
loope
insb
push
hlt
xchg
push
push
mov
xor
mov
fcmovnbe
lock
mov
stc
cmpsl
pop
es
loope
add
movsb
fiadds
loope
fbld
loope
push
sub
movsb
mov
inc
push
add
aam
dec
scas
in
cmp
out
and
rep
stos
adcb
cs
lds
loope
jo
insb
into
cmp
aaa
sub
stos
out
adc
mov
ret
mov
cmp
pop
rclb
mov
ljmp
data16
jnp
lret
stos
add
loope
adc
movsl
fcomps
pop
iret
pop
lcall
inc
cwtl
loope
call
bound
inc
lcall
lret
xchg
cmp
jp
add
add
loope
mov
shl
xchg
out
pop
jo
adc
push
jmp
ljmp
addb
inc
loope
pusha
clc
adc
loope
in
xchg
xchg
fisttpll
loope
test
xchg
add
and
mov
out
outsl
push
loope
fwait
cmc
sub
fdivrp
cmpsl
loope
pavgw
das
jl
or
pusha
jo
gs
in
or
sbbb
mov
ljmp
adc
adc
ret
mov
shl
fstp
gs
loope
and
pop
fs
mov
cmp
xchg
das
pop
out
add
loope
in
test
stc
mov
mov
jmp
jo
inc
and
mov
mov
das
jmp
or
aaa
and
in
or
mov
lock
es
loope
notl
jg
mov
jnp
mov
loope
xchg
xchg
jg
xlat
cs
jo
dec
jecxz
or
pop
jmp
jb
das
xchg
movswl
mov
add
jo
js,pn
push
popa
jecxz
and
sti
lret
mov
loope
adc
inc
pop
jns
inc
loope
mov
aad
adc
sti
and
add
mov
loope
sbb
jge
loope
lds
loope,pt
scas
cmpsl
dec
orl
push
jo
dec
popa
aaa
inc
in
out
sub
lret
pop
jo
or
loope
adc
test
fwait
repz
push
jmp
adc
cmp
loope
repz
xchg
xchg
lock
mov
fisubl
popa
add
or
cmpsl
shlb
xor
imul
or
xchg
add
pushf
loope
jno
hlt
mov
loope
call
xor
cltd
pop
loope
ror
push
int3
xchg
out
loope
insb
lcall
sti
shlb
adcl
push
jo
xor
shrl
sub
pushf
mov
imul
mov
loop
filds
and
in
inc
add
iret
loopne
jmp
js
shrb
imul
out
frstor
outsb
add
inc
pusha
xlat
xorb
movsl
lret
mov
outsb
fbld
jl
shl
outsb
cld
fcmovnbe
push
inc
pop
out
sbb
dec
popa
imul
test
jmp
outsb
fucomip
loopne
movl
mov
lods
in
in
xchg
movsl
rolb
or
jo
in
rcrb
leave
lods
out
pop
fs
test
push
into
in
lods
jns
pop
imul
gs
loopne
pop
loopne
mov
scas
pop
imul
pop
jle
insb
dec
in
into
call
mulb
gs
ljmp
fs
lahf
add
sub
out
loopne
sbb
into
imul
or
jmp
pushw
cwtl
ftst
fbld
inc
ret
out
cmpsb
shlb
outsl
inc
add
insb
pop
in
sub
or
ljmp
nop
jmp
jecxz
test
nop
lret
imul
cmc
push
popa
xor
out
in
outsb
rcll
shr
inc
xor
aas
add
lods
insb
fsubrl
rol
ljmp
push
andb
push
jecxz
cmpsl
mov
xchg
xlat
addr16
in
add
dec
test
sub
lods
xchg
out
jmp
pop
fisttps
out
fists
jmp
loop
stos
lods
outsl
jo
or
in
into
or
pop
ror
aas
adc
loop
out
movsl
push
call
dec
clc
movsb
lods
insb
test
inc
fbld
test
jne
clc
add
pusha
insl
incl
mov
in
lds
out
jl
shr
ljmp
outsb
mov
ret
in
in
movsb
sub
inc
sub
stos
lock
scas
mov
ljmp
lods
in
pop
iret
mov
push
insb
insl
xlat
inc
into
jmp
xor
and
out
adc
call
out
call
push
das
clc
mov
pusha
imul
movsb
add
insl
out
push
out
jmp
jl
shrl
push
mov
out
arpl
in
clc
movsb
imul
arpl
std
fbld
adc
fucomip
add
jle
outsb
mov
push
fildll
dec
jg
pusha
in
inc
fbld
scas
fs
push
test
lods
fs
js
sub
stos
fs
stc
mov
popf
outsl
pop
xor
insl
das
lea
gs
loope
inc
xor
out
out
fildl
hlt
clc
mov
mov
fwait
mov
sti
mov
cld
mov
int3
dec
iret
imul
aam
out
shlb
xor
imul
push
fwait
leave
mov
push
outsb
push
loopne
out
mov
jmp
cmpsb
jo
shlb
xor
mov
icebp
pop
mov
ret
pusha
sarb
shr
add
xor
and
stc
mov
pop
sarb
loopne
mov
xlat
lods
test
xor
imul
ss
daa
loopne
sbb
pop
pop
and
in
outsb
mov
in
outsb
jmp
push
mov
in
lock
mov
inc
cmpb
loopne
xor
pushf
in
push
and
mov
mov
add
jge
mov
cwtl
fdivs
inc
sbbb
mov
mov
mov
clc
test
pop
fidivrs
push
jp
pop
fsubrp
adc
jmp
mov
add
fisubs
iret
lods
inc
jns
sbb
sbb
loopne
xchg
lock
xchg
push
in
lret
orl
push
mov
sbb
inc
fmull
mov
in
lret
call
pop
ljmp
ljmp
in
dec
push
iret
lahf
loopne,pt
add
cmpsb
call
call
mov
cwtl
stc
shlb
loop
jp
fiadds
and
rcl
stc
icebp
outsl
jno
jg
cmp
lods
outsl
test
jge
push
push
outsl
mov
cmp
into
cmp
xchg
lcall
push
sbb
inc
cs
outsl
out
jle
sbb
push
outsl
xor
repnz
call
sbbb
jp
mov
cli
cmpsb
or
outsl
mov
push
cmpl
ffree
sbb
movsl
pop
out
scas
pop
cmp
jmp
lret
fnstsw
or
cli
pop
fst
out
dec
sbb
outsl
sbb
push
fstl
das
adc
pop
sbb
mov
out
sbb
mov
mov
call
stc
inc
int
dec
imul
out
mov
rorb
xchg
insl
fimuls
stc
dec
pushf
lods
xchg
add
loopne
jne
jne
lods
stc
pop
stos
nop
loop
ja
xlat
jp
outsl
insb
jl
cli
outsb
or
popa
adc
and
xchg
lods
test
cmpsl
pop
shll
test
lods
mov
stos
push
leave
xor
or
scas
sbb
sbb
sbb
notl
inc
add
outsl
dec
push
lcall
sbb
pop
inc
push
movsl
out
mov
outsl
pop
mov
pop
lods
mov
jmp
ds
lods
in
add
pop
push
push
out
and
mov
xlat
or
jg
insl
mov
shlb
or
shl
xchg
into
sub
out
mov
aam
test
add
mov
insl
mov
mov
fildll
sub
outsl
loopne
push
mov
mov
cld
sub
aaa
fildll
test
insl
or
sub
lcall
push
loopne
sub
push
insl
push
lods
and
shll
iret
lods
pusha
fs
push
or
mov
push
out
adc
lods
pop
sub
lret
imul
jnp
dec
stos
and
aaa
roll
cmp
lcall
fildll
in
fisubrs
sbb
imul
sub
fiaddl
out
cwtl
stos
mov
in
inc
inc
inc
sub
pusha
mov
fisubs
into
push
mov
pop
pop
sub
sbb
mov
shrb
jp
sub
push
scas
imul
insb
insl
adc
cmpsl
sahf
sub
adc
and
ret
stos
ror
loope
cld
sub
lods
adcb
mov
scas
int
stos
xchg
scas
jecxz
mov
dec
mov
out
ret
mov
xchg
outsb
mov
add
stos
push
sub
rorb
mov
mov
mov
sub
inc
in
cs
ret
call
in
sub
cmpb
mov
imul
shl
loopne
aam
loopne
adc
mov
pusha
out
cmp
roll
pusha
or
cmp
xor
cmp
mov
movsb
pusha
cld
xchg
mov
ret
jg
jecxz
icebp
xchg
call
push
movsl
pop
movsb
scas
inc
shl
pusha
lcall
loopne,pn
lods
pusha
fs
mov
movsl
and
xchg
fbld
popa
outsl
dec
loopne
pusha
cmp
pop
loopne
cmp
loopne
cmp
loopne
cmp
loopne
push
scas
stos
outsb
in
loopne
lods
scas
cli
xlat
in
loopne
xchg
scas
xlat
stos
in
loopne
xchg
scas
xlat
push
scas
xlat
in
loopne
xchg
scas
xlat
fs
loopne
xchg
scas
xlat
arpl
loopne
xchg
scas
xlat
bound
ficomps
mov
sub
rsm
andl
lret
push
lcall
fldcw
call
test
fsubrl
int
mov
pop
or
sbb
xlat
mov
cmp
jmp
cs
mov
fwait
les
mov
sbb
pop
mov
sub
push
xchg
shll
ljmp
mov
inc
shrd
out
ljmp
mov
mov
or
insl
in
dec
jp
fistpl
movsl
add
pushf
imul
ds
loopne
mov
fmul
stc
cli
xor
pop
or
sub
and
fwait
stos
mov
hlt
adc
jmp
cli
lcall
movsb
mov
stos
pop
addr16
gs
add
xor
stos
icebp
popf
outsl
lcall
test
mov
pushf
mov
mov
rolb
insb
rclb
out
lahf
mov
adc
mov
cmc
sub
mov
add
and
sub
fdivl
jge
in
mov
add
adcl
adc
scas
out
jmp
in
std
xor
insl
in
stos
mov
mov
loope
into
push
outsb
xor
cmp
stc
mov
loope
aam
lock
shr
add
rcrb
in
xor
loope
pop
mov
icebp
addb
mov
stos
jns
sti
or
sbb
xchg
cmp
loope
out
in
outsl
clc
icebp
xchg
and
rorl
scas
aaa
fsub
adc
mov
clc
enter
lahf
outsl
push
movsb
inc
sarb
push
jbe
jecxz
loope
mov
jo
cmp
loope
jb
in
notb
cltd
mov
mov
jmp
lret
aam
mov
outsl
pop
pop
push
daa
lods
mov
pop
mov
mov
mov
sbb
mov
fsubrl
shr
inc
cltd
out
xor
mov
cmp
int3
lock
sub
arpl
filds
int
aas
pusha
popa
xchg
or
dec
mov
loope
cmp
fisubrs
xor
loope
je
mov
mov
rol
daa
clc
scas
jg
lds
mov
jno
sbb
loopne
mov
ds
std
mov
dec
mov
jmp
pop
loope
inc
lock
insb
rep
in
shll
adc
mov
pushf
loope
and
mov
jmp
xor
jno
iret
loope
hlt
pop
mov
stos
pop
int
shlb
lret
shlb
sub
out
loope
sub
cwtl
iret
sub
push
pusha
loope
loopne
mov
loope
lods
sbb
xchg
loope
jge
and
push
sub
scas
jmp
pusha
stos
lock
lahf
dec
add
push
mov
loope
xorb
aas
mov
mov
cmp
inc
sbb
fs
imulb
dec
aam
mov
mov
xlat
scas
out
xor
mov
movntq
sbb
daa
ljmp
in
fisubs
loope
das
std
and
fildll
loope
fs
mov
loope
pushf
loopne
add
repz
xchg
loope
cld
shrl
pop
or
xor
shrl
mov
out
test
fs
push
sub
rorl
loope
dec
dec
inc
and
sbb
rol
and
pop
psraw
mov
hlt
ja
aam
mov
loope
push
jnp
xchg
inc
loope
into
and
cwtl
push
scas
fnop
inc
pop
push
bound
mov
fstps
pop
mov
mov
sbb
dec
aad
subl
fsub
dec
scas
dec
loope
sub
pop
out
push
loope
push
cli
in
mov
sahf
addr16
js
mov
shll
and
das
pop
je
aas
out
in
mov
test
jmp
pop
pop
mov
dec
cmpsl
lods
sahf
xor
mov
cmp
cs
insb
loope
add
out
push
inc
loope
cmp
cmpsb
dec
and
loope
xor
icebp
vandnpd
lock
xor
in
je
pop
shrb
in
mov
mov
jnp
inc
fimuls
inc
mov
jecxz
sbb
lods
mov
and
push
dec
mov
lods
fiadds
jae
inc
sub
gs
mov
cvtps2pd
mov
mov
push
fldl
stos
les
fisubrs
push
pop
jl
adc
jg
out
ss
loope
call
pop
pop
jo
add
pminsw
xor
mov
sbb
mov
out
pop
aam
cmpsb
cmp
mov
aas
repnz
sub
loopne
sahf
adc
lcall
fcompl
jo
xor
nop
rclb
out
xchg
jmp
sbb
sub
in
aaa
mulb
mov
fsubp
lahf
ror
leave
mov
mov
inc
inc
cwtl
imul
gs
in
loope
or
rcll
xchg
loope
xorb
shrb
add
mov
popa
cmp
sarb
es
xor
addr16
and
psraw
bound
adc
inc
lea
cmpsb
loope
out
push
loope
xchg
mov
lahf
adc
jecxz
jmp
sbb
sub
stos
fidivrl
add
xchg
adc
mov
mov
mov
jecxz
loope
sarb
jns
cs
loope
aas
adc
loope
pushf
and
nop
fdivrl
outsl
jmp
jg
not
cwtl
sub
push
das
sahf
gs
loope
lahf
and
and
loopne
pop
jnp
imul
jo
loope
push
push
nop
xor
das
loope
insl
mov
inc
loope
cs
jno
jae
jg
and
fsubr
inc
push
ljmp
mov
leave
loope
jle
lret
dec
shl
add
movsb
jne
or
loope
lret
and
mov
inc
jmp
lods
dec
pop
dec
jno
sub
push
sub
fwait
loope
sti
cmpsl
test
lods
pop
loopne
jge
and
mov
pushf
rorb
sub
ljmp
jecxz
shll
xor
inc
loope
outsl
out
xor
gs
js
push
scas
out
mov
jb
in
sub
jmp
mov
adc
out
push
pop
mov
jmp
and
nop
jecxz
mov
dec
mov
mov
sbb
push
lock
add
xor
xor
int3
shl
and
lret
cmp
insl
inc
and
arpl
mov
sub
mov
in
dec
out
mov
nop
mov
jmp
loope
mov
mov
mov
mov
xor
xor
push
mov
loope
shll
push
fxch
loope
aaa
insb
shr
mov
test
cwtl
jns
xor
loope
mov
cmp
iret
out
mov
or
imul
sar
or
adc
icebp
out
cmpsl
repz
shrb
sbb
cmp
add
xchg
fidivrl
hlt
cwtl
in
test
mov
rolb
pop
and
lock
into
outsb
in
jmp
fwait
rolb
add
sbb
mov
mov
das
pusha
fcmovnu
loope
sub
test
xchg
sub
adc
xor
xor
jmp
shrb
loope
stc
fistpl
cwtl
jo
lret
add
outsb
pop
scas
hlt
mov
scas
adc
fdivrl
loope
loopne
ret
pop
push
out
add
lret
cwtl
aaa
push
xor
sbb
add
lods
cltd
mov
in
loope
shll
push
loope
jo
dec
pop
int3
xor
sarb
mov
dec
in
jnp
lods
outsb
push
sub
lock
xchg
inc
out
mov
pop
mov
rcrb
sti
cmp
fwait
mov
and
mov
sbbb
mov
loope
icebp
mov
push
push
pop
pushf
loope
es
push
or
xor
jmp
test
jae
jecxz
cmc
cltd
and
aaa
dec
in
mov
test
loope
or
lahf
dec
into
popa
loope
sbb
and
pushl
loope
jb
mov
mov
arpl
popa
pop
or
loope
inc
stos
lret
int3
fs
push
pusha
mov
je
loope
adc
pop
adc
mov
shrl
fdivs
lock
loope
adc
bound
dec
icebp
fs
nop
cmp
mov
sub
xor
in
mov
stos
sbb
cmp
jo
mov
enter
push
mov
dec
shlb
sub
ret
inc
or
push
pop
push
fsubrs
test
vpmaxsw
lock
fwait
popa
out
lock
loopne
loope
test
cli
loope
js
test
dec
sub
loope
and
iret
xchg
jecxz
shlb
hlt
sbb
lock
in
fwait
and
insb
fadds
fs
jae
cltd
and
dec
dec
les
loope
jmp
in
mov
rclb
mov
pop
jmp
xor
pop
movl
popf
loope
dec
inc
out
aad
int3
jno
pop
call
or
loope
mov
fisttpl
pop
jmp
and
stc
mov
mov
lret
in
loope
jbe
call
and
sbbb
xchg
loope
fdivrl
xor
or
in
loope
adc
vpsraw
add
cmp
outsb
cmp
loopne
loope
mov
out
push
mov
scas
cmp
cmpsb
lret
inc
sarl
aaa
movsb
loope
fiadds
mov
jmp
and
push
jmp
nop
cltd
shufps
mov
dec
sub
mov
mov
sbb
inc
mov
or
pop
ss
sbb
gs
mov
fs
rol
data16
out
sub
mov
ss
insb
incl
mov
cs
loope
push
cmp
je
cmc
add
stos
andb
xchg
fs
in
loope
push
xchg
or
lahf
hlt
clc
adc
loope
xor
popf
xor
iret
inc
sbb
popa
filds
mov
ret
movsb
int
and
and
aas
xor
pop
je
loope
xor
jnp
pusha
pop
pop
leave
sahf
and
lock
sbb
out
cmp
and
loope
lods
enter
mov
mov
or
push
sbb
or
or
xchg
icebp
hlt
imul
shr
jnp
mov
or
insb
jl
cmc
pop
loope
scas
xor
inc
adc
jo
cmp
out
orl
ret
ret
mov
cwtl
sub
in
pop
or
stos
loopne
jl
dec
mov
fwait
add
scas
cwtl
ret
test
adcl
sarb
lock
lods
lret
stc
mov
or
loope
xor
cmp
inc
scas
pop
mov
dec
stos
call
sbb
cli
andl
rol
rclb
sbb
dec
sub
loope
dec
imul
cmp
mov
xor
aas
rcrl
mov
bound
sbb
push
mov
loope
sub
and
lcall
pushf
mov
out
insb
scas
sbb
mov
aam
nop
out
mov
mov
cmp
cltd
out
out
xor
scas
dec
jo
mov
adc
pop
gs
jb
loop
loope
mov
lcall
mov
and
outsl
sahf
mov
mulb
sub
lds
gs
daa
xor
cli
xchg
fstl
movsb
mov
dec
sbb
and
ljmp
test
out
lcall
add
add
and
jo
push
repz
loope
mov
scas
jge
sahf
mov
ud2
subb
xor
lea
loope
jns
je
lods
sub
popf
addr16
sub
out
push
mov
mov
jecxz
loope
xor
jp
int3
cli
jo
imul
in
test
cmp
rcll
imul
gs
lock
scas
fimull
in
push
xor
cld
ljmp
addr16
sub
jmp
sbb
icebp
mov
fdiv
mov
xchg
lds
loope
jb
lret
xlat
push
loope
into
dec
pushf
ja
cmp
lock
pop
mov
mov
xlat
cs
cmc
mov
cmp
imul
and
jnp
in
jmp
mov
in
and
jmp
mov
bound
imul
and
in
cmp
mov
loopne
mov
iret
in
jno
std
incl
mov
xor
jo
outsb
daa
rorl
lock
insb
aam
or
das
add
sbb
jmp
mov
sub
xchg
cmp
aas
loope
mov
or
or
ret
gs
dec
mov
and
mov
jb
leave
shll
and
les
and
push
add
test
lods
inc
pusha
int
insb
outsl
outsl
mov
insl
loopne
fildll
jge
mov
or
loope
pop
cmp
loope
test
push
mov
inc
pop
dec
and
loope
imul
mov
fstpt
mov
sbb
jp
shrl
out
dec
in
sub
je
dec
mov
mov
inc
shlb
dec
dec
mov
arpl
pusha
lods
or
sub
and
into
in
mov
imul
sub
dec
loop
cs
pusha
pushf
xorl
jae
cwtl
std
mov
push
dec
xor
cmp
loope
fistpll
test
pop
push
cmp
pop
jecxz
je
int3
out
add
inc
xor
and
movsb
pop
shll
push
mov
or
cmp
out
cld
inc
sub
hlt
icebp
jo
repz
fdivrp
mov
loope
xchg
ret
xchg
push
mov
movsl
out
inc
das
je
xor
and
push
inc
push
jne
adc
and
jo
cld
sub
out
add
xor
add
ret
or
jmp
aaa
orb
mov
xlat
add
stc
jno
jp
pop
add
jo
jge
xor
in
movups
out
xlat
insb
sbb
jl
fsubr
sub
xchg
out
aaa
xchg
jo
mov
and
pop
jmp
les
mov
mov
rolb
and
and
test
loop
ror
cli
pop
mov
test
into
stos
mov
pop
mov
repnz
sbb
mov
into
ds
out
mov
mov
icebp
add
in
movsb
adc
fidivrs
cmpsl
add
aaa
rolb
pop
in
sarl
jae
cmpsb
call
push
or
rcl
mov
and
adc
and
cmp
xchg
test
mov
inc
sub
mov
inc
add
movsl
ret
ss
mov
fmul
das
mov
andl
adc
inc
mov
cld
je
icebp
pop
pop
insl
lret
lods
fsubrl
jmp
arpl
lahf
out
fistps
sub
inc
cli
and
dec
insb
outsl
fidivs
mov
xor
cli
cwtl
leave
loope
push
xchg
mov
rcr
or
add
pop
mov
mov
addw
test
mov
imul
pop
cld
shlb
pop
cmp
movsb
gs
dec
shl
loopne
cwtl
daa
loopne
jl
movsb
out
ds
xchg
sti
cwtl
cmp
dec
daa
test
dec
add
cmpl
push
cld
xchg
in
test
pop
xchg
mov
andl
or
xchg
add
push
pop
inc
iret
or
js
stos
fwait
aad
adc
or
fildl
insb
fadds
mov
aad
mov
das
add
movsl
add
mov
out
aad
imul
push
bound
mov
cs
imul
cmp
inc
retw
jmp
inc
loop
jecxz
adc
testb
iret
rclb
or
fstpt
cmpsl
mov
fidivl
cli
dec
push
nop
outsb
pop
pop
pop
jge
insb
imull
sub
sub
int3
cld
int
push
js
aam
movsb
mov
ljmp
insb
mov
inc
es
inc
ret
xlat
imul
push
insl
inc
mov
mov
push
loopne
inc
addr16
fs
xor
sahf
test
repz
xchg
mov
sbb
out
mov
shrl
gs
or
popa
je
faddl
outsl
daa
out
fimull
ret
lret
call
pusha
scas
lcall
adc
cld
inc
outsb
stos
add
dec
das
in
insb
ret
into
scas
data16
mov
mov
jecxz
call
mov
mov
movsl
fildll
push
and
imul
and
add
out
ja
ds
and
fdivl
push
mov
iret
mov
loope
es
rcll
mov
sti
dec
call
repnz
test
stos
xor
shrb
xchg
xorl
loop
loop
fwait
add
push
pop
push
shrb
sbb
les
nop
add
ljmp
in
inc
test
cmpsb
jne
adc
aad
xchg
hlt
xor
add
add
adc
mov
out
jg
stos
pop
insb
push
mov
lods
sbb
cli
inc
imul
insl
sti
cltd
stos
xchg
shlb
mov
in
push
pop
jp
or
lcall
inc
cmp
test
jne
xchg
test
mov
stos
cmp
andb
out
aam
out
andb
pushf
mov
das
in
ret
inc
fisubrs
inc
icebp
ds
je
lds
das
sbb
dec
fmul
int
jmp
ss
xchg
inc
adc
scas
push
aaa
outsl
hlt
jno
inc
jmp
insb
repz
popl
fs
outsb
ret
cmpsl
and
lods
inc
xchg
adc
out
fmulp
int
loopw
pmaddwd
das
push
add
xchg
mov
int3
pop
mov
inc
push
xchg
scas
fwait
das
iret
fisubrs
scas
clc
xchg
out
xchg
jns
dec
mov
pop
cmc
jecxz
push
int
sbb
fimuls
jbe
out
insb
inc
loop
add
push
fldenv
das
scas
fisubrl
lret
jmp
push
aad
adc
add
jne
in
rcll
dec
fidivrl
int3
fcompl
dec
cld
das
jae
addr16
mov
pusha
sub
enter
lods
fcoml
jne
adc
fmuls
push
xor
mov
scas
das
nop
outsl
xor
stos
xchg
add
inc
jmp
adc
xchg
inc
inc
push
imul
rclb
hlt
int
push
and
adc
or
push
fdivrl
inc
push
push
adc
jecxz
inc
les
roll
jae
pop
cmp
sbb
leave
loop
mov
dec
outsb
mov
fmul
lea
sub
fisubrs
sahf
or
jno
mov
mov
pushf
inc
gs
mov
roll
xchg
aaa
inc
je
cmp
dec
imul
loop
aad
mov
das
insb
cmpsl
mov
loop
push
jb
testb
aaa
pusha
adc
jo
xchg
hlt
push
das
lret
subb
repz
jb
mov
xorl
test
loope
mov
shll
jmp
hlt
cld
push
lods
sbbl
inc
in
mov
imul
andl
insb
dec
lds
xor
mov
loop
mov
xor
iret
mov
jecxz
scas
enter
push
mov
movsl
repnz
sbb
inc
cmp
inc
enter
iret
shrl
enter
fnstenv
pop
dec
sub
das
adc
ret
push
xlat
add
mov
xorl
and
sub
shlb
das
sahf
xchg
dec
test
les
mov
iret
lods
insb
mov
cmpsb
hlt
rcr
push
test
pop
push
cli
pusha
imul
or
inc
sub
pop
int3
mov
mov
and
xor
mov
movl
les
and
cmp
add
jns
pop
jp
and
cld
and
and
sub
sub
dec
rolb
and
gs
and
test
xchg
ret
inc
loope
pop
lret
sub
in
and
loope
mov
jmp
cmpb
sub
cmp
jns
push
loop
into
add
and
lods
add
out
cltd
jo
pop
cli
call
out
adc
adc
jecxz
adc
add
adc
test
out
push
adc
movsb
push
sbb
daa
iret
inc
insl
es
arpl
adc
call
or
hlt
sub
mov
jmp
inc
out
adc
shrl
loope
mov
sbb
addr16
loope
add
jle
gs
mov
out
call
es
xchg
add
ljmp
out
mov
dec
imul
rorl
jmp
outsb
addb
in
jo
jl
cmpsb
mov
loope
out
xlat
pusha
pop
loope
cld
stc
pop
inc
mov
and
mov
cltd
movsb
mov
rolb
inc
bound
mov
cmp
pusha
in
jo
jmp
xor
inc
xor
push
mov
xor
clc
jl
xchg
push
mov
adc
xlat
mov
and
mov
mov
push
push
adcb
xchg
xchg
mov
orb
or
jle
dec
cwtl
outsb
mov
aas
jnp
fwait
sarb
mov
and
fmuls
jno
lods
aaa
scas
jge
dec
in
xchg
push
adc
xor
xlat
mov
lea
xlat
add
mov
je
jl
in
xor
mov
leave
aaa
sbb
loopne
in
scas
out
fsubrl
xchg
call
xorl
fimull
enter
insb
pushf
enter
int3
dec
cmpsb
fsubr
fdivr
popa
pop
cmp
pop
mov
cs
aad
push
shll
adcl
test
sbb
pop
sub
sub
inc
sub
inc
loopew
or
mov
fnstcw
jo
inc
mov
mov
or
les
pushf
lret
in
pop
push
lock
xor
dec
loope
adc
fistps
push
loope
push
or
add
shlb
cmpsb
and
fdivrp
mov
int
inc
fistpl
pop
mov
add
call
pushf
sub
mov
fdivl
mov
fs
repz
out
add
hlt
ret
mov
cld
loope
loopne
inc
cmp
into
jnp
out
xchg
std
jae
jmp
pushf
push
xlat
xor
popl
add
test
nop
cmp
dec
and
sub
loope
std
repnz
pop
cld
cmp
add
cmpsb
lcall
push
xchg
enter
hlt
out
add
sub
sbb
loope
in
mov
add
mov
in
leave
cmc
sbb
in
enter
loope
mov
aad
ret
loope
cmc
mov
xchg
sub
dec
les
rorb
lock
inc
loope
in
lret
sub
std
fwait
mov
dec
xchg
pop
inc
movsl
test
inc
xlat
sbb
inc
push
sub
inc
rcrb
stos
gs
arpl
cmc
imul
add
decb
mov
cmp
adc
pop
shrl
loope
mov
into
fisttpll
mov
cmp
in
push
bound
loope
sti
sub
rorl
jno
in
dec
sub
stos
mov
xor
aad
loope
add
sub
xlat
cli
dec
push
pop
xor
loope
ja
dec
daa
sub
fucom
dec
sti
dec
loope
xlat
pop
test
scas
loope
push
xor
cmpsl
add
lock
mov
aad
popf
jecxz
xchg
pop
loope
mov
movsb
mov
xchg
notl
dec
movsl
cmpsl
add
jbe
ret
fmul
jg
pushf
movsb
cld
xchg
loope
mov
repnz
in
sub
sbb
xor
aas
stos
inc
ss
jbe
fstl
lea
mov
mov
test
push
andl
jne
xor
jnp
fisubrs
shl
cmp
imul
xorl
out
fsubrs
lret
push
mov
sub
in
dec
mov
loope
xor
add
inc
test
jl
in
repnz
sbbb
push
xlat
loope
sub
mov
push
roll
add
mov
mov
sbb
das
je
stos
sti
cmp
push
adc
insb
cs
loope
test
aam
adc
lock
and
push
lods
push
loope
push
inc
xlat
decl
mov
pop
out
jmp
mov
push
rclb
mov
andl
sti
adc
xchg
imul
adc
ss
mov
lods
cmp
xor
popl
roll
pop
jo
lods
das
in
stos
cmpb
test
mov
cmp
rcl
sbb
xchg
movsl
mov
sahf
stos
loope
int
into
mov
sub
pop
enter
sarb
or
hlt
cs
xchg
xchg
popf
ss
cmc
mov
cltd
daa
inc
xchg
out
in
xor
inc
loope
mov
incl
inc
xchg
dec
out
pop
stc
add
and
out
pushf
in
cwtl
loope
or
nop
or
jle
or
or
arpl
test
out
rcrl
xchg
addr16
adc
adc
mov
pop
xchg
mov
jmp
icebp
loope
fistpll
add
xor
jns
in
cs
inc
mov
imul
inc
lods
loope
sub
xchg
jmp
test
cs
popl
in
test
arpl
mov
mov
lret
xchg
mov
xor
pusha
in
rcr
loope
pop
inc
jb
cwtl
push
xor
xchg
and
cmp
cmpsl
and
jle
sbb
mov
adc
lret
aam
or
sub
inc
pop
push
and
mov
jo
ret
dec
cmp
in
inc
bound
loopne
loope
adc
ja
out
add
fbstp
xchg
push
mov
lret
in
loope
pop
xchg
arpl
adc
sbb
jmp
in
addr16
in
fcmovb
push
das
mov
pop
rcr
loope
bound
and
loopne
jp
sub
scas
sbb
inc
test
stos
jno
das
and
mov
lret
loope
pop
jg
adc
ret
sbb
push
pop
out
and
loope
in
in
gs
loope
ds
cli
pop
cmpsb
ss
fs
jae
mov
int
mov
mov
sub
lret
fs
or
push
jg
enter
mov
in
add
cld
sarb
push
in
mov
xchg
adc
push
xchg
call
jb
adc
xchg
sbb
add
xchg
xlat
lahf
jecxz
bound
sbb
mov
out
loope
inc
mov
fadds
adc
ja
jmp
jg
jmp
loope
repnz
fcompl
hlt
pop
loope
sbb
pushf
loope
cs
jno
ds
sbb
cmpsb
adcb
arpl
dec
mov
test
xorl
cmp
cmpb
divb
lret
adc
jmp
loope
xchg
movsb
rclb
pop
loope
mov
mull
push
in
and
ret
xchg
iret
outsl
xchg
es
orb
push
je
sub
loope
aam
mov
mov
addr16
and
dec
loope
xchg
xchg
cmp
loopne
fcos
jp
mov
xchg
jbe
mov
vpsraw
hlt
mov
xchg
fdivrs
repnz
xchg
loope
ss
test
loope
gs
or
push
adc
daa
mov
jecxz
jl
psllq
add
nop
mov
lods
cmp
cmp
fwait
stos
loope
outsb
inc
shl
mov
xchg
sub
shl
bound
xor
mov
sbb
mov
loope
imul
mov
mov
push
xor
jmp
cmpb
xlat
sahf
fbstp
cmp
mov
push
add
mov
aas
pushf
call
mov
mov
fisubs
repnz
and
loopne
pop
shll
loope
mov
pop
loope
cltd
jle
int
daa
push
loope
xlat
add
or
dec
jmp
hlt
xchg
loope
test
xchg
xor
daa
loope
stc
ljmp
lret
pop
out
lds
xor
push
fisubl
gs
ret
subb
xchg
and
or
mov
mov
imul
jb
mov
sbb
inc
add
movsl
inc
pop
loope
aam
jnp
push
out
xchg
xor
lock
mov
cmpl
in
mov
aam
fbld
loope
add
ss
shlb
test
pop
cwtl
bound
stos
and
dec
lret
imul
push
outsb
xchg
cs
lock
loope
mov
jns
jmp
xor
fmul
sahf
loope
scas
mov
ja
sub
rcrl
ret
mov
cmc
xor
loope
xchg
and
loope
push
into
fwait
or
scas
dec
adc
test
jo
sbb
shlb
jecxz
stc
mov
test
call
loope
stos
jbe
fstpt
lret
mov
insl
mov
aaa
popf
dec
daa
or
loope
pop
cmp
loope
dec
mov
mov
pop
lret
scas
popf
cmp
loope
adc
sbb
xor
dec
xor
in
xorl
pusha
sub
loope
mov
push
cmp
sbb
mov
pop
out
sub
or
popa
or
pop
mov
xchg
push
adc
fldl
push
mov
xlat
xor
lods
mov
sti
add
pop
fstpl
nop
jmp
sbb
loope
out
insb
into
sub
push
add
jg
push
popl
std
arpl
mov
repz
adc
add
and
je
pop
sub
pop
mov
loope
xchg
xor
loop
faddp
loope
add
jge
movsl
insl
xchg
mov
pop
dec
stos
mov
insl
and
xchg
cmpsl
out
mov
sbb
push
rcl
cld
jne
jge
jmp
xchg
lock
mov
mov
xor
cmp
nop
push
int
popa
ficomps
jmp
push
xor
loope
push
cmp
cltd
ret
lock
lds
sub
loope
into
push
adc
pushf
mov
testl
cmc
jbe
push
sbb
loope
stos
imul
pop
pushf
cld
pushl
and
loope
xor
shlb
mov
int
push
outsb
jecxz
or
rcrb
insl
in
aas
clc
push
xor
data16
add
sub
cwtl
pop
lods
fnsave
sahf
cltd
pop
add
loope
xor
fmuls
in
xchg
mov
imul
mov
loope
dec
fcoms
movsl
jne
and
shll
lret
sbb
inc
mov
inc
test
mov
inc
out
cmp
addr16
dec
push
jo
fiadds
jg
loop
clc
mov
sbb
fidivrl
add
mov
dec
movsl
adc
loope
out
mov
push
or
mov
pop
loope
lea
jge
popf
loope
loopne
sar
loope
testl
aam
neg
jae
xor
iret
loope
stc
int3
and
stos
jmp
loope
rorb
popf
cmpsl
shll
inc
and
jg
ficomps
js
add
cld
ja
or
cmpsl
adc
add
jecxz
push
lods
out
pop
popf
jmp
loope
rclb
pop
testb
sbb
sub
leave
xchg
loope
outsb
stc
mov
adc
adc
push
cmp
loope
popf
cld
mov
push
sbb
mov
adc
shll
fs
pop
gs
sarb
pop
ret
shll
jmp
cmc
lea
adc
jno
and
push
out
testl
or
sbb
dec
cmpsb
mov
imul
incl
nop
mov
mov
add
adc
mov
sub
push
in
mov
xchg
lock
dec
jecxz
in
nop
add
mov
inc
incb
lret
push
jne
add
enter
dec
loop
adc
loope
dec
cli
adc
xchg
sbb
sub
lret
mov
or
loope
sbb
add
cmp
add
aaa
fscale
outsb
outsl
fildl
andb
mul
cmc
sbb
sub
add
cmpsb
jle
add
js
sahf
lock
flds
xchg
scas
sbb
add
loope
dec
xor
loope
add
pop
xor
das
jbe
fmull
or
sub
outsb
loopne
mov
xor
sbb
mov
add
imul
mov
pop
popf
loope
lcall
pop
testl
mov
mov
shl
ja
xor
pop
push
out
xchg
xor
jmp
jecxz
shr
push
dec
and
pop
arpl
loope
mov
outsb
loope
cwtl
mov
sbb
or
xlat
mov
push
cmp
dec
loope
out
mov
lock
or
and
mov
in
addr16
icebp
mov
cmp
jmp
mov
lock
xor
jle
hlt
fildll
rclb
or
or
clc
outsb
xor
and
es
sub
fnsave
ja
loope
adc
jg
loope
xchg
mov
loope
cvttps2pi
not
ficompl
shll
jo
lahf
call
sub
add
in
sub
mov
dec
loop
push
das
mov
lcall
nop
inc
jns
xchg
xchg
loopne
subl
mov
movsb
inc
jae
popa
test
push
mov
push
out
bound
jbe
lea
loope
outsl
jmp
adc
dec
andb
ret
test
out
dec
ja
push
push
add
imul
out
mov
sbb
loope
ret
pop
push
loope
lock
adc
mov
pop
cmpsl
movsb
testb
adc
in
sahf
scas
loope
cwtl
clc
xlat
pop
adcb
aas
push
nop
fmull
loope
adc
gs
mov
orl
or
inc
in
mov
mov
sub
loope
push
xor
sahf
ret
mov
sub
loope
xchg
sti
test
in
mov
loope
mov
daa
out
nop
fs
and
bnd
sar
sbb
mov
and
or
call
xor
and
sbb
data16
hlt
dec
sub
lock
insl
or
fidivs
pop
rcr
daa
into
rcrb
xchg
mov
jge
orb
jb
adc
orl
shlb
jl
sub
es
stos
jo
adcl
int
mov
lret
in
mov
test
or
sub
popf
inc
or
outsb
insl
add
cli
push
in
push
inc
push
xchg
mov
jo
and
adc
dec
shlb
and
dec
scas
add
fs
icebp
and
xchg
test
in
jns
add
mov
cmpsb
in
mov
loope
outsl
mov
scas
loope
push
dec
adc
adc
loope
lret
add
and
mov
and
pop
add
lock
sbb
xor
jns
add
repnz
xor
jo
cmp
mov
inc
imul
scas
xchg
into
outsl
loope
sub
pop
lods
jmp
mov
and
adc
arpl
or
loope
push
imul
loope
loop
fbstp
shl
add
inc
ret
jmp
push
dec
xor
sbb
loope
sub
cmp
pop
loope
outsl
cs
add
loope
test
scas
and
xor
loope
xchg
push
jge
sar
loope
dec
jecxz
das
movsb
xor
call
or
out
xor
sub
lret
out
push
pop
xchg
sbb
repz
fnstcw
dec
loope
test
ret
bound
sbb
pop
test
jmp
out
dec
mov
lods
sbb
jle
jne
mov
iret
xor
mov
rcrb
mov
bound
jo
or
hlt
inc
ljmp
idiv
das
js
xchg
pop
loope
mov
cwtl
adc
mov
mov
jae
mov
pop
pushl
fildll
add
inc
mov
jmp
adc
jp
arpl
in
sub
aad
test
mov
xor
loope
shrl
pop
ds
cmc
loope
push
mov
fucom
fwait
or
arpl
cmp
mov
mov
out
rolb
cmpb
stos
mov
lret
and
jp
mov
and
gs
sbb
inc
and
and
add
popa
inc
inc
cs
jecxz
out
xor
or
mov
out
jmp
loope
aas
cmp
sub
jp
dec
or
mov
loopne
jmp
push
mov
mov
lret
jnp
mov
in
sbb
loope
mov
ret
sub
loope
pop
mov
loope
fsubrs
mov
lahf
cli
mov
jecxz
dec
loope
lods
je
or
insl
dec
loope
inc
sbb
fs
mov
lods
inc
scas
in
dec
or
pop
clc
push
enter
movsb
popa
pusha
in
xor
aam
subl
addb
sbb
clc
xchg
cwtl
mov
jo
mov
and
push
ret
ds
add
aas
xor
loope
stc
dec
test
insl
dec
shl
mov
in
sahf
loope
lret
mov
cwtl
dec
cmp
stos
sbb
clc
cmp
icebp
inc
loope
mov
movsb
les
adc
insl
mov
sbb
push
andb
loope
adc
imul
xchg
loope
out
pushf
addb
loope
pop
fcomps
out
pcmpgtw
scas
pop
dec
lret
scas
fsub
test
cli
loope
hlt
and
outsb
push
add
push
dec
idivb
add
ret
inc
jb
jo
mov
inc
xlat
test
or
ljmp
push
dec
outsb
ds
loope
and
mov
mov
fldl
or
movsb
ja
jae
mov
mov
adc
loope
mov
jge
loope
movsb
iret
xchg
and
nop
add
inc
push
fwait
arpl
loope,pt
push
sbb
negb
push
dec
sbb
sbb
loope
sbbl
hlt
loope
sbb
xor
loope
jne
gs
and
fsubs
loope
ss
push
subb
insl
xchg
loope
push
xchg
push
lret
inc
imul
loope
adc
lock
aad
inc
or
subb
in
jo
cmp
ret
outsb
jo
call
mov
mov
jmp
stos
mov
rclb
push
sbb
adc
push
adc
pop
push
outsl
loop
loope
add
hlt
cmp
cltd
or
aad
lea
mov
xchg
rclb
jb
mov
xchg
fs
icebp
loope
mov
cld
lcall
inc
and
loope
add
mov
cltd
dec
mov
jno
mov
cld
loope
push
add
ss
jle
add
jbe
int
cmpsb
std
mul
mov
sti
add
cmp
fwait
loope
mov
loope
repnz
jns
addr16
insl
inc
lahf
loope
cli
fimuls
movsl
pop
push
orb
loope
lods
stos
insb
imul
testl
pop
pop
cmpsb
xor
sbb
push
cmc
loope
pop
mov
and
jbe
inc
mov
or
inc
mov
call
bound
mov
les
xor
ret
jae
mov
mov
xchg
ss
lock
adc
outsb
ret
cmpb
arpl
mov
loope
jmp
outsl
divb
sbb
inc
int
in
dec
daa
and
xchg
jo
loope
push
into
cli
out
adc
pop
enter
shr
sbb
in
scas
loope
jae
inc
cmp
icebp
inc
aam
sti
fsub
or
sbb
adc
mov
bound
mov
jb
mov
push
add
jbe
pop
int3
xor
into
bound
in
shll
out
and
dec
fs
shrb
jecxz
test
add
data16
inc
aad
shlb
push
js
xor
shl
scas
mov
rcr
add
jmp
mov
aad
out
shll
mov
loope
int3
pop
pop
pop
pop
or
loope
xchg
dec
into
mov
ficompl
adc
mov
mov
cmpsb
cmp
iret
gs
repz
mov
insb
insl
loope
add
outsb
loope
sbb
ret
lcall
mov
fldt
mov
jnp
push
loope
push
cmp
bound
push
negb
jmp
loope
pop
jecxz
pop
sub
xchg
aad
and
xor
mov
lock
push
push
pushf
ljmp
push
mov
out
cmp
loope
daa
ror
cmpsb
mov
fsub
xor
xor
jle
cltd
mov
jmp
in
loop
shlb
out
nop
push
jecxz
jmp
dec
mov
add
nop
or
dec
inc
in
fcmovnb
jge
mov
loope
jae
es
outsl
sub
mov
sbb
sub
ret
pop
outsb
aam
subl
loope
mov
mov
mov
mov
jg
adcl
xchg
add
loope
jge
sub
mov
mov
stos
add
jne
sub
shlb
and
fs
and
mov
fisubrs
out
in
pop
or
push
lds
sbbb
add
or
push
loope
cmc
jno
in
xchg
xor
loope
stos
adc
jp
shll
fwait
sub
and
das
pop
cwtl
stos
shr
mov
cmp
in
loope
int
add
dec
jae
push
pop
outsb
jmp
push
and
or
dec
std
xor
insb
ljmp
sub
and
fs
add
jecxz
push
sbb
int3
inc
mov
jmp
in
or
loope
cmpsb
mov
sub
inc
mov
fs
lret
data16
mov
loope
movsb
mov
pop
loope
add
sbb
loope
push
adc
adc
pop
add
cmc
pushl
jp
ljmp
and
incl
sub
das
dec
loope
ss
cli
jae
and
pop
std
add
jmp
mov
push
addl
push
outsb
or
inc
mov
ja
fdiv
and
std
loope
pop
lcall
add
jmp
fwait
leave
dec
push
or
in
jecxz
jo
dec
movsb
mov
shl
stos
or
lock
push
loope
jecxz
jno
ret
loope
push
daa
push
push
mov
adc
pop
imul
mov
adc
pop
push
mov
cs
sub
fsub
outsl
les
or
aas
lods
mov
jae
xchg
xchg
mov
adc
dec
int3
cmp
and
loope
fists
shl
xorb
push
jge
dec
loope
out
pop
cld
out
cwtl
lret
adc
push
dec
mov
aaa
repnz
in
cmp
rolb
loope
push
pop
xchg
xor
mov
leave
por
add
std
pop
add
cmp
in
inc
loope
aaa
or
sbb
orps
ficoms
sbb
push
push
pop
push
ss
in
mov
dec
sub
lea
inc
jae
xchg
push
mov
and
jecxz
mov
fcmovnu
dec
aas
push
lods
shl
loopne
int
and
mov
aad
mov
das
shl
pop
sbb
outsb
test
xlat
cmp
mull
in
lret
jmp
test
loope
jns
mov
add
js
or
hlt
add
loope
les
or
mov
in
xchg
lods
sub
mov
repz
jle
or
add
fidivrl
nop
aas
sbb
loope
push
mov
xchg
loope
add
stos
loope
inc
and
push
push
cmp
pushf
jecxz
push
nop
xchg
test
bound
xor
mov
movsl
orl
cmp
add
add
xor
sub
mov
cmp
out
shlb
sbb
jnp
loopne
mov
cmpsb
rcrb
or
cli
es
dec
xor
and
cmp
xchg
aad
jle
cltd
xchg
mov
jbe
call
in
dec
out
enter
cwtl
fwait
jecxz,pn
cmp
xor
xor
mov
mov
push
xchg
push
lss
dec
xlat
fldcw
sub
mov
add
adcb
push
insl
lret
dec
fucompp
mov
inc
mov
mov
repnz
lods
mov
loope
cmp
jns
loope
add
add
loope
inc
pop
fisttpl
lock
adc
stos
in
loope
cmpsb
adc
loope
xchg
cmp
jno
xchg
bound
mov
or
jne
mov
xor
jb
rcrb
mov
mov
loope
inc
aaa
cli
mov
adc
mov
in
jmp
arpl
or
dec
dec
negl
cld
ja
mov
sbb
mov
xchg
pop
xchg
dec
lock
filds
pop
cltd
fdivr
and
pop
fidivl
cs
xor
loope
loop
adcb
push
mov
shl
add
push
pop
jge
filds
pushf
xchg
lahf
push
loope
or
into
add
and
loope
push
aad
daa
orl
mov
fwait
loope
cs
push
jp
pop
jle
mov
fstpl
cmc
rorl
cmp
sti
and
js
push
dec
pop
inc
or
inc
ja
inc
adc
push
sahf
test
sub
nop
stos
adcb
jmp
loope
pop
adc
xlat
pop
sbb
cmpsl
rorb
add
pushf
ret
add
mov
add
in
sbb
cld
popf
test
pop
dec
data16
xchg
imul
push
mov
out
ficoml
cwtl
addb
xchg
shlb
jbe
dec
mov
popa
jo
fidivl
and
push
inc
jmpw
mov
loope
xchg
fcomp
mov
clc
sbb
out
add
mov
std
fsubrs
mov
movsb
xor
or
mov
pop
out
dec
push
dec
lock
outsb
fs
test
inc
out
mov
pop
jmp
xchg
add
lea
push
add
fsub
xorl
jb
inc
clc
xchg
popf
jae
into
aad
filds
sbb
sarl
xchg
movsb
and
sarl
add
xor
xor
loope
mov
cmp
aas
repz
lret
xor
and
push
in
mov
mov
ljmp
lock
popf
xor
or
loope
push
xchg
mov
dec
aaa
xor
test
imul
cmp
jo
pop
lcall
adc
addb
dec
mov
or
bound
push
jmp
lock
fbstp
pushf
in
push
scas
pop
loope
es
add
lret
loope
xchg
adc
adc
lret
in
repnz
cli
movb
pop
push
imulb
loope
mov
sbb
leave
sbb
les
push
add
loope
mov
ss
loope
adc
dec
sbb
sub
sbb
in
push
or
finit
sub
mov
mov
in
les
or
push
sub
fdivp
jmp
mov
mov
out
pop
xor
add
mov
add
push
adc
addr16
xchg
lret
mov
loope
xchg
test
push
and
xor
mov
or
lea
pop
pushf
loope
stos
dec
mov
mov
cmp
mov
jg
popf
inc
mov
fldcw
insb
imul
mov
jecxz
movsb
loope
pusha
cmpsl
jle
xchg
test
jmp
xchg
and
ret
add
loop
pushf
push
hlt
or
and
cmpb
loope
or
pop
cmp
or
sbb
xchg
jmp
jno
mov
orb
mov
test
add
mov
dec
xchg
xor
shlb
push
and
mov
mov
xchg
stc
jb
and
jecxz
loope
add
mov
shrb
dec
outsb
xor
or
xor
in
loope
lods
dec
imul
mov
pop
loope
sahf
mov
and
push
mov
out
mov
adc
loope
add
shlb
xchg
scas
outsb
das
stos
jecxz
popa
jns
sub
jbe
fisttpll
fisubs
mov
xor
lods
sub
loope
sti
mov
shlb
ja
mov
push
divb
ljmp
mov
mov
insb
sub
mov
loope
sahf
mov
insl
adc
faddl
mov
push
loope
loop
sub
clc
gs
shrb
add
cmpsl
ss
dec
arpl
push
loope
and
push
mov
pushf
sti
in
cld
ret
cmp
cmp
test
mov
out
fstpt
shrb
insb
bound
mov
scas
or
stc
xor
cmpsb
ja
jmp
jle
add
mov
divb
mov
jecxz
arpl
loope
lret
cmc
or
sub
nop
rorb
loop
in
in
or
outsb
mov
jle
push
dec
adc
cmp
loope
imul
test
push
out
mov
mov
xchg
addr16
jmp
or
loope
sti
add
adc
dec
iret
cwtl
sarb
jno
loope
mov
jne
xor
outsl
mov
enter
add
add
cmpsl
jae
bnd
in
in
xchg
push
loope
xchg
cmp
ficoms
notb
lret
iret
loope
pusha
movsb
or
sahf
mov
aad
vpsrld
dec
xchg
in
je
jg
xchg
jbe
mov
push
dec
pop
jmp
cmc
or
pop
data16
or
dec
rclb
and
lods
ret
pop
addr16
ret
mov
xor
cmp
lds
cltd
adc
test
sbb
loope
dec
sub
jmp
lret
rcll
mov
int
fmul
rcl
mov
mov
icebp
xchg
jo
scas
mov
shll
call
ret
mov
inc
lahf
mov
adc
insb
insl
in
in
dec
jl
xor
mov
stos
scas
aas
out
jne
lret
loope
test
insb
jb
dec
push
shrb
out
xchg
loope
push
pop
jmp
rclb
jecxz
inc
not
stc
or
ds
in
in
mov
lds
sub
ljmp
stos
out
pop
clc
xchg
loope
ret
outsb
sub
fsub
inc
xchg
lea
mov
iret
mov
loope
and
fs
je
ja
mulb
in
ljmp
and
in
mov
test
fwait
xchg
sbbb
pop
mov
fsts
push
add
lods
scas
xchg
pop
inc
sub
je
xlat
dec
add
bound
add
xchg
movsb
sar
push
loope
fistpll
xchg
insb
ja
cmpsl
loope
out
std
or
jno
sbb
outsb
insb
je
loope
jns
push
and
loope
lods
subb
ret
inc
sbb
add
cltd
stos
loope
push
dec
mov
popf
push
bound
lcall
and
clc
gs
pop
mov
sti
push
addr16
fisubl
fistl
stc
adc
dec
loope
cs
push
loope
xchg
setns
cld
dec
jae
cmpsb
pop
dec
add
push
xor
dec
fstpt
xchg
mov
xchg
mov
loope
cli
jne
ficompl
and
pushf
pop
adc
mov
loope
jle
je
push
cmc
jbe
or
dec
cltd
pop
push
push
xorb
loop
clc
xor
sub
mov
arpl
cmp
push
jp
lods
stos
in
test
mov
bound
mov
shll
mov
xchg
or
psraw
adc
xchg
sbb
loope
sarb
test
pop
loope
ret
xchg
pushf
cs
loope
in
xchg
fcmovnbe
xor
ja
push
jmp
sarb
jnp
stos
mov
mov
fcmove
mov
loope
sbb
push
aaa
mov
cli
mov
xor
mov
inc
jl
enter
xchg
shld
sti
mov
inc
add
imul
xchg
arpl
dec
cmc
nop
mov
and
loope
push
addb
jo
sbb
mov
mov
cwtl
lahf
jmp
loope
jns
loop
pop
les
popa
sbb
inc
enter
stos
mov
loope
jge
pop
mov
mov
add
leave
outsl
insb
imul
nop
insl
loope
pop
ud1
sbb
add
test
aam
pop
loope
loop
hlt
pop
js
mov
cmp
addr16
addr16
mov
adc
mov
jmp
mov
adc
loope
cmpsl
xchg
scas
pusha
and
in
aas
pop
push
push
sub
ds
loope
mov
pop
scas
loope
adcl
pop
gs
xchg
mov
jmp
cs
cmp
loope
in
xor
jg
jo
icebp
aam
call
loop
fwait
in
add
shrb
push
fldt
add
mov
sbb
insl
in
jbe
mov
sarb
in
pop
popa
sbb
ss
jmp
or
icebp
fucom
mov
push
subl
les
mov
pop
stos
inc
fsubs
loope
rclb
into
out
mov
sarl
or
or
arpl
pop
scas
loope
ror
adc
loope
push
mov
xchg
lret
loope
leave
jae
mov
out
xor
cmpb
xchg
mov
dec
cmc
dec
in
fsub
lcall
pushf
je
pop
pop
loope
inc
in
lar
sub
loope
out
mov
repz
adc
mov
loope
in
es
and
in
mov
cli
enter
stc
mov
andb
push
fsts
mov
mov
outsb
push
pop
out
and
je
in
jb
and
cmp
jmp
mov
out
loope
jo
mov
or
stos
repnz
stos
loope
cmp
or
fndisi(8087
sahf
mov
inc
adc
inc
and
repz
sbb
sbb
sub
dec
cmp
adc
in
xchg
neg
inc
stc
mov
pushf
mov
aad
cltd
lds
dec
mov
add
int
in
jbe
and
call
jge
es
ds
lds
sbb
repz
and
adc
adc
test
sbb
repz
push
adc
in
jno
fwait
imul
push
sbb
jne
mov
dec
inc
xor
sbbl
jmp
push
mov
cmp
adc
loope
or
ret
add
orb
or
pusha
jge
jmp
fldcw
outsl
and
xchg
inc
out
and
shrb
jmp
ss
add
inc
testb
cmp
mov
rcrb
cmpsl
pop
jmp
push
test
mov
mov
iret
inc
pop
fidivs
or
loope
adc
movsb
loope
shr
orb
cmp
repz
insl
ret
fiadds
loop
popf
das
jp
orb
outsl
jns
or
jmp
loope
mov
or
mov
mov
dec
mov
test
sbb
fs
pushf
ss
sbbb
shll
jb
or
into
jp
and
xchg
xor
mov
aad
adc
or
loope
jle
inc
mov
outsb
lahf
imul
add
icebp
or
in
pop
xor
sbb
jp
push
cmp
into
add
pop
mov
movsb
push
loope
mov
jle
xlat
mov
loope
not
xchg
andb
cmpsb
aaa
adc
push
adc
sub
int3
das
jl
testb
dec
sub
loope
and
sbb
sbb
gs
push
test
fsubs
jo
push
fldz
pop
jnp
shll
or
adc
shl
and
xor
inc
mov
fimull
mov
push
sahf
jecxz
in
lock
stc
scas
loope
adc
dec
shrb
imull
pop
add
jo
sub
loope
inc
adc
lock
hlt
jnp
aaa
pop
push
pop
mov
mov
jns
lds
xor
imul
repnz
in
lock
xchg
xchg
out
loope
lods
mov
and
adc
pop
cld
loopne
mov
cli
jg
or
ja
mov
cld
cmp
cmp
je
loop
call
mov
sbb
cwtl
rcrl
daa
adc
scas
loope
mov
dec
cltd
xchg
push
shlb
xchg
aam
mov
push
pop
add
pop
mov
icebp
insl
sti
and
jno
mov
in
popf
fwait
push
rorb
inc
in
fstpt
adc
fsub
imul
cltd
in
loop
int
insb
cmp
fs
cmp
aad
data16
int3
popa
ljmp
pop
cmp
cmpsl
loope
mov
pop
movsb
loope
pause
mov
loope
lods
xor
loope
in
fyl2xp1
test
push
popf
loope
bound
or
push
and
jne
loop
xchg
aaa
test
cltd
inc
jle
loope
push
pop
jmp
in
outsb
add
lock
jecxz
into
push
loope
int3
inc
adc
mov
cwtl
inc
mov
and
fucompp
inc
lock
ds
and
cmp
loope
xchg
out
test
dec
popf
imul
dec
loope
sbbb
xchg
loope
push
loopne
fwait
or
loope
pop
cmp
popa
jl
mov
ret
add
lcall
sbbl
mov
and
push
rcrb
cmp
jne
rcrl
loope
push
fisubrl
adc
lahf
int3
cld
popf
lods
and
andl
lcall
orw
jle
jae
in
cltd
rclb
jmp
or
loope
inc
dec
lret
sbbl
push
psubsw
std
ljmp
outsl
adc
clc
repnz
inc
fstl
cmp
or
inc
fiaddl
jo
rorl
jg
dec
les
jnp
xor
pop
sub
push
fidivl
inc
jecxz
fbstp
dec
push
lds
mov
dec
jo
aas
add
out
movsl
lods
ret
jecxz
xor
iret
sbb
scas
bound
mov
test
pop
out
jg
loope
fistpll
insb
loope
popa
pop
cmp
repz
js
icebp
sbb
mov
lahf
xchg
outsb
adcb
addb
out
loope
stos
inc
lret
mov
out
cld
push
loop
jp
push
stos
shrb
mov
mov
pop
mov
mov
jno
loope
sub
pop
adc
loope
ljmp
xor
hlt
jne
cmp
in
jo
loop
aam
out
divb
jb
jbe
pop
loope
adc
insb
call
sub
or
loope
popa
inc
cwtl
dec
out
push
loope
outsl
xchg
cmp
jmp
mov
lret
out
pop
js
out
call
mov
mov
push
in
iret
stos
lret
adc
pop
insb
ja
and
loope
gs
jns
lret
xchg
lock
lods
adc
inc
loope
fwait
aad
sub
sarb
xchg
jl
inc
hlt
fsub
das
mov
xor
and
lods
loope
mov
mov
nop
sarb
mov
or
mov
mov
xorb
std
jmp
shlb
mov
mov
lds
nop
or
pop
push
outsl
cmp
push
out
loope
icebp
cli
jmp
loope
mov
jl
ss
imulb
jg
lock
push
inc
adc
nop
push
dec
pop
mov
inc
negl
shrb
jo
lret
xor
cmpsl
in
seto
dec
push
lods
xlat
jbe
std
int3
push
pop
push
movb
or
fxch
test
shll
cmovo
in
adc
push
jnp
mov
jae
cmc
xorb
jmp
popa
pop
mov
lret
and
loope
pop
dec
int3
mov
cld
mov
adc
push
cmc
fsubr
mov
scas
fidivl
dec
add
push
sbb
mov
loope
sbb
mov
xor
dec
or
xor
jecxz
out
xor
pop
jns
or
loope
fidivs
mov
jno
cmp
loopne
inc
test
mov
and
fistpll
jecxz
jge
sbb
inc
loope
jb
jp
xor
aaa
pop
hlt
fisubl
mov
loope
outsb
mov
mov
cmpsb
cs
ljmp
imul
fdivrl
in
xor
dec
cli
sbb
and
xor
in
push
or
push
or
or
xchg
aaa
out
xchg
popa
mov
loope
cwtl
ds
and
loopew
pop
test
stc
test
jae
adc
sarl
mov
fwait
or
data16
pop
mov
mov
cs
push
loope
inc
adc
fsts
push
in
push
or
jnp
push
sub
ss
add
jecxz
mov
fs
loope
push
and
js
cmp
pop
mov
pop
rcl
test
xor
inc
loope
push
std
inc
jmp
out
mov
in
mov
sbb
jp
or
in
loope
and
pop
call
mov
xor
lds
mov
iret
aam
sbbl
or
loop
xchg
loope
mov
or
push
pop
pop
das
faddl
adc
jne
xor
cmpsb
fnstenv
out
jb
loope
ljmp
push
xor
popa
mov
aaa
jg
enter
mov
add
loope
out
test
jmp
fwait
lcall
inc
xchg
pusha
jno
in
pop
in
insl
outsb
enter
jp
loope
ja
hlt
fs
adcl
push
sbb
jg
aas
jb
inc
loope
sub
test
icebp
aad
jo
test
test
in
push
mov
ja
call
in
repnz
movsl
inc
loope
xor
call
pushf
stos
loope
lret
xchg
movsb
shl
sbb
repz
dec
sbb
and
clc
push
or
incl
or
in
mov
add
xchg
lret
loope
fisubs
cmpb
loope
adc
mov
iret
mov
jle
mov
mov
sti
dec
loope
or
shlb
call
lods
push
js,pn
inc
pop
loope
push
lds
mov
pop
out
inc
pmulhuw
testb
mov
inc
xlat
lret
lock
inc
stc
outsl
pop
into
js
jmp
js
data16
sbb
add
fwait
loope
fisubrl
test
call
es
xchg
xchg
shll
arpl
aam
loope
icebp
orl
xchg
mov
das
mov
nop
mov
enter
jns
sbb
push
jnp
aam
fwait
lea
loope
mov
sub
push
jmp
sub
add
int3
mov
leave
out
loope
mov
scas
jp
outsl
cs
loope
jl
aas
push
add
jne,pt
push
mov
sarl
mov
cwtl
xchg
std
push
push
scas
push
adc
sbb
or
lret
arpl
loope
xchg
fwait
pop
testb
out
push
or
loopne
add
and
lret
out
or
mov
pop
cli
cmc
mov
adc
loope
xlat
dec
fldl
sub
xchg
popa
std
loope
push
or
adc
out
cmpl
loope
loopne
sbb
sub
and
outsb
int
dec
sub
lock
dec
mov
dec
mov
and
ja
out
loope
cmpsl
outsb
push
popf
add
dec
add
movb
mov
sbb
and
mov
xor
fucomip
inc
stos
js
clc
loope
sub
insl
dec
lret
loope
push
insb
or
outsb
pop
push
loope
fisubrs
in
mov
fwait
xchg
loope
mov
pop
xor
inc
mov
arpl
loope
cmpb
icebp
jo
and
in
loope
jle
mov
mov
pop
jmp
iret
cs
test
pushf
mov
loope
stos
jne
push
or
mov
lahf
scas
mov
pop
mov
push
cmpsl
divl
mov
sarl
sbbl
stos
into
js
scas
addr16
in
iret
cmp
loope
cld
orl
add
not
cmp
add
sbb
sub
insb
loope
in
mov
dec
xchg
loope
or
jnp
mov
shrb
jecxz
mov
aad
out
test
divb
sbb
loope
int3
fwait
jl
pop
adc
cmp
push
addr16
inc
xor
cmp
leave
stos
jge
pop
clc
in
mov
jns
scas
leave
sti
imul
ljmp
cmc
jge
loope
outsb
adc
lock
lock
push
jbe
addr16
lcall
mov
push
loope
xchg
loop
fwait
sahf
inc
stc
mov
and
pop
shlb
mov
xchg
loope
hlt
jo
inc
adc
in
repz
stc
cli
loope
adcb
mov
movsl
ja
or
jecxz
dec
mov
add
clc
loope
mov
sub
insl
ret
rcrl
xchg
dec
loope
or
out
insl
jecxz
std
pop
push
and
cmp
out
ljmp
mov
loope
cmp
lret
push
pop
push
or
das
adc
movsl
loope
inc
cwtl
iret
outsl
pop
ja
loope
stos
mov
xchg
and
in
xor
pop
mov
xchg
loope
lahf
lret
inc
jo
adc
shl
push
push
push
mov
cwtl
and
inc
bnd
into
add
add
lea
cs
outsb
ja
in
or
loope
mov
cmp
loope
adc
sbb
mov
cmp
loope
iret
push
repz
jecxz
loope
bound
lock
mov
mov
jb
js
imul
push
sarb
int
leave
jb
and
sub
push
mov
jo
ss
inc
cmp
mov
cmp
mov
mov
loope
aam
cmp
scas
push
loope
sub
xchg
das
aas
sub
push
xor
loop
loopne
adc
push
and
mov
popf
jge
inc
and
mov
idivl
imul
xor
jmp
xor
ja
loope
out
popa
push
shlb
or
divl
cmc
cmp
sub
sub
loope
inc
dec
lods
fisubs
cmp
mov
call
fs
mov
add
mov
gs
xor
mov
dec
sub
repz
mov
loope
add
loope
scas
mov
mov
cld
add
nop
iret
pop
lcall
cmp
push
sti
icebp
jle
xlat
lret
push
inc
mov
cmc
shlb
jl
loope
xchg
icebp
pop
mov
add
gs
inc
outsl
ljmp
pop
inc
mov
sbb
rorl
loop
lods
add
sub
bound
loope
cmc
adc
mul
dec
loope
lods
lahf
lcall
loope
add
sbb
movsb
stos
lock
pop
lock
je
cwtl
out
shll
dec
ret
jg
mov
mov
jno
sub
lods
mov
test
jo
dec
dec
data16
pop
fnstsw
loope
cs
mov
test
aam
jmp
pusha
loope
cmpb
shl
test
xchg
lret
push
lcall
ret
loope
dec
mov
cs
jns
pushf
mov
mov
xchg
scas
int3
push
cmp
cld
cltd
sub
loope
mov
std
pop
fdiv
aaa
loope
lods
xor
xchg
and
xchg
sub
fimull
add
inc
mov
fwait
lret
dec
jo
lret
push
scas
dec
js
out
in
jne
cltd
add
es
fs
movsl
not
add
mov
js
mov
out
inc
repnz
in
lret
outsb
or
addr16
mov
mov
loope
in
test
inc
aad
loope
dec
js
mov
shl
mov
sub
sarl
cmpsb
and
int
cld
loope
sub
fs
mov
cltd
loope
dec
loop
mov
mov
shlb
mov
and
mov
and
mov
call
shl
and
int
jg
pop
loope
or
cmpsb
add
arpl
mov
loope
fldcw
xor
loope
push
jae
jnp
lcall
jmp
in
inc
xlat
gs
and
in
lock
loope
cltd
push
xor
jmp
sub
loop
movsb
loope
mov
inc
popf
loope
jne
test
cltd
test
xor
or
je
mov
loope
mov
sbb
loope
insb
mov
lcall
leave
fdivl
out
sub
dec
data16
movsb
xchg
jno
mov
add
add
jmp
mov
adc
cmp
xor
inc
jle
sub
out
or
loope
shl
dec
mov
sbbb
sub
ss
shll
mov
pop
scas
dec
and
lock
pop
or
dec
or
xlat
lock
push
nop
mov
popa
ja
lock
lret
jmp
inc
insl
je
loope
cmpsl
sbbl
cwtl
shlb
cltd
fistps
push
xor
mul
sub
pop
loope
mov
mov
data16
lcall
rcl
aam
aam
sub
test
loope
sbb
loope
cmp
inc
or
es
mov
xchg
cmc
outsl
and
stos
loope
popa
jbe
daa
or
shlb
jp
stc
adc
adc
int3
jecxz
bound
repnz
adc
ss
sbb
loope
stos
jno
or
out
lcall
cwtl
xor
sub
or
sbb
std
pop
push
xchg
xor
sarb
jo
popa
inc
popf
mov
loopne
mov
clc
jo
call
loope
add
stc
and
add
mov
mov
cli
mov
in
add
daa
dec
jb
push
loope
xor
and
push
lods
mov
cmp
push
aaa
pop
sbb
bnd
sub
popa
and
and
loope
mov
cmp
jg
dec
loope
cmpsl
mov
hlt
gs
inc
negl
loopne
es
dec
sub
loop
cli
rorb
mov
dec
fdivrl
out
andb
jecxz
push
rolb
cli
clc
fcoms
pop
add
shlb
cld
xchg
add
loope
loop
xchg
fcmovne
arpl
movlps
pop
fimull
jp
push
mov
stc
insb
cmpsl
scas
add
mov
call
sub
imul
add
cwtl
in
mov
daa
mov
ss
imul
mov
out
daa
dec
dec
aad
lret
cwtl
pop
or
pushf
prefetch
or
insl
into
dec
in
inc
jbe
insl
jo
clc
ljmp
sub
mov
hlt
ja
pop
xor
imul
das
xchg
jo
cmp
inc
mov
mov
sub
mov
in
loope
sub
mov
mull
and
aad
xor
sbb
mov
mov
hlt
jle
pop
sub
jmp
add
loope
das
pop
mov
pop
mov
add
sbb
inc
cld
jno
adcl
and
jmp
mov
xor
inc
pop
dec
or
jmp
loope
hlt
push
rclb
mov
popa
ds
jp
pushf
test
into
xor
dec
inc
jae
mov
shll
add
xchg
pop
imul
ljmp
out
lock
push
xor
mul
dec
stos
cmp
push
pusha
add
xor
cli
lods
imul
mov
incb
jl
gs
xchg
scas
push
fsubs
push
in
adc
xor
or
cli
pusha
loopne
test
ret
shl
js
in
insb
aam
mov
ret
mov
loope
pop
call
mov
out
enter
shrl
xchg
in
pusha
daa
dec
mov
call
add
aam
cmp
sbb
dec
dec
jo
sbb
push
test
stos
dec
test
loope
cmp
jle
mov
inc
add
add
sti
jb
fmuls
xor
loope,pt
xor
push
mov
push
shl
sti
iretw
push
inc
cs
lock
rcr
je
inc
add
mov
pop
nop
popa
rsqrtps
jbe
scas
sbbl
loope
sub
mov
push
mov
dec
lcall
xchg
arpl
pop
sub
into
or
inc
ds
cmp
push
loope
jnp
pushf
add
mov
or
call
sarb
pop
xor
push
rcll
push
loope
xchg
xor
loope
jmp
rol
loope
gs
mov
mov
loope
ds
fwait
xor
dec
mov
push
hlt
adc
pop
in
jecxz
mov
add
push
mov
mov
sahf
mov
shrl
mov
subl
out
sub
nop
cmp
and
mov
jae
pmulhw
jns
xor
cmc
or
ss
aas
stos
push
push
mov
loope
cmpsl
push
loop
jns
leave
and
xchg
pop
add
loope
sub
push
movsl
loope
addl
loope
mov
test
inc
mov
xchg
adc
dec
sahf
sbb
roll
shll
lcall
movsb
mov
shl
mov
mov
fsub
out
jmp
loope
fists
xchg
lods
mov
xchg
mov
dec
add
insl
jmp
pop
outsl
xchg
gs
pop
loop
or
or
mov
jmp
aad
loope
add
push
loope
ficoms
jecxz
test
sbb
pop
sbb
loope
cmp
cmp
loope
pop
ja
inc
call
jae
jle
dec
lahf
xor
adc
and
in
popa
iret
and
loope
cmp
or
and
lea
test
jmp
or
cmpsl
mov
in
in
mov
rcrl
lock
push
gs
imul
jne
imul
jp
adc
xchg
mov
mov
jmp
mov
loope
dec
aaa
cltd
pop
pop
xchg
adcb
std
inc
mov
aas
cmpsl
loope
inc
lods
or
pop
dec
addr16
add
sub
ficoms
and
mov
out
int3
rolb
leave
nop
mov
mov
jmp
push
sbb
cmp
loope
lea
loope
pop
mov
fsubl
sub
loope
decb
xor
pop
push
xchg
jmp
mov
adc
or
jbe
jecxz
or
pushf
cmpsl
daa
or
mov
movsl
xchg
in
outsb
and
mov
pop
mov
movsl
xor
fmull
and
sahf
rorl
jl
adc
iret
inc
loope
fidivl
pop
loope
add
push
push
mov
jmp
arpl
inc
sub
movsb
mov
loope
pusha
xlat
in
ljmp
loop
pop
or
xchg
lods
jge
dec
out
xchg
jle
mov
mov
sub
test
rcll
repz
sub
pop
loope
xchg
mov
mov
adc
loop
push
rol
dec
mov
cmp
leave
movsl
test
enter
mov
lock
add
sbb
fsub
fcomip
pop
mov
and
push
xor
fnsave
lods
es
mov
repz
jb
or
aas
loope
or
in
cli
pop
push
mov
movsb
cmpsl
int
lcall
cltd
loope
dec
cmp
mov
lret
mov
mov
lea
sbb
jno
ss
lods
mov
nop
loope
mulb
cmp
out
xchg
loope
and
pop
inc
mov
fwait
aaa
addb
leave
ficomps
es
insb
push
mov
shlb
ljmp
push
leave
insl
or
insb
jg
and
iret
nop
fdivs
and
sahf
repnz
push
dec
loope
inc
and
add
add
andl
stos
push
and
mov
sub
pop
das
pop
scas
loope
ljmp
loope
inc
mov
imul
inc
das
dec
jecxz
dec
loope
xlat
aad
daa
pop
rorl
loope
mov
cmpsl
xor
std
push
xor
dec
push
movb
jbe
mov
and
jo
fldl
in
xor
push
aaa
xchg
or
push
sub
or
loope
pop
mov
and
mov
and
jo
es
dec
loop
sub
in
loope
push
or
mov
insl
in
or
mov
in
cltd
jge
dec
pop
adc
scas
inc
incl
movsb
fldl
jnp
mov
inc
cmpb
cwtl
push
imul
jmp
mov
loopne
xor
mov
fs
add
or
shlb
jno
dec
movsbl
fucom
jae
jmp
cmp
std
aad
movsb
and
cmp
call
loope
or
push
scas
sarl
and
cs
out
add
popf
jb
sbb
mov
in
push
loope
loopne
outsb
adc
out
ljmp
dec
jmp
add
gs
fwait
pop
aam
adc
push
and
idiv
cmp
jp
xor
loope
shl
push
sub
into
mov
add
rclw
or
xchg
pop
and
pop
jecxz
sbb
cmpsb
cmp
out
jge
repz
sar
mov
lahf
or
rcr
adc
int3
out
cmpsl
xchg
loope
mov
cmc
movsb
jo
stos
push
mov
jmp
movsl
repz
pop
out
xor
adc
mov
imul
loope
and
mov
daa
popa
loope
adc
inc
stos
xor
loope
jl
bound
pop
loop
dec
xor
push
jecxz
test
xor
insb
jbe
mov
movsb
orb
loope
dec
lahf
mov
and
xchg
add
es
loope
and
shlb
inc
xor
xor
mov
loope
mov
int
fsubrl
loope
imul
into
mov
fs
add
leave
fwait
jmp
in
xchg
pushf
shrb
adc
loope
ds
clc
adc
pop
out
in
popa
mov
xor
pcmpgtw
rcll
push
jo
or
icebp
pop
shl
cli
mov
add
iret
lcall
pop
jmp
mov
pop
xchg
scas
mov
and
or
gs
jp
mov
sub
fcoms
mov
test
xor
jns
pop
inc
loope
scas
out
movsl
mov
mov
jmp
sub
rcr
mov
je
aam
imul
dec
cmc
sub
js
loope
addr16
in
inc
mov
jnp
andb
popa
pop
mov
mov
fnsave
xchg
jmp
cltd
gs
sti
push
sahf
add
popa
test
push
mov
fdivs
push
mov
movsb
push
or
divb
adc
jg
les
fcmovnbe
sti
inc
imull
xor
andl
loop
mov
inc
rcrl
sti
in
in
fidivs
mov
ljmp
dec
lret
in
cmp
loope
sahf
pop
das
cmp
adc
shl
jg
bnd
push
jns
loope
mov
js
leave
dec
loope
addr16
out
mov
dec
cltd
loope
cld
fmull
jle
push
loope
mov
fsubr
repnz
notb
xchg
loope
inc
lods
adc
loope
dec
add
mov
lods
pop
or
mov
fcmovne
and
testl
mov
hlt
or
loope
pop
inc
add
imul
cltd
ret
mov
or
filds
push
movsl
loope
jbe
push
and
jae
imul
loope
shlb
xchg
mov
loope
popa
ret
mov
sbb
pusha
in
inc
loope
sbb
sbb
mov
pusha
xchg
mov
jns
pop
pop
out
loope
jle
pop
pop
push
push
scas
mov
loope
jge
xchg
dec
push
and
push
xchg
adc
rclb
pop
or
test
and
orl
jo
cs
cmp
jmp
loope
mov
iret
ret
adc
in
mov
jl
andl
xchg
mov
scas
and
push
pop
mov
sub
push
enter
rcl
adc
les
loope
cmp
push
sar
dec
jg
adc
shr
dec
in
stos
mov
adc
pop
add
inc
push
inc
xchg
loope
mov
pop
loope
dec
lea
in
xchg
loope
inc
jno
adc
xor
mov
ret
adc
mov
push
or
call
shrb
insb
fucomip
leave
mov
iret
repnz
repz
loope
into
inc
ficompl
xor
loope
in
cmp
push
sbb
inc
sbb
out
push
std
scas
add
jl
cs
push
jmp
data16
mov
dec
mov
jge
xor
cmp
push
hlt
cmp
xchg
stc
out
sub
lock
ljmp
js
rcl
into
mov
mov
adc
pop
push
sbb
roll
push
jo
fucomi
dec
mov
lahf
loope
cmpsl
cmp
loop
incl
jo
push
shlb
mov
push
inc
mov
add
sub
in
or
mov
and
sbb
mov
pop
je
outsl
and
shlb
in
fimuls
cs
inc
xor
mov
dec
pop
mov
cli
jp
ficompl
adc
test
push
cltd
or
js
cld
mov
movups
inc
mov
popf
rcr
inc
stos
testl
fistps
insb
xlat
into
xor
cltd
cmp
lods
cmp
mov
imul
push
das
leave
ljmp
lahf
xchg
test
pop
mov
in
pushf
pop
pusha
sub
push
sub
scas
ljmp
cmpb
shl
sahf
rol
sub
jmp
jo
dec
mov
jmp
lret
lret
mov
int3
lcall
jo
out
test
in
push
sub
or
movsb
rcrb
out
push
pop
rclb
out
test
in
and
int3
xchg
cmpsb
into
shr
cmp
iret
sarb
outsb
in
push
lret
mov
inc
fisttps
in
shlb
mov
out
fs
jmp
inc
loope
out
cld
das
or
scas
ja
sub
in
loopne
ljmp
xlat
out
inc
enter
sahf
popf
aad
mov
sbb
jmp
jae
xchg
or
dec
in
dec
sti
add
imul
and
mov
into
jo
cli
aaa
sub
adc
pushf
or
mov
cmc
loope
imul
int3
add
loope
es
rolb
sbbb
pop
std
mov
push
nop
and
sti
mov
inc
jp
in
mov
xor
repnz
xor
sub
jb
insb
or
outsb
sbb
push
in
cmp
sarl
hlt
insb
pop
ljmp
jge
and
or
mov
insb
ja
lea
out
in
js
adc
into
loope
sbb
inc
dec
aas
pop
enter
orb
dec
loope
cwtl
addr16
rorl
and
jg
loopne
aam
fdivrs
sub
lahf
mov
push
add
loope
jb
cmpsb
cs
fidivl
lock
aas
dec
mov
andb
xchg
pushf
add
loope
ret
insl
push
and
pause
push
out
mov
popf
xor
lods
jb
mov
ds
aam
loope
or
dec
shll
xchg
in
insb
pop
lds
cmpxchg
sub
in
shlb
cli
loope
inc
pop
shrl
push
pop
jge
pop
and
jb
hlt
and
mov
xor
sbb
sub
push
mov
sub
push
jp
loope
fs
sub
or
and
or
cmp
add
xchg
loope
mov
negb
in
xor
fsub
les
loope
xchg
insb
cmp
loope
fisubl
in
rorl
add
mov
and
jge
fsubp
outsb
imul
lret
and
loope
jp
mov
loope
das
in
out
mov
pop
cli
jecxz
leave
sbb
mov
out
in
ds
xchg
std
adc
ss
popf
loope
mov
mulb
mov
add
int
sub
dec
sub
loope
imul
add
jnp
out
notl
stos
lock
xchg
bound
out
sub
arpl
lods
add
cltd
sti
ljmp
add
mov
jge
mov
cwtl
mov
out
dec
or
sbb
fs
ljmp
mov
das
jecxz
ss
sub
sar
les
cmp
add
dec
lahf
mov
jl
cmp
in
mov
ret
sub
push
pop
loope
push
shll
pop
fmuls
fwait
jp
cs
push
loope
roll
loope
sbb
adc
mov
inc
aam
loope
or
out
jecxz
xchg
insl
jmp
in
cmp
movsb
loope
in
cmp
fprem
pop
loope
add
loope
ds
mov
loope
and
das
sarl
add
jecxz
sbb
mov
jl
loope
add
in
add
loope
dec
cmc
xor
sub
xorl
lcall
xchg
loope
je
aas
xchg
lds
addl
lods
repnz
loope
shll
mov
ljmp
mov
mov
cmpl
lret
fnsave
test
loope
mov
std
inc
loope
in
xchg
shlb
shll
in
jbe
mov
loope
call
sbb
dec
mov
fsts
imul
loope
aas
jmp
and
mov
stos
mov
inc
dec
pusha
cmp
loope
iret
icebp
push
inc
mov
loopne
add
push
fcmovnbe
pop
xchg
repnz
rolb
jp
and
dec
call
fucomip
adc
scas
cmpsl
push
sub
jo
mov
outsl
jecxz
lret
loope
ret
scas
and
int
jecxz
in
xor
shll
xor
stc
mov
fldt
mov
pop
sbb
loope
ret
mov
int3
fucomi
or
jp
pop
std
loope
aaa
sarb
movsl
or
adc
or
add
movsb
loope
add
xchg
mov
stc
sti
aam
fidivrs
loope
jo
push
rcrb
sahf
xchg
loop
in
fsubs
js
xor
popf
call
loope
or
lods
cmp
pop
rcrb
xchg
rolb
push
mov
cld
loope
xlat
xchg
roll
dec
cmp
ficoml
add
lock
lret
add
lods
dec
loope
int3
leave
push
mov
mov
ss
outsl
jo
cwtl
mov
and
and
popl
ds
in
aad
std
add
and
sub
loope
hlt
lds
mov
jne
popa
push
cld
insb
cli
or
and
std
adc
nop
cmpsb
jne
hlt
adc
inc
ss
sar
loope
leave
shlb
jns
mov
xchg
mov
roll
shlb
fs
pop
aad
xchg
push
imul
jo
aam
lret
mov
push
mov
fsubp
push
add
sbb
std
std
adc
js
cmp
scas
pop
push
loope
imul
fdiv
jmp
and
jo
sub
dec
jmp
loope
mov
mov
loope
adc
data16
addr16
movsb
add
aas
icebp
jge
outsb
mov
jo
push
loope
jbe
or
push
cwtl
loopne
aam
mov
ret
sub
pop
addr16
in
rol
xchg
add
repz
iret
xlat
fdivl
int3
mov
mov
decl
xor
gs
dec
and
pop
inc
or
jle
loope
xor
psraw
adc
add
data16
inc
dec
ret
pushf
aad
fisubrs
jmp
loope
rol
hlt
jl
movsl
int3
xchg
jp
inc
push
and
cmp
arpl
es
loope
or
mov
jnp
sbb
data16
in
cmp
mov
stos
loope
aaa
pop
outsl
push
imul
push
pop
mov
mov
gs
lods
icebp
in
jl
add
in
divb
mov
into
fsubr
dec
and
das
inc
cld
daa
movsl
mov
loope
out
mov
jmp
adc
mov
xchg
jmp
leave
loope
aaa
fucom
out
cmc
iret
loope
rcrb
loope
add
xor
loope
fwait
jno
repnz
add
mov
adc
push
xchg
dec
loope
mov
subb
pop
jo
in
mov
cmp
inc
jl
lock
jg
sbb
minps
loope
fimull
js
pop
xor
incb
in
out
push
daa
loope
std
ljmp
ret
adc
fs
gs
aad
outsb
or
insb
cmpl
aas
jecxz
loope
loop
imul
hlt
or
or
icebp
cmp
lds
mov
sbb
sti
std
adcl
jle
jnp
ds
inc
loope
popf
push
xchg
into
loope
pop
pop
jmp
mov
inc
test
ja
inc
pop
and
loope
adc
aad
inc
xor
cmp
in
sub
std
enter
sbbl
push
in
shl
jmp
aad
clc
push
sub
dec
xchg
or
sub
loope
call
fs
loope
cmp
out
addr16
aaa
cmp
je
loope
negl
cmc
loope
adc
add
mov
outsb
dec
inc
out
mov
mov
das
and
cmp
dec
imul
cld
jns
cli
test
das
push
push
loope
mov
hlt
and
mov
stos
lahf
in
add
adc
lret
aam
cmp
loope
inc
mov
mov
inc
push
mov
adc
loopne
aas
js
mov
dec
or
adc
icebp
push
add
mov
mov
mov
loopne
jle
pop
push
pop
push
cmpsb
mov
jb
xlat
jmp
inc
sbb
and
cld
xor
xchg
addr16
loope
add
shrb
imul
jmp
mov
test
fimuls
imulb
aad
mov
dec
jae
fldcw
jno
dec
lds
inc
xchg
daa
jge
inc
push
je
lret
xchg
imul
or
loope
stc
xor
fsubrs
or
jge
lcall
fnstsw
xchg
cltd
adc
mov
jmp
arpl
jl
cmpsb
scas
cmp
rorl
dec
loope
das
insb
mov
jl
adc
leave
std
sub
ficomps
mov
out
or
cwtl
aas
in
loopne
xchg
cmp
mov
dec
jno
mov
jnp
sbb
lret
hlt
rolb
aad
sub
pop
and
notb
mov
jne
loope
mov
pushf
orb
mov
fldl
popa
mov
inc
insl
pop
dec
loope
dec
cmp
push
inc
inc
pushf
mov
and
ret
call
dec
mov
push
mov
push
push
loope
jbe
std
sbb
or
push
and
leave
loope
sub
mov
pop
xor
mov
inc
dec
or
jno
imul
mov
call
jo
pop
lret
fs
test
lahf
sbb
mov
icebp
cmc
fwait
movsl
test
out
push
push
in
fmulp
jo
psraw
popf
gs
loope
xlat
hlt
mov
rorl
jnp
push
xchg
std
scas
xchg
dec
loope
or
imul
loope
mov
inc
leave
loope
roll
mov
pushf
dec
dec
idivl
loop
loope
xchg
mov
push
mov
mov
loope
jge
call
loope
sub
xchg
jg
enter
pop
sub
mov
loope
ret
push
dec
test
jmp
dec
cmp
out
arpl
loope
sti
sub
fiadds
mov
ds
out
and
mov
jp
sbb
dec
xchg
loope
mov
imul
add
jg
cwtl
call
in
mov
or
bound
popa
and
jmp
stos
loop
cld
loope
push
mov
loop
mov
or
fsts
ror
mov
lahf
loope
cmp
idivb
mov
mov
jecxz
push
xlat
shrb
push
xchg
in
jg
bound
push
cltd
stc
sbb
sub
scas
lock
pop
mov
xlat
loope
js
add
sbb
add
aad
cmp
out
xor
mov
lods
loope
mov
push
xor
jns
cwtl
inc
lret
or
loop
loope
mov
je
sbb
add
jecxz
ds
sub
and
mov
adc
shl
adc
loopne
dec
lods
mov
js
xchg
mov
cmpsl
xor
mov
mov
sbb
daa
in
pop
xchg
aas
loope
mov
xchg
sub
leave
out
incb
loope
pop
jo
out
add
xor
test
subb
call
or
cmpsb
fldenv
sbb
mov
mov
insl
xchg
scas
push
icebp
loope
lcall
loope
add
push
and
andl
pushf
inc
fmul
loope
in
adc
and
cmp
push
add
add
dec
adc
inc
mov
movsb
pop
enter
pusha
and
adc
ds
pop
nop
inc
mov
stc
loope
imul
loop
add
loope
hlt
cmpb
shl
mov
inc
out
cld
sub
or
fadds
sarb
jecxz
or
test
xor
sbb
fdivl
lock
loope
les
das
aas
mov
jno
addb
repz
in
in
scas
shlb
add
adc
outsl
idivl
in
js
out
jno
dec
cli
shll
ret
outsl
adc
lock
lahf
jo
out
call
out
loope
leave
mov
cmc
mov
mov
sbb
lea
mov
lock
or
xchg
in
outsl
faddl
add
ja
jmp
ret
leave
jnp
psraw
mov
dec
int3
xor
jmp
pop
rorb
xchg
jmp
inc
push
jl
mov
sub
and
out
fldcw
fnstsw
dec
cwtl
push
jle
jl
imul
shll
mov
out
lret
popa
movsl
xchg
inc
incb
sub
or
aas
ret
cmp
add
pop
add
popa
mov
dec
adc
pop
mov
lret
iret
xor
mov
mov
loope
fldt
notl
movsl
push
sbb
out
out
ljmp
je
mov
stos
mov
mov
mov
sub
in
int3
in
jbe
loope
mov
push
add
xor
bound
loope
mov
mov
pop
sbb
push
pop
mov
jmp
negl
jl
and
mov
adc
xchg
jmp
loope
jmp
les
incb
adc
dec
inc
int
push
inc
divl
mov
xor
mov
push
shlb
test
lock
loope
sbb
cmp
iret
mov
adc
inc
jbe
mov
add
pop
inc
sahf
fimuls
push
mov
mov
aas
lock
imul
popf
imul
jp
and
mov
das
push
fsubrl
lret
sub
loop
add
repnz
jmp
push
mov
and
scas
addr16
mov
pop
je,pn
mov
mov
sbbb
iret
loop
adc
mov
rorl
les
fcomps
and
jo
xor
fidivrl
shr
addr16
cmp
xor
mov
outsb
leave
mov
xorb
mov
push
mov
test
rol
addb
sahf
push
fs
mov
dec
pop
xor
push
loope
std
dec
testl
mov
xlat
or
jb
nop
dec
push
mov
ja
and
mov
add
inc
hlt
daa
push
jno
fsubr
jl
or
fstps
xor
mov
out
inc
in
lods
mov
cmpsb
clc
adc
jecxz
repz
daa
jne
stc
mov
pop
ss
fcoms
lcall
mov
lods
leave
sbb
mov
sub
push
xlat
adc
sbb
xor
or
loope
movl
xchg
ret
in
cli
cmp
and
stos
sub
fnsave
xchg
jmp
loope
pop
icebp
dec
inc
jp
mov
stos
mov
or
add
mov
loope
int
xchg
out
xorl
mov
push
lods
loope
sti
in
xor
sub
pushf
std
add
nop
nop
imul
cs
loope
xchg
adc
push
inc
mov
sbb
adc
add
loope
loop
out
fimuls
sarb
mov
lea
inc
xor
inc
shll
je
mov
xchg
test
aaa
fs
loope
movsb
pop
jbe
and
mov
push
jne
mov
stos
push
inc
fnstsw
jmp
sbb
xchg
loopne
pop
mov
arpl
shrb
movsl
sahf
jecxz,pt
jnp
loope
add
repz
and
cmp
hlt
push
pusha
loope
jbe
iret
in
loope
push
xlat
frstor
aam
jge
add
loope
bnd
and
mov
jnp
cmc
cli
ljmp
aam
es
loope
icebp
mov
loope
push
out
gs
insl
sub
pop
sbb
pop
movsl
loope
pop
adc
mov
sahf
mov
hlt
jg
shll
loope
pop
dec
jbe
imul
adc
test
fwait
mov
imul
out
add
jmp
adc
cmpsl
jbe
sub
insl
push
loope
bound
fdivs
loope
lods
push
test
arpl
and
xor
mov
mov
fsubp
mov
mov
loope
sbb
pop
pushf
loope
call
stos
inc
and
out
mov
push
mov
imul
mov
imul
push
aam
sub
add
loope
rcll
sbb
nop
or
aas
add
loope
shr
cmp
inc
xchg
ret
fldcw
dec
je
lock
mov
and
mov
in
mov
cs
fs
sbb
fsubrs
or
xchg
sahf
cltd
xlat
xor
daa
loope
fcompl
push
and
out
or
jmp
enter
sar
inc
jmp
or
das
fmuls
loope
fsqrt
mov
loope
ret
rorb
pop
xor
xor
inc
mov
adc
push
mov
loope
bound
aam
cltd
push
or
loope
popa
xor
inc
push
leave
sub
inc
push
stos
jmp
dec
sub
fisubl
andl
cs
mov
subb
cmp
cmc
inc
mov
out
bound
js
rorl
loope
and
roll
adc
xchg
sbb
int3
inc
arpl
cwtl
push
dec
mov
lock
mov
add
or
loope
xchg
movsb
cmp
dec
outsb
arpl
cmp
out
mov
popa
incl
add
add
cld
imul
iret
popa
pop
add
loope
jne
sub
dec
cs
test
hlt
ljmp
mov
and
push
push
xchg
out
popa
mov
pop
jae
loope
cmp
dec
add
mov
test
loope
xchg
jmp
hlt
xor
call
inc
ret
loope
mov
je
add
sbb
loope
inc
jge
xchg
mov
push
pushf
cs
in
pop
std
bound
cmp
push
jns
jmp
xchg
mov
out
pop
in
loope
inc
jb
shll
mov
cmpsl
pop
in
xchg
jp
mov
push
jo
cmpsb
mov
sbb
call
sbb
mov
dec
sbb
cmp
jge
xor
out
imul
dec
jae
jnp
dec
mov
loope
imul
pop
mov
movsl
dec
cltd
pusha
xor
aad
loope
mov
cmpsb
adc
loop
repz
sbb
daa
jge
loope
add
out
shl
xorb
add
inc
test
push
adc
hlt
adc
jle
stos
ror
add
sbbb
jmp
and
loope
movsl
into
pop
pop
addl
jmp
push
movsb
xchg
loope
mov
into
inc
add
or
add
and
xchg
dec
adc
fbld
pop
daa
rclb
mov
xchg
mov
loop
mov
loope
sti
mov
jle
cmc
rcl
fs
movsb
mov
jne
out
lock
inc
jmp
std
stos
xor
loope
add
inc
shl
xchg
or
loope
mov
cmp
sub
shlb
xor
mov
inc
mov
or
js
lods
mov
iret
out
sub
sub
mov
xor
dec
mov
notl
pop
ret
jg
notb
push
fs
loope
and
cmpb
cwtl
shl
scas
into
out
and
out
loope
jae
sbb
addr16
loope
int3
sub
hlt
loope
fnstsw
or
ljmp
pop
mov
loope
sub
cmp
popf
jo
sub
adc
loope
idivl
mov
scas
aaa
lea
loope
dec
inc
out
push
dec
xchg
and
sahf
mov
pop
and
lahf
les
scas
lock
test
and
and
cmp
jg
adc
sub
push
lret
add
popf
std
loope
mov
dec
fsubrs
cmp
cmp
and
loope
or
outsb
rolb
or
out
push
loope
dec
add
push
shlb
fcoml
sbb
adc
push
out
jmp
es
or
sub
inc
cs
in
sub
nop
mov
sarl
divb
mov
faddl
shrb
sub
ficoml
iret
and
stc
loope
enter
mov
loopne
cmp
sbbb
loope
jp
mov
fistpll
jo
pop
ret
lods
and
sub
clc
pushf
push
cmpsb
mov
xchg
pop
dec
out
lret
clc
mov
subb
mov
jmp
fdivs
cwtl
mov
es
mov
int3
in
mov
mov
loope
pop
jne
imul
lcall
xchg
and
sbb
in
scas
xchg
jnp
popa
jo
or
fs
push
es
dec
std
movsb
out
and
gs
inc
repnz
sbb
movsl
mov
fcom
jns
sbb
cmc
scas
fsubr
jmp
scas
xor
push
loope
mov
je
sbb
mov
jmp
and
fstpl
push
add
jo
push
daa
cmp
inc
dec
jmp
in
add
cvtpi2ps
fsubl
and
rorb
xlat
cmpsb
out
dec
push
loope
xchg
push
push
loope
lret
rorl
insb
add
pop
mov
in
ret
rcr
int
jge
adc
jge
loope
push
outsl
sbb
loope
add
dec
mov
loope
scas
xlat
jmp
add
cmp
and
imul
cwtl
loope
repz
xor
loope
lds
je
les
lahf
mov
enter
push
insl
int3
xlat
rolb
add
call
loope
rolb
rcl
gs
mov
add
ljmp
outsl
sbb
divl
nop
xchg
scas
stos
xlat
in
rorb
cld
cmp
cli
xchg
mov
shl
push
dec
data16
loope
ret
sti
js
push
cmp
pop
pusha
outsl
jge
lret
cs
jmp
push
cmp
loop
jge
jg
or
loope
cli
push
lcall
sbb
stos
aad
mov
and
mov
sub
rcrl
push
loope
mov
add
dec
adc
outsl
xchg
pusha
mov
ds
add
loope
dec
icebp
mov
inc
jno
pop
dec
mov
dec
ljmp
push
sub
rorl
and
test
push
push
loope
sarl
idivb
loope
push
aaa
mov
lock
loope
sub
jno
loope
dec
jns
add
jne
or
and
insb
aaa
jg
in
aad
loope
or
ja
loope
cmpsl
rcrl
shll
movsb
add
addr16
mov
adc
test
mov
push
out
adc
sub
push
mov
or
push
hlt
and
push
mov
jb
push
sti
out
add
loopne
loope
test
hlt
mov
cld
xchg
and
clc
lods
data16
fnstenv
fdivs
push
dec
je
out
aam
mov
jmp
inc
shl
xchg
outsb
pop
fldenv
jne
and
lds
cmp
aam
loope
pop
insl
add
adcb
mov
push
lcall
insl
fdivrl
sbb
aam
jbe
lahf
pop
mov
or
xor
mov
jle
cltd
mov
mov
inc
sub
push
lea
jmp
je
fabs
sbb
lods
or
jmp
cmp
rorb
dec
adc
adc
jmp
adc
je
test
push
loope
insb
int3
pop
cltd
cmc
add
cmpsb
lret
rclb
inc
in
and
sub
popa
jae
add
in
xor
ljmp
pop
stos
dec
xchg
call
loope
sub
sbb
aad
daa
loope
outsl
imul
mov
ret
pop
stos
loope
bound
mul
jnp
jp
daa
add
loope
and
popa
loope
call
inc
daa
loope
cmpsl
mov
or
and
push
or
ret
or
cmc
cmp
jo
push
shlb
ds
or
jecxz
mov
pop
stos
aaa
scas
xchg
aad
shlb
mov
pop
xorb
lret
test
shrl
loope
mov
push
fiaddl
out
fwait
repnz
leave
push
lock
push
add
pop
lock
call
pop
nop
popl
sahf
imul
sbb
loop
or
pop
aas
lea
inc
dec
sub
sbbl
ret
arpl
int
pushf
and
mul
in
lock
incl
cltd
dec
arpl
sbb
dec
pop
push
shlb
dec
nop
sbb
loope
popa
inc
shl
fisttpll
mul
jo
and
inc
loope
mov
fidivs
stc
sbb
mov
cmp
popf
divl
ss
sahf
cmpsl
pop
gs
iret
mov
or
and
fs
sbb
mov
mov
popa
mov
loope
int3
sbb
lds
out
sub
sbb
push
inc
fdivrl
movl
and
jmp
jp
in
loope
dec
dec
add
and
mov
lcall
stc
inc
jg
or
push
fs
mov
jl
lcall
mov
les
xchg
pop
clc
cmpsl
fs
jbe
shl
push
push
les
push
mov
mov
cld
loope
mov
pop
add
std
push
sbb
stc
fmuls
add
into
cwtl
and
ljmp
jns
leave
cmp
push
pop
mov
push
insl
mov
pop
push
loope
int3
aas
insb
outsl
adcl
in
lret
xor
mov
and
jbe
mov
in
mov
loope
fwait
mov
mov
popa
leave
jbe
xchg
ljmp
jns
xchg
test
test
inc
push
lds
push
out
in
arpl
and
aad
filds
popf
jmp
ret
add
das
push
jae
mov
loope
push
insb
pushf
and
loope
repz
mov
lret
daa
inc
jnp
push
jnp
and
dec
jo
aam
and
leave
fsubrs
and
sbb
test
in
mov
or
loope
pop
shr
sbb
sahf
push
cmp
lods
loope
dec
outsb
adc
jle
loope
lahf
fwait
pop
test
xchg
pop
popa
loope
movsl
inc
test
pushf
mov
loope
sbb
daa
mov
out
mov
fnsave
popa
jmp
notl
and
push
jmp
cmp
add
insb
pop
cli
xchg
xor
bound
loope
or
adc
imul
shrb
add
loope
data16
aas
push
test
dec
add
push
jbe
sub
rcrl
in
jp
addr16
in
adcl
fisttps
je
loope
xor
roll
add
and
ret
dec
loope
shlb
ficoml
mov
pop
xor
dec
gs
cltd
mull
mov
sbb
xchg
out
xchg
xchg
add
sbb
jbe
shll
movsb
xor
inc
or
outsl
into
mov
loop
loope
test
xlat
loope
mov
outsb
cld
sbb
into
inc
stos
shll
pusha
loope
add
mov
jne
adc
aad
loope
inc
fwait
pop
mov
loope
ficompl
dec
out
sub
loope
stc
test
mov
mov
cmp
or
test
and
push
inc
lea
push
inc
outsb
loope
xchg
cwtl
pop
aaa
fisubrs
xchg
fnstenv
mov
in
inc
sub
imul
mov
loope
cmp
loope
or
pop
loope
or
nop
pushf
adc
mov
inc
mov
out
push
ds
loop
clc
loope
inc
xchg
mov
mov
sti
push
aas
popa
int
imull
mov
loope
sbb
xchg
mov
and
loope
sub
dec
xchg
in
rorb
adc
mov
loope
enter
mov
sub
dec
clc
dec
fsubrs
mov
fcmovnb
push
mov
shr
loope
test
dec
sub
idivl
mov
or
xchg
lods
pop
sti
mov
scas
dec
mov
pop
jo
mov
dec
jbe
sub
loop
xchg
out
into
sub
out
dec
in
push
dec
pop
lret
jno
loopne
xchg
aad
jg
out
fidivrs
loop
push
jle
loope
sahf
or
mov
shlb
push
scas
insb
and
mov
xor
loope
push
mov
fistpl
xor
push
test
mov
adc
add
jle
sub
jnp
fsubr
lea
and
iret
and
add
mov
lcall
pop
mov
push
jmp
jo
fisttps
xorl
subl
jmp
test
loope
ficomps
lret
xor
int
cmp
xlat
add
mov
jge
pop
sbb
inc
sub
xor
rorl
out
loope
pushf
imul
fdiv
mov
imul
push
imul
cmpsl
je
aas
lahf
push
lcall
xchg
loope
stos
stos
mov
std
push
loope
jg
in
xorl
mov
dec
inc
mov
lods
inc
loop
daa
fildll
pusha
mov
call
mov
inc
push
push
lods
mov
mov
sbb
ror
sbb
add
and
xor
bound
dec
mov
aas
orl
mov
outsl
sbb
icebp
lods
sarl
pop
or
xorl
push
jb
cmp
popf
and
sarl
push
fimuls
loopne
push
sub
loope
pop
sbb
mov
xchg
icebp
cmp
jmp
jnp
fistpl
fucom
outsl
sub
into
loope
adc
rorl
and
sub
inc
insb
or
jp
adcl
and
mov
mov
cmp
pushf
push
sub
andl
and
in
mov
loope
ret
pop
push
into
dec
xor
cs
adc
xorl
jg
fadd
nopl
cmp
mov
aas
loopne
loope
sbb
cmpsl
nop
sub
loope
push
sub
lret
test
dec
movsl
jge
sbb
icebp
arpl
sbb
enter
xor
push
test
stos
push
lods
in
push
inc
adc
xlat
arpl
pop
mov
jns
cs
push
xchg
loope
stos
mov
outsl
loope
push
lret
arpl
testb
add
xchg
xor
jbe
jmp
sub
push
add
xor
shlb
loope
loop
cli
nop
cvtps2pi
loope
out
icebp
inc
mov
cmp
les
loope
add
loope
cmpsb
pop
das
mov
aaa
mov
or
adc
jmp
mov
lret
push
jno
push
fs
loope
mov
popa
cmp
call
test
in
gs
xor
mov
lea
sbb
xlat
mov
insl
sub
inc
rcrl
ljmp
xchg
stos
or
xchg
xlat
xchg
mov
cmpsl
and
jl
pop
push
loope
add
cmp
cmp
pop
inc
push
pop
bound
xorb
pop
out
dec
loope
je
shl
or
push
add
jge
cs
loope
mov
mov
mov
test
add
sub
in
adc
cmp
add
cmp
in
cmp
leave
mov
loope
push
jnp
sti
sub
jns
add
dec
mov
and
mov
cwtl
insl
cmpsb
loope
sbb
dec
fisubrs
loope
inc
push
push
sahf
pop
cmc
loope
add
mov
cmp
aam
inc
loope
imul
lret
cltd
inc
cmpsl
orl
loope
jle
adc
popa
push
in
push
movsb
rolb
jae
out
push
es
jle
montmul
cmpsb
test
aam
mov
mov
icebp
out
scas
cli
std
gs
push
je
pop
repz
imul
iret
shlb
jo
jne
mov
adc
ret
out
jge
outsb
and
push
sbb
loope
out
xchg
mov
loope
test
lods
jne,pt
popf
loope
pop
loop
jb
daa
outsl
jns
loope
mov
fsubrl
leave
jp
inc
cmp
and
jmp
ds
inc
mov
imul
cmpsb
outsl
cmp
mov
daa
mov
xor
mov
mov
jmp
sub
lods
incl
movsl
int3
aas
jo
lahf
in
mov
cmp
popf
ficomps
enter
in
dec
xchg
in
loopne
aam
pusha
addr16
mov
jb
fs
mov
cmpsl
and
daa
aam
rcrb
mov
cltd
loope
gs
enter
loope
adc
fcom
popa
faddl
push
insb
mov
and
cltd
push
loope
mov
mov
call
out
loope
mov
dec
add
mov
mov
mov
cmp
xchg
arpl
les
fcompl
sub
test
out
call
in
int
mov
loope
ret
ds
loope
add
sarb
lret
nop
sahf
and
loope
mov
cmp
sbb
push
xchg
cmp
loope
mov
and
push
mov
test
repz
sub
loope
push
jne,pn
inc
loope
call
mov
loop
cld
and
shlb
icebp
pop
xchg
jge
rcrb
fldt
in
scas
and
andb
lock
push
jb
xor
push
inc
pop
add
shlb
mov
xchg
out
jmp
shl
fdivs
jmp
or
ret
loope
xchg
daa
lcall
jmp
jb
pop
call
and
and
or
xchg
rol
dec
xor
mov
xchg
sbb
lcall
adc
pop
push
loope
and
cld
sbb
xchg
in
jbe
loop
fildl
mov
mov
pop
jle
loope
daa
push
enter
dec
nop
lret
xor
jmp
loope
dec
dec
mov
es
dec
into
jecxz
pop
out
mov
jnp
mov
or
outsb
shlb
mov
xchg
mov
shrb
les
faddp
jecxz
outsb
loope
jnp
and
test
fcoms
mov
aaa
xchg
mov
mov
ret
jo
rcl
inc
pushf
inc
insb
in
adc
mov
lret
mov
add
jne
push
movsb
dec
loope
or
insb
ret
lahf
sbb
jne
hlt
int
les
dec
adc
mov
push
in
scas
dec
loope
popa
gs
sub
add
fmul
adc
fsubl
repz
loope
push
pusha
jp
jle
das
rolb
mov
stos
jns
xchg
add
mov
push
xor
incb
mov
test
or
hlt
test
xchg
call
cmp
add
daa
outsb
call
mov
in
test
das
xchg
loope
lods
mov
push
hlt
loope
int3
mov
sub
mov
jbe
adc
loope
mull
mov
inc
loope
pop
lret
xchg
sahf
inc
jmp
jg
xchg
mov
mov
jge
in
jg
pushf
mov
cmpsl
loope
sti
cld
and
scas
out
loope
arpl
loope
sti
rclb
xchg
jnp
sbb
mov
sbb
or
cmp
lret
jae
subb
cs
scas
add
jecxz
push
adc
cmc
cmp
cmp
fadds
shl
xor
dec
cmp
fisubrl
in
add
jns
lock
jge
jg
pop
push
je
add
iret
insb
jno
jl
mov
loope
addr16
push
in
out
cmpsl
mov
or
out
adc
pop
add
in
loope
dec
pop
in
fdivr
shlb
sub
pop
jmp
cli
notl
mov
rcrl
mov
xor
mov
push
mov
je
jnp
sub
in
cwtl
mov
mov
rcl
dec
loope
cmp
sbb
jp
loope
xor
sar
mov
pop
bound
lds
sub
xlat
cmp
fs
push
mov
imul
or
push
fsts
or
push
test
arpl
cwtl
xchg
adc
xchg
push
and
in
or
xor
inc
add
mov
loope
push
xchg
xchg
dec
push
loope
add
or
jp
movsb
loope
jecxz
ret
push
xchg
leave
fdivrs
pop
dec
js
sub
in
jecxz
add
xor
xor
mov
mov
jbe
sub
cltd
mov
push
jne
rclb
sbb
mov
popa
sarl
mov
lahf
loope
adc
add
insl
and
inc
inc
loope
add
in
lahf
adc
inc
fwait
jge
pop
pushf
fsubp
aad
pop
push
stos
add
sub
rcr
mov
out
jb
loope
clc
stos
pop
add
shlb
mov
sub
rcrb
cmpsl
in
xchg
jae
add
pop
pminsw
in
mov
cmp
out
sub
xor
mov
sbb
loope
pop
mov
or
add
adc
xrelease
push
xchg
jbe
int3
mov
loope
xor
in
les
jo
out
and
sub
stos
loope
fstl
push
cmp
adc
popf
shr
adc
add
or
lods
insl
sub
mov
dec
mov
sbb
push
inc
scas
cmc
mov
loope
jns
mov
and
enter
iret
mov
mov
loope
sbb
gs
cmc
test
loope
movsb
popa
xchg
int3
jl
movsl
loope
loopne
icebp
ds
rol
and
sbb
mov
movsb
cmp
shll
xor
out
jmp
pop
in
sub
mov
sub
out
fisttps
lods
in
int3
or
or
mov
loope
mov
pop
cmp
loope
and
xor
dec
pop
sbb
add
into
iret
add
outsl
loope
call
add
ds
stc
push
add
sub
push
das
adc
adc
test
movsl
sbb
cmp
xor
add
insb
out
popf
loope
clc
loope
jbe
inc
lea
mov
dec
inc
loope
int3
mov
loope
pop
push
ficoml
sbb
jne
out
test
fwait
in
mov
mov
and
sahf
or
ret
mov
pop
or
sub
movsl
pop
jge
pop
scas
jbe
mov
ret
mov
leave
sub
mov
out
jns
lret
mov
add
rcrb
inc
int3
jo
shlb
xor
popa
test
inc
pop
out
loope
ret
lea
nop
lahf
loope
inc
sahf
data16
imul
in
push
mov
flds
loopne
xchg
in
fabs
clc
push
mov
ficoms
pop
dec
jle
std
mov
loope
sub
or
mov
jge
xchg
pop
xchg
jmp
loope
lret
adc
rcr
or
aad
fsubl
and
xor
ljmp
xchg
pushf
in
mov
loope
lcall
nop
adcb
cmp
mov
or
jp
iret
add
loope
pushf
imul
popf
gs
test
or
sub
and
lods
push
xchg
loope
mov
imul
xchg
sbb
sbb
dec
jle
ret
stc
loope
xor
cmpsb
pop
or
loope
movsb
sahf
adc
push
push
mov
loope
pusha
mov
loope
popf
xlat
stc
adc
out
sahf
les
decl
scas
icebp
loope
stc
add
adc
addr16
mov
loop
fndisi(8087
add
jno
imul
pop
jo
jbe
dec
neg
xchg
jecxz
add
inc
inc
mov
int3
popa
sti
icebp
inc
mov
add
int
rolb
in
popf
loope
out
mov
lods
inc
jbe
inc
cmp
loope
es
outsl
pop
push
inc
scas
roll
les
loope
push
cli
sbb
sub
sub
xor
loope
mov
testb
mov
fiaddl
add
lods
sbb
push
roll
mov
enter
xchg
xchg
and
lock
loope
dec
pushf
push
sub
loope
subb
test
and
std
pop
jno
push
loope
js
push
cmp
loope
pop
dec
fistpl
out
idivb
and
adc
fcomip
mov
pop
mov
inc
imul
inc
dec
loope
or
lret
push
enter
movsl
xchg
lock
aam
fsub
xlat
lahf
xor
inc
popa
push
jl
xchg
test
inc
in
gs
shl
pop
shrl
lret
jecxz
sahf
add
pop
out
mov
loope
xor
enter
loope
mov
xchg
mov
bound
and
mov
in
dec
popa
adc
pusha
adc
inc
jl
fwait
nop
jnp
inc
rorl
mov
pop
push
pop
cmp
aad
loope
sub
jg
mov
jo
pop
xchg
xor
jmp
loope
cltd
out
fwait
cmpsl
mov
or
push
shrl
and
shlb
gs
pop
sbb
bound
out
shlb
xchg
cmp
repnz
jmp
loope
cmp
sbb
sub
loope
xchg
call
loope
sub
push
mov
outsl
addb
push
add
push
or
sbb
lock
popf
mov
loope
aaa
pop
ljmp
sub
aad
cwtl
fisttpll
xchg
popf
mov
jns
ja
out
push
andl
das
out
fabs
ret
fdivs
in
aaa
loope
mov
push
loope
enter
test
fwait
add
movsb
pop
pmulhw
nop
out
push
lret
outsb
pop
stos
jmp
mov
inc
in
xchg
sbb
adc
sbb
pop
push
and
push
lret
loope
stc
out
inc
loope
xchg
adc
mov
inc
loope
push
int
addr16
pop
add
lds
xor
call
outsb
arpl
mov
loope
sub
aam
loope
negl
dec
pop
lods
lock
in
cmpsb
out
cmpsl
push
mov
push
push
mov
lock
test
or
inc
out
mov
int
ds
jmp
loope
frstor
cwtl
subl
std
in
nop
hlt
arpl
dec
loopne
pusha
loope
testl
adc
clc
mov
popf
mov
fcomip
aam
in
imul
sbb
add
jae
in
lahf
loope
pushf
and
mov
scas
jmp
inc
sbb
xchg
in
sbb
push
dec
dec
dec
dec
mov
jne
cmpsb
loope
xchg
cmpsl
dec
mov
dec
mov
rclb
int3
pop
std
loope
jge
sbb
cli
or
sub
or
inc
mov
loope
lret
cmp
loope
mov
enter
out
sbb
mov
fidivrs
inc
xchg
insl
stos
xor
and
out
dec
shl
sub
movsl
aaa
add
pop
mov
cmp
dec
out
loope
rcrl
jmp
test
fsub
xlat
sarb
addl
fwait
cmpsb
push
mov
stos
adc
push
ds
imul
mov
cmp
addr16
mov
xor
imul
jl
cs
in
fmuls
jo
sbb
loope
fildll
and
fwait
stos
mov
insw
sar
xor
and
inc
cmp
adc
cmp
or
iret
jo
and
cli
add
lock
pop
shlb
jnp
in
cmp
xchg
xor
call
jns
rolb
loope
mov
cmp
mov
rcrb
mov
push
sbb
mov
dec
adc
sub
ja
jae
loope
mov
cmpsb
rcrb
add
mov
scas
rclb
aas
xorl
add
shlb
repz
pusha
lahf
loope
sub
mov
mov
loope
das
les
loope
in
sub
insb
sbb
movsb
jmp
dec
xchg
cmp
sub
loope
inc
adc
movsl
mov
scas
fdivp
outsl
pop
or
add
fs
xor
xchg
xchg
aas
adc
sbb
inc
mov
out
xor
mov
jmp
and
pop
push
push
loope
arpl
sbb
or
jo
loope
and
test
fsts
rclb
push
popf
cli
xchg
out
push
cs
sub
xor
loope
movsb
cmc
sbb
xor
jge
mov
loope
cwtl
mov
cltd
loope
clc
movsl
mull
add
mov
loope
jle
xchg
sbb
xchg
icebp
out
movsl
test
loope
bound
jge
adc
loope
data16
jg
xor
inc
aad
loope
in
jl
lret
jo
mov
or
cmovg
sbb
mov
jo
pop
pop
and
cmp
cmc
loope
and
push
push
xchg
dec
pop
mov
lret
loope
std
sbb
inc
jle
repz
mov
sbbl
test
test
and
xchg
orl
jno
mov
add
or
mov
adc
cli
dec
mov
pushl
imul
fdivr
and
adc
push
jl
mov
loope
inc
pop
in
loope
jbe
push
push
jae
arpl
outsb
lahf
in
sub
fucomp
cmp
pop
test
xchg
xorb
fildl
sti
ret
and
xlat
pop
add
in
sub
cmp
or
cltd
xor
push
cmpsl
and
inc
movsl
cmp
adc
flds
loope
repnz
sbb
loope
xchg
push
iret
je
ret
in
aas
scas
insl
adc
hlt
fsub
or
call
lock
pop
ret
inc
jbe
and
lock
mov
nop
mov
shlb
data16
mov
push
cmp
repnz
dec
insb
addr16
cli
push
inc
xchg
rcrb
test
gs
dec
xchg
add
lock
xor
icebp
jecxz
jae
sbb
loope
fwait
hlt
cld
jnp
push
jl
xchg
loope
scas
call
fdivrs
jmp
jae
push
jg
sbb
dec
call
cwtl
or
dec
push
pop
dec
inc
jmp
loope
addl
loope
pop
cmp
nop
loope
imull
xchg
mov
mov
test
sub
jo
loope
leave
sub
inc
test
pop
loop
fadd
mov
je
stos
adc
outsl
xor
std
jl
xor
loope
sub
pop
loope
gs
ljmp
push
sti
test
mov
jno
int
xchg
loope
pop
pop
xchg
lock
cmp
loope
in
add
loopne
arpl
xchg
hlt
sti
xchg
loop
mov
xorb
mov
out
pop
popa
pushf
jecxz
aad
loope
mov
dec
pusha
sub
leave
jecxz
dec
hlt
loope
cwtl
nop
arpl
mov
adc
and
outsl
rcll
dec
jmp
insb
mov
push
add
ret
jmp
or
pusha
xor
cmc
mov
test
mov
pmullw
add
mov
xor
sbb
mov
lock
sti
add
push
pop
sbb
xchg
pop
cmpsb
pop
insl
sub
loope
cmp
push
loope
dec
inc
cli
push
outsl
icebp
pop
sbb
decl
add
in
lcall
loopne
in
loope
lods
lods
and
ret
dec
xchg
or
xlat
add
and
adc
leave
xor
jle
mov
loope
shll
cmpsl
ret
subb
xor
or
push
mov
mov
aaa
loope
pop
cmpsl
xchg
sub
adc
shl
out
fisttps
rcll
inc
ja
inc
out
insb
push
sub
and
inc
sub
xchg
sbb
insl
ss
cmpsb
shlb
jmp
stos
sub
loope
dec
push
jg
jno
jp
jns
push
fisubl
dec
loope
cmp
aad
in
test
jp
push
ja
iret
int
inc
mov
idivl
xchg
jl
push
mov
add
loope
add
into
enter
mov
cmp
adc
xchg
loope
mov
mov
ret
loope
and
and
inc
mov
inc
in
loope
mov
jno
subps
mov
dec
js
inc
fidivrl
insl
add
test
and
mov
lahf
sbb
incl
int3
cwtl
inc
scas
gs
loope
sbb
daa
inc
push
ror
shlb
ja
sub
inc
push
sbb
push
pshufw
insl
inc
mov
cmc
sub
idivb
jp
shlb
dec
insl
mov
leave
push
dec
jmp
and
mov
pop
loope
movsb
mov
jne
pushf
xorl
out
xchg
cmc
sub
mov
imul
loope
mov
inc
push
stc
lea
lret
xor
movb
push
jnp
ret
lock
imul
lret
cltd
rclb
stos
sub
inc
in
mov
mov
adc
sbb
loope
dec
decl
sahf
in
loope
add
dec
ficoml
lock
loope
mov
push
pop
pop
nop
aaa
dec
pop
imul
daa
pop
in
movsb
movsb
pop
nop
fwait
sbb
lcall
pop
ljmp
idivb
test
adc
or
sbb
inc
loope
dec
xor
xchg
sti
fcoms
sub
jl
xchg
loope
ljmp
ds
mov
cltd
addl
or
mov
cli
cmpsb
fnsave
movsb
out
into
ret
gs
insb
mov
cmp
cmp
outsb
or
xor
dec
outsl
fbld
mov
testb
adc
and
jbe
pop
jge
leave
and
sahf
dec
mov
xchg
stos
xor
inc
mov
mov
pushf
push
insb
loope
out
push
int
lcall
outsb
pop
shrd
aas
add
dec
and
cmp
loop
or
mov
loope
mov
out
sub
sbb
clc
lret
sbb
and
loope
inc
ret
jbe
mov
out
jns
das
pop
cmc
xchg
clc
js
fisubrs
loope
cli
rcrl
bound
adc
sub
aad
add
and
stc
daa
and
jl
inc
pop
icebp
jge
mov
fsubrl
loope
call
je
lock
lock
jmp
pushf
sbb
inc
dec
stos
adc
dec
push
enterw
xor
mov
fwait
andl
sbb
shll
inc
sar
inc
dec
xchg
es
push
fwait
and
xchg
mov
test
mov
mov
add
cmp
movb
loope
inc
jp
dec
sub
gs
out
icebp
lcall
mov
jb
lahf
loope
dec
mov
dec
std
gs
rclb
or
test
mov
leave
mov
dec
jmp
pop
loope
xchg
mov
shl
add
int
cmc
lods
jmp
loope
test
mul
add
fstpt
lods
dec
aad
push
iret
xlat
shlb
jo
xchg
loop
dec
outsl
pop
rcll
inc
mov
call
repnz
or
in
pusha
push
arpl
loope
xor
subl
and
pop
xlat
mov
loope
outsl
jo
cmp
cmp
ret
mov
mov
push
jmp
sbb
loope
push
inc
pop
scas
enter
inc
fsts
cltd
sub
push
xchg
add
stos
inc
xchg
jecxz
mov
push
jmp
loope
cmp
aad
inc
outsb
iret
loope
orb
push
jnp
ja
sbb
into
mov
ret
int
lret
rcrl
lret
jnp
fmull
add
inc
pop
dec
mov
jo
jae
lcall
loope
push
mov
dec
loope
mov
xor
and
arpl
mov
push
ret
sarb
lahf
aaa
ljmp
lods
testl
into
push
cmp
sbb
in
aam
loope
mov
inc
mov
shrb
repnz
dec
dec
mov
insb
bound
mov
leave
xor
or
cld
cwtl
mov
xor
mov
mov
out
dec
shl
push
rcr
push
js
sbb
sti
inc
mov
pop
jns
or
mov
dec
je
ds
pusha
mov
enter
push
pop
push
loope
mov
leave
repnz
mov
mov
icebp
fidivs
lock
dec
cwtl
xchg
loope
popf
daa
pushf
sub
loope
or
and
insb
push
pop
loope
add
xchg
lods
frstor
add
mov
xor
clc
loope
pop
mov
loope
cli
shl
jl
xorl
int3
lret
jno
cs
xchg
pop
cmc
icebp
mov
mov
in
mov
into
pop
rorb
repz
ret
sbb
in
loope
pop
and
notb
loope
and
jno
sub
in
shl
jbe
mov
lock
jae
nop
jecxz
xor
stos
outsb
sub
and
lcall
mov
and
xchg
push
loope
xchg
in
fiadds
jnp
aas
or
test
pushf
out
loope
sbb
cld
jmp
sub
pop
jb
movsb
dec
fnstcw
push
xlat
and
or
js
mov
xchg
xchg
or
cld
roll
mov
jmp
xlat
stc
hlt
shrb
inc
lea
xchg
cs
jmp
pop
rcrb
or
mov
fisubrs
call
inc
mov
mov
adc
xchg
xor
in
and
clc
stos
pop
loopne
lahf
mov
push
loope
call
iret
popa
loope
cld
fwait
shlb
xlat
mov
lock
pop
out
fcompl
pop
aam
push
dec
or
sbb
mov
loop
mov
loope
lds
js
inc
test
fidivl
mov
cmpsl
sar
xchg
into
fldenv
loope
sahf
pop
insl
inc
push
pop
gs
jns
imul
jg
mov
cmp
cmp
xchg
ret
loope
and
and
addr16
loope
nop
lods
jge
inc
xchg
push
mov
add
aaa
push
dec
jg
cltd
push
mov
aam
js
in
jno
jmp
sbb
push
loope
mov
insl
push
fmull
out
cld
leave
outsl
mov
sub
push
mov
lds
jg
sbb
test
cmp
xchg
xor
out
and
nop
cli
aas
loope
inc
sti
inc
negl
loope
lcall
cmovnp
loope
loopne
push
cli
push
sbb
or
pop
inc
movb
cmp
jo
xchg
xchg
cli
jmp
cmp
fimuls
loope
icebp
fldl
mov
xor
pop
mov
clc
imul
push
dec
pop
xor
cmp
fisubl
daa
mov
mov
loope
in
sub
lock
daa
xchg
cli
jmp
adc
cmp
loop
or
loope
inc
gs
mov
add
aas
aad
fisubs
pop
cwtl
jecxz
mov
pop
mov
adc
mov
sub
xchg
xor
insb
loope
cs
iret
push
or
loope
leave
pop
and
movsb
jno
loope
jns
dec
subl
mov
loopne
in
leave
stc
aas
loop
sbb
loope
mov
lods
add
enter
and
inc
or
sbb
rcll
roll
xor
pop
sub
jne
rcl
ret
xlat
mov
xchg
push
cmp
clc
stc
fndisi(8087
es
scas
lret
sbb
ret
cmp
fs
push
shrb
sub
push
stc
mov
adc
data16
movsl
out
pop
dec
rclb
add
sti
movsb
push
dec
jmp
mov
cmp
cli
into
jge
call
mov
xchg
or
xorb
xchg
jmp
mov
push
sbb
loop
mov
out
jecxz,pn
jbe
loop
lds
mov
xor
sub
cltd
rcrl
hlt
lock
mov
loope
dec
mov
mov
mov
test
dec
add
lods
pusha
loope
cmp
or
xchg
xchg
sbb
clc
xchg
dec
hlt
cmpsb
adc
mov
pop
fnstenv
mov
iret
xor
ljmp
pop
mov
mov
dec
jg
inc
gs
adc
adc
loope
lahf
dec
or
inc
xchg
or
cli
lcall
add
cld
cmpsl
cltd
or
loope
mov
ja
adc
cmp
mov
popa
mul
pushf
jmp
jp
adc
in
loope
imul
int3
push
js
cltd
pop
mov
and
loope
into
out
sbb
enter
loope
and
or
xor
adc
sbb
push
push
cmp
jmp
mov
cmc
mov
test
and
sbb
add
loope
or
cmp
sub
jl
xchg
stc
gs
dec
jecxz
cmpsb
inc
data16
insl
mov
shrl
mov
xchg
and
std
push
xor
xchg
shr
shl
pusha
dec
nop
leave
and
fwait
jns
and
push
daa
add
add
std
lret
jg
faddl
xor
pop
cmp
subb
inc
enter
jge
repnz
jmp
movsb
fs
loope
mov
sahf
loope
jle
lcall
sbb
popa
adc
stos
and
mov
adc
jecxz
in
loope
xor
lds
jno
lea
ret
or
movsb
mov
and
sar
loop
sbb
dec
addr16
sbb
outsb
incl
ret
lock
loope
repnz
out
push
jb
push
and
mov
arpl
cmp
aas
push
sub
mov
loope
bound
sbb
push
imul
lods
rcrb
jb
mov
sub
clc
jp
mov
jmp
stc
dec
xchg
loope
in
push
daa
fsub
jle
insl
mov
imul
lret
jmp
loope
adc
je,pn
loope
add
cmp
out
addr16
or
or
mov
stos
xchg
push
daa
lea
std
fwait
outsb
outsl
xchg
orl
push
lds
pushf
xor
add
jmp
loope
and
mov
sub
push
cmc
scas
xchg
es
repz
mov
cmp
scas
jae
inc
push
rolb
xchg
subl
push
push
imulb
and
imul
xor
aad
divb
in
xchg
mov
lret
jmp
rorl
cmp
movsb
mov
dec
jne
das
stos
push
loope
imul
pop
cwtl
stc
les
mov
pop
lock
out
pop
aaa
out
sub
std
fcoml
xor
xchg
je
lahf
or
mov
cld
std
push
loope
dec
mov
out
test
incl
pop
jmp
add
cs
loope
cs
push
or
inc
leave
fnstcw
push
add
jmp
jnp
mov
in
dec
mov
mov
shrb
popf
dec
xchg
bound
mov
mov
loope
lret
and
mov
adc
or
push
cmc
mov
loope
cmp
fwait
loope
cmpb
push
xor
jp
loope
stos
daa
cld
cmp
lret
add
mov
loope
loopne
lret
xchg
cli
push
mov
mov
clc
lock
jmp
loope
gs
jecxz
jl
mov
pop
inc
pop
push
imul
mov
adcb
xor
adc
mov
stos
shlb
mov
gs
ret
stc
loope
lcall
loope
adc
lret
xchg
or
loope
stos
jle
xchg
pop
sbb
loope
push
xor
fstpt
and
cmp
push
outsl
cmp
insl
mov
adc
fstps
pop
scas
shlb
aam
add
arpl
push
sarb
mov
push
and
sub
addr16
in
inc
cmpsl
and
loope
xchg
xchg
test
cmpsb
lods
loope
dec
ja
sub
fs
mov
aas
push
push
imul
in
push
ja
aad
test
xchg
shlb
in
xchg
or
loope
cld
adc
dec
scas
add
std
cmp
loope
add
test
loope
mov
add
sbb
cwtl
rcrb
lcall
mov
in
cmp
mov
mov
xchg
or
stc
push
dec
mov
dec
fidivl
mov
sbb
mov
sub
jmp
rolb
js
nop
xchg
loopne
sub
loope
jp
clc
xchg
js
loope
daa
jmp
lods
loope
add
les
push
cmp
loope
xchg
mov
mov
loope
repnz
jmp
mov
enter
push
and
mov
popl
pop
pop
cmp
cmp
inc
loope
mov
mov
loope
or
add
lahf
push
inc
stc
aam
mov
and
loope
push
jbe
fs
and
shrl
popa
mov
popf
sub
aaa
cmc
push
xor
xchg
loope
push
loopne
hlt
jo
stos
loope
add
rorl
jo
adc
insl
ret
es
daa
push
inc
insb
loope
lcall
mov
mov
js
or
sub
xchg
stos
daa
jp
loopne
movsl
pop
jno
in
pop
sub
stos
mov
inc
loope
inc
push
or
jne
aaa
jle
rclb
inc
cli
or
test
shrb
cmp
add
loope
push
jb
or
shlb
loope
insl
mov
lock
aas
stos
jmp
imul
push
notl
jmp
xchg
out
lock
push
in
int
push
add
sub
leave
add
xrelease
aas
out
test
mov
push
cld
pop
test
in
and
out
decb
push
lods
pop
xor
cmpl
into
inc
pushf
xchg
lahf
xor
dec
cmpsb
loope
jp
dec
mov
mov
in
popf
jo
lods
sub
adc
push
sub
out
xchg
or
jecxz
add
fistpll
in
and
enter
push
in
pop
arpl
test
inc
loope
cmp
shlb
adc
push
push
in
xchg
mov
jle
pushf
adc
loope
call
insl
push
imul
fidivs
sbb
push
ljmp
xor
outsb
test
cmc
test
loope
mov
sub
lea
dec
in
inc
sti
sub
adc
aam
sbb
mov
imul
outsb
add
jle
idivb
popf
rcrb
xor
xchg
insb
mov
and
das
repz
clc
scas
mov
les
dec
dec
adc
mov
sub
test
xchg
sarb
stos
out
lock
push
fsubr
loope
mov
cltd
push
sbb
xor
loope
outsl
in
jge
popa
cmp
mov
dec
cli
mov
stc
dec
jo
lret
mov
shl
lret
test
fnsave
adc
iret
xchg
insl
ljmp
push
clc
sbb
loope
inc
xor
jae
xlat
push
dec
cs
outsl
jno
mov
or
ljmp
mov
int3
aas
jmp
fistps
cwtl
dec
or
das
pop
adc
shlb
loopne
mov
or
pop
mov
cs
lcall
je
fdivl
cld
loope
jmp
aad
iret
es
addr16
call
add
inc
add
movsb
sub
loope
bound
or
clc
mov
xchg
popf
push
xor
loope
neg
sbb
mov
add
jnp
loope
into
mov
inc
jl
sub
cli
cmp
jo
mov
out
add
adc
and
aad
pushl
sahf
mov
vpavgb
xchg
sub
iret
les
int
push
loope
repz
shlb
clc
mov
lods
or
std
and
jo
adc
outsb
or
gs
and
and
sbbl
imul
sub
popf
std
mov
ror
xor
int
loope
mov
add
aas
push
mov
subl
mov
mov
mov
mov
xchg
loop
loope
cltd
test
ret
mov
gs
pop
inc
adc
aam
mov
inc
icebp
ret
les
aaa
jp
psraw
rcrl
loope
jb
js
dec
push
test
mov
inc
into
imul
dec
jl
mov
leave
adc
mov
fsubrp
in
jmp
mov
insl
mov
push
and
jmp
lods
or
dec
insl
cmp
add
jmp
sbb
adc
mov
pop
loope
inc
fldenv
out
dec
push
add
lret
popf
fwait
js
ljmp
pop
ds
mov
loope
sarb
and
int3
loope
mov
add
dec
mov
jecxz
jl
mov
xchg
or
pop
jno
mov
insl
adc
ret
lcall
jl
mov
push
in
out
out
data16
loop,pt
loope
mov
mov
add
pop
decl
in
mov
push
popa
mov
jno
out
sbb
mov
push
sub
data16
xor
sbb
push
ret
cmp
jnp
subb
loope
jbe
and
outsb
in
mov
fcoml
inc
xchg
add
mov
xor
pop
loope
mov
cmp
pusha
or
jno
aaa
mov
sub
add
es
out
push
fisubrs
jge
jo
sub
loope
mov
inc
movsl
loope
ja
aaa
mov
mov
sbb
loope
out
in
push
dec
jne
shl
call
sbb
test
aas
repz
das
gs
jo
ret
mov
push
push
jp
test
adc
mov
push
shlb
xchg
int3
or
loope
ss
sub
and
jle
adc
pop
imul
movsl
xor
xor
push
inc
cwtl
sub
jl
outsb
or
mov
fucomp
daa
xchg
sbbb
mov
movsb
cmp
aam
xor
push
mov
mov
shll
loope
jns
dec
iret
cmp
loope
jne
xor
roll
orb
psubusb
loope
dec
testb
movsl
loope
inc
test
rcrb
sub
mov
pop
mov
loope
inc
orl
je
sub
jns
lock
inc
idivb
call
inc
lds
pop
out
repnz
cmp
movsl
mov
rolb
test
jmp
aas
out
js
fs
cwtl
popa
call
stos
lret
fcomp
push
scas
std
jo
lret
fwait
jmp
pop
loope
push
pop
jge
scas
jnp
loope
movsb
aam
in
sub
les
fsubs
sub
jnp
in
or
xor
jno
jecxz
or
into
inc
rorb
dec
add
adc
push
arpl
nop
xchg
cmp
fisttps
fldt
pop
jmp
shl
les
dec
sbb
xor
lcall
inc
loope
test
dec
fisubrs
adc
repnz
adc
add
and
out
rcrl
int3
sub
enter
xchg
mov
fs
loope
call
add
adcl
lock
loope
or
push
xor
out
loope
pop
add
fadds
aas
adc
mov
cld
rcrl
pop
pop
std
jns
jo
lea
pusha
and
jb
out
mov
cs
loope
push
and
inc
bound
lea
cmc
mov
xchg
jecxz
mov
gs
stos
jle
sub
push
mov
cmc
mov
jo
call
mov
ss
js
pusha
jp
mov
notl
inc
cmp
int
clc
rorb
jecxz
aad
lret
addb
cwtl
jmp
dec
daa
aaa
xchg
jecxz
dec
pop
and
jne
loope
or
cmp
jae
subl
cltd
sbb
shr
pop
rcll
mov
loop
and
clc
bound
ret
sub
push
imul
movsl
xor
add
xlat
stos
mul
jo
inc
cmp
cmp
pop
and
push
xchg
jg
lds
rclb
inc
cli
mov
push
test
inc
xor
mov
mov
xchg
dec
ja
loope
jb
push
push
xchg
prefetch
or
jo
and
rorl
decl
insl
jae
dec
sbb
loope
cli
ss
fisttps
mov
loop
push
loope
cld
mov
push
jo
and
shlb
cltd
jle
loope
cmp
mov
jge
bound
out
fs
loop
jl
aas
mov
gs
aas
mov
mov
call
push
sub
and
dec
pop
ret
fcmovnu
je
test
fsubrp
int
inc
cmc
sti
sbb
dec
loope
and
sbb
mov
mov
testb
jnp
or
in
mov
xor
loopne
insb
cmpsl
inc
mov
out
xchg
call
jnp
loope
jge
pusha
jmp
adc
pushf
ljmp
in
xor
xor
dec
sub
bound
dec
lock
sub
add
loope
and
test
adc
mov
xchg
es
mov
loope
xchg
nop
sarb
dec
cmpsb
loope
jg
push
or
loope
mov
popa
mov
xchg
cmp
dec
loope
ja
inc
jle
cli
mov
mov
rcrl
loope
movsw
movsb
andb
jbe
outsb
les
fcomps
xchg
sbb
loop
hlt
loope
xlat
mov
inc
push
lea
jo
loopne
cmp
shrl
adc
adc
add
shrb
test
jp
sub
xchg
push
call
in
or
pop
jae
jmp
aas
mov
xor
xchg
xor
and
inc
in
in
mov
cmp
ljmp
outsb
dec
loope
xor
rcl
and
cs
loope
pop
call
sub
in
fcomps
push
lret
inc
jmp
ljmp
and
xor
jo
push
xchg
mov
movsl
in
jmp
popa
fistpl
pop
loope
rcll
add
jmp
or
leave
loope
movsl
mov
decb
inc
loope
xor
ljmp
out
daa
sbbl
test
int3
imulb
js
mov
jo
lods
je
fs
jl
iret
mov
loope
lea
loope
int
lcall
ljmp
mov
loope
push
fisubrl
fadd
comiss
call
mov
dec
sbbl
scas
adc
sub
adc
xor
jecxz
in
out
mov
int3
mov
stos
ds
cwtl
or
dec
sbb
cmp
inc
fcompl
lret
push
pop
mov
mov
mov
clc
inc
pop
rclb
cwtl
inc
cmp
in
xor
in
cltd
ret
ret
adc
adcl
movsb
loope
bound
js
lea
loope
in
data16
cmp
mov
loope
int3
or
mov
mov
sub
cvtps2pd
push
call
insb
mov
adc
adc
sub
test
movsb
and
ja
loope
inc
imul
pop
inc
pop
loope
or
and
jmp
movzbl
scas
push
clc
bnd
mov
je
movsb
nop
sahf
and
repz
pop
and
adc
jmp
push
loope
xrelease
jge
loope
mov
das
lods
loope
lods
pop
jmp
and
mov
loope
inc
jne
xor
mov
fsub
aam
mov
loope
fs
cwtl
mov
jl
loopne
decl
mov
xchg
pusha
pop
xor
loope
out
xchg
sbb
sub
in
jmp
mov
mov
pop
mov
xor
jle
mov
mov
sbb
arpl
pop
mov
leave
loope
sbb
jne
loope
add
push
inc
mov
sub
inc
test
clc
xchg
add
rcrb
sbb
jp
lods
mov
add
icebp
jne
xchg
mov
jo
les
sub
adc
sar
mov
sub
fidivrl
mov
sub
daa
loope
lret
xchg
pop
rclb
shr
dec
call
fwait
pop
mov
dec
cld
add
loope
sbb
jmp
sbb
mov
repz
xor
push
loope
jno
nop
pop
add
lock
inc
push
out
mov
ljmp
loope
hlt
pop
in
scas
fucom
jp
bound
sub
pop
shl
xchg
xor
ficompl
ret
or
mov
xchg
jl
loope
xchg
idivl
and
pushf
pop
addr16
mov
and
push
adc
push
dec
loope
pop
inc
xlat
insb
dec
es
inc
into
rcl
push
jbe
std
andb
movsl
loope
adc
fadds
mov
lods
loope
mov
mov
loope
fimull
or
jb
loopne
les
adc
push
adc
adc
adc
cmpb
mov
in
mov
push
gs
pop
pop
mov
arpl
xor
ljmp
leave
mov
ret
addr16
mov
dec
cltd
add
imul
mov
xchg
loope
push
outsb
out
xchg
mov
xchg
mov
loope
insl
mov
pop
loope
push
lds
inc
negb
loope
adc
ja
ficomps
mov
cmpsb
sarl
fldl2t
xchg
ljmp
sub
lods
adc
fidivl
push
bound
sbb
mov
pusha
orb
xchg
ds
jge
imul
pop
pop
push
loope
js
shl
stc
push
pop
loope
or
mov
popf
and
shlb
mov
jmp
jo
mov
call
gs
int3
loope
mov
push
loope
inc
sbb
stc
fxch
or
jns
push
cli
movsl
or
cmc
pop
popf
sarb
sub
and
and
hlt
push
fwait
cmp
aam
push
sti
cs
orb
out
loope
fsubs
mov
loope
clc
sub
int3
in
shl
orl
lret
lret
clc
movsb
pop
mov
js
sbb
cmp
mov
jmp
xor
adc
mov
add
lahf
sub
loope
add
cmp
loope
mov
xlat
push
adc
outsl
cmp
add
xchg
out
add
rcl
fnstsw
xchg
aam
xor
lea
inc
mov
scas
sbb
add
cld
sub
push
pop
sbb
loope
ss
lret
push
xlat
shl
test
xor
in
arpl
fs
jns
adc
and
jmp
xor
sub
stc
adc
mov
push
loop
push
add
fimuls
jno
es
sub
xchg
sahf
lret
imul
loope
cmp
repz
imul
inc
movsl
fdivr
dec
mov
cli
stc
sub
stos
dec
mov
jmp
sub
jae
push
or
cmpsb
loope
sub
loope
repz
sbb
cmc
adc
loope
push
xchg
mov
in
mov
dec
mov
sub
jecxz
jecxz
mov
outsl
scas
pop
fcmove
out
adc
nop
aam
jne
xchg
jmp
adc
hlt
xor
mov
rcrb
in
mov
icebp
in
aas
inc
loope
shl
jb
jle
rol
aaa
addr16
orb
and
mov
insl
test
jmp
mov
clc
and
lret
jne
jg
jbe
sub
jmp
loop
bound
loope
aas
xor
mov
inc
and
inc
iret
cli
loopne
sbb
push
push
pop
fnstcw
or
popa
dec
or
aam
lcall
cs
mov
push
lock
add
jp
cmpsb
sub
and
pop
das
cmp
icebp
loope
inc
aad
pop
aas
push
cmpsl
mov
pushf
inc
cmpsl
and
mov
loope
dec
mov
sbb
sbb
test
fldcw
cmp
or
test
aaa
inc
hlt
in
outsb
inc
iret
loope
sub
ljmp
sub
mov
in
test
negb
add
movsb
mov
sti
sub
les
mov
mov
loope
int3
adc
add
jne
in
mov
movsl
and
movsb
sbb
cmpsb
pop
mov
and
sub
rorb
subl
loope
add
mov
pop
cs
rcll
int3
push
cmpsl
push
out
loop
add
xchg
cmp
test
add
fwait
add
sub
sbb
enter
push
mov
mov
in
mov
daa
add
aam
jle
arpl
movsb
or
sub
cmp
sbb
cltd
push
and
test
scas
xor
aam
test
mov
inc
mov
loope
and
push
sbb
push
push
jns
repz
mov
add
and
pop
in
xor
sbb
and
test
ljmp
scas
push
mov
loopne,pt
jmp
mov
cs
cmpsl
lcall
fucom
mov
cmp
js
inc
lret
cltd
leave
js
ret
jmp
fsts
rorl
dec
test
in
sbb
js
out
pop
xor
inc
jecxz
adc
in
lock
sbb
loope
pushf
dec
je
vaddsubps
insl
mov
popa
mov
into
mov
cs
aaa
cmpsb
ja
mov
pop
dec
in
mul
push
popf
mov
add
inc
pop
ror
hlt
movsl
out
pop
shr
cmp
sub
mov
push
cltd
jbe
ds
lock
or
pop
movsb
in
jmp
std
or
pop
dec
add
popa
sbb
jae
stc
pop
mov
mov
xchg
in
or
adc
pop
and
dec
sub
std
lahf
inc
or
push
xchg
ret
jmp
je
dec
lds
lea
dec
out
push
jecxz
lods
movsl
and
std
pop
push
mov
loope
jle
jge
test
xchg
and
fildll
mov
and
fisubs
xchg
jbe
push
movsl
add
xchg
movsb
fucom
negb
jns
jno
enter
inc
lret
loope
jne
mov
add
pop
in
sub
flds
enter
les
fimull
mov
loope
lock
inc
cmp
aad
xor
sbb
lahf
jmp
loope
imul
test
mov
sbb
aas
enter
xor
loope
jecxz
fisubs
fcompl
dec
push
or
mov
mov
dec
mov
pop
js
and
loope
int
stos
add
lods
adc
imul
repnz
insb
mov
push
shlb
mov
test
xor
adc
ja
push
inc
loope
fcmovnu
gs
dec
cmc
xchg
add
sub
out
dec
mov
mov
and
idivl
enter
adc
out
or
ret
iret
xchg
add
movsb
loope
sub
jg
push
je
mov
fsubrs
and
shrb
xchg
jo
imul
loope
cli
xor
sub
dec
push
loope
jl
mov
insl
sti
cmp
mov
call
loope
js
mov
fnstcw
loope
pop
or
cwtl
sarb
nop
pushf
ds
loope
inc
dec
push
fucomp
xchg
in
jb
inc
dec
loopne
and
add
loope
sti
dec
out
jp,pn
push
aad
ficoms
outsb
xchg
add
jge
jmp
jno
loope
cli
inc
popa
mov
mov
sbb
les
add
mov
mov
out
pop
push
lods
and
mov
pop
cmpsl
lods
mov
jecxz
sbb
int3
push
inc
add
cmpsb
loope
jg
push
jmp
xor
loope
xchg
dec
loope
xor
mov
loope
daa
jl
add
xlat
jno
cs
mov
mov
mul
clc
dec
mov
loope
cmpsb
or
in
dec
icebp
shlb
mov
inc
add
adc
inc
sbb
jbe
loope
push
icebp
ret
sbb
dec
jmp
mov
xor
push
arpl
jo
nop
in
adc
xor
dec
scas
and
xlat
mov
jp
add
add
fwait
andl
dec
inc
vpaddusw
ret
sub
xor
fbld
xor
loope
hlt
add
mov
int
sub
inc
das
cli
pop
in
dec
loopne
in
clc
cmpsb
popf
cmovnp
outsb
and
push
int
adc
hlt
insl
and
or
clc
aad
loope
mov
push
inc
add
adc
mov
sub
loope
loopne
lock
out
fsub
scas
mov
xchg
mov
cld
mov
mov
xor
add
loope
fnstsw
and
adc
popa
push
sub
push
loope
ss
add
or
loope
mov
mov
loope
pushf
mov
xchg
or
xchg
cwtl
das
gs
repz
jmp
xlat
rcr
in
cmp
jmp
loope
add
xor
lcall
xor
pop
loope
lea
xor
lahf
cli
or
mov
mov
loope
lret
insl
cli
lods
dec
loope
push
call
lds
loope
fstl
ja
popa
mov
cmpsl
pusha
divl
add
into
mov
js
add
repz
or
das
ja
push
pushf
mov
es
jp
in
xor
loope
aam
mov
movsl
xchg
sbb
push
fsubp
fstl
adc
clc
mov
imul
movsl
loope
fwait
incb
jmp
and
cli
pop
or
and
out
loope
add
mov
icebp
mov
mov
jno
rclb
mov
push
and
mov
jmp
adc
ljmp
loop
xchg
loope
dec
arpl
adc
pop
sub
dec
lock
mov
loope
adc
dec
aas
pushl
pop
js
push
std
loop
sbb
ss
xor
movsb
scas
sbb
dec
adc
sti
pop
fst
push
inc
adc
and
sub
mov
push
sbb
imull
lods
loope
lahf
dec
movsb
mov
fdivs
loope
in
sbb
mov
loope
jle
and
mov
xchg
test
int3
lret
cmpsl
loope
or
pop
push
addr16
fwait
shlb
lods
icebp
jmp
outsl
mov
inc
cltd
mov
or
push
sub
and
adc
imul
jb
and
rclb
cmp
jp
call
inc
cmp
pop
xchg
pop
popa
inc
lods
loope
pop
pop
aaa
and
mov
sub
add
mov
mov
int3
in
xchg
xchg
cld
loope
lahf
adc
rclb
in
mov
jo
and
mov
testb
pop
rorb
das
fisubl
loope
es
dec
popa
sbb
loope
xor
xchg
mov
ror
jmp
mov
cmp
add
int3
cld
jecxz
fiadds
in
or
or
push
add
cli
cld
out
xchg
loope
mov
sti
sahf
add
imul
xlat
dec
cmp
cltd
add
push
addr16
push
loope
add
adc
mov
daa
and
inc
loope
addr16
xchg
or
sub
push
sahf
mov
iret
ret
hlt
dec
jg
rorb
out
bound
call
mov
and
iret
cmp
pop
unpckhps
and
mov
or
and
mov
add
loope
leave
lcall
mov
xor
inc
push
cmp
loope
mov
dec
push
nop
sub
xor
loop
adc
std
dec
fucom
or
and
jmp
lret
out
loope
dec
scas
ficoml
pop
jo
shrl
cli
test
or
xlat
sub
loope
insb
push
jno
cmp
loope
fimull
into
loope
xchg
popf
add
pop
fiadds
nop
push
mov
xor
test
fildll
in
dec
or
scas
in
fbstp
xor
sbb
sbb
or
jmp
mov
loope
fs
orl
in
rcrb
xor
sbb
push
lcall
loope
iret
in
shl
sub
loopne
aad
fcoms
sub
sti
loope
in
ds
push
pop
mov
and
aad
int
adc
fildll
clc
in
jne
or
xor
inc
in
repz
ficoms
enter
pop
in
pop
lret
jl
out
jle
push
inc
ja
mov
loope
and
jb
mov
data16
mov
cmpsb
pop
test
pusha
insl
arpl
jb
shlb
sbbb
test
addl
and
xor
in
jne
cwtl
pushf
or
shll
fs
adc
xlat
ss
sbb
pop
mov
fwait
stc
add
sarb
mov
xchg
popa
add
pop
lods
push
movsl
pop
out
pop
into
add
jne
xor
mov
xlat
mov
rorl
js
imul
arpl
iret
bound
push
add
popa
adc
out
aaa
jo
sbb
jp
xor
xor
push
mul
xchg
mov
fmull
loope
stc
daa
nop
into
mov
add
fnsetpm(287
mov
mov
lcall
loope
jle
pusha
cmc
out
jnp
setl
xor
jmp
cltd
mov
jo
ret
aaa
orb
or
sub
aad
adc
xchg
dec
jmp
ror
loope
fcoms
aas
loope
xor
inc
icebp
xor
sub
loope
dec
pop
sbb
les
loope
mov
xlat
mov
imul
pop
inc
jge
push
arpl
dec
loope
push
jb
jle
mov
loope
fld
jmp
loope
adc
arpl
jne
loope
sub
xchg
dec
lret
add
pop
xchg
cmpsl
jmp
lea
and
xor
fistpll
push
push
loope
mov
test
loopne
icebp
sarb
xor
ljmp
add
cmp
mov
or
cld
sti
push
call
enter
repnz
jns
mov
ret
and
ret
test
fnsave
push
loope
and
mov
rclb
aad
in
in
rcl
loope
arpl
stc
fcomi
push
sbb
loope
or
mov
pushf
dec
shrb
ss
cld
das
inc
ljmp
xlat
scas
cli
cmc
jne
inc
push
sti
xchg
and
out
cld
add
xor
pop
dec
lods
fcom
and
shr
out
sbb
pop
in
xor
add
fcompl
and
and
fsubs
stc
jmp
mov
cld
lock
sub
jmp
orb
push
out
mov
sbb
or
and
pop
lds
jae
xchg
push
mov
loope
xchg
imul
add
fabs
sub
pop
mov
mov
dec
xlat
xchg
mov
mov
push
test
mov
xchg
pop
mov
aad
loope
insl
add
rcrb
push
mov
push
add
pop
test
outsl
sub
es
aaa
jno
or
out
loope
jae
fldpi
pop
cwtl
loope
cmp
clc
xchg
stc
jnp
andb
push
into
lea
fiadds
mov
xchg
sbb
adc
int3
xor
fdivr
cltd
gs
cmc
mov
pop
jbe
and
iret
jge
in
lcall
or
and
xor
and
mov
mov
cmpsl
xchg
das
mov
sbb
ljmp
mov
movsb
loope
aad
xchg
jns
popa
aaa
loope
iret
insb
dec
sbb
or
cs
push
or
out
rolb
icebp
lea
movsb
inc
mov
xor
out
mov
lea
loope
outsl
bsr
scas
jae
add
cmpsb
jcxz
ljmp
loope
mov
xor
imul
test
orl
jns
mov
dec
pop
push
loope
lods
int3
das
nop
fucomip
sahf
sub
mov
xor
repnz
jmp
ret
pushf
shl
ljmp
sti
aad
cmc
dec
iret
mov
addr16
fucom
andl
jbe,pn
add
jmp
fbld
sbb
das
xchg
sbb
divb
push
mov
lret
jecxz
outsl
pusha
out
mov
mov
mov
mov
jo
mov
shlb
les
lret
dec
dec
cmpsb
cwtd
and
loope
sarb
add
pop
sbb
adc
bound
mov
cmp
in
daa
cmp
add
sbb
pusha
js
loope
mov
xor
mov
mov
dec
loope
pop
inc
aaa
dec
and
stos
stos
ja
arpl
ret
jmp
dec
imul
xor
aad
in
add
xor
loope
clc
xlat
mov
loope
mov
dec
imul
or
xchg
add
arpl
je
mov
jno
jmp
ficoml
adc
loope
es
ds
dec
mov
aas
test
sbb
imul
leave
add
test
bound
fucom
push
mov
ja
cltd
imul
sbb
mov
in
mov
std
jmp
jmp
stos
add
push
pop
push
adc
jg
cs
js
pop
pop
dec
loope
fistps
sti
loope
mov
lret
jbe
into
add
loope
xchg
fcomps
jae
adc
jl
loope
lahf
push
bound
push
loope
imul
addr16
rorb
aad
sub
push
je
fimull
loope
fwait
mov
mov
pop
movsl
push
push
jmp
insb
jo
push
cld
mov
arpl
loope
out
adc
add
ljmp
idiv
and
loope
lret
outsb
cld
xchg
iret
and
xorb
scas
pop
cmp
dec
fsub
cld
data16
add
sbb
jo
jne
ja
jg
fistps
mull
jle
or
pop
mov
xchg
sahf
loope
push
lods
out
xchg
pusha
loope
pop
lods
lea
add
dec
insl
inc
sbb
mov
cmp
shlb
dec
sbb
cli
ljmp
jo
and
cwtl
sub
sub
dec
fsubr
or
imul
mov
add
adc
dec
mov
ds
orl
pop
repnz
dec
dec
sub
mov
or
push
sub
loope
sti
jle
aam
mov
lds
jns
loope
fldt
jle
lock
popf
and
es
loope
loop
fmul
imul
out
jmp
dec
sub
addb
jge
mov
pop
fldl
outsw
nop
leave
jmp
sbb
loope
mov
jb
loope
cltd
push
stc
mov
xchg
mov
cli
iret
loope
outsb
xchg
inc
jb
jo
fwait
add
loopne
push
aas
jns
fildl
mov
mov
out
movq
loope
nop
cmc
popf
sbb
push
loope
mov
xor
or
inc
aad
cmpsb
and
fucomp
push
loope
sbb
clc
jo
mov
jle
scas
test
mov
out
cmp
add
ljmp
cmp
js
stc
xchg
loope
rcll
dec
cmp
div
jmp
cs
loope
test
jecxz
sub
jae
cmp
out
and
and
lock
sub
stos
rolb
jns
fwait
add
fldt
loope
mov
or
imul
sub
andb
outsb
add
cmc
pop
add
jg
sub
mov
inc
pop
jae
cmc
pop
loope
adc
sub
les
sub
cmpsb
fwait
sahf
loope
cld
mov
aaa
loope
mov
sbbl
xchg
push
xor
fadd
mov
cltd
stc
jns
mov
fsubp
les
testb
jae
test
push
jge
negb
bound
add
and
mov
loope
xchg
adc
sub
sub
mov
cmp
loope
dec
sub
add
mov
sub
std
mov
cmp
dec
jbe
adc
inc
jo
inc
xchg
loope
cmp
push
aas
push
push
ds
aaa
fidivs
jle
add
adc
sub
gs
dec
inc
loopne
sbb
sub
loope
or
or
les
ljmp
enter
sub
fstpl
mov
or
pushf
jge
call
cmpb
call
testl
enter
add
gs
push
and
or
push
jmp
sub
popa
xor
orl
fwait
mov
sbb
addr16
jmp
das
jmp
int
fnstsw
mov
fildl
shrb
vcvtsd2si
mov
jo
in
push
out
xlat
xor
into
addr16
jecxz
mov
pop
pop
add
and
cmc
mov
pushl
adc
mov
cmpsb
adc
mov
push
leave
jecxz
pop
push
loope
in
in
add
int
push
mov
mov
push
iret
pop
jbe
mov
inc
shlb
or
mov
loop
aas
jo
push
andl
arpl
jmp
mov
add
and
in
mov
cmp
fs
das
jo
mov
gs
sahf
pop
mov
pop
xchg
or
sbb
cltd
adc
pop
pusha
loope
dec
fcoms
repz
loope
insl
adc
loope
gs
cmc
movsb
cmp
mov
cwtl
sbbb
fs
add
inc
fbld
imul
ret
lret
pop
insl
jae
shlb
test
in
jmp
loope
les
cmpsl
shl
lcall
jns
pop
or
dec
add
loopne
shl
ss
jl
loope
jo
out
jmp
push
loope
inc
adc
xchg
sbb
xor
dec
movsl
xchg
jmp
push
cwtl
add
addr16
or
mov
loope
mov
or
loope
jmp
and
push
call
xor
ljmp
xchg
lock
inc
xlat
lock
in
loop
dec
cmp
mov
pop
jmp
loope
inc
cwtl
pop
imul
jb
lods
and
mov
cmp
jmp
mov
fxam
mov
sbb
inc
mov
scas
sti
lods
push
xor
and
andl
outsl
mov
xor
jl
loop
test
scas
inc
pop
push
aam
cld
xchg
add
add
fildl
repz
addr16
test
cmp
loope
hlt
outsl
or
sub
ja
inc
insl
sbb
dec
mov
xchg
push
testl
jno
lret
push
rolb
ja
clc
sub
mov
loope
push
out
mov
loope
mov
lahf
and
adc
scas
clc
das
pop
sbb
adc
leave
loope
jle
stos
push
test
daa
loope
push
xor
sbb
js
loope
cmp
mov
loope
adc
jns
loope
std
or
loope
fwait
test
mov
insb
xchg
loope
fs
xlat
and
imul
enter
stos
sahf
in
jae
push
cmp
test
jns
rcrb
arpl
xor
sub
repnz
test
pop
pop
xchg
cmpb
out
xchg
add
movsb
xorl
fs
cmp
adc
mov
loope
int3
jo
push
popf
adc
rclb
insl
cmp
mov
loope
dec
lahf
jp
mov
loope
add
subb
ja
dec
push
or
rorl
lods
dec
mov
popf
loopne
xchg
cltd
adc
into
loope
lds
loope
add
mov
cmp
jg
hlt
mov
js
insb
cmp
xchg
pop
xor
cmp
xor
mov
test
and
lret
push
pop
mov
mov
lret
xor
push
jecxz
sub
popf
inc
and
stos
inc
orb
cmp
into
mov
dec
dec
loope
cmp
jmp
push
adc
add
loope
sarl
xor
push
test
mov
loope
outsl
sbb
add
imul
mov
aad
loope
pushf
mov
ret
rorb
pop
gs
lret
leave
shl
lea
ljmp
adc
mov
es
xchg
negb
loope
fdiv
adc
or
rorb
lahf
loope
xorl
jo
pop
adc
xor
stc
lret
mov
mov
fstl
shrl
loope
ret
inc
scas
jo
loope
subl
mov
jl
imul
jno
sbb
push
sub
es
cmc
loope
lods
cmp
roll
cltd
repnz
push
dec
movsw
daa
push
add
xor
jns
and
lock
cmp
es
lock
out
fmul
clc
mul
sub
cli
sbb
insl
mov
pop
insb
push
loope
mov
add
imul
in
mov
xor
sbb
insl
push
aaa
lock
pop
jne
pop
ror
xor
jecxz
shl
push
add
loope
ja
out
xchg
adc
sar
pop
incl
iret
jmp
fwait
jmp
je
loope
out
pop
mov
stos
xor
add
dec
in
and
push
xchg
xor
div
outsl
dec
jns
icebp
mov
fsubp
scas
lahf
out
loopne
and
xor
push
or
adc
aam
sub
repz
in
in
adc
and
arpl
lcall
push
add
sbb
mul
push
ja
sub
loope
jbe
cmp
in
xchg
insb
sbb
decb
scas
jne
loope
rcr
sub
imul
test
push
inc
add
jns
and
fwait
lea
rorl
std
cli
add
sbb
dec
nop
inc
out
movsb
cmp
lea
and
dec
loope
pop
inc
push
rcr
xchg
and
push
loope
adc
push
mov
fnstcw
pop
loope
xchg
jno
mov
xor
xchg
cwtl
je
jmp
add
mov
and
dec
inc
push
xchg
jns
ljmp
pusha
loope
jg
lret
jno
cs
pop
add
pushf
inc
pop
sub
enter
dec
mov
lea
insl
cld
pop
gs
fistps
push
and
popf
loope
mov
shll
mov
and
adc
pop
push
repnz
dec
testb
inc
nop
jmp
sub
jo
outsl
jns
into
jmp
rol
subb
outsb
inc
bound
bound
je
nop
loope
cmp
push
pop
jg
lcall
imul
push
int
mov
sbb
and
loope
add
adc
insb
inc
std
mov
shll
mov
lods
xor
fcmovu
ja
cmpsb
nop
adc
add
shlb
out
movsb
cmp
loope
out
outsl
mov
push
jmp
sub
dec
loope
and
gs
xchg
loope
dec
sbb
xchg
mov
lcall
mov
loopne
loope
in
out
loope
adc
lods
ja
sbb
mov
pop
cs
lcall
xchg
loope
adc
into
loope
rorl
jns
dec
call
imulb
jo
loope
stc
push
lahf
inc
shrl
add
xlat
stos
jmp
jp
aaa
out
je
push
or
and
dec
insb
pop
test
ret
sub
xlat
loope
inc
test
andl
inc
push
out
in
mov
adc
adc
leave
xor
in
data16
inc
aas
enter
in
push
fsub
addr16
inc
add
mov
mov
in
sti
add
xchg
arpl
dec
ljmp
imul
loope
adc
rol
mov
nop
mov
add
loope
call
sahf
add
je
outsl
cmp
adcb
fdivrs
pop
loope
sub
dec
inc
jo
adc
jae
and
ret
mov
or
insl
sbb
int
loope
movsl
in
cmp
imul
loope
inc
stc
aas
add
add
jno
cmp
push
lods
adc
shl
mov
lret
popa
in
jns
loope
or
add
loope
pop
mov
cmpsb
push
push
lods
fists
inc
stos
call
mov
xchg
test
jmp
lods
cmp
cwtl
mov
jae
mov
loope
cmp
shrb
sbb
fwait
loope
push
pop
xchg
repz
leave
inc
loope
pop
dec
xchg
add
sub
jecxz
jae
mov
cmp
int
push
xchg
icebp
mov
nop
lods
inc
mov
gs
leave
pop
test
ljmp
pusha
loope
jg
xchg
cmp
loope
enter
xor
inc
push
and
xor
xor
in
std
sbb
loope
jecxz
add
adc
gs
push
in
incb
inc
xor
out
cld
leave
xchg
inc
cli
mov
loope
push
aad
in
pop
imul
jns
xchg
ljmp
stos
lret
decl
cmp
jo
cld
add
mov
sbb
test
lcall
inc
dec
loope
lcall
xchg
mov
pop
loope
xor
jo
les
push
mov
mov
jecxz
stos
loope
add
insb
jp
rcrb
lahf
inc
or
aam
push
adc
push
xchg
mov
jmp
mov
mov
cmpsb
mov
jecxz
lods
fnsave
cmc
add
daa
outsl
popa
in
push
dec
loope
sti
inc
and
cmp
or
jns
call
loope
push
mov
jno
fndisi(8087
cwtl
rcrl
out
ret
addb
and
xor
mov
mov
sub
scas
or
pop
ret
fucom
or
lock
fisttps
mov
test
pop
mov
loope
lods
test
insl
jge
loope
fldenv
mov
pop
mov
leave
sub
add
fbld
sbb
and
cmpsl
dec
adc
loope
cld
les
sub
or
lret
fs
push
aas
inc
aaa
dec
mov
in
sub
add
push
sti
inc
std
test
stc
pop
jo
lret
cmp
mov
cs
loop
mov
outsl
sub
push
in
outsl
add
loope
mov
jl
nop
mov
imul
rorb
in
and
push
pop
jl
ret
aas
shl
in
mov
cli
loope
lret
cs
ljmp
pop
loopne
push
or
lock
xlat
cmpl
jns
scas
rcrb
jae
jno
lret
inc
cmpsb
xchg
jecxz
loope
bswap
mov
add
hlt
in
jmp
cmp
loope
jge
mov
loope
mov
cmp
loope
cltd
outsl
jne
cli
cmp
gs
es
loope
adcl
ss
cmp
shl
adc
or
loope
mov
stc
mov
jbe
mov
sub
mov
mov
mov
mov
mov
mov
and
out
mov
fadd
es
rol
movsl
mov
loopne
loop,pt
out
loope
int
sbb
inc
mov
lahf
jmp
jecxz
sar
sub
xchg
fmul
arpl
pop
loope
mov
xor
sbb
and
mov
js
jbe
lea
shrl
loope
fldl
and
das
sar
clc
nop
dec
in
stos
ss
cmovb
dec
or
mov
lret
cltd
jo
sbb
loope
adc
nopl
pop
adc
sti
pop
jmp
lds
out
loope
leave
int3
push
aam
and
cltd
sub
jecxz
nop
mov
mov
xor
nop
add
jb
loope
lds
loop
loope
jmp
and
jns
sub
xchg
daa
jg
subb
push
xor
loope
fnstsw
jb
bound
inc
mov
pop
loope
push
js
dec
adc
sub
fcomps
and
jne
out
and
push
mov
roll
dec
jg
mov
aaa
pop
jg
loope
mov
or
and
mov
sbb
loope
xchg
jmp
adc
js
sub
shll
fsub
stc
dec
xchg
scas
mov
xorl
aas
inc
shrb
lcall
clc
loope
push
jp
push
in
enter
cltd
pop
lret
dec
ret
push
jo
idivl
mov
lock
push
push
sbb
mov
push
test
mov
imul
jecxz
stos
loope
loop
mov
fistl
loope
inc
or
shrl
cmp
loope
lods
shr
adc
ds
mov
inc
loope
lahf
daa
negb
loope
pop
cltd
cwtl
imul
dec
test
sub
jbe
xchg
dec
mov
cmp
loope
or
notl
mov
jp
mov
imul
and
cli
push
inc
js
ds
pop
pop
xor
in
movsl
fsubp
push
loopne
sub
xorl
fadd
popf
push
int3
loope
test
iret
mov
push
add
fbstp
sub
rcrl
push
inc
sbb
loope
fidivrs
das
loope
push
jno
sbb
pushf
loope
cwtl
sti
jecxz
xor
push
push
dec
sub
jmp
out
mov
and
and
repz
push
mov
outsb
xor
adc
arpl
push
out
lods
shl
push
add
scas
les
in
fucomi
fadds
jg
inc
repnz
vmread
loope
jo
jmp
loope
pop
iret
pop
adc
jns
loope
adc
inc
in
sub
fndisi(8087
hlt
lret
cmp
xchg
xchg
loope
inc
dec
fcomps
mov
repz
jo
imul
adc
xchg
xchg
clc
cmc
test
add
sbb
cmp
or
or
loope
push
push
xchg
scas
loope
cwtl
mulb
pusha
test
shr
jecxz
lret
psraw
sti
mov
rcll
xchg
jne
xchg
int3
mov
ljmp
aam
or
in
lret
mov
andl
sbb
ds
loope
dec
jb
mov
jo
int3
add
add
call
lea
jp
cmp
mov
repz
in
call
loope
in
pop
lods
in
sub
loope
jecxz
xor
fmuls
mov
or
call
cli
mov
mov
push
mov
push
ss
out
or
cmpsb
push
loope
sub
in
cmp
scas
loope
jmp
std
jns
add
mov
xor
out
popa
push
add
loope
in
dec
daa
lret
mov
loope
mov
mov
sbb
test
sbb
xor
dec
jne
aaa
xor
adc
push
shr
pop
sbb
jecxz
fnstenv
into
jp
nop
cmc
shl
lds
cmpsl
pop
pusha
or
adc
div
sub
loope
sti
lahf
pop
and
pusha
loopne
sub
ret
jnp
outsl
xchg
sub
out
int3
push
inc
je
inc
or
cmp
lret
loope
bound
mov
xchg
lds
test
out
cmp
imul
stos
jmp
pop
pop
lcall
push
in
loope
mov
nop
pushf
mov
lcall
shrb
inc
jno
in
inc
jne
loope
and
adc
loope
jae
out
mov
sbb
sub
loope
push
xor
inc
mov
scas
inc
mov
int3
push
ret
enter
sti
mov
inc
push
bound
loope
outsl
loopne
nop
fidivl
pop
jmp
xchg
dec
inc
fstpt
outsl
jns
xor
clc
adc
mov
insl
xor
std
push
loope
das
add
mov
dec
insl
loope
into
jnp
stos
adc
not
inc
enter
sub
mov
mov
addr16
stos
out
jl
add
or
popa
xor
xchg
jp
sarb
loope
mull
stc
mov
sbb
fs
les
daa
jecxz
fstl
pop
push
push
ret
div
shlb
popa
mov
stos
loope
fmull
push
loope
xor
dec
or
add
js
lea
jns
fldl
aas
jbe
leave
loope
dec
mov
sub
decb
mov
mov
jo
insb
jmp
dec
cmp
push
pop
ljmp
out
rorb
mov
fimull
nop
out
stos
jg
shr
sbb
dec
call
lock
andl
inc
push
aaa
pop
sub
lar
nop
repz
adc
adc
jne
loope
sub
insl
add
mov
xlat
inc
sbb
sbb
xor
pop
gs
imul
bound
inc
dec
xchg
lret
sbb
loope,pt
xor
or
mov
stos
xchg
data16
loope
orl
repnz
mov
fimull
jmp
lods
inc
fs
lahf
mov
mov
nop
ljmp
xchg
add
xor
cmp
push
ljmp
repz
loope
pop
jb
movsb
loop
and
loope
mov
ljmp
loope
mov
push
clc
xor
cmpsb
mov
dec
lfs
fsubrp
shl
aaa
les
add
pop
loope
dec
xor
sarb
loope
scas
movzwl
out
pop
jmp
pop
loope
cmp
mov
pop
or
test
aam
in
gs
jbe
cmc
loope
add
fdivl
xor
push
test
and
data16
loope
fidivrl
loope
insb
dec
in
arpl
xor
out
cmp
push
pop
mov
icebp
dec
add
divl
pop
out
mov
jmp
adc
loop
xor
mov
cmpsl
lods
arpl
jb
mov
sub
inc
cmpsb
adc
mov
mov
xor
mov
movsb
mov
sar
loope
ret
ljmp
xor
cmp
lea
jecxz
int3
popf
enter
shlb
loope
mov
and
les
fdivl
fisubl
xchg
fmuls
dec
cmc
sarb
push
sahf
and
js
dec
loope
push
jb
lds
dec
loope
and
xchg
sub
inc
arpl
mov
jns
cs
popf
les
xchg
jnp
sti
jo
and
in
cmp
lods
pop
mov
jmp
cmp
arpl
data16
nop
mov
mov
jmp
sub
push
sub
out
cmp
and
lcall
hlt
lcall
cli
adc
loope
cmp
mov
mov
loope
aaa
fistpl
ret
repz
loope
pop
fldl
cmpsl
notl
jg
mov
sbbb
decl
popa
shlb
mov
in
mov
add
push
mov
ucomiss
sbb
dec
fadds
mov
pop
ljmp
cli
lock
enter
movsl
loope
icebp
repz
out
inc
sbb
dec
mov
addr16
mov
loope
daa
push
cmp
mov
call
das
loope
adc
aam
mov
sahf
cwtl
jmp
mov
loope
call
insw
sbb
jecxz
mov
insb
dec
jle
sbb
loope
xchg
clc
cmpsb
imul
ficomps
test
cld
stos
mov
mov
adc
loope
psllq
jo
jae
or
lea
into
loope
imul
jo
xchg
jmp
inc
inc
adc
jge
in
insb
xlat
leave
in
or
std
and
pop
loope
mov
shll
jb
stos
loope
lea
lock
mov
dec
adcb
gs
loope
fdivp
add
test
push
movsb
lods
loope
dec
xchg
and
sbb
jns
mov
jecxz
loope
xchg
mov
mov
jb
mov
inc
lret
loope
pop
cld
cltd
mov
das
or
sub
inc
pushf
xchg
jle
nop
push
and
lret
push
dec
xchg
sub
outsb
cmc
out
jae
inc
aaa
mov
sub
xchg
ret
gs
push
jo
test
lret
mov
pop
mov
dec
adc
dec
push
loope
lcall
and
xchg
push
rcl
cli
loope
sub
loope
push
jl
mov
sbb
loope
iret
push
idivb
mov
sub
popa
xchg
loope
xchg
jno
push
arpl
lret
out
and
mov
aaa
mov
cmpsl
mov
or
and
mov
mov
test
pushf
jp
cltd
repz
or
pop
mov
pop
push
iret
sub
mov
lods
clc
jnp
pop
in
sbb
sbbl
add
aas
test
add
incl
mov
cmc
js
aam
jmp
loope
mov
pop
les
pusha
insb
loope
int3
fidivrl
loope
addr16
ja
mov
mov
jns
add
cmc
loope
imull
pushf
iret
mulb
scas
or
mov
mov
inc
fs
pop
cmp
dec
movsb
pop
jo
cs
jmp
push
rorb
mov
in
out
mov
sub
and
cwtl
mov
fs
push
dec
repnz
inc
cld
push
pop
call
mov
dec
hlt
sub
loopne
rcrl
jp
mov
loope
mov
out
outsl
repz
call
shlb
jl
incb
pop
in
jmp
cwtl
int
cmp
nop
dec
stc
mov
adc
loope
mov
das
jge
rcr
or
and
lahf
mov
in
imul
pop
repz
in
loope
inc
lock
xor
popa
or
out
jp
leave
sub
dec
loope
jbe
push
lock
add
jmp
pop
clc
fndisi(8087
ljmp
push
cmp
lret
mov
loope
popa
lcall
adc
push
sti
mov
push
test
mov
jno
outsl
je
inc
push
clc
je
mov
mov
addr16
loope
lods
and
dec
cs
xor
popf
push
cmp
sub
clc
mov
rcrb
xor
mov
sbbb
xor
faddl
jecxz
loop
dec
push
mov
and
std
imul
pop
xchg
into
loope
sub
cwtl
push
or
add
xorb
pusha
lret
pop
popa
sarb
in
ljmp
repz
cmpsl
mov
das
ljmp
repnz
push
addr16
arpl
vpsraw
ffreep
cmp
cmp
mov
xchg
fisubs
jecxz
call
hlt
mov
jae
inc
js
mov
loope
xchg
jle
cld
dec
imul
dec
lock
push
xchg
outsl
lret
jo
push
add
push
les
test
inc
movsl
cmc
add
stos
popf
hlt
popa
jecxz
out
mov
aas
insb
lret
sahf
les
loope
pusha
add
cmp
fld
loope
movsb
insl
daa
cmp
xor
aas
cwtl
test
inc
jns
cmp
fwait
out
jmp
mov
or
scas
movsb
jne
stos
xor
loope
push
cmpsl
cmp
loope
lock
stc
sub
data16
filds
insl
loope
cmp
add
not
in
scas
movsb
leave
shl
add
mov
out
loope
testb
insb
shll
inc
sbb
and
mov
mov
xlat
insl
mov
test
popa
or
mov
pop
xchg
mov
cmp
cmpsb
fmuls
mov
push
add
add
lods
or
jne
jno
in
outsb
nop
push
jo
cli
lret
fmul
sub
mov
jmp
mov
and
loope
mov
push
adc
and
rorb
fbstp
mov
and
imulb
xor
pop
xor
pop
pop
pop
loope
or
lds
and
push
push
sub
insl
fsub
out
cmc
push
test
push
mov
movsl
stc
cmp
leave
ficomps
and
mov
cmc
jns
mov
xor
xor
loope
frstor
push
mov
push
outsl
cs
iret
inc
int
rclb
repnz
jmp
in
dec
jmp
cmp
das
loope
clc
test
test
xor
mov
bt
xchg
mov
out
clc
movsb
and
data16
dec
insl
sbb
loope
cwtl
jmp
iret
je
mov
push
and
ja
out
pop
call
dec
sub
movl
fsubl
sti
test
stos
add
into
jmp
or
popa
pop
mov
movsb
jo
fistps
jbe
addr16
inc
loope
xchg
stc
lods
jl
rorl
mov
and
test
sbb
cvtps2pd
and
sbb
loope,pt
mull
cmpsl
mov
jl
mov
lock
test
in
fdivrs
jo
outsb
sbb
div
out
mov
outsl
scas
stc
roll
je
inc
shl
add
fisubl
lods
and
xchg
loope
pop
shl
add
lea
insb
shll
loope
aaa
lock
idivb
fucom
sahf
sub
pop
push
inc
scas
dec
jns
add
inc
loope
push
loope
fstps
mov
mov
into
cwtl
push
mov
loope
fistps
fnstenv
int
jnp
adc
out
pushf
jecxz
in
mov
add
cmp
sbb
pushf
xor
int3
mov
lock
cmp
pop
mov
ret
loope
mov
dec
adc
add
jecxz
mov
xlat
sbbl
inc
loope
outsb
mov
out
jmp
xchg
shrb
data16
xor
mov
loope
xor
xor
pop
cld
loope
rorb
scas
add
jl
in
and
dec
push
shlb
mull
jecxz
call
cmp
jp
mov
mov
lods
testl
gs
test
popf
sub
loope
jo
xchg
jmp
insl
xchg
adc
and
lock
outsl
xchg
outsb
xor
inc
hlt
loope
xchg
add
xchg
into
add
ds
jmp
mov
in
loop
popa
jo
ficoml
sub
pop
push
loope
or
pusha
int3
or
fsub
jb
mov
mov
push
lret
lock
push
pop
lret
ret
mov
fs
mov
mov
lret
adc
or
fnsave
push
loope
pushf
popf
pop
adcb
inc
push
loope
jb
repz
jg
lods
imul
jge
push
add
adc
ret
loope
cld
shrb
and
mov
int
loope
iret
cmp
adc
loope
repz
jo
shl
data16
lock
outsl
sub
fildl
cmp
out
xchg
aas
push
out
testl
sub
mov
arpl
aad
jp
fmulp
cmc
mov
sbb
shrb
bound
sub
jmp
test
gs
sub
dec
or
jle
mov
mov
xchg
ljmp
cmp
adc
aaa
loope
jmp
jl
loope
pusha
ret
cltd
jle
fcoml
out
and
rcr
xlat
je
or
loope
cwtl
jecxz
inc
in
cmp
std
adc
js
sti
fbstp
out
aad
mov
out
push
in
inc
in
cwtl
push
sbb
fstps
pop
movsl
loope
sub
xchg
adc
push
xor
repnz
data16
int3
push
xor
scas
mov
push
icebp
int
in
aas
dec
mov
jo
cmp
ljmp
hlt
mov
sub
ds
add
mov
jecxz
lahf
mov
popa
cmp
loope
iret
pop
divl
sub
jbe
xor
das
je
loope
popa
mov
jb
push
pop
and
mov
out
std
out
inc
and
arpl
inc
mov
cmp
stos
lret
fcmovnb
mov
xlat
loope
cmp
ret
cmp
int3
pop
jmp
cmc
lock
fstps
loope
jne
jnp
dec
rcrl
sub
cmp
sbb
es
xor
sub
mov
cmp
pushl
push
pop
in
movsb
push
hlt
mov
dec
rorb
in
jno
aad
filds
sti
fneni(8087
dec
scas
sub
loope
mov
pop
gs
or
dec
dec
adc
ss
out
push
cmc
sahf
jecxz
loope
add
cs
xchg
or
loope
pop
fstpt
and
mov
fsubp
cltd
adc
mov
mov
adc
cwtl
loope
jno
ds
sub
pop
xchg
das
jae
nop
push
cmp
pop
mov
pop
mov
pusha
push
sbb
jcxz
sbb
lret
xor
mov
sbb
mov
and
fnstsw
mov
pop
jb
loope
js
xchg
mov
pslld
dec
push
cmp
fisttpll
lds
pop
sub
push
in
xor
into
out
jp
in
mov
subps
test
lods
mov
addr16
lret
cmpsl
jg
and
test
jnp
rcr
scas
push
xchg
ljmp
test
mov
loope
sub
sbb
shll
pop
out
mov
sub
in
dec
jo
adc
xchg
push
out
sbb
pmaddwd
stos
push
ror
je
pop
jnp
cmp
fptan
xor
sbb
mov
mov
jmp
adc
ds
imul
fs
jbe
loope
pop
shlb
mov
ret
jo
xchg
scas
cwtl
leave
out
adc
adc
cmp
pop
mov
cltd
or
loope
lea
movsb
fs
dec
jl
sbb
mov
jo
aam
cmp
call
insb
ficoms
jmp
loope
jge
jmp
cmpsb
fwait
push
rorb
ljmp
push
sub
shlb
adc
loope
jmp
mov
cld
movsl
into
in
adc
lock
mov
es
jmp
mov
mov
pop
fsubr
imul
ss
dec
mov
fisttpl
ficomps
lock
xchg
cld
in
aam
lret
sub
jo
aaa
leave
inc
hlt
out
addr16
mov
xor
mov
adc
mull
or
mov
fdivrp
prefetch
rol
lods
test
loope
ficoml
fiadds
in
insl
loope
sub
sbb
fistps
mov
loope
popf
xorl
icebp
test
cmp
loope
mov
gs
push
cmpsl
inc
aaa
jge
pop
es
sbb
jb
loope
sahf
lret
orb
xchg
lock
mov
add
adc
add
mov
loope
lahf
popf
repz
es
mov
dec
sub
gs
mov
push
loope
call
icebp
imul
mov
aam
jae
mov
add
sub
daa
add
mov
loope
mov
out
sti
repz
push
jno
jg
jns
jo
les
jbe
je
nop
xor
rorl
pop
mov
add
add
dec
mov
ficomps
subl
out
add
in
inc
sbb
jl
shll
daa
in
and
loop
clc
xchg
and
jge
jecxz
dec
les
gs
or
lcall
out
ljmp
imul
loope
jae
jmp
fbstp
in
inc
inc
jp
loope
mov
sbb
popf
pushf
scas
das
aad
rolb
xchg
test
xchg
rcrb
dec
mov
mov
cmp
add
sbb
test
inc
nop
loope
push
dec
sub
add
ja
in
loope
ljmp
dec
fcoml
lret
loope
xchg
pop
push
push
ror
sub
repnz
loope
imul
xchg
add
xchg
in
lods
jno
shl
test
pop
mov
xchg
xchg
inc
push
jae
loope
xor
or
dec
add
loope
mov
adc
movsb
sub
fiaddl
lock
out
push
cmp
sahf
hlt
jecxz
cmpsb
push
push
jp
mov
fiaddl
mov
sub
mov
lock
fucomp
loope
cmpsb
pop
fnstenv
test
pop
ss
rcrl
mov
inc
jnp
mov
pop
jbe
dec
mov
in
shlb
xchg
xor
mov
pop
arpl
sti
xchg
inc
inc
jne
addr16
loope
hlt
cmp
push
jle
enter
ret
inc
jecxz
jbe
jl
loope
xor
iret
aaa
repz
shlb
dec
cmp
push
lock
js
jo
cmp
sub
or
xchg
out
pop
xchg
loope
mov
repz
loope
test
out
loope
push
hlt
sbb
inc
shll
daa
cli
arpl
mov
sub
sbb
xchg
mov
pop
mov
mov
push
push
int
sub
cmp
call
test
loop
int
xor
jle
xchg
imul
xor
xchg
jb
mov
xchg
add
iret
sahf
int
xchg
loope
adc
lret
push
mov
xlat
inc
push
pop
shlb
ret
xor
cmp
loope
lcall
loope
mov
push
outsl
pop
jp
dec
mov
jne
or
jle
sub
sbb
in
inc
cmpsl
loope
js
mov
loope
fs
xor
inc
or
in
and
hlt
push
sahf
loope
push
lahf
push
dec
dec
or
ret
push
outsb
js
in
in
aad
pop
popa
jae
loope
mov
cltd
xchg
loope
mov
sbbb
and
or
orl
loope
cmp
decb
cli
adc
leave
fs
xchg
loope
push
xchg
hlt
push
inc
mov
add
loope
orl
xor
loope
fidivl
dec
shl
mov
xchg
jge
adc
das
bound
jmp
clc
orb
andl
std
dec
stos
mov
or
mov
loope
pusha
sub
addr16
imul
or
xor
push
cmp
mov
mov
pop
movsb
call
loope
stos
insb
and
sbb
loope
cwtl
scas
fwait
push
les
loope
xchg
jae
outsb
in
testb
call
mov
adc
repnz
or
test
adc
sidtl
push
fs
push
xor
inc
lret
push
into
dec
add
jmp
ds
stos
in
loope
dec
sbb
pop
pushf
loope
cs
jge
push
loopne
xor
call
movsl
mov
mov
or
test
mov
insl
orb
aad
cltd
add
loope
push
out
and
ljmp
loope
push
in
out
mov
iret
or
shlb
cmpb
ret
xchg
or
adc
inc
dec
and
xchg
and
orl
jbe
mov
inc
outsb
loope
stos
adc
mov
jecxz
popa
test
fsub
je
out
loopne
jle
loope
ret
inc
or
sub
loope
mov
std
push
ret
fwait
dec
stos
cmpsl
cwtl
or
push
and
xchg
in
subb
gs
pop
loope
push
hlt
loope
mov
sti
push
loope
lods
das
mov
nop
cmp
fdivr
daa
in
push
mov
xchg
les
or
ja
iret
fs
fimuls
jnp
inc
mov
jmp
jbe
les
int3
cltd
sbb
xor
pop
movsl
jmp
stos
xchg
adc
cmpsl
retw
and
cltd
out
jp
mov
ss
push
adc
jbe
in
loope
stc
pushf
lret
mov
loope
cmp
mov
inc
inc
shl
jge
adc
loope
jae
pop
ja
cltd
cmc
imul
sbb
or
loope
sbb
loopne
leave
sbb
jb
xchg
push
gs
mov
sub
ds
shl
xor
aam
test
add
add
sbb
in
nop
loope
or
jae
bound
jnp
mov
dec
or
and
out
popa
sbb
jo
std
mov
or
shrb
aaa
jae
fs
je
loope
pop
jb
mov
filds
mov
push
pusha
jae
mov
mov
cmpsl
inc
subl
fucomp
aaa
mov
mov
aam
loope
and
jb
in
xchg
mov
stos
out
pop
loopne
pop
mov
sahf
push
mov
scas
loope
les
sti
fistpl
inc
xchg
mov
dec
cli
movsl
loope
xchg
inc
fs
fidivs
cmp
add
dec
jnp
loope
call
test
loope
shl
in
jle
lods
fnstcw
fsubl
dec
psraw
nop
mov
shl
sbb
lods
and
mov
inc
mov
xchg
sbb
pop
leave
mov
and
mov
mov
sub
test
dec
inc
lock
repnz
out
xor
punpckldq
xor
adc
inc
in
int
push
loope
mov
sarb
shl
mov
mov
sub
loope
dec
inc
mov
adc
sub
hlt
push
loope
push
xchg
jbe
push
pop
or
push
mov
lock
or
sbb
int3
je
inc
mov
popf
in
mov
cmp
fcmovb
loope
ret
gs
lods
pushl
add
outsb
jnp
test
mov
add
insl
test
or
imul
jmp
xor
mov
sarb
jno
into
fldl
mov
pop
push
in
pop
cmp
xor
sbb
adc
cli
gs
inc
fwait
mov
jg
aad
loope
pop
or
jo
jp
or
scas
lods
push
lock
and
loope
add
loope
adc
sub
xchg
scas
mov
jmp
js
push
fwait
and
sub
xor
dec
sbb
jmp
jbe
and
fwait
rorb
movsl
in
xchg
aaa
xorb
jno
jnp
es
outsb
bound
loop
nop
pop
jo
jp
xor
mul
out
and
popa
lods
mov
and
imul
inc
frstor
rcrb
xor
and
xchg
loope
icebp
add
sub
lds
jmp
add
mov
int3
lret
pushf
popl
push
mov
out
loope
and
push
lea
push
xor
stos
lods
inc
add
in
adc
mov
mov
movsl
and
test
insb
sbb
loope
popf
mov
loope
pop
dec
ljmp
lcall
das
xchg
dec
enter
pop
addr16
push
sarb
xchg
dec
push
sbb
inc
jecxz
das
sub
loope
sub
scas
iret
je
lods
loope
add
jmp
mov
movsb
movsl
or
cmpsl
loope
leave
or
scas
mov
pop
daa
iret
push
stc
push
loope
test
mov
loope
xchg
ret
loope
and
scas
loop
ret
lods
loope
sar
mov
loope
daa
cld
repnz
jl
loope
call
adc
loope
loop
out
cs
mov
loope
into
mov
pop
out
sub
lock
jmp
pop
pop
pop
loope
inc
jns
or
add
cmc
add
in
push
adc
xor
rolb
in
push
scas
addr16
loope
cmc
push
stc
sti
mov
popa
aas
cli
cmp
stos
loope
pushf
xlat
xor
push
loope
push
aad
mov
mov
ja
std
jb
and
lock
jmp
test
arpl
push
xlat
cmp
sbb
add
mov
shrl
roll
loope
iret
and
mov
faddl
dec
cwtl
sub
cld
ret
xchg
mov
and
lret
loope
sbb
fwait
sub
mov
inc
test
xchg
xorb
pop
add
inc
mov
dec
nop
sub
xchg
inc
loope
int
ja
push
jo
cmpsb
and
outsl
out
lcall
out
cmp
rcrb
shr
mov
xor
mov
loope
adc
les
or
cltd
out
ss
add
push
das
insl
mov
dec
mov
xchg
outsl
ret
jmp
loope
mov
jmp
pop
dec
loope
fstpl
call
mov
jle
jmp
into
xor
jnp
lcall
loope
jae
loop
jp
jl
pop
or
dec
mov
sub
mov
xlat
and
mov
in
ljmp
loope
jp
stc
scas
leave
arpl
cmp
fadd
sbbb
iret
and
push
icebp
sahf
call
scas
push
cltd
fwait
je
movsb
jecxz
push
mov
ret
cmp
loope
jl
clc
test
add
xchg
push
rolb
loope
lret
sbb
insl
mov
and
es
dec
add
out
inc
loope
xor
mov
loope
mov
fs
cmpsl
push
loope
fdivrl
les
jmp
pop
fcos
movsl
jl
jmp
das
cld
loope
cmpsb
lahf
dec
pop
add
push
loope
push
sbb
adc
fsubl
test
jo
loop
in
sbb
loope
mov
or
jge
popa
loope
leave
mov
repz
lock
mov
loope
mov
sub
shl
sbb
icebp
repz
dec
ds
or
test
mov
adcb
adc
jl
loope
jno
pmulhw
gs
loope
sbb
lret
shl
and
mov
fucomip
push
je
imul
lahf
or
scas
xchg
call
mov
mov
jnp
or
data16
or
inc
push
adc
dec
out
test
loope
in
stos
mov
or
mov
loopne
jae
sbb
lock
push
subb
scas
loope
pop
xlat
push
dec
in
dec
clc
shlb
int3
pop
jp
in
adc
loope
iret
ss
sub
bound
jecxz
mov
pop
loope
sub
ds
jge
lods
jo
sti
sbb
jmp
mov
div
das
add
dec
testb
xchg
xor
clc
jmp
mov
clc
cmp
adc
sbb
sbb
mov
in
cs
cli
test
or
mov
jnp
mov
mov
pop
stc
jmp
inc
and
add
imul
stos
cmpsl
sub
out
ror
xchg
xlat
lea
bnd
mov
jg
and
pusha
cmc
call
sbb
adc
out
dec
pop
cmp
mov
or
aam
push
add
negb
test
mov
jmp
sar
inc
pop
in
je
add
mov
fmuls
jae
or
lea
xchg
loopne
mov
iret
mov
or
out
mov
sub
fs
or
mov
jecxz
loope
ljmp
loope
js
das
jb
push
iret
loope
int3
pop
jle
xor
loope
pop
shll
jbe
cmp
adc
jmp
loope
jecxz
jb
sbb
adc
push
cmp
sub
dec
outsl
and
test
jno
ss
inc
iret
loope
out
inc
sbb
sahf
hlt
or
ss
stos
jo
into
test
dec
popa
pop
mov
cmp
sbb
aad
dec
pop
daa
loope
ficoms
inc
stos
mov
mov
ja
js
ret
in
add
inc
lods
test
loope
cmp
mov
mov
loope
repz
rcr
bound
shl
int
outsl
loope
pushw
pop
fwait
outsb
es
mov
lds
inc
in
and
mov
jecxz
mov
out
std
test
loope
mov
in
pop
jle
fcmovb
dec
popa
and
clc
inc
mov
enter
loope
jo
cmpxchg
sti
scas
loope
push
leave
mov
roll
fnstcw
adc
inc
loope
rorl
jmp
in
loope
stos
cmp
mov
dec
dec
mov
aas
imul
add
mov
mov
xchg
push
mov
dec
dec
jl
out
push
jg
mov
pop
in
cld
jbe
loope
mov
lock
and
xchg
andl
fcomp
loope
mov
jnp
inc
loope
jl
and
aaa
andl
xchg
fucom
les
pop
loope
dec
mov
gs
mov
loope
pop
and
loope
sub
fs
adc
rolb
inc
add
pop
stos
std
cli
ret
and
mov
add
jmp
cli
fists
lahf
mov
add
loope
call
dec
mov
loop
loope
jecxz
inc
cmp
jo
aad
iret
cmp
cwtl
mov
call
pusha
xchg
cli
loope
push
or
push
call
sbb
adc
mov
dec
movsl
out
jae
mov
xor
dec
loopw
loope
xchg
jmp
xor
or
or
push
popf
and
xchg
cli
adc
mov
mov
insb
xorb
loope
xlat
loop
dec
iret
sbb
fucomip
repnz
idivb
xchg
sbb
je
jbe
nop
sub
loope
cmc
iret
leave
popf
xchg
inc
pop
jae
pop
jp
mov
adc
jmp
mov
sbb
mov
and
in
mov
inc
loope
and
push
jl
sub
mov
je
jecxz
stos
xchg
gs
lock
and
imul
int
jge
jl
xchg
push
jmp
loope
aaa
or
dec
xchg
loope
jg
stc
and
and
inc
and
xor
shl
lods
add
xchg
es
decb
push
cmp
mov
loope
sti
dec
sub
addr16
incl
dec
push
add
outsb
mov
xlat
int3
rolb
xchg
xchg
cmp
pop
sti
loope
lock
cmpsb
cmc
xor
insl
xor
jmp
push
andb
shlb
push
and
test
loope
jl
mov
xor
je
jb
mov
sub
stc
jmp
cmp
loope
stos
xor
cld
rolb
loope
fdivrs
popa
daa
sub
shlb
mov
je
gs
loope
loop
mov
and
leave
jb
in
out
cmp
mov
dec
inc
mov
cs
ja
jle
lret
push
jo
psubw
add
test
clc
lock
insl
pop
je
jge
js
iret
ret
loope
inc
push
bound
or
out
cmpsb
pop
mov
or
cli
dec
sbbl
jb
loope
stos
lock
push
jp
ret
xor
fimuls
loope
pop
push
fcomps
dec
xor
je
pusha
mov
push
aaa
add
into
push
mov
shlb
and
loope
call
es
loope
fnstcw
mov
fildll
xor
jmp
jae
test
mov
loope
mov
jns
push
sti
rcl
sub
sbb
in
lea
push
les
out
pusha
inc
dec
aaa
in
ljmp
cs
loope
jmp
aas
or
jle
loope
lcall
loope
mov
je
xorb
out
insl
mov
mov
push
sbb
ret
fs
idiv
pop
arpl
jno
js
pop
dec
loope
out
scas
std
and
or
jge
outsl
mov
dec
stc
cltd
popa
cmp
jo
add
push
test
mov
sub
and
imul
jae
pop
sbb
push
or
push
or
adc
scas
fstp
jg
das
mov
mov
xchg
loopne
inc
aad
mov
jmp
and
ja
push
loope
movsb
xor
pop
pop
cwtl
sahf
xchg
testl
dec
adc
xor
push
ja
jns
adc
into
int
or
and
mov
push
leave
lock
sti
cmpsl
jne
ret
add
outsl
popf
jecxz
je
loope
or
fiadds
inc
jo
xor
mov
inc
add
jle
aam
iret
ja
mov
loope
mov
and
out
ror
orl
push
lods
andps
fwait
loope
jmp
mov
mov
xor
loop
mov
jo
cmc
aaa
into
xchg
loope
jecxz
xor
mov
cmp
fldl
jg
xor
sarb
cli
cmp
aam
xor
jge
pop
cmp
jb
sbb
adcb
cmpsb
aam
mul
inc
lret
adc
btr
jecxz
jmp
xchg
and
sub
jmp
out
fsts
dec
mov
bound
out
jge
sub
orb
jo
xchg
arpl
mov
push
loope
testl
shlb
iret
xchg
cmc
pop
mov
fwait
or
mov
mov
mov
loope
mov
cmp
popf
mov
fcompl
mov
loope
sbb
mov
loope
mov
pop
and
in
or
xor
mov
repnz
mov
std
cld
cltd
loope
inc
sbb
jo
into
and
mov
imul
stc
stos
push
repnz
mov
arpl
scas
roll
out
adc
dec
loope
int
mov
aad
jmp
inc
clc
bound
pop
loope
ret
pop
frstor
loope
pop
jae
xchg
adc
call
shll
insl
cmp
addb
mov
or
int3
pushf
push
pop
in
in
mov
sbbl
hlt
jns
adc
test
repnz
add
iret
add
aam
mov
cli
loope
and
loope
ret
push
movsl
push
mov
add
or
cmp
jo
xor
out
push
inc
push
jb
adc
jmp
inc
loope
inc
fdivl
xchg
out
mov
jbe,pt
lock
shl
aaa
movsl
or
nop
aas
stc
ss
sti
or
stos
gs
shl
sub
push
je
mov
sbb
mov
sub
dec
ret
mov
loopne
das
sahf
loope
and
rcll
dec
mov
stos
sub
fidivrs
gs
pop
loope
jge
sbb
fwait
popa
xor
jecxz
jle
vpmulhw
fs
fldenv
insl
or
loope
int3
dec
adc
push
mov
or
clc
adcb
leave
or
inc
jl
fstl
loope
xchg
add
fsts
jnp
jns
loope
sub
jg
lret
lds
fsubp
or
sub
addb
push
pop
or
sub
nop
mov
les
es
mov
jmp
xchg
mov
inc
test
or
jnp
sub
mov
iret
aas
xchg
cltd
incb
ss
add
jmp
dec
mov
xor
xor
jb
xor
and
js
mov
mov
in
ret
mov
imul
ljmp
imul
xchg
loope
test
and
xor
das
adc
je
mov
fcoms
cmp
shll
in
aad
mov
or
mov
jmp
xchg
cmc
repnz
loope
mov
push
xchg
loope
fadd
ret
hlt
sbb
daa
cmpsb
fs
loope
into
mov
jnp
inc
nop
fsubrp
push
jp
pop
loope
test
popa
jne
rcll
test
nop
in
mov
adc
and
add
push
inc
fcomps
and
and
inc
fiaddl
xchg
add
sbb
jmp
mov
es
loopne
jmp
fs
pop
push
or
mov
xchg
pop
in
lock
jp
notl
loope
sbbb
nop
movsb
xchg
loope
pop
add
pusha
push
lds
mov
pushf
push
cmpsl
push
pop
pop
pusha
adc
push
inc
mov
in
mov
pop
and
loope
lret
pop
mov
loopne
divl
xchg
loope
adc
pop
mov
clc
lcall
push
dec
sbb
lds
loope
sub
or
ja
sbb
call
pop
aad
rcrb
xchg
movsb
insb
lea
arpl
loope
cmp
addr16
sarl
mov
add
pop
and
lcall
and
testb
loope
sbb
aad
je
sub
push
clc
jae
jns
lret
jnp
scas
dec
push
push
mov
fiadds
repz
sub
jo
dec
fidivrl
ss
pusha
xor
loop
cmpsb
shrb
xlat
loope
dec
rclb
je
and
inc
stos
incb
push
mov
lock
pop
jnp
jecxz
and
adc
sarb
test
cmpb
jmp
jmp
aad
jne
xchg
enter
aam
sbb
add
test
inc
cli
xchg
jge
jp
pop
mov
push
xor
and
mov
jae
loope
push
cmp
jle
stc
pop
loope
push
pop
ja
pop
fwait
or
mov
cmp
out
shrb
clc
iret
push
inc
mov
dec
jg
lahf
jp
ss
jae
imul
mov
in
mov
cwtl
add
xor
jmp
fxam
insb
js
mov
jge
jae
mov
push
loope
out
ja
cmp
pop
loope
fsubl
out
dec
cmc
loope
sub
out
lret
push
les
loope
cwtl
xor
pop
sahf
fwait
loope
push
ds
adc
imul
lret
into
mov
loope
subb
inc
mov
pop
aad
pop
fldenv
and
lcall
test
loope
sarl
sub
pop
push
scas
cli
inc
in
mov
cmp
xor
xorl
out
bnd
ds
sub
les
mov
sahf
loope
fwait
pushf
jo
xor
loope
pop
arpl
dec
inc
movsl
mov
imul
fwait
mov
jmp
and
dec
popf
fucom
subl
je
push
jmp
lods
and
push
in
add
and
lods
lds
outsl
inc
test
dec
sarb
sbb
fwait
xchg
ljmp
sub
js
test
shlb
out
mov
movsl
es
fbld
loope
dec
cmp
xchg
aaa
xchg
fwait
push
lahf
in
stc
iret
sbb
loope
lods
imul
fildll
jg
push
mov
pop
xchg
jmp
movl
jg
loope
sbb
add
lcall
mov
loope
mov
push
xor
sub
rolb
mov
ljmp
mov
jo
xlat
fwait
icebp
bound
test
ss
push
loope
mov
cli
push
mov
and
mov
addr16
loope
adc
arpl
xchg
loope
lods
mov
sar
ljmp
call
out
and
xchg
in
sahf
pop
aaa
jmp
cmp
mov
sub
add
loop
jg
dec
stos
xor
in
pop
pop
sbb
sbb
mov
cld
jnp
fidivl
jmp
aam
add
lea
jmp
sbb
jge
in
sub
sete
ja
int
arpl
dec
out
mov
ret
loope
sub
test
rcr
or
adc
dec
ds
icebp
mov
and
fwait
and
fs
mov
mov
and
fndisi(8087
rorl
jo
stc
adc
pop
loope
dec
adcb
fmull
aad
in
clc
loope
jae
pop
imul
loope
mov
jns
fsub
push
inc
mov
test
xchg
inc
mov
mov
pop
ss
mov
adc
stos
jecxz
aaa
cwtl
outsl
loope
lahf
sub
mov
sbb
dec
mov
cs
int3
loope
sub
sub
mov
loope
out
je
jbe
push
loope
cmpsb
movsb
arpl
iret
sub
jns
loope
jb
or
push
xor
pusha
lods
ljmp
add
sbb
adc
imul
in
aas
or
push
jno
loope
cmp
cld
cmpsb
cli
push
int
xchg
loopne
dec
loope
dec
sbb
out
out
add
mov
push
dec
cmp
int
enter
in
imul
lock
cmp
loope
cmpsb
pop
outsb
push
repz
mov
mov
jae
shll
inc
fucomp
out
dec
jnp
and
mov
mov
mov
push
cmc
shr
push
xchg
and
addl
jb
cmc
test
adc
loope
cld
adc
push
cmp
mov
in
mov
fsubrl
add
cmp
in
loope
mov
lret
movsl
jo
sub
fidivrs
lods
mov
lods
xchg
loope
mov
imul
aaa
mov
push
call
daa
sti
mov
popa
and
clc
push
sub
jae
or
mulb
sbb
lods
pop
loope
and
dec
loope
dec
mov
incb
pop
or
out
test
loope
pop
or
sub
mov
lahf
es
push
nop
jo
inc
push
in
mov
inc
add
stos
loope
lds
repz
push
inc
out
clc
shr
ljmp
add
icebp
ja
inc
fcom
arpl
cmp
mov
xchg
ret
push
or
pop
popa
adc
push
jge
sti
add
mov
cltd
das
js
test
push
sbb
jns
mov
fldl
clc
fwait
into
push
loope
fistps
out
xlat
inc
xchg
imul
insl
loope
icebp
lods
roll
fsubp
adc
fmuls
cmp
lods
xchg
mov
xor
cmp
movsb
rcrl
mov
and
jne
or
movsl
shrl
mov
lods
push
and
insl
mov
mov
xlat
adc
jmp
cmp
sub
jno
ret
xor
mov
mov
and
out
mov
push
add
or
icebp
jmp
jnp
sbb
loope
mov
inc
les
xchg
fcomp
roll
inc
jmp
mov
shlb
mov
out
lock
mov
dec
or
mov
test
test
pop
jo
jb
in
loope
pop
les
add
not
mov
loop
ljmp
inc
xchg
pop
pop
loope
pop
sbb
dec
incb
add
out
sbb
xor
xorb
js
push
add
flds
inc
pop
fadd
jmp
sarl
mov
leave
sub
mov
shl
adc
sahf
scas
xchg
test
shlb
add
xchg
test
movsl
lods
loope
paddsw
inc
out
loope
lds
sub
or
push
into
jl
nop
mov
xchg
shl
or
loope
xlat
xor
push
jg
xor
and
mov
pop
cmpsl
cmp
jecxz
into
jo
sahf
lret
out
mov
push
insb
cmpl
and
mov
loope
fstpl
int
mov
loope
push
sbb
push
pop
loope
rol
cwtl
out
sub
push
loope
inc
push
lahf
in
mov
nop
jl
and
addr16
in
loope
sbb
push
inc
mov
sub
xchg
fisubl
cmp
jmp
popf
mov
fsts
sub
loopne
popa
pop
sub
loope
mov
insb
mov
mov
mov
enter
stos
arpl
xor
add
pop
and
push
and
cmp
sub
push
lock
fcomp
lds
in
arpl
pop
pop
jmp
int3
fcom
mov
jnp
mov
and
cmp
loopw
std
in
adc
outsb
inc
decl
pop
jnp
pushf
bt
mov
sahf
adc
shlb
mov
icebp
loop
push
xlat
sub
insb
adc
loope
ss
lock
jns
mov
ljmp
xchg
push
add
jge
aaa
sbb
loope
sbb
sahf
repz
jnp
out
sub
jmp
push
pop
and
push
in
ss
adc
xlat
loope,pn
dec
adc
pusha
mov
loope
pop
xor
rcr
jnp
bound
adc
adc
jp
idiv
ret
in
loope
mov
mov
or
sbb
ds
insl
add
jle
mov
imul
mov
call
push
loope
or
add
addr16
xchg
jae
inc
push
mov
rorb
daa
sbb
ds
ret
lret
shrb
xchg
add
jecxz,pn
sub
out
in
iret
shll
adc
jae
popf
ljmp
xlat
sub
aam
pop
int
lahf
mov
jmp
fidivrs
add
imul
mov
jbe
bts
jo
inc
lret
call
loope
inc
ret
sahf
xor
mov
cwtl
jno
lods
mov
in
das
inc
es
mov
sub
loope
jg
sub
push
pop
loope
inc
xor
aas
js
repnz
arpl
and
push
out
clc
mov
inc
outsl
je
cmp
dec
mov
xchg
cltd
push
clc
jp
subl
inc
es
mov
imul
pop
jnp
sti
loope
push
iret
lret
xor
mov
es
daa
cwtl
and
in
lock
loope
out
pop
cmovle
mov
loope
push
cmc
mov
loope
jge
push
xlat
inc
out
push
pop
in
shr
mov
dec
sub
aad
push
jbe
lods
cmp
mov
loop
mov
dec
mov
sub
icebp
mov
call
sbb
pushf
insb
mov
ret
inc
sub
aaa
mov
xchg
lods
loope
pop
movq
or
imul
daa
bound
jnp
ffree
mov
adc
ljmp
mov
or
gs
jns
loope
mov
rcrb
xchg
mov
punpckhdq
lods
jmp
and
push
xchg
push
nop
mov
dec
lcall
loope
popa
add
xchg
cltd
ljmp
jae
aam
push
nop
les
dec
jecxz
loope
or
adc
loopne
mov
loope
daa
cmp
repz
push
sbb
loope
adc
push
sub
xchg
lods
hlt
and
or
pop
jbe
dec
xlat
inc
loope
push
xchg
icebp
and
adc
es
add
add
pusha
lock
jmp
std
loope
insl
mov
popa
loope
or
dec
stc
mov
out
enter
je
loope
pusha
push
scas
sahf
stos
lods
add
cmc
in
pop
and
lret
test
sbbb
xorl
das
pop
cmpsl
sub
test
and
push
sbbb
or
jae
sub
fmuls
and
ret
pusha
mov
scas
cmp
shr
bound
ret
and
inc
push
jl
lea
scas
shlb
fs
cmp
ljmp
mov
push
sbb
loope
shr
mov
dec
adc
clc
jbe
stc
add
loope
or
out
jg
loope
sbb
imul
pop
roll
push
pop
push
push
leave
sahf
mov
jne
add
popa
aaa
jo
and
gs
sahf
imulb
loope
mov
in
cltd
fdiv
loope
mov
sub
movsb
xchg
nop
mov
test
cwtl
mov
cmpsl
test
jo
sub
lahf
loopne
sbb
push
inc
testb
loope
mov
mov
popa
and
cmp
mov
jp
mov
or
xor
scas
out
jmp
push
fxch
loope
pop
mulb
icebp
xchg
loope
dec
sub
xchg
in
movsl
lock
sub
push
jb
mov
inc
pop
les
fsubs
cli
test
inc
pop
mov
sub
adc
loope
push
mov
imul
pop
aaa
lcall
mov
inc
loope
int3
or
sub
and
sub
xchg
stos
or
aas
pop
inc
loope
mov
cmpsb
aaa
dec
movsl
xchg
loope
mov
push
jnp
loope
mov
dec
int
shll
cs
inc
ror
loope
mov
add
push
pop
notb
sbb
jecxz
test
ret
jmp
jmp
fstl
loope
mov
int3
rcl
popf
shrl
or
xchg
popa
cwtl
dec
shr
lock
mov
or
sbb
jo
loope
dec
icebp
adc
andb
in
rolb
pop
insb
sbbl
sbb
fnstsw
mov
ficomps
sub
pop
in
add
fs
shrl
shlb
fisubs
cwtl
adc
xchg
fcompl
fcoms
cmp
popa
mov
adc
loope
jle
or
jg
or
fst
push
xchg
sahf
imul
dec
lret
jp
loope
out
xchg
mov
insb
sub
loope
js
sbb
jo
fwait
pop
lods
outsl
call
mov
aad
cmp
je
jo
fwait
addr16
sbb
adc
js
ret
scas
cmp
out
add
cli
hlt
loope
adc
nop
cmp
popa
sbb
lahf
iret
fnstsw
loope
push
push
fs
out
add
mul
mov
cmp
icebp
or
loope
jle
mov
push
adc
cmp
sub
sahf
cmpsb
dec
int
mov
xor
dec
decb
out
jmp
xor
stos
xchg
ljmp
lock
mov
repnz
test
loope
lcall
loope
ja
cmp
outsb
andl
stos
inc
fucomip
or
pop
call
jmp
test
mov
sbb
loop
call
mov
lea
push
fidivrs
stc
pop
loope
popa
inc
arpl
mov
pop
sarb
xchg
gs
xchg
jmp
dec
sti
mov
push
sbb
lods
mov
jmp
loope
mov
or
fwait
in
es
xchg
mov
jp
in
mov
jbe
icebp
xchg
fsubr
xor
mov
and
test
xchg
daa
or
out
adc
add
mov
das
outsb
or
fistl
repz
bound
add
loope
dec
and
add
stos
jb
mov
loope
bswap
push
pushl
in
test
jle
add
inc
inc
das
push
fadd
adc
or
stc
inc
and
loope
int3
xor
mov
push
cld
dec
std
loope
jo
add
cmp
loope
mov
mov
loope
imul
pusha
out
mov
stos
xchg
frstor
loope
jl
lods
jge
xorb
leave
mov
cmc
loopne
mov
xchg
pop
fimuls
lahf
and
loope
ret
test
imul
add
call
test
push
in
and
out
pop
or
jg
jnp
mov
das
shlb
and
sti
mov
dec
mov
pop
mov
add
lock
fs
inc
enter
cmp
mov
jmp
pop
ret
xor
add
dec
insl
fisttpl
pop
je
cmpsb
pop
mov
aam
jl
imul
loope
pop
jg
das
int
insl
loope
jmp
cmp
rcll
mov
jmp
repz
jge
push
pop
add
loope
pop
stos
fists
sub
loope
add
ficoml
loope
jae
imul
jnp
dec
in
inc
dec
lret
loope
mov
add
inc
dec
sahf
xor
loope
pop
add
adc
push
mov
mov
add
add
icebp
pop
call
xchg
mov
cmp
sar
pop
pop
loope
mov
loope
lods
leave
out
xchg
hlt
loope
push
pop
sbb
mov
pop
dec
inc
xor
popa
add
std
cli
xor
dec
add
roll
in
mov
loope
push
lods
rcl
clc
insl
jp
mov
add
jb
dec
test
or
jne
fcompl
jnp
cmp
popf
ror
inc
dec
outsb
test
sbb
ljmp
rol
jecxz
insl
loope
push
inc
aam
sarl
sub
pop
adc
out
pop
add
jb
mov
mov
test
jbe
les
mov
pop
scas
pop
xor
sahf
data16
loope
sub
daa
js
enter
ds
and
mov
and
jmp
push
outsb
ja
ja
add
fimull
ret
cmc
mov
mov
aaa
test
scas
jo
test
loope
jb
sbbl
mov
clc
cmp
imull
pop
mov
negb
pop
loop
jle
inc
jecxz
xor
repz
test
movsb
insl
out
sbb
xor
adc
je
and
xchg
outsb
xchg
sbb
cmp
out
sar
ret
jno
cmp
leave
jp
adc
loope
fmuls
repz
setb
pop
or
mov
daa
aaa
jge
clc
sbb
lds
xchg
popf
xchg
insl
mov
mov
loop
mov
loope
cli
cmpsl
fs
sbb
loope
movsl
fldt
mov
clc
inc
loope
inc
xor
sbb
pop
mov
pusha
das
add
xchg
loope
arpl
loope
daa
sub
test
lods
sub
and
sub
push
pop
jo
inc
outsb
loope
dec
fildll
push
or
loope
lret
imul
add
xchg
out
std
xchg
into
loope
pop
lcall
jge
imul
daa
fwait
nop
dec
jne
in
push
loope
cld
or
xor
imul
pop
insl
add
rclb
aam
sbb
fistps
cltd
insb
dec
dec
sbb
sub
in
jp
or
loope
xchg
leave
adc
dec
sub
sub
jo
pop
lea
cli
push
fadd
test
jno
xchg
adc
sarb
pandn
mov
jne
jmp
sti
aam
loope
jbe
jb
pop
fisubl
rolb
lods
mov
pop
loope
mov
loope
pop
xor
out
loope
lret
jle
daa
and
loope
mov
stos
ret
rolb
xor
adc
jae
int3
cmp
mov
jne
outsl
dec
push
loope
or
cmp
loope
push
jl
gs
loope
mov
sbb
adc
daa
jmp
loope
push
outsl
pop
rorb
repz
ss
and
sbb
adc
cltd
loope
cmp
mov
std
inc
fsubp
jle
cld
stc
out
cmc
lcall
fs
or
xor
sbb
mov
mul
subb
lods
pop
mov
jns
mov
repnz
das
stos
pop
jo
pushf
jmp
mov
xor
push
adc
dec
inc
neg
jns
outsb
pop
mov
inc
push
cmp
xor
and
ficoml
aas
mov
adc
sarl
repnz
jle
int3
xchg
mov
nop
push
ja
sbb
dec
and
outsb
dec
in
stos
push
movsl
xchg
arpl
sti
push
fabs
shlb
dec
jecxz
call
sub
mov
loope
lods
lea
cmp
nop
adc
adc
out
xchg
jg
fndisi(8087
lcall
push
lock
jmp
xlat
ljmp
lds
loope
add
fdiv
sub
pop
xor
pop
jmp
cmpsl
mov
and
das
cmp
xchg
gs
lret
or
in
adc
jne
lahf
fwait
or
mov
frstor
arpl
xorb
es
bound
pop
loope
jno
and
fs
push
xchg
ret
loope
pop
push
and
in
and
loope
ss
mov
inc
sbb
icebp
jp
and
add
mul
pop
test
cli
jge
mov
loope
cmp
adc
aad
leave
shlb
jecxz
xor
mov
in
loope
push
push
sbb
add
fnstenv
inc
loope
std
cmp
xor
fs
sbb
mov
sbb
inc
jbe
or
jne
imul
dec
shr
icebp
add
aaa
ret
in
sbb
jl
add
stos
test
clc
out
dec
xchg
loope
xchg
jle
ss
mov
loope
shll
out
loope
cmp
or
pop
rorb
sub
sub
pop
loope
mov
aaa
xorl
shll
in
call
push
mov
clc
adc
push
in
lds
loopne
cmp
stos
loope
jp
add
dec
outsb
push
loope
loop
sub
fucom
icebp
xchg
dec
inc
testb
int
popa
cli
mov
loope
aam
xlat
negb
lcall
dec
movsb
in
lret
popa
pusha
pop
xorb
pop
lock
sbb
dec
outsb
mov
add
dec
sbb
enter
aaa
shlb
jg
shr
ljmp
insb
mov
aas
loope
lcall
leave
std
loope
in
int3
ljmp
into
push
in
loop
iret
loope
roll
js
sti
aaa
jb
lcall
test
pop
addl
movsl
and
pop
cli
dec
jo
pop
xchg
fwait
adc
faddp
jb
scas
sub
mov
emms
push
std
sti
mov
push
jo
cmp
jno
cmpb
pop
dec
fnclex
and
repz
mov
dec
jmp
ss
outsb
repnz
into
cmpsl
sbb
mov
cmc
ljmp
test
in
mov
loope
mov
adc
shrb
xchg
inc
cmc
cli
xor
fs
loope
scas
sbb
or
ss
or
mov
loope
xchg
dec
jecxz
out
negb
out
or
sbb
arpl
loope
cmp
adc
cmp
flds
sbb
loope
movsb
andl
mov
sarl
or
movsb
push
shl
and
cld
loope
mov
xchg
iret
jne
sub
sub
loope
outsb
jno
lea
and
cwtl
pop
mov
push
sub
sahf
jo
mov
cmp
test
add
pop
and
inc
mov
leave
loope
cwtl
lret
leave
mov
sub
mov
push
mov
repz
add
mov
and
add
push
popf
mov
lret
mov
pop
in
adc
jns
pop
ljmp
sbb
xchg
sbb
call
ds
testl
loope
lret
ljmp
int3
jmp
sub
loope
push
or
aas
loope
les
adc
sbb
pop
out
jb
cmp
xchg
xor
or
lret
ret
cmpsb
mov
inc
cwtl
loope
xor
loope
inc
dec
sub
and
loope
inc
ljmp
in
jnp
jno
mov
loope
mov
les
sti
stc
jo
mov
subb
sbb
sahf
bound
jg
lcall
mov
mov
lock
push
cli
aas
cs
inc
mov
lods
push
nop
pop
xor
data16
sub
sbb
out
xchg
ret
shl
testb
and
add
loope
jmp
jb
je
nop
lret
ds
sti
mov
dec
jp
cld
push
jmp
rolb
sahf
rorb
cli
leave
iret
mov
mov
out
dec
cmpsl
mov
loope
and
push
out
loope
cmp
shlb
push
or
pop
sbb
les
sbbb
add
in
lahf
pop
mov
inc
jns
fmull
mov
insb
rorl
jno
mov
inc
xor
clc
out
in
nop
hlt
xor
nop
js
or
xchg
mov
sbb
imul
notl
or
insb
movaps
sub
in
adcl
les
adc
mov
fadd
cs
inc
push
arpl
test
mov
lret
pop
xor
or
das
js
pop
loope
bound
or
loope
cmc
and
jg
jp
jle
xor
mov
lret
mov
loope
or
and
pop
push
loope
int3
pop
dec
jo
in
rcrb
adc
mov
dec
imul
inc
pop
movsl
dec
jnp
xchg
call
jmp
lods
mov
in
idivb
pop
lret
gs
test
jp
adc
les
adc
scas
mov
add
mov
loopne
and
loope
aam
insb
sub
test
ret
inc
into
movb
inc
lret
arpl
imul
loope
stos
inc
insb
rorb
loope
repz
je
into
loope
imul
and
js
loope
fdivrs
jb
or
es
insb
loope
and
mov
test
jmp
int
dec
outsl
xor
movsb
adc
pushf
push
cli
jle
pop
adc
sti
cmp
daa
dec
aam
mull
loope
dec
arpl
orb
loope
lret
sahf
mov
int
pushf
push
outsb
andb
push
aad
xchg
lods
mov
adc
stc
lret
jmp
les
adc
push
fildl
xor
outsb
mov
mov
loope
inc
add
or
rol
pop
popf
ljmp
hlt
dec
and
and
jns
push
and
adc
adc
loop
cmp
sahf
loope
xor
lods
mov
adc
in
jge
sbb
push
xor
xor
sub
popf
loope
int3
add
xchg
loope
mov
mov
fmul
insl
push
cmp
jns
dec
call
daa
jo
call
imul
pop
adc
sbb
test
sub
stos
mov
adc
sahf
insl
je
movsb
jge
mov
xor
jne
mov
cmp
fstpt
xor
jnp,pn
jo
xchg
cmp
sti
loope
jne
loope
sbb
push
jo
lods
popf
enter
dec
sub
insl
call
lcall
mov
add
xchg
mov
nop
insl
mov
inc
mov
inc
mov
movsl
cmpsl
loope
imul
sbb
jo
inc
ret
inc
es
cmpsl
add
loope
rorl
out
loope
jne
inc
ss
or
loope
lods
fmul
rcll
pop
clc
mov
cli
mov
andl
xchg
sarl
push
and
lods
js
mov
mov
ja
scas
adc
cmp
loope
mov
adc
scas
ljmp
sbb
sbb
aad
inc
nop
icebp
loope
jecxz
outsb
push
sub
and
hlt
sbb
or
xchg
sub
loope
int3
mov
sahf
push
out
inc
ds
jmp
cmp
inc
inc
xchg
mov
stos
inc
pop
test
mov
shrl
rorb
mov
lcall
movsb
test
leave
imul
push
adc
sbb
loope
out
pop
mov
dec
mov
subl
rclb
or
or
jmp
cld
loope
popa
mov
inc
loope
xor
jmp
loope
roll
loope
stos
imul
ljmp
and
inc
push
loope
mov
push
or
hlt
rcrl
repz
sti
loope
les
push
mov
jo
loope
dec
or
stos
mov
pop
fisttpll
loopne
and
inc
mov
ss
cmpsb
dec
inc
pop
mov
add
push
jmp
loope
lahf
repnz
into
insl
clc
loope
adc
loopne
nop
pusha
mov
add
int
sub
add
mov
push
jmp
mov
push
xchg
fs
add
jnp
mov
dec
xor
pop
sti
scas
dec
jmp
cmp
cmp
pop
cmp
pusha
cmp
push
loope
insl
ja
push
sbb
loope
dec
pop
xlat
cmpsb
inc
in
push
loope
inc
jbe
out
cmpb
push
rep
loope
sbb
in
cmpsl
loope
scas
jb
pusha
mov
gs
mov
in
loope
test
jns
out
pushf
push
mov
repz
xchg
jecxz
mov
loope
xchg
mov
jnp
out
in
andl
add
loope
rcll
inc
mov
lock
inc
cltd
xchg
jmp
adc
fsubl
jle
inc
loope
outsl
leave
adc
jg
loope
inc
jae
mov
inc
stos
loope
add
pop
jnp
insl
sti
loope
jge
add
cmpsb
xchg
push
rolb
and
sbb
jmp
cmp
xchg
cmp
add
repnz
add
sub
sub
jp
lds
lahf
dec
sbb
mov
push
std
lock
mov
sbb
pop
or
or
jno
loope
das
daa
jo
mov
test
in
loope
cmp
and
frstor
rol
pop
insl
or
rclb
xchg
ljmp
daa
notb
loope
push
imul
cmpsb
sti
lret
cmp
cwtl
pop
push
rcll
mov
push
xchg
jecxz
adc
xor
xchg
pushf
mov
addps
loope
jno
in
inc
les
loope
out
leave
adc
pop
movsl
loope
mov
sub
scas
stos
mov
jecxz
pop
out
add
inc
lods
mov
cmp
xor
es
cmpsl
fists
dec
std
push
jmp
sarb
jmp
dec
int3
xor
fwait
pop
mov
add
loope
cmp
push
aad
imul
jnp
push
into
mov
pop
arpl
daa
fs
repnz
mov
sub
adc
fbld
mov
enter
xchg
inc
sarl
pop
leave
add
shl
mov
outsl
cmpsb
pop
mov
popf
add
xor
orl
jae
loope
cmp
ret
dec
mov
stc
sbb
js
daa
xlat
push
pop
loope
jno
pop
add
jle
out
in
or
mov
movb
xchg
js
mov
loope
outsb
daa
or
loope
dec
mov
push
add
mov
arpl
fldl
lock
cld
mov
mov
adc
push
xor
loope
mov
popf
loope
repz
flds
rclb
xchg
cwtl
mov
add
out
mov
daa
push
dec
dec
push
mov
add
divb
jo
out
int3
jbe
loope
jb
inc
mov
and
push
fimull
mov
jl
jbe
sbb
dec
push
cmp
sub
cmp
lcall
shrb
mov
sbb
lds
sarb
dec
mov
push
inc
lcall
cmc
jo
push
adc
in
jo
inc
and
shlb
test
ljmp
adc
loope
mov
adc
push
call
add
push
insb
inc
aas
jl
inc
lret
pop
or
pop
jo
xor
xorl
cwtl
sub
adc
push
sub
xlat
test
les
jecxz
ss
loope
add
and
data16
sar
mov
dec
insl
cwtl
push
mov
sbb
inc
in
cmpsb
pushf
mov
xor
pop
push
xchg
loope
fistpll
out
adc
pop
loope
lret
popa
inc
call
loope
divb
mov
jno
push
sub
rorb
stc
jmp
das
loope
movsb
test
lret
dec
loope
call
je
loope
cltd
push
inc
inc
mov
ret
js
jecxz
in
mov
pop
jl
or
fcmovnbe
imul
dec
adc
sub
push
movsb
test
jl
jne
jae
and
cmp
xor
push
movsl
pop
adc
imul
jae
js
ljmp
js
dec
jno
in
pop
mov
loope
mov
xor
int3
loope
xor
xchg
mov
adc
xor
mov
jb
sbb
xor
aam
loope
xchg
add
push
lcall
mov
jp
mov
push
adc
xor
loope
xor
repnz
adc
loop
ljmp
filds
loope
sahf
hlt
je
pop
jle
loope
in
pop
pop
jecxz
shlb
jecxz
mov
in
push
ret
pop
mov
popa
cltd
mov
mov
mov
jo
pop
aas
rol
jecxz
cmc
ja
dec
cmovne
mov
ljmp
and
loope
mov
into
je
loope
mov
adc
adcb
js
pop
fisubs
lret
jmp
call
mov
inc
movsl
and
inc
mov
sahf
test
sub
clc
add
mov
pop
aas
inc
mov
hlt
adc
in
pop
call
jne
adc
fistpl
pop
in
lret
das
xchg
mov
insb
jle
cli
in
loopne
loope
push
popa
imul
lods
rep
ljmp
loope
inc
aad
fisubl
dec
xor
icebp
lods
sbb
stos
mov
pop
sub
pop
insb
js
stc
loope
cmp
jb
jne
loope
push
cmp
enter
jmp
mov
scas
fwait
or
aaa
xor
sbbl
push
mov
push
aad
shll
insb
dec
cld
loope
jmp
ret
rclb
inc
std
out
lahf
jo
out
pop
cmp
out
ljmp
mov
push
xor
es
arpl
cmc
out
sub
jne
jmp
push
add
rclb
mov
mov
cld
jmp
loop
rolb
mov
mov
mov
jle
add
int3
aas
cmp
jo
adc
cltd
fwait
cmc
jo
mov
xchg
jno
loop
hlt
mov
mov
dec
mov
sub
jecxz
loope
test
xchg
pop
dec
push
push
cltd
loopew
push
clc
pop
pop
shrl
repz
push
mov
cltd
jecxz
jns
adc
mov
in
mov
push
pop
mov
xchg
fs
cmp
icebp
mov
ret
mov
cmp
pop
jp
xlat
loope
fldl
call
mov
dec
pusha
sub
add
repnz
and
bound
ja
loope
cmp
sub
push
lcall
jecxz
loope
and
cmp
iret
bound
pop
inc
xchg
adc
out
and
ds
adc
insb
dec
into
and
inc
inc
bound
loope
aas
jb
scas
pop
sbb
mov
or
in
pushf
inc
jmp
add
push
lahf
imul
test
movsb
loope
cmpsb
or
clc
mov
inc
pop
loope
mov
xchg
jnp
stos
adc
loope
push
mov
pop
loope
inc
mov
dec
mov
bound
mov
insb
shll
loop
lcall
gs
and
popf
hlt
fcoms
movlps
loope
mov
sbb
add
cltd
cld
in
sbb
loope
push
and
pop
aam
xor
dec
pop
fstl
jo
repnz
jg
mov
fistl
jmp
mov
cmp
insb
loopne
out
loope
scas
add
nop
fdivrl
cltd
adc
jnp
shlb
into
lret
mov
es
push
hlt
push
and
cwtl
jns
mov
in
mov
jb
xor
mov
pop
mov
and
mov
sarb
mov
neg
out
repz
add
mov
in
jns
clc
and
out
je
addb
xchg
movnti
outsl
loope
lea
mov
out
adc
cmpsb
imul
loop
pop
repnz
sahf
clc
leave
xchg
jecxz
inc
jo
or
loope
arpl
loope
sbbl
mov
jbe
jmp
loope
mov
pop
pushf
in
sbb
ds
loope
scas
add
adc
fsub
add
pop
outsl
pop
ds
cwtl
loope
ja
or
int3
pop
and
cmc
out
mov
stc
sub
loope
fs
jo
in
jno
std
inc
xchg
sbb
inc
jp
xor
imul
mov
lret
dec
dec
imull
mov
jb
repnz
dec
pop
lret
and
loope
fsts
add
fdivrl
inc
sbbl
stos
scas
dec
and
loope
lcall
inc
jne
mov
jb
dec
je
mov
sbbl
call
pop
fdivs
push
int
out
fistps
xor
and
loope
mov
loope
icebp
cmp
sbb
lret
into
xor
mov
xchg
push
inc
js
in
lahf
shlb
loope
mov
test
jg
loope
inc
mov
test
shl
pushf
inc
mov
lods
and
inc
cmc
dec
out
pop
cli
sbb
mov
data16
ja
pop
xor
loope
imul
fs
add
loope
orb
dec
jae
mov
lods
jmp
loope
and
xchg
mov
imul
and
insb
mov
dec
xchg
repnz
gs
jo
sub
leave
ror
mov
and
sbb
and
lret
lods
cmp
stc
psraw
fs
pop
loope
cmp
inc
add
nop
test
adc
je
add
pop
loope
pushf
push
mov
sbb
out
loope
inc
jb
pop
jl
ljmp
add
loope
sbb
std
and
push
loope
outsb
adc
fnsave
inc
pop
cld
in
push
add
rclb
cmp
lret
jmp
cmpsb
addl
iret
push
pop
sub
cli
out
adc
jmp
popa
xlat
call
loope
inc
pop
or
into
sub
mov
imulb
pop
push
mov
scas
loope
jl
popf
push
inc
loope
fstpl
sbb
add
loope
std
pop
popa
jg
movl
inc
and
into
pminub
dec
scas
mov
push
stc
cmp
loope
pop
lea
loope
ljmp
loope
pop
sub
loope
cmp
scas
ds
pop
jmp
jmp
fs
xor
sbb
ljmp
sti
add
adc
imul
jecxz
sub
jae
xor
push
sti
loope
jle
xorb
xchg
loope
pop
mov
mov
pusha
outsl
loop
mov
sti
repnz
sub
sbb
fisubl
stc
fsubrs
lock
sub
shrb
movsl
sahf
pushl
jnp
jo
sbb
adc
jecxz
jo
fisubl
stos
xchg
mov
sti
loope
inc
ret
mov
jge
jp
mov
fnstenv
mov
rolb
arpl
in
addl
pusha
fabs
fsubrs
jmp
sbb
dec
or
push
mov
cmpsl
hlt
pop
sub
sub
add
push
loope
xchg
mov
and
into
cmpsl
stos
inc
loope
mov
faddp
mov
dec
sarb
leave
add
sarl
add
jmp
add
dec
cmpsl
loope
jl
gs
adc
dec
xor
loope
aad
das
or
mov
sbb
repz
imul
add
loope
fwait
or
dec
mov
loope
rorl
ret
fld
dec
loope
jne
fbstp
cmpsl
add
jl
jbe
sub
push
lods
push
push
aad
jecxz
push
js
andl
xor
xor
mov
iret
repnz
push
jno
ret
pop
push
push
lahf
loope
jns
mov
fs
and
adc
push
cmpsb
js
adc
int
dec
dec
fldcw
and
loope
push
out
data16
lcall
iret
rclb
mov
pop
mov
loope
and
mov
or
add
mov
imul
popf
mov
add
loope
rol
dec
stc
dec
loope
cltd
pop
inc
push
cmpsb
push
jae
lods
out
loope
xchg
icebp
mov
push
cmc
inc
jp
das
and
cmpsl
movsl
xor
push
loope
pop
cmp
pushf
jb
dec
out
loope
lds
loope
mov
push
bound
add
xchg
push
movsb
aam
mov
loope
out
mov
jecxz
int3
loope
out
xorl
in
in
adc
sub
jnp
adc
jl
repnz
in
cmp
jmp
fcmovnbe
inc
shlb
cmpsl
loope
sahf
das
push
mov
out
and
rcr
lahf
xchg
pavgw
xchg
cmp
mov
pop
ljmp
inc
in
push
nop
imul
cli
sub
out
adc
loope
sbb
pusha
clc
mov
push
mov
jecxz
loope
xor
mov
aas
jg
scas
jae
adc
pop
int3
test
sbb
shl
xchg
jnp
outsl
lea
mov
fstpl
xchg
loope
and
testb
insb
loope
divl
inc
loope
xor
inc
in
mov
ret
pop
enter
sahf
push
ror
or
ljmp
loope
pop
loopne
out
fwait
jge
sbb
push
nop
adc
push
fucom
pop
cmpsb
test
imul
dec
ret
sbb
add
push
test
or
negl
cmc
and
and
xor
jnp
ret
mov
test
adc
jbe
mov
popa
push
movsb
jae
dec
out
dec
nop
add
mov
loope
add
sti
fxtract
mov
lret
rclb
sub
loope
in
inc
cmpsb
cwtl
mov
add
shr
insb
cli
repz
push
lea
fildll
fcmovnu
or
mov
sbb
in
push
lock
sbb
icebp
jmp
popa
incl
loope,pn
dec
cmc
std
div
pop
shl
or
lock
adc
cmp
gs
pop
aad
stos
into
rclb
ret
ds
loop
add
pop
loope
pop
mov
jnp
fiadds
cmp
xlat
js
loope
mov
test
rolb
xchg
mov
movsb
jge
call
sub
mov
and
pop
add
verr
mov
cltd
mov
add
jecxz
and
pop
movsb
sub
cmc
xor
jnp
shlb
arpl
cmp
mov
ficompl
fsubrl
sub
aam
loope
xor
data16
mov
push
mov
loope
mov
inc
cli
and
mov
int3
sub
out
or
out
jns
add
subb
lods
mov
cld
insl
dec
mul
loope
xchg
lret
jp
test
pushf
mov
mov
imul
and
mov
stos
add
repnz
bnd
ss
xchg
call
dec
fsubs
or
inc
lods
psraw
ja
roll
aad
loope
mov
pop
testb
pop
dec
hlt
jecxz
pop
lahf
dec
int3
and
orl
dec
xor
xchg
loope
icebp
lahf
lcall
lock
dec
sbbl
jmp
xor
push
fstpl
jmp
shl
xchg
adc
xchg
dec
movsl
loope
push
add
and
loope
mov
jbe
inc
cmp
testl
pusha
mov
pop
ds
movsb
shl
jns
push
stc
stos
cmp
xchg
xor
sub
pushf
and
jmp
notb
add
lret
lds
add
cmp
or
pop
mov
hlt
mov
mov
arpl
sbb
mov
and
loope
lods
push
in
inc
ds
aam
arpl
shlb
or
lods
sub
popl
lret
or
inc
dec
jl
cmpsb
xor
or
mov
scas
xor
sbb
ja
imul
shr
andb
and
xor
aas
loope
jnp
dec
cwtl
pop
pop
xor
jo
imul
jo
inc
stc
mov
je
scas
mov
sarb
test
pop
lock
out
push
pop
or
and
fcoml
loope
ds
les
call
cmp
loope
aas
adcb
shr
loope
and
cltd
mov
in
inc
mov
and
pop
les
popa
add
imul
out
pop
fcoml
loope
sarl
adc
loope
mov
xlat
adc
or
loope
and
xor
mov
cmpsb
pop
aad
mov
xchg
sbb
aas
stos
out
adc
roll
inc
mov
mov
loope
mov
push
ret
xchg
cmpsl
popa
loope
inc
sbb
pop
inc
gs
movsl
andl
sub
test
loope
ret
pop
push
stos
loope
dec
and
pop
mov
xor
hlt
mov
gs
int
jne
arpl
pop
out
loope
fsubrl
xlat
jb
test
and
xchg
not
rcrb
mov
mov
dec
mov
mov
les
xchg
fbld
repnz
loope
loopne
xor
sbbl
mov
aaa
adc
cmpsb
loope
xchg
xor
adc
mov
pop
std
js
cmpsl
pusha
jnp
cmp
enter
andb
cmp
adc
mov
aam
dec
pop
andl
sbbb
in
loopne
jge
fldl
addr16
in
lds
mov
ljmp
test
adc
sub
movsl
loope
mov
mov
dec
or
add
or
cltd
bound
add
daa
stc
or
js
outsl
inc
add
sbb
mov
stos
cmp
xor
outsb
jbe
loope
popf
push
cltd
ret
add
pop
mov
pop
leave
iret
cmp
lea
xor
insb
cmp
daa
aas
cmovno
xchg
int
ljmp
je
xor
adc
jns
in
shl
mov
shl
daa
push
mov
adc
jle
or
lahf
or
inc
and
out
xchg
mov
mov
out
loope
in
sub
dec
mov
push
aaa
and
fldt
pop
inc
subl
mov
loope
cs
cld
mov
mov
jge
pop
inc
jbe
sub
and
lret
movsb
stos
mulb
dec
xchg
mov
mov
sbb
mov
inc
mov
lock
inc
movsb
insl
cwtl
sbb
push
jbe
mov
daa
pop
out
loope
stos
add
test
xchg
lret
and
inc
and
imul
fbstp
mov
loope
pusha
imul
loope
fsts
adc
aam
lock
mov
imul
negl
in
push
loope
xchg
or
push
mov
std
stc
cmp
sub
mov
xchg
cli
in
mov
mov
int
xorl
loop
ss
cwtl
sbb
imul
and
mov
sub
iret
push
pop
repnz
iret
in
mov
xlat
inc
xchg
mov
daa
fsubl
int3
jo
fwait
inc
loope
sahf
lcall
xchg
mov
loope
lret
xchg
pushf
loop
jo
push
cmpsb
sbb
jb
xchg
pop
loope
dec
cmc
stos
aaa
and
push
cmp
cs
pop
jno
pop
data16
dec
adc
mov
lock
mov
lods
dec
jnp
jp
adc
repnz
dec
iret
and
rclb
mov
jle
xchg
jecxz
int3
std
andb
call
loope
mov
lret
dec
add
push
sar
and
test
mov
xlat
xchg
shl
scas
loopne
loope
test
aaa
xor
xor
mov
daa
movsl
mov
arpl
std
pop
negb
mov
out
imul
repz
aas
mov
dec
fcoms
adc
mov
pushf
mov
jl
loope
mov
xchg
cwtl
mov
loope
sub
mov
shlb
dec
repnz
outsb
xchg
dec
dec
adc
ja
jns
mov
popf
mov
push
pop
dec
out
jno
lods
jb
fs
pop
loope
cmp
rcrb
es
rol
sbb
sub
hlt
in
jo
push
dec
ss
scas
sub
out
mov
xchg
hlt
loope
xchg
sub
loop
mov
call
arpl
arpl
int
movsl
add
push
xchg
sti
mov
and
jno
fdivs
xchg
sahf
xchg
aad
ss
rorb
repz
pop
or
arpl
loopne
lret
insb
jbe
mov
sbb
out
cmp
mov
add
imul
scas
shl
call
leave
rcrb
adcb
loope
out
sub
loope
ficompl
jns
je
int3
sub
and
out
loope
pusha
into
xor
movsl
mov
mov
loop
sbb
iret
fsub
push
push
jmp
sbbl
mov
loopne
jo
mov
xorb
sub
lock
cmp
jmp
nop
loope
add
loope
push
int3
rcll
dec
sub
ret
and
jne
in
ja
jbe
loope
call
cmp
or
loope
popa
repz
insl
mov
xchg
xlat
push
inc
je
popf
mov
ja
bound
loopne
sub
xlat
ss
out
cmpsl
outsl
loope
shlb
rorb
cmp
shr
jp
in
in
xlat
mov
jmp
movnti
loope
movsb
sub
into
xchg
repnz
nop
lods
sub
jg
loope
dec
std
fisubrs
subb
insb
adc
mov
lods
movsl
movsb
data16
cmp
in
mov
loope
test
mov
mov
aas
adc
lahf
sub
arpl
jo
pop
jmp
les
or
lahf
jl
mov
out
xor
scas
mov
or
fidivrs
ja
xchg
push
loope
fldt
cmp
outsl
mov
adc
mov
mov
pop
jp
xor
cwtl
jno
pop
orl
push
adc
mov
loope
sbb
pop
cmp
inc
popa
loope
dec
lret
aaa
test
mov
and
xor
mov
dec
out
mov
sbb
lea
movsb
icebp
pop
loope
rcl
add
movsl
sub
cvtdq2ps
push
repz
lahf
lret
loope
arpl
insl
jg
cmp
loope
xchg
loope
loop
nop
in
mov
dec
loope
mov
pop
mov
mov
mov
fcoms
in
mov
xor
ret
dec
cmp
mov
fnsave
push
add
xchg
aaa
lods
mov
arpl
loope
fcoms
xchg
loope
push
pop
pop
je
filds
xchg
mov
jecxz
mov
jmp
xor
movzwl
inc
mov
sbb
stc
loope
fidivs
inc
loope
jno
pop
notb
xor
std
mov
cmp
add
fsubl
shll
xchg
pop
mov
pop
repnz
push
loope
test
pusha
pop
stos
mov
loope
outsl
add
dec
call
mov
jp
mov
insl
xchg
neg
mov
fstpl
loope
xor
outsb
cs
clc
xor
shlb
inc
cli
lock
loop
inc
ljmp
lods
std
add
pop
jmp
test
addr16
cltd
dec
pop
push
mov
int
subl
dec
mov
scas
sub
cli
sub
ja
lret
push
mov
pop
adc
pop
loope
dec
mov
hlt
loope
sbb
test
mov
mov
add
into
test
cs
das
jmp
enter
xchg
aas
pop
adc
imul
pop
fdiv
jmp
mov
and
or
iret
jnp
cmp
push
popl
lret
scas
loope
sbb
ja
loope
cltd
scas
and
pop
sbb
jo
fs
js
out
jmp
adc
jo
jnp
or
sub
loope
pop
mov
loope
call
mov
jbe
push
push
mov
jge
mov
jb
push
iret
comiss
popa
jo
pop
cmp
call
mov
push
fbld
gs
test
mov
add
push
xlat
add
xchg
loope
hlt
je
clc
mov
inc
std
xchg
and
popa
pop
outsb
add
or
out
pop
inc
scas
jo
arpl
loope
pop
imul
mov
mov
data16
ss
testb
adcl
jecxz
sub
lret
jle
lods
in
xchg
or
mov
and
js
mov
out
sub
out
andb
aas
xchg
sbb
or
fs
ret
jae
inc
dec
loope
iret
add
loope
and
int3
inc
daa
mov
movsb
popf
push
push
sbb
xchg
loope
pop
push
ret
xor
scas
adc
dec
leave
jle
push
jg
imul
daa
jnp
fstl
or
cmpsb
add
sbb
nop
mov
loope
jno
jg
mov
ss
push
emms
inc
dec
cs
and
dec
inc
mov
mov
loope
jo
dec
add
ficomps
xchg
daa
loope
cmp
pop
jmp
xchg
inc
sub
mov
mov
mov
jo
ljmp
mov
and
das
mov
sub
mov
sarb
adc
lcall
mov
sub
test
ss
mov
mov
pop
or
push
loope
dec
push
and
out
xor
and
loopne
sub
daa
es
dec
lds
push
jle
xchg
psraw
jge
and
dec
movsl
mov
mov
mov
sub
jmp
pop
lock
pop
leave
cmp
sub
shl
jno
std
jecxz
xchg
loope
lcall
lock
push
push
loope
jmp
stos
jecxz
mov
fs
loop
and
dec
movsb
daa
dec
outsl
ret
loope
testl
pushf
je
imul
mov
loope
rclb
mov
loop
xchg
mov
or
ja
cmpsb
movl
nop
push
es
loope
insl
subl
daa
outsb
iret
sub
add
mov
out
adc
xchg
add
int
jecxz
jmp
lcall
push
scas
jno
xlat
sub
cmp
jo
fidivl
loope
adc
stc
loope
sahf
popa
inc
pop
arpl
jnp
call
loope
loop
mov
dec
push
dec
ds
bnd
inc
bound
nop
shll
inc
nop
push
mov
shlb
ljmp
in
adc
mov
leave
inc
loope
pop
push
inc
xchg
add
shl
mov
xchg
call
and
sbb
loope
adc
lret
enter
movl
ret
or
dec
nop
cld
jmp
loope
sbb
pop
icebp
loopne
popa
inc
xchg
pop
jo
sbb
sub
in
sarb
mov
loope
mov
jge
jb
or
std
jo
aam
xor
push
xchg
loope
jb
leave
ja
dec
ljmp
jp
sub
cmp
dec
mov
loope
lock
aam
dec
or
ret
adc
lods
popaw
sbb
shll
lock
xchg
xchg
lret
test
sbbl
repnz
cmp
loope
pop
mov
xor
sbb
push
in
xchg
push
loope
jg
push
loope
sbb
push
pop
ljmp
jecxz
lret
loope
into
sbb
in
cmpsb
loope
subb
loope
xor
jae
call
outsb
sub
or
mov
cmpsl
jnp
lock
dec
in
push
lock
xor
push
mov
and
loope
xchg
xlat
and
in
adc
aam
pop
jo
mov
addr16
loope
mov
testb
xor
push
stos
jl
lods
jne
jmp
imul
cmc
or
mov
mov
pop
cmp
gs
mov
stos
ja
loope
xchg
jno
xchg
mov
jb
ss
stos
addr16
loope
into
lret
pop
xchg
shl
ja
and
and
jo
aam
push
movsb
lret
mov
xchg
loope
lcall
mov
xchg
xor
jb
xor
xchg
loope
in
mov
loope
dec
and
jns
push
fldenv
mov
push
fiaddl
dec
jmp
aas
rclb
dec
mov
lock
xor
inc
loope
ret
xchg
inc
jb
das
hlt
out
sub
or
addr16
sbb
fstl
inc
out
cmp
push
in
mov
fwait
lods
shrb
pop
add
add
pop
xor
jno
out
test
outsb
out
mov
or
cld
stc
fdivl
sbb
mov
mov
sbb
movsb
fldl
out
or
add
sub
adc
iret
loopew
daa
and
jl
insb
mov
jg
icebp
loope
pop
jbe
nop
and
popf
pop
fsubs
push
ds
xchg
loop
jae
and
dec
mov
and
in
inc
mov
xchg
loope
mov
jmp
fldcw
in
xchg
adc
js
jae
inc
pop
mov
outsb
insb
cmp
jge
cmp
sbb
dec
loope
xchg
sbb
jne
add
cwtl
test
jo
test
cltd
push
mov
mov
inc
inc
or
lahf
or
packuswb
push
pop
xchg
movsl
fwait
dec
mov
jb
or
add
in
leave
mov
mov
or
sbb
clc
call
jmp
addl
dec
or
adc
fs
test
xchg
loope
mov
mov
ret
lds
mov
xor
inc
inc
or
cmc
test
xor
pop
loope
jmp
mov
loope
xchg
cwtl
add
lods
sbb
in
daa
jl
ljmp
sahf
cmpsl
pop
adc
out
inc
test
fld
loope
in
fucom
sbb
cmp
pop
mov
loope
stc
push
mov
jo
fsts
fs
sub
shrb
loope
hlt
fcoml
and
fwait
call
loope
sub
lret
stc
data16
int3
jbe
ss
or
loope
and
mov
outsl
dec
out
in
inc
xchg
aam
pop
or
pop
xlat
jmp
loope
mov
mov
cmp
and
shrb
pop
dec
xchg
hlt
jecxz
mov
loope
push
or
loop
loope
mov
mov
adc
jb
sub
jmp
loope
sarb
call
push
cld
repnz
neg
loope
stos
leave
inc
ret
mov
jo
movq
dec
loop
push
push
repz
jne
test
cld
or
movsl
or
mov
and
fsubs
scas
jmp
jo
incb
xchg
out
jb
jbe
loope
add
lock
cmp
mov
sub
lcall
xchg
dec
test
test
or
mov
and
decl
xor
inc
jle
bound
xor
add
cmp
xor
add
in
test
or
jae
test
cmc
loope
fidivs
subl
jmp
test
add
insb
mov
and
arpl
mov
add
dec
mov
xchg
and
fsubr
or
mov
push
std
mov
mov
scas
sub
xchg
adcl
shr
and
mov
pop
mov
jno
pop
cld
jecxz
inc
je
repz
xchg
push
sbb
loope
es
jge
ja
test
add
sbb
and
inc
dec
loope
xlat
push
pushf
dec
loope
repz
pop
mov
jmp
jmp
cmp
loope
cli
jle
popf
das
shlb
lock
sbb
jg
cmp
add
loop
xorb
cmp
jno
test
dec
shl
loope
popf
mov
fisubl
or
int
dec
xchg
clc
mov
xchg
cwtl
sub
loope
mov
lods
int3
rolb
int
push
mov
adc
mov
bound
faddl
loope
push
test
sbb
std
mov
int
mov
adc
mov
sub
pshufw
out
les
pop
or
stc
loope
dec
callw
cmp
loope
in
and
es
iret
jno
cmc
mov
mov
negl
jmp
mov
fsubrs
inc
pop
xor
jo
mov
jnp
in
mov
pusha
jns
mov
movsb
data16
insb
jbe
fcomip
in
mov
mov
stc
out
pop
pop
fildl
cwtl
rorb
xlat
jae
pushf
lcall
jnp
icebp
mov
lret
sarb
popa
clc
pop
insb
jg
loope
sub
inc
loope
arpl
movsl
loope
int
lret
or
jns
insl
sub
jnp
popa
inc
nop
mov
rolb
orl
call
ja
clc
xchg
push
outsb
fisttpl
ljmp
mov
dec
adc
cld
insl
mov
mov
movsb
sbb
insb
loope
je
call
mov
xor
loope
repz
stc
push
add
lock
loope
push
icebp
mov
mov
pushl
xchg
sbb
pop
mov
cli
jns
mov
push
xchg
fs
ljmp
aaa
adc
dec
cmp
or
pop
xor
jmp
mov
sub
or
aad
mov
or
loope
jle
and
cmp
loope
dec
pop
nop
xchg
stos
adc
mov
popa
test
fiadds
out
rcll
sahf
rorl
sub
dec
cld
pop
lods
loope
les
push
loope
jbe
push
and
ud1
mov
jle
push
cld
or
xor
aas
cmpsl
sbb
push
sbb
mov
stc
mov
cmc
gs
cltd
adc
cli
jmp
enter
loope
fst
sarl
lret
int
jle
dec
daa
into
nop
push
cld
and
jmp
loope
shll
cmp
loope
add
cmp
push
sub
ret
jnp
hlt
inc
xor
aas
mov
sbb
add
fstps
loope
in
mov
jmp
sarb
loope
sub
loopne
add
mov
fwait
xchg
push
or
fidivl
addl
lds
fisttpll
mov
addr16
sbb
aam
mov
xor
fisubrs
pop
inc
daa
movsl
xchg
lods
ss
jge
or
gs
mov
xor
adc
inc
mov
ja
lret
mov
cmpsl
vprotw
data16
nop
loop
icebp
mov
jb
mov
sbb
rolb
add
and
dec
loope
aam
mov
jl
lcall
pop
insl
inc
rcl
out
in
push
xchg
subl
dec
loope
rcr
pop
mov
mov
stos
fs
cmc
xor
mov
push
loope
mov
imul
stos
fiadds
daa
jp
xor
sbb
repz
xor
cmp
sahf
add
loope
std
stos
jge
lcall
pusha
cmp
jbe
pop
cmc
dec
je
jmp
and
cmp
fs
addr16
xlat
aas
mov
loope
sbb
sbb
sti
cmp
mov
sub
loope
aaa
push
loope
sub
pop
pop
stc
dec
jno
pop
loope
jns
int
int3
xchg
jae
les
mov
and
icebp
ds
pop
stos
sub
mov
insl
add
jnp
std
mov
repz
movsl
loope
fiaddl
rclb
cmp
mov
rcrb
lahf
cmpsb
lock
push
mov
jg
in
pushl
jl
sub
fsubl
popa
pop
mov
mov
mov
push
loope
or
and
addr16
movsl
jne
in
in
pop
loope
mov
and
shlb
cmpsl
je
push
or
xlat
jne
xor
xchg
loopne
jg
jecxz
xorl
pop
aam
les
mov
xlat
add
loope
into
jp
shll
mov
pop
scas
es
jno
push
call
push
push
out
shlb
inc
cld
cmp
cltd
iret
loope
fcmovb
or
ret
mov
outsb
push
mov
jae
out
push
jnp
aam
and
xchg
loope
or
cmp
mov
push
jecxz
repz
data16
or
inc
aas
arpl
mov
or
mov
aaa
or
cmp
sub
loope
pop
enter
js
loope
mov
xchg
arpl
mov
and
push
sbb
shl
and
ficompl
pushf
push
loopne
adc
loope
popa
mov
mov
mov
dec
push
add
mov
jmp
arpl
dec
xor
cltd
test
inc
jae
shll
sub
sub
or
inc
shrb
push
lret
or
mov
sar
inc
push
loope
testl
xor
loop
mov
loope
clc
inc
mov
sarb
xor
dec
aam
hlt
fs
roll
cltd
xor
mov
aaa
loope
jl
cmp
aas
pop
loope
out
push
movsb
stos
mov
jno
pop
xchg
icebp
test
stc
aas
push
loope
and
leave
cli
loope
mov
lds
or
imul
mov
push
or
ja
push
arpl
lcall
dec
shrb
mov
rolb
pop
out
adc
mov
add
push
push
cltd
adc
fwait
and
or
nop
and
sub
negb
int
sub
leave
loope
fwait
pop
push
jo
stos
inc
enter
pusha
dec
dec
das
je
loop
mov
pop
jo
fwait
sarb
orl
add
push
ret
fsubrs
inc
shr
xor
mov
loope
xchg
mov
jge
sti
add
mov
movsb
test
repz
adc
out
out
lods
mov
or
inc
push
xchg
loope
addr16
loope
das
popa
inc
lea
loope
push
cmpsb
adc
les
and
mov
fsubs
mov
enter
imul
movsl
jl
out
int3
aas
loope
jne
stos
stos
stc
call
roll
cmp
jo
icebp
cmc
mov
jecxz
xor
mov
pop
test
andl
in
into
shl
sbb
dec
fildl
jb
and
sbb
add
imul
mul
cmp
or
hlt
loopne
lock
mov
cld
rcrl
cmp
data16
ret
jmp
mov
mov
pop
sbb
adc
sub
mov
jmp
lock
cmp
push
or
push
mov
loope
out
push
mov
mov
ss
popf
mov
addr16
mov
loope
pop
cltd
inc
push
push
mov
and
fs
cmpb
loope
add
popa
sbb
loope
mov
cmp
aaa
xchg
stc
loope
jne
pop
mov
adc
lock
in
jmp
and
andl
fdivs
es
cmpsb
xchg
pop
nop
pop
push
lret
psraw
out
mov
dec
add
fsubp
jo
imul
or
loope
mov
int3
sub
mov
pop
loopne
inc
mov
rolb
jmp
mul
mov
mov
loop
scas
lods
xlat
sti
nop
and
loope
push
aas
movsl
mov
pop
cmpsl
mov
cmp
in
lock
mov
jecxz
clc
in
pop
loope
push
pop
dec
push
das
xor
ror
pminsw
insl
jmp
negl
ds
cmp
pop
les
pop
mov
sahf
loopne
scas
lds
aam
aaa
mov
insl
ds
sub
sahf
lcall
loope
push
xchg
jecxz
in
ljmp
sti
xchg
popf
cmp
xchg
mov
adc
iret
in
add
shlb
fdivl
arpl
and
add
jecxz
mov
add
loop
in
adc
loope
roll
loope
mov
jae
loope
dec
fnstenv
jnp
push
std
sub
add
inc
push
jo,pt
test
mov
pop
sub
push
loope
mov
sbb
and
loope
xchg
mov
mov
in
rolb
dec
and
loope
push
pop
sbb
mov
sub
cltd
loope
xchg
and
inc
loope
mov
mov
leave
sub
pop
push
shrl
loope
inc
dec
mov
push
mov
inc
test
leave
add
clc
shlb
mov
loope
or
sbbb
loope
outsl
mov
push
sub
sub
shrb
call
pop
sub
push
fdiv
loope
xchg
xor
sahf
loope
out
push
mov
add
cli
cmp
aaa
pusha
loope
push
adc
pop
mov
adc
xlat
mov
clc
cmp
ret
in
call
ljmp
shrb
or
in
rcrb
iret
push
and
push
neg
orl
mov
loope
imul
loope
loop
mov
xchg
lods
dec
jp
sbb
jge
pop
or
loope
nop
les
jns
mov
test
arpl
add
cmp
mov
sub
add
hlt
fstpt
movsl
in
cmpsl
add
xor
jne
jae
insb
in
lret
dec
mov
rcrl
imul
xlat
add
loope
inc
mov
dec
mov
aam
xor
adc
jmp
jge
cltd
add
loope
in
push
pop
mov
clc
cld
loope
fcomip
rclb
in
mov
imul
jae
mov
dec
insb
call
add
inc
lret
mov
in
addb
cmp
rcrb
cmp
jg
xchg
jmp
jne
roll
ds
imul
clc
in
outsb
xor
leave
sbb
push
pop
add
push
xchg
in
sbb
loope
jno
and
pop
lods
out
sub
jns
mov
fisubrl
push
mov
fildl
sub
in
mov
xor
push
lock
push
in
push
ljmp
and
outsl
loope
rolb
mov
inc
aas
loope
rolb
shrb
std
and
jecxz
js
add
inc
out
out
icebp
mov
sahf
mov
push
push
repz
jae
pop
lahf
sbb
lcall
fucompp
jg
mov
sub
out
test
add
mov
out
loope
sti
lds
loope
in
out
add
shlb
pop
ficoml
add
pop
xor
xchg
or
sub
cli
shr
shl
push
jl
loope
inc
icebp
clc
daa
inc
mov
sub
xor
xchg
arpl
push
inc
fsub
lret
loope
sub
pop
inc
sbb
lret
call
mov
sub
dec
mov
or
pop
inc
dec
int
mov
lar
mov
arpl
push
mov
mov
push
cltd
repnz
pop
and
imul
shrb
and
orl
mov
nop
mov
cmpb
insb
cmp
jecxz
cmpsl
add
mov
mov
loope
lea
and
sub
and
stos
xchg
add
xor
sbb
mov
mov
mov
mov
sbb
fldt
adc
push
fdivl
mov
inc
jmp
loope
adc
fildll
sbb
jmp
insl
mov
aaa
sbbb
punpckldq
iret
loope
ss
les
push
inc
sbb
and
aas
icebp
xor
clc
add
fwait
and
fistl
pop
jne
xchg
stc
prefetchw
loope
mov
mov
cmc
xchg
xor
cmp
pop
jecxz
fimuls
mov
repz
pop
sbb
loope
out
mov
inc
push
add
negb
filds
mov
pop
hlt
add
iret
aaa
loope,pn
add
and
insl
loope
inc
mov
popf
popa
adcl
cmp
mov
in
sub
and
into
pop
cli
lock
mov
cltd
pusha
lea
or
add
cmp
jmp
adc
and
inc
in
in
test
out
shl
cmp
pusha
mov
pop
xchg
mov
inc
push
mov
dec
dec
loope
pop
int3
in
sub
pop
fisubrs
ljmp
loopne
clc
push
bound
loope
push
adc
mov
xchg
mov
loop
xor
add
mov
xchg
and
mov
incl
rorb
fndisi(8087
push
jle
push
and
shlb
ja
mov
imul
mov
iret
rorb
pop
imul
aad
jb
in
xchg
call
inc
pop
stos
adc
mov
in
scas
xchg
je
loope
sbb
cmpsl
or
mov
imul
inc
sahf
mov
xor
adc
in
mov
and
bound
push
out
loope
stos
imul
subl
dec
jns
incl
jns
adc
jge
mov
and
test
into
jl
out
leave
shl
mov
add
loope
sbb
outsl
cmp
mov
xlat
scas
jg
stos
data16
mov
loope
iret
cld
jbe
lock
or
test
mov
sub
ss
shr
sub
cmpsl
sbb
sub
loope
bound
xchg
movsl
xor
inc
pop
loope
xor
jge
ret
adc
stc
jmp
js
adc
ficompl
and
dec
inc
loope
enter
hlt
cmp
pop
xchg
xlat
dec
rol
loope
enter
fists
jg
mov
adc
pop
cmpsb
sbb
jp
out
loope
lahf
xlat
cmp
loope
in
dec
dec
mov
jp
mov
sbbl
jge
lock
xlat
andb
aad
stos
test
pushl
or
in
leave
imul
ljmp
cmc
mov
pop
lock
xor
push
xor
dec
sbb
push
cmc
mov
jns
insl
and
aad
arpl
mov
push
and
jp
mov
rclb
fwait
jmp
pop
xlat
cmp
mov
outsl
dec
mov
mov
adc
jle
xor
ja
mov
cs
mov
pop
pushl
push
nop
mov
push
into
pusha
lds
and
mov
mull
xor
rorb
bound
jne
loope
mov
pop
mov
scas
pop
loope
and
stos
xchg
push
and
scas
push
and
jp
jmp
xlat
call
mov
out
xorb
sbb
pop
mov
jmp
sti
xchg
sub
push
stos
push
pop
ret
into
rorb
fldl
jo
aaa
mov
and
insl
add
outsb
and
sub
dec
push
jo
mov
jo
jl
loope
add
push
sahf
mov
jmp
cmpsb
and
cmpb
fisubrs
lret
loope
cmc
fdivrl
jmp
adc
popa
cmp
ds
adc
sbb
adc
negb
lcall
les
daa
insb
popf
in
adc
outsb
pop
je
mov
ret
pop
or
mov
fsub
dec
or
push
js
fisubrl
cmp
das
sbb
sbb
jle
and
sbbl
imul
shrb
enter
data16
jae
repz
lock
scas
divl
sarb
push
icebp
cli
adc
pop
mov
adc
das
xor
shl
sub
pop
mov
aad
int
and
mov
pop
enter
or
xor
sbb
sbb
sarb
push
xor
outsl
in
int3
mov
and
mov
dec
iret
jb
inc
add
inc
jno
fiaddl
loope
movsl
push
or
pop
xchg
dec
loope
jae
mov
lods
push
xchg
lcallw
jno
aam
loope
mov
add
sbb
out
test
adc
adc
inc
xchg
scas
add
push
loop
nop
jns
lods
mov
pop
mov
xor
add
inc
sahf
loope
out
int
fs
or
mov
std
pop
shr
test
movsb
repz
pusha
bound
jnp
call
fstpt
mov
outsl
mov
pusha
mov
js
nop
xchg
xor
std
pop
in
pushf
loope
shlb
push
inc
aaa
shll
ljmp
outsl
lcall
loope
xlat
sahf
jecxz
aam
and
mov
push
or
mov
call
idiv
or
loop
push
clc
lods
loope
cmpsl
sub
loope
roll
sar
inc
add
dec
lods
mov
pop
push
fstpl
test
mov
outsl
adc
loope
cmp
push
xor
add
jecxz
loope
movsl
push
dec
les
arpl
sahf
jmp
mov
inc
mov
or
pop
mov
loope
sbbb
int
jno
loope
jge
popa
mov
aaa
loope
dec
pop
cmp
xlat
pop
mov
and
stc
add
repz
adc
add
mov
sbb
and
sahf
jl
mov
loope
xchg
or
or
es
push
sub
mov
or
loopne
xor
xchg
mov
es
jns
scas
ds
jmp
fldl
ljmp
movsl
test
add
insl
loope,pn
mov
loope
mov
mov
test
jecxz
into
loope
mov
out
ja
adc
fmul
add
orl
in
sti
xchg
iret
or
jns
sub
loope
popf
pop
test
ljmp
shl
pop
aam
jno
mov
push
aas
fidivrl
adc
fwait
push
mov
dec
pushl
sar
inc
arpl
or
loope
addr16
mov
jbe
xor
or
enter
pop
lock
and
push
jmp
sub
mov
push
es
and
fstpl
jno
jge
cmpsl
mov
ss
jmp
lods
sbb
incb
movl
test
mov
add
aad
jne
or
in
mov
iret
das
sub
lods
out
sbb
pop
loop
loope
outsb
je
add
arpl
push
ret
loope
mov
push
jge
or
loop
mov
out
shl
push
push
pop
insl
mov
mov
sbb
std
jo
push
push
jmp
pop
jmp
mov
ja
in
mov
loope
mov
dec
pop
mov
fst
sar
pop
mov
std
loope
dec
test
sub
adc
pop
repz
xor
sarb
jns
mov
cmpsl
aas
movsl
cmp
rolb
fldenv
loope
jmp
sub
cmpsb
iret
or
mov
mov
push
lods
sar
and
jo
and
dec
mov
jmp
inc
mov
loope
pop
mov
call
in
sub
pop
ret
mov
loope
add
push
loope
inc
push
pusha
test
cwtl
mov
xor
insl
popf
xchg
inc
rcrb
lret
in
in
lock
push
pop
sub
sbbl
push
jmp
in
loope
dec
or
repz
fwait
lahf
mov
bound
shl
and
push
ds
jmp
xorl
sbb
adc
mov
and
decb
xor
mov
loope
dec
ljmp
es
mov
out
popf
fisttpl
jecxz
push
into
jge
jb
imul
mov
push
jl
jecxz
clc
adc
dec
in
push
imul
das
fs
or
js
inc
mov
push
sub
add
xchg
sbb
lea
mov
xchg
mov
mov
push
jae
adc
ret
adc
stc
je
adc
ffreep
xor
push
mov
addr16
fdivrl
push
das
loope
xor
add
push
insb
xchg
fwait
std
and
xor
sarb
jo
xchg
mov
cs
dec
stos
add
mov
push
pop
lahf
mov
push
gs
movsb
xlat
and
testb
imul
shr
fisubs
add
loope
xchg
jg
test
push
loope
in
inc
pop
push
adc
dec
lret
xlat
mov
xor
lock
or
inc
xchg
test
mov
fnsave
inc
andb
pop
xchg
stos
sbb
xchg
mov
lret
push
jno
jo
daa
shlb
add
jecxz
adc
dec
jbe
cmp
or
pop
loop
loope
push
xor
sahf
jg
loope
dec
or
outsl
cmpsl
ret
mov
sbb
push
jl
adc
loope
stc
cli
adc
xlat
test
or
int3
into
loope
adc
frstor
and
leave
add
or
into
mov
and
ret
frstor
pop
fsubrl
shrb
jl
ljmp
out
sbb
xor
mov
pop
mov
insl
xchg
js
ret
loope
lock
adc
jae
loope
cmp
mov
loope
dec
jns
cmp
jb
and
nop
jmp
aam
std
loope
insl
push
sub
data16
pusha
js
nop
sub
or
repz
test
and
stos
jo
inc
loope
jno
lret
clc
int
or
sub
movsb
or
and
or
ret
jno
lea
push
pop
xor
out
pop
jmp
repz
loop
iret
jge
daa
loope
pop
pop
jmp
mov
pextrw
aas
out
lahf
leave
inc
fndisi(8087
adc
loopne
fmulp
in
jl
mov
lret
fsubl
shrb
cmp
movsb
mov
loope
pop
pop
pop
les
ljmp
cs
mov
inc
mov
push
loope
mov
cmc
xor
dec
mov
std
imul
loope
fstpl
sub
mov
loope
or
jmp
mov
sub
loope
cmp
icebp
xor
mov
jmp
xorl
adc
or
loope
aam
inc
xchg
jmp
std
sar
mul
rorl
loope
xor
cmpsb
push
stos
add
das
jge
cmp
sbb
jb
aam
loope
or
mov
jle
dec
or
sub
xchg
gs
and
cmp
sub
dec
sbb
inc
and
jg
shlb
in
pop
std
stc
aas
loope
movsb
adc
cmp
mov
push
out
xchg
inc
insl
les
jns
out
sub
pusha
ljmp
sbb
push
mov
arpl
shlb
in
into
push
dec
loope
leave
dec
lods
out
xchg
ret
test
mov
ljmp
ficoml
inc
lock
sub
in
ljmp
insb
mov
jmp
add
jo
rcr
fstpl
ss
cltd
pop
les
mov
sahf
test
das
arpl
mov
or
fwait
sbb
lcall
adc
jb
add
jmp
and
sti
jmp
sub
loope
pop
inc
je
lahf
pushf
push
shlb
sbb
or
xlat
jge
in
scas
jp
cmp
push
ljmp
jle
pushf
data16
xchg
loope
xor
xchg
cs
fcomp
pop
test
adc
shlb
scas
scas
out
mov
loope
ljmp
rcrb
xor
in
sbb
add
push
mov
xor
popf
push
adc
inc
sbb
out
into
adc
add
leave
loope
in
xchg
arpl
sbb
decb
scas
push
sahf
addr16
fsubp
movsb
adc
dec
loope
mov
aas
xchg
call
incb
into
or
int3
mov
and
loope
leave
mov
inc
rcr
aam
cwtl
int3
in
imul
loope
ficompl
sar
jecxz
and
les
cwtl
cli
cltd
ss
pop
outsl
or
mov
adcb
mov
out
loope
xchg
xor
xchg
outsl
das
loope,pn
dec
sarl
int3
add
sbb
cmp
push
push
xor
or
loope
xor
push
mov
cmp
mov
clc
inc
pusha
push
xchg
aad
mov
jmp
loope
adc
sub
mov
sarb
cmp
dec
leave
in
adc
out
loope
and
stos
pop
sbb
sub
out
mov
inc
pop
loopne
xlat
jo
mov
movsb
jne
fstl
iret
pushf
mov
adc
fnsave
fcmove
pop
scas
sahf
rcl
lahf
ret
call
xchg
jmp
push
mov
inc
adc
stc
mov
ja
loope
dec
in
cmpsl
in
sti
dec
push
fsub
and
aam
push
jmp
mov
jne
and
icebp
into
loope
jnp
loop
xchg
push
pop
mov
and
sti
push
test
mov
jg
inc
xsha256
ss
dec
xchg
ljmp
sub
rcl
add
in
xor
or
call
loope
fistl
jno
xor
lock
mov
loope
mov
and
loope
hlt
clc
push
sahf
or
out
pop
loope
mov
stos
jo
jg
mov
addr16
notb
mov
movsb
pusha
add
cmc
std
push
jmp
mov
mov
or
add
and
push
out
mov
jmp
adc
lock
cmp
jns
rcr
loope
in
daa
pop
xchg
scas
loope
xchg
and
lods
and
shll
shlb
aam
notl
xchg
cltd
mov
clc
dec
subl
sbb
loope
xchg
push
int3
and
sub
inc
in
out
xor
push
xor
loop
xorb
stos
sub
mov
pop
int3
es
fiaddl
loopne
aad
in
leave
ret
loope
fldenv
fwait
loope
dec
lods
fcoml
cld
push
icebp
loope
pop
shlb
lret
ds
or
fisubs
pop
lock
jp
out
sub
push
dec
mov
adc
cmpsl
cmc
in
sahf
dec
popf
insl
test
mov
ja
mov
ret
arpl
pusha
enter
and
ss
jp
scas
and
data16
push
jnp
push
dec
repz
clc
cmc
ret
insl
js
sbb
cli
adc
and
loope
and
cmp
adc
outsb
add
ret
adc
xor
sub
loope
or
mov
popf
and
or
cmpsb
mov
dec
xor
insl
out
cmp
loope
sti
and
add
mov
pop
pop
mov
mov
frstpm(287
adc
cmpsb
adc
pop
pop
in
imul
stc
mov
in
sub
loope
pop
push
cltd
pop
or
and
mov
lock
mov
pop
jnp
add
out
xchg
and
mov
jae
jmp
dec
xor
xlat
xor
mul
mov
loope
jle
stc
mov
adc
shr
imul
les
daa
adc
inc
loope
inc
mov
adc
xchg
jo
mov
in
sub
push
cmc
loope
ja
outsb
xchg
ret
loope
gs
leave
pushf
decb
je
mov
sbb
and
push
fisttpl
pusha
xlat
cmpsl
cli
and
dec
jo
xchg
nop
cwtl
fdiv
daa
and
leave
and
adc
sbb
or
xchg
dec
clc
mov
and
insb
xor
icebp
push
jnp,pt
dec
xchg
and
std
xor
push
push
in
jo
nop
popa
inc
imul
xchg
loope
popf
out
les
mov
imul
mov
lea
xchg
jmp
and
pop
and
int3
xchg
insw
pop
cmp
xchg
sbb
aam
gs
fnstenv
dec
xorl
stos
loope
imul
loope
jbe
shl
insb
in
inc
mov
movsb
cmp
lret
pop
fsts
in
push
bound
loope
arpl
sbb
xlat
cwtl
or
lcall
xor
and
daa
sub
sub
jge
ret
adc
shr
in
mov
mov
mov
insb
inc
mov
sarb
bound
push
std
loope
mov
mov
int3
andl
add
cmp
imul
insb
jecxz
or
and
push
scas
sti
imul
pop
push
lea
xor
sub
or
repnz
in
mov
fnstsw
sub
mov
xchg
mov
addl
push
or
cmp
loope
mov
pop
cltd
add
cmp
fdiv
lods
enter
loopne
and
and
dec
mov
mov
shl
push
int3
or
mov
jle
cmp
shr
loope
jnp
pop
sub
push
add
std
dec
test
int3
call
movsb
sub
loope
popf
mov
rcrb
loope
out
in
shrl
loope
xor
jmp
in
dec
int
test
and
mov
mov
jge
loop
test
jne
int
fwait
push
xor
scas
jl
popl
popa
loope
lds
adc
push
loope
adc
jo
fsubl
add
movsl
mov
loope
pop
jns
imulb
xchg
loope
gs
and
xchg
xlat
jmp
loope
das
mov
mov
enter
cwtl
mov
loope
aam
std
push
test
pop
mov
sub
pop
fisubrs
mov
jg
lock
ss
or
jae
pop
push
into
ljmp
lahf
ja
loope
ret
iret
call
jo
stc
adc
jmp
imul
test
je
imul
fidivrl
inc
rcrl
out
jp
sub
loope
mov
insl
loope
sub
leave
lcall
lods
mov
loope
test
push
xlat
enter
cmpsb
pop
add
dec
in
push
mov
movsb
xchg
lea
loope
or
jmp
mov
jp
xor
rcll
and
loope
cmpsb
mov
jle
stos
loop
aas
pop
loope
jae
mov
insb
xchg
loope
adcb
loope
fdivrl
dec
test
loopew
nop
mov
push
jo
ret
aad
loop
ret
loope
jl
fs
pop
stc
loope
mov
cli
jb
addr16
subl
push
call
int3
outsb
in
pop
aas
loope
dec
adc
sbb
add
xchg
in
arpl
mov
or
rcll
lods
arpl
mov
add
dec
in
test
add
daa
inc
inc
outsl
fiaddl
iret
hlt
js
mov
das
cmp
arpl
add
popl
jnp
jl
jmp
inc
cld
pop
out
loope
xor
in
and
loope
xchg
scas
dec
mov
xchg
repnz
subl
push
subb
loope
mov
test
loope
fcompl
cmp
loope
xchg
js
sbb
and
jmp
sub
or
icebp
inc
dec
loope
push
les
ds
loope
outsl
cltd
out
xor
sbb
add
loope
test
mov
lret
repz
push
sbb
xor
lock
cmp
jb
loope
pop
push
sub
sub
and
cmpsl
loope
std
add
pop
pop
loope
jmp
lea
inc
inc
test
mov
dec
add
push
call
xchg
and
mov
xchg
insl
loopne
sti
lods
int
loope
pop
mov
mov
data16
pop
lret
or
xor
jo
std
fsub
sti
or
pop
nop
cmpsb
xchg
ret
add
jmp
fmuls
loope
and
imulb
into
add
ja
mov
xchg
icebp
cmp
sbb
mov
add
fsubl
rorb
sbb
mov
mov
inc
fdivs
jecxz
xchg
add
sub
xchg
jmp
mov
sub
lods
ja
xchg
mov
inc
hlt
cmp
pushf
or
mov
xchg
xor
sub
mov
sbb
adc
mov
jbe
shlb
jno
adc
sub
jmp
pop
fisttps
push
dec
xchg
cmc
or
in
jmp
out
inc
out
jns
add
es
mov
loope
push
pop
inc
clc
sbb
inc
mov
add
out
adc
aam
mov
loope
lods
mov
test
loop
lret
pop
mov
popa
fadds
mov
and
repz
loope
sub
inc
push
cli
mov
jnp
add
sbb
mov
movsl
andb
gs
test
cmp
push
mov
loop
pushf
mov
pop
loope
mov
xor
loope
imull
bound
shl
test
fsub
lock
aad
leave
inc
jns
loope
dec
outsb
ljmp
imul
mov
sub
sub
dec
sbb
mov
push
xchg
sbb
mov
jo
pop
xor
jl
and
adc
cmpsb
cmc
loope
and
lea
ja
inc
jne
sbb
pop
mov
sub
or
out
incl
mov
jl
aad
pop
lock
out
mov
inc
loope
jecxz
xlat
xchg
mov
loope
das
cli
aaa
push
out
mov
loope
arpl
add
pushf
mov
loope
jnp
lock
lret
mov
loope
inc
pusha
imul
xchg
out
or
loope
icebp
mov
cld
shrb
cmpsl
mov
dec
mov
jmp
fildl
or
ret
and
or
int
and
cmp
sarb
sub
fs
add
add
xor
loope
test
pop
jg
in
shl
test
incl
or
loope
stc
jle
push
xor
int
dec
and
xchg
dec
mov
cld
je
sub
lock
data16
jl
sahf
in
cmpsl
popf
test
idiv
add
pop
loopne
cltd
outsl
movsl
out
insb
rcl
jo
movsb
xor
push
dec
lcall
push
cmp
loope
adc
jl
loope
outsl
fldl
loope
loopne
mov
pusha
and
inc
sub
adc
pop
out
loope
xor
mov
pop
daa
aaa
loope
sbb
mov
pop
jno
loope
mov
into
xchg
xchg
cli
sbb
jo
and
aam
outsb
pop
out
and
fcmovb
pop
pop
test
loope
add
adc
loope
push
sahf
or
sbb
mov
cmpsb
loopne
out
and
fmul
orb
jb
xor
push
and
xchg
loope
and
adc
and
ss
rorb
and
pop
loope
addl
xchg
gs
mov
jo
jbe
nop
cmp
cld
jns
loope
sbb
mov
mov
bswap
call
les
fwait
mov
mov
scas
loope
or
mull
jne
hlt
jecxz
jmp
jo
jae
mov
in
cmc
je
sub
mov
clc
cmpsl
mov
es
xor
out
fistps
mov
mov
jmp
dec
hlt
loope
sbb
sub
lahf
out
xor
loope
dec
pop
push
idivb
inc
icebp
add
outsb
jb
arpl
bound
loope
pop
sbb
sub
inc
push
rorb
xor
mov
jp
and
imul
pusha
sub
rolb
das
mov
mov
rcrl
and
sub
sti
mov
pop
cmpsb
mov
cltd
out
adc
sub
pop
pop
enter
jmp
mov
orb
dec
adc
ret
mov
loope
xchg
and
je
jmp
mov
push
add
dec
andb
xor
mov
mov
call
lods
test
sbb
bound
loope
mov
adc
shlb
jle
jp
adc
mov
sub
xor
jo
xchg
loope
adc
cwtl
stos
jns
sub
in
or
jg
add
or
aam
arpl
int3
bound
leave
enter
cs
sub
jno
in
push
out
ja
cmp
js
push
adc
jle
jmp
sahf
mov
dec
dec
cmp
mov
rcll
loope
ds
adc
loope
adc
pop
and
inc
jp
cmp
xor
test
add
mov
enter
sbb
lcall
add
jecxz
inc
out
stc
cmpl
jo
andl
dec
pushf
sbb
loope
mov
jne
std
add
push
and
mov
cmp
je
pop
lret
pop
jge
lods
dec
push
inc
loope
movq
loope
xchg
jno
fldenv
dec
jo
inc
mov
loope
test
xchg
pop
sbb
or
daa
test
loope
sti
jp
dec
jnp
loope
cmpsl
je
test
mov
jg
jecxz
js
fs
pop
xor
adc
lock
sbb
push
mov
mov
dec
out
test
scas
fcom
outsb
lret
dec
loope
xchg
push
xchg
pop
dec
loope
shr
xor
sarl
or
dec
dec
mov
lret
in
mov
rcl
sti
mov
loope
jnp
xchg
movsb
mov
and
jae
mov
je
cld
fwait
popa
push
mov
dec
outsl
pusha
scas
xor
fidivrs
push
and
jmp
lret
insb
loope,pn
in
nop
fstpt
daa
lock
idiv
mov
inc
in
sub
rol
mov
cmpsl
leave
sbb
das
in
xlat
inc
pop
loope
push
mov
cld
cmp
push
cmp
loope
std
jp
sub
repz
in
in
adc
mov
xor
mov
fs
mov
cmp
xlat
loope
and
aaa
pop
sahf
push
loop
inc
adc
xor
pop
loope
lock
pop
push
xorb
xchg
out
push
icebp
loopne
push
loope
cmp
cmpsb
ror
sub
rep
mov
insl
test
mov
mov
stos
fmul
or
jmp
jecxz
dec
jb
mov
mov
mov
loope
jbe
call
loope
idiv
dec
pusha
adc
push
daa
sahf
add
mov
sbb
addb
xlat
jmp
xchg
loope
cmp
add
std
imul
aaa
push
xor
ret
push
inc
inc
loope
add
sbb
push
loope
jne
sti
mov
fnstsw
gs
inc
insb
bound
mov
ja
mov
lock
rcr
mov
loope
das
jg
loope
int
xor
call
gs
es
xchg
int
mov
cmp
in
stos
mov
imulb
mov
test
mov
and
movsl
scas
loope
sbb
adc
mov
push
jmp
push
or
jmp
icebp
mov
roll
loop
inc
xor
sahf
mov
arpl
push
mov
jno
movsl
gs
loope
movsb
jnp
lods
loope
outsb
out
sbb
fidivrl
jmp
inc
stos
mov
loope
mov
mov
and
outsl
fildl
jmp
sbb
loope
sub
add
mov
jp
inc
pop
add
adc
aaa
cmpsl
loope
pusha
push
repz
mov
pop
loope
cmc
mov
mov
stos
adc
pop
inc
inc
push
xlat
jmp
adc
pop
xchg
js
lds
xchg
add
push
call
dec
call
jl
cmp
mov
lcall
mov
loope
xchg
cmp
loope
or
scas
cmp
daa
mov
aas
imul
inc
or
mov
pop
mov
movzwl
loope
push
test
pop
adc
in
rcll
lock
inc
jl
ja
cmp
stos
or
cs
lods
mov
in
mov
push
aad
lds
push
mov
ret
and
leave
addr16
push
adc
jmp
stos
bound
insl
clc
test
adc
ds
in
pop
jns
jmp
stos
push
loope
pop
dec
add
loope
dec
imul
mull
dec
cmp
mov
mov
push
cli
cmp
mov
pop
loope
sub
pop
cltd
inc
fnstenv
mov
dec
sbb
int3
xlat
icebp
ret
std
mov
jnp
or
push
loope
sbb
sub
cmc
arpl
xor
mov
inc
movsb
enter
jmp
pop
rcrb
hlt
loope
mov
add
loope
loopne
push
or
jle
scas
outsl
in
stos
shlb
mov
sub
aam
mov
imul
les
ja
mov
xchg
mov
dec
jne
imul
dec
loopne
mov
stos
fiaddl
or
ret
flds
xor
aad
in
in
les
insb
jecxz
loope
loopne
adcb
pushf
xor
aas
cmc
clc
cmpsl
imul
mov
mov
out
das
hlt
or
loope
xchg
ljmp
push
sub
and
in
mov
mov
and
push
mov
das
and
outsl
aaa
loope
cld
subl
cmc
sahf
pop
std
mov
das
fwait
mov
sub
loope,pt
mov
push
fbstp
adc
scas
out
imul
push
outsl
in
insl
das
loope
jb
pop
je
dec
loope
test
dec
mov
outsb
cmp
bound
fmull
sbb
or
loope
cld
xor
loope
fwait
bnd
stc
mov
ljmp
xchg
jp
pushf
push
loope
dec
lret
repz
sti
loope
int
lods
xchg
pop
outsb
movsb
in
or
cmpsb
push
subl
incl
cmp
mov
jmp
ja
pop
and
loope
jmp
mov
in
fistps
xchg
decl
mov
cmp
aaa
add
fs
jns
loop
jp
mov
pushf
push
jnp
insb
and
pusha
cwtl
aam
das
pop
jle
bound
inc
sbb
loope
cmp
cmp
loope
pop
sahf
decl
xor
sarb
adc
imul
inc
iret
xchg
shlb
pop
icebp
in
lock
sbb
lret
xchg
cmp
std
addb
mov
inc
loope
and
js
jmp
loope
test
ss
loope
xlat
mov
shl
clc
inc
pop
imul
roll
mov
mov
shl
cmp
pop
mov
ret
loope
cmc
inc
shl
xchg
adc
or
mov
cwtl
add
movsl
rcrb
ret
pop
cs
jne
mov
cmp
scas
or
mov
jb
lahf
out
xor
loope
js
jbe
lea
ljmp
loop
cmpsl
faddl
dec
sbb
shl
adc
arpl
stc
jg
adc
mov
in
je
gs
push
loopne
jmp
repnz
jecxz
inc
in
std
insl
rorl
sub
clc
scas
lahf
jle
loope
sub
jo
icebp
mov
jmp
adcl
dec
shl
fmul
add
idivb
sbb
in
mov
xchg
aas
push
mov
loope
sti
mov
jb
ljmp
or
negb
add
sarb
cmp
mov
push
and
mov
sbb
jno
sbb
mov
aad
rcl
mov
or
inc
mov
jno
push
sbb
adc
jae
insl
mov
loope
cs
rcll
fiaddl
les
inc
cld
outsb
loope
lcall
scas
shlb
iret
loope
push
lea
rcl
add
mulb
or
xchg
jns
pop
sub
loope
leave
mov
imul
jns
push
mov
mov
inc
loope
mov
bound
loope
xchg
sbb
loope
mov
lea
loope
mov
stc
mov
lret
loope
mov
and
xchg
ds
xchg
int
loope
in
repnz
adc
cmpsb
inc
push
mov
loope
mov
pop
loope
ljmp
loope
and
add
pop
mov
in
loope
negl
xor
loope
pop
sub
shlb
xor
mov
push
cmp
fwait
in
xlat
pushf
loope
push
dec
js
out
and
xchg
mov
sub
pop
sbb
mov
loope
and
mov
jl
scas
inc
sbb
shr
mov
loopne
fildll
pop
adc
int
loope,pn
xchg
clc
push
xlat
loope
cmp
cmp
push
adc
hlt
mov
repz
xchg
mov
jae
mov
pop
cltd
ja
loope
cmc
push
push
xchg
es
and
push
sahf
mov
loope
jnp
adc
push
mov
push
jmp
jmp
mov
lods
into
jp
test
fistpll
push
int3
loope
daa
jne
js
sub
push
out
mov
inc
jg
imul
jecxz
or
pop
pushf
sbb
movsb
mov
ljmp
cwtl
loope
xor
ficoml
mov
lds
in
mov
loope
das
ret
pop
sbb
xchg
loope
inc
nop
lods
pop
mulb
je
insb
test
adc
lods
sti
loopne
add
les
push
sahf
jmp
cli
mov
cltd
mov
loope
mov
popf
add
pop
or
add
subb
loope
call
stc
xchg
stos
mov
jne
pop
sti
jle
fs
and
xchg
push
leave
inc
mov
mov
data16
mov
ss
cmpsb
adc
sti
iret
jb
push
shl
jl
mov
lds
arpl
push
es
dec
pop
inc
cmp
push
pop
sbb
loope
orb
cmp
inc
cli
int
and
cmpsl
lods
adc
jl
mov
dec
jmp
lds
int3
shlb
ljmp
popf
mov
std
cmc
in
popa
and
jo
loope
xchg
call
or
mov
xor
sarl
loope
inc
insb
xchg
test
adc
cmp
xor
mov
pop
push
shlb
mov
mov
imul
scas
cmp
xchg
jns
in
stc
xlat
je
shrl
aad
sahf
int
imul
addr16
pop
in
repz
loope
ljmp
lock
std
jnp
out
sti
xchg
push
pop
scas
loope
mov
sub
push
jb
hlt
fwait
xchg
adc
leave
out
and
nop
je
pcmpgtb
mov
sbb
fisttps
rclb
and
pusha
imul
aam
ljmp
push
les
cmp
pop
out
aad
jae
loope
cmpsb
lcall
fisubrs
sub
insl
aad
sbb
cmp
pop
and
cld
pop
push
loope
test
or
movsb
pusha
addr16
mov
jg
adc
jp
xchg
jo
and
xor
aad
fisttpl
sahf
mov
mov
and
loope
pop
dec
adc
push
fidivl
lock
push
mov
pop
call
xchg
xchg
lds
sub
ja
loope
or
lods
and
inc
mov
sbb
dec
mov
cmp
adc
jns
out
pop
or
push
loope
xchg
jmp
dec
push
pop
loope
in
cmp
mov
cld
sarb
add
jge
jg
imul
cltd
xor
push
and
adc
mov
loope
fidivl
adc
dec
jnp
nop
or
divb
mov
shlb
push
or
loope
mov
mov
jo
pop
mov
call
mov
out
xor
loope
jne
ret
incl
cld
shlb
scas
dec
inc
jecxz
iret
push
sub
cmp
loope
pop
mov
mov
cmc
pop
mov
fcmovnb
xchg
add
mov
lret
dec
jbe
fcomps
call
xchg
imul
arpl
lock
inc
loope
ljmp
inc
icebp
shl
xor
les
xor
enter
push
lea
jo
dec
or
lcall
jmp
cmp
loope
adcl
loope
aad
in
ds
mov
loope
jp
sarb
clc
sub
jae
pop
sbb
inc
popf
jmp
loope
push
ret
movsb
mov
loope
scas
lcall
pop
pushf
mov
push
mov
inc
sahf
pop
aaa
mov
jnp
push
push
inc
addl
xor
testl
add
and
cmpsb
scas
cltd
popa
loope
push
fidivrl
lods
cmc
add
xchg
loope
sbb
adc
add
repnz
outsb
inc
int3
popa
mov
xor
mov
in
and
aas
mov
out
inc
dec
sub
loope
ljmp
push
mov
jmp
mov
mov
int3
outsb
loope
add
ficompl
test
xchg
fsubl
loope
in
dec
icebp
das
repz
repnz
addr16
loope
and
xorl
xlat
mov
fsub
cs
and
je
xchg
das
ret
loope
mov
sbb
test
and
lret
movsl
sub
loope
push
stos
shlb
les
or
mov
sub
data16
rcr
hlt
lcall
loop
sbbl
push
test
mov
and
cmp
fnstenv
loope
mov
jns
call
jmp
outsl
ljmp
sbb
out
mov
loope
push
cmp
xchg
sub
xor
data16
dec
ja
in
aaa
cmp
es
push
cwtl
scas
lahf
cltd
sub
lcall
loope
or
jmp
jmp
fildll
aam
loope
push
mov
xor
loope
test
xchg
mov
ror
sbb
xor
shrb
add
pop
mov
insb
sub
ret
adc
loope
cmpsb
sbb
loope
adc
add
test
pop
add
dec
inc
pop
in
enter
nop
loope
pop
mov
cmp
int
movl
loope
jnp
adc
out
mov
push
and
and
call
sbb
xchg
out
rorb
pop
lods
popa
mov
jp
push
mov
fs
rcll
inc
add
sub
jg
loope
lret
xchg
add
imul
add
mov
in
add
xchg
cli
cmp
xchg
pusha
adc
imul
add
push
add
stos
pop
into
lock
push
out
fbstp
push
cmc
jg
sahf
enter
mov
xor
jae
clc
popa
jg
rorb
inc
xor
add
cli
dec
sub
bnd
push
inc
pop
jmp
in
mov
loope
pop
dec
sbb
je
sbb
scas
das
data16
jmp
push
roll
lock
jecxz
mov
in
or
pop
frstor
loope
sti
or
adc
nop
inc
adc
jmp
add
sbb
clc
out
nop
lods
sub
fndisi(8087
nop
addl
adc
loope
jmp
mov
mov
hlt
in
jbe
lods
int3
mov
mov
movsl
xor
jmp
insb
or
lock
mov
fs
and
and
and
pop
movsl
roll
jp
sub
pop
lock
and
and
sub
jno,pt
and
shlb
scas
ss
pop
mov
popa
mov
ljmp
jne
xor
jp
loope
enter
cmp
loope
mov
mov
pusha
jl
loope
xor
pop
loope
int3
dec
into
mov
dec
pop
loope
push
push
aaa
xchg
xchg
mov
pop
sti
add
mov
dec
sbb
add
test
sbb
cmp
aaa
pushl
jne
add
cs
lods
js
xchg
fwait
xlat
sahf
popf
je
jmp
arpl
loope
in
testl
mov
loop
loope
add
or
outsb
jne
lods
aam
and
jecxz
test
jo
mov
sbb
adc
ds
cmp
jo
inc
xchg
nop
scas
mov
cmp
pop
add
lods
clc
iret
xchg
stos
dec
stc
mov
dec
loope
adc
loope
jns
imul
lahf
sub
xor
xchg
pop
sub
inc
push
and
adc
andl
lret
inc
fisttps
sarb
mov
jo
push
sbb
or
rcl
push
mov
out
or
mov
mov
and
outsl
test
loope
adc
roll
xor
call
loope
fsts
imull
cltd
movsl
jo
stos
dec
cmp
mov
aam
in
imul
lret
ss
loope
fmul
pop
pop
cmp
loopne
and
sub
cli
mov
int
clc
jnp
add
xor
stos
lock
mov
shr
cs
pop
loope
ror
jle
jno
loope
lahf
push
mov
loope
push
test
adc
jmp
sarl
in
mov
mov
jl
movups
imul
push
pop
mov
jnp
loope
pushf
dec
out
cltd
jo
push
hlt
inc
insl
ljmp
pop
push
jmp
dec
dec
loope
sub
lock
pop
insl
iret
loope
es
je
push
or
mov
or
inc
and
push
loope
inc
mov
adc
jae
in
sbb
fstpt
dec
insb
sub
xlat
or
mov
mov
sub
push
xchg
in
loope
jne
adc
cld
xchg
ds
jmp
test
lods
icebp
out
adc
push
popf
loope
cmp
adc
cmp
sbb
push
inc
fnsave
adc
push
ja
xor
lea
push
mov
loope
icebp
addb
loope
sub
mov
loope
enter
cmp
xchg
jmp
mov
jmp
xor
dec
sti
sub
and
jbe
sub
push
mov
nop
xchg
ret
das
mov
dec
outsl
scas
or
loope
cwtl
sahf
and
ds
loope
push
cmpsb
mov
call
jecxz
iret
jb
shl
in
pop
cmc
sbb
lock
pop
popa
cs
adc
loope
pop
xor
in
cmp
pop
fidivl
jmp
lock
insb
jno
test
mov
call
ja
xchg
mov
cmc
loope
sahf
push
inc
jne
stos
inc
lock
and
loope
jo
gs
in
xchg
arpl
inc
inc
loope
jbe
insl
movsb
mov
loope
mov
mov
loope
cwtl
insl
cmp
shlb
mov
xor
pop
lock
jmp
cmp
and
mov
pop
push
add
pop
rolb
lret
lods
sub
xchg
jle
jmp
pop
cmp
adc
inc
xchg
jp
sbb
loope
scas
inc
enter
loope
fnstsw
test
inc
rolb
sub
jmp
ss
loope,pt
pushf
xor
imul
mov
or
stos
in
rorl
mov
xor
rorl
aas
rcrb
jno
arpl
add
or
cltd
loope
enter
xchg
leave
or
orl
imulb
jns
loope
xor
out
inc
jg
xor
pop
nop
sbb
lret
in
andl
xchg
shl
adc
mov
loope
pop
jbe
call
out
push
sbb
int3
xchg
loope
add
cwtl
add
loopne
jl
loope
in
add
ret
mov
push
les
inc
imul
mov
mov
dec
pop
lods
loope
insb
int
jbe
dec
pop
arpl
sbb
loope
daa
aam
push
dec
addl
movsb
fsubrp
loope
pop
mov
jmp
pop
push
loope
imul
add
jle
jmp
mov
sti
jl
mov
xor
jo
and
loopne
sahf
and
int
push
loope
mov
movsb
loope
fcomps
insb
mov
jns
fstps
mov
xchg
or
cmp
out
mov
cmpl
loope
addr16
pushf
xchg
push
add
insb
mov
sub
jp
adc
add
jmp
xchg
push
jo
xchg
out
test
push
jno
ret
sub
insb
sbb
mov
ljmp
mov
nop
ja
add
fiadds
pop
stos
sbb
negb
fs
xchg
insl
loope
pop
aaa
add
movsb
xor
mov
mov
loope
imul
mov
fdivs
sbb
mov
dec
xchg
xor
adc
sbb
orl
mov
add
loope
inc
sub
mov
xchg
shlb
cmpsl
sbb
aam
adc
rcrl
cmp
mov
xchg
fsubp
mov
cmp
mov
adc
pop
pop
push
ljmp
insl
mov
push
push
rorb
or
pop
ja,pn
call
lods
shll
mov
lea
jl
add
and
dec
popa
loope
out
sub
adc
add
dec
xchg
int3
sbb
dec
sbb
cmpl
insb
loope
das
fidivs
loope
icebp
ds
stc
enter
and
mov
loope
cmp
or
or
inc
dec
xchg
pop
gs
or
sti
jmp
loope
sets
sarl
loope
pop
adc
dec
loop
loope
push
xchg
pushf
imul
int
nop
fdivrl
mov
pop
ror
pushf
cmpsb
sarb
xchg
jb
cli
cmpsl
in
jae
push
and
pop
add
dec
and
test
xchg
leave
ds
fdiv
xor
cmp
fs
xor
nop
out
jae
lods
loope
xor
pop
adc
cmp
mov
loope
sbb
ja
popa
jp
shlb
inc
xor
sbb
loope
mov
lahf
push
inc
jae
subl
xor
hlt
xchg
loope
lods
fdivs
loope
in
mov
stos
loope
insb
jmp
mov
shrb
lds
dec
or
lcall
cwtl
add
push
jmp
mov
loope
insb
mov
lock
pop
mov
or
pop
sbbl
stos
loope
lds
dec
push
jmp
loope
js
cwtl
sbb
lods
mov
cld
pop
and
rcl
jle
in
mov
std
pushf
pop
rorb
mov
mov
push
pop
pop
jo
xor
mov
sahf
push
clc
xchg
ljmp
mov
in
stos
loope
sbb
adc
xlat
out
loope
loopne
add
addl
push
loope
xor
jbe
data16
xlat
pop
in
mov
lock
mov
mov
jne
adc
mov
idivl
jo
mov
xlat
jg
scas
aaa
xor
and
push
add
or
mov
add
or
push
test
loope
leave
adc
xor
cmp
mov
loope
das
jle
inc
mov
mov
loope
iret
movsl
or
cmp
loope
xchg
inc
push
decb
stc
cs
mov
lahf
enter
adc
aam
jno
xlat
add
mov
clc
in
and
outsl
xchg
inc
lods
das
shll
or
loope
sbb
mov
dec
mov
jmp
cmp
pop
loope
xchg
repnz
into
fstpl
mov
std
loope
call
and
mov
mov
popa
dec
jbe
ret
loope
lea
nop
loope
mov
dec
or
ds
js
sarl
mov
xor
jmp
dec
data16
pop
mov
fucom
jae
popf
shl
lds
dec
or
push
add
js
xor
js
enter
jae
popf
add
xor
insb
adc
fstpl
fsubrs
xor
jg
rolb
mov
jecxz
imul
xor
call
xchg
jo
or
loope
dec
jg
xor
pushf
ss
jne
jae
cmp
loope
xchg
out
push
sub
xchg
adc
mov
pop
ljmp
cpuid
adc
add
xchg
adc
jns
loope
repz
dec
loope
jns
push
and
jmp
pop
gs
pop
lret
inc
idiv
outsb
loope
out
jp
inc
nop
xchg
loope
add
gs
dec
mov
pop
enter
loope
lcall
loope
test
mul
loope
add
or
add
out
outsl
jg
scas
pushf
xor
in
and
add
aam
jecxz
jmp
mov
aaa
insl
fdivr
add
jmp
int
loope
test
dec
mov
fldenv
leave
xchg
sbb
push
loope
xchg
nop
and
les
cs
enter
scas
sbb
dec
dec
loop
movsb
ds
jmp
jno
jp
pop
cltd
jge
adc
push
cmc
lret
ss
cmp
mov
lock
xor
or
xor
mov
js
push
cwtl
sar
arpl
bound
or
dec
test
mov
arpl
gs
or
popf
das
or
fcoml
loope
lods
xchg
outsb
sub
aam
sarb
cmp
mov
xor
mov
dec
loope
cmp
inc
sbb
les
out
push
xor
loope
mov
sbb
loope
mov
xchg
mov
sarl
mov
xchg
mov
lds
out
pushf
call
in
mov
mov
imul
add
xchg
dec
fs
ljmp
cmp
inc
clc
outsb
and
ja
lods
repz
dec
inc
dec
mov
loop
adc
loope
ret
cs
xchg
mov
sahf
and
popf
push
test
sub
loope
loop
lds
push
and
cltd
cs
pop
xor
push
bound
push
jno
lahf
mov
orb
mov
push
data16
hlt
add
pop
mov
fs
loope
jle
inc
jnp
mov
mov
sbb
xor
sub
jmp
loope
outsb
lcall
lods
aam
mov
add
loope
pop
shl
pop
cmpsb
inc
das
loope
clc
int3
js
and
into
insl
sbb
mov
jo,pt
pop
sub
jle
call
loope
adc
cmpsb
outsb
add
loope
add
add
test
insl
icebp
push
xor
lods
jb
int
pop
ret
loope
jmp
cmpsb
push
fidivl
call
out
jmp
pop
add
loope
incb
xchg
adc
push
mov
iret
or
shl
cmp
imul
jae
push
xchg
mov
test
mul
lods
mov
insl
jmp
call
loope
popa
je
shufps
bound
nop
pop
jmp
icebp
push
ljmp
dec
gs
pusha
inc
in
in
mov
loope
leave
lds
add
flds
mov
in
cld
mov
loope
jns
out
aam
mull
loope
es
jo
loope
and
adc
sub
adc
xchg
repnz
mov
outsl
xlat
loope
mov
shl
nop
movups
pop
ljmp
in
xor
fs
sti
cmp
imul
fldenv
xchg
jecxz
jo
mov
cmc
insb
jl
adc
ret
imul
mov
jg
xor
cmp
push
cmp
mov
sub
cmp
bound
xor
loope
daa
dec
faddl
outsl
jno
xor
jnp
add
in
dec
fadds
inc
cmc
xlat
test
adc
aas
add
sub
es
mulb
jo
psubq
xor
pop
ror
out
loope
mov
std
inc
loope
xchg
mov
sbb
sahf
ja
jp
imul
clc
ret
mov
movsb
loope
and
add
sbb
rclb
imul
test
sbb
adc
push
mov
or
dec
roll
sbb
push
dec
pop
adc
in
popa
outsb
shlb
loope
sahf
xchg
ja
stos
xlat
mov
cmp
movsb
jle
loope
xor
nop
ret
and
adc
pop
mov
loope
pop
inc
add
loope
movl
loope
mov
jns
push
adc
loope
sbbl
loope
aad
pop
dec
shl
loope
inc
lods
or
jo,pn
bound
and
loope
adc
sub
jg
data16
test
mov
ds
mov
cmp
loope
xchg
sbb
ror
loope
cmc
sub
add
mov
adc
jecxz
in
insl
popf
dec
mov
ljmp
insb
add
nop
inc
jae
pop
and
loope
cmp
gs
dec
lcall
mov
add
or
mov
jecxz
addr16
xchg
and
mov
or
loop
xchg
mov
loope
dec
sbb
fstps
xor
push
jno
push
jmp
scas
popa
sbb
lock
loope
pop
xchg
pop
lcall
fisttpl
jge
rcrl
ret
aad
aaa
mov
sbb
or
shrb
and
imul
popa
ss
mov
pop
jge
lret
push
es
ds
jno
call
ret
mov
scas
sbb
inc
enter
sti
out
mov
mov
jne
movsl
or
fs
push
lahf
stos
loope
dec
fxch
inc
pop
daa
icebp
out
fcompl
fld1
loope
pop
test
mov
xchg
or
lea
xor
cmpsl
pop
add
xchg
and
pop
mov
mov
adc
lret
xor
out
push
data16
and
les
jbe
xor
dec
ja
imul
mov
loop
sbb
aaa
or
mov
sbb
mov
pop
jno
scas
inc
aas
into
cli
add
shrb
dec
scas
mov
mov
sub
jmp
and
add
loope
cs
gs
cmpsl
lock
push
test
notl
dec
push
rcrb
scas
les
lahf
push
mov
jle
pop
fisubrs
pop
loope
out
clc
cli
rcl
das
and
add
sar
ss
lods
fucomi
jecxz
mov
cmp
jbe
imul
xchg
mov
adc
and
gs
dec
loop
ja
cmp
push
in
test
mov
inc
xchg
cmp
leave
adc
push
push
ljmp
push
and
cltd
loope
jo
je
or
shlb
xor
test
movsb
outsl
loope
or
xor
les
loope
mov
jb
jp
xchg
loope
scas
sti
or
mov
fcmove
fmull
shl
sbb
push
popa
enter
pushf
iret
add
jne
xchg
out
dec
sarl
push
mov
test
dec
inc
dec
mov
mov
mov
cmc
sub
cmp
mov
sarl
outsl
in
push
loope
push
mov
aam
out
aas
jmp
cmpsb
sbb
adc
lods
xchg
call
dec
movsl
loope
je
cmp
loope
push
jle
xor
pop
cmp
into
xchg
ret
and
inc
add
mov
jb
lds
push
loope
mov
gs
fisubl
dec
shlb
dec
fcomps
jo
cmpb
jmp
stos
rorb
fsub
mov
les
sbbl
shll
loope
cmc
cwtl
mov
sbb
dec
push
inc
mov
ret
inc
loope
push
mov
int3
scas
cltd
adc
dec
nop
jmp
shl
sub
lret
daa
push
loope
xchg
sub
mov
jp
js
push
mov
mov
sbb
and
inc
jmp
push
pusha
add
mov
lods
loope
lcall
loope
test
ret
dec
rorb
jo
lock
lods
in
cmp
jecxz
loope
push
push
pop
mov
and
jnp
push
mov
mov
popa
sahf
into
scas
loope
clc
ffreep
sti
jge
cs
xor
inc
addr16
lcall
cmp
loope
xchg
inc
popf
leave
mov
pop
jo
mov
int
outsb
pop
mov
jbe
loope
in
adc
xchg
rcrb
cmp
rorl
hlt
loope
pop
or
pop
xchg
cmpsb
mov
ja
sub
out
or
loope
sbb
and
mov
lret
xchg
in
push
mul
popf
mov
dec
xor
cmp
cltd
xor
stos
dec
inc
push
fistl
push
loope
jl
filds
jae
div
and
lret
jbe
inc
xor
sbb
test
popa
scas
shlb
cmp
jmp
test
testb
jno
jp
push
out
lods
sbb
popl
or
sub
mov
faddl
dec
addr16
xor
jp
pop
out
out
jo
stc
jne
loop
mov
push
xchg
in
in
loope
loopne
call
loope
xchg
jo
sub
jmp
xor
fabs
sub
jo
cmp
loope
pop
mov
aaa
sbb
in
adc
adcb
cld
mov
cmpsl
sub
mov
in
mov
and
pusha
enter
shl
call
adc
mov
xchg
cmp
sbb
lcall
push
stos
sub
jbe
jo
sub
out
xchg
sbb
mov
cmp
xorl
jnp
push
das
mov
fsub
jp
push
mov
mov
xor
cmp
or
dec
inc
outsb
mov
shl
adc
jmp
jp
push
dec
inc
andl
loope
inc
lods
or
div
shlb
xchg
int3
push
daa
movsb
ljmp
test
lds
loope
xor
pop
xlat
or
xchg
ret
mov
mov
add
in
movsb
loope
fadds
add
mov
xlat
stc
xor
in
fld1
and
daa
loope
dec
cmp
adc
and
or
xchg
lea
out
loope
sub
loopne
jg
je
mov
adc
cmpsb
or
popf
mov
je
mov
inc
or
enter
jns
pushf
mov
or
lods
aas
loopne
sahf
pop
das
push
mov
pop
sub
inc
out
jns
jo
sbb
inc
mov
jp
pop
jo
loop
add
loope
dec
outsb
sbb
sub
loope
fsubrp
pop
loopne
popa
and
dec
and
shlb
shll
mov
icebp
das
in
xchg
loope
xor
inc
push
xor
dec
push
imul
std
movd
push
cmp
mov
loope
hlt
jbe
add
dec
in
pop
and
loop
push
iret
sbb
popf
std
xor
xchg
loope
add
push
jge
mov
mov
aas
sub
adc
xor
loop
loope
pop
xchg
outsl
or
and
cmp
dec
loope
mov
popa
out
outsb
addr16
es
pop
sbb
inc
fsubl
xorb
jne
jo
and
sahf
loope
push
insb
xor
xchg
loope
push
aad
cmpsb
mov
jnp
dec
data16
cmp
push
aam
mov
jae
insl
rclb
sub
mov
out
loopne
loope
loop
dec
xchg
je
popa
xor
sahf
or
push
jmp
jg
add
js
jno
bswap
mov
loope
dec
xchg
in
or
or
xchg
mov
pop
jnp
out
lcall
xchg
mov
loope
jno
popf
xor
loope
stos
pusha
push
lahf
rorb
shlb
or
int3
sbb
dec
pop
loope
adc
scas
loope
pop
je
or
loope
iret
pop
wrmsr
and
mov
mov
or
and
mov
and
jge
sbb
pop
loope
test
ret
lds
or
movsl
push
lret
fwait
push
push
push
jmp
and
enter
sbb
insl
cltd
out
or
in
testb
in
mov
mov
loope
cmp
outsl
pop
xor
xchg
xlat
es
imul
xchg
stos
adc
lret
mov
test
loope
mov
mov
fxch
pop
adc
out
jmp
jae
loope
cmp
dec
loope
push
out
pop
or
loope
into
dec
and
xchg
mov
mov
cmpsb
xor
in
int3
cld
lahf
loope
and
arpl
xor
cli
cmp
lret
js
sarb
bnd
das
mov
lcall
loope
idivl
adc
jmp
dec
out
jmp
ds
je
hlt
std
inc
je
and
popa
cmpb
sub
imul
push
jb
pop
icebp
enter
shl
leave
in
out
loope
ds
lcall
push
call
ja
jp
in
in
ds
jns
sbb
mov
aam
xchg
jle
dec
test
pop
xchg
fxtract
scas
mov
nop
cld
iret
imulb
jmp
loope
int3
and
data16
into
pushf
loope
mov
ljmp
add
jns
dec
push
loopne
mov
loope
xor
popf
jb
adc
jl
or
push
loope
or
inc
push
aad
mov
inc
push
js
loop
sbb
loope
stos
addr16
pop
mov
loope
push
push
data16
rorl
mov
jl
dec
cmpb
cs
push
and
ss
ret
or
jbe
fdivl
mov
jmp
unpcklps
add
cmp
jb
xchg
push
add
dec
andl
decl
in
test
adc
push
aad
icebp
je
loope
sub
aas
xchg
loope
repz
std
adc
leave
rcl
adc
pop
xor
sub
mov
loope
cmp
mov
jnp
push
jne
mov
inc
roll
inc
mov
pop
aam
out
inc
push
movsb
or
jmp
inc
loope
cmp
das
add
jae
out
push
pushf
hlt
outsb
in
push
xchg
cmc
loope
popf
scas
jns
in
jne
mov
inc
mov
push
jnp
rorl
mov
adc
repnz
loope
sub
mov
pushf
push
jge
loope
hlt
jnp
adc
xchg
clc
loope
adc
int3
mov
adc
add
mov
dec
adc
jo
pop
fisttpll
xchg
or
xchg
sub
stos
call
je
mov
fdivs
mov
jmp
dec
loope
lods
xchg
add
mov
mov
loope
jne,pt
xor
push
inc
jle
inc
daa
movsl
addl
insl
ret
fdivl
add
mov
jnp
in
or
scas
and
loope,pt
ss
imul
sub
fisubrs
loope
mov
push
dec
loope
mov
jl
loope
stc
sbb
mov
pop
cltd
int
prefetch
or
jmp
push
jo
fwait
loopne
scas
jne
mov
inc
or
dec
inc
xor
std
xor
jbe
cwtl
je
mov
mov
cmp
aad
scas
pop
iret
out
rcrb
rcl
in
fwait
loope
inc
loopne
xchg
dec
bswap
loope
xor
dec
es
mov
sbb
mov
add
mov
pushf
lock
push
loope
frstor
inc
jo
push
imul
subl
out
loope
pop
cltd
jno
outsl
cmpsb
sbb
and
mov
out
mov
loope
es
sahf
clc
inc
jne
jb
cmc
loope
pop
arpl
ljmp
pushf
daa
push
in
inc
jmp
mov
jno
cmc
mov
arpl
or
jp
roll
loope
sub
xchg
filds
in
sub
jb
cmp
pop
inc
arpl
gs
std
cld
mov
dec
jecxz
out
loope
fidivrs
or
ja
clc
sub
pop
inc
lock
dec
out
sahf
or
je
ret
pop
loope
xor
bound
das
push
stos
add
mov
aas
lock
test
jg
cmp
dec
icebp
xor
fidivs
es
adc
loope
stos
fwait
mov
loope
movsb
out
call
aaa
loope
jno
test
or
or
pop
loope
mov
lods
out
adc
vpunpckldq
xor
enter
or
and
jecxz
or
push
push
scas
sub
mov
cs
aad
loope
mov
into
jns
dec
dec
in
jg
popf
iret
and
int3
push
loope
loop
jecxz
cmp
add
jp
lea
sbb
xor
out
jle
inc
test
out
xchg
sbb
inc
jmp
int3
dec
int
jmp
hlt
loope
adc
fisubrs
dec
iret
mov
adc
fnstenv
xchg
outsb
xor
insl
in
and
fwait
add
lods
mov
ja
fscale
fisubrl
loope
scas
xor
loope
push
pop
repnz
loopne
xchg
loope
push
sub
sub
push
lret
push
jne
test
push
cmp
jp
and
mov
shrb
out
cli
sbb
inc
jmp
or
jno
mov
cmp
or
je
jecxz
decl
out
loope
movb
fisttpll
ljmp
mov
xchg
loope
popa
insb
fcomps
cmp
rolb
jmp
popa
mov
gs
je
mov
mov
les
fsubrp
xchg
loope
pop
mov
mov
adc
repnz
shrl
je
inc
push
lret
loope,pt
dec
cmp
stos
loope
mov
hlt
push
icebp
lds
ds
out
xorl
pushf
cmp
cmpsb
fistpl
fmuls
sarb
mov
out
and
inc
imull
and
jg
aas
sbb
mov
sub
nop
or
fldl2e
inc
loope
enter
mov
rclb
push
stc
imulb
cmp
xchg
jg
jmp
loope
sbb
insb
xchg
loope
or
cmc
sub
jl
mov
pop
xor
push
scas
add
adc
adc
and
cmc
jmp
js
push
enter
xchg
sahf
xchg
decl
push
mov
lods
cmp
push
aaa
lcall
mov
addr16
icebp
adc
push
fadd
rcrl
mov
cmp
adc
jbe
dec
loop
movsb
loope
cmp
cmp
cli
orl
dec
mov
mul
sub
mov
arpl
cltd
xchg
and
inc
adc
in
pop
loope
cmpsb
jge
inc
pop
lret
das
add
stos
daa
hlt
jo
add
dec
call
xchg
loope
mov
jle
bound
jg
xchg
gs
sbb
fisttpl
or
ja
jmp
aam
daa
and
scas
mov
jnp
pop
cmp
loope
and
out
bound
rcr
pushf
pop
pop
fsubl
fs
push
add
cmpl
xor
mov
cmovnp
out
cli
xchg
lret
loope
mov
xchg
pop
test
xchg
aam
jle
sbb
aaa
sahf
cs
dec
or
and
movsb
insl
add
or
mov
imul
add
and
mov
leave
mov
dec
das
loope
fcomip
pushf
and
test
jl
sahf
or
mov
push
jno
and
dec
loope
mov
dec
jb
test
fsubrl
dec
loope
and
inc
lcall
mov
mov
arpl
xchg
pop
mov
push
outsl
rcr
pop
mov
das
cmp
lds
ret
jmp
lahf
aas
add
outsb
push
mov
cmp
out
mov
mov
mov
inc
jo
xor
and
scas
cwtl
addb
fwait
decb
bound
xor
cmpsl
scas
add
orb
xor
test
stc
jp
sbb
sbb
add
ficomps
movsb
add
pop
dec
shl
imul
mov
rcrb
dec
jns
jbe
cmpsl
mov
mov
cwtl
push
add
cmp
pop
out
loop
mov
loope
lea
sbb
adc
mulb
rolb
xor
add
loope
ljmp
loope
in
jo
nop
sti
les
cmp
fildll
push
imul
cmp
loope
int3
lea
loope
inc
and
int
jecxz
xchg
out
rorl
sbb
inc
shlb
int3
fistpl
in
add
adc
pop
clc
mov
xchg
daa
ss
out
test
outsb
or
icebp
push
lods
inc
fidivrs
cmpsl
ss
mov
dec
cmp
out
in
pop
loopne
mov
and
shlb
insb
daa
and
int
outsl
mov
scas
mov
test
lods
xchg
and
loop
fs
inc
sbb
into
cmp
testb
cmp
loope
sbb
leave
mov
sbb
sbb
out
mov
subb
jecxz
jecxz
outsb
pop
test
in
dec
sub
std
loope
mov
shl
popa
or
outsl
mov
and
xor
sub
pop
dec
mov
pop
jp
cmp
jg
xor
leave
add
sahf
loopne
push
lcall
leave
icebp
loope
sbb
mov
nop
dec
out
dec
pop
in
inc
jbe
rclb
jmp
das
lock
gs
out
xchg
icebp
xchg
cmpsl
loope
int
imul
mov
cmp
and
decl
pop
xchg
jbe
arpl
cmp
sbb
mov
inc
pusha
mov
repz
pop
aam
aad
xchg
fstl
push
lcall
inc
sti
in
jno
lret
dec
fwait
sub
and
and
nop
push
jmp
outsl
mov
xchg
pop
dec
int3
sbb
daa
jmp
cmpb
std
test
loope
int3
xlat
push
or
aaa
test
loope
mov
icebp
jge
sub
repnz
mov
loop
mov
xor
or
jmp
outsl
fildl
sti
mov
fists
jg
hlt
adc
fildl
cltd
jmp
jecxz
push
pop
push
loope
rorb
and
loope
mull
dec
xchg
loope
outsb
jb
fisttpl
sbb
mov
int
sti
cltd
in
mov
pop
orl
hlt
loope
cmp
inc
fstps
clc
adc
jno
data16
hlt
mov
ret
les
xlat
ljmp
loope
mov
loope
adc
imul
jle
xchg
push
rclb
cmp
mov
lds
loope
mov
push
sbb
fs
adc
shlb
loope
scas
adcb
pushf
loope
test
dec
fsub
scas
dec
aas
jne
stos
idivl
shr
insl
xchg
xor
out
icebp
mov
sbb
xor
xor
push
xchg
mov
jge
lret
add
add
pusha
into
sbb
jnp
lods
fisubrs
jg
test
cmp
loope
dec
je
jp
ljmp
jns
jmp
loope
mov
fcomps
loope
sahf
pop
push
cmp
xlat
sub
or
jmp
loope
add
xchg
push
stos
jo
jbe
das
dec
mov
addr16
add
jg
je
loope
lock
shrb
and
lahf
push
add
sbb
mov
imul
adc
xor
loope
pushf
out
and
mov
add
loope
add
inc
lock
loope
sub
mov
ret
cmp
cmp
orb
or
fwait
test
or
das
add
mov
and
pop
loope
rcrb
cmpsb
loope
lock
int
lds
std
xor
cmp
aaa
scas
mov
cmc
faddl
gs
loope
test
shrb
clc
jnp
dec
loop
pop
js
jle
loope
push
xor
insb
negl
fcmovnu
fsubrl
cmp
psrad
int
jl
fs
and
pop
gs
add
nop
imul
jecxz
fisubl
sbb
scas
sbb
inc
das
cs
movsl
loope
je
lahf
adcb
jmp
fldt
in
js
mov
mov
std
sbb
aam
rcll
and
loope
nop
add
test
out
vpsubd
mov
mov
adc
push
sahf
xlat
daa
sbb
inc
fidivrl
dec
mov
mov
shlb
add
cld
decl
push
cmp
xlat
out
sub
iret
ja
mov
loope
add
and
ret
adc
lock
xchg
loope
les
pop
scas
out
pop
shlb
jns
testb
dec
sub
push
loope
jge
inc
push
int
shl
pop
lcall
loope
cmpsb
imul
pop
sarb
test
gs
mov
inc
and
pop
into
jecxz,pt
lahf
loop
call
clc
pop
inc
and
shrb
inc
clc
jl
push
adc
lret
mov
imul
insb
pop
mov
outsl
ja
repnz
or
sbb
add
xchg
fwait
outsl
sbb
rcll
push
cli
les
cmp
scas
sub
clc
and
loopew
je
stc
das
adc
xchg
in
push
ja
or
jno
sub
adc
fnstenv
dec
lock
jmp
fsubr
and
loope
subl
adc
stos
loope
cmc
addr16
cmp
sbb
out
lods
les
popf
xchg
in
pop
iret
insb
addl
loope
loop
cs
add
data16
mov
mov
or
mov
loope
sbb
pop
mov
out
sub
mov
jo
pop
push
xchg
jg
jmp
sub
loope
push
jne
mov
repz
pop
faddl
sub
mov
mov
inc
xor
sub
add
cmp
pushl
xor
or
pop
jmp
loope
ss
mov
xchg
push
cmpsb
aad
out
adc
stc
and
arpl
mov
call
int3
stc
cmp
scas
mov
fwait
and
sbb
lret
and
das
inc
cmp
lcall
mov
idivl
loope
int
repz
pop
and
xchg
xchg
clc
add
pop
push
pop
jle
xchg
out
repz
sub
mov
cltd
shlb
pop
mov
add
mov
push
or
cmc
ds
lods
ret
stos
loope
sti
loop
sub
shl
and
push
stc
in
mov
inc
inc
std
lahf
mov
mov
mov
push
push
loope
cmp
inc
movsl
push
jg
nop
enter
adc
mov
orb
sbb
pop
iret
inc
gs
lock
sti
adc
push
loope
jmp
and
dec
add
loope
add
xlat
insb
loope
stos
inc
mov
cmpsl
dec
adc
hlt
movsb
xchg
inc
pop
sub
loope
fucomp
pop
or
fcoml
idivb
lret
int3
shrb
repz
mov
pop
add
popf
xchg
pop
fs
jbe
mov
jmp
mov
shl
mov
add
loope
mov
mov
pop
pushf
scas
out
test
addl
push
fsubrl
push
ret
cmpsl
lret
jne
cmpsb
icebp
loope
popf
mov
cmp
jle
mov
cli
loope
out
in
push
adcl
loop
jecxz
ja
adc
daa
ljmp
movsb
stos
jge
dec
add
add
mov
pop
mov
xor
inc
jg
sub
fsubp
out
xor
int3
fwait
inc
and
cld
ljmp
mov
add
loop
outsl
pop
pop
gs
fndisi(8087
rcrl
push
out
movsb
mov
or
jns
das
jmp
or
mov
pop
data16
fdivs
jb
outsb
and
repnz
popa
cmpsb
mov
mov
sbb
movsb
hlt
stos
repz
stc
insb
lcall
adc
fs
pusha
insl
test
sub
test
mov
adc
outsb
xchg
push
loope
das
mov
out
outsl
jge
inc
test
frstor
sbb
inc
loope
mov
mov
pop
mov
stc
jb
or
cmp
add
jmp
frstor
int3
add
mov
stos
movsl
iret
sbb
pop
pop
loope
cltd
jb
jno
mov
lods
subl
push
xchg
jle
lods
pop
clc
cmc
jmp
mov
adc
sbb
sub
mov
mov
in
pop
fildl
xchg
jo
sahf
aaa
loope
cmp
jmp
loope
push
or
xchg
add
pop
out
xchg
icebp
loope
imul
xlat
scas
pop
test
jl
test
push
mov
aam
nopl
mov
fisubl
sahf
lods
bound
ljmp
or
insl
mov
mov
jne
js
lcall
inc
mov
xlat
imul
mov
loope
int3
loopne
jg
mov
shll
or
mov
in
int3
or
xchg
sbb
cmpl
and
rcrb
cwtl
push
lret
mov
adc
enter
inc
mov
jbe
pop
or
loope
add
insb
xchg
adc
pop
inc
sahf
add
mov
cld
sbb
imul
loope
ret
lea
insb
mov
adc
loope
mov
loope
inc
mov
sub
fistpl
loope
pushf
sbbl
xlat
aas
mov
push
and
pushf
int3
lods
push
nop
loope
shl
into
in
loope
ret
inc
fdivl
loope
ror
push
out
shlb
pop
push
ficompl
loope
or
add
jnp
stos
in
sub
xor
dec
out
pop
vpaddb
rorb
sub
push
loope
push
xchg
iret
cwtl
dec
jp
int
rcll
leave
lds
cmc
loope
mov
dec
and
pop
loope
sub
mov
loope
or
cwtl
mov
adc
add
pop
les
lcall
popa
push
loope
out
arpl
push
loope
outsl
sub
inc
cmp
cmp
fucomi
pusha
test
mov
and
jle
jp
mov
in
add
jl
shlb
cmc
xor
mov
xchg
xor
filds
test
push
xchg
nop
sbb
pop
jo
iret
test
fildll
insl
xlat
loopne
inc
jle
xchg
rcrl
add
outsb
int3
push
mov
mov
xchg
sub
jl
pop
inc
fidivrl
mov
loope
test
lret
int3
jo
mov
movsb
orl
mov
dec
out
inc
int
mov
mov
out
stos
ret
inc
xchg
das
shl
sbb
lret
adc
out
in
aam
xlat
push
mov
loope
test
popf
pop
lods
mov
loope
and
mov
out
int
mov
jmp
loope
repnz
idivb
adc
stos
lods
jecxz
xchg
loope
sbb
mov
add
insl
or
inc
sub
fsubrl
sti
xchg
xchg
aaa
repnz
loope
or
jmp
and
inc
dec
push
in
iret
fldt
daa
ss
jne
vpandn
insb
loope
pop
inc
jecxz
push
cmp
add
pop
dec
jge
rcrl
ffreep
repnz
jo
mov
pop
jg
push
add
fidivs
add
add
es
out
mov
repnz
xchg
dec
xor
repz
loope
xchg
xor
fdivl
lahf
pop
xchg
pop
cld
jo
arpl
fs
jnp
aas
or
repnz
fisubs
std
mov
jmp
dec
daa
pop
outsl
sbb
rorb
dec
mov
lret
xorb
test
in
xchg
cmp
in
xchg
hlt
mov
xchg
stc
lea
insb
sbb
loope
jle
push
mov
sbb
imul
test
ljmp
push
call
loope
add
fisubl
xor
cltd
sbb
pushf
out
mov
cmpsl
loope
cmp
in
lahf
lcall
xrstors
ljmp
jle
stos
xlat
mov
mov
in
mov
and
pop
mov
test
jecxz
and
loope
xchg
imul
inc
adc
sub
mov
fcmovnu
aam
xor
loope
or
dec
es
add
xchg
mov
jo
into
pop
shl
or
mov
sub
jp
xor
sbbl
cmp
movsb
shl
mov
mov
leave
cli
loope
out
cwtl
test
push
aaa
imul
mov
sbb
fdivrl
test
push
dec
stos
and
jb
jecxz
push
or
sbb
mov
mov
add
rcrb
sti
in
mov
nop
adc
mov
insl
in
icebp
fisubl
cmp
jp
xchg
loope
sbb
add
in
testl
inc
mov
rolb
lods
xor
loope
pop
cli
inc
addl
leave
pop
mov
jo
jge
sbb
and
pop
pop
mov
ds
out
jmp
add
pop
pop
cwtl
dec
dec
inc
jmp
mov
adc
lock
and
push
push
loope
dec
loopne
xorl
cmpl
mov
jne
sarl
loope
mov
arpl
loopne
out
mov
addr16
dec
outsl
test
lock
push
adc
jbe
incb
mov
inc
in
push
jmp
orl
jecxz
pop
loope
mov
fmull
xchg
aas
mov
sbb
mov
movq
xor
out
loope
add
in
dec
in
stc
loopne
clc
aad
sbb
sbb
enter
jp
lds
pop
push
mov
loope
add
mov
mov
xor
hlt
test
mov
loope
mov
clc
icebp
sbb
jmp
and
push
jno
sbb
inc
out
js,pn
clc
lock
ret
out
jle
fisttpl
sahf
and
adc
movsb
dec
pop
mov
rcrb
loopne
int3
add
pop
pop
lock
xchg
adc
daa
jnp
push
sub
add
push
not
sub
loope
lods
push
sub
cmc
jo
pusha
or
cmpsl
in
or
cmp
mov
and
mov
or
loope
lahf
aam
xchg
jne
lret
ljmp
loope
mov
aam
inc
gs
mov
lahf
or
js
out
adc
jne
ret
stos
repz
icebp
sti
mov
loope
out
jne
jb
dec
and
dec
mov
lahf
int
loope
or
movsb
lea
leave
loope
imul
or
fcoml
inc
cmpsl
notb
xchg
out
xor
adc
mov
and
in
jb
lahf
pop
xorb
jae
enter
or
insl
dec
pop
loope
dec
andb
imul
loope
cmp
jnp
cmpsl
mov
jns
add
sub
lds
add
xor
and
dec
xchg
sub
jb
push
jecxz
dec
in
pushf
mov
mov
mov
iret
xor
mov
sub
jo
incb
lock
dec
clc
inc
jns
mov
lcall
in
jle
stos
xchg
jmp
sub
and
loope
adc
loope
es
clc
testl
out
cmc
mov
dec
addr16
stos
add
or
scas
out
inc
test
repnz
cmp
loope
call
ret
loope
xchg
mov
jg
popa
rcl
mov
jl
lahf
stos
mov
test
inc
inc
adc
mov
data16
push
add
scas
fwait
add
and
pop
jbe
cmpsb
gs
or
test
and
sub
and
jo
mov
push
jno
mov
sahf
mov
subb
cltd
loope
int3
cli
lods
sub
inc
call
mov
fs
mov
test
pop
lahf
jmp
mov
aad
daa
jecxz
loope
add
jae
and
mov
lret
mov
ja
push
loopne
out
cmpsb
ss
idiv
pop
out
xchg
mov
push
rolb
mov
mov
push
jg
inc
pop
adc
mov
adc
cs
out
fidivl
push
mov
mov
mov
cmp
inc
inc
std
dec
inc
add
std
jmp
push
xchg
inc
loope
push
movsb
aad
test
loope
ja
sub
das
hlt
mov
mov
add
sbb
push
in
out
inc
xchg
out
jmp
mov
imul
xchg
adc
aam
aaa
sub
and
mov
hlt
jmp
test
mov
ret
loopw
in
fildll
inc
loope
and
into
outsl
stc
int
loope
hlt
inc
lock
jb
data16
or
add
pusha
cld
pop
loope
pop
lret
jecxz
iret
push
rclb
leave
pop
inc
mov
in
jg
mov
addr16
out
sbb
mov
adc
xor
in
jne
and
faddp
mov
stos
mov
nop
inc
das
scas
shr
jmp
scas
and
cmpsl
in
push
cli
dec
loope
ss
sbbb
lods
jecxz
popa
mov
jg
add
pushf
jae
repnz
ljmp
clc
mov
cli
in
cmp
popa
mov
out
mov
gs
adc
jecxz
pusha
in
outsl
xchg
popf
mov
mov
insl
and
jmp
loope
or
pop
shrl
mov
sti
xchg
xlat
adc
jns
out
mov
dec
aam
pop
add
add
testb
mov
mov
add
cmp
hlt
jge
pop
mov
es
mov
aaa
and
and
loope
push
stos
in
out
lods
jo
les
fidivs
adc
mov
out
loope
mov
sub
ja
add
push
or
dec
popa
sub
fsubl
xchg
push
negl
insb
hlt
cmpsl
inc
jo
push
or
fldz
loope
dec
adc
subb
adc
pop
insl
int
inc
fldt
pop
decl
cmp
sub
mov
xor
cmpsb
int
push
out
aad
loope
cli
lret
ret
add
inc
jno
or
sub
fsubs
mov
arpl
dec
in
push
or
je
lock
dec
xchg
cmpsb
movsb
cmp
stos
popf
hlt
add
loope
sub
mov
jg
lods
lods
fwait
sbb
out
loope
add
jns
ficoml
pop
jmp
into
test
movl
sbb
cmpsb
test
repz
inc
ds
mov
inc
aam
mov
clc
imul
lods
into
xor
and
sahf
loope
mov
sub
loope
pop
xor
or
cmp
addr16
aad
mov
inc
lods
xor
adc
jecxz
sar
push
push
pop
popf
inc
and
jns
inc
xchg
ret
into
jmp
mov
dec
cmc
pop
xchg
cs
imul
dec
je
callw
rep
adc
out
in
jbe
lret
cwtl
or
loope
enter
add
xchg
jg
jle
and
out
popf
mov
daa
mov
loope
lds
xchg
inc
idivl
xchg
push
fcoms
and
fisubrs
stos
cli
mov
gs
loopne
aad
dec
call
or
push
fcoms
out
hlt
imul
jae
ss
sti
or
pop
loope
test
cmpsl
xlat
loope
dec
and
dec
aad
shl
jge
test
mov
pop
loope
nop
jle
mov
ja
iret
loop
lret
mov
je
jg
cmp
push
jl
enter
jne
adc
inc
loopne
stos
dec
mov
pushl
cli
inc
lret
jg
sbb
mov
int3
js
add
enter
jb
dec
dec
and
loope
xchg
push
lahf
cmpsb
loope
dec
hlt
movsb
and
lret
jg
cld
add
jecxz
and
shrl
lcall
jecxz
inc
sub
loope
popf
pop
ljmp
and
aas
jecxz
in
in
and
int
ret
jecxz
sub
andl
frstor
jge
mov
dec
mov
adc
lret
into
or
addr16
loope
jns
add
xchg
sbb
loope
loop
aam
mov
fcoms
popa
xchg
jmp
adc
sbb
jo
lcall
cmpsl
sub
pop
scas
mov
out
mov
add
xchg
pushl
jne
jmp
mov
test
mov
cmp
loope
movsb
xchg
add
add
push
rolb
push
loopne
scas
or
pop
hlt
arpl
scas
pushf
pop
jo
movsb
mov
xlat
xchg
jne
ficompl
jnp
test
jno
mov
mov
pop
sbb
pop
xchg
popa
mov
or
loope
hlt
xchg
mov
and
cmpsl
loope
int3
sub
push
mov
dec
gs
cld
mov
in
jmp
das
cmpsl
mov
out
pop
std
imul
jecxz
push
xchg
loope
mov
call
mov
arpl
push
adc
fimuls
icebp
xchg
pop
jo
nop
je
sbb
lahf
into
push
loope
cmp
mov
jb
xor
insb
scas
cmpsb
sbb
outsl
shlb
insb
pop
daa
out
loope
sub
push
xchg
negb
mov
mov
inc
sub
mov
pop
adc
push
mov
push
loopne
and
int
pop
mov
ds
pushf
out
loope
inc
mov
lret
loope
xor
cwtl
loope
sub
jmp
push
jno
movsl
mov
popa
push
push
adc
adc
insl
cmp
in
add
adc
add
xchg
aas
lret
fbstp
dec
fdiv
addl
loope
stos
daa
add
sti
xor
jo
cld
test
mulb
es
push
lods
mov
popa
push
hlt
aaa
loope
leave
filds
roll
dec
loope
int3
cli
dec
jg
inc
loope
outsb
adc
mov
pop
jae
xchg
loope
cmp
and
cmpsl
testl
cmp
mov
fmul
dec
and
mov
mul
cmp
cmp
mov
aad
mov
mov
loope
jle
adc
dec
aas
push
loope
sub
pushf
arpl
adc
jmp
jmp
fiaddl
add
mov
fimuls
xchg
cmpsl
rclb
inc
gs
loope
xchg
ds
mov
adc
pop
or
and
insl
loop
jmp
inc
jo
xlat
shrl
js
jmp
popl
sahf
push
mov
push
jg
jmp
mov
aad
lock
dec
loope
jecxz
pop
add
repz
jp
inc
out
sbbl
pop
test
xchg
pop
jecxz
adc
imul
dec
shll
dec
ja
and
lcall
loope
outsb
xor
xlat
fistpl
push
repz
out
inc
inc
push
fabs
fmuls
inc
adc
daa
add
jg
or
in
sti
ds
clc
jecxz
insl
cmc
call
and
jo
push
mov
mov
lsl
ja
cmp
ficomps
ja
loope
shlb
dec
bound
aas
imul
push
and
das
mov
jle
jmp
and
mov
leave
dec
sarb
pop
jmp
movsb
js
mov
push
fadds
xchg
push
loope
sub
jbe
rorl
cwtl
cmpsl
inc
adc
mov
cli
xor
es
loop
dec
or
lock
mov
loope
pop
cmp
dec
mov
bound
imul
pop
add
mov
cwtl
in
push
fsubp
jp
add
pop
sbb
mov
jnp
and
loope
inc
xchg
push
iret
mov
insb
loope
shrl
movsb
movsl
add
into
enter
jg
cmc
pop
hlt
ret
js
cwtl
call
loope
fucomi
pop
inc
cs
fucom
sbb
ds
mov
cmc
cmp
cli
in
popf
ret
stos
loope
inc
ja
cmp
es
pop
add
hlt
lea
xchg
popf
scas
push
dec
jo
mov
loope
lock
xchg
mov
mov
mov
or
jl
popa
loope
push
insl
or
push
sbb
loope
dec
stc
mov
cld
pop
lret
in
imul
dec
lea
and
loope
daa
mov
push
adc
mov
mov
loope
and
add
loope
out
adc
into
mov
cltd
push
push
pusha
xor
js
iret
ja
lds
decb
xchg
dec
loop
cld
in
mov
cwtl
gs
iret
rcll
call
mov
mov
outsb
pop
add
enter
repnz
fisubs
add
and
and
movsl
movsb
push
or
ret
jae
or
rcr
mov
ret
jns
in
push
das
jno
loop
sbb
push
sti
add
in
pop
xchg
out
mov
loop
repz
push
stos
loope
push
pop
pop
cltd
inc
ja
loope
nop
xor
loope
sub
mov
andb
mov
jecxz
inc
insl
mov
jo
stos
sub
sbb
mov
nop
mov
and
aam
mov
loope
inc
add
aaa
into
lock
pop
stos
in
cmp
jae
and
rorb
push
and
cwtl
insl
hlt
push
jno
cmp
lock
mov
pop
inc
xchg
mov
mov
sbb
cmp
rsqrtps
xchg
mov
scas
addl
jmpw
and
dec
mov
pop
loope
std
hlt
add
loopne
xchg
jle
sub
inc
pop
bound
nop
ret
daa
insl
jmp
loope
mov
repz
loope
clc
mov
jb
pop
nop
outsl
aaa
sub
out
mov
lods
lret
cs
pop
push
subb
mov
jmp
push
loope
int3
cmp
xor
fsub
iret
movsl
cmp
fimuls
ret
and
mov
and
jmp
in
call
loope
std
jae
push
out
mov
jo
sti
xchg
and
lret
jo
lahf
sub
js
ret
and
pop
mov
divb
in
iret
inc
in
js
and
divl
add
test
es
push
sub
int
push
loope
xchg
test
push
ret
push
inc
mov
fstp
adc
imul
out
jbe
psraw
sbb
shrb
add
loope
push
mov
mov
xchg
push
loope
dec
mov
sti
sub
rcll
aam
sub
cs
stos
popa
push
loope
js
jns
or
mov
and
inc
loope
sub
je
xor
jmp
push
add
sbb
and
adc
jnp
xchg
shrl
scas
jmp
in
pop
and
xor
mov
and
out
mov
scas
push
cs
mov
outsb
rcl
movsb
fwait
jnp
mov
cmpsl
scas
andb
test
mov
jmp
push
sbb
mov
shlb
lock
shll
add
rclb
insb
daa
std
xchg
ljmp
int
pushf
test
cmp
add
add
pop
outsl
test
shlb
mov
repz
roll
push
pop
inc
and
mov
xlat
mov
or
mov
xor
pusha
push
es
mov
sub
and
test
push
scas
sub
int3
mov
mov
sub
lock
call
sub
jmp
enter
jecxz
divb
sub
int3
jns
pop
in
inc
dec
sub
punpcklbw
add
bound
xor
jne
clc
xor
adc
pop
in
loop
pusha
outsl
pop
fs
arpl
push
inc
mov
imul
mov
and
pop
xor
jnp
inc
shl
insl
pop
in
andb
js
jmp
sbb
in
scas
inc
lock
scas
jge
push
sub
pop
out
or
xchg
in
rorl
sbb
or
sbb
fcom
adc
xor
dec
cs
pusha
push
mov
iret
mov
loopne
out
test
mov
sbb
ja
cs
in
shlb
xor
maxps
pop
lea
leave
das
imul
inc
add
add
aaa
int3
or
sbb
pop
call
aaa
pop
rclb
movsb
jo
xchg
sbb
insb
cmpsl
dec
imul
clc
sub
out
sbb
test
push
pop
push
inc
insb
int3
mov
stc
adc
in
push
xor
or
sub
std
push
rcr
or
push
jmp
dec
jmp
pop
lret
in
inc
fcoms
sub
rcll
test
jns
mov
roll
sbb
pushf
hlt
loope
xchg
jmp
inc
pusha
adcl
bound
imul
es
imul
sub
dec
pop
stos
pusha
das
imul
mov
mov
in
dec
jmp
test
pop
leave
mov
pop
add
xlat
lods
insb
outsb
cmpsb
sbb
roll
sbb
mov
fcmovb
mov
nop
push
sahf
xchg
lea
test
mov
jmp
ljmp
nop
mov
in
inc
fldt
leave
mov
xlat
jecxz
cmpsb
mov
lcall
nop
ja
pop
iret
xchg
xor
out
fs
aad
add
xor
call
lcall
nop
push
movsb
dec
int3
push
cltd
and
je
cmp
mov
ljmp
fs
orl
xlat
jge
sbb
add
loop
lret
inc
pop
push
mov
mov
int
rol
out
pop
pop
imul
shrw
xlat
fwait
and
insl
pop
pop
int3
call
mov
xchg
mov
xor
rcll
stos
hlt
in
add
jns
imul
cmp
lea
test
imul
dec
fs
in
mov
xlat
fcmovnu
jle
jl
das
and
xchg
mov
das
test
lods
in
xlat
shlb
pop
ja
sub
loopne
leave
lea
cli
sub
imul
pop
ljmp
inc
add
imul
push
scas
test
fbstp
pop
sub
xchg
loopne
fcompl
test
test
data16
out
inc
rorl
mov
iret
iret
cld
inc
loopne
add
sub
outsl
pop
mov
mov
inc
xor
lahf
inc
sarl
sbb
or
stos
dec
test
test
mov
cs
adc
inc
xchg
andb
clc
jb
icebp
scas
lds
inc
aam
in
nop
gs
adcb
ret
filds
jmp
dec
icebp
pusha
jl
je
into
cmpsl
je
inc
sbb
aas
xchg
pusha
push
je
lahf
sbb
jns
in
je
sbb
in
jl
in
or
enter
shll
cmp
add
fidivrs
fistpl
ret
push
lods
inc
cltd
js
in
or
push
fisubl
xor
shrl
loope
cmpl
aas
cli
adc
dec
cltd
fs
enter
mov
rcll
out
xchg
subb
and
xchg
ret
icebp
and
xchg
imulb
and
push
int3
iret
shll
pop
movsb
out
iret
outsl
xor
sbb
in
and
inc
scas
or
cmp
ljmp
or
and
or
mov
fs
jns
cwtl
aad
cltd
inc
cmpsl
and
mov
mov
sahf
and
int3
icebp
add
cmp
sbb
xor
int3
or
jmp
lock
test
lahf
iret
subb
jo
add
pop
mov
cmp
sub
pop
inc
push
adc
movsb
loope
cmp
sti
sbb
mov
popa
dec
js
scas
and
pop
mov
in
pop
and
fstl
enter
insb
add
mov
das
bound
sarb
jmp
sarl
dec
sti
mov
in
mov
pop
popa
jmp
pop
out
je
nop
nop
push
xor
in
cs
call
cmpsb
out
shlb
icebp
xchg
adc
loope
and
push
jnp
roll
fwait
dec
pusha
xchg
jo
add
add
and
and
and
bnd
adc
mov
mov
vfrczpd
sub
sbb
xchg
adc
pop
mov
mov
xor
stos
dec
jmp
sbb
push
add
fst
and
and
data16
loop
addr16
scas
jmp
cltd
inc
mov
or
pusha
adc
stc
test
iret
outsl
out
mov
lahf
sub
mov
add
jmp
stos
rcr
or
sti
adc
push
lret
add
adc
mov
das
push
mov
into
mov
sub
rolb
sub
sub
test
and
xor
insl
loopne
lea
stos
cli
pop
lods
and
pusha
lret
aam
aam
pop
fnstsw
fimull
fwait
cmp
fcmovbe
ljmp
mov
loopne
lcall
xor
jecxz
pop
lods
and
jecxz
dec
add
scas
sub
jecxz
inc
out
add
jmp
push
nop
enter
ljmp
push
cmpsl
push
out
mov
cmp
sbb
lea
push
mov
cmp
das
cltd
out
xchg
sbbb
adc
ljmp
xchg
mov
bound
inc
sub
sub
fidivrl
push
bswap
in
pop
cmp
push
stos
and
inc
sub
les
xchg
pop
insb
out
imul
cs
inc
test
stos
inc
ficomps
out
lds
mov
lods
adc
sub
xchg
mov
and
and
lret
imul
push
stos
in
lods
mov
cltd
mov
sub
mov
out
gs
dec
test
dec
aas
xor
jecxz
data16
pop
lods
inc
push
lods
push
out
mov
shrb
xchg
or
or
es
sbb
out
mov
cwtl
lods
xchg
fcomps
and
fistpl
ret
lods
or
clc
xlat
push
scas
mov
stc
iret
lods
push
lods
cmp
clc
mov
push
xchg
cmpsb
xlat
push
movsl
into
movsb
mov
pusha
xlat
loop
popa
ret
fldl
outsl
or
cmp
sub
xor
mov
out
stos
sub
pop
inc
add
and
mov
mov
jg
mov
call
cli
fimull
pop
lret
sub
and
test
or
mov
aam
cltd
fisubrl
ss
or
fmull
mov
stos
pop
cmp
pop
jp
xchg
sub
adcb
sub
pop
dec
ljmp
scas
repnz
add
dec
iret
jle
test
adc
and
dec
pop
mov
out
popa
push
out
jmp
lods
in
pop
out
fnstsw
sub
pop
loop
fsubr
es
or
fildll
pusha
and
and
fs
pop
call
mov
fstl
int3
push
sbb
into
sub
ss
add
into
push
out
pusha
lods
push
mov
scas
lret
insb
lret
insb
add
es
loopne
test
andb
mov
das
dec
xchg
jg
pop
mov
outsb
loope
iret
mov
or
adc
dec
dec
pop
cltd
lret
pop
and
sub
xor
iret
cmpsl
cmp
and
sbb
fildll
push
push
arpl
loopne
pop
fistpll
mov
pop
lret
jno
pop
in
sarb
lcall
popf
mov
cs
fisubrl
xchg
mov
lcall
add
jno
jp,pn
mov
adc
add
mov
inc
or
cmpsl
data16
sbb
loopne
adc
add
loope
aaa
mov
std
pop
aam
adc
xor
push
jns
jg
adc
into
dec
ret
aas
sub
ljmp
cmpsl
and
adc
cmp
test
pop
insl
pop
mov
push
adcb
push
lcall
out
into
lock
adc
push
mov
js
pop
or
jge
repz
ljmp
dec
sub
cmp
push
jecxz
leave
pop
inc
test
jl
pop
push
lret
lock
mov
leave
sub
pop
repz
xor
lret
stos
push
jns
inc
mov
mov
icebp
out
push
ljmp
fmuls
out
daa
or
stos
popf
sub
jae
xlat
dec
pop
stos
test
rep
test
xlat
pop
out
xor
and
pop
push
mov
sbb
jecxz
add
jecxz
out
and
dec
cmp
rclb
mov
xchg
cli
and
ficoml
hlt
pushf
leave
mov
or
lret
ljmp
mov
xor
dec
inc
in
ret
loope
push
popa
xor
jne
adc
hlt
les
and
push
adc
ficoms
outsb
cmc
and
movsb
inc
hlt
andl
xchg
adc
fiadds
mulb
shlb
push
aam
mov
dec
ficoms
and
lock
lahf
inc
or
xchg
dec
call
dec
mov
out
movsl
push
loope
ss
and
hlt
xchg
jmp
data16
jbe
out
pop
pop
mov
mov
fsubrl
mov
insb
pop
or
loope
daa
push
mov
mov
add
out
in
xchg
hlt
mov
mov
das
dec
je
inc
insb
push
lahf
inc
les
enter
mov
out
enter
out
loop
push
test
add
xchg
mov
add
fidivs
xor
ret
and
ja
dec
adc
cltd
cmp
lods
icebp
add
pushf
notl
mov
cmpsb
stos
cmp
push
je
insb
mov
xorl
daa
and
dec
xor
add
inc
in
je
hlt
xchg
xlat
add
pop
out
into
pop
pop
stos
cltd
mov
cli
mov
das
in
push
in
hlt
xor
inc
mov
popa
aam
out
cmc
add
push
arpl
jg
jo
cmp
push
and
add
data16
sub
aam
jne
loope
add
shlb
mov
lret
aas
ret
lods
in
dec
test
jp
roll
int3
std
iret
fsubrp
iret
cmp
jp
add
push
pop
inc
outsb
aad
insb
ficoms
dec
mov
jne,pt
aam
xor
xor
mov
insb
int3
ret
in
mov
leave
fisttpl
lds
fnstcw
insl
cmpsb
inc
call
inc
iret
sti
rol
dec
cmp
lods
mov
dec
ljmp
pop
fnstsw
add
pop
lret
imul
test
push
adc
mov
out
mov
sub
mov
pushf
das
flds
outsb
jg
les
mov
jg
les
fsub
into
or
add
push
mov
scas
xlat
push
add
outsb
lods
int
pop
mov
in
scas
dec
insb
stos
xlat
or
imul
scas
stos
push
stc
mov
roll
movsl
int3
sub
cmpsl
js
dec
aad
pop
divb
stos
push
add
movsb
xchg
insb
in
and
mov
loope
lret
aas
mov
je
pushl
ds
cmp
and
loope
notl
ret
outsb
outsb
sbb
xchg
jb
movb
ja
mov
mov
xor
ret
lea
jl
mov
push
hlt
push
sti
cmp
movsb
or
aam
stos
and
mov
add
call
mov
jo
iret
push
loopne
xchg
push
shlb
out
xchg
ret
rorb
testl
rcrb
mov
test
iret
out
mov
repnz
push
loop
jge
xchg
mov
jl
hlt
mov
inc
pusha
push
mov
sub
nop
aam
or
xlat
orl
mov
cmp
push
xor
sub
adc
adc
popl
and
mov
pushf
adc
inc
sarl
movsl
add
movb
ror
cltd
jp
mov
pop
push
cmp
push
jnp
xor
jo
inc
pushf
movnti
mov
inc
rep
push
ret
mov
into
adc
inc
fwait
sahf
pop
xchg
scas
call
and
imul
in
cli
mov
mov
mov
call
mov
insl
ret
xchg
pop
add
cmp
lret
cmp
sbb
lea
rclb
cltd
xor
add
jp
stos
xchg
jnp
jmp
push
dec
mov
mov
bound
out
stos
push
sbb
enter
sbb
gs
xor
nop
jb
mov
lret
xchg
in
int
jne
and
pop
bound
sbb
int3
cli
imul
cmpsl
sub
cltd
mov
mov
cwtl
mov
cwtl
push
and
mov
mov
mov
push
in
and
add
popa
xchg
test
loop
movsl
and
adc
lcall
fiadds
dec
mov
jge
insb
shll
or
mov
sbb
dec
fildll
or
enter
iret
aas
and
xchg
inc
or
xchg
xor
mov
lahf
push
imul
stos
std
cmpsl
lods
dec
mov
std
fadds
repnz
dec
dec
dec
cs
shlb
std
dec
cmp
add
mov
inc
pop
dec
out
cmpsl
xlat
iret
ljmp
popf
cli
fimuls
and
outsb
jge
mov
pushf
lock
insb
mov
pop
and
loopne
mov
add
jbe
adc
stos
stos
repz
shll
stc
pop
add
out
scas
pop
cli
jp
mov
inc
push
pushf
mov
daa
jle
lods
aaa
cmp
pop
sbb
cmp
mov
dec
dec
cmp
int
dec
es
pop
or
cmp
pop
mov
xchg
pop
mov
cwtl
push
aad
xlat
js
push
insb
or
inc
push
xchg
cmp
enter
pop
iret
xor
pop
inc
cld
imul
int3
leave
inc
pop
lcall
aad
inc
negl
les
dec
inc
mov
xabort
jge
sbb
pop
insl
pop
adc
mov
mov
scas
stos
out
shr
mov
push
fmull
and
mov
cli
lret
mov
addr16
lret
push
push
loope
sbb
sub
jmp
in
push
negl
into
cmp
sbb
cmp
add
sub
imul
pop
fxch
leave
into
push
and
or
pop
lods
sub
pop
inc
iret
xor
ror
mov
pusha
fbld
inc
rclb
aaa
insb
inc
xlat
push
into
or
xchg
pop
into
mov
cmpsl
xchg
pop
xlat
iret
scas
push
into
cwtl
lods
test
pop
stc
iret
pop
scas
push
mov
jmp
fisubrl
or
sti
insb
jl
int3
into
mov
in
iret
out
pandn
mov
mov
push
mov
push
mov
into
ljmp
mov
or
push
out
int
lods
add
in
pop
mov
dec
adc
sub
push
fildll
aad
push
sbb
rcrb
rcr
mov
sti
cltd
fadds
mov
dec
jns
fs
dec
not
addr16
adc
call
mov
add
outsb
out
decb
push
out
movsb
sub
decl
out
movsl
stc
out
pop
xlat
out
jbe
sbb
push
jae
mov
jmp
xor
shr
and
pop
pxor
out
push
lret
movsb
pusha
adc
mov
inc
mov
and
lret
add
fbld
out
into
lods
pusha
xor
rcrb
shlb
mov
add
shrb
mov
mov
movsb
loopne
dec
or
test
ljmp
nop
pop
out
scas
addr16
fcmovne
jmp
xor
add
iret
subb
mov
adcb
and
push
lock
fidivs
iret
add
push
mov
push
push
mov
mov
push
lods
jg
pop
mov
in
test
and
jmp
ljmp
lret
mov
push
sub
loopne
sar
jmp
scas
push
cld
icebp
xchg
fs
pop
insb
push
mov
adc
fs
es
popf
loope
and
jnp
int3
mov
pop
in
iret
out
fists
insb
outsb
xor
out
pusha
fisubrs
cs
out
mov
outsb
inc
pop
cmp
add
pushf
mov
cmp
test
jge
mov
push
sahf
sub
cmpsl
mov
faddp
inc
leave
out
mov
and
insl
sti
in
cs
cld
add
test
cli
sub
push
lret
xchg
mov
push
imul
call
cmpsb
jne
jl
push
pop
pop
test
stos
stos
nop
mov
icebp
push
fcomps
jge
pusha
push
sbb
mov
pop
js
mov
in
sub
bound
imul
ja
mov
xchg
shr
call
outsl
cwtl
cli
in
jmp
dec
mov
icebp
in
jmp
mov
sbb
mov
fcmovu
gs
cmp
sarb
jmp
pusha
test
jecxz
scas
imul
inc
dec
leave
test
cwtl
or
dec
fisubrs
xlat
jns
cmp
push
rorl
add
sbb
jae
jecxz
cmpsb
sbb
sub
pusha
int
fsubrs
fsubl
xor
push
or
popa
pop
sub
lret
scas
pop
cmp
mov
fmulp
add
mov
in
jecxz
push
xchg
ret
or
inc
sub
in
push
jb
out
pusha
push
sub
pusha
call
out
das
pusha
vprotb
mov
and
call
or
mov
notl
sub
clc
iret
repz
shl
inc
dec
lret
outsl
xchg
or
out
mov
inc
add
mov
and
push
dec
jecxz
lods
ss
cmp
pop
sbb
repz
rcll
mov
es
fcmovbe
out
repz
xchg
in
fs
ret
mov
rolb
imul
daa
call
outsl
dec
sub
loope
jae
adc
ror
add
xchg
sub
sub
ja
loope
pop
fwait
pusha
jb
in
push
imul
add
popa
iret
push
ss
sub
call
test
adc
jecxz
jg
mov
bound
sub
jmp
orl
mov
sub
jmp
mov
data16
jb
fisubrs
jae
sub
lods
into
sub
stos
xor
sti
push
jle
in
xchg
fimuls
pcmpeqd
orl
iret
subl
or
mov
jmp
fbld
mov
push
pop
pop
loopne
jo
loope
shlb
daa
icebp
or
and
pusha
popa
lock
jo
mov
shlb
dec
lock
sub
push
mov
jo
lock
std
pop
stc
scas
int
mov
jmp
rcl
inc
insb
dec
add
fnstsw
clc
push
and
int3
icebp
sub
js
shrb
push
out
lea
pop
jge
aas
test
pusha
scas
cltd
push
mov
xchg
popa
xchg
in
sub
push
addr16
pusha
scas
push
sub
mov
pop
aas
negl
nop
imul
pop
shl
xchg
xchg
mov
pop
or
iret
jge
imul
mov
dec
pop
ret
and
pushf
stc
ds
popf
and
inc
enter
aaa
add
mov
lcall
cmp
in
popa
push
xlat
aad
mov
jae
outsb
and
jnp
push
int
push
lock
mov
fcomps
sti
mov
icebp
lods
inc
pushf
movsb
mov
ja
pop
std
adc
and
lods
jle
mov
ss
xchg
rcll
xchg
arpl
pusha
imul
push
xchg
and
xorl
shll
mov
cmpsb
test
mov
or
jns
cmc
xchg
pusha
out
sbb
sbb
adc
xorl
jecxz
bound
outsl
les
negl
jnp
lock
aam
lret
and
daa
add
mov
shll
scas
in
dec
shrb
sbb
pop
push
mov
data16
xchg
adc
add
jmp
pop
mov
jbe
sarb
leave
cmp
clc
jo
in
and
sti
jge
xchg
mov
sahf
push
and
pusha
mov
xlat
push
int
sbb
inc
jae
add
adc
push
adc
xchg
int3
and
inc
cmp
pop
sahf
adc
mov
inc
jge
xor
js
fbld
rolb
adc
inc
xlat
and
push
push
into
mov
or
pop
mov
lock
jge
mov
dec
ret
xlat
and
push
push
into
lret
ja
dec
stc
jns
in
repz
arpl
push
add
xor
push
dec
loopne
xor
decl
sti
lahf
xor
mov
movsl
sbb
mov
ljmp
add
add
pop
scas
sbb
add
loopne
jle
cmp
cmp
pop
cli
xor
in
aad
mov
testb
call
mov
scas
jnp
aad
sub
xor
mov
ja
and
cs
in
cmc
fxch
xchg
pop
add
cmp
jo
lcall
cltd
repnz
insl
xchg
frstor
popf
pop
cmp
shll
lea
xlat
push
inc
scas
inc
sbb
adc
xor
int
push
push
scas
cmpsb
dec
mov
test
push
mov
cmpsl
mov
cld
add
iret
mov
call
out
into
add
rcll
mov
push
adc
stos
jmp
dec
sub
mov
je
aam
movsl
push
subb
mov
lods
mov
dec
inc
int
push
fildll
lret
pushf
imul
out
mov
rcr
xchg
pop
mov
ret
sarb
nop
pop
mov
lahf
insl
sti
and
rcll
xor
mov
aas
popa
cmpsb
and
popa
xchg
xlat
mov
cmp
cmp
cmp
lcall
fisttps
cli
dec
mov
push
dec
aaa
rcrb
pop
scas
and
cld
mov
into
fdivl
and
push
cld
sub
push
jmp
icebp
xchg
push
fcoms
cld
jle
stos
and
add
xchg
mov
adc
sbb
ljmp
clc
loopne
aaa
pop
mov
jmp
fbstp
mov
mov
cmp
scas
movsl
pop
and
outsb
rcrl
push
jl
dec
aaa
pushf
dec
pop
jb
shr
adc
add
mov
les
pop
push
fcompl
es
aaa
das
mov
dec
mov
cmpsb
jbe
dec
push
lock
aad
jecxz
pop
mov
imul
jge
push
fs
negb
rorb
jge
mov
ds
into
iret
xchg
les
fs
out
insb
push
leave
rorb
or
xchg
jb
lret
rolb
pop
push
dec
xlat
xchg
push
cwtl
sti
xchg
les
pushl
pop
pop
mov
dec
or
mov
pusha
fwait
icebp
stos
ficoms
inc
shrl
jl
mov
sub
mov
jle
lods
out
mov
lods
jo
dec
or
pop
inc
push
xor
and
lock
loopne
pop
mov
insb
xlat
jg
outsl
lods
push
inc
pop
xor
and
dec
out
lods
fmulp
pop
mov
insb
mov
jle
outsb
lods
pop
dec
pop
aas
iret
das
scas
pop
insb
pmovmskb
into
out
lods
pop
mov
insb
xlat
jge
insl
loop
dec
add
in
xchg
or
incb
lock
and
js
int
mov
popf
pop
lock
insl
cs
js
fstp
repnz
int
mov
popf
lock
js
imul
push
mov
jno
cmp
mov
jno
cmp
lock
mov
push
roll
lock
mov
jno
cmp
popf
repz
call
push
roll
adc
cld
push
push
mov
cs
sub
sbb
push
sbb
dec
cltd
fwait
pop
dec
jmp
pop
lret
dec
dec
dec
imul
mov
js
lcall
mov
cmp
inc
sub
icebp
sub
adc
cmpsb
sub
sahf
popa
fisubl
cmp
xchg
push
pushf
imul
add
cmp
int
push
dec
repz
add
shl
jno
mov
lcall
mov
pop
rorl
or
insl
mov
adc
push
shrl
add
iret
out
inc
dec
movsl
cmc
xor
rclb
test
mov
or
movsl
shl
inc
aam
and
into
push
sbb
sahf
inc
clc
fwait
popf
sbb
repnz
push
arpl
xchg
js
jle
int3
divb
lds
ret
rorl
scas
jae
repnz
imul
adc
pop
inc
push
stc
idivl
imul
inc
lret
or
pop
jle
test
icebp
inc
cwtl
dec
adc
cmp
or
push
insl
je
push
imul
incb
and
pusha
leave
adc
add
cmc
cwtl
nop
movsl
add
cmp
jnp
sub
inc
in
adc
cmp
movsb
cli
js
adc
inc
cmp
nop
cmp
add
stc
push
in
mov
mov
sub
push
mov
dec
dec
iret
ret
push
inc
jbe
jle
in
sub
lahf
addl
test
fists
mov
leave
filds
xlat
push
sbb
das
mov
adc
inc
shlb
outsb
inc
lea
mov
enter
es
dec
sbb
inc
mov
pusha
hlt
repz
jb
in
int
push
in
pop
cmp
stc
cmp
inc
aad
sahf
inc
gs
les
jg
cli
or
sub
roll
pop
dec
or
shlb
mov
or
jnp
clc
adcb
ja
or
cld
pop
pop
or
jne
adc
add
dec
push
insl
scas
mov
into
pop
pop
sub
ljmp
ljmp
cmovp
adc
aaa
pop
dec
sub
pop
lock
add
loopne
xchg
test
sbb
hlt
repz
scas
inc
mov
add
mov
inc
sbb
mov
inc
jnp
sub
xchg
inc
sbb
cmc
data16
mov
pop
hlt
jne
push
pusha
push
loopne
insb
pop
test
fisubs
in
sahf
add
stos
push
repz
popf
adc
sarl
xchg
or
sub
into
fildll
js
mov
test
fdivr
xchg
ds
jnp
gs
xchg
shlb
andl
xlat
add
jge
mov
fs
fwait
adc
ds
sti
shlb
mov
sub
loope
ret
mov
add
mov
sub
adc
out
out
dec
mov
sbb
psllq
test
loopne
dec
push
int
pushf
lret
push
andl
xor
push
xchg
roll
or
and
jae
cmp
push
jl
xchg
dec
stc
jns
cmp
xchg
xchg
dec
ret
sbb
orl
dec
adc
pusha
cmc
push
jl
sti
xchg
les
pop
lahf
loop
cmpl
dec
sbb
push
xchg
add
dec
dec
add
loopne
sbb
test
xchg
dec
aam
adc
add
push
out
xchg
xchg
dec
sti
repz
sbb
mov
es
sub
insl
dec
imulb
cwtl
sti
xchg
cmc
mov
sahf
inc
sbb
vpmullw
add
push
add
mov
dec
call
mov
adc
decb
xorl
fs
lock
xchg
dec
sti
repz
jg
xorl
jmp
repz
xor
push
lods
sbb
push
fisubrl
inc
aaa
sbb
popf
sbb
ret
push
inc
mov
aad
xchg
mov
add
dec
sbb
out
adc
int
cmp
clc
xlat
jns
adc
cmp
xor
scas
in
repz
dec
push
lock
lods
scas
push
addl
aas
mov
dec
icebp
fsubs
add
lsl
mov
in
jnp
ljmp
sbb
cli
xor
jmp
mov
inc
and
into
js
fwait
icebp
stos
fisubrs
lds
xchg
xchg
jmp
sahf
push
lods
pop
pop
fildll
fmul
int3
scas
mov
jle
addl
mov
mov
iret
pop
loopne
int3
arpl
nop
mov
pop
pushf
shlb
mov
ss
movaps
or
into
pusha
pusha
mov
pop
pop
push
lods
sbb
scas
pop
insb
mov
cmpsl
into
xchg
lods
xlat
pop
stc
sub
push
push
push
inc
fimuls
scas
mov
aad
or
insb
leave
in
outsl
inc
and
dec
or
fwait
adc
mov
movsl
lods
loopne
fcoml
in
roll
inc
int3
shll
mov
dec
sbb
fistps
jns
aad
loopne
push
frstor
jnp
loop
aaa
scas
mov
aaa
add
xlat
pusha
xchg
pop
push
pusha
sub
out
pushf
pusha
test
and
pop
inc
loopne
leave
lcall
popa
xchg
push
daa
jg
sub
mov
mov
pop
dec
lret
outsl
data16
rcl
mov
adc
push
gs
test
jo
test
es
daa
add
mul
ret
shrl
int3
push
cmp
aam
subl
and
dec
ds
loopne
jo
fadds
mov
inc
mov
test
dec
popf
scas
pusha
push
dec
ds
cmc
movsb
cli
pop
aas
mov
dec
pop
imul
pushf
lods
mov
xchg
leave
add
mov
ds
stos
or
sti
xor
inc
pop
in
mov
not
ret
loopne
sub
fucomp
pop
add
or
cmpsl
dec
ret
xchg
sbb
cs
test
pop
xor
cmp
mov
lock
adc
rcll
mov
push
adc
stos
jmp
dec
sub
mov
out
adc
loopne
in
rcrb
outsl
aaa
push
dec
fidivrs
pusha
lock
js
xorb
sbb
and
out
cli
sar
fists
mov
sbb
rcl
pusha
test
mov
sub
dec
cwtl
int3
inc
jno,pn
jbe
lods
push
and
out
lret
cmc
fs
xorl
out
imul
xchg
and
fs
mov
xor
mov
mov
mov
out
add
push
xchg
loope
xor
ss
inc
mov
xor
aad
xchg
outsb
mov
jae
shl
jne
lds
in
into
cli
cmp
call
pusha
cli
push
ljmp
out
stos
mov
jmp
xchg
xchg
xchg
fistpl
xchg
mov
mov
je
dec
inc
into
into
push
cmc
movsl
adc
mov
push
in
mov
sub
ret
xor
jnp
lods
repnz
imul
in
inc
pushw
cltd
fists
add
ljmp
shrb
xor
outsl
outsb
sbb
int3
pop
mov
pop
scas
mov
sub
das
jle
faddp
and
jle
movsl
mov
jmp
bound
pop
mov
roll
add
insl
nop
jae
inc
hlt
xor
int
push
add
aas
js
shlb
rol
rcrb
push
pop
pop
pop
lods
scas
iret
cmpsl
pop
movsb
mov
pop
jl
jp
nop
mov
dec
pusha
fdivrl
pusha
jmp
addl
in
push
imul
and
xor
insl
int
jo
cmc
pushl
pop
inc
mov
out
in
mov
popf
jle
lcall
push
add
add
rcll
xchg
cmpsl
dec
dec
pusha
in
mov
je
mull
out
push
fs
data16
jae
cwtl
cltd
push
in
lods
loopne
aam
lock
pop
inc
inc
loop
pusha
lods
jecxz
scas
in
loopne
push
mov
hlt
pop
ljmp
add
arpl
jmp
shl
jle
in
sub
adc
add
mov
aam
fadds
push
pop
fucomp
cmc
sub
inc
push
pusha
shr
in
in
les
out
loop
pushf
lods
call
push
cmp
iret
dec
sahf
mov
out
jno
out
pop
mov
insl
and
movlps
push
or
adc
dec
hlt
enter
popf
out
out
out
adc
rol
lods
loopne
ret
out
dec
jecxz
add
std
fisttps
out
and
stos
in
lock
push
scas
dec
rcr
push
mov
insl
popf
and
imul
pusha
in
cpuid
shrb
roll
adc
out
scas
rcrb
jmp
nop
mov
out
fsubrs
in
cwtl
clc
out
int
sahf
out
scas
xchg
pushl
cli
jmp
fucomp
or
out
gs
imul
add
pusha
fists
mov
icebp
imul
out
lret
mov
in
in
inc
mov
jp
fstpl
rcr
mov
sub
pop
loopne
fidivrl
outsl
daa
out
ficoml
sub
lcall
loop
rcrb
call
movsb
loop
hlt
pusha
test
sar
data16
sub
jmp
lret
cltd
outsl
aad
fwait
cmp
test
mov
jmp
push
ljmp
js
jmp
out
push
push
insl
imul
jmp
pusha
insb
mov
fists
jg
pusha
in
fbld
jg
out
stc
nop
jo
outsl
into
jmp
insb
scas
push
add
in
lock
fmuls
loopne
enter
or
in
std
loope
mov
movsb
jecxz
cmp
out
out
and
in
out
test
enter
mov
stos
enter
out
in
nop
aad
inc
push
insl
xlat
push
popa
in
mov
cs
mov
ljmp
sub
ficompl
ret
cld
loope
or
mov
loope
sub
out
popa
in
js
out
cmp
xchg
push
jl
mov
shlb
or
inc
pusha
jo
les
icebp
push
pop
or
ja
insl
scas
clc
out
fsubp
pop
loop
pop
xchg
and
popa
loopne
call
int
nop
push
scas
out
clc
out
sub
mov
out
in
dec
cmpsl
insl
test
jmp
js
out
jle
mov
stc
loope
rcl
shrb
fucomp
push
fldcw
pushf
in
jmp
test
push
lret
aas
out
jbe
shr
fistpll
in
aaa
sar
xlat
push
loopne
hlt
in
cmp
jmp
ljmp
in
dec
out
sbbl
iret
in
cmc
clc
outsb
push
mov
push
push
out
es
inc
jbe
add
loop
in
in
test
in
loope
xor
sub
jecxz
arpl
jecxz
movsb
pusha
sub
lret
add
mov
nop
push
sahf
in
repz
repz
out
adc
nop
add
loope
loop
clc
in
in
inc
push
loopne
push
popa
jmp
fcmovu
jbe
call
addr16
loopne
ret
loopne
mov
jmp
mov
out
lock
hlt
aad
jecxz
cwtl
in
rorb
jecxz
loop
jg
adc
arpl
out
bound
insb
push
loopne
out
or
loope
add
jmp
jecxz
rcll
push
leave
push
loope
lods
lock
outsb
push
adc
ljmp
bound
pop
push
arpl
ljmp
dec
pusha
mov
call
in
push
out
fs
imul
pusha
out
pushf
loop
insb
test
shlb
or
ljmp
mov
leave
es
imul
fbld
in
mov
mov
jle
addr16
out
jbe
jmp
push
jb
int3
mov
xor
nop
cld
jmp
or
inc
pusha
in
test
and
pusha
xchg
insl
pusha
ljmp
arpl
imul
push
pusha
call
ljmp
test
or
push
push
nop
or
loopne
mov
in
scas
or
jmp
jb
popa
ljmp
push
addr16
call
insb
in
loopne
xchg
sub
lock
shrb
ljmp
mov
test
sub
stos
push
push
fsubrs
mov
jl
mov
arpl
stos
fisttps
out
inc
ror
xor
scas
mov
xchg
into
pusha
sbb
cmp
lods
jb
faddl
in
xor
pusha
lods
and
cmp
lods
cmc
aad
inc
shrb
sub
cld
shr
mov
scas
jmp
fdivrp
lods
imul
xor
jge
frstor
sub
sbb
in
push
jmp
outsl
call
pushf
fs
in
mov
or
aam
popf
sub
cmpsb
lods
stos
aas
test
fwait
or
loop
mov
imul
int3
lret
mov
out
mov
dec
mov
mov
push
jecxz
cmc
insb
ljmp
cmp
sub
aas
loopne
movsb
pusha
call
or
insb
mov
nop
in
sbb
push
addr16
lahf
jmp
in
jl
fnstenv
mov
sti
in
call
push
out
faddl
lahf
jmp
pop
loopne
test
aaa
gs
call
jbe
movsb
push
out
pop
pusha
jmp
inc
lahf
out
es
fldl2t
cmp
iret
jecxz
addr16
aam
mov
loopne
pop
push
xor
out
ficomps
leave
jo
ljmp
pushf
call
out
faddl
icebp
into
fsubrp
fsubrs
and
fs
out
in
add
mov
js
jmp
pushf
xor
icebp
outsb
mov
push
loopne
xor
jl
sti
jo
subb
and
movsb
aad
lea
sti
push
add
dec
sub
mov
push
repz
out
out
jmp
pushf
cwtl
dec
nop
rcrl
movsl
or
adc
scas
mov
iret
mov
dec
push
in
xchg
jnp
mov
iret
loopne
pushf
sub
ret
call
xchg
xchg
adc
in
pop
pusha
jg
rorl
test
jne
push
jp
and
push
in
pushf
jnp
or
das
out
inc
inc
mov
fists
lahf
enter
sbb
mov
loopne
out
dec
add
push
iret
and
in
fs
mov
shrb
cmp
stos
xchg
out
out
int3
lcall
mov
sub
in
sub
pop
sbb
cmpl
cmpsb
pushf
daa
ljmp
out
push
pushf
aas
lods
call
je
shrl
nop
push
sub
outsb
popa
in
jo
jmp
test
mov
and
push
rcll
jl
into
leave
shr
mov
out
cmpl
in
fldenv
ffree
lahf
in
in
or
imul
xor
mov
jecxz
mov
insl
sbb
jmp
push
insb
scas
and
adc
scas
mov
cli
dec
out
ljmp
insl
test
lret
shlb
dec
or
mov
mov
in
outsl
lcall
pop
sbbb
outsl
scas
jo
mov
and
sbb
mov
xchg
mov
out
mov
ficoms
mov
ja
jge
add
loopne
push
out
loopne
ljmp
or
sbb
push
inc
std
addr16
ds
loope
jmp
xlat
mov
cmpsl
push
movsb
pusha
out
cmp
jmp
subl
outsl
fucom
leave
pusha
out
lahf
push
loope
mov
mov
jecxz
sti
imul
jle
loopne
stc
ret
pop
loopne
jmp
fdivs
enter
lcall
cwtl
out
pusha
ljmp
neg
pushf
jmp
das
gs
jmp
out
mov
cmp
sbb
mov
outsl
aad
mov
out
add
jl
arpl
data16
out
inc
push
lods
pavgb
xchg
mov
push
in
jl
fldl
ljmp
pop
cld
outsl
lret
pop
insl
arpl
jnp
jl
and
sub
outsb
aad
jl
out
out
imul
int3
out
jne
nop
and
mov
sub
data16
push
addr16
pusha
addr16
insb
shl
xchg
out
pop
loop
ljmp
shr
ficoml
jmp
outsb
mov
sub
mov
jmp
jl
add
ljmp
push
das
aas
in
jecxz
mov
leave
inc
lods
loopne
push
aaa
pusha
loop
jl
js
inc
test
push
pusha
loopne
ret
int3
out
and
mov
aas
test
or
cwtl
mov
in
jg
ret
and
lods
test
fs
cld
xcrypt-ofb
cmpsl
outsl
daa
in
cmp
lock
push
xchg
imul
cmp
insb
fs
pop
dec
jg
mov
cmpsb
leave
call
pop
in
into
lret
push
and
js
stos
test
movsb
dec
sbb
call
xlat
fs
jbe
out
test
lds
movsl
jl
out
lds
out
mov
fmulp
dec
pop
jmp
je
fnstenv
clc
fidivs
clc
cwtl
push
and
mov
and
mov
lret
jecxz
jmp
ficompl
shl
jge
mov
cli
loop
adc
std
popf
or
jmp
cmp
jnp
int
aad
in
xor
and
cs
cmpsb
std
push
repz
outsb
in
ret
jmp
add
scas
pop
jl
dec
imul
call
in
inc
addr16
pop
in
outsl
loopne
add
sub
and
mov
jmp
xchg
sti
ret
scas
cwtl
jmp
out
and
insb
pop
lret
xchg
out
das
outsl
rolb
arpl
cmp
or
pushf
gs
insb
hlt
in
popa
call
es
mov
push
in
out
out
in
hlt
fcom
cs
add
push
cmp
and
outsl
repz
loop
out
fs
or
call
in
rcrb
pop
fst
jmp
cmp
ja
insl
call
fucomip
and
pop
lahf
test
sarl
out
mov
sbb
bound
int3
shlb
mov
ret
in
ret
sub
push
int3
imul
js
pusha
mov
loop
mov
gs
repnz
mov
mov
imul
outsl
sub
out
out
mov
frstor
push
add
ljmp
lahf
loopne
jge
out
cmpsb
jecxz
and
movsl
ljmp
rclb
inc
rolb
lock
mov
mov
vmulps
imul
jmp
pusha
pop
aas
mov
push
lret
xor
test
or
iret
push
xor
stos
lods
push
out
in
int
push
fisubrs
pop
into
into
lods
xor
ds
scas
lahf
push
and
into
dec
or
stos
insl
push
pop
insb
int
aas
sahf
scas
and
lock
sahf
lods
das
mov
scas
lods
pop
pop
cmp
push
call
aas
mov
lods
push
lea
iret
jge
push
insb
std
fwait
inc
in
fcmovnb
jle
lret
insb
mov
leave
push
jmp
icebp
and
pop
ror
shrb
shrb
xlat
and
popa
lods
loop
pop
in
jmp
in
xchg
xor
mov
int
into
out
data16
fidivrs
and
lret
cmc
pushf
adc
out
or
mov
lret
mov
xor
iret
jg
mov
shl
fidivrs
inc
outsb
mov
or
sbb
ljmp
jle
xor
adc
outsb
sub
test
iret
or
test
ljmp
sub
loope
std
repnz
rolb
sbb
jecxz
fbstp
repnz
dec
out
in
cmc
jbe
add
push
loope
out
je
dec
fldt
rcrb
leave
add
shl
in
loop
and
mov
jmp
ljmp
mov
loope
stc
out
jecxz
in
and
and
mov
mov
repnz
repz
call
sub
mov
loope
sti
pusha
fs
popa
mov
xor
loope
jno
insb
imul
js
loope
jns
bound
scas
mov
xor
xor
jb
jg
pushw
imul
cmp
cmp
jp
ja
rol
roll
loope
add
aam
rcll
adc
int3
or
fstps
sbb
ret
lsl
add
rcr
rcrl
adc
adc
lret
pop
or
or
fcmovbe
fistl
sbb
sbb
inc
dec
inc
addb
push
nop
xchg
loope
xchg
dec
dec
inc
dec
mov
push
pop
cwtl
pushf
loope
cltd
dec
inc
inc
inc
mov
push
push
push
sahf
xchg
loope
xchg
inc
dec
dec
dec
xchg
pop
pop
pop
xchg
lcall
insl
loope
cmp
cltd
push
jle
add
and
mov
and
shrb
and
out
xor
and
jg
push
mov
pusha
shrb
mov
outsb
push
std
pusha
push
shr
jno
sub
push
mov
out
ds
cmp
or
mov
out
sub
loopne
push
xchg
push
outsl
pusha
in
pop
dec
dec
bound
and
loopne
pop
fnstsw
push
int
mov
ret
jge
pop
mov
mov
in
cmpsl
push
vhsubps
jge
and
inc
pop
ljmp
in
xlat
xor
daa
mov
shl
dec
out
imul
mov
adc
and
push
sub
ror
loopne
xchg
insb
aaa
ljmp
outsb
sbb
subl
rclb
outsl
insl
jecxz
pusha
jmp
jmp
mov
in
pop
xchg
and
fucomip
mov
and
in
rolb
push
sbb
mov
mov
shr
and
inc
xchg
insl
sbb
fcoms
cmp
cmc
inc
and
cmp
scas
inc
xchg
inc
and
jmp
pusha
addl
push
sbb
mov
xchg
movsl
inc
movsb
jmp
sub
lods
adc
rcl
xor
xor
jmp
es
jne
push
xor
sub
in
loope
ljmp
and
fisttps
mov
loope
ret
push
mov
lret
push
cmp
jae
sahf
pop
dec
cvttps2pi
pop
lea
pusha
bound
cmpsb
pusha
push
arpl
pop
in
imul
jmp
sub
cli
test
mov
gs
add
or
imul
sbb
pop
dec
movsl
int
fsubrl
fsubrp
lret
dec
dec
fucom
jmp
ljmp
pop
stos
movsb
or
sub
fsubr
test
in
shrb
aad
test
lcall
jl
dec
xchg
push
mov
xchg
mov
sbb
shl
xor
sub
xchg
js
in
fsubl
outsl
or
outsb
cmpsl
or
out
call
mov
loopne
and
repnz
pop
fisubs
xlat
mov
lods
push
popa
pop
add
aas
push
push
iret
lret
lods
imul
jecxz
ljmp
jl
lock
cld
lret
mov
int3
insb
push
fcmovnu
lods
repnz
imul
pop
lret
jp
mov
in
fiaddl
xchg
test
pusha
mov
pop
test
outsl
js
movsb
mov
in
and
sahf
cltd
mov
popa
in
mov
out
stos
adc
mov
out
stos
xchg
out
fistpl
jno
outsb
in
pop
scas
cmp
stos
pop
cli
jns
cld
stos
outsb
adc
hlt
outsb
lret
insl
push
into
or
or
fwait
mov
repnz
outsb
jmp
cltd
fmul
xor
loopne
enter
mov
inc
inc
int
push
add
pop
xor
or
inc
out
jp
out
or
pop
jno
mov
mov
jae
inc
out
pcmpgtb
xlat
dec
into
stc
lods
jne
push
xlat
shll
fildll
xlat
aam
fs
push
fildll
scas
cmc
push
ljmp
mov
mov
loopne
test
jb
jecxz
mov
sbb
and
or
packuswb
imul
jno
loopne
push
pusha
sub
jmp
pop
pop
push
cli
jp
loope
jl
out
es
lret
sub
cmp
and
mov
outsl
fstpl
mov
xlat
lret
mov
and
pusha
dec
inc
and
fcompp
mov
cli
xchg
insb
test
loop
and
and
stos
lods
loopne
xchg
dec
aaa
push
xlat
movsb
dec
mov
sbb
jl
imul
rorl
shll
add
mov
pop
mov
adc
lods
jp
pusha
iret
ljmp
or
in
or
fs
scas
mov
fisubrs
gs
adc
popf
js
lods
std
fimuls
jge
sbb
fsubrp
das
imul
int3
sbb
push
add
or
push
lahf
imul
xor
imul
fstpl
jb
mov
aam
outsl
fs
fimuls
push
enter
in
push
insb
push
ror
and
lahf
xchg
out
gs
adc
xlat
in
mov
in
inc
sar
sbb
push
fabs
pop
into
lret
call
add
call
stc
add
in
daa
dec
cmp
add
in
mov
mov
stos
xchg
jmp
lods
int
mov
mov
outsl
int3
dec
sub
cltd
jle
aam
lods
pop
mov
ficompl
fwait
lcall
dec
mov
jns
jne
inc
ds
mov
imul
test
mov
fsubrl
lods
jecxz
ljmp
or
sbb
bnd
dec
cmpsl
scas
dec
lret
loopne
loopne
mov
int3
sub
mov
xchg
sbb
ljmpw
lret
mov
in
aam
leave
sub
lods
faddl
mov
loop
insl
and
add
imul
pop
cwtl
cli
fisubrs
ljmp
jecxz
sbb
mov
iret
pop
pop
ds
sub
mov
cld
sbb
movups
lods
cmp
mov
pop
pop
loop
dec
xor
jmp
es
sub
dec
sbb
mov
in
adc
xor
out
ja
cmp
int3
push
ret
loopne
cmp
scas
addr16
push
mov
inc
imul
int3
cltd
test
push
out
add
and
out
sbb
jmp
inc
mov
loop
lods
dec
pop
cli
cmp
push
insb
out
mov
push
loopne
pop
mov
cmpsb
mov
insb
aaa
dec
and
popa
dec
lret
mov
out
std
cmp
aad
cmp
add
cmp
jns
test
test
insl
mov
clc
pop
adc
jg
or
pop
xor
outsl
fs
pop
dec
xor
pushf
lock
out
icebp
sub
xchg
mov
loopne
xor
test
stos
nop
popa
rolb
mov
ja
imul
inc
mov
ja
loopne
xchg
sarb
or
mov
push
insl
scas
ds
stos
pop
fs
loop
mov
sub
xor
xchg
mov
pop
sahf
or
stc
fsubs
xlat
out
and
outsb
frstors
fdivrp
jnp
sub
in
out
les
mov
fsubr
mov
push
loopne
ljmp
les
pop
cmp
push
pop
mov
lea
jmp
lea
fsubr
leave
lcall
jp
into
sub
sub
into
movsb
pop
and
out
pop
shrb
ret
addr16
dec
push
inc
out
icebp
dec
cwtl
arpl
cmp
and
sub
ljmp
sbb
jnp
das
fs
in
sbb
dec
jnp
jecxz
pop
xchg
repz
ficomps
jo
fldcw
scas
dec
test
jnp
in
stos
fcmove
xchg
outsb
xor
sub
mov
pop
loop
outsb
les
lods
dec
inc
loopne
pusha
imul
clc
idiv
dec
add
dec
in
insl
mov
sbb
jnp
mov
push
in
fs
es
in
jl
xchg
notb
aas
dec
sub
es
imulb
loopne
cmp
jnp
and
es
insb
lods
in
fdivrp
cmc
test
mov
jmp
mov
push
in
clc
pop
insl
xchg
fsts
cmpsl
cmp
jle
in
insl
cmp
lods
shl
fsubl
mov
jg
mov
cmp
push
mov
fs
gs
sbb
mov
cmp
mov
adc
pop
loopne
and
push
insb
imul
popaw
push
mov
in
lods
fisubl
outsb
mov
fldenv
and
out
lock
addr16
iret
lods
jmp
mov
inc
push
adc
stos
in
push
pusha
or
iret
stos
push
dec
fisubrl
int
sahf
jbe
xchg
insb
jp
cld
call
push
mov
jo
gs
idivl
dec
call
and
sbb
pusha
addr16
out
fstps
and
data16
fs
jecxz
scas
mov
push
lods
enter
daa
jne
int
fstl
jle
cld
xlat
lds
lock
stos
mov
outsl
loopne
jmp
jmp
data16
push
cmpsl
inc
pusha
mov
pop
jns
enter
daa
and
pop
push
shlb
or
cmp
cli
xor
push
mov
daa
out
test
cli
out
mov
pop
imul
ljmp
test
mov
cmc
outsb
iret
js
inc
in
out
movl
shll
mov
xor
sti
xchg
ret
test
mov
push
dec
mov
mov
cwtl
ret
adc
fiadds
fsubs
outsl
mov
and
or
mov
scas
fcomip
in
div
lahf
movsb
lret
add
jnp
xor
movsb
mov
ret
in
test
dec
loop
call
lods
sub
or
cmp
stos
call
fwait
adc
and
outsb
fsubrl
cld
cltd
mov
scas
je
push
call
in
jp
mov
pop
rcr
push
jecxz
test
dec
mov
fsubr
loop
pop
out
dec
lret
jmp
shlb
jmp
cmpsb
push
pop
loope
outsl
jg
insb
mov
in
xlat
lods
sub
scas
mov
shr
xor
inc
pusha
mov
loopne
sarb
loopne
adc
loopne
pop
into
lcall
inc
into
fisttpll
mov
mov
cmp
shrb
mov
outsl
mov
insb
sub
out
lahf
imul
int
call
scas
mov
iret
dec
xchg
push
push
mov
pusha
jecxz
les
sub
and
jecxz
ja
pop
add
daa
sub
cli
loopne
fs
add
test
mov
push
iret
addr16
int
shlb
mov
popa
mov
or
cld
call
iret
test
pop
xchg
shll
cs
pusha
mov
jecxz
iret
cmp
leave
test
in
mov
lcall
sahf
pop
test
pusha
loopne
hlt
movw
xlat
pop
test
and
mov
filds
loopne
push
fnstsw
fbld
mov
into
push
adc
fstl
jl
push
or
js
fistps
mov
mov
push
cmpsb
jmp
call
dec
lods
adc
fiaddl
cmp
in
mov
int
movsb
push
inc
into
mov
movsb
push
into
stos
mov
lods
sbb
xchg
jl
enter
ss
cmp
sbb
out
jl
mov
dec
sub
bound
scas
stos
sub
sti
jmp
xchg
insb
scas
xor
mov
lahf
cld
cmp
or
insb
adc
mov
stos
push
outsl
mov
hlt
dec
or
icebp
addr16
mov
es
insl
imul
sbb
mov
mov
hlt
shlb
sub
outsb
jp
in
movsb
xor
in
in
popf
or
jp
hlt
xchg
leave
pop
sub
aad
mov
nop
push
mov
mov
frstor
out
addr16
out
pop
lods
repz
int
xlat
xor
test
mov
gs
lock
ljmp
adc
mov
add
ror
push
jnp
adc
movsb
mov
scas
pop
insb
rcl
into
shrb
out
scas
push
insb
in
xlat
lea
add
cmp
es
in
iret
in
pop
arpl
stos
out
fbld
arpl
pusha
loopne
les
mov
ror
loop
insb
jmp
add
mov
xlat
hlt
into
xor
shrb
mov
mov
loopne
jnp
xchg
lods
pop
xchg
imul
fildll
xor
imul
std
jge
fs
sub
mov
loopne
jmp
pusha
call
pusha
clc
and
dec
insl
mov
in
cmp
fs
mov
xchg
test
sub
ljmp
lods
das
imul
pop
xchg
fstpt
shr
lret
in
pop
inc
sti
out
mov
mov
pop
insl
test
add
movsb
in
int
and
push
out
pop
sub
jmp
dec
sub
data16
mov
fmuls
xlat
push
xlat
into
push
in
ljmp
xor
sbb
into
push
cmpsl
fsubrs
pop
filds
pusha
mov
loopne
mov
cld
add
imul
scas
leave
rcrb
dec
sub
hlt
sbb
jg
stos
es
fdivr
push
jp
jecxz
scas
ljmp
pop
insb
shrl
fsubrl
lret
and
out
inc
stos
lcall
int
sub
into
and
jg
ficompl
jnp
or
imul
cmp
mov
lods
jge
cmp
dec
out
or
das
jecxz
dec
sbb
aaa
stos
adc
test
push
int
jns
ret
xor
mov
cmp
stc
ret
and
push
mov
stos
push
jo
fsubl
push
and
xlat
push
push
mov
push
push
pop
push
movsb
decb
test
mov
int
push
pushf
scas
sbb
or
in
push
add
jecxz
push
repnz
test
leave
and
cs
sub
int3
cltd
mov
sbb
sti
jmp
jecxz
cld
xchg
sti
insl
push
insb
imull
jmp
jl
insb
jno
insb
or
and
and
fildll
sub
iret
fnstsw
or
imulb
and
cli
add
mov
jno
ljmp
push
mov
mov
jnp
lods
mov
sub
popf
jns
xor
stc
int
out
pushf
mov
mov
orb
psllq
scas
cli
push
cli
movsb
fcmovnbe
push
into
push
jmp
int3
xor
or
mov
in
pop
ljmp
outsl
sbb
imul
jbe
movsb
mov
les
test
pop
das
push
jge
lret
les
push
test
sub
and
in
scas
sbb
jle
inc
mov
iret
dec
or
lahf
sub
loopne
popa
jle
out
sahf
pop
das
out
bound
insb
jecxz
mov
or
xlat
movsl
into
in
and
imul
xor
pop
movsl
sub
pop
pop
jmp
test
aas
and
ljmp
scas
cmpsb
ucomiss
imulb
fs
imul
xlat
daa
into
lods
in
pop
in
jg
fchs
outsb
mov
loop
addr16
pop
fldcw
sbb
jecxz
push
jecxz
pop
outsb
mov
mov
pop
sub
out
mov
imul
ficoms
mov
aaa
addr16
out
nop
or
insb
dec
sbb
and
imul
push
pop
gs
cmp
xchg
daa
lock
mov
mov
and
or
cld
inc
cwtl
xor
out
jle
xchg
pop
mov
loopne
or
and
fistps
filds
mov
iret
scas
rcrb
xor
mov
fsubrl
fstps
lods
loopne
fsubrl
cs
mov
inc
push
stos
push
mov
lcall
scas
inc
cmc
fbld
pusha
inc
push
out
enter
out
insl
scas
test
or
inc
leave
xchg
ds
ret
push
fdivrl
int3
fdivl
in
jbe
in
sarl
sbb
mov
jecxz
dec
mov
clc
sbb
add
pop
adc
addr16
or
cmp
fmull
out
int
sbb
pop
out
call
dec
xchg
fldenv
fldcw
jno
mov
mov
insl
fsubrs
pusha
or
mov
jle
dec
mov
test
pop
cmp
test
or
scas
ljmp
mov
xchg
mov
and
lret
outsb
pop
lods
jmp
sti
mov
lds
andb
popa
add
push
stos
mov
insl
sbb
dec
jo
stos
stos
sbb
imul
jge
sbb
fwait
into
mov
outsl
fs
or
lds
nop
mov
xchg
bswap
shr
fwait
incb
add
int3
xchg
fidivrs
out
fnstcw
aaa
int3
mov
lods
or
insl
sbb
in
in
cltd
pop
mov
out
das
fisttpl
jp
jle
jg
ds
sahf
fisttps
pinsrw
fucomip
mov
rcr
mov
or
cltd
sub
dec
inc
sbb
jg
into
lock
scas
in
aad
dec
aas
dec
in
cs
adc
pop
lret
cmp
jns
fwait
test
and
shr
cmc
rorb
in
lds
push
in
push
and
mov
or
lcall
loope
std
stc
rcrb
inc
lock
push
in
cmp
lret
cmp
in
shlb
in
mov
push
aam
pop
or
push
fisttpll
jb
pop
lahf
sbb
stos
and
push
adc
xor
bound
stos
cmpsb
out
fs
mov
popf
push
out
ss
jbe
outsb
insb
test
sti
jno
lret
push
loopne
fidivrl
int
pusha
loopne
cmp
cmpl
pusha
pushf
pusha
cwtl
test
out
scas
pusha
out
jns
and
xor
and
out
nopl
mov
ret
pusha
dec
jmp
cmp
sub
shll
push
aad
loopne
ret
cmpsl
outsb
mov
xchg
push
popa
xchg
mov
outsl
mov
fisttps
mov
out
mov
mov
insl
push
sbbb
sbb
cmp
gs
popf
out
cmp
in
out
outsb
insl
loop
insl
jo
scas
jge
add
or
std
outsb
jg
jmp
push
mov
ljmp
xor
cmc
sbb
mov
nop
lock
xchg
loope
sti
cltd
and
nop
pop
sbb
movsb
icebp
repnz
push
inc
xor
scas
lock
and
add
shlb
dec
outsl
and
and
int3
fsubrp
outsb
cmpsl
sahf
push
lea
mov
sub
sub
int3
mov
inc
cmpsl
rcl
mov
dec
std
imul
cmp
shlb
loopne
and
xchg
sbb
lahf
es
sub
sub
and
adc
jns
mov
fisttpl
pop
js
pusha
movsb
lods
mov
rcrb
jmp
jo
in
gs
pop
call
je
push
inc
pop
arpl
sbb
les
push
jle
mov
loop
in
rcl
lock
add
sub
rclb
dec
push
mov
sbb
fs
adc
ret
into
xchg
pusha
fs
add
jns
adc
mov
cmpsl
clc
xlat
sub
sub
shl
sub
xor
rcll
sub
cmp
repnz
loopne
sti
adc
insb
movsb
push
sub
xchg
shr
mov
in
add
adc
hlt
add
fsub
cmc
mov
shlb
insb
lea
out
shl
xchg
inc
push
pop
xchg
int3
int
into
iret
test
mov
arpl
dec
cs
xor
sbb
int3
mov
loop
call
loopne
test
les
lods
imul
cmpsb
aas
outsl
pushf
rolb
adc
push
shl
mov
mov
call
mov
push
inc
lock
mov
call
mov
mov
push
scas
lock
or
outsl
and
mov
push
out
out
sbbl
cmpsb
std
faddp
push
mov
mov
cmp
jo
mov
shr
out
sbb
repnz
mov
aas
mov
lret
sti
adc
pop
out
fst
xor
shlb
cmp
dec
ljmp
into
outsb
cmc
jg
xchg
push
out
or
pop
jecxz
in
sub
data16
out
fmuls
insl
fadd
nop
lods
insb
int
in
outsl
ret
mull
in
push
scas
scas
inc
jecxz
mov
arpl
lods
int
popa
mul
push
outsb
enter
insl
scas
movsb
loopne
hlt
pusha
xor
mov
test
fsubrs
in
stos
out
mov
arpl
jecxz
sbb
outsl
mov
sbb
in
dec
imul
lock
call
mov
lods
jecxz
scas
aaa
push
ljmp
outsl
scas
inc
pushw
in
test
and
imul
lods
pop
push
cmpsl
in
and
dec
popf
arpl
lods
gs
lret
jb
xchg
popa
sbb
sub
mov
inc
shr
cwtl
add
sub
ljmp
xchg
data16
push
push
call
clc
out
mov
ret
outsl
mov
insb
vmovd
in
pop
outsb
push
arpl
arpl
mov
outsl
fsubrs
popa
ret
lahf
xchg
in
imul
bound
loopne
jbe
out
cmp
outsb
js
loopne
shr
cmp
in
lods
in
xchg
imul
out
imull
jmp
iret
js
loopne
jecxz
inc
nop
sub
sbb
out
push
rcll
sbb
imul
scas
scas
inc
out
mov
in
clc
out
jecxz
cmpsb
scas
sbb
sbb
mov
loop
pop
ss
fld1
cmp
in
lods
out
scas
pop
pusha
jo
shll
jecxz
nop
lods
loop
scas
out
sahf
push
mov
nop
jg
out
dec
ljmp
subb
rcll
mov
sbb
in
shrb
fs
jl
in
scas
pusha
cmp
mov
cmp
out
lods
xchg
sub
popa
jmp
fbstp
lods
scas
scas
add
in
adc
in
shrb
xchg
out
sub
loop
insl
sub
lcall
push
xchg
sub
pusha
popa
arpl
pusha
sub
out
imul
push
jmp
mov
scas
jmp
inc
bound
int3
push
sub
dec
push
push
loope
imul
clc
out
pavgb
out
repnz
push
fs
fucomip
or
jp
push
jmp
fsubrl
in
out
in
out
mov
in
push
arpl
test
mov
popa
jbe
ret
xor
in
clc
cs
popa
push
ror
sub
push
dec
movsb
out
sub
in
scas
xlat
out
clc
mov
mov
pop
mov
loope
mov
mov
jmp
scas
inc
mov
call
lods
out
scas
sub
jbe
movsb
arpl
mov
loopne
mov
in
mov
xlat
clc
out
lods
mov
in
push
or
call
in
pop
gs
mull
or
xlat
push
xor
sub
repz
in
shr
movl
scas
jle
xor
imul
jns
out
movsl
inc
stos
in
jp
xor
es
pusha
outsb
xor
scas
cmpsl
insb
in
and
sub
movsb
fldcw
hlt
fs
push
inc
nop
lods
imul
xlat
out
call
lods
xchg
in
pop
popa
xor
in
xor
jp
mov
out
push
pusha
mov
push
sub
imulb
pop
mov
inc
sub
push
pop
loope
cmpsl
mov
test
fsubrs
dec
ds
push
jmp
loope
xchg
mov
scas
push
popa
cmpsl
and
loope
xchg
cs
and
scas
cmp
push
loope
xchg
popf
gs
addr16
movsl
inc
lods
scas
lcall
in
bound
lahf
or
filds
scas
cli
sti
pop
jp
xchg
xchg
imul
inc
nop
lods
push
scas
imul
and
xchg
in
in
push
scas
in
add
push
popa
xchg
ja
lods
scas
out
scas
xchg
insl
mov
insl
mov
xchg
int
loop
loope
ja
arpl
addr16
push
scas
scas
xchg
loopne
mov
ret
push
insb
add
outsl
lea
jp
push
in
jne
pusha
outsl
rcll
scas
push
clc
imul
ljmpw
mov
in
out
mov
fldenv
in
in
lods
xchg
aas
loop
movsb
inc
and
pop
dec
out
or
pop
clc
out
lods
mov
in
push
jecxz
data16
dec
fldcw
sub
pop
data16
in
lods
xchg
in
lock
popa
shll
stos
pop
jl
dec
popa
in
loopne
clc
out
sub
jmp
arpl
jmp
fldlg2
ret
mull
jmp
call
push
in
in
gs
bound
movsb
loopne
loope
loopne
push
jp
ljmp
cmp
jmp
inc
in
in
mov
out
fsubrs
in
stos
arpl
test
mov
loope
lock
fs
jp
fldcw
sub
lahf
push
cmp
jmp
sub
pusha
aas
data16
push
scas
gs
hlt
out
cmpsl
gs
in
jbe
stos
popa
or
jl
call
imul
psrad
fisubrs
jmp
scas
in
cs
scas
mov
lcall
fld1
ret
mul
mov
cli
push
xchg
jne
lahf
popa
insl
movsl
mov
mov
bswap
in
or
or
or
scas
hlt
insl
cmpsl
loop
imul
addr16
out
push
lods
mov
sti
ds
data16
ljmp
jo
outsl
idiv
jmp
scas
fs
jecxz
jmp
xchg
lds
in
fsubrs
mov
test
cs
scas
dec
cmpsl
and
add
out
push
pop
out
mov
add
fs
fucomip
in
insb
test
xchg
add
cmp
jnp
sub
and
out
jmp
push
xchg
jecxz
daa
jmp
call
int
sar
pusha
and
out
fs
add
in
ljmp
pop
loopne
jecxz
in
sub
out
pop
cs
clc
outsl
fcoms
jnp
push
outsb
xabort
loopne
in
clc
xlat
imul
jl
push
and
mov
sub
out
fs
jl
mov
loop
push
out
in
pop
movsb
ror
mov
in
sub
lods
cmp
in
mov
in
fsubrs
xor
jecxz
out
outsb
loopne
cmp
imul
mov
dec
insl
fldenv
outsb
inc
in
imul
outsl
je
pop
and
cmpsb
imul
pop
cmp
cmpsl
xchg
shr
insl
cmpsl
out
fs
es
jmp
arpl
mov
xlat
ror
sub
icebp
fbld
imul
xor
xchg
mov
mov
mov
pop
outsl
cmp
lods
aaa
pusha
pop
test
push
sahf
aam
out
pop
imul
fldenv
fs
cmp
xchg
in
shrl
jmp
mov
in
into
shrb
roll
jmp
jmp
mov
mov
arpl
in
push
pusha
jbe
jecxz
mov
out
sub
cmp
scas
pusha
pusha
fs
loope
popf
insl
dec
out
sbb
fldenv
movsb
in
sbb
imul
sub
jl
into
imul
pop
imul
out
gs
mov
in
sub
imul
ljmp
xlat
loop
out
call
popf
outsb
pop
loopne
ret
mov
aas
mov
add
loopne
pop
or
cmp
insb
jl
fldcw
in
xchg
in
xlat
call
jmp
leave
gs
pusha
mov
ljmp
movsl
mov
cmp
ljmp
fs
out
jl
mov
push
insl
inc
jge
in
and
dec
pop
in
pusha
xlat
mov
mov
pop
xlat
cmpsb
fs
xchg
jne
outsb
les
lcall
call
enter
ret
mov
sub
xor
imul
pop
gs
or
dec
pop
pusha
lcall
dec
sub
xlat
out
out
jmp
pusha
hlt
loopne
in
call
aaa
mov
sub
outsb
daa
xor
outsb
lret
cmp
cs
das
xlat
outsb
fldenv
outsb
fs
pop
loopne
mov
or
imul
daa
out
loopne
cwtl
out
lahf
les
jg
jb
ljmp
push
jecxz
out
bound
fs
pop
jge
in
xor
cmp
aas
out
pop
out
and
nop
push
jge
xlat
mov
mov
out
pop
xor
outsb
pop
imul
call
outsb
inc
out
xchg
gs
addr16
pusha
fs
in
xlat
fs
pushf
mov
scas
sarb
push
xchg
loope
idivb
popa
test
insl
in
mov
shr
mov
lahf
imul
int3
in
es
jbe
outsb
dec
dec
and
pop
mov
push
mov
jmp
ret
mov
in
cmpl
pop
xor
lds
cmpsl
loop
fs
ret
xlat
imul
gs
daa
out
sub
insl
shl
out
cmpsl
repnz
pusha
cmpsl
pop
out
hlt
test
loop
out
aad
jp
push
gs
jmp
ja
pusha
test
call
dec
loope
outsb
out
and
add
jnp
loopne
ja
pusha
cld
out
in
lds
out
xchg
je
lahf
push
daa
in
dec
mov
lods
pop
fucomp
imul
bound
pop
insl
xchg
out
insb
aas
jmp
xchg
sbb
mov
rorb
lods
inc
out
mov
hlt
scas
in
clc
mov
lcall
std
iret
subb
into
pusha
pushf
jmp
loope
cmp
mov
mov
out
inc
shll
and
xchg
outsb
fs
pusha
jl
scas
subl
imul
fildll
jle
fucomp
inc
sub
mov
vaddps
iret
shrb
loop
into
jmp
mov
out
out
data16
gs
xchg
ret
jmp
sub
orb
insb
jmp
and
addr16
insb
lret
fnstsw
jo
pop
dec
data16
push
mov
popa
add
call
lods
mov
pop
aad
cmc
or
outsb
cmpsl
mov
fs
pusha
into
subl
xor
jg
loope
test
in
lds
call
call
call
or
out
insb
cli
fsubp
mov
push
movsb
addr16
loopne
sub
mov
pusha
out
aas
xchg
loope
insb
pop
in
and
mov
or
out
xlat
imul
xchg
call
pusha
out
or
out
jmp
or
je
mov
outsb
mov
push
insb
add
out
cmp
outsl
push
pusha
in
ret
mov
vdivsd
out
sub
mov
push
out
in
in
in
xor
leave
fisubrs
cmpsl
popa
insl
movsb
subb
in
rorl
loope
out
jg
jmp
movsb
mov
cs
sbb
clc
push
clc
mov
clc
test
sub
fbld
pop
out
adc
es
lock
inc
loopne
arpl
fildll
mov
sbb
add
jg
dec
lods
outsl
insb
pop
push
iret
mov
xor
leave
lods
and
pop
adc
or
dec
inc
xchg
gs
sub
js
in
out
daa
loop
outsb
lods
scas
imul
jecxz
mov
mov
mov
in
mov
or
sub
mov
xchg
mov
in
cs
cs
mov
popa
mov
xor
scas
into
out
push
sub
clc
push
clc
mov
clc
test
clc
out
clc
pop
es
inc
fildll
xlat
andb
loope
es
add
xchg
fisubrl
outsl
push
shrl
int3
in
insb
shrl
and
clc
insl
sbb
out
ret
nop
scas
stos
in
mov
lahf
arpl
loopne
into
out
xor
loope
push
xor
inc
data16
cmpl
pop
imul
mov
xlat
in
daa
out
push
loopne
and
in
xchg
insb
pusha
lcall
lcall
loopne
and
fs
mov
loop
out
push
pusha
cmc
ja
push
ljmp
inc
out
aam
pushf
mov
sub
jg
imul
and
rorl
imul
aad
mov
fstp
ret
ret
ret
adc
or
mov
and
imul
imul
cs
clc
outsb
mov
clc
mov
lods
fbstp
rcl
xchg
addr16
jecxz,pn
imul
mov
xchg
sbb
xlat
arpl
es
ljmp
xor
scas
inc
outsl
add
push
mov
ljmp
jle
add
je
gs
sub
push
inc
outsb
sbbl
mov
inc
pop
call
call
mov
mov
shrb
repnz
inc
adc
nop
cmpsb
aad
loopne
fnsave
ret
or
xchg
mov
cmpsb
sub
xlat
imul
dec
insb
fs
cmpsl
mov
fs
mov
hlt
sub
loope
cmp
mov
fdivs
insl
or
jp
dec
insl
lods
outsb
stos
imul
popl
in
xchg
sub
pop
in
xchg
push
out
pop
ljmp
mov
mov
in
pusha
movsb
jge
popa
fs
insl
dec
out
movsb
out
xchg
loope
outsb
vmovd
add
outsb
mov
or
into
pop
lods
shrb
mov
lret
out
bound
in
loopne
or
insl
imul
jg
pushw
xchg
mov
pop
out
out
xlat
insl
or
shrb
dec
jbe
loop
je
push
int
sahf
pusha
aad
fs
jmp
mov
test
gs
jbe
loopne
cmp
xchg
clc
loopne
daa
jb
cmp
in
mov
vorps
arpl
mov
mov
cld
pop
loope
insb
movsb
out
data16
xlat
outsb
daa
in
or
loop
xlat
jmp
in
aas
add
or
loope
je
dec
ss
lcall
lret
jb
lahf
outsb
pop
aam
imul
outsl
popl
push
sbb
pop
cli
loopne
outsb
outsb
add
jmp
out
mov
imul
aas
jg
push
loope
fs
mov
fimuls
xchg
jecxz
jmp
or
imul
loop
inc
outsl
add
outsb
scas
loopne
outsl
pop
loope
push
xor
aas
jmp
pop
in
sub
ljmp
loope
in
stos
jmp
mov
shl
outsb
mov
in
sub
inc
gs
jmp
mov
add
push
clc
jmp
aaa
gs
inc
inc
out
push
push
mov
fs
cwtl
mov
or
orl
ret
jmp
fildll
ret
cli
fcmovnu
mov
xor
shrb
cmp
xor
mov
xor
out
shrb
xor
outsl
imul
push
and
xchg
out
push
pusha
push
arpl
mov
loopne
and
jmp
sub
sbb
jmp
call
out
pusha
lahf
callw
push
out
fs
push
cs
sbb
sbb
loopne
and
add
insb
sbb
mov
insb
rorb
gs
vmaxps
loopne
fsubp
add
imul
imul
sbbl
hlt
pop
imul
cmpsb
push
mov
es
cmp
add
add
adc
shr
cmp
mov
imul
push
outsb
ret
ret
ret
jp
pop
shl
or
add
add
add
mov
mov
jne
add
mov
arpl
jecxz
push
mov
shl
outsl
and
outsl
jg
outsl
into
shrl
shrl
fs
xlat
mov
mov
scas
stos
insb
sahf
xlat
cli
into
mov
outsb
scas
call
into
dec
lods
xchg
pop
aad
das
scas
es
pop
xlat
je
shrd
pop
adc
out
scas
bound
mov
fnstcw
sarl
loopne
and
ds
imul
ffree
ret
imul
jns
imul
imulb
imul
imul
sub
sub
sub
sub
sub
sub
jnp
xchg
loope
ret
gs
mov
mov
jbe
mov
xlat
in
daa
in
outsb
xlat
jmp
stos
dec
outsb
and
lds
ds
popa
loope
cmp
out
or
sahf
sub
mov
mov
ljmp
mov
out
push
xor
arpl
fs
enter
loopne
fldcw
fs
pop
in
xor
adc
pushf
ljmp
mov
je
push
imul
push
ret
ret
ret
ret
ret
ret
ret
movsl
sub
sub
fsubrs
ret
fadd
xlat
imul
xlat
imul
ret
imul
aad
or
aad
pop
ret
loope
xchg
shl
movsl
outsl
shrl
xchg
arpl
jecxz
or
mov
xchg
or
aas
loop
pop
out
scas
lock
cmp
dec
xorl
out
fs
push
jecxz
mov
pop
imul
jmp
in
mov
pop
jmp
mov
pop
and
pusha
aaa
or
and
pusha
pop
ret
adc
orl
out
pusha
pop
pusha
loopne
pusha
outsl
outsl
xchg
push
loope
in
sbbl
outsb
cmpl
stos
addr16
mov
fs
call
xor
gs
push
in
arpl
sub
loop
pusha
jecxz
imul
or
outsb
mov
sub
jnp
jmp
cld
iret
push
jecxz
loopne
jg
loope
push
ljmp
out
push
out
pop
in
sub
mov
outsb
vaddss
sub
orb
das
outsb
in
in
lret
or
mov
inc
xor
outsb
pop
out
xor
imul
out
imul
addr16
cli
in
push
push
out
xor
int3
ret
jl
loopne
push
push
push
out
jl
addr16
ficomps
and
shll
dec
jecxz
andb
or
push
sar
insb
loopne
xor
shr
fbstp
dec
imul
out
lods
punpckhwd
add
push
out
ret
out
xor
mov
mov
loopne
inc
aas
call
clc
outsb
loopne
in
cwtl
imul
filds
jecxz
add
insl
jmp
out
jmp
push
pushf
jmp
movsb
jne
pop
pop
loop
hlt
out
popa
insl
loopne
cwtl
movsb
jmp
pandn
rcr
int
sbbb
jmp
lret
addr16
data16
cmp
in
iret
in
push
jmp
adc
loopne
pusha
mov
out
or
fsub
repz
jno
outsb
loope
sbb
in
add
outsb
stos
jecxz
ljmp
xor
in
fs
mov
pushf
jmp
sarb
xchg
outsl
repz
lock
in
outsb
pop
out
imul
ljmp
jecxz
lret
out
fs
sub
xchg
jl
mov
outsb
dec
fbld
rorl
loope
sbb
in
mov
insl
cmpl
cld
pop
loope
out
inc
out
pop
xor
popa
pop
loop
outsb
inc
loop
xchg
popa
jge
mov
lcall
shrl
in
js
jmp
mov
sbb
push
jecxz
cmpsl
out
aad
ret
in
inc
insb
out
gs
gs
es
popa
loopne
ljmpw
pusha
loopne
sbb
out
aas
int
mov
add
addr16
daa
and
pop
retw
in
in
push
or
fld
and
lahf
xchg
mov
out
cwtl
dec
inc
das
in
mov
jmp
push
subl
data16
fisubs
movsb
movsb
lods
aaa
pop
fs
mov
mov
data16
scas
mov
xchg
aam
addr16
lods
loopne
adc
loopne
xor
bound
aas
jge
lods
push
gs
hlt
lahf
iret
mov
cs
rorl
mov
ljmp
clc
pop
jns
clc
cwtl
mov
mov
mov
testb
cs
mov
jb
jmp
in
xor
fcomip
clc
pusha
mov
jge
out
out
fs
out
imul
outsb
jmp
xchg
ljmp
leave
addr16
pusha
out
insl
mov
gs
ret
leave
popf
insl
cmpsl
loop
inc
popa
imul
mov
leave
popf
outsb
xlat
out
and
mov
in
outsb
rolb
imul
scas
mov
jp
dec
fs
call
loop
xlat
out
gs
jb
push
arpl
loop
imul
loopne
icebp
and
sbb
stos
out
leave
ds
shl
fisubs
fcmovne
mov
sub
pop
jp
in
mov
push
pop
or
daa
or
pusha
mov
and
jl
mov
je
dec
loopne
outsb
in
out
cs
cmp
loope
bound
les
mov
mov
mov
insb
les
ljmp
popa
or
mov
pusha
scas
pusha
pusha
fs
outsl
pushf
outsl
int
shr
daa
out
cmp
sub
loop
in
mov
imul
imul
in
stos
mov
es
jl
fidivs
in
xor
andb
loopne
pop
jecxz
movsb
or
out
pop
movsb
insb
add
push
outsl
pop
aad
out
ret
or
scas
out
pusha
inc
insl
in
mov
push
push
and
mov
sub
imul
dec
in
imul
add
sbb
stos
jmp
add
loope
popf
insl
xlat
out
gs
stos
add
jl
pop
xor
movl
xchg
cs
mov
pusha
cmpsl
outsb
outsl
fs
out
pushf
insl
mov
in
xchg
mov
outsb
or
and
mov
shr
xchg
or
pop
call
lods
push
arpl
mov
out
pop
in
and
or
in
gs
in
lcall
adc
xor
je
push
pusha
ret
imul
pusha
fs
lret
scas
pusha
insb
imul
cmpsb
insb
adc
mulb
xchg
insb
loopne
in
fs
jbe
loope
gs
stos
insl
imul
xchg
out
int
insl
pop
shrl
mov
or
in
pusha
scas
cmp
lds
cmpsl
call
mov
xlat
out
daa
out
imul
es
lret
xor
add
repnz
jl
mov
loopne
mov
out
push
pop
pop
stc
and
sbb
leave
imul
or
pushf
pop
insb
movsl
test
dec
pop
loope
in
fs
out
out
outsl
mov
ret
in
add
mov
pusha
mov
loopne,pn
outsl
mov
out
dec
mov
xlat
insb
daa
in
lret
push
ljmp
push
cmpsl
ljmp
ficoml
out
push
cmpsl
out
outsb
rcrl
sub
shll
test
push
aas
rcrl
inc
test
iret
sahf
mov
pop
push
pop
inc
mov
inc
mov
xlat
outsb
daa
out
dec
jo
jge
imul
rcrl
in
leave
mov
insl
cmp
ljmp
call
fs
aaa
cs
das
imul
leave
arpl
and
fildll
gs
or
sub
mov
push
jge
movsl
adc
xchg
mov
cmp
pusha
push
fs
lds
out
xlat
nop
scas
insb
mov
pusha
sahf
bound
fs
push
imull
insb
xlat
call
loope
xlat
gs
push
pusha
xchg
and
mov
loope
out
aad
and
pop
outsb
lock
mov
mov
fildll
imul
xlat
push
out
xlat
call
gs
jecxz
and
push
loop
out
add
mov
into
outsl
mov
pop
mov
jno
jmp
fs
iret
jno
out
fisubs
push
shr
sub
insb
in
outsl
mov
jl
sub
dec
loope
popa
push
push
sti
mov
push
or
mov
imul
push
and
js
arpl
cmp
outsl
jno
dec
jp
fists
test
out
push
push
pusha
or
and
imul
cli
fisubs
jmp
pop
add
pusha
pusha
inc
and
movsl
into
mov
out
outsb
lds
outsl
mov
xchg
loopne
pop
insl
lcall
cs
rcrb
out
pop
pusha
and
in
loop
mov
popa
xor
xor
out
add
lods
shr
call
call
call
call
xor
mov
pushf
daa
rcl
pop
pusha
es
xlat
insl
daa
in
loope
outsb
cmpl
mov
shll
enter
loop
outsl
xchg
adc
movsb
das
leave
shrb
shrb
mov
outsb
mov
jmp
in
imul
jg
adc
fs
pop
aas
insl
loope
sbb
push
fs
in
and
sub
imul
mov
in
mov
and
in
xchg
bound
outsb
fistpl
mov
scas
cmp
outsb
and
pop
jmp
lods
out
lret
imul
push
fs
sub
mov
jnp
mov
mov
mov
insb
mov
outsb
and
insb
mov
jmp
popa
gs
clc
mov
aad
cli
inc
shrb
mov
hlt
pop
iret
push
loope
insl
inc
in
outsb
pop
jmp
data16
in
sub
xor
sarb
shrl
shr
call
call
call
pop
pusha
ret
sub
loopne
ljmp
lret
jnp
out
jl
shr
mov
aas
push
fmull
imul
lret
jmp
bound
jge
push
in
dec
out
inc
data16
pop
push
fs
pushf
in
pusha
push
pop
ret
mov
outsb
mov
sub
mov
movsl
loopne
imul
nop
jnp
bound
imul
sahf
pop
mov
insl
cld
arpl
loop
pop
sub
out
cmp
adc
out
ret
insb
subb
mov
loop
imul
sbb
loope
out
stos
cmpsl
leave
sub
cmpsb
sub
xlat
bound
push
fists
in
jo
mov
push
jns
push
mov
ljmp
mov
sbb
loop
outsb
scas
pusha
mov
xchg
mov
ret
pusha
in
pusha
je
push
shll
jmp
pop
in
and
jo
mov
jecxz
lds
jmp
movsb
xchg
fabs
movsb
push
or
popa
xchg
insb
cmp
in
fs
pop
out
stos
loop
jecxz
bound
insl
mov
sub
sub
js
bound
imul
insb
mov
mov
test
sub
shr
sarl
jecxz
ss
mov
fildll
popa
data16
loope
in
movsl
jbe
push
push
ja
push
jl
push
in
ljmp
fsubp
mov
mov
addr16
xchg
pop
imul
mov
ret
loope
jno
and
loopne
pop
and
ljmp
push
add
out
or
outsb
and
adc
js
outsb
es
xlat
in
es
push
sbb
outsb
stos
iret
negb
inc
insl
push
lods
loope
add
and
sbb
loop
in
sbb
mov
sbb
loopne
loopne
add
sahf
stos
pop
scas
loop
in
rorb
cmp
jnp
inc
stos
mov
add
push
loop
imul
imul
jecxz
push
loop
lock
insl
mov
fwait
jecxz
out
addr16
imul
out
dec
pop
pusha
fsubrp
push
aam
loopne
pop
jmp
jbe
xlat
in
inc
loope
loopne
and
insb
into
rorb
jp
push
push
lcall
scas
jecxz
fs
push
test
shrb
insl
add
loope
outsb
pop
sub
mov
sub
mov
arpl
and
inc
shlb
sbb
arpl
insl
jge
and
out
rorl
xor
sub
ror
push
lods
and
arpl
iret
enter
cmp
repz
jo
mov
sbb
loopne
clc
pop
sub
sub
insl
mov
lret
jmp
aad
cli
insb
imul
call
stos
and
rcrb
loopne
or
pop
popa
or
scas
outsw
inc
sbb
leave
dec
pop
stc
and
or
jns
inc
shll
push
scas
push
in
pop
out
stos
in
leave
insb
outsb
loopne
mov
scas
ljmp
ljmp
pusha
lahf
and
test
outsb
fisubrs
in
cli
pop
sub
ret
inc
out
repnz
and
addr16
stc
call
fldcw
movsb
std
test
pmaxub
mov
mov
loopne
xlat
ret
imul
nop
jg
out
icebp
cmp
out
mov
and
mov
jne
inc
or
iret
jmp
jg
scas
inc
subl
out
pushf
loopne
in
mov
fisubs
das
inc
shl
outsl
xor
mov
or
lods
bound
movsb
mov
leave
sahf
sub
jg
and
xlat
xchg
lock
out
jge
add
loope
pushf
pop
repnz
js
loope
inc
mov
fiaddl
frstor
movb
sbb
push
mov
rolb
fbstp
rcr
test
and
xor
jle
cmp
lret
add
xchg
cmpsl
push
leave
in
je
not
jo
insb
xor
and
ffreep
inc
pop
loope
into
xchg
hlt
xor
pop
inc
and
inc
repz
fldl2t
loope
lcall
or
fistl
loope
or
leave
sub
out
loope
ret
arpl
mov
test
push
xor
push
mov
jbe
and
scas
cmp
add
popa
pop
ret
mov
adc
icebp
jo
loopne
cmp
mov
xchg
fld
mov
loope
pop
push
insb
inc
int3
and
sbb
push
in
loope
or
mov
dec
mov
sub
popf
inc
mov
mov
xchg
push
ljmp
xchg
stos
sub
out
cs
loope
int
ret
hlt
mov
je
xchg
xlat
loop
aas
jmp
loope
mov
dec
xchg
pop
andb
mov
out
push
dec
stos
xlat
insb
in
lods
insb
jg
stos
push
xchg
inc
into
and
push
loop
test
mov
push
imul
scas
dec
in
jbe
loopne
inc
mov
loopne
push
rcr
shr
subb
int
xlat
push
sub
or
scas
scas
outsl
insb
pusha
push
into
arpl
call
xlat
mov
sub
in
lods
pop
insl
iret
xrstor
add
rcr
xlat
pusha
add
inc
lods
add
scas
xchg
lea
mov
sub
push
mov
loopne
and
fxch
push
add
mov
push
gs
and
lods
subb
movsl
fldenv
push
xchg
int
ret
push
and
bound
add
xlat
push
das
into
push
lods
or
movsl
int
test
scas
out
sub
clc
leave
loopne
and
insb
cs
push
iret
pandn
ret
into
push
les
dec
scas
sub
lods
into
lods
lods
into
pusha
push
iret
es
out
xlat
enter
sub
jg
xlat
bswap
and
fsub
iret
ret
scas
push
insb
out
into
lods
test
pop
dec
iret
or
in
insb
lods
xlat
bswap
and
pop
arpl
fs
inc
insb
pop
xlat
dec
into
push
in
iret
lods
scas
das
insb
scas
xchg
bound
int
push
fs
lds
push
dec
pop
out
iret
outsl
scas
mov
jecxz
fs
out
sub
pop
test
test
xlat
in
into
out
lods
out
loopne
and
scas
les
xchg
or
in
scas
in
insb
out
xlat
out
into
scas
lods
andb
iret
push
scas
out
out
cmpsl
into
push
push
iret
fxsave
insb
fbld
into
add
add
out
dec
insb
test
lods
int3
dec
pop
iret
filds
mov
scas
add
into
dec
lods
test
push
iret
push
inc
aas
push
adc
xor
pusha
scas
shrb
into
xchg
lods
cmpsb
in
rolb
filds
iret
mov
xlat
scas
into
mov
inc
iret
iret
out
push
js
xchg
das
in
outsb
out
sbb
stos
loop
popf
pop
out
add
add
stos
shl
inc
dec
push
sub
shrd
cmp
scas
gs
daa
xlat
addr16
sub
insb
scas
insl
insb
and
sub
arpl
iret
gs
inc
insb
sub
enter
stos
lret
pop
in
iret
outsb
scas
inc
insb
and
pop
ffreep
into
mov
or
or
or
stos
out
dec
std
lods
test
int3
scas
outsb
insb
and
push
filds
into
arpl
cmpsl
sahf
dec
sub
fs
mov
mov
lods
lods
out
loopne
and
fadds
dec
int
dec
push
into
insb
loopne
mov
inc
lods
inc
gs
or
scas
test
imul
or
out
scas
add
or
lods
fs
pop
iret
sub
dec
into
imul
scas
add
inc
dec
fbld
into
jecxz
andl
scas
xchg
mov
stos
lods
stos
insb
pop
cs
das
scas
and
mov
mov
gs
data16
cmpsl
insb
enter
or
dec
insl
pop
das
iret
outsl
into
push
mov
cs
rclb
insb
into
and
popa
fbld
rorb
sub
mov
gs
add
mov
xchg
and
es
push
xlat
or
dec
lods
mov
scas
sub
out
loop
sub
in
mov
fcmovne
push
or
add
mov
rcrb
pop
add
fs
lods
xlat
lods
jo
add
fprem
ss
into
push
dec
nop
xor
negl
sub
imul
mov
xlat
mov
vsqrtss
mov
lods
out
xlat
push
cs
stos
lods
or
add
popf
rolb
insb
in
ret
frstor
push
addr16
out
lret
or
fabs
dec
fprem
inc
adc
pop
out
push
lahf
and
dec
out
mov
dec
dec
mov
addr16
lcall
aas
jp
test
push
loopne
jbe
stc
push
fmul
rcrb
push
adc
rorl
fsubr
pop
push
adc
int3
inc
and
mov
sbb
loope
in
jo
mov
or
in
lea
add
aaa
popf
aad
loope
jae
test
std
add
test
mov
ret
loope
add
xchg
lods
fwait
or
mov
cmc
push
scas
dec
xchg
repnz
dec
jmp
push
mov
fcompl
push
cmp
and
adc
xchg
lock
inc
shl
lcall
addb
loope
inc
lret
out
test
stos
jecxz
loope
cmp
mov
loope
jp
iret
popa
mov
and
add
sbb
xchg
fwait
loope
jle
push
out
cmpsl
jnp
jl
fdivrl
push
divl
loope
in
fwait
xchg
stos
cmc
loope
or
pop
les
push
test
jmp
loope
fcomps
pusha
pop
push
xor
out
cmp
bound
ds
imul
push
call
xor
jns
jmp
dec
out
rcl
cmpsl
gs
loope
fisttpll
test
popa
shlb
ret
sub
insb
or
loope
fiadds
adc
mov
inc
cmp
sbb
test
daa
cld
mov
stos
inc
and
nop
addr16
fs
loope
pop
cld
adcb
loope
js
test
stos
popa
outsb
ds
frstor
lods
or
pushf
mov
or
lahf
loope
xchg
inc
sbb
dec
or
mov
dec
push
pop
fs
mov
or
gs
ret
inc
stos
notl
mov
xor
jb
inc
jo
js
push
add
rclb
mov
ljmp
mov
xchg
mulb
loope
or
je
loopne
insb
mov
mov
jmp
ret
or
mov
loope
jae
call
loope
inc
out
mov
mov
div
incl
adc
inc
popa
std
jo
inc
sbb
loopne
lcall
adc
and
pop
mov
loope
push
jle
stos
add
mov
jae
loop
in
sbb
ljmp
jb
std
ret
imul
inc
mov
push
in
jmp
pop
loope
insl
pop
aas
lods
data16
sbb
xchg
inc
rcrb
lock
mov
or
jg
orl
and
in
mov
dec
loope
je
mov
lcall
jmp
fbld
add
fwait
loope
fs
push
mov
push
push
pop
push
loope
rcrl
mov
pop
push
shr
jae
adc
in
jecxz
subl
xchg
shll
jp
or
sbb
shrb
stc
jbe
in
dec
loope
js
in
test
test
sub
push
dec
loope
lds
aam
je
mov
pop
int
loopne
das
mov
xor
pop
inc
add
jge
clc
inc
pmullw
lret
add
loope
push
ret
mov
push
in
mov
or
adc
in
mov
jecxz
rorb
mov
jns
fucomp
cltd
daa
sti
pop
and
add
cmp
push
jecxz
insl
inc
xor
xchg
loopne
out
or
shlb
out
push
loope
fsubs
fisttps
jmp
sbbb
and
mov
fisttpll
gs
fs
aas
inc
out
mov
lcall
aam
pop
loopne
xor
mov
mov
cmpsl
mov
ret
imul
popa
loope
clc
fmull
hlt
fsubrs
loope
ja
sti
dec
sub
mov
jle
rcr
fldpi
or
add
fsub
or
je
pop
xor
sub
out
xchg
jne
testb
or
jo
mov
loope
lea
add
sbb
loope
mov
js
int3
push
jecxz
rcl
cmp
add
adc
mov
lods
loope
or
and
aaa
sub
add
mov
xchg
in
sbb
fmulp
in
movsl
mov
cmp
and
lret
ds
je
mov
test
pop
cwtl
loope
xlat
popf
in
inc
jmp
sub
sahf
pop
pusha
loope
sbb
cmp
mov
cmp
inc
mov
shl
push
bound
or
jb
popf
xor
jg
jecxz
jns
jecxz
loope
add
and
loop
lods
enter
popa
fwait
sti
in
mov
sub
xchg
loope
icebp
xchg
sbb
je
mov
xor
mov
or
adc
ficoml
pop
cmp
leave
push
insl
movsl
loope
insl
in
adc
push
cmpsl
add
fists
loope
ret
out
lret
hlt
leave
sbb
ss
iret
test
popa
in
push
into
fisttpll
jle
mov
ljmp
addb
loope
cmpsl
pop
scas
in
testb
ret
mov
mov
fs
mov
pop
push
out
ret
testl
sbb
loopne
insl
sbb
shrb
mov
push
mov
mov
loop
movsl
inc
loope
cmp
xchg
jne
movsb
std
push
test
dec
fnstcw
xchg
pop
loope
lahf
test
sbb
shll
xor
mov
sub
rorb
inc
and
insb
loope
popf
pusha
sub
call
dec
add
stos
pop
int3
pop
mov
add
xor
orb
loope
mov
clc
loope
push
mov
hlt
loope
in
nop
pop
cmp
push
out
outsb
out
jne
vpackssdw
add
add
sarb
out
fs
dec
inc
or
insb
mov
cmp
out
add
adc
arpl
jecxz
out
loope
adc
jp
push
inc
je
xchg
xor
mov
cmp
lock
push
or
dec
outsl
dec
xtest
sti
and
mov
daa
outsl
sub
xlat
idivl
js
xchg
ss
adc
adc
inc
mov
loope
push
dec
push
test
adc
aas
sub
cmp
and
push
mov
mov
pop
ret
int
xlat
xorb
movsb
ss
inc
sub
add
inc
adc
and
decb
sbbb
add
or
outsb
mov
repnz
call
and
sbb
into
xchg
out
loope
mov
aaa
lcall
cmp
loope
adc
jg
push
pop
dec
in
cmpsb
mov
ja
push
jb
cmc
jl
mov
pop
jmp
iret
pusha
stos
das
loope
jp
inc
sbb
jo
lret
push
push
jmp
loope
mov
aad
add
cwtl
or
sub
cmp
xorl
mov
sub
and
loope,pn
pop
cmp
or
sbb
jbe
cld
sub
out
jo
mov
jno
rcr
and
sarb
cmpsb
ja
mov
loope
iret
lret
sbb
dec
lods
loope
push
jg
cmp
mov
scas
inc
imul
jbe
mov
loope
in
mov
push
cmp
loope
enter
mov
xor
add
fstps
pushf
mov
cmc
xor
sub
inc
jecxz
repz
push
sbb
sub
stos
and
xchg
test
mov
sub
fsubrp
testl
insl
dec
or
mov
jb
loopne
imul
push
lcall
or
jecxz
push
fabs
inc
sub
dec
dec
fistpl
scas
rolb
insl
mov
pop
mov
rcrl
and
sub
cmp
fcompl
shll
dec
xor
pop
divl
mov
sbb
addr16
inc
xchg
outsb
loope
xchg
and
sbb
loope
daa
leave
lods
or
jmp
pop
add
mov
mov
pop
daa
push
cltd
imul
jmp
or
fisttpl
xlat
xchg
cli
rorb
lahf
mov
test
add
lret
and
ljmp
push
sbb
rcll
sahf
xchg
cmp
push
leavew
or
stos
pop
add
lods
mov
loope
out
daa
js
loope
jg
mov
add
inc
lret
loope
jae
addb
hlt
fcomps
pushf
jmp
or
mov
aaa
add
add
ja
xchg
push
pop
loope
addl
adc
fdiv
movsl
lea
repz
loopne
mov
mov
or
call
clc
mov
ljmp
andl
loope
fcoms
and
clc
adc
inc
out
xor
dec
test
scas
push
xor
mov
add
aas
insl
loope
stc
cmp
sub
loope
jp
xchg
jge
adc
push
sub
xorb
sbb
outsl
cmpsl
dec
fadds
add
shrl
stos
jne
jae
scas
and
loope
sub
and
cs
loopne
mov
loope
and
xchg
jnp
mov
jmp
xchg
mov
push
cmc
mov
jnp
lds
ds
stos
loope
jecxz
mov
ret
fwait
jb
sub
sti
jge
pop
lods
mov
push
mov
jmp
cmp
popf
out
in
add
mov
shll
mov
repnz
sbb
jne
fwait
jecxz
loope
iret
int3
pop
in
push
shrb
and
mov
push
imul
ja
push
scas
rep
sub
addb
cmp
ds
sbb
fisttpl
mov
cmpsl
mov
add
inc
mov
push
fadds
pusha
adc
cmp
mov
loope
xchg
mov
and
fstpt
loope
add
or
sub
fisubs
ds
jo
adc
es
dec
dec
fsub
adc
lods
and
push
pop
test
scas
out
push
and
nop
into
arpl
loope
jmp
sbb
sub
or
test
shr
mov
scas
test
insb
cmp
mov
imul
push
xchg
rep
rolb
sti
lods
in
pushf
dec
dec
pop
loope
loopne
or
xchg
mov
leave
pop
loope
and
mov
lea
loope
dec
xchg
cmp
dec
jo
scas
adcl
add
sti
das
loope
shrl
fdivrs
ljmp
scas
pusha
call
lods
add
mov
push
pop
sar
jecxz
icebp
sahf
in
mov
ret
add
mov
fdivr
or
adc
loope
fsubrs
or
sbb
pop
push
je
ljmp
sbb
out
ret
jle
lahf
and
mov
outsl
pop
xchg
dec
loopne
push
jo,pn
or
fsubs
fwait
xorl
shlb
shlb
xchg
in
xchg
loope
outsb
push
xor
and
mov
aad
mov
loope
inc
inc
jb
js
sti
pushl
popa
jmp
in
ljmp
in
xchg
fnstsw
test
pop
pop
rcll
ret
call
cs
and
sbb
sbbb
in
cmp
pop
loope
dec
jnp
fists
sbb
cs
jmp
jnp
fsubrp
repnz
add
mov
cmc
out
push
jb
dec
mov
cld
xor
mov
jnp
adc
push
dec
jbe
lock
outsl
movsb
daa
lcall
mov
xchg
inc
les
mov
sub
jbe
mov
xchg
xor
push
pop
addr16
jge
int
aad
fcomip
dec
sub
std
loope
sub
lods
pop
or
shl
outsl
rcl
scas
inc
jl
imul
loope
xor
mov
popf
xchg
loop
loop
les
push
inc
in
mov
cwtl
in
int
loope
xchg
enter
cmpsb
and
mov
mov
sbb
loope
mov
pop
adc
ljmp
xor
ds
lcall
stc
loope
outsb
or
adc
push
out
dec
cs
dec
pop
and
loope
jb
out
sbb
shlb
fiadds
sbb
gs
xchg
loope
push
inc
or
loope
mov
dec
or
jno
or
ljmp
inc
test
test
loope
and
negl
test
mov
rep
into
loope
cmpb
mov
repz
cmc
xchg
mov
mov
xor
scas
fs
adc
push
jmp
pop
icebp
repnz
ljmp
sub
cmp
loope
ljmp
loope
cmp
popa
lock
gs
in
fs
loope
std
cltd
es
pop
lea
insl
sub
mov
jg
mov
loope
and
or
imul
ficoml
pop
push
out
dec
ljmp
jmp
test
inc
xor
mov
popa
loope
sahf
imul
or
inc
clc
pushf
aad
xor
loope
jne
dec
dec
dec
icebp
push
loope
pop
jmp
aam
or
loope
pushf
adc
shl
fs
stos
adc
and
leave
loop
or
adc
subb
xchg
cmovs
shlb
loope
xlat
dec
dec
mov
dec
and
push
ss
sub
fsub
fstl
jne
sub
dec
fsub
outsl
cmp
cmc
divb
mov
mov
cli
sub
sti
icebp
mov
lods
int
jne
jg
xlat
popf
and
add
aam
mov
out
call
xchg
cmp
mov
xchg
mov
std
in
push
stc
scas
clc
or
popa
cs
and
call
clc
jle
loope
js
lock
and
jo
xchg
sbb
add
loope
push
push
dec
les
stc
and
test
insb
mov
out
or
fwait
out
add
push
orb
cwtl
sub
mov
test
lock
mov
jecxz
std
dec
inc
shlb
mov
idivl
lods
addr16
ljmp
jmp
cld
dec
jno
mov
sbb
std
jnp
dec
fstpl
ljmp
nop
cmp
repz
shlb
jge
ljmp
jbe
pop
mov
loope
das
test
int
dec
cmp
cmp
xchg
inc
mov
setg
out
mov
cmp
pushl
jb
mov
sub
fistps
mov
gs
mov
in
push
js
mov
mov
ss
mov
shl
loope
xchg
xlat
sahf
xchg
popf
add
jo
and
fs
xlat
leave
loope
jp
arpl
call
jmp
clc
mov
inc
addl
mov
jecxz
hlt
shl
add
push
lods
jbe
push
ret
rep
test
or
pusha
jg
loope
cmpsl
in
nop
adc
loope
mov
mov
add
and
and
fists
and
mov
popa
jecxz
rclb
mov
fnstenv
add
lock
loope
and
mov
sub
cmpl
in
ret
enter
stos
rcl
adc
fisubs
mov
clc
je
in
cmc
dec
fimull
lods
xor
int3
jecxz
mov
jb
bound
sub
cmp
sub
and
ja
ljmp
pop
popa
push
cltd
insl
and
stc
and
loope
test
xor
jecxz
jo
pop
pop
fbstp
xor
add
cli
notl
fsub
jae
jle
int3
add
sbb
jbe
in
lea
jmp
lcall
cmp
repz
and
push
cmc
inc
add
jecxz
in
sub
negl
push
mov
sbb
adc
movsl
and
jge
stos
pcmpeqb
jmp
pop
push
add
cmp
pop
adc
sarb
loope
add
loopne
loope
jp
pop
in
mov
clc
pop
scas
call
addr16
int3
jecxz
dec
xchg
loope
nop
mov
push
imul
daa
shrb
loope
mov
pop
push
enter
sub
push
test
inc
and
push
jp
mull
inc
imul
jnp
pop
out
gs
push
mov
imul
and
in
je
mov
push
cmpsb
shr
mov
inc
fldpi
and
nop
pusha
out
sub
lock
adc
call
push
and
data16
ljmp
xchg
jge
xor
jmp
call
mov
divb
je
xor
xlat
loope
inc
xor
adc
dec
fcoms
orb
loope
lods
and
loope
stos
inc
pushf
mov
mov
jmp
sahf
cltd
aam
je
sub
cmpsb
in
inc
hlt
xlat
cmp
dec
and
test
loope
sbb
add
adc
mov
mov
loope
pushf
jmp
lret
mov
stos
std
mov
push
fcomps
sbb
sub
ss
ficoml
push
adc
in
push
inc
ljmp
hlt
fistpll
cmpsl
add
add
add
movsb
lock
adc
adc
gs
mov
mov
je
daa
inc
out
mov
sbb
mov
gs
adcl
lea
jne
loope
fistpll
jae
cmp
lcall
cltd
mov
loope
aas
jge
pop
lahf
fwait
loope
mov
lods
aaa
jecxz
push
jl
xor
mov
shl
jb
ds
inc
dec
ja
dec
pop
push
stc
xlat
insl
les
loope
sub
push
pop
sbb
mov
add
push
mov
call
loope
inc
push
js
mov
inc
loope
push
sti
test
sub
and
mov
cmpsb
jnp
sub
push
adc
pop
loope
outsl
jle
push
ss
inc
or
sahf
test
loope
stc
xchg
dec
cltd
mov
mov
jecxz
roll
jge
xor
rclb
inc
jne
cld
add
movsb
das
sbb
mov
push
stc
xor
sub
mov
mov
cmp
fcoms
loop
in
adcl
and
repnz
lret
jnp
inc
loopne
int3
jno
hlt
mov
inc
cmp
lods
mov
inc
psraw
rol
sbb
inc
inc
outsl
fmull
mov
xchg
lea
ficompl
jmp
mov
loope
dec
pop
movsl
dec
push
test
call
push
insb
sbb
push
xor
hlt
jle
sub
loope
push
addr16
adc
loope
dec
pop
cmpsl
jno
out
jl
adc
and
sbb
cmp
loope
and
adc
shl
xchg
inc
aaa
inc
inc
ret
inc
scas
loope
or
pop
fs
xlat
push
adc
and
push
loope
jp
mov
fs
mul
and
insb
into
add
mov
xchg
and
loope
scas
and
dec
cmpsl
cmp
push
inc
shl
or
sarl
xor
jns
iret
loope
add
enter
pop
mov
and
popw
and
out
loope
outsl
cmp
add
pop
sub
pusha
mov
clc
jae
mov
jmp
data16
pop
inc
sahf
das
sbb
ret
jecxz
loope
or
jmp
cli
in
jnp
xchg
loope
outsb
adc
cltd
pop
push
dec
or
jmp
adc
cmp
dec
sahf
popa
add
scas
jae
and
jecxz
lock
sub
cmp
mov
xchg
cmp
cld
inc
and
or
xchg
sub
pop
jnp
xor
aas
test
or
fcoml
lock
add
sbb
cmpsb
nop
push
adc
sahf
loop
jb
pop
xor
add
ja
loope
ret
rolb
loope
dec
or
imul
jle
gs
adc
mov
inc
in
xchg
pop
adc
loope
fwait
hlt
or
shlb
add
pushw
bound
jo
out
push
addr16
loope
stc
lods
sub
jnp
mov
popa
push
mov
mov
sbb
mov
loope
test
iret
sbbb
adc
jecxz
push
mov
loope
pop
ror
xor
loope
inc
pop
jns
mov
mov
or
mov
xor
or
jp
push
out
cmc
fisubrs
sbb
fsubl
xlat
out
daa
scas
loope
pop
dec
das
mov
pop
lahf
or
or
jo
inc
push
out
dec
ret
pop
pushf
movsl
pop
jmp
loop
mov
ljmp
icebp
cld
loope
add
imul
pop
mov
inc
nop
movsl
aad
out
fsubs
shlb
pushf
push
pop
mov
pop
and
testb
loope
mov
in
out
mov
loope
test
mov
add
fdivrl
adc
in
outsl
jg
add
lods
lahf
and
xor
loop
loope
cs
jnp
push
sub
jl
cmp
es
loopne
insb
dec
push
fs
loope
add
bound
loope
ds
hlt
popa
adc
add
push
cli
pop
in
out
test
xchg
add
mov
ror
cli
out
lret
pop
push
insl
pop
cmp
dec
inc
aas
dec
mov
mov
add
ds
insb
ja
xchg
cs
jne
and
clc
push
aam
imul
fsubp
mov
aaa
pop
sub
mov
loope
cmovns
jg
loop
loope
testb
cmp
loope
xchg
fisubrs
push
mov
jno
lret
cmp
loope
in
cli
js
add
loope
or
addl
out
or
fabs
pushf
imul
add
aas
into
loope
rol
pop
loop
mov
out
dec
loope
fs
hlt
add
in
jmp
in
ret
mov
add
sti
sbb
xor
jo
js
lret
imul
popa
inc
inc
dec
ss
lock
inc
loope
lret
stos
adc
loope
jecxz
movsb
scas
shlb
bound
dec
shlb
in
mov
test
mov
dec
pop
inc
loope
arpl
mov
loope
add
push
dec
sbbb
lock
pop
and
imul
je
js
xchg
sbb
test
mov
sbb
aam
outsb
outsb
sahf
scas
inc
mov
push
imul
dec
mov
mov
dec
imul
cltd
and
out
repz
fnsave
or
mov
xor
test
jnp
mov
xchg
loop
loope
or
lds
divl
popf
dec
xchg
loope
mov
pop
pushf
add
jb
decl
mov
or
mov
loope
in
es
sub
daa
pop
mov
add
xchg
psubq
cs
imul
ficomps
shrb
xchg
call
or
in
loop
lods
pusha
cmp
mov
rorl
dec
out
jle
inc
insb
out
call
jp
shlb
mov
movsb
es
ljmp
push
fstpl
inc
int
jbe
xlat
loope
add
dec
sbb
in
mov
shl
cld
sub
lahf
shlb
and
cmp
loope
lods
sbb
xor
fadds
aas
cwtl
fstl
mov
ja
sbb
loop
mov
imul
sub
mov
jne
xchg
pop
pop
and
int
das
loope
jmp
mov
xchg
sbb
and
popa
mov
and
sub
loope
pushf
scas
xchg
or
lods
pop
or
stc
ret
mov
cwtl
or
pop
add
shrb
lahf
mov
add
mov
loope
call
rcrb
dec
out
jmp
out
loope
shrl
push
insb
and
mov
lea
aas
and
out
add
xor
stc
dec
leave
and
sar
adc
lods
push
loope
and
add
addr16
jle
mov
xchg
popa
outsl
pop
out
cmp
lahf
xchg
ss
pop
test
push
loope
mov
in
or
mov
sbb
enter
xchg
xlat
shr
inc
adc
scas
push
mov
mov
fsub
push
and
add
inc
push
ja
stc
loope
arpl
push
dec
add
cmc
mov
inc
sbbl
loope
iret
push
mov
repz
lock
jg
push
orb
cmp
cmp
rclb
or
mov
xchg
rcr
sbb
mov
pop
or
jg
jecxz
dec
cltd
xchg
add
loope
push
xchg
jo
mov
enter
ss
inc
loope
in
fcmovnb
insb
and
stos
inc
jle
dec
lock
stc
jmp
pop
push
push
mov
int3
in
push
or
mov
cmp
sbb
and
xorb
imul
pop
loope
fldz
dec
mov
rorb
shrb
loopne
iret
inc
mov
cltd
or
dec
popf
clc
xor
loope
pop
ljmp
fwait
in
pop
mov
loope
sahf
pop
fs
push
jg
ja
loopne
or
and
jge
loope
cmp
mov
movl
or
pushf
or
push
xor
pop
pop
mov
jecxz
loope
mov
lret
out
mov
in
jmp
loope
push
mov
xchg
sbb
out
popl
mov
fimuls
loope
daa
and
add
jo
mov
lods
in
loopne
scas
push
adc
fcoms
push
stos
loope
lret
dec
and
in
pop
adc
loope
lahf
repz
or
inc
mov
or
jecxz
loope
fwait
xchg
sbb
and
in
dec
hlt
shl
je
loope
leave
or
adc
jns
fmull
cmp
pop
insl
jle
int
sbb
pop
add
adc
sub
loope
adc
xor
jmp
adc
loope
stos
fbstp
ljmp
jmp
loope
lock
filds
mov
insl
mov
adc
out
lods
fwait
loope
mov
and
mov
mov
jae
jno
inc
shlb
sbb
stos
movsl
sbb
ficoml
ja
mov
add
or
sub
ljmp
jo
test
pop
mov
fwait
out
jae
repz
and
and
mov
sahf
test
and
mov
fs
test
aam
mov
dec
cmp
mov
mov
std
enter
cmpb
out
cmp
mov
xchg
jmp
movsl
pop
pushf
xchg
adc
mov
xchg
dec
pusha
inc
pop
mov
sbb
sub
repnz
shlb
out
test
inc
jecxz
arpl
pop
addr16
andb
loope
jae
hlt
ficompl
adc
in
shl
out
gs
dec
push
aad
loope
push
sbb
mov
mov
loope
cmp
sub
fcoms
or
jmp
in
pop
jb
rorb
cwtl
es
jle
sbb
mov
sbb
jo
addr16
ljmp
dec
loop
cmp
mov
out
add
xchg
lret
rclb
test
jo
or
sar
repz
addr16
mov
out
ss
jmp
pop
mov
rol
and
ret
and
or
fsubrs
push
js
and
pop
jp
je
sbb
idivb
in
inc
sti
loope
mov
xchg
jae
gs
jo
xchg
orl
push
sub
pop
lcall
cmpsl
mov
sti
into
push
dec
fs
inc
mov
je
mov
ljmp
mov
and
mov
add
call
add
sahf
test
xchg
ss
pusha
pop
in
push
or
mov
stc
mov
call
sbb
xlat
js
enter
scas
xchg
ljmp
mov
jp
fsub
icebp
xor
cmp
pushf
push
test
add
daa
cli
loope
fwait
adc
mov
mov
dec
sbb
mov
mov
lcall
out
fidivl
js
movsl
imul
jb
add
loope
jp
inc
scas
loope
cltd
fcompl
jmp
xchg
ja
outsb
idivl
jge
loope
imul
call
jo
pop
jecxz
insl
jne
loope
adc
add
stos
jmp
mov
das
push
cltd
addl
sub
fmull
inc
ds
in
sub
jo
sbbl
loope
cli
aad
loope
call
sbb
xchg
in
push
fidivrl
mov
mov
js
das
loope
jecxz
mov
and
out
movsb
lcall
mov
lods
add
jmp
call
popa
loope
fisubrs
jl
dec
std
adc
mov
ret
jae
int3
outsl
ljmp
das
out
call
loope
cmp
les
ret
dec
xor
or
loope
popa
pusha
jmp
mov
das
movsl
stos
mov
loope
add
pop
out
mov
loope
mov
shl
movsl
jmp
pop
repz
andl
nop
push
mov
or
popf
loope
mov
cmp
jo
push
leave
jmp
lock
sti
lahf
cltd
int3
loope
fimuls
jl
sub
xor
adc
xor
mov
push
mov
sub
dec
add
rclb
loope
std
xchg
popf
int3
repz
mov
push
hlt
and
xchg
pop
inc
pop
and
clc
loope
mov
popa
insb
cmp
aad
pop
and
mov
jl
inc
cmovno
out
aas
pop
sbb
adc
dec
loope
jl
std
push
sbb
loope
js
adc
jbe
call
outsl
dec
sbb
es
shrb
cs
and
stos
fadd
mul
jmp
or
and
in
mov
fwait
inc
aam
orb
cmp
add
sub
jno
add
loope
xchg
add
lahf
pop
cltd
std
jg,pt
pop
aaa
push
add
dec
loope
adc
in
cli
lock
loope
aaa
fmull
jo
pop
sub
pop
xor
pop
mov
out
cmp
xchg
sub
sub
fimull
jp
jno
outsl
out
inc
xor
subl
jg
adc
shll
je
and
rolb
or
jmp
aas
loope
xchg
add
adc
int
sbb
test
das
xor
test
or
adc
cmp
in
jmp
lret
add
arpl
mov
test
daa
aam
push
mov
mov
sub
loop
jecxz
dec
cmp
mov
cli
out
cltd
pop
and
insl
aam
xchg
pop
loope
xor
loope
jno
aad
aam
loope
xchg
data16
mov
js
rol
fstpt
dec
les
bound
aad
mov
add
dec
mov
xor
fstps
loope
das
sahf
sbb
imul
loope
mov
pusha
adc
jp
loopne
scas
inc
push
and
push
xor
add
test
cmp
dec
fdivs
inc
std
nop
in
sbb
pop
shll
movsw
out
leave
or
std
loope
jnp
adc
jp
xchg
fistps
and
xor
arpl
xor
push
hlt
push
xor
jo
xchg
xor
jmp
daa
adc
loope
rcr
cmp
fildl
mov
pushf
ret
sub
jo
out
mov
pusha
out
xor
arpl
loope
sahf
inc
and
mov
ljmp
loope
and
inc
imul
pop
mov
out
add
mov
pop
xchg
jno
aad
mov
mov
insl
inc
sahf
cmp
inc
push
cmp
mov
lret
cwtl
fnstcw
mov
rol
jmp
and
movntps
push
hlt
jmp
mov
aam
mov
divl
repnz
push
in
mov
test
mov
pop
sub
lcall
jnp
mov
gs
mov
and
xchg
push
inc
push
ja
in
sub
add
fwait
aas
cmp
in
push
scas
mov
insb
push
pop
add
sub
mov
mov
cmp
push
inc
bound
xchg
dec
jae
xchg
xchg
mov
xor
push
adc
pop
xchg
xor
sbb
movb
pusha
imul
test
imul
andb
mov
or
dec
pop
pop
cwtl
sar
fwait
push
mov
mov
lea
jne
shld
cmc
xor
daa
mov
or
clc
sub
add
pusha
xor
mov
clc
push
call
jmp
add
add
movl
mov
pushf
lea
jmp
addr16
imul
lret
aad
out
incl
lock
in
adc
sub
test
and
and
lcall
or
xor
movsb
loope
xor
xchg
fnstenv
mov
es
push
lea
je
call
les
imul
mov
idivb
or
jno
and
push
fildll
ljmp
xor
xchg
cld
and
aad
int3
xchg
aas
xor
sbb
cmp
sti
mov
jle
add
push
adc
rcrb
js
inc
xchg
pusha
mov
sahf
incl
sub
daa
jo
arpl
push
jnp
mov
sbb
jle
lret
push
pop
jb
lods
fnstsw
sbbl
ret
pop
popf
popf
and
shr
jle
add
push
mov
movb
lea
jne
jmp
jo
iret
push
jno
mov
xchg
ret
cmc
popf
dec
lds
jae
add
adc
mov
repz
pop
out
pop
dec
call
xchg
in
xor
scas
iret
cmp
jns
aas
int
mov
sahf
dec
idivb
popf
lret
xor
in
inc
int3
adc
sbb
and
ljmp
or
test
nop
in
clc
idivl
dec
mov
adc
xor
call
sub
test
cli
xchg
test
bt
push
add
jmp
pushf
pushl
cmp
sub
lea
push
test
pushf
or
movb
movb
call
movb
pushl
lea
je
jmp
push
pushf
jmp
pop
xchg
cmp
clc
sti
add
cmp
les
add
mov
lret
incl
aad
cmp
fmuls
repz
jle
stos
dec
push
lret
icebp
lret
popf
mov
dec
pusha
lcall
pop
xor
lret
loopne
test
cmp
mov
cld
mov
mov
and
lcall
cmpsb
or
inc
arpl
or
fnstcw
out
bnd
daa
inc
jl
mov
lods
daa
sub
ljmp
push
popa
inc
pop
int3
rcrb
sbb
mov
sub
xchg
cltd
pop
repz
hlt
es
adc
mov
xor
cli
xchg
gs
stos
cmp
addl
shll
lods
jge
lea
sub
into
push
jns
push
insl
daa
cmc
fildll
pop
daa
xor
clc
mov
insl
mov
dec
sbb
mov
cmp
fcomip
int
mov
ja
cs
pop
fstpt
and
test
sbb
lret
mov
les
test
dec
push
pusha
jne
jo
pop
pop
jp
jmp
adc
sbb
idiv
cmpsb
fidivrs
inc
push
adcl
mov
out
sub
aad
mov
ret
cmp
stos
or
in
int3
xchg
cli
or
sbb
pop
dec
imul
int3
cld
pop
mov
enter
add
add
out
loope
inc
fnstcw
cli
les
dec
or
lock
ds
mov
mov
popa
jbe
mov
in
or
int3
sub
popaw
inc
xchg
push
add
addr16
roll
and
ds
fstl
dec
test
mov
or
cmpsb
ret
and
mov
cmp
sub
out
fdivl
test
aam
pop
pop
cwtl
inc
inc
add
std
jg
lahf
adcl
push
fisubrs
adcl
fiadds
mov
xor
jae
mov
inc
inc
xor
cltd
mov
pop
int3
movl
mov
call
mov
movl
jmp
pusha
push
push
lea
je
xor
bswap
mov
setnp
rcl
inc
add
rol
shrd
neg
mov
jmp
jmp
pusha
stc
movzwl
add
btr
dec
mov
call
pop
xor
popa
inc
pop
enter
inc
jae
sar
and
mov
das
push
aas
mov
xchg
shlb
pop
or
rcll
in
incl
dec
pop
push
out
aad
xor
or
inc
or
or
mov
negb
mov
adc
test
in
fld
inc
fwait
dec
cltd
iret
mov
scas
jns
xchg
mov
or
xchg
push
cltd
jmp
xor
push
cmpsb
arpl
push
cli
test
cld
movsl
test
inc
lret
std
fidivs
cs
or
sahf
addb
xchg
popf
leave
repz
lret
cmp
movsb
daa
xchg
out
divl
arpl
jno
mov
dec
popl
xchg
pop
mul
xchg
cli
sbbb
cwtl
xor
mov
sti
sub
imul
imul
cli
mov
sar
lret
xlat
outsl
mov
out
adc
enter
and
mov
icebp
cmp
xchg
fwait
movsl
ljmp
test
xchg
cli
andl
popa
inc
fdiv
sub
mov
loope
das
insb
mov
xchg
nop
mov
jo
or
sbb
inc
push
loope
dec
mov
inc
mov
sub
push
xor
outsl
push
add
add
test
sbb
sahf
ror
fstl
data16
adc
add
pusha
push
pusha
lea
jmp
pusha
movb
cwtl
movzbw
mov
not
lea
ja
bswap
not
lea
push
pushl
call
lea
ja
push
pusha
jmp
xchg
pusha
call
shll
fs
inc
dec
outsl
cltd
fcomi
and
cmp
hlt
pop
daa
stos
dec
and
mov
dec
scas
inc
imul
fcoms
push
cmp
int3
cmp
call
adc
popa
sbb
jg
cmp
iret
jbe
lahf
jle
dec
jo
xor
sub
loop
add
sbb
mov
cmp
push
sbb
lds
jge
ja
subb
sub
push
mov
sub
call
mov
xchg
mov
aad
stos
mov
lods
mov
dec
insb
cmc
int3
ja
cmpb
xor
add
fs
jne
movsbl
inc
mov
clc
jmp
call
xchg
cmp
inc
imul
mov
in
sbb
sbb
pop
ljmp
pop
out
popa
idivb
lahf
sbb
push
pop
lcall
mov
push
mov
lahf
repz
mov
daa
nop
lods
testb
push
repnz
loop
dec
inc
mov
test
out
stos
repz
jo
mov
hlt
and
shlb
mov
jecxz
adc
mov
inc
push
push
jle
mov
ficomps
inc
nop
in
sbb
jge
push
pop
sarb
jg
sub
int
lcall
inc
sbb
mov
mov
mov
mov
aaa
add
in
mov
cmp
fbstp
lods
test
jmp
jg
mov
ljmp
mov
mov
popa
popa
inc
sub
and
xchg
lahf
lahf
leave
clc
and
xchg
inc
cmp
loopne
dec
movsb
enter
mov
je
mov
mov
adc
sar
jge
cmp
push
push
xor
ss
adc
dec
and
xchg
mov
rcrb
fwait
mov
repz
push
scas
push
mov
adc
les
sub
jo
aas
aam
xchg
jne
call
pop
repz
shll
jnp
in
and
mov
or
mov
hlt
pushf
push
pushf
mov
lea
jmp
btr
sub
test
mov
pushf
call
inc
ljmp
and
push
xorl
mov
dec
inc
sbb
inc
push
lods
adc
es
xor
mov
xchg
divb
stos
out
dec
ljmp
pop
jecxz
jl
outsb
repnz
mov
dec
sbb
lret
aad
pop
adc
pop
xor
movsb
push
xchg
jge
aaa
pop
mov
jl
sahf
lret
testl
andb
mov
push
xchg
xchg
mov
fistpl
shr
leave
mov
mov
shlb
add
cmpsl
mulb
dec
mov
pushf
mov
scas
popf
iret
mov
sti
sub
pop
mov
or
in
or
add
adc
sub
pop
std
sbb
and
xchg
movsl
aaa
cltd
or
jmp
test
xchg
mov
movsl
scas
sbb
shll
xor
inc
and
sbb
cwtl
or
xchg
rclb
ds
jp
fs
jo
ljmp
inc
add
inc
mov
pop
bound
and
mov
es
pop
adc
inc
mov
fcmovnbe
xchg
cs
mov
cwtl
xchg
cmp
fmuls
aas
loope
xchg
movsb
inc
sub
jnp
test
test
rorl
mov
loopne
pop
dec
push
lahf
mov
outsb
dec
popa
enter
cmpb
out
jmp
int3
mov
inc
outsl
mov
es
sbb
pop
popa
inc
and
and
xchg
stos
mov
aaa
jns
xchg
jmp
popa
pop
sbb
mov
pop
dec
popf
push
push
cld
pop
pop
mov
push
ja
movsb
pop
outsl
and
and
inc
bound
and
pop
push
mov
stc
lahf
or
cltd
test
call
cltd
dec
rorb
sti
imul
add
sub
xchg
mov
daa
addr16
add
fldl
aaa
xor
in
cmp
mov
lret
inc
stc
push
xor
xchg
rolb
lock
add
jmp
test
and
data16
mov
loop
popa
test
push
out
inc
jp
popa
test
loope
clc
cli
push
int3
inc
add
in
mov
cld
stc
dec
imul
lret
int
push
dec
hlt
test
loop
dec
int3
lods
dec
fimull
push
je
cltd
icebp
int3
dec
and
cli
push
ja
lahf
movsl
iret
push
or
push
dec
mov
push
pop
mov
pop
popa
inc
stc
sbb
stos
xlat
sbb
aaa
xor
jne
sbb
cmc
mov
xchg
pop
pop
xor
lret
cmc
mov
and
addr16
addb
addb
mov
push
add
xor
sub
imul
test
cwtl
js
dec
pop
out
jb
lret
repnz
push
push
dec
xchg
rcll
push
dec
cmp
in
bound
push
clc
inc
inc
and
dec
dec
iret
stc
pushl
movl
pusha
pushl
mov
lea
jmp
mov
negl
inc
int3
xor
loope
cs
xchg
mov
cltd
push
mov
xchg
ja
shll
xor
inc
push
jae
or
lahf
cmp
add
xchg
mov
or
sbb
movsb
pop
add
insl
jge
ljmp
mov
jo
sahf
ja
xor
jecxz
sbb
int
sbb
mov
icebp
insl
mov
fwait
ret
pop
xchg
pop
pushf
lea
lea
jle
pop
pushf
mov
pusha
call
test
mov
test
mov
cmc
bt
test
push
pusha
lea
je
pusha
sub
push
jmp
jl
mov
pop
imul
fdiv
pop
inc
push
xchg
cwtl
lret
mov
push
movsl
ja
jo
pushf
orl
jecxz
imulb
cmc
xchg
add
inc
mov
jae
aaa
jmp
pop
mov
xor
sbb
jp
lods
sbb
scas
rorb
push
gs
setnp
std
dec
xchg
aaa
rclb
push
jno
bound
daa
push
and
negb
ss
inc
repz
add
ret
sub
ja
mov
ja
jnp
and
pop
mov
dec
adc
add
aam
pop
popa
inc
shr
sti
or
jg
cwtl
xchg
sar
xor
cld
push
out
push
xor
cli
jo
pop
sahf
push
fsts
inc
mov
jb
xor
xchg
or
adc
pusha
idivb
loop
bound
mov
and
mov
fsubr
sub
testb
push
jge
outsb
popa
mov
add
add
in
push
icebp
out
xchg
mov
push
sahf
addr16
insl
dec
push
cmp
mov
cmpsb
rol
mov
std
dec
jns
push
lea
call
pusha
lea
jae
test
jmp
in
popf
pop
popa
inc
es
mov
xor
mov
movsl
fcmovnu
std
cld
inc
pop
lret
mov
pop
fldt
cmpsl
push
mov
mov
fnsave
jns
or
mov
mov
rclb
insb
mov
ss
roll
mov
dec
jne
lret
xor
jmp
add
jbe
cltd
mov
cmpsb
mov
lret
xchg
incl
cmp
movsl
scas
mov
or
in
push
bound
mov
xchg
cmp
inc
popf
mov
pop
cltd
popf
ficoms
pop
gs
mov
dec
iret
lea
pushf
rcr
xchg
push
mov
xchg
sub
sti
mov
call
lea
jecxz
or
sub
mov
cmpsb
bound
cmpsb
and
inc
lea
sub
test
andb
mov
mov
sub
mov
pop
lahf
or
push
and
push
scas
mov
jae
leave
add
and
xor
mov
pop
popa
inc
stos
rcl
ficoml
and
into
sub
sbb
jae
xchg
std
sbbb
movsl
loopne
dec
jbe
sub
and
sub
orb
aad
mov
xor
cmp
mov
in
adc
jg
pop
out
mov
test
ficoml
repnz
pop
test
dec
push
xchg
cld
inc
dec
roll
mov
pop
mov
leave
pop
popa
inc
rcll
ficomps
jno
mov
repnz
adc
or
insb
and
pop
xchg
rorl
sar
mov
lea
ficoms
xchg
mov
nop
pop
int
and
xor
test
sub
jg
je
iret
inc
test
fsubs
push
and
pusha
jmp
or
mov
inc
cmpl
sub
sbb
inc
mov
inc
pop
jb
leave
or
popf
cmc
sbb
out
adc
xchg
mov
ret
mov
sbb
roll
aas
fcompl
mov
adc
mov
andb
jecxz
lds
fcompl
pop
int3
addr16
sbb
pop
inc
js
sub
jo
jp
roll
cmpsb
xorb
outsl
stos
and
cmp
mov
inc
xor
rorl
daa
add
lret
push
push
dec
xchg
divb
gs
mov
fwait
sti
nop
mov
das
lahf
clc
neg
bt
mov
test
pushl
sub
jp
pusha
add
bt
pushf
cmp
test
jmp
loopne
mov
popa
inc
aam
mov
push
pop
addr16
mov
push
in
pusha
test
xchg
mov
push
outsb
fiadds
out
sbb
fistpll
jne
scas
mov
or
fsub
push
mov
fdivs
xchg
lock
mov
scas
dec
and
gs
scas
ret
ljmp
sub
imul
cltd
mov
add
stc
cmc
test
pusha
movzwl
sbb
mov
mov
jmp
jo
aad
popa
inc
out
pop
pusha
add
in
pop
push
jns
out
cli
add
jne
mov
lret
xchg
mov
in
daa
adc
out
stos
sub
pop
popf
xor
and
mov
popf
mov
push
push
sbb
popf
enter
call
nop
cltd
fcomp
cs
pop
inc
and
mov
adc
insl
xchg
mov
cmp
cltd
les
sub
aaa
stos
ret
cmp
jmp
call
inc
jno
scas
aad
pop
pop
jp
cltd
fiaddl
imul
pop
mov
enter
pop
mov
xchg
mov
in
and
pop
pop
mov
or
scas
mov
sub
subb
jge
push
popa
inc
outsl
pop
xor
nop
scas
mov
bound
call
dec
sub
aas
insl
and
fwait
mov
xor
inc
sahf
insl
pop
scas
data16
lret
test
mov
adc
mov
scas
pop
mov
cmpsl
adc
pop
scas
cld
add
cmp
adc
nop
repz
test
cltd
loope
mov
fwait
jmp
or
popa
bound
shl
and
hlt
xchg
ret
imul
decl
shr
in
lcall
push
pushl
movl
pusha
pusha
lea
jmp
call
negb
xchg
scas
mov
hlt
ss
push
js
lret
stos
rolb
jle
push
out
pop
mov
fdivl
imulb
inc
aam
test
rcll
outsl
sub
repnz
iret
mov
mov
in
imul
sub
mov
mov
stos
adc
fsubs
scas
push
cld
es
mov
jmp
xchg
aad
lret
fmuls
cmpb
popa
inc
cltd
add
dec
test
or
pop
cltd
sbb
push
adc
lods
arpl
inc
loop
xchg
ret
cmp
inc
add
mov
in
pandn
adc
insl
stos
dec
fs
daa
ret
js
insb
or
adc
repnz
out
inc
scas
or
pushf
daa
or
jne
sub
mov
mov
movsl
fildl
xor
imul
mov
mov
arpl
inc
insb
insb
outsl
arpl
add
dec
jae
popa
fs
jb
je
push
je
add
inc
jbe
popf
push
mov
jmp
bound
mov
leave
sbb
sub
arpl
cmp
mov
cmpsb
pop
shll
es
leave
shlb
pushf
fsubr
sbbb
dec
lods
decl
mov
cmp
test
leave
out
leave
scas
dec
das
popa
into
sub
push
xchg
and
ljmp
gs
insl
push
cmp
dec
ret
dec
sbb
jbe
insb
movsl
inc
lret
es
in
std
and
jle
addl
nop
stc
fldenv
push
mov
and
mov
xor
stos
adc
insb
pop
sbb
xchg
add
xchg
push
push
popa
inc
jo
in
or
cmp
fstps
sub
mov
push
mov
repz
push
mov
repnz
push
jnp
int3
sarl
negl
jne
push
cmc
adc
mov
or
in
je
cmpsb
push
mov
adc
jbe
cmp
mov
aam
aam
insl
insl
jo
int
sbb
imul
add
loopne
cmp
or
inc
inc
sbb
ficoms
xchg
mov
pop
xchg
enter
adc
push
je
clc
xchg
movb
jmp
test
push
popa
inc
cmp
jl
fldpi
sub
dec
ja
push
ficompl
push
lcall
xchg
xchg
leave
lret
stc
arpl
jb
negl
xchg
inc
test
or
out
fwait
sar
sub
add
in
lahf
mov
and
nop
adc
out
test
pop
jno
jle
jne
cmpsb
std
add
ja
mov
add
sub
dec
daa
clc
push
cmp
cmp
jae
adc
add
mov
fs
rorb
pop
and
sub
lret
rclb
push
adc
loopne
mov
sbb
pop
out
cmpsb
jno
jno
lds
push
out
or
lret
imul
pop
aam
xchg
pop
and
fisubl
movsb
les
prefetchnta
cmpl
clc
pop
dec
or
fiaddl
iret
popf
popf
jl
imul
cmc
cld
jno
in
sahf
lods
movsl
pop
xchg
dec
sub
mov
mov
xor
imul
mov
cmp
sub
add
push
popa
inc
or
inc
inc
mov
xchg
and
mov
call
adc
add
fadds
inc
sbb
scas
fdivr
mov
cmpsb
leave
mov
fimull
pop
aaa
mov
out
push
in
sbb
and
sarl
nop
xor
test
or
repz
and
aam
mov
and
js
cmp
cmpsb
add
mov
adc
cli
int
xor
pusha
pmaddwd
cmc
xor
xlat
adc
push
mov
arpl
loop
popa
inc
repz
mov
push
mov
xchg
adc
fmuls
push
mov
push
pop
test
cltd
lcall
cmc
mov
mov
leave
incb
notb
jne
jo
insl
rclb
push
jb
incl
hlt
aam
iret
sub
mov
es
mov
fwait
loopne
push
gs
fcoms
call
jnp
cmp
lock
push
xchg
mov
push
sbb
xor
es
popa
inc
popf
add
test
xchg
mov
pop
pop
imul
jg
jnp
mov
lods
leave
imul
xchg
fimull
and
pop
jbe
loop
jb
dec
out
cld
pop
test
push
popa
inc
cmpsl
push
jb,pn
loopne
daa
daa
insl
imul
loope
and
in
stos
push
mov
push
aam
ret
mov
test
rolb
iret
dec
in
outsl
ret
or
sub
sti
sahf
mov
shll
sarl
clc
inc
test
inc
loop
lahf
sbb
test
xor
test
daa
outsl
push
or
aaa
out
loope
call
xchg
cli
jns
xor
out
push
popa
inc
and
pop
ja
mov
mov
ret
scas
mov
lcall
aas
mov
ja
imul
jbe
xchg
pop
mov
inc
inc
pop
mov
mov
add
mov
dec
sarl
call
lcall
mov
or
sbb
xor
fldcw
push
mov
jg
pop
mov
sti
fs
cmp
sub
mov
dec
mov
cmp
pop
adc
dec
popa
inc
in
pop
jae
scas
mov
stc
push
cmp
scas
rorl
add
mov
mov
and
fists
ret
xor
jle
leave
int
add
sub
arpl
sub
adc
cmpsb
xlat
inc
ror
stc
sub
test
lea
jmp
lods
ja
push
popa
inc
push
push
dec
dec
insl
mov
push
jnp
mov
push
mov
or
sub
mov
test
cli
into
addb
fmul
dec
or
mov
and
test
outsb
push
out
mov
mov
mov
popf
sub
jne
sti
add
sub
xor
cltd
push
cltd
fstps
out
rclb
xor
mov
imul
test
add
jge
test
clc
test
cmp
call
push
inc
or
std
or
xor
jno
jmp
sbb
in
rcll
divb
mov
push
sahf
pop
xchg
repz
inc
fdivr
fwait
pop
dec
aad
add
adc
jmp
lods
or
sbb
jne
cld
jns
aad
xor
fdivs
in
notb
mov
lock
in
pop
test
pop
jns
test
push
ja
sub
inc
mov
leave
push
jmp
jle
push
pusha
adc
movl
lea
call
call
push
mov
lcall
xlat
sbb
xor
mov
or
pop
inc
mov
jmp
mov
add
mov
ja
mov
outsl
pop
pop
cmp
in
popa
mov
jae
adc
lahf
enter
mov
sub
hlt
rorb
adc
jno
add
inc
insl
out
add
fwait
lahf
mov
lret
stc
dec
jbe
repnz
push
xlat
repnz
adc
test
add
push
cmc
call
mov
test
popa
inc
sub
fcoms
and
rcr
add
shlb
sub
jmp
rol
and
dec
or
jbe
fdivs
out
insl
je
mov
test
mov
sahf
lock
sbb
jbe
lret
jno
jnp
lahf
jl
pusha
pop
sbb
lret
jns
es
rclb
sbb
std
fmuls
das
dec
push
push
mov
fsubr
sti
iret
xchg
pop
and
push
add
inc
gs
outsl
fs
gs
imul
add
jmp
inc
js
js
into
adc
negb
aaa
jbe
inc
add
rol
rcl
ds
ffreep
aad
xor
inc
repnz
inc
adc
aad
jns
rorl
dec
push
sub
movsl
enter
mov
ficomps
jb
mov
sub
mov
mov
rcll
in
inc
out
jle
push
pop
mov
lret
lock
lods
and
jecxz
jno
add
mov
pushl
jmp
jmp
in
sub
popa
inc
sbb
hlt
out
xor
jg
iret
int
and
mov
xchg
scas
pop
pop
leave
enter
xchg
dec
push
mov
out
add
or
mov
and
in
in
mov
mov
xor
nop
or
aas
fistl
movsb
cltd
and
inc
add
and
add
push
ret
je
xchg
jnp
cmp
in
out
dec
push
pop
jae
out
dec
jbe
push
rclb
jmp
and
cmp
mov
test
call
movl
push
jmp
pusha
mov
pushl
lea
jbe
rcr
rcl
ror
sub
cmc
xchg
mov
and
mov
shl
rcr
mov
mov
inc
add
call
int
mov
inc
xor
xchg
lcall
insl
loope
out
push
fdivrl
mov
imul
clc
nop
ret
jno
test
lret
ss
nop
adc
and
and
clc
pop
scas
leave
fstpl
cmc
push
jecxz
mov
cli
jae
mov
fldenv
pop
test
repz
rclb
ret
xlat
out
movsl
sub
pop
mov
movsl
add
shlb
andl
push
jecxz
nop
xchg
je
mov
adc
dec
popa
inc
mov
pop
jl
repz
cltd
lds
and
inc
dec
cltd
aas
imul
pop
in
mov
pop
loop
mov
loop
push
xor
and
push
test
neg
inc
add
cmp
jge
icebp
xor
inc
fsubrs
test
mov
shll
xchg
jno
push
xor
cmpl
jbe
fistl
mov
pop
dec
popa
inc
jl
stos
jecxz
sbb
push
xorl
mov
hlt
inc
pop
ret
push
lcall
imul
fisubrs
stc
lcall
adc
mov
lcall
xchg
stos
mov
aaa
xchg
add
jmp
aam
sub
sub
push
and
lcall
mov
mov
or
pushf
dec
pop
lods
push
cs
xor
stos
pop
test
inc
xor
dec
sub
pushf
loop
std
or
inc
bound
adc
int3
icebp
dec
bound
popa
inc
lds
sahf
int
xor
movsb
enter
lea
push
dec
repnz
test
gs
push
stos
lods
shlb
test
or
dec
xlat
dec
jg
rolb
lods
lret
lret
dec
fisubl
insb
push
jg
loop
jno
push
xor
mov
cld
gs
mov
and
pusha
cmp
jmp
fst
mov
xor
jle
stc
out
ss
test
jmp
orl
mov
cld
mov
rol
mov
clc
movb
clc
clc
mov
shl
shr
mov
pushf
test
sub
call
inc
jnp
dec
popa
inc
add
fcomip
sub
jg
cli
pusha
push
xchg
pop
pop
add
inc
jl
movsl
ja
lods
push
add
xchg
addb
mov
push
fidivrs
out
mov
or
out
arpl
mov
mov
pop
lods
fistps
arpl
adc
es
sub
in
hlt
outsb
stos
arpl
dec
popa
inc
sar
idivl
push
cltd
test
aam
cmp
fwait
jbe
mov
mov
negb
push
fwait
push
lret
aaa
sbb
xchg
mov
fdivrl
data16
pop
leave
int3
rcll
loope
jbe
push
push
movl
mov
shlb
stc
int
lret
and
dec
or
fisttpll
ja
lds
mov
in
sahf
inc
mov
fcoms
and
cltd
mov
dec
mov
sahf
cwtl
es
push
loope
mov
call
inc
clc
lock
popa
inc
lcall
pop
push
dec
nop
scas
scas
push
ljmp
lock
rorb
insl
or
adc
outsl
push
xor
inc
inc
cli
mov
mov
sub
xlat
cmp
or
mov
xchg
sub
and
outsb
into
out
arpl
adc
into
cmp
mov
notb
and
mov
sahf
sbb
idivl
push
sub
shrb
ret
xor
xchg
int3
sbb
hlt
cli
add
test
xchg
sbb
sub
push
dec
dec
dec
cs
push
push
add
inc
push
inc
popa
inc
test
mov
cmp
scas
lahf
repz
mov
ds
int3
inc
mov
mov
test
and
push
aaa
loopne
push
cmc
cmpsl
dec
sbb
cld
mov
push
cmpsb
cmp
xchg
inc
push
pop
cmp
jg
hlt
test
xchg
adcl
repz
test
push
inc
das
jmp
jnp
mov
dec
cmc
loopne
mov
lcall
shr
pop
xchg
mov
aam
xchg
scas
testl
popa
inc
stc
push
pop
insl
stos
xlat
fucom
add
cmp
stos
jecxz
sti
aam
ljmp
int
repz
jae
sub
mov
daa
mov
sub
repz
stos
data16
sub
daa
sbb
nop
psrld
mov
ljmp
dec
fsts
fdivl
fdivs
test
pop
xor
daa
je
mov
imul
into
lock
push
rcll
adc
ss
popa
inc
push
idiv
and
xor
in
push
aas
js
dec
sbb
addw
mov
jge
ljmp
pop
test
pop
fucomp
call
cwtl
or
pop
emms
inc
nop
dec
ret
pop
dec
aaa
fistpl
or
cld
cwtl
enter
test
loop
jl
add
mov
jo
inc
sbb
inc
arpl
jb
adc
xchg
and
test
jp
lcall
in
fdivrs
lret
call
pushf
push
push
mov
pusha
xchg
movsbw
pushf
movzbl
movl
pushf
pop
bswap
bswap
lea
pushf
call
stc
andl
inc
pop
int
cmp
sbb
test
mov
pop
ret
pop
call
fldenv
inc
dec
push
jp
in
push
and
mull
mov
and
cmp
aad
lock
fnstsw
or
enter
jo
xchg
roll
jno
divl
mov
mov
aad
fidivrl
loop
bound
rorl
into
test
jbe
push
inc
pop
test
int
xchg
pop
dec
addr16
cmp
mov
xchg
sub
or
addr16
leave
jnp
aas
xchg
out
mov
sarl
mov
insb
inc
pop
jne
test
and
sbbb
mov
movsb
in
bound
ret
rolb
cs
fadds
adc
insb
jns
xlat
inc
push
jae
lahf
dec
neg
mov
loopne
inc
sub
inc
cltd
mov
cmp
mov
sbb
call
clc
idivb
mov
mov
inc
xchg
jecxz
mov
cmp
add
sbb
push
scas
mov
adc
cmp
pop
adc
cld
mov
mov
pop
xchg
test
adc
lds
fs
lcall
ret
fwait
stos
cld
shll
adcl
lahf
dec
sbb
rorl
add
push
loop
xchg
in
in
loop
push
bound
xor
sar
mov
inc
add
lock
cmp
popa
inc
int
test
dec
mov
adc
dec
outsl
sbb
push
cmp
cmp
lret
mov
idivl
inc
pop
idivl
xor
repnz
push
xchg
adc
mov
xor
mov
cmp
add
stc
cmc
pusha
movzwl
lea
rol
bsr
sbb
mov
cmc
add
clc
pusha
call
movl
pusha
pushf
pushl
popl
pusha
pushf
pushl
ret
lods
pusha
pushf
rcl
sets
ror
cmp
cmp
test
add
rcl
not
add
clc
neg
stc
bt
inc
xor
call
not
mov
test
clc
cmp
clc
cmpb
call
push
or
inc
popa
inc
scas
dec
push
ja
pushf
lods
hlt
std
pop
fs
add
pop
cmp
jmp
push
jno
rorb
arpl
mov
fistl
outsb
inc
lds
add
adc
inc
jo
xchg
in
cmc
iret
dec
pop
jg
imul
mov
arpl
fnstsw
pop
mov
mov
pop
test
inc
fwait
hlt
sub
mov
sub
scas
in
push
fucomip
out
push
jg
mov
outsl
push
add
and
xchg
push
inc
popa
inc
andb
pop
jb
decb
and
xchg
xlat
pop
mov
sbb
or
adc
lods
jo,pn
pop
adc
sub
and
insb
jnp
outsl
dec
mov
mov
jno
aaa
fcoml
data16
or
inc
cmp
mov
cmc
lahf
sub
add
add
loope
xchg
sub
sub
or
aas
stc
mov
insl
cmp
sti
aas
inc
dec
jecxz
push
xlat
ret
mov
aas
mov
mov
or
nop
mov
push
jg
int3
pop
scas
icebp
lret
jo
sub
xchg
add
or
icebp
pusha
movb
movb
mov
lea
jmp
mov
xchg
inc
popa
inc
aas
addr16
loope
xor
jbe
lahf
out
in
lods
movsb
and
push
inc
add
bound
or
js
daa
lcall
inc
mov
js
aaa
cmp
scas
pop
mov
lret
int
les
lret
sub
leave
jl
pop
cmp
dec
into
notb
push
pop
pop
cltd
int
ljmp
add
scas
loopne
pusha
movl
pusha
pushf
movl
push
lea
jmp
inc
cmc
repz
popa
inc
sarb
data16
mov
popa
inc
sub
in
outsl
mov
rcrl
mov
pop
push
pushf
cmpsb
test
cli
cmp
push
or
test
mov
fisubrs
mov
movsb
inc
sub
mov
aaa
xor
mov
push
push
pushf
clc
leave
in
xor
inc
insl
call
and
jmp
mov
mov
popa
inc
push
inc
arpl
lret
xor
aas
sbb
lss
sbb
loopne
jns
imul
movsb
or
ljmp
add
push
hlt
in
or
jo
mov
mov
fmull
movsb
lock
cmp
push
and
fbstp
hlt
aam
aad
test
fs
insb
add
push
inc
insl
aaa
fbstp
scas
push
or
pop
rcll
xchg
lcall
xor
movsb
loopne
inc
dec
dec
arpl
dec
arpl
stc
xchg
enter
pop
sahf
xor
inc
xchg
add
cmp
fwait
lahf
enter
insb
popl
adc
mov
clc
mov
outsb
lret
aad
mov
adc
mov
sbb
sbb
jo
in
pop
or
test
lods
push
jno
dec
test
in
fadd
imul
mov
les
mov
mov
movsb
insl
push
push
jo
gs
leave
cmp
adc
lcall
sub
pop
cmp
mov
decb
pop
scas
ret
push
push
push
jle
rol
jnp
mov
jo
enter
aas
popa
inc
cltd
add
xor
push
push
aas
ficompl
hlt
inc
ja
cmova
sbb
movsb
leave
add
jg
out
sub
clc
xchg
mov
nop
fwait
cmp
add
es
push
outsl
mov
mov
pop
xchg
ds
mov
mov
and
adc
rcrb
xchg
js
sub
ja
mov
mov
push
push
push
call
sti
cmpsb
jle
push
pop
xor
loop
sbb
inc
sub
test
movsb
cs
sub
inc
adc
push
and
jnp
lea
mov
and
dec
add
scas
push
mov
ss
pushl
lea
jb
je
bsr
shl
mov
shrd
pusha
add
clc
btr
inc
movsbl
mov
call
sbb
mov
or
notb
das
xor
out
mov
push
test
xchg
and
jnp
ja
mov
sti
jne
inc
adcl
imul
cmp
neg
lret
inc
ret
mov
dec
and
aaa
ljmp
dec
jae
sar
add
xchg
dec
xchg
mov
or
jns
push
mov
into
cmp
pop
mov
adc
rcll
les
add
jo
pop
pushf
mov
popa
arpl
shrb
icebp
and
push
jb
push
mov
push
mov
test
mov
insb
outsl
sahf
adc
pop
repz
sbb
lret
mov
jo
sbbb
adc
loop
outsl
inc
cltd
and
fidivrs
and
not
aas
xor
xchg
mov
mov
insl
mov
cmc
in
std
and
andb
and
ja
pusha
mov
push
lea
jmp
pushl
lea
jne
test
sub
rol
mov
cmp
pushf
pushf
add
call
movl
pushf
pushf
movw
lea
jmp
jae
idivb
inc
filds
notb
repz
lea
inc
sbb
pop
sub
movsl
test
add
lods
xchg
mov
cmp
scas
mov
fwait
dec
sub
lock
xor
loopne
dec
bound
adc
or
and
mov
mov
mov
in
cltd
mov
xchg
mov
mov
cmp
adc
push
std
into
scas
lcall
jnp
aam
lock
push
gs
push
sahf
jecxz
insl
rolb
push
cmp
jbe
in
adc
sub
xchg
js
jno
andl
adc
mov
dec
mov
mov
adc
sbb
fcomi
add
mov
mov
push
loopne
in
into
dec
jnp
in
lds
jnp
mov
and
adc
pop
bound
mov
mov
jns
das
push
call
jp
add
add
add
add
add
call
jge
add
jge
add
add
add
add
jge
add
jmp
xchg
fwait
sbb
jl
ja
push
repz
inc
pop
mov
inc
mov
aas
mov
jae
fwait
xchg
inc
jo
fcmovnb
clc
or
pop
adc
add
inc
xchg
rep
std
jnp
cmp
adc
dec
sub
cmpsb
xor
push
cli
scas
lds
ret
gs
nop
cmpsl
repnz
cwtl
addl
call
bswap
insl
sub
jp
add
sbb
inc
popf
pop
pop
jnp
shll
jg
pop
and
cmpsb
adc
andb
add
xor
jo
into
jae
adc
stos
add
insb
rcrl
adc
inc
dec
jge
xor
push
mov
mov
imul
mov
mov
sbb
pop
stos
jmp
mov
xchg
stos
mov
and
sbbl
xchg
hlt
inc
in
mov
fstpl
sub
sbb
xchg
inc
or
mov
insl
cld
xchg
push
push
sbb
and
mov
loop
xor
aam
mov
add
loopne
push
icebp
xchg
imul
bound
jno
sbb
test
nop
sarl
out
dec
xchg
mov
sub
icebp
flds
pusha
arpl
movsb
sub
outsb
add
mov
ss
mov
inc
bswap
or
dec
mov
cmp
xlat
ds
in
test
fwait
setae
repz
into
scas
shrl
outsb
xchg
lods
pop
mov
push
nop
rcll
out
orl
mov
mov
add
ret
xchg
cmpsb
push
int3
in
iret
ljmp
mov
andl
out
push
clc
mov
inc
mov
test
mov
or
shlb
cmc
and
xchg
sti
or
ficoms
scas
xchg
xor
daa
cwtl
adc
mov
pop
push
je
nop
hlt
sbb
xchg
mov
in
xchg
jae
bound
js
cwtl
loop
cli
sbb
inc
adc
test
sbb
dec
jle
in
xor
xor
dec
and
or
int
push
add
insl
jne
dec
ffree
fildl
lods
mov
mov
out
rorb
mov
movsl
cli
shlb
pusha
hlt
cmp
shll
mov
fwait
sahf
test
inc
adc
div
push
cmc
jecxz
jb,pt
push
jle
inc
fimuls
and
push
mov
ja
notl
cmovb
lock
les
lods
roll
mov
in
jmp
pop
sub
lock
subb
arpl
test
cltd
aad
dec
flds
das
xor
test
mov
inc
dec
js
xchg
lock
aad
and
cs
imul
mov
negl
adc
scas
or
popf
mov
loop
lret
leave
xchg
out
fcompl
dec
inc
imul
movsl
sub
int
cli
cmc
adc
cmp
js
mov
lods
sub
rcrl
stc
add
popf
fdivl
cmp
xor
gs
sbb
lods
lcall
jg
adc
cmp
out
xor
lock
sti
pusha
xor
addb
fdivl
lock
sub
stc
lahf
test
dec
sbb
add
xor
std
push
cmp
rolb
dec
fwait
inc
cmp
and
out
dec
rclb
ret
mov
jge
ja
pop
stos
push
dec
shlb
fisubrs
ljmp
sarb
xor
push
add
sub
sub
dec
push
fnstsw
aad
leave
inc
mov
std
daa
add
cmp
rorl
decl
mov
cmp
mov
lcall
push
jg
adc
mov
pop
inc
fstpt
mov
mov
icebp
sahf
lahf
lds
fdivs
dec
push
out
ffreep
mov
push
push
test
xchg
dec
std
sbb
scas
mov
sub
int3
out
xor
in
pop
lock
movsl
rorl
jno
idivl
sahf
xchg
pushf
orl
fmull
frstor
cld
dec
mov
xchg
jecxz
lods
cwtl
inc
rolb
inc
lret
jae
test
cwtl
dec
fisubs
mov
jb
sbb
and
ds
push
adc
jae
inc
divb
lcall
or
inc
jmp
xchg
and
or
and
push
imul
ss
and
push
adc
hlt
xchg
xchg
adc
scas
add
mov
mov
jl
lret
mov
jg
das
les
xor
xchg
cli
push
jmp
adc
mov
movsb
add
test
push
ret
rcrl
repz
in
sbb
xchg
mov
sarl
enter
mov
movsl
jecxz
xchg
push
stc
pop
inc
adc
add
bound
into
xor
dec
mov
jecxz
arpl
fiaddl
adc
popf
or
pop
shll
mov
ror
or
aam
dec
cmp
loop
sub
sti
adc
xor
mov
outsb
xorl
add
xor
sbb
les
fidivrl
lret
sbb
sbb
jg
orb
pop
adc
insb
jns
adc
inc
push
adc
je
lods
mov
daa
fcmovnbe
sbb
incb
ret
inc
dec
push
iret
shrb
add
rsm
lods
lahf
jecxz
jns
jae
imul
and
ret
imul
xor
adc
push
stos
cmp
int3
inc
call
mov
jne
into
pop
add
xchg
push
pop
mov
mov
jle
xor
test
adc
mov
ja
and
xchg
je
add
mov
pop
loopne
cmp
push
xlat
sti
lock
cld
std
arpl
xchg
loopne
int3
xchg
lods
insb
xchg
and
and
adc
sub
std
inc
stc
imul
iret
loop
jmp
das
mov
repnz
aas
bound
adc
inc
mov
dec
movsb
dec
jp
stos
push
jns
push
or
jg
scas
sbb
xchg
pop
filds
sbb
fmulp
int3
and
mov
cli
cli
xlat
mov
dec
inc
cmp
xchg
xor
cmpsb
jle
addl
jle
cli
imul
jl
pop
aaa
mov
sarb
movsl
andb
fbstp
ljmp
xchg
in
push
clc
and
in
call
push
sbb
and
daa
push
cmp
loope
mov
mov
cmpsl
repnz
ss
or
insb
and
mov
fwait
cmp
outsb
popa
push
jnp
lcall
pop
icebp
popf
pop
jmp
mov
or
fsts
insb
mov
add
cmp
les
mov
sbb
cmp
iret
fisubs
adc
adc
cmp
iret
pop
adc
sbb
shll
mov
mov
sahf
mov
repnz
and
cmc
pop
cmp
inc
int3
or
lods
jg
mov
cwtl
imull
pop
outsb
test
js
movsl
js
push
mov
mov
repz
sub
xor
loope
inc
hlt
cmpl
push
mov
mov
push
jecxz
pop
cmp
lods
pop
jl
lea
cmp
push
repnz
jns
aas
sub
xchg
jmp
push
mov
mov
push
int
lcall
jbe
cmp
sub
mov
cltd
mov
sub
aad
add
cmp
cmp
push
popf
xchg
sub
cmp
or
or
stos
sbb
addr16
in
pop
xchg
or
mov
or
fistpl
adc
mov
loop
sahf
stos
popf
in
out
fwait
jne
inc
sub
lods
mov
sub
enter
imul
or
subl
sahf
pop
fucomip
arpl
daa
adc
dec
jo
scas
pop
jne
push
mov
jbe
sbb
iret
xchg
and
cmp
mov
cwtl
sbb
inc
js
fs
or
sbb
cmpsb
inc
inc
xchg
xchg
mov
test
clc
adc
in
cmp
mov
mov
int
out
pop
addr16
push
inc
xchg
sub
mov
jmp
xchg
sahf
adc
das
sub
in
gs
dec
dec
or
sti
mov
movl
stc
cli
lcall
js
jo
jnp
mov
sub
cmpsl
jecxz
mov
cmpsl
dec
outsl
mov
push
imul
in
mov
and
icebp
mov
push
cwtl
xlat
and
mov
int
adc
outsl
jmp
aad
adc
push
in
push
loop
push
mov
push
jbe
test
ja
jle
lret
cwtl
inc
xchg
jb
and
dec
sti
jecxz
push
cwtl
cwtl
adc
jae
loop
sbb
ret
cmp
cmpsb
cmp
int
cmp
inc
outsl
test
push
push
daa
sbb
jp
icebp
fcmovnbe
out
sbb
xor
or
ret
shrl
sub
adc
call
and
mov
cs
decb
in
cmp
xor
test
push
mov
xchg
cmp
sub
mov
inc
and
ja
popf
cmp
cmp
iret
into
push
lds
popa
mov
jp
dec
cld
sti
pop
adc
icebp
cmp
adc
cli
gs
jmp
mov
rorl
adc
ret
inc
add
test
sbb
shll
xchg
xor
inc
test
std
xor
sbbb
imul
fiadds
push
sub
cmpsb
test
pushf
xchg
ljmp
push
ljmpw
addr16
dec
pop
sub
jp
mov
xchg
movsl
mov
mov
push
sbb
stos
popa
xchg
je
nop
pop
sarl
mov
sbb
in
pushf
insb
pop
pop
popf
test
daa
lret
jo
popf
outsw
cwtl
mov
dec
sub
repnz
mov
repz
xchg
fmul
jae
outsb
fs
dec
scas
dec
xchg
scas
mov
push
imul
sbb
cmp
adc
dec
add
sbb
loop
stos
mov
push
sti
scas
iret
mov
fs
pop
ret
repz
pop
mov
popa
imul
enter
std
cmpsb
adc
pop
or
gs
pop
out
add
aam
jo
lock
loop
push
in
mov
cmp
dec
cli
sti
and
shl
add
mov
fimull
fcmovnu
mov
pop
mov
or
fisttpll
sub
push
pop
push
pop
sbb
mov
repz
cmp
idivb
xchg
sti
in
push
repz
mov
mov
pusha
fcmovu
mov
test
sub
or
mov
rcr
inc
fnstenv
add
add
xor
das
popa
inc
jno
mov
push
push
nop
mov
and
pop
push
mov
test
add
mov
shlb
mov
insb
inc
jle
fnstenv
movl
fs
push
jmp
mov
inc
popl
jmp
ss
mov
xor
dec
jp
sub
fsubs
lret
add
or
inc
call
test
or
inc
and
subb
and
orb
jo
fcmovnbe
mov
mov
sbbl
sub
mov
sub
cmpl
std
divb
sti
and
jno
stos
and
mov
sub
fadd
add
mov
adc
inc
sbb
mov
pusha
das
xor
sub
pop
mov
jmp
mov
lret
cmp
lock
inc
xchg
jo
or
fcomip
out
fmul
ret
mov
insl
loop
imulb
mov
in
addb
cmpsb
jb
xor
es
data16
leave
sti
comiss
mov
fsubs
aad
mov
movw
pushl
lea
call
call
jo
movsbw
movzbl
pushf
mov
movl
movw
mov
bswap
mov
pusha
mov
pop
mov
mov
pushf
pushl
ret
js
stos
sub
ret
pop
cs
data16
in
pop
cmpl
bound
sub
stos
aas
pop
addl
xchg
fs
data16
sbb
push
iret
push
int3
xor
mov
sbb
inc
xchg
pusha
stos
iret
inc
pushf
fadd
call
pextrw
xchg
dec
xchg
mov
arpl
dec
jno
xor
in
out
jl
popf
ror
ljmp
out
aas
lods
cmp
icebp
inc
push
sub
adc
push
jbe
idiv
sbb
xor
and
sahf
aas
inc
mov
lods
lahf
xlat
jg
and
imul
pop
add
xlat
or
lret
pop
je
ljmp
addl
stos
jl
sub
dec
lret
add
dec
scas
xchg
jp
lea
xor
add
hlt
arpl
push
xor
xchg
xchg
mov
pop
xorb
push
test
cmp
jmp
jle
xchg
shl
sub
xorb
mov
xor
fwait
mov
in
movsb
out
xchg
movsb
outsl
xor
mov
sbb
jecxz
add
aaa
lcall
jp
les
dec
sbb
dec
adcl
jp
shl
shr
mov
mov
cmpsl
js
and
rcl
pop
enter
rcl
mov
ss
mov
outsb
xchg
shlb
mov
pop
outsl
ljmp
pop
popa
idiv
movzbl
lahf
not
movsbl
mov
push
lea
jmp
push
push
push
movl
call
inc
inc
sahf
sub
and
and
push
insb
cwtl
fstps
and
cmpsb
mov
xchg
lods
inc
pop
out
pop
adc
jecxz
xchg
pop
lret
in
icebp
lds
mulb
jge
cmp
cmc
lods
sbb
movsb
adc
pop
out
ds
std
lods
leave
jecxz
push
rorl
pop
xlat
add
push
mov
addl
fisubs
add
xchg
arpl
sti
inc
popf
mov
adc
scas
testl
sti
mov
push
sub
testl
jle
and
popf
mov
cmp
mov
out
aaa
out
jg
push
pushf
mov
pushf
pushf
lea
jmp
cld
mov
sub
mov
sub
pop
je
mov
xor
push
pop
into
movsb
ljmp
mov
or
inc
add
stos
cmp
and
in
jmp
dec
and
adc
fstpl
pusha
hlt
iret
or
cmpsl
jb
inc
mov
xchg
movb
fadd
inc
les
and
mov
pop
movsb
outsl
mov
jae
fildl
test
bound
mov
fdiv
add
dec
nop
mov
xchg
sub
add
jg
jmp
xchg
pop
lea
popa
inc
dec
push
push
fs
ret
in
std
dec
adc
mov
mov
xor
xchg
pop
mov
cmp
xor
fsubrs
and
adc
cmp
sbb
lret
out
loope
test
inc
cltd
xor
mov
dec
sbb
cwtl
cmp
dec
sub
jle
test
adc
dec
imul
nop
lret
icebp
sbb
jne
data16
test
jp
sti
in
mov
pushf
lea
jmp
pusha
lea
je
bswap
shr
pushf
pushl
sub
neg
clc
mov
shr
add
xadd
not
mov
cmp
shr
lea
movzbw
pusha
not
sub
mov
mov
test
stc
jmp
jno
sub
in
pusha
insl
mov
add
js
sub
shrl
sub
enter
mov
sbb
hlt
rol
jecxz
pop
dec
sar
mov
adc
mov
imul
xor
loop
fs
and
shlb
xchg
test
das
xor
cmp
sbb
dec
inc
addl
in
test
repz
push
sub
jbe
fucomp
add
cmp
mov
mov
mov
js
push
dec
andl
and
lods
imul
fildll
das
sbb
adc
jnp
dec
sbb
xorl
jnp
lock
or
jmp
or
popa
cli
mov
outsb
lcall
movsl
mov
xchg
sub
inc
sub
fisubrs
jmp
ljmp
inc
sub
xchg
mov
aas
jge
jmp
xchg
popa
ret
into
gs
shll
push
adc
push
cmp
jno
jnp
cld
cmpl
mov
repz
fbld
mov
repnz
addb
ret
dec
daa
push
ljmp
es
or
gs
add
add
fadd
jns
inc
mov
fsubrp
call
mov
mov
in
into
push
jp
fsubs
mov
inc
cs
call
mov
fdivrp
dec
xchg
adc
xor
int3
stc
faddl
movl
ret
sti
xor
in
and
sti
movsb
push
aaa
adc
ja
rclb
stos
sub
fidivl
inc
lock
xor
sub
xor
push
lock
or
clc
and
repnz
mov
push
je
push
mov
or
xor
push
js
rcrl
jo
add
mov
ret
dec
dec
jae
rcrl
in
mov
mov
or
popa
inc
lret
or
imul
pop
sbb
inc
sahf
hlt
inc
mov
jo
sub
dec
insl
scas
mov
pop
xchg
pop
orl
inc
mov
lea
cmp
adc
fsts
push
in
mov
fidivs
fmull
and
xchg
cs
xchg
stc
sbbl
push
sub
push
fldcw
pop
cmp
bound
bound
dec
lds
push
sub
add
addr16
mov
sbb
dec
int3
leave
mov
addr16
es
rol
or
sub
pushf
mov
hlt
pop
addr16
fs
mov
xor
add
popa
inc
shrl
jnp
ljmp
sbb
push
dec
ja
dec
push
mov
pop
pop
hlt
sub
ljmp
add
xchg
pop
fildll
addb
lock
xor
xor
adc
call
mov
mov
jbe
xchg
test
sarl
push
xor
xchg
popf
ficoml
dec
jno
mov
adc
mov
xchg
sahf
or
mov
push
std
rol
and
fs
movl
jb
popf
popf
adc
jb
fists
enter
rcrb
shll
mov
mov
mov
mov
popa
jmp
fsts
inc
mov
das
fiadds
mull
stc
js
test
pop
xchg
out
das
xchg
bnd
mov
int3
bswap
mov
stc
ljmp
out
nop
insb
jo
jbe
daa
inc
push
imul
xchg
jo
sahf
xor
cltd
sub
fsubs
xorl
cmpsw
jmp
pop
cmp
adc
fcoml
and
out
mov
cmp
dec
dec
add
mov
les
mov
clc
and
mov
jl
mov
jle
add
add
and
rcll
jnp
dec
xor
fistps
das
imul
adc
mov
rcrl
add
pushf
push
movw
lea
jae
clc
pushf
cmp
pusha
call
lea
jne
call
lea
jne
sar
mov
call
push
loope
and
fldl2e
call
ja
in
ss
scas
mov
push
xor
inc
xor
add
and
xor
pop
cld
jp
jo
add
dec
enter
add
xchg
dec
mov
xor
pop
leave
rclb
lret
xor
into
scas
clc
or
xor
shll
std
adc
mov
cwtl
aad
add
lcall
cs
pop
jns
movsb
and
inc
pop
mov
arpl
or
cwtl
xchg
fs
popa
sub
pop
inc
dec
add
dec
stos
pusha
shrl
cmpsb
push
dec
ret
enter
cltd
maxps
jl
lahf
xor
mov
push
xchg
pop
scas
mov
loop
mov
sahf
int3
sbb
hlt
adc
or
dec
pop
xchg
and
pop
ret
enter
nop
ret
xlat
mov
scas
imul
sbb
sub
or
push
cs
and
pop
and
shlb
cmp
lret
lret
push
test
pusha
aaa
fistpl
and
movsl
faddl
sbb
inc
pop
cmpsb
jns
jo
fsts
jecxz
stc
in
add
mov
sbb
cmpsl
hlt
cmp
int
jb
mov
xor
addr16
aaa
test
cmp
pop
into
lcall
fstpt
out
xchg
leave
fwait
in
cltd
xor
cld
adc
test
xchg
dec
pop
inc
sub
cmp
xchg
inc
lcall
and
pop
dec
push
cmp
aam
into
movsl
mov
jge
pop
js
jb
cmpsl
lock
cmp
leave
xor
scas
and
ljmp
dec
outsl
ja
and
imul
mov
in
mov
cmp
jns
mov
pop
iret
test
lods
and
ret
inc
sahf
ljmp
leave
adc
dec
clc
jmp
jae
hlt
fists
imul
std
in
sti
sahf
xchg
idivb
cli
mov
push
pop
mov
pop
inc
mov
iret
add
and
cmp
mov
add
inc
mov
shlb
inc
or
sbb
inc
pusha
jo
loope
mov
sub
int
lea
push
aam
and
mov
push
insl
mov
push
sti
testb
lret
jb
sbb
iret
pushf
pop
mov
jb
ja
and
in
daa
loop
and
or
pop
out
mov
pop
cmpsl
or
insb
inc
mov
dec
adc
inc
dec
and
mov
and
repnz
jo
stc
and
pop
in
loope
lods
gs
in
push
aad
lea
stos
icebp
dec
stos
arpl
xchg
adc
push
sub
fsubrs
aas
mov
jnp
sbb
scas
daa
jmp
mov
lahf
or
in
fstps
mov
jmp
pop
mov
inc
push
lcall
and
inc
adc
ret
daa
mov
out
int
test
pop
jnp
sub
je
inc
xor
add
cwtl
mov
loope
xor
mov
sbb
jbe
mov
inc
mov
cli
jo
dec
add
or
loop
pop
lret
dec
jae
into
fdivs
xchg
popa
cmp
xlat
inc
cmp
sub
popf
mov
ja
mov
dec
jo
inc
and
xchg
add
adc
mov
dec
orb
cmp
pop
sbb
sti
out
xor
dec
dec
xlat
mov
xchg
or
mov
and
sbb
movsb
stc
jmp
test
add
adc
fsts
sub
in
mov
add
shl
push
lock
cltd
dec
jbe
jnp
xor
mov
xor
icebp
ret
pushf
cs
mov
jae
fs
or
lea
movsb
imul
bound
push
repz
inc
in
sarl
ret
mov
std
push
in
in
bswap
xor
and
xor
pop
aad
shrb
jb
mov
and
call
jo
into
inc
repz
out
fs
mov
dec
test
push
and
aas
pop
movsl
out
cmp
jnp
pop
mov
xlat
lcall
mov
or
xchg
dec
fistps
jmp
jecxz
testl
mov
out
cmc
nop
jl
dec
add
inc
sbb
mov
push
jmp
rolb
cmc
jecxz
cs
sbb
jns
jg
and
shlb
scas
test
xchg
mov
out
adc
subb
sub
inc
push
sbb
rcr
cmp
or
movsb
shrb
mov
push
ficoml
movsb
dec
fscale
and
push
ret
mov
dec
test
imul
pop
sbb
ja
or
fdivr
inc
cmp
jnp
add
jp
jle
and
cs
pop
ror
out
test
icebp
and
and
mov
mov
out
mov
jle
and
or
fidivs
in
daa
loope
sub
adc
adc
pop
idiv
orb
in
fst
enter
in
or
jne
mov
xor
sbb
xorb
adc
fs
cmp
or
or
loop
sub
loop
adc
nop
mov
xor
popf
pop
adc
sub
loope
jl
add
repnz
jmp
cmpsl
cltd
lds
test
lea
jb
insl
test
enter
out
and
or
shll
inc
fwait
pop
jno
mov
aad
xchg
adc
addr16
movsb
adc
out
fadds
aam
std
dec
mov
lods
or
jl
cmc
push
sub
jno
dec
or
mov
add
insb
andl
sti
lock
cmp
popf
mov
push
and
xchg
push
pop
add
sarl
add
js
xlat
xor
scas
addb
mov
mov
jne
jp
repz
pop
mov
lea
xchg
out
cli
mov
cmp
mov
test
loope
insb
sub
test
inc
in
sub
mov
enter
loopne
shlb
jecxz
mov
pusha
xor
call
rcll
push
je
cmc
loop
inc
je
dec
push
cmp
ljmp
xchg
and
push
ret
dec
mov
push
ffreep
scas
push
xor
add
xchg
subl
inc
shl
lret
int3
and
cmc
cmc
mov
outsl
insb
mov
andl
push
xchg
adc
add
stc
iret
xlat
ja,pn
aas
sub
jmp
mov
insb
imul
fiaddl
xor
jne
test
arpl
push
jns
loop
and
ss
or
xor
jne
bound
lods
data16
xchg
imul
out
js
adc
call
pop
jo
insb
xorl
out
or
mov
inc
push
fnstenv
push
scas
ja
jae
sahf
push
xor
xlat
push
call
sub
jo
dec
mov
mov
add
std
adc
push
mov
sub
push
iret
out
aad
call
pop
adc
jns
pushf
add
jno
addr16
lcall
and
std
insb
cmp
push
aaa
sbb
xchg
shrb
xor
and
test
hlt
lret
pop
add
jnp
lret
xor
cwtl
test
sbb
mov
adc
js
imul
xor
xchg
add
add
loopne
out
test
mov
xlat
push
cs
out
clc
mov
add
sub
jb
pop
lret
in
xchg
stos
sti
mov
add
cli
cmp
adcb
popa
fstps
dec
iret
xchg
dec
test
pop
or
fnstenv
jb
out
sbb
xor
out
xchg
or
xor
xchg
mov
ds
scas
stos
mov
mov
push
bound
mov
jmp
or
xor
sub
aad
imul
lcall
xchg
fldl
icebp
fdiv
mov
into
int3
cmp
leave
in
jl
dec
xchg
popa
out
jno
xorb
lcall
lods
nop
dec
mov
xor
sub
adc
pop
sub
lods
loope
ret
xchg
aaa
rorb
mov
cmp
fsubrl
aas
aam
pop
insb
jbe
or
cmpsb
xor
jo
mov
gs
inc
add
pusha
loop
testl
sbb
and
adc
inc
pusha
insl
jmp
inc
fld
cmp
sti
jle
or
mov
rcrb
fldz
or
mov
std
cltd
jle
in
lcall
lret
jle
xchg
ret
sar
movsb
sub
inc
pushf
mov
sbb
addr16
sarl
adc
mov
repz
lock
dec
jmp
lods
into
out
inc
iret
cmp
push
fidivrs
adc
sbb
enter
adc
mov
loop
dec
lcall
mov
imul
pop
push
fldl
push
adc
adcl
out
add
sub
notl
in
in
add
xor
adc
arpl
in
out
outsb
add
add
push
ds
pushf
mov
test
mov
daa
dec
xor
enter
insl
mov
mov
mov
pop
mov
cmpsb
cwtl
les
cmp
mov
lcall
nop
mov
shr
or
insl
xchg
adcl
in
mov
jns
arpl
sub
shl
sub
inc
ffree
inc
imul
into
lret
xchg
mov
push
adc
add
adc
dec
bound
jns
xchg
mov
mov
in
sbb
sbb
mov
push
mov
mov
rolb
push
add
je
sbb
cmp
jg
aas
movsl
jbe
push
adc
xor
hlt
xor
repnz
scas
in
into
shr
or
test
sub
sbb
cltd
xlat
and
and
jge
mov
mov
adc
lock
push
in
mov
pop
xor
mov
and
lods
push
jne
mov
es
jle
das
cmp
pop
mov
mov
mov
fistl
push
in
dec
sub
jae
ja
fidivrs
popf
xor
bound
cmpsl
jbe
fdivrl
xchg
sahf
xor
mov
mov
andl
and
bound
dec
mov
cmc
jnp
insl
inc
jno
xchg
and
cli
ret
jb
jo
stos
add
and
adc
ffree
aam
mov
sahf
inc
mov
adc
mov
inc
cmp
jne
lret
and
pop
cld
testb
xor
sahf
rcll
outsb
in
inc
arpl
xor
sub
test
mov
icebp
pushf
scas
jl,pn
lock
and
lret
test
cmpb
push
xchg
fisttps
vminps
cmp
ret
sbb
inc
aaa
stc
inc
adc
ljmp
cmc
mov
outsb
adc
inc
mulb
cmp
inc
sbb
fs
out
jo
sub
ds
mov
or
dec
scas
push
outsb
mov
stc
pop
cvtdq2ps
fimuls
jecxz
dec
int
add
cltd
mov
ret
mov
sbb
inc
xor
popf
mov
sub
clc
adc
xchg
xchg
push
sub
mov
push
mov
mov
xor
js
divl
out
mov
call
pop
pop
sbb
mov
imul
dec
mov
in
insb
ja
cltd
in
lods
sbb
xchg
jge
mov
xchg
xchg
clc
or
xchg
in
insl
sub
push
adc
arpl
mov
shl
data16
dec
scas
cmc
mov
jb
pop
cs
cmp
fs
inc
aad
lea
fwait
mov
imul
shrb
adc
aam
jo
inc
mov
js
nop
imul
push
dec
add
dec
push
pushf
jmp
ret
enter
ljmp
push
gs
ret
movsb
in
push
inc
outsb
mov
out
mov
xor
pop
cmpsl
jp
cmpb
sahf
movsl
push
repz
xor
shll
movb
sbb
dec
outsl
add
xchg
sti
push
and
cli
loope
push
mov
mov
or
lret
xchg
out
adc
in
lock
or
insl
xchg
daa
and
xchg
xchg
mov
pop
fdivr
aam
cmp
das
into
fcom
loopne
xchg
out
mov
sub
pop
push
push
pop
ret
insb
inc
dec
jecxz
jbe
ret
int
dec
jo
sarl
jno
adc
or
add
pop
push
jmp
sub
dec
xchg
jb
xchg
lods
ja
dec
and
sbb
out
loop
cmp
and
mov
xlat
jae
popa
dec
cmp
inc
push
cmpsl
add
fsubp
cmp
pop
in
dec
jmp
push
pop
push
jns
jns
inc
pop
ljmp
popa
das
imul
adc
lock
int3
cmpsb
into
mov
mov
and
adc
insl
inc
push
js
and
pop
mov
fstl
out
cltd
mov
or
sub
mov
test
push
mul
jp
xchg
cmp
imul
add
mov
mov
fs
fnstcw
sub
inc
jg
fsubrp
xchg
push
sbb
mov
cmp
pop
rorb
cmp
bound
cmp
pop
je
pushf
inc
push
sbb
out
stos
mov
outsl
inc
xor
loop,pn
lock
and
mov
dec
in
mov
cwtl
push
dec
sub
jge
outsb
xor
mov
int3
clc
adc
sub
sbb
add
sub
es
mov
jb
repz
xchg
dec
pop
pusha
sarl
cmp
jns
lret
mulb
repz
xchg
mov
scas
jbe
sarl
mov
aad
push
mov
sbb
icebp
xchg
dec
mov
stos
insl
aam
add
cmp
into
xchg
fcomps
loop
mov
xchg
imul
mov
inc
enter
pop
jnp
or
xchg
pop
push
out
add
push
in
insb
dec
jb
insb
subb
push
andb
xor
xor
push
pusha
movsl
sub
mov
push
cmc
add
cwtl
icebp
lea
test
arpl
test
cmp
xor
shrb
jecxz
mov
fcomip
sub
stos
into
fwait
pusha
test
and
push
adc
outsl
dec
jbe
pop
and
movsb
pop
mov
push
rcr
mov
daa
sbb
mov
jmp
call
adc
pop
daa
mov
fisubl
fistpl
jns
xor
test
jne
mov
dec
inc
insb
jb
call
adc
nop
mov
inc
sbb
jg
testb
sbb
ss
dec
cmp
push
dec
mov
and
add
cmp
mov
test
pop
in
into
cmp
div
push
into
sarb
out
dec
sahf
test
addl
and
mov
sub
push
push
inc
xchg
push
pushf
mov
mov
nop
mov
fnstenv
xchg
popf
adc
and
push
and
xor
inc
push
or
xchg
push
lret
loop
jnp
push
dec
add
fidivs
or
inc
dec
sub
sti
add
dec
sarl
pop
sub
lahf
enter
stos
push
aad
notb
xchg
ljmp
sub
dec
popf
mov
das
push
inc
push
stos
mov
mov
andl
pop
rcr
je
or
lods
xor
mov
into
data16
push
jb
icebp
jb
ret
jno
mov
sbb
cmp
cli
fidivl
and
xchg
mov
subl
xor
gs
sub
fdiv
xlat
push
aad
std
mov
mov
and
push
jae
loope
je
xor
xchg
mov
jns
add
mov
in
ljmp
mov
stos
subl
pop
push
cmp
mov
push
push
adc
dec
scas
leave
cmc
fwait
mov
ja
push
nop
mov
inc
push
inc
cmp
lahf
js
jge
mov
aad
cmp
scas
mov
sbb
loop
in
mov
call
ror
mov
push
leave
jl
inc
enter
pop
lret
sbb
imul
jg
push
movsb
in
rorl
mov
js
mov
test
cmpsb
adc
test
jl
or
jne
xchg
jl
jnp
std
pop
jae
sarb
mov
cmp
mov
fcmove
cmp
fsubrs
stos
add
mov
dec
add
pop
in
add
cli
pop
jo
call
ds
test
jnp
mov
aaa
fsubrs
mov
daa
incl
xchg
mov
cmpb
lods
cli
add
rorb
outsb
idiv
and
fimuls
jbe
sar
lods
insl
push
gs
mov
dec
cwtl
jle
sbb
out
and
dec
loopne
pop
cld
in
rol
xchg
lcall
pushl
mov
sar
lods
insb
rcrl
or
jae
notl
int
fdivp
sbb
and
roll
push
add
lret
shl
or
fadds
or
ret
xchg
mov
or
xor
aam
inc
lock
mov
scas
xchg
test
lahf
ret
out
in
call
jl
lret
loope
pop
es
loope
adc
inc
xchg
imul
jb
call
lods
in
adc
frstor
sahf
and
inc
jmp
scas
leave
adc
fwait
mov
mov
int
movsb
jp
aad
xor
or
dec
popa
ljmp
in
jmp
ljmp
sub
mov
dec
xlat
icebp
pusha
mov
adc
cld
or
nop
das
push
imul
cmp
lods
jp
mov
xchg
jo
fldenv
jno
repnz
sbb
or
notl
shlb
jne
add
insl
daa
fstpl
cmp
sbb
imul
aam
adc
cwtl
dec
cmpsb
enter
lret
in
ret
fsubrs
fucomi
mov
lret
and
jnp
push
andl
jbe
mov
sbb
subps
pop
insl
daa
xchg
jl
dec
add
xchg
mov
cmpsb
ja
outsl
cmp
pop
addr16
stc
sbb
shlb
xor
add
push
cmp
mov
lret
jno
cmp
jecxz
into
pop
imul
cmc
hlt
data16
and
aaa
and
sub
sahf
out
cwtl
xchg
inc
es
push
inc
inc
add
jnp
out
leave
repnz
cld
and
adc
aas
or
push
lods
xchg
test
cmp
sbb
jmp
add
xor
in
fdivrs
pushf
dec
inc
mov
push
rcll
sub
mov
test
movsl
test
xor
push
enter
stos
ja
lea
xchg
and
inc
sub
cmp
or
or
cli
add
fwait
or
lock
cmp
lcall
mov
ret
addr16
lahf
pop
mov
addr16
cmp
loop
pop
movsb
in
rolb
aad
ficoml
jns
leave
mov
cmp
push
mov
rcl
cmp
testb
stc
fbstp
mov
pusha
mov
add
mov
shlb
fistpl
fsubrs
fldcw
outsb
test
inc
pop
loope
pop
inc
and
adc
jmp
das
movsb
cmp
in
hlt
xor
jns
jge
jnp
les
clc
mov
or
pop
push
lret
outsl
cwtl
sahf
repz
or
daa
lds
jnp
insb
ljmp
push
scas
je
mov
mov
push
stos
ja
sub
loop
enter
cmc
mov
mov
hlt
push
push
lret
or
dec
and
sub
adc
paddusb
loope
or
aas
in
pop
cmp
sub
adc
push
bnd
daa
sbb
ror
or
lock
dec
jne
subb
call
jp
or
imul
pop
arpl
add
inc
mov
lds
dec
lahf
mov
sub
test
aas
je
sbb
js
andb
cmp
mov
insb
int
inc
jecxz
cmp
pop
pop
mov
or
adc
adc
mov
sbb
jge
mov
repz
add
inc
out
int3
dec
loop
je
jecxz
jns
mov
push
orb
ret
or
repnz
lret
enter
aaa
push
fisttps
out
pop
lock
leave
mov
clc
add
in
push
sub
and
pop
xchg
add
sub
stos
gs
inc
stc
jp
mov
xor
or
mov
cmpps
sbb
mov
inc
sahf
lods
ss
inc
insl
inc
or
xchg
jno
testb
ret
pusha
fistpll
cmp
adc
add
sub
sarl
mov
sub
aam
sahf
lret
and
mov
push
sbb
and
addr16
repnz
push
aad
mov
mov
push
icebp
mov
pop
mov
es
outsl
and
jnp
cmp
int
jge
fisubs
test
call
idivb
dec
sub
lods
mov
cmp
test
xor
dec
cltd
cmp
mov
mov
dec
arpl
fmuls
ja
stc
stos
out
js
std
and
mov
aas
ljmp
xlat
test
std
pop
mov
and
out
into
push
clc
out
into
mov
lret
lahf
cld
stos
ljmp
test
mov
mov
sbb
jmp
dec
pop
xchg
sahf
lods
lret
push
ss
sbb
inc
cmpl
fdivrl
stos
inc
idiv
jo
stc
or
lret
jne
aad
repnz
je
ror
cli
cld
xchg
ret
lcall
sub
out
push
sbb
inc
test
xchg
pop
sbb
xchg
lretw
scas
cmp
pop
add
pop
stc
sbb
ja
or
mov
es
test
addb
mov
arpl
in
xchg
test
or
inc
and
call
push
push
xchg
clc
decl
cmpl
jmp
pusha
pusha
pushf
lea
ja
setge
pop
push
mov
sete
mov
setb
bswap
mov
jmp
das
addr16
outsb
pop
vpaddusb
pop
pop
jo
mov
gs
inc
mov
xchg
dec
inc
add
dec
fmul
pop
movsl
add
push
loop
lahf
jb
testl
dec
adc
push
lods
push
rcll
dec
das
mov
aad
jmp
mov
xchg
sbb
sbb
int3
sar
add
dec
insl
insb
jne
cld
dec
js
xor
jl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
mov
dec
pop
popa
popf
mov
or
pop
mov
repz
mov
rol
fidivs
xchg
jnp
mov
loopne
test
sbb
mov
jge
shll
movl
mov
lret
or
leave
cmp
arpl
mov
jnp
pop
xchg
fucom
jmp
scas
call
lahf
xor
jle
xchg
push
cmp
jbe
repnz
jmp
cmp
fisttps
popa
inc
notb
dec
pop
cwtl
xchg
fstp
adc
aas
push
jge
cltd
cmp
ljmp
jne
push
out
push
popf
pop
xchg
aad
pop
mov
sbb
test
roll
cmp
repnz
stc
sbbl
mov
inc
daa
jnp
mov
ja
std
jecxz
data16
sbb
bound
lahf
leave
add
push
aas
and
shl
inc
test
inc
and
scas
aad
inc
pop
imul
pop
scas
out
cwtl
inc
sub
xor
push
cmp
sub
dec
xchg
nop
and
inc
gs
stos
out
cmp
xor
filds
arpl
fmull
popa
inc
stc
pop
dec
push
jg
ret
push
dec
mov
lds
xchg
mov
lret
in
movsl
ljmp
push
cmp
mov
cmp
into
repnz
data16
dec
mov
cmp
gs
or
inc
or
lret
aas
mov
add
mov
aad
dec
movl
mull
adc
test
cmp
cld
inc
mov
pmuludq
push
fisubl
pusha
sub
pop
bound
mov
fists
pop
inc
xchg
sub
aam
push
fwait
mov
or
fisttpl
pushf
leave
adc
mov
repz
adc
stc
lcall
dec
jecxz
jg
fs
out
jg
fwait
imulb
test
adc
xchg
cmpsb
inc
and
jbe
out
push
push
rolb
xor
adc
aas
clc
inc
arpl
in
sbb
scas
add
push
xchg
jl
fiadds
rcrb
and
xor
pop
cmp
or
pushf
stos
fcmovu
aad
adc
and
lea
je
push
add
movw
stc
movb
pusha
cmp
mov
pushf
call
outsl
jmp
inc
jno
adcb
mov
or
sbb
jmp
iret
xor
sbb
inc
outsl
inc
fldlg2
pop
push
xchg
repz
cmc
mov
add
cmp
fadds
adc
fimull
mov
cmp
sbb
jle
lcall
popa
xor
add
add
divb
outsl
xchg
mov
arpl
pop
mov
xchg
push
popa
inc
inc
addr16
mov
imul
mov
lret
movsb
jo
sbb
jmp
dec
iret
cmp
jbe
fstpl
cmp
mov
adc
add
jmp
rol
cltd
sbb
mov
mov
iret
mov
divl
push
call
add
adc
add
cmp
mov
xor
add
fisttps
inc
inc
xchg
push
out
lahf
clc
adc
mov
push
mov
test
lds
jae
sahf
movl
jge
fs
sbb
andl
cli
push
popa
inc
int
bound
imull
jno
jns
iret
shlb
call
adc
fsubrl
mov
cmpb
out
fidivl
dec
sbb
dec
jmp
and
scas
jae
mov
ror
sarb
pusha
and
sub
xlat
jo
into
lods
pop
adc
jecxz
sub
push
sbb
sub
xor
jp
clc
pop
fdiv
or
jno
adc
movsl
clc
lcall
je
push
lea
lea
pushf
movzbw
movzwl
mov
not
lea
movl
movzbw
pushl
push
mov
pusha
jmp
push
or
add
push
sbbl
idivl
daa
clc
inc
or
icebp
pop
lods
and
jo
push
adc
mov
in
daa
fwait
sahf
pop
xchg
cmpsl
mov
pop
or
inc
add
out
cli
inc
out
jns
movsl
dec
or
mov
mov
popa
movsb
cmpsb
subb
xchg
lret
or
mov
or
jae
out
or
pop
add
scas
mov
insl
stos
lret
stc
push
sbb
lret
movb
ret
jno
call
adc
xchg
push
jne
inc
dec
into
add
jp
hlt
test
sbb
or
and
andl
ja
fnsave
hlt
daa
dec
push
outsl
nop
rcr
and
sti
jbe
fiaddl
insl
cltd
or
add
out
in
sub
mov
pop
push
push
rorl
andl
in
aaa
jg
leave
test
imul
fistpll
lret
pop
outsb
mov
movsl
mov
mov
fmul
in
aam
lock
xchg
mov
ja
add
arpl
lds
hlt
loopne
popa
ficomps
jge
pop
cwtl
pop
sbb
fstpl
rclb
inc
lods
shr
loope
andb
push
cmpsb
sbb
mov
mov
leave
addl
mov
pushf
call
ficoms
je
in
dec
mov
dec
jno
mov
jecxz
data16
stos
int3
test
mov
cmpl
sbb
push
pop
aam
in
jmp
stc
xor
adc
outsl
jle
sbb
lcall
mov
lock
out
mov
jnp
movsb
ja
jne
rorl
mov
mov
cmp
pop
xchg
mov
push
inc
pop
out
add
sub
sbb
scas
cmp
in
pop
ljmp
jo
jbe
xor
pop
pusha
sbb
push
jns
cld
sub
popa
xor
aam
cmpsl
inc
and
mov
push
pop
imul
imul
jbe
push
lods
push
inc
mov
inc
cmpsl
add
jecxz
test
out
sub
jae
into
clc
xor
pop
idivb
aas
out
rcrb
lods
std
test
mulb
lret
scas
push
add
push
or
mul
rclb
mov
push
mov
cltd
arpl
push
or
icebp
pushf
push
outsb
fidivrs
jbe
mov
das
pop
sbb
lret
mov
push
sbb
leave
ljmp
push
cmpl
cmc
call
ja
lock
add
and
js
stos
mov
sar
inc
arpl
adc
inc
std
mov
ds
mov
dec
adc
aam
in
sub
or
add
jge
xor
bound
mov
xchg
test
outsb
fcmovnb
inc
mov
mov
push
xlat
shrb
mov
dec
pop
push
mov
das
add
fcomps
xor
fbstp
sub
fdiv
in
push
sub
inc
sbb
jnp
push
mov
dec
idiv
lods
dec
popf
add
cmp
mov
add
outsl
mov
into
icebp
jecxz
out
aaa
jo
in
int
pop
push
rorb
mov
shlb
imul
mov
and
test
jle
test
dec
dec
cmp
arpl
cmpb
mov
cmp
out
jo
xchg
dec
push
push
and
push
inc
cmp
jle
and
lahf
mov
scas
fldenv
and
sbb
cmp
test
and
cmp
clc
incl
and
popa
inc
mov
flds
push
cmp
jge
in
mov
scas
lcall
inc
inc
ret
lods
inc
and
jp
and
insl
cmp
mov
mov
mov
idiv
jmp
imul
enter
lds
sbb
adc
jnp
sbb
xchg
adc
fldl
push
dec
jl
fwait
clc
xor
lretw
fistpll
and
dec
mov
inc
daa
mov
hlt
cmp
jb
test
testb
cmpsb
inc
bswap
cs
inc
sarl
push
stos
shl
fbld
lret
cmpsl
lcall
add
xor
sub
repnz
jmp
clc
std
push
mov
adc
call
mov
incl
pop
push
or
sbb
mov
insl
inc
popf
fldl2e
jbe
scas
xchg
push
aaa
push
scas
in
or
popa
fwait
enter
lret
pop
incb
in
pushl
movb
movl
pushf
lea
jmp
pusha
jmp
jmp
test
incb
popa
inc
mov
push
push
jns
xlat
adc
jl
mov
mov
mov
push
or
in
jne
test
add
pop
out
into
in
cmp
push
pop
add
xor
push
lock
leave
dec
test
inc
add
sti
iret
and
lock
lahf
orl
cmp
stos
mulb
sub
add
pop
jle
cmpb
loop
sub
jmp
cwtl
mov
int
inc
add
add
jecxz
cmp
in
out
sub
out
sbb
or
dec
inc
call
ljmp
data16
popa
inc
xchg
add
cmp
in
pop
sbb
insb
ljmp
popf
inc
or
add
xchg
add
and
pop
jae
and
rcr
popf
lea
pop
mov
lds
dec
mov
mov
fimull
mov
sbb
sub
leave
mov
movsl
daa
loopne
adc
mov
pop
iret
icebp
lds
in
or
inc
xor
bound
subb
mov
inc
mov
pop
add
into
shlb
ja
rclb
xchg
cwtl
iret
adc
call
into
repz
xchg
popa
jl
and
pusha
inc
adc
mov
cmpl
cs
or
fdivr
fwait
shrb
stos
push
inc
das
mov
sbb
mov
test
out
mov
sub
inc
mov
stos
or
cmpsl
cmp
aaa
iret
or
aaa
inc
insb
cmp
dec
int
ret
inc
jne
ret
dec
test
subb
out
out
pop
pop
jbe
addr16
clc
add
movsb
outsl
mov
stos
mov
add
cmp
pop
or
jmp
xchg
add
mov
jo
pop
lea
jb
pusha
pushf
clc
cmc
cmp
pusha
pushf
pushf
lea
jae
btc
sub
shr
mov
rcr
mov
rcr
bt
stc
adc
mov
cmp
cmc
pusha
test
sub
stc
pushl
test
test
repnz
push
pushf
lea
jne
cmc
shld
mov
pusha
shld
sub
sub
lea
push
call
push
cmp
pushf
lea
jae
pusha
pushf
lea
ja
movzbw
pop
call
and
inc
fdivrp
xor
pop
or
mov
cmc
push
push
fcomip
sub
xor
jb
pop
iret
loopne
push
ja
cmpsb
lods
rclb
inc
mov
jle
mov
mov
jle
xor
imul
fildl
jp
mov
shll
jne
lahf
push
rcr
dec
mov
int3
popf
xchg
repnz
mov
pop
cli
cmp
hlt
pop
lods
add
fnstsw
mov
xor
and
fcmovb
lahf
add
sub
push
adc
xchg
and
cli
aam
mov
in
adc
inc
dec
addr16
dec
lock
icebp
je
pop
into
or
std
pusha
inc
pop
jns
sti
incb
push
leave
or
or
push
sbb
push
and
dec
jnp
test
mov
jae
mov
sahf
inc
call
icebp
push
add
repz
mov
xchg
or
out
popf
ret
ja
lret
mov
inc
incb
aas
jge
sbb
scas
cmp
pop
jns
outsb
imul
push
stc
push
ss
pop
add
xor
shr
sub
xchg
mov
mov
jo
cmp
daa
orl
icebp
test
jmp
mov
mov
pusha
inc
and
test
pop
mov
sarl
mov
movb
test
push
sbb
push
outsl
or
sti
sbb
pop
ret
xor
test
das
cmp
xor
mov
test
lds
cmp
push
mov
sub
rorl
pop
lds
ret
push
sarl
das
cmp
les
inc
cmc
xor
into
popf
mov
xchg
mov
ljmp
xchg
dec
sahf
ret
pop
xor
sti
pusha
inc
xor
into
adc
inc
fs
test
clc
adc
movsb
sub
inc
repz
popa
arpl
lods
adc
mov
enter
push
dec
xadd
pop
mov
divl
push
xor
jne
ljmp
adc
and
repz
mov
pop
mov
icebp
insl
mov
push
adc
mov
mov
pop
mov
jg
cmp
shl
insl
jnp
and
xor
sahf
rorb
add
mov
sti
pusha
inc
inc
arpl
and
sahf
ret
ret
imul
xchg
rcrl
insb
repnz
setb
and
cmp
pushf
mov
cmpsb
fimull
shl
xchg
sti
popf
pop
xchg
mov
or
int3
out
es
cmp
inc
es
mov
int
cmp
mov
ss
out
mov
test
cld
hlt
fsub
add
pop
fldenv
mov
xlat
add
es
mov
ret
sbb
push
mov
insl
movb
sub
fwait
mov
dec
pop
outsl
rcrb
dec
cmp
cli
xchg
sbb
lea
popa
push
mov
jbe
cmp
dec
jb
pop
popa
cmp
aaa
leave
xor
mov
add
test
orl
cmp
mov
mov
iret
xchg
and
mov
mov
push
dec
imul
pop
std
push
adc
daa
inc
shlb
stos
mov
sbb
mov
xor
imul
sub
nop
adc
fnstsw
test
cmp
push
clc
mov
dec
push
fs
pusha
bound
movb
shrb
mov
scas
push
sbb
sub
cltd
sbb
scas
mov
jl
out
movsb
mov
xchg
xchg
mov
out
push
xor
add
jae
in
push
dec
jmp
cli
pusha
inc
push
fcomi
sbb
pushf
ficompl
aas
mov
addr16
pushf
mov
mov
jmp
stc
or
icebp
in
icebp
loop
dec
pop
iret
dec
les
jmp
lock
cmpsb
mov
stos
jbe
js
pusha
xchg
out
xchg
pushf
fistl
sub
pushf
aaa
push
into
mov
arpl
cmp
fsubrs
inc
inc
jg
lret
call
popa
inc
loop
ret
cld
push
fs
jg
jbe
rcr
cmp
shld
sub
call
jmp
inc
xchg
lods
in
and
inc
sbbl
dec
pop
mov
test
idiv
cmp
cli
mov
sti
pop
inc
pop
outsl
jae
add
imul
pop
xchg
mov
loopne
pop
xor
pop
lahf
mov
mov
jnp
lret
out
xlat
cmp
inc
sti
sbb
movsl
rcr
ljmp
mov
sub
mov
mov
movsl
mov
icebp
lcall
mov
out
push
lock
adc
in
enter
iret
lcall
shll
and
jecxz
mov
ss
cwtl
out
xchg
mov
dec
jp
scas
mov
adc
std
cmp
inc
or
popf
mov
ja
aam
out
push
dec
dec
stc
pop
repz
mov
imul
js
push
jnp
shl
adc
cmp
mov
inc
and
jmp
xor
sub
pop
gs
mov
cmp
push
fs
std
fldl
sub
pushf
push
les
out
and
mov
add
dec
jge
stos
pop
and
sub
sbb
pusha
inc
mov
xor
add
dec
jbe
fstpt
pop
mov
xor
dec
lea
xor
je
dec
ret
movl
jno
imul
movsb
mov
dec
xor
cmp
pusha
nop
lods
mov
icebp
or
popf
xor
sub
jne
incl
clc
test
pushf
cmp
test
cmp
pusha
call
clc
push
add
jmp
stc
pushf
stc
bt
ror
cmp
test
cmp
add
pusha
not
pusha
jmp
call
inc
pop
test
hlt
out
xor
insb
jns
std
dec
pusha
clc
jb
enter
xor
in
or
sbb
mov
add
inc
aam
push
jbe
inc
dec
inc
leave
push
mov
iret
roll
hlt
jno
mov
popa
add
int
inc
dec
jl
scas
adcb
mov
fbstp
loopne
stos
divb
sub
jns
inc
popf
int
sbb
test
cmp
cmpsb
adc
pop
ja
mov
jno
in
stc
inc
dec
pop
xchg
popf
cmpsl
mov
sbb
inc
fidivrl
hlt
inc
loopne
push
mov
sbb
xchg
push
jne
loope
nop
jne
pusha
std
jb
cmp
mov
rol
or
xor
repz
dec
inc
push
outsl
rolb
out
leave
pop
mulb
push
jecxz
add
xor
mov
xor
aam
pop
out
roll
jecxz
add
push
mov
call
hlt
jl
int3
adcl
js
fmul
adc
mov
adc
xchg
cwtl
and
and
lret
std
sub
sbb
adc
xchg
fucom
and
sbbb
cmc
jae
push
std
inc
xchg
cmp
pusha
inc
popf
mov
lcall
jb
jmp
adc
fs
push
or
fldcw
jmp
pop
push
mov
xchg
inc
mov
or
mov
popf
stc
dec
pop
pop
arpl
rcll
push
and
pop
test
push
or
outsb
jmp
sub
sub
mov
sbb
xlat
sub
fs
jne
mov
pushf
pushf
jmp
push
lea
call
call
pushf
test
test
neg
bt
call
clc
mov
cmc
pusha
inc
xchg
repnz
add
mov
fucom
add
inc
inc
test
dec
sbb
dec
inc
jo
xchg
loopne
sti
ss
lcall
repz
pop
jo
mov
arpl
orl
pushf
lods
out
cli
outsb
ret
push
ror
and
xor
in
data16
int3
out
movsb
adc
pop
jg
mov
push
aaa
pop
insb
mull
cmc
sahf
test
cli
push
mov
push
push
arpl
inc
inc
xor
loop
imul
pusha
inc
cli
gs
aad
call
addr16
in
fs
ffreep
das
in
cld
mov
jb
je
cmp
pop
pop
stos
and
repnz
fisubrl
repz
stc
loope
jo
cmp
push
incb
pop
jecxz
popf
add
xor
push
aad
mov
or
cmp
andl
and
and
movsb
pop
mov
ljmp
push
pop
outsl
mov
into
xlat
jecxz
pop
imul
call
push
hlt
pusha
inc
jg
aad
xor
leave
fsubl
cmp
enter
jbe
cmp
inc
xchg
fistps
call
daa
lret
arpl
dec
xlat
add
mov
mov
or
add
cmp
mov
xchg
jge
in
inc
leave
dec
je
jmp
inc
xchg
jmp
cmp
popf
jbe
imul
repz
add
push
shlb
icebp
pushw
jmp
stos
pushf
lea
jmp
push
jmp
cmc
mov
sbb
movsbl
bsr
shl
mov
btr
mov
cmp
sub
jmp
pusha
pusha
push
movl
jmp
outsl
insb
xor
cs
insb
add
les
pusha
inc
mov
cwtl
mov
cmp
inc
xchg
adc
sarb
iret
sub
outsb
jecxz
jle
xchg
add
inc
insl
jge
bound
aad
sbb
rol
xchg
dec
xor
lahf
push
add
negl
in
ds
in
in
insb
pushf
sub
in
out
sarb
les
inc
mov
dec
jnp
or
int
aas
das
pop
scas
pop
sarl
pop
cmpsb
mov
repz
add
mov
data16
mov
cmpsl
mov
dec
pop
sub
cmpsl
lret
dec
or
push
sbb
pop
adc
and
cltd
sub
jns
imul
mov
adc
das
je
cmp
sbb
in
sub
pop
mov
and
pop
fldcw
in
push
leave
repnz
dec
gs
sbb
push
dec
lods
inc
mov
lds
pop
dec
shr
jb
sbb
fwait
pop
cmc
jae
mov
sti
or
mov
inc
les
jle
push
je
cmp
cs
mov
lret
hlt
jbe
add
loop
jl
in
je
cmc
xor
arpl
sub
cmpsb
test
imul
divl
inc
dec
jnp
mov
push
push
outsb
inc
lret
push
pop
cmc
adc
mov
add
jno
sbb
mov
shld
add
mov
stc
cmc
mov
bt
stc
push
mov
cmc
cmc
push
add
pushl
jmp
mov
inc
hlt
sbb
inc
mov
popa
lahf
int3
fistl
or
mov
push
inc
xchg
test
mov
imul
mov
sub
inc
arpl
inc
stos
add
rcl
dec
shlb
sbb
pop
push
jne
imul
mov
fsts
cmp
sub
xchg
std
aas
inc
xchg
mov
sti
sbb
stos
fwait
or
sahf
jmp
add
mov
rcrb
icebp
pusha
inc
jb
aas
dec
dec
add
or
addr16
ror
imul
hlt
aad
lock
push
push
stos
and
jnp
daa
clc
mov
push
nop
push
push
lods
leave
call
nop
mov
add
adc
pop
lock
add
pusha
inc
aam
or
nop
scas
push
dec
sbb
pushf
rcll
cmpsb
mov
push
cld
std
and
inc
jnp
mov
pop
int
xchg
cmpsl
pop
mov
movsl
orb
iret
popa
cmp
insl
inc
add
shrl
mov
pop
outsb
jmp
call
stc
shlb
adc
and
inc
jp
shl
sbb
les
js
call
arpl
mov
or
loopne
ffree
lods
add
mov
pop
sub
mov
fisubrl
add
cmc
je
mov
and
and
ds
mov
stc
dec
or
cs
ja
stc
mov
mov
call
push
leave
jmp
pop
fwait
sbb
cli
lods
jge
cmp
fidivs
jp
xchg
inc
sbb
outsl
jp
cmpsb
in
adc
pop
cltd
lret
xor
sbb
mov
lock
inc
mov
push
nop
iret
and
xor
sbb
or
add
movsl
lods
out
add
xchg
or
mov
pop
adc
clc
inc
xchg
xor
push
adc
mov
fstpl
pop
add
xchg
mov
mov
or
idivb
bound
bound
push
mov
xchg
scas
sub
push
out
mov
idiv
iret
mov
and
inc
mov
add
insl
xchg
pop
adcb
scas
mov
int3
out
push
mov
xlat
roll
or
test
std
loop
orb
out
call
aam
push
cmp
cmpsb
shl
sbb
jbe
mov
mov
mov
pop
out
pusha
inc
into
lock
cmpsb
mov
cmpsb
sbb
adc
mov
jno
lcall
stc
mov
cwtl
inc
xchg
add
xchg
sbb
lds
dec
sbb
mov
stos
lret
inc
lock
call
sub
repnz
sub
adc
hlt
jno
mov
dec
pusha
lea
imul
fwait
mov
fs
jb
push
push
cmc
cmpb
movw
push
pusha
lea
jne
bsr
rol
cmp
mov
bt
add
stc
cmc
movzwl
shr
mov
clc
clc
add
pusha
mov
test
call
pushf
movl
push
movw
pusha
lea
jmp
test
jmp
pusha
pusha
lea
je
jmp
push
adc
in
pusha
inc
jmp
pop
ja
int
adc
sub
jle
rolb
mov
outsb
jge
pop
out
or
sub
mov
dec
jge
int
inc
lret
pop
mov
dec
inc
fiaddl
pop
lods
dec
pop
loope
popa
add
aam
add
ffree
out
cmpsb
ljmp
sub
aam
pop
add
sub
into
add
xor
mov
jecxz
stos
leave
xor
mov
fs
pusha
inc
push
jae
test
incb
ja
mov
cmpsb
clc
jbe
mov
stos
aam
insl
pop
xlat
neg
iret
mov
jae
std
jb
stc
fistpl
iret
std
icebp
xchg
arpl
mov
jbe
xor
dec
xchg
mov
or
adc
xchg
cmp
lahf
cmp
push
out
and
adcl
xchg
pushf
push
aam
test
push
ret
test
inc
aad
stos
bound
in
or
fimuls
int3
movups
adcl
repz
rcrl
int
idiv
pusha
pushf
pushf
pushl
ret
adcb
pusha
inc
mov
js
shlb
pop
add
cmpl
fnstenv
cmp
jp
test
sub
lea
sarb
push
or
and
call
repz
push
or
in
add
pop
cld
or
lea
mov
sbb
and
rclb
rol
xor
mov
mov
test
dec
xchg
imul
add
dec
out
shr
dec
push
cltd
popf
enter
cmp
mov
shll
add
subl
inc
in
pusha
inc
inc
jecxz
sbb
repnz
pop
inc
dec
movsl
lds
daa
add
cs
dec
jno
js
xor
incb
inc
jno
cwtl
test
in
jbe
xchg
mov
inc
aam
pop
pop
xchg
cmpsl
xor
push
das
xchg
fcomi
jnp
push
mov
divps
jae
subl
imul
test
cmpsl
fiadds
and
popa
ds
mov
pushf
jmp
or
pusha
pop
lahf
aam
ds
push
push
jge
movsl
xchg
aaa
xor
and
in
aad
movb
movb
movb
lea
jmp
in
nop
pop
jmp
inc
imul
sub
decl
push
xor
mov
popa
mov
xor
das
out
pusha
sarb
cs
push
cmp
int
insl
inc
adc
add
sub
fildl
lea
mov
popf
stc
or
or
mov
add
std
mov
push
mov
or
popf
mov
cmp
outsb
xchg
stos
lcall
sub
xor
pop
jle
aaa
xchg
or
and
dec
std
mov
stos
xchg
inc
sbb
out
mulb
aaa
jbe
clc
repz
lahf
pop
stos
inc
fidivl
lea
call
call
mov
inc
and
nop
mov
dec
or
test
add
push
sbb
int3
push
test
sub
jg
hlt
notb
fwait
jbe
ret
add
mov
data16
dec
push
xlat
jb
sub
jle
lods
jecxz
push
push
shll
pusha
inc
scas
int3
incl
mov
fwait
inc
dec
jle
insl
push
push
or
jg
xor
inc
inc
sbb
nop
push
les
das
cwtl
loope
add
jns
jns
aas
pop
jg
fstpt
das
repnz
cld
mov
sarb
adc
iret
lahf
js
inc
iret
movsl
loope
sub
xor
push
cmp
and
jb
stc
xchg
mov
mov
pusha
jb
test
mov
frstor
and
pusha
pusha
xchg
jmp
call
movsb
inc
mov
pop
je
rcl
adc
cmpl
imul
xor
cmp
pop
mov
mov
in
ret
dec
inc
mov
xlat
jl
out
sahf
sub
stos
lret
cmp
xor
cs
push
out
jo
add
lahf
mov
mov
push
add
fwait
rcrl
sbb
fbld
and
add
or
push
insb
repz
sub
cltd
add
arpl
xchg
rcll
sbb
push
xchg
test
scas
mov
mov
lds
gs
dec
shll
incl
pop
test
mov
jbe
and
sti
rclb
xor
je
adc
xchg
mov
imul
adc
add
clc
stos
lret
pop
push
orl
xchg
dec
leave
rcrl
imul
add
inc
xor
gs
push
xor
stos
cmpsb
cmp
or
sub
mov
data16
out
adc
mov
aam
outsl
int
xchg
mov
pop
subb
inc
and
lea
dec
push
sub
mov
shr
lods
movsl
or
sbbl
inc
insb
mov
xchg
fdivs
cmpsl
sbb
pop
sahf
loope
test
call
adc
cmp
fdivrs
les
adc
iret
dec
int
nop
fdivr
outsb
or
sub
cmpsb
sti
mov
aam
or
cmpsl
add
inc
arpl
pop
iret
push
and
xor
movsl
out
lock
sub
mov
daa
out
lcall
fsub
pusha
inc
std
pop
push
cmpl
cmc
push
adc
mov
lret
call
mov
mov
leave
testb
jne
imulb
or
push
daa
out
inc
sbb
xlat
rcr
lret
repz
xor
sub
call
mov
xchg
pop
and
push
adc
cwtl
pushf
lods
into
sti
imulb
insl
stos
cld
and
lods
sbb
adc
xor
in
cmp
xor
icebp
inc
in
das
cmp
xor
cmp
inc
in
cs
cmp
das
sub
xor
xor
xor
sub
cmp
xor
inc
in
icebp
aas
int3
cmp
and
pusha
inc
mov
push
xchg
test
or
xor
leave
popf
xor
sti
popl
or
xor
mov
repnz
sub
in
xor
or
adc
push
jbe
insl
cmp
xor
add
xchg
ds
pop
add
or
sub
movsb
leave
mov
inc
push
jmp
adc
or
test
jns
sbb
andb
das
push
and
dec
sub
repz
mov
fimuls
push
mov
ret
ds
rolb
iret
loopne
sub
out
sub
jns
mov
fldl
push
icebp
jmp
pop
fisubrs
cmp
adc
pop
shrl
inc
insb
pop
dec
imul
xorb
sbb
xchg
pop
mov
sti
jns
mov
ss
std
imull
sbb
jecxz
mov
popf
repnz
pop
outsl
push
sub
aaa
nop
mov
inc
push
lcall
std
xchg
add
mov
add
xchg
cmp
pusha
inc
lcall
movsb
fstpl
sub
mov
jno
mov
xchg
pop
pop
sbb
je
sub
push
mov
push
mov
insl
mov
push
in
mov
lea
loope
sbb
lods
scas
push
lret
push
mov
fdivr
mov
std
sbb
rcl
ljmp
jmp
imul
arpl
xchg
jge
inc
lods
das
stc
mov
insb
negb
fcoms
loope,pt
aas
cmpsl
and
add
sub
cmc
fndisi(8087
push
push
xchg
leave
jmp
jne
cmpsl
lret
movsl
sti
cmpsl
adc
sbb
mov
in
inc
nop
jecxz
inc
data16
dec
inc
xorl
push
ds
and
add
add
daa
aad
mov
xor
push
mov
jns
sarb
push
sbb
shrl
stos
ljmp
mov
insb
pop
xlat
lret
mov
clc
sbb
int3
outsb
rcl
insl
pop
inc
arpl
adc
loop
dec
xlat
adc
iret
fwait
add
mov
fidivrs
icebp
jb
jbe
cmc
outsb
mov
sti
das
xor
into
les
ja
imul
mov
dec
bswap
mov
jmp
mov
xchg
in
inc
stc
cwtl
lcall
mov
rclb
fstpl
test
mov
lds
in
lock
pop
jbe
jb
or
adc
insb
cltd
test
es
fcoml
add
jg
pusha
inc
or
outsb
scas
leave
filds
dec
push
jbe
add
mov
xchg
popa
sbb
scas
cmp
dec
mov
cmpsl
or
mov
movsl
push
push
lods
ja
clc
mov
pop
or
sub
jne
or
pop
push
lds
mov
xchg
std
stc
cmc
je
cmp
in
add
enter
fstps
in
mov
push
iret
aam
sbb
addr16
lock
xchg
jmp
loop
inc
bound
sarb
lods
lret
loopne
mov
or
negb
inc
pop
jecxz
sub
in
pop
push
test
pop
aad
stc
sbb
outsl
das
jecxz
jne
pop
inc
adc
push
popf
pop
sbb
repz
loope
dec
push
pop
mov
int
sbb
pop
popa
call
ss
mov
in
mov
sbb
add
loope
or
rolb
inc
add
aam
inc
dec
pop
jns
iret
mov
lahf
std
inc
stos
bt
cmc
xor
bt
repnz
pushf
pushf
lea
jne
shl
mov
sub
xor
dec
sub
rcr
add
shl
movsbw
mov
pusha
cmc
push
test
sub
push
call
push
or
pusha
inc
lret
in
add
push
mov
aas
jne
aad
test
jp
push
incb
xchg
mov
test
mov
repz
shlb
sub
repnz
outsb
mov
inc
popf
mov
aaa
mov
xchg
jmp
dec
je
and
popf
mov
roll
icebp
add
cmp
lret
aad
scas
insb
push
fwait
add
xor
mov
nop
movsl
into
adc
cmpsl
lret
jae
fnsave
gs
lea
jae
cmc
mov
bswap
shrd
sbb
rcr
mov
clc
clc
mov
mov
call
add
dec
insl
popa
addr16
imul
addr16
outsl
jbe
add
add
pusha
inc
aad
pop
pop
mov
mull
cmp
loopne
in
push
or
int3
dec
cmpsb
push
into
cmpb
cmp
lcall
push
femms
adc
in
scas
fnsave
mov
push
adc
add
mov
mov
pusha
pusha
filds
jbe
call
cmp
addb
movsb
lods
int3
call
sub
pop
sbb
xchg
jns
adc
xchg
push
sbb
mov
out
xchg
aam
jno
fpatan
sub
pop
popf
mov
adc
ficoml
jp
in
add
jle
loope
inc
imul
imul
mov
enter
lret
push
leave
cli
addr16
jge
mov
pop
into
rorl
int3
scas
sbb
push
mov
push
jns
scas
out
fldl
mov
cwtl
cmp
sbbl
cwtl
popf
mov
xchg
mov
icebp
push
test
call
rorl
dec
arpl
fidivrs
push
mov
pop
inc
rcll
mov
xor
test
inc
jl
pusha
aas
inc
push
pop
in
jmp
dec
inc
push
je
and
jge
addr16
hlt
xchg
lea
ja
pushf
pushl
lea
jb
clc
cmp
clc
test
cmpb
push
pushf
call
inc
in
add
add
add
cvtps2pi
add
add
adc
add
cmp
xor
add
add
or
add
add
add
pop
sub
add
add
add
add
add
subb
add
add
mov
add
add
add
add
pusha
xlat
xor
add
add
or
add
fdiv
sub
add
add
pop
dec
sub
add
add
dec
mov
add
add
add
scas
xor
inc
mov
xor
jbe
daa
add
xor
or
sub
add
add
add
add
or
pusha
inc
int
and
pop
xchg
mov
stc
ljmp
push
popa
xchg
jmp
mov
imul
movsb
dec
aam
test
rcl
mov
sbb
movsl
lods
jp
add
mov
cmp
arpl
popa
cmp
aaa
mov
leave
pop
pop
jl
lea
cmp
insb
or
shlb
les
jo
not
cs
xor
in
add
jp
subl
lea
xor
adc
sub
cli
cltd
pop
mov
mov
pop
or
out
into
fimull
rcll
inc
push
fisttpll
sti
fmull
mov
stos
pop
pushf
lret
mov
cld
stc
sbb
or
pushf
jmp
stos
lret
xchg
mov
test
stos
pop
scas
mov
out
fidivrs
stos
outsb
scas
jp
mov
sub
mov
sub
cltd
stos
dec
lret
jl
mov
pop
popf
mov
jnp
or
sub
sub
in
mov
mov
cli
dec
sti
adc
outsb
mov
jp
xchg
incb
inc
scas
mov
mov
sub
into
out
shlb
aam
test
leave
mov
sbb
sbb
clc
dec
test
rcrb
push
out
iret
in
mov
mov
sbb
loopne
ljmp
pusha
fwait
loopne
cltd
sbb
cmpsl
rcrb
mov
fisubrs
out
mov
aam
enter
and
pop
mov
or
stc
in
jmp
push
imul
ds
rclb
popa
into
loop
shl
shl
mov
je
add
movsl
push
movsb
pusha
movsl
outsl
out
std
mov
test
and
mov
cli
cli
jle
std
mov
into
lock
std
dec
push
outsl
rorb
push
lock
dec
std
dec
and
mov
cmp
rorb
lods
loop
mov
lock
xor
mov
sub
jmp
stos
mov
shlb
and
dec
mov
call
jecxz
xlat
in
jmp
mov
mov
pushf
incl
cs
mov
sub
scas
in
fists
in
jmp
in
out
and
pop
outsl
iret
loopne
test
rolb
jo
stos
stc
mov
andb
add
in
in
mov
ficoms
push
out
stc
call
add
out
dec
repnz
popa
test
aam
jmp
mov
je
insb
hlt
call
pop
loopne
mov
sub
jo
mov
fs
in
insb
push
in
imul
jmp
sbb
fsubrp
pop
cwtl
xor
call
les
imul
sarb
pop
vandnps
and
lods
shlb
lock
std
cmp
lock
mov
aam
jmp
jo
rorb
push
fadd
scas
mov
push
jo
shrb
bound
shlb
fs
mov
push
mov
cwtl
nop
arpl
cmp
shr
xchg
imul
clc
jne
mov
in
shl
aad
loopne
jno
loopne
in
icebp
mov
jbe
out
lods
ljmp
out
add
jl
in
dec
clc
decb
loopne
lahf
in
sar
ffreep
pop
dec
pusha
cs
sub
cmp
jmp
mov
dec
imulb
loopne
cmp
sbb
fsubs
fucomip
shlb
js
out
fs
pop
pusha
pop
js
inc
pop
icebp
cmp
xlat
shlb
outsb
cmp
mov
cs
and
add
pop
adc
in
xor
mov
cli
push
xor
add
std
scas
adc
cli
cmp
cmpsl
imul
aam
sub
test
sbb
outsb
insl
insl
jns
lahf
repnz
push
adc
mov
int3
pop
out
fldt
lods
dec
scas
mov
lahf
test
sahf
mov
mov
push
and
jmp
xor
shlb
cmp
xor
mov
out
inc
insb
int3
sub
mov
and
ret
and
and
jns
outsl
adc
dec
imul
and
mov
push
mov
inc
jg
push
ret
insb
xchg
dec
imul
call
add
int3
inc
jg
outsl
out
bound
imul
lods
or
and
jnp
imul
and
out
jb
dec
imul
adc
imul
and
lock
pop
loop
insb
and
inc
imul
lahf
and
sti
fisubrs
mov
jle
sub
int
clc
dec
jns
add
outsl
jo
push
imul
leave
mov
jo
jmp
xlat
sub
mov
icebp
jno
cmc
mov
cld
loop
out
mov
mov
jno
pop
js
mov
addr16
call
adc
and
rclb
imul
jmp
das
insb
pop
iret
ljmp
aad
mov
jl
insb
push
stc
bound
insb
push
test
cmp
and
insb
int3
out
clc
insb
cmpsl
jecxz
cmpsb
test
insb
fcom
iret
dec
out
inc
cmovae
push
mov
dec
dec
inc
sar
mov
dec
or
andl
jo
in
mov
jo
test
clc
adc
jo
and
jno
imul
scas
cmpsl
jne
jo
data16
jo
jl
icebp
pop
out
dec
xchg
adc
add
mov
lods
lock
ss
push
jno
fmull
scas
cmc
insl
inc
jo
mov
mov
test
fs
lds
enter
call
mov
jge
cmp
push
add
iret
adc
jo
mov
jbe
inc
shl
jo
and
add
iret
nop
mov
jg
jo
in
xchg
or
cli
cld
fidivs
jecxz
fmuls
lock
out
or
shrb
lock
inc
stos
jns
inc
pop
mov
pop
mov
popf
loopne
xchg
imul
fwait
push
sub
fsubrl
mov
jnp
scas
push
call
cmp
insb
shll
pusha
insl
call
sbb
arpl
or
ljmp
push
sub
jne
jecxz
mov
jo
inc
pop
mov
ljmp
leave
pusha
sbb
lcall
mov
pusha
lods
sarl
push
gs
or
shrb
lock
or
loop
push
scas
sbbl
scas
add
movsl
outsb
inc
dec
nop
outsb
inc
sub
cld
outsb
test
mov
cmpsb
sbb
mov
and
aas
push
mov
mov
scas
mov
into
lock
sub
pop
scas
adc
imul
xchg
push
lock
push
push
out
fs
inc
clc
nop
dec
frstor
jp
jo
jo
nop
pmulhw
fwait
sti
sarb
fsubr
lret
xchg
scas
push
and
and
aas
or
add
mov
pop
mov
data16
jecxz
jecxz
jecxz
push
out
or
mov
stos
jle
fidivs
int3
xor
mov
pusha
iret
fwait
lods
cltd
addr16
push
cmpsl
lds
lods
int3
fcompl
mov
mov
movsb
jl
mov
cmp
xchg
cmp
jmp
fldcw
sbb
leave
outsb
lcall
jmp
mov
aam
lds
xchg
and
outsb
fisubs
lahf
sub
cmpsb
outsb
inc
stos
scas
sub
popa
mov
fbstp
or
lret
push
int3
out
xor
out
inc
fisttpl
dec
jmp
lcall
test
sarb
mov
sbb
or
aaa
push
fs
dec
sub
cltd
lcall
pusha
fs
mov
mov
cld
cmp
sbb
scas
pop
jo
int
xchg
sub
and
das
mov
in
jmp
push
shr
fcomps
outsb
and
and
push
inc
nop
mov
xor
and
fsts
les
fistl
scas
lods
rolb
mov
lds
scas
inc
imul
mov
ljmp
in
imul
push
mov
jo
sub
in
lret
push
ljmp
dec
mov
pushf
daa
mov
and
fcmovne
pop
lahf
xlat
sti
mov
jl
into
xlat
pushf
faddl
adc
mov
pop
fisubrs
lahf
mov
das
shlb
loopne
push
xchg
sub
adcb
pusha
rolb
daa
lods
inc
jnp
popa
insb
fs
or
pusha
stos
lods
call
mov
add
fdivl
cmc
pop
scas
mov
stc
mov
lods
in
sub
pusha
and
cmp
adc
mov
sub
fucomip
mov
cmp
jb
xchg
xchg
popf
outsb
pop
loope
and
pusha
shll
out
test
call
add
sbb
leave
scas
and
xchg
outsb
xor
cmp
fs
stos
pop
lret
inc
bound
jge
mov
js
xchg
mov
lea
xlat
ljmp
addr16
cmp
add
push
cmp
xchg
mov
pusha
jl
dec
pusha
sub
movsl
jo
dec
jp
mov
push
fmull
push
addr16
fwait
in
fcompl
mov
mov
test
mov
outsb
jmp
js
orl
aaa
cmpsl
lcall
jecxz
movl
mov
scas
stos
add
sbb
addr16
scas
clc
adc
or
and
sub
mov
lahf
and
inc
xchg
sub
mov
sub
popa
jl
out
ljmp
push
jmp
out
pop
imul
pop
adc
pop
xor
fs
in
insb
sub
sbb
andb
fidivrs
pop
mov
pop
mov
movsb
mov
pmaxub
cmp
mov
clc
call
push
cmp
sub
or
sbb
stos
out
jmp
cmp
scas
jmp
out
enter
sbb
push
lret
cmp
pop
jecxz
pop
fisubl
inc
push
fmuls
pop
push
bound
test
xchg
mov
cmp
out
test
lret
mov
out
pop
jae
dec
jle
sti
jg
sub
mov
push
pop
or
pop
movsl
int
fdivs
sub
cmpsl
scas
out
imul
in
jmp
lcall
xor
push
xchg
mov
das
xchg
jmp
mov
xchg
pop
lods
sub
dec
fdivrp
sbb
inc
or
orl
or
dec
shl
push
mov
xor
aas
stos
pop
cwtl
mov
xchg
int3
push
dec
fstpt
ja
scas
and
bound
loopne
fs
jmp
or
jp
lods
add
and
ljmp
insb
fwait
dec
rorb
out
mov
jle
and
test
pop
mov
int
dec
mov
loopne
push
pushf
jge
mov
xchg
jmp
cld
or
dec
in
in
into
jbe
cmpsb
mov
sub
jge
xchg
test
out
pop
push
pop
push
es
push
mov
push
insl
dec
int
frstor
loopne
mov
xlat
adc
call
pushf
fneni(8087
mov
dec
pop
sbb
rep
or
call
xor
or
pop
push
sahf
lret
jecxz
mov
dec
movsl
cmpsb
iret
outsb
nop
and
out
or
add
push
movsl
push
les
loop
xchg
nop
mov
insb
loop
stc
xlat
rolb
out
sub
xchg
out
mov
mov
ja
mov
sub
dec
andl
jle
test
cmp
int
pop
jle
in
mov
and
lret
iret
movsl
movsb
dec
cmp
pop
enter
stos
mov
sbb
mov
loopew
icebp
jno
adc
in
or
jb
ja
leave
gs
jmp
pop
or
stos
cmpsb
fcmovnb
das
dec
xor
mov
jb
mov
jge
lcall
jnp
jnp
stos
add
scas
insl
inc
es
push
and
lcall
fs
mov
insl
ja
add
fstl
jne
mov
out
inc
or
fs
pop
lods
out
flds
and
outsl
lods
adc
and
mov
das
cltd
cmp
dec
pusha
insl
jmp
or
outsb
jp
mov
aas
fwait
mov
push
sub
or
jg
push
cmpsl
fs
push
aas
and
push
lret
into
test
scas
movsb
pusha
in
adc
mov
cmp
push
inc
lods
push
jecxz
cmp
lret
outsb
sahf
imul
or
cmpsl
sarl
mov
addr16
adc
lds
push
and
mov
js,pn
rcrl
shl
sub
sti
sbb
sub
pop
loop
add
jmp
sbb
inc
sub
imul
rorl
stos
mov
pop
dec
and
sub
mov
aas
pop
push
movsl
out
scas
les
test
and
lcall
push
dec
iret
jp
stos
loopne
mov
xor
xchg
adc
out
dec
loope
sti
adc
rclb
sar
cli
jmp
bnd
xchg
cmp
mov
xor
repz
mov
fisubs
xchg
sti
lret
lods
sbb
or
adc
das
nop
and
mov
xor
out
cmpsl
out
mov
sbb
repnz
stos
jo
insb
xchg
lods
out
fs
ljmp
push
pop
sahf
sbb
scas
data16
pop
outsb
lretw
mov
insl
sub
icebp
adc
lods
xor
aas
inc
push
cmp
xchg
fisubs
push
scas
and
stos
test
out
stos
enter
test
stos
push
bound
call
xor
movsl
pop
iret
push
and
push
or
insb
sub
cmp
lods
gs
rcrl
das
jmp
pop
sub
dec
ds
scas
or
imul
pop
add
pusha
loopne
dec
pusha
xor
in
enter
dec
dec
push
or
divl
or
push
pop
dec
scas
mov
jmp
sub
movsl
push
xchg
push
call
in
das
sub
int
out
cmpsl
cmp
inc
enter
sub
cmpsb
in
int3
in
fildll
and
add
in
mov
daa
and
mov
clc
add
out
sub
jp
das
mov
stos
inc
jmp
psraw
sub
push
cmp
sub
leave
das
jp
sub
seta
add
jmp
pusha
loopne
and
out
scas
cmp
sub
and
lea
dec
sub
lock
mov
inc
pop
or
in
mov
push
call
mov
fldz
mov
daa
popf
jl
enter
mov
xor
xchg
pop
jp
ljmp
cs
dec
dec
nop
jle
rorb
outsl
or
insb
sub
or
inc
addr16
addr16
lock
sub
stos
movsl
pop
cmpb
dec
aam
push
or
inc
sti
and
into
call
xchg
imul
push
arpl
dec
addr16
in
ljmp
cmp
mov
mov
aam
mov
or
lea
inc
mov
scas
out
daa
pop
mov
jg
mov
mov
mov
push
fsubrp
fldt
sub
or
lcall
pop
ror
int3
int
pop
sub
cmpl
movsl
daa
jg
leave
jle
fs
dec
and
test
iret
fldenv
push
inc
mov
cmp
movsb
and
loopne
in
sub
lret
scas
cld
iret
call
iret
fsubl
cltd
outsb
add
sbb
arpl
push
fcmovnb
andl
inc
inc
int3
out
pushf
adc
inc
nop
iret
mov
into
outsl
insb
inc
xchg
push
sub
fisubl
outsl
pop
movsl
lret
inc
push
or
cmpl
or
ffreep
or
add
xor
stos
jmp
cmpsb
call
pop
in
insb
dec
int
xchg
add
test
push
test
or
clc
add
mov
les
call
call
dec
inc
es
xchg
lret
stos
jnp
out
mov
aaa
or
nop
mov
out
scas
rclb
pop
lods
mov
movsb
ffreep
mov
clc
mov
xchg
inc
scas
mov
outsl
jmp
int
out
and
mov
call
fcmovnbe
xor
outsl
jo
outsb
aad
out
dec
xlat
or
push
dec
push
mov
sub
mov
sbb
fimuls
into
xorl
mov
in
adc
inc
scas
repz
push
mov
lret
add
je
fsubrl
mov
push
jmp
inc
pop
jmp
pushl
popl
pushf
pushf
pushl
lea
jmp
cmc
cmc
bt
shr
movb
lea
je
mov
pushf
call
mov
lea
mov
lea
mov
movsbw
pushl
popl
jmp
xor
neg
bsr
lea
cmc
bswap
clc
bswap
or
rol
lea
pusha
pushf
pushf
cmc
sub
push
lea
jmp
cmp
call
movzbw
bswap
mov
movsbl
mov
dec
pushl
popl
xchg
xchg
movl
lea
push
mov
lea
inc
rol
bsr
rcl
bsf
xor
lea
bswap
not
lea
call
lea
pushf
bt
stc
sub
push
mov
pushf
lea
jmp
mov
pushf
mov
lea
jmp
xchg
jmp
not
call
jmp
jmp
lea
push
not
mov
lea
bswap
not
push
movzbw
pushl
call
jmp
mov
jmp
pusha
mov
mov
mov
call
mov
mov
pusha
movb
lea
jmp
mov
pushf
lea
jo
push
movw
mov
push
push
push
pusha
lea
jmp
pusha
pusha
mov
repz
popl
call
shl
mov
cmc
cmp
test
add
pusha
jmp
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
call
mov
movl
push
lea
jmp
movb
pushf
popl
push
pushl
popl
movb
movb
pushl
pushf
lea
jmp
sub
mov
call
mov
pusha
movw
pushf
popl
pusha
pushl
popl
push
lea
jmp
lea
mov
pusha
call
movsbw
pushf
stc
stc
mov
not
cmc
rcr
sar
mov
stc
sub
push
shl
mov
mov
pusha
push
call
movsbw
call
bsr
jmp
jmp
push
inc
test
sub
movb
jmp
mov
pusha
bt
pusha
sub
call
call
add
pushf
mov
push
push
push
mov
push
pushf
pushl
movb
lea
jmp
pushl
pushf
jmp
test
clc
pusha
xor
jmp
pushf
lea
ja
lahf
cwtl
mov
sar
jmp
pusha
pushf
pushf
popl
push
jmp
mov
movl
pushf
push
mov
pushl
popl
lea
jg
push
dec
mov
mov
jmp
movzbw
jmp
not
pusha
mov
movzbl
call
inc
lea
jae
decl
jmp
mov
mov
xchg
pushf
pushl
popl
dec
xchg
not
lea
movl
pushf
mov
lea
jno
lea
inc
bswap
movzbw
shrd
xor
bt
not
cmp
pushf
bswap
adc
pop
and
mov
jmp
sub
pusha
add
pushl
call
sub
cltd
rcl
mov
mov
rcl
inc
mov
stc
pushf
add
mov
mov
mov
pusha
pusha
pushl
lea
jmp
push
pusha
mov
pusha
call
jmp
jmp
shl
clc
xor
mov
add
adc
adc
rcr
mov
stc
sub
stc
shl
pusha
lea
jg
push
mov
movb
pushf
jmp
jmp
lea
jae
pushf
pusha
pushf
pushf
pushl
popl
pushf
mov
pushf
pushf
lea
jmp
call
ror
pusha
mov
call
mov
call
xchg
push
inc
not
jmp
repz
popl
jmp
movb
mov
movb
lea
jmp
push
mov
pushf
push
push
pushf
lea
jmp
pushf
popl
pushf
jmp
mov
not
lea
pop
inc
sub
inc
or
xor
mov
cmp
or
bswap
call
call
movb
jmp
call
pushl
popl
pushf
pushf
pushf
lea
jmp
call
jmp
mov
pushf
mov
lea
jmp
inc
bsr
cmp
xor
rol
rcl
lea
bswap
bts
lea
call
pushl
pushf
popl
movw
push
pushf
pushl
popl
pushf
lea
jmp
mov
mov
jmp
call
mov
mov
push
mov
movl
pushf
pushl
ret
mov
jmp
push
pushf
call
aad
aaa
movzbw
aad
mov
add
mov
pushf
mov
stc
not
pusha
not
cmp
jmp
das
shl
or
mov
test
test
bt
sub
push
add
lea
jae
push
pusha
pushl
pushf
popl
pushl
jmp
sub
push
mov
pushl
lea
jmp
pushf
popl
push
pushl
popl
pushf
lea
jmp
bt
mov
call
and
mov
rcl
sub
stc
mov
rol
mov
cmp
cmp
add
stc
cmc
bt
shld
push
lea
jge
mov
js
pushf
pushf
push
lea
jns
popl
push
pushl
pusha
pushf
lea
jmp
movb
pushf
push
repz
popl
mov
pushl
push
jmp
mov
push
push
mov
movw
mov
pushl
pushf
lea
jo
push
dec
push
mov
lea
not
push
movzbw
bswap
call
push
lea
mov
mov
call
jmp
mov
call
rcr
mov
pusha
test
test
sub
call
mov
pusha
mov
pushf
call
and
movzbl
clc
stc
clc
cmc
xor
pushf
inc
pushf
bt
ror
test
pushf
sub
movb
pushf
not
pusha
pushf
mov
xor
test
call
mov
pushf
lea
jmp
pushl
popl
push
lea
jmp
bts
shld
aam
neg
mov
stc
bt
add
call
inc
bswap
and
xor
btc
bswap
cmc
lea
cmc
bt
sub
pusha
pushf
lea
jmp
mov
pushl
pushl
call
pushl
popl
mov
lea
jmp
sar
call
mov
jmp
jmp
call
pusha
repz
popl
pusha
jmp
push
push
movb
pushl
popl
push
movl
pushl
pushl
lea
jmp
pusha
mov
jmp
cmp
not
bt
stc
xor
pushf
clc
add
movb
call
pushf
popl
pushl
push
jmp
clc
pushl
popf
movb
pushf
pushf
mov
lea
jmp
movsbl
movsbl
inc
call
stc
test
push
sub
jmp
rol
shr
sub
shl
mov
push
mov
jmp
bswap
movsbw
aaa
das
mov
stc
jmp
repz
popl
call
push
mov
jmp
movb
mov
pushf
mov
call
mov
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
seta
not
pushf
inc
bswap
xor
shl
sub
cmp
inc
bswap
ror
lea
bsr
cmc
sub
sub
or
sbb
rol
mov
add
mov
jmp
mov
dec
bswap
lea
xchg
inc
not
xchg
pushl
mov
not
dec
xchg
xchg
movzbw
mov
setae
pop
mov
dec
mov
push
pushf
pushf
movsbw
pushl
popl
push
dec
dec
pushf
movl
mov
pop
mov
call
movl
mov
mov
mov
pushl
ret
cmp
add
pushl
call
push
mov
inc
mov
inc
pushl
inc
xchg
push
jmp
jmp
jmp
pushf
movw
movw
pushf
repz
popl
mov
mov
push
mov
push
call
sub
pusha
pushf
lea
jmp
mov
mov
movb
lea
jmp
xadd
sub
setne
mov
bts
xor
bsf
seto
sbb
movsbw
add
adc
xor
rcl
btc
stc
neg
movsbw
shl
bts
shl
xor
stc
movzbw
call
movzbl
inc
mov
pusha
jmp
movsbw
pushl
popl
jmp
jmp
pusha
pushl
mov
push
rep
lea
neg
xadd
sar
mov
neg
bt
push
mov
pushf
pushf
pushl
popf
pushf
lea
jmp
xchg
call
call
push
not
call
inc
stc
cmc
ror
call
pushf
pushf
repz
popl
mov
jmp
shr
pusha
mov
call
pusha
mov
push
pushf
mov
pushf
lea
jmp
aaa
jmp
pushl
popl
pushf
pushf
lea
jmp
push
cbtw
cmp
cmc
cwtl
jmp
sub
jmp
inc
inc
xor
shrd
cmc
btc
movzbl
bswap
cmc
pushl
lea
pusha
bt
clc
movb
sub
pushf
movb
push
lea
jmp
mov
pushl
inc
inc
bt
xor
xor
clc
bswap
cmp
cmc
lea
pushl
push
pushf
sub
pusha
lea
jmp
call
test
cmp
sub
pushf
push
pusha
pushf
lea
jmp
push
mov
pusha
mov
dec
mov
call
pushf
popl
jmp
jmp
sbb
stc
bsf
movzww
cmp
pushf
clc
mov
add
clc
pusha
push
rol
bt
clc
clc
pushf
neg
stc
stc
stc
jmp
movzbl
bswap
pushl
popl
movsbw
lea
pushf
movl
inc
mov
push
inc
adc
call
test
rcr
setbe
mov
movzbw
bts
pop
daa
or
pop
bt
daa
setg
aam
pop
push
mov
push
and
shrd
mov
xadd
shrd
mov
rcr
bswap
mov
shrd
mov
bswap
adc
neg
mov
sar
mov
clc
pushl
popf
pushl
pushf
pushf
mov
pushl
ret
mov
dec
push
movsbw
lea
push
xchg
not
jmp
mov
push
call
xadd
pusha
lea
mov
neg
shrd
movzbw
mov
cmc
movl
add
pusha
call
pushf
mov
mov
pusha
jmp
cmpl
call
lea
cpuid
stc
pusha
sub
pusha
pushl
pushf
jmp
call
pushf
movb
mov
pushf
pushf
pushf
popl
mov
pushf
pushl
popl
pushf
lea
jmp
shrd
rcl
mov
bswap
not
call
push
jmp
add
pushf
mov
jmp
pusha
pushf
popl
movb
call
pushf
call
movl
jmp
cmc
shr
pushf
movb
mov
mov
jmp
inc
movsbw
shl
xor
pushl
movzbw
dec
bswap
bts
stc
lea
jmp
mov
jmp
mov
lea
movsbw
call
bt
mov
sbb
ror
shl
shl
mov
stc
push
test
test
sub
jmp
call
mov
pushf
movb
jmp
pusha
pushf
mov
jmp
mov
movb
lea
jmp
jmp
movb
lea
jne
inc
mov
clc
and
cmp
cmp
jmp
pushf
movw
jmp
pusha
pushf
pusha
mov
call
pushf
decl
jmp
push
jmp
push
pushf
repz
popl
pushf
pushl
movb
pushf
mov
pusha
mov
pushf
mov
mov
jmp
bt
movsbl
add
xadd
bswap
shld
shrd
mov
cmc
btc
btr
shld
sub
not
cmc
cmc
ror
rcl
rcr
rcl
pusha
sub
bswap
cmc
bts
push
ror
btr
pushf
sbb
sub
shld
btr
sub
neg
bt
movzbl
sub
stc
shl
mov
stc
cmp
add
clc
test
add
pushf
jmp
call
sub
btc
mov
sbb
ror
call
mov
pushl
mov
pushf
pusha
call
clc
push
inc
sar
mov
pushl
dec
mov
pusha
bt
add
push
mov
pushf
pushf
lea
jmp
shr
mov
ja
pushf
test
clc
sub
pusha
mov
mov
push
lea
jmp
call
mov
jmp
divl
call
movsbw
push
dec
or
rcr
sbb
bts
and
shr
shl
xor
mov
pusha
clc
jmp
call
pushl
popl
pushf
mov
pusha
lea
jmp
pusha
pushl
popl
pushl
push
pushf
mov
lea
jmp
dec
push
inc
inc
clc
or
xor
clc
sar
bswap
bswap
rol
cmc
stc
push
lea
call
call
movw
repz
popl
pusha
mov
call
lea
js
rep
shld
lea
xchg
pop
cld
stc
pop
test
push
pushl
popf
pushf
pushf
pushf
lea
jmp
pushl
push
mov
pushl
popl
movw
pushl
movb
movb
lea
jmp
sub
call
pushf
inc
inc
movsbw
test
xor
rcr
bswap
btc
lea
pushf
stc
jmp
cmp
sub
clc
stc
cmp
and
movb
mov
call
pusha
call
mov
call
push
pushf
popl
call
adc
mov
rcl
setne
btr
bsf
add
movsbl
cmp
pusha
and
xor
add
and
pushf
pusha
mov
bt
shl
pushl
shr
bt
stc
mov
stc
or
test
mov
jmp
shld
neg
aad
lahf
mov
rol
xor
sub
mov
shl
mov
bt
clc
add
pusha
shrd
pushf
push
movb
mov
lea
je
pusha
pushf
popl
movb
jmp
cmc
sub
cmc
jmp
pushf
lea
jne
and
clc
pushf
xorb
lea
push
pop
mov
pop
pusha
pushf
mov
lea
jmp
call
pop
mov
movzbw
inc
pushl
popl
bswap
movl
call
push
pusha
jmp
pushf
jmp
pushl
popl
mov
mov
pushl
lea
jmp
push
pushf
pushl
popl
pushf
lea
jmp
push
sub
movb
cmp
sub
jmp
push
pushf
popl
push
call
mov
pushf
not
jmp
jmp
push
pushl
popl
movb
lea
jmp
pushf
pushf
dec
bt
cmc
ror
cmc
neg
cmc
stc
bt
sub
call
not
mov
call
bts
push
mov
push
pusha
call
mov
pushl
lea
jmp
pusha
pushf
popl
jmp
mov
stc
pushf
sub
clc
shl
pusha
call
bt
sub
push
pusha
push
lea
jmp
mov
push
mov
movsbl
mov
xchg
mov
xchg
mov
jmp
mov
clc
bt
cmc
cmc
add
push
pushl
inc
pushf
pushl
mov
mov
pushf
pushf
pushf
pusha
lea
jmp
mov
pushf
pusha
lea
jmp
pushf
popl
pushf
call
mov
pushf
pushl
pushl
ret
movw
jmp
xor
push
pushl
call
pusha
repz
popl
pushf
mov
movw
pushl
push
mov
call
jmp
mov
pushf
pushf
mov
mov
pusha
jmp
sbb
mov
ror
inc
mov
add
not
mov
call
inc
jmp
call
jmp
stc
sub
pushf
mov
push
lea
jmp
lea
call
push
clc
add
jmp
call
pushf
bswap
mov
dec
inc
xchg
mov
lea
movzbl
mov
jmp
add
push
mov
pusha
pushf
pushl
pushl
lea
jmp
mov
pushf
pushf
mov
pushf
mov
pushl
movw
mov
mov
push
xchg
jmp
movzbw
push
inc
jmp
bswap
mov
movzbw
pushf
lea
xchg
pusha
not
bswap
mov
inc
push
bswap
mov
lea
bswap
lea
jl
pushl
xchg
push
pusha
mov
pusha
inc
xor
dec
jmp
pushf
popl
pusha
pushf
movb
pushl
popl
pushf
mov
push
pushl
lea
jmp
mov
call
pushf
mov
mov
push
pusha
pushl
lea
jmp
call
adc
stc
rcr
xor
sar
ror
rcl
bswap
rcr
lea
jmp
test
bt
sub
pusha
pushf
lea
jmp
mov
jmp
mov
bswap
mov
mov
movzbl
xchg
mov
call
bswap
xchg
bswap
cltd
mov
cwtl
push
mov
pusha
call
movl
mov
mov
mov
pushf
lea
jmp
pushf
add
movb
call
call
mov
call
cmc
sub
pushf
lea
jmp
call
neg
bt
sbb
bsf
mov
bt
add
pushf
lea
jmp
mov
pusha
mov
lea
jmp
pushf
xchg
movzbw
pop
mov
jmp
mov
pusha
pusha
pushf
movw
mov
pushf
movb
jmp
lea
pusha
jmp
pushl
call
pushf
mov
push
pusha
mov
lea
jmp
jmp
mov
jmp
pushf
popl
pushf
jmp
call
mov
push
mov
lea
pushf
mov
pusha
movb
pushf
lea
jmp
pushl
jmp
pusha
pushl
mov
pushf
call
pushf
inc
xchg
inc
jmp
not
inc
jmp
scas
dec
int
push
inc
int
cwtl
popa
int
and
int
mov
int
cmp
int
ret
lret
cmovs
lret
xor
lret
jnp
int
int
int
lock
int
in
pop
int
int
int
mov
int
xchg
inc
int
push
aas
int
inc
cmp
int
rcrb
push
gs
add
lret
dec
int
pushf
pop
int
mov
pop
int
mov
push
int
rcrb
es
int
aas
aas
int
adc
lret
push
gs
push
aas
int
ja
int
scas
dec
int
push
cmp
int
jb
int
ret
lret
inc
cmp
int
scas
dec
int
and
int
in
pop
int
cwtl
popa
int
dec
pop
int
pushf
pop
int
popl
lret
adc
lret
adc
lret
ja
int
mov
int
test
lret
add
lret
ret
lret
push
arpl
lret
pushf
pop
int
adc
lret
movl
lret
push
cmp
int
xchg
inc
int
inc
cmp
int
lock
int
mov
inc
int
adc
dec
int
dec
inc
int
into
inc
int
push
dec
int
inc
cmp
int
es
int
sub
lret
push
gs
push
gs
loope
int
add
lret
and
int
movl
lret
mov
int
lock
int
mov
int
scas
dec
int
movl
lret
dec
int
push
dec
int
dec
inc
int
dec
pop
int
dec
pop
int
add
lret
loope
int
xor
lret
rcrb
pushf
pop
int
test
lret
and
int
jb
int
int
int
push
aas
int
sub
lret
mov
dec
int
and
lret
push
arpl
lret
and
lret
in
pop
int
sub
lret
into
inc
int
mov
int
adc
lret
adc
inc
int
cmovs
lret
sbb
lret
mov
lret
sbb
lret
loope
int
loope
int
adc
pop
int
mov
pop
int
adc
pop
int
jb
int
push
cmp
int
sbb
lret
push
inc
int
rcrb
fstpl
lret
pushf
pop
int
ja
int
int
aas
aas
int
dec
inc
int
ja
int
lock
int
jge
int
and
int
sbb
lret
dec
inc
int
adc
aas
int
push
aas
int
dec
inc
int
fstpl
lret
push
aas
int
mov
int
push
inc
int
scas
dec
int
dec
aas
int
pushf
pop
int
scas
dec
int
dec
inc
int
push
dec
int
push
inc
int
adc
lret
xchg
inc
int
jb
int
jge
int
push
dec
int
xor
lret
add
lret
dec
inc
int
int
dec
pop
int
sub
lret
int
int
mov
lret
adc
pop
int
add
lret
pushf
pop
int
push
cmp
int
push
aas
int
pushf
pop
int
adc
int
push
pop
int
push
arpl
lret
ret
lret
adc
int
push
pop
int
into
inc
int
xlat
gs
adc
int
push
pop
int
test
lret
mov
popa
int
push
pop
int
dec
aas
int
dec
inc
int
adc
int
push
pop
int
xlat
gs
push
dec
int
adc
int
push
pop
int
movsl
cmp
lret
popa
inc
int
adc
int
push
pop
int
popl
lret
movsl
cmp
lret
adc
int
push
pop
int
into
inc
int
movl
lret
push
pop
int
popa
inc
int
popl
lret
adc
int
push
pop
int
dec
inc
int
popa
inc
int
adc
int
push
pop
int
push
gs
cwtl
popa
int
adc
int
push
pop
int
int
int
add
lret
adc
int
push
pop
int
push
cmp
int
adc
int
push
pop
int
jnp
int
jge
int
adc
int
push
pop
int
cwtl
popa
int
cmp
int
adc
int
push
pop
int
and
lret
mov
xor
inc
inc
and
add
add
movsbw
lea
push
mov
mov
not
lea
pushf
not
inc
call
push
mov
pushf
pushl
mov
lea
jmp
pushf
repz
popl
jmp
mov
call
pushf
jmp
jmp
call
call
shr
aad
pusha
movzww
mov
test
add
cmc
stc
rol
pusha
test
pushl
cmp
neg
mov
xor
test
add
mov
cmp
pushf
clc
cwtl
bt
sub
cmc
sub
pushl
pushf
call
rcl
add
mov
pusha
movw
xor
cmc
call
add
bswap
shrd
lea
call
inc
pushf
shld
xor
movzbl
xor
stc
sbb
bswap
lea
call
sar
cmc
neg
cmp
mov
stc
call
call
jmp
mov
inc
mov
push
lea
xchg
pushf
mov
lea
call
pusha
mov
inc
jmp
mov
call
mov
mov
push
movb
lea
jmp
call
add
add
push
pushl
call
bswap
bsr
movsbw
mov
neg
bsr
or
xor
push
call
movzbw
mov
push
sub
movb
pushf
jmp
bt
sub
pushf
lea
jmp
pusha
mov
mov
movw
lea
jmp
pushf
jmp
mov
mov
dec
bswap
jmp
pushf
call
lea
jno
push
mov
pushf
push
jmp
mov
pushf
pusha
pushf
mov
mov
movw
mov
pushf
pushl
jmp
mov
pushl
pushf
pushl
xchg
jmp
inc
and
xor
bsr
bswap
neg
pushl
lea
cmc
pushf
cmp
cmp
sub
push
movl
lea
jmp
lea
jne
pushf
mov
pushf
pushf
popl
jmp
mov
pusha
inc
inc
sar
push
lea
xor
movsbw
bswap
shr
lea
jmp
push
mov
pusha
mov
pushf
push
lea
jmp
inc
not
xor
or
shld
movzbw
bswap
shl
rcl
sar
not
lea
pusha
jmp
or
rcr
xor
cmc
cmc
bswap
add
pusha
shrd
not
lea
test
movl
test
stc
sub
push
movb
pushf
lea
jmp
lea
clc
jmp
jmp
pop
mov
pop
inc
inc
xor
sbb
bswap
bswap
bsf
rcl
movzbw
mov
clc
test
sub
pushf
movl
lea
jmp
pushl
call
mov
mov
pushf
pushf
push
lea
jmp
pusha
lea
mov
mov
pushf
not
bswap
mov
pushf
mov
cld
push
pushl
jmp
call
adc
mov
test
stc
add
pushf
push
mov
lea
jmp
inc
stc
stc
movsbw
lea
lea
ror
shl
movzbw
not
ror
rcl
test
xor
bt
movzbl
stc
pusha
clc
mov
cmc
cmc
bt
or
mov
lea
je
jmp
push
pushf
mov
lea
jg
pushf
mov
mov
push
pushf
call
pushf
call
push
xor
and
pop
neg
bswap
add
rcr
btc
lea
pushf
clc
stc
sub
pusha
pusha
pushf
lea
jmp
lea
movzbw
setnp
daa
sub
ror
and
cwtl
aad
lea
shl
and
shld
cmc
sub
jmp
jmp
lea
jne
pushf
mov
jmp
dec
not
bts
ror
bts
btc
bsf
neg
sar
pushf
sub
pushf
clc
movsbw
mov
mov
add
lea
jno
mov
push
lea
jmp
mov
pop
bswap
mov
call
repz
popl
call
cmp
call
bswap
mov
movw
jmp
pushf
pusha
jmp
bt
sub
pusha
pusha
push
lea
jmp
xchg
push
call
jmp
mov
push
mov
push
pushl
jmp
and
ror
rdtsc
rdtsc
test
sub
pusha
mov
push
pushl
push
mov
pushl
lea
jmp
bsf
sub
sbb
movsbw
test
add
push
movb
jmp
sub
mov
jmp
not
mov
inc
dec
shr
and
shl
mov
bsr
mov
test
test
pusha
sub
lea
jo
push
mov
mov
movb
lea
jmp
jmp
cmp
add
pushl
sub
mov
pushf
push
movl
mov
pushf
pushf
pushf
lea
jmp
shrd
sub
sar
rol
mov
dec
movsbl
adc
sbb
mov
push
pusha
add
lea
jo
mov
pusha
lea
jmp
movw
mov
cmc
sub
movb
jmp
lahf
push
mov
mov
call
movb
pushl
popl
push
push
lea
jmp
pushf
inc
pusha
jmp
clc
bt
stc
pushl
stc
call
bswap
pop
pushf
bswap
jmp
mov
pushl
pusha
pushl
popl
bswap
pushf
xchg
movl
jmp
push
movw
mov
movw
movb
pushf
pushf
lea
jmp
call
xor
jmp
movsbw
xchg
xchg
movsbl
mov
mov
lea
push
pushf
dec
pop
pushl
bswap
dec
pusha
movl
pusha
mov
movsbw
jmp
mov
jmp
not
shr
lahf
bsf
notl
shrd
stc
sar
mov
mov
pusha
sub
bt
and
jmp
mov
lea
jnp
push
mov
pushf
mov
jmp
pusha
movsbw
movl
lea
mov
call
mov
pusha
mov
pushf
pushf
movzbw
pusha
pushl
popl
movzbw
mov
dec
not
movl
bswap
movsbw
bswap
dec
mov
dec
call
xor
shl
sbb
bts
dec
bswap
or
inc
bswap
add
lea
cmc
sub
pushf
pushl
pushf
pushl
lea
jmp
jmp
push
lea
mov
jmp
call
xchg
dec
mov
pusha
mov
xchg
mov
jmp
jmp
mov
pop
movzbw
call
mov
mov
mov
lea
jmp
movsbw
inc
pushf
not
call
pushf
mov
repz
popl
push
jmp
jmp
movw
pushl
popl
jmp
mov
movsbl
movsbw
dec
mov
xchg
inc
pushf
lea
pushl
popl
mov
not
movl
jmp
mov
pushf
pushf
popl
jmp
call
clc
aam
mov
dec
bt
clc
rcl
mov
call
pushl
popl
push
pushl
lea
jmp
pushf
pusha
mov
jmp
mov
call
jmp
jmp
movl
mov
mov
mov
lea
jmp
mov
call
mov
movb
push
pushf
mov
pushl
lea
jmp
call
jmp
jmp
jmp
jmp
call
add
mov
cmc
bt
xor
pushl
bt
neg
stc
xor
push
jmp
jmp
call
add
call
push
btc
mov
or
dec
jmp
movw
bswap
inc
movl
lea
movsbw
jmp
repz
jmp
mov
mov
lea
lea
jl
inc
inc
push
pusha
not
lea
mov
dec
movsbw
movzbw
mov
movl
movsbw
mov
movzbw
pushl
popl
jmp
sub
bswap
stc
movsbl
mov
dec
bsr
mov
cmc
pushf
not
stc
test
not
cmp
and
pushf
jmp
cmp
xor
pushf
pusha
movb
call
cltd
ror
mov
shl
shl
shrd
mov
pushf
call
mov
pushf
mov
call
mov
mov
call
dec
push
pushf
pushf
dec
pusha
mov
jmp
shl
mov
neg
mov
test
test
clc
test
add
pusha
call
mov
mov
push
pushf
pushl
push
lea
jmp
call
movw
mov
movw
call
pushl
popl
pushf
lea
jmp
mov
inc
bswap
pushf
mov
mov
pop
pushf
movzbl
movw
xchg
pop
call
jmp
test
sub
push
lea
jmp
pushf
xor
bt
xchg
stc
push
mov
cmc
cmc
test
cmp
sub
pusha
push
push
push
lea
jne
bt
clc
jg
xor
pusha
xchg
call
pusha
pushf
pushf
jmp
call
movl
pop
jmp
mov
sar
test
btr
mov
pusha
test
push
mov
add
pushf
push
mov
mov
push
mov
lea
jmp
add
pushf
mov
mov
lea
jmp
push
pushf
call
pushl
popl
lea
movl
xchg
pushf
mov
not
jmp
call
call
jne
jmp
shr
push
movzbl
mov
adc
or
add
call
push
jmp
movzbw
cwtl
call
clc
add
jmp
pushf
mov
movw
mov
not
not
pushl
popl
pushf
pushf
bswap
movl
movzbw
pushl
bswap
bswap
mov
jmp
xchg
movzbw
mov
dec
dec
mov
call
mov
dec
xchg
jmp
call
pusha
pusha
movzbl
push
jmp
push
jmp
mov
movb
mov
pushf
pushf
popl
pushf
movw
push
call
