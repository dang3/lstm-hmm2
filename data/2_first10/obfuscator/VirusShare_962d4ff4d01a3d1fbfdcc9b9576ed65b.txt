incl
and
rorb
pusha
and
sbb
decl
andb
or
sbb
inc
or
inc
push
add
call
inc
inc
add
orl
add
add
sub
xor
lcall
loopne
test
add
sbb
or
adc
addl
addl
pop
add
add
or
add
addl
pop
test
pushl
inc
add
inc
movsl
add
and
add
int3
cli
and
adc
xor
cmp
pusha
adc
fiaddl
jbe
mov
aad
add
sub
mov
loopne
sbb
shlb
shll
sbb
or
and
int3
incb
cmp
or
subl
sbb
dec
pusha
or
pop
sub
or
add
push
xorb
push
daa
sbb
jmp
shlb
mov
fsts
sub
cli
cmc
inc
loop
dec
cmpsb
cmp
lock
add
std
xchg
aas
jmp
jo
xchg
xor
add
cmp
add
add
shrl
adc
ret
add
jecxz
add
cmp
sub
leave
push
lods
in
jg
xor
pop
dec
inc
add
ss
mov
rcr
push
sbb
imull
inc
stos
test
stc
fildll
cs
je
insb
testb
rolb
cmpsl
mov
inc
movsl
fwait
in
out
fucomp
popa
mov
mov
fdivl
and
out
jge
jge
push
iret
pop
push
xor
aam
mov
sti
std
jnp
jle
rolb
rorb
cmc
hlt
sub
inc
in
adc
adc
and
bound
sub
pop
mov
jnp
outsb
add
mov
loopne
test
insb
in
jo
call
jno
or
sbbl
in
lds
or
jle
movsb
dec
sbb
pushl
push
cwtl
int
sbb
imul
xor
jnp
repz
add
fndisi(8087
jo
stc
xchg
out
sarl
xchg
or
aam
cmp
shlb
addr16
mov
mov
inc
testb
add
out
push
lret
xchg
or
add
ret
sti
fwait
leave
mov
jne
add
inc
xor
lret
jle
popf
pop
jnp
dec
adc
test
mov
sti
jns
add
loope
lldt
inc
add
mov
lea
mov
subb
fs
mov
jne
jbe
js
add
mov
ret
adcb
add
cmp
pushl
jmp
mov
add
lret
pop
add
add
cld
out
push
sti
aas
mov
pop
push
jp
dec
xlat
cmp
lahf
addr16
mov
push
and
sbb
stc
mov
add
push
and
adc
add
inc
dec
xchg
les
orl
mov
inc
fstl
mov
mov
add
mov
scas
mov
sbbl
pusha
and
jge
jnp
lock
clc
nop
adc
lods
add
pushl
mov
sub
lcall
adc
push
push
pop
lock
mov
sub
xor
mov
vmovntps
cmp
sub
or
add
dec
imul
in
add
ja
cmp
sub
aam
fsub
repz
mov
inc
jp
hlt
incl
xchg
or
movsb
mov
dec
jne
mov
lock
sub
in
gs
mov
jg
imul
jp
jns
dec
xor
jo
incb
push
cmp
xor
push
andb
ds
push
mov
mov
jle
and
pop
dec
xchg
add
sbb
aam
xchg
ljmp
add
jle
and
clc
push
incl
sbb
test
jno
add
cmc
filds
push
jle
jle
sub
push
fsubp
push
rorb
andb
dec
mov
sti
stc
xchg
sub
aam
push
push
mov
flds
jbe
push
lret
push
sub
jo
xchg
in
cmp
mov
sbb
mov
xchg
sub
push
ja
out
add
es
loop
popf
push
pop
dec
cmc
pop
je
popf
dec
dec
dec
je
stos
xchg
mov
cmp
out
push
jge
jo
rorb
sbb
jae
adc
popf
inc
stos
lret
test
ret
xor
hlt
ds
mov
push
or
jno
les
addr16
jl
xor
loopne
dec
push
add
js
std
out
clc
inc
jnp
cmp
mov
cmpl
loope
push
ret
lods
cld
push
push
into
add
cmp
xor
loop
sub
mov
incb
adc
cmp
int
cmp
test
mov
sahf
pop
insb
sbb
and
in
jmp
outsl
fcoms
imul
in
xchg
sub
repnz
jnp
add
jle
push
movaps
or
jno
call
cli
divb
call
sub
imul
add
std
scas
sub
fnsave
jmp
dec
dec
mov
add
sub
xor
add
out
or
stc
ja
cs
mov
jl
cmp
mov
sbb
js
push
sarb
test
fs
mov
int
clc
adc
fucom
jmp
mov
push
or
sti
icebp
lahf
push
xchg
nop
mov
cmpsl
xchg
mov
and
mov
jno
sbbl
les
adc
mov
mov
add
fs
addl
bnd
mov
cvttps2pi
cmp
or
push
aad
mov
pop
inc
adc
xor
mov
pushf
cmp
fcmovnb
ret
in
inc
fisubs
or
std
dec
out
fistpll
arpl
sbb
add
hlt
adcb
es
sbb
mov
je
int
loopne
push
adc
lods
testb
ficoms
mov
dec
mov
aad
xchg
flds
gs
bound
mov
inc
rol
rcll
clc
stos
das
ficoml
cmpsb
lock
add
add
or
add
push
sub
push
in
pop
insb
pop
int
pop
jle
add
out
es
cmp
adc
pop
lods
call
xchg
loope
cli
sub
dec
adc
xchg
push
call
outsl
sub
testb
mov
add
out
jp
shr
add
pop
mov
dec
inc
push
imul
jbe
nop
mov
mov
call
andb
mov
push
mov
add
add
jmp
out
add
daa
sub
xchg
mov
fldcw
aad
xor
sub
mov
fndisi(8087
jmp
es
cld
std
cwtl
and
out
pop
movsb
adc
inc
cmpsl
imulb
in
pop
stc
lahf
xchg
fldenv
add
adc
add
xchg
mov
push
and
outsl
iret
fbstp
sub
push
pop
jbe
mov
xchg
mov
stc
xchg
mov
sbb
or
sbb
addr16
cmp
add
lea
lods
cmpsl
lret
cmp
inc
enter
add
pop
bound
xor
adc
std
stos
stc
std
pop
push
je
rolb
and
inc
ja
aam
jo
xchg
push
das
enter
mov
add
iret
scas
ljmp
or
out
mov
mov
or
flds
jl
loope
push
xlat
out
add
mov
dec
mov
mov
lea
cld
ret
out
scas
loopne
insl
inc
mov
testl
psubb
repz
mov
and
inc
std
jg
icebp
dec
xor
add
movb
push
loop
mov
add
inc
gs
test
xor
push
sbb
repnz
loopne
cmp
jg
test
loopne
out
incl
stos
rorb
arpl
insb
out
pop
ret
fmuls
int3
test
ret
loope
nop
and
ret
jns
into
lcall
and
movsl
sub
lcall
pop
sbb
push
jmp
pushf
xor
and
xchg
xchg
sahf
or
adc
clc
dec
sar
loopne
sub
push
cs
js
adc
test
xchg
fs
mov
push
jg
je
cmp
add
dec
mov
dec
mov
jg
or
daa
orb
mov
icebp
test
fdivrs
cs
in
pop
sbb
jg
jmp
or
fisubrl
repnz
xchg
insl
sahf
incl
repz
adc
xor
mov
std
or
push
push
mov
and
lret
add
jnp
pop
loope
ss
incl
loopne
popa
jp
jp
mov
les
data16
lahf
sub
adc
dec
add
cmp
cs
push
inc
movsl
sub
insb
bsr
or
adc
int3
filds
cmp
jnp
fs
sbb
and
enter
and
js
scas
jo
rolb
insb
push
xchg
push
cmpsl
cmp
icebp
add
inc
inc
nop
inc
cmp
push
inc
ret
mov
mov
push
shr
or
movsb
jge
jg
mov
ret
and
ret
stos
imul
mov
out
adc
sbb
adc
mov
clc
mov
lods
ljmp
mov
sub
pop
aas
lret
je
pop
outsb
add
pop
flds
cld
adc
sbb
push
je
jbe
mov
or
jns
add
decb
jno
cld
testb
cmp
enter
sub
or
inc
xchg
push
cltd
jmp
mov
scas
clc
push
mov
das
lea
mov
xchg
and
xor
mov
push
shrb
sbb
adc
push
ret
lds
out
mov
lcall
in
shll
xor
jmp
or
sbb
loop
loopne
add
loope
sbb
fiadds
push
addr16
or
fidivrs
inc
je
fdivl
insb
rolb
fwait
mov
les
std
sbb
cmp
cld
mov
sbb
in
pop
xchg
sbb
cmp
add
jne
out
lahf
jbe
test
jae
loop
fildll
dec
mov
movsl
cwtl
add
xchg
mov
ret
add
adc
sub
adc
add
scas
mov
adc
and
pop
sarl
push
lret
mov
lock
xchg
sub
loopne
out
adc
cld
test
add
dec
mov
je
xchg
inc
rorb
bound
sbb
ficoml
and
aam
add
jo
mov
and
jg
jne
iret
mov
sub
cmp
xchg
add
adc
mov
jl
pop
xor
arpl
or
pop
push
lods
rdmsr
dec
adc
clc
pusha
or
inc
adc
lcall
push
pop
mov
popf
cmp
sti
popa
or
pushf
or
nop
mov
cld
bound
xchg
in
insb
xor
jmp
das
shrb
sahf
inc
in
sbb
mov
out
aad
ss
jge
pushw
push
mov
mov
add
lcall
jno
divb
mov
decb
xor
cli
outsb
adc
in
mov
pop
dec
push
inc
inc
jb
xor
and
xor
mov
rorl
mov
popa
xchg
test
or
insl
lock
lcall
jl
mov
fisttpll
push
jg
addl
xor
das
mov
jmp
jmp
int3
add
dec
adc
scas
and
inc
pop
add
nop
xlat
aad
arpl
push
inc
jl
cmp
adc
push
lret
or
movsl
ror
lretw
and
adc
sbb
lock
inc
shll
out
call
pop
shll
scas
ss
cmpb
test
addb
lret
mov
push
jge
sti
lret
fcom
mov
adc
call
shl
out
push
pop
sarl
xchg
sahf
cmp
movsb
or
push
jb
inc
iret
sti
jno
add
pusha
into
jp
ss
lret
dec
into
dec
lret
or
ret
sbb
or
sarl
loope
adc
pop
jns
ret
and
pushf
dec
fcmovu
icebp
jge
sbb
and
dec
xor
sub
jae
out
and
push
inc
pop
push
jp
je
sbb
cmpsb
enter
inc
fnstsw
and
out
jbe
add
xlat
adc
jo
repnz
xchg
loop
fldl
push
enter
xor
mov
and
and
or
lock
repz
xchg
stos
loopne
sub
sarb
lods
stc
push
js
pop
and
xor
sub
fdiv
mov
lret
cmp
scas
fwait
icebp
das
movsb
fcmovne
xor
mov
pop
test
out
add
jno
xor
je
int
inc
mov
cmp
pop
mov
cvtpi2ps
dec
xchg
dec
addr16
pop
fldt
or
lahf
lds
filds
and
cmp
out
clc
mov
inc
push
inc
xor
clc
or
add
incl
mov
dec
push
test
test
mov
lea
cmp
js
push
lods
ss
hlt
and
jmp
push
loopne
cld
mov
jecxz
sbbl
cmp
dec
les
push
push
ret
fwait
sub
and
jnp
jecxz
inc
add
mov
xor
and
mov
sti
push
mov
cmp
inc
cmp
mov
shl
mov
in
mov
roll
dec
mov
jb
stos
mov
mov
adc
sub
jne
xchg
jg
mov
xchg
loope
lds
jl
fstp
negl
sbb
inc
push
nop
lcall
stc
or
mov
inc
push
out
or
loop
xor
in
push
or
xor
hlt
mov
and
lret
sub
dec
fwait
jmp
mov
mov
sbb
test
lret
mov
pop
mulb
popf
and
xchg
and
pop
aam
lea
adc
cmpsb
inc
in
or
dec
xor
mov
outsl
push
andl
roll
repnz
sarl
mov
push
mov
testb
and
mov
loope
mov
loopne
jmp
icebp
mov
jl
xlat
push
mov
dec
cmp
ljmp
and
lcall
cwtl
mov
inc
push
xlat
push
aaa
or
mov
mov
push
clc
and
adc
faddl
mov
fwait
sbb
add
xchg
xchg
pop
cmp
xchg
movb
inc
icebp
outsl
aad
out
ds
jl
mov
mov
aam
movl
mov
pop
bound
jb
sti
loop
cmpsb
fsubs
sbb
cmp
jl
push
fistpl
inc
pop
jo
ljmp
or
jp
push
ret
and
jmp
lahf
imul
xchg
push
mov
testb
lods
jnp
pcmpgtd
fcom
adc
insb
xchg
stos
xchg
cld
pusha
mov
sar
and
jl
rclb
jno
in
sub
sbb
xor
ret
push
jnp
outsb
hlt
outsl
and
pop
or
mov
dec
hlt
sub
mov
cwtl
idivl
icebp
sbb
mov
pop
clc
js
push
jns
mov
fisubl
sti
add
ja
jecxz
add
jb
imul
dec
mov
les
adc
adc
pushf
or
add
sub
mov
jbe
mov
jnp
div
mov
inc
dec
sub
inc
rcrl
mov
inc
xchg
clc
cmp
ds
adc
cmp
lea
sub
and
pop
push
push
stc
mov
adc
push
add
push
fnstsw
cld
out
mov
lock
adc
xlat
sub
cmp
mov
mov
or
clc
xsaves
adc
or
inc
ss
sub
imul
clc
stos
pop
movsb
xor
sti
inc
push
rcl
ljmp
mov
stos
outsl
js
xchg
mov
jb
adc
aaa
push
shlb
imul
sbb
sbb
cmpsl
cs
std
daa
call
negb
leave
pop
cmp
inc
adc
out
loopne
mov
dec
mov
fs
sbb
lahf
mov
je
add
jp
test
dec
lcall
pushf
mov
add
scas
loopne
or
xchg
or
inc
mov
fisttpll
xchg
add
mov
cltd
daa
xchg
pop
test
in
adc
test
mov
mov
jo
push
mov
or
movlhps
rolb
jg
mov
lds
jo
push
jo
cltd
cmp
in
repz
mov
or
inc
jnp
push
jge
pop
push
je
aaa
scas
fadd
and
scas
addl
icebp
out
cmp
out
ret
cmp
xchg
dec
adc
jmp
inc
adc
push
mov
sbbl
pop
fstpl
add
mov
pop
rolb
jg
rcrb
imul
dec
in
rol
inc
pop
sbb
and
xor
stos
adc
mov
mov
nop
cld
inc
clc
addl
adc
add
lcall
sub
cmp
push
aad
mulb
pop
adc
inc
push
mov
lret
shl
out
mov
sbbb
mov
sub
push
icebp
shr
sub
popf
add
xchg
shl
cmp
out
adc
mov
negl
sbb
push
push
rol
fists
mov
aaa
lock
je
and
mov
sub
adc
lahf
iret
mov
add
mov
and
cli
or
or
outsb
data16
add
lock
jle
push
mov
icebp
int
or
movsl
aas
jle
in
mov
lods
cmp
dec
testb
sbb
shrb
scas
cli
add
std
cmp
mov
dec
rol
jmp
lock
inc
xchg
jl
in
repz
pop
mov
and
movsl
loope
push
cmp
or
mov
or
idivb
daa
nop
ret
ret
dec
push
jnp
or
jo
sar
inc
or
mov
test
push
adc
cli
jle
add
mov
mov
add
popf
repnz
mov
add
in
scas
dec
scas
ljmp
sub
ljmp
dec
xor
ja
inc
push
push
icebp
jp
rcrl
mov
cmc
decl
repz
mov
leave
xchg
adc
ret
xchg
rorb
aad
jle
filds
test
jle
into
roll
add
stos
pop
dec
loope
out
pop
aaa
aam
in
push
sarb
addr16
sub
data16
add
int
insl
xor
daa
rorb
hlt
jno
mov
icebp
pop
mov
addr16
xchg
mov
mov
imul
adc
add
subb
sub
test
mov
cmp
and
sub
lahf
jg
outsb
mov
and
push
push
loope
xchg
xchg
and
mov
shrl
jg
mov
xor
sub
push
mov
inc
xchg
add
pop
dec
es
push
fs
push
lahf
es
sub
sub
dec
fwait
pop
ret
dec
sub
jnp
clc
aam
mov
xorl
push
cmpsb
mov
lock
stos
fimuls
pop
mov
jg
in
repz
call
xchg
scas
aad
push
inc
mov
mov
or
js
adc
mov
sub
aam
rolb
les
push
mov
cmp
mov
inc
int
rclb
pushl
notl
add
add
jne
cmc
popf
jbe
mov
repz
add
mov
sbb
repnz
out
hlt
outsl
jmp
arpl
pushf
loop
jmp
cwtl
inc
ss
sbb
cmp
pop
pop
mov
inc
pop
sti
repnz
movsb
mov
je
jge
ret
fbld
mov
adc
lea
ds
test
scas
test
aam
cmp
scas
jae
icebp
imul
in
sarl
jno,pn
ds
or
push
repz
jo
or
adc
ss
rclb
out
out
outsl
sub
cmpsb
jge
sub
decl
lcall
and
or
lds
push
pop
add
or
push
mov
outsl
enter
xchg
popl
ljmp
cmp
push
jge
xchg
stc
sub
call
das
outsl
jo
fdivl
xchg
xor
imul
nop
pusha
enter
inc
pop
popl
sbb
xor
icebp
add
jmp
inc
dec
in
dec
lods
dec
pop
xor
mov
std
das
jg
and
sub
aas
dec
mov
in
loope
fwait
push
or
sbb
shrl
hlt
mov
cwtl
mov
jno
sti
mov
dec
sub
cmp
leave
pop
xchg
cmp
pop
cmp
out
add
inc
or
cld
idivb
test
cvttps2pi
movsl
sbb
stos
sub
pop
setnp
lock
inc
inc
mov
out
movsl
pop
push
roll
mov
cli
clc
add
jnp
sar
push
jo
repz
adc
jle
add
mov
fcoms
dec
or
inc
fldl
push
icebp
mov
add
aad
mov
loop
adc
push
jl
aam
push
sbb
cmc
mov
out
cltd
das
mov
add
les
inc
mov
test
add
and
mov
popa
repz
add
mov
loop
sarl
and
cwtl
sbb
les
notl
sti
push
hlt
addr16
std
adc
lahf
movsl
mov
test
shld
lds
inc
lds
xor
negb
popf
cli
lods
mov
aaa
loopne
cmc
fcoms
jle
inc
shlb
adc
and
jecxz
stos
dec
aam
xchg
xor
stos
fs
fwait
sahf
jbe
loop
cs
repz
sti
cmp
and
jmp
and
std
sti
out
ss
jbe
sbb
jl
adc
sub
iret
dec
lods
mov
mov
enter
jne
test
lock
ljmp
mov
jle
or
in
dec
add
xchg
mov
stos
loopne
sbb
aad
sbb
call
xchg
xchg
filds
and
loop
or
sbb
fnsave
das
sub
out
hlt
loope
mov
jecxz
and
outsb
mov
nop
popf
in
cmp
add
mov
cld
add
pop
push
js
pushl
mov
mov
adcb
outsb
adc
arpl
loopne
fdiv
sbbb
ljmp
movsl
mov
push
pop
mov
xchg
sbbb
jge
fcmovbe
mov
add
pop
mov
sub
bound
pop
xor
jecxz
push
adc
nop
or
andl
mov
xchg
es
jg
loop
outsb
popf
mov
and
inc
movsl
testb
mov
les
inc
fdivp
mov
sub
loop
test
insb
loopne
popa
mov
push
xchg
xchg
sbb
mov
mov
outsb
clc
xchg
jbe
adc
and
xchg
add
dec
jb
aas
stos
outsb
and
jp
andb
mov
inc
dec
aas
cs
in
outsl
std
out
stos
hlt
cmp
adc
pop
imul
lret
or
shrb
adc
push
jns
movsb
les
inc
popf
inc
push
xor
test
xor
stc
lods
call
out
aas
mov
aad
push
insb
movb
mov
lret
cmpsl
rorb
test
outsb
aad
and
rorb
in
loop
decb
push
ljmp
add
repnz
mov
add
clc
mov
jmp
jp
in
xchg
xchg
mov
sbbl
push
fsubrl
sub
loopne
and
mov
jns
jg
fwait
cs
pop
add
xchg
adc
mov
or
mov
inc
test
into
pop
mov
jp
popf
lods
sub
mov
jbe
mov
arpl
fadd
rorb
add
jg
push
or
xor
dec
cmp
xor
loope
jle
cld
stos
daa
and
inc
test
or
adc
and
mov
push
mov
dec
mov
mov
jnp
ljmp
or
mov
rcll
mov
fbstp
pop
faddl
add
ljmp
xor
hlt
jo
sbb
shll
lock
popfw
outsl
fbstp
mov
stos
ljmp
and
loopne
jo
enter
sub
roll
aaa
jne
inc
leave
or
mov
adc
and
cmpsl
mov
fidivrs
mov
insb
pop
inc
orl
in
aas
lods
ss
fildll
cmpsb
inc
loope
fs
ss
push
imul
dec
or
adc
push
xlat
pop
pop
pushf
or
pop
notb
outsb
iret
ja
push
loop
in
cmpsl
push
pop
add
mov
lds
in
cmp
mov
jg
inc
inc
mov
sbb
popl
mov
or
mov
int3
jge
cmc
sub
add
in
mov
add
shll
inc
insl
adc
mov
int
out
or
sub
arpl
int3
xor
imul
call
or
cmpl
jns
inc
xor
xchg
mov
pop
jns
ret
sbb
mov
or
inc
cltd
sub
sub
or
pusha
lods
push
push
adc
or
std
and
testl
or
jns
cmp
loop
in
cld
sbbb
or
xchg
out
or
les
lcall
pop
std
inc
insb
sbb
dec
xor
mov
inc
or
mov
ljmp
lret
lock
stc
dec
incl
dec
xor
rorl
adc
cmc
mov
inc
out
push
or
adc
cmp
sub
mov
push
cmpsb
lahf
adcb
les
add
pop
mov
ret
dec
ds
add
adc
inc
loopne
in
insl
loopne
cmp
xchg
inc
mov
fwait
mov
in
out
leave
test
je,pt
jmp
test
stc
dec
lret
sub
cmp
dec
js
sub
pusha
jo
and
ja
jbe
shlb
das
cmp
je
adc
dec
sbb
lahf
call
mov
decb
adc
in
std
add
rcrl
stos
cli
dec
jmp
aas
icebp
add
adcb
pop
aas
movsl
xor
dec
ss
cmpb
xor
cmp
xchg
or
dec
stc
mov
nop
push
mov
and
dec
cmp
movsl
fildl
test
in
jg
rclb
fbld
insl
add
push
lret
inc
enter
loop
pop
hlt
scas
clc
push
sarl
mov
dec
popf
jb
aas
fisubrl
mov
mov
jle
inc
sbb
sub
lods
scas
enter
adc
push
mov
scas
clc
cwtl
shlw
xchg
ficompl
pop
inc
aam
rolb
test
add
push
xor
pop
es
aad
pop
jl
rcrb
or
into
push
xchg
popf
clc
decl
int3
jbe
adc
and
ljmp
sbb
or
aas
adc
xchg
adc
inc
js
popa
dec
pop
xorb
dec
mov
ret
xlat
fdivs
inc
std
dec
cld
or
cli
xchg
jo
ficompl
lcall
jge
data16
sub
lea
and
in
mov
icebp
pop
movsl
nop
or
push
pop
pusha
call
mov
cmpsl
mov
int3
jbe
pop
xor
out
pop
icebp
loop
nop
lahf
mov
fldenv
jno
and
lahf
inc
jo
xor
add
xor
mov
stos
push
cmp
push
mov
in
stos
clc
push
push
test
stos
pop
hlt
cmc
jp
repnz
loopne
adc
stos
xor
pop
fimuls
insl
call
lds
mov
adc
andb
cmp
add
data16
ret
adc
stos
das
adc
cld
jo
inc
sarl
shr
mov
push
mov
cmp
cld
push
inc
push
pop
lds
pop
fcomps
add
inc
out
aam
inc
xorb
adc
add
sub
sub
add
jg
jo
cmp
fcmove
inc
jno
insb
and
add
scas
cmp
test
push
scas
in
sub
mov
decl
loope
add
push
out
test
xlat
adc
insb
fisttps
fisttps
pop
add
or
div
movsl
mov
cmp
inc
les
jl
add
jg
mov
push
xor
mov
sub
loope
andb
pop
imul
and
jns
pop
jmp
clc
push
bound
adc
repz
mov
mov
jno
xchg
dec
fs
out
xor
adc
jo
les
cmp
or
imul
pop
movsb
and
push
jmp
or
and
in
lods
sbb
pop
icebp
dec
pop
xor
cmp
hlt
lahf
push
add
and
mov
sub
sub
fwait
sti
mov
aaa
mov
cmpsb
or
sbb
or
fs
xor
add
idiv
icebp
push
ljmp
and
movswl
les
lods
xchg
cltd
nop
fcmovb
mov
mov
dec
jbe
aam
lcall
dec
cld
cltd
mov
call
jb
cmp
jg
mov
decl
adc
pop
mov
xor
loop
inc
jl
jl
or
pop
jle
inc
lcall
pop
mov
add
sub
in
fcomps
mov
add
mov
push
ret
adc
mov
lock
call
mov
mov
daa
sbb
inc
push
sbb
xor
scas
jl
les
and
sahf
mov
test
add
idiv
cmp
xchg
dec
lret
filds
lds
jecxz
pop
xchg
and
xor
and
adc
divl
inc
stos
cld
les
pusha
fnstenv
pop
nop
lods
or
or
push
mov
mov
mov
add
jle
adc
pop
in
pop
jl
sub
imul
jmp
popa
mov
insb
jle
jmp
mov
aas
sbb
adc
repz
adc
out
or
cmpsb
add
cmp
icebp
call
mov
xchg
jne
add
loop
scas
inc
pushf
or
cld
mov
mov
sub
fiaddl
adc
jnp
test
cwtl
popf
push
lea
std
push
adc
inc
sbb
inc
jl
das
fldcw
mov
rcrb
movsb
mov
loop
sbb
sbb
paddw
incl
cld
or
push
popa
mov
inc
loopne
push
sub
or
push
cmp
inc
out
cmpsl
out
xchg
shrl
dec
pop
std
or
push
insb
sbb
push
or
orb
aam
pop
inc
mov
pushf
sbb
pop
sub
sub
or
add
cld
stos
movsb
push
pop
movsb
add
pop
pushf
jge
loop
mov
mov
popa
shlb
leave
xor
add
inc
sarl
lret
testb
mov
pop
icebp
fiadds
sbb
sub
dec
inc
daa
aad
shrb
call
push
popa
addb
je
test
aas
cld
test
test
inc
mov
xor
mov
or
decb
andl
add
mov
andl
mov
fmull
movsl
and
mov
push
push
mov
clc
popa
loope
je
das
mov
pushf
fsubp
sbb
jg
out
insb
jp
cmovae
out
shrb
rcrb
lahf
adc
push
clc
mov
ljmp
test
mov
jno
jo
add
cmp
in
shll
call
inc
pushf
inc
xchg
sbb
insl
cmp
subb
cld
pop
mov
es
adcb
ja
ljmp
cmpsb
mov
mov
pop
popa
cmp
jae
into
je
insb
sbb
sbb
jge
decb
jl
mov
lock
shl
pop
adc
icebp
sub
pushf
mov
mov
push
mov
mov
mov
jg
cld
pop
or
or
sbb
jno
sbb
mov
aas
cmpsb
pushf
adcb
das
sub
mov
pop
mov
les
lea
dec
fs
add
xor
ljmp
fldenv
in
mov
hlt
sub
inc
cmp
int3
sub
add
fdivrs
mov
ds
cmp
test
inc
jo
dec
js
dec
lock
in
pop
mov
mov
mov
cwtl
push
adc
sbb
pop
adc
lret
mov
repz
adc
add
stos
mov
sti
mov
sbb
sqrtps
mov
cli
push
movsl
add
inc
inc
ja
fnsave
les
jle
mov
pusha
jmp
cli
sub
and
fnstsw
sub
ss
cwtl
mov
stc
xchg
mov
mov
pusha
andl
roll
aas
xor
jae
push
jp
cli
loope
cli
sub
push
repz
push
jmp
push
dec
mov
or
mov
outsb
les
mov
sbb
mov
jecxz
xor
sub
and
shr
cli
sbb
pop
xchg
or
mov
push
es
fdivr
sub
repz
ror
scas
sub
jno
ss
in
sub
fdivs
or
je
cmp
sbb
pop
test
ljmp
dec
inc
xor
les
xchg
push
xor
ficompl
imul
stc
add
dec
or
mov
or
adc
cld
into
inc
sub
jns
push
mov
xor
push
cmp
sbb
inc
push
ss
icebp
stos
mov
add
jae
sub
inc
sbb
dec
shrb
enter
push
add
or
js
inc
xchg
sub
lret
mov
mov
xchg
stos
sbb
mov
or
push
aas
fs
mov
adc
jbe
dec
cmc
dec
xchg
dec
xchg
mov
mov
sbb
jg
insb
cmp
xchg
inc
inc
dec
jbe
sbb
mov
mov
add
dec
or
inc
mov
test
out
jo
or
push
mov
and
or
inc
enter
add
je
sub
cwtl
movsl
mov
shrl
daa
mov
mov
mov
out
mov
ret
mov
mov
inc
sbb
cmpsl
outsl
mov
sub
hlt
das
inc
clc
pushf
mov
in
or
mov
xor
aas
outsl
ret
inc
cli
push
push
mov
dec
add
clc
pop
loope
rorl
sub
cld
shr
stos
mov
int3
push
sbb
push
dec
sbb
mov
sarl
cmpsb
inc
or
add
fbld
adc
or
add
push
and
fists
addb
ja
sbb
add
pop
incl
pop
fs
loopne
adc
adc
adc
sub
mov
jmp
push
shrl
adc
lret
fnstsw
add
out
lock
clc
xchg
mov
sub
pusha
mov
fistpll
inc
sub
push
jb
movsb
clc
std
sub
xor
inc
mov
addl
jno
jg
xor
js
inc
mov
pop
clc
push
inc
aas
add
xor
sarl
dec
fucomip
push
xlat
stos
dec
push
jnp
in
or
or
add
daa
inc
inc
mov
push
std
adc
sbb
xchg
sarl
xchg
loop
inc
adc
add
sbbb
or
or
sbb
fisttps
xchg
sti
arpl
mov
jno
push
in
pop
leave
mov
icebp
in
jno
cmp
cmp
adc
addl
rolb
popa
adc
and
jg
push
loop
inc
cmp
push
add
add
push
mov
add
pop
icebp
ret
pop
cld
aaa
sub
push
insb
sti
mov
pusha
jp
sarb
and
mov
or
jp
enter
mov
push
mov
xor
sbb
mov
popa
xlat
or
mov
fwait
jbe
pop
ficoms
xrelease
push
icebp
push
push
adc
fdiv
cli
scas
outsb
lods
or
xor
inc
add
pop
sar
decl
and
fldcw
je
ss
push
add
or
xchg
add
andl
sar
and
stc
push
jne
jle
sbb
inc
pop
ss
adc
xchg
cmp
sub
inc
sbb
out
rorb
and
popa
notl
ss
xchg
lcall
das
dec
lods
test
push
cli
jo
movsl
std
mov
pop
jecxz
pop
mov
sbb
push
xor
clc
sbb
and
or
xor
sbb
mov
sbb
fadd
ss
hlt
std
notb
xor
mov
push
roll
push
lret
inc
ja
cwtl
and
jg
insb
mov
jb
push
andb
bound
ret
and
push
xchg
rcrl
in
lds
cltd
daa
or
pop
ficompl
push
cs
test
ja
inc
cmp
mov
sub
js
jl
outsb
loope
les
outsb
ds
lock
lock
cli
aas
mov
mov
xor
add
and
ljmp
pop
andb
push
add
adc
xor
cld
mov
adc
xorb
lods
cli
xchg
lcall
stos
and
or
push
push
popf
add
sbb
adc
inc
push
outsl
lock
cli
mov
nop
test
es
outsb
sub
sti
jmp
sti
or
add
pop
cld
jmp
jns
inc
mov
imul
shll
leave
jae
or
jg
cld
dec
add
push
lcall
scas
out
or
cld
xor
subl
xor
add
icebp
pop
pusha
pop
cld
jne
loop
out
mov
test
add
pop
lret
cld
imull
add
and
cli
inc
loope
sub
and
adc
jge
das
cltd
dec
lcall
pusha
push
test
cli
add
loope
aam
mov
sti
sbbl
out
push
add
dec
push
mov
cmp
into
lret
cmp
sbb
data16
hlt
xor
ffreep
adc
mov
aaa
stos
mov
bound
or
push
pop
cltd
test
mul
pop
sbb
bound
push
cwtl
mov
sbb
inc
mov
mov
mov
push
enter
jbe
add
pop
test
icebp
jecxz
dec
adc
ja
push
sub
and
loopne
cmp
jo
rcl
dec
shrd
add
call
sub
xchg
ret
sbb
sbb
sahf
push
ds
pop
cmp
iret
or
bound
cs
insb
inc
or
sti
scas
nop
mov
pop
sahf
dec
mov
push
push
cmp
mov
ret
pop
stc
inc
mov
int3
in
ds
cli
leave
cli
sub
cmpsb
or
rcrl
mov
addb
cmp
lret
adc
push
pop
pop
cli
add
cmp
fisubl
mov
shll
adc
jecxz
stos
loopne
sbb
push
push
movsb
fstpt
loopne
lods
push
pop
aam
adc
adc
roll
jbe
fidivs
clc
in
loop,pn
push
cmp
add
das
jg
out
lock
mov
fcmove
test
add
popl
imul
push
push
int
int3
sarl
or
orb
add
cmpsb
cld
adc
repnz
and
imul
dec
or
decb
sub
fxch
sbb
inc
mov
into
mov
mov
icebp
rcrl
psubw
nop
cld
xchg
cmp
or
mov
aad
pop
push
ror
push
popf
adc
jge
push
subl
out
lods
cmp
pushf
fbstp
pop
std
ss
aaa
sub
pop
bound
pop
jecxz
sbb
pop
mov
xchg
les
push
xchg
lcall
rclb
das
add
mov
jbe
mov
pushf
dec
push
outsb
add
mov
addl
mov
xchg
lcall
rorb
inc
push
sahf
flds
adc
and
push
mov
ljmp
cli
mov
cltd
sbb
inc
mov
lock
js
mov
sub
sbbl
mov
or
es
sbb
addr16
adc
ret
call
sbb
cmc
jae
cmp
pushl
fsubrs
add
mov
xchg
adc
insl
pushf
cltd
fucomp
movsb
xchg
mov
clc
sbb
dec
ret
xor
lock
jle
push
aam
push
xchg
sub
push
fwait
ds
pop
stos
js
data16
dec
xor
xchg
pushf
or
iret
out
jmp
imulb
add
mov
xchg
clc
push
ds
and
or
mov
xor
subps
rcrb
jno
jle
xchg
push
pop
ds
xchg
sarb
cmc
xor
rol
rcrl
ffreep
clc
hlt
mov
je
push
push
ss
jmp
cmp
or
add
inc
jg
fs
cmp
cld
sarl
std
push
xchg
jp
mov
sbb
inc
andl
das
cld
arpl
jne
sbb
or
aad
js
jns
pop
rclb
lret
inc
add
adcb
xor
xchg
scas
cwtl
adc
test
adc
pop
hlt
push
adc
dec
cmpsb
jnp
mov
out
cli
out
sub
mov
jge
add
inc
lea
fildll
xlat
jne
das
cli
test
fidivl
imul
pusha
xchg
test
ficoms
add
mov
dec
popf
and
cmpsb
negb
mov
xor
outsl
test
xor
aam
xchg
arpl
jb
cld
adc
popa
sbb
cltd
push
ret
push
jmp
repz
ret
dec
daa
lock
push
xchg
pusha
sbb
dec
mov
jns
lret
add
aas
adc
pushf
push
add
adc
jmp
hlt
aaa
pusha
outsl
or
add
adc
mov
pop
push
xchg
lock
sti
mov
adc
jle
pop
sub
sti
dec
adc
mov
or
cld
xor
cmp
add
cwtl
repz
pop
or
dec
insl
add
xor
mov
jnp
cld
cmpsb
sub
mov
xor
mov
stos
ss
pusha
arpl
sub
ret
sbb
ja
not
jmp
add
outsb
hlt
ret
lea
sub
adcl
mov
mov
stos
push
or
adc
add
adcb
cmc
or
inc
jb
adc
dec
lock
or
cli
mov
pop
mov
mov
xorl
push
sbb
cli
nop
clc
and
scas
adc
mov
std
dec
dec
rorb
add
lods
inc
push
adc
clc
xchg
mov
mov
push
mov
add
sbb
jmp
addb
push
ret
adc
xor
xchg
jbe
in
call
js
sbb
jmp
outsl
push
repz
push
sbb
inc
xor
add
int
lret
jle
into
ljmp
flds
sbbb
iret
or
mov
rcrb
add
dec
xchg
jb
push
cld
scas
stos
mov
mov
test
notb
and
pop
scas
stos
iret
adc
scas
cmc
cmpxchg
iret
invd
pusha
mov
mov
ror
mov
outsl
std
push
clc
call
stos
dec
mov
inc
icebp
and
clc
loopne
pop
mov
sub
fwait
cmc
and
sbb
bound
jp
fmull
pushl
popa
adc
adc
adc
adc
repz
xchg
dec
push
aad
ss
in
cltd
aad
jnp
cs
mov
gs
or
push
cmp
scas
mov
fwait
sub
push
scas
mov
test
ret
jg
scas
adc
scas
inc
or
fiaddl
mov
cmpsb
add
add
test
shlb
jmp
inc
aas
mov
jge
mov
cmpsl
fidivrl
inc
xor
rclb
pusha
roll
jge
pop
and
mov
outsl
adc
dec
jns
xlat
data16
xchg
scas
sbb
mov
inc
les
mov
or
jp
js
pushl
add
mov
dec
cli
daa
mov
lcall
mov
add
jmp
stc
hlt
xor
mov
xchg
hlt
xor
push
shlb
xor
adc
icebp
add
add
hlt
or
fisttpl
cmp
sbb
jge
test
and
push
mov
decb
hlt
movsb
les
es
cmp
jne
cmp
inc
or
popa
xchg
mov
xor
push
cmp
dec
dec
push
mov
dec
add
outsl
push
fcmovbe
cmp
divl
or
jo
jo
mov
sti
dec
cmp
data16
sahf
push
popf
sarb
or
incb
jl
pop
lock
icebp
xor
xor
sahf
orl
or
js
lahf
cmc
out
test
int
and
rorl
popl
inc
xor
xchg
add
pop
or
in
dec
sub
js
mov
pop
arpl
jmp
adc
pop
jo
nop
or
or
testl
mov
xchg
and
inc
hlt
dec
mov
pusha
mov
jl,pn
and
sbb
cmp
sub
xchg
lahf
xlat
and
add
int
cmp
jns
mov
mov
xchg
xchg
loop
mov
xlat
sbb
mov
clc
xchg
xchg
pop
sub
mov
ja
mov
clc
xadd
mov
mov
xchg
pop
lea
cs
fwait
push
and
in
mov
mov
pop
cld
xchg
rolb
lcall
je
aad
gs
ret
fbld
inc
ss
dec
nop
inc
out
jbe
add
stos
push
cwtl
push
push
jmp
add
and
jmp
mov
leave
add
mov
popa
inc
outsl
enter
dec
adc
addr16
sbb
push
dec
aad
mov
outsb
pop
cmc
hlt
inc
out
icebp
and
mov
fwait
and
inc
and
cmpsl
dec
cmp
fldl
sub
push
adc
insb
adc
ja
pop
jecxz
cmpl
lock
ret
test
xchg
hlt
mov
in
test
push
movsb
xchg
adc
push
ljmp
hlt
and
dec
or
jmp
hlt
les
je
jbe
xchg
sub
pushf
mov
std
pop
addr16
mov
pushf
jp
sub
lods
add
xorb
and
test
ret
jmp
add
das
sbb
cmp
clc
cld
dec
push
and
shr
cli
pop
add
and
pop
push
or
adc
int
dec
add
cs
dec
jecxz
loopne
dec
mov
test
lahf
vunpcklpd
sarl
mov
inc
mov
out
clc
cmp
sub
addb
movsb
push
fidivrs
rcrl
xor
testl
loope
pop
and
mov
mov
cmpsb
andl
and
sub
pop
fwait
adc
sub
dec
sub
fadds
cmp
cmp
shlb
xchg
jnp
call
or
add
iret
cld
andb
iret
sub
add
add
insb
daa
pop
jno
ljmp
lret
stos
arpl
shrb
inc
xor
mov
das
sub
nop
sbb
xchg
outsb
popa
push
and
inc
cli
hlt
call
imul
xchg
mov
insb
iret
inc
push
add
and
pop
out
ficoml
dec
pop
and
lcall
test
jg
add
and
clc
lods
incb
xor
jae
faddl
add
lahf
mov
ljmp
cli
rolb
sarb
pushf
mov
les
lods
lds
cwtl
mov
sub
pop
and
cmc
xchg
and
or
xchg
clc
add
push
leave
in
insl
subb
outsb
loopne
incl
das
mov
ret
loope
leave
sub
aam
pop
hlt
mov
stc
cmpb
mov
out
iret
inc
or
enter
mov
push
cld
int
cmp
outsb
xor
leave
push
cmp
outsl
icebp
stos
rorb
dec
sub
shll
fsubp
and
es
repz
or
sarb
jmp
inc
test
or
sub
call
fcmovne
out
lds
mov
xchg
xchg
mov
pop
sub
or
notl
in
clc
rcrl
inc
hlt
orl
aad
mov
jnp
push
daa
test
push
and
out
in
sbb
mov
pop
insb
lcall
int
sahf
hlt
or
and
adc
shlb
jle
add
negl
dec
int3
pop
rclb
andl
inc
add
xor
jle
das
out
dec
insb
jmp
imul
or
call
mov
fsubl
mov
cmp
or
mov
add
cld
in
pop
and
out
xor
mov
fidivrs
in
loopne
inc
mov
add
cmpsl
lds
cmc
aas
sbbl
sbb
out
into
idivb
ret
cmp
lcall
cltd
add
jg
adc
sbb
flds
cmc
sahf
idiv
push
mov
in
ljmp
pop
inc
aad
pop
push
sarb
xchg
add
pop
outsl
jp
mov
stos
mov
pop
rorb
push
pop
imul
lds
xorb
pop
shll
imul
pop
mov
insb
push
mov
test
dec
mov
shld
out
adc
test
cmp
out
inc
push
call
sbb
std
ja
movsb
mov
shlb
test
sbb
fildll
lea
sub
mov
jno
sub
sbb
int
or
mov
mov
clc
fwait
mulb
xchg
call
xchg
inc
and
jmp
shll
cld
or
jno
lcall
fisubl
fisttpll
outsl
add
jae
pop
imul
cli
sbb
mov
jmp
dec
insb
xor
push
fistl
popa
insl
out
xlat
pop
daa
add
mov
add
sub
mov
jp
xlat
mov
rol
les
sbb
lret
or
pop
out
xchg
push
cmp
shrb
add
loopne
inc
mov
xchg
aas
test
cli
decl
pop
pop
jno
push
je
and
inc
jno
jle
jge
out
dec
out
insl
cs
sahf
popf
test
sub
mov
jp
pop
adc
shlb
jmp
jbe
mov
je
fistps
cmp
add
mov
and
add
out
dec
roll
jg
movsb
sub
fsubrp
dec
sbb
mov
push
shl
add
mov
js
fwait
xchg
loope
and
hlt
mov
pop
popf
pusha
fstl
sbb
push
orb
ret
stos
divl
pop
add
xchg
xchg
mov
dec
das
scas
push
dec
or
inc
js
or
fidivs
adc
jge
adc
push
sarb
out
sub
push
jno
jnp
inc
add
jb
loopne
mov
or
push
inc
jnp
jge
mov
jne
sbb
std
ret
add
push
outsb
adc
adc
push
dec
call
or
mov
fimull
and
mov
loop
mov
and
das
fdivs
sub
loopne
and
orb
push
or
clc
cmp
stc
jg
arpl
mov
fidivl
mov
xor
or
and
fildll
dec
cmp
xor
data16
lret
ljmp
in
stos
sahf
pop
mov
jg
cmp
mov
fildl
lds
inc
add
lcall
and
lds
cmp
fucomp
mov
mov
mov
aaa
inc
popa
inc
or
loope
xchg
pop
test
push
scas
mov
ja
out
pop
cmp
inc
call
inc
mov
shll
out
mov
pop
mov
ret
sbb
data16
sbb
ficompl
sub
jp
decl
sar
inc
add
jecxz
shll
clc
decb
adc
xor
lret
lods
incl
rolb
cld
push
push
jo
popa
add
insl
dec
jmp
lahf
sbb
jmp
or
sti
subb
cld
pop
jg
dec
int
pushf
mov
test
adc
ret
jbe
shr
aam
mov
loopne
imul
shl
icebp
sbb
stc
jnp
push
mov
xchg
outsl
sub
push
cld
test
icebp
dec
push
int3
lahf
dec
arpl
xor
test
dec
loop
test
mov
pop
ror
hlt
test
mov
add
jne
mov
pop
dec
sbb
ret
pop
pusha
mov
and
lret
loopne
adc
mov
xor
adc
mov
bound
pop
test
cmp
jg
call
sub
lea
add
ljmp
int3
int3
pushf
movsb
lcall
inc
nop
std
fcompl
pop
ss
xchg
das
mov
jo
sbb
sub
cmpb
dec
bound
pop
or
rclb
stos
ljmp
cld
mov
push
mov
jb
adc
dec
jge
adc
xchg
je
das
lahf
hlt
stos
scas
jl
push
outsb
adc
pop
cli
or
dec
stos
inc
pop
or
xlat
movhps
in
cli
test
pusha
xor
mov
divl
push
mov
subl
adc
rcr
mov
popl
inc
mov
lock
dec
mov
mov
xchg
sbb
loopne
cli
xchg
mov
mov
mov
cld
add
and
lock
in
push
or
push
dec
jecxz
push
fdiv
mov
add
or
add
das
call
rcr
lods
rorb
mov
sar
push
adc
mov
cmpsl
inc
adc
cmpsb
loope
sbb
icebp
push
clc
mov
js
xchg
fisttpll
incl
ljmp
movsl
sbb
aas
es
and
fsubrl
inc
daa
dec
sbb
mov
xlat
rolb
add
mov
push
call
sub
clc
test
in
or
gs
aas
loope
cmp
int
inc
or
add
push
adcl
and
push
cmp
xchg
rclb
scas
ljmp
insb
jle
data16
xchg
add
adc
jecxz
lock
ss
push
adc
lods
sti
lock
call
xor
movsb
or
es
or
push
pusha
incb
jg
roll
inc
lock
push
dec
aad
call
xchg
xchg
adc
push
mov
mov
mov
and
push
push
clc
movsl
test
adc
mov
push
mov
adc
mov
insl
subb
push
jg
push
jl
adc
cmp
pop
jecxz
pop
adc
sbb
cmp
in
test
in
xchg
push
xlat
ret
pop
lret
test
imul
aam
fadds
pop
loopne
add
pop
decl
sub
imull
push
jg
lret
add
pop
roll
ja
jl
mov
adc
push
push
inc
jmp
and
xchg
adc
cs
ret
dec
sub
inc
pop
in
clc
xchg
and
das
cmp
jb
ss
pusha
mov
stos
mov
mov
jb
sub
hlt
push
inc
shrl
iret
js
xchg
adc
nop
mov
push
mov
stos
jb
xchg
jns
mov
das
lock
inc
pop
ds
push
cwtl
and
popf
negb
lds
enter
cmp
xchg
mov
in
rcrl
mov
adc
mov
dec
mov
sub
jmp
pop
adc
in
push
cmc
or
fwait
jle
test
xor
add
mov
add
and
jo
or
mov
push
lcall
sahf
inc
rclb
adcl
imul
sbb
decl
loope
pusha
sbb
inc
pop
jbe
out
pop
push
and
shl
sub
enter
leave
inc
mov
test
push
in
push
gs
xchg
fs
ja
inc
cwtl
add
jle
push
mov
dec
inc
pushl
jle
sub
int
dec
outsb
shll
mov
inc
insb
hlt
add
insl
lock
ljmp
decl
pop
les
mov
enter
pop
push
imul
jle
pop
push
cli
push
inc
jecxz
xchg
push
rcrb
dec
and
stos
aas
push
mov
and
popf
cmp
cmp
and
adc
sub
pop
ret
push
dec
call
test
sub
push
dec
xchg
imul
sbbl
andb
lcall
add
pop
pushf
sbb
hlt
int3
mov
repnz
jne
push
inc
jge
std
mov
xchg
mov
dec
incl
fidivs
inc
mov
sub
std
andb
decb
jmp
js
mov
sbb
aaa
jle
pusha
or
push
mov
ja
testl
inc
in
add
fstp
add
in
mov
movsb
test
sbb
dec
outsl
insb
xlat
jb
lahf
push
stos
hlt
das
lock
roll
dec
pop
movsl
cmp
add
adc
push
test
lcall
inc
lahf
hlt
jnp
insb
add
mov
xor
cmpsb
arpl
jp
xchg
ljmp
jbe
sbb
or
xor
btc
jg
loopne
pop
testb
es
sbb
aas
out
loopne
mov
fnstcw
push
inc
push
call
test
and
std
fmuls
mov
add
pop
cmp
insl
sbb
push
mov
decb
call
push
decl
imul
mov
mov
push
xchg
sub
or
push
outsl
imulb
aam
mov
fstps
lock
inc
adc
clc
stos
mov
cmc
pop
xor
xorl
cld
push
cmp
ficoms
cmp
lock
jmp
aaa
sbb
cmp
sub
dec
ja
jmp
call
add
mov
push
data16
std
or
sbb
lock
cmpsl
sbb
mov
lcall
add
aam
sarb
adc
cmc
mov
cltd
sbb
xor
ja
rcl
jnp
dec
inc
jmp
lock
xor
call
xchg
cmc
test
mov
add
lcall
pop
hlt
mov
decl
push
loope
les
fwait
js
leave
lock
das
push
lret
clc
push
lret
fsubrl
add
lret
pop
out
inc
incl
dec
mov
stos
push
outsl
filds
outsl
ljmp
pushf
cmp
push
ljmp
sbb
add
cmp
lds
mov
stos
or
ja
add
cmc
mov
out
xor
sarb
xor
cmp
jg
cld
pushf
push
dec
aad
outsb
iret
cmp
mov
sahf
and
sti
aam
add
push
sub
add
out
push
mov
xor
lret
cmc
jnp
lock
outsb
enter
mov
inc
adc
js
adc
adc
jecxz
lret
lods
mov
xor
inc
ror
hlt
pop
cs
sahf
add
popf
cwtl
and
xchg
movl
mov
push
push
call
fwait
adcb
jmp
inc
fwait
loope
out
xor
add
dec
call
cld
mov
mov
mov
xlat
enter
or
pop
lock
xor
xchg
cwtl
jmp
call
and
and
sub
jb
pop
sahf
enter
dec
ljmp
icebp
out
xchg
mov
in
js
orb
mov
in
mov
xor
inc
in
sub
or
jb
js
pop
rclb
jecxz
test
inc
push
and
lock
cltd
lods
sub
cmp
push
std
mov
inc
xchg
or
lock
cmovle
cli
push
push
mov
movsb
jmp
add
pop
lret
dec
cmc
mov
movsl
faddp
into
daa
xor
arpl
dec
inc
cld
gs
xchg
dec
sub
dec
xchg
push
stc
outsl
mov
xorl
add
or
aaa
shl
and
imul
jle
out
cmp
xchg
jns
cmp
mov
inc
mov
mov
add
popf
icebp
es
mov
lret
cmp
mov
ret
pop
imul
out
add
push
sti
testb
mov
sbb
mov
sbb
push
lock
dec
sbb
movsb
push
pop
adc
xchg
sbb
mov
and
inc
lcall
pop
xchg
sbb
decb
rcrb
icebp
mov
popf
mov
out
int
xchg
pop
push
gs
rol
andb
inc
ror
dec
sahf
in
jnp
stc
loope
jle
ljmp
fidivs
js
aas
mov
cmpsb
cmp
mov
mov
mov
add
jmp
inc
xchg
add
lea
ja
and
mov
dec
push
mov
pop
ljmp
hlt
sbb
aam
adc
adc
fistpll
and
subb
xchg
je
adc
test
sbb
lods
adc
mov
test
sar
aas
mov
pushf
or
push
movsb
add
je
std
sbb
leave
test
inc
rorl
inc
arpl
cmp
imul
data16
inc
popa
js
or
jmp
adc
mov
in
xchg
daa
lcall
mov
iret
cmpsb
and
pop
inc
jp
rcl
or
subb
mov
test
adc
xchg
adc
add
xchg
movsb
aam
xchg
adc
pop
pop
adc
dec
loop
xchg
pop
sub
dec
icebp
cli
or
rol
xchg
cld
xor
les
clc
pop
scas
cmpsb
ficoml
enter
shrb
in
lret
xchg
jne
aaa
hlt
das
cs
aas
lret
out
stos
inc
add
and
cmpsl
mov
nop
jb
dec
push
cmp
sbb
sahf
xchg
cli
fists
lret
sarl
add
mov
inc
push
xchg
lock
add
es
pop
mov
add
popf
int3
pop
inc
push
scas
cmc
sti
and
or
pop
lods
mov
cmp
dec
adc
mov
push
fsubs
mov
test
movl
je
das
mov
push
mov
dec
call
or
pop
jle
jg
mov
mov
add
dec
pop
cmpsl
add
lret
movsl
push
inc
push
subl
hlt
ljmp
jbe
pop
fsubrp
add
shll
loope
clc
stos
mov
push
lret
xlat
out
push
adcb
xor
imull
push
call
dec
sbb
push
pop
dec
jb
lahf
sub
dec
clc
daa
sub
insb
insl
dec
pop
mov
push
test
iret
or
mov
in
leave
idivb
js
outsl
addl
add
setbe
mov
movsl
adcb
pop
imul
lea
andb
fs
pop
cld
divb
imul
je
scas
dec
mov
mov
jno
lea
bnd
vpunpckldq
aas
scas
sub
inc
fisubl
jp
test
mov
cmc
dec
icebp
push
mov
cltd
xor
xor
jp
je
jecxz
adc
movsb
cmc
incl
lea
rcr
mov
clc
lret
mov
fisubs
mov
fstps
push
push
xchg
mov
call
adc
and
mov
test
pshufw
sbb
jb
pusha
lock
loopne
jno
movsb
in
lret
add
xor
mov
inc
sbb
mov
lock
mov
mov
add
sarb
mov
push
mov
or
inc
and
int3
push
mov
inc
mov
and
mov
repnz
dec
aas
movsl
cmc
jno
inc
pop
jg
pop
int3
movsl
aas
add
loop
inc
mov
push
in
pop
ret
es
cmp
pop
and
lcall
cld
mov
push
lock
adc
jp
scas
mov
xlat
rorb
in
and
adc
jnp
aad
mov
sbb
repz
cmpl
orb
mov
loop
ret
xchg
pop
jmp
fsubl
xor
pop
loopne
pusha
add
clc
and
mov
jle
stc
inc
sbb
xchg
out
mov
clc
sub
dec
push
imul
rolb
ror
sahf
or
jb
mov
clc
sbb
or
add
xor
pop
in
push
das
push
dec
cwtl
sarb
popa
mov
ffreep
sub
rorl
jl
jp
repnz
ret
scas
xor
mov
lods
out
or
pop
aas
xchg
adc
call
test
xor
jmp
loopne
sbb
cmpsl
push
fsts
mov
sbb
sbb
cwtl
cmp
stos
dec
imul
push
outsl
out
add
stos
fwait
xor
shrb
fxch
pusha
push
lret
push
test
adc
test
lods
mov
jnp
data16
push
jae
mov
aas
sub
xchg
imul
sti
xchg
or
dec
add
cli
test
or
daa
outsl
or
ss
fwait
cmp
xor
xchg
sahf
cmc
pop
sbb
or
js
sub
std
xor
out
pusha
fstps
jge
mov
notl
cli
cmpsl
call
cli
js
subb
mov
cmp
sbb
add
lock
pop
push
cld
ds
pop
mov
cmp
arpl
jo
sbb
or
fmul
jp
adc
ljmp
ret
rol
enter
sbb
mov
icebp
mov
xchg
js
sbb
shll
mov
ret
divl
or
popf
add
dec
jmp
mov
insb
xchg
cmpsb
out
out
fsts
add
add
mov
mov
ret
or
inc
sbb
das
sti
xchg
aad
add
push
rolb
and
test
and
fwait
dec
push
inc
fwait
cmp
loop
mov
sbb
mov
dec
fwait
cmp
dec
pop
pop
outsl
test
sbb
aad
pop
xor
adc
fildll
or
in
xchg
les
sub
clc
jl
inc
xchg
in
xor
adc
pop
add
xchg
jns
scas
cmpb
cmp
sbb
fdivrs
add
jne
outsb
fadds
push
sbb
dec
jnp
rcrb
jl
je
dec
cmp
rolb
dec
loope
aam
or
sub
outsb
inc
loop
popa
mov
mov
shrb
mov
push
adc
ficoml
sbb
js
aad
sub
dec
aaa
lock
add
test
inc
xchg
pushaw
sahf
jecxz
cmc
inc
lock
pop
loopne
daa
mov
or
inc
jge
dec
hlt
push
pop
dec
xor
mov
movsb
inc
loopne
pop
ds
clc
mov
clc
daa
rclb
cmp
mov
pop
insb
inc
mov
adc
ret
stos
dec
mov
clc
xchg
pop
jno
mov
add
push
ja
les
std
aas
inc
add
roll
inc
fs
inc
cmpsl
shr
sub
xchg
xchg
xor
adc
inc
jp
jge
push
mov
out
sbb
xor
ljmp
push
out
sti
insb
jge
push
cld
or
fdivrl
fsubrl
mov
sbb
sbbl
filds
pop
lahf
rcr
and
das
gs
mov
jle
pop
repz
xchg
mov
or
fbld
lods
inc
push
push
out
jb
or
push
lea
ret
lret
daa
xchg
mov
jno
push
add
das
and
stos
pop
js
sub
je
push
shlb
dec
mov
movb
popa
out
or
stos
fildll
sahf
jge
call
popa
add
lretw
mov
repz
sub
push
or
subl
push
stos
test
pop
sbb
mov
shrl
jle
xor
into
push
and
data16
add
jbe
leave
lret
fistpll
and
push
jmp
adc
push
iret
inc
add
pop
sti
dec
test
or
dec
mov
call
cli
add
ja
outsb
sbb
add
adc
cmp
iret
test
loopne
loopne
repz
pusha
or
js
repz
in
mov
pop
sarb
add
mov
mov
arpl
push
int
add
xchg
dec
xor
push
in
rcr
std
insb
jno
rcll
jae
push
xor
jge
or
push
mov
test
cwtl
cmpsb
pop
sti
fmull
ss
lret
fimull
dec
mov
adc
add
mov
dec
cmp
adc
fadds
lods
sub
subl
dec
jle
mov
or
xor
jp
dec
adc
adc
dec
cmpsb
add
jg
push
xchg
iret
push
in
sub
in
or
mov
fimull
jg
push
ja
fadds
je
pop
sti
or
mov
xchg
lea
outsl
cmp
sar
jb,pt
test
xor
sbb
clc
test
jge
scas
rorb
mov
subb
shrb
or
adc
imul
lods
shr
icebp
mov
pop
and
addb
jmp
loop
mov
or
outsl
outsb
in
add
lock
push
stos
daa
aam
imull
push
dec
out
inc
xchg
or
xchg
clc
aad
aaa
stos
dec
out
es
and
gs
adc
cmp
cli
cmpsb
add
scas
mov
pop
cmpsl
pop
push
push
mov
lcall
mov
out
push
and
mov
mov
lock
sbb
xchg
add
test
sti
sbb
or
bound
insb
jl
loopne
dec
or
addb
jae
daa
jae
fimuls
test
test
xlat
sbb
fnsave
or
adc
push
aas
sub
scas
jle
test
pop
in
or
adc
and
push
call
jp
push
mov
pushf
ret
xchg
xor
fcmovu
loop
popl
in
in
cmp
lds
mov
adc
mov
std
sub
pusha
sahf
jno
mov
mov
xchg
rcr
std
scas
pop
fistpll
arpl
push
dec
rcrb
push
cld
scas
jp
mov
mov
cmc
add
add
push
jg
cs
lret
fistpll
ja
ret
xchg
add
sub
xor
pop
xlat
sbbl
fs
mov
push
dec
inc
mov
adc
jle
pop
js
xchg
lods
sub
es
js
sbb
fisubrl
dec
subl
shl
sbb
adcb
ret
enter
hlt
pop
shlb
xorl
and
adc
mov
icebp
xor
stc
icebp
nop
div
and
jmp
dec
ljmp
jmp
jecxz
xor
xchg
nop
or
in
addb
and
xor
jnp
pop
jl
cmp
stos
xchg
ret
pop
mov
mov
or
iret
std
push
push
movl
shr
push
in
jbe
jb
add
sbb
ret
xchg
xor
and
inc
fsubr
pop
adc
in
mov
pushf
fisubrs
out
in
pop
insb
pusha
pop
mov
mov
add
adc
adc
mov
cli
ds
or
mov
int3
test
test
dec
adc
adc
orl
stc
lock
outsl
shrb
mov
mov
push
adc
cmp
call
into
cmp
or
adc
fstp
push
add
aaa
or
mov
fidivl
sub
je
imul
mov
test
scas
add
icebp
scas
aam
xchg
js
push
int
ss
cmp
ds
out
inc
lds
push
mov
fwait
shr
icebp
sarl
mov
adc
data16
push
out
inc
jge
adc
xor
dec
xchg
rorl
test
push
sbb
sub
lret
repz
int
fstpl
inc
aad
es
push
outsb
mov
mov
mov
sbb
daa
ljmp
stos
repz
ds
sub
out
sti
loopne
inc
adc
xchg
ljmp
mov
cltd
or
and
cmc
stos
int3
aas
icebp
or
cs
or
inc
sti
test
aas
dec
sahf
lahf
cli
push
clc
pop
sahf
enter
data16
icebp
insl
xor
jg
adc
mov
or
je
add
xor
in
pop
mov
jl
add
push
hlt
or
and
jmp
mov
jmp
fisttps
loope
iret
cmc
pusha
push
lret
sub
icebp
fs
mov
sahf
or
and
inc
sbbl
in
and
shll
int
mov
aas
les
inc
inc
fwait
xor
cs
orl
faddl
adc
jecxz
xor
or
loope
sub
push
xchg
enter
lods
or
daa
cli
adc
jmp
xchg
push
pop
insb
inc
lods
dec
adc
or
bts
mov
adc
push
das
pop
inc
pop
lods
mov
js
jl
fiaddl
xchg
outsb
inc
jno
push
adc
or
or
mov
pop
cmp
sbb
addb
call
inc
cld
add
mov
and
push
mov
cmpsl
movb
fcoml
call
cld
cmc
sub
sbb
out
incb
or
ret
mov
ljmp
in
cmp
cmc
xor
xchg
in
push
mov
xchg
ss
inc
and
je
rcrb
xchg
mov
notl
das
xchg
add
mov
hlt
push
das
mov
pop
shlb
enter
adcl
xchg
loop
movsb
movsl
pop
adc
xchg
cmpsl
or
insl
nop
loop
jne
es
jg
in
lods
inc
push
lret
sti
adc
jg
stc
incb
daa
add
ret
cwtl
sub
js
out
pop
stos
repz
rcr
dec
cwtl
sub
xchg
ror
inc
push
mov
mov
jmp
sub
cmp
xchg
arpl
scas
or
enter
in
jl
rclb
addl
jns
call
cmpsb
jecxz
hlt
pop
mov
xor
cmp
jl
in
loopne
mov
lock
std
inc
mov
sti
test
xchg
sbb
lods
and
clc
and
outsb
fsubrl
adc
ljmp
rclb
aam
inc
aaa
push
lds
add
mov
jp
mov
and
push
xchg
icebp
dec
push
jle
imul
cmp
inc
ss
rorl
aas
xchg
aam
cld
lret
inc
mov
add
push
xor
push
cltd
out
dec
mov
adc
and
into
push
cmp
je
loopne
jo
addb
in
xor
adc
inc
test
stc
loope
jl
cmp
ja
shll
jp
addr16
mov
ret
in
inc
into
jno
jnp
fdivr
inc
push
cmp
sbb
adc
push
adc
push
stos
adc
js
pushf
add
mov
fs
adc
add
lret
pop
mov
out
in
lds
movl
clc
in
subl
loope
sub
icebp
push
dec
sbb
cmpsl
adc
pcmpgtb
int3
in
fbstp
loope
add
or
std
movsl
mov
sub
arpl
pop
sbb
jmp
dec
fisttpl
dec
sbb
outsl
and
mov
adcb
cmp
ja
loop
adc
jbe
dec
push
ljmp
jne
fidivrs
sbb
add
repnz
addb
repz
movb
xchg
lock
in
lret
cmp
sbbb
jno
les
mov
shl
or
rorb
fwait
popa
repnz
mov
and
pop
push
ss
mov
addr16
stos
xor
mov
xor
sbb
mov
push
pop
push
inc
mov
mov
xchg
push
fisttpl
addr16
das
arpl
push
mov
mov
dec
pusha
std
pop
pop
in
add
sub
push
iret
adc
in
js
outsl
cmp
push
adc
or
add
in
or
and
dec
gs
mov
fdivrp
xlat
scas
jb
jp
and
jnp
add
dec
add
icebp
push
fbstp
cmp
add
pop
sbb
mov
mov
pop
leave
das
or
mov
sbb
lret
sub
fildll
push
shll
js
cmp
mov
call
sbb
jo
enter
jp
lock
sarb
push
in
pop
cmp
cmpsl
mov
fwait
adc
pop
or
pusha
cmp
stos
clc
mov
stos
mov
hlt
mov
add
mov
icebp
xor
fistpl
rcrb
das
iret
jge
int3
jo
test
inc
movsl
sbb
lds
jge
mov
cmp
xor
mov
pop
scas
push
add
sbb
cmp
outsb
shll
xchg
outsl
cli
pop
mov
add
adcl
aas
pop
out
jp
adc
mov
jl
push
fdivrs
aaa
fistpl
dec
in
jne
adc
add
mov
add
bound
adc
push
rorb
scas
pop
push
scas
inc
jmp
push
aad
mov
icebp
and
sbb
xor
ss
jno
inc
push
mov
add
add
int3
aad
mov
pop
xchg
es
adcb
fwait
test
lret
sbb
mov
lret
cld
popf
cmp
rol
fcmovbe
push
push
jg
jg
scas
dec
push
test
push
idivl
std
insb
and
adcb
cwtl
sarl
leave
add
addr16
gs
cmp
dec
lds
mov
in
add
loopne
lcall
popa
test
nop
daa
cmp
pop
movsb
in
test
mov
push
test
pop
stc
and
mov
sbb
shrb
out
add
jl
loope
push
or
loopne
or
outsl
cmpsb
jge
insb
imul
inc
clc
cmp
mov
filds
push
pop
ds
cmp
or
cmp
add
fbld
add
jns
mov
cmp
jle
lcall
loop
lock
sub
mov
or
ljmp
push
mov
add
inc
and
inc
mov
pop
loope
or
rolb
cmp
int
in
loopne
jbe
dec
into
cld
inc
add
mov
loopne
jge
jb
mov
das
xchg
xor
mov
in
stc
aad
pop
pop
jle
cwtl
adc
add
hlt
push
ret
shrl
inc
pop
add
loop
push
dec
and
nop
mov
in
lcall
push
xchg
clc
rorl
and
iret
je
adc
cmp
adc
loope
stos
adc
fdivl
scas
xchg
push
mov
pop
pop
fldl
das
bound
les
push
xor
inc
test
sbb
push
dec
in
lods
loopne
sub
cmpsl
negb
stos
outsb
sbb
popf
pop
adc
mov
test
jp
rol
sub
push
lods
test
pop
or
or
movsb
cmp
and
xchg
ljmp
and
out
outsl
popa
jecxz
and
sbb
sub
sbb
imul
xor
cs
push
aad
pop
ret
das
adc
adc
jp
or
mov
add
sbb
or
stc
add
addr16
cmp
int3
flds
sub
jmp
and
cmc
stos
mov
daa
mov
sbb
stos
add
mov
cmp
clc
xchg
add
fwait
add
sub
cmp
js
mov
arpl
leave
add
mov
adc
js
mov
cmp
mov
scas
inc
std
jmp
stos
in
mov
sub
mov
mov
repz
out
pop
mov
addb
push
test
pop
ret
aas
addb
or
cmc
dec
frstor
cltd
outsb
push
in
adc
xlat
ret
fnstenv
adc
cmp
push
sbb
jae
pop
sbb
rorl
inc
ds
xor
add
idivb
pop
sbb
movsl
push
push
lea
dec
imul
aas
mov
mov
and
lcall
add
leave
repz
fcoms
rorl
dec
loopne
cmp
sub
ss
mov
andb
add
pop
subl
jg
or
subb
mov
xor
out
ljmp
fxsave
sahf
push
mov
pop
lahf
pop
add
sbb
mov
repz
outsb
jns
sahf
jmp
and
ss
cmpl
xchg
shll
mov
mov
stc
cltd
jno
adcl
xor
xor
sub
dec
sbb
cmp
insb
add
inc
add
sbb
jnp
outsb
cmp
cmc
push
cwtl
std
mov
pop
lds
fadds
insb
ret
stos
jbe
add
push
cs
mov
lret
ret
mov
mov
sti
ja
lea
xchg
out
aaa
imul
push
hlt
js
xor
cld
call
pop
mov
mov
add
aas
stc
add
les
xchg
add
push
pusha
add
sub
addr16
pop
enter
test
int
or
cwtl
mov
mov
push
fs
inc
inc
lods
pop
imul
aaa
fwait
ss
adc
mov
pop
mov
fdivl
pushl
dec
pop
sub
ret
scas
pop
push
ss
adc
je
mov
xchg
lret
add
sbb
ljmp
pop
adc
mov
and
pop
cmp
mov
jae
dec
fucomi
imul
sbbl
inc
out
daa
in
in
clc
repz
or
outsb
out
sub
add
imul
fdiv
cmpsl
adc
pop
and
orl
push
inc
je
insl
addl
push
pop
arpl
rcll
jns
notb
sbb
cmp
test
sub
test
and
lret
xchg
add
in
les
xor
inc
pop
ljmp
int
jnp
push
pop
loope
add
push
mov
sbb
add
push
test
insb
test
jb,pn
fisubrl
jno
popf
into
mov
cmp
orb
and
clc
cwtl
fisttpl
or
cltd
jb
add
sbb
sub
push
das
addr16
ja
jb
leave
jne
notb
xor
sbb
rolb
aas
jno
add
and
push
adc
adc
aad
repnz
mov
scas
mov
mov
outsb
cmc
pushf
jecxz
cmp
xchg
adc
aaa
mov
jnp
pop
jp
push
fcmove
inc
shll
lcall
xchg
cmp
loopne
jae
movsl
sbb
enter
daa
push
xchg
adc
test
push
push
jb
mov
mov
push
arpl
fistps
sbb
dec
mov
or
pop
add
mov
movsl
stc
pop
push
ret
jns
stos
adc
mov
xor
lcall
cli
clc
or
jnp
movsb
leave
pop
sbb
pop
add
add
fstpt
je
ljmp
ds
stos
fnop
adc
stc
roll
mov
mov
mov
fisttpll
mov
xchg
cmpsl
aad
mov
push
cmpsl
jnp
jns
mov
daa
rclb
jecxz
pop
mov
xchg
add
mov
out
add
lods
ret
cmp
in
testb
or
movups
mov
jmp
lods
or
test
stos
inc
jl
ret
leave
xchg
or
lea
jp
xor
loopne
jmp
xor
fimull
pop
aaa
push
pusha
fnstcw
daa
add
jbe
pop
outsb
out
stos
cmpsb
cmpsl
and
lcall
or
jno
or
mov
mov
jmp
addb
ret
jmp
outsb
jne
or
sbb
fnstenv
jl
daa
shrb
jp
xchg
xor
mov
stc
xchg
clc
push
sbb
jno
jo
cmp
mov
rorb
pushf
popa
inc
popf
adc
outsb
fnstenv
movsl
jo
repz
xchg
clc
add
xor
cmc
cmp
pop
jae
fisubrl
pop
add
or
mov
xor
ja
pop
daa
test
fstpt
pop
cmp
push
les
jp
daa
inc
mov
push
cmp
pop
test
or
or
xchg
es
inc
lods
mov
mov
jecxz
mov
lods
jnp
push
je
xor
xchg
dec
lret
das
inc
scas
mov
orb
rcrb
mov
outsb
add
push
push
push
xchg
arpl
lds
mov
pushf
fisubs
fisubrs
movsb
pop
push
movsl
pusha
xchg
cmp
mov
orl
pop
lret
scas
imul
stc
mov
pop
pop
adc
mov
ljmp
adc
lods
js
jp
push
in
movsl
push
pop
aad
jns
cltd
mov
test
and
js
adc
ret
cmc
add
fcoms
jns
jmp
mov
out
rorl
push
or
xchg
dec
adc
mov
repnz
cwtl
add
jecxz
inc
push
lcall
push
pop
jge
xchg
in
sbb
rolb
scas
cld
add
pop
imull
sub
andb
lret
shrb
ss
jb
push
inc
adc
push
std
xchg
xor
lahf
push
std
cld
xor
push
insb
jns
jne
enter
pop
int3
xchg
jecxz
repz
mov
scas
jecxz
mov
inc
mov
mov
les
fstl
xchg
sub
jns
add
add
push
sbb
xor
jne
insl
push
cwtl
mov
fistpl
pop
std
and
rcrl
mov
cmp
sti
cwtl
add
jo
pushf
lods
jo
mov
arpl
mov
rorb
outsb
jmp
dec
outsl
cmp
pushf
cmp
scas
inc
dec
jmp
or
and
into
add
cltd
imul
pop
shlb
daa
inc
lea
cltd
fildll
sbb
scas
je
pop
adc
mov
jl
mov
cmc
mov
sub
xor
sbbl
repnz
icebp
call
ret
shrl
dec
out
orl
lcall
sub
mov
repz
cmp
std
pop
push
add
cmp
mov
mov
add
out
out
insl
sbb
mov
dec
lret
adcb
xchg
jp
jo
pop
scas
icebp
jbe
add
packsswb
ret
push
dec
inc
aad
dec
or
loop
push
test
push
xor
pop
inc
xchg
add
cmp
pop
sbb
add
fadds
loopne
adc
cmc
pop
or
adc
int
jb
sub
xor
stc
cmpps
lret
test
sub
lea
js
push
mov
jo
jg
mov
pop
pop
fiadds
fadd
adc
pushw
inc
jmp
and
adcl
clc
xchg
jno
test
add
insl
sti
mov
bound
insb
mov
addr16
add
mov
fincstp
pop
mov
outsb
add
jbe
pop
outsb
cmpsl
leave
add
dec
inc
add
ficoml
stos
rcl
imul
jl
lahf
pusha
push
push
ja
pop
in
inc
lea
or
sub
out
and
jmp
pop
pop
sti
cmpsl
xor
pop
sbb
les
cmp
sti
mov
xchg
adc
icebp
lods
lcall
xchg
or
jg
jmp
aad
jge
jle
inc
arpl
inc
xlat
and
pop
xchg
daa
inc
mov
imul
add
out
mov
sub
jg
test
loope
or
xor
mov
jl
mov
sbb
xorb
dec
js
push
or
lahf
and
dec
and
mov
cmpsb
mov
icebp
rcr
popa
ret
sbbb
push
mov
add
xor
push
jg
ja
bound
jge
nop
mov
fnsave
mov
sbb
popf
add
aam
loope
lea
mov
stos
jne
sbb
add
mov
or
mov
outsl
fucomip
push
aad
jno
addl
mov
pop
lock
mov
xchg
movsl
adc
dec
ret
fs
cmpsb
clc
adc
push
xor
mov
jns
xchg
mov
adc
lds
cmp
add
pop
xchg
jns
adc
fwait
push
out
xor
imul
lds
stos
push
mov
loopne
cltd
cmpsl
testl
xor
mov
push
cmpsb
bound
pushf
add
arpl
ja
testb
or
push
jno
xor
jno
sub
pop
dec
jle
adc
fucomp
andl
inc
cmpsl
jno
pusha
fwait
mov
fmuls
adc
ss
jmp
sbb
pop
mull
aad
cmc
mov
test
xchg
mov
push
test
mov
or
sbb
xlat
push
xor
adc
jp
lahf
sahf
inc
mov
ja
imul
stos
dec
repz
dec
push
mov
scas
mov
dec
sbb
out
add
inc
mov
xchg
stc
mov
lods
in
enter
pop
or
dec
jmp
mov
and
les
test
cld
pop
pop
push
mov
mov
pop
push
and
sbb
cld
insl
fwait
es
inc
and
lret
add
les
loopne
jge,pt
or
dec
dec
roll
pop
pusha
test
lret
icebp
mov
sub
mov
popf
sub
mov
orb
rcpps
xchg
bnd
sub
out
cld
roll
pop
dec
shlb
aad
or
inc
xchg
nop
sbb
jg
clc
lret
lods
les
aad
scas
cmpl
jl
loope
faddl
in
pusha
adc
xchg
mov
jp,pn
xchg
int3
push
test
es
inc
adc
dec
lds
and
repnz
shll
test
insb
mov
inc
and
push
shlb
xchg
cmp
nop
cwtl
pushf
sbb
sub
dec
mov
and
movsl
pusha
fs
aas
loopne
adcb
jne
xchg
adc
lods
ret
dec
and
push
or
fsubrs
add
ret
pop
push
mov
outsb
push
es
xchg
lea
test
imul
adc
ljmp
jge
cld
loopne
and
pop
sbb
cmp
xor
jecxz
dec
and
cmc
and
pop
inc
std
ret
fadds
or
mov
push
leave
mov
mov
fnstsw
fcomip
mov
cwtl
pusha
repnz
repz
ret
mov
xor
enter
push
addl
xlat
clc
cld
test
lret
inc
xchg
xchg
fstps
int
inc
cmp
add
test
jg
rolb
mov
push
mov
mov
pop
adcb
shll
sbb
or
add
scas
jne
and
jb
mov
jb
cmp
mov
es
daa
ret
adc
popl
daa
push
pop
stos
cmp
or
mov
ret
iret
test
mov
mov
andb
pop
sub
sub
les
pop
roll
push
push
icebp
popf
pop
mov
push
cmpsl
inc
loop,pt
fbstp
add
into
inc
jg
add
jns
lds
mov
bound
push
cmp
jne
pop
jno
adc
mov
test
ljmp
hlt
and
dec
sbb
adc
pop
fiaddl
pop
out
mov
sub
pop
pop
xchg
pop
ds
adc
mov
daa
bound
movaps
ficompl
dec
arpl
loope
ret
sub
add
shll
movb
xlat
or
ret
mov
mov
or
das
inc
loope
pop
les
jne
lock
imul
scas
imul
push
sub
push
fistl
or
sub
in
sbbl
dec
popa
test
shrl
xchg
cs
or
cltd
jecxz
xchg
icebp
mov
rcrb
cmp
mov
sarb
push
or
add
ret
pop
push
sbb
gs
ljmp
cmp
fcomps
insb
stos
pop
mov
jle
fimull
addl
pop
pop
inc
scas
mov
push
int3
cltd
scas
movsb
repz
push
fwait
mov
mov
sbb
test
mov
xchg
insl
add
fs
push
bound
push
stc
aaa
loope
in
jp
pslld
roll
imull
loop
mov
push
inc
xor
mov
cmp
hlt
jecxz
sbb
cmp
sub
sbb
pop
mov
imul
xchg
push
or
add
enter
outsb
addl
addr16
dec
pop
dec
out
xor
dec
andl
pop
mov
mov
mov
add
test
js
js
mov
adc
push
cmp
add
imulb
bound
mov
or
xorl
xchg
pop
addr16
leave
add
sbb
mov
jp
cltd
incl
cld
enter
cmp
or
pop
add
pop
inc
loopne
js
and
and
pop
sbb
xchg
add
pop
nop
int
jb
das
jnp
pop
add
and
ja
xor
movsb
cmp
sbb
fs
orl
mov
xchg
and
dec
pop
mov
mov
hlt
sub
repz
out
or
push
push
sub
add
rclb
rcl
test
xchg
mov
loope
lret
cmp
inc
xchg
daa
sub
loopne
notb
xor
dec
dec
jp
pusha
lahf
xor
jecxz
pop
push
dec
pop
mov
je
pop
hlt
add
aam
xchg
lret
insb
js
fbstp
fsubrl
js
dec
aas
jge
push
sbbb
mov
icebp
dec
pop
adc
movl
sbb
sbb
inc
lahf
jo
pushf
push
xor
stos
xor
inc
pushf
insl
arpl
xchg
jne
push
aaa
mov
outsl
pop
jne
push
sbb
stos
add
cmp
push
dec
jo
std
or
loope
test
repnz
mov
lock
jb
push
push
mov
sbbb
in
inc
repz
ret
in
pop
lret
inc
pop
add
hlt
push
dec
clc
add
mov
or
icebp
mov
or
pop
js
fsubr
jae
roll
pop
je
xchg
out
jno
xchg
imul
jns
push
push
lea
out
icebp
fiaddl
test
push
add
pop
cmpsb
mov
sub
divb
lds
mov
pop
push
mov
lock
adc
pop
adc
mov
mov
add
popf
or
sbb
loopne
popf
stos
leave
insl
push
std
addr16
cmp
xor
cmpsl
jo
and
sbbl
add
pop
ja
popf
adc
jbe
ljmp
ret
push
xor
and
pop
and
mov
add
jno
jno
mov
fyl2x
das
rorb
jmp
insl
mov
fnstsw
je
mov
fldt
mov
mov
or
shr
mull
sub
push
js
jg
subb
insl
mov
loopne
shl
popa
mov
jne
sub
movsl
orl
mov
sub
in
pop
test
mov
shlb
cs
mov
xor
inc
mov
fs
inc
jge
sbb
je
dec
or
sbb
push
add
lret
mov
test
sub
xchg
fsts
cmc
xor
jbe
cmp
xchg
enter
aaa
mov
scas
add
add
jnp
int
scas
push
gs
inc
cmp
mov
in
ljmp
add
and
xor
push
dec
inc
in
mov
inc
fwait
movsb
xchg
out
jge
pop
xchg
adc
lret
repnz
jne
ror
mov
sub
lods
mov
js
mov
or
aam
leave
inc
faddl
shll
fs
repnz
and
mov
sub
les
add
sub
jecxz
pop
popa
mov
cmp
mov
out
add
fwait
shl
sarb
dec
lcall
xchg
add
movsb
cmp
xor
dec
push
push
dec
scas
paddusb
pop
adc
mov
iret
out
sub
aam
test
dec
fisttpll
std
push
call
mov
scas
add
xor
test
lods
out
fwait
int
lock
call
into
das
btc
jmp
mov
pusha
mov
imul
dec
inc
test
xor
out
ds
nop
mov
push
in
cmc
pop
cmpsl
mov
jae
inc
add
xchg
add
shlb
test
mov
add
mov
or
mov
psubd
fimull
fcompl
sub
pop
mov
out
mov
xor
xor
mov
pop
mov
xorb
or
pop
mov
adc
ret
xlat
dec
cmpb
xchg
mov
push
jle
adc
cli
dec
cmp
pop
jne
pushf
ret
xchg
or
adc
aad
imul
daa
or
xor
mov
mov
in
imul
push
adc
xchg
pop
fucomi
in
dec
pop
add
sbb
dec
xlat
fdivp
ret
mov
dec
leave
les
sbb
je
cld
iret
mov
lods
dec
pop
js
mov
sub
xor
sbb
in
mov
or
sbb
aad
aas
mov
ds
call
outsb
loopne
adc
mov
mov
stos
in
push
lods
mov
dec
push
fidivs
rorl
pop
mov
and
dec
mov
mov
mov
lahf
inc
fildll
mov
daa
lea
inc
jp
in
inc
das
or
aam
dec
add
ss
aaa
sub
ret
cmovae
hlt
lds
mov
jns
js
outsl
fs
xchg
dec
add
jmp
sbb
jp
pop
icebp
test
mov
pop
push
sub
jbe
mov
sbb
mov
test
fadd
bound
sbbl
sub
jo
lock
pushl
mov
xchg
int3
bound
sbb
jbe
cmp
mov
ss
clc
ljmp
enter
or
mov
push
cld
in
fmulp
push
cltd
fbstp
add
clc
mov
fnsave
out
sub
leave
mov
shrb
dec
cmp
or
xor
ret
pushf
lahf
add
mov
fnstsw
cmp
mov
movsl
xor
je
lock
push
hlt
jmp
or
jne,pn
loope
mov
xchg
push
dec
xchg
cmp
mov
inc
xchg
add
ja
pushf
pop
xchg
push
sbb
jle
or
loope
push
pop
add
cmp
sbb
xor
mov
and
cmpsl
lods
mov
push
ret
push
and
sub
rcrl
fistl
mov
dec
in
loop
sbb
fcom
adc
cmp
push
xchg
dec
mov
sahf
out
adc
inc
cmpsl
inc
add
mov
mov
push
push
mov
stos
xor
xor
and
out
int
aad
adc
and
pop
negb
call
cmp
mov
jecxz
cmpsl
pop
lcall
pop
xor
pop
push
nop
ljmp
mov
test
add
mov
add
cmp
mov
lock
pop
jp
ret
loopne
xor
push
in
sar
jecxz
mov
fwait
es
lods
imulb
loope
jno
test
mov
movsb
or
popa
or
je
mov
or
jae
cmp
stos
pop
ret
daa
mov
pop
sub
inc
aam
push
hlt
ffree
cmpsl
sub
pop
popa
jmp
sub
sub
mov
scas
je
cmp
out
xchg
mov
incl
push
loope
dec
fimull
pusha
add
loopne
stc
and
je
push
or
ljmp
push
pop
sarb
icebp
sbb
jg
int
add
xchg
lcall
shll
arpl
adc
pop
mov
rcrl
leave
scas
adc
mov
or
pusha
ficoms
sub
or
sub
pop
ret
cltd
jecxz
repnz
les
add
imul
test
xlat
call
ja
cld
pop
and
out
imul
or
xor
in
jge
loopne
movsb
mov
or
jno
xlat
or
pop
xchg
ja
outsl
sub
test
pop
sbb
rolb
sub
int
dec
and
repnz
jp
pop
aas
lret
idiv
sbb
inc
sarl
mov
push
add
jo
sbb
out
sti
call
outsb
pop
mov
jp
pop
test
ljmp
jno
out
aas
xchg
sbb
add
mov
lods
call
rolb
in
mov
pop
cmp
mov
mov
and
imul
mov
sbb
pop
leave
mov
sub
js
sub
popa
push
cmpsb
sbb
mov
shl
in
iret
mov
jnp
inc
sub
adc
loop
sahf
sub
addb
push
lahf
repz
sbb
or
scas
mov
jecxz
mov
test
xorl
xchg
ret
xchg
mov
jb
push
aas
jo
inc
setne
into
push
ljmp
sarl
mov
nop
push
test
jl
mov
pop
mov
cmp
ret
inc
push
dec
lock
dec
in
rorl
int
cltd
inc
pop
jl
mov
cmp
xchg
xor
clc
sub
sbb
cmp
mov
cmpsb
mov
fsubl
inc
fsubp
lock
push
and
dec
dec
shll
mov
mov
stos
xor
cmpsl
mov
fcoms
aad
pop
or
and
sahf
pop
mov
xchg
sbb
or
cmpsl
push
sbb
inc
ret
mov
push
add
stc
cmp
fcmovbe
movsl
jge
into
out
pop
js
mov
pop
cli
sbb
sub
addr16
mov
inc
mov
cmpsl
inc
mov
jns
adc
push
mov
inc
xor
mov
andb
xchg
jno
lcall
mov
sub
aam
jge
push
pusha
adc
mov
out
mov
adc
dec
aad
fsubrs
jno
rorl
in
cs
dec
mov
int
mov
and
dec
test
rcrb
mov
mov
pushf
sbb
das
je
movsb
scas
call
adc
inc
in
fwait
int
outsl
inc
hlt
push
sub
sbb
jp
pop
adcl
into
dec
push
fdivrs
or
sub
inc
or
mov
sbb
push
mov
xlat
xor
in
mov
aas
xor
sete
lahf
dec
or
icebp
aam
scas
mov
insl
add
xchg
push
rolb
jnp
js
test
lahf
mov
mov
xor
sarb
jecxz
lret
cmp
mov
or
fildl
push
mov
dec
icebp
pop
pop
push
into
shl
arpl
pop
mov
cli
pop
std
mov
sbb
lret
and
dec
cltd
sbb
addr16
insl
push
in
add
inc
insl
cwtl
dec
into
push
adc
cld
imul
dec
jle
cmc
or
mov
mov
leave
shll
pop
cmp
in
push
mov
data16
fs
fdivs
pushf
jg
out
ret
ds
push
lret
push
in
scas
stos
and
or
dec
push
sbb
inc
int
push
sbb
inc
repz
inc
jg
pusha
fbld
jne
shrl
scas
popa
mov
fcmovnb
mov
aaa
dec
movsb
mov
and
movsb
mov
xchg
mov
and
sbb
add
push
fidivrl
xchg
pop
scas
inc
das
cmpb
outsb
xchg
adc
or
outsl
lret
and
mulb
aas
insl
push
sub
add
mov
imul
cmp
in
loope
xor
add
into
lds
lock
push
scas
or
repnz
test
mov
mov
push
mov
imul
mov
aaa
mov
hlt
lds
sub
imul
sub
push
scas
into
add
push
aad
fcomps
loop
lods
and
xchg
aaa
push
ss
add
push
dec
bound
xchg
mov
push
popa
xlat
sub
xor
and
adc
sbb
subb
out
les
ds
and
nop
jg
leave
lret
add
insb
je
in
sub
xchg
cmp
pop
push
filds
scas
negl
es
or
shrb
jp
push
cmp
call
loopne
cmp
icebp
pop
loopne
xchg
mov
jo
xchg
adc
enter
scas
outsb
pop
sbb
add
lcall
cwtl
mov
pushf
cmp
ss
jb
sub
push
pop
mov
outsl
pop
mov
jmp
push
lcall
mov
push
and
popf
push
sahf
loop,pn
inc
and
addb
cld
into
lahf
incb
ds
mov
inc
lods
into
std
xchg
xor
or
fsubl
push
and
rcrb
or
or
popa
jo
loopne
inc
stos
inc
sbb
stos
call
lcall
iret
lods
shll
popa
inc
push
jmp
jle
in
sbb
mov
loope
cmp
push
jno
fs
mov
dec
ja
mov
jg
adc
faddl
hlt
movsb
pop
jno
sbb
mov
mov
aaa
ret
mov
inc
mov
lock
pop
sbb
pushf
popa
imul
and
mov
dec
jl
enter
addr16
adc
or
enter
jmp
decb
pop
cmp
fsubrs
popa
mov
push
jge
xchg
mov
nop
and
ljmp
push
or
hlt
dec
ret
jg
pop
sub
into
push
cmc
outsb
arpl
or
arpl
mov
cwtl
std
imul
shrw
sub
loop
mov
mov
js
or
pop
fsts
fwait
nop
fcmovbe
daa
dec
mov
or
mov
les
outsl
sar
aas
stos
divl
dec
cmc
push
mov
mov
shll
cmpsl
sbbb
push
cmp
cmp
adc
add
ljmp
push
lods
loope
add
sbb
jg
mov
iret
push
scas
adc
pop
lea
dec
out
and
fisttps
add
jecxz
and
sbb
addr16
adc
jb
in
imul
call
mov
jo
enter
loop
jae
dec
jp
jne
mov
xlat
xorl
dec
aaa
jge
xlat
ljmp
decl
jge
out
shrl
mov
lcall
add
icebp
inc
dec
push
push
data16
rolb
aas
fcomp
into
mov
xor
push
mov
lods
cltd
int
aam
adc
mov
pop
and
push
test
test
aam
dec
add
and
lds
bound
repnz
push
movsl
adc
inc
loopne
mov
es
and
inc
rclb
inc
jmp
or
icebp
dec
inc
sbb
cmp
mov
in
nop
mov
pushf
push
inc
xor
push
cli
cwtl
add
jae
add
sbb
push
dec
mov
xchg
icebp
cli
mov
nopl
jl
fcoml
pop
cmc
inc
movsl
jle
push
xchg
mov
xorb
mov
mov
pop
and
andb
push
call
push
loop
sti
push
out
movsl
scas
mov
mov
fs
mov
inc
push
jnp
and
and
lods
imul
call
test
mov
adc
xchg
sub
and
add
ja
xchg
add
sbb
inc
cli
test
add
mov
jne
mov
into
cs
add
jbe
mov
mov
fbstp
pop
pop
add
jl
cld
lds
test
adc
arpl
ja
lcall
ficompl
inc
sti
fldenv
jno
loope
ss
mov
inc
mov
push
call
sbb
in
ret
ret
sarl
or
in
pop
out
adcb
jecxz
inc
or
xor
inc
rcrb
js
mov
prefetchw
mov
adc
out
fiaddl
rcll
ret
ret
insb
cmp
and
jecxz
add
ja
cmp
jp
movsl
shlb
xchg
inc
lea
add
sbbl
dec
dec
ljmp
cmp
mov
jbe
xor
scas
mov
pop
pop
stos
xor
xor
mov
int3
mov
stos
notl
cmpsl
mov
mov
das
sbb
loop
xchg
inc
cmp
adc
lock
lock
aas
sub
shrl
inc
test
sbb
mov
rcl
dec
pop
mov
arpl
add
jecxz
rolb
icebp
sbb
test
lret
pushf
ljmp
daa
lods
xchg
and
pop
lcall
adc
rcll
ljmp
and
lods
jnp
mov
xor
push
dec
xchg
and
mov
cs
ja
les
cmp
jge
add
popa
inc
and
sub
push
jle
pop
and
inc
push
arpl
mov
fwait
push
dec
push
mov
sahf
add
push
cmp
in
adc
bound
loop
push
mov
repz
sub
push
leave
mov
xchg
lock
sti
cmp
cltd
mov
cmc
test
xor
dec
xchg
jae
sub
sbb
testl
bound
sahf
sbb
push
pop
xchg
jmp
inc
xor
test
outsl
xchg
mov
popa
inc
add
mov
dec
mov
lret
aaa
es
into
xor
add
adc
mov
push
out
pop
add
mov
les
mov
fdivrl
lea
inc
push
pop
mov
or
cld
cmpl
jae
fsubrl
js
xchg
fisttps
lds
jg
jl
push
iret
fists
adc
adc
xchg
inc
imul
jp
orb
dec
fimuls
pop
pop
hlt
jecxz
xchg
inc
sub
sbb
inc
fisubrl
orb
mov
cld
inc
inc
outsb
pop
ret
outsb
jle
push
loope
rorb
mov
in
jp
dec
imul
mov
cmp
dec
mov
push
js
mov
aas
adc
adc
fistpll
sbb
jns
jl
lock
add
loope
sbb
repnz
lods
adc
std
pop
movd
jns
enter
xchg
cmp
fwait
leave
cmp
icebp
inc
push
lods
jbe
sub
dec
daa
mov
xchg
out
fisubrs
test
pop
mov
in
loopne
inc
jno
ds
dec
popa
out
add
call
or
dec
add
insl
bound
mov
mov
jbe
aad
add
repz
test
ljmp
xchg
mov
cmp
outsb
jl
shrl
dec
aaa
je
lock
sbb
mov
jecxz
idivb
lock
std
inc
shrb
mov
xor
movsb
add
pop
add
xchg
mov
pusha
pop
push
hlt
mov
and
enter
or
push
lcall
push
sbb
mov
dec
inc
jb
cmp
xchg
sub
das
adc
or
push
test
jmp
scas
jb
or
pop
cmp
or
or
dec
call
dec
jbe
sub
or
loopne
jbe
leave
loope
or
pop
push
cli
and
andb
andb
inc
daa
or
mov
daa
js
sbb
sbb
add
adc
or
or
sub
clc
push
jno
mov
xor
and
lea
dec
in
arpl
mov
or
and
test
adc
cmp
pop
inc
mov
push
or
add
xchg
xorl
add
xchg
jecxz
mov
insl
lock
add
inc
dec
stos
add
inc
adc
loopne
gs
dec
cld
push
jp
push
lret
in
add
jg
inc
in
lret
movsb
dec
loope
scas
negl
mov
jbe
ljmp
inc
enter
insb
ljmp
ret
or
mov
and
outsb
ret
add
repnz
push
mov
xor
scas
mov
test
rolb
and
pop
jl
sub
insl
sub
sbb
sub
and
sbb
cmp
hlt
sbbl
lods
insl
out
lock
mov
cmc
dec
mov
repz
idivb
pop
inc
mov
insb
fisttpll
mov
lret
test
mov
mov
cmp
call
pop
add
jnp
fcoml
mov
lds
lret
cwtl
cmpb
mov
push
mov
mov
rol
jb
inc
push
test
les
outsb
dec
test
ss
ss
xchg
cmc
xchg
mov
xchg
pushl
xor
add
lea
sti
setge
enter
pop
xchg
add
fcmovbe
enter
std
or
xor
mov
mov
test
fiadds
int3
arpl
dec
into
or
mov
aas
jno
lds
xor
mov
add
add
and
mov
clc
gs
fldl
mov
imul
jne
xor
xor
lret
sbb
stos
inc
mov
out
hlt
pop
jbe
mov
mov
cwtl
xor
add
movsb
adc
and
mov
lret
mov
nop
mov
lret
loopne
dec
movsl
pop
hlt
lods
lret
xchg
pop
adc
test
add
mov
adc
js
jl
insl
jp
orl
ret
mov
push
jp
push
push
cld
lods
or
pop
cmpsl
int
xorb
xor
sub
ss
push
xor
xor
mov
mov
mov
outsb
cmpsb
call
ss
sub
decl
call
sbb
inc
pop
pusha
and
xorb
cmpsb
cmp
and
test
int3
cmpsb
xchg
xorl
ja
notl
add
hlt
jae
das
rolb
jbe
js
scas
or
pop
mov
nop
ss
or
jo
jno
insl
enter
adc
pop
adc
or
aaa
add
pop
mov
out
push
bound
and
cmp
test
jb
fcompl
nop
in
les
js
test
leave
push
rorb
outsb
push
xchg
add
xorb
inc
stos
test
mov
ds
out
xor
arpl
int
mov
insl
cli
stos
loopne
testl
pop
lret
lret
inc
out
sub
outsl
mov
inc
xchg
mov
xor
ljmp
or
cmpsl
out
int3
sub
add
dec
jl
daa
push
adc
in
sbb
jmp
sub
sub
js
mov
addl
cmp
xor
scas
add
jo
jl
rclb
adc
in
or
jo
jle
adc
mov
out
test
jnp
aaa
push
mov
push
sbb
mov
lock
jmp
int3
pushf
icebp
pop
dec
lret
pop
inc
mov
push
rclb
andb
xchg
push
mov
cs
or
add
add
jne
cmpsl
loopne
push
pop
lret
push
jno
addl
or
mov
pusha
xor
mov
xchg
cmp
mov
bound
add
mov
fabs
push
icebp
lds
sbb
mov
fisttps
loop
outsl
or
cmp
adc
aam
jle
call
enter
mov
xor
iret
adc
add
xchg
rclb
loopne
adc
aad
cli
xchg
jmp
lock
push
jae
stos
push
ficoms
push
mov
xor
pop
adc
js
mov
add
cld
xchg
jle,pt
pushl
push
jmp
lahf
out
fdivrl
clc
or
jnp
jp
ljmp
les
lods
or
jnp
sbb
adc
ja
push
push
sarb
lods
pop
bt
lcall
mov
pop
mov
add
xchg
pop
pop
cmc
test
adc
fdiv
xor
and
pusha
fisubrs
orl
jmp
cmc
ret
movsl
stos
leave
xchg
int
sub
movsl
xchg
add
data16
inc
movsb
imulb
and
sub
pop
sub
imul
mov
out
mov
xchg
shrb
clc
or
jmp
fwait
js
cmp
xchg
insb
sub
xor
aam
clc
repz
shld
stc
xadd
jo
mov
jo
pop
adc
xlat
mov
jle
and
mov
test
sbb
and
mov
test
ret
mov
jne
enter
scas
ja
je
dec
mov
dec
shlb
inc
sti
andb
js
hlt
punpckhdq
lret
sub
push
push
xor
pop
hlt
and
cmpb
outsl
or
shll
pop
pushf
jecxz
adc
inc
js
cmp
jb
inc
pop
gs
mov
test
mov
sub
pop
pop
js
inc
sbb
sbb
mov
inc
testb
je
push
sub
sbb
sbb
sub
pusha
sbb
mov
clc
popf
push
mov
sti
pop
jmp
icebp
outsb
pop
incl
xor
cld
aam
and
mov
stos
mov
fistps
cmpsb
add
push
repz
jbe
jge
mov
in
sbb
andl
cmp
pop
or
cmp
lock
stos
mov
cmp
jle
rcl
out
mov
cli
js
imul
ja
jns
pushf
pop
xor
ss
push
jl
or
xchg
sbb
test
mov
nopl
and
cmp
shrl
add
mov
xchg
xchg
movsl
add
rclb
mov
adc
mov
icebp
sahf
mov
test
cmpsl
ret
aaa
je
hlt
mov
in
andl
or
pop
xchg
xlat
mov
mov
mov
mov
aaa
and
andl
push
xchg
movsb
sub
pop
jl
das
std
ret
rcll
adc
pop
lret
rol
xor
movl
leave
cs
cmp
rorb
inc
adc
cmp
xor
sbb
or
inc
or
js
jb
xlat
jne
push
jo
cwtl
lds
int
push
mov
pop
push
daa
xlat
sar
push
pop
push
lahf
sbb
add
jl
cwtl
addr16
lret
dec
inc
xor
pop
and
sbb
add
xchg
rcl
jl
pop
call
mov
dec
mov
insl
test
cmp
icebp
daa
decl
ret
aaa
mov
aas
or
inc
adc
push
cmp
andl
push
or
rcrb
inc
add
leave
or
add
sub
sub
sub
jns
shlb
xorb
icebp
adc
inc
adc
test
adc
cmp
mov
addl
or
pop
fs
rclb
xchg
jno
sbb
es
jmp
ret
ficoml
imulb
push
loope
add
addr16
xchg
ret
out
shl
test
dec
fs
pop
shl
insb
mov
mov
in
xor
and
js
sahf
pop
inc
neg
clc
and
arpl
decb
mov
dec
ret
movq
xorb
lcall
jge
mov
mov
clc
fisubrl
xchg
jecxz
mov
ds
lahf
pop
mov
cmpsl
mov
inc
sub
nop
clc
loope
dec
sbb
jo
ret
sub
gs
mov
insb
add
std
ret
mov
pusha
movsl
std
out
jmp
ret
aam
stos
mov
xchg
mov
iret
js
cli
mov
jbe
sahf
jnp
add
sub
mov
fs
xchg
or
insl
xchg
mulps
jge
sahf
cltd
jl
bound
loopne
pavgw
lret
add
mov
lods
xchg
popl
push
xor
pop
or
cmpsb
sbb
test
jp
fstpt
xor
jle
mov
cli
not
adc
leave
int3
mov
sbb
nop
ja
sarb
and
jo
lds
push
sub
mov
inc
pop
mov
lahf
or
or
sub
inc
add
push
leave
rcll
das
cmp
fdivrs
adc
ror
enter
xor
cmp
fs
dec
mov
andb
push
add
pushf
push
clc
std
adc
cmp
mov
js
bound
data16
mov
cwtl
popf
add
icebp
cmp
push
mov
jle
orb
adc
pop
cmp
stos
fwait
inc
aaa
int
lret
adc
hlt
mov
jecxz
adc
cli
int
inc
idivb
add
jns
mov
sub
or
sub
sbb
loopne
popa
lds
cwtl
aam
hlt
icebp
add
mov
cmp
push
push
loope
or
add
in
add
scas
jo
data16
and
add
lcall
push
aam
std
addr16
daa
dec
and
add
dec
inc
call
and
loopne
push
imul
xor
inc
sti
das
pop
aam
jecxz
cmp
cwtl
xchg
xor
adc
mov
cli
mov
add
scas
cmp
outsl
sbb
push
xor
lds
cmpl
hlt
push
jg
jle
mov
mov
and
nop
inc
sbb
pop
mov
mov
sti
xor
in
pop
pop
subl
lcall
mov
mov
push
ret
mov
add
shl
mov
add
mov
push
mov
cltd
cmpsb
mov
fwait
or
aad
push
ljmp
pusha
dec
ds
push
mov
enter
and
pop
loope
pop
test
cltd
sbb
jb
pop
movsb
jbe
mov
xor
and
sbb
cmp
sbb
out
fwait
dec
shlb
mov
mov
mov
test
pop
pop
jp
jne
xchg
add
mov
in
sbb
dec
cmp
outsl
clc
push
or
push
outsl
pop
sbb
fcmovb
push
into
lds
sbb
leave
cmp
mov
mov
call
jg
xchg
and
push
cmp
cmc
xlat
rclb
adc
cmp
aam
or
adc
xchg
mov
xchg
outsl
loope
sub
jo
aas
clc
adc
mov
loopne
or
aas
cmp
pusha
test
sbb
jne
subb
outsl
or
mov
test
add
push
jg
cmp
call
adc
loopne
hlt
dec
dec
xor
xchg
push
add
dec
popa
or
mov
ds
data16
test
cmp
orl
rcll
lcall
les
insl
push
and
push
mov
mov
cmpsb
out
jg
rol
jo
xor
cwtl
ret
clc
aam
jl
shll
movsb
xchg
iret
pop
aam
push
mov
sbb
push
stos
mov
fdivs
stos
jb
cmp
test
dec
cli
or
clc
js
pop
jge
mov
mov
stos
popf
and
dec
mov
jnp
xchg
lahf
add
mov
call
lret
adc
sbb
pop
cmp
out
push
push
mov
push
cmp
inc
jb
andb
lods
mov
scas
mov
notl
xchg
addb
cmp
mov
shrb
mov
inc
mov
int
mov
std
xchg
add
xor
cmp
push
mov
sti
inc
xchg
push
fdiv
or
mov
lock
outsl
push
push
out
iret
inc
cmpsb
test
add
loopne
push
in
mov
push
pop
sahf
pushf
push
shlb
hlt
add
insb
setg
jne
jge
das
icebp
pop
inc
mov
scas
sub
cs
lahf
push
out
jp
sbb
inc
int3
outsb
inc
mov
mov
out
fwait
gs
clc
stos
push
mov
jmp
xchg
loope
sbb
std
mov
dec
or
clc
lock
xchg
xchg
and
jp
sarl
loop,pn
add
std
jmp
cmpsl
xor
cmp
in
rorb
fs
add
ja
mov
in
pop
call
push
loopne
aaa
frstor
inc
adc
push
sbb
call
sahf
push
xchg
pop
cld
sub
fs
push
xchg
mov
loopne
leave
push
mov
mov
sub
and
xor
lcall
sti
addb
push
dec
dec
pop
ljmp
and
push
adc
mov
dec
push
mov
scas
push
pop
loope
mov
pop
cmpsb
mov
xor
les
jbe
das
rcrl
inc
clc
and
add
dec
rclb
xchg
jne
mov
pop
stos
stc
test
pop
sbbl
and
fildll
jg
push
push
fdivrl
sub
cli
ret
or
mov
mull
addb
mov
dec
push
dec
mov
cmp
cmpsb
or
mov
xor
test
out
repz
dec
sub
rorb
mov
in
movsl
add
or
mov
testb
stc
or
cmp
pushf
out
lahf
pop
rcrl
cmpsl
cmp
pop
xchg
lahf
lock
rcrb
les
mov
and
in
cmc
int
std
dec
nop
xchg
ja
inc
adc
dec
mov
sbb
or
out
jecxz
cmpsb
icebp
je
jg
dec
shll
adc
aam
rorb
das
mov
or
xchg
jle
sub
add
ljmp
call
add
sub
cmp
loope
test
insb
icebp
jno
xchg
mov
fisttpll
mov
push
sub
popf
test
and
mov
push
clc
call
sub
sti
dec
adc
daa
push
pop
cmpb
repnz
insl
js
xchg
mov
fists
outsl
push
dec
or
xchg
and
push
jnp
ljmp
inc
outsb
adc
orb
xorb
inc
push
jg
ror
or
mov
and
and
cli
sahf
dec
int
pop
ss
test
out
scas
fsubr
sar
cli
add
repnz
ljmp
sbbb
pop
lods
test
movsl
repnz
mov
nopl
cmp
and
es
es
rorl
mov
cld
ret
mov
jp
jle
int3
add
pop
sbb
nop
pop
or
test
ljmp
push
insb
test
test
add
mov
hlt
cmp
xor
popa
push
pop
and
ja
lods
addl
mov
adc
or
adc
fiadds
add
sbb
lea
pop
push
dec
ret
out
in
outsb
cld
push
decl
jle,pn
loopne
push
jo
or
mov
out
aas
insb
popa
popa
add
or
loopne
movsb
jmp
xorl
call
clc
adc
mov
sbb
and
ss
pop
je
dec
pop
mov
sub
mov
inc
bound
inc
inc
je
in
sbb
push
fldenv
fwait
sahf
pop
jb
lret
inc
jmp
push
mov
dec
rcrb
push
jnp
sbb
xchg
and
cmpl
jmp
cmpb
push
push
jl
rclb
inc
das
pop
and
pop
add
out
in
jp
fwait
test
repz
add
sahf
jle
hlt
mulb
cmc
cmp
into
fsts
cmc
pop
lods
push
sti
or
adc
je
xchg
les
test
pop
xlat
subl
push
inc
or
stos
rcrl
std
xchg
pusha
and
loopne
mov
mov
ss
aad
in
in
int3
sub
mov
dec
pop
cld
mov
fisubrl
jp
stos
inc
and
mov
cmpsb
pushf
jp
hlt
or
mov
cmpl
push
jae
pop
sub
sbb
lahf
push
mov
lret
cwtl
jne
xchg
call
fs
cli
mov
push
jb
mov
or
jg,pn
les
rol
cmp
lcall
cmpb
shlb
test
xchg
pop
pop
js
ret
xchg
sub
mov
fisttpl
cmp
notb
add
mov
aas
adc
ret
mov
push
mov
mov
jl
movsb
sub
inc
movsl
addl
dec
mov
xor
mov
idivb
data16
cmpsb
lcall
inc
std
pushf
test
xchg
xor
aad
dec
cld
push
into
mov
adc
rcrl
shrb
incb
sub
flds
jle
aaa
add
fisttpl
cli
ret
cmpsl
sub
or
sub
popf
loop
adc
repz
cmp
sbb
jp
mov
jmp
jo
mov
fucomi
call
adc
pusha
cmp
adc
jno
lock
inc
sti
xchg
sbb
movb
sbb
ja
mov
gs
cld
rcrb
inc
or
jne
add
imul
push
pop
add
lea
fucomip
add
pop
fldt
pop
pop
mov
and
je
sub
loop
sub
rorl
loope
bound
out
mov
sbb
sub
and
or
or
subl
xchg
pop
push
mov
jnp
sub
sti
and
jl
int3
clc
enter
testb
aam
mov
stc
mov
cmp
xor
push
pop
std
loop
test
inc
mov
xor
xchg
xchg
inc
gs
mov
push
pop
push
push
stc
sub
jmp
cmp
sbb
outsl
decb
scas
loope
add
movb
lcall
jae
repnz
cmp
stos
into
jb
std
and
inc
pop
mov
outsb
shrb
sub
sub
shrl
inc
mov
or
jmp
ud0
gs
je
incl
or
and
inc
inc
stos
inc
ret
andb
ljmp
jo
xor
xlat
mov
xchg
nop
loopne
fstl
popf
mov
sub
movsb
fildl
aaa
add
inc
xchg
sub
push
sbb
pop
dec
xchg
rolb
sub
mov
and
arpl
js
scas
call
xor
inc
scas
xor
orb
sbb
cmp
sahf
pop
sbb
dec
cld
mov
arpl
iret
jo
sub
lret
mov
push
in
add
or
dec
add
test
inc
mov
push
loopne
aas
loopne
shll
push
xor
inc
mov
add
loope
clc
mov
imul
pop
rclb
fidivrs
xchg
xchg
es
vandnpd
push
push
jecxz
add
mov
loop
mov
xor
pop
sbb
push
pop
inc
mov
dec
lock
cwtl
out
shl
in
mov
or
push
xlat
sbb
pushf
push
idivb
dec
out
out
mov
les
iret
or
or
pop
dec
and
mov
pop
pop
xorb
ret
sbb
add
scas
rcrb
std
or
mov
ljmp
pop
and
or
fisubrs
dec
adc
shrb
jne
clc
add
sub
mov
scas
or
inc
push
inc
sbb
mov
xchg
cmp
and
insl
mov
and
js
insl
xchg
je
pop
gs
subb
aaa
insl
adc
test
mov
out
loope
cmpl
push
out
pop
mov
mov
xor
or
lcall
je
in
ss
movsl
int
mov
mov
jg
call
idivl
aam
inc
call
daa
fnsave
fildl
loope
cmpsb
or
lahf
mov
mov
mov
dec
push
xchg
and
ret
sarl
mov
xor
push
lock
sub
test
jl
jbe
loop
or
data16
xchg
add
ret
jge
xor
notl
lea
mov
loopne
dec
inc
inc
call
add
addr16
shrb
and
pop
adc
les
push
stos
ret
add
aaa
push
out
idivl
je
out
push
mov
rcr
pop
lods
pop
ja
cwtl
and
testl
dec
clc
or
inc
adc
ret
sahf
mov
cmp
ss
fists
imul
pop
adc
cmp
cmp
jp
add
dec
dec
inc
push
outsb
fisubs
jmp
pop
mov
xchg
incb
jle
repnz
mov
je
xor
cmp
scas
cmp
or
push
cmpsl
aam
add
push
cmp
jne
fwait
lock
lock
fdivrl
jg
imul
sub
cmp
mov
mov
leave
mov
es
and
and
movsl
or
inc
iret
fsub
sbb
js
or
mov
rcrl
cmpsb
mov
cltd
fs
cmc
inc
lret
shrb
push
mov
adc
ja
pop
mov
inc
mov
push
in
mov
sbb
gs
push
fisttps
inc
dec
add
and
call
std
and
inc
aas
jp
lock
mov
or
int3
or
loopne
push
hlt
jno
xor
push
lods
xor
dec
cs
aad
js
cmp
test
incl
inc
pop
cmp
repnz
ljmp
xchg
ret
in
push
rcrl
jae
push
xor
ljmp
std
clc
mov
clc
imul
je
fbstp
xchg
cmpsl
cwtl
xor
mov
nop
add
shlb
xchg
jnp
jge
loope
inc
cwtl
shrl
into
push
pop
pop
push
in
jbe
jmp
inc
test
cwtl
or
in
cltd
adc
fwait
push
ficompl
mov
test
mov
insl
cmp
std
or
add
pop
lret
adc
add
loopne
sub
or
and
mov
adc
pop
loopne,pt
and
xlat
jl
decb
xchg
cli
fsub
dec
insl
jae
sbb
cmpsb
data16
lahf
test
cmp
out
loope
mov
add
lcall
sbb
sub
or
aad
xor
mov
sbb
or
add
sub
inc
bound
or
cmpb
dec
push
adc
mov
jbe
inc
add
mov
add
rorl
lret
pop
dec
mov
inc
test
lods
ja
mov
sub
cltd
es
scas
clc
add
xor
jl
cmpsb
jp
mov
dec
arpl
sbb
pcmpeqb
ds
fnstcw
not
xchg
and
sub
aas
mov
pusha
out
mov
fwait
outsl
lcall
subb
ja
outsl
xchg
xor
mov
push
sbb
pop
icebp
outsl
and
push
xchg
hlt
xor
inc
pusha
xchg
imul
pushf
and
jo
repz
je
xchg
xchg
pop
pop
pop
out
dec
xchg
es
imul
frstor
push
mov
pusha
ret
jnp
adcb
and
pop
dec
xor
mov
xor
hlt
pop
loop
fisubl
mov
jne
fcomps
bound
sbb
mov
cmp
add
sbb
sub
outsl
push
inc
repnz
adc
andb
jno
aad
lock
or
mov
arpl
xchg
in
dec
push
popf
mov
pop
js
adc
aas
add
xchg
push
mov
and
hlt
xor
cltd
addl
xor
xor
push
and
dec
jb
lods
push
aaa
cmp
pushf
and
push
mov
stc
lret
push
stos
push
sub
pop
fs
xchg
hlt
sar
std
leave
mov
inc
lret
inc
adc
cmc
into
mov
or
movsl
jnp
xor
inc
call
push
mov
adc
dec
lahf
xor
stos
mov
jle
push
sub
pop
cmp
add
xor
xchg
adc
test
pop
jo
popa
jnp
inc
xor
movsb
cmp
push
adc
add
or
inc
lds
testl
push
lea
mov
inc
jbe
push
ja
fwait
jg
cmc
test
pop
or
inc
sub
inc
ds
mov
jo
adc
into
addr16
jecxz
jl
inc
nop
stos
push
dec
std
cmpsb
int
mov
mov
std
shll
addb
sbb
and
or
loope
mov
push
mov
cmp
and
push
sbb
jp
inc
leave
pop
hlt
xor
and
xor
inc
clc
into
cmp
mov
aas
mov
and
pusha
adc
std
push
push
xlat
movsb
xor
incl
nop
cltd
push
add
and
xor
mov
push
sbb
roll
or
fs
jb
lcall
push
ds
shrl
sub
mov
jecxz
adc
inc
sub
fstps
pushf
loope
dec
inc
lret
or
dec
cmp
data16
cld
loopne
test
and
outsl
jecxz
ret
inc
cli
das
dec
push
adc
xchg
adc
sbb
inc
cld
frndint
inc
cmp
scas
pop
fmul
gs
sbb
movsb
paddd
fists
adc
adc
mov
mov
out
xchg
dec
es
jp
add
sbb
shll
pop
and
das
xor
cmp
js
pop
dec
or
inc
iret
xchg
loopne
call
mov
lods
sbb
jg
jno
jo
sbb
loopne
mov
out
jae
mov
xor
jecxz
push
aam
xchg
dec
jp
loopne
push
inc
cli
pop
lret
mov
das
fsubrs
lock
jg
xor
mov
pop
out
in
lahf
cwtl
mov
mov
fimuls
xor
enter
ret
and
adc
mov
push
inc
popf
loope
mov
hlt
imul
add
add
nop
ret
inc
dec
rorb
int
fwait
lods
jmp
xchg
inc
mov
call
mov
or
cmp
mov
js
loopne
sar
cmp
xchg
dec
mov
adc
mov
insb
xor
pop
sbb
lods
lahf
mov
inc
add
sbb
xchg
xchg
inc
push
xchg
inc
repnz
xor
push
lcall
push
pop
sar
stos
sahf
test
jle
mov
js
adc
dec
incl
xor
mov
ljmp
add
adc
stos
shlb
negb
outsb
cmp
pusha
add
popa
sbb
pop
adc
pusha
mov
daa
xorl
andb
mov
fcmovbe
sub
push
mov
cmpb
in
lock
add
mov
std
pusha
sub
pop
sbb
xchg
bswap
lahf
movb
ljmp
lret
inc
and
adc
mov
dec
or
dec
std
rdpmc
nop
mov
cmp
or
xor
into
jne
ljmp
cmpsb
cmp
shrl
sahf
iret
inc
inc
and
add
or
sbb
dec
mov
add
inc
mov
imul
push
icebp
jl
cs
fs
std
movsl
rcll
push
cmp
test
aas
sbb
xchg
aam
or
or
jecxz
and
sarb
xchg
scas
cmp
clc
xchg
sub
pushf
push
or
push
add
and
push
out
push
add
outsb
int
and
std
repnz
xchg
jle
addr16
aad
sbb
mov
movsb
mov
sbb
enter
lock
cli
xor
mov
push
movsl
out
cld
push
jmp
lock
test
into
inc
xor
rol
inc
mov
rolb
cmp
pop
push
mov
sub
ret
sub
loope
insb
in
movsl
ret
or
sbb
pop
jl
insl
lea
inc
lods
mov
loop
arpl
cmp
push
rorl
push
lock
cmc
incl
xchg
subl
in
out
mov
cmp
lock
inc
dec
cmc
adc
push
cmp
push
mov
pushf
in
iret
shlb
sub
adc
stos
or
xchg
stc
inc
and
fdivs
push
cmpsb
sbb
jmp
mov
pop
inc
lahf
push
inc
pop
inc
fnstenv
in
pushf
cmp
arpl
add
loopne
stc
push
sbb
aaa
clc
inc
add
xor
lock
jo
jle
out
adc
loopne
rorl
inc
jnp
cmp
push
pop
test
pop
and
outsb
lahf
dec
lock
adc
lret
adc
jp
inc
lock
xchg
clc
xor
int
loope
aas
adc
mov
pushf
shl
repz
int
add
mov
push
cmc
aas
loop
cmp
cmpsb
add
or
in
mov
lcall
jne
decb
push
push
add
out
in
outsl
sub
les
adc
dec
cmpsl
adc
xchg
ret
je
inc
sbb
cld
insb
pop
inc
jge
inc
stc
cld
aaa
push
loopne
ljmp
adc
call
test
pop
jb
add
arpl
jg
lahf
outsl
movsb
push
fstps
sub
std
imul
push
lock
jnp
fdivs
xlat
dec
cld
or
and
lret
inc
inc
push
sti
sub
scas
mov
jb
imul
push
inc
icebp
xor
sub
sbb
sub
outsb
cmp
ljmp
and
das
in
and
inc
and
add
inc
fdivl
out
cmp
sbb
lahf
cld
jle
sub
push
ret
sbb
rcrb
bound
mov
push
or
ret
sbb
mov
sarb
xor
inc
dec
dec
cwtl
data16
add
add
jg
push
ret
add
ds
les
xchg
mov
xchg
xor
rep
stc
add
int3
dec
dec
sub
cmc
les
pop
mov
and
xor
stos
adc
dec
adc
xchg
adc
loop
mov
mov
pop
out
sub
sub
mov
mov
fucomip
push
or
inc
pop
cmp
mov
add
sti
hlt
or
ja
push
adc
pop
add
mov
repz
pop
repnz
aad
pop
sbb
ffreep
pop
fst
divl
loopne
pop
adc
or
inc
mov
je
add
sbbl
ljmp
mov
in
jmp
add
and
test
xor
ds
adc
add
jge
cmp
mov
ret
aaa
and
push
cwtl
dec
jmp
loopne
and
shl
lahf
lea
lahf
dec
std
and
jbe
add
xor
xor
and
or
push
in
mov
pop
insb
pop
xchg
mov
pushf
push
add
or
mov
xchg
mov
xor
jae
push
inc
shll
sub
test
push
leave
sbb
xchg
inc
add
dec
pop
es
mov
push
fmul
add
lahf
dec
pop
cmc
jmp
or
loop
fists
mov
cmc
mov
inc
cmpsl
and
mov
pop
and
mov
dec
mov
rcl
pop
insl
clc
cmp
test
mov
hlt
mov
scas
idivl
ret
addb
xchg
mov
mov
loope
pop
ljmp
xchg
clc
das
rcrb
popa
stc
cwtl
and
lods
sbb
stc
mov
dec
roll
jb
jo
mov
call
in
popa
jno
ret
jbe
outsl
cmpl
out
mov
pop
int
xor
sub
xchg
add
repz
jns
sbb
pop
and
sbb
and
mov
cs
xchg
mov
sub
pushf
mov
xchg
sub
push
out
lret
add
sbb
fldl
xor
in
rorb
fnstcw
jle
imul
xchg
lea
push
push
cld
mov
pop
lcall
gs
jp
lcall
imul
xorb
scas
pop
cmp
dec
bound
push
faddp
cmp
inc
dec
aam
les
jge
push
divb
mov
fdivr
es
lea
inc
nop
enter
ljmp
xor
loopne
cmc
pop
mov
pop
mov
jp
pop
sbb
test
arpl
sub
sub
jle
sbb
or
int3
jecxz
aam
add
xchg
orl
lret
mov
add
push
dec
and
icebp
mov
sbb
lock
out
icebp
or
mov
pop
mov
ret
pop
fisubs
cmp
and
push
sub
jle
test
sub
pop
jo
subl
adc
sbb
push
mov
pop
shlb
and
sub
push
push
arpl
or
fnstenv
dec
add
jp
mov
out
pop
xor
xchg
inc
int3
mov
push
mov
fidivrs
dec
jge
add
mov
xlat
enter
rclb
add
cmpsb
adc
movsl
push
dec
push
mov
push
adc
sbbb
push
pop
imul
aam
or
pusha
subl
cs
xor
push
or
outsl
push
push
inc
rcr
icebp
pop
mov
test
adcl
push
mov
aam
cmp
cmp
add
js
fldl
test
ljmp
jg
add
nop
scas
lods
cltd
movsl
shlb
pop
pop
pop
cmpsb
xchg
cmp
sub
aaa
push
or
jg
aam
lds
push
push
insl
push
imulb
mov
and
xchg
add
lret
cmpsl
out
jbe
adc
sbb
and
insb
in
push
loopne
mov
daa
shl
dec
lret
mov
adc
mov
lcall
fwait
div
test
fldl
mov
jne
loope
push
or
pushf
scas
inc
daa
inc
outsb
ljmp
xchg
js
push
inc
sub
adcl
ret
aas
mov
movsb
clc
xchg
mov
jmp
sub
lock
arpl
adcl
nop
pop
push
sub
and
aas
jmp
imul
fidivs
mov
lock
in
daa
in
lret
jne
out
mov
sbb
jecxz
adc
adc
gs
mov
push
cmpsl
dec
add
inc
adc
vporq
rolb
movl
push
adc
mov
xchg
fnstenv
aam
aad
xor
or
jl
rorl
sub
adc
outsb
push
xor
movsl
adcb
mov
pop
inc
pop
mov
fwait
xor
jl
push
ret
cmpsb
call
lret
and
pop
push
pop
pushf
pop
movsb
jg
out
loopne
push
iret
shlb
xchg
mov
aam
push
jecxz
cmpsb
imul
cmpsb
or
repz
add
fldenv
xchg
outsl
andb
stos
mov
gs
or
adc
icebp
inc
mov
or
dec
pop
or
int
adc
icebp
aaa
cmc
pop
jb
aam
adc
mov
add
adc
stos
cs
lods
xlat
lahf
inc
jge
scas
or
xor
dec
js
cmp
xchg
shl
mov
aas
ret
push
movsl
sti
pop
inc
or
rorb
lcall
cmc
sbb
xchg
popa
es
xor
add
adcl
or
rcll
dec
pop
popf
addr16
imul
add
jmp
pop
pop
inc
test
repz
loope
shl
imul
out
scas
and
mov
in
repz
shlb
and
outsb
cmp
xor
testb
sahf
adc
mov
jne
pusha
pop
dec
cltd
cltd
scas
pop
and
inc
loope
shr
xchg
fwait
adc
lock
dec
rclb
cmp
or
outsl
aad
sbb
negl
xchg
out
cwtl
cld
mov
lds
cld
mov
popf
add
dec
insl
das
prefetcht2
mov
mov
add
pop
dec
mov
sbb
call
fisubrs
sbb
pop
mov
fdivs
mov
pop
fwait
cmp
push
ret
inc
sbb
out
icebp
ret
fwait
jno
xchg
mov
or
imul
dec
stc
imul
fldl
xor
stc
pusha
add
or
and
shlb
xchg
xchg
inc
jnp
je
lods
sbb
loop
aad
lods
xlat
lahf
shrb
mov
dec
add
cmp
or
lods
inc
xchg
add
loopne
xchg
push
into
jae
pusha
int3
out
mov
xor
mov
cmp
in
push
sub
and
mov
cmp
sbb
cltd
sahf
xor
pop
sbb
mov
data16
aad
mov
or
push
mov
xor
pop
dec
aad
mov
repnz
add
inc
shlb
mov
sub
pop
xchg
js
xlat
daa
fmull
cmp
adc
pop
lock
dec
sahf
push
jno
push
out
std
in
mov
or
dec
sbb
out
inc
mov
cmp
cmpsb
stos
dec
outsb
iret
pop
outsl
lea
or
and
cmp
divb
mov
hlt
hlt
dec
ret
rclb
add
sahf
sbb
dec
stc
fistpll
cs
stc
pop
mov
adc
popa
pop
add
pop
out
loopne
add
jmp
push
test
ss
push
cs
xchg
stos
cmp
ss
and
test
out
mov
shrb
mov
ss
sub
fwait
cmp
addl
call
add
jecxz
lods
pop
sub
mov
stc
add
add
xchg
rcrb
mov
inc
scas
aam
mov
sbb
fwait
insb
daa
inc
dec
and
jo
in
mov
loope
cmp
insl
lcall
repnz
sbbb
mov
and
leave
pop
add
mov
scas
cwtl
jle
leave
inc
jbe
mov
lods
div
push
mov
cli
cmp
es
sbb
ds
dec
jb
sbb
pop
ds
sbb
and
adc
iret
sbb
lea
sti
outsl
mov
cmpsl
pop
jge
orb
cltd
rcrb
xor
cli
in
mov
jae
push
mov
inc
mov
push
popf
mov
sbb
inc
or
jne
pusha
test
add
add
iret
pop
mov
mov
cmpsb
jb
shlb
rolb
sbb
lods
fsubs
roll
push
adc
cmpsl
pop
lock
icebp
test
xchg
or
dec
cmp
jecxz
idivl
or
test
mov
add
jge
fdivrl
sbb
daa
or
lea
push
cmp
mov
cltd
or
xchg
movsb
mov
pop
lea
sbb
xor
in
int
fcompl
jp
pop
divb
ret
rcrl
ficompl
or
xor
and
mov
sbb
test
push
ds
leave
pushf
or
mov
add
adc
push
mov
insl
jo
jo
or
mov
subb
jb
pop
rol
rorl
ss
lods
int3
cwtl
mov
movsl
dec
add
sub
mov
jecxz
stos
sbb
mov
fcoml
push
into
cli
and
mov
and
mov
mov
sbb
hlt
fiaddl
push
movsl
dec
pop
fstpt
not
movsl
aad
shlb
jmp
in
mov
bound
pop
punpckhbw
js
pop
in
or
in
or
in
fdivrp
jno
lret
mov
mov
or
ds
mov
inc
fistps
jno
mov
in
mov
ret
mov
aad
movsl
add
add
pop
push
jno
or
insb
movsl
pusha
jo
mov
mov
outsb
sbb
rcr
ficoms
jp
nop
jp
icebp
outsb
rclb
inc
es
add
pusha
nop
push
pop
push
xchg
mov
js
lock
andl
stos
adc
inc
dec
sbb
and
add
pop
stos
test
leave
lret
pusha
testb
aam
mov
dec
xor
xor
call
mov
mov
ja
sub
dec
sar
add
inc
sub
push
fisttps
notb
jle
fnstcw
iret
mov
popl
dec
imul
or
clc
invd
stc
jnp
dec
inc
cld
shll
je
cwtl
mov
scas
jecxz
xor
jge
mov
sarl
es
mov
in
ljmp
ds
adc
pop
sbb
cmp
fisubl
cmc
or
fldl
imul
adc
ficomps
dec
iret
jb
inc
xlat
push
mov
stos
pop
or
test
add
add
xorb
loop
cmp
sub
into
push
or
xor
mov
aaa
faddl
fwait
and
loopne
js
pop
pop
add
push
in
or
jl
mov
xlat
mov
xchg
mov
popa
cmp
or
loopne
cld
sti
or
mov
cmp
mov
or
pop
jo
fwait
jg
jno
push
jnp
xchg
pop
adc
add
aad
mov
int3
dec
jns
je
lock
mov
dec
sbbl
push
out
leave
mov
sbb
mov
xchg
out
push
mov
dec
lea
mov
and
roll
fidivl
je
and
loopne
inc
lahf
sub
mov
loopne
sar
loope
inc
insl
sub
aaa
jb
push
add
push
sbb
into
loope
js
add
xor
jnp
test
jbe
loop
jle
cmpsl
das
adc
dec
ss
rolb
push
sti
cmp
cmp
cld
pop
out
cmp
cltd
rcrb
orl
into
xchg
cmpsb
and
pop
lods
mov
adc
cmp
lds
in
xchg
dec
cld
lcall
pop
pop
inc
mov
outsb
push
lock
int
lcall
mov
or
fildll
into
and
adc
jns
push
cmp
sbbb
js
ficomps
lock
sub
sbb
lret
fwait
in
add
push
xchg
and
mulb
jl
into
mov
xchg
push
sub
pop
icebp
out
inc
iret
push
jge
test
sbb
add
insb
xchg
into
and
popa
lock
fcomps
mov
xchg
aaa
and
xor
lcall
mov
sbb
ficoms
int3
pop
cmp
xor
and
sub
movsb
psubb
dec
fdivl
icebp
loope
pusha
sahf
movsl
cmp
in
mov
mov
dec
xchg
ds
add
adc
jmp
test
push
test
add
cmpsb
shlb
mov
add
ret
or
daa
add
add
outsb
clc
stos
and
in
cli
in
push
jl
sarl
add
sti
insb
repz
add
mov
adc
int
icebp
xor
repz
test
stos
mov
lret
stos
jle
mov
inc
out
dec
ds
sbb
fst
add
imul
add
push
sahf
mov
std
mov
add
idivb
inc
xor
testb
xor
jbe
fiadds
mov
ss
adc
mov
dec
in
add
les
cld
add
jno
clc
cmp
mov
mov
int3
jg
inc
xchg
mov
pop
loope
nop
call
loope
push
adc
call
lcall
and
inc
fyl2x
jnp
rcrl
adc
fdivr
jg
fidivl
sarb
in
test
scas
decl
cld
fists
mov
andb
xchg
outsl
imul
add
pop
movb
addb
cli
push
out
je
cs
subl
cwtl
or
add
and
hlt
push
lcall
hlt
test
adc
xor
push
jne
roll
lock
push
xchg
add
imul
out
push
clc
bound
add
jge
mov
aam
stos
inc
sbb
dec
test
call
insb
lea
mov
ljmp
js
js
mov
lea
shll
loope
push
cmp
sbb
shl
mov
or
ret
sbb
fadd
mov
mov
and
negb
push
push
mov
js
outsl
lock
ss
cmp
mov
push
sahf
bound
inc
fists
les
xchg
or
jmp
mov
movq
lock
mov
repz
stos
mov
push
cmp
sbb
jl
inc
jno
je
sbb
adc
xchg
push
mov
shlb
pop
adc
mov
int3
jp
outsb
mov
ret
jl
je
push
xor
cmp
cmp
ret
sub
test
out
and
popf
or
cmp
rcrb
cmpsb
pop
sub
popf
add
cmpsb
sti
imul
sbb
leave
ficoml
addr16
cmpl
popa
and
xchg
pop
or
adc
mov
test
fidivrs
mov
xchg
shll
jmp
dec
fs
lcall
out
push
je
mov
jg
in
in
js
repnz
inc
loopne
repnz
iret
adc
adc
push
push
subb
push
pmaxub
les
and
xchg
dec
add
and
out
fs
lds
mov
cwtl
in
ljmp
or
jle
insl
xlat
fwait
ds
or
in
mov
sbbl
lds
pushf
jg
adc
or
xor
xchg
jg
es
adc
xchg
cmp
add
mov
lcall
and
pop
es
sub
mov
fimull
or
mov
out
push
pop
lods
xchg
into
pusha
push
lea
jo
sbb
sub
mov
sub
cmp
scas
test
insb
loopne
loop
int3
push
jb
call
xor
or
dec
or
fsubr
sbb
iret
xchg
jge
dec
push
and
pop
movsb
loop
fmull
sbb
sbb
sub
lea
pop
ficoms
movsl
jecxz
cmp
pop
adc
cmpsl
pop
subl
lock
jle
fcoml
or
add
fldt
jl
xchg
push
mov
jp
pop
jg
ljmp
mov
clc
add
ja
inc
dec
sub
loopne
cmpsl
push
fstl
decl
xor
outsb
fdivrl
push
xchg
xor
fidivs
fidivs
inc
add
call
lret
ficoms
jle
fdiv
push
xlat
xchg
cmp
stos
scas
dec
mov
std
adc
filds
cmp
fistpl
in
adc
orb
nop
inc
cmp
icebp
sub
sbb
inc
sbb
sbb
pop
sub
xchg
mov
iret
dec
loope
push
push
loope
jno
outsl
fcomps
scas
rcr
into
add
dec
add
mov
push
rclb
push
jecxz
iret
push
loope
mov
adc
pop
jmp
or
cltd
scas
push
call
xor
das
cmp
inc
movsl
idivl
jl
mov
cmpsb
rolb
jl
in
sbb
rol
add
or
pop
push
hlt
inc
or
push
in
loopne
mov
xchg
test
mov
mov
xor
pop
nop
fwait
ljmp
bnd
xchg
in
dec
cli
nop
add
sbb
cmc
xchg
stos
inc
imul
push
clc
mov
sti
cli
ret
in
xorl
cmpl
add
ffree
icebp
mov
push
dec
stos
decl
cmp
pop
fld
ljmp
push
dec
int3
mov
push
dec
ljmp
lods
add
jge
stc
addb
dec
shl
mov
clc
xchg
movl
insl
out
mov
inc
hlt
add
push
mov
add
andb
mov
add
dec
xchg
sbb
inc
mov
sbb
sbb
jb
loop
fsubrp
add
rclb
adc
and
fildll
add
pop
push
enter
mov
adc
xor
sti
push
xchg
scas
push
push
adc
and
pop
push
imul
sbb
jecxz
cmp
or
mov
sub
aas
test
sub
cmp
cld
cmpl
cmc
dec
jb
cmp
sub
test
out
adc
cld
in
cmp
das
push
push
mov
ss
jecxz
dec
jmp
ficomps
cmp
sub
pushf
data16
call
into
insb
adc
and
mov
cmp
mov
adc
fcomp
push
pop
jg
adc
push
insl
xchg
sub
jl
dec
push
scas
xchg
ja
pop
fnstsw
mov
pop
fadds
testb
xchg
aam
dec
in
push
mov
dec
sub
dec
dec
test
jne
push
jne
jbe
int
inc
outsl
adc
lds
enter
mov
imul
lock
out
cmp
add
dec
add
loopne
inc
inc
pop
lock
aad
es
add
inc
insb
rcrl
nop
daa
clc
pop
mov
mov
push
sbb
jo
in
sti
inc
adc
or
cmc
inc
jp
inc
maxps
aas
lock
push
dec
xlat
leave
and
or
add
or
aad
push
dec
cmp
mov
adc
sahf
pop
lock
push
mov
and
cmpsb
mov
lret
push
add
or
mov
movsb
adc
or
cmpsl
or
cmp
rorl
call
in
push
xchg
stos
clc
push
popa
add
sub
pop
movsl
push
fisttpll
cmp
cmp
data16
mov
adc
es
push
mov
shrb
jo
fldenv
stos
xlat
mov
lods
inc
jge
stos
lret
leave
cld
sbb
jbe
cld
repnz
fiadds
jb
fdivrl
pop
mov
andl
shlb
cmp
je
outsb
sub
fcompl
adc
mov
insb
data16
movsl
lret
dec
sub
subb
mov
cmpl
mov
sub
sub
ss
mov
in
xor
mov
mov
dec
andl
in
mov
and
test
adc
stc
sbb
dec
inc
inc
fists
inc
mov
lock
pop
imul
push
pop
idiv
sarb
pop
insb
sub
xor
mov
gs
xor
push
dec
sar
scas
ds
push
dec
inc
xchg
dec
mov
scas
mov
scas
inc
mov
xor
dec
cmpsl
divb
cld
in
cmp
cmpsl
and
add
pop
std
inc
xchg
sub
arpl
dec
test
xor
outsb
aas
add
push
add
xchg
xchg
sbb
sti
jne
into
loope
lcall
add
dec
cld
push
adc
mov
add
sbb
lods
push
mov
sub
pop
add
popa
cmc
pop
cld
fisttps
ljmp
push
ror
out
fistpll
pop
outsl
and
push
arpl
and
xor
and
xchg
cltd
sbb
mov
pop
in
insl
nop
dec
lock
ret
cs
sbb
iret
ret
mov
movsl
pop
mov
xchg
pop
jb
jae
push
lcall
adc
dec
and
test
xor
aam
xlat
movsb
cmp
lock
mov
lret
add
lock
add
cltd
outsl
cmp
and
std
scas
dec
dec
call
jl
sahf
mov
jnp
int3
clc
daa
mov
push
aad
mov
les
xor
jae
dec
xchg
popa
xor
out
testl
lock
push
lods
hlt
loopne
pop
xchg
dec
push
rcrb
mov
pop
jo
nop
out
fcmovnu
outsb
and
loope
fidivrs
push
cli
mov
mov
dec
cltd
sbb
jb
cs
and
adc
daa
push
mov
out
loopne
fidivs
insb
test
xchg
jge
cmpxchg
cmpsb
mov
sbb
das
addr16
pop
test
lds
arpl
push
mov
scas
cmp
push
or
dec
and
jle
pop
inc
pop
repnz
cmpsb
add
and
inc
shrb
xchg
shlb
sub
popa
test
out
lret
pop
or
ss
jl
sub
cmp
loope
insb
mov
push
inc
in
pop
scas
sbb
repz
ljmp
mov
mov
push
and
jl
scas
imul
push
ret
jnp
add
or
mov
ss
stc
cmp
mov
inc
inc
lcall
test
repz
stc
lods
sbb
das
pop
and
add
jo
mov
shrd
cmpl
pop
outsb
add
or
inc
or
mov
mov
js
dec
mov
xor
xor
fisttpll
mov
cmp
loope
adc
inc
xchg
mov
mov
rol
add
and
mov
scas
mov
sbb
and
hlt
mov
push
nop
mov
push
clc
jg
pop
or
adc
fldenv
push
fnstcw
mov
insl
sbb
lds
idiv
dec
aam
addr16
into
popl
nop
cmp
add
sbb
lock
aaa
loope
inc
fmull
pushf
loope
dec
mov
adc
or
les
lcall
in
mov
mov
test
leave
loop
sahf
mov
pop
add
or
loope
sub
outsb
jge
inc
inc
adc
cmp
and
push
jecxz
adc
lods
jmp
jecxz
cli
sahf
lock
mov
out
push
aad
cld
sub
cli
scas
pushl
sbb
mov
mov
lahf
dec
inc
adc
xchg
and
sbb
cmpsb
jle
cmp
fldenv
aam
arpl
or
ret
lea
into
inc
cli
das
jo
cli
lods
lock
sbb
in
loope
stos
lret
inc
lock
aam
pop
or
and
mov
cmp
iret
inc
cmp
andl
cmpl
ret
cmp
sbb
jnp
mov
hlt
add
push
loopne
ret
adc
les
cmp
adc
clc
push
shll
outsb
add
jg
inc
sbb
daa
pushf
insb
sub
add
jle
adc
std
aaa
mov
aas
lret
lds
dec
xor
lock
xor
sbb
loopne
pop
add
jnp
aas
outsb
mov
or
or
jno
inc
xor
jg
idivl
add
jp
push
loop
add
inc
lcall
inc
scas
repz
push
adc
iret
push
std
mov
add
lret
xchg
cmp
shll
push
fstl
rclb
mov
add
ret
hlt
add
push
jo
xchg
mov
fmuls
mov
or
ret
jmp
cltd
mov
mov
xchg
sahf
icebp
jg
cld
jb
sub
xchg
dec
mov
inc
mov
add
xchg
and
fistl
mov
pop
and
pop
call
addb
xchg
outsb
stc
push
dec
aas
out
into
loope
xchg
stc
ja
in
loop
mov
add
push
fs
pushf
sbb
dec
mov
mov
scas
test
or
stc
add
and
fiaddl
jg
xor
dec
notb
cltd
mov
aas
pop
repnz
aaa
aad
mov
and
cmp
dec
xor
leave
shll
add
xor
jl
push
jp
pusha
insb
arpl
pop
cmp
mov
lahf
pop
and
jno
les
or
inc
and
cmc
repnz
std
xorl
or
icebp
test
mov
dec
mov
cmp
mov
fwait
mov
pusha
stos
sahf
mov
add
or
pop
scas
dec
pusha
inc
push
and
test
incb
lret
dec
push
enter
cmp
dec
or
cmp
xchg
out
add
movsb
and
ss
dec
call
divb
inc
add
in
addb
xor
popf
push
clc
pop
fs
rcrb
into
dec
filds
into
popa
andb
and
int
xor
movsb
int3
or
xchg
ss
lgs
push
xchg
jo
fwait
jno
cmp
jo
dec
call
push
jmp
mov
sub
enter
xchg
pop
and
movsl
je
or
call
inc
clc
fiaddl
pop
pushf
test
cli
negl
or
add
mov
and
pop
add
jmp
mov
mov
mov
fwait
cmp
pusha
inc
add
dec
jmp
xlat
decl
jne
jl
dec
or
xor
add
rolb
add
cli
outsb
call
jb
mov
pop
imul
push
push
fnstcw
incb
ret
jl
enter
sahf
mov
xor
ljmp
cld
pop
sbb
dec
mov
adc
xor
sbbl
xchg
push
fs
mov
pop
xor
ret
call
iret
test
movsb
das
sbb
notb
fmul
or
fsts
xchg
orl
add
cmp
insl
push
and
call
pusha
incl
ret
jg
cld
xor
outsb
dec
inc
movsl
mov
dec
ds
aam
add
bound
icebp
aam
adc
and
cli
fnstsw
mov
int3
dec
jb
mov
cmp
and
loop
test
cwtl
mov
cmpsl
lock
mov
dec
mov
repz
daa
shlb
sbb
pop
jmp
and
mov
dec
xchg
pusha
fs
inc
clc
call
cli
inc
scas
add
sti
add
mov
popf
push
sbb
adc
push
int3
clc
sar
add
dec
ljmp
clc
add
cwtl
sbb
js
bound
clc
sahf
clc
cmpb
jne
aam
ret
in
mov
mov
ljmp
cld
rorb
mov
or
std
inc
mov
fdivs
mov
inc
mov
enter
mov
inc
mov
fmuls
popa
mov
dec
add
or
loope
incl
or
mov
push
cmp
adc
mov
push
jl
pop
and
cli
outsb
and
jl
movsl
rcl
cmc
or
mov
ljmp
lds
out
and
or
mov
dec
std
outsb
mov
in
fsub
and
sti
clc
ja
jle
and
mov
shll
jl
push
notl
cs
pop
mov
mov
cmpsb
push
loopne
mov
fdivrl
sbb
es
je
ljmp
lea
pop
lods
sbb
sub
stos
push
inc
xchg
shr
orl
jcxz
imul
inc
hlt
fwait
popf
decl
aas
scas
cltd
jbe
or
shrb
shl
sub
mov
xor
jne
inc
add
xlat
jecxz
sub
nop
mov
aam
adc
pushl
xchg
insb
fdivl
inc
insb
add
and
mov
lahf
mov
lock
imul
icebp
mov
enter
loop
pop
mov
inc
fistps
cltd
mov
in
and
out
sub
push
pop
hlt
jg
loope
fimuls
jmp
push
jbe
out
jge
push
sbb
cmp
ljmp
adc
outsl
fwait
out
or
loopne
aad
je
mov
scas
shrb
out
movl
and
mov
pushf
xchg
inc
mov
data16
js
adc
data16
mov
pop
mov
call
dec
push
sub
loope
lcall
mov
sbb
inc
jns
sub
add
sbb
mov
inc
jg
or
out
lods
pushl
in
je
mov
add
das
js
jbe
xor
dec
lret
add
pop
enter
sbb
mov
jp
lcall
adc
shl
jbe
sti
add
imul
aad
and
mov
imul
mov
jl
jne
mov
jbe
xchg
jmp
mov
or
call
sbb
imul
lock
enter
imul
repnz
test
in
testb
daa
push
mov
out
aaa
xchg
sub
outsl
mov
mov
stos
and
sbb
mov
lcall
in
popf
loop
push
mov
mov
cmp
mov
addb
fucomip
stos
testl
and
popa
clc
mov
movsl
fldlg2
rcl
repz
out
shrb
loopne
sub
adc
rclb
pushf
adc
pop
test
pop
stos
adc
mov
jmp
loop
xor
jge
xchg
sbb
adcl
shlb
mov
or
in
jno
decb
jo
rcrl
lds
les
push
jg
scas
and
into
lods
icebp
imul
or
flds
ja
outsb
add
sti
js
loope
int
cli
xor
addl
add
sbb
push
xor
insb
or
or
pop
pop
bnd
js
sub
sbb
lods
nop
jp
or
push
xchg
sar
lock
fsubrs
dec
aas
mov
test
cmp
or
in
or
inc
cmp
je
push
scas
leave
ljmp
nop
inc
bound
icebp
mov
aaa
mov
sub
xchg
xchg
int3
iret
sub
das
call
jmp
shl
leave
fcmovb
cwtl
test
push
mov
rcrb
add
xchg
mov
push
std
push
adc
mov
iret
gs
and
push
loope
mov
call
push
jo
lahf
add
ret
sub
mov
xor
aaa
jecxz
stc
adc
xor
lods
adc
jle
sub
sub
arpl
cmpsb
jo
shrb
xchg
cmp
sbbb
xchg
ljmp
add
test
sti
mov
test
cld
or
rcr
mull
loope
and
into
repnz
ret
shrb
jp
ljmp
push
hlt
push
cmp
aaa
cmp
ss
and
adc
xchg
lock
scas
sbb
rolb
add
cli
repnz
fimuls
cmc
sbb
jle
pop
add
jno
xor
cwtl
jp
sub
icebp
push
push
jmp
sbb
jge
add
sub
inc
sbb
push
dec
sub
adc
sti
pop
testl
and
les
popl
pusha
sub
out
sub
mov
xchg
push
add
add
push
lods
push
icebp
fimull
pusha
movsb
pop
fucomp
mov
insb
mov
out
decb
pop
sub
xchg
bound
push
and
test
mov
push
adc
sti
pop
push
aam
iret
ret
bound
loop
jo
dec
aad
cs
icebp
gs
ljmp
and
mov
jb
or
mov
outsb
into
aas
cmp
jno
mov
mov
mov
ucomiss
mov
in
pop
jl
xchg
in
mov
mov
jne
filds
or
imul
and
sub
lret
nop
sahf
xor
clc
pop
adc
sti
mov
fs
add
mov
push
in
rcll
mov
mov
shlb
or
jp
cmp
jbe
mov
jo
shr
loope
sahf
pop
mov
dec
test
fsubr
dec
clc
clc
add
mov
js
dec
jo
out
sbb
sub
lret
and
inc
adc
xchg
outsb
xor
xchg
jge
pop
mov
add
call
xchg
int3
and
aas
loopne
insb
jb
jp
sub
daa
mov
lcall
xor
jg
add
scas
pushl
dec
fwait
scas
sub
add
dec
ljmp
xor
add
sbbb
arpl
mov
inc
fsubrp
jl
lods
mov
cli
out
outsl
pop
jne
imul
cmp
ret
ret
mov
andl
push
pusha
shll
test
icebp
pop
dec
mov
daa
pop
or
fdivrp
cmc
int
rolb
ficomps
xorb
sub
test
hlt
mov
mov
inc
inc
clc
out
cmpsb
cmc
daa
add
cmp
push
add
aam
inc
rorb
orl
aad
daa
cli
fbld
and
mov
xlat
add
lahf
decl
aas
xchg
xchg
pushl
push
repnz
arpl
inc
or
aad
orb
cs
jecxz
jl
stc
arpl
mov
inc
jbe
insb
dec
faddl
pop
dec
clc
and
adc
es
mov
inc
enter
adc
sub
imul
pushf
mov
and
lds
movsl
and
xchg
push
or
lcall
ja
jle
loope
loope
pusha
dec
loope
xorb
mov
xchg
add
rcr
inc
loop
imul
cmp
jno,pt
loopne
icebp
xchg
or
pop
mov
out
jo
jle
idivb
and
imul
pusha
mov
in
inc
mov
cmp
rcrb
sub
pop
adc
adc
popa
fimuls
and
push
jp
mov
inc
jbe
push
jecxz
arpl
xorl
xor
loope
push
mov
popa
test
mov
inc
push
push
push
pop
jg
push
push
cld
outsl
and
lret
mulb
sbb
sub
in
movsb
das
loopne
mov
add
fcomps
xchg
inc
ret
cmpb
mov
aad
inc
hlt
dec
cmp
cmp
mov
cld
adc
mov
jnp
mov
js
les
bound
ljmp
clc
js
xchg
pop
cld
popf
ss
insl
xchg
stos
cmp
into
lock
aam
cmp
clc
jmp
xor
dec
sahf
sarb
fwait
jns
int3
mov
and
sti
incl
mov
pop
aas
mov
xorb
or
mov
jecxz
out
clc
shr
jle
and
enter
jnp
adc
xor
mov
inc
loope
mov
stc
cmp
or
add
dec
mov
pop
iret
test
pop
lds
les
and
dec
sub
aas
and
mov
ficomps
xor
pusha
add
es
pop
or
je
fistps
adc
add
fs
inc
pushf
xchg
dec
arpl
xchg
imul
jge
pop
sub
inc
add
jg
cld
adc
xor
stos
push
mov
add
stos
imul
das
cli
test
sbb
pushf
fcmovnb
stc
mov
pop
xchg
xchg
mov
sub
add
xchg
push
dec
mov
mov
scas
sub
icebp
cmpsb
je
mov
xchg
fildl
jp
je
outsb
dec
mov
lahf
aam
mov
iret
dec
xorb
adc
lods
mov
pushf
ret
popf
fiaddl
fbstp
push
mov
and
mov
cmp
pushf
pop
xor
cwtl
pop
lahf
jl
and
dec
jl
mov
into
xchg
in
leave
pop
sub
pop
sub
aam
add
cmp
ds
lods
aaa
orb
cmp
add
push
pop
cmc
fisubrs
push
sub
cmp
addl
jl
mov
adc
push
push
xor
daa
mov
or
jecxz
pushf
andnps
sub
icebp
push
adc
pop
add
cmp
mov
mov
rcrl
adc
fsubl
adc
push
imull
or
xchg
fsubrs
cmp
mov
cli
inc
jg
out
jle
add
mov
cli
jge
rol
cmpsl
sarl
dec
cld
jmp
lea
adc
popf
cmp
sub
cld
mov
jl
xor
loop
insl
ret
push
xlat
ficoml
adc
ss
mov
mov
rorb
xchg
subb
xchg
mov
push
mov
sub
or
add
add
and
cmpsl
add
lret
jo
shl
xor
ja
mov
push
push
mov
add
and
sbb
sar
stc
cmp
js
int
mov
xlat
sahf
mov
mov
scas
push
cmc
jbe
in
notl
fdivrs
std
lods
inc
push
xor
dec
clc
inc
std
mov
inc
add
add
loopne
popa
std
daa
les
insb
jl
orb
scas
push
popf
addr16
ret
mov
xchg
scas
call
mov
pusha
rorb
negl
xchg
sub
push
decl
notb
nop
push
loope
adc
jle
cmc
in
pop
ret
push
sub
in
dec
cmp
dec
sbb
loopne
cld
mov
mov
add
repz
sbb
mov
jle
dec
or
sub
inc
fdivrp
adc
fidivrl
adc
cmpsl
sub
scas
loop
adc
push
xor
imul
or
scas
mov
and
into
sbb
lods
iret
xchg
es
fs
cld
das
test
loop
int
les
push
dec
shl
das
clc
pop
inc
notl
pop
jb
xchg
lret
cmp
arpl
dec
pop
mov
imul
cmp
add
sbb
enter
add
in
add
xor
or
push
inc
pop
das
clc
aaa
or
mov
mov
pop
add
cwtl
or
cmp
add
push
hlt
je
dec
push
jp
pop
repz
arpl
cs
call
cmp
mov
xor
inc
rorb
rcll
repnz
adc
or
push
inc
cmp
inc
movsb
out
sarl
jl
sbb
lock
ror
lods
fbld
mov
mov
filds
cmpsb
push
test
rolb
sbb
or
dec
or
lret
stc
cmp
sub
adc
aas
lret
clc
cmp
repnz
lret
call
inc
sti
add
icebp
lahf
mov
mov
mov
sbb
sbb
data16
shlb
ret
dec
test
or
call
jg
mov
mov
xchg
jne
out
loop
lea
lods
js
adc
pop
xor
xor
jg
pop
nop
sbb
les
xor
pop
mov
jns
cld
inc
std
nop
mov
mov
movsb
and
and
loop
testb
scas
jo
push
push
xchg
movl
push
or
lods
add
outsl
sbbl
into
pushf
std
stc
jne
xor
fsubl
add
pop
sbb
fdivr
orb
addr16
jp
inc
sbb
add
insb
pusha
sub
cltd
loop
cmp
push
aam
std
cwtl
scas
mov
push
lret
mov
lods
mov
fildl
shl
scas
mov
sbb
movsl
mov
pop
mov
adc
push
push
mov
daa
push
ljmp
inc
das
les
andl
pushf
in
ss
add
lods
stc
out
adc
int3
sahf
and
sub
les
ffreep
test
sbb
xchg
push
xor
shlb
clc
cmpsl
xor
sbb
jbe
sub
ret
popf
in
bound
into
imul
jb
insl
xor
jmp
test
test
xor
push
pushf
fcmovnu
inc
jge
lock
dec
ss
push
xchg
mov
rolb
push
das
shrb
push
sarb
enter
jg
xor
stos
adcb
shl
cmp
mov
mov
movsb
push
pop
outsb
das
out
iret
inc
push
pop
xchg
outsb
adc
push
movsb
push
jbe
mov
loop
cltd
lods
sbb
mov
and
inc
mov
adc
sti
mov
sbb
push
std
push
fdivrs
dec
xor
mov
icebp
pop
jl
into
cld
fdivl
mov
or
imul
xlat
mov
inc
add
loope
fiaddl
mov
inc
int
mov
in
adc
pop
lret
jmp
shr
enter
rcll
dec
ljmp
xor
jno
sbb
lcall
in
sub
lock
sbb
sahf
mov
rcrb
data16
pushf
mov
stc
inc
std
ljmp
xchg
in
sbb
in
push
push
add
pushf
test
xchg
push
lds
inc
ret
nop
icebp
xchg
fidivl
inc
pop
test
push
adcb
xor
push
and
lock
jecxz
mov
ret
fsubs
adc
icebp
mov
scas
mov
aam
clc
and
sbb
or
ja
sbb
add
decl
push
mov
aaa
adc
jg
jg
daa
popf
sti
popf
adc
adcl
xor
test
imul
mov
and
bound
mov
cmpsb
scas
je
jg
inc
cld
ja
scas
or
xchg
iret
pop
jns
ja
xchg
inc
push
xchg
icebp
aas
stos
shr
mov
jbe
xchg
test
mov
lods
aam
or
les
decl
dec
or
lret
add
mov
push
adc
push
add
mov
jb
inc
int3
sub
vmovaps
ss
pop
xor
outsb
push
sub
and
mov
jae
ljmp
fxch
imulb
xor
inc
add
std
jns
sbbb
jge
aam
sub
add
ljmp
lret
xchg
lea
rcll
sbb
aas
jl,pt
xor
adc
xchg
dec
ret
inc
sub
sub
dec
jge
cmp
mov
xchg
jns
push
dec
jg
pop
jo
sbb
mov
mov
jae
arpl
cli
cmp
or
ds
fldcw
and
scas
adc
inc
pop
dec
repnz
sbb
cmovno
sub
std
rorl
scas
aad
jl
xor
jo
pop
icebp
pusha
dec
push
xchg
mov
sub
mov
icebp
dec
stos
out
fsubs
jns
stos
mov
pop
stos
mov
add
pop
sub
add
cmpsl
rcl
nop
mull
jle
in
push
and
dec
outsw
fnsave
jle
xchg
inc
out
outsl
das
scas
popf
ror
or
pop
movsl
scas
pop
adc
mov
hlt
adc
pop
sub
inc
sbb
xchg
jb
mov
mov
jg
xor
add
and
adc
shll
cs
aaa
push
jae
dec
push
pusha
sbb
add
xor
rorb
xchg
rol
add
sbb
xor
dec
les
dec
jmp
and
pop
push
push
fdivl
std
shrl
mov
ljmp
push
ds
loopne
cmc
xchg
cmp
dec
leave
fld
popf
je
cmp
lret
cmp
test
sub
cltd
jns
inc
mov
xor
bound
pop
mov
adc
imul
and
sbb
pop
push
bound
mov
inc
pop
xchg
clc
sbb
sub
or
aas
xchg
jo
out
cmpsb
or
sub
scas
aam
cmp
out
fistpll
inc
scas
lock
push
outsl
mov
sub
xor
xorl
aam
repnz
mov
pop
push
fs
ret
cmp
outsb
adc
icebp
outsb
fiadds
popf
fs
or
les
xorb
out
mov
jb
inc
test
das
jno
mov
dec
rcrb
aas
and
bound
inc
shll
ds
sbb
mov
scas
lcall
lcall
lock
pop
es
or
and
jg
in
seta
jge
push
js
mov
js
adc
mov
fiaddl
in
push
adc
iret
and
std
inc
das
adc
test
lock
inc
or
icebp
jg
mov
repz
insb
mov
jecxz
gs
mov
mov
pop
out
fstl
ljmp
push
ficomps
pop
xor
cld
add
xor
insb
or
test
pop
fdivrl
mov
or
add
repnz
clc
loop
lock
sub
or
mov
sti
sbb
xlat
fists
pop
fcomps
pop
xor
add
add
lcall
sub
push
or
pop
inc
mov
mov
out
push
jge
jae
inc
mov
sub
repz
movsl
push
fs
and
ds
dec
push
cmp
or
push
ret
aas
jp
stos
sahf
add
stos
xchg
pop
or
lods
outsl
push
add
jg
aas
sub
idivl
pop
inc
lock
ud0
shll
out
and
loopne
pop
mov
push
inc
ret
cli
push
inc
inc
incb
pop
call
jl
xor
mov
add
pushf
xchg
push
in
xor
fisttpl
and
adc
int
xor
mov
sub
adc
shlb
in
mov
cmp
lcall
loop
cmpl
inc
sti
jp
push
adc
add
push
rolb
repnz
mov
cmovl
push
nop
cltd
inc
fiaddl
lods
shll
inc
dec
addr16
fcomip
jle
jno
push
je
les
in
xchg
incb
cmpsb
hlt
mov
popa
daa
inc
add
pop
test
add
vpsubd
jmp
ret
test
push
cld
jg
pop
roll
sbb
pushf
aam
mov
pop
add
in
jno
mov
xchg
and
dec
jp
push
fwait
mov
sbb
push
ss
mov
or
decb
push
shlb
pop
out
stos
dec
dec
push
mov
cld
and
add
or
loopne,pn
ret
mov
scas
dec
dec
inc
or
jg
repnz
mov
les
mov
imul
mov
inc
gs
mov
cmpsl
push
inc
stc
fisttpl
cs
mov
call
mov
mov
inc
sbb
jnp
scas
or
lcall
pop
cltd
in
sti
ficompl
stc
es
mov
iret
cld
lea
decb
loope
cmp
in
lcall
add
pop
inc
push
imul
mov
xchg
adc
ds
aas
jno
sarl
aas
cli
or
es
pusha
jmp
dec
or
push
ss
inc
xchg
cmp
outsl
fnstenv
sbb
nop
jno
push
scas
mov
shrl
and
lea
shrb
pop
pop
mov
stos
mov
ret
popf
jmp
mov
mov
ja
icebp
scas
or
push
cltd
push
mov
xchg
sarb
clc
sub
pop
mul
sub
test
sub
incl
xchg
sub
push
cmp
inc
dec
dec
or
or
mov
popa
jb
repnz
ret
loopne
dec
jl
adc
aas
ret
and
adc
push
test
adc
das
or
popf
ficomps
jp
mov
mov
data16
pop
cmp
ss
mov
jae
int3
ds
push
shl
lock
shl
loop
sub
xchg
mov
add
xor
add
sbb
fcoms
add
or
dec
hlt
addr16
aas
xchg
fcomps
nop
das
ret
jbe
incl
popa
dec
jno
mov
jns,pn
push
lea
std
inc
mov
cmp
gs
std
cli
inc
ja
aam
popf
scas
xchg
cmp
jp
in
daa
ljmp
dec
jbe
mov
cmp
xor
push
clc
sbb
push
and
mov
loope
subl
outsl
jo
aas
ljmp
test
mov
jl
pop
jge
mov
pusha
pop
or
outsl
mov
and
rcl
clc
ja
rorb
fsub
cmp
outsb
out
sbb
icebp
or
add
pop
int3
dec
dec
cmp
adc
push
shll
inc
mov
fildl
and
ret
ljmp
aad
sub
mov
xor
adc
xorb
sarb
inc
push
push
sahf
sbb
pop
jae
mov
pop
add
mov
jp
xor
push
adcl
jo
fwait
and
pusha
aam
jb
dec
rcr
xor
pop
or
test
popa
repz
adc
hlt
fcoml
mov
lcall
jge
and
es
or
mov
or
and
stos
pop
cld
scas
xchg
or
inc
lcall
or
stos
push
push
xchg
sar
sbb
lret
dec
enter
push
jmp
jle
sub
out
inc
and
inc
cmp
stos
or
jo
sub
and
popf
push
push
sarl
push
fidivrl
pushf
out
xor
imul
cmpsb
and
jb
push
or
outsb
pop
cmp
cmc
or
sub
cmp
dec
loope
orl
mov
pushf
xchg
adc
std
jmp
subb
jo
pop
scas
ljmp
insl
das
inc
push
out
adc
mov
inc
jbe
mov
mov
cmp
loopne
cld
add
push
add
popa
jnp
xchg
mov
jno
xchg
adc
hlt
js
daa
dec
arpl
dec
jmp
dec
push
push
add
aad
ljmp
and
cli
outsb
ja
test
std
addl
rcll
mov
adc
je
add
xchg
aad
fists
test
les
xchg
inc
cli
push
sbb
outsb
lock
rorl
outsl
bound
std
cmc
lds
mov
test
out
lretw
lret
add
int3
repz
mov
out
push
stc
pop
xor
jb
imul
cs
arpl
pusha
enter
mul
js
stc
xor
pop
in
inc
or
xchg
or
xchg
mov
cld
iret
pusha
add
inc
std
pop
das
adc
repz
aam
clc
rcrl
subl
cmp
pop
test
popf
mov
mov
sbbl
loop
xor
js
dec
fstl
out
push
lods
pop
mov
cmp
ds
in
adc
or
loope
pop
sar
aaa
mov
mov
ret
bound
xor
lock
cwtl
ljmp
sbb
cli
out
setne
jo
movsl
pop
mov
cmp
mov
cmp
lea
pop
stos
xchg
stos
mov
stos
push
mov
mov
dec
add
lods
jecxz
stc
push
fisubrl
sbb
add
dec
dec
fs
repnz
jge
adc
inc
pop
stc
aas
jnp
xor
leave
adc
cmp
mov
test
xchg
push
mov
aad
cwtl
dec
sub
sub
adc
cmp
sti
mov
xor
movsb
push
sbb
pusha
es
lods
call
push
push
mov
aad
stc
and
mov
adc
mov
mov
add
push
and
xchg
test
ds
mov
daa
lea
pop
xor
bound
imul
inc
stc
fidivs
jg
or
loop
or
add
pop
inc
dec
push
ljmp
fidivs
call
aam
inc
mov
cmp
add
push
push
sbb
and
sbb
mov
enter
mov
pop
inc
or
or
ror
das
sbb
xchg
add
jmp
cmp
push
lret
mov
lret
push
add
fisubl
add
and
pop
cltd
pop
stc
jns
dec
xor
sub
mov
mov
addr16
pop
popf
add
movsb
test
pop
data16
fcompl
xor
sub
cmp
stos
hlt
sahf
leave
sbb
es
mov
xchg
ja
add
dec
rcrl
adc
test
sbb
cmp
or
cld
push
pop
or
jmp
xor
or
fwait
std
or
lret
mov
test
movsb
pusha
adc
out
enter
rol
cmp
cld
mov
addr16
daa
addr16
or
int
loopne
rcr
lods
add
aam
mov
adc
dec
pop
divps
jmp
imul
push
mov
xor
pusha
test
lahf
test
dec
xchg
ja
jmp
and
inc
jl
aam
cli
sbb
inc
loope
push
pop
add
iret
sub
xchg
mov
sub
je
data16
negb
add
or
mov
add
mov
or
fisttpl
nop
sbb
sub
and
lods
test
aam
loope
push
pop
push
ljmp
cmpsb
push
jns
dec
cmp
imul
sub
and
pop
popa
xlat
daa
insb
pop
enter
adc
xor
mov
add
pop
ja
outsl
sub
es
movsl
pop
decl
add
pop
ds
daa
or
mov
aaa
insb
mov
call
jb
ret
pop
push
mov
out
dec
sbb
insb
or
pop
pop
jl
sahf
pop
mov
mov
lods
cmp
ljmp
lahf
test
adc
xor
sbb
adc
hlt
mov
xchg
test
sub
gs
test
and
inc
shl
std
aam
xchg
add
pushf
jbe
mov
mov
mov
mov
repnz
jne
imul
xchg
adc
adc
mov
pop
pop
insl
mov
aas
lcall
hlt
loope
test
add
imul
shl
cwtl
push
insb
daa
jne
shrl
lods
mov
adc
push
jg
pop
hlt
cmp
or
test
mov
cmpsb
scas
pop
jge
push
das
push
push
ja
andl
sbb
shrb
dec
aad
js
mov
push
das
and
loope
adc
loop
add
inc
mov
push
and
pop
fldt
lret
jmp
xabort
das
test
add
jo
stos
and
sti
aaa
enter
pop
fnstenv
and
pusha
pop
fmul
pop
adc
adc
jne
dec
xor
out
jmp
lahf
or
cmp
je
test
inc
jl
shr
pop
sbb
sti
insl
lcall
add
out
pusha
gs
pop
adc
dec
les
mov
popa
sub
cmp
inc
pop
lea
pop
loope
add
rorl
lahf
ss
pop
pusha
repz
push
pop
fadds
addr16
dec
push
icebp
loopne
push
rorl
xchg
ficomps
push
mov
or
dec
je
cs
or
inc
mov
fadds
mov
xlat
add
addr16
stos
loop
std
mov
icebp
ret
sbb
rcrb
bound
outsb
clc
adc
mov
add
mov
sub
mov
add
jo
mov
int
dec
out
push
lds
adc
pop
adc
paddw
jns
or
icebp
addr16
sbb
xchg
lea
test
sub
pop
inc
pop
out
lcall
add
xchg
pop
test
shlb
clc
adc
hlt
les
shr
pop
out
sub
aam
jae
or
and
sub
cmc
dec
mov
adcl
ljmp
xor
insl
lods
pop
jo
xorb
es
loopne
mov
add
pop
mov
inc
cltd
fcomip
mov
jge
rorl
sub
sti
cli
dec
xchg
ror
cs
lret
xchg
ror
adc
scas
inc
out
test
daa
mov
test
shrl
cmp
push
stos
mov
hlt
pop
repnz
cwtl
mov
subl
aaa
xchg
fcompl
jae
cmp
mov
pop
pop
stos
fidivrs
rol
out
xchg
cmp
adc
leave
sbb
fldt
fmulp
subl
mov
and
movsb
push
mov
pusha
pop
rcrl
int
xchg
es
and
xor
cmp
clc
rclb
lds
mov
jl
xor
jmp
insb
add
or
xchg
push
fnstenv
pop
loop
adc
sbb
mov
mov
jge
iret
into
in
ds
and
adcl
aad
cwtl
filds
add
clc
loopne
mov
pop
dec
das
js
jp
mov
xor
imul
push
orl
xor
xlat
mov
fadd
pop
sbb
cwtl
sub
inc
add
test
adc
in
sbb
push
pushf
outsl
push
rorl
lret
inc
inc
ret
and
loope
adc
and
pop
and
sub
test
mov
pop
out
rcl
sbb
lods
push
pop
adc
test
jb
imul
pop
cwtl
xchg
mov
aam
push
cmp
subl
stos
out
jge
cs
xchg
ret
cmp
jae
data16
jle
cmp
and
xor
push
cmp
or
shll
test
mov
dec
xor
xchg
ffreep
cmp
in
pop
test
xor
xchg
mov
mov
xchg
xchg
xchg
dec
test
pop
std
fidivl
cmp
cmp
cmp
pop
cmp
mov
mov
adc
push
stc
mov
add
test
mov
loopne
in
lods
add
add
cwtl
mov
lcall
xchg
mov
inc
adc
pop
lret
cwtl
sub
rcrb
nop
push
stos
bound
mov
in
in
call
mov
cmp
fs
sub
cli
flds
scas
add
pop
fcmove
dec
ret
jo
ljmp
push
call
dec
cld
adc
or
test
clc
test
xor
jmp
pop
add
cld
or
cmpsl
cwtl
xor
jae
pop
in
and
daa
clc
pop
pop
lahf
rol
add
sub
pop
aas
lds
movsl
movsl
inc
iret
or
and
leave
js
in
xor
or
inc
push
enter
sbb
mov
pop
shr
int
dec
dec
ficomps
push
call
icebp
enter
je
fimull
mov
push
xlat
test
pop
in
popa
dec
inc
pop
sbb
mov
mov
les
xchg
mov
push
sarb
pop
dec
pop
out
push
aaa
je
iret
clc
je
add
sub
cmp
mov
les
push
fwait
push
inc
incb
filds
mov
adc
ror
inc
xchg
scas
lods
xor
outsl
pop
add
lods
mov
lret
pop
pushl
inc
cmp
fiaddl
loope
aaa
test
leave
mov
cld
std
xor
ss
rol
repz
es
lods
std
push
rorl
mov
xor
or
add
pusha
adc
xor
mov
lret
mov
movsb
dec
fwait
imul
loop
insb
fisubrs
cmp
in
popf
add
scas
stos
out
pop
jnp
pop
fimuls
pop
xchg
pop
xchg
push
pop
shl
stos
adc
jl
mov
cmpsb
and
or
testl
arpl
ficoml
sub
pop
xor
mov
or
mov
fst
mov
cld
rcr
addr16
imul
cld
stos
mov
xor
sbb
adc
clc
and
loopne
jp
fwait
mov
xchg
jp
frstor
jae
lret
flds
sti
jne
fdivrs
cli
cmc
pop
iret
mov
lock
xchg
lcall
mov
loop
xchg
pop
mov
push
pop
lahf
inc
dec
fmuls
xchg
or
out
adc
arpl
lcall
jmp
mov
test
sub
mov
pushf
mov
ret
in
addr16
scas
sahf
fwait
push
push
imul
ljmp
dec
pop
sbb
and
mov
nop
addr16
je
dec
jno
fucomip
mov
xchg
adc
lcall
pusha
mov
enter
movl
jb
inc
push
clc
or
inc
shl
push
int
repnz
push
test
or
mov
jl
js
lds
push
std
stos
insl
mov
mov
call
data16
das
insb
scas
lods
push
cmc
lds
fbstp
and
pop
mov
add
inc
jae
fsubrs
pop
test
addb
daa
push
cmc
movsb
jecxz
cmc
adcl
lea
jp
sub
andl
sbb
inc
mov
xor
ds
inc
push
aad
bound
jle
push
jg
mov
xchg
push
cmp
cmpsl
fidivs
int3
insl
mov
not
mov
pop
pop
push
sub
jnp
xchg
xchg
sbbl
cmpsb
out
mov
int
loope
pop
loope
out
test
stos
test
mov
lods
in
jp
and
jae
jg
dec
add
or
mov
enter
dec
sub
insb
sbb
dec
test
lea
scas
fldenv
lea
jle
sub
cld
test
dec
hlt
inc
push
adc
mov
pusha
in
fidivl
jae
in
mov
testl
les
out
call
xor
jbe
loope
sbb
mov
inc
sbb
dec
push
enter
call
loopne
imul
bound
mov
fdivrs
rolb
fdivs
mov
imulb
push
dec
shrw
call
or
push
mov
and
pop
jmp
nop
add
push
jl
loopne
push
pop
dec
lock
jae
pop
lock
loop
pop
popa
dec
jb
jnp
add
jns
fcomp
adc
jo
test
jbe
dec
jmp
jp
movsl
cmp
hlt
or
shrb
rorb
sahf
out
add
xor
insl
sub
std
test
ficompl
das
mov
xor
sar
inc
popa
inc
mov
jo
andb
or
mul
sarl
and
cld
les
lock
fucomi
push
out
orb
das
sbb
adc
sbb
sbb
cmc
ret
or
mov
jg
and
inc
cmp
or
lds
scas
mov
inc
out
cmp
mov
lods
in
test
mov
pop
push
or
dec
ficoms
and
icebp
mov
in
pop
scas
mov
jl
add
std
pop
dec
cli
sbb
leave
and
cwtl
pop
rorl
jo
inc
aaa
or
test
je
or
inc
xor
and
push
push
vcmpps
mov
je
stos
jns
mov
fcoms
stc
addr16
sub
jle
add
cmp
add
loop
cs
cmp
fsubrs
mov
jg
dec
cmp
xor
je
push
push
rcrb
int
outsl
scas
repnz
aad
hlt
and
or
daa
loope
loop
std
aad
add
ds
shlb
jp
test
xchg
sbb
repz
mov
sbb
pop
jb
dec
js
mov
call
in
loopne
mov
adc
int3
mov
inc
inc
punpckldq
mov
incb
icebp
sahf
icebp
or
sub
add
xchg
cmpsb
jbe
pop
es
stos
pop
icebp
lods
stos
mov
fildll
pusha
dec
xor
mov
je
loop
inc
xchg
dec
sub
push
sbb
data16
mov
xor
les
lret
ss
ds
ret
int
xchg
mov
sbb
sub
push
push
jbe
imul
sbb
cltd
mov
and
adcb
or
dec
inc
rclb
iret
insl
gs
popf
nop
jmp
es
cs
iret
and
or
mov
xor
pop
shll
mov
mov
push
dec
xor
mov
mov
sbb
das
jno
loop
jecxz
pop
mov
sti
pop
push
insb
sub
inc
repnz
mov
cmp
and
movsb
xor
inc
adc
jmp
std
cmpsl
mov
jnp
fsubp
sbb
pop
cmc
rorb
mov
and
dec
std
add
pop
int
test
pop
aaa
adc
xor
rcrl
mov
pop
int
inc
and
movsl
ljmp
adc
scas
or
adc
xor
lods
outsb
rcrl
sahf
test
cltd
or
std
jecxz
mov
imul
mov
fwait
xchg
cmp
sar
mov
inc
mov
ficoml
sbb
xor
mov
lea
xor
push
add
shrb
jl,pn
stos
xor
test
cmp
add
push
push
sahf
pop
push
pop
loope
cld
addr16
stc
cmpsb
add
sbb
mov
push
aad
mov
mov
loop
lock
sbb
call
xor
andb
mov
scas
cli
mov
mov
es
adc
mov
lahf
das
incl
push
add
mov
fwait
push
scas
push
pop
mov
shrb
push
xchg
sbb
mov
jle
mov
and
in
add
nop
aam
inc
or
jle
into
sbb
cmpsb
mov
or
xor
inc
sbb
mov
adc
rcll
mov
inc
cli
pusha
loop
xor
mov
cwtl
std
les
fildll
adc
fcoms
int3
imul
mov
push
movsb
aad
add
mov
fdivs
sbb
sqrtps
loopne
nop
ljmp
jns
loop
sbb
inc
dec
dec
loopne
inc
rcll
or
xchg
outsb
xor
dec
adc
movsl
ret
xor
ljmp
movsb
ret
jg
xor
or
xor
in
stos
cmp
rcrb
fadds
jae
mov
pop
adc
mov
test
sbb
or
push
sbb
push
xchg
pop
test
inc
or
sbb
add
pop
xor
and
and
shrb
repnz
add
xor
pop
cmp
inc
insl
cmp
push
mov
xlat
loopne
and
sub
cld
test
push
sbb
xchg
xor
rol
addl
mov
sbb
jge
sub
sub
jl
sti
fldenv
mov
push
pop
xchg
jecxz
mov
adc
mov
addb
mov
cmpsb
test
ret
int
dec
jmp
shll
fdivl
push
jne
adc
push
and
cmc
sbb
scas
add
daa
sub
jmp
cmpsb
loopne
clc
push
repz
mov
dec
mov
cmp
shrb
test
fildl
int3
daa
std
add
mov
add
sbbb
ds
out
js
cld
add
or
xchg
add
rcrb
xor
hlt
mov
or
add
dec
mov
in
icebp
call
xor
fcmovnb
jmp
sub
lods
adc
cli
pop
inc
and
xor
shll
inc
fstp
inc
popf
mov
clc
mov
xchg
push
push
pop
mov
pop
pushl
pop
in
jg
inc
sbb
lret
jo
push
rolb
roll
pop
js
dec
stos
ror
test
hlt
add
add
pop
clc
push
in
mov
cmp
loop
add
pusha
adc
orl
inc
push
dec
nop
mov
cld
cs
imull
aaa
mov
loop
jl
enter
mov
add
stos
mov
sbbb
push
cmp
sub
out
inc
and
nop
pusha
outsb
aad
icebp
loopne,pn
mov
rorb
sub
xchg
mov
mov
jecxz
add
push
push
jle
fcmovnbe
sbb
jnp
or
push
insb
xchg
jge
push
cmp
push
sub
scas
mov
adc
repnz
jp
sub
rcrb
roll
in
addr16
jo
out
shrl
jbe
ljmp
mov
and
inc
loopne
jnp
push
mov
mov
push
pop
pop
test
testb
adc
or
movsb
imul
sahf
add
outsl
lock
cmp
jl
sbb
or
mov
ja
push
fcoms
add
mov
mov
xchg
add
cwtl
pop
insl
repz
fwait
jmp
sub
mov
xchg
lods
pop
repnz
mov
aam
pushf
aad
xor
cmp
jp
xor
test
pop
cmpsl
ret
or
es
push
cmp
inc
jb
add
aam
pop
movsl
das
mov
dec
push
movsl
cmc
mov
outsb
mov
mov
jmp
adc
dec
xor
pop
push
aad
jb
and
mov
mov
out
ljmp
mov
mov
mov
add
mov
js
bound
xchg
adc
jle
out
adc
push
adc
jno
inc
jle
loope
push
cli
pop
gs
lahf
cld
lods
push
fisubl
push
ret
icebp
add
iret
xor
jle
mov
or
add
lods
notb
jne
xchg
lcall
mov
or
sub
push
pop
out
add
cmp
or
and
dec
stos
sbbl
scas
dec
jns
and
mov
sub
mov
dec
fnstsw
jns
dec
movsb
mov
test
icebp
inc
pop
cmc
push
add
shll
xchg
in
daa
movsb
addb
clc
femms
dec
loopne
pushf
gs
mov
mov
mov
test
add
loope
sbb
mov
push
mov
fucomp
aam
mov
add
lds
jno
insl
pop
scas
xchg
rclb
mov
or
call
movsl
mov
push
pushf
mov
clc
push
pop
sub
pushf
and
adc
shll
jg
jo
imul
xchg
mov
add
sub
mov
rorb
mov
mov
mov
or
cltd
jns
xchg
cmp
jo
roll
mov
adc
jg
push
add
leave
popl
loopne
test
call
push
xor
sub
movsb
sbb
jns
xchg
adc
add
xlat
dec
das
cmc
popa
mov
jnp
pop
inc
in
sub
loope
lock
outsb
sbb
lcall
jbe
inc
std
and
test
gs
sub
jo
add
mov
in
add
inc
xor
pop
jge
in
push
mov
xchg
sub
jecxz
out
sub
cmp
scas
mov
in
fdivs
or
xor
or
imul
leave
sub
mov
mov
sbb
add
negb
lock
xchg
or
push
je
pop
push
notb
xor
inc
adc
in
mov
pusha
aam
pop
mov
xchg
or
fidivs
sub
inc
inc
imul
test
sti
out
and
es
rclb
divb
fisubrl
pop
adc
shl
or
or
imul
mov
push
jae
fs
inc
pop
dec
or
and
mov
fimull
lods
pushf
jl
ss
dec
mov
push
mov
xor
aas
push
inc
sub
das
je
sarl
je
jbe
inc
daa
sbb
addl
and
lds
subl
mov
jge
jmp
mov
cmp
push
in
aaa
clc
jle
pushf
stos
std
mov
adc
push
jmp
inc
adc
sub
mov
clc
jb
cmpsl
add
es
ljmp
daa
mov
stos
mov
clc
outsb
popf
pop
sub
add
mov
add
adc
add
push
xor
addr16
or
hlt
xor
cli
dec
lcall
jle
pushf
jnp
mov
jb
cmp
inc
in
je
and
pop
nop
mov
add
push
fmuls
stos
mov
js
sbb
nop
mov
push
adcb
push
loopne
fs
pop
je
jp
shlb
push
push
dec
and
push
dec
outsl
fists
pop
popf
bound
mov
js
test
jmp
ror
push
dec
jmp
mov
push
inc
repz
jno
loop
adc
xor
push
xor
sbb
aas
outsb
pop
je
add
and
mov
and
stos
lea
inc
xchg
jecxz
cld
xchg
gs
and
pop
out
pop
lret
orb
das
sbb
or
repz
aas
jb
popf
or
inc
jl
xchg
xchg
rcll
adc
or
mov
jo
mov
imul
xor
fimull
dec
jecxz
pop
mov
add
add
ret
mov
adc
mov
xchg
inc
sbb
mov
and
push
jno
xor
adcl
inc
pop
subl
push
or
xor
mov
cmpsb
adc
push
add
sbbb
ljmp
in
push
mov
ss
jge
outsl
add
push
sub
rcrb
mov
dec
mov
and
les
js
das
cmp
testb
add
dec
xor
push
filds
push
dec
push
push
mov
lcall
pop
sarb
addr16
cmc
dec
sbb
lods
cmc
dec
dec
loopne
sub
loopne
and
and
sub
add
icebp
mov
fisttpl
inc
adc
pop
clc
mov
int
addr16
mov
mov
nop
xor
inc
in
adc
inc
push
shufps
ret
aas
pop
pop
sbb
fwait
cmp
stos
ljmp
jp
lahf
test
lret
add
movsb
adc
aaa
sub
push
xor
cmpsb
or
mov
ud0
ret
ret
xor
loopne
mov
mov
sbb
scas
lcall
add
gs
add
arpl
pop
adc
pushf
xorb
add
adcb
int
push
adc
or
imul
mov
lahf
sub
out
push
fidivrs
fadds
stos
xchg
das
mov
inc
enter
mov
add
and
out
or
fmulp
das
jmp
popl
jne
dec
outsb
push
mov
cmp
cmp
adc
frstor
cmp
adc
dec
int
add
nop
jbe
jo
cli
dec
fisubrs
mov
pop
std
xor
mov
pushf
and
and
dec
push
cmp
add
scas
cwtl
sbb
outsl
outsb
outsl
roll
cmp
fs
sub
pop
mov
seta
add
mov
cmpsl
or
push
xor
sbb
out
mov
aaa
add
fists
pop
bound
stos
inc
loopne
cmp
jbe
add
in
sbb
ret
mov
cld
xchg
push
and
and
andb
inc
lds
adc
xor
xchg
pushf
test
cld
adc
ret
dec
mov
ret
mov
and
std
mov
popf
loopne
dec
cmp
fwait
loopne
bsf
jle
cs
pop
iret
clc
sbb
fdiv
adc
stos
shll
lock
js
xlat
test
iret
inc
sbb
shll
inc
xor
je
jge
stos
pop
fidivs
xor
xchg
ret
add
test
cmc
mov
or
add
push
hlt
or
insb
out
mov
imul
jecxz
xor
out
rorl
push
pop
dec
clc
shll
nop
repnz
xchg
mov
mov
push
fs
adc
test
xor
pushf
push
jnp
xor
xor
rcll
sbb
adc
out
scas
pop
test
test
pop
pop
mov
inc
into
jb
xor
and
pusha
jl
fcomps
pop
pop
mov
jp
pop
push
inc
mov
mov
jle
cmp
mov
cmc
and
fistl
scas
mov
jbe
add
leave
mov
dec
mov
or
imul
aad
adc
mov
fsubl
inc
ret
xor
fsubl
jnp
cltd
adc
mov
push
imul
dec
jmp
inc
mov
xchg
stos
inc
push
outsb
daa
inc
cs
mov
pop
add
pop
mov
xchg
loope
aas
add
jp
xor
cmpsl
pop
cld
inc
or
testb
or
movsb
mov
fcmovnb
push
push
ja
clc
jecxz
xchg
adc
xchg
mov
jo
fldt
xlat
or
push
or
cld
and
aam
mov
and
loopne
lods
std
aad
popf
imul
lahf
js
fwait
int
cmpsb
cmp
bound
sub
testb
mov
bound
sarb
test
sub
or
incb
mov
dec
mov
mov
fxch
sub
insl
shlb
xchg
js
scas
ret
cmpsb
or
je
arpl
xchg
sub
lahf
inc
inc
rclb
cmp
adc
inc
pop
xchg
ficoms
adc
pop
loop
push
rcll
aaa
lds
leave
fidivl
inc
clc
dec
ret
xchg
add
lock
jo
dec
and
and
jb
repnz
insl
sbb
xchg
cmpsb
ljmp
jle
jbe
mov
aaa
pop
cmp
pop
insl
or
fucomi
test
jge
cmpl
xor
imul
add
pop
jo
pop
pop
xchg
clc
je
scas
fiaddl
sbb
and
arpl
xchg
inc
mov
pop
roll
outsb
mov
push
and
sbb
icebp
inc
les
lcall
paddw
adc
aaa
movsb
clc
ja
sti
or
inc
rcrb
ret
jo
lahf
add
pushf
das
dec
aam
mov
cli
sbb
loop
jmp
es
or
sbb
pop
add
push
mov
fiaddl
dec
add
push
mov
lret
jp
rol
pop
push
and
mov
inc
mov
mov
pop
add
popf
adc
ret
xchg
loopne
mov
ja
sub
pop
push
push
clc
push
iret
mov
mov
push
mov
outsb
ds
mov
pop
incl
arpl
pop
push
aas
inc
cmc
add
add
xchg
adc
push
jg
aas
mov
jnp
jo
int3
xchg
dec
add
adc
ficoms
cmp
arpl
add
jmp
ret
lock
xlat
test
outsl
dec
scas
xor
xchg
dec
jo
mov
inc
sbb
inc
inc
call
movsl
adc
xor
and
xchg
fwait
outsb
sti
inc
gs
jmp
cmpsl
sbb
fsubrs
popf
dec
pop
pop
mov
sbb
fildll
hlt
repnz
psrad
mov
lock
cmp
jmp
stos
repnz
popa
or
fisttps
outsl
push
push
inc
xchg
mov
pop
cld
inc
dec
xchg
in
xor
jecxz
arpl
xchg
rorb
add
fsubs
ret
inc
test
jno
aas
es
inc
ret
lods
push
test
mov
shlb
inc
ljmp
xorb
idivl
sub
mov
movsbl
ret
out
push
cmp
sbb
mov
mov
call
decl
jecxz
test
popf
push
mov
xor
cmp
mov
jg
adc
aaa
in
mov
inc
jge
add
push
pop
dec
and
jmp
cmp
loope
pusha
rcl
in
adc
pusha
lock
movsb
into
aad
push
rcrl
testl
xor
push
mov
inc
lcall
cmp
jecxz
ret
icebp
jae
inc
loop
adc
dec
sahf
push
shl
shl
loope
dec
xchg
notb
adc
fbstp
mov
jmp
add
jg
mov
or
inc
cltd
xor
mov
fnstsw
or
aas
mov
push
and
icebp
and
cs
dec
inc
clc
js
cmp
lret
aas
loopne
cmp
rcrl
push
pop
jle
jne
cmp
inc
adc
mov
cmp
decb
dec
dec
xor
push
adc
lock
rorl
pop
sbb
jo
xlat
add
push
xchg
addb
inc
sub
leave
jecxz
pusha
push
lods
cmpsl
xor
push
cld
outsl
sarb
das
js
adc
mov
pop
test
outsb
or
cld
jns
loop
mov
sahf
xor
imul
in
jbe
mov
idivb
mov
es
inc
pushf
pop
push
dec
jmp
dec
dec
dec
xor
xlat
cltd
pushf
call
in
push
inc
sbb
rcrb
mov
icebp
dec
and
loop
push
lahf
std
ljmp
sub
xorl
cltd
fcomip
xchg
call
mov
push
in
gs
push
aas
cmp
cli
add
fs
xor
push
push
add
sub
roll
push
push
and
mov
sbbl
push
add
xor
imul
ret
mov
dec
or
sbb
stc
ss
cwtl
and
jo
xor
inc
dec
int3
in
add
aaa
cmc
int3
jo
hlt
mov
sbb
push
aam
mov
dec
shr
imul
repnz
js
push
fisubrl
aam
cwtl
sbb
imul
xchg
cmp
popa
test
test
mov
push
fistpll
fisttps
mov
out
insb
aam
inc
outsb
add
jbe
sbb
mov
mov
cmp
add
push
loop
iret
loopne
lea
fiaddl
shrb
push
mov
ja
adcl
xchg
movsl
jbe
inc
adc
pop
popf
pop
add
lods
es
push
cmp
jnp
xchg
jnp
lahf
push
dec
stc
leave
call
lds
push
lcall
xchg
andb
xor
bound
in
dec
fstpl
je
fdivs
pop
jg
es
popl
jb
scas
fwait
lret
push
pop
xchg
pop
mov
cld
jp
fchs
push
mov
mov
js
mov
push
mov
jo
leave
test
fldcw
and
bound
cmp
sub
inc
xorb
dec
cmpsl
arpl
mov
xchg
js
xor
aad
outsb
imul
and
xchg
jecxz
fisttpll
lahf
scas
fstl
pop
add
movsl
movsl
shl
pop
rolb
inc
aas
add
pop
jbe
jg
ds
stc
test
loop
jae
xchg
xlat
lret
insb
add
scas
add
pop
cmp
adcl
mov
push
das
xchg
xor
sub
jae
cltd
push
js
pop
sub
push
aas
add
cmp
mov
hlt
dec
jmp
lea
ret
cmp
test
push
popl
out
inc
dec
test
pop
jp
adc
mov
js
fwait
loopne
lahf
adc
xchg
stc
sahf
jl
mov
or
divb
lret
icebp
push
mov
push
and
cmpsl
xor
lock
jmp
leave
decl
push
scas
push
imul
xchg
inc
and
test
filds
add
popf
xor
scas
call
adc
mov
adc
in
scas
cld
add
ret
cmpl
icebp
mov
mov
stos
scas
lcall
out
std
fwait
sti
pop
xor
add
into
pop
inc
ds
out
or
pop
out
cmp
pop
and
inc
sbb
xor
sbb
pop
enter
leave
aam
dec
clc
mov
sbb
rolb
test
in
xchg
pop
cltd
movsb
jno
test
adc
mov
sbb
mov
ss
cmpsb
sub
outsl
arpl
andb
aad
rorl
lea
jno
add
or
mov
jne
mov
js
mov
pop
or
sarb
int
mov
es
idivl
insl
mov
mov
sub
ficompl
fisttpl
es
hlt
out
jl
sbb
xor
pop
mov
cwtl
jmp
imul
orl
in
add
cwtl
cmp
inc
xchg
ret
int
hlt
insl
lds
xchg
ja
mov
and
leave
push
xchg
imul
inc
je
inc
pushf
and
sub
xchg
cmpsl
mov
mov
sbb
shl
xor
push
mov
dec
jbe
or
push
addr16
add
sub
outsl
rolb
xchg
arpl
cmpsb
addl
xor
shr
popl
movsl
jne
or
bnd
aas
gs
pop
inc
mov
jnp
mov
outsb
xor
mov
fwait
pop
je
fisubrs
or
push
adc
addr16
scas
xchg
cld
bound
push
mov
or
push
vmwrite
cmp
sbb
fbld
or
out
xchg
xor
jb
das
mov
add
mov
test
dec
fcoml
jne
repnz
inc
enter
push
or
mov
sbbb
into
loope,pt
push
mov
movsl
xor
iret
or
mov
dec
pop
gs
loop
sbb
adc
and
out
push
xchg
sahf
or
cmpb
rcl
fcoml
mov
into
mov
push
lock
cwtl
mov
hlt
stos
fnstenv
push
xor
stos
mov
jmp
jl
shrb
arpl
sub
inc
pusha
orb
outsb
jmp
imul
xor
push
int
mov
dec
or
lahf
out
xchg
daa
cwtl
or
scas
movsl
jb
imul
stos
ljmp
adc
jp
lret
pop
mov
mov
in
aaa
and
sub
cmp
ss
inc
lea
inc
stc
add
leave
xlat
lock
lods
inc
push
or
daa
push
xor
lods
sbb
jns
nop
xlat
or
jno
pop
mov
js
sub
jp
cmc
lods
daa
ss
adc
mov
in
fimuls
push
mov
or
jo
cmpsl
sbb
test
mov
xor
jb
loopne
out
mov
push
aaa
cmp
sub
inc
cmp
test
sbb
and
shlb
adc
pop
popa
jo
fsubrs
int
add
mov
inc
add
xor
cltd
faddl
hlt
push
loop
aaa
insl
pop
mov
lss
insl
hlt
mov
lea
cmc
inc
clc
dec
ljmp
sti
out
mov
in
js
pusha
notb
test
sub
and
mov
nop
lods
loop
add
xor
aas
mov
mov
mov
lret
xor
adc
into
shrb
mov
cmpsl
dec
and
orl
cli
leave
shrl
pusha
and
shrb
cmc
push
loopne
push
scas
sahf
adc
adc
test
mov
test
je
add
sub
jmp
outsb
popf
sub
lock
xchg
push
jp
mov
xor
lds
popa
fcmovu
dec
xchg
loopne
fsubrs
rcrb
pop
jge
lret
scas
xchg
inc
cli
sbb
ror
in
lea
jmp
cmpsl
insb
addr16
rcrb
pop
leave
adc
push
adc
sub
xchg
add
aas
out
nop
adc
dec
push
adc
fnstcw
push
inc
mov
or
pop
push
add
inc
repz
leave
outsl
add
or
std
add
ret
push
hlt
mov
cs
pop
lods
popa
dec
fidivl
loope
sti
lret
test
sti
stos
jne
cmpsl
xchg
loopne
les
out
rcll
mov
dec
fcoms
test
and
adc
pushf
sub
pop
jp
cmp
xchg
sbb
lret
mov
and
lods
popf
hlt
jbe
sbb
shrl
das
lock
cmpw
test
dec
pushf
cwtl
jp
icebp
bound
dec
pshufw
inc
popf
lahf
pop
xor
sub
adc
xor
sub
push
pusha
test
paddsw
dec
daa
mov
inc
clc
les
mov
lahf
lods
cmp
insl
sbbl
push
push
mov
fcoms
dec
out
dec
cmp
and
sub
out
pushf
xchg
push
jl
or
mov
sub
jae
sub
mov
dec
dec
xor
sub
rcl
stc
call
test
loope
pop
cwtl
lds
aam
cli
adc
test
ret
insl
sbb
xor
or
mov
rcll
xchg
rorb
outsb
inc
sti
stos
add
mov
loopne
ljmp
jb
adc
mov
inc
jp
lock
inc
push
je
pop
fmuls
adc
and
mov
xchg
jae
sbb
call
mov
push
lods
mov
movsbl
push
adcb
jl
push
fbstp
xor
ret
add
repnz
sub
add
or
sbb
sarl
xchg
lahf
ss
mov
lahf
pop
insl
push
loope
xchg
add
add
gs
pop
flds
mov
lea
mov
and
movsb
imul
aaa
push
aas
jle
mov
repz
jne
xchg
jne
arpl
call
push
cwtl
add
mov
mov
stc
pop
sbbb
inc
push
mov
pusha
mov
dec
inc
adc
jp
jne
data16
push
daa
xlat
loopne
add
xor
xrelease
adc
fistpll
dec
movsb
cmp
fisubl
push
or
out
adc
dec
push
dec
sub
filds
push
aam
call
clc
cmp
jle
out
cmpsb
and
jne
clc
add
arpl
dec
and
fldenv
adcb
sbb
dec
lahf
stos
scas
push
imul
pop
xor
xchg
mov
loope
mov
jno
ja
pop
mov
test
push
adc
mov
sbb
cmp
mov
pop
fdivrp
aas
xchg
aad
add
in
sbb
inc
shr
xchg
rcrb
dec
and
cmpsb
xchg
adc
adc
test
lahf
or
mov
push
push
lahf
fists
iret
pop
loopne
addb
sbb
cli
adc
sub
pop
mov
and
cltd
lcall
lcall
fxch
rep
shll
mov
xor
mov
imul
iret
int3
fistps
icebp
sbb
push
test
and
test
scas
xor
arpl
mov
in
mov
mov
test
and
adcl
push
cmp
fdivs
sub
std
mull
mov
stos
inc
arpl
add
pop
repnz
jge
push
push
sub
div
add
and
jo
mov
clc
xor
cmp
ret
repz
push
xchg
jno
add
mov
jno
aaa
and
sbb
xchg
mov
sbb
fadds
lock
stos
add
pop
xor
in
ret
leave
mov
adc
cmp
jne
dec
xchg
jmp
test
cmc
sahf
push
sarl
push
push
cmp
inc
dec
or
sub
add
loopne
jo
jg
dec
pop
cmp
fnstenv
push
lds
pop
lea
inc
decl
movsl
cmp
cmp
in
stos
add
add
popf
fnstenv
sub
data16
cmpsl
adc
adc
dec
pop
push
push
ret
das
inc
fwait
xchg
fimull
stc
out
pop
aad
or
loopne
jecxz
loop
xchg
inc
nop
lods
inc
out
orb
sbb
adc
imul
xor
lret
into
nop
repz
inc
int3
outsl
lock
mov
test
xor
shl
or
mov
push
inc
sarb
mov
ljmp
mov
pop
js
cs
out
cmpsl
mov
pop
les
std
dec
push
test
lock
ror
sbb
dec
mov
inc
mov
or
mov
leave
lret
cwtl
popf
xor
sahf
push
and
clc
shl
sub
out
pop
je
jnp
mov
sbb
mov
sub
out
lahf
sbb
lods
out
faddl
test
ror
pop
ret
pop
jge
jg
pop
xorl
mov
jno
and
jp
sti
cmpl
pop
sub
shrb
sbb
adc
push
fbstp
and
pop
dec
lret
in
sahf
adc
loopne
scas
add
sub
jp
pop
fldt
sbbl
gs
mov
clc
shlb
adcl
arpl
jge
std
cmp
add
insb
mov
jecxz
ljmp
inc
add
mov
mov
bound
jmp
or
fidivl
sbb
xchg
loopne
mov
sbb
stos
iret
jb
popa
movb
lock
inc
inc
pop
ret
sti
ljmp
shrl
sbb
mov
dec
cmp
pop
dec
outsb
jnp
adcl
adc
cmpl
mov
scas
lcall
orb
pop
ljmp
addb
sub
push
aas
imul
popa
adc
fcoml
inc
adc
ret
fdivrs
stos
fld
dec
or
sub
loopne
hlt
adc
sbb
int3
inc
sahf
cmpsb
outsl
xchg
and
push
dec
ffree
mov
add
xor
nop
lods
jle
sbb
loope
push
cmpsl
or
mov
mov
arpl
pop
add
mov
mov
lcall
test
loopne
gs
scas
iret
mov
lcall
lods
popf
fiaddl
cli
je
es
sti
int3
loopne
lods
cs
icebp
jnp
cmp
inc
or
inc
repnz
mov
mov
dec
cmc
leave
push
je
scas
aas
sbb
cmp
ret
sub
nop
arpl
rcrb
addr16
xor
mov
and
push
loope
adc
mov
sbb
mov
sub
add
inc
push
cmp
insb
cmc
add
repz
ret
fldcw
xchg
mov
sbb
jns
sbb
lock
fisubl
cmp
leave
adc
iret
das
and
mov
paddd
ljmp
adc
inc
mov
imul
sbb
sbb
mov
testb
lock
ss
sbb
inc
adc
jmp
push
push
mov
push
roll
loope
pop
cmc
pop
push
add
test
lret
mov
stos
and
xchg
sbb
sub
imul
outsb
mov
daa
scas
aam
imul
mov
lret
test
stos
hlt
sbb
add
cmp
cmp
fimull
xor
fwait
ret
or
dec
rcrb
inc
test
sarb
cmpsb
add
sbb
jg
xchg
jp
scas
mov
sub
cmp
outsl
xchg
pop
repnz
cmp
push
inc
push
mov
int3
jmp
inc
pop
test
jecxz
outsb
aaa
loope
xor
std
adc
dec
adc
dec
hlt
stc
adc
xlat
cmp
out
and
cltd
sub
cwtl
mulb
mov
fmuls
aas
jo
adc
or
sbb
mov
leave
cwtl
out
pop
sbb
pop
push
fwait
push
in
push
cwtl
cmp
xchg
in
mov
mov
xchg
outsb
scas
inc
xor
sub
adc
sbb
ljmp
xlat
call
loop
call
dec
push
xchg
sbb
xchg
or
xlat
sub
sub
stc
pop
clc
hlt
xor
js
or
jb
iret
push
mov
ds
pop
push
pop
sub
int
aas
popf
lods
pop
push
sub
sahf
int3
or
dec
pop
jbe
scas
jl
jae
push
cli
inc
repz
push
mov
fwait
outsl
push
arpl
aas
jae
sub
repz
lcall
sarl
out
out
pop
loopne
aad
cld
test
sub
aam
cmpsl
mov
xchg
push
mov
dec
or
outsl
fcomps
pop
scas
jge
loop
lds
adc
mov
adc
or
incb
ss
add
jp
cs
or
jl
dec
pop
pusha
fwait
jnp
inc
fcmovb
inc
imul
jae
sbb
add
aam
aam
dec
aad
jne
mov
imul
stos
pop
mov
dec
push
pop
aaa
pusha
addl
xor
inc
mov
ljmp
jecxz
xchg
ljmp
int3
inc
push
lret
or
loopne
fidivrl
mov
and
inc
pop
movsb
lods
bound
add
dec
push
mov
sahf
fs
scas
inc
inc
fnstcw
sbb
dec
cmpsl
jle
inc
add
jae
loope
hlt
add
jno
jo
clc
movb
int3
cli
fstl
xchg
add
iret
jmp
mov
xor
push
or
aad
cmpsb
aad
jecxz
std
sbbb
and
fstps
and
pop
push
add
ret
shlb
mov
scas
daa
lcall
loope
push
test
xchg
jl
cld
pop
mov
cli
hlt
pop
mov
loop
ss
dec
push
movsl
sub
mov
adc
je
movl
das
movsl
popf
or
jle
mov
imul
ret
lock
fadds
testl
mov
pusha
xlat
jl
xchg
mov
xchg
xchg
add
mov
loopne
mov
hlt
jp
shlb
hlt
pop
jne
mov
mov
mov
or
lods
ficompl
in
push
shrb
outsb
jno
das
aam
daa
xchg
mov
arpl
mov
mov
push
or
jl
push
inc
loop
lods
pop
dec
jns
dec
jno
pusha
xor
out
mov
mov
pusha
mov
dec
or
sub
inc
rol
adc
mov
shlb
push
sahf
mov
out
pop
mov
cmp
lret
xchg
addr16
adcl
dec
adc
adc
ret
pop
sub
xor
pop
out
repz
cltd
iret
sub
dec
int
or
shll
testb
push
sbb
fstl
inc
sub
ffreep
ret
fdecstp
xchg
fildll
or
xchg
or
test
mov
adc
ss
addr16
stos
xor
jbe
adc
inc
ss
jns
xor
insb
jbe
clc
mov
popf
push
cwtl
test
xchg
cmp
test
push
mov
jmp
push
mov
push
dec
outsl
inc
mov
and
pop
rolb
loopne
int
in
fwait
add
scas
xchg
jbe
add
mov
and
mov
inc
or
ja
cmpl
out
shl
push
icebp
cmp
adc
test
iret
adc
and
push
push
inc
aam
jno
test
paddd
cmp
mov
and
lods
push
mov
push
add
fbstp
int3
enter
sti
dec
out
sbb
test
add
jp
sahf
push
jmp
movb
hlt
sub
rclb
mov
xchg
les
sub
js
lock
out
fdivs
push
add
or
adc
clc
aam
dec
out
dec
sbbb
jmp
call
and
les
das
dec
rclb
mov
lea
push
int
arpl
or
inc
adc
sbb
rcrl
mov
stc
adc
subb
fs
push
adc
pushl
lahf
ds
cwtl
loope
cmp
dec
mov
xchg
xchg
lods
mov
fnstsw
mov
sbb
cmpsb
add
stos
adc
mov
sahf
loop
xchg
add
add
sub
scas
js
icebp
mov
call
ds
push
loopne
xor
xchg
sub
xchg
dec
xchg
mov
aaa
mov
adc
mov
cld
xor
adc
add
call
ds
adc
sbb
sbb
add
pop
inc
inc
push
ljmp
mov
mov
repnz
mov
rorb
xchg
popa
cmc
incl
xchg
movsl
lods
adc
pop
popf
daa
ljmp
lock
add
aaa
adc
fsubrl
adc
cli
add
mov
movsb
pop
fadds
testb
push
xor
cmp
into
xchg
add
or
insb
ljmp
adc
push
es
out
mov
fsubs
push
fistpll
push
and
out
cmp
push
jmp
mov
or
sub
int3
movsl
and
or
sub
xchg
add
nop
jbe
sbb
incl
loop
movl
fcmovne
sub
pop
clc
xor
push
jno
leave
mov
mov
fnstsw
mov
jb
movsl
fisttps
mov
sub
pop
hlt
mov
mov
int3
in
filds
mov
jnp
out
into
add
loopne
inc
adc
inc
jl
sbb
adc
cmc
outsl
shlb
and
mov
loop
aas
jle
xor
push
xchg
aaa
and
pop
add
pop
hlt
mov
mov
ss
xchg
lcall
out
mov
add
mov
mov
ret
hlt
aam
cmp
fs
jmp
fists
jno
cld
xlat
xorl
icebp
xchg
les
jb
cmpl
sbb
jo
mov
jbe
fsts
push
lock
mov
pop
mov
repnz
and
setb
cmp
push
out
ret
js
in
jp
cld
adc
adc
pop
xor
inc
fadds
add
push
sahf
sbb
jmp
loope
push
fwait
sarb
mov
sub
loopne
push
test
xchg
sub
cli
xchg
repz
sbb
shl
fimull
or
cmpsb
xchg
insb
fbstp
iret
jg
lods
add
loopne
xchg
xorl
data16
pop
iret
mov
sub
adcb
or
in
cmp
mov
inc
aam
cld
clc
call
repnz
lret
xchg
push
cmp
lcall
dec
out
inc
dec
xor
cmp
std
loop
in
pop
loopne
adc
clc
pop
loopne
repnz
mov
cmp
out
add
cli
add
lock
push
fs
sbb
dec
sub
mov
pop
jo
inc
mov
shll
fisubl
cli
into
dec
push
pop
add
imul
repz
ds
jge
sbb
xorb
jecxz
cmc
push
push
sbb
aaa
cld
roll
xchg
mov
nop
pop
test
xor
mov
movzbl
and
cli
pop
sar
pop
sub
dec
mov
inc
pop
addr16
push
sbb
int
test
aam
pusha
mov
pop
mov
jo
add
scas
loop
xor
subps
jnp
jbe
cmp
or
mov
lcall
lcall
std
xchg
fs
dec
jge
lock
add
and
sbb
xchg
adc
and
xchg
hlt
sub
mov
hlt
pop
xchg
je
mov
les
call
aam
sbb
jno
cmpsl
stc
es
cmpsl
inc
jno
outsl
xor
std
push
mov
stc
xchg
clc
push
mov
fwait
lahf
dec
xchg
push
into
push
or
xchg
stc
push
lock
add
inc
sar
sbb
or
adc
out
ljmp
adc
sbbb
pop
fwait
clc
aam
ret
or
cmp
adc
jmp
ljmp
pop
mov
jb
mov
xor
clc
push
sbb
dec
lds
test
or
stc
dec
movl
and
pop
xchg
mov
cs
mov
xchg
js
loope
ficompl
loope
andb
jecxz
xchg
filds
add
jmp
movsb
adcl
inc
xchg
imul
xchg
dec
out
dec
int3
out
dec
repnz
cmc
push
bound
cmp
mov
push
xor
fstps
loopne
push
out
inc
dec
jne
loop
adc
jg
aaa
faddl
nop
or
sub
cmpsb
jp
leave
cmp
loopne
insl
sub
int3
or
push
and
inc
in
dec
pusha
cmp
jmp
pop
shr
push
mov
fcom
fs
xor
add
add
in
cmp
stos
and
ja
call
lret
hlt
stos
pusha
dec
cmc
add
testb
push
aas
out
push
dec
iret
mov
ret
pop
loop
push
mov
mov
push
cltd
xor
sbb
sbb
push
cmc
stc
fwait
pop
mov
fildll
cmp
outsl
push
cmp
aaa
inc
jne
add
xor
jne
in
iret
clc
pop
push
cmpsb
mov
mov
or
xor
loopne
mov
sbb
nop
in
sbb
test
mov
stos
jle
loopne
xchg
sub
xor
pop
cli
and
xchg
sarl
xchg
in
cmp
mov
or
std
das
inc
cld
outsl
inc
push
mul
lea
inc
adc
js
mov
ja
daa
jg
jl
sub
adc
inc
add
xchg
clc
insb
int3
lcall
push
shl
sbb
and
cmp
mov
xchg
or
scas
test
jo
in
ret
xchg
xchg
dec
mov
mov
xchg
rcrl
hlt
test
shlb
xor
aas
fs
xor
add
fs
sub
hlt
sub
add
cmp
flds
fsubl
roll
mov
mov
out
scas
imulb
pop
ss
test
jmp
insb
jo
mov
roll
inc
push
mov
aas
push
mov
cmp
sar
in
popf
add
mov
addb
icebp
lods
movsl
fidivrs
pushf
mov
or
mov
rolb
mov
adcb
outsb
not
sti
jl
daa
imul
pop
test
js
call
aas
add
outsb
ja
mov
pop
xchg
lea
js
or
or
dec
arpl
mov
inc
jo
call
xchg
mov
and
popa
mov
pop
cmp
jmp
pop
sbb
addr16
xor
andl
and
sti
call
cmp
adc
inc
inc
mov
cwtl
push
mov
or
int3
fidivl
jno
cs
pop
es
adcb
mov
sbb
pop
or
or
sti
ljmp
xchg
lock
inc
fmuls
inc
pop
mov
pushl
in
adc
mov
adc
xchg
jb
xchg
lods
iret
or
lahf
adc
dec
loop
mov
leave
aaa
js
insl
hlt
push
pop
ret
jmp
push
testb
pop
xor
enter
mov
fistps
push
mov
push
clc
jmp
jbe
movsl
pusha
addr16
pop
rcr
add
aaa
pop
or
push
jnp
add
repnz
fnstsw
int3
lret
rcrl
scas
out
xor
dec
repnz
xorb
xchg
fadds
call
aaa
ss
js
sbb
mov
movsl
fimuls
sub
sarb
adc
mov
mov
fwait
mov
fcomp
in
jno
insl
scas
outsl
sti
mov
sbb
insb
es
movl
xor
jns
push
ljmp
ljmp
movsl
mov
push
xorb
rcrb
loope
int
add
gs
cmp
add
xor
sahf
movb
imul
cli
cmp
fistpl
aad
dec
lds
stc
add
test
mov
or
push
xchg
jo
jp
dec
insb
pandn
sub
pop
push
mov
pop
bnd
cmpsb
nop
repnz
jno
add
pop
daa
insl
mov
lahf
decl
loope
mov
mov
inc
ds
sub
addr16
sbb
in
jnp
loop
sbb
mov
xlat
add
push
dec
imul
arpl
xorb
push
mov
dec
lock
aaa
rcrb
add
mov
stos
lock
sub
or
and
pop
imul
adc
gs
into
stos
jle
mov
sub
lahf
es
aad
icebp
dec
sarb
lahf
add
pushf
imul
cmp
or
mov
cwtl
loop
arpl
jno
cmp
pop
ja
fdivp
mov
je
subb
mov
mov
sbb
mov
addl
lds
andl
sub
je
sub
push
mov
xchg
cmc
loop
or
outsb
pop
lret
inc
jg
or
adc
mov
test
mov
or
mov
add
cmp
and
outsl
pop
jne
inc
nop
ret
cmc
cli
std
push
cmp
mov
mov
jo
xor
ss
loopne
cmpb
xchg
clc
int
popf
ja
cmp
xchg
cltd
rolb
xor
jbe
mov
mov
mov
loop
push
mov
and
sub
mov
cmp
push
sti
inc
je
data16
int3
loop
iret
sub
mov
xchg
push
mov
sbb
mov
mov
push
mov
add
scas
sahf
mov
ret
xorl
call
ds
mov
cld
or
adc
in
data16
faddl
out
cltd
pop
mov
movsb
pop
mov
jg
jno
imul
nop
inc
loopne
sbb
loopne
push
outsl
adc
mov
adc
outsb
sbb
sarb
dec
inc
jecxz
cli
mov
cmc
xor
shrb
cld
inc
mov
dec
gs
mov
fcoml
mov
lods
les
loopne
jl
jno
cmpl
pop
mov
mov
cmp
repz
add
push
push
and
out
jne
mov
dec
mov
jg
pushf
cmpsb
push
mov
pop
and
push
mov
lds
mov
xchg
clc
mov
ljmp
push
les
sahf
test
sbb
mov
in
mov
mov
mov
dec
out
adc
cmp
movsl
fimull
sub
sub
por
adc
daa
and
cmc
outsb
js
pushf
push
adc
or
xchg
jnp
xlat
test
repnz
movsb
mov
sub
mov
xor
add
movsb
sarl
std
das
loopne
jmp
inc
cmpb
int3
addr16
scas
decl
out
mov
push
inc
lret
jl
mov
push
xchg
jbe
dec
repnz
js
xchg
lcall
jp
das
sbb
aaa
clc
add
mov
or
ret
add
enter
jg
jp
sbb
lcall
xor
pop
sbb
lea
mov
xchg
cmp
add
xor
sub
add
xor
mov
pop
aas
mov
mov
pushf
push
stos
pop
out
arpl
gs
adc
rcll
hlt
fbstp
repnz
or
enter
inc
sahf
fsubr
mov
add
add
mov
add
sub
clc
mov
dec
daa
pop
shl
imul
mov
fildl
stc
addb
out
jg
mov
nop
data16
ss
mov
cmp
stos
in
pop
fstps
cmc
rcr
and
cmp
mov
push
in
and
es
insb
bound
lods
add
sbb
stos
shrl
cmc
ret
dec
aaa
pop
aas
mov
jle
and
outsb
add
out
dec
insb
mov
xor
inc
not
sbbb
icebp
pmulhw
mov
inc
jmp
cli
or
movsb
icebp
push
std
outsl
jae
add
insl
pop
push
shrb
jns
incl
in
sarb
jo
dec
jbe
sub
mov
mov
cmc
aaa
jo
aaa
push
sarb
sar
pop
ret
dec
cmc
inc
and
out
stos
cmpsl
cmc
outsl
or
test
js
jo
cmp
call
je
mov
imull
lret
and
lock
int
push
mov
dec
or
add
mov
cmp
push
jecxz
mov
xchg
or
repz
clc
adc
fs
mov
mov
ljmp
lods
jbe
inc
add
lret
cmpsl
pop
loope
xor
in
out
jle
nopl
adc
mov
or
or
sbb
stc
mull
aas
cld
add
adc
mov
test
inc
jl
sbb
std
sub
push
mov
xchg
pop
inc
xchg
test
cmc
out
imul
out
xlat
jge
and
mov
or
enter
add
lods
jo
add
shl
pop
hlt
mov
insb
mov
jne
stos
mov
mov
repnz
push
dec
xchg
repz
movsl
inc
ret
fs
or
fidivrs
pop
adc
cmpb
adc
fdiv
inc
jg
sbb
loope
pop
hlt
loope
add
shrl
xchg
sbb
divb
push
out
cmp
test
mov
rcrl
stos
ds
lock
hlt
push
pop
adc
test
rorl
hlt
outsl
mov
mov
or
mov
jle
pop
movsb
nop
or
lods
enter
mov
inc
fwait
sbb
pop
sbb
sbb
sub
test
das
adc
push
ds
scas
sbb
mov
inc
or
xor
iret
cmpsl
add
scas
into
lret
imul
in
sub
cwtl
add
ret
xchg
dec
clc
insb
and
push
stos
roll
mov
xor
sub
sbb
scas
insl
pop
dec
dec
dec
pop
ficoms
adc
mov
cmp
dec
insb
inc
adc
pop
rcrb
jg
mov
shll
push
orb
push
jmp
adc
daa
inc
orb
ja
sysexit
nop
incl
push
sub
rcll
mov
bswap
sbb
iret
sub
adc
push
je
mov
insb
mov
and
ljmp
and
xor
xchg
lock
enter
ret
cmp
sbb
mov
std
sub
jmp
and
xchg
mov
pop
dec
push
pop
adc
sbb
adc
shrb
arpl
mov
movsl
imulb
inc
and
xorb
out
test
andb
dec
or
out
fidivl
arpl
dec
sub
push
cmc
ja
lock
mov
cltd
push
push
xor
or
xor
and
aas
mov
mov
jae
jmp
pop
iret
dec
test
xchg
incb
xlat
test
adcl
push
bndstx
outsb
xor
out
or
sbbb
pop
mov
in
movsb
mov
insl
loope
shr
sahf
push
xchg
push
xor
lock
mov
ficompl
pop
cmp
jnp
icebp
xchg
xor
push
ret
scas
bound
lock
cmc
push
mov
das
js
testb
inc
test
rorl
jns
jmp
aas
cmp
lock
xchg
outsb
xchg
flds
push
ret
stc
xchg
push
cmp
jmp
mov
repz
push
ficompl
push
mov
movsb
mov
xchg
push
xchg
pop
sub
push
fcomps
inc
push
push
notb
push
mov
inc
xchg
cs
data16
cmpsl
xor
sub
and
roll
jg
cld
and
or
push
sub
cld
fistpl
arpl
idivl
out
push
lahf
outsl
in
jne
xlat
jmp
flds
jecxz
mov
mov
hlt
mov
push
xor
jg
in
push
adc
leave
sub
add
outsb
mov
pushw
cli
lret
fmul
shlb
fldl
rcll
ret
mov
aaa
and
pop
es
mov
xor
aas
sarb
mov
mov
loopne
push
loope
test
xor
push
jmp
xchg
fwait
mov
jnp
decl
test
pop
scas
popf
jae
xchg
lock
aaa
adc
lea
iret
sub
adc
addr16
push
aas
dec
sub
pop
mov
lock
lret
std
push
cmp
pop
pop
test
hlt
cmp
scas
hlt
pop
into
popa
aam
add
mov
clc
pusha
cltd
push
jae
push
hlt
pop
cmovl
and
in
mov
and
sub
inc
mov
jo
xchg
fsubrl
mov
loope
mov
mov
or
sbb
shlb
lods
pop
test
inc
call
mov
mov
scas
jo
inc
mov
insl
clc
or
inc
jecxz
xor
xor
dec
jle
insl
xchg
xor
shlb
adc
roll
stc
pusha
rorb
or
mov
pop
mov
xorb
icebp
cs
add
or
add
shll
aaa
cs
fldl
je
shrl
movsb
mov
and
js
pop
jb
dec
test
inc
outsb
inc
cli
lock
xor
in
dec
adc
rclb
cmp
scas
add
inc
mov
int3
test
jl
mov
scas
adc
push
lock
insl
mov
inc
js
fsubl
mov
or
outsb
sbb
ret
fwait
adc
shrb
mov
fiadds
popf
sarl
repz
and
and
fsubrs
ljmp
add
jno
pop
loopne
jl
sbb
sbb
jnp
out
lret
and
sbb
dec
push
ljmp
mov
adc
push
mov
xchg
sbbb
mov
lea
jecxz
mov
adc
leave
je
push
clc
sub
ljmp
mov
clc
dec
std
loopne
mov
lods
loope
sbb
dec
cmpsl
jp
sbb
int3
fbld
scas
jbe
in
jns
inc
in
aas
push
shll
ljmp
daa
or
outsl
or
popa
jecxz
adc
dec
push
pop
pop
or
movsl
push
or
daa
std
jg
pop
in
enter
push
loop
rclb
cmp
mov
xchg
xor
into
sub
jle
shlb
in
xor
mov
or
repnz
push
jno
inc
and
lods
stc
or
pusha
push
je
jno
push
xchg
push
pop
testb
dec
daa
mov
loopne
enter
push
out
enter
xor
cli
sub
lret
pop
mov
nop
js
push
lcall
pop
xor
adc
aam
mov
sub
add
ljmp
and
adcb
or
mov
mov
dec
xor
xchg
pop
shr
jb
push
fsubr
push
adcl
ffreep
push
out
xchg
and
xchg
mov
fsts
or
mov
leave
xor
pop
mov
lock
shll
sub
push
lock
lock
fidivrl
mov
jge
stos
lahf
or
shl
dec
adc
sbb
loop
out
or
test
icebp
test
adc
mov
add
or
loope
dec
es
jle
cmc
inc
or
cld
outsl
pop
mov
xor
pop
mov
push
jle
ss
adc
pop
test
pop
addr16
or
enter
aam
sbb
inc
add
clc
mov
out
loop
jb
sahf
test
jg
push
ret
and
scas
iret
inc
or
add
aas
xor
jmp
xor
mov
add
and
mull
mov
movb
fnstcw
pop
inc
das
test
popa
aaa
cmp
cmp
lock
imul
aad
xor
out
sub
or
cmp
and
dec
sbb
jmp
dec
maxps
iret
daa
in
test
adc
and
pmullw
or
std
sub
and
cwtl
and
psrad
inc
inc
and
jno
fildll
clc
push
push
push
rcrb
pop
adc
xor
aad
pop
sbb
or
sbb
cmpl
mov
mov
jmp
test
paddw
sub
inc
mov
fisttps
imul
mov
loop
mov
xchg
and
pop
or
jl
mov
enter
xchg
fldcw
fildll
roll
sub
sbb
jno
sbb
mov
sub
addb
push
or
lds
shlb
lods
fdivl
xchg
push
or
mov
insl
lea
jge
jmp
or
sbb
scas
push
adc
pop
adc
aaa
xchg
inc
nop
pop
std
out
or
inc
mov
xor
sbb
bndldx
mov
jg
cld
xor
test
pop
adc
das
outsl
or
xor
inc
sbb
push
sbb
adc
push
stc
mov
jg
pop
notl
lret
ror
pop
das
fs
pop
cmp
clc
add
lea
cld
loope
pop
cld
aas
xchg
insb
arpl
iret
xchg
daa
sbb
inc
push
icebp
dec
mov
cmp
and
adc
ljmp
sbb
mov
pop
ss
adc
leave
mov
cltd
add
in
jg
and
shl
mov
nop
loope
cwtl
jo
mov
or
xchg
popa
ds
pushf
ret
jg
aad
aaa
je
sbb
loope
sbb
pop
adc
pop
or
add
aaa
jmp
mov
xor
pushf
adc
cltd
clc
push
js
ret
addr16
mov
sub
cltd
pop
jo
cwtl
decl
icebp
sub
lods
fildll
shl
enter
std
xor
test
or
or
push
std
pop
outsl
mov
jnp
insb
mov
scas
pop
mov
daa
mov
pop
stc
sub
xchg
mov
mov
cmp
mov
lcall
pop
addl
repnz
rcrb
fmuls
pop
add
mov
dec
fiadds
mov
xchg
loop
gs
jo
loopne
loop
sbb
mov
add
cld
add
loope
pusha
add
xchg
in
hlt
xchg
inc
sub
adc
cmc
pop
jle
jno
dec
jno
push
ds
ljmp
data16
ljmp
add
insl
cld
cs
inc
mov
movsb
movsl
dec
cmpsb
aaa
push
mov
push
jno
or
decl
dec
xor
fildll
mov
je
cwtl
scas
pop
adc
mov
loopne
flds
iret
loop
push
in
neg
cs
mov
mov
scas
leavew
pop
pusha
stc
add
xchg
or
mov
push
andl
jmp
in
and
add
sar
xchg
pop
dec
lret
and
lods
or
fldpi
test
mov
andl
std
sahf
push
dec
push
into
aaa
jecxz
test
jns
add
fucomp
stos
pop
or
push
shlb
cld
outsl
test
and
adc
aaa
xor
sbb
mov
xchg
out
inc
pop
xchg
les
loop
push
cwtl
mov
inc
mov
sub
push
mov
push
pop
mov
dec
pushf
test
lcall
fdivl
fs
andb
xor
push
lcall
cld
add
mov
fnstsw
sarb
push
sbb
call
das
or
fcoms
inc
adc
sub
pop
push
mov
dec
push
push
in
scas
and
das
scas
data16
aad
ret
cmp
ja
push
jecxz
fsubs
add
or
push
ret
fistl
mov
fsubl
push
mov
and
pop
cltd
cli
aas
lea
xchg
jg
addr16
add
xor
xor
neg
push
adc
inc
loope
sub
sbbl
ret
inc
jg
sub
enter
fcomps
arpl
icebp
test
lret
cmp
cmpsl
or
pop
add
call
les
xchg
movsl
iret
fwait
add
test
or
or
lods
xor
clc
mov
test
adc
imul
mov
sbb
mov
adc
lods
jb
jl
mov
add
aad
mov
mov
pop
in
sbb
call
outsl
clc
adc
dec
add
push
dec
xchg
pop
add
add
imull
push
cmp
and
shrb
lods
ret
cmp
mov
aad
cs
mov
clc
rclb
inc
add
cld
ja
cs
imul
incl
mov
inc
sub
out
sbb
fmulp
cmp
xchg
cli
shll
inc
std
ljmp
add
stos
lods
add
add
mov
mov
lahf
pop
mov
movsl
sbb
pop
xor
aam
cwtl
ror
sti
scas
inc
add
push
cmp
dec
or
ljmp
jns
jle
loopne
and
pop
mov
adc
pop
xchg
add
dec
fs
xchg
cmc
pop
adc
in
inc
rclb
jo
dec
add
push
adc
dec
pop
fistps
mov
xchg
add
hlt
cmp
or
in
xor
xchg
and
fnstenv
push
mov
cmpsl
and
mov
and
dec
and
pop
int3
pop
xchg
ss
jne
jne
pop
andb
enter
in
jo
adc
int
lods
pop
cli
mov
mov
insl
lahf
pop
push
sbb
subb
test
les
cs
addr16
and
dec
fs
shlb
loopne
dec
mov
sub
mov
adc
je
into
aas
dec
test
push
outsl
push
push
rorb
mov
mov
fwait
mov
and
pop
sub
mov
inc
int3
rcr
ss
call
jecxz
pop
data16
push
dec
jge
sti
cmp
xchg
pop
sbb
cmpsb
xchg
push
xchg
loop
xor
mov
das
arpl
push
inc
enter
rcr
testb
xchg
jno
lock
mov
sbb
mov
ljmp
add
lock
je
mov
sbb
mov
orb
xor
adc
or
clc
push
and
test
shlb
cmc
sti
cmpl
add
inc
mov
mov
push
lods
stos
loopne
es
mov
leave
sub
outsl
adc
cmp
add
test
loop
aas
shl
int3
cmp
test
fadd
and
cmp
les
cs
pop
dec
lahf
incl
cmpsb
lcall
ret
les
scas
xchg
mov
dec
ret
jl
mov
test
lea
push
xor
add
dec
mov
pop
mov
cli
outsb
mov
or
dec
rcll
and
cmp
dec
loope
scas
cs
or
jb
or
dec
fstl
sbb
push
pop
pushl
fcoml
mov
cli
pop
cmc
xor
loopne
outsb
mov
add
xchg
mov
pushl
mov
jle
and
test
sbb
mov
shl
jge
jmp
push
aaa
xor
adc
pop
sub
mov
sbb
std
xchg
mov
push
ljmp
mov
stos
push
add
sub
mov
ds
pop
dec
adc
rcrb
and
mov
dec
loope
dec
popf
cmp
cmc
sahf
sbb
std
inc
pop
add
test
mov
in
add
mov
test
mov
xchg
adc
pusha
jno
add
repz
jnp
test
out
aam
jle
loope
outsl
das
xor
pop
inc
decb
xchg
loope
mov
cmpsb
push
pop
push
and
mov
in
test
test
mov
rorl
xchg
xor
fwait
lea
fs
rclb
scas
in
sbb
mov
mov
adc
mov
mov
test
aam
sbb
decl
mov
and
ja
xchg
daa
push
adc
cmp
dec
xorl
fst
jne
cmp
lret
xchg
in
dec
pop
call
cmpb
pop
int
push
push
and
jle
inc
xorl
sub
mov
push
nop
shlb
das
and
inc
insl
hlt
push
orb
dec
xor
jmp
cmp
dec
push
fmuls
inc
add
out
roll
inc
filds
mov
push
sub
rcr
jb
ss
sbb
lods
mov
lds
lret
mov
aas
sub
and
outsb
push
aas
scas
mov
iret
jge
lret
push
repnz
lds
rcrl
cli
and
mov
pop
xchg
xchg
mov
lahf
lods
push
mov
lock
aas
add
push
and
and
enter
push
mov
nop
pop
std
jne
imul
mov
pushl
mov
mov
aam
test
add
jo
xchg
lret
in
mov
jle
add
in
or
xchg
outsl
enter
mov
cmp
xor
js
call
adc
movsb
pop
and
shr
pop
lock
js
stos
cmp
and
push
dec
aaa
or
pop
jmp
sub
sub
imul
stos
sbb
dec
pusha
cld
fs
enter
lock
jo
in
xor
divl
insb
mov
call
ret
js
inc
jg
sbb
in
ss
enter
xchg
orl
jmp
and
jle
and
jle
loopne
inc
push
loopne
adc
fsubrp
mov
shll
or
add
mov
mov
andl
scas
jecxz
sti
and
dec
pop
stc
sbb
mul
pop
icebp
test
shrb
pop
imul
data16
mov
insl
hlt
mov
stc
std
mov
mov
fldenv
mov
add
pop
jmp
cmpsl
mov
pop
sbb
andb
add
mov
cmpsl
stos
pop
xchg
pop
jb
mov
jno
cmp
les
dec
jnp
lret
mov
test
dec
enter
insb
or
lahf
out
test
test
mov
jp
jbe
push
add
pop
or
loop
stc
push
mov
jnp
in
sbb
xor
fwait
mov
lds
shll
mov
push
jp
das
pushf
js
pop
outsb
pop
sub
arpl
xchg
jno
adcl
jmp
int3
and
or
xchg
push
fists
or
loopne
sbb
icebp
mov
cmp
cmp
add
dec
or
out
xor
xor
pop
mov
push
lods
ret
scas
xlat
dec
test
xor
xchg
jp
popa
incl
pop
gs
mov
jecxz
das
popa
dec
mov
or
push
clc
dec
in
scas
dec
popf
and
jge
ficoms
movsb
jmp
incl
fisttpl
push
test
and
xlat
jle,pn
add
movl
imul
mov
mov
mov
test
xchg
jns
ja
cmc
cmc
jmp
pushfw
pushf
xor
aas
in
pop
lret
sub
mov
pop
dec
jb
add
hlt
mov
shrb
adc
jmp
fs
daa
out
jmp
das
test
pop
fcomps
adc
popf
adc
or
xor
push
fs
sbb
sub
lret
movlhps
jns
test
ds
add
xlat
dec
fdiv
inc
mov
and
jno
mov
pop
inc
testl
sbb
or
xchg
or
and
jae
loope
xlat
addl
call
or
notb
shl
loope
mov
adc
nop
pop
lock
fcoms
mov
add
mov
movb
je
sbb
idivl
push
lret
adc
push
je
fidivl
cmp
jbe
cmovno
dec
dec
aad
mov
lret
ljmp
inc
xchg
jno
xor
inc
dec
xchg
pop
dec
push
push
push
inc
pop
inc
mov
in
sahf
push
fs
stos
icebp
outsb
push
lods
jbe
outsl
fadds
pop
sbb
sbb
or
in
mov
imul
sarb
xchg
mov
mov
lock
test
scas
out
jp
or
sahf
jecxz
iret
cmp
hlt
inc
das
mov
cmp
sahf
frstor
cmpsb
or
loopne
cmp
pop
lock
enter
or
xchg
out
adc
mov
cmp
push
fld1
into
rorb
mov
jmp
je
jp
mov
sub
lret
cmp
jb
push
icebp
sub
iret
sbb
nop
out
out
add
push
mov
add
cmpsl
mov
pop
inc
adc
jp
lret
mov
push
mov
pushf
jl
hlt
pushf
or
mov
data16
lock
mov
movsl
and
fwait
jbe
fisubrs
addr16
and
dec
jno
xor
pusha
push
cs
test
sbb
adc
jns
pop
cmp
jbe
out
jae
rclb
ja
cs
jbe
sbb
orl
inc
andps
std
mov
movsl
pop
mov
fstl
pusha
lock
inc
sub
or
jmp
pushf
sbb
jg
push
or
mov
ud2
pop
scas
dec
pop
fdivrs
in
fsubs
nop
mov
push
sbb
adc
je
rorl
nop
test
mov
cmpsl
in
cmp
pop
loopne
icebp
sbb
mov
gs
inc
push
rol
mov
jno
push
pop
cmp
or
sbb
addb
dec
out
sbb
jle
fs
dec
or
or
hlt
jecxz
inc
mov
add
push
xor
mov
cmp
roll
sti
xchg
mov
daa
pop
lret
cld
xor
ficomps
in
pusha
mov
pop
xor
loopne
aad
iret
addl
stos
mov
jbe
mov
push
test
bound
jmp
xchg
loope
sub
leave
sub
sub
test
xor
mov
sarl
xor
sub
push
sti
loop
add
and
or
add
mov
sbb
cmp
sub
or
inc
xchg
insl
add
cmp
pop
pop
sbb
ret
dec
loop
push
pop
pop
movsl
mov
aad
push
bound
adc
cmpsb
add
pop
jmp
in
iret
rcll
in
pop
rorb
incl
outsb
rol
out
adc
cmp
and
mov
iret
mov
inc
or
inc
mov
lret
mov
jecxz
adc
test
aam
xorl
lods
jle
test
cmp
push
mov
jnp
add
insb
iret
inc
add
sub
and
jle
or
lret
outsl
pusha
repz
jge
adc
test
push
loopne
sarb
fs
or
dec
add
dec
pop
fnsave
das
inc
sbb
pop
fisubrs
pop
inc
push
jge
adc
jns
into
je
or
addl
pop
repz
adc
lods
pop
inc
sti
xchg
cli
mov
shll
inc
scas
or
push
mov
sbb
int3
or
mov
test
sub
mov
mov
cli
mov
cmc
and
arpl
mov
notb
adc
lea
sbb
pop
fstpt
ret
idiv
lea
sub
dec
push
out
push
cmpsl
mov
fwait
js
sub
gs
frstpm(287
xor
inc
int
mov
add
push
daa
popf
out
mov
dec
aam
aam
add
insl
cmp
cmpsl
push
ret
or
popf
stc
or
jg
rorb
push
pop
and
pop
mov
cmc
dec
out
add
pop
mov
and
mov
adc
mov
dec
test
fildll
jp
xchg
mull
and
mov
lods
imul
cli
pop
jno
fwait
sti
mov
icebp
rcl
repz
arpl
jns
lock
aam
lret
cld
sbb
mov
mov
or
xor
movsl
icebp
out
jae
ret
inc
in
test
out
push
dec
or
cwtl
push
push
int3
cmpl
test
ja
mov
cmp
movsl
mov
jnp
push
fdivrl
hlt
pop
mov
subl
mov
xor
les
fcmovu
inc
sarl
icebp
loope
data16
sbb
outsb
or
imul
jae
mov
test
jns
mov
dec
fstpt
pushf
xchg
push
jno
jg
adc
ret
orl
fnsave
jl
jno
dec
jmp
adc
mov
rorl
pop
loopne
lock
aas
loop
push
inc
mov
aas
jecxz
jno
pop
mov
sbb
rorl
xor
cmp
dec
push
fildll
jae
pop
fildl
xor
loopne
imul
and
push
push
add
push
jbe
jb
aam
jp
outsb
sub
mov
in
and
lods
stos
and
inc
dec
ds
scas
mov
loopne
add
mov
bound
xchg
xchg
add
in
pop
pop
pushf
and
mov
ds
movsl
data16
pop
popa
nop
ret
adc
xchg
pop
adc
mov
mov
insb
cmp
shll
sti
mov
sub
sahf
cltd
mov
addr16
pop
push
xchg
repnz
add
sub
rcr
mov
rcll
shr
or
dec
stc
mov
aas
cmpsl
push
ja
add
push
sub
and
mov
cs
cmpsl
inc
shl
mov
pop
cltd
scas
mov
jl
xchg
in
adc
aam
or
orl
push
dec
rcl
and
jbe
daa
cmc
test
adc
mov
inc
fdivrl
xchg
sbb
popf
ds
push
xor
loopne
add
add
imul
mov
add
inc
or
adc
insl
out
push
ds
mov
clc
and
and
mov
adc
out
push
jg
repz
or
push
xchg
xor
inc
mov
test
aam
outsb
lock
and
js
sahf
jo
pushf
add
jb
daa
test
das
jae
je
movb
cltd
sub
or
idivb
mov
je
fcoms
call
and
shrb
inc
fs
iret
xor
loop
adc
and
mov
test
lret
and
loopne
loop
pusha
xlat
sbb
sub
mov
jmp
xchg
stc
push
stos
and
into
jecxz
das
sub
mov
sub
mov
sub
pop
mov
pop
cmpsb
push
testl
pop
rolb
jle
scas
cltd
mov
insl
rclb
outsb
mov
sub
xchg
lea
cwtl
pushf
jns
daa
cmp
sti
jns
jae
sub
add
adc
mov
les
mov
cmpsb
push
ja
mov
filds
add
xchg
jnp
ss
lods
scas
jp
ljmp
xchg
std
leave
mov
cmp
imul
and
add
adc
out
movl
aaa
bound
dec
push
sbbb
ds
hlt
pop
mov
push
sbb
lods
fbstp
inc
es
leave
cltd
shlb
pop
rorb
cld
loop
mov
jp
int
xlat
add
mov
xchg
mov
popa
jns
inc
std
push
or
jns
pop
jo
loop
test
movsb
mov
imul
insl
xor
adc
outsl
push
mov
lock
or
bnd
mov
fwait
outsb
pop
mov
mov
jae
pop
and
shlb
jnp
movl
jp
cmp
add
insb
imul
ret
xchg
or
rcrl
test
mov
ds
test
xchg
jo
push
sub
or
mov
lea
aad
adc
mov
dec
adc
push
dec
jg
xor
and
xchg
in
mov
lcall
out
dec
in
scas
mov
xor
xorl
cmp
cld
and
rorl
int3
outsl
jg
xor
outsb
ja
dec
das
sarb
xor
addb
pop
movntq
jbe
mov
add
mov
subl
add
aaa
xor
mov
addl
add
inc
loope
dec
cli
and
dec
lods
jle
cmpsl
jns
push
in
push
xchg
lds
add
jb
xorl
sbb
pusha
dec
push
add
push
and
dec
cmp
cli
loopne
and
int
jnp
mov
or
daa
push
mulb
icebp
jl
pop
test
cld
orb
push
xor
std
cmp
outsl
push
inc
outsb
je
xchg
lds
std
in
shl
into
dec
scas
pop
pop
dec
loope
leave
imul
add
shrl
adc
cmp
cltd
pusha
rorb
inc
push
cmp
push
mov
popa
push
popf
jne
dec
xor
mov
loopne
in
push
adc
sbb
out
pop
or
xor
icebp
shl
inc
dec
mov
fwait
push
add
std
jp,pn
push
fisubrl
xchg
xor
das
fistl
and
ss
jne
lcall
test
push
xchg
dec
push
inc
bound
jl
and
pop
das
sub
jns
fstl
das
pop
jns
ret
aas
mov
inc
aad
movsl
inc
dec
sub
in
and
test
ret
sbb
or
std
clc
repnz
push
movsb
mov
lods
pop
push
dec
mov
pop
int
mov
pop
add
or
mov
add
adcb
pop
mov
pop
jmp
cmp
and
out
push
add
fisubl
imul
sbb
cwtl
jecxz
add
fiadds
mov
xor
frstor
xchg
and
mov
in
jmp
decb
adc
inc
rclb
scas
and
pop
orl
jo
xchg
stos
lods
add
das
sarb
add
enter
xlat
dec
iret
sbb
xchg
sbb
mov
mov
xchg
mov
out
lret
cld
sahf
shr
pushf
fistpll
sub
push
das
testb
pop
daa
fwait
mov
ds
adc
adcb
lcall
ja
inc
push
sbb
sahf
cmp
mov
or
shl
inc
mov
in
push
cmpb
lret
call
sbb
mov
inc
mov
std
stc
idiv
pop
dec
lea
fs
cmp
das
fdivrs
inc
dec
das
and
imul
loope
sbb
loopne
push
call
std
stos
popf
jbe
sarl
jo
mov
pop
outsl
mov
sti
mov
lret
mov
push
nop
lods
sbb
imul
mov
and
loope
and
lds
in
or
outsl
out
rol
jmp
pop
push
ss
dec
pop
xor
pop
loope
adc
adc
adcl
sub
jb
lds
data16
andl
cmc
jno
daa
xchg
ret
aaa
jno
pop
call
clc
push
lock
dec
mov
popa
imul
les
pop
js
xor
sub
icebp
xor
cwtl
mov
stos
mov
mov
pop
repnz
jmp
cmpsl
in
and
cmpsb
daa
cmpsb
test
cmp
mov
push
and
sbb
pusha
lahf
xor
pop
xchg
pop
xchg
stc
or
mov
jne
int
push
mov
scas
jno
inc
out
pop
mov
lods
pop
cmp
cmp
sub
mov
and
cs
out
sbb
push
cmp
mov
push
xchg
sub
push
lea
or
xchg
repnz
cmp
pop
jp
sarl
fistl
or
push
popa
lahf
inc
push
jne
loop
jge
mov
mov
pop
add
int
in
xor
mull
mov
div
daa
fwait
ret
jle
pop
outsb
dec
faddl
xor
mov
xchg
call
mov
mov
jno
lock
add
jle
ss
aaa
hlt
or
daa
popa
dec
cmc
int3
jne
lds
or
xchg
inc
push
push
adc
rclb
mov
sbb
aas
or
mov
enter
icebp
dec
cmc
xchg
es
orb
les
fimuls
adc
loop
and
or
test
pop
lret
dec
and
add
and
xchg
pop
in
cmp
jmp
pop
jle
mov
sbb
pop
icebp
mov
mov
subl
popf
mov
mov
jb
ja
add
mov
enter
arpl
sbb
test
imul
push
mov
inc
and
mov
add
cmp
mov
test
mov
setb
push
xchg
cld
xchg
mov
lock
mov
bound
and
stos
fwait
ss
imul
mov
or
call
ret
mov
lds
daa
sub
sub
testb
jb
ds
shll
sub
enterw
adcl
or
lock
xchg
leave
js
cmp
jp
pop
xorb
andb
push
imul
cmc
sbb
push
jle
movsl
shl
and
bound
insl
out
mov
xor
loop
cmc
mov
mov
xchg
shlb
or
or
stos
mov
std
push
fildll
add
inc
fstpl
lock
aas
mov
cwtl
std
cmpsl
loope
add
inc
push
jbe
lods
sbb
rolb
mov
ss
and
call
insb
push
sbb
add
add
sub
ret
cmc
test
cltd
mov
cmp
fbstp
dec
inc
negl
pop
inc
push
xchg
push
lds
mov
or
scas
scas
pop
outsb
lret
mov
idiv
dec
jge
stos
je
divl
push
mov
loop
movsb
mov
jbe
enter
cmp
mov
mov
add
js
xchg
lock
lds
scas
or
imul
jl
sbb
out
loopne
movsb
cs
and
aas
hlt
pop
xor
adc
push
insb
add
in
pop
rcl
xor
cmp
cli
xchg
or
jle
stos
xorb
xchg
cmc
jge
xor
sub
xchg
call
xor
jl
cmc
stc
sbb
mov
arpl
shll
lea
outsb
pop
mov
out
dec
inc
sbb
std
jle
sub
dec
sbb
lret
sub
adc
add
dec
mov
pop
jmp
push
jp
rcrb
dec
dec
inc
pop
loope
hlt
fnstsw
clc
pop
sarb
sub
fisttpll
lea
fcoml
xchg
and
adc
xchg
dec
or
aam
loopne
scas
in
outsb
or
addl
push
arpl
je
movsb
pop
mov
mov
or
aam
mov
inc
jb
or
cmpsb
mov
movb
in
sbbb
mov
std
outsl
sub
sarb
pop
jle
pop
lods
jmp
sbbb
dec
push
add
ja
mov
xor
xor
nop
cwtl
cmp
insb
jbe
movsl
xchg
push
int3
lock
std
loopne
stc
or
addr16
mov
ror
xchg
rolb
pop
imul
xchg
cli
dec
es
sbb
mov
sti
xor
cmpsb
les
dec
je
mov
ss
adc
movsb
add
inc
int
adc
cmpsl
shlb
dec
lods
xor
loopne
push
subb
pushf
mov
cwtl
jp
fstpt
aam
cmp
test
and
push
js
push
movsb
jg
inc
mov
pop
rorb
push
call
cwtl
push
jmp
scas
xor
xor
repnz
ret
add
ljmp
or
movsl
cmp
push
pusha
xor
mov
mov
ds
negl
sbb
test
pop
push
adc
xchg
pop
test
or
sbb
inc
cmp
pop
jmp
shrl
pop
fidivrs
mov
pusha
and
sbb
dec
cmp
add
cmp
sbb
pop
mov
adc
mov
jnp
scas
and
mul
out
pop
inc
jmp
icebp
xchg
mov
imul
jp
push
pop
iret
js
add
aas
xchg
mov
cmpb
cli
dec
test
das
xchg
push
xchg
loop
movsl
inc
jp
scas
les
rclb
sbb
or
aad
roll
mov
push
mov
das
jb
inc
lea
sub
dec
or
out
jnp
rorb
adc
mov
cmp
je
add
mov
addr16
cmp
ret
das
mov
push
push
adc
gs
decl
in
lods
test
or
adcb
jmp
pop
aaa
jmp
sub
add
push
xchg
sbb
mov
jo
js
movsb
in
loopne
rolb
rcrl
aad
or
fmul
loope
je
fldl
sub
fsub
sti
push
or
movsb
sahf
add
mov
arpl
pop
inc
lcall
xchg
mov
int
or
in
loopne
mov
pop
jl
test
and
repz
inc
push
in
scas
imul
or
hlt
loope
pop
aaa
mov
push
xor
push
inc
pop
jno
jp
lock
sub
mov
mov
jecxz
xchg
loope
mov
mov
cmp
mov
sar
inc
and
add
dec
push
clc
sub
pop
out
fs
cltd
push
inc
cli
xor
inc
mov
out
or
xchg
jmp
cmpsl
xchg
inc
fldcw
jae
pop
pusha
fstpt
cs
xchg
xorl
pop
push
pusha
aad
mov
in
pushf
push
and
jb
in
inc
out
mov
or
cvtpi2ps
dec
fdivs
push
das
adc
pop
sub
push
cmp
mov
scas
sbb
xor
xchg
leave
repnz
cmpsl
scas
xchg
adc
mov
jle
data16
cmc
jns
and
outsl
xlat
in
fsubrs
mov
not
pop
push
jl
and
cmp
pop
cmp
daa
scas
mov
xchg
mov
xchg
push
push
orb
lods
jns
sahf
cltd
jmp
gs
icebp
fpatan
xor
aas
jns
mov
sbb
pop
dec
je
dec
test
out
mov
sub
mov
pop
push
mov
inc
add
out
shll
jl
es
in
cmpsb
push
xor
push
das
cltd
dec
lret
push
add
add
adc
push
push
jl
shrb
shl
test
dec
inc
push
mov
dec
adc
clc
rcrb
shll
dec
out
rcll
std
cmpb
jge
nop
sbb
aas
cltd
jmp
and
movsl
mov
aas
and
hlt
stc
stos
mov
mov
sarb
push
add
lock
ja
pusha
dec
mov
cmp
mov
xor
nop
xor
adc
mov
mov
icebp
inc
mulb
add
sub
jno
lret
inc
pop
incl
xchg
insl
sub
xor
mov
inc
and
jae
sbb
mov
inc
scas
test
xchg
push
add
jno
lock
sub
adc
cwtl
push
adc
add
scas
cli
icebp
out
inc
pop
jmp
fiaddl
jbe
add
pop
pop
fcomps
ja
and
push
addl
sbb
popf
push
loope
fwait
lock
and
xor
push
dec
jge
call
add
dec
mov
out
sarl
push
pop
inc
loop
jmp
lods
das
push
arpl
xorb
outsb
pop
cmp
sbb
mov
mov
call
jl
repnz
pop
hlt
cs
fwait
sub
sbb
jg
push
aas
rcrb
pop
xor
js
aam
shrb
loop
add
call
out
pop
adc
sti
sahf
and
xchg
loope
inc
flds
push
std
mov
lods
mov
mov
mov
or
and
jno
cmpsb
movsb
cwtl
insb
f2xm1
repz
dec
xchg
ljmp
pop
cltd
call
push
std
dec
add
cmp
sub
or
fists
push
les
jmp
inc
mov
jecxz
out
add
sbb
push
cmpb
bound
push
aad
aam
and
cmp
loope
test
mov
sahf
out
fcoml
sbb
jmp
in
wbinvd
or
cmp
movsl
ss
add
xchg
es
xor
inc
push
pop
jle
jo
inc
add
scas
xor
xchg
cld
pop
jle
push
or
or
ds
jb
es
popf
cmp
jbe
xor
mov
push
cmp
lcall
cmp
lds
aas
pop
sbb
inc
sub
xchg
outsb
adc
movsb
stos
aad
mov
stos
dec
dec
test
dec
out
jns
rorl
jb
ds
outsb
scas
andb
sbb
inc
dec
roll
jb
mov
or
loope
lock
xor
imulb
xor
or
push
cmp
sbb
cmp
push
fsubs
lock
mov
mov
jp
xor
mulb
shlb
push
inc
movsb
mov
mov
mov
nop
andl
popf
cmp
clc
ret
add
mov
cs
mov
jno
dec
sub
pop
add
add
loope
jmp
adc
out
mov
dec
sbb
and
mov
jecxz
out
mov
pusha
mov
xchg
and
sbb
push
out
xchg
dec
lock
fisttps
shrb
sahf
mov
aaa
imul
push
jmp
xchg
decl
xchg
jb
cmp
mov
inc
mov
lahf
rorb
pop
cld
in
adc
test
in
jae
out
fcomps
inc
pop
pop
pusha
int
jecxz
cli
inc
inc
mov
outsl
xor
pop
or
icebp
js
inc
loopne
js
outsl
sub
ret
popl
pop
sbb
cmpsb
xor
cmp
xchg
mov
pop
pop
jecxz
sub
mov
mov
pop
aas
adc
in
jae
outsb
mov
inc
stos
cmpb
ret
fbstp
xchg
push
jae
cmp
mov
mov
cmp
pop
jbe
sahf
xchg
jno
and
and
orl
mov
jg
cltd
loopnew
push
cmc
sub
pushl
sahf
punpcklbw
loopne
rorb
pminub
jb
ja
fcompl
stos
dec
and
bound
lret
lcall
out
xchg
cmc
sbb
pop
push
and
jbe
hlt
add
sbb
cmp
mov
dec
in
jmp
cmpsb
xor
push
vpunpcklbw
hlt
dec
mov
mov
mov
add
pushf
test
cmp
test
mov
push
adc
push
repz
fiaddl
rorb
cld
sub
add
lret
mov
add
dec
inc
add
inc
call
jg
mov
mov
jecxz,pn
mov
loopne
or
xchg
lret
lods
shrb
and
mov
js
xor
mov
cmp
and
dec
xor
xchg
cltd
das
loopne
sub
and
cmp
add
dec
jb
lods
fdivrs
aas
jno
hlt
xchg
push
add
cltd
jmp
cwtd
test
out
mov
mov
mov
cltd
imul
outsb
loopne
jle
fwait
sarb
jae
xor
mov
sbb
inc
repz
or
push
das
in
lock
dec
push
jle
push
mov
push
inc
mov
or
les
leave
mov
unpcklps
cmp
fsubrl
push
pop
es
dec
xchg
push
je
cmpsb
push
test
stos
xchg
aad
mulb
pop
dec
mov
call
mov
clc
cmpsb
add
dec
or
cltd
cmc
xchg
add
push
pop
push
rol
inc
pushf
sbb
insl
jl
mov
loop
call
loop
lods
sarb
xorl
rorb
lret
rclb
and
and
push
jg
xchg
jbe
push
adc
adc
leave
xlat
jg
pop
imul
add
insb
inc
push
lcall
aas
nop
notb
or
insw
jb
mov
jecxz
xor
fidivs
xchg
lret
mov
dec
testl
repz
xor
or
dec
sbb
loope
cmc
jno
sbb
fiadds
push
stos
cmp
or
xor
nop
outsb
loopne
pop
ja
and
sub
xchg
xchg
fcompl
xchg
lea
outsl
outsb
and
mov
cmp
mov
mov
cmc
aas
push
imul
in
rcrb
lcall
jg
dec
out
negl
push
adc
adc
negb
mov
arpl
and
add
xchg
loop
sbb
xor
fadds
idiv
addr16
xchg
es
xchg
jne
mov
testl
aaa
arpl
sbb
iret
test
icebp
xchg
idivb
push
or
decb
test
mov
inc
jmp
xor
mov
xchg
jne
cmp
xchg
or
or
outsb
sub
test
or
hlt
hlt
or
enter
xor
mov
mov
adc
sbb
pop
rol
inc
xor
adcb
sbb
add
rorb
popl
or
pop
mov
or
jne
or
dec
mov
std
pop
jge
dec
pop
adc
sub
inc
or
add
in
in
enter
cmp
mov
enter
jl
xor
xchg
push
mov
push
pop
or
arpl
daa
inc
sbb
insb
cmpsb
adc
ffree
loop
loope
je
push
pop
out
inc
inc
mov
xchg
mov
xor
fdivr
cmp
xchg
mov
je
or
pop
cli
cmp
sub
addb
stc
or
sub
ljmp
adc
xorb
dec
mov
inc
jmp
mov
xchg
mov
sub
shrl
addl
jbe
lods
mov
mov
and
fcomps
cli
adc
and
xchg
xchg
daa
clc
pop
clc
pop
in
mov
push
pop
add
andl
lea
dec
push
mov
jg
idiv
out
cmp
cmpsl
mov
cmp
ret
pusha
sahf
in
and
xchg
es
and
not
mov
mov
outsb
add
push
sbb
hlt
dec
sar
inc
aad
and
dec
sub
fbld
fs
outsl
push
lods
or
sbb
repnz
jg
mov
mov
dec
fcomps
daa
ss
and
je
push
je
xchg
aad
scas
pop
inc
lock
dec
fistps
push
jle
ret
adc
push
cld
sbb
fwait
lods
imulb
inc
add
into
add
pop
out
addr16
bound
rorl
sub
add
testl
iret
sub
je
scas
iret
cltd
ror
sahf
in
mov
push
push
test
adc
xor
stc
insb
adc
stos
insb
cmpb
stos
mov
jecxz
pop
loop
sbb
mov
out
lret
dec
xor
daa
fiaddl
xlat
xor
test
mov
push
xchg
cld
add
sub
cmp
pop
in
ja
or
sbbl
add
add
adcb
lret
dec
ret
ss
push
gs
push
cmp
aaa
lods
pop
sub
push
pop
push
clc
push
dec
mov
xorl
incl
ds
shl
xchg
mov
jge
or
sub
add
sbb
sub
and
jecxz
pop
pop
sbb
pop
xchg
cmpsl
fiaddl
xchg
pop
inc
out
lods
inc
jmp
inc
push
sti
rolb
rcll
sbb
add
inc
inc
pop
xchg
or
aas
in
push
xchg
cmp
clc
movhlps
mov
jp
dec
inc
imul
add
lret
add
sbb
int3
std
pushl
adc
mov
je
inc
sub
out
cmp
adc
test
jnp
clc
xchg
xlat
loope
inc
and
adc
pop
icebp
pop
jno
adc
ja
xor
mov
inc
mov
jo
add
xor
pusha
incl
inc
xchg
sub
push
jb
and
adc
insl
adc
insl
shll
push
inc
ss
out
push
or
add
mov
xchg
inc
adc
into
and
mov
rcrl
shll
xchg
jle
sbb
leave
or
cmp
mov
sub
mov
loopne,pt
mov
and
pushf
mov
leave
mov
fsub
push
add
or
mov
out
dec
lahf
and
inc
popa
add
aaa
aam
pop
push
mov
enter
sarl
in
mov
jmp
std
out
cwtl
rcl
mov
rolb
jg
pop
push
testb
or
lea
xor
add
addr16
icebp
fwait
mov
call
psubusb
pop
dec
jns
and
mov
adc
cld
popa
mov
pop
rcr
rcrb
fs
adcb
sub
out
test
or
inc
xchg
and
jl
xchg
cmpxchg
cmp
inc
popa
pop
push
gs
loop
fcom
pop
outsl
jmp
and
inc
js
mov
push
xchg
push
xor
icebp
je
sub
ret
inc
sarl
dec
inc
mov
les
mov
mov
cwtl
gs
icebp
push
or
sbb
add
mov
pop
mov
out
push
mov
icebp
sub
bnd
das
add
cld
lock
dec
xchg
or
sbb
movsb
xor
mov
orb
inc
lret
rcrl
mov
rcrl
jle
lods
mov
fwait
ret
or
in
mov
add
cmp
jecxz
outsb
dec
loopne
lock
inc
scas
jl
sbb
push
adc
rorb
loopne
xchg
shrb
xchg
lea
mov
adc
inc
jp
cmp
inc
or
jo
add
out
dec
lea
push
mov
add
adc
add
aas
push
into
xchg
test
andl
mov
jo
jge
test
and
pop
aaa
jg
or
fs
sbb
push
int
push
leave
mov
mov
repz
mov
sub
test
movsl
pop
sbb
adc
mov
ret
dec
push
ljmp
fildl
popf
mov
adc
mov
test
ret
adc
insl
inc
rep
dec
sub
mov
fsubs
xchg
adc
push
and
cmp
inc
std
fldt
or
enter
mov
into
pop
ret
scas
sahf
xor
addps
pop
push
decl
pop
int
pop
add
sub
and
inc
sbb
jns
jg
pop
inc
sbb
xchg
and
xchg
lock
movsb
and
xchg
ret
jecxz
cs
cmp
mov
rol
and
lods
stos
jnp
mov
mov
jo
inc
jbe
outsb
daa
jbe
aam
repz
stos
or
xchg
sbb
icebp
push
cmp
insb
or
addl
add
fists
pop
pop
daa
lods
clc
incb
mov
scas
or
adc
loopne
cli
lock
push
sbb
xlat
lock
mov
fwait
sbb
push
scas
addr16
xlat
push
pusha
mov
lock
xor
arpl
clc
mov
out
pop
fisubs
outsl
pop
lcall
xchg
xchg
adcb
int
inc
lock
mulb
arpl
jno
test
int
clc
leave
ret
mov
push
lcall
add
push
sub
hlt
mov
lret
inc
cmp
pop
xchg
test
pop
cli
or
mov
adc
adc
jp
pop
lret
in
mov
xchg
sub
test
hlt
ljmp
mov
cmp
stc
mov
clc
mov
sub
ds
test
mov
shlb
adc
cmp
loop
cli
sub
mov
iret
mov
bound
sub
jmp
das
inc
je
add
fnsave
push
push
div
js
fstl
lret
lds
and
xor
cmc
out
adc
jp
push
push
pusha
js
test
jecxz
cli
inc
sub
jg
lahf
shlb
je
add
add
icebp
in
and
int3
adc
adc
sarb
outsb
xorl
xor
dec
pxor
lods
adc
inc
call
lods
inc
mov
inc
cltd
mov
jmp
add
cmpb
fwait
ja
sarl
aam
add
pop
stc
ds
movsb
aam
xchg
out
out
dec
adcl
jp
adcb
fdivrl
mov
push
std
dec
lds
jmp
pop
les
outsb
repz
adc
xor
mov
movsb
mov
xchg
xor
jle
ljmp
adc
test
imul
cmp
add
ss
dec
dec
sub
lcall
cld
pop
and
adc
and
cli
sar
inc
cltd
push
in
pusha
or
data16
mov
jge
push
int
out
push
cmp
shl
inc
pop
add
lock
pop
pop
mov
popf
mov
cwtl
call
out
fidivrs
xchg
cmp
and
or
decl
and
je
or
lret
adc
xor
add
fistl
and
push
adc
jno
mov
fbstp
pop
sub
les
jb
mov
cwtl
xor
or
xchg
int3
mov
aad
sbb
pop
pop
push
test
fs
xor
push
jno
xor
jg
push
pop
icebp
add
and
popa
test
sub
pop
or
add
xchg
rorb
sub
pusha
cmp
and
ljmp
jmp
sub
cs
mov
pop
pop
cld
es
add
add
je
sbb
out
xchg
sbb
push
arpl
jmp
sarl
push
cmpsb
lods
cld
pop
sti
shlb
std
aad
adc
lods
xchg
mov
cmp
shrb
sbb
mov
lret
push
jb
clc
leave
xchg
repnz
lea
int3
fwait
xor
pop
out
sub
sub
push
sub
cmp
lock
jl
or
ss
clc
xor
and
and
daa
ss
call
faddl
mov
icebp
mov
adc
cmpsl
dec
mov
inc
pop
fnstcw
mov
in
fs
mov
jg
and
int
pop
xchg
or
sahf
cli
cltd
loopne
cmp
jne
sbb
or
mov
jge
mov
sub
pop
ljmp
rcr
jb
aad
jbe
and
push
push
test
sub
jl
stos
xchg
in
in
fstpl
aas
xchg
and
in
fidivs
or
lcall
loope
mov
ficoms
movsb
sub
cltd
inc
sub
cli
sub
sbb
lock
sub
jg
inc
pop
repnz
repnz
sbb
sub
frstor
arpl
lds
mov
std
scas
lea
hlt
jbe
enter
fcos
add
incl
sbb
dec
arpl
lahf
xchg
js
inc
add
adc
subb
call
stos
mov
xor
xor
insl
test
push
dec
xchg
adc
add
sbb
add
loopne
push
rorl
mov
jle
sbb
out
xlat
je
xchg
ljmp
mov
mov
cmp
adc
xor
inc
pop
shr
cld
ret
inc
and
adc
mov
ficoml
fdivr
fistpll
mov
xor
xor
ret
dec
mov
ljmp
dec
pop
pop
lods
cmpsl
add
bound
js
into
clc
jnp
or
xchg
or
xchg
pop
xchg
inc
lahf
add
in
ljmp
out
and
std
adc
pop
int3
scas
ds
inc
pop
dec
clc
cmc
cmp
push
mov
adc
inc
loope
rcll
xor
jl
pop
enter
jge
inc
test
mov
stos
dec
out
pop
and
sbb
imul
and
dec
incl
inc
xor
push
das
mov
xor
in
arpl
add
loope
inc
inc
dec
arpl
mov
inc
lahf
jns
mov
pop
insl
pop
cmc
inc
mov
fsubrs
scas
fisubrl
or
xor
xchg
xchg
xchg
pushf
mov
sub
inc
pop
and
adc
pop
ljmp
shrl
mov
cmc
sub
push
inc
loop
shlb
add
lret
aas
cli
outsb
cmp
push
add
lret
pop
pop
andl
mov
or
push
inc
mov
gs
mov
add
and
repz
aas
int3
pop
mov
xor
lret
or
sbb
add
cmp
clc
fwait
repnz
inc
sbb
clc
test
lret
pop
lock
sbb
fisubrs
fisttpll
and
insb
sbb
pop
call
rclb
push
outsb
test
add
inc
addr16
sub
mov
sahf
pop
imul
pusha
sub
adc
repnz
mov
dec
mov
push
movsb
push
cld
stc
push
sbb
lret
and
push
int3
jmp
aaa
sbb
push
push
pop
sub
pop
daa
adc
mov
cmp
add
sub
call
aas
xchg
and
imul
pusha
dec
sbb
jb
push
test
jle
xor
or
push
cmp
adc
or
adc
adc
inc
faddl
dec
fs
sbb
jne
cmc
incb
and
rclb
test
mov
out
sub
outsl
and
rcrl
xchg
push
inc
sub
mov
int3
loop
and
cmpsb
xchg
shll
rcr
mov
and
clc
add
sarb
mov
scas
cmp
int3
mull
sub
insb
mov
popa
push
push
cli
mov
clc
adc
insb
inc
cs
cs
popf
lds
mov
push
lea
jnp
mov
push
sub
nop
imul
sbb
or
cmp
sahf
shlb
popl
int
jnp
cs
jmp
adc
dec
imul
clc
sub
xchg
or
cmp
rorb
lea
jb
sub
loopne
or
lret
push
inc
aas
test
and
lea
jl
mov
cltd
pushl
fstl
cmpsl
ret
imul
ljmp
ror
test
push
push
movsb
mov
jbe
mov
mov
popf
clc
jbe
mov
aad
xor
cltd
outsb
jno
push
fcmovbe
or
and
mov
mov
push
push
mov
pusha
mov
stc
sub
push
cli
sarl
inc
cmp
stos
loopne
mov
ret
mov
pushf
jnp
stos
sub
aas
es
popa
adc
sahf
faddl
mov
push
lcall
scas
divb
mov
push
or
mov
sub
xchg
mov
and
mov
xchg
fwait
hlt
sub
mov
shl
pmaxsw
sbb
leave
add
je
pop
mov
push
push
test
jl
lock
shrl
add
sbb
popa
add
xor
add
pop
mov
subl
clc
pop
repz
sub
loope
xchg
ret
xchg
push
push
incl
adc
or
push
subl
aas
cwtl
movsb
dec
outsb
jne
pop
sarl
adc
or
mov
popa
jb
pop
jnp
dec
pusha
push
test
movsl
fildl
push
das
pop
adc
or
jmp
pop
adc
mov
pop
mov
add
aad
jg
pop
lea
mov
adc
jae
jp
lock
xor
push
jnp
add
cmp
into
xorl
out
dec
xchg
pop
jmp
lock
addb
rorl
add
jecxz
xchg
cs
sahf
or
adc
je
cmpps
add
add
sub
rorb
cmp
mov
xchg
movsl
add
jg
mov
sub
insb
cmpsl
pusha
dec
jns
cmc
dec
push
decl
mov
lret
mov
adc
je
pop
pop
or
mov
mov
ret
mov
jae
pop
movsl
add
int3
push
dec
loope
mov
adc
xchg
test
es
mov
imul
fsubrl
repz
lock
lahf
sub
or
mov
jns
rolb
mov
shrl
inc
mov
fidivl
jmp
stos
dec
push
sbb
mov
jg
imul
rcrl
dec
inc
mov
pop
repnz
mov
je
fldt
out
xchg
push
add
gs
test
inc
das
adc
push
mov
jnp
mov
cli
shlb
xor
sbb
push
jo
stos
rcrb
inc
dec
xchg
mov
testb
xor
mov
jge
pop
repz
aas
mov
jge
enter
mov
sbb
cmp
jl
lock
mov
stc
or
xor
hlt
jae
xchg
and
daa
xor
xlat
cmp
mov
jg
push
lahf
xchg
cmpl
sub
and
sbb
pop
adc
stos
iret
popa
std
dec
mov
sbb
and
leave
ficomps
cltd
bnd
push
data16
mov
fidivs
jbe
pop
inc
test
cmp
fwait
lods
mov
push
out
popf
sbb
or
aas
xchg
divl
mov
mov
fldenv
loopne
stos
je
mov
push
inc
or
or
jmp
in
mov
rcrb
lock
or
stc
fnstenv
repz
popa
sbb
out
push
pop
push
push
mov
pop
sar
lods
movsl
pop
add
jne
cmp
pop
lea
sbbb
ret
jmp
clc
sub
out
add
pop
or
hlt
and
push
add
fildll
sub
rcrb
jecxz
add
lods
xor
adc
push
and
divl
xchg
ret
cltd
lcall
clc
push
decl
or
test
lods
cltd
popf
fcoms
dec
add
push
inc
data16
push
lods
clc
fsub
movsb
mov
rorl
fst
insl
lods
lcall
mov
jb
push
push
sbb
dec
les
mov
fsts
ret
inc
into
adc
jp
dec
push
aam
int3
icebp
stos
cmp
cmpsb
daa
in
xchg
into
enter
loopne
ss
adc
test
adc
sub
cpuid
cltd
aam
iret
daa
and
inc
std
das
out
test
imul
movsb
mov
push
inc
test
jmp
imul
jno
insb
cmp
test
and
mov
repnz
jl
out
xor
or
pop
and
int
in
nop
push
pop
mov
cmp
adc
add
and
test
adc
mov
cltd
insl
dec
inc
bound
test
or
adc
sbb
cmp
mov
xchg
int3
xchg
mov
jbe
cmpsl
xchg
sub
ljmp
push
xor
jecxz,pt
hlt
mov
push
dec
or
sbb
aad
fs
sbb
mov
sub
add
add
divl
jg
push
adc
cld
neg
xor
fs
inc
add
inc
fmuls
stc
divb
dec
mov
incb
aas
mov
mov
cmp
aaa
cli
pop
ss
out
cwtl
mov
gs
pop
loopne
or
add
js
test
mov
mov
or
sub
sub
shll
pop
loope
inc
es
jbe
mov
jecxz
jecxz
and
into
movsb
rolb
dec
outsb
out
dec
xchg
mov
je
inc
lret
aad
sbb
cld
lock
push
aam
dec
mov
into
push
sahf
scas
fcmovnbe
mov
inc
fidivrs
cmpsl
lock
mov
lahf
mov
pop
jecxz
stos
cs
rorb
inc
aad
movsb
cmpsb
aaa
adc
in
into
and
bound
push
mov
clc
stos
cmp
and
clc
lock
jae
fimuls
adc
jg
icebp
push
cmp
fimull
jno
rcr
adc
lcall
jge
sbb
in
int
scas
icebp
ss
fwait
mov
jge
pop
fldcw
pusha
sbb
pop
gs
sub
sti
push
dec
loopne
subb
xchg
out
lods
cmpl
cmp
adc
pop
mov
mov
xor
mov
xchg
cli
inc
mov
into
fadd
daa
nop
mov
mov
mov
mov
xor
in
pop
gs
xor
test
add
ja
call
adc
sbbl
call
mov
es
push
clc
cmp
cmpsb
mov
sbb
pop
clc
outsl
cmpsb
mov
lret
xor
adc
inc
data16
stos
scas
push
ds
aaa
cld
imul
std
addr16
aaa
mov
out
ljmp
flds
dec
pop
xchg
push
adc
fistps
and
mov
dec
ret
in
jnp
jo
fidivl
bound
sbbb
ss
push
pop
fmuls
or
sub
or
rcrb
das
xor
mov
mov
sub
and
popa
addb
mov
lock
add
adc
push
in
sub
fisttpll
leave
xchg
xor
das
and
or
cmp
xchg
int3
rolb
or
xchg
popf
into
pushf
mov
sbbb
xor
add
lock
stos
in
jmp
sbb
pop
and
jg
mov
aam
repnz
push
jecxz
fsubl
jl
loope
jnp
mov
test
jo
mov
cmp
inc
nop
je
loopne
test
pop
fstps
pop
pop
lret
test
idivb
in
leave
mov
mov
xchg
cmpl
mov
mov
scas
pop
pop
scas
add
lcall
lock
sbb
test
decl
push
jmp
aam
push
jecxz
xchg
cmpb
cmpsb
pop
jns
fcoms
aas
sub
mov
pop
cli
inc
inc
or
ljmp
aam
mov
nop
sub
test
mov
pusha
cmc
add
fwait
lock
movsl
xchg
movb
cs
nop
push
mov
cmp
adc
in
xorb
xlat
aas
xorb
jne
mov
loope
push
or
test
popf
mov
mov
push
push
mov
iret
jb
repz
push
aas
push
sti
sti
into
test
add
out
shl
pushl
mov
lds
shrl
in
push
movsb
sbb
add
test
push
dec
lods
adc
dec
push
dec
and
pop
or
ja
jp
jmp
movsl
push
loope
cmp
xchg
jno
ret
sub
cwtl
inc
pop
lahf
rolb
sub
aas
push
adc
and
gs
adc
mov
mov
lods
push
sbb
loopne
inc
decl
push
inc
cmp
xor
imulb
push
andb
jo
jle
out
inc
push
sbb
aam
aas
push
cld
or
call
ljmp
test
movsb
pop
pop
mov
cli
das
sbb
or
lcall
or
push
mov
lods
xor
add
or
dec
and
xchg
adc
pop
insl
or
fs
fbstp
mov
idiv
and
pop
iret
push
xor
sti
out
xchg
push
aas
sub
sub
cli
xor
xchg
sub
cmc
jg
ss
loop
sub
pop
int
push
sbb
loope
daa
scas
icebp
mov
or
leave
xor
xchg
xchg
nop
clc
xor
jb
andb
pop
jae
xchg
add
xchg
jns
outsl
fistl
enter
mov
push
pop
bound
adc
inc
scas
fdiv
scas
adcb
out
incl
jmp
in
pop
cmp
sahf
hlt
mov
cmp
push
and
add
jo
into
pop
iret
pushf
repnz
inc
cmp
cmp
addl
mov
aas
xchg
clc
push
daa
sub
sub
outsb
aam
or
ds
jecxz
imul
or
sub
imul
add
xchg
int3
pop
fistps
sysenter
pop
adc
loope
insl
pop
xor
shlb
sbb
xchg
xchg
mov
shlb
mov
push
jle
mov
nop
sbb
imul
cmp
bound
push
xor
leave
mov
aas
xor
mov
mov
bsr
sbb
add
pop
xor
popa
push
imull
sbb
nop
pop
or
lds
addl
or
mov
mov
sarl
add
stc
adcl
xor
insb
lahf
outsl
ret
push
seto
pop
rolb
inc
lahf
cmova
add
orb
ljmp
mov
dec
sahf
jne
mov
pusha
fisttpl
aam
sub
dec
movsl
bound
xor
jg
or
add
mov
fwait
pop
or
sbb
in
push
hlt
loope
cmp
shll
sbb
mov
insl
rcrb
xor
mov
mov
rorl
dec
mov
push
adc
push
or
sbb
insb
and
add
cli
outsl
stc
sub
add
ret
pop
imul
dec
cmp
es
cmp
dec
pop
cmp
adc
sbb
cltd
loopne
xor
pop
nop
loopne
inc
or
mov
and
cmp
mov
xchg
daa
pop
inc
aas
popa
ret
jae
or
sbb
pop
pop
inc
sarl
aad
das
xchg
stos
imul
push
mov
loop
scas
imul
adc
mov
dec
pushl
hlt
loope
mov
or
sub
test
pop
lods
mov
loope
or
xor
inc
cmp
xchg
xchg
pop
jb
adc
fnstenv
mov
loopne
sub
fistps
and
push
push
pop
cmpsl
repz
jmp
ret
pop
add
xor
push
std
dec
mov
imul
sbb
test
fmull
popl
push
cmp
fs
in
enter
adc
andb
mov
mov
or
fs
push
out
push
sub
cltd
cmc
mov
push
cmpsl
or
mov
push
cs
jne
pop
lock
fwait
xchg
sarl
inc
imul
push
shrb
sub
pop
cmp
out
cmp
or
insl
push
and
or
xchg
adc
mov
jbe
sbb
pop
rolb
push
mov
andl
das
push
insl
or
movb
test
test
sahf
ljmp
jb
or
int3
dec
daa
inc
adc
nop
sub
ds
xor
fst
sti
add
cmc
jge
ret
pop
jae
dec
mov
fldl
fmuls
or
mov
shrb
cmp
in
inc
dec
jmp
mov
sub
jle
mov
sub
shll
dec
addl
add
pop
adc
test
sub
lahf
sub
lods
mov
push
mov
push
insb
pop
push
sub
xchg
add
mov
push
or
mov
scas
arpl
jmp
popl
pop
sub
iret
mov
adc
push
adcb
jg
inc
test
xchg
jnp
aam
xchg
add
mov
mov
inc
shll
rcr
pop
imul
sarb
sbb
mov
dec
ret
and
ds
xor
pop
loope
lea
cli
adc
mov
mov
mov
and
mov
cmp
ljmp
shl
nop
mov
enter
mov
mov
mov
movsb
inc
pop
xchg
aas
sbb
push
mov
test
shll
mov
adc
flds
xor
stc
or
mov
gs
in
jl
push
dec
sbb
sbb
dec
cmp
or
and
mov
jl
addl
sbb
test
and
sbb
js
lods
fisubl
inc
ss
jns
ret
stos
sub
or
sub
scas
shrl
pop
push
inc
into
and
mov
sti
ret
or
sbb
push
loop
xchg
cmpsl
fildl
pop
shll
jmp
fcoml
stos
xchg
xor
fwait
lea
sbb
lcall
stc
dec
sub
add
mov
cmp
dec
repnz
rcl
or
adc
stc
fdivl
jmp
lods
xlat
ffreep
jae
jge
cltd
dec
test
movsl
lahf
or
xor
shl
pop
movsb
xor
sarl
inc
sbb
mov
popf
cmc
sbb
pop
sub
push
inc
out
xchg
push
and
adcl
js
mov
call
inc
jg
mov
cmc
push
ja
lock
int
imul
lds
pop
test
int
outsl
jo
rolb
sub
pop
lret
icebp
pop
rorb
jns
pop
sub
loope
and
dec
fsubs
dec
js
fldenv
push
mov
mov
push
dec
mov
mov
popa
cmc
and
sar
rolb
das
mov
dec
xchg
dec
and
out
in
xchg
sbbl
aas
test
je
adc
add
lods
imull
les
mov
cmp
mov
shll
insb
push
inc
insb
rcrl
mov
and
lcall
loopne
cmp
inc
cmp
push
adc
add
jmp
icebp
jno
add
jnp
and
jno
xchg
cwtl
pop
pop
push
push
mov
jbe
roll
mov
repnz
mov
jb
mov
cld
sarl
popa
pop
pop
addb
outsb
and
fdivrs
adc
test
mov
fwait
ret
call
call
mov
mov
lcall
movsl
mov
or
or
shlb
inc
mov
loopne
outsb
push
sub
add
sarl
mov
out
jo
mov
sub
xchg
adc
pushf
test
add
or
shrb
cmpsl
roll
fidivrs
enter
aas
sbb
and
inc
lcall
hlt
add
mov
les
sbb
dec
mov
xor
loopne
adc
push
or
lds
xor
pop
std
lret
and
jb
add
popf
cmpsb
shrb
add
sbb
mov
cmc
jno
pop
xchg
adc
pop
aaa
cmp
push
push
adc
cmc
lea
push
pop
icebp
clc
in
mov
mov
stos
push
pop
and
mov
aad
cmpsb
cs
pop
xchg
out
loope
into
or
shll
lds
movsl
inc
mov
ljmp
cmp
sbb
sbb
pusha
loop
outsl
mov
jne
and
dec
xor
idivl
mov
jo
test
ds
je
push
movsl
jmp
movsl
sbb
adc
adc
mov
adc
add
adc
or
fmull
and
pop
adc
xorl
std
cmc
xchg
outsb
popl
sti
add
mov
loope
xchg
xor
or
mov
xor
repnz
cmpl
test
das
es
or
sub
pop
jecxz
out
imul
popf
je
shlb
leave
xchg
sbb
pop
jno
adc
pop
mov
popa
jno
jle
jmp
int3
jns
cmp
xchg
ja
cmp
mov
insl
imul
andb
decb
mov
jg
aam
cld
fldt
xlat
inc
add
xchg
cs
lahf
jp
mov
and
add
and
sarl
sbb
and
adc
pop
scas
shlb
adc
loope
test
mov
pop
push
adc
adc
pop
out
and
pop
cmc
outsl
and
xor
push
pop
popf
pusha
mov
fldenv
jmp
push
xlat
adc
inc
mov
lods
mov
mov
pop
mov
daa
fnstenv
repnz
inc
mov
in
sub
jo
ret
inc
outsl
popa
clc
lods
incl
fs
inc
fcmovnu
rcr
loope
into
xchg
hlt
jl
adc
sub
loope
popa
pop
in
fwait
popa
ror
fwait
test
jle
setle
les
cmp
test
mov
mov
rcrb
add
or
int
xor
mov
mov
loope
fildl
into
cmp
enter
int3
cmp
adc
or
rcll
jg
fstpl
roll
xchg
sbb
sti
rcrl
xchg
or
xlat
ds
mov
and
outsb
mov
inc
sub
testb
push
cld
pusha
xchg
add
add
adc
movsl
cli
jbe
jbe
das
out
sbb
add
sub
add
fcoml
pop
js
mov
lock
and
pop
adc
add
mov
sbb
das
fldl
lods
cmp
sbb
jbe
jl
pop
out
in
dec
ret
cli
lcall
jecxz
adc
or
cwtl
jbe
inc
pop
mov
addl
ret
cmp
push
inc
and
testl
cld
cmpsl
mov
lds
mov
adc
push
incl
mov
adc
add
out
mov
adc
jecxz
lret
add
cld
fimull
shll
outsb
aam
outsb
daa
inc
in
pop
sti
add
lock
sub
ficoml
int3
push
adc
xchg
mull
mov
adc
mov
clc
push
add
or
fisubs
daa
out
into
dec
add
aas
cli
daa
leave
xor
out
xor
shll
out
dec
push
pusha
pop
mov
mov
inc
clc
xchg
pop
inc
insl
imul
sbb
in
jo
sbb
sub
call
enter
inc
dec
mov
push
pop
mov
test
xor
lret
mov
and
and
getsec
mov
bound
mulb
xor
leave
ret
fsubl
inc
sbb
out
xor
enter
xchg
jl
sahf
ret
lahf
sub
sbb
xchg
inc
jp
pop
jmp
cli
mov
xor
test
gs
ret
fbld
cmp
mov
jg
pop
mov
mov
mov
ljmp
pop
jno
iret
jno
and
subb
in
lahf
cmp
std
mov
mov
fs
cwtl
adc
dec
je
push
mov
fmull
icebp
or
addl
push
mov
add
jp
sbb
adc
pop
pop
xchg
js
sarl
mov
add
jmp
in
out
bound
push
pusha
popa
cmp
js
inc
cltd
jnp
adc
pop
dec
insl
jo
push
mov
cmc
out
into
cwtl
bnd
ret
test
adc
fisubl
dec
dec
adc
stc
inc
outsb
aad
out
jg
inc
push
stos
repnz
sub
push
xor
jge
ffreep
adc
in
mov
xor
push
jl
and
dec
add
addb
lods
mov
cmp
nop
mov
xchg
rorb
xor
pop
dec
jno
sub
aas
mov
sub
loop
mov
mov
in
loop
popa
mov
test
inc
xor
jge
jmp
jg
sbb
sub
les
or
shr
pop
out
xor
mov
mov
imul
mov
loope
mov
enter
mov
ret
pop
xchg
lods
cmp
stc
call
xor
jbe
lret
cmp
jbe
cltd
and
fstpt
or
outsb
and
pop
movsl
in
dec
adc
lods
push
dec
pop
ljmp
outsl
int3
xchg
mov
push
ja
mov
pop
hlt
lcall
mov
push
fwait
sbb
jle
incb
data16
inc
scas
lods
jae
xor
rcr
mov
pop
adc
and
inc
cltd
test
testb
sahf
add
pop
not
jbe
push
cld
jmp
pop
subb
mov
jp
js
mov
jecxz
pushl
and
push
mov
mov
jle
push
pushl
mov
rcll
fisubrs
mov
inc
add
lods
push
cmp
xchg
jp,pn
sub
outsl
add
daa
jnp
je
xlat
cmp
pop
loope
pop
push
arpl
adc
inc
imul
xlat
clc
ja
lret
add
dec
sbb
jbe
movsl
icebp
loop
jg
xchg
loope
xor
push
outsl
or
mov
push
lods
daa
push
mov
je
push
sbb
cmp
aad
pop
push
mov
aad
xor
das
xchg
pushf
adc
repz
push
push
inc
pusha
incb
xor
hlt
or
cli
cmp
or
mov
loopne
das
push
push
es
mov
jg
xchg
scas
and
mov
or
mov
xchg
scas
push
icebp
add
loopne
mov
pop
shr
dec
inc
movb
push
cs
ja
fsts
push
lods
and
fistl
lahf
in
dec
stos
mov
sub
mov
push
daa
into
icebp
pop
mov
cmp
andl
dec
rclb
loopne
fwait
sbbb
pop
dec
dec
out
pusha
and
jne
cli
scas
push
xchg
int3
out
rorl
and
pop
cmp
xchg
rclb
shlb
jmp
dec
inc
mov
sbb
xor
and
sbb
mov
add
sbb
mov
pop
pop
add
jmp
pop
addb
insb
ret
popf
rorl
or
cltd
lods
sbb
cmp
rorb
js
cmp
ror
aam
push
sbb
jbe
leave
mov
hlt
adc
cli
mov
out
push
xchg
inc
mov
lock
stc
dec
mov
lret
jl
das
inc
jge
insb
adc
ss
mov
add
cmp
sub
cmp
test
push
jecxz
leave
rcrl
mov
jg
push
xchg
stos
cmp
in
jge
and
push
packssdw
mov
mov
std
idivl
out
push
in
xor
cli
dec
ret
popf
call
cmp
call
and
jo
inc
sub
mov
lret
movsl
out
push
jno
jo
pop
pop
inc
int3
incb
cmpsb
inc
or
mov
mov
pop
stc
test
lods
pushf
data16
fld
inc
cmc
pop
int3
in
jp
popf
test
or
out
jb
dec
jbe
std
inc
lret
int
xlat
test
pop
call
lods
repz
nop
lret
imul
inc
inc
pop
jmp
inc
leave
and
loope
decb
cmp
mov
mov
pop
push
insb
pop
stos
add
push
pushf
mov
jp
jno
cwtl
sub
add
loop
xor
das
sbb
ds
cmpsl
repz
xor
sbbl
pop
dec
mov
ljmp
enter
scas
mov
fisubs
insl
and
jno
in
hlt
out
mov
add
aas
aam
adc
inc
and
insl
loop
jno
inc
pop
imul
aam
inc
popa
add
pop
testl
xchg
roll
pop
fnstenv
int3
cmc
test
addr16
dec
mov
mulb
hlt
enter
shr
or
push
add
or
das
mov
aaa
std
inc
adc
mov
in
in
jmp
js
aas
push
inc
or
or
fcompl
iret
sbb
sub
iret
mov
incl
aad
sbb
lcall
sub
popa
shrl
dec
clc
xchg
arpl
push
cli
cmp
mov
iret
orb
jl
icebp
mov
mov
jl
mov
cmp
lret
and
xorb
mov
push
pop
std
fbstp
aaa
inc
inc
add
scas
and
push
push
jns
out
pop
cld
in
pusha
mov
cltd
or
inc
pop
std
jns
jnp
push
faddl
mov
jmp
hlt
jecxz
insl
pop
push
jl
orb
insl
icebp
lahf
jae
jnp
mov
test
add
shl
stos
test
shlb
out
cmp
or
and
leave
fistl
adc
cmp
movsl
bound
xchg
lds
jg
ficomps
sbb
push
jnp
sbb
adc
inc
or
jne
mov
or
pop
mov
repnz
mov
pmuludq
jbe
jp
jle
loop
repnz
or
add
sbb
jl
mov
cmpsb
and
push
add
jp
enter
filds
ret
rclb
leave
jo
push
xor
mov
add
loope
outsb
mov
inc
push
pusha
or
shrb
les
push
and
xor
mov
jnp
push
jns
mov
sbb
pop
nop
pop
insb
fs
mov
lods
pop
jmp
push
xchg
jns
sub
lods
sar
xchg
test
loopne
scas
loopne
adc
cmpsl
or
or
das
fdiv
fcmovu
outsl
fists
rcl
sub
add
cmp
ss
pushl
inc
and
xlat
jecxz
pop
lods
aam
stos
add
xchg
pop
fcoml
mov
fstpl
jecxz
sub
rcrl
add
jbe
or
mov
adc
push
inc
dec
cmp
shrb
mov
xchg
inc
notb
movsb
mov
movsb
call
sbb
adc
adc
adc
sbbl
mov
popw
add
jno
lret
push
sbb
mov
std
movsb
sbb
popa
add
xor
mov
shll
call
mov
xchg
int
cmpb
jbe
push
hlt
and
push
lcall
jp,pn
nop
pop
xchg
add
cmp
lock
test
sbb
mov
jb
xor
jmp
cmc
fnstcw
inc
jo
sbb
add
mov
push
popa
sub
and
cmc
push
pop
dec
sarb
add
cmp
xlat
test
sbb
jle
ss
xor
popa
les
loopne
add
int3
jbe
sub
sbb
fcoml
nop
mov
js
jmp
stos
mov
and
dec
js
mov
dec
inc
fistps
cmp
pop
sbb
or
out
cmp
xorl
add
add
orl
inc
dec
sahf
push
xor
shll
aad
rclb
in
movsl
adc
adc
inc
dec
pop
add
loop
mov
call
cwtl
sub
subb
cltd
inc
push
inc
xor
inc
movsb
sarb
cmp
inc
movsb
cs
xor
loope
test
adc
push
xchg
daa
xor
sbb
mov
mov
sbb
cmp
or
mov
jle
mov
add
xchg
test
pop
jns
or
add
add
std
ret
lds
sub
mov
sub
cwtl
inc
dec
sahf
pop
xchg
cmp
lock
lods
jp
scas
addr16
add
sarl
pusha
push
jge
pop
push
popf
lea
ficompl
cmp
in
pop
je
and
add
repz
in
or
cmp
jmp
movsb
xor
dec
fstps
cmp
loope
clc
xchg
aas
dec
hlt
pusha
cmp
fs
hlt
pushf
inc
xchg
movsb
cs
dec
push
js
xor
fbld
adc
lock
in
jge
mov
or
pop
pop
sub
leave
and
cwtl
bound
ss
jno
push
jl
xchg
mov
xchg
mov
and
ljmp
or
in
add
fwait
pusha
and
add
push
rorb
sti
cmpsb
stos
pop
test
mov
add
aaa
iret
sarb
mov
lods
test
gs
mov
mov
loopne
sub
sub
cmp
lahf
dec
or
pop
in
sbb
mov
pop
es
and
aam
rcll
xlat
jne
aad
movl
popa
xorl
adc
add
add
xchg
sub
jnp
call
and
fnsave
push
pop
pop
add
shlb
xlat
xchg
push
out
mov
mov
pop
inc
sbb
jno
sbb
cmpsb
std
or
sbb
lods
jmp
or
ret
cli
out
cmpl
sbb
repz
and
pusha
xchg
adc
in
dec
loopne
sbb
jne
pusha
loop
sub
and
scas
and
mov
push
cmp
insl
int3
pusha
push
push
lea
sub
lcall
jg
mov
inc
jl
mov
inc
paddb
mov
lock
incb
xor
mov
sbb
sub
sbb
adc
jbe
cltd
push
aas
js
mov
mov
cwtl
jne
cld
adc
add
cmp
cld
mov
inc
xchg
push
or
inc
movsb
sbb
or
dec
loopne
jno
loop
sahf
loope
cmp
mov
fbstp
ljmp
mov
adc
cli
push
inc
push
or
jp
push
shrl
xor
lea
add
fidivs
dec
daa
dec
cltd
jno
xchg
inc
sahf
movsb
cld
jecxz
push
xor
sbb
add
flds
mov
clc
iret
mov
or
fimull
xor
lods
adc
call
pop
jbe
jmp
mov
xor
pop
arpl
or
arpl
adc
flds
pushf
loopne
jecxz
mov
negb
iret
fs
aas
clc
mov
loop
mov
jp
ds
ret
lea
adc
dec
mov
lahf
iret
mov
pop
sbb
aas
sbb
aas
insb
mov
dec
arpl
rclb
sbbl
cmc
cmpb
pusha
lret
mov
icebp
mull
jmp
inc
loope
cld
hlt
push
mov
nop
inc
gs
cmp
cltd
mov
cld
daa
xchg
sub
push
rorb
shl
wrmsr
imulb
loope
mov
ss
or
pop
sub
inc
dec
and
cmp
mov
jle
and
idiv
push
push
mov
push
pop
loope
jg,pn
pop
loope
adc
lods
fcom
out
or
hlt
jg
lock
jecxz
push
insl
imul
stc
sub
mov
pop
sub
xchg
shlb
push
nop
push
ror
add
cmp
ja
inc
clc
popa
std
imul
jg
add
mov
inc
out
ss
je
ss
into
dec
xchg
incb
mov
ss
adc
sarb
cs
sbb
jl
sub
jp
xlat
and
clc
adc
addl
jbe
outsl
movsb
sbb
sub
cwtl
call
push
loopne
repnz
sub
jbe
lods
sbb
mov
nop
mov
mov
dec
ja
insb
jb
and
shr
cli
sbb
mov
loop
or
or
jbe
push
out
leave
loop
cmp
add
cld
sti
mov
pop
dec
jg
ljmp
jmp
in
test
ficoml
mov
cmpsb
popa
inc
xchg
jp
movsl
xor
std
mov
add
in
pop
aam
call
mov
lret
rolb
out
and
icebp
aad
fcmovbe
flds
adc
pop
ret
inc
and
adc
xchg
jg
je
xchg
dec
inc
add
movsb
js
clc
xchg
cld
mov
mov
stc
add
cmp
and
pop
cli
loop
push
xchg
in
jmp
add
push
mov
add
push
mov
fsub
int3
push
mov
pop
mov
sub
dec
das
mov
sbb
lea
adc
test
add
sahf
dec
hlt
xor
mov
int3
add
pop
inc
das
dec
xchg
adc
in
push
inc
cmpsb
loopne
into
enter
in
sub
inc
out
push
add
es
lea
jl
gs
pop
test
pop
mov
push
cmp
das
sarb
insl
mov
mov
fistpll
push
clc
popf
andl
loopne
mov
popf
cli
and
sbb
lcall
lahf
sub
mov
movsl
jg
inc
xchg
xchg
orl
nop
int
fsub
lahf
xlat
insb
jmp
vmovsd
add
gs
xchg
jp
push
sub
sbbl
push
jo
sbb
mov
push
ja
sub
mov
mov
mov
xchg
icebp
pop
push
repnz
mov
jae
test
das
sti
pop
dec
jl
push
loopne
add
jmp
in
mov
mov
and
jbe
inc
xor
inc
lar
cltd
movsl
out
fs
std
mov
sbb
and
andb
mov
stos
mov
push
cli
push
adc
mov
xor
push
adc
push
stos
notl
mov
insb
add
adc
and
jo
xchg
nop
pop
sbb
bound
lcall
cmp
test
jl
out
dec
inc
sub
and
pushf
sbb
ret
add
jl
shrl
movsl
jb
cmp
jmp
cmp
cmc
jbe
fdiv
ss
je
ljmp
and
shll
mov
jp
jl
rcr
int
pop
lock
push
xor
jb
push
aam
push
loope
inc
in
clc
pop
jg
sub
cli
pushf
push
xchg
outsb
pop
xor
decl
clc
clc
cmp
jb
cmp
jl
outsb
inc
faddl
bnd
aaa
sub
push
out
add
rcrl
sbb
nop
lods
jo
cmpb
shrl
push
mov
mov
push
add
daa
fwait
mov
shll
sub
jae
inc
mov
and
subb
jo
mov
pop
pusha
incl
adc
cmovo
xchg
pop
lret
out
ret
sbb
es
jo
sub
xor
imul
int
and
xorb
ror
lock
das
loop
pusha
dec
fisttpl
push
out
lds
or
push
and
jl
push
push
jg
cmc
stc
add
jns
xor
inc
jecxz
and
pop
stos
loope
stc
cmc
sub
sub
sahf
out
sub
ljmp
xor
imul
mov
add
ja
mov
js
sbb
cwtl
and
adc
getsec
dec
mov
or
add
pop
cwtl
jbe
add
xor
hlt
cmp
mov
jmp
fcoms
stc
ret
cltd
or
adc
test
mov
push
cmp
vaddss
sbb
jmp
inc
les
sub
andb
lcall
dec
pop
and
mov
loopne
cmp
shlb
aaa
movsb
jp
shlb
mov
jle
jle
in
jno
xchg
add
and
jmp
dec
lcall
xor
mov
sbb
out
imul
sbbl
arpl
or
inc
add
enter
sbb
lret
mov
mov
rol
rcrl
and
clc
push
adc
nop
lock
aas
push
ja
mov
xchg
jmp
sub
pushl
add
dec
cltd
sub
mov
repz
fsubrl
test
clc
addl
adc
call
hlt
jbe
and
cmp
lea
mov
sahf
add
mov
popf
sbbl
pop
in
mov
out
inc
test
data16
js
pop
push
shll
test
pop
cli
pop
les
or
xchg
das
sahf
and
inc
lahf
push
lahf
ja
push
cmpsb
dec
lock
pop
orb
addl
dec
mov
mov
push
dec
inc
pop
popf
fwait
ret
adc
push
or
xor
push
incl
fiaddl
sahf
add
pushl
cli
sti
and
sub
sbbb
out
add
das
addl
push
push
lods
fwait
lods
add
push
nop
push
mov
mov
xchg
gs
add
mov
xchg
imul
ljmp
cmp
data16
pop
cmpsb
sub
aam
out
jp
jl
pop
and
and
out
adc
pop
fldcw
push
mov
dec
and
push
je
push
or
andb
ss
insl
xchg
out
cmp
and
jg
sbb
xchg
mov
sbb
mov
pop
clc
or
clc
testb
sub
add
dec
mov
clc
aam
and
add
cld
cmpsb
mov
push
imul
popf
inc
cmpsl
jge
jge
out
bound
es
and
inc
sti
pop
adc
pusha
inc
add
and
jno
popf
or
sbb
jmp
outsl
mov
nop
inc
xlat
fs
mov
popa
cltd
aas
cmpsl
lcall
mov
sub
idiv
bndldx
sub
mov
andl
pop
mov
call
fcomip
btc
push
in
push
lret
rclb
das
pop
shl
out
call
add
and
test
xchg
mov
adc
loope
mov
lock
jo
lret
push
lea
stc
or
aam
add
ret
pop
cmp
cltd
xlat
push
ret
lea
loopne
mov
or
dec
mov
loopne
inc
movaps
jns
mov
dec
fdivrs
adc
jns
inc
xlat
adc
test
inc
xor
dec
pop
sahf
push
adc
inc
cld
add
inc
add
jae
inc
xor
xor
int3
xor
cmp
xor
add
ret
cld
lcall
or
pushf
jns
mov
xchg
mov
push
fdivs
xor
mov
xchg
xlat
mov
popa
cld
roll
subb
inc
adc
shrl
dec
sti
je
lock
imul
add
pushf
incl
movsl
test
pop
out
int
cld
cli
test
inc
lahf
pusha
mov
jle
sar
mov
dec
pop
mov
xor
mov
mov
cld
mov
inc
xor
xchg
ljmp
sahf
ret
or
lods
repnz
shrl
sar
mov
cmc
test
xor
mov
sbb
std
cmp
pop
pop
out
sub
aaa
sahf
cltd
cmp
dec
mov
mov
je
ret
jnp
ss
rorb
pop
js
mov
mov
adc
test
jbe
cmpsb
mov
and
fcomps
aas
mov
mov
js
adcb
mov
push
outsl
sub
andl
imul
xlat
ret
jb
jnp
hlt
mov
or
jg
mov
shll
sahf
pushl
lcall
js
lds
lea
cmpsl
sbb
mov
mov
or
cmp
pop
push
ljmp
dec
push
mov
les
pop
aam
add
jle
jg
push
mov
call
mov
push
jmp
shrl
inc
sahf
imul
xor
xor
clc
sbb
push
jg
or
sbb
popa
aam
mov
pop
mov
inc
fiaddl
sahf
inc
add
cli
adc
or
ja
fcmovbe
cmc
sub
nop
data16
ja
jl
jbe
ret
movsl
push
xchg
clc
mov
push
jo
insl
inc
pop
loop
loope
loopne
rcrb
cmpsb
outsb
jle
xchg
sbb
cmp
mov
shr
push
iret
dec
fsubl
lods
jl
cmp
lea
dec
ds
sbb
shll
and
adc
mov
sbb
jmp
adcb
push
push
add
pop
cmp
out
ret
clc
orl
cmp
adc
cld
push
hlt
sub
adc
cmp
cmpsb
in
add
cmpsl
sub
inc
sbb
lock
repz
xchg
inc
xchg
js
add
add
jg
outsl
lock
sub
mov
mov
mov
cmpsl
call
loop
fwait
daa
adcb
xor
cs
ret
outsl
cld
push
imul
test
pop
adc
popa
mov
mov
cmp
pop
out
inc
cmpsb
sar
loop
and
outsb
and
pushf
out
nop
push
outsl
dec
roll
sub
sarl
sbb
sub
mov
inc
push
lea
ja
daa
xor
add
loopne
mov
ja
das
sbb
mov
nop
adc
cld
sahf
ret
push
pop
clc
inc
cli
rorb
popf
loope
cwtl
mov
xchg
mov
jnp
lcall
fcmovnb
or
cmpsb
outsl
lea
js
pop
stos
loopne
dec
cmc
and
scas
test
jb
mov
movb
add
ret
cmp
dec
add
add
insl
mov
cmp
inc
in
imul
testb
add
jle
js
sbb
cs
push
pushl
pushl
iret
mov
xchg
push
loop
jo
loop
fisubrl
les
ds
cwtl
sub
mov
pop
and
fldl
out
push
inc
add
fldt
push
cmpps
out
scas
loopne
jno
adc
or
or
xchg
xor
in
push
mov
fidivl
dec
push
adc
adc
clc
outsb
decl
ljmp
add
or
mov
push
jge
cmpsl
popf
sub
js
aas
popf
andb
push
or
xchg
sub
push
xor
xorl
push
adc
and
dec
sub
push
and
jnp
cmp
xchg
rclb
push
dec
mov
mov
pusha
mov
in
xchg
scas
jle
cltd
sub
mov
bound
xchg
and
pop
ss
movsb
sbb
faddl
lea
cmp
adc
daa
shr
inc
sub
xlat
push
incl
movsl
mov
xor
cmpsl
or
push
push
cli
sub
insb
sbb
xlat
sbb
xchg
inc
add
xchg
pop
es
dec
sub
sbb
loopne
inc
dec
stos
ja
dec
fsubrl
pop
aam
add
cwtl
lcall
mov
aam
mov
daa
push
dec
ljmp
dec
loopne
xor
dec
adc
push
and
jmp
inc
adc
adcl
imul
sbb
es
and
mov
add
jge
mov
lock
inc
jg
lcall
mov
xor
testl
xchg
lods
pushf
fistpll
lea
inc
loopne
shlb
xor
mov
inc
ret
fdivr
and
mov
es
adc
pop
and
shlb
fs
pop
push
cmpsb
int
clc
xchg
les
call
xlat
push
mov
pushf
loop
leave
mov
pop
push
sbb
icebp
dec
test
test
cmc
dec
cmp
fdivrp
xchg
jne
jmp
sub
sbb
out
jo
and
push
gs
xchg
sahf
mov
insl
inc
inc
mov
addl
and
daa
inc
and
xchg
cmc
push
out
aad
jo
jb
or
or
movsl
ret
xorb
shl
mov
faddp
daa
adc
mov
jp
lcall
insb
mov
and
std
sub
sbb
pop
xor
enter
cld
or
aas
xor
lret
push
adc
jl
sbb
adcl
loop
adc
shlb
jo
pusha
mov
jmp
orl
cli
cli
nop
enter
js
cmp
ljmp
test
push
push
inc
push
dec
mov
mov
adc
ficompl
push
cmp
cltd
mov
and
or
add
lock
movsl
add
push
dec
fdivs
out
xchg
aad
loop
les
in
repz
mov
mov
pop
or
scas
dec
xchg
and
les
loope
inc
mov
ficoms
cli
and
inc
aad
dec
mov
add
mov
mov
movsb
and
jl
lahf
xchg
dec
js
inc
xor
hlt
loop
cmpsl
pop
in
iret
aas
aam
push
clc
neg
add
loop
icebp
or
ret
std
in
jecxz
cmc
sarb
jecxz
aas
or
imul
jp
adc
testl
cld
jmp
xor
ljmp
cli
add
scas
test
cmpl
sub
ds
iret
or
or
mov
cmc
rorl
inc
arpl
sbb
sub
or
stos
lods
loope
jecxz
inc
push
or
sub
ret
push
stos
ret
subl
test
add
les
sub
xor
int3
arpl
mov
popa
jmp
aam
adc
add
xchg
inc
mov
testb
mov
sbb
jae
push
incl
outsb
jg
or
shr
aam
fscale
and
sti
mov
pop
aam
lret
sbb
out
cmpsb
adc
in
lods
push
bound
cmp
in
ljmp
movl
or
andl
mov
adc
or
negl
in
fs
add
divl
je
aaa
jno
rcrb
dec
and
shl
decb
xor
pop
dec
shlw
push
cmp
aas
mov
mov
dec
loop
ffreep
push
adc
or
push
mov
cli
push
push
adc
aad
dec
jg
jp
xchg
mov
mov
test
push
add
xchg
pop
mov
adc
add
cmp
jg
cmc
or
cli
and
fsubrl
out
sub
xchg
mov
sbb
sbb
dec
mov
rcrl
push
cmp
and
inc
dec
xchg
arpl
mov
pop
or
leave
rorl
dec
and
gs
repnz
ja
add
inc
popa
cld
push
push
and
shrl
mov
dec
xor
xchg
xor
sbb
pop
loopne
pop
push
and
sub
jmp
jo
mov
adc
subl
mov
bnd
adc
cs
pop
and
rep
outsb
sbb
js
sbb
call
add
mov
outsb
bound
in
lods
add
test
test
jno
push
inc
loope
dec
and
addb
fdivp
xchg
ss
pop
push
xor
sahf
dec
sbb
negb
cwtl
pop
and
mov
repnz
imul
pushf
push
adc
sub
int3
ds
or
push
cmpl
dec
cli
lea
popf
and
mov
mov
and
call
and
cs
incb
outsl
jnp
mov
mov
or
xchg
or
mov
cli
xchg
test
fildl
or
outsb
xchg
sub
mov
cmpsl
xchg
aas
ja
push
fiaddl
push
repz
jnp
xor
shrb
cmpb
xor
add
lret
add
jb
inc
mov
cmc
xchg
jle
xchg
divb
push
int
mov
ja
pop
sbb
lret
add
out
push
push
adc
jp
fsubrl
dec
test
dec
and
rcrw
add
pop
loopne
cmc
fs
das
cmp
mov
cmp
test
xchg
cmp
or
xor
mov
dec
inc
rclb
test
inc
push
loopne
cmp
in
fmull
cmp
js
sbb
xchg
lds
jmp
jns
cltd
insb
xor
popf
jb
sbb
mov
pushf
or
enter
or
xor
js
ljmp
fildl
pusha
or
jnp
fcmovbe
adc
icebp
push
add
ss
iret
mov
add
jg
or
aas
stos
xor
jo
sbb
jmp
mov
loop
cmpsb
scas
sbbl
cwtl
inc
icebp
rolb
push
rolb
jle
call
out
jnp
pop
loope
outsb
dec
dec
mov
icebp
inc
xor
out
movsl
mov
fstps
push
loopne
dec
enter
dec
mov
ret
mov
stos
lea
roll
mov
cs
adc
pop
insl
xchg
dec
arpl
subl
popa
mov
pop
mov
dec
xchg
mov
addb
or
push
xchg
jp
pop
fcmovnbe
mov
push
std
subb
rcll
adc
out
jae
rclb
cmc
rcl
mov
xor
mov
mov
enter
imul
sbb
dec
loope
cmpsb
mov
dec
pusha
mov
sar
pop
sub
es
scas
mov
and
adc
movsl
mov
xor
lcall
sbb
rcll
pop
movq
ret
ret
add
in
push
inc
cmp
dec
shlb
xor
push
adc
mov
addl
lcall
xor
mov
addr16
pop
das
push
sbb
xchg
dec
in
rcl
mov
andl
frstor
xchg
ret
lahf
mov
enter
js
sbb
pop
pop
pop
jo
movsb
add
outsl
jo
in
add
jo
inc
lcall
popa
adc
push
addb
scas
push
mov
movsb
adc
ret
inc
push
shlb
insl
add
inc
test
dec
mov
int
ljmp
mov
inc
jecxz
mov
rolb
adc
cli
sub
sub
in
or
andb
mov
mov
xchg
push
cmp
adc
mov
and
mov
das
sub
addl
arpl
ret
xchg
sub
fldcw
enter
lds
ss
push
rorb
mov
dec
pop
test
sub
fbld
push
or
inc
mov
stos
cmp
pop
fiaddl
jo
jle
pop
mov
xorb
sub
rolb
jo
popa
add
xchg
int
cmpsb
shrb
or
mov
push
pop
lea
in
xchg
pop
sbb
xchg
inc
sarb
cmc
mov
fdivr
sub
scas
add
orb
orl
mov
lds
dec
movsb
out
mov
movsl
in
jle
cli
dec
cmp
mov
sub
lcall
push
push
bound
loopne
fwait
lea
mov
jb
xchg
loope
dec
pop
inc
jno
sub
pop
mov
jo
fstpt
add
inc
inc
mov
pop
or
mov
addr16
notb
push
mov
xor
sarb
push
loopne
xchg
stos
aam
gs
sbb
xchg
mov
sub
insl
in
and
popf
or
stos
lcall
dec
pop
lods
lret
or
sub
dec
mov
fadd
dec
mov
sub
outsl
je
ror
enter
jbe
dec
pushf
mov
cmp
jp
sub
testb
std
xchg
lcall
outsb
adc
mov
testl
ret
mov
push
test
movsb
adc
add
data16
je
clc
aam
jbe
xor
rcll
mov
insb
sub
lcall
dec
enter
call
push
push
loopne
push
std
stos
xchg
adc
push
aam
pop
into
mov
arpl
push
jb
mov
adc
or
flds
push
or
jns
fs
jg
inc
and
scas
push
lret
mov
leave
sbb
test
push
xor
in
mov
mov
adc
sub
and
xlat
push
icebp
xor
nop
pusha
mov
hlt
popa
pusha
cmc
or
push
push
sbb
dec
mov
loop
push
out
pusha
adcb
sub
test
mov
les
mov
xor
mov
aaa
loopne
cld
mov
es
enter
test
pop
or
sub
lods
shrb
inc
filds
add
insb
popf
push
push
xchg
sbb
xor
stc
push
hlt
push
pop
out
jno
mov
adc
addr16
inc
xor
or
mov
mov
incb
filds
adc
push
in
cli
xlat
xchg
out
xchg
mov
adc
aaa
jl
lahf
and
bound
xor
das
pop
filds
adc
sub
fdivrl
mov
lret
dec
mov
sub
scas
cmpsl
mov
sbbb
sub
and
push
clc
mov
or
es
scas
ja
jg
adc
hlt
pushf
pop
xor
mov
pop
js
scas
mov
xor
js
add
add
loope
sub
mov
xchg
xchg
stc
inc
or
jb
std
jge
mov
pop
gs
cmp
dec
mov
enter
xchg
push
pop
hlt
mov
mov
pop
es
adc
push
out
gs
push
lods
movsl
mov
das
push
loopne
lahf
push
cli
ret
push
movsb
bndstx
cmpsb
mov
push
ficompl
lret
mov
add
jge
icebp
xlat
mov
or
adc
sbb
inc
xchg
data16
lds
jno
gs
cmpsl
jl
pop
hlt
inc
je
loope
push
cmp
in
imul
ret
icebp
aam
pop
movsb
in
shl
pop
jg
test
dec
clc
or
dec
and
mov
dec
dec
jb
xchg
incl
pop
mov
test
cld
xchg
add
xor
pop
call
jg
cmp
inc
sbb
mov
iret
inc
add
xor
les
aaa
subb
sahf
mov
adc
mov
lds
rolb
subb
push
rcll
mov
out
push
and
fists
scas
mov
shl
sub
cmc
pop
push
negb
add
movsl
dec
jmp
pop
jle
jg
adc
jmp
cmp
call
xchg
xor
adcl
loope
mov
mov
test
int3
fbstp
clc
daa
or
jno
add
lea
inc
cld
addr16
push
pop
pop
adcl
and
notl
sbb
or
fcoms
pop
pushf
outsl
mov
mov
inc
jecxz
stos
xor
cmp
push
mov
movsb
jbe
pop
pop
sub
dec
cld
push
sbb
add
push
scas
into
test
adc
adc
rorb
add
call
cs
mov
or
adc
add
aaa
out
push
pop
sub
mov
push
pop
jecxz
pop
push
pop
mov
dec
pushf
ret
mov
pop
pop
rcrl
mov
and
or
aam
std
mov
push
shll
or
test
mov
arpl
add
add
add
sub
fiaddl
cld
mov
out
and
ss
cmp
mov
mov
add
xchg
add
lcall
call
popf
add
cmp
mov
loop
jle
sbb
imulb
ret
jno
push
jne
pop
out
inc
sub
push
outsl
lret
or
pop
pop
popa
aas
cld
int3
mov
push
sub
shrl
pop
mov
mov
call
inc
mov
fs
out
adc
outsb
subl
sub
jl
push
xor
je
inc
sub
lods
lcall
dec
or
ror
das
mov
mov
unpckhps
jg
adc
inc
dec
push
scas
sarl
fs
pop
inc
add
data16
cs
lret
sahf
mov
cld
xchg
xor
push
inc
push
outsl
mov
pop
aam
push
sub
sti
inc
mov
das
incb
mov
roll
dec
xchg
cld
dec
movsb
xchg
inc
outsl
pop
insl
sub
mov
sbb
pop
das
xchg
jmp
movsb
cmpl
les
adc
xlat
addl
push
mov
sub
icebp
mov
movsb
int
call
jnp
xor
nop
ja
insl
pop
and
push
push
test
xor
ja
or
loopne
pushf
cmpsb
dec
pop
cmc
movsl
nop
mov
jecxz
jp
icebp
inc
pop
pop
push
mov
out
aas
cli
pop
pop
dec
ljmp
inc
in
pop
xchg
icebp
dec
lahf
and
or
in
jl
ja
and
push
test
mov
mov
sbb
mov
cmpl
push
cmpsb
cmp
xchg
jg,pt
pop
jle
out
mov
push
xor
aad
mov
into
js
pop
cli
jbe
sbb
dec
pop
std
lock
xchg
test
or
mov
or
aas
fsub
decl
cli
orb
sub
sbb
cmp
inc
sti
repnz
add
xchg
sarl
out
test
and
andl
jnp
lock
daa
addb
daa
inc
pusha
push
call
rcrl
push
pop
pusha
ret
sub
sbb
sub
cld
fdivl
addl
or
xchg
pop
mov
incb
and
adc
ljmp
jmp
jnp
xchg
lods
cld
sbb
mov
inc
call
xor
sbb
add
or
cs
or
and
sahf
and
or
sbb
add
daa
subl
jle
push
jle
test
aad
xor
stos
ds
mov
mov
adc
inc
xor
jb
sub
ljmp
orb
and
jge
jne
xor
inc
inc
mov
stos
hlt
scas
in
inc
std
es
aas
push
or
lcall
mov
dec
sbb
add
and
into
adc
sub
daa
xor
sub
aad
inc
mov
hlt
jl
shlb
jns
push
lahf
or
mov
jle
adc
add
mov
movsl
jb
dec
testl
xor
jge
repnz
jnp
mov
xchg
rol
jg
loopne
lahf
push
js
clc
xchg
js
add
push
lcall
mov
ret
or
push
jae
add
mov
dec
mov
or
push
mov
aas
leave
jg
mov
loopne
fstp
and
mov
cmpb
lods
push
xor
leave
addr16
repnz
mov
ja
push
sbbb
sbb
xchg
addb
jne
xor
gs
or
dec
mov
inc
push
cmc
loope
gs
inc
mov
adc
jl
mov
outsb
ret
push
insl
dec
jl
sti
inc
call
lret
jl
mov
and
adc
aaa
sbb
cs
jne
xor
scas
loop
sbb
rorb
jbe
jns
mov
aad
mov
add
fwait
push
fwait
add
pop
outsl
xor
insl
loopne
and
jns
outsl
ljmp
inc
add
insl
bound
movsl
xor
xlat
push
pusha
xchg
mov
xor
pop
loop
or
jl
xchg
inc
ret
fdivp
sbbb
lock
les
ljmp
adc
pop
inc
mov
es
mov
scas
imul
jle
mov
sub
mov
sbb
mov
mov
testb
mov
xchg
or
gs
repnz
lock
adc
push
xchg
mov
icebp
sbb
lahf
add
leave
cmp
push
xor
fstps
mov
aas
push
orl
push
cmp
gs
test
jecxz
jge
subb
lods
or
and
pop
aam
sub
sub
nop
add
xchg
jecxz
std
aas
clc
mov
outsb
sub
push
inc
xor
enter
or
int3
or
outsl
daa
push
mov
mov
rcr
sahf
adc
shlb
jo
xor
xchg
mov
mov
outsb
or
outsb
sub
mov
sbb
incl
cmp
out
xchg
add
push
or
pop
or
add
adc
xchg
inc
fildll
gs
cwtl
mov
cmp
jmp
loopne
push
movsb
out
loop
ja
inc
scas
inc
xor
add
aaa
outsb
icebp
inc
out
fildll
or
std
jg
in
xlat
insb
jp
dec
int
test
movsl
out
test
mov
adc
add
test
or
xchg
push
pop
jbe
ljmp
scas
clc
fs
lcall
int3
hlt
pop
dec
call
xchg
sahf
stc
adc
repz
fs
repz
hlt
lret
cld
leave
cmp
push
xchg
jnp
lahf
pop
nop
mov
ret
push
cli
mov
dec
jo
cli
mov
aaa
or
mov
sbb
rcrb
aaa
sub
mov
push
decl
jcxz
xchg
imul
pop
add
adc
daa
sbb
xchg
xor
addr16
sub
ljmp
clc
add
js
out
in
sub
xor
outsb
js
xor
jg
arpl
fiaddl
xchg
dec
dec
inc
add
pop
clc
iret
mov
out
enter
pop
jge
in
roll
outsl
sub
sahf
pusha
push
hlt
insl
inc
add
loope
mov
and
or
inc
adc
adc
insl
sub
mov
jbe
dec
ret
sbb
jo
jmp
scas
aad
ds
imul
scas
jo
in
lret
lcall
incl
sbb
pop
repz
mov
mov
xor
add
lods
popa
testl
addl
lock
inc
shlb
es
sbb
and
repz
call
ret
jecxz
daa
dec
inc
test
iret
incl
aas
xchg
add
popa
out
pop
cmp
push
bswap
lret
xor
ret
mov
dec
cli
movb
add
popa
cmpsb
lods
xchg
inc
sarl
jg
cld
lock
and
out
inc
adc
cmpl
pop
test
fiadds
loope
xchg
adc
mov
sbb
and
out
cmc
mov
push
add
jle
jg
pop
push
sub
mov
out
mov
lods
outsl
mov
adc
jb
daa
jecxz
or
sbb
or
lcall
in
sbb
xor
xchg
jns
sub
loope
and
pop
or
loop
mov
mov
or
pop
xchg
cld
mov
addr16
sbb
fwait
add
in
stc
jns
sbbb
push
inc
pop
cwtl
adc
loopne
nop
add
xorb
fs
pop
jmp
lret
cmc
icebp
pop
jae
loope
call
sub
mov
add
stos
cmpsb
pop
aas
cmp
in
push
push
and
rcll
mov
inc
jg
jge
xor
add
xor
mov
pop
mov
xchg
lock
lods
jg
inc
aam
mov
insl
push
insl
and
pusha
imul
movsl
in
cmp
gs
mov
lcall
dec
lds
leave
pop
and
adc
das
cmpb
pop
cmp
push
sar
in
and
in
loopne
add
sbb
in
dec
sub
dec
decl
sbb
movb
repnz
dec
dec
ret
cmpb
jle
adc
call
pusha
add
loope
gs
stos
rcr
push
cli
add
add
hlt
ret
dec
iret
ret
aad
xchg
aam
in
insb
sbb
adc
imul
es
hlt
aam
xchg
outsl
sbb
adc
daa
push
andl
imul
or
add
icebp
test
movsl
xor
inc
cmpl
adc
icebp
insl
mov
rolb
dec
test
add
mov
jo
mov
push
push
enter
test
fcomps
xchg
imul
inc
mov
sub
cmp
adc
das
adc
sahf
cmpsl
ljmp
cwtl
dec
lcall
fadds
xor
mov
pop
and
mov
mov
add
cli
lock
dec
ret
shr
sbb
fsubrs
orb
cmpsl
xchg
or
mov
cmpsl
pop
das
add
std
xchg
out
push
mov
cmc
jg
cmp
mov
and
or
sahf
andb
xchg
aaa
add
nop
xchg
jno
loop
xchg
mov
xchg
jle
xchg
ljmp
insb
imul
dec
dec
sbb
mov
adc
pop
lds
ljmp
mov
loop
aaa
inc
sbb
jo
into
pushf
popa
sbb
push
stc
cmp
rorb
inc
jg
dec
push
aad
push
mov
push
leave
dec
push
ljmp
sbb
mov
jo
xor
es
push
les
roll
scas
adc
jge
cli
xor
jmp
repnz
pop
loopne
sbb
push
push
xor
rcrb
test
sub
adc
add
pop
in
inc
cmp
test
or
cmp
lea
rcr
popf
cltd
insb
adc
inc
in
cmp
adc
daa
jl
xor
iret
adc
andl
adc
mov
push
ss
inc
adc
vmaxsd
sbb
xchg
or
mov
and
xor
cmp
mov
pop
mov
and
callw
in
jbe
or
test
jge
pusha
outsl
sti
mov
and
lret
fcmovnb
andl
add
mov
push
adc
cs
ret
dec
xor
sub
dec
int
enter
mov
dec
test
mov
cltd
lods
inc
ret
cmp
add
les
and
test
shrl
outsl
or
inc
rcrb
ret
cwtl
mov
and
loop
or
shll
ret
loope
jecxz
andl
js
mov
and
or
lea
inc
fsts
xchg
shrb
iret
lods
icebp
and
mov
testl
push
sarb
ds
jl
xchg
data16
jl
jg
or
lds
xor
cs
scas
cmp
into
and
enter
xchg
and
jae
and
mov
mov
sbb
lock
mov
cli
sub
cmp
repnz
mov
sbbl
jecxz
sub
fbld
or
jp
leave
insb
sub
jg
xchg
inc
test
jg
mov
iret
data16
rol
and
in
push
aad
repz
push
push
dec
mov
ja
adc
cmpl
fbld
inc
xor
les
inc
and
jbe
mov
mov
out
outsb
add
sub
xor
mov
mov
cmp
fwait
sub
bound
push
scas
out
inc
xchg
and
sbb
inc
cmp
clc
mov
dec
push
iret
dec
aad
lods
daa
cltd
or
sbbb
mov
push
cmc
sbb
xchg
out
sbb
fildl
adc
sbb
out
sar
mov
lcall
aam
pop
add
js
push
sub
mov
and
xor
js
fcomps
daa
mov
pop
scas
sub
add
or
hlt
sub
call
mov
fistpll
mov
sub
mov
jl
inc
mov
adc
add
jbe
push
mov
je
scas
pop
push
dec
and
xchg
jle
mov
lea
pushf
mov
gs
add
cmp
dec
test
xor
xchg
pop
sub
add
pop
inc
jnp
add
pop
push
mov
or
mov
aam
pop
xlat
mov
cmp
adc
in
mov
mov
scas
dec
int3
pop
movsl
into
cmp
rorl
adc
pusha
out
pop
adc
dec
or
mov
add
in
push
jl
and
jne
add
add
fimuls
jnp
mov
mov
xchg
sub
loope
mov
and
add
xchg
movb
dec
test
adc
repnz
pop
fcoms
insb
pop
inc
fs
and
popa
xchg
popa
jp
cmp
gs
xorb
mov
daa
push
or
push
popa
js
add
inc
stos
dec
in
add
insl
jl
cwtl
sub
jbe
into
jno
dec
mov
out
std
mov
popa
lods
mov
mov
ret
rcrb
cmpsl
xchg
lea
fnstcw
js
test
popa
sub
aaa
orb
rcrl
mov
cmp
push
jbe
adc
xchg
mov
fstpt
jns
ss
sbb
sub
sbb
mov
std
push
fisttps
arpl
and
mov
insb
jnp
cs
sahf
mov
cmp
mov
mov
cltd
dec
loop
sub
add
imul
ds
push
jmp
sbb
mov
jb
test
pop
lahf
or
or
enter
ds
xchg
adcl
je
mov
push
pop
mov
dec
dec
push
sub
dec
in
sbb
insb
cmp
ret
js
lahf
int3
add
movsl
push
ud2
inc
xlat
push
xchg
jmp
nop
adc
adc
sahf
mov
insl
sub
or
xchg
js
jmp
popf
adc
xchg
xor
push
cmpsb
pop
or
fldcw
adc
testl
daa
mov
lods
imul
push
stc
roll
das
dec
mov
loop
dec
sbb
dec
mov
xor
lret
ds
sub
jno
cwtl
adcl
mov
sub
aas
mov
stos
test
or
mov
jns
push
pop
lret
repz
mov
mov
andl
jne
fdivp
sub
dec
xchg
repnz
into
andb
sub
mov
mov
sub
mov
mov
outsl
stos
lock
add
adc
add
cmp
pop
lods
sbb
mov
nop
adc
loop
pop
adc
loope
cmpsb
and
cmp
bnd
add
push
lret
lds
sbb
add
cmpsl
lods
ds
mov
jae
ss
ret
mov
or
mov
xorb
fdiv
subl
pushf
lods
je
xor
je
popl
mov
mov
mov
or
pushf
loop
and
add
mov
enter
js
arpl
call
nopl
mov
dec
clc
xchg
jbe
xchg
adc
iret
cmc
scas
scas
insb
mov
dec
aaa
pop
das
data16
popf
mov
arpl
dec
divl
clc
push
stos
enter
inc
adc
xchg
das
xchg
inc
repnz
mov
shll
add
mov
adc
jle
test
or
cmp
outsb
aam
nop
aaa
adc
pop
sbb
cmp
sub
add
jp
ffree
adc
fbstp
in
imul
xchg
xor
movsl
mov
sub
scas
inc
test
jg
xchg
mov
and
les
imul
or
inc
movsl
orl
subb
jle
enter
ret
adc
sbb
adc
mov
mov
inc
pop
mov
or
outsl
push
roll
mov
push
scas
repz
cs
dec
lods
rcl
inc
adc
sbb
stc
xchg
xchg
out
pmulhuw
ret
fiadds
shrl
stos
push
jns
call
mov
adc
or
adc
adc
je
pop
add
and
dec
add
dec
add
jge
aas
jl
fucomi
sbb
push
pop
pop
loope
das
hlt
pop
mov
add
fadd
lret
push
loop
test
cmpsl
test
cmp
xchg
sub
or
jo
or
insl
xorl
xor
sub
int
jge
sbb
sbb
adc
mov
repnz
sub
mov
adc
dec
lret
mov
imul
jg
jg
or
roll
sub
mov
jbe
cmp
stos
or
filds
in
arpl
mov
or
enter
or
lods
push
pop
jae
je
sbb
mov
in
cmp
das
pop
dec
xchg
hlt
push
or
cmp
sbb
inc
xchg
ja
sahf
inc
lcall
pop
pop
mov
clc
mov
in
or
jne
pop
cltd
shlb
push
inc
jge
lea
mov
sbb
ds
xchg
xor
dec
inc
xchg
or
mov
sub
lds
pop
dec
roll
and
insl
leave
shr
mov
rcll
lock
vmovss
inc
cmpsl
inc
ds
sar
push
lock
cmpl
icebp
pushl
or
cmp
leave
or
push
popa
pop
dec
repz
mov
mov
cmpsl
data16
ret
sahf
icebp
mov
dec
mov
push
jl
ret
imul
rcrl
cmpsb
push
xchg
push
jnp
xchg
sub
jle
pop
add
je
sub
xchg
arpl
jno
sahf
xor
cmpsl
pop
or
mov
lret
jno
incl
dec
hlt
sub
rcr
faddp
adc
mov
cld
mov
jle
pop
icebp
inc
add
push
adc
std
push
cmpsl
pushf
pop
cmp
xor
ljmp
push
lods
jo
mov
adc
jg
into
jecxz
std
sub
call
in
push
sub
fnstenv
jno
clc
jg
inc
pop
aam
dec
cltd
inc
jbe
push
cmp
xchg
stos
aam
loopne
mov
sub
dec
aas
push
mov
mov
cwtl
dec
cmp
mov
es
push
pop
addr16
sbb
fbld
call
icebp
sbb
aaa
in
cltd
fbld
adc
add
add
fwait
push
jae
orl
mov
lods
and
std
pop
mov
inc
cld
pop
js
dec
rcrb
jmp
sub
or
dec
bound
mov
xor
imul
andb
mov
aam
mov
jg
mov
inc
insl
shlb
xchg
add
shll
loop
pusha
or
pop
mov
mov
dec
and
cmc
jno
mov
jmp
sarl
mov
ret
loopne
mov
outsb
scas
jle
test
and
jbe
mov
and
popf
mov
test
xor
cmp
xor
jo
js
cwtl
es
sub
jmp
cmp
mov
js
sub
adc
pop
mov
and
leave
fadds
sbb
cmpb
xchg
pushl
stos
jnp
dec
push
sti
popa
popa
inc
jbe
adc
icebp
js
imul
mov
sbb
jecxz
or
jle
adc
xor
xor
mov
mov
lea
sub
enter
jg
mov
mov
xor
jne
test
push
add
jle
fadds
adc
hlt
lahf
push
bndstx
mov
call
or
xor
subb
in
ret
xchg
jg
push
inc
dec
lea
push
push
clc
cli
push
jb
push
cvtps2pd
adc
scas
xor
fcoml
es
or
test
into
inc
std
jg
sti
push
adc
adc
add
add
cmp
mov
mov
dec
out
clc
adc
mov
lahf
mov
mov
movsl
pusha
data16
inc
inc
jge
loopne
outsl
sub
das
xchg
mov
cmc
jp
dec
stos
dec
pop
or
sub
shrl
fwait
pushf
mov
das
out
mov
imul
pop
dec
das
adc
fcmovbe
shrl
repnz
inc
ret
mov
xchg
dec
ds
sub
push
push
pop
push
gs
icebp
sbb
sbb
int3
bound
je
jo
dec
lcall
or
gs
pop
lea
data16
push
fiadds
jg
scas
push
mov
jl
jle
sbb
lea
subl
jg
cmp
inc
les
out
inc
mov
out
jbe
and
mov
loopne
fnstenv
pop
clc
pop
leave
inc
jle
push
add
pop
or
rcll
dec
jns
lock
adc
cmp
mov
lods
xchg
je
add
mov
and
mov
cmp
xchg
add
sti
and
wrmsr
inc
sbbl
shrl
into
mov
adc
or
or
inc
add
add
and
cmp
and
push
push
add
pop
iret
clc
add
jns
sbb
je
push
inc
ret
inc
xchg
mov
and
aas
test
mov
lock
jg
mov
pop
jg
push
and
pop
pop
mov
or
mov
inc
sub
mov
sbb
hlt
das
es
pop
add
and
or
sbb
cli
jae
xor
sbb
jno
jle
jg
push
mov
cmp
xchg
push
cmp
mov
push
jl
adc
shrl
das
insb
mov
jo
inc
rorb
sub
or
cwtl
shlb
dec
push
fadds
ss
mov
stos
int3
add
inc
dec
sub
cli
dec
clc
add
xor
divb
mov
inc
sbb
or
sbb
mov
or
mov
lds
cmp
stc
cmp
xchg
inc
in
mov
rolb
or
pop
adc
daa
movsb
outsl
mov
and
or
cmpsb
ljmp
inc
mov
push
sbb
dec
xchg
and
dec
pop
loope
iret
and
adc
fistps
daa
je
push
sub
clc
cmc
nop
sub
nop
cpuid
call
jg
lcall
push
pop
xchg
mov
mov
pop
jle
and
mov
adc
dec
fildll
movsl
dec
cltd
xchg
mov
jl
or
insb
ss
mov
out
fs
pushf
icebp
mov
loope
sbb
or
mov
mov
test
jbe
icebp
push
or
popa
jbe
lds
dec
mov
mov
sbb
fisttpll
pcmpeqd
rclb
mov
sbb
xor
js
lea
je
or
inc
cs
nop
dec
les
fsubrl
xchg
add
sbb
cmp
incb
jge
dec
cld
dec
negl
insb
or
ljmp
mov
add
icebp
lea
out
adcl
sub
lock
or
shrb
push
cmpsl
cmc
aaa
shrl
mov
insb
mov
arpl
pop
fistps
jg
add
xor
test
push
xchg
fistps
test
or
push
jge
dec
xchg
add
pop
int
loopne
jnp
lahf
das
inc
aam
sub
and
add
filds
push
je
mov
xor
inc
movsb
mov
stos
aad
loopne
push
sub
mov
jae
addr16
inc
xor
lods
lock
fisubl
testb
lock
add
repz
cmp
add
and
jge
mov
dec
std
mov
das
mov
cmc
add
add
push
add
jge
iret
clc
adc
addb
sbb
cld
je
aad
mov
add
pusha
jo
xor
dec
std
xor
or
inc
clc
inc
push
dec
leave
mov
cmp
mov
ja
or
cs
hlt
mov
dec
mov
pop
jg
aaa
lock
and
add
sub
jg
sbb
xchg
mulb
popa
or
xchg
mov
fistpl
or
mov
adc
jle
lret
lods
aad
xchg
mov
sbb
test
mov
int
daa
std
mov
mov
mov
popf
testl
jl
frstor
lret
enter
pushf
push
std
jl
sbb
sbb
aaa
lcall
icebp
jmp
dec
aam
inc
adc
enter
fldcw
adc
adc
movb
mov
inc
imul
add
inc
xor
sub
and
out
jp,pt
pop
std
cmpsb
xchg
xchg
jecxz
test
inc
mov
repnz
adc
xor
repz
xor
enter
mov
stos
push
jge
sbb
pushf
mov
lret
add
inc
ret
rcrl
test
fcomip
mov
add
bound
push
add
in
sub
jle
push
das
test
pop
mov
ret
sub
pop
jecxz
notb
xchg
je
xor
push
push
mov
cmc
or
out
jo
adc
mov
test
pop
inc
gs
call
mov
inc
jle
mov
cmp
xor
mov
jo
xchg
call
imul
int
int
or
mov
cli
aaa
xor
xchg
addr16
pop
std
jae
xchg
repz
callw
fsub
mov
pop
cmp
dec
add
into
pop
push
in
add
sbb
mov
sub
testl
fdivl
add
push
inc
pop
cld
pop
ficompl
stc
push
lahf
arpl
fisttps
ret
or
aad
sbb
rorb
shll
jo
jl
enter
mov
xor
cmp
iret
mov
pop
jne
in
push
xchg
dec
cld
testl
and
dec
je
in
push
scas
cmp
enter
jo
pop
int3
mov
pop
pop
clc
rcrl
mov
scas
mov
cld
in
inc
sub
loope
inc
test
and
mov
xchg
aad
lret
jns
sbb
mov
push
fcmovu
jle
mov
scas
std
push
and
fwait
jl
adc
outsl
adc
mov
mov
movsb
xchg
cli
pusha
aas
sarl
add
mov
xchg
dec
loopne
subl
cmp
pop
mov
cli
movsb
mov
inc
jg
sub
and
jecxz
mov
clc
mov
mov
xchg
jmp
dec
pop
and
push
xor
jl
icebp
icebp
out
pop
aas
add
inc
push
aas
or
in
pop
loopne
push
int3
lock
testb
sub
mov
mov
dec
mov
vunpcklps
mov
insl
dec
pop
jp
xor
leave
cmp
inc
jbe
pop
push
cli
or
movsb
int3
mov
mov
add
push
xor
loop
and
sub
faddl
pop
in
adc
nop
pop
insl
and
push
fmull
xor
or
loop
dec
sub
lea
sbb
xchg
mov
jb
lea
mov
jl
sub
andb
shrb
cmpb
xchg
stos
out
fnstsw
enter
xchg
ss
add
add
ljmp
loop
inc
add
inc
ljmp
lcall
inc
and
bound
mov
pop
test
js
mov
pusha
clc
and
mov
insb
sbb
pop
add
adc
nop
sub
dec
xorl
push
or
outsl
ret
test
fildl
mov
adc
adc
jle
mov
mov
jge
adc
cmpb
push
loope
jl
clc
mov
adc
and
leave
pop
aas
lods
jnp
ja
popa
test
hlt
test
jo
sbb
pop
frstor
test
xor
jbe
mov
sbb
addl
and
sbb
pusha
or
icebp
push
popf
sbb
ror
dec
cmpb
loop
sub
dec
push
and
cmpsb
movsl
stc
scas
jb
lock
or
lods
fisttpl
and
cs
jecxz
das
into
mov
jp
cmp
cmp
je
ss
adc
pusha
mov
xor
mov
push
aam
std
fld
in
or
mov
inc
loope
out
out
pop
cli
and
mov
rorl
pusha
dec
jb
adc
ljmp
pop
mov
in
jle
or
dec
rcrb
fs
ds
xor
shl
movb
loop
fsubrl
sbb
ret
mov
rorb
sub
test
mov
out
push
cmp
fnsave
hlt
push
adc
jae
jge
fsubrp
push
fwait
pop
mov
push
lret
incl
das
or
push
orl
fcoml
fidivl
loopne
loopne
sub
or
int
iret
out
or
xchg
pop
insl
jnp
mov
inc
bound
jl
loopne
jo
mov
fwait
sti
cli
nop
jb
mov
je
pop
sbb
pushf
sub
aad
inc
mov
das
cmpl
shlb
insl
scas
mov
mov
loopne
add
or
cmpsb
pop
mov
loopne
mov
pop
mov
imul
popa
out
outsb
les
repz
sbb
fnstsw
xlat
repnz
mov
cmp
pop
inc
mov
mov
icebp
lods
lret
jge
jge
loop
push
inc
or
in
and
test
or
mov
insb
adc
rcrl
dec
xchg
dec
lock
les
adc
lods
in
movsb
ja
sub
dec
fsubs
adc
insb
push
out
adc
neg
sub
outsb
push
xchg
dec
loopne
mov
dec
scas
mov
adc
ljmp
aad
adc
pop
data16
or
fisttps
cmp
mov
test
push
aad
sbb
scas
sbb
pop
stos
test
out
ss
mov
imul
fdivl
les
lock
js
outsl
hlt
lods
cmp
adc
in
cmp
pushf
pushl
mov
adc
mov
lahf
sub
icebp
inc
and
xchg
xchg
pop
cmp
adcb
cmpsb
ja
sub
rorb
pop
jecxz
andb
sub
mov
imull
loopne
mov
cld
roll
push
incb
rcr
cmpsl
or
dec
adc
and
dec
mov
fsubl
cld
shlb
addb
das
ret
jne
sub
std
add
xchg
pop
push
pop
mov
xor
jbe
and
sbb
jnp
filds
jp
mov
dec
dec
add
ret
add
fs
mov
mov
mov
dec
or
test
mov
push
or
or
xchg
outsb
mov
jl
int3
and
mov
adc
lods
loop
mov
adc
enter
mov
test
xor
test
cwtl
mov
cmp
mov
jmp
add
enter
iret
clc
test
jbe
cmp
pop
je
ret
std
lahf
clc
lcall
push
jbe
notb
or
cmp
aas
sub
adc
fs
aas
mov
mov
and
pop
mov
pause
push
adc
jg
lock
pop
fldt
decl
jnp
sbb
ffree
and
stc
xchg
and
mov
aad
cwtl
lea
mov
pusha
sbb
popa
mov
pushl
push
or
sarl
das
popa
pop
sub
jo
fwait
mulb
or
adc
cmp
push
sbb
mov
jb
rorb
loopne
pop
inc
data16
and
or
cmp
arpl
ret
adc
pusha
fisubrs
sbbb
sbb
insb
add
or
xlat
inc
int
out
mov
jbe
push
leave
dec
push
add
sahf
push
stos
testl
ffreep
mov
cs
inc
shrl
mov
xchg
mov
and
fnstsw
arpl
mov
mov
out
call
jae
cltd
jl
std
cmp
ffreep
xor
inc
notb
mov
add
movsl
cmc
pop
fbstp
les
out
xchg
sub
cwtl
push
push
or
mov
fs
or
fidivs
pop
inc
push
add
or
push
outsl
cmp
inc
repnz
sbb
mov
cmc
sbb
pop
in
jl
icebp
dec
mov
push
adcb
std
pop
inc
loop
aam
out
std
push
mov
daa
mov
sbb
dec
dec
das
into
aam
jnp
xchg
fwait
rcrb
pushf
aas
ret
sub
out
and
movb
clc
sahf
mov
aam
lock
and
push
lret
dec
jns
dec
in
loop
stos
repnz
xchg
cmc
frstor
sbb
shll
cmpsl
mov
cmp
stos
mov
orb
test
add
sbb
lcall
adc
adc
adc
scas
repz
and
jle
aas
xor
mov
mov
add
jmp
cmp
and
mov
aas
xchg
mov
pop
xor
into
push
cmp
add
hlt
cmp
cld
cmp
imul
xchg
add
pop
aas
addl
call
cmp
orb
jg
jo
testl
push
mov
lret
adc
mulb
jg
stc
popa
sti
mov
outsb
mov
scas
xchg
aam
mov
xchg
dec
icebp
negb
fdivs
add
mov
push
sub
psraw
jno
icebp
xor
inc
xchg
icebp
mov
cmp
shrb
pop
pop
mov
enter
subb
push
ja
cltd
pop
int3
loopne
mov
mov
jne
das
incl
pop
bound
sbb
add
jo
xor
xchg
pop
ds
movsl
push
sbb
std
sahf
mov
mov
jnp
dec
inc
add
cmp
ljmp
hlt
jl
dec
push
mov
sbb
das
mov
nop
test
cmp
faddl
sub
lods
ss
movsl
or
dec
punpcklbw
popa
sti
pop
mov
rolb
je
or
cmpsl
lock
mov
fcoms
js
dec
add
test
js
repnz
loopne
push
jnp
pushf
pop
js
iret
jbe
pop
push
lds
push
and
and
xor
ja
adc
stos
or
push
xor
sub
jle
loope
push
mov
arpl
aas
add
or
or
jmp
testl
int3
push
frstor
and
fidivs
jle
and
or
dec
mov
pop
jns
mov
xor
xlat
dec
rorb
inc
mov
js
cwtl
mov
iret
insb
or
loopne
test
mov
mov
mov
into
js
jp
jns
adc
dec
cmp
fisttpll
or
call
lcall
add
rcr
mov
and
mov
xchg
mov
lock
cld
in
ss
xchg
cmc
orb
ret
incl
cmp
fstl
xbegin
and
push
popf
adc
icebp
inc
mulb
fcompl
fcoml
arpl
hlt
cmp
sbbb
push
and
mov
fwait
out
add
pop
cmp
movsb
adc
test
ret
xchg
insl
cmc
xchg
test
cs
lea
xchg
sarb
jg
cmp
or
push
icebp
data16
test
lock
lea
mov
xchg
sbb
cwtl
push
inc
push
jo
sbb
clc
es
sbb
adc
daa
mov
fists
lock
pushf
jae
pop
add
fisubrs
icebp
frstor
lea
lods
pop
dec
ss
or
mov
sbb
cltd
lret
push
leave
stc
push
add
dec
pop
and
xlat
inc
orb
daa
mov
fs
lock
pop
bswap
popf
call
subl
loopne
inc
cmp
mov
seto
ss
pop
sbb
mov
cmp
mov
and
add
push
xchg
stos
mov
and
scas
xchg
or
and
test
inc
dec
repz
inc
pushf
cmp
sub
mov
adc
sahf
inc
mulb
pop
add
inc
ret
out
sbb
sahf
hlt
mov
sarb
xchg
test
test
in
add
jp
sub
sub
aam
popa
xor
sti
cmp
js
adc
mov
adc
adc
or
lahf
push
lret
or
inc
mov
pop
adc
idiv
inc
loop
cli
mov
notl
xchg
and
cmp
lods
jle
mov
call
add
inc
mov
xchg
sbb
cmp
je
cmc
out
ficoms
outsb
jo
jle
adcb
clc
out
mov
sti
sbb
or
scas
jno
and
mov
rcll
lods
popa
inc
sub
pop
fs
xchg
cmc
addb
inc
scas
cld
fisttpl
mov
aam
or
inc
add
pop
mov
repz
and
xchg
int3
mov
mov
mov
push
lods
sbb
sarb
gs
dec
test
je
mov
xchg
call
push
imul
jae
rorl
in
aam
dec
xchg
cmp
dec
addb
ja
push
sbb
gs
in
out
dec
adc
pusha
sbbb
fs
pop
push
jl
test
xchg
or
call
push
daa
pop
sarb
jg
pop
lahf
ss
pop
pop
and
repz
incl
jae
jae
xchg
lcall
pop
rorb
jbe
cld
in
mov
xorb
pushf
scas
jp
cmp
and
out
mov
pop
pusha
fsubrs
cld
adc
mov
cli
dec
jmp
cltd
pminub
lock
test
jecxz
loope
pop
out
dec
gs
xlat
or
ret
mov
mov
pop
pushf
cmp
aaa
mov
and
sbb
push
lret
lcall
lock
stos
dec
test
les
push
ret
sub
and
cs
ds
jae
clc
push
cmc
sub
pop
fs
xor
lock
xrelease
add
out
xor
adc
cli
repnz
inc
es
and
flds
test
mov
xor
cmp
in
out
sub
mov
ficoml
mov
out
push
sbb
inc
pusha
or
mov
les
popf
sbb
ds
pop
movsb
test
push
pop
jle
nop
xchg
and
dec
lock
inc
arpl
cmp
jno
clc
mov
sarl
cmp
push
ljmp
iret
xchg
loope
push
lcall
cmp
aam
mov
fdivr
ret
cmp
adc
ret
js
pop
inc
xorl
add
les
cmpsb
std
ror
dec
mov
std
scas
cmp
bound
mov
or
fsubl
test
lahf
jle
mov
inc
mov
or
push
js
fcoml
xchg
js
std
notl
xchg
ror
lods
imul
nop
inc
add
add
mov
cmpsb
fcoms
das
inc
sbb
add
or
popf
loopne
mov
dec
lds
dec
in
mov
test
ljmp
add
push
push
xor
xchg
scas
cld
adcb
test
inc
sub
inc
popa
sub
sbb
rorb
inc
imull
sub
xchg
lret
hlt
or
adc
pop
mov
mov
fnop
aad
rolb
jo
bound
pop
sahf
adc
lock
inc
dec
fistps
dec
xor
shll
mov
mov
in
dec
sbbb
inc
cld
add
and
dec
jle,pt
sub
add
fldcw
in
cmpb
cmp
mov
les
cmp
and
psllw
loop
mov
sbb
jmp
mov
xchg
es
loopne
or
mov
outsl
mov
daa
inc
adc
insb
sbb
mov
std
adc
repnz
dec
jo
jg
rorb
ret
scas
cmp
ljmpw
xchg
or
cmp
out
pushf
add
mov
xchg
mov
and
ret
out
or
idivl
mov
push
or
add
and
or
dec
test
ja
mov
jne
jno
dec
sub
lcall
movsb
mov
pusha
lea
pop
sub
jg
cld
or
or
stc
and
and
pop
call
push
and
dec
sub
xchg
push
push
pop
pop
mov
xchg
aad
shlb
es
inc
movd
add
adc
cli
mov
add
fwait
mov
mov
clc
fsubl
js
pop
popa
rcrb
cmp
inc
jnp
and
cmp
cmp
sub
add
mov
jge
dec
xchg
jno
pop
into
movsl
mov
lret
fdivs
lret
mov
mov
xor
inc
and
add
stc
dec
aaa
ret
popl
lret
sbb
xchg
loop
fsubrs
mov
jecxz
adc
jmp
aam
out
push
data16
add
ss
sahf
push
push
popa
test
mov
movsl
clc
inc
hlt
xor
fdivp
scas
xor
jne
sub
mov
enter
jp
cmpsl
ss
dec
add
out
push
add
sbb
cmc
and
or
enter
lahf
cli
adc
jmp
rorb
jmp
xchg
pop
mov
nop
aam
mov
push
insb
int3
fmulp
or
add
popa
sub
rol
lods
jg
loopne
inc
repz
imul
adc
dec
add
mov
jns
sbb
push
lcall
xchg
loop
inc
adc
ret
es
add
jne
mov
dec
je
xor
or
lds
subl
push
and
pop
insl
enter
inc
repnz
sbb
sub
push
shrb
cmp
std
or
sbb
xor
sbb
ds
jecxz
or
mov
or
xchg
shlb
pop
daa
cmp
cmpsl
fimuls
add
jae
xchg
insb
jecxz
ja
sahf
out
call
daa
pushf
sahf
dec
pop
add
add
ficomps
inc
rolb
pop
jns
hlt
jmp
arpl
ljmp
inc
pop
mov
or
data16
add
das
lods
xchg
rcl
sub
xchg
sub
mov
sub
push
insb
aas
daa
inc
add
into
mov
das
enter
bound
cli
stc
icebp
clc
xor
push
out
or
insb
mov
or
and
push
jns
test
popa
lods
push
pop
jg
dec
jo
cmp
jl
sti
int3
mov
in
and
idiv
insb
add
push
fdivp
or
xchg
ss
cmc
mov
add
call
clc
in
std
lods
xchg
sbb
roll
mov
rorb
sar
dec
sqrtps
dec
cmp
ret
ret
fmuls
xchg
mov
popa
sbb
lahf
push
loopne
cli
ret
and
cmpsb
add
xchg
in
pop
inc
sbb
sub
outsb
xor
cld
push
leave
cmpsl
sub
in
push
jns
rorb
fmuls
and
les
pushw
mov
add
inc
inc
xor
les
inc
fdivr
and
out
roll
cmp
scas
out
xlat
shll
popf
movsb
bound
push
push
test
push
xchg
arpl
sub
mov
dec
push
pop
outsb
cmc
mov
clc
push
mov
dec
mov
dec
add
inc
sahf
test
jg
inc
cli
jns
and
add
inc
divl
loope
sbbl
test
rcll
data16
sub
dec
push
mov
jp
and
fimuls
pop
cli
sbb
or
mov
aaa
jmp
arpl
lods
pop
call
js
pushf
sbb
rcl
and
sub
sbb
cmp
mov
decl
jo
or
ss
sbb
jp
lret
scas
icebp
mov
mov
xor
pop
sbb
imul
out
nop
dec
pop
clc
lock
lods
popf
xor
adc
in
call
mov
sub
addl
adc
hlt
fildl
and
mov
ficomps
jecxz
out
arpl
rcrl
adc
xchg
in
bound
dec
sarl
test
mov
dec
xchg
xlat
xor
pop
out
mov
aam
sub
xchg
inc
leave
lahf
mov
in
imul
sbb
mov
and
dec
roll
xchg
repz
lea
and
pop
sub
insl
xchg
ffreep
mov
test
sub
and
mov
pop
imul
xchg
ja
lock
int3
lret
pop
rolb
aas
push
xchg
cltd
and
mov
mov
sbb
repnz
jecxz
cmp
or
or
sub
pusha
outsb
xor
cmpsb
mov
cmc
jnp
xchg
outsb
out
clc
jns
in
aam
stos
bound
sub
mov
fnsave
xchg
stos
push
ret
xrelease
dec
sti
mov
adcl
test
jns
adc
imul
divl
or
push
push
add
movsl
int3
sbb
mov
push
push
mov
fnstsw
jns
lods
out
xor
add
ret
stc
inc
push
cwtl
fnop
jo
outsl
scas
mov
mov
lock
fdivl
sbb
mov
lret
jl
das
pop
sbb
sub
push
push
mov
cmp
and
mov
pop
das
mov
xor
cli
cmp
add
adc
sub
jb
ljmp
add
mov
mov
jge
add
xlat
popf
into
inc
inc
insb
daa
fildl
sbb
and
outsb
sbb
out
ss
jge
nop
int3
aam
rolb
push
lock
sbb
dec
movsb
icebp
xchg
and
xchg
xchg
fwait
push
jge
sub
testb
mov
xchg
push
push
push
in
jbe
push
sub
fstl
jecxz
rol
fldenv
ret
sbb
loope
sub
loop
push
in
or
xor
dec
add
addr16
pop
push
sbb
adc
sbb
add
setl
pop
mov
sbb
add
push
pop
dec
push
mov
jne
clc
jg
push
or
or
lds
pop
sub
sbb
jmp
xchg
add
cmp
lret
out
aad
push
pop
jo
xchg
add
daa
sbb
mov
stc
mov
cmp
lret
filds
jno
daa
inc
dec
cmp
add
dec
std
cltd
add
add
popf
mov
add
cmp
sbb
sub
rorl
jnp
jp
cli
bnd
es
sbb
sbb
out
sbb
std
push
adcl
clc
inc
and
leave
or
jns
shl
push
push
loopne
pop
test
mov
rclb
outsl
mov
mov
mov
mov
xor
insl
inc
out
mov
fstpl
mov
fimuls
pusha
cmp
das
stos
fstps
mov
jmp
popa
notb
sbb
popf
sahf
sbb
adc
sbb
iret
adc
push
sub
or
outsl
mov
es
add
imul
jecxz
lcall
fidivrl
fldt
and
rorb
cltd
pop
inc
lods
or
orb
pop
xchg
mov
jae
xor
xor
sub
sahf
movsb
fdivrl
pusha
pop
ss
loopne
sub
test
out
mov
push
adc
rcl
scas
not
js
mov
push
pop
add
mov
dec
mov
add
pop
ja
into
test
cli
sub
testb
into
or
test
cld
sbb
jg
adc
push
ret
not
repz
xlat
xacquire
inc
shrb
cmpsl
add
je
pop
stos
cs
sbb
push
movsl
pop
mov
leave
stos
dec
int
or
lret
clc
popa
ret
sub
mov
push
mov
xrelease
cltd
xor
cmpsb
mov
jmp
aam
sub
sahf
insb
dec
mov
or
loope
inc
push
ret
ret
clc
in
or
aam
iret
xlat
addr16
mov
in
mov
sbb
mov
mov
lods
push
push
cld
jae
mov
sti
xor
jno
sbb
sbbb
ljmp
xor
sti
rol
test
mov
test
out
add
add
jae
mov
pop
push
movsb
jmp
rcrb
clc
add
repz
lmsw
push
mov
push
and
sti
adc
imul
popa
xor
inc
and
lcall
lahf
inc
loop
cwtl
and
aam
mov
mov
and
ds
cmpsl
lds
dec
and
add
ljmp
mov
loope
cs
ds
movsb
xchg
hlt
sbb
sbb
rorb
xor
xor
fstpt
jmp
outsl
pop
fucomi
dec
ss
in
andl
das
add
jbe
jne
or
add
stc
arpl
inc
cltd
pop
push
jne
pusha
and
jnp
and
scas
aad
icebp
imul
dec
popa
jp
leave
inc
dec
lock
add
pop
jle
hlt
test
sub
mov
push
and
xchg
pusha
inc
stc
sub
ret
push
fldcw
pop
mov
adc
repnz
sub
pop
sbb
xchg
jnp
pop
inc
test
mov
inc
jl
in
dec
in
xchg
xchg
jnp
mov
out
mov
flds
scas
ds
sbb
mov
scas
sub
loope
push
movsb
xor
cltd
jo
outsl
sbb
aad
dec
dec
push
int
push
test
clc
pusha
mov
pop
andl
or
dec
test
les
mov
pop
inc
je
sbb
sbb
sub
push
jne
lea
or
sbb
loopne
xchg
fisubrs
mov
cmp
or
sub
mov
cmpsl
fisttps
sbb
jge
mov
sbb
xchg
sub
pop
rcrb
and
sub
cmpsl
add
mov
inc
stos
ja
or
xchg
pop
and
xchg
add
cmp
lods
fstpl
pop
sbb
ja
test
mov
xor
add
xchg
mov
jne
mov
or
cmp
lds
xchg
sub
xchg
xlat
mov
add
push
lock
cmp
pop
jp
daa
inc
aas
dec
add
mov
test
inc
pop
push
jno
adc
bound
push
mov
scas
test
and
add
adc
jo
add
into
pushf
ja
aas
jo
call
jnp
orl
inc
adc
dec
inc
dec
icebp
repz
mov
dec
adc
mov
xchg
dec
sbb
xchg
shlb
mov
bndldx
push
movsb
mov
dec
mov
and
adc
jmp
push
in
aam
cltd
fdivl
mov
rcrl
mov
testl
cmp
ljmp
lock
or
or
inc
xor
add
or
push
out
shll
dec
sbb
add
cmpsb
fwait
mov
jge
sahf
dec
pop
pop
jb
shrb
rcrl
push
dec
or
insb
cli
inc
stos
adc
shrl
push
pop
fcomip
sbb
xchg
movsl
jmp
push
add
arpl
mov
or
and
add
sarl
xchg
adc
add
push
mov
xchg
or
arpl
test
mov
jbe
scas
aad
jbe
loop
pop
and
mov
cmc
adc
xchg
sub
jge
sbb
scas
or
sbbl
stos
mov
jg
xchg
pop
push
jmp
loope
leave
jbe
lahf
lcall
push
push
pop
cmp
andl
fisttpll
and
fnstsw
pop
dec
outsb
lock
inc
push
or
mov
lock
test
cmpsl
addl
out
dec
inc
xchg
std
ret
movsb
xor
loop
sbb
pop
fcoms
and
and
jmp
outsb
movsb
pop
mov
testb
aas
push
mov
sbbb
xchg
jge
js
ud0
add
cmp
push
cmp
push
faddp
int3
push
repz
iret
adc
sub
in
jle
mov
sbb
orl
scas
jg
inc
add
lock
ds
mov
clc
mov
cld
xchg
sbb
inc
pop
mov
sub
aaa
mov
mov
mov
es
in
ret
mov
orb
orb
rorl
cmp
je
xor
xor
jae
movb
jp
and
lds
add
rclb
mov
outsb
add
push
sbb
lock
test
dec
mov
sar
xor
pop
pop
loop
push
and
mov
xor
add
movsl
jbe
cwtl
add
cmc
xchg
ja
push
pop
imul
adc
pop
callw
sub
lock
sbbb
into
ja
repz
int
ret
mov
xchg
and
lods
sub
cmp
inc
cmp
cmp
xchg
fnstcw
stos
mov
test
mov
fildl
lock
sbb
lds
cli
push
cld
jge
jg
cmp
cmp
fcoms
inc
movntq
les
sbb
pop
cld
inc
mov
aas
sub
xchg
xchg
mov
pop
popf
push
jecxz
inc
jp
pop
xor
ficompl
pop
in
pusha
xor
dec
js
jg
jp
xchg
ret
or
sbb
push
inc
inc
call
outsl
sbb
in
loop
test
fucomi
std
push
mov
xor
jns
in
rolb
cli
dec
out
mov
inc
xchg
adc
subb
popa
inc
jp
aas
int3
movsb
xchg
jno
mov
mov
call
adc
mov
out
fidivl
loope
outsl
lcall
and
dec
push
out
sbb
cmpl
add
mov
push
dec
inc
sbb
pop
jb
push
repz
enter
ficomps
xor
jle
das
movsl
mov
aas
mov
shrl
lods
test
aas
lds
jg
loope,pt
sti
xchg
scas
sbb
lcall
inc
and
sti
imul
rcrb
mov
fwait
sub
out
aas
and
in
adcb
and
jo
sbb
arpl
cmp
dec
xchg
push
fnstcw
loopne
push
mov
xor
add
ret
xchg
inc
adc
mov
stc
xor
lock
jle
out
shrl
inc
fstps
iret
pusha
lock
mov
mov
inc
clc
and
cmp
add
xchg
inc
imul
xchg
fsts
incl
insl
jbe
iret
andb
bound
mov
push
adc
add
sbbl
mov
rcr
inc
int
ds
add
xor
dec
mov
mov
jmp
data16
cmp
mov
cmc
pop
popa
inc
lods
je
xor
pop
ja
arpl
sbb
rol
push
mov
ljmp
xchg
mov
pop
icebp
jo
xchg
mov
sahf
dec
test
aam
pop
enter
mov
mov
test
mov
les
shrl
fisttpll
mov
xchg
push
call
daa
add
mov
inc
clc
push
xchg
dec
mov
outsb
sub
mov
hlt
jle
test
pmulhw
pop
insl
mov
push
loopne
cld
cmp
add
sarl
sub
jg
mov
cmp
stc
add
iret
repnz
outsl
addb
scas
and
xchg
pop
insb
mov
jl
cs
push
lods
adc
sub
push
or
mov
dec
cmp
push
pop
mov
push
ljmp
insb
pop
test
mov
pop
fwait
push
pop
jmp
aad
imul
sub
push
inc
mov
rcrb
push
sbb
jmp
and
add
xor
or
jecxz
das
shr
pop
out
insl
sub
lods
test
dec
roll
mov
rclb
notb
jb
inc
xchg
sbb
lret
stc
test
pop
loope
inc
sbb
std
add
sub
test
in
inc
push
pop
aam
out
call
dec
sub
mov
or
push
jge
aam
daa
push
leave
sbb
sbbb
sub
js
inc
dec
negl
outsb
mov
mov
shr
pop
das
lea
js
call
cs
jae
ja
rclb
sbb
sub
jbe
dec
sbb
dec
mov
mov
mov
and
sub
mov
or
cmp
stc
mov
mov
mov
test
push
sub
fwait
shl
push
jecxz
and
mov
ljmp
push
xor
rclb
pop
xchg
and
cmc
ljmp
mov
jns
jb
sbb
sbb
xchg
pushl
mov
xor
nop
les
scas
inc
call
lock
and
xor
mov
psrad
adc
xor
xchg
outsb
pushf
mov
std
sahf
in
mov
pop
call
clc
das
hlt
movnti
add
scas
xchg
xchg
in
scas
push
dec
pushf
fidivl
inc
xor
adc
xchg
pop
push
push
pop
in
fcmovnbe
scas
pop
and
or
inc
pushf
and
fs
or
mov
mov
sbb
fs
decb
aas
icebp
mov
insb
pushf
mov
mov
hlt
push
lcall
movsb
sbb
pushf
or
mov
or
sbb
rcrb
js
jmp
aad
ret
lcall
xchg
jbe
add
inc
adc
push
mov
aad
lock
push
adc
mov
jl
int3
xchg
fimuls
fcompl
in
adc
mov
stc
push
lret
add
addb
inc
testb
push
in
sbb
jnp
loopne
ret
mov
insb
fsub
test
jecxz
xor
std
push
pop
addl
pushf
fstpt
adc
aas
cmp
ss
xorb
pushl
enter
imul
pop
aas
ret
or
mov
lahf
test
aam
iret
mov
or
mov
cmc
das
leave
push
mov
adc
xor
xor
cld
data16
fcmovne
es
and
imul
lcall
or
or
repz
cmpsl
in
jne
push
add
jmp
dec
push
or
movsl
jne
sahf
call
rolb
xor
mov
pop
lahf
mov
pop
int
inc
sahf
pop
outsl
inc
pop
pop
ja
js
popl
push
iret
shl
mov
popl
cmc
pop
clc
or
xchg
pop
ror
push
sub
inc
ja
mov
mov
test
cltd
push
dec
adc
outsl
or
pusha
jmp
xchg
loope
imul
jge
std
jmp
push
sbb
ja
in
sbb
js
dec
and
popf
lcall
xor
cld
xchg
pop
test
andl
pop
xorl
push
call
xchg
or
xchg
pop
mov
push
sub
mov
jae
sub
cmp
sbb
add
inc
in
ss
clc
mov
inc
rcrl
mov
stc
dec
jo
cmp
in
pop
js
hlt
fdivr
adc
lea
xorl
push
mov
xchg
movsb
and
add
inc
adc
mov
xchg
or
shrl
lock
inc
sbb
std
adc
sbb
call
mov
enter
inc
rcl
filds
insl
and
js
shrl
jge
sub
add
pop
cmp
dec
cmp
adc
mov
test
in
sub
push
cmp
nop
dec
pusha
test
adc
inc
fs
mov
adc
icebp
push
cld
and
xor
daa
dec
inc
loop
sbb
or
sbb
push
mov
lret
and
cmc
push
push
clc
pop
fildll
cmpsb
and
idivl
lock
push
loope
rorb
sbbl
inc
xor
inc
call
sub
pop
cld
push
nop
mov
push
xor
inc
fdivl
or
inc
int3
mov
xchg
adc
loope
cltd
and
lea
inc
pushf
push
lods
cli
push
in
mov
mov
mov
lds
stos
rorb
repnz
out
cmpb
sbb
dec
arpl
add
leave
dec
or
jle
rclb
dec
xchg
shlb
daa
sbb
xchg
pop
les
jmp
add
call
outsb
enter
rclb
cmpsb
jmp
add
and
adc
add
jae
les
sbb
add
call
ret
out
shrl
push
mov
xorl
xor
popf
inc
inc
popf
loopne
aas
and
lret
adc
cmp
dec
mov
cs
in
mov
cmpsl
bound
xor
ret
insb
sbb
cmp
cmp
pop
jb
mov
incl
fsubrp
mulb
cmp
and
icebp
pop
fstpl
mov
and
push
scas
std
test
std
lea
dec
push
and
cmp
popa
outsl
imul
popf
pop
jp
es
sarl
adc
fimuls
push
jmp
movsl
jl
jg
mov
mov
dec
mov
div
scas
push
addr16
lock
pop
lods
sahf
sar
inc
mov
je
clc
outsb
add
cli
push
dec
in
pop
popa
outsl
je
enter
add
ret
or
or
xor
scas
adc
xchg
cli
sub
test
aaa
pop
add
lods
push
in
popa
inc
data16
lods
sub
sbb
jo
add
inc
negb
sbb
fistl
adc
mov
xor
jp
dec
ljmp
sbb
fnstcw
pop
dec
loope
sbb
clc
adc
data16
fisubrl
jb
cmp
inc
lcall
aam
cltd
dec
lock
or
mov
mov
push
jecxz
clc
mov
cmpsl
or
data16
mov
stos
dec
or
scas
fcmovbe
sbb
mov
pusha
popa
push
sub
mov
popa
repnz
add
sub
or
es
mov
dec
add
pop
loop
sbb
mov
pop
addl
in
cwtl
xchg
lret
push
jle
fildl
xchg
lods
aas
push
adc
xor
push
inc
pushl
cmp
aas
out
sbb
or
test
cld
xchg
pop
sub
cmp
pop
and
fwait
jno
or
cmp
jae
in
lock
mov
jo
inc
out
pushl
rcl
ljmp
jmp
cmp
mov
ficompl
repz
imul
pop
lahf
ds
movsb
in
jo
mov
mov
nop
imul
ret
fs
and
jle
movsb
mov
cs
or
or
jl
push
fwait
jno
dec
or
sub
and
sbb
mov
incl
or
cltd
subl
popf
call
mov
in
rcrb
dec
mov
adc
jmp
mov
and
ljmp
inc
or
push
stos
mov
add
sarb
outsl
mov
push
lret
pop
js
mov
ljmp
mov
add
push
add
adc
popa
jge
push
scas
add
cmp
jge
cmp
or
cmp
pusha
daa
scas
mov
mov
sti
sbb
sarl
adc
and
dec
or
icebp
inc
lds
shrd
push
addr16
divl
dec
cwtl
clc
mov
push
add
mov
aaa
scas
or
shl
push
and
jg
sbb
cmp
subb
push
push
pop
cld
das
cmp
cmp
inc
leave
cmp
insb
jp
add
and
es
fisubrl
sbb
dec
rorb
mov
add
js
add
ret
inc
lahf
inc
mov
cmp
out
inc
out
rol
push
push
ss
cli
testb
add
fsubrs
or
rcll
inc
std
push
pop
enter
cmpsl
es
and
ljmp
sahf
sub
xchg
fisttpl
dec
jl
test
jbe
cmp
ljmp
pop
or
push
popa
sbb
cli
xor
sub
sub
push
pop
mov
bnd
loope
xor
pop
add
lcall
imul
mov
cmp
xchg
leave
fstl
sub
ja
outsb
jl
and
out
aas
loop
rcll
and
add
dec
aad
iret
dec
push
into
mov
inc
jl
ret
jo
dec
js
jg
adc
stos
iret
out
iret
sub
add
sti
movsl
sub
shlb
or
stos
popa
ret
in
mov
clc
or
enter
es
in
xor
cld
js
dec
mov
xor
ret
pop
inc
mov
push
xor
ljmp
add
adc
jne
push
cmc
jmp
xchg
mov
mov
mov
je
pushf
dec
imul
and
ret
pop
cmovg
mov
sub
sub
movsb
pop
mov
add
dec
ret
cs
and
pop
add
xor
loopne
jbe
lcall
divl
dec
sub
dec
mov
pop
push
dec
xor
dec
xchg
lock
es
xchg
nop
inc
in
iret
mov
mov
ret
mov
data16
dec
mov
out
jmp
inc
mov
jecxz
add
inc
add
sbb
and
mov
push
pop
dec
xlat
aad
outsl
fisubrl
dec
call
sbb
mov
and
ljmp
dec
and
add
repz
pop
in
sub
aas
add
sub
cmp
loope
push
loope
das
ds
add
int
addb
push
inc
packsswb
movsl
jl
mov
or
orl
pop
lcall
aaa
jnp
fnsave
xchg
les
out
aas
cltd
clc
dec
mov
outsb
addr16
cmp
in
xlat
push
and
adc
push
mov
adc
test
adc
add
shr
fwait
mov
pop
xchg
insb
aam
push
enter
sub
test
mov
adcb
inc
test
push
and
add
loope
loope
cmp
sub
repz
test
jb
and
adc
test
cmp
pop
inc
jmp
mull
and
xorl
test
mov
outsl
jmp
movsb
cmp
dec
inc
mov
pop
xor
jo
or
sbb
pushl
out
dec
out
lock
popf
sub
push
inc
cs
sar
inc
mov
xchg
stos
insl
lret
ljmp
xchg
scas
mov
mov
sbb
cltd
dec
outsl
call
arpl
or
mov
stos
incl
mov
mov
sbb
outsl
mov
test
lahf
add
jne
js
xor
out
or
popa
jno
mov
scas
clc
adc
call
inc
out
add
mov
loopne
mov
push
jg
jp
lods
mov
inc
and
nop
jle
xchg
movsl
out
test
adc
pop
test
int3
lods
pop
and
or
pop
or
cmpsl
shll
cmp
or
outsb
in
push
roll
loope
mov
ret
xchg
xchg
movb
inc
push
nop
cmp
and
and
shlb
inc
cld
pop
inc
fiaddl
shll
mov
std
mov
pop
jnp
hlt
dec
and
pushf
out
mov
pop
aaa
leave
bound
lret
add
pusha
loopne
push
jl
mov
clc
mov
in
pop
cmp
fs
sub
jle
cmp
jbe
push
xchg
push
push
push
aad
ds
mov
add
aam
fbstp
ljmp
cs
xchg
push
cmp
inc
andb
or
sub
sub
sbb
lret
inc
cwtl
std
pop
shll
mov
push
mov
pusha
sub
test
jo
testl
cmpsb
imul
or
or
and
xor
sahf
adc
push
out
adc
in
jp
sarb
jb
ficomps
sub
scas
jmp
adc
add
insb
fiadds
cmpsl
dec
js
bound
dec
lods
cld
orl
mov
xchg
pushf
inc
push
cld
pop
push
sub
cmp
or
jno
sbb
gs
jmp
sbb
cmp
cmpsl
mov
aam
fists
cmp
sbb
pop
cmp
push
shlb
lds
xorb
les
lds
test
push
sbbb
loopne
adc
lcall
adc
add
arpl
pop
cmp
and
int3
ss
fucomi
inc
ret
mov
repz
pop
test
int
imull
addb
call
bound
adc
out
rol
sbb
add
xor
inc
cmp
jbe
adc
sti
cli
sub
bound
jno
outsb
or
inc
fsubrs
and
lock
sbb
add
dec
frstor
pop
add
cmp
pop
nop
arpl
fsubr
enter
lcall
ljmp
xor
inc
cmc
je
sbb
and
sbb
enter
fstl
sbb
dec
push
xchg
icebp
andb
dec
push
mov
clc
add
lahf
nop
inc
outsl
or
push
add
stos
imul
add
pop
lods
xchg
push
cld
or
mov
dec
lods
cmp
nop
test
sbb
cmp
mov
sti
rorl
shr
das
in
or
rcrb
gs
xchg
inc
pop
sbb
pop
mov
adc
fst
popf
push
xor
mov
js
add
or
adc
loopne
jno
cmp
pop
aaa
out
or
outsl
pop
mov
inc
push
mov
inc
dec
dec
lcall
or
cld
into
pop
mov
scas
xchg
sahf
inc
fwait
dec
loopne
adc
mov
ljmp
fwait
adc
pop
hlt
cltd
mov
pop
cli
cmpsl
daa
adc
dec
clc
xchg
and
cmp
or
out
daa
scas
xchg
loopne
dec
dec
pop
sub
pushf
cmp
sub
mov
push
jecxz
inc
sub
rorl
adc
shr
sbb
jl
xchg
lods
push
xor
addr16
or
js
loop
cltd
mov
idivl
pop
jmp
inc
jne
cmc
add
ja
int3
test
shll
jecxz
cmp
aas
pop
enter
adc
aam
sti
or
inc
jge
adc
adc
icebp
sbb
shll
sbb
dec
pop
call
dec
xlat
push
xor
add
sahf
incl
mov
xchg
or
xor
xor
mov
fwait
mov
sbb
fwait
add
fsts
shrl
movsl
add
adc
xchg
daa
pushf
add
push
stos
cmpsl
roll
mov
sbb
cmp
sub
cld
lea
inc
imul
sub
add
cltd
and
or
sbb
out
pushl
sub
sbb
ds
test
loopne
in
xlat
pushf
int3
and
sub
jnp
add
push
adc
and
outsl
pop
push
loopne
test
xchg
leave
orb
or
lea
pushf
or
test
stos
sub
jno
dec
shrb
or
movsb
or
lahf
and
jle
dec
sub
or
mov
clc
ret
nop
roll
lock
jmp
xchg
push
mov
fidivs
mov
les
sbb
sbb
cli
fwait
aas
pop
sbb
jmp
add
pop
enter
loopne
push
dec
inc
sbb
inc
rcl
sbb
mov
dec
push
cld
lret
pop
sbbb
in
adc
mov
in
inc
jle
add
lock
jp
sub
add
shr
cmp
clc
add
sub
push
or
fs
sbb
mov
mov
aam
aad
sub
cmp
shrb
rol
test
mov
push
outsl
out
jbe
mov
jmp
out
push
das
cmp
mov
cmpsl
insb
mov
jne
aas
jg
mov
arpl
test
inc
add
mov
pushf
andl
lcall
in
icebp
inc
mov
xor
out
push
xchg
push
in
lcall
inc
inc
cmp
les
inc
xor
push
and
outsl
outsb
sbb
add
jo
or
mov
mov
arpl
test
cmp
mov
pop
dec
shrl
pop
sbb
jg
and
sbb
adc
pusha
andb
das
cmp
mov
jp
jmp
fwait
jnp
sbb
jnp
pop
adc
adc
addr16
je
dec
or
mov
movsb
aaa
fucomi
cmp
aam
idiv
inc
inc
ds
sbb
out
mov
adc
dec
fcmovb
call
xor
aas
or
xchg
mov
push
js
push
push
cmp
lock
fwait
push
icebp
or
out
push
push
push
mov
push
dec
dec
bound
push
lock
mov
lods
xchg
ss
les
xchg
cmp
inc
testl
fwait
loopne
add
aaa
or
xor
xchg
and
int3
mov
insb
lcall
cli
es
clc
mov
std
pop
push
popa
ret
enter
and
cmp
pop
push
movsb
inc
jl
sub
js
mov
cmpsl
pop
js
out
js
mov
push
into
or
imul
push
inc
addb
jno
jp
push
and
inc
not
and
inc
jle
add
push
sub
ficoml
cmp
pop
hlt
ret
fisubl
fisttps
sub
int
mov
mov
movsl
push
push
call
sbb
mov
sub
push
dec
mov
outsl
ret
add
sbb
popa
mov
pop
mov
in
incl
sub
ficompl
sbbl
rcrb
into
rcrb
sub
mov
hlt
lcall
sbb
stos
adc
int
xor
jnp
jecxz
cwtl
stos
and
repnz
push
push
repnz
cmpsl
push
pushf
and
clc
dec
xor
push
repz
in
dec
cmp
xchg
pop
push
loop
test
lret
fwait
ds
push
cmpsl
mov
jle
mov
addl
sub
adc
jns
pop
jl
add
xchg
fimull
insb
fldenv
popa
scas
js
movsb
mov
jo
lods
lods
and
lahf
scas
adc
dec
pop
lcall
push
sbb
mov
aad
cmp
adc
push
or
loope
cli
lcall
add
cmc
lret
dec
mov
mov
cld
daa
fmull
icebp
fiadds
jle
jno
xor
icebp
stos
push
xchg
cmpsb
fs
test
dec
mov
rorb
add
insb
push
call
test
add
les
in
arpl
rcrb
jmp
lods
inc
test
hlt
repnz
and
or
add
not
iret
mov
xchg
leave
xor
lds
das
sbb
jle
out
inc
rolb
cld
mov
insl
scas
or
loope
inc
pop
or
jg
cmp
xchg
rorl
xchg
xor
mov
insl
lcall
mov
mov
in
aaa
ret
incb
add
popf
xor
or
add
sar
sbb
adc
fs
add
push
out
xchg
add
mov
dec
adc
test
dec
xor
and
andb
xor
cmc
ds
jle
dec
icebp
repnz
das
cwtl
add
insb
pop
dec
fmuls
xchg
cmpsb
xchg
pop
shlb
mov
cmpsl
xor
xchg
in
iret
outsb
js
mov
sbb
mov
xchg
out
jns
test
in
mov
jbe
les
repz
bound
mov
inc
jl
sub
fimuls
or
sbb
cmp
les
and
ficomps
mov
nop
sbb
mov
cli
sar
and
jbe
inc
loopne
pop
ja
adc
push
push
rorl
data16
jb
sahf
movsl
sub
mov
loope
xchg
mov
adc
rclb
pushl
ljmp
push
jbe
insl
sti
inc
stos
mov
cmp
cli
cmpsb
ja
fbstp
pop
ret
lock
sar
cld
icebp
clc
mov
sbb
xchg
xor
lods
mov
mov
mov
cmp
xor
ljmp
cmpsl
cmp
movsb
ss
xchg
mov
hlt
and
mov
aaa
add
mov
pop
repnz
adc
sub
es
insb
mov
inc
cmpsl
arpl
dec
add
imul
arpl
es
scas
imul
lcall
lret
ljmp
adc
add
cli
mov
mov
shll
addl
fwait
call
mov
inc
push
mov
jae
adc
outsb
jo
mov
xchg
or
mov
and
push
or
mov
rcr
loope
inc
or
xchg
scas
pop
add
loop
jne
mov
and
mov
les
add
jp
xchg
push
js
ss
xchg
xchg
fiadds
pop
push
cmp
movsb
into
mov
cmp
sarb
insl
push
dec
xor
enter
mov
sub
aas
loop
cwtl
xchg
repnz
sbb
xor
pop
out
sbb
idiv
xlat
add
mov
and
scas
int
mov
dec
loop
cld
lret
or
inc
sub
xor
adc
push
test
dec
pop
shlb
in
fdivr
cli
dec
sti
add
xor
mov
cmp
fidivs
imul
or
stc
or
ficoms
dec
je
mov
add
test
cmp
imul
pop
ds
add
push
mov
clc
loop
in
dec
rolb
mov
pop
daa
test
icebp
pop
add
xchg
es
push
out
push
xchg
loope
jnp
je
in
xchg
or
xor
sub
adc
lret
or
xor
mov
mov
lahf
popf
cmpl
js
dec
rclb
shll
outsb
push
add
pop
mov
or
clc
xchg
es
push
push
pop
cmp
loop
cli
cmp
into
out
lock
xor
ljmp
pop
sbb
sbb
sbbl
or
jg
mov
test
or
add
cmp
and
inc
call
xor
pmaxub
aam
adc
xor
dec
mov
xchg
loopne
aas
fldl
enter
push
and
incl
ds
inc
mov
rorb
rclb
or
test
lock
shrl
add
pop
and
fists
mov
aaa
ljmp
lods
ds
xor
xor
push
insl
push
cltd
jp
repz
lret
sbb
pop
adc
das
int3
nop
xchg
push
add
xchg
cmpsl
cmpsb
mov
iret
hlt
repnz
sbb
sbb
into
andl
psraw
xor
fidivrl
movsl
push
sbb
stos
movsb
outsb
mov
sbb
mov
push
add
mov
push
lret
cmp
rorl
sahf
int3
add
mov
fwait
sbb
loope
cwtl
push
aas
sub
sti
cmpsl
sarl
cs
cmp
xor
or
aaa
adc
mov
mov
mov
stc
mov
ja
movsl
sub
pop
adc
and
inc
addr16
ss
sbb
inc
cld
or
imul
stos
test
aaa
inc
int
hlt
pop
sarb
lcallw
and
xchg
ds
jae
inc
add
fcoms
dec
orl
shll
xchg
cltd
mov
pusha
push
sbb
adc
hlt
data16
xor
sbb
sbb
push
adc
sbb
adc
pop
pop
icebp
or
pop
inc
sub
pop
jb
repz
das
subl
push
and
dec
aas
mov
inc
ret
fcomi
cmpsb
adc
outsl
jge
in
pusha
or
cs
mov
ret
push
aad
insl
mov
dec
pusha
mov
inc
out
cmpsb
jno
bound
jae
push
fwait
outsl
pop
ja
movsl
adc
roll
leave
push
mov
std
pop
aam
icebp
les
mov
sbb
jnp
test
sub
test
es
mov
sahf
in
push
sbb
call
dec
sbb
mov
aam
push
lret
lods
cwtl
sbb
inc
xchg
sub
cld
jne
mov
jnp
inc
inc
je
cmp
lock
lcall
cmp
ret
xorl
sub
pop
dec
cld
push
jmp
jo
and
sbb
inc
mov
rol
hlt
and
loopne
or
jge
scas
cmpb
dec
insl
mov
clc
shl
add
dec
insb
cli
mov
mov
adc
stc
sub
lds
bound
pop
adc
push
mov
shrb
pusha
mov
dec
ljmp
inc
jbe
and
mov
subl
dec
sub
xor
out
mov
push
ret
adc
xchg
js
sbb
mov
cmp
xor
test
sbb
push
outsb
sub
mov
push
fstpl
jp
jle
jge
loop
lret
ja
sahf
and
andb
mov
pop
mov
jl
and
or
adc
lea
decl
dec
inc
movsb
push
add
fdivr
fidivrl
daa
xchg
mov
inc
mov
es
cmp
fs
mov
call
rorb
gs
ret
lock
sub
cld
in
repz
jmp
movsb
fldt
scas
mov
cmp
adc
mov
repnz
adc
in
cmp
rcr
xorb
daa
add
int3
mov
push
lock
jb
inc
inc
jo
or
sbb
adc
adc
push
decb
mov
mov
andl
ret
adc
and
and
es
cli
mov
movb
std
adc
mov
mov
ret
je
cli
lock
jmp
dec
enter
cld
mov
inc
pop
loopne
popa
shll
loopne
xlat
mov
ret
adc
or
stos
push
cmpsb
mov
jg
push
xor
gs
add
add
push
xor
mov
sahf
or
in
iret
das
adc
sbb
int
je
int
scas
inc
xor
scas
inc
xchg
aaa
test
ret
insl
xor
int
mov
fsts
into
dec
cli
xchg
xchg
int
je
test
add
pop
lock
add
mov
fwait
push
stos
mov
push
movsl
push
mov
cmp
js
sub
xorl
or
fsubl
loope
sub
enter
js
lcall
loopne
cmp
clc
and
cmp
ret
iret
or
pop
mov
xor
arpl
xor
or
dec
stos
movsb
inc
xchg
sbb
jecxz
xlat
and
fs
in
inc
cli
cs
dec
xorb
cli
inc
flds
mov
test
jp
pop
push
mov
cmp
es
adc
cmc
insl
push
push
nop
xlat
daa
xchg
mov
add
dec
outsl
jae
sbbb
sbb
pop
les
add
pop
scas
imul
and
cli
push
cli
add
js
inc
call
xchg
sbb
mov
cmp
in
or
incl
sub
loop
dec
aad
dec
cmp
call
in
sahf
nop
pop
cmp
sar
xchg
into
fistl
mov
cmpsl
addb
and
cltd
stos
xlat
xlat
aas
cmpsb
jno
test
movb
std
jno
rorb
out
push
cmpsl
inc
fimuls
xchg
incb
stos
decl
rclb
jbe
xchg
rcrb
lahf
icebp
inc
mov
mov
inc
fsubrl
enter
jp
mov
sbb
add
insb
push
movsb
sub
loop
mov
inc
scas
imul
lods
dec
rcl
mov
xlat
nop
cmp
ljmp
push
jnp
cmpsb
cs
outsl
js
sub
mov
pop
cltd
clc
psraw
orl
es
pusha
ljmp
loopne
ret
cmp
sub
out
test
pop
shl
inc
jns
sub
into
cld
pop
test
pop
icebp
loop
jge
jo
jg
loopne
sbb
adc
call
dec
adc
add
and
aam
popl
aam
push
loop
sbb
fwait
dec
pop
xor
adcw
and
mov
xchg
cs
cs
mov
fldenv
scas
jl
lret
push
push
add
shrd
inc
push
jmp
mov
punpckhwd
push
adc
cmpb
imul
dec
jge
and
add
adc
xlat
cli
rep
nop
shll
xor
fwait
sbb
pop
clc
pop
cmpsl
pop
inc
push
and
mov
mov
push
stos
mov
ret
popa
push
inc
aas
fnstenv
ja
mov
cmp
andb
and
fwait
jmp
add
cmp
xchg
push
sub
xchg
in
clc
call
pusha
inc
test
pop
push
dec
cli
mov
mov
ds
stc
repnz
fsubrp
mov
push
fmull
add
dec
xor
sbb
das
dec
dec
jmp
and
mov
mov
pop
rolb
push
cmpsb
loope
mov
rcrl
outsb
fucom
in
push
fisttps
pop
sbb
daa
test
or
jg
ret
dec
mov
icebp
imul
cmp
mov
scas
ljmp
pushf
xlat
gs
adc
ljmp
in
or
cwtl
push
cmp
in
es
insb
mov
loop
add
ret
mov
lods
ret
inc
aad
mov
stos
rcrb
sub
mov
jg
ds
xor
shlb
dec
pushf
pop
faddl
pop
jno
xor
ds
lea
or
pop
dec
es
fucom
cmp
push
inc
into
pop
dec
ficompl
es
loopne
add
and
mov
movsl
dec
jmp
lds
call
stos
pop
ljmp
push
cmpsl
sahf
or
mov
mov
fsubs
sbb
xchg
mov
pop
mov
push
mov
shll
sbb
lea
xor
inc
sbb
aas
mov
mov
es
cld
mov
loope
je
loop
lods
cmp
pop
and
adc
mov
add
xor
push
stos
mov
xor
shrl
loopne
fcomip
adc
iret
pusha
or
test
jne
les
push
lea
sub
gs
loope
insl
test
jbe
push
mov
lret
and
dec
xor
inc
ret
test
cmp
out
ficompl
jl
xor
sbb
sub
testl
aad
sbb
or
nop
std
dec
neg
loopne
jo
xchg
je
and
test
cwtl
adc
nop
addr16
ret
mov
cmp
icebp
jmp
mov
data16
sub
jp
in
push
jl
dec
pop
cmc
adc
loop
mov
push
scas
int3
cs
in
push
mov
pusha
cmp
add
push
mov
testb
in
xchg
sub
lcall
mov
js
mov
test
push
jno
stos
sub
outsl
sbb
bound
hlt
add
stos
mov
push
or
ja
fbld
xor
or
cmc
sub
or
imul
jbe
add
test
push
xchg
mov
and
add
push
cmpsb
inc
mov
sub
or
pop
sbb
dec
jl
inc
cmp
sbb
or
dec
xchg
scas
or
xchg
dec
mov
loope
pop
iret
mov
mov
popa
sti
push
xchg
scas
mov
jecxz
aam
or
sub
jo
cmp
jl
movsb
bound
jle
sbb
pop
or
rcl
mov
data16
rcrb
dec
es
or
js
add
dec
popa
sbb
dec
dec
scas
rolb
xor
movsl
add
lret
mov
push
inc
push
add
adc
inc
sbb
adc
or
filds
lods
inc
cmpsb
mov
into
movsb
hlt
sbb
ss
jo
sbb
jl
adc
sti
popa
or
mov
movsb
add
test
mov
or
mov
push
mov
inc
sbb
add
cmp
xchg
in
fs
inc
or
mov
adc
mulb
mov
or
adc
loope
ret
stos
xchg
in
pop
adc
cs
push
dec
mov
xor
dec
dec
adc
cli
addr16
shr
rcrb
unpckhps
in
test
testb
push
ret
shl
cmp
movsl
dec
mov
stc
add
test
dec
and
add
fs
aas
les
mov
imul
pusha
arpl
popl
jmp
lods
sarb
fcom
and
sub
xor
inc
in
pop
jmp
mov
pusha
lock
inc
sub
pop
inc
imul
or
in
push
mov
push
jb
insl
mov
ss
std
pop
outsl
arpl
adc
cmp
inc
cmp
xchg
push
outsl
inc
repz
mov
fcomi
insb
xchg
aam
jo
jb
pop
mov
ljmp
bound
in
inc
test
fwait
stos
ss
imul
ds
jle
jmp
insb
push
add
or
cs
dec
push
inc
cmp
sbb
cld
out
xor
and
jbe
idivb
incb
int
in
sarb
addl
push
inc
ret
sbb
adc
leave
add
jl
dec
ljmp
lock
repz
mov
or
call
jae
pop
call
adc
cs
les
shll
jg
push
pop
pop
xchg
xor
add
adc
stos
jecxz
mov
sub
pusha
std
aas
popl
and
aam
sbb
repz
sbb
fsubp
or
dec
inc
jo
mov
rol
pusha
mov
mov
xchg
pop
mov
or
lret
mov
shrl
sarb
mov
jnp
ret
xor
or
mov
popa
adc
mov
mov
imul
jp
lock
mov
rcll
push
cmp
or
or
stos
std
movsl
notl
sbb
add
inc
push
jb
icebp
in
jb
push
mov
pop
push
mov
in
call
cmp
adc
mov
ss
mov
mov
push
xor
and
daa
mov
lret
leave
sub
cmc
pop
pop
mov
fmuls
mov
mov
push
adc
rclb
test
popa
jecxz
mov
int
test
cli
lahf
pop
add
fistl
xor
adc
loopne
xor
int
lds
push
xor
ja
inc
jge
loop
test
test
stos
je
mov
add
adc
pop
push
cld
ret
insl
sub
cmpsb
out
nop
push
push
push
enter
fistl
imul
push
jecxz
mov
push
inc
fadd
and
out
rcrl
and
lock
subb
mov
cs
pusha
cltd
xchg
inc
jo
push
jecxz
and
pop
lcall
loopne
sbb
fmul
xor
adc
rcr
aam
shlb
scas
xchg
ror
mov
lretw
inc
pop
inc
mov
sub
pop
jmp
mov
dec
dec
cld
add
push
xchg
xchg
lret
mov
stc
jo
imul
sub
sub
nop
scas
inc
fwait
in
and
add
loope
repz
ds
insb
or
test
ret
sub
push
bound
clc
jae
dec
xchg
sahf
stos
mov
push
sbb
xchg
add
orl
cwtl
dec
leave
in
and
rcrw
stc
jb
inc
mov
jae
ds
clc
mov
adc
xor
sbb
and
inc
inc
out
roll
cmp
imul
mov
lods
mov
inc
scas
push
testl
cwtl
jmp
jle
mov
rcrb
in
adc
shrl
or
and
push
call
cwtl
mov
scas
jo
dec
and
dec
cmp
test
mov
jg
mov
push
dec
jnp
cmp
aaa
mov
stc
js
lcall
push
inc
inc
adc
gs
cmp
rcr
push
cld
cmp
mov
into
xchg
push
data16
pop
cmpsb
pop
fidivrs
mov
dec
flds
and
aaa
adc
fucomip
pop
movb
and
sub
xor
orb
ss
addr16
jbe
jae
jne
mov
mov
inc
cmp
push
mov
inc
incl
aad
in
pop
or
cmp
pop
push
loopne
fwait
loope
sbb
push
xchg
scas
loopne
outsb
in
or
js
inc
std
add
or
lcall
jp
pop
push
icebp
pop
ljmp
scas
mov
scas
cs
and
fmul
ss
jge
cmp
lret
xor
push
shrl
rcr
lcall
inc
mov
add
cmp
fs
into
movsb
popf
push
xor
inc
je
pop
pop
sbb
ret
pushf
push
jno
push
xlat
frstor
xor
inc
pushf
hlt
cmc
add
scas
clc
test
shll
lret
repnz
icebp
loop
pop
data16
ljmp
adc
or
jns
out
ret
mov
cmp
sbb
imul
push
push
scas
loope
push
fcoms
outsl
push
cmp
lcall
jge
cmpl
sub
mov
fs
pop
incl
movsb
add
mov
out
xchg
bnd
inc
sti
cmp
push
sbb
lock
sbb
les
sbbb
call
aaa
inc
mov
and
push
add
xor
jo
push
testb
jbe
mov
pushl
es
adc
call
push
mov
add
icebp
add
aaa
les
or
stos
mov
xchg
sbb
rolb
call
jl
cmp
or
jle
cld
lds
mov
js
lods
addr16
jp
pop
std
adc
mov
aas
sbb
idivl
xor
xorb
mov
pop
adc
xchg
lock
scas
xchg
ss
loop
aaa
outsl
cmp
add
pop
leave
adc
and
insl
arpl
cs
adc
or
add
mov
jne
cltd
sub
mov
inc
lea
call
std
push
aad
xor
dec
mov
pop
movsbl
cld
jne
inc
aam
outsb
jp
les
jo
xor
push
ret
cmp
jl
xor
xor
ret
lods
pop
gs
stos
outsl
cltd
cmp
add
adc
jmp
push
cli
out
stos
inc
pusha
ljmp
adc
pop
adc
es
mov
repz
xchg
in
or
cmp
test
sub
test
lock
sub
inc
add
jl
and
in
imull
jecxz
icebp
jmp
sub
fisttpll
pop
pop
cltd
xchg
imul
fwait
add
test
mov
and
fiaddl
lahf
mov
mov
sbb
les
call
clc
xor
pop
sbb
add
lahf
bound
pop
mov
xlat
out
cmp
fiadds
leave
sub
inc
inc
push
jg,pt
mov
jo
add
cmp
adc
and
hlt
shrd
jl,pn
pop
push
mov
fisttpll
aaa
decl
aaa
xchg
daa
xchg
hlt
dec
push
push
ret
mov
iret
xchg
test
icebp
ljmp
adc
in
mov
pushl
adc
push
jbe
je
sbb
stos
ret
mov
pop
aam
loop
mov
fwait
outsb
and
cmpsl
lcall
mov
push
xchg
lods
test
xor
ljmp
sub
add
sub
jge
aaa
inc
aad
jnp
sbb
mov
int3
mov
mov
gs
mov
popa
jne
call
loopne
fsts
lahf
std
repnz
mov
adc
or
adc
adc
push
dec
dec
lea
arpl
in
push
rorb
pop
rcl
clc
jbe
jge
or
mov
mov
subb
sub
mov
clc
push
or
aaa
rcr
mov
hlt
pop
loop
in
test
pushf
inc
fimuls
sub
sti
push
add
add
or
or
rcr
js
rcrl
push
push
push
inc
xchg
call
mov
lcall
test
lret
xor
imul
adc
xchg
rcrb
pusha
js
cmp
daa
repz
outsb
lret
dec
fdivrl
popa
fdivrs
sahf
push
inc
or
cmp
je
fsubl
enter
cld
xchg
adc
mov
push
push
pop
push
lods
ret
push
nopl
ljmp
mov
sbbl
out
faddp
jmp
mov
dec
nop
sbb
std
adc
shufps
pusha
xchg
movsb
idivl
inc
mov
loope
ljmp
xchg
ror
jecxz
cld
push
adc
shrl
and
sahf
fwait
xchg
fbld
sbb
das
sbb
push
mov
sbb
xchg
inc
xor
cld
sbb
and
cmp
orl
xor
jbe
cld
mov
rcrl
bound
aam
scas
xchg
nop
pushl
jecxz
adc
jb
lods
mov
shlb
std
es
scas
sbb
xchg
ljmp
jl
or
inc
jp
mov
jecxz
int3
push
jge
pop
inc
out
mov
outsl
pop
ret
cmp
or
xor
pop
mov
in
push
add
sub
jno
stos
aaa
lcall
aad
addr16
jo
mov
in
xchg
xor
fcomps
xchg
sbb
xor
jle
in
cs
adc
mov
aaa
jmp
sub
inc
das
ds
clc
cmpsl
stos
mov
adc
xchg
lea
xorl
mov
insb
inc
mov
mov
scas
xchg
add
mov
jb
shl
or
int3
push
pushf
ficomps
jbe
loopne
mov
cmp
sbb
daa
xchg
dec
dec
insl
adc
adc
loope
in
inc
repnz
jecxz
jo
imul
mov
jl
push
sub
add
clc
and
sub
sahf
sub
rolb
mov
lahf
test
mov
in
cmp
dec
stc
mov
mov
dec
pop
scas
xchg
aas
ljmp
push
cwtl
and
shl
ret
test
sbbl
shlb
insl
fcompl
xchg
idivl
int3
or
hlt
and
pop
iret
shl
mov
push
xchg
pop
popa
mov
xchg
pop
stc
je
iret
xchg
loop
jge
in
xorl
cmc
bound
scas
or
jl
push
pop
dec
sbb
stc
jg
test
fisttps
push
pop
lock
stos
test
or
out
xor
sub
aaa
jb
test
decb
xor
mov
and
std
sub
clc
add
inc
sub
enter
jecxz
cmpsb
mov
out
cli
jecxz
ja
cmpsl
push
out
stos
xor
jp
lods
jno
or
daa
mov
stos
loopne
adc
into
jle
or
push
dec
fdivl
addl
repz
scas
adc
cld
sub
or
mov
jbe
lret
out
cmpsb
fimuls
xor
mov
cmp
ret
lock
ja
push
and
pop
mov
mov
push
mov
insb
loope
jbe
xchg
and
inc
sbb
cmp
push
cld
das
xor
and
loopne
inc
or
test
fnstcw
pop
dec
jne
and
inc
pop
stc
pop
jl
es
inc
sub
mov
nop
push
cmp
mov
orl
jmp
fbstp
jle
dec
in
pop
aam
mov
aaa
in
ficoml
dec
scas
pminsw
and
pop
jb
xor
xorb
add
aas
or
or
addb
jo
clc
or
int3
jnp
inc
pop
mov
shlb
insl
mov
or
repz
out
add
and
nop
fdivrl
inc
clc
push
jg
add
mov
call
mov
inc
dec
pusha
dec
scas
das
and
loop
mov
mov
cmpsl
stos
cs
push
cmp
push
jg
mov
andl
js
jg
loop
jne
cld
dec
mov
jno
shll
pop
xchg
mov
add
enter
clc
dec
and
cltd
adc
popa
xchg
mov
mov
das
lock
rcrb
mov
or
jge
test
cmpsb
int3
sbb
in
test
test
test
daa
mov
std
in
outsb
mov
and
pop
fiaddl
push
dec
icebp
inc
sbb
lds
daa
hlt
out
scas
xor
and
psubq
int
or
leave
mov
mov
repnz
imul
scas
in
std
call
xchg
ret
or
movsl
rcll
test
sbb
cmp
and
outsb
cmpsb
fisubs
add
mov
inc
lcall
pop
cmpsl
add
inc
jno
rcrb
jbe
fstps
mov
dec
je
add
daa
push
mov
dec
pop
pop
push
mov
addb
ret
call
mov
rol
out
add
int3
xorl
imul
lahf
add
adc
pop
jp
mov
adc
lds
hlt
or
jl
out
sahf
add
pop
hlt
dec
cmp
push
scas
push
sarb
ja
or
cmp
xor
xor
mov
ds
or
xchg
lods
int
data16
xlat
push
ret
movsb
xlat
add
bound
in
pusha
adcb
aas
dec
push
pop
out
es
jns
pop
jae
aam
icebp
pop
das
addl
cmpsl
mov
popf
inc
imul
push
mov
xchg
and
adc
fildll
lods
push
aam
cmpsl
mov
jns
mov
xlat
cmpsl
xor
out
pop
int3
imul
test
xchg
xor
outsb
jmp
xor
scas
pop
sub
movsl
xchg
pop
sub
fsubrl
les
adc
mov
into
add
js
mov
lock
in
mov
in
jmp
sub
test
mul
add
inc
and
gs
ds
in
xchg
das
mov
loope
xchg
inc
dec
push
enter
or
out
ja
mov
dec
add
sub
adc
mov
mov
cmpsb
pop
out
or
or
sub
adc
in
out
fsubs
ss
and
pop
push
enter
push
xorb
pop
inc
jg
mov
adc
pop
dec
idiv
or
push
imul
xchg
nop
loope
sbb
push
mov
and
sub
negb
xor
add
adc
mov
pop
mov
mov
ss
cltd
cwtl
cmpl
adc
scas
pop
dec
push
push
in
dec
jmp
mov
mov
bound
xchg
inc
adc
stc
out
inc
xchg
in
mov
cli
mov
sbb
fs
dec
jae
ja
sbb
in
test
hlt
and
and
incb
andl
jno
pop
ljmp
mov
xchg
pop
xchg
fwait
lds
fldl
popa
jbe
adc
pushf
mov
fisttpll
adc
dec
scas
pop
ja
xor
pop
cmp
lahf
or
sbb
jge
cli
pop
xorl
cmp
or
push
ret
ljmp
daa
push
pop
or
mov
aaa
sub
imul
push
jg
rcll
cld
ret
inc
xor
xor
sbb
mov
outsl
xorb
movsl
inc
push
movsb
outsb
orl
add
jae
push
arpl
jne
push
rcl
sahf
mov
jmp
and
aas
in
mov
and
or
mov
mov
push
test
and
dec
fildl
push
push
jp
inc
sbb
shlb
lret
inc
sub
cmp
push
fldenv
je
xor
test
clc
lret
das
shll
dec
test
push
fwait
call
add
sbb
fmul
inc
rcrb
fs
scas
jne
mov
roll
cltd
push
bound
out
jne
rorb
lahf
add
xor
sbb
loope
test
and
in
lock
int3
sub
iret
scas
lret
daa
pusha
sbb
daa
aam
jno
jo
xchg
and
and
mov
add
scas
push
out
jecxz
lahf
mov
lods
rorl
stos
push
imul
mov
std
add
call
xchg
or
sahf
dec
loopne,pn
outsl
inc
dec
sbb
adc
arpl
hlt
cmp
ss
and
lds
dec
or
add
int
es
cmpsl
aam
fisttpll
xlat
enter
add
out
lea
fisttpl
jns
pop
push
sub
ja
cmp
test
jp
xlat
mov
add
shlb
xlat
call
jnp
and
stos
cmpsb
pop
pop
adc
xor
incl
lock
xor
lea
push
sbbl
pushf
lret
ljmp
into
xor
sbb
sub
xchg
jg
add
jecxz
add
add
mov
clc
aad
jle
ret
xor
call
lcall
ss
rolb
jle
out
in
pushl
push
sbb
mov
push
mov
or
mov
add
mov
aaa
push
cmp
into
dec
stc
jecxz
xor
fnstcw
cmp
push
mov
imul
jl
add
adc
or
or
mov
pop
pop
sub
pop
je
popa
jl
or
mov
push
stos
roll
push
out
jecxz
mov
les
les
dec
repz
pop
fisttpll
jmp
adc
adc
repnz
jae
add
sub
add
pop
or
inc
rorb
mov
cmp
stc
mov
nop
or
cmp
cwtl
lods
cmc
inc
adc
stos
adc
mov
mov
sub
dec
lds
jo
xlat
and
xor
xor
adc
loope
jae
pop
adc
mov
adc
or
mov
sub
xchg
dec
lods
scas
cmp
sbbl
inc
fmuls
mov
xchg
mov
inc
imul
out
push
mov
shl
adc
push
push
sbb
or
cvttps2pi
mov
xor
imul
inc
push
lock
and
inc
xchg
xlat
loopne
std
adc
push
adcb
push
fsubs
clc
movsb
mov
test
ljmp
jbe
xor
scas
xchg
aas
shrb
mov
rcr
add
and
das
dec
notl
daa
xchg
and
insl
mov
jb
mov
jmp
mov
iret
js
jb
ljmp
fwait
cmp
addr16
jecxz
push
mov
loopne
lret
lahf
arpl
call
add
sub
and
das
outsl
or
mov
mov
dec
pop
es
push
in
stc
aad
loopne
pop
sub
mov
addb
ret
lds
pop
push
icebp
inc
hlt
xor
mov
das
add
fistpl
lds
adc
inc
add
in
sub
dec
cmpb
or
mov
xchg
or
ret
ret
cmp
mov
mov
inc
test
sub
hlt
subb
jbe
inc
insl
call
and
xchg
cmpsl
sbb
xchg
xlat
lcall
int3
xor
dec
mov
pop
jae
add
iret
out
shlb
stc
push
ret
cmp
inc
gs
sub
mov
pop
pop
mov
sub
dec
mov
cmp
xchg
cltd
test
mov
sti
mov
mov
cmp
in
inc
inc
and
xor
cmp
mov
sti
popa
inc
xorl
mov
cmp
mov
fimull
jp
jg
loope
ss
sub
lea
sarb
mov
pop
shll
fwait
push
add
mov
lock
cld
xor
dec
mov
mov
sbb
jo
dec
jnp
cmp
loop
das
stc
gs
inc
mov
fcmovb
sub
xcrypt-ofb
cmpsl
insl
sub
sbb
push
pop
add
adc
mov
repnz
bound
stos
mov
repnz
test
pop
fst
xchg
daa
aaa
imul
rcrl
lcall
and
push
sbb
mov
jge
test
loop
lret
inc
push
out
mov
loopne
mov
ljmp
or
orl
test
xlat
dec
mov
idiv
sub
or
or
test
push
and
mov
arpl
lfs
jg
push
jp
fdivr
stos
test
adc
or
loope
xchg
adc
ljmp
setb
add
in
cmpsb
adc
data16
mov
dec
sbb
mov
mov
out
std
adc
and
arpl
xchg
and
fisttpll
shll
lea
cmp
or
cmp
and
jecxz
aam
sbb
test
cli
shl
xchg
lahf
pop
pop
push
mov
or
push
das
jp
stos
add
or
push
add
imull
pop
cmpsb
dec
cwtl
lahf
or
dec
fmul
add
mov
push
xor
inc
xchg
inc
bound
fs
ja
xor
xchg
out
sbb
cmp
or
xchg
jb
stos
pushf
and
mov
mov
loope
mov
imul
lcall
jno
jae
icebp
sbb
iret
mov
mov
addb
cwtl
xor
dec
fistpll
call
ss
pop
ret
inc
jns
out
out
loope
cmpsb
dec
addr16
mov
notb
cmpsl
or
jp
into
test
inc
push
pop
aam
je
jmp
or
or
xor
inc
jl
xchg
subb
repnz
dec
aas
add
push
dec
je
cmp
addr16
aad
xchg
out
push
sub
fisubl
jp
jg
ja
pop
pop
das
push
mov
sbb
sbb
cld
xor
sbb
aaa
sub
sahf
push
dec
popa
sbb
paddusw
inc
rcr
push
mov
sbb
cmpsl
sbb
lods
or
mov
out
pop
lds
push
or
mov
jae
push
mov
es
pop
push
hlt
cmpsl
sbb
push
add
or
push
pop
mov
mov
cld
lods
pusha
addr16
inc
mov
ss
inc
popf
and
ret
insb
add
cmc
lahf
mov
xchg
push
imul
jmp
push
lret
jle
lock
ss
fwait
lret
iret
and
jg
jmp
cmpsl
das
les
push
jg
ror
icebp
mov
sbb
push
adc
add
ret
jmp
loope
add
mov
cmpsl
or
fs
shlb
into
loope,pn
push
loop
mov
mov
mov
xchg
jo
adc
repz
sub
loope
leave
bound
dec
cmp
popf
mov
inc
inc
std
js
xchg
mov
inc
jbe
xor
incl
mov
scas
pusha
lcall
mov
incl
inc
jae
cmp
push
add
xchg
sbb
das
or
rcr
or
and
push
jmp
xor
cwtl
sub
mov
sahf
add
incb
jl
inc
mov
outsb
sub
jle
sbb
sbb
cld
mov
lret
adc
push
and
cmp
mov
or
ljmp
mov
push
dec
imull
call
add
int3
mov
cmp
inc
jmp
data16
jae
pop
loopne
rcrb
xchg
pop
cmc
and
and
xchg
adc
push
sti
hlt
jmp
incl
filds
test
pop
fisttpl
sub
jecxz
ja
jl
adc
fwait
rorb
add
mov
mov
lock
ret
aad
cmpsl
sub
sbb
add
leave
pop
in
xchg
mov
cld
out
ja
inc
inc
push
fs
repz
mov
loop
pop
orl
pop
popf
es
call
ja
mov
pusha
add
in
repnz
push
and
loop
add
les
or
inc
mov
jp
cmp
adc
sarb
sbb
call
pop
je
dec
or
stos
stos
sbb
sbb
rorl
mov
test
add
sti
aas
pop
fsubp
popf
lds
into
popl
loop
mov
jp
xchg
jle
push
cmp
push
lcall
xor
xlat
clc
call
je
sbb
jmp
fildl
mov
jb
or
adc
mov
push
sub
add
addr16
inc
rorb
or
cld
sub
jle
add
inc
adc
push
and
adcb
inc
lret
mov
push
mov
loope
push
insb
daa
add
test
pop
sub
leave
lahf
hlt
dec
loopne
push
icebp
repz
adc
adc
mov
and
fs
ja
adc
sbb
jl
stc
xor
and
inc
mov
mov
icebp
push
call
dec
outsb
divb
leave
outsb
dec
gs
pop
std
add
mov
shll
cmp
mov
ret
and
mov
shrb
sbb
movsb
adc
pushf
out
pop
ret
lret
je
je
adc
xchg
lock
popf
decl
mov
out
pop
push
ds
sub
mov
adc
inc
jge
add
pop
pop
js
test
push
push
adc
push
cltd
push
lahf
inc
ds
lea
add
ja
push
pop
cli
bnd
ss
test
jecxz
adc
ror
rorb
sub
popf
pop
mov
cmp
rclb
inc
sbb
pushl
mov
repnz
push
aad
cmc
inc
repz
icebp
pop
imul
arpl
mov
jae
mov
icebp
inc
arpl
popf
mov
rorl
rclb
adc
xchg
lods
loopne
jl
push
icebp
push
adc
out
ret
lret
mov
jns
stos
dec
test
out
lds
add
push
jnp
xchg
sahf
lret
loopne
or
dec
decl
pop
das
shll
sbb
les
hlt
adc
out
cli
xchg
push
mov
sub
ds
adcb
mov
les
std
loop
es
mov
lret
ret
outsl
cli
inc
cwtl
pop
clc
in
sbb
out
inc
out
add
jns
mov
sbbl
jle
pop
mov
in
inc
or
sub
shlb
shrl
jp
mov
xor
js
and
jle
sete
emms
cmpsl
add
shrl
and
clc
lds
xchg
pop
cmpsl
cld
jnp
and
mov
inc
adc
negl
or
in
xor
roll
sub
sub
dec
flds
cld
or
stos
les
xchg
call
sets
ss
sub
cli
adc
enter
pushf
adc
push
pop
push
sar
pop
std
mov
or
mov
sbb
rcl
roll
cltd
mov
cs
add
and
xchg
add
enter
xbegin
ja
jmp
mov
jl
pop
mov
pushf
aas
dec
mov
pusha
pushw
ljmp
jmp
test
mov
gs
fsubl
cmpsb
subl
adc
movsl
push
rcrb
fwait
sahf
aad
nop
faddl
imul
or
pop
xor
js
fisttpll
or
js
pop
imul
movsl
aas
mov
insb
mov
ror
bound
call
push
mov
andb
ja
inc
ret
out
std
lock
or
pop
dec
add
inc
in
ljmp
test
orl
cld
lea
jbe
dec
jmp
dec
aaa
nop
xor
stos
or
jae
or
out
scas
or
iret
inc
pop
xor
int3
mov
pushf
rcrl
xor
movsb
pop
xor
sahf
xchg
cmp
xor
shll
cmp
sbb
push
cmpb
pop
sbb
mov
jg
add
or
mov
stc
mov
push
in
orb
lea
jecxz
lock
dec
sub
xor
int
loopne
mov
out
xchg
and
xor
cmp
sbb
mov
sbb
je
stc
and
pushl
sbb
sahf
cmp
int
and
nop
dec
mov
mov
lret
and
imul
pop
sti
call
xor
nop
jl
inc
call
dec
icebp
dec
ljmp
add
mov
xor
push
enter
fisttpll
sbb
movsl
incl
out
adc
xorl
cmc
mov
fwait
sbb
mov
lds
push
cmp
popa
js
mov
and
mov
pop
cmpsl
pop
ret
mov
mov
mov
and
insl
movsb
jns
aaa
sbb
xor
les
repz
clc
icebp
loope
mov
mov
push
mov
sbb
or
or
clc
pusha
mov
and
xor
dec
fisttps
inc
aaa
push
cmc
cli
ret
daa
pop
push
push
xchg
test
xlat
mov
mov
pop
test
pop
mov
add
test
add
test
rolb
and
sar
inc
add
push
pop
incl
sbb
inc
mov
testb
rorl
jmp
pop
dec
mov
lock
scas
test
test
and
and
xor
pop
in
mov
add
or
daa
push
mov
push
fcmovnbe
add
mov
movsl
shrb
mov
mov
sub
rcl
jbe
xor
daa
mov
inc
adc
aas
ljmp
xchg
sub
lahf
dec
aaa
inc
cmpsl
pop
add
pop
shlb
xchg
adc
jb
loopne
mov
fwait
adc
ss
push
mov
out
mov
sbb
outsl
xchg
shll
outsl
add
rolb
and
mov
jbe
jo
pop
or
jo
mov
pushf
jns
rorb
out
push
call
jmp
enter
js
jg
or
loop
gs
lods
sub
lcall
mov
aaa
pop
push
mov
sarl
mov
add
xchg
push
pusha
pop
insb
lahf
test
clc
xlat
pop
xor
outsl
or
jle
lock
inc
and
aam
adc
mov
pop
mov
pop
loope
cmp
mov
lods
adc
or
pop
roll
jp
negl
push
aaa
jb
mov
push
mov
mov
lock
add
ret
pop
lock
mov
jmp
sub
outsl
pushf
mov
adc
cmpsl
xor
pop
jne
xor
mov
mov
mov
mov
icebp
mov
gs
loop
icebp
std
adc
adc
popa
ljmp
dec
push
push
adc
adc
ja
icebp
fwait
cwtl
in
fimuls
hlt
adc
out
cmpsb
dec
into
stc
cmp
cmpsl
inc
cs
mov
and
add
jg
aas
dec
aam
adc
loopne
push
push
dec
mov
sub
ja
xlat
mov
out
mov
sti
punpckldq
xchg
jp
xchg
add
xchg
fcompl
xchg
sahf
movb
fldl
fdivrl
push
add
out
movsl
incl
jge
pusha
push
adc
xchg
subl
push
fbstp
es
pop
lcall
test
push
cmp
xchg
sub
nop
addr16
inc
outsl
movsb
ja
ret
shll
adc
aaa
insb
jbe
icebp
mov
add
adc
mov
cltd
lds
xchg
or
xor
add
or
or
cld
lcall
lea
out
lock
cmp
out
jp
mov
pusha
addl
cwtl
sub
cmpb
xchg
adc
mov
or
mov
inc
mov
aad
mov
jg
push
divb
aas
jo
call
or
adc
push
push
adc
rolb
std
rorl
pushf
lret
out
push
pop
nop
adc
cs
loop
mov
fidivrl
or
inc
sbb
loope
std
or
mov
xchg
gs
adc
aad
clc
ja
cmp
out
xchg
cld
mov
cmp
lcall
clc
in
lods
cwtl
popf
enter
cmp
push
pop
rcl
xlat
adc
inc
or
cld
clc
call
loopne
mov
xor
mov
shlb
and
es
mov
in
hlt
or
dec
je
dec
inc
int
fldenv
or
lahf
xchg
or
enter
outsl
xor
mov
mov
jl
scas
add
mov
push
mov
jle
fwait
dec
into
cld
fcmovnbe
outsl
test
testb
xchg
roll
or
ret
push
outsb
add
lahf
cmp
orb
out
sbb
add
into
push
je
rcll
add
adc
cwtl
jp
in
jne
test
cmp
out
mov
loop
jno
xchg
and
adc
push
adc
jb
test
sbb
mov
cmpsb
ds
call
xlat
sbb
loope
mov
add
lret
icebp
test
jg
add
sbb
cltd
cmp
scas
loope
xor
dec
jp
cld
dec
lea
and
add
sbb
sbb
filds
push
or
sbb
notl
mov
in
inc
outsl
lock
ret
push
aas
scas
and
jb
or
adc
xchg
add
imul
sub
xor
jg
decb
push
pop
repnz
adc
cmp
outsb
test
mov
mov
fldt
cmc
stos
out
xor
and
mov
jo
cmp
xor
jle
fnsave
sbb
in
ja
mov
or
ret
dec
ffree
push
pushf
fldt
xchg
insb
sbb
sub
add
ss
and
aas
mov
inc
push
dec
cmp
enter
mov
jl
cmp
fcom
adc
add
push
pushf
ficompl
sub
scas
lret
ja
push
cli
pop
out
insl
fadds
test
cmp
das
stos
std
mov
sub
jo
lock
lock
inc
pop
xchg
adc
jbe
jno
ret
pop
xchg
sbb
jae,pt
cmp
mov
jecxz
lds
std
adc
and
mov
inc
daa
sub
aaa
out
dec
mov
pop
dec
sbb
and
cmp
mov
adc
or
stc
push
cld
inc
loopne
add
xor
inc
pop
dec
loope
sbb
test
outsb
pop
icebp
aas
jl
pushf
sbb
ret
mov
jns
test
sbb
cwtl
dec
adc
add
mov
sar
imul
in
push
cwtl
add
mov
dec
imul
jo
or
repz
inc
fists
lret
sbb
push
js
push
xchg
pop
lea
mov
test
test
enter
add
leave
cmp
lret
jge
pop
dec
cmpsl
inc
ds
or
mov
mov
pop
sbb
lods
popf
scas
xor
xor
mov
or
dec
pop
ret
add
inc
pop
testb
mov
xlat
pop
mov
adc
insl
mul
dec
adc
shrb
nop
and
push
sbbl
add
adc
loop
cmp
lcall
sub
pop
sahf
xchg
pop
jmp
sub
cmp
adc
roll
jmp
xor
inc
loop
daa
cs
test
add
gs
rclb
clc
xchg
dec
sbb
addb
pop
or
lock
stos
or
lods
cmp
push
pop
xchg
cs
push
or
mov
das
cmp
pop
or
cmp
test
pop
in
jp
aaa
gs
loop
sub
pop
xlat
mov
pop
pop
mov
sub
push
clc
xor
fcoms
gs
loope
dec
cmpb
outsl
push
xchg
sub
cwtl
sbb
test
mov
aaa
mov
pop
arpl
ds
and
jg
andl
xchg
inc
and
mov
push
js
or
in
pusha
xchg
imul
sbb
or
in
and
ds
out
xchg
push
and
mov
pop
sub
scas
cli
xor
bound
cmp
out
cmp
cmp
cltd
push
sub
lahf
sub
pop
xor
mov
and
and
test
xchg
xor
xchg
cmpsb
mov
push
stos
fcoml
adc
lods
addb
sbb
mov
out
xor
pop
ret
and
push
scas
inc
lcall
mov
mov
icebp
ror
arpl
push
repz
mov
imul
cli
xrelease
shlb
dec
jo
aad
inc
cmc
mov
in
xchg
sbb
scas
inc
rcrl
adc
xchg
fnstsw
fcmovu
test
hlt
mov
sahf
mov
ds
leave
lret
fldt
popf
mov
or
gs
gs
mov
aaa
push
mov
xchg
aam
push
scas
cmpsl
xor
adc
sbbb
and
rol
xchg
or
imul
xchg
add
jo
push
push
scas
cld
jecxz
jg
insb
xchg
ss
mov
addr16
xchg
movl
loope
clc
ja
add
mov
incl
hlt
or
mov
les
bound
test
push
rclb
mov
push
fiadds
adc
aas
popf
test
add
loope
fwait
pop
and
hlt
add
test
daa
or
bound
push
pushf
lret
and
push
nop
pop
pop
insb
sub
add
decb
repz
xchg
xor
and
pop
cli
rcl
loopne
idivb
sbb
sahf
clc
loopne
push
arpl
notl
repz
add
jmp
clc
sbb
push
cld
insl
push
pop
push
lods
jno
jmp
cmp
jle
incl
inc
pushf
xchg
nop
addl
push
fwait
mov
xor
mov
call
and
stos
cmp
dec
test
adc
clc
cmp
cmp
iret
shlb
xchg
arpl
ljmp
js
fcomps
movsb
stos
or
aaa
int3
xlat
or
inc
xor
decb
scas
into
rolb
fsubs
push
bound
add
popa
daa
sbb
lods
or
sbb
or
cmp
in
xor
andl
cli
push
push
mov
fmuls
inc
test
inc
mov
aad
rcl
pushf
add
adc
add
jmp
dec
cmp
cmp
sub
adc
xchg
das
popa
mov
mov
call
imul
loope
addr16
cmpsl
adc
add
adc
sahf
sbb
pop
add
enter
add
loop
pushf
pushf
popa
in
and
sub
push
pop
xor
int3
stos
movb
ret
mov
xchg
push
hlt
cmpsl
inc
mov
pop
or
inc
les
or
adc
jns
nop
rorl
adc
hlt
and
push
shll
jg
stc
add
mov
add
pop
and
cmpsl
xchg
adc
cwtl
outsb
arpl
dec
sbb
aad
inc
cmpl
mov
jl
mov
std
fwait
outsb
iret
push
cli
into
mov
mov
pop
clc
pop
adc
xor
pop
xor
jg
jmp
lcall
rorb
jmp
iret
mov
movsl
fsubs
mov
lea
addb
jl
mov
ljmp
clc
std
lcall
daa
push
or
jp
std
mov
std
cmp
insb
cmp
inc
incl
cld
mov
or
pop
shrb
jmp
inc
cmc
pop
mov
movl
sbb
sbbb
gs
popf
loopne
add
jae
ds
les
pop
inc
jle
test
fiaddl
mov
sbb
imul
sbb
in
sbb
jmp
test
ret
sbbl
push
adc
call
ljmp
cmp
add
fstl
sub
xchg
test
mov
daa
mov
in
fisubrs
mov
out
cwtl
cmp
xchg
inc
out
sbb
inc
xorl
pop
daa
mov
in
call
push
insb
dec
and
and
mov
loope
out
test
or
outsb
decl
adc
mov
mov
icebp
mov
jg
outsb
inc
sub
xchg
pushf
fcmovu
push
cmc
or
jp
lock
adc
loope
sti
lcall
les
cmp
nop
push
and
icebp
andl
adc
outsb
mov
fists
mov
shll
enter
fadds
fisttpll
lds
je
mov
iret
rclb
push
push
cmp
dec
jmp
enter
add
mov
nop
mov
xchg
fimuls
cld
cmpsb
imul
inc
push
ficomps
je
cmc
hlt
xor
inc
cmpsb
jmp
or
dec
lods
mov
dec
loop
add
xor
adc
mov
jle
adc
add
add
cmp
leave
pop
clc
xor
and
or
jle
fwait
call
sbb
jg
xor
add
int3
xor
popf
lods
push
push
jg
xchg
out
das
ds
jl
rolb
imulb
or
pop
std
stos
incb
cmp
fildl
dec
cwtl
gs
in
sbb
inc
jns
dec
mov
xor
cmp
or
stos
test
cmpsl
daa
xchg
cmp
mov
daa
mov
xor
mov
repnz
or
aam
push
icebp
data16
pusha
pusha
mov
sbb
sarb
adc
or
xchg
or
dec
insl
int3
loop
cmp
push
insl
add
jns
outsb
aas
lret
or
sub
fadds
mov
and
adc
mov
pushw
jl
jno
or
call
cltd
pop
fisttps
push
inc
pop
loopne
dec
dec
test
dec
and
inc
jl
cmp
test
dec
mov
insl
or
cmc
mov
dec
stos
push
hlt
pop
ljmp
test
cmp
imul
rorb
call
int3
pop
add
jae
pop
pop
shll
addl
loopne
xor
fadd
dec
push
pop
ljmp
xor
mov
cmp
sbb
mov
xabort
das
cmp
mov
lea
js
testb
jns
xor
push
jecxz
and
aad
pop
xchg
jge
bndstx
or
cmp
push
jb
mov
or
rclb
pop
jge
mov
daa
cmp
adc
pop
movsb
mov
test
push
add
jbe
and
mov
out
sub
xor
in
cld
jmp
andl
cwtl
in
mov
add
in
xchg
rcrb
in
lock
jecxz
int
jne
ror
int
inc
and
adc
hlt
cli
aam
cltd
cmp
fdivr
cmc
or
gs
push
les
inc
adc
sub
add
cmp
je
or
popa
rcl
push
stos
js
sub
cld
jns
pop
cmpsl
lods
inc
lods
sbb
inc
sbb
cmp
xor
pop
adc
xor
es
fisubl
outsl
scas
cmp
adc
adc
sub
fcoms
shr
out
dec
xchg
es
loop
adc
sub
mov
xlat
outsb
ficompl
cmp
test
mov
neg
inc
arpl
rclb
fucom
push
or
cltd
cwtl
dec
aas
scas
enter
aas
mov
iret
sbb
ljmp
adcl
std
adc
adc
jnp
pop
sti
jge
push
push
pop
mov
push
nop
dec
push
aaa
adc
mov
rcrl
aam
pusha
xchg
cwtl
cmp
es
and
pop
dec
icebp
dec
dec
je
sub
push
dec
mov
xchg
lret
mov
aaa
sbb
inc
cmp
int
sub
inc
minps
cld
push
arpl
into
out
xchg
sub
bound
push
inc
daa
mov
add
aas
xor
pop
icebp
sub
sub
ss
and
xor
decl
icebp
movsb
inc
pop
sub
push
mov
xchg
rcl
adc
shlb
add
in
or
test
mov
imul
rcrb
movsb
pop
negl
decl
into
lea
pusha
mov
popf
push
inc
sbb
outsl
inc
ds
xorl
mov
inc
jg
loopne
xor
cmp
xchg
xor
or
or
pop
loop
rclb
mov
in
fcmovbe
and
mov
ss
pop
nop
xchg
mov
sub
pop
mov
or
les
in
pop
dec
rcr
movb
insl
mov
or
inc
es
or
rcrb
movsl
call
adc
or
add
push
mov
sbb
jmp
mov
push
loope
mov
das
inc
adc
xor
dec
jp
fisubl
lock
inc
and
insb
xor
mov
or
insb
loope
icebp
or
testl
and
push
fcmovne
in
mov
mov
xor
aam
test
pop
mov
sbb
incl
fldl
addl
cmp
sbb
or
sti
aam
fwait
inc
pop
sbb
sahf
xor
lret
int3
nopl
aad
sbb
xchg
cli
fs
outsb
and
lock
or
xor
call
inc
xchg
mov
in
push
jbe
sub
add
inc
push
pop
std
bound
hlt
xor
dec
outsb
je
jno
xorb
or
rcrb
push
or
xor
adc
imul
pop
stos
sbb
sbb
push
das
les
divb
loopne
push
xchg
sbb
or
mov
jae
mov
lahf
test
jb
pusha
fdivrs
or
rclb
xchg
sbb
sub
sbb
inc
ret
jb
sub
pop
stc
mov
xlat
dec
loopne
leave
cmpb
adc
jae
lods
pop
push
push
std
nop
lock
xchg
dec
sbb
scas
shrl
adc
leave
or
xor
and
sbb
dec
xchg
xchg
dec
adc
mov
pop
push
cmpsb
pusha
sub
jns
lock
mov
pusha
or
hlt
mov
add
fdivrs
xor
inc
sbb
loop
aam
sbb
enter
xor
cli
lock
mov
mov
sbb
andb
or
inc
add
xor
sarb
stos
jp
adc
jle
cli
negl
inc
clc
loopne
xchg
pop
sbb
pop
xor
add
xchg
mov
add
cwtl
js
cli
jb
loopne
sub
mov
pushf
mov
push
test
jns
xorl
test
call
inc
dec
mov
adc
sbb
je
testb
cmpl
jle
mov
scas
jg
pushf
dec
dec
inc
adc
cmp
lahf
and
push
inc
xchg
enter
mov
adc
out
add
jge
sbbb
dec
in
dec
or
movsb
js
cmp
aam
jo
sub
dec
jle
cmpsl
jge
orl
jecxz
insl
inc
ja
push
push
cmp
pop
rcrb
sahf
imul
ljmp
mov
pusha
pop
jecxz
jae
jo
out
sbb
mov
out
pop
je
lret
mov
movsb
jae
aad
mov
pop
ret
add
sbb
push
imul
mov
jle
sbb
mov
mov
cmp
mov
jo
sbb
and
or
pop
jo
mov
daa
daa
out
pop
test
cli
adc
or
rcl
and
sbb
jle
mov
leave
jae
adc
sub
xchg
or
call
fwait
ret
rcr
lock
pop
push
jo
adc
xchg
lds
test
mov
and
or
xor
push
mov
outsb
mov
xor
mov
jno
pop
lock
lods
mov
cmp
pop
pop
mov
ds
sahf
mov
std
popf
icebp
adc
ret
inc
stos
ja
std
xchg
test
mov
push
pusha
cld
mov
insb
jno
xchg
mov
cmp
sbb
sub
and
jecxz
sahf
bound
pop
pop
movsb
ja
aam
cmp
mov
imul
pusha
inc
mov
xchg
pop
test
sbb
mov
jmp
inc
jmp
sbb
and
loopne
add
orb
adc
pop
fmuls
jg
lcall
out
sbb
lock
std
push
faddl
outsb
shrl
and
xchg
push
or
add
roll
test
sbb
les
xorw
mov
push
roll
or
adc
je
inc
jle
dec
mov
test
push
dec
xchg
in
xor
scas
lock
sub
and
aam
loopne
dec
add
movsb
stos
inc
and
int
cmpsl
jb
rclb
aad
test
incb
je
jl
push
jl
subl
cmpsb
adc
or
out
incb
sub
adc
aas
push
and
dec
jnp
dec
into
ror
inc
out
rcrb
mov
incb
mov
and
loopnew
mov
mov
rol
push
xor
addb
imul
jns
into
inc
cmp
std
adc
popa
xor
decb
pop
fnclex
shrb
rcrl
scas
or
pusha
push
fisttpl
jge
call
lea
ja
add
add
sub
xor
test
cmpsl
decb
inc
xor
or
or
aam
ret
push
and
jo
dec
fnstsw
sbb
lahf
adc
push
xchg
sub
cmp
pop
jmp
int
ja
add
and
inc
xor
or
rcr
in
nop
aas
mov
idivl
call
adc
repz
jae
dec
and
enter
aas
fisubrl
fsubs
mov
fldl
jl
inc
fs
mov
imul
lahf
popf
filds
mov
mov
nop
mov
lods
inc
xor
mov
sub
add
and
cmpsl
mov
test
mov
cld
mov
push
out
cmpl
push
in
aam
ja
add
pop
stos
push
lds
das
ret
xchg
pop
fistl
mov
xchg
xchg
add
dec
jne
cmpsb
aaa
sub
add
and
mov
sub
icebp
cmpsl
iret
inc
cmp
test
out
jbe
push
enter
test
add
subb
inc
or
pop
inc
xchg
push
mov
shll
pop
mov
incl
insb
pushf
fdiv
or
ljmp
or
stc
scas
or
cmp
add
test
push
ret
xor
adc
and
pop
call
outsb
mov
pop
adc
loope
lahf
mov
sti
nop
les
cmp
shlb
mov
repnz
shrl
and
ds
ret
jno
pop
mov
jns
je
pop
inc
ret
pop
mov
out
cli
shlb
mov
jp
mov
push
xchg
adc
cltd
jl
or
jg
and
fmul
push
fimuls
repz
pop
ss
repnz
out
pushl
sub
loop
test
add
jg
mov
mov
scas
hlt
sbb
scas
jo
loope
mov
add
in
cmp
lret
es
lahf
aam
aas
jns
cmp
cmp
add
flds
push
xorb
push
pop
adc
std
and
mov
and
mov
pop
dec
nop
jbe
mov
add
mov
push
faddl
decb
push
aaa
in
and
rolb
mov
xchg
loop
inc
lcall
mov
dec
or
xor
xchg
xchg
mov
xchg
push
add
jbe
enter
rcrb
jecxz
ljmp
xchg
xor
jne
push
mov
add
add
addr16
movzbl
dec
pusha
in
cmpb
or
repnz
lahf
push
negl
pop
push
js
scas
sar
mov
inc
cmp
mov
cmp
mov
out
mov
jg
ss
lods
sub
sbb
sub
dec
jg
inc
or
mov
js
and
out
stos
mov
push
incl
and
sarl
inc
lcall
in
loope
add
cmpsb
cmc
ss
arpl
rolb
mov
and
jb
icebp
adc
popa
lods
aad
xor
push
mov
cli
push
fnstcw
shl
add
or
pop
jne
popa
inc
inc
iret
icebp
push
psllw
pusha
pop
icebp
mov
mov
pop
xor
mov
add
xor
and
ret
xchg
rcl
mov
scas
orl
ljmp
inc
mov
add
sbb
notb
or
subb
fisubs
mov
push
fcompl
sbb
push
inc
fcmovbe
dec
sub
cld
jo
pop
mov
stos
into
dec
shlb
sbb
pop
push
mov
adc
pusha
and
mov
sbb
lock
add
pop
pop
nop
aas
rorb
mov
add
xchg
mov
lock
dec
or
out
pop
sbb
push
ss
or
std
pop
adc
lock
sbb
shrl
adc
or
add
pop
test
push
dec
jp
jle
les
cmpsb
nop
out
lods
clc
fcom
inc
sub
mov
les
sbbl
push
int3
adc
xor
adc
ds
movsb
xor
jecxz
mov
cmpsl
scas
cs
push
pop
and
xor
and
add
lods
pop
jecxz
call
or
cmp
add
adc
mov
mov
in
lds
inc
sbb
fwait
adc
scas
addr16
inc
popa
mov
out
fcoml
arpl
enter
xchg
ret
aam
inc
shl
cmp
pop
loopne
loopne
jne
mov
pop
pop
pop
cld
ret
lea
mov
stos
std
sbb
push
push
fimull
mov
fldl
and
and
cmp
or
imul
xor
adc
add
pusha
push
inc
push
inc
lret
lretw
add
mov
xchg
jbe
std
aad
mov
jmp
adc
pop
sbb
nop
inc
sub
mov
jnp
jbe
or
loopne
pusha
roll
ds
mov
mov
bound
xor
xchg
rolb
imull
mov
xchg
xor
push
lcall
xor
roll
sarl
clc
push
aam
jmp
jle
push
mov
shl
mov
loop
pop
lcall
mov
dec
call
lods
mov
add
sub
int3
pop
out
lahf
sbb
push
and
sbb
ss
std
arpl
dec
push
stos
leave
fimull
mulb
lret
pop
and
lcall
inc
shll
dec
cmp
or
loop
lret
mov
jg
xchg
cmp
daa
sbb
push
int3
or
pop
sbb
test
push
jmp
das
ljmp
stc
jl
pop
into
rcrb
mov
pop
xchg
and
movsl
andl
cli
xor
ljmp
rolb
mov
hlt
or
or
out
jmp
subb
scas
in
ljmp
mov
or
pop
mov
xchg
popa
arpl
add
movsb
xchg
push
ror
jp
cmp
in
push
or
pop
lea
idiv
mov
clc
fdivl
dec
xchg
and
sub
aaa
daa
pop
xor
cmp
jl
mov
test
fnstenv
jle
adc
cmpsl
sub
add
test
add
mov
lods
xor
lock
and
das
in
adc
jg
fidivrs
push
or
cmpxchg
xchg
lahf
sub
jecxz
std
out
sahf
outsl
out
ror
sub
enter
jo
pop
mov
adc
pop
adc
fs
mov
ds
sub
jns
std
push
jmp
push
leave
lods
inc
das
pusha
inc
jae
xchg
or
sbb
pop
js
push
movsb
xor
mov
roll
dec
call
add
push
push
mov
jno
or
ss
dec
mov
pop
in
push
popa
mov
or
dec
or
out
cltd
mov
cmp
or
xchg
mov
xchg
mov
xchg
adc
dec
sbb
lret
clc
or
test
mov
out
add
in
ja
mov
inc
jo
lock
cmp
xor
stc
das
rclb
add
aaa
out
pop
scas
insb
enter
adc
xchg
sbb
inc
adc
mov
andb
addl
push
es
push
cmc
push
inc
addr16
xor
sbb
push
psubsw
xchg
add
iret
aas
cmp
jb
dec
xor
cli
stos
fisubrl
pop
clc
fmuls
inc
leave
xchg
mov
lret
mov
cmp
pop
mov
and
pop
cli
mov
aam
push
or
loopne
adc
pop
outsl
mov
push
lock
rcll
out
ja
mov
cltd
dec
lcall
lea
ret
clc
sbb
xor
in
sbb
jp
test
int
lahf
shrl
movsl
inc
inc
subb
rol
jmp
mov
or
sbb
mov
xor
dec
dec
mov
xchg
cmp
das
add
ds
jnp
testb
jg
fimuls
mov
ja
iret
sahf
mov
popf
mov
push
xor
cmpsb
pop
call
lret
addb
sbb
inc
incl
sub
add
into
pmaxub
cltd
jg
leave
pop
out
xlat
sahf
lock
adc
ljmp
and
inc
mov
cwtl
nop
lret
inc
scas
sbb
lea
test
clc
mov
cltd
dec
mov
lret
stos
adc
out
in
adc
pop
xor
pop
enter
and
lcall
iret
iret
mov
loop
jnp
loop
xor
mov
mov
add
sarl
xor
scas
negl
aas
push
jle
hlt
push
or
ss
mov
mov
push
cli
add
jmp
sub
out
jne
loope
mov
subl
mov
inc
js
mov
hlt
lds
das
sbb
inc
cmpsl
aaa
sar
xor
lea
mov
out
aaa
jns
sub
fwait
fwait
out
jge
rcrb
pop
or
lahf
sbb
jecxz
lock
mov
arpl
xor
pop
imulb
mov
inc
fsubs
fs
adc
xor
or
sahf
out
mov
mov
sub
xchg
inc
movsl
loopne
and
test
dec
inc
or
cmpsl
push
divl
ss
cmp
mov
in
pop
dec
mov
les
or
push
js
mov
sbb
std
and
mov
lds
mov
outsb
pop
std
jge
pop
and
les
push
cmp
es
repnz
testb
or
or
clc
sub
enter
pusha
push
mov
outsl
mov
push
out
hlt
and
sub
scas
sarb
xchg
hlt
mov
cmp
cmp
add
dec
andl
jp
clc
mov
pop
jbe
dec
js
and
out
mov
cmp
loopne
mov
xorl
shrl
lea
mov
dec
decb
or
lock
lcall
aam
adc
or
and
mov
ss
dec
data16
sbb
out
mov
push
pop
push
das
fstl
sub
or
jnp
mov
push
add
pop
enter
mov
aam
pop
shlb
fcom
leave
or
jge
xor
add
outsb
jp
jmp
andb
int3
mov
ret
mov
xlat
aam
pop
push
lea
or
push
ror
xor
cmc
push
dec
adc
loope
enter
dec
ds
addr16
pop
popa
or
lret
imull
out
jl
call
mov
and
test
fisubrl
add
ret
je
and
daa
outsb
insb
fisubrs
icebp
pop
jno
cwtl
xchg
loope
loop
cmp
ljmp
rcrl
add
push
mov
jb
push
loopne
aam
inc
and
or
mov
jp
test
mov
decl
dec
dec
popf
mov
add
fcomip
adc
push
xor
pop
mov
fcmovnbe
or
mov
in
or
cmp
dec
sub
lods
mov
add
stos
inc
jle
mov
loope
xor
fisttps
or
xchg
test
cmp
testb
adc
mov
inc
add
jnp
mov
xchg
addb
ljmp
sbb
mov
xchg
es
js
push
out
adc
mov
ret
subl
mov
sbb
pop
test
push
jle
lock
mov
adc
jnp
lds
mov
cmpsb
push
repz
push
mov
mov
fdivrl
jp
push
popf
push
xlat
or
mov
add
adc
mov
cmp
imul
push
subl
and
xchg
int
push
xchg
addr16
nop
mov
inc
xor
mov
cmpsb
ja
cmpb
test
cmp
mov
fstpt
scas
xchg
or
sbb
out
pop
clc
les
test
subl
ljmp
iret
leave
dec
mov
push
inc
pop
xchg
push
pop
dec
decl
and
ds
jno
mov
mov
lret
mov
and
and
and
popa
or
rcr
sbb
out
arpl
jg
inc
cmp
mov
mov
sbb
dec
out
pop
push
ret
xor
stos
aas
sbb
and
jmp
ret
in
jbe
stos
pushf
add
push
das
enter
dec
cs
aaa
mov
push
push
and
stos
orb
mov
jle
cltd
xor
loope
les
fs
je
push
cmp
cmpsb
dec
or
dec
rcrb
loop
inc
and
lcall
lock
mov
icebp
repz
pusha
ss
pop
mov
push
pop
cmp
test
cmc
rcl
scas
cld
mov
insl
dec
stc
xor
bound
mov
int3
stos
aaa
test
jg
lret
xor
test
push
int
aas
fmul
aam
lds
cmc
es
rcrl
ljmp
jge
mov
mov
rcrb
xchg
pusha
push
gs
jle
mov
das
cmc
cs
pop
xor
sbb
jb
pop
fchs
and
jmp
popf
cmp
jmp
shll
xchg
and
fiadds
lret
bound
or
mov
or
rolb
dec
cmc
mov
repz
mov
and
data16
rclb
sub
loop
and
cwtl
es
pop
sub
dec
gs
incl
adc
jne
mov
mov
pop
mov
rolb
pop
cli
pop
enter
sub
pop
or
push
and
lock
stos
lahf
call
test
jp
jnp
xchg
or
test
xchg
nop
loope
clc
pop
mov
push
dec
outsl
cltd
mov
jle
push
adc
cmpsb
dec
add
loop
inc
xor
ljmp
inc
rcl
sub
add
fistpll
push
push
jae
repnz
push
inc
lahf
pushf
xlat
inc
js
pop
inc
ret
fcomps
push
imul
mov
mov
ss
fcmovnbe
dec
clc
scas
adc
mov
cmpsb
repz
imul
dec
jp
js
adc
loop
sub
xlat
inc
fisttps
popf
imul
aas
jbe
fcompl
popa
orl
dec
mov
cli
xchg
pop
mov
push
dec
add
outsl
mov
cmpsl
xchg
sahf
repz
inc
jg
push
push
dec
jae
inc
imul
add
cmp
cmp
inc
aam
filds
xlat
mov
adc
mov
ja
bnd
mov
test
mov
mov
xchg
addr16
jge
cmpsb
pop
std
xchg
jg
sarb
int
fcmovu
dec
pusha
out
xchg
dec
jmp
inc
mov
mov
xchg
add
sahf
xor
cmp
aam
inc
sbb
jl
pop
pop
sub
outsl
add
cld
sbb
adc
dec
mov
mov
xor
popa
inc
add
arpl
out
mov
js
inc
mov
cmp
pop
mov
push
mov
decb
mov
or
push
push
imul
sar
out
ds
lock
xlat
xor
xor
insb
pop
dec
rcll
sbb
lods
mov
push
dec
xor
arpl
hlt
decl
inc
push
adc
jne
xor
jnp
inc
push
sbbb
stos
pusha
loop
mov
cmc
mov
lock
adc
push
pop
lock
jl
pop
int
mov
incb
adc
adcb
adc
jns
data16
xchg
hlt
imul
jg
call
adc
mov
mov
sub
pop
cli
or
cmp
enter
test
inc
aaa
xchg
into
xchg
lcall
ror
inc
lock
lds
add
bound
pop
fidivrl
insb
mov
shlb
mov
mov
mov
repnz
push
fstp
stos
addl
push
clc
mov
stc
mov
adc
clc
or
mov
decb
inc
fwait
ror
jo
and
mov
inc
sbb
lret
push
loopne
cmp
clc
das
and
les
mov
or
test
xor
js
cmp
fstl
ja
add
cmp
adc
mov
dec
pop
mov
and
pop
add
addl
push
mov
sbb
inc
mov
addr16
js
push
and
cmp
xor
enter
or
and
mov
aad
adcb
ljmp
push
xor
add
cld
cmp
dec
xor
enter
mov
imul
dec
movb
es
les
insl
or
pushf
mov
loop
add
mov
mov
outsl
dec
loop
jl
or
lcall
loope
ret
in
push
es
gs
adc
call
inc
mov
dec
insl
fstl
pop
mov
sbb
enter
mov
pop
iretw
lret
jmp
add
fldt
sbb
aaa
add
lcall
pop
dec
cli
lock
jecxz
jl
mov
xor
test
xor
bound
outsl
movsb
outsl
push
push
add
push
mov
test
jg
add
adc
sbb
mov
subl
out
cmp
mov
xchg
shll
or
sarl
movsb
call
cli
or
adc
adc
hlt
sahf
fidivl
nop
insl
jecxz
cld
out
sbb
aam
popa
jno
ljmp
fs
xchg
incl
sub
hlt
lahf
adc
rcl
lock
fbstp
dec
rclb
call
clc
xor
lds
mov
push
icebp
xchg
mov
shrb
xchg
movsl
mov
std
stos
pop
ss
rclb
mov
cs
ficoml
dec
pop
sbb
bound
push
xchg
add
rcrl
lahf
loope
in
jne
fdivrs
dec
xchg
pop
fidivl
sbb
inc
pusha
loope
movsl
adc
mov
incb
ret
push
mov
push
push
loop
add
out
xor
jbe
int3
dec
fs
inc
add
sarl
in
incl
lret
clc
mov
lret
and
ss
cmp
mov
sbb
stc
aad
xchg
sbb
jo
inc
add
add
pop
nop
adc
icebp
xor
push
dec
mov
cmp
and
rol
daa
dec
add
jg
add
popa
popf
shr
pop
add
js
test
mov
sub
mov
cvtps2pi
es
push
lods
jge
in
mov
or
mov
out
cmc
mov
pop
xchg
sar
xchg
repz
or
add
sub
idiv
in
cmp
jecxz
outsl
sbb
sub
cwtl
inc
mov
shrb
movsb
mov
add
test
out
pop
ret
in
add
std
push
int
stc
loopne
aas
fisttpll
ffree
pop
test
mov
inc
lods
es
cmp
pushf
ljmp
pop
cmp
or
nop
add
push
je
jle
cmp
enter
pop
jecxz
pop
xor
lods
jns
pop
dec
push
repz
push
sbb
add
jmp
mov
adc
icebp
xorl
inc
or
jb
aas
sub
fadd
shlb
fwait
sbb
int3
ret
jg
shrb
imul
add
or
jb
rorl
mov
cmp
loope
xchg
sub
subl
add
mov
gs
leave
jo
icebp
lods
cmp
push
pop
mov
add
cld
ljmp
enter
sbb
or
daa
cmpl
mov
sbb
sub
orb
push
rcll
push
sub
cmc
imul
mov
sub
jp
leave
js
popf
clc
xor
insb
mov
dec
int
divl
rcr
mov
lea
add
pop
mov
mov
xchg
dec
or
xor
jp
dec
je
scas
fwait
adc
xor
cmp
pop
js
add
mov
mov
jns
add
mov
jb
popa
jns
mov
pop
lods
cli
stos
xor
xlat
mov
jl
mov
mov
jl
cmp
mov
mov
test
or
adc
sbb
es
ss
xor
dec
or
cmc
mov
pop
mov
jb
js
gs
push
cmp
rol
repnz
subb
fcoml
and
mov
loopne
adc
stos
xor
pop
jg
jmp
leave
fsubrs
adc
lock
jno
ds
aas
push
ficoml
inc
sti
jmp
nop
inc
jbe
repnz
and
and
jmp
inc
xchg
in
pop
movb
cs
mov
insb
sbb
jg
imul
jmp
and
xchg
xchg
fsubrs
test
mov
lahf
add
add
notb
push
lcall
or
pop
outsl
out
leave
sbb
mov
adc
mov
clc
and
out
sbb
xchg
adc
icebp
xchg
outsl
and
mov
lret
and
mov
in
scas
cmpsl
popa
mov
push
insb
repnz
ja
jg
mov
aaa
les
dec
movsb
lret
iret
dec
xor
jne
mov
orl
add
and
lahf
pop
cli
mov
into
inc
cmp
lods
xlat
les
es
push
lcall
iret
sbb
rol
rsm
psrad
icebp
gs
xorl
and
push
inc
push
lahf
pop
decb
icebp
mov
inc
jne
xor
and
mov
dec
mov
fldenv
shl
inc
inc
pop
stos
loope
imul
and
mov
das
xor
roll
jno
movsb
sub
jmp
aam
leave
cmp
pop
scas
or
aaa
insb
mov
mov
jle
dec
jle
xor
mov
pop
jl
rorl
stos
lea
rorb
adc
mull
sar
mov
bound
js
and
sub
cmp
adc
in
mov
inc
mov
mov
xor
sarl
arpl
add
xchg
mov
inc
cmp
lret
mov
xchg
fcoms
lds
adc
sbb
push
iret
mov
movsl
in
repnz
and
mov
and
iret
pop
or
fsubrl
add
mov
enter
dec
loope
loopne
or
lds
or
jo
cmpsl
inc
pop
orb
cmpsl
leave
and
fwait
jmp
inc
mov
inc
xchg
out
out
aas
or
inc
sbb
xor
iret
push
iret
dec
mov
sbb
mov
jbe
dec
and
je
sub
scas
sub
xchg
arpl
add
or
pop
inc
int3
mov
mov
mov
jp,pn
sub
lret
sbb
aaa
mov
popa
daa
ds
cmp
fxch
or
xchg
pop
aad
hlt
or
mov
jl
adc
into
inc
xchg
add
mov
and
pop
mov
dec
sbbb
sub
add
jl
js
shr
stos
iret
outsl
fdivrs
leave
add
xchg
lahf
sbb
pop
fistpl
mov
xor
lea
scas
jl
shrb
lock
dec
jge
aaa
xchg
inc
mov
and
cmp
lods
pop
imull
push
rcrl
and
inc
sbbb
test
cmp
aas
dec
adc
rcrl
test
inc
addb
lock
push
push
adc
fnsave
addb
sbb
xor
and
jnp
push
add
mov
jns
cmp
dec
lcall
pop
push
dec
stc
dec
aad
popf
and
inc
xlat
sbb
inc
dec
push
adc
xchg
add
sub
add
dec
pop
lods
loopne
push
cmp
iret
sbb
outsl
mov
sar
mov
inc
inc
clc
adc
cmp
testb
cmpsb
adc
loopne
popf
pop
ss
aaa
add
dec
adcl
aas
icebp
cs
shlb
cld
lock
push
sbb
je
cwtl
jecxz
jl
pusha
xchg
sti
lods
and
sub
in
dec
xlat
adc
add
aaa
push
add
adc
xchg
int
cmp
mov
loop
aad
mov
les
data16
lret
jmp
cmc
cmpl
sbb
jne
into
cmpsl
or
xchg
adc
icebp
rolb
out
jae
or
lcall
pushf
mov
add
ds
orl
arpl
cmp
push
jmp
xor
inc
jo,pn
push
dec
inc
push
add
addl
sbb
inc
xchg
pusha
push
nop
jns
or
push
stos
add
cli
xchg
loop
aas
jmp
imul
and
sbb
inc
push
add
sub
push
push
in
cmp
push
cmp
mov
mov
je
add
cmp
lahf
dec
inc
mov
mov
cmp
stos
mov
test
ret
cs
sbb
dec
repnz
xlat
inc
mov
aas
test
jl
outsb
test
or
and
xor
test
insl
or
add
pop
movsb
imul
sahf
iret
pop
imul
push
ja
jp
fisttps
es
xchg
test
stc
je
sub
cmp
sti
cmp
fiaddl
outsl
rclb
cltd
xlat
xor
and
pop
jne
fmull
xchg
mov
xchg
hlt
dec
sub
dec
sub
adc
jbe
test
inc
loopne
loope
stos
lret
fdivrl
repnz
out
and
aam
add
or
lahf
ja
lds
xchg
dec
push
mov
loop
inc
sub
mov
adc
xor
es
faddp
xchg
ss
mov
inc
mov
cmp
push
decl
mov
popf
jo
adc
insl
mov
and
xor
test
push
mov
mov
cmc
mov
mov
sub
mov
xchg
xchg
js
lds
inc
or
insb
mov
fcoms
fst
popl
inc
push
push
loop
sbbl
push
push
aaa
and
push
inc
test
mov
repz
insb
lcall
popa
fdivrs
lods
xchg
lret
popl
cmp
or
mov
jg
out
xor
mov
popf
add
es
das
jno
scas
adc
js
int3
arpl
cmp
pop
mov
mov
imul
pop
and
inc
leave
stos
xor
cs
dec
fwait
mov
xchg
mov
scas
pop
mov
pop
js
scas
mov
add
jbe
push
xchg
sub
sub
cmp
fsub
adc
and
xor
pop
data16
mov
and
roll
add
lahf
push
and
cmpsb
mov
movsl
loop
dec
push
xor
ret
xchg
mov
add
inc
xchg
pop
mov
jecxz
jno
xor
out
or
jge
mov
das
pop
cmp
jge
mov
nop
jmp
gs
and
inc
and
lcall
ficompl
movsl
scas
test
mov
int
es
cmp
mov
xor
pop
fs
add
bound
cmpsl
sbb
insl
jbe
movsl
push
shrb
sub
mov
addb
aaa
loope
xlat
push
daa
rol
dec
pusha
xchg
mov
popf
jl
mov
sub
mov
popf
inc
adc
js
or
mov
pop
arpl
inc
mov
sbb
bound
imul
mov
mov
call
or
imul
daa
push
push
lods
roll
push
andl
push
imul
out
pop
sbb
loop
mov
mov
xlat
lods
inc
push
test
xchg
jp
leave
test
and
sarl
jp
add
rorb
dec
mov
test
dec
adc
aaa
insl
les
rorl
and
jns
push
mov
xor
data16
in
cmp
imulb
mov
mov
cmc
and
bound
mov
add
jmp
popf
fsubl
or
lock
icebp
push
je
daa
jl
and
mov
in
or
stos
mov
arpl
ret
test
dec
rcr
jl
xchg
movsb
daa
xorl
clc
call
fwait
sbb
or
sub
fucomp
inc
inc
xchg
push
mov
cmp
cli
cs
adc
sub
mov
lahf
mov
xlat
clc
mov
cmp
xor
adc
jo
hlt
or
lds
inc
push
xor
sbb
sbb
je
push
test
scas
push
jg
mov
add
push
insb
ljmp
daa
gs
cltd
lcall
jge
addr16
add
xchg
xchg
push
jo
cmp
add
inc
pop
insb
cmp
mov
sub
rorl
mov
cmp
mov
pop
outsb
ret
arpl
add
out
mulb
add
ja
cwtl
in
movsb
jno
mov
cltd
xchg
add
pextrw
jo
insl
push
fisttpl
mov
out
cmp
jge
dec
js
scas
adc
mov
pop
sub
xor
roll
xor
sbb
and
jecxz
mov
sub
je
cltd
sbb
jl
jno
inc
push
aas
cmpsb
shlb
inc
cmp
imul
xor
iret
cmp
or
push
sub
test
dec
ret
cmp
idiv
push
pop
and
mov
lods
rolb
das
lods
rorl
popl
or
test
in
stos
cmpsl
mov
and
ud1
test
push
cmpxchg
and
adc
push
das
icebp
dec
repz
mov
aad
icebp
and
orl
dec
shl
inc
jmp
adc
scas
mov
mov
popf
loop
hlt
push
mov
adcl
xchg
sbb
hlt
mov
sub
rolb
jnp
mov
lcall
cmp
outsl
push
cs
rcll
mov
or
or
imul
fadds
lds
les
mov
cmpl
xor
dec
ds
loop
subl
push
add
or
xlat
mov
shlb
je
jmp
daa
lahf
ja
daa
cld
in
and
ret
cli
mov
mov
mov
mov
roll
inc
lcall
int
cmpsl
cmpsb
mov
cmp
push
jp
daa
cli
xchg
sub
sub
mov
cmp
adc
jge
jno
and
sub
and
lock
ss
dec
inc
push
and
shrb
scas
add
inc
cld
pop
adc
xchg
and
add
dec
nop
xchg
loop
dec
xor
out
loopne
lock
or
jge
xchg
loop
leave
inc
jno
aaa
shll
pop
jae
or
mov
pop
rcl
jno
imul
jnp
scas
aam
call
cmp
inc
jge
ja
jnp
mov
lcall
or
add
adc
xor
cli
shlb
leave
mov
or
imul
cmp
and
mov
xchg
loope
js
out
ret
adc
and
rcrb
pop
popa
pop
dec
mov
movsl
arpl
popf
mov
adc
sub
push
or
outsb
stc
jne
jno
rolb
push
sub
into
lock
mov
lret
mov
adc
cli
dec
lret
leave
xor
lret
fcoms
add
hlt
dec
imul
or
xor
adc
xor
es
mov
outsl
lret
cwtl
test
shl
test
xor
addr16
shrb
inc
pop
lods
cltd
jmp
push
imul
call
xorb
test
loope
cmpsl
lcall
ret
rcrb
jecxz
jl
push
nop
mov
push
jl
sbb
ja
or
fsub
pop
jne
inc
push
outsl
sub
xor
sbb
and
xchg
ds
mov
arpl
movsb
adc
xor
test
dec
mov
jge
or
xchg
lahf
call
mov
lea
mov
jg
stos
add
fistps
add
mov
rcr
rorl
pop
lock
int3
cld
adcb
sbb
test
push
movsl
lods
add
aam
or
fiadds
jae
xlat
sub
lahf
sbb
std
mov
cmp
fldl
sbb
jne
sbb
or
cmp
imul
stos
cmp
mov
rorb
pop
in
pop
add
dec
inc
mov
mov
mov
pop
das
stc
jo
inc
test
fsubs
add
inc
sbbb
dec
and
lcall
out
aad
xchg
lea
and
mov
movsb
jne
or
jno
xor
lret
bound
clc
jmp
cltd
movsb
dec
scas
dec
adc
adc
ja
inc
mov
xchg
or
pop
mov
adc
push
mov
lret
mov
adc
cs
in
and
xor
pushl
push
sub
subb
add
sbb
dec
mov
sbb
imul
sbb
cmpl
add
out
mov
adc
mov
mov
push
icebp
mov
fcmove
or
enter
mov
int3
gs
cmp
test
xchg
clc
and
ret
or
sub
adc
test
movsl
mov
icebp
add
in
pop
dec
int3
jle
inc
mov
mov
inc
enter
clc
pop
jg
xchg
cld
insl
enter
iret
jno
push
mov
in
nop
or
cmp
jecxz
add
pop
std
popf
test
lcall
or
sbb
fldt
or
scas
push
out
cmc
adc
jmp
mov
sbb
dec
daa
add
mov
mov
mov
mov
push
je
adc
dec
jmp
mov
out
lods
push
imul
inc
jp
test
mov
test
xor
inc
xlat
js
daa
jecxz
loop
pcmpeqb
add
xor
push
iret
pop
jge
or
js
popf
loopne
jo
dec
cld
in
shll
ljmp
shlb
push
xor
add
inc
adc
sarb
pop
pop
mov
lods
push
adc
cli
test
inc
andb
cmpb
outsb
clc
inc
add
push
bts
adc
or
push
outsl
mov
jg
lret
int
xlat
leave
push
push
sub
or
ss
mov
cmp
sbb
rolb
sbb
fistps
js
clc
fisubl
xorb
dec
mov
add
or
pop
mov
push
loope
cld
pop
fsub
push
or
imul
or
sbb
mov
cmpsb
xlat
das
jg
test
mov
pop
push
shlb
adc
ffree
das
jb
fwait
jno
cli
scas
pop
incl
xchg
adc
xchg
xor
xchg
add
decl
xor
pop
add
test
iret
pushf
nop
aas
mov
test
mov
push
sti
shlb
mov
push
add
adc
jb
stc
scas
add
xor
xchg
lcall
adc
push
ljmp
orl
lea
mov
popa
sub
xor
mov
xchg
push
ljmp
stos
pusha
xor
push
or
into
cmpsl
dec
pusha
sti
test
movsl
fisubl
pop
jno
push
dec
mov
sbb
xchg
and
inc
pop
ficomps
and
mov
ret
or
sbb
xor
cmp
adc
mov
jg
popa
push
ret
addl
in
leave
fiaddl
fmuls
in
sbb
std
int
test
adc
sbb
add
arpl
or
sub
push
or
mov
sub
aaa
mov
popa
scas
xchg
dec
inc
adc
add
push
je
jns
roll
sbb
add
adc
pop
jl
popa
jb
pop
enter
sbb
push
clc
dec
lods
fwait
add
pop
push
add
insl
sti
xor
mov
lahf
out
pop
ljmp
add
lret
jae
lods
lret
jns
cmc
dec
outsb
ds
jbe
xchg
mov
ficoms
stc
loopne
mov
push
sarb
insb
std
or
loop
xor
adc
fstps
ds
sbb
sbb
pusha
pushf
sub
and
test
ret
testl
jmp
pop
test
and
inc
or
in
mov
and
mov
add
js
mov
xchg
pop
test
jle
mov
bswap
dec
mov
int3
push
xor
aam
clc
sbb
adc
mov
adc
adc
or
xor
mov
imul
and
popf
outsb
adc
out
push
jnp
test
int3
mov
lret
xor
in
clc
mov
inc
mov
test
incl
xlat
adc
jae
inc
sbb
loopne
cmpb
shrb
mov
dec
call
add
push
xor
sarl
das
mov
popa
call
inc
or
pushf
jno
add
loop
test
mov
jl
push
mov
push
sbb
fdiv
cmpsb
adc
mov
popf
sub
mov
mov
mov
testb
movsl
decl
inc
cmc
fimuls
lcall
outsb
sbb
fadd
mov
test
pushf
cs
mov
add
hlt
mov
mov
mov
movsb
mov
scas
sub
pop
ret
je
insl
test
jp
sbb
int
mov
shrb
inc
cld
ds
mov
push
sub
jp
adc
das
xlat
adc
test
jae
cmpb
loope
push
nopl
inc
mov
or
insl
pop
push
insb
lret
lahf
in
mov
mov
and
or
mov
mov
and
adc
pop
daa
jmp
cmpsl
pop
pushl
pop
cmp
orl
push
ja
rorb
imul
inc
out
or
mov
outsl
faddl
addr16
clc
mov
mov
add
xor
mov
test
mov
mov
xchg
xchg
and
rorb
cmc
adc
je
sarl
jg
sub
xchg
lahf
mov
lahf
loopne
hlt
pop
fists
xor
add
test
sbb
imul
arpl
inc
jmp
into
fidivl
loope
lods
jne
int3
mov
outsl
sub
push
mov
or
mov
dec
sahf
pop
in
lea
scas
enter
mulb
push
inc
roll
add
jl
jbe
jns
jg
mov
pop
les
sbb
in
mov
js
push
sub
mov
imul
pusha
sub
pop
mov
call
cltd
flds
fucom
pop
push
ss
clc
outsl
fisubrs
lock
addr16
in
push
and
jno
movsb
jo
and
jecxz
rcl
or
bound
xchg
and
lahf
adc
fdivs
shrl
cli
sbb
add
jo
outsb
enter
push
pop
pop
loop
test
ret
clc
lcall
ljmp
hlt
fisttps
in
sbb
pop
sbb
inc
lea
in
incl
mov
incl
dec
sub
mov
lcall
repnz
ret
cmp
std
incl
xor
add
icebp
fistl
push
loop
nop
push
jg
push
fsubr
out
pop
xchg
mov
sbb
xchg
add
lea
pop
push
stos
jmp
push
jg
repnz
mov
inc
adc
push
mov
mov
je
std
sub
fsubrl
test
mov
clc
js
sbb
pop
cs
popa
sarb
rcl
popf
push
out
add
and
push
cmp
lds
sbb
aad
jg
inc
xchg
jmp
mov
jmp
loop
or
jg
sub
in
xor
fildll
sti
mov
jae
int3
test
and
mov
cmp
fisubrl
sbb
cld
call
cmpl
lcall
addr16
ljmp
jo
xchg
les
ret
insb
adc
mov
pushf
imul
repz
stos
jmp
push
push
sbb
ds
xor
lods
jnp
data16
mov
sub
and
add
mov
jl
cli
mov
popa
pop
ret
inc
xchg
jo
push
xchg
dec
dec
test
mov
test
push
push
jle
imul
add
cmp
fisttps
inc
adc
mov
add
inc
adc
dec
or
pop
hlt
fadds
out
incb
bound
stos
or
or
adc
inc
sbb
xor
test
mov
bound
mov
sbb
xor
cmovns
jmp
mov
test
xchg
jne
cli
lret
or
ret
jbe
dec
xchg
pushf
mov
pop
sbb
mov
sub
mov
iret
in
lock
fwait
test
cwtl
fisubl
data16
dec
add
test
rclb
cmc
es
jp
mov
das
jbe
add
push
dec
cmp
dec
call
add
sub
ret
xor
incl
js
pop
pcmpeqd
lea
push
cmp
adc
insb
jnp
mov
loopne
je
xchg
dec
loope
dec
dec
and
cmp
mov
jmp
xchg
xor
jno
fdiv
int
add
insb
mov
push
xchg
mov
pop
std
cmp
dec
sbb
cmovg
sbb
adc
push
movsb
shll
push
push
stos
cmp
addb
jns
push
pop
sub
inc
jne
into
xor
sbbl
lods
push
lods
pushf
dec
xchg
sbb
pop
jecxz
push
or
sbb
dec
xor
icebp
pmuludq
fsubrl
inc
fld
adc
and
dec
adc
ret
popa
xor
lret
push
jbe
jl
xchg
and
dec
in
xorl
mov
outsb
sbb
fwait
decb
lahf
faddp
loop
cmpsb
pop
adc
push
fidivs
or
enter
xor
cmpsb
cmp
fiaddl
ljmp
in
push
sub
jle
sbb
mov
sub
xor
push
push
fcom
cmp
push
testb
mov
xchg
sysret
fwait
push
add
push
push
outsb
adc
lods
or
ds
cwtl
ret
adc
mov
jmp
mov
or
aam
hlt
lock
movsl
loopne
iret
fcmovu
popa
and
jb
pusha
scas
icebp
testb
push
dec
fdivp
xchg
loope
aas
in
out
orb
setp
jbe
js
insb
xchg
push
lods
push
lods
out
int3
or
mov
sbb
loopne
jge
cmp
pop
adc
push
add
mov
xor
xlat
xor
mov
lea
pop
add
push
leave
shl
jg
inc
or
jl
xor
push
adc
mov
inc
jmp
push
mov
ror
stos
inc
mov
mov
loopne
mov
sub
lods
orb
mov
rolb
inc
dec
divb
xchg
mov
jbe
lcall
mov
lock
orl
dec
cld
jbe
test
cmpsb
fsubrs
ja
cmp
orb
dec
xchg
test
hlt
jle
ret
nop
bnd
repnz
dec
aam
adc
repnz
pop
pop
flds
stos
in
mov
cmp
in
mov
sarl
xor
cli
popa
fnsave
jecxz
mov
es
push
mov
or
jl
orl
sbb
or
inc
fsubrl
mov
xor
sub
mov
jg
aaa
cwtl
pop
cmpsb
int3
jo
ds
push
mov
aaa
mov
add
loopne
loope
xor
xor
out
hlt
pop
add
mov
sti
rcrb
cmpb
mov
lods
add
dec
cmp
sub
pusha
jle
adc
inc
push
ror
daa
mov
pop
mov
inc
adc
add
xor
push
clc
xlat
ficompl
cmc
insl
fisubl
cld
pop
sarb
push
pop
and
mov
push
daa
pushf
adc
faddl
daa
push
enter
cli
sub
and
xchg
arpl
in
inc
add
arpl
jge
dec
daa
sub
jle
stos
mov
out
test
add
dec
sub
cmp
jp
mov
aas
push
dec
mov
stos
cli
int
hlt
sbb
sub
adc
and
fs
xor
cmp
push
mov
adc
out
xor
test
add
jno
jecxz
lds
call
add
and
ds
pusha
icebp
push
stos
xlat
int
insl
mov
or
add
fsubrl
or
cmc
or
lahf
mov
fwait
daa
push
lret
mov
mov
push
daa
std
mov
add
jp
inc
fidivrl
fstl
fdivrp
scas
rsm
mov
test
js
push
or
sbb
fnstsw
fdiv
push
adc
adcl
fs
cmp
shlb
fsubl
adc
and
aam
cmc
cli
test
cmp
dec
aas
jmp
pushl
mov
sub
ds
hlt
mov
dec
jnp
aas
repz
dec
and
pop
and
jp
mov
adc
inc
jmp
test
std
sbb
mov
cld
or
dec
sub
push
repz
xor
sbbb
mov
in
mov
iret
nop
rclb
movsb
xchg
sbb
test
fidivl
mov
sub
push
add
sbb
or
outsl
sbb
cmp
dec
xorl
or
pop
xchg
inc
lret
stos
outsb
adc
out
xlat
mov
loope
jp
mov
inc
scas
inc
push
and
loop
push
xchg
mov
shrl
or
inc
mov
in
fstps
fisubl
fwait
icebp
fisttps
inc
xchg
das
fildl
mov
int3
sbb
pushf
mov
int3
and
dec
lods
shrl
in
or
adc
and
das
decb
mov
push
adc
mov
lock
iret
insb
test
les
ret
cld
and
fldcw
pop
mov
jg,pt
adc
push
fisttps
popa
test
and
test
xchg
loope
in
jb
leave
iret
inc
fldenv
push
or
add
outsl
in
xchg
cld
bound
cmc
arpl
popa
mov
add
xor
xor
scas
mov
xor
inc
int
sbb
jnp
fildl
movsl
je
js
int
andl
jmp
test
jp
sbb
pop
ss
lahf
pop
or
adc
shl
and
adc
sbb
xchg
pop
mov
aas
loopne
xchg
inc
sub
vmovups
cmp
rol
mov
mov
je
adc
mov
sbb
imul
xchg
xchg
add
xchg
sub
add
cmp
in
inc
or
dec
test
pop
stos
ja
push
mov
push
fmuls
mov
sbbb
movsl
les
cld
pop
add
loopnew
ret
xor
std
push
pop
sub
pop
mov
in
loope
push
push
in
and
in
jle
or
pop
lock
rcrb
push
and
sarb
xchg
cli
cmc
sub
cmp
pop
adc
loopne
inc
dec
dec
out
mov
or
roll
hlt
and
mov
lock
icebp
sub
and
jg
aas
out
sub
stos
cmp
imul
in
clc
cld
jmp
xor
dec
pop
lods
lea
hlt
xor
add
inc
mov
push
mov
mov
test
or
xchg
push
cli
fs
hlt
add
int3
cs
xchg
cld
aaa
fisttpll
add
push
xchg
popf
leave
rcrb
or
js
inc
push
cld
fwait
mov
adc
mov
pop
shr
or
pop
test
ror
cmp
dec
mov
clc
call
jno
sub
test
mov
int
pop
dec
out
xchg
pop
cmc
push
pushf
js
dec
ljmp
add
out
ret
shlb
aam
lea
and
fists
inc
pop
stc
push
aaa
dec
mov
push
inc
into
inc
decb
mov
int3
negl
or
mov
inc
repz
push
lret
push
mov
out
dec
push
insb
pushf
xor
jge
mov
inc
push
clc
lods
mov
cwtl
and
and
addl
push
jo
dec
jns
jecxz
decl
adc
aaa
push
mov
add
fstps
or
ret
mov
call
dec
inc
mov
lock
pop
or
lret
mov
fsts
dec
jmp
dec
cwtl
outsl
hlt
mov
jmp
sub
or
popa
fsubs
addb
in
pop
ret
push
and
xchg
add
or
shlb
outsb
xchg
es
mov
or
out
clc
popa
push
pusha
cld
int
sbb
or
pop
fists
out
push
adc
dec
and
pop
gs
pop
rolb
hlt
push
cs
stc
mov
lods
xorl
dec
mov
or
in
daa
adc
aas
jne
bound
mov
sub
cld
add
jecxz
push
sub
pop
lcall
movsl
aam
xor
loopne
clc
mov
cld
ffree
mov
sub
sbb
cmp
cwtl
jl
mov
mov
imul
xor
xor
push
or
jge
scas
mov
sarl
sahf
mov
test
insb
in
jne
sbb
xor
out
lods
jecxz
inc
cltd
cmp
repnz
mov
jle
jbe
cmp
lret
repz
xor
jmp
mov
imul
fdivl
sub
mov
mov
or
test
jmp
inc
mov
lret
inc
or
orl
pop
or
mov
call
adc
push
xchg
aam
outsb
iret
int3
push
in
dec
mov
test
loopne
fidivrl
popf
lods
xchg
decb
xor
mov
push
ret
out
jns
jp
and
sbb
adc
out
mov
mov
add
sbb
adcl
cld
pop
mov
fstpl
xor
mov
lock
les
je
push
dec
inc
jbe
push
pop
push
lods
dec
dec
and
fsts
sqrtps
push
xchg
or
sub
cmp
add
mov
mov
adc
adc
lods
push
add
pop
lret
dec
call
in
test
cli
in
gs
inc
sub
cmp
mov
sbb
inc
lret
mov
push
subl
jge
mov
popa
fadds
inc
shlb
fisttps
push
fsubrs
fsubrs
bnd
popa
test
cltd
push
repnz
push
mov
mov
dec
jbe
or
daa
stos
jno
stos
aas
add
add
pop
aaa
mov
mov
jb
pop
loopne
loopne
mov
mov
mov
cli
jbe
push
sarl
or
inc
jp
ret
jecxz
xchg
push
in
mulb
xor
or
jmp
adc
inc
paddb
mov
jae
ret
inc
cld
sbb
daa
cmp
and
icebp
stos
lcall
hlt
mov
and
dec
aaa
jb
fdivrs
sbbl
stos
sarb
add
lods
sub
or
divl
and
out
lea
negl
sbb
pop
jge
sub
cld
in
nop
sbb
xor
and
add
xor
mov
fwait
xchg
pop
test
in
repz
xchg
ss
imul
lods
add
add
mov
push
loop
add
mov
int
aas
adc
push
add
aad
inc
add
lcall
xchg
js
shll
fldcw
or
cwtl
adc
push
lret
xor
or
or
jg
iret
aas
in
sub
shl
inc
fsubrl
daa
push
inc
cli
das
popa
and
test
pop
dec
mov
mulb
jmp
imull
mov
ret
xor
insb
jecxz
int
stos
enter
orb
dec
dec
push
jle
sbb
pop
cmpsl
fnstsw
lahf
mul
imul
lret
xchg
jne
and
inc
nop
rorl
pusha
ret
clc
les
mov
nop
xor
das
xor
aas
pop
fwait
pop
adc
mov
sub
es
cltd
outsl
clc
sub
sub
int
loop
add
fdivrs
fdivl
push
sbb
int
outsb
push
cwtl
loopne
xor
or
leave
or
int
ret
and
outsb
mov
fdiv
or
lret
pop
scas
mov
xchg
icebp
pop
sub
or
outsl
dec
inc
mov
mov
loopne
inc
sub
sbb
les
fcomp
lds
stos
push
adc
pop
mov
jmp
sbb
in
lret
jae
cmp
ljmp
sub
and
push
adc
pop
fstpt
clc
sbb
pop
mov
push
lahf
push
jle
outsl
cwtl
repnz
cmp
insb
aaa
out
sub
arpl
sub
lock
enter
mov
inc
cmp
xor
popa
sbb
cmp
divl
add
add
mov
out
inc
dec
clc
adc
mov
jmp
ret
cli
lods
sbb
fs
sar
inc
add
sbb
cmpsb
popf
sahf
adc
adc
sbb
xchg
ds
cs
loopne
mov
inc
sbbl
push
xchg
adc
or
scas
mov
cmp
iret
mov
cmc
jl
sbb
xor
testb
cmpsl
xchg
sbb
add
jp,pn
add
mov
mov
adc
scas
xchg
and
mov
xor
inc
xchg
or
icebp
and
push
jo
adc
pop
loope
push
mov
sahf
pusha
jge
fistpl
lret
aas
rcrb
sub
sub
sbb
xchg
mov
sub
fs
mov
jb
pop
fcomps
subb
popa
faddl
push
cmpsl
adc
add
push
pop
loop
dec
mov
lods
xchg
sub
cli
mov
mov
rcr
mov
jmp
sbb
pop
cmp
push
clc
icebp
mov
ds
bound
scas
fs
inc
or
testl
cmp
or
rolb
inc
int
and
lock
lea
inc
fdiv
sbb
jg
or
and
out
mov
out
stos
adc
mov
push
in
lods
rcrl
sub
les
sbb
fbld
shrb
add
mov
sbb
xchg
mov
sbb
jge
es
push
mov
dec
xchg
mov
inc
xchg
outsb
mov
sbb
and
into
xchg
nop
arpl
mov
xchg
test
movsl
ja
pop
nop
sarb
mov
icebp
pop
cmpsl
or
fcoml
mov
out
pop
or
lds
loopne
hlt
dec
or
popa
adc
pusha
sub
or
mov
pop
testb
ss
rcrb
loopne
mov
sub
sahf
mov
mov
inc
insb
dec
add
mov
sbbl
shlb
movb
and
sbb
xor
scas
inc
pop
filds
mov
or
sub
stos
mov
push
jle
jp
aam
pop
xchg
cmc
mov
das
lock
mov
insb
aam
push
xor
sbb
into
fucomip
pop
sbb
arpl
push
test
sbb
inc
adc
mov
mov
mov
mov
mov
mov
sub
push
sub
icebp
inc
jne
inc
mov
rcll
popa
sub
data16
hlt
fidivl
dec
pop
movsl
pop
and
fmul
outsl
push
jns
cmp
mov
das
mov
and
fs
in
cltd
les
ljmp
mov
and
or
xchg
sub
mov
xchg
out
and
jb
ret
or
insl
cmp
lock
icebp
or
idiv
icebp
iret
pop
pop
addr16
loope
shrl
inc
sub
mov
lods
mov
test
repnz
rol
sub
bound
leave
push
mov
cmp
mov
inc
jnp
add
stos
das
jne
mov
test
mov
sub
imul
mov
inc
cltd
jl
inc
pusha
int
push
mov
icebp
rcrb
notb
or
test
arpl
xchg
mov
mov
insb
add
inc
sarl
clc
inc
loopne
sbb
sub
or
shlb
xor
sbb
popa
pop
dec
sbb
aaa
lahf
andb
push
mov
xor
jg
out
scas
aas
fadds
mov
pusha
mov
call
inc
data16
mov
outsl
ret
jp
xchg
cmp
lods
or
adc
inc
inc
daa
jl
data16
sahf
cmc
lcall
das
clc
mov
popf
xchg
in
fdivp
cmp
pop
out
cmc
orb
mov
in
xchg
incl
test
cmp
je
mov
pop
mov
sub
pop
xor
push
js
and
in
enter
outsb
sar
jmp
mov
dec
pop
push
xchg
call
outsl
pop
shrb
pusha
adc
xor
sbb
lock
ret
jl
sub
inc
pop
and
sub
pop
sub
mov
arpl
cmp
xchg
js
in
in
adc
mov
pusha
std
mov
pop
cmp
cld
rclb
cmp
clc
pop
fmuls
testl
insb
mov
outsb
ret
aas
push
fcmovnu
mov
dec
jmp
ret
pop
dec
jl
lcall
int3
je
xor
jbe
ja
in
js
int
add
or
dec
pop
push
int
pusha
add
sbb
xchg
adc
inc
jg
out
insb
or
add
pop
scas
add
and
dec
sub
lahf
pop
movsl
aam
fdivp
add
fisttps
cmc
pop
rcl
xchg
out
mov
pop
les
pop
pop
xchg
add
pop
cltd
scas
test
mov
cmp
fistps
imul
fisttpll
dec
mov
outsl
xlat
mov
add
outsl
movsl
add
rcrl
scas
mov
or
int
cmp
dec
cmpsl
inc
dec
inc
ljmp
adcb
das
ret
mov
add
cli
dec
pushf
ss
cmp
inc
aas
call
push
mov
nop
or
ja
jbe
inc
pop
icebp
cs
out
inc
sbb
lcall
jecxz
lock
fwait
subl
dec
inc
push
fists
mov
mov
ljmp
roll
push
push
ljmp
push
jnp
or
in
hlt
mov
mov
setae
iret
pop
inc
pop
popa
je
mov
repnz
mov
mov
push
fisubs
add
pop
push
aad
pop
loop
mov
dec
lock
adc
and
sub
xor
and
roll
mov
and
pop
lahf
jo
push
sbb
ret
fs
sub
fcmove
lahf
les
arpl
adc
in
or
popf
pop
and
mov
fimull
iret
xor
xchg
bndstx
fadds
mov
mov
in
aad
push
lcall
adc
mov
cmp
adc
push
and
in
aam
data16
mov
sub
push
test
cs
aas
jo
test
fcoml
addl
ja
mov
xlat
cmp
outsb
adc
insl
jmp
and
xor
push
cmp
xchg
in
inc
les
sub
out
stc
ljmp
jns
in
push
loop
adc
int3
iret
and
test
fimull
and
mov
daa
push
insl
cmp
push
pop
lea
das
sub
jbe
dec
hlt
xor
leave
or
jne
loop
or
inc
es
loopne
and
jle
push
les
jecxz
shlb
lock
in
cmpsl
pop
insl
pop
add
push
scas
add
shll
sbb
or
add
jnp
pop
sbb
cmp
fldcw
es
movsb
jo
add
aam
fidivrs
pop
lahf
dec
aam
fldenv
out
adc
mov
testb
mov
pop
aas
inc
into
push
stos
movsb
arpl
test
cmp
loope
mov
push
pop
cli
xchg
or
cmp
gs
and
cs
aaa
mov
loopne
cmp
sbb
rol
add
jl
int3
cmpsl
mov
jo
jl
mov
push
adc
jae
or
cld
iret
ljmp
xor
add
in
pop
dec
imul
cmpsl
loop
rcll
clc
sbb
ret
add
or
aad
inc
leave
out
add
stc
pminsw
scas
xor
mov
and
jge
cmc
jl
push
add
stos
adc
mov
pop
sub
jno
cmpsl
adc
movsl
add
xlat
ja
stos
mov
inc
and
lods
repz
cmc
popa
pop
fs
sbb
mov
push
mov
jnp,pn
dec
test
sub
lock
and
mov
inc
ds
sarb
aam
pop
orb
outsl
sub
dec
inc
sub
jg
mov
shlb
adc
adc
fcoml
aaa
push
fs
jno
lret
lcall
addb
std
and
popf
jnp
addl
test
rcll
dec
dec
filds
push
popl
sti
or
nop
adc
sub
js
sbb
hlt
mov
and
div
repnz
and
ja
mov
cld
js
les
xchg
inc
add
icebp
dec
int
jbe
arpl
imul
fwait
push
lea
dec
jne
add
icebp
mov
mov
cwtl
nop
or
sbb
push
inc
inc
push
push
mov
in
cmpsb
push
or
rorb
mov
sbb
mov
xor
addr16
sub
push
push
pop
mov
mov
or
add
pop
mov
mov
dec
fwait
test
pop
pop
sbb
inc
jl,pt
jno
out
cmp
lcall
jg
adc
out
jbe
sbb
loopne
loop
and
push
mov
push
imul
dec
movsb
mov
cwtl
hlt
mov
or
dec
mov
add
mov
mov
dec
imul
in
or
xchg
hlt
and
xor
sbb
xchg
add
sub
pop
push
or
pop
imul
insb
cli
or
loopne
xlat
sbb
in
pop
mov
dec
push
mov
std
inc
mov
jno
push
rorl
add
adc
or
mov
pushf
loop
jae
scas
pop
push
addl
mov
gs
lds
and
sbb
mov
pushf
in
out
ret
icebp
outsb
and
dec
add
rcrl
decl
das
xchg
pop
mov
mov
inc
jbe
xor
cmp
dec
ss
jge
cmp
sbb
fisubrs
adc
dec
dec
cmc
dec
inc
std
cmp
repz
fildll
arpl
mov
or
ds
cltd
mov
xchg
xchg
test
mov
pop
lret
loopne
leave
xor
inc
and
roll
loop
and
jmp
or
mov
je
setns
lock
jb
mov
xor
aam
push
pop
xchg
fildl
insl
loope
and
ret
adc
jmp
cmpsb
push
sahf
sbb
mov
movsb
cwtl
test
cmp
in
mov
hlt
dec
lahf
xchg
in
xchg
push
mov
cmpsb
push
or
mov
orb
lcall
loope
out
inc
adc
xor
add
and
dec
sub
xor
movsl
xchg
sub
dec
ja
stc
jae
in
dec
lret
push
scas
jecxz
add
mov
testb
jg
out
cmp
xor
inc
push
jecxz
out
aad
mov
and
push
adc
lea
mov
adc
test
mov
imul
jl
adc
jo
inc
inc
test
lcall
clc
xor
sbb
dec
adc
aad
mov
roll
xor
jne
xor
dec
clc
out
loope
aas
mov
repnz
and
inc
addr16
inc
fs
add
or
xor
dec
std
adc
test
lods
popf
aaa
dec
pop
lds
mov
loopne
stos
cmc
aam
mov
sub
aad
je,pt
fildll
inc
mov
repnz
sahf
mov
pusha
pushf
xor
iret
push
inc
ja
pop
mov
insb
je
and
pusha
outsb
sub
filds
push
in
cmovns
push
pop
in
push
cmp
pop
fnsave
sub
dec
cmp
jae
pop
fwait
ss
inc
xor
adc
mov
mov
call
dec
adc
imul
and
ret
test
xchg
clc
xorb
imul
sbb
mov
dec
outsb
mov
xor
repz
adc
fwait
lods
inc
mov
inc
sarl
or
push
fldl
inc
sti
sbb
xor
sahf
jb
bound
cmp
cmp
xor
sti
pop
aad
pop
scas
xchg
cmp
jmp
jl
push
sarl
adcl
aad
clc
sarb
add
inc
cmp
cmp
ret
filds
hlt
into
cmovle
jecxz
inc
test
push
xor
pop
pop
or
xchg
xchg
imul
or
outsb
or
js
pop
outsl
inc
clc
inc
mov
jecxz
das
add
ret
sbb
mov
mov
enter
mov
testl
out
shll
fisubl
pop
mov
xchg
dec
lahf
pop
ss
sbb
mov
outsb
pop
mov
xchg
dec
mov
xor
push
xor
inc
inc
or
je
push
pusha
add
sbb
add
lea
or
sbb
cmp
gs
push
pop
rolb
cmpsb
leave
in
mov
or
mulb
fildl
sbb
iret
jle
sbb
mov
add
hlt
push
xchg
mov
std
mov
aaa
adc
inc
rcll
push
int
lret
jne
jle
xor
loope
call
out
lods
test
out
push
jmp
icebp
push
scas
cli
inc
mov
test
lcall
repnz
inc
decb
add
mov
xor
outsl
mov
insb
and
mov
loopne
sub
xchg
and
mov
fists
rcrb
xchg
fbstp
ljmp
mov
mov
push
cltd
fs
mov
cwtl
out
pop
testl
lret
lret
pop
cld
xchg
push
in
cmp
ret
cmp
dec
test
daa
ja
mov
shlb
dec
jl
fstl
js
push
nop
test
shlb
xchg
orb
fldl
and
ficomps
dec
push
lret
cld
push
pop
add
adc
vpminsw
mov
aas
filds
add
add
cmp
sbb
clc
dec
cmc
xchg
fstps
add
pop
loop
jmp
sub
pop
fucomp
ljmp
xor
mov
fdivl
cld
cmp
sbb
and
mov
inc
sysret
mov
decb
mov
aam
or
add
xchg
scas
das
lret
dec
mov
mov
inc
imulb
cmp
pop
adc
sbb
mov
test
repnz
out
add
in
pop
test
filds
mov
je
inc
xchg
and
cli
sub
xchg
shll
mov
mov
inc
cmpsl
inc
mov
sbb
ljmp
shlb
idivl
outsb
loop
loopne
inc
add
jp
mull
jge
daa
rcl
ret
pop
jno
stos
sub
pusha
out
lods
mov
lret
lret
inc
shrb
jo
pop
ret
ret
jg
jno
iret
or
dec
insl
insb
sahf
icebp
cmpsl
pop
and
sbb
subl
mov
in
clc
cmp
fsubs
sbb
mov
fnsave
loop
push
xchg
fsubs
jns
fwait
inc
lahf
out
sti
or
mov
sbb
jmp
prefetcht0
aaa
cli
xlat
jb
add
into
js
cmpsb
sbb
pop
sub
icebp
popa
lock
je
mov
jge
or
xor
sub
mov
lock
clc
out
dec
push
stos
mov
test
pushf
ficomps
outsl
mov
jae
dec
sbb
sub
out
movsb
cmc
push
fcomip
sub
pop
nop
pop
dec
repz
aam
adc
xor
cmp
js
out
lahf
jno
fiaddl
bound
inc
pop
lea
sub
lcall
in
jg
push
and
in
shrb
mov
jmp
sub
clc
icebp
jb
ret
rcl
lds
push
fdivrl
pushl
shlb
sarl
mov
movsl
mov
std
lret
lahf
bound
or
test
adc
adc
adc
inc
loopne
push
loope
xlat
push
stc
lret
mov
int3
insb
clc
dec
jne
add
popa
out
inc
not
mov
std
insb
mov
sti
lock
imul
cmpsb
adc
mov
sti
test
xlat
sub
and
or
notb
iret
test
daa
mov
push
mov
mov
icebp
sbb
pop
adc
pop
add
lea
or
ja
mov
push
imul
fldt
push
std
aam
insb
add
push
mov
cld
jg
out
jmp
int
sub
mov
icebp
sbb
inc
sbb
lods
test
nop
cmp
or
sbb
fbld
mov
mov
loop
or
inc
adc
jecxz
ss
push
lds
sub
pop
fistps
cli
push
clc
sti
call
es
push
imul
xor
push
lock
pop
mov
jp
push
and
jmp
push
outsl
or
inc
mov
pop
ret
icebp
sbb
loop
add
cmp
adc
das
sarb
out
xchg
cmp
ss
and
inc
and
pop
jbe
mov
add
into
test
pop
mov
hlt
ret
ret
nopl
imul
das
lds
push
jno
fcoml
cmp
fwait
mov
add
mov
outsb
ds
mov
movb
mov
ja
sbb
daa
xor
sarb
stos
das
jne
mov
ret
ret
jge
push
pop
popa
ret
pop
and
sub
daa
mov
test
test
mov
mov
xchg
mov
les
xlat
jp
mov
push
push
jns
stos
dec
xchg
xor
shr
jg
pop
pop
jecxz
sahf
and
repnz
sbb
push
sub
out
mov
test
sbb
pop
std
add
insl
ss
aas
icebp
aam
jb
xchg
xchg
stc
imul
test
sbb
sbb
mov
or
xchg
inc
mov
cmp
xchg
and
mov
or
add
outsb
cmc
adc
mov
pop
dec
std
add
xchg
adc
fisttps
sbbb
cli
add
adc
add
icebp
ret
les
insl
out
dec
jle
pop
jne
pop
cmc
pushf
and
ljmp
or
push
loopne
imul
jp
mov
jp
dec
aaa
fsqrt
or
push
mov
dec
scas
je
scas
pop
jle
mov
je
pushf
test
add
mov
movsl
mov
mov
xchg
jb
loopne
mov
sbb
lret
hlt
mov
cwtl
test
je
loop
pop
or
cltd
loope
sbb
jne
jp
test
shrb
cmp
out
mov
inc
clc
iret
lds
xor
es
or
or
xlat
add
or
inc
push
xabort
jne
lock
jnp
stos
fs
jg
xchg
inc
js
jg
jle
stc
pushf
adc
lahf
mov
sahf
jmp
mov
jns
add
sub
xchg
mov
cltd
rol
ljmp
movntps
cmp
leave
mov
cltd
cmc
daa
nop
cld
sub
xor
ffreep
test
cli
inc
pusha
jnp
sub
or
shlb
xorb
sbb
lret
push
iret
sub
stos
pop
repnz
cld
or
std
sbb
sbb
test
inc
sbb
push
aaa
sbb
push
inc
jo
cmp
out
cmpsl
jg
mov
cmpsb
les
mov
adc
sub
stc
sub
pushf
push
mov
insl
in
dec
sbb
aaa
mov
inc
pop
test
mov
movsb
push
fistps
loope
mov
add
xchg
roll
mov
pop
cld
adc
pop
xchg
arpl
lahf
mov
inc
adcl
imul
int3
cmp
push
or
and
pop
outsb
push
cld
inc
xchg
xor
and
mov
call
loope
pop
cmp
sti
stc
mov
add
in
dec
mov
push
add
or
xchg
xor
out
shll
jg
or
repz
cmp
sarl
mov
sbb
and
pop
mov
enter
or
sbb
pop
sbb
ja
jns
mov
mov
cld
pushl
add
outsl
lea
cmc
addl
adc
push
sti
jge
test
dec
pop
je
mov
dec
mov
and
adc
std
stos
nop
lock
in
imul
jae
xchg
mov
dec
imul
dec
dec
cld
push
dec
jl
push
cs
test
push
imulb
rolb
clc
gs
xchg
clc
lea
inc
imul
push
mov
and
pop
pop
dec
ja
mov
xor
cmp
popa
aas
mov
repz
sub
or
jns
adc
incl
add
mov
and
xchg
aas
mov
loope
adc
insb
popa
and
jne
rcrb
or
fmull
pop
inc
stos
repnz
add
icebp
lahf
fwait
sbb
xchg
aas
test
inc
jecxz
lret
test
cmc
lahf
push
add
push
xchg
xchg
cli
or
cmp
xor
aaa
rcrl
in
lret
shl
in
jmp
mov
in
xor
cmp
sub
and
mov
pop
sbb
push
fistpll
cwtl
aaa
lcall
adc
add
std
sub
js
and
out
xchg
lahf
in
insb
subb
outsb
in
add
test
xchg
cmp
insl
adc
decb
sub
inc
sbb
inc
xchg
lret
ss
lcall
adc
xchg
loope
mov
mov
push
je
cmpsl
mov
sub
fcomip
jg
scas
xlat
adcb
xor
stos
or
mov
test
xchg
push
loop
cwtl
in
insl
jno
icebp
insb
movhps
enter
std
jecxz
cmc
sbb
lret
cmp
push
or
loopne
inc
das
dec
add
ja
add
orl
outsb
pop
and
xor
loope
lea
lock
loopne
rorb
jne
leave
ja
and
lea
mov
and
mov
sbb
mov
xor
xor
xorb
incl
inc
jle
inc
ds
sbbb
loop
jg
rclb
sub
rorb
out
add
rcll
and
cld
jb
lcall
xor
imul
out
and
inc
fdivrs
es
push
lcall
push
push
lret
vpand
pop
repnz
xlat
mov
add
pop
inc
cli
and
jo
push
sbbl
jbe
clc
inc
inc
jbe
sub
inc
clc
lds
mov
in
ljmp
mulb
fbstp
fwait
jo
cmp
popa
mov
or
hlt
in
xchg
aaa
popa
aad
lods
loopne
es
push
shlb
movsb
add
fwait
movsb
push
xchg
cmp
out
ja
and
mov
shlb
add
inc
jg
ret
cwtl
cld
sub
push
jno
repz
xor
clc
xchg
mov
clc
or
sahf
loopne
hlt
shlb
cld
aam
mov
xchg
adc
stos
or
and
pop
icebp
out
or
jbe
xor
or
mov
pop
jl
inc
pop
mov
js
cmp
sti
and
fadds
add
mov
mov
es
inc
lock
sahf
loope
nop
mov
call
sub
and
lea
pushf
test
pushl
popa
xchg
or
repz
sbbb
out
icebp
push
cld
ret
xchg
movsb
mov
jp
xchg
hlt
and
lods
clc
and
sub
pusha
ss
in
dec
push
mov
sti
or
in
ffree
aam
adc
aaa
sahf
sub
and
sbb
pop
sar
insb
aaa
out
es
xor
xchg
push
aaa
cld
test
mov
sbb
clc
mov
loopne
inc
aaa
js
jns
mov
mov
sub
adc
inc
outsb
dec
cmpl
cli
inc
or
test
xchg
or
cmpsb
push
dec
cmp
and
in
push
fisubl
outsb
adc
cmp
aam
and
mov
dec
sub
pusha
mov
add
ret
fildl
mov
or
cmp
mov
jecxz
notb
add
sub
repz
in
or
inc
aaa
add
jnp
cmpsl
dec
inc
push
cmc
xor
mov
rcr
imul
clc
stc
lock
mov
stc
pop
lret
pop
in
mov
or
out
adc
jg
incl
lock
arpl
cs
and
js
xchg
loop
mov
movsl
sbb
mov
xor
or
push
cmp
jne
lods
xchg
mov
inc
shll
ljmp
and
xor
icebp
sti
lock
ficomps
lock
imul
push
clc
dec
popa
adc
and
and
sub
lock
cmp
xchg
call
ficompl
adc
std
adc
rcrb
rclb
pop
pop
pop
lcall
aam
mov
out
add
outsl
movsl
rcll
call
scas
cmp
adc
sub
fisttpl
sub
pop
nop
jns
mov
pop
push
pop
push
lock
push
jbe
sub
and
mov
inc
jg
dec
sbb
push
shlb
cmp
cs
cwtl
movl
cs
daa
outsb
sbb
orb
les
and
inc
loop
cmpsb
decl
mov
mov
push
ret
inc
add
outsl
or
dec
inc
dec
inc
aas
cmc
mov
into
loop
hlt
les
jl
xchg
inc
insb
lock
sub
cmp
lock
fisubs
pop
adc
pusha
sub
fistpl
mov
cmp
xchg
pop
fildl
ror
fiaddl
fs
outsl
clc
cmp
and
inc
sti
stos
fisubrl
xchg
cmp
push
adcl
loopne
pop
loopne
inc
daa
push
xor
aam
sahf
pop
das
mov
stc
push
push
fiadds
sub
or
or
cmp
lcall
fists
popl
sbb
scas
dec
xor
adc
repz
adc
jmp
rclb
cmp
roll
fwait
mov
mov
mov
fidivs
push
adc
data16
sub
aad
shlb
loopne
mov
mov
les
mov
jae
clc
dec
jge
sub
and
xlat
jge
xchg
stos
je
lahf
pop
rorb
and
xchg
ss
push
rcrb
cld
or
pop
ja
push
rorb
not
negl
mov
decb
enter
sarb
mov
lock
std
scas
add
push
dec
fidivl
aaa
pop
ljmp
pop
inc
loope
call
mov
push
dec
rorb
pusha
jnp
insl
xchg
xchg
imul
push
mov
mov
ss
iret
clc
dec
testb
cs
mov
push
add
push
add
sub
ret
push
imul
mov
mov
and
mov
movups
sbb
repnz
sbb
pop
imul
xor
clc
add
xchg
xor
icebp
mulb
jae
fdivrl
cli
mov
loopne
or
xchg
add
scas
mov
popf
add
add
sub
ss
std
sub
outsl
cmpsb
hlt
add
nop
mov
mov
sbb
add
stos
cs
pop
adc
pop
mov
mov
ljmp
jp
fsubrs
stc
inc
mov
or
adc
pop
sub
adc
jbe
sahf
movsl
movsb
or
clc
daa
mov
insl
jle
outsl
pop
stos
cmp
aaa
push
xchg
jne
mov
incl
pop
dec
jne
push
mov
je
add
xor
dec
loopne
dec
jbe
int3
push
fcmovne
ds
jl
pop
and
pop
icebp
ja
dec
mov
loop
push
cltd
leave
jge
cld
or
xchg
add
add
xchg
mov
out
rsqrtps
xchg
sbb
hlt
xor
cmpsl
sbbb
fisttps
add
xor
and
sbb
xor
addl
addr16
sbb
addl
rcrb
mov
fs
mov
pop
mov
sub
mov
jge
clc
mov
cmp
adc
push
cmp
idivb
cltd
lods
decl
loop
je
sbbb
or
xchg
out
imul
mov
sbb
iret
inc
adc
jnp
or
xchg
inc
stos
mov
xor
dec
inc
fistpl
xor
sbb
push
andl
test
call
sbb
cli
push
rclb
out
pop
scas
push
outsb
dec
jnp
push
or
in
mov
std
xor
xchg
ljmp
outsw
add
sbbb
ds
cmp
mov
test
mov
jmp
inc
je
sub
mov
and
sub
icebp
imull
aas
popf
xor
jno
or
dec
movsb
lock
mov
pop
add
ret
nop
inc
cmc
outsb
cld
pop
or
mov
pop
pop
or
jb
or
loopne
ljmp
push
cld
mov
push
mov
mov
xchg
popa
in
cmp
aam
shrb
clc
lret
fs
test
dec
insl
out
and
push
roll
shl
sub
xchg
in
outsb
mov
sbb
shll
mov
out
cmp
mov
cwtl
and
mov
push
adc
mov
push
pop
jmp
inc
mov
jp
add
imul
pusha
mov
nop
arpl
enter
cld
or
ljmp
adc
cmp
fdivs
ds
jno
adc
pop
inc
jmp
inc
push
fbstp
cmpsb
adc
arpl
fistpll
lret
cmp
sahf
and
sbb
rcpps
faddl
lahf
inc
add
icebp
push
sbb
lods
gs
or
arpl
pop
pop
xor
sub
jno
push
cwtl
iret
mov
adcb
add
mov
push
in
mov
ja
ds
jne
loopne
fisubrs
cld
loop
ret
add
push
push
cmp
push
inc
mov
or
mov
inc
sbb
sub
inc
mov
and
push
mov
ficomps
out
rcrl
mov
inc
leave
push
xor
mov
mov
int
adc
adc
mov
xorb
dec
xor
push
rolb
jl
inc
or
test
je
daa
out
push
out
add
and
loope
cmp
jl
mov
xlat
pop
push
fmuls
or
cld
loop
cmp
xchg
das
sub
adc
int3
fmull
mov
arpl
ja
pop
adc
adc
push
mov
mov
cmp
sub
out
push
hlt
push
call
je
jnp
push
ret
scas
dec
cld
or
xor
dec
mov
fwait
into
jo
cwtl
pop
mov
or
inc
push
subb
push
lock
sbb
pusha
imul
loopne
push
mov
and
ja
and
jp
leave
add
xchg
incl
iret
sysexit
movb
and
test
jg
addb
dec
jns
js
enter
push
test
lcall
pop
or
mov
sbb
sbb
clc
lds
fisttps
pop
push
pop
adc
imul
sbb
mov
pop
adc
push
das
or
fdivrl
xor
xor
inc
incb
testb
pop
jge
ret
xchg
mov
inc
xor
push
cmp
cmpsb
into
rcrl
adc
orl
xchg
mov
cmova
jl
test
add
sub
adc
hlt
test
add
aas
adc
mov
dec
incl
xchg
adc
ficomps
pop
fimull
jg
mov
xchg
push
push
inc
mov
mov
std
xor
fisttpl
dec
rol
and
dec
xchg
mov
lahf
test
mov
aam
lret
adc
push
cmp
jo
push
cltd
push
fs
cmp
dec
bound
ljmp
and
sub
ja
mov
call
out
gs
lea
mov
mov
add
ljmp
add
aaa
out
dec
pop
mov
adc
jl
sub
mov
cmp
pop
push
lret
cwtl
mov
pushf
pop
push
add
popa
dec
xchg
xor
push
push
call
scas
adc
pop
xchg
test
dec
and
push
test
test
rcr
test
das
dec
lret
and
insb
movsl
cmc
aad
out
into
rclb
jle
loopne
add
sub
cmp
mov
enter
xchg
or
stc
punpckhwd
fs
mov
ret
push
sub
cmp
ss
inc
jbe
cmp
orl
cmpsb
push
push
inc
mov
add
xchg
or
add
jbe
mov
mov
mov
add
cltd
mov
jl
into
mov
clc
sub
mov
divb
mov
movsl
push
cld
ror
mov
in
int
push
xlat
sub
sbb
xor
push
mov
rorb
or
in
xor
inc
fldt
mov
cli
add
lods
call
add
test
pop
mov
fwait
ds
mov
inc
pop
adc
aas
mov
push
aad
sbb
fbld
pop
leave
jae
sti
sbb
pop
pop
adc
imul
lds
fdivl
outsb
fadds
ret
cmp
cmp
push
shrb
cmp
cmpsl
add
add
and
and
add
stc
out
jbe
xor
jg
aas
in
xor
push
mov
or
push
sbb
sub
cld
cmp
jo
dec
cmp
loope
xchg
dec
jno
pop
and
adc
cmp
inc
leave
jb
insb
mov
add
je
cmpsl
ficoms
jg
xlat
fsubrl
sbb
jae
cmp
adc
adc
or
ss
sbb
lea
out
jp
rorl
ret
ss
addb
cli
cli
xchg
call
popa
push
ss
lods
sub
data16
mov
rcrb
cmpsb
orb
mov
jg
mov
ret
stos
jo
cli
or
mov
stos
insb
rclb
jo
lret
subb
mov
inc
loop
add
out
inc
lcall
test
in
xchg
icebp
fdivr
pusha
mov
mov
and
pop
out
sub
xchg
or
cmp
push
xchg
repnz
in
xchg
mov
cwtl
test
add
push
cld
wbinvd
out
shll
rcrb
inc
cmp
sub
push
nop
add
adc
dec
jp
decl
in
xor
mov
inc
sbb
xor
or
incl
sbb
xchg
ret
ljmp
popa
or
adc
pop
movsb
dec
mov
clc
mov
push
rclb
shll
add
arpl
sub
add
loop
lds
push
rclb
imul
mov
and
test
or
aaa
jg
lcall
pusha
out
fdivrs
outsb
add
icebp
dec
sub
clc
or
test
mov
or
jle
mov
ja
cltd
in
popl
or
ds
jmp
mov
or
or
decl
sbb
sub
jb
sti
cld
fidivs
pop
and
clc
sub
cmpsb
push
adc
cld
aas
add
dec
mov
or
popa
dec
aas
xor
mov
sub
sub
bound
jae
lcall
and
testb
fimull
clc
lahf
add
in
sbb
imul
jnp
xor
sub
or
fs
pop
and
add
mov
lods
lods
js
push
aad
sti
hlt
inc
jmp
popf
mov
adc
popa
adc
mov
sub
movsl
aaa
dec
add
dec
sbb
add
lret
xchg
in
rolb
outsl
push
decl
push
es
cld
jo
aam
fimuls
add
sbb
sbb
inc
cld
out
or
sub
cwtl
inc
les
decl
adc
shll
cmp
test
arpl
add
push
pop
mov
inc
cmp
je
lcall
cld
pusha
arpl
hlt
add
adc
roll
lcall
push
pushf
xor
bound
sbb
sbb
andl
ret
cmp
pop
mov
cmp
and
sub
push
vmovdqa
inc
or
or
and
or
mov
mov
loopne
xor
popf
mov
push
adc
hlt
push
insl
adcl
and
cmc
push
rcrl
or
mov
mov
outsl
mov
or
out
fwait
pop
add
add
push
out
je
insb
cmp
shrb
jmp
push
mov
add
xor
mov
add
test
fxch
add
and
xlat
push
adc
imul
cmp
or
out
test
and
mov
push
mov
jl
add
add
pop
pop
or
test
jo
jns
loope
mov
mov
xor
loopne
pop
call
test
jg
in
push
mov
das
jno
push
jl
pop
scas
aam
ret
icebp
pop
push
fs
mov
xchg
add
mov
lds
out
jne
sarl
cwtl
pushf
sbb
mov
mov
imul
test
clc
das
jmp
mov
xchg
sahf
enter
pop
sbb
mov
mov
js
sbb
inc
jmp
and
ja
ret
mov
mov
nop
xchg
decl
cmp
pop
mov
push
pop
xchg
lea
cld
xorb
adc
pop
xchg
or
sahf
inc
cmp
xchg
jo
test
icebp
xor
jno
arpl
or
repnz
mov
add
sbb
js
test
sub
pop
mov
xchg
nop
shrb
scas
jae
inc
sub
or
insb
filds
jb
jae
into
and
out
or
cmp
shlb
jae
lods
les
movsb
dec
xlat
faddl
ss
adc
xchg
mov
ja
pop
mov
in
mov
jmp
lock
sbb
jo
clc
mov
mov
insb
sbbl
jo
dec
testl
rcrb
inc
stos
out
add
inc
dec
jo
inc
or
add
fsub
xor
push
mov
add
pop
mov
jle
add
add
adc
mov
mov
insl
pmaddwd
inc
xor
add
lds
into
imul
es
mov
jp
push
loop
aam
mov
mov
push
mov
xor
push
add
filds
xor
stos
jne
mov
test
test
xchg
ret
sub
and
jne
mov
mov
cmp
pop
imul
scas
jns
inc
hlt
add
ret
or
insb
js
push
notb
jns
movsl
jecxz
rcrb
dec
push
adc
jle
jo
or
xor
xchg
push
outsl
xchg
or
jnp
pop
sbb
pop
orb
jg,pn
clc
dec
outsl
push
std
scas
xchg
mov
dec
idiv
into
rorb
mov
frstor
push
ret
and
mov
and
xchg
add
in
js
adc
push
jnp
js
insb
cs
js
inc
adc
adc
les
in
push
test
sub
bound
fidivrs
mov
loope
inc
faddl
out
xor
jg
call
movsb
sbb
aam
push
mov
mov
ss
cmp
test
data16
clc
aad
andnps
lret
jns
dec
xchg
mov
nop
imul
ret
fimull
xchg
es
mov
sbb
mov
mov
inc
mov
lods
cmp
jne
repz
clc
xchg
add
jle
js
xorb
shll
lock
pop
imul
cld
sbb
mov
jge
xchg
mov
sub
int
movsl
test
mul
je
es
into
or
jbe
scas
retw
test
call
arpl
adc
int3
leave
push
loope
dec
mov
cmp
pop
test
cmp
cwtl
fcoml
mov
lods
js
sti
cmp
enter
jmp
cmpsl
das
xchg
push
jmp
xchg
repnz
xorl
insl
xchg
into
lods
out
mov
in
and
pop
les
mov
pop
mov
mov
fadds
add
jle
jl
add
cmpsl
addr16
mov
mov
sti
popa
pop
sbb
std
xchg
vcvtsi2sdl
sub
pop
xchg
dec
xor
lds
popa
xchg
fcmovnbe
add
pop
fidivrs
pop
addl
sub
test
mov
xchg
xor
jns
cwtl
adc
pop
cmpl
loop
int
icebp
hlt
pop
stos
mov
or
inc
lcall
divl
mov
in
rorb
cltd
mov
js
xorl
xor
in
cmp
pop
iret
rcrb
aad
sbb
inc
or
pop
mov
xlat
je
sub
sbb
insl
bound
inc
enter
jp
push
iret
aas
mov
and
push
jno
loopne
outsl
cmp
add
int3
sar
xor
outsl
xor
xor
and
test
lahf
in
and
cmc
outsl
loopne
push
push
cmp
sarb
push
mov
lahf
or
dec
out
mov
fldt
nop
mov
inc
in
inc
das
cmpsb
push
in
push
mov
lods
adc
fnstenv
addl
jns
aas
inc
into
dec
in
and
rol
mov
jo
cmp
out
rolb
push
or
inc
dec
pop
pop
jmp
add
cmpsl
pusha
enter
outsb
ret
dec
or
inc
sub
push
mov
cmp
ja
jecxz
inc
mov
mov
cmpsl
jae
pop
ds
call
xchg
add
mov
add
dec
mov
sbb
repnz
mov
int3
pop
push
cld
push
js
mov
sbb
add
sahf
mov
icebp
inc
insl
mov
andb
dec
aas
xor
and
adc
test
pop
xchg
xchg
ds
subb
inc
xlat
xchg
lock
cmp
mov
js
push
sbb
in
lds
lret
mov
fcoms
mov
jl
popa
data16
jb
dec
mov
pop
dec
paddw
jp
cmp
push
mov
adcb
icebp
ljmp
push
push
lods
cmp
dec
cltd
or
or
je
mov
pop
jg
out
jo
ds
insl
cld
les
inc
mov
out
mov
lcall
ljmp
rcll
cli
in
dec
adc
pop
aaa
xor
lea
pop
inc
mov
xchg
push
lods
in
mov
or
in
xlat
jne
aas
pusha
aaa
mov
add
imul
xchg
ret
jle
jo
lahf
addl
icebp
hlt
push
add
test
je
popa
stc
popf
jnp
inc
test
mov
inc
pop
mov
mov
mov
lahf
sarb
daa
ret
jbe
addr16
pop
mov
xchg
cmc
and
mov
and
inc
pop
ret
xchg
mov
adc
loopne
mov
inc
cmp
mov
rorb
leave
or
icebp
bnd
in
xor
xlat
or
js
xorl
pop
loopne
add
and
jge
push
cmp
pop
add
pop
or
push
push
fsubs
insb
add
pusha
scas
shr
jmp
es
es
xorl
movsb
imulb
jmp
xor
ja
cmp
js
lcall
out
xlat
and
xchg
xchg
mov
inc
adc
mov
adc
in
jle
pop
ret
add
sbb
cmpsb
cmp
fidivrs
xor
xchg
jl
js
movsb
aas
add
test
lods
mov
pop
jmp
popf
lods
fsubl
or
rorl
stos
pop
daa
sahf
shll
sahf
mull
hlt
inc
popa
inc
sbb
push
ret
pop
or
ss
std
sbb
stos
ss
push
cmp
aaa
mov
cmpsl
fcmovnbe
adc
loopne
mov
aas
shrb
dec
xor
xchg
enter
adc
out
and
mov
or
sub
stos
dec
jle
xchg
fnstenv
rcrl
test
inc
xchg
cmp
ljmp
ret
fldt
mov
mov
insb
rorl
addb
cld
xor
rcr
mov
lds
into
push
xchg
fcomps
jo
clc
rclb
cmc
loop
add
adc
hlt
sbb
fs
push
mov
enter
mov
adc
cltd
scas
add
adc
mov
into
xor
loop
repz
fcompl
pop
scas
decb
pop
cmp
mov
inc
addr16
mov
sahf
cmpsb
or
ficoml
sahf
or
sub
jp
roll
leave
inc
and
add
xchg
xchg
pop
stos
xchg
xchg
jno
inc
hlt
pop
push
adc
mov
xchg
sub
shlb
adc
inc
mov
std
add
mov
ret
sub
xor
or
add
test
sti
sub
inc
movsl
xor
xchg
sbb
cmp
dec
mov
icebp
push
cmp
push
mov
sub
push
outsl
cmp
rol
mov
xor
dec
push
push
pop
jle
jmp
imul
mov
xlat
jmp
mov
cs
aas
pusha
or
jae
jmp
push
push
adc
sub
cmpsb
pop
adc
lods
popf
shl
sbb
push
pushf
ljmp
fadds
movsl
add
pop
lods
inc
stc
lods
cmp
jno
clc
add
orl
cmp
and
sahf
add
and
inc
loop
mov
push
and
in
jb
inc
out
push
add
cli
insb
lds
addr16
push
rorl
push
add
inc
mov
lock
cmp
xchg
add
mov
sbb
jecxz
iret
mov
mov
lret
push
mov
pop
sub
xor
in
cltd
push
push
cli
pop
mov
jnp
jno
or
and
outsl
inc
cs
pop
lds
cmp
jp
lahf
pop
cld
adc
sub
repz
enter
inc
stos
mov
fwait
pop
mov
cs
adcb
arpl
fwait
xchg
imul
xor
addb
jno
out
cmp
test
xor
adc
pushf
movl
lock
sbb
push
sbb
jmp
push
xorl
sbb
out
cmp
inc
mov
adc
ljmp
mov
push
lcall
mov
aaa
dec
scas
jo
cmp
mov
xor
mov
lret
xchg
ret
lret
pushf
pop
mov
inc
fbld
ss
pusha
push
cwtl
xchg
js
pop
adc
push
jp
jne
jmp
or
shlb
ja
xlat
das
std
push
out
or
adc
jg
ljmp
cmp
rcr
mov
push
sbb
out
sbb
loopne
sub
jmp
inc
mov
outsb
push
jle
inc
pop
jbe
or
or
and
fisttps
xchg
jmp
inc
sub
xor
out
adc
inc
mov
pop
gs
jbe
in
inc
sub
and
aam
popf
pop
lods
mov
mov
sbb
shlb
sbb
add
and
popf
sub
push
in
inc
jmp
ret
mov
push
in
jl
out
rep
sbb
xchg
push
jle
pop
lods
cld
sub
je
clc
clc
stos
add
mov
or
lcall
in
jnp
out
les
add
shr
orl
nop
cmp
jae
sub
pop
in
adc
dec
fucom
xor
mov
dec
cmpsl
push
inc
cmp
dec
aam
sub
and
inc
in
movsl
mov
sar
xchg
inc
fwait
jns
repz
sbb
mov
dec
out
ret
push
mov
inc
dec
rolb
mov
popf
ds
push
and
xor
sti
jecxz
mov
inc
mov
sub
mov
inc
and
pop
in
adc
fbstp
jge
imul
in
sbb
xor
push
int3
std
inc
das
test
xorl
xor
test
ficoml
adc
pop
aaa
dec
sub
dec
mov
pusha
dec
jp
inc
or
mov
xlat
pushf
pop
push
mov
rcrb
sbb
or
movsb
mov
cmpsl
mov
gs
pusha
push
dec
and
xor
xchg
push
leave
adcb
add
rol
add
xor
cltd
hlt
and
sub
jnp
xchg
shr
push
add
pusha
sub
stc
test
cmp
xchg
pusha
jmp
add
seta
push
dec
inc
inc
cmp
hlt
jb
aas
inc
add
aad
pop
xor
subb
lret
xchg
and
inc
ss
xchg
fwait
xchg
push
incl
aaa
arpl
mov
dec
or
loopne
dec
cs
jnp
and
jl
adcb
push
stos
shl
icebp
inc
hlt
and
jb
insl
add
sbb
add
mov
or
pop
test
out
rolb
movsb
and
pop
xchg
loop
sbb
cmp
pop
mov
xchg
repz
dec
out
sub
fcomps
pop
cmp
or
adc
outsl
cmp
or
push
xchg
pushf
jg
sbb
jae
push
ljmp
xor
stos
stos
xor
dec
out
clc
xchg
or
fmul
fisttpl
sahf
aam
lcall
dec
mov
xchg
flds
mov
xchg
rcll
inc
jnp
add
out
fdivrs
lock
inc
call
lock
fwait
push
add
repnz
pabsb
adcb
loop
jg
sbb
or
sarl
push
ds
cmp
add
outsb
push
imul
iret
push
pop
add
push
and
jo
es
jae
inc
fcomps
jg
sbb
out
jns
repnz
nop
mov
fmuls
add
xor
lea
adc
andb
test
sti
xor
or
pop
sub
mov
jnp
dec
mov
inc
das
and
pusha
mov
add
pop
jnp
add
sbb
fcmove
or
mov
mov
int3
outsb
je
xchg
bound
loopne
mov
xlat
lds
ljmp
scas
pop
pop
push
mov
or
mulb
mov
inc
fcomps
mov
mov
cmpsb
push
and
lret
int3
xor
ja
aad
fcmovu
loopne
add
cli
daa
xchg
cmc
add
sbb
pop
mov
cmp
adcl
mov
jg
push
je
and
or
mov
jnp
jp
add
inc
mov
aas
call
fwait
and
test
mov
sbb
fisttpl
mov
mov
ficoml
sbb
cmpsl
ss
shlb
loope
out
and
sub
sahf
out
sbb
lretw
dec
cmpsb
xchg
cmp
pop
pop
rorb
xor
mov
vandps
jg
les
inc
loope
loopne
adc
test
fcmovb
aam
mov
jecxz
jp
ds
ja
add
inc
ss
mov
add
sahf
inc
or
adc
inc
inc
jp
push
cltd
ret
cmp
cmp
out
cmp
fwait
ret
lret
aam
xor
dec
fmulp
aaa
movsl
add
xor
sub
insb
xor
lods
cld
xor
cmc
add
add
ss
xor
mov
push
sub
lock
cmp
xchg
xchg
test
sub
push
mov
or
popf
xlat
sti
and
insl
or
xor
int3
hlt
pusha
sub
xor
add
pop
inc
or
enter
xchg
dec
xlat
jecxz
pop
inc
lcall
mov
xor
xor
push
push
cmp
push
sti
mov
pop
lahf
fadds
sub
jle
cmp
jae
sahf
hlt
dec
mov
cmp
mov
jge
nop
cli
mov
in
adc
jg
pop
ret
test
sub
push
push
pop
adc
dec
and
in
jge
lods
mov
lahf
lds
test
and
shlb
std
jg
mov
push
sub
pushf
aaa
and
cli
icebp
aas
out
lcall
sbb
pushf
pop
pop
jp
sub
mov
sbb
ret
mov
insl
adc
sub
pop
dec
inc
imul
aaa
in
sti
adc
gs
loop
pop
xchg
jo
aad
adc
movq
add
xor
imul
arpl
sub
iret
scas
and
add
rcl
lcall
mov
mov
cs
pop
addr16
jns
push
aaa
shrb
scas
push
cmp
cmpsl
and
xor
mov
dec
imul
sahf
enter
rorl
inc
mov
andb
xor
repnz
or
insl
lret
mov
pop
fcompl
orb
fldpi
subb
xor
sub
hlt
mov
stos
add
sarb
inc
sbb
out
lcall
das
mov
pop
stos
es
stos
ja
sub
mov
jno
out
mov
adc
dec
add
sub
lock
iret
push
mov
insb
jg
jle
rol
mov
ret
mov
pop
add
fbld
and
lret
pop
xchg
inc
xchg
jecxz
push
bound
jg
pop
push
jmp
lock
insb
hlt
lock
ficoml
mov
mov
or
mov
pop
dec
mov
addl
pop
push
xor
in
sbb
mov
mov
lods
daa
subl
dec
add
or
outsl
mov
mov
or
mov
pop
in
in
fdiv
lock
dec
fdivrs
mov
xchg
push
testl
outsb
mov
xchg
xor
dec
push
push
std
and
stos
subl
fsubrs
push
pop
fnstcw
bound
push
adcl
cmpsb
inc
loope
lds
lock
fimuls
jmp
jmp
repnz
popa
mov
cmpsb
xchg
jp
jmp
xor
mov
imul
dec
aad
jmp
out
sbb
in
mov
les
xchg
mov
sbb
jg
mov
inc
add
insl
call
int
dec
xchg
in
xchg
add
sbb
aad
sti
les
mov
ss
jbe
xchg
es
dec
sbb
shrb
adc
iret
ds
xchg
ret
sub
test
adc
lret
and
mov
dec
dec
scas
fistpll
xor
subb
push
push
push
inc
imul
sbb
push
dec
cld
lods
sti
test
dec
pop
or
test
iret
sbb
fdivp
je
loopne
jp
negb
ret
inc
jp
mov
rcrb
jecxz
jl
scas
jle
add
lcall
negb
xchg
sbb
mov
jo
adc
push
mov
mov
ficoml
add
cmp
add
dec
fidivrl
cltd
repz
mov
call
xor
xchg
adc
test
inc
cmp
jge
ret
mov
mov
jl
sar
lret
cmc
outsl
shlb
outsb
mov
aaa
cld
or
adc
adcb
cltd
cmp
add
jns
leave
pop
push
call
insb
xchg
sbb
or
cmp
outsl
jp
push
jb
mov
sbb
dec
stc
pop
pop
mov
inc
ret
jae
xchg
addr16
cwtl
mov
jno
movb
and
vcvttpd2dq
adc
jne
cmp
stos
cli
shll
insb
push
lods
cwtl
sub
cmp
or
or
arpl
lock
cmp
mov
add
mov
xor
cld
ud2
dec
hlt
popf
pushf
cli
adc
push
adc
sub
test
mull
es
icebp
cmpsl
ds
xor
or
filds
cs
sbb
xchg
out
mov
adc
nop
xor
nop
lea
mov
mov
sub
mov
lcall
aaa
pop
add
push
add
ret
push
scas
or
sbb
jns
cs
call
jle
xchg
int3
and
addl
test
or
cli
xchg
jecxz
cmpsb
cld
outsl
or
adc
addr16
adc
pop
test
aam
insb
push
inc
or
push
aas
mov
test
mov
ss
mov
clc
les
aaa
mov
jecxz
or
jl
rol
or
or
in
aaa
xor
jp
ds
sti
mov
jne
das
pop
pop
ja
add
push
dec
add
push
mov
adcb
inc
lods
or
loope
stc
clc
lahf
jp
xchg
test
dec
loop
adcl
sbb
xchg
loop
popa
lock
idiv
mov
jl
adc
dec
and
inc
mov
loopne
stc
lock
mov
iret
push
sub
popf
lock
popf
hlt
fadds
inc
mov
dec
cli
clc
add
mov
pop
loopne
push
mov
cmp
lahf
jb
shlb
lea
icebp
aad
mov
movsb
outsb
pop
rolb
lahf
mov
sbb
mov
and
repz
mov
inc
test
inc
xor
shl
cmpsl
outsl
mov
xrelease
test
lcall
pop
bound
push
icebp
adc
or
sub
fimuls
packsswb
add
sbb
sbbb
sub
movsb
inc
mov
xchg
cmp
movsl
ljmp
pop
imul
rcrl
sbb
clc
rorl
stos
mov
or
push
nop
outsb
mov
mov
dec
adc
fdivrl
mov
das
cld
sub
mov
sub
ret
pusha
dec
jne
fstpt
movsl
imul
ret
inc
or
ret
movsl
mov
xchg
mov
adc
repnz
pop
jno
adc
fcoms
mov
loop
xchg
xor
popa
popa
lock
push
xor
sbb
js
pop
xor
adc
out
jle
call
dec
mov
scas
xchg
rcl
les
paddb
mov
bndldx
xor
fcompl
sbb
rolb
add
sub
sub
cmp
movl
add
and
xor
cld
xchg
cld
icebp
sti
or
jecxz
notl
dec
outsl
shll
sbb
fstl
jp
adc
int3
movsl
cmc
ret
pop
pop
or
xor
aad
add
daa
pusha
fs
jp
adc
cmpsb
pop
inc
xchg
in
fldt
pop
rorb
shl
adc
push
addr16
and
or
lcall
sbb
sbb
lret
jne
mov
mov
les
adcb
sub
add
aaa
dec
add
jg
push
add
mov
icebp
push
xchg
jmp
cmp
xor
add
sbb
jge
adc
icebp
xor
stc
pop
push
pop
out
mov
inc
add
dec
jp
inc
lds
in
push
dec
pop
nop
stos
out
popf
in
and
add
test
lret
mov
mov
add
or
xor
mov
cmp
test
pop
sbb
sbb
test
loopne
and
mov
rcrb
es
push
push
mov
jbe
cli
inc
data16
loope
push
js
xchg
push
cmp
lock
outsl
or
jp
xchg
ds
jle
outsb
add
test
cmp
add
mov
push
in
repz
lock
scas
mov
push
out
sbb
sub
hlt
inc
fadd
xabort
push
js
out
adc
sbb
cmp
mov
jns
es
lea
or
mov
loope
mov
add
mov
and
insl
cmp
inc
cmp
or
cs
dec
aad
clc
dec
je
push
sbb
mov
mov
rcll
mov
pusha
shl
push
daa
ror
loop
js
and
ret
dec
adc
sti
test
nop
rclb
sub
xor
fists
aaa
dec
out
pop
lods
aaa
cwtl
in
cmp
mov
stos
inc
faddp
leave
xchg
bnd
das
sbb
xchg
sub
cwtl
fadds
pop
in
add
pop
cmp
dec
fbstp
dec
inc
pop
insl
xchg
fistps
call
push
lods
ss
lock
divb
dec
jmp
inc
dec
sub
shl
jmp
fldt
outsb
jne
call
aas
pushl
push
or
push
xchg
pop
loope
adcb
dec
arpl
dec
adc
adc
pop
adc
pop
rolb
divb
mov
pop
mov
fcoml
add
jle
pop
jno
jecxz
int3
push
or
jge
dec
xchg
call
cmc
inc
movsb
sbb
out
jg
mov
inc
adc
lahf
lret
out
and
xor
xchg
es
xchg
cmp
or
dec
sbb
cmp
xchg
popf
dec
icebp
js
aam
mov
mov
scas
fimuls
jo
mov
mov
icebp
dec
cmpsl
dec
or
xadd
test
loope
or
or
xlat
mov
push
sub
pop
rcll
enter
int
aaa
jp
jne
test
push
adc
fs
add
jecxz
add
or
push
pushl
jle
jb
cwtl
das
add
ret
enter
mov
dec
jecxz
lds
jmp
nop
or
mov
pop
fs
call
add
loope
dec
and
sbb
cmc
ja
addr16
inc
in
add
pop
jl
and
add
cwtl
sub
or
insl
subb
lret
daa
lods
es
push
cld
push
aas
nop
sub
out
xor
aas
mov
imul
gs
adc
add
outsl
andb
jp
mov
lock
jb
adc
mov
pop
ss
xchg
repz
clc
sub
mov
add
insl
xchg
out
rclb
clc
call
cmp
jg
scas
insl
inc
pop
fldt
call
jle
inc
pop
xor
cli
push
hlt
push
je
pop
ljmp
fst
push
es
push
dec
push
mov
addr16
sarb
loopne
outsb
jo
push
cmp
in
pop
out
sbb
push
xor
xor
cli
loopne
bound
mov
inc
fs
xchg
leave
popa
mov
mov
ljmp
pop
and
out
lea
fisubrl
pop
pop
adc
scas
push
test
pusha
jmp
xchg
clc
ljmp
cmpsl
and
fimull
push
lcall
aas
mov
push
sub
sub
repnz
lods
lcall
cmp
outsb
add
fnstsw
std
push
sbb
adc
mov
ret
or
sub
add
shrb
xor
jns
sbb
xchg
inc
adc
insb
mov
sbb
pop
fidivl
pop
dec
mov
cwtl
arpl
es
aas
call
repnz
push
push
pop
les
xchg
adcb
mov
mov
or
xchg
sub
divb
insb
icebp
dec
mov
fisttpl
fisubrs
push
fildll
subb
mov
cltd
push
jae
push
test
nop
or
mov
jg
pop
movsl
push
testb
push
mov
mov
imul
inc
in
aam
jnp
popa
negb
fwait
push
mov
xchg
lea
dec
loope
xor
loopne
mov
adc
mov
mov
push
mov
call
xchg
push
cmpsb
bts
fwait
in
push
loop
stos
cmpsb
sub
cmp
sahf
mov
cs
testb
lock
fldt
add
lret
cmc
or
inc
adc
and
lock
mov
shld
lret
push
stos
bnd
push
adc
aad
mov
and
xor
push
leave
cli
or
faddp
fildll
cmovbe
mov
bound
add
std
or
ds
sub
and
out
jg
and
lods
sub
cmpsl
push
pop
inc
movsb
fmuls
add
loope
insb
test
cli
adc
std
loop
ljmp
and
sbb
daa
and
adc
in
loope
cmp
push
divb
mov
stc
or
dec
mov
rcr
mov
pusha
inc
jno
mov
xchg
out
pop
loopne
adc
jbe
test
add
data16
jmp
mov
add
sti
lret
jp
test
sbb
lds
out
pop
sub
sbb
cwtl
jb
pop
mov
dec
adc
push
gs
inc
out
cmp
sbb
adc
mov
xchg
lahf
clc
mov
inc
mov
arpl
sbb
add
rcrl
dec
mov
loopne
jg
sub
inc
aam
jb
in
jge
cmpb
push
mov
cli
mov
rorb
rorl
ret
in
add
cmp
push
mov
out
in
mov
daa
cmpsb
in
cmovle
shlb
push
cmp
sbb
mov
fsubrl
orl
xchg
jg
mov
outsb
sbb
and
mov
fidivrs
jb
pop
loop
adc
sub
cmp
mov
hlt
inc
pop
insb
pop
dec
push
add
fildl
stos
and
jbe
xchg
aaa
mov
add
mov
cmp
dec
test
ret
jbe
cmp
insl
stos
test
shrb
ds
mov
idiv
inc
xor
or
xor
dec
scas
push
mov
sub
add
jp
jnp
mov
mov
mov
testl
xor
push
adc
fisttpl
test
dec
jle
rclb
or
push
out
int
pop
cmp
jbe
mov
and
xlat
cmp
js
push
cmp
and
xor
push
test
sub
mov
test
push
rclb
add
ror
pause
adc
popl
mov
pop
ss
or
in
adc
jp
pop
sub
sbb
jno
cmp
call
flds
repz
ss
shll
jb
data16
loop
fcoml
pop
jmp
cli
or
sub
insl
aam
push
pop
dec
pop
jge
cld
lds
and
movsb
daa
js
lcall
xchg
imul
xor
stos
adc
or
inc
push
add
andb
pop
roll
dec
stos
jbe
movsb
mov
cmp
inc
sbb
add
sahf
popw
push
sub
cmp
add
shl
or
pop
push
movsb
and
add
lock
jbe
jo
ljmp
rclb
lods
mov
add
in
xor
outsl
imul
push
push
sbb
movsb
add
mov
cs
sarb
into
or
dec
push
rcl
fmull
pop
insb
out
push
fwait
cmpsb
add
jecxz
insb
sub
inc
and
jb
jo
xor
in
mov
push
jno
xor
adc
or
adc
adc
sub
xchg
and
fs
pusha
pop
dec
pop
negb
adc
flds
xchg
adcb
jge
jg
scas
cwtl
cmpsl
inc
xchg
shl
sub
in
jno
stos
cs
out
mov
movsb
imul
sbb
inc
jp
jg
loop
pushf
loope
inc
stc
add
adc
adc
fs
fmulp
inc
xchg
rorl
fsubr
or
dec
leave
stos
adc
orl
xchg
mov
daa
push
loop
add
decb
iret
mov
loopne
fwait
sbb
test
mov
mov
pop
loop
inc
sbb
push
mov
jno
stc
push
jno
mov
mov
push
fs
cli
mov
das
lock
call
xor
jl
mov
sbb
cs
loopne
jg
call
mov
xchg
jae
xor
mov
jecxz
fwait
xor
pushf
mov
jg
mov
sub
jb
mov
jp
clc
stos
out
inc
adc
clc
push
add
lods
imul
out
sbb
nop
jg
je
push
scas
cld
mov
out
xchg
push
xchg
cs
cmp
inc
mov
push
aas
stos
loop
xor
mov
mov
dec
dec
adc
lods
xchg
aad
sub
add
xor
rcrb
pop
enter
lods
or
cmp
push
jmp
xor
pop
jecxz
sarl
push
stos
nop
sarb
sub
orb
movd
aas
loopne
fwait
jo
es
mov
outsb
loope
sarb
clc
pusha
dec
out
test
sbb
push
ss
nop
push
jmp
add
hlt
adc
adc
hlt
pop
cs
clc
shlb
das
add
in
arpl
xchg
stos
jecxz
rcrl
fadds
test
pop
cs
cld
sarl
sub
inc
ds
nop
sbb
dec
lock
loop
sbb
call
loope
outsl
imul
icebp
mov
repz
cld
out
aas
icebp
dec
dec
dec
aam
push
xchg
cmpb
adc
sbb
fnstsw
add
test
jge
pop
jle
pop
pop
add
pusha
cs
push
push
incb
jmp
sbb
jmp
lea
enter
inc
xchg
add
pop
xor
xchg
mov
xchg
ret
dec
xor
das
push
jge
cld
inc
outsb
jbe
cld
out
cld
sbb
ret
mov
fst
add
inc
or
rolb
pop
adc
lock
call
mov
loope
xchg
mov
hlt
xchg
xlat
pop
and
fst
bound
es
inc
xchg
adc
mov
hlt
add
mov
inc
jb
loopne
cmp
push
aad
sub
pop
imul
lds
push
lods
mov
daa
jecxz
pop
cmp
pop
ja
pop
pushf
push
rol
in
pop
enter
stos
int3
icebp
push
mov
mov
dec
loope
cmp
sar
pop
add
cld
sub
or
cmpsl
sub
loopne
loopne
xchg
les
les
loope
das
cmp
sub
rclb
inc
addr16
pop
adc
jecxz
jmp
jo
lret
pop
lods
inc
shl
rol
dec
stos
push
or
fistl
pop
and
sub
sbb
inc
pop
movsb
repz
or
pop
mov
mov
out
call
pusha
movl
xor
enter
or
aaa
movsl
inc
and
fwait
dec
mov
dec
cmp
cmp
out
jp
shlb
push
mov
sub
lock
lahf
scas
aaa
adc
sbb
mov
push
jnp
or
and
fcoms
or
pop
flds
ret
cmp
shl
mov
sarb
adc
mov
dec
fiadds
nop
cmp
inc
adcl
jnp
ljmp
push
xor
fwait
js
cli
push
and
int
xchg
mov
dec
movsb
add
sub
shrb
lcall
mov
scas
jecxz
jns
hlt
lahf
mov
stos
cwtl
movsl
sub
jnp
dec
mov
xchg
cli
jnp
rol
adc
or
fadd
inc
cmp
into
adc
jno
mov
cli
inc
repz
icebp
repnz
in
add
dec
inc
pop
test
insb
shll
jb
pop
xchg
popf
cmp
push
xchg
pop
inc
mov
pop
cmp
fs
es
mov
int
sbb
jl
mov
fs
push
jg
clc
icebp
daa
mov
mov
mov
pop
pop
subl
push
sbb
daa
aas
push
dec
nop
mov
call
mov
jp
or
lock
sub
dec
loope
iret
inc
jl
inc
popf
add
xor
jle
pop
or
inc
xchg
fists
popa
add
jmp
jo
pop
sub
das
sub
cmp
or
pop
test
aad
sbb
bound
stos
add
fs
adc
stos
dec
test
js
push
inc
pop
add
xor
cld
mov
js
add
and
pop
add
jle
jg
aas
xor
sub
sbb
or
dec
push
xor
cmp
imul
mov
sub
test
mov
sti
enter
pop
mov
jle
outsl
fmuls
xchg
popf
test
sbb
loope
pop
mov
inc
jg
inc
and
aas
data16
mov
mov
les
adc
scas
incb
pusha
fwait
push
xor
xor
jl
les
arpl
rorb
mov
enter
and
xchg
sub
and
jp
inc
pop
cli
cmpsb
notb
movsl
or
cld
addb
cmp
fldcw
mov
cmpsb
sbb
into
rolb
mov
jne
xchg
sub
aam
push
bound
push
sarb
dec
xor
push
or
mov
nop
inc
aam
pop
ljmp
and
lock
in
ljmp
dec
pop
notb
mov
pop
mov
inc
pushl
and
adc
fdivrl
push
ss
cmp
pop
and
pushl
jl
jo
xlat
or
stos
shlb
jge
insl
hlt
and
mov
inc
ret
shll
and
loop
sub
cld
movsl
aad
or
popa
and
mov
mov
and
jmp
fisubs
sbb
lahf
cs
ror
lret
pop
int
out
test
push
push
jg
stos
sub
cmp
jmp
jmp
enter
scas
pop
popf
dec
leave
lds
aad
cltd
js
stos
gs
jecxz
lret
cs
sub
ficoms
push
mov
or
aaa
les
and
inc
ja
or
into
roll
jnp
add
sbb
out
mov
cli
sbb
sub
inc
clc
pop
push
xchg
rorb
in
inc
mov
jno
ljmp
call
int3
pop
pushf
jl
pop
and
aas
mov
jg
fsubp
fsubrs
xor
dec
mov
fs
sti
dec
loope
cmpsb
push
clc
in
pop
push
push
iret
subb
out
mulb
mov
jo
clc
xchg
lahf
iret
stc
add
roll
aas
sbb
xor
test
fwait
test
in
movsl
movsl
push
xor
je
loopne
add
flds
jb
sub
sub
mov
nop
cld
push
pushf
pop
clc
and
loop
xchg
mov
aas
es
or
lret
scas
pop
mov
jp
loope
adcl
out
sub
pop
and
lret
push
int3
pop
add
dec
push
nop
adc
sub
add
fidivs
sbb
cli
cli
orl
add
push
adc
stos
fcomi
fldt
sbbl
add
mov
orl
jb
adc
push
push
mov
in
aaa
cmp
mov
jo
lods
and
inc
cli
pop
test
hlt
mov
push
add
pop
or
inc
fcompl
stos
aaa
fiaddl
imul
push
push
cwtl
inc
mov
testb
repnz
push
dec
dec
push
cwtl
fsubrp
sbb
ret
push
push
jbe
adc
int
pushf
inc
pop
pop
je
or
sbb
and
fildll
xchg
mov
lock
lret
and
pop
test
ret
push
fwait
mov
or
es
inc
fs
jb
cmc
add
flds
dec
ss
clc
outsb
out
adc
xor
in
ja
jg
pop
inc
test
out
mov
hlt
sahf
add
jae
xorl
loop
cmp
cmpl
mov
test
cli
addr16
inc
aaa
xchg
cli
idivl
sbb
addb
and
fs
lock
outsl
sbbb
shr
xor
loop
mov
test
jg
sbb
decl
sub
rcrb
push
and
jge
cmp
rol
das
mov
jae
sub
fmul
lock
adc
flds
add
cmp
xor
push
jge
aam
push
dec
xor
scas
les
sub
out
pop
push
xchg
jo
jb
ljmp
xor
push
adc
and
push
xor
ljmp
fistps
movsl
bound
ljmp
xchg
xchg
test
hlt
xchg
push
inc
xchg
mov
dec
in
xchg
push
test
jp
dec
hlt
xchg
mov
add
scas
push
hlt
push
sbb
repz
outsl
in
sbb
dec
into
cmp
jle
add
fcmove
pop
xchg
imull
jle
lock
inc
rorl
mov
stc
mov
aaa
in
xor
pop
icebp
mov
xor
roll
push
lods
xor
mov
inc
movsl
pop
in
fwait
addb
add
pop
push
rorb
test
push
push
mov
or
jl
test
mov
ds
push
mov
mov
jnp
xchg
and
sub
repz
add
cmc
mov
jge
adc
loopne
jmp
subb
push
aaa
scas
cmp
test
mov
push
cmc
rorl
mov
and
adc
enter
orl
lcall
pop
vmwrite
lret
dec
adc
lret
lcall
and
add
jecxz
aam
test
jnp
out
fcom
push
and
and
fists
bound
pop
pop
or
pop
or
pop
std
decl
faddl
arpl
test
dec
add
xor
lret
imul
clc
lods
jmp
jo
clc
inc
in
testl
clc
sti
out
dec
xor
dec
mov
je
cmc
sbb
dec
pop
ret
adc
push
adc
popf
pop
test
and
sub
mov
dec
lahf
jae
es
inc
adc
sbb
add
rcrb
inc
xchg
test
sbb
jno
mov
scas
inc
das
aaa
jo
or
mov
jns
fwait
jg
sub
fistpll
inc
xor
test
sbb
pop
testb
cmp
rorb
jle
pop
cmpsl
inc
add
pop
enter
out
push
and
dec
fistpl
add
stc
int
jl
jnp
lds
aas
jl
das
pop
push
add
repnz
std
fnstcw
mov
sub
es
das
ss
enter
adc
and
mov
es
loopne
or
scas
ret
mov
ret
inc
ja
mov
push
inc
cmp
adc
cmp
fwait
mov
stos
add
testb
dec
imul
adc
xorb
dec
push
insl
jnp
fldt
sar
into
popa
cmp
xchg
fwait
mov
pushf
rolb
mov
lods
out
fsubl
sbb
and
mov
into
out
jno
sahf
sub
shll
ss
jb
mov
repz
mov
pop
loop
push
mov
sub
es
test
sub
int
ss
xor
push
cwtl
negb
test
sbb
pusha
dec
push
push
pop
shrl
fcmovu
sub
std
inc
inc
fisubl
push
mov
mov
out
lcall
ljmp
ljmp
cmpsb
sub
push
or
push
movb
cmp
ror
fisubrs
push
loopne
shrl
push
pop
xor
pop
loopne
cmc
pushl
mov
imul
rorb
push
out
xchg
loope
jg
test
repnz
fiaddl
fsubrl
sbb
mov
add
adc
and
or
push
add
mov
ret
int3
movsb
jl
lahf
pop
pop
sahf
add
mov
mov
xor
notb
cmpsl
negl
aam
jns
loope
bnd
call
inc
enter
lods
aam
std
cltd
movsb
andb
sahf
outsl
cwtl
xchg
xor
shl
cmpsb
mov
test
popf
es
adc
push
sarb
iret
sub
movsb
shrb
scas
mov
mov
test
pop
or
cmp
cli
pop
inc
fsubl
aad
fsubs
dec
push
jmp
mov
push
jno
jo
lods
push
das
sbb
xchg
repnz
adc
les
jg
js
xchg
jmp
add
orl
nop
cwtl
adc
movsb
idiv
xlat
lahf
std
lret
cmpsl
push
sbb
sub
dec
dec
cli
lds
pop
push
inc
lock
and
mov
nop
jne
test
imul
test
xchg
and
ljmp
ret
dec
fiaddl
mov
shr
pop
push
cmp
cmpl
adc
sahf
loopne
pop
pop
ljmp
test
lahf
push
jg
pop
xchg
mov
pushf
cmpl
jl
push
lret
jg
jb
lods
push
subb
insl
aas
xor
call
mov
mov
xchg
lock
cli
scas
cmp
sub
add
popa
dec
xor
push
lcall
in
mov
dec
jo
into
loopne
inc
sahf
pop
push
inc
rcll
pop
and
mov
xchg
fwait
cmp
push
jo
outsb
xchg
loope
cs
inc
adc
pop
push
mov
test
outsl
sbb
dec
fisubrs
push
xchg
out
push
clc
pop
rolb
imul
enter
mov
fnstcw
push
or
jg
aam
sarb
shlb
inc
add
std
fs
jg
iret
xchg
daa
mov
xchg
push
scas
mov
imul
mov
mov
ret
and
and
fadd
loopne
pop
lock
cltd
int3
and
xor
xor
xor
add
ss
mov
cmpsb
mov
out
mov
jle
mov
sub
cmc
movl
fadds
push
ljmp
xor
fimuls
dec
pop
jmp
and
sbb
xorb
mov
jle
aaa
into
push
std
cld
lock
clc
mov
push
movsb
add
jl
push
push
clc
shrb
call
lea
and
fiaddl
push
in
mov
and
hlt
inc
and
int3
mov
and
lret
add
or
mov
or
jle
hlt
das
push
pop
fimull
or
sub
incl
sbb
loope
push
arpl
xorl
insb
ljmp
cmp
fdivrs
pop
lods
push
sub
idivb
call
push
lock
xchg
fisubrs
sbb
sub
or
movsl
out
test
jmp
inc
xchg
push
fdivr
sbb
pop
sbb
cwtl
mov
dec
and
lods
pop
adcl
je
xchg
movsb
adc
cli
xchg
jmp
filds
cmp
xchg
jae
clc
sbb
test
clc
xchg
add
lret
loopne
mov
sub
cmp
jns
loopne
cmp
shlb
cld
fidivrs
mull
sbb
cwtl
mov
push
sbb
push
ret
sbb
mov
shl
incb
push
clc
aam
xor
jp
push
xchg
aas
mov
repnz
popf
lret
loopne
hlt
add
dec
mov
loope
mov
aaa
sub
std
insb
inc
pushf
jo
jg
mov
cmp
dec
adc
or
inc
dec
jg
and
gs
cwtl
push
adc
mov
mov
sarb
aaa
add
rclb
and
push
add
mov
pop
push
push
inc
iret
pop
arpl
and
mov
mov
sub
dec
mov
sbb
cmp
mov
push
fisttps
out
ficoml
mov
dec
data16
inc
pop
push
lahf
ds
mov
cli
pop
cld
cs
in
in
adc
push
xor
add
or
and
out
pushf
in
inc
adcl
sub
dec
fcoml
and
sbb
mov
mov
push
flds
add
inc
gs
aas
and
pop
cltd
pop
mov
pop
lds
insl
decl
js
add
icebp
pop
shll
sub
cld
jg
inc
pop
jmp
inc
add
jns
push
cmp
aad
cltd
push
or
cltd
lock
jmp
xchg
pop
and
push
test
data16
jp
xlat
rorb
add
cmc
add
and
cmp
scas
jae
jle
fisttps
and
repnz
xchg
lods
dec
xchg
lret
rcrl
in
fs
xchg
jmp
fidivl
inc
inc
outsl
addb
rorb
jbe
fldl
push
lahf
sbb
push
call
xor
and
popa
add
ss
push
jge
loop
xchg
mov
sbb
call
add
ret
lds
sbb
inc
adcb
pop
sbb
push
stc
jmp
leave
fidivl
aad
xchg
mov
cmp
mov
xchg
fdivl
imul
fcomip
xchg
sub
sbbl
sbbl
cmp
cmp
shlb
push
lods
push
loopne
jne
xor
mov
shlb
in
sbb
mov
or
or
scas
shlb
jnp
cmpsl
dec
cld
pop
out
outsb
sbb
mov
rolb
sub
in
loope
int3
rorb
mov
jno
or
loop
jl
mov
imul
jnp
push
mov
xchg
push
int
and
or
adc
xor
hlt
xchg
adc
andl
cmp
shl
pop
push
shlb
add
pop
imul
jp
add
sahf
out
sbb
imul
jg
js
xor
mov
lds
cmp
push
jle
loopne
dec
cs
cmp
sub
and
aas
add
mov
out
push
sbb
push
push
stos
inc
inc
int
cmp
js
repnz
mov
dec
xchg
add
fwait
test
adc
mov
cmp
sub
jg
int
or
dec
xor
adc
ret
scas
sbb
xchg
pusha
inc
mov
xchg
mov
jo
aam
mov
js
push
cmp
pop
popa
fistps
stc
jae
mov
or
rclb
fildll
leave
leave
mov
imulb
clc
xchg
call
push
adc
sbb
mov
insb
cs
dec
int3
rcrb
std
push
mov
pop
lods
leave
or
jmp
pop
inc
pop
inc
pushf
gs
mov
inc
cld
mov
repz
or
jg
ret
and
xor
jle
fisubs
mov
icebp
imul
popl
dec
ret
pop
adc
fisttps
cmp
pop
daa
test
lock
icebp
outsb
cwtl
test
mov
pop
aas
shlb
xor
adc
pushl
jbe
jne,pn
xor
pop
push
insb
test
std
sbb
pop
pop
loopne
push
dec
in
push
dec
adc
and
xor
xchg
jg
cmp
cmc
inc
inc
paddb
hlt
jge
mov
and
ja
ds
movsb
push
push
and
out
insl
cmpsl
imull
es
lds
test
aaa
loopne
sub
lahf
mov
xor
cmpb
int3
add
outsl
decl
jb
rol
jg
inc
push
and
pusha
dec
in
xchg
js
pushf
sbb
out
aad
adc
lea
or
in
test
imul
xor
fsubr
call
mov
out
push
cli
loopne
aam
lds
mov
or
pop
add
into
jp
lret
mov
in
sbbb
cmp
or
das
sbb
add
pop
push
sbb
gs
push
ljmp
stos
out
add
jle,pn
inc
ret
sti
mov
push
jg
jge
add
cwtl
mov
cli
push
loope
mov
rcrl
xchg
ret
loopne
test
js
icebp
movsb
loope
xchg
inc
ss
inc
test
test
inc
sbb
insl
or
cli
cvtps2pd
shrb
mov
test
or
mov
mov
cs
imulb
mov
orl
nop
add
jno
and
std
outsb
dec
loopne
in
test
popa
rorl
les
loope
mov
aas
jle
stos
xchg
mov
sbb
xlat
lea
xor
push
xlat
mov
in
or
pop
popf
jle
outsl
jno
dec
or
aam
adc
add
popa
fdivs
loop
sub
dec
pushf
or
xchg
push
push
lret
xor
orb
inc
push
push
add
cmp
incb
clc
add
push
sub
lret
mov
push
push
loop
dec
ret
and
add
and
jg
cwtl
and
sbb
cmpsb
add
dec
or
cmp
sbb
hlt
sub
push
mov
pop
sub
pusha
sbb
add
xor
out
or
fucomp
inc
lcall
cld
cld
inc
xor
fsubrs
mov
mov
fwait
xor
pop
in
leave
add
push
sub
push
sbbb
mov
adc
test
cmp
jno
jecxz
mov
lods
pop
sub
repz
dec
adc
push
fcmovb
jecxz
or
push
test
mov
xor
aaa
adc
sarb
mov
add
stos
sub
cs
pop
jmp
mov
jo
inc
jo
in
jg
push
and
mov
gs
inc
insb
rol
sub
inc
sub
loop
add
ja
sbb
divb
popa
add
repnz
or
lock
idivb
mov
sub
lods
inc
dec
and
mov
adc
mov
jge
mov
mov
sub
and
repnz
rcl
in
flds
in
inc
loope
test
push
scas
sub
icebp
pop
fcmovbe
inc
jae
insb
lock
xchg
push
inc
popf
rorb
mov
mov
inc
imul
test
sub
jne
xor
loopne
inc
pop
pop
push
xchg
cli
aad
sar
or
andl
cmp
test
sbb
sub
scas
xor
or
lret
mov
outsb
sbb
loopne
xchg
cli
mov
push
cli
bound
repz
adc
popf
sbb
add
ret
mov
enter
sbb
mov
add
sarl
hlt
das
mov
mov
int
sub
frstor
add
das
push
cld
xchg
andb
pushf
or
jnp
fs
sub
sbb
add
popf
hlt
xchg
cs
or
js
jp
nop
bound
mov
aad
in
std
fsub
pop
clc
sbb
mov
fcomip
scas
mov
jae
jno
scas
cmp
and
hlt
filds
inc
mov
or
ret
pop
add
add
test
add
xchg
jg
push
jmp
cmp
jbe
pop
adc
movsb
push
dec
dec
nop
bound
xchg
pop
mov
mov
ret
mov
sbb
cld
mov
pop
or
sahf
inc
mov
sub
addr16
out
or
mov
fld
popl
iret
or
test
aas
aad
ret
jo
icebp
pop
sbb
pop
inc
add
cmp
pop
cmpsl
lods
ja
movsb
cmp
pop
addl
movsb
mov
add
bsf
xlat
fwait
sbb
sbb
jno
dec
inc
mov
das
imul
and
fcomps
fisubl
inc
lret
dec
fldcw
mov
jmp
mov
jle
push
pop
jno
inc
dec
hlt
dec
add
jl
jnp
ss
xchg
ds
add
cmc
paddd
es
inc
cmp
bound
adc
or
sarl
mov
rcll
je
dec
inc
dec
pop
loopne
sarl
insl
adc
xor
or
pop
xchg
hlt
pop
pop
and
xor
adc
filds
mov
push
loope
dec
mov
sbb
dec
mov
shl
decl
decb
enter
mov
and
sbb
or
leave
outsl
jg
jae
cwtl
push
inc
js
lea
xor
pop
insb
jle
mov
inc
sbb
mov
add
cmpb
rorl
mov
rcrb
loop
pusha
in
cld
or
je
test
add
lret
xchg
mov
adc
stos
sahf
vmovlps
sbb
dec
cli
xchg
adc
in
add
fs
test
xchg
pop
rcr
sarb
push
movups
dec
push
add
sub
pop
and
ja
or
punpckhbw
shr
or
test
inc
scas
mov
or
add
pop
dec
or
add
mov
hlt
loope
mov
push
hlt
and
sbb
mul
push
nop
pop
sub
cmpsl
aam
xchg
call
stos
and
adc
jge
inc
sahf
cmc
rorl
sarl
pop
das
mov
add
pop
inc
in
cld
fcomi
push
cmp
jecxz
sub
sbb
movsb
fsubr
aas
jmp
imul
add
sub
adc
lahf
sbb
out
movsl
cwtl
xor
xchg
xor
jae
xor
jle
repnz
mov
sahf
sbb
mov
rol
fidivs
xlat
fdivs
mov
push
ficomps
add
cli
aas
movsl
dec
je
dec
mov
nop
push
test
lds
mov
and
add
stc
into
lcall
lods
mov
bound
mov
clc
cmpsl
add
addb
inc
mov
mov
inc
and
subb
addr16
or
sbb
xchg
xchg
inc
leave
pop
clc
xchg
outsl
pop
jecxz
and
aam
push
adc
push
imul
add
sub
or
outsl
ret
or
cmp
punpckhdq
jecxz
jl
sbb
fldt
mov
mov
sbbb
pop
outsl
push
ffree
xchg
ret
out
xor
faddl
cmp
aad
ds
sbb
adc
pop
pop
xor
push
icebp
ds
adc
loopne
xchg
xchg
les
addl
push
mov
sbb
popa
lods
mov
xchg
jp
cs
xor
xchg
int3
mov
dec
cs
push
pop
stc
cmp
push
fmull
mov
or
or
cltd
sub
mov
mov
nop
lcall
jnp
xchg
jge
je
mov
movsl
fwait
je
sbb
add
in
nop
pop
movsb
fadds
jg
and
cmpsb
mov
test
mov
sub
pusha
push
or
fwait
movl
cmp
in
or
adc
add
jge
push
pop
push
sub
xchg
pop
inc
dec
enter
imul
xchg
pop
mov
lcall
arpl
push
inc
pushl
xor
jecxz
ja
sbb
clc
xchg
inc
push
stos
repz
imul
cmp
in
mov
cli
mov
scas
push
or
cmpsb
pop
das
js
push
pop
inc
iret
and
arpl
push
daa
mov
dec
jb
jmp
jp
lods
out
cld
push
js
mov
lea
ljmp
dec
rolw
jns
jne
mov
adc
std
inc
pop
add
lods
cmp
cld
or
sti
sbb
mov
pop
dec
sbbb
mov
lahf
jle
inc
fldt
cmp
push
or
push
xchg
cmc
push
test
and
idivb
ss
add
orl
hlt
or
cwtl
jp
sbb
cmp
iret
ss
inc
lahf
ret
pop
jb
cmp
mov
sub
das
mov
sbb
ja
adc
int3
insl
lret
movsl
cltd
mov
push
dec
sub
clc
pop
popa
out
popa
es
sub
sub
pop
adc
cmp
xchg
pop
jo
jmp
rcl
loop
mov
sbb
ss
mov
mov
xchg
cmp
mov
daa
sarl
sbb
dec
inc
fildl
shrb
int
ficompl
xchg
cltd
cmp
fisubl
das
lret
jns
popf
lock
xor
xchg
testb
inc
xor
mov
mov
xchg
mov
aas
aam
mov
mov
or
or
adc
shll
xchg
mov
loopne
pushf
cld
stc
adc
cmpsb
push
scas
test
cli
aam
sbb
mov
mov
or
add
lods
cltd
push
jbe
mov
add
incb
add
es
add
mov
cmp
ljmp
add
fnstenv
pop
dec
xor
pop
or
cmp
test
sub
push
and
cmp
pop
pop
cmp
dec
test
xchg
pop
inc
sti
or
icebp
test
and
jg
or
and
sub
addl
mov
enter
and
subb
notl
push
xchg
or
shl
adc
les
cmp
je
js
cmpsl
insb
jo
gs
or
movsl
pop
adc
scas
or
lret
out
jnp
jp
fcom
cld
pop
xor
xchg
mov
xorl
sub
adc
push
call
les
inc
and
popf
test
push
sbb
cmpsb
jg
inc
jle
sbb
lods
fisubl
inc
push
inc
cmc
pop
xor
aam
and
testl
test
xor
dec
stos
popa
mov
dec
je
mov
nop
cltd
fcmovb
mov
and
aaa
mov
leave
icebp
es
cmp
testl
jo
lahf
scas
xchg
dec
repnz
cmp
or
mov
mov
and
dec
dec
pavgw
push
test
xor
cli
stc
xlat
xchg
inc
enter
xchg
fiaddl
ret
outsb
int3
cmc
pop
adc
icebp
xchg
leave
bound
xchg
lret
in
inc
inc
cmc
mov
sahf
jge
clc
add
or
and
ret
aas
jle
fxam
rcl
pushf
lods
ljmp
sub
divb
ds
jge
add
cmc
or
ljmp
gs
cmp
std
ss
inc
out
dec
jl
jg
or
test
jmp
cmpb
mov
fldl
pushf
loopne
push
loopne
or
xchg
xor
je
ficoms
mov
sbb
out
pushf
js
xchg
sahf
dec
outsb
inc
sub
adc
push
and
jno
xchg
push
hlt
ljmp
mov
adc
push
or
test
into
fstl
add
outsl
adcl
test
fsubr
test
xchg
addl
test
lods
and
popf
cld
push
lcall
pushf
push
xor
adc
cltd
jge
xor
inc
data16
add
pop
mov
mov
push
push
mov
add
sub
shlb
lret
push
sub
into
pop
inc
push
mov
mov
cmpsl
test
mov
sti
pop
push
js
notl
adc
jecxz
pusha
roll
movsl
daa
outsl
popl
sbb
mov
inc
loop
add
std
adc
sahf
nop
sarl
dec
test
enter
mov
or
push
lock
jo
jbe
fcoms
pushf
data16
push
lds
add
in
push
sbb
cmp
add
jl
movb
add
xlat
push
sbb
enter
lahf
loopne
stc
inc
mov
stos
sbb
call
inc
cmp
push
cmp
ret
push
push
or
pop
pop
jge
mov
loope
cmp
imul
dec
xor
mov
push
push
iret
fwait
int3
dec
gs
cwtl
sti
add
dec
adc
push
lea
clc
ret
out
push
das
stos
or
push
push
and
add
sbbb
mov
cmp
movsb
push
or
loopne
jmp
lock
lret
aad
push
mov
jno
rol
push
test
out
hlt
sbb
sbb
add
clc
lock
or
push
xchg
push
pop
ret
lock
fbstp
js
mov
es
jno
xor
push
add
cmp
lahf
sub
movsb
xadd
lret
pop
mov
sub
imul
ds
inc
adc
adc
out
stc
inc
pop
sub
mov
pop
ficompl
lret
lea
test
sbb
pop
mov
mov
mov
and
cli
hlt
stos
and
mov
or
inc
pop
pushf
push
add
push
add
js
cmp
fistpl
andb
dec
jo
jp
sbb
and
cmp
cltd
add
fdiv
mov
jb
mov
daa
subb
xchg
sub
in
push
lds
or
rcl
push
jmp
aas
fs
mov
push
mov
aaa
ror
xor
jno
subl
cwtl
and
add
sbbl
gs
jb
xchg
cmp
adc
test
lods
adc
movsb
push
add
or
je
test
outsb
hlt
mov
or
jb
inc
push
bound
mov
popa
mov
movsl
and
loope
mov
fiaddl
dec
mov
scas
sub
adc
ret
pop
inc
out
fisubl
lea
filds
pop
lods
stos
lret
push
mov
shlb
popa
mov
sbb
mov
mov
clc
mov
sbb
sbb
or
pop
data16
test
fwait
test
test
movsl
adc
sahf
xchg
js
popf
inc
jg
mov
addl
icebp
ret
add
shrb
repnz
cwtl
mov
mov
stc
icebp
mov
arpl
testl
std
xchg
int3
out
stos
sub
sbb
adc
adc
sbb
adc
loop
and
or
aam
push
or
and
mov
pusha
push
push
fdiv
mov
push
sbb
pusha
adc
loopne
sub
inc
outsb
icebp
adc
dec
and
jmp
jp
out
clc
in
dec
sbb
shld
cld
insb
out
xchg
fbld
bound
outsl
fwait
outsb
push
xchg
hlt
add
mov
faddl
lahf
push
pop
aaa
cmp
fimull
cmp
sub
sub
hlt
call
pop
xchg
rorb
xchg
out
mov
mov
push
jle
gs
rorl
push
push
cmp
popa
dec
jnp
sub
movsl
gs
je
push
pop
les
mov
sbb
adc
dec
imul
lods
nop
and
dec
mov
ret
and
adcl
add
addr16
xchg
push
and
jle
mov
test
cmp
or
hlt
pop
call
inc
or
shlb
jne
out
push
pop
cld
cmp
aaa
cwtl
sub
movsl
jg
cwtl
mov
in
mov
sbb
push
push
fucomp
cmp
shrl
scas
mov
sbbb
and
gs
xchg
or
pusha
inc
sbb
das
lods
xchg
insl
mov
pmulhw
inc
in
cmp
inc
lods
addr16
mov
xchg
xor
push
ljmp
sbb
sti
jbe
or
inc
arpl
push
pop
inc
cld
repnz
jecxz
mov
mov
fmull
mov
enter
es
fnstcw
mov
push
adc
mov
or
xchg
lret
adc
mov
cwtl
push
inc
fnstenv
add
mov
mov
dec
push
sub
add
shll
pop
rcl
das
push
push
lahf
push
mov
scas
loope
mov
cwtl
or
mov
dec
addr16
jmp
push
or
hlt
stos
pop
sub
sbb
pushf
jl
es
aas
pop
aad
push
add
loope
xchg
cmc
pop
iret
add
xlat
jno
movsb
jne
and
xor
dec
mov
lahf
cmp
or
push
stos
adc
mov
out
out
not
dec
std
mov
cmpb
pop
mov
shll
andb
mov
sti
pop
mov
pop
in
shlb
mov
sub
in
cli
jge
addb
stos
mov
call
or
scas
pop
repnz
dec
jge
stc
hlt
je
jbe
dec
stos
push
sbb
add
mov
inc
stos
or
mov
dec
sbb
add
xchg
rcrl
subb
or
test
pop
sub
cmpsl
jmp
sbb
ficoms
adc
sbb
mov
sbb
jmp
sbb
rorl
pop
jmp
cld
sbb
addr16
pop
addr16
adc
icebp
dec
inc
add
jle
ja
and
jo
jo
out
mov
in
pushf
add
pop
dec
popa
cmp
adc
sbb
add
xor
lds
cmpsl
sti
inc
movntps
sbb
jno
lret
mov
sti
sub
mov
pop
add
mov
lea
ret
fisttpll
jb
andl
sub
cmp
pop
scas
mov
mov
mov
aaa
mov
loope
rcl
pop
and
addl
rorl
repnz
add
adc
lods
mov
and
daa
sti
sti
stos
adc
movsl
fwait
sub
jmp
push
mov
jmp
cmp
ljmp
fdivrs
sbbb
cs
aas
mov
loope
and
enter
icebp
jbe
jp
insl
xor
adc
clc
pop
xor
cmp
mov
xchg
das
sub
orl
lods
xchg
jbe
and
into
lods
pop
xor
not
fisubl
mov
sub
imul
outsb
sbb
jge
mov
fldenv
add
clc
xchg
pop
rorl
mov
inc
roll
and
int3
or
push
imul
pop
fwait
mov
out
inc
repz
paddw
mov
outsb
mov
xchg
sub
addl
ss
dec
and
jmp
shlb
int
jg
xor
nopl
lods
add
out
pop
and
jl
add
nop
arpl
pop
pop
add
cli
pop
pop
mov
sub
push
mov
pop
orb
pop
in
sbb
fiadds
lret
inc
pop
dec
xchg
inc
adc
imul
xor
mov
scas
xlat
inc
push
dec
add
pop
push
or
lods
add
push
or
repnz
mov
imul
sub
popa
pop
imulb
xchg
fidivs
enter
xor
mov
arpl
push
in
cmpsl
pop
clc
data16
js
xchg
jge
and
adc
cmp
inc
jno
cli
push
sub
inc
jge
mov
icebp
jo
mov
mov
mov
mov
insl
add
add
jle
outsl
mov
cwtl
or
add
pushf
and
push
mov
dec
aas
lcall
jno
xchg
roll
dec
or
adc
xor
ret
arpl
dec
cmp
adc
cmpsl
pop
add
xchg
cli
ret
ret
mov
xchg
xorl
fiadds
iret
addr16
ror
mov
xchg
icebp
mov
mov
mov
lcall
jge
mov
xor
imul
sarl
pop
pop
je
addl
and
ret
jle
insb
testb
or
dec
sub
andb
jmp
inc
pop
sub
rcrb
inc
fisttpll
sub
pop
shl
inc
pop
stc
aaa
pop
pop
pop
in
inc
cmp
inc
insl
cmp
xchg
jno
clc
xor
fidivs
in
xchg
loopne
and
or
cmp
mov
inc
add
sbb
in
cwtl
movsl
movsl
or
inc
or
hlt
fwait
rol
mov
test
adc
out
or
popa
outsl
sbb
add
insb
and
lahf
push
pop
sbb
jno
idivb
popf
jge
pop
addl
dec
fwait
push
sub
xchg
rorl
daa
and
cmpsl
lea
pop
fcmovu
xor
dec
fstpl
push
sbb
leave
mov
add
push
add
sbbb
pop
out
dec
outsl
loope
sbb
fists
sub
fs
cld
mov
jno
pop
clc
adc
jmp
jo
xchg
in
cltd
sbb
mov
aaa
mov
or
add
lret
frstor
rcr
jnp
in
dec
mov
loop
jb
loope
sbb
dec
leave
test
mov
push
and
or
add
pop
and
pop
xor
je
cmp
sarb
dec
cmp
pop
nop
inc
mov
xlat
xor
flds
pop
mov
sub
pop
jo
out
cli
xchg
jge
pushl
jg
mov
sub
pop
aam
ja
add
jae
rcrl
in
movsb
fsubs
pop
test
adc
push
push
mov
in
xchg
pop
std
cltd
adc
inc
sbbl
push
mov
adc
sub
mov
cmc
das
mov
ljmp
add
dec
test
inc
push
add
inc
dec
cmp
out
es
nop
repz
xchg
call
aad
jns
inc
mov
loope
push
jecxz
out
dec
pop
popa
pop
jp
int
sub
movsl
sub
insb
mov
or
cmp
jmp
aaa
push
pop
loopne
pop
pop
test
push
loop
dec
in
adc
sbb
sbbl
add
lret
imul
mov
rorb
push
mov
lahf
addb
jae
xor
adc
sti
sbb
push
pop
cs
mov
lock
jl
mov
jo
mov
adc
push
pop
inc
xorps
fists
enter
aas
shlb
jmp
aam
sbb
ja
sub
mov
data16
adc
adc
push
and
lock
cmpsl
outsl
sub
jl
cmpsl
push
or
cmp
je
movsl
add
fsubrs
mov
push
pop
fwait
jne
dec
push
ror
and
in
inc
std
push
xor
dec
fnstenv
mov
xchg
or
or
clc
movsl
pop
inc
jno
or
push
push
and
jnp
shrb
jns
jae
inc
sub
loope
or
ss
div
jb
adc
pop
stos
arpl
sbb
mov
or
xchg
dec
or
mov
jne
addr16
ret
fsubs
movsb
push
iret
lahf
int3
call
push
xchg
repz
pusha
jecxz
and
sti
cmp
mov
pop
push
mov
jg
mov
test
inc
test
mov
mov
rcl
cmp
aaa
or
bnd
pop
adc
in
jle
cmp
cmp
dec
lcall
out
mov
pop
push
cmp
pop
mov
pop
xchg
mov
xor
imul
stc
jno
call
jbe
lods
jge
jl
and
jge
push
xchg
sbb
push
adc
andl
jecxz
lcall
cmpsb
dec
jne
push
mov
in
movsl
or
movsl
inc
or
imul
in
ss
pop
sub
cmpsl
adc
adc
gs
stc
adc
ret
adc
aaa
push
and
push
mov
ret
dec
xchg
pushf
jecxz
insl
inc
pop
push
popa
pop
shrl
xchg
pop
dec
cmp
cmp
jnp
andb
lods
idivb
mov
inc
or
lahf
push
cmp
ja
stos
mov
out
ss
pop
sbb
jmp
bound
es
push
sub
push
cmp
shlb
sahf
pop
lds
jno
cmp
push
in
sar
mov
inc
pop
xor
lods
add
add
jmp
mov
adc
out
jl
pop
push
stos
in
jge
sbb
xor
adc
pop
adc
roll
pusha
sub
aam
in
dec
mov
pop
xchg
cmc
mov
out
push
mov
mov
or
sbb
sub
jmp
cmp
ret
das
inc
add
ss
and
test
mov
or
or
pop
mov
ret
jo
push
call
lock
lret
js
movb
adc
sub
mov
adc
add
sbb
xor
ficoml
adc
sarl
mov
loope
pop
cmp
xor
xor
ret
xchg
pushf
cmp
lock
nop
mov
clc
shl
xor
inc
adcb
mov
lahf
add
jecxz
rolb
popa
push
and
mov
xchg
xorl
mov
fists
or
xor
push
es
pop
pop
outsb
adc
push
sti
sub
imul
popa
sub
out
add
cmp
xor
sbb
xchg
inc
inc
xor
loope
dec
stos
jo
inc
pmovmskb
sub
dec
push
jne
inc
icebp
mov
sbb
jmp
mov
pop
aaa
or
mov
aas
inc
dec
or
adc
jle
inc
hlt
mov
mov
inc
test
cmpsb
sbb
cmpb
adc
adc
sbb
adc
js
sbb
insl
insl
jp
pushf
fildl
push
daa
sub
mov
lds
lods
pop
aad
adc
andl
lret
aam
inc
mov
add
ret
inc
psubsw
pop
mov
fcomip
nop
jg
jmp
xor
sub
data16
sbbb
mov
xchg
stc
sub
xchg
jns
mov
cmc
xchg
mov
add
mov
xchg
push
arpl
rcll
or
inc
pop
clc
fs
pop
pop
mov
test
mov
xlat
ret
dec
ja
sbb
icebp
or
pushf
cltd
push
in
movsb
jg
repz
aad
jg
jl
or
test
mov
jl
cmp
mov
int
mov
rclb
mull
sbb
test
sahf
sub
sbb
jl
xchg
mov
icebp
inc
bsf
sub
inc
fnstenv
cltd
and
inc
sbb
jle
ret
hlt
and
mov
or
cmp
adc
repz
xchg
rclb
cli
dec
repz
pop
scas
sti
stos
push
clc
push
fsubrl
xor
pop
cmp
mov
lock
push
fstps
aam
jle
cmp
pushf
jno
sub
pop
dec
enter
adc
and
add
call
push
daa
mov
mov
jle
lfs
add
or
and
fdiv
and
out
push
xor
cwtl
or
pop
jge
xor
pop
nop
jnp
dec
cmp
dec
inc
lock
std
jnp,pn
sub
test
mov
mov
adc
mov
xchg
cmc
cmp
or
inc
mov
jmp
or
push
inc
jg
add
push
pop
inc
jnp
jge
aaa
pop
lea
incb
mov
std
cs
xchg
xchg
and
roll
sbb
leave
lret
lret
cmp
mov
fnsave
jb
sbb
std
cmp
jl
or
inc
iret
cmp
std
or
xchg
or
and
clc
push
xor
fs
xchg
lcall
je
mov
pmovmskb
mov
or
lock
inc
xor
nop
dec
add
xlat
in
movl
adc
negb
xchg
cli
in
add
push
xchg
rol
pop
sub
jl
test
into
movsb
adc
iret
jp
cmp
xchg
loop
mov
and
mov
jp
xchg
push
xor
cmp
das
dec
in
mov
adc
mov
leave
jae
imul
repz
jae
icebp
adc
pop
aas
xchg
cmp
mov
ljmp
mov
pop
nop
inc
xchg
mov
adc
out
test
add
nopl
ds
data16
add
orl
pushl
inc
dec
push
insl
sub
push
mov
pop
popa
sbb
stos
push
repz
ret
mov
gs
jo
pop
popa
jns
or
test
or
sub
rclb
mov
sub
iret
sub
sub
testl
loopne
dec
pushl
and
dec
andl
lods
push
pop
sub
xchg
sbb
insl
adc
or
fmuls
sub
mov
fld
inc
insl
loopne
or
fldl
nop
outsl
xor
push
inc
fidivl
jecxz
sbb
fstpl
cmp
jecxz
mov
mov
mov
cwtl
out
hlt
pop
leave
cmp
cmp
sub
stos
shrb
scas
popa
aam
data16
cld
sub
jmp
lahf
push
or
cmpsb
dec
fistps
call
pop
mov
mov
faddl
add
sbb
pop
incb
xchg
push
mov
jge
popf
lods
adc
mov
ja
rclb
rcrl
imul
lahf
test
subb
mov
mov
test
popa
pop
dec
lea
add
cltd
lret
faddl
xor
int
ret
adc
pop
or
push
push
mov
add
or
add
sbb
popa
andb
loop
sti
cmp
loop
xchg
add
leave
fmul
pop
addl
pop
cmp
hlt
xor
push
push
dec
mov
enter
push
mov
xorl
adc
incl
inc
loope
push
mov
pop
mov
rorb
mov
outsb
ja
or
cwtl
leave
stc
add
jmp
mov
repz
mov
adc
mov
mov
add
test
jno
dec
repnz
or
mov
je
sbb
lcall
test
stos
mov
insl
jl
les
ret
mov
scas
xchg
clc
mov
lcall
push
jge
xchg
and
cmp
cmp
jo
add
dec
sar
inc
lea
add
lods
pop
stos
jo
fsts
fisttps
push
rcl
cltd
popf
fcmovnbe
sbb
cwtl
jo
dec
sti
sub
lock
test
mov
loope
adc
jg
repz
xchg
mov
std
xchg
or
push
push
cmc
in
fists
aad
adc
sbb
pop
or
mov
cld
sub
icebp
loop
xchg
adc
and
adc
cmc
les
jp
js
sub
movsb
clc
ficoml
push
dec
enter
test
dec
sub
imul
sbb
repz
stos
pushf
adc
ja
adc
xor
mov
cmpsb
fnstcw
sub
fbstp
pop
push
mov
push
fiaddl
jle
lods
je
data16
push
dec
arpl
xor
loopne
and
cmp
or
add
in
inc
hlt
les
cmpl
rcr
adc
inc
and
sbb
pop
popf
xchg
in
mov
mov
test
fcoms
and
clc
out
jne
xchg
jb
inc
pop
adc
mov
push
pop
add
fwait
pop
xlat
adc
sbbl
loop
lahf
jb
fs
mov
sbb
xor
push
mov
out
loopne
dec
lahf
jo
nop
ret
cs
cmp
cltd
imul
mov
push
push
cld
mov
mov
leave
sahf
jns
test
add
cld
loopne
pop
sbb
mov
lock
out
and
mov
inc
xor
cld
mov
fxtract
lret
movsb
fbld
int
xor
push
js
cmc
add
jmp
jmp
outsb
jp
cmp
ja
push
pushaw
dec
clc
pop
clc
inc
cmp
ret
out
int
push
dec
movsl
cmpl
outsl
movsb
inc
push
xor
sahf
push
imul
xor
outsl
loope,pn
mov
mov
fisubs
pop
pop
sub
mov
add
scas
hlt
inc
or
push
or
sbb
aas
jb
inc
mov
inc
push
jne
daa
pop
mov
pop
int3
add
sar
adc
lret
outsl
rclb
sahf
mov
insl
out
xchg
cwtl
push
fdivrs
sub
fstl
sub
lods
xor
cmp
add
fmull
mov
jo
mov
ljmp
jbe
cmp
js
pusha
inc
mov
hlt
cmp
add
mov
fadd
bound
push
pop
mov
push
sarb
push
test
addr16
mov
pop
cmpsl
xchg
subl
pop
arpl
xlat
add
add
cwtl
push
lcall
xchg
push
sbb
loopne
roll
dec
andb
shl
jbe
sbbl
dec
sbb
sti
fnstsw
cmpl
leave
push
pop
out
test
sub
push
jl,pt
out
in
lahf
inc
mov
mov
mov
sbbb
aam
push
out
into
mov
inc
scas
adc
js
imul
cmp
add
gs
dec
pop
imul
push
mov
mov
sub
sar
pop
jl
test
les
jo
ds
daa
hlt
push
inc
pop
xorb
jp
push
inc
push
adc
xor
xlat
test
jp
cld
adc
dec
sarl
jecxz
clc
inc
xchg
fiadds
cmc
adc
iret
add
or
insb
lahf
mov
dec
xor
mov
call
lcall
test
cmpsl
push
push
and
cmp
sub
movsl
or
mov
rclb
inc
aam
filds
ret
xchg
adc
mov
adc
fdivr
jo
xorb
lods
fnsave
loopne
rcll
mov
lcall
rclb
mov
cmpsb
outsb
xor
icebp
cld
push
clc
dec
pop
pop
xor
das
xchg
fs
mov
lods
push
jp
sbb
jmp
mov
adcb
cmp
leave
push
xchg
and
adc
push
pop
pop
mov
mov
add
lahf
cs
fbld
imul
mov
hlt
xlat
xchg
sub
notb
fadd
cmpsb
mov
sbbl
add
nop
rolb
push
pop
out
sahf
sahf
out
jecxz
jle
inc
sbb
push
pop
adc
mov
dec
inc
push
pop
ds
repnz
or
into
fmull
cmp
test
and
push
pop
add
rcrb
adc
inc
add
mov
add
pop
xchg
movd
cltd
push
mov
loope
mov
inc
cmp
inc
push
fcomps
jo
adc
lds
xchg
mov
add
repnz
mov
movb
leave
push
and
pushf
and
adc
scas
icebp
and
xor
adc
push
adc
rcll
addr16
sub
inc
pop
mov
xlat
js
loope
fadds
mov
mov
xchg
icebp
fbstp
das
add
mov
adcl
jg
rcl
mov
push
inc
cmpl
jmp
add
xchg
movsl
xorb
andl
aas
xlat
lods
int
outsb
or
das
pop
loop
les
fldcw
sbb
mov
cwtl
sbb
loope
fsubl
and
pop
add
je
cmp
mov
jae
int3
in
mov
push
jo
and
xchg
notl
dec
sarl
lods
pop
or
pop
inc
add
es
mov
into
add
ja
std
mov
bound
push
bound
stc
push
les
movsb
xchg
pop
cwtl
fidivs
xchg
es
test
and
and
jmp
mov
outsl
lea
loopne
push
sub
in
sti
mov
arpl
sbb
mov
icebp
js
and
loope
cmc
xor
insl
cmp
lock
sub
je
add
sbb
and
cld
xor
pop
rcrl
mov
jmp
dec
push
inc
out
cwtl
test
out
mov
adc
cmp
adc
jle
lock
aaa
mov
push
and
pushf
cli
gs
push
or
push
pushf
dec
scas
inc
inc
add
xchg
stos
mov
test
setae
pop
icebp
jp
mov
test
lock
cli
les
pushf
mov
cmpsb
stos
sbb
sbb
dec
xchg
jg
lock
push
cmp
test
cmpsl
stos
les
jmp
xor
pop
mov
shlb
fnsetpm(287
pop
test
xor
xorb
and
cmp
jge
xor
sub
sbbl
sub
mov
sub
orl
rcll
mov
in
push
and
mov
adc
mov
cs
shl
lret
das
adc
clc
sbbl
push
ret
loope
push
in
or
loop
adc
ljmp
jne
mov
mov
fisttps
std
xchg
out
cld
cli
pushf
popf
popa
adc
daa
sbb
loope
mov
mov
imul
and
lret
add
sub
pop
orl
lcall
add
and
mov
adcl
frstor
sbb
mov
mov
jo
int
icebp
hlt
test
pusha
clc
push
mov
dec
int
loopne
in
push
test
icebp
incl
in
dec
sbb
shrb
lods
jg
rcll
jns
lods
ljmp
gs
loopne
push
fsubs
jg
in
add
adc
and
xchg
push
pusha
or
mov
cmp
mov
jle
jg
or
add
jmp
sbb
sbb
mov
adc
ljmp
popa
fcomp
ficoml
xchg
scas
and
mov
inc
imul
mov
xor
cmc
cmc
push
fcomps
es
mov
addr16
int
int
mov
mov
mov
fwait
and
cmpsb
inc
test
pop
clc
fists
jl
clc
adc
and
call
andb
in
lea
mov
test
jnp
sahf
jl
roll
add
movsb
push
sbb
inc
in
rorl
clc
sub
mov
outsb
repz
in
out
es
lea
pushf
icebp
stos
xchg
cmpsl
nop
push
arpl
dec
xchg
mov
mov
sub
nop
lods
and
lods
jl
sbb
xchg
pop
xor
out
aad
in
cmp
pop
push
out
push
pop
aas
add
push
or
cwtl
jecxz
cld
mov
adc
notl
fs
adc
lahf
push
jb
clc
mov
inc
cli
sbb
leave
mov
or
roll
stos
fucomi
js
sbb
outsl
or
lahf
mov
dec
stc
pop
inc
xorb
mov
dec
or
loopne
mov
rorl
fidivrs
inc
or
push
sbb
fstpt
vmovd
sbb
rorl
lret
adc
insb
inc
add
lret
les
rolb
push
adc
cmp
mov
mov
xchg
arpl
sbb
outsl
repnz
inc
pop
adc
cmp
pop
dec
and
int
jge
stos
sub
mov
fldl
outsl
sbb
sbb
std
repz
inc
fdivl
sbb
fisttpll
jae
fistpll
dec
adc
pop
pusha
clc
mov
int3
leave
dec
xor
inc
jg
jmp
mov
cwtl
shrl
sub
lcall
push
pop
push
pop
sbb
or
ret
push
or
cmp
mov
pop
cmp
cltd
stos
out
cmp
sbb
xlat
cmp
js
pop
sub
les
jnp
jmp
push
xchg
in
dec
sub
leave
sub
mov
pop
leave
into
cli
movsb
stos
inc
sahf
pop
rcll
sbb
mov
inc
mull
jns
lahf
xor
insb
es
stc
pop
test
mov
dec
iret
push
adc
inc
jg
mov
enter
stos
aam
out
aam
test
push
shr
test
xchg
lcall
xor
push
mov
ficoms
xor
xorb
pop
hlt
dec
rcr
mov
mov
loope
jle
stc
inc
sub
mov
xchg
pop
repnz
or
dec
mov
mov
repnz
fadds
cmp
pop
and
invd
and
push
scas
rolb
dec
dec
lea
aam
and
movsl
dec
adc
dec
or
sub
lods
inc
pop
and
cmp
test
mov
test
add
jmp
add
jns
push
mov
cmp
ljmp
jge
nop
int3
jmp
jne
das
pop
and
mov
sahf
fisttpl
ja
pop
loope
jecxz
pop
orb
cmp
adc
push
mov
inc
push
call
cmp
mov
fidivrl
call
push
rclb
mov
aas
imul
pop
insb
xlat
push
pop
in
or
sbb
sbb
fisttps
lahf
out
loop
aas
xor
cld
sub
pop
jle
cli
dec
jge
cmp
pop
cld
rorl
test
dec
dec
shll
and
sbb
xchg
and
lahf
movsb
mov
mov
repz
mov
pop
xchg
lea
xor
addr16
fsubl
jne
xor
add
mov
xchg
int
xor
xchg
inc
and
jmp
push
cmp
decl
mov
jecxz
push
addl
cmc
push
mov
add
in
into
mov
test
dec
les
xchg
push
pop
call
and
dec
adc
in
or
add
loope
xor
sahf
into
add
loop
push
mov
in
jl
pop
int3
inc
or
std
ret
shrl
jle
fdiv
test
cmc
mov
adc
add
test
insb
icebp
aas
cmp
dec
sbb
rcl
lds
lods
pop
enter
inc
ret
cmp
push
mov
ljmp
mov
push
test
mov
sbb
jle
enter
adc
repz
jmp
gs
jne
mov
jmp
ret
and
fsubrl
popf
jo
xchg
mov
adc
stos
or
mov
inc
and
mov
dec
lods
scas
xchg
ficoml
es
adc
addb
jno
loop
sbb
sbb
or
lods
sahf
adcl
pop
push
sbb
inc
rcr
jns
push
ret
xor
mov
or
ret
jne
and
cwtl
testb
pop
aad
xchg
loope
cmp
fisubs
sti
add
and
mov
cmp
out
pusha
repnz
sub
xor
clc
inc
ljmp
adc
push
je
icebp
incl
icebp
jns
lret
aaa
sub
mov
sbb
jp
ljmp
jge
mull
iret
push
inc
shr
and
int
cmp
clc
pop
dec
fwait
jmp
add
add
adc
lock
push
push
inc
and
loop
dec
sbb
mov
jg
mov
ja
movsb
ja
and
dec
rcr
add
popa
adc
and
test
push
es
mov
insb
xlat
aam
adc
inc
add
loopne
bound
cmc
jg
scas
fldenv
add
loop
nop
or
cmpb
lock
adc
push
les
into
dec
add
mov
je
cmp
pop
mov
xlat
mov
cld
mov
mov
test
into
loopne
daa
adc
repz
mov
and
int
jl
cmp
sbb
imul
test
shrl
mov
pop
pushf
push
cmp
adcl
std
jbe
mov
push
mov
pusha
xchg
or
xor
or
xchg
hlt
sub
mov
mov
jb
mov
ret
inc
bndstx
mov
in
iret
cmp
push
inc
in
add
mov
cmp
sbb
sub
sbb
loope
movsb
test
pop
jnp
or
arpl
cltd
jmp
repnz
lea
mov
mov
dec
jo
adc
in
andb
adc
mov
cwtl
movsb
incl
push
mov
stos
jno
push
call
xorb
cld
sbb
inc
loopne
enter
sahf
mov
xlat
cmp
lcall
cmp
shll
mov
aaa
mov
iret
nop
mov
mov
adc
sub
call
mov
push
icebp
orps
jp
inc
lea
std
scas
mov
es
cli
bound
cwtl
in
clc
cmp
cld
cmpsb
mov
das
shl
xor
adc
ss
cmp
stos
lret
bound
outsb
jne
clc
xor
jo
add
ljmp
subl
push
add
insb
push
add
pop
loop
sub
or
arpl
cmp
xor
lcall
add
sbb
mov
rcll
or
add
mov
jae
add
jg
roll
mov
pusha
sub
adc
fucomp
js
clc
aaa
inc
mov
jmp
arpl
pop
jp
mov
repz
rclb
jle
imul
and
cmp
fiadds
add
add
add
into
or
js
cmp
mov
mov
ja
xor
add
dec
imul
sub
jmp
aam
dec
loopne
push
fisubrl
into
rcr
dec
adc
sbb
inc
pop
lock
lahf
jl
insl
pop
int
lcall
pop
cmp
sub
or
insb
inc
ds
das
scas
fbstp
jo
inc
lds
outsb
mov
add
sub
fs
add
aam
mov
je
cmp
jl
inc
loopne
jb
out
clc
gs
popa
jle
adc
scas
icebp
mov
ljmp
xor
mov
xor
add
xor
jle
lahf
aaa
loopne
push
enter
mov
pop
test
andb
and
xor
or
cmp
pop
addb
test
cltd
aaa
and
jmp
adc
and
add
jmp
ljmp
jge
jno
mov
das
adc
adc
cwtl
ds
aaa
cld
push
and
lods
sub
cwtl
sub
std
add
loope
xor
sbb
fistpl
imul
call
inc
hlt
enter
add
in
and
push
scas
dec
imul
cld
push
jecxz
inc
pop
call
mov
daa
adc
mov
push
sub
xor
insb
loopne
sbb
mov
iret
pop
sarb
mov
lods
add
inc
imul
inc
adc
aaa
repz
pop
pop
negb
or
mov
clc
sbb
loop
in
and
sbb
sbb
orl
push
or
pop
dec
fsubs
dec
cli
and
inc
je
mov
mov
mov
cld
or
loop
test
dec
ljmp
sbbb
mov
test
fwait
push
std
jecxz
jp
lret
cmpsl
ds
pushf
sub
adc
inc
jbe
dec
push
adc
lret
clc
das
mov
loope
decl
outsl
loopne
fidivrl
jl
repnz
or
jae
push
or
or
inc
or
test
xor
mov
das
add
out
jg
dec
js
lea
push
rclb
stc
mov
ret
or
addr16
arpl
mov
adc
push
mov
mov
mov
jo
mov
add
sub
es
or
inc
push
loopne
ret
sarl
dec
xchg
cld
mov
push
jae
sbb
lods
xor
es
inc
js
and
add
add
push
nop
dec
push
adc
mov
mov
xlat
mov
in
pop
out
and
inc
sub
jne
test
cmpsb
sub
cld
in
push
aam
std
lahf
jge
mov
sbb
inc
add
or
or
inc
mov
fdiv
aam
jns
xorl
enter
xor
sbb
lret
out
mov
mov
inc
jg
push
jp
adc
xlat
xor
icebp
and
leave
mov
outsl
aas
adc
dec
cmpsb
out
inc
push
xchg
jae
pop
arpl
push
cmpl
or
call
sbb
adc
stos
xor
ja
jo
jb,pt
stos
adc
in
loop
add
enter
and
mov
andb
add
or
add
cltd
add
insl
imul
ror
cmc
aas
push
push
loopne
lea
add
and
clc
cmpsl
nop
test
lods
xchg
add
icebp
jg
dec
mov
or
cwtl
or
das
pop
cmp
add
pop
roll
mov
mov
push
or
and
stos
repnz
loope
dec
sbb
mov
test
in
aam
mov
push
pop
sbb
cmp
or
adc
push
loopne
fwait
xchg
or
stc
mov
scas
aaa
adc
inc
mov
subb
sbb
mov
iret
adc
hlt
dec
jno
data16
leave
nop
in
mov
ret
add
xchg
push
adc
adc
daa
cld
mov
jge
insb
push
pushf
jmp
enter
das
mov
mov
roll
mov
dec
mov
pusha
roll
loopne
adc
sub
fcoml
int3
shll
idivb
mov
mov
xchg
mov
cs
mov
sub
mov
jbe
ja
mov
dec
sti
fs
add
repz
pop
jle
cld
or
inc
mov
ds
pusha
cs
jg
addr16
xchg
dec
xor
ss
ds
pusha
sbb
push
mov
imul
adc
enter
add
dec
adc
fucom
and
pop
and
pop
in
mov
add
adc
add
lahf
mov
js
mov
mov
fstpl
pusha
xchg
and
bnd
jg
mov
xor
and
xor
and
outsl
dec
test
mov
fildll
jl
out
and
in
in
add
or
xchg
mov
test
les
inc
cmp
out
push
int
jg
push
iret
xchg
sbb
movsb
push
sbb
aaa
cltd
jo
adc
cmpsb
dec
and
inc
sbb
xchg
loope
call
or
stc
js
out
test
gs
xchg
mov
push
adcb
jle
sbb
sarb
test
xchg
jo
pop
and
idiv
push
mov
sbb
fiaddl
cmp
add
or
pushf
mov
pusha
jmp
or
jmp
shr
adc
sbb
jmp
in
out
outsl
and
xchg
jno
adc
lds
mov
les
and
sub
es
inc
aad
int3
out
ret
jg
fdivr
push
adc
rcll
push
lcall
adc
add
xor
xchg
bound
or
and
inc
jecxz
xchg
adc
adc
loop
clc
cmp
or
pop
lea
aam
repnz
push
cmp
lock
call
xchg
in
inc
mov
mov
popf
mov
add
push
push
push
cmp
inc
dec
cmp
mov
mov
fdivrp
das
or
loopne
div
enter
add
mov
int
sub
cmp
push
dec
cmpsl
popa
mov
mov
and
ret
in
addb
subl
jno
and
mov
popf
jmp
cmp
cli
fcomps
fmuls
or
mov
clc
push
inc
adc
xor
lcall
push
xchg
mov
jbe
jecxz
push
dec
lahf
outsl
pop
push
mov
mov
dec
sbb
pop
stc
lahf
lock
jle
xchg
shlb
pop
fldcw
mov
ja
inc
lret
pop
cld
andl
lahf
inc
pusha
jmp
push
mov
xchg
and
repz
cwtl
shlb
xor
test
cwtl
test
mov
cmpl
int3
out
push
cli
jnp
pop
jno
xor
into
push
fwait
jmp
in
xor
xlat
mov
testl
or
add
divl
movsb
dec
jl
test
push
mov
add
dec
mov
hlt
dec
add
inc
mov
repz
inc
xchg
mov
push
cmp
shl
mov
nopl
bound
jecxz
aam
push
push
pop
dec
sub
cmp
mov
mov
push
adc
pusha
lret
push
inc
sub
daa
cmp
mov
stos
add
sbb
fldl
sbb
je
mov
and
or
lds
add
adc
mov
xchg
xor
popf
jmp
sub
pop
scas
fwait
call
out
pop
imul
int
fdivp
psraw
call
add
in
sbb
xchg
scas
clc
pop
imul
xor
cs
adc
cmpsb
mov
loop
cmpsb
inc
jle
sbb
mov
lret
or
jp
jne
frstor
add
sbbl
inc
out
pop
movsb
ret
sti
inc
inc
clc
cmp
imul
push
mov
mov
leave
or
pop
and
out
adc
lds
lds
stos
mov
push
lcall
and
fdivs
xor
xchg
lock
testl
pop
mov
rolb
scas
hlt
mov
sub
sub
out
cwtl
shll
pop
cmpsb
lcall
fdivrs
jno
pusha
nop
sbb
or
sahf
adc
test
mov
push
je
cs
jmp
and
neg
push
nop
decb
out
push
mov
lsl
loope
fmuls
adc
jl
adc
mov
je
adc
std
mov
pusha
mov
jle
gs
lods
rcll
ja
pusha
and
subl
das
bound
and
aas
adc
mov
fcoml
stc
mov
add
enter
movsb
inc
xor
inc
fildl
test
lea
inc
loop
sub
and
stc
leave
sub
jmp
dec
into
add
cmpsb
test
lock
jg
es
jnp
jl
hlt
mov
dec
aad
and
pop
mov
add
ret
outsb
xchg
iret
imul
cmp
jg
and
mov
lret
or
jecxz
cmp
fistl
push
cwtl
rclb
cli
add
fs
loop
pop
sbb
jg
and
loop
or
fildll
gs
or
jb
add
add
lcall
and
test
fucom
xchg
or
push
inc
stos
fsubp
dec
fidivl
lahf
xchg
in
sbb
mov
out
cmpsl
push
add
dec
in
into
cmovl
int
and
andl
stos
and
push
js
push
or
xchg
fisubrl
js
pop
mov
ret
dec
inc
ljmp
cltd
mov
sub
pop
add
jns
adc
es
lahf
jmp
adc
enter
xchg
testb
loopne
push
mov
jecxz
and
pop
scas
outsl
subb
jns
ss
popf
lahf
bound
rcrl
dec
add
mov
clc
popf
xchg
pop
test
hlt
cmp
pusha
pop
and
stos
or
adc
cld
push
rol
pop
sbb
das
mov
adc
add
cmpb
push
pop
pop
and
fs
decl
je
dec
and
and
push
pushf
mov
dec
dec
pushf
pop
push
push
adc
movsl
mov
mov
xchg
jg
into
mov
and
cld
fcoms
pushl
mov
stos
jmp
adc
mov
pop
pop
dec
loopne
insb
adc
jne
mov
adc
mov
mov
test
ljmp
pusha
and
dec
dec
data16
push
test
cli
mov
cmpsl
jg
ret
jp
or
xor
dec
add
push
jnp
iret
xor
in
test
push
mov
xchg
mov
sub
xchg
imul
push
insb
pop
mov
mov
and
add
xchg
xchg
lcall
js
in
jp
inc
aaa
cmc
jmp
jne
jg
shl
push
xchg
arpl
movsb
or
rcr
adc
aad
pop
frstor
iret
shrb
mov
xchg
rcrb
cmp
sbb
or
mov
dec
jge
in
imul
add
sub
sbb
les
cmp
mov
add
in
add
pop
mov
xlat
les
and
aaa
mov
xor
lods
jo
pop
test
enter
punpcklwd
sbb
sub
cmc
pusha
inc
loop
mov
push
mov
icebp
xor
pop
pop
in
xchg
adc
push
jbe,pn
jecxz
push
aaa
in
in
jo
into
mov
imul
dec
mov
inc
rorb
or
dec
mov
mov
loope
rcrl
fiadds
push
nop
pop
and
or
es
adc
in
add
cwtl
fwait
push
dec
les
incb
xor
clc
xor
pop
jmp
xor
inc
jl
inc
mov
cld
or
lret
addb
dec
push
ret
lcall
out
and
push
xchg
adc
test
ds
nop
push
bound
jl
negb
int
pop
ficomps
inc
dec
cld
pop
and
ja
in
dec
ret
scas
aad
in
in
pop
jmp
cwtl
push
and
fildll
fnstcw
mov
jmp
mov
hlt
jl
sbb
int3
xchg
or
xor
jmp
fs
and
ja
cli
lods
mov
test
int3
pop
xchg
xchg
jae
lahf
ficoml
outsl
cltd
cmp
das
dec
pusha
es
shrl
lret
push
orl
popa
and
cmp
fcmovnu
ret
add
arpl
push
cmp
outsb
inc
dec
dec
push
imul
out
js
xor
mov
xor
mov
jo
aad
inc
pop
mov
lods
and
aas
sbb
pop
das
fwait
rclb
lock
xorb
shlb
xchg
mov
loopne
nop
add
popf
movsl
inc
cmc
mov
shll
aas
es
mov
add
xchg
lds
pop
jmp
dec
sbb
xor
dec
sub
dec
imul
mull
lret
es
popa
out
jmp
idiv
hlt
call
dec
movsl
xor
pop
add
insl
sub
mov
test
sti
add
imul
cwtl
mov
or
fcmovbe
dec
enter
jb
test
and
lea
and
cmc
int3
fs
enter
cmpsl
cmp
add
les
jo
xlat
add
adc
insl
jne
dec
pop
outsb
jnp
dec
shll
lea
ficompl
repnz
loope
icebp
mov
js
jnp
pop
adc
add
push
data16
jmp
shrb
sub
out
rcrl
fwait
scas
cmpsl
dec
xchg
xor
les
aad
jmp
fdivs
sub
push
cltd
test
in
movsl
insb
push
clc
fs
push
sbb
lahf
pusha
mov
ja
movb
or
mov
dec
push
cmp
shl
mov
cmpsb
or
fistpl
sbb
dec
mov
mov
mov
mov
push
subl
decl
push
in
sbb
cwtl
fnstsw
imul
mov
jg
add
inc
push
mov
push
lds
cmp
aaa
fcomps
mov
xchg
pop
and
jo
ja
cltd
icebp
into
adc
sahf
or
sub
ret
cwtl
push
lret
ret
push
inc
test
mov
into
dec
xchg
aas
xchg
push
out
push
adc
or
cmp
mov
dec
je
lea
dec
nop
mov
aam
inc
xchg
hlt
or
shlb
pop
hlt
ret
and
dec
cmpsb
xor
add
dec
decl
cmp
shlb
or
ds
cli
mov
adc
or
dec
cmc
mov
add
fwait
xor
xor
ja
or
and
jb
fwait
daa
fistl
cmp
dec
lods
inc
jae
dec
jmp
mov
mov
push
inc
popf
adc
sbbl
imul
mov
mov
jae
lods
inc
inc
or
ss
inc
loope
pop
push
addl
xchg
nop
in
ja
inc
dec
daa
mov
test
ss
pop
cmovp
iret
or
fidivl
push
xor
cmp
arpl
sarl
sti
cli
shl
pop
dec
xchg
icebp
ljmp
push
mov
int3
and
rorb
loope
xchg
ficoml
stos
aad
sbb
and
ret
mov
nop
int
loope
pusha
lret
or
sti
je
test
cli
sbb
push
xchg
push
or
pop
pop
mov
or
add
fsubrl
in
jno
gs
gs
xlat
icebp
test
out
inc
repz
notb
add
xchg
popf
add
imul
popf
add
dec
push
popf
xorl
pop
addl
pop
inc
mov
cmp
sub
sbb
sar
das
scas
into
addl
pop
rcr
dec
mov
dec
xchg
push
sti
dec
xor
sti
xchg
sub
subb
adc
leave
or
xor
imul
mov
jle
sahf
outsl
mov
mov
adc
insl
ret
outsb
adc
hlt
or
or
cmpsb
cmp
popa
lea
stos
pop
hlt
ret
outsb
pop
xchg
adc
mov
pop
hlt
mov
js
stc
lods
sub
jno
dec
insl
adc
jg
fwait
adc
and
or
popf
movsl
sti
pop
pop
mov
cld
push
ret
lock
je
in
dec
or
sahf
jp
jnp
ds
or
cmp
cmc
push
dec
stos
mov
fistpll
push
mov
or
xchg
sbb
dec
aad
loop
jmp
cmpsb
cmpsl
xorb
aad
mov
push
mov
lahf
lds
mov
jae
cmp
cli
xchg
stos
movsl
fldt
addl
cmp
xchg
xor
mov
xlat
stc
loop
or
xorb
ret
jp
mov
and
movsb
mov
mov
jb
push
add
inc
scas
inc
in
scas
sbb
into
push
and
add
adc
mov
test
push
cmp
cmp
rcll
adc
dec
aam
popa
add
add
inc
popf
orl
outsb
push
sbb
movsl
pop
shll
test
or
push
mov
or
push
xchg
pop
pop
pop
sbb
jge
loop
mov
and
js
mov
inc
sub
push
pop
mov
sahf
and
ja
popa
dec
scas
insb
or
or
fs
sbb
and
mov
fwait
adc
sub
cmp
ds
in
sbb
cmc
jecxz
mov
adc
mov
xor
fcoms
stos
out
fimuls
mov
adc
bound
in
jbe
pushl
sbb
push
aaa
lret
lret
adc
lret
mov
cmp
loope
outsb
sbb
in
sub
sbb
repnz
jmp
dec
xchg
jmp
dec
mov
ss
fisttpl
mov
xlat
std
test
or
xchg
jl
test
mov
mov
adc
stos
or
shlb
and
lock
or
xchg
imul
add
or
mov
fwait
movsb
jns
in
imul
and
inc
add
jno
fcmove
ds
rorl
push
pop
add
orl
fcoml
jg
out
je
mov
jne
loope
outsb
subl
test
repnz
xor
mov
in
leave
imull
jmp
and
inc
cld
sbb
loop
fwait
lods
sbb
sbb
dec
sbb
mov
mov
push
push
xchg
dec
jmp
fst
popf
sarb
hlt
leave
pop
bound
fiaddl
test
loope
inc
cmpl
imul
stc
pop
inc
ret
frstor
gs
sbb
jp
dec
clc
push
or
mov
gs
loopne
xor
fwait
cmpsl
jp
cltd
stos
add
pusha
jnp
jg
pop
mov
fimuls
into
cmp
fwait
jbe
mov
sbb
inc
cmpsl
add
icebp
inc
jnp
mov
fcoml
pop
dec
fdivrs
xorl
outsl
shll
rcrb
jg
pop
jmp
out
jl
jae
and
cli
pop
decl
pop
stos
cli
mov
sub
jge
push
das
inc
mov
sbb
xlat
or
adc
sub
lock
adc
jecxz
adc
jmp
ret
pusha
je
mov
adc
data16
mov
pop
aad
adc
cld
sbb
push
out
loop
jnp
pop
sbbb
and
outsl
hlt
fst
push
push
clc
outsb
je
in
inc
lcall
aam
fcmovnbe
rolb
repz
movsl
sbb
in
push
js
jne
add
les
sbb
cwtl
out
test
ljmp
scas
sub
into
fisttpll
in
loop
incl
filds
push
inc
pop
imul
adc
sbb
in
mov
mov
shrb
shrb
push
mov
cmp
repnz
cmp
xchg
cwtl
fwait
add
in
cli
fadd
call
adc
pop
xchg
adc
loop
pop
out
sub
or
loop
rorl
decb
fsubr
into
mov
fiadds
shll
data16
mov
or
cs
es
js
outsb
jmp
scas
mov
adc
pushl
fisttpl
sarb
cmp
pop
jb
jns
cld
push
jg
push
mov
loopne
imul
cmpsl
insb
cld
addr16
mov
pop
mov
ljmp
jmp
scas
pop
pop
xchg
popa
fdivr
add
jno
arpl
incb
jle
icebp
out
push
xor
cwtl
pop
clc
cmovb
daa
cli
js
call
ret
add
aaa
and
scas
xchg
inc
stos
enter
pop
xchg
and
dec
popa
scas
mov
sub
inc
mov
test
roll
daa
sbbl
jb
ret
ja
inc
ss
or
insb
pop
push
mov
inc
cli
mov
dec
nop
or
mov
jg
or
and
hlt
pusha
pop
pop
int3
push
or
sbb
mov
adc
movsl
dec
add
mov
push
xchg
cwtl
pop
xlat
loope
subl
xchg
add
fcoms
shl
add
test
sbb
stos
fidivrl
lret
mov
mov
pop
in
outsl
sub
mov
jge
pop
ret
cmp
movsb
fcomps
adcl
rorb
jg
sbb
sbb
mov
lcall
sbb
mov
pop
roll
mov
leave
xlat
sub
fmulp
sbb
ret
adc
cli
clc
jae
mov
sub
mov
or
out
mov
movsb
shl
inc
sarl
jp
imul
sub
add
call
dec
clc
push
jo
push
xor
jg
adc
fwait
cmp
je
test
insb
movsb
mov
fsubrl
pop
std
push
shrl
or
mov
mov
test
xchg
js
add
inc
xor
loopne
add
mov
dec
jg
mov
shll
fwait
xchg
cmp
or
in
icebp
mov
mov
rclb
loop
push
in
lock
xor
imul
stos
pop
pop
lcall
and
jo
fcompl
inc
lods
ret
jmp
xchg
adc
test
mov
dec
push
bound
jecxz
jp
loope
sbb
loop
jnp
xchg
je
scas
cmp
xchg
inc
pop
cmp
hlt
dec
fcom
ds
rorl
iret
push
paddd
or
test
fucom
mov
fidivl
je
push
insl
inc
mov
out
sbb
sub
inc
jmp
ret
pop
arpl
icebp
xchg
mov
xchg
dec
add
push
or
sbb
frstor
jno
frstor
hlt
mov
outsb
adc
mov
test
call
sbbl
movsl
jmp
mov
call
inc
xchg
mov
imulb
ja
movsl
shll
xchg
ret
add
dec
and
adc
sbb
mov
and
test
jne
sbb
jp
jl
int
adc
inc
mov
dec
popa
and
and
aaa
pop
sub
jb,pt
push
inc
cltd
lret
das
js
dec
sub
cmp
ja
in
xchg
add
incb
xor
sbb
mov
and
inc
pop
loope
icebp
aas
dec
jg
mov
es
filds
cld
outsl
push
das
adc
mov
sbb
ficoms
jecxz
ds
ja
daa
fdivl
sbb
jl
scas
lods
cmp
aas
cld
sbbb
es
sbb
out
je
pop
jg
adc
loop
add
jecxz
and
daa
dec
cli
adc
faddl
cmp
inc
ja
pop
xchg
or
jle
or
cvtps2pd
jbe
xchg
or
cmpsl
lret
pcmpgtd
jo
jmp
sar
mov
jno
fcoml
lds
call
inc
mov
sbb
add
jp
ja
jne
dec
adc
imul
ficompl
call
adc
push
fnstcw
add
loopne
add
xchg
pop
roll
std
add
pop
or
loope
mov
mov
roll
lds
and
ret
fsubs
outsl
in
add
push
imul
cltd
add
sub
enter
pop
lock
and
out
adc
push
setg
movl
adc
jno
dec
stos
test
inc
pop
ljmp
sbb
dec
outsl
bound
and
cmc
sub
call
filds
push
dec
jb
push
fadd
xchg
mov
mov
pop
icebp
hlt
mov
mov
or
dec
subb
ficompl
pop
and
adcb
jbe
fyl2x
inc
cmpsb
popf
xlat
xor
mov
cmp
fs
dec
call
enter
sub
cmovo
mov
sub
shl
arpl
jl
loopne
mov
pop
jne
cs
xor
les
in
js
gs
adc
jns
jl
pop
push
dec
sahf
and
rol
lods
icebp
push
filds
out
mov
dec
cmp
ret
popf
xor
and
sarb
mov
call
gs
cli
adc
mov
inc
jle
stos
pop
xor
sbb
jl,pt
or
pop
es
or
sbb
imul
lret
adc
push
incb
sbb
mov
rorl
mov
sti
jecxz
add
rorb
adc
fisubrs
fisubrl
jl
pop
cs
inc
lret
push
call
cmp
adc
lret
ret
in
pusha
mov
pop
das
shl
loopne
rolb
lret
jp
std
fbstp
inc
adc
test
sub
in
xchg
sarl
mov
mov
mov
hlt
xor
xchg
pop
movsl
paddq
inc
mov
or
xchg
pop
jne
xchg
sbb
push
rclb
popa
inc
inc
add
sahf
pop
loope
std
and
dec
inc
inc
arpl
lods
jg
stc
loopne
lea
in
mov
test
js
scas
cld
das
mov
mov
push
clc
stos
sub
or
call
xor
cmp
jmp
push
leave
insl
in
xor
sub
fdivl
sbb
sbb
or
movsl
add
jbe
orl
and
roll
xor
subl
sbb
sti
add
movsb
push
adc
inc
xchg
mov
mov
cmp
fidivs
jle
movsb
out
das
mov
jno
mov
je
fsubl
jg
daa
mov
inc
mov
addb
adc
icebp
push
and
call
insl
icebp
pop
cmp
out
stc
push
pop
hlt
adc
dec
loope
xchg
or
ljmp
das
sbb
mov
cmc
dec
mov
movsl
lret
sub
sbb
adc
mov
pop
outsb
and
sub
test
or
xchg
and
hlt
dec
call
int
aam
shrl
clc
sub
hlt
das
mov
jle
gs
dec
lahf
sbb
int3
mov
or
dec
scas
mov
mov
mov
clc
adc
shrl
mov
pop
sub
hlt
insb
adc
add
push
fisubl
in
add
call
mov
mov
aaa
clc
or
mov
push
loope
and
in
data16
daa
sbb
sub
jl
push
pusha
loope
sub
sub
jge
aas
sub
outsl
lea
inc
cmp
iret
or
pop
mov
movq
lock
mov
dec
repz
in
inc
lods
jp
shrl
inc
jmp
imul
aam
add
movsl
call
into
mov
jge
call
lret
or
inc
jns
outsl
lods
test
xlat
jo
aam
mov
aam
dec
dec
pop
inc
test
movsl
aad
inc
std
scas
push
adc
call
test
or
sarl
jmp
js
andb
cmp
popa
inc
test
jb
clc
push
iret
arpl
sbb
lahf
and
xchg
add
jecxz
mov
xor
xchg
jp
mov
adc
fs
xchg
out
aaa
mov
xchg
jle
or
out
sbb
lret
aaa
mov
sbb
or
addr16
ja
insl
sbb
daa
aam
cmc
mov
add
movsl
mov
adc
jl
xchg
lds
pusha
cld
pop
mov
aas
cwtl
inc
or
and
hlt
ljmp
mov
lock
pop
sbb
xor
push
inc
pop
xor
out
or
pop
insl
lcall
and
sub
testl
int3
into
cmpsb
fidivl
jmp
outsl
jb
cmpsl
mov
push
cld
lods
sahf
sbb
sbb
pop
push
call
cmp
mov
aad
rcrl
shr
push
ja
inc
push
cli
pop
inc
push
xchg
cmp
bound
adc
aam
loope
mov
mov
pop
andb
mov
inc
xchg
clc
sub
lods
pop
into
jo
mov
sub
ljmp
dec
sub
subb
inc
mov
fwait
xor
or
rolb
pop
out
ret
mov
add
fcmovb
decb
rolb
movsl
aas
clc
mov
fs
outsb
fwait
xor
mov
xchg
lret
test
push
push
test
push
mov
or
push
push
nop
push
push
mov
nop
fdiv
push
sti
push
cmc
push
int3
jns
pop
loopne
dec
mov
hlt
das
cmp
dec
nop
and
out
ss
sbb
mov
adc
imul
xchg
mov
mov
cmp
xchg
andl
lock
shll
incl
and
pop
lods
mov
cli
xchg
fimull
mov
rcr
addb
push
in
or
outsb
bound
dec
cmpb
mov
mov
xchg
mov
sbb
inc
leave
mov
jmp
loopne
fnstenv
mov
sbb
orl
mov
cmp
loopne
push
mov
out
push
xor
or
mov
mov
add
mov
sbb
pop
dec
icebp
loope
push
sahf
jecxz
xor
adcl
cli
neg
arpl
xor
mov
inc
ret
cwtl
mov
mov
adc
dec
push
jle
hlt
in
xchg
mov
push
aaa
cwtl
push
rol
call
lcall
mov
orl
divb
or
pop
out
xchg
pop
dec
xor
gs
and
dec
daa
mov
mov
lock
sbb
popa
dec
je
or
loope
xor
icebp
jge
pop
mov
cld
lock
mov
and
and
imul
ret
mov
and
fadd
test
lock
bnd
or
adc
adc
push
and
pop
lods
div
cmp
repz
insb
test
loope
ljmp
outsb
mov
jnp
xor
or
out
inc
lea
addr16
imul
aas
add
out
pop
add
mov
test
mov
shrb
push
rcr
dec
mov
add
rorb
adc
push
mov
cmpb
fldt
and
pop
je
sbb
jge
or
or
xchg
bound
xor
jle
push
dec
mov
cmc
xchg
jbe
and
loope
sbb
sti
js
test
and
inc
lods
cmpsl
jl
add
mov
pop
pop
cmp
add
dec
jb
movsl
cmp
xchg
lds
rorl
clc
add
or
popa
ret
ficoms
jmp
pop
xlat
jne
pop
jo
ds
adc
dec
jecxz
mov
mov
loop
rcl
sbb
decl
push
stos
lods
xor
imul
and
or
ss
sub
scas
push
add
mov
inc
roll
lods
add
call
ror
mov
pop
ret
outsl
mov
mov
inc
pop
push
mov
mov
and
sar
pop
mov
add
jbe
add
adc
inc
push
daa
shrb
jns
test
or
loop
test
push
idivl
inc
mov
shlb
fiadds
lahf
cmp
popa
adc
pcmpgtd
xchg
imul
daa
pop
dec
add
clc
xor
xchg
mov
ret
or
adc
or
testl
pop
jae
inc
fistpll
jo
fnsave
jae
push
mov
sbb
fildll
sbb
rorb
call
mov
jecxz
stos
mov
sar
shrl
jl
into
ror
in
push
in
je
ret
adc
and
push
repz
sbb
push
mov
or
mov
leave
push
scas
aaa
cmc
jg
cwtl
push
cmp
loopne
shrb
pop
xchg
mov
xchg
pop
cld
mov
stos
int3
jbe
push
and
inc
mov
outsl
loopne
test
in
in
xchg
ret
ljmp
adc
xor
shlb
inc
pop
push
pusha
mov
in
push
andl
add
lods
dec
and
movb
sti
pop
mov
divb
adc
sub
jno
xchg
pop
test
fdivrl
add
mov
sbbb
nop
add
inc
xor
loope
adc
sub
inc
ret
pop
decl
dec
jle
add
dec
call
rcl
dec
adc
jl
add
mov
add
decl
push
adc
xchg
into
inc
push
jb
daa
mov
cmp
adc
jl
pusha
scas
scas
push
and
jo
jle
mov
cmpsb
push
push
out
sbb
jecxz
int3
sub
mov
loop
mov
loopne
loope
fsubrl
andb
roll
pop
shr
sbb
jbe
fcoms
test
js
inc
add
push
xlat
xchg
rorb
mov
pushl
dec
scas
mov
push
adc
and
cmp
xchg
scas
sbb
adc
mov
lods
ficoms
inc
lahf
add
dec
nop
fidivrl
xchg
rcl
les
jl
mov
pop
xor
mov
js,pt
in
add
add
fistpl
jge
mov
jecxz
cmp
iret
mov
adc
cld
jle,pt
cmc
shrb
add
jp
lock
mov
ja
xor
stc
push
icebp
mulb
pop
dec
cmp
jnp
jle
ljmp
cmp
or
push
inc
adc
pop
xchg
pushf
outsb
leave
out
pop
add
mov
push
add
mov
dec
pop
mov
int3
aas
test
lock
add
cmp
ljmp
js
fdivs
inc
shrl
lahf
or
pop
popa
pop
repz
test
or
cmpsl
fists
jae
inc
push
ja
mov
pop
add
mov
jle
ret
mov
je
jp
pop
mov
xor
mov
add
inc
int3
sbb
cltd
cmp
cmp
adc
and
mov
imul
aas
jbe
lgs
cli
mov
jg
cmp
push
movsb
fistl
outsb
jmp
scas
mov
pop
add
and
pop
pop
loop
fs
adc
iret
inc
mov
popa
sub
les
mov
mov
jge
pop
dec
xor
dec
push
sbb
clc
js
shll
adcb
inc
jne
adc
rorl
jo
call
aas
pop
pop
in
fisttpl
cli
sbb
jmp
lds
adc
inc
push
mov
lea
aas
in
popl
add
jno
inc
andl
les
push
mov
mov
enter
icebp
mov
cmp
sub
fmull
cltd
lea
add
cmp
nop
sbb
cmpsb
inc
insb
test
loopne
sub
aad
jle
or
sub
add
dec
aad
jge
out
adc
cmp
add
out
lods
pop
pop
mov
loope
mov
xchg
pushf
mov
lock
pop
cwtl
sbb
and
lea
sbb
fnstsw
and
inc
adc
cmp
lock
xor
mov
adc
inc
xor
xchg
mov
lods
loope
xchg
mov
add
fisubrs
fdiv
rolb
jge
push
xchg
sahf
fmuls
and
sub
pop
adc
cmp
and
cs
mov
push
cld
adc
lcall
adc
insb
mov
aas
jb
shll
adc
add
ss
ds
inc
ljmp
jo
add
int
or
jle
push
sub
fsubrs
fdivl
lds
push
adc
mov
mov
jno
sbb
clc
dec
or
ja
fldl
inc
js
jbe
shlb
jmp
sbbb
cmp
test
sahf
and
push
adc
daa
repz
xor
inc
jns
pop
bound
stos
repnz
sbb
jo
mov
mov
test
or
mov
xor
bound
add
xor
sbb
add
xchg
and
movsb
xlat
mov
xor
cmpsb
sub
sub
xchg
mov
or
jbe
dec
mov
ds
test
or
inc
xrelease
push
push
dec
add
ret
cli
in
call
jg
cmp
push
pop
jo
or
xchg
sbb
jb
ror
pop
js
cmpsl
mov
call
int
fmulp
push
fs
fisttpll
fistps
mov
sub
movsb
push
pandn
jmp
push
jne
mov
in
jg
cwtl
cltd
mov
arpl
jmp
stc
fcomps
push
movsb
adc
hlt
icebp
push
sbb
and
fs
pop
add
push
mov
adc
nop
cmp
xchg
dec
mov
push
pusha
inc
js
outsb
lahf
mov
or
sbb
pop
adc
add
roll
xchg
xchg
sbb
mov
add
out
mov
daa
jmp
push
add
mov
lret
xor
pop
dec
cli
ja
pop
orb
lods
mov
mov
mov
adc
in
stos
std
shll
xchg
loopne
test
jo
call
lock
pop
xchg
scas
sahf
repnz
or
psllw
mov
mov
call
arpl
arpl
push
dec
mov
out
mov
call
inc
cmp
mov
add
pop
icebp
sbbl
inc
pop
mov
mov
and
sbb
adc
daa
dec
push
and
dec
mov
inc
aas
fs
or
sbb
cmp
lods
add
cmovne
inc
cli
pop
mov
out
dec
popf
cmc
add
bound
loop
xlat
std
pop
cli
pusha
pop
ret
bnd
movsb
xchg
insl
ljmp
lcall
dec
mov
aam
aam
pop
xorl
mov
dec
push
divb
ja
jle
cmp
dec
adc
int
xchg
jno
push
popf
xor
lcall
imul
rol
lock
repz
rcrb
idivl
fldl
xor
or
xchg
and
push
je
pop
pop
cmpsb
xor
les
inc
or
mov
rcr
std
test
xor
and
pop
sub
dec
cli
bound
test
jge
add
dec
dec
pop
aaa
clc
xor
pop
and
pushf
loopne
or
int3
fimuls
es
testl
and
in
aaa
xchg
aam
cmp
lcall
fwait
inc
cmpsl
push
cli
dec
aas
sbb
mov
and
sbb
mov
pop
and
sub
imul
mov
xchg
test
sub
jo
or
mov
mov
fs
shrb
jbe
mov
es
jp
int3
lock
dec
jg
xor
stos
ret
sub
mov
fmulp
cmpsb
mov
je
fists
pop
mov
jb
es
push
mov
inc
nop
xchg
jne
jl
fs
add
scas
scas
dec
js
sub
or
or
sbb
add
adc
mov
cwtl
mov
fnsave
xor
and
xchg
mov
pop
adc
mov
push
fwait
imul
mov
jno
push
das
fisubrl
out
xchg
xchg
out
and
xorb
mov
pushf
rcrb
test
sbb
pop
mov
les
sbb
imul
aad
cmp
ds
mov
cs
push
rclb
lret
fcoms
sub
mov
sub
loope
cmp
mov
outsb
pop
fdivl
inc
ret
mov
or
je
add
stos
and
mov
adc
inc
rcll
enter
pop
or
sbb
frstor
inc
outsb
and
add
mov
stos
pop
lods
push
loop
jnp,pt
fsubp
in
sub
sbb
jg
ret
sbb
movb
shl
sub
sbb
sbb
int
cs
or
xchg
adc
add
mull
mov
icebp
mov
jno
repnz
jo
popa
pop
pop
mov
pop
sub
jbe
gs
xor
out
inc
call
loope
inc
popa
or
and
ret
ret
xchg
add
jbe
mov
out
pop
pop
adc
rcrb
es
pop
pop
lock
outsl
add
push
out
js
lcall
dec
js
adc
and
add
xor
popaw
dec
cld
dec
jmp
js
mov
decl
lds
push
adc
mov
lcall
lock
pop
push
mov
out
sarb
into
push
cmp
or
test
dec
push
lret
xchg
int3
adc
stc
push
subb
jl
lods
ss
nop
aad
mov
sub
sub
fsubl
bound
cmp
push
inc
fnstcw
imul
rclb
fs
inc
ret
jns
lahf
stos
or
sahf
dec
test
push
inc
jmp
add
cmpsl
inc
mov
ror
adc
aas
push
sbb
xchg
js
sub
xchg
push
or
fcoms
mov
ljmp
popa
shll
add
pushf
bound
rolb
jo
mov
in
mov
fidivrl
loop
ljmp
movsb
aam
or
add
add
pop
mov
and
mov
mov
mov
filds
push
jo
xor
imul
gs
leave
and
sub
shlb
or
aad
inc
sti
xor
jmp
jo
push
popa
cmp
push
adc
int3
jl
clc
js
pop
jnp
insb
sti
stc
inc
adc
inc
shr
add
movsbl
scas
cli
mov
addl
and
mov
cmpsb
movsl
icebp
jmp
shrl
je
mov
popa
or
dec
mov
fwait
lahf
fbstp
loope
jne
pop
push
push
inc
in
nop
adc
cld
mov
jle
xlat
push
inc
bound
fcompl
daa
xchg
imul
sub
cmpsb
push
sub
pop
popa
scas
pop
loopne
xchg
mov
push
adcb
sbb
cmpb
mov
inc
cmpsb
negb
popa
jne
jno
aam
es
and
jl
push
xchg
add
sbb
pop
mov
shll
push
sub
xorl
sub
fs
push
test
adc
mov
sbb
notl
fistl
mov
lods
rclb
add
or
test
or
sbb
std
sub
sahf
or
out
and
cmpsl
or
or
idiv
xor
fwait
cmp
inc
cmpb
mov
mov
pop
adc
bndldx
arpl
in
adc
sti
fmull
inc
mov
pop
js
mov
loope
mov
popf
mov
xor
and
dec
pop
lock
cmpsb
mov
pop
fwait
andb
loope
mov
mov
ljmp
mov
movsb
mov
daa
cmp
testl
pop
stos
ret
scas
data16
js
daa
jl
es
inc
inc
xor
pushf
outsb
or
arpl
dec
cwtl
sbb
and
mov
adc
mov
testb
imul
aad
call
dec
xlat
add
jmp
mov
push
mov
sub
call
cld
lcall
test
imul
lahf
mov
cld
or
aaa
jne
pushf
movsl
jle
pop
mov
out
xchg
sbb
outsl
mov
or
out
pushf
into
cs
addb
movsb
pop
call
dec
push
pop
pushf
push
popf
dec
aad
push
jmp
movsb
loopne
pushf
jg
mov
add
jp
adc
shlb
mov
out
jmp
icebp
es
shlb
mov
adc
stos
lcall
cli
aas
decb
divl
jae
cmp
cmp
pushf
sub
and
mov
cmp
add
xchg
fstl
inc
cld
dec
fadd
add
mov
pop
std
mov
imul
xchg
mov
cmp
insb
nop
dec
imul
pop
push
and
inc
jnp
add
ret
outsb
mov
push
add
mov
jbe
mov
cmp
fimull
das
ss
imul
repz
xlat
jmp
pusha
lcall
push
xchg
sub
xchg
mov
hlt
mov
add
mov
loop
bound
sbb
rcrb
mov
pop
clc
out
shll
cli
test
jmp
mov
adc
jnp
pop
add
mov
cli
loop
or
mov
test
mov
jle
daa
dec
outsb
sahf
push
sbb
sub
push
subl
dec
rorb
xchg
jl
fadd
imul
int3
shrb
fisubrl
mov
sub
std
aas
into
cmpsl
mov
push
push
sbb
enter
or
xor
xor
subb
ret
mov
xchg
lahf
lea
popa
decb
ficompl
jo
xor
inc
xchg
push
dec
std
pop
xchg
ret
movsl
outsb
mov
sub
dec
lock
loopne
xlat
enter
aad
test
sbb
jb
sbb
mov
jo
scas
mov
jne
mov
rorl
mov
rclb
mov
jmp
sbb
cmp
pop
dec
rclb
lock
xchg
icebp
cmpps
mov
sub
mull
sbb
movsb
cmpl
aam
push
jmp
nop
sbb
add
lret
loop
insl
movsl
jne
std
or
cmp
jge
mov
jle
xchg
pop
pop
xchg
xor
frstor
loope
fstp
or
adcl
sbb
inc
fnstenv
icebp
mov
inc
pushf
dec
outsb
dec
push
dec
jg
jo
mov
adc
ss
jg
stos
daa
out
gs
fwait
mov
jne
dec
add
adc
pop
mov
add
push
lock
int
addb
les
mov
adcl
pop
sbb
popf
insb
add
and
cli
fcmove
inc
in
pushf
jg
mov
cs
sahf
mov
fs
and
fadd
and
xlat
clc
mov
jg
cmp
xor
push
xchg
rcr
push
mov
dec
mov
adc
lock
pop
push
adc
incl
ds
jecxz
js
lahf
xlat
jl
mov
pop
and
insb
outsl
add
call
jp
inc
das
ja
pop
add
aas
pop
fnstsw
andb
bswap
and
jnp
int
or
inc
mov
sub
cld
lahf
js
inc
inc
js
push
mov
clc
enter
sbb
sub
inc
mov
test
and
add
insb
and
mov
dec
jge
fimuls
out
jo
pop
cmc
jbe
pop
ret
mov
pop
ss
mov
fcompl
dec
or
jle
sub
mov
mov
or
inc
push
sbb
push
int
andl
mov
das
mov
pop
xchg
test
add
jmp
jb
mov
pop
xchg
clc
mov
adc
icebp
add
jp
stos
lock
rcrb
jno
push
push
jle
inc
scas
adc
sbb
push
ss
enter
shrl
sbb
fisttpl
scas
mov
cmpsb
shrb
test
xlat
cmc
cmp
data16
cmp
jo
dec
arpl
in
push
aas
adcb
orl
lcall
test
ret
and
mov
sbb
jle
ljmp
cmp
inc
or
xor
sub
rcll
pop
add
nop
in
jb
pop
scas
push
pop
add
loope
mov
push
mov
data16
or
js
sub
push
adc
mov
nop
jg
cltd
or
sub
ret
xchg
stc
cmc
filds
int3
inc
xor
pop
cmp
mov
jo
outsb
insb
pusha
mov
inc
push
sub
add
pop
cli
and
insl
test
lret
mov
aas
js
fisubrs
fdivrp
sarb
xchg
lret
mov
mov
xor
jns
add
sub
add
add
cli
mov
outsl
and
ljmp
push
mov
mov
sub
cmp
cwtl
xchg
dec
inc
or
pop
rcrb
push
pop
or
mov
or
loope
jecxz
sarb
js
sbb
adc
rcll
mov
dec
mov
and
mov
out
mov
movd
sbb
movsb
add
pop
pop
jbe
sti
in
shrb
rorb
stos
xchg
div
and
rolb
lds
clc
clc
mov
aam
stos
dec
cwtl
cmp
pushf
or
aam
jb
or
in
push
in
cltd
sbb
push
or
in
adc
inc
mov
in
inc
pop
inc
mov
add
sbb
movsb
sub
daa
scas
lock
mov
addb
add
and
mov
subl
cli
cmp
test
fnsave
and
sahf
ljmp
subl
sub
inc
cld
xchg
fnsave
sbb
cmp
je
xchg
add
ds
pop
add
lret
jno
sbb
insb
movsb
fsubrl
inc
dec
add
jg
fbstp
les
leave
hlt
inc
rolb
sbb
mov
fwait
je
clc
pop
xchg
or
in
sub
mov
pop
decl
or
andl
push
xor
cmp
je
inc
xchg
leave
mov
push
cld
mov
xchg
jo
notl
xor
sbb
add
das
cwtl
push
pop
in
jmp
sti
mov
out
or
cltd
sub
xor
mov
daa
mov
or
addb
inc
mov
mov
loop
mov
adc
std
mov
int
and
out
cmp
jo
sub
ret
leave
iret
add
push
aas
sbb
std
push
or
movsw
test
stc
cmp
test
pop
inc
mov
mov
sbbl
push
add
fidivrl
lock
xor
sub
mov
push
movsl
dec
sahf
repz
lock
inc
das
mov
test
rorb
mov
pop
push
lahf
clc
push
pop
mov
xlat
repz
lret
out
icebp
push
or
sub
pop
jo
jbe
inc
xchg
inc
sbb
aaa
les
mov
mov
push
xor
or
ja
incl
jp
pop
push
shlb
mov
repz
lock
mov
push
nop
lock
jne
mov
lods
outsb
insb
inc
lds
das
cld
xchg
cmp
test
cmp
sbb
xor
fidivrs
and
pop
mov
xchg
inc
ljmp
test
pop
push
xchg
int3
cmp
xlat
cmp
aam
xor
add
mov
pop
std
pop
lock
nop
pusha
xchg
jae
pop
jecxz
mov
mov
sbbb
clc
je
jb
inc
clc
imul
jo
test
add
push
mov
jns
out
dec
aas
xor
stos
xorb
insb
and
shll
fisubrl
pop
or
movsl
out
insb
or
jbe
sar
aam
pop
mov
loopne
jno
fisttpll
dec
pop
mov
cmp
lock
inc
ljmp
pop
js
repz
sub
push
mov
lock
add
xchg
mov
pop
adc
and
sbb
or
xchg
out
sarl
gs
std
xchg
rolb
in
add
addl
shll
sbb
dec
xor
jp
aam
add
jge
lret
mov
adc
push
mov
filds
std
daa
pop
pop
cmp
push
outsb
dec
std
sbb
inc
xor
lret
mulb
movsl
mov
or
loopne
push
pop
test
test
movsl
cmc
aam
cld
pop
ds
into
pushf
stos
stos
fistpl
int
inc
dec
or
lods
sbb
out
lcall
movsl
or
mov
push
scas
mov
jo
clc
push
incl
mov
fwait
cmp
jge
nop
fcomps
inc
clc
xor
push
push
cwtl
xrelease
sub
call
mov
mov
aad
and
shl
adc
popa
lods
mov
xlat
mov
mov
xchg
sbb
dec
dec
xchg
cmp
inc
pop
cmpl
sbb
pusha
or
pushf
pop
inc
sbb
stos
movsl
shlb
aaa
mov
jb
xchg
xchg
negl
es
mov
mov
pop
pop
and
es
idivb
or
adc
add
add
icebp
jo
mov
clc
mov
call
movsl
xlat
pop
jle
xchg
and
or
ficomps
pushf
xchg
repnz
ret
cld
stos
arpl
shr
jmp
dec
inc
leave
call
in
mov
adcb
in
clc
pop
add
repnz
push
maxps
lock
xor
xorps
sbb
adc
jb
loop
xlat
stos
mov
dec
mov
inc
xchg
adc
xor
andb
loope
loopne
cmp
in
adc
and
rolb
std
push
push
outsl
imul
add
sub
sbb
std
pop
subb
je
cmc
xchg
push
or
mov
outsb
dec
lods
xchg
movsb
jo
jbe
pop
sbb
sbb
call
mov
adc
jnp
add
stos
xor
sar
std
popa
jbe
mov
add
mov
shlb
dec
add
cmovge
mov
ds
xchg
jl
aas
xor
jmp
out
shlb
into
push
or
xor
pop
movsb
mov
dec
xchg
jno
lods
push
lock
and
jmp
je
sahf
pushl
icebp
dec
push
sti
sub
andl
sarl
push
sbb
aam
jg
pop
or
aas
add
jmp
mov
dec
std
inc
adc
cmp
sbb
cli
call
fbstp
rcr
jo
fmuls
in
pop
push
adc
push
call
jae
div
lret
xor
mov
add
ret
subl
lock
xor
out
jmp
andb
xor
loope
shll
mov
jg
jl
cvtdq2ps
dec
sbb
push
jl
aaa
sbb
sbb
je
rol
inc
clc
inc
cmp
dec
jo
scas
jae
ds
lcall
loope
dec
pop
loopne
jg
mov
std
arpl
cmp
sbb
loop
inc
push
stc
in
popa
mov
aas
negb
mov
pop
sbb
insl
ja
nop
loopne
xchg
jmp
sbb
or
pop
into
add
cmp
fldcw
push
cli
sbb
fninit
xor
mov
xchg
bnd
lcall
daa
cmp
mov
aam
shlb
cs
push
outsb
fcoml
jle
xchg
mov
movsb
fcoms
loope
xlat
push
xorb
dec
addr16
pop
and
mov
xor
mov
mov
cmpl
cmpsl
data16
incl
mov
ret
and
aas
std
add
inc
push
test
add
jne
cld
jle
sbb
jg
or
mov
stos
adc
cld
pop
icebp
jl
push
scas
testl
test
lea
and
xlat
lret
or
daa
mov
jge
in
and
sub
sub
fiaddl
ljmp
push
mov
cmp
inc
fisttpll
in
sub
incl
mov
mov
and
cmp
imul
mov
mov
cmc
adc
shr
fiaddl
lock
imulb
xor
cmp
clc
fsubs
xchg
mov
push
jnp
outsl
cs
dec
int3
lods
sub
dec
pusha
fs
dec
fwait
jp
mov
push
xchg
cmpsl
incl
out
sbb
mov
inc
ds
loopne
adc
add
mov
ljmp
sbb
add
mov
repz
pop
stos
cmpsb
fwait
test
push
dec
fsubrl
push
sahf
push
sarb
or
xchg
sub
in
and
mov
sbb
lock
inc
mov
ret
xchg
scas
pop
jl
aad
loopne
or
lock
cmpsb
jl
cmp
fmul
cmp
and
adc
js
pop
loop
in
sub
movsl
call
cmc
gs
mov
add
je
push
lret
icebp
pusha
stos
lahf
add
push
hlt
bound
sub
push
js
mov
cmp
adc
jp
dec
rsqrtps
pop
cmp
cmp
aad
push
scas
imul
stc
std
push
cmpsb
lcall
mov
std
pop
loop
test
shl
adc
cmpl
pop
sbb
repz
push
outsl
shrl
or
lsl
negb
subb
loop
mov
sub
add
lods
std
cmc
and
out
adc
push
jecxz
incl
stos
rolb
mov
mov
clc
xchg
mov
inc
inc
repz
cmp
insl
jecxz
xchg
adc
mov
mov
insl
or
int3
mov
pop
mov
mov
test
inc
jl
fcmovbe
add
push
out
and
fcompp
mov
mov
xchg
sbb
mov
adc
addl
inc
into
cli
cld
inc
inc
or
fwait
not
pop
dec
les
xchg
mov
aaa
cld
hlt
xchg
xchg
jp
sbb
ja
and
xlat
jg
enter
cmc
mov
add
je
xorb
adc
xchg
jo
or
scas
cli
mov
mov
jb
cli
cli
pop
jg
adc
push
sub
adc
or
sbb
adc
add
orb
aam
cmp
cmc
sub
inc
cmc
cmp
inc
movsl
filds
cmpsl
mov
xor
out
inc
loopne
dec
ljmp
cld
lret
cmp
fnstcw
lods
aaa
mov
mov
enter
xchg
lds
insl
mov
test
adc
push
pop
or
add
mov
mov
nop
outsb
daa
mov
ret
mov
inc
sub
loope
pop
addb
jle
add
push
mov
inc
in
lret
push
sub
out
lods
and
push
inc
xor
push
push
dec
incl
mov
insb
imul
std
xchg
mov
stos
cmp
mov
ljmp
movsb
xchg
fxch
dec
jge
out
jnp
icebp
insb
fmuls
into
ret
push
xchg
test
filds
adc
mov
adc
xchg
sub
xor
out
insb
xor
cmpb
adc
icebp
adc
shrb
or
or
or
add
cwtl
outsl
lret
or
nop
jo
mov
push
roll
shrb
mov
loope
jp
push
jne
sbb
push
addb
push
cmc
or
ljmp
adc
jne
jl
jo
jle
stos
dec
xor
mov
fbld
iret
das
xchg
push
xorb
add
mov
xlat
movsl
imul
add
std
fisubl
sahf
adc
in
cld
mov
lods
add
mov
mov
addl
cld
aaa
sbb
mov
bswap
outsl
inc
add
mov
pushf
sbb
ljmp
dec
int3
fs
or
and
sti
xchg
icebp
mov
fimuls
enter
adc
dec
jmp
insb
repnz
sbb
add
cmp
sub
xchg
adc
aam
sbb
mov
xchg
push
jl
mov
mov
dec
nop
movl
gs
rorl
sbb
test
mov
insb
mov
jmp
inc
adc
dec
jecxz
into
jle
movsb
push
aaa
push
push
pop
cli
or
inc
cmp
mov
mov
shl
mov
push
enter
sbb
xor
mov
or
xor
testb
lock
adc
fisubrs
stos
mov
or
or
mov
sbb
cmp
pop
sbb
mov
cmp
inc
aas
jnp
inc
jg
push
imul
lcall
adcl
sbb
or
stos
push
add
test
call
cld
mov
shrb
xor
inc
insl
push
dec
mov
sub
aam
mov
inc
fisttpll
mov
cmp
js
and
sarb
pop
mov
mov
xor
cmp
addr16
xor
clc
and
and
sbb
dec
popl
popa
imul
add
mov
test
mov
mov
in
mov
cs
pop
daa
fldt
sbb
or
push
dec
mov
dec
cmc
pop
outsl
or
push
test
shlb
lods
adc
aas
call
inc
push
cld
sbbb
cmp
loop
add
adc
and
sub
add
xchg
jmp
jmp
add
lahf
repz
xor
inc
add
inc
cs
cmp
pop
or
test
or
sbb
xor
cmc
mul
mov
xlat
add
pushf
in
xchg
rcr
dec
jg
mov
lret
mov
cmp
stos
or
jne
incb
test
inc
lds
mov
lock
loope
lock
test
rcrl
xor
cmc
shl
das
stos
cli
mov
push
test
adc
sar
dec
ljmp
xchg
cmp
and
jno
adc
xor
add
idivl
xor
int3
cmc
mov
shl
mov
add
test
inc
jb
adc
mov
mov
rclb
jecxz
insb
dec
or
sti
stc
das
jl
sub
pop
add
jp
jl
pop
ret
adcb
rclb
data16
mov
mov
aas
nop
push
jnp
xchg
aas
clc
imul
scas
pushf
adc
ja
push
rolb
negl
es
cmp
push
inc
imul
mov
or
lcall
outsl
mov
adc
inc
adc
cs
insl
and
pop
sti
in
out
mov
orl
ss
jmp
mov
stos
dec
pop
jo
jmp
dec
divl
fcmovnbe
scas
cld
and
add
in
jl
sti
mov
rclb
add
xor
cmp
jp
cmp
icebp
xorb
lea
rclb
stc
inc
sbb
pop
rclb
sub
subb
or
cmp
es
and
dec
fwait
or
ljmp
adc
ds
arpl
lods
mov
ret
mov
call
push
stos
jns
aam
inc
int3
loopne
xor
rcll
addb
adc
adc
inc
push
call
mov
imull
cmp
sahf
stc
xor
sbb
sub
adc
sahf
bound
sbb
sti
loope
scas
in
adc
scas
ret
test
sbb
outsl
js
lock
int
dec
nop
xor
mov
adc
inc
aam
mov
mov
andb
popa
add
jbe
movhps
loopne
fsubrl
mov
cwtl
adc
push
out
imul
mov
lods
std
adc
mov
jne
or
add
orl
add
adc
lcall
mulb
sub
jae
push
xor
cld
mov
negl
out
pusha
cwtl
jmp
sbb
sbb
mov
jg
mov
xchg
ret
subb
lds
push
test
dec
mov
sub
cmc
xchg
add
or
les
mov
movsb
ficoml
mov
mov
sti
shlb
jae
mov
add
cmp
imul
popf
icebp
dec
xlat
inc
jge
or
mov
sub
pusha
call
add
shlb
dec
cmp
adc
push
mov
push
jl
sbbl
lock
sub
xor
dec
jae
jo
cmp
stos
adc
dec
outsb
loopne
pop
sbb
movsb
xchg
into
insb
test
push
arpl
icebp
xchg
push
cs
push
sub
clc
inc
dec
aaa
aaa
in
or
and
cltd
push
repz
cmpsb
xor
icebp
sub
std
or
dec
and
mov
push
sbb
jmp
cmpsl
dec
jle
xor
gs
lods
ljmp
fidivrs
in
fwait
pop
or
adc
jns
mov
cmp
xor
mov
aas
adc
dec
pushf
or
mov
ret
pop
daa
jmp
paddb
insl
sbb
xchg
ficoml
adc
addr16
int
ljmp
lret
call
pop
mov
iret
lret
pop
icebp
int3
inc
mov
nop
int
pop
cltd
mov
xor
lods
and
iret
cmc
sub
push
mov
add
add
mov
fs
fadds
hlt
repnz
xabort
ljmp
popa
and
mov
cmc
addr16
push
cmpsb
sub
xor
pushl
test
sbb
rcrl
and
dec
inc
lahf
js
cmc
mov
cmpsl
mov
leave
inc
sti
scas
icebp
pop
mov
aas
lods
mov
dec
mov
mov
test
ss
add
loopne
jne
inc
idivb
cmp
outsl
sub
js
inc
bound
loopne
cs
lea
in
sub
jg
lret
mov
adc
fs
mov
pop
movsl
pop
imull
mov
pusha
pop
adc
out
mov
lret
lock
fs
pop
lcall
ror
mov
mov
pushl
xchg
add
inc
jge
movsb
lahf
ret
sub
not
add
dec
js
cmp
sti
sub
jge
insb
and
or
iret
xchg
add
cmp
or
rcl
inc
lea
stos
mov
loopne
or
shrl
sbb
adc
mov
xor
jge
xchg
daa
scas
add
pop
shl
decl
in
test
and
test
je
add
test
scas
shlb
mov
rcrb
call
inc
mov
mov
nop
ret
inc
lcall
mov
inc
fisubrl
aam
loopne
mov
cmpl
mov
xor
pop
jle
fisubs
pop
xchg
leave
fisubl
sarb
addr16
movups
or
cli
in
hlt
xchg
push
into
cli
idiv
xor
dec
adc
jmp
mov
inc
adc
andl
enter
or
add
rcll
xchg
sub
jmp
sbb
call
cs
xchg
out
push
and
or
bound
lods
pop
imul
jb
aam
jge
cmp
push
rorl
dec
pop
fadd
mov
gs
scas
xchg
adcb
sub
push
loope
out
sub
sbbl
sbb
bound
incl
mov
xor
pop
out
add
mov
inc
ljmp
dec
ficoms
loope
ss
add
add
insb
mov
dec
lret
incl
cmpsl
add
rorb
sti
loop
pushl
sarl
addr16
jle
cs
sub
aas
lds
xchg
fs
mov
int
or
cld
popa
call
or
dec
or
cmpsl
mov
test
imul
iret
bound
sub
icebp
hlt
imul
js
incb
and
imul
push
or
movb
and
push
sbb
lods
insb
aas
nop
cmp
pushf
shl
cmp
mov
xchg
hlt
mov
mov
cmp
insb
xchg
mov
in
leave
push
lahf
jmp
lock
cmpb
dec
adc
scas
or
sbb
incb
add
pop
jbe
test
xor
inc
cmp
mov
or
fwait
pop
xor
ror
and
test
ss
jg
imul
lret
lds
ss
stc
lahf
mov
pop
lds
fsubrs
or
cmp
mov
xor
pop
cld
add
jl
repz
push
jns
stc
push
decb
pusha
ja
fwait
sarb
lods
pushl
cmp
iret
cmp
popa
dec
dec
ret
xor
lret
loopne
inc
ret
pop
shll
or
or
xor
add
popf
jle
sub
pop
dec
cmc
dec
movsl
in
cmpsl
decl
xchg
lock
sbb
dec
fstl
dec
lahf
dec
decl
sti
scas
adc
dec
roll
in
loop
mov
push
aam
push
sarl
cmp
scas
mov
adc
or
push
loopne
pop
push
inc
ret
mov
sub
pop
scas
sti
out
cmp
loopne
mov
xor
test
inc
cmp
aam
inc
loopne
or
sub
clc
daa
ret
xor
jne
call
mov
loopne
push
cmp
ret
or
mov
mov
lods
adc
incl
aaa
pop
rclb
dec
mov
jl
jge
jg
test
mov
outsl
cmovs
addb
xchg
jbe
cmp
and
data16
dec
xchg
or
sbb
movb
xchg
or
loope
mov
outsb
movb
icebp
add
mov
push
push
adc
push
mov
cmp
push
mov
push
mov
mov
fnsave
inc
sub
xchg
shll
sbb
dec
les
adc
push
xor
mov
push
xlat
pop
cmc
movsl
call
fmuls
cmp
and
daa
jecxz
mov
cmp
mov
mov
and
lock
loopne
mov
adc
leave
rclb
or
scas
mov
inc
push
pop
je
shrb
ret
lock
adc
push
mov
loopne
and
mov
mov
inc
test
dec
push
fiadds
or
rorl
jns
shl
pop
cmp
add
xchg
mov
les
mov
jmp
push
popa
cli
clc
cmp
add
fcmovbe
cmp
adc
push
aam
je
xor
daa
sub
mov
nop
mov
icebp
stos
fmull
xchg
adc
mov
je
stc
jns
rol
int
xchg
add
aad
or
sub
lret
mov
jge
jg
inc
roll
ja
inc
js
mov
push
mov
dec
fs
fs
xchg
push
adc
pop
mov
mov
inc
fcmovb
stc
fcmovnu
orb
xor
popa
das
aad
hlt
mov
ja
call
cmp
scas
test
test
sarl
cmp
add
sub
mov
fs
lea
imul
dec
jp
in
push
pop
pusha
shr
dec
loope
and
sbb
jno
bnd
mov
stos
das
cmpsl
inc
push
pop
scas
xchg
lret
sti
or
inc
popf
mov
push
mov
push
pushf
dec
scas
ret
pop
pushf
sbbb
or
sbb
mov
daa
push
sub
sar
xor
xchg
or
mov
mov
je
jle
loopne
mov
hlt
mov
mov
pop
outsl
std
inc
out
push
adc
imul
orb
fists
sub
cmp
fcmovnb
in
xchg
call
sub
jecxz
dec
loop
stos
jmp
in
pop
movsb
cmp
mov
jns
icebp
punpcklwd
adc
sbb
mov
xor
adc
mov
jge
xchg
popa
push
loop
jo
test
mov
pop
rcll
rolb
dec
pop
aad
mov
mov
dec
cmp
mov
in
roll
inc
adc
adcb
sti
xchg
daa
xchg
push
push
pop
lods
das
enter
aam
mov
xor
sub
cmp
inc
cld
inc
add
sub
or
ja
aas
dec
sub
or
cmp
add
icebp
push
fcmovbe
fcmovu
sbb
les
push
ds
cmp
pop
add
fs
jbe
insb
ljmp
ret
jg
pop
adc
adc
icebp
aad
xchg
xor
mov
dec
in
xor
pop
test
adc
add
xor
iret
leave
jo
xchg
mov
out
pop
dec
pop
stos
enter
lret
pop
loopne
pop
fbstp
push
cmpsb
sti
mov
cmp
outsl
loop
pop
jmp
loopne
outsl
sahf
push
and
cmp
lea
int
mov
sarb
push
fs
xchg
outsl
int3
icebp
dec
xor
and
xor
pop
pop
mov
cmpsb
or
mov
and
cmp
std
push
sub
rolb
cmp
add
in
cmpsb
call
fs
jg
lods
incl
shll
cmp
icebp
xchg
mov
ljmp
sub
adc
add
dec
mov
pop
sti
cwtl
inc
les
inc
mov
jnp
movsl
popf
fildl
loopne
stos
outsl
xor
stc
lret
inc
add
shl
test
jl
stos
movsb
mov
xor
jg
dec
out
pop
arpl
push
mov
test
rcrb
in
mov
in
adc
xor
mov
stos
xchg
sub
idivl
call
mov
and
lock
xchg
add
and
call
les
cli
stos
mov
scas
enter
bound
push
pop
xor
or
mov
sub
lds
aaa
cmpsl
lcall
inc
add
pop
xor
cmpsb
insb
mov
sarl
push
adc
adc
mov
cmpsl
mov
jge
sahf
and
push
jle
test
inc
mov
out
loopne
nop
pop
inc
std
sarl
push
mov
pop
test
clc
inc
in
jno
adc
cld
jg
out
repnz
mov
mov
lds
jnp
loopne
xchg
mov
mov
imull
stc
cs
pop
xchg
in
fwait
dec
unpckhps
js
or
insl
cmp
pop
sar
push
dec
loopne
test
stos
ret
das
cld
inc
push
xor
adc
xchg
insb
or
xchg
stos
add
stc
outsl
je
inc
add
movsl
and
adc
cli
in
mov
ja
fwait
push
mov
mov
mov
orb
in
sbb
or
loopne
add
fcmovbe
imull
push
lret
lea
sub
pop
sub
xchg
cmp
or
fnsave
push
pop
test
xchg
dec
clc
mov
sub
mov
xor
push
loope
mov
cmpsl
lahf
into
shl
sub
mov
sbb
aam
fdivl
scas
out
scas
sub
out
ds
mov
xor
fwait
push
lods
add
out
loop
xor
xor
das
outsb
outsb
or
jge
pop
mov
jl
mov
xor
mov
rorl
sub
cmp
push
out
loopne
inc
push
pop
adc
adc
dec
cwtl
mov
addl
push
aas
xor
xchg
loope
xchg
xor
fwait
mov
mov
cmp
enter
mov
stc
mov
jb
jecxz
test
iret
lahf
and
mov
and
sbb
dec
jns
push
jp
std
pop
in
and
push
es
test
test
xchg
jb
cmp
add
mov
push
data16
xor
push
mov
repz
addr16
push
ud2
cld
xchg
rclb
mov
data16
push
int3
sub
push
jbe
cmp
mov
lods
push
adc
test
mov
bound
mov
push
shlb
loop
aam
cld
test
fwait
jmp
jmp
mov
fisttpll
divl
in
adc
xchg
push
es
and
lret
pop
sub
clc
iret
push
cmpl
daa
sbb
jle
lahf
push
shrb
dec
pushf
cmp
mov
or
icebp
xor
sub
xor
jg
ficompl
inc
mov
inc
mov
lahf
cmpsl
push
ss
fwait
ret
pop
fisttps
idivl
and
jno
adc
and
and
inc
mov
in
imul
cmp
sub
lea
xchg
pop
xchg
mov
leave
xchg
add
sbb
movsb
imul
xchg
repnz
push
mov
aaa
dec
pop
and
or
aas
lock
lea
cmpsl
mov
inc
sbb
inc
fldl
jmp
jbe
loop
or
push
lret
jo
xor
hlt
lds
sbb
add
cmpsl
cltd
loop
das
cmp
push
add
inc
imul
mov
cmp
fldl2e
ret
xor
arpl
push
in
inc
je
in
xchg
lds
iret
lods
pop
inc
mov
pop
cld
hlt
pop
dec
clc
cmp
push
pop
cwtl
std
bound
rclb
inc
xchg
sarl
pop
or
inc
xchg
or
add
scas
aas
push
xor
adc
insb
das
ss
push
movsb
lock
jmp
jle
adc
or
repnz
xor
mov
and
or
cmpl
pop
mov
push
dec
cmp
mov
add
dec
fwait
inc
testl
cmp
push
xor
push
dec
clc
xchg
xchg
and
cmp
pop
push
lret
loopne
mov
enter
xor
add
jp
adc
pop
pop
mov
data16
add
xor
xchg
insb
call
pop
adc
in
lcall
fnstcw
scas
fildl
push
out
fistpl
ds
or
cmpsb
test
cwtl
sbb
xchg
jl
daa
or
push
addb
insl
xor
xlat
enter
nop
push
jb
mov
mov
ljmp
add
mov
mov
cwtl
fiadds
movsb
repz
outsb
sbb
push
mov
add
sti
outsb
jo,pn
dec
lods
mov
test
inc
movl
stos
js
sarl
push
xor
sbb
and
outsl
sub
je
push
inc
push
lock
jp
xchg
sbb
jmp
mov
jo
cltd
outsb
push
aam
mov
rol
or
icebp
mov
or
push
jl
rclb
jg
insl
xchg
or
mov
mov
daa
divb
cmp
jb
or
or
jg
inc
loop
fdivrp
lret
or
mov
dec
shl
dec
pop
mov
lods
fcmovnb
out
add
mov
scas
outsl
jg
movd
adc
push
jp
mov
sub
rclb
dec
sti
adc
mov
pop
mov
lret
sub
sub
ret
loope
add
aas
pop
icebp
ja
add
dec
aaa
sbb
aad
or
and
fistpll
sbb
mov
cmp
adc
mov
jo
push
mov
jle
adc
pop
adc
sub
mov
pop
fsts
jnp
lods
or
xchg
inc
sarb
xor
jp
insb
xchg
lahf
stos
pcmpgtd
xchg
lret
pop
add
outsl
push
mov
or
adc
push
push
xchg
add
loope
or
scas
imul
mov
xor
mov
pop
add
lcall
iret
sub
fistps
xchg
sub
push
movsl
sahf
cli
add
aad
sub
and
mov
popa
jmp
dec
pop
icebp
xor
dec
aas
mov
outsl
xlat
test
add
dec
push
jmp
and
cmp
and
cmp
inc
neg
or
dec
cmp
arpl
push
or
sbb
fcmove
push
push
xchg
xor
sbb
loope
rcrb
outsl
fwait
adc
sub
rcr
push
ficoms
adcb
lar
xor
sar
dec
fsubl
cmc
push
inc
js
sbb
inc
push
pop
adc
jbe
cli
adc
test
es
push
lea
push
jmp
jecxz
cli
or
addb
ret
jno
xchg
daa
and
mov
enter
addr16
mov
pushf
out
lods
je
pop
inc
xor
iret
dec
nop
je
lcall
roll
add
cmp
popa
cli
adc
jg
add
std
inc
or
lcall
sbb
out
mov
je
mov
or
fs
jne
rolb
mov
mov
repnz
pop
cmc
pop
popa
jbe
test
push
mov
mov
and
jns
pop
push
fnsave
xchg
dec
mov
fcmove
out
add
test
push
push
fwait
pop
decb
or
pop
mov
sahf
push
mov
xor
data16
mov
repnz
push
sbb
sti
inc
dec
jg
and
adc
dec
leave
inc
shrb
fdivrl
jmp
jmp
mov
or
mov
push
add
cmp
push
outsb
xchg
stos
pop
or
cmp
mov
idiv
incl
xchg
adc
int
xchg
sbb
mov
aaa
fists
stc
bound
and
push
outsb
test
pop
cmp
push
jl
inc
xor
pop
or
cmpsl
movsl
test
xorb
dec
sbb
outsl
cmp
sti
inc
sub
sbb
repnz
mov
xchg
inc
insl
adc
dec
rol
jo
xlat
or
mov
mov
add
adcb
dec
cmp
push
ds
fmull
addl
icebp
or
dec
xor
cmpsl
adc
cmp
mov
loopne
pushf
mov
test
cmp
sub
xor
mov
or
mov
test
imul
xabort
xorl
sbb
insl
hlt
jne
adc
cmp
mov
cmp
fdivrs
push
or
fcompl
push
xchg
and
or
sti
jne
iret
in
jl
inc
daa
adc
cmp
leave
mov
inc
cmpsl
add
push
negl
mov
dec
push
pop
xchg
sbb
inc
pop
or
stos
cmp
movsb
lods
mov
pop
mov
test
ror
pop
mov
sbb
dec
out
push
js
ja
and
ja
bound
enter
add
adcl
testl
call
mov
loope
and
or
orl
jle
pushf
mov
sbb
mov
mov
lods
cltd
and
sarb
sbb
sbb
icebp
cmc
sbb
in
xchg
nop
rorb
add
xchg
rol
cmp
mov
shlb
ret
lcall
scas
repnz
into
sahf
cltd
test
push
in
inc
mov
movsw
fwait
in
popa
arpl
arpl
dec
pop
imul
scas
xor
cltd
lods
pop
xor
or
xlat
xchg
ficoml
ret
cltd
inc
paddq
sbbl
cmpsb
cmp
imul
ljmp
add
mov
rcll
push
je
fcmovne
sbb
push
lret
jae
je
adc
daa
bswap
jle
shrl
movsl
aam
xor
repnz
pop
icebp
stos
xchg
push
sbb
xchg
xchg
sbb
jg
pop
mov
movl
and
orb
mov
jnp
jl
popf
or
xchg
mov
movsl
mov
pop
lock
cs
jno
inc
jle
push
imul
mov
data16
push
sub
stos
dec
mov
lods
ds
adc
adc
ss
xor
mov
aaa
jp
ja
and
and
jb
popa
dec
aam
dec
sbb
pop
push
dec
cmpsl
pop
cmc
nop
inc
or
pop
xor
xchg
jg
sbb
push
and
jnp
or
lods
sti
xchg
jp
or
daa
and
mov
add
xor
jns
xor
aaa
inc
cmp
aad
jmp
inc
adc
leave
pop
loopne
popa
sub
filds
mov
arpl
cs
sti
sub
rcl
ret
in
cmp
adc
lret
shlb
dec
xor
mov
xor
aaa
pop
and
rolb
mov
adc
dec
data16
dec
sub
add
xchg
rcrb
adc
add
inc
jl
sub
cs
roll
icebp
mov
lock
and
inc
pop
loope
mov
imul
in
pop
adc
jmp
daa
cmpsl
pop
lahf
loope
mov
inc
xlat
lods
push
or
insb
mov
fsubs
mov
pop
jns
stc
sub
push
adc
ret
andl
sahf
adc
add
repz
adc
testl
add
mov
insb
dec
int3
fisttpl
call
scas
xor
test
sub
xchg
cmpsb
cmpsl
call
mov
jb
loope
add
dec
mov
lds
movsl
sbb
or
ficompl
repnz
imul
xchg
mov
jo
cmp
jo
or
loope
movsb
jmp
mov
mov
mov
stos
mov
dec
pop
xor
dec
imul
hlt
lea
add
mov
add
movsl
cld
xlat
jecxz
pop
adc
cli
jae
scas
sbb
rorl
cmp
mov
jnp
sbb
inc
xorl
aaa
je
dec
js
sub
mov
mul
cmp
jno
scas
js
add
fcomip
or
loopne
and
dec
imul
mov
loop
loope
ljmp
rclb
add
inc
jns
fsubrl
aaa
pop
test
and
cmp
mov
popf
mov
popa
cmp
insl
adc
xor
outsl
ja
add
insb
jmp
mov
pop
cmp
push
mov
pop
dec
mov
das
addb
add
rcl
xchg
sbbb
and
loopne
xor
sbb
aam
inc
mov
mov
outsb
sbb
leave
dec
adc
push
loop
jecxz
sub
push
push
xchg
mov
pop
add
xor
pop
push
loop
mov
inc
sub
cs
dec
dec
ret
fildll
push
jno
dec
push
push
xchg
sarl
das
jo
cmp
popa
jecxz
adcl
pop
icebp
push
arpl
adc
es
nop
pop
jns
out
pop
sub
mov
aaa
mov
scas
aam
test
dec
test
sbb
rcrl
imul
mov
push
adc
and
cmc
pushf
outsl
jbe
sbb
sub
dec
sbbl
xor
inc
shll
into
or
sbb
mov
jle
mov
cmp
cld
xchg
insl
in
imul
cwtl
add
inc
mov
ret
mov
jl
push
ret
inc
push
aam
add
mov
mov
xchg
fwait
ljmp
cmp
push
cmpsb
jle
push
and
sbb
into
push
lea
jle
xchg
inc
add
sub
lods
lret
ret
pusha
or
adc
leave
mov
lret
push
push
test
scas
xchg
inc
popa
jle
jnp
pop
inc
jo
pop
arpl
push
jecxz
jbe
mov
adc
xor
mov
shll
sbb
ret
jno
and
dec
jge
push
jge
outsl
loopne
add
adc
pop
sar
lret
jge
je
mov
outsb
cmc
pop
add
cs
and
lea
rcll
fs
push
ret
and
xor
sbb
xlat
push
ret
test
mov
dec
mov
jl
les
cli
pusha
add
or
in
loop
cltd
addl
fdivrl
xlat
cmpsl
jp
aaa
out
mov
pop
push
fwait
mov
daa
lods
jno
cwtl
std
add
cmp
sub
repnz
adc
fstl
or
or
inc
jnp
sbb
stos
xchg
and
sbb
xchg
lea
jnp
inc
jns
dec
test
popa
ljmp
loope
out
les
cmp
sbbb
xor
inc
ret
mov
mov
pop
push
fwait
jle
mov
mov
sub
stos
inc
out
push
mov
aam
out
arpl
mov
adc
push
lea
aaa
push
insb
fidivl
jecxz
mov
mov
adc
add
subl
mov
scas
push
fxch
out
mov
xchg
str
xor
add
pop
cld
xchg
push
mov
roll
lcall
mov
adc
setge
fs
dec
inc
fwait
mov
inc
push
dec
and
clc
in
pop
push
lods
jmp
std
pop
test
jle
mov
int
popa
or
js
push
dec
test
ja
pop
pushf
out
inc
arpl
int3
pop
pop
movl
dec
sbb
sbb
adc
xchg
pop
imul
test
mov
dec
ret
xchg
pop
sbb
aad
cmp
cmp
jecxz
mov
daa
jg
out
push
rolb
subl
shrl
push
in
insb
dec
cmpsb
mov
test
sbbb
mov
xchg
daa
cmp
int
shrb
cmp
push
sub
mov
jno
fiaddl
mov
adc
xchg
mov
or
aas
int
push
stc
inc
cmpsl
jo
mov
add
inc
dec
loop
xor
fucomip
nop
fstps
xorb
xchg
dec
pop
xor
sti
inc
in
push
mov
or
incb
test
or
xchg
mov
inc
or
cmc
out
inc
pushl
jo
jne
jg
push
inc
dec
lea
mov
ret
jnp
fildll
notl
jbe
jg
and
sahf
loopne
inc
out
add
and
gs
popf
test
mov
or
mov
pop
sub
pop
fidivs
aaa
mov
push
cwtl
pop
xor
mov
push
pusha
psubb
movsw
roll
outsb
mov
nop
sbb
and
pop
popa
push
adc
sub
insb
sub
mov
xor
xchg
inc
mov
icebp
lret
lret
push
call
testl
clc
inc
jecxz
inc
stos
add
xor
bound
dec
sti
or
mov
hlt
xor
icebp
imul
xor
sbb
dec
sbb
pop
mov
loopne
xchg
rol
nop
pushf
inc
aaa
pop
pop
pop
adcb
add
adc
ret
sbb
mov
cmp
je
cmp
out
jle
les
ficomps
lret
push
loop
add
xchg
js
jbe
xlat
in
mov
adc
fwait
fs
lcall
sbb
sbb
sub
fisubrs
stos
scas
lock
jns
push
jo
dec
adc
inc
sbb
loopne
xor
imul
pop
mov
inc
push
popa
stc
ret
repnz
jp
pop
lgs
sbb
cmp
dec
in
loopne
mov
in
xor
movsl
xchg
pop
mov
pop
arpl
push
lahf
bound
xor
jle
pop
cld
insl
ret
out
inc
dec
popf
inc
outsb
cld
adc
lods
mov
std
notl
sbb
cmc
and
aaa
jno
aaa
std
jl
mov
push
cmp
in
or
cmpsb
adc
mov
jns
imul
mov
push
adc
jb
cmc
add
pop
cld
cmp
cld
gs
adc
nop
inc
push
cmpl
dec
cli
and
jge
sbb
lahf
sub
adc
adc
call
xchg
test
or
mov
aam
aaa
sarb
cli
sbb
shl
mov
jl
ret
sub
push
mov
aad
cmpsl
loop
aas
xchg
add
pcmpgtd
enter
stos
rcr
ljmp
or
xlat
notb
loop
fistl
inc
fnstcw
scas
cld
xor
clc
jle
adc
ja
pop
mov
sub
and
mov
decb
cmp
pop
mov
dec
dec
xor
roll
shr
push
ss
in
cs
lods
roll
xlat
sbb
and
ss
das
insb
fistpll
stos
int
lods
xchg
adc
push
bound
xchg
fistl
mov
or
dec
dec
mov
mov
popa
or
jmp
scas
loop
icebp
ja
psubq
dec
daa
sub
and
add
jle
stos
int
clc
sub
cmp
je
rcr
cld
mov
add
and
mov
push
dec
je
loope
xor
mov
pop
mov
cli
sbb
imul
mov
jbe
push
jl
lret
adc
sarl
push
inc
sbb
xor
xchg
fnsave
pusha
ret
arpl
xchg
xlat
stc
stos
in
stc
ret
mov
fisttpl
out
sbb
dec
sti
ljmp
clc
inc
in
inc
imul
xchg
sti
pop
mov
cmp
ret
pop
test
sbb
adc
mov
fildl
loop
jno
ret
call
push
mov
jp
out
ret
aaa
stc
test
pop
add
inc
or
pop
pop
pop
dec
lahf
xchg
loopne
jg
push
inc
jno
pop
jmp
push
cmpsl
pop
jp
sbb
lds
cmp
push
popa
mov
push
jecxz
pop
clc
inc
xchg
hlt
add
fwait
shll
or
xchg
icebp
bound
push
jg
call
in
xor
int
pop
xchg
push
iret
outsb
lahf
aas
inc
sarb
jae
es
mov
fs
sub
loop
adc
imul
jl
mov
push
mov
xor
mov
adc
dec
mov
lret
loop
mov
dec
adc
inc
mov
imul
ja
scas
adcb
nop
enter
adc
xchg
fistps
xlat
xchg
adc
sub
test
inc
cmc
imul
js
push
pop
outsl
mov
or
dec
rorb
sbb
daa
rclb
loopne
clc
inc
mov
mov
mov
xchg
or
mov
fwait
mov
xor
jecxz
gs
loopne
inc
or
inc
stos
adc
cmc
rolb
call
xchg
xor
mov
cmp
mov
jp
stos
pop
and
push
add
push
scas
adc
mov
sub
test
les
or
jmp
test
sbb
jg
inc
xchg
sub
out
mov
adc
or
popf
ret
divl
cmc
mov
cwtl
pop
adc
pop
pop
adc
imul
add
scas
fdiv
pop
pop
cmp
mov
insb
lcall
jmp
inc
ss
clc
push
daa
les
shrb
sub
stos
or
sarb
jge
clc
sub
add
dec
mov
cmp
sub
xor
sub
out
push
hlt
mov
jb
xchg
xor
xchg
adc
dec
dec
and
mov
inc
adc
mov
into
sarb
jle
lret
pop
jnp
cmpsl
lds
add
nop
outsb
cmp
pusha
outsb
enter
add
dec
outsl
or
push
push
popf
call
and
fsts
dec
jmp
dec
lcall
adcb
and
mov
lret
jnp
test
jp
inc
lcall
aad
into
jecxz
popf
lret
cmpsb
adc
incb
addb
push
loopne
push
test
rolb
mov
call
stos
mov
cmp
loop
push
andb
dec
and
sub
fmul
dec
lcall
ljmp
mov
sub
bound
adc
movsl
cmp
test
inc
clc
adc
add
js
gs
dec
adc
dec
pop
mov
in
loope
js
sar
and
pushf
dec
fwait
dec
in
jle
shlb
jbe
test
mov
jne
mov
xor
lea
jb
add
jg
aad
xor
int3
inc
testb
or
icebp
or
inc
incb
jg
popf
sbb
fwait
call
pop
mov
loopne
les
push
push
popf
sub
and
xchg
xor
sbb
cmpsl
js
cmp
cmpl
xchg
add
nop
clc
xchg
fwait
jno
cmp
and
add
inc
mov
push
push
rcrl
sub
aaa
adc
das
clc
movzwl
jle
test
sbb
inc
xchg
mov
push
xor
sti
add
mov
adc
test
test
sbb
frstor
push
orl
jle
push
adc
push
notl
pushf
sub
fcompl
adc
fnstsw
sub
incl
sahf
and
pop
push
lea
shl
clc
repnz
ror
push
cmp
inc
inc
rorb
jg
xchg
ljmp
hlt
popf
jne
rcr
mov
adc
mov
dec
jmp
call
pop
cld
pop
push
pop
iret
cmc
fnsave
add
mov
add
popf
fwait
sub
cld
fistps
sub
aas
lcall
xor
fldl
mov
pop
mov
push
jne
mov
mov
repz
add
pop
cmp
lock
in
inc
in
and
test
daa
add
pusha
les
decl
adc
nop
lcall
xchg
add
shll
cmpsb
lcall
inc
inc
jns
fmulp
clc
in
movsb
mov
add
push
jae
adc
adc
inc
and
std
subl
or
mov
mov
cld
inc
imull
mov
into
dec
lret
test
int3
test
sbbl
pushl
mov
daa
fcoms
cld
rolb
cs
pop
lcall
in
setge
imul
or
add
lods
ret
lret
cwtl
xorl
sbb
push
dec
push
cvtpi2ps
addb
jp
jno
aaa
jmp
es
pushf
shl
pusha
mov
shrb
ret
push
repnz
dec
mov
std
and
adc
int
jnp
adc
loop
int
or
stos
push
iret
js
clc
jnp
mov
roll
dec
fildll
pop
or
scas
popf
xchg
imul
mov
pusha
inc
and
cmp
add
xlat
push
push
adc
lock
aas
ret
xor
or
jo
in
lock
cmp
cmpsl
lret
int
es
mov
cmp
xor
inc
mov
jbe
fisttps
call
jbe
pop
xor
shlb
add
movsl
shl
xor
clc
cmc
push
rcr
les
mov
sbb
test
xor
cmpsl
jbe
add
test
scas
out
jb
inc
jmp
insl
xor
test
jno
mov
daa
test
cmp
ss
js
or
or
enter
xchg
push
inc
push
jecxz
add
mov
jle
lret
adc
push
and
jge
add
inc
push
rclb
mov
sub
mov
sahf
or
pop
decb
jae
pop
or
adc
pop
mov
jbe
in
scas
decb
jg
add
filds
push
sub
fistl
sub
fsubrp
sbb
mov
jnp
in
sbb
sbb
ret
test
stc
stc
push
sbb
js
cmp
xlat
iret
cmp
cli
pushf
mov
cmpsb
negl
mov
add
in
jl
hlt
popf
jmp
ds
mov
mov
rclb
loop
out
xor
aaa
add
lds
mov
sti
mov
add
adc
jg
daa
pop
pusha
mov
lock
add
bound
fwait
out
into
test
push
jg
adc
cld
pop
push
shll
mov
sbb
fdivr
cmp
lock
and
imul
push
dec
add
or
jbe
inc
lods
addl
xor
test
pop
mov
dec
sub
pop
sbb
mov
lea
push
cmp
inc
js
push
add
cmp
mov
and
xchg
inc
inc
call
cmpsb
pushf
cli
mov
xchg
jbe
pop
popa
dec
mov
xchg
xor
xor
push
daa
loope
negb
xor
mov
fisubs
dec
jecxz
repnz
shrl
inc
sub
jg
dec
testb
inc
push
dec
jp
arpl
lods
stc
jo
je
jmp
stos
subl
insl
test
and
sub
push
mov
jmp
adc
and
push
inc
sbb
sti
test
bound
add
cli
stos
pop
adc
in
or
enter
add
scas
jg
mov
or
pushf
dec
mov
and
addr16
sub
daa
cld
scas
in
mov
in
movsb
sub
sub
jbe
pop
push
cli
call
pushf
aaa
sub
repz
inc
adc
or
loop
xchg
xor
jmp
mov
dec
divb
xchg
mov
or
adc
mov
ficoml
pop
fildl
inc
test
nop
jge
jl
dec
shlb
sbb
mov
inc
sub
stc
icebp
jmp
pop
cmpsl
xchg
inc
jp
incl
ret
mov
lahf
std
enter
stos
pop
and
cs
ret
rorb
out
or
outsb
sbb
cld
inc
shrb
cmp
adc
cmp
loope
push
arpl
mov
popf
dec
leave
or
bound
jecxz
jo
pop
adc
lock
sub
nop
stos
mov
dec
cmp
insb
cmp
mov
mov
inc
xor
outsb
pop
sbbl
jmp
pop
add
or
stc
sub
int3
arpl
add
jmp
jne
divl
fld
aad
mov
jns
inc
jae
out
rcrl
pop
adc
add
mov
mov
scas
push
xchg
mov
orl
pop
pushf
in
in
sbb
or
xor
pop
jb
adc
mov
aaa
sub
bound
lret
rorl
inc
mov
xor
pop
in
popf
loopne
cwtl
inc
xchg
add
and
pop
mov
cmpsb
mov
jno
cmp
cli
mov
outsb
xorl
cwtl
push
inc
lods
xchg
insb
in
es
rorl
frstor
fldcw
stc
repz
xchg
rcrb
out
outsb
mov
push
push
mov
inc
sbb
cmp
in
movsl
xchg
xchg
mov
lret
clc
andl
add
jmp
adc
inc
push
adc
sub
push
out
cmpsb
aas
pop
or
arpl
inc
in
imul
mov
rcl
pop
pop
daa
fsubs
push
enter
loope
arpl
adc
adc
mov
cmpsl
push
adc
xor
bound
stos
mov
lods
divl
push
mov
jnp
dec
dec
mov
cwtl
xchg
in
lcall
mov
inc
sbb
cs
subl
push
push
adc
stos
cmpsl
shrl
add
xchg
shll
xor
sbb
xchg
push
loop
sbb
and
test
rcrl
rcrb
sub
fbld
out
inc
xchg
mov
ljmp
pop
mov
push
and
jmp
lods
and
insl
xor
add
bswap
je
pop
inc
mov
and
subl
rclb
sti
push
inc
jnp
cmp
and
mov
cmc
jnp
jle
iret
arpl
mov
outsl
into
in
ds
mov
clc
push
imul
mov
sub
std
mov
popf
and
lret
scas
imul
or
sbb
mov
bound
dec
pop
push
and
pushf
cmc
lods
inc
cmp
dec
ljmp
pop
pop
pop
imul
lret
les
icebp
dec
pop
push
cmp
pop
mov
pop
mov
fwait
test
movsl
add
pop
inc
fistpll
mov
and
cmpsb
adc
xor
sub
cmp
mov
sbb
and
in
xor
push
sbb
push
sbb
and
and
and
dec
sbb
mov
adc
scas
sbb
xchg
mov
push
movsb
xchg
pop
nop
inc
mov
mov
addb
dec
inc
adc
lea
fwait
pop
outsl
cmp
jne
jg
out
nop
cmp
sahf
loopne
mov
or
and
insl
or
and
mov
loop
adc
mov
les
add
test
cmp
jnp
xlat
adc
out
outsb
adcb
mov
ljmp
or
pop
jne
xchg
popf
inc
pop
cmpsb
popf
js
int3
icebp
mov
ret
add
jno
dec
fildl
jae
dec
lret
xor
aam
scas
lods
je
ljmp
stos
or
or
adc
jge
mov
and
scas
inc
add
hlt
aam
les
xlat
and
mov
xchg
pop
pop
lcall
pop
cmp
inc
ss
add
cmc
cmp
mov
xchg
popa
and
xchg
in
mov
dec
pop
arpl
add
dec
out
add
mov
ret
sbb
imul
dec
jne
gs
or
sbb
add
lcall
pop
mov
loop
or
add
mov
jae
xchg
test
mov
push
push
sbb
jnp
push
or
mov
out
add
or
xchg
mov
or
ret
dec
sub
xor
xchg
ss
xor
imul
ja
imul
jmp
shlb
pop
or
imul
stos
adcl
in
sub
and
adc
sub
xorb
xchg
pop
pop
jle
sti
cmp
dec
mov
jmp
out
andb
push
loopne
popa
arpl
pop
cmpsl
fwait
adc
cli
test
test
aad
rcr
mov
and
xchg
fwait
enter
mov
pop
mov
insb
test
xor
shr
cld
scas
mov
negl
dec
sbb
popf
les
sbb
mov
call
jns
sti
pusha
fwait
pop
mov
add
movsl
cs
sub
xor
idivb
mov
xor
sti
pusha
outsb
stos
jmp
ret
jmp
stos
mov
and
push
pop
repz
mov
push
out
xor
das
dec
call
push
xor
pop
fmuls
or
in
lea
sahf
mov
add
push
popa
daa
in
or
aaa
std
add
hlt
vpunpcklbw
dec
sti
gs
out
push
cs
cmp
cli
or
in
cmp
ret
pop
popa
adc
and
js
mov
mov
cs
lret
jp
sbb
mov
jne
lret
andl
or
mov
cmp
test
ljmp
sub
pop
add
loop
leave
add
addr16
push
add
and
pop
pop
icebp
ja
fstl
push
and
and
cmp
outsb
mov
push
or
addps
xchg
faddl
mov
xor
sub
add
fildl
sbb
stc
mov
xor
repz
adc
xchg
cld
sub
and
cwtl
pop
dec
pop
xchg
int3
std
mov
gs
dec
cmp
cmp
push
movsb
cwtl
les
loope
or
adc
das
nop
mov
mov
into
xorl
dec
orl
roll
push
and
adc
jnp
adc
sbb
or
scas
mov
xor
cmp
adc
push
adc
shl
inc
movsb
mov
jmp
adc
mov
inc
or
movsb
jecxz
cmpsl
int
cld
pop
mov
out
push
xchg
stos
cmp
dec
mov
sbb
adc
push
xor
lock
lea
xchg
stos
mov
repz
fwait
push
leavew
push
jns
push
mov
pop
push
je
inc
sub
jo
inc
test
outsb
lods
xor
cmp
cmp
jge
lods
inc
push
scas
cmp
fistpll
sbb
les
pop
adc
sub
mov
add
rcll
cmp
mov
lahf
pop
mov
push
cs
lahf
xchg
rorl
movsb
or
mov
adc
mov
ja
push
sbb
stc
pop
iret
iret
or
fs
mov
jae
mov
mov
jmp
popf
xor
mov
rcr
loop
and
test
mov
xchg
les
mov
inc
inc
jnp
push
cmp
pop
lock
push
xchg
or
int3
and
inc
jg
stos
pop
sbb
push
sbb
in
mov
add
in
jns
mov
popa
addr16
loop
int
sub
lock
inc
adc
mov
lret
shr
xor
or
xchg
adc
dec
out
and
dec
mov
jbe
test
pusha
arpl
icebp
xorl
sub
xor
push
push
ja
jmp
jp
stos
test
call
mov
mov
xor
jecxz
movsl
popf
jns
push
push
mov
test
or
lds
jecxz
mov
test
mov
dec
test
mov
pxor
sub
enter
push
dec
xchg
hlt
lock
pop
movsb
shlb
pop
jne
pusha
imul
inc
dec
cmp
scas
ja
sbb
sahf
loope
es
mov
stc
cltd
inc
pop
fwait
js
rorb
dec
dec
and
test
fimull
mov
pop
mov
dec
jns
std
in
sarl
cs
es
push
xor
sub
test
mov
inc
ljmp
or
imul
or
inc
adc
and
xchg
mov
push
loop
jl
push
sub
js
jle
std
out
xor
add
xchg
mov
imul
inc
adc
mov
mov
movsbl
lahf
mov
sub
xchg
fistpl
sub
sti
stos
cmpsl
jge
and
decb
adc
adc
mull
loope
out
loop
dec
das
sbb
push
jle
dec
dec
cmp
mov
inc
in
or
nop
cmp
dec
jne
outsb
xorps
imul
aad
ss
adc
inc
mov
pop
mov
test
out
mov
xor
or
movsb
inc
icebp
fucompp
nop
aas
mov
aaa
inc
sub
add
je
or
add
dec
and
jo
xchg
out
mull
lods
mov
hlt
push
inc
cwtl
mov
scas
mov
dec
mov
icebp
push
jns
cltd
jmp
ficoms
dec
test
lcall
mov
adc
mov
lcall
lds
call
or
rcrb
push
int
ljmp
cld
or
sbb
inc
rol
mov
jae
adc
lds
mov
lret
out
mov
js
lods
es
adc
dec
sub
jb
std
dec
xor
movb
pop
dec
pop
ret
xlat
pop
lea
mov
cld
jmp
xchg
pop
cmp
rolb
bound
or
jbe
aaa
movsb
fld
inc
clc
dec
mov
jbe
test
out
mov
lock
cmp
arpl
add
dec
test
pop
scas
cmp
sbb
stos
fimuls
cld
cwtl
dec
sbb
sbb
lock
bound
lea
fs
push
push
push
js
ss
mov
clc
aaa
lret
movsl
fdivp
cmp
xchg
ret
dec
fimuls
std
pop
and
pop
fwait
xor
or
pop
sbb
js
push
cs
in
pusha
mov
xchg
adc
daa
xorb
jbe
cmp
cltd
sub
mov
popa
testl
or
loop
push
pop
lcall
xlat
mov
push
and
cwtl
push
sub
pop
mov
add
cmpsl
lret
sub
arpl
es
xchg
and
jge
aad
out
and
or
sub
fildl
cli
addb
mov
scas
xorl
or
add
and
jno
ret
jmp
adc
mov
dec
mov
lods
or
stc
sarl
les
aas
hlt
addl
dec
pusha
daa
cmpb
jl
incb
cwtl
jbe
jmp
inc
pop
and
jl
inc
insl
adc
repz
les
rcr
xor
jnp
xchg
cwtl
adc
dec
stos
push
shrb
xchg
jae
push
push
cmpb
and
add
or
std
mov
jl
jecxz
int
sub
inc
pusha
jecxz
adc
fnstcw
sbb
icebp
mov
and
inc
cmpsb
je
rorl
sbb
push
pop
or
loopne
mov
push
shll
movsb
push
or
aaa
movsl
xchg
shl
or
lret
lret
stos
imul
mov
lds
jmp
and
imul
loope
pop
pop
imul
mov
insb
sub
mov
aad
out
mov
cmc
ljmp
dec
in
push
adc
push
sub
int3
dec
gs
insl
push
sbb
imul
or
scas
mov
das
cmp
in
out
bound
push
inc
pop
adc
jmp
loopne
rclb
leave
adc
dec
sbb
or
mov
fnstenv
push
mov
sbb
push
hlt
sbb
add
fdivrs
sbb
mov
push
mov
insb
add
xchg
inc
imul
inc
sbb
jmp
insl
fs
add
jb
and
xor
js
loop
cmc
lret
add
repz
add
dec
in
insb
insb
clc
sbb
ret
cmpsl
icebp
or
pop
inc
pusha
add
inc
xchg
ss
shrl
sub
bound
into
sub
dec
in
pop
and
or
cwtl
mov
shll
mov
mov
inc
out
pushf
lods
xor
das
mov
mov
cli
jno
mov
push
sub
cltd
or
sbb
fstpl
push
insb
push
aaa
jmp
bound
xchg
mov
xchg
mov
jo
jnp
std
push
lret
in
mov
stos
jno
cmc
pop
push
sub
mov
pop
or
jecxz
pop
jp
cmp
pop
fldenv
jg
adc
sbb
dec
cmpl
sbb
addr16
sub
cmc
and
mov
jge
je
es
test
cmc
sbb
adc
adc
pop
lock
push
or
push
add
mov
sub
or
adcl
shlb
lods
ret
fdivl
push
imul
outsb
mov
jmp
lea
xor
punpckldq
and
stos
aad
jo
cs
daa
out
mov
incl
clc
add
jno
inc
inc
fmul
test
and
xor
add
imul
adc
int
outsl
shrb
mov
ss
adc
sub
or
fdivr
mov
push
adc
inc
test
lods
das
mov
int
rep
or
mov
mov
xchg
push
int
push
ss
add
xchg
cmp
jb
cld
enter
fdivp
mov
lods
sub
mov
mov
cs
movl
stos
sbb
cltd
leave
rcl
aas
jbe
test
xchg
lea
or
mov
cmpsl
test
aas
shlb
xor
sub
out
xor
cmp
or
loope
notb
pusha
sbb
push
les
ret
jno
jp
icebp
std
sbb
repnz
sub
mov
jbe
popa
jl
out
push
bound
inc
ret
mov
push
jl
inc
sub
sub
lea
pop
fwait
sbb
or
mov
or
stos
jno
aaa
inc
loopne
je
push
pop
push
mov
and
les
add
leave
push
sub
ds
push
fstps
mov
mov
inc
loop,pn
nop
fwait
dec
pop
and
rcrl
addl
enter
sbb
mov
pop
push
test
les
push
or
stos
test
cld
dec
pop
add
xchg
xor
je
rcrl
sub
push
adc
mov
dec
dec
or
mov
scas
shrb
pop
jp
mov
adc
jns
test
jecxz
dec
pop
lock
xchg
arpl
lods
aad
jg
bound
std
mov
iret
je
mov
repz
imul
add
cmpsl
jb
dec
aas
in
xchg
mov
lahf
jb
add
mov
sbb
and
lock
inc
add
mov
cmc
js
cmp
shlb
pop
inc
je
cli
std
ret
mov
dec
add
mov
pop
idivb
jge
imul
xlat
sub
lret
adc
cld
add
push
adc
xorb
cmp
inc
or
rolb
mov
sbb
cmp
mov
test
decb
add
cmp
inc
out
popf
iret
mov
iret
ljmpw
or
pop
cmp
mov
jp
pushf
and
test
add
test
into
add
jae
dec
mov
stos
jbe
jmp
ret
push
test
xor
rcl
test
push
lds
out
mov
sub
push
decb
dec
xchg
iret
popf
cmp
adc
sarb
ret
inc
outsb
lods
jne
pop
lock
xchg
sti
hlt
ds
scas
fs
testb
sti
scas
and
aas
test
ljmp
mov
leave
or
mov
out
push
pop
mov
inc
in
bound
cli
pop
push
sahf
mov
or
scas
inc
bound
stc
push
outsl
mov
cmp
aaa
lcall
pop
dec
mov
cmp
scas
mov
daa
cltd
mov
pop
inc
add
mov
cmc
inc
test
movsl
mov
add
jg
aad
icebp
mov
mov
mov
jb
test
push
in
pop
mov
push
sbb
or
add
mov
push
push
lcall
clc
sbb
sub
and
pop
xchg
icebp
inc
mov
xchg
add
aaa
push
stc
mov
loope
inc
push
je
out
lcall
push
mov
mov
xchg
pop
out
jl
daa
cmpsl
push
add
call
pushf
sbb
jmp
mov
cmpb
push
hlt
cld
sub
leave
jle
pop
push
cmpsb
sbb
imul
in
es
or
mov
ret
out
pop
dec
fistl
adc
mov
subb
xor
jno
movsl
inc
outsl
leave
push
insb
push
jge
inc
mov
stc
in
xchg
and
dec
jl
int3
push
or
ss
jge
dec
mov
pushf
sbb
pop
out
loopne
mov
subl
arpl
jmp
inc
dec
xchg
ja
lock
daa
cmp
cmpb
icebp
loopne
mov
faddl
cmp
xorl
pop
fsts
pop
mov
test
push
addb
gs
push
andl
insb
data16
pushf
sarb
sar
lea
push
pop
pop
jo
pop
loopne
ljmp
pusha
sbb
icebp
push
inc
ds
sbb
cs
pushl
addr16
ret
pop
in
push
rcrb
mov
or
imulb
aam
add
jne
push
mov
call
lret
push
push
push
out
jg
mov
lret
xchg
insl
mov
sbb
les
loope
add
pop
outsl
jo
pop
mov
scas
loope
xchg
pop
cmpsb
sub
sbb
gs
cs
cmp
cmp
std
test
movsl
call
sub
lods
push
jg
jmp
and
xchg
push
jmp
mov
lods
add
pop
cmp
jmp
stos
lds
es
les
pop
cli
test
rorl
popa
mov
xchg
push
divl
dec
imul
dec
xor
data16
sub
mov
mov
add
clc
jo
aam
iret
cmpsb
jecxz
push
loope
fcoms
loopne
outsb
and
pop
pop
into
outsb
dec
and
mov
pop
loope
loop
or
lock
and
xor
scas
push
mov
push
push
es
xchg
cmp
or
and
inc
mov
push
ret
sbb
sub
aaa
cs
test
cltd
je
lcall
or
mov
out
dec
subb
ss
cli
add
out
dec
mov
stc
loopne
push
test
adc
dec
jp
insl
fimuls
push
pop
dec
mov
scas
sahf
andb
push
pop
cmp
es
xor
inc
push
push
repz
lahf
push
cld
mov
aas
adc
push
call
and
scas
mov
hlt
andl
pop
sbbb
mov
push
stos
aad
mov
or
and
sub
iret
or
and
push
add
mov
add
mov
fwait
push
loope
notb
inc
sahf
push
iret
lea
adc
ja
cmp
cli
dec
or
call
divb
sti
ljmp
or
adc
pop
push
add
loope
cmp
inc
xor
les
shlb
pop
ja
outsl
dec
jl
sub
sbb
mov
daa
pop
cmp
stos
jle
faddl
rolb
mov
pop
jmp
bswap
ret
and
int
push
inc
xchg
movb
mov
cmc
inc
orb
loope
adc
and
hlt
or
cld
add
pop
push
cmp
and
xchg
test
je
out
dec
out
mov
andl
cli
push
jne
sbbl
call
xchg
hlt
in
or
mov
dec
test
mov
add
inc
inc
loopne
pop
inc
xorl
mov
lahf
jge
cmp
pop
mov
ss
fdivrl
push
inc
sbb
mov
out
movsb
pop
mov
fwait
adc
xor
push
or
or
js
dec
neg
jne
add
jle
sahf
outsl
adc
push
jge
lock
mov
rolb
fidivrl
outsl
push
ds
daa
sub
cli
mov
cmp
push
mov
in
and
sti
jae
gs
loopne
or
sub
inc
xchg
xchg
mov
push
inc
or
sahf
push
adc
push
incl
or
mov
add
cld
lock
sub
add
mov
cmp
shlb
loopne
andps
adc
sbb
in
es
mov
pop
aaa
mov
pop
aaa
push
ss
call
sbb
fs
or
and
cld
ljmp
sahf
pop
push
orl
push
fistl
icebp
add
das
or
popa
shl
jae
mov
mov
mov
cwtl
mov
add
outsl
xchg
cmp
in
mov
test
inc
jmp
fcoml
iret
jp
shlb
loope
rorb
ja
push
inc
add
mov
xchg
adc
mov
or
shrl
mov
mov
or
insl
fimull
addr16
test
stos
sbb
pop
sbb
ljmp
sbb
mov
addr16
dec
es
fidivrl
aad
adc
cmp
iret
xchg
out
mov
and
cmp
mov
jb
fcomps
add
mov
xchg
clc
mov
ja
sbb
lds
cmpsl
pop
pop
sbb
xlat
lahf
cmc
fisubs
setnp
repnz
mov
jo
daa
ss
add
cs
cs
mov
xchg
adc
dec
lea
cmpsb
mov
mov
add
loop
add
sahf
fmuls
clc
ss
ss
add
mov
mov
es
jno
imul
and
xor
xor
add
sub
or
mov
xorl
mov
push
pushf
call
enter
icebp
add
aam
int
pusha
loope
mov
add
and
loop
jno
sub
outsl
mov
loop
dec
shlb
in
sub
push
sbb
pop
jg
pop
push
hlt
mov
in
dec
pop
js
push
adc
ret
push
xor
cmpl
mov
ds
testl
jne
bound
inc
and
inc
into
std
sbb
mov
mov
stos
jg
adc
mov
add
or
fisttpll
or
mov
icebp
lret
add
aam
aad
scas
hlt
call
cmp
stos
jl
test
inc
lret
notl
arpl
sub
jg
fidivrl
sub
add
xor
mov
test
call
or
popa
std
mov
sbb
ret
cld
jecxz
shrl
jl
je
shlb
jg
xchg
call
xor
push
lea
hlt
jb
adc
adc
adc
scas
test
test
outsl
aaa
pop
insl
mov
cltd
adcl
aaa
pop
std
lods
adc
sub
in
leave
stos
cli
dec
data16
jge
call
mov
addr16
sbb
hlt
aam
xor
negb
jl
dec
or
test
inc
fdivrs
inc
jecxz
hlt
add
sbbb
xorb
or
mov
cmp
fucomi
xor
dec
sbb
and
fildl
dec
in
sarl
sbb
xchg
scas
out
or
lods
pop
ret
add
add
add
cmp
sbb
insl
loop
or
dec
push
hlt
and
or
imul
push
loope
out
push
ffree
xor
out
push
cmp
or
jge
test
inc
mov
adc
fwait
arpl
fdivrl
cld
pushf
mov
inc
mov
jp
push
xchg
push
inc
aas
loope
cmc
push
addr16
adcb
and
xor
or
popa
jg
aam
cmc
or
outsl
mov
pop
sbb
lret
mov
jecxz
mov
nop
sahf
add
pop
aas
loope
lock
and
inc
leave
loop
into
adc
xor
push
sbb
sub
jecxz
mov
sub
aas
pop
mov
inc
mov
cmpxchg
adc
and
out
cmp
push
jecxz
mov
and
xchg
jl
sahf
cs
jge
bound
add
push
sub
ds
xlat
cmp
jl
mov
adc
rclb
mov
fildll
rcrl
mov
call
sti
inc
mov
data16
xor
jae,pt
mov
call
jno
lds
inc
inc
mov
jo
jg
cmp
lods
test
cmp
mov
push
pop
insb
mov
push
mov
jno
push
sahf
push
xor
cmp
cld
dec
das
dec
mov
push
xchg
pop
jno
add
mov
jl
xchg
fidivl
sub
cli
mov
andb
repz
sti
sbb
adc
add
lds
fistl
repz
xor
hlt
dec
jg
push
andl
adc
cmpsb
andl
push
shr
adc
leave
iret
push
movups
enter
jns
loope
adc
or
inc
add
cltd
int3
mov
stos
xchg
and
and
mov
adc
lahf
cmp
test
ret
pusha
test
sub
sub
fwait
cmp
xchg
imul
jmp
cwtl
fadd
ret
dec
sarb
jb
sbb
loope
rolb
push
negb
jecxz
fs
fs
jne
aaa
lock
aaa
lods
dec
rclb
daa
or
pop
xor
pop
jmp
pusha
adc
add
jle
aaa
mov
pop
jb
pusha
call
mov
xor
jg
sub
dec
movsl
fisubs
or
pushaw
inc
sub
hlt
and
divb
ret
push
hlt
push
jg
adc
xor
cmp
add
fucom
mov
pop
icebp
es
sub
push
mov
lock
push
push
cmp
sahf
mov
bound
mov
xor
rcrl
ljmp
sbb
push
adc
inc
xor
jecxz
mov
ds
dec
clc
mov
in
insb
les
iret
adc
cs
rolb
mov
cmp
sbb
ds
cmpb
xor
or
cmp
sbb
pop
scas
pop
jecxz
or
in
ret
pop
mov
push
add
xor
dec
adc
insb
aas
mov
xchg
cmp
ljmp
push
lock
or
test
out
jl
push
xchg
rolb
mov
push
fadd
loopne
cmpb
mov
push
push
pop
jl
pop
ret
pop
push
cmovl
scas
fdivrp
xor
mov
mov
shl
push
xchg
mov
into
adc
je
arpl
push
push
fidivl
xor
push
sahf
add
xchg
add
add
clc
mov
pop
mov
mov
out
jg
push
daa
lss
hlt
cmp
adcl
daa
icebp
mov
ret
jmp
ficoml
ret
bound
mov
rorl
dec
push
cmpsb
mov
push
outsl
dec
jecxz
add
out
fbstp
lock
inc
inc
or
xchg
inc
pop
xchg
andl
push
add
pop
popf
movsb
or
pop
pop
cmc
lahf
push
sbb
push
mov
fidivl
jo
and
loopne
test
jo
cmpsb
push
sub
js
lahf
clc
bound
jae
cmpsl
push
scas
pushf
out
aaa
inc
idivl
cmp
ret
out
sbb
mov
sbb
xor
pop
push
movsb
cwtl
push
fwait
inc
or
js
mov
lock
fistpll
aaa
rorl
in
push
xchg
push
xchg
in
std
lods
push
ret
cltd
pop
loope
shll
jl
mov
aas
jno
cs
add
and
adc
push
mov
popa
add
inc
out
pop
inc
pop
cli
shlb
mov
cmp
std
sbb
les
push
xor
sbb
loop
and
decl
mov
enter
incl
popa
loopne
push
jnp
cs
cmp
clc
outsl
inc
fs
xor
js,pn
jecxz
ja
jne
cmp
pop
cmp
add
pop
pop
add
and
cmp
sarb
jecxz
add
add
jl
mov
dec
movsb
hlt
stos
in
mov
sub
lods
or
call
data16
outsl
ja
xor
or
xor
dec
aas
pop
outsl
ja
mov
call
cmp
pop
push
mov
nop
mov
mov
jle
jmp
push
adc
dec
pop
jle
daa
pop
xlat
mov
fildll
decl
test
inc
lret
adcl
pop
mov
sbb
xchg
jmp
inc
push
jle
add
dec
inc
into
imul
repnz
daa
mov
fildll
jbe
fldcw
stc
xor
out
orl
add
sub
shrl
fldenv
and
jns
jno
fcomps
push
imul
cmp
lock
sub
out
shll
outsl
scas
clc
test
or
xchg
fildll
pusha
sub
movsb
push
js
arpl
pop
hlt
inc
in
mov
pop
leave
xchg
mov
dec
clc
test
lods
mov
into
sahf
nop
lret
int
cmp
jmp
addl
mov
pop
mov
movsl
int
clc
inc
out
push
xor
push
push
push
popf
jl
clc
add
dec
jp
in
dec
ja
insb
jge
rcrl
xchg
sbb
inc
lret
or
lods
mov
sub
leave
pushf
dec
lock
mov
push
adc
sar
jg
mov
inc
dec
daa
push
ljmp
in
and
ss
fstp
and
sbb
xchg
dec
incl
and
lret
jg
loopne
jmp
adc
clc
or
mov
or
stos
negb
sub
cmp
add
in
add
adc
pop
ds
dec
sbb
inc
rol
adc
and
pop
sub
shr
ss
push
xchg
pop
push
jbe
lds
fs
adc
loopne
and
movsb
push
jl
sub
jp
push
mov
xor
fsubrl
fdivs
in
test
ret
pop
loopne
adc
pop
cld
loopne
sbb
pop
fwait
sub
ret
addl
je
and
jo
out
cmp
and
cmc
xrelease
mov
sub
pop
mov
fisubrl
cld
adc
adc
and
lock
push
inc
dec
out
and
test
pop
mov
pop
cmpsb
mov
or
cmp
pop
push
cmp
enter
dec
call
sbb
jmp
or
movsb
xor
imul
jno
mov
sahf
mov
pop
enter
sub
dec
push
xchg
jo
push
dec
loop
insb
lret
jae
orb
inc
or
stos
inc
xchg
add
movsb
xchg
negl
inc
loopne
std
out
mov
and
sti
dec
adc
adc
cmp
jno
mov
movsl
fildl
lods
mov
cmp
mov
add
das
clc
lods
loope
or
jl
popa
jbe
inc
xchg
in
adc
fisttps
jo
jb
add
js
jge
insb
inc
loop
or
data16
in
cmp
add
ret
pop
and
adc
push
cmp
push
xchg
test
cmpb
inc
out
aas
pusha
mov
xor
in
arpl
inc
add
rorb
jnp
lds
lea
mov
test
mov
and
es
addl
or
sti
loope
push
in
adcl
loopne
xchg
xchg
xchg
mov
adc
xchg
push
fistps
ret
movsb
sbb
dec
movsl
or
test
adc
sub
jl
sbb
mov
gs
outsl
insb
add
add
add
mov
pop
shr
cmp
mov
xor
psubd
push
test
fs
dec
pop
stos
fists
adc
jnp
lret
ret
inc
or
and
add
ret
or
aam
ja
mov
xchg
cmp
push
dec
mov
int3
cmp
pop
clc
fcomps
cld
sbb
cmpsl
icebp
jns
je
jmp
adc
push
test
mov
inc
pop
test
add
and
fs
xchg
xchg
ret
push
push
jecxz
addr16
ficomps
lcall
cmp
iret
cmc
std
and
pop
js
insl
outsl
sub
out
cld
test
cmpl
adc
mov
xor
sti
filds
xchg
sub
je
sti
xchg
shlb
cwtl
mov
lret
test
insb
dec
iret
test
push
dec
push
lods
adc
icebp
and
sti
and
sub
cmp
pop
sub
rep
or
or
incb
test
xchg
pop
test
inc
sub
sub
add
adc
lea
test
orb
add
rorl
add
loop
ja
or
lret
jb
clc
sbb
pop
in
test
dec
loop
xchg
aad
loopne
ret
rol
cwtl
cmp
test
sub
pop
pop
or
ljmp
cltd
pop
adc
sub
sbb
lds
inc
xchg
sahf
insb
sub
inc
test
shll
inc
ja
jle
cs
sub
lret
incb
faddl
out
xchg
jle
mov
xor
push
out
mov
mov
dec
push
jae
fwait
cmc
bound
inc
sarl
loopne
jae
pop
adc
addl
sbb
pop
push
jno
stc
repnz
mov
std
cmpb
lock
sbbl
scas
mov
pop
jnp,pn
jle
outsl
mov
add
jnp
rcll
jb
jge
es
sti
data16
push
pusha
jl
sahf
iret
inc
push
sbb
gs
data16
xchg
jg
dec
push
cmpl
push
inc
test
lahf
pop
pop
clc
pusha
jns
push
push
pop
inc
pop
mov
dec
pop
cli
sbb
and
jne
or
push
clc
inc
sbb
sbb
cmpsl
dec
dec
sbb
fistpl
xor
push
lds
lods
xlat
and
inc
push
aam
rcrl
sub
inc
js
inc
xor
jecxz
nop
clc
orb
sbb
aaa
icebp
jb
sbb
loopne
inc
dec
jge
sbb
mov
arpl
or
or
and
and
loopne
push
cli
aam
inc
jo
out
cmpsb
dec
jns
pop
adc
and
or
inc
loop
seta
cmc
stos
pop
clc
push
movsl
sub
sub
das
push
dec
jns
xor
add
call
mov
gs
sbb
sub
divb
aad
add
add
push
mov
sbb
xchg
and
adc
pusha
inc
xlat
rclb
sub
js
das
arpl
fildl
ja
int
lock
movsb
pop
testl
shl
lret
sbb
or
xor
sar
sub
mov
or
lods
jno
sbb
pop
cmp
lods
repz
or
inc
ds
fxtract
pop
push
test
or
push
shll
lahf
xor
sbb
cmp
loope
jle
inc
push
and
xchg
xor
arpl
mov
fistpll
dec
pop
jno
popf
nop
jo
jnp
cmp
add
xor
pop
jo
jge
stos
nop
popl
aad
or
dec
sub
jl
pop
lcall
push
mov
jp
sub
jno
xor
cld
test
inc
stos
lcall
sbb
repnz
xor
cmpl
push
pop
sbb
aam
mov
sarb
mov
xchg
cmp
push
aas
dec
adc
sbb
adc
mov
jecxz
xlat
mov
aaa
stos
cmp
mov
pop
hlt
or
ljmp
into
sbb
fs
push
rcl
fimull
les
jle
loope
ss
lahf
mov
or
push
mov
fldl
ja
outsb
loope
inc
cmp
aad
cld
stc
lods
lcall
imul
cmpsb
xchg
sub
push
and
enter
jecxz
pushl
ret
jg
scas
xchg
xor
mov
pop
push
es
pop
insb
xchg
pop
jns
lahf
mov
ds
arpl
fwait
and
push
sti
bound
xchg
pop
loope
in
pop
ret
jmp
decl
mov
sub
pusha
jg
popa
daa
sbb
jecxz
xchg
loope
ja
xchg
dec
pop
xorl
call
cli
or
jmp
xchg
outsl
xor
cld
or
jp
imul
ljmp
push
iret
mov
sub
pushf
mov
std
inc
dec
in
in
mov
pusha
data16
addb
pop
cmpl
ljmp
mov
jo
fldenv
lods
lods
mov
das
aam
jp
jbe
incl
stc
cmp
leave
xchg
std
repnz
gs
push
cli
dec
stos
dec
sbb
test
pop
add
cmp
sub
mov
loopne
sbb
sub
js
jne
inc
rcl
roll
pop
pop
or
into
sub
jo
ret
incl
scas
inc
inc
add
add
rorb
add
leave
xchg
xchg
fists
sbb
daa
xor
adc
cmp
or
jno
cli
in
pop
test
add
xchg
pop
inc
fisubs
dec
pop
incb
loop
dec
ss
mov
fwait
push
out
jg
and
and
and
dec
add
and
int
dec
gs
and
dec
ss
push
dec
shlb
pop
rorb
push
mov
ret
xchg
ret
inc
jl
mov
jg
push
inc
inc
adc
xchg
cmp
lods
add
push
roll
cs
inc
xor
std
ss
or
cmp
clc
jmp
dec
add
outsb
fsubrl
scas
ret
jle
cli
enter
xchg
dec
aam
adc
test
mov
scas
mov
and
jg
pop
lea
jg
shlb
mov
xchg
stos
sbb
insb
jp
ficoms
cmp
aaa
cmp
mov
cltd
dec
mov
adc
mov
testb
popf
inc
mov
lea
ret
xor
add
inc
push
push
lea
inc
fimull
xor
sbb
adc
icebp
xor
outsl
cmc
ja
imul
add
adc
cmp
fwait
cmc
pavgw
pop
xchg
push
mov
paddb
xchg
or
cmp
cmp
inc
and
test
lods
cli
mov
jbe
mov
jo
cmpsl
add
pusha
inc
sahf
mov
dec
lock
mov
jl
inc
mov
movsl
out
incl
inc
movsl
jo
adc
xchg
and
and
adc
inc
ret
incl
pop
jmp
jecxz
dec
and
mov
out
test
pop
out
sbbl
fldt
cld
insl
push
add
push
aas
test
fwait
mov
and
pop
jmp
jo
add
mov
and
movsb
mulb
add
rcrw
pop
adc
les
into
or
in
cmc
movsb
jl
xchg
in
std
fimull
lahf
xchg
push
xor
fstpl
mov
inc
insb
dec
inc
xor
mov
jecxz
cmp
sbb
and
lds
add
sub
xchg
fimull
sub
xor
in
push
addr16
pusha
adc
xchg
mov
or
call
mov
fiaddl
dec
insb
in
call
jne
loopne
pushf
mov
ss
in
pushf
pop
push
js
adc
scas
xchg
add
fidivrs
int
pushl
pop
adc
inc
repnz
stos
fmull
mov
popf
or
add
cld
push
outsl
jg
jnp
add
push
jg
ret
sub
shl
inc
xor
ja
inc
inc
xchg
clc
push
xchg
iret
pusha
inc
aaa
inc
mov
les
push
dec
mov
sarb
pop
jp
bound
pop
add
movsb
cwtl
lds
dec
scas
xchg
pop
push
pusha
xchg
sbb
orl
rcrb
mov
arpl
in
repnz
lahf
pusha
std
or
int3
xor
cmp
mov
or
push
stos
add
test
lret
jle
xchg
mov
je
lea
es
mov
cltd
jns
lret
rorl
adc
fisttps
jb
outsl
mov
xor
out
and
or
inc
call
adc
pop
or
or
push
dec
aam
fisubrs
insl
push
xchg
xor
nop
inc
sbb
cmp
mov
sbb
push
xchg
rcr
clc
xor
cmp
jo
mov
out
test
dec
mov
mov
xchg
dec
xchg
xchg
sahf
cli
jge
pop
or
cmc
xchg
mov
add
scas
and
loopne
xlat
int
movsb
pushf
fwait
enter
stos
insb
aad
and
div
dec
test
jae
xchg
mov
mov
aas
push
ss
bound
xor
mov
jo
sub
dec
adcb
icebp
fwait
sbb
cwtl
inc
js
ret
jl
jno
push
out
push
sbb
and
cmpb
incl
sub
sbb
xor
or
inc
dec
add
outsl
sbb
mov
inc
dec
es
push
arpl
mov
sahf
je
dec
insb
cmp
xor
adc
inc
xlat
and
jl
pop
mov
push
mov
xchg
hlt
push
jp
in
inc
or
cwtl
orb
jle
icebp
mov
popa
into
in
mov
push
test
aas
aam
mov
jno
aaa
jl
dec
addr16
fcoms
mov
jg
mov
jb
mov
xchg
insl
outsb
inc
sub
inc
je
sbb
imulb
sub
lret
test
adc
movsl
out
jg
push
adc
dec
shl
sbb
leave
mov
cmp
jecxz
mov
sub
dec
aaa
lret
dec
fidivrl
inc
inc
adc
xorb
ffreep
xchg
mov
roll
fbstp
rcll
or
or
or
stos
mov
push
loope
mov
icebp
mov
xor
fwait
add
out
cmp
mov
mov
pop
filds
insl
dec
mov
in
les
loopne
mov
insl
or
push
mov
aaa
cld
jae
sbb
push
dec
jb
movsb
inc
push
xchg
sahf
mull
movsb
lods
or
imul
subb
sbb
lock
fisubrs
push
fadd
js
in
mov
add
out
not
aaa
sub
out
scas
or
adc
sbb
movsl
mov
add
adc
push
push
mov
fiaddl
push
ljmp
cli
dec
mov
inc
xor
xor
imul
inc
jmp
jnp
daa
loopne
lret
push
addb
ret
xchg
pushf
mov
std
push
push
imul
cmp
aas
pop
jge
testl
sub
test
cmp
mov
dec
and
iret
sub
jmp
cs
add
pop
cltd
dec
lret
add
in
mov
push
dec
cmc
or
rolb
cwtl
hlt
movsl
outsl
scas
imul
dec
and
lea
bound
into
cmp
xchg
pop
sub
sub
inc
stos
nop
inc
xor
xor
inc
cmp
into
pop
cmc
and
jmp
in
pop
pop
loopne
pop
filds
dec
jb
scas
mov
mov
je
fdivp
push
sahf
fstpt
test
xor
inc
fmuls
insl
and
iret
scas
cli
push
or
pop
arpl
push
mov
fdivs
push
push
loope
jl
mov
xchg
stc
xchg
je
jo
jge
fsubrl
and
push
test
jle
arpl
dec
mov
sub
nop
jmp
lcall
insl
aam
das
jle
push
dec
mov
add
sub
icebp
adc
sarb
in
outsb
cmpsb
es
cmc
jmp
xchg
cli
sahf
clc
add
inc
push
adcl
imul
mov
repnz
cmpsb
sbbl
sbb
in
hlt
xor
fiaddl
jecxz
jge
sub
lcall
mov
mov
push
xor
jp
loop
push
push
sbb
je
inc
sub
mov
mov
imul
dec
jg
xchg
loope
movsb
xchg
popa
inc
cmp
stos
test
pop
movsb
outsb
cmpsl
enter
push
mov
jp
mov
jns
incl
rcll
repnz
jmp
cwtl
jge
mov
pusha
mov
xchg
or
pop
or
mov
gs
inc
mov
adc
dec
insb
out
xor
xorb
or
and
push
roll
cmp
pop
and
push
sub
aaa
push
das
jge
lock
mov
fwait
stos
xchg
pop
xchg
bswap
ret
imul
bnd
inc
lahf
nop
jae
add
push
mov
or
fcmovnbe
and
stos
xchg
and
ja
mov
mov
out
pusha
mov
mov
mov
ds
jp
mov
adc
cli
push
ret
mov
psllw
mov
jmp
scas
movsb
jb
inc
mov
mov
adc
jo
rcrl
mov
lcall
out
cmpsl
jne
shlb
imul
ret
sti
xlat
scas
mov
rcr
xor
adc
jl
imul
aam
and
scas
inc
fidivs
mov
pop
lea
sub
insb
and
fisttps
dec
xchg
xchg
mov
les
adc
dec
cld
cmpb
mov
pop
jbe
lret
sbb
outsl
add
aad
aaa
fistpll
fildll
cltd
dec
xchg
les
dec
jmp
dec
daa
or
shlb
dec
or
xchg
cmp
icebp
add
mov
or
hlt
repz
into
inc
insl
push
in
cli
add
dec
fwait
nop
mov
adc
or
ss
loope
jmp
inc
inc
add
jbe
in
adc
in
pop
push
inc
clc
hlt
push
pop
lret
cmp
das
loope
sbb
test
aaa
push
ljmp
add
cld
test
outsb
mov
xorb
mov
sahf
clc
aaa
adc
inc
movsb
or
xchg
xchg
fsubs
mov
push
shr
mov
cmpsl
mov
sub
jg
lods
pop
fnsave
mov
add
fucom
movsb
insb
xlat
hlt
cmpsb
push
push
push
ja
adc
xor
fwait
daa
mov
dec
inc
push
out
xor
mov
bound
push
xor
pop
xchg
cmp
sub
ss
and
ret
aas
call
xor
outsb
fs
lods
stc
push
or
shr
out
dec
mov
movsl
and
xor
inc
mov
mov
cs
mov
xchg
sub
mov
stos
cld
sahf
ljmp
repz
insb
lret
push
mov
ret
outsb
test
push
pop
add
test
sbb
stc
and
or
imull
pop
aas
and
cmpsl
movl
inc
sti
ret
cmp
cmp
push
popl
imul
mov
stos
xorl
sbb
in
dec
add
stos
faddp
mov
and
ljmp
subb
jmp
mov
dec
jg
enter
or
repz
pop
sbb
inc
cmc
and
jo
cwtl
imul
into
lcall
ljmp
sbb
adc
movsl
pop
ja
ja
pop
mov
jns
rolb
sbb
in
inc
pop
cmp
lock
push
mov
inc
mull
pusha
jecxz
jl
jle
insb
pop
xor
cmpl
jle
lcall
sub
dec
dec
push
and
mov
push
pushl
loope
movsb
sbb
shlb
sub
scas
and
lods
dec
test
pop
push
decl
lcall
arpl
add
pushf
mov
fildl
jg
xor
xchg
jne
adcb
adc
jge
aas
or
adc
adc
nop
adc
mov
lcall
sbb
test
mov
inc
xchg
pushf
sbb
je
sub
lds
std
dec
mov
mov
mov
out
hlt
icebp
js
fcomp
mov
adc
popa
pop
shl
rol
or
push
nop
scas
outsb
das
clc
adc
push
imul
test
lret
pop
call
fnstsw
mov
stos
ror
stos
inc
mov
or
leave
bound
push
ljmp
pop
jle
mov
lea
mov
lar
xchg
pop
inc
cmp
out
loope
sbb
mov
push
cld
xor
sbb
mov
in
jo
push
inc
push
pushf
mov
push
mov
in
out
fisttps
jle
es
mov
mov
rcrb
repnz
loopew
pusha
xor
sahf
fldcw
or
in
imul
addr16
add
mov
mov
push
add
aad
mov
mov
xor
mov
adc
or
cltd
add
dec
pop
jl
mov
and
daa
pop
or
jnp
inc
push
nop
xchg
dec
fisttps
sub
jmp
fwait
and
data16
test
std
pop
xorb
xchg
pop
movsl
stos
and
or
mov
push
push
pushl
inc
add
cli
or
dec
push
push
pop
mov
push
dec
inc
pop
ljmp
sbb
jo
mov
sub
repnz
orl
adcb
imul
push
push
fisubs
inc
scas
sub
xor
mov
mov
push
aas
mov
pusha
or
xlat
rcrl
stos
daa
lock
jecxz
pusha
mov
jbe
cwtl
movsb
popa
inc
and
js
ss
mov
pop
pop
int
clc
mov
pop
pop
push
xchg
cmp
push
pushf
sbb
sub
js
xor
outsb
je
jg
pop
repz
add
les
add
pop
loope
or
sub
sbb
add
pop
popf
mov
mov
mov
cmpsb
cwtl
mov
xchg
dec
adc
add
push
xor
mov
and
sbbl
clc
add
aas
mov
add
ficomps
jl
movsb
ss
aam
push
adcl
test
mov
in
jg
movl
sbb
shlb
or
ret
js
fldcw
add
loop
sbb
es
mov
mov
push
leave
pop
sbb
cld
cwtl
stos
insl
mov
fadds
mov
sbb
pop
ja
push
sbb
mov
pop
jp
dec
jecxz
adc
repz
ljmp
movl
jmp
sbbb
add
jns
mov
xor
adc
and
ss
xor
jae
adc
fnstcw
push
fisubrl
xchg
seta
movsl
mov
dec
ss
cmp
inc
pop
mov
movsb
cmp
add
mov
cmp
dec
ljmp
and
js
pop
ja
pop
xor
push
jb
adc
push
mov
clc
add
es
cmp
mov
scas
adc
stos
jle
in
mov
test
inc
shr
incb
lea
push
ja
mov
dec
add
fsubrl
lods
push
in
std
push
jp
xchg
sbb
scas
pop
xchg
mov
inc
add
jp
ljmp
into
repz
test
mov
sbb
jg
jb
clc
jnp
out
pop
sub
in
mov
fidivrl
jne
shll
pop
pop
mov
in
fcmove
dec
rolb
sbb
std
mov
push
or
pavgb
daa
test
js
inc
pop
arpl
enter
mov
into
into
xchg
sub
mov
add
xor
fmull
mov
sti
in
orl
movsb
pusha
adc
and
in
or
dec
inc
or
mov
repnz
add
fnstenv
in
inc
pop
sub
insb
xchg
outsb
aaa
inc
popa
mov
xor
nop
mov
bound
inc
sub
sbb
mov
xchg
jne
lock
imul
jo
adc
clc
xchg
mov
scas
mov
mov
or
jge
les
shl
test
jb
push
in
mov
cmp
insb
cmp
lds
pop
push
int
aam
adcl
mov
and
ficomps
cld
or
roll
add
xorl
es
sbb
add
sub
fldl2e
enter
dec
add
or
ret
cmpsb
gs
cltd
movsb
add
bound
int
stos
pop
mov
nop
jns
xchg
mov
es
jl
aas
addl
inc
or
sub
cld
pop
rorl
adc
mov
sarl
mov
sub
test
mov
jne
rorb
scas
dec
cmp
add
ficoml
xchg
add
mov
shll
cmp
xorl
es
cmp
adc
xchg
sbb
ret
sub
setge
rcl
data16
lds
sahf
xor
rolb
popf
mov
mov
push
xor
mov
mov
inc
insl
dec
dec
daa
iret
repnz
shll
mov
imul
push
pop
jle
jge,pn
dec
push
xchg
cwtl
jae
sub
cmc
sbb
out
jl
inc
insb
sbb
inc
inc
inc
mov
dec
cwtl
bound
cmc
pop
adc
stos
pop
fwait
push
cmpsl
or
sbb
push
cmp
push
add
dec
adc
jae
pop
sbb
dec
xor
mov
jae
js
xchg
data16
andb
gs
flds
xor
js
cli
cltd
sub
and
xchg
adc
dec
lds
mov
inc
and
fwait
test
mov
add
jg
jae
inc
addb
inc
ret
arpl
jmp
jo
and
aas
cmp
mov
bnd
iret
mov
xchg
and
std
je
test
sub
lods
jg
or
scas
pop
xchg
shll
loope
cmp
pop
icebp
cwtl
pop
adc
movsl
loop
add
jge
and
or
dec
cmpl
sub
cmpsl
xchg
cld
sbb
lret
inc
mov
jg
ret
test
push
inc
arpl
leave
dec
mov
inc
mov
cmp
test
test
dec
pop
xchg
fwait
sbb
jecxz
cmpsl
cmp
mov
inc
sbb
jle
movsl
pop
inc
xor
jle
pop
imul
xorb
jp
xchg
movsl
inc
add
xchg
sbb
loope
jmp
mov
leave
insb
mov
xor
pushf
dec
ret
cmp
push
or
fs
testl
cmp
mov
mov
leave
in
cmp
or
pop
xchg
pop
out
stc
es
lea
andl
pop
dec
dec
fisubs
add
pop
xorl
cli
shlb
cmp
push
sahf
inc
aad
inc
std
sub
add
jmp
jo
push
inc
ret
jecxz
inc
sbb
jno
lods
mov
add
mov
lahf
mov
mov
sahf
pushf
mov
popa
cmp
add
sub
les
pop
loope
aaa
mov
sbb
fisubs
xor
out
je
fisubl
loop
jmp
fs
subl
pop
xor
mov
pop
hlt
xor
xchg
shll
popf
or
ja
sbb
mov
test
cmp
jno
sarb
arpl
cmpsb
xlat
loope
mov
xchg
stos
scas
jae
int
ljmp
sub
mov
mov
mov
cmp
dec
sarl
mov
sahf
sub
jns
lret
or
xor
xchg
pop
rcr
dec
fbld
and
push
inc
fstl
imul
in
dec
cmp
mov
incl
shrl
rol
inc
sahf
xchg
jbe
mov
add
mov
lock
jg
lock
outsl
add
adc
faddl
push
cmp
popa
dec
sub
and
aas
sub
jmp
and
imul
inc
jbe
pop
frstor
push
add
scas
add
iret
outsl
subb
jmp
stos
and
cltd
dec
js
inc
jp
insl
pop
js
into
jge
test
mov
popa
nop
repz
xor
loope
popa
ds
movsb
aas
imul
fstl
clc
bound
jno
sbb
pop
jae
lock
stos
jp
mov
add
inc
pop
scas
daa
sbb
mov
pushf
xor
rcl
add
fstl
fstpl
dec
pcmpgtw
sti
mov
pop
aam
fwait
sbb
in
cmc
in
pop
mov
mov
xchg
sahf
cmp
aaa
add
popa
test
push
aaa
testb
aad
fsts
push
scas
dec
pop
push
nop
jmp
cmp
repnz
in
jg
add
and
add
nop
pop
hlt
ret
push
mov
and
jbe
xor
pop
std
xchg
add
mov
and
sbb
je
jb
repz
sub
in
mov
inc
roll
imul
pop
jo
mov
test
xchg
pop
mov
mov
or
add
pop
push
mov
pop
call
test
xchg
std
dec
ss
fs
mov
sub
iret
pop
hlt
mov
jnp
adc
cmp
das
pop
sub
add
sbb
sub
xchg
cs
adc
out
or
add
add
dec
sbb
xor
stos
rolb
aad
adc
xor
shrl
ror
smsw
add
scas
mov
jb
dec
or
stos
or
test
cmp
shr
sbb
jecxz
adc
leave
arpl
out
inc
or
orl
mov
pusha
int
dec
or
pop
push
xchg
push
xor
jae
dec
das
push
sub
sbb
frstor
pusha
sbb
sub
inc
cmp
dec
sub
sbb
jo
nop
popf
adc
test
cmpsb
inc
jge
add
mov
ss
jmp
and
pop
dec
cmpsb
cmc
scas
ljmp
push
cmp
roll
roll
cmp
adc
push
bound
jecxz
add
or
jl
stos
lret
ret
lock
jbe
push
test
sbb
hlt
pop
gs
lock
mov
xchg
cli
jmp
inc
test
mov
add
cmp
rcrl
out
mov
lcall
adc
les
test
push
jnp
and
inc
mov
pop
ret
inc
jge
ljmp
daa
push
or
and
mov
sbb
sti
or
js
daa
lods
pop
pusha
sub
sub
sbb
sub
shrl
sub
ss
adc
or
jo
adc
jg
add
dec
or
sbb
aad
movl
imul
jno
xchg
inc
jmp
and
std
lcall
or
inc
imul
xor
xor
sub
adc
aad
and
push
mov
ficomps
pushl
loop
mov
andl
mov
pop
out
outsb
icebp
cltd
cmp
and
mov
test
dec
add
repnz
outsb
mov
push
pop
jo
mov
test
leave
pop
push
adc
inc
push
add
popl
pop
push
inc
cli
lock
jg
in
jns
jmp
cld
pop
mov
jnp
add
ret
cmp
mov
test
mov
xchg
dec
sbbb
mov
rolb
bswap
fdivs
inc
or
inc
jge
dec
mov
xor
aam
push
cmpsb
pushf
fnstenv
xchg
push
loop
xchg
fstpl
adc
push
cmp
push
xor
sbb
jl
rol
aas
sbb
mov
add
pop
mov
pusha
jno
rorb
jecxz
movl
int
mov
mov
jle
sbb
mov
pop
push
stos
push
jbe
subb
xor
test
enter
aas
cs
in
mov
and
dec
jge
xor
mov
pop
pop
add
sbb
add
pop
movsl
xchg
stos
add
loope
dec
cmpsl
test
dec
or
in
aam
xor
adc
cmp
fstpl
pop
lahf
adc
imul
adc
add
rclb
and
fnstsw
loope
stos
inc
mov
push
sbb
mov
and
lahf
adc
jmp
mov
mov
adc
mov
rcl
nop
int
nop
adc
push
adcl
mov
inc
mulb
iret
add
lea
dec
in
outsb
inc
outsl
adc
in
jle
sbb
lods
or
fs
lods
sar
and
dec
mov
orl
adc
sbb
ds
icebp
and
stos
inc
mov
sub
jnp
lahf
jecxz
mov
lea
imul
pusha
mov
dec
xchg
je
sbb
loope
sbb
inc
adc
fidivrl
or
jns
fdivrl
cmpsl
nop
add
fwait
add
xchg
push
inc
dec
mov
inc
mov
popf
add
call
jle
pop
mov
pop
xor
loop
lods
sarb
xlat
xor
mov
pop
push
mov
pop
xor
cmpsb
jno
int3
add
les
iret
add
pushf
call
sar
push
cmp
ja
jo
adc
insl
cmpl
mov
jle
pop
outsb
pop
mov
sbb
and
or
sbb
mov
sahf
cmp
iret
outsl
xchg
push
decl
mov
mov
sbb
jae
rol
jecxz
push
in
insb
cmp
jns
or
or
cwtl
decl
cmc
xchg
int
sub
cmpsb
cmp
imul
pop
and
add
pushf
ds
jo
xlat
ret
ret
lods
into
xor
cs
jne
add
sub
add
cmc
cs
add
cmp
jmp
adc
test
mov
repnz
hlt
lods
cmpsl
mov
mov
jp
out
pop
imul
push
pop
inc
rclb
sbb
pop
add
bound
movsb
sbb
fs
enter
loopne
ss
mov
mov
xchg
popa
add
aas
jo
out
pop
out
fnstsw
mov
dec
or
add
lcall
jge
scas
cmp
js
call
mov
pop
xor
xor
daa
sub
addr16
ljmp
into
inc
fsubrp
mov
sub
add
sub
mov
inc
sbb
scas
inc
popf
add
fwait
pop
and
xor
js
test
mov
pop
out
xchg
ficompl
xchg
and
outsl
out
roll
push
push
insl
loopne
nop
xor
push
sub
inc
lret
cmp
rorl
jo
cli
lahf
adc
sub
xchg
ljmp
sub
je
mov
dec
xchg
jge
into
cld
xor
jno
sub
or
std
mov
push
and
pop
scas
lea
test
rolb
xchg
clc
add
decl
int
in
neg
les
pop
mov
out
dec
sahf
incl
jbe
dec
or
mov
loope
pop
jns
sbb
and
or
fwait
cmc
insb
data16
xchg
cmpsb
inc
push
cmp
push
mov
cmc
push
push
mov
lock
push
sti
inc
out
jno
inc
out
cmp
dec
jne
push
cld
mov
adc
jae
and
sbb
lods
pushf
in
int
xor
pop
adc
insb
ljmp
dec
dec
jp
call
test
ja
cmpl
dec
cwtl
aas
call
cmp
pop
lods
mov
out
and
cmp
cltd
inc
adc
into
mov
fcmove
push
fcoml
fidivrl
push
popf
mov
mov
push
mov
mov
movsb
pop
inc
and
jbe
and
idiv
mov
shll
iret
sub
sub
cmp
cmpps
iret
js
dec
or
aad
arpl
jmp
cmp
out
adc
nop
cmpsb
sbb
int
jnp
xor
fs
dec
loop
xchg
xchg
mov
shr
mov
rolb
fsubs
loopne
mov
ja
sbb
adc
inc
sub
pop
xor
adc
fcomps
add
xchg
jmp
repnz
das
rolb
sti
gs
mov
push
mov
push
call
pop
enter
lds
push
idiv
ret
adc
inc
add
aam
loopne,pn
fcmovb
sbb
push
repnz
rolb
lock
icebp
jo
fcmovnbe
sub
out
and
push
pop
ds
int
lods
push
jl
cmpsl
push
nop
jb
dec
mov
ds
not
cmp
in
incb
jecxz
cmp
fidivrs
stc
jo
jne
mov
inc
ret
clc
mov
imul
cmpsb
lods
fcmovnbe
and
aas
daa
mov
inc
or
or
cmp
loope
jge
or
xchg
xchg
test
and
es
xor
xchg
mov
les
cmp
xor
mov
lock
ljmp
mov
imul
mov
test
mov
sub
pushl
jbe
stc
movsl
bound
daa
icebp
mov
adcb
js
pop
movsb
push
rolb
cmp
inc
outsl
push
inc
adc
cmpl
mov
inc
lods
es
jb
movsl
sahf
pop
pop
icebp
sub
or
psraw
cmp
rep
cwtl
clc
pop
xor
dec
pop
addr16
dec
out
test
ficoms
push
dec
jge
sbb
fsubs
push
outsl
test
movlhps
inc
popa
xchg
adc
loope
call
iret
ss
pushf
xchg
dec
mov
mov
add
pop
testb
xor
sbb
into
inc
add
hlt
mov
sbb
mov
xchg
out
sub
shll
xchg
pop
mov
int
cld
cmpsb
hlt
shll
sub
psrlw
and
in
pop
jbe
or
or
pop
ss
cld
repnz
lret
jae
pop
xchg
mov
xchg
dec
scas
and
jne
push
popf
dec
pop
popf
jmp
addr16
loope
rcrl
out
xor
pop
inc
xchg
testb
orl
nop
rcll
hlt
cli
movl
cli
aam
fistpl
lahf
rcrl
icebp
clc
jne
mov
xchg
stos
mov
fstpl
sbb
les
jo
mov
sub
cwtl
mov
jbe
xchg
mov
stos
mov
imul
mov
cli
ja
cmp
aas
shr
lret
aad
add
into
or
scas
adcb
filds
push
lret
pop
out
fldl
xor
dec
sbb
adc
sbb
loop
cli
xlat
and
arpl
andb
adc
dec
pop
test
sbbb
mov
int3
xor
mov
js
cld
ds
push
cmp
fcompl
loop
popf
lods
pop
cmpsl
jns
xchg
sbb
and
arpl
movsb
pop
imul
mov
in
notb
add
das
mov
fists
js
movsl
negb
push
inc
jle
cld
dec
movsbl
mov
aas
jne
pushf
int
decl
lahf
cmp
lea
cmpsl
or
lcall
lock
and
mov
jo
inc
movsl
in
rol
mov
inc
int
add
out
push
sub
mov
call
cmp
adc
mov
fcoml
scas
dec
xchg
dec
aaa
lock
pop
adc
inc
or
sar
sbb
lock
and
testb
mov
or
lret
rolb
setl
rcl
mov
lods
xchg
jo
sti
mov
ret
loopne
add
add
mov
pop
pop
aas
sub
cltd
push
lds
mov
mov
daa
jmp
xor
mov
add
mov
das
rcll
jge
cmp
push
jno
insb
loopne
jbe
test
sbb
pop
push
test
mov
jle
js
addb
aad
scas
movsl
adc
lods
add
cs
popf
sbb
pop
fs
fsts
dec
jne
sub
inc
mov
xchg
outsb
rol
cmp
cmp
loop
xor
push
mov
arpl
dec
sahf
cltd
rorb
and
test
mov
cld
out
jg
xlat
mov
pop
fldenv
cmp
jmp
mov
mov
mov
jmp
repnz
cmpsb
bound
sub
inc
outsb
or
fs
jnp
push
pop
scas
aas
lea
and
sub
les
addb
shr
lahf
mov
test
mov
ljmp
loop
nop
aam
out
cli
add
jg
out
push
xor
adc
insb
dec
jle,pn
sub
lods
sbb
xor
lahf
jp
cmp
xchg
lods
cmp
or
mov
addr16
push
test
enter
mov
mov
jmp
cmpsb
and
push
jno
shrl
insl
aas
out
or
cmpb
jle
cmpsl
add
mov
sub
stos
inc
ljmp
sti
cmp
addb
push
movsl
sbb
xchg
mov
mov
adc
movsb
or
movsb
xor
aaa
jge
mov
shl
and
pop
stos
xchg
and
pop
jb
mov
mov
and
les
jle
sarl
lcall
popa
lods
inc
mov
cmp
jo
mov
mov
xchg
add
scas
and
lods
xchg
lcall
mov
pusha
pop
aam
mov
nop
stc
sbb
mov
xchg
pop
push
add
push
xchg
les
cli
das
jg
iret
adcb
jg
lahf
cmc
mov
sbb
push
test
idiv
push
cmp
cwtl
out
andl
mov
test
dec
shrb
out
aas
fmull
mov
out
sub
outsl
push
out
fimuls
pop
mov
mov
sbb
out
xor
adc
jecxz
call
push
cli
fcom
pop
pushf
pushf
cwtl
frstor
icebp
mov
adc
mov
iret
sub
adc
in
xchg
test
push
fistpll
and
jecxz
shll
pop
aam
ljmp
pop
add
je
popf
lods
loopne
shlb
xlat
orb
arpl
lea
movsb
xchg
adcb
stc
jp
rcl
mov
push
flds
jmp
mov
add
jbe
mov
dec
rcr
rcrl
sub
daa
movl
ss
adcb
stos
subl
inc
jg
pop
add
clc
push
and
pop
lock
inc
cwtl
xchg
loope
jp
mov
clc
daa
jp
jle
or
inc
fbstp
ficoml
xchg
sub
mov
pusha
sub
icebp
daa
shll
push
push
loop
jae
jl
mov
xchg
jle
adc
in
test
mulb
leave
mov
les
aas
call
push
shll
xchg
lret
or
cmp
inc
cmp
jb
and
pop
bound
ds
sub
jg
out
sub
push
xchg
nop
testb
mov
fistl
ljmp
test
stc
cwtl
les
adc
mov
cmp
and
fs
mov
clc
sbb
ret
push
lcall
clc
mov
xchg
jl
mov
inc
pop
lock
incl
das
pusha
test
insl
cwtl
cmp
test
pop
dec
inc
std
add
addr16
mov
sbb
xor
push
mov
lahf
rclb
cmpsl
jo
add
or
imul
ret
mov
mov
aas
cmp
sbb
jge
test
leave
or
cld
and
push
jbe
sub
dec
mov
icebp
pop
push
repnz
outsl
lods
sub
lock
inc
lock
sub
inc
push
jle
or
lock
aas
jmp
or
pop
mov
push
or
pop
mov
pushf
out
movsb
cs
aaa
cld
jge
dec
ret
add
insb
push
flds
iret
xor
mov
js
ds
clc
sub
sub
adc
out
add
adc
and
add
lea
fwait
loope
mov
rclb
mov
adc
filds
outsl
bound
addb
lods
cmp
sbb
scas
inc
std
adc
xor
out
out
adc
push
lret
addr16
fildl
icebp
add
push
or
decl
add
movsb
dec
xor
call
adc
push
and
loop
inc
cmp
jecxz
out
pop
mov
inc
xor
inc
cmp
mov
push
popa
lret
adc
xchg
in
sub
mov
or
aad
lahf
loopne
mov
daa
lea
ffreep
jnp
sbb
dec
xor
adc
lock
dec
pop
popa
add
lret
cld
stos
mov
mov
pop
sbb
call
jl
sarl
lea
sub
daa
mov
cltd
aas
mov
push
jns
add
mov
repz
or
aas
cmc
jns
addr16
inc
testb
adc
outsl
push
clc
in
mov
dec
lret
adc
lock
roll
popa
inc
sar
call
and
mov
push
mov
insb
pop
add
add
sbb
ficompl
call
or
fstl
stos
xor
popa
test
decl
in
dec
sub
xchg
sbb
stos
pop
add
addr16
mov
pop
push
repnz
xor
or
jmp
icebp
fwait
test
mov
out
cmpsb
cmpsl
insb
aas
jmp
ret
cmc
rcrb
mov
cmp
divb
and
pop
push
push
mov
mov
cmp
outsl
inc
pop
jle
inc
mov
xor
jb
fbld
mov
mov
dec
mov
mov
mov
outsl
dec
fwait
or
repz
aas
mov
cs
outsb
ljmp
jl
pop
jo
sub
lds
sub
mov
cmp
mov
dec
insb
test
xor
or
jle
cltd
adc
pop
cltd
js
xchg
lds
jnp
fbstp
sbb
and
das
push
mov
xorl
ret
enter
movhps
lods
mov
sub
mov
inc
jb
mov
cs
add
jle
and
and
ljmp
pop
hlt
push
sbb
and
data16
out
sub
outsl
pop
cmp
lods
incl
push
cmpsb
incl
in
daa
cltd
pop
mov
insb
or
or
jnp
subl
cmpl
lahf
xchg
xor
test
or
cld
movsl
test
sub
cld
pop
fiaddl
inc
test
fldcw
mov
rcrb
push
push
mov
push
cmp
jbe
xor
add
gs
add
push
mov
ds
stos
ficoms
clc
enter
pop
or
or
xchg
jns
cmp
and
loop
mov
sar
stos
dec
mov
pop
and
jo
jne
fistl
cmpsb
std
mov
fs
add
and
jmp
sbb
or
imul
hlt
ljmp
lds
pop
movsl
mov
lods
test
imul
lea
push
orl
rorl
cltd
repnz
sbb
cwtd
cmp
das
lock
push
cmpsb
push
lea
pop
pop
adc
out
fmull
pushf
cld
mov
enter
add
rorl
fwait
adc
sbb
pop
ret
push
lock
cld
cmp
jo
arpl
incb
cmc
inc
aad
pop
xor
js
adc
or
inc
fs
iret
adc
lock
push
pop
jne
adc
or
rorb
add
sahf
movsb
inc
sub
outsl
cmp
fidivl
mov
filds
pop
aam
pop
in
pop
or
dec
adc
pop
aad
xchg
insl
sarl
lret
in
insb
mov
pusha
sqrtps
jno
or
inc
push
clc
and
mov
mov
adc
cmp
rol
cmp
push
xorl
xchg
pop
mov
inc
fists
and
xchg
test
js
pushl
add
mov
inc
jge
mov
xchg
mov
mov
sbb
sub
push
push
sti
das
std
cmp
cli
insl
adc
adc
and
pop
cmp
add
gs
sbbl
mov
xor
mov
mov
add
mov
push
cmp
xchg
jo
push
int3
pusha
mov
enter
push
scas
inc
xor
insb
in
sub
cmp
dec
das
pop
inc
xchg
mov
cmp
loopne
jmp
pop
je
and
push
push
mov
sarb
int
jmp
rolb
xsha1
cmpsb
cmovbe
or
je
inc
or
sub
inc
pushf
dec
out
lds
test
mov
inc
ret
imul
jnp
xor
andl
div
mov
data16
xor
ja
aad
enter
mov
lock
jmp
push
or
xchg
mov
xlat
jg
sub
dec
jno
add
shl
inc
pop
rolb
cli
int3
lret
push
repnz
lock
fucomip
mov
mov
or
jo
xor
loop
sbb
test
xchg
shrl
mov
pop
xchg
int3
rol
pop
jp
pop
je
add
push
repnz
leave
int
loopne
xor
test
adc
or
subl
bound
cmp
insb
inc
mov
sub
pop
cmp
in
test
add
xchg
fsub
xchg
push
out
test
jecxz
dec
lods
cvtps2pd
add
mov
mov
in
add
or
outsb
xchg
mov
aaa
sti
mov
sub
adc
das
clc
jmp
sub
cmp
and
les
push
popa
add
cmp
loopne
adc
or
gs
and
insl
aas
lcall
xor
cltd
rolb
or
xchg
cld
sti
push
enter
pop
dec
es
les
loop
xor
das
or
clc
fbld
or
fisubs
out
push
enter
iret
das
lret
sub
fmul
test
dec
and
adc
icebp
adc
inc
lret
or
pusha
shlb
rorb
in
icebp
xor
cmp
sub
pusha
call
jg
jp
or
inc
adc
rorl
mov
shll
fwait
sbbl
sub
or
ljmp
gs
rorb
dec
pop
inc
push
mov
xchg
dec
mov
push
mov
mov
cmpsb
or
and
mov
std
out
add
pop
jle
mov
scas
pop
cmp
xlat
and
int
xchg
jle
loopne
mov
cmp
pushf
lahf
or
adc
scas
and
jg
in
daa
jns
icebp
add
daa
ret
adc
ss
lods
outsl
mov
mov
pop
xor
inc
lea
in
lret
divb
xchg
test
js
cs
call
xchg
adc
pop
or
jmp
clc
sbb
jns
xor
sbb
daa
jmp
mov
repz
lcall
pop
movsl
pop
jmp
xchg
push
add
out
push
jo
dec
and
xchg
lahf
mov
sbb
in
fisubs
repnz
mov
ss
inc
test
shll
pop
xor
mov
jne
loop
ljmp
pop
adc
or
push
rorl
rolb
push
and
jmp
lea
mov
outsl
negb
repz
cmp
int3
fisttpl
roll
inc
incl
lea
out
add
jmp
sub
inc
rorl
lock
js
mov
test
lock
es
and
dec
cmp
push
cmpsl
and
and
in
sub
imul
cmp
repz
stc
mov
pop
icebp
mov
sub
mov
mov
push
jbe
or
dec
jns
adc
mov
sbb
aas
icebp
dec
adc
pop
pop
testl
and
inc
es
pop
ret
mov
pop
jo
push
mov
inc
adc
cld
arpl
sbb
mov
xchg
cmp
dec
or
and
sub
xchg
lods
push
imul
mov
mov
gs
add
xor
adc
jno
mov
cmovb
aas
adc
imul
push
sbb
clc
add
daa
ret
lret
mulb
sahf
add
adc
adc
or
fmuls
mov
call
loopne
jge
mov
aam
arpl
mov
je
mov
enter
jg
loopne
adc
and
mov
mov
out
pusha
in
inc
mov
mov
repnz
fiaddl
imul
add
inc
aas
arpl
xchg
cmp
adc
hlt
mov
inc
pop
cli
and
lods
dec
jle
push
insb
fsub
jg
andb
push
testl
push
rcrb
loop
jge
or
popa
les
inc
pop
test
cld
mov
int3
je
adc
push
xlat
test
sbb
add
pop
jp
insb
inc
ds
subps
cmp
rorb
cs
shl
add
popl
icebp
hlt
push
jbe
into
clc
xchg
push
push
sbb
mov
sub
cmpsl
lods
xlat
push
pop
hlt
cmp
jl
addr16
cmp
and
stos
mov
in
movsb
cmpsb
mov
push
insb
gs
roll
mov
js
pop
sbb
subl
fdivs
dec
ja
cmp
cli
pop
xor
inc
sbb
mov
clc
or
int
push
aas
shl
mov
inc
aad
stos
xlat
or
popf
adc
daa
std
gs
lds
or
fcomip
sub
and
rcll
das
mov
test
xor
pavgb
scas
adc
push
cli
insb
cld
mov
mov
inc
pop
add
xchg
jns
sub
add
loop
add
mov
cmpsb
test
jecxz
dec
inc
daa
sbb
push
xchg
mov
mov
cmpsl
scas
loop
pop
mov
ljmp
mov
data16
add
jp
mov
mov
add
sbb
inc
and
pop
xor
insb
dec
mov
mov
jnp
mov
sbb
or
jbe
inc
cwtl
aaa
in
dec
push
js
push
add
inc
aas
stos
mov
lods
lock
adc
xor
lret
int3
test
add
ss
cli
cmpsl
fs
jae
xor
sbb
sub
lret
mov
pop
adc
xchg
add
mov
adc
pop
push
sbb
repnz
cmp
ffree
out
and
mov
inc
xchg
shll
cmc
mov
pop
bound
mov
mov
xchg
mov
pop
mov
stc
dec
addl
lock
cmp
das
pop
js
mov
cwtl
jne
test
repz
and
mov
mov
mov
inc
mov
std
rcll
fisubrl
mov
pusha
stos
mov
nop
sarl
mov
sbb
mov
fs
cmc
sarl
mov
icebp
jecxz
sbb
jo
ret
movsb
or
shlb
pop
lock
enter
inc
fnstenv
lock
mov
imul
aad
aaa
adc
outsl
mov
ljmp
sub
add
inc
or
xchg
jnp
jmp
pop
sahf
or
cltd
je
test
insb
sbb
mov
stos
dec
sahf
add
xor
jns
add
repnz
decb
push
sub
movb
cmpsl
push
mov
sbb
fnstsw
rcl
call
sahf
mov
inc
mov
sbb
fisubrl
lods
adcb
icebp
sub
hlt
pop
mov
mov
js
popf
sub
dec
pop
push
je
ljmp
daa
ret
and
and
stc
jp
mov
pop
pop
sbb
sbb
test
push
pushf
icebp
nop
test
mov
divb
cmp
jl
scas
mov
pop
das
popa
jae
inc
adc
inc
in
repnz
in
add
insb
mov
mov
xor
jbe
lahf
fdivs
inc
arpl
fcmovnb
pop
lahf
push
cltd
rcll
jmp
add
inc
push
or
jnp
fcoml
xchg
sub
out
jae
mov
pop
add
enter
clc
sahf
lods
pop
or
sub
pop
xchg
push
cs
shlb
mov
sub
jge
mov
hlt
lods
adc
xchg
adc
xorl
shr
je
clc
push
pushf
push
cli
mov
jo
push
jno
mov
imulb
inc
dec
dec
pusha
or
data16
add
mov
fmulp
pop
lds
jae
dec
subb
test
cmp
test
xor
inc
push
in
xor
sbbb
mov
popl
nop
test
cmc
fldenv
ret
movups
std
movsb
or
xchg
add
insl
subl
push
mov
std
inc
jg
xor
mov
inc
leave
or
mov
dec
cltd
cld
mov
push
or
xchg
adc
shll
push
sbb
call
js
mov
addb
add
dec
fisttpll
test
xorl
dec
lret
fwait
call
push
pop
pushf
imul
xor
pop
and
dec
fadds
sub
sbb
inc
fbstp
or
push
jge
into
aaa
inc
negb
ja
cld
mov
cmpsb
shl
cmp
scas
xor
pop
jecxz
out
push
jae
stos
mov
mov
push
mul
les
out
inc
ljmp
xchg
pop
cmp
call
ret
ljmp
sub
pop
orb
loopne
inc
sbb
ja
mov
call
cmpsb
cltd
or
fs
cli
in
lock
inc
mov
nop
push
jmp
fdivrs
add
ret
push
subl
adc
push
aam
push
add
outsl
sub
adc
aas
jnp
lea
add
in
arpl
popf
ret
imull
scas
xor
fst
jne
cli
rcrb
dec
in
daa
mov
sub
xor
xchg
mov
mov
pop
mov
and
scas
movb
mov
sbb
mov
pop
shll
push
lods
imul
daa
or
push
fldcw
cmc
rorb
sbb
dec
jmp
lock
pop
pop
repz
xlat
or
repnz
mov
addr16
ret
mov
xchg
mov
inc
cltd
fadds
cmp
lods
mov
push
inc
test
and
cmpsl
jmp
mov
rolb
call
mov
leave
sbb
add
js
loopne
orb
sbbb
bound
and
cmp
mov
dec
or
icebp
rcll
je
ds
lods
testl
icebp
xchg
das
push
popa
es
or
bound
jle
inc
xor
decl
push
inc
push
dec
loopne
mov
mov
subb
and
adc
dec
fiadds
or
xlat
rcll
lds
xchg
fdivrl
stos
jl
xor
adc
lahf
mov
arpl
in
sbb
mov
add
or
mov
pusha
scas
ret
loopne
dec
push
mov
fildll
xchg
orl
es
mov
imul
mov
xchg
jne
sub
jmp
pop
mov
insb
adc
sub
inc
mov
loopne
movsl
inc
je
adc
cmc
add
pushl
inc
jg
xorl
or
or
push
lds
ret
xchg
adc
ss
pop
mov
mov
sbb
mov
sbb
jl
push
arpl
dec
hlt
add
ret
push
cmp
sarb
lods
outsb
nop
ds
orl
ja
mov
xor
adc
push
xlat
sub
incl
movsb
movsb
sbb
xor
stos
es
dec
mov
add
test
or
and
sub
inc
add
mov
and
push
jae
daa
daa
cmpsb
adc
sub
lods
imul
adc
cs
sbb
mov
push
add
clc
cmc
fcomp
add
ret
sbb
mov
test
xchg
jo
rcrb
xor
or
aam
mov
cmp
call
jg
stc
xor
jbe
push
sbb
or
add
xor
mov
mov
push
pop
xchg
xchg
inc
pop
pusha
bound
fistpll
push
std
adc
mov
stos
jbe
mov
jb
insb
jbe
push
movsl
add
xchg
pop
mov
das
jmp
div
mov
sbb
test
mov
daa
out
push
push
aam
push
jno
icebp
rcll
out
dec
dec
mov
je
xchg
incl
push
cmp
push
push
loop
pop
and
clc
nop
push
cwtl
sbb
lds
roll
pop
lock
mov
mulb
pusha
test
data16
js
outsb
clc
adc
mov
mov
jb
mov
mov
popa
es
rorl
ss
repz
dec
aam
push
std
bnd
fldl
dec
das
shll
fmull
pop
sbb
mov
sbb
sbb
cs
or
mov
pop
clc
popa
int
dec
shr
lock
dec
decb
or
mov
jp
int
inc
sbb
ss
loope
push
mov
nop
pushf
sbb
push
lcall
add
sbb
xchg
push
inc
adc
cmp
jle
andb
aas
pusha
mov
cmp
sub
and
jl
adc
mov
mov
xchg
hlt
gs
fs
addl
mov
insb
in
pop
mov
mov
push
sbb
das
lret
imul
cmp
fdivr
out
imul
push
mov
add
addb
inc
xor
inc
incl
push
pop
cmpsl
jecxz
mov
pop
je
andnps
adcb
lock
nop
ljmp
push
mov
sub
mov
inc
leave
adc
inc
cld
push
mov
cmp
in
outsb
sbb
xchg
mov
lods
or
mov
lds
fsubrl
jnp
in
adc
sbb
sarb
dec
mov
fcoms
int
push
fdivr
mov
push
faddl
rorb
push
jl
shrb
sub
adc
test
movsb
imul
int
add
adc
les
jl
or
into
sub
or
loop
or
fwait
ja
rorl
mov
dec
andb
imul
test
or
jb
jo
das
push
adc
dec
cmp
xchg
cli
dec
push
cmp
incl
pop
jecxz
adcl
mov
out
pop
adcb
push
clc
fsubl
faddl
and
dec
sub
pop
test
jmp
sbb
mov
in
andl
mov
adc
frstor
mov
enter
mov
add
dec
lret
cmc
mov
mov
out
daa
subl
push
shrb
stos
loop
scas
mov
pop
movsb
mov
push
push
aam
pushf
xchg
test
pop
cs
add
cmp
adc
and
scas
stos
movsl
mov
and
pop
jl
cmp
xor
scas
xor
xchg
bnd
mov
cmp
add
imul
xchg
movsb
add
gs
xor
or
pop
lret
push
add
out
push
or
stos
sbb
jle
pop
or
or
lock
jo
pop
cwtl
jp
int
jb
push
xchg
imul
movsl
push
fmull
daa
adc
and
aas
mov
frstor
pushf
inc
mov
sub
cld
pusha
imul
mov
std
sahf
mov
mov
jno
int3
add
sbb
inc
mov
cmp
add
and
sahf
iret
dec
and
cli
out
enter
das
in
push
xorl
sbb
jle
test
push
dec
lahf
ds
dec
push
dec
jae
je
mov
mov
clc
inc
mov
pop
xchg
lea
incl
fwait
mov
pushf
sbb
aas
mov
push
or
jnp
aas
sbb
adc
test
das
les
sub
pop
subb
pop
cli
popa
out
dec
stos
cmpsb
out
pop
cli
push
adc
out
dec
inc
inc
cmp
clc
mov
jle
add
and
sbb
call
pop
movsb
lds
test
imul
inc
or
sub
xchg
cmpsl
mov
cmp
mov
jge
icebp
sub
movsl
inc
rorl
fidivrs
pop
push
test
adc
and
sbb
mov
adc
ret
or
dec
das
nop
push
leave
das
std
dec
push
popl
rcl
orb
jmp
jp
add
out
jmp
xor
fwait
cs
or
jl
fs
lds
add
mov
inc
push
xlat
into
inc
pop
jl
mov
cld
mov
add
iret
fisubl
mov
sbb
test
popf
repz
or
popf
fists
repnz
inc
stc
mov
subb
out
jp
sti
fwait
loop
mov
lret
and
pop
mov
test
add
aad
fsts
clc
aam
pusha
cmp
adc
inc
dec
cltd
loope
inc
xchg
and
cmpl
or
sub
in
sbb
divl
adc
or
cs
pop
gs
xchg
mov
pop
shlb
xchg
push
cmp
xchg
jnp
lret
cwtl
into
fildl
test
mov
mov
xlat
xchg
add
jmp
xor
lret
pop
cli
add
rcr
clc
mov
ret
xor
sub
fistpl
dec
cmp
mov
out
pushf
pop
xor
push
scas
pop
test
jp
div
sub
mov
xchg
fildl
dec
lock
rolb
cmp
test
and
dec
lea
sub
pop
add
mov
lret
clc
fdivr
cltd
stc
pop
dec
arpl
xor
lods
cs
or
push
rol
je
xchg
jp
and
rorb
jae
mov
cwtl
clc
sub
and
rcrb
jne
orb
push
jo
ror
mov
ja
fsubrs
popa
push
xor
imul
orb
dec
or
and
xor
cmp
push
mov
sub
or
and
arpl
cmc
dec
add
sbbl
mov
push
lcall
ds
loope
test
mov
xchg
outsl
push
sub
inc
add
gs
cmpsl
or
xchg
adc
sahf
mov
loop
popf
pop
dec
call
pop
lret
add
sub
jle
push
sbb
and
das
test
mov
or
jp
das
and
lds
insl
or
or
scas
xor
cmpsl
in
cmpsl
lock
cmp
xchg
jbe
test
dec
inc
mov
add
sub
cld
ffree
mov
mov
sub
mov
jns
leave
pop
add
sbb
mov
je
repnz
push
fimull
xchg
cwtl
mov
sub
xor
je
mov
inc
clc
dec
xor
mov
inc
pop
jg
pushf
jne
addr16
addr16
adc
add
test
add
cli
outsl
xchg
and
lock
mov
fistpll
mov
mov
mov
xor
fs
xor
adc
sub
jmp
push
or
mov
mulb
push
sbb
or
xchg
movsb
jne
add
push
int3
cwtl
mov
or
testl
dec
lcall
je
shl
and
icebp
jae
mov
or
pop
cli
aam
mov
cmpsb
fs
dec
adc
subl
and
unpckhps
mov
subb
inc
xchg
sub
mov
mov
sti
les
or
add
xor
mov
je
or
lea
xchg
scas
out
sbb
sub
imul
shll
push
push
repz
ljmp
push
dec
xor
sbb
das
scas
mov
stos
sbb
clc
cwtl
inc
outsl
inc
fbld
test
inc
pop
jge
outsl
push
cmc
mov
pop
push
stos
dec
jge
sbb
cmp
sbb
test
test
push
xchg
pop
pushf
bound
sahf
cmp
jecxz
adc
xor
jne
mov
mov
aad
ret
add
sub
dec
loope
jmp
jecxz
pop
fstl
sbb
xchg
jecxz
adc
in
mov
retw
xorl
add
pop
xchg
xlat
mov
add
lock
xor
add
xchg
and
loopne
imul
movsl
sbb
jecxz
push
dec
and
insl
mov
outsl
aam
mov
inc
daa
add
lock
sbb
xlat
and
adc
sbb
out
inc
cmpsl
sbb
gs
sub
add
lret
lods
jns
add
xchg
xchg
mov
mov
les
mov
popf
mov
add
mov
mov
in
call
mov
test
jle
popa
int
or
mov
inc
sbb
ljmp
dec
mov
mov
or
aad
test
cmpsl
jg
mov
imul
jg
inc
idivl
lods
pushf
stos
subl
and
xchg
xor
sub
shlb
in
mov
psubusw
rclb
xor
add
addr16
xor
jle
xchg
push
cmp
xor
and
inc
jmp
jl
xor
adc
jg
int
out
jle
jae
scas
sahf
hlt
aad
sbb
iret
mov
push
mov
movsb
sahf
add
sub
sub
add
ljmp
adc
push
lcall
mov
sub
and
push
mov
mov
sti
fimuls
fsubrs
addr16
outsl
out
adc
sub
ret
stos
adc
das
mov
mov
daa
push
push
cmp
out
and
jg
das
enter
sub
adc
or
push
gs
inc
into
xchg
inc
fimuls
test
lods
mov
jg
leave
aaa
in
cltd
mov
sbb
ja
xchg
and
les
fldcw
leave
lahf
dec
xor
jbe
scas
insl
leave
js
xlat
fcoms
xchg
cmp
or
rol
pusha
or
push
jmp
cmp
sub
lahf
xor
loopne
cld
mov
mov
out
mov
pop
dec
idivl
stc
test
pop
mov
fcompl
mov
fsubr
adc
fldl
dec
sarb
outsb
data16
gs
adc
add
push
into
xor
or
xchg
and
adc
mov
dec
pop
cli
xchg
mov
adc
daa
push
cmpl
pop
iret
push
or
fsubl
inc
dec
xchg
imul
cltd
or
sbb
mov
xchg
test
mov
fildl
dec
push
cmp
cld
in
mov
pop
or
add
cmpsl
fs
repz
dec
lahf
ja
dec
aad
add
in
pop
orb
or
rcrl
mov
loope
or
fcoml
mov
fucom
xchg
inc
cld
jmp
adc
nop
outsl
push
imul
lahf
sbb
fstpl
push
mov
jmp
rcrl
sub
sbb
das
fcompl
adc
xchg
push
cltd
popf
adc
lcall
test
cmp
adc
xor
sub
loop
stos
push
idivl
cmp
mov
sub
add
cmp
rclb
insb
ret
shll
clc
mov
sbbb
nop
sub
mov
rorb
xchg
jl
pop
ss
mov
imul
outsb
sar
xor
dec
imul
into
cltd
dec
adc
stos
ret
pop
cli
and
das
movsb
dec
dec
xorl
push
lods
mov
add
and
rcr
push
test
mov
sbb
xor
or
out
fnstenv
mov
icebp
divl
lods
pop
xorl
pop
mov
push
in
mov
xchg
es
dec
and
pop
popf
jg
or
xor
sbb
sbb
lret
xchg
sub
in
mov
cmc
cmpsb
sbb
fiaddl
cmc
and
lods
subl
popf
dec
push
ds
nop
add
fidivs
rorb
or
add
daa
dec
and
xchg
cmp
push
mov
mov
xchg
push
mov
xor
je
int3
mov
push
pop
cmpsb
mov
cmc
jb,pt
adc
in
int3
hlt
popa
push
or
lret
inc
jl
int
push
test
and
sbb
push
aad
mov
inc
push
aam
push
ficomps
out
test
jno
loopne
pop
icebp
push
pop
inc
adc
or
jo,pt
xchg
clc
or
sub
sbb
jbe
xchg
xchg
inc
lods
addr16
jns
adc
jb
or
xchg
jnp
fdivs
sub
movsl
jecxz
imul
and
sub
xor
jns
sbb
xacquire
push
sbb
icebp
arpl
mov
out
inc
adc
push
in
push
push
lret
daa
mov
in
fnstcw
mov
lahf
lea
add
stos
pop
dec
cmp
push
xchg
sarb
ret
pop
bound
adc
jne
push
jb
mov
cmp
push
sti
mov
pop
fimull
push
int3
jg
add
add
daa
pop
stos
add
js
adc
aam
mov
scas
sub
and
mov
pop
je
mov
adcb
mov
pop
out
lods
pop
dec
sahf
xchg
mov
daa
inc
sbb
les
and
mov
sub
dec
pop
and
or
add
cmpl
xrelease
cmc
jmp
bound
or
fsubs
mov
cmp
xor
adc
repz
int3
pop
pop
adc
out
jmp
cmp
cltd
sbb
sbb
outsb
inc
mov
mov
mov
sbb
xor
aas
add
jbe
jl
inc
popf
imul
outsb
add
push
addl
xchg
cmpsl
fadds
mov
push
jl
xchg
leave
xorb
int
dec
jmp
sub
pushf
cltd
imul
inc
mov
cmp
mov
add
sbb
inc
push
pop
test
aaa
xor
cmpl
add
mov
sub
fwait
sub
sbb
notl
adc
cwtl
rclb
adc
pop
into
sbb
in
icebp
push
repnz
test
out
stos
je
add
mov
loop
icebp
sbb
jmp
out
popa
rcll
pop
mov
loope
dec
imul
xlat
sbb
inc
out
popf
loopne
inc
loop
add
mov
mov
test
mov
test
xor
out
push
loope
mov
mov
js
pop
mov
mov
mov
lods
cmp
and
std
andl
dec
adc
inc
inc
jns
lea
jle
fwait
xchg
test
add
mov
and
test
insb
xor
add
mov
push
in
mov
sub
ficoml
stos
adc
loopne
sahf
sub
push
xchg
mov
cmp
pop
pop
push
xorl
xchg
nop
and
das
jno
push
enter
push
fsubrl
inc
scas
or
leave
stc
pop
sub
repz
pop
sub
mov
xchg
and
fwait
jo
rolb
icebp
inc
add
stos
dec
sbb
punpcklbw
sbb
popf
loope
mov
in
jp
dec
pop
pusha
push
rorb
jbe
xor
adc
push
cwtl
cmpsl
testb
fsts
dec
xor
xor
shl
outsl
xorl
push
ds
js
sub
cmp
leave
or
jg
loop
dec
pop
rorb
inc
sub
jmp
jae
test
add
cmp
mov
cmp
dec
mov
pop
es
dec
fidivl
into
int3
test
fldcw
clc
add
pop
pop
aam
cltd
clc
adc
mov
test
outsl
push
icebp
rorl
jns
jno
idivl
xorb
mov
lret
aaa
mov
adc
nop
out
xchg
push
inc
mov
ficoml
inc
and
insl
sub
sbb
cli
mov
dec
repnz
xchg
outsl
movsb
adc
sti
push
inc
mov
xor
es
lar
int
lock
pop
xor
rcrb
sub
out
sub
hlt
or
push
mov
jnp
fbld
js
lds
cmp
testl
orl
jmp
jecxz
or
imul
sbb
fstps
lahf
push
mov
aaa
cwtl
cmp
cmp
sbb
mov
mov
sbb
adc
inc
shl
and
movsl
jle
ds
xchg
and
pop
stc
neg
mov
filds
mov
jl
cmpsl
jmp
xor
jge
stos
jbe
and
and
daa
lret
jno
mov
add
stos
out
mul
pop
lods
aam
outsb
and
pop
lods
outsl
test
jp
dec
aam
repz
out
cmpsb
push
mov
mov
push
add
mov
jo
out
js
lcall
stc
inc
loop
add
iret
add
ds
push
xchg
xchg
icebp
or
fwait
scas
mov
sbbl
cmp
cwtl
pop
out
rcrb
xor
fs
xlat
mov
insb
aas
or
imul
je
das
push
fidivl
push
les
cmp
pop
inc
lret
pusha
rcrb
sarb
mov
loope
rcrb
cwtl
jl
or
ret
insb
cmp
imul
mov
jmp
icebp
sbb
mull
mov
sub
enter
inc
lcall
ret
out
call
fisubs
push
inc
jecxz
scas
enter
shll
add
or
jge
dec
scas
mov
inc
jnp
and
aad
into
es
mov
and
push
push
pusha
jmp
lcall
and
fcomps
adc
mov
cmp
filds
sbb
ret
inc
ds
inc
loop
push
std
cwtl
mov
push
fbstp
bound
shll
jbe
test
add
push
loope
or
mov
sar
fidivrl
les
int
addb
jg
sbbl
jno
pop
cmp
rorl
jl
inc
sub
pop
addl
lock
ljmp
mov
jo
inc
xchg
lret
add
inc
aam
mov
mov
sbb
jns
scas
adc
sub
or
add
int
push
das
fsubr
or
js
adc
popa
or
push
push
hlt
sbb
sbb
and
cmpsb
cltd
test
add
pop
xor
cmpb
xchg
mov
add
dec
inc
add
insl
aam
aad
jp
and
popf
inc
cli
jecxz
xchg
mov
shl
lock
sub
and
and
cwtl
in
add
sbb
add
pusha
sbb
jne
fwait
repnz
ret
pusha
cmp
cmc
loop,pt
mov
pushf
push
mov
mov
pop
fidivrs
sub
push
adc
in
push
push
push
xchg
ret
nop
adc
call
xchg
fwait
dec
sub
xchg
popa
mov
loopne
mov
xor
bndstx
std
subb
in
cmpsb
mov
cmpsl
adc
mov
mov
int3
fdivp
movsl
fisubrs
cld
xlat
cld
mov
gs
andb
out
fisubrs
ds
and
jmp
sub
cmp
xor
xchg
xchg
lret
cmp
addl
stos
xor
movsl
inc
aaa
or
mov
xor
mov
into
sbb
xor
arpl
mov
js
jno
xchg
cmp
mov
or
jne
sbb
push
xchg
pop
xor
jmp
repz
xchg
pop
mov
mov
pop
iret
jp
mov
rorb
mov
dec
and
cmp
cmc
rcll
adc
ret
stc
jnp
js
aaa
cld
mov
lret
cmpsb
ret
inc
das
pop
jmp
pop
jns
xchg
js
inc
push
lock
sbb
adcb
dec
popf
mov
or
push
and
xchg
xchg
mov
rclb
pop
adc
inc
sub
push
mov
push
cmc
mov
in
mov
mov
jb
ljmp
sbb
cmp
cmc
jecxz
cmpsl
ds
shrb
clc
cmp
orl
and
inc
shrb
jmp
mov
sub
stc
mov
dec
mov
cmp
cmp
mov
or
mov
lods
pop
sahf
jbe
pop
inc
pop
cmpsl
cmp
pusha
movsl
sub
fs
cmp
notrack
push
mov
je
sahf
ret
xor
imul
sahf
ljmp
fisubrs
or
sub
xchg
or
pop
pop
arpl
or
jl
and
pop
shl
or
push
adc
inc
inc
mov
fnstenv
cs
xchg
add
mov
mov
popf
jne
mov
lret
aam
leave
cmp
pop
call
sub
stos
push
rcl
pop
sub
fwait
sub
cs
mov
incl
mov
add
sbbl
sbb
popf
push
push
or
fildl
xor
mov
adc
fimull
imul
idivl
ljmp
mov
mov
push
mov
shlb
dec
mov
sbb
sbb
adcl
fcomps
xchg
lcall
jo
lods
insl
daa
xor
lcall
and
int
push
cmpsl
in
lret
aaa
pop
cmp
jmp
fs
or
cmp
cld
lcall
leave
and
add
hlt
lret
mov
pusha
cmp
push
push
mov
push
xchg
xor
sahf
push
lahf
push
nop
jns
pop
dec
push
and
adc
push
dec
out
cs
movsb
mov
fs
add
adc
das
sbbb
dec
jp
cs
je
and
dec
enter
sub
mov
mov
cwtl
add
adc
adc
dec
jne
xor
push
cmp
cmp
xchg
xlat
rorl
jecxz
add
shl
mov
clc
pushl
fmul
movb
sbb
int3
das
mov
or
pop
loope
pop
sbb
mov
cmp
pop
jecxz
hlt
out
rorb
cltd
call
inc
fistpl
adc
dec
jl
fs
sub
inc
jl
les
stos
mov
inc
jmp
jns
es
sbb
mov
cmp
mov
mov
mov
es
add
fisubrl
dec
sub
dec
sbb
aad
cmc
add
add
lds
popa
cmp
shlb
mov
shll
pop
inc
repnz
scas
mov
lock
jbe
push
sbb
push
test
data16
bound
incb
sub
int
movsb
sbb
jns
cmp
sbb
test
imul
repnz
lods
shll
dec
xchg
psllw
and
cs
pop
pop
xchg
stos
push
push
or
rorl
lahf
or
jg
xor
jmp
pop
imul
pop
xchg
cmp
rcll
and
lock
jecxz
sbb
pop
add
clc
push
push
pop
loope
outsl
in
jmp
test
call
sub
xchg
test
dec
mov
cmp
pop
icebp
inc
add
jnp
jae
sub
dec
sub
es
add
mov
adc
mov
push
add
popa
add
push
inc
fildl
outsl
rcrb
dec
sbb
and
in
mov
imul
ja
or
adc
aam
xor
lcall
fisubs
inc
sti
dec
jmp
in
adc
mov
fs
ret
out
jnp
out
mov
test
je
fcoml
and
mov
and
pop
out
inc
bswap
je
sub
mov
fmuls
or
sbb
shrl
js
aam
push
mov
les
mov
mov
cmc
adc
clc
pop
test
ret
add
loopne
icebp
shlb
ret
add
sbb
xchg
stos
or
or
pop
mov
sahf
call
ret
dec
test
dec
mov
in
loopne
xor
pusha
pusha
addb
addl
loope
les
push
xchg
jl
mov
lods
addr16
pushf
hlt
mov
out
pushf
cmp
cmp
add
in
jmp
pop
inc
js
inc
push
cmc
sti
jb
inc
int
loopne
bound
syscall
sbb
enter
jecxz
push
das
fsubs
aaa
mov
test
xchg
push
aas
sahf
push
in
pop
fdivrl
lahf
ja
mov
adc
ljmp
or
mov
jb
cs
outsl
cmpsl
pop
loopne
adc
aaa
pop
arpl
clc
cmp
push
les
clc
dec
es
ljmp
add
and
fwait
sbb
mov
push
shll
clc
fs
pop
push
roll
pop
je
push
pop
icebp
xchg
fmull
and
sub
pop
push
cmp
movsb
inc
rorb
arpl
push
je
push
jbe
repnz
pop
jl
stos
in
sbb
ret
inc
dec
mov
es
test
cmp
or
pop
rorb
fnstcw
xor
in
pop
push
sti
icebp
je
cmp
and
out
js
rorb
ljmp
adc
or
xor
mov
sub
ja
ret
sub
sub
outsb
popa
test
jae
popa
xor
or
sahf
inc
mov
adc
lahf
nop
dec
mov
bound
pop
add
xor
push
inc
dec
incb
out
add
daa
add
scas
and
xor
xchg
or
lods
sbb
mov
and
fmull
push
ds
rcrb
ficoms
aaa
or
xor
outsl
insl
lret
daa
imul
aad
loop
loop
lea
cli
dec
jle
rorb
popa
push
jl
lea
lcall
fwait
clc
xchg
cmpsl
add
mov
data16
test
fs
mov
inc
hlt
xor
sbb
icebp
jno
push
jp
add
lock
inc
fstp
or
jl
shlb
faddl
lds
and
fs
cmpsl
mov
fs
sbb
inc
mov
pusha
cmp
popf
sbb
rcrl
inc
dec
insb
jno
sub
outsl
popf
lock
cld
and
mov
hlt
cmp
adc
cs
mov
bound
mov
mov
int3
cmc
test
int3
mov
mov
push
sbb
out
inc
jb
jae
dec
dec
cmp
push
lahf
xor
cs
xchg
add
outsb
pop
repz
inc
mov
or
mov
fwait
push
xchg
mov
push
push
dec
push
roll
rolb
sti
cmpsb
shl
add
lret
iret
loop
add
iret
jno
add
mov
andl
stc
sbb
xor
xor
adc
fcomip
dec
xchg
or
aam
push
out
mov
sahf
push
in
mov
into
sub
mov
ret
movsl
or
test
jne
fstpl
mov
leave
int
inc
cmpsb
out
lea
mov
push
add
adc
mov
lahf
fidivl
int
add
jp
lret
mov
sub
hlt
sbbb
lret
cmp
gs
into
in
sbb
enter
cmp
pusha
icebp
xlat
repnz
pop
adc
mov
fidivs
cmc
movsb
cld
rol
jb
imul
jo
into
repz
daa
pop
cmp
movsb
out
mov
add
mov
out
jb
cwtl
pop
xchg
xchg
pop
push
shlb
aad
clc
daa
aam
in
and
xchg
lock
pop
mov
lret
js
orb
ret
fstp
cmp
icebp
popa
pop
cmpsb
adc
mov
rcll
pop
jo
int3
divb
adc
aas
jl
sub
rcrl
pop
sahf
into
mov
mov
mov
arpl
popf
lret
and
pop
sbb
test
xor
iret
xchg
and
xor
mov
cmpsb
gs
cmp
notb
fsubr
xor
packssdw
and
add
loopne
lahf
and
std
icebp
or
icebp
adc
movsl
in
push
clc
pop
mov
push
mov
das
sbb
fwait
in
inc
clc
push
adcb
jne
fdivrl
jge
cmp
lret
sahf
cmp
pop
cmp
jle
ss
mov
lods
or
test
not
iret
popa
fbld
push
and
mov
sub
loop
sub
test
subb
leave
cmp
or
push
iret
ficomps
lock
fcmove
les
mov
int
in
stc
xchg
mov
cmpsl
sub
mov
add
adc
js
enter
subl
adc
push
mov
adc
inc
pop
jmp
loope
rclb
aad
and
push
ljmp
lahf
push
inc
mov
mov
xor
outsb
stc
es
mov
adc
aaa
insb
test
cmp
fcmovnb
gs
mov
addr16
dec
sub
mov
inc
pop
or
test
ret
shrb
fwait
loopne
cmp
mov
mov
dec
xchg
push
dec
out
add
pop
lods
xchg
fmull
in
stc
subb
pop
cmp
int
push
fs
cmp
sbb
bound
call
scas
call
hlt
and
addr16
das
jge
jo
insb
insl
repnz
push
stc
orb
cmp
shlb
rcl
arpl
dec
cmc
aaa
fcoml
stos
jb
mov
add
mov
ret
push
roll
aas
mov
cmp
adc
ja
sbb
scas
icebp
subl
cwtl
xchg
jmp
mov
sub
mov
pop
in
in
pop
mov
dec
stos
je
pop
stos
filds
inc
cld
xchg
iret
pop
pop
fwait
enter
repnz
push
dec
add
dec
adc
xchg
add
xchg
fcompl
gs
int3
cmp
loope
xchg
loope
xchg
insl
test
sbb
xchg
mov
iret
mov
arpl
fisubrs
xchg
xchg
xor
push
test
mov
fidivrl
mov
leave
jge
inc
dec
pop
addr16
mov
jbe
repz
sbb
cld
cmpl
and
inc
in
cld
addl
dec
xchg
divl
js
add
dec
in
addr16
fisttpl
frstor
nop
mov
lods
dec
jecxz
leave
jo
shrb
popa
cwtl
jle
hlt
inc
jnp
pop
ret
aad
or
loop
filds
add
loop
xchg
daa
jae
mov
inc
sti
add
fistpll
jg
popf
push
int3
sbb
jbe
xchg
cs
shrb
insb
mov
orb
movsb
mov
rclb
cmp
cmp
jl
pop
ds
call
repz
lods
outsb
cmc
jp
lahf
mov
loope
stos
cmp
mov
pop
xchg
lret
mov
jae
xchg
cltd
insl
push
aaa
test
fwait
push
cmpsl
push
ds
inc
jmp
clc
nop
rcr
adc
loopne
stos
xchg
adc
mov
push
filds
call
pop
orb
movsb
pop
sub
adc
xchg
add
xchg
loope
pop
arpl
cmc
and
es
movsl
fbstp
mov
mov
add
pop
subl
in
jb
mov
ffreep
xlat
and
test
ret
jne
adc
ds
leave
iret
ret
ljmp
jno
xor
and
popf
fs
inc
mov
and
push
mov
mov
pop
je
lods
cmp
mov
jmp
and
imul
jne
mov
insl
test
xor
push
cld
xchg
sub
fisubs
loop
inc
out
push
in
inc
xchg
dec
mov
cmp
push
xchg
dec
dec
les
push
fdivs
sbb
in
and
push
clc
mov
cli
mov
mov
pop
push
aas
lcall
scas
sub
dec
ljmp
push
push
loope
icebp
mov
push
pop
adc
xchg
xchg
filds
inc
inc
stos
data16
movl
fstl
popa
and
lahf
sbb
or
out
jnp
pop
inc
or
je
push
inc
icebp
popf
lcall
adc
and
in
js
or
pcmpgtb
enter
jne
lcall
dec
das
push
leave
xchg
push
xor
pop
movsl
sbb
out
insl
test
jb
and
gs
mov
inc
cli
aam
das
outsb
js
or
dec
popa
sarb
ret
mov
cmp
mov
sub
xchg
ss
xchg
in
stos
push
inc
push
cmp
push
xor
mov
add
mov
push
hlt
in
mov
loopne
cmp
lret
inc
rorb
push
sbb
push
mov
jbe
imul
imul
mull
xor
add
inc
imul
dec
lock
sbb
dec
fs
iret
adc
insb
pop
pop
dec
imul
push
push
and
dec
mov
cmp
enter
mov
imul
inc
ljmp
clc
sub
lcall
jnp
fmull
loop
fdivp
inc
and
push
jo
hlt
cmp
lods
push
push
sbb
or
sub
inc
in
aam
inc
jnp
test
jge
push
jp
push
xchg
rcll
test
enter
in
orb
add
int3
pop
lock
pop
add
adc
das
fwait
inc
sbb
pop
popa
add
mov
or
and
jp
xchg
stos
loopne
movsb
out
fldcw
mov
lock
enter
loopne
cmpsl
xlat
sub
movaps
daa
in
lock
nop
and
test
mov
aas
aaa
or
ja
ret
cld
enter
jecxz
test
or
add
jae
aaa
insl
mov
cmp
roll
lock
inc
inc
sarl
hlt
cwtl
and
sarl
lock
inc
mov
stos
jle
arpl
mov
fwait
clc
mov
inc
mov
rorl
add
fcmovnbe
cmpsb
jns
sub
stos
sub
mov
cwtl
clc
xor
nop
jp
addr16
andb
inc
cli
addb
scas
mov
xor
sub
jecxz
js
aaa
dec
call
movsl
push
or
test
cmpsb
aaa
stc
xor
dec
xlat
mov
push
mov
lahf
data16
jbe
adc
xchg
pop
dec
adc
addr16
psadbw
add
movsb
sub
cmp
sub
insl
mov
inc
mov
xorb
dec
clc
mov
pop
pop
mov
pop
hlt
loope
fistpll
add
lahf
xor
stos
movaps
xor
add
dec
lea
jno
jno
push
inc
dec
jl
shrl
sub
out
mov
shrl
mov
mov
xchg
jnp
xchg
das
inc
push
test
test
insb
mov
sti
adc
add
vpshufd
jae
sbb
dec
mov
jae
jle
pop
out
dec
jae
sbb
push
bound
and
pop
push
lret
lahf
jo
es
movsb
fcomi
sub
xor
mulb
in
mov
in
fisttpll
je
add
or
or
mov
ljmp
js
lret
das
fisttps
int3
inc
out
add
inc
xchg
and
cmp
jbe
mov
sbb
aad
ret
push
dec
js
xchg
sub
data16
pop
xor
addr16
xor
or
sub
fbstp
stc
cmp
pop
pop
js
mov
add
pop
mov
sub
mov
adc
push
inc
pop
or
aad
test
sti
loopne
fwait
and
clc
daa
and
js
push
dec
sub
cmpsb
mov
in
test
cmp
mov
xchg
je
clc
and
sarb
enter
loope
lock
out
push
lock
jge
stc
cs
adc
imul
or
adc
and
sub
je
and
testl
std
orl
test
outsl
inc
sub
std
cmpsl
rep
lock
mov
gs
rorl
inc
or
imul
push
and
das
mov
xorb
movsb
xor
cwtl
scas
adc
push
movsl
sub
jp
call
fstp
or
test
sbb
sti
xchg
sbb
add
mov
test
popa
fdivp
mov
shlb
xchg
psubw
je
sbb
ret
aam
addb
and
dec
add
in
xchg
or
push
bound
mov
icebp
adc
xchg
or
add
mov
fdiv
cmpl
add
push
pop
sbb
adc
mov
daa
push
push
loop
jbe
lds
and
pop
mov
enter
scas
xor
jp
sbb
cmp
mov
jae
push
cmp
lods
push
lcall
add
sub
mov
es
or
dec
pop
xchg
test
cli
add
push
stos
lret
add
in
ror
pushf
sti
mov
mov
push
dec
dec
mov
lcall
pop
inc
xor
pop
ss
sbb
jl
rolb
fldl
push
xor
xchg
cmpl
or
stos
sub
sbb
ljmp
lods
xlat
mov
mov
mov
orb
jns
mov
bound
rolb
fnstenv
imul
or
je
push
sbb
repnz
into
lock
clc
rorl
xor
adc
inc
add
adc
hlt
inc
mov
mov
ss
xor
rcrb
and
push
cmp
lret
sarl
out
lcall
sbb
fwait
jb
pop
xchg
inc
push
xchg
or
les
inc
xchg
mov
lahf
shrl
and
jbe
ljmp
popa
popf
scas
testl
mov
ror
call
stos
ds
dec
pop
bound
test
pop
add
adc
repz
fists
xchg
push
hlt
movsb
xchg
pop
repz
add
scas
sbb
das
push
cld
mov
ret
test
int3
xor
bound
mov
into
cmc
add
arpl
shl
mov
dec
add
daa
cmc
sahf
mov
adc
std
std
jmp
sarb
add
mov
add
dec
lea
or
and
stos
mov
cmp
adc
xor
jae
inc
and
cmp
loop
add
or
in
dec
cmp
cltd
pop
mov
jecxz
iret
or
mov
inc
lods
push
mov
sub
js
dec
test
cli
jae
adc
lea
roll
rclb
cs
lds
orl
inc
lret
pusha
jno
jbe
mov
mov
pop
mov
push
subb
xor
adc
ljmp
out
mov
aad
idivl
ret
in
sti
inc
sub
inc
mov
loop
aam
sbb
push
sahf
bound
add
ja
movsl
dec
pop
pop
ss
push
and
jne,pn
sti
dec
jg
ja
sub
pop
cmp
pushf
or
mov
arpl
popf
movb
bndstx
test
jg
jl
mov
in
xor
xchg
dec
js
outsl
xor
adc
jl
mov
fidivl
pushf
mov
movsb
mov
out
push
mov
movl
dec
mov
mov
test
into
addl
push
mov
fcmove
xchg
cmpsl
pop
mov
out
inc
mov
xor
or
push
add
popa
std
movsl
mov
jno
cld
pop
pop
inc
repnz
inc
aad
dec
adc
sbb
xchg
sti
add
outsb
xlat
jg
lcall
ss
push
mov
dec
mov
imul
xchg
out
out
or
insb
push
and
xlat
sbb
loop
adc
pop
inc
dec
mov
ret
lea
cmpsl
adc
inc
fiadds
or
mov
or
pop
lods
xchg
js
add
xor
mov
pushf
mov
test
push
xchg
fbstp
jno,pn
sbb
jle
cmpsb
ret
adc
pusha
add
testl
mov
sbb
aaa
push
mov
push
je
jno
aad
je
ss
leavew
into
stos
test
xchg
pusha
loopne
xchg
sub
and
loopne
pop
mov
lahf
pop
in
mov
xor
mov
push
cltd
dec
xchg
jge
cmp
icebp
loop
cmp
daa
add
add
bound
repz
stos
cwtl
mov
movsb
sbb
out
cs
pop
out
test
notl
xchg
aaa
sbb
xchg
jle
add
into
xchg
push
mov
jne
iret
push
jno
adc
loopne
lock
aas
popa
std
jge
jl
les
mov
lods
add
pop
jecxz
bound
add
xchg
pop
imul
xchg
push
cmpb
pop
add
xchg
xchg
xor
lods
mov
dec
stc
sbb
xor
outsl
adc
pusha
push
pop
lahf
pop
popa
jbe
mov
xchg
pop
stos
test
add
mov
lods
mov
mov
add
fisubs
cmp
xlat
sbb
mov
jg
add
and
lds
pop
cs
jmp
cmp
mov
test
sub
aad
pop
fistpl
pop
push
push
xchg
gs
or
add
call
scas
or
sbb
cmp
pop
les
bndstx
xor
lret
data16
mov
lock
adc
jmp
shrb
mov
sub
call
iret
and
xor
pusha
arpl
or
mov
mov
fs
xchg
cwtl
add
and
jg
inc
jae
push
enter
ret
icebp
dec
push
pop
jne
dec
pusha
xlat
inc
test
pop
dec
add
in
stc
popa
jmp
je
mov
sub
xchg
fwait
pop
mov
fwait
icebp
mov
adc
jbe
or
stos
test
push
shll
jmp
hlt
pop
lahf
in
or
and
pop
cmp
scas
leave
sbb
fistpl
mov
mov
fdivrs
addr16
sub
stc
pusha
cmp
cld
mov
or
pop
mov
xor
dec
sbb
stos
addl
cld
or
jb
popa
stc
int3
xor
mov
fwait
iret
inc
test
or
jmp
cmp
dec
fdivrs
dec
inc
leave
nop
adc
aas
movsl
ret
add
nop
int
pop
pop
jecxz
pop
push
jle
fsubl
jecxz
push
movsl
ja
or
ret
iret
sbb
mov
lcall
mov
xchg
add
subl
cltd
fnstenv
mov
xor
add
subb
imul
jae
rolb
inc
adc
sub
outsb
dec
cli
xchg
push
movsb
jb
lods
jmp
xor
cmp
sbb
stc
imul
jae
dec
add
aaa
and
rorl
push
ficoml
mov
pusha
clc
cmp
in
jo
push
push
dec
lcall
das
test
inc
and
jbe
fs
shrl
insb
loopne
movl
loope
pop
xor
sub
cmc
inc
js
jp
push
icebp
roll
adc
add
or
mov
pop
jmp
sub
and
and
mov
xlat
pop
fistps
push
mov
jno
inc
aas
lea
mov
adc
jns
jmp
dec
and
or
mov
xor
outsb
add
mov
xor
mov
xor
pop
adc
xchg
push
or
inc
iret
inc
pop
push
test
icebp
mov
xchg
and
clc
aad
xor
movsl
push
popa
mov
mov
dec
xlat
push
mov
lods
jno
scas
sahf
lock
dec
loopne
lods
aam
xor
sbb
mov
jbe
adc
pushf
adc
lock
fadds
mov
inc
nop
push
lret
addr16
and
in
jno
negl
cmp
daa
popf
xor
and
test
fcoml
add
aaa
cmpsl
push
push
mov
jno
inc
xor
pop
fucomip
mov
pop
pop
sub
jno
in
adc
lods
shrl
jle,pt
insb
mov
mov
es
adc
cs
lahf
jecxz
rclb
call
adc
mov
cmpsb
cld
js
roll
sti
or
mov
and
lods
cmp
inc
loope
mov
push
pop
add
mov
outsl
sub
mov
clc
cmp
push
test
pop
xchg
jnp
cmc
push
xor
loope
jbe
hlt
shr
aam
les
inc
stos
add
pop
xlat
or
jns
pop
cmp
ja
mov
inc
push
shr
dec
jecxz
add
rclb
loope
pop
xchg
sbbl
sub
ljmp
push
dec
jns
xchg
fidivl
imul
stos
fistps
dec
or
lahf
pop
or
and
mov
or
mov
mov
push
add
and
pop
ss
cwtl
push
fstps
test
inc
icebp
jb
ret
rclb
mov
push
or
sbb
ror
cmp
sbb
lea
adc
xor
cld
imul
aas
movsl
imul
int3
sbb
sarl
test
cmpl
clc
test
std
pop
int3
cld
inc
icebp
aaa
xchg
orl
sbb
push
jno
aas
push
aad
scas
fwait
push
mov
pop
inc
fldln2
daa
popa
cmp
pop
insb
sbb
insl
and
ret
lock
xchg
cmpsb
fwait
sbb
jmp
aam
or
shrb
into
cmc
mov
sbb
cld
movsl
mov
jae
xor
adc
push
sbb
push
mov
dec
inc
dec
inc
pushf
and
or
ret
push
ret
aaa
sub
xchg
pop
mov
sbb
pop
je
fcoml
out
arpl
test
add
pop
jb
add
aaa
and
pop
loopne
lcall
sub
enter
movsl
sahf
ret
pop
outsl
sub
pop
stos
stos
push
jmp
imul
imul
jns
mov
or
aas
jmp
xor
sub
jo
cvtpi2ps
lcall
js
int3
cmp
push
jno
push
call
adc
mov
ror
adcl
mov
into
decb
andl
pop
mov
adc
push
inc
arpl
testl
push
jl
fiaddl
pop
inc
dec
hlt
cmp
dec
and
fstpt
adc
add
icebp
xchg
mov
in
mov
jo
nopw
leave
jecxz
sti
push
mov
aas
and
push
fcmovnbe
dec
insb
add
imul
testl
les
pop
xchg
sbb
dec
mov
cmp
jne
sub
fcoms
and
mov
jg
jecxz
fldcw
std
pop
lods
repz
mov
jle
lock
mov
mov
inc
insb
test
xchg
dec
and
sti
les
jo
lret
ret
mov
add
mov
jbe
pusha
fsubrs
lahf
fimull
or
je
jne
aaa
and
mov
sbb
hlt
push
push
push
hlt
push
xchg
lret
jg
jp
iret
pop
in
mov
mov
push
xchg
cmp
xchg
testb
out
out
mov
lret
pushf
pop
rorb
aam
add
fidivs
pop
adc
mulb
pop
cmp
rorb
mov
push
adc
sbb
push
mov
and
inc
pushf
add
or
test
rolb
test
and
push
pop
inc
scas
mov
inc
jp
daa
xchg
insb
and
jl
pop
in
add
mov
lret
out
sbb
gs
push
inc
cmp
addr16
and
mov
mov
pop
jmp
shll
ja
call
mov
addl
xchg
push
clc
adc
fistpll
sbb
add
ds
rep
ss
xchg
pop
inc
gs
test
outsb
push
out
mov
xor
into
lock
xchg
dec
push
xchg
aas
inc
xor
test
inc
das
enter
mov
cltd
ja
jecxz
dec
test
lods
enterw
rclb
test
cwtl
leave
movsb
push
mov
mov
stos
repnz
cmp
test
call
cmp
xor
lret
inc
loopne
or
repnz
adc
add
and
jecxz
add
icebp
mov
fdivs
add
cmp
jge
pushf
ljmp
xchg
or
add
addl
jno
inc
sahf
loope
and
add
inc
jl
push
clc
stos
js
adc
xor
mov
aaa
pushf
jmp
aam
ss
adc
out
cmc
push
dec
or
add
test
inc
push
icebp
add
in
add
shll
cmp
lock
or
sti
lods
xchg
int
inc
push
lods
mov
fsts
or
mov
xor
sbb
pushl
jge
outsb
mov
adc
jns
sub
dec
cwtl
sbbl
ret
str
and
popl
pushf
jge
imul
xchg
or
enter
mov
lret
movsl
bswap
mov
rcll
imul
and
popl
rolb
mov
out
add
cmp
mov
js
sub
inc
scas
pop
xchg
cmpl
xchg
in
fcomps
stos
dec
cli
sub
call
sub
pushf
pop
movsb
repnz
jae
cwtl
mov
add
inc
pushf
cs
and
ret
sub
sbb
sub
cmp
repnz
dec
daa
lds
in
lret
fwait
lea
push
mov
mov
je
cmc
xchg
or
js
jbe
dec
sbb
movsb
ja
lcall
sahf
or
jecxz
push
and
jne
in
jg
jg
sbbl
jns
test
jne
ss
or
lret
add
and
xor
outsl
cmp
aas
xchg
loop
in
adc
lret
aad
pop
xor
inc
icebp
and
rcrl
pusha
in
popa
mov
cmpb
loopne
aaa
push
rol
scas
decb
mov
add
xchg
adc
insb
push
clc
rol
clc
sub
arpl
inc
ret
mov
adc
cmpsl
dec
cmc
stos
push
movsl
fisubrs
popf
icebp
jecxz
incl
dec
dec
push
mov
and
sub
inc
adc
push
jbe
and
jns
ret
inc
add
addr16
mov
or
ficoms
je
sub
mov
test
or
push
test
xchg
ficompl
hlt
push
sub
mov
not
sarb
push
push
cltd
je
add
inc
cmp
movsl
addr16
push
lea
loop
cmp
lock
cwtl
pop
mov
inc
or
rcl
add
or
jb
loope
mov
ret
mov
andl
inc
pop
lret
mov
gs
adc
fimuls
cmpsl
out
stos
roll
fldl
ja
push
cmp
mov
imul
scas
push
pop
and
pop
mov
sbb
jl
add
push
jg
mov
mov
daa
mov
mov
repnz
nop
or
es
push
push
stos
aas
pop
jae
push
aam
pop
push
mov
add
mov
sbb
or
or
mov
stos
sub
icebp
cmc
imul
push
out
jb
iret
jne
inc
loop
pop
outsb
add
add
cmpsl
or
mov
stc
inc
pop
inc
jg
addr16
adc
push
adc
fsubrl
out
imul
pop
js
sub
xchg
lods
icebp
dec
push
loopne
cmp
cld
outsb
std
inc
outsl
cmp
out
xor
inc
ljmp
inc
nop
mov
xchg
or
ljmp
stos
add
pop
inc
ret
xchg
test
inc
jle
iret
jno
mov
jge
push
enter
shrd
outsb
xor
fildll
call
cs
mov
xor
mov
aas
mov
jl
or
mov
cmpsb
dec
cmp
mov
and
lcall
shl
loope
pop
cmp
dec
popa
mov
lods
mov
mov
xor
mov
bound
xchg
jge
mov
icebp
shll
ret
jno
xor
rclb
je
xor
xlat
ja
sub
outsl
stc
popa
xchg
xor
mov
sbb
lcall
movsb
cmpsl
loopne
inc
jae
lcall
push
shll
mov
mov
into
dec
les
ret
mov
insl
and
pop
lahf
dec
lcall
adc
int
pop
lods
out
pop
dec
test
shll
sub
adc
cmpsl
add
dec
mov
or
add
and
jmp
daa
jl
xor
test
fs
pusha
or
mov
xchg
in
bswap
push
lock
sbb
stos
or
in
pop
cld
add
mov
or
mov
push
mov
rclb
es
ja
arpl
dec
arpl
jmp
adc
fwait
dec
lods
dec
sbbl
xchg
xor
sbb
std
addb
ret
ds
xchg
xor
pop
sub
adc
jmp
and
movsl
inc
icebp
shll
sbb
xor
sub
sbb
pop
xor
loop
adc
xchg
push
dec
loop
cmc
jne
xor
aam
mov
icebp
ljmp
xchg
test
fistl
loopne
loopne,pn
xor
pop
shlb
ljmp
dec
inc
add
sbb
mov
dec
imul
or
and
mov
loopw
js
pushf
and
push
push
mov
ffree
nop
lods
orl
mov
insl
mov
jg
sti
jl
sahf
inc
xchg
cmc
lahf
push
aaa
jge
emms
fadds
movsl
in
insb
mov
push
xchg
bound
cmp
ljmp
pop
mov
scas
xchg
sub
sbb
dec
fnsave
lds
cli
stos
sub
out
jne
xor
add
or
inc
jbe
outsb
cmp
mov
in
stos
push
mov
loopne
outsb
arpl
lret
sbb
xchg
and
or
or
out
cmpsb
mov
cmpl
mov
or
push
pop
jne
flds
cmp
xor
xor
stos
jp
sub
cmp
push
subb
pop
insb
das
xchg
xchg
push
xabort
ja
les
lahf
push
rcr
pop
jae
push
add
bound
shl
inc
dec
sbb
fildl
mov
sbb
mov
das
dec
add
mov
es
stos
test
jge
fdivrs
cmp
add
mov
out
loopne
add
lods
lock
xchg
add
jle
inc
daa
inc
push
jmp
cmp
out
add
xchg
ret
jge
int
dec
js
les
xchg
xchg
test
movsl
xchg
add
jmp
ja
adc
or
mov
arpl
and
sub
repnz
arpl
lock
pushf
enter
enter
std
pop
iret
mov
movsb
xstore-rng
cmpsl
pop
popa
xchg
jnp
ds
mov
mov
pop
fcmove
or
loopne,pn
fisttpll
cmpsl
adc
xor
mov
pop
push
or
pop
fiaddl
sti
and
push
aaa
out
in
mov
fwait
mov
sbb
enter
xchg
in
xchg
lea
scas
faddl
cmp
jp
add
mov
inc
pop
xor
int
or
pop
rolb
and
scas
cmc
insb
movq
mov
xchg
push
lret
lods
xor
pop
movsl
cwtl
ss
and
cld
mov
sbb
out
cmpsb
push
add
aas
jp
jns
movsl
jno
shrl
fldl
int
ds
cli
sbb
dec
inc
shlb
lea
in
xor
mov
aaa
mov
pushf
stc
das
jl
pusha
push
sub
xchg
xchg
loope
mov
rclb
pop
cli
jle
add
and
jne
in
ret
cwtl
pop
pop
faddp
push
jmp
dec
aas
testb
dec
mov
pop
inc
and
sub
sbbl
mov
adc
icebp
ja
shlb
nop
in
popf
rorb
pusha
addr16
insl
clc
adc
xor
psllw
stos
mov
stos
mov
out
jo
into
icebp
ficompl
ret
inc
or
pusha
xlat
xor
push
xor
jge
addl
jl
sahf
mov
add
adc
mov
add
adc
int3
sti
mov
sbb
sub
push
int3
and
add
ds
mov
mov
js
imul
dec
mov
cmp
xchg
jmp
aad
pop
cmp
fsubl
ss
adc
lea
dec
cmp
push
xchg
and
sbb
lods
cmp
and
cmpsl
aam
sub
arpl
dec
or
lahf
fmull
cmp
and
dec
loope
mov
cmp
scas
xchg
xchg
or
jnp
adc
mov
cli
lds
iret
mov
out
cwtl
movsl
jo
pusha
and
mov
call
push
out
push
je
or
and
mov
scas
aaa
test
or
scas
cmp
test
pop
mov
mov
sub
lret
push
mov
jb
scas
and
mov
frstor
inc
loope
das
sub
int
movsl
loop
xor
mov
and
xchg
lahf
frstor
pop
push
and
in
xchg
rcrl
rcrb
clc
popl
mov
in
negl
iret
sub
mov
xor
adc
std
pop
iret
xchg
rcll
data16
cmp
push
pushf
sub
jg
pop
sbb
or
pusha
ret
fdivrs
inc
add
push
outsl
mov
je
ja
cmpsl
sbb
sbb
mov
popf
add
sub
inc
add
in
push
sahf
mov
insb
adc
pop
xchg
or
sub
cmp
fisttpll
lcall
ret
xor
xchg
loop
sbb
dec
adc
lea
in
jae
or
or
enter
cmpsb
fnsave
dec
pop
insl
int3
aaa
outsl
data16
sbb
test
enter
in
testb
dec
push
cmp
xor
scas
jnp
add
jne
sbb
inc
clc
jnp
cmp
fnstcw
out
in
jecxz
jo
push
dec
loopnew
gs
xor
in
jge
add
mov
lcall
xor
pop
scas
pop
jne
fwait
rclb
xor
pop
xchg
jmp
xor
jnp
in
mov
dec
inc
sbb
lds
jbe
and
ss
call
leave
inc
sbb
pop
lahf
sti
ret
js
jl
xchg
movsl
add
adc
cmpsl
out
sub
mov
mov
inc
jp
aad
inc
icebp
push
sbbb
loopne
aas
adc
inc
addr16
fyl2x
xchg
pusha
xor
cs
pop
sbbl
or
sub
movsb
test
dec
sti
xchg
insl
in
fdivl
add
adcb
pop
pop
dec
xchg
loope
pop
dec
pop
je
out
mov
in
jns
ss
into
mov
mov
dec
ficoml
and
cmp
cmp
mov
cmc
in
adc
inc
cs
loop
pop
loop
xchg
push
int
add
dec
ss
add
aaa
bound
pop
mov
pop
dec
push
mov
bound
lcall
xchg
mov
mov
mov
gs
dec
ret
sar
adc
pop
pusha
fcmovb
lahf
je
or
sub
mov
mov
sbb
and
adc
js
jmp
add
inc
adc
sbb
mov
pop
push
movsb
sub
pop
mov
dec
or
lret
jae
push
xchg
pop
mov
outsb
pop
sub
add
mov
imul
dec
pop
jecxz
xchg
sub
scas
jle
mov
xor
mov
cmp
lods
fistpll
adc
mul
std
insl
arpl
cmp
rcll
ljmp
push
jecxz
push
sbb
dec
jp
js
dec
xchg
or
dec
jg
pop
push
es
in
aad
sub
in
mov
scas
and
xchg
icebp
adc
push
out
cmpsl
adc
cwtl
pusha
sbb
pop
shrl
push
xchg
jmp
or
enter
xor
lcall
es
add
xor
mov
sub
out
inc
or
xor
dec
and
sar
or
adc
cmpsl
and
lret
or
inc
sbb
aad
std
xchg
sub
add
mov
push
rolb
jb
nop
mov
gs
jns
dec
dec
add
push
inc
popf
xor
or
loope
adc
adc
shl
dec
mov
push
push
aad
cmp
push
leave
rorl
sbb
sub
loope
sub
sub
jne
int
or
imul
jae
mov
std
stos
sub
push
sarb
mov
inc
mov
jmp
push
add
in
nop
inc
inc
lret
mov
pop
decl
and
inc
dec
or
sub
inc
dec
xchg
cmp
and
test
insl
rolb
in
mov
cmpsl
fnstsw
nop
inc
cmp
pusha
xchg
pop
loope
adc
ljmp
popf
fmuls
shrb
add
jmp
fmull
ja
pop
aam
outsl
push
push
test
mov
loop
pop
lods
pushf
add
push
hlt
out
inc
dec
mov
loop
mov
shr
icebp
ss
nop
lds
nop
dec
jae
xor
push
mov
loop
loope
lods
mov
cmc
hlt
cltd
sbb
stos
inc
das
sub
aad
outsl
xorl
push
jp
ret
stc
cmpsb
adc
hlt
ja
lret
in
iret
insl
dec
jo
cmp
andl
in
inc
mov
jae
and
xchg
arpl
cmp
jb
xchg
ret
add
pop
subb
mov
xchg
test
aad
inc
xchg
sbb
in
xchg
push
adc
sub
cmp
sbb
mov
je
ds
sbb
std
cltd
xchg
lock
repnz
and
jb
or
inc
addps
imul
cwtl
sarb
jecxz
xchg
xchg
xor
sti
pushf
sub
adc
and
add
fildll
xchg
push
xor
rorb
cmp
sbb
pop
cmp
xor
lods
ljmp
xchg
xchg
inc
push
pop
xlat
int
mov
stos
daa
stos
cld
sub
pop
cld
cmpsl
add
push
push
subl
xchg
xchg
add
xchg
repz
movsl
pusha
adc
imul
inc
push
fdivp
xchg
mov
and
movsl
lods
movsl
lahf
lcall
lahf
push
inc
mov
xchg
jle
and
xorb
mov
fistl
mov
mov
xor
inc
lods
scas
iret
jmp
rclb
cmpsl
xlat
dec
hlt
push
dec
nop
outsb
out
inc
mov
into
aam
insb
movsb
push
push
out
adc
pusha
cmpsb
sbb
shll
pushw
ljmp
pop
push
inc
cmp
lret
lcall
xlat
cmc
aam
xchg
daa
imul
and
ret
pop
faddp
dec
jg
test
pusha
push
mov
aad
or
jb
movsb
mov
out
xchg
jl
jo
lock
andb
and
inc
icebp
jbe
mov
sbb
jo
addr16
push
daa
sbb
sub
cmc
sbb
mov
ja
sarb
pop
jg
inc
sbb
shlb
repz
mov
push
inc
cmp
mov
pushl
mov
into
mov
adc
mov
push
test
pop
loop
inc
sti
pop
jbe
jle
mov
std
jge
fcmovnbe
sahf
mov
int3
push
repz
inc
dec
jge
cs
and
push
les
xor
mov
es
lcall
adc
lock
pop
dec
hlt
mov
dec
mov
dec
out
repnz
and
stos
dec
inc
cmp
dec
loop
push
lock
pop
push
mulb
imul
pop
mov
gs
outsl
cmpsl
push
cld
cwtl
cli
inc
push
call
subl
movsl
jl
sbb
cmp
loopne
ret
into
nop
push
push
sbb
icebp
push
pop
imul
rorl
fcoms
cmpsl
stos
jb
xor
ror
push
cmpsl
adc
mov
cmp
mov
inc
aaa
cmp
xchg
hlt
in
xlat
sbb
dec
mov
cmp
push
std
popf
ret
or
icebp
sub
jno
inc
adc
in
dec
cli
xor
aaa
int3
sbb
inc
and
fwait
aad
fiadds
or
sarb
or
adc
int
rcll
sub
push
cmp
sbb
jb
js
jmp
inc
mov
push
xchg
add
add
out
leave
mov
lock
fwait
lods
icebp
push
xchg
xchg
add
js
jecxz
and
jle
das
adc
mov
or
ja
js
inc
dec
or
jg
inc
fisubrl
test
xor
inc
push
jp
cmc
add
inc
ds
fld
xor
pop
pop
pop
sbb
test
sbb
inc
xorl
mov
dec
out
push
icebp
mov
in
adc
mov
cmpsb
fdivl
les
push
js
adc
rorl
rorl
test
xor
outsl
ljmp
xor
test
jbe
inc
add
pushf
jge
pushl
add
xchg
leave
imul
and
pushf
mov
fadds
out
cmp
mov
data16
adc
cmp
push
jno
aad
push
in
loopne
jnp
dec
lods
jl
and
jb
clc
test
das
fists
push
adc
mov
mov
sbb
push
cmp
and
aaa
mov
lods
mov
addr16
or
push
mov
xchg
aad
pop
jle
outsl
dec
bound
fadds
inc
out
cmp
mov
push
xchg
test
jbe
bswap
inc
mov
mov
popf
cli
push
loopne
adc
ljmp
xchg
and
inc
push
das
dec
cmp
je
ja
outsl
mov
scas
adc
xchg
into
adc
pop
adc
jno
xchg
add
add
add
sbb
cmpsb
jnp
mov
scas
shrb
out
scas
rclb
or
pushf
mov
mov
dec
sahf
call
push
mov
andb
int3
jg
jecxz
test
dec
std
inc
fs
jnp
mov
pop
cmp
xchg
xchg
loope
es
lock
loopne
inc
sti
insb
xor
adc
aaa
dec
ds
xor
fistl
fdiv
lock
rclb
add
sub
je
pop
pop
subl
insb
inc
xor
test
fwait
jp
ret
loop
bound
mov
jne
ja
xchg
lcall
mov
in
cltd
call
into
sbb
mov
mov
mov
add
mov
fs
cmp
pop
jnp
imul
rcl
jl
sbb
jno
hlt
or
mov
arpl
fdivrl
imul
clc
rcrb
add
mov
mov
xor
or
cmc
cli
icebp
cltd
stos
enter
pop
jb
pushf
shlb
cmc
xchg
pop
or
stos
mov
out
lcall
and
push
out
or
iret
je
mov
and
push
mov
dec
cli
lds
decl
cld
and
mov
dec
test
and
adc
dec
aas
mov
lahf
in
ljmp
adc
into
cs
pop
call
and
push
mov
mov
mov
xchg
mov
lds
sbb
mov
mov
mov
sub
cld
xor
lret
orb
movl
cmp
lcall
es
pop
test
mov
pop
add
ds
dec
push
rorb
sbb
andl
lcall
lods
mov
mov
enter
ret
dec
cmp
divb
mov
mov
icebp
push
cmpsb
push
movsb
gs
sbb
sbb
test
ret
sub
pop
mov
add
mov
xor
out
ja
cmp
sahf
push
cmp
xor
sbb
rorl
iret
ficoml
sbb
lds
jle
push
pop
addb
cmpsl
fadds
orl
jno
and
filds
push
pop
rorb
orb
pop
popa
push
insl
mov
out
addb
mov
jae
inc
mov
scas
pusha
flds
loopne
inc
rep
cmp
leave
push
shll
jbe
rcl
jo
jg
inc
cli
xor
das
inc
lods
inc
inc
cmp
pushf
lods
jge
xchg
mov
adc
push
loope
cmp
cmpl
cs
test
xor
pusha
inc
rolb
inc
push
sahf
jp
push
and
jl
daa
sbb
jb
movsl
sbb
clc
je
adc
sub
jp
adc
xor
ljmp
adc
and
inc
ljmp
sub
lock
negl
fwait
jg
es
add
dec
xchg
mov
bswap
mov
pop
sub
loop
call
nop
inc
pop
in
add
xchg
ret
or
cs
jne
fildl
mov
pop
shrb
rol
in
jl
add
mov
in
cmpsb
cmpsl
add
push
stos
lds
lea
repz
push
mov
insb
stos
xlat
mov
xorl
sti
filds
jle
sbbb
xchg
xchg
mov
iret
aam
imul
dec
jmp
jmp
pop
aas
jb
adc
lock
dec
imul
test
or
pop
test
jmp
xchg
fs
inc
cmp
dec
jo
push
leave
ljmp
pop
mov
pop
dec
lcall
int3
jno
mulb
test
adc
mulb
mov
xchg
je
sub
sub
cmp
leave
mov
push
mov
call
mov
lcall
imul
cmp
fsub
inc
sub
mov
cmp
mov
pusha
repz
xor
bound
fcmovnbe
ret
imul
lods
pop
jbe
movsb
fisubs
cmp
pop
mov
test
aam
fcomps
mov
add
push
inc
mov
lahf
dec
push
mov
push
inc
loopne
add
jg
imul
sbb
add
lret
push
aad
jo
xchg
rcrb
out
xchg
shl
ss
pusha
sti
or
or
push
add
mov
push
fldt
jecxz
inc
daa
adc
push
les
mov
cmp
into
insl
cld
mov
push
or
or
pop
call
std
movsl
sub
mov
or
loop
jg
push
jle
push
inc
shr
mov
mov
lock
lahf
mov
js
mov
stos
mov
pusha
jae
int
and
lea
lods
push
add
mov
shlb
cmp
adc
rcr
dec
pop
negb
clc
inc
pop
mov
mov
ja
xor
shrl
movsb
nop
mov
rcl
test
loop
and
out
sub
pop
xor
push
aam
xor
sub
mov
lret
inc
and
fisubs
shrb
insb
ja
test
ljmp
mov
add
cltd
xor
jge
loop
cmp
stos
cmpsl
lcall
lea
sub
sub
add
add
xor
or
add
fcmovb
push
add
cmp
dec
xchg
mov
arpl
or
shll
push
shll
push
ss
cmp
jmp
sub
push
outsb
xor
push
sub
jge
daa
popf
pop
pop
cmp
rol
cli
nop
or
dec
adc
xchg
enter
fistps
push
mov
pop
cmc
inc
mov
call
mov
jle
sbb
dec
jmp
xlat
ret
stos
xor
je
dec
bound
insl
push
test
mov
mov
sbb
stos
cmp
mov
push
push
inc
mov
test
movsb
data16
push
and
faddl
fwait
jmp
cmpsl
loope
sbb
lock
imul
loop
mov
js
and
filds
jo
loopne
xchg
inc
dec
sub
popa
pushf
add
shll
pop
mov
pop
adc
roll
arpl
daa
push
dec
inc
pop
add
adc
fistpll
iret
sub
push
add
loope
jmp
sub
or
mov
mov
les
insb
cmp
sub
call
sbb
xchg
push
bound
push
sub
fwait
scas
jne
push
inc
loopne
mov
ret
xlat
sub
movsb
int
mov
sub
jns
pusha
xchg
cli
mov
negb
lcall
xor
or
outsl
mov
lods
data16
push
cmp
jg
je
js
lcall
jmp
imul
jns
pop
std
pop
lret
pop
push
out
loopne
leave
sub
or
push
aaa
mov
jl
push
aad
icebp
cmp
push
mov
pop
cmp
ljmp
add
int
dec
les
and
push
push
frstor
push
xchg
out
clc
jmp
xchg
jae
out
dec
lret
es
lods
or
sbb
and
fldcw
cld
pop
jge
cmp
xchg
mov
mov
adc
dec
jno
jns
jb
sbb
clc
or
out
repz
stos
or
movsb
adc
xchg
mov
stos
adc
scas
or
ja
fstpl
lcall
dec
popa
sub
xorb
sbb
fmulp
js
in
inc
pop
sbb
loope
int3
pusha
pop
jg
test
pop
incl
mov
loopne
mov
sahf
mov
pop
pop
movsb
mov
stos
pop
bound
add
filds
pop
add
jmp
ficoms
in
mov
sbb
out
lret
mov
sarb
enter
or
ret
aam
sub
cli
mov
xor
dec
outsl
push
jnp
or
cmpsl
add
lahf
aad
sub
and
mov
test
std
xor
xchg
dec
jg
pop
jp
fsubl
add
imul
or
cmc
and
leave
jecxz
and
or
mov
ud1
into
popf
loop
sti
xor
xlat
and
jg
iret
fadds
loopne
test
xor
popa
repz
xchg
push
aaa
add
cmpsb
push
mov
out
push
gs
je
cmc
mov
or
add
mov
pop
loop
sbbl
push
push
enter
push
into
lods
jg
outsb
pop
cltd
adcl
lcall
repnz
mov
aad
sub
push
repnz
inc
push
pop
ljmp
cwtl
or
or
jo
out
mov
stos
stos
cld
pop
xchg
adc
aam
mov
imul
sub
adc
in
mov
repz
mov
imul
jge
inc
sbb
sbb
js
pop
mov
push
inc
ss
adc
add
jge
js
mov
sar
roll
test
add
inc
out
xor
orb
cmp
or
sub
adc
ljmp
lods
shl
mov
mov
inc
and
add
pop
fldl
pop
mov
adc
cmp
cmovne
adc
mov
je
inc
roll
sub
adc
pop
sbb
lret
scas
and
pop
stc
shl
arpl
push
cli
faddp
call
add
lahf
mov
or
fistpll
sub
jmp
adc
xchg
mov
lock
pop
push
gs
fld
lock
out
sahf
lea
pusha
lock
nop
push
push
lock
pushf
mov
cwtl
fwait
clc
cmp
xchg
repz
je
rolb
adc
inc
ds
clc
popf
sub
fsts
dec
movsb
ljmp
mov
add
adc
out
jle
adc
int3
pop
es
mov
das
add
ror
add
jo
bnd
mov
rcrb
pushf
inc
xor
cmp
jne
inc
pop
jg
xchg
je
jg
lea
fwait
clc
push
add
cli
stos
ret
add
adc
aas
hlt
clc
call
add
push
and
add
mov
add
mov
pop
jle
loope
inc
es
inc
ljmp
pop
cmpsb
push
mov
mov
ret
mov
sbb
cmp
xor
mov
dec
and
loopne
push
push
pop
aas
push
stc
adc
xchg
dec
iret
jg
mov
jnp
dec
loopne
outsl
aam
int
outsw
push
cld
pop
scas
hlt
or
dec
adc
jne
roll
in
sub
rcll
dec
or
ja
sbb
sbb
push
xor
stos
or
lret
add
and
leave
sbb
mov
jo
pop
popa
addb
and
fcmovb
or
jecxz
push
mov
das
loop
sahf
lret
or
sbb
adc
rcll
faddl
inc
xor
icebp
fcoml
mov
out
orb
lock
xor
in
xchg
sbb
pusha
jp
arpl
stc
mov
js
cmp
push
push
jmp
mov
shll
mov
add
daa
jge
sarb
ficoms
pusha
adcl
int3
xchg
sbbl
dec
adc
out
std
adc
je
xor
insb
xor
sub
imul
jle
xchg
mov
mov
out
sub
movsb
pop
inc
xchg
insb
inc
movsb
sub
sbb
scas
inc
rolb
pop
stc
lahf
pop
aaa
dec
xor
mov
es
and
pop
or
pop
cld
ret
aam
cs
dec
jp
sub
testl
clc
movsl
jle
inc
scas
andb
testb
lock
add
int
ret
shll
mov
stos
pop
inc
daa
lea
out
mov
mov
dec
add
fnstsw
xor
les
rcrb
out
in
cltd
out
repz
sub
and
push
push
clc
daa
loope
addr16
ds
test
fisttps
mov
jmp
and
jnp
add
shlb
pusha
sub
cwtl
fldenv
adc
bound
dec
add
insl
popf
decb
fsts
lods
mov
or
popa
xor
jge
cmp
repnz
mov
adc
or
ja
and
lcall
add
push
clc
xchg
lock
les
lods
scas
push
sti
sbb
mov
aam
or
ja
les
adc
inc
hlt
xor
push
cmp
decl
pushl
jns
sub
inc
ret
cmp
xchg
or
sbb
rorl
incb
shlb
movsb
aam
loop
jp
js
cmp
popf
stos
xchg
mov
sub
fcomps
cmpl
je
mov
mov
movsl
rcr
jno
movsb
sbb
ret
shrb
cmp
mov
inc
dec
sbb
xor
push
add
mov
xchg
lahf
test
inc
dec
add
stos
fwait
mov
add
xor
mov
xchg
out
das
incb
movsb
lds
and
fcoms
clc
push
je
mov
pop
jge
addl
mov
loop
imul
lahf
out
pusha
cld
pop
dec
addr16
mov
sbb
fdivr
push
pop
lret
push
adc
outsb
dec
clc
dec
push
cmp
push
mov
fldcw
adc
pop
nop
ds
mov
push
sbb
sahf
xchg
jp
mov
test
lret
shrb
mov
jns
cmc
inc
mov
add
subb
push
std
sbb
cmp
mov
and
add
stos
jne
jge
les
mov
xchg
sub
pop
stc
add
or
push
fidivrl
lock
icebp
mov
gs
xchg
push
dec
ret
movsl
mov
mov
add
sub
mov
stc
inc
pop
jg
cmp
outsb
xchg
in
push
imul
aad
xchg
pop
jo
inc
ds
xchg
popa
push
lcall
xchg
movsl
lret
mov
mov
int
lret
clc
arpl
test
inc
out
sbb
repz
xchg
xorb
add
data16
push
pushf
push
adc
or
pop
mov
ucomiss
xor
mov
loope
add
popa
jb
sbb
out
xor
or
loope
cmpsl
test
mov
rcl
push
data16
or
mov
mov
xchg
iret
jae
add
cmc
inc
data16
aaa
lock
iret
cli
sbb
cwtl
push
cmp
jae
jmp
lods
or
mov
dec
pop
lret
jae
fsub
fisubl
jecxz
mov
inc
cld
push
jmp
enter
in
in
rcll
out
lods
ja
add
jge
pop
scas
sbb
dec
inc
mov
int
jnp
pop
cmc
xchg
mov
mov
outsl
clc
pop
pop
movsl
inc
pop
sub
js
in
inc
mov
sar
shll
popa
lret
mov
xchg
sbb
mov
mov
jmp
fwait
lret
pop
add
or
mov
push
push
orb
repnz
les
mov
adc
sbb
loopne
cmpb
xor
ljmp
or
dec
adc
fcmovne
cmp
dec
mov
in
push
inc
sti
movsl
clc
inc
lea
xor
cmp
sbb
push
into
pop
mov
roll
cmpsl
frstor
test
add
lret
or
inc
push
add
aam
idivb
popf
pop
jo
je
roll
and
mov
faddl
and
mov
popf
ja
adc
and
jnp
dec
push
scas
imul
bound
lods
add
xchg
fwait
repnz
pop
js
shll
dec
imull
incb
or
and
hlt
lods
xchg
iret
or
cld
adc
sarl
pop
xlat
ret
xchg
xlat
das
out
xchg
jle
pushl
mov
icebp
inc
xchg
add
call
mov
inc
adc
filds
inc
cmp
fimull
dec
lahf
outsl
mov
sub
add
scas
fadd
dec
dec
ret
and
idivl
ret
mov
inc
add
mov
and
mov
sbb
or
and
sbb
sub
dec
pop
push
xor
mov
xchg
mov
cmpsb
mov
das
xor
xchg
sub
xor
jp
shlb
cltd
out
test
xchg
xchg
mov
int3
and
insl
and
push
xchg
inc
mov
mov
test
jne
and
lock
and
push
frstor
inc
fucomip
cmpsb
add
or
std
loop
cmpsl
jnp
fwait
jne
out
add
and
imul
adc
clc
iret
pop
add
or
inc
out
outsl
mov
xchg
mov
push
aaa
cmp
lcall
sub
mov
int3
testb
mov
cli
aad
scas
sub
loopne
in
and
add
lcall
mov
ds
dec
sarb
inc
sub
and
xchg
pop
rorl
push
xor
sub
adcb
jp
int
push
cld
insb
cmc
imul
cmp
add
bound
sbb
add
movsl
lcall
dec
mov
or
add
cld
adc
movlps
sbb
add
pop
cmp
fcmovnb
inc
clc
dec
mov
lahf
inc
xchg
shll
outsb
adc
pop
jne
int3
aas
rcll
or
mov
popl
or
inc
jmp
mov
in
loope
aad
rcll
cmpl
sub
mov
inc
pop
outsb
cmp
add
cmp
sbb
nop
mov
nop
jmp
fsubrl
pop
inc
jbe
inc
jge
mov
pop
jle
dec
clc
data16
mov
cld
mov
pusha
push
outsl
sub
mov
xorl
and
mov
loopne
jns
mov
xor
mov
ret
or
mov
lahf
jo
pop
xor
movsl
cmpsl
cmc
ja
inc
subl
cwtl
cmovg
jge
or
and
push
lock
arpl
xor
lds
or
movsb
mov
jmp
mov
and
jmp
test
mov
lahf
mov
fs
push
mov
js
push
add
jbe
divl
lea
int
ja
cmp
pop
es
mov
and
loop
aaa
or
mov
mov
cmp
fwait
loopne
loopne
cmpsb
mov
mov
jmp
pop
cmp
mov
jp
outsb
mov
xor
cwtl
jecxz,pn
add
imul
stos
adc
mov
daa
imul
popf
dec
int3
pop
cmp
sbb
popa
cmp
jmp
jo
cwtl
cmp
leave
loopne
lea
cmp
pop
clc
dec
shll
imul
inc
jns
outsl
cmp
pusha
dec
mov
mov
mov
inc
xor
xorl
xchg
lahf
or
fwait
adc
stc
mov
or
fistpll
jbe
std
mov
jbe
xor
data16
or
xchg
cltd
mov
cmp
and
inc
in
fisttps
sub
hlt
cmp
rolb
cmpsb
int3
cli
ret
rdpmc
orb
pop
cmpsb
popa
mov
movsb
sub
mov
jo
adc
mov
push
push
in
push
pop
inc
clc
sub
jae
into
push
fdiv
mov
add
fstl
insb
adc
inc
jmp
fists
gs
in
outsb
and
cmpsl
mov
loop
xor
xchg
dec
mov
pop
xlat
or
and
in
out
outsl
and
or
sub
movsl
dec
or
pop
sahf
adc
std
dec
loopne
pop
mov
push
aam
out
push
push
cs
push
push
cmpsb
outsl
cmc
mov
scas
adc
loope
ror
xchg
inc
faddp
dec
add
lret
adc
jbe
lret
mov
add
and
pop
push
je
cwtl
loop
hlt
cltd
xor
dec
cmp
add
xchg
or
sbb
jbe
pop
jmp
xor
push
adc
das
ljmp
mov
pop
mov
inc
aas
mov
jmp
lcall
push
test
test
inc
mov
inc
int
jo
mov
push
jo
test
jnp
jb
adc
inc
inc
mov
pop
lret
lret
and
rcrl
xchg
jnp
test
inc
jg
sbb
jo
or
imul
test
push
rorb
hlt
mov
andb
jg
add
push
jne
sub
adcb
cwtl
in
xchg
js
push
rcl
add
xor
or
pop
rcll
repz
inc
mov
jmp
lods
cmp
mull
mov
pop
push
sbb
xor
add
aas
jne
xchg
out
arpl
loope
andl
lahf
mov
cmc
sbb
push
mov
jae
push
insb
repnz
negl
fst
add
dec
mov
cmc
enter
mov
and
pop
sbb
dec
cmpsl
fidivrl
mov
sbb
xor
out
sti
sbb
cs
cli
out
mov
cmpsl
rcrl
sub
pusha
sbb
es
out
daa
aas
aad
mov
cmp
popl
push
mov
sub
adc
or
cs
ror
pop
inc
inc
or
cmp
ja
or
out
gs
fistps
xor
std
cmp
xor
inc
jmp
adc
dec
fstpt
xchg
outsb
sbb
or
sar
into
orb
or
leave
adc
cmp
fisttpll
roll
xor
push
enter
lock
movl
push
call
enter
dec
mov
pop
out
lcall
xchg
push
push
dec
dec
addr16
icebp
xchg
movsb
and
leave
xchg
scas
mov
pop
mov
loope
repnz
rol
pop
loopne
sti
mov
mov
push
fadds
cmc
rorb
jne
mov
lahf
inc
mov
popf
cmp
sub
andb
inc
sahf
fcmovne
cmpsl
sbb
jne
sub
jno
sbbl
shl
rolb
jp
dec
pop
fcmove
push
ss
inc
jne
sbb
in
sbb
xor
xor
add
fstps
push
hlt
in
inc
rolb
mov
adc
sub
into
adc
cltd
push
pop
mov
fcompl
jg
mov
movsb
sbb
fs
mov
cmpsb
pop
cmp
icebp
mov
cmp
pop
pop
xchg
mov
sbb
xor
mov
mov
lret
or
fsubp
jns
inc
fildll
jbe
out
stos
xchg
sub
pop
xchg
loop
enter
fwait
pop
mov
imul
or
mov
inc
dec
stc
loopne
mov
mov
dec
fiaddl
xchg
push
mov
ret
inc
mov
test
cmp
orl
orl
lret
inc
std
mov
xchg
daa
dec
addr16
sbb
roll
sbb
pushf
pop
mov
add
pop
dec
xchg
stos
pop
shl
testl
sub
test
call
mov
addr16
cwtl
sub
in
arpl
add
pop
fdivs
mov
mov
or
iret
xchg
js
scas
les
sub
dec
mov
inc
clc
push
loop
rorl
adc
adc
fcomp
dec
mov
into
or
jns
xor
shlb
stos
jns
pop
push
rcll
mov
inc
jmp
les
lret
xor
and
dec
push
jp
sub
pop
addr16
jae
adc
fpatan
mov
pop
xor
or
jns
dec
lahf
cmp
jae
movl
cmp
ss
jle
fcmovb
sub
push
pop
mov
inc
or
sbb
lds
mov
notl
or
jo
ja
loope
and
mov
push
cli
js
mov
std
adc
jmp
clc
sahf
adc
in
movb
jecxz
sahf
sbb
adc
es
add
dec
mov
mov
mov
mov
dec
cmp
add
ss
xchg
sbb
add
pushf
bound
push
addb
arpl
fimuls
xor
nop
movsb
out
mov
push
nop
mov
ret
mov
test
pop
andl
das
xchg
aad
or
inc
mov
adc
or
ss
lahf
arpl
stos
push
ret
jbe
clc
add
je
lock
mov
mov
and
xchg
cli
mov
sub
jo
lds
fadds
dec
jge
dec
jmp
dec
inc
fstl
inc
cmpb
aam
push
xchg
dec
loopne
jb
adc
pop
adc
inc
or
jmp
jne
scas
mov
imul
pop
jle
adc
push
dec
pop
inc
ret
cmp
sbbl
ljmp
mov
mov
sbb
sub
push
fstpl
mov
push
xor
jle
call
fldl
pop
sbb
fs
mov
pop
push
les
xchg
push
loope
jo
pop
xor
insl
loop
js
cmc
sub
inc
pushf
adc
cmp
bound
lds
addr16
test
pop
inc
sti
lahf
mov
pusha
cld
sbb
jmp
pop
push
and
ljmp
mov
ja
pop
pushl
jb
sbb
inc
mov
dec
dec
inc
dec
xor
stc
in
aad
fistpl
test
mov
hlt
inc
shll
loop
add
push
jl
mov
jecxz
test
sub
pop
aas
movsb
jmp
mov
outsb
pop
push
jo
imul
and
pop
or
dec
cmp
jns,pn
rcll
xlat
in
push
xchg
push
cmp
popf
xlat
pop
dec
and
xor
inc
and
adcb
lods
pop
cmc
jle
inc
daa
outsl
stos
jno
repnz
mov
mov
stos
cltd
cs
xchg
add
sbb
add
mov
sti
aas
cmpsl
sbb
subb
or
outsl
adc
inc
mov
mov
xchg
xchg
icebp
mov
push
mov
cmc
sti
js
ret
sub
pop
repnz
clc
cmp
lock
jg
popa
mov
jg
je
cmp
inc
clc
outsl
sub
dec
adc
imul
pop
xor
jmp
push
ja
mov
jno
test
test
ret
add
daa
add
roll
enter
cmpsl
sub
outsl
mov
test
orb
fsubl
fistpl
jge
ret
mov
pusha
mov
push
stos
sub
or
cli
ret
filds
aas
fldenv
cli
inc
lret
add
call
dec
push
pop
cmp
fmull
out
cmp
mov
add
adc
push
dec
je
xchg
pop
inc
ss
adcl
loopne
mov
inc
adc
inc
mov
mov
sti
fadds
mov
call
pop
orl
sbb
shlb
outsl
negb
sbb
repz
fcompl
add
mov
inc
popa
testb
out
sbb
mov
or
and
dec
push
xchg
mov
movsl
pop
pop
in
xor
hlt
loopne
sahf
dec
and
repz
fs
cltd
dec
xchg
jne
fst
stc
mov
clc
mov
into
mov
cmc
stos
jge
cmp
or
es
and
or
xlat
or
int
sbb
call
adc
dec
mov
leave
add
das
lcall
add
mov
push
lds
xor
lcall
bound
xchg
push
je
test
xchg
mov
out
jmp
mov
ss
fistpll
mov
jns
hlt
insl
push
dec
sti
ljmp
cltd
jecxz
or
push
push
and
dec
rcrb
out
sbb
add
or
test
mov
push
xchg
sub
jle
adc
icebp
popa
arpl
add
adc
pop
inc
lods
cmp
mov
mov
les
pop
popf
arpl
mov
std
or
daa
data16
xor
scas
xor
fisubl
sbb
or
sahf
popa
jb
jb
sbb
lret
xor
xor
cli
add
jne
pop
rol
jge
add
cmp
and
mov
dec
push
fsubs
arpl
sti
aas
mov
jo
cmp
leave
fbstp
push
pop
and
outsl
ret
bound
cmp
adc
ljmp
push
mov
or
gs
xchg
push
mov
mov
dec
test
test
insb
arpl
loope
push
inc
add
jge
pop
sbbl
rclb
push
jecxz
ljmp
ret
fimuls
inc
aaa
and
or
ret
pop
mull
jmp
mov
stc
fnstcw
or
xchg
dec
cmp
mov
fimuls
inc
jnp
mov
clc
fdivr
incl
cld
xor
sub
subb
inc
sbb
or
push
lahf
mov
pop
mov
pushf
pop
js
pop
rorl
mov
push
dec
sar
and
mov
pop
dec
js
lods
dec
cltd
inc
in
outsb
adc
lds
lock
aaa
mov
fstp
int
outsl
int
ja
mov
inc
xlat
and
mov
lea
mov
mov
lahf
mov
xchg
ja
pop
mov
mov
inc
into
lret
lock
test
loopne
and
jl
mov
cmp
sbb
jecxz
mov
aas
pop
xchg
sub
inc
sti
add
in
add
cmp
sbb
mov
pop
pop
fisttpl
scas
mov
sahf
push
pop
test
mov
mov
addr16
inc
out
daa
fisttpl
daa
xchg
fucom
les
loope
add
aaa
push
pop
mov
adc
test
xor
push
xchg
hlt
dec
lock
xchg
add
lret
add
out
xchg
arpl
rcll
lret
mov
idivb
nop
sbb
imul
push
adc
dec
xor
dec
dec
adcl
scas
orl
ss
dec
cmp
push
mov
jbe
pusha
idivl
inc
ljmp
mov
lea
mov
cmpsl
sar
adcl
jo
pop
and
out
push
sbb
lret
pusha
and
dec
adcb
dec
lahf
imul
daa
inc
and
call
fmull
mov
pop
aam
rcrl
scas
nop
stos
dec
jl
xor
sub
stos
push
jle
mov
test
sbb
imul
test
pop
cmp
ret
je
xchg
ds
insb
cmp
cmc
stos
and
mov
push
xchg
rclb
jecxz
cmpsl
int
in
xchg
push
jge
sarl
adc
insb
xchg
dec
jne
stos
mov
and
rcrb
mov
adc
add
dec
cmp
test
mov
arpl
dec
add
scas
lcall
push
pop
pop
lods
outsl
push
jo
popa
cmp
mov
vmwrite
push
stc
mov
js
add
cmc
decl
out
jo
and
pop
lahf
inc
scas
sub
sub
xchg
fnop
sub
jmp
add
mov
popa
nop
mov
int3
pusha
lea
ljmp
add
cmp
and
xor
add
cmp
push
loope
xchg
xchg
cmp
mov
popa
jge
aam
cmpsl
cmp
or
jmp
pop
lret
andl
push
popf
mov
adc
ljmp
imul
ss
int3
mov
mov
xor
pop
std
inc
bound
jl
or
movsb
fidivl
in
push
jecxz
subb
ror
inc
gs
sarl
iret
movsb
in
pop
pop
mov
sbb
mov
aaa
movsl
inc
jg
popl
jb
sub
sbb
push
jnp
stos
lcall
mov
insl
es
mov
cmp
cmp
sub
add
out
mov
test
pop
sbb
adc
popf
and
and
jge
cmp
ljmp
lcall
cmp
sbb
call
sti
push
dec
dec
mov
pop
sbb
ret
imul
rclb
inc
mov
shll
std
add
div
and
sub
push
ret
call
adc
stc
pop
adc
and
fmul
mov
push
and
icebp
imul
inc
xchg
movsb
mov
cmpsl
loope
or
movsb
icebp
push
iret
jns
cs
scas
cmpsb
cmp
sti
cmp
subb
xor
push
clc
mov
cmpsb
dec
enter
pop
xchg
add
fldcw
dec
push
cli
mov
daa
or
mov
mov
mov
jl
enter
inc
cmpl
insb
mov
sti
jae
xor
insl
mov
and
lret
popf
mov
jl
or
inc
es
call
and
mov
bound
cmp
fmuls
push
popa
les
cwtl
lock
fdivr
or
aaa
sub
jo
in
enter
mov
xor
jmp
out
in
arpl
jnp
push
sbb
mov
outsb
out
dec
mov
mov
jb
inc
gs
std
movsb
test
sub
out
pop
mov
or
xchg
and
rep
scas
mov
je
loopne
push
fnstcw
cwtl
je
add
test
shrb
incb
mov
sbb
adc
mov
loop
xor
cmc
mov
adc
add
xor
xchg
test
sbb
lcall
rcrb
movsl
push
sbb
add
js
cs
mov
xor
pop
fbld
pop
je
pusha
imul
jb
rclb
pop
jl
cmc
mov
push
xchg
int
bound
jo
xchg
pusha
add
mov
cs
jo
sub
mov
call
mov
jecxz
fs
mov
mov
sbb
in
xchg
jmp
cmp
lea
aam
ds
cmp
jnp
jb
rorb
and
sbb
or
adc
mov
xchg
nop
push
in
repnz
mov
ds
push
iret
and
adc
sub
aam
add
hlt
dec
movsb
sarl
leave
out
cli
decl
nop
jg
ljmp
int
std
xchg
jmp
mov
pushl
fdivs
mov
sub
test
addb
std
cmp
push
and
lcall
ret
adc
cmovno
popa
lock
pop
inc
dec
pusha
movsl
lods
aam
loop
xor
imul
sub
rorb
int
icebp
fst
jno
fwait
mov
sub
mov
repnz
out
jle
jne
dec
icebp
jo
popa
cli
shlb
mov
sub
dec
jmp
ja
pop
movsb
adc
cmp
nop
and
incb
add
scas
pop
inc
push
dec
repnz
fs
shll
xor
leave
add
iret
movl
mov
test
fcomi
aas
and
enter
in
lock
cli
mov
ss
iret
test
mov
daa
lret
insl
outsb
outsb
cli
stc
dec
add
pusha
out
add
mov
loopne
cld
out
lods
ss
sub
push
pop
xchg
cmp
imul
and
jecxz
push
push
addl
aad
push
call
inc
push
cmp
testb
cld
arpl
nop
incb
jo
inc
jmp
adc
insb
dec
pop
push
icebp
aam
inc
lcall
cmp
call
pop
add
arpl
push
jmp
pop
push
shll
shrb
pop
inc
add
xor
lods
mov
inc
add
insb
inc
imul
dec
dec
dec
outsb
or
push
cltd
xchg
loopne
cmp
and
ficoml
cmp
or
ja
dec
or
adcl
xchg
mov
leave
pop
imul
and
cld
stc
sbb
mulb
filds
xor
lret
push
xor
ret
pop
jns
cmp
jo
sbb
mov
inc
sub
aad
scas
pop
mov
add
pop
xor
mov
xchg
add
push
cld
lahf
cs
aad
fs
aaa
insl
fnstcw
and
pop
mov
into
and
shl
mov
lock
jg
jecxz
mov
hlt
sub
mov
dec
xchg
aas
xchg
xlat
lret
sub
pop
adc
mov
push
leave
enter
cltd
rcrl
dec
adc
sbb
js
rolb
cmpsl
scas
ret
pop
in
inc
sysexit
in
mov
stos
sbb
rcrl
rcll
mov
add
cmpl
add
cld
jg
mov
fs
mov
cmp
or
cmp
push
add
adc
add
pushl
xor
mov
cmp
add
xchg
aam
mov
sbbl
mov
mov
sbb
inc
mov
pusha
add
xor
rcrb
fidivrl
aad
add
insb
jo
fwait
inc
push
xor
push
daa
add
xchg
leave
add
cmp
outsb
bound
or
outsl
pop
pop
test
mov
ret
out
push
stos
mov
adc
rolb
jmp
pop
pop
jle
push
mov
add
and
jecxz,pn
cmp
addr16
lret
xchg
mov
hlt
leave
push
pop
jg
test
cmp
xchg
or
jmp
adc
popa
sbb
sbb
ljmp
sarb
shlb
lock
gs
loopne
movsb
mov
pop
insb
or
aas
mov
data16
xor
add
jg
sarl
add
sahf
adc
inc
jl
lods
or
push
mov
lret
fdiv
dec
shlb
in
xchg
gs
stos
mov
mov
cli
or
pushf
adc
jo
rcl
shll
addl
pop
jle
mov
xorl
push
inc
ss
cmp
and
lcall
jmp
add
mov
stc
testb
shrl
mov
js
push
test
mov
in
xor
jle
lock
fidivl
dec
mov
dec
lcall
push
dec
clc
sub
pop
js
test
jecxz
jbe
xor
ror
lock
dec
cmp
adc
add
in
les
inc
ret
push
into
add
sub
mov
cmp
add
inc
dec
fisubrl
add
mov
xchg
jmp
cmp
incl
sub
clc
into
or
xor
cmp
mov
add
sbb
lock
jbe
fiadds
fsubs
in
pop
test
sub
add
lcall
inc
shrl
dec
popf
pop
xor
test
push
jns
repnz
call
je
jae
cmp
adc
fwait
sub
jle
mov
in
das
lock
cltd
inc
dec
dec
pop
xor
inc
pop
mov
ja
repz
dec
jns
pusha
or
push
dec
or
dec
jecxz
mov
dec
fcompl
inc
mov
or
test
sbb
xor
test
fimull
pop
ljmp
sub
mov
roll
sti
inc
movsl
mov
fsubs
subl
clc
add
sub
fwait
mov
stos
jo
sbb
inc
xchg
ret
cltd
sbb
test
arpl
pop
mov
or
xor
mov
imul
sbb
sarl
lret
int3
lods
and
fisttps
sbb
sbb
and
out
mov
pop
push
hlt
cmp
sub
shr
or
jg,pn
xchg
lret
sbb
push
repnz
roll
adc
push
andl
hlt
testl
mov
xchg
aam
cmp
cmp
aad
pop
pop
push
aad
and
hlt
or
and
push
jecxz
and
dec
pop
ret
clc
xchg
stos
or
in
mov
inc
je
xor
add
das
jo
ljmp
jg
or
das
cmp
lahf
sbb
mov
dec
stos
clc
in
test
push
add
xor
lahf
hlt
pusha
xor
inc
jmp
and
mov
mov
int
pop
or
fcom
sbb
test
lret
hlt
test
inc
jae
out
mov
dec
adc
rcr
jmp
push
xchg
mov
adc
sbb
imul
fucom
jmp
mov
pop
adc
adc
jle
or
cs
pop
ja
and
repz
xor
insb
mov
btc
xor
inc
ret
fistps
in
add
sub
lock
ficompl
aam
imul
jl
mov
daa
jecxz
loop
jge
mov
out
std
mov
mov
sub
lock
ljmp
jmp
adc
fucom
adc
dec
cmp
jo
movsb
das
rol
or
xor
mov
adc
or
out
mov
into
cld
pop
mov
fildl
mov
add
and
stos
inc
push
enter
enter
in
mov
rcll
test
loope
in
adc
les
cmp
mov
sub
sub
mov
adc
mov
xchg
jo
subb
add
dec
inc
pop
cltd
mov
jae
jle
mov
je
loopne
andb
inc
fmulp
incb
outsl
loope
jmp
loopne
and
nop
xchg
push
lods
ljmp
out
mov
mov
mov
mov
cld
out
or
inc
std
mov
js
test
fwait
pop
hlt
xchg
inc
test
ret
push
inc
out
cs
xchg
cmp
jge
jl
inc
inc
popa
pop
inc
or
and
fsubl
mov
add
xchg
sub
pop
in
mov
pop
adc
mov
mov
pop
cmp
popf
rol
push
add
jnp
fwait
pop
jb
push
in
mov
fcoml
jno
cli
pusha
push
scas
pop
aaa
mov
add
test
inc
sub
fisubl
out
mov
mov
push
call
outsb
bnd
je
mov
inc
mov
dec
imul
call
pop
add
out
loop
imul
sbb
add
bound
adc
out
push
lea
mov
addr16
add
adc
shrb
cld
or
xorb
cld
jecxz
prefetch
mov
push
pop
rcrl
push
sahf
clc
mov
jecxz
fimuls
aam
addl
sbb
outsb
test
roll
loop
jle
or
adc
push
push
clc
sbb
stc
cmp
push
and
cmp
lods
sbb
add
add
jl
push
sub
pop
outsl
lods
cmpsb
loopne
ret
mov
or
mov
out
es
addl
dec
inc
in
je
sbb
pop
sbb
jo
xchg
cmpsl
and
jo
lods
fcoms
adc
cmp
std
ret
call
jb
fs
xchg
in
lock
add
cmp
pushf
clc
jne
mov
jb
add
add
jnp
or
movsl
add
fistl
xor
adc
mov
dec
cmp
lds
pop
fisttpl
add
call
fisubs
fisttpll
pop
mov
icebp
fwait
jno
jle
insb
loopne
cmpsb
outsb
shlb
inc
insl
sbb
fwait
push
pop
cmp
icebp
adc
mov
sub
adc
push
add
sub
negl
adc
add
mov
je
cmp
testb
cld
add
sub
test
pop
je
jb
dec
inc
movsb
mov
shrl
fnsave
xchg
lods
das
call
ds
pushf
aam
scas
lahf
dec
lcall
fidivrs
in
sbbb
sub
popa
roll
and
inc
mul
mov
cmpl
outsb
pop
push
adc
imull
and
inc
popf
push
fdiv
dec
xor
add
pop
sub
push
dec
add
cmpsb
mov
test
xor
xor
dec
call
daa
dec
cmp
pop
xor
fsts
hlt
rolb
int
andl
or
into
xor
std
pop
mov
push
adc
arpl
mov
das
sub
jns
jge,pt
inc
dec
push
cwtl
lahf
mov
dec
add
jmp
loop
test
mov
cmp
jecxz
xchg
lahf
sbb
sbb
icebp
sub
sbb
sbb
pop
stc
scas
pop
imul
js
in
push
add
pop
jo
xor
ljmp
int3
sbb
stos
in
jmp
jmp
loop
sub
push
icebp
cmovo
and
jg
in
or
push
sarb
lea
scas
jl
add
cld
aad
xor
aad
dec
dec
shrb
jp
mov
jg
sub
mov
add
das
insl
sub
mov
mov
call
rolb
xor
imul
test
xchg
push
out
ds
mov
xchg
fnstsw
xchg
push
clc
std
sete
sub
outsl
andl
addb
inc
sbbl
mov
sub
test
test
iret
add
imul
push
jbe
adc
sub
pusha
sub
and
cli
pop
adc
js
sbb
or
shl
adc
push
aad
daa
or
adc
sti
xor
aaa
sbb
pusha
js
inc
adc
mov
push
imul
add
into
lock
sub
lea
in
arpl
pusha
loop
icebp
in
aad
aaa
shlb
and
outsl
in
movsl
imul
sbb
push
or
repnz
xchg
mov
xor
xchg
lock
sbb
ret
test
enter
push
decl
mov
les
xchg
push
cmpsl
adc
ja
sub
mov
fwait
clc
lret
mov
test
repz
push
inc
jmp
lock
hlt
scas
or
jg
fnstcw
adc
or
ret
sbb
std
push
push
add
lds
jmp
aam
xchg
clc
xchg
mov
pop
or
cmp
shll
xchg
inc
lods
in
jg
lds
pop
inc
sbb
add
imul
fucomip
xchg
push
lds
push
push
xor
jnp
mov
or
pop
insl
imul
xchg
push
jle
std
loopne
sti
add
dec
pop
pop
out
jecxz
bound
pop
adc
imul
jp
xor
xor
in
shll
inc
sbb
sub
lret
fstpt
jno
add
aaa
jge
jmp
iret
cmp
adc
and
sub
test
imul
aas
mov
cmp
cmp
mov
pop
dec
inc
ficompl
repnz
aaa
inc
jmp
jg
sbb
pop
shlb
stc
fisubrs
andl
and
or
cmp
push
decb
and
or
sbb
or
xchg
and
mulb
pop
sbb
adc
inc
iret
in
in
in
ds
add
setge
mov
mov
pop
cmp
jl
inc
fs
add
dec
dec
xchg
mov
mov
outsl
push
loop
or
scas
lret
bound
testl
cld
cmp
mov
pushf
sbb
js
shll
adc
clc
mov
fdivl
addr16
ss
addb
sbb
or
jg
call
insb
xchg
enter
sarl
add
jae
sbbb
icebp
push
sub
leave
jo
xor
lcall
cmp
shrl
push
cs
mov
test
test
dec
out
insl
rcll
movsb
aam
inc
ret
cmp
jno
xchg
cmp
jl
jmp
into
mov
xchg
xor
pop
hlt
sub
or
xchg
scas
mov
out
jmp
jecxz
sbb
in
mov
sbb
nop
add
das
push
mov
movsl
add
or
cld
fwait
cmpsb
jge
adc
mov
xchg
add
daa
pop
pop
xchg
outsb
fsubs
ret
insb
test
and
std
test
push
lds
test
and
fmul
mov
mov
ja
loop
out
dec
lods
xor
xchg
and
pusha
pop
add
scas
jl
sub
enter
ja
xchg
fdivs
scas
adc
jg
dec
push
orb
mov
cmpl
and
scas
out
dec
push
sbb
push
adc
xchg
cmpsb
and
or
dec
inc
mov
and
imul
xchg
outsb
add
daa
test
icebp
push
decl
in
andb
cmp
or
les
adc
or
and
ja
cmc
add
andl
mov
lcall
xchg
xor
popa
loopne
adc
jns
pop
adcl
insl
stos
mov
inc
mov
icebp
push
push
insb
xchg
repz
inc
cld
mov
xchg
fists
sub
into
adc
jo
inc
pop
xchg
push
sub
inc
pop
mov
pusha
cmp
cs
leave
mov
mov
testb
xchg
sub
mov
loopne
add
adc
pusha
js
push
scas
faddl
hlt
pop
scas
leave
mov
scas
in
inc
push
js
mov
xorl
shrb
cmp
addr16
movsb
sbb
cmp
xorb
add
fisubs
lret
dec
rolb
pop
in
adc
dec
inc
cld
add
push
xchg
mov
add
loope
cmpsl
scas
mov
inc
xor
adcb
inc
mov
push
fwait
js
adc
cli
mov
adc
mov
or
sbb
clc
imul
mov
test
push
or
dec
mov
xchg
inc
std
mov
pusha
sarb
fiaddl
mov
adc
in
xor
add
jl
icebp
loop
push
xchg
add
and
xchg
add
hlt
push
shlb
clc
mov
inc
and
jns
xchg
cld
and
cmp
mov
jg
push
or
xchg
push
jl
pushf
xor
jb
xchg
dec
jae
sahf
inc
mov
adc
enter
cld
dec
divl
inc
dec
xor
fisttpll
pop
and
sbb
ret
mov
test
ss
aad
mov
ja
loop
xchg
pop
cmp
or
mov
inc
adc
add
cmp
test
or
inc
sar
and
lea
mov
jnp
add
cmpb
pop
add
mov
stos
sub
rorb
inc
cld
mov
cmp
add
push
add
or
test
inc
add
adc
xchg
sub
js
rclb
loopne
and
mov
pop
test
sahf
clc
add
or
cmp
mov
push
dec
pop
stc
call
imul
adc
push
xchg
push
fsubl
inc
pop
mov
lock
dec
subb
call
inc
pop
sti
xchg
loop
add
push
aas
xor
cwtl
adc
add
lods
ret
sti
test
roll
test
add
adc
movsl
imul
pop
loope
daa
ret
push
dec
cmp
std
aas
cmpsb
xor
dec
notb
xchg
insb
add
shrb
mov
lods
jmp
mov
mov
clc
pop
and
js
or
das
rcr
pop
cmp
jg
mov
lcall
fsubrs
movb
mov
or
icebp
in
adc
cli
les
leave
sti
aas
les
fcomip
orb
lahf
call
jbe
mov
pop
jl
or
add
mov
shrl
mov
push
shlb
ret
or
xchg
mov
fdivrl
xor
add
adc
lret
push
je
push
in
gs
lods
push
sarb
fbstp
dec
mov
inc
dec
bound
xchg
shl
cmp
push
cli
loopne
es
xchg
pop
andb
insb
fsub
loopne
xor
dec
movsl
in
xchg
sbb
movd
sarb
pop
pop
push
clc
jle
dec
imul
ret
hlt
test
and
orl
test
scas
sbb
push
and
pushf
jecxz
push
lret
push
and
ret
cmp
mov
scas
es
popf
cs
xchg
mov
jne
nop
jp
inc
scas
es
jecxz
out
and
sbb
lcall
sub
popf
loop
push
inc
aas
aaa
sub
jg
jle
sbb
lock
scas
and
inc
mov
sahf
jp
bnd
ret
cmp
popa
sub
inc
inc
ret
jbe
mov
xchg
sub
into
inc
cmpsb
mov
fiadds
add
inc
roll
and
sti
add
adc
dec
and
mov
les
rcrl
sbb
loop
shrl
js
movsl
imul
orb
adc
sbb
jne
movsb
pop
pop
xchg
dec
inc
popf
or
jmp
les
pusha
inc
clc
sbb
push
sub
mov
push
or
lods
push
faddp
sub
pop
xor
mov
xor
fcmovb
adc
ljmp
mov
jmp
sarb
push
xchg
ljmp
dec
aad
push
mov
jg
and
lea
out
push
pop
push
ficoms
sub
mov
add
or
ds
arpl
cmp
and
sti
pop
out
cltd
xchg
dec
test
or
jl
hlt
cwtl
fcompl
push
or
out
push
and
sub
or
shll
mov
clc
mov
cmpb
daa
cmpsl
fisubrs
cmc
fs
fmul
mov
pushf
xchg
ret
pop
jo
popa
xchg
ret
andl
sub
dec
test
clc
or
jo
xchg
pop
add
pop
pop
pushf
adc
into
rclb
or
mov
xchg
lds
mov
add
cmpsb
pop
pop
jl
mov
into
pop
or
rorb
dec
xchg
inc
dec
decb
xchg
add
in
js,pt
cli
jo
sbb
outsl
push
pop
les
js
mov
mov
xor
lret
push
das
and
movl
inc
call
imul
sbbb
cmp
cli
push
lock
inc
sub
clc
xchg
stos
and
pop
xor
and
std
idiv
mov
daa
rorl
and
pop
inc
and
adc
sub
and
or
mov
clc
xchg
sub
ds
ret
mov
and
inc
imul
add
popa
add
leave
lock
shrl
mov
ds
cli
lahf
or
or
mov
outsl
rolb
imul
xorl
fcomp
insb
lret
out
popf
adc
add
ret
or
icebp
dec
push
xchg
push
xor
add
xchg
sbb
or
mov
mov
jbe
jmp
loope
in
xchg
cmp
clc
popf
mov
mov
push
stos
aad
loopne
scas
rcr
test
sub
jno
aas
fstpl
push
test
adc
xor
bound
jo
lods
leave
hlt
mov
dec
testl
jg
std
adc
adc
daa
xor
dec
pop
pop
jp
std
add
dec
mov
xor
mov
fs
aaa
inc
jle
mov
mov
pusha
in
in
ret
xchg
fcomi
dec
sarl
push
cmp
push
xor
fucomip
hlt
lahf
loop
dec
retw
mov
pop
cmp
dec
rolb
add
xlat
popl
cmp
pop
xchg
sbb
jmp
je
or
or
push
dec
je
xchg
push
push
mov
aad
sub
mov
mov
add
ljmp
push
fcoml
sarb
and
imul
push
fisubrs
push
xor
jo
sbb
rorl
mov
and
sub
sub
incl
adc
hlt
adc
pop
inc
mov
popl
inc
cld
sbb
add
push
imul
pop
out
and
mov
sbb
jns
pop
into
xlat
shlb
flds
xchg
dec
sti
push
cmpsb
sub
shr
popf
dec
ds
xor
jb
inc
pop
call
loop
fcomip
sub
mov
cmpsl
pop
or
add
call
cli
clc
dec
cld
inc
sbb
rolb
enter
cmpl
ss
jle
mov
and
pusha
scas
mov
clc
or
sti
pop
and
subb
lods
test
mov
push
mov
cli
loope
inc
cmpsl
xor
or
pop
jle
mov
mov
jno
dec
jae
inc
push
cmp
aam
cmp
cmp
mov
add
pop
mov
fadds
mov
add
and
orb
push
xorb
cmc
imul
or
xchg
mov
sahf
adc
adc
push
loopne
insl
inc
mov
fists
sub
jecxz
xchg
fstl
enter
add
xchg
test
pop
ret
int3
sbb
inc
or
aas
sbb
sbb
add
push
test
fs
scas
ja
adc
in
gs
sbb
cmpl
mov
rclb
cmc
mov
sub
rolb
sahf
push
aas
push
jmp
ret
inc
add
push
js
daa
or
mov
sbb
fisttps
pushf
cwtl
lods
movsb
xchg
adc
test
sbb
bound
sub
mov
jno
aad
nop
aad
sub
js
rcrl
popf
repnz
pop
adc
xlat
call
push
push
imull
fcompl
fcmovu
inc
popa
lods
aas
andl
sbb
and
rorb
scas
ret
cmp
add
xchg
andb
xchg
fdivl
stos
cmpl
push
mov
lds
cmp
inc
jne
mov
stos
xor
pop
mov
xor
adc
push
xor
mov
xor
xor
icebp
add
mov
subps
mov
inc
sbb
mov
adc
mov
inc
jne
xchg
push
xor
repz
add
call
stos
cmpb
vorps
pop
sub
out
push
orl
cld
inc
outsb
push
out
cmpb
bound
or
dec
movsl
sbb
cli
aaa
push
loop
test
loop
in
xor
mov
insb
hlt
mov
test
mov
xchg
stc
sbb
js
adc
cltd
mov
cmpsl
ds
mul
cmc
outsb
jo
xor
adc
cmp
sub
push
cmc
inc
cs
adc
xor
rol
pop
cli
push
mov
outsl
ljmp
push
das
mov
fdivrs
xchg
push
stos
insb
pop
sti
mov
movsl
lds
or
call
aaa
fs
push
adc
hlt
pop
or
mov
fisttpll
inc
mov
mov
imul
les
and
xchg
mov
mov
push
lock
stc
movsb
ret
pop
jb
repnz
cmp
popa
ds
ret
cmp
xchg
popa
adc
mov
lret
xor
sti
mov
insl
mov
jno
inc
dec
js
jmp
pop
hlt
ljmp
test
sarl
jbe
das
cmp
int
data16
cmp
jae
sti
in
gs
pop
inc
jecxz
or
mov
loopne
pop
sahf
bound
sahf
loopne
xchg
loope
call
pop
lock
clc
dec
ret
js
xlat
pushf
mov
scas
add
ljmp
rcll
dec
insl
fsubl
in
xor
push
jl
out
jge
cmp
mov
daa
push
mov
lock
jl
mov
fldl
adc
push
mov
ror
arpl
fs
aas
aas
sbb
and
int3
leave
lock
sbb
dec
mov
or
iret
ds
jg
mov
enter
shrb
movsb
in
dec
rcr
movsl
and
and
mov
add
and
cmpsl
sarl
stos
dec
js
bound
push
shrb
add
outsb
lods
cmpsl
sub
fistpl
nop
mov
fsub
pop
or
repnz
sbb
pop
mov
sub
push
dec
add
mov
shrl
imull
xchg
imul
and
adc
subl
cmpsb
mov
cli
loopne
std
adcl
cmp
cmpsl
xchg
jb
add
xchg
sub
xlat
push
call
test
das
mov
xchg
sbb
mov
push
jl
out
or
loope
ffreep
dec
xchg
mov
faddl
clc
popf
lock
mov
imul
cmp
out
ja
xor
xor
fsubrs
add
push
xor
sbb
call
xorb
or
inc
jb
lea
push
out
pop
sub
stos
cmpsb
jecxz
inc
jbe
dec
les
xorb
clc
jbe
inc
daa
aaa
inc
pop
push
xor
sbb
dec
mov
sbb
push
aad
outsb
clc
inc
cli
pop
jns
push
inc
jmp
lds
push
int
inc
call
xchg
or
sahf
lock
ljmp
dec
repz
pop
cmp
lahf
mov
ds
fisttpll
stos
in
cmpsl
and
push
pop
push
sbb
ljmp
ja
shlb
sub
clc
pop
imul
inc
xor
or
mov
repz
popf
pop
mov
push
dec
je
scas
or
sbb
js
paddw
ror
nop
xchg
sbb
and
cmp
ljmp
and
add
out
pop
aad
pop
cs
lock
sub
fiaddl
ja
rcll
icebp
movl
cmpsl
push
cld
add
cmpsl
jle
aam
cmp
pushl
test
or
push
movsl
icebp
xchg
inc
int
and
mov
mov
jp
call
xchg
add
mov
test
lock
mull
xchg
pop
in
pop
addb
stos
ljmp
std
xchg
push
add
adc
loopne
inc
loopne
mov
pop
mov
pop
ret
mov
pop
pop
les
add
mov
push
pop
xchg
or
jno
cwtl
push
filds
lods
mov
jmp
ret
inc
int3
outsl
adc
push
icebp
push
cli
inc
jmp
lock
xchg
or
xor
add
mov
pusha
bound
out
mov
push
test
xlat
xchg
lods
dec
push
xchg
inc
test
and
push
ret
lcall
adc
int
sbbb
add
mov
mov
sbb
ds
pop
jb
scas
cmp
out
mov
and
lcall
push
loop
mov
jl
sub
addb
aas
subl
inc
xor
or
test
sbb
loope
sbb
test
clc
dec
cmp
ja
add
or
or
or
pop
cmp
add
insb
jl
dec
push
es
jo
mov
mov
add
sub
jbe
inc
xor
or
popf
inc
xor
and
negb
std
sub
sarb
jne
cli
pop
add
dec
sub
or
xchg
das
push
push
sub
xor
mov
imul
jp
data16
sbb
xor
movsb
push
mov
mov
jno
cmp
lock
and
loope
push
adc
lahf
adc
cmp
icebp
push
cmc
jnp
bswap
icebp
testl
in
sub
push
mov
hlt
mull
mov
and
aam
inc
sbb
pop
jmp
or
sbb
insl
push
and
subl
or
hlt
rorb
ljmp
out
movsl
xchg
xor
in
adc
sbb
adc
xor
stc
add
pop
sbb
rcl
lods
test
std
mov
adc
cmpsl
mov
pop
clc
jg
out
loope
js
shrl
popa
xor
stc
dec
mov
sub
aaa
pop
push
cmp
clc
lahf
hlt
dec
inc
je
mov
test
or
jns
das
insb
call
mov
lcall
adcl
add
add
cmc
or
push
mov
cmpsb
xor
jmp
add
sub
mov
fnstcw
ja
add
xchg
std
adc
js
adc
xchg
nop
jo
loopne
adc
jp
mov
fists
mov
roll
roll
push
and
mov
loope
inc
jle
roll
jb
stos
enter
std
rorl
sahf
xchg
testb
in
sbb
paddw
lock
or
cmp
xorb
and
loopne
cwtl
or
fisubrl
pushf
movsl
xor
sbbl
jg
adc
out
push
jnp
icebp
sarb
das
bound
outsl
nop
jo
icebp
not
aas
mov
cli
adc
fidivrs
lds
xchg
mov
jp
icebp
adc
or
movsb
mov
add
int
xorl
test
imul
ret
mov
popa
sti
maskmovq
testl
mov
outsb
adc
xchg
xchg
mov
cmpsb
shlb
sbb
loopne
cmp
daa
int3
imul
sub
cmp
jae
push
lret
dec
clc
out
aas
shl
pushf
or
into
xchg
jae
cltd
jbe
add
fs
fwait
cmpb
outsb
test
push
add
addl
out
mov
addr16
cmp
mov
inc
push
pop
push
push
cmp
das
add
jg
mov
cs
fadds
mov
jmp
mov
les
subb
xor
or
jo
push
jle
adc
xor
adc
das
clc
cltd
dec
xchg
pop
inc
push
sbb
add
mov
cmpsl
push
push
or
out
jle
adc
xchg
push
test
in
cmp
pop
jecxz
mov
addr16
hlt
test
jge
arpl
dec
sbb
mov
outsl
lea
xchg
std
push
fisubs
jl
xor
sub
aam
pop
adc
mov
xchg
insl
xor
add
ret
lret
mov
bnd
out
lock
clc
bound
mov
dec
push
mov
pop
add
stos
jecxz
and
loop
int3
into
je
push
mov
sub
inc
xchg
cmp
dec
inc
out
or
pop
mov
pop
dec
dec
dec
vpunpckhbw
pop
jl
icebp
mov
xor
lods
mov
pop
jp
mov
loop
ret
lea
fisttpl
das
icebp
shlb
cmp
adc
pop
into
fldcw
xchg
push
adc
arpl
push
xor
daa
inc
ljmp
pusha
pop
cltd
xlat
pop
jle
adc
adc
push
xchg
and
andl
fdivrs
sahf
cmpsb
int
hlt
pop
or
push
stos
popa
jmp
cmp
pop
mov
dec
je
sahf
in
jne
mov
clc
add
cs
push
es
xor
rorl
jg
dec
add
cld
sahf
outsb
xchg
add
mov
dec
push
aaa
push
push
sbb
and
sbb
add
je
dec
xor
mov
aaa
std
repz
xchg
sti
cmp
subl
or
mov
in
mov
sub
clc
dec
mov
jmp
out
push
dec
repz
adc
fists
or
test
popf
inc
xchg
xchg
dec
notl
jg
add
clc
lret
insl
xchg
and
and
lcall
pop
mov
sti
aam
dec
inc
mov
jecxz
push
jbe
addl
push
add
cs
jno
fisttpl
sub
push
adc
mov
and
and
clc
pop
and
stc
movsb
sahf
jp
outsl
xchg
mov
outsl
ljmp
bnd
jno
pushf
and
jmp
cmpsl
mov
shl
and
mov
pop
push
pop
imul
mov
inc
cmp
or
lods
cmpsl
jbe
or
sbb
add
shrb
jle
sbb
andb
bound
push
mov
jge
pusha
or
xchg
sbb
dec
ror
outsl
mov
rcl
inc
cmp
testb
inc
and
aad
xchg
jnp
test
out
push
mov
push
inc
lods
inc
dec
mov
test
sbb
sub
stos
push
add
gs
insb
je
jbe
repz
mov
dec
push
dec
inc
mov
ret
pop
and
loop
stos
movsl
lods
lea
cmc
outsb
sbb
xchg
lea
mov
xchg
loopne
cli
xor
add
data16
in
bound
loop
inc
or
jg
mov
stos
mov
pop
test
adc
rcll
aas
xchg
ret
insl
cmp
adc
jbe
mov
and
movsl
add
push
xchg
sbb
enter
push
push
inc
push
leave
sarb
fbld
push
pop
hlt
clc
pop
cli
pushl
pop
popa
push
sub
jg
icebp
and
lea
aas
aaa
lock
popf
fiadds
fwait
bnd
and
fstps
inc
mov
lret
mov
jnp
fwait
jbe
mov
enter
sub
inc
pop
inc
pop
insl
pusha
cmpsl
adc
inc
in
mov
dec
decl
mov
das
js
dec
sub
or
mov
orl
movsb
and
hlt
and
and
jo
sbb
mov
mov
pop
pusha
or
pop
cmp
es
daa
mov
or
jae
mov
mov
cmc
outsl
repnz
push
and
hlt
jg
jl
ja
and
mov
sarb
mov
orb
pop
test
adc
int3
gs
xchg
inc
into
add
mov
sbb
push
dec
clc
psrld
cli
movb
sbb
insb
sbb
decl
sarb
je
loop
push
gs
insb
mov
addl
mov
jo
out
fisubl
xchg
mov
jge
movsl
aas
loope
and
not
inc
adc
dec
cmpsl
push
fbstp
jmp
cltd
mov
mov
es
js
aaa
jg
call
fdivr
mov
js
dec
push
adc
inc
enter
mov
mov
fildll
gs
test
ret
iret
add
leave
shll
movsb
ret
sbb
or
sahf
xchg
lahf
jb
mov
sub
push
jmp
sbb
cmp
xor
jl
xor
mov
mov
loope
lods
jp
add
or
out
xchg
mov
pminsw
scas
dec
les
lds
xchg
xchg
mov
adc
xchg
jp
jno
lret
xchg
movsl
sbbb
sbb
in
cli
ret
out
push
incl
shlb
iret
stos
pop
and
xchg
mov
cmp
aas
movsb
std
mov
mov
mov
sub
add
xchg
rcrb
vhsubpd
adc
les
push
xor
testb
in
into
add
mov
test
xchg
jmp
and
dec
aaa
pop
cld
pop
jg
repz
les
dec
sbb
shlb
addb
adc
pop
mov
inc
scas
lods
fwait
mov
pushl
adc
jg
and
pop
jne
xor
mov
out
or
sbb
jae
push
lock
push
cmc
mov
jo
sub
enter
mov
mov
jbe
sti
jmp
cmp
mov
inc
pop
dec
pop
push
mov
aam
rorb
sub
adc
mov
rcrb
arpl
add
add
dec
pop
push
xchg
out
push
dec
dec
inc
inc
mov
and
adc
data16
fdivl
icebp
sar
subl
inc
inc
aas
jne
scas
inc
or
fs
pushf
fidivrl
xor
call
addr16
test
cmc
mov
adc
nop
and
pop
out
call
jb
jge
push
cmp
xor
fs
xlat
jb
lcall
dec
pop
jb
imul
ret
aas
dec
pop
bound
or
imul
lods
movl
add
mov
cmp
aam
clc
adc
or
xchg
out
or
jle
ret
sub
ljmp
test
pop
dec
mov
sub
dec
add
jno
aaa
and
xchg
xor
pusha
popl
clc
add
xchg
adc
dec
ds
cli
ja
or
dec
push
rcll
sbb
pop
imul
rcr
sbb
ds
mov
or
test
mov
mov
lret
sub
jmp
push
and
mov
lock
jns
movl
jo
fcomp
div
xor
mov
dec
xchg
repz
inc
fstpt
mov
xor
mov
cmpsb
xchg
cmp
jecxz
scas
or
test
jmp
in
in
mov
or
push
subb
xchg
pop
or
xchg
shrl
or
jg
adc
dec
aaa
xchg
adc
int3
es
call
cmpb
addb
imul
adc
mov
sahf
dec
ljmp
loope
jnp
push
mov
cltd
inc
loopne
in
mov
lret
loop
loopne
cmp
inc
ret
fimuls
pop
fs
add
pop
xor
or
inc
in
jns
adc
add
pop
pop
mov
dec
jp
shll
mov
sub
jge
push
sti
sbb
push
pop
adc
and
sbb
repnz
mov
imul
or
push
or
mov
pop
fwait
push
mov
lea
xchg
repnz
call
jbe
test
add
sub
add
lock
cmp
pusha
ret
inc
cmp
test
sbb
mov
add
cmc
lcall
in
aas
std
xorl
and
jne
cmp
inc
adc
lahf
fs
or
inc
mov
and
ret
mov
loop
pop
mov
sbb
aaa
and
and
stos
add
iret
mov
push
int3
cmc
pop
aad
xchg
cmp
lea
pop
cmpsb
fadds
push
inc
mov
jmp
mov
pop
inc
ret
pop
mov
dec
inc
jecxz
shlb
or
xchg
mov
incb
pop
nop
pop
ss
ret
lock
sahf
mul
fwait
push
aaa
inc
es
lcall
mov
pop
in
jno
sub
les
and
pop
or
dec
push
jl
inc
pop
aam
insb
and
test
aas
mov
testl
lods
pop
mov
icebp
sub
pop
cmp
sub
mov
push
jmp
adc
stc
push
mov
adc
mov
pop
pop
jg
les
jge
test
mov
clc
sub
mov
aaa
jnp
dec
mov
cltd
add
gs
popa
pusha
lock
add
push
fsub
add
mov
jno
sub
pop
aas
or
inc
movzbl
pop
sahf
ja
lds
sbb
les
jne
xchg
mov
inc
adc
test
cmp
std
adc
add
push
enter
mov
pop
pop
hlt
dec
shrl
xchg
or
arpl
ret
test
mov
pop
pop
ss
sub
sarb
cmpsb
sbbb
imul
sub
daa
sysenter
xchg
and
fs
dec
jnp
addr16
push
fildll
jbe
mov
mov
cld
imul
lds
dec
or
inc
das
jecxz
pop
sbb
mov
imul
or
psrad
mov
sbb
xchg
push
jle
adc
xor
mov
add
xor
mov
addb
xchg
lret
incb
decl
out
pushf
mov
sbb
sarl
dec
cmpl
inc
or
jne
and
cwtl
lcall
xchg
lcall
rorb
add
xor
leave
jnp
inc
cmp
rol
fmul
rorl
add
push
cmp
in
pop
iret
adcl
enter
or
sbb
fstpt
fldl
mov
insl
push
push
mov
test
in
test
loop
int3
pop
dec
scas
lods
jmp
push
jnp
mov
out
or
es
pop
decl
jne
loopne
ret
mov
jp
jmp
lods
arpl
lret
cli
sub
pop
lock
or
mov
xchg
adc
push
mov
sbb
add
xor
push
icebp
aaa
mov
xor
test
push
insb
or
cli
scas
lret
mov
sbb
push
shlb
cmp
cmp
adc
xorl
sub
cmpsb
pop
jle,pn
test
xchg
sbb
or
xor
fbstp
mov
mov
inc
adc
inc
and
xor
dec
insb
cmc
fisttps
add
js
sbb
test
jge
popa
dec
sahf
shlb
mov
lods
stc
and
jno
paddd
dec
mov
mov
icebp
fdivrp
add
or
push
nop
mov
cli
cpuid
in
jl
add
es
adc
or
or
xchg
xchg
jp
xor
movsb
pop
inc
pop
sbb
or
and
rcrl
pop
xchg
ret
test
xchg
add
mov
inc
testb
insl
add
cmpxchg8b
shll
stc
dec
dec
jb
push
push
add
inc
cmp
inc
push
xchg
push
mov
push
andl
mov
xor
out
stos
ljmp
stos
rorl
clc
xchg
or
fistps
mov
or
hlt
std
divb
popa
push
aas
and
aam
cmc
cld
ljmp
into
out
cs
add
out
mov
pop
ret
jb
shlb
movsw
xchg
dec
add
xchg
add
jbe
out
in
sbb
cli
pop
sarb
dec
sub
push
lea
daa
mov
aaa
pusha
movb
dec
bswap
mov
cli
jecxz
call
pushf
addl
inc
sub
xchg
call
sub
inc
pop
lds
dec
test
pop
mov
add
adc
sub
movsb
insb
inc
xchg
fadds
xlat
jle
je
mov
pop
lods
int
lods
push
xlat
inc
dec
sbb
xchg
popl
lahf
push
inc
and
cmp
mov
adc
pusha
popa
push
lret
dec
jb
fs
xchg
in
push
jno
add
add
push
jge
jne
aad
ljmp
push
xor
loopne
dec
roll
out
mov
xor
popf
sbb
and
mov
cs
mov
xorb
mov
push
sbb
mov
in
mov
int3
jle
xchg
xor
xchg
ljmp
push
xchg
outsb
fldenv
incl
bound
addb
jmp
and
push
lahf
call
decl
jmp
adc
xor
mov
fildll
lock
cmovbe
push
cwtl
adc
clc
stos
out
fwait
shll
mov
pusha
sub
pop
mov
idivb
dec
xchg
xchg
xor
xlat
pop
push
ds
add
adc
es
inc
scas
sub
dec
and
xchg
test
sub
cmpsb
and
test
mov
cmc
rcr
xchg
fmuls
mov
popf
enter
scas
jl
sbb
loopne
push
ljmp
adc
mov
jmp
and
loop
inc
xchg
sysret
inc
les
or
jecxz
mov
lock
fcmovb
cld
mov
adc
cmp
lahf
cmc
xchg
mov
inc
aam
adc
push
sub
cld
sbbb
mov
fs
cmp
cld
push
and
cmp
cwtl
out
mov
adc
adc
xchg
adc
inc
adc
cltd
push
jle
in
add
jnp
outsb
push
out
shll
loope
jl
aaa
lea
and
jo
shr
test
xor
sub
dec
mov
mov
imul
push
fwait
icebp
sub
mov
cmp
sub
scas
ds
adc
jne
mov
fnstcw
outsb
enter
mov
push
enter
lock
pop
jno
stc
push
icebp
or
and
mov
movsb
dec
fsubs
jae
js
loop
inc
into
pusha
jo
xchg
xchg
push
mov
ja
mov
dec
pop
xor
clc
push
mov
data16
cmpsb
push
mov
mov
aas
sbb
out
add
lcall
jmp
ret
push
andb
adc
or
test
push
ss
sbb
pop
repz
test
xchg
or
nop
int
jg
in
or
or
xchg
jno
or
scas
or
sub
mov
hlt
jg
test
push
les
enter
sbb
subl
xor
lock
incl
nop
call
fmull
mov
scas
jle
adc
pop
sbb
mov
orl
out
out
cmc
lock
pushf
and
sar
pop
push
ds
in
notl
ret
add
jb
push
adc
mov
push
pop
sub
inc
jmp
jge
xchg
fcom
add
xor
xchg
js
out
cs
leave
mov
push
sbb
clc
lock
adc
mov
jp
or
cmpsl
add
loop
sub
outsb
jns
xchg
outsb
rcr
test
lret
add
pop
repnz
lods
test
loop
mov
je
bnd
xor
adc
sub
mov
iret
sub
inc
pop
xor
in
loopne
push
push
out
add
into
pop
outsl
pop
and
jge
popa
incl
xchg
enter
inc
push
sbb
mov
icebp
cmp
dec
jbe
add
fldl
daa
and
jg
jnp
mov
push
sub
repz
pop
adc
cmpsb
bnd
lods
fimull
or
pusha
add
clc
pop
mov
fldcw
pop
xchg
adc
sbb
inc
cmp
xchg
sarb
jmp
shll
call
fcmovb
mov
int3
inc
inc
popa
sahf
add
jg
loopne
decl
pusha
inc
or
mov
cmp
lods
xor
cmp
subb
das
mov
aad
mov
ret
movsb
push
lcall
xor
sub
add
push
nop
sub
mov
jae
inc
daa
cmp
push
adc
jmp
adc
sbb
pop
mov
testb
xor
mov
fdiv
test
push
sarb
sbb
dec
jb
lret
sbb
sub
and
pop
ds
xchg
addr16
rcr
or
dec
adc
xor
out
cmp
out
hlt
push
dec
lret
mov
cmpsb
xor
push
addr16
clc
wbinvd
orl
pop
or
mov
std
sbb
add
add
stc
into
sbb
adc
and
pop
fildl
inc
or
cmc
iret
ficompl
and
add
adc
mov
loope
fimuls
push
in
push
push
icebp
dec
clc
popf
dec
leave
inc
or
sub
xchg
outsb
or
popa
adc
pop
jg
cmp
je
mov
clc
test
cli
and
mov
sarb
mov
imul
push
mov
orb
inc
jge
lock
lock
xchg
loop
leave
push
pop
push
xor
jo
addb
sahf
shrb
cld
loop
pop
mov
pop
cmpl
clc
stos
in
das
or
pop
std
xchg
les
fidivl
mov
xor
cmpsb
inc
push
add
arpl
fwait
aaa
mov
mov
mov
sbb
inc
jecxz
mov
lods
adc
lods
filds
push
aas
adc
adc
arpl
mov
push
or
pop
add
insb
push
cmp
out
push
loop
gs
mov
mov
pop
or
sbb
fldt
rorb
pop
dec
test
xchg
loope
inc
inc
push
adc
das
fildll
imul
xchg
rclb
into
cld
and
movl
and
movsl
push
call
enter
pop
and
jge
sarl
shl
push
add
ss
ds
jmp
movsb
call
inc
clc
ret
sub
pushf
mov
out
xchg
jge
orl
mov
or
or
cmp
dec
dec
mov
adc
mov
xchg
xor
push
jmp
sub
push
pop
pop
jmp
pop
sahf
xchg
mov
loop
mov
pop
icebp
push
or
testl
in
mov
out
addr16
addb
icebp
mov
mov
or
shrb
and
int3
pusha
mov
or
in
push
inc
scas
out
push
adc
gs
pop
bound
or
or
out
sahf
lret
mov
clc
enter
sub
movl
aam
sarb
sub
scas
xor
xlat
ds
stos
ja
sub
loope
fildll
xchg
sub
call
add
popa
sbb
cli
out
or
dec
ljmp
push
or
and
outsb
shrb
or
mov
insb
jae
dec
push
mulb
pusha
push
inc
cli
xor
push
inc
repz
jl
subl
mov
lret
mov
insb
in
int
jg
push
mov
or
hlt
pop
inc
mov
rcll
or
xor
shr
mov
sbbl
arpl
outsl
std
pop
loopne
sbb
push
mov
hlt
pop
or
inc
call
lcall
mov
lea
fxch
push
fnstcw
jno
call
mov
es
sbb
popa
xchg
cmc
movsb
test
fstpl
sub
std
sub
test
pop
jno
dec
call
aad
lock
inc
adc
push
sbb
loopne
popa
dec
insb
std
cmp
ret
and
stos
push
test
dec
imul
pop
in
test
add
les
pop
or
push
pop
pushf
push
cmp
sub
xor
xchg
mov
iret
fwait
and
adc
dec
rorb
xchg
pop
repnz
lcall
mov
sub
mov
mov
pushl
mov
in
push
or
inc
js
mov
loope
dec
adc
and
lret
imul
lahf
test
call
lds
inc
lods
inc
pop
test
scas
add
test
int
dec
iret
cwtl
inc
inc
cld
mov
lret
xor
mov
cmp
invd
test
pop
sub
xchg
xchg
mov
dec
sub
call
pop
pop
xchg
iret
clc
xor
js
test
push
clc
fldenv
jb
out
std
in
addr16
insl
jo
push
mov
or
mov
and
jp
push
mov
pusha
mov
adc
out
jle
mov
dec
fistpll
xor
and
lahf
pop
adc
xchg
xchg
repnz
inc
fucomip
jns
inc
ret
push
adc
xlat
sub
adc
pop
or
add
add
loop
pop
or
js
sub
aaa
cmp
ds
jns
addb
lcall
popa
cld
es
pop
imul
nop
aas
mov
and
ret
ljmp
sub
pusha
adc
loope
fstps
xor
pop
mov
sbb
and
add
cli
sub
inc
ds
add
push
dec
aas
xchg
out
pop
shl
mov
imul
fdiv
repnz
and
jnp
pushf
insb
mov
repnz
mov
mov
or
fimuls
fmull
fldenv
push
adc
sbb
ds
andb
pushf
lret
dec
xchg
sbb
ds
adc
pop
lock
push
jb
sarl
and
imul
mov
mov
cwtl
stos
jb
push
loope
xchg
rclb
sub
stc
stc
push
mov
add
inc
inc
push
lock
frndint
aaa
jecxz
xor
jns
or
add
push
dec
jnp
inc
cmp
add
popa
mov
mov
mov
int
push
arpl
mov
jecxz
dec
xchg
xchg
cmc
jg
mov
inc
decl
aad
inc
stos
push
or
lock
stos
mov
sbb
faddl
ja
sub
xchg
out
pop
pop
jle
mov
mov
adc
xchg
jg
inc
mov
fldl
movsb
mov
fcomps
int3
movsb
out
pop
addl
and
rorb
jecxz
mov
mov
xchg
sbb
sbb
bound
add
jb
mov
stos
xchg
mov
scas
loopne
xor
popa
mov
mov
push
cs
fcomps
sub
push
push
jg
inc
xor
loop
dec
test
fmuls
sub
clc
adc
outsl
fs
out
jg
mov
or
dec
xchg
adc
push
in
push
xchg
loop
sar
mov
push
in
pop
hlt
jne
decb
jb
decl
push
fiaddl
repnz
and
call
aas
push
les
adc
mov
shlb
int
mov
sahf
mov
mov
mov
push
sbb
inc
pop
icebp
push
decb
pop
add
lea
xchg
xchg
shlb
lods
dec
sbb
push
inc
inc
dec
adc
test
repnz
xchg
lahf
gs
test
clc
sbb
pusha
push
adc
adc
inc
loopne
aad
mov
cmc
xchg
rcrb
sbb
xchg
push
pop
out
mov
leave
push
push
insb
add
mov
or
jmp
jmp
mov
insl
add
mov
aaa
int3
lock
repnz
jge
mov
sahf
ret
rcrl
mov
cmpsl
mov
pop
loope
jmp
xchg
push
pop
test
cmp
int3
lret
es
cmc
lret
xor
loopne
dec
loop
mov
fdivrs
dec
shrl
push
mov
rclb
adc
std
push
push
adc
je
xchg
mov
leave
cli
or
test
callw
and
rcrb
cmp
jl
push
das
push
and
imul
sub
in
or
clc
punpckhdq
adc
notb
mov
mov
cld
faddp
hlt
daa
out
adc
mov
lods
ljmp
fmuls
or
jnp
jl
shll
fwait
mov
dec
mov
jmp
or
cmp
icebp
xchg
mov
lcall
incl
xchg
pop
lods
mov
subl
lock
ret
std
push
xor
dec
bound
mov
fisubs
fs
mov
jmp
jle
mov
cmp
and
js
cmp
or
rclb
sbb
dec
out
ret
dec
or
ret
and
sbb
cmp
dec
fdivl
mov
out
push
mov
push
adcb
dec
aad
push
incl
and
rorb
pusha
and
sbb
decl
andb
or
sbb
inc
or
inc
push
add
call
inc
inc
add
orl
add
add
sub
xor
lcall
loopne
test
add
sbb
or
adc
addl
addl
pop
add
add
or
add
addl
pop
test
pushl
inc
add
inc
movsl
add
and
add
int3
cli
and
adc
xor
cmp
pusha
adc
fiaddl
jbe
mov
aad
add
sub
mov
loopne
sbb
shlb
shll
sbb
or
and
int3
incb
cmp
or
subl
sbb
dec
pusha
or
pop
sub
or
add
push
xorb
push
daa
sbb
jmp
shlb
mov
fsts
sub
cli
cmc
inc
loop
dec
cmpsb
cmp
lock
add
std
xchg
aas
jmp
jo
xchg
xor
add
cmp
add
add
shrl
adc
ret
add
jecxz
add
cmp
sub
leave
push
lods
in
jg
xor
pop
dec
inc
add
ss
mov
rcr
push
sbb
imull
inc
stos
test
stc
fildll
cs
je
insb
testb
rolb
cmpsl
mov
inc
movsl
fwait
in
out
fucomp
popa
mov
mov
fdivl
and
out
jge
jge
push
iret
pop
push
xor
aam
mov
sti
std
jnp
jle
rolb
rorb
cmc
hlt
sub
inc
in
adc
adc
and
bound
sub
pop
mov
jnp
outsb
add
mov
loopne
test
insb
in
jo
call
jno
or
sbbl
in
lds
or
jle
movsb
dec
sbb
pushl
push
cwtl
int
sbb
imul
xor
jnp
repz
add
fndisi(8087
jo
stc
xchg
out
sarl
xchg
or
aam
cmp
shlb
addr16
mov
mov
inc
testb
add
out
push
lret
xchg
or
add
ret
sti
fwait
leave
mov
jne
add
inc
xor
lret
jle
popf
pop
jnp
dec
adc
test
mov
sti
jns
add
loope
lldt
inc
add
mov
lea
mov
subb
fs
mov
jne
jbe
js
add
mov
ret
adcb
add
cmp
pushl
jmp
mov
add
lret
pop
add
add
cld
out
push
sti
aas
mov
pop
push
jp
dec
xlat
cmp
lahf
addr16
mov
push
and
sbb
stc
mov
add
push
and
adc
add
inc
dec
xchg
les
orl
mov
inc
fstl
mov
mov
add
mov
scas
mov
sbbl
pusha
and
jge
jnp
lock
clc
nop
adc
lods
add
pushl
mov
sub
lcall
adc
push
push
pop
lock
mov
sub
xor
mov
vmovntps
cmp
sub
or
add
dec
imul
in
add
ja
cmp
sub
aam
fsub
repz
mov
inc
jp
hlt
incl
xchg
or
movsb
mov
dec
jne
mov
lock
sub
in
gs
mov
jg
imul
jp
jns
dec
xor
jo
incb
push
cmp
xor
push
andb
ds
push
mov
mov
jle
and
pop
dec
xchg
add
sbb
aam
xchg
ljmp
add
jle
and
clc
push
incl
sbb
test
jno
add
cmc
filds
push
jle
jle
sub
push
fsubp
push
rorb
andb
dec
mov
sti
stc
xchg
sub
aam
push
push
mov
flds
jbe
push
lret
push
sub
jo
xchg
in
cmp
mov
sbb
mov
xchg
sub
push
ja
out
add
es
loop
popf
push
pop
dec
cmc
pop
je
popf
dec
dec
dec
je
stos
xchg
mov
cmp
out
push
jge
jo
rorb
sbb
jae
adc
popf
inc
stos
lret
test
ret
xor
hlt
ds
mov
push
or
jno
les
addr16
jl
xor
loopne
dec
push
add
js
std
out
clc
inc
jnp
cmp
mov
cmpl
loope
push
ret
lods
cld
push
push
into
add
cmp
xor
loop
sub
mov
incb
adc
cmp
int
cmp
test
mov
sahf
pop
insb
sbb
and
in
jmp
outsl
fcoms
imul
in
xchg
sub
repnz
jnp
add
jle
push
movaps
or
jno
call
cli
divb
call
sub
imul
add
std
scas
sub
fnsave
jmp
dec
dec
mov
add
sub
xor
add
out
or
stc
ja
cs
mov
jl
cmp
mov
sbb
js
push
sarb
test
fs
mov
int
clc
adc
fucom
jmp
mov
push
or
sti
icebp
lahf
push
xchg
nop
mov
cmpsl
xchg
mov
and
mov
jno
sbbl
les
adc
mov
mov
add
fs
addl
bnd
mov
cvttps2pi
cmp
or
push
aad
mov
pop
inc
adc
xor
mov
pushf
cmp
fcmovnb
ret
in
inc
fisubs
or
std
dec
out
fistpll
arpl
sbb
add
hlt
adcb
es
sbb
mov
je
int
loopne
push
adc
lods
testb
ficoms
mov
dec
mov
aad
xchg
flds
gs
bound
mov
inc
rol
rcll
clc
stos
das
ficoml
cmpsb
lock
add
add
or
add
push
sub
push
in
pop
insb
pop
int
pop
jle
add
out
es
cmp
adc
pop
lods
call
xchg
loope
cli
sub
dec
adc
xchg
push
call
outsl
sub
testb
mov
add
out
jp
shr
add
pop
mov
dec
inc
push
imul
jbe
nop
mov
mov
call
andb
mov
push
mov
add
add
jmp
out
add
daa
sub
xchg
mov
fldcw
aad
xor
sub
mov
fndisi(8087
jmp
es
cld
std
cwtl
and
out
pop
movsb
adc
inc
cmpsl
imulb
in
pop
stc
lahf
xchg
fldenv
add
adc
add
xchg
mov
push
and
outsl
iret
fbstp
sub
push
pop
jbe
mov
xchg
mov
stc
xchg
mov
sbb
or
sbb
addr16
cmp
add
lea
lods
cmpsl
lret
cmp
inc
enter
add
pop
bound
xor
adc
std
stos
stc
std
pop
push
je
rolb
and
inc
ja
aam
jo
xchg
push
das
enter
mov
add
iret
scas
ljmp
or
out
mov
mov
or
flds
jl
loope
push
xlat
out
add
mov
dec
mov
mov
lea
cld
ret
out
scas
loopne
insl
inc
mov
testl
psubb
repz
mov
and
inc
std
jg
icebp
dec
xor
add
movb
push
loop
mov
add
inc
gs
test
xor
push
sbb
repnz
loopne
cmp
jg
test
loopne
out
incl
stos
rorb
arpl
insb
out
pop
ret
fmuls
int3
test
ret
loope
nop
and
ret
jns
into
lcall
and
movsl
sub
lcall
pop
sbb
push
jmp
pushf
xor
and
xchg
xchg
sahf
or
adc
clc
dec
sar
loopne
sub
push
cs
js
adc
test
xchg
fs
mov
push
jg
je
cmp
add
dec
mov
dec
mov
jg
or
daa
orb
mov
icebp
test
fdivrs
cs
in
pop
sbb
jg
jmp
or
fisubrl
repnz
xchg
insl
sahf
incl
repz
adc
xor
mov
std
or
push
push
mov
and
lret
add
jnp
pop
loope
ss
incl
loopne
popa
jp
jp
mov
les
data16
lahf
sub
adc
dec
add
cmp
cs
push
inc
movsl
sub
insb
bsr
or
adc
int3
filds
cmp
jnp
fs
sbb
and
enter
and
js
scas
jo
rolb
insb
push
xchg
push
cmpsl
cmp
icebp
add
inc
inc
nop
inc
cmp
push
inc
ret
mov
mov
push
shr
or
movsb
jge
jg
mov
ret
and
ret
stos
imul
mov
out
adc
sbb
adc
mov
clc
mov
lods
ljmp
mov
sub
pop
aas
lret
je
pop
outsb
add
pop
flds
cld
adc
sbb
push
je
jbe
mov
or
jns
add
decb
jno
cld
testb
cmp
enter
sub
or
inc
xchg
push
cltd
jmp
mov
scas
clc
push
mov
das
lea
mov
xchg
and
xor
mov
push
shrb
sbb
adc
push
ret
lds
out
mov
lcall
in
shll
xor
jmp
or
sbb
loop
loopne
add
loope
sbb
fiadds
push
addr16
or
fidivrs
inc
je
fdivl
insb
rolb
fwait
mov
les
std
sbb
cmp
cld
mov
sbb
in
pop
xchg
sbb
cmp
add
jne
out
lahf
jbe
test
jae
loop
fildll
dec
mov
movsl
cwtl
add
xchg
mov
ret
add
adc
sub
adc
add
scas
mov
adc
and
pop
sarl
push
lret
mov
lock
xchg
sub
loopne
out
adc
cld
test
add
dec
mov
je
xchg
inc
rorb
bound
sbb
ficoml
and
aam
add
jo
mov
and
jg
jne
iret
mov
sub
cmp
xchg
add
adc
mov
jl
pop
xor
arpl
or
pop
push
lods
rdmsr
dec
adc
clc
pusha
or
inc
adc
lcall
push
pop
mov
popf
cmp
sti
popa
or
pushf
or
nop
mov
cld
bound
xchg
in
insb
xor
jmp
das
shrb
sahf
inc
in
sbb
mov
out
aad
ss
jge
pushw
push
mov
mov
add
lcall
jno
divb
mov
decb
xor
cli
outsb
adc
in
mov
pop
dec
push
inc
inc
jb
xor
and
xor
mov
rorl
mov
popa
xchg
test
or
insl
lock
lcall
jl
mov
fisttpll
push
jg
addl
xor
das
mov
jmp
jmp
int3
add
dec
adc
scas
and
inc
pop
add
nop
xlat
aad
arpl
push
inc
jl
cmp
adc
push
lret
or
movsl
ror
lretw
and
adc
sbb
lock
inc
shll
out
call
pop
shll
scas
ss
cmpb
test
addb
lret
mov
push
jge
sti
lret
fcom
mov
adc
call
shl
out
push
pop
sarl
xchg
sahf
cmp
movsb
or
push
jb
inc
iret
sti
jno
add
pusha
into
jp
ss
lret
dec
into
dec
lret
or
ret
sbb
or
sarl
loope
adc
pop
jns
ret
and
pushf
dec
fcmovu
icebp
jge
sbb
and
dec
xor
sub
jae
out
and
push
inc
pop
push
jp
je
sbb
cmpsb
enter
inc
fnstsw
and
out
jbe
add
xlat
adc
jo
repnz
xchg
loop
fldl
push
enter
xor
mov
and
and
or
lock
repz
xchg
stos
loopne
sub
sarb
lods
stc
push
js
pop
and
xor
sub
fdiv
mov
lret
cmp
scas
fwait
icebp
das
movsb
fcmovne
xor
mov
pop
test
out
add
jno
xor
je
int
inc
mov
cmp
pop
mov
cvtpi2ps
dec
xchg
dec
addr16
pop
fldt
or
lahf
lds
filds
and
cmp
out
clc
mov
inc
push
inc
xor
clc
or
add
incl
mov
dec
push
test
test
mov
lea
cmp
js
push
lods
ss
hlt
and
jmp
push
loopne
cld
mov
jecxz
sbbl
cmp
dec
les
push
push
ret
fwait
sub
and
jnp
jecxz
inc
add
mov
xor
and
mov
sti
push
mov
cmp
inc
cmp
mov
shl
mov
in
mov
roll
dec
mov
jb
stos
mov
mov
adc
sub
jne
xchg
jg
mov
xchg
loope
lds
jl
fstp
negl
sbb
inc
push
nop
lcall
stc
or
mov
inc
push
out
or
loop
xor
in
push
or
xor
hlt
mov
and
lret
sub
dec
fwait
jmp
mov
mov
sbb
test
lret
mov
pop
mulb
popf
and
xchg
and
pop
aam
lea
adc
cmpsb
inc
in
or
dec
xor
mov
outsl
push
andl
roll
repnz
sarl
mov
push
mov
testb
and
mov
loope
mov
loopne
jmp
icebp
mov
jl
xlat
push
mov
dec
cmp
ljmp
and
lcall
cwtl
mov
inc
push
xlat
push
aaa
or
mov
mov
push
clc
and
adc
faddl
mov
fwait
sbb
add
xchg
xchg
pop
cmp
xchg
movb
inc
icebp
outsl
aad
out
ds
jl
mov
mov
aam
movl
mov
pop
bound
jb
sti
loop
cmpsb
fsubs
sbb
cmp
jl
push
fistpl
inc
pop
jo
ljmp
or
jp
push
ret
and
jmp
lahf
imul
xchg
push
mov
testb
lods
jnp
pcmpgtd
fcom
adc
insb
xchg
stos
xchg
cld
pusha
mov
sar
and
jl
rclb
jno
in
sub
sbb
xor
ret
push
jnp
outsb
hlt
outsl
and
pop
or
mov
dec
hlt
sub
mov
cwtl
idivl
icebp
sbb
mov
pop
clc
js
push
jns
mov
fisubl
sti
add
ja
jecxz
add
jb
imul
dec
mov
les
adc
adc
pushf
or
add
sub
mov
jbe
mov
jnp
div
mov
inc
dec
sub
inc
rcrl
mov
inc
xchg
clc
cmp
ds
adc
cmp
lea
sub
and
pop
push
push
stc
mov
adc
push
add
push
fnstsw
cld
out
mov
lock
adc
xlat
sub
cmp
mov
mov
or
clc
xsaves
adc
or
inc
ss
sub
imul
clc
stos
pop
movsb
xor
sti
inc
push
rcl
ljmp
mov
stos
outsl
js
xchg
mov
jb
adc
aaa
push
shlb
imul
sbb
sbb
cmpsl
cs
std
daa
call
negb
leave
pop
cmp
inc
adc
out
loopne
mov
dec
mov
fs
sbb
lahf
mov
je
add
jp
test
dec
lcall
pushf
mov
add
scas
loopne
or
xchg
or
inc
mov
fisttpll
xchg
add
mov
cltd
daa
xchg
pop
test
in
adc
test
mov
mov
jo
push
mov
or
movlhps
rolb
jg
mov
lds
jo
push
jo
cltd
cmp
in
repz
mov
or
inc
jnp
push
jge
pop
push
je
aaa
scas
fadd
and
scas
addl
icebp
out
cmp
out
ret
cmp
xchg
dec
adc
jmp
inc
adc
push
mov
sbbl
pop
fstpl
add
mov
pop
rolb
jg
rcrb
imul
dec
in
rol
inc
pop
sbb
and
xor
stos
adc
mov
mov
nop
cld
inc
clc
addl
adc
add
lcall
sub
cmp
push
aad
mulb
pop
adc
inc
push
mov
lret
shl
out
mov
sbbb
mov
sub
push
icebp
shr
sub
popf
add
xchg
shl
cmp
out
adc
mov
negl
sbb
push
push
rol
fists
mov
aaa
lock
je
and
mov
sub
adc
lahf
iret
mov
add
mov
and
cli
or
or
outsb
data16
add
lock
jle
push
mov
icebp
int
or
movsl
aas
jle
in
mov
lods
cmp
dec
testb
sbb
shrb
scas
cli
add
std
cmp
mov
dec
rol
jmp
lock
inc
xchg
jl
in
repz
pop
mov
and
movsl
loope
push
cmp
or
mov
or
idivb
daa
nop
ret
ret
dec
push
jnp
or
jo
sar
inc
or
mov
test
push
adc
cli
jle
add
mov
mov
add
popf
repnz
mov
add
in
scas
dec
scas
ljmp
sub
ljmp
dec
xor
ja
inc
push
push
icebp
jp
rcrl
mov
cmc
decl
repz
mov
leave
xchg
adc
ret
xchg
rorb
aad
jle
filds
test
jle
into
roll
add
stos
pop
dec
loope
out
pop
aaa
aam
in
push
sarb
addr16
sub
data16
add
int
insl
xor
daa
rorb
hlt
jno
mov
icebp
pop
mov
addr16
xchg
mov
mov
imul
adc
add
subb
sub
test
mov
cmp
and
sub
lahf
jg
outsb
mov
and
push
push
loope
xchg
xchg
and
mov
shrl
jg
mov
xor
sub
push
mov
inc
xchg
add
pop
dec
es
push
fs
push
lahf
es
sub
sub
dec
fwait
pop
ret
dec
sub
jnp
clc
aam
mov
xorl
push
cmpsb
mov
lock
stos
fimuls
pop
mov
jg
in
repz
call
xchg
scas
aad
push
inc
mov
mov
or
js
adc
mov
sub
aam
rolb
les
push
mov
cmp
mov
inc
int
rclb
pushl
notl
add
add
jne
cmc
popf
jbe
mov
repz
add
mov
sbb
repnz
out
hlt
outsl
jmp
arpl
pushf
loop
jmp
cwtl
inc
ss
sbb
cmp
pop
pop
mov
inc
pop
sti
repnz
movsb
mov
je
jge
ret
fbld
mov
adc
lea
ds
test
scas
test
aam
cmp
scas
jae
icebp
imul
in
sarl
jno,pn
ds
or
push
repz
jo
or
adc
ss
rclb
out
out
outsl
sub
cmpsb
jge
sub
decl
lcall
and
or
lds
push
pop
add
or
push
mov
outsl
enter
xchg
popl
ljmp
cmp
push
jge
xchg
stc
sub
call
das
outsl
jo
fdivl
xchg
xor
imul
nop
pusha
enter
inc
pop
popl
sbb
xor
icebp
add
jmp
inc
dec
in
dec
lods
dec
pop
xor
mov
std
das
jg
and
sub
aas
dec
mov
in
loope
fwait
push
or
sbb
shrl
hlt
mov
cwtl
mov
jno
sti
mov
dec
sub
cmp
leave
pop
xchg
cmp
pop
cmp
out
add
inc
or
cld
idivb
test
cvttps2pi
movsl
sbb
stos
sub
pop
setnp
lock
inc
inc
mov
out
movsl
pop
push
roll
mov
cli
clc
add
jnp
sar
push
jo
repz
adc
jle
add
mov
fcoms
dec
or
inc
fldl
push
icebp
mov
add
aad
mov
loop
adc
push
jl
aam
push
sbb
cmc
mov
out
cltd
das
mov
add
les
inc
mov
test
add
and
mov
popa
repz
add
mov
loop
sarl
and
cwtl
sbb
les
notl
sti
push
hlt
addr16
std
adc
lahf
movsl
mov
test
shld
lds
inc
lds
xor
negb
popf
cli
lods
mov
aaa
loopne
cmc
fcoms
jle
inc
shlb
adc
and
jecxz
stos
dec
aam
xchg
xor
stos
fs
fwait
sahf
jbe
loop
cs
repz
sti
cmp
and
jmp
and
std
sti
out
ss
jbe
sbb
jl
adc
sub
iret
dec
lods
mov
mov
enter
jne
test
lock
ljmp
mov
jle
or
in
dec
add
xchg
mov
stos
loopne
sbb
aad
sbb
call
xchg
xchg
filds
and
loop
or
sbb
fnsave
das
sub
out
hlt
loope
mov
jecxz
and
outsb
mov
nop
popf
in
cmp
add
mov
cld
add
pop
push
js
pushl
mov
mov
adcb
outsb
adc
arpl
loopne
fdiv
sbbb
ljmp
movsl
mov
push
pop
mov
xchg
sbbb
jge
fcmovbe
mov
add
pop
mov
sub
bound
pop
xor
jecxz
push
adc
nop
or
andl
mov
xchg
es
jg
loop
outsb
popf
mov
and
inc
movsl
testb
mov
les
inc
fdivp
mov
sub
loop
test
insb
loopne
popa
mov
push
xchg
xchg
sbb
mov
mov
outsb
clc
xchg
jbe
adc
and
xchg
add
dec
jb
aas
stos
outsb
and
jp
andb
mov
inc
dec
aas
cs
in
outsl
std
out
stos
hlt
cmp
adc
pop
imul
lret
or
shrb
adc
push
jns
movsb
les
inc
popf
inc
push
xor
test
xor
stc
lods
call
out
aas
mov
aad
push
insb
movb
mov
lret
cmpsl
rorb
test
outsb
aad
and
rorb
in
loop
decb
push
ljmp
add
repnz
mov
add
clc
mov
jmp
jp
in
xchg
xchg
mov
sbbl
push
fsubrl
sub
loopne
and
mov
jns
jg
fwait
cs
pop
add
xchg
adc
mov
or
mov
inc
test
into
pop
mov
jp
popf
lods
sub
mov
jbe
mov
arpl
fadd
rorb
add
jg
push
or
xor
dec
cmp
xor
loope
jle
cld
stos
daa
and
inc
test
or
adc
and
mov
push
mov
dec
mov
mov
jnp
ljmp
or
mov
rcll
mov
fbstp
pop
faddl
add
ljmp
xor
hlt
jo
sbb
shll
lock
popfw
outsl
fbstp
mov
stos
ljmp
and
loopne
jo
enter
sub
roll
aaa
jne
inc
leave
or
mov
adc
and
cmpsl
mov
fidivrs
mov
insb
pop
inc
orl
in
aas
lods
ss
fildll
cmpsb
inc
loope
fs
ss
push
imul
dec
or
adc
push
xlat
pop
pop
pushf
or
pop
notb
outsb
iret
ja
push
loop
in
cmpsl
push
pop
add
mov
lds
in
cmp
mov
jg
inc
inc
mov
sbb
popl
mov
or
mov
int3
jge
cmc
sub
add
in
mov
add
shll
inc
insl
adc
mov
int
out
or
sub
arpl
int3
xor
imul
call
or
cmpl
jns
inc
xor
xchg
mov
pop
jns
ret
sbb
mov
or
inc
cltd
sub
sub
or
pusha
lods
push
push
adc
or
std
and
testl
or
jns
cmp
loop
in
cld
sbbb
or
xchg
out
or
les
lcall
pop
std
inc
insb
sbb
dec
xor
mov
inc
or
mov
ljmp
lret
lock
stc
dec
incl
dec
xor
rorl
adc
cmc
mov
inc
out
push
or
adc
cmp
sub
mov
push
cmpsb
lahf
adcb
les
add
pop
mov
ret
dec
ds
add
adc
inc
loopne
in
insl
loopne
cmp
xchg
inc
mov
fwait
mov
in
out
leave
test
je,pt
jmp
test
stc
dec
lret
sub
cmp
dec
js
sub
pusha
jo
and
ja
jbe
shlb
das
cmp
je
adc
dec
sbb
lahf
call
mov
decb
adc
in
std
add
rcrl
stos
cli
dec
jmp
aas
icebp
add
adcb
pop
aas
movsl
xor
dec
ss
cmpb
xor
cmp
xchg
or
dec
stc
mov
nop
push
mov
and
dec
cmp
movsl
fildl
test
in
jg
rclb
fbld
insl
add
push
lret
inc
enter
loop
pop
hlt
scas
clc
push
sarl
mov
dec
popf
jb
aas
fisubrl
mov
mov
jle
inc
sbb
sub
lods
scas
enter
adc
push
mov
scas
clc
cwtl
shlw
xchg
ficompl
pop
inc
aam
rolb
test
add
push
xor
pop
es
aad
pop
jl
rcrb
or
into
push
xchg
popf
clc
decl
int3
jbe
adc
and
ljmp
sbb
or
aas
adc
xchg
adc
inc
js
popa
dec
pop
xorb
dec
mov
ret
xlat
fdivs
inc
std
dec
cld
or
cli
xchg
jo
ficompl
lcall
jge
data16
sub
lea
and
in
mov
icebp
pop
movsl
nop
or
push
pop
pusha
call
mov
cmpsl
mov
int3
jbe
pop
xor
out
pop
icebp
loop
nop
lahf
mov
fldenv
jno
and
lahf
inc
jo
xor
add
xor
mov
stos
push
cmp
push
mov
in
stos
clc
push
push
test
stos
pop
hlt
cmc
jp
repnz
loopne
adc
stos
xor
pop
fimuls
insl
call
lds
mov
adc
andb
cmp
add
data16
ret
adc
stos
das
adc
cld
jo
inc
sarl
shr
mov
push
mov
cmp
cld
push
inc
push
pop
lds
pop
fcomps
add
inc
out
aam
inc
xorb
adc
add
sub
sub
add
jg
jo
cmp
fcmove
inc
jno
insb
and
add
scas
cmp
test
push
scas
in
sub
mov
decl
loope
add
push
out
test
xlat
adc
insb
fisttps
fisttps
pop
add
or
div
movsl
mov
cmp
inc
les
jl
add
jg
mov
push
xor
mov
sub
loope
andb
pop
imul
and
jns
pop
jmp
clc
push
bound
adc
repz
mov
mov
jno
xchg
dec
fs
out
xor
adc
jo
les
cmp
or
imul
pop
movsb
and
push
jmp
or
and
in
lods
sbb
pop
icebp
dec
pop
xor
cmp
hlt
lahf
push
add
and
mov
sub
sub
fwait
sti
mov
aaa
mov
cmpsb
or
sbb
or
fs
xor
add
idiv
icebp
push
ljmp
and
movswl
les
lods
xchg
cltd
nop
fcmovb
mov
mov
dec
jbe
aam
lcall
dec
cld
cltd
mov
call
jb
cmp
jg
mov
decl
adc
pop
mov
xor
loop
inc
jl
jl
or
pop
jle
inc
lcall
pop
mov
add
sub
in
fcomps
mov
add
mov
push
ret
adc
mov
lock
call
mov
mov
daa
sbb
inc
push
sbb
xor
scas
jl
les
and
sahf
mov
test
add
idiv
cmp
xchg
dec
lret
filds
lds
jecxz
pop
xchg
and
xor
and
adc
divl
inc
stos
cld
les
pusha
fnstenv
pop
nop
lods
or
or
push
mov
mov
mov
add
jle
adc
pop
in
pop
jl
sub
imul
jmp
popa
mov
insb
jle
jmp
mov
aas
sbb
adc
repz
adc
out
or
cmpsb
add
cmp
icebp
call
mov
xchg
jne
add
loop
scas
inc
pushf
or
cld
mov
mov
sub
fiaddl
adc
jnp
test
cwtl
popf
push
lea
std
push
adc
inc
sbb
inc
jl
das
fldcw
mov
rcrb
movsb
mov
loop
sbb
sbb
paddw
incl
cld
or
push
popa
mov
inc
loopne
push
sub
or
push
cmp
inc
out
cmpsl
out
xchg
shrl
dec
pop
std
or
push
insb
sbb
push
or
orb
aam
pop
inc
mov
pushf
sbb
pop
sub
sub
or
add
cld
stos
movsb
push
pop
movsb
add
pop
pushf
jge
loop
mov
mov
popa
shlb
leave
xor
add
inc
sarl
lret
testb
mov
pop
icebp
fiadds
sbb
sub
dec
inc
daa
aad
shrb
call
push
popa
addb
je
test
aas
cld
test
test
inc
mov
xor
mov
or
decb
andl
add
mov
andl
mov
fmull
movsl
and
mov
push
push
mov
clc
popa
loope
je
das
mov
pushf
fsubp
sbb
jg
out
insb
jp
cmovae
out
shrb
rcrb
lahf
adc
push
clc
mov
ljmp
test
mov
jno
jo
add
cmp
in
shll
call
inc
pushf
inc
xchg
sbb
insl
cmp
subb
cld
pop
mov
es
adcb
ja
ljmp
cmpsb
mov
mov
pop
popa
cmp
jae
into
je
insb
sbb
sbb
jge
decb
jl
mov
lock
shl
pop
adc
icebp
sub
pushf
mov
mov
push
mov
mov
mov
jg
cld
pop
or
or
sbb
jno
sbb
mov
aas
cmpsb
pushf
adcb
das
sub
mov
pop
mov
les
lea
dec
fs
add
xor
ljmp
fldenv
in
mov
hlt
sub
inc
cmp
int3
sub
add
fdivrs
mov
ds
cmp
test
inc
jo
dec
js
dec
lock
in
pop
mov
mov
mov
cwtl
push
adc
sbb
pop
adc
lret
mov
repz
adc
add
stos
mov
sti
mov
sbb
sqrtps
mov
cli
push
movsl
add
inc
inc
ja
fnsave
les
jle
mov
pusha
jmp
cli
sub
and
fnstsw
sub
ss
cwtl
mov
stc
xchg
mov
mov
pusha
andl
roll
aas
xor
jae
push
jp
cli
loope
cli
sub
push
repz
push
jmp
push
dec
mov
or
mov
outsb
les
mov
sbb
mov
jecxz
xor
sub
and
shr
cli
sbb
pop
xchg
or
mov
push
es
fdivr
sub
repz
ror
scas
sub
jno
ss
in
sub
fdivs
or
je
cmp
sbb
pop
test
ljmp
dec
inc
xor
les
xchg
push
xor
ficompl
imul
stc
add
dec
or
mov
or
adc
cld
into
inc
sub
jns
push
mov
xor
push
cmp
sbb
inc
push
ss
icebp
stos
mov
add
jae
sub
inc
sbb
dec
shrb
enter
push
add
or
js
inc
xchg
sub
lret
mov
mov
xchg
stos
sbb
mov
or
push
aas
fs
mov
adc
jbe
dec
cmc
dec
xchg
dec
xchg
mov
mov
sbb
jg
insb
cmp
xchg
inc
inc
dec
jbe
sbb
mov
mov
add
dec
or
inc
mov
test
out
jo
or
push
mov
and
or
inc
enter
add
je
sub
cwtl
movsl
mov
shrl
daa
mov
mov
mov
out
mov
ret
mov
mov
inc
sbb
cmpsl
outsl
mov
sub
hlt
das
inc
clc
pushf
mov
in
or
mov
xor
aas
outsl
ret
inc
cli
push
push
mov
dec
add
clc
pop
loope
rorl
sub
cld
shr
stos
mov
int3
push
sbb
push
dec
sbb
mov
sarl
cmpsb
inc
or
add
fbld
adc
or
add
push
and
fists
addb
ja
sbb
add
pop
incl
pop
fs
loopne
adc
adc
adc
sub
mov
jmp
push
shrl
adc
lret
fnstsw
add
out
lock
clc
xchg
mov
sub
pusha
mov
fistpll
inc
sub
push
jb
movsb
clc
std
sub
xor
inc
mov
addl
jno
jg
xor
js
inc
mov
pop
clc
push
inc
aas
add
xor
sarl
dec
fucomip
push
xlat
stos
dec
push
jnp
in
or
or
add
daa
inc
inc
mov
push
std
adc
sbb
xchg
sarl
xchg
loop
inc
adc
add
sbbb
or
or
sbb
fisttps
xchg
sti
arpl
mov
jno
push
in
pop
leave
mov
icebp
in
jno
cmp
cmp
adc
addl
rolb
popa
adc
and
jg
push
loop
inc
cmp
push
add
add
push
mov
add
pop
icebp
ret
pop
cld
aaa
sub
push
insb
sti
mov
pusha
jp
sarb
and
mov
or
jp
enter
mov
push
mov
xor
sbb
mov
popa
xlat
or
mov
fwait
jbe
pop
ficoms
xrelease
push
icebp
push
push
adc
fdiv
cli
scas
outsb
lods
or
xor
inc
add
pop
sar
decl
and
fldcw
je
ss
push
add
or
xchg
add
andl
sar
and
stc
push
jne
jle
sbb
inc
pop
ss
adc
xchg
cmp
sub
inc
sbb
out
rorb
and
popa
notl
ss
xchg
lcall
das
dec
lods
test
push
cli
jo
movsl
std
mov
pop
jecxz
pop
mov
sbb
push
xor
clc
sbb
and
or
xor
sbb
mov
sbb
fadd
ss
hlt
std
notb
xor
mov
push
roll
push
lret
inc
ja
cwtl
and
jg
insb
mov
jb
push
andb
bound
ret
and
push
xchg
rcrl
in
lds
cltd
daa
or
pop
ficompl
push
cs
test
ja
inc
cmp
mov
sub
js
jl
outsb
loope
les
outsb
ds
lock
lock
cli
aas
mov
mov
xor
add
and
ljmp
pop
andb
push
add
adc
xor
cld
mov
adc
xorb
lods
cli
xchg
lcall
stos
and
or
push
push
popf
add
sbb
adc
inc
push
outsl
lock
cli
mov
nop
test
es
outsb
sub
sti
jmp
sti
or
add
pop
cld
jmp
jns
inc
mov
imul
shll
leave
jae
or
jg
cld
dec
add
push
lcall
scas
out
or
cld
xor
subl
xor
add
icebp
pop
pusha
pop
cld
jne
loop
out
mov
test
add
pop
lret
cld
imull
add
and
cli
inc
loope
sub
and
adc
jge
das
cltd
dec
lcall
pusha
push
test
cli
add
loope
aam
mov
sti
sbbl
out
push
add
dec
push
mov
cmp
into
lret
cmp
sbb
data16
hlt
xor
ffreep
adc
mov
aaa
stos
mov
bound
or
push
pop
cltd
test
mul
pop
sbb
bound
push
cwtl
mov
sbb
inc
mov
mov
mov
push
enter
jbe
add
pop
test
icebp
jecxz
dec
adc
ja
push
sub
and
loopne
cmp
jo
rcl
dec
shrd
add
call
sub
xchg
ret
sbb
sbb
sahf
push
ds
pop
cmp
iret
or
bound
cs
insb
inc
or
sti
scas
nop
mov
pop
sahf
dec
mov
push
push
cmp
mov
ret
pop
stc
inc
mov
int3
in
ds
cli
leave
cli
sub
cmpsb
or
rcrl
mov
addb
cmp
lret
adc
push
pop
pop
cli
add
cmp
fisubl
mov
shll
adc
jecxz
stos
loopne
sbb
push
push
movsb
fstpt
loopne
lods
push
pop
aam
adc
adc
roll
jbe
fidivs
clc
in
loop,pn
push
cmp
add
das
jg
out
lock
mov
fcmove
test
add
popl
imul
push
push
int
int3
sarl
or
orb
add
cmpsb
cld
adc
repnz
and
imul
dec
or
decb
sub
fxch
sbb
inc
mov
into
mov
mov
icebp
rcrl
psubw
nop
cld
xchg
cmp
or
mov
aad
pop
push
ror
push
popf
adc
jge
push
subl
out
lods
cmp
pushf
fbstp
pop
std
ss
aaa
sub
pop
bound
pop
jecxz
sbb
pop
mov
xchg
les
push
xchg
lcall
rclb
das
add
mov
jbe
mov
pushf
dec
push
outsb
add
mov
addl
mov
xchg
lcall
rorb
inc
push
sahf
flds
adc
and
push
mov
ljmp
cli
mov
cltd
sbb
inc
mov
lock
js
mov
sub
sbbl
mov
or
es
sbb
addr16
adc
ret
call
sbb
cmc
jae
cmp
pushl
fsubrs
add
mov
xchg
adc
insl
pushf
cltd
fucomp
movsb
xchg
mov
clc
sbb
dec
ret
xor
lock
jle
push
aam
push
xchg
sub
push
fwait
ds
pop
stos
js
data16
dec
xor
xchg
pushf
or
iret
out
jmp
imulb
add
mov
xchg
clc
push
ds
and
or
mov
xor
subps
rcrb
jno
jle
xchg
push
pop
ds
xchg
sarb
cmc
xor
rol
rcrl
ffreep
clc
hlt
mov
je
push
push
ss
jmp
cmp
or
add
inc
jg
fs
cmp
cld
sarl
std
push
xchg
jp
mov
sbb
inc
andl
das
cld
arpl
jne
sbb
or
aad
js
jns
pop
rclb
lret
inc
add
adcb
xor
xchg
scas
cwtl
adc
test
adc
pop
hlt
push
adc
dec
cmpsb
jnp
mov
out
cli
out
sub
mov
jge
add
inc
lea
fildll
xlat
jne
das
cli
test
fidivl
imul
pusha
xchg
test
ficoms
add
mov
dec
popf
and
cmpsb
negb
mov
xor
outsl
test
xor
aam
xchg
arpl
jb
cld
adc
popa
sbb
cltd
push
ret
push
jmp
repz
ret
dec
daa
lock
push
xchg
pusha
sbb
dec
mov
jns
lret
add
aas
adc
pushf
push
add
adc
jmp
hlt
aaa
pusha
outsl
or
add
adc
mov
pop
push
xchg
lock
sti
mov
adc
jle
pop
sub
sti
dec
adc
mov
or
cld
xor
cmp
add
cwtl
repz
pop
or
dec
insl
add
xor
mov
jnp
cld
cmpsb
sub
mov
xor
mov
stos
ss
pusha
arpl
sub
ret
sbb
ja
not
jmp
add
outsb
hlt
ret
lea
sub
adcl
mov
mov
stos
push
or
adc
add
adcb
cmc
or
inc
jb
adc
dec
lock
or
cli
mov
pop
mov
mov
xorl
push
sbb
cli
nop
clc
and
scas
adc
mov
std
dec
dec
rorb
add
lods
inc
push
adc
clc
xchg
mov
mov
push
mov
add
sbb
jmp
addb
push
ret
adc
xor
xchg
jbe
in
call
js
sbb
jmp
outsl
push
repz
push
sbb
inc
xor
add
int
lret
jle
into
ljmp
flds
sbbb
iret
or
mov
rcrb
add
dec
xchg
jb
push
cld
scas
stos
mov
mov
test
notb
and
pop
scas
stos
iret
adc
scas
cmc
cmpxchg
iret
invd
pusha
mov
mov
ror
mov
outsl
std
push
clc
call
stos
dec
mov
inc
icebp
and
clc
loopne
pop
mov
sub
fwait
cmc
and
sbb
bound
jp
fmull
pushl
popa
adc
adc
adc
adc
repz
xchg
dec
push
aad
ss
in
cltd
aad
jnp
cs
mov
gs
or
push
cmp
scas
mov
fwait
sub
push
scas
mov
test
ret
jg
scas
adc
scas
inc
or
fiaddl
mov
cmpsb
add
add
test
shlb
jmp
inc
aas
mov
jge
mov
cmpsl
fidivrl
inc
xor
rclb
pusha
roll
jge
pop
and
mov
outsl
adc
dec
jns
xlat
data16
xchg
scas
sbb
mov
inc
les
mov
or
jp
js
pushl
add
mov
dec
cli
daa
mov
lcall
mov
add
jmp
stc
hlt
xor
mov
xchg
hlt
xor
push
shlb
xor
adc
icebp
add
add
hlt
or
fisttpl
cmp
sbb
jge
test
and
push
mov
decb
hlt
movsb
les
es
cmp
jne
cmp
inc
or
popa
xchg
mov
xor
push
cmp
dec
dec
push
mov
dec
add
outsl
push
fcmovbe
cmp
divl
or
jo
jo
mov
sti
dec
cmp
data16
sahf
push
popf
sarb
or
incb
jl
pop
lock
icebp
xor
xor
sahf
orl
or
js
lahf
cmc
out
test
int
and
rorl
popl
inc
xor
xchg
add
pop
or
in
dec
sub
js
mov
pop
arpl
jmp
adc
pop
jo
nop
or
or
testl
mov
xchg
and
inc
hlt
dec
mov
pusha
mov
jl,pn
and
sbb
cmp
sub
xchg
lahf
xlat
and
add
int
cmp
jns
mov
mov
xchg
xchg
loop
mov
xlat
sbb
mov
clc
xchg
xchg
pop
sub
mov
ja
mov
clc
xadd
mov
mov
xchg
pop
lea
cs
fwait
push
and
in
mov
mov
pop
cld
xchg
rolb
lcall
je
aad
gs
ret
fbld
inc
ss
dec
nop
inc
out
jbe
add
stos
push
cwtl
push
push
jmp
add
and
jmp
mov
leave
add
mov
popa
inc
outsl
enter
dec
adc
addr16
sbb
push
dec
aad
mov
outsb
pop
cmc
hlt
inc
out
icebp
and
mov
fwait
and
inc
and
cmpsl
dec
cmp
fldl
sub
push
adc
insb
adc
ja
pop
jecxz
cmpl
lock
ret
test
xchg
hlt
mov
in
test
push
movsb
xchg
adc
push
ljmp
hlt
and
dec
or
jmp
hlt
les
je
jbe
xchg
sub
pushf
mov
std
pop
addr16
mov
pushf
jp
sub
lods
add
xorb
and
test
ret
jmp
add
das
sbb
cmp
clc
cld
dec
push
and
shr
cli
pop
add
and
pop
push
or
adc
int
dec
add
cs
dec
jecxz
loopne
dec
mov
test
lahf
vunpcklpd
sarl
mov
inc
mov
out
clc
cmp
sub
addb
movsb
push
fidivrs
rcrl
xor
testl
loope
pop
and
mov
mov
cmpsb
andl
and
sub
pop
fwait
adc
sub
dec
sub
fadds
cmp
cmp
shlb
xchg
jnp
call
or
add
iret
cld
andb
iret
sub
add
add
insb
daa
pop
jno
ljmp
lret
stos
arpl
shrb
inc
xor
mov
das
sub
nop
sbb
xchg
outsb
popa
push
and
inc
cli
hlt
call
imul
xchg
mov
insb
iret
inc
push
add
and
pop
out
ficoml
dec
pop
and
lcall
test
jg
add
and
clc
lods
incb
xor
jae
faddl
add
lahf
mov
ljmp
cli
rolb
sarb
pushf
mov
les
lods
lds
cwtl
mov
sub
pop
and
cmc
xchg
and
or
xchg
clc
add
push
leave
in
insl
subb
outsb
loopne
incl
das
mov
ret
loope
leave
sub
aam
pop
hlt
mov
stc
cmpb
mov
out
iret
inc
or
enter
mov
push
cld
int
cmp
outsb
xor
leave
push
cmp
outsl
icebp
stos
rorb
dec
sub
shll
fsubp
and
es
repz
or
sarb
jmp
inc
test
or
sub
call
fcmovne
out
lds
mov
xchg
xchg
mov
pop
sub
or
notl
in
clc
rcrl
inc
hlt
orl
aad
mov
jnp
push
daa
test
push
and
out
in
sbb
mov
pop
insb
lcall
int
sahf
hlt
or
and
adc
shlb
jle
add
negl
dec
int3
pop
rclb
andl
inc
add
xor
jle
das
out
dec
insb
jmp
imul
or
call
mov
fsubl
mov
cmp
or
mov
add
cld
in
pop
and
out
xor
mov
fidivrs
in
loopne
inc
mov
add
cmpsl
lds
cmc
aas
sbbl
sbb
out
into
idivb
ret
cmp
lcall
cltd
add
jg
adc
sbb
flds
cmc
sahf
idiv
push
mov
in
ljmp
pop
inc
aad
pop
push
sarb
xchg
add
pop
outsl
jp
mov
stos
mov
pop
rorb
push
pop
imul
lds
xorb
pop
shll
imul
pop
mov
insb
push
mov
test
dec
mov
shld
out
adc
test
cmp
out
inc
push
call
sbb
std
ja
movsb
mov
shlb
test
sbb
fildll
lea
sub
mov
jno
sub
sbb
int
or
mov
mov
clc
fwait
mulb
xchg
call
xchg
inc
and
jmp
shll
cld
or
jno
lcall
fisubl
fisttpll
outsl
add
jae
pop
imul
cli
sbb
mov
jmp
dec
insb
xor
push
fistl
popa
insl
out
xlat
pop
daa
add
mov
add
sub
mov
jp
xlat
mov
rol
les
sbb
lret
or
pop
out
xchg
push
cmp
shrb
add
loopne
inc
mov
xchg
aas
test
cli
decl
pop
pop
jno
push
je
and
inc
jno
jle
jge
out
dec
out
insl
cs
sahf
popf
test
sub
mov
jp
pop
adc
shlb
jmp
jbe
mov
je
fistps
cmp
add
mov
and
add
out
dec
roll
jg
movsb
sub
fsubrp
dec
sbb
mov
push
shl
add
mov
js
fwait
xchg
loope
and
hlt
mov
pop
popf
pusha
fstl
sbb
push
orb
ret
stos
divl
pop
add
xchg
xchg
mov
dec
das
scas
push
dec
or
inc
js
or
fidivs
adc
jge
adc
push
sarb
out
sub
push
jno
jnp
inc
add
jb
loopne
mov
or
push
inc
jnp
jge
mov
jne
sbb
std
ret
add
push
outsb
adc
adc
push
dec
call
or
mov
fimull
and
mov
loop
mov
and
das
fdivs
sub
loopne
and
orb
push
or
clc
cmp
stc
jg
arpl
mov
fidivl
mov
xor
or
and
fildll
dec
cmp
xor
data16
lret
ljmp
in
stos
sahf
pop
mov
jg
cmp
mov
fildl
lds
inc
add
lcall
and
lds
cmp
fucomp
mov
mov
mov
aaa
inc
popa
inc
or
loope
xchg
pop
test
push
scas
mov
ja
out
pop
cmp
inc
call
inc
mov
shll
out
mov
pop
mov
ret
sbb
data16
sbb
ficompl
sub
jp
decl
sar
inc
add
jecxz
shll
clc
decb
adc
xor
lret
lods
incl
rolb
cld
push
push
jo
popa
add
insl
dec
jmp
lahf
sbb
jmp
or
sti
subb
cld
pop
jg
dec
int
pushf
mov
test
adc
ret
jbe
shr
aam
mov
loopne
imul
shl
icebp
sbb
stc
jnp
push
mov
xchg
outsl
sub
push
cld
test
icebp
dec
push
int3
lahf
dec
arpl
xor
test
dec
loop
test
mov
pop
ror
hlt
test
mov
add
jne
mov
pop
dec
sbb
ret
pop
pusha
mov
and
lret
loopne
adc
mov
xor
adc
mov
bound
pop
test
cmp
jg
call
sub
lea
add
ljmp
int3
int3
pushf
movsb
lcall
inc
nop
std
fcompl
pop
ss
xchg
das
mov
jo
sbb
sub
cmpb
dec
bound
pop
or
rclb
stos
ljmp
cld
mov
push
mov
jb
adc
dec
jge
adc
xchg
je
das
lahf
hlt
stos
scas
jl
push
outsb
adc
pop
cli
or
dec
stos
inc
pop
or
xlat
movhps
in
cli
test
pusha
xor
mov
divl
push
mov
subl
adc
rcr
mov
popl
inc
mov
lock
dec
mov
mov
xchg
sbb
loopne
cli
xchg
mov
mov
mov
cld
add
and
lock
in
push
or
push
dec
jecxz
push
fdiv
mov
add
or
add
das
call
rcr
lods
rorb
mov
sar
push
adc
mov
cmpsl
inc
adc
cmpsb
loope
sbb
icebp
push
clc
mov
js
xchg
fisttpll
incl
ljmp
movsl
sbb
aas
es
and
fsubrl
inc
daa
dec
sbb
mov
xlat
rolb
add
mov
push
call
sub
clc
test
in
or
gs
aas
loope
cmp
int
inc
or
add
push
adcl
and
push
cmp
xchg
rclb
scas
ljmp
insb
jle
data16
xchg
add
adc
jecxz
lock
ss
push
adc
lods
sti
lock
call
xor
movsb
or
es
or
push
pusha
incb
jg
roll
inc
lock
push
dec
aad
call
xchg
xchg
adc
push
mov
mov
mov
and
push
push
clc
movsl
test
adc
mov
push
mov
adc
mov
insl
subb
push
jg
push
jl
adc
cmp
pop
jecxz
pop
adc
sbb
cmp
in
test
in
xchg
push
xlat
ret
pop
lret
test
imul
aam
fadds
pop
loopne
add
pop
decl
sub
imull
push
jg
lret
add
pop
roll
ja
jl
mov
adc
push
push
inc
jmp
and
xchg
adc
cs
ret
dec
sub
inc
pop
in
clc
xchg
and
das
cmp
jb
ss
pusha
mov
stos
mov
mov
jb
sub
hlt
push
inc
shrl
iret
js
xchg
adc
nop
mov
push
mov
stos
jb
xchg
jns
mov
das
lock
inc
pop
ds
push
cwtl
and
popf
negb
lds
enter
cmp
xchg
mov
in
rcrl
mov
adc
mov
dec
mov
sub
jmp
pop
adc
in
push
cmc
or
fwait
jle
test
xor
add
mov
add
and
jo
or
mov
push
lcall
sahf
inc
rclb
adcl
imul
sbb
decl
loope
pusha
sbb
inc
pop
jbe
out
pop
push
and
shl
sub
enter
leave
inc
mov
test
push
in
push
gs
xchg
fs
ja
inc
cwtl
add
jle
push
mov
dec
inc
pushl
jle
sub
int
dec
outsb
shll
mov
inc
insb
hlt
add
insl
lock
ljmp
decl
pop
les
mov
enter
pop
push
imul
jle
pop
push
cli
push
inc
jecxz
xchg
push
rcrb
dec
and
stos
aas
push
mov
and
popf
cmp
cmp
and
adc
sub
pop
ret
push
dec
call
test
sub
push
dec
xchg
imul
sbbl
andb
lcall
add
pop
pushf
sbb
hlt
int3
mov
repnz
jne
push
inc
jge
std
mov
xchg
mov
dec
incl
fidivs
inc
mov
sub
std
andb
decb
jmp
js
mov
sbb
aaa
jle
pusha
or
push
mov
ja
testl
inc
in
add
fstp
add
in
mov
movsb
test
sbb
dec
outsl
insb
xlat
jb
lahf
push
stos
hlt
das
lock
roll
dec
pop
movsl
cmp
add
adc
push
test
lcall
inc
lahf
hlt
jnp
insb
add
mov
xor
cmpsb
arpl
jp
xchg
ljmp
jbe
sbb
or
xor
btc
jg
loopne
pop
testb
es
sbb
aas
out
loopne
mov
fnstcw
push
inc
push
call
test
and
std
fmuls
mov
add
pop
cmp
insl
sbb
push
mov
decb
call
push
decl
imul
mov
mov
push
xchg
sub
or
push
outsl
imulb
aam
mov
fstps
lock
inc
adc
clc
stos
mov
cmc
pop
xor
xorl
cld
push
cmp
ficoms
cmp
lock
jmp
aaa
sbb
cmp
sub
dec
ja
jmp
call
add
mov
push
data16
std
or
sbb
lock
cmpsl
sbb
mov
lcall
add
aam
sarb
adc
cmc
mov
cltd
sbb
xor
ja
rcl
jnp
dec
inc
jmp
lock
xor
call
xchg
cmc
test
mov
add
lcall
pop
hlt
mov
decl
push
loope
les
fwait
js
leave
lock
das
push
lret
clc
push
lret
fsubrl
add
lret
pop
out
inc
incl
dec
mov
stos
push
outsl
filds
outsl
ljmp
pushf
cmp
push
ljmp
sbb
add
cmp
lds
mov
stos
or
ja
add
cmc
mov
out
xor
sarb
xor
cmp
jg
cld
pushf
push
dec
aad
outsb
iret
cmp
mov
sahf
and
sti
aam
add
push
sub
add
out
push
mov
xor
lret
cmc
jnp
lock
outsb
enter
mov
inc
adc
js
adc
adc
jecxz
lret
lods
mov
xor
inc
ror
hlt
pop
cs
sahf
add
popf
cwtl
and
xchg
movl
mov
push
push
call
fwait
adcb
jmp
inc
fwait
loope
out
xor
add
dec
call
cld
mov
mov
mov
xlat
enter
or
pop
lock
xor
xchg
cwtl
jmp
call
and
and
sub
jb
pop
sahf
enter
dec
ljmp
icebp
out
xchg
mov
in
js
orb
mov
in
mov
xor
inc
in
sub
or
jb
js
pop
rclb
jecxz
test
inc
push
and
lock
cltd
lods
sub
cmp
push
std
mov
inc
xchg
or
lock
cmovle
cli
push
push
mov
movsb
jmp
add
pop
lret
dec
cmc
mov
movsl
faddp
into
daa
xor
arpl
dec
inc
cld
gs
xchg
dec
sub
dec
xchg
push
stc
outsl
mov
xorl
add
or
aaa
shl
and
imul
jle
out
cmp
xchg
jns
cmp
mov
inc
mov
mov
add
popf
icebp
es
mov
lret
cmp
mov
ret
pop
imul
out
add
push
sti
testb
mov
sbb
mov
sbb
push
lock
dec
sbb
movsb
push
pop
adc
xchg
sbb
mov
and
inc
lcall
pop
xchg
sbb
decb
rcrb
icebp
mov
popf
mov
out
int
xchg
pop
push
gs
rol
andb
inc
ror
dec
sahf
in
jnp
stc
loope
jle
ljmp
fidivs
js
aas
mov
cmpsb
cmp
mov
mov
mov
add
jmp
inc
xchg
add
lea
ja
and
mov
dec
push
mov
pop
ljmp
hlt
sbb
aam
adc
adc
fistpll
and
subb
xchg
je
adc
test
sbb
lods
adc
mov
test
sar
aas
mov
pushf
or
push
movsb
add
je
std
sbb
leave
test
inc
rorl
inc
arpl
cmp
imul
data16
inc
popa
js
or
jmp
adc
mov
in
xchg
daa
lcall
mov
iret
cmpsb
and
pop
inc
jp
rcl
or
subb
mov
test
adc
xchg
adc
add
xchg
movsb
aam
xchg
adc
pop
pop
adc
dec
loop
xchg
pop
sub
dec
icebp
cli
or
rol
xchg
cld
xor
les
clc
pop
scas
cmpsb
ficoml
enter
shrb
in
lret
xchg
jne
aaa
hlt
das
cs
aas
lret
out
stos
inc
add
and
cmpsl
mov
nop
jb
dec
push
cmp
sbb
sahf
xchg
cli
fists
lret
sarl
add
mov
inc
push
xchg
lock
add
es
pop
mov
add
popf
int3
pop
inc
push
scas
cmc
sti
and
or
pop
lods
mov
cmp
dec
adc
mov
push
fsubs
mov
test
movl
je
das
mov
push
mov
dec
call
or
pop
jle
jg
mov
mov
add
dec
pop
cmpsl
add
lret
movsl
push
inc
push
subl
hlt
ljmp
jbe
pop
fsubrp
add
shll
loope
clc
stos
mov
push
lret
xlat
out
push
adcb
xor
imull
push
call
dec
sbb
push
pop
dec
jb
lahf
sub
dec
clc
daa
sub
insb
insl
dec
pop
mov
push
test
iret
or
mov
in
leave
idivb
js
outsl
addl
add
setbe
mov
movsl
adcb
pop
imul
lea
andb
fs
pop
cld
divb
imul
je
scas
dec
mov
mov
jno
lea
bnd
vpunpckldq
aas
scas
sub
inc
fisubl
jp
test
mov
cmc
dec
icebp
push
mov
cltd
xor
xor
jp
je
jecxz
adc
movsb
cmc
incl
lea
rcr
mov
clc
lret
mov
fisubs
mov
fstps
push
push
xchg
mov
call
adc
and
mov
test
pshufw
sbb
jb
pusha
lock
loopne
jno
movsb
in
lret
add
xor
mov
inc
sbb
mov
lock
mov
mov
add
sarb
mov
push
mov
or
inc
and
int3
push
mov
inc
mov
and
mov
repnz
dec
aas
movsl
cmc
jno
inc
pop
jg
pop
int3
movsl
aas
add
loop
inc
mov
push
in
pop
ret
es
cmp
pop
and
lcall
cld
mov
push
lock
adc
jp
scas
mov
xlat
rorb
in
and
adc
jnp
aad
mov
sbb
repz
cmpl
orb
mov
loop
ret
xchg
pop
jmp
fsubl
xor
pop
loopne
pusha
add
clc
and
mov
jle
stc
inc
sbb
xchg
out
mov
clc
sub
dec
push
imul
rolb
ror
sahf
or
jb
mov
clc
sbb
or
add
xor
pop
in
push
das
push
dec
cwtl
sarb
popa
mov
ffreep
sub
rorl
jl
jp
repnz
ret
scas
xor
mov
lods
out
or
pop
aas
xchg
adc
call
test
xor
jmp
loopne
sbb
cmpsl
push
fsts
mov
sbb
sbb
cwtl
cmp
stos
dec
imul
push
outsl
out
add
stos
fwait
xor
shrb
fxch
pusha
push
lret
push
test
adc
test
lods
mov
jnp
data16
push
jae
mov
aas
sub
xchg
imul
sti
xchg
or
dec
add
cli
test
or
daa
outsl
or
ss
fwait
cmp
xor
xchg
sahf
cmc
pop
sbb
or
js
sub
std
xor
out
pusha
fstps
jge
mov
notl
cli
cmpsl
call
cli
js
subb
mov
cmp
sbb
add
lock
pop
push
cld
ds
pop
mov
cmp
arpl
jo
sbb
or
fmul
jp
adc
ljmp
ret
rol
enter
sbb
mov
icebp
mov
xchg
js
sbb
shll
mov
ret
divl
or
popf
add
dec
jmp
mov
insb
xchg
cmpsb
out
out
fsts
add
add
mov
mov
ret
or
inc
sbb
das
sti
xchg
aad
add
push
rolb
and
test
and
fwait
dec
push
inc
fwait
cmp
loop
mov
sbb
mov
dec
fwait
cmp
dec
pop
pop
outsl
test
sbb
aad
pop
xor
adc
fildll
or
in
xchg
les
sub
clc
jl
inc
xchg
in
xor
adc
pop
add
xchg
jns
scas
cmpb
cmp
sbb
fdivrs
add
jne
outsb
fadds
push
sbb
dec
jnp
rcrb
jl
je
dec
cmp
rolb
dec
loope
aam
or
sub
outsb
inc
loop
popa
mov
mov
shrb
mov
push
adc
ficoml
sbb
js
aad
sub
dec
aaa
lock
add
test
inc
xchg
pushaw
sahf
jecxz
cmc
inc
lock
pop
loopne
daa
mov
or
inc
jge
dec
hlt
push
pop
dec
xor
mov
movsb
inc
loopne
pop
ds
clc
mov
clc
daa
rclb
cmp
mov
pop
insb
inc
mov
adc
ret
stos
dec
mov
clc
xchg
pop
jno
mov
add
push
ja
les
std
aas
inc
add
roll
inc
fs
inc
cmpsl
shr
sub
xchg
xchg
xor
adc
inc
jp
jge
push
mov
out
sbb
xor
ljmp
push
out
sti
insb
jge
push
cld
or
fdivrl
fsubrl
mov
sbb
sbbl
filds
pop
lahf
rcr
and
das
gs
mov
jle
pop
repz
xchg
mov
or
fbld
lods
inc
push
push
out
jb
or
push
lea
ret
lret
daa
xchg
mov
jno
push
add
das
and
stos
pop
js
sub
je
push
shlb
dec
mov
movb
popa
out
or
stos
fildll
sahf
jge
call
popa
add
lretw
mov
repz
sub
push
or
subl
push
stos
test
pop
sbb
mov
shrl
jle
xor
into
push
and
data16
add
jbe
leave
lret
fistpll
and
push
jmp
adc
push
iret
inc
add
pop
sti
dec
test
or
dec
mov
call
cli
add
ja
outsb
sbb
add
adc
cmp
iret
test
loopne
loopne
repz
pusha
or
js
repz
in
mov
pop
sarb
add
mov
mov
arpl
push
int
add
xchg
dec
xor
push
in
rcr
std
insb
jno
rcll
jae
push
xor
jge
or
push
mov
test
cwtl
cmpsb
pop
sti
fmull
ss
lret
fimull
dec
mov
adc
add
mov
dec
cmp
adc
fadds
lods
sub
subl
dec
jle
mov
or
xor
jp
dec
adc
adc
dec
cmpsb
add
jg
push
xchg
iret
push
in
sub
in
or
mov
fimull
jg
push
ja
fadds
je
pop
sti
or
mov
xchg
lea
outsl
cmp
sar
jb,pt
test
xor
sbb
clc
test
jge
scas
rorb
mov
subb
shrb
or
adc
imul
lods
shr
icebp
mov
pop
and
addb
jmp
loop
mov
or
outsl
outsb
in
add
lock
push
stos
daa
aam
imull
push
dec
out
inc
xchg
or
xchg
clc
aad
aaa
stos
dec
out
es
and
gs
adc
cmp
cli
cmpsb
add
scas
mov
pop
cmpsl
pop
push
push
mov
lcall
mov
out
push
and
mov
mov
lock
sbb
xchg
add
test
sti
sbb
or
bound
insb
jl
loopne
dec
or
addb
jae
daa
jae
fimuls
test
test
xlat
sbb
fnsave
or
adc
push
aas
sub
scas
jle
test
pop
in
or
adc
and
push
call
jp
push
mov
pushf
ret
xchg
xor
fcmovu
loop
popl
in
in
cmp
lds
mov
adc
mov
std
sub
pusha
sahf
jno
mov
mov
xchg
rcr
std
scas
pop
fistpll
arpl
push
dec
rcrb
push
cld
scas
jp
mov
mov
cmc
add
add
push
jg
cs
lret
fistpll
ja
ret
xchg
add
sub
xor
pop
xlat
sbbl
fs
mov
push
dec
inc
mov
adc
jle
pop
js
xchg
lods
sub
es
js
sbb
fisubrl
dec
subl
shl
sbb
adcb
ret
enter
hlt
pop
shlb
xorl
and
adc
mov
icebp
xor
stc
icebp
nop
div
and
jmp
dec
ljmp
jmp
jecxz
xor
xchg
nop
or
in
addb
and
xor
jnp
pop
jl
cmp
stos
xchg
ret
pop
mov
mov
or
iret
std
push
push
movl
shr
push
in
jbe
jb
add
sbb
ret
xchg
xor
and
inc
fsubr
pop
adc
in
mov
pushf
fisubrs
out
in
pop
insb
pusha
pop
mov
mov
add
adc
adc
mov
cli
ds
or
mov
int3
test
test
dec
adc
adc
orl
stc
lock
outsl
shrb
mov
mov
push
adc
cmp
call
into
cmp
or
adc
fstp
push
add
aaa
or
mov
fidivl
sub
je
imul
mov
test
scas
add
icebp
scas
aam
xchg
js
push
int
ss
cmp
ds
out
inc
lds
push
mov
fwait
shr
icebp
sarl
mov
adc
data16
push
out
inc
jge
adc
xor
dec
xchg
rorl
test
push
sbb
sub
lret
repz
int
fstpl
inc
aad
es
push
outsb
mov
mov
mov
sbb
daa
ljmp
stos
repz
ds
sub
out
sti
loopne
inc
adc
xchg
ljmp
mov
cltd
or
and
cmc
stos
int3
aas
icebp
or
cs
or
inc
sti
test
aas
dec
sahf
lahf
cli
push
clc
pop
sahf
enter
data16
icebp
insl
xor
jg
adc
mov
or
je
add
xor
in
pop
mov
jl
add
push
hlt
or
and
jmp
mov
jmp
fisttps
loope
iret
cmc
pusha
push
lret
sub
icebp
fs
mov
sahf
or
and
inc
sbbl
in
and
shll
int
mov
aas
les
inc
inc
fwait
xor
cs
orl
faddl
adc
jecxz
xor
or
loope
sub
push
xchg
enter
lods
or
daa
cli
adc
jmp
xchg
push
pop
insb
inc
lods
dec
adc
or
bts
mov
adc
push
das
pop
inc
pop
lods
mov
js
jl
fiaddl
xchg
outsb
inc
jno
push
adc
or
or
mov
pop
cmp
sbb
addb
call
inc
cld
add
mov
and
push
mov
cmpsl
movb
fcoml
call
cld
cmc
sub
sbb
out
incb
or
ret
mov
ljmp
in
cmp
cmc
xor
xchg
in
push
mov
xchg
ss
inc
and
je
rcrb
xchg
mov
notl
das
xchg
add
mov
hlt
push
das
mov
pop
shlb
enter
adcl
xchg
loop
movsb
movsl
pop
adc
xchg
cmpsl
or
insl
nop
loop
jne
es
jg
in
lods
inc
push
lret
sti
adc
jg
stc
incb
daa
add
ret
cwtl
sub
js
out
pop
stos
repz
rcr
dec
cwtl
sub
xchg
ror
inc
push
mov
mov
jmp
sub
cmp
xchg
arpl
scas
or
enter
in
jl
rclb
addl
jns
call
cmpsb
jecxz
hlt
pop
mov
xor
cmp
jl
in
loopne
mov
lock
std
inc
mov
sti
test
xchg
sbb
lods
and
clc
and
outsb
fsubrl
adc
ljmp
rclb
aam
inc
aaa
push
lds
add
mov
jp
mov
and
push
xchg
icebp
dec
push
jle
imul
cmp
inc
ss
rorl
aas
xchg
aam
cld
lret
inc
mov
add
push
xor
push
cltd
out
dec
mov
adc
and
into
push
cmp
je
loopne
jo
addb
in
xor
adc
inc
test
stc
loope
jl
cmp
ja
shll
jp
addr16
mov
ret
in
inc
into
jno
jnp
fdivr
inc
push
cmp
sbb
adc
push
adc
push
stos
adc
js
pushf
add
mov
fs
adc
add
lret
pop
mov
out
in
lds
movl
clc
in
subl
loope
sub
icebp
push
dec
sbb
cmpsl
adc
pcmpgtb
int3
in
fbstp
loope
add
or
std
movsl
mov
sub
arpl
pop
sbb
jmp
dec
fisttpl
dec
sbb
outsl
and
mov
adcb
cmp
ja
loop
adc
jbe
dec
push
ljmp
jne
fidivrs
sbb
add
repnz
addb
repz
movb
xchg
lock
in
lret
cmp
sbbb
jno
les
mov
shl
or
rorb
fwait
popa
repnz
mov
and
pop
push
ss
mov
addr16
stos
xor
mov
xor
sbb
mov
push
pop
push
inc
mov
mov
xchg
push
fisttpl
addr16
das
arpl
push
mov
mov
dec
pusha
std
pop
pop
in
add
sub
push
iret
adc
in
js
outsl
cmp
push
adc
or
add
in
or
and
dec
gs
mov
fdivrp
xlat
scas
jb
jp
and
jnp
add
dec
add
icebp
push
fbstp
cmp
add
pop
sbb
mov
mov
pop
leave
das
or
mov
sbb
lret
sub
fildll
push
shll
js
cmp
mov
call
sbb
jo
enter
jp
lock
sarb
push
in
pop
cmp
cmpsl
mov
fwait
adc
pop
or
pusha
cmp
stos
clc
mov
stos
mov
hlt
mov
add
mov
icebp
xor
fistpl
rcrb
das
iret
jge
int3
jo
test
inc
movsl
sbb
lds
jge
mov
cmp
xor
mov
pop
scas
push
add
sbb
cmp
outsb
shll
xchg
outsl
cli
pop
mov
add
adcl
aas
pop
out
jp
adc
mov
jl
push
fdivrs
aaa
fistpl
dec
in
jne
adc
add
mov
add
bound
adc
push
rorb
scas
pop
push
scas
inc
jmp
push
aad
mov
icebp
and
sbb
xor
ss
jno
inc
push
mov
add
add
int3
aad
mov
pop
xchg
es
adcb
fwait
test
lret
sbb
mov
lret
cld
popf
cmp
rol
fcmovbe
push
push
jg
jg
scas
dec
push
test
push
idivl
std
insb
and
adcb
cwtl
sarl
leave
add
addr16
gs
cmp
dec
lds
mov
in
add
loopne
lcall
popa
test
nop
daa
cmp
pop
movsb
in
test
mov
push
test
pop
stc
and
mov
sbb
shrb
out
add
jl
loope
push
or
loopne
or
outsl
cmpsb
jge
insb
imul
inc
clc
cmp
mov
filds
push
pop
ds
cmp
or
cmp
add
fbld
add
jns
mov
cmp
jle
lcall
loop
lock
sub
mov
or
ljmp
push
mov
add
inc
and
inc
mov
pop
loope
or
rolb
cmp
int
in
loopne
jbe
dec
into
cld
inc
add
mov
loopne
jge
jb
mov
das
xchg
xor
mov
in
stc
aad
pop
pop
jle
cwtl
adc
add
hlt
push
ret
shrl
inc
pop
add
loop
push
dec
and
nop
mov
in
lcall
push
xchg
clc
rorl
and
iret
je
adc
cmp
adc
loope
stos
adc
fdivl
scas
xchg
push
mov
pop
pop
fldl
das
bound
les
push
xor
inc
test
sbb
push
dec
in
lods
loopne
sub
cmpsl
negb
stos
outsb
sbb
popf
pop
adc
mov
test
jp
rol
sub
push
lods
test
pop
or
or
movsb
cmp
and
xchg
ljmp
and
out
outsl
popa
jecxz
and
sbb
sub
sbb
imul
xor
cs
push
aad
pop
ret
das
adc
adc
jp
or
mov
add
sbb
or
stc
add
addr16
cmp
int3
flds
sub
jmp
and
cmc
stos
mov
daa
mov
sbb
stos
add
mov
cmp
clc
xchg
add
fwait
add
sub
cmp
js
mov
arpl
leave
add
mov
adc
js
mov
cmp
mov
scas
inc
std
jmp
stos
in
mov
sub
mov
mov
repz
out
pop
mov
addb
push
test
pop
ret
aas
addb
or
cmc
dec
frstor
cltd
outsb
push
in
adc
xlat
ret
fnstenv
adc
cmp
push
sbb
jae
pop
sbb
rorl
inc
ds
xor
add
idivb
pop
sbb
movsl
push
push
lea
dec
imul
aas
mov
mov
and
lcall
add
leave
repz
fcoms
rorl
dec
loopne
cmp
sub
ss
mov
andb
add
pop
subl
jg
or
subb
mov
xor
out
ljmp
fxsave
sahf
push
mov
pop
lahf
pop
add
sbb
mov
repz
outsb
jns
sahf
jmp
and
ss
cmpl
xchg
shll
mov
mov
stc
cltd
jno
adcl
xor
xor
sub
dec
sbb
cmp
insb
add
inc
add
sbb
jnp
outsb
cmp
cmc
push
cwtl
std
mov
pop
lds
fadds
insb
ret
stos
jbe
add
push
cs
mov
lret
ret
mov
mov
sti
ja
lea
xchg
out
aaa
imul
push
hlt
js
xor
cld
call
pop
mov
mov
add
aas
stc
add
les
xchg
add
push
pusha
add
sub
addr16
pop
enter
test
int
or
cwtl
mov
mov
push
fs
inc
inc
lods
pop
imul
aaa
fwait
ss
adc
mov
pop
mov
fdivl
pushl
dec
pop
sub
ret
scas
pop
push
ss
adc
je
mov
xchg
lret
add
sbb
ljmp
pop
adc
mov
and
pop
cmp
mov
jae
dec
fucomi
imul
sbbl
inc
out
daa
in
in
clc
repz
or
outsb
out
sub
add
imul
fdiv
cmpsl
adc
pop
and
orl
push
inc
je
insl
addl
push
pop
arpl
rcll
jns
notb
sbb
cmp
test
sub
test
and
lret
xchg
add
in
les
xor
inc
pop
ljmp
int
jnp
push
pop
loope
add
push
mov
sbb
add
push
test
insb
test
jb,pn
fisubrl
jno
popf
into
mov
cmp
orb
and
clc
cwtl
fisttpl
or
cltd
jb
add
sbb
sub
push
das
addr16
ja
jb
leave
jne
notb
xor
sbb
rolb
aas
jno
add
and
push
adc
adc
aad
repnz
mov
scas
mov
mov
outsb
cmc
pushf
jecxz
cmp
xchg
adc
aaa
mov
jnp
pop
jp
push
fcmove
inc
shll
lcall
xchg
cmp
loopne
jae
movsl
sbb
enter
daa
push
xchg
adc
test
push
push
jb
mov
mov
push
arpl
fistps
sbb
dec
mov
or
pop
add
mov
movsl
stc
pop
push
ret
jns
stos
adc
mov
xor
lcall
cli
clc
or
jnp
movsb
leave
pop
sbb
pop
add
add
fstpt
je
ljmp
ds
stos
fnop
adc
stc
roll
mov
mov
mov
fisttpll
mov
xchg
cmpsl
aad
mov
push
cmpsl
jnp
jns
mov
daa
rclb
jecxz
pop
mov
xchg
add
mov
out
add
lods
ret
cmp
in
testb
or
movups
mov
jmp
lods
or
test
stos
inc
jl
ret
leave
xchg
or
lea
jp
xor
loopne
jmp
xor
fimull
pop
aaa
push
pusha
fnstcw
daa
add
jbe
pop
outsb
out
stos
cmpsb
cmpsl
and
lcall
or
jno
or
mov
mov
jmp
addb
ret
jmp
outsb
jne
or
sbb
fnstenv
jl
daa
shrb
jp
xchg
xor
mov
stc
xchg
clc
push
sbb
jno
jo
cmp
mov
rorb
pushf
popa
inc
popf
adc
outsb
fnstenv
movsl
jo
repz
xchg
clc
add
xor
cmc
cmp
pop
jae
fisubrl
pop
add
or
mov
xor
ja
pop
daa
test
fstpt
pop
cmp
push
les
jp
daa
inc
mov
push
cmp
pop
test
or
or
xchg
es
inc
lods
mov
mov
jecxz
mov
lods
jnp
push
je
xor
xchg
dec
lret
das
inc
scas
mov
orb
rcrb
mov
outsb
add
push
push
push
xchg
arpl
lds
mov
pushf
fisubs
fisubrs
movsb
pop
push
movsl
pusha
xchg
cmp
mov
orl
pop
lret
scas
imul
stc
mov
pop
pop
adc
mov
ljmp
adc
lods
js
jp
push
in
movsl
push
pop
aad
jns
cltd
mov
test
and
js
adc
ret
cmc
add
fcoms
jns
jmp
mov
out
rorl
push
or
xchg
dec
adc
mov
repnz
cwtl
add
jecxz
inc
push
lcall
push
pop
jge
xchg
in
sbb
rolb
scas
cld
add
pop
imull
sub
andb
lret
shrb
ss
jb
push
inc
adc
push
std
xchg
xor
lahf
push
std
cld
xor
push
insb
jns
jne
enter
pop
int3
xchg
jecxz
repz
mov
scas
jecxz
mov
inc
mov
mov
les
fstl
xchg
sub
jns
add
add
push
sbb
xor
jne
insl
push
cwtl
mov
fistpl
pop
std
and
rcrl
mov
cmp
sti
cwtl
add
jo
pushf
lods
jo
mov
arpl
mov
rorb
outsb
jmp
dec
outsl
cmp
pushf
cmp
scas
inc
dec
jmp
or
and
into
add
cltd
imul
pop
shlb
daa
inc
lea
cltd
fildll
sbb
scas
je
pop
adc
mov
jl
mov
cmc
mov
sub
xor
sbbl
repnz
icebp
call
ret
shrl
dec
out
orl
lcall
sub
mov
repz
cmp
std
pop
push
add
cmp
mov
mov
add
out
out
insl
sbb
mov
dec
lret
adcb
xchg
jp
jo
pop
scas
icebp
jbe
add
packsswb
ret
push
dec
inc
aad
dec
or
loop
push
test
push
xor
pop
inc
xchg
add
cmp
pop
sbb
add
fadds
loopne
adc
cmc
pop
or
adc
int
jb
sub
xor
stc
cmpps
lret
test
sub
lea
js
push
mov
jo
jg
mov
pop
pop
fiadds
fadd
adc
pushw
inc
jmp
and
adcl
clc
xchg
jno
test
add
insl
sti
mov
bound
insb
mov
addr16
add
mov
fincstp
pop
mov
outsb
add
jbe
pop
outsb
cmpsl
leave
add
dec
inc
add
ficoml
stos
rcl
imul
jl
lahf
pusha
push
push
ja
pop
in
inc
lea
or
sub
out
and
jmp
pop
pop
sti
cmpsl
xor
pop
sbb
les
cmp
sti
mov
xchg
adc
icebp
lods
lcall
xchg
or
jg
jmp
aad
jge
jle
inc
arpl
inc
xlat
and
pop
xchg
daa
inc
mov
imul
add
out
mov
sub
jg
test
loope
or
xor
mov
jl
mov
sbb
xorb
dec
js
push
or
lahf
and
dec
and
mov
cmpsb
mov
icebp
rcr
popa
ret
sbbb
push
mov
add
xor
push
jg
ja
bound
jge
nop
mov
fnsave
mov
sbb
popf
add
aam
loope
lea
mov
stos
jne
sbb
add
mov
or
mov
outsl
fucomip
push
aad
jno
addl
mov
pop
lock
mov
xchg
movsl
adc
dec
ret
fs
cmpsb
clc
adc
push
xor
mov
jns
xchg
mov
adc
lds
cmp
add
pop
xchg
jns
adc
fwait
push
out
xor
imul
lds
stos
push
mov
loopne
cltd
cmpsl
testl
xor
mov
push
cmpsb
bound
pushf
add
arpl
ja
testb
or
push
jno
xor
jno
sub
pop
dec
jle
adc
fucomp
andl
inc
cmpsl
jno
pusha
fwait
mov
fmuls
adc
ss
jmp
sbb
pop
mull
aad
cmc
mov
test
xchg
mov
push
test
mov
or
sbb
xlat
push
xor
adc
jp
lahf
sahf
inc
mov
ja
imul
stos
dec
repz
dec
push
mov
scas
mov
dec
sbb
out
add
inc
mov
xchg
stc
mov
lods
in
enter
pop
or
dec
jmp
mov
and
les
test
cld
pop
pop
push
mov
mov
pop
push
and
sbb
cld
insl
fwait
es
inc
and
lret
add
les
loopne
jge,pt
or
dec
dec
roll
pop
pusha
test
lret
icebp
mov
sub
mov
popf
sub
mov
orb
rcpps
xchg
bnd
sub
out
cld
roll
pop
dec
shlb
aad
or
inc
xchg
nop
sbb
jg
clc
lret
lods
les
aad
scas
cmpl
jl
loope
faddl
in
pusha
adc
xchg
mov
jp,pn
xchg
int3
push
test
es
inc
adc
dec
lds
and
repnz
shll
test
insb
mov
inc
and
push
shlb
xchg
cmp
nop
cwtl
pushf
sbb
sub
dec
mov
and
movsl
pusha
fs
aas
loopne
adcb
jne
xchg
adc
lods
ret
dec
and
push
or
fsubrs
add
ret
pop
push
mov
outsb
push
es
xchg
lea
test
imul
adc
ljmp
jge
cld
loopne
and
pop
sbb
cmp
xor
jecxz
dec
and
cmc
and
pop
inc
std
ret
fadds
or
mov
push
leave
mov
mov
fnstsw
fcomip
mov
cwtl
pusha
repnz
repz
ret
mov
xor
enter
push
addl
xlat
clc
cld
test
lret
inc
xchg
xchg
fstps
int
inc
cmp
add
test
jg
rolb
mov
push
mov
mov
pop
adcb
shll
sbb
or
add
scas
jne
and
jb
mov
jb
cmp
mov
es
daa
ret
adc
popl
daa
push
pop
stos
cmp
or
mov
ret
iret
test
mov
mov
andb
pop
sub
sub
les
pop
roll
push
push
icebp
popf
pop
mov
push
cmpsl
inc
loop,pt
fbstp
add
into
inc
jg
add
jns
lds
mov
bound
push
cmp
jne
pop
jno
adc
mov
test
ljmp
hlt
and
dec
sbb
adc
pop
fiaddl
pop
out
mov
sub
pop
pop
xchg
pop
ds
adc
mov
daa
bound
movaps
ficompl
dec
arpl
loope
ret
sub
add
shll
movb
xlat
or
ret
mov
mov
or
das
inc
loope
pop
les
jne
lock
imul
scas
imul
push
sub
push
fistl
or
sub
in
sbbl
dec
popa
test
shrl
xchg
cs
or
cltd
jecxz
xchg
icebp
mov
rcrb
cmp
mov
sarb
push
or
add
ret
pop
push
sbb
gs
ljmp
cmp
fcomps
insb
stos
pop
mov
jle
fimull
addl
pop
pop
inc
scas
mov
push
int3
cltd
scas
movsb
repz
push
fwait
mov
mov
sbb
test
mov
xchg
insl
add
fs
push
bound
push
stc
aaa
loope
in
jp
pslld
roll
imull
loop
mov
push
inc
xor
mov
cmp
hlt
jecxz
sbb
cmp
sub
sbb
pop
mov
imul
xchg
push
or
add
enter
outsb
addl
addr16
dec
pop
dec
out
xor
dec
andl
pop
mov
mov
mov
add
test
js
js
mov
adc
push
cmp
add
imulb
bound
mov
or
xorl
xchg
pop
addr16
leave
add
sbb
mov
jp
cltd
incl
cld
enter
cmp
or
pop
add
pop
inc
loopne
js
and
and
pop
sbb
xchg
add
pop
nop
int
jb
das
jnp
pop
add
and
ja
xor
movsb
cmp
sbb
fs
orl
mov
xchg
and
dec
pop
mov
mov
hlt
sub
repz
out
or
push
push
sub
add
rclb
rcl
test
xchg
mov
loope
lret
cmp
inc
xchg
daa
sub
loopne
notb
xor
dec
dec
jp
pusha
lahf
xor
jecxz
pop
push
dec
pop
mov
je
pop
hlt
add
aam
xchg
lret
insb
js
fbstp
fsubrl
js
dec
aas
jge
push
sbbb
mov
icebp
dec
pop
adc
movl
sbb
sbb
inc
lahf
jo
pushf
push
xor
stos
xor
inc
pushf
insl
arpl
xchg
jne
push
aaa
mov
outsl
pop
jne
push
sbb
stos
add
cmp
push
dec
jo
std
or
loope
test
repnz
mov
lock
jb
push
push
mov
sbbb
in
inc
repz
ret
in
pop
lret
inc
pop
add
hlt
push
dec
clc
add
mov
or
icebp
mov
or
pop
js
fsubr
jae
roll
pop
je
xchg
out
jno
xchg
imul
jns
push
push
lea
out
icebp
fiaddl
test
push
add
pop
cmpsb
mov
sub
divb
lds
mov
pop
push
mov
lock
adc
pop
adc
mov
mov
add
popf
or
sbb
loopne
popf
stos
leave
insl
push
std
addr16
cmp
xor
cmpsl
jo
and
sbbl
add
pop
ja
popf
adc
jbe
ljmp
ret
push
xor
and
pop
and
mov
add
jno
jno
mov
fyl2x
das
rorb
jmp
insl
mov
fnstsw
je
mov
fldt
mov
mov
or
shr
mull
sub
push
js
jg
subb
insl
mov
loopne
shl
popa
mov
jne
sub
movsl
orl
mov
sub
in
pop
test
mov
shlb
cs
mov
xor
inc
mov
fs
inc
jge
sbb
je
dec
or
sbb
push
add
lret
mov
test
sub
xchg
fsts
cmc
xor
jbe
cmp
xchg
enter
aaa
mov
scas
add
add
jnp
int
scas
push
gs
inc
cmp
mov
in
ljmp
add
and
xor
push
dec
inc
in
mov
inc
fwait
movsb
xchg
out
jge
pop
xchg
adc
lret
repnz
jne
ror
mov
sub
lods
mov
js
mov
or
aam
leave
inc
faddl
shll
fs
repnz
and
mov
sub
les
add
sub
jecxz
pop
popa
mov
cmp
mov
out
add
fwait
shl
sarb
dec
lcall
xchg
add
movsb
cmp
xor
dec
push
push
dec
scas
paddusb
pop
adc
mov
iret
out
sub
aam
test
dec
fisttpll
std
push
call
mov
scas
add
xor
test
lods
out
fwait
int
lock
call
into
das
btc
jmp
mov
pusha
mov
imul
dec
inc
test
xor
out
ds
nop
mov
push
in
cmc
pop
cmpsl
mov
jae
inc
add
xchg
add
shlb
test
mov
add
mov
or
mov
psubd
fimull
fcompl
sub
pop
mov
out
mov
xor
xor
mov
pop
mov
xorb
or
pop
mov
adc
ret
xlat
dec
cmpb
xchg
mov
push
jle
adc
cli
dec
cmp
pop
jne
pushf
ret
xchg
or
adc
aad
imul
daa
or
xor
mov
mov
in
imul
push
adc
xchg
pop
fucomi
in
dec
pop
add
sbb
dec
xlat
fdivp
ret
mov
dec
leave
les
sbb
je
cld
iret
mov
lods
dec
pop
js
mov
sub
xor
sbb
in
mov
or
sbb
aad
aas
mov
ds
call
outsb
loopne
adc
mov
mov
stos
in
push
lods
mov
dec
push
fidivs
rorl
pop
mov
and
dec
mov
mov
mov
lahf
inc
fildll
mov
daa
lea
inc
jp
in
inc
das
or
aam
dec
add
ss
aaa
sub
ret
cmovae
hlt
lds
mov
jns
js
outsl
fs
xchg
dec
add
jmp
sbb
jp
pop
icebp
test
mov
pop
push
sub
jbe
mov
sbb
mov
test
fadd
bound
sbbl
sub
jo
lock
pushl
mov
xchg
int3
bound
sbb
jbe
cmp
mov
ss
clc
ljmp
enter
or
mov
push
cld
in
fmulp
push
cltd
fbstp
add
clc
mov
fnsave
out
sub
leave
mov
shrb
dec
cmp
or
xor
ret
pushf
lahf
add
mov
fnstsw
cmp
mov
movsl
xor
je
lock
push
hlt
jmp
or
jne,pn
loope
mov
xchg
push
dec
xchg
cmp
mov
inc
xchg
add
ja
pushf
pop
xchg
push
sbb
jle
or
loope
push
pop
add
cmp
sbb
xor
mov
and
cmpsl
lods
mov
push
ret
push
and
sub
rcrl
fistl
mov
dec
in
loop
sbb
fcom
adc
cmp
push
xchg
dec
mov
sahf
out
adc
inc
cmpsl
inc
add
mov
mov
push
push
mov
stos
xor
xor
and
out
int
aad
adc
and
pop
negb
call
cmp
mov
jecxz
cmpsl
pop
lcall
pop
xor
pop
push
nop
ljmp
mov
test
add
mov
add
cmp
mov
lock
pop
jp
ret
loopne
xor
push
in
sar
jecxz
mov
fwait
es
lods
imulb
loope
jno
test
mov
movsb
or
popa
or
je
mov
or
jae
cmp
stos
pop
ret
daa
mov
pop
sub
inc
aam
push
hlt
ffree
cmpsl
sub
pop
popa
jmp
sub
sub
mov
scas
je
cmp
out
xchg
mov
incl
push
loope
dec
fimull
pusha
add
loopne
stc
and
je
push
or
ljmp
push
pop
sarb
icebp
sbb
jg
int
add
xchg
lcall
shll
arpl
adc
pop
mov
rcrl
leave
scas
adc
mov
or
pusha
ficoms
sub
or
sub
pop
ret
cltd
jecxz
repnz
les
add
imul
test
xlat
call
ja
cld
pop
and
out
imul
or
xor
in
jge
loopne
movsb
mov
or
jno
xlat
or
pop
xchg
ja
outsl
sub
test
pop
sbb
rolb
sub
int
dec
and
repnz
jp
pop
aas
lret
idiv
sbb
inc
sarl
mov
push
add
jo
sbb
out
sti
call
outsb
pop
mov
jp
pop
test
ljmp
jno
out
aas
xchg
sbb
add
mov
lods
call
rolb
in
mov
pop
cmp
mov
mov
and
imul
mov
sbb
pop
leave
mov
sub
js
sub
popa
push
cmpsb
sbb
mov
shl
in
iret
mov
jnp
inc
sub
adc
loop
sahf
sub
addb
push
lahf
repz
sbb
or
scas
mov
jecxz
mov
test
xorl
xchg
ret
xchg
mov
jb
push
aas
jo
inc
setne
into
push
ljmp
sarl
mov
nop
push
test
jl
mov
pop
mov
cmp
ret
inc
push
dec
lock
dec
in
rorl
int
cltd
inc
pop
jl
mov
cmp
xchg
xor
clc
sub
sbb
cmp
mov
cmpsb
mov
fsubl
inc
fsubp
lock
push
and
dec
dec
shll
mov
mov
stos
xor
cmpsl
mov
fcoms
aad
pop
or
and
sahf
pop
mov
xchg
sbb
or
cmpsl
push
sbb
inc
ret
mov
push
add
stc
cmp
fcmovbe
movsl
jge
into
out
pop
js
mov
pop
cli
sbb
sub
addr16
mov
inc
mov
cmpsl
inc
mov
jns
adc
push
mov
inc
xor
mov
andb
xchg
jno
lcall
mov
sub
aam
jge
push
pusha
adc
mov
out
mov
adc
dec
aad
fsubrs
jno
rorl
in
cs
dec
mov
int
mov
and
dec
test
rcrb
mov
mov
pushf
sbb
das
je
movsb
scas
call
adc
inc
in
fwait
int
outsl
inc
hlt
push
sub
sbb
jp
pop
adcl
into
dec
push
fdivrs
or
sub
inc
or
mov
sbb
push
mov
xlat
xor
in
mov
aas
xor
sete
lahf
dec
or
icebp
aam
scas
mov
insl
add
xchg
push
rolb
jnp
js
test
lahf
mov
mov
xor
sarb
jecxz
lret
cmp
mov
or
fildl
push
mov
dec
icebp
pop
pop
push
into
shl
arpl
pop
mov
cli
pop
std
mov
sbb
lret
and
dec
cltd
sbb
addr16
insl
push
in
add
inc
insl
cwtl
dec
into
push
adc
cld
imul
dec
jle
cmc
or
mov
mov
leave
shll
pop
cmp
in
push
mov
data16
fs
fdivs
pushf
jg
out
ret
ds
push
lret
push
in
scas
stos
and
or
dec
push
sbb
inc
int
push
sbb
inc
repz
inc
jg
pusha
fbld
jne
shrl
scas
popa
mov
fcmovnb
mov
aaa
dec
movsb
mov
and
movsb
mov
xchg
mov
and
sbb
add
push
fidivrl
xchg
pop
scas
inc
das
cmpb
outsb
xchg
adc
or
outsl
lret
and
mulb
aas
insl
push
sub
add
mov
imul
cmp
in
loope
xor
add
into
lds
lock
push
scas
or
repnz
test
mov
mov
push
mov
imul
mov
aaa
mov
hlt
lds
sub
imul
sub
push
scas
into
add
push
aad
fcomps
loop
lods
and
xchg
aaa
push
ss
add
push
dec
bound
xchg
mov
push
popa
xlat
sub
xor
and
adc
sbb
subb
out
les
ds
and
nop
jg
leave
lret
add
insb
je
in
sub
xchg
cmp
pop
push
filds
scas
negl
es
or
shrb
jp
push
cmp
call
loopne
cmp
icebp
pop
loopne
xchg
mov
jo
xchg
adc
enter
scas
outsb
pop
sbb
add
lcall
cwtl
mov
pushf
cmp
ss
jb
sub
push
pop
mov
outsl
pop
mov
jmp
push
lcall
mov
push
and
popf
push
sahf
loop,pn
inc
and
addb
cld
into
lahf
incb
ds
mov
inc
lods
into
std
xchg
xor
or
fsubl
push
and
rcrb
or
or
popa
jo
loopne
inc
stos
inc
sbb
stos
call
lcall
iret
lods
shll
popa
inc
push
jmp
jle
in
sbb
mov
loope
cmp
push
jno
fs
mov
dec
ja
mov
jg
adc
faddl
hlt
movsb
pop
jno
sbb
mov
mov
aaa
ret
mov
inc
mov
lock
pop
sbb
pushf
popa
imul
and
mov
dec
jl
enter
addr16
adc
or
enter
jmp
decb
pop
cmp
fsubrs
popa
mov
push
jge
xchg
mov
nop
and
ljmp
push
or
hlt
dec
ret
jg
pop
sub
into
push
cmc
outsb
arpl
or
arpl
mov
cwtl
std
imul
shrw
sub
loop
mov
mov
js
or
pop
fsts
fwait
nop
fcmovbe
daa
dec
mov
or
mov
les
outsl
sar
aas
stos
divl
dec
cmc
push
mov
mov
shll
cmpsl
sbbb
push
cmp
cmp
adc
add
ljmp
push
lods
loope
add
sbb
jg
mov
iret
push
scas
adc
pop
lea
dec
out
and
fisttps
add
jecxz
and
sbb
addr16
adc
jb
in
imul
call
mov
jo
enter
loop
jae
dec
jp
jne
mov
xlat
xorl
dec
aaa
jge
xlat
ljmp
decl
jge
out
shrl
mov
lcall
add
icebp
inc
dec
push
push
data16
rolb
aas
fcomp
into
mov
xor
push
mov
lods
cltd
int
aam
adc
mov
pop
and
push
test
test
aam
dec
add
and
lds
bound
repnz
push
movsl
adc
inc
loopne
mov
es
and
inc
rclb
inc
jmp
or
icebp
dec
inc
sbb
cmp
mov
in
nop
mov
pushf
push
inc
xor
push
cli
cwtl
add
jae
add
sbb
push
dec
mov
xchg
icebp
cli
mov
nopl
jl
fcoml
pop
cmc
inc
movsl
jle
push
xchg
mov
xorb
mov
mov
pop
and
andb
push
call
push
loop
sti
push
out
movsl
scas
mov
mov
fs
mov
inc
push
jnp
and
and
lods
imul
call
test
mov
adc
xchg
sub
and
add
ja
xchg
add
sbb
inc
cli
test
add
mov
jne
mov
into
cs
add
jbe
mov
mov
fbstp
pop
pop
add
jl
cld
lds
test
adc
arpl
ja
lcall
ficompl
inc
sti
fldenv
jno
loope
ss
mov
inc
mov
push
call
sbb
in
ret
ret
sarl
or
in
pop
out
adcb
jecxz
inc
or
xor
inc
rcrb
js
mov
prefetchw
mov
adc
out
fiaddl
rcll
ret
ret
insb
cmp
and
jecxz
add
ja
cmp
jp
movsl
shlb
xchg
inc
lea
add
sbbl
dec
dec
ljmp
cmp
mov
jbe
xor
scas
mov
pop
pop
stos
xor
xor
mov
int3
mov
stos
notl
cmpsl
mov
mov
das
sbb
loop
xchg
inc
cmp
adc
lock
lock
aas
sub
shrl
inc
test
sbb
mov
rcl
dec
pop
mov
arpl
add
jecxz
rolb
icebp
sbb
test
lret
pushf
ljmp
daa
lods
xchg
and
pop
lcall
adc
rcll
ljmp
and
lods
jnp
mov
xor
push
dec
xchg
and
mov
cs
ja
les
cmp
jge
add
popa
inc
and
sub
push
jle
pop
and
inc
push
arpl
mov
fwait
push
dec
push
mov
sahf
add
push
cmp
in
adc
bound
loop
push
mov
repz
sub
push
leave
mov
xchg
lock
sti
cmp
cltd
mov
cmc
test
xor
dec
xchg
jae
sub
sbb
testl
bound
sahf
sbb
push
pop
xchg
jmp
inc
xor
test
outsl
xchg
mov
popa
inc
add
mov
dec
mov
lret
aaa
es
into
xor
add
adc
mov
push
out
pop
add
mov
les
mov
fdivrl
lea
inc
push
pop
mov
or
cld
cmpl
jae
fsubrl
js
xchg
fisttps
lds
jg
jl
push
iret
fists
adc
adc
xchg
inc
imul
jp
orb
dec
fimuls
pop
pop
hlt
jecxz
xchg
inc
sub
sbb
inc
fisubrl
orb
mov
cld
inc
inc
outsb
pop
ret
outsb
jle
push
loope
rorb
mov
in
jp
dec
imul
mov
cmp
dec
mov
push
js
mov
aas
adc
adc
fistpll
sbb
jns
jl
lock
add
loope
sbb
repnz
lods
adc
std
pop
movd
jns
enter
xchg
cmp
fwait
leave
cmp
icebp
inc
push
lods
jbe
sub
dec
daa
mov
xchg
out
fisubrs
test
pop
mov
in
loopne
inc
jno
ds
dec
popa
out
add
call
or
dec
add
insl
bound
mov
mov
jbe
aad
add
repz
test
ljmp
xchg
mov
cmp
outsb
jl
shrl
dec
aaa
je
lock
sbb
mov
jecxz
idivb
lock
std
inc
shrb
mov
xor
movsb
add
pop
add
xchg
mov
pusha
pop
push
hlt
mov
and
enter
or
push
lcall
push
sbb
mov
dec
inc
jb
cmp
xchg
sub
das
adc
or
push
test
jmp
scas
jb
or
pop
cmp
or
or
dec
call
dec
jbe
sub
or
loopne
jbe
leave
loope
or
pop
push
cli
and
andb
andb
inc
daa
or
mov
daa
js
sbb
sbb
add
adc
or
or
sub
clc
push
jno
mov
xor
and
lea
dec
in
arpl
mov
or
and
test
adc
cmp
pop
inc
mov
push
or
add
xchg
xorl
add
xchg
jecxz
mov
insl
lock
add
inc
dec
stos
add
inc
adc
loopne
gs
dec
cld
push
jp
push
lret
in
add
jg
inc
in
lret
movsb
dec
loope
scas
negl
mov
jbe
ljmp
inc
enter
insb
ljmp
ret
or
mov
and
outsb
ret
add
repnz
push
mov
xor
scas
mov
test
rolb
and
pop
jl
sub
insl
sub
sbb
sub
and
sbb
cmp
hlt
sbbl
lods
insl
out
lock
mov
cmc
dec
mov
repz
idivb
pop
inc
mov
insb
fisttpll
mov
lret
test
mov
mov
cmp
call
pop
add
jnp
fcoml
mov
lds
lret
cwtl
cmpb
mov
push
mov
mov
rol
jb
inc
push
test
les
outsb
dec
test
ss
ss
xchg
cmc
xchg
mov
xchg
pushl
xor
add
lea
sti
setge
enter
pop
xchg
add
fcmovbe
enter
std
or
xor
mov
mov
test
fiadds
int3
arpl
dec
into
or
mov
aas
jno
lds
xor
mov
add
add
and
mov
clc
gs
fldl
mov
imul
jne
xor
xor
lret
sbb
stos
inc
mov
out
hlt
pop
jbe
mov
mov
cwtl
xor
add
movsb
adc
and
mov
lret
mov
nop
mov
lret
loopne
dec
movsl
pop
hlt
lods
lret
xchg
pop
adc
test
add
mov
adc
js
jl
insl
jp
orl
ret
mov
push
jp
push
push
cld
lods
or
pop
cmpsl
int
xorb
xor
sub
ss
push
xor
xor
mov
mov
mov
outsb
cmpsb
call
ss
sub
decl
call
sbb
inc
pop
pusha
and
xorb
cmpsb
cmp
and
test
int3
cmpsb
xchg
xorl
ja
notl
add
hlt
jae
das
rolb
jbe
js
scas
or
pop
mov
nop
ss
or
jo
jno
insl
enter
adc
pop
adc
or
aaa
add
pop
mov
out
push
bound
and
cmp
test
jb
fcompl
nop
in
les
js
test
leave
push
rorb
outsb
push
xchg
add
xorb
inc
stos
test
mov
ds
out
xor
arpl
int
mov
insl
cli
stos
loopne
testl
pop
lret
lret
inc
out
sub
outsl
mov
inc
xchg
mov
xor
ljmp
or
cmpsl
out
int3
sub
add
dec
jl
daa
push
adc
in
sbb
jmp
sub
sub
js
mov
addl
cmp
xor
scas
add
jo
jl
rclb
adc
in
or
jo
jle
adc
mov
out
test
jnp
aaa
push
mov
push
sbb
mov
lock
jmp
int3
pushf
icebp
pop
dec
lret
pop
inc
mov
push
rclb
andb
xchg
push
mov
cs
or
add
add
jne
cmpsl
loopne
push
pop
lret
push
jno
addl
or
mov
pusha
xor
mov
xchg
cmp
mov
bound
add
mov
fabs
push
icebp
lds
sbb
mov
fisttps
loop
outsl
or
cmp
adc
aam
jle
call
enter
mov
xor
iret
adc
add
xchg
rclb
loopne
adc
aad
cli
xchg
jmp
lock
push
jae
stos
push
ficoms
push
mov
xor
pop
adc
js
mov
add
cld
xchg
jle,pt
pushl
push
jmp
lahf
out
fdivrl
clc
or
jnp
jp
ljmp
les
lods
or
jnp
sbb
adc
ja
push
push
sarb
lods
pop
bt
lcall
mov
pop
mov
add
xchg
pop
pop
cmc
test
adc
fdiv
xor
and
pusha
fisubrs
orl
jmp
cmc
ret
movsl
stos
leave
xchg
int
sub
movsl
xchg
add
data16
inc
movsb
imulb
and
sub
pop
sub
imul
mov
out
mov
xchg
shrb
clc
or
jmp
fwait
js
cmp
xchg
insb
sub
xor
aam
clc
repz
shld
stc
xadd
jo
mov
jo
pop
adc
xlat
mov
jle
and
mov
test
sbb
and
mov
test
ret
mov
jne
enter
scas
ja
je
dec
mov
dec
shlb
inc
sti
andb
js
hlt
punpckhdq
lret
sub
push
push
xor
pop
hlt
and
cmpb
outsl
or
shll
pop
pushf
jecxz
adc
inc
js
cmp
jb
inc
pop
gs
mov
test
mov
sub
pop
pop
js
inc
sbb
sbb
mov
inc
testb
je
push
sub
sbb
sbb
sub
pusha
sbb
mov
clc
popf
push
mov
sti
pop
jmp
icebp
outsb
pop
incl
xor
cld
aam
and
mov
stos
mov
fistps
cmpsb
add
push
repz
jbe
jge
mov
in
sbb
andl
cmp
pop
or
cmp
lock
stos
mov
cmp
jle
rcl
out
mov
cli
js
imul
ja
jns
pushf
pop
xor
ss
push
jl
or
xchg
sbb
test
mov
nopl
and
cmp
shrl
add
mov
xchg
xchg
movsl
add
rclb
mov
adc
mov
icebp
sahf
mov
test
cmpsl
ret
aaa
je
hlt
mov
in
andl
or
pop
xchg
xlat
mov
mov
mov
mov
aaa
and
andl
push
xchg
movsb
sub
pop
jl
das
std
ret
rcll
adc
pop
lret
rol
xor
movl
leave
cs
cmp
rorb
inc
adc
cmp
xor
sbb
or
inc
or
js
jb
xlat
jne
push
jo
cwtl
lds
int
push
mov
pop
push
daa
xlat
sar
push
pop
push
lahf
sbb
add
jl
cwtl
addr16
lret
dec
inc
xor
pop
and
sbb
add
xchg
rcl
jl
pop
call
mov
dec
mov
insl
test
cmp
icebp
daa
decl
ret
aaa
mov
aas
or
inc
adc
push
cmp
andl
push
or
rcrb
inc
add
leave
or
add
sub
sub
sub
jns
shlb
xorb
icebp
adc
inc
adc
test
adc
cmp
mov
addl
or
pop
fs
rclb
xchg
jno
sbb
es
jmp
ret
ficoml
imulb
push
loope
add
addr16
xchg
ret
out
shl
test
dec
fs
pop
shl
insb
mov
mov
in
xor
and
js
sahf
pop
inc
neg
clc
and
arpl
decb
mov
dec
ret
movq
xorb
lcall
jge
mov
mov
clc
fisubrl
xchg
jecxz
mov
ds
lahf
pop
mov
cmpsl
mov
inc
sub
nop
clc
loope
dec
sbb
jo
ret
sub
gs
mov
insb
add
std
ret
mov
pusha
movsl
std
out
jmp
ret
aam
stos
mov
xchg
mov
iret
js
cli
mov
jbe
sahf
jnp
add
sub
mov
fs
xchg
or
insl
xchg
mulps
jge
sahf
cltd
jl
bound
loopne
pavgw
lret
add
mov
lods
xchg
popl
push
xor
pop
or
cmpsb
sbb
test
jp
fstpt
xor
jle
mov
cli
not
adc
leave
int3
mov
sbb
nop
ja
sarb
and
jo
lds
push
sub
mov
inc
pop
mov
lahf
or
or
sub
inc
add
push
leave
rcll
das
cmp
fdivrs
adc
ror
enter
xor
cmp
fs
dec
mov
andb
push
add
pushf
push
clc
std
adc
cmp
mov
js
bound
data16
mov
cwtl
popf
add
icebp
cmp
push
mov
jle
orb
adc
pop
cmp
stos
fwait
inc
aaa
int
lret
adc
hlt
mov
jecxz
adc
cli
int
inc
idivb
add
jns
mov
sub
or
sub
sbb
loopne
popa
lds
cwtl
aam
hlt
icebp
add
mov
cmp
push
push
loope
or
add
in
add
scas
jo
data16
and
add
lcall
push
aam
std
addr16
daa
dec
and
add
dec
inc
call
and
loopne
push
imul
xor
inc
sti
das
pop
aam
jecxz
cmp
cwtl
xchg
xor
adc
mov
cli
mov
add
scas
cmp
outsl
sbb
push
xor
lds
cmpl
hlt
push
jg
jle
mov
mov
and
nop
inc
sbb
pop
mov
mov
sti
xor
in
pop
pop
subl
lcall
mov
mov
push
ret
mov
add
shl
mov
add
mov
push
mov
cltd
cmpsb
mov
fwait
or
aad
push
ljmp
pusha
dec
ds
push
mov
enter
and
pop
loope
pop
test
cltd
sbb
jb
pop
movsb
jbe
mov
xor
and
sbb
cmp
sbb
out
fwait
dec
shlb
mov
mov
mov
test
pop
pop
jp
jne
xchg
add
mov
in
sbb
dec
cmp
outsl
clc
push
or
push
outsl
pop
sbb
fcmovb
push
into
lds
sbb
leave
cmp
mov
mov
call
jg
xchg
and
push
cmp
cmc
xlat
rclb
adc
cmp
aam
or
adc
xchg
mov
xchg
outsl
loope
sub
jo
aas
clc
adc
mov
loopne
or
aas
cmp
pusha
test
sbb
jne
subb
outsl
or
mov
test
add
push
jg
cmp
call
adc
loopne
hlt
dec
dec
xor
xchg
push
add
dec
popa
or
mov
ds
data16
test
cmp
orl
rcll
lcall
les
insl
push
and
push
mov
mov
cmpsb
out
jg
rol
jo
xor
cwtl
ret
clc
aam
jl
shll
movsb
xchg
iret
pop
aam
push
mov
sbb
push
stos
mov
fdivs
stos
jb
cmp
test
dec
cli
or
clc
js
pop
jge
mov
mov
stos
popf
and
dec
mov
jnp
xchg
lahf
add
mov
call
lret
adc
sbb
pop
cmp
out
push
push
mov
push
cmp
inc
jb
andb
lods
mov
scas
mov
notl
xchg
addb
cmp
mov
shrb
mov
inc
mov
int
mov
std
xchg
add
xor
cmp
push
mov
sti
inc
xchg
push
fdiv
or
mov
lock
outsl
push
push
out
iret
inc
cmpsb
test
add
loopne
push
in
mov
push
pop
sahf
pushf
push
shlb
hlt
add
insb
setg
jne
jge
das
icebp
pop
inc
mov
scas
sub
cs
lahf
push
out
jp
sbb
inc
int3
outsb
inc
mov
mov
out
fwait
gs
clc
stos
push
mov
jmp
xchg
loope
sbb
std
mov
dec
or
clc
lock
xchg
xchg
and
jp
sarl
loop,pn
add
std
jmp
cmpsl
xor
cmp
in
rorb
fs
add
ja
mov
in
pop
call
push
loopne
aaa
frstor
inc
adc
push
sbb
call
sahf
push
xchg
pop
cld
sub
fs
push
xchg
mov
loopne
leave
push
mov
mov
sub
and
xor
lcall
sti
addb
push
dec
dec
pop
ljmp
and
push
adc
mov
dec
push
mov
scas
push
pop
loope
mov
pop
cmpsb
mov
xor
les
jbe
das
rcrl
inc
clc
and
add
dec
rclb
xchg
jne
mov
pop
stos
stc
test
pop
sbbl
and
fildll
jg
push
push
fdivrl
sub
cli
ret
or
mov
mull
addb
mov
dec
push
dec
mov
cmp
cmpsb
or
mov
xor
test
out
repz
dec
sub
rorb
mov
in
movsl
add
or
mov
testb
stc
or
cmp
pushf
out
lahf
pop
rcrl
cmpsl
cmp
pop
xchg
lahf
lock
rcrb
les
mov
and
in
cmc
int
std
dec
nop
xchg
ja
inc
adc
dec
mov
sbb
or
out
jecxz
cmpsb
icebp
je
jg
dec
shll
adc
aam
rorb
das
mov
or
xchg
jle
sub
add
ljmp
call
add
sub
cmp
loope
test
insb
icebp
jno
xchg
mov
fisttpll
mov
push
sub
popf
test
and
mov
push
clc
call
sub
sti
dec
adc
daa
push
pop
cmpb
repnz
insl
js
xchg
mov
fists
outsl
push
dec
or
xchg
and
push
jnp
ljmp
inc
outsb
adc
orb
xorb
inc
push
jg
ror
or
mov
and
and
cli
sahf
dec
int
pop
ss
test
out
scas
fsubr
sar
cli
add
repnz
ljmp
sbbb
pop
lods
test
movsl
repnz
mov
nopl
cmp
and
es
es
rorl
mov
cld
ret
mov
jp
jle
int3
add
pop
sbb
nop
pop
or
test
ljmp
push
insb
test
test
add
mov
hlt
cmp
xor
popa
push
pop
and
ja
lods
addl
mov
adc
or
adc
fiadds
add
sbb
lea
pop
push
dec
ret
out
in
outsb
cld
push
decl
jle,pn
loopne
push
jo
or
mov
out
aas
insb
popa
popa
add
or
loopne
movsb
jmp
xorl
call
clc
adc
mov
sbb
and
ss
pop
je
dec
pop
mov
sub
mov
inc
bound
inc
inc
je
in
sbb
push
fldenv
fwait
sahf
pop
jb
lret
inc
jmp
push
mov
dec
rcrb
push
jnp
sbb
xchg
and
cmpl
jmp
cmpb
push
push
jl
rclb
inc
das
pop
and
pop
add
out
in
jp
fwait
test
repz
add
sahf
jle
hlt
mulb
cmc
cmp
into
fsts
cmc
pop
lods
push
sti
or
adc
je
xchg
les
test
pop
xlat
subl
push
inc
or
stos
rcrl
std
xchg
pusha
and
loopne
mov
mov
ss
aad
in
in
int3
sub
mov
dec
pop
cld
mov
fisubrl
jp
stos
inc
and
mov
cmpsb
pushf
jp
hlt
or
mov
cmpl
push
jae
pop
sub
sbb
lahf
push
mov
lret
cwtl
jne
xchg
call
fs
cli
mov
push
jb
mov
or
jg,pn
les
rol
cmp
lcall
cmpb
shlb
test
xchg
pop
pop
js
ret
xchg
sub
mov
fisttpl
cmp
notb
add
mov
aas
adc
ret
mov
push
mov
mov
jl
movsb
sub
inc
movsl
addl
dec
mov
xor
mov
idivb
data16
cmpsb
lcall
inc
std
pushf
test
xchg
xor
aad
dec
cld
push
into
mov
adc
rcrl
shrb
incb
sub
flds
jle
aaa
add
fisttpl
cli
ret
cmpsl
sub
or
sub
popf
loop
adc
repz
cmp
sbb
jp
mov
jmp
jo
mov
fucomi
call
adc
pusha
cmp
adc
jno
lock
inc
sti
xchg
sbb
movb
sbb
ja
mov
gs
cld
rcrb
inc
or
jne
add
imul
push
pop
add
lea
fucomip
add
pop
fldt
pop
pop
mov
and
je
sub
loop
sub
rorl
loope
bound
out
mov
sbb
sub
and
or
or
subl
xchg
pop
push
mov
jnp
sub
sti
and
jl
int3
clc
enter
testb
aam
mov
stc
mov
cmp
xor
push
pop
std
loop
test
inc
mov
xor
xchg
xchg
inc
gs
mov
push
pop
push
push
stc
sub
jmp
cmp
sbb
outsl
decb
scas
loope
add
movb
lcall
jae
repnz
cmp
stos
into
jb
std
and
inc
pop
mov
outsb
shrb
sub
sub
shrl
inc
mov
or
jmp
ud0
gs
je
incl
or
and
inc
inc
stos
inc
ret
andb
ljmp
jo
xor
xlat
mov
xchg
nop
loopne
fstl
popf
mov
sub
movsb
fildl
aaa
add
inc
xchg
sub
push
sbb
pop
dec
xchg
rolb
sub
mov
and
arpl
js
scas
call
xor
inc
scas
xor
orb
sbb
cmp
sahf
pop
sbb
dec
cld
mov
arpl
iret
jo
sub
lret
mov
push
in
add
or
dec
add
test
inc
mov
push
loopne
aas
loopne
shll
push
xor
inc
mov
add
loope
clc
mov
imul
pop
rclb
fidivrs
xchg
xchg
es
vandnpd
push
push
jecxz
add
mov
loop
mov
xor
pop
sbb
push
pop
inc
mov
dec
lock
cwtl
out
shl
in
mov
or
push
xlat
sbb
pushf
push
idivb
dec
out
out
mov
les
iret
or
or
pop
dec
and
mov
pop
pop
xorb
ret
sbb
add
scas
rcrb
std
or
mov
ljmp
pop
and
or
fisubrs
dec
adc
shrb
jne
clc
add
sub
mov
scas
or
inc
push
inc
sbb
mov
xchg
cmp
and
insl
mov
and
js
insl
xchg
je
pop
gs
subb
aaa
insl
adc
test
mov
out
loope
cmpl
push
out
pop
mov
mov
xor
or
lcall
je
in
ss
movsl
int
mov
mov
jg
call
idivl
aam
inc
call
daa
fnsave
fildl
loope
cmpsb
or
lahf
mov
mov
mov
dec
push
xchg
and
ret
sarl
mov
xor
push
lock
sub
test
jl
jbe
loop
or
data16
xchg
add
ret
jge
xor
notl
lea
mov
loopne
dec
inc
inc
call
add
addr16
shrb
and
pop
adc
les
push
stos
ret
add
aaa
push
out
idivl
je
out
push
mov
rcr
pop
lods
pop
ja
cwtl
and
testl
dec
clc
or
inc
adc
ret
sahf
mov
cmp
ss
fists
imul
pop
adc
cmp
cmp
jp
add
dec
dec
inc
push
outsb
fisubs
jmp
pop
mov
xchg
incb
jle
repnz
mov
je
xor
cmp
scas
cmp
or
push
cmpsl
aam
add
push
cmp
jne
fwait
lock
lock
fdivrl
jg
imul
sub
cmp
mov
mov
leave
mov
es
and
and
movsl
or
inc
iret
fsub
sbb
js
or
mov
rcrl
cmpsb
mov
cltd
fs
cmc
inc
lret
shrb
push
mov
adc
ja
pop
mov
inc
mov
push
in
mov
sbb
gs
push
fisttps
inc
dec
add
and
call
std
and
inc
aas
jp
lock
mov
or
int3
or
loopne
push
hlt
jno
xor
push
lods
xor
dec
cs
aad
js
cmp
test
incl
inc
pop
cmp
repnz
ljmp
xchg
ret
in
push
rcrl
jae
push
xor
ljmp
std
clc
mov
clc
imul
je
fbstp
xchg
cmpsl
cwtl
xor
mov
nop
add
shlb
xchg
jnp
jge
loope
inc
cwtl
shrl
into
push
pop
pop
push
in
jbe
jmp
inc
test
cwtl
or
in
cltd
adc
fwait
push
ficompl
mov
test
mov
insl
cmp
std
or
add
pop
lret
adc
add
loopne
sub
or
and
mov
adc
pop
loopne,pt
and
xlat
jl
decb
xchg
cli
fsub
dec
insl
jae
sbb
cmpsb
data16
lahf
test
cmp
out
loope
mov
add
lcall
sbb
sub
or
aad
xor
mov
sbb
or
add
sub
inc
bound
or
cmpb
dec
push
adc
mov
jbe
inc
add
mov
add
rorl
lret
pop
dec
mov
inc
test
lods
ja
mov
sub
cltd
es
scas
clc
add
xor
jl
cmpsb
jp
mov
dec
arpl
sbb
pcmpeqb
ds
fnstcw
not
xchg
and
sub
aas
mov
pusha
out
mov
fwait
outsl
lcall
subb
ja
outsl
xchg
xor
mov
push
sbb
pop
icebp
outsl
and
push
xchg
hlt
xor
inc
pusha
xchg
imul
pushf
and
jo
repz
je
xchg
xchg
pop
pop
pop
out
dec
xchg
es
imul
frstor
push
mov
pusha
ret
jnp
adcb
and
pop
dec
xor
mov
xor
hlt
pop
loop
fisubl
mov
jne
fcomps
bound
sbb
mov
cmp
add
sbb
sub
outsl
push
inc
repnz
adc
andb
jno
aad
lock
or
mov
arpl
xchg
in
dec
push
popf
mov
pop
js
adc
aas
add
xchg
push
mov
and
hlt
xor
cltd
addl
xor
xor
push
and
dec
jb
lods
push
aaa
cmp
pushf
and
push
mov
stc
lret
push
stos
push
sub
pop
fs
xchg
hlt
sar
std
leave
mov
inc
lret
inc
adc
cmc
into
mov
or
movsl
jnp
xor
inc
call
push
mov
adc
dec
lahf
xor
stos
mov
jle
push
sub
pop
cmp
add
xor
xchg
adc
test
pop
jo
popa
jnp
inc
xor
movsb
cmp
push
adc
add
or
inc
lds
testl
push
lea
mov
inc
jbe
push
ja
fwait
jg
cmc
test
pop
or
inc
sub
inc
ds
mov
jo
adc
into
addr16
jecxz
jl
inc
nop
stos
push
dec
std
cmpsb
int
mov
mov
std
shll
addb
sbb
and
or
loope
mov
push
mov
cmp
and
push
sbb
jp
inc
leave
pop
hlt
xor
and
xor
inc
clc
into
cmp
mov
aas
mov
and
pusha
adc
std
push
push
xlat
movsb
xor
incl
nop
cltd
push
add
and
xor
mov
push
sbb
roll
or
fs
jb
lcall
push
ds
shrl
sub
mov
jecxz
adc
inc
sub
fstps
pushf
loope
dec
inc
lret
or
dec
cmp
data16
cld
loopne
test
and
outsl
jecxz
ret
inc
cli
das
dec
push
adc
xchg
adc
sbb
inc
cld
frndint
inc
cmp
scas
pop
fmul
gs
sbb
movsb
paddd
fists
adc
adc
mov
mov
out
xchg
dec
es
jp
add
sbb
shll
pop
and
das
xor
cmp
js
pop
dec
or
inc
iret
xchg
loopne
call
mov
lods
sbb
jg
jno
jo
sbb
loopne
mov
out
jae
mov
xor
jecxz
push
aam
xchg
dec
jp
loopne
push
inc
cli
pop
lret
mov
das
fsubrs
lock
jg
xor
mov
pop
out
in
lahf
cwtl
mov
mov
fimuls
xor
enter
ret
and
adc
mov
push
inc
popf
loope
mov
hlt
imul
add
add
nop
ret
inc
dec
rorb
int
fwait
lods
jmp
xchg
inc
mov
call
mov
or
cmp
mov
js
loopne
sar
cmp
xchg
dec
mov
adc
mov
insb
xor
pop
sbb
lods
lahf
mov
inc
add
sbb
xchg
xchg
inc
push
xchg
inc
repnz
xor
push
lcall
push
pop
sar
stos
sahf
test
jle
mov
js
adc
dec
incl
xor
mov
ljmp
add
adc
stos
shlb
negb
outsb
cmp
pusha
add
popa
sbb
pop
adc
pusha
mov
daa
xorl
andb
mov
fcmovbe
sub
push
mov
cmpb
in
lock
add
mov
std
pusha
sub
pop
sbb
xchg
bswap
lahf
movb
ljmp
lret
inc
and
adc
mov
dec
or
dec
std
rdpmc
nop
mov
cmp
or
xor
into
jne
ljmp
cmpsb
cmp
shrl
sahf
iret
inc
inc
and
add
or
sbb
dec
mov
add
inc
mov
imul
push
icebp
jl
cs
fs
std
movsl
rcll
push
cmp
test
aas
sbb
xchg
aam
or
or
jecxz
and
sarb
xchg
scas
cmp
clc
xchg
sub
pushf
push
or
push
add
and
push
out
push
add
outsb
int
and
std
repnz
xchg
jle
addr16
aad
sbb
mov
movsb
mov
sbb
enter
lock
cli
xor
mov
push
movsl
out
cld
push
jmp
lock
test
into
inc
xor
rol
inc
mov
rolb
cmp
pop
push
mov
sub
ret
sub
loope
insb
in
movsl
ret
or
sbb
pop
jl
insl
lea
inc
lods
mov
loop
arpl
cmp
push
rorl
push
lock
cmc
incl
xchg
subl
in
out
mov
cmp
lock
inc
dec
cmc
adc
push
cmp
push
mov
pushf
in
iret
shlb
sub
adc
stos
or
xchg
stc
inc
and
fdivs
push
cmpsb
sbb
jmp
mov
pop
inc
lahf
push
inc
pop
inc
fnstenv
in
pushf
cmp
arpl
add
loopne
stc
push
sbb
aaa
clc
inc
add
xor
lock
jo
jle
out
adc
loopne
rorl
inc
jnp
cmp
push
pop
test
pop
and
outsb
lahf
dec
lock
adc
lret
adc
jp
inc
lock
xchg
clc
xor
int
loope
aas
adc
mov
pushf
shl
repz
int
add
mov
push
cmc
aas
loop
cmp
cmpsb
add
or
in
mov
lcall
jne
decb
push
push
add
out
in
outsl
sub
les
adc
dec
cmpsl
adc
xchg
ret
je
inc
sbb
cld
insb
pop
inc
jge
inc
stc
cld
aaa
push
loopne
ljmp
adc
call
test
pop
jb
add
arpl
jg
lahf
outsl
movsb
push
fstps
sub
std
imul
push
lock
jnp
fdivs
xlat
dec
cld
or
and
lret
inc
inc
push
sti
sub
scas
mov
jb
imul
push
inc
icebp
xor
sub
sbb
sub
outsb
cmp
ljmp
and
das
in
and
inc
and
add
inc
fdivl
out
cmp
sbb
lahf
cld
jle
sub
push
ret
sbb
rcrb
bound
mov
push
or
ret
sbb
mov
sarb
xor
inc
dec
dec
cwtl
data16
add
add
jg
push
ret
add
ds
les
xchg
mov
xchg
xor
rep
stc
add
int3
dec
dec
sub
cmc
les
pop
mov
and
xor
stos
adc
dec
adc
xchg
adc
loop
mov
mov
pop
out
sub
sub
mov
mov
fucomip
push
or
inc
pop
cmp
mov
add
sti
hlt
or
ja
push
adc
pop
add
mov
repz
pop
repnz
aad
pop
sbb
ffreep
pop
fst
divl
loopne
pop
adc
or
inc
mov
je
add
sbbl
ljmp
mov
in
jmp
add
and
test
xor
ds
adc
add
jge
cmp
mov
ret
aaa
and
push
cwtl
dec
jmp
loopne
and
shl
lahf
lea
lahf
dec
std
and
jbe
add
xor
xor
and
or
push
in
mov
pop
insb
pop
xchg
mov
pushf
push
add
or
mov
xchg
mov
xor
jae
push
inc
shll
sub
test
push
leave
sbb
xchg
inc
add
dec
pop
es
mov
push
fmul
add
lahf
dec
pop
cmc
jmp
or
loop
fists
mov
cmc
mov
inc
cmpsl
and
mov
pop
and
mov
dec
mov
rcl
pop
insl
clc
cmp
test
mov
hlt
mov
scas
idivl
ret
addb
xchg
mov
mov
loope
pop
ljmp
xchg
clc
das
rcrb
popa
stc
cwtl
and
lods
sbb
stc
mov
dec
roll
jb
jo
mov
call
in
popa
jno
ret
jbe
outsl
cmpl
out
mov
pop
int
xor
sub
xchg
add
repz
jns
sbb
pop
and
sbb
and
mov
cs
xchg
mov
sub
pushf
mov
xchg
sub
push
out
lret
add
sbb
fldl
xor
in
rorb
fnstcw
jle
imul
xchg
lea
push
push
cld
mov
pop
lcall
gs
jp
lcall
imul
xorb
scas
pop
cmp
dec
bound
push
faddp
cmp
inc
dec
aam
les
jge
push
divb
mov
fdivr
es
lea
inc
nop
enter
ljmp
xor
loopne
cmc
pop
mov
pop
mov
jp
pop
sbb
test
arpl
sub
sub
jle
sbb
or
int3
jecxz
aam
add
xchg
orl
lret
mov
add
push
dec
and
icebp
mov
sbb
lock
out
icebp
or
mov
pop
mov
ret
pop
fisubs
cmp
and
push
sub
jle
test
sub
pop
jo
subl
adc
sbb
push
mov
pop
shlb
and
sub
push
push
arpl
or
fnstenv
dec
add
jp
mov
out
pop
xor
xchg
inc
int3
mov
push
mov
fidivrs
dec
jge
add
mov
xlat
enter
rclb
add
cmpsb
adc
movsl
push
dec
push
mov
push
adc
sbbb
push
pop
imul
aam
or
pusha
subl
cs
xor
push
or
outsl
push
push
inc
rcr
icebp
pop
mov
test
adcl
push
mov
aam
cmp
cmp
add
js
fldl
test
ljmp
jg
add
nop
scas
lods
cltd
movsl
shlb
pop
pop
pop
cmpsb
xchg
cmp
sub
aaa
push
or
jg
aam
lds
push
push
insl
push
imulb
mov
and
xchg
add
lret
cmpsl
out
jbe
adc
sbb
and
insb
in
push
loopne
mov
daa
shl
dec
lret
mov
adc
mov
lcall
fwait
div
test
fldl
mov
jne
loope
push
or
pushf
scas
inc
daa
inc
outsb
ljmp
xchg
js
push
inc
sub
adcl
ret
aas
mov
movsb
clc
xchg
mov
jmp
sub
lock
arpl
adcl
nop
pop
push
sub
and
aas
jmp
imul
fidivs
mov
lock
in
daa
in
lret
jne
out
mov
sbb
jecxz
adc
adc
gs
mov
push
cmpsl
dec
add
inc
adc
vporq
rolb
movl
push
adc
mov
xchg
fnstenv
aam
aad
xor
or
jl
rorl
sub
adc
outsb
push
xor
movsl
adcb
mov
pop
inc
pop
mov
fwait
xor
jl
push
ret
cmpsb
call
lret
and
pop
push
pop
pushf
pop
movsb
jg
out
loopne
push
iret
shlb
xchg
mov
aam
push
jecxz
cmpsb
imul
cmpsb
or
repz
add
fldenv
xchg
outsl
andb
stos
mov
gs
or
adc
icebp
inc
mov
or
dec
pop
or
int
adc
icebp
aaa
cmc
pop
jb
aam
adc
mov
add
adc
stos
cs
lods
xlat
lahf
inc
jge
scas
or
xor
dec
js
cmp
xchg
shl
mov
aas
ret
push
movsl
sti
pop
inc
or
rorb
lcall
cmc
sbb
xchg
popa
es
xor
add
adcl
or
rcll
dec
pop
popf
addr16
imul
add
jmp
pop
pop
inc
test
repz
loope
shl
imul
out
scas
and
mov
in
repz
shlb
and
outsb
cmp
xor
testb
sahf
adc
mov
jne
pusha
pop
dec
cltd
cltd
scas
pop
and
inc
loope
shr
xchg
fwait
adc
lock
dec
rclb
cmp
or
outsl
aad
sbb
negl
xchg
out
cwtl
cld
mov
lds
cld
mov
popf
add
dec
insl
das
prefetcht2
mov
mov
add
pop
dec
mov
sbb
call
fisubrs
sbb
pop
mov
fdivs
mov
pop
fwait
cmp
push
ret
inc
sbb
out
icebp
ret
fwait
jno
xchg
mov
or
imul
dec
stc
imul
fldl
xor
stc
pusha
add
or
and
shlb
xchg
xchg
inc
jnp
je
lods
sbb
loop
aad
lods
xlat
lahf
shrb
mov
dec
add
cmp
or
lods
inc
xchg
add
loopne
xchg
push
into
jae
pusha
int3
out
mov
xor
mov
cmp
in
push
sub
and
mov
cmp
sbb
cltd
sahf
xor
pop
sbb
mov
data16
aad
mov
or
push
mov
xor
pop
dec
aad
mov
repnz
add
inc
shlb
mov
sub
pop
xchg
js
xlat
daa
fmull
cmp
adc
pop
lock
dec
sahf
push
jno
push
out
std
in
mov
or
dec
sbb
out
inc
mov
cmp
cmpsb
stos
dec
outsb
iret
pop
outsl
lea
or
and
cmp
divb
mov
hlt
hlt
dec
ret
rclb
add
sahf
sbb
dec
stc
fistpll
cs
stc
pop
mov
adc
popa
pop
add
pop
out
loopne
add
jmp
push
test
ss
push
cs
xchg
stos
cmp
ss
and
test
out
mov
shrb
mov
ss
sub
fwait
cmp
addl
call
add
jecxz
lods
pop
sub
mov
stc
add
add
xchg
rcrb
mov
inc
scas
aam
mov
sbb
fwait
insb
daa
inc
dec
and
jo
in
mov
loope
cmp
insl
lcall
repnz
sbbb
mov
and
leave
pop
add
mov
scas
cwtl
jle
leave
inc
jbe
mov
lods
div
push
mov
cli
cmp
es
sbb
ds
dec
jb
sbb
pop
ds
sbb
and
adc
iret
sbb
lea
sti
outsl
mov
cmpsl
pop
jge
orb
cltd
rcrb
xor
cli
in
mov
jae
push
mov
inc
mov
push
popf
mov
sbb
inc
or
jne
pusha
test
add
add
iret
pop
mov
mov
cmpsb
jb
shlb
rolb
sbb
lods
fsubs
roll
push
adc
cmpsl
pop
lock
icebp
test
xchg
or
dec
cmp
jecxz
idivl
or
test
mov
add
jge
fdivrl
sbb
daa
or
lea
push
cmp
mov
cltd
or
xchg
movsb
mov
pop
lea
sbb
xor
in
int
fcompl
jp
pop
divb
ret
rcrl
ficompl
or
xor
and
mov
sbb
test
push
ds
leave
pushf
or
mov
add
adc
push
mov
insl
jo
jo
or
mov
subb
jb
pop
rol
rorl
ss
lods
int3
cwtl
mov
movsl
dec
add
sub
mov
jecxz
stos
sbb
mov
fcoml
push
into
cli
and
mov
and
mov
mov
sbb
hlt
fiaddl
push
movsl
dec
pop
fstpt
not
movsl
aad
shlb
jmp
in
mov
bound
pop
punpckhbw
js
pop
in
or
in
or
in
fdivrp
jno
lret
mov
mov
or
ds
mov
inc
fistps
jno
mov
in
mov
ret
mov
aad
movsl
add
add
pop
push
jno
or
insb
movsl
pusha
jo
mov
mov
outsb
sbb
rcr
ficoms
jp
nop
jp
icebp
outsb
rclb
inc
es
add
pusha
nop
push
pop
push
xchg
mov
js
lock
andl
stos
adc
inc
dec
sbb
and
add
pop
stos
test
leave
lret
pusha
testb
aam
mov
dec
xor
xor
call
mov
mov
ja
sub
dec
sar
add
inc
sub
push
fisttps
notb
jle
fnstcw
iret
mov
popl
dec
imul
or
clc
invd
stc
jnp
dec
inc
cld
shll
je
cwtl
mov
scas
jecxz
xor
jge
mov
sarl
es
mov
in
ljmp
ds
adc
pop
sbb
cmp
fisubl
cmc
or
fldl
imul
adc
ficomps
dec
iret
jb
inc
xlat
push
mov
stos
pop
or
test
add
add
xorb
loop
cmp
sub
into
push
or
xor
mov
aaa
faddl
fwait
and
loopne
js
pop
pop
add
push
in
or
jl
mov
xlat
mov
xchg
mov
popa
cmp
or
loopne
cld
sti
or
mov
cmp
mov
or
pop
jo
fwait
jg
jno
push
jnp
xchg
pop
adc
add
aad
mov
int3
dec
jns
je
lock
mov
dec
sbbl
push
out
leave
mov
sbb
mov
xchg
out
push
mov
dec
lea
mov
and
roll
fidivl
je
and
loopne
inc
lahf
sub
mov
loopne
sar
loope
inc
insl
sub
aaa
jb
push
add
push
sbb
into
loope
js
add
xor
jnp
test
jbe
loop
jle
cmpsl
das
adc
dec
ss
rolb
push
sti
cmp
cmp
cld
pop
out
cmp
cltd
rcrb
orl
into
xchg
cmpsb
and
pop
lods
mov
adc
cmp
lds
in
xchg
dec
cld
lcall
pop
pop
inc
mov
outsb
push
lock
int
lcall
mov
or
fildll
into
and
adc
jns
push
cmp
sbbb
js
ficomps
lock
sub
sbb
lret
fwait
in
add
push
xchg
and
mulb
jl
into
mov
xchg
push
sub
pop
icebp
out
inc
iret
push
jge
test
sbb
add
insb
xchg
into
and
popa
lock
fcomps
mov
xchg
aaa
and
xor
lcall
mov
sbb
ficoms
int3
pop
cmp
xor
and
sub
movsb
psubb
dec
fdivl
icebp
loope
pusha
sahf
movsl
cmp
in
mov
mov
dec
xchg
ds
add
adc
jmp
test
push
test
add
cmpsb
shlb
mov
add
ret
or
daa
add
add
outsb
clc
stos
and
in
cli
in
push
jl
sarl
add
sti
insb
repz
add
mov
adc
int
icebp
xor
repz
test
stos
mov
lret
stos
jle
mov
inc
out
dec
ds
sbb
fst
add
imul
add
push
sahf
mov
std
mov
add
idivb
inc
xor
testb
xor
jbe
fiadds
mov
ss
adc
mov
dec
in
add
les
cld
add
jno
clc
cmp
mov
mov
int3
jg
inc
xchg
mov
pop
loope
nop
call
loope
push
adc
call
lcall
and
inc
fyl2x
jnp
rcrl
adc
fdivr
jg
fidivl
sarb
in
test
scas
decl
cld
fists
mov
andb
xchg
outsl
imul
add
pop
movb
addb
cli
push
out
je
cs
subl
cwtl
or
add
and
hlt
push
lcall
hlt
test
adc
xor
push
jne
roll
lock
push
xchg
add
imul
out
push
clc
bound
add
jge
mov
aam
stos
inc
sbb
dec
test
call
insb
lea
mov
ljmp
js
js
mov
lea
shll
loope
push
cmp
sbb
shl
mov
or
ret
sbb
fadd
mov
mov
and
negb
push
push
mov
js
outsl
lock
ss
cmp
mov
push
sahf
bound
inc
fists
les
xchg
or
jmp
mov
movq
lock
mov
repz
stos
mov
push
cmp
sbb
jl
inc
jno
je
sbb
adc
xchg
push
mov
shlb
pop
adc
mov
int3
jp
outsb
mov
ret
jl
je
push
xor
cmp
cmp
ret
sub
test
out
and
popf
or
cmp
rcrb
cmpsb
pop
sub
popf
add
cmpsb
sti
imul
sbb
leave
ficoml
addr16
cmpl
popa
and
xchg
pop
or
adc
mov
test
fidivrs
mov
xchg
shll
jmp
dec
fs
lcall
out
push
je
mov
jg
in
in
js
repnz
inc
loopne
repnz
iret
adc
adc
push
push
subb
push
pmaxub
les
and
xchg
dec
add
and
out
fs
lds
mov
cwtl
in
ljmp
or
jle
insl
xlat
fwait
ds
or
in
mov
sbbl
lds
pushf
jg
adc
or
xor
xchg
jg
es
adc
xchg
cmp
add
mov
lcall
and
pop
es
sub
mov
fimull
or
mov
out
push
pop
lods
xchg
into
pusha
push
lea
jo
sbb
sub
mov
sub
cmp
scas
test
insb
loopne
loop
int3
push
jb
call
xor
or
dec
or
fsubr
sbb
iret
xchg
jge
dec
push
and
pop
movsb
loop
fmull
sbb
sbb
sub
lea
pop
ficoms
movsl
jecxz
cmp
pop
adc
cmpsl
pop
subl
lock
jle
fcoml
or
add
fldt
jl
xchg
push
mov
jp
pop
jg
ljmp
mov
clc
add
ja
inc
dec
sub
loopne
cmpsl
push
fstl
decl
xor
outsb
fdivrl
push
xchg
xor
fidivs
fidivs
inc
add
call
lret
ficoms
jle
fdiv
push
xlat
xchg
cmp
stos
scas
dec
mov
std
adc
filds
cmp
fistpl
in
adc
orb
nop
inc
cmp
icebp
sub
sbb
inc
sbb
sbb
pop
sub
xchg
mov
iret
dec
loope
push
push
loope
jno
outsl
fcomps
scas
rcr
into
add
dec
add
mov
push
rclb
push
jecxz
iret
push
loope
mov
adc
pop
jmp
or
cltd
scas
push
call
xor
das
cmp
inc
movsl
idivl
jl
mov
cmpsb
rolb
jl
in
sbb
rol
add
or
pop
push
hlt
inc
or
push
in
loopne
mov
xchg
test
mov
mov
xor
pop
nop
fwait
ljmp
bnd
xchg
in
dec
cli
nop
add
sbb
cmc
xchg
stos
inc
imul
push
clc
mov
sti
cli
ret
in
xorl
cmpl
add
ffree
icebp
mov
push
dec
stos
decl
cmp
pop
fld
ljmp
push
dec
int3
mov
push
dec
ljmp
lods
add
jge
stc
addb
dec
shl
mov
clc
xchg
movl
insl
out
mov
inc
hlt
add
push
mov
add
andb
mov
add
dec
xchg
sbb
inc
mov
sbb
sbb
jb
loop
fsubrp
add
rclb
adc
and
fildll
add
pop
push
enter
mov
adc
xor
sti
push
xchg
scas
push
push
adc
and
pop
push
imul
sbb
jecxz
cmp
or
mov
sub
aas
test
sub
cmp
cld
cmpl
cmc
dec
jb
cmp
sub
test
out
adc
cld
in
cmp
das
push
push
mov
ss
jecxz
dec
jmp
ficomps
cmp
sub
pushf
data16
call
into
insb
adc
and
mov
cmp
mov
adc
fcomp
push
pop
jg
adc
push
insl
xchg
sub
jl
dec
push
scas
xchg
ja
pop
fnstsw
mov
pop
fadds
testb
xchg
aam
dec
in
push
mov
dec
sub
dec
dec
test
jne
push
jne
jbe
int
inc
outsl
adc
lds
enter
mov
imul
lock
out
cmp
add
dec
add
loopne
inc
inc
pop
lock
aad
es
add
inc
insb
rcrl
nop
daa
clc
pop
mov
mov
push
sbb
jo
in
sti
inc
adc
or
cmc
inc
jp
inc
maxps
aas
lock
push
dec
xlat
leave
and
or
add
or
aad
push
dec
cmp
mov
adc
sahf
pop
lock
push
mov
and
cmpsb
mov
lret
push
add
or
mov
movsb
adc
or
cmpsl
or
cmp
rorl
call
in
push
xchg
stos
clc
push
popa
add
sub
pop
movsl
push
fisttpll
cmp
cmp
data16
mov
adc
es
push
mov
shrb
jo
fldenv
stos
xlat
mov
lods
inc
jge
stos
lret
leave
cld
sbb
jbe
cld
repnz
fiadds
jb
fdivrl
pop
mov
andl
shlb
cmp
je
outsb
sub
fcompl
adc
mov
insb
data16
movsl
lret
dec
sub
subb
mov
cmpl
mov
sub
sub
ss
mov
in
xor
mov
mov
dec
andl
in
mov
and
test
adc
stc
sbb
dec
inc
inc
fists
inc
mov
lock
pop
imul
push
pop
idiv
sarb
pop
insb
sub
xor
mov
gs
xor
push
dec
sar
scas
ds
push
dec
inc
xchg
dec
mov
scas
mov
scas
inc
mov
xor
dec
cmpsl
divb
cld
in
cmp
cmpsl
and
add
pop
std
inc
xchg
sub
arpl
dec
test
xor
outsb
aas
add
push
add
xchg
xchg
sbb
sti
jne
into
loope
lcall
add
dec
cld
push
adc
mov
add
sbb
lods
push
mov
sub
pop
add
popa
cmc
pop
cld
fisttps
ljmp
push
ror
out
fistpll
pop
outsl
and
push
arpl
and
xor
and
xchg
cltd
sbb
mov
pop
in
insl
nop
dec
lock
ret
cs
sbb
iret
ret
mov
movsl
pop
mov
xchg
pop
jb
jae
push
lcall
adc
dec
and
test
xor
aam
xlat
movsb
cmp
lock
mov
lret
add
lock
add
cltd
outsl
cmp
and
std
scas
dec
dec
call
jl
sahf
mov
jnp
int3
clc
daa
mov
push
aad
mov
les
xor
jae
dec
xchg
popa
xor
out
testl
lock
push
lods
hlt
loopne
pop
xchg
dec
push
rcrb
mov
pop
jo
nop
out
fcmovnu
outsb
and
loope
fidivrs
push
cli
mov
mov
dec
cltd
sbb
jb
cs
and
adc
daa
push
mov
out
loopne
fidivs
insb
test
xchg
jge
cmpxchg
cmpsb
mov
sbb
das
addr16
pop
test
lds
arpl
push
mov
scas
cmp
push
or
dec
and
jle
pop
inc
pop
repnz
cmpsb
add
and
inc
shrb
xchg
shlb
sub
popa
test
out
lret
pop
or
ss
jl
sub
cmp
loope
insb
mov
push
inc
in
pop
scas
sbb
repz
ljmp
mov
mov
push
and
jl
scas
imul
push
ret
jnp
add
or
mov
ss
stc
cmp
mov
inc
inc
lcall
test
repz
stc
lods
sbb
das
pop
and
add
jo
mov
shrd
cmpl
pop
outsb
add
or
inc
or
mov
mov
js
dec
mov
xor
xor
fisttpll
mov
cmp
loope
adc
inc
xchg
mov
mov
rol
add
and
mov
scas
mov
sbb
and
hlt
mov
push
nop
mov
push
clc
jg
pop
or
adc
fldenv
push
fnstcw
mov
insl
sbb
lds
idiv
dec
aam
addr16
into
popl
nop
cmp
add
sbb
lock
aaa
loope
inc
fmull
pushf
loope
dec
mov
adc
or
les
lcall
in
mov
mov
test
leave
loop
sahf
mov
pop
add
or
loope
sub
outsb
jge
inc
inc
adc
cmp
and
push
jecxz
adc
lods
jmp
jecxz
cli
sahf
lock
mov
out
push
aad
cld
sub
cli
scas
pushl
sbb
mov
mov
lahf
dec
inc
adc
xchg
and
sbb
cmpsb
jle
cmp
fldenv
aam
arpl
or
ret
lea
into
inc
cli
das
jo
cli
lods
lock
sbb
in
loope
stos
lret
inc
lock
aam
pop
or
and
mov
cmp
iret
inc
cmp
andl
cmpl
ret
cmp
sbb
jnp
mov
hlt
add
push
loopne
ret
adc
les
cmp
adc
clc
push
shll
outsb
add
jg
inc
sbb
daa
pushf
insb
sub
add
jle
adc
std
aaa
mov
aas
lret
lds
dec
xor
lock
xor
sbb
loopne
pop
add
jnp
aas
outsb
mov
or
or
jno
inc
xor
jg
idivl
add
jp
push
loop
add
inc
lcall
inc
scas
repz
push
adc
iret
push
std
mov
add
lret
xchg
cmp
shll
push
fstl
rclb
mov
add
ret
hlt
add
push
jo
xchg
mov
fmuls
mov
or
ret
jmp
cltd
mov
mov
xchg
sahf
icebp
jg
cld
jb
sub
xchg
dec
mov
inc
mov
add
xchg
and
fistl
mov
pop
and
pop
call
addb
xchg
outsb
stc
push
dec
aas
out
into
loope
xchg
stc
ja
in
loop
mov
add
push
fs
pushf
sbb
dec
mov
mov
scas
test
or
stc
add
and
fiaddl
jg
xor
dec
notb
cltd
mov
aas
pop
repnz
aaa
aad
mov
and
cmp
dec
xor
leave
shll
add
xor
jl
push
jp
pusha
insb
arpl
pop
cmp
mov
lahf
pop
and
jno
les
or
inc
and
cmc
repnz
std
xorl
or
icebp
test
mov
dec
mov
cmp
mov
fwait
mov
pusha
stos
sahf
mov
add
or
pop
scas
dec
pusha
inc
push
and
test
incb
lret
dec
push
enter
cmp
dec
or
cmp
xchg
out
add
movsb
and
ss
dec
call
divb
inc
add
in
addb
xor
popf
push
clc
pop
fs
rcrb
into
dec
filds
into
popa
andb
and
int
xor
movsb
int3
or
xchg
ss
lgs
push
xchg
jo
fwait
jno
cmp
jo
dec
call
push
jmp
mov
sub
enter
xchg
pop
and
movsl
je
or
call
inc
clc
fiaddl
pop
pushf
test
cli
negl
or
add
mov
and
pop
add
jmp
mov
mov
mov
fwait
cmp
pusha
inc
add
dec
jmp
xlat
decl
jne
jl
dec
or
xor
add
rolb
add
cli
outsb
call
jb
mov
pop
imul
push
push
fnstcw
incb
ret
jl
enter
sahf
mov
xor
ljmp
cld
pop
sbb
dec
mov
adc
xor
sbbl
xchg
push
fs
mov
pop
xor
ret
call
iret
test
movsb
das
sbb
notb
fmul
or
fsts
xchg
orl
add
cmp
insl
push
and
call
pusha
incl
ret
jg
cld
xor
outsb
dec
inc
movsl
mov
dec
ds
aam
add
bound
icebp
aam
adc
and
cli
fnstsw
mov
int3
dec
jb
mov
cmp
and
loop
test
cwtl
mov
cmpsl
lock
mov
dec
mov
repz
daa
shlb
sbb
pop
jmp
and
mov
dec
xchg
pusha
fs
inc
clc
call
cli
inc
scas
add
sti
add
mov
popf
push
sbb
adc
push
int3
clc
sar
add
dec
ljmp
clc
add
cwtl
sbb
js
bound
clc
sahf
clc
cmpb
jne
aam
ret
in
mov
mov
ljmp
cld
rorb
mov
or
std
inc
mov
fdivs
mov
inc
mov
enter
mov
inc
mov
fmuls
popa
mov
dec
add
or
loope
incl
or
mov
push
cmp
adc
mov
push
jl
pop
and
cli
outsb
and
jl
movsl
rcl
cmc
or
mov
ljmp
lds
out
and
or
mov
dec
std
outsb
mov
in
fsub
and
sti
clc
ja
jle
and
mov
shll
jl
push
notl
cs
pop
mov
mov
cmpsb
push
loopne
mov
fdivrl
sbb
es
je
ljmp
lea
pop
lods
sbb
sub
stos
push
inc
xchg
shr
orl
jcxz
imul
inc
hlt
fwait
popf
decl
aas
scas
cltd
jbe
or
shrb
shl
sub
mov
xor
jne
inc
add
xlat
jecxz
sub
nop
mov
aam
adc
pushl
xchg
insb
fdivl
inc
insb
add
and
mov
lahf
mov
lock
imul
icebp
mov
enter
loop
pop
mov
inc
fistps
cltd
mov
in
and
out
sub
push
pop
hlt
jg
loope
fimuls
jmp
push
jbe
out
jge
push
sbb
cmp
ljmp
adc
outsl
fwait
out
or
loopne
aad
je
mov
scas
shrb
out
movl
and
mov
pushf
xchg
inc
mov
data16
js
adc
data16
mov
pop
mov
call
dec
push
sub
loope
lcall
mov
sbb
inc
jns
sub
add
sbb
mov
inc
jg
or
out
lods
pushl
in
je
mov
add
das
js
jbe
xor
dec
lret
add
pop
enter
sbb
mov
jp
lcall
adc
shl
jbe
sti
add
imul
aad
and
mov
imul
mov
jl
jne
mov
jbe
xchg
jmp
mov
or
call
sbb
imul
lock
enter
imul
repnz
test
in
testb
daa
push
mov
out
aaa
xchg
sub
outsl
mov
mov
stos
and
sbb
mov
lcall
in
popf
loop
push
mov
mov
cmp
mov
addb
fucomip
stos
testl
and
popa
clc
mov
movsl
fldlg2
rcl
repz
out
shrb
loopne
sub
adc
rclb
pushf
adc
pop
test
pop
stos
adc
mov
jmp
loop
xor
jge
xchg
sbb
adcl
shlb
mov
or
in
jno
decb
jo
rcrl
lds
les
push
jg
scas
and
into
lods
icebp
imul
or
flds
ja
outsb
add
sti
js
loope
int
cli
xor
addl
add
sbb
push
xor
insb
or
or
pop
pop
bnd
js
sub
sbb
lods
nop
jp
or
push
xchg
sar
lock
fsubrs
dec
aas
mov
test
cmp
or
in
or
inc
cmp
je
push
scas
leave
ljmp
nop
inc
bound
icebp
mov
aaa
mov
sub
xchg
xchg
int3
iret
sub
das
call
jmp
shl
leave
fcmovb
cwtl
test
push
mov
rcrb
add
xchg
mov
push
std
push
adc
mov
iret
gs
and
push
loope
mov
call
push
jo
lahf
add
ret
sub
mov
xor
aaa
jecxz
stc
adc
xor
lods
adc
jle
sub
sub
arpl
cmpsb
jo
shrb
xchg
cmp
sbbb
xchg
ljmp
add
test
sti
mov
test
cld
or
rcr
mull
loope
and
into
repnz
ret
shrb
jp
ljmp
push
hlt
push
cmp
aaa
cmp
ss
and
adc
xchg
lock
scas
sbb
rolb
add
cli
repnz
fimuls
cmc
sbb
jle
pop
add
jno
xor
cwtl
jp
sub
icebp
push
push
jmp
sbb
jge
add
sub
inc
sbb
push
dec
sub
adc
sti
pop
testl
and
les
popl
pusha
sub
out
sub
mov
xchg
push
add
add
push
lods
push
icebp
fimull
pusha
movsb
pop
fucomp
mov
insb
mov
out
decb
pop
sub
xchg
bound
push
and
test
mov
push
adc
sti
pop
push
aam
iret
ret
bound
loop
jo
dec
aad
cs
icebp
gs
ljmp
and
mov
jb
or
mov
outsb
into
aas
cmp
jno
mov
mov
mov
ucomiss
mov
in
pop
jl
xchg
in
mov
mov
jne
filds
or
imul
and
sub
lret
nop
sahf
xor
clc
pop
adc
sti
mov
fs
add
mov
push
in
rcll
mov
mov
shlb
or
jp
cmp
jbe
mov
jo
shr
loope
sahf
pop
mov
dec
test
fsubr
dec
clc
clc
add
mov
js
dec
jo
out
sbb
sub
lret
and
inc
adc
xchg
outsb
xor
xchg
jge
pop
mov
add
call
xchg
int3
and
aas
loopne
insb
jb
jp
sub
daa
mov
lcall
xor
jg
add
scas
pushl
dec
fwait
scas
sub
add
dec
ljmp
xor
add
sbbb
arpl
mov
inc
fsubrp
jl
lods
mov
cli
out
outsl
pop
jne
imul
cmp
ret
ret
mov
andl
push
pusha
shll
test
icebp
pop
dec
mov
daa
pop
or
fdivrp
cmc
int
rolb
ficomps
xorb
sub
test
hlt
mov
mov
inc
inc
clc
out
cmpsb
cmc
daa
add
cmp
push
add
aam
inc
rorb
orl
aad
daa
cli
fbld
and
mov
xlat
add
lahf
decl
aas
xchg
xchg
pushl
push
repnz
arpl
inc
or
aad
orb
cs
jecxz
jl
stc
arpl
mov
inc
jbe
insb
dec
faddl
pop
dec
clc
and
adc
es
mov
inc
enter
adc
sub
imul
pushf
mov
and
lds
movsl
and
xchg
push
or
lcall
ja
jle
loope
loope
pusha
dec
loope
xorb
mov
xchg
add
rcr
inc
loop
imul
cmp
jno,pt
loopne
icebp
xchg
or
pop
mov
out
jo
jle
idivb
and
imul
pusha
mov
in
inc
mov
cmp
rcrb
sub
pop
adc
adc
popa
fimuls
and
push
jp
mov
inc
jbe
push
jecxz
arpl
xorl
xor
loope
push
mov
popa
test
mov
inc
push
push
push
pop
jg
push
push
cld
outsl
and
lret
mulb
sbb
sub
in
movsb
das
loopne
mov
add
fcomps
xchg
inc
ret
cmpb
mov
aad
inc
hlt
dec
cmp
cmp
mov
cld
adc
mov
jnp
mov
js
les
bound
ljmp
clc
js
xchg
pop
cld
popf
ss
insl
xchg
stos
cmp
into
lock
aam
cmp
clc
jmp
xor
dec
sahf
sarb
fwait
jns
int3
mov
and
sti
incl
mov
pop
aas
mov
xorb
or
mov
jecxz
out
clc
shr
jle
and
enter
jnp
adc
xor
mov
inc
loope
mov
stc
cmp
or
add
dec
mov
pop
iret
test
pop
lds
les
and
dec
sub
aas
and
mov
ficomps
xor
pusha
add
es
pop
or
je
fistps
adc
add
fs
inc
pushf
xchg
dec
arpl
xchg
imul
jge
pop
sub
inc
add
jg
cld
adc
xor
stos
push
mov
add
stos
imul
das
cli
test
sbb
pushf
fcmovnb
stc
mov
pop
xchg
xchg
mov
sub
add
xchg
push
dec
mov
mov
scas
sub
icebp
cmpsb
je
mov
xchg
fildl
jp
je
outsb
dec
mov
lahf
aam
mov
iret
dec
xorb
adc
lods
mov
pushf
ret
popf
fiaddl
fbstp
push
mov
and
mov
cmp
pushf
pop
xor
cwtl
pop
lahf
jl
and
dec
jl
mov
into
xchg
in
leave
pop
sub
pop
sub
aam
add
cmp
ds
lods
aaa
orb
cmp
add
push
pop
cmc
fisubrs
push
sub
cmp
addl
jl
mov
adc
push
push
xor
daa
mov
or
jecxz
pushf
andnps
sub
icebp
push
adc
pop
add
cmp
mov
mov
rcrl
adc
fsubl
adc
push
imull
or
xchg
fsubrs
cmp
mov
cli
inc
jg
out
jle
add
mov
cli
jge
rol
cmpsl
sarl
dec
cld
jmp
lea
adc
popf
cmp
sub
cld
mov
jl
xor
loop
insl
ret
push
xlat
ficoml
adc
ss
mov
mov
rorb
xchg
subb
xchg
mov
push
mov
sub
or
add
add
and
cmpsl
add
lret
jo
shl
xor
ja
mov
push
push
mov
add
and
sbb
sar
stc
cmp
js
int
mov
xlat
sahf
mov
mov
scas
push
cmc
jbe
in
notl
fdivrs
std
lods
inc
push
xor
dec
clc
inc
std
mov
inc
add
add
loopne
popa
std
daa
les
insb
jl
orb
scas
push
popf
addr16
ret
mov
xchg
scas
call
mov
pusha
rorb
negl
xchg
sub
push
decl
notb
nop
push
loope
adc
jle
cmc
in
pop
ret
push
sub
in
dec
cmp
dec
sbb
loopne
cld
mov
mov
add
repz
sbb
mov
jle
dec
or
sub
inc
fdivrp
adc
fidivrl
adc
cmpsl
sub
scas
loop
adc
push
xor
imul
or
scas
mov
and
into
sbb
lods
iret
xchg
es
fs
cld
das
test
loop
int
les
push
dec
shl
das
clc
pop
inc
notl
pop
jb
xchg
lret
cmp
arpl
dec
pop
mov
imul
cmp
add
sbb
enter
add
in
add
xor
or
push
inc
pop
das
clc
aaa
or
mov
mov
pop
add
cwtl
or
cmp
add
push
hlt
je
dec
push
jp
pop
repz
arpl
cs
call
cmp
mov
xor
inc
rorb
rcll
repnz
adc
or
push
inc
cmp
inc
movsb
out
sarl
jl
sbb
lock
ror
lods
fbld
mov
mov
filds
cmpsb
push
test
rolb
sbb
or
dec
or
lret
stc
cmp
sub
adc
aas
lret
clc
cmp
repnz
lret
call
inc
sti
add
icebp
lahf
mov
mov
mov
sbb
sbb
data16
shlb
ret
dec
test
or
call
jg
mov
mov
xchg
jne
out
loop
lea
lods
js
adc
pop
xor
xor
jg
pop
nop
sbb
les
xor
pop
mov
jns
cld
inc
std
nop
mov
mov
movsb
and
and
loop
testb
scas
jo
push
push
xchg
movl
push
or
lods
add
outsl
sbbl
into
pushf
std
stc
jne
xor
fsubl
add
pop
sbb
fdivr
orb
addr16
jp
inc
sbb
add
insb
pusha
sub
cltd
loop
cmp
push
aam
std
cwtl
scas
mov
push
lret
mov
lods
mov
fildl
shl
scas
mov
sbb
movsl
mov
pop
mov
adc
push
push
mov
daa
push
ljmp
inc
das
les
andl
pushf
in
ss
add
lods
stc
out
adc
int3
sahf
and
sub
les
ffreep
test
sbb
xchg
push
xor
shlb
clc
cmpsl
xor
sbb
jbe
sub
ret
popf
in
bound
into
imul
jb
insl
xor
jmp
test
test
xor
push
pushf
fcmovnu
inc
jge
lock
dec
ss
push
xchg
mov
rolb
push
das
shrb
push
sarb
enter
jg
xor
stos
adcb
shl
cmp
mov
mov
movsb
push
pop
outsb
das
out
iret
inc
push
pop
xchg
outsb
adc
push
movsb
push
jbe
mov
loop
cltd
lods
sbb
mov
and
inc
mov
adc
sti
mov
sbb
push
std
push
fdivrs
dec
xor
mov
icebp
pop
jl
into
cld
fdivl
mov
or
imul
xlat
mov
inc
add
loope
fiaddl
mov
inc
int
mov
in
adc
pop
lret
jmp
shr
enter
rcll
dec
ljmp
xor
jno
sbb
lcall
in
sub
lock
sbb
sahf
mov
rcrb
data16
pushf
mov
stc
inc
std
ljmp
xchg
in
sbb
in
push
push
add
pushf
test
xchg
push
lds
inc
ret
nop
icebp
xchg
fidivl
inc
pop
test
push
adcb
xor
push
and
lock
jecxz
mov
ret
fsubs
adc
icebp
mov
scas
mov
aam
clc
and
sbb
or
ja
sbb
add
decl
push
mov
aaa
adc
jg
jg
daa
popf
sti
popf
adc
adcl
xor
test
imul
mov
and
bound
mov
cmpsb
scas
je
jg
inc
cld
ja
scas
or
xchg
iret
pop
jns
ja
xchg
inc
push
xchg
icebp
aas
stos
shr
mov
jbe
xchg
test
mov
lods
aam
or
les
decl
dec
or
lret
add
mov
push
adc
push
add
mov
jb
inc
int3
sub
vmovaps
ss
pop
xor
outsb
push
sub
and
mov
jae
ljmp
fxch
imulb
xor
inc
add
std
jns
sbbb
jge
aam
sub
add
ljmp
lret
xchg
lea
rcll
sbb
aas
jl,pt
xor
adc
xchg
dec
ret
inc
sub
sub
dec
jge
cmp
mov
xchg
jns
push
dec
jg
pop
jo
sbb
mov
mov
jae
arpl
cli
cmp
or
ds
fldcw
and
scas
adc
inc
pop
dec
repnz
sbb
cmovno
sub
std
rorl
scas
aad
jl
xor
jo
pop
icebp
pusha
dec
push
xchg
mov
sub
mov
icebp
dec
stos
out
fsubs
jns
stos
mov
pop
stos
mov
add
pop
sub
add
cmpsl
rcl
nop
mull
jle
in
push
and
dec
outsw
fnsave
jle
xchg
inc
out
outsl
das
scas
popf
ror
or
pop
movsl
scas
pop
adc
mov
hlt
adc
pop
sub
inc
sbb
xchg
jb
mov
mov
jg
xor
add
and
adc
shll
cs
aaa
push
jae
dec
push
pusha
sbb
add
xor
rorb
xchg
rol
add
sbb
xor
dec
les
dec
jmp
and
pop
push
push
fdivl
std
shrl
mov
ljmp
push
ds
loopne
cmc
xchg
cmp
dec
leave
fld
popf
je
cmp
lret
cmp
test
sub
cltd
jns
inc
mov
xor
bound
pop
mov
adc
imul
and
sbb
pop
push
bound
mov
inc
pop
xchg
clc
sbb
sub
or
aas
xchg
jo
out
cmpsb
or
sub
scas
aam
cmp
out
fistpll
inc
scas
lock
push
outsl
mov
sub
xor
xorl
aam
repnz
mov
pop
push
fs
ret
cmp
outsb
adc
icebp
outsb
fiadds
popf
fs
or
les
xorb
out
mov
jb
inc
test
das
jno
mov
dec
rcrb
aas
and
bound
inc
shll
ds
sbb
mov
scas
lcall
lcall
lock
pop
es
or
and
jg
in
seta
jge
push
js
mov
js
adc
mov
fiaddl
in
push
adc
iret
and
std
inc
das
adc
test
lock
inc
or
icebp
jg
mov
repz
insb
mov
jecxz
gs
mov
mov
pop
out
fstl
ljmp
push
ficomps
pop
xor
cld
add
xor
insb
or
test
pop
fdivrl
mov
or
add
repnz
clc
loop
lock
sub
or
mov
sti
sbb
xlat
fists
pop
fcomps
pop
xor
add
add
lcall
sub
push
or
pop
inc
mov
mov
out
push
jge
jae
inc
mov
sub
repz
movsl
push
fs
and
ds
dec
push
cmp
or
push
ret
aas
jp
stos
sahf
add
stos
xchg
pop
or
lods
outsl
push
add
jg
aas
sub
idivl
pop
inc
lock
ud0
shll
out
and
loopne
pop
mov
push
inc
ret
cli
push
inc
inc
incb
pop
call
jl
xor
mov
add
pushf
xchg
push
in
xor
fisttpl
and
adc
int
xor
mov
sub
adc
shlb
in
mov
cmp
lcall
loop
cmpl
inc
sti
jp
push
adc
add
push
rolb
repnz
mov
cmovl
push
nop
cltd
inc
fiaddl
lods
shll
inc
dec
addr16
fcomip
jle
jno
push
je
les
in
xchg
incb
cmpsb
hlt
mov
popa
daa
inc
add
pop
test
add
vpsubd
jmp
ret
test
push
cld
jg
pop
roll
sbb
pushf
aam
mov
pop
add
in
jno
mov
xchg
and
dec
jp
push
fwait
mov
sbb
push
ss
mov
or
decb
push
shlb
pop
out
stos
dec
dec
push
mov
cld
and
add
or
loopne,pn
ret
mov
scas
dec
dec
inc
or
jg
repnz
mov
les
mov
imul
mov
inc
gs
mov
cmpsl
push
inc
stc
fisttpl
cs
mov
call
mov
mov
inc
sbb
jnp
scas
or
lcall
pop
cltd
in
sti
ficompl
stc
es
mov
iret
cld
lea
decb
loope
cmp
in
lcall
add
pop
inc
push
imul
mov
xchg
adc
ds
aas
jno
sarl
aas
cli
or
es
pusha
jmp
dec
or
push
ss
inc
xchg
cmp
outsl
fnstenv
sbb
nop
jno
push
scas
mov
shrl
and
lea
shrb
pop
pop
mov
stos
mov
ret
popf
jmp
mov
mov
ja
icebp
scas
or
push
cltd
push
mov
xchg
sarb
clc
sub
pop
mul
sub
test
sub
incl
xchg
sub
push
cmp
inc
dec
dec
or
or
mov
popa
jb
repnz
ret
loopne
dec
jl
adc
aas
ret
and
adc
push
test
adc
das
or
popf
ficomps
jp
mov
mov
data16
pop
cmp
ss
mov
jae
int3
ds
push
shl
lock
shl
loop
sub
xchg
mov
add
xor
add
sbb
fcoms
add
or
dec
hlt
addr16
aas
xchg
fcomps
nop
das
ret
jbe
incl
popa
dec
jno
mov
jns,pn
push
lea
std
inc
mov
cmp
gs
std
cli
inc
ja
aam
popf
scas
xchg
cmp
jp
in
daa
ljmp
dec
jbe
mov
cmp
xor
push
clc
sbb
push
and
mov
loope
subl
outsl
jo
aas
ljmp
test
mov
jl
pop
jge
mov
pusha
pop
or
outsl
mov
and
rcl
clc
ja
rorb
fsub
cmp
outsb
out
sbb
icebp
or
add
pop
int3
dec
dec
cmp
adc
push
shll
inc
mov
fildl
and
ret
ljmp
aad
sub
mov
xor
adc
xorb
sarb
inc
push
push
sahf
sbb
pop
jae
mov
pop
add
mov
jp
xor
push
adcl
jo
fwait
and
pusha
aam
jb
dec
rcr
xor
pop
or
test
popa
repz
adc
hlt
fcoml
mov
lcall
jge
and
es
or
mov
or
and
stos
pop
cld
scas
xchg
or
inc
lcall
or
stos
push
push
xchg
sar
sbb
lret
dec
enter
push
jmp
jle
sub
out
inc
and
inc
cmp
stos
or
jo
sub
and
popf
push
push
sarl
push
fidivrl
pushf
out
xor
imul
cmpsb
and
jb
push
or
outsb
pop
cmp
cmc
or
sub
cmp
dec
loope
orl
mov
pushf
xchg
adc
std
jmp
subb
jo
pop
scas
ljmp
insl
das
inc
push
out
adc
mov
inc
jbe
mov
mov
cmp
loopne
cld
add
push
add
popa
jnp
xchg
mov
jno
xchg
adc
hlt
js
daa
dec
arpl
dec
jmp
dec
push
push
add
aad
ljmp
and
cli
outsb
ja
test
std
addl
rcll
mov
adc
je
add
xchg
aad
fists
test
les
xchg
inc
cli
push
sbb
outsb
lock
rorl
outsl
bound
std
cmc
lds
mov
test
out
lretw
lret
add
int3
repz
mov
out
push
stc
pop
xor
jb
imul
cs
arpl
pusha
enter
mul
js
stc
xor
pop
in
inc
or
xchg
or
xchg
mov
cld
iret
pusha
add
inc
std
pop
das
adc
repz
aam
clc
rcrl
subl
cmp
pop
test
popf
mov
mov
sbbl
loop
xor
js
dec
fstl
out
push
lods
pop
mov
cmp
ds
in
adc
or
loope
pop
sar
aaa
mov
mov
ret
bound
xor
lock
cwtl
ljmp
sbb
cli
out
setne
jo
movsl
pop
mov
cmp
mov
cmp
lea
pop
stos
xchg
stos
mov
stos
push
mov
mov
dec
add
lods
jecxz
stc
push
fisubrl
sbb
add
dec
dec
fs
repnz
jge
adc
inc
pop
stc
aas
jnp
xor
leave
adc
cmp
mov
test
xchg
push
mov
aad
cwtl
dec
sub
sub
adc
cmp
sti
mov
xor
movsb
push
sbb
pusha
es
lods
call
push
push
mov
aad
stc
and
mov
adc
mov
mov
add
push
and
xchg
test
ds
mov
daa
lea
pop
xor
bound
imul
inc
stc
fidivs
jg
or
loop
or
add
pop
inc
dec
push
ljmp
fidivs
call
aam
inc
mov
cmp
add
push
push
sbb
and
sbb
mov
enter
mov
pop
inc
or
or
ror
das
sbb
xchg
add
jmp
cmp
push
lret
mov
lret
push
add
fisubl
add
and
pop
cltd
pop
stc
jns
dec
xor
sub
mov
mov
addr16
pop
popf
add
movsb
test
pop
data16
fcompl
xor
sub
cmp
stos
hlt
sahf
leave
sbb
es
mov
xchg
ja
add
dec
rcrl
adc
test
sbb
cmp
or
cld
push
pop
or
jmp
xor
or
fwait
std
or
lret
mov
test
movsb
pusha
adc
out
enter
rol
cmp
cld
mov
addr16
daa
addr16
or
int
loopne
rcr
lods
add
aam
mov
adc
dec
pop
divps
jmp
imul
push
mov
xor
pusha
test
lahf
test
dec
xchg
ja
jmp
and
inc
jl
aam
cli
sbb
inc
loope
push
pop
add
iret
sub
xchg
mov
sub
je
data16
negb
add
or
mov
add
mov
or
fisttpl
nop
sbb
sub
and
lods
test
aam
loope
push
pop
push
ljmp
cmpsb
push
jns
dec
cmp
imul
sub
and
pop
popa
xlat
daa
insb
pop
enter
adc
xor
mov
add
pop
ja
outsl
sub
es
movsl
pop
decl
add
pop
ds
daa
or
mov
aaa
insb
mov
call
jb
ret
pop
push
mov
out
dec
sbb
insb
or
pop
pop
jl
sahf
pop
mov
mov
lods
cmp
ljmp
lahf
test
adc
xor
sbb
adc
hlt
mov
xchg
test
sub
gs
test
and
inc
shl
std
aam
xchg
add
pushf
jbe
mov
mov
mov
mov
repnz
jne
imul
xchg
adc
adc
mov
pop
pop
insl
mov
aas
lcall
hlt
loope
test
add
imul
shl
cwtl
push
insb
daa
jne
shrl
lods
mov
adc
push
jg
pop
hlt
cmp
or
test
mov
cmpsb
scas
pop
jge
push
das
push
push
ja
andl
sbb
shrb
dec
aad
js
mov
push
das
and
loope
adc
loop
add
inc
mov
push
and
pop
fldt
lret
jmp
xabort
das
test
add
jo
stos
and
sti
aaa
enter
pop
fnstenv
and
pusha
pop
fmul
pop
adc
adc
jne
dec
xor
out
jmp
lahf
or
cmp
je
test
inc
jl
shr
pop
sbb
sti
insl
lcall
add
out
pusha
gs
pop
adc
dec
les
mov
popa
sub
cmp
inc
pop
lea
pop
loope
add
rorl
lahf
ss
pop
pusha
repz
push
pop
fadds
addr16
dec
push
icebp
loopne
push
rorl
xchg
ficomps
push
mov
or
dec
je
cs
or
inc
mov
fadds
mov
xlat
add
addr16
stos
loop
std
mov
icebp
ret
sbb
rcrb
bound
outsb
clc
adc
mov
add
mov
sub
mov
add
jo
mov
int
dec
out
push
lds
adc
pop
adc
paddw
jns
or
icebp
addr16
sbb
xchg
lea
test
sub
pop
inc
pop
out
lcall
add
xchg
pop
test
shlb
clc
adc
hlt
les
shr
pop
out
sub
aam
jae
or
and
sub
cmc
dec
mov
adcl
ljmp
xor
insl
lods
pop
jo
xorb
es
loopne
mov
add
pop
mov
inc
cltd
fcomip
mov
jge
rorl
sub
sti
cli
dec
xchg
ror
cs
lret
xchg
ror
adc
scas
inc
out
test
daa
mov
test
shrl
cmp
push
stos
mov
hlt
pop
repnz
cwtl
mov
subl
aaa
xchg
fcompl
jae
cmp
mov
pop
pop
stos
fidivrs
rol
out
xchg
cmp
adc
leave
sbb
fldt
fmulp
subl
mov
and
movsb
push
mov
pusha
pop
rcrl
int
xchg
es
and
xor
cmp
clc
rclb
lds
mov
jl
xor
jmp
insb
add
or
xchg
push
fnstenv
pop
loop
adc
sbb
mov
mov
jge
iret
into
in
ds
and
adcl
aad
cwtl
filds
add
clc
loopne
mov
pop
dec
das
js
jp
mov
xor
imul
push
orl
xor
xlat
mov
fadd
pop
sbb
cwtl
sub
inc
add
test
adc
in
sbb
push
pushf
outsl
push
rorl
lret
inc
inc
ret
and
loope
adc
and
pop
and
sub
test
mov
pop
out
rcl
sbb
lods
push
pop
adc
test
jb
imul
pop
cwtl
xchg
mov
aam
push
cmp
subl
stos
out
jge
cs
xchg
ret
cmp
jae
data16
jle
cmp
and
xor
push
cmp
or
shll
test
mov
dec
xor
xchg
ffreep
cmp
in
pop
test
xor
xchg
mov
mov
xchg
xchg
xchg
dec
test
pop
std
fidivl
cmp
cmp
cmp
pop
cmp
mov
mov
adc
push
stc
mov
add
test
mov
loopne
in
lods
add
add
cwtl
mov
lcall
xchg
mov
inc
adc
pop
lret
cwtl
sub
rcrb
nop
push
stos
bound
mov
in
in
call
mov
cmp
fs
sub
cli
flds
scas
add
pop
fcmove
dec
ret
jo
ljmp
push
call
dec
cld
adc
or
test
clc
test
xor
jmp
pop
add
cld
or
cmpsl
cwtl
xor
jae
pop
in
and
daa
clc
pop
pop
lahf
rol
add
sub
pop
aas
lds
movsl
movsl
inc
iret
or
and
leave
js
in
xor
or
inc
push
enter
sbb
mov
pop
shr
int
dec
dec
ficomps
push
call
icebp
enter
je
fimull
mov
push
xlat
test
pop
in
popa
dec
inc
pop
sbb
mov
mov
les
xchg
mov
push
sarb
pop
dec
pop
out
push
aaa
je
iret
clc
je
add
sub
cmp
mov
les
push
fwait
push
inc
incb
filds
mov
adc
ror
inc
xchg
scas
lods
xor
outsl
pop
add
lods
mov
lret
pop
pushl
inc
cmp
fiaddl
loope
aaa
test
leave
mov
cld
std
xor
ss
rol
repz
es
lods
std
push
rorl
mov
xor
or
add
pusha
adc
xor
mov
lret
mov
movsb
dec
fwait
imul
loop
insb
fisubrs
cmp
in
popf
add
scas
stos
out
pop
jnp
pop
fimuls
pop
xchg
pop
xchg
push
pop
shl
stos
adc
jl
mov
cmpsb
and
or
testl
arpl
ficoml
sub
pop
xor
mov
or
mov
fst
mov
cld
rcr
addr16
imul
cld
stos
mov
xor
sbb
adc
clc
and
loopne
jp
fwait
mov
xchg
jp
frstor
jae
lret
flds
sti
jne
fdivrs
cli
cmc
pop
iret
mov
lock
xchg
lcall
mov
loop
xchg
pop
mov
push
pop
lahf
inc
dec
fmuls
xchg
or
out
adc
arpl
lcall
jmp
mov
test
sub
mov
pushf
mov
ret
in
addr16
scas
sahf
fwait
push
push
imul
ljmp
dec
pop
sbb
and
mov
nop
addr16
je
dec
jno
fucomip
mov
xchg
adc
lcall
pusha
mov
enter
movl
jb
inc
push
clc
or
inc
shl
push
int
repnz
push
test
or
mov
jl
js
lds
push
std
stos
insl
mov
mov
call
data16
das
insb
scas
lods
push
cmc
lds
fbstp
and
pop
mov
add
inc
jae
fsubrs
pop
test
addb
daa
push
cmc
movsb
jecxz
cmc
adcl
lea
jp
sub
andl
sbb
inc
mov
xor
ds
inc
push
aad
bound
jle
push
jg
mov
xchg
push
cmp
cmpsl
fidivs
int3
insl
mov
not
mov
pop
pop
push
sub
jnp
xchg
xchg
sbbl
cmpsb
out
mov
int
loope
pop
loope
out
test
stos
test
mov
lods
in
jp
and
jae
jg
dec
add
or
mov
enter
dec
sub
insb
sbb
dec
test
lea
scas
fldenv
lea
jle
sub
cld
test
dec
hlt
inc
push
adc
mov
pusha
in
fidivl
jae
in
mov
testl
les
out
call
xor
jbe
loope
sbb
mov
inc
sbb
dec
push
enter
call
loopne
imul
bound
mov
fdivrs
rolb
fdivs
mov
imulb
push
dec
shrw
call
or
push
mov
and
pop
jmp
nop
add
push
jl
loopne
push
pop
dec
lock
jae
pop
lock
loop
pop
popa
dec
jb
jnp
add
jns
fcomp
adc
jo
test
jbe
dec
jmp
jp
movsl
cmp
hlt
or
shrb
rorb
sahf
out
add
xor
insl
sub
std
test
ficompl
das
mov
xor
sar
inc
popa
inc
mov
jo
andb
or
mul
sarl
and
cld
les
lock
fucomi
push
out
orb
das
sbb
adc
sbb
sbb
cmc
ret
or
mov
jg
and
inc
cmp
or
lds
scas
mov
inc
out
cmp
mov
lods
in
test
mov
pop
push
or
dec
ficoms
and
icebp
mov
in
pop
scas
mov
jl
add
std
pop
dec
cli
sbb
leave
and
cwtl
pop
rorl
jo
inc
aaa
or
test
je
or
inc
xor
and
push
push
vcmpps
mov
je
stos
jns
mov
fcoms
stc
addr16
sub
jle
add
cmp
add
loop
cs
cmp
fsubrs
mov
jg
dec
cmp
xor
je
push
push
rcrb
int
outsl
scas
repnz
aad
hlt
and
or
daa
loope
loop
std
aad
add
ds
shlb
jp
test
xchg
sbb
repz
mov
sbb
pop
jb
dec
js
mov
call
in
loopne
mov
adc
int3
mov
inc
inc
punpckldq
mov
incb
icebp
sahf
icebp
or
sub
add
xchg
cmpsb
jbe
pop
es
stos
pop
icebp
lods
stos
mov
fildll
pusha
dec
xor
mov
je
loop
inc
xchg
dec
sub
push
sbb
data16
mov
xor
les
lret
ss
ds
ret
int
xchg
mov
sbb
sub
push
push
jbe
imul
sbb
cltd
mov
and
adcb
or
dec
inc
rclb
iret
insl
gs
popf
nop
jmp
es
cs
iret
and
or
mov
xor
pop
shll
mov
mov
push
dec
xor
mov
mov
sbb
das
jno
loop
jecxz
pop
mov
sti
pop
push
insb
sub
inc
repnz
mov
cmp
and
movsb
xor
inc
adc
jmp
std
cmpsl
mov
jnp
fsubp
sbb
pop
cmc
rorb
mov
and
dec
std
add
pop
int
test
pop
aaa
adc
xor
rcrl
mov
pop
int
inc
and
movsl
ljmp
adc
scas
or
adc
xor
lods
outsb
rcrl
sahf
test
cltd
or
std
jecxz
mov
imul
mov
fwait
xchg
cmp
sar
mov
inc
mov
ficoml
sbb
xor
mov
lea
xor
push
add
shrb
jl,pn
stos
xor
test
cmp
add
push
push
sahf
pop
push
pop
loope
cld
addr16
stc
cmpsb
add
sbb
mov
push
aad
mov
mov
loop
lock
sbb
call
xor
andb
mov
scas
cli
mov
mov
es
adc
mov
lahf
das
incl
push
add
mov
fwait
push
scas
push
pop
mov
shrb
push
xchg
sbb
mov
jle
mov
and
in
add
nop
aam
inc
or
jle
into
sbb
cmpsb
mov
or
xor
inc
sbb
mov
adc
rcll
mov
inc
cli
pusha
loop
xor
mov
cwtl
std
les
fildll
adc
fcoms
int3
imul
mov
push
movsb
aad
add
mov
fdivs
sbb
sqrtps
loopne
nop
ljmp
jns
loop
sbb
inc
dec
dec
loopne
inc
rcll
or
xchg
outsb
xor
dec
adc
movsl
ret
xor
ljmp
movsb
ret
jg
xor
or
xor
in
stos
cmp
rcrb
fadds
jae
mov
pop
adc
mov
test
sbb
or
push
sbb
push
xchg
pop
test
inc
or
sbb
add
pop
xor
and
and
shrb
repnz
add
xor
pop
cmp
inc
insl
cmp
push
mov
xlat
loopne
and
sub
cld
test
push
sbb
xchg
xor
rol
addl
mov
sbb
jge
sub
sub
jl
sti
fldenv
mov
push
pop
xchg
jecxz
mov
adc
mov
addb
mov
cmpsb
test
ret
int
dec
jmp
shll
fdivl
push
jne
adc
push
and
cmc
sbb
scas
add
daa
sub
jmp
cmpsb
loopne
clc
push
repz
mov
dec
mov
cmp
shrb
test
fildl
int3
daa
std
add
mov
add
sbbb
ds
out
js
cld
add
or
xchg
add
rcrb
xor
hlt
mov
or
add
dec
mov
in
icebp
call
xor
fcmovnb
jmp
sub
lods
adc
cli
pop
inc
and
xor
shll
inc
fstp
inc
popf
mov
clc
mov
xchg
push
push
pop
mov
pop
pushl
pop
in
jg
inc
sbb
lret
jo
push
rolb
roll
pop
js
dec
stos
ror
test
hlt
add
add
pop
clc
push
in
mov
cmp
loop
add
pusha
adc
orl
inc
push
dec
nop
mov
cld
cs
imull
aaa
mov
loop
jl
enter
mov
add
stos
mov
sbbb
push
cmp
sub
out
inc
and
nop
pusha
outsb
aad
icebp
loopne,pn
mov
rorb
sub
xchg
mov
mov
jecxz
add
push
push
jle
fcmovnbe
sbb
jnp
or
push
insb
xchg
jge
push
cmp
push
sub
scas
mov
adc
repnz
jp
sub
rcrb
roll
in
addr16
jo
out
shrl
jbe
ljmp
mov
and
inc
loopne
jnp
push
mov
mov
push
pop
pop
test
testb
adc
or
movsb
imul
sahf
add
outsl
lock
cmp
jl
sbb
or
mov
ja
push
fcoms
add
mov
mov
xchg
add
cwtl
pop
insl
repz
fwait
jmp
sub
mov
xchg
lods
pop
repnz
mov
aam
pushf
aad
xor
cmp
jp
xor
test
pop
cmpsl
ret
or
es
push
cmp
inc
jb
add
aam
pop
movsl
das
mov
dec
push
movsl
cmc
mov
outsb
mov
mov
jmp
adc
dec
xor
pop
push
aad
jb
and
mov
mov
out
ljmp
mov
mov
mov
add
mov
js
bound
xchg
adc
jle
out
adc
push
adc
jno
inc
jle
loope
push
cli
pop
gs
lahf
cld
lods
push
fisubl
push
ret
icebp
add
iret
xor
jle
mov
or
add
lods
notb
jne
xchg
lcall
mov
or
sub
push
pop
out
add
cmp
or
and
dec
stos
sbbl
scas
dec
jns
and
mov
sub
mov
dec
fnstsw
jns
dec
movsb
mov
test
icebp
inc
pop
cmc
push
add
shll
xchg
in
daa
movsb
addb
clc
femms
dec
loopne
pushf
gs
mov
mov
mov
test
add
loope
sbb
mov
push
mov
fucomp
aam
mov
add
lds
jno
insl
pop
scas
xchg
rclb
mov
or
call
movsl
mov
push
pushf
mov
clc
push
pop
sub
pushf
and
adc
shll
jg
jo
imul
xchg
mov
add
sub
mov
rorb
mov
mov
mov
or
cltd
jns
xchg
cmp
jo
roll
mov
adc
jg
push
add
leave
popl
loopne
test
call
push
xor
sub
movsb
sbb
jns
xchg
adc
add
xlat
dec
das
cmc
popa
mov
jnp
pop
inc
in
sub
loope
lock
outsb
sbb
lcall
jbe
inc
std
and
test
gs
sub
jo
add
mov
in
add
inc
xor
pop
jge
in
push
mov
xchg
sub
jecxz
out
sub
cmp
scas
mov
in
fdivs
or
xor
or
imul
leave
sub
mov
mov
sbb
add
negb
lock
xchg
or
push
je
pop
push
notb
xor
inc
adc
in
mov
pusha
aam
pop
mov
xchg
or
fidivs
sub
inc
inc
imul
test
sti
out
and
es
rclb
divb
fisubrl
pop
adc
shl
or
or
imul
mov
push
jae
fs
inc
pop
dec
or
and
mov
fimull
lods
pushf
jl
ss
dec
mov
push
mov
xor
aas
push
inc
sub
das
je
sarl
je
jbe
inc
daa
sbb
addl
and
lds
subl
mov
jge
jmp
mov
cmp
push
in
aaa
clc
jle
pushf
stos
std
mov
adc
push
jmp
inc
adc
sub
mov
clc
jb
cmpsl
add
es
ljmp
daa
mov
stos
mov
clc
outsb
popf
pop
sub
add
mov
add
adc
add
push
xor
addr16
or
hlt
xor
cli
dec
lcall
jle
pushf
jnp
mov
jb
cmp
inc
in
je
and
pop
nop
mov
add
push
fmuls
stos
mov
js
sbb
nop
mov
push
adcb
push
loopne
fs
pop
je
jp
shlb
push
push
dec
and
push
dec
outsl
fists
pop
popf
bound
mov
js
test
jmp
ror
push
dec
jmp
mov
push
inc
repz
jno
loop
adc
xor
push
xor
sbb
aas
outsb
pop
je
add
and
mov
and
stos
lea
inc
xchg
jecxz
cld
xchg
gs
and
pop
out
pop
lret
orb
das
sbb
or
repz
aas
jb
popf
or
inc
jl
xchg
xchg
rcll
adc
or
mov
jo
mov
imul
xor
fimull
dec
jecxz
pop
mov
add
add
ret
mov
adc
mov
xchg
inc
sbb
mov
and
push
jno
xor
adcl
inc
pop
subl
push
or
xor
mov
cmpsb
adc
push
add
sbbb
ljmp
in
push
mov
ss
jge
outsl
add
push
sub
rcrb
mov
dec
mov
and
les
js
das
cmp
testb
add
dec
xor
push
filds
push
dec
push
push
mov
lcall
pop
sarb
addr16
cmc
dec
sbb
lods
cmc
dec
dec
loopne
sub
loopne
and
and
sub
add
icebp
mov
fisttpl
inc
adc
pop
clc
mov
int
addr16
mov
mov
nop
xor
inc
in
adc
inc
push
shufps
ret
aas
pop
pop
sbb
fwait
cmp
stos
ljmp
jp
lahf
test
lret
add
movsb
adc
aaa
sub
push
xor
cmpsb
or
mov
ud0
ret
ret
xor
loopne
mov
mov
sbb
scas
lcall
add
gs
add
arpl
pop
adc
pushf
xorb
add
adcb
int
push
adc
or
imul
mov
lahf
sub
out
push
fidivrs
fadds
stos
xchg
das
mov
inc
enter
mov
add
and
out
or
fmulp
das
jmp
popl
jne
dec
outsb
push
mov
cmp
cmp
adc
frstor
cmp
adc
dec
int
add
nop
jbe
jo
cli
dec
fisubrs
mov
pop
std
xor
mov
pushf
and
and
dec
push
cmp
add
scas
cwtl
sbb
outsl
outsb
outsl
roll
cmp
fs
sub
pop
mov
seta
add
mov
cmpsl
or
push
xor
sbb
out
mov
aaa
add
fists
pop
bound
stos
inc
loopne
cmp
jbe
add
in
sbb
ret
mov
cld
xchg
push
and
and
andb
inc
lds
adc
xor
xchg
pushf
test
cld
adc
ret
dec
mov
ret
mov
and
std
mov
popf
loopne
dec
cmp
fwait
loopne
bsf
jle
cs
pop
iret
clc
sbb
fdiv
adc
stos
shll
lock
js
xlat
test
iret
inc
sbb
shll
inc
xor
je
jge
stos
pop
fidivs
xor
xchg
ret
add
test
cmc
mov
or
add
push
hlt
or
insb
out
mov
imul
jecxz
xor
out
rorl
push
pop
dec
clc
shll
nop
repnz
xchg
mov
mov
push
fs
adc
test
xor
pushf
push
jnp
xor
xor
rcll
sbb
adc
out
scas
pop
test
test
pop
pop
mov
inc
into
jb
xor
and
pusha
jl
fcomps
pop
pop
mov
jp
pop
push
inc
mov
mov
jle
cmp
mov
cmc
and
fistl
scas
mov
jbe
add
leave
mov
dec
mov
or
imul
aad
adc
mov
fsubl
inc
ret
xor
fsubl
jnp
cltd
adc
mov
push
imul
dec
jmp
inc
mov
xchg
stos
inc
push
outsb
daa
inc
cs
mov
pop
add
pop
mov
xchg
loope
aas
add
jp
xor
cmpsl
pop
cld
inc
or
testb
or
movsb
mov
fcmovnb
push
push
ja
clc
jecxz
xchg
adc
xchg
mov
jo
fldt
xlat
or
push
or
cld
and
aam
mov
and
loopne
lods
std
aad
popf
imul
lahf
js
fwait
int
cmpsb
cmp
bound
sub
testb
mov
bound
sarb
test
sub
or
incb
mov
dec
mov
mov
fxch
sub
insl
shlb
xchg
js
scas
ret
cmpsb
or
je
arpl
xchg
sub
lahf
inc
inc
rclb
cmp
adc
inc
pop
xchg
ficoms
adc
pop
loop
push
rcll
aaa
lds
leave
fidivl
inc
clc
dec
ret
xchg
add
lock
jo
dec
and
and
jb
repnz
insl
sbb
xchg
cmpsb
ljmp
jle
jbe
mov
aaa
pop
cmp
pop
insl
or
fucomi
test
jge
cmpl
xor
imul
add
pop
jo
pop
pop
xchg
clc
je
scas
fiaddl
sbb
and
arpl
xchg
inc
mov
pop
roll
outsb
mov
push
and
sbb
icebp
inc
les
lcall
paddw
adc
aaa
movsb
clc
ja
sti
or
inc
rcrb
ret
jo
lahf
add
pushf
das
dec
aam
mov
cli
sbb
loop
jmp
es
or
sbb
pop
add
push
mov
fiaddl
dec
add
push
mov
lret
jp
rol
pop
push
and
mov
inc
mov
mov
pop
add
popf
adc
ret
xchg
loopne
mov
ja
sub
pop
push
push
clc
push
iret
mov
mov
push
mov
outsb
ds
mov
pop
incl
arpl
pop
push
aas
inc
cmc
add
add
xchg
adc
push
jg
aas
mov
jnp
jo
int3
xchg
dec
add
adc
ficoms
cmp
arpl
add
jmp
ret
lock
xlat
test
outsl
dec
scas
xor
xchg
dec
jo
mov
inc
sbb
inc
inc
call
movsl
adc
xor
and
xchg
fwait
outsb
sti
inc
gs
jmp
cmpsl
sbb
fsubrs
popf
dec
pop
pop
mov
sbb
fildll
hlt
repnz
psrad
mov
lock
cmp
jmp
stos
repnz
popa
or
fisttps
outsl
push
push
inc
xchg
mov
pop
cld
inc
dec
xchg
in
xor
jecxz
arpl
xchg
rorb
add
fsubs
ret
inc
test
jno
aas
es
inc
ret
lods
push
test
mov
shlb
inc
ljmp
xorb
idivl
sub
mov
movsbl
ret
out
push
cmp
sbb
mov
mov
call
decl
jecxz
test
popf
push
mov
xor
cmp
mov
jg
adc
aaa
in
mov
inc
jge
add
push
pop
dec
and
jmp
cmp
loope
pusha
rcl
in
adc
pusha
lock
movsb
into
aad
push
rcrl
testl
xor
push
mov
inc
lcall
cmp
jecxz
ret
icebp
jae
inc
loop
adc
dec
sahf
push
shl
shl
loope
dec
xchg
notb
adc
fbstp
mov
jmp
add
jg
mov
or
inc
cltd
xor
mov
fnstsw
or
aas
mov
push
and
icebp
and
cs
dec
inc
clc
js
cmp
lret
aas
loopne
cmp
rcrl
push
pop
jle
jne
cmp
inc
adc
mov
cmp
decb
dec
dec
xor
push
adc
lock
rorl
pop
sbb
jo
xlat
add
push
xchg
addb
inc
sub
leave
jecxz
pusha
push
lods
cmpsl
xor
push
cld
outsl
sarb
das
js
adc
mov
pop
test
outsb
or
cld
jns
loop
mov
sahf
xor
imul
in
jbe
mov
idivb
mov
es
inc
pushf
pop
push
dec
jmp
dec
dec
dec
xor
xlat
cltd
pushf
call
in
push
inc
sbb
rcrb
mov
icebp
dec
and
loop
push
lahf
std
ljmp
sub
xorl
cltd
fcomip
xchg
call
mov
push
in
gs
push
aas
cmp
cli
add
fs
xor
push
push
add
sub
roll
push
push
and
mov
sbbl
push
add
xor
imul
ret
mov
dec
or
sbb
stc
ss
cwtl
and
jo
xor
inc
dec
int3
in
add
aaa
cmc
int3
jo
hlt
mov
sbb
push
aam
mov
dec
shr
imul
repnz
js
push
fisubrl
aam
cwtl
sbb
imul
xchg
cmp
popa
test
test
mov
push
fistpll
fisttps
mov
out
insb
aam
inc
outsb
add
jbe
sbb
mov
mov
cmp
add
push
loop
iret
loopne
lea
fiaddl
shrb
push
mov
ja
adcl
xchg
movsl
jbe
inc
adc
pop
popf
pop
add
lods
es
push
cmp
jnp
xchg
jnp
lahf
push
dec
stc
leave
call
lds
push
lcall
xchg
andb
xor
bound
in
dec
fstpl
je
fdivs
pop
jg
es
popl
jb
scas
fwait
lret
push
pop
xchg
pop
mov
cld
jp
fchs
push
mov
mov
js
mov
push
mov
jo
leave
test
fldcw
and
bound
cmp
sub
inc
xorb
dec
cmpsl
arpl
mov
xchg
js
xor
aad
outsb
imul
and
xchg
jecxz
fisttpll
lahf
scas
fstl
pop
add
movsl
movsl
shl
pop
rolb
inc
aas
add
pop
jbe
jg
ds
stc
test
loop
jae
xchg
xlat
lret
insb
add
scas
add
pop
cmp
adcl
mov
push
das
xchg
xor
sub
jae
cltd
push
js
pop
sub
push
aas
add
cmp
mov
hlt
dec
jmp
lea
ret
cmp
test
push
popl
out
inc
dec
test
pop
jp
adc
mov
js
fwait
loopne
lahf
adc
xchg
stc
sahf
jl
mov
or
divb
lret
icebp
push
mov
push
and
cmpsl
xor
lock
jmp
leave
decl
push
scas
push
imul
xchg
inc
and
test
filds
add
popf
xor
scas
call
adc
mov
adc
in
scas
cld
add
ret
cmpl
icebp
mov
mov
stos
scas
lcall
out
std
fwait
sti
pop
xor
add
into
pop
inc
ds
out
or
pop
out
cmp
pop
and
inc
sbb
xor
sbb
pop
enter
leave
aam
dec
clc
mov
sbb
rolb
test
in
xchg
pop
cltd
movsb
jno
test
adc
mov
sbb
mov
ss
cmpsb
sub
outsl
arpl
andb
aad
rorl
lea
jno
add
or
mov
jne
mov
js
mov
pop
or
sarb
int
mov
es
idivl
insl
mov
mov
sub
ficompl
fisttpl
es
hlt
out
jl
sbb
xor
pop
mov
cwtl
jmp
imul
orl
in
add
cwtl
cmp
inc
xchg
ret
int
hlt
insl
lds
xchg
ja
mov
and
leave
push
xchg
imul
inc
je
inc
pushf
and
sub
xchg
cmpsl
mov
mov
sbb
shl
xor
push
mov
dec
jbe
or
push
addr16
add
sub
outsl
rolb
xchg
arpl
cmpsb
addl
xor
shr
popl
movsl
jne
or
bnd
aas
gs
pop
inc
mov
jnp
mov
outsb
xor
mov
fwait
pop
je
fisubrs
or
push
adc
addr16
scas
xchg
cld
bound
push
mov
or
push
vmwrite
cmp
sbb
fbld
or
out
xchg
xor
jb
das
mov
add
mov
test
dec
fcoml
jne
repnz
inc
enter
push
or
mov
sbbb
into
loope,pt
push
mov
movsl
xor
iret
or
mov
dec
pop
gs
loop
sbb
adc
and
out
push
xchg
sahf
or
cmpb
rcl
fcoml
mov
into
mov
push
lock
cwtl
mov
hlt
stos
fnstenv
push
xor
stos
mov
jmp
jl
shrb
arpl
sub
inc
pusha
orb
outsb
jmp
imul
xor
push
int
mov
dec
or
lahf
out
xchg
daa
cwtl
or
scas
movsl
jb
imul
stos
ljmp
adc
jp
lret
pop
mov
mov
in
aaa
and
sub
cmp
ss
inc
lea
inc
stc
add
leave
xlat
lock
lods
inc
push
or
daa
push
xor
lods
sbb
jns
nop
xlat
or
jno
pop
mov
js
sub
jp
cmc
lods
daa
ss
adc
mov
in
fimuls
push
mov
or
jo
cmpsl
sbb
test
mov
xor
jb
loopne
out
mov
push
aaa
cmp
sub
inc
cmp
test
sbb
and
shlb
adc
pop
popa
jo
fsubrs
int
add
mov
inc
add
xor
cltd
faddl
hlt
push
loop
aaa
insl
pop
mov
lss
insl
hlt
mov
lea
cmc
inc
clc
dec
ljmp
sti
out
mov
in
js
pusha
notb
test
sub
and
mov
nop
lods
loop
add
xor
aas
mov
mov
mov
lret
xor
adc
into
shrb
mov
cmpsl
dec
and
orl
cli
leave
shrl
pusha
and
shrb
cmc
push
loopne
push
scas
sahf
adc
adc
test
mov
test
je
add
sub
jmp
outsb
popf
sub
lock
xchg
push
jp
mov
xor
lds
popa
fcmovu
dec
xchg
loopne
fsubrs
rcrb
pop
jge
lret
scas
xchg
inc
cli
sbb
ror
in
lea
jmp
cmpsl
insb
addr16
rcrb
pop
leave
adc
push
adc
sub
xchg
add
aas
out
nop
adc
dec
push
adc
fnstcw
push
inc
mov
or
pop
push
add
inc
repz
leave
outsl
add
or
std
add
ret
push
hlt
mov
cs
pop
lods
popa
dec
fidivl
loope
sti
lret
test
sti
stos
jne
cmpsl
xchg
loopne
les
out
rcll
mov
dec
fcoms
test
and
adc
pushf
sub
pop
jp
cmp
xchg
sbb
lret
mov
and
lods
popf
hlt
jbe
sbb
shrl
das
lock
cmpw
test
dec
pushf
cwtl
jp
icebp
bound
dec
pshufw
inc
popf
lahf
pop
xor
sub
adc
xor
sub
push
pusha
test
paddsw
dec
daa
mov
inc
clc
les
mov
lahf
lods
cmp
insl
sbbl
push
push
mov
fcoms
dec
out
dec
cmp
and
sub
out
pushf
xchg
push
jl
or
mov
sub
jae
sub
mov
dec
dec
xor
sub
rcl
stc
call
test
loope
pop
cwtl
lds
aam
cli
adc
test
ret
insl
sbb
xor
or
mov
rcll
xchg
rorb
outsb
inc
sti
stos
add
mov
loopne
ljmp
jb
adc
mov
inc
jp
lock
inc
push
je
pop
fmuls
adc
and
mov
xchg
jae
sbb
call
mov
push
lods
mov
movsbl
push
adcb
jl
push
fbstp
xor
ret
add
repnz
sub
add
or
sbb
sarl
xchg
lahf
ss
mov
lahf
pop
insl
push
loope
xchg
add
add
gs
pop
flds
mov
lea
mov
and
movsb
imul
aaa
push
aas
jle
mov
repz
jne
xchg
jne
arpl
call
push
cwtl
add
mov
mov
stc
pop
sbbb
inc
push
mov
pusha
mov
dec
inc
adc
jp
jne
data16
push
daa
xlat
loopne
add
xor
xrelease
adc
fistpll
dec
movsb
cmp
fisubl
push
or
out
adc
dec
push
dec
sub
filds
push
aam
call
clc
cmp
jle
out
cmpsb
and
jne
clc
add
arpl
dec
and
fldenv
adcb
sbb
dec
lahf
stos
scas
push
imul
pop
xor
xchg
mov
loope
mov
jno
ja
pop
mov
test
push
adc
mov
sbb
cmp
mov
pop
fdivrp
aas
xchg
aad
add
in
sbb
inc
shr
xchg
rcrb
dec
and
cmpsb
xchg
adc
adc
test
lahf
or
mov
push
push
lahf
fists
iret
pop
loopne
addb
sbb
cli
adc
sub
pop
mov
and
cltd
lcall
lcall
fxch
rep
shll
mov
xor
mov
imul
iret
int3
fistps
icebp
sbb
push
test
and
test
scas
xor
arpl
mov
in
mov
mov
test
and
adcl
push
cmp
fdivs
sub
std
mull
mov
stos
inc
arpl
add
pop
repnz
jge
push
push
sub
div
add
and
jo
mov
clc
xor
cmp
ret
repz
push
xchg
jno
add
mov
jno
aaa
and
sbb
xchg
mov
sbb
fadds
lock
stos
add
pop
xor
in
ret
leave
mov
adc
cmp
jne
dec
xchg
jmp
test
cmc
sahf
push
sarl
push
push
cmp
inc
dec
or
sub
add
loopne
jo
jg
dec
pop
cmp
fnstenv
push
lds
pop
lea
inc
decl
movsl
cmp
cmp
in
stos
add
add
popf
fnstenv
sub
data16
cmpsl
adc
adc
dec
pop
push
push
ret
das
inc
fwait
xchg
fimull
stc
out
pop
aad
or
loopne
jecxz
loop
xchg
inc
nop
lods
inc
out
orb
sbb
adc
imul
xor
lret
into
nop
repz
inc
int3
outsl
lock
mov
test
xor
shl
or
mov
push
inc
sarb
mov
ljmp
mov
pop
js
cs
out
cmpsl
mov
pop
les
std
dec
push
test
lock
ror
sbb
dec
mov
inc
mov
or
mov
leave
lret
cwtl
popf
xor
sahf
push
and
clc
shl
sub
out
pop
je
jnp
mov
sbb
mov
sub
out
lahf
sbb
lods
out
faddl
test
ror
pop
ret
pop
jge
jg
pop
xorl
mov
jno
and
jp
sti
cmpl
pop
sub
shrb
sbb
adc
push
fbstp
and
pop
dec
lret
in
sahf
adc
loopne
scas
add
sub
jp
pop
fldt
sbbl
gs
mov
clc
shlb
adcl
arpl
jge
std
cmp
add
insb
mov
jecxz
ljmp
inc
add
mov
mov
bound
jmp
or
fidivl
sbb
xchg
loopne
mov
sbb
stos
iret
jb
popa
movb
lock
inc
inc
pop
ret
sti
ljmp
shrl
sbb
mov
dec
cmp
pop
dec
outsb
jnp
adcl
adc
cmpl
mov
scas
lcall
orb
pop
ljmp
addb
sub
push
aas
imul
popa
adc
fcoml
inc
adc
ret
fdivrs
stos
fld
dec
or
sub
loopne
hlt
adc
sbb
int3
inc
sahf
cmpsb
outsl
xchg
and
push
dec
ffree
mov
add
xor
nop
lods
jle
sbb
loope
push
cmpsl
or
mov
mov
arpl
pop
add
mov
mov
lcall
test
loopne
gs
scas
iret
mov
lcall
lods
popf
fiaddl
cli
je
es
sti
int3
loopne
lods
cs
icebp
jnp
cmp
inc
or
inc
repnz
mov
mov
dec
cmc
leave
push
je
scas
aas
sbb
cmp
ret
sub
nop
arpl
rcrb
addr16
xor
mov
and
push
loope
adc
mov
sbb
mov
sub
add
inc
push
cmp
insb
cmc
add
repz
ret
fldcw
xchg
mov
sbb
jns
sbb
lock
fisubl
cmp
leave
adc
iret
das
and
mov
paddd
ljmp
adc
inc
mov
imul
sbb
sbb
mov
testb
lock
ss
sbb
inc
adc
jmp
push
push
mov
push
roll
loope
pop
cmc
pop
push
add
test
lret
mov
stos
and
xchg
sbb
sub
imul
outsb
mov
daa
scas
aam
imul
mov
lret
test
stos
hlt
sbb
add
cmp
cmp
fimull
xor
fwait
ret
or
dec
rcrb
inc
test
sarb
cmpsb
add
sbb
jg
xchg
jp
scas
mov
sub
cmp
outsl
xchg
pop
repnz
cmp
push
inc
push
mov
int3
jmp
inc
pop
test
jecxz
outsb
aaa
loope
xor
std
adc
dec
adc
dec
hlt
stc
adc
xlat
cmp
out
and
cltd
sub
cwtl
mulb
mov
fmuls
aas
jo
adc
or
sbb
mov
leave
cwtl
out
pop
sbb
pop
push
fwait
push
in
push
cwtl
cmp
xchg
in
mov
mov
xchg
outsb
scas
inc
xor
sub
adc
sbb
ljmp
xlat
call
loop
call
dec
push
xchg
sbb
xchg
or
xlat
sub
sub
stc
pop
clc
hlt
xor
js
or
jb
iret
push
mov
ds
pop
push
pop
sub
int
aas
popf
lods
pop
push
sub
sahf
int3
or
dec
pop
jbe
scas
jl
jae
push
cli
inc
repz
push
mov
fwait
outsl
push
arpl
aas
jae
sub
repz
lcall
sarl
out
out
pop
loopne
aad
cld
test
sub
aam
cmpsl
mov
xchg
push
mov
dec
or
outsl
fcomps
pop
scas
jge
loop
lds
adc
mov
adc
or
incb
ss
add
jp
cs
or
jl
dec
pop
pusha
fwait
jnp
inc
fcmovb
inc
imul
jae
sbb
add
aam
aam
dec
aad
jne
mov
imul
stos
pop
mov
dec
push
pop
aaa
pusha
addl
xor
inc
mov
ljmp
jecxz
xchg
ljmp
int3
inc
push
lret
or
loopne
fidivrl
mov
and
inc
pop
movsb
lods
bound
add
dec
push
mov
sahf
fs
scas
inc
inc
fnstcw
sbb
dec
cmpsl
jle
inc
add
jae
loope
hlt
add
jno
jo
clc
movb
int3
cli
fstl
xchg
add
iret
jmp
mov
xor
push
or
aad
cmpsb
aad
jecxz
std
sbbb
and
fstps
and
pop
push
add
ret
shlb
mov
scas
daa
lcall
loope
push
test
xchg
jl
cld
pop
mov
cli
hlt
pop
mov
loop
ss
dec
push
movsl
sub
mov
adc
je
movl
das
movsl
popf
or
jle
mov
imul
ret
lock
fadds
testl
mov
pusha
xlat
jl
xchg
mov
xchg
xchg
add
mov
loopne
mov
hlt
jp
shlb
hlt
pop
jne
mov
mov
mov
or
lods
ficompl
in
push
shrb
outsb
jno
das
aam
daa
xchg
mov
arpl
mov
mov
push
or
jl
push
inc
loop
lods
pop
dec
jns
dec
jno
pusha
xor
out
mov
mov
pusha
mov
dec
or
sub
inc
rol
adc
mov
shlb
push
sahf
mov
out
pop
mov
cmp
lret
xchg
addr16
adcl
dec
adc
adc
ret
pop
sub
xor
pop
out
repz
cltd
iret
sub
dec
int
or
shll
testb
push
sbb
fstl
inc
sub
ffreep
ret
fdecstp
xchg
fildll
or
xchg
or
test
mov
adc
ss
addr16
stos
xor
jbe
adc
inc
ss
jns
xor
insb
jbe
clc
mov
popf
push
cwtl
test
xchg
cmp
test
push
mov
jmp
push
mov
push
dec
outsl
inc
mov
and
pop
rolb
loopne
int
in
fwait
add
scas
xchg
jbe
add
mov
and
mov
inc
or
ja
cmpl
out
shl
push
icebp
cmp
adc
test
iret
adc
and
push
push
inc
aam
jno
test
paddd
cmp
mov
and
lods
push
mov
push
add
fbstp
int3
enter
sti
dec
out
sbb
test
add
jp
sahf
push
jmp
movb
hlt
sub
rclb
mov
xchg
les
sub
js
lock
out
fdivs
push
add
or
adc
clc
aam
dec
out
dec
sbbb
jmp
call
and
les
das
dec
rclb
mov
lea
push
int
arpl
or
inc
adc
sbb
rcrl
mov
stc
adc
subb
fs
push
adc
pushl
lahf
ds
cwtl
loope
cmp
dec
mov
xchg
xchg
lods
mov
fnstsw
mov
sbb
cmpsb
add
stos
adc
mov
sahf
loop
xchg
add
add
sub
scas
js
icebp
mov
call
ds
push
loopne
xor
xchg
sub
xchg
dec
xchg
mov
aaa
mov
adc
mov
cld
xor
adc
add
call
ds
adc
sbb
sbb
add
pop
inc
inc
push
ljmp
mov
mov
repnz
mov
rorb
xchg
popa
cmc
incl
xchg
movsl
lods
adc
pop
popf
daa
ljmp
lock
add
aaa
adc
fsubrl
adc
cli
add
mov
movsb
pop
fadds
testb
push
xor
cmp
into
xchg
add
or
insb
ljmp
adc
push
es
out
mov
fsubs
push
fistpll
push
and
out
cmp
push
jmp
mov
or
sub
int3
movsl
and
or
sub
xchg
add
nop
jbe
sbb
incl
loop
movl
fcmovne
sub
pop
clc
xor
push
jno
leave
mov
mov
fnstsw
mov
jb
movsl
fisttps
mov
sub
pop
hlt
mov
mov
int3
in
filds
mov
jnp
out
into
add
loopne
inc
adc
inc
jl
sbb
adc
cmc
outsl
shlb
and
mov
loop
aas
jle
xor
push
xchg
aaa
and
pop
add
pop
hlt
mov
mov
ss
xchg
lcall
out
mov
add
mov
mov
ret
hlt
aam
cmp
fs
jmp
fists
jno
cld
xlat
xorl
icebp
xchg
les
jb
cmpl
sbb
jo
mov
jbe
fsts
push
lock
mov
pop
mov
repnz
and
setb
cmp
push
out
ret
js
in
jp
cld
adc
adc
pop
xor
inc
fadds
add
push
sahf
sbb
jmp
loope
push
fwait
sarb
mov
sub
loopne
push
test
xchg
sub
cli
xchg
repz
sbb
shl
fimull
or
cmpsb
xchg
insb
fbstp
iret
jg
lods
add
loopne
xchg
xorl
data16
pop
iret
mov
sub
adcb
or
in
cmp
mov
inc
aam
cld
clc
call
repnz
lret
xchg
push
cmp
lcall
dec
out
inc
dec
xor
cmp
std
loop
in
pop
loopne
adc
clc
pop
loopne
repnz
mov
cmp
out
add
cli
add
lock
push
fs
sbb
dec
sub
mov
pop
jo
inc
mov
shll
fisubl
cli
into
dec
push
pop
add
imul
repz
ds
jge
sbb
xorb
jecxz
cmc
push
push
sbb
aaa
cld
roll
xchg
mov
nop
pop
test
xor
mov
movzbl
and
cli
pop
sar
pop
sub
dec
mov
inc
pop
addr16
push
sbb
int
test
aam
pusha
mov
pop
mov
jo
add
scas
loop
xor
subps
jnp
jbe
cmp
or
mov
lcall
lcall
std
xchg
fs
dec
jge
lock
add
and
sbb
xchg
adc
and
xchg
hlt
sub
mov
hlt
pop
xchg
je
mov
les
call
aam
sbb
jno
cmpsl
stc
es
cmpsl
inc
jno
outsl
xor
std
push
mov
stc
xchg
clc
push
mov
fwait
lahf
dec
xchg
push
into
push
or
xchg
stc
push
lock
add
inc
sar
sbb
or
adc
out
ljmp
adc
sbbb
pop
fwait
clc
aam
ret
or
cmp
adc
jmp
ljmp
pop
mov
jb
mov
xor
clc
push
sbb
dec
lds
test
or
stc
dec
movl
and
pop
xchg
mov
cs
mov
xchg
js
loope
ficompl
loope
andb
jecxz
xchg
filds
add
jmp
movsb
adcl
inc
xchg
imul
xchg
dec
out
dec
int3
out
dec
repnz
cmc
push
bound
cmp
mov
push
xor
fstps
loopne
push
out
inc
dec
jne
loop
adc
jg
aaa
faddl
nop
or
sub
cmpsb
jp
leave
cmp
loopne
insl
sub
int3
or
push
and
inc
in
dec
pusha
cmp
jmp
pop
shr
push
mov
fcom
fs
xor
add
add
in
cmp
stos
and
ja
call
lret
hlt
stos
pusha
dec
cmc
add
testb
push
aas
out
push
dec
iret
mov
ret
pop
loop
push
mov
mov
push
cltd
xor
sbb
sbb
push
cmc
stc
fwait
pop
mov
fildll
cmp
outsl
push
cmp
aaa
inc
jne
add
xor
jne
in
iret
clc
pop
push
cmpsb
mov
mov
or
xor
loopne
mov
sbb
nop
in
sbb
test
mov
stos
jle
loopne
xchg
sub
xor
pop
cli
and
xchg
sarl
xchg
in
cmp
mov
or
std
das
inc
cld
outsl
inc
push
mul
lea
inc
adc
js
mov
ja
daa
jg
jl
sub
adc
inc
add
xchg
clc
insb
int3
lcall
push
shl
sbb
and
cmp
mov
xchg
or
scas
test
jo
in
ret
xchg
xchg
dec
mov
mov
xchg
rcrl
hlt
test
shlb
xor
aas
fs
xor
add
fs
sub
hlt
sub
add
cmp
flds
fsubl
roll
mov
mov
out
scas
imulb
pop
ss
test
jmp
insb
jo
mov
roll
inc
push
mov
aas
push
mov
cmp
sar
in
popf
add
mov
addb
icebp
lods
movsl
fidivrs
pushf
mov
or
mov
rolb
mov
adcb
outsb
not
sti
jl
daa
imul
pop
test
js
call
aas
add
outsb
ja
mov
pop
xchg
lea
js
or
or
dec
arpl
mov
inc
jo
call
xchg
mov
and
popa
mov
pop
cmp
jmp
pop
sbb
addr16
xor
andl
and
sti
call
cmp
adc
inc
inc
mov
cwtl
push
mov
or
int3
fidivl
jno
cs
pop
es
adcb
mov
sbb
pop
or
or
sti
ljmp
xchg
lock
inc
fmuls
inc
pop
mov
pushl
in
adc
mov
adc
xchg
jb
xchg
lods
iret
or
lahf
adc
dec
loop
mov
leave
aaa
js
insl
hlt
push
pop
ret
jmp
push
testb
pop
xor
enter
mov
fistps
push
mov
push
clc
jmp
jbe
movsl
pusha
addr16
pop
rcr
add
aaa
pop
or
push
jnp
add
repnz
fnstsw
int3
lret
rcrl
scas
out
xor
dec
repnz
xorb
xchg
fadds
call
aaa
ss
js
sbb
mov
movsl
fimuls
sub
sarb
adc
mov
mov
fwait
mov
fcomp
in
jno
insl
scas
outsl
sti
mov
sbb
insb
es
movl
xor
jns
push
ljmp
ljmp
movsl
mov
push
xorb
rcrb
loope
int
add
gs
cmp
add
xor
sahf
movb
imul
cli
cmp
fistpl
aad
dec
lds
stc
add
test
mov
or
push
xchg
jo
jp
dec
insb
pandn
sub
pop
push
mov
pop
bnd
cmpsb
nop
repnz
jno
add
pop
daa
insl
mov
lahf
decl
loope
mov
mov
inc
ds
sub
addr16
sbb
in
jnp
loop
sbb
mov
xlat
add
push
dec
imul
arpl
xorb
push
mov
dec
lock
aaa
rcrb
add
mov
stos
lock
sub
or
and
pop
imul
adc
gs
into
stos
jle
mov
sub
lahf
es
aad
icebp
dec
sarb
lahf
add
pushf
imul
cmp
or
mov
cwtl
loop
arpl
jno
cmp
pop
ja
fdivp
mov
je
subb
mov
mov
sbb
mov
addl
lds
andl
sub
je
sub
push
mov
xchg
cmc
loop
or
outsb
pop
lret
inc
jg
or
adc
mov
test
mov
or
mov
add
cmp
and
outsl
pop
jne
inc
nop
ret
cmc
cli
std
push
cmp
mov
mov
jo
xor
ss
loopne
cmpb
xchg
clc
int
popf
ja
cmp
xchg
cltd
rolb
xor
jbe
mov
mov
mov
loop
push
mov
and
sub
mov
cmp
push
sti
inc
je
data16
int3
loop
iret
sub
mov
xchg
push
mov
sbb
mov
mov
push
mov
add
scas
sahf
mov
ret
xorl
call
ds
mov
cld
or
adc
in
data16
faddl
out
cltd
pop
mov
movsb
pop
mov
jg
jno
imul
nop
inc
loopne
sbb
loopne
push
outsl
adc
mov
adc
outsb
sbb
sarb
dec
inc
jecxz
cli
mov
cmc
xor
shrb
cld
inc
mov
dec
gs
mov
fcoml
mov
lods
les
loopne
jl
jno
cmpl
pop
mov
mov
cmp
repz
add
push
push
and
out
jne
mov
dec
mov
jg
pushf
cmpsb
push
mov
pop
and
push
mov
lds
mov
xchg
clc
mov
ljmp
push
les
sahf
test
sbb
mov
in
mov
mov
mov
dec
out
adc
cmp
movsl
fimull
sub
sub
por
adc
daa
and
cmc
outsb
js
pushf
push
adc
or
xchg
jnp
xlat
test
repnz
movsb
mov
sub
mov
xor
add
movsb
sarl
std
das
loopne
jmp
inc
cmpb
int3
addr16
scas
decl
out
mov
push
inc
lret
jl
mov
push
xchg
jbe
dec
repnz
js
xchg
lcall
jp
das
sbb
aaa
clc
add
mov
or
ret
add
enter
jg
jp
sbb
lcall
xor
pop
sbb
lea
mov
xchg
cmp
add
xor
sub
add
xor
mov
pop
aas
mov
mov
pushf
push
stos
pop
out
arpl
gs
adc
rcll
hlt
fbstp
repnz
or
enter
inc
sahf
fsubr
mov
add
add
mov
add
sub
clc
mov
dec
daa
pop
shl
imul
mov
fildl
stc
addb
out
jg
mov
nop
data16
ss
mov
cmp
stos
in
pop
fstps
cmc
rcr
and
cmp
mov
push
in
and
es
insb
bound
lods
add
sbb
stos
shrl
cmc
ret
dec
aaa
pop
aas
mov
jle
and
outsb
add
out
dec
insb
mov
xor
inc
not
sbbb
icebp
pmulhw
mov
inc
jmp
cli
or
movsb
icebp
push
std
outsl
jae
add
insl
pop
push
shrb
jns
incl
in
sarb
jo
dec
jbe
sub
mov
mov
cmc
aaa
jo
aaa
push
sarb
sar
pop
ret
dec
cmc
inc
and
out
stos
cmpsl
cmc
outsl
or
test
js
jo
cmp
call
je
mov
imull
lret
and
lock
int
push
mov
dec
or
add
mov
cmp
push
jecxz
mov
xchg
or
repz
clc
adc
fs
mov
mov
ljmp
lods
jbe
inc
add
lret
cmpsl
pop
loope
xor
in
out
jle
nopl
adc
mov
or
or
sbb
stc
mull
aas
cld
add
adc
mov
test
inc
jl
sbb
std
sub
push
mov
xchg
pop
inc
xchg
test
cmc
out
imul
out
xlat
jge
and
mov
or
enter
add
lods
jo
add
shl
pop
hlt
mov
insb
mov
jne
stos
mov
mov
repnz
push
dec
xchg
repz
movsl
inc
ret
fs
or
fidivrs
pop
adc
cmpb
adc
fdiv
inc
jg
sbb
loope
pop
hlt
loope
add
shrl
xchg
sbb
divb
push
out
cmp
test
mov
rcrl
stos
ds
lock
hlt
push
pop
adc
test
rorl
hlt
outsl
mov
mov
or
mov
jle
pop
movsb
nop
or
lods
enter
mov
inc
fwait
sbb
pop
sbb
sbb
sub
test
das
adc
push
ds
scas
sbb
mov
inc
or
xor
iret
cmpsl
add
scas
into
lret
imul
in
sub
cwtl
add
ret
xchg
dec
clc
insb
and
push
stos
roll
mov
xor
sub
sbb
scas
insl
pop
dec
dec
dec
pop
ficoms
adc
mov
cmp
dec
insb
inc
adc
pop
rcrb
jg
mov
shll
push
orb
push
jmp
adc
daa
inc
orb
ja
sysexit
nop
incl
push
sub
rcll
mov
bswap
sbb
iret
sub
adc
push
je
mov
insb
mov
and
ljmp
and
xor
xchg
lock
enter
ret
cmp
sbb
mov
std
sub
jmp
and
xchg
mov
pop
dec
push
pop
adc
sbb
adc
shrb
arpl
mov
movsl
imulb
inc
and
xorb
out
test
andb
dec
or
out
fidivl
arpl
dec
sub
push
cmc
ja
lock
mov
cltd
push
push
xor
or
xor
and
aas
mov
mov
jae
jmp
pop
iret
dec
test
xchg
incb
xlat
test
adcl
push
bndstx
outsb
xor
out
or
sbbb
pop
mov
in
movsb
mov
insl
loope
shr
sahf
push
xchg
push
xor
lock
mov
ficompl
pop
cmp
jnp
icebp
xchg
xor
push
ret
scas
bound
lock
cmc
push
mov
das
js
testb
inc
test
rorl
jns
jmp
aas
cmp
lock
xchg
outsb
xchg
flds
push
ret
stc
xchg
push
cmp
jmp
mov
repz
push
ficompl
push
mov
movsb
mov
xchg
push
xchg
pop
sub
push
fcomps
inc
push
push
notb
push
mov
inc
xchg
cs
data16
cmpsl
xor
sub
and
roll
jg
cld
and
or
push
sub
cld
fistpl
arpl
idivl
out
push
lahf
outsl
in
jne
xlat
jmp
flds
jecxz
mov
mov
hlt
mov
push
xor
jg
in
push
adc
leave
sub
add
outsb
mov
pushw
cli
lret
fmul
shlb
fldl
rcll
ret
mov
aaa
and
pop
es
mov
xor
aas
sarb
mov
mov
loopne
push
loope
test
xor
push
jmp
xchg
fwait
mov
jnp
decl
test
pop
scas
popf
jae
xchg
lock
aaa
adc
lea
iret
sub
adc
addr16
push
aas
dec
sub
pop
mov
lock
lret
std
push
cmp
pop
pop
test
hlt
cmp
scas
hlt
pop
into
popa
aam
add
mov
clc
pusha
cltd
push
jae
push
hlt
pop
cmovl
and
in
mov
and
sub
inc
mov
jo
xchg
fsubrl
mov
loope
mov
mov
or
sbb
shlb
lods
pop
test
inc
call
mov
mov
scas
jo
inc
mov
insl
clc
or
inc
jecxz
xor
xor
dec
jle
insl
xchg
xor
shlb
adc
roll
stc
pusha
rorb
or
mov
pop
mov
xorb
icebp
cs
add
or
add
shll
aaa
cs
fldl
je
shrl
movsb
mov
and
js
pop
jb
dec
test
inc
outsb
inc
cli
lock
xor
in
dec
adc
rclb
cmp
scas
add
inc
mov
int3
test
jl
mov
scas
adc
push
lock
insl
mov
inc
js
fsubl
mov
or
outsb
sbb
ret
fwait
adc
shrb
mov
fiadds
popf
sarl
repz
and
and
fsubrs
ljmp
add
jno
pop
loopne
jl
sbb
sbb
jnp
out
lret
and
sbb
dec
push
ljmp
mov
adc
push
mov
xchg
sbbb
mov
lea
jecxz
mov
adc
leave
je
push
clc
sub
ljmp
mov
clc
dec
std
loopne
mov
lods
loope
sbb
dec
cmpsl
jp
sbb
int3
fbld
scas
jbe
in
jns
inc
in
aas
push
shll
ljmp
daa
or
outsl
or
popa
jecxz
adc
dec
push
pop
pop
or
movsl
push
or
daa
std
jg
pop
in
enter
push
loop
rclb
cmp
mov
xchg
xor
into
sub
jle
shlb
in
xor
mov
or
repnz
push
jno
inc
and
lods
stc
or
pusha
push
je
jno
push
xchg
push
pop
testb
dec
daa
mov
loopne
enter
push
out
enter
xor
cli
sub
lret
pop
mov
nop
js
push
lcall
pop
xor
adc
aam
mov
sub
add
ljmp
and
adcb
or
mov
mov
dec
xor
xchg
pop
shr
jb
push
fsubr
push
adcl
ffreep
push
out
xchg
and
xchg
mov
fsts
or
mov
leave
xor
pop
mov
lock
shll
sub
push
lock
lock
fidivrl
mov
jge
stos
lahf
or
shl
dec
adc
sbb
loop
out
or
test
icebp
test
adc
mov
add
or
loope
dec
es
jle
cmc
inc
or
cld
outsl
pop
mov
xor
pop
mov
push
jle
ss
adc
pop
test
pop
addr16
or
enter
aam
sbb
inc
add
clc
mov
out
loop
jb
sahf
test
jg
push
ret
and
scas
iret
inc
or
add
aas
xor
jmp
xor
mov
add
and
mull
mov
movb
fnstcw
pop
inc
das
test
popa
aaa
cmp
cmp
lock
imul
aad
xor
out
sub
or
cmp
and
dec
sbb
jmp
dec
maxps
iret
daa
in
test
adc
and
pmullw
or
std
sub
and
cwtl
and
psrad
inc
inc
and
jno
fildll
clc
push
push
push
rcrb
pop
adc
xor
aad
pop
sbb
or
sbb
cmpl
mov
mov
jmp
test
paddw
sub
inc
mov
fisttps
imul
mov
loop
mov
xchg
and
pop
or
jl
mov
enter
xchg
fldcw
fildll
roll
sub
sbb
jno
sbb
mov
sub
addb
push
or
lds
shlb
lods
fdivl
xchg
push
or
mov
insl
lea
jge
jmp
or
sbb
scas
push
adc
pop
adc
aaa
xchg
inc
nop
pop
std
out
or
inc
mov
xor
sbb
bndldx
mov
jg
cld
xor
test
pop
adc
das
outsl
or
xor
inc
sbb
push
sbb
adc
push
stc
mov
jg
pop
notl
lret
ror
pop
das
fs
pop
cmp
clc
add
lea
cld
loope
pop
cld
aas
xchg
insb
arpl
iret
xchg
daa
sbb
inc
push
icebp
dec
mov
cmp
and
adc
ljmp
sbb
mov
pop
ss
adc
leave
mov
cltd
add
in
jg
and
shl
mov
nop
loope
cwtl
jo
mov
or
xchg
popa
ds
pushf
ret
jg
aad
aaa
je
sbb
loope
sbb
pop
adc
pop
or
add
aaa
jmp
mov
xor
pushf
adc
cltd
clc
push
js
ret
addr16
mov
sub
cltd
pop
jo
cwtl
decl
icebp
sub
lods
fildll
shl
enter
std
xor
test
or
or
push
std
pop
outsl
mov
jnp
insb
mov
scas
pop
mov
daa
mov
pop
stc
sub
xchg
mov
mov
cmp
mov
lcall
pop
addl
repnz
rcrb
fmuls
pop
add
mov
dec
fiadds
mov
xchg
loop
gs
jo
loopne
loop
sbb
mov
add
cld
add
loope
pusha
add
xchg
in
hlt
xchg
inc
sub
adc
cmc
pop
jle
jno
dec
jno
push
ds
ljmp
data16
ljmp
add
insl
cld
cs
inc
mov
movsb
movsl
dec
cmpsb
aaa
push
mov
push
jno
or
decl
dec
xor
fildll
mov
je
cwtl
scas
pop
adc
mov
loopne
flds
iret
loop
push
in
neg
cs
mov
mov
scas
leavew
pop
pusha
stc
add
xchg
or
mov
push
andl
jmp
in
and
add
sar
xchg
pop
dec
lret
and
lods
or
fldpi
test
mov
andl
std
sahf
push
dec
push
into
aaa
jecxz
test
jns
add
fucomp
stos
pop
or
push
shlb
cld
outsl
test
and
adc
aaa
xor
sbb
mov
xchg
out
inc
pop
xchg
les
loop
push
cwtl
mov
inc
mov
sub
push
mov
push
pop
mov
dec
pushf
test
lcall
fdivl
fs
andb
xor
push
lcall
cld
add
mov
fnstsw
sarb
push
sbb
call
das
or
fcoms
inc
adc
sub
pop
push
mov
dec
push
push
in
scas
and
das
scas
data16
aad
ret
cmp
ja
push
jecxz
fsubs
add
or
push
ret
fistl
mov
fsubl
push
mov
and
pop
cltd
cli
aas
lea
xchg
jg
addr16
add
xor
xor
neg
push
adc
inc
loope
sub
sbbl
ret
inc
jg
sub
enter
fcomps
arpl
icebp
test
lret
cmp
cmpsl
or
pop
add
call
les
xchg
movsl
iret
fwait
add
test
or
or
lods
xor
clc
mov
test
adc
imul
mov
sbb
mov
adc
lods
jb
jl
mov
add
aad
mov
mov
pop
in
sbb
call
outsl
clc
adc
dec
add
push
dec
xchg
pop
add
add
imull
push
cmp
and
shrb
lods
ret
cmp
mov
aad
cs
mov
clc
rclb
inc
add
cld
ja
cs
imul
incl
mov
inc
sub
out
sbb
fmulp
cmp
xchg
cli
shll
inc
std
ljmp
add
stos
lods
add
add
mov
mov
lahf
pop
mov
movsl
sbb
pop
xor
aam
cwtl
ror
sti
scas
inc
add
push
cmp
dec
or
ljmp
jns
jle
loopne
and
pop
mov
adc
pop
xchg
add
dec
fs
xchg
cmc
pop
adc
in
inc
rclb
jo
dec
add
push
adc
dec
pop
fistps
mov
xchg
add
hlt
cmp
or
in
xor
xchg
and
fnstenv
push
mov
cmpsl
and
mov
and
dec
and
pop
int3
pop
xchg
ss
jne
jne
pop
andb
enter
in
jo
adc
int
lods
pop
cli
mov
mov
insl
lahf
pop
push
sbb
subb
test
les
cs
addr16
and
dec
fs
shlb
loopne
dec
mov
sub
mov
adc
je
into
aas
dec
test
push
outsl
push
push
rorb
mov
mov
fwait
mov
and
pop
sub
mov
inc
int3
rcr
ss
call
jecxz
pop
data16
push
dec
jge
sti
cmp
xchg
pop
sbb
cmpsb
xchg
push
xchg
loop
xor
mov
das
arpl
push
inc
enter
rcr
testb
xchg
jno
lock
mov
sbb
mov
ljmp
add
lock
je
mov
sbb
mov
orb
xor
adc
or
clc
push
and
test
shlb
cmc
sti
cmpl
add
inc
mov
mov
push
lods
stos
loopne
es
mov
leave
sub
outsl
adc
cmp
add
test
loop
aas
shl
int3
cmp
test
fadd
and
cmp
les
cs
pop
dec
lahf
incl
cmpsb
lcall
ret
les
scas
xchg
mov
dec
ret
jl
mov
test
lea
push
xor
add
dec
mov
pop
mov
cli
outsb
mov
or
dec
rcll
and
cmp
dec
loope
scas
cs
or
jb
or
dec
fstl
sbb
push
pop
pushl
fcoml
mov
cli
pop
cmc
xor
loopne
outsb
mov
add
xchg
mov
pushl
mov
jle
and
test
sbb
mov
shl
jge
jmp
push
aaa
xor
adc
pop
sub
mov
sbb
std
xchg
mov
push
ljmp
mov
stos
push
add
sub
mov
ds
pop
dec
adc
rcrb
and
mov
dec
loope
dec
popf
cmp
cmc
sahf
sbb
std
inc
pop
add
test
mov
in
add
mov
test
mov
xchg
adc
pusha
jno
add
repz
jnp
test
out
aam
jle
loope
outsl
das
xor
pop
inc
decb
xchg
loope
mov
cmpsb
push
pop
push
and
mov
in
test
test
mov
rorl
xchg
xor
fwait
lea
fs
rclb
scas
in
sbb
mov
mov
adc
mov
mov
test
aam
sbb
decl
mov
and
ja
xchg
daa
push
adc
cmp
dec
xorl
fst
jne
cmp
lret
xchg
in
dec
pop
call
cmpb
pop
int
push
push
and
jle
inc
xorl
sub
mov
push
nop
shlb
das
and
inc
insl
hlt
push
orb
dec
xor
jmp
cmp
dec
push
fmuls
inc
add
out
roll
inc
filds
mov
push
sub
rcr
jb
ss
sbb
lods
mov
lds
lret
mov
aas
sub
and
outsb
push
aas
scas
mov
iret
jge
lret
push
repnz
lds
rcrl
cli
and
mov
pop
xchg
xchg
mov
lahf
lods
push
mov
lock
aas
add
push
and
and
enter
push
mov
nop
pop
std
jne
imul
mov
pushl
mov
mov
aam
test
add
jo
xchg
lret
in
mov
jle
add
in
or
xchg
outsl
enter
mov
cmp
xor
js
call
adc
movsb
pop
and
shr
pop
lock
js
stos
cmp
and
push
dec
aaa
or
pop
jmp
sub
sub
imul
stos
sbb
dec
pusha
cld
fs
enter
lock
jo
in
xor
divl
insb
mov
call
ret
js
inc
jg
sbb
in
ss
enter
xchg
orl
jmp
and
jle
and
jle
loopne
inc
push
loopne
adc
fsubrp
mov
shll
or
add
mov
mov
andl
scas
jecxz
sti
and
dec
pop
stc
sbb
mul
pop
icebp
test
shrb
pop
imul
data16
mov
insl
hlt
mov
stc
std
mov
mov
fldenv
mov
add
pop
jmp
cmpsl
mov
pop
sbb
andb
add
mov
cmpsl
stos
pop
xchg
pop
jb
mov
jno
cmp
les
dec
jnp
lret
mov
test
dec
enter
insb
or
lahf
out
test
test
mov
jp
jbe
push
add
pop
or
loop
stc
push
mov
jnp
in
sbb
xor
fwait
mov
lds
shll
mov
push
jp
das
pushf
js
pop
outsb
pop
sub
arpl
xchg
jno
adcl
jmp
int3
and
or
xchg
push
fists
or
loopne
sbb
icebp
mov
cmp
cmp
add
dec
or
out
xor
xor
pop
mov
push
lods
ret
scas
xlat
dec
test
xor
xchg
jp
popa
incl
pop
gs
mov
jecxz
das
popa
dec
mov
or
push
clc
dec
in
scas
dec
popf
and
jge
ficoms
movsb
jmp
incl
fisttpl
push
test
and
xlat
jle,pn
add
movl
imul
mov
mov
mov
test
xchg
jns
ja
cmc
cmc
jmp
pushfw
pushf
xor
aas
in
pop
lret
sub
mov
pop
dec
jb
add
hlt
mov
shrb
adc
jmp
fs
daa
out
jmp
das
test
pop
fcomps
adc
popf
adc
or
xor
push
fs
sbb
sub
lret
movlhps
jns
test
ds
add
xlat
dec
fdiv
inc
mov
and
jno
mov
pop
inc
testl
sbb
or
xchg
or
and
jae
loope
xlat
addl
call
or
notb
shl
loope
mov
adc
nop
pop
lock
fcoms
mov
add
mov
movb
je
sbb
idivl
push
lret
adc
push
je
fidivl
cmp
jbe
cmovno
dec
dec
aad
mov
lret
ljmp
inc
xchg
jno
xor
inc
dec
xchg
pop
dec
push
push
push
inc
pop
inc
mov
in
sahf
push
fs
stos
icebp
outsb
push
lods
jbe
outsl
fadds
pop
sbb
sbb
or
in
mov
imul
sarb
xchg
mov
mov
lock
test
scas
out
jp
or
sahf
jecxz
iret
cmp
hlt
inc
das
mov
cmp
sahf
frstor
cmpsb
or
loopne
cmp
pop
lock
enter
or
xchg
out
adc
mov
cmp
push
fld1
into
rorb
mov
jmp
je
jp
mov
sub
lret
cmp
jb
push
icebp
sub
iret
sbb
nop
out
out
add
push
mov
add
cmpsl
mov
pop
inc
adc
jp
lret
mov
push
mov
pushf
jl
hlt
pushf
or
mov
data16
lock
mov
movsl
and
fwait
jbe
fisubrs
addr16
and
dec
jno
xor
pusha
push
cs
test
sbb
adc
jns
pop
cmp
jbe
out
jae
rclb
ja
cs
jbe
sbb
orl
inc
andps
std
mov
movsl
pop
mov
fstl
pusha
lock
inc
sub
or
jmp
pushf
sbb
jg
push
or
mov
ud2
pop
scas
dec
pop
fdivrs
in
fsubs
nop
mov
push
sbb
adc
je
rorl
nop
test
mov
cmpsl
in
cmp
pop
loopne
icebp
sbb
mov
gs
inc
push
rol
mov
jno
push
pop
cmp
or
sbb
addb
dec
out
sbb
jle
fs
dec
or
or
hlt
jecxz
inc
mov
add
push
xor
mov
cmp
roll
sti
xchg
mov
daa
pop
lret
cld
xor
ficomps
in
pusha
mov
pop
xor
loopne
aad
iret
addl
stos
mov
jbe
mov
push
test
bound
jmp
xchg
loope
sub
leave
sub
sub
test
xor
mov
sarl
xor
sub
push
sti
loop
add
and
or
add
mov
sbb
cmp
sub
or
inc
xchg
insl
add
cmp
pop
pop
sbb
ret
dec
loop
push
pop
pop
movsl
mov
aad
push
bound
adc
cmpsb
add
pop
jmp
in
iret
rcll
in
pop
rorb
incl
outsb
rol
out
adc
cmp
and
mov
iret
mov
inc
or
inc
mov
lret
mov
jecxz
adc
test
aam
xorl
lods
jle
test
cmp
push
mov
jnp
add
insb
iret
inc
add
sub
and
jle
or
lret
outsl
pusha
repz
jge
adc
test
push
loopne
sarb
fs
or
dec
add
dec
pop
fnsave
das
inc
sbb
pop
fisubrs
pop
inc
push
jge
adc
jns
into
je
or
addl
pop
repz
adc
lods
pop
inc
sti
xchg
cli
mov
shll
inc
scas
or
push
mov
sbb
int3
or
mov
test
sub
mov
mov
cli
mov
cmc
and
arpl
mov
notb
adc
lea
sbb
pop
fstpt
ret
idiv
lea
sub
dec
push
out
push
cmpsl
mov
fwait
js
sub
gs
frstpm(287
xor
inc
int
mov
add
push
daa
popf
out
mov
dec
aam
aam
add
insl
cmp
cmpsl
push
ret
or
popf
stc
or
jg
rorb
push
pop
and
pop
mov
cmc
dec
out
add
pop
mov
and
mov
adc
mov
dec
test
fildll
jp
xchg
mull
and
mov
lods
imul
cli
pop
jno
fwait
sti
mov
icebp
rcl
repz
arpl
jns
lock
aam
lret
cld
sbb
mov
mov
or
xor
movsl
icebp
out
jae
ret
inc
in
test
out
push
dec
or
cwtl
push
push
int3
cmpl
test
ja
mov
cmp
movsl
mov
jnp
push
fdivrl
hlt
pop
mov
subl
mov
xor
les
fcmovu
inc
sarl
icebp
loope
data16
sbb
outsb
or
imul
jae
mov
test
jns
mov
dec
fstpt
pushf
xchg
push
jno
jg
adc
ret
orl
fnsave
jl
jno
dec
jmp
adc
mov
rorl
pop
loopne
lock
aas
loop
push
inc
mov
aas
jecxz
jno
pop
mov
sbb
rorl
xor
cmp
dec
push
fildll
jae
pop
fildl
xor
loopne
imul
and
push
push
add
push
jbe
jb
aam
jp
outsb
sub
mov
in
and
lods
stos
and
inc
dec
ds
scas
mov
loopne
add
mov
bound
xchg
xchg
add
in
pop
pop
pushf
and
mov
ds
movsl
data16
pop
popa
nop
ret
adc
xchg
pop
adc
mov
mov
insb
cmp
shll
sti
mov
sub
sahf
cltd
mov
addr16
pop
push
xchg
repnz
add
sub
rcr
mov
rcll
shr
or
dec
stc
mov
aas
cmpsl
push
ja
add
push
sub
and
mov
cs
cmpsl
inc
shl
mov
pop
cltd
scas
mov
jl
xchg
in
adc
aam
or
orl
push
dec
rcl
and
jbe
daa
cmc
test
adc
mov
inc
fdivrl
xchg
sbb
popf
ds
push
xor
loopne
add
add
imul
mov
add
inc
or
adc
insl
out
push
ds
mov
clc
and
and
mov
adc
out
push
jg
repz
or
push
xchg
xor
inc
mov
test
aam
outsb
lock
and
js
sahf
jo
pushf
add
jb
daa
test
das
jae
je
movb
cltd
sub
or
idivb
mov
je
fcoms
call
and
shrb
inc
fs
iret
xor
loop
adc
and
mov
test
lret
and
loopne
loop
pusha
xlat
sbb
sub
mov
jmp
xchg
stc
push
stos
and
into
jecxz
das
sub
mov
sub
mov
sub
pop
mov
pop
cmpsb
push
testl
pop
rolb
jle
scas
cltd
mov
insl
rclb
outsb
mov
sub
xchg
lea
cwtl
pushf
jns
daa
cmp
sti
jns
jae
sub
add
adc
mov
les
mov
cmpsb
push
ja
mov
filds
add
xchg
jnp
ss
lods
scas
jp
ljmp
xchg
std
leave
mov
cmp
imul
and
add
adc
out
movl
aaa
bound
dec
push
sbbb
ds
hlt
pop
mov
push
sbb
lods
fbstp
inc
es
leave
cltd
shlb
pop
rorb
cld
loop
mov
jp
int
xlat
add
mov
xchg
mov
popa
jns
inc
std
push
or
jns
pop
jo
loop
test
movsb
mov
imul
insl
xor
adc
outsl
push
mov
lock
or
bnd
mov
fwait
outsb
pop
mov
mov
jae
pop
and
shlb
jnp
movl
jp
cmp
add
insb
imul
ret
xchg
or
rcrl
test
mov
ds
test
xchg
jo
push
sub
or
mov
lea
aad
adc
mov
dec
adc
push
dec
jg
xor
and
xchg
in
mov
lcall
out
dec
in
scas
mov
xor
xorl
cmp
cld
and
rorl
int3
outsl
jg
xor
outsb
ja
dec
das
sarb
xor
addb
pop
movntq
jbe
mov
add
mov
subl
add
aaa
xor
mov
addl
add
inc
loope
dec
cli
and
dec
lods
jle
cmpsl
jns
push
in
push
xchg
lds
add
jb
xorl
sbb
pusha
dec
push
add
push
and
dec
cmp
cli
loopne
and
int
jnp
mov
or
daa
push
mulb
icebp
jl
pop
test
cld
orb
push
xor
std
cmp
outsl
push
inc
outsb
je
xchg
lds
std
in
shl
into
dec
scas
pop
pop
dec
loope
leave
imul
add
shrl
adc
cmp
cltd
pusha
rorb
inc
push
cmp
push
mov
popa
push
popf
jne
dec
xor
mov
loopne
in
push
adc
sbb
out
pop
or
xor
icebp
shl
inc
dec
mov
fwait
push
add
std
jp,pn
push
fisubrl
xchg
xor
das
fistl
and
ss
jne
lcall
test
push
xchg
dec
push
inc
bound
jl
and
pop
das
sub
jns
fstl
das
pop
jns
ret
aas
mov
inc
aad
movsl
inc
dec
sub
in
and
test
ret
sbb
or
std
clc
repnz
push
movsb
mov
lods
pop
push
dec
mov
pop
int
mov
pop
add
or
mov
add
adcb
pop
mov
pop
jmp
cmp
and
out
push
add
fisubl
imul
sbb
cwtl
jecxz
add
fiadds
mov
xor
frstor
xchg
and
mov
in
jmp
decb
adc
inc
rclb
scas
and
pop
orl
jo
xchg
stos
lods
add
das
sarb
add
enter
xlat
dec
iret
sbb
xchg
sbb
mov
mov
xchg
mov
out
lret
cld
sahf
shr
pushf
fistpll
sub
push
das
testb
pop
daa
fwait
mov
ds
adc
adcb
lcall
ja
inc
push
sbb
sahf
cmp
mov
or
shl
inc
mov
in
push
cmpb
lret
call
sbb
mov
inc
mov
std
stc
idiv
pop
dec
lea
fs
cmp
das
fdivrs
inc
dec
das
and
imul
loope
sbb
loopne
push
call
std
stos
popf
jbe
sarl
jo
mov
pop
outsl
mov
sti
mov
lret
mov
push
nop
lods
sbb
imul
mov
and
loope
and
lds
in
or
outsl
out
rol
jmp
pop
push
ss
dec
pop
xor
pop
loope
adc
adc
adcl
sub
jb
lds
data16
andl
cmc
jno
daa
xchg
ret
aaa
jno
pop
call
clc
push
lock
dec
mov
popa
imul
les
pop
js
xor
sub
icebp
xor
cwtl
mov
stos
mov
mov
pop
repnz
jmp
cmpsl
in
and
cmpsb
daa
cmpsb
test
cmp
mov
push
and
sbb
pusha
lahf
xor
pop
xchg
pop
xchg
stc
or
mov
jne
int
push
mov
scas
jno
inc
out
pop
mov
lods
pop
cmp
cmp
sub
mov
and
cs
out
sbb
push
cmp
mov
push
xchg
sub
push
lea
or
xchg
repnz
cmp
pop
jp
sarl
fistl
or
push
popa
lahf
inc
push
jne
loop
jge
mov
mov
pop
add
int
in
xor
mull
mov
div
daa
fwait
ret
jle
pop
outsb
dec
faddl
xor
mov
xchg
call
mov
mov
jno
lock
add
jle
ss
aaa
hlt
or
daa
popa
dec
cmc
int3
jne
lds
or
xchg
inc
push
push
adc
rclb
mov
sbb
aas
or
mov
enter
icebp
dec
cmc
xchg
es
orb
les
fimuls
adc
loop
and
or
test
pop
lret
dec
and
add
and
xchg
pop
in
cmp
jmp
pop
jle
mov
sbb
pop
icebp
mov
mov
subl
popf
mov
mov
jb
ja
add
mov
enter
arpl
sbb
test
imul
push
mov
inc
and
mov
add
cmp
mov
test
mov
setb
push
xchg
cld
xchg
mov
lock
mov
bound
and
stos
fwait
ss
imul
mov
or
call
ret
mov
lds
daa
sub
sub
testb
jb
ds
shll
sub
enterw
adcl
or
lock
xchg
leave
js
cmp
jp
pop
xorb
andb
push
imul
cmc
sbb
push
jle
movsl
shl
and
bound
insl
out
mov
xor
loop
cmc
mov
mov
xchg
shlb
or
or
stos
mov
std
push
fildll
add
inc
fstpl
lock
aas
mov
cwtl
std
cmpsl
loope
add
inc
push
jbe
lods
sbb
rolb
mov
ss
and
call
insb
push
sbb
add
add
sub
ret
cmc
test
cltd
mov
cmp
fbstp
dec
inc
negl
pop
inc
push
xchg
push
lds
mov
or
scas
scas
pop
outsb
lret
mov
idiv
dec
jge
stos
je
divl
push
mov
loop
movsb
mov
jbe
enter
cmp
mov
mov
add
js
xchg
lock
lds
scas
or
imul
jl
sbb
out
loopne
movsb
cs
and
aas
hlt
pop
xor
adc
push
insb
add
in
pop
rcl
xor
cmp
cli
xchg
or
jle
stos
xorb
xchg
cmc
jge
xor
sub
xchg
call
xor
jl
cmc
stc
sbb
mov
arpl
shll
lea
outsb
pop
mov
out
dec
inc
sbb
std
jle
sub
dec
sbb
lret
sub
adc
add
dec
mov
pop
jmp
push
jp
rcrb
dec
dec
inc
pop
loope
hlt
fnstsw
clc
pop
sarb
sub
fisttpll
lea
fcoml
xchg
and
adc
xchg
dec
or
aam
loopne
scas
in
outsb
or
addl
push
arpl
je
movsb
pop
mov
mov
or
aam
mov
inc
jb
or
cmpsb
mov
movb
in
sbbb
mov
std
outsl
sub
sarb
pop
jle
pop
lods
jmp
sbbb
dec
push
add
ja
mov
xor
xor
nop
cwtl
cmp
insb
jbe
movsl
xchg
push
int3
lock
std
loopne
stc
or
addr16
mov
ror
xchg
rolb
pop
imul
xchg
cli
dec
es
sbb
mov
sti
xor
cmpsb
les
dec
je
mov
ss
adc
movsb
add
inc
int
adc
cmpsl
shlb
dec
lods
xor
loopne
push
subb
pushf
mov
cwtl
jp
fstpt
aam
cmp
test
and
push
js
push
movsb
jg
inc
mov
pop
rorb
push
call
cwtl
push
jmp
scas
xor
xor
repnz
ret
add
ljmp
or
movsl
cmp
push
pusha
xor
mov
mov
ds
negl
sbb
test
pop
push
adc
xchg
pop
test
or
sbb
inc
cmp
pop
jmp
shrl
pop
fidivrs
mov
pusha
and
sbb
dec
cmp
add
cmp
sbb
pop
mov
adc
mov
jnp
scas
and
mul
out
pop
inc
jmp
icebp
xchg
mov
imul
jp
push
pop
iret
js
add
aas
xchg
mov
cmpb
cli
dec
test
das
xchg
push
xchg
loop
movsl
inc
jp
scas
les
rclb
sbb
or
aad
roll
mov
push
mov
das
jb
inc
lea
sub
dec
or
out
jnp
rorb
adc
mov
cmp
je
add
mov
addr16
cmp
ret
das
mov
push
push
adc
gs
decl
in
lods
test
or
adcb
jmp
pop
aaa
jmp
sub
add
push
xchg
sbb
mov
jo
js
movsb
in
loopne
rolb
rcrl
aad
or
fmul
loope
je
fldl
sub
fsub
sti
push
or
movsb
sahf
add
mov
arpl
pop
inc
lcall
xchg
mov
int
or
in
loopne
mov
pop
jl
test
and
repz
inc
push
in
scas
imul
or
hlt
loope
pop
aaa
mov
push
xor
push
inc
pop
jno
jp
lock
sub
mov
mov
jecxz
xchg
loope
mov
mov
cmp
mov
sar
inc
and
add
dec
push
clc
sub
pop
out
fs
cltd
push
inc
cli
xor
inc
mov
out
or
xchg
jmp
cmpsl
xchg
inc
fldcw
jae
pop
pusha
fstpt
cs
xchg
xorl
pop
push
pusha
aad
mov
in
pushf
push
and
jb
in
inc
out
mov
or
cvtpi2ps
dec
fdivs
push
das
adc
pop
sub
push
cmp
mov
scas
sbb
xor
xchg
leave
repnz
cmpsl
scas
xchg
adc
mov
jle
data16
cmc
jns
and
outsl
xlat
in
fsubrs
mov
not
pop
push
jl
and
cmp
pop
cmp
daa
scas
mov
xchg
mov
xchg
push
push
orb
lods
jns
sahf
cltd
jmp
gs
icebp
fpatan
xor
aas
jns
mov
sbb
pop
dec
je
dec
test
out
mov
sub
mov
pop
push
mov
inc
add
out
shll
jl
es
in
cmpsb
push
xor
push
das
cltd
dec
lret
push
add
add
adc
push
push
jl
shrb
shl
test
dec
inc
push
mov
dec
adc
clc
rcrb
shll
dec
out
rcll
std
cmpb
jge
nop
sbb
aas
cltd
jmp
and
movsl
mov
aas
and
hlt
stc
stos
mov
mov
sarb
push
add
lock
ja
pusha
dec
mov
cmp
mov
xor
nop
xor
adc
mov
mov
icebp
inc
mulb
add
sub
jno
lret
inc
pop
incl
xchg
insl
sub
xor
mov
inc
and
jae
sbb
mov
inc
scas
test
xchg
push
add
jno
lock
sub
adc
cwtl
push
adc
add
scas
cli
icebp
out
inc
pop
jmp
fiaddl
jbe
add
pop
pop
fcomps
ja
and
push
addl
sbb
popf
push
loope
fwait
lock
and
xor
push
dec
jge
call
add
dec
mov
out
sarl
push
pop
inc
loop
jmp
lods
das
push
arpl
xorb
outsb
pop
cmp
sbb
mov
mov
call
jl
repnz
pop
hlt
cs
fwait
sub
sbb
jg
push
aas
rcrb
pop
xor
js
aam
shrb
loop
add
call
out
pop
adc
sti
sahf
and
xchg
loope
inc
flds
push
std
mov
lods
mov
mov
mov
or
and
jno
cmpsb
movsb
cwtl
insb
f2xm1
repz
dec
xchg
ljmp
pop
cltd
call
push
std
dec
add
cmp
sub
or
fists
push
les
jmp
inc
mov
jecxz
out
add
sbb
push
cmpb
bound
push
aad
aam
and
cmp
loope
test
mov
sahf
out
fcoml
sbb
jmp
in
wbinvd
or
cmp
movsl
ss
add
xchg
es
xor
inc
push
pop
jle
jo
inc
add
scas
xor
xchg
cld
pop
jle
push
or
or
ds
jb
es
popf
cmp
jbe
xor
mov
push
cmp
lcall
cmp
lds
aas
pop
sbb
inc
sub
xchg
outsb
adc
movsb
stos
aad
mov
stos
dec
dec
test
dec
out
jns
rorl
jb
ds
outsb
scas
andb
sbb
inc
dec
roll
jb
mov
or
loope
lock
xor
imulb
xor
or
push
cmp
sbb
cmp
push
fsubs
lock
mov
mov
jp
xor
mulb
shlb
push
inc
movsb
mov
mov
mov
nop
andl
popf
cmp
clc
ret
add
mov
cs
mov
jno
dec
sub
pop
add
add
loope
jmp
adc
out
mov
dec
sbb
and
mov
jecxz
out
mov
pusha
mov
xchg
and
sbb
push
out
xchg
dec
lock
fisttps
shrb
sahf
mov
aaa
imul
push
jmp
xchg
decl
xchg
jb
cmp
mov
inc
mov
lahf
rorb
pop
cld
in
adc
test
in
jae
out
fcomps
inc
pop
pop
pusha
int
jecxz
cli
inc
inc
mov
outsl
xor
pop
or
icebp
js
inc
loopne
js
outsl
sub
ret
popl
pop
sbb
cmpsb
xor
cmp
xchg
mov
pop
pop
jecxz
sub
mov
mov
pop
aas
adc
in
jae
outsb
mov
inc
stos
cmpb
ret
fbstp
xchg
push
jae
cmp
mov
mov
cmp
pop
jbe
sahf
xchg
jno
and
and
orl
mov
jg
cltd
loopnew
push
cmc
sub
pushl
sahf
punpcklbw
loopne
rorb
pminub
jb
ja
fcompl
stos
dec
and
bound
lret
lcall
out
xchg
cmc
sbb
pop
push
and
jbe
hlt
add
sbb
cmp
mov
dec
in
jmp
cmpsb
xor
push
vpunpcklbw
hlt
dec
mov
mov
mov
add
pushf
test
cmp
test
mov
push
adc
push
repz
fiaddl
rorb
cld
sub
add
lret
mov
add
dec
inc
add
inc
call
jg
mov
mov
jecxz,pn
mov
loopne
or
xchg
lret
lods
shrb
and
mov
js
xor
mov
cmp
and
dec
xor
xchg
cltd
das
loopne
sub
and
cmp
add
dec
jb
lods
fdivrs
aas
jno
hlt
xchg
push
add
cltd
jmp
cwtd
test
out
mov
mov
mov
cltd
imul
outsb
loopne
jle
fwait
sarb
jae
xor
mov
sbb
inc
repz
or
push
das
in
lock
dec
push
jle
push
mov
push
inc
mov
or
les
leave
mov
unpcklps
cmp
fsubrl
push
pop
es
dec
xchg
push
je
cmpsb
push
test
stos
xchg
aad
mulb
pop
dec
mov
call
mov
clc
cmpsb
add
dec
or
cltd
cmc
xchg
add
push
pop
push
rol
inc
pushf
sbb
insl
jl
mov
loop
call
loop
lods
sarb
xorl
rorb
lret
rclb
and
and
push
jg
xchg
jbe
push
adc
adc
leave
xlat
jg
pop
imul
add
insb
inc
push
lcall
aas
nop
notb
or
insw
jb
mov
jecxz
xor
fidivs
xchg
lret
mov
dec
testl
repz
xor
or
dec
sbb
loope
cmc
jno
sbb
fiadds
push
stos
cmp
or
xor
nop
outsb
loopne
pop
ja
and
sub
xchg
xchg
fcompl
xchg
lea
outsl
outsb
and
mov
cmp
mov
mov
cmc
aas
push
imul
in
rcrb
lcall
jg
dec
out
negl
push
adc
adc
negb
mov
arpl
and
add
xchg
loop
sbb
xor
fadds
idiv
addr16
xchg
es
xchg
jne
mov
testl
aaa
arpl
sbb
iret
test
icebp
xchg
idivb
push
or
decb
test
mov
inc
jmp
xor
mov
xchg
jne
cmp
xchg
or
or
outsb
sub
test
or
hlt
hlt
or
enter
xor
mov
mov
adc
sbb
pop
rol
inc
xor
adcb
sbb
add
rorb
popl
or
pop
mov
or
jne
or
dec
mov
std
pop
jge
dec
pop
adc
sub
inc
or
add
in
in
enter
cmp
mov
enter
jl
xor
xchg
push
mov
push
pop
or
arpl
daa
inc
sbb
insb
cmpsb
adc
ffree
loop
loope
je
push
pop
out
inc
inc
mov
xchg
mov
xor
fdivr
cmp
xchg
mov
je
or
pop
cli
cmp
sub
addb
stc
or
sub
ljmp
adc
xorb
dec
mov
inc
jmp
mov
xchg
mov
sub
shrl
addl
jbe
lods
mov
mov
and
fcomps
cli
adc
and
xchg
xchg
daa
clc
pop
clc
pop
in
mov
push
pop
add
andl
lea
dec
push
mov
jg
idiv
out
cmp
cmpsl
mov
cmp
ret
pusha
sahf
in
and
xchg
es
and
not
mov
mov
outsb
add
push
sbb
hlt
dec
sar
inc
aad
and
dec
sub
fbld
fs
outsl
push
lods
or
sbb
repnz
jg
mov
mov
dec
fcomps
daa
ss
and
je
push
je
xchg
aad
scas
pop
inc
lock
dec
fistps
push
jle
ret
adc
push
cld
sbb
fwait
lods
imulb
inc
add
into
add
pop
out
addr16
bound
rorl
sub
add
testl
iret
sub
je
scas
iret
cltd
ror
sahf
in
mov
push
push
test
adc
xor
stc
insb
adc
stos
insb
cmpb
stos
mov
jecxz
pop
loop
sbb
mov
out
lret
dec
xor
daa
fiaddl
xlat
xor
test
mov
push
xchg
cld
add
sub
cmp
pop
in
ja
or
sbbl
add
add
adcb
lret
dec
ret
ss
push
gs
push
cmp
aaa
lods
pop
sub
push
pop
push
clc
push
dec
mov
xorl
incl
ds
shl
xchg
mov
jge
or
sub
add
sbb
sub
and
jecxz
pop
pop
sbb
pop
xchg
cmpsl
fiaddl
xchg
pop
inc
out
lods
inc
jmp
inc
push
sti
rolb
rcll
sbb
add
inc
inc
pop
xchg
or
aas
in
push
xchg
cmp
clc
movhlps
mov
jp
dec
inc
imul
add
lret
add
sbb
int3
std
pushl
adc
mov
je
inc
sub
out
cmp
adc
test
jnp
clc
xchg
xlat
loope
inc
and
adc
pop
icebp
pop
jno
adc
ja
xor
mov
inc
mov
jo
add
xor
pusha
incl
inc
xchg
sub
push
jb
and
adc
insl
adc
insl
shll
push
inc
ss
out
push
or
add
mov
xchg
inc
adc
into
and
mov
rcrl
shll
xchg
jle
sbb
leave
or
cmp
mov
sub
mov
loopne,pt
mov
and
pushf
mov
leave
mov
fsub
push
add
or
mov
out
dec
lahf
and
inc
popa
add
aaa
aam
pop
push
mov
enter
sarl
in
mov
jmp
std
out
cwtl
rcl
mov
rolb
jg
pop
push
testb
or
lea
xor
add
addr16
icebp
fwait
mov
call
psubusb
pop
dec
jns
and
mov
adc
cld
popa
mov
pop
rcr
rcrb
fs
adcb
sub
out
test
or
inc
xchg
and
jl
xchg
cmpxchg
cmp
inc
popa
pop
push
gs
loop
fcom
pop
outsl
jmp
and
inc
js
mov
push
xchg
push
xor
icebp
je
sub
ret
inc
sarl
dec
inc
mov
les
mov
mov
cwtl
gs
icebp
push
or
sbb
add
mov
pop
mov
out
push
mov
icebp
sub
bnd
das
add
cld
lock
dec
xchg
or
sbb
movsb
xor
mov
orb
inc
lret
rcrl
mov
rcrl
jle
lods
mov
fwait
ret
or
in
mov
add
cmp
jecxz
outsb
dec
loopne
lock
inc
scas
jl
sbb
push
adc
rorb
loopne
xchg
shrb
xchg
lea
mov
adc
inc
jp
cmp
inc
or
jo
add
out
dec
lea
push
mov
add
adc
add
aas
push
into
xchg
test
andl
mov
jo
jge
test
and
pop
aaa
jg
or
fs
sbb
push
int
push
leave
mov
mov
repz
mov
sub
test
movsl
pop
sbb
adc
mov
ret
dec
push
ljmp
fildl
popf
mov
adc
mov
test
ret
adc
insl
inc
rep
dec
sub
mov
fsubs
xchg
adc
push
and
cmp
inc
std
fldt
or
enter
mov
into
pop
ret
scas
sahf
xor
addps
pop
push
decl
pop
int
pop
add
sub
and
inc
sbb
jns
jg
pop
inc
sbb
xchg
and
xchg
lock
movsb
and
xchg
ret
jecxz
cs
cmp
mov
rol
and
lods
stos
jnp
mov
mov
jo
inc
jbe
outsb
daa
jbe
aam
repz
stos
or
xchg
sbb
icebp
push
cmp
insb
or
addl
add
fists
pop
pop
daa
lods
clc
incb
mov
scas
or
adc
loopne
cli
lock
push
sbb
xlat
lock
mov
fwait
sbb
push
scas
addr16
xlat
push
pusha
mov
lock
xor
arpl
clc
mov
out
pop
fisubs
outsl
pop
lcall
xchg
xchg
adcb
int
inc
lock
mulb
arpl
jno
test
int
clc
leave
ret
mov
push
lcall
add
push
sub
hlt
mov
lret
inc
cmp
pop
xchg
test
pop
cli
or
mov
adc
adc
jp
pop
lret
in
mov
xchg
sub
test
hlt
ljmp
mov
cmp
stc
mov
clc
mov
sub
ds
test
mov
shlb
adc
cmp
loop
cli
sub
mov
iret
mov
bound
sub
jmp
das
inc
je
add
fnsave
push
push
div
js
fstl
lret
lds
and
xor
cmc
out
adc
jp
push
push
pusha
js
test
jecxz
cli
inc
sub
jg
lahf
shlb
je
add
add
icebp
in
and
int3
adc
adc
sarb
outsb
xorl
xor
dec
pxor
lods
adc
inc
call
lods
inc
mov
inc
cltd
mov
jmp
add
cmpb
fwait
ja
sarl
aam
add
pop
stc
ds
movsb
aam
xchg
out
out
dec
adcl
jp
adcb
fdivrl
mov
push
std
dec
lds
jmp
pop
les
outsb
repz
adc
xor
mov
movsb
mov
xchg
xor
jle
ljmp
adc
test
imul
cmp
add
ss
dec
dec
sub
lcall
cld
pop
and
adc
and
cli
sar
inc
cltd
push
in
pusha
or
data16
mov
jge
push
int
out
push
cmp
shl
inc
pop
add
lock
pop
pop
mov
popf
mov
cwtl
call
out
fidivrs
xchg
cmp
and
or
decl
and
je
or
lret
adc
xor
add
fistl
and
push
adc
jno
mov
fbstp
pop
sub
les
jb
mov
cwtl
xor
or
xchg
int3
mov
aad
sbb
pop
pop
push
test
fs
xor
push
jno
xor
jg
push
pop
icebp
add
and
popa
test
sub
pop
or
add
xchg
rorb
sub
pusha
cmp
and
ljmp
jmp
sub
cs
mov
pop
pop
cld
es
add
add
je
sbb
out
xchg
sbb
push
arpl
jmp
sarl
push
cmpsb
lods
cld
pop
sti
shlb
std
aad
adc
lods
xchg
mov
cmp
shrb
sbb
mov
lret
push
jb
clc
leave
xchg
repnz
lea
int3
fwait
xor
pop
out
sub
sub
push
sub
cmp
lock
jl
or
ss
clc
xor
and
and
daa
ss
call
faddl
mov
icebp
mov
adc
cmpsl
dec
mov
inc
pop
fnstcw
mov
in
fs
mov
jg
and
int
pop
xchg
or
sahf
cli
cltd
loopne
cmp
jne
sbb
or
mov
jge
mov
sub
pop
ljmp
rcr
jb
aad
jbe
and
push
push
test
sub
jl
stos
xchg
in
in
fstpl
aas
xchg
and
in
fidivs
or
lcall
loope
mov
ficoms
movsb
sub
cltd
inc
sub
cli
sub
sbb
lock
sub
jg
inc
pop
repnz
repnz
sbb
sub
frstor
arpl
lds
mov
std
scas
lea
hlt
jbe
enter
fcos
add
incl
sbb
dec
arpl
lahf
xchg
js
inc
add
adc
subb
call
stos
mov
xor
xor
insl
test
push
dec
xchg
adc
add
sbb
add
loopne
push
rorl
mov
jle
sbb
out
xlat
je
xchg
ljmp
mov
mov
cmp
adc
xor
inc
pop
shr
cld
ret
inc
and
adc
mov
ficoml
fdivr
fistpll
mov
xor
xor
ret
dec
mov
ljmp
dec
pop
pop
lods
cmpsl
add
bound
js
into
clc
jnp
or
xchg
or
xchg
pop
xchg
inc
lahf
add
in
ljmp
out
and
std
adc
pop
int3
scas
ds
inc
pop
dec
clc
cmc
cmp
push
mov
adc
inc
loope
rcll
xor
jl
pop
enter
jge
inc
test
mov
stos
dec
out
pop
and
sbb
imul
and
dec
incl
inc
xor
push
das
mov
xor
in
arpl
add
loope
inc
inc
dec
arpl
mov
inc
lahf
jns
mov
pop
insl
pop
cmc
inc
mov
fsubrs
scas
fisubrl
or
xor
xchg
xchg
xchg
pushf
mov
sub
inc
pop
and
adc
pop
ljmp
shrl
mov
cmc
sub
push
inc
loop
shlb
add
lret
aas
cli
outsb
cmp
push
add
lret
pop
pop
andl
mov
or
push
inc
mov
gs
mov
add
and
repz
aas
int3
pop
mov
xor
lret
or
sbb
add
cmp
clc
fwait
repnz
inc
sbb
clc
test
lret
pop
lock
sbb
fisubrs
fisttpll
and
insb
sbb
pop
call
rclb
push
outsb
test
add
inc
addr16
sub
mov
sahf
pop
imul
pusha
sub
adc
repnz
mov
dec
mov
push
movsb
push
cld
stc
push
sbb
lret
and
push
int3
jmp
aaa
sbb
push
push
pop
sub
pop
daa
adc
mov
cmp
add
sub
call
aas
xchg
and
imul
pusha
dec
sbb
jb
push
test
jle
xor
or
push
cmp
adc
or
adc
adc
inc
faddl
dec
fs
sbb
jne
cmc
incb
and
rclb
test
mov
out
sub
outsl
and
rcrl
xchg
push
inc
sub
mov
int3
loop
and
cmpsb
xchg
shll
rcr
mov
and
clc
add
sarb
mov
scas
cmp
int3
mull
sub
insb
mov
popa
push
push
cli
mov
clc
adc
insb
inc
cs
cs
popf
lds
mov
push
lea
jnp
mov
push
sub
nop
imul
sbb
or
cmp
sahf
shlb
popl
int
jnp
cs
jmp
adc
dec
imul
clc
sub
xchg
or
cmp
rorb
lea
jb
sub
loopne
or
lret
push
inc
aas
test
and
lea
jl
mov
cltd
pushl
fstl
cmpsl
ret
imul
ljmp
ror
test
push
push
movsb
mov
jbe
mov
mov
popf
clc
jbe
mov
aad
xor
cltd
outsb
jno
push
fcmovbe
or
and
mov
mov
push
push
mov
pusha
mov
stc
sub
push
cli
sarl
inc
cmp
stos
loopne
mov
ret
mov
pushf
jnp
stos
sub
aas
es
popa
adc
sahf
faddl
mov
push
lcall
scas
divb
mov
push
or
mov
sub
xchg
mov
and
mov
xchg
fwait
hlt
sub
mov
shl
pmaxsw
sbb
leave
add
je
pop
mov
push
push
test
jl
lock
shrl
add
sbb
popa
add
xor
add
pop
mov
subl
clc
pop
repz
sub
loope
xchg
ret
xchg
push
push
incl
adc
or
push
subl
aas
cwtl
movsb
dec
outsb
jne
pop
sarl
adc
or
mov
popa
jb
pop
jnp
dec
pusha
push
test
movsl
fildl
push
das
pop
adc
or
jmp
pop
adc
mov
pop
mov
add
aad
jg
pop
lea
mov
adc
jae
jp
lock
xor
push
jnp
add
cmp
into
xorl
out
dec
xchg
pop
jmp
lock
addb
rorl
add
jecxz
xchg
cs
sahf
or
adc
je
cmpps
add
add
sub
rorb
cmp
mov
xchg
movsl
add
jg
mov
sub
insb
cmpsl
pusha
dec
jns
cmc
dec
push
decl
mov
lret
mov
adc
je
pop
pop
or
mov
mov
ret
mov
jae
pop
movsl
add
int3
push
dec
loope
mov
adc
xchg
test
es
mov
imul
fsubrl
repz
lock
lahf
sub
or
mov
jns
rolb
mov
shrl
inc
mov
fidivl
jmp
stos
dec
push
sbb
mov
jg
imul
rcrl
dec
inc
mov
pop
repnz
mov
je
fldt
out
xchg
push
add
gs
test
inc
das
adc
push
mov
jnp
mov
cli
shlb
xor
sbb
push
jo
stos
rcrb
inc
dec
xchg
mov
testb
xor
mov
jge
pop
repz
aas
mov
jge
enter
mov
sbb
cmp
jl
lock
mov
stc
or
xor
hlt
jae
xchg
and
daa
xor
xlat
cmp
mov
jg
push
lahf
xchg
cmpl
sub
and
sbb
pop
adc
stos
iret
popa
std
dec
mov
sbb
and
leave
ficomps
cltd
bnd
push
data16
mov
fidivs
jbe
pop
inc
test
cmp
fwait
lods
mov
push
out
popf
sbb
or
aas
xchg
divl
mov
mov
fldenv
loopne
stos
je
mov
push
inc
or
or
jmp
in
mov
rcrb
lock
or
stc
fnstenv
repz
popa
sbb
out
push
pop
push
push
mov
pop
sar
lods
movsl
pop
add
jne
cmp
pop
lea
sbbb
ret
jmp
clc
sub
out
add
pop
or
hlt
and
push
add
fildll
sub
rcrb
jecxz
add
lods
xor
adc
push
and
divl
xchg
ret
cltd
lcall
clc
push
decl
or
test
lods
cltd
popf
fcoms
dec
add
push
inc
data16
push
lods
clc
fsub
movsb
mov
rorl
fst
insl
lods
lcall
mov
jb
push
push
sbb
dec
les
mov
fsts
ret
inc
into
adc
jp
dec
push
aam
int3
icebp
stos
cmp
cmpsb
daa
in
xchg
into
enter
loopne
ss
adc
test
adc
sub
cpuid
cltd
aam
iret
daa
and
inc
std
das
out
test
imul
movsb
mov
push
inc
test
jmp
imul
jno
insb
cmp
test
and
mov
repnz
jl
out
xor
or
pop
and
int
in
nop
push
pop
mov
cmp
adc
add
and
test
adc
mov
cltd
insl
dec
inc
bound
test
or
adc
sbb
cmp
mov
xchg
int3
xchg
mov
jbe
cmpsl
xchg
sub
ljmp
push
xor
jecxz,pt
hlt
mov
push
dec
or
sbb
aad
fs
sbb
mov
sub
add
add
divl
jg
push
adc
cld
neg
xor
fs
inc
add
inc
fmuls
stc
divb
dec
mov
incb
aas
mov
mov
cmp
aaa
cli
pop
ss
out
cwtl
mov
gs
pop
loopne
or
add
js
test
mov
mov
or
sub
sub
shll
pop
loope
inc
es
jbe
mov
jecxz
jecxz
and
into
movsb
rolb
dec
outsb
out
dec
xchg
mov
je
inc
lret
aad
sbb
cld
lock
push
aam
dec
mov
into
push
sahf
scas
fcmovnbe
mov
inc
fidivrs
cmpsl
lock
mov
lahf
mov
pop
jecxz
stos
cs
rorb
inc
aad
movsb
cmpsb
aaa
adc
in
into
and
bound
push
mov
clc
stos
cmp
and
clc
lock
jae
fimuls
adc
jg
icebp
push
cmp
fimull
jno
rcr
adc
lcall
jge
sbb
in
int
scas
icebp
ss
fwait
mov
jge
pop
fldcw
pusha
sbb
pop
gs
sub
sti
push
dec
loopne
subb
xchg
out
lods
cmpl
cmp
adc
pop
mov
mov
xor
mov
xchg
cli
inc
mov
into
fadd
daa
nop
mov
mov
mov
mov
xor
in
pop
gs
xor
test
add
ja
call
adc
sbbl
call
mov
es
push
clc
cmp
cmpsb
mov
sbb
pop
clc
outsl
cmpsb
mov
lret
xor
adc
inc
data16
stos
scas
push
ds
aaa
cld
imul
std
addr16
aaa
mov
out
ljmp
flds
dec
pop
xchg
push
adc
fistps
and
mov
dec
ret
in
jnp
jo
fidivl
bound
sbbb
ss
push
pop
fmuls
or
sub
or
rcrb
das
xor
mov
mov
sub
and
popa
addb
mov
lock
add
adc
push
in
sub
fisttpll
leave
xchg
xor
das
and
or
cmp
xchg
int3
rolb
or
xchg
popf
into
pushf
mov
sbbb
xor
add
lock
stos
in
jmp
sbb
pop
and
jg
mov
aam
repnz
push
jecxz
fsubl
jl
loope
jnp
mov
test
jo
mov
cmp
inc
nop
je
loopne
test
pop
fstps
pop
pop
lret
test
idivb
in
leave
mov
mov
xchg
cmpl
mov
mov
scas
pop
pop
scas
add
lcall
lock
sbb
test
decl
push
jmp
aam
push
jecxz
xchg
cmpb
cmpsb
pop
jns
fcoms
aas
sub
mov
pop
cli
inc
inc
or
ljmp
aam
mov
nop
sub
test
mov
pusha
cmc
add
fwait
lock
movsl
xchg
movb
cs
nop
push
mov
cmp
adc
in
xorb
xlat
aas
xorb
jne
mov
loope
push
or
test
popf
mov
mov
push
push
mov
iret
jb
repz
push
aas
push
sti
sti
into
test
add
out
shl
pushl
mov
lds
shrl
in
push
movsb
sbb
add
test
push
dec
lods
adc
dec
push
dec
and
pop
or
ja
jp
jmp
movsl
push
loope
cmp
xchg
jno
ret
sub
cwtl
inc
pop
lahf
rolb
sub
aas
push
adc
and
gs
adc
mov
mov
lods
push
sbb
loopne
inc
decl
push
inc
cmp
xor
imulb
push
andb
jo
jle
out
inc
push
sbb
aam
aas
push
cld
or
call
ljmp
test
movsb
pop
pop
mov
cli
das
sbb
or
lcall
or
push
mov
lods
xor
add
or
dec
and
xchg
adc
pop
insl
or
fs
fbstp
mov
idiv
and
pop
iret
push
xor
sti
out
xchg
push
aas
sub
sub
cli
xor
xchg
sub
cmc
jg
ss
loop
sub
pop
int
push
sbb
loope
daa
scas
icebp
mov
or
leave
xor
xchg
xchg
nop
clc
xor
jb
andb
pop
jae
xchg
add
xchg
jns
outsl
fistl
enter
mov
push
pop
bound
adc
inc
scas
fdiv
scas
adcb
out
incl
jmp
in
pop
cmp
sahf
hlt
mov
cmp
push
and
add
jo
into
pop
iret
pushf
repnz
inc
cmp
cmp
addl
mov
aas
xchg
clc
push
daa
sub
sub
outsb
aam
or
ds
jecxz
imul
or
sub
imul
add
xchg
int3
pop
fistps
sysenter
pop
adc
loope
insl
pop
xor
shlb
sbb
xchg
xchg
mov
shlb
mov
push
jle
mov
nop
sbb
imul
cmp
bound
push
xor
leave
mov
aas
xor
mov
mov
bsr
sbb
add
pop
xor
popa
push
imull
sbb
nop
pop
or
lds
addl
or
mov
mov
sarl
add
stc
adcl
xor
insb
lahf
outsl
ret
push
seto
pop
rolb
inc
lahf
cmova
add
orb
ljmp
mov
dec
sahf
jne
mov
pusha
fisttpl
aam
sub
dec
movsl
bound
xor
jg
or
add
mov
fwait
pop
or
sbb
in
push
hlt
loope
cmp
shll
sbb
mov
insl
rcrb
xor
mov
mov
rorl
dec
mov
push
adc
push
or
sbb
insb
and
add
cli
outsl
stc
sub
add
ret
pop
imul
dec
cmp
es
cmp
dec
pop
cmp
adc
sbb
cltd
loopne
xor
pop
nop
loopne
inc
or
mov
and
cmp
mov
xchg
daa
pop
inc
aas
popa
ret
jae
or
sbb
pop
pop
inc
sarl
aad
das
xchg
stos
imul
push
mov
loop
scas
imul
adc
mov
dec
pushl
hlt
loope
mov
or
sub
test
pop
lods
mov
loope
or
xor
inc
cmp
xchg
xchg
pop
jb
adc
fnstenv
mov
loopne
sub
fistps
and
push
push
pop
cmpsl
repz
jmp
ret
pop
add
xor
push
std
dec
mov
imul
sbb
test
fmull
popl
push
cmp
fs
in
enter
adc
andb
mov
mov
or
fs
push
out
push
sub
cltd
cmc
mov
push
cmpsl
or
mov
push
cs
jne
pop
lock
fwait
xchg
sarl
inc
imul
push
shrb
sub
pop
cmp
out
cmp
or
insl
push
and
or
xchg
adc
mov
jbe
sbb
pop
rolb
push
mov
andl
das
push
insl
or
movb
test
test
sahf
ljmp
jb
or
int3
dec
daa
inc
adc
nop
sub
ds
xor
fst
sti
add
cmc
jge
ret
pop
jae
dec
mov
fldl
fmuls
or
mov
shrb
cmp
in
inc
dec
jmp
mov
sub
jle
mov
sub
shll
dec
addl
add
pop
adc
test
sub
lahf
sub
lods
mov
push
mov
push
insb
pop
push
sub
xchg
add
mov
push
or
mov
scas
arpl
jmp
popl
pop
sub
iret
mov
adc
push
adcb
jg
inc
test
xchg
jnp
aam
xchg
add
mov
mov
inc
shll
rcr
pop
imul
sarb
sbb
mov
dec
ret
and
ds
xor
pop
loope
lea
cli
adc
mov
mov
mov
and
mov
cmp
ljmp
shl
nop
mov
enter
mov
mov
mov
movsb
inc
pop
xchg
aas
sbb
push
mov
test
shll
mov
adc
flds
xor
stc
or
mov
gs
in
jl
push
dec
sbb
sbb
dec
cmp
or
and
mov
jl
addl
sbb
test
and
sbb
js
lods
fisubl
inc
ss
jns
ret
stos
sub
or
sub
scas
shrl
pop
push
inc
into
and
mov
sti
ret
or
sbb
push
loop
xchg
cmpsl
fildl
pop
shll
jmp
fcoml
stos
xchg
xor
fwait
lea
sbb
lcall
stc
dec
sub
add
mov
cmp
dec
repnz
rcl
or
adc
stc
fdivl
jmp
lods
xlat
ffreep
jae
jge
cltd
dec
test
movsl
lahf
or
xor
shl
pop
movsb
xor
sarl
inc
sbb
mov
popf
cmc
sbb
pop
sub
push
inc
out
xchg
push
and
adcl
js
mov
call
inc
jg
mov
cmc
push
ja
lock
int
imul
lds
pop
test
int
outsl
jo
rolb
sub
pop
lret
icebp
pop
rorb
jns
pop
sub
loope
and
dec
fsubs
dec
js
fldenv
push
mov
mov
push
dec
mov
mov
popa
cmc
and
sar
rolb
das
mov
dec
xchg
dec
and
out
in
xchg
sbbl
aas
test
je
adc
add
lods
imull
les
mov
cmp
mov
shll
insb
push
inc
insb
rcrl
mov
and
lcall
loopne
cmp
inc
cmp
push
adc
add
jmp
icebp
jno
add
jnp
and
jno
xchg
cwtl
pop
pop
push
push
mov
jbe
roll
mov
repnz
mov
jb
mov
cld
sarl
popa
pop
pop
addb
outsb
and
fdivrs
adc
test
mov
fwait
ret
call
call
mov
mov
lcall
movsl
mov
or
or
shlb
inc
mov
loopne
outsb
push
sub
add
sarl
mov
out
jo
mov
sub
xchg
adc
pushf
test
add
or
shrb
cmpsl
roll
fidivrs
enter
aas
sbb
and
inc
lcall
hlt
add
mov
les
sbb
dec
mov
xor
loopne
adc
push
or
lds
xor
pop
std
lret
and
jb
add
popf
cmpsb
shrb
add
sbb
mov
cmc
jno
pop
xchg
adc
pop
aaa
cmp
push
push
adc
cmc
lea
push
pop
icebp
clc
in
mov
mov
stos
push
pop
and
mov
aad
cmpsb
cs
pop
xchg
out
loope
into
or
shll
lds
movsl
inc
mov
ljmp
cmp
sbb
sbb
pusha
loop
outsl
mov
jne
and
dec
xor
idivl
mov
jo
test
ds
je
push
movsl
jmp
movsl
sbb
adc
adc
mov
adc
add
adc
or
fmull
and
pop
adc
xorl
std
cmc
xchg
outsb
popl
sti
add
mov
loope
xchg
xor
or
mov
xor
repnz
cmpl
test
das
es
or
sub
pop
jecxz
out
imul
popf
je
shlb
leave
xchg
sbb
pop
jno
adc
pop
mov
popa
jno
jle
jmp
int3
jns
cmp
xchg
ja
cmp
mov
insl
imul
andb
decb
mov
jg
aam
cld
fldt
xlat
inc
add
xchg
cs
lahf
jp
mov
and
add
and
sarl
sbb
and
adc
pop
scas
shlb
adc
loope
test
mov
pop
push
adc
adc
pop
out
and
pop
cmc
outsl
and
xor
push
pop
popf
pusha
mov
fldenv
jmp
push
xlat
adc
inc
mov
lods
mov
mov
pop
mov
daa
fnstenv
repnz
inc
mov
in
sub
jo
ret
inc
outsl
popa
clc
lods
incl
fs
inc
fcmovnu
rcr
loope
into
xchg
hlt
jl
adc
sub
loope
popa
pop
in
fwait
popa
ror
fwait
test
jle
setle
les
cmp
test
mov
mov
rcrb
add
or
int
xor
mov
mov
loope
fildl
into
cmp
enter
int3
cmp
adc
or
rcll
jg
fstpl
roll
xchg
sbb
sti
rcrl
xchg
or
xlat
ds
mov
and
outsb
mov
inc
sub
testb
push
cld
pusha
xchg
add
add
adc
movsl
cli
jbe
jbe
das
out
sbb
add
sub
add
fcoml
pop
js
mov
lock
and
pop
adc
add
mov
sbb
das
fldl
lods
cmp
sbb
jbe
jl
pop
out
in
dec
ret
cli
lcall
jecxz
adc
or
cwtl
jbe
inc
pop
mov
addl
ret
cmp
push
inc
and
testl
cld
cmpsl
mov
lds
mov
adc
push
incl
mov
adc
add
out
mov
adc
jecxz
lret
add
cld
fimull
shll
outsb
aam
outsb
daa
inc
in
pop
sti
add
lock
sub
ficoml
int3
push
adc
xchg
mull
mov
adc
mov
clc
push
add
or
fisubs
daa
out
into
dec
add
aas
cli
daa
leave
xor
out
xor
shll
out
dec
push
pusha
pop
mov
mov
inc
clc
xchg
pop
inc
insl
imul
sbb
in
jo
sbb
sub
call
enter
inc
dec
mov
push
pop
mov
test
xor
lret
mov
and
and
getsec
mov
bound
mulb
xor
leave
ret
fsubl
inc
sbb
out
xor
enter
xchg
jl
sahf
ret
lahf
sub
sbb
xchg
inc
jp
pop
jmp
cli
mov
xor
test
gs
ret
fbld
cmp
mov
jg
pop
mov
mov
mov
ljmp
pop
jno
iret
jno
and
subb
in
lahf
cmp
std
mov
mov
fs
cwtl
adc
dec
je
push
mov
fmull
icebp
or
addl
push
mov
add
jp
sbb
adc
pop
pop
xchg
js
sarl
mov
add
jmp
in
out
bound
push
pusha
popa
cmp
js
inc
cltd
jnp
adc
pop
dec
insl
jo
push
mov
cmc
out
into
cwtl
bnd
ret
test
adc
fisubl
dec
dec
adc
stc
inc
outsb
aad
out
jg
inc
push
stos
repnz
sub
push
xor
jge
ffreep
adc
in
mov
xor
push
jl
and
dec
add
addb
lods
mov
cmp
nop
mov
xchg
rorb
xor
pop
dec
jno
sub
aas
mov
sub
loop
mov
mov
in
loop
popa
mov
test
inc
xor
jge
jmp
jg
sbb
sub
les
or
shr
pop
out
xor
mov
mov
imul
mov
loope
mov
enter
mov
ret
pop
xchg
lods
cmp
stc
call
xor
jbe
lret
cmp
jbe
cltd
and
fstpt
or
outsb
and
pop
movsl
in
dec
adc
lods
push
dec
pop
ljmp
outsl
int3
xchg
mov
push
ja
mov
pop
hlt
lcall
mov
push
fwait
sbb
jle
incb
data16
inc
scas
lods
jae
xor
rcr
mov
pop
adc
and
inc
cltd
test
testb
sahf
add
pop
not
jbe
push
cld
jmp
pop
subb
mov
jp
js
mov
jecxz
pushl
and
push
mov
mov
jle
push
pushl
mov
rcll
fisubrs
mov
inc
add
lods
push
cmp
xchg
jp,pn
sub
outsl
add
daa
jnp
je
xlat
cmp
pop
loope
pop
push
arpl
adc
inc
imul
xlat
clc
ja
lret
add
dec
sbb
jbe
movsl
icebp
loop
jg
xchg
loope
xor
push
outsl
or
mov
push
lods
daa
push
mov
je
push
sbb
cmp
aad
pop
push
mov
aad
xor
das
xchg
pushf
adc
repz
push
push
inc
pusha
incb
xor
hlt
or
cli
cmp
or
mov
loopne
das
push
push
es
mov
jg
xchg
scas
and
mov
or
mov
xchg
scas
push
icebp
add
loopne
mov
pop
shr
dec
inc
movb
push
cs
ja
fsts
push
lods
and
fistl
lahf
in
dec
stos
mov
sub
mov
push
daa
into
icebp
pop
mov
cmp
andl
dec
rclb
loopne
fwait
sbbb
pop
dec
dec
out
pusha
and
jne
cli
scas
push
xchg
int3
out
rorl
and
pop
cmp
xchg
rclb
shlb
jmp
dec
inc
mov
sbb
xor
and
sbb
mov
add
sbb
mov
pop
pop
add
jmp
pop
addb
insb
ret
popf
rorl
or
cltd
lods
sbb
cmp
rorb
js
cmp
ror
aam
push
sbb
jbe
leave
mov
hlt
adc
cli
mov
out
push
xchg
inc
mov
lock
stc
dec
mov
lret
jl
das
inc
jge
insb
adc
ss
mov
add
cmp
sub
cmp
test
push
jecxz
leave
rcrl
mov
jg
push
xchg
stos
cmp
in
jge
and
push
packssdw
mov
mov
std
idivl
out
push
in
xor
cli
dec
ret
popf
call
cmp
call
and
jo
inc
sub
mov
lret
movsl
out
push
jno
jo
pop
pop
inc
int3
incb
cmpsb
inc
or
mov
mov
pop
stc
test
lods
pushf
data16
fld
inc
cmc
pop
int3
in
jp
popf
test
or
out
jb
dec
jbe
std
inc
lret
int
xlat
test
pop
call
lods
repz
nop
lret
imul
inc
inc
pop
jmp
inc
leave
and
loope
decb
cmp
mov
mov
pop
push
insb
pop
stos
add
push
pushf
mov
jp
jno
cwtl
sub
add
loop
xor
das
sbb
ds
cmpsl
repz
xor
sbbl
pop
dec
mov
ljmp
enter
scas
mov
fisubs
insl
and
jno
in
hlt
out
mov
add
aas
aam
adc
inc
and
insl
loop
jno
inc
pop
imul
aam
inc
popa
add
pop
testl
xchg
roll
pop
fnstenv
int3
cmc
test
addr16
dec
mov
mulb
hlt
enter
shr
or
push
add
or
das
mov
aaa
std
inc
adc
mov
in
in
jmp
js
aas
push
inc
or
or
fcompl
iret
sbb
sub
iret
mov
incl
aad
sbb
lcall
sub
popa
shrl
dec
clc
xchg
arpl
push
cli
cmp
mov
iret
orb
jl
icebp
mov
mov
jl
mov
cmp
lret
and
xorb
mov
push
pop
std
fbstp
aaa
inc
inc
add
scas
and
push
push
jns
out
pop
cld
in
pusha
mov
cltd
or
inc
pop
std
jns
jnp
push
faddl
mov
jmp
hlt
jecxz
insl
pop
push
jl
orb
insl
icebp
lahf
jae
jnp
mov
test
add
shl
stos
test
shlb
out
cmp
or
and
leave
fistl
adc
cmp
movsl
bound
xchg
lds
jg
ficomps
sbb
push
jnp
sbb
adc
inc
or
jne
mov
or
pop
mov
repnz
mov
pmuludq
jbe
jp
jle
loop
repnz
or
add
sbb
jl
mov
cmpsb
and
push
add
jp
enter
filds
ret
rclb
leave
jo
push
xor
mov
add
loope
outsb
mov
inc
push
pusha
or
shrb
les
push
and
xor
mov
jnp
push
jns
mov
sbb
pop
nop
pop
insb
fs
mov
lods
pop
jmp
push
xchg
jns
sub
lods
sar
xchg
test
loopne
scas
loopne
adc
cmpsl
or
or
das
fdiv
fcmovu
outsl
fists
rcl
sub
add
cmp
ss
pushl
inc
and
xlat
jecxz
pop
lods
aam
stos
add
xchg
pop
fcoml
mov
fstpl
jecxz
sub
rcrl
add
jbe
or
mov
adc
push
inc
dec
cmp
shrb
mov
xchg
inc
notb
movsb
mov
movsb
call
sbb
adc
adc
adc
sbbl
mov
popw
add
jno
lret
push
sbb
mov
std
movsb
sbb
popa
add
xor
mov
shll
call
mov
xchg
int
cmpb
jbe
push
hlt
and
push
lcall
jp,pn
nop
pop
xchg
add
cmp
lock
test
sbb
mov
jb
xor
jmp
cmc
fnstcw
inc
jo
sbb
add
mov
push
popa
sub
and
cmc
push
pop
dec
sarb
add
cmp
xlat
test
sbb
jle
ss
xor
popa
les
loopne
add
int3
jbe
sub
sbb
fcoml
nop
mov
js
jmp
stos
mov
and
dec
js
mov
dec
inc
fistps
cmp
pop
sbb
or
out
cmp
xorl
add
add
orl
inc
dec
sahf
push
xor
shll
aad
rclb
in
movsl
adc
adc
inc
dec
pop
add
loop
mov
call
cwtl
sub
subb
cltd
inc
push
inc
xor
inc
movsb
sarb
cmp
inc
movsb
cs
xor
loope
test
adc
push
xchg
daa
xor
sbb
mov
mov
sbb
cmp
or
mov
jle
mov
add
xchg
test
pop
jns
or
add
add
std
ret
lds
sub
mov
sub
cwtl
inc
dec
sahf
pop
xchg
cmp
lock
lods
jp
scas
addr16
add
sarl
pusha
push
jge
pop
push
popf
lea
ficompl
cmp
in
pop
je
and
add
repz
in
or
cmp
jmp
movsb
xor
dec
fstps
cmp
loope
clc
xchg
aas
dec
hlt
pusha
cmp
fs
hlt
pushf
inc
xchg
movsb
cs
dec
push
js
xor
fbld
adc
lock
in
jge
mov
or
pop
pop
sub
leave
and
cwtl
bound
ss
jno
push
jl
xchg
mov
xchg
mov
and
ljmp
or
in
add
fwait
pusha
and
add
push
rorb
sti
cmpsb
stos
pop
test
mov
add
aaa
iret
sarb
mov
lods
test
gs
mov
mov
loopne
sub
sub
cmp
lahf
dec
or
pop
in
sbb
mov
pop
es
and
aam
rcll
xlat
jne
aad
movl
popa
xorl
adc
add
add
xchg
sub
jnp
call
and
fnsave
push
pop
pop
add
shlb
xlat
xchg
push
out
mov
mov
pop
inc
sbb
jno
sbb
cmpsb
std
or
sbb
lods
jmp
or
ret
cli
out
cmpl
sbb
repz
and
pusha
xchg
adc
in
dec
loopne
sbb
jne
pusha
loop
sub
and
scas
and
mov
push
cmp
insl
int3
pusha
push
push
lea
sub
lcall
jg
mov
inc
jl
mov
inc
paddb
mov
lock
incb
xor
mov
sbb
sub
sbb
adc
jbe
cltd
push
aas
js
mov
mov
cwtl
jne
cld
adc
add
cmp
cld
mov
inc
xchg
push
or
inc
movsb
sbb
or
dec
loopne
jno
loop
sahf
loope
cmp
mov
fbstp
ljmp
mov
adc
cli
push
inc
push
or
jp
push
shrl
xor
lea
add
fidivs
dec
daa
dec
cltd
jno
xchg
inc
sahf
movsb
cld
jecxz
push
xor
sbb
add
flds
mov
clc
iret
mov
or
fimull
xor
lods
adc
call
pop
jbe
jmp
mov
xor
pop
arpl
or
arpl
adc
flds
pushf
loopne
jecxz
mov
negb
iret
fs
aas
clc
mov
loop
mov
jp
ds
ret
lea
adc
dec
mov
lahf
iret
mov
pop
sbb
aas
sbb
aas
insb
mov
dec
arpl
rclb
sbbl
cmc
cmpb
pusha
lret
mov
icebp
mull
jmp
inc
loope
cld
hlt
push
mov
nop
inc
gs
cmp
cltd
mov
cld
daa
xchg
sub
push
rorb
shl
wrmsr
imulb
loope
mov
ss
or
pop
sub
inc
dec
and
cmp
mov
jle
and
idiv
push
push
mov
push
pop
loope
jg,pn
pop
loope
adc
lods
fcom
out
or
hlt
jg
lock
jecxz
push
insl
imul
stc
sub
mov
pop
sub
xchg
shlb
push
nop
push
ror
add
cmp
ja
inc
clc
popa
std
imul
jg
add
mov
inc
out
ss
je
ss
into
dec
xchg
incb
mov
ss
adc
sarb
cs
sbb
jl
sub
jp
xlat
and
clc
adc
addl
jbe
outsl
movsb
sbb
sub
cwtl
call
push
loopne
repnz
sub
jbe
lods
sbb
mov
nop
mov
mov
dec
ja
insb
jb
and
shr
cli
sbb
mov
loop
or
or
jbe
push
out
leave
loop
cmp
add
cld
sti
mov
pop
dec
jg
ljmp
jmp
in
test
ficoml
mov
cmpsb
popa
inc
xchg
jp
movsl
xor
std
mov
add
in
pop
aam
call
mov
lret
rolb
out
and
icebp
aad
fcmovbe
flds
adc
pop
ret
inc
and
adc
xchg
jg
je
xchg
dec
inc
add
movsb
js
clc
xchg
cld
mov
mov
stc
add
cmp
and
pop
cli
loop
push
xchg
in
jmp
add
push
mov
add
push
mov
fsub
int3
push
mov
pop
mov
sub
dec
das
mov
sbb
lea
adc
test
add
sahf
dec
hlt
xor
mov
int3
add
pop
inc
das
dec
xchg
adc
in
push
inc
cmpsb
loopne
into
enter
in
sub
inc
out
push
add
es
lea
jl
gs
pop
test
pop
mov
push
cmp
das
sarb
insl
mov
mov
fistpll
push
clc
popf
andl
loopne
mov
popf
cli
and
sbb
lcall
lahf
sub
mov
movsl
jg
inc
xchg
xchg
orl
nop
int
fsub
lahf
xlat
insb
jmp
vmovsd
add
gs
xchg
jp
push
sub
sbbl
push
jo
sbb
mov
push
ja
sub
mov
mov
mov
xchg
icebp
pop
push
repnz
mov
jae
test
das
sti
pop
dec
jl
push
loopne
add
jmp
in
mov
mov
and
jbe
inc
xor
inc
lar
cltd
movsl
out
fs
std
mov
sbb
and
andb
mov
stos
mov
push
cli
push
adc
mov
xor
push
adc
push
stos
notl
mov
insb
add
adc
and
jo
xchg
nop
pop
sbb
bound
lcall
cmp
test
jl
out
dec
inc
sub
and
pushf
sbb
ret
add
jl
shrl
movsl
jb
cmp
jmp
cmp
cmc
jbe
fdiv
ss
je
ljmp
and
shll
mov
jp
jl
rcr
int
pop
lock
push
xor
jb
push
aam
push
loope
inc
in
clc
pop
jg
sub
cli
pushf
push
xchg
outsb
pop
xor
decl
clc
clc
cmp
jb
cmp
jl
outsb
inc
faddl
bnd
aaa
sub
push
out
add
rcrl
sbb
nop
lods
jo
cmpb
shrl
push
mov
mov
push
add
daa
fwait
mov
shll
sub
jae
inc
mov
and
subb
jo
mov
pop
pusha
incl
adc
cmovo
xchg
pop
lret
out
ret
sbb
es
jo
sub
xor
imul
int
and
xorb
ror
lock
das
loop
pusha
dec
fisttpl
push
out
lds
or
push
and
jl
push
push
jg
cmc
stc
add
jns
xor
inc
jecxz
and
pop
stos
loope
stc
cmc
sub
sub
sahf
out
sub
ljmp
xor
imul
mov
add
ja
mov
js
sbb
cwtl
and
adc
getsec
dec
mov
or
add
pop
cwtl
jbe
add
xor
hlt
cmp
mov
jmp
fcoms
stc
ret
cltd
or
adc
test
mov
push
cmp
vaddss
sbb
jmp
inc
les
sub
andb
lcall
dec
pop
and
mov
loopne
cmp
shlb
aaa
movsb
jp
shlb
mov
jle
jle
in
jno
xchg
add
and
jmp
dec
lcall
xor
mov
sbb
out
imul
sbbl
arpl
or
inc
add
enter
sbb
lret
mov
mov
rol
rcrl
and
clc
push
adc
nop
lock
aas
push
ja
mov
xchg
jmp
sub
pushl
add
dec
cltd
sub
mov
repz
fsubrl
test
clc
addl
adc
call
hlt
jbe
and
cmp
lea
mov
sahf
add
mov
popf
sbbl
pop
in
mov
out
inc
test
data16
js
pop
push
shll
test
pop
cli
pop
les
or
xchg
das
sahf
and
inc
lahf
push
lahf
ja
push
cmpsb
dec
lock
pop
orb
addl
dec
mov
mov
push
dec
inc
pop
popf
fwait
ret
adc
push
or
xor
push
incl
fiaddl
sahf
add
pushl
cli
sti
and
sub
sbbb
out
add
das
addl
push
push
lods
fwait
lods
add
push
nop
push
mov
mov
xchg
gs
add
mov
xchg
imul
ljmp
cmp
data16
pop
cmpsb
sub
aam
out
jp
jl
pop
and
and
out
adc
pop
fldcw
push
mov
dec
and
push
je
push
or
andb
ss
insl
xchg
out
cmp
and
jg
sbb
xchg
mov
sbb
mov
pop
clc
or
clc
testb
sub
add
dec
mov
clc
aam
and
add
cld
cmpsb
mov
push
imul
popf
inc
cmpsl
jge
jge
out
bound
es
and
inc
sti
pop
adc
pusha
inc
add
and
jno
popf
or
sbb
jmp
outsl
mov
nop
inc
xlat
fs
mov
popa
cltd
aas
cmpsl
lcall
mov
sub
idiv
bndldx
sub
mov
andl
pop
mov
call
fcomip
btc
push
in
push
lret
rclb
das
pop
shl
out
call
add
and
test
xchg
mov
adc
loope
mov
lock
jo
lret
push
lea
stc
or
aam
add
ret
pop
cmp
cltd
xlat
push
ret
lea
loopne
mov
or
dec
mov
loopne
inc
movaps
jns
mov
dec
fdivrs
adc
jns
inc
xlat
adc
test
inc
xor
dec
pop
sahf
push
adc
inc
cld
add
inc
add
jae
inc
xor
xor
int3
xor
cmp
xor
add
ret
cld
lcall
or
pushf
jns
mov
xchg
mov
push
fdivs
xor
mov
xchg
xlat
mov
popa
cld
roll
subb
inc
adc
shrl
dec
sti
je
lock
imul
add
pushf
incl
movsl
test
pop
out
int
cld
cli
test
inc
lahf
pusha
mov
jle
sar
mov
dec
pop
mov
xor
mov
mov
cld
mov
inc
xor
xchg
ljmp
sahf
ret
or
lods
repnz
shrl
sar
mov
cmc
test
xor
mov
sbb
std
cmp
pop
pop
out
sub
aaa
sahf
cltd
cmp
dec
mov
mov
je
ret
jnp
ss
rorb
pop
js
mov
mov
adc
test
jbe
cmpsb
mov
and
fcomps
aas
mov
mov
js
adcb
mov
push
outsl
sub
andl
imul
xlat
ret
jb
jnp
hlt
mov
or
jg
mov
shll
sahf
pushl
lcall
js
lds
lea
cmpsl
sbb
mov
mov
or
cmp
pop
push
ljmp
dec
push
mov
les
pop
aam
add
jle
jg
push
mov
call
mov
push
jmp
shrl
inc
sahf
imul
xor
xor
clc
sbb
push
jg
or
sbb
popa
aam
mov
pop
mov
inc
fiaddl
sahf
inc
add
cli
adc
or
ja
fcmovbe
cmc
sub
nop
data16
ja
jl
jbe
ret
movsl
push
xchg
clc
mov
push
jo
insl
inc
pop
loop
loope
loopne
rcrb
cmpsb
outsb
jle
xchg
sbb
cmp
mov
shr
push
iret
dec
fsubl
lods
jl
cmp
lea
dec
ds
sbb
shll
and
adc
mov
sbb
jmp
adcb
push
push
add
pop
cmp
out
ret
clc
orl
cmp
adc
cld
push
hlt
sub
adc
cmp
cmpsb
in
add
cmpsl
sub
inc
sbb
lock
repz
xchg
inc
xchg
js
add
add
jg
outsl
lock
sub
mov
mov
mov
cmpsl
call
loop
fwait
daa
adcb
xor
cs
ret
outsl
cld
push
imul
test
pop
adc
popa
mov
mov
cmp
pop
out
inc
cmpsb
sar
loop
and
outsb
and
pushf
out
nop
push
outsl
dec
roll
sub
sarl
sbb
sub
mov
inc
push
lea
ja
daa
xor
add
loopne
mov
ja
das
sbb
mov
nop
adc
cld
sahf
ret
push
pop
clc
inc
cli
rorb
popf
loope
cwtl
mov
xchg
mov
jnp
lcall
fcmovnb
or
cmpsb
outsl
lea
js
pop
stos
loopne
dec
cmc
and
scas
test
jb
mov
movb
add
ret
cmp
dec
add
add
insl
mov
cmp
inc
in
imul
testb
add
jle
js
sbb
cs
push
pushl
pushl
iret
mov
xchg
push
loop
jo
loop
fisubrl
les
ds
cwtl
sub
mov
pop
and
fldl
out
push
inc
add
fldt
push
cmpps
out
scas
loopne
jno
adc
or
or
xchg
xor
in
push
mov
fidivl
dec
push
adc
adc
clc
outsb
decl
ljmp
add
or
mov
push
jge
cmpsl
popf
sub
js
aas
popf
andb
push
or
xchg
sub
push
xor
xorl
push
adc
and
dec
sub
push
and
jnp
cmp
xchg
rclb
push
dec
mov
mov
pusha
mov
in
xchg
scas
jle
cltd
sub
mov
bound
xchg
and
pop
ss
movsb
sbb
faddl
lea
cmp
adc
daa
shr
inc
sub
xlat
push
incl
movsl
mov
xor
cmpsl
or
push
push
cli
sub
insb
sbb
xlat
sbb
xchg
inc
add
xchg
pop
es
dec
sub
sbb
loopne
inc
dec
stos
ja
dec
fsubrl
pop
aam
add
cwtl
lcall
mov
aam
mov
daa
push
dec
ljmp
dec
loopne
xor
dec
adc
push
and
jmp
inc
adc
adcl
imul
sbb
es
and
mov
add
jge
mov
lock
inc
jg
lcall
mov
xor
testl
xchg
lods
pushf
fistpll
lea
inc
loopne
shlb
xor
mov
inc
ret
fdivr
and
mov
es
adc
pop
and
shlb
fs
pop
push
cmpsb
int
clc
xchg
les
call
xlat
push
mov
pushf
loop
leave
mov
pop
push
sbb
icebp
dec
test
test
cmc
dec
cmp
fdivrp
xchg
jne
jmp
sub
sbb
out
jo
and
push
gs
xchg
sahf
mov
insl
inc
inc
mov
addl
and
daa
inc
and
xchg
cmc
push
out
aad
jo
jb
or
or
movsl
ret
xorb
shl
mov
faddp
daa
adc
mov
jp
lcall
insb
mov
and
std
sub
sbb
pop
xor
enter
cld
or
aas
xor
lret
push
adc
jl
sbb
adcl
loop
adc
shlb
jo
pusha
mov
jmp
orl
cli
cli
nop
enter
js
cmp
ljmp
test
push
push
inc
push
dec
mov
mov
adc
ficompl
push
cmp
cltd
mov
and
or
add
lock
movsl
add
push
dec
fdivs
out
xchg
aad
loop
les
in
repz
mov
mov
pop
or
scas
dec
xchg
and
les
loope
inc
mov
ficoms
cli
and
inc
aad
dec
mov
add
mov
mov
movsb
and
jl
lahf
xchg
dec
js
inc
xor
hlt
loop
cmpsl
pop
in
iret
aas
aam
push
clc
neg
add
loop
icebp
or
ret
std
in
jecxz
cmc
sarb
jecxz
aas
or
imul
jp
adc
testl
cld
jmp
xor
ljmp
cli
add
scas
test
cmpl
sub
ds
iret
or
or
mov
cmc
rorl
inc
arpl
sbb
sub
or
stos
lods
loope
jecxz
inc
push
or
sub
ret
push
stos
ret
subl
test
add
les
sub
xor
int3
arpl
mov
popa
jmp
aam
adc
add
xchg
inc
mov
testb
mov
sbb
jae
push
incl
outsb
jg
or
shr
aam
fscale
and
sti
mov
pop
aam
lret
sbb
out
cmpsb
adc
in
lods
push
bound
cmp
in
ljmp
movl
or
andl
mov
adc
or
negl
in
fs
add
divl
je
aaa
jno
rcrb
dec
and
shl
decb
xor
pop
dec
shlw
push
cmp
aas
mov
mov
dec
loop
ffreep
push
adc
or
push
mov
cli
push
push
adc
aad
dec
jg
jp
xchg
mov
mov
test
push
add
xchg
pop
mov
adc
add
cmp
jg
cmc
or
cli
and
fsubrl
out
sub
xchg
mov
sbb
sbb
dec
mov
rcrl
push
cmp
and
inc
dec
xchg
arpl
mov
pop
or
leave
rorl
dec
and
gs
repnz
ja
add
inc
popa
cld
push
push
and
shrl
mov
dec
xor
xchg
xor
sbb
pop
loopne
pop
push
and
sub
jmp
jo
mov
adc
subl
mov
bnd
adc
cs
pop
and
rep
outsb
sbb
js
sbb
call
add
mov
outsb
bound
in
lods
add
test
test
jno
push
inc
loope
dec
and
addb
fdivp
xchg
ss
pop
push
xor
sahf
dec
sbb
negb
cwtl
pop
and
mov
repnz
imul
pushf
push
adc
sub
int3
ds
or
push
cmpl
dec
cli
lea
popf
and
mov
mov
and
call
and
cs
incb
outsl
jnp
mov
mov
or
xchg
or
mov
cli
xchg
test
fildl
or
outsb
xchg
sub
mov
cmpsl
xchg
aas
ja
push
fiaddl
push
repz
jnp
xor
shrb
cmpb
xor
add
lret
add
jb
inc
mov
cmc
xchg
jle
xchg
divb
push
int
mov
ja
pop
sbb
lret
add
out
push
push
adc
jp
fsubrl
dec
test
dec
and
rcrw
add
pop
loopne
cmc
fs
das
cmp
mov
cmp
test
xchg
cmp
or
xor
mov
dec
inc
rclb
test
inc
push
loopne
cmp
in
fmull
cmp
js
sbb
xchg
lds
jmp
jns
cltd
insb
xor
popf
jb
sbb
mov
pushf
or
enter
or
xor
js
ljmp
fildl
pusha
or
jnp
fcmovbe
adc
icebp
push
add
ss
iret
mov
add
jg
or
aas
stos
xor
jo
sbb
jmp
mov
loop
cmpsb
scas
sbbl
cwtl
inc
icebp
rolb
push
rolb
jle
call
out
jnp
pop
loope
outsb
dec
dec
mov
icebp
inc
xor
out
movsl
mov
fstps
push
loopne
dec
enter
dec
mov
ret
mov
stos
lea
roll
mov
cs
adc
pop
insl
xchg
dec
arpl
subl
popa
mov
pop
mov
dec
xchg
mov
addb
or
push
xchg
jp
pop
fcmovnbe
mov
push
std
subb
rcll
adc
out
jae
rclb
cmc
rcl
mov
xor
mov
mov
enter
imul
sbb
dec
loope
cmpsb
mov
dec
pusha
mov
sar
pop
sub
es
scas
mov
and
adc
movsl
mov
xor
lcall
sbb
rcll
pop
movq
ret
ret
add
in
push
inc
cmp
dec
shlb
xor
push
adc
mov
addl
lcall
xor
mov
addr16
pop
das
push
sbb
xchg
dec
in
rcl
mov
andl
frstor
xchg
ret
lahf
mov
enter
js
sbb
pop
pop
pop
jo
movsb
add
outsl
jo
in
add
jo
inc
lcall
popa
adc
push
addb
scas
push
mov
movsb
adc
ret
inc
push
shlb
insl
add
inc
test
dec
mov
int
ljmp
mov
inc
jecxz
mov
rolb
adc
cli
sub
sub
in
or
andb
mov
mov
xchg
push
cmp
adc
mov
and
mov
das
sub
addl
arpl
ret
xchg
sub
fldcw
enter
lds
ss
push
rorb
mov
dec
pop
test
sub
fbld
push
or
inc
mov
stos
cmp
pop
fiaddl
jo
jle
pop
mov
xorb
sub
rolb
jo
popa
add
xchg
int
cmpsb
shrb
or
mov
push
pop
lea
in
xchg
pop
sbb
xchg
inc
sarb
cmc
mov
fdivr
sub
scas
add
orb
orl
mov
lds
dec
movsb
out
mov
movsl
in
jle
cli
dec
cmp
mov
sub
lcall
push
push
bound
loopne
fwait
lea
mov
jb
xchg
loope
dec
pop
inc
jno
sub
pop
mov
jo
fstpt
add
inc
inc
mov
pop
or
mov
addr16
notb
push
mov
xor
sarb
push
loopne
xchg
stos
aam
gs
sbb
xchg
mov
sub
insl
in
and
popf
or
stos
lcall
dec
pop
lods
lret
or
sub
dec
mov
fadd
dec
mov
sub
outsl
je
ror
enter
jbe
dec
pushf
mov
cmp
jp
sub
testb
std
xchg
lcall
outsb
adc
mov
testl
ret
mov
push
test
movsb
adc
add
data16
je
clc
aam
jbe
xor
rcll
mov
insb
sub
lcall
dec
enter
call
push
push
loopne
push
std
stos
xchg
adc
push
aam
pop
into
mov
arpl
push
jb
mov
adc
or
flds
push
or
jns
fs
jg
inc
and
scas
push
lret
mov
leave
sbb
test
push
xor
in
mov
mov
adc
sub
and
xlat
push
icebp
xor
nop
pusha
mov
hlt
popa
pusha
cmc
or
push
push
sbb
dec
mov
loop
push
out
pusha
adcb
sub
test
mov
les
mov
xor
mov
aaa
loopne
cld
mov
es
enter
test
pop
or
sub
lods
shrb
inc
filds
add
insb
popf
push
push
xchg
sbb
xor
stc
push
hlt
push
pop
out
jno
mov
adc
addr16
inc
xor
or
mov
mov
incb
filds
adc
push
in
cli
xlat
xchg
out
xchg
mov
adc
aaa
jl
lahf
and
bound
xor
das
pop
filds
adc
sub
fdivrl
mov
lret
dec
mov
sub
scas
cmpsl
mov
sbbb
sub
and
push
clc
mov
or
es
scas
ja
jg
adc
hlt
pushf
pop
xor
mov
pop
js
scas
mov
xor
js
add
add
loope
sub
mov
xchg
xchg
stc
inc
or
jb
std
jge
mov
pop
gs
cmp
dec
mov
enter
xchg
push
pop
hlt
mov
mov
pop
es
adc
push
out
gs
push
lods
movsl
mov
das
push
loopne
lahf
push
cli
ret
push
movsb
bndstx
cmpsb
mov
push
ficompl
lret
mov
add
jge
icebp
xlat
mov
or
adc
sbb
inc
xchg
data16
lds
jno
gs
cmpsl
jl
pop
hlt
inc
je
loope
push
cmp
in
imul
ret
icebp
aam
pop
movsb
in
shl
pop
jg
test
dec
clc
or
dec
and
mov
dec
dec
jb
xchg
incl
pop
mov
test
cld
xchg
add
xor
pop
call
jg
cmp
inc
sbb
mov
iret
inc
add
xor
les
aaa
subb
sahf
mov
adc
mov
lds
rolb
subb
push
rcll
mov
out
push
and
fists
scas
mov
shl
sub
cmc
pop
push
negb
add
movsl
dec
jmp
pop
jle
jg
adc
jmp
cmp
call
xchg
xor
adcl
loope
mov
mov
test
int3
fbstp
clc
daa
or
jno
add
lea
inc
cld
addr16
push
pop
pop
adcl
and
notl
sbb
or
fcoms
pop
pushf
outsl
mov
mov
inc
jecxz
stos
xor
cmp
push
mov
movsb
jbe
pop
pop
sub
dec
cld
push
sbb
add
push
scas
into
test
adc
adc
rorb
add
call
cs
mov
or
adc
add
aaa
out
push
pop
sub
mov
push
pop
jecxz
pop
push
pop
mov
dec
pushf
ret
mov
pop
pop
rcrl
mov
and
or
aam
std
mov
push
shll
or
test
mov
arpl
add
add
add
sub
fiaddl
cld
mov
out
and
ss
cmp
mov
mov
add
xchg
add
lcall
call
popf
add
cmp
mov
loop
jle
sbb
imulb
ret
jno
push
jne
pop
out
inc
sub
push
outsl
lret
or
pop
pop
popa
aas
cld
int3
mov
push
sub
shrl
pop
mov
mov
call
inc
mov
fs
out
adc
outsb
subl
sub
jl
push
xor
je
inc
sub
lods
lcall
dec
or
ror
das
mov
mov
unpckhps
jg
adc
inc
dec
push
scas
sarl
fs
pop
inc
add
data16
cs
lret
sahf
mov
cld
xchg
xor
push
inc
push
outsl
mov
pop
aam
push
sub
sti
inc
mov
das
incb
mov
roll
dec
xchg
cld
dec
movsb
xchg
inc
outsl
pop
insl
sub
mov
sbb
pop
das
xchg
jmp
movsb
cmpl
les
adc
xlat
addl
push
mov
sub
icebp
mov
movsb
int
call
jnp
xor
nop
ja
insl
pop
and
push
push
test
xor
ja
or
loopne
pushf
cmpsb
dec
pop
cmc
movsl
nop
mov
jecxz
jp
icebp
inc
pop
pop
push
mov
out
aas
cli
pop
pop
dec
ljmp
inc
in
pop
xchg
icebp
dec
lahf
and
or
in
jl
ja
and
push
test
mov
mov
sbb
mov
cmpl
push
cmpsb
cmp
xchg
jg,pt
pop
jle
out
mov
push
xor
aad
mov
into
js
pop
cli
jbe
sbb
dec
pop
std
lock
xchg
test
or
mov
or
aas
fsub
decl
cli
orb
sub
sbb
cmp
inc
sti
repnz
add
xchg
sarl
out
test
and
andl
jnp
lock
daa
addb
daa
inc
pusha
push
call
rcrl
push
pop
pusha
ret
sub
sbb
sub
cld
fdivl
addl
or
xchg
pop
mov
incb
and
adc
ljmp
jmp
jnp
xchg
lods
cld
sbb
mov
inc
call
xor
sbb
add
or
cs
or
and
sahf
and
or
sbb
add
daa
subl
jle
push
jle
test
aad
xor
stos
ds
mov
mov
adc
inc
xor
jb
sub
ljmp
orb
and
jge
jne
xor
inc
inc
mov
stos
hlt
scas
in
inc
std
es
aas
push
or
lcall
mov
dec
sbb
add
and
into
adc
sub
daa
xor
sub
aad
inc
mov
hlt
jl
shlb
jns
push
lahf
or
mov
jle
adc
add
mov
movsl
jb
dec
testl
xor
jge
repnz
jnp
mov
xchg
rol
jg
loopne
lahf
push
js
clc
xchg
js
add
push
lcall
mov
ret
or
push
jae
add
mov
dec
mov
or
push
mov
aas
leave
jg
mov
loopne
fstp
and
mov
cmpb
lods
push
xor
leave
addr16
repnz
mov
ja
push
sbbb
sbb
xchg
addb
jne
xor
gs
or
dec
mov
inc
push
cmc
loope
gs
inc
mov
adc
jl
mov
outsb
ret
push
insl
dec
jl
sti
inc
call
lret
jl
mov
and
adc
aaa
sbb
cs
jne
xor
scas
loop
sbb
rorb
jbe
jns
mov
aad
mov
add
fwait
push
fwait
add
pop
outsl
xor
insl
loopne
and
jns
outsl
ljmp
inc
add
insl
bound
movsl
xor
xlat
push
pusha
xchg
mov
xor
pop
loop
or
jl
xchg
inc
ret
fdivp
sbbb
lock
les
ljmp
adc
pop
inc
mov
es
mov
scas
imul
jle
mov
sub
mov
sbb
mov
mov
testb
mov
xchg
or
gs
repnz
lock
adc
push
xchg
mov
icebp
sbb
lahf
add
leave
cmp
push
xor
fstps
mov
aas
push
orl
push
cmp
gs
test
jecxz
jge
subb
lods
or
and
pop
aam
sub
sub
nop
add
xchg
jecxz
std
aas
clc
mov
outsb
sub
push
inc
xor
enter
or
int3
or
outsl
daa
push
mov
mov
rcr
sahf
adc
shlb
jo
xor
xchg
mov
mov
outsb
or
outsb
sub
mov
sbb
incl
cmp
out
xchg
add
push
or
pop
or
add
adc
xchg
inc
fildll
gs
cwtl
mov
cmp
jmp
loopne
push
movsb
out
loop
ja
inc
scas
inc
xor
add
aaa
outsb
icebp
inc
out
fildll
or
std
jg
in
xlat
insb
jp
dec
int
test
movsl
out
test
mov
adc
add
test
or
xchg
push
pop
jbe
ljmp
scas
clc
fs
lcall
int3
hlt
pop
dec
call
xchg
sahf
stc
adc
repz
fs
repz
hlt
lret
cld
leave
cmp
push
xchg
jnp
lahf
pop
nop
mov
ret
push
cli
mov
dec
jo
cli
mov
aaa
or
mov
sbb
rcrb
aaa
sub
mov
push
decl
jcxz
xchg
imul
pop
add
adc
daa
sbb
xchg
xor
addr16
sub
ljmp
clc
add
js
out
in
sub
xor
outsb
js
xor
jg
arpl
fiaddl
xchg
dec
dec
inc
add
pop
clc
iret
mov
out
enter
pop
jge
in
roll
outsl
sub
sahf
pusha
push
hlt
insl
inc
add
loope
mov
and
or
inc
adc
adc
insl
sub
mov
jbe
dec
ret
sbb
jo
jmp
scas
aad
ds
imul
scas
jo
in
lret
lcall
incl
sbb
pop
repz
mov
mov
xor
add
lods
popa
testl
addl
lock
inc
shlb
es
sbb
and
repz
call
ret
jecxz
daa
dec
inc
test
iret
incl
aas
xchg
add
popa
out
pop
cmp
push
bswap
lret
xor
ret
mov
dec
cli
movb
add
popa
cmpsb
lods
xchg
inc
sarl
jg
cld
lock
and
out
inc
adc
cmpl
pop
test
fiadds
loope
xchg
adc
mov
sbb
and
out
cmc
mov
push
add
jle
jg
pop
push
sub
mov
out
mov
lods
outsl
mov
adc
jb
daa
jecxz
or
sbb
or
lcall
in
sbb
xor
xchg
jns
sub
loope
and
pop
or
loop
mov
mov
or
pop
xchg
cld
mov
addr16
sbb
fwait
add
in
stc
jns
sbbb
push
inc
pop
cwtl
adc
loopne
nop
add
xorb
fs
pop
jmp
lret
cmc
icebp
pop
jae
loope
call
sub
mov
add
stos
cmpsb
pop
aas
cmp
in
push
push
and
rcll
mov
inc
jg
jge
xor
add
xor
mov
pop
mov
xchg
lock
lods
jg
inc
aam
mov
insl
push
insl
and
pusha
imul
movsl
in
cmp
gs
mov
lcall
dec
lds
leave
pop
and
adc
das
cmpb
pop
cmp
push
sar
in
and
in
loopne
add
sbb
in
dec
sub
dec
decl
sbb
movb
repnz
dec
dec
ret
cmpb
jle
adc
call
pusha
add
loope
gs
stos
rcr
push
cli
add
add
hlt
ret
dec
iret
ret
aad
xchg
aam
in
insb
sbb
adc
imul
es
hlt
aam
xchg
outsl
sbb
adc
daa
push
andl
imul
or
add
icebp
test
movsl
xor
inc
cmpl
adc
icebp
insl
mov
rolb
dec
test
add
mov
jo
mov
push
push
enter
test
fcomps
xchg
imul
inc
mov
sub
cmp
adc
das
adc
sahf
cmpsl
ljmp
cwtl
dec
lcall
fadds
xor
mov
pop
and
mov
mov
add
cli
lock
dec
ret
shr
sbb
fsubrs
orb
cmpsl
xchg
or
mov
cmpsl
pop
das
add
std
xchg
out
push
mov
cmc
jg
cmp
mov
and
or
sahf
andb
xchg
aaa
add
nop
xchg
jno
loop
xchg
mov
xchg
jle
xchg
ljmp
insb
imul
dec
dec
sbb
mov
adc
pop
lds
ljmp
mov
loop
aaa
inc
sbb
jo
into
pushf
popa
sbb
push
stc
cmp
rorb
inc
jg
dec
push
aad
push
mov
push
leave
dec
push
ljmp
sbb
mov
jo
xor
es
push
les
roll
scas
adc
jge
cli
xor
jmp
repnz
pop
loopne
sbb
push
push
xor
rcrb
test
sub
adc
add
pop
in
inc
cmp
test
or
cmp
lea
rcr
popf
cltd
insb
adc
inc
in
cmp
adc
daa
jl
xor
iret
adc
andl
adc
mov
push
ss
inc
adc
vmaxsd
sbb
xchg
or
mov
and
xor
cmp
mov
pop
mov
and
callw
in
jbe
or
test
jge
pusha
outsl
sti
mov
and
lret
fcmovnb
andl
add
mov
push
adc
cs
ret
dec
xor
sub
dec
int
enter
mov
dec
test
mov
cltd
lods
inc
ret
cmp
add
les
and
test
shrl
outsl
or
inc
rcrb
ret
cwtl
mov
and
loop
or
shll
ret
loope
jecxz
andl
js
mov
and
or
lea
inc
fsts
xchg
shrb
iret
lods
icebp
and
mov
testl
push
sarb
ds
jl
xchg
data16
jl
jg
or
lds
xor
cs
scas
cmp
into
and
enter
xchg
and
jae
and
mov
mov
sbb
lock
mov
cli
sub
cmp
repnz
mov
sbbl
jecxz
sub
fbld
or
jp
leave
insb
sub
jg
xchg
inc
test
jg
mov
iret
data16
rol
and
in
push
aad
repz
push
push
dec
mov
ja
adc
cmpl
fbld
inc
xor
les
inc
and
jbe
mov
mov
out
outsb
add
sub
xor
mov
mov
cmp
fwait
sub
bound
push
scas
out
inc
xchg
and
sbb
inc
cmp
clc
mov
dec
push
iret
dec
aad
lods
daa
cltd
or
sbbb
mov
push
cmc
sbb
xchg
out
sbb
fildl
adc
sbb
out
sar
mov
lcall
aam
pop
add
js
push
sub
mov
and
xor
js
fcomps
daa
mov
pop
scas
sub
add
or
hlt
sub
call
mov
fistpll
mov
sub
mov
jl
inc
mov
adc
add
jbe
push
mov
je
scas
pop
push
dec
and
xchg
jle
mov
lea
pushf
mov
gs
add
cmp
dec
test
xor
xchg
pop
sub
add
pop
inc
jnp
add
pop
push
mov
or
mov
aam
pop
xlat
mov
cmp
adc
in
mov
mov
scas
dec
int3
pop
movsl
into
cmp
rorl
adc
pusha
out
pop
adc
dec
or
mov
add
in
push
jl
and
jne
add
add
fimuls
jnp
mov
mov
xchg
sub
loope
mov
and
add
xchg
movb
dec
test
adc
repnz
pop
fcoms
insb
pop
inc
fs
and
popa
xchg
popa
jp
cmp
gs
xorb
mov
daa
push
or
push
popa
js
add
inc
stos
dec
in
add
insl
jl
cwtl
sub
jbe
into
jno
dec
mov
out
std
mov
popa
lods
mov
mov
ret
rcrb
cmpsl
xchg
lea
fnstcw
js
test
popa
sub
aaa
orb
rcrl
mov
cmp
push
jbe
adc
xchg
mov
fstpt
jns
ss
sbb
sub
sbb
mov
std
push
fisttps
arpl
and
mov
insb
jnp
cs
sahf
mov
cmp
mov
mov
cltd
dec
loop
sub
add
imul
ds
push
jmp
sbb
mov
jb
test
pop
lahf
or
or
enter
ds
xchg
adcl
je
mov
push
pop
mov
dec
dec
push
sub
dec
in
sbb
insb
cmp
ret
js
lahf
int3
add
movsl
push
ud2
inc
xlat
push
xchg
jmp
nop
adc
adc
sahf
mov
insl
sub
or
xchg
js
jmp
popf
adc
xchg
xor
push
cmpsb
pop
or
fldcw
adc
testl
daa
mov
lods
imul
push
stc
roll
das
dec
mov
loop
dec
sbb
dec
mov
xor
lret
ds
sub
jno
cwtl
adcl
mov
sub
aas
mov
stos
test
or
mov
jns
push
pop
lret
repz
mov
mov
andl
jne
fdivp
sub
dec
xchg
repnz
into
andb
sub
mov
mov
sub
mov
mov
outsl
stos
lock
add
adc
add
cmp
pop
lods
sbb
mov
nop
adc
loop
pop
adc
loope
cmpsb
and
cmp
bnd
add
push
lret
lds
sbb
add
cmpsl
lods
ds
mov
jae
ss
ret
mov
or
mov
xorb
fdiv
subl
pushf
lods
je
xor
je
popl
mov
mov
mov
or
pushf
loop
and
add
mov
enter
js
arpl
call
nopl
mov
dec
clc
xchg
jbe
xchg
adc
iret
cmc
scas
scas
insb
mov
dec
aaa
pop
das
data16
popf
mov
arpl
dec
divl
clc
push
stos
enter
inc
adc
xchg
das
xchg
inc
repnz
mov
shll
add
mov
adc
jle
test
or
cmp
outsb
aam
nop
aaa
adc
pop
sbb
cmp
sub
add
jp
ffree
adc
fbstp
in
imul
xchg
xor
movsl
mov
sub
scas
inc
test
jg
xchg
mov
and
les
imul
or
inc
movsl
orl
subb
jle
enter
ret
adc
sbb
adc
mov
mov
inc
pop
mov
or
outsl
push
roll
mov
push
scas
repz
cs
dec
lods
rcl
inc
adc
sbb
stc
xchg
xchg
out
pmulhuw
ret
fiadds
shrl
stos
push
jns
call
mov
adc
or
adc
adc
je
pop
add
and
dec
add
dec
add
jge
aas
jl
fucomi
sbb
push
pop
pop
loope
das
hlt
pop
mov
add
fadd
lret
push
loop
test
cmpsl
test
cmp
xchg
sub
or
jo
or
insl
xorl
xor
sub
int
jge
sbb
sbb
adc
mov
repnz
sub
mov
adc
dec
lret
mov
imul
jg
jg
or
roll
sub
mov
jbe
cmp
stos
or
filds
in
arpl
mov
or
enter
or
lods
push
pop
jae
je
sbb
mov
in
cmp
das
pop
dec
xchg
hlt
push
or
cmp
sbb
inc
xchg
ja
sahf
inc
lcall
pop
pop
mov
clc
mov
in
or
jne
pop
cltd
shlb
push
inc
jge
lea
mov
sbb
ds
xchg
xor
dec
inc
xchg
or
mov
sub
lds
pop
dec
roll
and
insl
leave
shr
mov
rcll
lock
vmovss
inc
cmpsl
inc
ds
sar
push
lock
cmpl
icebp
pushl
or
cmp
leave
or
push
popa
pop
dec
repz
mov
mov
cmpsl
data16
ret
sahf
icebp
mov
dec
mov
push
jl
ret
imul
rcrl
cmpsb
push
xchg
push
jnp
xchg
sub
jle
pop
add
je
sub
xchg
arpl
jno
sahf
xor
cmpsl
pop
or
mov
lret
jno
incl
dec
hlt
sub
rcr
faddp
adc
mov
cld
mov
jle
pop
icebp
inc
add
push
adc
std
push
cmpsl
pushf
pop
cmp
xor
ljmp
push
lods
jo
mov
adc
jg
into
jecxz
std
sub
call
in
push
sub
fnstenv
jno
clc
jg
inc
pop
aam
dec
cltd
inc
jbe
push
cmp
xchg
stos
aam
loopne
mov
sub
dec
aas
push
mov
mov
cwtl
dec
cmp
mov
es
push
pop
addr16
sbb
fbld
call
icebp
sbb
aaa
in
cltd
fbld
adc
add
add
fwait
push
jae
orl
mov
lods
and
std
pop
mov
inc
cld
pop
js
dec
rcrb
jmp
sub
or
dec
bound
mov
xor
imul
andb
mov
aam
mov
jg
mov
inc
insl
shlb
xchg
add
shll
loop
pusha
or
pop
mov
mov
dec
and
cmc
jno
mov
jmp
sarl
mov
ret
loopne
mov
outsb
scas
jle
test
and
jbe
mov
and
popf
mov
test
xor
cmp
xor
jo
js
cwtl
es
sub
jmp
cmp
mov
js
sub
adc
pop
mov
and
leave
fadds
sbb
cmpb
xchg
pushl
stos
jnp
dec
push
sti
popa
popa
inc
jbe
adc
icebp
js
imul
mov
sbb
jecxz
or
jle
adc
xor
xor
mov
mov
lea
sub
enter
jg
mov
mov
xor
jne
test
push
add
jle
fadds
adc
hlt
lahf
push
bndstx
mov
call
or
xor
subb
in
ret
xchg
jg
push
inc
dec
lea
push
push
clc
cli
push
jb
push
cvtps2pd
adc
scas
xor
fcoml
es
or
test
into
inc
std
jg
sti
push
adc
adc
add
add
cmp
mov
mov
dec
out
clc
adc
mov
lahf
mov
mov
movsl
pusha
data16
inc
inc
jge
loopne
outsl
sub
das
xchg
mov
cmc
jp
dec
stos
dec
pop
or
sub
shrl
fwait
pushf
mov
das
out
mov
imul
pop
dec
das
adc
fcmovbe
shrl
repnz
inc
ret
mov
xchg
dec
ds
sub
push
push
pop
push
gs
icebp
sbb
sbb
int3
bound
je
jo
dec
lcall
or
gs
pop
lea
data16
push
fiadds
jg
scas
push
mov
jl
jle
sbb
lea
subl
jg
cmp
inc
les
out
inc
mov
out
jbe
and
mov
loopne
fnstenv
pop
clc
pop
leave
inc
jle
push
add
pop
or
rcll
dec
jns
lock
adc
cmp
mov
lods
xchg
je
add
mov
and
mov
cmp
xchg
add
sti
and
wrmsr
inc
sbbl
shrl
into
mov
adc
or
or
inc
add
add
and
cmp
and
push
push
add
pop
iret
clc
add
jns
sbb
je
push
inc
ret
inc
xchg
mov
and
aas
test
mov
lock
jg
mov
pop
jg
push
and
pop
pop
mov
or
mov
inc
sub
mov
sbb
hlt
das
es
pop
add
and
or
sbb
cli
jae
xor
sbb
jno
jle
jg
push
mov
cmp
xchg
push
cmp
mov
push
jl
adc
shrl
das
insb
mov
jo
inc
rorb
sub
or
cwtl
shlb
dec
push
fadds
ss
mov
stos
int3
add
inc
dec
sub
cli
dec
clc
add
xor
divb
mov
inc
sbb
or
sbb
mov
or
mov
lds
cmp
stc
cmp
xchg
inc
in
mov
rolb
or
pop
adc
daa
movsb
outsl
mov
and
or
cmpsb
ljmp
inc
mov
push
sbb
dec
xchg
and
dec
pop
loope
iret
and
adc
fistps
daa
je
push
sub
clc
cmc
nop
sub
nop
cpuid
call
jg
lcall
push
pop
xchg
mov
mov
pop
jle
and
mov
adc
dec
fildll
movsl
dec
cltd
xchg
mov
jl
or
insb
ss
mov
out
fs
pushf
icebp
mov
loope
sbb
or
mov
mov
test
jbe
icebp
push
or
popa
jbe
lds
dec
mov
mov
sbb
fisttpll
pcmpeqd
rclb
mov
sbb
xor
js
lea
je
or
inc
cs
nop
dec
les
fsubrl
xchg
add
sbb
cmp
incb
jge
dec
cld
dec
negl
insb
or
ljmp
mov
add
icebp
lea
out
adcl
sub
lock
or
shrb
push
cmpsl
cmc
aaa
shrl
mov
insb
mov
arpl
pop
fistps
jg
add
xor
test
push
xchg
fistps
test
or
push
jge
dec
xchg
add
pop
int
loopne
jnp
lahf
das
inc
aam
sub
and
add
filds
push
je
mov
xor
inc
movsb
mov
stos
aad
loopne
push
sub
mov
jae
addr16
inc
xor
lods
lock
fisubl
testb
lock
add
repz
cmp
add
and
jge
mov
dec
std
mov
das
mov
cmc
add
add
push
add
jge
iret
clc
adc
addb
sbb
cld
je
aad
mov
add
pusha
jo
xor
dec
std
xor
or
inc
clc
inc
push
dec
leave
mov
cmp
mov
ja
or
cs
hlt
mov
dec
mov
pop
jg
aaa
lock
and
add
sub
jg
sbb
xchg
mulb
popa
or
xchg
mov
fistpl
or
mov
adc
jle
lret
lods
aad
xchg
mov
sbb
test
mov
int
daa
std
mov
mov
mov
popf
testl
jl
frstor
lret
enter
pushf
push
std
jl
sbb
sbb
aaa
lcall
icebp
jmp
dec
aam
inc
adc
enter
fldcw
adc
adc
movb
mov
inc
imul
add
inc
xor
sub
and
out
jp,pt
pop
std
cmpsb
xchg
xchg
jecxz
test
inc
mov
repnz
adc
xor
repz
xor
enter
mov
stos
push
jge
sbb
pushf
mov
lret
add
inc
ret
rcrl
test
fcomip
mov
add
bound
push
add
in
sub
jle
push
das
test
pop
mov
ret
sub
pop
jecxz
notb
xchg
je
xor
push
push
mov
cmc
or
out
jo
adc
mov
test
pop
inc
gs
call
mov
inc
jle
mov
cmp
xor
mov
jo
xchg
call
imul
int
int
or
mov
cli
aaa
xor
xchg
addr16
pop
std
jae
xchg
repz
callw
fsub
mov
pop
cmp
dec
add
into
pop
push
in
add
sbb
mov
sub
testl
fdivl
add
push
inc
pop
cld
pop
ficompl
stc
push
lahf
arpl
fisttps
ret
or
aad
sbb
rorb
shll
jo
jl
enter
mov
xor
cmp
iret
mov
pop
jne
in
push
xchg
dec
cld
testl
and
dec
je
in
push
scas
cmp
enter
jo
pop
int3
mov
pop
pop
clc
rcrl
mov
scas
mov
cld
in
inc
sub
loope
inc
test
and
mov
xchg
aad
lret
jns
sbb
mov
push
fcmovu
jle
mov
scas
std
push
and
fwait
jl
adc
outsl
adc
mov
mov
movsb
xchg
cli
pusha
aas
sarl
add
mov
xchg
dec
loopne
subl
cmp
pop
mov
cli
movsb
mov
inc
jg
sub
and
jecxz
mov
clc
mov
mov
xchg
jmp
dec
pop
and
push
xor
jl
icebp
icebp
out
pop
aas
add
inc
push
aas
or
in
pop
loopne
push
int3
lock
testb
sub
mov
mov
dec
mov
vunpcklps
mov
insl
dec
pop
jp
xor
leave
cmp
inc
jbe
pop
push
cli
or
movsb
int3
mov
mov
add
push
xor
loop
and
sub
faddl
pop
in
adc
nop
pop
insl
and
push
fmull
xor
or
loop
dec
sub
lea
sbb
xchg
mov
jb
lea
mov
jl
sub
andb
shrb
cmpb
xchg
stos
out
fnstsw
enter
xchg
ss
add
add
ljmp
loop
inc
add
inc
ljmp
lcall
inc
and
bound
mov
pop
test
js
mov
pusha
clc
and
mov
insb
sbb
pop
add
adc
nop
sub
dec
xorl
push
or
outsl
ret
test
fildl
mov
adc
adc
jle
mov
mov
jge
adc
cmpb
push
loope
jl
clc
mov
adc
and
leave
pop
aas
lods
jnp
ja
popa
test
hlt
test
jo
sbb
pop
frstor
test
xor
jbe
mov
sbb
addl
and
sbb
pusha
or
icebp
push
popf
sbb
ror
dec
cmpb
loop
sub
dec
push
and
cmpsb
movsl
stc
scas
jb
lock
or
lods
fisttpl
and
cs
jecxz
das
into
mov
jp
cmp
cmp
je
ss
adc
pusha
mov
xor
mov
push
aam
std
fld
in
or
mov
inc
loope
out
out
pop
cli
and
mov
rorl
pusha
dec
jb
adc
ljmp
pop
mov
in
jle
or
dec
rcrb
fs
ds
xor
shl
movb
loop
fsubrl
sbb
ret
mov
rorb
sub
test
mov
out
push
cmp
fnsave
hlt
push
adc
jae
jge
fsubrp
push
fwait
pop
mov
push
lret
incl
das
or
push
orl
fcoml
fidivl
loopne
loopne
sub
or
int
iret
out
or
xchg
pop
insl
jnp
mov
inc
bound
jl
loopne
jo
mov
fwait
sti
cli
nop
jb
mov
je
pop
sbb
pushf
sub
aad
inc
mov
das
cmpl
shlb
insl
scas
mov
mov
loopne
add
or
cmpsb
pop
mov
loopne
mov
pop
mov
imul
popa
out
outsb
les
repz
sbb
fnstsw
xlat
repnz
mov
cmp
pop
inc
mov
mov
icebp
lods
lret
jge
jge
loop
push
inc
or
in
and
test
or
mov
insb
adc
rcrl
dec
xchg
dec
lock
les
adc
lods
in
movsb
ja
sub
dec
fsubs
adc
insb
push
out
adc
neg
sub
outsb
push
xchg
dec
loopne
mov
dec
scas
mov
adc
ljmp
aad
adc
pop
data16
or
fisttps
cmp
mov
test
push
aad
sbb
scas
sbb
pop
stos
test
out
ss
mov
imul
fdivl
les
lock
js
outsl
hlt
lods
cmp
adc
in
cmp
pushf
pushl
mov
adc
mov
lahf
sub
icebp
inc
and
xchg
xchg
pop
cmp
adcb
cmpsb
ja
sub
rorb
pop
jecxz
andb
sub
mov
imull
loopne
mov
cld
roll
push
incb
rcr
cmpsl
or
dec
adc
and
dec
mov
fsubl
cld
shlb
addb
das
ret
jne
sub
std
add
xchg
pop
push
pop
mov
xor
jbe
and
sbb
jnp
filds
jp
mov
dec
dec
add
ret
add
fs
mov
mov
mov
dec
or
test
mov
push
or
or
xchg
outsb
mov
jl
int3
and
mov
adc
lods
loop
mov
adc
enter
mov
test
xor
test
cwtl
mov
cmp
mov
jmp
add
enter
iret
clc
test
jbe
cmp
pop
je
ret
std
lahf
clc
lcall
push
jbe
notb
or
cmp
aas
sub
adc
fs
aas
mov
mov
and
pop
mov
pause
push
adc
jg
lock
pop
fldt
decl
jnp
sbb
ffree
and
stc
xchg
and
mov
aad
cwtl
lea
mov
pusha
sbb
popa
mov
pushl
push
or
sarl
das
popa
pop
sub
jo
fwait
mulb
or
adc
cmp
push
sbb
mov
jb
rorb
loopne
pop
inc
data16
and
or
cmp
arpl
ret
adc
pusha
fisubrs
sbbb
sbb
insb
add
or
xlat
inc
int
out
mov
jbe
push
leave
dec
push
add
sahf
push
stos
testl
ffreep
mov
cs
inc
shrl
mov
xchg
mov
and
fnstsw
arpl
mov
mov
out
call
jae
cltd
jl
std
cmp
ffreep
xor
inc
notb
mov
add
movsl
cmc
pop
fbstp
les
out
xchg
sub
cwtl
push
push
or
mov
fs
or
fidivs
pop
inc
push
add
or
push
outsl
cmp
inc
repnz
sbb
mov
cmc
sbb
pop
in
jl
icebp
dec
mov
push
adcb
std
pop
inc
loop
aam
out
std
push
mov
daa
mov
sbb
dec
dec
das
into
aam
jnp
xchg
fwait
rcrb
pushf
aas
ret
sub
out
and
movb
clc
sahf
mov
aam
lock
and
push
lret
dec
jns
dec
in
loop
stos
repnz
xchg
cmc
frstor
sbb
shll
cmpsl
mov
cmp
stos
mov
orb
test
add
sbb
lcall
adc
adc
adc
scas
repz
and
jle
aas
xor
mov
mov
add
jmp
cmp
and
mov
aas
xchg
mov
pop
xor
into
push
cmp
add
hlt
cmp
cld
cmp
imul
xchg
add
pop
aas
addl
call
cmp
orb
jg
jo
testl
push
mov
lret
adc
mulb
jg
stc
popa
sti
mov
outsb
mov
scas
xchg
aam
mov
xchg
dec
icebp
negb
fdivs
add
mov
push
sub
psraw
jno
icebp
xor
inc
xchg
icebp
mov
cmp
shrb
pop
pop
mov
enter
subb
push
ja
cltd
pop
int3
loopne
mov
mov
jne
das
incl
pop
bound
sbb
add
jo
xor
xchg
pop
ds
movsl
push
sbb
std
sahf
mov
mov
jnp
dec
inc
add
cmp
ljmp
hlt
jl
dec
push
mov
sbb
das
mov
nop
test
cmp
faddl
sub
lods
ss
movsl
or
dec
punpcklbw
popa
sti
pop
mov
rolb
je
or
cmpsl
lock
mov
fcoms
js
dec
add
test
js
repnz
loopne
push
jnp
pushf
pop
js
iret
jbe
pop
push
lds
push
and
and
xor
ja
adc
stos
or
push
xor
sub
jle
loope
push
mov
arpl
aas
add
or
or
jmp
testl
int3
push
frstor
and
fidivs
jle
and
or
dec
mov
pop
jns
mov
xor
xlat
dec
rorb
inc
mov
js
cwtl
mov
iret
insb
or
loopne
test
mov
mov
mov
into
js
jp
jns
adc
dec
cmp
fisttpll
or
call
lcall
add
rcr
mov
and
mov
xchg
mov
lock
cld
in
ss
xchg
cmc
orb
ret
incl
cmp
fstl
xbegin
and
push
popf
adc
icebp
inc
mulb
fcompl
fcoml
arpl
hlt
cmp
sbbb
push
and
mov
fwait
out
add
pop
cmp
movsb
adc
test
ret
xchg
insl
cmc
xchg
test
cs
lea
xchg
sarb
jg
cmp
or
push
icebp
data16
test
lock
lea
mov
xchg
sbb
cwtl
push
inc
push
jo
sbb
clc
es
sbb
adc
daa
mov
fists
lock
pushf
jae
pop
add
fisubrs
icebp
frstor
lea
lods
pop
dec
ss
or
mov
sbb
cltd
lret
push
leave
stc
push
add
dec
pop
and
xlat
inc
orb
daa
mov
fs
lock
pop
bswap
popf
call
subl
loopne
inc
cmp
mov
seto
ss
pop
sbb
mov
cmp
mov
and
add
push
xchg
stos
mov
and
scas
xchg
or
and
test
inc
dec
repz
inc
pushf
cmp
sub
mov
adc
sahf
inc
mulb
pop
add
inc
ret
out
sbb
sahf
hlt
mov
sarb
xchg
test
test
in
add
jp
sub
sub
aam
popa
xor
sti
cmp
js
adc
mov
adc
adc
or
lahf
push
lret
or
inc
mov
pop
adc
idiv
inc
loop
cli
mov
notl
xchg
and
cmp
lods
jle
mov
call
add
inc
mov
xchg
sbb
cmp
je
cmc
out
ficoms
outsb
jo
jle
adcb
clc
out
mov
sti
sbb
or
scas
jno
and
mov
rcll
lods
popa
inc
sub
pop
fs
xchg
cmc
addb
inc
scas
cld
fisttpl
mov
aam
or
inc
add
pop
mov
repz
and
xchg
int3
mov
mov
mov
push
lods
sbb
sarb
gs
dec
test
je
mov
xchg
call
push
imul
jae
rorl
in
aam
dec
xchg
cmp
dec
addb
ja
push
sbb
gs
in
out
dec
adc
pusha
sbbb
fs
pop
push
jl
test
xchg
or
call
push
daa
pop
sarb
jg
pop
lahf
ss
pop
pop
and
repz
incl
jae
jae
xchg
lcall
pop
rorb
jbe
cld
in
mov
xorb
pushf
scas
jp
cmp
and
out
mov
pop
pusha
fsubrs
cld
adc
mov
cli
dec
jmp
cltd
pminub
lock
test
jecxz
loope
pop
out
dec
gs
xlat
or
ret
mov
mov
pop
pushf
cmp
aaa
mov
and
sbb
push
lret
lcall
lock
stos
dec
test
les
push
ret
sub
and
cs
ds
jae
clc
push
cmc
sub
pop
fs
xor
lock
xrelease
add
out
xor
adc
cli
repnz
inc
es
and
flds
test
mov
xor
cmp
in
out
sub
mov
ficoml
mov
out
push
sbb
inc
pusha
or
mov
les
popf
sbb
ds
pop
movsb
test
push
pop
jle
nop
xchg
and
dec
lock
inc
arpl
cmp
jno
clc
mov
sarl
cmp
push
ljmp
iret
xchg
loope
push
lcall
cmp
aam
mov
fdivr
ret
cmp
adc
ret
js
pop
inc
xorl
add
les
cmpsb
std
ror
dec
mov
std
scas
cmp
bound
mov
or
fsubl
test
lahf
jle
mov
inc
mov
or
push
js
fcoml
xchg
js
std
notl
xchg
ror
lods
imul
nop
inc
add
add
mov
cmpsb
fcoms
das
inc
sbb
add
or
popf
loopne
mov
dec
lds
dec
in
mov
test
ljmp
add
push
push
xor
xchg
scas
cld
adcb
test
inc
sub
inc
popa
sub
sbb
rorb
inc
imull
sub
xchg
lret
hlt
or
adc
pop
mov
mov
fnop
aad
rolb
jo
bound
pop
sahf
adc
lock
inc
dec
fistps
dec
xor
shll
mov
mov
in
dec
sbbb
inc
cld
add
and
dec
jle,pt
sub
add
fldcw
in
cmpb
cmp
mov
les
cmp
and
psllw
loop
mov
sbb
jmp
mov
xchg
es
loopne
or
mov
outsl
mov
daa
inc
adc
insb
sbb
mov
std
adc
repnz
dec
jo
jg
rorb
ret
scas
cmp
ljmpw
xchg
or
cmp
out
pushf
add
mov
xchg
mov
and
ret
out
or
idivl
mov
push
or
add
and
or
dec
test
ja
mov
jne
jno
dec
sub
lcall
movsb
mov
pusha
lea
pop
sub
jg
cld
or
or
stc
and
and
pop
call
push
and
dec
sub
xchg
push
push
pop
pop
mov
xchg
aad
shlb
es
inc
movd
add
adc
cli
mov
add
fwait
mov
mov
clc
fsubl
js
pop
popa
rcrb
cmp
inc
jnp
and
cmp
cmp
sub
add
mov
jge
dec
xchg
jno
pop
into
movsl
mov
lret
fdivs
lret
mov
mov
xor
inc
and
add
stc
dec
aaa
ret
popl
lret
sbb
xchg
loop
fsubrs
mov
jecxz
adc
jmp
aam
out
push
data16
add
ss
sahf
push
push
popa
test
mov
movsl
clc
inc
hlt
xor
fdivp
scas
xor
jne
sub
mov
enter
jp
cmpsl
ss
dec
add
out
push
add
sbb
cmc
and
or
enter
lahf
cli
adc
jmp
rorb
jmp
xchg
pop
mov
nop
aam
mov
push
insb
int3
fmulp
or
add
popa
sub
rol
lods
jg
loopne
inc
repz
imul
adc
dec
add
mov
jns
sbb
push
lcall
xchg
loop
inc
adc
ret
es
add
jne
mov
dec
je
xor
or
lds
subl
push
and
pop
insl
enter
inc
repnz
sbb
sub
push
shrb
cmp
std
or
sbb
xor
sbb
ds
jecxz
or
mov
or
xchg
shlb
pop
daa
cmp
cmpsl
fimuls
add
jae
xchg
insb
jecxz
ja
sahf
out
call
daa
pushf
sahf
dec
pop
add
add
ficomps
inc
rolb
pop
jns
hlt
jmp
arpl
ljmp
inc
pop
mov
or
data16
add
das
lods
xchg
rcl
sub
xchg
sub
mov
sub
push
insb
aas
daa
inc
add
into
mov
das
enter
bound
cli
stc
icebp
clc
xor
push
out
or
insb
mov
or
and
push
jns
test
popa
lods
push
pop
jg
dec
jo
cmp
jl
sti
int3
mov
in
and
idiv
insb
add
push
fdivp
or
xchg
ss
cmc
mov
add
call
clc
in
std
lods
xchg
sbb
roll
mov
rorb
sar
dec
sqrtps
dec
cmp
ret
ret
fmuls
xchg
mov
popa
sbb
lahf
push
loopne
cli
ret
and
cmpsb
add
xchg
in
pop
inc
sbb
sub
outsb
xor
cld
push
leave
cmpsl
sub
in
push
jns
rorb
fmuls
and
les
pushw
mov
add
inc
inc
xor
les
inc
fdivr
and
out
roll
cmp
scas
out
xlat
shll
popf
movsb
bound
push
push
test
push
xchg
arpl
sub
mov
dec
push
pop
outsb
cmc
mov
clc
push
mov
dec
mov
dec
add
inc
sahf
test
jg
inc
cli
jns
and
add
inc
divl
loope
sbbl
test
rcll
data16
sub
dec
push
mov
jp
and
fimuls
pop
cli
sbb
or
mov
aaa
jmp
arpl
lods
pop
call
js
pushf
sbb
rcl
and
sub
sbb
cmp
mov
decl
jo
or
ss
sbb
jp
lret
scas
icebp
mov
mov
xor
pop
sbb
imul
out
nop
dec
pop
clc
lock
lods
popf
xor
adc
in
call
mov
sub
addl
adc
hlt
fildl
and
mov
ficomps
jecxz
out
arpl
rcrl
adc
xchg
in
bound
dec
sarl
test
mov
dec
xchg
xlat
xor
pop
out
mov
aam
sub
xchg
inc
leave
lahf
mov
in
imul
sbb
mov
and
dec
roll
xchg
repz
lea
and
pop
sub
insl
xchg
ffreep
mov
test
sub
and
mov
pop
imul
xchg
ja
lock
int3
lret
pop
rolb
aas
push
xchg
cltd
and
mov
mov
sbb
repnz
jecxz
cmp
or
or
sub
pusha
outsb
xor
cmpsb
mov
cmc
jnp
xchg
outsb
out
clc
jns
in
aam
stos
bound
sub
mov
fnsave
xchg
stos
push
ret
xrelease
dec
sti
mov
adcl
test
jns
adc
imul
divl
or
push
push
add
movsl
int3
sbb
mov
push
push
mov
fnstsw
jns
lods
out
xor
add
ret
stc
inc
push
cwtl
fnop
jo
outsl
scas
mov
mov
lock
fdivl
sbb
mov
lret
jl
das
pop
sbb
sub
push
push
mov
cmp
and
mov
pop
das
mov
xor
cli
cmp
add
adc
sub
jb
ljmp
add
mov
mov
jge
add
xlat
popf
into
inc
inc
insb
daa
fildl
sbb
and
outsb
sbb
out
ss
jge
nop
int3
aam
rolb
push
lock
sbb
dec
movsb
icebp
xchg
and
xchg
xchg
fwait
push
jge
sub
testb
mov
xchg
push
push
push
in
jbe
push
sub
fstl
jecxz
rol
fldenv
ret
sbb
loope
sub
loop
push
in
or
xor
dec
add
addr16
pop
push
sbb
adc
sbb
add
setl
pop
mov
sbb
add
push
pop
dec
push
mov
jne
clc
jg
push
or
or
lds
pop
sub
sbb
jmp
xchg
add
cmp
lret
out
aad
push
pop
jo
xchg
add
daa
sbb
mov
stc
mov
cmp
lret
filds
jno
daa
inc
dec
cmp
add
dec
std
cltd
add
add
popf
mov
add
cmp
sbb
sub
rorl
jnp
jp
cli
bnd
es
sbb
sbb
out
sbb
std
push
adcl
clc
inc
and
leave
or
jns
shl
push
push
loopne
pop
test
mov
rclb
outsl
mov
mov
mov
mov
xor
insl
inc
out
mov
fstpl
mov
fimuls
pusha
cmp
das
stos
fstps
mov
jmp
popa
notb
sbb
popf
sahf
sbb
adc
sbb
iret
adc
push
sub
or
outsl
mov
es
add
imul
jecxz
lcall
fidivrl
fldt
and
rorb
cltd
pop
inc
lods
or
orb
pop
xchg
mov
jae
xor
xor
sub
sahf
movsb
fdivrl
pusha
pop
ss
loopne
sub
test
out
mov
push
adc
rcl
scas
not
js
mov
push
pop
add
mov
dec
mov
add
pop
ja
into
test
cli
sub
testb
into
or
test
cld
sbb
jg
adc
push
ret
not
repz
xlat
xacquire
inc
shrb
cmpsl
add
je
pop
stos
cs
sbb
push
movsl
pop
mov
leave
stos
dec
int
or
lret
clc
popa
ret
sub
mov
push
mov
xrelease
cltd
xor
cmpsb
mov
jmp
aam
sub
sahf
insb
dec
mov
or
loope
inc
push
ret
ret
clc
in
or
aam
iret
xlat
addr16
mov
in
mov
sbb
mov
mov
lods
push
push
cld
jae
mov
sti
xor
jno
sbb
sbbb
ljmp
xor
sti
rol
test
mov
test
out
add
add
jae
mov
pop
push
movsb
jmp
rcrb
clc
add
repz
lmsw
push
mov
push
and
sti
adc
imul
popa
xor
inc
and
lcall
lahf
inc
loop
cwtl
and
aam
mov
mov
and
ds
cmpsl
lds
dec
and
add
ljmp
mov
loope
cs
ds
movsb
xchg
hlt
sbb
sbb
rorb
xor
xor
fstpt
jmp
outsl
pop
fucomi
dec
ss
in
andl
das
add
jbe
jne
or
add
stc
arpl
inc
cltd
pop
push
jne
pusha
and
jnp
and
scas
aad
icebp
imul
dec
popa
jp
leave
inc
dec
lock
add
pop
jle
hlt
test
sub
mov
push
and
xchg
pusha
inc
stc
sub
ret
push
fldcw
pop
mov
adc
repnz
sub
pop
sbb
xchg
jnp
pop
inc
test
mov
inc
jl
in
dec
in
xchg
xchg
jnp
mov
out
mov
flds
scas
ds
sbb
mov
scas
sub
loope
push
movsb
xor
cltd
jo
outsl
sbb
aad
dec
dec
push
int
push
test
clc
pusha
mov
pop
andl
or
dec
test
les
mov
pop
inc
je
sbb
sbb
sub
push
jne
lea
or
sbb
loopne
xchg
fisubrs
mov
cmp
or
sub
mov
cmpsl
fisttps
sbb
jge
mov
sbb
xchg
sub
pop
rcrb
and
sub
cmpsl
add
mov
inc
stos
ja
or
xchg
pop
and
xchg
add
cmp
lods
fstpl
pop
sbb
ja
test
mov
xor
add
xchg
mov
jne
mov
or
cmp
lds
xchg
sub
xchg
xlat
mov
add
push
lock
cmp
pop
jp
daa
inc
aas
dec
add
mov
test
inc
pop
push
jno
adc
bound
push
mov
scas
test
and
add
adc
jo
add
into
pushf
ja
aas
jo
call
jnp
orl
inc
adc
dec
inc
dec
icebp
repz
mov
dec
adc
mov
xchg
dec
sbb
xchg
shlb
mov
bndldx
push
movsb
mov
dec
mov
and
adc
jmp
push
in
aam
cltd
fdivl
mov
rcrl
mov
testl
cmp
ljmp
lock
or
or
inc
xor
add
or
push
out
shll
dec
sbb
add
cmpsb
fwait
mov
jge
sahf
dec
pop
pop
jb
shrb
rcrl
push
dec
or
insb
cli
inc
stos
adc
shrl
push
pop
fcomip
sbb
xchg
movsl
jmp
push
add
arpl
mov
or
and
add
sarl
xchg
adc
add
push
mov
xchg
or
arpl
test
mov
jbe
scas
aad
jbe
loop
pop
and
mov
cmc
adc
xchg
sub
jge
sbb
scas
or
sbbl
stos
mov
jg
xchg
pop
push
jmp
loope
leave
jbe
lahf
lcall
push
push
pop
cmp
andl
fisttpll
and
fnstsw
pop
dec
outsb
lock
inc
push
or
mov
lock
test
cmpsl
addl
out
dec
inc
xchg
std
ret
movsb
xor
loop
sbb
pop
fcoms
and
and
jmp
outsb
movsb
pop
mov
testb
aas
push
mov
sbbb
xchg
jge
js
ud0
add
cmp
push
cmp
push
faddp
int3
push
repz
iret
adc
sub
in
jle
mov
sbb
orl
scas
jg
inc
add
lock
ds
mov
clc
mov
cld
xchg
sbb
inc
pop
mov
sub
aaa
mov
mov
mov
es
in
ret
mov
orb
orb
rorl
cmp
je
xor
xor
jae
movb
jp
and
lds
add
rclb
mov
outsb
add
push
sbb
lock
test
dec
mov
sar
xor
pop
pop
loop
push
and
mov
xor
add
movsl
jbe
cwtl
add
cmc
xchg
ja
push
pop
imul
adc
pop
callw
sub
lock
sbbb
into
ja
repz
int
ret
mov
xchg
and
lods
sub
cmp
inc
cmp
cmp
xchg
fnstcw
stos
mov
test
mov
fildl
lock
sbb
lds
cli
push
cld
jge
jg
cmp
cmp
fcoms
inc
movntq
les
sbb
pop
cld
inc
mov
aas
sub
xchg
xchg
mov
pop
popf
push
jecxz
inc
jp
pop
xor
ficompl
pop
in
pusha
xor
dec
js
jg
jp
xchg
ret
or
sbb
push
inc
inc
call
outsl
sbb
in
loop
test
fucomi
std
push
mov
xor
jns
in
rolb
cli
dec
out
mov
inc
xchg
adc
subb
popa
inc
jp
aas
int3
movsb
xchg
jno
mov
mov
call
adc
mov
out
fidivl
loope
outsl
lcall
and
dec
push
out
sbb
cmpl
add
mov
push
dec
inc
sbb
pop
jb
push
repz
enter
ficomps
xor
jle
das
movsl
mov
aas
mov
shrl
lods
test
aas
lds
jg
loope,pt
sti
xchg
scas
sbb
lcall
inc
and
sti
imul
rcrb
mov
fwait
sub
out
aas
and
in
adcb
and
jo
sbb
arpl
cmp
dec
xchg
push
fnstcw
loopne
push
mov
xor
add
ret
xchg
inc
adc
mov
stc
xor
lock
jle
out
shrl
inc
fstps
iret
pusha
lock
mov
mov
inc
clc
and
cmp
add
xchg
inc
imul
xchg
fsts
incl
insl
jbe
iret
andb
bound
mov
push
adc
add
sbbl
mov
rcr
inc
int
ds
add
xor
dec
mov
mov
jmp
data16
cmp
mov
cmc
pop
popa
inc
lods
je
xor
pop
ja
arpl
sbb
rol
push
mov
ljmp
xchg
mov
pop
icebp
jo
xchg
mov
sahf
dec
test
aam
pop
enter
mov
mov
test
mov
les
shrl
fisttpll
mov
xchg
push
call
daa
add
mov
inc
clc
push
xchg
dec
mov
outsb
sub
mov
hlt
jle
test
pmulhw
pop
insl
mov
push
loopne
cld
cmp
add
sarl
sub
jg
mov
cmp
stc
add
iret
repnz
outsl
addb
scas
and
xchg
pop
insb
mov
jl
cs
push
lods
adc
sub
push
or
mov
dec
cmp
push
pop
mov
push
ljmp
insb
pop
test
mov
pop
fwait
push
pop
jmp
aad
imul
sub
push
inc
mov
rcrb
push
sbb
jmp
and
add
xor
or
jecxz
das
shr
pop
out
insl
sub
lods
test
dec
roll
mov
rclb
notb
jb
inc
xchg
sbb
lret
stc
test
pop
loope
inc
sbb
std
add
sub
test
in
inc
push
pop
aam
out
call
dec
sub
mov
or
push
jge
aam
daa
push
leave
sbb
sbbb
sub
js
inc
dec
negl
outsb
mov
mov
shr
pop
das
lea
js
call
cs
jae
ja
rclb
sbb
sub
jbe
dec
sbb
dec
mov
mov
mov
and
sub
mov
or
cmp
stc
mov
mov
mov
test
push
sub
fwait
shl
push
jecxz
and
mov
ljmp
push
xor
rclb
pop
xchg
and
cmc
ljmp
mov
jns
jb
sbb
sbb
xchg
pushl
mov
xor
nop
les
scas
inc
call
lock
and
xor
mov
psrad
adc
xor
xchg
outsb
pushf
mov
std
sahf
in
mov
pop
call
clc
das
hlt
movnti
add
scas
xchg
xchg
in
scas
push
dec
pushf
fidivl
inc
xor
adc
xchg
pop
push
push
pop
in
fcmovnbe
scas
pop
and
or
inc
pushf
and
fs
or
mov
mov
sbb
fs
decb
aas
icebp
mov
insb
pushf
mov
mov
hlt
push
lcall
movsb
sbb
pushf
or
mov
or
sbb
rcrb
js
jmp
aad
ret
lcall
xchg
jbe
add
inc
adc
push
mov
aad
lock
push
adc
mov
jl
int3
xchg
fimuls
fcompl
in
adc
mov
stc
push
lret
add
addb
inc
testb
push
in
sbb
jnp
loopne
ret
mov
insb
fsub
test
jecxz
xor
std
push
pop
addl
pushf
fstpt
adc
aas
cmp
ss
xorb
pushl
enter
imul
pop
aas
ret
or
mov
lahf
test
aam
iret
mov
or
mov
cmc
das
leave
push
mov
adc
xor
xor
cld
data16
fcmovne
es
and
imul
lcall
or
or
repz
cmpsl
in
jne
push
add
jmp
dec
push
or
movsl
jne
sahf
call
rolb
xor
mov
pop
lahf
mov
pop
int
inc
sahf
pop
outsl
inc
pop
pop
ja
js
popl
push
iret
shl
mov
popl
cmc
pop
clc
or
xchg
pop
ror
push
sub
inc
ja
mov
mov
test
cltd
push
dec
adc
outsl
or
pusha
jmp
xchg
loope
imul
jge
std
jmp
push
sbb
ja
in
sbb
js
dec
and
popf
lcall
xor
cld
xchg
pop
test
andl
pop
xorl
push
call
xchg
or
xchg
pop
mov
push
sub
mov
jae
sub
cmp
sbb
add
inc
in
ss
clc
mov
inc
rcrl
mov
stc
dec
jo
cmp
in
pop
js
hlt
fdivr
adc
lea
xorl
push
mov
xchg
movsb
and
add
inc
adc
mov
xchg
or
shrl
lock
inc
sbb
std
adc
sbb
call
mov
enter
inc
rcl
filds
insl
and
js
shrl
jge
sub
add
pop
cmp
dec
cmp
adc
mov
test
in
sub
push
cmp
nop
dec
pusha
test
adc
inc
fs
mov
adc
icebp
push
cld
and
xor
daa
dec
inc
loop
sbb
or
sbb
push
mov
lret
and
cmc
push
push
clc
pop
fildll
cmpsb
and
idivl
lock
push
loope
rorb
sbbl
inc
xor
inc
call
sub
pop
cld
push
nop
mov
push
xor
inc
fdivl
or
inc
int3
mov
xchg
adc
loope
cltd
and
lea
inc
pushf
push
lods
cli
push
in
mov
mov
mov
lds
stos
rorb
repnz
out
cmpb
sbb
dec
arpl
add
leave
dec
or
jle
rclb
dec
xchg
shlb
daa
sbb
xchg
pop
les
jmp
add
call
outsb
enter
rclb
cmpsb
jmp
add
and
adc
add
jae
les
sbb
add
call
ret
out
shrl
push
mov
xorl
xor
popf
inc
inc
popf
loopne
aas
and
lret
adc
cmp
dec
mov
cs
in
mov
cmpsl
bound
xor
ret
insb
sbb
cmp
cmp
pop
jb
mov
incl
fsubrp
mulb
cmp
and
icebp
pop
fstpl
mov
and
push
scas
std
test
std
lea
dec
push
and
cmp
popa
outsl
imul
popf
pop
jp
es
sarl
adc
fimuls
push
jmp
movsl
jl
jg
mov
mov
dec
mov
div
scas
push
addr16
lock
pop
lods
sahf
sar
inc
mov
je
clc
outsb
add
cli
push
dec
in
pop
popa
outsl
je
enter
add
ret
or
or
xor
scas
adc
xchg
cli
sub
test
aaa
pop
add
lods
push
in
popa
inc
data16
lods
sub
sbb
jo
add
inc
negb
sbb
fistl
adc
mov
xor
jp
dec
ljmp
sbb
fnstcw
pop
dec
loope
sbb
clc
adc
data16
fisubrl
jb
cmp
inc
lcall
aam
cltd
dec
lock
or
mov
mov
push
jecxz
clc
mov
cmpsl
or
data16
mov
stos
dec
or
scas
fcmovbe
sbb
mov
pusha
popa
push
sub
mov
popa
repnz
add
sub
or
es
mov
dec
add
pop
loop
sbb
mov
pop
addl
in
cwtl
xchg
lret
push
jle
fildl
xchg
lods
aas
push
adc
xor
push
inc
pushl
cmp
aas
out
sbb
or
test
cld
xchg
pop
sub
cmp
pop
and
fwait
jno
or
cmp
jae
in
lock
mov
jo
inc
out
pushl
rcl
ljmp
jmp
cmp
mov
ficompl
repz
imul
pop
lahf
ds
movsb
in
jo
mov
mov
nop
imul
ret
fs
and
jle
movsb
mov
cs
or
or
jl
push
fwait
jno
dec
or
sub
and
sbb
mov
incl
or
cltd
subl
popf
call
mov
in
rcrb
dec
mov
adc
jmp
mov
and
ljmp
inc
or
push
stos
mov
add
sarb
outsl
mov
push
lret
pop
js
mov
ljmp
mov
add
push
add
adc
popa
jge
push
scas
add
cmp
jge
cmp
or
cmp
pusha
daa
scas
mov
mov
sti
sbb
sarl
adc
and
dec
or
icebp
inc
lds
shrd
push
addr16
divl
dec
cwtl
clc
mov
push
add
mov
aaa
scas
or
shl
push
and
jg
sbb
cmp
subb
push
push
pop
cld
das
cmp
cmp
inc
leave
cmp
insb
jp
add
and
es
fisubrl
sbb
dec
rorb
mov
add
js
add
ret
inc
lahf
inc
mov
cmp
out
inc
out
rol
push
push
ss
cli
testb
add
fsubrs
or
rcll
inc
std
push
pop
enter
cmpsl
es
and
ljmp
sahf
sub
xchg
fisttpl
dec
jl
test
jbe
cmp
ljmp
pop
or
push
popa
sbb
cli
xor
sub
sub
push
pop
mov
bnd
loope
xor
pop
add
lcall
imul
mov
cmp
xchg
leave
fstl
sub
ja
outsb
jl
and
out
aas
loop
rcll
and
add
dec
aad
iret
dec
push
into
mov
inc
jl
ret
jo
dec
js
jg
adc
stos
iret
out
iret
sub
add
sti
movsl
sub
shlb
or
stos
popa
ret
in
mov
clc
or
enter
es
in
xor
cld
js
dec
mov
xor
ret
pop
inc
mov
push
xor
ljmp
add
adc
jne
push
cmc
jmp
xchg
mov
mov
mov
je
pushf
dec
imul
and
ret
pop
cmovg
mov
sub
sub
movsb
pop
mov
add
dec
ret
cs
and
pop
add
xor
loopne
jbe
lcall
divl
dec
sub
dec
mov
pop
push
dec
xor
dec
xchg
lock
es
xchg
nop
inc
in
iret
mov
mov
ret
mov
data16
dec
mov
out
jmp
inc
mov
jecxz
add
inc
add
sbb
and
mov
push
pop
dec
xlat
aad
outsl
fisubrl
dec
call
sbb
mov
and
ljmp
dec
and
add
repz
pop
in
sub
aas
add
sub
cmp
loope
push
loope
das
ds
add
int
addb
push
inc
packsswb
movsl
jl
mov
or
orl
pop
lcall
aaa
jnp
fnsave
xchg
les
out
aas
cltd
clc
dec
mov
outsb
addr16
cmp
in
xlat
push
and
adc
push
mov
adc
test
adc
add
shr
fwait
mov
pop
xchg
insb
aam
push
enter
sub
test
mov
adcb
inc
test
push
and
add
loope
loope
cmp
sub
repz
test
jb
and
adc
test
cmp
pop
inc
jmp
mull
and
xorl
test
mov
outsl
jmp
movsb
cmp
dec
inc
mov
pop
xor
jo
or
sbb
pushl
out
dec
out
lock
popf
sub
push
inc
cs
sar
inc
mov
xchg
stos
insl
lret
ljmp
xchg
scas
mov
mov
sbb
cltd
dec
outsl
call
arpl
or
mov
stos
incl
mov
mov
sbb
outsl
mov
test
lahf
add
jne
js
xor
out
or
popa
jno
mov
scas
clc
adc
call
inc
out
add
mov
loopne
mov
push
jg
jp
lods
mov
inc
and
nop
jle
xchg
movsl
out
test
adc
pop
test
int3
lods
pop
and
or
pop
or
cmpsl
shll
cmp
or
outsb
in
push
roll
loope
mov
ret
xchg
xchg
movb
inc
push
nop
cmp
and
and
shlb
inc
cld
pop
inc
fiaddl
shll
mov
std
mov
pop
jnp
hlt
dec
and
pushf
out
mov
pop
aaa
leave
bound
lret
add
pusha
loopne
push
jl
mov
clc
mov
in
pop
cmp
fs
sub
jle
cmp
jbe
push
xchg
push
push
push
aad
ds
mov
add
aam
fbstp
ljmp
cs
xchg
push
cmp
inc
andb
or
sub
sub
sbb
lret
inc
cwtl
std
pop
shll
mov
push
mov
pusha
sub
test
jo
testl
cmpsb
imul
or
or
and
xor
sahf
adc
push
out
adc
in
jp
sarb
jb
ficomps
sub
scas
jmp
adc
add
insb
fiadds
cmpsl
dec
js
bound
dec
lods
cld
orl
mov
xchg
pushf
inc
push
cld
pop
push
sub
cmp
or
jno
sbb
gs
jmp
sbb
cmp
cmpsl
mov
aam
fists
cmp
sbb
pop
cmp
push
shlb
lds
xorb
les
lds
test
push
sbbb
loopne
adc
lcall
adc
add
arpl
pop
cmp
and
int3
ss
fucomi
inc
ret
mov
repz
pop
test
int
imull
addb
call
bound
adc
out
rol
sbb
add
xor
inc
cmp
jbe
adc
sti
cli
sub
bound
jno
outsb
or
inc
fsubrs
and
lock
sbb
add
dec
frstor
pop
add
cmp
pop
nop
arpl
fsubr
enter
lcall
ljmp
xor
inc
cmc
je
sbb
and
sbb
enter
fstl
sbb
dec
push
xchg
icebp
andb
dec
push
mov
clc
add
lahf
nop
inc
outsl
or
push
add
stos
imul
add
pop
lods
xchg
push
cld
or
mov
dec
lods
cmp
nop
test
sbb
cmp
mov
sti
rorl
shr
das
in
or
rcrb
gs
xchg
inc
pop
sbb
pop
mov
adc
fst
popf
push
xor
mov
js
add
or
adc
loopne
jno
cmp
pop
aaa
out
or
outsl
pop
mov
inc
push
mov
inc
dec
dec
lcall
or
cld
into
pop
mov
scas
xchg
sahf
inc
fwait
dec
loopne
adc
mov
ljmp
fwait
adc
pop
hlt
cltd
mov
pop
cli
cmpsl
daa
adc
dec
clc
xchg
and
cmp
or
out
daa
scas
xchg
loopne
dec
dec
pop
sub
pushf
cmp
sub
mov
push
jecxz
inc
sub
rorl
adc
shr
sbb
jl
xchg
lods
push
xor
addr16
or
js
loop
cltd
mov
idivl
pop
jmp
inc
jne
cmc
add
ja
int3
test
shll
jecxz
cmp
aas
pop
enter
adc
aam
sti
or
inc
jge
adc
adc
icebp
sbb
shll
sbb
dec
pop
call
dec
xlat
push
xor
add
sahf
incl
mov
xchg
or
xor
xor
mov
fwait
mov
sbb
fwait
add
fsts
shrl
movsl
add
adc
xchg
daa
pushf
add
push
stos
cmpsl
roll
mov
sbb
cmp
sub
cld
lea
inc
imul
sub
add
cltd
and
or
sbb
out
pushl
sub
sbb
ds
test
loopne
in
xlat
pushf
int3
and
sub
jnp
add
push
adc
and
outsl
pop
push
loopne
test
xchg
leave
orb
or
lea
pushf
or
test
stos
sub
jno
dec
shrb
or
movsb
or
lahf
and
jle
dec
sub
or
mov
clc
ret
nop
roll
lock
jmp
xchg
push
mov
fidivs
mov
les
sbb
sbb
cli
fwait
aas
pop
sbb
jmp
add
pop
enter
loopne
push
dec
inc
sbb
inc
rcl
sbb
mov
dec
push
cld
lret
pop
sbbb
in
adc
mov
in
inc
jle
add
lock
jp
sub
add
shr
cmp
clc
add
sub
push
or
fs
sbb
mov
mov
aam
aad
sub
cmp
shrb
rol
test
mov
push
outsl
out
jbe
mov
jmp
out
push
das
cmp
mov
cmpsl
insb
mov
jne
aas
jg
mov
arpl
test
inc
add
mov
pushf
andl
lcall
in
icebp
inc
mov
xor
out
push
xchg
push
in
lcall
inc
inc
cmp
les
inc
xor
push
and
outsl
outsb
sbb
add
jo
or
mov
mov
arpl
test
cmp
mov
pop
dec
shrl
pop
sbb
jg
and
sbb
adc
pusha
andb
das
cmp
mov
jp
jmp
fwait
jnp
sbb
jnp
pop
adc
adc
addr16
je
dec
or
mov
movsb
aaa
fucomi
cmp
aam
idiv
inc
inc
ds
sbb
out
mov
adc
dec
fcmovb
call
xor
aas
or
xchg
mov
push
js
push
push
cmp
lock
fwait
push
icebp
or
out
push
push
push
mov
push
dec
dec
bound
push
lock
mov
lods
xchg
ss
les
xchg
cmp
inc
testl
fwait
loopne
add
aaa
or
xor
xchg
and
int3
mov
insb
lcall
cli
es
clc
mov
std
pop
push
popa
ret
enter
and
cmp
pop
push
movsb
inc
jl
sub
js
mov
cmpsl
pop
js
out
js
mov
push
into
or
imul
push
inc
addb
jno
jp
push
and
inc
not
and
inc
jle
add
push
sub
ficoml
cmp
pop
hlt
ret
fisubl
fisttps
sub
int
mov
mov
movsl
push
push
call
sbb
mov
sub
push
dec
mov
outsl
ret
add
sbb
popa
mov
pop
mov
in
incl
sub
ficompl
sbbl
rcrb
into
rcrb
sub
mov
hlt
lcall
sbb
stos
adc
int
xor
jnp
jecxz
cwtl
stos
and
repnz
push
push
repnz
cmpsl
push
pushf
and
clc
dec
xor
push
repz
in
dec
cmp
xchg
pop
push
loop
test
lret
fwait
ds
push
cmpsl
mov
jle
mov
addl
sub
adc
jns
pop
jl
add
xchg
fimull
insb
fldenv
popa
scas
js
movsb
mov
jo
lods
lods
and
lahf
scas
adc
dec
pop
lcall
push
sbb
mov
aad
cmp
adc
push
or
loope
cli
lcall
add
cmc
lret
dec
mov
mov
cld
daa
fmull
icebp
fiadds
jle
jno
xor
icebp
stos
push
xchg
cmpsb
fs
test
dec
mov
rorb
add
insb
push
call
test
add
les
in
arpl
rcrb
jmp
lods
inc
test
hlt
repnz
and
or
add
not
iret
mov
xchg
leave
xor
lds
das
sbb
jle
out
inc
rolb
cld
mov
insl
scas
or
loope
inc
pop
or
jg
cmp
xchg
rorl
xchg
xor
mov
insl
lcall
mov
mov
in
aaa
ret
incb
add
popf
xor
or
add
sar
sbb
adc
fs
add
push
out
xchg
add
mov
dec
adc
test
dec
xor
and
andb
xor
cmc
ds
jle
dec
icebp
repnz
das
cwtl
add
insb
pop
dec
fmuls
xchg
cmpsb
xchg
pop
shlb
mov
cmpsl
xor
xchg
in
iret
outsb
js
mov
sbb
mov
xchg
out
jns
test
in
mov
jbe
les
repz
bound
mov
inc
jl
sub
fimuls
or
sbb
cmp
les
and
ficomps
mov
nop
sbb
mov
cli
sar
and
jbe
inc
loopne
pop
ja
adc
push
push
rorl
data16
jb
sahf
movsl
sub
mov
loope
xchg
mov
adc
rclb
pushl
ljmp
push
jbe
insl
sti
inc
stos
mov
cmp
cli
cmpsb
ja
fbstp
pop
ret
lock
sar
cld
icebp
clc
mov
sbb
xchg
xor
lods
mov
mov
mov
cmp
xor
ljmp
cmpsl
cmp
movsb
ss
xchg
mov
hlt
and
mov
aaa
add
mov
pop
repnz
adc
sub
es
insb
mov
inc
cmpsl
arpl
dec
add
imul
arpl
es
scas
imul
lcall
lret
ljmp
adc
add
cli
mov
mov
shll
addl
fwait
call
mov
inc
push
mov
jae
adc
outsb
jo
mov
xchg
or
mov
and
push
or
mov
rcr
loope
inc
or
xchg
scas
pop
add
loop
jne
mov
and
mov
les
add
jp
xchg
push
js
ss
xchg
xchg
fiadds
pop
push
cmp
movsb
into
mov
cmp
sarb
insl
push
dec
xor
enter
mov
sub
aas
loop
cwtl
xchg
repnz
sbb
xor
pop
out
sbb
idiv
xlat
add
mov
and
scas
int
mov
dec
loop
cld
lret
or
inc
sub
xor
adc
push
test
dec
pop
shlb
in
fdivr
cli
dec
sti
add
xor
mov
cmp
fidivs
imul
or
stc
or
ficoms
dec
je
mov
add
test
cmp
imul
pop
ds
add
push
mov
clc
loop
in
dec
rolb
mov
pop
daa
test
icebp
pop
add
xchg
es
push
out
push
xchg
loope
jnp
je
in
xchg
or
xor
sub
adc
lret
or
xor
mov
mov
lahf
popf
cmpl
js
dec
rclb
shll
outsb
push
add
pop
mov
or
clc
xchg
es
push
push
pop
cmp
loop
cli
cmp
into
out
lock
xor
ljmp
pop
sbb
sbb
sbbl
or
jg
mov
test
or
add
cmp
and
inc
call
xor
pmaxub
aam
adc
xor
dec
mov
xchg
loopne
aas
fldl
enter
push
and
incl
ds
inc
mov
rorb
rclb
or
test
lock
shrl
add
pop
and
fists
mov
aaa
ljmp
lods
ds
xor
xor
push
insl
push
cltd
jp
repz
lret
sbb
pop
adc
das
int3
nop
xchg
push
add
xchg
cmpsl
cmpsb
mov
iret
hlt
repnz
sbb
sbb
into
andl
psraw
xor
fidivrl
movsl
push
sbb
stos
movsb
outsb
mov
sbb
mov
push
add
mov
push
lret
cmp
rorl
sahf
int3
add
mov
fwait
sbb
loope
cwtl
push
aas
sub
sti
cmpsl
sarl
cs
cmp
xor
or
aaa
adc
mov
mov
mov
stc
mov
ja
movsl
sub
pop
adc
and
inc
addr16
ss
sbb
inc
cld
or
imul
stos
test
aaa
inc
int
hlt
pop
sarb
lcallw
and
xchg
ds
jae
inc
add
fcoms
dec
orl
shll
xchg
cltd
mov
pusha
push
sbb
adc
hlt
data16
xor
sbb
sbb
push
adc
sbb
adc
pop
pop
icebp
or
pop
inc
sub
pop
jb
repz
das
subl
push
and
dec
aas
mov
inc
ret
fcomi
cmpsb
adc
outsl
jge
in
pusha
or
cs
mov
ret
push
aad
insl
mov
dec
pusha
mov
inc
out
cmpsb
jno
bound
jae
push
fwait
outsl
pop
ja
movsl
adc
roll
leave
push
mov
std
pop
aam
icebp
les
mov
sbb
jnp
test
sub
test
es
mov
sahf
in
push
sbb
call
dec
sbb
mov
aam
push
lret
lods
cwtl
sbb
inc
xchg
sub
cld
jne
mov
jnp
inc
inc
je
cmp
lock
lcall
cmp
ret
xorl
sub
pop
dec
cld
push
jmp
jo
and
sbb
inc
mov
rol
hlt
and
loopne
or
jge
scas
cmpb
dec
insl
mov
clc
shl
add
dec
insb
cli
mov
mov
adc
stc
sub
lds
bound
pop
adc
push
mov
shrb
pusha
mov
dec
ljmp
inc
jbe
and
mov
subl
dec
sub
xor
out
mov
push
ret
adc
xchg
js
sbb
mov
cmp
xor
test
sbb
push
outsb
sub
mov
push
fstpl
jp
jle
jge
loop
lret
ja
sahf
and
andb
mov
pop
mov
jl
and
or
adc
lea
decl
dec
inc
movsb
push
add
fdivr
fidivrl
daa
xchg
mov
inc
mov
es
cmp
fs
mov
call
rorb
gs
ret
lock
sub
cld
in
repz
jmp
movsb
fldt
scas
mov
cmp
adc
mov
repnz
adc
in
cmp
rcr
xorb
daa
add
int3
mov
push
lock
jb
inc
inc
jo
or
sbb
adc
adc
push
decb
mov
mov
andl
ret
adc
and
and
es
cli
mov
movb
std
adc
mov
mov
ret
je
cli
lock
jmp
dec
enter
cld
mov
inc
pop
loopne
popa
shll
loopne
xlat
mov
ret
adc
or
stos
push
cmpsb
mov
jg
push
xor
gs
add
add
push
xor
mov
sahf
or
in
iret
das
adc
sbb
int
je
int
scas
inc
xor
scas
inc
xchg
aaa
test
ret
insl
xor
int
mov
fsts
into
dec
cli
xchg
xchg
int
je
test
add
pop
lock
add
mov
fwait
push
stos
mov
push
movsl
push
mov
cmp
js
sub
xorl
or
fsubl
loope
sub
enter
js
lcall
loopne
cmp
clc
and
cmp
ret
iret
or
pop
mov
xor
arpl
xor
or
dec
stos
movsb
inc
xchg
sbb
jecxz
xlat
and
fs
in
inc
cli
cs
dec
xorb
cli
inc
flds
mov
test
jp
pop
push
mov
cmp
es
adc
cmc
insl
push
push
nop
xlat
daa
xchg
mov
add
dec
outsl
jae
sbbb
sbb
pop
les
add
pop
scas
imul
and
cli
push
cli
add
js
inc
call
xchg
sbb
mov
cmp
in
or
incl
sub
loop
dec
aad
dec
cmp
call
in
sahf
nop
pop
cmp
sar
xchg
into
fistl
mov
cmpsl
addb
and
cltd
stos
xlat
xlat
aas
cmpsb
jno
test
movb
std
jno
rorb
out
push
cmpsl
inc
fimuls
xchg
incb
stos
decl
rclb
jbe
xchg
rcrb
lahf
icebp
inc
mov
mov
inc
fsubrl
enter
jp
mov
sbb
add
insb
push
movsb
sub
loop
mov
inc
scas
imul
lods
dec
rcl
mov
xlat
nop
cmp
ljmp
push
jnp
cmpsb
cs
outsl
js
sub
mov
pop
cltd
clc
psraw
orl
es
pusha
ljmp
loopne
ret
cmp
sub
out
test
pop
shl
inc
jns
sub
into
cld
pop
test
pop
icebp
loop
jge
jo
jg
loopne
sbb
adc
call
dec
adc
add
and
aam
popl
aam
push
loop
sbb
fwait
dec
pop
xor
adcw
and
mov
xchg
cs
cs
mov
fldenv
scas
jl
lret
push
push
add
shrd
inc
push
jmp
mov
punpckhwd
push
adc
cmpb
imul
dec
jge
and
add
adc
xlat
cli
rep
nop
shll
xor
fwait
sbb
pop
clc
pop
cmpsl
pop
inc
push
and
mov
mov
push
stos
mov
ret
popa
push
inc
aas
fnstenv
ja
mov
cmp
andb
and
fwait
jmp
add
cmp
xchg
push
sub
xchg
in
clc
call
pusha
inc
test
pop
push
dec
cli
mov
mov
ds
stc
repnz
fsubrp
mov
push
fmull
add
dec
xor
sbb
das
dec
dec
jmp
and
mov
mov
pop
rolb
push
cmpsb
loope
mov
rcrl
outsb
fucom
in
push
fisttps
pop
sbb
daa
test
or
jg
ret
dec
mov
icebp
imul
cmp
mov
scas
ljmp
pushf
xlat
gs
adc
ljmp
in
or
cwtl
push
cmp
in
es
insb
mov
loop
add
ret
mov
lods
ret
inc
aad
mov
stos
rcrb
sub
mov
jg
ds
xor
shlb
dec
pushf
pop
faddl
pop
jno
xor
ds
lea
or
pop
dec
es
fucom
cmp
push
inc
into
pop
dec
ficompl
es
loopne
add
and
mov
movsl
dec
jmp
lds
call
stos
pop
ljmp
push
cmpsl
sahf
or
mov
mov
fsubs
sbb
xchg
mov
pop
mov
push
mov
shll
sbb
lea
xor
inc
sbb
aas
mov
mov
es
cld
mov
loope
je
loop
lods
cmp
pop
and
adc
mov
add
xor
push
stos
mov
xor
shrl
loopne
fcomip
adc
iret
pusha
or
test
jne
les
push
lea
sub
gs
loope
insl
test
jbe
push
mov
lret
and
dec
xor
inc
ret
test
cmp
out
ficompl
jl
xor
sbb
sub
testl
aad
sbb
or
nop
std
dec
neg
loopne
jo
xchg
je
and
test
cwtl
adc
nop
addr16
ret
mov
cmp
icebp
jmp
mov
data16
sub
jp
in
push
jl
dec
pop
cmc
adc
loop
mov
push
scas
int3
cs
in
push
mov
pusha
cmp
add
push
mov
testb
in
xchg
sub
lcall
mov
js
mov
test
push
jno
stos
sub
outsl
sbb
bound
hlt
add
stos
mov
push
or
ja
fbld
xor
or
cmc
sub
or
imul
jbe
add
test
push
xchg
mov
and
add
push
cmpsb
inc
mov
sub
or
pop
sbb
dec
jl
inc
cmp
sbb
or
dec
xchg
scas
or
xchg
dec
mov
loope
pop
iret
mov
mov
popa
sti
push
xchg
scas
mov
jecxz
aam
or
sub
jo
cmp
jl
movsb
bound
jle
sbb
pop
or
rcl
mov
data16
rcrb
dec
es
or
js
add
dec
popa
sbb
dec
dec
scas
rolb
xor
movsl
add
lret
mov
push
inc
push
add
adc
inc
sbb
adc
or
filds
lods
inc
cmpsb
mov
into
movsb
hlt
sbb
ss
jo
sbb
jl
adc
sti
popa
or
mov
movsb
add
test
mov
or
mov
push
mov
inc
sbb
add
cmp
xchg
in
fs
inc
or
mov
adc
mulb
mov
or
adc
loope
ret
stos
xchg
in
pop
adc
cs
push
dec
mov
xor
dec
dec
adc
cli
addr16
shr
rcrb
unpckhps
in
test
testb
push
ret
shl
cmp
movsl
dec
mov
stc
add
test
dec
and
add
fs
aas
les
mov
imul
pusha
arpl
popl
jmp
lods
sarb
fcom
and
sub
xor
inc
in
pop
jmp
mov
pusha
lock
inc
sub
pop
inc
imul
or
in
push
mov
push
jb
insl
mov
ss
std
pop
outsl
arpl
adc
cmp
inc
cmp
xchg
push
outsl
inc
repz
mov
fcomi
insb
xchg
aam
jo
jb
pop
mov
ljmp
bound
in
inc
test
fwait
stos
ss
imul
ds
jle
jmp
insb
push
add
or
cs
dec
push
inc
cmp
sbb
cld
out
xor
and
jbe
idivb
incb
int
in
sarb
addl
push
inc
ret
sbb
adc
leave
add
jl
dec
ljmp
lock
repz
mov
or
call
jae
pop
call
adc
cs
les
shll
jg
push
pop
pop
xchg
xor
add
adc
stos
jecxz
mov
sub
pusha
std
aas
popl
and
aam
sbb
repz
sbb
fsubp
or
dec
inc
jo
mov
rol
pusha
mov
mov
xchg
pop
mov
or
lret
mov
shrl
sarb
mov
jnp
ret
xor
or
mov
popa
adc
mov
mov
imul
jp
lock
mov
rcll
push
cmp
or
or
stos
std
movsl
notl
sbb
add
inc
push
jb
icebp
in
jb
push
mov
pop
push
mov
in
call
cmp
adc
mov
ss
mov
mov
push
xor
and
daa
mov
lret
leave
sub
cmc
pop
pop
mov
fmuls
mov
mov
push
adc
rclb
test
popa
jecxz
mov
int
test
cli
lahf
pop
add
fistl
xor
adc
loopne
xor
int
lds
push
xor
ja
inc
jge
loop
test
test
stos
je
mov
add
adc
pop
push
cld
ret
insl
sub
cmpsb
out
nop
push
push
push
enter
fistl
imul
push
jecxz
mov
push
inc
fadd
and
out
rcrl
and
lock
subb
mov
cs
pusha
cltd
xchg
inc
jo
push
jecxz
and
pop
lcall
loopne
sbb
fmul
xor
adc
rcr
aam
shlb
scas
xchg
ror
mov
lretw
inc
pop
inc
mov
sub
pop
jmp
mov
dec
dec
cld
add
push
xchg
xchg
lret
mov
stc
jo
imul
sub
sub
nop
scas
inc
fwait
in
and
add
loope
repz
ds
insb
or
test
ret
sub
push
bound
clc
jae
dec
xchg
sahf
stos
mov
push
sbb
xchg
add
orl
cwtl
dec
leave
in
and
rcrw
stc
jb
inc
mov
jae
ds
clc
mov
adc
xor
sbb
and
inc
inc
out
roll
cmp
imul
mov
lods
mov
inc
scas
push
testl
cwtl
jmp
jle
mov
rcrb
in
adc
shrl
or
and
push
call
cwtl
mov
scas
jo
dec
and
dec
cmp
test
mov
jg
mov
push
dec
jnp
cmp
aaa
mov
stc
js
lcall
push
inc
inc
adc
gs
cmp
rcr
push
cld
cmp
mov
into
xchg
push
data16
pop
cmpsb
pop
fidivrs
mov
dec
flds
and
aaa
adc
fucomip
pop
movb
and
sub
xor
orb
ss
addr16
jbe
jae
jne
mov
mov
inc
cmp
push
mov
inc
incl
aad
in
pop
or
cmp
pop
push
loopne
fwait
loope
sbb
push
xchg
scas
loopne
outsb
in
or
js
inc
std
add
or
lcall
jp
pop
push
icebp
pop
ljmp
scas
mov
scas
cs
and
fmul
ss
jge
cmp
lret
xor
push
shrl
rcr
lcall
inc
mov
add
cmp
fs
into
movsb
popf
push
xor
inc
je
pop
pop
sbb
ret
pushf
push
jno
push
xlat
frstor
xor
inc
pushf
hlt
cmc
add
scas
clc
test
shll
lret
repnz
icebp
loop
pop
data16
ljmp
adc
or
jns
out
ret
mov
cmp
sbb
imul
push
push
scas
loope
push
fcoms
outsl
push
cmp
lcall
jge
cmpl
sub
mov
fs
pop
incl
movsb
add
mov
out
xchg
bnd
inc
sti
cmp
push
sbb
lock
sbb
les
sbbb
call
aaa
inc
mov
and
push
add
xor
jo
push
testb
jbe
mov
pushl
es
adc
call
push
mov
add
icebp
add
aaa
les
or
stos
mov
xchg
sbb
rolb
call
jl
cmp
or
jle
cld
lds
mov
js
lods
addr16
jp
pop
std
adc
mov
aas
sbb
idivl
xor
xorb
mov
pop
adc
xchg
lock
scas
xchg
ss
loop
aaa
outsl
cmp
add
pop
leave
adc
and
insl
arpl
cs
adc
or
add
mov
jne
cltd
sub
mov
inc
lea
call
std
push
aad
xor
dec
mov
pop
movsbl
cld
jne
inc
aam
outsb
jp
les
jo
xor
push
ret
cmp
jl
xor
xor
ret
lods
pop
gs
stos
outsl
cltd
cmp
add
adc
jmp
push
cli
out
stos
inc
pusha
ljmp
adc
pop
adc
es
mov
repz
xchg
in
or
cmp
test
sub
test
lock
sub
inc
add
jl
and
in
imull
jecxz
icebp
jmp
sub
fisttpll
pop
pop
cltd
xchg
imul
fwait
add
test
mov
and
fiaddl
lahf
mov
mov
sbb
les
call
clc
xor
pop
sbb
add
lahf
bound
pop
mov
xlat
out
cmp
fiadds
leave
sub
inc
inc
push
jg,pt
mov
jo
add
cmp
adc
and
hlt
shrd
jl,pn
pop
push
mov
fisttpll
aaa
decl
aaa
xchg
daa
xchg
hlt
dec
push
push
ret
mov
iret
xchg
test
icebp
ljmp
adc
in
mov
pushl
adc
push
jbe
je
sbb
stos
ret
mov
pop
aam
loop
mov
fwait
outsb
and
cmpsl
lcall
mov
push
xchg
lods
test
xor
ljmp
sub
add
sub
jge
aaa
inc
aad
jnp
sbb
mov
int3
mov
mov
gs
mov
popa
jne
call
loopne
fsts
lahf
std
repnz
mov
adc
or
adc
adc
push
dec
dec
lea
arpl
in
push
rorb
pop
rcl
clc
jbe
jge
or
mov
mov
subb
sub
mov
clc
push
or
aaa
rcr
mov
hlt
pop
loop
in
test
pushf
inc
fimuls
sub
sti
push
add
add
or
or
rcr
js
rcrl
push
push
push
inc
xchg
call
mov
lcall
test
lret
xor
imul
adc
xchg
rcrb
pusha
js
cmp
daa
repz
outsb
lret
dec
fdivrl
popa
fdivrs
sahf
push
inc
or
cmp
je
fsubl
enter
cld
xchg
adc
mov
push
push
pop
push
lods
ret
push
nopl
ljmp
mov
sbbl
out
faddp
jmp
mov
dec
nop
sbb
std
adc
shufps
pusha
xchg
movsb
idivl
inc
mov
loope
ljmp
xchg
ror
jecxz
cld
push
adc
shrl
and
sahf
fwait
xchg
fbld
sbb
das
sbb
push
mov
sbb
xchg
inc
xor
cld
sbb
and
cmp
orl
xor
jbe
cld
mov
rcrl
bound
aam
scas
xchg
nop
pushl
jecxz
adc
jb
lods
mov
shlb
std
es
scas
sbb
xchg
ljmp
jl
or
inc
jp
mov
jecxz
int3
push
jge
pop
inc
out
mov
outsl
pop
ret
cmp
or
xor
pop
mov
in
push
add
sub
jno
stos
aaa
lcall
aad
addr16
jo
mov
in
xchg
xor
fcomps
xchg
sbb
xor
jle
in
cs
adc
mov
aaa
jmp
sub
inc
das
ds
clc
cmpsl
stos
mov
adc
xchg
lea
xorl
mov
insb
inc
mov
mov
scas
xchg
add
mov
jb
shl
or
int3
push
pushf
ficomps
jbe
loopne
mov
cmp
sbb
daa
xchg
dec
dec
insl
adc
adc
loope
in
inc
repnz
jecxz
jo
imul
mov
jl
push
sub
add
clc
and
sub
sahf
sub
rolb
mov
lahf
test
mov
in
cmp
dec
stc
mov
mov
dec
pop
scas
xchg
aas
ljmp
push
cwtl
and
shl
ret
test
sbbl
shlb
insl
fcompl
xchg
idivl
int3
or
hlt
and
pop
iret
shl
mov
push
xchg
pop
popa
mov
xchg
pop
stc
je
iret
xchg
loop
jge
in
xorl
cmc
bound
scas
or
jl
push
pop
dec
sbb
stc
jg
test
fisttps
push
pop
lock
stos
test
or
out
xor
sub
aaa
jb
test
decb
xor
mov
and
std
sub
clc
add
inc
sub
enter
jecxz
cmpsb
mov
out
cli
jecxz
ja
cmpsl
push
out
stos
xor
jp
lods
jno
or
daa
mov
stos
loopne
adc
into
jle
or
push
dec
fdivl
addl
repz
scas
adc
cld
sub
or
mov
jbe
lret
out
cmpsb
fimuls
xor
mov
cmp
ret
lock
ja
push
and
pop
mov
mov
push
mov
insb
loope
jbe
xchg
and
inc
sbb
cmp
push
cld
das
xor
and
loopne
inc
or
test
fnstcw
pop
dec
jne
and
inc
pop
stc
pop
jl
es
inc
sub
mov
nop
push
cmp
mov
orl
jmp
fbstp
jle
dec
in
pop
aam
mov
aaa
in
ficoml
dec
scas
pminsw
and
pop
jb
xor
xorb
add
aas
or
or
addb
jo
clc
or
int3
jnp
inc
pop
mov
shlb
insl
mov
or
repz
out
add
and
nop
fdivrl
inc
clc
push
jg
add
mov
call
mov
inc
dec
pusha
dec
scas
das
and
loop
mov
mov
cmpsl
stos
cs
push
cmp
push
jg
mov
andl
js
jg
loop
jne
cld
dec
mov
jno
shll
pop
xchg
mov
add
enter
clc
dec
and
cltd
adc
popa
xchg
mov
mov
das
lock
rcrb
mov
or
jge
test
cmpsb
int3
sbb
in
test
test
test
daa
mov
std
in
outsb
mov
and
pop
fiaddl
push
dec
icebp
inc
sbb
lds
daa
hlt
out
scas
xor
and
psubq
int
or
leave
mov
mov
repnz
imul
scas
in
std
call
xchg
ret
or
movsl
rcll
test
sbb
cmp
and
outsb
cmpsb
fisubs
add
mov
inc
lcall
pop
cmpsl
add
inc
jno
rcrb
jbe
fstps
mov
dec
je
add
daa
push
mov
dec
pop
pop
push
mov
addb
ret
call
mov
rol
out
add
int3
xorl
imul
lahf
add
adc
pop
jp
mov
adc
lds
hlt
or
jl
out
sahf
add
pop
hlt
dec
cmp
push
scas
push
sarb
ja
or
cmp
xor
xor
mov
ds
or
xchg
lods
int
data16
xlat
push
ret
movsb
xlat
add
bound
in
pusha
adcb
aas
dec
push
pop
out
es
jns
pop
jae
aam
icebp
pop
das
addl
cmpsl
mov
popf
inc
imul
push
mov
xchg
and
adc
fildll
lods
push
aam
cmpsl
mov
jns
mov
xlat
cmpsl
xor
out
pop
int3
imul
test
xchg
xor
outsb
jmp
xor
scas
pop
sub
movsl
xchg
pop
sub
fsubrl
les
adc
mov
into
add
js
mov
lock
in
mov
in
jmp
sub
test
mul
add
inc
and
gs
ds
in
xchg
das
mov
loope
xchg
inc
dec
push
enter
or
out
ja
mov
dec
add
sub
adc
mov
mov
cmpsb
pop
out
or
or
sub
adc
in
out
fsubs
ss
and
pop
push
enter
push
xorb
pop
inc
jg
mov
adc
pop
dec
idiv
or
push
imul
xchg
nop
loope
sbb
push
mov
and
sub
negb
xor
add
adc
mov
pop
mov
mov
ss
cltd
cwtl
cmpl
adc
scas
pop
dec
push
push
in
dec
jmp
mov
mov
bound
xchg
inc
adc
stc
out
inc
xchg
in
mov
cli
mov
sbb
fs
dec
jae
ja
sbb
in
test
hlt
and
and
incb
andl
jno
pop
ljmp
mov
xchg
pop
xchg
fwait
lds
fldl
popa
jbe
adc
pushf
mov
fisttpll
adc
dec
scas
pop
ja
xor
pop
cmp
lahf
or
sbb
jge
cli
pop
xorl
cmp
or
push
ret
ljmp
daa
push
pop
or
mov
aaa
sub
imul
push
jg
rcll
cld
ret
inc
xor
xor
sbb
mov
outsl
xorb
movsl
inc
push
movsb
outsb
orl
add
jae
push
arpl
jne
push
rcl
sahf
mov
jmp
and
aas
in
mov
and
or
mov
mov
push
test
and
dec
fildl
push
push
jp
inc
sbb
shlb
lret
inc
sub
cmp
push
fldenv
je
xor
test
clc
lret
das
shll
dec
test
push
fwait
call
add
sbb
fmul
inc
rcrb
fs
scas
jne
mov
roll
cltd
push
bound
out
jne
rorb
lahf
add
xor
sbb
loope
test
and
in
lock
int3
sub
iret
scas
lret
daa
pusha
sbb
daa
aam
jno
jo
xchg
and
and
mov
add
scas
push
out
jecxz
lahf
mov
lods
rorl
stos
push
imul
mov
std
add
call
xchg
or
sahf
dec
loopne,pn
outsl
inc
dec
sbb
adc
arpl
hlt
cmp
ss
and
lds
dec
or
add
int
es
cmpsl
aam
fisttpll
xlat
enter
add
out
lea
fisttpl
jns
pop
push
sub
ja
cmp
test
jp
xlat
mov
add
shlb
xlat
call
jnp
and
stos
cmpsb
pop
pop
adc
xor
incl
lock
xor
lea
push
sbbl
pushf
lret
ljmp
into
xor
sbb
sub
xchg
jg
add
jecxz
add
add
mov
clc
aad
jle
ret
xor
call
lcall
ss
rolb
jle
out
in
pushl
push
sbb
mov
push
mov
or
mov
add
mov
aaa
push
cmp
into
dec
stc
jecxz
xor
fnstcw
cmp
push
mov
imul
jl
add
adc
or
or
mov
pop
pop
sub
pop
je
popa
jl
or
mov
push
stos
roll
push
out
jecxz
mov
les
les
dec
repz
pop
fisttpll
jmp
adc
adc
repnz
jae
add
sub
add
pop
or
inc
rorb
mov
cmp
stc
mov
nop
or
cmp
cwtl
lods
cmc
inc
adc
stos
adc
mov
mov
sub
dec
lds
jo
xlat
and
xor
xor
adc
loope
jae
pop
adc
mov
adc
or
mov
sub
xchg
dec
lods
scas
cmp
sbbl
inc
fmuls
mov
xchg
mov
inc
imul
out
push
mov
shl
adc
push
push
sbb
or
cvttps2pi
mov
xor
imul
inc
push
lock
and
inc
xchg
xlat
loopne
std
adc
push
adcb
push
fsubs
clc
movsb
mov
test
ljmp
jbe
xor
scas
xchg
aas
shrb
mov
rcr
add
and
das
dec
notl
daa
xchg
and
insl
mov
jb
mov
jmp
mov
iret
js
jb
ljmp
fwait
cmp
addr16
jecxz
push
mov
loopne
lret
lahf
arpl
call
add
sub
and
das
outsl
or
mov
mov
dec
pop
es
push
in
stc
aad
loopne
pop
sub
mov
addb
ret
lds
pop
push
icebp
inc
hlt
xor
mov
das
add
fistpl
lds
adc
inc
add
in
sub
dec
cmpb
or
mov
xchg
or
ret
ret
cmp
mov
mov
inc
test
sub
hlt
subb
jbe
inc
insl
call
and
xchg
cmpsl
sbb
xchg
xlat
lcall
int3
xor
dec
mov
pop
jae
add
iret
out
shlb
stc
push
ret
cmp
inc
gs
sub
mov
pop
pop
mov
sub
dec
mov
cmp
xchg
cltd
test
mov
sti
mov
mov
cmp
in
inc
inc
and
xor
cmp
mov
sti
popa
inc
xorl
mov
cmp
mov
fimull
jp
jg
loope
ss
sub
lea
sarb
mov
pop
shll
fwait
push
add
mov
lock
cld
xor
dec
mov
mov
sbb
jo
dec
jnp
cmp
loop
das
stc
gs
inc
mov
fcmovb
sub
xcrypt-ofb
cmpsl
insl
sub
sbb
push
pop
add
adc
mov
repnz
bound
stos
mov
repnz
test
pop
fst
xchg
daa
aaa
imul
rcrl
lcall
and
push
sbb
mov
jge
test
loop
lret
inc
push
out
mov
loopne
mov
ljmp
or
orl
test
xlat
dec
mov
idiv
sub
or
or
test
push
and
mov
arpl
lfs
jg
push
jp
fdivr
stos
test
adc
or
loope
xchg
adc
ljmp
setb
add
in
cmpsb
adc
data16
mov
dec
sbb
mov
mov
out
std
adc
and
arpl
xchg
and
fisttpll
shll
lea
cmp
or
cmp
and
jecxz
aam
sbb
test
cli
shl
xchg
lahf
pop
pop
push
mov
or
push
das
jp
stos
add
or
push
add
imull
pop
cmpsb
dec
cwtl
lahf
or
dec
fmul
add
mov
push
xor
inc
xchg
inc
bound
fs
ja
xor
xchg
out
sbb
cmp
or
xchg
jb
stos
pushf
and
mov
mov
loope
mov
imul
lcall
jno
jae
icebp
sbb
iret
mov
mov
addb
cwtl
xor
dec
fistpll
call
ss
pop
ret
inc
jns
out
out
loope
cmpsb
dec
addr16
mov
notb
cmpsl
or
jp
into
test
inc
push
pop
aam
je
jmp
or
or
xor
inc
jl
xchg
subb
repnz
dec
aas
add
push
dec
je
cmp
addr16
aad
xchg
out
push
sub
fisubl
jp
jg
ja
pop
pop
das
push
mov
sbb
sbb
cld
xor
sbb
aaa
sub
sahf
push
dec
popa
sbb
paddusw
inc
rcr
push
mov
sbb
cmpsl
sbb
lods
or
mov
out
pop
lds
push
or
mov
jae
push
mov
es
pop
push
hlt
cmpsl
sbb
push
add
or
push
pop
mov
mov
cld
lods
pusha
addr16
inc
mov
ss
inc
popf
and
ret
insb
add
cmc
lahf
mov
xchg
push
imul
jmp
push
lret
jle
lock
ss
fwait
lret
iret
and
jg
jmp
cmpsl
das
les
push
jg
ror
icebp
mov
sbb
push
adc
add
ret
jmp
loope
add
mov
cmpsl
or
fs
shlb
into
loope,pn
push
loop
mov
mov
mov
xchg
jo
adc
repz
sub
loope
leave
bound
dec
cmp
popf
mov
inc
inc
std
js
xchg
mov
inc
jbe
xor
incl
mov
scas
pusha
lcall
mov
incl
inc
jae
cmp
push
add
xchg
sbb
das
or
rcr
or
and
push
jmp
xor
cwtl
sub
mov
sahf
add
incb
jl
inc
mov
outsb
sub
jle
sbb
sbb
cld
mov
lret
adc
push
and
cmp
mov
or
ljmp
mov
push
dec
imull
call
add
int3
mov
cmp
inc
jmp
data16
jae
pop
loopne
rcrb
xchg
pop
cmc
and
and
xchg
adc
push
sti
hlt
jmp
incl
filds
test
pop
fisttpl
sub
jecxz
ja
jl
adc
fwait
rorb
add
mov
mov
lock
ret
aad
cmpsl
sub
sbb
add
leave
pop
in
xchg
mov
cld
out
ja
inc
inc
push
fs
repz
mov
loop
pop
orl
pop
popf
es
call
ja
mov
pusha
add
in
repnz
push
and
loop
add
les
or
inc
mov
jp
cmp
adc
sarb
sbb
call
pop
je
dec
or
stos
stos
sbb
sbb
rorl
mov
test
add
sti
aas
pop
fsubp
popf
lds
into
popl
loop
mov
jp
xchg
jle
push
cmp
push
lcall
xor
xlat
clc
call
je
sbb
jmp
fildl
mov
jb
or
adc
mov
push
sub
add
addr16
inc
rorb
or
cld
sub
jle
add
inc
adc
push
and
adcb
inc
lret
mov
push
mov
loope
push
insb
daa
add
test
pop
sub
leave
lahf
hlt
dec
loopne
push
icebp
repz
adc
adc
mov
and
fs
ja
adc
sbb
jl
stc
xor
and
inc
mov
mov
icebp
push
call
dec
outsb
divb
leave
outsb
dec
gs
pop
std
add
mov
shll
cmp
mov
ret
and
mov
shrb
sbb
movsb
adc
pushf
out
pop
ret
lret
je
je
adc
xchg
lock
popf
decl
mov
out
pop
push
ds
sub
mov
adc
inc
jge
add
pop
pop
js
test
push
push
adc
push
cltd
push
lahf
inc
ds
lea
add
ja
push
pop
cli
bnd
ss
test
jecxz
adc
ror
rorb
sub
popf
pop
mov
cmp
rclb
inc
sbb
pushl
mov
repnz
push
aad
cmc
inc
repz
icebp
pop
imul
arpl
mov
jae
mov
icebp
inc
arpl
popf
mov
rorl
rclb
adc
xchg
lods
loopne
jl
push
icebp
push
adc
out
ret
lret
mov
jns
stos
dec
test
out
lds
add
push
jnp
xchg
sahf
lret
loopne
or
dec
decl
pop
das
shll
sbb
les
hlt
adc
out
cli
xchg
push
mov
sub
ds
adcb
mov
les
std
loop
es
mov
lret
ret
outsl
cli
inc
cwtl
pop
clc
in
sbb
out
inc
out
add
jns
mov
sbbl
jle
pop
mov
in
inc
or
sub
shlb
shrl
jp
mov
xor
js
and
jle
sete
emms
cmpsl
add
shrl
and
clc
lds
xchg
pop
cmpsl
cld
jnp
and
mov
inc
adc
negl
or
in
xor
roll
sub
sub
dec
flds
cld
or
stos
les
xchg
call
sets
ss
sub
cli
adc
enter
pushf
adc
push
pop
push
sar
pop
std
mov
or
mov
sbb
rcl
roll
cltd
mov
cs
add
and
xchg
add
enter
xbegin
ja
jmp
mov
jl
pop
mov
pushf
aas
dec
mov
pusha
pushw
ljmp
jmp
test
mov
gs
fsubl
cmpsb
subl
adc
movsl
push
rcrb
fwait
sahf
aad
nop
faddl
imul
or
pop
xor
js
fisttpll
or
js
pop
imul
movsl
aas
mov
insb
mov
ror
bound
call
push
mov
andb
ja
inc
ret
out
std
lock
or
pop
dec
add
inc
in
ljmp
test
orl
cld
lea
jbe
dec
jmp
dec
aaa
nop
xor
stos
or
jae
or
out
scas
or
iret
inc
pop
xor
int3
mov
pushf
rcrl
xor
movsb
pop
xor
sahf
xchg
cmp
xor
shll
cmp
sbb
push
cmpb
pop
sbb
mov
jg
add
or
mov
stc
mov
push
in
orb
lea
jecxz
lock
dec
sub
xor
int
loopne
mov
out
xchg
and
xor
cmp
sbb
mov
sbb
je
stc
and
pushl
sbb
sahf
cmp
int
and
nop
dec
mov
mov
lret
and
imul
pop
sti
call
xor
nop
jl
inc
call
dec
icebp
dec
ljmp
add
mov
xor
push
enter
fisttpll
sbb
movsl
incl
out
adc
xorl
cmc
mov
fwait
sbb
mov
lds
push
cmp
popa
js
mov
and
mov
pop
cmpsl
pop
ret
mov
mov
mov
and
insl
movsb
jns
aaa
sbb
xor
les
repz
clc
icebp
loope
mov
mov
push
mov
sbb
or
or
clc
pusha
mov
and
xor
dec
fisttps
inc
aaa
push
cmc
cli
ret
daa
pop
push
push
xchg
test
xlat
mov
mov
pop
test
pop
mov
add
test
add
test
rolb
and
sar
inc
add
push
pop
incl
sbb
inc
mov
testb
rorl
jmp
pop
dec
mov
lock
scas
test
test
and
and
xor
pop
in
mov
add
or
daa
push
mov
push
fcmovnbe
add
mov
movsl
shrb
mov
mov
sub
rcl
jbe
xor
daa
mov
inc
adc
aas
ljmp
xchg
sub
lahf
dec
aaa
inc
cmpsl
pop
add
pop
shlb
xchg
adc
jb
loopne
mov
fwait
adc
ss
push
mov
out
mov
sbb
outsl
xchg
shll
outsl
add
rolb
and
mov
jbe
jo
pop
or
jo
mov
pushf
jns
rorb
out
push
call
jmp
enter
js
jg
or
loop
gs
lods
sub
lcall
mov
aaa
pop
push
mov
sarl
mov
add
xchg
push
pusha
pop
insb
lahf
test
clc
xlat
pop
xor
outsl
or
jle
lock
inc
and
aam
adc
mov
pop
mov
pop
loope
cmp
mov
lods
adc
or
pop
roll
jp
negl
push
aaa
jb
mov
push
mov
mov
lock
add
ret
pop
lock
mov
jmp
sub
outsl
pushf
mov
adc
cmpsl
xor
pop
jne
xor
mov
mov
mov
mov
icebp
mov
gs
loop
icebp
std
adc
adc
popa
ljmp
dec
push
push
adc
adc
ja
icebp
fwait
cwtl
in
fimuls
hlt
adc
out
cmpsb
dec
into
stc
cmp
cmpsl
inc
cs
mov
and
add
jg
aas
dec
aam
adc
loopne
push
push
dec
mov
sub
ja
xlat
mov
out
mov
sti
punpckldq
xchg
jp
xchg
add
xchg
fcompl
xchg
sahf
movb
fldl
fdivrl
push
add
out
movsl
incl
jge
pusha
push
adc
xchg
subl
push
fbstp
es
pop
lcall
test
push
cmp
xchg
sub
nop
addr16
inc
outsl
movsb
ja
ret
shll
adc
aaa
insb
jbe
icebp
mov
add
adc
mov
cltd
lds
xchg
or
xor
add
or
or
cld
lcall
lea
out
lock
cmp
out
jp
mov
pusha
addl
cwtl
sub
cmpb
xchg
adc
mov
or
mov
inc
mov
aad
mov
jg
push
divb
aas
jo
call
or
adc
push
push
adc
rolb
std
rorl
pushf
lret
out
push
pop
nop
adc
cs
loop
mov
fidivrl
or
inc
sbb
loope
std
or
mov
xchg
gs
adc
aad
clc
ja
cmp
out
xchg
cld
mov
cmp
lcall
clc
in
lods
cwtl
popf
enter
cmp
push
pop
rcl
xlat
adc
inc
or
cld
clc
call
loopne
mov
xor
mov
shlb
and
es
mov
in
hlt
or
dec
je
dec
inc
int
fldenv
or
lahf
xchg
or
enter
outsl
xor
mov
mov
jl
scas
add
mov
push
mov
jle
fwait
dec
into
cld
fcmovnbe
outsl
test
testb
xchg
roll
or
ret
push
outsb
add
lahf
cmp
orb
out
sbb
add
into
push
je
rcll
add
adc
cwtl
jp
in
jne
test
cmp
out
mov
loop
jno
xchg
and
adc
push
adc
jb
test
sbb
mov
cmpsb
ds
call
xlat
sbb
loope
mov
add
lret
icebp
test
jg
add
sbb
cltd
cmp
scas
loope
xor
dec
jp
cld
dec
lea
and
add
sbb
sbb
filds
push
or
sbb
notl
mov
in
inc
outsl
lock
ret
push
aas
scas
and
jb
or
adc
xchg
add
imul
sub
xor
jg
decb
push
pop
repnz
adc
cmp
outsb
test
mov
mov
fldt
cmc
stos
out
xor
and
mov
jo
cmp
xor
jle
fnsave
sbb
in
ja
mov
or
ret
dec
ffree
push
pushf
fldt
xchg
insb
sbb
sub
add
ss
and
aas
mov
inc
push
dec
cmp
enter
mov
jl
cmp
fcom
adc
add
push
pushf
ficompl
sub
scas
lret
ja
push
cli
pop
out
insl
fadds
test
cmp
das
stos
std
mov
sub
jo
lock
lock
inc
pop
xchg
adc
jbe
jno
ret
pop
xchg
sbb
jae,pt
cmp
mov
jecxz
lds
std
adc
and
mov
inc
daa
sub
aaa
out
dec
mov
pop
dec
sbb
and
cmp
mov
adc
or
stc
push
cld
inc
loopne
add
xor
inc
pop
dec
loope
sbb
test
outsb
pop
icebp
aas
jl
pushf
sbb
ret
mov
jns
test
sbb
cwtl
dec
adc
add
mov
sar
imul
in
push
cwtl
add
mov
dec
imul
jo
or
repz
inc
fists
lret
sbb
push
js
push
xchg
pop
lea
mov
test
test
enter
add
leave
cmp
lret
jge
pop
dec
cmpsl
inc
ds
or
mov
mov
pop
sbb
lods
popf
scas
xor
xor
mov
or
dec
pop
ret
add
inc
pop
testb
mov
xlat
pop
mov
adc
insl
mul
dec
adc
shrb
nop
and
push
sbbl
add
adc
loop
cmp
lcall
sub
pop
sahf
xchg
pop
jmp
sub
cmp
adc
roll
jmp
xor
inc
loop
daa
cs
test
add
gs
rclb
clc
xchg
dec
sbb
addb
pop
or
lock
stos
or
lods
cmp
push
pop
xchg
cs
push
or
mov
das
cmp
pop
or
cmp
test
pop
in
jp
aaa
gs
loop
sub
pop
xlat
mov
pop
pop
mov
sub
push
clc
xor
fcoms
gs
loope
dec
cmpb
outsl
push
xchg
sub
cwtl
sbb
test
mov
aaa
mov
pop
arpl
ds
and
jg
andl
xchg
inc
and
mov
push
js
or
in
pusha
xchg
imul
sbb
or
in
and
ds
out
xchg
push
and
mov
pop
sub
scas
cli
xor
bound
cmp
out
cmp
cmp
cltd
push
sub
lahf
sub
pop
xor
mov
and
and
test
xchg
xor
xchg
cmpsb
mov
push
stos
fcoml
adc
lods
addb
sbb
mov
out
xor
pop
ret
and
push
scas
inc
lcall
mov
mov
icebp
ror
arpl
push
repz
mov
imul
cli
xrelease
shlb
dec
jo
aad
inc
cmc
mov
in
xchg
sbb
scas
inc
rcrl
adc
xchg
fnstsw
fcmovu
test
hlt
mov
sahf
mov
ds
leave
lret
fldt
popf
mov
or
gs
gs
mov
aaa
push
mov
xchg
aam
push
scas
cmpsl
xor
adc
sbbb
and
rol
xchg
or
imul
xchg
add
jo
push
push
scas
cld
jecxz
jg
insb
xchg
ss
mov
addr16
xchg
movl
loope
clc
ja
add
mov
incl
hlt
or
mov
les
bound
test
push
rclb
mov
push
fiadds
adc
aas
popf
test
add
loope
fwait
pop
and
hlt
add
test
daa
or
bound
push
pushf
lret
and
push
nop
pop
pop
insb
sub
add
decb
repz
xchg
xor
and
pop
cli
rcl
loopne
idivb
sbb
sahf
clc
loopne
push
arpl
notl
repz
add
jmp
clc
sbb
push
cld
insl
push
pop
push
lods
jno
jmp
cmp
jle
incl
inc
pushf
xchg
nop
addl
push
fwait
mov
xor
mov
call
and
stos
cmp
dec
test
adc
clc
cmp
cmp
iret
shlb
xchg
arpl
ljmp
js
fcomps
movsb
stos
or
aaa
int3
xlat
or
inc
xor
decb
scas
into
rolb
fsubs
push
bound
add
popa
daa
sbb
lods
or
sbb
or
cmp
in
xor
andl
cli
push
push
mov
fmuls
inc
test
inc
mov
aad
rcl
pushf
add
adc
add
jmp
dec
cmp
cmp
sub
adc
xchg
das
popa
mov
mov
call
imul
loope
addr16
cmpsl
adc
add
adc
sahf
sbb
pop
add
enter
add
loop
pushf
pushf
popa
in
and
sub
push
pop
xor
int3
stos
movb
ret
mov
xchg
push
hlt
cmpsl
inc
mov
pop
or
inc
les
or
adc
jns
nop
rorl
adc
hlt
and
push
shll
jg
stc
add
mov
add
pop
and
cmpsl
xchg
adc
cwtl
outsb
arpl
dec
sbb
aad
inc
cmpl
mov
jl
mov
std
fwait
outsb
iret
push
cli
into
mov
mov
pop
clc
pop
adc
xor
pop
xor
jg
jmp
lcall
rorb
jmp
iret
mov
movsl
fsubs
mov
lea
addb
jl
mov
ljmp
clc
std
lcall
daa
push
or
jp
std
mov
std
cmp
insb
cmp
inc
incl
cld
mov
or
pop
shrb
jmp
inc
cmc
pop
mov
movl
sbb
sbbb
gs
popf
loopne
add
jae
ds
les
pop
inc
jle
test
fiaddl
mov
sbb
imul
sbb
in
sbb
jmp
test
ret
sbbl
push
adc
call
ljmp
cmp
add
fstl
sub
xchg
test
mov
daa
mov
in
fisubrs
mov
out
cwtl
cmp
xchg
inc
out
sbb
inc
xorl
pop
daa
mov
in
call
push
insb
dec
and
and
mov
loope
out
test
or
outsb
decl
adc
mov
mov
icebp
mov
jg
outsb
inc
sub
xchg
pushf
fcmovu
push
cmc
or
jp
lock
adc
loope
sti
lcall
les
cmp
nop
push
and
icebp
andl
adc
outsb
mov
fists
mov
shll
enter
fadds
fisttpll
lds
je
mov
iret
rclb
push
push
cmp
dec
jmp
enter
add
mov
nop
mov
xchg
fimuls
cld
cmpsb
imul
inc
push
ficomps
je
cmc
hlt
xor
inc
cmpsb
jmp
or
dec
lods
mov
dec
loop
add
xor
adc
mov
jle
adc
add
add
cmp
leave
pop
clc
xor
and
or
jle
fwait
call
sbb
jg
xor
add
int3
xor
popf
lods
push
push
jg
xchg
out
das
ds
jl
rolb
imulb
or
pop
std
stos
incb
cmp
fildl
dec
cwtl
gs
in
sbb
inc
jns
dec
mov
xor
cmp
or
stos
test
cmpsl
daa
xchg
cmp
mov
daa
mov
xor
mov
repnz
or
aam
push
icebp
data16
pusha
pusha
mov
sbb
sarb
adc
or
xchg
or
dec
insl
int3
loop
cmp
push
insl
add
jns
outsb
aas
lret
or
sub
fadds
mov
and
adc
mov
pushw
jl
jno
or
call
cltd
pop
fisttps
push
inc
pop
loopne
dec
dec
test
dec
and
inc
jl
cmp
test
dec
mov
insl
or
cmc
mov
dec
stos
push
hlt
pop
ljmp
test
cmp
imul
rorb
call
int3
pop
add
jae
pop
pop
shll
addl
loopne
xor
fadd
dec
push
pop
ljmp
xor
mov
cmp
sbb
mov
xabort
das
cmp
mov
lea
js
testb
jns
xor
push
jecxz
and
aad
pop
xchg
jge
bndstx
or
cmp
push
jb
mov
or
rclb
pop
jge
mov
daa
cmp
adc
pop
movsb
mov
test
push
add
jbe
and
mov
out
sub
xor
in
cld
jmp
andl
cwtl
in
mov
add
in
xchg
rcrb
in
lock
jecxz
int
jne
ror
int
inc
and
adc
hlt
cli
aam
cltd
cmp
fdivr
cmc
or
gs
push
les
inc
adc
sub
add
cmp
je
or
popa
rcl
push
stos
js
sub
cld
jns
pop
cmpsl
lods
inc
lods
sbb
inc
sbb
cmp
xor
pop
adc
xor
es
fisubl
outsl
scas
cmp
adc
adc
sub
fcoms
shr
out
dec
xchg
es
loop
adc
sub
mov
xlat
outsb
ficompl
cmp
test
mov
neg
inc
arpl
rclb
fucom
push
or
cltd
cwtl
dec
aas
scas
enter
aas
mov
iret
sbb
ljmp
adcl
std
adc
adc
jnp
pop
sti
jge
push
push
pop
mov
push
nop
dec
push
aaa
adc
mov
rcrl
aam
pusha
xchg
cwtl
cmp
es
and
pop
dec
icebp
dec
dec
je
sub
push
dec
mov
xchg
lret
mov
aaa
sbb
inc
cmp
int
sub
inc
minps
cld
push
arpl
into
out
xchg
sub
bound
push
inc
daa
mov
add
aas
xor
pop
icebp
sub
sub
ss
and
xor
decl
icebp
movsb
inc
pop
sub
push
mov
xchg
rcl
adc
shlb
add
in
or
test
mov
imul
rcrb
movsb
pop
negl
decl
into
lea
pusha
mov
popf
push
inc
sbb
outsl
inc
ds
xorl
mov
inc
jg
loopne
xor
cmp
xchg
xor
or
or
pop
loop
rclb
mov
in
fcmovbe
and
mov
ss
pop
nop
xchg
mov
sub
pop
mov
or
les
in
pop
dec
rcr
movb
insl
mov
or
inc
es
or
rcrb
movsl
call
adc
or
add
push
mov
sbb
jmp
mov
push
loope
mov
das
inc
adc
xor
dec
jp
fisubl
lock
inc
and
insb
xor
mov
or
insb
loope
icebp
or
testl
and
push
fcmovne
in
mov
mov
xor
aam
test
pop
mov
sbb
incl
fldl
addl
cmp
sbb
or
sti
aam
fwait
inc
pop
sbb
sahf
xor
lret
int3
nopl
aad
sbb
xchg
cli
fs
outsb
and
lock
or
xor
call
inc
xchg
mov
in
push
jbe
sub
add
inc
push
pop
std
bound
hlt
xor
dec
outsb
je
jno
xorb
or
rcrb
push
or
xor
adc
imul
pop
stos
sbb
sbb
push
das
les
divb
loopne
push
xchg
sbb
or
mov
jae
mov
lahf
test
jb
pusha
fdivrs
or
rclb
xchg
sbb
sub
sbb
inc
ret
jb
sub
pop
stc
mov
xlat
dec
loopne
leave
cmpb
adc
jae
lods
pop
push
push
std
nop
lock
xchg
dec
sbb
scas
shrl
adc
leave
or
xor
and
sbb
dec
xchg
xchg
dec
adc
mov
pop
push
cmpsb
pusha
sub
jns
lock
mov
pusha
or
hlt
mov
add
fdivrs
xor
inc
sbb
loop
aam
sbb
enter
xor
cli
lock
mov
mov
sbb
andb
or
inc
add
xor
sarb
stos
jp
adc
jle
cli
negl
inc
clc
loopne
xchg
pop
sbb
pop
xor
add
xchg
mov
add
cwtl
js
cli
jb
loopne
sub
mov
pushf
mov
push
test
jns
xorl
test
call
inc
dec
mov
adc
sbb
je
testb
cmpl
jle
mov
scas
jg
pushf
dec
dec
inc
adc
cmp
lahf
and
push
inc
xchg
enter
mov
adc
out
add
jge
sbbb
dec
in
dec
or
movsb
js
cmp
aam
jo
sub
dec
jle
cmpsl
jge
orl
jecxz
insl
inc
ja
push
push
cmp
pop
rcrb
sahf
imul
ljmp
mov
pusha
pop
jecxz
jae
jo
out
sbb
mov
out
pop
je
lret
mov
movsb
jae
aad
mov
pop
ret
add
sbb
push
imul
mov
jle
sbb
mov
mov
cmp
mov
jo
sbb
and
or
pop
jo
mov
daa
daa
out
pop
test
cli
adc
or
rcl
and
sbb
jle
mov
leave
jae
adc
sub
xchg
or
call
fwait
ret
rcr
lock
pop
push
jo
adc
xchg
lds
test
mov
and
or
xor
push
mov
outsb
mov
xor
mov
jno
pop
lock
lods
mov
cmp
pop
pop
mov
ds
sahf
mov
std
popf
icebp
adc
ret
inc
stos
ja
std
xchg
test
mov
push
pusha
cld
mov
insb
jno
xchg
mov
cmp
sbb
sub
and
jecxz
sahf
bound
pop
pop
movsb
ja
aam
cmp
mov
imul
pusha
inc
mov
xchg
pop
test
sbb
mov
jmp
inc
jmp
sbb
and
loopne
add
orb
adc
pop
fmuls
jg
lcall
out
sbb
lock
std
push
faddl
outsb
shrl
and
xchg
push
or
add
roll
test
sbb
les
xorw
mov
push
roll
or
adc
je
inc
jle
dec
mov
test
push
dec
xchg
in
xor
scas
lock
sub
and
aam
loopne
dec
add
movsb
stos
inc
and
int
cmpsl
jb
rclb
aad
test
incb
je
jl
push
jl
subl
cmpsb
adc
or
out
incb
sub
adc
aas
push
and
dec
jnp
dec
into
ror
inc
out
rcrb
mov
incb
mov
and
loopnew
mov
mov
rol
push
xor
addb
imul
jns
into
inc
cmp
std
adc
popa
xor
decb
pop
fnclex
shrb
rcrl
scas
or
pusha
push
fisttpl
jge
call
lea
ja
add
add
sub
xor
test
cmpsl
decb
inc
xor
or
or
aam
ret
push
and
jo
dec
fnstsw
sbb
lahf
adc
push
xchg
sub
cmp
pop
jmp
int
ja
add
and
inc
xor
or
rcr
in
nop
aas
mov
idivl
call
adc
repz
jae
dec
and
enter
aas
fisubrl
fsubs
mov
fldl
jl
inc
fs
mov
imul
lahf
popf
filds
mov
mov
nop
mov
lods
inc
xor
mov
sub
add
and
cmpsl
mov
test
mov
cld
mov
push
out
cmpl
push
in
aam
ja
add
pop
stos
push
lds
das
ret
xchg
pop
fistl
mov
xchg
xchg
add
dec
jne
cmpsb
aaa
sub
add
and
mov
sub
icebp
cmpsl
iret
inc
cmp
test
out
jbe
push
enter
test
add
subb
inc
or
pop
inc
xchg
push
mov
shll
pop
mov
incl
insb
pushf
fdiv
or
ljmp
or
stc
scas
or
cmp
add
test
push
ret
xor
adc
and
pop
call
outsb
mov
pop
adc
loope
lahf
mov
sti
nop
les
cmp
shlb
mov
repnz
shrl
and
ds
ret
jno
pop
mov
jns
je
pop
inc
ret
pop
mov
out
cli
shlb
mov
jp
mov
push
xchg
adc
cltd
jl
or
jg
and
fmul
push
fimuls
repz
pop
ss
repnz
out
pushl
sub
loop
test
add
jg
mov
mov
scas
hlt
sbb
scas
jo
loope
mov
add
in
cmp
lret
es
lahf
aam
aas
jns
cmp
cmp
add
flds
push
xorb
push
pop
adc
std
and
mov
and
mov
pop
dec
nop
jbe
mov
add
mov
push
faddl
decb
push
aaa
in
and
rolb
mov
xchg
loop
inc
lcall
mov
dec
or
xor
xchg
xchg
mov
xchg
push
add
jbe
enter
rcrb
jecxz
ljmp
xchg
xor
jne
push
mov
add
add
addr16
movzbl
dec
pusha
in
cmpb
or
repnz
lahf
push
negl
pop
push
js
scas
sar
mov
inc
cmp
mov
cmp
mov
out
mov
jg
ss
lods
sub
sbb
sub
dec
jg
inc
or
mov
js
and
out
stos
mov
push
incl
and
sarl
inc
lcall
in
loope
add
cmpsb
cmc
ss
arpl
rolb
mov
and
jb
icebp
adc
popa
lods
aad
xor
push
mov
cli
push
fnstcw
shl
add
or
pop
jne
popa
inc
inc
iret
icebp
push
psllw
pusha
pop
icebp
mov
mov
pop
xor
mov
add
xor
and
ret
xchg
rcl
mov
scas
orl
ljmp
inc
mov
add
sbb
notb
or
subb
fisubs
mov
push
fcompl
sbb
push
inc
fcmovbe
dec
sub
cld
jo
pop
mov
stos
into
dec
shlb
sbb
pop
push
mov
adc
pusha
and
mov
sbb
lock
add
pop
pop
nop
aas
rorb
mov
add
xchg
mov
lock
dec
or
out
pop
sbb
push
ss
or
std
pop
adc
lock
sbb
shrl
adc
or
add
pop
test
push
dec
jp
jle
les
cmpsb
nop
out
lods
clc
fcom
inc
sub
mov
les
sbbl
push
int3
adc
xor
adc
ds
movsb
xor
jecxz
mov
cmpsl
scas
cs
push
pop
and
xor
and
add
lods
pop
jecxz
call
or
cmp
add
adc
mov
mov
in
lds
inc
sbb
fwait
adc
scas
addr16
inc
popa
mov
out
fcoml
arpl
enter
xchg
ret
aam
inc
shl
cmp
pop
loopne
loopne
jne
mov
pop
pop
pop
cld
ret
lea
mov
stos
std
sbb
push
push
fimull
mov
fldl
and
and
cmp
or
imul
xor
adc
add
pusha
push
inc
push
inc
lret
lretw
add
mov
xchg
jbe
std
aad
mov
jmp
adc
pop
sbb
nop
inc
sub
mov
jnp
jbe
or
loopne
pusha
roll
ds
mov
mov
bound
xor
xchg
rolb
imull
mov
xchg
xor
push
lcall
xor
roll
sarl
clc
push
aam
jmp
jle
push
mov
shl
mov
loop
pop
lcall
mov
dec
call
lods
mov
add
sub
int3
pop
out
lahf
sbb
push
and
sbb
ss
std
arpl
dec
push
stos
leave
fimull
mulb
lret
pop
and
lcall
inc
shll
dec
cmp
or
loop
lret
mov
jg
xchg
cmp
daa
sbb
push
int3
or
pop
sbb
test
push
jmp
das
ljmp
stc
jl
pop
into
rcrb
mov
pop
xchg
and
movsl
andl
cli
xor
ljmp
rolb
mov
hlt
or
or
out
jmp
subb
scas
in
ljmp
mov
or
pop
mov
xchg
popa
arpl
add
movsb
xchg
push
ror
jp
cmp
in
push
or
pop
lea
idiv
mov
clc
fdivl
dec
xchg
and
sub
aaa
daa
pop
xor
cmp
jl
mov
test
fnstenv
jle
adc
cmpsl
sub
add
test
add
mov
lods
xor
lock
and
das
in
adc
jg
fidivrs
push
or
cmpxchg
xchg
lahf
sub
jecxz
std
out
sahf
outsl
out
ror
sub
enter
jo
pop
mov
adc
pop
adc
fs
mov
ds
sub
jns
std
push
jmp
push
leave
lods
inc
das
pusha
inc
jae
xchg
or
sbb
pop
js
push
movsb
xor
mov
roll
dec
call
add
push
push
mov
jno
or
ss
dec
mov
pop
in
push
popa
mov
or
dec
or
out
cltd
mov
cmp
or
xchg
mov
xchg
mov
xchg
adc
dec
sbb
lret
clc
or
test
mov
out
add
in
ja
mov
inc
jo
lock
cmp
xor
stc
das
rclb
add
aaa
out
pop
scas
insb
enter
adc
xchg
sbb
inc
adc
mov
andb
addl
push
es
push
cmc
push
inc
addr16
xor
sbb
push
psubsw
xchg
add
iret
aas
cmp
jb
dec
xor
cli
stos
fisubrl
pop
clc
fmuls
inc
leave
xchg
mov
lret
mov
cmp
pop
mov
and
pop
cli
mov
aam
push
or
loopne
adc
pop
outsl
mov
push
lock
rcll
out
ja
mov
cltd
dec
lcall
lea
ret
clc
sbb
xor
in
sbb
jp
test
int
lahf
shrl
movsl
inc
inc
subb
rol
jmp
mov
or
sbb
mov
xor
dec
dec
mov
xchg
cmp
das
add
ds
jnp
testb
jg
fimuls
mov
ja
iret
sahf
mov
popf
mov
push
xor
cmpsb
pop
call
lret
addb
sbb
inc
incl
sub
add
into
pmaxub
cltd
jg
leave
pop
out
xlat
sahf
lock
adc
ljmp
and
inc
mov
cwtl
nop
lret
inc
scas
sbb
lea
test
clc
mov
cltd
dec
mov
lret
stos
adc
out
in
adc
pop
xor
pop
enter
and
lcall
iret
iret
mov
loop
jnp
loop
xor
mov
mov
add
sarl
xor
scas
negl
aas
push
jle
hlt
push
or
ss
mov
mov
push
cli
add
jmp
sub
out
jne
loope
mov
subl
mov
inc
js
mov
hlt
lds
das
sbb
inc
cmpsl
aaa
sar
xor
lea
mov
out
aaa
jns
sub
fwait
fwait
out
jge
rcrb
pop
or
lahf
sbb
jecxz
lock
mov
arpl
xor
pop
imulb
mov
inc
fsubs
fs
adc
xor
or
sahf
out
mov
mov
sub
xchg
inc
movsl
loopne
and
test
dec
inc
or
cmpsl
push
divl
ss
cmp
mov
in
pop
dec
mov
les
or
push
js
mov
sbb
std
and
mov
lds
mov
outsb
pop
std
jge
pop
and
les
push
cmp
es
repnz
testb
or
or
clc
sub
enter
pusha
push
mov
outsl
mov
push
out
hlt
and
sub
scas
sarb
xchg
hlt
mov
cmp
cmp
add
dec
andl
jp
clc
mov
pop
jbe
dec
js
and
out
mov
cmp
loopne
mov
xorl
shrl
lea
mov
dec
decb
or
lock
lcall
aam
adc
or
and
mov
ss
dec
data16
sbb
out
mov
push
pop
push
das
fstl
sub
or
jnp
mov
push
add
pop
enter
mov
aam
pop
shlb
fcom
leave
or
jge
xor
add
outsb
jp
jmp
andb
int3
mov
ret
mov
xlat
aam
pop
push
lea
or
push
ror
xor
cmc
push
dec
adc
loope
enter
dec
ds
addr16
pop
popa
or
lret
imull
out
jl
call
mov
and
test
fisubrl
add
ret
je
and
daa
outsb
insb
fisubrs
icebp
pop
jno
cwtl
xchg
loope
loop
cmp
ljmp
rcrl
add
push
mov
jb
push
loopne
aam
inc
and
or
mov
jp
test
mov
decl
dec
dec
popf
mov
add
fcomip
adc
push
xor
pop
mov
fcmovnbe
or
mov
in
or
cmp
dec
sub
lods
mov
add
stos
inc
jle
mov
loope
xor
fisttps
or
xchg
test
cmp
testb
adc
mov
inc
add
jnp
mov
xchg
addb
ljmp
sbb
mov
xchg
es
js
push
out
adc
mov
ret
subl
mov
sbb
pop
test
push
jle
lock
mov
adc
jnp
lds
mov
cmpsb
push
repz
push
mov
mov
fdivrl
jp
push
popf
push
xlat
or
mov
add
adc
mov
cmp
imul
push
subl
and
xchg
int
push
xchg
addr16
nop
mov
inc
xor
mov
cmpsb
ja
cmpb
test
cmp
mov
fstpt
scas
xchg
or
sbb
out
pop
clc
les
test
subl
ljmp
iret
leave
dec
mov
push
inc
pop
xchg
push
pop
dec
decl
and
ds
jno
mov
mov
lret
mov
and
and
and
popa
or
rcr
sbb
out
arpl
jg
inc
cmp
mov
mov
sbb
dec
out
pop
push
ret
xor
stos
aas
sbb
and
jmp
ret
in
jbe
stos
pushf
add
push
das
enter
dec
cs
aaa
mov
push
push
and
stos
orb
mov
jle
cltd
xor
loope
les
fs
je
push
cmp
cmpsb
dec
or
dec
rcrb
loop
inc
and
lcall
lock
mov
icebp
repz
pusha
ss
pop
mov
push
pop
cmp
test
cmc
rcl
scas
cld
mov
insl
dec
stc
xor
bound
mov
int3
stos
aaa
test
jg
lret
xor
test
push
int
aas
fmul
aam
lds
cmc
es
rcrl
ljmp
jge
mov
mov
rcrb
xchg
pusha
push
gs
jle
mov
das
cmc
cs
pop
xor
sbb
jb
pop
fchs
and
jmp
popf
cmp
jmp
shll
xchg
and
fiadds
lret
bound
or
mov
or
rolb
dec
cmc
mov
repz
mov
and
data16
rclb
sub
loop
and
cwtl
es
pop
sub
dec
gs
incl
adc
jne
mov
mov
pop
mov
rolb
pop
cli
pop
enter
sub
pop
or
push
and
lock
stos
lahf
call
test
jp
jnp
xchg
or
test
xchg
nop
loope
clc
pop
mov
push
dec
outsl
cltd
mov
jle
push
adc
cmpsb
dec
add
loop
inc
xor
ljmp
inc
rcl
sub
add
fistpll
push
push
jae
repnz
push
inc
lahf
pushf
xlat
inc
js
pop
inc
ret
fcomps
push
imul
mov
mov
ss
fcmovnbe
dec
clc
scas
adc
mov
cmpsb
repz
imul
dec
jp
js
adc
loop
sub
xlat
inc
fisttps
popf
imul
aas
jbe
fcompl
popa
orl
dec
mov
cli
xchg
pop
mov
push
dec
add
outsl
mov
cmpsl
xchg
sahf
repz
inc
jg
push
push
dec
jae
inc
imul
add
cmp
cmp
inc
aam
filds
xlat
mov
adc
mov
ja
bnd
mov
test
mov
mov
xchg
addr16
jge
cmpsb
pop
std
xchg
jg
sarb
int
fcmovu
dec
pusha
out
xchg
dec
jmp
inc
mov
mov
xchg
add
sahf
xor
cmp
aam
inc
sbb
jl
pop
pop
sub
outsl
add
cld
sbb
adc
dec
mov
mov
xor
popa
inc
add
arpl
out
mov
js
inc
mov
cmp
pop
mov
push
mov
decb
mov
or
push
push
imul
sar
out
ds
lock
xlat
xor
xor
insb
pop
dec
rcll
sbb
lods
mov
push
dec
xor
arpl
hlt
decl
inc
push
adc
jne
xor
jnp
inc
push
sbbb
stos
pusha
loop
mov
cmc
mov
lock
adc
push
pop
lock
jl
pop
int
mov
incb
adc
adcb
adc
jns
data16
xchg
hlt
imul
jg
call
adc
mov
mov
sub
pop
cli
or
cmp
enter
test
inc
aaa
xchg
into
xchg
lcall
ror
inc
lock
lds
add
bound
pop
fidivrl
insb
mov
shlb
mov
mov
mov
repnz
push
fstp
stos
addl
push
clc
mov
stc
mov
adc
clc
or
mov
decb
inc
fwait
ror
jo
and
mov
inc
sbb
lret
push
loopne
cmp
clc
das
and
les
mov
or
test
xor
js
cmp
fstl
ja
add
cmp
adc
mov
dec
pop
mov
and
pop
add
addl
push
mov
sbb
inc
mov
addr16
js
push
and
cmp
xor
enter
or
and
mov
aad
adcb
ljmp
push
xor
add
cld
cmp
dec
xor
enter
mov
imul
dec
movb
es
les
insl
or
pushf
mov
loop
add
mov
mov
outsl
dec
loop
jl
or
lcall
loope
ret
in
push
es
gs
adc
call
inc
mov
dec
insl
fstl
pop
mov
sbb
enter
mov
pop
iretw
lret
jmp
add
fldt
sbb
aaa
add
lcall
pop
dec
cli
lock
jecxz
jl
mov
xor
test
xor
bound
outsl
movsb
outsl
push
push
add
push
mov
test
jg
add
adc
sbb
mov
subl
out
cmp
mov
xchg
shll
or
sarl
movsb
call
cli
or
adc
adc
hlt
sahf
fidivl
nop
insl
jecxz
cld
out
sbb
aam
popa
jno
ljmp
fs
xchg
incl
sub
hlt
lahf
adc
rcl
lock
fbstp
dec
rclb
call
clc
xor
lds
mov
push
icebp
xchg
mov
shrb
xchg
movsl
mov
std
stos
pop
ss
rclb
mov
cs
ficoml
dec
pop
sbb
bound
push
xchg
add
rcrl
lahf
loope
in
jne
fdivrs
dec
xchg
pop
fidivl
sbb
inc
pusha
loope
movsl
adc
mov
incb
ret
push
mov
push
push
loop
add
out
xor
jbe
int3
dec
fs
inc
add
sarl
in
incl
lret
clc
mov
lret
and
ss
cmp
mov
sbb
stc
aad
xchg
sbb
jo
inc
add
add
pop
nop
adc
icebp
xor
push
dec
mov
cmp
and
rol
daa
dec
add
jg
add
popa
popf
shr
pop
add
js
test
mov
sub
mov
cvtps2pi
es
push
lods
jge
in
mov
or
mov
out
cmc
mov
pop
xchg
sar
xchg
repz
or
add
sub
idiv
in
cmp
jecxz
outsl
sbb
sub
cwtl
inc
mov
shrb
movsb
mov
add
test
out
pop
ret
in
add
std
push
int
stc
loopne
aas
fisttpll
ffree
pop
test
mov
inc
lods
es
cmp
pushf
ljmp
pop
cmp
or
nop
add
push
je
jle
cmp
enter
pop
jecxz
pop
xor
lods
jns
pop
dec
push
repz
push
sbb
add
jmp
mov
adc
icebp
xorl
inc
or
jb
aas
sub
fadd
shlb
fwait
sbb
int3
ret
jg
shrb
imul
add
or
jb
rorl
mov
cmp
loope
xchg
sub
subl
add
mov
gs
leave
jo
icebp
lods
cmp
push
pop
mov
add
cld
ljmp
enter
sbb
or
daa
cmpl
mov
sbb
sub
orb
push
rcll
push
sub
cmc
imul
mov
sub
jp
leave
js
popf
clc
xor
insb
mov
dec
int
divl
rcr
mov
lea
add
pop
mov
mov
xchg
dec
or
xor
jp
dec
je
scas
fwait
adc
xor
cmp
pop
js
add
mov
mov
jns
add
mov
jb
popa
jns
mov
pop
lods
cli
stos
xor
xlat
mov
jl
mov
mov
jl
cmp
mov
mov
test
or
adc
sbb
es
ss
xor
dec
or
cmc
mov
pop
mov
jb
js
gs
push
cmp
rol
repnz
subb
fcoml
and
mov
loopne
adc
stos
xor
pop
jg
jmp
leave
fsubrs
adc
lock
jno
ds
aas
push
ficoml
inc
sti
jmp
nop
inc
jbe
repnz
and
and
jmp
inc
xchg
in
pop
movb
cs
mov
insb
sbb
jg
imul
jmp
and
xchg
xchg
fsubrs
test
mov
lahf
add
add
notb
push
lcall
or
pop
outsl
out
leave
sbb
mov
adc
mov
clc
and
out
sbb
xchg
adc
icebp
xchg
outsl
and
mov
lret
and
mov
in
scas
cmpsl
popa
mov
push
insb
repnz
ja
jg
mov
aaa
les
dec
movsb
lret
iret
dec
xor
jne
mov
orl
add
and
lahf
pop
cli
mov
into
inc
cmp
lods
xlat
les
es
push
lcall
iret
sbb
rol
rsm
psrad
icebp
gs
xorl
and
push
inc
push
lahf
pop
decb
icebp
mov
inc
jne
xor
and
mov
dec
mov
fldenv
shl
inc
inc
pop
stos
loope
imul
and
mov
das
xor
roll
jno
movsb
sub
jmp
aam
leave
cmp
pop
scas
or
aaa
insb
mov
mov
jle
dec
jle
xor
mov
pop
jl
rorl
stos
lea
rorb
adc
mull
sar
mov
bound
js
and
sub
cmp
adc
in
mov
inc
mov
mov
xor
sarl
arpl
add
xchg
mov
inc
cmp
lret
mov
xchg
fcoms
lds
adc
sbb
push
iret
mov
movsl
in
repnz
and
mov
and
iret
pop
or
fsubrl
add
mov
enter
dec
loope
loopne
or
lds
or
jo
cmpsl
inc
pop
orb
cmpsl
leave
and
fwait
jmp
inc
mov
inc
xchg
out
out
aas
or
inc
sbb
xor
iret
push
iret
dec
mov
sbb
mov
jbe
dec
and
je
sub
scas
sub
xchg
arpl
add
or
pop
inc
int3
mov
mov
mov
jp,pn
sub
lret
sbb
aaa
mov
popa
daa
ds
cmp
fxch
or
xchg
pop
aad
hlt
or
mov
jl
adc
into
inc
xchg
add
mov
and
pop
mov
dec
sbbb
sub
add
jl
js
shr
stos
iret
outsl
fdivrs
leave
add
xchg
lahf
sbb
pop
fistpl
mov
xor
lea
scas
jl
shrb
lock
dec
jge
aaa
xchg
inc
mov
and
cmp
lods
pop
imull
push
rcrl
and
inc
sbbb
test
cmp
aas
dec
adc
rcrl
test
inc
addb
lock
push
push
adc
fnsave
addb
sbb
xor
and
jnp
push
add
mov
jns
cmp
dec
lcall
pop
push
dec
stc
dec
aad
popf
and
inc
xlat
sbb
inc
dec
push
adc
xchg
add
sub
add
dec
pop
lods
loopne
push
cmp
iret
sbb
outsl
mov
sar
mov
inc
inc
clc
adc
cmp
testb
cmpsb
adc
loopne
popf
pop
ss
aaa
add
dec
adcl
aas
icebp
cs
shlb
cld
lock
push
sbb
je
cwtl
jecxz
jl
pusha
xchg
sti
lods
and
sub
in
dec
xlat
adc
add
aaa
push
add
adc
xchg
int
cmp
mov
loop
aad
mov
les
data16
lret
jmp
cmc
cmpl
sbb
jne
into
cmpsl
or
xchg
adc
icebp
rolb
out
jae
or
lcall
pushf
mov
add
ds
orl
arpl
cmp
push
jmp
xor
inc
jo,pn
push
dec
inc
push
add
addl
sbb
inc
xchg
pusha
push
nop
jns
or
push
stos
add
cli
xchg
loop
aas
jmp
imul
and
sbb
inc
push
add
sub
push
push
in
cmp
push
cmp
mov
mov
je
add
cmp
lahf
dec
inc
mov
mov
cmp
stos
mov
test
ret
cs
sbb
dec
repnz
xlat
inc
mov
aas
test
jl
outsb
test
or
and
xor
test
insl
or
add
pop
movsb
imul
sahf
iret
pop
imul
push
ja
jp
fisttps
es
xchg
test
stc
je
sub
cmp
sti
cmp
fiaddl
outsl
rclb
cltd
xlat
xor
and
pop
jne
fmull
xchg
mov
xchg
hlt
dec
sub
dec
sub
adc
jbe
test
inc
loopne
loope
stos
lret
fdivrl
repnz
out
and
aam
add
or
lahf
ja
lds
xchg
dec
push
mov
loop
inc
sub
mov
adc
xor
es
faddp
xchg
ss
mov
inc
mov
cmp
push
decl
mov
popf
jo
adc
insl
mov
and
xor
test
push
mov
mov
cmc
mov
mov
sub
mov
xchg
xchg
js
lds
inc
or
insb
mov
fcoms
fst
popl
inc
push
push
loop
sbbl
push
push
aaa
and
push
inc
test
mov
repz
insb
lcall
popa
fdivrs
lods
xchg
lret
popl
cmp
or
mov
jg
out
xor
mov
popf
add
es
das
jno
scas
adc
js
int3
arpl
cmp
pop
mov
mov
imul
pop
and
inc
leave
stos
xor
cs
dec
fwait
mov
xchg
mov
scas
pop
mov
pop
js
scas
mov
add
jbe
push
xchg
sub
sub
cmp
fsub
adc
and
xor
pop
data16
mov
and
roll
add
lahf
push
and
cmpsb
mov
movsl
loop
dec
push
xor
ret
xchg
mov
add
inc
xchg
pop
mov
jecxz
jno
xor
out
or
jge
mov
das
pop
cmp
jge
mov
nop
jmp
gs
and
inc
and
lcall
ficompl
movsl
scas
test
mov
int
es
cmp
mov
xor
pop
fs
add
bound
cmpsl
sbb
insl
jbe
movsl
push
shrb
sub
mov
addb
aaa
loope
xlat
push
daa
rol
dec
pusha
xchg
mov
popf
jl
mov
sub
mov
popf
inc
adc
js
or
mov
pop
arpl
inc
mov
sbb
bound
imul
mov
mov
call
or
imul
daa
push
push
lods
roll
push
andl
push
imul
out
pop
sbb
loop
mov
mov
xlat
lods
inc
push
test
xchg
jp
leave
test
and
sarl
jp
add
rorb
dec
mov
test
dec
adc
aaa
insl
les
rorl
and
jns
push
mov
xor
data16
in
cmp
imulb
mov
mov
cmc
and
bound
mov
add
jmp
popf
fsubl
or
lock
icebp
push
je
daa
jl
and
mov
in
or
stos
mov
arpl
ret
test
dec
rcr
jl
xchg
movsb
daa
xorl
clc
call
fwait
sbb
or
sub
fucomp
inc
inc
xchg
push
mov
cmp
cli
cs
adc
sub
mov
lahf
mov
xlat
clc
mov
cmp
xor
adc
jo
hlt
or
lds
inc
push
xor
sbb
sbb
je
push
test
scas
push
jg
mov
add
push
insb
ljmp
daa
gs
cltd
lcall
jge
addr16
add
xchg
xchg
push
jo
cmp
add
inc
pop
insb
cmp
mov
sub
rorl
mov
cmp
mov
pop
outsb
ret
arpl
add
out
mulb
add
ja
cwtl
in
movsb
jno
mov
cltd
xchg
add
pextrw
jo
insl
push
fisttpl
mov
out
cmp
jge
dec
js
scas
adc
mov
pop
sub
xor
roll
xor
sbb
and
jecxz
mov
sub
je
cltd
sbb
jl
jno
inc
push
aas
cmpsb
shlb
inc
cmp
imul
xor
iret
cmp
or
push
sub
test
dec
ret
cmp
idiv
push
pop
and
mov
lods
rolb
das
lods
rorl
popl
or
test
in
stos
cmpsl
mov
and
ud1
test
push
cmpxchg
and
adc
push
das
icebp
dec
repz
mov
aad
icebp
and
orl
dec
shl
inc
jmp
adc
scas
mov
mov
popf
loop
hlt
push
mov
adcl
xchg
sbb
hlt
mov
sub
rolb
jnp
mov
lcall
cmp
outsl
push
cs
rcll
mov
or
or
imul
fadds
lds
les
mov
cmpl
xor
dec
ds
loop
subl
push
add
or
xlat
mov
shlb
je
jmp
daa
lahf
ja
daa
cld
in
and
ret
cli
mov
mov
mov
mov
roll
inc
lcall
int
cmpsl
cmpsb
mov
cmp
push
jp
daa
cli
xchg
sub
sub
mov
cmp
adc
jge
jno
and
sub
and
lock
ss
dec
inc
push
and
shrb
scas
add
inc
cld
pop
adc
xchg
and
add
dec
nop
xchg
loop
dec
xor
out
loopne
lock
or
jge
xchg
loop
leave
inc
jno
aaa
shll
pop
jae
or
mov
pop
rcl
jno
imul
jnp
scas
aam
call
cmp
inc
jge
ja
jnp
mov
lcall
or
add
adc
xor
cli
shlb
leave
mov
or
imul
cmp
and
mov
xchg
loope
js
out
ret
adc
and
rcrb
pop
popa
pop
dec
mov
movsl
arpl
popf
mov
adc
sub
push
or
outsb
stc
jne
jno
rolb
push
sub
into
lock
mov
lret
mov
adc
cli
dec
lret
leave
xor
lret
fcoms
add
hlt
dec
imul
or
xor
adc
xor
es
mov
outsl
lret
cwtl
test
shl
test
xor
addr16
shrb
inc
pop
lods
cltd
jmp
push
imul
call
xorb
test
loope
cmpsl
lcall
ret
rcrb
jecxz
jl
push
nop
mov
push
jl
sbb
ja
or
fsub
pop
jne
inc
push
outsl
sub
xor
sbb
and
xchg
ds
mov
arpl
movsb
adc
xor
test
dec
mov
jge
or
xchg
lahf
call
mov
lea
mov
jg
stos
add
fistps
add
mov
rcr
rorl
pop
lock
int3
cld
adcb
sbb
test
push
movsl
lods
add
aam
or
fiadds
jae
xlat
sub
lahf
sbb
std
mov
cmp
fldl
sbb
jne
sbb
or
cmp
imul
stos
cmp
mov
rorb
pop
in
pop
add
dec
inc
mov
mov
mov
pop
das
stc
jo
inc
test
fsubs
add
inc
sbbb
dec
and
lcall
out
aad
xchg
lea
and
mov
movsb
jne
or
jno
xor
lret
bound
clc
jmp
cltd
movsb
dec
scas
dec
adc
adc
ja
inc
mov
xchg
or
pop
mov
adc
push
mov
lret
mov
adc
cs
in
and
xor
pushl
push
sub
subb
add
sbb
dec
mov
sbb
imul
sbb
cmpl
add
out
mov
adc
mov
mov
push
icebp
mov
fcmove
or
enter
mov
int3
gs
cmp
test
xchg
clc
and
ret
or
sub
adc
test
movsl
mov
icebp
add
in
pop
dec
int3
jle
inc
mov
mov
inc
enter
clc
pop
jg
xchg
cld
insl
enter
iret
jno
push
mov
in
nop
or
cmp
jecxz
add
pop
std
popf
test
lcall
or
sbb
fldt
or
scas
push
out
cmc
adc
jmp
mov
sbb
dec
daa
add
mov
mov
mov
mov
push
je
adc
dec
jmp
mov
out
lods
push
imul
inc
jp
test
mov
test
xor
inc
xlat
js
daa
jecxz
loop
pcmpeqb
add
xor
push
iret
pop
jge
or
js
popf
loopne
jo
dec
cld
in
shll
ljmp
shlb
push
xor
add
inc
adc
sarb
pop
pop
mov
lods
push
adc
cli
test
inc
andb
cmpb
outsb
clc
inc
add
push
bts
adc
or
push
outsl
mov
jg
lret
int
xlat
leave
push
push
sub
or
ss
mov
cmp
sbb
rolb
sbb
fistps
js
clc
fisubl
xorb
dec
mov
add
or
pop
mov
push
loope
cld
pop
fsub
push
or
imul
or
sbb
mov
cmpsb
xlat
das
jg
test
mov
pop
push
shlb
adc
ffree
das
jb
fwait
jno
cli
scas
pop
incl
xchg
adc
xchg
xor
xchg
add
decl
xor
pop
add
test
iret
pushf
nop
aas
mov
test
mov
push
sti
shlb
mov
push
add
adc
jb
stc
scas
add
xor
xchg
lcall
adc
push
ljmp
orl
lea
mov
popa
sub
xor
mov
xchg
push
ljmp
stos
pusha
xor
push
or
into
cmpsl
dec
pusha
sti
test
movsl
fisubl
pop
jno
push
dec
mov
sbb
xchg
and
inc
pop
ficomps
and
mov
ret
or
sbb
xor
cmp
adc
mov
jg
popa
push
ret
addl
in
leave
fiaddl
fmuls
in
sbb
std
int
test
adc
sbb
add
arpl
or
sub
push
or
mov
sub
aaa
mov
popa
scas
xchg
dec
inc
adc
add
push
je
jns
roll
sbb
add
adc
pop
jl
popa
jb
pop
enter
sbb
push
clc
dec
lods
fwait
add
pop
push
add
insl
sti
xor
mov
lahf
out
pop
ljmp
add
lret
jae
lods
lret
jns
cmc
dec
outsb
ds
jbe
xchg
mov
ficoms
stc
loopne
mov
push
sarb
insb
std
or
loop
xor
adc
fstps
ds
sbb
sbb
pusha
pushf
sub
and
test
ret
testl
jmp
pop
test
and
inc
or
in
mov
and
mov
add
js
mov
xchg
pop
test
jle
mov
bswap
dec
mov
int3
push
xor
aam
clc
sbb
adc
mov
adc
adc
or
xor
mov
imul
and
popf
outsb
adc
out
push
jnp
test
int3
mov
lret
xor
in
clc
mov
inc
mov
test
incl
xlat
adc
jae
inc
sbb
loopne
cmpb
shrb
mov
dec
call
add
push
xor
sarl
das
mov
popa
call
inc
or
pushf
jno
add
loop
test
mov
jl
push
mov
push
sbb
fdiv
cmpsb
adc
mov
popf
sub
mov
mov
mov
testb
movsl
decl
inc
cmc
fimuls
lcall
outsb
sbb
fadd
mov
test
pushf
cs
mov
add
hlt
mov
mov
mov
movsb
mov
scas
sub
pop
ret
je
insl
test
jp
sbb
int
mov
shrb
inc
cld
ds
mov
push
sub
jp
adc
das
xlat
adc
test
jae
cmpb
loope
push
nopl
inc
mov
or
insl
pop
push
insb
lret
lahf
in
mov
mov
and
or
mov
mov
and
adc
pop
daa
jmp
cmpsl
pop
pushl
pop
cmp
orl
push
ja
rorb
imul
inc
out
or
mov
outsl
faddl
addr16
clc
mov
mov
add
xor
mov
test
mov
mov
xchg
xchg
and
rorb
cmc
adc
je
sarl
jg
sub
xchg
lahf
mov
lahf
loopne
hlt
pop
fists
xor
add
test
sbb
imul
arpl
inc
jmp
into
fidivl
loope
lods
jne
int3
mov
outsl
sub
push
mov
or
mov
dec
sahf
pop
in
lea
scas
enter
mulb
push
inc
roll
add
jl
jbe
jns
jg
mov
pop
les
sbb
in
mov
js
push
sub
mov
imul
pusha
sub
pop
mov
call
cltd
flds
fucom
pop
push
ss
clc
outsl
fisubrs
lock
addr16
in
push
and
jno
movsb
jo
and
jecxz
rcl
or
bound
xchg
and
lahf
adc
fdivs
shrl
cli
sbb
add
jo
outsb
enter
push
pop
pop
loop
test
ret
clc
lcall
ljmp
hlt
fisttps
in
sbb
pop
sbb
inc
lea
in
incl
mov
incl
dec
sub
mov
lcall
repnz
ret
cmp
std
incl
xor
add
icebp
fistl
push
loop
nop
push
jg
push
fsubr
out
pop
xchg
mov
sbb
xchg
add
lea
pop
push
stos
jmp
push
jg
repnz
mov
inc
adc
push
mov
mov
je
std
sub
fsubrl
test
mov
clc
js
sbb
pop
cs
popa
sarb
rcl
popf
push
out
add
and
push
cmp
lds
sbb
aad
jg
inc
xchg
jmp
mov
jmp
loop
or
jg
sub
in
xor
fildll
sti
mov
jae
int3
test
and
mov
cmp
fisubrl
sbb
cld
call
cmpl
lcall
addr16
ljmp
jo
xchg
les
ret
insb
adc
mov
pushf
imul
repz
stos
jmp
push
push
sbb
ds
xor
lods
jnp
data16
mov
sub
and
add
mov
jl
cli
mov
popa
pop
ret
inc
xchg
jo
push
xchg
dec
dec
test
mov
test
push
push
jle
imul
add
cmp
fisttps
inc
adc
mov
add
inc
adc
dec
or
pop
hlt
fadds
out
incb
bound
stos
or
or
adc
inc
sbb
xor
test
mov
bound
mov
sbb
xor
cmovns
jmp
mov
test
xchg
jne
cli
lret
or
ret
jbe
dec
xchg
pushf
mov
pop
sbb
mov
sub
mov
iret
in
lock
fwait
test
cwtl
fisubl
data16
dec
add
test
rclb
cmc
es
jp
mov
das
jbe
add
push
dec
cmp
dec
call
add
sub
ret
xor
incl
js
pop
pcmpeqd
lea
push
cmp
adc
insb
jnp
mov
loopne
je
xchg
dec
loope
dec
dec
and
cmp
mov
jmp
xchg
xor
jno
fdiv
int
add
insb
mov
push
xchg
mov
pop
std
cmp
dec
sbb
cmovg
sbb
adc
push
movsb
shll
push
push
stos
cmp
addb
jns
push
pop
sub
inc
jne
into
xor
sbbl
lods
push
lods
pushf
dec
xchg
sbb
pop
jecxz
push
or
sbb
dec
xor
icebp
pmuludq
fsubrl
inc
fld
adc
and
dec
adc
ret
popa
xor
lret
push
jbe
jl
xchg
and
dec
in
xorl
mov
outsb
sbb
fwait
decb
lahf
faddp
loop
cmpsb
pop
adc
push
fidivs
or
enter
xor
cmpsb
cmp
fiaddl
ljmp
in
push
sub
jle
sbb
mov
sub
xor
push
push
fcom
cmp
push
testb
mov
xchg
sysret
fwait
push
add
push
push
outsb
adc
lods
or
ds
cwtl
ret
adc
mov
jmp
mov
or
aam
hlt
lock
movsl
loopne
iret
fcmovu
popa
and
jb
pusha
scas
icebp
testb
push
dec
fdivp
xchg
loope
aas
in
out
orb
setp
jbe
js
insb
xchg
push
lods
push
lods
out
int3
or
mov
sbb
loopne
jge
cmp
pop
adc
push
add
mov
xor
xlat
xor
mov
lea
pop
add
push
leave
shl
jg
inc
or
jl
xor
push
adc
mov
inc
jmp
push
mov
ror
stos
inc
mov
mov
loopne
mov
sub
lods
orb
mov
rolb
inc
dec
divb
xchg
mov
jbe
lcall
mov
lock
orl
dec
cld
jbe
test
cmpsb
fsubrs
ja
cmp
orb
dec
xchg
test
hlt
jle
ret
nop
bnd
repnz
dec
aam
adc
repnz
pop
pop
flds
stos
in
mov
cmp
in
mov
sarl
xor
cli
popa
fnsave
jecxz
mov
es
push
mov
or
jl
orl
sbb
or
inc
fsubrl
mov
xor
sub
mov
jg
aaa
cwtl
pop
cmpsb
int3
jo
ds
push
mov
aaa
mov
add
loopne
loope
xor
xor
out
hlt
pop
add
mov
sti
rcrb
cmpb
mov
lods
add
dec
cmp
sub
pusha
jle
adc
inc
push
ror
daa
mov
pop
mov
inc
adc
add
xor
push
clc
xlat
ficompl
cmc
insl
fisubl
cld
pop
sarb
push
pop
and
mov
push
daa
pushf
adc
faddl
daa
push
enter
cli
sub
and
xchg
arpl
in
inc
add
arpl
jge
dec
daa
sub
jle
stos
mov
out
test
add
dec
sub
cmp
jp
mov
aas
push
dec
mov
stos
cli
int
hlt
sbb
sub
adc
and
fs
xor
cmp
push
mov
adc
out
xor
test
add
jno
jecxz
lds
call
add
and
ds
pusha
icebp
push
stos
xlat
int
insl
mov
or
add
fsubrl
or
cmc
or
lahf
mov
fwait
daa
push
lret
mov
mov
push
daa
std
mov
add
jp
inc
fidivrl
fstl
fdivrp
scas
rsm
mov
test
js
push
or
sbb
fnstsw
fdiv
push
adc
adcl
fs
cmp
shlb
fsubl
adc
and
aam
cmc
cli
test
cmp
dec
aas
jmp
pushl
mov
sub
ds
hlt
mov
dec
jnp
aas
repz
dec
and
pop
and
jp
mov
adc
inc
jmp
test
std
sbb
mov
cld
or
dec
sub
push
repz
xor
sbbb
mov
in
mov
iret
nop
rclb
movsb
xchg
sbb
test
fidivl
mov
sub
push
add
sbb
or
outsl
sbb
cmp
dec
xorl
or
pop
xchg
inc
lret
stos
outsb
adc
out
xlat
mov
loope
jp
mov
inc
scas
inc
push
and
loop
push
xchg
mov
shrl
or
inc
mov
in
fstps
fisubl
fwait
icebp
fisttps
inc
xchg
das
fildl
mov
int3
sbb
pushf
mov
int3
and
dec
lods
shrl
in
or
adc
and
das
decb
mov
push
adc
mov
lock
iret
insb
test
les
ret
cld
and
fldcw
pop
mov
jg,pt
adc
push
fisttps
popa
test
and
test
xchg
loope
in
jb
leave
iret
inc
fldenv
push
or
add
outsl
in
xchg
cld
bound
cmc
arpl
popa
mov
add
xor
xor
scas
mov
xor
inc
int
sbb
jnp
fildl
movsl
je
js
int
andl
jmp
test
jp
sbb
pop
ss
lahf
pop
or
adc
shl
and
adc
sbb
xchg
pop
mov
aas
loopne
xchg
inc
sub
vmovups
cmp
rol
mov
mov
je
adc
mov
sbb
imul
xchg
xchg
add
xchg
sub
add
cmp
in
inc
or
dec
test
pop
stos
ja
push
mov
push
fmuls
mov
sbbb
movsl
les
cld
pop
add
loopnew
ret
xor
std
push
pop
sub
pop
mov
in
loope
push
push
in
and
in
jle
or
pop
lock
rcrb
push
and
sarb
xchg
cli
cmc
sub
cmp
pop
adc
loopne
inc
dec
dec
out
mov
or
roll
hlt
and
mov
lock
icebp
sub
and
jg
aas
out
sub
stos
cmp
imul
in
clc
cld
jmp
xor
dec
pop
lods
lea
hlt
xor
add
inc
mov
push
mov
mov
test
or
xchg
push
cli
fs
hlt
add
int3
cs
xchg
cld
aaa
fisttpll
add
push
xchg
popf
leave
rcrb
or
js
inc
push
cld
fwait
mov
adc
mov
pop
shr
or
pop
test
ror
cmp
dec
mov
clc
call
jno
sub
test
mov
int
pop
dec
out
xchg
pop
cmc
push
pushf
js
dec
ljmp
add
out
ret
shlb
aam
lea
and
fists
inc
pop
stc
push
aaa
dec
mov
push
inc
into
inc
decb
mov
int3
negl
or
mov
inc
repz
push
lret
push
mov
out
dec
push
insb
pushf
xor
jge
mov
inc
push
clc
lods
mov
cwtl
and
and
addl
push
jo
dec
jns
jecxz
decl
adc
aaa
push
mov
add
fstps
or
ret
mov
call
dec
inc
mov
lock
pop
or
lret
mov
fsts
dec
jmp
dec
cwtl
outsl
hlt
mov
jmp
sub
or
popa
fsubs
addb
in
pop
ret
push
and
xchg
add
or
shlb
outsb
xchg
es
mov
or
out
clc
popa
push
pusha
cld
int
sbb
or
pop
fists
out
push
adc
dec
and
pop
gs
pop
rolb
hlt
push
cs
stc
mov
lods
xorl
dec
mov
or
in
daa
adc
aas
jne
bound
mov
sub
cld
add
jecxz
push
sub
pop
lcall
movsl
aam
xor
loopne
clc
mov
cld
ffree
mov
sub
sbb
cmp
cwtl
jl
mov
mov
imul
xor
xor
push
or
jge
scas
mov
sarl
sahf
mov
test
insb
in
jne
sbb
xor
out
lods
jecxz
inc
cltd
cmp
repnz
mov
jle
jbe
cmp
lret
repz
xor
jmp
mov
imul
fdivl
sub
mov
mov
or
test
jmp
inc
mov
lret
inc
or
orl
pop
or
mov
call
adc
push
xchg
aam
outsb
iret
int3
push
in
dec
mov
test
loopne
fidivrl
popf
lods
xchg
decb
xor
mov
push
ret
out
jns
jp
and
sbb
adc
out
mov
mov
add
sbb
adcl
cld
pop
mov
fstpl
xor
mov
lock
les
je
push
dec
inc
jbe
push
pop
push
lods
dec
dec
and
fsts
sqrtps
push
xchg
or
sub
cmp
add
mov
mov
adc
adc
lods
push
add
pop
lret
dec
call
in
test
cli
in
gs
inc
sub
cmp
mov
sbb
inc
lret
mov
push
subl
jge
mov
popa
fadds
inc
shlb
fisttps
push
fsubrs
fsubrs
bnd
popa
test
cltd
push
repnz
push
mov
mov
dec
jbe
or
daa
stos
jno
stos
aas
add
add
pop
aaa
mov
mov
jb
pop
loopne
loopne
mov
mov
mov
cli
jbe
push
sarl
or
inc
jp
ret
jecxz
xchg
push
in
mulb
xor
or
jmp
adc
inc
paddb
mov
jae
ret
inc
cld
sbb
daa
cmp
and
icebp
stos
lcall
hlt
mov
and
dec
aaa
jb
fdivrs
sbbl
stos
sarb
add
lods
sub
or
divl
and
out
lea
negl
sbb
pop
jge
sub
cld
in
nop
sbb
xor
and
add
xor
mov
fwait
xchg
pop
test
in
repz
xchg
ss
imul
lods
add
add
mov
push
loop
add
mov
int
aas
adc
push
add
aad
inc
add
lcall
xchg
js
shll
fldcw
or
cwtl
adc
push
lret
xor
or
or
jg
iret
aas
in
sub
shl
inc
fsubrl
daa
push
inc
cli
das
popa
and
test
pop
dec
mov
mulb
jmp
imull
mov
ret
xor
insb
jecxz
int
stos
enter
orb
dec
dec
push
jle
sbb
pop
cmpsl
fnstsw
lahf
mul
imul
lret
xchg
jne
and
inc
nop
rorl
pusha
ret
clc
les
mov
nop
xor
das
xor
aas
pop
fwait
pop
adc
mov
sub
es
cltd
outsl
clc
sub
sub
int
loop
add
fdivrs
fdivl
push
sbb
int
outsb
push
cwtl
loopne
xor
or
leave
or
int
ret
and
outsb
mov
fdiv
or
lret
pop
scas
mov
xchg
icebp
pop
sub
or
outsl
dec
inc
mov
mov
loopne
inc
sub
sbb
les
fcomp
lds
stos
push
adc
pop
mov
jmp
sbb
in
lret
jae
cmp
ljmp
sub
and
push
adc
pop
fstpt
clc
sbb
pop
mov
push
lahf
push
jle
outsl
cwtl
repnz
cmp
insb
aaa
out
sub
arpl
sub
lock
enter
mov
inc
cmp
xor
popa
sbb
cmp
divl
add
add
mov
out
inc
dec
clc
adc
mov
jmp
ret
cli
lods
sbb
fs
sar
inc
add
sbb
cmpsb
popf
sahf
adc
adc
sbb
xchg
ds
cs
loopne
mov
inc
sbbl
push
xchg
adc
or
scas
mov
cmp
iret
mov
cmc
jl
sbb
xor
testb
cmpsl
xchg
sbb
add
jp,pn
add
mov
mov
adc
scas
xchg
and
mov
xor
inc
xchg
or
icebp
and
push
jo
adc
pop
loope
push
mov
sahf
pusha
jge
fistpl
lret
aas
rcrb
sub
sub
sbb
xchg
mov
sub
fs
mov
jb
pop
fcomps
subb
popa
faddl
push
cmpsl
adc
add
push
pop
loop
dec
mov
lods
xchg
sub
cli
mov
mov
rcr
mov
jmp
sbb
pop
cmp
push
clc
icebp
mov
ds
bound
scas
fs
inc
or
testl
cmp
or
rolb
inc
int
and
lock
lea
inc
fdiv
sbb
jg
or
and
out
mov
out
stos
adc
mov
push
in
lods
rcrl
sub
les
sbb
fbld
shrb
add
mov
sbb
xchg
mov
sbb
jge
es
push
mov
dec
xchg
mov
inc
xchg
outsb
mov
sbb
and
into
xchg
nop
arpl
mov
xchg
test
movsl
ja
pop
nop
sarb
mov
icebp
pop
cmpsl
or
fcoml
mov
out
pop
or
lds
loopne
hlt
dec
or
popa
adc
pusha
sub
or
mov
pop
testb
ss
rcrb
loopne
mov
sub
sahf
mov
mov
inc
insb
dec
add
mov
sbbl
shlb
movb
and
sbb
xor
scas
inc
pop
filds
mov
or
sub
stos
mov
push
jle
jp
aam
pop
xchg
cmc
mov
das
lock
mov
insb
aam
push
xor
sbb
into
fucomip
pop
sbb
arpl
push
test
sbb
inc
adc
mov
mov
mov
mov
mov
mov
sub
push
sub
icebp
inc
jne
inc
mov
rcll
popa
sub
data16
hlt
fidivl
dec
pop
movsl
pop
and
fmul
outsl
push
jns
cmp
mov
das
mov
and
fs
in
cltd
les
ljmp
mov
and
or
xchg
sub
mov
xchg
out
and
jb
ret
or
insl
cmp
lock
icebp
or
idiv
icebp
iret
pop
pop
addr16
loope
shrl
inc
sub
mov
lods
mov
test
repnz
rol
sub
bound
leave
push
mov
cmp
mov
inc
jnp
add
stos
das
jne
mov
test
mov
sub
imul
mov
inc
cltd
jl
inc
pusha
int
push
mov
icebp
rcrb
notb
or
test
arpl
xchg
mov
mov
insb
add
inc
sarl
clc
inc
loopne
sbb
sub
or
shlb
xor
sbb
popa
pop
dec
sbb
aaa
lahf
andb
push
mov
xor
jg
out
scas
aas
fadds
mov
pusha
mov
call
inc
data16
mov
outsl
ret
jp
xchg
cmp
lods
or
adc
inc
inc
daa
jl
data16
sahf
cmc
lcall
das
clc
mov
popf
xchg
in
fdivp
cmp
pop
out
cmc
orb
mov
in
xchg
incl
test
cmp
je
mov
pop
mov
sub
pop
xor
push
js
and
in
enter
outsb
sar
jmp
mov
dec
pop
push
xchg
call
outsl
pop
shrb
pusha
adc
xor
sbb
lock
ret
jl
sub
inc
pop
and
sub
pop
sub
mov
arpl
cmp
xchg
js
in
in
adc
mov
pusha
std
mov
pop
cmp
cld
rclb
cmp
clc
pop
fmuls
testl
insb
mov
outsb
ret
aas
push
fcmovnu
mov
dec
jmp
ret
pop
dec
jl
lcall
int3
je
xor
jbe
ja
in
js
int
add
or
dec
pop
push
int
pusha
add
sbb
xchg
adc
inc
jg
out
insb
or
add
pop
scas
add
and
dec
sub
lahf
pop
movsl
aam
fdivp
add
fisttps
cmc
pop
rcl
xchg
out
mov
pop
les
pop
pop
xchg
add
pop
cltd
scas
test
mov
cmp
fistps
imul
fisttpll
dec
mov
outsl
xlat
mov
add
outsl
movsl
add
rcrl
scas
mov
or
int
cmp
dec
cmpsl
inc
dec
inc
ljmp
adcb
das
ret
mov
add
cli
dec
pushf
ss
cmp
inc
aas
call
push
mov
nop
or
ja
jbe
inc
pop
icebp
cs
out
inc
sbb
lcall
jecxz
lock
fwait
subl
dec
inc
push
fists
mov
mov
ljmp
roll
push
push
ljmp
push
jnp
or
in
hlt
mov
mov
setae
iret
pop
inc
pop
popa
je
mov
repnz
mov
mov
push
fisubs
add
pop
push
aad
pop
loop
mov
dec
lock
adc
and
sub
xor
and
roll
mov
and
pop
lahf
jo
push
sbb
ret
fs
sub
fcmove
lahf
les
arpl
adc
in
or
popf
pop
and
mov
fimull
iret
xor
xchg
bndstx
fadds
mov
mov
in
aad
push
lcall
adc
mov
cmp
adc
push
and
in
aam
data16
mov
sub
push
test
cs
aas
jo
test
fcoml
addl
ja
mov
xlat
cmp
outsb
adc
insl
jmp
and
xor
push
cmp
xchg
in
inc
les
sub
out
stc
ljmp
jns
in
push
loop
adc
int3
iret
and
test
fimull
and
mov
daa
push
insl
cmp
push
pop
lea
das
sub
jbe
dec
hlt
xor
leave
or
jne
loop
or
inc
es
loopne
and
jle
push
les
jecxz
shlb
lock
in
cmpsl
pop
insl
pop
add
push
scas
add
shll
sbb
or
add
jnp
pop
sbb
cmp
fldcw
es
movsb
jo
add
aam
fidivrs
pop
lahf
dec
aam
fldenv
out
adc
mov
testb
mov
pop
aas
inc
into
push
stos
movsb
arpl
test
cmp
loope
mov
push
pop
cli
xchg
or
cmp
gs
and
cs
aaa
mov
loopne
cmp
sbb
rol
add
jl
int3
cmpsl
mov
jo
jl
mov
push
adc
jae
or
cld
iret
ljmp
xor
add
in
pop
dec
imul
cmpsl
loop
rcll
clc
sbb
ret
add
or
aad
inc
leave
out
add
stc
pminsw
scas
xor
mov
and
jge
cmc
jl
push
add
stos
adc
mov
pop
sub
jno
cmpsl
adc
movsl
add
xlat
ja
stos
mov
inc
and
lods
repz
cmc
popa
pop
fs
sbb
mov
push
mov
jnp,pn
dec
test
sub
lock
and
mov
inc
ds
sarb
aam
pop
orb
outsl
sub
dec
inc
sub
jg
mov
shlb
adc
adc
fcoml
aaa
push
fs
jno
lret
lcall
addb
std
and
popf
jnp
addl
test
rcll
dec
dec
filds
push
popl
sti
or
nop
adc
sub
js
sbb
hlt
mov
and
div
repnz
and
ja
mov
cld
js
les
xchg
inc
add
icebp
dec
int
jbe
arpl
imul
fwait
push
lea
dec
jne
add
icebp
mov
mov
cwtl
nop
or
sbb
push
inc
inc
push
push
mov
in
cmpsb
push
or
rorb
mov
sbb
mov
xor
addr16
sub
push
push
pop
mov
mov
or
add
pop
mov
mov
dec
fwait
test
pop
pop
sbb
inc
jl,pt
jno
out
cmp
lcall
jg
adc
out
jbe
sbb
loopne
loop
and
push
mov
push
imul
dec
movsb
mov
cwtl
hlt
mov
or
dec
mov
add
mov
mov
dec
imul
in
or
xchg
hlt
and
xor
sbb
xchg
add
sub
pop
push
or
pop
imul
insb
cli
or
loopne
xlat
sbb
in
pop
mov
dec
push
mov
std
inc
mov
jno
push
rorl
add
adc
or
mov
pushf
loop
jae
scas
pop
push
addl
mov
gs
lds
and
sbb
mov
pushf
in
out
ret
icebp
outsb
and
dec
add
rcrl
decl
das
xchg
pop
mov
mov
inc
jbe
xor
cmp
dec
ss
jge
cmp
sbb
fisubrs
adc
dec
dec
cmc
dec
inc
std
cmp
repz
fildll
arpl
mov
or
ds
cltd
mov
xchg
xchg
test
mov
pop
lret
loopne
leave
xor
inc
and
roll
loop
and
jmp
or
mov
je
setns
lock
jb
mov
xor
aam
push
pop
xchg
fildl
insl
loope
and
ret
adc
jmp
cmpsb
push
sahf
sbb
mov
movsb
cwtl
test
cmp
in
mov
hlt
dec
lahf
xchg
in
xchg
push
mov
cmpsb
push
or
mov
orb
lcall
loope
out
inc
adc
xor
add
and
dec
sub
xor
movsl
xchg
sub
dec
ja
stc
jae
in
dec
lret
push
scas
jecxz
add
mov
testb
jg
out
cmp
xor
inc
push
jecxz
out
aad
mov
and
push
adc
lea
mov
adc
test
mov
imul
jl
adc
jo
inc
inc
test
lcall
clc
xor
sbb
dec
adc
aad
mov
roll
xor
jne
xor
dec
clc
out
loope
aas
mov
repnz
and
inc
addr16
inc
fs
add
or
xor
dec
std
adc
test
lods
popf
aaa
dec
pop
lds
mov
loopne
stos
cmc
aam
mov
sub
aad
je,pt
fildll
inc
mov
repnz
sahf
mov
pusha
pushf
xor
iret
push
inc
ja
pop
mov
insb
je
and
pusha
outsb
sub
filds
push
in
cmovns
push
pop
in
push
cmp
pop
fnsave
sub
dec
cmp
jae
pop
fwait
ss
inc
xor
adc
mov
mov
call
dec
adc
imul
and
ret
test
xchg
clc
xorb
imul
sbb
mov
dec
outsb
mov
xor
repz
adc
fwait
lods
inc
mov
inc
sarl
or
push
fldl
inc
sti
sbb
xor
sahf
jb
bound
cmp
cmp
xor
sti
pop
aad
pop
scas
xchg
cmp
jmp
jl
push
sarl
adcl
aad
clc
sarb
add
inc
cmp
cmp
ret
filds
hlt
into
cmovle
jecxz
inc
test
push
xor
pop
pop
or
xchg
xchg
imul
or
outsb
or
js
pop
outsl
inc
clc
inc
mov
jecxz
das
add
ret
sbb
mov
mov
enter
mov
testl
out
shll
fisubl
pop
mov
xchg
dec
lahf
pop
ss
sbb
mov
outsb
pop
mov
xchg
dec
mov
xor
push
xor
inc
inc
or
je
push
pusha
add
sbb
add
lea
or
sbb
cmp
gs
push
pop
rolb
cmpsb
leave
in
mov
or
mulb
fildl
sbb
iret
jle
sbb
mov
add
hlt
push
xchg
mov
std
mov
aaa
adc
inc
rcll
push
int
lret
jne
jle
xor
loope
call
out
lods
test
out
push
jmp
icebp
push
scas
cli
inc
mov
test
lcall
repnz
inc
decb
add
mov
xor
outsl
mov
insb
and
mov
loopne
sub
xchg
and
mov
fists
rcrb
xchg
fbstp
ljmp
mov
mov
push
cltd
fs
mov
cwtl
out
pop
testl
lret
lret
pop
cld
xchg
push
in
cmp
ret
cmp
dec
test
daa
ja
mov
shlb
dec
jl
fstl
js
push
nop
test
shlb
xchg
orb
fldl
and
ficomps
dec
push
lret
cld
push
pop
add
adc
vpminsw
mov
aas
filds
add
add
cmp
sbb
clc
dec
cmc
xchg
fstps
add
pop
loop
jmp
sub
pop
fucomp
ljmp
xor
mov
fdivl
cld
cmp
sbb
and
mov
inc
sysret
mov
decb
mov
aam
or
add
xchg
scas
das
lret
dec
mov
mov
inc
imulb
cmp
pop
adc
sbb
mov
test
repnz
out
add
in
pop
test
filds
mov
je
inc
xchg
and
cli
sub
xchg
shll
mov
mov
inc
cmpsl
inc
mov
sbb
ljmp
shlb
idivl
outsb
loop
loopne
inc
add
jp
mull
jge
daa
rcl
ret
pop
jno
stos
sub
pusha
out
lods
mov
lret
lret
inc
shrb
jo
pop
ret
ret
jg
jno
iret
or
dec
insl
insb
sahf
icebp
cmpsl
pop
and
sbb
subl
mov
in
clc
cmp
fsubs
sbb
mov
fnsave
loop
push
xchg
fsubs
jns
fwait
inc
lahf
out
sti
or
mov
sbb
jmp
prefetcht0
aaa
cli
xlat
jb
add
into
js
cmpsb
sbb
pop
sub
icebp
popa
lock
je
mov
jge
or
xor
sub
mov
lock
clc
out
dec
push
stos
mov
test
pushf
ficomps
outsl
mov
jae
dec
sbb
sub
out
movsb
cmc
push
fcomip
sub
pop
nop
pop
dec
repz
aam
adc
xor
cmp
js
out
lahf
jno
fiaddl
bound
inc
pop
lea
sub
lcall
in
jg
push
and
in
shrb
mov
jmp
sub
clc
icebp
jb
ret
rcl
lds
push
fdivrl
pushl
shlb
sarl
mov
movsl
mov
std
lret
lahf
bound
or
test
adc
adc
adc
inc
loopne
push
loope
xlat
push
stc
lret
mov
int3
insb
clc
dec
jne
add
popa
out
inc
not
mov
std
insb
mov
sti
lock
imul
cmpsb
adc
mov
sti
test
xlat
sub
and
or
notb
iret
test
daa
mov
push
mov
mov
icebp
sbb
pop
adc
pop
add
lea
or
ja
mov
push
imul
fldt
push
std
aam
insb
add
push
mov
cld
jg
out
jmp
int
sub
mov
icebp
sbb
inc
sbb
lods
test
nop
cmp
or
sbb
fbld
mov
mov
loop
or
inc
adc
jecxz
ss
push
lds
sub
pop
fistps
cli
push
clc
sti
call
es
push
imul
xor
push
lock
pop
mov
jp
push
and
jmp
push
outsl
or
inc
mov
pop
ret
icebp
sbb
loop
add
cmp
adc
das
sarb
out
xchg
cmp
ss
and
inc
and
pop
jbe
mov
add
into
test
pop
mov
hlt
ret
ret
nopl
imul
das
lds
push
jno
fcoml
cmp
fwait
mov
add
mov
outsb
ds
mov
movb
mov
ja
sbb
daa
xor
sarb
stos
das
jne
mov
ret
ret
jge
push
pop
popa
ret
pop
and
sub
daa
mov
test
test
mov
mov
xchg
mov
les
xlat
jp
mov
push
push
jns
stos
dec
xchg
xor
shr
jg
pop
pop
jecxz
sahf
and
repnz
sbb
push
sub
out
mov
test
sbb
pop
std
add
insl
ss
aas
icebp
aam
jb
xchg
xchg
stc
imul
test
sbb
sbb
mov
or
xchg
inc
mov
cmp
xchg
and
mov
or
add
outsb
cmc
adc
mov
pop
dec
std
add
xchg
adc
fisttps
sbbb
cli
add
adc
add
icebp
ret
les
insl
out
dec
jle
pop
jne
pop
cmc
pushf
and
ljmp
or
push
loopne
imul
jp
mov
jp
dec
aaa
fsqrt
or
push
mov
dec
scas
je
scas
pop
jle
mov
je
pushf
test
add
mov
movsl
mov
mov
xchg
jb
loopne
mov
sbb
lret
hlt
mov
cwtl
test
je
loop
pop
or
cltd
loope
sbb
jne
jp
test
shrb
cmp
out
mov
inc
clc
iret
lds
xor
es
or
or
xlat
add
or
inc
push
xabort
jne
lock
jnp
stos
fs
jg
xchg
inc
js
jg
jle
stc
pushf
adc
lahf
mov
sahf
jmp
mov
jns
add
sub
xchg
mov
cltd
rol
ljmp
movntps
cmp
leave
mov
cltd
cmc
daa
nop
cld
sub
xor
ffreep
test
cli
inc
pusha
jnp
sub
or
shlb
xorb
sbb
lret
push
iret
sub
stos
pop
repnz
cld
or
std
sbb
sbb
test
inc
sbb
push
aaa
sbb
push
inc
jo
cmp
out
cmpsl
jg
mov
cmpsb
les
mov
adc
sub
stc
sub
pushf
push
mov
insl
in
dec
sbb
aaa
mov
inc
pop
test
mov
movsb
push
fistps
loope
mov
add
xchg
roll
mov
pop
cld
adc
pop
xchg
arpl
lahf
mov
inc
adcl
imul
int3
cmp
push
or
and
pop
outsb
push
cld
inc
xchg
xor
and
mov
call
loope
pop
cmp
sti
stc
mov
add
in
dec
mov
push
add
or
xchg
xor
out
shll
jg
or
repz
cmp
sarl
mov
sbb
and
pop
mov
enter
or
sbb
pop
sbb
ja
jns
mov
mov
cld
pushl
add
outsl
lea
cmc
addl
adc
push
sti
jge
test
dec
pop
je
mov
dec
mov
and
adc
std
stos
nop
lock
in
imul
jae
xchg
mov
dec
imul
dec
dec
cld
push
dec
jl
push
cs
test
push
imulb
rolb
clc
gs
xchg
clc
lea
inc
imul
push
mov
and
pop
pop
dec
ja
mov
xor
cmp
popa
aas
mov
repz
sub
or
jns
adc
incl
add
mov
and
xchg
aas
mov
loope
adc
insb
popa
and
jne
rcrb
or
fmull
pop
inc
stos
repnz
add
icebp
lahf
fwait
sbb
xchg
aas
test
inc
jecxz
lret
test
cmc
lahf
push
add
push
xchg
xchg
cli
or
cmp
xor
aaa
rcrl
in
lret
shl
in
jmp
mov
in
xor
cmp
sub
and
mov
pop
sbb
push
fistpll
cwtl
aaa
lcall
adc
add
std
sub
js
and
out
xchg
lahf
in
insb
subb
outsb
in
add
test
xchg
cmp
insl
adc
decb
sub
inc
sbb
inc
xchg
lret
ss
lcall
adc
xchg
loope
mov
mov
push
je
cmpsl
mov
sub
fcomip
jg
scas
xlat
adcb
xor
stos
or
mov
test
xchg
push
loop
cwtl
in
insl
jno
icebp
insb
movhps
enter
std
jecxz
cmc
sbb
lret
cmp
push
or
loopne
inc
das
dec
add
ja
add
orl
outsb
pop
and
xor
loope
lea
lock
loopne
rorb
jne
leave
ja
and
lea
mov
and
mov
sbb
mov
xor
xor
xorb
incl
inc
jle
inc
ds
sbbb
loop
jg
rclb
sub
rorb
out
add
rcll
and
cld
jb
lcall
xor
imul
out
and
inc
fdivrs
es
push
lcall
push
push
lret
vpand
pop
repnz
xlat
mov
add
pop
inc
cli
and
jo
push
sbbl
jbe
clc
inc
inc
jbe
sub
inc
clc
lds
mov
in
ljmp
mulb
fbstp
fwait
jo
cmp
popa
mov
or
hlt
in
xchg
aaa
popa
aad
lods
loopne
es
push
shlb
movsb
add
fwait
movsb
push
xchg
cmp
out
ja
and
mov
shlb
add
inc
jg
ret
cwtl
cld
sub
push
jno
repz
xor
clc
xchg
mov
clc
or
sahf
loopne
hlt
shlb
cld
aam
mov
xchg
adc
stos
or
and
pop
icebp
out
or
jbe
xor
or
mov
pop
jl
inc
pop
mov
js
cmp
sti
and
fadds
add
mov
mov
es
inc
lock
sahf
loope
nop
mov
call
sub
and
lea
pushf
test
pushl
popa
xchg
or
repz
sbbb
out
icebp
push
cld
ret
xchg
movsb
mov
jp
xchg
hlt
and
lods
clc
and
sub
pusha
ss
in
dec
push
mov
sti
or
in
ffree
aam
adc
aaa
sahf
sub
and
sbb
pop
sar
insb
aaa
out
es
xor
xchg
push
aaa
cld
test
mov
sbb
clc
mov
loopne
inc
aaa
js
jns
mov
mov
sub
adc
inc
outsb
dec
cmpl
cli
inc
or
test
xchg
or
cmpsb
push
dec
cmp
and
in
push
fisubl
outsb
adc
cmp
aam
and
mov
dec
sub
pusha
mov
add
ret
fildl
mov
or
cmp
mov
jecxz
notb
add
sub
repz
in
or
inc
aaa
add
jnp
cmpsl
dec
inc
push
cmc
xor
mov
rcr
imul
clc
stc
lock
mov
stc
pop
lret
pop
in
mov
or
out
adc
jg
incl
lock
arpl
cs
and
js
xchg
loop
mov
movsl
sbb
mov
xor
or
push
cmp
jne
lods
xchg
mov
inc
shll
ljmp
and
xor
icebp
sti
lock
ficomps
lock
imul
push
clc
dec
popa
adc
and
and
sub
lock
cmp
xchg
call
ficompl
adc
std
adc
rcrb
rclb
pop
pop
pop
lcall
aam
mov
out
add
outsl
movsl
rcll
call
scas
cmp
adc
sub
fisttpl
sub
pop
nop
jns
mov
pop
push
pop
push
lock
push
jbe
sub
and
mov
inc
jg
dec
sbb
push
shlb
cmp
cs
cwtl
movl
cs
daa
outsb
sbb
orb
les
and
inc
loop
cmpsb
decl
mov
mov
push
ret
inc
add
outsl
or
dec
inc
dec
inc
aas
cmc
mov
into
loop
hlt
les
jl
xchg
inc
insb
lock
sub
cmp
lock
fisubs
pop
adc
pusha
sub
fistpl
mov
cmp
xchg
pop
fildl
ror
fiaddl
fs
outsl
clc
cmp
and
inc
sti
stos
fisubrl
xchg
cmp
push
adcl
loopne
pop
loopne
inc
daa
push
xor
aam
sahf
pop
das
mov
stc
push
push
fiadds
sub
or
or
cmp
lcall
fists
popl
sbb
scas
dec
xor
adc
repz
adc
jmp
rclb
cmp
roll
fwait
mov
mov
mov
fidivs
push
adc
data16
sub
aad
shlb
loopne
mov
mov
les
mov
jae
clc
dec
jge
sub
and
xlat
jge
xchg
stos
je
lahf
pop
rorb
and
xchg
ss
push
rcrb
cld
or
pop
ja
push
rorb
not
negl
mov
decb
enter
sarb
mov
lock
std
scas
add
push
dec
fidivl
aaa
pop
ljmp
pop
inc
loope
call
mov
push
dec
rorb
pusha
jnp
insl
xchg
xchg
imul
push
mov
mov
ss
iret
clc
dec
testb
cs
mov
push
add
push
add
sub
ret
push
imul
mov
mov
and
mov
movups
sbb
repnz
sbb
pop
imul
xor
clc
add
xchg
xor
icebp
mulb
jae
fdivrl
cli
mov
loopne
or
xchg
add
scas
mov
popf
add
add
sub
ss
std
sub
outsl
cmpsb
hlt
add
nop
mov
mov
sbb
add
stos
cs
pop
adc
pop
mov
mov
ljmp
jp
fsubrs
stc
inc
mov
or
adc
pop
sub
adc
jbe
sahf
movsl
movsb
or
clc
daa
mov
insl
jle
outsl
pop
stos
cmp
aaa
push
xchg
jne
mov
incl
pop
dec
jne
push
mov
je
add
xor
dec
loopne
dec
jbe
int3
push
fcmovne
ds
jl
pop
and
pop
icebp
ja
dec
mov
loop
push
cltd
leave
jge
cld
or
xchg
add
add
xchg
mov
out
rsqrtps
xchg
sbb
hlt
xor
cmpsl
sbbb
fisttps
add
xor
and
sbb
xor
addl
addr16
sbb
addl
rcrb
mov
fs
mov
pop
mov
sub
mov
jge
clc
mov
cmp
adc
push
cmp
idivb
cltd
lods
decl
loop
je
sbbb
or
xchg
out
imul
mov
sbb
iret
inc
adc
jnp
or
xchg
inc
stos
mov
xor
dec
inc
fistpl
xor
sbb
push
andl
test
call
sbb
cli
push
rclb
out
pop
scas
push
outsb
dec
jnp
push
or
in
mov
std
xor
xchg
ljmp
outsw
add
sbbb
ds
cmp
mov
test
mov
jmp
inc
je
sub
mov
and
sub
icebp
imull
aas
popf
xor
jno
or
dec
movsb
lock
mov
pop
add
ret
nop
inc
cmc
outsb
cld
pop
or
mov
pop
pop
or
jb
or
loopne
ljmp
push
cld
mov
push
mov
mov
xchg
popa
in
cmp
aam
shrb
clc
lret
fs
test
dec
insl
out
and
push
roll
shl
sub
xchg
in
outsb
mov
sbb
shll
mov
out
cmp
mov
cwtl
and
mov
push
adc
mov
push
pop
jmp
inc
mov
jp
add
imul
pusha
mov
nop
arpl
enter
cld
or
ljmp
adc
cmp
fdivs
ds
jno
adc
pop
inc
jmp
inc
push
fbstp
cmpsb
adc
arpl
fistpll
lret
cmp
sahf
and
sbb
rcpps
faddl
lahf
inc
add
icebp
push
sbb
lods
gs
or
arpl
pop
pop
xor
sub
jno
push
cwtl
iret
mov
adcb
add
mov
push
in
mov
ja
ds
jne
loopne
fisubrs
cld
loop
ret
add
push
push
cmp
push
inc
mov
or
mov
inc
sbb
sub
inc
mov
and
push
mov
ficomps
out
rcrl
mov
inc
leave
push
xor
mov
mov
int
adc
adc
mov
xorb
dec
xor
push
rolb
jl
inc
or
test
je
daa
out
push
out
add
and
loope
cmp
jl
mov
xlat
pop
push
fmuls
or
cld
loop
cmp
xchg
das
sub
adc
int3
fmull
mov
arpl
ja
pop
adc
adc
push
mov
mov
cmp
sub
out
push
hlt
push
call
je
jnp
push
ret
scas
dec
cld
or
xor
dec
mov
fwait
into
jo
cwtl
pop
mov
or
inc
push
subb
push
lock
sbb
pusha
imul
loopne
push
mov
and
ja
and
jp
leave
add
xchg
incl
iret
sysexit
movb
and
test
jg
addb
dec
jns
js
enter
push
test
lcall
pop
or
mov
sbb
sbb
clc
lds
fisttps
pop
push
pop
adc
imul
sbb
mov
pop
adc
push
das
or
fdivrl
xor
xor
inc
incb
testb
pop
jge
ret
xchg
mov
inc
xor
push
cmp
cmpsb
into
rcrl
adc
orl
xchg
mov
cmova
jl
test
add
sub
adc
hlt
test
add
aas
adc
mov
dec
incl
xchg
adc
ficomps
pop
fimull
jg
mov
xchg
push
push
inc
mov
mov
std
xor
fisttpl
dec
rol
and
dec
xchg
mov
lahf
test
mov
aam
lret
adc
push
cmp
jo
push
cltd
push
fs
cmp
dec
bound
ljmp
and
sub
ja
mov
call
out
gs
lea
mov
mov
add
ljmp
add
aaa
out
dec
pop
mov
adc
jl
sub
mov
cmp
pop
push
lret
cwtl
mov
pushf
pop
push
add
popa
dec
xchg
xor
push
push
call
scas
adc
pop
xchg
test
dec
and
push
test
test
rcr
test
das
dec
lret
and
insb
movsl
cmc
aad
out
into
rclb
jle
loopne
add
sub
cmp
mov
enter
xchg
or
stc
punpckhwd
fs
mov
ret
push
sub
cmp
ss
inc
jbe
cmp
orl
cmpsb
push
push
inc
mov
add
xchg
or
add
jbe
mov
mov
mov
add
cltd
mov
jl
into
mov
clc
sub
mov
divb
mov
movsl
push
cld
ror
mov
in
int
push
xlat
sub
sbb
xor
push
mov
rorb
or
in
xor
inc
fldt
mov
cli
add
lods
call
add
test
pop
mov
fwait
ds
mov
inc
pop
adc
aas
mov
push
aad
sbb
fbld
pop
leave
jae
sti
sbb
pop
pop
adc
imul
lds
fdivl
outsb
fadds
ret
cmp
cmp
push
shrb
cmp
cmpsl
add
add
and
and
add
stc
out
jbe
xor
jg
aas
in
xor
push
mov
or
push
sbb
sub
cld
cmp
jo
dec
cmp
loope
xchg
dec
jno
pop
and
adc
cmp
inc
leave
jb
insb
mov
add
je
cmpsl
ficoms
jg
xlat
fsubrl
sbb
jae
cmp
adc
adc
or
ss
sbb
lea
out
jp
rorl
ret
ss
addb
cli
cli
xchg
call
popa
push
ss
lods
sub
data16
mov
rcrb
cmpsb
orb
mov
jg
mov
ret
stos
jo
cli
or
mov
stos
insb
rclb
jo
lret
subb
mov
inc
loop
add
out
inc
lcall
test
in
xchg
icebp
fdivr
pusha
mov
mov
and
pop
out
sub
xchg
or
cmp
push
xchg
repnz
in
xchg
mov
cwtl
test
add
push
cld
wbinvd
out
shll
rcrb
inc
cmp
sub
push
nop
add
adc
dec
jp
decl
in
xor
mov
inc
sbb
xor
or
incl
sbb
xchg
ret
ljmp
popa
or
adc
pop
movsb
dec
mov
clc
mov
push
rclb
shll
add
arpl
sub
add
loop
lds
push
rclb
imul
mov
and
test
or
aaa
jg
lcall
pusha
out
fdivrs
outsb
add
icebp
dec
sub
clc
or
test
mov
or
jle
mov
ja
cltd
in
popl
or
ds
jmp
mov
or
or
decl
sbb
sub
jb
sti
cld
fidivs
pop
and
clc
sub
cmpsb
push
adc
cld
aas
add
dec
mov
or
popa
dec
aas
xor
mov
sub
sub
bound
jae
lcall
and
testb
fimull
clc
lahf
add
in
sbb
imul
jnp
xor
sub
or
fs
pop
and
add
mov
lods
lods
js
push
aad
sti
hlt
inc
jmp
popf
mov
adc
popa
adc
mov
sub
movsl
aaa
dec
add
dec
sbb
add
lret
xchg
in
rolb
outsl
push
decl
push
es
cld
jo
aam
fimuls
add
sbb
sbb
inc
cld
out
or
sub
cwtl
inc
les
decl
adc
shll
cmp
test
arpl
add
push
pop
mov
inc
cmp
je
lcall
cld
pusha
arpl
hlt
add
adc
roll
lcall
push
pushf
xor
bound
sbb
sbb
andl
ret
cmp
pop
mov
cmp
and
sub
push
vmovdqa
inc
or
or
and
or
mov
mov
loopne
xor
popf
mov
push
adc
hlt
push
insl
adcl
and
cmc
push
rcrl
or
mov
mov
outsl
mov
or
out
fwait
pop
add
add
push
out
je
insb
cmp
shrb
jmp
push
mov
add
xor
mov
add
test
fxch
add
and
xlat
push
adc
imul
cmp
or
out
test
and
mov
push
mov
jl
add
add
pop
pop
or
test
jo
jns
loope
mov
mov
xor
loopne
pop
call
test
jg
in
push
mov
das
jno
push
jl
pop
scas
aam
ret
icebp
pop
push
fs
mov
xchg
add
mov
lds
out
jne
sarl
cwtl
pushf
sbb
mov
mov
imul
test
clc
das
jmp
mov
xchg
sahf
enter
pop
sbb
mov
mov
js
sbb
inc
jmp
and
ja
ret
mov
mov
nop
xchg
decl
cmp
pop
mov
push
pop
xchg
lea
cld
xorb
adc
pop
xchg
or
sahf
inc
cmp
xchg
jo
test
icebp
xor
jno
arpl
or
repnz
mov
add
sbb
js
test
sub
pop
mov
xchg
nop
shrb
scas
jae
inc
sub
or
insb
filds
jb
jae
into
and
out
or
cmp
shlb
jae
lods
les
movsb
dec
xlat
faddl
ss
adc
xchg
mov
ja
pop
mov
in
mov
jmp
lock
sbb
jo
clc
mov
mov
insb
sbbl
jo
dec
testl
rcrb
inc
stos
out
add
inc
dec
jo
inc
or
add
fsub
xor
push
mov
add
pop
mov
jle
add
add
adc
mov
mov
insl
pmaddwd
inc
xor
add
lds
into
imul
es
mov
jp
push
loop
aam
mov
mov
push
mov
xor
push
add
filds
xor
stos
jne
mov
test
test
xchg
ret
sub
and
jne
mov
mov
cmp
pop
imul
scas
jns
inc
hlt
add
ret
or
insb
js
push
notb
jns
movsl
jecxz
rcrb
dec
push
adc
jle
jo
or
xor
xchg
push
outsl
xchg
or
jnp
pop
sbb
pop
orb
jg,pn
clc
dec
outsl
push
std
scas
xchg
mov
dec
idiv
into
rorb
mov
frstor
push
ret
and
mov
and
xchg
add
in
js
adc
push
jnp
js
insb
cs
js
inc
adc
adc
les
in
push
test
sub
bound
fidivrs
mov
loope
inc
faddl
out
xor
jg
call
movsb
sbb
aam
push
mov
mov
ss
cmp
test
data16
clc
aad
andnps
lret
jns
dec
xchg
mov
nop
imul
ret
fimull
xchg
es
mov
sbb
mov
mov
inc
mov
lods
cmp
jne
repz
clc
xchg
add
jle
js
xorb
shll
lock
pop
imul
cld
sbb
mov
jge
xchg
mov
sub
int
movsl
test
mul
je
es
into
or
jbe
scas
retw
test
call
arpl
adc
int3
leave
push
loope
dec
mov
cmp
pop
test
cmp
cwtl
fcoml
mov
lods
js
sti
cmp
enter
jmp
cmpsl
das
xchg
push
jmp
xchg
repnz
xorl
insl
xchg
into
lods
out
mov
in
and
pop
les
mov
pop
mov
mov
fadds
add
jle
jl
add
cmpsl
addr16
mov
mov
sti
popa
pop
sbb
std
xchg
vcvtsi2sdl
sub
pop
xchg
dec
xor
lds
popa
xchg
fcmovnbe
add
pop
fidivrs
pop
addl
sub
test
mov
xchg
xor
jns
cwtl
adc
pop
cmpl
loop
int
icebp
hlt
pop
stos
mov
or
inc
lcall
divl
mov
in
rorb
cltd
mov
js
xorl
xor
in
cmp
pop
iret
rcrb
aad
sbb
inc
or
pop
mov
xlat
je
sub
sbb
insl
bound
inc
enter
jp
push
iret
aas
mov
and
push
jno
loopne
outsl
cmp
add
int3
sar
xor
outsl
xor
xor
and
test
lahf
in
and
cmc
outsl
loopne
push
push
cmp
sarb
push
mov
lahf
or
dec
out
mov
fldt
nop
mov
inc
in
inc
das
cmpsb
push
in
push
mov
lods
adc
fnstenv
addl
jns
aas
inc
into
dec
in
and
rol
mov
jo
cmp
out
rolb
push
or
inc
dec
pop
pop
jmp
add
cmpsl
pusha
enter
outsb
ret
dec
or
inc
sub
push
mov
cmp
ja
jecxz
inc
mov
mov
cmpsl
jae
pop
ds
call
xchg
add
mov
add
dec
mov
sbb
repnz
mov
int3
pop
push
cld
push
js
mov
sbb
add
sahf
mov
icebp
inc
insl
mov
andb
dec
aas
xor
and
adc
test
pop
xchg
xchg
ds
subb
inc
xlat
xchg
lock
cmp
mov
js
push
sbb
in
lds
lret
mov
fcoms
mov
jl
popa
data16
jb
dec
mov
pop
dec
paddw
jp
cmp
push
mov
adcb
icebp
ljmp
push
push
lods
cmp
dec
cltd
or
or
je
mov
pop
jg
out
jo
ds
insl
cld
les
inc
mov
out
mov
lcall
ljmp
rcll
cli
in
dec
adc
pop
aaa
xor
lea
pop
inc
mov
xchg
push
lods
in
mov
or
in
xlat
jne
aas
pusha
aaa
mov
add
imul
xchg
ret
jle
jo
lahf
addl
icebp
hlt
push
add
test
je
popa
stc
popf
jnp
inc
test
mov
inc
pop
mov
mov
mov
lahf
sarb
daa
ret
jbe
addr16
pop
mov
xchg
cmc
and
mov
and
inc
pop
ret
xchg
mov
adc
loopne
mov
inc
cmp
mov
rorb
leave
or
icebp
bnd
in
xor
xlat
or
js
xorl
pop
loopne
add
and
jge
push
cmp
pop
add
pop
or
push
push
fsubs
insb
add
pusha
scas
shr
jmp
es
es
xorl
movsb
imulb
jmp
xor
ja
cmp
js
lcall
out
xlat
and
xchg
xchg
mov
inc
adc
mov
adc
in
jle
pop
ret
add
sbb
cmpsb
cmp
fidivrs
xor
xchg
jl
js
movsb
aas
add
test
lods
mov
pop
jmp
popf
lods
fsubl
or
rorl
stos
pop
daa
sahf
shll
sahf
mull
hlt
inc
popa
inc
sbb
push
ret
pop
or
ss
std
sbb
stos
ss
push
cmp
aaa
mov
cmpsl
fcmovnbe
adc
loopne
mov
aas
shrb
dec
xor
xchg
enter
adc
out
and
mov
or
sub
stos
dec
jle
xchg
fnstenv
rcrl
test
inc
xchg
cmp
ljmp
ret
fldt
mov
mov
insb
rorl
addb
cld
xor
rcr
mov
lds
into
push
xchg
fcomps
jo
clc
rclb
cmc
loop
add
adc
hlt
sbb
fs
push
mov
enter
mov
adc
cltd
scas
add
adc
mov
into
xor
loop
repz
fcompl
pop
scas
decb
pop
cmp
mov
inc
addr16
mov
sahf
cmpsb
or
ficoml
sahf
or
sub
jp
roll
leave
inc
and
add
xchg
xchg
pop
stos
xchg
xchg
jno
inc
hlt
pop
push
adc
mov
xchg
sub
shlb
adc
inc
mov
std
add
mov
ret
sub
xor
or
add
test
sti
sub
inc
movsl
xor
xchg
sbb
cmp
dec
mov
icebp
push
cmp
push
mov
sub
push
outsl
cmp
rol
mov
xor
dec
push
push
pop
jle
jmp
imul
mov
xlat
jmp
mov
cs
aas
pusha
or
jae
jmp
push
push
adc
sub
cmpsb
pop
adc
lods
popf
shl
sbb
push
pushf
ljmp
fadds
movsl
add
pop
lods
inc
stc
lods
cmp
jno
clc
add
orl
cmp
and
sahf
add
and
inc
loop
mov
push
and
in
jb
inc
out
push
add
cli
insb
lds
addr16
push
rorl
push
add
inc
mov
lock
cmp
xchg
add
mov
sbb
jecxz
iret
mov
mov
lret
push
mov
pop
sub
xor
in
cltd
push
push
cli
pop
mov
jnp
jno
or
and
outsl
inc
cs
pop
lds
cmp
jp
lahf
pop
cld
adc
sub
repz
enter
inc
stos
mov
fwait
pop
mov
cs
adcb
arpl
fwait
xchg
imul
xor
addb
jno
out
cmp
test
xor
adc
pushf
movl
lock
sbb
push
sbb
jmp
push
xorl
sbb
out
cmp
inc
mov
adc
ljmp
mov
push
lcall
mov
aaa
dec
scas
jo
cmp
mov
xor
mov
lret
xchg
ret
lret
pushf
pop
mov
inc
fbld
ss
pusha
push
cwtl
xchg
js
pop
adc
push
jp
jne
jmp
or
shlb
ja
xlat
das
std
push
out
or
adc
jg
ljmp
cmp
rcr
mov
push
sbb
out
sbb
loopne
sub
jmp
inc
mov
outsb
push
jle
inc
pop
jbe
or
or
and
fisttps
xchg
jmp
inc
sub
xor
out
adc
inc
mov
pop
gs
jbe
in
inc
sub
and
aam
popf
pop
lods
mov
mov
sbb
shlb
sbb
add
and
popf
sub
push
in
inc
jmp
ret
mov
push
in
jl
out
rep
sbb
xchg
push
jle
pop
lods
cld
sub
je
clc
clc
stos
add
mov
or
lcall
in
jnp
out
les
add
shr
orl
nop
cmp
jae
sub
pop
in
adc
dec
fucom
xor
mov
dec
cmpsl
push
inc
cmp
dec
aam
sub
and
inc
in
movsl
mov
sar
xchg
inc
fwait
jns
repz
sbb
mov
dec
out
ret
push
mov
inc
dec
rolb
mov
popf
ds
push
and
xor
sti
jecxz
mov
inc
mov
sub
mov
inc
and
pop
in
adc
fbstp
jge
imul
in
sbb
xor
push
int3
std
inc
das
test
xorl
xor
test
ficoml
adc
pop
aaa
dec
sub
dec
mov
pusha
dec
jp
inc
or
mov
xlat
pushf
pop
push
mov
rcrb
sbb
or
movsb
mov
cmpsl
mov
gs
pusha
push
dec
and
xor
xchg
push
leave
adcb
add
rol
add
xor
cltd
hlt
and
sub
jnp
xchg
shr
push
add
pusha
sub
stc
test
cmp
xchg
pusha
jmp
add
seta
push
dec
inc
inc
cmp
hlt
jb
aas
inc
add
aad
pop
xor
subb
lret
xchg
and
inc
ss
xchg
fwait
xchg
push
incl
aaa
arpl
mov
dec
or
loopne
dec
cs
jnp
and
jl
adcb
push
stos
shl
icebp
inc
hlt
and
jb
insl
add
sbb
add
mov
or
pop
test
out
rolb
movsb
and
pop
xchg
loop
sbb
cmp
pop
mov
xchg
repz
dec
out
sub
fcomps
pop
cmp
or
adc
outsl
cmp
or
push
xchg
pushf
jg
sbb
jae
push
ljmp
xor
stos
stos
xor
dec
out
clc
xchg
or
fmul
fisttpl
sahf
aam
lcall
dec
mov
xchg
flds
mov
xchg
rcll
inc
jnp
add
out
fdivrs
lock
inc
call
lock
fwait
push
add
repnz
pabsb
adcb
loop
jg
sbb
or
sarl
push
ds
cmp
add
outsb
push
imul
iret
push
pop
add
push
and
jo
es
jae
inc
fcomps
jg
sbb
out
jns
repnz
nop
mov
fmuls
add
xor
lea
adc
andb
test
sti
xor
or
pop
sub
mov
jnp
dec
mov
inc
das
and
pusha
mov
add
pop
jnp
add
sbb
fcmove
or
mov
mov
int3
outsb
je
xchg
bound
loopne
mov
xlat
lds
ljmp
scas
pop
pop
push
mov
or
mulb
mov
inc
fcomps
mov
mov
cmpsb
push
and
lret
int3
xor
ja
aad
fcmovu
loopne
add
cli
daa
xchg
cmc
add
sbb
pop
mov
cmp
adcl
mov
jg
push
je
and
or
mov
jnp
jp
add
inc
mov
aas
call
fwait
and
test
mov
sbb
fisttpl
mov
mov
ficoml
sbb
cmpsl
ss
shlb
loope
out
and
sub
sahf
out
sbb
lretw
dec
cmpsb
xchg
cmp
pop
pop
rorb
xor
mov
vandps
jg
les
inc
loope
loopne
adc
test
fcmovb
aam
mov
jecxz
jp
ds
ja
add
inc
ss
mov
add
sahf
inc
or
adc
inc
inc
jp
push
cltd
ret
cmp
cmp
out
cmp
fwait
ret
lret
aam
xor
dec
fmulp
aaa
movsl
add
xor
sub
insb
xor
lods
cld
xor
cmc
add
add
ss
xor
mov
push
sub
lock
cmp
xchg
xchg
test
sub
push
mov
or
popf
xlat
sti
and
insl
or
xor
int3
hlt
pusha
sub
xor
add
pop
inc
or
enter
xchg
dec
xlat
jecxz
pop
inc
lcall
mov
xor
xor
push
push
cmp
push
sti
mov
pop
lahf
fadds
sub
jle
cmp
jae
sahf
hlt
dec
mov
cmp
mov
jge
nop
cli
mov
in
adc
jg
pop
ret
test
sub
push
push
pop
adc
dec
and
in
jge
lods
mov
lahf
lds
test
and
shlb
std
jg
mov
push
sub
pushf
aaa
and
cli
icebp
aas
out
lcall
sbb
pushf
pop
pop
jp
sub
mov
sbb
ret
mov
insl
adc
sub
pop
dec
inc
imul
aaa
in
sti
adc
gs
loop
pop
xchg
jo
aad
adc
movq
add
xor
imul
arpl
sub
iret
scas
and
add
rcl
lcall
mov
mov
cs
pop
addr16
jns
push
aaa
shrb
scas
push
cmp
cmpsl
and
xor
mov
dec
imul
sahf
enter
rorl
inc
mov
andb
xor
repnz
or
insl
lret
mov
pop
fcompl
orb
fldpi
subb
xor
sub
hlt
mov
stos
add
sarb
inc
sbb
out
lcall
das
mov
pop
stos
es
stos
ja
sub
mov
jno
out
mov
adc
dec
add
sub
lock
iret
push
mov
insb
jg
jle
rol
mov
ret
mov
pop
add
fbld
and
lret
pop
xchg
inc
xchg
jecxz
push
bound
jg
pop
push
jmp
lock
insb
hlt
lock
ficoml
mov
mov
or
mov
pop
dec
mov
addl
pop
push
xor
in
sbb
mov
mov
lods
daa
subl
dec
add
or
outsl
mov
mov
or
mov
pop
in
in
fdiv
lock
dec
fdivrs
mov
xchg
push
testl
outsb
mov
xchg
xor
dec
push
push
std
and
stos
subl
fsubrs
push
pop
fnstcw
bound
push
adcl
cmpsb
inc
loope
lds
lock
fimuls
jmp
jmp
repnz
popa
mov
cmpsb
xchg
jp
jmp
xor
mov
imul
dec
aad
jmp
out
sbb
in
mov
les
xchg
mov
sbb
jg
mov
inc
add
insl
call
int
dec
xchg
in
xchg
add
sbb
aad
sti
les
mov
ss
jbe
xchg
es
dec
sbb
shrb
adc
iret
ds
xchg
ret
sub
test
adc
lret
and
mov
dec
dec
scas
fistpll
xor
subb
push
push
push
inc
imul
sbb
push
dec
cld
lods
sti
test
dec
pop
or
test
iret
sbb
fdivp
je
loopne
jp
negb
ret
inc
jp
mov
rcrb
jecxz
jl
scas
jle
add
lcall
negb
xchg
sbb
mov
jo
adc
push
mov
mov
ficoml
add
cmp
add
dec
fidivrl
cltd
repz
mov
call
xor
xchg
adc
test
inc
cmp
jge
ret
mov
mov
jl
sar
lret
cmc
outsl
shlb
outsb
mov
aaa
cld
or
adc
adcb
cltd
cmp
add
jns
leave
pop
push
call
insb
xchg
sbb
or
cmp
outsl
jp
push
jb
mov
sbb
dec
stc
pop
pop
mov
inc
ret
jae
xchg
addr16
cwtl
mov
jno
movb
and
vcvttpd2dq
adc
jne
cmp
stos
cli
shll
insb
push
lods
cwtl
sub
cmp
or
or
arpl
lock
cmp
mov
add
mov
xor
cld
ud2
dec
hlt
popf
pushf
cli
adc
push
adc
sub
test
mull
es
icebp
cmpsl
ds
xor
or
filds
cs
sbb
xchg
out
mov
adc
nop
xor
nop
lea
mov
mov
sub
mov
lcall
aaa
pop
add
push
add
ret
push
scas
or
sbb
jns
cs
call
jle
xchg
int3
and
addl
test
or
cli
xchg
jecxz
cmpsb
cld
outsl
or
adc
addr16
adc
pop
test
aam
insb
push
inc
or
push
aas
mov
test
mov
ss
mov
clc
les
aaa
mov
jecxz
or
jl
rol
or
or
in
aaa
xor
jp
ds
sti
mov
jne
das
pop
pop
ja
add
push
dec
add
push
mov
adcb
inc
lods
or
loope
stc
clc
lahf
jp
xchg
test
dec
loop
adcl
sbb
xchg
loop
popa
lock
idiv
mov
jl
adc
dec
and
inc
mov
loopne
stc
lock
mov
iret
push
sub
popf
lock
popf
hlt
fadds
inc
mov
dec
cli
clc
add
mov
pop
loopne
push
mov
cmp
lahf
jb
shlb
lea
icebp
aad
mov
movsb
outsb
pop
rolb
lahf
mov
sbb
mov
and
repz
mov
inc
test
inc
xor
shl
cmpsl
outsl
mov
xrelease
test
lcall
pop
bound
push
icebp
adc
or
sub
fimuls
packsswb
add
sbb
sbbb
sub
movsb
inc
mov
xchg
cmp
movsl
ljmp
pop
imul
rcrl
sbb
clc
rorl
stos
mov
or
push
nop
outsb
mov
mov
dec
adc
fdivrl
mov
das
cld
sub
mov
sub
ret
pusha
dec
jne
fstpt
movsl
imul
ret
inc
or
ret
movsl
mov
xchg
mov
adc
repnz
pop
jno
adc
fcoms
mov
loop
xchg
xor
popa
popa
lock
push
xor
sbb
js
pop
xor
adc
out
jle
call
dec
mov
scas
xchg
rcl
les
paddb
mov
bndldx
xor
fcompl
sbb
rolb
add
sub
sub
cmp
movl
add
and
xor
cld
xchg
cld
icebp
sti
or
jecxz
notl
dec
outsl
shll
sbb
fstl
jp
adc
int3
movsl
cmc
ret
pop
pop
or
xor
aad
add
daa
pusha
fs
jp
adc
cmpsb
pop
inc
xchg
in
fldt
pop
rorb
shl
adc
push
addr16
and
or
lcall
sbb
sbb
lret
jne
mov
mov
les
adcb
sub
add
aaa
dec
add
jg
push
add
mov
icebp
push
xchg
jmp
cmp
xor
add
sbb
jge
adc
icebp
xor
stc
pop
push
pop
out
mov
inc
add
dec
jp
inc
lds
in
push
dec
pop
nop
stos
out
popf
in
and
add
test
lret
mov
mov
add
or
xor
mov
cmp
test
pop
sbb
sbb
test
loopne
and
mov
rcrb
es
push
push
mov
jbe
cli
inc
data16
loope
push
js
xchg
push
cmp
lock
outsl
or
jp
xchg
ds
jle
outsb
add
test
cmp
add
mov
push
in
repz
lock
scas
mov
push
out
sbb
sub
hlt
inc
fadd
xabort
push
js
out
adc
sbb
cmp
mov
jns
es
lea
or
mov
loope
mov
add
mov
and
insl
cmp
inc
cmp
or
cs
dec
aad
clc
dec
je
push
sbb
mov
mov
rcll
mov
pusha
shl
push
daa
ror
loop
js
and
ret
dec
adc
sti
test
nop
rclb
sub
xor
fists
aaa
dec
out
pop
lods
aaa
cwtl
in
cmp
mov
stos
inc
faddp
leave
xchg
bnd
das
sbb
xchg
sub
cwtl
fadds
pop
in
add
pop
cmp
dec
fbstp
dec
inc
pop
insl
xchg
fistps
call
push
lods
ss
lock
divb
dec
jmp
inc
dec
sub
shl
jmp
fldt
outsb
jne
call
aas
pushl
push
or
push
xchg
pop
loope
adcb
dec
arpl
dec
adc
adc
pop
adc
pop
rolb
divb
mov
pop
mov
fcoml
add
jle
pop
jno
jecxz
int3
push
or
jge
dec
xchg
call
cmc
inc
movsb
sbb
out
jg
mov
inc
adc
lahf
lret
out
and
xor
xchg
es
xchg
cmp
or
dec
sbb
cmp
xchg
popf
dec
icebp
js
aam
mov
mov
scas
fimuls
jo
mov
mov
icebp
dec
cmpsl
dec
or
xadd
test
loope
or
or
xlat
mov
push
sub
pop
rcll
enter
int
aaa
jp
jne
test
push
adc
fs
add
jecxz
add
or
push
pushl
jle
jb
cwtl
das
add
ret
enter
mov
dec
jecxz
lds
jmp
nop
or
mov
pop
fs
call
add
loope
dec
and
sbb
cmc
ja
addr16
inc
in
add
pop
jl
and
add
cwtl
sub
or
insl
subb
lret
daa
lods
es
push
cld
push
aas
nop
sub
out
xor
aas
mov
imul
gs
adc
add
outsl
andb
jp
mov
lock
jb
adc
mov
pop
ss
xchg
repz
clc
sub
mov
add
insl
xchg
out
rclb
clc
call
cmp
jg
scas
insl
inc
pop
fldt
call
jle
inc
pop
xor
cli
push
hlt
push
je
pop
ljmp
fst
push
es
push
dec
push
mov
addr16
sarb
loopne
outsb
jo
push
cmp
in
pop
out
sbb
push
xor
xor
cli
loopne
bound
mov
inc
fs
xchg
leave
popa
mov
mov
ljmp
pop
and
out
lea
fisubrl
pop
pop
adc
scas
push
test
pusha
jmp
xchg
clc
ljmp
cmpsl
and
fimull
push
lcall
aas
mov
push
sub
sub
repnz
lods
lcall
cmp
outsb
add
fnstsw
std
push
sbb
adc
mov
ret
or
sub
add
shrb
xor
jns
sbb
xchg
inc
adc
insb
mov
sbb
pop
fidivl
pop
dec
mov
cwtl
arpl
es
aas
call
repnz
push
push
pop
les
xchg
adcb
mov
mov
or
xchg
sub
divb
insb
icebp
dec
mov
fisttpl
fisubrs
push
fildll
subb
mov
cltd
push
jae
push
test
nop
or
mov
jg
pop
movsl
push
testb
push
mov
mov
imul
inc
in
aam
jnp
popa
negb
fwait
push
mov
xchg
lea
dec
loope
xor
loopne
mov
adc
mov
mov
push
mov
call
xchg
push
cmpsb
bts
fwait
in
push
loop
stos
cmpsb
sub
cmp
sahf
mov
cs
testb
lock
fldt
add
lret
cmc
or
inc
adc
and
lock
mov
shld
lret
push
stos
bnd
push
adc
aad
mov
and
xor
push
leave
cli
or
faddp
fildll
cmovbe
mov
bound
add
std
or
ds
sub
and
out
jg
and
lods
sub
cmpsl
push
pop
inc
movsb
fmuls
add
loope
insb
test
cli
adc
std
loop
ljmp
and
sbb
daa
and
adc
in
loope
cmp
push
divb
mov
stc
or
dec
mov
rcr
mov
pusha
inc
jno
mov
xchg
out
pop
loopne
adc
jbe
test
add
data16
jmp
mov
add
sti
lret
jp
test
sbb
lds
out
pop
sub
sbb
cwtl
jb
pop
mov
dec
adc
push
gs
inc
out
cmp
sbb
adc
mov
xchg
lahf
clc
mov
inc
mov
arpl
sbb
add
rcrl
dec
mov
loopne
jg
sub
inc
aam
jb
in
jge
cmpb
push
mov
cli
mov
rorb
rorl
ret
in
add
cmp
push
mov
out
in
mov
daa
cmpsb
in
cmovle
shlb
push
cmp
sbb
mov
fsubrl
orl
xchg
jg
mov
outsb
sbb
and
mov
fidivrs
jb
pop
loop
adc
sub
cmp
mov
hlt
inc
pop
insb
pop
dec
push
add
fildl
stos
and
jbe
xchg
aaa
mov
add
mov
cmp
dec
test
ret
jbe
cmp
insl
stos
test
shrb
ds
mov
idiv
inc
xor
or
xor
dec
scas
push
mov
sub
add
jp
jnp
mov
mov
mov
testl
xor
push
adc
fisttpl
test
dec
jle
rclb
or
push
out
int
pop
cmp
jbe
mov
and
xlat
cmp
js
push
cmp
and
xor
push
test
sub
mov
test
push
rclb
add
ror
pause
adc
popl
mov
pop
ss
or
in
adc
jp
pop
sub
sbb
jno
cmp
call
flds
repz
ss
shll
jb
data16
loop
fcoml
pop
jmp
cli
or
sub
insl
aam
push
pop
dec
pop
jge
cld
lds
and
movsb
daa
js
lcall
xchg
imul
xor
stos
adc
or
inc
push
add
andb
pop
roll
dec
stos
jbe
movsb
mov
cmp
inc
sbb
add
sahf
popw
push
sub
cmp
add
shl
or
pop
push
movsb
and
add
lock
jbe
jo
ljmp
rclb
lods
mov
add
in
xor
outsl
imul
push
push
sbb
movsb
add
mov
cs
sarb
into
or
dec
push
rcl
fmull
pop
insb
out
push
fwait
cmpsb
add
jecxz
insb
sub
inc
and
jb
jo
xor
in
mov
push
jno
xor
adc
or
adc
adc
sub
xchg
and
fs
pusha
pop
dec
pop
negb
adc
flds
xchg
adcb
jge
jg
scas
cwtl
cmpsl
inc
xchg
shl
sub
in
jno
stos
cs
out
mov
movsb
imul
sbb
inc
jp
jg
loop
pushf
loope
inc
stc
add
adc
adc
fs
fmulp
inc
xchg
rorl
fsubr
or
dec
leave
stos
adc
orl
xchg
mov
daa
push
loop
add
decb
iret
mov
loopne
fwait
sbb
test
mov
mov
pop
loop
inc
sbb
push
mov
jno
stc
push
jno
mov
mov
push
fs
cli
mov
das
lock
call
xor
jl
mov
sbb
cs
loopne
jg
call
mov
xchg
jae
xor
mov
jecxz
fwait
xor
pushf
mov
jg
mov
sub
jb
mov
jp
clc
stos
out
inc
adc
clc
push
add
lods
imul
out
sbb
nop
jg
je
push
scas
cld
mov
out
xchg
push
xchg
cs
cmp
inc
mov
push
aas
stos
loop
xor
mov
mov
dec
dec
adc
lods
xchg
aad
sub
add
xor
rcrb
pop
enter
lods
or
cmp
push
jmp
xor
pop
jecxz
sarl
push
stos
nop
sarb
sub
orb
movd
aas
loopne
fwait
jo
es
mov
outsb
loope
sarb
clc
pusha
dec
out
test
sbb
push
ss
nop
push
jmp
add
hlt
adc
adc
hlt
pop
cs
clc
shlb
das
add
in
arpl
xchg
stos
jecxz
rcrl
fadds
test
pop
cs
cld
sarl
sub
inc
ds
nop
sbb
dec
lock
loop
sbb
call
loope
outsl
imul
icebp
mov
repz
cld
out
aas
icebp
dec
dec
dec
aam
push
xchg
cmpb
adc
sbb
fnstsw
add
test
jge
pop
jle
pop
pop
add
pusha
cs
push
push
incb
jmp
sbb
jmp
lea
enter
inc
xchg
add
pop
xor
xchg
mov
xchg
ret
dec
xor
das
push
jge
cld
inc
outsb
jbe
cld
out
cld
sbb
ret
mov
fst
add
inc
or
rolb
pop
adc
lock
call
mov
loope
xchg
mov
hlt
xchg
xlat
pop
and
fst
bound
es
inc
xchg
adc
mov
hlt
add
mov
inc
jb
loopne
cmp
push
aad
sub
pop
imul
lds
push
lods
mov
daa
jecxz
pop
cmp
pop
ja
pop
pushf
push
rol
in
pop
enter
stos
int3
icebp
push
mov
mov
dec
loope
cmp
sar
pop
add
cld
sub
or
cmpsl
sub
loopne
loopne
xchg
les
les
loope
das
cmp
sub
rclb
inc
addr16
pop
adc
jecxz
jmp
jo
lret
pop
lods
inc
shl
rol
dec
stos
push
or
fistl
pop
and
sub
sbb
inc
pop
movsb
repz
or
pop
mov
mov
out
call
pusha
movl
xor
enter
or
aaa
movsl
inc
and
fwait
dec
mov
dec
cmp
cmp
out
jp
shlb
push
mov
sub
lock
lahf
scas
aaa
adc
sbb
mov
push
jnp
or
and
fcoms
or
pop
flds
ret
cmp
shl
mov
sarb
adc
mov
dec
fiadds
nop
cmp
inc
adcl
jnp
ljmp
push
xor
fwait
js
cli
push
and
int
xchg
mov
dec
movsb
add
sub
shrb
lcall
mov
scas
jecxz
jns
hlt
lahf
mov
stos
cwtl
movsl
sub
jnp
dec
mov
xchg
cli
jnp
rol
adc
or
fadd
inc
cmp
into
adc
jno
mov
cli
inc
repz
icebp
repnz
in
add
dec
inc
pop
test
insb
shll
jb
pop
xchg
popf
cmp
push
xchg
pop
inc
mov
pop
cmp
fs
es
mov
int
sbb
jl
mov
fs
push
jg
clc
icebp
daa
mov
mov
mov
pop
pop
subl
push
sbb
daa
aas
push
dec
nop
mov
call
mov
jp
or
lock
sub
dec
loope
iret
inc
jl
inc
popf
add
xor
jle
pop
or
inc
xchg
fists
popa
add
jmp
jo
pop
sub
das
sub
cmp
or
pop
test
aad
sbb
bound
stos
add
fs
adc
stos
dec
test
js
push
inc
pop
add
xor
cld
mov
js
add
and
pop
add
jle
jg
aas
xor
sub
sbb
or
dec
push
xor
cmp
imul
mov
sub
test
mov
sti
enter
pop
mov
jle
outsl
fmuls
xchg
popf
test
sbb
loope
pop
mov
inc
jg
inc
and
aas
data16
mov
mov
les
adc
scas
incb
pusha
fwait
push
xor
xor
jl
les
arpl
rorb
mov
enter
and
xchg
sub
and
jp
inc
pop
cli
cmpsb
notb
movsl
or
cld
addb
cmp
fldcw
mov
cmpsb
sbb
into
rolb
mov
jne
xchg
sub
aam
push
bound
push
sarb
dec
xor
push
or
mov
nop
inc
aam
pop
ljmp
and
lock
in
ljmp
dec
pop
notb
mov
pop
mov
inc
pushl
and
adc
fdivrl
push
ss
cmp
pop
and
pushl
jl
jo
xlat
or
stos
shlb
jge
insl
hlt
and
mov
inc
ret
shll
and
loop
sub
cld
movsl
aad
or
popa
and
mov
mov
and
jmp
fisubs
sbb
lahf
cs
ror
lret
pop
int
out
test
push
push
jg
stos
sub
cmp
jmp
jmp
enter
scas
pop
popf
dec
leave
lds
aad
cltd
js
stos
gs
jecxz
lret
cs
sub
ficoms
push
mov
or
aaa
les
and
inc
ja
or
into
roll
jnp
add
sbb
out
mov
cli
sbb
sub
inc
clc
pop
push
xchg
rorb
in
inc
mov
jno
ljmp
call
int3
pop
pushf
jl
pop
and
aas
mov
jg
fsubp
fsubrs
xor
dec
mov
fs
sti
dec
loope
cmpsb
push
clc
in
pop
push
push
iret
subb
out
mulb
mov
jo
clc
xchg
lahf
iret
stc
add
roll
aas
sbb
xor
test
fwait
test
in
movsl
movsl
push
xor
je
loopne
add
flds
jb
sub
sub
mov
nop
cld
push
pushf
pop
clc
and
loop
xchg
mov
aas
es
or
lret
scas
pop
mov
jp
loope
adcl
out
sub
pop
and
lret
push
int3
pop
add
dec
push
nop
adc
sub
add
fidivs
sbb
cli
cli
orl
add
push
adc
stos
fcomi
fldt
sbbl
add
mov
orl
jb
adc
push
push
mov
in
aaa
cmp
mov
jo
lods
and
inc
cli
pop
test
hlt
mov
push
add
pop
or
inc
fcompl
stos
aaa
fiaddl
imul
push
push
cwtl
inc
mov
testb
repnz
push
dec
dec
push
cwtl
fsubrp
sbb
ret
push
push
jbe
adc
int
pushf
inc
pop
pop
je
or
sbb
and
fildll
xchg
mov
lock
lret
and
pop
test
ret
push
fwait
mov
or
es
inc
fs
jb
cmc
add
flds
dec
ss
clc
outsb
out
adc
xor
in
ja
jg
pop
inc
test
out
mov
hlt
sahf
add
jae
xorl
loop
cmp
cmpl
mov
test
cli
addr16
inc
aaa
xchg
cli
idivl
sbb
addb
and
fs
lock
outsl
sbbb
shr
xor
loop
mov
test
jg
sbb
decl
sub
rcrb
push
and
jge
cmp
rol
das
mov
jae
sub
fmul
lock
adc
flds
add
cmp
xor
push
jge
aam
push
dec
xor
scas
les
sub
out
pop
push
xchg
jo
jb
ljmp
xor
push
adc
and
push
xor
ljmp
fistps
movsl
bound
ljmp
xchg
xchg
test
hlt
xchg
push
inc
xchg
mov
dec
in
xchg
push
test
jp
dec
hlt
xchg
mov
add
scas
push
hlt
push
sbb
repz
outsl
in
sbb
dec
into
cmp
jle
add
fcmove
pop
xchg
imull
jle
lock
inc
rorl
mov
stc
mov
aaa
in
xor
pop
icebp
mov
xor
roll
push
lods
xor
mov
inc
movsl
pop
in
fwait
addb
add
pop
push
rorb
test
push
push
mov
or
jl
test
mov
ds
push
mov
mov
jnp
xchg
and
sub
repz
add
cmc
mov
jge
adc
loopne
jmp
subb
push
aaa
scas
cmp
test
mov
push
cmc
rorl
mov
and
adc
enter
orl
lcall
pop
vmwrite
lret
dec
adc
lret
lcall
and
add
jecxz
aam
test
jnp
out
fcom
push
and
and
fists
bound
pop
pop
or
pop
or
pop
std
decl
faddl
arpl
test
dec
add
xor
lret
imul
clc
lods
jmp
jo
clc
inc
in
testl
clc
sti
out
dec
xor
dec
mov
je
cmc
sbb
dec
pop
ret
adc
push
adc
popf
pop
test
and
sub
mov
dec
lahf
jae
es
inc
adc
sbb
add
rcrb
inc
xchg
test
sbb
jno
mov
scas
inc
das
aaa
jo
or
mov
jns
fwait
jg
sub
fistpll
inc
xor
test
sbb
pop
testb
cmp
rorb
jle
pop
cmpsl
inc
add
pop
enter
out
push
and
dec
fistpl
add
stc
int
jl
jnp
lds
aas
jl
das
pop
push
add
repnz
std
fnstcw
mov
sub
es
das
ss
enter
adc
and
mov
es
loopne
or
scas
ret
mov
ret
inc
ja
mov
push
inc
cmp
adc
cmp
fwait
mov
stos
add
testb
dec
imul
adc
xorb
dec
push
insl
jnp
fldt
sar
into
popa
cmp
xchg
fwait
mov
pushf
rolb
mov
lods
out
fsubl
sbb
and
mov
into
out
jno
sahf
sub
shll
ss
jb
mov
repz
mov
pop
loop
push
mov
sub
es
test
sub
int
ss
xor
push
cwtl
negb
test
sbb
pusha
dec
push
push
pop
shrl
fcmovu
sub
std
inc
inc
fisubl
push
mov
mov
out
lcall
ljmp
ljmp
cmpsb
sub
push
or
push
movb
cmp
ror
fisubrs
push
loopne
shrl
push
pop
xor
pop
loopne
cmc
pushl
mov
imul
rorb
push
out
xchg
loope
jg
test
repnz
fiaddl
fsubrl
sbb
mov
add
adc
and
or
push
add
mov
ret
int3
movsb
jl
lahf
pop
pop
sahf
add
mov
mov
xor
notb
cmpsl
negl
aam
jns
loope
bnd
call
inc
enter
lods
aam
std
cltd
movsb
andb
sahf
outsl
cwtl
xchg
xor
shl
cmpsb
mov
test
popf
es
adc
push
sarb
iret
sub
movsb
shrb
scas
mov
mov
test
pop
or
cmp
cli
pop
inc
fsubl
aad
fsubs
dec
push
jmp
mov
push
jno
jo
lods
push
das
sbb
xchg
repnz
adc
les
jg
js
xchg
jmp
add
orl
nop
cwtl
adc
movsb
idiv
xlat
lahf
std
lret
cmpsl
push
sbb
sub
dec
dec
cli
lds
pop
push
inc
lock
and
mov
nop
jne
test
imul
test
xchg
and
ljmp
ret
dec
fiaddl
mov
shr
pop
push
cmp
cmpl
adc
sahf
loopne
pop
pop
ljmp
test
lahf
push
jg
pop
xchg
mov
pushf
cmpl
jl
push
lret
jg
jb
lods
push
subb
insl
aas
xor
call
mov
mov
xchg
lock
cli
scas
cmp
sub
add
popa
dec
xor
push
lcall
in
mov
dec
jo
into
loopne
inc
sahf
pop
push
inc
rcll
pop
and
mov
xchg
fwait
cmp
push
jo
outsb
xchg
loope
cs
inc
adc
pop
push
mov
test
outsl
sbb
dec
fisubrs
push
xchg
out
push
clc
pop
rolb
imul
enter
mov
fnstcw
push
or
jg
aam
sarb
shlb
inc
add
std
fs
jg
iret
xchg
daa
mov
xchg
push
scas
mov
imul
mov
mov
ret
and
and
fadd
loopne
pop
lock
cltd
int3
and
xor
xor
xor
add
ss
mov
cmpsb
mov
out
mov
jle
mov
sub
cmc
movl
fadds
push
ljmp
xor
fimuls
dec
pop
jmp
and
sbb
xorb
mov
jle
aaa
into
push
std
cld
lock
clc
mov
push
movsb
add
jl
push
push
clc
shrb
call
lea
and
fiaddl
push
in
mov
and
hlt
inc
and
int3
mov
and
lret
add
or
mov
or
jle
hlt
das
push
pop
fimull
or
sub
incl
sbb
loope
push
arpl
xorl
insb
ljmp
cmp
fdivrs
pop
lods
push
sub
idivb
call
push
lock
xchg
fisubrs
sbb
sub
or
movsl
out
test
jmp
inc
xchg
push
fdivr
sbb
pop
sbb
cwtl
mov
dec
and
lods
pop
adcl
je
xchg
movsb
adc
cli
xchg
jmp
filds
cmp
xchg
jae
clc
sbb
test
clc
xchg
add
lret
loopne
mov
sub
cmp
jns
loopne
cmp
shlb
cld
fidivrs
mull
sbb
cwtl
mov
push
sbb
push
ret
sbb
mov
shl
incb
push
clc
aam
xor
jp
push
xchg
aas
mov
repnz
popf
lret
loopne
hlt
add
dec
mov
loope
mov
aaa
sub
std
insb
inc
pushf
jo
jg
mov
cmp
dec
adc
or
inc
dec
jg
and
gs
cwtl
push
adc
mov
mov
sarb
aaa
add
rclb
and
push
add
mov
pop
push
push
inc
iret
pop
arpl
and
mov
mov
sub
dec
mov
sbb
cmp
mov
push
fisttps
out
ficoml
mov
dec
data16
inc
pop
push
lahf
ds
mov
cli
pop
cld
cs
in
in
adc
push
xor
add
or
and
out
pushf
in
inc
adcl
sub
dec
fcoml
and
sbb
mov
mov
push
flds
add
inc
gs
aas
and
pop
cltd
pop
mov
pop
lds
insl
decl
js
add
icebp
pop
shll
sub
cld
jg
inc
pop
jmp
inc
add
jns
push
cmp
aad
cltd
push
or
cltd
lock
jmp
xchg
pop
and
push
test
data16
jp
xlat
rorb
add
cmc
add
and
cmp
scas
jae
jle
fisttps
and
repnz
xchg
lods
dec
xchg
lret
rcrl
in
fs
xchg
jmp
fidivl
inc
inc
outsl
addb
rorb
jbe
fldl
push
lahf
sbb
push
call
xor
and
popa
add
ss
push
jge
loop
xchg
mov
sbb
call
add
ret
lds
sbb
inc
adcb
pop
sbb
push
stc
jmp
leave
fidivl
aad
xchg
mov
cmp
mov
xchg
fdivl
imul
fcomip
xchg
sub
sbbl
sbbl
cmp
cmp
shlb
push
lods
push
loopne
jne
xor
mov
shlb
in
sbb
mov
or
or
scas
shlb
jnp
cmpsl
dec
cld
pop
out
outsb
sbb
mov
rolb
sub
in
loope
int3
rorb
mov
jno
or
loop
jl
mov
imul
jnp
push
mov
xchg
push
int
and
or
adc
xor
hlt
xchg
adc
andl
cmp
shl
pop
push
shlb
add
pop
imul
jp
add
sahf
out
sbb
imul
jg
js
xor
mov
lds
cmp
push
jle
loopne
dec
cs
cmp
sub
and
aas
add
mov
out
push
sbb
push
push
stos
inc
inc
int
cmp
js
repnz
mov
dec
xchg
add
fwait
test
adc
mov
cmp
sub
jg
int
or
dec
xor
adc
ret
scas
sbb
xchg
pusha
inc
mov
xchg
mov
jo
aam
mov
js
push
cmp
pop
popa
fistps
stc
jae
mov
or
rclb
fildll
leave
leave
mov
imulb
clc
xchg
call
push
adc
sbb
mov
insb
cs
dec
int3
rcrb
std
push
mov
pop
lods
leave
or
jmp
pop
inc
pop
inc
pushf
gs
mov
inc
cld
mov
repz
or
jg
ret
and
xor
jle
fisubs
mov
icebp
imul
popl
dec
ret
pop
adc
fisttps
cmp
pop
daa
test
lock
icebp
outsb
cwtl
test
mov
pop
aas
shlb
xor
adc
pushl
jbe
jne,pn
xor
pop
push
insb
test
std
sbb
pop
pop
loopne
push
dec
in
push
dec
adc
and
xor
xchg
jg
cmp
cmc
inc
inc
paddb
hlt
jge
mov
and
ja
ds
movsb
push
push
and
out
insl
cmpsl
imull
es
lds
test
aaa
loopne
sub
lahf
mov
xor
cmpb
int3
add
outsl
decl
jb
rol
jg
inc
push
and
pusha
dec
in
xchg
js
pushf
sbb
out
aad
adc
lea
or
in
test
imul
xor
fsubr
call
mov
out
push
cli
loopne
aam
lds
mov
or
pop
add
into
jp
lret
mov
in
sbbb
cmp
or
das
sbb
add
pop
push
sbb
gs
push
ljmp
stos
out
add
jle,pn
inc
ret
sti
mov
push
jg
jge
add
cwtl
mov
cli
push
loope
mov
rcrl
xchg
ret
loopne
test
js
icebp
movsb
loope
xchg
inc
ss
inc
test
test
inc
sbb
insl
or
cli
cvtps2pd
shrb
mov
test
or
mov
mov
cs
imulb
mov
orl
nop
add
jno
and
std
outsb
dec
loopne
in
test
popa
rorl
les
loope
mov
aas
jle
stos
xchg
mov
sbb
xlat
lea
xor
push
xlat
mov
in
or
pop
popf
jle
outsl
jno
dec
or
aam
adc
add
popa
fdivs
loop
sub
dec
pushf
or
xchg
push
push
lret
xor
orb
inc
push
push
add
cmp
incb
clc
add
push
sub
lret
mov
push
push
loop
dec
ret
and
add
and
jg
cwtl
and
sbb
cmpsb
add
dec
or
cmp
sbb
hlt
sub
push
mov
pop
sub
pusha
sbb
add
xor
out
or
fucomp
inc
lcall
cld
cld
inc
xor
fsubrs
mov
mov
fwait
xor
pop
in
leave
add
push
sub
push
sbbb
mov
adc
test
cmp
jno
jecxz
mov
lods
pop
sub
repz
dec
adc
push
fcmovb
jecxz
or
push
test
mov
xor
aaa
adc
sarb
mov
add
stos
sub
cs
pop
jmp
mov
jo
inc
jo
in
jg
push
and
mov
gs
inc
insb
rol
sub
inc
sub
loop
add
ja
sbb
divb
popa
add
repnz
or
lock
idivb
mov
sub
lods
inc
dec
and
mov
adc
mov
jge
mov
mov
sub
and
repnz
rcl
in
flds
in
inc
loope
test
push
scas
sub
icebp
pop
fcmovbe
inc
jae
insb
lock
xchg
push
inc
popf
rorb
mov
mov
inc
imul
test
sub
jne
xor
loopne
inc
pop
pop
push
xchg
cli
aad
sar
or
andl
cmp
test
sbb
sub
scas
xor
or
lret
mov
outsb
sbb
loopne
xchg
cli
mov
push
cli
bound
repz
adc
popf
sbb
add
ret
mov
enter
sbb
mov
add
sarl
hlt
das
mov
mov
int
sub
frstor
add
das
push
cld
xchg
andb
pushf
or
jnp
fs
sub
sbb
add
popf
hlt
xchg
cs
or
js
jp
nop
bound
mov
aad
in
std
fsub
pop
clc
sbb
mov
fcomip
scas
mov
jae
jno
scas
cmp
and
hlt
filds
inc
mov
or
ret
pop
add
add
test
add
xchg
jg
push
jmp
cmp
jbe
pop
adc
movsb
push
dec
dec
nop
bound
xchg
pop
mov
mov
ret
mov
sbb
cld
mov
pop
or
sahf
inc
mov
sub
addr16
out
or
mov
fld
popl
iret
or
test
aas
aad
ret
jo
icebp
pop
sbb
pop
inc
add
cmp
pop
cmpsl
lods
ja
movsb
cmp
pop
addl
movsb
mov
add
bsf
xlat
fwait
sbb
sbb
jno
dec
inc
mov
das
imul
and
fcomps
fisubl
inc
lret
dec
fldcw
mov
jmp
mov
jle
push
pop
jno
inc
dec
hlt
dec
add
jl
jnp
ss
xchg
ds
add
cmc
paddd
es
inc
cmp
bound
adc
or
sarl
mov
rcll
je
dec
inc
dec
pop
loopne
sarl
insl
adc
xor
or
pop
xchg
hlt
pop
pop
and
xor
adc
filds
mov
push
loope
dec
mov
sbb
dec
mov
shl
decl
decb
enter
mov
and
sbb
or
leave
outsl
jg
jae
cwtl
push
inc
js
lea
xor
pop
insb
jle
mov
inc
sbb
mov
add
cmpb
rorl
mov
rcrb
loop
pusha
in
cld
or
je
test
add
lret
xchg
mov
adc
stos
sahf
vmovlps
sbb
dec
cli
xchg
adc
in
add
fs
test
xchg
pop
rcr
sarb
push
movups
dec
push
add
sub
pop
and
ja
or
punpckhbw
shr
or
test
inc
scas
mov
or
add
pop
dec
or
add
mov
hlt
loope
mov
push
hlt
and
sbb
mul
push
nop
pop
sub
cmpsl
aam
xchg
call
stos
and
adc
jge
inc
sahf
cmc
rorl
sarl
pop
das
mov
add
pop
inc
in
cld
fcomi
push
cmp
jecxz
sub
sbb
movsb
fsubr
aas
jmp
imul
add
sub
adc
lahf
sbb
out
movsl
cwtl
xor
xchg
xor
jae
xor
jle
repnz
mov
sahf
sbb
mov
rol
fidivs
xlat
fdivs
mov
push
ficomps
add
cli
aas
movsl
dec
je
dec
mov
nop
push
test
lds
mov
and
add
stc
into
lcall
lods
mov
bound
mov
clc
cmpsl
add
addb
inc
mov
mov
inc
and
subb
addr16
or
sbb
xchg
xchg
inc
leave
pop
clc
xchg
outsl
pop
jecxz
and
aam
push
adc
push
imul
add
sub
or
outsl
ret
or
cmp
punpckhdq
jecxz
jl
sbb
fldt
mov
mov
sbbb
pop
outsl
push
ffree
xchg
ret
out
xor
faddl
cmp
aad
ds
sbb
adc
pop
pop
xor
push
icebp
ds
adc
loopne
xchg
xchg
les
addl
push
mov
sbb
popa
lods
mov
xchg
jp
cs
xor
xchg
int3
mov
dec
cs
push
pop
stc
cmp
push
fmull
mov
or
or
cltd
sub
mov
mov
nop
lcall
jnp
xchg
jge
je
mov
movsl
fwait
je
sbb
add
in
nop
pop
movsb
fadds
jg
and
cmpsb
mov
test
mov
sub
pusha
push
or
fwait
movl
cmp
in
or
adc
add
jge
push
pop
push
sub
xchg
pop
inc
dec
enter
imul
xchg
pop
mov
lcall
arpl
push
inc
pushl
xor
jecxz
ja
sbb
clc
xchg
inc
push
stos
repz
imul
cmp
in
mov
cli
mov
scas
push
or
cmpsb
pop
das
js
push
pop
inc
iret
and
arpl
push
daa
mov
dec
jb
jmp
jp
lods
out
cld
push
js
mov
lea
ljmp
dec
rolw
jns
jne
mov
adc
std
inc
pop
add
lods
cmp
cld
or
sti
sbb
mov
pop
dec
sbbb
mov
lahf
jle
inc
fldt
cmp
push
or
push
xchg
cmc
push
test
and
idivb
ss
add
orl
hlt
or
cwtl
jp
sbb
cmp
iret
ss
inc
lahf
ret
pop
jb
cmp
mov
sub
das
mov
sbb
ja
adc
int3
insl
lret
movsl
cltd
mov
push
dec
sub
clc
pop
popa
out
popa
es
sub
sub
pop
adc
cmp
xchg
pop
jo
jmp
rcl
loop
mov
sbb
ss
mov
mov
xchg
cmp
mov
daa
sarl
sbb
dec
inc
fildl
shrb
int
ficompl
xchg
cltd
cmp
fisubl
das
lret
jns
popf
lock
xor
xchg
testb
inc
xor
mov
mov
xchg
mov
aas
aam
mov
mov
or
or
adc
shll
xchg
mov
loopne
pushf
cld
stc
adc
cmpsb
push
scas
test
cli
aam
sbb
mov
mov
or
add
lods
cltd
push
jbe
mov
add
incb
add
es
add
mov
cmp
ljmp
add
fnstenv
pop
dec
xor
pop
or
cmp
test
sub
push
and
cmp
pop
pop
cmp
dec
test
xchg
pop
inc
sti
or
icebp
test
and
jg
or
and
sub
addl
mov
enter
and
subb
notl
push
xchg
or
shl
adc
les
cmp
je
js
cmpsl
insb
jo
gs
or
movsl
pop
adc
scas
or
lret
out
jnp
jp
fcom
cld
pop
xor
xchg
mov
xorl
sub
adc
push
call
les
inc
and
popf
test
push
sbb
cmpsb
jg
inc
jle
sbb
lods
fisubl
inc
push
inc
cmc
pop
xor
aam
and
testl
test
xor
dec
stos
popa
mov
dec
je
mov
nop
cltd
fcmovb
mov
and
aaa
mov
leave
icebp
es
cmp
testl
jo
lahf
scas
xchg
dec
repnz
cmp
or
mov
mov
and
dec
dec
pavgw
push
test
xor
cli
stc
xlat
xchg
inc
enter
xchg
fiaddl
ret
outsb
int3
cmc
pop
adc
icebp
xchg
leave
bound
xchg
lret
in
inc
inc
cmc
mov
sahf
jge
clc
add
or
and
ret
aas
jle
fxam
rcl
pushf
lods
ljmp
sub
divb
ds
jge
add
cmc
or
ljmp
gs
cmp
std
ss
inc
out
dec
jl
jg
or
test
jmp
cmpb
mov
fldl
pushf
loopne
push
loopne
or
xchg
xor
je
ficoms
mov
sbb
out
pushf
js
xchg
sahf
dec
outsb
inc
sub
adc
push
and
jno
xchg
push
hlt
ljmp
mov
adc
push
or
test
into
fstl
add
outsl
adcl
test
fsubr
test
xchg
addl
test
lods
and
popf
cld
push
lcall
pushf
push
xor
adc
cltd
jge
xor
inc
data16
add
pop
mov
mov
push
push
mov
add
sub
shlb
lret
push
sub
into
pop
inc
push
mov
mov
cmpsl
test
mov
sti
pop
push
js
notl
adc
jecxz
pusha
roll
movsl
daa
outsl
popl
sbb
mov
inc
loop
add
std
adc
sahf
nop
sarl
dec
test
enter
mov
or
push
lock
jo
jbe
fcoms
pushf
data16
push
lds
add
in
push
sbb
cmp
add
jl
movb
add
xlat
push
sbb
enter
lahf
loopne
stc
inc
mov
stos
sbb
call
inc
cmp
push
cmp
ret
push
push
or
pop
pop
jge
mov
loope
cmp
imul
dec
xor
mov
push
push
iret
fwait
int3
dec
gs
cwtl
sti
add
dec
adc
push
lea
clc
ret
out
push
das
stos
or
push
push
and
add
sbbb
mov
cmp
movsb
push
or
loopne
jmp
lock
lret
aad
push
mov
jno
rol
push
test
out
hlt
sbb
sbb
add
clc
lock
or
push
xchg
push
pop
ret
lock
fbstp
js
mov
es
jno
xor
push
add
cmp
lahf
sub
movsb
xadd
lret
pop
mov
sub
imul
ds
inc
adc
adc
out
stc
inc
pop
sub
mov
pop
ficompl
lret
lea
test
sbb
pop
mov
mov
mov
and
cli
hlt
stos
and
mov
or
inc
pop
pushf
push
add
push
add
js
cmp
fistpl
andb
dec
jo
jp
sbb
and
cmp
cltd
add
fdiv
mov
jb
mov
daa
subb
xchg
sub
in
push
lds
or
rcl
push
jmp
aas
fs
mov
push
mov
aaa
ror
xor
jno
subl
cwtl
and
add
sbbl
gs
jb
xchg
cmp
adc
test
lods
adc
movsb
push
add
or
je
test
outsb
hlt
mov
or
jb
inc
push
bound
mov
popa
mov
movsl
and
loope
mov
fiaddl
dec
mov
scas
sub
adc
ret
pop
inc
out
fisubl
lea
filds
pop
lods
stos
lret
push
mov
shlb
popa
mov
sbb
mov
mov
clc
mov
sbb
sbb
or
pop
data16
test
fwait
test
test
movsl
adc
sahf
xchg
js
popf
inc
jg
mov
addl
icebp
ret
add
shrb
repnz
cwtl
mov
mov
stc
icebp
mov
arpl
testl
std
xchg
int3
out
stos
sub
sbb
adc
adc
sbb
adc
loop
and
or
aam
push
or
and
mov
pusha
push
push
fdiv
mov
push
sbb
pusha
adc
loopne
sub
inc
outsb
icebp
adc
dec
and
jmp
jp
out
clc
in
dec
sbb
shld
cld
insb
out
xchg
fbld
bound
outsl
fwait
outsb
push
xchg
hlt
add
mov
faddl
lahf
push
pop
aaa
cmp
fimull
cmp
sub
sub
hlt
call
pop
xchg
rorb
xchg
out
mov
mov
push
jle
gs
rorl
push
push
cmp
popa
dec
jnp
sub
movsl
gs
je
push
pop
les
mov
sbb
adc
dec
imul
lods
nop
and
dec
mov
ret
and
adcl
add
addr16
xchg
push
and
jle
mov
test
cmp
or
hlt
pop
call
inc
or
shlb
jne
out
push
pop
cld
cmp
aaa
cwtl
sub
movsl
jg
cwtl
mov
in
mov
sbb
push
push
fucomp
cmp
shrl
scas
mov
sbbb
and
gs
xchg
or
pusha
inc
sbb
das
lods
xchg
insl
mov
pmulhw
inc
in
cmp
inc
lods
addr16
mov
xchg
xor
push
ljmp
sbb
sti
jbe
or
inc
arpl
push
pop
inc
cld
repnz
jecxz
mov
mov
fmull
mov
enter
es
fnstcw
mov
push
adc
mov
or
xchg
lret
adc
mov
cwtl
push
inc
fnstenv
add
mov
mov
dec
push
sub
add
shll
pop
rcl
das
push
push
lahf
push
mov
scas
loope
mov
cwtl
or
mov
dec
addr16
jmp
push
or
hlt
stos
pop
sub
sbb
pushf
jl
es
aas
pop
aad
push
add
loope
xchg
cmc
pop
iret
add
xlat
jno
movsb
jne
and
xor
dec
mov
lahf
cmp
or
push
stos
adc
mov
out
out
not
dec
std
mov
cmpb
pop
mov
shll
andb
mov
sti
pop
mov
pop
in
shlb
mov
sub
in
cli
jge
addb
stos
mov
call
or
scas
pop
repnz
dec
jge
stc
hlt
je
jbe
dec
stos
push
sbb
add
mov
inc
stos
or
mov
dec
sbb
add
xchg
rcrl
subb
or
test
pop
sub
cmpsl
jmp
sbb
ficoms
adc
sbb
mov
sbb
jmp
sbb
rorl
pop
jmp
cld
sbb
addr16
pop
addr16
adc
icebp
dec
inc
add
jle
ja
and
jo
jo
out
mov
in
pushf
add
pop
dec
popa
cmp
adc
sbb
add
xor
lds
cmpsl
sti
inc
movntps
sbb
jno
lret
mov
sti
sub
mov
pop
add
mov
lea
ret
fisttpll
jb
andl
sub
cmp
pop
scas
mov
mov
mov
aaa
mov
loope
rcl
pop
and
addl
rorl
repnz
add
adc
lods
mov
and
daa
sti
sti
stos
adc
movsl
fwait
sub
jmp
push
mov
jmp
cmp
ljmp
fdivrs
sbbb
cs
aas
mov
loope
and
enter
icebp
jbe
jp
insl
xor
adc
clc
pop
xor
cmp
mov
xchg
das
sub
orl
lods
xchg
jbe
and
into
lods
pop
xor
not
fisubl
mov
sub
imul
outsb
sbb
jge
mov
fldenv
add
clc
xchg
pop
rorl
mov
inc
roll
and
int3
or
push
imul
pop
fwait
mov
out
inc
repz
paddw
mov
outsb
mov
xchg
sub
addl
ss
dec
and
jmp
shlb
int
jg
xor
nopl
lods
add
out
pop
and
jl
add
nop
arpl
pop
pop
add
cli
pop
pop
mov
sub
push
mov
pop
orb
pop
in
sbb
fiadds
lret
inc
pop
dec
xchg
inc
adc
imul
xor
mov
scas
xlat
inc
push
dec
add
pop
push
or
lods
add
push
or
repnz
mov
imul
sub
popa
pop
imulb
xchg
fidivs
enter
xor
mov
arpl
push
in
cmpsl
pop
clc
data16
js
xchg
jge
and
adc
cmp
inc
jno
cli
push
sub
inc
jge
mov
icebp
jo
mov
mov
mov
mov
insl
add
add
jle
outsl
mov
cwtl
or
add
pushf
and
push
mov
dec
aas
lcall
jno
xchg
roll
dec
or
adc
xor
ret
arpl
dec
cmp
adc
cmpsl
pop
add
xchg
cli
ret
ret
mov
xchg
xorl
fiadds
iret
addr16
ror
mov
xchg
icebp
mov
mov
mov
lcall
jge
mov
xor
imul
sarl
pop
pop
je
addl
and
ret
jle
insb
testb
or
dec
sub
andb
jmp
inc
pop
sub
rcrb
inc
fisttpll
sub
pop
shl
inc
pop
stc
aaa
pop
pop
pop
in
inc
cmp
inc
insl
cmp
xchg
jno
clc
xor
fidivs
in
xchg
loopne
and
or
cmp
mov
inc
add
sbb
in
cwtl
movsl
movsl
or
inc
or
hlt
fwait
rol
mov
test
adc
out
or
popa
outsl
sbb
add
insb
and
lahf
push
pop
sbb
jno
idivb
popf
jge
pop
addl
dec
fwait
push
sub
xchg
rorl
daa
and
cmpsl
lea
pop
fcmovu
xor
dec
fstpl
push
sbb
leave
mov
add
push
add
sbbb
pop
out
dec
outsl
loope
sbb
fists
sub
fs
cld
mov
jno
pop
clc
adc
jmp
jo
xchg
in
cltd
sbb
mov
aaa
mov
or
add
lret
frstor
rcr
jnp
in
dec
mov
loop
jb
loope
sbb
dec
leave
test
mov
push
and
or
add
pop
and
pop
xor
je
cmp
sarb
dec
cmp
pop
nop
inc
mov
xlat
xor
flds
pop
mov
sub
pop
jo
out
cli
xchg
jge
pushl
jg
mov
sub
pop
aam
ja
add
jae
rcrl
in
movsb
fsubs
pop
test
adc
push
push
mov
in
xchg
pop
std
cltd
adc
inc
sbbl
push
mov
adc
sub
mov
cmc
das
mov
ljmp
add
dec
test
inc
push
add
inc
dec
cmp
out
es
nop
repz
xchg
call
aad
jns
inc
mov
loope
push
jecxz
out
dec
pop
popa
pop
jp
int
sub
movsl
sub
insb
mov
or
cmp
jmp
aaa
push
pop
loopne
pop
pop
test
push
loop
dec
in
adc
sbb
sbbl
add
lret
imul
mov
rorb
push
mov
lahf
addb
jae
xor
adc
sti
sbb
push
pop
cs
mov
lock
jl
mov
jo
mov
adc
push
pop
inc
xorps
fists
enter
aas
shlb
jmp
aam
sbb
ja
sub
mov
data16
adc
adc
push
and
lock
cmpsl
outsl
sub
jl
cmpsl
push
or
cmp
je
movsl
add
fsubrs
mov
push
pop
fwait
jne
dec
push
ror
and
in
inc
std
push
xor
dec
fnstenv
mov
xchg
or
or
clc
movsl
pop
inc
jno
or
push
push
and
jnp
shrb
jns
jae
inc
sub
loope
or
ss
div
jb
adc
pop
stos
arpl
sbb
mov
or
xchg
dec
or
mov
jne
addr16
ret
fsubs
movsb
push
iret
lahf
int3
call
push
xchg
repz
pusha
jecxz
and
sti
cmp
mov
pop
push
mov
jg
mov
test
inc
test
mov
mov
rcl
cmp
aaa
or
bnd
pop
adc
in
jle
cmp
cmp
dec
lcall
out
mov
pop
push
cmp
pop
mov
pop
xchg
mov
xor
imul
stc
jno
call
jbe
lods
jge
jl
and
jge
push
xchg
sbb
push
adc
andl
jecxz
lcall
cmpsb
dec
jne
push
mov
in
movsl
or
movsl
inc
or
imul
in
ss
pop
sub
cmpsl
adc
adc
gs
stc
adc
ret
adc
aaa
push
and
push
mov
ret
dec
xchg
pushf
jecxz
insl
inc
pop
push
popa
pop
shrl
xchg
pop
dec
cmp
cmp
jnp
andb
lods
idivb
mov
inc
or
lahf
push
cmp
ja
stos
mov
out
ss
pop
sbb
jmp
bound
es
push
sub
push
cmp
shlb
sahf
pop
lds
jno
cmp
push
in
sar
mov
inc
pop
xor
lods
add
add
jmp
mov
adc
out
jl
pop
push
stos
in
jge
sbb
xor
adc
pop
adc
roll
pusha
sub
aam
in
dec
mov
pop
xchg
cmc
mov
out
push
mov
mov
or
sbb
sub
jmp
cmp
ret
das
inc
add
ss
and
test
mov
or
or
pop
mov
ret
jo
push
call
lock
lret
js
movb
adc
sub
mov
adc
add
sbb
xor
ficoml
adc
sarl
mov
loope
pop
cmp
xor
xor
ret
xchg
pushf
cmp
lock
nop
mov
clc
shl
xor
inc
adcb
mov
lahf
add
jecxz
rolb
popa
push
and
mov
xchg
xorl
mov
fists
or
xor
push
es
pop
pop
outsb
adc
push
sti
sub
imul
popa
sub
out
add
cmp
xor
sbb
xchg
inc
inc
xor
loope
dec
stos
jo
inc
pmovmskb
sub
dec
push
jne
inc
icebp
mov
sbb
jmp
mov
pop
aaa
or
mov
aas
inc
dec
or
adc
jle
inc
hlt
mov
mov
inc
test
cmpsb
sbb
cmpb
adc
adc
sbb
adc
js
sbb
insl
insl
jp
pushf
fildl
push
daa
sub
mov
lds
lods
pop
aad
adc
andl
lret
aam
inc
mov
add
ret
inc
psubsw
pop
mov
fcomip
nop
jg
jmp
xor
sub
data16
sbbb
mov
xchg
stc
sub
xchg
jns
mov
cmc
xchg
mov
add
mov
xchg
push
arpl
rcll
or
inc
pop
clc
fs
pop
pop
mov
test
mov
xlat
ret
dec
ja
sbb
icebp
or
pushf
cltd
push
in
movsb
jg
repz
aad
jg
jl
or
test
mov
jl
cmp
mov
int
mov
rclb
mull
sbb
test
sahf
sub
sbb
jl
xchg
mov
icebp
inc
bsf
sub
inc
fnstenv
cltd
and
inc
sbb
jle
ret
hlt
and
mov
or
cmp
adc
repz
xchg
rclb
cli
dec
repz
pop
scas
sti
stos
push
clc
push
fsubrl
xor
pop
cmp
mov
lock
push
fstps
aam
jle
cmp
pushf
jno
sub
pop
dec
enter
adc
and
add
call
push
daa
mov
mov
jle
lfs
add
or
and
fdiv
and
out
push
xor
cwtl
or
pop
jge
xor
pop
nop
jnp
dec
cmp
dec
inc
lock
std
jnp,pn
sub
test
mov
mov
adc
mov
xchg
cmc
cmp
or
inc
mov
jmp
or
push
inc
jg
add
push
pop
inc
jnp
jge
aaa
pop
lea
incb
mov
std
cs
xchg
xchg
and
roll
sbb
leave
lret
lret
cmp
mov
fnsave
jb
sbb
std
cmp
jl
or
inc
iret
cmp
std
or
xchg
or
and
clc
push
xor
fs
xchg
lcall
je
mov
pmovmskb
mov
or
lock
inc
xor
nop
dec
add
xlat
in
movl
adc
negb
xchg
cli
in
add
push
xchg
rol
pop
sub
jl
test
into
movsb
adc
iret
jp
cmp
xchg
loop
mov
and
mov
jp
xchg
push
xor
cmp
das
dec
in
mov
adc
mov
leave
jae
imul
repz
jae
icebp
adc
pop
aas
xchg
cmp
mov
ljmp
mov
pop
nop
inc
xchg
mov
adc
out
test
add
nopl
ds
data16
add
orl
pushl
inc
dec
push
insl
sub
push
mov
pop
popa
sbb
stos
push
repz
ret
mov
gs
jo
pop
popa
jns
or
test
or
sub
rclb
mov
sub
iret
sub
sub
testl
loopne
dec
pushl
and
dec
andl
lods
push
pop
sub
xchg
sbb
insl
adc
or
fmuls
sub
mov
fld
inc
insl
loopne
or
fldl
nop
outsl
xor
push
inc
fidivl
jecxz
sbb
fstpl
cmp
jecxz
mov
mov
mov
cwtl
out
hlt
pop
leave
cmp
cmp
sub
stos
shrb
scas
popa
aam
data16
cld
sub
jmp
lahf
push
or
cmpsb
dec
fistps
call
pop
mov
mov
faddl
add
sbb
pop
incb
xchg
push
mov
jge
popf
lods
adc
mov
ja
rclb
rcrl
imul
lahf
test
subb
mov
mov
test
popa
pop
dec
lea
add
cltd
lret
faddl
xor
int
ret
adc
pop
or
push
push
mov
add
or
add
sbb
popa
andb
loop
sti
cmp
loop
xchg
add
leave
fmul
pop
addl
pop
cmp
hlt
xor
push
push
dec
mov
enter
push
mov
xorl
adc
incl
inc
loope
push
mov
pop
mov
rorb
mov
outsb
ja
or
cwtl
leave
stc
add
jmp
mov
repz
mov
adc
mov
mov
add
test
jno
dec
repnz
or
mov
je
sbb
lcall
test
stos
mov
insl
jl
les
ret
mov
scas
xchg
clc
mov
lcall
push
jge
xchg
and
cmp
cmp
jo
add
dec
sar
inc
lea
add
lods
pop
stos
jo
fsts
fisttps
push
rcl
cltd
popf
fcmovnbe
sbb
cwtl
jo
dec
sti
sub
lock
test
mov
loope
adc
jg
repz
xchg
mov
std
xchg
or
push
push
cmc
in
fists
aad
adc
sbb
pop
or
mov
cld
sub
icebp
loop
xchg
adc
and
adc
cmc
les
jp
js
sub
movsb
clc
ficoml
push
dec
enter
test
dec
sub
imul
sbb
repz
stos
pushf
adc
ja
adc
xor
mov
cmpsb
fnstcw
sub
fbstp
pop
push
mov
push
fiaddl
jle
lods
je
data16
push
dec
arpl
xor
loopne
and
cmp
or
add
in
inc
hlt
les
cmpl
rcr
adc
inc
and
sbb
pop
popf
xchg
in
mov
mov
test
fcoms
and
clc
out
jne
xchg
jb
inc
pop
adc
mov
push
pop
add
fwait
pop
xlat
adc
sbbl
loop
lahf
jb
fs
mov
sbb
xor
push
mov
out
loopne
dec
lahf
jo
nop
ret
cs
cmp
cltd
imul
mov
push
push
cld
mov
mov
leave
sahf
jns
test
add
cld
loopne
pop
sbb
mov
lock
out
and
mov
inc
xor
cld
mov
fxtract
lret
movsb
fbld
int
xor
push
js
cmc
add
jmp
jmp
outsb
jp
cmp
ja
push
pushaw
dec
clc
pop
clc
inc
cmp
ret
out
int
push
dec
movsl
cmpl
outsl
movsb
inc
push
xor
sahf
push
imul
xor
outsl
loope,pn
mov
mov
fisubs
pop
pop
sub
mov
add
scas
hlt
inc
or
push
or
sbb
aas
jb
inc
mov
inc
push
jne
daa
pop
mov
pop
int3
add
sar
adc
lret
outsl
rclb
sahf
mov
insl
out
xchg
cwtl
push
fdivrs
sub
fstl
sub
lods
xor
cmp
add
fmull
mov
jo
mov
ljmp
jbe
cmp
js
pusha
inc
mov
hlt
cmp
add
mov
fadd
bound
push
pop
mov
push
sarb
push
test
addr16
mov
pop
cmpsl
xchg
subl
pop
arpl
xlat
add
add
cwtl
push
lcall
xchg
push
sbb
loopne
roll
dec
andb
shl
jbe
sbbl
dec
sbb
sti
fnstsw
cmpl
leave
push
pop
out
test
sub
push
jl,pt
out
in
lahf
inc
mov
mov
mov
sbbb
aam
push
out
into
mov
inc
scas
adc
js
imul
cmp
add
gs
dec
pop
imul
push
mov
mov
sub
sar
pop
jl
test
les
jo
ds
daa
hlt
push
inc
pop
xorb
jp
push
inc
push
adc
xor
xlat
test
jp
cld
adc
dec
sarl
jecxz
clc
inc
xchg
fiadds
cmc
adc
iret
add
or
insb
lahf
mov
dec
xor
mov
call
lcall
test
cmpsl
push
push
and
cmp
sub
movsl
or
mov
rclb
inc
aam
filds
ret
xchg
adc
mov
adc
fdivr
jo
xorb
lods
fnsave
loopne
rcll
mov
lcall
rclb
mov
cmpsb
outsb
xor
icebp
cld
push
clc
dec
pop
pop
xor
das
xchg
fs
mov
lods
push
jp
sbb
jmp
mov
adcb
cmp
leave
push
xchg
and
adc
push
pop
pop
mov
mov
add
lahf
cs
fbld
imul
mov
hlt
xlat
xchg
sub
notb
fadd
cmpsb
mov
sbbl
add
nop
rolb
push
pop
out
sahf
sahf
out
jecxz
jle
inc
sbb
push
pop
adc
mov
dec
inc
push
pop
ds
repnz
or
into
fmull
cmp
test
and
push
pop
add
rcrb
adc
inc
add
mov
add
pop
xchg
movd
cltd
push
mov
loope
mov
inc
cmp
inc
push
fcomps
jo
adc
lds
xchg
mov
add
repnz
mov
movb
leave
push
and
pushf
and
adc
scas
icebp
and
xor
adc
push
adc
rcll
addr16
sub
inc
pop
mov
xlat
js
loope
fadds
mov
mov
xchg
icebp
fbstp
das
add
mov
adcl
jg
rcl
mov
push
inc
cmpl
jmp
add
xchg
movsl
xorb
andl
aas
xlat
lods
int
outsb
or
das
pop
loop
les
fldcw
sbb
mov
cwtl
sbb
loope
fsubl
and
pop
add
je
cmp
mov
jae
int3
in
mov
push
jo
and
xchg
notl
dec
sarl
lods
pop
or
pop
inc
add
es
mov
into
add
ja
std
mov
bound
push
bound
stc
push
les
movsb
xchg
pop
cwtl
fidivs
xchg
es
test
and
and
jmp
mov
outsl
lea
loopne
push
sub
in
sti
mov
arpl
sbb
mov
icebp
js
and
loope
cmc
xor
insl
cmp
lock
sub
je
add
sbb
and
cld
xor
pop
rcrl
mov
jmp
dec
push
inc
out
cwtl
test
out
mov
adc
cmp
adc
jle
lock
aaa
mov
push
and
pushf
cli
gs
push
or
push
pushf
dec
scas
inc
inc
add
xchg
stos
mov
test
setae
pop
icebp
jp
mov
test
lock
cli
les
pushf
mov
cmpsb
stos
sbb
sbb
dec
xchg
jg
lock
push
cmp
test
cmpsl
stos
les
jmp
xor
pop
mov
shlb
fnsetpm(287
pop
test
xor
xorb
and
cmp
jge
xor
sub
sbbl
sub
mov
sub
orl
rcll
mov
in
push
and
mov
adc
mov
cs
shl
lret
das
adc
clc
sbbl
push
ret
loope
push
in
or
loop
adc
ljmp
jne
mov
mov
fisttps
std
xchg
out
cld
cli
pushf
popf
popa
adc
daa
sbb
loope
mov
mov
imul
and
lret
add
sub
pop
orl
lcall
add
and
mov
adcl
frstor
sbb
mov
mov
jo
int
icebp
hlt
test
pusha
clc
push
mov
dec
int
loopne
in
push
test
icebp
incl
in
dec
sbb
shrb
lods
jg
rcll
jns
lods
ljmp
gs
loopne
push
fsubs
jg
in
add
adc
and
xchg
push
pusha
or
mov
cmp
mov
jle
jg
or
add
jmp
sbb
sbb
mov
adc
ljmp
popa
fcomp
ficoml
xchg
scas
and
mov
inc
imul
mov
xor
cmc
cmc
push
fcomps
es
mov
addr16
int
int
mov
mov
mov
fwait
and
cmpsb
inc
test
pop
clc
fists
jl
clc
adc
and
call
andb
in
lea
mov
test
jnp
sahf
jl
roll
add
movsb
push
sbb
inc
in
rorl
clc
sub
mov
outsb
repz
in
out
es
lea
pushf
icebp
stos
xchg
cmpsl
nop
push
arpl
dec
xchg
mov
mov
sub
nop
lods
and
lods
jl
sbb
xchg
pop
xor
out
aad
in
cmp
pop
push
out
push
pop
aas
add
push
or
cwtl
jecxz
cld
mov
adc
notl
fs
adc
lahf
push
jb
clc
mov
inc
cli
sbb
leave
mov
or
roll
stos
fucomi
js
sbb
outsl
or
lahf
mov
dec
stc
pop
inc
xorb
mov
dec
or
loopne
mov
rorl
fidivrs
inc
or
push
sbb
fstpt
vmovd
sbb
rorl
lret
adc
insb
inc
add
lret
les
rolb
push
adc
cmp
mov
mov
xchg
arpl
sbb
outsl
repnz
inc
pop
adc
cmp
pop
dec
and
int
jge
stos
sub
mov
fldl
outsl
sbb
sbb
std
repz
inc
fdivl
sbb
fisttpll
jae
fistpll
dec
adc
pop
pusha
clc
mov
int3
leave
dec
xor
inc
jg
jmp
mov
cwtl
shrl
sub
lcall
push
pop
push
pop
sbb
or
ret
push
or
cmp
mov
pop
cmp
cltd
stos
out
cmp
sbb
xlat
cmp
js
pop
sub
les
jnp
jmp
push
xchg
in
dec
sub
leave
sub
mov
pop
leave
into
cli
movsb
stos
inc
sahf
pop
rcll
sbb
mov
inc
mull
jns
lahf
xor
insb
es
stc
pop
test
mov
dec
iret
push
adc
inc
jg
mov
enter
stos
aam
out
aam
test
push
shr
test
xchg
lcall
xor
push
mov
ficoms
xor
xorb
pop
hlt
dec
rcr
mov
mov
loope
jle
stc
inc
sub
mov
xchg
pop
repnz
or
dec
mov
mov
repnz
fadds
cmp
pop
and
invd
and
push
scas
rolb
dec
dec
lea
aam
and
movsl
dec
adc
dec
or
sub
lods
inc
pop
and
cmp
test
mov
test
add
jmp
add
jns
push
mov
cmp
ljmp
jge
nop
int3
jmp
jne
das
pop
and
mov
sahf
fisttpl
ja
pop
loope
jecxz
pop
orb
cmp
adc
push
mov
inc
push
call
cmp
mov
fidivrl
call
push
rclb
mov
aas
imul
pop
insb
xlat
push
pop
in
or
sbb
sbb
fisttps
lahf
out
loop
aas
xor
cld
sub
pop
jle
cli
dec
jge
cmp
pop
cld
rorl
test
dec
dec
shll
and
sbb
xchg
and
lahf
movsb
mov
mov
repz
mov
pop
xchg
lea
xor
addr16
fsubl
jne
xor
add
mov
xchg
int
xor
xchg
inc
and
jmp
push
cmp
decl
mov
jecxz
push
addl
cmc
push
mov
add
in
into
mov
test
dec
les
xchg
push
pop
call
and
dec
adc
in
or
add
loope
xor
sahf
into
add
loop
push
mov
in
jl
pop
int3
inc
or
std
ret
shrl
jle
fdiv
test
cmc
mov
adc
add
test
insb
icebp
aas
cmp
dec
sbb
rcl
lds
lods
pop
enter
inc
ret
cmp
push
mov
ljmp
mov
push
test
mov
sbb
jle
enter
adc
repz
jmp
gs
jne
mov
jmp
ret
and
fsubrl
popf
jo
xchg
mov
adc
stos
or
mov
inc
and
mov
dec
lods
scas
xchg
ficoml
es
adc
addb
jno
loop
sbb
sbb
or
lods
sahf
adcl
pop
push
sbb
inc
rcr
jns
push
ret
xor
mov
or
ret
jne
and
cwtl
testb
pop
aad
xchg
loope
cmp
fisubs
sti
add
and
mov
cmp
out
pusha
repnz
sub
xor
clc
inc
ljmp
adc
push
je
icebp
incl
icebp
jns
lret
aaa
sub
mov
sbb
jp
ljmp
jge
mull
iret
push
inc
shr
and
int
cmp
clc
pop
dec
fwait
jmp
add
add
adc
lock
push
push
inc
and
loop
dec
sbb
mov
jg
mov
ja
movsb
ja
and
dec
rcr
add
popa
adc
and
test
push
es
mov
insb
xlat
aam
adc
inc
add
loopne
bound
cmc
jg
scas
fldenv
add
loop
nop
or
cmpb
lock
adc
push
les
into
dec
add
mov
je
cmp
pop
mov
xlat
mov
cld
mov
mov
test
into
loopne
daa
adc
repz
mov
and
int
jl
cmp
sbb
imul
test
shrl
mov
pop
pushf
push
cmp
adcl
std
jbe
mov
push
mov
pusha
xchg
or
xor
or
xchg
hlt
sub
mov
mov
jb
mov
ret
inc
bndstx
mov
in
iret
cmp
push
inc
in
add
mov
cmp
sbb
sub
sbb
loope
movsb
test
pop
jnp
or
arpl
cltd
jmp
repnz
lea
mov
mov
dec
jo
adc
in
andb
adc
mov
cwtl
movsb
incl
push
mov
stos
jno
push
call
xorb
cld
sbb
inc
loopne
enter
sahf
mov
xlat
cmp
lcall
cmp
shll
mov
aaa
mov
iret
nop
mov
mov
adc
sub
call
mov
push
icebp
orps
jp
inc
lea
std
scas
mov
es
cli
bound
cwtl
in
clc
cmp
cld
cmpsb
mov
das
shl
xor
adc
ss
cmp
stos
lret
bound
outsb
jne
clc
xor
jo
add
ljmp
subl
push
add
insb
push
add
pop
loop
sub
or
arpl
cmp
xor
lcall
add
sbb
mov
rcll
or
add
mov
jae
add
jg
roll
mov
pusha
sub
adc
fucomp
js
clc
aaa
inc
mov
jmp
arpl
pop
jp
mov
repz
rclb
jle
imul
and
cmp
fiadds
add
add
add
into
or
js
cmp
mov
mov
ja
xor
add
dec
imul
sub
jmp
aam
dec
loopne
push
fisubrl
into
rcr
dec
adc
sbb
inc
pop
lock
lahf
jl
insl
pop
int
lcall
pop
cmp
sub
or
insb
inc
ds
das
scas
fbstp
jo
inc
lds
outsb
mov
add
sub
fs
add
aam
mov
je
cmp
jl
inc
loopne
jb
out
clc
gs
popa
jle
adc
scas
icebp
mov
ljmp
xor
mov
xor
add
xor
jle
lahf
aaa
loopne
push
enter
mov
pop
test
andb
and
xor
or
cmp
pop
addb
test
cltd
aaa
and
jmp
adc
and
add
jmp
ljmp
jge
jno
mov
das
adc
adc
cwtl
ds
aaa
cld
push
and
lods
sub
cwtl
sub
std
add
loope
xor
sbb
fistpl
imul
call
inc
hlt
enter
add
in
and
push
scas
dec
imul
cld
push
jecxz
inc
pop
call
mov
daa
adc
mov
push
sub
xor
insb
loopne
sbb
mov
iret
pop
sarb
mov
lods
add
inc
imul
inc
adc
aaa
repz
pop
pop
negb
or
mov
clc
sbb
loop
in
and
sbb
sbb
orl
push
or
pop
dec
fsubs
dec
cli
and
inc
je
mov
mov
mov
cld
or
loop
test
dec
ljmp
sbbb
mov
test
fwait
push
std
jecxz
jp
lret
cmpsl
ds
pushf
sub
adc
inc
jbe
dec
push
adc
lret
clc
das
mov
loope
decl
outsl
loopne
fidivrl
jl
repnz
or
jae
push
or
or
inc
or
test
xor
mov
das
add
out
jg
dec
js
lea
push
rclb
stc
mov
ret
or
addr16
arpl
mov
adc
push
mov
mov
mov
jo
mov
add
sub
es
or
inc
push
loopne
ret
sarl
dec
xchg
cld
mov
push
jae
sbb
lods
xor
es
inc
js
and
add
add
push
nop
dec
push
adc
mov
mov
xlat
mov
in
pop
out
and
inc
sub
jne
test
cmpsb
sub
cld
in
push
aam
std
lahf
jge
mov
sbb
inc
add
or
or
inc
mov
fdiv
aam
jns
xorl
enter
xor
sbb
lret
out
mov
mov
inc
jg
push
jp
adc
xlat
xor
icebp
and
leave
mov
outsl
aas
adc
dec
cmpsb
out
inc
push
xchg
jae
pop
arpl
push
cmpl
or
call
sbb
adc
stos
xor
ja
jo
jb,pt
stos
adc
in
loop
add
enter
and
mov
andb
add
or
add
cltd
add
insl
imul
ror
cmc
aas
push
push
loopne
lea
add
and
clc
cmpsl
nop
test
lods
xchg
add
icebp
jg
dec
mov
or
cwtl
or
das
pop
cmp
add
pop
roll
mov
mov
push
or
and
stos
repnz
loope
dec
sbb
mov
test
in
aam
mov
push
pop
sbb
cmp
or
adc
push
loopne
fwait
xchg
or
stc
mov
scas
aaa
adc
inc
mov
subb
sbb
mov
iret
adc
hlt
dec
jno
data16
leave
nop
in
mov
ret
add
xchg
push
adc
adc
daa
cld
mov
jge
insb
push
pushf
jmp
enter
das
mov
mov
roll
mov
dec
mov
pusha
roll
loopne
adc
sub
fcoml
int3
shll
idivb
mov
mov
xchg
mov
cs
mov
sub
mov
jbe
ja
mov
dec
sti
fs
add
repz
pop
jle
cld
or
inc
mov
ds
pusha
cs
jg
addr16
xchg
dec
xor
ss
ds
pusha
sbb
push
mov
imul
adc
enter
add
dec
adc
fucom
and
pop
and
pop
in
mov
add
adc
add
lahf
mov
js
mov
mov
fstpl
pusha
xchg
and
bnd
jg
mov
xor
and
xor
and
outsl
dec
test
mov
fildll
jl
out
and
in
in
add
or
xchg
mov
test
les
inc
cmp
out
push
int
jg
push
iret
xchg
sbb
movsb
push
sbb
aaa
cltd
jo
adc
cmpsb
dec
and
inc
sbb
xchg
loope
call
or
stc
js
out
test
gs
xchg
mov
push
adcb
jle
sbb
sarb
test
xchg
jo
pop
and
idiv
push
mov
sbb
fiaddl
cmp
add
or
pushf
mov
pusha
jmp
or
jmp
shr
adc
sbb
jmp
in
out
outsl
and
xchg
jno
adc
lds
mov
les
and
sub
es
inc
aad
int3
out
ret
jg
fdivr
push
adc
rcll
push
lcall
adc
add
xor
xchg
bound
or
and
inc
jecxz
xchg
adc
adc
loop
clc
cmp
or
pop
lea
aam
repnz
push
cmp
lock
call
xchg
in
inc
mov
mov
popf
mov
add
push
push
push
cmp
inc
dec
cmp
mov
mov
fdivrp
das
or
loopne
div
enter
add
mov
int
sub
cmp
push
dec
cmpsl
popa
mov
mov
and
ret
in
addb
subl
jno
and
mov
popf
jmp
cmp
cli
fcomps
fmuls
or
mov
clc
push
inc
adc
xor
lcall
push
xchg
mov
jbe
jecxz
push
dec
lahf
outsl
pop
push
mov
mov
dec
sbb
pop
stc
lahf
lock
jle
xchg
shlb
pop
fldcw
mov
ja
inc
lret
pop
cld
andl
lahf
inc
pusha
jmp
push
mov
xchg
and
repz
cwtl
shlb
xor
test
cwtl
test
mov
cmpl
int3
out
push
cli
jnp
pop
jno
xor
into
push
fwait
jmp
in
xor
xlat
mov
testl
or
add
divl
movsb
dec
jl
test
push
mov
add
dec
mov
hlt
dec
add
inc
mov
repz
inc
xchg
mov
push
cmp
shl
mov
nopl
bound
jecxz
aam
push
push
pop
dec
sub
cmp
mov
mov
push
adc
pusha
lret
push
inc
sub
daa
cmp
mov
stos
add
sbb
fldl
sbb
je
mov
and
or
lds
add
adc
mov
xchg
xor
popf
jmp
sub
pop
scas
fwait
call
out
pop
imul
int
fdivp
psraw
call
add
in
sbb
xchg
scas
clc
pop
imul
xor
cs
adc
cmpsb
mov
loop
cmpsb
inc
jle
sbb
mov
lret
or
jp
jne
frstor
add
sbbl
inc
out
pop
movsb
ret
sti
inc
inc
clc
cmp
imul
push
mov
mov
leave
or
pop
and
out
adc
lds
lds
stos
mov
push
lcall
and
fdivs
xor
xchg
lock
testl
pop
mov
rolb
scas
hlt
mov
sub
sub
out
cwtl
shll
pop
cmpsb
lcall
fdivrs
jno
pusha
nop
sbb
or
sahf
adc
test
mov
push
je
cs
jmp
and
neg
push
nop
decb
out
push
mov
lsl
loope
fmuls
adc
jl
adc
mov
je
adc
std
mov
pusha
mov
jle
gs
lods
rcll
ja
pusha
and
subl
das
bound
and
aas
adc
mov
fcoml
stc
mov
add
enter
movsb
inc
xor
inc
fildl
test
lea
inc
loop
sub
and
stc
leave
sub
jmp
dec
into
add
cmpsb
test
lock
jg
es
jnp
jl
hlt
mov
dec
aad
and
pop
mov
add
ret
outsb
xchg
iret
imul
cmp
jg
and
mov
lret
or
jecxz
cmp
fistl
push
cwtl
rclb
cli
add
fs
loop
pop
sbb
jg
and
loop
or
fildll
gs
or
jb
add
add
lcall
and
test
fucom
xchg
or
push
inc
stos
fsubp
dec
fidivl
lahf
xchg
in
sbb
mov
out
cmpsl
push
add
dec
in
into
cmovl
int
and
andl
stos
and
push
js
push
or
xchg
fisubrl
js
pop
mov
ret
dec
inc
ljmp
cltd
mov
sub
pop
add
jns
adc
es
lahf
jmp
adc
enter
xchg
testb
loopne
push
mov
jecxz
and
pop
scas
outsl
subb
jns
ss
popf
lahf
bound
rcrl
dec
add
mov
clc
popf
xchg
pop
test
hlt
cmp
pusha
pop
and
stos
or
adc
cld
push
rol
pop
sbb
das
mov
adc
add
cmpb
push
pop
pop
and
fs
decl
je
dec
and
and
push
pushf
mov
dec
dec
pushf
pop
push
push
adc
movsl
mov
mov
xchg
jg
into
mov
and
cld
fcoms
pushl
mov
stos
jmp
adc
mov
pop
pop
dec
loopne
insb
adc
jne
mov
adc
mov
mov
test
ljmp
pusha
and
dec
dec
data16
push
test
cli
mov
cmpsl
jg
ret
jp
or
xor
dec
add
push
jnp
iret
xor
in
test
push
mov
xchg
mov
sub
xchg
imul
push
insb
pop
mov
mov
and
add
xchg
xchg
lcall
js
in
jp
inc
aaa
cmc
jmp
jne
jg
shl
push
xchg
arpl
movsb
or
rcr
adc
aad
pop
frstor
iret
shrb
mov
xchg
rcrb
cmp
sbb
or
mov
dec
jge
in
imul
add
sub
sbb
les
cmp
mov
add
in
add
pop
mov
xlat
les
and
aaa
mov
xor
lods
jo
pop
test
enter
punpcklwd
sbb
sub
cmc
pusha
inc
loop
mov
push
mov
icebp
xor
pop
pop
in
xchg
adc
push
jbe,pn
jecxz
push
aaa
in
in
jo
into
mov
imul
dec
mov
inc
rorb
or
dec
mov
mov
loope
rcrl
fiadds
push
nop
pop
and
or
es
adc
in
add
cwtl
fwait
push
dec
les
incb
xor
clc
xor
pop
jmp
xor
inc
jl
inc
mov
cld
or
lret
addb
dec
push
ret
lcall
out
and
push
xchg
adc
test
ds
nop
push
bound
jl
negb
int
pop
ficomps
inc
dec
cld
pop
and
ja
in
dec
ret
scas
aad
in
in
pop
jmp
cwtl
push
and
fildll
fnstcw
mov
jmp
mov
hlt
jl
sbb
int3
xchg
or
xor
jmp
fs
and
ja
cli
lods
mov
test
int3
pop
xchg
xchg
jae
lahf
ficoml
outsl
cltd
cmp
das
dec
pusha
es
shrl
lret
push
orl
popa
and
cmp
fcmovnu
ret
add
arpl
push
cmp
outsb
inc
dec
dec
push
imul
out
js
xor
mov
xor
mov
jo
aad
inc
pop
mov
lods
and
aas
sbb
pop
das
fwait
rclb
lock
xorb
shlb
xchg
mov
loopne
nop
add
popf
movsl
inc
cmc
mov
shll
aas
es
mov
add
xchg
lds
pop
jmp
dec
sbb
xor
dec
sub
dec
imul
mull
lret
es
popa
out
jmp
idiv
hlt
call
dec
movsl
xor
pop
add
insl
sub
mov
test
sti
add
imul
cwtl
mov
or
fcmovbe
dec
enter
jb
test
and
lea
and
cmc
int3
fs
enter
cmpsl
cmp
add
les
jo
xlat
add
adc
insl
jne
dec
pop
outsb
jnp
dec
shll
lea
ficompl
repnz
loope
icebp
mov
js
jnp
pop
adc
add
push
data16
jmp
shrb
sub
out
rcrl
fwait
scas
cmpsl
dec
xchg
xor
les
aad
jmp
fdivs
sub
push
cltd
test
in
movsl
insb
push
clc
fs
push
sbb
lahf
pusha
mov
ja
movb
or
mov
dec
push
cmp
shl
mov
cmpsb
or
fistpl
sbb
dec
mov
mov
mov
mov
push
subl
decl
push
in
sbb
cwtl
fnstsw
imul
mov
jg
add
inc
push
mov
push
lds
cmp
aaa
fcomps
mov
xchg
pop
and
jo
ja
cltd
icebp
into
adc
sahf
or
sub
ret
cwtl
push
lret
ret
push
inc
test
mov
into
dec
xchg
aas
xchg
push
out
push
adc
or
cmp
mov
dec
je
lea
dec
nop
mov
aam
inc
xchg
hlt
or
shlb
pop
hlt
ret
and
dec
cmpsb
xor
add
dec
decl
cmp
shlb
or
ds
cli
mov
adc
or
dec
cmc
mov
add
fwait
xor
xor
ja
or
and
jb
fwait
daa
fistl
cmp
dec
lods
inc
jae
dec
jmp
mov
mov
push
inc
popf
adc
sbbl
imul
mov
mov
jae
lods
inc
inc
or
ss
inc
loope
pop
push
addl
xchg
nop
in
ja
inc
dec
daa
mov
test
ss
pop
cmovp
iret
or
fidivl
push
xor
cmp
arpl
sarl
sti
cli
shl
pop
dec
xchg
icebp
ljmp
push
mov
int3
and
rorb
loope
xchg
ficoml
stos
aad
sbb
and
ret
mov
nop
int
loope
pusha
lret
or
sti
je
test
cli
sbb
push
xchg
push
or
pop
pop
mov
or
add
fsubrl
in
jno
gs
gs
xlat
icebp
test
out
inc
repz
notb
add
xchg
popf
add
imul
popf
add
dec
push
popf
xorl
pop
addl
pop
inc
mov
cmp
sub
sbb
sar
das
scas
into
addl
pop
rcr
dec
mov
dec
xchg
push
sti
dec
xor
sti
xchg
sub
subb
adc
leave
or
xor
imul
mov
jle
sahf
outsl
mov
mov
adc
insl
ret
outsb
adc
hlt
or
or
cmpsb
cmp
popa
lea
stos
pop
hlt
ret
outsb
pop
xchg
adc
mov
pop
hlt
mov
js
stc
lods
sub
jno
dec
insl
adc
jg
fwait
adc
and
or
popf
movsl
sti
pop
pop
mov
cld
push
ret
lock
je
in
dec
or
sahf
jp
jnp
ds
or
cmp
cmc
push
dec
stos
mov
fistpll
push
mov
or
xchg
sbb
dec
aad
loop
jmp
cmpsb
cmpsl
xorb
aad
mov
push
mov
lahf
lds
mov
jae
cmp
cli
xchg
stos
movsl
fldt
addl
cmp
xchg
xor
mov
xlat
stc
loop
or
xorb
ret
jp
mov
and
movsb
mov
mov
jb
push
add
inc
scas
inc
in
scas
sbb
into
push
and
add
adc
mov
test
push
cmp
cmp
rcll
adc
dec
aam
popa
add
add
inc
popf
orl
outsb
push
sbb
movsl
pop
shll
test
or
push
mov
or
push
xchg
pop
pop
pop
sbb
jge
loop
mov
and
js
mov
inc
sub
push
pop
mov
sahf
and
ja
popa
dec
scas
insb
or
or
fs
sbb
and
mov
fwait
adc
sub
cmp
ds
in
sbb
cmc
jecxz
mov
adc
mov
xor
fcoms
stos
out
fimuls
mov
adc
bound
in
jbe
pushl
sbb
push
aaa
lret
lret
adc
lret
mov
cmp
loope
outsb
sbb
in
sub
sbb
repnz
jmp
dec
xchg
jmp
dec
mov
ss
fisttpl
mov
xlat
std
test
or
xchg
jl
test
mov
mov
adc
stos
or
shlb
and
lock
or
xchg
imul
add
or
mov
fwait
movsb
jns
in
imul
and
inc
add
jno
fcmove
ds
rorl
push
pop
add
orl
fcoml
jg
out
je
mov
jne
loope
outsb
subl
test
repnz
xor
mov
in
leave
imull
jmp
and
inc
cld
sbb
loop
fwait
lods
sbb
sbb
dec
sbb
mov
mov
push
push
xchg
dec
jmp
fst
popf
sarb
hlt
leave
pop
bound
fiaddl
test
loope
inc
cmpl
imul
stc
pop
inc
ret
frstor
gs
sbb
jp
dec
clc
push
or
mov
gs
loopne
xor
fwait
cmpsl
jp
cltd
stos
add
pusha
jnp
jg
pop
mov
fimuls
into
cmp
fwait
jbe
mov
sbb
inc
cmpsl
add
icebp
inc
jnp
mov
fcoml
pop
dec
fdivrs
xorl
outsl
shll
rcrb
jg
pop
jmp
out
jl
jae
and
cli
pop
decl
pop
stos
cli
mov
sub
jge
push
das
inc
mov
sbb
xlat
or
adc
sub
lock
adc
jecxz
adc
jmp
ret
pusha
je
mov
adc
data16
mov
pop
aad
adc
cld
sbb
push
out
loop
jnp
pop
sbbb
and
outsl
hlt
fst
push
push
clc
outsb
je
in
inc
lcall
aam
fcmovnbe
rolb
repz
movsl
sbb
in
push
js
jne
add
les
sbb
cwtl
out
test
ljmp
scas
sub
into
fisttpll
in
loop
incl
filds
push
inc
pop
imul
adc
sbb
in
mov
mov
shrb
shrb
push
mov
cmp
repnz
cmp
xchg
cwtl
fwait
add
in
cli
fadd
call
adc
pop
xchg
adc
loop
pop
out
sub
or
loop
rorl
decb
fsubr
into
mov
fiadds
shll
data16
mov
or
cs
es
js
outsb
jmp
scas
mov
adc
pushl
fisttpl
sarb
cmp
pop
jb
jns
cld
push
jg
push
mov
loopne
imul
cmpsl
insb
cld
addr16
mov
pop
mov
ljmp
jmp
scas
pop
pop
xchg
popa
fdivr
add
jno
arpl
incb
jle
icebp
out
push
xor
cwtl
pop
clc
cmovb
daa
cli
js
call
ret
add
aaa
and
scas
xchg
inc
stos
enter
pop
xchg
and
dec
popa
scas
mov
sub
inc
mov
test
roll
daa
sbbl
jb
ret
ja
inc
ss
or
insb
pop
push
mov
inc
cli
mov
dec
nop
or
mov
jg
or
and
hlt
pusha
pop
pop
int3
push
or
sbb
mov
adc
movsl
dec
add
mov
push
xchg
cwtl
pop
xlat
loope
subl
xchg
add
fcoms
shl
add
test
sbb
stos
fidivrl
lret
mov
mov
pop
in
outsl
sub
mov
jge
pop
ret
cmp
movsb
fcomps
adcl
rorb
jg
sbb
sbb
mov
lcall
sbb
mov
pop
roll
mov
leave
xlat
sub
fmulp
sbb
ret
adc
cli
clc
jae
mov
sub
mov
or
out
mov
movsb
shl
inc
sarl
jp
imul
sub
add
call
dec
clc
push
jo
push
xor
jg
adc
fwait
cmp
je
test
insb
movsb
mov
fsubrl
pop
std
push
shrl
or
mov
mov
test
xchg
js
add
inc
xor
loopne
add
mov
dec
jg
mov
shll
fwait
xchg
cmp
or
in
icebp
mov
mov
rclb
loop
push
in
lock
xor
imul
stos
pop
pop
lcall
and
jo
fcompl
inc
lods
ret
jmp
xchg
adc
test
mov
dec
push
bound
jecxz
jp
loope
sbb
loop
jnp
xchg
je
scas
cmp
xchg
inc
pop
cmp
hlt
dec
fcom
ds
rorl
iret
push
paddd
or
test
fucom
mov
fidivl
je
push
insl
inc
mov
out
sbb
sub
inc
jmp
ret
pop
arpl
icebp
xchg
mov
xchg
dec
add
push
or
sbb
frstor
jno
frstor
hlt
mov
outsb
adc
mov
test
call
sbbl
movsl
jmp
mov
call
inc
xchg
mov
imulb
ja
movsl
shll
xchg
ret
add
dec
and
adc
sbb
mov
and
test
jne
sbb
jp
jl
int
adc
inc
mov
dec
popa
and
and
aaa
pop
sub
jb,pt
push
inc
cltd
lret
das
js
dec
sub
cmp
ja
in
xchg
add
incb
xor
sbb
mov
and
inc
pop
loope
icebp
aas
dec
jg
mov
es
filds
cld
outsl
push
das
adc
mov
sbb
ficoms
jecxz
ds
ja
daa
fdivl
sbb
jl
scas
lods
cmp
aas
cld
sbbb
es
sbb
out
je
pop
jg
adc
loop
add
jecxz
and
daa
dec
cli
adc
faddl
cmp
inc
ja
pop
xchg
or
jle
or
cvtps2pd
jbe
xchg
or
cmpsl
lret
pcmpgtd
jo
jmp
sar
mov
jno
fcoml
lds
call
inc
mov
sbb
add
jp
ja
jne
dec
adc
imul
ficompl
call
adc
push
fnstcw
add
loopne
add
xchg
pop
roll
std
add
pop
or
loope
mov
mov
roll
lds
and
ret
fsubs
outsl
in
add
push
imul
cltd
add
sub
enter
pop
lock
and
out
adc
push
setg
movl
adc
jno
dec
stos
test
inc
pop
ljmp
sbb
dec
outsl
bound
and
cmc
sub
call
filds
push
dec
jb
push
fadd
xchg
mov
mov
pop
icebp
hlt
mov
mov
or
dec
subb
ficompl
pop
and
adcb
jbe
fyl2x
inc
cmpsb
popf
xlat
xor
mov
cmp
fs
dec
call
enter
sub
cmovo
mov
sub
shl
arpl
jl
loopne
mov
pop
jne
cs
xor
les
in
js
gs
adc
jns
jl
pop
push
dec
sahf
and
rol
lods
icebp
push
filds
out
mov
dec
cmp
ret
popf
xor
and
sarb
mov
call
gs
cli
adc
mov
inc
jle
stos
pop
xor
sbb
jl,pt
or
pop
es
or
sbb
imul
lret
adc
push
incb
sbb
mov
rorl
mov
sti
jecxz
add
rorb
adc
fisubrs
fisubrl
jl
pop
cs
inc
lret
push
call
cmp
adc
lret
ret
in
pusha
mov
pop
das
shl
loopne
rolb
lret
jp
std
fbstp
inc
adc
test
sub
in
xchg
sarl
mov
mov
mov
hlt
xor
xchg
pop
movsl
paddq
inc
mov
or
xchg
pop
jne
xchg
sbb
push
rclb
popa
inc
inc
add
sahf
pop
loope
std
and
dec
inc
inc
arpl
lods
jg
stc
loopne
lea
in
mov
test
js
scas
cld
das
mov
mov
push
clc
stos
sub
or
call
xor
cmp
jmp
push
leave
insl
in
xor
sub
fdivl
sbb
sbb
or
movsl
add
jbe
orl
and
roll
xor
subl
sbb
sti
add
movsb
push
adc
inc
xchg
mov
mov
cmp
fidivs
jle
movsb
out
das
mov
jno
mov
je
fsubl
jg
daa
mov
inc
mov
addb
adc
icebp
push
and
call
insl
icebp
pop
cmp
out
stc
push
pop
hlt
adc
dec
loope
xchg
or
ljmp
das
sbb
mov
cmc
dec
mov
movsl
lret
sub
sbb
adc
mov
pop
outsb
and
sub
test
or
xchg
and
hlt
dec
call
int
aam
shrl
clc
sub
hlt
das
mov
jle
gs
dec
lahf
sbb
int3
mov
or
dec
scas
mov
mov
mov
clc
adc
shrl
mov
pop
sub
hlt
insb
adc
add
push
fisubl
in
add
call
mov
mov
aaa
clc
or
mov
push
loope
and
in
data16
daa
sbb
sub
jl
push
pusha
loope
sub
sub
jge
aas
sub
outsl
lea
inc
cmp
iret
or
pop
mov
movq
lock
mov
dec
repz
in
inc
lods
jp
shrl
inc
jmp
imul
aam
add
movsl
call
into
mov
jge
call
lret
or
inc
jns
outsl
lods
test
xlat
jo
aam
mov
aam
dec
dec
pop
inc
test
movsl
aad
inc
std
scas
push
adc
call
test
or
sarl
jmp
js
andb
cmp
popa
inc
test
jb
clc
push
iret
arpl
sbb
lahf
and
xchg
add
jecxz
mov
xor
xchg
jp
mov
adc
fs
xchg
out
aaa
mov
xchg
jle
or
out
sbb
lret
aaa
mov
sbb
or
addr16
ja
insl
sbb
daa
aam
cmc
mov
add
movsl
mov
adc
jl
xchg
lds
pusha
cld
pop
mov
aas
cwtl
inc
or
and
hlt
ljmp
mov
lock
pop
sbb
xor
push
inc
pop
xor
out
or
pop
insl
lcall
and
sub
testl
int3
into
cmpsb
fidivl
jmp
outsl
jb
cmpsl
mov
push
cld
lods
sahf
sbb
sbb
pop
push
call
cmp
mov
aad
rcrl
shr
push
ja
inc
push
cli
pop
inc
push
xchg
cmp
bound
adc
aam
loope
mov
mov
pop
andb
mov
inc
xchg
clc
sub
lods
pop
into
jo
mov
sub
ljmp
dec
sub
subb
inc
mov
fwait
xor
or
rolb
pop
out
ret
mov
add
fcmovb
decb
rolb
movsl
aas
clc
mov
fs
outsb
fwait
xor
mov
xchg
lret
test
push
push
test
push
mov
or
push
push
nop
push
push
mov
nop
fdiv
push
sti
push
cmc
push
int3
jns
pop
loopne
dec
mov
hlt
das
cmp
dec
nop
and
out
ss
sbb
mov
adc
imul
xchg
mov
mov
cmp
xchg
andl
lock
shll
incl
and
pop
lods
mov
cli
xchg
fimull
mov
rcr
addb
push
in
or
outsb
bound
dec
cmpb
mov
mov
xchg
mov
sbb
inc
leave
mov
jmp
loopne
fnstenv
mov
sbb
orl
mov
cmp
loopne
push
mov
out
push
xor
or
mov
mov
add
mov
sbb
pop
dec
icebp
loope
push
sahf
jecxz
xor
adcl
cli
neg
arpl
xor
mov
inc
ret
cwtl
mov
mov
adc
dec
push
jle
hlt
in
xchg
mov
push
aaa
cwtl
push
rol
call
lcall
mov
orl
divb
or
pop
out
xchg
pop
dec
xor
gs
and
dec
daa
mov
mov
lock
sbb
popa
dec
je
or
loope
xor
icebp
jge
pop
mov
cld
lock
mov
and
and
imul
ret
mov
and
fadd
test
lock
bnd
or
adc
adc
push
and
pop
lods
div
cmp
repz
insb
test
loope
ljmp
outsb
mov
jnp
xor
or
out
inc
lea
addr16
imul
aas
add
out
pop
add
mov
test
mov
shrb
push
rcr
dec
mov
add
rorb
adc
push
mov
cmpb
fldt
and
pop
je
sbb
jge
or
or
xchg
bound
xor
jle
push
dec
mov
cmc
xchg
jbe
and
loope
sbb
sti
js
test
and
inc
lods
cmpsl
jl
add
mov
pop
pop
cmp
add
dec
jb
movsl
cmp
xchg
lds
rorl
clc
add
or
popa
ret
ficoms
jmp
pop
xlat
jne
pop
jo
ds
adc
dec
jecxz
mov
mov
loop
rcl
sbb
decl
push
stos
lods
xor
imul
and
or
ss
sub
scas
push
add
mov
inc
roll
lods
add
call
ror
mov
pop
ret
outsl
mov
mov
inc
pop
push
mov
mov
and
sar
pop
mov
add
jbe
add
adc
inc
push
daa
shrb
jns
test
or
loop
test
push
idivl
inc
mov
shlb
fiadds
lahf
cmp
popa
adc
pcmpgtd
xchg
imul
daa
pop
dec
add
clc
xor
xchg
mov
ret
or
adc
or
testl
pop
jae
inc
fistpll
jo
fnsave
jae
push
mov
sbb
fildll
sbb
rorb
call
mov
jecxz
stos
mov
sar
shrl
jl
into
ror
in
push
in
je
ret
adc
and
push
repz
sbb
push
mov
or
mov
leave
push
scas
aaa
cmc
jg
cwtl
push
cmp
loopne
shrb
pop
xchg
mov
xchg
pop
cld
mov
stos
int3
jbe
push
and
inc
mov
outsl
loopne
test
in
in
xchg
ret
ljmp
adc
xor
shlb
inc
pop
push
pusha
mov
in
push
andl
add
lods
dec
and
movb
sti
pop
mov
divb
adc
sub
jno
xchg
pop
test
fdivrl
add
mov
sbbb
nop
add
inc
xor
loope
adc
sub
inc
ret
pop
decl
dec
jle
add
dec
call
rcl
dec
adc
jl
add
mov
add
decl
push
adc
xchg
into
inc
push
jb
daa
mov
cmp
adc
jl
pusha
scas
scas
push
and
jo
jle
mov
cmpsb
push
push
out
sbb
jecxz
int3
sub
mov
loop
mov
loopne
loope
fsubrl
andb
roll
pop
shr
sbb
jbe
fcoms
test
js
inc
add
push
xlat
xchg
rorb
mov
pushl
dec
scas
mov
push
adc
and
cmp
xchg
scas
sbb
adc
mov
lods
ficoms
inc
lahf
add
dec
nop
fidivrl
xchg
rcl
les
jl
mov
pop
xor
mov
js,pt
in
add
add
fistpl
jge
mov
jecxz
cmp
iret
mov
adc
cld
jle,pt
cmc
shrb
add
jp
lock
mov
ja
xor
stc
push
icebp
mulb
pop
dec
cmp
jnp
jle
ljmp
cmp
or
push
inc
adc
pop
xchg
pushf
outsb
leave
out
pop
add
mov
push
add
mov
dec
pop
mov
int3
aas
test
lock
add
cmp
ljmp
js
fdivs
inc
shrl
lahf
or
pop
popa
pop
repz
test
or
cmpsl
fists
jae
inc
push
ja
mov
pop
add
mov
jle
ret
mov
je
jp
pop
mov
xor
mov
add
inc
int3
sbb
cltd
cmp
cmp
adc
and
mov
imul
aas
jbe
lgs
cli
mov
jg
cmp
push
movsb
fistl
outsb
jmp
scas
mov
pop
add
and
pop
pop
loop
fs
adc
iret
inc
mov
popa
sub
les
mov
mov
jge
pop
dec
xor
dec
push
sbb
clc
js
shll
adcb
inc
jne
adc
rorl
jo
call
aas
pop
pop
in
fisttpl
cli
sbb
jmp
lds
adc
inc
push
mov
lea
aas
in
popl
add
jno
inc
andl
les
push
mov
mov
enter
icebp
mov
cmp
sub
fmull
cltd
lea
add
cmp
nop
sbb
cmpsb
inc
insb
test
loopne
sub
aad
jle
or
sub
add
dec
aad
jge
out
adc
cmp
add
out
lods
pop
pop
mov
loope
mov
xchg
pushf
mov
lock
pop
cwtl
sbb
and
lea
sbb
fnstsw
and
inc
adc
cmp
lock
xor
mov
adc
inc
xor
xchg
mov
lods
loope
xchg
mov
add
fisubrs
fdiv
rolb
jge
push
xchg
sahf
fmuls
and
sub
pop
adc
cmp
and
cs
mov
push
cld
adc
lcall
adc
insb
mov
aas
jb
shll
adc
add
ss
ds
inc
ljmp
jo
add
int
or
jle
push
sub
fsubrs
fdivl
lds
push
adc
mov
mov
jno
sbb
clc
dec
or
ja
fldl
inc
js
jbe
shlb
jmp
sbbb
cmp
test
sahf
and
push
adc
daa
repz
xor
inc
jns
pop
bound
stos
repnz
sbb
jo
mov
mov
test
or
mov
xor
bound
add
xor
sbb
add
xchg
and
movsb
xlat
mov
xor
cmpsb
sub
sub
xchg
mov
or
jbe
dec
mov
ds
test
or
inc
xrelease
push
push
dec
add
ret
cli
in
call
jg
cmp
push
pop
jo
or
xchg
sbb
jb
ror
pop
js
cmpsl
mov
call
int
fmulp
push
fs
fisttpll
fistps
mov
sub
movsb
push
pandn
jmp
push
jne
mov
in
jg
cwtl
cltd
mov
arpl
jmp
stc
fcomps
push
movsb
adc
hlt
icebp
push
sbb
and
fs
pop
add
push
mov
adc
nop
cmp
xchg
dec
mov
push
pusha
inc
js
outsb
lahf
mov
or
sbb
pop
adc
add
roll
xchg
xchg
sbb
mov
add
out
mov
daa
jmp
push
add
mov
lret
xor
pop
dec
cli
ja
pop
orb
lods
mov
mov
mov
adc
in
stos
std
shll
xchg
loopne
test
jo
call
lock
pop
xchg
scas
sahf
repnz
or
psllw
mov
mov
call
arpl
arpl
push
dec
mov
out
mov
call
inc
cmp
mov
add
pop
icebp
sbbl
inc
pop
mov
mov
and
sbb
adc
daa
dec
push
and
dec
mov
inc
aas
fs
or
sbb
cmp
lods
add
cmovne
inc
cli
pop
mov
out
dec
popf
cmc
add
bound
loop
xlat
std
pop
cli
pusha
pop
ret
bnd
movsb
xchg
insl
ljmp
lcall
dec
mov
aam
aam
pop
xorl
mov
dec
push
divb
ja
jle
cmp
dec
adc
int
xchg
jno
push
popf
xor
lcall
imul
rol
lock
repz
rcrb
idivl
fldl
xor
or
xchg
and
push
je
pop
pop
cmpsb
xor
les
inc
or
mov
rcr
std
test
xor
and
pop
sub
dec
cli
bound
test
jge
add
dec
dec
pop
aaa
clc
xor
pop
and
pushf
loopne
or
int3
fimuls
es
testl
and
in
aaa
xchg
aam
cmp
lcall
fwait
inc
cmpsl
push
cli
dec
aas
sbb
mov
and
sbb
mov
pop
and
sub
imul
mov
xchg
test
sub
jo
or
mov
mov
fs
shrb
jbe
mov
es
jp
int3
lock
dec
jg
xor
stos
ret
sub
mov
fmulp
cmpsb
mov
je
fists
pop
mov
jb
es
push
mov
inc
nop
xchg
jne
jl
fs
add
scas
scas
dec
js
sub
or
or
sbb
add
adc
mov
cwtl
mov
fnsave
xor
and
xchg
mov
pop
adc
mov
push
fwait
imul
mov
jno
push
das
fisubrl
out
xchg
xchg
out
and
xorb
mov
pushf
rcrb
test
sbb
pop
mov
les
sbb
imul
aad
cmp
ds
mov
cs
push
rclb
lret
fcoms
sub
mov
sub
loope
cmp
mov
outsb
pop
fdivl
inc
ret
mov
or
je
add
stos
and
mov
adc
inc
rcll
enter
pop
or
sbb
frstor
inc
outsb
and
add
mov
stos
pop
lods
push
loop
jnp,pt
fsubp
in
sub
sbb
jg
ret
sbb
movb
shl
sub
sbb
sbb
int
cs
or
xchg
adc
add
mull
mov
icebp
mov
jno
repnz
jo
popa
pop
pop
mov
pop
sub
jbe
gs
xor
out
inc
call
loope
inc
popa
or
and
ret
ret
xchg
add
jbe
mov
out
pop
pop
adc
rcrb
es
pop
pop
lock
outsl
add
push
out
js
lcall
dec
js
adc
and
add
xor
popaw
dec
cld
dec
jmp
js
mov
decl
lds
push
adc
mov
lcall
lock
pop
push
mov
out
sarb
into
push
cmp
or
test
dec
push
lret
xchg
int3
adc
stc
push
subb
jl
lods
ss
nop
aad
mov
sub
sub
fsubl
bound
cmp
push
inc
fnstcw
imul
rclb
fs
inc
ret
jns
lahf
stos
or
sahf
dec
test
push
inc
jmp
add
cmpsl
inc
mov
ror
adc
aas
push
sbb
xchg
js
sub
xchg
push
or
fcoms
mov
ljmp
popa
shll
add
pushf
bound
rolb
jo
mov
in
mov
fidivrl
loop
ljmp
movsb
aam
or
add
add
pop
mov
and
mov
mov
mov
filds
push
jo
xor
imul
gs
leave
and
sub
shlb
or
aad
inc
sti
xor
jmp
jo
push
popa
cmp
push
adc
int3
jl
clc
js
pop
jnp
insb
sti
stc
inc
adc
inc
shr
add
movsbl
scas
cli
mov
addl
and
mov
cmpsb
movsl
icebp
jmp
shrl
je
mov
popa
or
dec
mov
fwait
lahf
fbstp
loope
jne
pop
push
push
inc
in
nop
adc
cld
mov
jle
xlat
push
inc
bound
fcompl
daa
xchg
imul
sub
cmpsb
push
sub
pop
popa
scas
pop
loopne
xchg
mov
push
adcb
sbb
cmpb
mov
inc
cmpsb
negb
popa
jne
jno
aam
es
and
jl
push
xchg
add
sbb
pop
mov
shll
push
sub
xorl
sub
fs
push
test
adc
mov
sbb
notl
fistl
mov
lods
rclb
add
or
test
or
sbb
std
sub
sahf
or
out
and
cmpsl
or
or
idiv
xor
fwait
cmp
inc
cmpb
mov
mov
pop
adc
bndldx
arpl
in
adc
sti
fmull
inc
mov
pop
js
mov
loope
mov
popf
mov
xor
and
dec
pop
lock
cmpsb
mov
pop
fwait
andb
loope
mov
mov
ljmp
mov
movsb
mov
daa
cmp
testl
pop
stos
ret
scas
data16
js
daa
jl
es
inc
inc
xor
pushf
outsb
or
arpl
dec
cwtl
sbb
and
mov
adc
mov
testb
imul
aad
call
dec
xlat
add
jmp
mov
push
mov
sub
call
cld
lcall
test
imul
lahf
mov
cld
or
aaa
jne
pushf
movsl
jle
pop
mov
out
xchg
sbb
outsl
mov
or
out
pushf
into
cs
addb
movsb
pop
call
dec
push
pop
pushf
push
popf
dec
aad
push
jmp
movsb
loopne
pushf
jg
mov
add
jp
adc
shlb
mov
out
jmp
icebp
es
shlb
mov
adc
stos
lcall
cli
aas
decb
divl
jae
cmp
cmp
pushf
sub
and
mov
cmp
add
xchg
fstl
inc
cld
dec
fadd
add
mov
pop
std
mov
imul
xchg
mov
cmp
insb
nop
dec
imul
pop
push
and
inc
jnp
add
ret
outsb
mov
push
add
mov
jbe
mov
cmp
fimull
das
ss
imul
repz
xlat
jmp
pusha
lcall
push
xchg
sub
xchg
mov
hlt
mov
add
mov
loop
bound
sbb
rcrb
mov
pop
clc
out
shll
cli
test
jmp
mov
adc
jnp
pop
add
mov
cli
loop
or
mov
test
mov
jle
daa
dec
outsb
sahf
push
sbb
sub
push
subl
dec
rorb
xchg
jl
fadd
imul
int3
shrb
fisubrl
mov
sub
std
aas
into
cmpsl
mov
push
push
sbb
enter
or
xor
xor
subb
ret
mov
xchg
lahf
lea
popa
decb
ficompl
jo
xor
inc
xchg
push
dec
std
pop
xchg
ret
movsl
outsb
mov
sub
dec
lock
loopne
xlat
enter
aad
test
sbb
jb
sbb
mov
jo
scas
mov
jne
mov
rorl
mov
rclb
mov
jmp
sbb
cmp
pop
dec
rclb
lock
xchg
icebp
cmpps
mov
sub
mull
sbb
movsb
cmpl
aam
push
jmp
nop
sbb
add
lret
loop
insl
movsl
jne
std
or
cmp
jge
mov
jle
xchg
pop
pop
xchg
xor
frstor
loope
fstp
or
adcl
sbb
inc
fnstenv
icebp
mov
inc
pushf
dec
outsb
dec
push
dec
jg
jo
mov
adc
ss
jg
stos
daa
out
gs
fwait
mov
jne
dec
add
adc
pop
mov
add
push
lock
int
addb
les
mov
adcl
pop
sbb
popf
insb
add
and
cli
fcmove
inc
in
pushf
jg
mov
cs
sahf
mov
fs
and
fadd
and
xlat
clc
mov
jg
cmp
xor
push
xchg
rcr
push
mov
dec
mov
adc
lock
pop
push
adc
incl
ds
jecxz
js
lahf
xlat
jl
mov
pop
and
insb
outsl
add
call
jp
inc
das
ja
pop
add
aas
pop
fnstsw
andb
bswap
and
jnp
int
or
inc
mov
sub
cld
lahf
js
inc
inc
js
push
mov
clc
enter
sbb
sub
inc
mov
test
and
add
insb
and
mov
dec
jge
fimuls
out
jo
pop
cmc
jbe
pop
ret
mov
pop
ss
mov
fcompl
dec
or
jle
sub
mov
mov
or
inc
push
sbb
push
int
andl
mov
das
mov
pop
xchg
test
add
jmp
jb
mov
pop
xchg
clc
mov
adc
icebp
add
jp
stos
lock
rcrb
jno
push
push
jle
inc
scas
adc
sbb
push
ss
enter
shrl
sbb
fisttpl
scas
mov
cmpsb
shrb
test
xlat
cmc
cmp
data16
cmp
jo
dec
arpl
in
push
aas
adcb
orl
lcall
test
ret
and
mov
sbb
jle
ljmp
cmp
inc
or
xor
sub
rcll
pop
add
nop
in
jb
pop
scas
push
pop
add
loope
mov
push
mov
data16
or
js
sub
push
adc
mov
nop
jg
cltd
or
sub
ret
xchg
stc
cmc
filds
int3
inc
xor
pop
cmp
mov
jo
outsb
insb
pusha
mov
inc
push
sub
add
pop
cli
and
insl
test
lret
mov
aas
js
fisubrs
fdivrp
sarb
xchg
lret
mov
mov
xor
jns
add
sub
add
add
cli
mov
outsl
and
ljmp
push
mov
mov
sub
cmp
cwtl
xchg
dec
inc
or
pop
rcrb
push
pop
or
mov
or
loope
jecxz
sarb
js
sbb
adc
rcll
mov
dec
mov
and
mov
out
mov
movd
sbb
movsb
add
pop
pop
jbe
sti
in
shrb
rorb
stos
xchg
div
and
rolb
lds
clc
clc
mov
aam
stos
dec
cwtl
cmp
pushf
or
aam
jb
or
in
push
in
cltd
sbb
push
or
in
adc
inc
mov
in
inc
pop
inc
mov
add
sbb
movsb
sub
daa
scas
lock
mov
addb
add
and
mov
subl
cli
cmp
test
fnsave
and
sahf
ljmp
subl
sub
inc
cld
xchg
fnsave
sbb
cmp
je
xchg
add
ds
pop
add
lret
jno
sbb
insb
movsb
fsubrl
inc
dec
add
jg
fbstp
les
leave
hlt
inc
rolb
sbb
mov
fwait
je
clc
pop
xchg
or
in
sub
mov
pop
decl
or
andl
push
xor
cmp
je
inc
xchg
leave
mov
push
cld
mov
xchg
jo
notl
xor
sbb
add
das
cwtl
push
pop
in
jmp
sti
mov
out
or
cltd
sub
xor
mov
daa
mov
or
addb
inc
mov
mov
loop
mov
adc
std
mov
int
and
out
cmp
jo
sub
ret
leave
iret
add
push
aas
sbb
std
push
or
movsw
test
stc
cmp
test
pop
inc
mov
mov
sbbl
push
add
fidivrl
lock
xor
sub
mov
push
movsl
dec
sahf
repz
lock
inc
das
mov
test
rorb
mov
pop
push
lahf
clc
push
pop
mov
xlat
repz
lret
out
icebp
push
or
sub
pop
jo
jbe
inc
xchg
inc
sbb
aaa
les
mov
mov
push
xor
or
ja
incl
jp
pop
push
shlb
mov
repz
lock
mov
push
nop
lock
jne
mov
lods
outsb
insb
inc
lds
das
cld
xchg
cmp
test
cmp
sbb
xor
fidivrs
and
pop
mov
xchg
inc
ljmp
test
pop
push
xchg
int3
cmp
xlat
cmp
aam
xor
add
mov
pop
std
pop
lock
nop
pusha
xchg
jae
pop
jecxz
mov
mov
sbbb
clc
je
jb
inc
clc
imul
jo
test
add
push
mov
jns
out
dec
aas
xor
stos
xorb
insb
and
shll
fisubrl
pop
or
movsl
out
insb
or
jbe
sar
aam
pop
mov
loopne
jno
fisttpll
dec
pop
mov
cmp
lock
inc
ljmp
pop
js
repz
sub
push
mov
lock
add
xchg
mov
pop
adc
and
sbb
or
xchg
out
sarl
gs
std
xchg
rolb
in
add
addl
shll
sbb
dec
xor
jp
aam
add
jge
lret
mov
adc
push
mov
filds
std
daa
pop
pop
cmp
push
outsb
dec
std
sbb
inc
xor
lret
mulb
movsl
mov
or
loopne
push
pop
test
test
movsl
cmc
aam
cld
pop
ds
into
pushf
stos
stos
fistpl
int
inc
dec
or
lods
sbb
out
lcall
movsl
or
mov
push
scas
mov
jo
clc
push
incl
mov
fwait
cmp
jge
nop
fcomps
inc
clc
xor
push
push
cwtl
xrelease
sub
call
mov
mov
aad
and
shl
adc
popa
lods
mov
xlat
mov
mov
xchg
sbb
dec
dec
xchg
cmp
inc
pop
cmpl
sbb
pusha
or
pushf
pop
inc
sbb
stos
movsl
shlb
aaa
mov
jb
xchg
xchg
negl
es
mov
mov
pop
pop
and
es
idivb
or
adc
add
add
icebp
jo
mov
clc
mov
call
movsl
xlat
pop
jle
xchg
and
or
ficomps
pushf
xchg
repnz
ret
cld
stos
arpl
shr
jmp
dec
inc
leave
call
in
mov
adcb
in
clc
pop
add
repnz
push
maxps
lock
xor
xorps
sbb
adc
jb
loop
xlat
stos
mov
dec
mov
inc
xchg
adc
xor
andb
loope
loopne
cmp
in
adc
and
rolb
std
push
push
outsl
imul
add
sub
sbb
std
pop
subb
je
cmc
xchg
push
or
mov
outsb
dec
lods
xchg
movsb
jo
jbe
pop
sbb
sbb
call
mov
adc
jnp
add
stos
xor
sar
std
popa
jbe
mov
add
mov
shlb
dec
add
cmovge
mov
ds
xchg
jl
aas
xor
jmp
out
shlb
into
push
or
xor
pop
movsb
mov
dec
xchg
jno
lods
push
lock
and
jmp
je
sahf
pushl
icebp
dec
push
sti
sub
andl
sarl
push
sbb
aam
jg
pop
or
aas
add
jmp
mov
dec
std
inc
adc
cmp
sbb
cli
call
fbstp
rcr
jo
fmuls
in
pop
push
adc
push
call
jae
div
lret
xor
mov
add
ret
subl
lock
xor
out
jmp
andb
xor
loope
shll
mov
jg
jl
cvtdq2ps
dec
sbb
push
jl
aaa
sbb
sbb
je
rol
inc
clc
inc
cmp
dec
jo
scas
jae
ds
lcall
loope
dec
pop
loopne
jg
mov
std
arpl
cmp
sbb
loop
inc
push
stc
in
popa
mov
aas
negb
mov
pop
sbb
insl
ja
nop
loopne
xchg
jmp
sbb
or
pop
into
add
cmp
fldcw
push
cli
sbb
fninit
xor
mov
xchg
bnd
lcall
daa
cmp
mov
aam
shlb
cs
push
outsb
fcoml
jle
xchg
mov
movsb
fcoms
loope
xlat
push
xorb
dec
addr16
pop
and
mov
xor
mov
mov
cmpl
cmpsl
data16
incl
mov
ret
and
aas
std
add
inc
push
test
add
jne
cld
jle
sbb
jg
or
mov
stos
adc
cld
pop
icebp
jl
push
scas
testl
test
lea
and
xlat
lret
or
daa
mov
jge
in
and
sub
sub
fiaddl
ljmp
push
mov
cmp
inc
fisttpll
in
sub
incl
mov
mov
and
cmp
imul
mov
mov
cmc
adc
shr
fiaddl
lock
imulb
xor
cmp
clc
fsubs
xchg
mov
push
jnp
outsl
cs
dec
int3
lods
sub
dec
pusha
fs
dec
fwait
jp
mov
push
xchg
cmpsl
incl
out
sbb
mov
inc
ds
loopne
adc
add
mov
ljmp
sbb
add
mov
repz
pop
stos
cmpsb
fwait
test
push
dec
fsubrl
push
sahf
push
sarb
or
xchg
sub
in
and
mov
sbb
lock
inc
mov
ret
xchg
scas
pop
jl
aad
loopne
or
lock
cmpsb
jl
cmp
fmul
cmp
and
adc
js
pop
loop
in
sub
movsl
call
cmc
gs
mov
add
je
push
lret
icebp
pusha
stos
lahf
add
push
hlt
bound
sub
push
js
mov
cmp
adc
jp
dec
rsqrtps
pop
cmp
cmp
aad
push
scas
imul
stc
std
push
cmpsb
lcall
mov
std
pop
loop
test
shl
adc
cmpl
pop
sbb
repz
push
outsl
shrl
or
lsl
negb
subb
loop
mov
sub
add
lods
std
cmc
and
out
adc
push
jecxz
incl
stos
rolb
mov
mov
clc
xchg
mov
inc
inc
repz
cmp
insl
jecxz
xchg
adc
mov
mov
insl
or
int3
mov
pop
mov
mov
test
inc
jl
fcmovbe
add
push
out
and
fcompp
mov
mov
xchg
sbb
mov
adc
addl
inc
into
cli
cld
inc
inc
or
fwait
not
pop
dec
les
xchg
mov
aaa
cld
hlt
xchg
xchg
jp
sbb
ja
and
xlat
jg
enter
cmc
mov
add
je
xorb
adc
xchg
jo
or
scas
cli
mov
mov
jb
cli
cli
pop
jg
adc
push
sub
adc
or
sbb
adc
add
orb
aam
cmp
cmc
sub
inc
cmc
cmp
inc
movsl
filds
cmpsl
mov
xor
out
inc
loopne
dec
ljmp
cld
lret
cmp
fnstcw
lods
aaa
mov
mov
enter
xchg
lds
insl
mov
test
adc
push
pop
or
add
mov
mov
nop
outsb
daa
mov
ret
mov
inc
sub
loope
pop
addb
jle
add
push
mov
inc
in
lret
push
sub
out
lods
and
push
inc
xor
push
push
dec
incl
mov
insb
imul
std
xchg
mov
stos
cmp
mov
ljmp
movsb
xchg
fxch
dec
jge
out
jnp
icebp
insb
fmuls
into
ret
push
xchg
test
filds
adc
mov
adc
xchg
sub
xor
out
insb
xor
cmpb
adc
icebp
adc
shrb
or
or
or
add
cwtl
outsl
lret
or
nop
jo
mov
push
roll
shrb
mov
loope
jp
push
jne
sbb
push
addb
push
cmc
or
ljmp
adc
jne
jl
jo
jle
stos
dec
xor
mov
fbld
iret
das
xchg
push
xorb
add
mov
xlat
movsl
imul
add
std
fisubl
sahf
adc
in
cld
mov
lods
add
mov
mov
addl
cld
aaa
sbb
mov
bswap
outsl
inc
add
mov
pushf
sbb
ljmp
dec
int3
fs
or
and
sti
xchg
icebp
mov
fimuls
enter
adc
dec
jmp
insb
repnz
sbb
add
cmp
sub
xchg
adc
aam
sbb
mov
xchg
push
jl
mov
mov
dec
nop
movl
gs
rorl
sbb
test
mov
insb
mov
jmp
inc
adc
dec
jecxz
into
jle
movsb
push
aaa
push
push
pop
cli
or
inc
cmp
mov
mov
shl
mov
push
enter
sbb
xor
mov
or
xor
testb
lock
adc
fisubrs
stos
mov
or
or
mov
sbb
cmp
pop
sbb
mov
cmp
inc
aas
jnp
inc
jg
push
imul
lcall
adcl
sbb
or
stos
push
add
test
call
cld
mov
shrb
xor
inc
insl
push
dec
mov
sub
aam
mov
inc
fisttpll
mov
cmp
js
and
sarb
pop
mov
mov
xor
cmp
addr16
xor
clc
and
and
sbb
dec
popl
popa
imul
add
mov
test
mov
mov
in
mov
cs
pop
daa
fldt
sbb
or
push
dec
mov
dec
cmc
pop
outsl
or
push
test
shlb
lods
adc
aas
call
inc
push
cld
sbbb
cmp
loop
add
adc
and
sub
add
xchg
jmp
jmp
add
lahf
repz
xor
inc
add
inc
cs
cmp
pop
or
test
or
sbb
xor
cmc
mul
mov
xlat
add
pushf
in
xchg
rcr
dec
jg
mov
lret
mov
cmp
stos
or
jne
incb
test
inc
lds
mov
lock
loope
lock
test
rcrl
xor
cmc
shl
das
stos
cli
mov
push
test
adc
sar
dec
ljmp
xchg
cmp
and
jno
adc
xor
add
idivl
xor
int3
cmc
mov
shl
mov
add
test
inc
jb
adc
mov
mov
rclb
jecxz
insb
dec
or
sti
stc
das
jl
sub
pop
add
jp
jl
pop
ret
adcb
rclb
data16
mov
mov
aas
nop
push
jnp
xchg
aas
clc
imul
scas
pushf
adc
ja
push
rolb
negl
es
cmp
push
inc
imul
mov
or
lcall
outsl
mov
adc
inc
adc
cs
insl
and
pop
sti
in
out
mov
orl
ss
jmp
mov
stos
dec
pop
jo
jmp
dec
divl
fcmovnbe
scas
cld
and
add
in
jl
sti
mov
rclb
add
xor
cmp
jp
cmp
icebp
xorb
lea
rclb
stc
inc
sbb
pop
rclb
sub
subb
or
cmp
es
and
dec
fwait
or
ljmp
adc
ds
arpl
lods
mov
ret
mov
call
push
stos
jns
aam
inc
int3
loopne
xor
rcll
addb
adc
adc
inc
push
call
mov
imull
cmp
sahf
stc
xor
sbb
sub
adc
sahf
bound
sbb
sti
loope
scas
in
adc
scas
ret
test
sbb
outsl
js
lock
int
dec
nop
xor
mov
adc
inc
aam
mov
mov
andb
popa
add
jbe
movhps
loopne
fsubrl
mov
cwtl
adc
push
out
imul
mov
lods
std
adc
mov
jne
or
add
orl
add
adc
lcall
mulb
sub
jae
push
xor
cld
mov
negl
out
pusha
cwtl
jmp
sbb
sbb
mov
jg
mov
xchg
ret
subb
lds
push
test
dec
mov
sub
cmc
xchg
add
or
les
mov
movsb
ficoml
mov
mov
sti
shlb
jae
mov
add
cmp
imul
popf
icebp
dec
xlat
inc
jge
or
mov
sub
pusha
call
add
shlb
dec
cmp
adc
push
mov
push
jl
sbbl
lock
sub
xor
dec
jae
jo
cmp
stos
adc
dec
outsb
loopne
pop
sbb
movsb
xchg
into
insb
test
push
arpl
icebp
xchg
push
cs
push
sub
clc
inc
dec
aaa
aaa
in
or
and
cltd
push
repz
cmpsb
xor
icebp
sub
std
or
dec
and
mov
push
sbb
jmp
cmpsl
dec
jle
xor
gs
lods
ljmp
fidivrs
in
fwait
pop
or
adc
jns
mov
cmp
xor
mov
aas
adc
dec
pushf
or
mov
ret
pop
daa
jmp
paddb
insl
sbb
xchg
ficoml
adc
addr16
int
ljmp
lret
call
pop
mov
iret
lret
pop
icebp
int3
inc
mov
nop
int
pop
cltd
mov
xor
lods
and
iret
cmc
sub
push
mov
add
add
mov
fs
fadds
hlt
repnz
xabort
ljmp
popa
and
mov
cmc
addr16
push
cmpsb
sub
xor
pushl
test
sbb
rcrl
and
dec
inc
lahf
js
cmc
mov
cmpsl
mov
leave
inc
sti
scas
icebp
pop
mov
aas
lods
mov
dec
mov
mov
test
ss
add
loopne
jne
inc
idivb
cmp
outsl
sub
js
inc
bound
loopne
cs
lea
in
sub
jg
lret
mov
adc
fs
mov
pop
movsl
pop
imull
mov
pusha
pop
adc
out
mov
lret
lock
fs
pop
lcall
ror
mov
mov
pushl
xchg
add
inc
jge
movsb
lahf
ret
sub
not
add
dec
js
cmp
sti
sub
jge
insb
and
or
iret
xchg
add
cmp
or
rcl
inc
lea
stos
mov
loopne
or
shrl
sbb
adc
mov
xor
jge
xchg
daa
scas
add
pop
shl
decl
in
test
and
test
je
add
test
scas
shlb
mov
rcrb
call
inc
mov
mov
nop
ret
inc
lcall
mov
inc
fisubrl
aam
loopne
mov
cmpl
mov
xor
pop
jle
fisubs
pop
xchg
leave
fisubl
sarb
addr16
movups
or
cli
in
hlt
xchg
push
into
cli
idiv
xor
dec
adc
jmp
mov
inc
adc
andl
enter
or
add
rcll
xchg
sub
jmp
sbb
call
cs
xchg
out
push
and
or
bound
lods
pop
imul
jb
aam
jge
cmp
push
rorl
dec
pop
fadd
mov
gs
scas
xchg
adcb
sub
push
loope
out
sub
sbbl
sbb
bound
incl
mov
xor
pop
out
add
mov
inc
ljmp
dec
ficoms
loope
ss
add
add
insb
mov
dec
lret
incl
cmpsl
add
rorb
sti
loop
pushl
sarl
addr16
jle
cs
sub
aas
lds
xchg
fs
mov
int
or
cld
popa
call
or
dec
or
cmpsl
mov
test
imul
iret
bound
sub
icebp
hlt
imul
js
incb
and
imul
push
or
movb
and
push
sbb
lods
insb
aas
nop
cmp
pushf
shl
cmp
mov
xchg
hlt
mov
mov
cmp
insb
xchg
mov
in
leave
push
lahf
jmp
lock
cmpb
dec
adc
scas
or
sbb
incb
add
pop
jbe
test
xor
inc
cmp
mov
or
fwait
pop
xor
ror
and
test
ss
jg
imul
lret
lds
ss
stc
lahf
mov
pop
lds
fsubrs
or
cmp
mov
xor
pop
cld
add
jl
repz
push
jns
stc
push
decb
pusha
ja
fwait
sarb
lods
pushl
cmp
iret
cmp
popa
dec
dec
ret
xor
lret
loopne
inc
ret
pop
shll
or
or
xor
add
popf
jle
sub
pop
dec
cmc
dec
movsl
in
cmpsl
decl
xchg
lock
sbb
dec
fstl
dec
lahf
dec
decl
sti
scas
adc
dec
roll
in
loop
mov
push
aam
push
sarl
cmp
scas
mov
adc
or
push
loopne
pop
push
inc
ret
mov
sub
pop
scas
sti
out
cmp
loopne
mov
xor
test
inc
cmp
aam
inc
loopne
or
sub
clc
daa
ret
xor
jne
call
mov
loopne
push
cmp
ret
or
mov
mov
lods
adc
incl
aaa
pop
rclb
dec
mov
jl
jge
jg
test
mov
outsl
cmovs
addb
xchg
jbe
cmp
and
data16
dec
xchg
or
sbb
movb
xchg
or
loope
mov
outsb
movb
icebp
add
mov
push
push
adc
push
mov
cmp
push
mov
push
mov
mov
fnsave
inc
sub
xchg
shll
sbb
dec
les
adc
push
xor
mov
push
xlat
pop
cmc
movsl
call
fmuls
cmp
and
daa
jecxz
mov
cmp
mov
mov
and
lock
loopne
mov
adc
leave
rclb
or
scas
mov
inc
push
pop
je
shrb
ret
lock
adc
push
mov
loopne
and
mov
mov
inc
test
dec
push
fiadds
or
rorl
jns
shl
pop
cmp
add
xchg
mov
les
mov
jmp
push
popa
cli
clc
cmp
add
fcmovbe
cmp
adc
push
aam
je
xor
daa
sub
mov
nop
mov
icebp
stos
fmull
xchg
adc
mov
je
stc
jns
rol
int
xchg
add
aad
or
sub
lret
mov
jge
jg
inc
roll
ja
inc
js
mov
push
mov
dec
fs
fs
xchg
push
adc
pop
mov
mov
inc
fcmovb
stc
fcmovnu
orb
xor
popa
das
aad
hlt
mov
ja
call
cmp
scas
test
test
sarl
cmp
add
sub
mov
fs
lea
imul
dec
jp
in
push
pop
pusha
shr
dec
loope
and
sbb
jno
bnd
mov
stos
das
cmpsl
inc
push
pop
scas
xchg
lret
sti
or
inc
popf
mov
push
mov
push
pushf
dec
scas
ret
pop
pushf
sbbb
or
sbb
mov
daa
push
sub
sar
xor
xchg
or
mov
mov
je
jle
loopne
mov
hlt
mov
mov
pop
outsl
std
inc
out
push
adc
imul
orb
fists
sub
cmp
fcmovnb
in
xchg
call
sub
jecxz
dec
loop
stos
jmp
in
pop
movsb
cmp
mov
jns
icebp
punpcklwd
adc
sbb
mov
xor
adc
mov
jge
xchg
popa
push
loop
jo
test
mov
pop
rcll
rolb
dec
pop
aad
mov
mov
dec
cmp
mov
in
roll
inc
adc
adcb
sti
xchg
daa
xchg
push
push
pop
lods
das
enter
aam
mov
xor
sub
cmp
inc
cld
inc
add
sub
or
ja
aas
dec
sub
or
cmp
add
icebp
push
fcmovbe
fcmovu
sbb
les
push
ds
cmp
pop
add
fs
jbe
insb
ljmp
ret
jg
pop
adc
adc
icebp
aad
xchg
xor
mov
dec
in
xor
pop
test
adc
add
xor
iret
leave
jo
xchg
mov
out
pop
dec
pop
stos
enter
lret
pop
loopne
pop
fbstp
push
cmpsb
sti
mov
cmp
outsl
loop
pop
jmp
loopne
outsl
sahf
push
and
cmp
lea
int
mov
sarb
push
fs
xchg
outsl
int3
icebp
dec
xor
and
xor
pop
pop
mov
cmpsb
or
mov
and
cmp
std
push
sub
rolb
cmp
add
in
cmpsb
call
fs
jg
lods
incl
shll
cmp
icebp
xchg
mov
ljmp
sub
adc
add
dec
mov
pop
sti
cwtl
inc
les
inc
mov
jnp
movsl
popf
fildl
loopne
stos
outsl
xor
stc
lret
inc
add
shl
test
jl
stos
movsb
mov
xor
jg
dec
out
pop
arpl
push
mov
test
rcrb
in
mov
in
adc
xor
mov
stos
xchg
sub
idivl
call
mov
and
lock
xchg
add
and
call
les
cli
stos
mov
scas
enter
bound
push
pop
xor
or
mov
sub
lds
aaa
cmpsl
lcall
inc
add
pop
xor
cmpsb
insb
mov
sarl
push
adc
adc
mov
cmpsl
mov
jge
sahf
and
push
jle
test
inc
mov
out
loopne
nop
pop
inc
std
sarl
push
mov
pop
test
clc
inc
in
jno
adc
cld
jg
out
repnz
mov
mov
lds
jnp
loopne
xchg
mov
mov
imull
stc
cs
pop
xchg
in
fwait
dec
unpckhps
js
or
insl
cmp
pop
sar
push
dec
loopne
test
stos
ret
das
cld
inc
push
xor
adc
xchg
insb
or
xchg
stos
add
stc
outsl
je
inc
add
movsl
and
adc
cli
in
mov
ja
fwait
push
mov
mov
mov
orb
in
sbb
or
loopne
add
fcmovbe
imull
push
lret
lea
sub
pop
sub
xchg
cmp
or
fnsave
push
pop
test
xchg
dec
clc
mov
sub
mov
xor
push
loope
mov
cmpsl
lahf
into
shl
sub
mov
sbb
aam
fdivl
scas
out
scas
sub
out
ds
mov
xor
fwait
push
lods
add
out
loop
xor
xor
das
outsb
outsb
or
jge
pop
mov
jl
mov
xor
mov
rorl
sub
cmp
push
out
loopne
inc
push
pop
adc
adc
dec
cwtl
mov
addl
push
aas
xor
xchg
loope
xchg
xor
fwait
mov
mov
cmp
enter
mov
stc
mov
jb
jecxz
test
iret
lahf
and
mov
and
sbb
dec
jns
push
jp
std
pop
in
and
push
es
test
test
xchg
jb
cmp
add
mov
push
data16
xor
push
mov
repz
addr16
push
ud2
cld
xchg
rclb
mov
data16
push
int3
sub
push
jbe
cmp
mov
lods
push
adc
test
mov
bound
mov
push
shlb
loop
aam
cld
test
fwait
jmp
jmp
mov
fisttpll
divl
in
adc
xchg
push
es
and
lret
pop
sub
clc
iret
push
cmpl
daa
sbb
jle
lahf
push
shrb
dec
pushf
cmp
mov
or
icebp
xor
sub
xor
jg
ficompl
inc
mov
inc
mov
lahf
cmpsl
push
ss
fwait
ret
pop
fisttps
idivl
and
jno
adc
and
and
inc
mov
in
imul
cmp
sub
lea
xchg
pop
xchg
mov
leave
xchg
add
sbb
movsb
imul
xchg
repnz
push
mov
aaa
dec
pop
and
or
aas
lock
lea
cmpsl
mov
inc
sbb
inc
fldl
jmp
jbe
loop
or
push
lret
jo
xor
hlt
lds
sbb
add
cmpsl
cltd
loop
das
cmp
push
add
inc
imul
mov
cmp
fldl2e
ret
xor
arpl
push
in
inc
je
in
xchg
lds
iret
lods
pop
inc
mov
pop
cld
hlt
pop
dec
clc
cmp
push
pop
cwtl
std
bound
rclb
inc
xchg
sarl
pop
or
inc
xchg
or
add
scas
aas
push
xor
adc
insb
das
ss
push
movsb
lock
jmp
jle
adc
or
repnz
xor
mov
and
or
cmpl
pop
mov
push
dec
cmp
mov
add
dec
fwait
inc
testl
cmp
push
xor
push
dec
clc
xchg
xchg
and
cmp
pop
push
lret
loopne
mov
enter
xor
add
jp
adc
pop
pop
mov
data16
add
xor
xchg
insb
call
pop
adc
in
lcall
fnstcw
scas
fildl
push
out
fistpl
ds
or
cmpsb
test
cwtl
sbb
xchg
jl
daa
or
push
addb
insl
xor
xlat
enter
nop
push
jb
mov
mov
ljmp
add
mov
mov
cwtl
fiadds
movsb
repz
outsb
sbb
push
mov
add
sti
outsb
jo,pn
dec
lods
mov
test
inc
movl
stos
js
sarl
push
xor
sbb
and
outsl
sub
je
push
inc
push
lock
jp
xchg
sbb
jmp
mov
jo
cltd
outsb
push
aam
mov
rol
or
icebp
mov
or
push
jl
rclb
jg
insl
xchg
or
mov
mov
daa
divb
cmp
jb
or
or
jg
inc
loop
fdivrp
lret
or
mov
dec
shl
dec
pop
mov
lods
fcmovnb
out
add
mov
scas
outsl
jg
movd
adc
push
jp
mov
sub
rclb
dec
sti
adc
mov
pop
mov
lret
sub
sub
ret
loope
add
aas
pop
icebp
ja
add
dec
aaa
sbb
aad
or
and
fistpll
sbb
mov
cmp
adc
mov
jo
push
mov
jle
adc
pop
adc
sub
mov
pop
fsts
jnp
lods
or
xchg
inc
sarb
xor
jp
insb
xchg
lahf
stos
pcmpgtd
xchg
lret
pop
add
outsl
push
mov
or
adc
push
push
xchg
add
loope
or
scas
imul
mov
xor
mov
pop
add
lcall
iret
sub
fistps
xchg
sub
push
movsl
sahf
cli
add
aad
sub
and
mov
popa
jmp
dec
pop
icebp
xor
dec
aas
mov
outsl
xlat
test
add
dec
push
jmp
and
cmp
and
cmp
inc
neg
or
dec
cmp
arpl
push
or
sbb
fcmove
push
push
xchg
xor
sbb
loope
rcrb
outsl
fwait
adc
sub
rcr
push
ficoms
adcb
lar
xor
sar
dec
fsubl
cmc
push
inc
js
sbb
inc
push
pop
adc
jbe
cli
adc
test
es
push
lea
push
jmp
jecxz
cli
or
addb
ret
jno
xchg
daa
and
mov
enter
addr16
mov
pushf
out
lods
je
pop
inc
xor
iret
dec
nop
je
lcall
roll
add
cmp
popa
cli
adc
jg
add
std
inc
or
lcall
sbb
out
mov
je
mov
or
fs
jne
rolb
mov
mov
repnz
pop
cmc
pop
popa
jbe
test
push
mov
mov
and
jns
pop
push
fnsave
xchg
dec
mov
fcmove
out
add
test
push
push
fwait
pop
decb
or
pop
mov
sahf
push
mov
xor
data16
mov
repnz
push
sbb
sti
inc
dec
jg
and
adc
dec
leave
inc
shrb
fdivrl
jmp
jmp
mov
or
mov
push
add
cmp
push
outsb
xchg
stos
pop
or
cmp
mov
idiv
incl
xchg
adc
int
xchg
sbb
mov
aaa
fists
stc
bound
and
push
outsb
test
pop
cmp
push
jl
inc
xor
pop
or
cmpsl
movsl
test
xorb
dec
sbb
outsl
cmp
sti
inc
sub
sbb
repnz
mov
xchg
inc
insl
adc
dec
rol
jo
xlat
or
mov
mov
add
adcb
dec
cmp
push
ds
fmull
addl
icebp
or
dec
xor
cmpsl
adc
cmp
mov
loopne
pushf
mov
test
cmp
sub
xor
mov
or
mov
test
imul
xabort
xorl
sbb
insl
hlt
jne
adc
cmp
mov
cmp
fdivrs
push
or
fcompl
push
xchg
and
or
sti
jne
iret
in
jl
inc
daa
adc
cmp
leave
mov
inc
cmpsl
add
push
negl
mov
dec
push
pop
xchg
sbb
inc
pop
or
stos
cmp
movsb
lods
mov
pop
mov
test
ror
pop
mov
sbb
dec
out
push
js
ja
and
ja
bound
enter
add
adcl
testl
call
mov
loope
and
or
orl
jle
pushf
mov
sbb
mov
mov
lods
cltd
and
sarb
sbb
sbb
icebp
cmc
sbb
in
xchg
nop
rorb
add
xchg
rol
cmp
mov
shlb
ret
lcall
scas
repnz
into
sahf
cltd
test
push
in
inc
mov
movsw
fwait
in
popa
arpl
arpl
dec
pop
imul
scas
xor
cltd
lods
pop
xor
or
xlat
xchg
ficoml
ret
cltd
inc
paddq
sbbl
cmpsb
cmp
imul
ljmp
add
mov
rcll
push
je
fcmovne
sbb
push
lret
jae
je
adc
daa
bswap
jle
shrl
movsl
aam
xor
repnz
pop
icebp
stos
xchg
push
sbb
xchg
xchg
sbb
jg
pop
mov
movl
and
orb
mov
jnp
jl
popf
or
xchg
mov
movsl
mov
pop
lock
cs
jno
inc
jle
push
imul
mov
data16
push
sub
stos
dec
mov
lods
ds
adc
adc
ss
xor
mov
aaa
jp
ja
and
and
jb
popa
dec
aam
dec
sbb
pop
push
dec
cmpsl
pop
cmc
nop
inc
or
pop
xor
xchg
jg
sbb
push
and
jnp
or
lods
sti
xchg
jp
or
daa
and
mov
add
xor
jns
xor
aaa
inc
cmp
aad
jmp
inc
adc
leave
pop
loopne
popa
sub
filds
mov
arpl
cs
sti
sub
rcl
ret
in
cmp
adc
lret
shlb
dec
xor
mov
xor
aaa
pop
and
rolb
mov
adc
dec
data16
dec
sub
add
xchg
rcrb
adc
add
inc
jl
sub
cs
roll
icebp
mov
lock
and
inc
pop
loope
mov
imul
in
pop
adc
jmp
daa
cmpsl
pop
lahf
loope
mov
inc
xlat
lods
push
or
insb
mov
fsubs
mov
pop
jns
stc
sub
push
adc
ret
andl
sahf
adc
add
repz
adc
testl
add
mov
insb
dec
int3
fisttpl
call
scas
xor
test
sub
xchg
cmpsb
cmpsl
call
mov
jb
loope
add
dec
mov
lds
movsl
sbb
or
ficompl
repnz
imul
xchg
mov
jo
cmp
jo
or
loope
movsb
jmp
mov
mov
mov
stos
mov
dec
pop
xor
dec
imul
hlt
lea
add
mov
add
movsl
cld
xlat
jecxz
pop
adc
cli
jae
scas
sbb
rorl
cmp
mov
jnp
sbb
inc
xorl
aaa
je
dec
js
sub
mov
mul
cmp
jno
scas
js
add
fcomip
or
loopne
and
dec
imul
mov
loop
loope
ljmp
rclb
add
inc
jns
fsubrl
aaa
pop
test
and
cmp
mov
popf
mov
popa
cmp
insl
adc
xor
outsl
ja
add
insb
jmp
mov
pop
cmp
push
mov
pop
dec
mov
das
addb
add
rcl
xchg
sbbb
and
loopne
xor
sbb
aam
inc
mov
mov
outsb
sbb
leave
dec
adc
push
loop
jecxz
sub
push
push
xchg
mov
pop
add
xor
pop
push
loop
mov
inc
sub
cs
dec
dec
ret
fildll
push
jno
dec
push
push
xchg
sarl
das
jo
cmp
popa
jecxz
adcl
pop
icebp
push
arpl
adc
es
nop
pop
jns
out
pop
sub
mov
aaa
mov
scas
aam
test
dec
test
sbb
rcrl
imul
mov
push
adc
and
cmc
pushf
outsl
jbe
sbb
sub
dec
sbbl
xor
inc
shll
into
or
sbb
mov
jle
mov
cmp
cld
xchg
insl
in
imul
cwtl
add
inc
mov
ret
mov
jl
push
ret
inc
push
aam
add
mov
mov
xchg
fwait
ljmp
cmp
push
cmpsb
jle
push
and
sbb
into
push
lea
jle
xchg
inc
add
sub
lods
lret
ret
pusha
or
adc
leave
mov
lret
push
push
test
scas
xchg
inc
popa
jle
jnp
pop
inc
jo
pop
arpl
push
jecxz
jbe
mov
adc
xor
mov
shll
sbb
ret
jno
and
dec
jge
push
jge
outsl
loopne
add
adc
pop
sar
lret
jge
je
mov
outsb
cmc
pop
add
cs
and
lea
rcll
fs
push
ret
and
xor
sbb
xlat
push
ret
test
mov
dec
mov
jl
les
cli
pusha
add
or
in
loop
cltd
addl
fdivrl
xlat
cmpsl
jp
aaa
out
mov
pop
push
fwait
mov
daa
lods
jno
cwtl
std
add
cmp
sub
repnz
adc
fstl
or
or
inc
jnp
sbb
stos
xchg
and
sbb
xchg
lea
jnp
inc
jns
dec
test
popa
ljmp
loope
out
les
cmp
sbbb
xor
inc
ret
mov
mov
pop
push
fwait
jle
mov
mov
sub
stos
inc
out
push
mov
aam
out
arpl
mov
adc
push
lea
aaa
push
insb
fidivl
jecxz
mov
mov
adc
add
subl
mov
scas
push
fxch
out
mov
xchg
str
xor
add
pop
cld
xchg
push
mov
roll
lcall
mov
adc
setge
fs
dec
inc
fwait
mov
inc
push
dec
and
clc
in
pop
push
lods
jmp
std
pop
test
jle
mov
int
popa
or
js
push
dec
test
ja
pop
pushf
out
inc
arpl
int3
pop
pop
movl
dec
sbb
sbb
adc
xchg
pop
imul
test
mov
dec
ret
xchg
pop
sbb
aad
cmp
cmp
jecxz
mov
daa
jg
out
push
rolb
subl
shrl
push
in
insb
dec
cmpsb
mov
test
sbbb
mov
xchg
daa
cmp
int
shrb
cmp
push
sub
mov
jno
fiaddl
mov
adc
xchg
mov
or
aas
int
push
stc
inc
cmpsl
jo
mov
add
inc
dec
loop
xor
fucomip
nop
fstps
xorb
xchg
dec
pop
xor
sti
inc
in
push
mov
or
incb
test
or
xchg
mov
inc
or
cmc
out
inc
pushl
jo
jne
jg
push
inc
dec
lea
mov
ret
jnp
fildll
notl
jbe
jg
and
sahf
loopne
inc
out
add
and
gs
popf
test
mov
or
mov
pop
sub
pop
fidivs
aaa
mov
push
cwtl
pop
xor
mov
push
pusha
psubb
movsw
roll
outsb
mov
nop
sbb
and
pop
popa
push
adc
sub
insb
sub
mov
xor
xchg
inc
mov
icebp
lret
lret
push
call
testl
clc
inc
jecxz
inc
stos
add
xor
bound
dec
sti
or
mov
hlt
xor
icebp
imul
xor
sbb
dec
sbb
pop
mov
loopne
xchg
rol
nop
pushf
inc
aaa
pop
pop
pop
adcb
add
adc
ret
sbb
mov
cmp
je
cmp
out
jle
les
ficomps
lret
push
loop
add
xchg
js
jbe
xlat
in
mov
adc
fwait
fs
lcall
sbb
sbb
sub
fisubrs
stos
scas
lock
jns
push
jo
dec
adc
inc
sbb
loopne
xor
imul
pop
mov
inc
push
popa
stc
ret
repnz
jp
pop
lgs
sbb
cmp
dec
in
loopne
mov
in
xor
movsl
xchg
pop
mov
pop
arpl
push
lahf
bound
xor
jle
pop
cld
insl
ret
out
inc
dec
popf
inc
outsb
cld
adc
lods
mov
std
notl
sbb
cmc
and
aaa
jno
aaa
std
jl
mov
push
cmp
in
or
cmpsb
adc
mov
jns
imul
mov
push
adc
jb
cmc
add
pop
cld
cmp
cld
gs
adc
nop
inc
push
cmpl
dec
cli
and
jge
sbb
lahf
sub
adc
adc
call
xchg
test
or
mov
aam
aaa
sarb
cli
sbb
shl
mov
jl
ret
sub
push
mov
aad
cmpsl
loop
aas
xchg
add
pcmpgtd
enter
stos
rcr
ljmp
or
xlat
notb
loop
fistl
inc
fnstcw
scas
cld
xor
clc
jle
adc
ja
pop
mov
sub
and
mov
decb
cmp
pop
mov
dec
dec
xor
roll
shr
push
ss
in
cs
lods
roll
xlat
sbb
and
ss
das
insb
fistpll
stos
int
lods
xchg
adc
push
bound
xchg
fistl
mov
or
dec
dec
mov
mov
popa
or
jmp
scas
loop
icebp
ja
psubq
dec
daa
sub
and
add
jle
stos
int
clc
sub
cmp
je
rcr
cld
mov
add
and
mov
push
dec
je
loope
xor
mov
pop
mov
cli
sbb
imul
mov
jbe
push
jl
lret
adc
sarl
push
inc
sbb
xor
xchg
fnsave
pusha
ret
arpl
xchg
xlat
stc
stos
in
stc
ret
mov
fisttpl
out
sbb
dec
sti
ljmp
clc
inc
in
inc
imul
xchg
sti
pop
mov
cmp
ret
pop
test
sbb
adc
mov
fildl
loop
jno
ret
call
push
mov
jp
out
ret
aaa
stc
test
pop
add
inc
or
pop
pop
pop
dec
lahf
xchg
loopne
jg
push
inc
jno
pop
jmp
push
cmpsl
pop
jp
sbb
lds
cmp
push
popa
mov
push
jecxz
pop
clc
inc
xchg
hlt
add
fwait
shll
or
xchg
icebp
bound
push
jg
call
in
xor
int
pop
xchg
push
iret
outsb
lahf
aas
inc
sarb
jae
es
mov
fs
sub
loop
adc
imul
jl
mov
push
mov
xor
mov
adc
dec
mov
lret
loop
mov
dec
adc
inc
mov
imul
ja
scas
adcb
nop
enter
adc
xchg
fistps
xlat
xchg
adc
sub
test
inc
cmc
imul
js
push
pop
outsl
mov
or
dec
rorb
sbb
daa
rclb
loopne
clc
inc
mov
mov
mov
xchg
or
mov
fwait
mov
xor
jecxz
gs
loopne
inc
or
inc
stos
adc
cmc
rolb
call
xchg
xor
mov
cmp
mov
jp
stos
pop
and
push
add
push
scas
adc
mov
sub
test
les
or
jmp
test
sbb
jg
inc
xchg
sub
out
mov
adc
or
popf
ret
divl
cmc
mov
cwtl
pop
adc
pop
pop
adc
imul
add
scas
fdiv
pop
pop
cmp
mov
insb
lcall
jmp
inc
ss
clc
push
daa
les
shrb
sub
stos
or
sarb
jge
clc
sub
add
dec
mov
cmp
sub
xor
sub
out
push
hlt
mov
jb
xchg
xor
xchg
adc
dec
dec
and
mov
inc
adc
mov
into
sarb
jle
lret
pop
jnp
cmpsl
lds
add
nop
outsb
cmp
pusha
outsb
enter
add
dec
outsl
or
push
push
popf
call
and
fsts
dec
jmp
dec
lcall
adcb
and
mov
lret
jnp
test
jp
inc
lcall
aad
into
jecxz
popf
lret
cmpsb
adc
incb
addb
push
loopne
push
test
rolb
mov
call
stos
mov
cmp
loop
push
andb
dec
and
sub
fmul
dec
lcall
ljmp
mov
sub
bound
adc
movsl
cmp
test
inc
clc
adc
add
js
gs
dec
adc
dec
pop
mov
in
loope
js
sar
and
pushf
dec
fwait
dec
in
jle
shlb
jbe
test
mov
jne
mov
xor
lea
jb
add
jg
aad
xor
int3
inc
testb
or
icebp
or
inc
incb
jg
popf
sbb
fwait
call
pop
mov
loopne
les
push
push
popf
sub
and
xchg
xor
sbb
cmpsl
js
cmp
cmpl
xchg
add
nop
clc
xchg
fwait
jno
cmp
and
add
inc
mov
push
push
rcrl
sub
aaa
adc
das
clc
movzwl
jle
test
sbb
inc
xchg
mov
push
xor
sti
add
mov
adc
test
test
sbb
frstor
push
orl
jle
push
adc
push
notl
pushf
sub
fcompl
adc
fnstsw
sub
incl
sahf
and
pop
push
lea
shl
clc
repnz
ror
push
cmp
inc
inc
rorb
jg
xchg
ljmp
hlt
popf
jne
rcr
mov
adc
mov
dec
jmp
call
pop
cld
pop
push
pop
iret
cmc
fnsave
add
mov
add
popf
fwait
sub
cld
fistps
sub
aas
lcall
xor
fldl
mov
pop
mov
push
jne
mov
mov
repz
add
pop
cmp
lock
in
inc
in
and
test
daa
add
pusha
les
decl
adc
nop
lcall
xchg
add
shll
cmpsb
lcall
inc
inc
jns
fmulp
clc
in
movsb
mov
add
push
jae
adc
adc
inc
and
std
subl
or
mov
mov
cld
inc
imull
mov
into
dec
lret
test
int3
test
sbbl
pushl
mov
daa
fcoms
cld
rolb
cs
pop
lcall
in
setge
imul
or
add
lods
ret
lret
cwtl
xorl
sbb
push
dec
push
cvtpi2ps
addb
jp
jno
aaa
jmp
es
pushf
shl
pusha
mov
shrb
ret
push
repnz
dec
mov
std
and
adc
int
jnp
adc
loop
int
or
stos
push
iret
js
clc
jnp
mov
roll
dec
fildll
pop
or
scas
popf
xchg
imul
mov
pusha
inc
and
cmp
add
xlat
push
push
adc
lock
aas
ret
xor
or
jo
in
lock
cmp
cmpsl
lret
int
es
mov
cmp
xor
inc
mov
jbe
fisttps
call
jbe
pop
xor
shlb
add
movsl
shl
xor
clc
cmc
push
rcr
les
mov
sbb
test
xor
cmpsl
jbe
add
test
scas
out
jb
inc
jmp
insl
xor
test
jno
mov
daa
test
cmp
ss
js
or
or
enter
xchg
push
inc
push
jecxz
add
mov
jle
lret
adc
push
and
jge
add
inc
push
rclb
mov
sub
mov
sahf
or
pop
decb
jae
pop
or
adc
pop
mov
jbe
in
scas
decb
jg
add
filds
push
sub
fistl
sub
fsubrp
sbb
mov
jnp
in
sbb
sbb
ret
test
stc
stc
push
sbb
js
cmp
xlat
iret
cmp
cli
pushf
mov
cmpsb
negl
mov
add
in
jl
hlt
popf
jmp
ds
mov
mov
rclb
loop
out
xor
aaa
add
lds
mov
sti
mov
add
adc
jg
daa
pop
pusha
mov
lock
add
bound
fwait
out
into
test
push
jg
adc
cld
pop
push
shll
mov
sbb
fdivr
cmp
lock
and
imul
push
dec
add
or
jbe
inc
lods
addl
xor
test
pop
mov
dec
sub
pop
sbb
mov
lea
push
cmp
inc
js
push
add
cmp
mov
and
xchg
inc
inc
call
cmpsb
pushf
cli
mov
xchg
jbe
pop
popa
dec
mov
xchg
xor
xor
push
daa
loope
negb
xor
mov
fisubs
dec
jecxz
repnz
shrl
inc
sub
jg
dec
testb
inc
push
dec
jp
arpl
lods
stc
jo
je
jmp
stos
subl
insl
test
and
sub
push
mov
jmp
adc
and
push
inc
sbb
sti
test
bound
add
cli
stos
pop
adc
in
or
enter
add
scas
jg
mov
or
pushf
dec
mov
and
addr16
sub
daa
cld
scas
in
mov
in
movsb
sub
sub
jbe
pop
push
cli
call
pushf
aaa
sub
repz
inc
adc
or
loop
xchg
xor
jmp
mov
dec
divb
xchg
mov
or
adc
mov
ficoml
pop
fildl
inc
test
nop
jge
jl
dec
shlb
sbb
mov
inc
sub
stc
icebp
jmp
pop
cmpsl
xchg
inc
jp
incl
ret
mov
lahf
std
enter
stos
pop
and
cs
ret
rorb
out
or
outsb
sbb
cld
inc
shrb
cmp
adc
cmp
loope
push
arpl
mov
popf
dec
leave
or
bound
jecxz
jo
pop
adc
lock
sub
nop
stos
mov
dec
cmp
insb
cmp
mov
mov
inc
xor
outsb
pop
sbbl
jmp
pop
add
or
stc
sub
int3
arpl
add
jmp
jne
divl
fld
aad
mov
jns
inc
jae
out
rcrl
pop
adc
add
mov
mov
scas
push
xchg
mov
orl
pop
pushf
in
in
sbb
or
xor
pop
jb
adc
mov
aaa
sub
bound
lret
rorl
inc
mov
xor
pop
in
popf
loopne
cwtl
inc
xchg
add
and
pop
mov
cmpsb
mov
jno
cmp
cli
mov
outsb
xorl
cwtl
push
inc
lods
xchg
insb
in
es
rorl
frstor
fldcw
stc
repz
xchg
rcrb
out
outsb
mov
push
push
mov
inc
sbb
cmp
in
movsl
xchg
xchg
mov
lret
clc
andl
add
jmp
adc
inc
push
adc
sub
push
out
cmpsb
aas
pop
or
arpl
inc
in
imul
mov
rcl
pop
pop
daa
fsubs
push
enter
loope
arpl
adc
adc
mov
cmpsl
push
adc
xor
bound
stos
mov
lods
divl
push
mov
jnp
dec
dec
mov
cwtl
xchg
in
lcall
mov
inc
sbb
cs
subl
push
push
adc
stos
cmpsl
shrl
add
xchg
shll
xor
sbb
xchg
push
loop
sbb
and
test
rcrl
rcrb
sub
fbld
out
inc
xchg
mov
ljmp
pop
mov
push
and
jmp
lods
and
insl
xor
add
bswap
je
pop
inc
mov
and
subl
rclb
sti
push
inc
jnp
cmp
and
mov
cmc
jnp
jle
iret
arpl
mov
outsl
into
in
ds
mov
clc
push
imul
mov
sub
std
mov
popf
and
lret
scas
imul
or
sbb
mov
bound
dec
pop
push
and
pushf
cmc
lods
inc
cmp
dec
ljmp
pop
pop
pop
imul
lret
les
icebp
dec
pop
push
cmp
pop
mov
pop
mov
fwait
test
movsl
add
pop
inc
fistpll
mov
and
cmpsb
adc
xor
sub
cmp
mov
sbb
and
in
xor
push
sbb
push
sbb
and
and
and
dec
sbb
mov
adc
scas
sbb
xchg
mov
push
movsb
xchg
pop
nop
inc
mov
mov
addb
dec
inc
adc
lea
fwait
pop
outsl
cmp
jne
jg
out
nop
cmp
sahf
loopne
mov
or
and
insl
or
and
mov
loop
adc
mov
les
add
test
cmp
jnp
xlat
adc
out
outsb
adcb
mov
ljmp
or
pop
jne
xchg
popf
inc
pop
cmpsb
popf
js
int3
icebp
mov
ret
add
jno
dec
fildl
jae
dec
lret
xor
aam
scas
lods
je
ljmp
stos
or
or
adc
jge
mov
and
scas
inc
add
hlt
aam
les
xlat
and
mov
xchg
pop
pop
lcall
pop
cmp
inc
ss
add
cmc
cmp
mov
xchg
popa
and
xchg
in
mov
dec
pop
arpl
add
dec
out
add
mov
ret
sbb
imul
dec
jne
gs
or
sbb
add
lcall
pop
mov
loop
or
add
mov
jae
xchg
test
mov
push
push
sbb
jnp
push
or
mov
out
add
or
xchg
mov
or
ret
dec
sub
xor
xchg
ss
xor
imul
ja
imul
jmp
shlb
pop
or
imul
stos
adcl
in
sub
and
adc
sub
xorb
xchg
pop
pop
jle
sti
cmp
dec
mov
jmp
out
andb
push
loopne
popa
arpl
pop
cmpsl
fwait
adc
cli
test
test
aad
rcr
mov
and
xchg
fwait
enter
mov
pop
mov
insb
test
xor
shr
cld
scas
mov
negl
dec
sbb
popf
les
sbb
mov
call
jns
sti
pusha
fwait
pop
mov
add
movsl
cs
sub
xor
idivb
mov
xor
sti
pusha
outsb
stos
jmp
ret
jmp
stos
mov
and
push
pop
repz
mov
push
out
xor
das
dec
call
push
xor
pop
fmuls
or
in
lea
sahf
mov
add
push
popa
daa
in
or
aaa
std
add
hlt
vpunpcklbw
dec
sti
gs
out
push
cs
cmp
cli
or
in
cmp
ret
pop
popa
adc
and
js
mov
mov
cs
lret
jp
sbb
mov
jne
lret
andl
or
mov
cmp
test
ljmp
sub
pop
add
loop
leave
add
addr16
push
add
and
pop
pop
icebp
ja
fstl
push
and
and
cmp
outsb
mov
push
or
addps
xchg
faddl
mov
xor
sub
add
fildl
sbb
stc
mov
xor
repz
adc
xchg
cld
sub
and
cwtl
pop
dec
pop
xchg
int3
std
mov
gs
dec
cmp
cmp
push
movsb
cwtl
les
loope
or
adc
das
nop
mov
mov
into
xorl
dec
orl
roll
push
and
adc
jnp
adc
sbb
or
scas
mov
xor
cmp
adc
push
adc
shl
inc
movsb
mov
jmp
adc
mov
inc
or
movsb
jecxz
cmpsl
int
cld
pop
mov
out
push
xchg
stos
cmp
dec
mov
sbb
adc
push
xor
lock
lea
xchg
stos
mov
repz
fwait
push
leavew
push
jns
push
mov
pop
push
je
inc
sub
jo
inc
test
outsb
lods
xor
cmp
cmp
jge
lods
inc
push
scas
cmp
fistpll
sbb
les
pop
adc
sub
mov
add
rcll
cmp
mov
lahf
pop
mov
push
cs
lahf
xchg
rorl
movsb
or
mov
adc
mov
ja
push
sbb
stc
pop
iret
iret
or
fs
mov
jae
mov
mov
jmp
popf
xor
mov
rcr
loop
and
test
mov
xchg
les
mov
inc
inc
jnp
push
cmp
pop
lock
push
xchg
or
int3
and
inc
jg
stos
pop
sbb
push
sbb
in
mov
add
in
jns
mov
popa
addr16
loop
int
sub
lock
inc
adc
mov
lret
shr
xor
or
xchg
adc
dec
out
and
dec
mov
jbe
test
pusha
arpl
icebp
xorl
sub
xor
push
push
ja
jmp
jp
stos
test
call
mov
mov
xor
jecxz
movsl
popf
jns
push
push
mov
test
or
lds
jecxz
mov
test
mov
dec
test
mov
pxor
sub
enter
push
dec
xchg
hlt
lock
pop
movsb
shlb
pop
jne
pusha
imul
inc
dec
cmp
scas
ja
sbb
sahf
loope
es
mov
stc
cltd
inc
pop
fwait
js
rorb
dec
dec
and
test
fimull
mov
pop
mov
dec
jns
std
in
sarl
cs
es
push
xor
sub
test
mov
inc
ljmp
or
imul
or
inc
adc
and
xchg
mov
push
loop
jl
push
sub
js
jle
std
out
xor
add
xchg
mov
imul
inc
adc
mov
mov
movsbl
lahf
mov
sub
xchg
fistpl
sub
sti
stos
cmpsl
jge
and
decb
adc
adc
mull
loope
out
loop
dec
das
sbb
push
jle
dec
dec
cmp
mov
inc
in
or
nop
cmp
dec
jne
outsb
xorps
imul
aad
ss
adc
inc
mov
pop
mov
test
out
mov
xor
or
movsb
inc
icebp
fucompp
nop
aas
mov
aaa
inc
sub
add
je
or
add
dec
and
jo
xchg
out
mull
lods
mov
hlt
push
inc
cwtl
mov
scas
mov
dec
mov
icebp
push
jns
cltd
jmp
ficoms
dec
test
lcall
mov
adc
mov
lcall
lds
call
or
rcrb
push
int
ljmp
cld
or
sbb
inc
rol
mov
jae
adc
lds
mov
lret
out
mov
js
lods
es
adc
dec
sub
jb
std
dec
xor
movb
pop
dec
pop
ret
xlat
pop
lea
mov
cld
jmp
xchg
pop
cmp
rolb
bound
or
jbe
aaa
movsb
fld
inc
clc
dec
mov
jbe
test
out
mov
lock
cmp
arpl
add
dec
test
pop
scas
cmp
sbb
stos
fimuls
cld
cwtl
dec
sbb
sbb
lock
bound
lea
fs
push
push
push
js
ss
mov
clc
aaa
lret
movsl
fdivp
cmp
xchg
ret
dec
fimuls
std
pop
and
pop
fwait
xor
or
pop
sbb
js
push
cs
in
pusha
mov
xchg
adc
daa
xorb
jbe
cmp
cltd
sub
mov
popa
testl
or
loop
push
pop
lcall
xlat
mov
push
and
cwtl
push
sub
pop
mov
add
cmpsl
lret
sub
arpl
es
xchg
and
jge
aad
out
and
or
sub
fildl
cli
addb
mov
scas
xorl
or
add
and
jno
ret
jmp
adc
mov
dec
mov
lods
or
stc
sarl
les
aas
hlt
addl
dec
pusha
daa
cmpb
jl
incb
cwtl
jbe
jmp
inc
pop
and
jl
inc
insl
adc
repz
les
rcr
xor
jnp
xchg
cwtl
adc
dec
stos
push
shrb
xchg
jae
push
push
cmpb
and
add
or
std
mov
jl
jecxz
int
sub
inc
pusha
jecxz
adc
fnstcw
sbb
icebp
mov
and
inc
cmpsb
je
rorl
sbb
push
pop
or
loopne
mov
push
shll
movsb
push
or
aaa
movsl
xchg
shl
or
lret
lret
stos
imul
mov
lds
jmp
and
imul
loope
pop
pop
imul
mov
insb
sub
mov
aad
out
mov
cmc
ljmp
dec
in
push
adc
push
sub
int3
dec
gs
insl
push
sbb
imul
or
scas
mov
das
cmp
in
out
bound
push
inc
pop
adc
jmp
loopne
rclb
leave
adc
dec
sbb
or
mov
fnstenv
push
mov
sbb
push
hlt
sbb
add
fdivrs
sbb
mov
push
mov
insb
add
xchg
inc
imul
inc
sbb
jmp
insl
fs
add
jb
and
xor
js
loop
cmc
lret
add
repz
add
dec
in
insb
insb
clc
sbb
ret
cmpsl
icebp
or
pop
inc
pusha
add
inc
xchg
ss
shrl
sub
bound
into
sub
dec
in
pop
and
or
cwtl
mov
shll
mov
mov
inc
out
pushf
lods
xor
das
mov
mov
cli
jno
mov
push
sub
cltd
or
sbb
fstpl
push
insb
push
aaa
jmp
bound
xchg
mov
xchg
mov
jo
jnp
std
push
lret
in
mov
stos
jno
cmc
pop
push
sub
mov
pop
or
jecxz
pop
jp
cmp
pop
fldenv
jg
adc
sbb
dec
cmpl
sbb
addr16
sub
cmc
and
mov
jge
je
es
test
cmc
sbb
adc
adc
pop
lock
push
or
push
add
mov
sub
or
adcl
shlb
lods
ret
fdivl
push
imul
outsb
mov
jmp
lea
xor
punpckldq
and
stos
aad
jo
cs
daa
out
mov
incl
clc
add
jno
inc
inc
fmul
test
and
xor
add
imul
adc
int
outsl
shrb
mov
ss
adc
sub
or
fdivr
mov
push
adc
inc
test
lods
das
mov
int
rep
or
mov
mov
xchg
push
int
push
ss
add
xchg
cmp
jb
cld
enter
fdivp
mov
lods
sub
mov
mov
cs
movl
stos
sbb
cltd
leave
rcl
aas
jbe
test
xchg
lea
or
mov
cmpsl
test
aas
shlb
xor
sub
out
xor
cmp
or
loope
notb
pusha
sbb
push
les
ret
jno
jp
icebp
std
sbb
repnz
sub
mov
jbe
popa
jl
out
push
bound
inc
ret
mov
push
jl
inc
sub
sub
lea
pop
fwait
sbb
or
mov
or
stos
jno
aaa
inc
loopne
je
push
pop
push
mov
and
les
add
leave
push
sub
ds
push
fstps
mov
mov
inc
loop,pn
nop
fwait
dec
pop
and
rcrl
addl
enter
sbb
mov
pop
push
test
les
push
or
stos
test
cld
dec
pop
add
xchg
xor
je
rcrl
sub
push
adc
mov
dec
dec
or
mov
scas
shrb
pop
jp
mov
adc
jns
test
jecxz
dec
pop
lock
xchg
arpl
lods
aad
jg
bound
std
mov
iret
je
mov
repz
imul
add
cmpsl
jb
dec
aas
in
xchg
mov
lahf
jb
add
mov
sbb
and
lock
inc
add
mov
cmc
js
cmp
shlb
pop
inc
je
cli
std
ret
mov
dec
add
mov
pop
idivb
jge
imul
xlat
sub
lret
adc
cld
add
push
adc
xorb
cmp
inc
or
rolb
mov
sbb
cmp
mov
test
decb
add
cmp
inc
out
popf
iret
mov
iret
ljmpw
or
pop
cmp
mov
jp
pushf
and
test
add
test
into
add
jae
dec
mov
stos
jbe
jmp
ret
push
test
xor
rcl
test
push
lds
out
mov
sub
push
decb
dec
xchg
iret
popf
cmp
adc
sarb
ret
inc
outsb
lods
jne
pop
lock
xchg
sti
hlt
ds
scas
fs
testb
sti
scas
and
aas
test
ljmp
mov
leave
or
mov
out
push
pop
mov
inc
in
bound
cli
pop
push
sahf
mov
or
scas
inc
bound
stc
push
outsl
mov
cmp
aaa
lcall
pop
dec
mov
cmp
scas
mov
daa
cltd
mov
pop
inc
add
mov
cmc
inc
test
movsl
mov
add
jg
aad
icebp
mov
mov
mov
jb
test
push
in
pop
mov
push
sbb
or
add
mov
push
push
lcall
clc
sbb
sub
and
pop
xchg
icebp
inc
mov
xchg
add
aaa
push
stc
mov
loope
inc
push
je
out
lcall
push
mov
mov
xchg
pop
out
jl
daa
cmpsl
push
add
call
pushf
sbb
jmp
mov
cmpb
push
hlt
cld
sub
leave
jle
pop
push
cmpsb
sbb
imul
in
es
or
mov
ret
out
pop
dec
fistl
adc
mov
subb
xor
jno
movsl
inc
outsl
leave
push
insb
push
jge
inc
mov
stc
in
xchg
and
dec
jl
int3
push
or
ss
jge
dec
mov
pushf
sbb
pop
out
loopne
mov
subl
arpl
jmp
inc
dec
xchg
ja
lock
daa
cmp
cmpb
icebp
loopne
mov
faddl
cmp
xorl
pop
fsts
pop
mov
test
push
addb
gs
push
andl
insb
data16
pushf
sarb
sar
lea
push
pop
pop
jo
pop
loopne
ljmp
pusha
sbb
icebp
push
inc
ds
sbb
cs
pushl
addr16
ret
pop
in
push
rcrb
mov
or
imulb
aam
add
jne
push
mov
call
lret
push
push
push
out
jg
mov
lret
xchg
insl
mov
sbb
les
loope
add
pop
outsl
jo
pop
mov
scas
loope
xchg
pop
cmpsb
sub
sbb
gs
cs
cmp
cmp
std
test
movsl
call
sub
lods
push
jg
jmp
and
xchg
push
jmp
mov
lods
add
pop
cmp
jmp
stos
lds
es
les
pop
cli
test
rorl
popa
mov
xchg
push
divl
dec
imul
dec
xor
data16
sub
mov
mov
add
clc
jo
aam
iret
cmpsb
jecxz
push
loope
fcoms
loopne
outsb
and
pop
pop
into
outsb
dec
and
mov
pop
loope
loop
or
lock
and
xor
scas
push
mov
push
push
es
xchg
cmp
or
and
inc
mov
push
ret
sbb
sub
aaa
cs
test
cltd
je
lcall
or
mov
out
dec
subb
ss
cli
add
out
dec
mov
stc
loopne
push
test
adc
dec
jp
insl
fimuls
push
pop
dec
mov
scas
sahf
andb
push
pop
cmp
es
xor
inc
push
push
repz
lahf
push
cld
mov
aas
adc
push
call
and
scas
mov
hlt
andl
pop
sbbb
mov
push
stos
aad
mov
or
and
sub
iret
or
and
push
add
mov
add
mov
fwait
push
loope
notb
inc
sahf
push
iret
lea
adc
ja
cmp
cli
dec
or
call
divb
sti
ljmp
or
adc
pop
push
add
loope
cmp
inc
xor
les
shlb
pop
ja
outsl
dec
jl
sub
sbb
mov
daa
pop
cmp
stos
jle
faddl
rolb
mov
pop
jmp
bswap
ret
and
int
push
inc
xchg
movb
mov
cmc
inc
orb
loope
adc
and
hlt
or
cld
add
pop
push
cmp
and
xchg
test
je
out
dec
out
mov
andl
cli
push
jne
sbbl
call
xchg
hlt
in
or
mov
dec
test
mov
add
inc
inc
loopne
pop
inc
xorl
mov
lahf
jge
cmp
pop
mov
ss
fdivrl
push
inc
sbb
mov
out
movsb
pop
mov
fwait
adc
xor
push
or
or
js
dec
neg
jne
add
jle
sahf
outsl
adc
push
jge
lock
mov
rolb
fidivrl
outsl
push
ds
daa
sub
cli
mov
cmp
push
mov
in
and
sti
jae
gs
loopne
or
sub
inc
xchg
xchg
mov
push
inc
or
sahf
push
adc
push
incl
or
mov
add
cld
lock
sub
add
mov
cmp
shlb
loopne
andps
adc
sbb
in
es
mov
pop
aaa
mov
pop
aaa
push
ss
call
sbb
fs
or
and
cld
ljmp
sahf
pop
push
orl
push
fistl
icebp
add
das
or
popa
shl
jae
mov
mov
mov
cwtl
mov
add
outsl
xchg
cmp
in
mov
test
inc
jmp
fcoml
iret
jp
shlb
loope
rorb
ja
push
inc
add
mov
xchg
adc
mov
or
shrl
mov
mov
or
insl
fimull
addr16
test
stos
sbb
pop
sbb
ljmp
sbb
mov
addr16
dec
es
fidivrl
aad
adc
cmp
iret
xchg
out
mov
and
cmp
mov
jb
fcomps
add
mov
xchg
clc
mov
ja
sbb
lds
cmpsl
pop
pop
sbb
xlat
lahf
cmc
fisubs
setnp
repnz
mov
jo
daa
ss
add
cs
cs
mov
xchg
adc
dec
lea
cmpsb
mov
mov
add
loop
add
sahf
fmuls
clc
ss
ss
add
mov
mov
es
jno
imul
and
xor
xor
add
sub
or
mov
xorl
mov
push
pushf
call
enter
icebp
add
aam
int
pusha
loope
mov
add
and
loop
jno
sub
outsl
mov
loop
dec
shlb
in
sub
push
sbb
pop
jg
pop
push
hlt
mov
in
dec
pop
js
push
adc
ret
push
xor
cmpl
mov
ds
testl
jne
bound
inc
and
inc
into
std
sbb
mov
mov
stos
jg
adc
mov
add
or
fisttpll
or
mov
icebp
lret
add
aam
aad
scas
hlt
call
cmp
stos
jl
test
inc
lret
notl
arpl
sub
jg
fidivrl
sub
add
xor
mov
test
call
or
popa
std
mov
sbb
ret
cld
jecxz
shrl
jl
je
shlb
jg
xchg
call
xor
push
lea
hlt
jb
adc
adc
adc
scas
test
test
outsl
aaa
pop
insl
mov
cltd
adcl
aaa
pop
std
lods
adc
sub
in
leave
stos
cli
dec
data16
jge
call
mov
addr16
sbb
hlt
aam
xor
negb
jl
dec
or
test
inc
fdivrs
inc
jecxz
hlt
add
sbbb
xorb
or
mov
cmp
fucomi
xor
dec
sbb
and
fildl
dec
in
sarl
sbb
xchg
scas
out
or
lods
pop
ret
add
add
add
cmp
sbb
insl
loop
or
dec
push
hlt
and
or
imul
push
loope
out
push
ffree
xor
out
push
cmp
or
jge
test
inc
mov
adc
fwait
arpl
fdivrl
cld
pushf
mov
inc
mov
jp
push
xchg
push
inc
aas
loope
cmc
push
addr16
adcb
and
xor
or
popa
jg
aam
cmc
or
outsl
mov
pop
sbb
lret
mov
jecxz
mov
nop
sahf
add
pop
aas
loope
lock
and
inc
leave
loop
into
adc
xor
push
sbb
sub
jecxz
mov
sub
aas
pop
mov
inc
mov
cmpxchg
adc
and
out
cmp
push
jecxz
mov
and
xchg
jl
sahf
cs
jge
bound
add
push
sub
ds
xlat
cmp
jl
mov
adc
rclb
mov
fildll
rcrl
mov
call
sti
inc
mov
data16
xor
jae,pt
mov
call
jno
lds
inc
inc
mov
jo
jg
cmp
lods
test
cmp
mov
push
pop
insb
mov
push
mov
jno
push
sahf
push
xor
cmp
cld
dec
das
dec
mov
push
xchg
pop
jno
add
mov
jl
xchg
fidivl
sub
cli
mov
andb
repz
sti
sbb
adc
add
lds
fistl
repz
xor
hlt
dec
jg
push
andl
adc
cmpsb
andl
push
shr
adc
leave
iret
push
movups
enter
jns
loope
adc
or
inc
add
cltd
int3
mov
stos
xchg
and
and
mov
adc
lahf
cmp
test
ret
pusha
test
sub
sub
fwait
cmp
xchg
imul
jmp
cwtl
fadd
ret
dec
sarb
jb
sbb
loope
rolb
push
negb
jecxz
fs
fs
jne
aaa
lock
aaa
lods
dec
rclb
daa
or
pop
xor
pop
jmp
pusha
adc
add
jle
aaa
mov
pop
jb
pusha
call
mov
xor
jg
sub
dec
movsl
fisubs
or
pushaw
inc
sub
hlt
and
divb
ret
push
hlt
push
jg
adc
xor
cmp
add
fucom
mov
pop
icebp
es
sub
push
mov
lock
push
push
cmp
sahf
mov
bound
mov
xor
rcrl
ljmp
sbb
push
adc
inc
xor
jecxz
mov
ds
dec
clc
mov
in
insb
les
iret
adc
cs
rolb
mov
cmp
sbb
ds
cmpb
xor
or
cmp
sbb
pop
scas
pop
jecxz
or
in
ret
pop
mov
push
add
xor
dec
adc
insb
aas
mov
xchg
cmp
ljmp
push
lock
or
test
out
jl
push
xchg
rolb
mov
push
fadd
loopne
cmpb
mov
push
push
pop
jl
pop
ret
pop
push
cmovl
scas
fdivrp
xor
mov
mov
shl
push
xchg
mov
into
adc
je
arpl
push
push
fidivl
xor
push
sahf
add
xchg
add
add
clc
mov
pop
mov
mov
out
jg
push
daa
lss
hlt
cmp
adcl
daa
icebp
mov
ret
jmp
ficoml
ret
bound
mov
rorl
dec
push
cmpsb
mov
push
outsl
dec
jecxz
add
out
fbstp
lock
inc
inc
or
xchg
inc
pop
xchg
andl
push
add
pop
popf
movsb
or
pop
pop
cmc
lahf
push
sbb
push
mov
fidivl
jo
and
loopne
test
jo
cmpsb
push
sub
js
lahf
clc
bound
jae
cmpsl
push
scas
pushf
out
aaa
inc
idivl
cmp
ret
out
sbb
mov
sbb
xor
pop
push
movsb
cwtl
push
fwait
inc
or
js
mov
lock
fistpll
aaa
rorl
in
push
xchg
push
xchg
in
std
lods
push
ret
cltd
pop
loope
shll
jl
mov
aas
jno
cs
add
and
adc
push
mov
popa
add
inc
out
pop
inc
pop
cli
shlb
mov
cmp
std
sbb
les
push
xor
sbb
loop
and
decl
mov
enter
incl
popa
loopne
push
jnp
cs
cmp
clc
outsl
inc
fs
xor
js,pn
jecxz
ja
jne
cmp
pop
cmp
add
pop
pop
add
and
cmp
sarb
jecxz
add
add
jl
mov
dec
movsb
hlt
stos
in
mov
sub
lods
or
call
data16
outsl
ja
xor
or
xor
dec
aas
pop
outsl
ja
mov
call
cmp
pop
push
mov
nop
mov
mov
jle
jmp
push
adc
dec
pop
jle
daa
pop
xlat
mov
fildll
decl
test
inc
lret
adcl
pop
mov
sbb
xchg
jmp
inc
push
jle
add
dec
inc
into
imul
repnz
daa
mov
fildll
jbe
fldcw
stc
xor
out
orl
add
sub
shrl
fldenv
and
jns
jno
fcomps
push
imul
cmp
lock
sub
out
shll
outsl
scas
clc
test
or
xchg
fildll
pusha
sub
movsb
push
js
arpl
pop
hlt
inc
in
mov
pop
leave
xchg
mov
dec
clc
test
lods
mov
into
sahf
nop
lret
int
cmp
jmp
addl
mov
pop
mov
movsl
int
clc
inc
out
push
xor
push
push
push
popf
jl
clc
add
dec
jp
in
dec
ja
insb
jge
rcrl
xchg
sbb
inc
lret
or
lods
mov
sub
leave
pushf
dec
lock
mov
push
adc
sar
jg
mov
inc
dec
daa
push
ljmp
in
and
ss
fstp
and
sbb
xchg
dec
incl
and
lret
jg
loopne
jmp
adc
clc
or
mov
or
stos
negb
sub
cmp
add
in
add
adc
pop
ds
dec
sbb
inc
rol
adc
and
pop
sub
shr
ss
push
xchg
pop
push
jbe
lds
fs
adc
loopne
and
movsb
push
jl
sub
jp
push
mov
xor
fsubrl
fdivs
in
test
ret
pop
loopne
adc
pop
cld
loopne
sbb
pop
fwait
sub
ret
addl
je
and
jo
out
cmp
and
cmc
xrelease
mov
sub
pop
mov
fisubrl
cld
adc
adc
and
lock
push
inc
dec
out
and
test
pop
mov
pop
cmpsb
mov
or
cmp
pop
push
cmp
enter
dec
call
sbb
jmp
or
movsb
xor
imul
jno
mov
sahf
mov
pop
enter
sub
dec
push
xchg
jo
push
dec
loop
insb
lret
jae
orb
inc
or
stos
inc
xchg
add
movsb
xchg
negl
inc
loopne
std
out
mov
and
sti
dec
adc
adc
cmp
jno
mov
movsl
fildl
lods
mov
cmp
mov
add
das
clc
lods
loope
or
jl
popa
jbe
inc
xchg
in
adc
fisttps
jo
jb
add
js
jge
insb
inc
loop
or
data16
in
cmp
add
ret
pop
and
adc
push
cmp
push
xchg
test
cmpb
inc
out
aas
pusha
mov
xor
in
arpl
inc
add
rorb
jnp
lds
lea
mov
test
mov
and
es
addl
or
sti
loope
push
in
adcl
loopne
xchg
xchg
xchg
mov
adc
xchg
push
fistps
ret
movsb
sbb
dec
movsl
or
test
adc
sub
jl
sbb
mov
gs
outsl
insb
add
add
add
mov
pop
shr
cmp
mov
xor
psubd
push
test
fs
dec
pop
stos
fists
adc
jnp
lret
ret
inc
or
and
add
ret
or
aam
ja
mov
xchg
cmp
push
dec
mov
int3
cmp
pop
clc
fcomps
cld
sbb
cmpsl
icebp
jns
je
jmp
adc
push
test
mov
inc
pop
test
add
and
fs
xchg
xchg
ret
push
push
jecxz
addr16
ficomps
lcall
cmp
iret
cmc
std
and
pop
js
insl
outsl
sub
out
cld
test
cmpl
adc
mov
xor
sti
filds
xchg
sub
je
sti
xchg
shlb
cwtl
mov
lret
test
insb
dec
iret
test
push
dec
push
lods
adc
icebp
and
sti
and
sub
cmp
pop
sub
rep
or
or
incb
test
xchg
pop
test
inc
sub
sub
add
adc
lea
test
orb
add
rorl
add
loop
ja
or
lret
jb
clc
sbb
pop
in
test
dec
loop
xchg
aad
loopne
ret
rol
cwtl
cmp
test
sub
pop
pop
or
ljmp
cltd
pop
adc
sub
sbb
lds
inc
xchg
sahf
insb
sub
inc
test
shll
inc
ja
jle
cs
sub
lret
incb
faddl
out
xchg
jle
mov
xor
push
out
mov
mov
dec
push
jae
fwait
cmc
bound
inc
sarl
loopne
jae
pop
adc
addl
sbb
pop
push
jno
stc
repnz
mov
std
cmpb
lock
sbbl
scas
mov
pop
jnp,pn
jle
outsl
mov
add
jnp
rcll
jb
jge
es
sti
data16
push
pusha
jl
sahf
iret
inc
push
sbb
gs
data16
xchg
jg
dec
push
cmpl
push
inc
test
lahf
pop
pop
clc
pusha
jns
push
push
pop
inc
pop
mov
dec
pop
cli
sbb
and
jne
or
push
clc
inc
sbb
sbb
cmpsl
dec
dec
sbb
fistpl
xor
push
lds
lods
xlat
and
inc
push
aam
rcrl
sub
inc
js
inc
xor
jecxz
nop
clc
orb
sbb
aaa
icebp
jb
sbb
loopne
inc
dec
jge
sbb
mov
arpl
or
or
and
and
loopne
push
cli
aam
inc
jo
out
cmpsb
dec
jns
pop
adc
and
or
inc
loop
seta
cmc
stos
pop
clc
push
movsl
sub
sub
das
push
dec
jns
xor
add
call
mov
gs
sbb
sub
divb
aad
add
add
push
mov
sbb
xchg
and
adc
pusha
inc
xlat
rclb
sub
js
das
arpl
fildl
ja
int
lock
movsb
pop
testl
shl
lret
sbb
or
xor
sar
sub
mov
or
lods
jno
sbb
pop
cmp
lods
repz
or
inc
ds
fxtract
pop
push
test
or
push
shll
lahf
xor
sbb
cmp
loope
jle
inc
push
and
xchg
xor
arpl
mov
fistpll
dec
pop
jno
popf
nop
jo
jnp
cmp
add
xor
pop
jo
jge
stos
nop
popl
aad
or
dec
sub
jl
pop
lcall
push
mov
jp
sub
jno
xor
cld
test
inc
stos
lcall
sbb
repnz
xor
cmpl
push
pop
sbb
aam
mov
sarb
mov
xchg
cmp
push
aas
dec
adc
sbb
adc
mov
jecxz
xlat
mov
aaa
stos
cmp
mov
pop
hlt
or
ljmp
into
sbb
fs
push
rcl
fimull
les
jle
loope
ss
lahf
mov
or
push
mov
fldl
ja
outsb
loope
inc
cmp
aad
cld
stc
lods
lcall
imul
cmpsb
xchg
sub
push
and
enter
jecxz
pushl
ret
jg
scas
xchg
xor
mov
pop
push
es
pop
insb
xchg
pop
jns
lahf
mov
ds
arpl
fwait
and
push
sti
bound
xchg
pop
loope
in
pop
ret
jmp
decl
mov
sub
pusha
jg
popa
daa
sbb
jecxz
xchg
loope
ja
xchg
dec
pop
xorl
call
cli
or
jmp
xchg
outsl
xor
cld
or
jp
imul
ljmp
push
iret
mov
sub
pushf
mov
std
inc
dec
in
in
mov
pusha
data16
addb
pop
cmpl
ljmp
mov
jo
fldenv
lods
lods
mov
das
aam
jp
jbe
incl
stc
cmp
leave
xchg
std
repnz
gs
push
cli
dec
stos
dec
sbb
test
pop
add
cmp
sub
mov
loopne
sbb
sub
js
jne
inc
rcl
roll
pop
pop
or
into
sub
jo
ret
incl
scas
inc
inc
add
add
rorb
add
leave
xchg
xchg
fists
sbb
daa
xor
adc
cmp
or
jno
cli
in
pop
test
add
xchg
pop
inc
fisubs
dec
pop
incb
loop
dec
ss
mov
fwait
push
out
jg
and
and
and
dec
add
and
int
dec
gs
and
dec
ss
push
dec
shlb
pop
rorb
push
mov
ret
xchg
ret
inc
jl
mov
jg
push
inc
inc
adc
xchg
cmp
lods
add
push
roll
cs
inc
xor
std
ss
or
cmp
clc
jmp
dec
add
outsb
fsubrl
scas
ret
jle
cli
enter
xchg
dec
aam
adc
test
mov
scas
mov
and
jg
pop
lea
jg
shlb
mov
xchg
stos
sbb
insb
jp
ficoms
cmp
aaa
cmp
mov
cltd
dec
mov
adc
mov
testb
popf
inc
mov
lea
ret
xor
add
inc
push
push
lea
inc
fimull
xor
sbb
adc
icebp
xor
outsl
cmc
ja
imul
add
adc
cmp
fwait
cmc
pavgw
pop
xchg
push
mov
paddb
xchg
or
cmp
cmp
inc
and
test
lods
cli
mov
jbe
mov
jo
cmpsl
add
pusha
inc
sahf
mov
dec
lock
mov
jl
inc
mov
movsl
out
incl
inc
movsl
jo
adc
xchg
and
and
adc
inc
ret
incl
pop
jmp
jecxz
dec
and
mov
out
test
pop
out
sbbl
fldt
cld
insl
push
add
push
aas
test
fwait
mov
and
pop
jmp
jo
add
mov
and
movsb
mulb
add
rcrw
pop
adc
les
into
or
in
cmc
movsb
jl
xchg
in
std
fimull
lahf
xchg
push
xor
fstpl
mov
inc
insb
dec
inc
xor
mov
jecxz
cmp
sbb
and
lds
add
sub
xchg
fimull
sub
xor
in
push
addr16
pusha
adc
xchg
mov
or
call
mov
fiaddl
dec
insb
in
call
jne
loopne
pushf
mov
ss
in
pushf
pop
push
js
adc
scas
xchg
add
fidivrs
int
pushl
pop
adc
inc
repnz
stos
fmull
mov
popf
or
add
cld
push
outsl
jg
jnp
add
push
jg
ret
sub
shl
inc
xor
ja
inc
inc
xchg
clc
push
xchg
iret
pusha
inc
aaa
inc
mov
les
push
dec
mov
sarb
pop
jp
bound
pop
add
movsb
cwtl
lds
dec
scas
xchg
pop
push
pusha
xchg
sbb
orl
rcrb
mov
arpl
in
repnz
lahf
pusha
std
or
int3
xor
cmp
mov
or
push
stos
add
test
lret
jle
xchg
mov
je
lea
es
mov
cltd
jns
lret
rorl
adc
fisttps
jb
outsl
mov
xor
out
and
or
inc
call
adc
pop
or
or
push
dec
aam
fisubrs
insl
push
xchg
xor
nop
inc
sbb
cmp
mov
sbb
push
xchg
rcr
clc
xor
cmp
jo
mov
out
test
dec
mov
mov
xchg
dec
xchg
xchg
sahf
cli
jge
pop
or
cmc
xchg
mov
add
scas
and
loopne
xlat
int
movsb
pushf
fwait
enter
stos
insb
aad
and
div
dec
test
jae
xchg
mov
mov
aas
push
ss
bound
xor
mov
jo
sub
dec
adcb
icebp
fwait
sbb
cwtl
inc
js
ret
jl
jno
push
out
push
sbb
and
cmpb
incl
sub
sbb
xor
or
inc
dec
add
outsl
sbb
mov
inc
dec
es
push
arpl
mov
sahf
je
dec
insb
cmp
xor
adc
inc
xlat
and
jl
pop
mov
push
mov
xchg
hlt
push
jp
in
inc
or
cwtl
orb
jle
icebp
mov
popa
into
in
mov
push
test
aas
aam
mov
jno
aaa
jl
dec
addr16
fcoms
mov
jg
mov
jb
mov
xchg
insl
outsb
inc
sub
inc
je
sbb
imulb
sub
lret
test
adc
movsl
out
jg
push
adc
dec
shl
sbb
leave
mov
cmp
jecxz
mov
sub
dec
aaa
lret
dec
fidivrl
inc
inc
adc
xorb
ffreep
xchg
mov
roll
fbstp
rcll
or
or
or
stos
mov
push
loope
mov
icebp
mov
xor
fwait
add
out
cmp
mov
mov
pop
filds
insl
dec
mov
in
les
loopne
mov
insl
or
push
mov
aaa
cld
jae
sbb
push
dec
jb
movsb
inc
push
xchg
sahf
mull
movsb
lods
or
imul
subb
sbb
lock
fisubrs
push
fadd
js
in
mov
add
out
not
aaa
sub
out
scas
or
adc
sbb
movsl
mov
add
adc
push
push
mov
fiaddl
push
ljmp
cli
dec
mov
inc
xor
xor
imul
inc
jmp
jnp
daa
loopne
lret
push
addb
ret
xchg
pushf
mov
std
push
push
imul
cmp
aas
pop
jge
testl
sub
test
cmp
mov
dec
and
iret
sub
jmp
cs
add
pop
cltd
dec
lret
add
in
mov
push
dec
cmc
or
rolb
cwtl
hlt
movsl
outsl
scas
imul
dec
and
lea
bound
into
cmp
xchg
pop
sub
sub
inc
stos
nop
inc
xor
xor
inc
cmp
into
pop
cmc
and
jmp
in
pop
pop
loopne
pop
filds
dec
jb
scas
mov
mov
je
fdivp
push
sahf
fstpt
test
xor
inc
fmuls
insl
and
iret
scas
cli
push
or
pop
arpl
push
mov
fdivs
push
push
loope
jl
mov
xchg
stc
xchg
je
jo
jge
fsubrl
and
push
test
jle
arpl
dec
mov
sub
nop
jmp
lcall
insl
aam
das
jle
push
dec
mov
add
sub
icebp
adc
sarb
in
outsb
cmpsb
es
cmc
jmp
xchg
cli
sahf
clc
add
inc
push
adcl
imul
mov
repnz
cmpsb
sbbl
sbb
in
hlt
xor
fiaddl
jecxz
jge
sub
lcall
mov
mov
push
xor
jp
loop
push
push
sbb
je
inc
sub
mov
mov
imul
dec
jg
xchg
loope
movsb
xchg
popa
inc
cmp
stos
test
pop
movsb
outsb
cmpsl
enter
push
mov
jp
mov
jns
incl
rcll
repnz
jmp
cwtl
jge
mov
pusha
mov
xchg
or
pop
or
mov
gs
inc
mov
adc
dec
insb
out
xor
xorb
or
and
push
roll
cmp
pop
and
push
sub
aaa
push
das
jge
lock
mov
fwait
stos
xchg
pop
xchg
bswap
ret
imul
bnd
inc
lahf
nop
jae
add
push
mov
or
fcmovnbe
and
stos
xchg
and
ja
mov
mov
out
pusha
mov
mov
mov
ds
jp
mov
adc
cli
push
ret
mov
psllw
mov
jmp
scas
movsb
jb
inc
mov
mov
adc
jo
rcrl
mov
lcall
out
cmpsl
jne
shlb
imul
ret
sti
xlat
scas
mov
rcr
xor
adc
jl
imul
aam
and
scas
inc
fidivs
mov
pop
lea
sub
insb
and
fisttps
dec
xchg
xchg
mov
les
adc
dec
cld
cmpb
mov
pop
jbe
lret
sbb
outsl
add
aad
aaa
fistpll
fildll
cltd
dec
xchg
les
dec
jmp
dec
daa
or
shlb
dec
or
xchg
cmp
icebp
add
mov
or
hlt
repz
into
inc
insl
push
in
cli
add
dec
fwait
nop
mov
adc
or
ss
loope
jmp
inc
inc
add
jbe
in
adc
in
pop
push
inc
clc
hlt
push
pop
lret
cmp
das
loope
sbb
test
aaa
push
ljmp
add
cld
test
outsb
mov
xorb
mov
sahf
clc
aaa
adc
inc
movsb
or
xchg
xchg
fsubs
mov
push
shr
mov
cmpsl
mov
sub
jg
lods
pop
fnsave
mov
add
fucom
movsb
insb
xlat
hlt
cmpsb
push
push
push
ja
adc
xor
fwait
daa
mov
dec
inc
push
out
xor
mov
bound
push
xor
pop
xchg
cmp
sub
ss
and
ret
aas
call
xor
outsb
fs
lods
stc
push
or
shr
out
dec
mov
movsl
and
xor
inc
mov
mov
cs
mov
xchg
sub
mov
stos
cld
sahf
ljmp
repz
insb
lret
push
mov
ret
outsb
test
push
pop
add
test
sbb
stc
and
or
imull
pop
aas
and
cmpsl
movl
inc
sti
ret
cmp
cmp
push
popl
imul
mov
stos
xorl
sbb
in
dec
add
stos
faddp
mov
and
ljmp
subb
jmp
mov
dec
jg
enter
or
repz
pop
sbb
inc
cmc
and
jo
cwtl
imul
into
lcall
ljmp
sbb
adc
movsl
pop
ja
ja
pop
mov
jns
rolb
sbb
in
inc
pop
cmp
lock
push
mov
inc
mull
pusha
jecxz
jl
jle
insb
pop
xor
cmpl
jle
lcall
sub
dec
dec
push
and
mov
push
pushl
loope
movsb
sbb
shlb
sub
scas
and
lods
dec
test
pop
push
decl
lcall
arpl
add
pushf
mov
fildl
jg
xor
xchg
jne
adcb
adc
jge
aas
or
adc
adc
nop
adc
mov
lcall
sbb
test
mov
inc
xchg
pushf
sbb
je
sub
lds
std
dec
mov
mov
mov
out
hlt
icebp
js
fcomp
mov
adc
popa
pop
shl
rol
or
push
nop
scas
outsb
das
clc
adc
push
imul
test
lret
pop
call
fnstsw
mov
stos
ror
stos
inc
mov
or
leave
bound
push
ljmp
pop
jle
mov
lea
mov
lar
xchg
pop
inc
cmp
out
loope
sbb
mov
push
cld
xor
sbb
mov
in
jo
push
inc
push
pushf
mov
push
mov
in
out
fisttps
jle
es
mov
mov
rcrb
repnz
loopew
pusha
xor
sahf
fldcw
or
in
imul
addr16
add
mov
mov
push
add
aad
mov
mov
xor
mov
adc
or
cltd
add
dec
pop
jl
mov
and
daa
pop
or
jnp
inc
push
nop
xchg
dec
fisttps
sub
jmp
fwait
and
data16
test
std
pop
xorb
xchg
pop
movsl
stos
and
or
mov
push
push
pushl
inc
add
cli
or
dec
push
push
pop
mov
push
dec
inc
pop
ljmp
sbb
jo
mov
sub
repnz
orl
adcb
imul
push
push
fisubs
inc
scas
sub
xor
mov
mov
push
aas
mov
pusha
or
xlat
rcrl
stos
daa
lock
jecxz
pusha
mov
jbe
cwtl
movsb
popa
inc
and
js
ss
mov
pop
pop
int
clc
mov
pop
pop
push
xchg
cmp
push
pushf
sbb
sub
js
xor
outsb
je
jg
pop
repz
add
les
add
pop
loope
or
sub
sbb
add
pop
popf
mov
mov
mov
cmpsb
cwtl
mov
xchg
dec
adc
add
push
xor
mov
and
sbbl
clc
add
aas
mov
add
ficomps
jl
movsb
ss
aam
push
adcl
test
mov
in
jg
movl
sbb
shlb
or
ret
js
fldcw
add
loop
sbb
es
mov
mov
push
leave
pop
sbb
cld
cwtl
stos
insl
mov
fadds
mov
sbb
pop
ja
push
sbb
mov
pop
jp
dec
jecxz
adc
repz
ljmp
movl
jmp
sbbb
add
jns
mov
xor
adc
and
ss
xor
jae
adc
fnstcw
push
fisubrl
xchg
seta
movsl
mov
dec
ss
cmp
inc
pop
mov
movsb
cmp
add
mov
cmp
dec
ljmp
and
js
pop
ja
pop
xor
push
jb
adc
push
mov
clc
add
es
cmp
mov
scas
adc
stos
jle
in
mov
test
inc
shr
incb
lea
push
ja
mov
dec
add
fsubrl
lods
push
in
std
push
jp
xchg
sbb
scas
pop
xchg
mov
inc
add
jp
ljmp
into
repz
test
mov
sbb
jg
jb
clc
jnp
out
pop
sub
in
mov
fidivrl
jne
shll
pop
pop
mov
in
fcmove
dec
rolb
sbb
std
mov
push
or
pavgb
daa
test
js
inc
pop
arpl
enter
mov
into
into
xchg
sub
mov
add
xor
fmull
mov
sti
in
orl
movsb
pusha
adc
and
in
or
dec
inc
or
mov
repnz
add
fnstenv
in
inc
pop
sub
insb
xchg
outsb
aaa
inc
popa
mov
xor
nop
mov
bound
inc
sub
sbb
mov
xchg
jne
lock
imul
jo
adc
clc
xchg
mov
scas
mov
mov
or
jge
les
shl
test
jb
push
in
mov
cmp
insb
cmp
lds
pop
push
int
aam
adcl
mov
and
ficomps
cld
or
roll
add
xorl
es
sbb
add
sub
fldl2e
enter
dec
add
or
ret
cmpsb
gs
cltd
movsb
add
bound
int
stos
pop
mov
nop
jns
xchg
mov
es
jl
aas
addl
inc
or
sub
cld
pop
rorl
adc
mov
sarl
mov
sub
test
mov
jne
rorb
scas
dec
cmp
add
ficoml
xchg
add
mov
shll
cmp
xorl
es
cmp
adc
xchg
sbb
ret
sub
setge
rcl
data16
lds
sahf
xor
rolb
popf
mov
mov
push
xor
mov
mov
inc
insl
dec
dec
daa
iret
repnz
shll
mov
imul
push
pop
jle
jge,pn
dec
push
xchg
cwtl
jae
sub
cmc
sbb
out
jl
inc
insb
sbb
inc
inc
inc
mov
dec
cwtl
bound
cmc
pop
adc
stos
pop
fwait
push
cmpsl
or
sbb
push
cmp
push
add
dec
adc
jae
pop
sbb
dec
xor
mov
jae
js
xchg
data16
andb
gs
flds
xor
js
cli
cltd
sub
and
xchg
adc
dec
lds
mov
inc
and
fwait
test
mov
add
jg
jae
inc
addb
inc
ret
arpl
jmp
jo
and
aas
cmp
mov
bnd
iret
mov
xchg
and
std
je
test
sub
lods
jg
or
scas
pop
xchg
shll
loope
cmp
pop
icebp
cwtl
pop
adc
movsl
loop
add
jge
and
or
dec
cmpl
sub
cmpsl
xchg
cld
sbb
lret
inc
mov
jg
ret
test
push
inc
arpl
leave
dec
mov
inc
mov
cmp
test
test
dec
pop
xchg
fwait
sbb
jecxz
cmpsl
cmp
mov
inc
sbb
jle
movsl
pop
inc
xor
jle
pop
imul
xorb
jp
xchg
movsl
inc
add
xchg
sbb
loope
jmp
mov
leave
insb
mov
xor
pushf
dec
ret
cmp
push
or
fs
testl
cmp
mov
mov
leave
in
cmp
or
pop
xchg
pop
out
stc
es
lea
andl
pop
dec
dec
fisubs
add
pop
xorl
cli
shlb
cmp
push
sahf
inc
aad
inc
std
sub
add
jmp
jo
push
inc
ret
jecxz
inc
sbb
jno
lods
mov
add
mov
lahf
mov
mov
sahf
pushf
mov
popa
cmp
add
sub
les
pop
loope
aaa
mov
sbb
fisubs
xor
out
je
fisubl
loop
jmp
fs
subl
pop
xor
mov
pop
hlt
xor
xchg
shll
popf
or
ja
sbb
mov
test
cmp
jno
sarb
arpl
cmpsb
xlat
loope
mov
xchg
stos
scas
jae
int
ljmp
sub
mov
mov
mov
cmp
dec
sarl
mov
sahf
sub
jns
lret
or
xor
xchg
pop
rcr
dec
fbld
and
push
inc
fstl
imul
in
dec
cmp
mov
incl
shrl
rol
inc
sahf
xchg
jbe
mov
add
mov
lock
jg
lock
outsl
add
adc
faddl
push
cmp
popa
dec
sub
and
aas
sub
jmp
and
imul
inc
jbe
pop
frstor
push
add
scas
add
iret
outsl
subb
jmp
stos
and
cltd
dec
js
inc
jp
insl
pop
js
into
jge
test
mov
popa
nop
repz
xor
loope
popa
ds
movsb
aas
imul
fstl
clc
bound
jno
sbb
pop
jae
lock
stos
jp
mov
add
inc
pop
scas
daa
sbb
mov
pushf
xor
rcl
add
fstl
fstpl
dec
pcmpgtw
sti
mov
pop
aam
fwait
sbb
in
cmc
in
pop
mov
mov
xchg
sahf
cmp
aaa
add
popa
test
push
aaa
testb
aad
fsts
push
scas
dec
pop
push
nop
jmp
cmp
repnz
in
jg
add
and
add
nop
pop
hlt
ret
push
mov
and
jbe
xor
pop
std
xchg
add
mov
and
sbb
je
jb
repz
sub
in
mov
inc
roll
imul
pop
jo
mov
test
xchg
pop
mov
mov
or
add
pop
push
mov
pop
call
test
xchg
std
dec
ss
fs
mov
sub
iret
pop
hlt
mov
jnp
adc
cmp
das
pop
sub
add
sbb
sub
xchg
cs
adc
out
or
add
add
dec
sbb
xor
stos
rolb
aad
adc
xor
shrl
ror
smsw
add
scas
mov
jb
dec
or
stos
or
test
cmp
shr
sbb
jecxz
adc
leave
arpl
out
inc
or
orl
mov
pusha
int
dec
or
pop
push
xchg
push
xor
jae
dec
das
push
sub
sbb
frstor
pusha
sbb
sub
inc
cmp
dec
sub
sbb
jo
nop
popf
adc
test
cmpsb
inc
jge
add
mov
ss
jmp
and
pop
dec
cmpsb
cmc
scas
ljmp
push
cmp
roll
roll
cmp
adc
push
bound
jecxz
add
or
jl
stos
lret
ret
lock
jbe
push
test
sbb
hlt
pop
gs
lock
mov
xchg
cli
jmp
inc
test
mov
add
cmp
rcrl
out
mov
lcall
adc
les
test
push
jnp
and
inc
mov
pop
ret
inc
jge
ljmp
daa
push
or
and
mov
sbb
sti
or
js
daa
lods
pop
pusha
sub
sub
sbb
sub
shrl
sub
ss
adc
or
jo
adc
jg
add
dec
or
sbb
aad
movl
imul
jno
xchg
inc
jmp
and
std
lcall
or
inc
imul
xor
xor
sub
adc
aad
and
push
mov
ficomps
pushl
loop
mov
andl
mov
pop
out
outsb
icebp
cltd
cmp
and
mov
test
dec
add
repnz
outsb
mov
push
pop
jo
mov
test
leave
pop
push
adc
inc
push
add
popl
pop
push
inc
cli
lock
jg
in
jns
jmp
cld
pop
mov
jnp
add
ret
cmp
mov
test
mov
xchg
dec
sbbb
mov
rolb
bswap
fdivs
inc
or
inc
jge
dec
mov
xor
aam
push
cmpsb
pushf
fnstenv
xchg
push
loop
xchg
fstpl
adc
push
cmp
push
xor
sbb
jl
rol
aas
sbb
mov
add
pop
mov
pusha
jno
rorb
jecxz
movl
int
mov
mov
jle
sbb
mov
pop
push
stos
push
jbe
subb
xor
test
enter
aas
cs
in
mov
and
dec
jge
xor
mov
pop
pop
add
sbb
add
pop
movsl
xchg
stos
add
loope
dec
cmpsl
test
dec
or
in
aam
xor
adc
cmp
fstpl
pop
lahf
adc
imul
adc
add
rclb
and
fnstsw
loope
stos
inc
mov
push
sbb
mov
and
lahf
adc
jmp
mov
mov
adc
mov
rcl
nop
int
nop
adc
push
adcl
mov
inc
mulb
iret
add
lea
dec
in
outsb
inc
outsl
adc
in
jle
sbb
lods
or
fs
lods
sar
and
dec
mov
orl
adc
sbb
ds
icebp
and
stos
inc
mov
sub
jnp
lahf
jecxz
mov
lea
imul
pusha
mov
dec
xchg
je
sbb
loope
sbb
inc
adc
fidivrl
or
jns
fdivrl
cmpsl
nop
add
fwait
add
xchg
push
inc
dec
mov
inc
mov
popf
add
call
jle
pop
mov
pop
xor
loop
lods
sarb
xlat
xor
mov
pop
push
mov
pop
xor
cmpsb
jno
int3
add
les
iret
add
pushf
call
sar
push
cmp
ja
jo
adc
insl
cmpl
mov
jle
pop
outsb
pop
mov
sbb
and
or
sbb
mov
sahf
cmp
iret
outsl
xchg
push
decl
mov
mov
sbb
jae
rol
jecxz
push
in
insb
cmp
jns
or
or
cwtl
decl
cmc
xchg
int
sub
cmpsb
cmp
imul
pop
and
add
pushf
ds
jo
xlat
ret
ret
lods
into
xor
cs
jne
add
sub
add
cmc
cs
add
cmp
jmp
adc
test
mov
repnz
hlt
lods
cmpsl
mov
mov
jp
out
pop
imul
push
pop
inc
rclb
sbb
pop
add
bound
movsb
sbb
fs
enter
loopne
ss
mov
mov
xchg
popa
add
aas
jo
out
pop
out
fnstsw
mov
dec
or
add
lcall
jge
scas
cmp
js
call
mov
pop
xor
xor
daa
sub
addr16
ljmp
into
inc
fsubrp
mov
sub
add
sub
mov
inc
sbb
scas
inc
popf
add
fwait
pop
and
xor
js
test
mov
pop
out
xchg
ficompl
xchg
and
outsl
out
roll
push
push
insl
loopne
nop
xor
push
sub
inc
lret
cmp
rorl
jo
cli
lahf
adc
sub
xchg
ljmp
sub
je
mov
dec
xchg
jge
into
cld
xor
jno
sub
or
std
mov
push
and
pop
scas
lea
test
rolb
xchg
clc
add
decl
int
in
neg
les
pop
mov
out
dec
sahf
incl
jbe
dec
or
mov
loope
pop
jns
sbb
and
or
fwait
cmc
insb
data16
xchg
cmpsb
inc
push
cmp
push
mov
cmc
push
push
mov
lock
push
sti
inc
out
jno
inc
out
cmp
dec
jne
push
cld
mov
adc
jae
and
sbb
lods
pushf
in
int
xor
pop
adc
insb
ljmp
dec
dec
jp
call
test
ja
cmpl
dec
cwtl
aas
call
cmp
pop
lods
mov
out
and
cmp
cltd
inc
adc
into
mov
fcmove
push
fcoml
fidivrl
push
popf
mov
mov
push
mov
mov
movsb
pop
inc
and
jbe
and
idiv
mov
shll
iret
sub
sub
cmp
cmpps
iret
js
dec
or
aad
arpl
jmp
cmp
out
adc
nop
cmpsb
sbb
int
jnp
xor
fs
dec
loop
xchg
xchg
mov
shr
mov
rolb
fsubs
loopne
mov
ja
sbb
adc
inc
sub
pop
xor
adc
fcomps
add
xchg
jmp
repnz
das
rolb
sti
gs
mov
push
mov
push
call
pop
enter
lds
push
idiv
ret
adc
inc
add
aam
loopne,pn
fcmovb
sbb
push
repnz
rolb
lock
icebp
jo
fcmovnbe
sub
out
and
push
pop
ds
int
lods
push
jl
cmpsl
push
nop
jb
dec
mov
ds
not
cmp
in
incb
jecxz
cmp
fidivrs
stc
jo
jne
mov
inc
ret
clc
mov
imul
cmpsb
lods
fcmovnbe
and
aas
daa
mov
inc
or
or
cmp
loope
jge
or
xchg
xchg
test
and
es
xor
xchg
mov
les
cmp
xor
mov
lock
ljmp
mov
imul
mov
test
mov
sub
pushl
jbe
stc
movsl
bound
daa
icebp
mov
adcb
js
pop
movsb
push
rolb
cmp
inc
outsl
push
inc
adc
cmpl
mov
inc
lods
es
jb
movsl
sahf
pop
pop
icebp
sub
or
psraw
cmp
rep
cwtl
clc
pop
xor
dec
pop
addr16
dec
out
test
ficoms
push
dec
jge
sbb
fsubs
push
outsl
test
movlhps
inc
popa
xchg
adc
loope
call
iret
ss
pushf
xchg
dec
mov
mov
add
pop
testb
xor
sbb
into
inc
add
hlt
mov
sbb
mov
xchg
out
sub
shll
xchg
pop
mov
int
cld
cmpsb
hlt
shll
sub
psrlw
and
in
pop
jbe
or
or
pop
ss
cld
repnz
lret
jae
pop
xchg
mov
xchg
dec
scas
and
jne
push
popf
dec
pop
popf
jmp
addr16
loope
rcrl
out
xor
pop
inc
xchg
testb
orl
nop
rcll
hlt
cli
movl
cli
aam
fistpl
lahf
rcrl
icebp
clc
jne
mov
xchg
stos
mov
fstpl
sbb
les
jo
mov
sub
cwtl
mov
jbe
xchg
mov
stos
mov
imul
mov
cli
ja
cmp
aas
shr
lret
aad
add
into
or
scas
adcb
filds
push
lret
pop
out
fldl
xor
dec
sbb
adc
sbb
loop
cli
xlat
and
arpl
andb
adc
dec
pop
test
sbbb
mov
int3
xor
mov
js
cld
ds
push
cmp
fcompl
loop
popf
lods
pop
cmpsl
jns
xchg
sbb
and
arpl
movsb
pop
imul
mov
in
notb
add
das
mov
fists
js
movsl
negb
push
inc
jle
cld
dec
movsbl
mov
aas
jne
pushf
int
decl
lahf
cmp
lea
cmpsl
or
lcall
lock
and
mov
jo
inc
movsl
in
rol
mov
inc
int
add
out
push
sub
mov
call
cmp
adc
mov
fcoml
scas
dec
xchg
dec
aaa
lock
pop
adc
inc
or
sar
sbb
lock
and
testb
mov
or
lret
rolb
setl
rcl
mov
lods
xchg
jo
sti
mov
ret
loopne
add
add
mov
pop
pop
aas
sub
cltd
push
lds
mov
mov
daa
jmp
xor
mov
add
mov
das
rcll
jge
cmp
push
jno
insb
loopne
jbe
test
sbb
pop
push
test
mov
jle
js
addb
aad
scas
movsl
adc
lods
add
cs
popf
sbb
pop
fs
fsts
dec
jne
sub
inc
mov
xchg
outsb
rol
cmp
cmp
loop
xor
push
mov
arpl
dec
sahf
cltd
rorb
and
test
mov
cld
out
jg
xlat
mov
pop
fldenv
cmp
jmp
mov
mov
mov
jmp
repnz
cmpsb
bound
sub
inc
outsb
or
fs
jnp
push
pop
scas
aas
lea
and
sub
les
addb
shr
lahf
mov
test
mov
ljmp
loop
nop
aam
out
cli
add
jg
out
push
xor
adc
insb
dec
jle,pn
sub
lods
sbb
xor
lahf
jp
cmp
xchg
lods
cmp
or
mov
addr16
push
test
enter
mov
mov
jmp
cmpsb
and
push
jno
shrl
insl
aas
out
or
cmpb
jle
cmpsl
add
mov
sub
stos
inc
ljmp
sti
cmp
addb
push
movsl
sbb
xchg
mov
mov
adc
movsb
or
movsb
xor
aaa
jge
mov
shl
and
pop
stos
xchg
and
pop
jb
mov
mov
and
les
jle
sarl
lcall
popa
lods
inc
mov
cmp
jo
mov
mov
xchg
add
scas
and
lods
xchg
lcall
mov
pusha
pop
aam
mov
nop
stc
sbb
mov
xchg
pop
push
add
push
xchg
les
cli
das
jg
iret
adcb
jg
lahf
cmc
mov
sbb
push
test
idiv
push
cmp
cwtl
out
andl
mov
test
dec
shrb
out
aas
fmull
mov
out
sub
outsl
push
out
fimuls
pop
mov
mov
sbb
out
xor
adc
jecxz
call
push
cli
fcom
pop
pushf
pushf
cwtl
frstor
icebp
mov
adc
mov
iret
sub
adc
in
xchg
test
push
fistpll
and
jecxz
shll
pop
aam
ljmp
pop
add
je
popf
lods
loopne
shlb
xlat
orb
arpl
lea
movsb
xchg
adcb
stc
jp
rcl
mov
push
flds
jmp
mov
add
jbe
mov
dec
rcr
rcrl
sub
daa
movl
ss
adcb
stos
subl
inc
jg
pop
add
clc
push
and
pop
lock
inc
cwtl
xchg
loope
jp
mov
clc
daa
jp
jle
or
inc
fbstp
ficoml
xchg
sub
mov
pusha
sub
icebp
daa
shll
push
push
loop
jae
jl
mov
xchg
jle
adc
in
test
mulb
leave
mov
les
aas
call
push
shll
xchg
lret
or
cmp
inc
cmp
jb
and
pop
bound
ds
sub
jg
out
sub
push
xchg
nop
testb
mov
fistl
ljmp
test
stc
cwtl
les
adc
mov
cmp
and
fs
mov
clc
sbb
ret
push
lcall
clc
mov
xchg
jl
mov
inc
pop
lock
incl
das
pusha
test
insl
cwtl
cmp
test
pop
dec
inc
std
add
addr16
mov
sbb
xor
push
mov
lahf
rclb
cmpsl
jo
add
or
imul
ret
mov
mov
aas
cmp
sbb
jge
test
leave
or
cld
and
push
jbe
sub
dec
mov
icebp
pop
push
repnz
outsl
lods
sub
lock
inc
lock
sub
inc
push
jle
or
lock
aas
jmp
or
pop
mov
push
or
pop
mov
pushf
out
movsb
cs
aaa
cld
jge
dec
ret
add
insb
push
flds
iret
xor
mov
js
ds
clc
sub
sub
adc
out
add
adc
and
add
lea
fwait
loope
mov
rclb
mov
adc
filds
outsl
bound
addb
lods
cmp
sbb
scas
inc
std
adc
xor
out
out
adc
push
lret
addr16
fildl
icebp
add
push
or
decl
add
movsb
dec
xor
call
adc
push
and
loop
inc
cmp
jecxz
out
pop
mov
inc
xor
inc
cmp
mov
push
popa
lret
adc
xchg
in
sub
mov
or
aad
lahf
loopne
mov
daa
lea
ffreep
jnp
sbb
dec
xor
adc
lock
dec
pop
popa
add
lret
cld
stos
mov
mov
pop
sbb
call
jl
sarl
lea
sub
daa
mov
cltd
aas
mov
push
jns
add
mov
repz
or
aas
cmc
jns
addr16
inc
testb
adc
outsl
push
clc
in
mov
dec
lret
adc
lock
roll
popa
inc
sar
call
and
mov
push
mov
insb
pop
add
add
sbb
ficompl
call
or
fstl
stos
xor
popa
test
decl
in
dec
sub
xchg
sbb
stos
pop
add
addr16
mov
pop
push
repnz
xor
or
jmp
icebp
fwait
test
mov
out
cmpsb
cmpsl
insb
aas
jmp
ret
cmc
rcrb
mov
cmp
divb
and
pop
push
push
mov
mov
cmp
outsl
inc
pop
jle
inc
mov
xor
jb
fbld
mov
mov
dec
mov
mov
mov
outsl
dec
fwait
or
repz
aas
mov
cs
outsb
ljmp
jl
pop
jo
sub
lds
sub
mov
cmp
mov
dec
insb
test
xor
or
jle
cltd
adc
pop
cltd
js
xchg
lds
jnp
fbstp
sbb
and
das
push
mov
xorl
ret
enter
movhps
lods
mov
sub
mov
inc
jb
mov
cs
add
jle
and
and
ljmp
pop
hlt
push
sbb
and
data16
out
sub
outsl
pop
cmp
lods
incl
push
cmpsb
incl
in
daa
cltd
pop
mov
insb
or
or
jnp
subl
cmpl
lahf
xchg
xor
test
or
cld
movsl
test
sub
cld
pop
fiaddl
inc
test
fldcw
mov
rcrb
push
push
mov
push
cmp
jbe
xor
add
gs
add
push
mov
ds
stos
ficoms
clc
enter
pop
or
or
xchg
jns
cmp
and
loop
mov
sar
stos
dec
mov
pop
and
jo
jne
fistl
cmpsb
std
mov
fs
add
and
jmp
sbb
or
imul
hlt
ljmp
lds
pop
movsl
mov
lods
test
imul
lea
push
orl
rorl
cltd
repnz
sbb
cwtd
cmp
das
lock
push
cmpsb
push
lea
pop
pop
adc
out
fmull
pushf
cld
mov
enter
add
rorl
fwait
adc
sbb
pop
ret
push
lock
cld
cmp
jo
arpl
incb
cmc
inc
aad
pop
xor
js
adc
or
inc
fs
iret
adc
lock
push
pop
jne
adc
or
rorb
add
sahf
movsb
inc
sub
outsl
cmp
fidivl
mov
filds
pop
aam
pop
in
pop
or
dec
adc
pop
aad
xchg
insl
sarl
lret
in
insb
mov
pusha
sqrtps
jno
or
inc
push
clc
and
mov
mov
adc
cmp
rol
cmp
push
xorl
xchg
pop
mov
inc
fists
and
xchg
test
js
pushl
add
mov
inc
jge
mov
xchg
mov
mov
sbb
sub
push
push
sti
das
std
cmp
cli
insl
adc
adc
and
pop
cmp
add
gs
sbbl
mov
xor
mov
mov
add
mov
push
cmp
xchg
jo
push
int3
pusha
mov
enter
push
scas
inc
xor
insb
in
sub
cmp
dec
das
pop
inc
xchg
mov
cmp
loopne
jmp
pop
je
and
push
push
mov
sarb
int
jmp
rolb
xsha1
cmpsb
cmovbe
or
je
inc
or
sub
inc
pushf
dec
out
lds
test
mov
inc
ret
imul
jnp
xor
andl
div
mov
data16
xor
ja
aad
enter
mov
lock
jmp
push
or
xchg
mov
xlat
jg
sub
dec
jno
add
shl
inc
pop
rolb
cli
int3
lret
push
repnz
lock
fucomip
mov
mov
or
jo
xor
loop
sbb
test
xchg
shrl
mov
pop
xchg
int3
rol
pop
jp
pop
je
add
push
repnz
leave
int
loopne
xor
test
adc
or
subl
bound
cmp
insb
inc
mov
sub
pop
cmp
in
test
add
xchg
fsub
xchg
push
out
test
jecxz
dec
lods
cvtps2pd
add
mov
mov
in
add
or
outsb
xchg
mov
aaa
sti
mov
sub
adc
das
clc
jmp
sub
cmp
and
les
push
popa
add
cmp
loopne
adc
or
gs
and
insl
aas
lcall
xor
cltd
rolb
or
xchg
cld
sti
push
enter
pop
dec
es
les
loop
xor
das
or
clc
fbld
or
fisubs
out
push
enter
iret
das
lret
sub
fmul
test
dec
and
adc
icebp
adc
inc
lret
or
pusha
shlb
rorb
in
icebp
xor
cmp
sub
pusha
call
jg
jp
or
inc
adc
rorl
mov
shll
fwait
sbbl
sub
or
ljmp
gs
rorb
dec
pop
inc
push
mov
xchg
dec
mov
push
mov
mov
cmpsb
or
and
mov
std
out
add
pop
jle
mov
scas
pop
cmp
xlat
and
int
xchg
jle
loopne
mov
cmp
pushf
lahf
or
adc
scas
and
jg
in
daa
jns
icebp
add
daa
ret
adc
ss
lods
outsl
mov
mov
pop
xor
inc
lea
in
lret
divb
xchg
test
js
cs
call
xchg
adc
pop
or
jmp
clc
sbb
jns
xor
sbb
daa
jmp
mov
repz
lcall
pop
movsl
pop
jmp
xchg
push
add
out
push
jo
dec
and
xchg
lahf
mov
sbb
in
fisubs
repnz
mov
ss
inc
test
shll
pop
xor
mov
jne
loop
ljmp
pop
adc
or
push
rorl
rolb
push
and
jmp
lea
mov
outsl
negb
repz
cmp
int3
fisttpl
roll
inc
incl
lea
out
add
jmp
sub
inc
rorl
lock
js
mov
test
lock
es
and
dec
cmp
push
cmpsl
and
and
in
sub
imul
cmp
repz
stc
mov
pop
icebp
mov
sub
mov
mov
push
jbe
or
dec
jns
adc
mov
sbb
aas
icebp
dec
adc
pop
pop
testl
and
inc
es
pop
ret
mov
pop
jo
push
mov
inc
adc
cld
arpl
sbb
mov
xchg
cmp
dec
or
and
sub
xchg
lods
push
imul
mov
mov
gs
add
xor
adc
jno
mov
cmovb
aas
adc
imul
push
sbb
clc
add
daa
ret
lret
mulb
sahf
add
adc
adc
or
fmuls
mov
call
loopne
jge
mov
aam
arpl
mov
je
mov
enter
jg
loopne
adc
and
mov
mov
out
pusha
in
inc
mov
mov
repnz
fiaddl
imul
add
inc
aas
arpl
xchg
cmp
adc
hlt
mov
inc
pop
cli
and
lods
dec
jle
push
insb
fsub
jg
andb
push
testl
push
rcrb
loop
jge
or
popa
les
inc
pop
test
cld
mov
int3
je
adc
push
xlat
test
sbb
add
pop
jp
insb
inc
ds
subps
cmp
rorb
cs
shl
add
popl
icebp
hlt
push
jbe
into
clc
xchg
push
push
sbb
mov
sub
cmpsl
lods
xlat
push
pop
hlt
cmp
jl
addr16
cmp
and
stos
mov
in
movsb
cmpsb
mov
push
insb
gs
roll
mov
js
pop
sbb
subl
fdivs
dec
ja
cmp
cli
pop
xor
inc
sbb
mov
clc
or
int
push
aas
shl
mov
inc
aad
stos
xlat
or
popf
adc
daa
std
gs
lds
or
fcomip
sub
and
rcll
das
mov
test
xor
pavgb
scas
adc
push
cli
insb
cld
mov
mov
inc
pop
add
xchg
jns
sub
add
loop
add
mov
cmpsb
test
jecxz
dec
inc
daa
sbb
push
xchg
mov
mov
cmpsl
scas
loop
pop
mov
ljmp
mov
data16
add
jp
mov
mov
add
sbb
inc
and
pop
xor
insb
dec
mov
mov
jnp
mov
sbb
or
jbe
inc
cwtl
aaa
in
dec
push
js
push
add
inc
aas
stos
mov
lods
lock
adc
xor
lret
int3
test
add
ss
cli
cmpsl
fs
jae
xor
sbb
sub
lret
mov
pop
adc
xchg
add
mov
adc
pop
push
sbb
repnz
cmp
ffree
out
and
mov
inc
xchg
shll
cmc
mov
pop
bound
mov
mov
xchg
mov
pop
mov
stc
dec
addl
lock
cmp
das
pop
js
mov
cwtl
jne
test
repz
and
mov
mov
mov
inc
mov
std
rcll
fisubrl
mov
pusha
stos
mov
nop
sarl
mov
sbb
mov
fs
cmc
sarl
mov
icebp
jecxz
sbb
jo
ret
movsb
or
shlb
pop
lock
enter
inc
fnstenv
lock
mov
imul
aad
aaa
adc
outsl
mov
ljmp
sub
add
inc
or
xchg
jnp
jmp
pop
sahf
or
cltd
je
test
insb
sbb
mov
stos
dec
sahf
add
xor
jns
add
repnz
decb
push
sub
movb
cmpsl
push
mov
sbb
fnstsw
rcl
call
sahf
mov
inc
mov
sbb
fisubrl
lods
adcb
icebp
sub
hlt
pop
mov
mov
js
popf
sub
dec
pop
push
je
ljmp
daa
ret
and
and
stc
jp
mov
pop
pop
sbb
sbb
test
push
pushf
icebp
nop
test
mov
divb
cmp
jl
scas
mov
pop
das
popa
jae
inc
adc
inc
in
repnz
in
add
insb
mov
mov
xor
jbe
lahf
fdivs
inc
arpl
fcmovnb
pop
lahf
push
cltd
rcll
jmp
add
inc
push
or
jnp
fcoml
xchg
sub
out
jae
mov
pop
add
enter
clc
sahf
lods
pop
or
sub
pop
xchg
push
cs
shlb
mov
sub
jge
mov
hlt
lods
adc
xchg
adc
xorl
shr
je
clc
push
pushf
push
cli
mov
jo
push
jno
mov
imulb
inc
dec
dec
pusha
or
data16
add
mov
fmulp
pop
lds
jae
dec
subb
test
cmp
test
xor
inc
push
in
xor
sbbb
mov
popl
nop
test
cmc
fldenv
ret
movups
std
movsb
or
xchg
add
insl
subl
push
mov
std
inc
jg
xor
mov
inc
leave
or
mov
dec
cltd
cld
mov
push
or
xchg
adc
shll
push
sbb
call
js
mov
addb
add
dec
fisttpll
test
xorl
dec
lret
fwait
call
push
pop
pushf
imul
xor
pop
and
dec
fadds
sub
sbb
inc
fbstp
or
push
jge
into
aaa
inc
negb
ja
cld
mov
cmpsb
shl
cmp
scas
xor
pop
jecxz
out
push
jae
stos
mov
mov
push
mul
les
out
inc
ljmp
xchg
pop
cmp
call
ret
ljmp
sub
pop
orb
loopne
inc
sbb
ja
mov
call
cmpsb
cltd
or
fs
cli
in
lock
inc
mov
nop
push
jmp
fdivrs
add
ret
push
subl
adc
push
aam
push
add
outsl
sub
adc
aas
jnp
lea
add
in
arpl
popf
ret
imull
scas
xor
fst
jne
cli
rcrb
dec
in
daa
mov
sub
xor
xchg
mov
mov
pop
mov
and
scas
movb
mov
sbb
mov
pop
shll
push
lods
imul
daa
or
push
fldcw
cmc
rorb
sbb
dec
jmp
lock
pop
pop
repz
xlat
or
repnz
mov
addr16
ret
mov
xchg
mov
inc
cltd
fadds
cmp
lods
mov
push
inc
test
and
cmpsl
jmp
mov
rolb
call
mov
leave
sbb
add
js
loopne
orb
sbbb
bound
and
cmp
mov
dec
or
icebp
rcll
je
ds
lods
testl
icebp
xchg
das
push
popa
es
or
bound
jle
inc
xor
decl
push
inc
push
dec
loopne
mov
mov
subb
and
adc
dec
fiadds
or
xlat
rcll
lds
xchg
fdivrl
stos
jl
xor
adc
lahf
mov
arpl
in
sbb
mov
add
or
mov
pusha
scas
ret
loopne
dec
push
mov
fildll
xchg
orl
es
mov
imul
mov
xchg
jne
sub
jmp
pop
mov
insb
adc
sub
inc
mov
loopne
movsl
inc
je
adc
cmc
add
pushl
inc
jg
xorl
or
or
push
lds
ret
xchg
adc
ss
pop
mov
mov
sbb
mov
sbb
jl
push
arpl
dec
hlt
add
ret
push
cmp
sarb
lods
outsb
nop
ds
orl
ja
mov
xor
adc
push
xlat
sub
incl
movsb
movsb
sbb
xor
stos
es
dec
mov
add
test
or
and
sub
inc
add
mov
and
push
jae
daa
daa
cmpsb
adc
sub
lods
imul
adc
cs
sbb
mov
push
add
clc
cmc
fcomp
add
ret
sbb
mov
test
xchg
jo
rcrb
xor
or
aam
mov
cmp
call
jg
stc
xor
jbe
push
sbb
or
add
xor
mov
mov
push
pop
xchg
xchg
inc
pop
pusha
bound
fistpll
push
std
adc
mov
stos
jbe
mov
jb
insb
jbe
push
movsl
add
xchg
pop
mov
das
jmp
div
mov
sbb
test
mov
daa
out
push
push
aam
push
jno
icebp
rcll
out
dec
dec
mov
je
xchg
incl
push
cmp
push
push
loop
pop
and
clc
nop
push
cwtl
sbb
lds
roll
pop
lock
mov
mulb
pusha
test
data16
js
outsb
clc
adc
mov
mov
jb
mov
mov
popa
es
rorl
ss
repz
dec
aam
push
std
bnd
fldl
dec
das
shll
fmull
pop
sbb
mov
sbb
sbb
cs
or
mov
pop
clc
popa
int
dec
shr
lock
dec
decb
or
mov
jp
int
inc
sbb
ss
loope
push
mov
nop
pushf
sbb
push
lcall
add
sbb
xchg
push
inc
adc
cmp
jle
andb
aas
pusha
mov
cmp
sub
and
jl
adc
mov
mov
xchg
hlt
gs
fs
addl
mov
insb
in
pop
mov
mov
push
sbb
das
lret
imul
cmp
fdivr
out
imul
push
mov
add
addb
inc
xor
inc
incl
push
pop
cmpsl
jecxz
mov
pop
je
andnps
adcb
lock
nop
ljmp
push
mov
sub
mov
inc
leave
adc
inc
cld
push
mov
cmp
in
outsb
sbb
xchg
mov
lods
or
mov
lds
fsubrl
jnp
in
adc
sbb
sarb
dec
mov
fcoms
int
push
fdivr
mov
push
faddl
rorb
push
jl
shrb
sub
adc
test
movsb
imul
int
add
adc
les
jl
or
into
sub
or
loop
or
fwait
ja
rorl
mov
dec
andb
imul
test
or
jb
jo
das
push
adc
dec
cmp
xchg
cli
dec
push
cmp
incl
pop
jecxz
adcl
mov
out
pop
adcb
push
clc
fsubl
faddl
and
dec
sub
pop
test
jmp
sbb
mov
in
andl
mov
adc
frstor
mov
enter
mov
add
dec
lret
cmc
mov
mov
out
daa
subl
push
shrb
stos
loop
scas
mov
pop
movsb
mov
push
push
aam
pushf
xchg
test
pop
cs
add
cmp
adc
and
scas
stos
movsl
mov
and
pop
jl
cmp
xor
scas
xor
xchg
bnd
mov
cmp
add
imul
xchg
movsb
add
gs
xor
or
pop
lret
push
add
out
push
or
stos
sbb
jle
pop
or
or
lock
jo
pop
cwtl
jp
int
jb
push
xchg
imul
movsl
push
fmull
daa
adc
and
aas
mov
frstor
pushf
inc
mov
sub
cld
pusha
imul
mov
std
sahf
mov
mov
jno
int3
add
sbb
inc
mov
cmp
add
and
sahf
iret
dec
and
cli
out
enter
das
in
push
xorl
sbb
jle
test
push
dec
lahf
ds
dec
push
dec
jae
je
mov
mov
clc
inc
mov
pop
xchg
lea
incl
fwait
mov
pushf
sbb
aas
mov
push
or
jnp
aas
sbb
adc
test
das
les
sub
pop
subb
pop
cli
popa
out
dec
stos
cmpsb
out
pop
cli
push
adc
out
dec
inc
inc
cmp
clc
mov
jle
add
and
sbb
call
pop
movsb
lds
test
imul
inc
or
sub
xchg
cmpsl
mov
cmp
mov
jge
icebp
sub
movsl
inc
rorl
fidivrs
pop
push
test
adc
and
sbb
mov
adc
ret
or
dec
das
nop
push
leave
das
std
dec
push
popl
rcl
orb
jmp
jp
add
out
jmp
xor
fwait
cs
or
jl
fs
lds
add
mov
inc
push
xlat
into
inc
pop
jl
mov
cld
mov
add
iret
fisubl
mov
sbb
test
popf
repz
or
popf
fists
repnz
inc
stc
mov
subb
out
jp
sti
fwait
loop
mov
lret
and
pop
mov
test
add
aad
fsts
clc
aam
pusha
cmp
adc
inc
dec
cltd
loope
inc
xchg
and
cmpl
or
sub
in
sbb
divl
adc
or
cs
pop
gs
xchg
mov
pop
shlb
xchg
push
cmp
xchg
jnp
lret
cwtl
into
fildl
test
mov
mov
xlat
xchg
add
jmp
xor
lret
pop
cli
add
rcr
clc
mov
ret
xor
sub
fistpl
dec
cmp
mov
out
pushf
pop
xor
push
scas
pop
test
jp
div
sub
mov
xchg
fildl
dec
lock
rolb
cmp
test
and
dec
lea
sub
pop
add
mov
lret
clc
fdivr
cltd
stc
pop
dec
arpl
xor
lods
cs
or
push
rol
je
xchg
jp
and
rorb
jae
mov
cwtl
clc
sub
and
rcrb
jne
orb
push
jo
ror
mov
ja
fsubrs
popa
push
xor
imul
orb
dec
or
and
xor
cmp
push
mov
sub
or
and
arpl
cmc
dec
add
sbbl
mov
push
lcall
ds
loope
test
mov
xchg
outsl
push
sub
inc
add
gs
cmpsl
or
xchg
adc
sahf
mov
loop
popf
pop
dec
call
pop
lret
add
sub
jle
push
sbb
and
das
test
mov
or
jp
das
and
lds
insl
or
or
scas
xor
cmpsl
in
cmpsl
lock
cmp
xchg
jbe
test
dec
inc
mov
add
sub
cld
ffree
mov
mov
sub
mov
jns
leave
pop
add
sbb
mov
je
repnz
push
fimull
xchg
cwtl
mov
sub
xor
je
mov
inc
clc
dec
xor
mov
inc
pop
jg
pushf
jne
addr16
addr16
adc
add
test
add
cli
outsl
xchg
and
lock
mov
fistpll
mov
mov
mov
xor
fs
xor
adc
sub
jmp
push
or
mov
mulb
push
sbb
or
xchg
movsb
jne
add
push
int3
cwtl
mov
or
testl
dec
lcall
je
shl
and
icebp
jae
mov
or
pop
cli
aam
mov
cmpsb
fs
dec
adc
subl
and
unpckhps
mov
subb
inc
xchg
sub
mov
mov
sti
les
or
add
xor
mov
je
or
lea
xchg
scas
out
sbb
sub
imul
shll
push
push
repz
ljmp
push
dec
xor
sbb
das
scas
mov
stos
sbb
clc
cwtl
inc
outsl
inc
fbld
test
inc
pop
jge
outsl
push
cmc
mov
pop
push
stos
dec
jge
sbb
cmp
sbb
test
test
push
xchg
pop
pushf
bound
sahf
cmp
jecxz
adc
xor
jne
mov
mov
aad
ret
add
sub
dec
loope
jmp
jecxz
pop
fstl
sbb
xchg
jecxz
adc
in
mov
retw
xorl
add
pop
xchg
xlat
mov
add
lock
xor
add
xchg
and
loopne
imul
movsl
sbb
jecxz
push
dec
and
insl
mov
outsl
aam
mov
inc
daa
add
lock
sbb
xlat
and
adc
sbb
out
inc
cmpsl
sbb
gs
sub
add
lret
lods
jns
add
xchg
xchg
mov
mov
les
mov
popf
mov
add
mov
mov
in
call
mov
test
jle
popa
int
or
mov
inc
sbb
ljmp
dec
mov
mov
or
aad
test
cmpsl
jg
mov
imul
jg
inc
idivl
lods
pushf
stos
subl
and
xchg
xor
sub
shlb
in
mov
psubusw
rclb
xor
add
addr16
xor
jle
xchg
push
cmp
xor
and
inc
jmp
jl
xor
adc
jg
int
out
jle
jae
scas
sahf
hlt
aad
sbb
iret
mov
push
mov
movsb
sahf
add
sub
sub
add
ljmp
adc
push
lcall
mov
sub
and
push
mov
mov
sti
fimuls
fsubrs
addr16
outsl
out
adc
sub
ret
stos
adc
das
mov
mov
daa
push
push
cmp
out
and
jg
das
enter
sub
adc
or
push
gs
inc
into
xchg
inc
fimuls
test
lods
mov
jg
leave
aaa
in
cltd
mov
sbb
ja
xchg
and
les
fldcw
leave
lahf
dec
xor
jbe
scas
insl
leave
js
xlat
fcoms
xchg
cmp
or
rol
pusha
or
push
jmp
cmp
sub
lahf
xor
loopne
cld
mov
mov
out
mov
pop
dec
idivl
stc
test
pop
mov
fcompl
mov
fsubr
adc
fldl
dec
sarb
outsb
data16
gs
adc
add
push
into
xor
or
xchg
and
adc
mov
dec
pop
cli
xchg
mov
adc
daa
push
cmpl
pop
iret
push
or
fsubl
inc
dec
xchg
imul
cltd
or
sbb
mov
xchg
test
mov
fildl
dec
push
cmp
cld
in
mov
pop
or
add
cmpsl
fs
repz
dec
lahf
ja
dec
aad
add
in
pop
orb
or
rcrl
mov
loope
or
fcoml
mov
fucom
xchg
inc
cld
jmp
adc
nop
outsl
push
imul
lahf
sbb
fstpl
push
mov
jmp
rcrl
sub
sbb
das
fcompl
adc
xchg
push
cltd
popf
adc
lcall
test
cmp
adc
xor
sub
loop
stos
push
idivl
cmp
mov
sub
add
cmp
rclb
insb
ret
shll
clc
mov
sbbb
nop
sub
mov
rorb
xchg
jl
pop
ss
mov
imul
outsb
sar
xor
dec
imul
into
cltd
dec
adc
stos
ret
pop
cli
and
das
movsb
dec
dec
xorl
push
lods
mov
add
and
rcr
push
test
mov
sbb
xor
or
out
fnstenv
mov
icebp
divl
lods
pop
xorl
pop
mov
push
in
mov
xchg
es
dec
and
pop
popf
jg
or
xor
sbb
sbb
lret
xchg
sub
in
mov
cmc
cmpsb
sbb
fiaddl
cmc
and
lods
subl
popf
dec
push
ds
nop
add
fidivs
rorb
or
add
daa
dec
and
xchg
cmp
push
mov
mov
xchg
push
mov
xor
je
int3
mov
push
pop
cmpsb
mov
cmc
jb,pt
adc
in
int3
hlt
popa
push
or
lret
inc
jl
int
push
test
and
sbb
push
aad
mov
inc
push
aam
push
ficomps
out
test
jno
loopne
pop
icebp
push
pop
inc
adc
or
jo,pt
xchg
clc
or
sub
sbb
jbe
xchg
xchg
inc
lods
addr16
jns
adc
jb
or
xchg
jnp
fdivs
sub
movsl
jecxz
imul
and
sub
xor
jns
sbb
xacquire
push
sbb
icebp
arpl
mov
out
inc
adc
push
in
push
push
lret
daa
mov
in
fnstcw
mov
lahf
lea
add
stos
pop
dec
cmp
push
xchg
sarb
ret
pop
bound
adc
jne
push
jb
mov
cmp
push
sti
mov
pop
fimull
push
int3
jg
add
add
daa
pop
stos
add
js
adc
aam
mov
scas
sub
and
mov
pop
je
mov
adcb
mov
pop
out
lods
pop
dec
sahf
xchg
mov
daa
inc
sbb
les
and
mov
sub
dec
pop
and
or
add
cmpl
xrelease
cmc
jmp
bound
or
fsubs
mov
cmp
xor
adc
repz
int3
pop
pop
adc
out
jmp
cmp
cltd
sbb
sbb
outsb
inc
mov
mov
mov
sbb
xor
aas
add
jbe
jl
inc
popf
imul
outsb
add
push
addl
xchg
cmpsl
fadds
mov
push
jl
xchg
leave
xorb
int
dec
jmp
sub
pushf
cltd
imul
inc
mov
cmp
mov
add
sbb
inc
push
pop
test
aaa
xor
cmpl
add
mov
sub
fwait
sub
sbb
notl
adc
cwtl
rclb
adc
pop
into
sbb
in
icebp
push
repnz
test
out
stos
je
add
mov
loop
icebp
sbb
jmp
out
popa
rcll
pop
mov
loope
dec
imul
xlat
sbb
inc
out
popf
loopne
inc
loop
add
mov
mov
test
mov
test
xor
out
push
loope
mov
mov
js
pop
mov
mov
mov
lods
cmp
and
std
andl
dec
adc
inc
inc
jns
lea
jle
fwait
xchg
test
add
mov
and
test
insb
xor
add
mov
push
in
mov
sub
ficoml
stos
adc
loopne
sahf
sub
push
xchg
mov
cmp
pop
pop
push
xorl
xchg
nop
and
das
jno
push
enter
push
fsubrl
inc
scas
or
leave
stc
pop
sub
repz
pop
sub
mov
xchg
and
fwait
jo
rolb
icebp
inc
add
stos
dec
sbb
punpcklbw
sbb
popf
loope
mov
in
jp
dec
pop
pusha
push
rorb
jbe
xor
adc
push
cwtl
cmpsl
testb
fsts
dec
xor
xor
shl
outsl
xorl
push
ds
js
sub
cmp
leave
or
jg
loop
dec
pop
rorb
inc
sub
jmp
jae
test
add
cmp
mov
cmp
dec
mov
pop
es
dec
fidivl
into
int3
test
fldcw
clc
add
pop
pop
aam
cltd
clc
adc
mov
test
outsl
push
icebp
rorl
jns
jno
idivl
xorb
mov
lret
aaa
mov
adc
nop
out
xchg
push
inc
mov
ficoml
inc
and
insl
sub
sbb
cli
mov
dec
repnz
xchg
outsl
movsb
adc
sti
push
inc
mov
xor
es
lar
int
lock
pop
xor
rcrb
sub
out
sub
hlt
or
push
mov
jnp
fbld
js
lds
cmp
testl
orl
jmp
jecxz
or
imul
sbb
fstps
lahf
push
mov
aaa
cwtl
cmp
cmp
sbb
mov
mov
sbb
adc
inc
shl
and
movsl
jle
ds
xchg
and
pop
stc
neg
mov
filds
mov
jl
cmpsl
jmp
xor
jge
stos
jbe
and
and
daa
lret
jno
mov
add
stos
out
mul
pop
lods
aam
outsb
and
pop
lods
outsl
test
jp
dec
aam
repz
out
cmpsb
push
mov
mov
push
add
mov
jo
out
js
lcall
stc
inc
loop
add
iret
add
ds
push
xchg
xchg
icebp
or
fwait
scas
mov
sbbl
cmp
cwtl
pop
out
rcrb
xor
fs
xlat
mov
insb
aas
or
imul
je
das
push
fidivl
push
les
cmp
pop
inc
lret
pusha
rcrb
sarb
mov
loope
rcrb
cwtl
jl
or
ret
insb
cmp
imul
mov
jmp
icebp
sbb
mull
mov
sub
enter
inc
lcall
ret
out
call
fisubs
push
inc
jecxz
scas
enter
shll
add
or
jge
dec
scas
mov
inc
jnp
and
aad
into
es
mov
and
push
push
pusha
jmp
lcall
and
fcomps
adc
mov
cmp
filds
sbb
ret
inc
ds
inc
loop
push
std
cwtl
mov
push
fbstp
bound
shll
jbe
test
add
push
loope
or
mov
sar
fidivrl
les
int
addb
jg
sbbl
jno
pop
cmp
rorl
jl
inc
sub
pop
addl
lock
ljmp
mov
jo
inc
xchg
lret
add
inc
aam
mov
mov
sbb
jns
scas
adc
sub
or
add
int
push
das
fsubr
or
js
adc
popa
or
push
push
hlt
sbb
sbb
and
cmpsb
cltd
test
add
pop
xor
cmpb
xchg
mov
add
dec
inc
add
insl
aam
aad
jp
and
popf
inc
cli
jecxz
xchg
mov
shl
lock
sub
and
and
cwtl
in
add
sbb
add
pusha
sbb
jne
fwait
repnz
ret
pusha
cmp
cmc
loop,pt
mov
pushf
push
mov
mov
pop
fidivrs
sub
push
adc
in
push
push
push
xchg
ret
nop
adc
call
xchg
fwait
dec
sub
xchg
popa
mov
loopne
mov
xor
bndstx
std
subb
in
cmpsb
mov
cmpsl
adc
mov
mov
int3
fdivp
movsl
fisubrs
cld
xlat
cld
mov
gs
andb
out
fisubrs
ds
and
jmp
sub
cmp
xor
xchg
xchg
lret
cmp
addl
stos
xor
movsl
inc
aaa
or
mov
xor
mov
into
sbb
xor
arpl
mov
js
jno
xchg
cmp
mov
or
jne
sbb
push
xchg
pop
xor
jmp
repz
xchg
pop
mov
mov
pop
iret
jp
mov
rorb
mov
dec
and
cmp
cmc
rcll
adc
ret
stc
jnp
js
aaa
cld
mov
lret
cmpsb
ret
inc
das
pop
jmp
pop
jns
xchg
js
inc
push
lock
sbb
adcb
dec
popf
mov
or
push
and
xchg
xchg
mov
rclb
pop
adc
inc
sub
push
mov
push
cmc
mov
in
mov
mov
jb
ljmp
sbb
cmp
cmc
jecxz
cmpsl
ds
shrb
clc
cmp
orl
and
inc
shrb
jmp
mov
sub
stc
mov
dec
mov
cmp
cmp
mov
or
mov
lods
pop
sahf
jbe
pop
inc
pop
cmpsl
cmp
pusha
movsl
sub
fs
cmp
notrack
push
mov
je
sahf
ret
xor
imul
sahf
ljmp
fisubrs
or
sub
xchg
or
pop
pop
arpl
or
jl
and
pop
shl
or
push
adc
inc
inc
mov
fnstenv
cs
xchg
add
mov
mov
popf
jne
mov
lret
aam
leave
cmp
pop
call
sub
stos
push
rcl
pop
sub
fwait
sub
cs
mov
incl
mov
add
sbbl
sbb
popf
push
push
or
fildl
xor
mov
adc
fimull
imul
idivl
ljmp
mov
mov
push
mov
shlb
dec
mov
sbb
sbb
adcl
fcomps
xchg
lcall
jo
lods
insl
daa
xor
lcall
and
int
push
cmpsl
in
lret
aaa
pop
cmp
jmp
fs
or
cmp
cld
lcall
leave
and
add
hlt
lret
mov
pusha
cmp
push
push
mov
push
xchg
xor
sahf
push
lahf
push
nop
jns
pop
dec
push
and
adc
push
dec
out
cs
movsb
mov
fs
add
adc
das
sbbb
dec
jp
cs
je
and
dec
enter
sub
mov
mov
cwtl
add
adc
adc
dec
jne
xor
push
cmp
cmp
xchg
xlat
rorl
jecxz
add
shl
mov
clc
pushl
fmul
movb
sbb
int3
das
mov
or
pop
loope
pop
sbb
mov
cmp
pop
jecxz
hlt
out
rorb
cltd
call
inc
fistpl
adc
dec
jl
fs
sub
inc
jl
les
stos
mov
inc
jmp
jns
es
sbb
mov
cmp
mov
mov
mov
es
add
fisubrl
dec
sub
dec
sbb
aad
cmc
add
add
lds
popa
cmp
shlb
mov
shll
pop
inc
repnz
scas
mov
lock
jbe
push
sbb
push
test
data16
bound
incb
sub
int
movsb
sbb
jns
cmp
sbb
test
imul
repnz
lods
shll
dec
xchg
psllw
and
cs
pop
pop
xchg
stos
push
push
or
rorl
lahf
or
jg
xor
jmp
pop
imul
pop
xchg
cmp
rcll
and
lock
jecxz
sbb
pop
add
clc
push
push
pop
loope
outsl
in
jmp
test
call
sub
xchg
test
dec
mov
cmp
pop
icebp
inc
add
jnp
jae
sub
dec
sub
es
add
mov
adc
mov
push
add
popa
add
push
inc
fildl
outsl
rcrb
dec
sbb
and
in
mov
imul
ja
or
adc
aam
xor
lcall
fisubs
inc
sti
dec
jmp
in
adc
mov
fs
ret
out
jnp
out
mov
test
je
fcoml
and
mov
and
pop
out
inc
bswap
je
sub
mov
fmuls
or
sbb
shrl
js
aam
push
mov
les
mov
mov
cmc
adc
clc
pop
test
ret
add
loopne
icebp
shlb
ret
add
sbb
xchg
stos
or
or
pop
mov
sahf
call
ret
dec
test
dec
mov
in
loopne
xor
pusha
pusha
addb
addl
loope
les
push
xchg
jl
mov
lods
addr16
pushf
hlt
mov
out
pushf
cmp
cmp
add
in
jmp
pop
inc
js
inc
push
cmc
sti
jb
inc
int
loopne
bound
syscall
sbb
enter
jecxz
push
das
fsubs
aaa
mov
test
xchg
push
aas
sahf
push
in
pop
fdivrl
lahf
ja
mov
adc
ljmp
or
mov
jb
cs
outsl
cmpsl
pop
loopne
adc
aaa
pop
arpl
clc
cmp
push
les
clc
dec
es
ljmp
add
and
fwait
sbb
mov
push
shll
clc
fs
pop
push
roll
pop
je
push
pop
icebp
xchg
fmull
and
sub
pop
push
cmp
movsb
inc
rorb
arpl
push
je
push
jbe
repnz
pop
jl
stos
in
sbb
ret
inc
dec
mov
es
test
cmp
or
pop
rorb
fnstcw
xor
in
pop
push
sti
icebp
je
cmp
and
out
js
rorb
ljmp
adc
or
xor
mov
sub
ja
ret
sub
sub
outsb
popa
test
jae
popa
xor
or
sahf
inc
mov
adc
lahf
nop
dec
mov
bound
pop
add
xor
push
inc
dec
incb
out
add
daa
add
scas
and
xor
xchg
or
lods
sbb
mov
and
fmull
push
ds
rcrb
ficoms
aaa
or
xor
outsl
insl
lret
daa
imul
aad
loop
loop
lea
cli
dec
jle
rorb
popa
push
jl
lea
lcall
fwait
clc
xchg
cmpsl
add
mov
data16
test
fs
mov
inc
hlt
xor
sbb
icebp
jno
push
jp
add
lock
inc
fstp
or
jl
shlb
faddl
lds
and
fs
cmpsl
mov
fs
sbb
inc
mov
pusha
cmp
popf
sbb
rcrl
inc
dec
insb
jno
sub
outsl
popf
lock
cld
and
mov
hlt
cmp
adc
cs
mov
bound
mov
mov
int3
cmc
test
int3
mov
mov
push
sbb
out
inc
jb
jae
dec
dec
cmp
push
lahf
xor
cs
xchg
add
outsb
pop
repz
inc
mov
or
mov
fwait
push
xchg
mov
push
push
dec
push
roll
rolb
sti
cmpsb
shl
add
lret
iret
loop
add
iret
jno
add
mov
andl
stc
sbb
xor
xor
adc
fcomip
dec
xchg
or
aam
push
out
mov
sahf
push
in
mov
into
sub
mov
ret
movsl
or
test
jne
fstpl
mov
leave
int
inc
cmpsb
out
lea
mov
push
add
adc
mov
lahf
fidivl
int
add
jp
lret
mov
sub
hlt
sbbb
lret
cmp
gs
into
in
sbb
enter
cmp
pusha
icebp
xlat
repnz
pop
adc
mov
fidivs
cmc
movsb
cld
rol
jb
imul
jo
into
repz
daa
pop
cmp
movsb
out
mov
add
mov
out
jb
cwtl
pop
xchg
xchg
pop
push
shlb
aad
clc
daa
aam
in
and
xchg
lock
pop
mov
lret
js
orb
ret
fstp
cmp
icebp
popa
pop
cmpsb
adc
mov
rcll
pop
jo
int3
divb
adc
aas
jl
sub
rcrl
pop
sahf
into
mov
mov
mov
arpl
popf
lret
and
pop
sbb
test
xor
iret
xchg
and
xor
mov
cmpsb
gs
cmp
notb
fsubr
xor
packssdw
and
add
loopne
lahf
and
std
icebp
or
icebp
adc
movsl
in
push
clc
pop
mov
push
mov
das
sbb
fwait
in
inc
clc
push
adcb
jne
fdivrl
jge
cmp
lret
sahf
cmp
pop
cmp
jle
ss
mov
lods
or
test
not
iret
popa
fbld
push
and
mov
sub
loop
sub
test
subb
leave
cmp
or
push
iret
ficomps
lock
fcmove
les
mov
int
in
stc
xchg
mov
cmpsl
sub
mov
add
adc
js
enter
subl
adc
push
mov
adc
inc
pop
jmp
loope
rclb
aad
and
push
ljmp
lahf
push
inc
mov
mov
xor
outsb
stc
es
mov
adc
aaa
insb
test
cmp
fcmovnb
gs
mov
addr16
dec
sub
mov
inc
pop
or
test
ret
shrb
fwait
loopne
cmp
mov
mov
dec
xchg
push
dec
out
add
pop
lods
xchg
fmull
in
stc
subb
pop
cmp
int
push
fs
cmp
sbb
bound
call
scas
call
hlt
and
addr16
das
jge
jo
insb
insl
repnz
push
stc
orb
cmp
shlb
rcl
arpl
dec
cmc
aaa
fcoml
stos
jb
mov
add
mov
ret
push
roll
aas
mov
cmp
adc
ja
sbb
scas
icebp
subl
cwtl
xchg
jmp
mov
sub
mov
pop
in
in
pop
mov
dec
stos
je
pop
stos
filds
inc
cld
xchg
iret
pop
pop
fwait
enter
repnz
push
dec
add
dec
adc
xchg
add
xchg
fcompl
gs
int3
cmp
loope
xchg
loope
xchg
insl
test
sbb
xchg
mov
iret
mov
arpl
fisubrs
xchg
xchg
xor
push
test
mov
fidivrl
mov
leave
jge
inc
dec
pop
addr16
mov
jbe
repz
sbb
cld
cmpl
and
inc
in
cld
addl
dec
xchg
divl
js
add
dec
in
addr16
fisttpl
frstor
nop
mov
lods
dec
jecxz
leave
jo
shrb
popa
cwtl
jle
hlt
inc
jnp
pop
ret
aad
or
loop
filds
add
loop
xchg
daa
jae
mov
inc
sti
add
fistpll
jg
popf
push
int3
sbb
jbe
xchg
cs
shrb
insb
mov
orb
movsb
mov
rclb
cmp
cmp
jl
pop
ds
call
repz
lods
outsb
cmc
jp
lahf
mov
loope
stos
cmp
mov
pop
xchg
lret
mov
jae
xchg
cltd
insl
push
aaa
test
fwait
push
cmpsl
push
ds
inc
jmp
clc
nop
rcr
adc
loopne
stos
xchg
adc
mov
push
filds
call
pop
orb
movsb
pop
sub
adc
xchg
add
xchg
loope
pop
arpl
cmc
and
es
movsl
fbstp
mov
mov
add
pop
subl
in
jb
mov
ffreep
xlat
and
test
ret
jne
adc
ds
leave
iret
ret
ljmp
jno
xor
and
popf
fs
inc
mov
and
push
mov
mov
pop
je
lods
cmp
mov
jmp
and
imul
jne
mov
insl
test
xor
push
cld
xchg
sub
fisubs
loop
inc
out
push
in
inc
xchg
dec
mov
cmp
push
xchg
dec
dec
les
push
fdivs
sbb
in
and
push
clc
mov
cli
mov
mov
pop
push
aas
lcall
scas
sub
dec
ljmp
push
push
loope
icebp
mov
push
pop
adc
xchg
xchg
filds
inc
inc
stos
data16
movl
fstl
popa
and
lahf
sbb
or
out
jnp
pop
inc
or
je
push
inc
icebp
popf
lcall
adc
and
in
js
or
pcmpgtb
enter
jne
lcall
dec
das
push
leave
xchg
push
xor
pop
movsl
sbb
out
insl
test
jb
and
gs
mov
inc
cli
aam
das
outsb
js
or
dec
popa
sarb
ret
mov
cmp
mov
sub
xchg
ss
xchg
in
stos
push
inc
push
cmp
push
xor
mov
add
mov
push
hlt
in
mov
loopne
cmp
lret
inc
rorb
push
sbb
push
mov
jbe
imul
imul
mull
xor
add
inc
imul
dec
lock
sbb
dec
fs
iret
adc
insb
pop
pop
dec
imul
push
push
and
dec
mov
cmp
enter
mov
imul
inc
ljmp
clc
sub
lcall
jnp
fmull
loop
fdivp
inc
and
push
jo
hlt
cmp
lods
push
push
sbb
or
sub
inc
in
aam
inc
jnp
test
jge
push
jp
push
xchg
rcll
test
enter
in
orb
add
int3
pop
lock
pop
add
adc
das
fwait
inc
sbb
pop
popa
add
mov
or
and
jp
xchg
stos
loopne
movsb
out
fldcw
mov
lock
enter
loopne
cmpsl
xlat
sub
movaps
daa
in
lock
nop
and
test
mov
aas
aaa
or
ja
ret
cld
enter
jecxz
test
or
add
jae
aaa
insl
mov
cmp
roll
lock
inc
inc
sarl
hlt
cwtl
and
sarl
lock
inc
mov
stos
jle
arpl
mov
fwait
clc
mov
inc
mov
rorl
add
fcmovnbe
cmpsb
jns
sub
stos
sub
mov
cwtl
clc
xor
nop
jp
addr16
andb
inc
cli
addb
scas
mov
xor
sub
jecxz
js
aaa
dec
call
movsl
push
or
test
cmpsb
aaa
stc
xor
dec
xlat
mov
push
mov
lahf
data16
jbe
adc
xchg
pop
dec
adc
addr16
psadbw
add
movsb
sub
cmp
sub
insl
mov
inc
mov
xorb
dec
clc
mov
pop
pop
mov
pop
hlt
loope
fistpll
add
lahf
xor
stos
movaps
xor
add
dec
lea
jno
jno
push
inc
dec
jl
shrl
sub
out
mov
shrl
mov
mov
xchg
jnp
xchg
das
inc
push
test
test
insb
mov
sti
adc
add
vpshufd
jae
sbb
dec
mov
jae
jle
pop
out
dec
jae
sbb
push
bound
and
pop
push
lret
lahf
jo
es
movsb
fcomi
sub
xor
mulb
in
mov
in
fisttpll
je
add
or
or
mov
ljmp
js
lret
das
fisttps
int3
inc
out
add
inc
xchg
and
cmp
jbe
mov
sbb
aad
ret
push
dec
js
xchg
sub
data16
pop
xor
addr16
xor
or
sub
fbstp
stc
cmp
pop
pop
js
mov
add
pop
mov
sub
mov
adc
push
inc
pop
or
aad
test
sti
loopne
fwait
and
clc
daa
and
js
push
dec
sub
cmpsb
mov
in
test
cmp
mov
xchg
je
clc
and
sarb
enter
loope
lock
out
push
lock
jge
stc
cs
adc
imul
or
adc
and
sub
je
and
testl
std
orl
test
outsl
inc
sub
std
cmpsl
rep
lock
mov
gs
rorl
inc
or
imul
push
and
das
mov
xorb
movsb
xor
cwtl
scas
adc
push
movsl
sub
jp
call
fstp
or
test
sbb
sti
xchg
sbb
add
mov
test
popa
fdivp
mov
shlb
xchg
psubw
je
sbb
ret
aam
addb
and
dec
add
in
xchg
or
push
bound
mov
icebp
adc
xchg
or
add
mov
fdiv
cmpl
add
push
pop
sbb
adc
mov
daa
push
push
loop
jbe
lds
and
pop
mov
enter
scas
xor
jp
sbb
cmp
mov
jae
push
cmp
lods
push
lcall
add
sub
mov
es
or
dec
pop
xchg
test
cli
add
push
stos
lret
add
in
ror
pushf
sti
mov
mov
push
dec
dec
mov
lcall
pop
inc
xor
pop
ss
sbb
jl
rolb
fldl
push
xor
xchg
cmpl
or
stos
sub
sbb
ljmp
lods
xlat
mov
mov
mov
orb
jns
mov
bound
rolb
fnstenv
imul
or
je
push
sbb
repnz
into
lock
clc
rorl
xor
adc
inc
add
adc
hlt
inc
mov
mov
ss
xor
rcrb
and
push
cmp
lret
sarl
out
lcall
sbb
fwait
jb
pop
xchg
inc
push
xchg
or
les
inc
xchg
mov
lahf
shrl
and
jbe
ljmp
popa
popf
scas
testl
mov
ror
call
stos
ds
dec
pop
bound
test
pop
add
adc
repz
fists
xchg
push
hlt
movsb
xchg
pop
repz
add
scas
sbb
das
push
cld
mov
ret
test
int3
xor
bound
mov
into
cmc
add
arpl
shl
mov
dec
add
daa
cmc
sahf
mov
adc
std
std
jmp
sarb
add
mov
add
dec
lea
or
and
stos
mov
cmp
adc
xor
jae
inc
and
cmp
loop
add
or
in
dec
cmp
cltd
pop
mov
jecxz
iret
or
mov
inc
lods
push
mov
sub
js
dec
test
cli
jae
adc
lea
roll
rclb
cs
lds
orl
inc
lret
pusha
jno
jbe
mov
mov
pop
mov
push
subb
xor
adc
ljmp
out
mov
aad
idivl
ret
in
sti
inc
sub
inc
mov
loop
aam
sbb
push
sahf
bound
add
ja
movsl
dec
pop
pop
ss
push
and
jne,pn
sti
dec
jg
ja
sub
pop
cmp
pushf
or
mov
arpl
popf
movb
bndstx
test
jg
jl
mov
in
xor
xchg
dec
js
outsl
xor
adc
jl
mov
fidivl
pushf
mov
movsb
mov
out
push
mov
movl
dec
mov
mov
test
into
addl
push
mov
fcmove
xchg
cmpsl
pop
mov
out
inc
mov
xor
or
push
add
popa
std
movsl
mov
jno
cld
pop
pop
inc
repnz
inc
aad
dec
adc
sbb
xchg
sti
add
outsb
xlat
jg
lcall
ss
push
mov
dec
mov
imul
xchg
out
out
or
insb
push
and
xlat
sbb
loop
adc
pop
inc
dec
mov
ret
lea
cmpsl
adc
inc
fiadds
or
mov
or
pop
lods
xchg
js
add
xor
mov
pushf
mov
test
push
xchg
fbstp
jno,pn
sbb
jle
cmpsb
ret
adc
pusha
add
testl
mov
sbb
aaa
push
mov
push
je
jno
aad
je
ss
leavew
into
stos
test
xchg
pusha
loopne
xchg
sub
and
loopne
pop
mov
lahf
pop
in
mov
xor
mov
push
cltd
dec
xchg
jge
cmp
icebp
loop
cmp
daa
add
add
bound
repz
stos
cwtl
mov
movsb
sbb
out
cs
pop
out
test
notl
xchg
aaa
sbb
xchg
jle
add
into
xchg
push
mov
jne
iret
push
jno
adc
loopne
lock
aas
popa
std
jge
jl
les
mov
lods
add
pop
jecxz
bound
add
xchg
pop
imul
xchg
push
cmpb
pop
add
xchg
xchg
xor
lods
mov
dec
stc
sbb
xor
outsl
adc
pusha
push
pop
lahf
pop
popa
jbe
mov
xchg
pop
stos
test
add
mov
lods
mov
mov
add
fisubs
cmp
xlat
sbb
mov
jg
add
and
lds
pop
cs
jmp
cmp
mov
test
sub
aad
pop
fistpl
pop
push
push
xchg
gs
or
add
call
scas
or
sbb
cmp
pop
les
bndstx
xor
lret
data16
mov
lock
adc
jmp
shrb
mov
sub
call
iret
and
xor
pusha
arpl
or
mov
mov
fs
xchg
cwtl
add
and
jg
inc
jae
push
enter
ret
icebp
dec
push
pop
jne
dec
pusha
xlat
inc
test
pop
dec
add
in
stc
popa
jmp
je
mov
sub
xchg
fwait
pop
mov
fwait
icebp
mov
adc
jbe
or
stos
test
push
shll
jmp
hlt
pop
lahf
in
or
and
pop
cmp
scas
leave
sbb
fistpl
mov
mov
fdivrs
addr16
sub
stc
pusha
cmp
cld
mov
or
pop
mov
xor
dec
sbb
stos
addl
cld
or
jb
popa
stc
int3
xor
mov
fwait
iret
inc
test
or
jmp
cmp
dec
fdivrs
dec
inc
leave
nop
adc
aas
movsl
ret
add
nop
int
pop
pop
jecxz
pop
push
jle
fsubl
jecxz
push
movsl
ja
or
ret
iret
sbb
mov
lcall
mov
xchg
add
subl
cltd
fnstenv
mov
xor
add
subb
imul
jae
rolb
inc
adc
sub
outsb
dec
cli
xchg
push
movsb
jb
lods
jmp
xor
cmp
sbb
stc
imul
jae
dec
add
aaa
and
rorl
push
ficoml
mov
pusha
clc
cmp
in
jo
push
push
dec
lcall
das
test
inc
and
jbe
fs
shrl
insb
loopne
movl
loope
pop
xor
sub
cmc
inc
js
jp
push
icebp
roll
adc
add
or
mov
pop
jmp
sub
and
and
mov
xlat
pop
fistps
push
mov
jno
inc
aas
lea
mov
adc
jns
jmp
dec
and
or
mov
xor
outsb
add
mov
xor
mov
xor
pop
adc
xchg
push
or
inc
iret
inc
pop
push
test
icebp
mov
xchg
and
clc
aad
xor
movsl
push
popa
mov
mov
dec
xlat
push
mov
lods
jno
scas
sahf
lock
dec
loopne
lods
aam
xor
sbb
mov
jbe
adc
pushf
adc
lock
fadds
mov
inc
nop
push
lret
addr16
and
in
jno
negl
cmp
daa
popf
xor
and
test
fcoml
add
aaa
cmpsl
push
push
mov
jno
inc
xor
pop
fucomip
mov
pop
pop
sub
jno
in
adc
lods
shrl
jle,pt
insb
mov
mov
es
adc
cs
lahf
jecxz
rclb
call
adc
mov
cmpsb
cld
js
roll
sti
or
mov
and
lods
cmp
inc
loope
mov
push
pop
add
mov
outsl
sub
mov
clc
cmp
push
test
pop
xchg
jnp
cmc
push
xor
loope
jbe
hlt
shr
aam
les
inc
stos
add
pop
xlat
or
jns
pop
cmp
ja
mov
inc
push
shr
dec
jecxz
add
rclb
loope
pop
xchg
sbbl
sub
ljmp
push
dec
jns
xchg
fidivl
imul
stos
fistps
dec
or
lahf
pop
or
and
mov
or
mov
mov
push
add
and
pop
ss
cwtl
push
fstps
test
inc
icebp
jb
ret
rclb
mov
push
or
sbb
ror
cmp
sbb
lea
adc
xor
cld
imul
aas
movsl
imul
int3
sbb
sarl
test
cmpl
clc
test
std
pop
int3
cld
inc
icebp
aaa
xchg
orl
sbb
push
jno
aas
push
aad
scas
fwait
push
mov
pop
inc
fldln2
daa
popa
cmp
pop
insb
sbb
insl
and
ret
lock
xchg
cmpsb
fwait
sbb
jmp
aam
or
shrb
into
cmc
mov
sbb
cld
movsl
mov
jae
xor
adc
push
sbb
push
mov
dec
inc
dec
inc
pushf
and
or
ret
push
ret
aaa
sub
xchg
pop
mov
sbb
pop
je
fcoml
out
arpl
test
add
pop
jb
add
aaa
and
pop
loopne
lcall
sub
enter
movsl
sahf
ret
pop
outsl
sub
pop
stos
stos
push
jmp
imul
imul
jns
mov
or
aas
jmp
xor
sub
jo
cvtpi2ps
lcall
js
int3
cmp
push
jno
push
call
adc
mov
ror
adcl
mov
into
decb
andl
pop
mov
adc
push
inc
arpl
testl
push
jl
fiaddl
pop
inc
dec
hlt
cmp
dec
and
fstpt
adc
add
icebp
xchg
mov
in
mov
jo
nopw
leave
jecxz
sti
push
mov
aas
and
push
fcmovnbe
dec
insb
add
imul
testl
les
pop
xchg
sbb
dec
mov
cmp
jne
sub
fcoms
and
mov
jg
jecxz
fldcw
std
pop
lods
repz
mov
jle
lock
mov
mov
inc
insb
test
xchg
dec
and
sti
les
jo
lret
ret
mov
add
mov
jbe
pusha
fsubrs
lahf
fimull
or
je
jne
aaa
and
mov
sbb
hlt
push
push
push
hlt
push
xchg
lret
jg
jp
iret
pop
in
mov
mov
push
xchg
cmp
xchg
testb
out
out
mov
lret
pushf
pop
rorb
aam
add
fidivs
pop
adc
mulb
pop
cmp
rorb
mov
push
adc
sbb
push
mov
and
inc
pushf
add
or
test
rolb
test
and
push
pop
inc
scas
mov
inc
jp
daa
xchg
insb
and
jl
pop
in
add
mov
lret
out
sbb
gs
push
inc
cmp
addr16
and
mov
mov
pop
jmp
shll
ja
call
mov
addl
xchg
push
clc
adc
fistpll
sbb
add
ds
rep
ss
xchg
pop
inc
gs
test
outsb
push
out
mov
xor
into
lock
xchg
dec
push
xchg
aas
inc
xor
test
inc
das
enter
mov
cltd
ja
jecxz
dec
test
lods
enterw
rclb
test
cwtl
leave
movsb
push
mov
mov
stos
repnz
cmp
test
call
cmp
xor
lret
inc
loopne
or
repnz
adc
add
and
jecxz
add
icebp
mov
fdivs
add
cmp
jge
pushf
ljmp
xchg
or
add
addl
jno
inc
sahf
loope
and
add
inc
jl
push
clc
stos
js
adc
xor
mov
aaa
pushf
jmp
aam
ss
adc
out
cmc
push
dec
or
add
test
inc
push
icebp
add
in
add
shll
cmp
lock
or
sti
lods
xchg
int
inc
push
lods
mov
fsts
or
mov
xor
sbb
pushl
jge
outsb
mov
adc
jns
sub
dec
cwtl
sbbl
ret
str
and
popl
pushf
jge
imul
xchg
or
enter
mov
lret
movsl
bswap
mov
rcll
imul
and
popl
rolb
mov
out
add
cmp
mov
js
sub
inc
scas
pop
xchg
cmpl
xchg
in
fcomps
stos
dec
cli
sub
call
sub
pushf
pop
movsb
repnz
jae
cwtl
mov
add
inc
pushf
cs
and
ret
sub
sbb
sub
cmp
repnz
dec
daa
lds
in
lret
fwait
lea
push
mov
mov
je
cmc
xchg
or
js
jbe
dec
sbb
movsb
ja
lcall
sahf
or
jecxz
push
and
jne
in
jg
jg
sbbl
jns
test
jne
ss
or
lret
add
and
xor
outsl
cmp
aas
xchg
loop
in
adc
lret
aad
pop
xor
inc
icebp
and
rcrl
pusha
in
popa
mov
cmpb
loopne
aaa
push
rol
scas
decb
mov
add
xchg
adc
insb
push
clc
rol
clc
sub
arpl
inc
ret
mov
adc
cmpsl
dec
cmc
stos
push
movsl
fisubrs
popf
icebp
jecxz
incl
dec
dec
push
mov
and
sub
inc
adc
push
jbe
and
jns
ret
inc
add
addr16
mov
or
ficoms
je
sub
mov
test
or
push
test
xchg
ficompl
hlt
push
sub
mov
not
sarb
push
push
cltd
je
add
inc
cmp
movsl
addr16
push
lea
loop
cmp
lock
cwtl
pop
mov
inc
or
rcl
add
or
jb
loope
mov
ret
mov
andl
inc
pop
lret
mov
gs
adc
fimuls
cmpsl
out
stos
roll
fldl
ja
push
cmp
mov
imul
scas
push
pop
and
pop
mov
sbb
jl
add
push
jg
mov
mov
daa
mov
mov
repnz
nop
or
es
push
push
stos
aas
pop
jae
push
aam
pop
push
mov
add
mov
sbb
or
or
mov
stos
sub
icebp
cmc
imul
push
out
jb
iret
jne
inc
loop
pop
outsb
add
add
cmpsl
or
mov
stc
inc
pop
inc
jg
addr16
adc
push
adc
fsubrl
out
imul
pop
js
sub
xchg
lods
icebp
dec
push
loopne
cmp
cld
outsb
std
inc
outsl
cmp
out
xor
inc
ljmp
inc
nop
mov
xchg
or
ljmp
stos
add
pop
inc
ret
xchg
test
inc
jle
iret
jno
mov
jge
push
enter
shrd
outsb
xor
fildll
call
cs
mov
xor
mov
aas
mov
jl
or
mov
cmpsb
dec
cmp
mov
and
lcall
shl
loope
pop
cmp
dec
popa
mov
lods
mov
mov
xor
mov
bound
xchg
jge
mov
icebp
shll
ret
jno
xor
rclb
je
xor
xlat
ja
sub
outsl
stc
popa
xchg
xor
mov
sbb
lcall
movsb
cmpsl
loopne
inc
jae
lcall
push
shll
mov
mov
into
dec
les
ret
mov
insl
and
pop
lahf
dec
lcall
adc
int
pop
lods
out
pop
dec
test
shll
sub
adc
cmpsl
add
dec
mov
or
add
and
jmp
daa
jl
xor
test
fs
pusha
or
mov
xchg
in
bswap
push
lock
sbb
stos
or
in
pop
cld
add
mov
or
mov
push
mov
rclb
es
ja
arpl
dec
arpl
jmp
adc
fwait
dec
lods
dec
sbbl
xchg
xor
sbb
std
addb
ret
ds
xchg
xor
pop
sub
adc
jmp
and
movsl
inc
icebp
shll
sbb
xor
sub
sbb
pop
xor
loop
adc
xchg
push
dec
loop
cmc
jne
xor
aam
mov
icebp
ljmp
xchg
test
fistl
loopne
loopne,pn
xor
pop
shlb
ljmp
dec
inc
add
sbb
mov
dec
imul
or
and
mov
loopw
js
pushf
and
push
push
mov
ffree
nop
lods
orl
mov
insl
mov
jg
sti
jl
sahf
inc
xchg
cmc
lahf
push
aaa
jge
emms
fadds
movsl
in
insb
mov
push
xchg
bound
cmp
ljmp
pop
mov
scas
xchg
sub
sbb
dec
fnsave
lds
cli
stos
sub
out
jne
xor
add
or
inc
jbe
outsb
cmp
mov
in
stos
push
mov
loopne
outsb
arpl
lret
sbb
xchg
and
or
or
out
cmpsb
mov
cmpl
mov
or
push
pop
jne
flds
cmp
xor
xor
stos
jp
sub
cmp
push
subb
pop
insb
das
xchg
xchg
push
xabort
ja
les
lahf
push
rcr
pop
jae
push
add
bound
shl
inc
dec
sbb
fildl
mov
sbb
mov
das
dec
add
mov
es
stos
test
jge
fdivrs
cmp
add
mov
out
loopne
add
lods
lock
xchg
add
jle
inc
daa
inc
push
jmp
cmp
out
add
xchg
ret
jge
int
dec
js
les
xchg
xchg
test
movsl
xchg
add
jmp
ja
adc
or
mov
arpl
and
sub
repnz
arpl
lock
pushf
enter
enter
std
pop
iret
mov
movsb
xstore-rng
cmpsl
pop
popa
xchg
jnp
ds
mov
mov
pop
fcmove
or
loopne,pn
fisttpll
cmpsl
adc
xor
mov
pop
push
or
pop
fiaddl
sti
and
push
aaa
out
in
mov
fwait
mov
sbb
enter
xchg
in
xchg
lea
scas
faddl
cmp
jp
add
mov
inc
pop
xor
int
or
pop
rolb
and
scas
cmc
insb
movq
mov
xchg
push
lret
lods
xor
pop
movsl
cwtl
ss
and
cld
mov
sbb
out
cmpsb
push
add
aas
jp
jns
movsl
jno
shrl
fldl
int
ds
cli
sbb
dec
inc
shlb
lea
in
xor
mov
aaa
mov
pushf
stc
das
jl
pusha
push
sub
xchg
xchg
loope
mov
rclb
pop
cli
jle
add
and
jne
in
ret
cwtl
pop
pop
faddp
push
jmp
dec
aas
testb
dec
mov
pop
inc
and
sub
sbbl
mov
adc
icebp
ja
shlb
nop
in
popf
rorb
pusha
addr16
insl
clc
adc
xor
psllw
stos
mov
stos
mov
out
jo
into
icebp
ficompl
ret
inc
or
pusha
xlat
xor
push
xor
jge
addl
jl
sahf
mov
add
adc
mov
add
adc
int3
sti
mov
sbb
sub
push
int3
and
add
ds
mov
mov
js
imul
dec
mov
cmp
xchg
jmp
aad
pop
cmp
fsubl
ss
adc
lea
dec
cmp
push
xchg
and
sbb
lods
cmp
and
cmpsl
aam
sub
arpl
dec
or
lahf
fmull
cmp
and
dec
loope
mov
cmp
scas
xchg
xchg
or
jnp
adc
mov
cli
lds
iret
mov
out
cwtl
movsl
jo
pusha
and
mov
call
push
out
push
je
or
and
mov
scas
aaa
test
or
scas
cmp
test
pop
mov
mov
sub
lret
push
mov
jb
scas
and
mov
frstor
inc
loope
das
sub
int
movsl
loop
xor
mov
and
xchg
lahf
frstor
pop
push
and
in
xchg
rcrl
rcrb
clc
popl
mov
in
negl
iret
sub
mov
xor
adc
std
pop
iret
xchg
rcll
data16
cmp
push
pushf
sub
jg
pop
sbb
or
pusha
ret
fdivrs
inc
add
push
outsl
mov
je
ja
cmpsl
sbb
sbb
mov
popf
add
sub
inc
add
in
push
sahf
mov
insb
adc
pop
xchg
or
sub
cmp
fisttpll
lcall
ret
xor
xchg
loop
sbb
dec
adc
lea
in
jae
or
or
enter
cmpsb
fnsave
dec
pop
insl
int3
aaa
outsl
data16
sbb
test
enter
in
testb
dec
push
cmp
xor
scas
jnp
add
jne
sbb
inc
clc
jnp
cmp
fnstcw
out
in
jecxz
jo
push
dec
loopnew
gs
xor
in
jge
add
mov
lcall
xor
pop
scas
pop
jne
fwait
rclb
xor
pop
xchg
jmp
xor
jnp
in
mov
dec
inc
sbb
lds
jbe
and
ss
call
leave
inc
sbb
pop
lahf
sti
ret
js
jl
xchg
movsl
add
adc
cmpsl
out
sub
mov
mov
inc
jp
aad
inc
icebp
push
sbbb
loopne
aas
adc
inc
addr16
fyl2x
xchg
pusha
xor
cs
pop
sbbl
or
sub
movsb
test
dec
sti
xchg
insl
in
fdivl
add
adcb
pop
pop
dec
xchg
loope
pop
dec
pop
je
out
mov
in
jns
ss
into
mov
mov
dec
ficoml
and
cmp
cmp
mov
cmc
in
adc
inc
cs
loop
pop
loop
xchg
push
int
add
dec
ss
add
aaa
bound
pop
mov
pop
dec
push
mov
bound
lcall
xchg
mov
mov
mov
gs
dec
ret
sar
adc
pop
pusha
fcmovb
lahf
je
or
sub
mov
mov
sbb
and
adc
js
jmp
add
inc
adc
sbb
mov
pop
push
movsb
sub
pop
mov
dec
or
lret
jae
push
xchg
pop
mov
outsb
pop
sub
add
mov
imul
dec
pop
jecxz
xchg
sub
scas
jle
mov
xor
mov
cmp
lods
fistpll
adc
mul
std
insl
arpl
cmp
rcll
ljmp
push
jecxz
push
sbb
dec
jp
js
dec
xchg
or
dec
jg
pop
push
es
in
aad
sub
in
mov
scas
and
xchg
icebp
adc
push
out
cmpsl
adc
cwtl
pusha
sbb
pop
shrl
push
xchg
jmp
or
enter
xor
lcall
es
add
xor
mov
sub
out
inc
or
xor
dec
and
sar
or
adc
cmpsl
and
lret
or
inc
sbb
aad
std
xchg
sub
add
mov
push
rolb
jb
nop
mov
gs
jns
dec
dec
add
push
inc
popf
xor
or
loope
adc
adc
shl
dec
mov
push
push
aad
cmp
push
leave
rorl
sbb
sub
loope
sub
sub
jne
int
or
imul
jae
mov
std
stos
sub
push
sarb
mov
inc
mov
jmp
push
add
in
nop
inc
inc
lret
mov
pop
decl
and
inc
dec
or
sub
inc
dec
xchg
cmp
and
test
insl
rolb
in
mov
cmpsl
fnstsw
nop
inc
cmp
pusha
xchg
pop
loope
adc
ljmp
popf
fmuls
shrb
add
jmp
fmull
ja
pop
aam
outsl
push
push
test
mov
loop
pop
lods
pushf
add
push
hlt
out
inc
dec
mov
loop
mov
shr
icebp
ss
nop
lds
nop
dec
jae
xor
push
mov
loop
loope
lods
mov
cmc
hlt
cltd
sbb
stos
inc
das
sub
aad
outsl
xorl
push
jp
ret
stc
cmpsb
adc
hlt
ja
lret
in
iret
insl
dec
jo
cmp
andl
in
inc
mov
jae
and
xchg
arpl
cmp
jb
xchg
ret
add
pop
subb
mov
xchg
test
aad
inc
xchg
sbb
in
xchg
push
adc
sub
cmp
sbb
mov
je
ds
sbb
std
cltd
xchg
lock
repnz
and
jb
or
inc
addps
imul
cwtl
sarb
jecxz
xchg
xchg
xor
sti
pushf
sub
adc
and
add
fildll
xchg
push
xor
rorb
cmp
sbb
pop
cmp
xor
lods
ljmp
xchg
xchg
inc
push
pop
xlat
int
mov
stos
daa
stos
cld
sub
pop
cld
cmpsl
add
push
push
subl
xchg
xchg
add
xchg
repz
movsl
pusha
adc
imul
inc
push
fdivp
xchg
mov
and
movsl
lods
movsl
lahf
lcall
lahf
push
inc
mov
xchg
jle
and
xorb
mov
fistl
mov
mov
xor
inc
lods
scas
iret
jmp
rclb
cmpsl
xlat
dec
hlt
push
dec
nop
outsb
out
inc
mov
into
aam
insb
movsb
push
push
out
adc
pusha
cmpsb
sbb
shll
pushw
ljmp
pop
push
inc
cmp
lret
lcall
xlat
cmc
aam
xchg
daa
imul
and
ret
pop
faddp
dec
jg
test
pusha
push
mov
aad
or
jb
movsb
mov
out
xchg
jl
jo
lock
andb
and
inc
icebp
jbe
mov
sbb
jo
addr16
push
daa
sbb
sub
cmc
sbb
mov
ja
sarb
pop
jg
inc
sbb
shlb
repz
mov
push
inc
cmp
mov
pushl
mov
into
mov
adc
mov
push
test
pop
loop
inc
sti
pop
jbe
jle
mov
std
jge
fcmovnbe
sahf
mov
int3
push
repz
inc
dec
jge
cs
and
push
les
xor
mov
es
lcall
adc
lock
pop
dec
hlt
mov
dec
mov
dec
out
repnz
and
stos
dec
inc
cmp
dec
loop
push
lock
pop
push
mulb
imul
pop
mov
gs
outsl
cmpsl
push
cld
cwtl
cli
inc
push
call
subl
movsl
jl
sbb
cmp
loopne
ret
into
nop
push
push
sbb
icebp
push
pop
imul
rorl
fcoms
cmpsl
stos
jb
xor
ror
push
cmpsl
adc
mov
cmp
mov
inc
aaa
cmp
xchg
hlt
in
xlat
sbb
dec
mov
cmp
push
std
popf
ret
or
icebp
sub
jno
inc
adc
in
dec
cli
xor
aaa
int3
sbb
inc
and
fwait
aad
fiadds
or
sarb
or
adc
int
rcll
sub
push
cmp
sbb
jb
js
jmp
inc
mov
push
xchg
add
add
out
leave
mov
lock
fwait
lods
icebp
push
xchg
xchg
add
js
jecxz
and
jle
das
adc
mov
or
ja
js
inc
dec
or
jg
inc
fisubrl
test
xor
inc
push
jp
cmc
add
inc
ds
fld
xor
pop
pop
pop
sbb
test
sbb
inc
xorl
mov
dec
out
push
icebp
mov
in
adc
mov
cmpsb
fdivl
les
push
js
adc
rorl
rorl
test
xor
outsl
ljmp
xor
test
jbe
inc
add
pushf
jge
pushl
add
xchg
leave
imul
and
pushf
mov
fadds
out
cmp
mov
data16
adc
cmp
push
jno
aad
push
in
loopne
jnp
dec
lods
jl
and
jb
clc
test
das
fists
push
adc
mov
mov
sbb
push
cmp
and
aaa
mov
lods
mov
addr16
or
push
mov
xchg
aad
pop
jle
outsl
dec
bound
fadds
inc
out
cmp
mov
push
xchg
test
jbe
bswap
inc
mov
mov
popf
cli
push
loopne
adc
ljmp
xchg
and
inc
push
das
dec
cmp
je
ja
outsl
mov
scas
adc
xchg
into
adc
pop
adc
jno
xchg
add
add
add
sbb
cmpsb
jnp
mov
scas
shrb
out
scas
rclb
or
pushf
mov
mov
dec
sahf
call
push
mov
andb
int3
jg
jecxz
test
dec
std
inc
fs
jnp
mov
pop
cmp
xchg
xchg
loope
es
lock
loopne
inc
sti
insb
xor
adc
aaa
dec
ds
xor
fistl
fdiv
lock
rclb
add
sub
je
pop
pop
subl
insb
inc
xor
test
fwait
jp
ret
loop
bound
mov
jne
ja
xchg
lcall
mov
in
cltd
call
into
sbb
mov
mov
mov
add
mov
fs
cmp
pop
jnp
imul
rcl
jl
sbb
jno
hlt
or
mov
arpl
fdivrl
imul
clc
rcrb
add
mov
mov
xor
or
cmc
cli
icebp
cltd
stos
enter
pop
jb
pushf
shlb
cmc
xchg
pop
or
stos
mov
out
lcall
and
push
out
or
iret
je
mov
and
push
mov
dec
cli
lds
decl
cld
and
mov
dec
test
and
adc
dec
aas
mov
lahf
in
ljmp
adc
into
cs
pop
call
and
push
mov
mov
mov
xchg
mov
lds
sbb
mov
mov
mov
sub
cld
xor
lret
orb
movl
cmp
lcall
es
pop
test
mov
pop
add
ds
dec
push
rorb
sbb
andl
lcall
lods
mov
mov
enter
ret
dec
cmp
divb
mov
mov
icebp
push
cmpsb
push
movsb
gs
sbb
sbb
test
ret
sub
pop
mov
add
mov
xor
out
ja
cmp
sahf
push
cmp
xor
sbb
rorl
iret
ficoml
sbb
lds
jle
push
pop
addb
cmpsl
fadds
orl
jno
and
filds
push
pop
rorb
orb
pop
popa
push
insl
mov
out
addb
mov
jae
inc
mov
scas
pusha
flds
loopne
inc
rep
cmp
leave
push
shll
jbe
rcl
jo
jg
inc
cli
xor
das
inc
lods
inc
inc
cmp
pushf
lods
jge
xchg
mov
adc
push
loope
cmp
cmpl
cs
test
xor
pusha
inc
rolb
inc
push
sahf
jp
push
and
jl
daa
sbb
jb
movsl
sbb
clc
je
adc
sub
jp
adc
xor
ljmp
adc
and
inc
ljmp
sub
lock
negl
fwait
jg
es
add
dec
xchg
mov
bswap
mov
pop
sub
loop
call
nop
inc
pop
in
add
xchg
ret
or
cs
jne
fildl
mov
pop
shrb
rol
in
jl
add
mov
in
cmpsb
cmpsl
add
push
stos
lds
lea
repz
push
mov
insb
stos
xlat
mov
xorl
sti
filds
jle
sbbb
xchg
xchg
mov
iret
aam
imul
dec
jmp
jmp
pop
aas
jb
adc
lock
dec
imul
test
or
pop
test
jmp
xchg
fs
inc
cmp
dec
jo
push
leave
ljmp
pop
mov
pop
dec
lcall
int3
jno
mulb
test
adc
mulb
mov
xchg
je
sub
sub
cmp
leave
mov
push
mov
call
mov
lcall
imul
cmp
fsub
inc
sub
mov
cmp
mov
pusha
repz
xor
bound
fcmovnbe
ret
imul
lods
pop
jbe
movsb
fisubs
cmp
pop
mov
test
aam
fcomps
mov
add
push
inc
mov
lahf
dec
push
mov
push
inc
loopne
add
jg
imul
sbb
add
lret
push
aad
jo
xchg
rcrb
out
xchg
shl
ss
pusha
sti
or
or
push
add
mov
push
fldt
jecxz
inc
daa
adc
push
les
mov
cmp
into
insl
cld
mov
push
or
or
pop
call
std
movsl
sub
mov
or
loop
jg
push
jle
push
inc
shr
mov
mov
lock
lahf
mov
js
mov
stos
mov
pusha
jae
int
and
lea
lods
push
add
mov
shlb
cmp
adc
rcr
dec
pop
negb
clc
inc
pop
mov
mov
ja
xor
shrl
movsb
nop
mov
rcl
test
loop
and
out
sub
pop
xor
push
aam
xor
sub
mov
lret
inc
and
fisubs
shrb
insb
ja
test
ljmp
mov
add
cltd
xor
jge
loop
cmp
stos
cmpsl
lcall
lea
sub
sub
add
add
xor
or
add
fcmovb
push
add
cmp
dec
xchg
mov
arpl
or
shll
push
shll
push
ss
cmp
jmp
sub
push
outsb
xor
push
sub
jge
daa
popf
pop
pop
cmp
rol
cli
nop
or
dec
adc
xchg
enter
fistps
push
mov
pop
cmc
inc
mov
call
mov
jle
sbb
dec
jmp
xlat
ret
stos
xor
je
dec
bound
insl
push
test
mov
mov
sbb
stos
cmp
mov
push
push
inc
mov
test
movsb
data16
push
and
faddl
fwait
jmp
cmpsl
loope
sbb
lock
imul
loop
mov
js
and
filds
jo
loopne
xchg
inc
dec
sub
popa
pushf
add
shll
pop
mov
pop
adc
roll
arpl
daa
push
dec
inc
pop
add
adc
fistpll
iret
sub
push
add
loope
jmp
sub
or
mov
mov
les
insb
cmp
sub
call
sbb
xchg
push
bound
push
sub
fwait
scas
jne
push
inc
loopne
mov
ret
xlat
sub
movsb
int
mov
sub
jns
pusha
xchg
cli
mov
negb
lcall
xor
or
outsl
mov
lods
data16
push
cmp
jg
je
js
lcall
jmp
imul
jns
pop
std
pop
lret
pop
push
out
loopne
leave
sub
or
push
aaa
mov
jl
push
aad
icebp
cmp
push
mov
pop
cmp
ljmp
add
int
dec
les
and
push
push
frstor
push
xchg
out
clc
jmp
xchg
jae
out
dec
lret
es
lods
or
sbb
and
fldcw
cld
pop
jge
cmp
xchg
mov
mov
adc
dec
jno
jns
jb
sbb
clc
or
out
repz
stos
or
movsb
adc
xchg
mov
stos
adc
scas
or
ja
fstpl
lcall
dec
popa
sub
xorb
sbb
fmulp
js
in
inc
pop
sbb
loope
int3
pusha
pop
jg
test
pop
incl
mov
loopne
mov
sahf
mov
pop
pop
movsb
mov
stos
pop
bound
add
filds
pop
add
jmp
ficoms
in
mov
sbb
out
lret
mov
sarb
enter
or
ret
aam
sub
cli
mov
xor
dec
outsl
push
jnp
or
cmpsl
add
lahf
aad
sub
and
mov
test
std
xor
xchg
dec
jg
pop
jp
fsubl
add
imul
or
cmc
and
leave
jecxz
and
or
mov
ud1
into
popf
loop
sti
xor
xlat
and
jg
iret
fadds
loopne
test
xor
popa
repz
xchg
push
aaa
add
cmpsb
push
mov
out
push
gs
je
cmc
mov
or
add
mov
pop
loop
sbbl
push
push
enter
push
into
lods
jg
outsb
pop
cltd
adcl
lcall
repnz
mov
aad
sub
push
repnz
inc
push
pop
ljmp
cwtl
or
or
jo
out
mov
stos
stos
cld
pop
xchg
adc
aam
mov
imul
sub
adc
in
mov
repz
mov
imul
jge
inc
sbb
sbb
js
pop
mov
push
inc
ss
adc
add
jge
js
mov
sar
roll
test
add
inc
out
xor
orb
cmp
or
sub
adc
ljmp
lods
shl
mov
mov
inc
and
add
pop
fldl
pop
mov
adc
cmp
cmovne
adc
mov
je
inc
roll
sub
adc
pop
sbb
lret
scas
and
pop
stc
shl
arpl
push
cli
faddp
call
add
lahf
mov
or
fistpll
sub
jmp
adc
xchg
mov
lock
pop
push
gs
fld
lock
out
sahf
lea
pusha
lock
nop
push
push
lock
pushf
mov
cwtl
fwait
clc
cmp
xchg
repz
je
rolb
adc
inc
ds
clc
popf
sub
fsts
dec
movsb
ljmp
mov
add
adc
out
jle
adc
int3
pop
es
mov
das
add
ror
add
jo
bnd
mov
rcrb
pushf
inc
xor
cmp
jne
inc
pop
jg
xchg
je
jg
lea
fwait
clc
push
add
cli
stos
ret
add
adc
aas
hlt
clc
call
add
push
and
add
mov
add
mov
pop
jle
loope
inc
es
inc
ljmp
pop
cmpsb
push
mov
mov
ret
mov
sbb
cmp
xor
mov
dec
and
loopne
push
push
pop
aas
push
stc
adc
xchg
dec
iret
jg
mov
jnp
dec
loopne
outsl
aam
int
outsw
push
cld
pop
scas
hlt
or
dec
adc
jne
roll
in
sub
rcll
dec
or
ja
sbb
sbb
push
xor
stos
or
lret
add
and
leave
sbb
mov
jo
pop
popa
addb
and
fcmovb
or
jecxz
push
mov
das
loop
sahf
lret
or
sbb
adc
rcll
faddl
inc
xor
icebp
fcoml
mov
out
orb
lock
xor
in
xchg
sbb
pusha
jp
arpl
stc
mov
js
cmp
push
push
jmp
mov
shll
mov
add
daa
jge
sarb
ficoms
pusha
adcl
int3
xchg
sbbl
dec
adc
out
std
adc
je
xor
insb
xor
sub
imul
jle
xchg
mov
mov
out
sub
movsb
pop
inc
xchg
insb
inc
movsb
sub
sbb
scas
inc
rolb
pop
stc
lahf
pop
aaa
dec
xor
mov
es
and
pop
or
pop
cld
ret
aam
cs
dec
jp
sub
testl
clc
movsl
jle
inc
scas
andb
testb
lock
add
int
ret
shll
mov
stos
pop
inc
daa
lea
out
mov
mov
dec
add
fnstsw
xor
les
rcrb
out
in
cltd
out
repz
sub
and
push
push
clc
daa
loope
addr16
ds
test
fisttps
mov
jmp
and
jnp
add
shlb
pusha
sub
cwtl
fldenv
adc
bound
dec
add
insl
popf
decb
fsts
lods
mov
or
popa
xor
jge
cmp
repnz
mov
adc
or
ja
and
lcall
add
push
clc
xchg
lock
les
lods
scas
push
sti
sbb
mov
aam
or
ja
les
adc
inc
hlt
xor
push
cmp
decl
pushl
jns
sub
inc
ret
cmp
xchg
or
sbb
rorl
incb
shlb
movsb
aam
loop
jp
js
cmp
popf
stos
xchg
mov
sub
fcomps
cmpl
je
mov
mov
movsl
rcr
jno
movsb
sbb
ret
shrb
cmp
mov
inc
dec
sbb
xor
push
add
mov
xchg
lahf
test
inc
dec
add
stos
fwait
mov
add
xor
mov
xchg
out
das
incb
movsb
lds
and
fcoms
clc
push
je
mov
pop
jge
addl
mov
loop
imul
lahf
out
pusha
cld
pop
dec
addr16
mov
sbb
fdivr
push
pop
lret
push
adc
outsb
dec
clc
dec
push
cmp
push
mov
fldcw
adc
pop
nop
ds
mov
push
sbb
sahf
xchg
jp
mov
test
lret
shrb
mov
jns
cmc
inc
mov
add
subb
push
std
sbb
cmp
mov
and
add
stos
jne
jge
les
mov
xchg
sub
pop
stc
add
or
push
fidivrl
lock
icebp
mov
gs
xchg
push
dec
ret
movsl
mov
mov
add
sub
mov
stc
inc
pop
jg
cmp
outsb
xchg
in
push
imul
aad
xchg
pop
jo
inc
ds
xchg
popa
push
lcall
xchg
movsl
lret
mov
mov
int
lret
clc
arpl
test
inc
out
sbb
repz
xchg
xorb
add
data16
push
pushf
push
adc
or
pop
mov
ucomiss
xor
mov
loope
add
popa
jb
sbb
out
xor
or
loope
cmpsl
test
mov
rcl
push
data16
or
mov
mov
xchg
iret
jae
add
cmc
inc
data16
aaa
lock
iret
cli
sbb
cwtl
push
cmp
jae
jmp
lods
or
mov
dec
pop
lret
jae
fsub
fisubl
jecxz
mov
inc
cld
push
jmp
enter
in
in
rcll
out
lods
ja
add
jge
pop
scas
sbb
dec
inc
mov
int
jnp
pop
cmc
xchg
mov
mov
outsl
clc
pop
pop
movsl
inc
pop
sub
js
in
inc
mov
sar
shll
popa
lret
mov
xchg
sbb
mov
mov
jmp
fwait
lret
pop
add
or
mov
push
push
orb
repnz
les
mov
adc
sbb
loopne
cmpb
xor
ljmp
or
dec
adc
fcmovne
cmp
dec
mov
in
push
inc
sti
movsl
clc
inc
lea
xor
cmp
sbb
push
into
pop
mov
roll
cmpsl
frstor
test
add
lret
or
inc
push
add
aam
idivb
popf
pop
jo
je
roll
and
mov
faddl
and
mov
popf
ja
adc
and
jnp
dec
push
scas
imul
bound
lods
add
xchg
fwait
repnz
pop
js
shll
dec
imull
incb
or
and
hlt
lods
xchg
iret
or
cld
adc
sarl
pop
xlat
ret
xchg
xlat
das
out
xchg
jle
pushl
mov
icebp
inc
xchg
add
call
mov
inc
adc
filds
inc
cmp
fimull
dec
lahf
outsl
mov
sub
add
scas
fadd
dec
dec
ret
and
idivl
ret
mov
inc
add
mov
and
mov
sbb
or
and
sbb
sub
dec
pop
push
xor
mov
xchg
mov
cmpsb
mov
das
xor
xchg
sub
xor
jp
shlb
cltd
out
test
xchg
xchg
mov
int3
and
insl
and
push
xchg
inc
mov
mov
test
jne
and
lock
and
push
frstor
inc
fucomip
cmpsb
add
or
std
loop
cmpsl
jnp
fwait
jne
out
add
and
imul
adc
clc
iret
pop
add
or
inc
out
outsl
mov
xchg
mov
push
aaa
cmp
lcall
sub
mov
int3
testb
mov
cli
aad
scas
sub
loopne
in
and
add
lcall
mov
ds
dec
sarb
inc
sub
and
xchg
pop
rorl
push
xor
sub
adcb
jp
int
push
cld
insb
cmc
imul
cmp
add
bound
sbb
add
movsl
lcall
dec
mov
or
add
cld
adc
movlps
sbb
add
pop
cmp
fcmovnb
inc
clc
dec
mov
lahf
inc
xchg
shll
outsb
adc
pop
jne
int3
aas
rcll
or
mov
popl
or
inc
jmp
mov
in
loope
aad
rcll
cmpl
sub
mov
inc
pop
outsb
cmp
add
cmp
sbb
nop
mov
nop
jmp
fsubrl
pop
inc
jbe
inc
jge
mov
pop
jle
dec
clc
data16
mov
cld
mov
pusha
push
outsl
sub
mov
xorl
and
mov
loopne
jns
mov
xor
mov
ret
or
mov
lahf
jo
pop
xor
movsl
cmpsl
cmc
ja
inc
subl
cwtl
cmovg
jge
or
and
push
lock
arpl
xor
lds
or
movsb
mov
jmp
mov
and
jmp
test
mov
lahf
mov
fs
push
mov
js
push
add
jbe
divl
lea
int
ja
cmp
pop
es
mov
and
loop
aaa
or
mov
mov
cmp
fwait
loopne
loopne
cmpsb
mov
mov
jmp
pop
cmp
mov
jp
outsb
mov
xor
cwtl
jecxz,pn
add
imul
stos
adc
mov
daa
imul
popf
dec
int3
pop
cmp
sbb
popa
cmp
jmp
jo
cwtl
cmp
leave
loopne
lea
cmp
pop
clc
dec
shll
imul
inc
jns
outsl
cmp
pusha
dec
mov
mov
mov
inc
xor
xorl
xchg
lahf
or
fwait
adc
stc
mov
or
fistpll
jbe
std
mov
jbe
xor
data16
or
xchg
cltd
mov
cmp
and
inc
in
fisttps
sub
hlt
cmp
rolb
cmpsb
int3
cli
ret
rdpmc
orb
pop
cmpsb
popa
mov
movsb
sub
mov
jo
adc
mov
push
push
in
push
pop
inc
clc
sub
jae
into
push
fdiv
mov
add
fstl
insb
adc
inc
jmp
fists
gs
in
outsb
and
cmpsl
mov
loop
xor
xchg
dec
mov
pop
xlat
or
and
in
out
outsl
and
or
sub
movsl
dec
or
pop
sahf
adc
std
dec
loopne
pop
mov
push
aam
out
push
push
cs
push
push
cmpsb
outsl
cmc
mov
scas
adc
loope
ror
xchg
inc
faddp
dec
add
lret
adc
jbe
lret
mov
add
and
pop
push
je
cwtl
loop
hlt
cltd
xor
dec
cmp
add
xchg
or
sbb
jbe
pop
jmp
xor
push
adc
das
ljmp
mov
pop
mov
inc
aas
mov
jmp
lcall
push
test
test
inc
mov
inc
int
jo
mov
push
jo
test
jnp
jb
adc
inc
inc
mov
pop
lret
lret
and
rcrl
xchg
jnp
test
inc
jg
sbb
jo
or
imul
test
push
rorb
hlt
mov
andb
jg
add
push
jne
sub
adcb
cwtl
in
xchg
js
push
rcl
add
xor
or
pop
rcll
repz
inc
mov
jmp
lods
cmp
mull
mov
pop
push
sbb
xor
add
aas
jne
xchg
out
arpl
loope
andl
lahf
mov
cmc
sbb
push
mov
jae
push
insb
repnz
negl
fst
add
dec
mov
cmc
enter
mov
and
pop
sbb
dec
cmpsl
fidivrl
mov
sbb
xor
out
sti
sbb
cs
cli
out
mov
cmpsl
rcrl
sub
pusha
sbb
es
out
daa
aas
aad
mov
cmp
popl
push
mov
sub
adc
or
cs
ror
pop
inc
inc
or
cmp
ja
or
out
gs
fistps
xor
std
cmp
xor
inc
jmp
adc
dec
fstpt
xchg
outsb
sbb
or
sar
into
orb
or
leave
adc
cmp
fisttpll
roll
xor
push
enter
lock
movl
push
call
enter
dec
mov
pop
out
lcall
xchg
push
push
dec
dec
addr16
icebp
xchg
movsb
and
leave
xchg
scas
mov
pop
mov
loope
repnz
rol
pop
loopne
sti
mov
mov
push
fadds
cmc
rorb
jne
mov
lahf
inc
mov
popf
cmp
sub
andb
inc
sahf
fcmovne
cmpsl
sbb
jne
sub
jno
sbbl
shl
rolb
jp
dec
pop
fcmove
push
ss
inc
jne
sbb
in
sbb
xor
xor
add
fstps
push
hlt
in
inc
rolb
mov
adc
sub
into
adc
cltd
push
pop
mov
fcompl
jg
mov
movsb
sbb
fs
mov
cmpsb
pop
cmp
icebp
mov
cmp
pop
pop
xchg
mov
sbb
xor
mov
mov
lret
or
fsubp
jns
inc
fildll
jbe
out
stos
xchg
sub
pop
xchg
loop
enter
fwait
pop
mov
imul
or
mov
inc
dec
stc
loopne
mov
mov
dec
fiaddl
xchg
push
mov
ret
inc
mov
test
cmp
orl
orl
lret
inc
std
mov
xchg
daa
dec
addr16
sbb
roll
sbb
pushf
pop
mov
add
pop
dec
xchg
stos
pop
shl
testl
sub
test
call
mov
addr16
cwtl
sub
in
arpl
add
pop
fdivs
mov
mov
or
iret
xchg
js
scas
les
sub
dec
mov
inc
clc
push
loop
rorl
adc
adc
fcomp
dec
mov
into
or
jns
xor
shlb
stos
jns
pop
push
rcll
mov
inc
jmp
les
lret
xor
and
dec
push
jp
sub
pop
addr16
jae
adc
fpatan
mov
pop
xor
or
jns
dec
lahf
cmp
jae
movl
cmp
ss
jle
fcmovb
sub
push
pop
mov
inc
or
sbb
lds
mov
notl
or
jo
ja
loope
and
mov
push
cli
js
mov
std
adc
jmp
clc
sahf
adc
in
movb
jecxz
sahf
sbb
adc
es
add
dec
mov
mov
mov
mov
dec
cmp
add
ss
xchg
sbb
add
pushf
bound
push
addb
arpl
fimuls
xor
nop
movsb
out
mov
push
nop
mov
ret
mov
test
pop
andl
das
xchg
aad
or
inc
mov
adc
or
ss
lahf
arpl
stos
push
ret
jbe
clc
add
je
lock
mov
mov
and
xchg
cli
mov
sub
jo
lds
fadds
dec
jge
dec
jmp
dec
inc
fstl
inc
cmpb
aam
push
xchg
dec
loopne
jb
adc
pop
adc
inc
or
jmp
jne
scas
mov
imul
pop
jle
adc
push
dec
pop
inc
ret
cmp
sbbl
ljmp
mov
mov
sbb
sub
push
fstpl
mov
push
xor
jle
call
fldl
pop
sbb
fs
mov
pop
push
les
xchg
push
loope
jo
pop
xor
insl
loop
js
cmc
sub
inc
pushf
adc
cmp
bound
lds
addr16
test
pop
inc
sti
lahf
mov
pusha
cld
sbb
jmp
pop
push
and
ljmp
mov
ja
pop
pushl
jb
sbb
inc
mov
dec
dec
inc
dec
xor
stc
in
aad
fistpl
test
mov
hlt
inc
shll
loop
add
push
jl
mov
jecxz
test
sub
pop
aas
movsb
jmp
mov
outsb
pop
push
jo
imul
and
pop
or
dec
cmp
jns,pn
rcll
xlat
in
push
xchg
push
cmp
popf
xlat
pop
dec
and
xor
inc
and
adcb
lods
pop
cmc
jle
inc
daa
outsl
stos
jno
repnz
mov
mov
stos
cltd
cs
xchg
add
sbb
add
mov
sti
aas
cmpsl
sbb
subb
or
outsl
adc
inc
mov
mov
xchg
xchg
icebp
mov
push
mov
cmc
sti
js
ret
sub
pop
repnz
clc
cmp
lock
jg
popa
mov
jg
je
cmp
inc
clc
outsl
sub
dec
adc
imul
pop
xor
jmp
push
ja
mov
jno
test
test
ret
add
daa
add
roll
enter
cmpsl
sub
outsl
mov
test
orb
fsubl
fistpl
jge
ret
mov
pusha
mov
push
stos
sub
or
cli
ret
filds
aas
fldenv
cli
inc
lret
add
call
dec
push
pop
cmp
fmull
out
cmp
mov
add
adc
push
dec
je
xchg
pop
inc
ss
adcl
loopne
mov
inc
adc
inc
mov
mov
sti
fadds
mov
call
pop
orl
sbb
shlb
outsl
negb
sbb
repz
fcompl
add
mov
inc
popa
testb
out
sbb
mov
or
and
dec
push
xchg
mov
movsl
pop
pop
in
xor
hlt
loopne
sahf
dec
and
repz
fs
cltd
dec
xchg
jne
fst
stc
mov
clc
mov
into
mov
cmc
stos
jge
cmp
or
es
and
or
xlat
or
int
sbb
call
adc
dec
mov
leave
add
das
lcall
add
mov
push
lds
xor
lcall
bound
xchg
push
je
test
xchg
mov
out
jmp
mov
ss
fistpll
mov
jns
hlt
insl
push
dec
sti
ljmp
cltd
jecxz
or
push
push
and
dec
rcrb
out
sbb
add
or
test
mov
push
xchg
sub
jle
adc
icebp
popa
arpl
add
adc
pop
inc
lods
cmp
mov
mov
les
pop
popf
arpl
mov
std
or
daa
data16
xor
scas
xor
fisubl
sbb
or
sahf
popa
jb
jb
sbb
lret
xor
xor
cli
add
jne
pop
rol
jge
add
cmp
and
mov
dec
push
fsubs
arpl
sti
aas
mov
jo
cmp
leave
fbstp
push
pop
and
outsl
ret
bound
cmp
adc
ljmp
push
mov
or
gs
xchg
push
mov
mov
dec
test
test
insb
arpl
loope
push
inc
add
jge
pop
sbbl
rclb
push
jecxz
ljmp
ret
fimuls
inc
aaa
and
or
ret
pop
mull
jmp
mov
stc
fnstcw
or
xchg
dec
cmp
mov
fimuls
inc
jnp
mov
clc
fdivr
incl
cld
xor
sub
subb
inc
sbb
or
push
lahf
mov
pop
mov
pushf
pop
js
pop
rorl
mov
push
dec
sar
and
mov
pop
dec
js
lods
dec
cltd
inc
in
outsb
adc
lds
lock
aaa
mov
fstp
int
outsl
int
ja
mov
inc
xlat
and
mov
lea
mov
mov
lahf
mov
xchg
ja
pop
mov
mov
inc
into
lret
lock
test
loopne
and
jl
mov
cmp
sbb
jecxz
mov
aas
pop
xchg
sub
inc
sti
add
in
add
cmp
sbb
mov
pop
pop
fisttpl
scas
mov
sahf
push
pop
test
mov
mov
addr16
inc
out
daa
fisttpl
daa
xchg
fucom
les
loope
add
aaa
push
pop
mov
adc
test
xor
push
xchg
hlt
dec
lock
xchg
add
lret
add
out
xchg
arpl
rcll
lret
mov
idivb
nop
sbb
imul
push
adc
dec
xor
dec
dec
adcl
scas
orl
ss
dec
cmp
push
mov
jbe
pusha
idivl
inc
ljmp
mov
lea
mov
cmpsl
sar
adcl
jo
pop
and
out
push
sbb
lret
pusha
and
dec
adcb
dec
lahf
imul
daa
inc
and
call
fmull
mov
pop
aam
rcrl
scas
nop
stos
dec
jl
xor
sub
stos
push
jle
mov
test
sbb
imul
test
pop
cmp
ret
je
xchg
ds
insb
cmp
cmc
stos
and
mov
push
xchg
rclb
jecxz
cmpsl
int
in
xchg
push
jge
sarl
adc
insb
xchg
dec
jne
stos
mov
and
rcrb
mov
adc
add
dec
cmp
test
mov
arpl
dec
add
scas
lcall
push
pop
pop
lods
outsl
push
jo
popa
cmp
mov
vmwrite
push
stc
mov
js
add
cmc
decl
out
jo
and
pop
lahf
inc
scas
sub
sub
xchg
fnop
sub
jmp
add
mov
popa
nop
mov
int3
pusha
lea
ljmp
add
cmp
and
xor
add
cmp
push
loope
xchg
xchg
cmp
mov
popa
jge
aam
cmpsl
cmp
or
jmp
pop
lret
andl
push
popf
mov
adc
ljmp
imul
ss
int3
mov
mov
xor
pop
std
inc
bound
jl
or
movsb
fidivl
in
push
jecxz
subb
ror
inc
gs
sarl
iret
movsb
in
pop
pop
mov
sbb
mov
aaa
movsl
inc
jg
popl
jb
sub
sbb
push
jnp
stos
lcall
mov
insl
es
mov
cmp
cmp
sub
add
out
mov
test
pop
sbb
adc
popf
and
and
jge
cmp
ljmp
lcall
cmp
sbb
call
sti
push
dec
dec
mov
pop
sbb
ret
imul
rclb
inc
mov
shll
std
add
div
and
sub
push
ret
call
adc
stc
pop
adc
and
fmul
mov
push
and
icebp
imul
inc
xchg
movsb
mov
cmpsl
loope
or
movsb
icebp
push
iret
jns
cs
scas
cmpsb
cmp
sti
cmp
subb
xor
push
clc
mov
cmpsb
dec
enter
pop
xchg
add
fldcw
dec
push
cli
mov
daa
or
mov
mov
mov
jl
enter
inc
cmpl
insb
mov
sti
jae
xor
insl
mov
and
lret
popf
mov
jl
or
inc
es
call
and
mov
bound
cmp
fmuls
push
popa
les
cwtl
lock
fdivr
or
aaa
sub
jo
in
enter
mov
xor
jmp
out
in
arpl
jnp
push
sbb
mov
outsb
out
dec
mov
mov
jb
inc
gs
std
movsb
test
sub
out
pop
mov
or
xchg
and
rep
scas
mov
je
loopne
push
fnstcw
cwtl
je
add
test
shrb
incb
mov
sbb
adc
mov
loop
xor
cmc
mov
adc
add
xor
xchg
test
sbb
lcall
rcrb
movsl
push
sbb
add
js
cs
mov
xor
pop
fbld
pop
je
pusha
imul
jb
rclb
pop
jl
cmc
mov
push
xchg
int
bound
jo
xchg
pusha
add
mov
cs
jo
sub
mov
call
mov
jecxz
fs
mov
mov
sbb
in
xchg
jmp
cmp
lea
aam
ds
cmp
jnp
jb
rorb
and
sbb
or
adc
mov
xchg
nop
push
in
repnz
mov
ds
push
iret
and
adc
sub
aam
add
hlt
dec
movsb
sarl
leave
out
cli
decl
nop
jg
ljmp
int
std
xchg
jmp
mov
pushl
fdivs
mov
sub
test
addb
std
cmp
push
and
lcall
ret
adc
cmovno
popa
lock
pop
inc
dec
pusha
movsl
lods
aam
loop
xor
imul
sub
rorb
int
icebp
fst
jno
fwait
mov
sub
mov
repnz
out
jle
jne
dec
icebp
jo
popa
cli
shlb
mov
sub
dec
jmp
ja
pop
movsb
adc
cmp
nop
and
incb
add
scas
pop
inc
push
dec
repnz
fs
shll
xor
leave
add
iret
movl
mov
test
fcomi
aas
and
enter
in
lock
cli
mov
ss
iret
test
mov
daa
lret
insl
outsb
outsb
cli
stc
dec
add
pusha
out
add
mov
loopne
cld
out
lods
ss
sub
push
pop
xchg
cmp
imul
and
jecxz
push
push
addl
aad
push
call
inc
push
cmp
testb
cld
arpl
nop
incb
jo
inc
jmp
adc
insb
dec
pop
push
icebp
aam
inc
lcall
cmp
call
pop
add
arpl
push
jmp
pop
push
shll
shrb
pop
inc
add
xor
lods
mov
inc
add
insb
inc
imul
dec
dec
dec
outsb
or
push
cltd
xchg
loopne
cmp
and
ficoml
cmp
or
ja
dec
or
adcl
xchg
mov
leave
pop
imul
and
cld
stc
sbb
mulb
filds
xor
lret
push
xor
ret
pop
jns
cmp
jo
sbb
mov
inc
sub
aad
scas
pop
mov
add
pop
xor
mov
xchg
add
push
cld
lahf
cs
aad
fs
aaa
insl
fnstcw
and
pop
mov
into
and
shl
mov
lock
jg
jecxz
mov
hlt
sub
mov
dec
xchg
aas
xchg
xlat
lret
sub
pop
adc
mov
push
leave
enter
cltd
rcrl
dec
adc
sbb
js
rolb
cmpsl
scas
ret
pop
in
inc
sysexit
in
mov
stos
sbb
rcrl
rcll
mov
add
cmpl
add
cld
jg
mov
fs
mov
cmp
or
cmp
push
add
adc
add
pushl
xor
mov
cmp
add
xchg
aam
mov
sbbl
mov
mov
sbb
inc
mov
pusha
add
xor
rcrb
fidivrl
aad
add
insb
jo
fwait
inc
push
xor
push
daa
add
xchg
leave
add
cmp
outsb
bound
or
outsl
pop
pop
test
mov
ret
out
push
stos
mov
adc
rolb
jmp
pop
pop
jle
push
mov
add
and
jecxz,pn
cmp
addr16
lret
xchg
mov
hlt
leave
push
pop
jg
test
cmp
xchg
or
jmp
adc
popa
sbb
sbb
ljmp
sarb
shlb
lock
gs
loopne
movsb
mov
pop
insb
or
aas
mov
data16
xor
add
jg
sarl
add
sahf
adc
inc
jl
lods
or
push
mov
lret
fdiv
dec
shlb
in
xchg
gs
stos
mov
mov
cli
or
pushf
adc
jo
rcl
shll
addl
pop
jle
mov
xorl
push
inc
ss
cmp
and
lcall
jmp
add
mov
stc
testb
shrl
mov
js
push
test
mov
in
xor
jle
lock
fidivl
dec
mov
dec
lcall
push
dec
clc
sub
pop
js
test
jecxz
jbe
xor
ror
lock
dec
cmp
adc
add
in
les
inc
ret
push
into
add
sub
mov
cmp
add
inc
dec
fisubrl
add
mov
xchg
jmp
cmp
incl
sub
clc
into
or
xor
cmp
mov
add
sbb
lock
jbe
fiadds
fsubs
in
pop
test
sub
add
lcall
inc
shrl
dec
popf
pop
xor
test
push
jns
repnz
call
je
jae
cmp
adc
fwait
sub
jle
mov
in
das
lock
cltd
inc
dec
dec
pop
xor
inc
pop
mov
ja
repz
dec
jns
pusha
or
push
dec
or
dec
jecxz
mov
dec
fcompl
inc
mov
or
test
sbb
xor
test
fimull
pop
ljmp
sub
mov
roll
sti
inc
movsl
mov
fsubs
subl
clc
add
sub
fwait
mov
stos
jo
sbb
inc
xchg
ret
cltd
sbb
test
arpl
pop
mov
or
xor
mov
imul
sbb
sarl
lret
int3
lods
and
fisttps
sbb
sbb
and
out
mov
pop
push
hlt
cmp
sub
shr
or
jg,pn
xchg
lret
sbb
push
repnz
roll
adc
push
andl
hlt
testl
mov
xchg
aam
cmp
cmp
aad
pop
pop
push
aad
and
hlt
or
and
push
jecxz
and
dec
pop
ret
clc
xchg
stos
or
in
mov
inc
je
xor
add
das
jo
ljmp
jg
or
das
cmp
lahf
sbb
mov
dec
stos
clc
in
test
push
add
xor
lahf
hlt
pusha
xor
inc
jmp
and
mov
mov
int
pop
or
fcom
sbb
test
lret
hlt
test
inc
jae
out
mov
dec
adc
rcr
jmp
push
xchg
mov
adc
sbb
imul
fucom
jmp
mov
pop
adc
adc
jle
or
cs
pop
ja
and
repz
xor
insb
mov
btc
xor
inc
ret
fistps
in
add
sub
lock
ficompl
aam
imul
jl
mov
daa
jecxz
loop
jge
mov
out
std
mov
mov
sub
lock
ljmp
jmp
adc
fucom
adc
dec
cmp
jo
movsb
das
rol
or
xor
mov
adc
or
out
mov
into
cld
pop
mov
fildl
mov
add
and
stos
inc
push
enter
enter
in
mov
rcll
test
loope
in
adc
les
cmp
mov
sub
sub
mov
adc
mov
xchg
jo
subb
add
dec
inc
pop
cltd
mov
jae
jle
mov
je
loopne
andb
inc
fmulp
incb
outsl
loope
jmp
loopne
and
nop
xchg
push
lods
ljmp
out
mov
mov
mov
mov
cld
out
or
inc
std
mov
js
test
fwait
pop
hlt
xchg
inc
test
ret
push
inc
out
cs
xchg
cmp
jge
jl
inc
inc
popa
pop
inc
or
and
fsubl
mov
add
xchg
sub
pop
in
mov
pop
adc
mov
mov
pop
cmp
popf
rol
push
add
jnp
fwait
pop
jb
push
in
mov
fcoml
jno
cli
pusha
push
scas
pop
aaa
mov
add
test
inc
sub
fisubl
out
mov
mov
push
call
outsb
bnd
je
mov
inc
mov
dec
imul
call
pop
add
out
loop
imul
sbb
add
bound
adc
out
push
lea
mov
addr16
add
adc
shrb
cld
or
xorb
cld
jecxz
prefetch
mov
push
pop
rcrl
push
sahf
clc
mov
jecxz
fimuls
aam
addl
sbb
outsb
test
roll
loop
jle
or
adc
push
push
clc
sbb
stc
cmp
push
and
cmp
lods
sbb
add
add
jl
push
sub
pop
outsl
lods
cmpsb
loopne
ret
mov
or
mov
out
es
addl
dec
inc
in
je
sbb
pop
sbb
jo
xchg
cmpsl
and
jo
lods
fcoms
adc
cmp
std
ret
call
jb
fs
xchg
in
lock
add
cmp
pushf
clc
jne
mov
jb
add
add
jnp
or
movsl
add
fistl
xor
adc
mov
dec
cmp
lds
pop
fisttpl
add
call
fisubs
fisttpll
pop
mov
icebp
fwait
jno
jle
insb
loopne
cmpsb
outsb
shlb
inc
insl
sbb
fwait
push
pop
cmp
icebp
adc
mov
sub
adc
push
add
sub
negl
adc
add
mov
je
cmp
testb
cld
add
sub
test
pop
je
jb
dec
inc
movsb
mov
shrl
fnsave
xchg
lods
das
call
ds
pushf
aam
scas
lahf
dec
lcall
fidivrs
in
sbbb
sub
popa
roll
and
inc
mul
mov
cmpl
outsb
pop
push
adc
imull
and
inc
popf
push
fdiv
dec
xor
add
pop
sub
push
dec
add
cmpsb
mov
test
xor
xor
dec
call
daa
dec
cmp
pop
xor
fsts
hlt
rolb
int
andl
or
into
xor
std
pop
mov
push
adc
arpl
mov
das
sub
jns
jge,pt
inc
dec
push
cwtl
lahf
mov
dec
add
jmp
loop
test
mov
cmp
jecxz
xchg
lahf
sbb
sbb
icebp
sub
sbb
sbb
pop
stc
scas
pop
imul
js
in
push
add
pop
jo
xor
ljmp
int3
sbb
stos
in
jmp
jmp
loop
sub
push
icebp
cmovo
and
jg
in
or
push
sarb
lea
scas
jl
add
cld
aad
xor
aad
dec
dec
shrb
jp
mov
jg
sub
mov
add
das
insl
sub
mov
mov
call
rolb
xor
imul
test
xchg
push
out
ds
mov
xchg
fnstsw
xchg
push
clc
std
sete
sub
outsl
andl
addb
inc
sbbl
mov
sub
test
test
iret
add
imul
push
jbe
adc
sub
pusha
sub
and
cli
pop
adc
js
sbb
or
shl
adc
push
aad
daa
or
adc
sti
xor
aaa
sbb
pusha
js
inc
adc
mov
push
imul
add
into
lock
sub
lea
in
arpl
pusha
loop
icebp
in
aad
aaa
shlb
and
outsl
in
movsl
imul
sbb
push
or
repnz
xchg
mov
xor
xchg
lock
sbb
ret
test
enter
push
decl
mov
les
xchg
push
cmpsl
adc
ja
sub
mov
fwait
clc
lret
mov
test
repz
push
inc
jmp
lock
hlt
scas
or
jg
fnstcw
adc
or
ret
sbb
std
push
push
add
lds
jmp
aam
xchg
clc
xchg
mov
pop
or
cmp
shll
xchg
inc
lods
in
jg
lds
pop
inc
sbb
add
imul
fucomip
xchg
push
lds
push
push
xor
jnp
mov
or
pop
insl
imul
xchg
push
jle
std
loopne
sti
add
dec
pop
pop
out
jecxz
bound
pop
adc
imul
jp
xor
xor
in
shll
inc
sbb
sub
lret
fstpt
jno
add
aaa
jge
jmp
iret
cmp
adc
and
sub
test
imul
aas
mov
cmp
cmp
mov
pop
dec
inc
ficompl
repnz
aaa
inc
jmp
jg
sbb
pop
shlb
stc
fisubrs
andl
and
or
cmp
push
decb
and
or
sbb
or
xchg
and
mulb
pop
sbb
adc
inc
iret
in
in
in
ds
add
setge
mov
mov
pop
cmp
jl
inc
fs
add
dec
dec
xchg
mov
mov
outsl
push
loop
or
scas
lret
bound
testl
cld
cmp
mov
pushf
sbb
js
shll
adc
clc
mov
fdivl
addr16
ss
addb
sbb
or
jg
call
insb
xchg
enter
sarl
add
jae
sbbb
icebp
push
sub
leave
jo
xor
lcall
cmp
shrl
push
cs
mov
test
test
dec
out
insl
rcll
movsb
aam
inc
ret
cmp
jno
xchg
cmp
jl
jmp
into
mov
xchg
xor
pop
hlt
sub
or
xchg
scas
mov
out
jmp
jecxz
sbb
in
mov
sbb
nop
add
das
push
mov
movsl
add
or
cld
fwait
cmpsb
jge
adc
mov
xchg
add
daa
pop
pop
xchg
outsb
fsubs
ret
insb
test
and
std
test
push
lds
test
and
fmul
mov
mov
ja
loop
out
dec
lods
xor
xchg
and
pusha
pop
add
scas
jl
sub
enter
ja
xchg
fdivs
scas
adc
jg
dec
push
orb
mov
cmpl
and
scas
out
dec
push
sbb
push
adc
xchg
cmpsb
and
or
dec
inc
mov
and
imul
xchg
outsb
add
daa
test
icebp
push
decl
in
andb
cmp
or
les
adc
or
and
ja
cmc
add
andl
mov
lcall
xchg
xor
popa
loopne
adc
jns
pop
adcl
insl
stos
mov
inc
mov
icebp
push
push
insb
xchg
repz
inc
cld
mov
xchg
fists
sub
into
adc
jo
inc
pop
xchg
push
sub
inc
pop
mov
pusha
cmp
cs
leave
mov
mov
testb
xchg
sub
mov
loopne
add
adc
pusha
js
push
scas
faddl
hlt
pop
scas
leave
mov
scas
in
inc
push
js
mov
xorl
shrb
cmp
addr16
movsb
sbb
cmp
xorb
add
fisubs
lret
dec
rolb
pop
in
adc
dec
inc
cld
add
push
xchg
mov
add
loope
cmpsl
scas
mov
inc
xor
adcb
inc
mov
push
fwait
js
adc
cli
mov
adc
mov
or
sbb
clc
imul
mov
test
push
or
dec
mov
xchg
inc
std
mov
pusha
sarb
fiaddl
mov
adc
in
xor
add
jl
icebp
loop
push
xchg
add
and
xchg
add
hlt
push
shlb
clc
mov
inc
and
jns
xchg
cld
and
cmp
mov
jg
push
or
xchg
push
jl
pushf
xor
jb
xchg
dec
jae
sahf
inc
mov
adc
enter
cld
dec
divl
inc
dec
xor
fisttpll
pop
and
sbb
ret
mov
test
ss
aad
mov
ja
loop
xchg
pop
cmp
or
mov
inc
adc
add
cmp
test
or
inc
sar
and
lea
mov
jnp
add
cmpb
pop
add
mov
stos
sub
rorb
inc
cld
mov
cmp
add
push
add
or
test
inc
add
adc
xchg
sub
js
rclb
loopne
and
mov
pop
test
sahf
clc
add
or
cmp
mov
push
dec
pop
stc
call
imul
adc
push
xchg
push
fsubl
inc
pop
mov
lock
dec
subb
call
inc
pop
sti
xchg
loop
add
push
aas
xor
cwtl
adc
add
lods
ret
sti
test
roll
test
add
adc
movsl
imul
pop
loope
daa
ret
push
dec
cmp
std
aas
cmpsb
xor
dec
notb
xchg
insb
add
shrb
mov
lods
jmp
mov
mov
clc
pop
and
js
or
das
rcr
pop
cmp
jg
mov
lcall
fsubrs
movb
mov
or
icebp
in
adc
cli
les
leave
sti
aas
les
fcomip
orb
lahf
call
jbe
mov
pop
jl
or
add
mov
shrl
mov
push
shlb
ret
or
xchg
mov
fdivrl
xor
add
adc
lret
push
je
push
in
gs
lods
push
sarb
fbstp
dec
mov
inc
dec
bound
xchg
shl
cmp
push
cli
loopne
es
xchg
pop
andb
insb
fsub
loopne
xor
dec
movsl
in
xchg
sbb
movd
sarb
pop
pop
push
clc
jle
dec
imul
ret
hlt
test
and
orl
test
scas
sbb
push
and
pushf
jecxz
push
lret
push
and
ret
cmp
mov
scas
es
popf
cs
xchg
mov
jne
nop
jp
inc
scas
es
jecxz
out
and
sbb
lcall
sub
popf
loop
push
inc
aas
aaa
sub
jg
jle
sbb
lock
scas
and
inc
mov
sahf
jp
bnd
ret
cmp
popa
sub
inc
inc
ret
jbe
mov
xchg
sub
into
inc
cmpsb
mov
fiadds
add
inc
roll
and
sti
add
adc
dec
and
mov
les
rcrl
sbb
loop
shrl
js
movsl
imul
orb
adc
sbb
jne
movsb
pop
pop
xchg
dec
inc
popf
or
jmp
les
pusha
inc
clc
sbb
push
sub
mov
push
or
lods
push
faddp
sub
pop
xor
mov
xor
fcmovb
adc
ljmp
mov
jmp
sarb
push
xchg
ljmp
dec
aad
push
mov
jg
and
lea
out
push
pop
push
ficoms
sub
mov
add
or
ds
arpl
cmp
and
sti
pop
out
cltd
xchg
dec
test
or
jl
hlt
cwtl
fcompl
push
or
out
push
and
sub
or
shll
mov
clc
mov
cmpb
daa
cmpsl
fisubrs
cmc
fs
fmul
mov
pushf
xchg
ret
pop
jo
popa
xchg
ret
andl
sub
dec
test
clc
or
jo
xchg
pop
add
pop
pop
pushf
adc
into
rclb
or
mov
xchg
lds
mov
add
cmpsb
pop
pop
jl
mov
into
pop
or
rorb
dec
xchg
inc
dec
decb
xchg
add
in
js,pt
cli
jo
sbb
outsl
push
pop
les
js
mov
mov
xor
lret
push
das
and
movl
inc
call
imul
sbbb
cmp
cli
push
lock
inc
sub
clc
xchg
stos
and
pop
xor
and
std
idiv
mov
daa
rorl
and
pop
inc
and
adc
sub
and
or
mov
clc
xchg
sub
ds
ret
mov
and
inc
imul
add
popa
add
leave
lock
shrl
mov
ds
cli
lahf
or
or
mov
outsl
rolb
imul
xorl
fcomp
insb
lret
out
popf
adc
add
ret
or
icebp
dec
push
xchg
push
xor
add
xchg
sbb
or
mov
mov
jbe
jmp
loope
in
xchg
cmp
clc
popf
mov
mov
push
stos
aad
loopne
scas
rcr
test
sub
jno
aas
fstpl
push
test
adc
xor
bound
jo
lods
leave
hlt
mov
dec
testl
jg
std
adc
adc
daa
xor
dec
pop
pop
jp
std
add
dec
mov
xor
mov
fs
aaa
inc
jle
mov
mov
pusha
in
in
ret
xchg
fcomi
dec
sarl
push
cmp
push
xor
fucomip
hlt
lahf
loop
dec
retw
mov
pop
cmp
dec
rolb
add
xlat
popl
cmp
pop
xchg
sbb
jmp
je
or
or
push
dec
je
xchg
push
push
mov
aad
sub
mov
mov
add
ljmp
push
fcoml
sarb
and
imul
push
fisubrs
push
xor
jo
sbb
rorl
mov
and
sub
sub
incl
adc
hlt
adc
pop
inc
mov
popl
inc
cld
sbb
add
push
imul
pop
out
and
mov
sbb
jns
pop
into
xlat
shlb
flds
xchg
dec
sti
push
cmpsb
sub
shr
popf
dec
ds
xor
jb
inc
pop
call
loop
fcomip
sub
mov
cmpsl
pop
or
add
call
cli
clc
dec
cld
inc
sbb
rolb
enter
cmpl
ss
jle
mov
and
pusha
scas
mov
clc
or
sti
pop
and
subb
lods
test
mov
push
mov
cli
loope
inc
cmpsl
xor
or
pop
jle
mov
mov
jno
dec
jae
inc
push
cmp
aam
cmp
cmp
mov
add
pop
mov
fadds
mov
add
and
orb
push
xorb
cmc
imul
or
xchg
mov
sahf
adc
adc
push
loopne
insl
inc
mov
fists
sub
jecxz
xchg
fstl
enter
add
xchg
test
pop
ret
int3
sbb
inc
or
aas
sbb
sbb
add
push
test
fs
scas
ja
adc
in
gs
sbb
cmpl
mov
rclb
cmc
mov
sub
rolb
sahf
push
aas
push
jmp
ret
inc
add
push
js
daa
or
mov
sbb
fisttps
pushf
cwtl
lods
movsb
xchg
adc
test
sbb
bound
sub
mov
jno
aad
nop
aad
sub
js
rcrl
popf
repnz
pop
adc
xlat
call
push
push
imull
fcompl
fcmovu
inc
popa
lods
aas
andl
sbb
and
rorb
scas
ret
cmp
add
xchg
andb
xchg
fdivl
stos
cmpl
push
mov
lds
cmp
inc
jne
mov
stos
xor
pop
mov
xor
adc
push
xor
mov
xor
xor
icebp
add
mov
subps
mov
inc
sbb
mov
adc
mov
inc
jne
xchg
push
xor
repz
add
call
stos
cmpb
vorps
pop
sub
out
push
orl
cld
inc
outsb
push
out
cmpb
bound
or
dec
movsl
sbb
cli
aaa
push
loop
test
loop
in
xor
mov
insb
hlt
mov
test
mov
xchg
stc
sbb
js
adc
cltd
mov
cmpsl
ds
mul
cmc
outsb
jo
xor
adc
cmp
sub
push
cmc
inc
cs
adc
xor
rol
pop
cli
push
mov
outsl
ljmp
push
das
mov
fdivrs
xchg
push
stos
insb
pop
sti
mov
movsl
lds
or
call
aaa
fs
push
adc
hlt
pop
or
mov
fisttpll
inc
mov
mov
imul
les
and
xchg
mov
mov
push
lock
stc
movsb
ret
pop
jb
repnz
cmp
popa
ds
ret
cmp
xchg
popa
adc
mov
lret
xor
sti
mov
insl
mov
jno
inc
dec
js
jmp
pop
hlt
ljmp
test
sarl
jbe
das
cmp
int
data16
cmp
jae
sti
in
gs
pop
inc
jecxz
or
mov
loopne
pop
sahf
bound
sahf
loopne
xchg
loope
call
pop
lock
clc
dec
ret
js
xlat
pushf
mov
scas
add
ljmp
rcll
dec
insl
fsubl
in
xor
push
jl
out
jge
cmp
mov
daa
push
mov
lock
jl
mov
fldl
adc
push
mov
ror
arpl
fs
aas
aas
sbb
and
int3
leave
lock
sbb
dec
mov
or
iret
ds
jg
mov
enter
shrb
movsb
in
dec
rcr
movsl
and
and
mov
add
and
cmpsl
sarl
stos
dec
js
bound
push
shrb
add
outsb
lods
cmpsl
sub
fistpl
nop
mov
fsub
pop
or
repnz
sbb
pop
mov
sub
push
dec
add
mov
shrl
imull
xchg
imul
and
adc
subl
cmpsb
mov
cli
loopne
std
adcl
cmp
cmpsl
xchg
jb
add
xchg
sub
xlat
push
call
test
das
mov
xchg
sbb
mov
push
jl
out
or
loope
ffreep
dec
xchg
mov
faddl
clc
popf
lock
mov
imul
cmp
out
ja
xor
xor
fsubrs
add
push
xor
sbb
call
xorb
or
inc
jb
lea
push
out
pop
sub
stos
cmpsb
jecxz
inc
jbe
dec
les
xorb
clc
jbe
inc
daa
aaa
inc
pop
push
xor
sbb
dec
mov
sbb
push
aad
outsb
clc
inc
cli
pop
jns
push
inc
jmp
lds
push
int
inc
call
xchg
or
sahf
lock
ljmp
dec
repz
pop
cmp
lahf
mov
ds
fisttpll
stos
in
cmpsl
and
push
pop
push
sbb
ljmp
ja
shlb
sub
clc
pop
imul
inc
xor
or
mov
repz
popf
pop
mov
push
dec
je
scas
or
sbb
js
paddw
ror
nop
xchg
sbb
and
cmp
ljmp
and
add
out
pop
aad
pop
cs
lock
sub
fiaddl
ja
rcll
icebp
movl
cmpsl
push
cld
add
cmpsl
jle
aam
cmp
pushl
test
or
push
movsl
icebp
xchg
inc
int
and
mov
mov
jp
call
xchg
add
mov
test
lock
mull
xchg
pop
in
pop
addb
stos
ljmp
std
xchg
push
add
adc
loopne
inc
loopne
mov
pop
mov
pop
ret
mov
pop
pop
les
add
mov
push
pop
xchg
or
jno
cwtl
push
filds
lods
mov
jmp
ret
inc
int3
outsl
adc
push
icebp
push
cli
inc
jmp
lock
xchg
or
xor
add
mov
pusha
bound
out
mov
push
test
xlat
xchg
lods
dec
push
xchg
inc
test
and
push
ret
lcall
adc
int
sbbb
add
mov
mov
sbb
ds
pop
jb
scas
cmp
out
mov
and
lcall
push
loop
mov
jl
sub
addb
aas
subl
inc
xor
or
test
sbb
loope
sbb
test
clc
dec
cmp
ja
add
or
or
or
pop
cmp
add
insb
jl
dec
push
es
jo
mov
mov
add
sub
jbe
inc
xor
or
popf
inc
xor
and
negb
std
sub
sarb
jne
cli
pop
add
dec
sub
or
xchg
das
push
push
sub
xor
mov
imul
jp
data16
sbb
xor
movsb
push
mov
mov
jno
cmp
lock
and
loope
push
adc
lahf
adc
cmp
icebp
push
cmc
jnp
bswap
icebp
testl
in
sub
push
mov
hlt
mull
mov
and
aam
inc
sbb
pop
jmp
or
sbb
insl
push
and
subl
or
hlt
rorb
ljmp
out
movsl
xchg
xor
in
adc
sbb
adc
xor
stc
add
pop
sbb
rcl
lods
test
std
mov
adc
cmpsl
mov
pop
clc
jg
out
loope
js
shrl
popa
xor
stc
dec
mov
sub
aaa
pop
push
cmp
clc
lahf
hlt
dec
inc
je
mov
test
or
jns
das
insb
call
mov
lcall
adcl
add
add
cmc
or
push
mov
cmpsb
xor
jmp
add
sub
mov
fnstcw
ja
add
xchg
std
adc
js
adc
xchg
nop
jo
loopne
adc
jp
mov
fists
mov
roll
roll
push
and
mov
loope
inc
jle
roll
jb
stos
enter
std
rorl
sahf
xchg
testb
in
sbb
paddw
lock
or
cmp
xorb
and
loopne
cwtl
or
fisubrl
pushf
movsl
xor
sbbl
jg
adc
out
push
jnp
icebp
sarb
das
bound
outsl
nop
jo
icebp
not
aas
mov
cli
adc
fidivrs
lds
xchg
mov
jp
icebp
adc
or
movsb
mov
add
int
xorl
test
imul
ret
mov
popa
sti
maskmovq
testl
mov
outsb
adc
xchg
xchg
mov
cmpsb
shlb
sbb
loopne
cmp
daa
int3
imul
sub
cmp
jae
push
lret
dec
clc
out
aas
shl
pushf
or
into
xchg
jae
cltd
jbe
add
fs
fwait
cmpb
outsb
test
push
add
addl
out
mov
addr16
cmp
mov
inc
push
pop
push
push
cmp
das
add
jg
mov
cs
fadds
mov
jmp
mov
les
subb
xor
or
jo
push
jle
adc
xor
adc
das
clc
cltd
dec
xchg
pop
inc
push
sbb
add
mov
cmpsl
push
push
or
out
jle
adc
xchg
push
test
in
cmp
pop
jecxz
mov
addr16
hlt
test
jge
arpl
dec
sbb
mov
outsl
lea
xchg
std
push
fisubs
jl
xor
sub
aam
pop
adc
mov
xchg
insl
xor
add
ret
lret
mov
bnd
out
lock
clc
bound
mov
dec
push
mov
pop
add
stos
jecxz
and
loop
int3
into
je
push
mov
sub
inc
xchg
cmp
dec
inc
out
or
pop
mov
pop
dec
dec
dec
vpunpckhbw
pop
jl
icebp
mov
xor
lods
mov
pop
jp
mov
loop
ret
lea
fisttpl
das
icebp
shlb
cmp
adc
pop
into
fldcw
xchg
push
adc
arpl
push
xor
daa
inc
ljmp
pusha
pop
cltd
xlat
pop
jle
adc
adc
push
xchg
and
andl
fdivrs
sahf
cmpsb
int
hlt
pop
or
push
stos
popa
jmp
cmp
pop
mov
dec
je
sahf
in
jne
mov
clc
add
cs
push
es
xor
rorl
jg
dec
add
cld
sahf
outsb
xchg
add
mov
dec
push
aaa
push
push
sbb
and
sbb
add
je
dec
xor
mov
aaa
std
repz
xchg
sti
cmp
subl
or
mov
in
mov
sub
clc
dec
mov
jmp
out
push
dec
repz
adc
fists
or
test
popf
inc
xchg
xchg
dec
notl
jg
add
clc
lret
insl
xchg
and
and
lcall
pop
mov
sti
aam
dec
inc
mov
jecxz
push
jbe
addl
push
add
cs
jno
fisttpl
sub
push
adc
mov
and
and
clc
pop
and
stc
movsb
sahf
jp
outsl
xchg
mov
outsl
ljmp
bnd
jno
pushf
and
jmp
cmpsl
mov
shl
and
mov
pop
push
pop
imul
mov
inc
cmp
or
lods
cmpsl
jbe
or
sbb
add
shrb
jle
sbb
andb
bound
push
mov
jge
pusha
or
xchg
sbb
dec
ror
outsl
mov
rcl
inc
cmp
testb
inc
and
aad
xchg
jnp
test
out
push
mov
push
inc
lods
inc
dec
mov
test
sbb
sub
stos
push
add
gs
insb
je
jbe
repz
mov
dec
push
dec
inc
mov
ret
pop
and
loop
stos
movsl
lods
lea
cmc
outsb
sbb
xchg
lea
mov
xchg
loopne
cli
xor
add
data16
in
bound
loop
inc
or
jg
mov
stos
mov
pop
test
adc
rcll
aas
xchg
ret
insl
cmp
adc
jbe
mov
and
movsl
add
push
xchg
sbb
enter
push
push
inc
push
leave
sarb
fbld
push
pop
hlt
clc
pop
cli
pushl
pop
popa
push
sub
jg
icebp
and
lea
aas
aaa
lock
popf
fiadds
fwait
bnd
and
fstps
inc
mov
lret
mov
jnp
fwait
jbe
mov
enter
sub
inc
pop
inc
pop
insl
pusha
cmpsl
adc
inc
in
mov
dec
decl
mov
das
js
dec
sub
or
mov
orl
movsb
and
hlt
and
and
jo
sbb
mov
mov
pop
pusha
or
pop
cmp
es
daa
mov
or
jae
mov
mov
cmc
outsl
repnz
push
and
hlt
jg
jl
ja
and
mov
sarb
mov
orb
pop
test
adc
int3
gs
xchg
inc
into
add
mov
sbb
push
dec
clc
psrld
cli
movb
sbb
insb
sbb
decl
sarb
je
loop
push
gs
insb
mov
addl
mov
jo
out
fisubl
xchg
mov
jge
movsl
aas
loope
and
not
inc
adc
dec
cmpsl
push
fbstp
jmp
cltd
mov
mov
es
js
aaa
jg
call
fdivr
mov
js
dec
push
adc
inc
enter
mov
mov
fildll
gs
test
ret
iret
add
leave
shll
movsb
ret
sbb
or
sahf
xchg
lahf
jb
mov
sub
push
jmp
sbb
cmp
xor
jl
xor
mov
mov
loope
lods
jp
add
or
out
xchg
mov
pminsw
scas
dec
les
lds
xchg
xchg
mov
adc
xchg
jp
jno
lret
xchg
movsl
sbbb
sbb
in
cli
ret
out
push
incl
shlb
iret
stos
pop
and
xchg
mov
cmp
aas
movsb
std
mov
mov
mov
sub
add
xchg
rcrb
vhsubpd
adc
les
push
xor
testb
in
into
add
mov
test
xchg
jmp
and
dec
aaa
pop
cld
pop
jg
repz
les
dec
sbb
shlb
addb
adc
pop
mov
inc
scas
lods
fwait
mov
pushl
adc
jg
and
pop
jne
xor
mov
out
or
sbb
jae
push
lock
push
cmc
mov
jo
sub
enter
mov
mov
jbe
sti
jmp
cmp
mov
inc
pop
dec
pop
push
mov
aam
rorb
sub
adc
mov
rcrb
arpl
add
add
dec
pop
push
xchg
out
push
dec
dec
inc
inc
mov
and
adc
data16
fdivl
icebp
sar
subl
inc
inc
aas
jne
scas
inc
or
fs
pushf
fidivrl
xor
call
addr16
test
cmc
mov
adc
nop
and
pop
out
call
jb
jge
push
cmp
xor
fs
xlat
jb
lcall
dec
pop
jb
imul
ret
aas
dec
pop
bound
or
imul
lods
movl
add
mov
cmp
aam
clc
adc
or
xchg
out
or
jle
ret
sub
ljmp
test
pop
dec
mov
sub
dec
add
jno
aaa
and
xchg
xor
pusha
popl
clc
add
xchg
adc
dec
ds
cli
ja
or
dec
push
rcll
sbb
pop
imul
rcr
sbb
ds
mov
or
test
mov
mov
lret
sub
jmp
push
and
mov
lock
jns
movl
jo
fcomp
div
xor
mov
dec
xchg
repz
inc
fstpt
mov
xor
mov
cmpsb
xchg
cmp
jecxz
scas
or
test
jmp
in
in
mov
or
push
subb
xchg
pop
or
xchg
shrl
or
jg
adc
dec
aaa
xchg
adc
int3
es
call
cmpb
addb
imul
adc
mov
sahf
dec
ljmp
loope
jnp
push
mov
cltd
inc
loopne
in
mov
lret
loop
loopne
cmp
inc
ret
fimuls
pop
fs
add
pop
xor
or
inc
in
jns
adc
add
pop
pop
mov
dec
jp
shll
mov
sub
jge
push
sti
sbb
push
pop
adc
and
sbb
repnz
mov
imul
or
push
or
mov
pop
fwait
push
mov
lea
xchg
repnz
call
jbe
test
add
sub
add
lock
cmp
pusha
ret
inc
cmp
test
sbb
mov
add
cmc
lcall
in
aas
std
xorl
and
jne
cmp
inc
adc
lahf
fs
or
inc
mov
and
ret
mov
loop
pop
mov
sbb
aaa
and
and
stos
add
iret
mov
push
int3
cmc
pop
aad
xchg
cmp
lea
pop
cmpsb
fadds
push
inc
mov
jmp
mov
pop
inc
ret
pop
mov
dec
inc
jecxz
shlb
or
xchg
mov
incb
pop
nop
pop
ss
ret
lock
sahf
mul
fwait
push
aaa
inc
es
lcall
mov
pop
in
jno
sub
les
and
pop
or
dec
push
jl
inc
pop
aam
insb
and
test
aas
mov
testl
lods
pop
mov
icebp
sub
pop
cmp
sub
mov
push
jmp
adc
stc
push
mov
adc
mov
pop
pop
jg
les
jge
test
mov
clc
sub
mov
aaa
jnp
dec
mov
cltd
add
gs
popa
pusha
lock
add
push
fsub
add
mov
jno
sub
pop
aas
or
inc
movzbl
pop
sahf
ja
lds
sbb
les
jne
xchg
mov
inc
adc
test
cmp
std
adc
add
push
enter
mov
pop
pop
hlt
dec
shrl
xchg
or
arpl
ret
test
mov
pop
pop
ss
sub
sarb
cmpsb
sbbb
imul
sub
daa
sysenter
xchg
and
fs
dec
jnp
addr16
push
fildll
jbe
mov
mov
cld
imul
lds
dec
or
inc
das
jecxz
pop
sbb
mov
imul
or
psrad
mov
sbb
xchg
push
jle
adc
xor
mov
add
xor
mov
addb
xchg
lret
incb
decl
out
pushf
mov
sbb
sarl
dec
cmpl
inc
or
jne
and
cwtl
lcall
xchg
lcall
rorb
add
xor
leave
jnp
inc
cmp
rol
fmul
rorl
add
push
cmp
in
pop
iret
adcl
enter
or
sbb
fstpt
fldl
mov
insl
push
push
mov
test
in
test
loop
int3
pop
dec
scas
lods
jmp
push
jnp
mov
out
or
es
pop
decl
jne
loopne
ret
mov
jp
jmp
lods
arpl
lret
cli
sub
pop
lock
or
mov
xchg
adc
push
mov
sbb
add
xor
push
icebp
aaa
mov
xor
test
push
insb
or
cli
scas
lret
mov
sbb
push
shlb
cmp
cmp
adc
xorl
sub
cmpsb
pop
jle,pn
test
xchg
sbb
or
xor
fbstp
mov
mov
inc
adc
inc
and
xor
dec
insb
cmc
fisttps
add
js
sbb
test
jge
popa
dec
sahf
shlb
mov
lods
stc
and
jno
paddd
dec
mov
mov
icebp
fdivrp
add
or
push
nop
mov
cli
cpuid
in
jl
add
es
adc
or
or
xchg
xchg
jp
xor
movsb
pop
inc
pop
sbb
or
and
rcrl
pop
xchg
ret
test
xchg
add
mov
inc
testb
insl
add
cmpxchg8b
shll
stc
dec
dec
jb
push
push
add
inc
cmp
inc
push
xchg
push
mov
push
andl
mov
xor
out
stos
ljmp
stos
rorl
clc
xchg
or
fistps
mov
or
hlt
std
divb
popa
push
aas
and
aam
cmc
cld
ljmp
into
out
cs
add
out
mov
pop
ret
jb
shlb
movsw
xchg
dec
add
xchg
add
jbe
out
in
sbb
cli
pop
sarb
dec
sub
push
lea
daa
mov
aaa
pusha
movb
dec
bswap
mov
cli
jecxz
call
pushf
addl
inc
sub
xchg
call
sub
inc
pop
lds
dec
test
pop
mov
add
adc
sub
movsb
insb
inc
xchg
fadds
xlat
jle
je
mov
pop
lods
int
lods
push
xlat
inc
dec
sbb
xchg
popl
lahf
push
inc
and
cmp
mov
adc
pusha
popa
push
lret
dec
jb
fs
xchg
in
push
jno
add
add
push
jge
jne
aad
ljmp
push
xor
loopne
dec
roll
out
mov
xor
popf
sbb
and
mov
cs
mov
xorb
mov
push
sbb
mov
in
mov
int3
jle
xchg
xor
xchg
ljmp
push
xchg
outsb
fldenv
incl
bound
addb
jmp
and
push
lahf
call
decl
jmp
adc
xor
mov
fildll
lock
cmovbe
push
cwtl
adc
clc
stos
out
fwait
shll
mov
pusha
sub
pop
mov
idivb
dec
xchg
xchg
xor
xlat
pop
push
ds
add
adc
es
inc
scas
sub
dec
and
xchg
test
sub
cmpsb
and
test
mov
cmc
rcr
xchg
fmuls
mov
popf
enter
scas
jl
sbb
loopne
push
ljmp
adc
mov
jmp
and
loop
inc
xchg
sysret
inc
les
or
jecxz
mov
lock
fcmovb
cld
mov
adc
cmp
lahf
cmc
xchg
mov
inc
aam
adc
push
sub
cld
sbbb
mov
fs
cmp
cld
push
and
cmp
cwtl
out
mov
adc
adc
xchg
adc
inc
adc
cltd
push
jle
in
add
jnp
outsb
push
out
shll
loope
jl
aaa
lea
and
jo
shr
test
xor
sub
dec
mov
mov
imul
push
fwait
icebp
sub
mov
cmp
sub
scas
ds
adc
jne
mov
fnstcw
outsb
enter
mov
push
enter
lock
pop
jno
stc
push
icebp
or
and
mov
movsb
dec
fsubs
jae
js
loop
inc
into
pusha
jo
xchg
xchg
push
mov
ja
mov
dec
pop
xor
clc
push
mov
data16
cmpsb
push
mov
mov
aas
sbb
out
add
lcall
jmp
ret
push
andb
adc
or
test
push
ss
sbb
pop
repz
test
xchg
or
nop
int
jg
in
or
or
xchg
jno
or
scas
or
sub
mov
hlt
jg
test
push
les
enter
sbb
subl
xor
lock
incl
nop
call
fmull
mov
scas
jle
adc
pop
sbb
mov
orl
out
out
cmc
lock
pushf
and
sar
pop
push
ds
in
notl
ret
add
jb
push
adc
mov
push
pop
sub
inc
jmp
jge
xchg
fcom
add
xor
xchg
js
out
cs
leave
mov
push
sbb
clc
lock
adc
mov
jp
or
cmpsl
add
loop
sub
outsb
jns
xchg
outsb
rcr
test
lret
add
pop
repnz
lods
test
loop
mov
je
bnd
xor
adc
sub
mov
iret
sub
inc
pop
xor
in
loopne
push
push
out
add
into
pop
outsl
pop
and
jge
popa
incl
xchg
enter
inc
push
sbb
mov
icebp
cmp
dec
jbe
add
fldl
daa
and
jg
jnp
mov
push
sub
repz
pop
adc
cmpsb
bnd
lods
fimull
or
pusha
add
clc
pop
mov
fldcw
pop
xchg
adc
sbb
inc
cmp
xchg
sarb
jmp
shll
call
fcmovb
mov
int3
inc
inc
popa
sahf
add
jg
loopne
decl
pusha
inc
or
mov
cmp
lods
xor
cmp
subb
das
mov
aad
mov
ret
movsb
push
lcall
xor
sub
add
push
nop
sub
mov
jae
inc
daa
cmp
push
adc
jmp
adc
sbb
pop
mov
testb
xor
mov
fdiv
test
push
sarb
sbb
dec
jb
lret
sbb
sub
and
pop
ds
xchg
addr16
rcr
or
dec
adc
xor
out
cmp
out
hlt
push
dec
lret
mov
cmpsb
xor
push
addr16
clc
wbinvd
orl
pop
or
mov
std
sbb
add
add
stc
into
sbb
adc
and
pop
fildl
inc
or
cmc
iret
ficompl
and
add
adc
mov
loope
fimuls
push
in
push
push
icebp
dec
clc
popf
dec
leave
inc
or
sub
xchg
outsb
or
popa
adc
pop
jg
cmp
je
mov
clc
test
cli
and
mov
sarb
mov
imul
push
mov
orb
inc
jge
lock
lock
xchg
loop
leave
push
pop
push
xor
jo
addb
sahf
shrb
cld
loop
pop
mov
pop
cmpl
clc
stos
in
das
or
pop
std
xchg
les
fidivl
mov
xor
cmpsb
inc
push
add
arpl
fwait
aaa
mov
mov
mov
sbb
inc
jecxz
mov
lods
adc
lods
filds
push
aas
adc
adc
arpl
mov
push
or
pop
add
insb
push
cmp
out
push
loop
gs
mov
mov
pop
or
sbb
fldt
rorb
pop
dec
test
xchg
loope
inc
inc
push
adc
das
fildll
imul
xchg
rclb
into
cld
and
movl
and
movsl
push
call
enter
pop
and
jge
sarl
shl
push
add
ss
ds
jmp
movsb
call
inc
clc
ret
sub
pushf
mov
out
xchg
jge
orl
mov
or
or
cmp
dec
dec
mov
adc
mov
xchg
xor
push
jmp
sub
push
pop
pop
jmp
pop
sahf
xchg
mov
loop
mov
pop
icebp
push
or
testl
in
mov
out
addr16
addb
icebp
mov
mov
or
shrb
and
int3
pusha
mov
or
in
push
inc
scas
out
push
adc
gs
pop
bound
or
or
out
sahf
lret
mov
clc
enter
sub
movl
aam
sarb
sub
scas
xor
xlat
ds
stos
ja
sub
loope
fildll
xchg
sub
call
add
popa
sbb
cli
out
or
dec
ljmp
push
or
and
outsb
shrb
or
mov
insb
jae
dec
push
mulb
pusha
push
inc
cli
xor
push
inc
repz
jl
subl
mov
lret
mov
insb
in
int
jg
push
mov
or
hlt
pop
inc
mov
rcll
or
xor
shr
mov
sbbl
arpl
outsl
std
pop
loopne
sbb
push
mov
hlt
pop
or
inc
call
lcall
mov
lea
fxch
push
fnstcw
jno
call
mov
es
sbb
popa
xchg
cmc
movsb
test
fstpl
sub
std
sub
test
pop
jno
dec
call
aad
lock
inc
adc
push
sbb
loopne
popa
dec
insb
std
cmp
ret
and
stos
push
test
dec
imul
pop
in
test
add
les
pop
or
push
pop
pushf
push
cmp
sub
xor
xchg
mov
iret
fwait
and
adc
dec
rorb
xchg
pop
repnz
lcall
mov
sub
mov
mov
pushl
mov
in
push
or
inc
js
mov
loope
dec
adc
and
lret
imul
lahf
test
call
lds
inc
lods
inc
pop
test
scas
add
test
int
dec
iret
cwtl
inc
inc
cld
mov
lret
xor
mov
cmp
invd
test
pop
sub
xchg
xchg
mov
dec
sub
call
pop
pop
xchg
iret
clc
xor
js
test
push
clc
fldenv
jb
out
std
in
addr16
insl
jo
push
mov
or
mov
and
jp
push
mov
pusha
mov
adc
out
jle
mov
dec
fistpll
xor
and
lahf
pop
adc
xchg
xchg
repnz
inc
fucomip
jns
inc
ret
push
adc
xlat
sub
adc
pop
or
add
add
loop
pop
or
js
sub
aaa
cmp
ds
jns
addb
lcall
popa
cld
es
pop
imul
nop
aas
mov
and
ret
ljmp
sub
pusha
adc
loope
fstps
xor
pop
mov
sbb
and
add
cli
sub
inc
ds
add
push
dec
aas
xchg
out
pop
shl
mov
imul
fdiv
repnz
and
jnp
pushf
insb
mov
repnz
mov
mov
or
fimuls
fmull
fldenv
push
adc
sbb
ds
andb
pushf
lret
dec
xchg
sbb
ds
adc
pop
lock
push
jb
sarl
and
imul
mov
mov
cwtl
stos
jb
push
loope
xchg
rclb
sub
stc
stc
push
mov
add
inc
inc
push
lock
frndint
aaa
jecxz
xor
jns
or
add
push
dec
jnp
inc
cmp
add
popa
mov
mov
mov
int
push
arpl
mov
jecxz
dec
xchg
xchg
cmc
jg
mov
inc
decl
aad
inc
stos
push
or
lock
stos
mov
sbb
faddl
ja
sub
xchg
out
pop
pop
jle
mov
mov
adc
xchg
jg
inc
mov
fldl
movsb
mov
fcomps
int3
movsb
out
pop
addl
and
rorb
jecxz
mov
mov
xchg
sbb
sbb
bound
add
jb
mov
stos
xchg
mov
scas
loopne
xor
popa
mov
mov
push
cs
fcomps
sub
push
push
jg
inc
xor
loop
dec
test
fmuls
sub
clc
adc
outsl
fs
out
jg
mov
or
dec
xchg
adc
push
in
push
xchg
loop
sar
mov
push
in
pop
hlt
jne
decb
jb
decl
push
fiaddl
repnz
and
call
aas
push
les
adc
mov
shlb
int
mov
sahf
mov
mov
mov
push
sbb
inc
pop
icebp
push
decb
pop
add
lea
xchg
xchg
shlb
lods
dec
sbb
push
inc
inc
dec
adc
test
repnz
xchg
lahf
gs
test
clc
sbb
pusha
push
adc
adc
inc
loopne
aad
mov
cmc
xchg
rcrb
sbb
xchg
push
pop
out
mov
leave
push
push
insb
add
mov
or
jmp
jmp
mov
insl
add
mov
aaa
int3
lock
repnz
jge
mov
sahf
ret
rcrl
mov
cmpsl
mov
pop
loope
jmp
xchg
push
pop
test
cmp
int3
lret
es
cmc
lret
xor
loopne
dec
loop
mov
fdivrs
dec
shrl
push
mov
rclb
adc
std
push
push
adc
je
xchg
mov
leave
cli
or
test
callw
and
rcrb
cmp
jl
push
das
push
and
imul
sub
in
or
clc
punpckhdq
adc
notb
mov
mov
cld
faddp
hlt
daa
out
adc
mov
lods
ljmp
fmuls
or
jnp
jl
shll
fwait
mov
dec
mov
jmp
or
cmp
icebp
xchg
mov
lcall
incl
xchg
pop
lods
mov
subl
lock
ret
std
push
xor
dec
bound
mov
fisubs
fs
mov
jmp
jle
mov
cmp
and
js
cmp
or
rclb
sbb
dec
out
ret
dec
or
ret
and
sbb
cmp
dec
fdivl
mov
out
push
mov
push
adcb
dec
aad
push
xor
jne
fs
lahf
jbe
les
enter
mov
mov
fs
xor
and
das
push
rcrb
pop
jecxz
imul
cmp
cmp
mov
scas
lock
sbb
xor
fisttps
mov
imul
adc
negl
test
push
inc
push
mov
in
pusha
mov
aas
ss
shrl
mov
cltd
add
aaa
xor
arpl
lret
push
shlb
jmp
sub
js
addb
mov
push
nop
sbb
adc
xchg
adc
adc
gs
pop
jge
mov
mov
cwtl
inc
lods
aaa
jge
push
int3
lcall
popa
pop
out
hlt
inc
dec
jg
out
mov
xor
cs
frstor
ss
in
cld
lods
cwtl
clc
incl
add
dec
cmp
jl
dec
shl
or
incl
pop
stos
pusha
stc
fists
jbe
push
mov
cmp
adc
shrb
sahf
ja
ds
movsl
pop
clc
fwait
mov
cmp
iret
mov
rclb
roll
call
sub
outsl
dec
sbb
dec
adc
cmp
adc
mov
sbb
dec
mov
clc
into
cli
add
scas
xor
jg
mov
stos
sub
jle
shll
cmc
inc
mov
loop
push
pop
adc
ret
jae
sbb
mov
push
aas
hlt
pop
adc
pop
cmpb
mov
cmp
sarb
xchg
cmpsb
in
arpl
add
cmp
in
add
add
push
and
rolb
pop
push
negl
data16
into
es
rolb
cmp
dec
pop
stos
add
loopne
jb,pt
shrb
add
stc
cmp
scas
adc
jne
pop
and
or
cmpsl
std
and
adc
pop
mov
imull
jmp
cmp
jg
or
jbe
inc
xlat
pop
loop
lcall
sbb
jg
call
jnp
call
inc
pop
mov
inc
test
xchg
push
xor
jle
pop
mov
xchg
xchg
mov
pushf
jl
add
mov
insb
in
dec
incl
cld
stos
sbb
pop
push
out
movlps
cld
std
callw
or
aas
jne
sub
sarb
lret
cmp
cltd
add
push
cltd
insb
jne
or
stos
es
or
ret
jg
mov
pushf
mov
cs
mov
push
cmp
movsl
ja
loop
mov
mov
enter
jne
scas
ret
aas
and
pop
aam
cmp
mov
decb
add
out
xlat
scas
js
mov
fcompl
sub
and
stos
pop
int
jg
or
lods
mov
mov
push
mov
mov
aam
test
in
test
inc
pop
ja
insb
stc
inc
pmovmskb
xlat
dec
movsb
cmpsl
outsb
mov
loope
jmp
std
mov
int3
test
stos
push
inc
cmp
mov
imul
sti
hlt
fistpll
sbb
xchg
lock
sub
dec
adc
jg
push
mov
adc
inc
jne
push
cmp
ret
inc
mov
ret
jb
fs
and
test
loopne
loope
and
jle
push
fldt
adc
les
ljmp
inc
scas
jp
stos
outsl
jle
xor
rcll
mov
push
hlt
adc
in
dec
mov
pop
and
jb
ss
pop
inc
pop
inc
push
xor
inc
mov
lret
jle
jo
xor
or
mov
ljmp
push
in
push
push
mov
adc
xchg
dec
pop
cmp
pop
inc
jl
jne
clc
adc
sbb
sti
pushf
pop
xchg
fisubl
cmpsb
fadd
sbb
xor
sar
and
jecxz
cltd
jnp
cld
inc
add
and
stc
enter
xor
pop
jp
fisttps
inc
inc
mov
daa
in
insb
pop
pop
aam
dec
mov
dec
repz
data16
clc
lods
push
push
jp
pushl
dec
jb
push
jb
pop
lret
push
jmp
pop
cmc
or
sbb
inc
es
cmp
js
cmp
cwtl
or
or
jnp
xor
fincstp
cmc
ja
mov
mov
sbb
and
cmp
jecxz
jecxz
mov
cmp
std
xchg
clc
enter
push
cli
fmull
sarb
push
lods
stos
adcl
in
dec
dec
push
mov
lock
jmp
sbb
or
fmuls
mov
mov
scas
inc
inc
popf
test
stos
out
adcb
mov
mov
cld
mov
frstor
push
shrb
sbb
dec
lods
call
cmp
mov
lock
push
mov
nop
dec
push
cmpb
or
pop
cld
adc
cli
into
or
cmpb
inc
in
dec
mov
mov
nop
adc
pusha
fsubrs
adc
mov
out
hlt
adc
sti
cmp
xor
insl
ss
div
dec
divl
sti
add
sbb
insl
lock
inc
pop
xchg
mov
sub
mov
aaa
ret
fsubp
imulb
sbb
push
in
lahf
or
enter
shl
add
rorb
dec
out
lods
mov
push
pop
lahf
nop
mov
cld
dec
test
fisubs
hlt
pop
push
pop
push
push
fnstcw
cmp
jp,pn
rcll
mov
ljmp
gs
test
jne
fcoml
test
and
stos
enter
imul
sbb
mov
sbb
cld
xlat
stos
dec
mov
adc
lods
or
or
jecxz
sbb
cmpsb
test
sub
enter
cs
arpl
inc
mov
sub
push
xchg
or
lods
pop
jp
inc
inc
outsl
lods
jbe
push
jp
mov
or
lock
jg
arpl
xor
add
aaa
lock
add
jb
mov
nop
jb
int
repnz
std
nop
andl
jg
mov
aam
inc
lods
sbb
adc
out
xor
dec
pop
hlt
inc
decl
and
pusha
mov
xchg
mov
cs
xor
push
mov
fwait
sbb
push
fildl
repz
or
cmp
sub
inc
rcrl
push
movsb
jnp
adc
in
add
sub
loope
loop
push
dec
push
leave
cmpl
mov
cli
enter
pop
movsl
sbb
loope
adc
xchg
push
shlb
rcrl
js
mov
xchg
push
mov
push
ja
pop
or
and
dec
testb
leave
mov
jno
add
shlb
push
flds
pop
sar
insb
adc
jb
push
popf
add
roll
rcr
add
ds
xchg
push
pop
ss
sbb
call
push
push
cli
das
mov
xor
pop
dec
stos
test
ret
cwtl
or
xchg
jne
dec
loopne
push
test
aam
orb
jle
test
pop
jg
rorl
sub
cwtl
inc
adc
push
les
jno
mov
insl
outsl
xchg
cmp
fisubrs
jne
ja
add
ljmp
lret
push
icebp
mov
dec
stos
sbb
cmp
aas
test
mov
add
cmp
pop
adc
loop
sti
adc
cmpsb
ds
data16
rorb
scas
inc
jl
jp
mov
jl,pn
cwtl
out
rcr
or
add
mov
inc
xor
dec
jae
push
add
loopne
lahf
leave
jne
outsl
andb
and
sbb
popf
mov
add
je
popf
cmp
lods
iret
adc
xor
addps
push
cli
or
cltd
ja
icebp
dec
mov
push
ss
sbb
pop
mov
cmp
xor
loop
std
es
pop
test
or
push
lcall
out
pop
and
int
aam
rol
mov
sbb
mull
mov
aam
pop
inc
push
or
pop
xchg
jne
lcall
sbb
in
dec
idivl
fstp
add
cmp
mov
notb
outsb
push
lods
cmpsb
repnz
xchg
or
test
ljmp
test
mov
cltd
sbb
loop
add
mov
adc
adc
mov
push
call
adc
mov
push
sbb
and
imul
je
mov
ret
and
stos
fcompl
jecxz
and
add
cld
pop
sub
lods
fistps
inc
mov
sbb
cmp
jg
sub
lock
ss
pusha
mov
sub
fnstsw
or
test
rclb
lds
roll
adc
or
lcall
stos
sub
add
ds
mov
jg
xor
into
pop
repnz
pushl
add
xchg
sbb
jae
xchg
mov
in
cli
or
mov
cmp
mov
call
or
mov
mov
andb
popl
std
dec
xchg
stc
inc
orb
and
or
dec
adc
cmp
int3
xchg
lret
icebp
adc
push
push
mov
lret
popf
mov
shlb
int
add
xchg
adc
adc
xor
or
loope
out
push
pushw
add
cmp
add
push
out
cmc
mov
push
lods
mov
or
adc
cli
cmpsl
fists
sbb
add
fildl
push
outsl
mov
leave
push
mov
mov
mov
das
pop
mov
shll
push
mov
outsb
in
loope
push
mov
mov
adc
rorl
inc
mov
outsb
adc
mov
mov
dec
or
cwtl
out
fs
out
or
lahf
inc
add
push
cmp
lret
xor
int3
incb
jge
les
cmp
les
jecxz
or
jp
aad
jp
js
stos
jl
mov
cmpsl
fdivl
stos
mov
mov
mov
inc
test
je
mov
mov
pushf
cltd
das
aas
cld
andl
add
lods
jne
jp
mov
xchg
pusha
fs
cmp
cmp
std
lcall
push
dec
popf
sub
aad
sbb
sub
test
negb
and
fiaddl
leave
rorb
bnd
push
mov
xchg
adc
adc
shrl
mov
ret
push
cmp
or
scas
mov
jnp
or
xor
sub
gs
lds
fiadds
loope
jecxz
jp
sub
loop
clc
mov
fsubl
sbb
movsb
lahf
lock
fistl
mov
cmp
and
add
cmp
sahf
jmp
pushf
pop
cmp
mov
aas
add
pop
add
push
mov
cmpsb
mov
lcall
add
clc
or
jge
cmp
sub
mov
pop
fmuls
dec
dec
or
push
mov
push
mov
pop
mov
jle
popa
mov
ret
adc
dec
cmp
fcomps
push
jl
mov
xchg
sbbl
nop
sub
pop
push
cmp
sub
sbb
iret
jmp
add
push
je
lea
in
pop
daa
wbinvd
add
mov
inc
ret
or
cli
push
pusha
adc
push
insl
int
sbb
mull
ret
adc
arpl
fnsave
fiaddl
mov
nop
pusha
push
inc
push
jo
leave
pop
mov
push
ret
leave
in
push
push
addr16
or
mov
enter
push
xor
inc
call
jl
push
adc
es
adc
mov
or
pop
xor
xchg
push
stc
out
subb
outsl
cmp
fs
dec
mov
or
pop
sub
out
inc
scas
mov
fiaddl
lahf
add
mov
add
sbbb
push
nop
and
aam
adc
test
into
mov
dec
call
pop
sbb
mov
cli
and
clc
inc
pop
ljmp
pop
movsb
xchg
ds
out
gs
mov
inc
pop
es
push
inc
shll
aas
cs
popf
shll
push
leave
dec
enter
loope
or
in
pushf
sbbb
and
enter
mov
out
pop
jo
scas
xor
shl
aas
xor
pop
dec
pusha
jbe
xor
or
insb
mov
loope
in
jecxz
int3
xor
cmp
or
pusha
sbb
or
and
xor
xor
add
rorb
jo
xchg
out
lea
inc
fidivl
mov
mov
test
xchg
or
or
pop
xor
fs
mov
sbb
adc
faddp
xor
in
test
inc
sub
adc
test
cli
stos
es
das
fs
lds
jb
sti
ljmp
push
pop
incl
sbbl
jo
xchg
push
mov
push
clc
movsb
mov
jecxz
hlt
ret
into
mov
dec
or
lds
push
in
loopne
out
push
test
push
das
cld
orl
ret
xor
inc
ja
mov
mov
subl
or
push
pop
add
out
mov
mov
mov
push
or
pop
sub
mov
sbb
add
pop
enter
push
sub
mov
sbb
push
lcall
xchg
mov
xchg
insl
xchg
xchg
inc
and
sbb
and
mov
lea
cmpl
dec
sbb
in
and
adc
clc
inc
add
imul
sbb
sbb
xchg
inc
xchg
push
sbb
dec
add
jp
sbb
int3
cmp
inc
mov
mov
mov
sbb
sub
dec
mov
test
pop
mov
mov
test
push
dec
cltd
pop
add
test
cs
mov
lahf
push
push
pusha
mov
test
or
mov
cmp
add
and
negb
jle
cmc
shlb
mov
adc
scas
fcomps
mov
xor
xor
jmp
lahf
std
cli
inc
jb
repz
cmp
dec
xchg
add
mov
sbbl
cltd
adcb
mov
out
bound
cmp
in
sbb
in
or
cmp
pushf
loope
sbb
mov
shr
and
insb
sub
insb
xchg
ljmp
outsl
sbb
or
mov
out
pop
dec
xorl
mov
sbb
jno
sarl
push
add
mov
mov
jno
data16
dec
sbb
ficompl
pop
stc
jno
pop
loope
jbe
xchg
in
stos
or
dec
popa
psllw
iret
sahf
xchg
cmp
mov
mov
jle
lock
sub
es
rclb
pushl
xlat
inc
adc
clc
scas
lret
mov
out
adc
fwait
ret
pop
dec
or
popf
shrb
cwtl
in
xorl
or
in
fmulp
rolb
mov
dec
jns
sbb
push
fs
and
lock
push
out
insl
call
hlt
pop
xchg
push
negb
adc
imul
jb
and
in
and
pop
lock
ljmp
adc
jae
adc
decl
bound
fildll
adc
inc
cli
ret
loopne
cmp
add
out
aaa
js
mov
or
add
dec
sub
jae
add
push
mov
pop
xchg
xor
jns
test
jecxz
xlat
push
adc
sub
sbb
nop
lds
dec
inc
xchg
loope
sahf
inc
movl
gs
jp
outsl
xchg
sub
rcll
call
roll
xlat
inc
pop
clc
xchg
ljmp
loope
xchg
and
xchg
test
sbb
sub
cmp
pop
out
xchg
scas
push
in
inc
incl
mov
cltd
cs
push
out
pop
inc
mov
inc
dec
cmp
xor
pop
inc
pop
sub
sub
fnstsw
das
cli
enter
inc
fcoml
mov
cmp
xlat
call
or
ss
std
xchg
sub
xchg
test
std
jge
sub
sbb
and
mov
outsb
inc
test
dec
out
rcrb
push
jl
mov
dec
inc
sbb
jge
cwtl
sbb
or
ret
adc
inc
cmp
or
iret
fs
inc
dec
adc
mov
je
or
dec
pusha
xorb
jb
sub
test
push
ds
into
inc
sbb
aam
mov
mov
psubw
inc
mov
xchg
mov
inc
lahf
fimuls
pusha
pusha
dec
pop
cli
mov
lds
adc
jmp
sbb
data16
xchg
nop
daa
and
add
inc
push
outsl
xchg
push
push
jo
xor
mov
stos
mov
ja
cwtl
push
add
adc
test
lcall
loopne
add
xorl
mov
jge
xchg
push
imul
mov
mov
add
iret
mov
int
shrb
pop
pop
sbb
dec
inc
push
and
sbb
addl
cld
das
sub
adc
test
cmpsl
lods
sub
add
inc
fildl
aad
call
rcrb
std
xchg
lcall
jbe
pusha
or
and
inc
pop
fsubr
add
dec
aas
mov
cmpsl
js
and
pop
jecxz
movsb
jb
test
les
stc
mov
add
sub
stos
mov
inc
les
mov
filds
testl
enter
mov
lods
mov
fs
shll
lldt
dec
fbld
or
hlt
iret
les
mov
call
push
loope
pusha
les
pop
iret
notb
xchg
cmp
movsl
nop
lds
dec
pop
pushf
clc
sarl
or
mov
je
pusha
jo
test
xchg
jle
fidivl
mov
xlat
ret
adc
add
mov
inc
or
cmpsb
jo
xor
sbb
or
orl
popa
dec
or
arpl
inc
push
mov
xor
adc
hlt
adc
scas
decb
es
out
scas
pop
repnz
inc
sub
mov
mov
shrl
mov
loopne
loope
aad
mov
fwait
push
clc
push
rcrb
add
loopne
fs
push
movsl
inc
fdivrp
mov
lds
je
and
out
or
sub
stos
and
jo
adc
and
pop
aas
lcall
push
fwait
jae
cmp
incl
js
xchg
jge
mov
enter
lock
jo
push
bound
jbe
insl
mov
sub
and
mov
nop
dec
clc
inc
add
lahf
in
jg
clc
mov
cld
add
xlat
adc
pop
and
xchg
movsbl
and
mov
push
push
add
cwtl
ficomps
loopne
shrl
xchg
dec
cmp
xchg
jbe
stos
push
shlb
sbb
jecxz
clc
pop
sbb
mov
lods
rcrb
jo
inc
mov
push
out
xorb
dec
rclb
pop
lock
testb
arpl
dec
cld
inc
mov
icebp
mov
pop
les
mov
jne
mov
and
cmp
stos
pop
lods
xor
push
mov
mov
je
mov
pusha
cmc
fsubrl
leave
shl
arpl
orb
adc
and
fs
cmp
jno
jb
sbb
cmovs
pop
and
jecxz
fnstcw
push
xchg
jo
mov
cmc
adc
icebp
jno
das
icebp
mov
scas
in
and
fwait
nop
mov
push
inc
xchg
push
nop
xchg
push
mov
clc
xchg
jle
nop
ret
jae
vmwrite
adc
loope
inc
ret
or
rep
or
sbb
incl
mov
mov
sbb
push
mov
jl
scas
xor
cmp
or
push
or
push
mov
fucomip
call
dec
cli
ja
jo
add
aaa
das
std
sbb
mov
rorb
lret
mov
incl
cmpsl
pusha
push
aad
xor
ds
fwait
sbb
jl
ret
and
jl
scas
adc
pop
mov
inc
mov
adc
fiaddl
movsb
mov
or
nop
mov
and
mov
pop
cmpsb
add
sub
lock
push
adc
stos
pop
mov
cld
jge
add
insb
dec
jo
hlt
popa
cmpb
lock
cmp
cs
roll
sysenter
test
and
test
xor
fwait
push
jl
add
mov
hlt
cmp
lahf
lcall
int3
jo
add
out
addl
jmp
rcl
jbe
and
xchg
and
inc
jns
cli
sbb
inc
mov
add
decb
push
adc
xor
lret
sbb
push
add
ljmp
scas
pusha
imul
and
mov
ss
cwtl
sub
pop
jle
mov
mov
push
and
ret
inc
xor
sbb
test
cmp
and
leave
clc
scas
inc
xchg
adc
and
ret
scas
adc
inc
cmp
cld
pop
push
lock
xor
loopne
mov
mov
js
add
xor
aam
dec
adc
mov
sbb
leave
test
fistpll
aaa
cmp
clc
mov
call
mov
xchg
sub
xchg
push
inc
push
out
jge
aad
arpl
hlt
xchg
xor
push
add
dec
lcall
scas
xor
add
lcall
dec
mov
imul
sbb
mulps
icebp
fsubp
dec
push
dec
pop
fisubrs
fisubs
push
mov
and
add
call
bound
cmp
in
popa
js
pop
and
push
jge
xor
xchg
push
nop
loope
stc
add
mov
in
test
mov
notl
adc
add
lods
dec
f2xm1
inc
mov
mov
call
inc
push
int
call
stc
in
popa
cmp
xchg
decb
jmp
jle
in
mov
adc
xor
sub
out
add
in
jl
mull
sbb
std
aas
and
adc
mov
dec
mov
push
daa
shrb
sahf
stos
inc
rcrl
insl
jg
xor
xlat
sbb
stos
dec
pushl
imul
aaa
popa
pop
test
sub
or
cmpl
xchg
or
push
adc
jnp
or
pop
pop
in
sbb
in
aad
jg
ss
cmp
push
and
lock
mov
cli
or
aaa
inc
call
pop
ret
jo
sub
mov
out
or
add
or
inc
in
je
dec
sbb
call
shll
jo
in
rol
xchg
test
aad
push
pop
sub
pop
jle
imul
xchg
push
cld
out
fmull
cmp
fimull
movsb
xchg
jnp
push
lea
dec
test
dec
lcall
mov
add
add
adcb
xlat
cmp
push
inc
ss
mov
pop
inc
jb
mov
mov
test
push
push
add
jae
pop
iret
int3
adc
dec
clc
jae
cmp
sbb
xchg
ja
mov
cmpsb
mov
sbb
jecxz
hlt
movsl
sub
cmp
clc
lods
adc
je
add
push
or
in
inc
test
jo
sub
push
dec
pop
test
xchg
andl
add
jg
dec
mov
push
sbb
cmpsb
pop
mov
cmp
pop
pusha
jl
push
aas
or
add
daa
icebp
mov
push
pop
ret
stos
or
push
adc
sub
sbb
addb
add
sub
ret
into
jb
stos
mov
dec
push
or
lcall
xchg
mov
incb
sbb
lcall
push
jae
cmpxchg
xor
mov
sub
mov
pop
or
ret
adc
xchg
jle
jb
pop
sbb
mov
fisubrs
les
scas
sub
jne
add
cld
adc
adcl
stos
push
jo
fbld
push
call
mov
mov
cmpsl
xor
subb
mov
aas
imul
xor
mov
lret
mov
iret
in
stos
adc
cld
idivl
sub
add
int
sbb
repnz
lahf
cmpl
or
and
jecxz
sbb
sbb
sub
call
clc
xchg
cwtl
pop
loopne
or
cmc
rorl
inc
ljmp
hlt
push
mull
xor
scas
popf
add
dec
or
adc
das
push
pop
jo
mov
sarl
xchg
push
sbbb
xor
pop
xor
or
adc
adc
mov
sbb
mov
test
jae
inc
aad
popa
xchg
xchg
repz
call
fs
shll
jnp
hlt
mov
inc
nop
push
cmpsl
repnz
dec
push
xchg
push
mov
ljmp
dec
dec
mov
jmp
mov
mov
das
jle
aaa
movsl
aas
xchg
xor
add
pop
out
inc
clc
test
adc
sti
inc
push
cmpsl
jnp
nop
dec
add
fistps
nop
icebp
or
mov
nop
or
xor
xor
ss
sti
adc
or
sbb
les
adc
sub
jmp
nop
fiaddl
out
das
hlt
ret
popa
sub
push
pop
cld
push
adc
aas
loop
push
sub
pop
cmpl
jno
mov
dec
inc
xor
and
rclb
decb
daa
ffreep
cmp
mov
dec
push
lea
arpl
decl
ffreep
loope
stc
xor
insb
sahf
cmpsl
inc
pushl
mov
mov
add
lret
fidivl
push
sub
enter
mov
mov
sahf
push
ja
scas
mov
daa
xchg
pop
sbb
mov
addl
or
repz
add
cmp
push
mov
mov
or
loope
jae
mov
xor
pop
pop
push
push
enter
cmpl
xchg
shlb
mov
fists
dec
out
inc
lret
aaa
dec
lods
mov
movsl
jmp
mov
sti
stos
rclb
add
out
shlb
leave
add
jnp
adc
xor
addb
lahf
insb
loopne
pop
imul
cli
data16
dec
sub
push
xchg
add
pop
or
pop
sub
adc
jg
scas
push
lcall
fisttpl
roll
insb
sub
stos
sub
cmpsb
shrl
imul
in
mov
sub
pushf
das
repz
or
and
inc
add
push
push
push
sub
pop
aad
loopne
push
inc
pop
call
clc
and
repnz
push
pop
loope
shrb
mov
adc
adc
mov
loop
mov
or
sub
ljmp
ljmpw
add
mov
jle
add
ficoml
dec
mov
fsubrl
fcmovnu
mov
xor
mov
adc
js
pop
loope
movsl
pop
loop
pusha
pop
or
push
test
inc
pop
fisubrl
push
push
jg
mov
test
inc
add
pop
pop
sbb
cmp
xor
mov
pop
pusha
cmp
test
pop
cmpsb
adc
fsubrp
lods
popaw
mov
jae
pushf
adc
pop
jecxz
shl
jp
mov
out
orl
jmp
sbb
rcrl
and
sahf
cmp
push
sti
lds
cmp
fdivrl
sub
je
mulb
and
fnstsw
add
pop
sbb
pop
mov
xchg
lea
les
dec
outsb
push
lods
add
mov
stos
xor
inc
js
outsb
lahf
fdiv
mov
inc
xor
add
call
push
nop
cs
inc
daa
and
mov
mov
inc
shlb
outsb
test
rcl
daa
pop
xor
push
aas
loope
das
in
sbb
xchg
add
xor
repnz
mov
hlt
mov
movsb
sbb
push
adc
incb
xor
sbb
adc
sub
rorb
inc
scas
pushf
add
or
mov
ret
sbb
mov
decl
jge
xor
in
cwtl
daa
faddl
ss
add
mov
xchg
cmp
je
inc
out
fists
lret
inc
decl
movsb
mov
rcr
xchg
and
das
cmp
mov
mov
mov
inc
shll
xor
repnz
stc
enter
jne
mov
fadds
xor
sub
pop
mov
sub
rcll
cmp
aas
add
jg
rcrl
scas
out
nop
adcb
sub
popa
inc
inc
iret
mov
call
mov
xchg
sub
out
lea
pop
push
mov
loopne
sub
scas
push
fisubs
xchg
pop
sbb
xchg
jle
inc
xchg
loopne
inc
jg
mov
push
mov
icebp
jp
cld
pop
out
mov
and
stc
and
or
mov
mov
out
fistpll
jl
cmp
hlt
push
subl
sbb
or
cmpsb
orb
pop
mov
xchg
inc
cmpb
sti
leave
mov
cmp
out
ss
fnstenv
or
and
rolb
fistps
dec
int
cld
into
adc
mov
jp
hlt
and
push
cmp
dec
sub
xor
in
popf
xchg
icebp
xor
stc
adcb
test
pop
ja
lret
mov
cmpsl
dec
stos
add
and
bound
adc
xor
and
mov
push
sub
pushf
mov
loopne
fnstenv
fmull
mov
xchg
jne
sub
dec
lcall
inc
test
mov
and
ret
je
adc
ss
test
cs
and
sbbb
fsubs
arpl
dec
dec
cmpb
ret
enter
das
dec
and
pop
cwtl
daa
aam
gs
es
ss
stos
or
dec
rolb
clc
ss
jg
mov
jl
insl
jb
ret
stos
pop
cmp
or
outsb
and
push
cld
test
xchg
or
movsl
scas
lods
push
jmp
notb
insl
xor
scas
aaa
jp
add
sub
pop
ljmp
cmp
mov
lea
pop
out
movsl
sar
mov
jg
out
add
das
pop
test
incb
cli
adc
ss
inc
fistpl
add
or
xchg
jg
mov
cmp
cwtl
call
dec
sub
push
inc
loope
dec
mov
fisttpll
xor
pop
or
mov
push
mov
add
inc
lret
mov
adc
dec
fisubrl
leave
mov
dec
in
pusha
xor
inc
xor
cmpsl
ljmp
aas
xchg
adc
test
filds
icebp
rcl
clc
add
push
push
out
into
adc
out
pop
and
mov
adc
or
cmpb
rolb
adc
pop
mov
fidivs
fmuls
lock
hlt
jmp
add
adc
mov
push
mov
push
sub
adcl
loopne
add
ror
movsb
mov
scas
inc
jl
test
stc
jle
cmpsb
pop
jmp
stos
jnp
mov
aas
mov
or
int
lock
cli
lahf
cmc
test
jo
mov
add
push
insl
fisubrs
xor
pop
daa
sub
lods
jo
je
push
fdivs
lds
sub
imul
test
iret
lea
pop
shl
adc
adc
and
add
fcomps
orl
xchg
jge
pop
push
dec
aaa
fmull
xorl
shrl
pop
scas
add
scas
repz
dec
insl
cmp
adc
add
sar
call
and
inc
ret
pop
test
imul
test
add
enter
xchg
cli
jle
xor
repnz
and
mov
icebp
push
stc
mov
fmull
je
jle
push
sub
pop
push
push
lock
pop
and
stos
mov
stc
pushf
mov
aam
iret
clc
lcall
js
push
mov
sarb
xor
ss
xor
push
rcrl
ds
push
imul
loopne
gs
lods
sti
and
fldl
decb
inc
sub
aaa
arpl
sub
or
fildll
mov
das
clc
hlt
pop
aas
popa
das
and
or
jnp
repnz
test
test
mov
ret
sbb
pop
inc
int3
sti
nop
stc
xchg
mov
jo
movsb
movsl
xchg
into
push
daa
pop
imul
mov
popa
push
shll
test
fidivl
pop
mov
xchg
or
rol
sbb
lods
mov
outsb
fiadds
cmp
aam
or
aad
idivl
popf
mov
bswap
loope
push
and
or
movsl
sub
aas
cwtl
push
loop
sub
adc
cltd
cltd
repz
add
add
dec
fbld
sbb
loope
adc
xchg
in
cmc
dec
stos
std
mov
cmpsb
mov
or
dec
mov
cmpsl
test
pusha
dec
jecxz
jecxz
dec
push
mov
mov
cltd
roll
jae
mov
push
insb
mov
push
test
fistps
mov
inc
movsl
jge
push
test
xchg
mov
and
or
inc
andb
stc
lret
dec
aaa
ja
lea
sub
ret
mov
jo
push
sub
cmpsl
inc
fmuls
add
mov
repz
call
lds
add
xrelease
nop
xchg
adc
js
add
or
daa
push
cli
loop
leave
out
jl
jnp
and
aas
adc
and
js
bound
movntq
clc
cmc
cld
movl
ret
and
ja
insb
jl
push
fldenv
imul
adc
daa
mov
mov
call
add
sbb
jne
pushf
test
xchg
mov
pusha
cld
push
add
ds
pop
fsub
xchg
pop
push
ffreep
lds
and
out
mov
adcb
pop
push
enter
inc
int3
jno
hlt
add
out
in
ret
mov
out
lods
or
rcrb
stos
inc
popf
icebp
xchg
cmpsb
jbe
mov
cmp
fdivrs
mov
xor
push
cld
cmp
enter
jl
sub
or
insb
push
xor
push
push
mov
cwtl
cmp
add
or
aam
fcomip
ror
hlt
push
and
mov
test
mov
ds
mov
push
and
sub
mov
mov
sub
sub
jns
mov
insb
ret
fisttps
call
out
xchg
imul
mov
scas
sbb
mov
jno
mov
idiv
dec
or
adc
xor
cmp
shrb
imul
xchg
mov
inc
pop
jb
sbb
push
out
and
mov
mov
or
dec
ljmp
aaa
inc
xchg
call
cs
cmp
bound
icebp
sbb
std
xchg
popl
or
test
xor
jmp
pop
cmpb
inc
add
mov
out
addr16
mov
xor
xchg
daa
aas
inc
push
in
push
mov
push
pop
scas
cwtl
xchg
xor
lret
add
dec
xor
movl
xchg
outsb
or
ret
lds
roll
pop
ds
icebp
int3
daa
inc
push
sbb
xor
stos
cs
rcrb
push
ljmp
pop
sub
lahf
push
lock
flds
cli
sar
sub
int
push
je
aaa
aaa
jb
cmpsl
mov
pushf
sbb
mov
jge
dec
aam
adc
cs
push
or
xchg
inc
dec
sub
lock
icebp
mov
jp
pop
pop
js
add
cmp
dec
jmp
rcr
pop
stc
mov
dec
pop
cs
psadbw
sti
xchg
call
pop
pushf
cmpsl
mov
jl
dec
les
enter
ret
cli
into
sbb
fimull
loope
mov
and
call
cld
xlat
sti
push
cmp
cmpsl
jp
jno
bound
and
mov
pop
sub
inc
shrb
push
je
mov
cmpl
in
inc
popa
sub
jge
scas
mov
popa
repnz
sbb
push
cmp
mov
adc
testl
cmp
push
sar
sub
adc
enter
cli
mov
dec
sub
pop
mov
adc
sbb
sub
lahf
pop
hlt
xchg
dec
bound
cli
xorb
pop
add
sti
xor
or
in
aas
testb
mov
mov
mov
xor
inc
imul
jmp
add
test
addb
cmp
into
addl
rorl
outsl
sub
xchg
mov
sbb
test
push
lods
pop
dec
push
mov
add
out
add
xor
and
adc
repnz
jns
push
add
xor
ja
lock
fidivs
or
and
mov
sub
in
mov
ljmp
pop
popa
mov
in
popf
add
jge
pop
dec
or
jns
ret
xchg
mov
xchg
clc
inc
cmp
fdivrs
lcall
mov
xor
xor
fmuls
sbb
rolb
in
jns
in
pop
arpl
and
cmp
lock
push
xchg
pop
mov
sub
and
xor
clc
lcall
inc
mov
loope
add
adc
dec
add
loope
lcall
int
testl
enter
incl
rcll
xchg
mov
xadd
mov
mov
add
add
sub
add
or
or
loope
push
cmpsb
incl
dec
cmp
pop
and
hlt
sbb
inc
mov
or
sub
aaa
jne
test
hlt
jae
cmp
inc
mov
fs
aam
sub
cld
aas
and
lock
int3
in
ficomps
push
mov
mov
ds
or
lea
jb
cli
out
fadds
clc
cmp
sbb
movb
add
push
xor
pushl
fistpl
fwait
add
jae
sub
pop
sbb
shll
inc
add
stos
jg
add
arpl
dec
push
sarb
out
inc
rcll
outsb
aas
or
sbbl
repnz
and
sbbb
daa
out
popf
mov
loope
stos
inc
nop
adc
push
inc
clc
stos
sbb
stos
jnp
adc
in
jg
and
push
out
rorb
pop
jmp
lock
xchg
sbbl
decl
scas
inc
rorl
les
daa
bound
push
and
adc
cld
enter
lcall
arpl
aas
imul
pop
dec
aas
inc
rorl
dec
add
lahf
xchg
call
pop
mov
jge
or
jmp
dec
sbb
sub
mov
mov
push
cmpsl
mov
notl
ret
sub
mov
cwtl
dec
sub
lea
xchg
rcrb
into
push
xchg
inc
cmp
sub
push
dec
shlb
jbe
jae
adc
pop
iret
adc
push
dec
ljmp
std
xchg
or
movsl
ret
adc
call
pop
inc
add
xor
dec
bound
pop
clc
fimuls
adc
mov
and
cmp
hlt
push
jl
data16
pop
lock
out
push
dec
sbb
push
aaa
jl
fimuls
mov
xchg
fcom
lret
mov
sti
imul
inc
fs
pop
stc
mov
jae
lahf
adc
jnp
addr16
dec
call
push
mov
jg
add
mov
scas
pusha
inc
cld
ljmp
fcompl
jp
aam
aas
and
popa
or
and
sahf
or
sub
nop
frstor
fldt
sbb
bound
call
insl
popa
insb
test
fimuls
xor
cmp
fimull
insb
jecxz
push
mov
stos
fdivrp
inc
inc
jmp
or
cwtl
sub
stc
adc
pop
sub
pushf
hlt
mov
dec
adc
pop
xor
popa
pushf
xchg
pushf
loop
add
js
ret
jbe
sbb
add
ljmp
push
bound
lea
and
es
sbb
sbb
cld
push
mov
jb
mov
jo
dec
out
rol
jns
pop
stc
adc
adc
repz
ja
cmp
aam
decl
insb
sub
test
notb
pop
sub
fs
adc
sbb
insb
pop
jl
adc
push
lock
add
scas
and
jmp
mov
inc
cld
add
and
mov
call
mov
push
into
dec
test
push
outsb
in
aad
sbb
dec
fidivrl
mov
ss
or
mov
hlt
mov
inc
xchg
cmp
test
aad
pop
or
mov
add
sahf
pushf
push
fs
cmp
int
push
mov
inc
mov
das
push
pushl
inc
push
push
inc
xchg
roll
fdivrp
mov
sub
ret
mov
inc
mov
push
flds
les
insl
push
cmp
inc
push
outsb
outsl
mov
out
push
andb
jbe
leave
ret
push
sub
dec
dec
js
fs
dec
pop
rorb
data16
dec
xor
adc
inc
dec
sub
pushl
sbb
mov
or
outsl
leave
ret
add
mov
jp
mov
dec
push
mov
bound
xor
inc
cmp
cmp
ljmp
dec
mov
sub
insl
addr16
fs
es
lret
xor
mov
inc
dec
cmp
data16
mov
scas
repz
cmp
dec
test
jne
jae
add
dec
mov
aaa
push
int3
aaa
orb
call
loopne
imul
js
rorl
sub
outsb
hlt
xor
nop
into
dec
or
xchg
inc
mov
mov
xor
cli
cmp
movsb
inc
arpl
movb
sbb
imul
insb
dec
inc
pop
rcrb
mov
cli
rorb
push
dec
inc
xchg
out
sarl
fiaddl
sub
xor
mov
sbb
lcall
dec
mov
xchg
je
aas
pop
cmp
push
ss
shr
mov
dec
imul
iret
lods
stc
fisubl
call
mov
das
fidivs
mov
push
sbb
push
jno
cmp
inc
aas
sbb
insb
xor
insl
pop
lds
shl
hlt
sub
jns,pn
add
dec
cmp
lcall
enter
rcl
inc
das
xor
out
inc
and
imul
movl
mov
loope
jno
addr16
inc
xchg
cld
push
popa
sub
ret
inc
mov
ja
add
test
xor
mov
mov
lds
lock
dec
mov
pusha
aas
mov
popa
ljmp
dec
mov
xor
bound
dec
mov
fstpl
in
jmp
inc
push
or
in
sahf
jae
add
jb
sahf
addl
aaa
ja
xor
in
or
jecxz
int
jo
inc
cli
cli
push
data16
and
test
inc
pusha
out
dec
clc
push
sbb
add
push
in
outsb
and
cmpsb
loopne
cmp
aas
out
push
repz
ss
mov
sbb
fbstp
push
adc
jbe
inc
incb
test
pusha
xor
push
lea
or
or
cmpsl
cmpb
idivb
xor
push
mov
jle
dec
clc
cmp
cltd
test
clc
add
dec
xor
pop
std
lods
orb
jne
add
dec
sbb
push
push
lods
pop
xchg
push
dec
push
cmp
push
cli
mov
outsb
inc
ss
sbb
jo
iret
stos
push
add
pusha
aas
mov
rorl
loop
in
mov
xor
scas
xor
jae
dec
pop
outsl
outsl
sbb
jbe
jb
push
xor
xor
xchg
sarb
dec
xchg
rcll
divb
bound
inc
and
imul
sub
jne
dec
mov
imul
pop
sbb
pop
imul
fistps
inc
aaa
add
dec
shlb
push
adc
mov
scas
push
dec
inc
xor
leave
rorl
push
ja
ret
data16
push
icebp
hlt
xor
fisttps
inc
sub
loopne
outsl
gs
push
cmp
and
inc
ss
test
mov
inc
or
cli
pop
ds
push
sub
clc
int3
jbe
lock
and
and
push
inc
push
jg
cmp
jae
mov
jbe
ss
dec
push
sub
xor
arpl
push
push
pop
cmpsb
hlt
cmp
xchg
mov
push
aam
dec
xor
inc
push
inc
js
movsl
inc
rcll
insl
adc
cld
jp
cmp
and
mov
push
outsl
pusha
je
repz
fiadds
push
stos
lock
mov
add
sti
jmp
lea
ret
jne
dec
arpl
sahf
add
jl
arpl
rcrb
xor
ds
inc
movq
pop
outsb
lods
shrb
sti
andb
xor
inc
push
sbb
dec
inc
pop
fsin
fildll
rcrb
push
and
shlb
outsb
or
fnsave
dec
in
dec
inc
cmp
push
xor
enter
imul
jae
stc
inc
xor
lret
repnz
ret
loope
sti
dec
dec
xor
mull
push
int3
js
lock
inc
dec
cli
aaa
js
insb
shl
ret
out
fnstcw
inc
jle
sti
notl
or
mov
inc
push
mov
mov
imul
aaa
sti
pop
mov
inc
arpl
mov
es
outsl
lock
push
push
xor
inc
rcr
mov
push
mov
inc
sbb
idivl
inc
and
insb
sbb
or
jns
insb
js
fwait
enter
inc
mov
or
insl
outsl
icebp
mov
stos
inc
scas
dec
insl
imul
incb
dec
imul
mov
jle
enter
xor
pop
rcll
fwait
mov
jbe
ror
dec
inc
inc
xor
lock
es
insl
adc
idivb
cli
dec
add
dec
popf
into
js
xor
sub
adc
shlb
insb
jno
xor
lret
popf
add
std
in
inc
jo
ss
iret
mov
jns
and
imul
dec
dec
lret
out
insl
je
loopne
dec
push
je
mov
xchg
push
in
test
jae
sub
lods
inc
cmp
icebp
lea
add
push
dec
in
pop
inc
xor
popf
shll
shll
outsb
ret
add
push
mov
popa
dec
insl
jbe
mov
dec
pop
dec
jbe
xor
adc
mov
inc
cli
addb
push
sub
lock
pop
test
adc
xor
xor
push
pop
add
mov
dec
les
inc
es
jne
mov
pop
dec
pop
imul
dec
mov
imul
dec
sub
gs
rorb
shll
mov
jl
inc
mov
dec
push
or
jbe
ss
lahf
fadd
bound
hlt
sub
dec
je
push
in
mov
mov
into
pop
negl
lods
negb
pushl
inc
dec
outsb
push
loope
call
aaa
or
orl
addb
mov
js
sbb
jmp
push
jae
mov
testl
jge
inc
inc
cmp
xchg
shrb
and
push
xor
cmp
mov
repz
push
xor
inc
lahf
ss
inc
mov
cmp
xor
sub
inc
pop
push
push
inc
push
fcmovu
cli
cwtl
jmp
pop
imul
cld
xchg
cmp
mov
stos
dec
push
jne
pusha
fdivr
out
adc
push
dec
inc
out
fnstcw
test
push
inc
jecxz
and
adc
fs
icebp
cmp
adc
in
push
jecxz
cmpsb
cld
dec
add
mov
push
push
pop
pushf
push
cmp
inc
adc
cli
insl
sub
push
or
orl
dec
push
aam
mov
loopne
fsubr
inc
je
pop
mov
and
call
insl
adc
add
les
ja
pop
das
sbb
inc
je
mov
sbb
adcb
pop
dec
mov
ficomps
push
pop
push
jno
addl
imul
outsl
cli
push
lea
testl
test
insb
add
idivl
gs
push
in
sub
popa
shlb
mov
jecxz
pop
jo
cli
mov
andl
jbe
adc
push
ss
jo
inc
push
mov
fst
pop
dec
mov
clc
push
xchg
xor
cmc
push
arpl
dec
inc
xlat
push
lret
gs
xlat
sbb
outsb
les
xor
xor
rol
push
stc
add
lahf
ret
and
lea
push
ss
push
ss
lock
push
push
inc
inc
fs
push
out
fisubrl
cmp
int3
aaa
sbb
dec
lods
icebp
insb
push
dec
jb
ds
pusha
dec
cmp
imul
stos
enter
popf
mul
out
sarb
gs
push
adc
inc
pop
push
pop
js
mov
fmull
call
ja
mov
add
and
lcall
inc
add
shl
es
fs
or
gs
sub
andl
test
xor
add
loopne
inc
push
inc
push
stc
shr
and
xor
aaa
xor
dec
xor
orb
add
jge
rol
ret
dec
sahf
cmp
lret
add
rcll
pop
inc
pop
push
dec
sub
inc
icebp
insb
je
adc
cli
call
ja
scas
sarb
push
dec
jns
test
xor
arpl
cld
adc
push
jno
mov
push
imul
roll
dec
shl
jp
insl
dec
xor
inc
push
out
movb
pop
dec
xor
inc
jbe
filds
fsubrs
out
in
je
insl
lock
cmp
inc
push
es
cs
icebp
adc
dec
movsb
inc
les
jno
insl
pop
adc
pop
inc
mov
test
js
out
ret
and
cmp
ss
jo
dec
decb
rcr
in
push
push
call
lock
out
cmp
xlat
fsubrs
xor
repz
dec
pop
stos
pop
ret
nop
fidivrs
shlb
ss
std
and
bound
jbe
cmp
mov
in
push
daa
mov
ret
pop
lock
mov
dec
add
ljmp
shrl
jno
mov
gs
push
dec
inc
les
dec
inc
inc
faddl
ss
xor
inc
lods
dec
dec
xor
sbb
repnz
ret
in
jmp
ret
repnz
inc
sub
sbb
mov
sbb
lret
cwtl
jecxz
dec
das
pop
inc
dec
push
push
inc
dec
dec
popa
arpl
inc
dec
fwait
loop
mov
xor
dec
add
mov
jne
ficoml
xchg
dec
inc
adc
bound
loopne
xchg
xlat
nop
xor
ret
sar
shll
inc
pop
push
sub
scas
and
sub
loop
bsf
adc
rorl
jo
xorl
cmp
adc
jle
ss
push
push
addb
push
xchg
mov
cmpl
add
inc
push
xchg
hlt
cltd
cs
add
jae
xor
xor
mov
add
push
inc
fcompl
and
or
in
das
xchg
std
add
cmp
jmp
pop
js
cld
push
ret
and
loope
add
insl
cmpsb
xchg
nop
ljmp
or
dec
push
js
clc
repz
or
dec
cmp
movsb
dec
mov
pop
mov
inc
arpl
jl
mov
dec
iret
sub
clc
scas
pop
pop
sahf
mov
xchg
pop
cmp
xlat
mov
push
mov
cmovp
popa
rol
hlt
adc
enter
mov
xor
rcl
cs
dec
push
inc
push
jns
inc
inc
dec
movl
mov
push
add
dec
bound
mov
inc
adc
inc
push
ja
mov
add
outsb
inc
lods
inc
roll
in
imul
fisubrl
addb
and
inc
jae
fiadds
add
mov
bound
inc
dec
fnstenv
fcmove
shll
imul
fmull
dec
xchg
rclb
and
aam
shl
ficoml
xor
lock
pop
cmp
clc
in
outsb
popa
js
dec
lock
decl
or
lcall
push
insl
imul
mov
push
lcall
enter
test
and
dec
adc
aam
js
dec
pop
inc
xor
inc
insb
mov
push
sub
push
or
mov
jl
inc
push
enter
jae
insb
ret
inc
xor
ss
cmp
mov
inc
dec
movb
test
repz
sub
ljmp
mov
ss
jle
rcrb
pop
xor
jne
add
sbb
icebp
cld
stos
add
add
shr
inc
gs
push
mov
mov
arpl
pop
out
arpl
pop
or
dec
xor
dec
pusha
je
test
cwtl
aaa
dec
push
sahf
cli
mov
push
add
xor
pop
ljmp
movb
insl
or
cs
inc
arpl
jmp
sbb
pop
shll
fisubrl
mov
dec
jbe
rolb
lret
mov
in
inc
ja
adc
cmpsl
dec
inc
jp
sahf
mov
repnz
dec
into
lods
push
xchg
fmuls
pop
insl
push
xor
cmp
loop
enter
adc
jbe
fsubs
lock
aaa
sti
clc
mov
test
dec
js
and
inc
bound
jne
push
xor
pop
dec
je
fcmovu
add
inc
in
or
pusha
rcl
xchg
xor
ret
lods
movsl
jg
lods
add
inc
jecxz
add
dec
outsl
xchg
inc
xor
and
inc
inc
shrb
arpl
shlb
dec
ljmp
push
mov
aas
jge
pop
pop
jbe
fs
test
jno
mov
jo
cmp
dec
xorb
lret
scas
mov
daa
xchg
fldt
dec
icebp
mov
inc
jmp
inc
mov
pop
inc
bound
rolb
inc
je
ja
push
inc
push
dec
jnp
sbb
ret
jo
push
imul
mov
fisubrs
fs
xlat
insl
mov
dec
inc
mov
sarl
xchg
int
cmp
test
pop
sbb
pop
roll
push
fs
clc
dec
jne
movsl
pop
mov
dec
sbb
push
dec
push
pop
cmp
push
mov
jl
push
mov
dec
inc
scas
loopne
jbe
ja
lock
fwait
lock
sahf
flds
dec
mov
inc
or
push
clc
pop
sbb
mov
aaa
jb
dec
inc
push
push
xor
and
push
test
sahf
mov
jno
push
mov
or
mov
lock
outsb
push
rolb
inc
xchg
jg
adc
stos
inc
mov
shl
mov
aaa
clc
mov
je
ss
jae
idivl
push
and
std
rorb
call
movsb
or
mov
mov
mov
aaa
xor
rcrl
mov
jle
aam
inc
and
in
adc
ljmp
pop
mov
jne
dec
insb
in
xor
jp
outsb
jo
or
stc
inc
mov
dec
sub
xor
jmp
insb
lock
cmp
inc
jmp
push
cmp
cli
into
and
pop
xchg
movsb
ljmp
cwtl
mov
insb
hlt
shll
inc
or
jno
inc
imul
xorb
test
push
data16
int3
dec
lods
sub
js
xor
push
jae
push
cmp
add
or
or
push
lock
inc
test
mov
mov
pop
ljmp
mov
sub
jne
arpl
push
sub
jo
adc
xlat
push
fisttpl
jno
push
insl
push
inc
push
ljmp
aas
ljmp
push
add
popf
xchg
cld
pop
data16
ss
mov
mov
out
or
inc
iret
outsb
add
add
pushf
add
xor
jb
clc
push
push
repnz
cmp
pusha
rorb
loope
add
push
idivl
xor
mov
aaa
mov
dec
sbb
lods
cmpsl
arpl
mov
jo
xor
jge
dec
sub
cmpsl
call
add
sbb
aas
push
cmp
fsubs
jmp
jmp
push
rcll
into
mov
scas
cmpb
pop
inc
push
dec
jns
outsb
aaa
pop
xor
jl
jg
outsl
jne
insb
mov
aaa
loopne
hlt
and
rol
outsb
popa
dec
imul
andb
dec
xor
jbe
cmp
inc
inc
jae
mov
mov
pop
into
out
aaa
push
ret
inc
dec
cmp
add
and
jmp
push
xchg
mov
rcll
add
add
test
ret
rcr
movl
adc
dec
inc
xor
fisubrl
dec
xchg
inc
pop
jmp
orb
inc
jo
xlat
mov
outsl
jb
ss
shl
cmpsb
testl
dec
js
test
test
dec
jnp
mov
dec
push
xchg
sub
stos
add
js
int
test
xor
inc
les
ret
push
or
xchg
mov
rol
jae
add
cmp
push
adc
cmp
shll
xlat
pusha
fidivs
fucomi
inc
dec
ss
inc
add
shlb
call
push
pop
daa
push
sub
cmc
aad
inc
in
inc
les
inc
push
lock
jl
push
jne
ss
xor
lret
int3
add
imul
mov
xor
into
ret
sti
mov
sti
push
rorb
sub
decb
push
imul
jl
and
jle
xlat
aad
lds
outsb
dec
mov
push
mov
rcrb
cmp
ljmp
dec
ja
mov
push
sub
orl
xor
sbb
dec
pusha
mov
inc
push
insb
mov
sbb
repnz
sahf
lcall
inc
mov
cmpsb
xor
pop
lock
adc
push
xor
and
xchg
sahf
dec
xor
jns,pt
push
jmp
js
push
popa
dec
pop
ret
cmp
inc
mov
adc
xchg
or
and
pop
pop
pop
add
add
adcl
push
sbb
int3
adc
inc
push
cmp
xchg
cmp
out
sub
and
sarb
mov
cmp
jbe
sbb
scas
pop
push
mov
dec
mov
hlt
shr
adc
ret
call
mov
pop
pop
push
jno
inc
fmuls
jae
push
and
dec
sub
add
dec
rolb
add
xor
pop
rcrb
dec
insb
insl
inc
je
dec
xor
scas
out
stc
xor
or
sub
cld
mov
inc
push
das
pop
inc
popa
out
push
test
dec
repnz
dec
rorb
lmsw
push
push
push
je
scas
loop
out
clc
loop
xor
push
clc
inc
lds
add
ret
testl
jae
inc
dec
popa
push
inc
pop
ss
shl
orb
sahf
inc
xchg
outsl
lods
xor
push
fld1
inc
inc
popa
push
shrb
push
mov
inc
xor
xlat
lret
jl
inc
mov
add
xor
fiaddl
jne
out
mov
outsl
push
and
popa
inc
push
shlb
clc
or
je
mov
sub
enter
cld
jbe
jb
dec
mov
cld
notl
mov
inc
push
orl
inc
imul
dec
sbb
jo
sets
out
push
lock
push
or
aaa
push
inc
add
in
je
cmp
pop
test
push
jmp
xor
push
inc
insl
xor
lret
jae
rorb
push
pusha
scas
mov
add
add
xor
dec
pusha
and
inc
mov
adc
dec
sarb
pop
push
test
gs
xchg
jbe
outsb
loopne
and
in
cld
shlb
cld
popa
push
mov
push
das
jl
dec
int3
jne
out
inc
mov
outsl
jne
sub
out
push
inc
lret
fs
nop
call
pop
cmp
mov
lock
dec
xchg
sbb
xor
aaa
ss
inc
nop
ljmp
js
pop
test
lods
xor
loop
xor
jp
dec
sbb
enter
in
cli
or
push
pop
push
insl
lea
les
pop
inc
dec
push
push
adc
ret
dec
test
clc
stos
add
adc
push
jp
cmpsl
lret
sub
mov
push
mov
inc
inc
insl
iret
inc
lea
insl
lock
cwtl
out
push
outsl
aaa
mov
fidivl
ja
xor
push
sbb
pushf
inc
dec
sub
pop
loopne
pop
push
xor
mov
js
dec
dec
cmpsb
push
xchg
stos
mov
rclb
loopne
loope
adc
dec
movl
adc
cmp
push
sub
push
into
mov
movsb
insl
inc
mov
or
inc
clc
sbb
outsl
jno
mov
pop
sbb
inc
in
les
sub
xchg
cli
push
push
call
cli
call
jne
enter
rclb
dec
add
shrl
inc
push
pop
loope
scas
push
je
ret
or
add
dec
push
xor
jmp
lock
cmpsb
cwtl
dec
mov
sti
mov
xor
les
lods
cld
movsl
mov
sub
aam
xor
lods
subb
dec
jl
push
jno
dec
sbbb
inc
push
and
ljmp
pop
jno
orl
or
xor
sbb
imul
dec
jge
cmp
test
dec
jge
mov
addr16
sub
pop
inc
fs
fsubp
iret
loope
mov
or
inc
dec
jmp
imul
adc
mov
les
sahf
dec
sub
into
push
cmp
and
jne
bswap
roll
ljmp
jp
cmp
mov
sbb
push
repz
xor
ja
add
push
outsb
repnz
loop
fs
xchg
rolb
mov
lds
out
pop
xchg
add
movsl
or
xor
sub
inc
jb
int3
xchg
mov
jbe
pop
mov
testb
inc
test
icebp
inc
sub
jmp
xor
loopne
pop
pop
loop
pop
icebp
cmp
rorl
sbb
pop
mov
push
cmp
dec
stc
imul
add
fs
cmp
lods
into
xchg
cmp
cmp
xor
cs
dec
pop
sbb
lea
mov
repz
cmpsl
loopne
sub
dec
cmp
pop
fdiv
jno
loopne
dec
pop
inc
popa
push
add
jo
mov
sub
xchg
dec
add
sub
insl
inc
inc
test
sysexit
mov
insl
xor
sbb
sbb
mov
hlt
dec
icebp
rorb
jp
mov
pop
dec
das
sub
fimuls
popl
stos
inc
and
cmp
test
loopne
lock
mov
dec
imul
jge
sti
adc
dec
ljmp
jbe
ret
push
icebp
xchg
dec
inc
add
mov
mov
push
xor
insb
push
imul
test
aaa
dec
and
rcl
jge
in
and
pusha
add
outsb
fcmovb
jp
fcoms
push
js
jle
or
or
mov
aaa
push
mov
inc
push
into
push
xchg
sub
fsubs
dec
inc
inc
jo
dec
mov
adc
data16
and
data16
movsl
dec
mov
inc
mov
dec
add
lahf
mov
roll
ljmp
pop
addr16
inc
mov
mov
inc
mov
push
lods
adc
inc
imul
and
mov
cmp
clc
push
push
dec
dec
into
mov
sti
leave
ljmp
push
imul
shlb
cwtl
mov
dec
mov
les
push
clc
and
push
addr16
mov
fwait
dec
fadds
dec
inc
jle
mov
jbe
adc
or
inc
stc
dec
adcb
aaa
pusha
or
divl
adc
rcrb
into
pop
push
loopne
scas
out
ja
inc
dec
push
jmp
dec
push
addr16
jl
mov
jae
sbb
enter
roll
and
aad
dec
sub
mov
jae
inc
jbe
insl
mov
add
call
stos
push
stc
mov
push
dec
iret
dec
shlb
shll
stos
sbb
cli
dec
je
add
ss
sbb
outsb
push
ds
lods
inc
inc
ja
xor
or
sub
push
ss
stos
dec
add
dec
dec
push
rol
inc
outsb
cmp
aaa
push
popa
push
mov
or
jbe
es
ja
idiv
test
push
test
imul
pop
and
mov
cmp
das
push
arpl
pop
inc
dec
lahf
sbb
dec
movsl
inc
daa
push
pop
ss
insb
push
cmp
pop
dec
out
pop
cmp
push
xor
sub
repz
add
pop
ret
ficoms
push
ret
mov
arpl
or
push
mov
mov
ror
mov
push
xor
stos
insl
ret
in
inc
dec
xchg
cs
push
insb
adc
outsb
test
push
add
insl
dec
mov
inc
xchg
insl
mov
fdiv
adc
fidivs
mov
push
les
insl
inc
shrb
pusha
lea
ja
roll
je
leave
call
xor
movb
jbe
jb
fcomps
dec
dec
dec
or
call
int3
and
scas
rorb
addb
ja
dec
sub
mov
dec
ret
rcll
ret
addb
inc
mov
scas
test
pop
dec
pop
dec
testl
add
mov
and
mov
incl
lea
cs
add
mov
rcl
cld
pop
test
xchg
ret
enter
imul
mov
adc
idiv
mov
cmp
rorl
les
addb
sub
orb
pop
cmpsb
out
bound
insl
inc
mov
loopne
add
xlat
sub
mov
ja
ret
jb
subb
std
add
pop
inc
jbe
jmp
mov
gs
js
ret
xor
dec
dec
and
ficoms
cli
push
lahf
cmp
rcl
shlb
push
pushl
cmp
in
dec
dec
movsb
ret
outsb
push
aaa
jo
dec
jge
xor
inc
add
jb
ss
aaa
popa
test
test
xor
ja
lock
test
xor
ss
addr16
push
rcr
push
xlat
stc
fcmovbe
adc
movsl
bound
pop
or
out
rorl
push
lods
push
outsl
adc
inc
inc
add
lea
fisttps
cmc
push
js
ds
cli
push
inc
jno
inc
jne
push
xor
pop
cwtl
or
push
lcall
push
ret
inc
imul
loop
fs
out
stos
cmp
xor
dec
lret
mov
mov
pop
push
mov
dec
rol
mov
jecxz
imul
mov
dec
lods
sbb
xor
dec
outsl
ljmp
push
scas
inc
xchg
aam
jns
loopne
xchg
imul
add
call
mov
call
jne
dec
push
dec
xor
rcrb
idiv
push
imul
pop
ja
push
xor
pop
outsb
inc
cmp
mov
cmp
pusha
ret
sub
add
push
es
jo
add
sub
push
daa
ret
das
testl
hlt
das
adc
inc
aaa
add
sbb
pushf
cs
lods
push
je
add
pop
adc
add
inc
cltd
xchg
adc
test
add
test
out
xchg
add
inc
shlb
cwtl
and
and
lret
jb
leave
mov
inc
push
adc
rclb
jb
outsl
sub
in
mov
add
push
jae
shrb
imul
add
add
cwtl
or
add
jae
outsl
pusha
inc
push
mov
pop
fidivrl
xchg
pusha
xor
jae
mov
push
jecxz
ss
mov
jns
dec
and
mov
mov
xor
orl
adc
jge
push
adc
bound
negl
cmp
xchg
ja
cmpb
pop
subl
insl
sbb
push
add
or
mov
add
mov
and
out
subb
or
add
or
adcb
test
mov
out
or
and
popa
push
movsb
cmp
arpl
inc
data16
hlt
and
inc
fildll
lds
sub
lock
or
push
jae
add
adc
test
pop
aaa
lock
or
test
add
add
mov
sub
dec
push
pop
adc
xor
iret
xchg
lds
lcall
add
iret
mov
pop
ljmp
aas
sbb
xor
andb
cmp
add
aaa
pushfw
jbe
xor
adc
cmp
ret
mov
cld
bnd
cmp
dec
arpl
inc
iret
pop
add
aaa
sub
adc
and
cmp
mov
sahf
outsl
dec
add
sbb
push
jnp
or
adc
mov
outsb
roll
and
roll
jp
adc
das
je
pop
inc
out
loope
push
bound
jb
js
mov
fldl
rcr
xor
or
or
sbb
mov
mov
add
je
aas
mov
bound
xlat
lds
mov
or
adc
sbb
jg
add
jge
add
mov
in
add
xlat
push
push
dec
or
call
inc
sub
push
push
cs
xor
or
out
dec
jae
repnz
dec
sarl
xchg
addr16
scas
dec
push
xchg
addr16
sub
push
push
push
stos
pop
and
xchg
jmp
mov
xor
sbb
cmp
scas
or
inc
ljmp
in
pusha
aam
dec
sbb
out
push
jne
sub
push
and
ljmp
or
pop
and
sbb
add
pop
and
rep
lahf
adc
leave
cmp
push
mov
hlt
lods
call
jo
dec
xchg
pop
mov
out
repnz
int
repz
stc
pushl
mov
fists
push
and
nop
cwtl
fldl
out
or
cld
mov
sti
push
popf
mov
repnz
stc
out
out
jns
dec
arpl
je
scas
in
push
sub
imull
and
cmp
mov
push
pop
roll
dec
ljmp
mov
sti
outsb
loop
subl
divb
stos
out
shrb
iret
jmp
inc
movsl
jle
push
mov
je
cltd
lret
aas
mov
jne
cmp
sub
dec
data16
fdivs
imul
cld
in
xchg
ljmp
outsl
loop
lret
fwait
ret
or
fstl
inc
clc
dec
cld
addr16
xor
test
ret
aas
arpl
adc
mov
jle
and
out
ret
shl
inc
in
daa
push
lret
or
or
cmp
pop
outsl
jle
xchg
bound
test
inc
mov
xorl
cld
pop
pop
xor
dec
jbe
repnz
and
and
fsubrs
shlb
push
jmp
int
nop
inc
jnp
mov
lods
stos
leave
mov
in
mov
sub
mov
jg
pusha
repz
jno
repz
ja
lahf
jmp
mov
stos
test
push
adc
add
or
jo
and
xchg
mov
ret
loope
cld
in
sub
popa
fadds
push
xchg
addr16
or
rcrb
fcoms
xor
in
aam
and
jg
jns
mov
aam
decl
add
out
mov
les
jae
or
loopne
cs
mov
mov
or
iret
push
stc
cld
pop
ja
mov
pop
jo
mov
cmpb
aaa
jbe
imul
pop
rcll
add
out
cli
xorl
adc
lahf
out
cmp
cmpsb
push
xor
jns
mov
mov
lret
push
jbe
ret
add
test
cmc
popa
iret
and
pop
inc
adc
clc
pop
incl
push
pop
pop
or
inc
and
xor
xor
ds
jns
jp
lret
fmuls
incb
bts
mov
mov
mov
flds
mov
test
pushf
mov
add
dec
dec
mov
shrl
jns
sar
sbb
aam
pop
fdivrl
mov
imul
stc
push
cmp
pop
cld
xchg
shrl
xor
iret
lret
cld
cmpsb
xchg
sti
jg
ja
mov
aaa
xchg
cmp
pusha
out
stc
mov
add
test
ss
out
cmp
rcl
gs
xlat
test
lea
cmpsl
dec
inc
push
push
xlat
dec
add
ss
xor
pop
fwait
scas
mov
lcall
mov
jecxz
frndint
jns
pop
ret
cmp
cli
ds
jmp
testb
fisttpll
mov
and
das
ret
shll
xor
lahf
adc
sbb
out
lock
inc
sbb
sbb
in
nop
and
mov
bound
ret
cmc
imul
inc
int
jb
or
sbb
jno
pause
xorb
push
lret
sti
xchg
lret
pop
jg
add
flds
mov
std
pushl
lods
mov
loope
push
jne
int
mov
mov
in
xchg
enter
sar
cmpsb
jg
push
popf
inc
inc
je
mov
loope
jle
shrl
movsb
cmc
jge
mov
and
push
xchg
add
stc
mov
pop
clc
fwait
inc
sahf
mov
out
lock
movq
mov
outsl
nop
adc
aas
jg
lret
mov
pop
pushf
nop
lea
mov
jns
sub
jbe
add
pusha
movsl
pop
mov
loop
mov
pop
jns
xchg
push
mov
std
dec
rcll
ret
aaa
clc
pop
bnd
mov
dec
mov
jg
mov
enter
nop
data16
js
cli
out
movsl
shlb
and
pop
rcrl
push
jo
or
sti
jo
mov
add
ljmp
cld
movsb
test
mov
jle
push
and
mov
lret
outsl
mov
xor
cmp
cmp
nop
or
neg
inc
jecxz
xchg
loope
aas
jg
xor
clc
inc
or
or
push
jl
xor
outsl
int
fcompp
add
nop
xchg
stc
cs
je
repz
mov
popa
push
inc
sahf
movq
pop
js
sub
in
out
iret
test
ds
lock
fcos
call
push
pop
mov
inc
push
imul
lods
push
sti
push
call
bound
fldenv
and
nop
pop
xlat
loopne
jle
insl
and
and
dec
test
icebp
stc
out
and
mov
push
and
popa
mov
stos
pop
fdivr
xchg
fdivs
stos
sahf
jp
test
clc
jns
jmp
aaa
pop
mov
call
lods
aas
outsl
jg
fstps
xchg
inc
cs
nop
shlb
inc
xchg
dec
out
je
jge
push
enter
lods
sbb
mov
call
test
inc
mov
out
in
pop
xchg
cmp
cld
addr16
mov
loopne
in
pop
cmpsb
inc
pop
fs
inc
mov
jle
push
pop
nop
mov
push
jle
data16
jmp
cld
iret
out
cltd
add
sbb
add
enter
fmull
aaa
push
jne
in
fldenv
mov
mov
sub
insb
fldcw
lret
cmp
lahf
push
cltd
fs
ja
mov
loope
into
enter
roll
dec
push
shrl
dec
faddl
sbb
and
or
jnp
sahf
in
mov
and
jl
insb
clc
iret
loop
nop
mov
pop
or
in
mov
push
jmp
and
cmp
mov
shl
lahf
jle
and
jno
cmp
gs
mov
sbb
adc
rcr
repnz
mov
xor
nop
leave
les
jo
sub
mov
cli
ror
lret
idivl
and
or
bound
lea
dec
jne
lds
push
add
cmc
mov
aaa
pop
and
sahf
dec
bound
sub
mov
jo
xor
inc
mov
lahf
nop
aam
jns
push
mov
dec
fdivs
dec
iret
pop
ja
fimuls
ficomps
mov
or
call
iret
xchg
jg
mov
scas
icebp
jae
stos
mov
xchg
push
cmpl
lock
repz
lods
and
insb
fsubs
mov
es
mov
iret
data16
repz
add
in
mov
cmpsb
xlat
jae
mov
popf
or
imul
push
dec
mov
mov
jbe
pop
mov
pusha
mov
push
lret
cltd
fdivs
out
repnz
iret
fadd
push
jnp
sbb
out
adc
das
outsb
ret
inc
ljmp
lods
mov
loop
mov
fimull
inc
xchg
pop
test
nop
push
cmpl
sbb
xchg
inc
jmp
stos
jb
or
mov
and
pusha
push
fwait
sti
push
xor
aas
cmp
mov
cltd
xchg
lds
sbb
int
mov
xor
and
adc
popa
xor
das
pop
jge
jbe
cli
adc
xchg
inc
pop
clc
ret
incl
in
push
add
andb
repz
jne
inc
sti
pusha
aam
dec
into
or
adc
cmpsb
pop
pusha
cmp
dec
cmp
sub
stc
outsl
dec
cld
mov
insl
loope
inc
data16
push
xchg
int
int3
pop
jns
mov
int
mov
xchg
cmp
jl
icebp
fcoml
frstor
dec
mov
and
fsubs
xchg
mov
test
clc
fstps
scas
push
push
ret
adc
inc
jle
into
jnp
sahf
stos
lods
xlat
and
js
pop
flds
mov
lret
xchg
mov
lret
inc
lret
fwait
vmovmskps
jo
stos
push
and
inc
or
cld
lret
pop
xor
in
test
xor
pusha
shrl
sub
mov
sbb
ja
inc
test
rorb
hlt
jecxz
mov
inc
mov
in
xchg
mov
and
jae
fnsave
pop
dec
clc
sbb
mov
addr16
dec
xchg
mov
in
ss
lods
nop
fcoml
jle
repz
xchg
popf
ror
dec
xchg
and
arpl
add
roll
int
int
lret
jecxz
sbb
sub
mov
lods
aaa
push
pop
mov
lock
data16
aaa
xor
int3
out
outsb
xchg
jle
mov
icebp
inc
mov
cld
adc
fsubrs
cmpsb
and
sbb
incl
mov
inc
stos
xor
repnz
inc
arpl
add
loop
and
jl
decl
sbb
lret
aaa
call
push
cld
in
mov
mov
into
imul
fucom
mov
push
sbb
mov
lds
clc
cmp
ds
ja
std
insl
xchg
stc
mov
idivl
xchg
arpl
push
call
sub
push
loopne
fsts
cmp
cmpsl
lea
mov
mov
push
nop
push
push
pop
aaa
andb
mov
stc
pushl
in
xlat
stos
inc
adc
xor
mov
jno
inc
push
test
into
scas
cld
cmp
mov
es
loopne
out
dec
adc
push
xchg
pop
fidivrs
aaa
jp
mov
cmp
stos
jae
and
clc
sbb
sbb
cmp
jnp
fbstp
or
loopne
dec
cmpsl
aad
fisttps
push
jle
loopne
test
xlat
mov
out
mov
jns
or
nop
xor
inc
pop
or
scas
lods
movsl
or
cmp
jmp
mov
aaa
sbb
shlb
ljmp
out
insl
and
sub
lahf
das
ds
mov
push
loope
cmp
lahf
pop
hlt
insb
rolb
ljmp
cli
repz
mov
enter
clc
in
lods
test
pop
xchg
jg
inc
mov
lahf
stc
jg
hlt
es
push
insl
add
xor
mov
jl
ret
jbe
clc
jg
xchg
cli
aam
push
testl
outsl
jle
jg
add
pop
and
jns
es
xchg
mov
push
call
sbb
cmp
test
lods
jl
jmp
pop
adc
int
aam
rolb
sub
std
popa
repnz
aam
addr16
sbb
test
fstl
or
adc
loop
aad
xlat
xor
push
imul
add
enter
movsl
stos
mov
in
dec
push
pop
mov
mov
movb
clc
fists
fimull
xlat
xor
inc
push
mov
mov
push
hlt
mov
xchg
mov
cwtl
clc
adc
push
add
aad
mov
mov
aaa
mov
jg
imulb
push
lods
fsubrs
test
decl
xor
push
mov
pop
shlb
hlt
out
pop
js
lock
push
rorb
jecxz
movsl
es
scas
hlt
or
mov
pop
jp
mov
xchg
movsbl
jnp
testb
call
ror
sub
lret
stc
cmc
sbb
lahf
adc
and
das
mov
add
psubb
adc
adc
fcmovb
gs
jg
stc
cmp
insb
lcall
xchg
sub
and
mov
mov
bound
stc
int
movsl
inc
movb
repz
mov
mov
ja
mov
out
and
cmp
bsf
mov
lret
cmp
mov
fdivr
int
xchg
mov
jnp
push
mov
test
lock
lea
sbb
addr16
push
inc
pop
fs
loop
lds
lock
out
and
push
dec
push
in
insl
mov
mov
mov
and
lahf
scas
adc
cli
test
mov
pop
iret
mov
aad
flds
mov
mov
sbb
lahf
lods
cld
ds
mov
push
lcall
jg
fidivl
sub
gs
mov
sbbl
inc
xchg
xor
xor
aad
imul
iret
out
enter
pop
dec
mov
scas
cld
call
fcompl
push
and
sub
lea
call
rolb
lcall
push
cwtl
nop
mov
sub
int3
sahf
mov
xchg
inc
xchg
mov
das
cli
int3
out
ficomps
ret
aas
jecxz
daa
adc
insb
add
iret
jecxz
jnp
inc
cmpsl
mov
mov
or
mov
cld
pop
popfw
cld
push
mov
out
iret
jne
scas
dec
out
out
fists
nop
sbb
lret
cmc
cmp
jo
jp
mov
rorl
pop
scas
sarb
mov
pusha
or
jo
pop
loope
divb
fs
in
mov
sbb
push
mov
cmp
xor
lahf
mov
xor
jp
mov
clc
cmp
mov
pop
shlb
adc
push
jnp
push
test
jns
icebp
lahf
aad
shl
mov
inc
ret
pusha
xchg
icebp
call
pop
aas
icebp
out
fs
jge
lea
clc
out
jg
sub
lret
gs
push
out
push
das
outsl
inc
ss
push
mov
out
ret
rep
nop
fsubs
repnz
call
xchg
int3
jns
gs
and
push
leave
sub
lahf
aaa
je
out
mov
mov
cwtl
outsl
pop
loop
mov
sbb
pop
mov
adc
jl
js
test
ss
stc
repz
repz
cld
push
outsb
and
int
push
clc
repnz
stos
lds
pop
jecxz
fiaddl
sub
imul
mov
mov
std
push
pop
inc
scas
rcrl
dec
lea
lods
pop
jecxz
stc
jnp
imul
je
ret
popf
xor
daa
popf
in
daa
lret
fistpll
mov
int
or
pop
adc
inc
jl
pop
pop
pushf
and
add
rcrl
int
fimuls
pop
push
and
pop
push
pop
cli
cwtl
adc
and
jp
negb
lock
push
jl
dec
push
decb
inc
sbb
mov
fwait
push
inc
push
inc
cmp
std
jl
fmuls
mov
in
loope
push
mov
mov
cmp
inc
scas
add
cli
mov
outsl
push
cmp
fsubrs
insb
addb
push
sbb
cmpsb
iret
adc
mov
adc
out
or
push
das
and
mov
mov
into
inc
shl
pop
insb
repz
or
cmp
pushf
lea
xor
mov
cld
stc
mov
push
negl
dec
ret
cli
rolb
repz
clc
adc
mov
testl
loope
cmc
and
scas
or
ret
ret
inc
add
and
fisttps
push
iret
bound
jle
sar
ja
and
dec
cmp
rcrl
aaa
ja
pop
jmp
push
jb
imul
jae
bound
bswap
dec
mov
push
cmp
pop
pop
mov
mov
shll
jbe
das
add
inc
es
xor
pop
arpl
mov
cmpsb
sbb
sti
pop
out
jmp
push
sti
outsl
dec
lahf
loop
cltd
rsm
jecxz
cli
loope
fcoms
les
or
push
stos
cmp
mov
repnz
js
fwait
push
xor
cmp
icebp
scas
cmc
arpl
call
shrb
push
sbb
imul
in
imul
jg
test
hlt
test
mov
push
lret
mov
inc
pop
sub
dec
lods
and
jg
int3
jg
xchg
adc
js
scas
push
xchg
jle
dec
ret
es
xor
push
out
daa
in
jge
pop
mov
mov
aas
jb
repz
add
je
push
ficomps
mov
sti
es
mov
aam
push
nop
mov
cmpsb
out
roll
cld
pop
flds
pop
pop
shl
nop
aaa
aas
pop
ljmp
icebp
pop
mov
icebp
xchg
push
ljmp
cld
cmp
outsb
fsubr
orl
push
mov
or
xchg
nop
jae
dec
and
mov
pop
fs
adc
mov
imul
test
addb
cmp
jl
ds
xor
cld
test
repz
fidivl
push
sub
sub
into
div
push
jbe
mov
fcomp
mov
in
dec
scas
lods
cltd
push
flds
loope
lock
std
ja
xor
es
dec
cwtl
jmp
icebp
repnz
dec
clc
pop
xchg
aaa
or
inc
lods
shll
or
mov
cmp
jns
xor
stc
cld
scas
out
loope
out
jae
icebp
andb
lahf
xor
push
sbb
push
hlt
iret
mov
add
jl
pop
out
in
and
stc
sbb
xchg
cli
inc
cmp
and
cs
pop
dec
jb
mov
mov
cwtl
jmp
push
lock
cli
stc
and
les
or
add
stc
fwait
sbb
arpl
xchg
add
hlt
inc
clc
fwait
pushf
sbb
dec
adc
mov
jb
cmp
aas
inc
fs
gs
div
jnp
cmp
mov
aas
jecxz
arpl
mov
iret
push
adc
inc
test
shl
mov
mov
stos
xchg
lds
inc
sub
cld
out
push
sub
outsb
insl
fs
mov
mov
data16
adc
adc
test
mov
or
notb
pop
cmp
mov
lcall
inc
mov
mov
add
and
loope
and
inc
mov
sbb
inc
sbb
inc
int3
int3
mov
sbb
ret
jg
loopne
cli
cmp
or
out
iret
xchg
mov
ja
mov
stc
jl
push
sbb
stos
fcmove
sbb
xor
aaa
in
mov
inc
movsl
pop
inc
cmp
and
arpl
dec
or
inc
mov
out
sub
fsubrl
mov
xchg
outsl
clc
pop
jle
sti
cmp
jge
jo
ds
lods
adc
je
mov
sbb
add
lea
inc
dec
xor
ficomps
jmp
push
insb
mov
stos
and
add
nop
shl
pop
jg
pusha
push
sbb
into
in
and
roll
nopl
inc
push
xor
test
mov
inc
subl
and
add
rclb
rolb
pop
in
js
pop
in
fsubr
mov
addr16
xor
pusha
icebp
aas
clc
and
sbb
mov
adc
std
jg
cmc
xor
ficompl
sub
lods
lret
ret
daa
mov
mov
pop
loopne
sub
xchg
std
push
aaa
js
repz
and
into
push
mov
jecxz
rep
outsb
mov
test
or
inc
clc
mov
aaa
or
movsl
pop
add
addr16
ss
pop
dec
repz
cld
lcall
fnstsw
push
repnz
jecxz
repz
cmpsl
sub
xchg
mov
loopne
loop
in
clc
or
ss
mov
aad
iret
cli
fwait
test
push
xor
or
stc
jnp
repnz
or
shl
mov
and
or
and
stc
and
jo
cmpsb
repz
stos
std
out
arpl
cld
mov
jbe
xor
shr
mov
lahf
cld
push
fimuls
or
fsubrp
mov
cld
out
xchg
inc
ret
pop
mov
push
popl
jl
aas
fbstp
test
mov
sbb
or
fidivrs
mov
mov
add
out
shrl
push
adc
enter
ja
ja
adc
cmp
dec
nop
arpl
sbb
or
lahf
pop
mov
rol
and
mov
daa
jbe
shl
outsl
decb
push
ds
pop
rorb
loope
int
pusha
scas
out
xchg
lahf
mov
leave
stos
xor
jmp
cld
inc
insl
cltd
frstor
pop
cmp
ljmp
mov
pop
stc
add
lret
dec
pushf
mov
fcoms
xor
sbb
mov
push
pushf
push
paddusb
jo
outsl
mov
sbb
enter
sahf
inc
gs
push
cmc
cld
pop
mov
cli
lret
std
das
fbld
mov
pop
add
repz
fsubs
sti
mov
mov
add
ss
push
popa
hlt
cmp
fistpl
and
push
cmp
lcall
aas
jp
pop
cmp
inc
dec
or
jne
outsb
xchg
lcall
or
cmp
ja
mov
scas
cmp
mov
loopne
insb
jno
xchg
jns
mov
inc
into
sbb
push
shl
mov
rcr
xchg
inc
mov
mov
in
icebp
cmp
js
lahf
inc
and
scas
push
cmpl
jg
jecxz
addr16
and
sub
inc
sub
std
mov
mov
jae
jp
mov
mov
add
lahf
outsl
push
mov
push
sbb
mov
sbbb
sbb
aas
outsl
ficoml
sub
imul
clc
sbb
xor
mov
cmp
inc
cli
je
sbb
adc
dec
loopne
loope
fcomps
ja
mov
cmpsl
cld
dec
push
aad
test
mov
mov
sbb
jp
jne
mov
and
jb
cmpsl
pop
jns
call
and
fucomip
outsl
movsl
inc
insl
lods
nop
fcoms
xlat
push
and
xchg
xchg
mov
sub
std
loope
mov
fcoms
enter
inc
call
dec
lods
xchg
and
jmp
ja
push
pop
lock
and
xor
pusha
push
sbb
jp
scas
fs
out
repz
test
jo
sub
push
mov
pop
out
loopne
or
adc
bound
push
clc
mov
cmpsb
or
ret
popf
sbb
add
shl
paddusb
shl
pop
mov
repz
mov
push
inc
add
ljmp
insl
mov
add
ret
inc
xorl
rcl
aam
icebp
inc
xlat
xor
inc
mov
loope
jne
aad
jle
jge
out
scas
iret
stos
adc
pop
movsl
enter
outsb
das
call
dec
jge
push
out
xchg
ja
pop
push
dec
daa
push
fs
push
and
or
mov
es
gs
xchg
mov
loopne
lret
es
sub
add
insb
rorb
mov
cld
leave
push
cltd
pop
mov
mov
and
call
fnstenv
xor
ljmp
jecxz
ret
push
cld
out
or
cld
ret
addr16
bound
cmpsb
jg
adc
into
popa
mov
or
pop
mov
or
test
lea
scas
xor
scas
mov
jbe
sub
cmc
cltd
xchg
in
xor
mov
decl
in
outsb
cmp
jo
sbb
popa
fldenv
jne
adc
mov
mov
cwtl
cmc
push
adc
mov
vpmadcsswd
mov
mov
lods
xor
cmp
xchg
gs
jle
rcrb
push
mov
add
loopne
enter
push
mov
jo
xchg
add
lds
testl
cs
aas
cmp
inc
adc
inc
movsb
lea
xor
clc
cld
jg
pop
push
ljmp
cmp
stos
jo
xchg
cmp
mov
add
shl
cmpl
loop
and
pop
cmp
decl
jge
test
sub
outsl
mov
sbb
cltd
lret
loope
ja
xchg
sub
inc
mov
push
xchg
in
test
cmp
loopne
add
mov
mov
mov
pop
adc
push
push
fwait
jle
add
sub
pop
sub
inc
bound
pop
adcb
mov
inc
jg
mov
icebp
je
int3
cmp
lret
or
out
lods
les
lahf
xor
cld
out
xlat
popa
lret
mov
sbb
test
insb
cmpsb
je
sub
xor
or
pop
inc
sub
sub
cmc
imul
pop
mov
xor
inc
into
sub
mulb
sbb
ret
dec
pop
icebp
or
jge
sti
or
sbb
dec
add
pop
mov
mov
sbb
popa
mov
mov
mov
lock
jne
adc
xor
cmp
bnd
mov
call
ja
pop
ds
inc
loope
add
imul
insb
nop
jo
cld
addr16
xchg
movsb
pop
mov
lahf
lock
inc
fildl
cmp
icebp
cli
cld
rcrb
adc
pop
test
adc
cmp
inc
scas
jb
inc
jp
mov
jg
cld
jle
addr16
xchg
stos
shll
call
leave
lock
incb
into
and
fisttpll
cmpsl
das
clc
mov
jle
fsubs
aam
repz
push
pop
inc
mov
xchg
cld
das
or
mov
lret
inc
mov
pushl
xor
test
pop
loopne
std
jg
dec
mov
sbb
rorb
fbld
adc
inc
lretw
push
xlat
pop
mov
push
bound
shll
clc
xlat
mov
rclb
xor
xor
push
loop
lret
add
or
or
push
outsl
sar
ja
and
cmpsl
inc
inc
aad
fbstp
sub
test
outsb
clc
dec
sbb
mov
lock
cld
xchg
subb
mov
pop
mov
lret
jecxz
in
cmpsl
mov
out
inc
and
in
sub
push
jnp
loopne
jp
in
mov
rorb
push
pop
bound
xchg
mov
fsubp
and
mov
mov
lret
cmp
add
inc
les
in
add
sbbl
jno
daa
mov
addb
xlat
mov
leave
mov
mov
jo
in
shll
pop
pop
sub
enter
jmp
and
test
adc
xor
or
jle
sbb
and
sbbl
lret
add
cmpsl
int
ret
sbb
cmc
dec
roll
insl
inc
xor
jp
sub
rorb
mov
mov
cmpsb
cmp
lret
add
inc
mull
push
mov
cmpsb
div
iret
fidivl
jbe
push
dec
in
dec
mov
add
fcoml
jge
jb
xlat
mov
pop
stos
out
mov
loop
out
adc
movsl
lds
incl
and
stos
jo
loope
sbb
pusha
repz
lods
adcl
out
xor
xor
std
aas
lahf
inc
gs
sbb
test
rclb
int3
pop
pop
jmp
imul
dec
int
mov
pop
or
or
push
and
sub
fstpt
cmp
fldenv
dec
fcoms
ja
mov
mov
push
stos
aas
pop
loop
inc
cwtl
add
mov
cmc
icebp
loope
or
sbb
das
jo
jle
scas
ret
mov
clc
jo
fbstp
into
adc
jecxz
or
repz
lahf
out
out
lods
xchg
test
movsb
test
or
push
adcl
idivb
push
icebp
lcall
int
cli
repz
imul
xor
aas
das
rcrb
push
ljmp
mov
dec
clc
repz
outsl
inc
notl
jp
stc
adc
bound
out
or
mov
into
int3
lahf
mov
mov
mov
sbb
in
hlt
dec
outsl
inc
aam
subb
cld
lock
mov
cmp
mov
mov
inc
insb
ja
jb
adc
sub
call
aaa
ljmp
pop
jg
movsb
insl
jg
test
push
cmp
int3
push
xchg
or
push
mov
cmp
sarb
mov
nop
dec
mov
mov
jg
xchg
cmp
sub
ljmp
nop
clc
cli
loope
sub
clc
and
repnz
dec
test
aas
jg
pusha
inc
fadds
pop
mov
inc
push
dec
or
mov
enter
pop
fneni(8087
inc
jge
mov
mov
pop
mov
test
cld
cld
icebp
sbb
inc
sahf
cwtl
jecxz
rorb
or
fnstenv
ja
fbstp
mov
mov
cli
mov
mov
pop
mov
add
rol
imul
xchg
mov
std
out
xlat
xor
shrb
mov
push
loopne
lock
xor
mov
fwait
mov
add
inc
es
std
out
cmp
mov
push
push
in
and
adc
cld
adc
dec
bound
stos
cld
cld
xchg
lcall
scas
insb
shlb
or
or
push
fsubrs
pop
out
aaa
sub
mov
lods
hlt
daa
aas
fidivrs
fcompl
hlt
adc
repz
inc
std
adc
insl
cwtl
fisubs
xor
push
arpl
jbe
imul
push
push
mov
repnz
addr16
lods
cmp
loope
or
push
jg
mov
gs
xchg
pop
add
repz
jbe
sbb
aaa
mov
nop
fcom
jg
inc
mov
push
lahf
cmpl
mov
push
jl
jnp
dec
mov
mov
cmpsb
xchg
movsb
dec
xchg
push
push
pop
cmp
data16
push
dec
out
inc
movsb
repz
in
push
inc
shlb
add
outsb
sub
lods
mov
ret
mov
mov
fsubrl
jl
adc
fadd
stos
mov
stc
ja
jp
nop
mov
mov
adc
ss
std
mov
pop
outsb
jle
mov
jecxz
push
lock
pushf
in
icebp
dec
lcall
loope
fsubs
push
ds
or
out
jmp
inc
div
iret
mov
mov
pop
cltd
cld
push
pop
addb
sub
sbb
xchg
popf
ss
and
in
clc
test
mov
mov
xchg
mov
test
jae
fadds
jnp
aad
aaa
stc
imul
sub
repnz
mov
push
pop
pop
std
jl
mov
xchg
movsb
pop
mov
inc
ljmp
lret
push
add
jge
scas
cld
repz
push
in
out
jg
int3
push
mov
stos
cwtl
orb
mov
popf
and
inc
rclb
mov
stos
outsl
cli
sbb
jg
js
das
mov
jecxz
ficomps
nop
mov
mov
lods
jg
shl
fs
mov
in
insl
push
inc
push
push
stos
jg
mov
lods
cwtl
sti
pop
mov
iret
pop
imul
cmp
push
cld
add
pop
out
movsl
mov
pop
inc
popa
xor
cmpsl
inc
cmp
pushf
out
inc
movsb
in
outsl
mov
dec
push
push
test
pop
fucomip
adc
and
push
adc
mov
into
pop
pop
or
lret
and
and
mov
and
push
sti
push
mov
dec
lret
push
sub
mov
sbb
out
insb
aam
mov
cmc
push
outsl
rcr
mov
outsb
pop
push
mov
repz
mov
jo
or
inc
mov
xchg
insl
outsl
mov
sbb
clc
scas
fs
jns
inc
scas
out
jl
pop
dec
loopne
rcrb
nop
repnz
movsb
xor
mov
mov
in
and
pop
bound
test
xabort
loop
loopne
push
stos
dec
pop
sti
shll
push
in
xor
aam
test
imul
movsb
adc
push
js
fiaddl
xorb
icebp
pusha
mov
jecxz
adc
ffreep
clc
setg
fsubr
rorl
lret
and
pop
mov
cmp
jecxz
clc
push
pop
loope
into
popf
xchg
mov
dec
int
cld
and
mov
icebp
cmp
mov
sti
lods
ja
outsl
inc
aad
jo
dec
jl
sub
inc
fsubr
mov
cli
aaa
mov
mov
jl
hlt
loopne
repnz
dec
sarb
rolb
cmp
add
int3
adc
loop
movaps
mov
sbb
rorl
mov
mov
mov
test
mov
cmp
or
rcrb
fnstcw
shr
enter
mov
push
xchg
pushf
or
push
fs
aam
ljmp
aas
sub
test
xchg
ss
cld
aas
jg
lods
or
xor
mov
out
insb
cld
aaa
cli
or
mov
stos
hlt
mov
jo
test
aad
cmc
sbb
fsubs
movsl
cmc
adc
mov
xor
cld
gs
pop
loopne
dec
xor
mov
das
lock
clc
push
xorb
sbb
adc
outsb
nop
jp
dec
mov
adc
sbb
pop
outsl
popa
or
adc
mov
xchg
and
cmpsl
movsbl
mov
out
mov
inc
mov
scas
fs
xchg
cmpl
dec
ljmp
clc
dec
stos
pusha
imul
add
push
mov
and
test
adc
sar
in
mov
jp
sbb
cmp
mov
add
lods
mov
inc
push
call
adc
pop
pop
and
inc
push
scas
sbb
push
mov
fldcw
mov
add
mov
or
cmc
inc
xchg
adc
icebp
cmp
mov
ret
cmpsb
hlt
fmull
cmp
jmp
cltd
push
fcoms
sbb
inc
test
sti
call
jne
mov
out
push
and
jae
push
ljmp
and
push
dec
jbe
sub
decl
sbb
mov
jl
pop
mov
mov
jns
push
mov
mov
in
inc
adc
lea
xorb
divl
in
push
dec
test
fmuls
ror
inc
popw
mov
mov
repz
ja
sbb
lock
xchg
jg
adc
push
push
cld
pop
lds
scas
xchg
shl
arpl
leave
ret
mov
inc
cld
sbb
mov
clc
lds
mov
loopne
in
in
inc
mov
loopne
fwait
mov
dec
fisubrs
mov
cmp
inc
adc
arpl
mov
in
insb
adc
mov
ret
dec
cli
xchg
sbb
cld
mov
and
repz
xor
and
push
push
sub
pop
add
pop
outsb
dec
fmull
das
aam
outsb
stc
insb
mov
movsb
or
mov
jno
enter
test
out
push
xor
dec
mov
jbe
bsr
rcr
sbb
lock
aas
pop
mov
int
mov
mov
push
lret
jae
fdivrl
pop
dec
mov
aad
mov
and
or
cmpsb
push
pop
lods
add
fistpll
mov
call
push
mov
fwait
icebp
push
fninit
filds
aad
popl
sbbb
adc
lock
loopne
sub
popf
fildl
jp
or
fsubl
idivb
mov
mov
int
fldcw
mov
rol
cltd
jb
mov
lock
imul
cli
iret
sub
mov
add
jle
hlt
cmp
fiadds
mov
or
sub
push
jg
adc
rorl
int
ljmp
test
xchg
lods
pop
cmp
loopne
sbb
rorb
mov
inc
push
mov
cld
shrb
cmp
aas
pusha
pminub
out
mov
mov
and
in
stos
bound
fidivrs
into
mov
and
popa
cmp
clc
and
xlat
adc
arpl
ret
scas
mov
retw
jo
jle
inc
lahf
and
faddl
cmp
xor
popf
sub
and
inc
cmp
neg
cltd
aas
lock
cld
call
jl
rorb
or
ret
inc
stos
fcomi
cld
mov
scas
ss
add
fisubs
mov
cli
dec
ret
insb
cmp
sti
out
imul
adc
xor
xchg
inc
jae
jge
aad
mov
cli
mov
cmpsb
mov
jp
dec
mov
add
mov
std
jnp
stc
adc
andb
dec
xchg
lret
std
cmp
insb
xor
mov
repz
lret
idiv
inc
push
incb
add
and
fnstcw
jg
jno
in
inc
mov
sub
jmp
dec
pop
mov
repz
pop
insb
cmpsb
arpl
push
push
and
sub
pushl
inc
mov
cmp
inc
inc
test
test
xchg
out
sti
mov
out
insb
lods
ss
and
imull
cmp
mov
mov
js
jl
mov
aas
es
gs
jle
pushf
add
jae
arpl
push
mov
jo
das
or
mov
mov
leave
add
and
jecxz
les
roll
cvttps2pi
inc
jle
sub
mov
pop
jae
cwtl
mov
lahf
test
mov
imul
aas
pop
jecxz
fiaddl
repz
mov
xchg
mov
push
dec
xor
adc
lret
add
les
push
fstpt
sub
cmpsl
outsb
add
ficomps
adc
aaa
jo
xchg
mov
jns
dec
cltd
pop
shll
add
and
mov
mov
aaa
mov
outsl
sbb
jnp
rcl
out
and
shll
popa
aaa
lahf
clc
aas
mov
cmp
loopne
stos
js
fisubs
sbb
das
add
jns
adc
xchg
and
lds
pop
cmp
xchg
clc
xor
std
pop
and
loop
fsubrs
xchg
movsb
stos
pusha
stos
sbb
bound
test
jnp
push
or
call
jl
aad
push
add
pop
mov
gs
inc
fwait
pop
jns
xchg
adc
xorl
cmp
xchg
nop
and
dec
popf
add
mov
mov
cli
xlat
clc
fldt
dec
clc
pusha
fdivs
shl
mov
stos
mov
and
js
test
das
icebp
aad
hlt
lcall
psubb
adc
and
lahf
ss
in
and
mov
fimull
stos
scas
jmp
mov
or
mov
jae
adc
sbb
popf
int3
sub
lock
adc
cmp
das
in
pop
je
xchg
mov
mov
fsubrl
push
fs
lock
jns
test
test
jge
or
fnstsw
xor
jg
shll
mov
push
push
call
fcmovne
inc
mov
add
sbb
fnstcw
inc
pusha
mov
sar
test
in
sahf
in
sbb
mov
push
mov
shrb
inc
daa
or
aaa
es
mov
sahf
or
mov
lock
xchg
leave
pop
and
fcomp
ljmp
push
mov
sar
push
aas
push
xchg
lock
mov
mov
test
clc
mov
jl
lea
cmp
mov
popa
jno
or
mov
push
int
add
xchg
mov
out
repz
add
or
and
in
fcmovnbe
nop
pop
jne
lea
push
cmp
xlat
inc
ja
scas
cld
ljmp
jge
pop
push
push
jecxz
inc
popf
add
rorl
jns
mov
inc
or
sahf
mov
add
std
out
into
imull
flds
mov
push
xchg
rorb
out
mov
push
adc
outsl
rorb
push
imul
jmp
xchg
dec
ret
insb
mov
nop
push
jge
adc
sbb
ljmp
in
inc
sbb
or
cs
lret
daa
test
dec
pop
pop
cmc
dec
push
push
adc
ss
fstps
cli
nop
mov
fisubrl
xor
pop
mov
cld
pop
pop
lods
fs
insb
xor
mov
mov
aaa
shrb
pushf
mov
xchg
aad
jg
enter
push
cmp
inc
rol
sbb
outsb
inc
fcomps
mov
mov
sbb
stc
loop
fistl
push
out
std
lock
mov
xchg
sub
mov
fdivr
or
inc
aaa
dec
dec
jbe
fbstp
decb
das
sub
xchg
repz
mov
clc
ja
fucomip
in
rcrb
add
subb
pop
and
repz
flds
xchg
xor
jmp
push
arpl
cmp
sub
nop
dec
mov
test
pop
fxtract
jle
test
loopne
add
sbb
mov
lcall
lds
pop
popa
mov
sbb
lock
mov
jb
ficoms
popa
enter
fsts
les
cs
int3
xchg
test
les
sbb
rcrb
cli
dec
dec
aaa
push
push
push
ret
scas
add
mov
cld
cs
mov
pop
fbld
es
clc
xchg
mov
stos
lock
cmpsl
mov
sbb
inc
sbb
dec
mov
jo
ss
fcompl
pop
jp
bound
ret
arpl
mov
and
fdivrp
xchg
mov
or
movsb
test
cmpsb
popa
and
add
es
add
adc
hlt
pop
cmpb
aaa
int3
sbb
xchg
lret
fidivrs
lods
xchg
idivb
push
aaa
jmp
mov
scas
pop
repz
dec
mov
jg
lock
shrb
and
pop
inc
dec
xchg
or
dec
xor
dec
std
push
or
jbe
mov
out
pop
jle
cld
add
pop
lahf
neg
mov
pop
jo
pop
add
xchg
jno
cld
imul
pop
xchg
repz
jl
mov
pop
jbe
and
pop
insb
mov
adc
mov
scas
sbb
movsl
sbb
shll
xor
mov
add
lret
lret
cmc
add
outsl
fdivs
jns
cld
xor
into
mov
inc
xlat
aas
into
iret
test
aaa
roll
pop
nop
push
pop
xor
dec
jp
push
add
adc
sbb
es
shrb
push
aaa
sub
imul
nop
out
jo
repz
orl
insb
ret
push
rolb
dec
inc
and
hlt
jg
mov
shll
adcl
das
pusha
mov
loopne
leave
push
hlt
clc
xchg
aaa
jp
jle
mov
nopl
mov
jecxz
data16
ret
inc
in
pop
jmp
in
not
pop
test
sub
ss
nop
xchg
pop
jl
jl
mov
push
aad
inc
in
cmpsl
push
dec
cmp
or
push
and
icebp
add
nop
movsb
cmpxchg
sbb
loope
decl
adc
ror
sti
cmp
add
mov
sub
in
incl
xchg
fiaddl
lret
mov
loope
inc
add
in
jo
enter
dec
repnz
stos
aas
or
add
or
pop
pop
loop
loop
iret
and
mov
outsl
movsb
cmp
fdivl
mov
out
repz
fcmovu
lock
adc
sub
jne
mov
pop
popa
ljmp
push
mov
jns
clc
mov
inc
xchg
mov
mov
pop
push
cmp
jecxz
cmp
pop
aad
adc
xchg
lea
mov
testl
adc
jmp
add
lcall
js
loopne
in
mov
cmp
fwait
dec
inc
stos
and
push
sbb
les
adc
pop
pusha
and
aas
das
les
mov
xchg
out
insb
mov
cld
sub
fwait
stos
cmp
ret
scas
nop
and
fstps
fwait
lock
sbb
int3
lahf
andb
cli
js
mov
lea
lods
std
movsb
xlat
or
mov
repz
push
aas
je
fwait
stos
add
aam
pop
loopne
xchg
and
loop
dec
lcall
imul
cmp
outsb
push
jl
mov
cld
loope
inc
cwtl
iret
mov
xchg
sub
adc
in
lcall
push
or
jecxz
push
sbb
ljmp
jecxz
cld
cmp
pushf
imull
lods
jb
jg
stos
mov
clc
and
loop
lds
add
xchg
or
or
jne
xchg
aas
shlb
fwait
aaa
mov
and
inc
push
jnp
inc
sarl
mov
inc
inc
or
push
repz
sbb
adc
mov
push
sbb
ja
loope
shlb
aaa
mov
andl
fsubrs
cld
in
mov
push
nop
bound
jne
movsb
sbb
pop
loope
sbb
sbb
daa
rcrb
mov
dec
pop
mov
clc
cmp
imul
fildll
sbb
std
aaa
push
jge
sub
sarb
imul
cli
jmp
or
inc
push
cmp
inc
js
adc
sbbl
add
push
outsl
sub
xlat
push
out
and
lret
push
test
mov
push
lods
cld
test
rcrb
hlt
bsr
add
popa
xchg
mov
mov
xor
outsl
ret
in
jb
sub
pop
loope
scas
dec
call
imul
and
add
cld
sahf
adc
or
jbe
and
gs
jmp
push
dec
insb
aad
mov
jnp
jae
movsl
pop
inc
mov
sub
std
ret
pop
fcom
mov
mov
fdivrs
jno
and
push
jle
scas
aaa
xor
pop
scas
shrl
push
jb
cltd
pop
push
dec
aaa
cld
or
aaa
sub
xchg
mov
xchg
push
xchg
sbb
pop
pop
scas
cld
mov
aad
aad
les
add
mov
pop
stc
pop
fiaddl
test
cld
cmpsl
jnp
nop
imul
mov
and
mov
dec
sub
mov
lock
pushf
pop
ss
mov
mov
ret
scas
sbb
loopne
jg
call
sub
sbb
sbb
and
mov
ds
mov
cmp
les
sti
ljmp
cli
adc
addl
inc
sub
fdivrs
jecxz
int3
mov
jbe
stos
and
jmp
in
add
shrl
sbb
icebp
es
ret
sbb
es
rol
mov
push
fldl
jp
mov
sbb
cmp
inc
sbb
pop
adc
sub
sbb
call
cmp
cmp
in
nop
dec
dec
and
or
das
and
nop
je
test
sbb
rcrl
add
test
xchg
pop
rorb
hlt
mov
rorb
or
sahf
cwtl
xchg
clc
ret
outsl
and
scas
xor
sbb
shlb
hlt
lret
cmc
clc
push
jbe
out
mov
ss
and
ret
cmp
mov
cld
dec
sub
push
or
and
mov
cmp
sar
out
xchg
mov
add
test
movsl
repnz
mov
cld
jle
pop
test
shll
popa
mov
stos
pop
jl
fisubl
lret
pop
push
add
shlb
xor
arpl
aas
call
jmp
mov
push
cmp
add
sbb
mov
or
or
stos
cli
cmp
mov
ds
and
cld
xchg
pop
gs
cmpb
stos
popa
pusha
cld
xor
ss
push
sub
popa
push
mov
das
das
cld
or
pop
shll
lea
mov
push
addr16
xchg
or
jmp
mov
sbb
loop
mov
mov
mov
adcl
cltd
arpl
inc
add
jl
pop
loope
outsl
std
ret
mov
mov
sbb
out
push
dec
push
cmp
je
aaa
fsubp
jg
xchg
cwtl
push
and
into
sbb
leave
and
pop
jo
sub
addr16
aas
sub
mov
adc
mov
repnz
loop
xor
cld
rorb
jge
stos
lock
ljmp
pushf
pop
jno
nop
add
incl
or
pushf
fists
jno
pop
mov
mov
aas
ret
notb
sbb
sti
mov
pop
sti
and
jp
lret
int3
xchg
iret
pop
call
outsb
stc
push
xor
sbb
add
pop
es
orb
jbe
push
hlt
push
movsl
int
stc
aam
sbb
pop
pop
dec
lret
adc
xchg
and
test
cmp
out
sar
mov
sbb
mov
jb
inc
inc
push
loopne
aas
rclb
sbb
imul
jnp
add
inc
jecxz
fs
mov
dec
pushf
lods
ss
imul
mov
mov
and
cmp
das
les
inc
jge
lods
fcomps
call
ds
das
cld
and
and
push
push
cli
fcomps
cmc
arpl
scas
xor
clc
roll
jg
xchg
mov
je
and
jle
sub
ficoms
cwtl
ficoml
inc
das
jbe
je
mov
xor
in
mov
repz
rclb
push
sub
js
xor
int
sub
out
lcall
lret
pop
pop
sbb
movsb
dec
xchg
movsb
pop
cmp
inc
push
out
mov
inc
imul
xchg
xchg
add
jnp
aas
clc
lret
fbstp
dec
aas
out
test
mov
mov
adc
fcomip
fwait
mov
fcompl
and
xor
test
stc
aas
aas
js
mov
into
ss
out
sbb
fisttps
push
lds
add
push
lret
xchg
push
fldt
lea
fadds
repz
shr
mov
jne
mov
sarl
aas
sub
in
mov
mov
fwait
xor
or
jp
inc
loopne
loope
int
ljmp
xchg
push
lods
dec
mov
aad
adc
and
xor
sub
adc
stos
push
adc
aad
cmc
mov
cmpsl
das
cli
scas
jo
jp
inc
xor
cld
movsb
mov
sarb
mov
fstps
icebp
sub
divb
xor
cmpb
decl
jmp
fs
test
cmc
lods
scas
xchg
out
sahf
and
test
jno
mov
out
inc
mov
decl
push
call
and
xchg
mov
mov
lea
mov
and
imul
addr16
mov
out
clc
loopne
push
clc
int3
andb
and
movb
pop
mov
pop
aam
lods
test
mov
sahf
or
nop
push
xor
enter
mov
inc
mov
lcall
mov
lods
idivl
out
cld
pop
dec
lret
and
imul
bound
loope
push
hlt
mov
pop
and
cltd
fbstp
mov
pop
popa
pop
sub
lahf
ljmp
lret
fdiv
notb
and
xchg
sub
pop
jo
shl
and
incl
ljmp
lock
aas
sbbl
add
loop
and
mov
mov
adc
mov
fwait
lock
repnz
and
daa
sti
add
add
pop
fistpl
mov
add
and
xchg
out
sbb
test
pop
cld
mov
out
test
mulb
test
fstl
repz
or
out
xchg
mov
hlt
and
pop
arpl
sub
fnstsw
fwait
mov
cmp
inc
enter
cli
sbb
mov
push
jmp
leave
in
out
repz
daa
js
callw
or
loop
out
cld
and
aam
jbe
nop
out
cmc
push
das
and
mov
dec
push
aaa
and
clc
lea
pop
jle
mov
movsl
and
rorl
insb
iret
dec
cld
loopne
fadd
lock
test
mov
cld
xchg
inc
test
out
sarl
mov
push
cmp
pop
inc
ss
flds
and
imul
push
push
popl
jg
push
mov
scas
daa
orl
ss
div
js
mov
rorl
xor
iret
cwtl
aad
xorb
scas
mov
jp
dec
lret
jle
xor
mov
xchg
insb
rcr
clc
xchg
std
pop
pop
adc
dec
ror
stos
repz
out
dec
cmc
adc
rcrl
ja
daa
mov
outsl
stc
xlat
vpsubb
popf
mov
js
scas
push
jnp
jne
mov
ljmp
leave
adc
push
pop
push
or
incb
cld
cmpsl
pop
xlat
in
sub
or
test
stc
ds
hlt
lahf
cmpl
les
and
insb
inc
aaa
scas
call
jo
mov
fwait
mov
leave
cmp
sbb
loopne
movsb
adc
mov
std
adc
aaa
push
ds
xor
xor
loope
push
int3
in
cmp
mov
popa
and
hlt
cwtl
add
ljmp
push
add
sbb
mov
sbb
arpl
add
sete
insb
popa
nop
popa
jmp
cld
mov
fwait
int
xor
sub
inc
fwait
jecxz
cld
xchg
jge
fsubrs
lea
mov
xchg
mov
jg
fstl
stos
ret
insb
nop
mov
movsb
fcoms
push
cmp
es
xor
imul
les
pop
pusha
add
jne
ja
sub
fwait
pop
xor
mov
inc
loopne
inc
and
cmpsl
mov
testl
inc
fs
bound
sbb
out
xlat
dec
arpl
pop
mov
loope
imul
clc
inc
and
rcll
clc
lcall
inc
outsl
sub
or
sar
cld
ffreep
sbb
dec
inc
sub
popa
and
scas
jp
test
out
popf
loopne
out
push
jmp
jo
nop
ret
cli
pop
fmull
cwtl
jae,pt
sub
cmpl
cmpsl
test
mov
mov
xor
inc
nop
adc
out
push
cmp
sbbl
nop
loopne
fwait
decb
or
pop
test
mov
scas
pop
jle
fdivrs
cmp
xor
lock
testb
aad
loopne
sub
mov
repnz
insb
loop
pop
lock
jg
bound
shlb
fnstenv
pop
insl
imul
gs
loopne
sbbl
xchg
test
outsb
push
or
loopne
aaa
sub
test
pop
iret
nop
mov
loope
setae
inc
pop
lds
aaa
mov
push
jb
sarb
std
xlat
jecxz
loopne
mov
fs
ja
mov
add
icebp
mov
sub
popa
jge
adc
imul
out
sub
adc
aaa
xor
ror
ds
and
ret
outsb
icebp
mov
mov
adc
loop
out
fnstenv
pop
jno
mov
xchg
adc
fstl
and
dec
xchg
aaa
jg
ja
lock
cmc
stos
inc
sub
es
popf
cli
fistpll
roll
sbb
xor
sti
pusha
clc
mov
xchg
inc
int3
sub
scas
xchg
add
aad
into
imul
int
mov
sub
and
stos
or
sti
pop
mov
pop
dec
fisttps
xchg
subl
scas
push
push
mov
xlat
mov
mov
mov
push
and
decb
cmpl
aad
pop
inc
mov
pop
push
daa
pop
inc
add
pop
mov
pop
jmp
inc
inc
jmp
into
subb
or
push
sar
cmp
add
cwtl
ss
out
pop
push
iret
push
or
xchg
in
movsb
sbb
pop
je
ds
jge
jl
imul
fucomp
or
xchg
inc
inc
dec
and
mov
add
adc
mov
rclb
lods
cld
cmc
sti
pop
fst
cld
ss
gs
cmpsb
push
fcoms
mov
fimull
sub
inc
ds
lock
pop
adc
jnp
mov
inc
fildll
inc
sub
and
jns
cmp
sub
out
inc
test
clc
popa
dec
negl
repz
sub
sub
test
ds
test
push
outsl
shl
lret
aaa
jb
mov
or
fcomps
ja
test
mov
pop
cltd
xor
xchg
xchg
clc
cld
push
fsubrs
mov
mov
cmp
or
cmp
dec
pop
enter
add
mov
add
add
add
and
inc
adc
nop
push
add
add
inc
add
pushl
push
mov
mov
add
inc
gs
imul
mov
push
jns
je
insl
es
gs
jae
imul
xor
outsb
push
fs
js
gs
imul
mov
jb
dec
gs
jo
insb
insb
outsl
arpl
gs
mov
imulb
jb
gs
dec
fs
insb
outsl
jae
dec
inc
jge
stc
lods
jmp
popa
inc
sub
dec
jo
in
in
cwtl
ss
outsb
popa
int3
pop
rcrb
xor
outsb
mov
mov
outsb
jbe
inc
outsb
insl
mov
je
data16
in
imul
pop
inc
inc
push
imul
shl
xor
mov
mov
imul
imul
fneni(8087
sbb
movsl
push
popa
test
in
sbb
dec
bound
arpl
outsl
test
insb
xchg
xlat
inc
lahf
je
adc
xchg
sahf
dec
outsb
data16
fisubrl
push
cwtl
bound
gs
insb
loope
inc
imul
outsb
mov
pusha
pop
sbbb
inc
gs
push
or
jns
lea
mov
push
ja
data16
add
ret
scas
xor
mov
push
je
call
jnp
clc
jle
and
adc
pop
cmp
add
jns
mov
sbb
mov
popa
insb
mov
int
adc
sbb
mov
imul
shrl
arpl
inc
push
inc
and
js
or
addr16
mov
nop
sbb
lock
je
push
movsl
and
dec
add
shrb
xor
loopne
lsl
mov
out
and
clc
daa
pop
and
pusha
push
add
pop
xor
add
adc
sbb
cmp
dec
mov
psrlq
rcrb
pushaw
mov
mov
orl
push
loopne
js
mov
cwtl
push
insb
cwtl
fisubl
or
pushf
js
scas
orl
add
and
adc
ret
xchg
adc
sbb
push
pop
dec
sbb
jb,pn
inc
popa
int
pushf
fmull
push
inc
jae
repz
fdivl
push
xlat
orb
jbe
jle
inc
push
push
pop
testl
dec
and
sub
fisubs
aas
cmp
rolb
adc
rorl
push
fwait
scas
dec
enter
outsb
jo
xor
jns
add
mov
mov
aaa
sub
das
int
or
sub
and
add
add
add
add
add
inc
add
inc
xchg
push
pop
add
xchg
mov
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
sub
adc
