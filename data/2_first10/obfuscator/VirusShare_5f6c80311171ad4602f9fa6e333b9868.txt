js
cltd
jno
lret
adc
clc
xchg
xchg
inc
fcmovnbe
sub
inc
mov
push
loopne
and
fwait
repnz
repz
mov
mov
aam
subl
mov
scas
cmp
sbb
test
fadds
sarb
mov
lret
or
xorl
xor
xchg
mov
icebp
mov
loopne
and
pop
ds
mov
daa
cli
pushf
ja
lods
std
mov
mov
mov
fiadds
popf
adc
xor
les
fiaddl
dec
jmp
dec
pop
jg
cli
pop
cmp
mov
repnz
jge
or
xor
mov
and
or
aaa
add
adc
mov
mov
pop
push
divl
push
sub
or
ljmp
cmp
in
rorb
gs
loopne
nop
repnz
cmp
push
inc
std
ret
mov
test
push
fwait
pop
sbbb
sub
ror
xor
cltd
add
jg
faddl
lret
jg
cld
bound
je
stos
push
add
enter
xchg
or
arpl
push
lods
lds
decb
in
stc
add
clc
psadbw
lods
pusha
push
movl
jmp
lea
jae
rol
mov
seta
test
jmp
mov
lea
jns
push
pushf
mov
not
pusha
jmp
pusha
lea
jne
pushf
setle
shrd
mov
rcl
rol
sbb
inc
sub
bsf
lea
cmc
pusha
sub
movb
push
movb
pushl
popl
jmp
inc
shl
call
jne
cwtl
lahf
cwtl
mov
pusha
lea
jmp
stc
neg
pushf
jmp
push
movl
mov
pushf
movw
lea
jmp
inc
test
jmp
jmp
jmp
inc
sbb
les
outsb
mov
push
lea
push
sbbb
pop
adc
adc
push
fs
add
loope
out
push
push
les
negl
mov
adc
cwtl
outsl
pop
pusha
push
mov
out
mov
mov
ds
repz
pop
shlb
sbb
cmpl
mov
and
cmpsl
mov
outsb
jg
push
xchg
outsl
fwait
fs
xchg
fs
sbb
dec
mov
or
mov
cmpsb
fadd
jg
stc
add
flds
aad
xlat
sub
adc
leave
movsb
push
adc
int3
pop
xor
xchg
cltd
inc
pushf
lock
aas
mov
xchg
clc
mov
insl
xchg
push
mov
sbbl
pop
or
push
scas
dec
imul
insl
cwtl
bound
cwtl
aam
mov
lea
jb
jmp
jmp
and
jg
ja
arpl
push
adcb
mov
ret
mov
sub
ret
loope
add
jae
jg
andl
hlt
int3
adc
lods
in
ret
cmp
js
cmp
aam
push
cmp
fs
loopne
push
add
add
test
lcall
arpl
sahf
inc
xchg
jnp
imul
cltd
insl
fwait
push
data16
xchg
test
rcrb
and
pushf
sub
clc
cmp
bt
jmp
lea
jle
pushf
rep
bswap
movw
mov
movsbw
mov
mov
movb
pushf
lea
jmp
cmp
pop
jg
mov
inc
nop
dec
xchg
insb
xchg
mov
ret
mov
sub
pop
inc
xchg
inc
jbe
inc
sahf
inc
lahf
js
out
lods
mov
sbb
adc
subl
push
mov
insb
jg
movsb
push
cmp
inc
mov
sbbl
nop
imul
dec
and
or
pushf
and
pushf
popa
push
icebp
or
pop
into
das
outsl
mov
xchg
sub
lcall
sub
roll
ljmp
cmpsb
ja
jmp
pop
adcb
mov
loope
pusha
push
scas
ret
add
sub
in
sub
sti
add
in
sbb
dec
fldcw
mov
pop
cltd
inc
mov
icebp
fs
fwait
icebp
or
pop
loop
mov
mov
xor
daa
sbb
xchg
adc
lahf
iret
repz
xchg
push
out
and
loope
dec
fisubrs
faddp
or
mov
mov
add
lea
out
mov
in
cmpsl
jbe
loopne
mov
push
add
mov
test
pusha
vcvtpd2dqx
mov
push
mov
ret
inc
testl
inc
movzbw
jmp
pushf
jmp
push
push
lea
je
setns
rcr
add
shrd
and
sub
xadd
sub
shl
push
rcr
shr
bsf
xor
and
setnp
mov
stc
movzbw
shl
add
pushf
jmp
mov
cmp
cmp
clc
repnz
lea
jae
pushf
lea
jne
not
movb
setg
lahf
jmp
and
cld
jg
test
inc
cwtl
iret
shll
xorl
not
lcall
add
add
cmp
add
push
icebp
loop
xor
in
cmp
adcl
in
sub
mov
stc
dec
dec
out
fcmovb
clc
push
clc
loope
lods
pusha
jbe
out
aaa
movsb
fs
jge
inc
mov
lock
out
jne
inc
and
add
outsl
cld
mov
inc
dec
cwtl
inc
mov
mov
mov
inc
mov
mov
mov
mov
bound
sahf
jg
cmp
sub
daa
pop
lds
mulb
cld
pop
clc
push
repz
mov
sbb
cli
std
cmp
mov
jmp
inc
mov
mov
dec
ficompl
xor
mov
aas
es
xchg
jp
lahf
push
std
cmp
or
loope
enter
push
jmp
loope
out
xor
mov
movsb
inc
call
and
clc
enter
dec
test
inc
mov
int3
add
lret
mov
mov
popl
dec
xchg
dec
mov
pushf
push
cltd
inc
xchg
arpl
push
insl
mov
and
gs
xchg
inc
mov
xchg
xchg
out
lret
repnz
jge
mov
lds
push
push
sub
enter
in
call
dec
xchg
rcr
out
lret
jl
stos
rorl
mov
icebp
pop
les
les
ret
push
lret
xorl
xchg
inc
cmpsb
pop
mov
pop
scas
lods
push
movsb
arpl
push
inc
push
cmp
cs
insb
add
add
add
sar
test
jmp
jmp
in
lods
enter
ss
call
hlt
mov
pop
ret
push
adc
xor
and
sbb
sub
sub
sbb
aas
mov
stos
sbb
rorb
pop
jmp
in
mov
dec
inc
imull
pop
dec
in
cmp
and
cmove
mov
cmpsb
shrb
push
adc
mulb
scas
dec
lods
dec
dec
in
cmp
lcall
pop
adc
push
mov
adc
cs
fdivl
sub
xor
sub
and
cmp
jb
and
loope
push
pusha
stos
pushf
mov
lea
jmp
dec
pusha
call
bswap
jmp
rep
pusha
mov
pusha
pop
mov
pushf
pushf
pushf
mov
lea
jmp
pusha
jmp
xor
mov
clc
push
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
out
cmpb
fnstcw
push
lahf
inc
adc
sbb
mov
xchg
inc
mov
mov
push
fcomps
into
pop
into
cs
das
icebp
imul
inc
cmpsb
cmp
cmp
cmp
ds
sub
outsb
mov
push
dec
jb
scas
jb
int
and
mov
nop
jne
jg
lea
ret
mov
lods
addr16
inc
or
lret
jg
insb
mov
push
mov
mov
xlat
or
xor
subl
and
repnz
sbb
sbb
in
in
push
mov
mov
sahf
imul
iret
rorb
sarb
xchg
mov
mov
mov
inc
mov
in
mov
stc
xchg
jg
and
sbb
pop
into
pop
out
xor
add
rorb
jbe
neg
cmp
mov
mov
arpl
pop
pop
push
and
xor
cli
and
push
int
std
test
lcall
ret
ljmp
sti
xor
sbb
pop
inc
out
leave
ds
int3
std
inc
dec
cmc
push
mov
cli
scas
ret
cmp
arpl
out
cmovg
xlat
add
rorl
fsubrs
jg
test
stos
mov
jno
cmp
fldenv
frstor
and
sub
sub
fwait
loopne
pop
add
mov
nop
orl
addl
dec
cwtl
movl
pop
mov
lea
sets
lea
pushf
movl
pusha
call
call
movsb
jle
dec
lret
icebp
dec
daa
cmp
sub
sahf
mov
filds
or
loop
xor
add
pop
incl
add
imul
jae
imul
jmp
out
mov
and
and
pusha
scas
jge
mov
xor
aam
dec
add
ret
pop
ret
and
sub
and
sti
vcomisd
mov
pushf
xchg
push
ja
test
dec
lods
movl
sti
dec
inc
jmp
xchg
jo
ds
hlt
pop
loope
outsb
test
inc
fxtract
subb
bound
dec
inc
dec
xchg
data16
pop
mov
decb
arpl
roll
mov
adc
lcall
mov
scas
pop
mov
cmpsb
shlb
fwait
gs
test
push
add
add
add
mov
add
add
add
add
jo
push
add
mov
add
push
add
bound
add
push
add
add
add
fmuls
shl
pushf
mov
lea
je
jmp
mov
add
shl
bsr
ror
push
rol
sbb
or
push
sar
jl
push
not
bt
push
pushf
rcl
mov
movsbl
jbe
mov
pusha
btc
jmp
and
xchg
cltd
inc
sbb
or
out
and
out
lods
mov
jae
fldenv
out
cmp
xor
and
cmp
cvtps2pi
in
sbb
adc
adc
adc
call
or
mov
pop
sbbb
imul
in
lods
mov
xchg
mov
push
mov
push
es
pop
mov
sub
in
js
xor
lods
lods
mov
sbb
outsb
push
lock
divb
push
inc
cmp
jecxz
or
aas
cmp
sahf
push
dec
xchg
or
stos
je
clc
dec
xchg
pop
mov
in
les
mov
pusha
xor
jno
lret
out
sbb
push
loope
out
pop
jecxz
loope
push
daa
fadd
xchg
mov
jmp
loopne
mov
movsbl
pushf
mov
mov
jmp
cwtl
mov
jmp
mov
jmp
push
lea
jb
call
str
pushf
movl
push
pusha
movl
pushf
mov
lea
jmp
pushf
inc
clc
stc
ror
jmp
cmp
add
push
clc
movzwl
bsr
rcr
mov
bt
cmc
stc
cmp
add
call
rcl
not
bt
ror
not
inc
not
pushf
jmp
pushf
lea
call
pusha
jmp
pushl
pusha
lea
je
push
or
pusha
mov
lea
je
aad
sub
add
sar
test
bswap
mov
call
jmp
add
dec
outsl
arpl
inc
jb
gs
sahf
add
add
pop
fiaddl
add
mov
add
and
jg
sbbb
xchg
push
mov
pop
pop
lea
outsb
mov
sbb
dec
pop
scas
test
fistpl
jl
pop
call
std
sub
dec
movsb
push
pop
adc
ds
arpl
xchg
jb
call
jns
aas
fists
testl
hlt
lock
jbe
cltd
pushf
jmp
xor
iret
jg
push
cmc
daa
icebp
sub
and
das
repz
sub
xchg
mov
mov
mov
lods
push
cmp
pcmpgtd
icebp
dec
aad
js
cmp
inc
or
jl
or
out
xchg
xor
test
notl
sbb
repnz
cld
xchg
popf
enter
add
mov
dec
or
jns
mov
mov
clc
movsb
inc
scas
dec
push
mov
mov
cmp
mov
test
clc
xor
test
test
repnz
push
jmp
inc
mov
adc
pushf
pusha
mov
mov
pushl
ret
call
call
pop
sbb
sarl
dec
test
gs
lods
imul
jle
sub
jmp
xchg
rolb
scas
cmp
sbb
stos
push
das
mov
dec
idivb
sbb
cmpsb
leave
sbb
je
shrl
or
sub
pop
push
test
adc
iret
data16
fcomp
add
fs
inc
ret
cmp
xor
cmp
xor
stos
or
cwtl
add
mov
test
add
cmp
movw
pushl
mov
cmp
test
test
push
call
lea
pushl
pop
mov
push
push
mov
pusha
lea
call
pusha
call
mov
mov
pusha
movsbw
movl
bswap
pushl
lea
lahf
lea
mov
movl
pushf
pushf
pushl
popl
pushl
push
movb
pushl
ret
repz
jmp
lea
jb
pusha
push
lea
jmp
pushf
frstor
jg
push
mov
test
jne
in
hlt
pop
inc
and
pop
hlt
sub
mov
inc
jbe
lcall
mov
mov
mov
inc
inc
inc
inc
add
mov
mov
fisubrs
shll
ficompl
int3
or
rolb
pop
mov
mov
lock
mov
and
test
mov
cmpsl
inc
xchg
jnp
add
inc
mov
mov
lea
ss
push
mov
pop
or
rcrl
jl
mov
insb
mov
xor
or
jb
adc
jecxz
orb
fbstp
mov
mov
lods
lods
sti
cmc
in
cmp
sbb
xchg
dec
push
out
adc
adc
scas
push
movsb
stos
lods
push
scas
push
scas
push
mov
insl
or
jecxz
sub
test
add
xor
add
test
jp
add
movsb
enter
das
mov
rol
jmp
pusha
call
pushf
jmp
jmp
lea
jne
and
cmc
test
movsbw
mov
shrd
bts
bsf
sub
bts
btr
mov
cmc
push
pushf
sub
cmc
pushl
popl
test
push
mov
cmp
movb
lea
ja
test
stc
sub
or
lea
setae
sar
add
shld
pusha
bsf
mov
neg
adc
jmp
lods
jmp
pusha
pushf
push
pushl
popl
pushf
pushl
ret
and
stc
push
add
sub
cmc
test
push
stc
add
pushf
push
push
jmp
mov
jmp
stc
sub
pusha
pushf
movl
lea
call
jmp
pushf
push
jmp
pusha
mov
jmp
lea
jae
push
lea
jmp
pushf
lea
jne
jmp
ror
ror
pushf
neg
rcl
jmp
mov
call
movb
pusha
movl
pushf
pushf
pushl
call
mov
rol
movb
call
mov
lea
jae
jmp
call
lea
je
cmc
cmp
push
or
push
jmp
movl
jmp
pop
sbb
aad
xchg
push
mov
pusha
mov
cwtl
shlb
jne
xchg
push
insl
and
jmp
jmp
stc
mov
shlb
dec
mov
adcb
xor
iret
ret
cmp
lds
int3
cmp
push
sub
adc
pop
xlat
sub
ljmp
stc
cmp
movzwl
bswap
mov
pushf
add
pushl
test
jmp
mov
cmp
movzbw
movzbw
lea
jmp
pusha
sub
pushf
cmc
lea
jns
rol
pushf
push
pushl
dec
bt
pushf
ror
pushf
not
movw
stc
pushf
pushf
xor
cmp
bt
push
cmp
mov
test
cmc
add
stc
call
shrd
cmc
movzbw
mov
pushf
mov
shl
adc
add
add
rol
pusha
shl
lea
shr
dec
bsr
mov
pushl
cmp
cmp
xor
add
movsbw
pop
not
mov
lea
pushf
call
push
movl
call
sahf
fldt
jg
das
into
adc
pop
int
repz
mov
mov
push
mov
cmp
rolb
repz
adc
push
stc
and
lock
add
add
pop
push
ret
adc
lahf
es
inc
mov
jo
xchg
popa
xchg
ret
int
jg
test
int3
in
and
xchg
pop
jg
jns
mov
xchg
xchg
lahf
popa
cwtl
arpl
fsubs
pop
cmpb
call
mov
jmp
jmp
cmp
xlat
jg
lahf
jp
jp
jb
jg
inc
movsl
dec
lods
jb
and
cwtl
jns
pop
stos
xor
and
xchg
outsl
adc
movb
xor
mov
ja
jle
xor
jne
or
dec
stc
imul
jno
call
adcl
iret
adc
movsl
loopne
test
jg
das
sarl
jbe
mov
mov
mov
inc
inc
inc
mov
mov
test
jns
jmp
rorb
rorb
xor
ds
or
jecxz,pt
fisttps
xchg
ror
push
and
inc
test
and
inc
mov
push
dec
cwtl
repnz
loop
add
mov
mov
jne
je
jge
mov
loop
lock
lea
jb
pushf
push
lea
jmp
movzwl
jmp
bt
pusha
add
pusha
movzwl
or
mov
pushf
clc
clc
add
clc
mov
test
jmp
addr16
pop
xchg
inc
mov
inc
fwait
dec
pushf
dec
fwait
ja
insb
mov
sbb
lret
push
jae
imul
pop
dec
and
push
leave
mov
roll
test
int
fsubs
scas
xchg
jmp
xchg
mov
jae
mov
shrb
jge
cmp
or
mov
mov
lock
ficoms
adc
or
outsb
push
lock
xchg
push
mov
fisttpll
push
adc
add
dec
lahf
add
ficompl
sub
loopne
addl
lods
sarb
sub
pop
pop
nop
lahf
fwait
mov
pop
scas
dec
xor
popa
and
fs
scas
adc
push
test
lea
cmc
push
mov
ss
fnstcw
jb
das
aad
data16
shrl
mov
mov
mov
mov
leave
in
cmp
adc
negl
daa
mov
xchg
pop
sbb
add
jl
push
adc
inc
cld
inc
cltd
push
cmp
bound
sbb
cmpsb
stos
sbb
cmpsl
or
in
adc
push
insb
mov
test
mov
inc
mov
cmp
xchg
mov
and
orl
or
cmp
add
add
inc
xor
and
lret
enter
push
xchg
push
movsb
push
movsb
push
scas
pop
cmpsb
push
lods
mov
jno
mov
and
je
clc
sub
push
jmp
pusha
movl
jmp
or
fnstcw
lahf
push
adcb
pop
mov
mov
pop
push
sbb
push
xchg
in
jmp
aad
pop
roll
adc
int3
xchg
fstps
lahf
jmp
pop
imull
lcall
and
int
lds
push
mov
cmp
xor
lret
xor
and
pusha
pop
cltd
rcrl
mov
cs
jle
cmpb
or
jnp
jo
test
xchg
jns
add
leave
pop
movsl
popa
cwtl
mov
add
add
push
inc
mov
add
push
or
jge
cltd
xchg
jbe
aam
das
aaa
ret
xchg
jb
inc
sbb
and
repz
xor
sbb
stc
sahf
inc
daa
js
ljmp
push
jp
fidivrs
cmp
cmp
aaa
dec
scas
or
sub
int
xchg
andl
mov
cmpb
loop
sti
js
xor
lods
and
adc
notl
and
std
sub
mov
push
cli
jb
iret
inc
movsb
aad
inc
jg
or
or
adc
xor
negl
iret
xchg
les
mov
xor
inc
or
and
fstpt
subb
into
mov
cmpsb
pop
inc
mov
dec
ret
sub
pop
ud2
mov
ss
pop
test
and
push
xorb
and
iret
mov
pop
imul
daa
xor
fwait
stos
imul
sub
sbb
jp
push
mov
xchg
in
lcall
push
mov
aad
dec
mov
mov
fidivrs
cltd
pop
lret
ja
shlb
aaa
dec
sub
push
sbb
icebp
xchg
xor
cli
sahf
push
mov
mov
stc
adc
repz
add
fnstsw
nop
mov
arpl
cmp
fstl
mov
dec
sub
mov
addr16
in
adc
stc
inc
push
popf
mov
mov
loopne
fucomip
lea
push
cmpsb
daa
xchg
sub
mov
jae
push
sbb
iret
insb
push
scas
rcrb
push
push
pop
mov
jae
xor
xchg
sbb
dec
insl
std
je
ret
adc
mov
xor
repnz
sbb
push
or
arpl
dec
sahf
mov
negb
pop
mov
pop
aaa
xor
jno
fmull
arpl
push
repnz
push
push
fidivs
and
hlt
cmc
les
orb
push
xchg
scas
and
pop
xor
inc
out
dec
adc
cmc
mov
es
ret
add
adc
movl
cmp
mov
mov
xor
mov
adc
sahf
ficompl
mov
fs
adc
adc
add
xchg
jno
mov
repnz
mov
icebp
xor
pop
lock
mov
xchg
mov
sub
notl
mov
arpl
and
cmp
push
cs
sub
cli
jmp
mov
push
jecxz
testl
pop
push
and
lahf
clc
in
jg
gs
daa
aaa
pop
xchg
push
cmc
xlat
push
cltd
jmp
mov
es
jecxz
testl
cs
nop
add
and
mov
test
ss
adc
cli
ja
iret
rcl
aad
cmpsl
es
sub
iret
xor
ja
cmp
stc
xlat
inc
add
leave
ficompl
test
push
cld
test
cmp
and
and
push
adc
and
aas
incl
jmp
add
std
sbbl
and
xor
ljmp
insl
aam
xor
adc
push
mov
dec
daa
mov
sub
jno
lret
mov
push
or
inc
pop
aaa
or
ja
push
xor
mov
aaa
sub
pop
xor
xor
pop
mov
btr
jo
add
sub
push
sub
mov
lea
or
rorl
fisubrs
mov
inc
movl
punpckhwd
in
jno
in
cmp
xchg
xor
sub
sub
add
mov
iret
push
pop
and
cli
push
movsb
and
sahf
mov
ret
mov
iret
sub
adc
pop
xchg
test
lods
in
cmpsb
sub
xor
ss
xor
dec
mov
loop
enter
std
test
rorl
or
mov
pusha
push
cmpsl
adc
and
adc
and
mov
scas
repz
cmc
xor
xor
xchg
mov
std
imul
inc
js
fnstenv
icebp
data16
xchg
sbb
add
and
jle
imul
idivl
push
mov
xchg
ljmp
push
sahf
call
lahf
push
push
sub
push
dec
jl
push
sub
cmpsl
adc
idivl
cmc
pop
cmp
sub
cmp
add
push
push
jg
pop
mov
in
test
mov
ficompl
out
push
or
mov
xor
mov
add
xchg
push
mov
aaa
jno
jp
call
mov
jbe
test
sahf
lret
shrl
xchg
inc
mov
mov
js
push
cmp
imul
mov
repz
and
pop
mov
rcll
push
xor
mov
add
aaa
cld
and
rcll
pop
inc
mov
stos
notb
add
jge
cmpb
dec
dec
jp
ret
out
jmp
int3
jg
cmpsl
xchg
aaa
push
lret
pop
pop
negb
mov
fsubrs
xor
rcrl
push
jle
ss
sbb
jecxz
mov
std
lea
cmp
jno
data16
fisubrs
inc
es
out
lds
in
add
scas
jg
and
insl
cs
xchg
inc
add
pop
sbb
sbb
out
mov
jbe
mov
inc
and
xor
adc
mov
loope
neg
aaa
mov
xor
cmc
sti
aaa
add
xor
inc
push
mov
push
fcmovbe
scas
xor
lahf
add
test
cmc
dec
lcall
outsb
je
pop
add
adc
xchg
pop
int
ja
std
sub
mull
mov
inc
sub
xchg
std
jge
push
addl
stc
lcall
loope
sbb
jmp
sbb
cmc
mov
cltd
dec
test
jge
jb
mov
arpl
repnz
inc
and
mov
incb
jo
bsr
scas
sub
jns
push
xchg
shlb
and
lds
and
or
stos
sahf
jge
pop
cld
and
push
pop
jne
rcl
divl
inc
jns
js
test
icebp
xor
xor
dec
push
or
push
xchg
xorl
mov
addr16
xor
fs
jbe
jbe
mov
push
popf
dec
iret
rcll
mov
in
insl
lods
daa
push
in
and
xlat
outsb
iret
mov
jb
bound
loopne
inc
mov
in
jl
xchg
icebp
jge
in
cld
aad
adc
mov
xchg
out
arpl
mov
sub
fdivs
sbb
and
das
xchg
or
inc
jge
mov
out
push
int
mov
addl
movsl
adc
lahf
call
aam
pop
fcmovnb
sbb
and
pop
dec
cmc
add
adc
sbb
es
inc
jne
std
popa
fnstcw
dec
add
pop
leave
jne
arpl
or
adc
out
adc
xor
sub
movsb
daa
mov
ja
and
aad
sub
repz
aaa
movsb
dec
lcall
daa
jecxz
jmp
divb
inc
es
scas
inc
paddb
push
xor
xor
push
dec
das
xchg
dec
adc
mov
inc
mov
imul
xor
jbe
aaa
decb
sbb
jnp
fildll
test
subb
jl
cmp
lea
mov
inc
push
and
cli
mov
das
push
pop
and
into
and
mov
mov
cs
and
cmc
mov
stc
sbb
ljmp
daa
inc
mov
mulb
out
mov
das
sub
scas
enter
nop
sub
sub
leave
das
sub
adc
mov
shr
scas
xchg
sbb
and
mov
xor
adc
add
sub
inc
test
rcll
mov
push
push
lds
jecxz
cmp
inc
pop
mov
pop
inc
cmp
mov
cmp
stos
repz
inc
cmpsb
cli
dec
idivl
xchg
dec
clc
rorb
xchg
push
sbb
push
inc
xlat
cld
sbb
mov
push
aam
lahf
push
cld
add
je
aad
sub
add
mov
and
jb
adc
mov
mov
push
xchg
lcall
adc
scas
jg
add
add
add
mov
push
inc
ret
or
mov
and
clc
mov
push
sbb
jmp
mov
adc
xor
mov
adc
xchg
push
xor
andl
std
and
inc
shlb
dec
out
std
aam
mov
out
push
adc
movsb
push
push
jnp
iret
xchg
adc
lcall
sub
adc
outsb
and
sub
clc
and
xorb
out
inc
fistpl
adc
cmc
mov
mov
std
mov
lahf
gs
sub
push
and
push
cmc
lds
mov
mov
jae
pop
popf
cmpl
fbstp
inc
jp
mov
push
or
aaa
scas
cmp
mov
mov
mov
push
aaa
cld
jl
inc
mov
das
mov
pop
mov
pushl
sub
mov
adc
jbe
xchg
mov
arpl
ss
mov
sbb
lret
daa
adc
std
sub
nop
ds
clc
sar
std
push
lahf
ja
cmc
std
clc
sub
jne
adc
sub
sub
std
jns
xchg
mov
js
xor
ss
sbb
mov
pop
sub
and
or
xor
in
push
testb
push
fwait
xlat
loop
xchg
xchg
dec
xor
adc
std
sub
add
jecxz
jg
aam
ljmp
sbb
insb
adc
cwtl
mov
mov
enter
xor
lret
in
mov
jl
xchg
mov
dec
jo
arpl
mov
mov
sub
fwait
xchg
xlat
mov
mov
mov
jmp
mov
xchg
xchg
jne
and
mov
sti
stos
addl
fs
dec
adc
add
daa
sub
js
sub
xor
and
and
sub
nop
pop
sub
and
loop
push
mov
fsubl
in
inc
mov
or
mov
cmpsb
js
jne
mov
add
mov
push
xchg
or
pushf
xor
dec
dec
mov
shll
mov
adc
aaa
jp
push
std
ds
popa
pop
push
hlt
push
mov
or
mov
xchg
sti
push
xchg
mov
jp
adc
dec
adc
sbb
std
das
lret
out
sarl
sub
repz
in
and
shlb
jns
repnz
adc
imulb
fcmovnbe
push
scas
push
test
ret
mov
lods
iret
adc
addr16
std
movsb
sub
sub
test
je
aaa
cs
mov
xor
stos
sub
lea
cmp
cmpsb
std
push
jae
or
xchg
in
xor
lds
cmp
ljmp
cmc
xlat
mov
stos
movntq
push
hlt
xchg
jmp
outsl
ds
sbb
add
es
add
xlat
mov
fistps
mov
xor
xor
inc
ret
mov
push
popa
sub
adc
add
ds
pop
ja
inc
adc
inc
mov
pop
out
xor
xlat
aaa
flds
das
or
out
scas
mov
outsb
add
cmp
inc
mov
lret
std
aad
popa
sub
inc
imul
xchg
fidivs
and
out
insb
ss
add
stc
adc
mov
mov
mull
jl
sbb
push
cltd
lret
push
fsubs
jecxz
xchg
stos
sub
mov
mov
dec
adc
stos
cld
push
jmp
mov
ja
push
notl
outsb
aaa
decb
arpl
cs
pop
add
les
je
jae
bound
pop
aaa
add
ret
movsb
xor
mov
out
int
out
xlat
icebp
xor
outsb
push
in
mov
in
daa
movsb
das
faddl
outsl
push
sbb
xchg
iret
test
push
and
out
insb
gs
das
leave
push
data16
xor
addr16
sahf
xchg
insb
in
pusha
mov
in
push
xchg
fs
scas
out
stc
inc
mov
out
pop
xor
aad
das
xor
mov
and
mov
testl
push
das
stc
bound
add
ret
es
sub
mov
stos
xlat
mov
sti
ljmp
mov
popa
cmpsb
mov
aam
pop
mov
call
mov
sbb
imul
idivb
mov
inc
leave
std
jmp
push
pop
repz
movl
loopne
mov
rorl
cmp
ret
mov
adc
loop
xor
mov
and
ret
ja
add
mov
push
xlat
dec
jns
aaa
dec
ss
mov
cmc
std
inc
int
pop
pop
xchg
adc
and
xor
sub
add
imul
lods
inc
cmp
mov
scas
test
xor
lds
sub
sbb
pop
int
add
sub
cmp
in
mov
xor
jp
jge
out
popa
add
sub
and
mov
mov
xchg
mov
loop
jmp
sub
cmpsl
or
push
push
sub
or
mov
cmpl
outsb
xor
call
sahf
add
test
mov
dec
stc
std
sbb
loope
pop
sub
pop
xor
ret
lods
adc
push
mov
xchg
addl
data16
jmp
or
add
dec
inc
mov
push
jmp
movsl
in
cmc
sub
mov
sub
add
lods
imul
jmp
cmp
pop
xchg
pop
cmp
xlat
mov
push
lcall
cmpsb
pushf
in
mov
cmpsb
xchg
das
sub
popa
orb
in
je
into
add
rorl
das
into
dec
shrl
xchg
imul
push
mov
addb
inc
loope
idivb
pop
mov
into
and
mov
push
and
or
pushl
xor
das
xor
ss
jb
xor
sbb
sub
testl
and
xchg
push
std
inc
sbb
or
aaa
fsub
sub
xor
cmp
mov
mov
sarl
jp
sar
out
fnstsw
add
dec
pop
out
and
out
std
xlat
mov
cmp
sub
cwtl
or
xchg
jp
aaa
shlb
in
or
jmp
test
stc
xlat
lds
lods
pop
or
cs
stos
adc
test
xchg
out
lea
lods
mov
xor
cpuid
rclb
cs
dec
push
stc
pop
push
sub
xchg
bound
insb
je
sahf
stos
push
mov
push
js
fistpl
outsb
loope
test
loop
inc
mov
out
fdivs
mov
sub
pop
push
inc
aam
aaa
enter
xchg
ret
dec
das
pop
std
or
out
stc
sbb
das
lds
out
jle
or
and
inc
add
scas
mov
out
cmc
xchg
filds
cld
xor
sbb
icebp
or
test
dec
mov
scas
ss
mov
cmc
dec
mov
les
sub
in
shlb
mov
and
leave
cmpsb
sub
jle
xlat
inc
jae
ja
mov
push
daa
std
daa
movsb
and
mov
jnp
adcl
scas
jnp
shlb
fwait
jg
std
mov
mov
js
jno
out
push
aad
loopne
in
adc
dec
mov
and
add
mov
inc
xlat
test
ret
repz
lcall
std
dec
out
ret
adc
xchg
mov
jbe
mov
add
sbb
xchg
scas
xchg
pop
test
ret
xor
mov
add
es
push
fdivs
mov
push
in
sub
stos
xchg
ficompl
cmp
jae
pop
dec
pop
in
loop
into
jae
and
and
jns
cli
inc
out
add
pop
and
adc
jae
into
cmpsb
daa
jae
mov
and
cs
inc
push
jp
add
mov
aaa
aam
test
scas
and
mov
mov
gs
mov
std
out
mov
out
out
xchg
jl,pn
nop
xor
xchg
mov
imul
insb
jp
and
repz
mov
cs
xlat
sub
inc
sar
push
cmc
pop
pop
adc
push
scas
leave
mov
mov
mov
in
movsb
xchg
inc
cli
rorb
movsl
add
or
fisubrl
std
pop
ret
mov
mov
mov
cmp
sbb
fidivrs
jg
stos
mov
mov
xor
mov
subl
or
sarl
mov
addr16
mov
inc
es
and
push
adc
cmpsl
mov
arpl
mov
cs
xchg
aaa
rol
xchg
push
in
outsb
ja
orl
push
lahf
sub
cmp
pop
pop
mov
loope
pop
mov
cmp
imul
daa
mov
xchg
or
cmpsb
mov
sarb
popa
jge
xchg
enter
call
shr
lds
and
mov
add
aas
stc
jbe
aam
mov
jns
js
xlat
cmp
xchg
arpl
aam
xor
fistps
call
icebp
jp
roll
aad
rorl
mov
xor
rdtsc
sbbb
sbb
lds
jnp
xor
loop
lea
push
imul
outsl
jb
inc
sbb
loope
leave
cmc
mov
cmc
fistl
cmpb
std
loop
push
cltd
scas
xchg
notb
fisubrs
cmp
lods
jo
mov
xor
sbb
std
das
xor
sub
arpl
sub
and
jecxz
in
push
stos
stos
rcll
lcall
int3
xlat
negl
pop
push
cmpsl
js
or
and
pop
outsb
dec
jg
pop
sub
repnz
xor
scas
and
cmovo
mov
cmc
iret
stos
shrl
es
pop
jb
sti
push
cli
fidivrs
in
jne
push
enter
sbb
xlat
xchg
inc
in
rclb
cmp
fincstp
mov
ja
xchg
mov
dec
xor
imul
jb
xchg
rcll
or
mov
and
xchg
and
mov
imul
in
fnstenv
sbb
mov
stc
les
lcall
mov
xlat
xor
fmuls
setge
enter
cmpl
xorb
jl
ja
pop
gs
sub
jle
xor
testb
adc
and
push
mov
iret
loope
push
adc
xor
sbb
out
lds
add
jae
adc
and
adc
xor
fsub
or
fs
out
jno
cmp
jno
xchg
xor
push
sub
jne
cmp
push
mov
cmpsb
or
push
mov
cwtl
cmpsb
lret
sbb
ret
addr16
mov
sub
in
xor
aaa
adc
aam
ret
jnp
fs
mov
jnp
jmp
push
mov
dec
lret
dec
dec
mov
pop
mov
loop
xchg
jbe
cmp
add
sub
pop
in
push
jmp
pop
jb
push
sub
loopne
add
adc
jo
aad
dec
sub
mov
sub
stc
in
ret
loop
cmp
dec
pop
dec
stc
je
out
sbb
mov
mov
icebp
cmp
or
insl
or
push
pusha
loop
incl
aam
cltd
stc
repz
adc
popl
cmp
xlat
adc
aam
divl
or
mov
lods
pop
jns
gs
lret
mov
nop
lods
stos
sub
add
call
xor
xorb
pop
push
sbb
push
stos
jp
sbb
xor
cs
sub
in
shlb
negl
xor
mov
std
aas
jle
cld
gs
repz
jae
je
adc
enter
shrl
xor
adc
clc
mov
cmp
lcall
xchg
icebp
popf
push
aaa
mov
cmc
daa
aas
insb
sbb
scas
jge
ljmp
xchg
xchg
xchg
cmpsb
test
sbb
mulb
in
pop
pop
jp
mov
ja
mov
outsb
or
insb
sbb
jge
sbb
gs
sub
sub
pop
and
mov
and
jecxz
push
mov
cmp
fucomp
in
adc
subl
je
aaa
or
aaa
sub
mov
inc
std
jle
jge
insb
add
stos
pop
jp
xchg
push
fimull
lahf
ficomps
std
es
push
inc
push
in
test
call
out
pop
dec
jle
lret
adc
cmp
in
jne
or
xchg
mov
loopne
cmpb
rcrl
xor
cld
xchg
xchg
insl
std
jmp
aas
sub
mov
push
mov
push
in
test
pop
push
mov
push
out
iret
push
adc
and
mov
xor
jbe
mov
leave
js
repz
jle
xchg
pop
mov
test
xchg
int3
mov
testl
mov
sub
add
jae
add
jp
cmp
sbb
sub
test
cmpb
and
outsb
mov
aam
daa
mov
cmp
std
push
call
hlt
sbb
insl
testb
loopne
mov
in
in
js
xor
sub
adc
mov
das
es
mov
add
or
imul
movsl
xor
sub
out
xor
xchg
negb
sub
gs
ret
das
xor
out
clc
mov
gs
push
sub
and
mov
push
lods
jmp
mov
rcr
call
mov
sub
pop
xor
iret
xor
inc
mov
std
push
ja
sbb
imul
and
arpl
in
mov
je
pop
adc
aam
or
movsb
test
or
adc
jl
sub
jecxz
int3
sub
dec
mov
add
mov
ljmp
push
inc
fwait
cmc
popa
mov
int3
cli
das
xchg
cmc
mov
xchg
and
rcll
das
fs
mov
dec
jmp
add
gs
std
push
ss
cmp
clc
std
fs
fs
add
mov
jl
js
aaa
mov
mov
lds
xorl
mov
cmp
jne
sbb
out
test
push
int
mov
sub
jmp
sahf
cmp
scas
mov
push
or
ja,pt
mov
daa
insb
nop
sbb
mov
outsl
push
aas
sub
cmp
or
jp
push
cmc
aas
jle
and
sbb
iret
mov
stc
push
and
mov
data16
cltd
mov
xor
lock
adc
mov
add
xlat
mov
dec
add
js
xlat
dec
mov
xchg
std
sbb
js
mov
cli
test
mov
mov
sbbl
adc
sub
xor
adc
pop
xchg
lods
adc
and
inc
sar
dec
ja
dec
mov
and
jae
mov
add
cmp
and
xchg
es
xor
stc
sbb
scas
or
arpl
adc
pop
notl
scas
cltd
sub
add
fcoml
push
xor
test
mov
jns
out
xorb
outsb
inc
push
or
or
movsb
pop
lods
out
es
jecxz
scas
call
cmpsb
inc
popw
inc
inc
sub
push
arpl
pop
pop
or
sbb
cwtl
mov
out
push
cmp
mov
out
xlat
sbb
adc
xor
jae
lds
mov
sub
cmp
movsb
in
aam
in
dec
jo
js
stos
repz
test
jo
xchg
aaa
arpl
pop
cs
adc
into
popa
adc
push
sbb
pushf
sarb
lds
sub
sbb
pop
mov
aaa
xchg
jmp
mov
jge
test
data16
or
addr16
mov
or
movsl
jb
cld
sbb
xchg
dec
dec
shrb
sub
mov
call
push
ds
out
movsl
loop
and
pop
out
xor
aas
ss
mov
inc
jmp
aas
out
iret
insb
call
adc
and
fistpl
fistps
xchg
std
scas
adc
adc
push
adc
lods
xchg
jg
ljmp
mov
cmc
lds
mov
xchg
lock
and
xchg
sbb
mov
cmp
std
inc
mov
xor
je
sub
test
jbe
adc
aas
sti
clc
mov
xchg
add
mov
shlb
or
pop
movsl
jle
shrb
rcrb
popl
and
cwtl
adc
js
xor
sub
jne
pop
arpl
inc
outsb
inc
mov
es
notb
xor
inc
out
daa
xlat
lock
das
lea
icebp
jmp
enter
push
mov
ss
leave
outsb
mov
xor
xor
pop
ja
cld
mov
cmp
add
fsubp
add
cld
loope
sbb
xlat
and
ss
pushf
sub
adc
mov
jns
pop
xor
ss
aaa
fdivs
sbb
fisttps
sahf
rcl
sub
leave
shl
sub
cmpl
scas
aaa
xor
ljmp
sahf
adc
repz
lock
push
pop
jl
xchg
in
into
loop
in
push
imul
in
rorb
rclb
mov
jno
shlb
jge
add
pop
sub
mov
sub
adc
pop
test
xor
sub
pop
mov
dec
push
cmpsb
imul
scas
out
cmp
iret
push
mov
leave
aaa
arpl
adc
div
pushf
push
inc
lods
adc
pop
andl
and
lock
jle
lds
cli
jno
jb
jecxz
daa
xor
std
cmp
push
cmp
ret
mov
aas
mov
jnp
xchg
pop
cmc
dec
clc
cmpsl
iret
fbld
insb
cmpsl
push
mov
movl
das
pop
jecxz
sub
mov
adc
nop
and
les
sbb
stc
std
add
or
adc
ret
test
mov
shll
push
popa
mov
mov
test
ds
in
scas
shl
clc
test
jnp
andl
adcl
std
out
arpl
enter
fs
push
into
sub
in
adcb
enter
push
pop
cmpl
jl
inc
pop
je
das
vpunpcklqdq
jo
rclb
repnz
sub
or
jge
mov
xchg
imul
repz
in
adc
pop
inc
movsb
sub
xchg
sbb
xor
nop
jmp
das
mov
nop
push
mov
jecxz
mov
fdivl
imul
negl
jl
push
movsb
and
push
mov
sbb
xorl
push
into
mov
test
insb
in
ret
jnp
or
sahf
sbb
jp
test
push
pusha
test
xchg
lcall
or
cmc
adc
sub
ss
shrb
mov
mov
dec
rcrb
lods
sahf
inc
mov
std
pop
xchg
adc
mov
or
mov
enter
sub
xchg
enter
test
in
xlat
cmp
xor
cmc
stc
sbb
cld
nop
cmp
or
xlat
enter
lock
push
push
pslld
mov
andb
stos
mov
cmc
aaa
mov
sbb
inc
leave
ds
in
push
out
or
inc
mov
sbb
sbb
stc
adc
push
int3
mov
jnp
into
aas
loop
mov
sbb
or
add
aad
pop
mov
cmc
idivl
jl
adc
lock
xor
sub
mov
dec
insl
mull
sub
out
sbb
enter
loopne
or
in
insl
std
mov
test
loopne
xor
xchg
aam
test
insb
jns
xchg
xor
or
sub
pop
jbe
lock
pop
adcl
push
adc
add
sbbb
fnsave
fnsave
pop
es
or
aam
hlt
sub
repnz
std
je
and
rorl
sub
outsl
sti
cmc
aad
and
ds
fmul
data16
sub
rorl
sub
cmc
movsb
mov
xlat
xchg
pop
mov
mov
arpl
cld
sub
cmp
xlat
cld
adc
push
add
out
cmpsb
dec
xor
xor
out
inc
push
mov
push
sbb
and
cmp
lcall
add
fs
sub
repnz
int3
pop
mov
sbb
das
push
cmc
mov
aam
mov
jbe
sub
inc
sbb
and
aam
shlb
gs
mov
gs
ja
fdivrl
std
sub
jnp
fsts
pop
gs
dec
xchg
xlat
outsb
sar
sub
inc
daa
gs
movsl
push
repz
out
and
or
lods
sbb
adc
xlat
sub
movl
sub
js
jl
xchg
sbb
dec
adc
mov
les
mov
lods
es
aas
cmpsb
lea
cltd
lahf
mov
inc
lock
mov
push
stc
mov
inc
push
adc
nop
push
ror
push
das
xor
mov
je
dec
ret
jge
mov
pop
jl
sbb
mov
shrb
pushl
or
xor
push
loope
cmp
or
dec
out
iret
dec
add
idivb
sub
lret
ds
jecxz
xchg
jbe
int
jp
insb
xchg
sbb
mov
js
stc
ss
adc
enter
aas
scas
push
ret
and
std
cmp
cli
jecxz
lahf
pop
jmp
mov
repz
lcall
aam
or
jne
sti
xor
cmp
adc
and
icebp
xor
js
out
xor
cmpsl
fstp
mov
in
jns
jl
jg
sahf
pop
out
loop
cld
pop
ja
push
sbbb
ret
lcall
sbb
movsl
xor
loope
scas
sti
cmpsb
jb
and
or
ja
push
mov
xlat
jno
dec
mov
daa
out
adcb
std
outsb
dec
and
lds
jmp
daa
idivb
xchg
div
push
or
stc
sarb
bound
xchg
push
or
cmpsb
vfnmadd132sd
rclb
sbb
mov
sbb
arpl
adcl
sub
pop
jo
mov
out
xchg
jp
ja
push
aam
xchg
movl
mov
xor
mov
mov
lcall
jo
mov
cltd
hlt
cmp
movsl
inc
out
fidivrs
int3
ret
or
ss
cmp
outsb
cmp
xor
rorl
mov
test
testl
pop
adc
mov
lods
pop
push
mov
fcoms
sbb
jle
testb
daa
add
fdivrs
mov
add
mov
mov
jnp
mov
xlat
cmc
jg
subl
lret
cmpsb
call
pop
int3
mov
mov
mov
xchg
cmpl
lcall
xchg
add
and
adc
pop
rcrb
sub
push
xor
lret
ljmp
adc
insl
out
leave
xor
or
pop
aaa
adc
dec
mov
pop
mov
push
jb,pn
mov
in
dec
test
iret
leave
sub
sub
int
std
mov
jmp
std
xchg
movsb
flds
jmp
add
in
outsb
in
fildll
mov
je
enter
jle
or
fldenv
pop
fbstp
push
xchg
subl
or
sub
adc
lea
sahf
pop
xor
dec
repz
outsl
scas
sub
stc
jbe
pop
sbbl
mov
in
pusha
out
cmpsb
or
xor
mov
subl
lock
ret
push
and
xchg
data16
popa
idivl
mov
stos
mov
aad
dec
outsb
loop
fwait
jne
xor
mov
lret
imul
sbb
cmp
out
jle
and
hlt
insb
mov
movsb
in
mov
mov
enter
ret
es
jae
adc
inc
xchg
xor
lret
cwtl
repz
cli
testl
negl
notl
inc
notl
es
cmpsb
je
xorb
ret
cmc
xor
hlt
repz
pop
pop
mov
fbstp
testl
or
or
add
icebp
push
mov
xor
xchg
and
adc
divb
pop
and
sub
ret
fsubr
xor
jl
dec
jecxz
push
into
das
sbb
or
jbe
lea
and
dec
shll
xor
push
sbb
cs
repnz
pop
or
push
bound
or
sub
push
adc
adc
cs
adc
sub
pop
add
ss
cmpsb
pop
jecxz
xor
push
pop
push
xchg
clc
mov
repnz
or
pop
sub
out
xor
xor
jae
sub
adc
addb
daa
cmpsl
and
xor
cmp
adc
repnz
add
mov
push
xchg
fdivl
xchg
add
mov
xor
in
add
mov
pop
pop
and
push
sbb
rep
adc
cmpsl
daa
jecxz
cmc
sbb
stc
cs
flds
add
pop
aaa
adc
or
cli
ss
movsb
jge
or
push
out
push
xor
pop
das
jle
push
sbb
or
ret
sti
add
testl
es
ljmp
add
cs
cmpsl
ss
push
movsl
and
xor
in
adc
adc
std
xchg
add
adc
cmpsb
adc
push
sbb
sub
xchg
add
xor
xor
hlt
jecxz
loope
out
cs
and
sbb
ss
mov
std
icebp
adc
add
repz
adc
pop
popf
sub
push
clc
out
xor
add
icebp
cli
in
int3
std
popa
push
mov
stos
dec
push
cltd
sbb
fs
mov
sbb
inc
je
xchg
add
aad
pop
mov
mulb
mov
mov
mov
aaa
je
cmpb
mov
fwait
lock
and
fidivl
std
xchg
add
lret
adc
sub
bound
in
and
jge
and
jae
roll
test
adc
lret
loop
mov
cmpsl
mov
test
mov
cmp
jb
adc
lahf
mov
inc
jg
jp
xchg
ret
iret
dec
pop
add
mov
shlb
outsb
fs
out
jo
add
aas
imul
pusha
cld
mov
mov
addl
xor
lret
lea
iret
pop
sub
or
arpl
push
testb
inc
mov
fildl
jbe
jle
jp
je
sub
pop
cmpb
jl,pn
jns
enter
mov
push
lahf
sub
popa
imul
data16
push
xor
mov
jns
mov
testb
gs
mov
push
movsl
cmp
out
bound
cmpsl
push
xor
cmp
imul
xor
outsl
mov
std
insl
cmc
imul
mov
sub
lret
sub
negb
std
in
mov
and
in
lock
push
ss
jno
xchg
add
les
xor
push
xchg
dec
add
cmp
add
jecxz
cld
out
sbb
pop
mov
int
sbb
pop
cmp
mov
int
xchg
aaa
inc
sub
aas
imull
push
cltd
lods
cmc
jns
rcll
test
popf
inc
or
fmull
cld
and
cs
andl
lahf
int3
leave
jae
js
into
stc
sbb
sbb
imulb
adc
dec
xlat
push
stc
mov
push
xor
movl
clc
mov
push
or
scas
adc
and
call
cld
aad
icebp
mov
test
and
xor
out
lds
cmp
mov
sub
mov
adc
sub
xchg
stos
dec
jmp
mov
and
fwait
sub
int
mov
mov
dec
xchg
jb
scas
push
or
mov
dec
cmpsb
cltd
lds
out
inc
sar
xor
mov
sub
push
push
subl
ror
ficomps
inc
cmp
xchg
andl
aaa
mov
adc
test
and
mov
jo
adc
sbb
iret
lock
push
pop
dec
xor
xor
jae
pop
add
les
xor
push
mov
sarl
inc
aaa
pusha
add
mov
push
push
shlb
mov
sbb
jp
stos
add
out
popf
xchg
adc
push
sub
or
notb
mov
in
inc
mov
jns
push
imul
or
sbb
mov
std
stos
into
mov
cwtl
mov
mov
das
or
aaa
rorb
adc
mov
mov
mov
js
jmp
sbb
jnp
nop
enter
fwait
xor
jmp
cmpsl
mov
sahf
sarl
sarb
mov
std
pop
add
or
jb
adc
sub
es
stc
jb
xchg
mov
jge
mov
aaa
sti
fdivr
in
xchg
movsb
les
jecxz
mov
mov
jl
cmp
test
and
sarb
push
test
add
pushf
xchg
outsb
ret
popa
push
dec
pop
mov
add
imull
push
pop
insb
mov
or
mov
das
push
xchg
out
sarl
aam
sub
or
xorb
aam
adc
xor
add
es
inc
inc
inc
test
repz
mov
xchg
cmp
testl
inc
and
cmpsb
lret
push
scas
jp
mov
loope
push
ja
into
scas
cmpsb
mov
xlat
inc
sbb
cmc
std
cwtl
insl
ja
fidivl
int
adc
push
lds
sub
pop
and
out
sbb
pushf
add
in
and
push
in
push
enter
inc
daa
mov
cmp
push
xor
aam
sub
and
mov
in
out
jbe
mov
gs
jg
call
dec
int3
jne
mov
mov
push
mov
lds
or
jp
ret
in
ficompl
xor
pop
or
arpl
mov
leave
enter
push
jns
std
gs
sub
clc
push
sub
mov
fistl
hlt
mov
test
pop
xchg
or
outsb
icebp
jl
imul
pushf
jmp
xchg
insb
lods
out
dec
mov
scas
std
mov
clc
fstpt
sti
adc
and
jbe
mov
push
cmp
push
movsl
movb
stc
aam
andl
add
fwait
notl
loop
jmp
outsb
mov
jnp
rcl
pop
mov
scas
xorl
cmpsb
xchg
out
bound
xor
inc
inc
dec
icebp
add
xchg
divl
jmp
notb
xchg
xor
sub
push
mov
lods
and
iret
lds
std
cmp
loope
adcl
xor
jne
sbbb
jae
cmpl
push
jae
gs
popa
xlat
jmp
xchg
cltd
hlt
mov
pusha
bound
jl
adc
push
mov
xchg
jmp
xchg
sbb
lods
add
add
pop
xor
aas
ret
cmp
xor
mov
jp
aaa
push
and
cmovl
stc
push
cmp
sbb
add
and
sub
adc
popf
xor
pushl
and
std
in
or
push
stc
cli
andl
dec
and
int3
sbb
push
inc
dec
mov
popf
cmpsl
out
mov
stc
rol
mov
sti
push
popa
sub
repz
cmc
insb
sub
in
sbb
jg
arpl
jp
int
add
xchg
sub
aad
dec
dec
sbb
movsl
jecxz
js
imul
mulb
xchg
adc
pcmpeqb
fisttps
jb
enter
pushf
pop
aad
dec
and
lods
aas
push
dec
mov
ret
repz
inc
jg
pop
fbstp
clc
aas
sti
and
nop
jmp
and
es
sub
pusha
xor
mov
es
ror
jge
and
adc
sub
and
data16
push
sub
jb
lods
imul
cmp
ret
rorl
adc
insl
jne
mov
arpl
shlb
mov
shlb
insb
jnp
les
adc
cmpl
sub
std
bound
add
mov
push
xor
std
in
pop
push
sahf
sub
dec
push
mov
sahf
jne
mov
std
pop
movsl
push
cli
sbb
push
or
jp
inc
or
insl
movsl
xchg
out
xchg
pop
jnp
xchg
mov
sub
cmpsl
mov
sbb
mov
mov
mov
or
add
mov
fimuls
test
dec
push
adc
and
push
pop
add
scas
pop
and
arpl
mov
aaa
aaa
std
in
jbe
sbb
test
add
dec
jecxz
mov
mov
je
xchg
jle
push
test
pusha
or
jge
das
xlat
loop
lahf
mov
mov
adc
mov
in
mov
mov
outsb
jmp
hlt
xchg
sub
insb
cs
outsb
inc
cltd
mov
xchg
imul
pushf
sbbl
dec
fs
cli
pushf
testb
mov
fstpl
stos
cmpsl
fldenv
cwtl
xchg
sbb
or
inc
xchg
sub
sbb
xchg
add
mov
mov
lahf
and
ret
cmpsl
xor
dec
mov
int
adc
xor
repnz
or
mov
das
push
mov
mov
insb
arpl
mov
repz
sub
cwtl
push
test
jg
xor
enter
pop
aaa
dec
subb
ret
push
xlat
mov
push
sub
dec
cmp
sbb
mov
or
or
std
arpl
mov
stos
cs
fs
push
jb
std
cli
shrl
rolb
sbb
test
repz
addl
sub
insb
mov
push
xchg
mov
lcall
jmp
enter
sub
into
add
sbb
adc
movsl
in
aad
dec
cmp
mov
mul
xchg
aad
je
pop
rcrl
les
pop
xchg
xchg
mov
nop
or
mov
jecxz
mov
pop
or
add
pop
scas
call
inc
push
push
jl
sbb
sahf
adc
sarl
outsb
jbe
std
adc
js
fs
dec
fs
ret
sti
sbb
mov
sbb
xchg
test
xor
pop
iret
fisubrl
fcmovnbe
mov
jp
in
xor
xlat
das
popf
xor
cmpsl
jl
mov
mov
cmp
xchg
or
mov
jge
sub
cltd
add
push
cmc
je
sub
mov
adc
scas
add
or
jge
sbb
lods
xchg
mov
and
jge
mov
inc
jmp
inc
pop
sbb
aam
xor
int3
scas
mov
mov
aad
xor
cli
mov
cmp
jl
mov
mov
mov
fistps
xchg
jae
iret
cmp
mov
adc
lcall
mov
add
pop
inc
mov
test
sbb
jnp
pop
xor
arpl
sub
sahf
call
aam
ljmp
push
and
mov
iret
enter
add
ret
repz
mov
add
wbinvd
or
mov
jecxz
adc
xchg
fisubrs
loopne
arpl
fs
cld
mov
pop
adc
xor
popa
or
jmp
orb
sub
je
pop
sub
adc
fdivs
cmpsl
divb
push
pop
mov
in
mov
stc
int
movsl
adc
mov
lret
test
mov
fbstp
cmpsb
and
push
adcb
pop
and
and
push
mov
jnp
inc
mov
mov
cmp
push
js
pop
jp
cmp
adc
xchg
iret
push
push
xchg
or
mov
lret
push
fidivrs
es
nop
adc
or
xor
js
daa
pusha
pop
mov
xchg
int
dec
pop
cltd
mov
xchg
mov
xchg
jmp
push
sbb
dec
into
mov
mov
cld
or
out
inc
and
lods
ret
das
add
pop
mov
icebp
shll
cmpsl
xchg
jp
inc
or
push
out
push
lods
mov
mov
mov
dec
stc
xchg
add
mov
pusha
mov
fcomip
lret
or
and
cltd
lret
rcll
sbb
flds
pop
xor
bound
xchg
daa
test
push
imul
lods
xor
jge
fisttpll
js
into
test
cmp
movsl
mov
cmovae
sub
ss
insb
adc
sbb
test
testb
ja
mov
add
sub
xchg
cli
cmp
jg
imulb
push
subl
into
div
xor
pop
rcpps
and
push
pushf
cmpsb
ljmp
out
dec
insl
sbb
jo
rorb
mov
pop
shl
fildll
rol
inc
pop
jnp
dec
or
add
jnp
jp
push
jo
add
and
fcom
lret
and
in
xlat
push
sbb
or
xor
mov
add
in
mov
pop
sub
xchg
mull
mov
sbb
and
pushf
inc
adc
pop
movsb
psubusb
fbstp
pop
push
and
sub
cld
jae,pn
mov
stc
sahf
xchg
push
xor
xchg
shl
lret
inc
mov
jae
adc
push
dec
cld
int3
pusha
or
aad
xor
and
push
repnz
inc
fldt
mov
loopne
cld
jp
cmc
cmpl
outsl
mov
and
addr16
push
adc
mov
clc
mov
loop
jns
lea
lods
push
mov
movsb
stc
in
idivl
popf
sbb
call
sub
fimuls
ljmp
jno
imul
das
adc
std
or
and
push
fsubrp
pop
push
and
stc
cld
out
mov
jae,pt
sub
xlat
aad
loopne
stc
mov
jecxz
sub
add
pop
incb
jb
pop
xchg
pop
xchg
out
mov
and
lret
cli
xor
xor
cmp
repnz
xor
xchg
testb
je
into
ret
sub
negb
scas
dec
scas
lods
shlb
sbb
mov
in
xor
fcmovb
adc
cmp
jmp
xchg
inc
stc
pop
mov
and
mov
push
dec
sarb
sbb
add
pushf
sub
cmc
std
inc
add
cs
xchg
xchg
mov
pop
nop
xchg
pop
daa
sbb
inc
subl
dec
std
ja
sbb
sti
mov
xchg
or
lock
fsubl
insb
cmp
call
fmuls
jle
clc
and
fidivrs
push
out
std
xlat
fisubrs
ficoms
mov
xchg
in
out
mov
sub
iret
push
and
out
aaa
shl
cmpsb
daa
in
negl
jp
clc
or
and
std
repnz
sbb
insb
lret
inc
sahf
bswap
jne
inc
js
push
int3
cmc
ret
call
mov
dec
adc
sub
in
jns
maskmovq
divl
jnp
repnz
cs
popa
and
xchg
xchg
adc
mov
stos
js
adc
outsb
mov
shrb
stos
mov
mov
cmpsl
std
out
fs
xchg
mov
xchg
shr
or
jg
jp
inc
push
lret
sbb
cmpsb
sub
pop
adc
sbb
xor
fidivrs
push
cmp
sbb
fsts
xchg
xor
jg
mov
stc
das
lds
out
in
or
inc
andb
push
lcall
insl
sub
icebp
into
daa
je
sbb
push
jle
in
adc
rol
lret
test
mov
jbe
cmp
and
cmpsl
push
xor
sti
insl
pop
xor
int3
and
lea
xlat
loop
xchg
jae
cld
add
sub
or
dec
cmpl
sbb
jmp
mov
push
cmpl
loopne
mov
aaa
and
out
xchg
and
sbb
aam
test
lods
stos
adc
jecxz
icebp
es
xchg
and
inc
mov
fdivrl
cltd
push
mov
mov
sbb
xchg
ret
dec
mov
jo
mov
pop
in
or
int
fldcw
pop
adc
aam
mov
insl
mov
mov
sub
xor
repnz
jmp
push
pop
inc
lret
scas
sbb
mov
and
lsl
out
fisttps
out
repnz
fmull
inc
and
sub
or
mov
xor
inc
adc
fidivl
and
shll
jl
fdivr
jne
xor
and
adc
add
push
jecxz,pt
std
mov
outsl
mov
xorl
and
pop
or
repz
mov
jecxz
cli
add
pop
std
cs
int3
or
push
dec
stc
adc
rorl
mov
jno
push
mov
stos
mov
cmp
or
mov
cmp
mov
arpl
xor
push
xor
dec
pop
std
mov
lret
in
stc
test
push
ret
rcll
xchg
adc
and
jmp
xor
pop
les
pop
std
sbb
movsb
adc
std
sbb
scas
cmp
testl
jmp
mov
pop
into
jne
loop
out
in
pushf
jae
sub
jg
pop
ror
mov
loop
mov
es
and
scas
mov
in
inc
xor
addl
fwait
js
pop
or
add
jmp
subb
xor
mov
or
lock
jnp
icebp
andb
or
push
jne
push
idivl
xchg
loop
outsb
cmc
leave
outsb
jle
cli
add
xor
movzwl
aam
jge
xor
mov
jl
mov
jne
pusha
scas
mov
pop
data16
jg
sub
sub
jne
xchg
fsubrs
cwtl
sbb
push
push
jnp
lcall
dec
in
rorb
xorl
cmp
push
in
cmp
xor
mov
in
lret
das
cli
scas
push
xor
or
aaa
xchg
or
xor
inc
xor
mov
jae
cmpsl
addb
test
scas
mov
icebp
sub
xor
adc
jl
jmp
out
lret
dec
ja
jmp
std
icebp
sbb
xor
rorl
xlat
aaa
adc
insl
sbb
mov
xor
movsl
sub
les
shl
sbb
xor
sbb
dec
dec
push
cmpsl
adc
adc
xor
ss
jno
aaa
xor
or
push
ss
mov
push
cmpsb
je
in
dec
xchg
es
xor
cs
iret
and
or
add
xor
icebp
xchg
push
or
sbb
stc
add
fs
sub
mov
cltd
or
mov
roll
xor
pop
sbb
or
les
mov
push
ss
push
add
ficoms
xor
sub
add
sub
and
unpckhps
sbb
dec
xchg
or
add
cmpsl
sbb
sahf
or
or
push
or
adc
push
cmc
sbb
xor
mov
xchg
xchg
sub
pop
cs
sbb
cs
sub
cmpb
sub
stc
aaa
out
stc
in
cmc
and
xor
sub
mov
getsec
out
and
stc
das
das
repnz
push
or
sbb
push
call
and
enter
pop
ss
shll
stos
and
outsl
adc
add
push
push
and
push
or
push
out
aaa
cli
movsb
and
push
jge
inc
daa
adcb
mov
ss
aaa
pop
std
movsl
repnz
push
shrb
cwtl
arpl
xchg
or
mov
inc
dec
cltd
dec
clc
test
call
sbb
shlb
dec
rcl
enter
or
sub
jp
testl
jmp
xlat
cld
sbb
push
inc
jnp
cwtl
imul
in
push
call
in
jne
jns
jns
jne
xchg
xchg
aam
je
mov
mov
andb
mov
jb
in
push
int
jmp
aam
shr
imul
mov
push
ret
popa
adc
outsl
ret
or
push
jecxz
and
cmpsb
les
and
in
lcall
out
rolb
and
pop
mov
xchg
cmp
lea
xchg
ja
test
mov
iret
iret
mov
fwait
pop
pop
dec
mov
add
inc
push
xlat
add
dec
mov
jge
mov
jne
mov
enter
sub
stc
mov
push
pushf
test
mov
nop
add
cmp
jne
scas
xlat
jg
adc
pop
xor
and
sbb
xchg
das
cmovge
lods
test
sbb
and
and
jg
xchg
push
jbe
aad
fs
das
cmpsb
mov
jne
sub
and
pop
std
rorl
lcall
rolb
adc
lahf
cltd
push
and
and
add
xor
add
dec
jb
movsl
cld
inc
push
and
mov
push
inc
mov
dec
and
mov
mov
add
std
mov
insb
aas
cmpsb
mov
add
fidivs
enter
or
mov
dec
xchg
cmc
mov
add
push
or
enter
lods
add
es
outsb
pusha
or
loopne
outsb
mov
popf
stc
jg
pop
mov
mov
in
add
or
loop
data16
sbb
popf
sub
mov
jmp
and
cmc
add
mov
mov
pop
xor
sub
out
and
lock
and
mov
aad
jecxz
inc
in
jne
adcl
addr16
cld
or
popa
outsb
loope
cmc
jmp
shlb
inc
push
jl
decl
aaa
out
jne
adc
xlat
pusha
rcll
push
daa
fadds
testb
xor
inc
cmpsl
mov
stos
jne
fabs
xchg
imul
pop
mulb
test
popf
jmp
cmp
clc
mov
add
mov
ret
aad
and
daa
inc
mov
jge
sbb
scas
and
xchg
daa
cld
stos
rorb
mov
mov
jp
or
xor
pop
and
or
mov
dec
aad
pop
inc
add
ret
les
push
ja
inc
pop
adcl
dec
arpl
push
or
fs
inc
mov
mov
out
xor
fistl
shlb
insb
sarb
mov
outsl
jne
les
xchg
jo
mov
rcrb
sub
pop
test
out
lahf
jmp
cmp
testl
enter
movl
sbb
jp
inc
ret
adc
jmp
shl
fsubrl
inc
and
push
cmpb
mov
add
hlt
popa
subb
inc
mov
es
sub
jmp
cmp
fbld
popl
mov
inc
adc
mov
cs
mov
ss
and
xchg
inc
adc
imul
aad
sbb
add
and
adc
cmpsl
in
clc
sub
pop
daa
mov
mov
jae
and
je
ror
dec
or
dec
jp
in
jge
inc
mov
std
mov
xor
aam
into
bound
aad
loope
xor
gs
lret
andl
pop
jge
mov
pusha
mov
std
lods
mov
cmp
jl
fs
cmpb
stc
imul
out
cwtl
dec
pop
inc
fsubrl
and
xor
rdmsr
add
je
and
xor
adc
push
scas
movsb
out
sub
dec
loop
mov
aam
cmc
and
and
mov
and
dec
pusha
movsl
or
std
or
std
jne
mov
sub
idivb
xorl
loop
jns
test
sub
fists
imul
inc
mov
es
ljmp
in
imul
xchg
push
cwtl
sbb
jns
push
push
lahf
sbb
xor
jge
xlat
std
jns
daa
or
add
sub
cmpsb
ret
add
push
loop
lea
rol
sub
in
mov
push
pop
orb
jp
and
call
sbbl
or
jbe
xchg
mov
sbbl
arpl
and
pop
aad
test
ret
adc
rorb
cltd
add
xorl
cs
sub
dec
popf
movsb
mov
cwtl
jp
jnp
inc
mov
sbb
cmc
js
lcall
push
push
jg
fsts
push
mov
out
and
into
push
aam
mov
jbe
sub
sub
dec
jo
jge
or
movsb
mov
mov
movsl
andl
push
or
jne
test
loopne
loop
mov
cmp
mov
addb
cmpsb
jmp
jmp
push
popa
ja
popf
cltd
sub
pop
int
and
and
inc
xor
lods
mov
mov
mov
js
es
test
xchg
cmpsl
test
jle
lret
xlat
sbb
pop
adc
jnp
push
and
scas
pop
dec
mov
sti
jmp
lds
mov
test
icebp
insl
xchg
aaa
push
enter
ljmp
aam
pop
mov
and
xchg
sti
arpl
xchg
jg
or
inc
inc
push
and
pushf
lds
int
xlat
add
add
mov
mov
push
jnp
cli
xchg
rol
daa
shr
add
jnp
and
into
push
cmp
jne
imull
jg
subb
pop
std
fnstsw
daa
insb
out
sbb
and
addr16
and
cld
ret
and
pusha
mov
aam
test
and
int3
jmp
xchg
lahf
xor
pop
pushf
add
dec
dec
and
xlat
sub
cmc
sub
loopne
pushf
ss
daa
out
dec
cld
mov
mov
outsl
mov
inc
pusha
lret
cmp
fld
jp
nop
add
shrb
jecxz
js
or
push
cld
sbb
push
xor
and
call
sar
je
push
inc
addb
jb
ja
jne
dec
mov
adc
lds
scas
into
push
xchg
or
aam
mov
mov
add
push
cmpsb
clc
add
cmp
mov
cmp
fiaddl
rcrb
lret
cmpsb
or
xchg
leave
and
cmp
or
inc
cmpl
and
shr
xor
test
and
jae
jmp
push
stc
jg
aad
pavgw
xchg
adc
es
cltd
or
adc
xchg
sub
sub
test
push
rcl
dec
jle
arpl
mov
mov
sub
mov
sbb
sarb
je
xchg
sbb
push
mov
enter
fs
add
jle
data16
lock
out
and
jnp
jb
fwait
dec
aad
jne
movsl
scas
daa
stc
push
ret
shlb
lea
dec
or
call
or
and
shld
and
pop
orb
push
mov
xor
mov
lds
sarl
mov
mov
outsb
sbb
and
lea
jnp
insb
test
mov
filds
push
insl
pop
cmp
and
inc
sbb
insl
into
jp
cmpsb
loop
jge
and
pop
pop
push
inc
cmc
lds
sub
comiss
cmp
sub
mov
sub
push
dec
subb
ret
insl
in
inc
sbb
movl
pusha
std
xchg
xor
sbb
sti
lcall
xor
inc
xchg
test
out
cmpb
fbstp
jns
jge
lret
pushl
mov
and
aaa
push
mov
dec
adc
jnp
jbe
pop
xor
int3
dec
out
repnz
add
lahf
and
ret
push
aam
mov
sub
sub
xlat
xor
scas
sub
xor
mov
jne
lcall
or
ret
pusha
test
ret
push
mov
outsb
out
push
add
sub
mov
cs
xchg
pop
gs
test
cmp
dec
add
sahf
jl
std
pop
cmp
pop
mov
mov
jmp
and
cmpsb
adc
in
fidivl
aad
sbb
inc
popa
or
in
leave
xchg
or
mov
mov
jb
enter
cli
cmc
std
mov
sbb
hlt
jne
mov
jnp
inc
sti
jae
and
cmp
test
lods
mov
das
test
stos
mov
mov
into
xchg
stos
or
pop
sar
cmp
jecxz
sub
pop
xchg
or
mov
cmovae
daa
je
lcall
stos
mov
lds
jne
push
add
in
popf
xchg
test
jmp
or
jl
call
daa
ss
test
xchg
cmp
jae
pop
stc
aam
in
frstor
xchg
test
xchg
jne
mov
pop
adc
stc
mov
loope
inc
arpl
cmp
iret
xor
enter
push
popa
mov
aad
rcl
push
push
out
mov
adc
mov
add
xchg
sub
ss
inc
mov
pop
fucom
xor
rolb
push
dec
xor
outsb
add
cmpl
pop
pop
inc
pop
push
inc
xor
pop
dec
cmp
jae
mov
or
add
std
stos
popf
movsb
mov
xchg
dec
fs
or
and
notl
loop
jnp
test
das
std
sarb
sarb
mov
scas
into
or
or
adc
sbb
xlat
push
cld
loopne
lods
cltd
xchg
loopne
xor
sub
lds
dec
xor
mov
fisttps
mov
push
cmp
xor
sti
push
test
mov
mov
jp
imul
idivl
scas
and
loopne
es
lahf
jle
mov
or
pop
adc
jae
cli
adc
cmp
and
sub
negl
push
sub
std
pop
and
test
sbb
sahf
sub
subb
and
cltd
mov
lret
in
jmp
scas
ja
xor
xchg
inc
lcall
in
pop
and
insb
and
movsw
test
xor
imul
sub
sub
sbb
daa
jo
xor
sbb
xor
and
mov
and
adc
push
sbb
mov
push
fists
xchg
ss
xor
fcoms
or
or
pop
cwtl
or
sbb
and
sub
xor
cmpsl
das
mov
xlat
mov
data16
fwait
adc
ret
xor
adc
and
aaa
hlt
in
or
and
pop
ret
and
adc
stc
fldt
in
lcall
cmpsl
add
jecxz
loope
daa
add
pop
pop
aaa
pop
adc
repz
mulb
out
xor
daa
add
das
repz
sbb
stos
sbb
sub
adc
cmpsb
push
mov
ficomps
add
sub
push
xor
in
cmc
ss
adc
sbb
adc
or
loope
daa
push
sahf
sti
cs
daa
imul
xor
xor
es
pop
push
xor
daa
add
and
mov
sub
or
es
sub
inc
adc
jae
jge
movsb
and
aad
popf
sbb
les
stos
lcall
es
out
loope
aaa
sbb
and
push
add
sub
lds
adc
or
and
push
mov
test
adc
adc
push
or
sbb
cs
pop
xor
adc
xchg
int
push
adc
rclb
gs
mov
dec
add
xorb
pop
cmp
pushl
mov
sub
rcl
dec
pop
sbb
gs
mov
inc
and
and
fs
add
pop
jmp
cli
dec
and
mov
sub
out
add
xor
cwtl
xchg
cmp
cmp
test
lcall
pushl
test
jle
sahf
inc
jge
add
mov
fwait
cli
xor
adc
xchg
in
bound
or
jbe
hlt
jmp
leave
push
cmp
cmpsb
shl
add
js
push
mov
aaa
push
movsb
clc
add
cmp
cs
push
std
mov
mov
dec
test
mov
out
mov
xor
inc
insb
mov
std
mov
inc
out
push
inc
lcall
adc
and
adc
sub
xlat
xchg
or
test
shl
jns
pop
mov
mov
mov
mov
addl
push
and
ljmp
dec
push
int
imul
out
cmpsl
loope
subl
push
into
sbb
aad
add
push
xchg
cmp
ret
into
mov
sbb
iret
aas
push
std
xor
scas
daa
rcl
xchg
ss
lods
cli
mov
jmp
mov
into
sti
iret
shrb
cli
sti
out
clc
out
pop
rorl
popl
leave
mov
stc
scas
aad
inc
mov
sar
jecxz
xor
cmpsl
enter
lods
je
out
push
add
sub
push
das
jge
sbb
xchg
xor
dec
jge
and
enter
jg
jns
ficoml
fstps
stc
in
and
ds
sahf
mov
mov
movsl
insb
test
in
xor
adc
add
sti
shlb
dec
jae
sub
lock
jns
in
add
jl
call
and
and
adcb
ss
in
add
cmp
push
arpl
push
repz
xchg
and
add
inc
inc
imul
cwtl
stc
or
mov
js
add
adc
rcrb
gs
add
mov
iret
mov
cmp
scas
dec
loop
es
aaa
adc
pop
add
std
mov
addb
stos
sti
mov
inc
cmpxchg
cmp
cld
jmp
pop
rclb
int
andl
out
dec
xchg
icebp
xlat
jle
adc
push
les
nop
or
scas
xchg
xchg
xorl
cmpsb
xor
std
js
mov
out
pop
push
outsl
sbb
mov
stc
outsb
jne
ret
push
stos
out
jnp
sub
mov
je
xchg
fimuls
popf
ret
dec
add
sbb
adc
sbb
repnz
mov
inc
jecxz
push
push
cwtl
ja
jnp
stc
xchg
and
outsb
testl
out
xor
push
and
xor
and
jecxz
push
out
jns
adcb
je
lret
pop
pop
or
fcompl
push
clc
out
adc
dec
outsl
sub
xor
clc
or
sub
imul
sbb
lea
xchg
xor
je
xor
add
popl
repnz
div
xlat
cld
or
incl
sbb
aad
lods
dec
mov
push
aaa
push
or
aam
lds
lret
mull
aas
xor
mov
jbe
data16
sub
sti
sbb
adc
mov
popf
lds
ret
pop
xchg
pop
cmp
cld
add
push
data16
adc
or
mov
add
cwtl
mov
mov
pop
ss
ret
xchg
fimuls
les
out
lea
outsl
jns
inc
xor
enter
aad
mov
sub
mov
aaa
add
xor
add
jno
icebp
mov
sti
mov
outsb
js
add
xor
in
fnstsw
fdiv
lret
sti
int3
fldenv
popa
mov
xchg
shlb
sub
cmpsb
adcl
push
sub
movsb
jg
out
inc
das
xor
cld
xor
stc
ret
gs
inc
sarb
fisubrs
pop
jle
jns
add
xor
sub
cs
mov
push
movsl
pop
lds
lret
and
xlat
jecxz
nop
sbb
cmp
stc
mov
sar
mov
and
incl
and
adc
and
outsb
rcl
or
push
and
xchg
adc
mov
data16
sahf
loopne
push
rcrl
xlat
push
gs
roll
push
out
jge
mov
mov
mov
in
fwait
mov
fldln2
loope
stc
cmc
sbb
mov
xor
outsb
adc
pop
jp
adc
push
adc
jp
xchg
fidivl
test
aad
xorb
nop
lcall
stos
test
popf
xlat
push
xchg
popl
outsb
adc
outsl
xchg
and
and
dec
jle
inc
aaa
and
pop
ss
sahf
outsb
adc
or
push
push
jo
sub
ds
sbb
mov
sub
dec
cwtl
xor
cmp
sarl
sub
data16
and
repz
cmp
lock
inc
mov
or
push
jmp
add
stc
xchg
inc
mov
push
pop
fstpl
out
sbb
test
in
test
dec
popf
dec
mov
arpl
lret
sub
jb
les
test
or
push
mov
pop
dec
mov
mov
jbe
in
clc
cwtl
lret
jb
sbbl
xchg
mull
xlat
in
xor
jne
cld
mul
jno
int
xchg
pushf
mov
das
repz
mov
adc
stc
aad
aaa
push
inc
push
das
gs
mov
rcll
sub
or
push
cmc
popa
aad
leave
aaa
aas
arpl
jg
mov
mov
vmwrite
push
test
lds
xchg
std
lock
jmp
cltd
scas
push
jmp
adc
mov
sub
cmp
sbb
cld
jg
xor
out
xor
mov
movsl
adc
push
daa
push
mov
or
xchg
mov
std
fistpl
add
jl
std
sub
sub
ss
xor
out
mov
sbb
sub
rcr
push
into
push
addb
mov
push
daa
pop
sarb
outsb
inc
add
jl
dec
sbb
xor
clc
push
xchg
jno
mov
adcl
mov
ljmp
daa
loopne
dec
rolb
loop
jle
push
roll
pop
pop
insl
and
loopne
adc
pusha
orb
inc
cwtl
pop
cmpsb
subb
push
mov
inc
std
cmp
mov
ffree
adc
aam
dec
sbb
jno
jae
xor
sub
cli
adc
movsb
push
or
les
cmp
and
movb
push
push
jg
lods
jb
dec
push
sbb
jno
xchg
or
push
out
pop
xor
mov
sub
shll
dec
mov
xbegin
clc
jbe
xor
or
sub
call
push
sub
xor
and
jbe
or
aas
add
and
mov
jnp
xchg
lahf
jmp
mov
xchg
mov
xor
add
mov
dec
lret
inc
mov
dec
imul
pop
lds
insb
xchg
mov
cltd
pop
cli
push
cmp
lods
fistl
bound
xor
shrl
add
or
lahf
xchg
sbb
testb
pop
mov
xor
pop
jae
out
ss
push
ret
in
movsb
add
sbb
jmp
cmpsl
push
gs
je
xchg
jae
cmp
lock
loopne
xchg
push
sarb
jno
call
mov
mov
loop
xor
aam
mov
imul
sub
mov
mov
hlt
test
divl
idiv
adc
xor
pop
loop
out
outsl
iret
xor
mov
sub
fldcw
push
loopne
frstor
jb
subl
je
inc
cmp
jno
out
cmp
test
mov
xchg
arpl
rcll
cmc
call
jae
xor
pop
sbb
jne
lods
mov
mov
pushf
in
in
jge
aam
add
sbb
lret
enter
rcl
push
sti
scas
ret
and
jae
jne
jecxz
jae
adc
sub
cmp
cmp
notb
xor
jg
call
adc
sbb
mov
mov
push
fwait
push
mov
js
ss
add
ret
jg
decl
sti
adc
dec
cli
jle
sub
sub
pminub
nop
sbb
mov
sbb
add
subl
rclb
push
mov
hlt
xlat
dec
jge
xor
mov
sahf
leave
fcmovnu
xor
stc
xor
jle
testl
xlat
inc
enter
sbb
xor
decl
roll
out
mov
cmp
mov
mov
xchg
inc
jae
test
cli
mov
jbe
scas
add
fidivs
pop
add
mov
xchg
mov
mov
insl
fcos
test
mov
xor
cwtl
daa
mov
xchg
popa
cmp
xor
adc
jae
pop
lods
insl
les
mov
cmp
js
dec
xlat
addb
adc
enter
nop
ss
ds
cmpl
aas
aad
push
sbb
jge
adc
add
int3
addr16
sbb
in
jns
push
dec
add
and
add
pop
loope
inc
bound
push
int3
sub
add
xchg
add
lret
xor
insl
jo
jg
mov
sbb
scas
js
xchg
lods
shl
out
adc
push
add
mov
enter
jle
mov
or
fnstsw
jp
and
sbb
add
clc
fwait
or
nop
jbe
ret
xor
testl
inc
cmp
aam
in
incl
xchg
pop
inc
xor
push
or
inc
insb
pop
sub
add
jns
repz
mov
jno
orb
shlb
stos
push
out
inc
outsb
cmp
rolb
scas
jns
pop
pop
mov
dec
jge
lock
loope
incl
xchg
xor
lds
jmp
cmpl
inc
fldenv
rorl
adc
push
cmpsl
mov
jge
and
mov
arpl
inc
incl
cmp
fisttps
aaa
jp
aam
sar
in
js
jb
mov
cmp
xchg
lock
dec
jmp
sub
dec
jge
fadds
scas
push
mov
arpl
out
jnp
mov
in
mov
mov
test
sub
pop
out
sbb
pop
adc
adc
leave
insb
clc
ss
inc
sahf
jno
or
or
sbb
xor
cmp
or
sbb
into
shlb
xchg
mov
in
insb
push
sbb
dec
ret
cmp
mov
xorl
sbb
add
inc
imul
decl
jp
jmp
jmp
inc
sub
roll
imul
movsb
jecxz
sub
jns
jmp
sbb
mov
stc
clc
fdivs
loopne
jbe
ss
jo
stos
xlat
sbb
divb
cmp
push
stc
jno
push
push
cmp
push
xor
mov
adc
adc
jp
xchg
jge
sbb
xchg
icebp
jle
rorl
arpl
push
or
cmp
adc
sbb
ja
xchg
jns
mov
call
xor
mov
call
fwait
sbb
imul
adc
js
ror
hlt
jbe
cmp
daa
xor
xchg
test
call
lods
mov
xchg
ja
outsl
jns
xor
jmp
lock
shll
sbb
aaa
jp
lds
js
fldenv
fmulp
aad
xor
xchg
test
push
popf
inc
rorl
or
aaa
stc
adc
ja
jge
xor
in
cltd
xchg
clc
or
in
clc
lcall
jp
xor
daa
cmpsl
negl
pop
jns
int3
mov
scas
or
pop
or
sbb
jbe
fstpt
xchg
mov
jle
jns
mov
mov
mov
cmp
xlat
loopne
sub
xor
neg
fistpll
ret
insl
adc
popf
xchg
cmp
rcrl
fstp
cmp
push
jl
xor
mov
pushl
das
cmp
xlat
mov
mov
idiv
aam
outsl
ss
mov
arpl
movsl
dec
rclb
mov
xorl
gs
popa
js
test
dec
sub
sub
sbb
int3
outsb
inc
jns
inc
jne
xor
pop
dec
loope
or
push
stc
mov
std
push
add
into
in
sub
and
cmp
jns
jbe
xchg
pusha
sub
std
call
add
arpl
adc
mov
jp
inc
bound
mov
pop
push
mov
incl
cmc
jl
sub
cld
mov
rolb
xchg
addr16
xchg
pop
imul
cwtl
inc
shl
int
jns
pushl
mov
ret
lcall
jne
ljmp
stos
rorb
cmp
lcall
int
sub
push
pop
adc
aam
rcrb
dec
incl
gs
mov
xchg
outsb
in
push
out
cmp
cmpl
dec
and
pop
notl
push
dec
pop
stos
pop
sbb
dec
inc
ljmp
fists
xchg
add
push
stc
jmp
ja
mov
shlb
sar
pop
lret
jns
imul
mov
test
ljmp
pop
in
rcrb
or
xor
xchg
sbb
imul
stos
ja
rclb
pushf
test
ja
or
fidivs
subb
mov
mov
push
push
mov
mov
iret
pop
fisubl
sbb
xor
cli
fprem1
sarb
mov
inc
subb
decl
enter
call
test
cli
push
test
add
divb
call
dec
or
out
repz
rorb
rorl
sub
mov
lds
sti
and
xchg
push
ret
decl
repz
push
dec
jp
ds
test
incl
pushl
ss
cmp
pop
mov
fsubl
daa
lods
call
scas
out
ficomps
call
inc
lods
xchg
jecxz
setno
mov
cltd
scas
xor
les
add
xlat
inc
mov
cmp
mov
iret
fmull
jmp
push
movsl
notb
pop
push
mov
out
ja
mov
loope
outsl
jo
xchg
pop
xor
jge
or
jg
and
notl
mov
cld
aam
jmp
and
call
addr16
aas
in
jl
dec
mov
adc
sbb
xchg
dec
das
sbb
inc
adcl
cltd
aaa
pop
out
lcall
add
jge
aaa
in
cmpsl
jb
adc
mov
push
jae
cmp
push
xchg
mov
shlb
fimull
mov
lret
data16
mov
decl
mov
in
sbb
jp
push
stos
out
ja
shll
outsl
aam
out
and
call
sub
incl
subb
dec
lcall
fisubs
cli
push
outsl
ficoml
std
mov
stos
ss
add
enter
sbb
jns
ja
inc
call
daa
loope
xorb
xor
jbe
sbb
jp
jge
adc
mov
scas
out
mov
cmp
jb
pop
call
or
idivl
push
xor
dec
pop
jge
aam
mov
pop
outsb
push
ret
jns
incl
fcompl
lock
cmc
loopne
decl
lods
in
xchg
div
sar
imull
fwait
adc
repz
xlat
mov
aam
mov
pop
sbb
dec
inc
scas
sub
jns
or
cmp
psubq
sbb
and
les
ja
xor
pop
mov
or
jp
ret
push
sub
sub
in
xor
aam
pop
add
call
and
notb
dec
jno
hlt
push
push
sub
xchg
mov
imul
clc
jmp
jmp
idivb
jp
lods
push
inc
call
insb
ljmp
jbe
dec
aas
nop
sbb
dec
lcall
jecxz
std
push
pop
xchg
es
lcall
push
push
cli
mov
jo
jl
shll
mov
subb
js
push
into
sbb
lds
mov
lock
adc
sub
jmp
sub
push
fistl
imul
out
mov
and
enter
xchg
popf
jnp
lret
pop
push
mov
mov
fstpl
shlb
or
rcrl
cmc
aas
sub
jmp
or
mov
mov
lret
incl
xchg
clc
test
inc
add
mov
xchg
jae
cmpsb
das
daa
adc
xor
fsubrs
dec
add
add
jecxz
mull
je
and
fistpl
sti
xor
insb
mov
add
jmp
cmp
push
fisubl
dec
shrb
inc
out
notb
fwait
dec
jae
sub
jo
mov
pusha
rcrl
hlt
cmpb
xor
xorl
sbb
xchg
mov
shl
add
adc
mov
push
lcall
pop
pop
mov
jbe
push
xchg
or
xor
dec
push
jecxz
rcll
xchg
or
fst
cmpsb
pusha
out
bsr
xchg
das
dec
lds
sub
push
out
mov
out
bnd
je
out
imul
jge
mov
es
and
pusha
xlat
push
outsb
in
fs
aad
pop
mov
stc
pop
shlb
and
dec
daa
lods
mov
sbb
fcoms
dec
lcall
ljmp
rorl
sbb
push
and
mov
jp
jge
ds
jmp
imul
jg
xor
daa
or
roll
xlat
leave
jl
mov
sub
pusha
aam
adc
xor
in
insl
jae
adc
jbe
fcmovnb
jb
fisttpl
sub
mov
mulb
and
fadd
repnz
jns
testl
lods
fsts
mov
add
in
bound
pop
mov
incl
inc
out
nop
pop
push
jmp
or
call
xor
rolb
mov
std
jmp
jbe
mov
js
jne
xorb
push
sub
loope
lcall
dec
rorl
push
outsb
mov
movsl
cmpsb
adc
aaa
stos
enter
stc
outsb
in
mov
pop
or
xor
in
cmp
xlat
sar
adc
mov
je
movsb
and
and
mov
mov
or
adc
cltd
push
xor
cld
jl
and
sub
mov
pushf
insl
pcmpeqw
pop
sbb
sahf
test
add
sbb
mov
aas
mov
stos
dec
xlat
lcall
inc
ljmp
repz
mov
and
and
idivl
jge
sbb
arpl
in
lods
repz
dec
cmp
sti
and
lods
jns
push
gs
loope
jle
shll
add
xor
lcall
and
popf
push
mov
jae
jle
orb
push
mov
mov
xchg
inc
sbb
orb
lret
ljmp
inc
mov
pop
rcrb
ljmp
ds
or
leave
pushl
ja
out
fsubrp
decl
lea
inc
stc
cmc
out
add
adcl
shll
jg
dec
inc
cwtl
jb
mov
adcb
add
out
int3
push
jg
jecxz
xor
cmc
sub
call
imul
mov
mov
inc
adc
lods
cs
incl
sub
lock
push
jl
mov
jnp
stos
invd
cmpsb
or
inc
imul
call
loope
push
or
adc
mov
cld
sub
add
mov
adcb
out
loop
stos
or
in
pop
adc
jbe
cmpsl
add
xchg
or
mov
aad
jns
cld
sahf
fidivl
gs
xchg
or
xchg
iret
push
mov
in
nop
fimull
xor
cmp
or
std
adc
incl
stc
pop
sbb
mov
clc
xchg
xor
mov
jle
in
dec
xchg
int
jbe
lds
add
or
testl
repz
and
xchg
adc
sub
mov
les
sti
cvtps2pd
xbegin
xchg
imul
or
nop
cld
insl
test
push
hlt
mov
or
cmp
iret
add
lcall
xchg
ret
dec
mov
jmp
aam
jne
mov
pop
push
xchg
dec
mov
jecxz
cmc
sub
and
pushl
mov
cmpl
stc
xchg
outsb
cltd
jae
pop
cmpsb
inc
sbb
pop
or
popf
mov
clc
jmp
out
push
mov
mov
stos
iret
incl
int3
aam
jne
add
pop
popa
xlat
sahf
cli
leave
insb
call
sub
shrl
enter
adc
jle
decl
lret
dec
in
pop
cli
jg
sbb
jae
push
sbb
mov
sub
adc
dec
adc
jbe
test
pusha
sbb
stos
jbe
das
test
xor
aam
fidivl
and
sti
or
lcall
jbe
int3
pop
mov
ljmp
mov
xchg
mov
jne
mov
ret
insl
pop
mov
js
int3
mov
sbb
inc
jmp
jo
push
add
and
jl
pushf
pop
xor
xchg
and
inc
cmc
in
das
pop
or
aad
mov
jb
adc
ljmp
js
jne
mov
imul
pushf
jnp
mov
aas
int3
add
ret
imul
sub
lcall
scas
out
lret
sbb
sbb
push
dec
aam
push
hlt
repnz
jmp
and
call
mov
push
ret
inc
clc
jo
sub
pop
loope
push
mov
sbb
mov
xchg
xorl
incb
or
xchg
fldenv
out
mov
lahf
dec
lock
popf
push
rdtsc
and
mov
adcl
dec
push
popf
mov
pushf
sbb
xor
push
clc
cmpsl
lcall
dec
fnstcw
incl
mov
idivl
in
or
add
test
xor
leave
sbb
xchg
or
lret
sub
std
addr16
xchg
sub
hlt
jns
cmp
test
fwait
mov
es
add
pop
shlb
pusha
ds
adc
shrl
mov
xorl
inc
das
testb
cmp
int
xchg
ret
in
sbb
scas
inc
pop
leave
xor
xchg
push
sub
sbb
mov
in
sub
inc
rolb
cld
in
push
lret
call
les
xchg
faddp
fsts
pushf
xor
inc
sar
loope
iret
inc
adc
push
out
sub
fdivl
jge
je
xchg
bound
cltd
add
es
ljmp
mov
add
ret
gs
jne
jl
gs
pop
out
cwtl
push
xchg
adc
out
pop
test
aaa
out
jmp
clc
sub
xor
pop
and
xor
int3
sbb
out
and
adc
iret
add
fistl
dec
fcomip
lock
in
div
mov
ret
movsb
mov
mov
ljmp
dec
push
or
lcall
movsl
test
ja
sub
dec
cli
inc
stos
std
out
cwtl
push
call
dec
mov
bound
mov
jmp
arpl
sub
lcall
ja
mov
scas
aam
ljmp
mov
sub
adcl
push
or
push
stos
je
ljmp
xchg
push
test
iret
inc
test
dec
nop
jge
inc
and
inc
push
aaa
inc
idiv
push
aam
int
nop
out
jmp
cwtl
push
sbb
adc
je
popf
rcl
add
leave
lahf
mov
loope
dec
jg
pushl
dec
mov
mov
pusha
cwtl
xchg
cld
mov
push
xchg
xor
lods
enter
movsl
pop
mov
incl
or
cmc
inc
bound
rcll
pop
incl
loope
mov
sub
ficoms
stc
or
lds
movsl
jbe
mov
pushf
dec
sbb
push
aas
pop
push
mov
out
decl
adc
adc
pushl
cld
sub
call
fstl
mov
mov
scas
dec
lods
sti
mov
ds
adc
inc
imul
pop
nop
pop
jbe
sbb
popf
outsb
or
jns
cmp
mov
push
sub
adc
mov
imul
or
adc
adc
movsb
sub
or
mov
out
mov
jl
out
or
aad
test
bound
sbb
cli
test
sub
or
sbb
dec
lcall
aam
sbbl
sbb
inc
ret
mov
es
insl
pop
dec
aam
jns
sbb
and
outsl
imul
push
pop
aas
aad
mov
leave
dec
sub
jp
fwait
mov
xor
imul
xor
popa
pop
mov
mov
sbb
sub
or
jp
xlat
push
add
mov
mov
call
sub
mov
aaa
sbb
cmp
fld
push
xor
and
out
push
jae
imul
ja
and
jp
pop
je
loopne
xor
xlat
sahf
mov
or
cmc
inc
push
adc
subl
or
pop
and
shrl
ja
push
pop
movsl
mov
and
sbb
cmc
mov
sub
fwait
mov
outsb
test
mov
jle
xor
xchg
test
das
stos
and
test
ret
mov
pop
lcall
fdivrp
out
push
std
push
stc
mov
dec
cmp
into
shrb
jae
or
std
pop
jno
xchg
out
add
add
adc
jae
cmc
jb
std
mov
mov
ret
clc
idiv
inc
in
jno
push
inc
adc
inc
fcmovnbe
pop
cli
mov
sti
xchg
std
jge
mov
jecxz
int3
cmp
pop
sub
jbe
jo
jns
outsb
sub
divb
add
fsub
je
aaa
into
mov
mov
and
ljmp
ret
mov
cmp
or
mov
int3
xor
mov
or
cmp
mov
push
mov
jmp
adc
ds
sti
out
ljmp
shll
pop
outsb
mov
xorl
pop
lahf
dec
test
mov
jae
loope
gs
mov
fs
inc
lds
adc
pop
mov
xor
inc
test
jle
aas
mov
fs
int3
je
mov
adc
test
roll
dec
pop
jg
lods
push
ja
divl
sbb
pushl
jp
cmpsl
mov
dec
mov
movsl
mov
stc
cmc
cli
sub
xchg
push
cmp
mov
jb
jmp
xchg
fs
ds
icebp
xchg
jbe
aas
ss
xor
adc
dec
inc
dec
rep
stc
ja
fdivs
cmp
jecxz
xor
xchg
inc
ljmp
pmuludq
mov
mov
sub
repz
out
test
mov
pop
jmp
ret
mov
mov
aam
adc
pop
pop
lcall
dec
add
push
cs
jmp
push
pop
pop
and
add
scas
push
jno
push
xchg
shrl
or
es
push
sbbb
je
dec
aas
arpl
jp
sbb
sbb
adc
push
popf
mov
outsb
mov
mov
cmp
in
ljmp
nop
adc
pop
sbb
mov
and
insl
idivb
push
mov
pop
dec
sbb
jns
and
divb
xor
addr16
or
jg
mov
lahf
jl
les
orb
enter
popl
fisubs
adc
loope
cmc
add
hlt
cmc
test
divl
fwait
sub
sub
sub
inc
mov
mov
jne
iret
icebp
pop
mov
lcall
xor
push
or
dec
and
aaa
jmp
ret
popf
sti
and
subb
sub
lods
xchg
sub
pop
xor
test
cmpsl
je
mov
pop
sub
xor
sbb
push
jno
std
sti
outsl
paddb
sbb
fidivs
xlat
decl
mov
push
pop
mov
enter
outsb
lock
nop
pop
or
jmp
mov
push
jae
insl
sub
ja
xor
es
adcb
jo
addl
mov
ja
divl
jne
lahf
mov
mov
test
fisubrl
iret
push
mov
push
dec
ja
cli
jne
ljmp
adc
cltd
cmova
ljmp
dec
scas
cmp
fs
push
push
je
pushl
fcomps
jge
pop
lock
jbe
push
and
dec
sub
jecxz
sti
or
mov
movsb
pop
pushf
push
sahf
nop
fiadds
push
fbstp
sbb
add
inc
push
sub
leave
and
sub
push
jae
cmp
inc
out
mov
xor
imul
lock
aam
aad
sub
in
shr
mov
ss
negl
mov
add
and
sub
mov
and
in
ljmp
loopne
hlt
rolb
lods
and
sbb
jb
je
aam
call
outsb
mov
popf
and
and
loop
std
insb
repnz
cli
imull
pop
xor
lcall
ljmp
xchg
fcoms
pop
call
lret
dec
jbe
adc
repnz
mov
add
add
jne
daa
cmpsl
sar
inc
dec
lahf
iret
cmp
adc
mov
xor
or
aaa
jae
out
in
xchg
sbb
out
addr16
and
fmulp
sbb
push
jmp
sbb
dec
jle
pop
cmp
xor
mov
ja
jmp
dec
cltd
add
shl
lcall
mov
lods
decl
mov
jle
inc
pop
das
inc
mov
pop
adc
popf
enter
fmulp
outsl
in
push
lds
mov
cmp
mov
sbb
sti
dec
xchg
pusha
cmpsl
adc
sub
cwtl
push
and
lahf
shll
insb
or
sbb
ja
jg
push
movsl
mov
push
arpl
cmp
rorb
bound
mov
cmp
cmp
cmp
mov
pop
dec
lcall
jmp
adc
add
lahf
ss
mov
jae
ja
dec
add
cmc
cmpl
hlt
stos
stc
sub
or
cmc
cli
pop
push
sub
cmp
adc
mov
mov
sar
add
xchg
das
cmpsl
adc
xor
pop
xor
mov
test
mov
mov
mov
mov
push
dec
lods
leave
inc
jg,pn
mov
mov
sbb
mov
xchg
shlb
test
gs
mov
or
lock
jmp
leave
data16
push
push
push
mov
pop
and
aam
pop
and
std
jno
out
and
cltd
xor
jl
inc
push
xor
xor
call
std
jb
inc
mov
rcll
int
or
incl
sub
data16
popf
icebp
cmp
mov
xchg
jl
jbe
and
mov
sbb
std
add
es
pop
inc
out
cs
push
shlb
bound
mov
adc
cmpsl
sbb
xor
pop
jb
es
cmp
inc
cmpsb
test
xlat
pop
inc
cmp
add
and
je
icebp
xorb
inc
das
mov
fwait
dec
cmc
adc
push
cld
call
aaa
xchg
mov
test
adc
or
out
cmp
mov
bound
cltd
dec
push
hlt
xor
jb
xchg
xor
xchg
popa
dec
pop
sub
outsb
push
lock
popa
out
push
int
loop
fistl
adc
repz
mov
sbb
xacquire
shrb
xor
stos
push
xchg
mov
fnsave
adc
xchg
xor
daa
and
cmc
incb
pop
hlt
enter
sub
es
xchg
push
cmp
inc
add
js
mov
iret
and
xchg
lret
cwtl
adc
inc
cmc
inc
aad
cltd
std
sub
sbb
and
loopne
cltd
test
sti
mov
cmp
jb
sbb
jns
aas
dec
push
mov
mov
and
loopne
xchg
lret
sahf
adc
aaa
lds
adcl
in
xor
push
subl
push
mov
pop
pop
pop
push
out
test
or
mov
push
rcr
gs
getsec
lock
ret
jl
mov
mov
notl
pop
dec
test
inc
das
es
mov
movsl
mov
pop
stos
xchg
lds
push
ss
leave
and
test
xor
inc
aam
fistl
xor
andl
xchg
pop
gs
jb
pop
out
jns
lret
push
scas
out
mov
lea
adc
popa
inc
pop
ret
add
mov
push
enter
push
popa
sbb
push
scas
outsb
pop
pop
ja
xor
pop
mov
mov
testl
jo
in
and
mov
bound
ljmp
xchg
call
sbb
jle
fs
mov
or
xchg
mov
dec
dec
pop
xchg
jnp
repnz
sbb
fs
mov
mull
mov
xchg
dec
mov
mov
add
xchg
cmpsl
shrb
xchg
inc
cmc
call
mov
add
repz
ljmp
sub
fcos
out
xor
sbb
jno
mov
mov
pop
fs
or
mov
fdivs
mov
ja
lods
shll
pop
jecxz
rcrb
mov
imul
add
lods
mov
insl
les
cltd
in
std
or
movsl
out
sti
incl
inc
daa
lods
adc
jo
js
and
xchg
inc
jp
fiaddl
int3
adc
jmp
imul
call
mov
jae
ja
cmpsb
je
xchg
imul
jecxz
pop
inc
xchg
ficompl
xor
and
int
clc
std
rclb
les
pop
out
inc
imul
ljmp
mov
dec
add
subb
xor
add
sbb
mov
test
repz
pop
fmull
xchg
push
pop
movsb
sub
mull
ret
enter
cld
popa
aaa
sub
jg
mov
xor
xor
jle
scas
xchg
push
scas
dec
and
pop
movsl
xchg
pop
loop
add
arpl
popf
je
sbb
gs
iret
jae
inc
lds
sahf
stc
mov
jmp
cmp
icebp
inc
ljmp
adc
mov
jl
push
testb
pop
jo
shll
in
sub
mov
sub
cmp
clc
jbe
inc
cs
mov
add
fcoml
mov
jecxz
pusha
mov
dec
sbb
iret
popa
ljmp
test
push
inc
mov
sub
int3
clc
shl
mov
incl
hlt
add
ljmp
inc
stos
inc
sub
cmc
sar
push
xor
jb
cmp
mov
pop
add
xlat
je
jne
inc
adc
xor
and
cld
mov
sbb
lock
aad
sub
and
mull
rcll
inc
cmp
lahf
push
or
sbb
in
ret
push
adc
fsubrl
jno
sbb
stos
and
sub
inc
jge
cld
xor
clc
xor
lock
xor
cwtl
push
fs
add
dec
add
outsl
jo
and
scas
xchg
pop
leave
mov
mov
pop
xchg
mov
mov
insl
mov
and
cs
mov
shlb
arpl
incl
faddl
pop
ja
lahf
aas
popa
jo
add
cmp
inc
inc
pop
pop
add
adc
mov
std
dec
bnd
inc
call
idivl
movsl
sub
idiv
stos
mov
inc
lret
fsincos
divb
ret
jo
push
mov
push
sbb
and
ljmp
iret
xchg
and
xor
subb
push
cmc
and
add
std
fnsave
cwtl
addr16
or
or
push
adc
idivl
fistpl
flds
ljmp
test
pop
in
sub
nop
push
dec
sub
add
call
cli
jbe
loopne
stc
or
sbb
je
dec
lods
test
xor
xlat
incl
add
jae
xchg
pop
push
and
decl
jle
adc
fidivl
pop
dec
xor
movsl
cmp
add
and
cmp
enter
xor
push
loope
clc
jo
lret
adc
adc
sar
mov
cmpsl
jne
aas
and
push
lcall
insl
mov
xorl
daa
mov
jmp
sbb
je
lcall
push
add
or
pop
xchg
sbb
and
sub
pop
pushf
sub
add
mov
sub
adc
in
loop
loope
sti
add
mov
leave
incl
ss
js
and
aaa
dec
adc
or
js
imul
or
add
aaa
negb
jb
fdivrp
fdivr
int3
xchg
add
dec
aaa
xchg
xchg
test
jmp
sub
decl
in
and
incl
jae
mov
and
subb
pushf
fldl
jbe
lret
pop
xchg
xchg
scas
in
fmul
jbe
adc
mov
mov
loopne
lahf
jne
testl
xor
push
out
cli
and
je
jg
lock
out
movsl
and
sub
mov
fists
lret
ret
sahf
and
leave
jbe
dec
sbb
mov
sub
mov
subl
jb
icebp
inc
outsb
pop
in
mov
pusha
cmpsl
mov
fdivs
or
cmp
adc
decl
outsl
sbb
and
mov
stos
mov
je
jnp
dec
and
incl
push
xchg
mov
dec
cmp
mov
testb
or
leave
fwait
dec
imul
inc
sub
xor
mov
or
mov
icebp
aas
inc
std
rorb
loop
mov
mov
adc
dec
testb
stos
jge
cmc
jl
testl
push
aaa
dec
fldcw
pusha
xchg
xlat
pop
lret
inc
ja
fsts
clc
popa
call
test
out
sbb
lods
pop
ja
int
in
je
push
sbb
sbb
mov
fistpll
lcall
push
pusha
arpl
mov
iret
ja
push
push
jb
pop
decl
stos
or
dec
dec
aaa
js
push
mov
add
cltd
ljmp
push
xor
xchg
movmskps
push
lcall
jg
shlw
clc
in
daa
fisttps
cltd
je
mov
pop
bound
call
push
dec
mov
and
insl
aam
decl
movsl
pop
std
mov
inc
jle
xor
testl
jge
push
cli
xor
mov
jl
decl
fisttpll
jg
dec
js
call
jne
push
outsb
nop
pop
or
shrb
or
mov
decl
enter
inc
xor
jl
add
pop
repz
incl
mov
hlt
mov
cli
idivl
ljmp
xor
fnsave
mov
movsb
add
je
mov
nop
inc
sub
movsb
xchg
sub
std
ja
cmp
cmp
mov
mov
fs
and
fbstp
xorb
stos
pop
push
add
xchg
or
jmp
inc
pop
mov
xor
data16
or
mov
mul
inc
sub
add
inc
cmp
mov
cmc
iret
add
cmpsb
inc
add
sbb
aad
sar
jp
imul
loopne
lea
jle
mov
je
ret
mov
jl
divl
mov
and
loop
fldt
push
scas
dec
xchg
shlb
push
pusha
cmp
inc
stc
and
cmp
test
push
dec
sub
pushl
xchg
sbb
xor
and
hlt
out
lret
and
lret
in
xchg
cmpl
and
jmp
test
mov
xor
inc
ja
push
test
data16
das
add
stos
add
dec
pop
pushl
cmc
testl
fwait
xlat
mov
mov
or
mov
push
dec
add
insb
scas
pop
adc
nop
pop
add
pushf
adc
in
divl
movsb
loop
outsb
push
std
shll
mov
sbb
dec
sahf
ljmp
es
clc
aam
xor
roll
divl
sub
mov
adc
xor
adc
dec
rcrb
pop
inc
cwtl
jmp
sti
sub
mov
loop
dec
pop
call
adc
das
lret
pushl
mov
ret
mov
lcall
dec
cwtl
lcall
xor
ja
push
lret
push
or
push
xchg
add
mov
mov
ljmp
imul
decl
stos
lea
decl
pushf
and
out
ljmp
call
fwait
mov
ja
dec
outsb
xor
or
lods
xor
push
sub
rcr
std
cwtl
mov
cmp
xor
jne
stc
hlt
sub
std
aaa
sub
mov
sub
lcall
mov
pop
xor
rolb
arpl
gs
mov
bound
cmpsb
jecxz
mov
data16
jb
sbb
dec
gs
ficomps
mov
push
stc
divb
inc
dec
addr16
pushl
add
inc
pushl
mov
mov
arpl
pushl
andb
xchg
ficoms
push
push
push
adc
jns
js
cmp
jle
in
mov
adc
sub
xor
sub
les
lods
xchg
lods
call
je
pop
jge
imul
sahf
push
xchg
mov
cltd
rcrl
jmp
lods
aad
jns
loop
cmp
mov
movsb
add
decl
arpl
fs
jae
push
lret
jne
xor
loop
call
mov
mov
xchg
mov
mov
xor
ss
pop
je
mov
cwtl
or
fisttpl
and
scas
or
pusha
xchg
dec
pop
and
mov
orb
inc
decl
add
mov
jecxz
push
and
xchg
sahf
lret
fwait
cmpsl
decl
cltd
xor
add
cmc
xor
add
mov
xlat
adc
outsb
pushl
scas
popa
int
sbb
ja
pop
cmc
mov
mov
inc
xchg
add
ljmp
or
sbb
jo
dec
jg
int
mov
cmp
incl
in
cltd
or
loopne
mov
test
mov
subb
cmp
sub
mov
outsb
in
je
mov
mov
xchg
aas
add
dec
shl
or
sti
sbb
or
mov
shll
sbb
mov
mov
pushf
push
in
cmp
mov
andb
xchg
mov
scas
lret
mov
and
mov
xchg
sub
mov
mov
jae
adc
mov
shrb
inc
out
jnp
into
test
lret
clc
sbb
xor
outsl
push
cmc
xor
inc
call
jmp
mov
movsb
sbb
push
push
mov
push
sub
lcall
jno
lods
jne
jp
inc
or
adc
aaa
cmp
repnz
scas
daa
clc
jp
add
sub
mov
shlb
dec
cltd
mov
cmpsl
push
bound
and
adc
pop
sbb
dec
aaa
cld
rcrl
mov
mov
mov
add
jp
pop
or
adc
push
sub
xor
fdivrs
pop
pop
andb
lea
daa
and
scas
icebp
push
sahf
sbbl
xlat
lock
insb
lds
testb
xchg
in
and
pop
lods
ljmp
pop
mov
jp
sar
loope
xchg
repnz
or
popa
jae
arpl
lods
das
cmp
mov
xchg
mov
and
rcl
ja
dec
pop
popf
mov
aad
decl
pop
adc
lcall
leave
push
fs
fcmovbe
jle
inc
cmp
inc
stos
imull
cmpsl
cmp
arpl
fbstp
mov
add
jle
inc
jbe
lahf
ja
sbb
iret
and
sti
jg
call
enter
dec
and
inc
ja
nop
pop
aad
into
adc
xchg
inc
mov
jle
or
cli
ja
test
add
lock
decl
and
dec
decl
mov
pop
sbb
adc
jnp
xor
clc
jmp
xchg
shrl
mov
push
decl
aas
imul
and
imull
cmc
pop
dec
add
jo
jns
adc
jb
or
call
mov
jne
push
jmp
mov
xchg
lret
inc
xor
fsubrl
mov
mov
pushf
xchg
mov
mov
js
push
and
xor
lahf
xchg
movsl
push
jmp
jmp
leave
stc
outsb
pushl
cli
xor
pop
cmp
data16
out
and
inc
mov
sbbb
fbld
or
iret
push
and
jg
pop
inc
xchg
cmp
loopne
cwtl
and
jne
leave
jnp
jne
xor
jbe
cmp
cmp
push
dec
pushf
stc
ja
lods
pusha
repz
mov
add
fidivl
push
xchg
mov
mov
aad
inc
mov
out
out
xlat
negb
pop
jb
sub
mov
sbbl
sbb
fsubl
adc
or
add
roll
add
cmp
inc
dec
xor
lds
pop
in
lock
pusha
cmp
cli
addr16
mov
stc
or
rep
xchg
int
imul
jno
sbb
lcall
pop
cmpl
popf
mov
ljmp
lret
bound
filds
jecxz
stos
add
popa
jnp
or
mov
into
adc
aas
mov
mov
subl
hlt
decl
bound
adc
idiv
daa
scas
jp
inc
loope
adc
mov
cmpsl
adcb
adc
adc
fstpl
addr16
int3
ret
dec
incl
ds
mov
aad
pushl
cs
inc
ret
repnz
pop
loopne
daa
pop
mov
jns
ljmp
mov
adc
jmp
lds
pop
ds
xor
and
out
xchg
sub
push
jns
cmpsl
cmp
jl
xor
xchg
dec
popa
incl
mov
mov
cltd
jb
jge
decl
push
enter
push
sti
adc
jb
xchg
dec
inc
jae
cmpsb
lods
jno
mov
add
pop
scas
dec
ret
mov
in
imul
shlb
addr16
add
inc
sub
xchg
dec
and
sub
dec
xor
lea
jno
lcall
in
dec
clc
sub
jp
mov
incl
ret
lcall
mov
mov
orl
lods
sbb
insl
xor
adc
cmpsb
or
sbb
mov
or
fistpll
or
es
or
sub
jnp
iret
adc
and
dec
sbb
mov
insb
jle
lahf
iret
cmpsl
mov
mov
sti
mov
adc
or
dec
in
and
mov
cli
push
jmp
lods
pop
sub
adc
mov
stc
mov
and
cmp
stos
or
mov
mov
mov
sbb
arpl
dec
sub
mov
mov
repz
jp
popf
scas
imul
fldcw
pop
sbb
mov
adc
es
xor
push
cmp
cs
data16
jno
ljmp
aad
dec
aam
cs
jnp
mov
movsb
push
sahf
mov
jp
div
push
push
add
cltd
aaa
and
sbb
cmp
inc
mov
xor
mov
loop
in
cmp
add
scas
jnp
test
je
in
xor
mov
sbb
cmp
stos
out
rolb
jbe
pop
inc
adc
or
sub
lret
xor
jae
std
scas
or
mov
pop
mov
pop
fcoms
lret
pop
nop
aaa
incl
push
scas
ja
mov
adc
icebp
jbe
cli
mov
sub
sub
sub
pushf
jbe
das
out
inc
repnz
lock
frstor
adc
jbe
jae
or
popf
decl
sub
loop
aas
fldcw
in
test
sbb
sub
sbbb
call
jl
dec
je
xor
mov
out
inc
jb
push
adc
test
mov
push
call
cmpsl
pop
cs
fisttpll
nop
fldcw
movsb
mov
rorb
fwait
push
xchg
ja
mov
jmp
lods
jge
call
fstpl
xor
movb
pop
lahf
dec
addr16
clc
xchg
shlb
and
add
or
mov
decl
bound
inc
hlt
pushl
inc
jnp
cmp
insb
inc
fdivr
push
and
adc
pop
pop
mov
fimuls
jb
lcall
mov
addr16
fwait
call
and
jo
jge
cmpsb
call
arpl
mov
mov
daa
out
jl
mov
xor
cmp
cwtl
add
arpl
std
xchg
mov
in
xor
lcall
sbb
xchg
and
orl
inc
push
sar
mov
pushf
scas
mov
jae
test
jge
cmp
lock
and
cld
sbb
daa
and
xor
pushf
xchg
sub
sbb
stos
mov
es
aaa
incl
mov
mov
ret
push
daa
cmpl
stos
dec
aam
sarb
mov
aad
push
sub
call
sub
nop
jmp
shll
clc
addr16
sub
cltd
out
decl
stos
adc
ljmp
add
cmpsl
pop
push
pop
testl
clc
add
sti
imul
es
sbb
cmp
arpl
adc
je
mov
sbb
mov
fwait
or
sbb
filds
mov
fwait
call
cmp
xor
or
fdivr
in
ret
mov
call
inc
pop
push
outsb
scas
ret
decl
repz
pop
imul
xor
sub
xchg
push
xchg
call
jmp
xchg
lea
mov
nop
test
stc
imul
cmp
mov
test
and
mov
lcall
test
in
sbb
fmuls
repz
sub
shlb
scas
jne
xchg
call
push
dec
and
enter
add
jo
mov
cld
sar
repnz
push
shlb
outsl
imulb
jne
je
inc
dec
xchg
aas
mov
insb
ja
enter
sub
xchg
decl
test
scas
sub
popa
jl
push
data16
inc
inc
je
out
into
push
xchg
test
imull
cmp
add
cmp
idivl
push
cmp
ljmp
sbb
out
cltd
orb
int3
or
jl
dec
push
mov
jbe
call
arpl
add
mov
pop
outsb
xchg
mov
fsubrl
call
incb
sbb
mov
or
xchg
mov
and
in
jl
cmp
sbb
out
call
xor
adc
aaa
lds
stc
jbe
insl
mov
cmp
adc
mov
mov
in
pop
dec
mov
and
sbb
aas
cmc
pop
mov
pop
add
sbb
imul
cwtl
jecxz
lods
shrb
sbb
push
outsl
ds
out
out
out
es
cmc
aaa
call
in
xchg
test
subb
dec
hlt
sbb
cli
sti
jae
jle
popf
lock
sbbb
add
xchg
bound
in
and
sbb
fldcw
pop
punpckhbw
sbb
jg
sti
inc
sub
notl
lret
std
jmp
mov
adc
es
xchg
and
imul
inc
std
mov
aam
sub
xchg
sbb
dec
inc
or
fidivl
mov
mov
jo
push
xchg
loop
repnz
xor
mov
cwtl
sub
enter
pushf
cmp
mov
pop
adc
bound
mov
and
inc
inc
xchg
mov
mov
mov
mov
movsl
mov
call
ret
mov
popa
pop
jp
and
mull
mov
dec
ljmp
leave
aaa
out
mov
xor
js
rclb
pushl
ss
ja
cld
xchg
dec
cmp
imul
jge
mov
fdivs
pusha
push
js
add
incl
das
pop
ret
adc
jecxz
sub
divl
test
mov
insl
cmp
adc
jmp
or
or
adc
outsb
or
cli
decl
sbb
call
clc
and
or
dec
call
fnstenv
rorb
ds
les
cmpl
das
pop
jmp
insl
sbb
mov
add
cld
adc
mov
dec
icebp
dec
pop
jns
out
outsb
cmp
movsb
aaa
ja
jbe
mov
pop
js
sbb
sbb
stc
push
sar
jge
xchg
cs
loope
test
sbb
jbe
push
add
mov
lret
lea
cli
add
bound
popa
addr16
and
nop
xor
xchg
fwait
sbb
out
arpl
je
add
pop
add
mov
popa
and
jecxz
mov
stos
nop
jb
std
dec
cmp
xor
pop
mov
cmp
xor
imul
mov
lea
or
mov
lea
inc
dec
jnp
sbbb
imul
orl
cmp
pushl
adc
cmp
sti
call
fcomps
dec
idivl
test
inc
adc
sbb
sub
int
daa
mov
ret
jge
and
push
test
jo
cmpsb
adcl
aas
adc
pushf
mov
ret
adc
fwait
sbb
inc
jmp
ja
or
adc
fucomp
mov
ljmp
inc
mov
clc
mov
sub
cmp
call
iret
and
adc
in
add
xor
xchg
int
dec
mov
aas
xorb
mov
jb
imul
sub
xorb
jmp
cli
std
test
hlt
ret
add
cwtl
jo
scas
outsb
push
mov
pop
adc
incl
push
test
jnp
mov
sti
pop
inc
jmp
jl
cmp
inc
mov
daa
sub
and
test
cmp
sbb
ljmpw
lahf
mov
aam
movsb
mov
cmp
ja
xchg
clc
in
push
mov
iret
mov
sti
pop
push
std
sub
pushf
mov
sub
mov
movsb
mov
cmpsl
insb
out
or
adc
and
js
mov
aad
int
cltd
add
movsb
mov
in
mov
mov
pop
jo
cmc
rol
jecxz
mov
mov
clc
inc
and
arpl
pushf
lret
or
jbe
push
or
mov
pushl
and
lds
pushl
push
cmpsl
adc
scas
inc
pop
adc
mov
je
push
stos
fs
cmpsb
fnstenv
xor
push
std
xlat
adc
inc
xchg
mov
push
or
push
in
jno
test
daa
loopne
je
imulb
add
jae
and
sub
jo
jp
pop
lcall
lods
and
pop
xor
or
xor
es
or
or
arpl
mov
jg
mov
mov
inc
mov
aad
mov
ljmp
call
sub
decl
mov
mov
dec
inc
inc
jbe
repz
js
sbb
lcall
pop
orl
add
enter
idivb
jmp
inc
je
jns
jge
incl
adc
shrb
pop
insl
insb
sbb
push
lret
loope
jle
or
ljmp
pop
xchg
test
lods
ljmp
and
hlt
fnstcw
sub
cli
mov
mov
jecxz
cmc
xor
jbe
add
mov
push
cmp
incl
loop
and
dec
sub
popa
cmp
xorl
popf
sti
je
jle
lods
bnd
call
or
into
xchg
xlat
rcl
lock
in
stos
pop
pushl
inc
mov
mov
cmp
xlat
xchg
ds
test
and
mov
adc
add
xor
loope
inc
test
add
and
shr
xor
push
fdivrs
jle
hlt
int
scas
jne
jge
pop
popf
mov
mulb
pusha
cmc
sbb
daa
test
sub
lock
inc
adc
jl
jb
jg
push
pop
mov
adc
sbb
in
and
incl
outsb
add
ljmp
add
push
cmp
pop
xchg
xchg
or
insb
xor
mov
jmp
sbb
sbb
mov
or
mov
xorl
insb
imul
sbb
push
in
jnp
mov
aad
clc
dec
mov
nop
pop
jmp
or
cwtl
ljmp
in
fisttpll
icebp
xchg
fidivl
pop
jmp
adc
add
jbe
lock
push
decl
sub
sub
sbb
inc
jmp
arpl
rcll
stc
test
pop
notl
inc
out
sub
ud0
into
mov
push
cli
and
dec
movsb
call
jnp
xchg
test
or
bound
xchg
mov
dec
jmp
inc
or
fsubrl
push
jo
gs
jns
repz
jb
stos
aam
test
adc
outsl
mov
notb
xchg
sbb
push
pop
test
rcll
pop
inc
pushf
push
mov
cmpsb
jmp
xor
push
cmp
das
gs
ret
xor
enter
add
push
cmp
lcall
fadds
popl
in
loopne
insl
fcomip
jbe
mov
mov
mov
leave
and
xor
pop
xchg
mov
ja
and
push
out
neg
cmp
or
mov
fimull
pop
jge
and
ja
or
paddsw
outsl
jg
sbb
aas
cmpsl
mov
pop
push
ret
sbb
test
js
xchg
fsubrs
ja
sahf
add
mov
sbb
xchg
sub
repnz
das
incl
mov
bound
ja
mov
daa
dec
imul
add
mov
fsubrl
bound
rcrb
pop
ss
add
ja
addr16
cltd
shlb
popf
out
sub
and
adc
out
outsl
in
lock
out
repz
inc
mov
sbb
mov
int3
sbb
test
and
mov
decl
cltd
mov
inc
ret
jl
idiv
test
mov
fcoms
inc
aad
or
insl
sbb
cmp
adc
mov
jbe
pop
mov
sbb
pop
cltd
jne
sbbb
cmc
push
dec
and
pop
outsl
mov
or
add
mov
and
lahf
in
mov
pop
in
xchg
jg
mov
or
sbb
sbb
std
shr
dec
adc
lret
jns
cmc
jnp
test
and
bsr
xor
fs
dec
andb
inc
decb
imul
push
dec
and
aas
lock
idiv
push
pop
cmpb
jmp
mov
jo
sub
lcall
es
cmc
mov
cmpsb
xor
lock
xchg
leave
xchg
push
pop
adc
fsubr
inc
aaa
jb
rcr
xor
add
xchg
inc
ds
mov
xor
push
in
and
fisubrl
mov
xor
aas
push
jmp
testl
subb
fsubl
mov
enter
mov
fnsave
loop
rcll
jbe
movsl
mov
jne
hlt
repnz
jns
add
mov
loope
inc
mov
cmp
cmp
jmp
dec
push
inc
add
outsl
mov
jno
pusha
jbe
pushl
pop
aad
sbb
cmpsb
lods
ret
jle
sbb
push
notl
rclb
enter
jae
mov
mov
popa
or
inc
pushl
cmp
lcall
mov
data16
incl
jge
mov
leave
add
xchg
xchg
bound
push
js
or
je
fucomp
mov
mov
test
mov
cwtl
scas
std
push
insb
subb
movsb
arpl
mov
inc
dec
sbb
mov
shlb
das
enter
or
push
int3
dec
pop
aas
xor
sbb
insl
or
std
icebp
leave
rorb
fsubs
xchg
pop
or
lock
popf
pop
mov
andb
insb
jmp
add
and
cmp
add
lods
xor
mov
sub
xor
cmc
or
addr16
ret
xchg
gs
push
sub
je
cs
testl
sbb
dec
xor
mov
shr
push
sar
adc
mov
rcrb
fcomps
adc
or
div
mov
scas
ret
in
add
adc
loopne
call
jnp
jmp
sbb
lods
push
fs
pushf
clc
outsl
in
pop
push
dec
jle
inc
lds
pop
mov
jecxz
dec
xor
lret
pop
xchg
call
push
mov
rorb
mov
mov
jmp
and
dec
arpl
daa
fimull
xor
mov
movsb
and
movsb
or
or
jmp
lret
movsb
adc
pushf
xor
ljmp
adc
adc
lcall
sub
imul
incl
jg
push
insl
mov
jbe
ret
lock
add
cmp
movsl
clc
xchg
int
lods
mov
and
push
in
and
mov
xchg
mov
sar
push
mov
aam
mov
decl
cmpsl
pop
loopne
sub
sbb
sbb
or
popf
add
jns
imul
aaa
push
cmpsl
ds
lahf
push
sbb
sub
xor
int
hlt
loopne
mov
imul
pop
outsb
adc
subb
sbb
push
mov
cld
dec
hlt
xchg
mov
mov
add
xor
addl
testb
mull
movsl
fbstp
xchg
and
sbb
fcompl
pop
negl
xchg
dec
xor
rorl
xor
lock
call
in
xorb
dec
jne
mov
adc
cmpsl
rcll
pop
mov
dec
inc
sub
jmp
jp
fs
call
clc
cs
lcall
xchg
jmp
imul
jge
ror
mov
enter
jne
pushf
or
mov
test
push
xchg
bound
flds
outsb
loope
inc
insl
ficoms
cmpsl
cmp
xchg
pop
mov
push
pop
jbe
popa
inc
jb
jbe
adc
mov
sbb
into
addr16
push
jmp
out
pop
mov
mov
dec
into
cs
fxtract
outsb
int
fcomps
jge
std
mov
ret
push
push
jge
and
mov
pop
scas
rolb
lds
stc
or
jecxz
sbb
sbb
sbbl
sbb
push
cld
test
aad
cmp
jns
popa
mov
cmp
push
scas
bound
icebp
jg
dec
push
sbb
mov
leave
sbb
cmp
movsb
mov
dec
push
and
push
gs
inc
daa
push
movsl
and
push
inc
loop
or
js
xlat
xchg
std
pop
rcrl
fwait
mov
sub
jns
test
sar
fcom
jnp
cmpl
push
popa
outsb
shrb
mov
mov
cmpb
add
and
push
sub
insb
xchg
rorb
aaa
adc
aam
das
cwtl
pop
insl
adc
cmp
js
xor
std
push
stos
mov
out
popa
add
insb
push
dec
dec
test
loopne
sbb
rcrl
mov
sbb
int3
lods
jl
pop
mov
inc
and
inc
ja
flds
stos
or
jecxz
mov
loopne
ret
inc
xlat
and
xor
lds
mov
movsb
cmp
mov
std
push
decl
xchg
sti
jb
ja
jo
sbb
jge
loope
sbb
mov
sbb
popf
add
call
jne
ret
es
loopne,pn
and
sub
pop
and
jmp
jl
add
mov
sub
mov
mov
in
mov
mov
clc
rcrb
xor
dec
cmp
mov
stc
mov
lods
or
je
aad
pop
lret
adc
push
xor
mov
add
sbb
imul
xchg
mov
cmpsl
test
lret
sarl
sub
filds
xor
push
xlat
test
xor
push
aaa
mov
push
clc
in
cmc
or
push
and
mov
pop
fwait
outsb
xor
insl
sub
scas
and
jle
int3
mov
adc
mov
push
outsb
mov
fstps
not
adc
aas
and
xor
add
arpl
lcall
js
mov
int3
cmp
jne
jmp
mov
cmpsb
sbbb
sub
jmp
lods
fisubrl
ss
sbb
push
inc
adc
mov
movsl
fwait
xor
push
decl
cmpsb
js
idiv
addl
stc
lds
mov
mov
addb
pop
dec
test
lahf
outsl
push
xor
jg
ljmp
inc
push
jge
lods
data16
push
in
add
and
pop
xor
mov
out
push
shll
dec
jg
jo
or
fdivr
je
cmpsb
xchg
inc
xor
stos
inc
push
repnz
call
push
push
inc
sbb
fcoml
std
cmp
neg
mov
xchg
lods
nop
aad
and
push
jnp
pusha
pop
dec
adc
mov
add
adc
sbb
test
inc
mov
idivl
pushf
or
inc
dec
rol
nop
aaa
mov
dec
hlt
imul
ret
adc
lds
xchg
shlb
cmp
push
and
xlat
insb
lods
daa
cmc
mov
add
mov
or
repnz
xchg
pop
adc
jecxz
sahf
dec
jno
pushl
mov
mov
fcoms
lahf
mov
xor
mov
out
rolb
sbb
mov
adc
pop
jo
stc
out
cmp
clc
out
jmp
mov
inc
in
jg
xchg
imul
xchg
je
cmp
xchg
mov
jnp
push
jbe
cmp
les
sti
cmc
fucomip
and
pop
sub
inc
in
test
inc
jecxz
fstpt
dec
lret
pop
or
add
mov
dec
pop
in
call
std
std
call
je
inc
jmp
push
les
jmp
test
aaa
gs
sarb
or
pop
in
sub
adc
jb
pop
rorl
repnz
aam
mov
mov
jp
out
pop
dec
mov
gs
nop
imul
ret
jmp
push
jae
sub
push
mov
push
nop
fcoms
xchg
loop
jmp
subb
pop
jns
lock
cmp
gs
stos
jne
xorb
int3
mul
int
stos
and
lcall
xor
push
sub
rclb
sub
and
and
mov
loopne
sbb
or
mov
jmp
pop
xor
pop
mov
and
sbb
cli
int
jnp
pop
arpl
jmp
pop
xlat
mov
fldt
add
mov
xchg
sti
aam
jne
outsb
call
call
xchg
out
imull
mov
subl
pushl
mov
mov
push
imul
or
je
cmp
sbb
je
mov
insb
stc
xchg
sub
pushl
push
push
dec
mov
jnp
lcall
data16
jle
adc
test
lahf
push
or
xor
cmp
inc
or
push
stc
xor
fistl
loopne
pop
push
lcall
sbb
push
mov
scas
xor
je
mov
pop
jg
jle
enter
xor
xlat
jo
stc
clc
stc
dec
cld
dec
or
mov
aad
inc
and
mov
add
jp
add
repnz
sbb
ljmp
or
clc
call
xorb
rcrb
mov
outsl
lret
clc
test
es
push
ds
jl
outsb
jp
aas
pop
mov
testl
ss
aaa
pop
clc
lock
cmc
sub
mov
sbb
dec
xor
inc
pushl
aam
jne
std
push
lcall
mov
mov
xchg
jp
jge
scas
and
add
call
cwtl
rclb
xor
dec
jp
testl
decl
pop
bound
adc
je
jnp
mul
cmpsb
fimull
sar
push
sbb
add
test
call
repnz
lcall
xchg
insb
mov
lret
mov
cli
push
dec
scas
sbb
dec
pop
notl
enter
and
ja
rcrb
movsl
or
jp
insb
lcall
js
xchg
jnp
stos
push
movsl
and
pushl
insl
push
mov
jbe
outsb
mov
inc
pop
decb
cltd
pop
test
dec
aas
jbe
sete
rcll
mov
call
sti
mov
mov
shlb
push
pushl
mov
outsl
cmp
mov
cltd
inc
jmp
add
sub
push
mov
dec
movsl
dec
cmp
lret
jmp
imul
mov
stos
mov
loopne
push
pop
insl
push
jne
pminsw
add
cwtl
sbb
push
inc
mov
enter
or
and
int3
gs
mov
test
pop
ja
scas
outsb
add
sbb
cld
xchg
ret
mov
rorl
leave
cmp
hlt
movsl
ss
xchg
lcall
push
jne
mov
test
decl
clc
pop
push
jbe
mov
mov
gs
sar
pop
mov
add
mov
cld
das
test
inc
movsl
jle
add
sub
sub
aam
jno
mov
movb
xchg
fadd
push
dec
cld
mov
in
inc
ret
jns
ficoms
in
stc
clc
decb
fwait
decl
push
fistpl
cmc
test
test
repz
xchg
adc
ficompl
int
test
js
movsl
leave
add
sbb
inc
sub
xor
rorl
xor
lret
add
inc
dec
xchg
mov
addl
add
and
sti
ja
jbe
data16
ds
inc
jl
call
pop
mov
ds
xor
and
sbb
rolb
decl
loope
data16
outsb
call
cmp
jo
xchg
jno
ret
icebp
mov
jns
mov
xchg
lods
pop
lcall
out
sahf
jl
stc
jnp
inc
cmp
into
ss
mov
scas
mov
mov
jns
cli
outsl
or
add
daa
xor
jnp
xor
pop
repnz
notb
inc
nop
mov
les
xor
lcall
adc
pop
ja
mov
dec
mov
mov
jl
jo
cwtl
sub
pop
sbb
sub
les
idiv
dec
test
int3
push
push
pop
cmp
dec
in
jle
hlt
stos
insl
decl
lods
in
mov
fs
ficomps
inc
addb
push
pop
ja
das
push
or
mov
sbb
xchg
jbe
mov
jl
out
xlat
leave
pop
aam
pop
into
jo
add
dec
pop
jne
dec
or
or
xor
repnz
xchg
scas
outsb
bound
jb
push
or
jmp
aas
insb
cmc
mov
adc
xor
cli
movsl
or
push
pop
ret
or
xlat
int3
jl
dec
and
fs
loop
sbb
aad
ss
push
cltd
and
add
std
sahf
sub
fmuls
inc
ja
push
out
jbe
and
mov
neg
add
icebp
jp
and
xor
xor
mov
jp
sub
test
xor
adc
xchg
sub
movsl
cmp
mov
push
out
ss
add
stc
sub
sbb
xchg
out
or
mov
dec
push
popf
mov
jbe
cmp
fcmove
sbb
loopne
push
mulb
and
jne
cli
imul
push
in
jae
and
jl
call
stos
add
icebp
std
mov
jmp
adc
push
sbb
int
mov
aad
xor
daa
cmc
push
xchg
scas
mov
sahf
add
loop
inc
xchg
jae
xor
mov
sub
rcl
jnp
mov
fistl
imul
enter
cld
cmp
xlat
sti
mov
ds
and
shll
mov
xor
cld
mov
mov
movsl
jne
lods
mov
inc
clc
jg
das
pop
daa
xlat
xlat
cmp
inc
pop
incl
mov
or
xchg
dec
cld
stc
sub
pop
push
and
pop
mov
hlt
and
mov
std
insb
outsl
pop
push
lods
mov
mov
sahf
dec
out
test
pushf
daa
xor
aam
mov
arpl
jmp
ds
stc
cltd
push
in
cmp
sbb
sub
lods
mov
cld
mov
jg
push
orb
aaa
push
or
pop
std
and
imul
push
xor
sbb
lods
test
xor
sti
add
mov
andnps
mov
sub
ret
imul
movsb
mov
mov
sbb
xchg
mov
or
test
inc
std
lods
sti
addr16
outsl
cwtl
into
xor
sbb
rorl
pop
dec
pushl
dec
ret
jl
lahf
push
jmp
out
and
xchg
imul
jo
sti
dec
ret
inc
fwait
sarb
into
arpl
loopne
jge
mov
sbb
das
jbe
xchg
dec
jo
adc
and
loope
mov
push
addr16
jbe
xor
add
fisttps
pushl
lock
stos
sbb
repnz
and
pop
jmp
push
sti
shl
sub
mov
add
popf
or
hlt
pop
jl
int3
pop
inc
sub
lret
repz
repnz
test
orb
push
cmp
ljmp
push
lock
xlat
mov
in
es
sbb
fildll
and
sbb
cmp
arpl
mov
sub
mov
mov
test
pop
and
add
scas
and
pusha
cmpsl
mov
push
sbb
push
push
loop
lods
adc
pushw
fimuls
fsubrs
popl
cld
mov
gs
jecxz
fs
jns
insb
sub
outsl
jne
in
mov
mov
bound
and
outsb
sbb
push
fwait
jb
movsb
psubb
out
lahf
pop
pop
mov
out
loop
jno
leave
sbb
mov
xlat
mov
mov
pop
std
outsb
in
aam
inc
lahf
xchg
fwait
dec
cmp
push
add
incl
mov
adc
movsb
add
or
cmp
xor
add
fwait
mov
repz
fcoms
fsubrl
xchg
in
dec
lcall
call
pusha
call
mov
les
sub
cmp
ss
jg
std
int
pushf
jmp
sub
stc
negl
pop
adc
inc
lods
inc
xchg
sbb
mov
mov
fstpt
inc
and
ror
aam
jo
sub
mov
shlb
or
sbb
lds
repnz
fisttps
jbe
clc
dec
sbb
and
sub
daa
call
pop
lock
jns
jge
jg
rolb
lret
mov
xlat
fs
imul
mov
je
scas
idivb
add
mov
sub
xor
adc
out
insl
mov
insb
cmp
enter
imull
mov
sbb
pop
rcll
jg
mov
inc
gs
ljmp
sub
and
cmp
mov
dec
cmc
ss
push
xor
sub
dec
add
adc
mov
push
std
inc
dec
jecxz
imull
je
mov
dec
repnz
filds
std
xor
inc
js
jmp
les
xchg
iret
cmpl
fdivs
mov
aaa
hlt
pop
clc
ss
pusha
test
sub
jns
scas
or
sahf
fmull
adc
push
sbb
gs
test
fidivrl
test
addr16
sbb
xchg
cmp
jne
icebp
sub
jno
cmc
mov
pusha
jmp
repnz
stos
iret
and
jae
fldt
adc
shl
fcoml
sub
negb
xchg
lock
adc
sub
in
xchg
cli
cmpsl
or
mov
out
xorl
sarb
aaa
xorb
addr16
jmp
iret
fwait
add
call
pop
daa
not
jp
fcoml
inc
and
test
sbbb
or
mov
ficoml
sub
cmp
or
mov
xor
sub
push
cmp
mov
not
adc
loopne
fcmovbe
add
int3
sbb
sbb
sti
xchg
lret
xchg
mov
inc
icebp
cmp
imul
inc
je
dec
or
pushl
lods
cmp
lahf
sbb
push
pushl
mov
pop
je
add
out
int
xchg
cltd
xor
ljmp
and
mov
ljmp
pop
or
dec
fmul
loope
adc
call
bound
ljmp
ds
subl
push
cmpl
repz
sub
lods
outsb
stc
mov
jecxz
fidivrs
jne
sub
inc
jne
jns
psubd
clc
addr16
es
jns
imul
xchg
mov
xchg
rorl
movsl
jp
call
ret
xchg
cmpsb
call
push
pop
push
stos
mov
les
or
pop
xchg
push
mov
xor
lahf
out
sub
sbb
push
jno
jle
or
incl
das
xchg
xchg
movsl
testl
insl
or
jg
xchg
or
pop
fisttpl
test
fs
cmp
mov
sub
ljmp
dec
ds
add
jge
std
xchg
fbstp
lret
cmpsl
sub
sub
mov
testl
jbe
pop
imul
dec
mov
lds
pop
pop
cmp
loop
and
mov
jp
lds
or
and
flds
sub
dec
imul
sub
js
xor
sbbb
add
loope
out
or
daa
sbbb
into
stos
incb
mov
dec
js
orl
jns
pop
bound
js
sub
movsl
push
mov
adc
daa
fcmovnb
out
imul
inc
out
mov
roll
or
jge
gs
mov
push
add
lcall
add
inc
scas
lret
xchg
lcall
add
cs
in
push
lds
adc
call
scas
addb
mov
js
rcrb
jge
lcall
push
loopne
and
aad
hlt
or
xlat
scas
pop
xor
dec
sbb
sbb
jg
mov
iret
sbb
and
lods
fwait
inc
repz
inc
dec
xor
pop
dec
push
nop
xor
push
sub
dec
and
mov
cmp
adc
ja
daa
xchg
sbb
js
sti
int3
incl
jecxz
or
jno
inc
test
jmp
mov
xchg
pop
lods
cmc
and
ficompl
cmc
fsts
jg
cmp
sbbb
xchg
stc
es
xchg
std
cmp
andb
sbb
and
push
sub
cmp
cmp
cmp
outsb
negl
and
adc
jmp
adc
aam
shlb
dec
jo
sub
mov
std
pop
sahf
pop
pop
push
push
dec
negl
xor
mov
push
movsl
aas
aas
pop
push
mov
cmp
xor
shlb
int3
cs
mov
adc
test
sti
lret
outsl
cmp
push
fwait
pop
icebp
mov
test
arpl
in
mov
push
sub
mov
sti
sbb
or
sub
xor
daa
imul
mulb
cltd
jno
xor
rorl
lret
mov
cld
jecxz
push
jo
into
or
mov
mov
xchg
and
imul
outsl
lcall
decl
mov
daa
push
sbb
test
mov
pop
mov
dec
sbb
sub
add
mov
cmpsl
call
addl
arpl
pop
inc
into
pop
jecxz
movsl
jbe
jnp
pusha
lds
in
sub
mov
or
jbe
jns
idivb
jecxz
dec
mov
je
jnp
je
push
leave
xchg
sub
xchg
nop
imul
std
outsb
mov
ljmp
rcll
jge
xorl
js
leave
stc
add
inc
lcall
and
in
mov
mov
push
sub
outsl
xor
pop
pop
mov
pop
pop
lods
xchg
fcompl
cmp
jle
jmp
pop
pop
adc
inc
add
out
cmp
rcl
or
jbe
outsl
cmc
test
or
test
enter
stos
ret
push
data16
mov
sub
mov
ljmp
jge
ja
movsb
xchg
add
cltd
mov
popa
fdivl
jbe
mov
sbb
jbe
and
and
in
sbb
push
clc
movsl
fwait
mov
mov
std
fdivrs
sahf
and
pushl
mov
sbb
clc
stc
add
jmp
es
je
ja
push
dec
cmpsb
dec
inc
or
lcall
out
or
enter
jmp
jge
add
or
xchg
jmp
push
jl
sbb
icebp
xchg
pop
test
ds
pop
lahf
adc
or
jb
out
pop
pushl
loop
ljmp
les
and
pushf
clc
mov
push
cmp
fs
in
loop
filds
add
cmp
repnz
jno
xchg
ret
inc
cmp
in
or
xchg
mov
mov
or
mov
test
cmp
or
adc
clc
in
out
idivl
in
push
cld
lods
cmp
les
push
fiadds
out
lret
pop
add
aad
movsl
xor
fidivl
mov
or
mov
push
icebp
jno
scas
fwait
nop
pop
mov
sbb
nop
test
mov
mov
in
cmp
fnstcw
sbb
hlt
adc
mov
inc
lock
stos
pop
imulb
cwtl
sarb
aaa
dec
adc
or
adc
sub
fildll
dec
sahf
mov
jb
in
pop
jo
dec
push
aad
mov
xchg
jmp
fstps
cmp
cli
or
xchg
das
mov
sub
in
pop
xlat
push
mov
push
lcall
iret
and
pop
test
lds
imul
or
arpl
mov
and
fistpl
out
or
jb
add
dec
xchg
clc
cli
sbb
mov
or
jg
fldenv
pop
dec
mov
clc
jnp
ret
int
xor
or
ss
sub
mov
sbb
lret
jle
adc
pushl
bound
cld
pop
inc
lock
mov
adc
out
scas
jg
sbb
mov
clc
call
lods
mov
mov
pusha
in
adc
ret
iret
icebp
mov
cmc
jecxz
ljmp
mov
pop
ror
and
sub
fstl
movsl
ret
fimull
pop
xchg
div
imul
pop
icebp
cli
dec
imul
xchg
in
ljmp
sub
popa
or
jecxz
xchg
and
push
mov
sub
mov
jge
pop
or
jle
sub
xchg
lret
insb
push
sbb
ljmp
mov
ljmp
push
ja
insl
jmp
jns
std
xor
fstpl
lcall
pop
inc
sbb
incl
das
stc
push
and
mov
dec
sub
das
fs
or
mov
mov
or
push
loope
mov
lods
cmp
mov
dec
jmp
push
add
dec
fistpl
mov
stos
cmp
loop
sub
test
scas
out
test
cmp
sbb
mov
or
clc
dec
pusha
lock
icebp
ljmp
and
fwait
mov
andl
aas
and
cli
aam
jmp
idiv
lods
adc
push
sbb
into
cmp
xchg
nop
cwtl
pushl
lods
and
mov
push
pushl
lcall
shrb
adc
mov
lock
pop
shll
dec
jmp
add
xor
mov
dec
fdivr
fs
cmp
mul
add
sar
dec
push
outsb
test
ficoms
sbb
sub
lahf
incl
xor
add
xchg
mov
das
jne
pop
adc
cmc
dec
mov
negb
sub
sbb
inc
cmpsl
out
pop
mov
xchg
xchg
mov
adc
je
je
fldt
sub
adcl
test
clc
mov
pop
mov
mov
xor
ja
outsb
sbb
cmpsl
xchg
or
fldz
decl
or
loop
dec
pop
jnp
mov
xchg
scas
pop
sbb
addr16
call
jle
xchg
lods
lcall
insl
mov
lock
daa
and
push
repz
adc
shlb
mov
adc
icebp
xlat
fsubl
jmp
xor
adc
sahf
lods
sti
pop
mov
loopne
jg
xor
insb
jbe
stos
jns
subb
pop
and
or
call
int3
inc
call
sbb
mov
mov
push
ficomps
jbe
and
xchg
mov
ljmp
lcall
mov
pop
aaa
ud0
stos
mov
mov
mov
or
sbbl
mov
cld
adc
jbe
and
or
bound
push
imul
adc
or
decl
test
xchg
ds
incl
lods
int
call
push
pop
fs
cs
sti
addr16
mov
les
xchg
mov
dec
pop
pushf
mov
push
adc
je
scas
shlb
pop
stc
or
int3
sub
lret
shrb
movsl
jge
in
pop
jmp
push
xor
jbe
mov
add
mov
popf
int3
lret
mov
mov
repnz
and
jns
mov
fldt
lods
movsb
add
adc
and
es
cltd
ficoms
lret
push
sbb
mov
xchg
call
into
mov
mov
fwait
adc
lret
cwtl
mov
pop
sub
dec
fcomi
dec
popa
pop
das
and
inc
divb
sahf
jbe
add
scas
cwtl
aam
in
and
mov
stos
mov
int3
cmpb
jne
and
pushl
cmc
pusha
popa
adc
or
movsb
cmp
mov
fucomip
adc
lcall
push
cli
push
jno
push
or
call
inc
or
jnp
cmp
fsubrl
mov
xor
lcall
mov
jle
add
pushl
mov
inc
cmpsb
sar
decl
sbb
out
jge
mov
movsb
lcall
push
repnz
mov
aaa
mov
call
pushl
push
ss
pushl
int
test
or
fs
inc
not
movsl
aad
sub
mov
dec
mov
loopne
ljmp
pop
test
je
xor
call
cli
inc
pop
lcall
scas
add
mov
xor
push
mov
xchg
cmp
rol
divl
lcall
ljmp
les
jmp
in
xor
xchg
cmp
lods
push
cmp
and
incb
decl
insb
sub
stos
cmp
lods
incl
lods
pusha
sbb
xchg
stos
mov
mov
xorl
pusha
sbb
add
push
jge
daa
decl
xchg
sub
adc
sbb
call
divl
and
lahf
shll
rcll
push
dec
out
jo
lea
push
loopne
add
clc
jbe
sub
js
adc
test
repnz
out
adc
pusha
stc
dec
movsl
clc
ret
call
cmp
std
stos
add
xchg
aaa
ret
or
sbb
in
dec
sub
mov
push
and
mov
imul
inc
inc
test
dec
fsubrp
dec
add
inc
fdivs
jae
xchg
dec
or
dec
cmpsl
lods
mov
mov
mov
lods
clc
inc
xlat
popa
dec
mov
rolb
pop
aad
push
stc
sbb
cmp
mov
jae
and
mov
clc
inc
sahf
mov
out
popa
std
in
or
push
aaa
cmpsl
mov
fisttps
xchg
xchg
mov
push
in
jg
mov
adc
stos
sub
xchg
jbe
push
enter
xorl
pop
mov
shlb
or
mov
loop
xchg
xlat
push
pop
cmp
mov
rolb
jns
into
std
sub
sub
aad
inc
pushl
fnstcw
lock
sbb
and
push
inc
lcall
push
inc
pop
inc
enter
sahf
inc
aad
adc
ja
ret
xchg
dec
add
lret
mov
mov
sub
sahf
or
in
xor
jg
std
mov
mov
stc
cmpsb
imulb
mov
or
aaa
negb
mov
subl
out
jmp
xchg
mov
nop
test
aam
fildll
mov
loopne
push
sbb
cmc
call
pop
xchg
gs
or
mov
ds
adc
lret
popf
pop
push
mov
and
jge
jmp
scas
xor
mov
mov
sub
decl
sti
loopne
and
in
shr
pop
lock
or
call
mov
jns
idiv
lods
cmp
pop
mov
jb
fwait
shrl
sbb
cmpsb
cmp
out
jo
jbe
insb
xchg
mov
xor
out
sub
push
int
xchg
sbb
mov
pop
mov
fcmovnb
xchg
xor
add
jg
add
mov
in
movsb
xor
shrl
pushl
stc
outsl
inc
mov
pop
ljmp
fcoms
aam
pop
pop
add
pop
xchg
neg
test
sbb
pop
adc
jbe
cmp
fdivrp
iret
cld
movsl
xor
and
pop
jg
mov
sbb
sub
mov
loopne
cli
pop
imul
xor
jo
incl
push
sti
imul
xchg
jge
xor
jg
call
sbb
gs
push
cmp
adc
xchg
int
mov
ljmp
call
fldl
inc
push
cmpsb
pusha
sbb
pop
mov
cmp
iret
adc
jmp
xchg
loop
mov
push
xor
dec
push
adc
cltd
mov
cmpsb
sub
lret
inc
nop
cmp
clc
mov
add
xor
ss
xor
mov
inc
push
xlat
lds
cli
xor
and
mov
inc
stc
insb
out
jmp
les
lcall
inc
std
ds
inc
jno
sbb
scas
mov
jbe
rcrb
test
sbb
push
xor
pop
aam
aad
push
arpl
ds
adc
jmp
jae
pop
scas
cmp
sbb
pusha
movsb
xchg
sti
jnp,pt
or
hlt
mov
cmp
mov
loope
sub
mov
in
mov
es
adc
jge
mov
mov
sarl
inc
xor
lcall
movsb
push
xchg
int3
mov
mov
dec
inc
mov
and
jmp
push
push
leave
jb
jnp
movsb
int
jae
push
sub
sub
mov
adc
pop
pushf
sub
jne
ficomps
adc
fldcw
rorl
push
add
in
mov
shrl
xor
adc
ds
or
ret
mov
inc
mov
popf
cmp
and
cmpsb
incl
sub
decl
add
cmpl
xchg
out
dec
cmp
fwait
push
cmc
aad
sbb
sub
imul
pop
lcall
mov
add
and
data16
push
pushl
push
bound
aas
dec
jnp
hlt
ljmp
movb
leave
mov
bound
jno
or
jbe
rcl
mov
xor
jbe
sbb
sbb
inc
test
je
or
clc
dec
std
sub
in
call
add
jl
dec
push
and
in
in
nop
cmp
dec
lods
jno
cmpsb
mul
dec
jp
pop
sbb
xor
jbe
orb
or
out
shlb
shrb
or
pop
or
sbbl
push
call
mov
call
inc
mov
out
mov
mov
scas
imul
adc
add
add
sahf
xchg
mov
iret
andl
mov
cli
mov
inc
and
lods
int
add
and
stos
mov
adc
sbb
dec
das
mov
mov
rorl
xor
insl
shrb
mov
loope
flds
mov
jne
mulb
call
aaa
ljmp
sbbl
and
jecxz
xor
push
ss
lcall
mov
lcall
push
sti
inc
pop
cld
sub
das
pop
pop
sbb
mov
jae
or
pushf
inc
std
ljmp
stos
pop
pop
sahf
mov
adc
push
out
jp
xchg
cmove
and
push
add
dec
and
mov
adc
lock
popf
aas
mov
movsl
pushl
xchg
push
pusha
xor
lcall
lahf
imul
dec
fs
out
movsb
out
daa
outsl
xor
adc
jns
jmp
or
jl
and
arpl
les
in
sahf
cmp
mov
in
rclb
test
and
push
sub
or
and
pushl
test
loopne
pop
xor
mov
xchg
sbb
adc
ja
dec
cltd
lahf
push
inc
aam
mov
enter
xorl
push
out
sub
and
out
fs
sbb
sti
js
pop
dec
push
fidivl
in
and
arpl
pop
test
pop
daa
ud0
ss
mov
dec
cmp
ds
add
add
inc
push
and
sbb
pushl
out
jle
mov
data16
jp
sbb
ret
int
test
mov
iret
ljmp
out
movsl
jbe
je
push
ja
xor
cmp
decl
push
fistl
xchg
ret
sub
inc
jne
and
aaa
jae
jns
or
add
inc
and
in
sbb
adc
imul
mov
fdivs
xorl
outsl
addr16
imull
push
ja
ljmp
sarb
inc
xchg
sbb
movsb
dec
mov
inc
jecxz
lcall
sarl
xor
int
cmp
sbb
in
jle
jmp
cmp
push
push
pusha
pushl
js
jge
sub
stc
cmpsb
out
mov
push
shrb
fmull
xor
popf
push
cli
push
int3
mov
and
mov
cwtl
xchg
mov
xor
adc
sbb
js
sub
test
and
je
push
sar
sar
pop
icebp
in
cmp
test
shll
out
xchg
mov
das
loop
js
dec
or
lret
jnp
sub
incl
cmp
pop
mov
push
fnsave
jnp
inc
cmp
push
jle
shl
jmp
dec
inc
adcb
scas
xor
cmc
add
leave
popa
sbb
aaa
call
push
bound
adc
push
adc
mov
in
cwtl
xor
inc
mov
ljmp
lret
mov
les
adcb
or
sub
or
dec
aas
movb
cmp
jmp
mov
jecxz
xor
adc
sub
add
mov
out
call
loop
mov
test
sbb
jge
adc
and
xor
sbb
jmp
jp
xchg
iret
decb
sti
in
outsb
pop
jbe
mov
pmaxsw
xchg
sub
addb
pushf
scas
shlb
lds
mov
adc
sbb
pop
out
daa
mov
popa
push
test
dec
jbe
in
hlt
xor
dec
test
fisttps
idivl
loop
push
sahf
push
push
pop
inc
decl
lret
ljmp
adc
fdivrp
iret
or
into
mov
lea
or
aad
push
xchg
adc
push
aas
push
pop
sub
nop
sub
inc
push
fcomps
jle
outsb
dec
xchg
pop
call
and
in
sti
shlb
push
addr16
xor
mov
push
mov
sub
enter
inc
add
pop
push
lods
fwait
call
xor
mov
add
cld
popf
lea
repnz
cmp
xchg
inc
rcr
aaa
push
cmp
enter
mov
jg
popl
les
adc
sbb
push
insb
test
in
pop
push
xchg
push
xchg
jmp
dec
idivb
xor
js
sub
pop
jge
jmp
mov
and
jle
xor
inc
decl
pop
ret
movsb
xchg
pop
and
in
xchg
xor
ret
incl
pop
push
xchg
fucomi
rolb
imul
pop
mov
cmc
cmp
inc
stos
testb
push
aaa
cmp
sahf
mov
cmp
xchg
jp
icebp
pop
jbe
iret
ja
mov
add
jmp
mov
inc
or
sub
int
mov
scas
ljmp
cli
push
or
movl
adc
adc
test
xchg
out
ret
sahf
xor
stos
dec
jns
ss
jbe
nop
ds
add
jle
pop
gs
xchg
xchg
test
rorl
fisttpl
decl
lods
mov
sbbb
cwtl
inc
jmp
sub
incl
push
incb
in
orb
clc
int
aaa
lock
sahf
pop
cmc
sti
adc
mov
nop
stc
mov
test
lret
test
stos
mov
ljmp
pop
mov
sub
rcl
push
aaa
xchg
add
or
xchg
jmp
leave
adc
outsl
lcall
into
push
xor
mov
inc
mov
add
push
push
jne
jbe
mov
fdivs
inc
dec
mov
sbb
into
mov
and
int
movb
cmp
cs
test
repz
insb
mov
cmp
in
push
je
aad
hlt
incl
lret
mov
iret
inc
rorb
cmp
test
bound
mov
mov
push
outsl
js
aam
test
jmp
cmc
clc
and
push
je
xchg
je
add
jmp
adc
xchg
loopne
cltd
movl
cmp
mov
dec
arpl
stc
or
or
cld
mov
push
jl
push
sbbb
clc
jbe
rorl
add
adc
aad
xchg
inc
icebp
or
and
js
ffreep
mov
pop
loop
or
push
lahf
inc
mov
pop
jo
push
lcall
and
idiv
jns
lods
lret
push
decl
dec
aad
stc
push
rcll
pop
pop
loop
gs
int
xchg
jmp
lahf
aad
ret
data16
incb
jbe
or
fidivl
mov
call
mov
mov
test
inc
mov
mov
notb
sbb
or
outsl
testl
in
xor
data16
mov
cwtl
jmp
jno
mov
mov
cmp
adc
cmc
adc
insl
sub
dec
mov
ret
xchg
test
add
jmp
inc
mov
fnsave
and
or
es
call
mov
add
es
jecxz
movsl
std
sti
mov
in
xchg
lcall
push
inc
insl
fstpt
imul
test
ret
lock
jbe
push
mov
adc
mov
fsubrs
pop
into
fsubrs
jns
inc
and
jg
sbb
imul
enter
das
sbb
in
fbld
ja
xor
jp
push
push
das
stc
repz
mov
sub
daa
out
or
xor
aaa
xor
cld
mov
lret
pushf
jmp
out
cmp
enter
lcall
call
insl
pop
repz
sub
sub
xchg
fbstp
jne
int3
out
xchg
jl
and
mov
aaa
leave
lock
or
clc
dec
icebp
and
les
lret
call
cmp
call
pop
add
es
lds
movsb
bound
and
ret
jl
mov
repz
push
mov
xor
dec
ret
clc
das
mov
dec
mov
orl
lret
pop
cmp
pop
lds
jmp
xchg
push
je
mov
mov
nop
sbb
adc
out
pushf
xchg
mov
mov
in
mov
xor
push
mov
add
mov
cmc
push
ja
and
pop
xor
dec
pop
out
xor
pop
sti
sub
pop
jbe
arpl
pop
cmc
sbb
enter
pop
out
inc
movsl
lods
cmp
mov
and
imul
sub
inc
rcr
push
pop
push
mov
xor
cli
popa
sti
ja
jle
fidivs
jmp
aas
nop
mov
pop
call
daa
mov
aam
fdivr
faddl
enter
or
lcall
insl
lods
jbe
popa
incl
idivl
orb
stc
jecxz
fsts
xchg
mov
jl
jbe
shll
mov
pop
in
lret
jne
xchg
sbb
rcll
push
enter
rorl
and
cmc
mov
jp
imul
jl
movsl
das
inc
sti
mov
sub
cli
decl
jnp
pop
testl
push
incl
fnsave
je
adc
adc
xchg
sti
mov
mov
mulb
or
add
fists
jle
imulb
cmpsl
ljmp
jg
incl
push
loopne
mov
ret
jge
mov
inc
rol
out
cld
out
ljmp
sti
add
add
pop
mov
out
je
jbe
cmp
popf
or
add
in
jmp
out
jp
push
sub
iret
cmp
inc
cmc
inc
mov
dec
sbb
lcall
mov
mov
cmp
dec
mov
adc
jmp
or
dec
xchg
push
mov
les
loop
add
xor
call
mov
inc
rcrl
push
sbb
lcall
mov
sti
fs
xchg
cmp
add
mov
mov
imul
lea
sub
jne
std
movsb
xchg
fsubrp
mov
lea
push
pop
or
test
mov
adc
sub
out
adc
push
xchg
fcmovnbe
xor
iret
out
aas
or
jnp
lods
jnp
xchg
sti
in
jno
sub
outsb
or
ret
adc
incl
push
mov
es
je
adc
mov
mov
mov
call
adc
mov
dec
incl
add
ret
sub
shlb
xor
sbb
cld
cmp
es
clc
out
dec
sarb
fdivrl
lcall
clc
out
jmp
int3
inc
flds
adc
sub
inc
jl
cmpsl
sar
pushf
ja
int
pop
testl
sbb
mov
push
ljmp
xlat
mov
stc
les
arpl
bound
outsl
cmp
mov
nop
sub
xor
adc
or
hlt
aam
dec
sub
xor
pushf
dec
clc
stos
cli
insb
mov
or
pushl
addl
lar
dec
jge
mov
cltd
outsb
and
test
das
arpl
and
push
jmp
xor
jle
test
decl
andb
xor
ret
sbb
add
enter
decl
pop
push
push
fsts
int
mov
mov
dec
or
xchg
inc
mov
imul
sub
dec
jno
dec
in
and
aas
les
enter
clc
outsb
push
mov
push
pushl
jecxz
sub
pop
lret
add
ljmp
repnz
sbb
mov
data16
jnp
pop
xorb
pop
push
test
pop
mov
leave
mov
test
sbb
jg
mov
add
or
ljmp
mov
xlat
mov
les
mov
and
cmp
sbb
adc
shlb
int3
mov
mov
sahf
mov
fnstsw
sahf
or
adc
xlat
push
loop
outsl
lods
sbb
aaa
inc
enter
sbb
jns
ret
sahf
mov
mov
out
std
mov
fs
dec
mov
cld
lock
xchg
pop
test
insl
ja
incl
xchg
imul
xchg
fdivl
dec
lcall
cmpsb
or
imulb
dec
test
xchg
mov
idivl
sub
jge
jbe
test
sub
stos
and
negb
pop
andb
sbb
test
test
aaa
out
psadbw
mov
mov
and
push
cmpsl
mov
jnp
sbb
out
cli
test
jns
or
sub
inc
sar
mov
movsl
decb
lds
or
jbe
add
fsts
sbb
jl
mov
or
insl
sbb
ljmp
add
cmp
xor
test
in
dec
and
mov
inc
sbb
je
xor
mov
test
pop
mov
iret
outsl
ja
sub
jo
repz
adc
add
movsb
sbb
out
pop
jbe
push
cltd
xchg
add
fistpl
push
mov
push
sub
xor
jne
jns
and
out
scas
jl
sub
or
scas
into
and
adc
loop
mov
mov
cs
adc
sahf
cmp
mov
clc
arpl
movl
cmp
mov
push
dec
ud0
push
xor
jnp
jbe
inc
lahf
sbb
xor
xchg
sti
fdivs
or
outsl
stos
adc
cmpl
cmp
insl
cmpsl
push
pushl
inc
scas
cmp
fisubrl
stc
mov
popf
negl
add
jae
ret
sub
in
lock
scas
inc
or
adc
in
mov
lahf
push
sahf
pop
loop
aas
add
jl
shrb
mov
adc
lods
jmp
out
sub
mov
sbb
jmp
jns
lret
cmp
jmp
xchg
nop
shll
movb
dec
sub
sbb
push
jne
and
out
test
sub
sahf
push
lock
outsl
adc
notl
xlat
cmp
insb
sub
ljmp
shrl
pop
mov
jl
mov
movsl
lcall
rsqrtps
std
cmp
mov
pop
and
neg
movsb
fistpll
push
cmc
pop
jae
jp
or
mov
ljmp
aas
or
mov
ficomps
pop
aad
lcall
aaa
call
jb
inc
test
cmp
xor
sub
mov
or
jbe
cltd
mov
mov
test
jg
iret
mov
push
mov
push
push
fcomps
mov
cmp
out
and
pushl
sub
pop
ja
cmp
loopne
add
or
mov
sub
adc
dec
fcoms
mov
push
mov
ret
pop
xchg
movsl
pushf
xor
into
xlat
and
inc
icebp
imul
adc
jno
mov
jge
pop
out
sub
fbld
cmp
pushl
xchg
clc
pusha
or
imul
in
outsl
xchg
int3
pushl
inc
pusha
roll
into
ja
add
shrb
mov
notb
clc
hlt
and
mov
call
inc
test
lea
add
cmp
mov
inc
mov
or
shl
xchg
div
pop
inc
out
mov
arpl
lds
or
shl
mov
mov
call
add
dec
es
testl
adc
xchg
dec
scas
xor
adc
daa
mov
push
mov
call
adc
xchg
xchg
shr
mov
and
cmp
push
sbb
sarb
ret
lret
gs
pop
aaa
je
insl
jge
jp
and
or
jp
mov
stc
cmp
int3
jmp
out
xor
idivl
stc
sbb
cwtl
and
push
add
fistps
loop
out
daa
push
or
jb
jb
sbb
idivl
jnp
push
adcl
mov
test
rolb
cmp
pop
jo
or
test
push
add
sub
inc
mov
rorb
incl
add
mov
mov
movsl
ja
in
xchg
fwait
or
and
dec
xor
ljmp
push
gs
test
lock
adc
fmull
jmp
stc
outsb
mov
cmp
lods
stos
push
adc
jbe
sub
scas
lods
clc
lcall
xor
cmp
stos
mov
or
adc
ss
std
pop
dec
out
dec
stc
dec
xor
ljmp
and
test
lods
lret
mov
bound
aaa
pop
add
ds
in
mov
sbb
pop
mov
mov
jecxz
es
xchg
stos
jge
sbb
int
decl
xorb
sub
sub
test
loop
mov
or
daa
adcl
jno
sarb
sbbl
adc
outsl
scas
je
movsb
fstl
mov
insl
mov
and
lret
repz
pop
add
inc
sub
subl
cmp
mov
adc
inc
add
enter
shlb
out
std
sub
jbe
xchg
push
pop
cli
or
outsl
js
mov
fdivs
add
push
pushf
mov
rcrl
mov
sbb
ds
lahf
and
iret
call
mov
sar
cmp
jnp
lret
mov
ljmp
into
sti
pop
setge
add
incl
mov
mov
call
aaa
dec
jbe
mov
sbb
cmpsl
scas
fnstenv
or
les
jb
outsb
inc
cmp
jecxz
es
fwait
lret
nop
cli
push
sub
ficompl
or
xchg
cmp
hlt
push
out
ds
ja
addb
ret
ljmp
out
add
rolb
insl
adc
push
pop
dec
jne
dec
std
jge
negb
outsb
je
ret
les
dec
adc
je
adc
ret
stc
xorps
jbe
sbbb
call
mov
jmp
stos
adc
and
xor
cld
mov
sti
push
xchg
mov
mov
notl
loop
movsl
std
fwait
or
mov
mov
push
insb
adc
xchg
rolb
add
movsl
adc
or
push
stos
cltd
mov
cmpsl
cmp
fsubl
test
mov
jae
shl
jg
pop
test
or
cmp
jp
sbb
xlat
push
cmc
mov
scas
add
ror
cs
mov
cli
and
push
in
or
lock
push
cmpsl
pop
je
cmpl
and
jecxz
outsb
sbb
lea
in
and
into
cli
xor
adc
sub
push
mov
sbb
sar
add
ss
add
mov
aas
fadds
arpl
aaa
cld
push
pop
jle
mov
in
xor
adc
arpl
xchg
xor
push
rcll
mov
mov
add
xchg
push
iret
ret
ja
or
lea
call
cmp
pop
ds
pop
outsl
push
mov
out
cmc
mov
push
xchg
inc
decb
es
call
adc
pop
mov
daa
insb
enter
lods
cmp
mov
ja
flds
repz
mov
dec
xchg
pusha
jge
das
lret
sbb
shlb
mov
insl
push
sbb
and
arpl
push
pushf
cmc
out
cmpps
je
clc
sti
lea
sbb
xchg
in
cmp
jbe
lahf
mov
lret
fwait
movsb
imull
push
sub
mov
call
ljmp
jmp
out
sub
loop
shrl
push
xchg
mov
jmp
test
pop
ja
dec
inc
aas
xchg
dec
lcall
call
aam
pop
cwtl
mov
ljmp
xor
add
das
or
fs
xor
mov
daa
jae
dec
mov
lods
loopne
mov
stc
ja
and
inc
int3
repz
cmp
iret
push
in
jne
inc
or
sbb
stos
vhsubps
lret
inc
mov
inc
pop
jae
xchg
add
mov
aaa
ficomps
pushf
pop
mov
xchg
add
jno
jg
add
jmp
adc
in
sub
lock
xchg
mov
xchg
pop
sub
out
adc
or
test
add
movsl
repz
insl
pushl
add
sbb
shll
add
stos
rcrb
jmp
rclb
pop
ljmp
shl
push
sbb
mov
int
push
decl
jle
rorl
cs
or
incl
and
push
jns
mov
daa
pop
add
lds
sbb
and
pop
addr16
incl
int
push
jge
adc
pop
gs
sti
shr
scas
ftst
subl
aam
mov
ret
addb
jle
push
adc
pop
insl
les
jmp
sub
jne
popf
or
lcall
mov
lret
pop
ja
out
sbb
lock
in
and
aaa
xor
jbe
repnz
scas
or
nop
xchg
pop
pushl
dec
stc
push
mov
dec
cmpsb
call
pusha
mov
iret
sbb
nop
and
jle
lret
inc
std
xor
dec
cli
imul
jmp
lock
jmp
jg
inc
popa
aam
je
testl
cs
out
push
mov
and
bnd
or
jno
push
inc
dec
xor
xlat
sub
lods
mov
dec
cmp
dec
adc
jecxz
rcrb
fiaddl
xlat
lcall
pop
iret
pop
idivl
arpl
jg
sub
ficompl
sub
sbb
dec
mov
adc
xchg
mov
lcall
dec
mull
add
jmp
aad
std
int3
sbb
mov
sub
leave
xor
dec
mov
jmp
mov
popa
push
and
call
sbb
in
scas
cwtl
fbld
pop
jmp
fucomi
mov
pop
mov
or
js
ss
out
cmpsb
hlt
je
and
sub
cmp
push
mov
mov
pusha
pop
xchg
arpl
inc
sub
les
sbb
stos
mov
mov
mov
pop
dec
cwtl
call
fistpl
fistpl
mov
sub
ja
or
ret
sub
arpl
inc
notl
mov
mov
cwtl
das
rorb
imul
mov
or
xorb
mov
xor
ret
mov
jns
or
popf
sbb
xorl
sub
fcompl
xchg
cltd
cmpsl
dec
cmp
push
jge
repz
mov
mov
adcb
inc
jnp
xchg
cmp
ret
mov
and
test
clc
cmp
shl
xor
add
lret
cli
dec
std
sahf
mov
jp
lret
pop
xchg
cs
jl
in
fsubp
ret
jns
mov
lcall
sbb
jmp
fildll
ret
inc
decl
out
pop
call
adc
xchg
addr16
call
movsl
xchg
and
pop
jbe
js
aam
pop
lahf
mov
das
cmp
push
es
call
insb
mov
idivl
mov
incb
push
inc
jmp
pop
lcall
push
mov
call
pop
xchg
lea
daa
or
rcrb
mov
add
push
push
daa
insb
jnp
mov
aam
push
mov
pop
cmp
pop
sti
adc
pop
mov
cli
xchg
inc
pop
or
xor
in
xchg
pusha
mov
jbe
decw
xchg
adc
out
mov
mov
movsl
test
dec
xlat
add
sub
je
pop
cltd
push
lcall
out
sbb
mov
stos
sarb
xor
jmp
stc
in
inc
inc
mov
mov
sbb
test
inc
mov
lods
pop
lds
mov
xchg
mov
and
out
dec
add
shr
mov
add
leave
js
loope
cmp
shlb
lahf
mov
mov
fdivr
lea
adc
movsb
aaa
mov
subl
jmp
shrl
adc
js
pushl
cmp
cli
sbb
mov
int3
pop
call
push
fmul
add
ljmp
mov
xorl
fcmovu
inc
dec
sub
test
das
decl
divl
in
push
xchg
iret
shr
push
dec
sub
mov
adc
std
mov
mov
mov
gs
or
xor
jae
fwait
popa
cmpl
sarl
cmp
es
sub
jmp
push
stc
mov
daa
loopne
std
pop
outsl
push
mov
lock
add
xor
sub
test
sbb
xchg
mov
and
add
jnp
mov
jbe
inc
fwait
sti
insl
es
push
decl
rcrl
cmp
scas
aad
ds
gs
pop
imul
mov
dec
ret
xor
stc
inc
inc
pop
das
lock
inc
call
dec
mov
insl
dec
lcall
cmp
sbb
andl
lcall
call
ficoml
lret
stc
lcall
sub
call
int3
dec
pop
xchg
outsl
jmp
cs
aam
mov
xor
test
adc
ficoml
add
cmpsl
leave
ja
fdivl
es
addr16
mov
cli
jge
negl
cmp
leave
test
sub
sub
loop
scas
popf
xchg
subl
push
jmp
dec
fwait
and
sub
inc
adc
mov
outsl
push
enter
pop
sbb
fs
and
inc
xor
es
cmc
mov
aad
add
mov
push
into
std
ret
mov
mov
iret
mov
inc
adc
pop
jo
test
insl
push
add
mov
loopne
mov
xlat
inc
xor
push
sub
pusha
cld
fisubl
sub
jne
inc
dec
les
pusha
push
icebp
das
mov
add
pop
inc
in
pusha
aaa
lcall
arpl
in
outsb
mov
add
or
int
pop
les
subb
pop
cmp
int
out
dec
bound
xchg
pop
add
inc
shll
cmpsl
fcoms
add
gs
inc
aaa
push
lcall
dec
lcall
fstps
xor
lea
enter
aad
xor
add
loopne
mov
cli
pop
mov
xor
cmp
pop
add
cwtl
push
cwtl
je
movsb
sub
xchg
movsl
in
decl
cli
push
outsl
call
aaa
push
cwtl
lcall
cmp
push
mov
pop
lret
pop
call
nop
inc
out
sub
mov
push
sbbb
lret
pop
dec
movsb
or
es
in
ss
enter
inc
mov
std
popa
movsb
xchg
cld
ret
lock
sbb
or
and
and
mov
push
xchg
add
rcrl
sub
push
mov
add
or
adc
xor
push
jns
cmp
xchg
sub
and
punpcklbw
insl
std
cmp
shll
cmp
xor
cli
test
incl
lahf
es
mov
mov
test
in
clc
pushl
test
inc
scas
jns
cmp
fnstsw
push
sub
inc
icebp
daa
and
lods
pop
jmp
adc
and
repz
pop
jge
cmpsl
iret
jmp
pop
add
leave
xchg
cld
ljmp
lods
loope
pop
pcmpeqd
fimull
mov
lods
sbb
ja
jno
movsb
push
popf
adc
lcall
mov
sub
arpl
xor
loopne
sub
push
inc
and
decl
fs
imul
mov
add
sbbl
add
or
pop
inc
add
int3
shl
and
test
cmpl
and
mov
adc
test
movb
out
jge
and
ja
cmp
lahf
and
jle
cmp
or
in
ljmp
imul
incl
sbb
dec
mov
ljmp
cld
fwait
out
add
pop
fnstenv
jb
fisttpl
sbb
jbe
dec
repz
inc
jmp
test
mov
inc
jbe
fdivrp
dec
mov
or
sub
test
and
sub
mov
add
movsl
xchg
cmp
lahf
ljmp
in
mov
dec
inc
add
and
out
adc
cmp
push
sbb
fs
lcall
xchg
in
inc
jbe
pushl
imul
push
faddp
jmp
jmp
mov
inc
cs
add
pop
lcall
jns
loope
inc
mov
add
test
out
loopne
or
cmp
imul
imul
ss
mulb
lods
jo
test
mov
in
cmpsl
mov
xchg
push
lret
mov
sub
inc
push
popa
js
dec
lcall
shrl
mov
sbbb
jbe
stc
and
xchg
decl
lods
sti
mov
nop
dec
fisubrs
movsb
adc
lcall
fimull
xor
out
jp
lods
mov
std
or
jae
mov
decl
jle
insl
xchg
shl
xor
sbb
inc
adc
shrl
and
cmp
mov
xchg
out
mov
lret
sub
fadds
popa
std
dec
inc
notl
xorl
lock
push
loop
lahf
dec
cmp
xchg
aaa
stos
and
aaa
or
outsb
mov
jae
adc
push
sbb
sub
mov
enter
movsb
xor
inc
cltd
unpckhps
mov
and
pop
push
push
stc
push
mov
out
sub
mov
inc
int
inc
or
mov
icebp
aas
call
inc
xor
int
dec
fnsave
or
inc
mov
cmp
je
lock
nop
cmp
ljmp
push
das
into
jmp
xor
inc
ljmp
daa
lret
fnstcw
sub
xor
or
adc
out
in
arpl
add
sub
cmp
add
and
mov
adc
cmp
cltd
lcall
ja
jmp
incl
and
arpl
adc
mov
sbb
push
aad
lcall
lcall
fidivl
push
push
ja
sahf
jle
adc
mov
movsb
ja
scas
inc
out
js
adc
outsl
lahf
jmp
xor
mov
xchg
or
pusha
testl
push
test
push
fdivp
dec
filds
stc
les
fcomps
out
mov
mov
jecxz
stc
jne
js
jp
lar
out
pop
jmp
int
je
jg
fmuls
je
fcom
fistpll
mov
scas
cwtl
adc
fstl
cmpsl
push
ss
lret
call
testb
or
jecxz
daa
lods
mov
pop
add
pop
inc
je
jb
inc
sbb
add
fldcw
pop
pushl
push
incl
lock
in
sub
es
cli
fdivs
in
hlt
and
out
jne
jne
mov
incl
or
lret
jecxz
iret
push
out
sbb
lahf
movsl
cld
cld
faddp
sub
mov
sbb
sub
std
pop
mov
fcmovb
add
jl
andb
insl
sbb
out
outsl
lcall
xchg
xchg
jl
xor
cmp
in
adc
xchg
adc
mov
push
ds
incl
lea
add
and
call
loope
fimuls
push
mov
pop
sbb
rol
test
dec
incl
loope
sub
xor
shrb
ja
std
in
push
cmc
or
lret
sub
dec
fdivrl
adc
es
push
jno
mov
push
jmp
sub
pop
call
lcall
cmp
pop
leave
pop
dec
inc
adcl
cmpsl
jl
notl
int3
mov
push
dec
daa
sbb
dec
in
fs
or
and
shlb
xorl
stos
push
xor
cwtl
or
lcall
mov
sub
ja
push
lahf
decl
mov
arpl
xlat
jmp
push
xchg
scas
xchg
adc
adc
mov
or
dec
int3
iret
pop
xor
pop
or
loopne
es
cmp
pop
push
jmp
nop
dec
fnstenv
ds
stc
ja
adc
and
or
js
jbe
jg
cmp
or
push
push
mov
and
jbe
or
jmp
dec
stos
dec
sti
jae
dec
mov
leave
and
nop
lcall
push
pop
xchg
int
sbb
jae
jmp
inc
lea
test
call
dec
dec
outsb
imul
loopne
pop
adc
aaa
pop
xchg
add
pushf
inc
push
lds
fiadds
mov
pushf
fs
sub
push
aas
out
stos
cmp
ret
dec
jnp
out
fildll
cmpsb
fldz
aas
dec
lcall
std
cwtl
dec
jae
push
mov
mov
pop
inc
iret
jp
xchg
mov
mov
stc
jbe
shl
mov
pop
les
sbb
and
inc
and
ficompl
shlb
jge
stos
mov
adc
push
inc
xlat
fidivrl
sahf
jge
pop
adc
mov
lahf
daa
jle
pop
aaa
adc
lret
inc
stos
jmp
sub
dec
cld
mov
mov
out
and
movsl
test
fistpll
outsb
dec
mov
push
imulb
into
jne
mov
mov
xor
arpl
sbb
cmpsb
loope
xorb
sbb
out
fisttpll
and
call
dec
mov
jmp
fsubs
jno
xor
or
dec
jnp
sti
mov
movsl
inc
mov
dec
popl
adc
push
inc
call
xchg
cmp
stos
repz
sub
pop
xor
lahf
sbb
xchg
rorb
stos
xchg
or
fs
jb
out
imul
xor
sbb
sub
ja
loop
sahf
add
pop
inc
jno
sub
inc
jmp
mov
mov
add
aas
mov
lret
jnp
lcall
pop
pop
fdivs
push
data16
and
js
adc
jae
out
pop
and
cmp
cmc
pop
xchg
mov
cmp
adc
jmp
ret
out
cmp
je
sbbl
jg
imul
dec
call
imul
je
out
mov
inc
xor
data16
pop
outsl
add
aad
and
mov
je
enter
fwait
std
add
punpcklbw
jbe
push
ds
cmpl
xor
mov
mov
js
arpl
shlb
mov
outsb
cmp
leave
std
dec
lret
inc
push
cmp
sub
jae
scas
outsb
mov
enter
iret
inc
or
dec
aaa
mov
push
pop
xlat
lds
jmp
dec
lcall
inc
fdivl
add
pop
imul
subl
dec
repz
mov
push
jmp
je
xchg
xchg
std
ret
lods
jge
fildl
mov
pushf
or
or
aaa
jp
mov
fwait
testl
lods
cmp
mov
ljmp
adc
int3
cmc
mov
push
jo
xchg
xchg
cwtl
frstor
popf
dec
adc
ja
jl
cmp
xchg
mov
pop
adc
dec
call
je
jns
adc
xor
sub
daa
xchg
inc
adc
lea
js
jmp
divl
and
pop
fsubs
pushl
dec
push
mov
psubb
scas
xchg
rcrb
mov
cltd
repz
xor
add
or
inc
jbe
xor
add
mov
cmp
jmp
xchg
pop
and
test
in
dec
lcall
mov
cmp
idiv
jp
cmp
lea
call
xor
inc
push
push
jecxz
add
push
mov
cmp
pop
cwtl
lcall
pop
leave
mov
dec
push
std
stc
inc
push
jne
movsb
cmc
push
add
aaa
xlat
adc
pusha
in
adc
xchg
inc
cmp
jmp
push
call
mov
mov
fwait
mov
pop
sbb
bound
cmpsb
imull
rolb
fidivrs
jae
jle
or
push
jb
inc
cmp
mov
cld
and
jle
dec
orl
or
and
jmp
loope
shll
sahf
push
xor
adc
cmp
adc
dec
fcmovnu
aaa
xor
arpl
and
push
icebp
lret
mov
fisttpll
mov
xlat
jnp
push
scas
mov
xchg
jbe
outsl
mov
xorb
in
sbb
sarb
mov
cmp
add
add
sbb
int3
iret
sbb
gs
pop
aas
add
scas
lods
lret
lods
lods
les
sbb
push
lock
cltd
xchg
pop
inc
inc
sarl
aam
mov
jno
jb
mov
std
repz
imull
push
nop
add
outsb
ljmp
xchg
aaa
lea
dec
rcr
dec
jge
adc
fistps
stc
jle
out
mov
movsb
rolb
jnp
mov
arpl
ljmp
test
aas
push
cmc
pop
lret
adc
lock
testl
inc
aaa
inc
sbb
ja
in
dec
fwait
pop
add
mov
xor
aam
sbb
dec
mov
pop
movsb
sbb
idivb
lret
or
imul
ja
lret
int
lahf
push
sbb
fnstenv
sbb
cld
fnsave
dec
pushl
je
loop
ljmp
shlb
jle
ja
mov
cli
incb
fisubrl
repnz
mov
dec
mov
jb
jo
cmp
mul
jns
xchg
fistpl
ds
mov
adc
jne
daa
adc
call
add
xchg
ljmp
lret
mov
arpl
sbb
xchg
loop
jne
out
push
and
pop
push
lret
jbe
arpl
lret
mov
and
adc
insl
lcall
stos
cmp
ljmp
jmp
sbb
pusha
fisttps
mov
cwtl
mov
call
mov
dec
add
adc
in
mov
enter
cli
incl
sub
xchg
ljmp
lahf
adcb
cltd
mov
xor
and
mov
mov
cwtl
ficoml
ja
scas
fidivrl
lds
and
sub
pop
sbb
das
mov
je
in
ljmp
dec
xchg
or
mov
mov
adc
pushl
push
lcall
dec
pushf
add
pop
aaa
jns
adc
jo
and
cmp
sbb
add
push
cmp
push
cmp
es
aaa
decl
add
xor
sub
and
and
aam
adc
idivl
lret
movsl
jno
pop
mov
inc
dec
ret
repz
pop
lds
jo
sub
mov
je
outsb
lahf
test
out
and
mov
sub
ljmp
shl
push
fwait
adc
dec
mov
jle
in
bswap
ficomps
add
incl
adc
jmp
lds
cmp
jae
and
mov
mov
cmp
sbb
and
pop
push
in
jo
sub
ficoms
jb
call
jno
call
test
adc
stmxcsr
or
inc
out
ljmp
mov
push
ss
orb
xchg
push
mov
dec
cltd
outsb
aad
xor
daa
pop
lcall
movsb
xorb
test
or
and
fistps
ret
xchg
add
xchg
pop
test
scas
xor
xchg
mov
push
lcall
xlat
inc
decl
movsb
adc
imul
scas
mov
out
lcall
inc
xchg
sub
jmp
test
inc
stos
mov
decl
outsb
jnp
insb
add
lahf
lret
clc
ret
loopne
mov
std
jbe
pop
ljmp
mov
enter
fsubrs
mov
aam
popf
or
sub
dec
dec
cmp
int3
push
clc
jo
jne,pt
pop
mulb
sbb
adc
inc
call
mov
mov
arpl
fdiv
out
add
sub
out
xchg
or
mov
lcall
bnd
and
jbe
int3
sub
dec
adc
cmp
ja
jg
movsb
add
push
cmp
insb
rcrb
cld
inc
iret
and
pop
sbb
pusha
mov
sbb
add
adc
or
movsb
xor
sti
and
lret
xchg
emms
mul
xor
sbb
loop
push
adc
imul
ror
or
fldt
ds
mov
push
enter
add
es
push
pushl
cmpsl
rolb
xor
shrb
lods
jge
loope
jmp
jle
dec
lcall
mov
fbstp
lret
testb
mov
pop
push
cmc
cmp
xchg
imul
inc
out
and
ljmp
mov
jns
mov
rcll
aaa
fsubrs
sub
pushl
or
fists
dec
fstps
inc
xor
push
jp
add
push
jbe
pushf
stos
adc
jl
js
jnp
pop
stos
push
inc
add
test
fmuls
incl
cmp
mov
mov
add
adc
inc
sub
mov
and
add
dec
jbe
aaa
icebp
fidivrs
adc
movsb
aas
cltd
call
lock
add
arpl
int3
loopne
add
cmp
cmp
add
mov
fucomip
mov
adc
sbb
mov
jne
repnz
inc
cltd
inc
xor
and
mov
imul
dec
cmpsb
ljmp
dec
pop
clc
jmp
in
inc
outsl
inc
xchg
add
jp,pt
incb
clc
movl
push
sub
sbb
stos
ja
cmpsb
fucomip
bound
adc
pop
mov
mov
js
jp
test
loopne
cli
enter
ret
not
jmp
jg
outsb
stos
std
divl
addl
scas
push
lods
lcall
subb
pop
and
push
xchg
flds
std
adc
rorb
or
out
sub
add
adc
push
jne
pop
fisubl
jns
icebp
outsb
subb
adc
ficomps
and
or
sub
jns
pusha
push
decl
inc
mov
lods
lret
decl
leave
add
sbb
cmp
jmp
mov
or
loope
push
test
aaa
fwait
inc
cltd
popf
add
inc
ja
sbb
dec
shlb
mov
add
inc
pop
xchg
movsl
xorl
or
sub
roll
idiv
enter
out
sub
xor
fbstp
jno
scas
cli
push
add
sub
jns
movsl
inc
adcl
jecxz
adc
rcr
add
aam
push
int3
lods
dec
mov
pop
jmp
movsl
mov
call
mov
add
fsqrt
push
lret
mov
cs
test
or
xchg
cli
pop
add
lcall
mov
mov
divb
divb
call
pop
sbb
and
pushf
jb
rolb
mov
ljmp
aam
movsb
decl
rol
lock
int3
in
pop
jne
test
xor
inc
ljmp
mov
dec
aad
cmp
and
and
jbe
sub
aas
ss
jmp
or
adc
cs
push
jl
inc
subl
pop
vmovntps
enter
ss
mov
aas
xchg
cmpsb
pop
and
cmp
pop
pop
scas
push
pop
inc
cmp
dec
ja
add
fcoml
inc
call
add
mov
and
and
ud0
mov
test
sbb
inc
mov
neg
sub
ret
sub
rcrb
je
js
lods
sub
inc
out
mov
out
cmp
sti
stos
clc
add
mov
xor
jo
stos
decl
arpl
cli
test
jle
lcall
adc
cmp
mov
mov
add
cwtl
lcall
aaa
out
cld
ret
or
sub
pop
inc
fcoml
lods
mov
loopne
xchg
jae
rcrl
add
decl
mov
jmp
addr16
popa
into
inc
ja
je
repz
and
enter
fldt
fcompl
xor
cmpsl
adc
xor
mov
jne
mov
sar
mov
inc
mov
imul
insl
xchg
mov
lcall
out
insb
testl
ljmp
push
shl
and
push
mov
or
ss
mov
push
fsubrs
cmc
jne
imul
mov
pop
ror
xlat
jb
jbe
add
lods
out
incl
lcall
adc
test
adc
dec
test
add
jle
notl
xor
dec
leave
pop
jmp
sub
negl
in
rcrb
lcall
add
out
xchg
dec
fwait
stos
sub
ret
test
aaa
das
or
xlat
loope
adc
sti
hlt
push
inc
repnz
adc
sbb
call
lods
mov
jmp
jnp
jb
sbb
or
call
out
jns
lds
dec
ucomiss
cmp
je
mov
into
xor
ljmp
addb
pop
mov
icebp
add
jb
das
pop
adc
inc
pop
arpl
dec
mov
sub
and
sbb
cmp
int
mov
jo
fdivl
mov
push
sahf
or
fs
xchg
mov
sbb
call
push
mov
sbb
ljmp
sar
loope
mov
sbb
mov
lds
or
xchg
add
aas
pushl
inc
pop
jmp
push
mov
sbb
lret
push
lock
decl
adcb
mov
jecxz,pt
sbb
leave
jne
ret
dec
nop
out
and
andl
inc
adc
dec
mov
decl
das
cmc
sub
popf
insb
loop
inc
xchg
jmp
loope
and
dec
lahf
dec
jnp
mov
inc
mov
mov
mov
out
cli
jnp
ljmp
sbb
call
sti
stos
mov
in
leave
pushf
ljmp
add
mov
gs
jp
loopne
shrb
push
cs
sbb
ss
add
push
sbb
sar
mov
pop
cmp
add
or
sbb
push
xchg
sub
jne
mov
mov
xchg
mov
ret
sub
scas
mov
cmpb
mov
inc
jbe
and
orb
int
cwtl
insl
aad
mov
in
shll
mov
mov
ljmp
push
or
test
push
iret
adc
ret
mov
pop
out
cli
pop
jnp
gs
add
xor
jp
jno
mov
sbb
pushf
std
sbb
addl
jp
dec
jg
ret
rcrl
test
fwait
shl
mov
sbb
test
js
mov
fnstenv
je
scas
inc
out
dec
adc
in
daa
adc
push
lret
rolb
push
scas
adc
lahf
je
aad
push
aam
call
movsb
xor
in
dec
pop
incb
ja
mov
pop
adc
push
les
sub
mov
add
mov
push
gs
add
adc
decl
mov
mov
sti
cmpsb
cmpsl
adc
fcomp
decl
lods
lds
test
sahf
sar
push
jne
jg
adc
push
cmp
les
jns,pt
addr16
sbb
or
xorl
test
stos
push
scas
inc
std
add
cs
pop
pop
xor
xchg
mov
push
cltd
cmpsl
mov
mov
aaa
repz
ret
std
das
lret
lds
scas
mov
gs
dec
rolb
sub
push
inc
int
mov
or
stc
dec
iret
cwtl
aad
in
sti
xor
push
xchg
push
jo
xchg
shrb
sbb
aad
push
or
arpl
pop
push
cltd
incb
jmp
inc
in
sbb
add
push
outsb
jns
push
xor
jl
js
mov
pop
sbb
sar
fistpll
movsl
daa
test
jmp
push
dec
ret
adc
adc
int3
clc
sbb
cmpsl
js
sti
mov
loopne
push
decl
push
arpl
jle
test
cmp
pushl
mov
mov
ret
pop
inc
call
or
sbb
negl
scas
lret
fldt
inc
repnz
jmp
and
in
shll
pop
pushl
pop
test
adc
mov
outsb
mov
xor
mov
dec
push
cmp
add
ss
roll
divl
mov
inc
adc
ja
add
mov
jmp
stos
aas
js
adc
fwait
mov
sbb
add
in
pop
mov
pushf
cmp
das
incl
mov
mov
mov
jae
sub
fimull
sub
in
or
mov
out
cmpsl
negl
mov
and
or
lret
pop
adc
adc
cli
sub
inc
cmp
ss
cmp
mov
xchg
sbb
mov
mov
mov
sahf
sub
cmp
mov
aam
test
inc
cmp
cli
cmc
fs
xchg
mov
clc
outsl
in
dec
mov
mov
or
push
inc
enter
pusha
loope
pop
sbb
mov
ss
and
hlt
sub
lods
sbb
outsb
push
sbb
iret
and
aad
pusha
and
mov
push
insl
test
not
adcb
enter
mov
addr16
fwait
mov
inc
scas
ljmp
fmull
jb
fdivrp
sbb
sarb
pop
push
mov
dec
or
xchg
jno
cwtl
fs
adc
sti
mov
hlt
rcrl
call
mov
xchg
imul
dec
fcmovu
pop
ficoms
out
lock
loope
pushl
call
daa
mov
out
pop
ljmp
mov
jo
decl
xchg
or
jl
sub
and
ja
dec
lea
dec
adc
daa
adc
cs
nop
je
lds
sub
rolb
sub
jmp
push
pop
jbe
mov
xor
mov
into
push
xchg
rcrl
outsl
sub
shll
jge
mov
add
cmpsl
dec
xor
arpl
nop
insb
lods
sbb
pop
jl
sbb
fidivl
cmp
xchg
add
jnp
xchg
push
je
pop
fldl
cmp
incl
les
incl
or
mov
sbb
call
dec
xor
dec
xchg
je
je
lret
insl
movsb
jmp
mov
jp
mov
or
jmp
aam
sbb
or
jb
call
sbb
lea
decl
or
jno
pop
jge
add
mov
and
pushf
repz
mov
cmp
test
gs
and
aad
stos
mov
push
icebp
sbb
xchg
adc
push
pushf
test
jge
mov
int3
jmp
jns
stos
sub
jle
lock
pop
sub
inc
inc
and
leave
loopne
mov
fs
je
cmc
sti
mov
pop
adc
mov
pop
dec
jae
pop
sbb
xchg
movsb
pushl
push
jp
incb
jns
mov
in
fsubrs
mov
andl
push
or
xor
pushl
cld
jnp
ja
mov
and
in
movsl
jbe
mov
popa
jmp
pop
adc
jecxz
insb
xorb
inc
test
fdiv
call
scas
cmp
adc
call
mov
pop
fninit
decl
cmpsl
or
ljmp
fdivrl
repnz
ja
sub
add
call
neg
cwtl
loop
jge
cltd
xlat
decl
stos
sbb
mov
mov
fwait
cmpsl
and
ljmp
ror
pop
lcall
cmp
out
in
mov
or
call
stos
or
ja
lahf
imul
mov
or
add
call
ret
jle
jecxz
mov
lods
xlat
cmp
pop
lcall
and
dec
xor
xchg
bnd
lods
push
addr16
into
mov
mov
xor
not
xchg
lret
xlat
xchg
push
cmp
jne
push
and
cli
aas
cmp
mov
mov
adc
jo
sbb
arpl
decl
mov
stos
xchg
dec
cmp
fistps
jmp
inc
push
rcll
sti
loop
cwtl
sub
loope
dec
rcrb
jecxz
repz
jle
pop
add
jmp
xchg
xchg
mov
push
and
lahf
pop
scas
jmp
cld
and
jbe
sub
jae
push
pop
mul
xor
cli
pusha
xchg
outsb
dec
pop
clc
add
mov
rcl
out
loopne
int3
inc
fstpt
icebp
aad
pop
decl
mov
pop
int
lods
fdivrp
jno
push
and
mov
out
cmp
jnp
in
lcall
sti
in
das
mov
mov
push
mov
push
fadds
shrl
jmp
repnz
xor
out
inc
sub
fdivp
mov
mov
call
imul
sbb
inc
xchg
jmp
dec
inc
popf
out
sarb
stc
das
pop
or
jmp
call
std
xchg
jp
ljmp
in
mov
jmp
cmp
inc
call
xchg
or
int3
movsl
ljmp
cmc
mov
ltr
jmp
data16
out
adc
addr16
ja
xor
cmpsl
aad
dec
and
punpckldq
xor
decl
enter
test
push
push
xorb
pop
cwtl
or
push
and
mov
xchg
scas
jge
push
jmp
cmpsl
xchg
and
mov
push
jl
dec
inc
sbb
push
aaa
in
lret
sub
fsubl
cli
clc
incl
loope
xchg
mov
sub
jo
sbb
cmpsl
fstl
mov
fisubl
mov
xchg
test
nop
sbb
sub
das
xor
mov
div
nop
mov
add
sbb
jbe
cmp
into
jl
xor
shll
call
xchg
push
stc
and
imul
in
idiv
loop
cltd
cmp
cmp
sbb
mov
mov
and
rcr
mov
sbb
int3
jle
outsb
ja
test
ret
mov
push
jne
lcall
xorb
mov
push
loopew
push
out
movsb
push
test
fists
dec
cmp
cwtl
imul
outsl
repz
aad
dec
lcall
adc
in
jge
out
lcall
sbb
das
push
pop
inc
movsb
stc
sbb
and
cmp
dec
mov
push
popf
in
fdivr
cmpb
mov
mov
ljmp
adc
jmp
imul
jbe
ljmp
mov
or
mov
pop
mov
push
scas
jne
roll
add
sub
adc
and
dec
in
sub
repnz
call
mov
mov
movsb
test
out
add
mov
jnp
iret
pop
clc
pop
jp
outsl
pushf
push
xor
jmp
push
js
xchg
push
add
data16
pushl
mov
xor
push
push
lsl
subb
cmp
jecxz
fistpl
and
jge
jbe
sbb
mov
loop
and
xchg
mov
cmpl
fildl
push
or
jmp
jp
outsb
sti
divl
push
test
sbb
cs
hlt
test
add
add
js
ja
pop
jno
sub
cmpsl
inc
cmp
mov
int
pushl
xchg
push
andl
cmp
jmp
dec
fcomi
loopnew
add
cmpsb
pop
add
out
hlt
das
push
pushl
pop
push
xchg
shrl
jge
fisubl
sub
sbb
arpl
inc
inc
fcomp
int
push
imul
fnstsw
add
jle
push
add
push
call
lock
xor
jnp
je
stos
push
push
xlat
dec
push
int
std
cmp
inc
out
jmp
jo
pop
or
adc
sbb
lock
inc
push
in
xlat
mov
and
test
testb
sbb
mov
cmp
lcall
outsb
test
xchg
jae
ror
cmp
addr16
aaa
lds
into
pop
xchg
je
js
mov
inc
jmp
in
cmp
sbb
decl
mov
mov
dec
pop
mov
cmp
mov
push
loope
xchg
jae
dec
mov
lods
loopne
stc
ret
fisubs
mov
mov
mov
in
std
scas
pushl
sbb
aad
call
lcall
push
dec
xchg
fisubrl
cmpsb
jbe
mov
cld
cmp
adc
scas
pop
sbb
call
pop
aaa
gs
inc
lea
push
dec
push
out
call
sti
cli
clc
xchg
out
add
pop
dec
push
xchg
add
imul
hlt
fwait
imul
aad
jge
in
div
rcll
ljmp
jo
sbb
daa
mov
and
pop
insb
roll
sbbb
pop
pop
dec
dec
cs
sti
in
xchg
outsl
movmskps
adc
sbb
call
pop
cs
scas
ss
pushl
push
push
int3
add
adcb
mov
pavgb
inc
pushl
mov
xlat
xchg
or
cs
sbbb
adc
push
push
xor
inc
cli
add
bound
stos
add
pop
sub
hlt
lea
sbb
incl
ss
sub
and
and
lret
popl
and
in
mov
enter
test
int
cs
ljmp
into
fidivs
into
jae
jbe
jmp
push
mov
ljmp
or
ret
shl
cmc
lea
add
sbb
inc
testb
push
shr
enter
mov
cld
mov
xchg
xor
incb
sub
jae
clc
iret
pushl
testb
les
mov
xor
pop
dec
sbb
divl
adc
stc
dec
pop
pushl
mov
bound
pushl
lret
adc
lock
xor
xchg
ret
arpl
sub
out
push
jne
ffreep
fwait
xchg
or
or
addr16
sub
jo
xor
cmp
mov
jle
aam
popf
mov
je
lods
or
mov
and
xor
inc
push
cmp
mov
add
inc
sbb
notl
push
mov
add
xor
pop
xchg
jbe
mov
push
jne
lock
enter
push
xor
mov
mov
xchg
inc
ret
call
test
push
xor
and
movsb
mov
push
pop
sbb
adcb
imul
pusha
or
jmp
fbstp
mov
fldl
xor
aaa
inc
cmp
mov
lret
jg
pop
push
push
inc
outsl
mov
incl
xchg
call
jbe
xlat
cmp
movb
or
sbb
mov
jbe
inc
scas
add
ljmp
xor
or
das
into
in
sub
fsubl
inc
es
aaa
call
jns
push
lcall
mov
push
mov
imull
adc
xor
repnz
in
jnp
push
jo
out
mov
mov
ljmp
cs
fisttpl
sub
or
stc
call
mov
out
or
and
jp
std
jb
mov
fldl
pop
sar
aas
outsl
clc
popa
rcrl
ljmp
pop
js
call
in
dec
mov
aas
shll
pusha
xlat
ror
lcall
sar
mov
addr16
or
add
out
inc
xrelease
jmp
jl
incl
les
scas
rorl
pop
ret
shlb
test
bsr
pop
mov
sbb
popf
outsb
jecxz
inc
push
and
jbe
cs
pop
and
das
push
hlt
xchg
mov
pop
add
gs
sbb
out
mov
aam
in
jb
xchg
jns
ss
inc
pop
mov
inc
sbb
or
sbb
lcall
push
mov
xchg
out
dec
hlt
or
je
test
xlat
xlat
mov
ljmp
adcl
add
js
sbb
pop
movsb
push
sarb
in
mov
mov
test
push
popa
cmpsb
into
push
or
mov
pushf
pop
jle
jmp
nop
dec
push
sbb
jae
jo
xor
sbb
jl
mov
in
je
movsl
ja
js
arpl
js
cmp
cli
jmp
xor
dec
mov
test
js
push
push
popa
sub
test
mov
movsl
sub
and
sub
mov
mov
stos
in
fsub
jno
std
cmc
xchg
ljmp
adc
pop
cmp
mov
and
in
mov
cwtl
cs
pushl
jb
adc
cltd
or
loop
lret
mov
jl
inc
xchg
xor
add
push
adc
loopne
daa
andb
pop
sub
jb
cmp
out
imul
adc
add
inc
sti
jecxz
pop
jmp
or
ret
inc
aas
call
mov
cli
jl
negl
mov
sbb
pop
jb
icebp
test
cmp
adc
jbe
inc
mov
and
les
mov
jbe
add
inc
idivl
push
mov
adc
sub
push
xor
and
fs
push
popf
aad
jb
dec
mov
jge
sub
popf
add
xchg
and
rcl
mov
dec
add
ljmp
push
les
pop
mov
mov
push
sbb
jl
cld
ret
jne
xor
test
aas
scas
shlb
pushf
mov
cwtl
test
test
shll
movsl
bound
jnp
aam
mov
pop
sbb
lock
adc
hlt
jno
sub
sbb
lock
incl
icebp
fwait
rorb
cld
imul
outsb
scas
and
mov
pop
int3
loope
std
mov
ss
jb
mov
outsb
cld
dec
test
rcrb
clc
and
pop
scas
cmc
decl
mov
add
lds
clc
ljmp
add
jmp
int
dec
adc
adc
out
or
xor
cmpsl
jbe
jbe
movsl
sbb
sbb
push
cmp
ljmp
lret
push
push
stc
call
clc
scas
jmp
sti
cmp
mov
bound
and
push
les
push
sub
addr16
fdivrl
in
cmp
frstor
sti
jb
lock
cmpsl
pusha
pop
das
push
mov
ljmp
aas
or
sub
sbb
jge
test
orl
or
fbstp
test
pop
ret
iret
push
ljmp
pop
mov
push
push
or
scas
mov
jnp
ja
mov
xchg
or
cmc
incl
add
add
insb
jbe
add
imul
rcrb
test
in
sub
mov
jecxz
or
daa
jnp
and
repnz
pop
fstps
sti
lods
add
pop
loope
fstps
rorl
cmp
mov
adc
inc
scas
loope
and
jecxz
cmp
not
mov
jb
int
sbb
in
inc
mov
lcall
inc
popl
xor
jbe
out
push
daa
int
jnp
inc
bound
mov
cld
call
jno
test
cmpsb
jp
movb
inc
fisubl
nop
or
icebp
mov
cmp
dec
je
push
xor
and
lahf
or
adc
and
outsb
and
add
insl
sahf
sbb
aam
sarl
push
daa
or
aas
in
mov
insb
fistl
std
dec
nop
popa
imull
push
cmpsl
add
xorl
adc
pop
inc
adc
sbb
je
dec
mov
or
popf
sbb
mull
gs
out
aam
insl
cmp
xchg
pop
out
jnp
stc
adc
cmp
lcall
jmp
out
xlat
add
iret
adc
mov
je
test
pop
adc
test
sahf
lret
mov
ljmp
ljmp
push
dec
inc
fcmovbe
sbb
fsubr
push
cmp
mov
ljmp
test
and
pop
testb
pop
or
mov
dec
ss
gs
int
jbe
popa
les
and
movsb
repz
dec
lret
lret
push
pop
call
push
mov
addl
and
mov
je
or
repnz
jmp
or
clc
decl
mov
fdivr
inc
call
loopne
push
sub
std
inc
jns
call
call
sti
push
jmp
cmpsl
and
ljmp
inc
pop
cli
mov
out
sbb
dec
mov
stc
push
jbe
mov
sarl
leave
mov
outsb
std
call
lcall
aas
mov
mov
xor
daa
adc
insl
test
push
roll
mov
enter
jg
jmp
rorl
jmp
pop
icebp
in
arpl
dec
mov
cmp
das
psubw
aaa
and
mov
xor
jmp
addr16
jl
ret
icebp
inc
sub
push
mov
cld
sbb
add
xlat
xor
cs
cmc
xor
ja
bound
xor
push
sti
push
gs
imul
test
sbb
inc
cmp
pop
cmp
cmpsl
sbb
mov
and
or
andb
fwait
jb
ja
test
lcall
or
or
clc
xchg
cmc
push
incl
add
sbb
pop
pusha
inc
imul
cli
test
int
sub
clc
popa
decb
test
fmul
ljmp
pop
sbb
cltd
xor
outsb
decl
or
push
mov
loope
fs
cmp
add
jmp
cwtl
pop
mov
push
jecxz
aad
and
repz
mov
lcall
rcr
dec
lcall
cli
pop
mov
push
test
mov
ret
in
test
cmp
xor
jge
ja
loop
mov
aaa
das
mov
cld
in
lahf
repz
adc
stc
push
mov
clc
clc
push
aad
test
ret
sub
lods
xor
into
pop
pop
or
or
adc
mov
pop
in
aad
cmp
sti
hlt
push
into
xor
mov
push
stos
mov
add
roll
jbe
mov
pop
xchg
sbb
fwait
sub
lahf
enter
push
movsb
flds
dec
pop
mov
dec
adc
call
mov
xor
cmp
mov
fmulp
bound
outsl
dec
inc
fistpll
xor
int3
loope
iret
cmp
xorb
inc
shlb
inc
dec
scas
jg
sbb
loope
fldenv
jl
jmp
aam
jo
adc
iret
cltd
mov
bound
and
into
fisttpl
int3
sub
jns
shld
dec
push
mov
mov
jne
mov
insb
xchg
sbb
popa
sar
jns
xchg
sbb
fxtract
mov
sub
xchg
add
nop
repnz
lret
dec
cmc
test
jp
shlb
shl
dec
fiaddl
imull
fs
lcall
push
call
mov
and
adc
mov
xor
je
adc
loope
ror
jmp
adc
popf
xor
pushl
out
jns
movsb
sbb
icebp
sub
test
push
push
sti
fmuls
call
sbb
sbb
je
push
loopne
cli
mov
orl
or
push
push
pop
pop
repnz
leave
loopne
sub
mov
in
adc
imull
std
push
sub
or
add
into
in
jnp
aam
aas
stc
cmovge
xchg
jmp
movsl
decl
iretw
mov
push
ja
push
bound
and
test
fstl
jo
sbb
call
mov
cld
ret
mov
xchg
mov
xchg
add
cmpsb
mov
mov
sub
divl
dec
int3
xor
jmp
mov
push
std
jae
and
lret
fdivrl
dec
not
inc
loopew
pop
mov
repnz
in
xchg
and
mov
incl
xchg
add
aaa
std
aam
xchg
fidivrs
xchg
imul
in
out
repnz
orb
sub
test
xor
push
mov
mov
dec
mov
jmp
and
mov
mov
jg
mov
decl
pop
cmp
xlat
xor
das
lcall
ja
adc
std
sti
push
xchg
or
lcall
push
adc
cmp
clc
lods
mov
dec
jbe
mov
call
jb
push
jbe
int3
cmp
inc
or
in
pop
lock
imul
shl
mov
jnp
ret
or
arpl
jbe
test
add
cmp
jmp
negl
or
cld
cmpsl
insb
negl
ljmp
pop
enter
pop
xor
mov
dec
lcall
pop
sub
jecxz
jge
adc
sbb
xor
inc
mov
or
ljmp
aam
inc
cmp
mov
sbb
fs
xchg
mov
xchg
aad
jns
pop
push
lahf
testb
call
fs
aas
dec
cli
mov
xchg
push
or
stos
stc
or
rcl
testb
sbbl
incl
pop
aaa
inc
ljmp
add
xchg
fldl
lcall
inc
mov
rcr
out
fldenv
leave
std
pop
add
fcmovne
ljmp
cli
fstps
in
inc
cmp
mov
cltd
sahf
mov
pusha
rcl
fnstsw
repnz
outsl
ds
inc
test
pop
adc
mov
mov
inc
xchg
sbb
loop
popa
jmp
pusha
pop
add
and
pop
cmp
add
push
pop
dec
and
aad
ljmp
or
sub
sti
shrl
pop
fst
bound
or
std
adc
cld
sbb
jne,pn
pop
fnstsw
ja
dec
rorl
add
mov
jmp
jp
lock
xor
or
shll
or
pop
mov
push
lods
lds
jae
adc
mov
and
sub
ss
das
ja
mov
pop
xchg
dec
loopne
sbb
fistl
and
jl
jbe
movsl
mov
jne
cmpsl
roll
jmp
popf
pop
adc
bound
outsb
subl
lret
mov
push
ja
push
lcall
push
and
xchg
cmp
ret
adc
lds
sahf
aaa
jns
pop
int3
fstpl
jnp
negl
mov
xor
inc
sub
cmc
dec
jb
and
inc
mov
xorb
lea
jae,pt
mov
xchg
dec
leave
out
cmp
jb
jnp
and
push
sbb
push
pop
xchg
jb
lds
add
in
aad
data16
and
call
add
mov
cmp
push
loope
pushf
loop
pusha
push
inc
mov
push
push
fwait
jbe
inc
mov
mov
adc
push
sbb
xchg
xchg
test
jo
inc
or
jmp
adc
out
ja
mov
mov
hlt
xchg
cmc
fstpl
test
push
sahf
cmp
pushw
push
popa
add
push
mov
aam
jno
sbb
push
in
call
data16
cmp
stos
mov
inc
sub
pop
lret
push
inc
add
shlb
jge
xchg
mov
cli
sub
sbb
push
fsubl
cwtl
callw
incl
cmp
fisubl
fbstp
test
leave
jecxz
xor
repz
mov
out
lock
push
es
add
in
sbbl
dec
das
mov
out
loop
adc
fcos
and
insl
mov
incl
sti
push
fwait
cs
push
push
decb
mov
call
test
lret
cld
loop
ficoml
mov
cmp
jb
call
loope
outsl
mov
xchg
jmp
imul
push
pushl
mov
decl
jb
rcrb
jbe
inc
iret
inc
outsb
dec
add
outsb
das
icebp
or
xor
pop
jnp
ja
jge
fmull
mov
imul
adc
adc
data16
mov
ja
dec
pop
add
mov
pusha
push
nop
dec
mov
push
stos
clc
ja
adc
into
cltd
adc
jo
adc
cli
fbstp
stc
jnp
mov
not
gs
mov
add
ljmp
dec
loope
mov
jge
cltd
cmp
xchg
insl
movsb
mov
and
das
sbb
or
sarl
mov
inc
rclb
out
repnz
jnp
in
cmpsl
bound
popa
adc
sbb
icebp
adc
sbb
pop
stos
ja
cltd
push
adc
jnp
push
jle
add
pop
pusha
adc
push
repnz
pushf
xlat
mov
cmpb
push
jnp
xor
push
imul
jae
ret
xor
in
lahf
jecxz
inc
outsl
mov
mov
fbld
push
loop
bound
out
dec
xchg
lcall
cwtl
add
mov
pop
xor
out
ja
dec
bound
mov
lcall
xchg
std
sbb
in
add
daa
xchg
fdivrp
xchg
and
add
imul
dec
cmc
and
repnz
sti
cs
jnp
and
out
pop
daa
mov
scas
xchg
decl
test
cmpsl
dec
push
jmp
cmp
add
push
or
xchg
aam
cli
mov
jb
mov
stos
cltd
xor
in
icebp
pop
jne
mov
das
stc
mov
decl
jno
pop
cmp
push
push
addr16
lret
into
negl
mov
adc
sub
mov
dec
out
pop
dec
jl
xor
mov
inc
jbe
loope
test
movsl
inc
pushl
jbe
push
add
inc
daa
dec
sbb
andl
jmp
clc
or
pop
jmp
pop
test
ljmp
insl
jne
int
push
loop
jp
std
sbb
adc
jmp
cmc
push
scas
call
mov
jmp
mov
push
in
aaa
pop
insb
std
pushl
sbb
lds
mov
outsb
xor
sbb
adc
outsb
pop
incl
mov
out
dec
test
imul
bound
insb
out
jbe
dec
lret
pop
sub
sahf
mov
push
dec
sub
scas
cmp
aas
push
ja
fsubrl
std
push
je
jecxz
shrl
mov
lret
dec
out
cmp
in
hlt
jbe
outsb
stos
cmp
jmp
mov
dec
jb
cmp
or
mov
divl
in
imul
mov
jl
sti
popa
cwtl
mov
cmp
xchg
xchg
movsl
int
add
cmp
mov
orl
mov
xor
cmp
imul
mov
insb
in
test
jl
decl
xchg
out
adc
mov
jmp
mov
loope
fimuls
push
cmpb
addr16
push
jge
hlt
add
call
xchg
roll
xchg
jmp
loopne
push
or
sub
push
movsb
inc
mov
xchg
xchg
cmpsb
jnp
ja
or
and
ret
dec
fdivr
es
mov
hlt
rorb
out
cli
mov
das
ret
gs
sarl
leave
jns
call
sbb
add
jmp
daa
or
sbb
add
push
jmp
call
dec
outsl
mov
or
push
fsubs
and
and
rorb
push
xor
sahf
dec
es
cmp
sbb
add
jmp
mov
xor
inc
std
mov
andl
shlb
pop
fwait
push
mov
lret
adc
xchg
mov
and
adc
addr16
popf
xchg
sub
sbb
incl
shrb
cmp
and
mov
bound
cli
dec
aas
int3
and
and
pop
test
negb
cmp
stc
jno
js
sub
cmp
xlat
mov
enter
bound
pop
xor
add
add
call
ljmp
rol
dec
imull
and
xor
mov
and
adc
pusha
xchg
cmpsl
mov
shlb
dec
out
xor
outsb
dec
xor
sbbl
rorl
mov
mov
std
bound
imul
fldcw
xor
je
popa
and
jns
cs
add
and
pop
setp
int
or
je
mov
loope
out
cmc
mov
dec
lods
inc
in
je
mov
in
dec
or
pusha
adc
mov
or
addr16
jmp
push
xchg
adc
add
mov
xchg
adc
pop
sbb
inc
cmp
insl
lods
js
pop
cwtl
stos
into
sbb
es
and
cmp
fidivrl
jg
aas
mov
js
mov
outsb
ret
sbb
push
jge
test
sar
lods
mov
mov
cmp
subl
imul
push
pop
push
or
lret
or
adc
mov
mov
push
inc
mov
call
mov
jae
dec
ror
push
push
cmpsl
packsswb
into
mov
mov
add
stos
mov
mov
push
xchg
and
xchg
sti
mov
push
fldcw
add
xor
out
add
lret
enter
push
pop
inc
mov
cmp
cmp
xor
iret
or
xor
out
lahf
cmp
dec
xchg
test
aam
stos
or
jmp
pop
ss
and
pushf
inc
outsl
lods
cld
xchg
xchg
popf
fbld
mov
je
adc
inc
cwtl
push
sahf
inc
push
xor
out
inc
jno
push
cmp
outsl
inc
jo
mov
ss
cmp
sbb
xchg
cmp
iret
subb
std
jmp
pop
mov
and
adc
call
pushf
notb
pop
cltd
leave
jle
clc
adc
mov
jae
std
jp
mov
lret
mov
mov
pop
add
repnz
sub
push
sti
lds
out
jg
pop
fsubrl
inc
sbb
mov
push
lcall
nop
pop
insb
decl
cmpsb
xchg
cmp
rcrl
add
scas
lods
or
call
maskmovq
testl
cmp
imul
mov
mov
cmp
cld
mov
lock
arpl
test
std
inc
cmp
lods
imul
in
sbb
call
xor
sbb
inc
push
xor
sbb
cmp
sahf
or
mov
call
xchg
in
and
das
call
sbb
xor
ds
into
movsb
lock
daa
mov
decl
in
popl
sub
xchg
pop
jmp
pinsrw
push
movsb
mov
leave
je
sbbl
stos
mov
cmp
inc
pop
dec
je
lret
xor
mov
in
cmp
nopl
outsl
cli
lcall
xor
das
push
int3
jmp
movsb
fildll
dec
mov
mov
data16
jmp
lock
xchg
mov
sbb
pop
jg
jne
sub
or
jb
es
mov
lds
idiv
push
fstl
xchg
xchg
std
addr16
sbb
add
ja
sar
jb
negb
cmp
pusha
ja
pop
lea
dec
repnz
sub
lcall
rclb
dec
mov
sbb
sbb
filds
xchg
rolb
pop
jle
cld
pop
xor
inc
fs
push
stc
fildll
mov
and
push
ds
clc
pop
pop
push
std
aad
lock
out
fcom
shrb
pushl
hlt
mov
sub
add
jp
sar
arpl
pop
push
jne
loop
xor
dec
leave
clc
aad
stos
imul
in
ss
adc
scas
ret
and
cli
fsubp
nop
xor
xchg
or
mov
fdivr
mov
xchg
jno
inc
movsl
mov
xor
fs
stc
ss
or
shlb
and
dec
lahf
or
mov
outsb
adc
and
fidivrs
std
aaa
pushl
or
mov
data16
or
jns
push
ja
loopne
lcall
mov
pop
sti
es
push
pop
mov
pop
je
push
les
inc
push
push
jl
divb
xlat
hlt
sbb
aam
testl
jbe
add
fisttps
or
hlt
lods
adc
outsb
icebp
jmp
call
push
das
incl
xor
dec
jmp
ret
ss
fstps
lcall
push
test
ljmp
fisttpll
sti
or
adc
ret
mov
xchg
in
insb
pop
xor
dec
sub
sbb
fldcw
pop
xor
adc
enter
stc
lret
test
outsl
shlb
lahf
mov
push
enter
xor
mov
push
test
jg
sbb
xor
pop
xlat
push
xor
dec
sar
jbe
std
imul
adc
mov
outsb
inc
adc
es
fmull
jecxz
imul
loop
mov
adc
fidivs
je,pt
mov
push
aaa
decl
jne
rorl
mov
inc
testl
lock
insb
or
incb
mov
jno
cltd
inc
sbb
scas
jmp
mov
imul
and
or
idiv
xchg
iret
sub
cli
push
dec
insl
cmp
in
pop
push
pop
sub
repnz
and
jmp
sub
mov
mov
add
fistpl
inc
in
test
loopne
ja
incl
shr
fmul
sbb
ljmp
push
sbb
push
cmc
rcrl
aaa
sar
cmp
inc
nop
push
test
loope
and
decl
mov
repz
xor
push
pop
push
add
and
push
push
cmpsl
xor
xchg
mov
fildl
lret
mov
adc
sbb
cmp
scas
idivl
mov
lret
jle
lcall
xchg
aaa
aas
ja
jns
outsb
cwtl
inc
push
movsl
mov
jmp
sbb
icebp
pushl
lods
jecxz
ja,pn
adc
in
mov
mov
jge
jle
decl
test
insl
mov
jne
push
adc
jbe
xor
es
clc
aam
xchg
inc
push
and
test
sbb
mov
test
sbb
aam
movsl
adc
sub
scas
neg
pop
idivl
pop
xchg
inc
adc
push
lcall
adc
fcoms
lret
decl
pushf
cwtl
aaa
inc
into
addr16
sarl
out
mov
adc
sti
add
leave
mov
out
js
imul
popa
mov
loope
in
jae
add
ret
lcall
idiv
test
pop
shrl
or
call
push
sub
sahf
adcl
sub
ljmp
test
les
or
xor
movsl
pop
xlat
dec
mov
stc
sbb
xchg
shll
and
lock
std
js
push
xor
xor
out
mov
xor
push
push
xor
mov
jo
adc
add
cmpsl
push
sahf
mov
incl
test
aad
jnp
lcall
cli
rcrl
push
test
jmp
adc
call
sbb
test
jl
lret
test
es
mov
lret
add
les
mov
add
mov
lret
sti
sti
lahf
gs
sbb
mov
dec
aas
lcall
jge
mov
adc
aam
dec
push
push
js
inc
pop
xchg
adc
mov
insl
sub
inc
aaa
jae
adc
les
iret
js
popa
and
dec
inc
pushl
inc
add
mov
iret
ja
outsl
popa
pop
and
je
aam
jae
add
les
cltd
in
adc
dec
xchg
fcmovnu
std
dec
or
sub
cmp
rcr
rorb
cltd
xchg
incb
xchg
mov
das
push
addr16
mov
pslld
xchg
ljmp
in
adc
aaa
je
mov
inc
and
xor
shrb
je
push
jecxz
outsl
addr16
mov
jae
jg
push
push
pushf
sbb
sub
adc
out
roll
sbb
push
mov
sar
dec
sbb
mov
jbe
jecxz
mov
jno
sbb
ss
cmp
or
jns
sub
xchg
nop
scas
sub
adc
pop
jae
ljmp
push
inc
lret
mov
in
or
fs
jbe
sbbl
mov
inc
or
out
xchg
incl
imul
xor
pop
std
ja
lret
sbb
into
adc
mov
pop
cmpsl
jbe
mov
sarl
stc
fisubrs
pushl
std
cmp
mov
or
divl
xor
push
xchg
cmp
xor
and
cmpsl
pushf
ljmp
pop
das
sbbl
call
push
or
pop
cmp
pop
cmp
int3
mov
jo
xor
jne
out
xor
cmpsl
dec
jo
xor
bound
push
imul
mov
push
mov
mov
push
lds
xchg
test
call
lods
add
stos
jle
mov
rcll
or
or
or
in
xor
sub
lret
xchg
fidivrs
dec
xor
or
inc
cmp
pop
and
sar
cmp
es
sub
mull
cmpsb
adc
mov
xlat
push
push
movsl
lock
xchg
xor
xor
gs
adc
mov
xlat
sar
aad
jecxz
mov
repnz
loope
and
dec
dec
push
mov
add
out
orl
lcall
int
mov
push
hlt
lock
fdivs
std
loopne
ret
repz
js
daa
in
dec
popa
testl
adc
pop
jnp
lcall
in
ret
out
lret
loopne
mov
xor
in
je
jns
jl
sbb
out
push
dec
test
sbb
lds
mov
push
cmp
andl
inc
jo
fnstcw
mov
jne
cwtl
fsubs
xor
sbb
fsubrp
negl
push
fimull
daa
jmp
or
mov
sarl
add
mov
inc
fwait
sar
repnz
dec
rcr
daa
fnstenv
enter
dec
adc
or
inc
js
mov
lods
in
mov
aad
pop
arpl
mov
xor
into
lock
jmp
fidivrl
fldl
lea
sub
mov
pushf
ja
mov
inc
mov
or
mov
inc
xchg
pop
jmp
loop
pushf
stos
add
ret
jmp
xor
mov
je
iret
jb
dec
adc
ja
filds
xchg
cmpsl
mov
and
cmp
lcall
push
sub
hlt
xor
lea
aas
cmc
in
mov
xchg
sbb
dec
pop
jo
sub
sub
sub
test
popf
jns
fsubs
add
ss
adc
pop
outsb
jbe
inc
inc
jo
or
xlat
idivb
imull
fnstenv
in
das
clc
push
stos
aaa
nop
cs
pusha
sub
std
and
movsl
int
mov
cmp
out
sbb
or
enter
mov
mov
mov
shlb
popa
sbb
add
fsubrl
gs
testl
push
inc
add
aaa
decl
and
push
jbe
xchg
jle
pop
sti
or
icebp
pop
xchg
xchg
mov
mov
and
outsb
lcall
mov
popa
call
cli
repnz
ds
scas
stos
loope
fstps
fdivr
xor
lods
fisttps
sbb
xor
push
aad
jp
dec
orb
dec
in
sbb
inc
mov
lcall
sahf
out
repnz
cli
mov
mov
lcall
pop
pop
fwait
out
aas
arpl
jmp
adc
int3
stc
mov
call
flds
jbe
int
xchg
pop
sbb
dec
call
push
ja
jno
call
sbb
jne
xchg
imul
iret
xor
outsb
or
insb
ljmp
inc
push
inc
mov
pop
jnp
cltd
sub
lcall
xor
pop
mov
or
addr16
enter
outsl
ja
call
or
adc
xchg
out
inc
push
jmp
call
hlt
test
xchg
add
call
andl
xchg
fldcw
adc
in
ljmp
leave
or
loop
cmpsl
decl
xchg
and
xchg
pop
les
popa
std
cmp
add
cmc
cwtl
cmpsl
or
fcmove
fwait
nop
sbb
jbe
dec
or
or
ljmp
aam
ret
jne
cmp
scas
js
sub
lock
inc
xchg
mov
xchg
in
add
jne
std
dec
into
shlb
mov
js
push
pop
sbb
push
mov
sti
jmp
push
sub
mov
adc
lock
ljmp
adc
jecxz
rcrl
lods
rsm
test
cmp
iret
cmp
xor
sbb
movsl
int
je
dec
cli
inc
int
or
fistpll
and
push
subl
movsb
in
roll
jmp
mov
xchg
xor
dec
lock
ss
push
or
and
xchg
jecxz
cli
pop
xorl
shl
add
call
jno
and
ljmp
mov
std
ljmp
cmp
xchg
add
insl
call
call
cmc
lret
out
cmpsb
out
out
jb
stc
xchg
sub
xor
sub
cmp
push
aas
dec
mov
jmp
sub
mov
jnp
xchg
xchg
nop
sbb
inc
jmp
mov
add
repz
xor
imul
xor
sub
mov
mov
jmp
dec
push
xchg
jo
not
int
cmp
pop
decl
mov
mov
pushl
fucom
xor
les
jnp
test
push
push
jle
rcrb
pop
xchg
and
pop
jbe
mov
push
rcl
dec
fdivrp
stos
push
movsb
mov
testl
or
ret
call
sub
xlat
iret
mov
adc
push
dec
pushl
push
das
cmp
jecxz
int3
sti
lret
ret
mov
decl
divb
adc
cmc
pop
push
sbb
xchg
mov
out
decb
add
popa
jmp
scas
fnstsw
sbb
test
adc
mov
and
push
cmc
cld
mov
mov
inc
mov
jbe
xor
xchg
cmp
scas
or
call
add
stc
lods
fisubrl
jae
push
cwtl
xor
aas
dec
lds
scas
mov
jb
mov
subl
jno
push
adc
and
fisubl
movsb
adc
sar
and
cmc
int
inc
les
sub
xor
incl
js
aas
add
in
mov
popf
mov
push
pop
adc
cmp
arpl
mov
push
fldcw
rclb
dec
ror
mov
scas
in
cmp
outsb
inc
jp
mov
out
test
fidivs
pop
into
lock
in
iret
mov
jns
mov
mov
xchg
scas
xchg
sub
dec
lcall
es
lods
scas
mov
stc
adc
dec
cwtl
arpl
std
iret
inc
ds
cltd
jg
ljmp
sbb
jae
push
jp
cmpsb
inc
aad
shlb
xor
popa
jne
add
adc
cmp
adc
dec
pop
decl
insb
movsl
mov
xor
je
and
or
xor
add
icebp
pop
inc
lcall
xlat
inc
call
dec
sbb
ret
xor
idivl
shll
jmp
scas
pop
jo
sbb
cs
ljmp
movsb
xor
sbb
ljmp
push
or
cli
xor
xlat
gs
fs
ja
sbb
fidivrs
xchg
jle
jmp
imul
incl
pushf
and
jmp
sub
icebp
push
inc
pop
daa
mov
lahf
lea
call
mov
or
add
inc
outsl
sbb
push
out
jmpw
sbb
test
fcompl
xchg
aas
mov
ret
sti
lock
inc
rclb
push
roll
mov
jo
pushf
push
jp
xor
jmp
out
fcomip
cmpsl
mov
add
mov
jmp
cmp
outsl
sub
loope
pop
jmp
aas
add
adc
jg
jns
jno
xor
outsl
nop
mov
lds
sub
jo
ja
jae
xchg
sahf
cmp
nop
mov
call
mov
addr16
insb
call
rolb
lcall
scas
adc
mov
push
jmp
ljmp
xor
mov
mov
into
and
bound
test
cmp
push
iret
push
cmc
enter
push
cs
pop
inc
xor
popf
pushl
and
sahf
das
pop
daa
sub
sti
call
push
into
gs
mov
jns
mov
mov
jo
and
ja
add
inc
pushl
push
push
gs
popf
lcall
lea
lcall
or
push
mov
inc
cmp
mov
add
rcll
fnstenv
cmp
loop
dec
jbe
lock
sarl
mov
xor
data16
pop
cmc
inc
es
xchg
mov
stc
stos
outsl
hlt
jl
test
rorl
sub
pop
idiv
out
lcall
clc
sarl
loop
mov
decl
jg
xor
mov
iret
sub
aas
outsb
aad
add
cs
jg
mov
inc
push
mov
sbb
pop
into
add
add
or
fs
repnz
orb
imul
call
fldl
or
fidivl
and
inc
or
out
lret
mov
inc
iret
scas
xchg
std
and
cmp
inc
xor
rorl
mov
mov
cmpb
add
stos
test
pop
xor
pusha
ljmp
std
lret
lahf
testl
lods
jmp
jne
pusha
sub
jp
jl
not
mov
mov
jbe
in
sub
ja
sbbl
lock
outsb
fstps
adc
lret
movsl
shrb
jbe
mov
sbb
xor
xor
xor
sahf
xchg
mov
pop
dec
sub
cmpl
inc
cmp
pop
leave
mov
mov
aaa
gs
xchg
sbb
mov
mov
loope
push
xor
jmp
sbb
pushl
pop
lods
cmc
imul
xchg
push
bound
mov
std
lock
mov
aaa
jge
sub
xchg
or
mov
lcall
mov
jno
mov
mov
adcb
cmp
enter
dec
rcr
mov
lcall
jns
icebp
sub
out
sbb
adc
test
jge
mov
push
fildll
mov
sub
xchg
ret
movsb
lret
decl
clc
bound
mov
jmp
cwtl
dec
into
arpl
lods
sahf
sbb
ja
ret
jl
pop
mov
test
push
dec
cmp
lods
call
movsl
push
out
subl
ja,pn
xlat
mov
inc
ret
or
js
out
jecxz
add
mov
sahf
into
xor
sbb
mov
add
iret
mov
hlt
incl
push
sub
pop
adc
imul
mull
sub
and
mov
cmp
les
mov
mov
pushl
xchg
cwtl
lcall
outsb
cmp
in
xor
inc
mov
ret
lcall
pop
in
sbb
adc
xor
add
pop
sbb
int
call
lods
lods
xchg
jecxz
xchg
and
sti
fimull
sbb
fcoml
dec
and
sub
adc
int3
push
sbb
mov
int
jg
inc
inc
xor
lds
lahf
cmp
or
gs
pop
cld
std
jl
decl
or
movl
mov
jne
test
in
in
add
in
sbb
add
push
push
push
adc
ret
rclb
push
shll
insb
lcall
or
push
shlb
push
pop
enter
dec
mov
les
jo
mov
sbb
sbb
popa
aas
sbb
and
test
push
mov
mov
jbe
sub
mov
or
xchg
je
jmp
xlat
dec
fstl
mov
add
je
lock
mov
and
repz
movsl
sbb
mov
mov
call
inc
push
cld
lcall
daa
cmp
and
cmpsb
jbe
xchg
in
pushl
bound
jbe
inc
xchg
mov
cmp
aaa
fidivrl
repnz
test
pop
sbb
adc
dec
lcall
cmc
pop
movsb
mov
push
cmp
jne
xor
mov
pop
les
imul
jo
mov
dec
incl
sbb
cmp
popa
movsl
jne
cmpsb
and
dec
arpl
add
ja
test
and
bound
sbb
mov
mov
fsubrs
and
add
mov
lea
add
insb
mov
mov
ds
xor
sub
adc
test
mov
rorl
lds
pushf
pusha
and
fbstp
cmp
adc
rcll
aad
addb
mov
pop
popa
pop
cwtl
jg
xorb
sti
call
outsb
pushf
mov
dec
mov
cmp
mov
mov
iret
sub
mov
std
dec
icebp
pushf
mull
mov
cmpsb
jbe
xor
mov
xchg
pop
aam
and
popa
pop
bound
dec
clc
jnp
sub
mov
push
mov
push
ret
test
ret
ljmp
ja
jle
fnstcw
stos
ljmp
outsb
mov
push
jb
or
loopne
decl
pop
retw
es
in
outsb
jbe
xchg
ljmp
mov
cmpsb
lret
or
jb
loopne
push
shl
mov
push
clc
mov
or
orb
mov
out
xorb
pop
scas
imul
inc
jae
jo
repz
bound
daa
sub
mov
jne
push
ret
jle
or
scas
out
cmp
cmp
pop
push
call
xchg
inc
pop
and
dec
xchg
push
cmp
mov
jmp
aam
stc
adc
adc
add
jecxz,pn
mov
repnz
fimuls
popf
sbb
repz
lahf
negl
adc
add
cld
xor
cli
fcomps
ss
es
out
clc
sti
jmp
or
jmp
cld
push
imul
in
aaa
lea
push
test
adc
test
mov
insl
js
sti
lret
call
fs
fnstsw
sub
rclb
push
mov
push
cmp
mov
fildl
mov
and
scas
je
jp
decl
jp
cwtl
mov
outsl
adcl
shrl
subl
jnp
dec
sti
jbe
mov
in
add
imul
push
pop
mov
hlt
mov
aam
lahf
pop
xor
inc
mov
pop
je
push
jecxz
adc
jl
fstl
or
mov
int
lcall
push
loopne
mov
cmp
stos
jge
out
pop
popf
dec
push
arpl
sub
xchg
and
jmp
outsl
push
out
pop
into
sbb
ljmp
mov
sbbl
imul
dec
fisubrs
js
hlt
ds
mov
call
popf
orb
add
mov
rcll
mov
jno
add
and
and
add
and
ja
jp
scas
cli
xor
cmc
jge,pn
cmp
daa
push
insb
sub
dec
cmc
pop
nop
mov
mov
mov
jns
imul
orl
or
call
push
std
out
adc
ror
and
cmp
das
aad
setge
cmc
jmp
or
xor
outsb
inc
add
dec
add
adc
sub
test
in
jle
jbe
adc
fcoml
sub
js
xchg
add
xorb
out
jns
xor
pushl
sbb
iret
ljmp
or
mov
adc
sbb
xor
push
lods
popa
xchg
mov
pop
cltd
lods
ss
stos
insb
push
cmp
or
rolb
dec
push
lahf
push
out
imul
xor
jp
divb
pop
push
enter
push
inc
push
pop
mov
imul
or
test
or
jns
iret
mov
add
fldcw
rcrb
mov
scas
add
incl
loop
and
sahf
and
popa
hlt
push
add
fisttpl
mov
and
xor
cmpsl
test
xchg
pop
cmp
mov
adc
testl
imul
adc
testb
inc
pusha
dec
incb
cmc
pop
mov
adc
push
adc
lret
pop
jp
push
inc
add
fdiv
inc
mov
into
scas
int3
insl
jb
add
jbe
inc
out
and
iret
rolb
ljmp
nop
mov
sti
or
push
jbe
das
cmp
fwait
into
int3
lock
les
pop
jl
repz
sub
lret
mov
pop
mov
xchg
and
ss
call
xchg
dec
sbb
dec
fisttps
mov
inc
dec
inc
jmp
pop
xchg
ds
mov
not
add
push
xchg
fucom
ljmp
or
cmp
in
cmc
xor
lcall
leave
jns
test
loopne
inc
mov
and
lds
jmp
hlt
rcl
das
clc
jge
mov
dec
pop
pop
mov
out
pusha
and
arpl
mov
ficompl
inc
shlb
daa
inc
outsb
stc
mov
sbb
inc
pushf
and
adc
push
in
xchg
jno
test
adc
cmp
mov
sbb
sub
out
clc
mov
stos
dec
xchg
add
mov
fdivrl
rorb
sbb
incl
insb
cmpsl
popa
jge
incl
xchg
push
cmp
je
ljmp
push
and
rcrl
or
lods
mov
cmp
jno
inc
adc
test
mov
popf
xlat
jo
and
push
inc
push
imul
movsb
lcall
dec
and
pop
mov
ds
xor
aaa
jb
fwait
sub
cmp
imul
aaa
mov
std
lahf
pop
jb
push
or
mul
sbb
xchg
loop,pn
aad
pop
sbb
lods
sbb
mov
scas
xchg
sbb
jno
xchg
xor
test
sahf
xor
jmp
incl
push
scas
sub
ds
fbstp
xchg
incl
stos
test
pushl
lret
cmpsl
cs
adc
inc
incl
xlat
inc
insl
add
mov
mov
mov
dec
and
fdivrp
and
and
xchg
sub
enter
test
aaa
dec
pop
scas
or
repz
loope
std
push
imul
loop
lods
mov
les
popf
or
adc
aad
jbe
scas
std
push
jmp
bound
decl
pushf
mov
and
lahf
decl
aam
dec
insb
lret
ficoml
lcall
ret
testl
and
mov
into
add
mov
lods
jns
shll
sahf
sbb
pop
mov
sti
pop
jmp
xlat
cwtl
mov
decl
pusha
movsb
js
es
std
jge
adc
decl
je
sbb
das
cmpsb
adc
out
xchg
pop
hlt
sub
add
inc
jecxz
icebp
decl
mov
call
pusha
push
cmc
mov
daa
loopne
std
cmp
push
sbb
incl
push
add
xchg
push
movsb
je
xchg
aad
loopne
les
bound
mov
sbb
mov
incl
ret
decl
jae
jp
callw
pusha
xchg
pop
dec
push
mov
jb
jmp
cwtl
pop
out
cmpsb
sbb
and
je
cmp
int3
cld
inc
lods
lock
fdivrs
push
dec
push
cld
into
pop
mov
push
jle
jne
stos
dec
push
ljmp
cld
movsb
daa
mov
push
jecxz
rclb
inc
testb
bound
addr16
loope
pop
sbb
push
test
fmuls
pusha
shlb
jno
fiadds
es
add
inc
addl
imul
inc
sbb
and
pop
push
je
or
mov
and
lcall
or
int
xchg
sub
mov
call
mov
rcrb
push
ljmp
aas
repz
mov
push
and
sbb
sbb
dec
daa
mov
mov
add
jno
mov
jmp
cli
cld
ss
jmp
and
divl
std
cmpsb
add
imul
or
fildl
mov
cmp
stos
pushl
sbb
setnp
in
pop
fs
int3
fnstcw
add
inc
pop
je,pt
mov
jge
cmp
test
shl
imulb
fstpl
pushl
dec
out
pop
jl
jle
daa
inc
stos
add
lahf
add
sub
xor
imull
cmpsl
stos
push
mov
out
stos
jbe
cli
scas
mov
imul
push
mov
jmp
ret
xor
out
sub
fs
aas
inc
jl
in
sbb
aam
push
mov
jge
push
ret
ljmp
cs
or
les
js
or
jmp
cmp
jecxz
clc
xor
jge
adc
or
mov
js
cltd
call
aaa
adc
adc
dec
mov
ret
inc
dec
mov
in
sbb
lahf
add
cmc
test
into
mov
ds
scas
imul
mov
xchg
cs
xor
testl
leave
cmpsb
pushf
pop
jnp
sti
sub
popa
mov
stos
jle
sub
cmp
pop
lcall
add
and
repz
xorl
mov
dec
notb
mov
cs
ljmp
xlat
cmp
add
test
jbe
in
jp
test
push
rolb
pop
xchg
jle
rcrb
push
mov
mov
xlat
loop
jb
imul
outsb
mov
dec
jp
sub
mov
jecxz
push
dec
xchg
sub
dec
jnp
jo
sbb
movsl
dec
or
add
add
and
inc
mov
lea
loope
or
std
sbb
sbb
je
adc
testl
clc
and
fdivs
mul
push
mov
clc
js
popa
orb
add
and
dec
cmc
xlat
les
scas
scas
pop
jno
movsb
adc
fwait
loop
sahf
idivl
ja
or
sbb
or
test
jbe
cli
push
mov
aam
loop
cltd
mov
and
sbb
push
jns
or
aam
adc
fidivl
lods
pop
out
bound
sbb
mov
mov
mov
adc
lods
xor
out
pusha
push
ret
adc
fs
or
add
std
call
dec
sbb
scas
es
mov
mov
mov
adc
adc
lcall
sahf
std
dec
sub
ret
popf
lret
adc
lods
cld
je
mov
mov
xor
pop
in
out
fcmovne
ljmp
clc
xchg
or
xor
sti
negl
out
mov
incl
jbe
inc
jmp
lds
jnp
imul
in
nop
jo
sub
or
lods
jno
mov
fwait
xor
ds
lret
jae
orl
movsl
imul
cltd
push
pushf
scas
xor
inc
sub
jae
lahf
cmpsl
jg
fstps
pop
pop
xchg
pusha
cmpsl
std
mov
mov
addb
cmc
dec
lcall
bound
mov
push
cmc
adc
cmp
jg
rorl
sub
sub
jae
mov
std
std
arpl
xchg
push
pop
cmp
out
rcll
xchg
xchg
sbb
mov
push
mov
xor
xchg
mov
add
mov
jmp
cwtl
shlb
jg
out
adc
sub
mov
jle
cmp
push
and
mov
std
test
testb
dec
int
add
jmp
mov
das
adc
sbb
ljmp
cld
inc
test
jle
inc
ljmp
jo
sbb
jbe
imul
sub
push
fcomip
jb
negb
outsl
sti
ljmp
or
call
pop
rclb
dec
sbb
pop
mull
pushf
jle
test
mov
jb
and
jbe
out
fdivrp
out
jle
pop
jae
mov
data16
jne
mov
jmp
pop
sub
or
fists
fisubl
pop
mov
fldt
test
pushf
imul
cld
popa
or
mov
push
adc
pop
inc
sub
arpl
dec
test
xor
les
ds
pushl
lcall
outsb
sti
stos
loopne
mov
xor
pcmpeqb
pop
outsl
bound
jbe
gs
add
cli
insb
pushl
stc
cmp
mov
sub
testl
xchg
sbb
inc
fs
and
jno
js
test
xor
jle
jae
jmp
push
sub
test
xlat
maxps
sbb
in
cmp
xlat
push
xchg
sbb
jl
dec
mov
mov
sub
sub
add
stc
pop
lds
sub
dec
orl
js
ljmp
fmull
jmpw
decl
cmp
paddd
push
mov
mov
loopne
fwait
push
add
ljmp
movsl
pop
jno
pushf
nop
add
sbb
jecxz
xchg
and
and
inc
jmp
inc
xor
xor
shlb
and
addb
jl
mov
pop
es
stc
test
mov
pop
adc
sub
push
push
mov
addr16
jg,pn
cmpsl
sub
add
cli
push
sbb
imul
inc
or
aam
dec
ds
rorb
jmp
in
jl
jno
pop
push
sub
jbe
frstor
shrl
je
out
xor
js
dec
int
enter
jmp
arpl
mov
shll
jmp
or
jle
pop
push
pusha
data16
fdivrp
jns
sub
mov
or
mov
lods
fildl
je
mov
incl
or
xlat
sub
adc
pusha
add
inc
adc
and
lcall
jecxz
nop
test
hlt
call
sub
subb
mov
cli
dec
sbb
cmc
mov
pop
in
fnsave
jno
xor
call
int
je
pop
mov
sbb
ud0
aad
or
and
mov
scas
cwtl
adc
fisttpll
jne
cmc
xor
mov
lock
call
test
cltd
inc
mull
jp
pop
outsb
rcll
push
mov
pushl
sub
push
std
xchg
je
add
ficompl
mov
fwait
mov
ja
nop
cmp
inc
addr16
mov
ljmp
mov
xchg
into
stc
or
xor
or
stos
push
ss
ljmp
arpl
stos
and
mov
jl
js
shrl
clc
and
push
sbb
testl
ljmp
mov
xlat
push
mov
jbe
xchg
push
leave
cwtl
sbb
push
cmpsb
nop
lret
in
idivb
cmp
dec
insb
cltd
add
mov
jbe
arpl
pop
mov
fidivrl
jns
dec
into
ret
mov
cli
sub
inc
leave
dec
pop
push
incl
outsb
xchg
ret
out
movmskps
cmpsb
lcall
sbb
clc
cmp
jnp
and
cmpsb
pop
arpl
insb
ljmp
lcall
cs
pushf
out
pop
sub
data16
cmp
and
incl
cmpsl
cld
call
mov
inc
hlt
or
jle
xlat
ja
icebp
sbb
xchg
inc
add
fs
fsub
ror
in
mov
aaa
add
and
cmp
inc
incl
mov
mov
je
pop
les
inc
sub
popa
in
xchg
xchg
and
jmp
xor
cmp
mov
push
fsubrs
dec
sbb
xor
fistpll
mov
test
jge
lods
cltd
out
or
loopne
loope
cs
cld
inc
hlt
insb
push
cmpsl
jmp
or
loope
movsb
call
popf
add
or
add
loop
push
jmp
lret
out
ds
push
xorl
adc
je
push
push
popa
adc
clc
movsl
aas
mov
cmp
jno
call
insb
cmp
pop
jns
jecxz
sar
out
mov
fisubrl
aad
mov
call
js
scas
jp
sbb
das
popf
sbb
mov
cltd
ja
xlat
sahf
xor
push
inc
inc
ljmp
sub
jmp
sti
inc
sbbl
dec
in
xor
and
insl
imul
pop
cmp
orl
sbb
add
sbb
dec
adc
lock
push
daa
fisttps
sub
or
andl
inc
and
aad
in
aas
or
mov
outsb
cmp
sub
mov
dec
shrl
push
xchg
adc
or
mov
pop
push
or
ds
and
out
dec
fstp
cli
sarl
inc
dec
ret
and
lea
pop
xor
push
jl
dec
clc
jae
jbe
push
xor
out
adc
jmp
cmc
stos
mov
int3
or
cmp
incl
xorl
and
xor
aaa
sbb
dec
sub
sbb
aad
inc
lods
pushl
addr16
xchg
inc
cli
push
incl
mov
pop
in
jnp
divl
jno
shll
movsl
sbb
lcall
xorb
cmc
test
push
and
cs
sbb
out
cmp
pop
jo
insl
imul
pop
cli
dec
ja
les
mov
incb
mov
sbb
test
mov
lods
mov
jbe
push
out
in
cmpsb
sbb
and
jmp
cmp
out
jae
aaa
mov
sbb
cmc
pop
stos
ss
inc
iret
dec
insl
out
mov
push
daa
xchg
push
and
lcall
xlat
cld
push
rorb
imul
scas
xor
fs
cmp
call
adc
xor
ljmp
mov
jle
fwait
mov
daa
jb
push
jbe
iret
jmp
fisubrl
push
sarb
mov
repz
lcall
cli
sub
hlt
xor
and
and
jne
mov
shrb
mov
stos
sahf
pop
xor
je
decl
xchg
in
gs
sbb
arpl
fistpl
sti
mov
cmp
int3
jmp
scas
sbb
jb
gs
or
xchg
shrl
jmp
jg
mov
into
fbstp
loop
aam
jo
pop
sub
lcall
adc
or
ja
mov
lock
sbb
mov
cmp
ds
iret
push
in
cli
inc
outsb
hlt
mov
cmp
fdivr
dec
xor
cltd
lcall
mov
clc
mov
inc
mov
sbb
jnp
mov
pop
or
sub
inc
or
pop
sti
loopne
jp
test
sbb
lds
cld
mov
dec
les
sub
jmp
into
mov
outsl
mov
scas
xor
adc
daa
pop
mov
in
xor
les
sbb
sub
add
mov
call
xchg
jge
ficoms
ljmp
js
jp
div
mov
sbb
fcoml
stos
cli
pshufw
or
movsl
mov
movsb
dec
aam
movups
lahf
push
ret
hlt
and
insl
cmp
mov
decl
aas
or
lcall
in
out
pop
lods
mov
jae
enter
sbbb
shl
fsubp
jmp
es
testl
clc
pop
or
popf
jnp
mov
sbb
mov
xor
and
scas
outsb
fs
jmp
pushf
in
mov
inc
fldenv
test
clc
lea
fadds
fcos
lods
pushf
mov
sar
xchg
xchg
scas
lret
mov
pop
sbb
add
mov
adc
xchg
outsl
aad
popa
jno
scas
decl
mov
jo
sti
and
xor
ret
jno
sbb
iret
movsl
mov
jg
lods
in
outsb
or
push
push
pushf
lret
jb
xor
sbb
test
loop
push
cmpsl
xchg
mov
pop
sbb
xor
jge
push
jbe
mov
lcall
stos
in
sub
push
add
mov
decl
mov
data16
add
lds
testb
movsb
mov
aas
insl
jae
xor
in
rcl
add
mov
mov
test
jmp
add
rolb
lcall
rcll
sub
enter
pop
push
mov
daa
shll
out
dec
cmpsl
test
imul
in
cltd
jmp
add
and
and
lea
btr
push
rcrb
in
ja
adc
movsb
add
xchg
add
es
lahf
sahf
cmp
and
icebp
xor
inc
test
push
fadds
xor
mov
xor
nop
inc
outsl
cmpsb
jne
stos
sbb
mov
sub
push
orb
cmp
and
sub
push
imull
fisttpll
imul
cwtl
and
pushf
mov
popa
scas
jb
xchg
movsl
mov
pop
ja
bnd
cs
cmp
mov
daa
pop
dec
rolb
jb
sbb
ja
mov
inc
xor
bound
js
in
adc
cmp
insl
push
jnp
mov
lret
imul
pop
xchg
inc
jg
pop
inc
sbb
lret
or
imul
popa
adc
and
loope
mov
leave
ljmp
mov
ss
lock
lds
mov
push
popf
aam
pop
ja
dec
push
std
arpl
test
mov
and
inc
jne
push
stc
lcall
cmp
shll
loope
lea
mov
or
call
pop
test
dec
or
pop
push
pop
imul
lret
xor
xchg
mov
mov
js
addr16
cmp
pushl
mov
cltd
jns
adc
push
cwtl
jp
mov
mov
adc
adc
mov
pop
or
dec
inc
cmp
shrb
shlb
adc
xor
xchg
lcall
inc
jp
test
fwait
in
jns
and
jb
sbb
inc
aas
push
xchg
ja
out
fsubrl
jne
pop
cli
cmpb
mov
pushl
lods
insb
repnz
mov
lcall
sahf
pop
cwtl
dec
xor
pushl
cmpsb
push
clc
inc
mov
adcl
data16
mov
repnz
aaa
ja
add
insl
movsb
sub
sub
sub
inc
add
test
mov
int
inc
divl
cmp
ja
cld
sub
adc
ret
out
pop
gs
lahf
ja
dec
stc
insb
push
fmul
mov
mov
js
lret
mov
cmpb
mov
test
call
test
xor
push
dec
sti
dec
ljmp
out
push
jns
out
or
dec
into
fldcw
lcall
psubq
call
pop
enter
inc
js
xor
dec
lcall
xor
jno
imul
add
call
mov
add
lret
jg
je
add
je
hlt
pop
jle
rcll
inc
push
call
lahf
ja
loop
popf
divl
ror
ffree
test
fbstp
push
popa
dec
mov
fmuls
js
call
pop
xchg
incl
jns
add
xor
adc
cmp
sub
or
aaa
ljmp
lahf
push
cmp
pop
adc
repz
cld
ljmp
mov
fiaddl
out
lods
pop
cld
mov
jno
je
sub
mov
inc
mulb
mov
lcall
dec
sbb
cmp
mov
dec
fisttps
jb
lods
fldt
jbe
std
mov
dec
and
sub
ret
add
icebp
dec
shl
pop
mov
push
test
pushf
sbb
and
cmp
aaa
loop
and
or
cmp
lock
test
jnp
pop
mov
popa
sub
sub
xor
cmp
push
cmc
sarb
jle
cmc
xchg
mov
std
mov
popf
clc
mov
pushf
xor
dec
ss
negb
mov
sbb
cmc
mov
mov
sbb
icebp
mov
bound
ret
push
roll
fwait
mov
and
push
clc
dec
lods
sub
mov
xchg
and
inc
dec
idiv
xor
dec
jnp
sarb
test
es
cmp
lea
shll
adc
mov
cmc
jge
ret
inc
add
fbstp
insb
mov
rorl
sub
sbb
jp
mov
out
in
sbb
sbb
stos
fisttpll
ret
int3
mov
mov
mov
je
jne
mov
dec
aas
add
std
shll
xlat
pop
or
xor
bound
sbb
test
jns
loopne
jb
mov
in
jae
xor
mov
add
rolb
xchg
inc
sub
mov
mov
mov
xchg
cmpsl
or
vucomiss
xchg
pusha
daa
mov
mov
in
cwtl
xchg
ret
mov
inc
xor
push
mov
sbb
rorl
cmpsl
mov
jle
lods
std
push
inc
divl
xorl
push
cs
in
in
adc
xchg
movsb
pop
jg
pop
ja
pop
sub
lods
or
sub
pushl
dec
jg
mov
sub
cmpsl
pop
ljmp
mov
inc
insb
inc
push
imul
test
lds
shlb
les
push
mull
xor
shlb
insb
mov
jg
lods
sbb
add
mov
outsl
lcall
pusha
rcl
adc
cld
or
arpl
fs
ja
xchg
daa
iret
sbb
or
xchg
and
push
lock
sub
add
pop
imul
sahf
dec
and
jo
sbb
inc
jl
inc
inc
decl
xor
call
fnstcw
movsl
shll
mov
lcall
push
xchg
daa
mov
loop
jle
clc
repnz
cmp
repz
sub
cmp
jae
je
std
imul
jb
cmpsb
test
je
add
testl
sarb
ss
std
scas
std
pop
popa
push
inc
mov
adc
in
adc
das
test
bound
jo
call
xor
xchg
and
movsl
pop
jmp
and
xor
xor
sub
jbe
arpl
xor
and
movsb
cltd
push
xchg
pop
cmp
mov
mov
ljmp
xor
jmp
adc
cmpsb
outsb
jp
lods
call
or
ljmp
mov
sti
mov
or
inc
pop
imul
mov
je
nop
inc
xor
test
test
jnp
jl
sbb
sbb
loopne
xchg
out
mov
std
pop
ja
dec
dec
roll
es
sbb
xor
stc
jnp
pop
jmp
cmp
xor
push
lea
push
xor
jp
insb
in
aaa
add
je
mov
sbb
lock
adc
lods
divl
jmp
inc
or
push
inc
fstpl
shr
shll
lods
into
push
call
jae
outsb
mov
sar
cmp
ret
cs
ja
movsb
nop
sub
xlat
data16
sar
cli
sbb
inc
sub
ljmp
mov
sbb
fildll
cwtl
xchg
mov
stos
pop
ljmp
xor
jae
push
jg
pop
xchg
repz
inc
or
mov
aas
inc
push
xor
pusha
cltd
adc
cwtl
add
mov
mov
xor
arpl
cli
pop
icebp
cld
xor
adcl
sti
adc
fnsave
sub
mov
mov
xlat
fmuls
mov
mov
mov
jg
je
push
jg
xor
adc
fistps
aas
ja
cmpsl
jge
or
pop
xor
in
xor
mov
popf
mov
push
mov
test
push
sbb
je
lret
or
lcall
sub
ja
jno
lods
daa
aad
es
lcall
pop
mov
or
jmp
inc
lret
mov
dec
cli
jmp
ljmp
fs
jae
js
jbe
push
mov
faddl
ljmp
adc
push
jne
jmp
mov
test
jae
std
mov
incl
iret
and
lahf
fcoml
dec
sub
fisubrl
andb
jge
sahf
cmp
push
xlat
in
rorl
orb
push
cmp
lret
pop
or
scas
lcall
imull
sti
xlat
popa
pop
mov
or
pushl
ret
mov
popa
rclb
xor
movsb
pushl
fldt
out
das
pop
cmp
lret
mov
out
pushl
or
cli
aaa
lcall
imul
adc
xlat
fs
dec
mov
pop
addr16
idivl
rolb
popf
jbe
repz
pop
and
pop
pusha
push
sub
test
mov
mov
xchg
call
or
pushl
jmp
inc
jl
sub
fs
cmp
je
mov
adc
faddl
jecxz
divb
add
xchg
xlat
xor
or
mov
idivl
or
movsb
mov
cmp
lods
clc
sub
fdivrs
in
mov
mov
push
mov
jns
movsb
imul
push
or
mov
ja
in
inc
pop
or
pop
mov
ds
in
mov
and
inc
daa
mov
aaa
addr16
xchg
inc
sbb
cmp
jne
in
lea
jno
pop
push
ljmp
std
add
inc
mov
mov
sti
push
push
push
xchg
xor
mov
popf
add
out
jae
lods
adc
add
add
push
lcall
jbe
add
jbe
sub
push
jbe
push
packuswb
or
jecxz
mov
test
xchg
fimuls
jg
fldcw
sarl
lods
lret
xchg
pop
and
test
imulb
mov
mov
je
cmp
jp
movsb
push
mov
ja
lock
test
popl
mov
xchg
and
adc
inc
imull
out
pop
sub
mov
dec
inc
int
arpl
push
mov
cld
popf
insb
lods
incl
loopne
pop
lock
push
mov
testb
jo
xor
xchg
dec
lds
inc
pop
sbb
stos
jp
jns
negl
xor
stc
inc
repz
adc
outsl
inc
addr16
ljmp
mov
aad
inc
jmp
icebp
fisubrl
xor
jnp
and
mov
mov
xchg
inc
fld
ljmp
xchg
mov
pushf
xor
rclb
out
jno
cmp
stc
aam
cld
mov
cmp
jno
lods
clc
sub
test
push
in
pop
add
pop
jmp
bound
or
aad
lods
lcall
out
sti
ds
out
stos
cmpb
je
aam
hlt
jne
call
jns
call
in
pop
jge
das
jmp
popa
imul
data16
jmp
pushl
jle
adc
mov
mov
pushl
int3
outsl
sar
inc
and
hlt
cmpsb
xlat
stc
notl
ljmp
scas
ror
call
addr16
inc
in
lods
cmp
lods
push
pop
loopne
jmp
gs
push
mov
cmp
adc
ss
add
push
testb
mov
cmp
dec
or
inc
push
xor
sahf
call
push
xchg
into
pushf
jo
shll
and
sub
data16
push
call
cmp
movsl
je
push
adc
inc
jno
sub
add
pop
push
mov
xchg
push
pop
daa
jne
pop
popf
mov
and
jns
ljmp
xor
imul
push
sub
mov
movntq
adc
shll
imul
and
and
out
sub
mov
fsts
add
jp
pop
je
into
xor
sbb
and
sub
scas
es
mov
negl
sbb
flds
jb
fwait
in
pusha
jbe
inc
lcall
rcll
rcr
data16
or
lahf
adc
pop
cmpsb
sar
sub
cmp
xchg
push
xor
movsl
or
movsb
stc
push
movsl
iret
or
pop
ljmp
xchg
inc
cmpsb
inc
pop
jne
jle
mov
pop
out
fldenv
decl
lea
xchg
test
jmp
fstps
leave
pop
push
mov
incl
stos
outsl
sbbl
scas
xchg
sbb
sar
dec
fistpll
push
lock
aas
out
sub
lods
or
outsl
scas
xor
enter
pop
pushl
stos
and
ret
insl
jnp
jmp
pop
cmc
idivl
cmpsl
sbb
cmp
jmp
pop
pop
aaa
inc
mov
in
hlt
fwait
mov
jbe
insb
xchg
scas
aas
sbb
cmp
adc
lock
lods
xchg
adc
push
out
rorl
cli
add
test
hlt
add
mov
ljmp
sub
fsts
fbstp
xchg
mov
in
data16
decl
add
mov
out
test
xchg
inc
rolb
sbb
pushf
cmp
xchg
xchg
mov
inc
xchg
adc
loope
adc
je
inc
mov
call
das
xchg
call
test
in
fdivrp
inc
out
mov
jg
outsl
nop
lods
movsb
push
add
sub
xor
mov
push
mov
sti
in
mov
sti
mov
cmpsb
int3
or
sbb
out
push
inc
rol
addl
out
fsincos
inc
in
sbb
inc
aad
mov
lret
xor
or
xchg
pop
js
push
fwait
push
pop
add
mov
sar
fidivrs
xor
fdivr
fucom
cmp
lret
aas
sub
add
mov
jbe
pusha
and
movsl
lods
adc
mov
aas
push
sahf
xor
pop
imull
out
aad
jg
int
jmp
ja
mov
adc
push
outsl
incl
lcall
mov
jno
or
and
pop
sbb
lahf
adc
mov
add
unpckhps
in
ljmp
mov
sub
insb
cmpsl
cmp
popf
lods
pop
inc
sahf
jne
xor
repz
inc
fisubl
cmp
mov
lock
mov
repnz
mov
adc
pcmpeqb
mov
mov
inc
stos
bound
xor
es
dec
lret
js
mov
test
jbe
lock
mov
mov
mov
xchg
ds
fadd
ja
out
pop
mov
and
sbb
cmp
push
in
fdivs
add
imul
sub
pusha
mov
jo
add
dec
hlt
loopne
mov
push
fwait
jge
mov
rol
pop
jmp
inc
sbb
cmp
xchg
sub
xchg
sbb
jp
call
jns
out
stc
call
insb
add
xlat
ds
out
push
dec
jg
enter
mov
es
cmp
idivb
inc
sahf
pushf
test
jo
dec
hlt
ljmp
shlb
outsl
and
out
cwtl
sbb
pop
jmp
cmp
pop
call
xchg
pop
ficoml
mov
das
mov
adc
aaa
cwtl
lock
bound
jmp
mov
divl
rcrb
inc
mov
lea
sub
jmp
push
xor
lcall
adc
jne
outsl
ljmp
mov
xor
xchg
add
fists
xchg
scas
gs
call
add
mov
cli
cmp
pop
loop
dec
xchg
cs
inc
inc
loopne
mov
sub
out
fistpl
sub
icebp
lcall
punpckhwd
jl
daa
je
shlb
and
dec
ja
je
in
add
orb
fnstenv
mov
decl
sahf
sub
inc
cmp
push
xorb
fwait
jo
dec
or
dec
inc
das
ljmp
mov
fcompl
cmp
pop
loope
es
pushf
inc
es
mov
adc
aaa
mov
iret
sbb
fwait
adc
jmp
daa
sub
mov
add
pop
sti
aas
sbb
call
in
pusha
movsl
mov
pushf
and
and
xchg
int3
test
or
pop
push
lods
sub
std
std
mov
jae
mov
cmpsb
mov
push
push
nop
insl
dec
decl
lahf
enter
mov
test
out
repnz
mov
cs
xchg
push
mov
pop
mov
jbe
or
mov
push
dec
lahf
fwait
and
adc
sub
jb
push
xchg
pushf
and
adc
incl
mov
xorl
int3
movsl
add
movsb
testb
mov
jmp
jge
and
ret
ss
lea
pop
lcall
jle
adc
or
cmp
pop
dec
divb
dec
fimull
scas
and
cmp
mov
pop
jne
xacquire
jnp
lcall
inc
mov
gs
std
mov
push
or
icebp
mov
mov
sti
inc
ljmp
jae
cmp
jecxz
into
and
mov
push
jae
or
iret
mov
inc
mull
fdivrl
lcall
xchg
cmp
adc
cmp
mov
gs
push
pop
inc
out
lods
int
sbb
jae
call
add
int
cwtl
in
repz
scas
shlb
je
mov
push
lret
mov
stos
insl
out
mov
sbbb
call
das
fldl
into
and
test
call
test
bound
popa
jne
repz
js
xor
or
push
push
mov
jmp
xchg
jne
lahf
push
add
sub
add
call
test
rcrb
sbb
ret
scas
mov
aad
fidivl
lock
inc
decl
decb
aaa
sbb
insl
fisubrl
xor
subl
add
and
mov
xor
test
dec
pushf
cwtl
and
jl
andl
repz
add
and
pop
pop
mov
add
xorl
jne
jne
rcrl
movsl
jb
loopne
cmp
movsb
add
dec
add
pop
mov
xchg
xor
insb
cmpsb
std
pop
mov
sub
push
and
jb
push
decl
cmpsb
pop
stc
bound
dec
xor
mov
xchg
aas
cmp
push
ljmp
lock
stc
mov
sbb
outsb
lea
ret
jmp
pop
into
inc
negl
mov
adc
lret
ja
div
mov
cmp
es
mul
cli
fstps
add
dec
arpl
rcr
in
ljmp
jmp
xor
frstor
lcall
and
repz
sar
mov
cmp
mov
jmp
bnd
xor
inc
popf
mov
jmp
add
mov
pushl
out
and
add
jae
pop
mov
adc
scas
mov
push
pop
mov
adc
movsl
rorb
aas
cmp
xorb
push
cs
xchg
jns
lcall
test
and
cs
pop
inc
je
arpl
mov
call
int
lcall
xor
mov
insb
cmc
jb
call
jae
cmpsb
mov
xchg
cwtl
mov
in
pop
outsb
not
and
sti
jo
pushl
inc
jg
push
or
or
fsub
cli
movsl
pushl
test
jns
pop
push
mov
movsb
mov
adc
fmul
push
scas
rol
les
lods
and
incl
mov
icebp
std
arpl
out
jne
push
in
fs
push
popl
cwtl
add
iret
cmp
pop
pushl
inc
mov
push
jbe
test
shrb
mov
imul
stc
xor
pusha
dec
pop
xchg
inc
sahf
call
pusha
cmp
pop
xchg
sbb
stos
mov
aas
in
int
mov
sub
mov
sbb
and
cmp
stc
call
adc
jge
dec
push
imul
adc
neg
fimull
mov
cmp
out
sarl
inc
sbb
cld
jle
loope
and
int
gs
jne
mov
rep
pushl
les
outsl
loop
lds
mov
and
mov
mov
movsb
lcall
mov
inc
je
push
cmp
mov
mov
lods
pop
das
sub
cmc
pushf
js
fdivr
fld
mov
ror
xchg
ljmp
push
sub
xchg
shll
filds
jecxz
sarl
das
cwtl
xchg
dec
aas
je
and
cld
push
jp
or
xor
mov
pop
ss
pop
loopne
sbb
lcall
in
xchg
xor
and
and
pop
int
sbb
rep
mov
movsl
decl
in
cmc
sbb
jbe
std
bnd
not
push
add
shl
lea
dec
and
jp
xchg
cld
or
pop
or
bnd
insl
push
cmp
std
mov
fcos
adc
aaa
mov
or
cmpsl
fs
pop
inc
cmp
out
fwait
daa
mov
std
push
jns
stos
imul
mov
in
jl
movsb
fs
ds
mov
std
outsb
xchg
incb
sub
stc
enter
inc
inc
sbb
cltd
sbbb
loope
mov
jae
pop
jbe
sub
fisubs
xchg
push
add
mov
shll
add
pushl
hlt
sub
stc
xchg
jmp
mov
pop
insl
push
jns
loop
adc
jns
or
lock
popf
aaa
push
or
cli
mov
xchg
aaa
adc
cs
jmp
xlat
jp
jae
adc
mov
jo
add
ja
push
jne
nop
enter
ja
in
xlat
push
dec
dec
xchg
sub
add
mov
mov
lods
shll
cmp
mov
ds
push
xlat
adc
push
sub
loope
sbb
incl
add
mov
mov
sub
lahf
cmp
test
add
cltd
sub
dec
mov
push
mov
lods
dec
out
or
pushf
popf
movsb
jno
dec
xchg
push
pushl
xor
stos
pushl
jg
pushf
shll
shr
jae
pushl
inc
mov
jns
mov
adc
gs
lods
sub
pushl
sbbb
cltd
mov
fcomps
ffreep
jns
jne
popa
sub
add
push
stos
mov
out
add
sub
ja
nop
out
add
sub
or
mov
mov
aam
mov
sub
cld
sub
push
rorl
lahf
inc
mov
loope,pt
or
or
xchg
decl
lahf
test
ljmp
xlat
fnstcw
fcoms
ud0
fs
into
sti
jle
call
cmp
pushl
push
cs
loope
inc
push
jmp
inc
arpl
jl
or
sbb
or
cs
sub
add
sub
dec
bound
push
push
pushl
repz
or
sarb
mov
sbbl
push
popa
or
lods
movsb
mov
sahf
clc
cltd
stos
pushl
push
pop
xor
sub
sbb
in
cmpsl
jb,pt
adc
loopne
int3
jne
loope
inc
xchg
ds
cltd
sbb
outsl
cmp
mov
aad
or
inc
mov
jmp
inc
and
in
repnz
dec
push
jo
mov
or
push
dec
or
out
mov
cltd
add
sub
push
nop
ss
insl
jno
lock
mov
imul
xor
jl
jmp
or
incl
xor
or
add
pop
jmp
and
call
push
fwait
pop
adc
pop
mov
xchg
fucomp
adcl
jmp
lods
imull
jbe
addr16
xchg
lahf
inc
mov
cmpsl
inc
adc
sti
pusha
cmp
xchg
jmp
fmuls
jmp
cmp
ljmp
sti
xor
or
out
pop
sub
daa
test
or
test
sbb
inc
lahf
aad
cmp
pop
ljmp
decl
push
jns
int3
daa
inc
pop
divl
nop
fistpl
stc
inc
add
jge
divb
test
add
push
in
fs
pop
aaa
idivb
sbb
mov
dec
lcall
push
mov
fwait
mov
mov
mov
imul
mov
push
cmp
aam
mov
cmc
lods
cmp
fisttpll
jnp
decl
mov
mov
push
pop
nop
call
jo
outsl
add
fcompl
incl
pop
loope
sti
cmp
into
mov
mov
cld
int
decl
loopne
mov
xchg
cmp
sbb
or
ss
sub
divl
pusha
pop
enter
cltd
imul
aad
jg
cltd
stos
notl
ss
inc
repnz
cmp
lea
cmc
sub
jmp
pop
xor
xchg
mov
fisttpl
lcall
push
iret
xchg
mov
decl
xor
je
insb
cmp
or
add
out
push
ret
inc
push
push
fsts
and
cmp
inc
daa
adc
cmp
call
bound
push
divl
jno
ljmp
dec
jae
cmpsb
mov
in
test
jge
jbe
push
ficompl
inc
pushl
mov
xchg
jmp
loop
das
jmp
rorl
xchg
cmc
jle
lcall
push
ret
push
scas
out
call
sbb
sahf
aaa
enter
in
push
xor
sbb
mov
push
cmp
out
cmp
decl
and
in
call
jbe
add
imul
incl
imul
cmp
cmp
xor
pop
aam
call
clc
pop
mulb
lea
mov
mov
jl
addl
sti
lea
int3
mov
jae
jge
loope
mull
rcr
insl
rcrb
cmp
rorl
decl
pop
repz
xor
and
gs
ret
xchg
pop
in
jp
dec
cmp
xchg
sbb
faddp
mov
mov
mov
jbe
adc
dec
jp
into
test
jg
pusha
mov
xor
add
je
adc
mov
jg
decl
or
sti
inc
ja
into
or
adc
pop
testl
add
add
sbb
test
adc
ja
push
xor
xor
jnp
cwtl
into
test
test
inc
inc
sti
sbbb
lcall
fwait
mov
test
mov
ret
mov
mov
jg
movsb
and
lea
jo
rcrl
daa
xor
dec
jge
jp
jbe
cmpsl
in
jnp
and
add
repnz
aaa
cmc
aad
lcall
xor
lea
mov
cmpsb
ljmp
mov
std
push
mull
incl
sub
mov
out
mov
mov
je
pop
xchg
jmpw
pushl
daa
and
lret
pop
aad
call
pushf
add
push
stos
push
arpl
ja
xchg
push
pop
je
xchg
lds
or
mul
and
mov
clc
dec
lock
or
sbb
mov
inc
adc
push
int3
or
jl
mov
sbb
divl
pop
xorl
sti
sbb
push
in
sbb
mov
xchg
or
in
shll
insl
xor
dec
inc
decl
add
push
incl
in
jbe
adc
decl
fsubrs
dec
ss
fwait
cmp
stos
mov
xchg
add
push
outsl
xchg
pushl
mov
es
dec
xor
mov
lea
scas
int
sub
int
sbb
jae
pusha
loope
adc
xchg
xor
cmp
cs
into
pushl
scas
ds
jnp
incl
inc
fldenv
and
decl
add
fcmovne
test
jg
mov
call
xor
mov
mov
cs
add
stos
inc
mov
ss
and
jb
insl
gs
lret
loope
ret
cmp
repnz
insb
fdivs
xchg
lret
xchg
inc
sti
shr
jmp
sbb
xchg
cmp
mov
cmp
push
call
sub
das
push
nop
fmulp
loopne
call
repz
aad
fcom
sbb
or
adc
in
mov
incl
sahf
mov
je
call
or
fcmovnb
dec
dec
pop
mov
pop
sub
lods
testl
roll
movl
addr16
out
dec
je
enter
dec
or
fisubrs
mov
ljmp
int3
cmc
scas
sub
pop
jp
fisttps
in
gs
jbe
dec
lcall
cmpsb
mov
cltd
decl
fldt
inc
jne
ljmp
daa
sub
cli
xor
movaps
icebp
dec
rorl
mov
jge
aam
movsl
mov
jo
xchg
sbb
or
and
sbb
popa
push
jecxz
jmp
pusha
and
das
push
lcall
or
ds
jmp
pop
cwtl
hlt
mov
mov
imul
cmc
xor
mov
data16
sub
cmp
sahf
repnz
incl
push
fneni(8087
jmp
or
mov
add
nop
sub
int
sahf
jmp
out
rcrb
enter
jmp
mov
in
stc
div
jle
arpl
jle
mov
xchg
add
xor
pop
stc
sbb
imulb
xchg
stos
cli
mov
cwtl
mov
sub
sahf
dec
imul
jb
jns
adc
adc
adc
adc
sub
jg
mov
pushl
stc
dec
push
jno
ret
stos
shr
incl
mov
push
decl
imul
call
lahf
mov
mov
cmp
jmp
jge
in
incl
mov
add
nop
mov
jnp
clc
inc
adc
lods
aas
jmp
pop
pop
stos
fsubs
jo
mov
mov
and
cmc
repz
xor
decl
std
mov
filds
jmp
scas
xchg
inc
out
incl
rcrb
incl
xor
mov
sub
rolb
mov
mov
push
cmp
dec
incl
call
fadd
and
jge
out
out
and
or
mov
dec
jbe
sahf
jmp
bnd
inc
ret
cwtl
mov
jmp
inc
add
lret
sub
pop
in
cwtl
xchg
mov
sub
xor
out
or
movb
cmp
test
push
movsb
lcall
dec
pop
mov
or
decl
fwait
push
cmc
pop
test
push
subl
mov
fsubrl
daa
insb
or
push
fimull
cmp
out
mov
fdivl
decl
iret
push
decl
sbb
push
sub
cs
ja
pop
stc
inc
call
mov
pop
fimuls
rclb
and
cli
nop
add
sbb
mov
jnp
ja
or
mov
test
call
dec
sub
sbb
inc
xchg
sbb
stos
incl
pop
pop
push
addr16
insb
mov
adc
negl
add
lds
add
push
xor
pop
pushl
inc
jno
jns,pt
hlt
daa
aad
mov
or
jne
add
add
aam
lcall
iret
leave
inc
test
push
sub
cmp
fldcw
inc
dec
push
jno
insl
lcall
out
add
pusha
inc
inc
js
cmpsb
sub
scas
or
mov
sti
arpl
push
and
nop
jmp
out
xor
adc
sbb
and
cmp
lcall
hlt
inc
scas
jmp
stos
and
divl
jecxz
push
ret
jo
subl
arpl
xlat
jp
or
lock
pop
or
call
cmc
xchg
push
es
push
fsts
test
or
js
sbb
int3
xorb
or
adc
sub
xorb
mov
cmpsl
lods
xor
sbb
int
iret
out
test
incl
rcrb
inc
mov
int
sti
mov
ja
sub
jmp
inc
xor
dec
lcall
test
jbe
sti
int3
cltd
repz
ficomps
mov
fcoms
jmp
adc
js
pop
lea
push
daa
testl
dec
movsl
pushl
jp
out
jae
inc
adc
push
aad
mov
push
je
jg
mul
add
jbe
aaa
loop
movsl
sub
sub
mov
movsl
bound
push
fs
mov
pop
test
cmc
and
scas
ds
push
addr16
insl
mov
mov
dec
sbb
cmp
push
jno
gs
push
stc
dec
rol
std
mov
pop
xchg
movsl
scas
add
xchg
out
cli
lods
sub
mov
jo
shll
scas
cli
mov
jns
cmp
call
nop
cltd
into
fimull
lock
sbb
leave
jmp
sub
sarl
mov
xor
inc
pushl
mov
add
pop
jns
stos
and
push
jbe
nop
lahf
xchg
popf
pushl
xchg
je
loop
daa
or
cmp
jbe
nop
fidivrl
fwait
sub
adc
and
ljmp
inc
sbb
mov
cwtl
das
aas
mov
or
data16
lcall
stos
fildl
enter
rol
call
imul
cld
sub
sbb
je
xor
mov
mov
scas
add
bound
xor
pop
out
pop
xchg
movsb
cld
pop
mov
jb
cmpl
fstpl
mov
aad
scas
cmp
aas
xor
mov
movsb
xchg
leave
sub
dec
mov
lods
jne
lahf
push
xchg
adc
aaa
sub
mov
push
mov
sbb
sub
push
xor
repz
outsl
movsl
mov
xchg
dec
lahf
mov
cmp
push
hlt
jbe
inc
cmp
out
xchg
adc
cmp
out
push
mov
ljmp
fisttpll
lods
xor
aaa
lds
and
push
arpl
pusha
daa
add
push
in
lods
jb
sub
jo
mov
nop
ljmp
xor
inc
insl
arpl
jmp
cmp
or
scas
inc
xorb
push
lcall
inc
bound
arpl
cmp
cmp
push
jp
fst
cmp
nop
jbe
push
cmp
xor
lea
ret
jmp
and
loop
gs
stos
out
mov
sbb
rcl
mov
out
mov
sub
hlt
or
cmp
ss
sbb
xchg
into
mov
ljmp
xlat
aaa
and
xlat
popl
cmp
or
aas
sub
xor
je
inc
repz
lds
mov
ja
cli
aam
jbe
pop
movsb
sub
lret
lahf
sbb
and
bnd
adc
cmpsb
adc
in
push
das
fwait
pop
and
out
std
mov
add
xchg
jns
sbb
push
sbb
sub
in
push
jo
mov
push
fwait
mov
mov
mov
adc
mov
push
in
insb
inc
jnp
jge
mov
das
outsl
push
test
mov
loop
das
aaa
sub
dec
mov
es
push
xchg
aas
aaa
outsb
add
sti
in
loop
ss
or
adc
pop
mov
mov
sub
xor
movsl
lahf
push
xor
addr16
sub
rclb
xchg
mov
dec
xor
ja
or
xchg
add
xchg
mov
pushf
push
pop
mov
sbb
jnp
stos
pushf
push
je
inc
test
xor
into
mov
lods
aad
mov
cmp
push
ret
daa
aaa
div
psubusw
jmp
jg
sbb
repnz
xchg
or
inc
nop
cmc
pop
imul
xchg
push
push
fisubrl
jl
push
fs
xor
xor
insb
cmp
jne
ret
mov
jne
subl
pushl
cmp
sub
sar
enter
xlat
cmpsl
adc
call
aas
adc
movsl
jl
sti
stc
fsqrt
dec
incl
sbb
outsb
jge
sarb
fdivrl
and
push
mov
xor
je
loop
add
movsb
andb
data16
mov
lock
sbb
mov
aaa
dec
mov
cltd
add
xor
out
ss
or
pcmpeqd
mov
in
mov
xor
mov
sbb
lods
fdivs
xorl
xchg
incl
and
or
cmp
mov
sti
dec
and
ljmp
test
ficomps
jns
sbb
pop
je
sub
inc
sbb
hlt
add
jbe
pop
cmp
mov
add
mov
pushl
mov
xlat
call
add
out
data16
outsl
iret
fldenv
mov
inc
and
cmp
enter
jmp
cwtl
lock
or
idiv
jle
roll
fsubrs
cltd
xchg
movl
hlt
call
push
inc
push
pushf
push
dec
das
jne
mull
lds
test
out
pop
mov
lret
iret
add
add
pushl
xchg
pop
jl
push
cmp
es
dec
sarl
adcb
inc
aas
sbb
adc
xor
int
add
dec
jb
pop
nop
incl
mov
test
repz
or
add
xchg
xchg
sub
or
cmc
mov
in
stc
je
mov
int
lcall
pop
mov
lret
sbb
ret
inc
mov
dec
setbe
add
mov
mov
test
stos
jbe
inc
jmp
and
mov
ret
or
incl
sti
dec
fdivr
imul
jl
cmp
and
into
test
or
adc
or
fwait
inc
cmp
xchg
outsb
and
in
leave
idivb
sbb
xchg
clc
aas
jp
jb
cltd
sti
sahf
adc
push
lods
xor
fwait
clc
stc
decl
xchg
and
or
out
pop
and
inc
outsl
mov
cmpsb
xor
call
jmp
gs
popf
cmpsb
enter
test
mov
mov
jge
mov
xchg
cmp
aas
cld
xor
iret
adc
js
mov
push
push
sub
call
mov
mov
call
std
imul
jbe
stos
sbb
call
pop
shlb
dec
repz
cli
fdivrp
outsl
cmp
je
hlt
arpl
cmp
xlat
mov
inc
sbb
lret
pop
jno
pop
mov
ds
cmp
mov
sti
jb
fistpl
mov
test
mov
nop
pushf
dec
das
cli
lcall
hlt
inc
sub
mov
sbb
aas
jns
mov
leave
das
int3
dec
mov
dec
or
pop
lds
sbb
ja
and
sar
cmp
pop
ljmp
push
cmpsl
ds
xor
ret
lcall
in
sar
jp
or
repnz
sbb
imul
popf
jnp
orb
push
xchg
jo
dec
jbe
add
add
or
add
xor
es
sub
jp
xchg
mov
aad
mov
movsl
sbb
jge
push
pusha
call
jle
xchg
mov
scas
dec
push
add
xchg
or
jae
scas
dec
test
pop
inc
mov
lcall
lcall
and
mov
stc
insl
enter
cmpsl
daa
mov
lcall
lods
sbb
jne
mov
sbb
inc
sbb
mov
dec
std
or
adc
fistpl
loop
pop
lock
sub
or
push
call
mov
jbe
loop
out
dec
push
movsl
movsb
clc
sti
jns
sub
jo
jae
cltd
in
lret
and
mov
imul
fwait
and
or
in
ja
inc
add
dec
sub
mov
push
std
in
sub
repnz
and
mov
sbb
inc
data16
sub
push
xchg
sbb
inc
push
sarl
sub
cmp
sti
pushl
jle
movsl
mov
outsl
mov
aas
popf
xchg
jl
incl
adc
inc
and
test
shr
dec
xchg
sub
push
jb
hlt
push
decl
jno
clc
fldenv
push
jmp
std
inc
xchg
jecxz
jl
mov
xor
adc
int
and
test
out
dec
sub
jbe
addr16
in
and
xor
notl
adc
push
dec
pushl
push
mov
lcall
adc
mov
jl
sarb
decb
ret
inc
mov
cmpsl
push
sub
loope
enter
jl
mov
in
or
cmp
ja
test
cmp
lcall
sub
loop
jne
inc
jle
xlat
pushf
jp
stos
mov
ljmp
sub
decl
icebp
push
lcall
add
adc
dec
lret
or
mov
test
pop
sbb
jmp
pop
cs
addb
imul
fiaddl
scas
dec
lods
lcall
cmp
test
cmpsb
add
push
jle
push
pushl
and
popa
xchg
loop
imull
sbb
add
cmc
jbe
sti
popa
test
ds
test
lcall
push
ja
js
push
in
xchg
call
push
mov
pushl
cmpsl
push
mov
cmp
cld
gs
and
stos
cmp
push
aaa
in
pop
or
and
lcall
or
pop
sbb
call
rolb
adc
scas
bound
jbe
daa
and
aaa
xchg
add
xor
scas
pop
jns
sbb
jg
jp
aaa
sti
jle
lret
add
adc
decl
into
stos
test
push
fsubl
shrb
enter
int
mov
fildl
jns
xorl
xchg
scas
push
imul
gs
sub
pop
jmp
andb
jecxz
pop
loopne
sbb
callw
jno
xor
call
insl
lahf
adc
shlb
fldl
icebp
mov
test
add
xchg
enter
jbe
jl
call
minps
pop
cmp
sbb
cmp
mov
nop
lods
sub
jle
add
mov
sbb
sahf
mov
shlb
xchg
dec
enter
jbe
iret
dec
mov
sbb
daa
push
pushl
pop
sbb
js
lods
mull
stos
and
push
int3
ret
jmp
hlt
jmp
testl
daa
pushf
out
sar
jle
rcrb
dec
push
jmp
fadds
imul
lods
xchg
pop
xor
mov
push
mov
push
sbb
add
out
incl
mov
out
daa
mov
pop
mov
jne
js
xchg
into
sahf
mov
jmp
jle
repnz
cmpsl
or
jae
pop
cmp
mov
sahf
jmp
inc
test
xor
std
lret
push
cmp
dec
sti
jnp
push
fbstp
lods
int3
dec
nop
push
js
add
push
xor
xchg
xchg
xor
repnz
dec
ds
int
mov
jmp
dec
out
xchg
lahf
lcall
in
add
ret
mov
mulb
sub
xor
inc
xlat
js
or
clc
add
enter
jecxz
push
push
dec
xchg
lods
jbe
mov
or
stc
jne
pusha
jnp
jmp
inc
outsl
repnz
xchg
loopnew
or
sarb
lods
mov
push
jae
stos
aam
mov
cmp
dec
frstor
incl
jno
pop
notl
call
sbb
cmpsb
xor
jge
adc
sub
sub
sbb
or
into
sbb
loopne
aam
rorb
or
fcomip
cld
sub
jo
add
adc
cmp
lea
xor
jns
xor
inc
jb
mov
mov
lock
aaa
sarb
jbe
mov
mov
int3
cmp
int
push
sbb
pop
mov
sub
sub
sbb
ljmp
and
rcrb
pop
mov
adc
and
xor
fsts
loopne
mov
es
mov
out
cmp
lock
incl
and
jbe
mov
icebp
add
aaa
ret
adc
dec
clc
adcb
popl
ret
xor
stc
idiv
lds
inc
lods
imull
fwait
pop
dec
int3
dec
adc
ja
inc
xor
lods
sti
daa
sarb
notl
dec
xor
sbb
dec
ja
xlat
adc
and
lock
pop
pushf
out
rolb
mov
cmpxchg
in
mov
sub
aaa
jmp
loopne
jae
lock
xor
lods
adc
add
in
lret
int3
mov
lcall
pop
jo
xchg
pop
add
add
or
clc
je
pop
jp
lcall
lcall
adc
push
int
xor
or
rcrl
inc
cmp
out
mov
test
mov
adc
cltd
mov
push
test
or
pop
divb
sti
add
sbb
push
cmp
jle
daa
push
and
dec
fcmovbe
dec
inc
mov
or
div
iret
mov
icebp
aas
pop
test
popf
ss
sub
je
jbe
js
mov
insl
popf
adc
mov
push
fdivr
mov
sub
div
jg
cmpb
xor
xor
sub
fs
xor
decl
lahf
push
into
or
pop
jmp
cltd
insb
mov
xor
ffree
or
popf
sub
ljmp
in
incl
in
jo
inc
mov
jmp
repz
push
call
fwait
das
insb
xchg
push
shrb
mov
popa
movsb
pop
mov
and
ljmp
or
or
rorl
ds
cmc
lcall
lock
pop
cwtl
xchg
les
and
push
mov
out
mov
or
lods
xchg
add
jmp
mov
mov
dec
fdivrp
or
hlt
das
mov
jecxz
testl
addr16
add
out
roll
push
mov
sbb
repnz
sbb
jp
pushf
rorl
sbb
jnp
inc
push
arpl
cmp
data16
jmp
orl
lcall
sarl
cld
arpl
and
xchg
incb
mov
lea
shrl
sti
jmp
movsl
sbb
negl
addr16
dec
lods
cld
jnp
inc
mov
push
push
add
incl
push
nop
enter
call
aad
test
and
pop
movsl
jbe
add
faddp
or
push
leave
mov
lret
repz
xchg
test
incl
mov
jo
jbe
aaa
test
jno
jg
stc
in
jns
incl
addr16
rorb
jp
xlat
mov
dec
into
jne
imul
lds
stos
pushl
sbb
or
xchg
clc
repz
jno
div
fsubr
mov
cmp
out
out
es
xchg
decl
aaa
leave
dec
pop
sub
adc
stos
incl
mov
testl
test
sub
cmp
int
test
dec
or
mov
adc
adc
sahf
icebp
or
jbe
dec
ret
xor
fcos
push
mov
pushl
xchg
mov
jmp
pop
push
lds
sub
sbb
test
adc
mov
push
and
mov
aaa
mov
pop
sti
orb
mov
lret
fwait
mov
cmc
jl
sti
jge
pop
fisubrl
cmp
mov
push
add
dec
inc
cmp
loopne
lock
adc
fcmove
sub
cmp
dec
mov
out
cs
call
cmp
enter
push
jmp
jp
leave
cwtl
mov
jmp
flds
mov
shl
or
out
call
fstpl
clc
push
xorb
cmp
pop
push
cwtl
sbb
sub
push
and
out
imul
mov
jns
stc
outsl
jmp
int
out
push
test
push
dec
movsl
notl
dec
add
negl
sub
inc
pushf
push
or
in
cmpsl
frstor
mov
mov
jl
sbb
fwait
test
js
jecxz
fistps
ret
adc
dec
in
pop
adcl
lret
pop
mov
pop
ljmp
cmp
push
in
or
or
add
gs
push
pop
adc
arpl
cmc
and
rcl
xorb
clc
outsb
adc
add
rcrb
xor
fdivr
int
in
mov
xchg
lods
clc
add
ficoml
faddl
pushf
inc
or
jbe
or
push
add
xchg
inc
mov
repz
call
jo
std
sbb
out
sub
xlat
jge
fldenv
or
insl
jp
and
xlat
jns
or
mov
mov
adc
pusha
jp
push
xor
and
aad
jge
push
lret
push
xchg
out
xchg
dec
js
cmpsb
shrb
maskmovq
and
loop
push
sahf
int
xchg
push
fiaddl
shrb
pop
sahf
mov
xor
lods
xchg
xor
push
stc
ljmp
mov
xlat
jnp
jecxz
popa
out
daa
adc
cmpsl
inc
cli
shll
mov
adc
lea
push
push
fwait
inc
ret
pop
cmp
mov
stc
ljmp
ret
mov
mov
mov
mov
push
jae
js
dec
out
push
loop
cmp
cwtl
or
mov
std
test
xchg
ret
aaa
movsl
sarl
mov
outsl
pop
lahf
sub
lods
add
and
arpl
adcb
lds
jne
mov
aaa
dec
pop
jge
xlat
ja
ja
inc
ret
lcall
mov
js
dec
enter
adc
jge
add
cmp
push
or
std
dec
js
cmp
pop
icebp
gs
push
divl
push
fs
and
inc
adc
xchg
push
mov
out
lods
lods
or
push
mov
mov
scas
fsubs
xchg
pop
std
pushf
xor
jp
pop
shll
sbb
cmp
xchg
fstp
cltd
inc
lret
negl
xchg
shlb
adc
xchg
jo
cltd
xor
adc
jp
push
pop
scas
pop
add
imul
outsb
pop
adc
dec
pop
xor
shll
xlat
cmpsb
std
add
stos
pop
out
notl
lret
push
xchg
jl
call
jbe
push
adc
std
enter
jne
pop
cwtl
jae
shrl
inc
data16
mov
jo
cmp
or
ja
aad
imul
jne
popf
insl
cmp
jl
jmp
aam
in
mov
jb
cwtl
xchg
std
fisubrl
das
ja
push
push
sbb
stos
push
ret
jnp
xchg
pushl
scas
mov
incl
and
and
pop
dec
incl
xlat
or
or
dec
push
aas
xor
jle
inc
sub
inc
jne
push
pop
incl
hlt
xlat
pushf
decl
rcl
fisubrs
xchg
rcrb
cmp
inc
insb
xor
add
pop
dec
ret
addr16
loope
push
sbb
mov
sbb
push
std
out
sbb
incl
psubd
aam
icebp
sti
xchg
ret
inc
call
loop
adc
out
mov
nop
sbb
incl
jmp
dec
dec
mov
lcall
sbb
pop
decl
inc
je
test
pop
jbe
add
into
sub
cmc
sub
sahf
movsb
aad
cmc
and
rcll
mov
add
lods
jo
and
lds
js
cmc
sar
sahf
mov
jl
jmp
or
inc
inc
lock
data16
in
sub
hlt
inc
fstpt
xor
pushl
lcall
jmp
or
cmp
popf
mov
and
jl
bound
data16
jbe
cmp
inc
mov
test
mov
push
xor
pop
cmp
push
je
cmpb
fldz
and
adc
movsb
addr16
sub
pop
mov
iret
mov
outsl
ss
sbb
push
mov
imulb
pop
in
hlt
xor
mov
push
add
dec
ja
mull
pop
testl
data16
mov
aad
es
iret
cmpsb
jl,pn
and
xchg
aam
xor
popa
bound
push
in
rcll
jbe
outsb
lret
mov
in
arpl
xor
add
adc
jp
cli
fcmovbe
add
das
and
jge
sub
or
jbe
cwtl
jle
mov
movl
sarl
outsl
and
add
sbb
ss
daa
xor
xor
mov
lcall
outsb
stc
mov
and
cmp
push
sahf
repz
mov
rdpmc
sbb
mov
ret
push
aaa
push
adc
push
inc
sti
pusha
jo
pushl
mov
iret
sub
pop
movsb
cmp
or
cmp
push
icebp
or
fnstenv
lea
jl
test
push
daa
push
pushf
push
cmp
sub
adc
inc
sar
push
mov
mov
stos
out
ljmp
xor
push
call
or
stos
cmp
aad
ficompl
fdivrp
lcall
mov
js
jbe
cmp
cmp
aaa
jp
jo
lcall
adc
cmpsb
in
scas
call
je
cmp
dec
mov
clc
push
mov
pop
movsb
adc
lcall
dec
and
xchg
sub
sbb
mov
popf
call
inc
or
lea
jb
adc
call
push
add
mov
sbb
movl
pushl
push
popf
sbb
or
stos
lea
push
sub
push
xchg
lods
mov
jae
mov
and
cmc
jb
pushf
mov
or
and
mov
std
sbb
aad
pop
xchg
ljmp
adc
sub
add
imul
jecxz
repnz
call
and
add
das
lcall
shll
push
cmp
lcall
aaa
cmc
lock
and
and
ret
sub
lahf
inc
cmc
out
or
dec
call
jne
divb
sub
inc
pop
xchg
std
pop
mull
test
imul
call
sbb
repnz
sahf
mov
rcrb
xor
insl
and
mov
sub
dec
cmc
std
inc
stc
jg
xchg
or
xchg
inc
push
adc
mov
aaa
and
sbb
add
test
xor
mov
dec
mov
sub
jne
xchg
loopne
fcoms
pop
imul
or
xchg
adc
xor
xchg
pop
pushf
lret
lahf
xlat
jl
or
lock
lret
pop
sbb
dec
daa
push
xchg
lahf
pushl
inc
out
or
cmp
je
or
jne
incl
cmpsb
dec
fldenv
sbb
fistl
add
dec
shrl
fdivrp
cmp
sar
pusha
pop
push
loop
lea
jle
mov
jbe
mov
mov
dec
xor
mov
or
and
xor
pop
int
daa
or
add
xchg
mov
jge
add
fdivrs
fwait
call
daa
imul
ja
push
cld
add
jns
testb
jp
mov
das
adc
mov
fists
test
sbb
mov
addr16
and
aam
je
push
leave
aad
or
cli
dec
add
adc
sbbl
push
bound
incl
cwtl
jb
outsb
dec
scas
add
cltd
rorb
aaa
adc
pushl
out
insb
inc
dec
jb
xor
sbb
pop
mov
xchg
pop
mov
or
iret
dec
aam
insl
lcall
and
xchg
mov
jmp
push
xchg
imul
pop
pusha
xor
mov
cmpsl
jno
add
dec
mov
ja
movl
fucomp
push
and
cmp
sbb
repz
mov
add
faddl
pushl
popf
jae
insb
pusha
adc
cmp
push
sbb
cltd
dec
lahf
xor
sub
push
ljmp
fsts
push
fidivl
out
pop
bound
xabort
sub
dec
and
mov
imul
inc
dec
jne
mov
fs
addr16
or
jbe
sbb
pop
xor
add
mov
pop
sub
adc
test
mov
dec
ss
pop
inc
incl
adc
jle
mov
mov
int3
sub
imul
inc
ja
ficoms
ja
adc
dec
mov
ljmp
int3
or
pop
in
test
in
or
pushl
lods
pusha
push
out
idiv
jmp
jnp
inc
or
fsubrs
jmp
inc
call
lds
pop
fnstenv
and
int
jmp
push
nop
jo
xchg
cmp
jecxz
push
adc
ja
inc
mov
std
or
lret
dec
add
jp
push
mov
clc
mov
push
jp
movsl
mov
call
stc
jp
pop
sbb
push
xor
sub
sbb
iret
pop
and
mov
cmp
xchg
or
fwait
jge
sbb
nop
mov
pusha
xor
mov
lea
scas
idivl
flds
pop
xlat
inc
pop
test
pushl
sub
dec
lods
mov
pop
sub
jl
hlt
cmp
cmc
cmpsl
xor
les
mov
fwait
mov
ss
lods
dec
jge
sub
decl
into
inc
ja
and
or
mov
std
mov
subl
jge
dec
fadds
rorb
jle
call
sbb
or
ss
xchg
dec
cmp
aad
mov
add
push
mov
push
and
cltd
scas
cmp
pop
int3
arpl
jnp
xchg
xor
and
jne
out
add
adc
cmp
scas
sti
pop
mov
mov
cmp
arpl
lock
outsb
nop
adcl
mov
rcrb
mov
inc
mov
adc
sbb
jge
xor
cmp
pop
out
js
popa
mov
adc
jmp
sbb
sbb
sub
scas
sbb
xchg
jae
jns
lret
int
adc
xor
divb
decl
inc
inc
aam
mov
sti
fnstsw
std
mov
loop
inc
push
mov
dec
ja
rcrb
pop
jge
dec
mov
add
mov
xchg
je
xor
sbb
and
push
cmc
addr16
adc
incl
cs
hlt
decl
pop
in
and
mov
scas
inc
mov
out
ljmp
negb
rcrb
or
ljmp
inc
jo
cmpsl
or
aad
mov
scas
aad
adc
je
and
test
fcom
add
mov
mov
mov
mov
test
xor
ljmp
pushl
mov
fldcw
out
jns
cld
ds
notl
imul
fsubrl
popa
insl
data16
lods
loopne
loop
ds
cli
hlt
sub
adc
dec
pop
sub
ja
movl
jbe
ja
mov
je
mov
daa
mull
lock
cmp
jp
negl
jbe
inc
mov
stc
adc
jge
inc
call
push
inc
pop
mov
aaa
cmp
test
sbb
into
ud0
insl
mov
and
add
mov
ja
inc
xor
push
xor
adc
leave
adc
pop
lret
in
or
inc
sbb
push
or
and
loopne
outsb
pop
lahf
cmp
cmp
inc
sar
dec
out
repnz
pop
pop
js
das
mov
dec
jo
movb
loope
test
or
sbb
push
mov
ljmp
iret
cld
pop
mov
jb
inc
fs
push
out
jb
jp
call
xor
arpl
dec
mov
testl
mov
push
xor
ds
aas
or
jno
lcall
xchg
gs
sub
stos
mov
xchg
xlat
push
lds
rol
cld
dec
jne,pt
mov
out
or
out
jne
add
insb
or
xchg
cmp
out
add
std
jnp
nop
call
xor
imul
adc
cld
add
insl
les
pxor
add
and
push
push
mov
jg
inc
mov
in
pop
mov
jecxz
xchg
sbb
divb
cld
mov
push
and
jbe
popa
xor
xchg
mov
add
cmpsl
mov
rclb
cmp
jl
dec
and
mov
sub
ficoms
jbe
add
add
xchg
call
idiv
pop
adc
incl
and
mov
insl
clc
mov
push
decl
jo
jmp
mov
popf
sbb
or
pop
loope
nop
sbb
dec
jl
add
mov
lods
out
scas
sbbb
test
ja
adc
out
add
fwait
and
sahf
ja
lock
aas
pushl
inc
or
aam
sub
jbe
shr
divb
xchg
lcall
stc
xchg
pop
nop
data16
mov
in
mov
ljmp
clc
insb
insl
lcall
adc
sbb
test
add
mov
out
testl
inc
and
add
adc
movb
mov
je
push
and
sub
xchg
sub
into
jl
cli
jge
pop
imul
and
mov
add
jp
and
xor
aas
sbbl
movsb
push
in
and
or
cld
mov
hlt
js
loopne
nop
lds
mov
adc
adc
dec
jl
xchg
leave
jmp
enter
cmpsl
pop
sbb
push
js
pop
pop
je
push
and
pop
rorl
push
xchg
push
xlat
dec
or
inc
inc
es
or
je
sub
pop
scas
scas
divl
sbb
lods
mov
xor
mov
mov
or
addr16
aaa
push
add
pop
sahf
ss
data16
add
sbb
movsl
or
out
inc
fs
add
movsl
lret
pop
pop
sbb
or
negb
repz
xor
call
pop
notl
aas
lods
inc
mov
mov
addr16
jb
push
adc
or
push
movsl
and
incl
aad
jp
sub
push
jo
push
test
lret
mov
pop
in
int3
clc
mov
mov
sub
xchg
std
adc
loope
sub
lahf
dec
scas
or
sub
cmp
jns
ljmp
adc
push
mov
fistl
outsb
dec
fdivrp
mov
sbb
popf
aam
mov
sahf
add
or
pushl
sub
out
inc
adc
lcall
fstps
mov
loop
jecxz
aam
or
sub
ljmp
add
mov
icebp
xor
call
mov
cmp
sbb
clc
sahf
push
sbb
adc
out
push
shlb
mov
pop
mov
xor
jecxz
test
xor
or
push
mov
ljmp
enter
jp
sbb
leave
ss
subl
jmp
sub
xlat
mov
sub
iret
in
xor
xor
je
cmc
cltd
and
shll
aad
idiv
bound
sbb
pop
mov
sar
inc
js
push
cwtl
xor
xor
sarl
and
std
xor
test
jnp
or
int3
mov
sti
add
aas
push
lea
sbb
call
inc
pusha
push
sbb
jmp
dec
lcall
dec
sbb
xor
and
test
push
push
jg
pop
dec
pop
and
push
lds
jbe
ret
jne
xchg
push
xor
cmpsl
cmc
dec
xchg
arpl
movzwl
incl
daa
push
and
adc
push
push
rcll
popf
xchg
mov
pop
cmp
pop
push
fsts
xor
repnz
cmp
orb
mov
add
ja
imul
xchg
in
pop
loop
std
fs
aaa
rsqrtps
or
lret
lods
mov
lock
sbb
ja
data16
test
ret
das
bnd
int
punpckhbw
leave
sahf
push
test
inc
add
or
xor
lea
dec
cwtl
into
in
or
dec
daa
pushl
adc
das
je
add
lcall
and
int
call
cmc
xchg
inc
sub
push
xor
lcall
xor
out
xor
scas
and
in
and
in
mov
mov
xor
fs
jl
leave
push
mov
lock
xchg
push
adc
inc
std
daa
cmp
add
sbb
push
adc
icebp
pop
mov
jecxz
adc
sbb
negl
mov
push
sub
shll
std
mov
hlt
test
adc
test
push
push
xchg
jo
and
adc
mov
mov
stc
pop
iret
pop
lret
fmul
fs
mov
adc
ret
cmp
stos
jo
jnp
push
orl
or
mov
dec
fisubrl
mul
cmpsb
add
push
mov
fisttpl
movsb
pusha
in
jb
and
fcmovnbe
adc
cld
push
call
push
mov
fwait
test
xor
jge
imul
fcomps
lods
outsl
jl
mov
cmp
push
mov
call
mov
scas
call
rorb
pop
jne
jmp
sbb
sbb
xlat
jge
mov
push
cli
mov
inc
mov
xchg
into
fsts
shrl
in
cmpsl
dec
mov
shrb
xor
inc
ja
xorb
mov
cmp
jns
mov
test
addb
loopne
aam
inc
lcall
movsb
add
jmp
or
enter
sub
decl
adc
or
sub
cmp
mov
xor
xor
imul
jae
push
cmc
cmp
sub
addr16
popf
cmpsb
add
into
loopne
cmp
das
sarl
ljmp
fistpl
adc
jbe
sti
fimuls
adc
in
cltd
mov
orb
xchg
int
cld
xorb
test
or
sub
aas
jbe
pop
fsub
fsubrs
jmp
inc
jo
stc
pop
push
data16
in
inc
lds
and
negl
test
and
scas
push
xor
aam
mov
cmp
out
dec
jg
daa
lods
mov
inc
pushf
das
and
mov
mov
push
mulb
cs
push
xchg
mov
stos
xchg
inc
xor
jl
dec
call
flds
call
jp
clc
test
sub
push
add
es
push
xchg
push
and
and
stos
pop
dec
sub
incl
cltd
decl
jg
push
mov
shr
daa
sub
jecxz
std
xchg
jb
cs
mov
es
lret
jge
test
jle
popa
lds
fildl
mov
cmp
jns
call
push
sub
stc
stc
jbe
movsl
xchg
fcmove
or
and
mov
out
repz
ds
pop
sti
daa
xor
mov
sar
pop
push
xor
insb
mov
jl
ja
in
jmp
daa
mov
outsb
lock
jmp
fidivs
nop
subb
fbld
scas
dec
out
xor
roll
pop
xor
repz
pushl
scas
jne
ljmp
lock
jmp
cwtl
mov
loopne
dec
jne
xchg
pop
cld
xor
addr16
sbb
xchg
push
inc
ljmp
inc
pushf
mov
test
jg
call
testl
ljmp
pusha
sbb
mov
dec
xlat
insb
out
ljmp
mov
push
add
cmp
mov
repnz
rcll
and
cwtl
divl
loop
aaa
test
mov
outsb
sbb
les
adc
cmp
test
pop
adc
jb
adc
or
mov
out
push
xchg
cmp
cmpb
into
dec
dec
aam
or
das
decb
imull
fimull
mov
xchg
imul
mov
fs
pop
xor
xorb
xchg
dec
dec
inc
inc
pop
sbb
imul
or
push
add
outsl
push
movsb
push
or
jmp
jecxz
movsl
bound
xlat
out
mov
std
mov
popf
call
or
insl
ds
sti
sbb
call
testb
mov
xchg
ja
hlt
into
push
jne
pushl
mov
jge
incl
test
adc
xchg
scas
push
lahf
incl
aaa
inc
add
push
mov
and
fidivs
jmp
insb
scas
pop
imul
enter
leave
ja
shrl
mov
and
cs
sbb
adc
cld
pop
or
jne
sub
add
dec
sarb
mov
xor
inc
push
insl
adc
and
mov
cmpsb
dec
aad
fidivs
or
jbe
mov
cwtl
adc
pushf
call
in
jo
js
incl
sbb
je
neg
std
cmpsl
in
out
jbe
inc
mov
movb
cli
shrb
cmp
out
cmp
insl
dec
mov
xchg
jmp
sub
es
add
sub
out
or
ljmp
inc
adcl
fisttpll
je
mov
mov
je
mov
icebp
inc
addl
jmp
xchg
out
inc
and
rcrl
in
addl
pop
dec
loopne
hlt
jmp
mov
test
dec
xor
movsb
pop
aas
add
out
or
aam
mov
imul
pop
frstor
insl
cltd
sbb
jno
jle
push
aad
sub
adc
mulb
popa
jo
dec
sub
leave
sub
sub
ljmp
push
add
sbb
jbe
lds
adc
lods
and
jo
shlb
aad
dec
or
jmp
jno
dec
notl
push
dec
call
mov
movsb
push
popl
out
xor
aas
popa
mov
aaa
ja
lahf
cmp
ss
cmp
fs
and
push
out
add
dec
lcall
xchg
jle
dec
jl
loop
inc
cs
call
daa
movsb
sbb
pop
dec
pop
jge
lds
call
sub
rcrl
jge
outsl
cmc
test
jnp
xchg
adc
pop
cli
cli
mov
sbb
push
dec
jmp
mov
mov
mov
adc
daa
adc
push
lcall
outsl
jae
cltd
out
add
call
xchg
test
push
call
mov
fisttpl
cld
xchg
xor
jl
pop
push
inc
dec
jle
ljmp
dec
xchg
mov
push
mov
adc
roll
jge
mov
mov
mov
je
stc
popf
pop
add
adc
cld
and
pop
push
stc
xchg
sahf
call
pop
shlb
dec
lcall
cmp
pop
pop
cmp
cmp
cmp
adc
testl
out
fwait
sbb
arpl
popa
call
adc
inc
lods
and
mov
or
test
mov
dec
and
and
shll
imul
adc
flds
jb
mov
add
push
adc
movsl
shll
jno
in
sbb
aaa
rclb
pop
ljmp
ret
sbb
mov
dec
ds
and
add
call
push
mov
sbb
shlb
xor
sbb
xchg
loope
mov
inc
jno
incl
mov
sbb
pushl
inc
nop
not
arpl
xor
mov
decl
mov
orb
call
pop
push
xor
jo
xlat
inc
popa
mov
adc
sbb
pusha
jl
cmp
pop
jnp
call
out
stc
dec
add
xchg
in
into
leave
iret
jmp
jp
inc
jbe
xchg
pushl
mov
push
bswap
sub
cmp
mov
stos
outsl
mov
lds
mov
cmp
sbb
dec
mov
and
xorl
jae
fwait
in
es
rolb
jno
sub
add
int3
mov
aaa
sub
nop
mov
jo
or
mov
lods
in
jge
stc
add
jbe
jle
cmp
popf
in
jae
pop
pop
in
or
jp
call
int
cmpl
pop
out
call
push
cld
ret
sbb
ja
mov
xor
push
leave
std
xchg
aaa
sub
cmp
popf
mov
in
fcoms
dec
sar
cltd
lods
test
add
jne
mov
into
loopne
sub
pop
xor
decl
in
xchg
sahf
pop
das
stc
xchg
aaa
insl
imul
cwtl
lcall
push
pop
pop
div
test
dec
mov
xor
fldenv
push
mov
or
sub
xor
shlb
mov
jb
out
pop
mov
mov
test
push
jge
jnp
dec
dec
adc
incl
sbb
sub
ret
xor
cmp
push
mov
or
mov
push
sbb
sbb
popa
cmp
jbe
insl
inc
aad
outsl
adc
int3
or
pushl
dec
mov
pop
call
xchg
mov
imul
jg
jp
lahf
sbb
lods
loopne
aad
ljmp
ja
popa
jo
hlt
jne
jg
sub
jecxz
pushl
lock
notb
mov
ja
out
sbb
add
jp
push
inc
cmp
inc
jo
jbe
mov
mov
xor
decl
or
loopne
into
call
imul
je
pop
daa
ja
fistl
icebp
ud0
test
fdiv
inc
adc
push
push
shlb
enter
mov
add
sbb
and
jge
cwtl
in
mov
stos
xchg
adc
dec
lcall
loope
repnz
shl
adc
std
push
out
or
xchg
cs
push
mov
insb
cmp
sub
xchg
xor
push
sbb
insl
add
fimuls
jg
arpl
sub
ror
and
jb
or
xchg
jno
idivl
gs
lods
cmp
bound
pop
mov
mov
or
out
jno
dec
decl
or
hlt
jmp
adc
jb,pt
and
inc
add
or
iret
jmp
das
inc
je
call
sub
call
push
mov
cld
es
das
stc
in
call
cmpsl
mov
mov
dec
add
lcall
inc
ljmp
fdivp
iret
and
push
in
sbb
popl
out
mov
pop
in
and
outsl
cwtl
sub
test
sbb
leave
cmp
cmp
je
mov
jle
xchg
movsb
in
cld
xchg
mov
leave
mov
sbb
mov
dec
pushf
data16
iret
xor
stos
push
xor
cmpsb
sbb
lcall
mov
call
cmpsl
aas
xor
js
movsb
lcall
and
cli
mov
push
lret
loope
call
ret
mov
pushf
xor
add
xchg
shll
mov
fmul
pop
sbb
xchg
jmp
xchg
subb
mov
sbbb
xchg
cmp
cmp
or
roll
dec
adc
lret
add
js
adc
mov
sbb
ljmp
push
push
jnp,pt
lcall
mov
push
fs
xchg
xor
test
rcrb
push
jns
insb
dec
mov
xchg
ja
inc
lret
out
std
xchg
sahf
xchg
call
push
in
pushl
les
pushl
sbb
icebp
pop
call
data16
repz
movsl
scas
sbb
jmp
and
or
lods
jbe
cld
int3
cmp
cmp
fcmovu
add
sti
cltd
pop
cmp
fs
subl
mov
xchg
ss
ja
lods
mov
xor
imul
pop
lock
inc
int
sbb
push
adc
out
ja
cmp
nop
mov
inc
jg
mov
adc
pushl
mov
ja
subb
dec
cmc
cltd
mov
popl
mov
push
jne
loope
and
jmp
inc
sbb
mov
inc
jbe
jo
push
lahf
and
int3
push
fnstenv
iret
arpl
xchg
nop
rcrl
lcall
pop
push
adc
shrl
pushl
ficoml
jmp
push
adc
cli
add
push
xor
add
xchg
icebp
pop
inc
repnz
xor
mov
daa
es
xchg
dec
fwait
and
sub
sti
inc
inc
testl
clc
loop
or
jmp
out
call
jbe
les
testb
repz
jg
sub
roll
adc
pop
popa
int3
decl
pop
test
mov
repnz
stc
and
mov
sub
incl
push
push
adc
std
insl
inc
leave
add
lock
call
fsubr
cmp
aad
gs
mov
and
push
sbb
pop
mov
jns
dec
into
aad
adc
arpl
rcrl
add
and
jmp
cmp
inc
scas
cmp
leave
sub
fisubrs
movsl
pushl
testb
call
or
xchg
fcos
push
pop
xlat
mov
dec
lret
pop
xor
and
sbb
testb
xchg
xchg
fsubrl
or
icebp
sti
es
incl
je
call
ret
jle
mov
decb
bound
js
ds
push
sarl
loop
push
mov
ljmp
adc
ss
decl
scas
out
jbe
sti
unpckhps
xor
xorl
dec
testl
sti
sbb
lcall
repz
stos
mov
mov
and
nop
inc
call
das
push
cmpsl
scas
jmp
popa
cmp
stos
lods
sbb
jmp
cmp
add
cmpsl
mov
mov
and
jne
sbb
pusha
pushl
dec
frstor
mov
pop
aaa
in
pop
dec
mov
mov
jb
mov
test
dec
js
data16
std
dec
enter
ss
loop
adc
or
or
push
pusha
in
out
sbb
mov
xor
push
pop
lret
test
cmp
pop
outsb
sbb
sbb
add
cmpsb
fnsave
adc
ss
and
sub
daa
aaa
cmp
push
pop
add
std
cmp
int3
sbb
xchg
dec
js
adc
es
jge
cmp
sbb
jecxz
mov
mov
adc
add
cli
rcrb
insb
sar
nop
test
xlat
je
xor
push
xor
mov
pop
jbe
adc
cld
imull
popa
jns
dec
mov
and
push
ja
dec
shll
mov
aaa
pushf
xor
cwtl
xchg
dec
cmpsl
push
out
pop
dec
sbb
iret
pop
or
inc
call
mov
lahf
clc
in
rclb
mov
push
or
outsl
std
ja
mov
and
movsb
mov
sbb
push
push
aad
jge
sbb
xchg
loopne
in
push
aaa
int
iret
sbb
dec
dec
jg
add
into
sub
xchg
pop
push
inc
ret
sub
dec
cmp
fmuls
inc
leave
jns,pt
pop
mov
adc
inc
ss
cwtl
sar
jmp
xor
sar
push
and
add
iret
aaa
popf
sti
xchg
inc
sbb
lods
incb
shll
push
lahf
pop
xor
push
and
pusha
add
mov
or
arpl
jns
mov
jg
xchg
xchg
xor
inc
sbb
fldenv
cmp
in
gs
add
inc
push
fcoms
insl
ljmp
out
shll
cmp
and
dec
inc
xchg
ljmp
loope
std
mov
inc
lock
subb
insb
je
fdivs
adc
pop
mov
fsubrl
xchg
inc
add
inc
test
outsl
mov
or
mov
mov
popf
pop
scas
into
popa
stos
incl
push
out
mov
int
pop
adc
scas
add
xor
xchg
add
stos
or
test
loope
and
pop
lret
aaa
in
and
jnp
lods
push
lcall
sahf
cmp
stos
sbb
hlt
mov
sti
adc
pop
mov
mov
pop
mov
stos
icebp
insl
ret
adcl
cwtl
xor
or
cmp
push
lods
sbb
dec
lcall
loopne
push
sub
xchg
cmc
push
loope
xchg
xchg
rcrb
out
inc
inc
movsb
sbbb
sub
mov
repz
mov
mov
push
mov
sub
jb
scas
mov
negl
pop
adc
mov
outsb
cmp
jbe
mov
jo
or
pop
loopne
jmp
mov
lock
ljmp
or
and
mov
je
or
lods
fsubrl
jmp
sar
stc
pushf
stos
lcall
rolb
mov
jmp
sahf
movsl
xor
lcall
xchg
enter
mov
ret
jno
jmp
mov
insb
sbb
inc
adc
push
cmp
ja
mov
push
fiadds
mov
in
mov
xchg
lahf
xor
pop
jo
mov
test
mov
pop
ds
mov
xchg
fadds
mov
mov
mov
dec
lcall
pushl
pop
pop
insb
sub
pop
outsb
push
cltd
aaa
aam
imul
daa
pop
and
cmp
jnp
cmp
xor
push
sub
xchg
jle
jbe
adc
sbb
mov
icebp
sub
mov
pop
cmc
xchg
or
fdivr
and
sahf
leave
fimuls
decl
xor
xor
scas
mov
push
ljmp
pop
js
repnz
pushl
sub
incb
enter
mov
stc
stos
insb
test
add
cmp
dec
shll
ja
mov
push
ss
pop
clc
sub
les
into
icebp
cmp
sbb
add
xor
xchg
xchg
xchg
ljmp
insl
cli
xrelease
lods
cmp
xor
incl
push
and
jns
ljmp
mov
sub
repz
lret
roll
mov
and
into
scas
and
stos
push
js
adc
lods
cmp
sbb
in
jnp
mov
outsb
test
pop
cmp
negb
leave
add
mov
cmpsl
push
push
sarl
sbb
xchg
clc
data16
out
test
xor
add
adc
in
call
xor
mov
adc
sbb
push
addr16
fwait
into
imul
push
sub
push
dec
mov
aam
int3
adc
stc
and
cmp
push
popf
mov
cmp
push
jmp
adc
shll
pop
stos
mov
jbe
repz
jl
imul
sbb
push
pop
fidivs
adc
jnp
out
hlt
es
or
jb
or
call
dec
add
int
imull
xchg
std
dec
ss
inc
add
js
pop
lods
cmp
out
add
leave
pop
and
in
push
mov
out
jbe
pop
data16
shrl
dec
bound
out
xchg
mov
push
jbe
push
or
mov
xor
cmpsb
loopne
adc
jns
movsb
and
mov
mov
sub
std
push
add
push
imul
add
negb
xlat
les
lock
and
test
into
pop
inc
mov
into
push
inc
das
mov
sub
xlat
jl
jnp
ja
out
add
mov
sbb
rcll
out
push
inc
or
xchg
jbe
add
int3
test
and
jmp
mov
add
ja
testb
ret
jne
add
mov
mov
adc
ljmp
or
sbb
xor
lahf
mov
add
xchg
pop
repnz
mov
and
sbb
push
cmp
inc
ja
xorl
add
xchg
lahf
push
mov
cld
lods
jno
fisubs
push
xchg
mov
decl
xor
cmc
out
shlb
pop
clc
lods
xor
push
lds
xchg
pop
call
jp
mov
lcall
lcall
mov
mov
out
adc
cmp
sarb
arpl
flds
add
rclb
cwtl
jns
and
or
js
sti
insb
adc
inc
jb
pop
stc
incb
mov
push
xor
test
inc
mov
mov
xchg
ljmp
sub
call
and
in
in
ret
stc
inc
lret
pop
lcall
mulb
mov
jmp
mov
ficomps
mov
inc
jo
in
push
push
adc
testl
decl
adc
jne
sbb
rorl
aas
mov
leave
cmp
lcall
mov
xorl
sub
add
cmp
inc
lods
popf
dec
mov
fistl
and
ja
pop
dec
shll
rcrl
mov
pop
in
jmp
cld
pop
pop
mov
jb
adc
or
sub
add
add
pop
jbe
test
mov
mov
dec
pop
add
sub
add
dec
xor
js
and
jns
pop
cltd
xchg
notl
xor
mov
ja
mov
insb
ljmp
or
mov
mov
call
and
sbb
out
or
decl
popf
outsb
mov
and
mov
mov
inc
jne
sbb
xchg
cmpsb
inc
std
mov
je
add
pushf
cmc
ret
xchg
insl
call
stos
jp
lods
add
ja
mov
andl
stc
lahf
and
sbb
stos
into
fists
xchg
mov
add
movsb
icebp
incl
jmp
fdivp
enter
popa
dec
jno
xor
decl
and
mov
out
aas
pushl
jmp
insl
roll
jmp
clc
ljmp
jl
adc
fdivr
arpl
or
pushl
push
or
pushl
jnp
incl
std
jmp
std
inc
dec
jns
movsb
xchg
fldt
gs
or
adc
or
repnz
repz
notl
xor
dec
adc
das
movsl
aad
sub
push
sub
fnclex
shr
addps
fs
add
incl
shr
inc
enter
loopne
mov
ja,pn
xor
mov
aas
enter
sub
sbb
and
adc
or
mov
mov
out
negl
or
test
dec
inc
and
addr16
push
mov
adc
fstps
cmp
mov
xor
decl
and
mov
push
dec
xor
sti
cltd
popa
sahf
in
cmp
mov
adc
fisttpll
pop
pop
xor
and
vmwrite
jmp
sbb
cmp
cmp
jno
sbb
into
cmpsb
aaa
addr16
push
push
or
stc
xchg
cmc
rorb
stos
in
stos
aaa
pop
pop
in
je
adc
clc
ja
int
fisttpll
add
jbe
add
fwait
popa
sbb
push
outsl
inc
pushl
notb
cwtl
cmp
test
push
addr16
fldenv
mov
xor
xchg
fmuls
sbb
xor
fcoml
and
mov
mov
lcall
sti
adc
incl
add
cmp
shl
xor
in
sti
mov
push
popa
jmp
push
clc
cmc
sbb
das
shlb
in
mov
jmp
rcrl
xor
sub
add
decl
mov
push
jns
mov
ret
jge
test
inc
inc
loop
xchg
fisubrs
add
popf
pop
push
pushf
outsb
xchg
pushf
je
sbb
dec
jo
movsl
ljmp
pop
xor
lds
sub
leave
js
arpl
mov
fbld
dec
imul
pushf
lods
jo
lds
add
ja
imul
lock
cmp
fistl
jle
jecxz
scas
mov
push
fsubrs
mov
mov
add
jns
inc
sub
push
mov
test
sub
cmp
lea
insl
jmp
sbb
jbe
call
pop
lahf
jmp
lretw
daa
test
jae
cli
pop
aad
stos
les
jno
ret
test
dec
pop
adc
push
fmuls
dec
dec
call
mov
ss
push
mov
xlat
je
xchg
lds
push
sub
jmp
xchg
hlt
add
into
loopne
and
push
push
mov
dec
pop
mov
cwtl
or
mov
sti
into
mov
into
jp
mov
and
xchg
scas
dec
je
add
test
push
cli
insl
out
test
xchg
xchg
mov
dec
ret
ret
fnsave
mov
movsl
push
push
movl
fistpl
add
jns
jge
lea
addr16
call
shlb
add
cmpsl
push
lcall
mov
call
mov
or
inc
jecxz
je
pushf
sbb
inc
test
rcll
les
adc
fidivrs
rolb
dec
jns
and
sbb
jbe
in
push
cld
pushl
inc
push
and
mov
jge
and
cmpsl
add
bound
inc
cltd
push
insb
mov
mov
js
adc
pop
lcall
int3
dec
mov
mov
int
loop
insb
or
pop
jne
jl
jbe
cmp
lods
mov
mov
pop
mov
movsb
sbb
cmp
xchg
repz
xchg
jno
arpl
xor
jl
and
push
hlt
pop
shll
test
xchg
fdivl
or
je
inc
fimull
ds
add
incl
ret
sti
jg
dec
pop
aad
in
push
add
adc
inc
popa
push
fwait
mov
cltd
or
je
lcall
dec
jae
mov
and
imul
jecxz
je
inc
adcl
or
shll
lahf
enter
pop
mov
mov
dec
xchg
cltd
fmuls
and
dec
and
push
je
xlat
push
mov
out
ret
sahf
lcall
std
bound
xchg
jae
adc
mov
add
das
jmp
mov
movntq
subb
call
pushl
xchg
incl
inc
sub
cmpsl
xor
inc
outsl
xor
push
mov
mov
mov
scas
shll
int
jmp
and
dec
add
inc
jmp
fucom
inc
xor
repz
out
xchg
mov
mov
mov
ror
scas
mov
bound
or
add
std
test
jnp
sbb
cmpsb
cli
sbb
imul
push
inc
sbb
test
sbb
jnp
hlt
loop
adc
sti
data16
dec
mov
push
jle
leave
lods
mov
pop
ljmp
in
xlat
mov
cltd
cli
std
bound
push
ljmp
idiv
test
mov
or
pop
jmp
dec
inc
xor
ja
pop
aad
lret
loopne
test
fcomi
jo
mov
call
pop
popf
or
mov
stos
sbb
sarb
mov
lret
xchg
mov
pop
or
xchg
imul
out
jmp
sub
mov
std
push
jb
mov
shlb
add
incl
ret
rcll
ljmp
pushf
stc
gs
sub
mov
inc
or
popa
xchg
xor
lock
xor
mov
lock
jmp
loope
pop
cmp
inc
mov
and
dec
sbb
lahf
lret
mov
sbbb
xor
xchg
out
sbb
xchg
jns
decl
xor
lods
jl
sbb
inc
ja
jmp
xchg
leave
jmp
lahf
pop
xchg
adc
or
incl
inc
negl
sub
jno
xor
sub
adc
adc
sbb
xchg
lret
ss
adcl
or
fcmovb
pushf
incl
push
mov
mov
int
or
out
faddl
cmc
in
adc
mov
xor
addl
sahf
incl
mov
pop
sub
cmp
push
stos
lret
clc
push
and
fidivrl
test
std
push
imul
sbb
cli
fdiv
incl
dec
mov
xor
arpl
lret
push
jne
mov
inc
repnz
sub
insb
and
dec
xchg
push
iret
flds
ud0
stos
lahf
or
or
sbb
dec
mov
mov
dec
mov
xor
jle
call
cwtl
xchg
das
shll
call
xchg
lds
fiadds
aaa
iret
add
cs
push
call
test
call
rcrl
xchg
mov
jl
dec
das
scas
and
lcall
pop
jmp
negl
lods
lea
sar
pop
pop
or
sar
into
addr16
mov
cmp
decl
add
cmp
frndint
inc
stc
jmp
outsl
dec
mov
imul
jb
idivb
mov
sbb
js
jg
icebp
sbb
pop
out
jno
sti
pop
aas
mov
or
stos
and
sbb
push
nop
leave
aaa
mov
fcomps
ds
add
mov
popa
mov
ljmp
int
mov
iret
aam
push
xlat
lds
add
mov
pop
cmp
inc
in
jle
pushf
shlb
pop
lcall
sub
in
xor
scas
ljmp
inc
mov
jae
lock
push
adc
pushf
jle
jo
lahf
test
jl
loopne
lcall
xchg
push
mov
push
cmp
mov
jae
mov
mov
lret
mov
mov
popa
out
xchg
dec
pop
ja
jge
ficompl
loope
and
jg
cmp
inc
int3
out
idivb
mov
ret
pop
mov
cmp
cltd
clc
daa
decl
xor
enter
outsb
inc
mov
std
add
mov
dec
insb
popf
repnz
sar
mov
jmp
insl
mov
pop
mov
fs
fmull
je
int
jge
cmp
sub
ss
repnz
negl
enter
pop
cmp
mov
iret
xor
call
out
stos
jp
mov
outsb
repz
ds
mov
mov
es
shrl
lods
cmp
mov
jp
xor
xor
mov
fstl
pushl
and
pop
mov
scas
iret
jge
sbb
xchg
cmc
arpl
fdiv
mov
push
mov
in
fwait
pop
push
pushl
bswap
aas
addr16
push
adc
cmp
inc
push
sbb
xor
out
xchg
jge
shlb
pop
imul
inc
daa
sub
ljmp
nop
and
outsl
lcall
jmp
movsb
inc
cs
movsl
cmc
jo
imul
pop
adc
or
loop
jns
scas
cmp
lock
sbb
mov
adc
adcl
push
lea
aam
stos
daa
lcall
dec
sbb
push
lock
lcall
lea
fstpl
and
lods
sub
mov
pop
mov
sar
aas
push
int3
push
ja
push
cwtl
pop
mov
adc
inc
jo
gs
cmpsl
xlat
leave
sub
or
decl
xchg
xchg
mov
jge
cmc
inc
inc
stc
ret
inc
jb
pop
or
pop
out
inc
sbb
pop
incl
and
mov
out
ficomps
loope
incl
cltd
in
inc
negl
inc
xor
sub
push
icebp
jg
test
add
ljmp
and
ja
xchg
pop
les
push
iret
in
pop
mov
loopne
sbb
sbb
js
push
stc
cld
sbb
add
mov
push
jbe
jmp
rorb
imul
or
push
cmp
dec
pusha
aas
add
push
sbb
inc
mov
adc
push
idivb
iret
pop
popf
xchg
lock
xlat
sti
arpl
outsl
cli
enter
movhps
add
and
lcall
cli
lret
ljmp
jmp
xor
daa
icebp
fcmovb
and
arpl
dec
pop
sbb
xor
lods
aaa
call
movsb
sub
push
and
inc
or
lock
insb
js
push
adc
aaa
or
jp
stc
jle
and
aas
lret
sub
cmc
adc
xchg
daa
dec
icebp
or
pop
sti
xchg
jmp
fs
inc
pop
sbb
pop
jmp
add
inc
and
popa
xor
decl
leave
mov
jp
ja
test
mov
sti
and
xor
lock
mov
fmul
dec
and
cmp
inc
incl
dec
sub
pop
xor
sbb
mov
add
dec
jmp
adc
jmp
fwait
mov
pop
cld
fldl2e
mov
in
and
pushl
jecxz
cmp
pop
lcall
popa
mov
stc
jae
stc
decw
mov
or
enter
adcb
cs
sarb
jne
cmp
fdivrs
push
xchg
and
lahf
jnp
and
lods
mov
mov
jnp
fdivrs
sub
adc
scas
enter
inc
jbe
mov
cmp
or
adc
cmp
lods
dec
mov
fwait
cmp
int3
stos
das
and
xchg
jmp
jmp
pop
sub
decl
mov
es
and
and
mov
idiv
call
push
bound
or
pop
sub
cmpl
rcr
setne
sub
jbe
aas
das
or
ss
jbe
ja
jmp
daa
xor
sti
mov
dec
add
add
lahf
vcomisd
into
rolb
outsl
sbb
add
mov
decl
adc
mov
jl
jbe
sahf
sbbb
lods
or
rolb
fisubrs
xchg
mov
xor
or
add
inc
cli
xor
xor
fcoml
add
mov
ja
jmp
adc
je
dec
mov
std
ss
or
sub
sub
mov
xchg
sarl
insl
inc
fdivs
dec
sbb
pushl
add
mov
or
xor
cwtl
je
dec
push
cld
jmp
jge
mov
add
cmp
loopne
sub
jo
mov
fadds
test
xchg
xchg
jp
inc
mov
ret
lock
xchg
daa
es
jo
mov
mov
inc
and
enter
mov
ret
mov
aam
mov
cmp
cmpsl
ret
jns
mov
jg
xchg
ja
mov
push
mov
daa
add
stc
mov
js
pushl
cmp
adc
popa
inc
inc
decl
jbe
mov
sbb
aam
out
cmpl
push
mov
loopne
mov
inc
jecxz
mov
and
leave
inc
push
gs
pushl
ret
pop
jecxz
test
xchg
xor
mov
sub
xchg
jle
nop
fcomps
xor
inc
push
scas
mov
push
sbb
mov
jg
call
lds
outsl
sahf
fiadds
test
das
add
or
xchg
mov
adc
push
or
dec
cmp
inc
dec
fdiv
arpl
sti
adc
decl
push
shlb
fldt
cs
jecxz
mov
ljmp
lret
aam
pop
dec
or
movsb
popf
ja
dec
pop
mov
sbb
dec
outsb
negl
cmp
loop
adc
mov
ud0
or
push
and
mov
jno
inc
jbe
mov
jb
add
dec
mov
ljmp
push
xor
test
nopl
in
incl
shll
or
pop
rclb
mov
dec
call
daa
pop
insb
add
pop
movsb
js
div
fidivs
pop
jne
add
insb
mov
in
inc
sbb
pop
sub
test
mov
cmp
and
and
imul
sub
dec
ret
mov
push
sub
cld
divl
out
cmp
pushl
dec
sub
ljmp
or
jbe
jmp
mov
push
or
xchg
ljmp
dec
fcmovu
push
je
xor
inc
ljmp
hlt
add
cmp
sti
das
outsl
jle
lcall
xchg
jb
test
jmp
insl
movsb
testl
je
icebp
fldt
test
not
rclb
sub
loop
cmp
xchg
push
hlt
jnp
jo
push
cmp
mov
mov
bndstx
outsb
icebp
xchg
insl
jnp
decl
out
hlt
xorl
jns
xchg
stos
pop
push
sub
sub
arpl
je
mov
outsb
inc
pop
pop
push
jne
into
dec
xchg
imul
push
jns
sbb
imul
scas
in
insl
pop
mov
jle
mov
cmc
subl
popa
xchg
in
daa
lcall
jp
leave
test
icebp
es
ret
dec
in
adc
clc
mov
dec
mov
mov
pushl
imul
cmp
ss
lods
lock
or
mov
ret
adc
jg
push
call
stos
clc
push
sbb
push
xchg
pushl
aam
int3
sbb
jbe
sbb
cmp
mov
movsb
aas
shl
pop
sbb
hlt
enter
push
cs
jp
test
rol
jmp
sub
repz
pushl
rcrb
lahf
jno
cmp
incl
pusha
pop
xlat
jo
dec
pushf
cmp
lds
inc
and
push
aas
adc
sub
mov
xlat
inc
lods
rolb
call
sti
pop
cwtl
push
mov
aas
cwtl
je
loope
nop
cmc
cmp
andl
push
inc
mov
pop
lods
test
xlat
ja
idivl
pop
into
jmp
ja
cwtl
mov
cmp
push
mov
pop
mov
popf
test
repz
push
adc
test
mov
xchg
jae
cltd
arpl
xchg
mul
lret
call
in
inc
je
nop
jle
ljmp
dec
inc
rcrb
test
mov
call
cmp
mov
jge
insb
mov
aad
dec
cvtps2pi
loope
mov
sub
fnstsw
mov
mov
not
or
cltd
std
inc
sbb
mov
xchg
aam
cltd
adc
xor
je
mov
pop
aas
arpl
pop
int
pusha
sbb
dec
mov
cmp
sarb
xchg
sub
add
sbb
mov
cmp
mov
jl
sbb
jmp
cli
lret
and
rorl
pop
mov
sbb
psubusb
movsb
jne
mov
add
xor
xorl
popf
pushl
fisubrl
int
ljmp
jle
mov
xchg
and
push
jecxz
ret
add
std
addb
mov
xor
mov
sub
stc
in
jp
mov
addr16
jmp
movsl
mov
jge
pusha
fnstcw
ja
cmp
xchg
mov
cltd
sbb
mov
jne
mov
jo
aaa
enter
push
xor
xchg
filds
adc
jle
out
xchg
sub
stos
sub
shlb
xor
mov
pop
and
jb,pn
mov
dec
sbb
jmp
sub
call
getsec
in
dec
inc
shlb
cmp
dec
sahf
sti
dec
incl
stc
out
decl
pop
dec
idiv
lods
outsl
xchg
inc
loop
xchg
and
fdivs
bound
stc
repz
sub
insl
shlb
mov
pop
rcrl
ret
nop
mov
sbb
lcall
mov
cmp
dec
fsubs
out
mov
jge
bswap
inc
push
mov
negb
stos
lods
adc
jae
jge
ja
int
sub
or
mov
jnp
fstps
push
xlat
add
pop
jl
mov
sbb
push
cmc
jge
mov
push
push
mov
incb
stc
fsubrs
enter
inc
push
sbb
sbb
jmp
push
dec
rcll
shlb
xor
xchg
inc
xchg
xchg
incl
ss
shl
jno
shlb
push
xor
pusha
dec
rcrl
bound
decb
enter
sbb
ficoml
outsl
pop
mov
xchg
pusha
addr16
sbb
jbe
mov
xor
add
pop
inc
jno
ret
jmp
sbb
sar
sub
testb
push
jbe
lcall
jnp
rcl
sub
adc
dec
in
and
jb
dec
in
aaa
shlb
in
lock
test
insb
incl
and
pop
mov
or
jge
negl
jb
push
fstl
out
inc
ret
pop
shl
gs
cltd
adc
mov
sahf
jbe
rcrb
xchg
movsl
add
decl
mov
mov
dec
add
pop
pop
mov
mov
cs
aad
mov
xor
mov
add
cmp
jo
dec
xchg
xor
push
ljmp
cmp
push
xchg
test
xchg
add
jnp
icebp
or
push
jae
out
inc
mov
movsb
add
and
dec
push
inc
ss
movsl
mov
add
sub
add
jl
jge
mov
push
dec
std
cld
adcb
leave
sahf
mov
mov
mov
add
mov
sub
aas
lods
ja
xchg
fwait
pusha
mov
push
roll
in
jb
jno
or
loopne
lret
cs
jle
xchg
push
inc
cmp
jae
jbe
mov
xor
call
nop
and
mov
fisttpll
dec
test
nop
mov
mov
sbb
sbb
mov
sar
lcall
cli
and
pop
stos
cmp
xchg
lcall
daa
inc
sarb
shl
stc
addr16
pop
xlat
cltd
ret
dec
jae
jo
decl
mov
push
inc
xchg
adc
or
pusha
pushl
cli
hlt
orb
push
dec
incl
add
push
dec
mov
and
and
sbb
adc
call
popf
incl
xchg
mov
inc
xor
jp
and
push
popf
mov
loop
sbb
mov
add
cltd
xor
mov
jmp
push
ror
xlat
mov
rcr
xchg
jmp
xlat
jp
sbb
push
imul
inc
dec
cmc
int3
cltd
adc
add
xchg
xor
shrl
daa
imul
fisubrs
call
scas
pop
push
and
inc
repz
mov
jae
mov
in
iret
lahf
sub
jnp
std
mov
fcmovnbe
or
or
xchg
push
and
xor
mov
insb
into
mov
push
call
shl
ja
fxch
pop
repnz
push
in
inc
decl
xchg
and
popf
push
sahf
sar
inc
and
xor
jp
mov
inc
jns
jmp
cmp
jb
sti
xor
mov
jnp
iret
jbe
xchg
js
dec
inc
pusha
push
sub
test
clc
stos
pushl
mov
in
mov
cli
and
xor
clc
enter
sub
xchg
xchg
xchg
pop
xlat
pop
jns
sbb
lcall
add
and
xor
or
mov
lods
and
cs
mov
lea
pop
roll
aas
loop
cli
mov
pushl
and
add
inc
decb
inc
xorl
js
mov
fisubl
testl
js
sti
mov
idivb
in
mov
sbbb
call
fisttpl
leave
and
ja
mov
add
mov
divb
in
xor
ss
mov
inc
incl
push
dec
jle
and
stc
scas
sub
hlt
push
push
cmp
scas
scas
adc
xchg
out
xor
push
xor
pop
test
xchg
inc
stos
add
int3
sub
cmp
mov
icebp
add
ret
mov
imul
or
das
inc
cwtl
das
cmc
cld
imul
sahf
mov
cli
add
inc
mov
jecxz
outsb
ljmp
fisubs
lcall
popa
dec
iret
adc
jl
jae
mov
call
lods
push
outsb
mov
xor
or
adc
add
mov
lock
js
mov
push
call
mov
xlat
pop
stos
sub
testb
sub
dec
xchg
adc
fstl
in
pop
shll
out
movb
jbe
cmp
ja
pop
sbb
and
or
lcall
stos
mov
je
adc
call
cmpsb
xor
cmp
dec
xchg
data16
addb
jbe
adc
cmp
mov
in
dec
jb
aam
push
push
jl
test
add
cmc
push
shlb
leave
mulps
cmc
mov
pop
sbb
loopne
pushf
fs
pop
pcmpeqd
sbb
bound
test
ror
inc
push
or
mov
cmc
cmpsl
or
ret
ficoml
mov
pop
call
sar
xor
dec
fstpt
jbe
dec
jmp
jmp
jp
ja
es
mov
je
ja
mov
mov
cmc
or
frstor
jnp
idivb
xorl
test
or
xor
cmp
sub
test
pushf
jbe
outsl
arpl
adc
push
lcall
std
sbb
sbb
mov
aaa
ret
xor
jecxz
mov
mov
stos
out
insb
and
push
fistl
pusha
sub
mov
mov
mov
xor
aas
or
or
ljmp
test
outsb
sbb
mov
popa
xor
fcomip
testl
xchg
sbb
leave
shl
inc
out
cmp
addl
push
or
jmp
mov
or
sbb
pop
rcr
inc
add
or
mov
je
aaa
xor
out
or
imul
mov
ja
jno
fsubrs
sahf
mull
jnp
movsl
ja
inc
mov
cmpsb
std
sub
dec
fbld
mov
ljmp
out
lea
out
iret
and
mov
pop
sub
sbbb
fwait
inc
repnz
adc
int
test
jno
int3
testl
jns
jbe
add
lea
sbb
mov
in
mov
cmpsl
loop
fwait
adc
js
leave
lods
sbb
ret
lret
repnz
pop
divb
and
pop
sbb
xlat
inc
sub
add
xchg
test
mov
rclb
nop
push
jns
push
into
jl
add
nop
jo
dec
xchg
sub
jae
sbb
xor
add
enter
movsl
lods
fmul
or
cmpsb
cltd
lcall
imul
push
mov
add
cmp
lcall
hlt
xchg
mulb
rclb
jnp
push
dec
imul
cwtl
inc
ja
popf
cltd
lcall
dec
scas
addr16
mov
xchg
mov
out
mov
xorb
std
js
sub
adc
into
cmp
ljmp
pop
xchg
sarb
stos
jl
lods
iret
arpl
fistpll
jmp
inc
jge
pop
push
adc
call
bnd
jmp
popf
cmp
rcrb
jmp
out
dec
lahf
inc
aad
decl
sub
test
pushf
cmpsl
adc
adc
movsl
insl
push
jbe
scas
inc
test
mov
sbb
mov
out
aad
mov
or
jns
and
lcall
sub
lret
testb
addb
xor
mov
call
pop
pop
fmull
xchg
lret
aam
jmp
push
sbb
scas
push
stos
xchg
test
inc
add
es
add
imul
shrl
aad
pop
sub
sub
sbb
mov
xchg
or
lds
xchg
cmp
rcrl
cmc
dec
jne
decl
pop
mov
flds
lcall
sub
cmp
cmpsl
mov
loopne
cmp
cwtl
cs
jnp
aad
sbb
repz
cld
cli
mov
and
fnstcw
add
outsl
jmp
jnp
adc
jmp
loop
scas
mov
cmp
push
pop
sbb
jp
frstor
loop
dec
fwait
mov
sbb
add
les
dec
sar
out
inc
cmp
mov
test
jbe
call
fdivl
das
out
call
push
mov
cmpl
sbb
mov
mov
xor
or
in
jo
mulb
mov
pop
mov
sar
add
adc
fsubr
inc
jmp
inc
out
int3
js
jno
decl
and
ret
mov
add
mov
xor
lcall
cwtl
in
fnstenv
daa
push
pusha
sbb
and
push
arpl
mov
lods
pop
jp
or
adc
mull
jae
mov
out
inc
call
mov
add
mov
out
mov
movsb
std
or
dec
clc
mov
add
shll
jbe
xchg
iret
mov
cmc
add
push
push
icebp
jp
mov
jge
dec
das
iret
loop
jmp
xchg
stc
cltd
inc
mov
fcmovu
cwtl
lcall
ret
iret
xchg
mov
cmp
xor
xchg
add
bound
pop
and
hlt
mov
mov
int
cmc
cmp
add
xchg
jne
and
xor
sub
or
xchg
sub
cld
aam
leave
inc
xlat
out
cmc
cld
enter
call
push
test
int
inc
fnstcw
jg
push
add
push
pop
push
lods
push
or
sar
xchg
sbb
adc
mov
fs
cmc
sub
sub
or
push
xchg
sub
ljmp
mov
dec
ljmp
jmp
jl
sub
lods
sub
decl
cwtl
push
or
leave
mov
cmpsb
add
xchg
fcmovne
sub
sbb
cmpsl
pop
jmp
fmull
in
lcall
mov
je
xchg
into
and
cmp
cmc
dec
int
sub
xor
mov
mov
ret
sbb
imull
test
cwtl
jnp
sbb
lods
test
popa
decl
mull
inc
and
sbb
sub
test
es
jge
nop
int
scas
and
pop
jge
ljmp
imulb
dec
adc
push
xchg
add
xchg
int
inc
inc
dec
dec
cltd
call
sub
test
adc
jne
pop
lea
mov
adc
jge
ss
add
leave
decl
inc
mov
pop
dec
xchg
pushl
lsl
cltd
and
incl
pop
push
pusha
inc
xchg
dec
cmp
jb
loopne
sub
mov
std
xchg
cltd
sub
mov
addr16
or
jnp
sbb
cld
in
stc
idiv
mov
hlt
fsts
movsb
ficoms
pop
sti
pop
divl
jb
jae
test
ja
cwtl
pop
push
sub
or
out
push
or
loope
outsl
scas
inc
mov
pop
push
lods
lcall
cmp
call
sub
popf
sbb
loopne
xchg
mov
cmp
or
cmpsl
jle
mov
sahf
cmp
lods
aad
or
cmp
ret
jg
add
add
mov
jne
push
out
pop
jge
mov
cld
adc
cmc
jae
ret
and
jle
imul
mulb
jnp
ss
jmp
stc
test
ja
pop
into
cmp
insl
ljmp
push
cmp
ljmp
int
out
cmpsb
inc
add
mov
push
sbb
in
ljmp
sarl
or
jo
and
ret
pop
sub
fwait
aam
push
lcall
sbb
push
jl
xor
test
pop
mov
test
test
popf
rorl
in
call
mov
xchg
imull
inc
push
sub
pop
insb
call
fnsave
or
imul
inc
sub
ss
dec
scas
lcall
decb
push
cmp
incl
jmp
popa
mov
leave
shll
mov
cmpsb
jecxz
or
loope
xor
cs
aam
call
nop
outsl
xchg
jne
cmpsl
lock
outsb
shrl
pop
jge
mov
ja
icebp
xor
inc
mulb
mov
pop
shlb
mov
and
jne
mov
mov
aaa
jecxz
mov
les
jb
stc
xor
push
ljmpw
and
out
dec
repnz
scas
pop
mov
test
xchg
loope
xor
jbe
sti
outsb
lds
fs
adc
sub
xchg
mov
out
fdivs
in
out
or
filds
inc
mov
push
nop
jae
jecxz
cmp
xchg
dec
mov
mov
dec
aam
push
xchg
dec
pop
notb
insl
leave
mov
cmp
outsl
js
loope
ret
push
add
push
xor
or
arpl
call
mov
imul
or
out
jnp
icebp
mov
and
pushf
mov
das
sub
push
push
jg
xor
cltd
pop
mov
add
imul
xor
in
adc
pop
adc
ds
out
clc
inc
cmp
push
scas
mov
and
fs
push
insb
xchg
nop
les
sub
fld1
xor
dec
push
sub
out
cmp
mov
add
pop
jae
dec
add
mov
dec
aas
leave
xchg
imul
fsubr
std
mov
mov
or
dec
cld
decl
mov
pop
add
add
jnp
idivl
adc
dec
ds
scas
and
pop
imul
je
cmp
add
mov
cmpsl
push
pop
jae
or
insb
loope
lcall
enter
popf
lret
pop
jmp
push
call
in
or
sbb
jmp
mov
cwtl
testl
aaa
dec
int
or
cwtl
sbb
imull
stos
ja
xchg
mov
jnp
fsts
sub
pop
popa
cmpsl
shlb
cmpsb
dec
iret
mov
out
frstor
cli
jb
rolb
push
mov
cmp
cmp
jecxz
adc
jg
pop
cmp
or
and
std
inc
cmpsl
mov
or
scas
push
cltd
enter
push
and
adc
jecxz
mov
pop
or
test
shrb
xchg
repz
mov
sub
cli
sub
aaa
inc
lods
mov
bound
adc
mov
adc
lcall
push
adc
mov
rcrb
out
cwtl
mov
lcall
enter
fsubrl
out
pop
dec
or
incl
cltd
adc
or
fidivrl
imul
adc
push
mov
or
adc
jmp
xchg
add
sbb
xor
mov
shlb
shrl
jmp
out
mov
sarl
icebp
filds
std
out
test
add
inc
xor
mov
ljmp
xchg
push
aas
stc
adc
lds
insb
jns
push
in
add
ret
outsl
lret
jecxz
stc
jp
add
inc
pop
push
and
mov
inc
lcall
cmc
inc
add
xor
outsl
add
jecxz
push
ljmp
ror
cld
xlat
fistps
imul
lods
sbb
jbe
mov
rcrb
clc
add
and
xor
sub
cwtl
sbb
js
mov
mov
inc
je
gs
push
addb
pop
pushf
aaa
dec
js
or
mov
cmc
push
and
je
xor
jmp
xor
mov
add
int3
adc
sbb
or
jecxz
pop
xor
aad
xor
jo
std
outsb
punpckhwd
dec
mov
or
es
mov
mov
mov
push
sbb
cld
dec
test
adcl
shlb
pop
cmc
lods
sub
in
and
sbb
int
insl
fdivr
dec
jmp
push
in
pushf
popf
or
dec
jmp
orl
cmp
lret
mov
movsb
repz
lea
xchg
jb
popf
xor
in
pop
xchg
insb
pop
imull
gs
add
add
clc
xor
imul
ja
lds
and
mov
cmovno
mov
outsl
push
mov
decl
adc
fidivrl
mov
cmpsl
imul
jg
fisttpl
fdivp
testl
dec
or
add
lret
and
shlb
hlt
cmp
pushl
lahf
ret
xor
fwait
push
pusha
and
fdivs
or
ror
ljmp
stos
xchg
stos
push
push
mov
jge
imul
testl
int3
fldl
pop
inc
call
addr16
aaa
sub
jmp
pop
cld
sub
pop
xor
fdivr
mov
das
incl
sti
adc
sub
aam
jns
ja
xchg
decl
add
dec
lahf
or
inc
push
dec
lret
repz
mov
fdiv
jmp
push
jns
pop
or
js
stos
out
mov
dec
push
jecxz
adc
pop
xchg
or
lods
js
test
push
mov
mov
mov
int
mov
dec
jge
int3
cltd
sub
clc
out
add
iret
lcall
je
aam
dec
xor
add
mov
xor
or
pop
mov
out
inc
call
popf
jbe
les
push
sub
jl
je
cmpsl
imul
fs
or
shrl
mov
pusha
mov
add
ss
das
push
pop
divl
xor
sti
mov
sub
mov
mov
jae
jbe
loopne
arpl
sub
lea
mov
out
mov
out
es
decb
in
mov
xor
cmpsb
lods
aam
and
incl
mov
incl
stc
pop
int3
aaa
mov
push
dec
mov
out
pushl
mov
out
xchg
mov
dec
cmp
jns
jg
notl
adc
dec
push
bound
call
jmp
sub
int
mov
pushl
sbb
sbb
idiv
addr16
mov
movsb
sbb
jge
in
dec
repnz
mov
cmp
lcall
in
decl
mov
nop
je
jae
aad
repz
shll
cmp
mov
les
jo
jne
xchg
cmpsl
scas
notl
call
negb
out
mov
mov
fwait
stos
and
adc
inc
addb
jge
insl
mov
jl
pop
xchg
pop
iret
sbb
notb
and
call
rcll
imul
iret
and
jecxz
jmp
outsl
push
xorb
stos
inc
or
add
iret
scas
lcall
add
mov
mov
pop
mov
shlb
mov
arpl
stc
sahf
push
lea
inc
icebp
incl
mov
insl
cmp
jg
aaa
mov
cld
dec
fmull
ret
in
lods
push
cli
sub
xchg
mov
sub
dec
add
xchg
divl
lcall
in
clc
mov
std
aad
mov
nop
loope
imul
shll
cld
pop
xor
lock
sub
mov
or
mov
push
sbb
shll
dec
fdivrp
xor
clc
aaa
idivl
rcr
std
stos
call
xlat
lods
shlb
enter
sarl
mov
jbe
icebp
jmp
repnz
adc
jns
mov
aaa
loop
popa
mov
and
rorl
add
inc
neg
insb
cmp
add
clc
ljmp
repz
test
push
popl
ja
je
pop
jae
or
cld
scas
add
dec
mov
repz
xchg
inc
jmp
pop
xlat
mov
pop
jmp
lods
jae
pop
pop
lahf
inc
incl
add
je
mov
adc
dec
lahf
lret
jnp
sub
adc
inc
and
jmp
sbb
test
sub
jecxz
cmpb
in
pop
cmp
je
orl
je
cli
or
xor
inc
inc
or
mov
dec
inc
xchg
loopne
aaa
or
sbb
add
jne
mov
adc
idivl
lods
repnz
jl
fcomi
mov
or
pop
or
stc
pop
incl
stos
cmp
adc
test
ret
jge
xchg
stos
adcl
jae
fistl
cmp
dec
call
push
jo
gs
call
mov
xchg
das
call
clc
or
add
xchg
push
decl
lods
push
rorl
jae
mov
jae
outsl
dec
sti
lret
cmp
insl
test
ljmp
subb
call
ljmp
pop
fildll
ds
mov
jge
mov
adc
scas
ret
test
rcr
push
and
jle
std
mov
jbe
dec
xchg
ds
sbb
or
inc
aas
popa
mov
mov
jns
mov
call
outsb
popf
fstps
sbb
fisttpll
rcrl
mov
es
ficoms
sar
mov
inc
ss
je
jp
mov
adc
les
int3
cmp
aaa
mov
xor
nop
xchg
decl
cld
cli
iret
clc
aam
pushl
or
popa
mov
push
jmp
test
jg
dec
stos
jmp
sti
push
mov
mov
iret
jp
in
lods
ficoms
loopne
bound
imull
add
idiv
xor
mov
sbb
push
loope
mov
xor
mov
mov
incl
and
pop
jbe
mov
sbb
xchg
mov
imul
push
push
add
jp
je
repz
aas
add
ljmp
daa
fwait
cmpsl
push
mov
xor
xor
push
ljmp
ja
inc
mov
mov
arpl
stc
xor
or
insb
add
or
pop
mov
xor
mov
and
ret
cmp
iret
stos
test
jb
sbb
loope
dec
adc
scas
inc
add
jo
push
mov
fdivrp
xor
sub
fcomps
cwtl
or
incl
sbb
pushf
xor
lods
inc
addr16
stos
push
aad
imul
call
rcr
aaa
fbld
pop
mov
leave
xor
subl
and
je
push
hlt
or
inc
inc
sbb
outsl
std
pushl
call
out
cmp
fwait
outsl
lock
mov
jae
xchg
mov
daa
dec
push
stos
aam
lcall
out
enter
in
xor
push
in
cltd
inc
cmp
add
pop
nop
or
ljmp
sahf
inc
adc
std
imull
push
inc
mov
pop
xorl
sbb
repz
fwait
inc
nop
popf
rdmsr
and
divb
jecxz
inc
sub
and
neg
and
int
mov
lea
adc
outsb
hlt
std
mov
dec
xor
sub
aad
cmp
les
fimuls
sbb
adc
sub
mov
stos
cmp
jbe
xchg
loopne
xor
decl
pushf
mov
js
cs
jno
jae
movsb
dec
imull
adc
cmp
hlt
push
inc
subb
pushf
stc
sbb
jae
adc
imull
lods
mov
sti
addl
enter
fadds
sub
add
mov
subb
out
and
loop
or
ja
xchg
cmpsl
adc
out
incl
ds
push
data16
scas
incl
sbb
gs
fs
or
stc
lahf
jle
scas
cmp
xorb
sbb
and
cmp
in
idivb
int3
lret
mov
rcrb
lock
cmp
jne
xor
hlt
fstpt
test
or
sti
into
repnz
inc
push
mov
pop
call
popf
dec
push
mov
inc
cmpsl
ret
or
push
mov
movsb
lods
mov
hlt
loop
pop
test
outsb
jns
push
or
mov
pop
mov
clc
std
je
popw
sbb
jle
cmpsb
fdivrs
xchg
leave
sbb
xor
les
inc
outsb
iret
pop
lcall
int3
fdivr
adc
push
push
sub
lods
sub
daa
mov
sbb
fnstsw
aas
lcall
mov
push
mov
mov
rorb
jmp
bound
je
add
je
push
insl
xlat
js
jl
lret
mov
jg
mov
cld
leave
sbbl
mov
jle
pusha
ja
fstps
mov
jmp
aam
stc
stc
jecxz
cwtl
imul
clc
mov
pop
mov
fwait
sbb
sub
inc
adc
imul
std
nop
jbe
inc
adc
and
cltd
jmp
test
iret
inc
mov
cwtl
mov
mov
aaa
pop
enter
pusha
adc
jecxz
std
jp
ficompl
dec
dec
lock
idivl
in
lret
inc
mov
scas
insb
xlat
and
sub
push
pop
inc
mov
and
cmp
mov
rcrl
stc
jo
dec
addr16
lret
out
test
lret
jmp
sub
mov
test
cld
mov
or
outsb
push
ja
mov
jo
pop
ljmp
insb
gs
decl
stos
clc
mov
cmpsl
and
adc
stc
add
cmpsb
sub
lea
jl
jmp
add
pop
xchg
sar
dec
fisttpl
inc
mov
movsl
add
popa
pop
fcmovbe
pop
xchg
pop
lcall
adc
pop
js
push
imul
push
addr16
insb
inc
mov
in
push
add
inc
dec
mov
jo
mov
mov
pop
lds
cmp
pop
and
mov
scas
mov
gs
incl
aad
inc
push
push
push
les
jmp
pushf
cmp
decl
repz
lock
movsb
or
pop
das
cmp
in
and
push
negl
cltd
jl
and
sbb
sub
fistps
xor
fdivrp
lock
iret
mov
jmp
inc
fmull
call
jae
sbb
jl
jno
rorl
js
sub
jmp
or
sti
cli
movsl
add
in
lcall
out
ljmp
and
pop
cmpsb
das
jle
sub
fmuls
adc
adc
lds
sti
and
jne
sub
shlb
dec
in
jmp
std
mov
ds
mov
lret
mov
jp
cmc
into
mov
adcb
xchg
push
js
jmp
jecxz
aam
and
sbb
pop
adc
push
int
and
jbe
mov
shll
mov
inc
and
fcoml
mov
inc
testb
test
lret
or
and
cmp
shrl
inc
cltd
lock
aaa
faddl
and
testb
clc
hlt
push
mov
mov
dec
neg
inc
aaa
sbb
rolb
testb
pushl
sub
imul
push
fsubrs
lcall
repz
loope
incl
sub
lret
and
jns
or
sub
sub
xor
mov
pop
xor
sbb
add
inc
call
jg
add
mov
iret
testl
jne
add
push
dec
clc
xchg
orb
mov
add
sbb
jne
unpcklps
cmc
shll
into
mov
sar
mov
sti
adc
mov
add
shrb
dec
je
dec
hlt
in
loope
xor
sub
inc
pop
ss
mov
or
stc
xor
out
cltd
clc
xchg
ja
aaa
cmc
pmullw
fcoms
shll
nop
lods
ljmp
inc
repz
and
inc
call
or
dec
popf
nop
daa
mov
cmp
push
jmp
push
xchg
jmp
fists
cltd
sbb
lcall
mov
mov
cld
addl
mov
push
sti
push
pushf
leave
outsb
in
cmp
sub
into
push
call
and
movsb
jae
int3
mov
test
lcall
mov
sub
call
lcallw
insl
jl
ljmp
adc
sti
inc
add
mov
aas
dec
aaa
cmpsb
in
or
dec
js
xor
sub
mov
decl
mov
adc
ss
cmovs
push
sbb
loope
decl
test
decl
mov
ja
lods
mov
push
cmpsl
pop
xor
sbb
xchg
jo
jmp
pop
inc
test
mov
stos
adc
push
sbb
xor
ja
sub
popa
stc
lods
sbb
push
into
pop
in
push
xchg
js
popf
cld
xchg
std
outsl
repz
or
mov
aas
insl
in
mov
xlat
or
add
push
mov
jo
insb
mov
popa
lea
mov
push
ja
dec
insl
pop
and
cmpsl
test
lahf
jmp
and
outsb
xor
pusha
add
shlb
xchg
out
dec
ja
fcmove
mov
dec
cmp
test
nop
jae
enter
shrl
add
call
sub
jno
add
testb
gs
call
mov
xchg
mov
xchg
jl
stos
test
cmp
mov
add
idivl
mov
repnz
pusha
push
lods
and
decl
sub
ret
and
je
daa
inc
sbb
les
mov
push
inc
cmp
pop
call
negl
repnz
lock
cld
inc
jge
pop
dec
push
jmp
add
in
ss
aad
dec
xchg
js
jbe
popa
incl
dec
mov
jbe
sbb
fmull
and
push
shr
jb
bound
xchg
test
jecxz
dec
and
mov
out
iret
xor
mov
call
in
cmpsl
push
lahf
enter
xchg
call
daa
mov
js
inc
cmpsl
addl
jmp
test
mov
andl
pop
push
loopne
punpckhdq
pushl
scas
ret
or
lock
cmp
ds
ljmp
in
or
stos
je
shr
lcall
push
lea
bswap
testl
sbb
or
push
push
fimull
movsl
lcall
push
outsb
or
adc
jns
mov
sti
lods
mov
xor
fadd
cwtl
ljmp
mov
fisttpll
sahf
xor
nop
inc
test
movsb
mov
scas
mov
sbb
mov
ja
xor
cmp
jo
mov
iret
cmp
mov
es
cld
xor
movsl
xchg
push
add
mov
xor
sbb
inc
jbe
decl
xor
jecxz
push
sti
jo
pop
loope
cmc
pushf
push
imul
push
decl
push
xchg
loop
out
mov
adc
mov
pop
jmp
cmpsb
mov
cmp
cmpsl
jp
jecxz
dec
xlat
outsb
incl
je
popa
pop
mov
and
jle
jmp
cmp
lea
mov
or
xor
cmpsl
push
xchg
xchg
sahf
aaa
lcall
cmpsb
call
xchg
movsb
sub
stc
lcall
inc
clc
shrb
push
call
stos
mov
mov
addb
jmp
push
sub
ret
sbb
jbe
sub
xor
pop
lcall
jg
incl
inc
mov
push
ljmp
in
push
adc
gs
movsl
mov
decl
lods
cmp
mov
add
jb
xchg
ss
xchg
shlb
xor
in
or
cld
imul
jecxz
add
xor
and
mov
or
inc
mov
add
das
jbe
idiv
push
sub
mov
mov
xchg
or
adc
mov
jp
in
xor
mov
loopne
add
fdivr
stos
adcl
jmp
inc
stos
jae
mov
adc
lock
dec
pop
mov
ljmp
jne
add
pusha
push
cwtl
call
adc
mov
dec
stc
pop
and
cmc
test
clc
ret
cld
adc
rorb
mov
repnz
mov
leave
sbb
imul
loop
jno
jbe
lock
inc
test
sbb
mov
in
sbb
pop
push
ds
ljmp
xor
or
mov
or
mov
aad
js
jmp
test
jo
rcrl
mov
call
cwtl
cmp
and
fs
mov
call
jl
ud0
pusha
and
mov
call
adc
lahf
sbb
ret
sbb
je
jg
test
mov
in
roll
or
push
or
jb
es
xchg
inc
sub
mov
mov
and
jns
mov
dec
jbe
ds
inc
repnz
in
out
outsl
push
addr16
jg
jecxz
decl
dec
mov
cmp
adc
inc
ja
push
bnd
add
fbstp
shll
decl
jge
or
mov
out
test
mov
mov
bound
ja
orb
and
push
mov
repz
jl
call
ret
adc
movsl
repnz
sbb
rclb
xor
xchg
mulb
cwtl
movsb
call
test
xor
xor
add
or
or
call
mov
and
or
jne
mov
add
insb
adc
sub
stc
add
pusha
sbb
xor
cmp
xchg
mov
pop
std
add
sahf
out
addr16
jge
in
adc
fucomi
daa
adc
push
adc
loop
cmpsl
jae
sti
jnp,pt
adc
mov
testb
xchg
rclb
jge
jg
adc
stos
dec
xchg
clc
sub
mov
push
aas
mov
js
adc
call
lcall
push
push
sub
nop
jecxz
cmp
mov
shlb
inc
jo
sbb
mov
ljmp
jp
mov
jmp
adc
je
xchg
imul
xlat
outsl
cmp
cmp
lahf
mov
push
insb
jle
lods
lcall
fdivr
gs
daa
jno
jmp
ss
rcr
push
scas
mov
adc
cltd
jbe
sbb
and
jb
mov
fsts
push
add
pop
dec
lea
pop
leave
push
mov
xorl
jbe
movsl
mov
popa
repz
sbb
jae
adc
std
jbe
mov
jbe
lock
nop
mov
loope
ja
arpl
sbb
pushf
decl
out
cmc
mov
pop
inc
addr16
jne
movsb
sbb
or
push
xor
cmp
movsl
jns
popf
ss
ja
lcall
xchg
sub
lret
push
xor
stos
cmp
je
js
ja
pop
int
aad
jo
jns
or
jmp
into
pop
movsl
test
cli
in
call
pop
or
cmpsl
pushl
jno
jae
int
push
cli
cmp
add
rcl
loopne
pusha
std
push
sbb
out
cltd
rcll
mov
mov
jl
or
push
mov
idivb
fisttpll
xchg
in
sub
jo
nop
in
fistps
addr16
loope
arpl
mov
notb
cld
pop
pcmpeqw
cltd
jge
addl
stos
sbb
sbb
add
inc
lods
in
xchg
std
mov
sbb
aad
bound
dec
fstpl
or
stos
push
stc
xor
pushl
jmp
sub
popa
out
leave
push
sub
test
mov
fwait
mov
mov
les
nop
cwtl
xchg
sub
push
pushf
mov
jbe
pop
adc
mov
inc
lcall
pop
lds
pop
jg
jmp
fcmovne
std
pop
dec
and
sub
incl
or
notl
test
cs
mov
ja
shll
mov
out
xorl
das
iret
call
in
insl
stc
mov
mov
mov
xor
in
fildl
add
lret
mull
mov
or
push
ljmp
in
fwait
inc
ljmp
mov
mov
adc
cmc
cli
fcmovu
nop
gs
int3
sbb
push
sbb
jns
pop
lea
insl
or
jno
xchg
and
aad
pop
sub
sub
lret
insb
nop
inc
call
into
lock
icebp
fst
mov
sarb
and
das
mov
pop
adc
and
ds
arpl
sbb
in
add
xor
inc
ja
sbb
test
and
pop
stos
dec
cmc
int3
out
xchg
sbb
fs
mov
decb
es
nop
dec
imul
inc
jbe
bound
mov
movsl
pushl
cmp
fnstenv
call
scas
cmp
sti
sub
sbb
je
push
popf
pop
sub
stos
jge
inc
xor
push
mov
pop
xchg
cmp
loopne
fidivs
shrl
imul
and
pop
mov
enter
push
pop
mov
sti
xor
incl
nop
pop
push
mov
sbb
icebp
inc
pop
insl
adc
subb
stos
and
fwait
lea
decl
push
pushf
adc
push
pop
sub
sbb
jbe
xor
dec
pusha
xor
lret
sbb
sub
ja
test
data16
jo
xor
in
repz
mov
dec
shll
movsb
mov
fstpt
lea
jp
ljmp
sub
pop
lods
jecxz
pop
xor
and
lret
mov
sbbb
lds
ja
adc
ud1
daa
mov
std
mov
and
stos
mov
aam
int3
dec
fs
mov
pop
test
popf
add
xor
js
fs
cmpsl
arpl
pop
mov
push
mov
mov
inc
scas
imul
mov
into
je
in
inc
xchg
aaa
mov
dec
mov
mov
sub
push
int3
lods
jmp
js
mov
lahf
ja
out
or
psubw
push
stc
nop
mov
mov
dec
xchg
testl
lcall
jp
insb
lods
sbb
insl
dec
push
pop
cld
jecxz
stos
mov
lcall
sarb
sbb
mov
les
scas
sti
inc
lock
sub
jp
lret
not
hlt
shl
jae
inc
or
call
xchg
imul
lahf
rcrb
loopne
in
add
fsts
dec
push
and
lret
or
mov
xor
inc
xchg
loopne
push
push
adc
add
ja
xchg
mov
mov
movsb
and
in
pushf
test
mov
xchg
neg
mov
lret
xchg
and
pop
jmp
mov
push
iret
push
pop
sti
pop
mov
stos
aad
xor
dec
pop
push
mov
nop
repnz
push
rcl
aad
sub
je
ret
aaa
xor
mov
cli
mov
or
ja
arpl
dec
and
pop
leave
fcompl
lret
xchg
sti
adcb
xor
fwait
ljmp
es
mov
push
loopne
mov
jne
lret
mov
std
pop
jnp
sahf
ljmp
repz
push
mov
lahf
or
arpl
push
sub
or
les
icebp
movl
ret
outsl
lds
out
pop
sub
jg,pt
testb
push
mov
std
mov
adc
push
or
mov
call
es
arpl
dec
add
es
mov
fsts
xor
jb
mov
adc
push
imulb
in
sti
dec
fistps
js
adc
inc
mov
shrb
add
popa
lcall
int3
sbb
call
mov
decl
in
inc
sti
les
lcall
add
xchg
sbb
pop
outsl
negb
sbb
mov
sahf
jb
add
jp
ljmp
out
jns
ljmp
push
and
stos
mov
out
xchg
enter
pop
push
test
fsqrt
sbb
int3
lcall
jg
jo
mov
loopne
push
fistl
data16
xchg
ja
xchg
shlb
add
cmp
or
imul
xchg
dec
lcall
in
lods
mov
bound
cmpsb
arpl
dec
repz
sahf
fistpll
add
or
inc
cmc
jle
inc
daa
mov
push
or
xchg
mov
mov
inc
push
into
cmc
mov
leave
and
out
mov
or
stc
and
out
and
clc
dec
mov
sub
int3
insb
xor
addr16
and
xchg
inc
cli
sub
std
sub
cmc
push
xor
int
arpl
loope
inc
xchg
js
or
das
jecxz
fsts
inc
adc
mov
imul
gs
fsubr
inc
dec
insb
dec
and
mov
xorl
xor
ljmp
std
fnsave
adc
or
cli
xlat
fcomps
ja
inc
push
stc
int
mov
dec
aam
ficoml
cmp
lods
and
decl
mov
xlat
jmp
push
jmp
xchg
push
mov
pop
jle
cmpsb
push
loope
and
push
lcall
mov
out
or
jne
mov
jns
stc
cmpsb
lcall
lea
pop
push
push
cltd
push
xchg
pusha
sarl
decl
leave
repz
fisttpl
divb
add
sub
dec
mov
notb
sub
xlat
pop
pushl
test
std
popa
push
cmc
push
arpl
fldcw
xor
dec
sbb
mov
inc
mov
or
xlat
adc
cs
stc
or
imul
cmp
push
scas
or
rcll
pop
stc
jns
out
movsl
mov
outsb
rcrb
or
jge
dec
cmp
push
jp
cli
add
inc
scas
xor
xchg
inc
add
sahf
aad
js
mov
sbb
dec
pop
adc
sbb
je
std
stos
xchg
dec
int3
cli
enter
enter
xor
add
jb
aaa
push
scas
lcall
sub
xchg
and
test
stos
das
and
shll
push
je
lods
cmp
cmpb
pop
addr16
sbb
rolb
adc
cmp
std
jl
lock
jl
pop
dec
cmc
rorl
xlat
sub
jb
imul
mov
mov
jp
lret
cld
lret
add
out
push
sbb
cmpsl
cltd
in
lahf
inc
out
inc
hlt
insl
or
xchg
xchg
loopne
or
add
xchg
aas
outsl
cmpsb
adc
mov
lea
cmc
shrl
jge
jo
stc
mov
imul
sub
insl
das
sub
sub
std
data16
dec
xlat
jnp
dec
pop
decl
mov
mov
shll
cmpsl
push
lret
cmp
xor
or
mov
cltd
jbe
cmp
mov
out
sub
int
inc
lds
pusha
insl
adc
std
mov
xor
adc
rcr
dec
lret
or
shll
pop
mov
mov
inc
pop
or
daa
aaa
pop
test
push
xlat
push
aad
and
cmc
rorb
fidivrl
adc
pop
ret
push
mov
arpl
lcall
mov
adc
mov
shll
mov
sbb
enter
lods
cltd
or
notl
push
dec
jae
aaa
sahf
mov
cmpsl
inc
mov
call
aam
ss
mov
and
jno
sbb
test
jge
and
sti
mov
adc
ja
and
sets
mov
lea
pop
sub
out
dec
push
sub
clc
out
push
movsb
dec
add
xlat
sub
decl
adc
out
xchg
int
es
dec
adc
xchg
cmp
mov
cmpsl
negl
xchg
xor
mov
jo
pop
jbe
sbb
lahf
push
mov
rclb
out
out
bound
jmp
popf
cmpl
dec
pop
call
imul
jns
mov
ljmp
cmp
lcall
inc
xchg
jne
or
out
xchg
mov
negl
xor
add
add
adc
push
fistps
fwait
inc
insb
push
xor
lods
fcmove
or
pop
nop
add
ljmp
out
push
jo
scas
pop
mov
aad
xor
jle
and
out
pop
sub
int
pop
adc
popf
outsl
in
mov
add
dec
jge
sub
ss
mov
sub
outsl
sub
pop
sbb
hlt
sbb
decl
inc
inc
lods
push
xchg
js
mov
stos
inc
push
jmp
inc
mov
faddp
mov
xor
mov
stos
sti
gs
lods
ja
rcr
xlat
insb
cli
adc
inc
jae
adc
mov
cld
push
xor
inc
rcll
call
mov
fwait
jmp
cmc
stos
or
call
and
jnp
je
xchg
iret
shll
arpl
cs
jg
dec
repz
ljmp
unpckhps
mov
dec
sub
rcrl
jmp
outsl
sbb
pop
test
jne
mov
in
divb
shlb
and
scas
aam
rol
lea
sar
xchg
lcall
sub
test
mov
xchg
jp
jecxz
jo
jno
lds
sbb
std
movsb
and
cmc
mov
mov
lea
imulb
or
mov
stos
js
sub
iret
cwtl
leave
mov
lcall
rorl
mov
std
mov
add
hlt
sub
mov
jb
xor
adc
ds
sti
stos
cmp
cmc
ja
out
insl
inc
sbb
je
das
jg
cmp
stc
iret
jbe
mov
jae
sub
mov
xchg
push
shl
jg
push
mov
cmp
je
mov
or
in
dec
add
adc
mov
loop
incl
xchg
popa
xchg
popf
xchg
xor
push
insb
ljmp
gs
call
jo
jge
icebp
and
ljmp
in
lcall
lods
jl
call
sarb
cwtl
pop
sub
incl
js
cmp
loopne
in
adc
dec
push
pop
popf
out
cs
inc
loop
mov
inc
cli
aas
rol
xchg
stc
fsts
jae
ret
and
mov
aaa
pushf
sti
push
pop
sbb
jmp
insl
je
mov
movsb
mov
jmp
cmp
sbb
jnp
nop
out
hlt
repnz
lahf
leave
jno
mov
test
pop
incb
call
mov
cwtl
es
bound
add
or
xor
dec
xchg
inc
out
lahf
and
xor
pop
sub
push
sbb
into
repnz
ljmp
pushw
sahf
xchg
incl
and
push
das
and
incb
xor
insb
xchg
push
out
pop
adc
push
adc
icebp
in
decl
sbb
fcomip
fdivrp
jmp
sarl
cmp
int
bound
cli
sti
incl
test
push
lret
std
jb
xchg
test
push
sub
cwtl
out
nop
push
mov
aaa
sbb
decl
xor
addr16
pand
xchg
je
pusha
mov
subl
sar
ja
push
push
test
adc
pop
adc
jmp
sbb
ss
imull
lock
pop
push
repz
sub
pop
addb
das
std
cmp
jge
pop
pop
cmp
cmp
xor
mov
mov
or
push
fistl
dec
and
clc
mov
mov
ljmp
cs
std
jmp
push
dec
adc
cmp
push
dec
pop
outsl
aad
jmp
xor
insb
mul
ja
cwtl
xchg
lret
pop
mov
lahf
loope
or
inc
cmc
or
je
dec
or
sahf
sbb
mov
push
into
int
pop
in
gs
int3
sbb
xor
jecxz
das
mov
rorb
leave
and
inc
iret
cltd
jb
or
jl
ljmp
sarl
cmp
lcall
nop
lahf
outsl
and
cmc
lods
pop
lcall
fistpll
xchg
jbe
mov
mov
xlat
arpl
xchg
sub
jmp
add
insb
stos
inc
enter
push
hlt
adcb
pushf
mov
out
xor
mov
add
xor
mov
int3
outsb
mov
and
mov
inc
gs
pusha
pop
in
jmp
shll
jbe
and
das
dec
mov
mov
aaa
add
or
adc
xor
or
jbe
lock
ljmp
xorl
or
test
push
sub
test
fidivrl
mov
stos
ljmp
ja
or
mov
ss
lods
inc
test
jne
jp
or
jge
call
mov
insl
iret
dec
inc
mov
add
push
push
data16
daa
clc
mov
inc
mov
cwtl
or
or
mov
jmp
insl
jbe
ret
jg
aad
call
sar
mov
mov
ficoml
sti
cmp
adc
push
sub
cs
and
sti
sub
dec
sub
orl
and
pop
jmp
jmp
xor
jecxz
mov
ljmp
ds
loop
call
pop
inc
adc
add
das
add
push
mov
and
lcall
test
sub
mov
push
pop
mov
test
lds
dec
popa
jbe
movnti
sbb
loopne
jno
adc
sahf
out
jbe
jnp
sbb
lcall
and
inc
add
jge
jae
pop
inc
xlat
sub
clc
movsl
out
add
add
ja
cmc
insb
loope
aas
push
mov
push
aad
dec
iret
push
add
adc
call
lock
cmpsb
repz
sub
sbb
xchg
call
push
jmp
push
daa
jns
cwtl
std
cmp
in
or
in
sub
inc
decl
and
sbb
es
jb
push
cli
addl
xchg
mov
ljmp
lods
in
fsubrl
push
jmp
push
inc
rcrl
jge
daa
push
mov
dec
cmp
xlat
nop
dec
mov
cmp
xchg
mov
mov
popf
add
test
and
xchg
add
sbb
test
or
mov
lock
pop
imul
mov
mov
sti
inc
sbb
mov
mov
pop
push
jb
pop
mov
fsubrs
xorl
scas
mov
jge
fistl
sbb
in
popa
dec
decl
mov
in
push
into
pop
push
jl
cld
ja
mov
pop
shl
push
add
incl
mov
fimuls
decl
add
mov
sub
sbb
bound
insb
add
mov
xor
sbb
stc
jae
sahf
mov
or
ja
stc
mov
fadds
dec
cwtl
std
in
je
std
sbb
ret
scas
jno
pop
rorl
xchg
pop
lods
lahf
and
inc
ss
aam
cmp
jp
adc
movsl
stc
jae
and
or
push
adc
mov
fsubl
xor
jne
out
sub
pop
decl
xchg
mov
cld
pop
daa
outsb
mov
lock
jns
and
add
sbb
inc
mov
imul
adc
sub
mov
ja
xor
test
ret
jl
mov
sub
cld
mov
xor
dec
add
cmp
and
gs
lcall
shr
ss
xlat
clc
nop
jg
dec
or
repnz
pushl
inc
jae
jo
lcall
inc
call
ljmp
pusha
or
add
divl
lcall
jg
pop
leave
fisubrl
mov
adc
dec
fisttpll
jl
daa
mov
jmp
and
add
fmuls
enter
rcrl
push
in
fstl
incl
add
mov
add
jb
sbb
divb
loopne
sbb
jne
call
sti
or
sub
push
or
mov
push
leave
push
jge
fcos
dec
mov
xchg
lahf
push
fldt
pop
js
pushf
je
into
and
mov
incl
jo
xchg
adc
jbe
sub
popa
mov
aas
pop
leave
in
adc
and
push
insl
inc
push
cs
xchg
decl
xchg
cli
shll
into
in
testl
push
xchg
sub
sar
mov
stc
pusha
fnstcw
or
loopne
xlat
jge
fidivs
mov
lcall
js
mov
cld
call
sub
je
pop
pop
pop
rcll
cmp
cmpsl
pushf
pop
popa
sbb
dec
jp
jb
outsb
add
ja
out
jb
loope
jb
stc
mov
std
mov
mov
mov
shll
fistpll
mov
cmpb
xchg
in
push
aad
adc
and
aam
jmp
ret
std
add
ja
jb
lock
cld
call
mov
adc
fsubs
pop
adcl
in
mov
icebp
mov
jmp
or
add
movsb
sbb
addr16
std
cmpsl
ljmp
fwait
push
mov
jb
test
sbb
pop
push
idiv
lahf
sarl
push
xlat
xor
andl
push
inc
pop
sbb
add
push
cmp
jns
mov
cmc
or
incl
faddp
inc
lahf
imul
mov
out
jmp
sti
lock
mov
rcrl
push
inc
shll
imul
call
jo
sbb
jmp
mov
or
clc
rcr
and
dec
fcomps
cld
insl
xchg
dec
call
mov
sbb
shll
sub
ljmp
dec
dec
sbb
jmp
and
call
addl
ljmp
pop
xchg
sbb
and
push
lea
push
lds
jbe
push
lea
mov
adc
inc
sub
imul
cmp
sub
xchg
decl
aam
sbb
mov
fsubrs
lock
add
dec
loope
lods
and
xor
jmp
dec
add
inc
daa
push
fidivl
stos
lcall
or
test
and
xlat
mov
jae
mov
or
dec
pop
loopne
decl
jbe
dec
add
or
mov
xchg
jne
push
mov
fistpl
inc
jae
lock
fisubrl
pop
mov
std
cmc
imul
lcall
rorl
adc
ljmp
inc
test
popa
add
leave
mov
dec
es
cltd
stos
mov
decl
lret
dec
push
repnz
add
aaa
fdivl
or
pop
xor
call
add
mov
or
dec
lahf
jge
shll
push
jno
or
adc
lcall
js
pop
clc
loopne
negl
mov
sub
cmc
push
jo
mov
adc
xchg
sbb
cmpsl
ret
dec
ljmp
jae
ss
fld
xchg
and
mov
pop
addr16
jb,pt
xor
mov
shl
lock
mov
push
ljmp
add
push
sub
lods
je
jg
enter
call
push
stos
push
jb
clc
sbb
mov
out
sar
xchg
arpl
jmp
hlt
fbld
inc
divl
mov
push
xor
jno
inc
cli
leave
cmc
mov
inc
jl
cmp
pop
shlb
out
outsb
sbb
jle
jecxz
pop
test
mov
ja
mov
fsts
out
mov
popf
and
cmp
mov
in
ss
inc
call
mov
cli
jg
push
cwtl
subb
mov
cltd
decl
jno
addr16
push
movsl
lods
jmp
sbb
testl
popf
call
push
insb
std
addr16
lret
decl
aas
lret
sub
rcrl
shlb
cmp
fimuls
xchg
pop
sub
push
inc
xlat
cli
call
js
jne
xor
outsl
cs
xchg
aas
or
mov
out
pop
sub
push
dec
test
negl
nop
sbb
rorl
hlt
decl
scas
jecxz
neg
fmulp
sub
out
mov
mov
xor
push
std
out
test
sub
nop
popa
pop
icebp
or
movsl
mov
sbb
jg
bound
aam
mov
pop
mov
in
xchg
mov
sub
cltd
xlat
sarb
je
or
mov
int3
mov
rcll
adc
pop
scas
xchg
lea
subl
loop
std
or
push
inc
push
cmp
imul
das
fcomp
cmpsl
ljmp
or
xchg
std
dec
cmp
jge
inc
mov
cmc
mov
mov
shll
adc
push
stc
cmpsb
push
or
add
or
push
lods
mov
mov
push
dec
inc
cwtl
pop
insb
or
cmpsl
shll
xchg
nop
sahf
cmp
push
pop
loop
or
fidivrs
sbb
ljmp
lock
push
sbb
adc
rorb
xor
xchg
and
jl
mov
std
movlps
adc
icebp
aad
clc
sarb
mov
adc
adc
adc
mov
in
and
je
roll
xchg
xchg
xchg
and
lock
sbb
add
adc
push
xchg
daa
mov
or
sbb
pushl
bound
cld
mov
pcmpeqw
mov
jge
call
xchg
lods
mov
hlt
inc
jb
outsl
mov
loope
inc
repz
test
out
mov
out
xchg
lds
adc
jns
sub
pop
adc
pop
xchg
lcall
jnp
lahf
scas
mov
mov
dec
jmp
add
loope
inc
cmp
mov
popf
sub
jne
sarb
les
jo
xor
aad
int3
pushl
out
ja
and
cmp
js
repnz
leave
fists
decl
mov
ljmp
mov
jl
sbb
dec
fmul
decl
adc
mov
rcrl
xlat
inc
lahf
call
add
push
or
cmp
adc
arpl
inc
pop
add
cli
add
loop
xor
mov
decl
push
clc
outsb
mov
xor
mov
adc
inc
fldlg2
push
mov
testl
fsubl
inc
jp
push
leave
push
push
das
or
shl
push
outsb
xor
cmp
dec
cmpsb
in
sti
add
dec
in
jg,pn
vmread
movl
add
out
mov
xor
mov
clc
jo
in
fucomp
pushf
sub
and
push
sbb
push
rcrb
lds
or
cmp
jno
cltd
jnp
ljmp
sbb
pop
inc
jp
pushl
or
push
cld
sub
jle
test
cmc
mov
jg
mov
cmp
scas
cltd
push
xor
push
in
mov
sub
mov
pusha
or
add
xchg
jmp
cmp
xor
mov
sbb
call
shll
ja
call
aas
xor
filds
push
and
insl
imul
xchg
xor
mov
ja
mov
not
jb
mov
fdivrs
jle
push
ss
pushl
gs
sti
stos
repz
stc
mov
orb
xor
ljmp
mov
add
call
call
mov
scas
sub
lds
jl
les
ds
pop
arpl
sbb
cmp
mov
js
add
sti
add
lds
icebp
or
or
orb
mov
mov
cmpsb
xorb
cli
popf
test
test
movntq
divl
addr16
lock
or
push
js
sub
dec
cmpsl
call
loopne
pop
shlb
cvttps2pi
push
xlat
rol
fs
jmp
js
lret
mov
mov
xchg
xchg
or
rcrl
and
xor
lcall
fadds
mov
movsl
sub
sub
cmpl
cmp
test
jnp
fadds
leave
rcrb
ja
ds
outsb
push
pusha
add
je
lods
fmuls
lret
stos
mov
out
xor
add
jns
testl
in
add
decl
aaa
pusha
mov
loope
and
shl
gs
xlat
loop
loop
in
in
decl
mov
lcall
test
in
sbb
mov
je
cmp
incl
bound
mov
cmc
push
fiaddl
mov
mov
or
fdivr
mul
lahf
push
sbb
mov
adc
nop
mov
fcomps
shrb
int
mov
loop
pop
divb
addr16
cwtl
pop
push
dec
adcb
test
pop
mov
fxam
adc
and
negl
mull
in
jne
mov
lcall
das
loop
idiv
cmp
cmp
out
and
xor
jbe
mov
inc
cmpsb
jmp
mov
cltd
and
stos
pushf
dec
testb
cmp
test
lret
dec
sub
rcrb
mov
sbb
divl
hlt
cmp
in
adc
dec
fcomip
scas
dec
xchg
iret
repz
inc
pop
sub
lcall
andl
jmp
fwait
loop
jo
stos
inc
or
sbb
dec
sub
in
mov
pop
push
mov
repz
cmp
popf
mov
stos
pop
loopne
dec
xor
mov
movsl
mov
sub
pop
fcoms
lcall
push
andb
lcall
aad
ss
fnstcw
adc
pusha
int
pop
and
pop
sub
sbb
mov
cld
mov
ljmp
cwtl
mov
in
cld
ja
arpl
mov
xor
and
fnsave
xor
xchg
bound
subb
xor
jno
add
mov
movsb
adc
adc
mov
fsubrp
xchg
ss
daa
adc
test
in
or
decl
out
inc
inc
out
aad
int
jmp
iret
sahf
movsl
scas
xlat
mov
arpl
outsb
adc
ret
ja
adc
bound
xchg
fimuls
mov
addr16
jne
push
shll
jmp
notl
fsubs
incl
divb
mov
mov
push
and
outsl
aad
ljmp
sub
push
jne
cltd
sarb
push
pop
inc
jo
jbe
or
mov
xchg
sub
pushl
push
cltd
in
scas
divl
fwait
sbbl
add
inc
jp
out
pop
cmp
jne
jmp
mov
jae
xor
jo
sbb
cmp
inc
lcall
lds
outsl
call
sub
or
fiadds
imul
testl
out
and
sbb
inc
adc
out
test
pushl
outsb
fisttpl
pushl
cld
call
cwtl
lea
and
sbb
ljmp
inc
ret
mov
dec
shrl
sbb
jae
outsl
movsl
fdivr
leave
jge
stos
call
and
fcmove
sbb
mov
mov
inc
shll
rcrl
negb
or
jo
mov
sbb
sub
xchg
fs
loopne
mov
push
dec
enter
xor
data16
mov
lcall
mov
lret
mov
es
fs
in
pop
jbe
gs
sub
aad
xor
es
ds
sbb
divb
xchg
jecxz
out
add
adc
xor
cmp
in
neg
xor
shlb
mov
andb
add
mov
cld
push
cs
int3
mov
sbb
sbb
mov
dec
jo
adc
loope
xor
incl
sti
dec
pop
ja
xchg
cmp
inc
push
repnz
inc
adc
fisubrl
fs
pop
test
mov
incl
mov
idiv
pop
decb
lcall
cmp
mov
cmp
push
and
ljmp
repz
push
jmp
jmp
rorl
inc
jmp
insl
mov
xor
mov
aad
sbb
sub
lret
das
lock
in
stos
and
sub
xchg
dec
mov
adc
mov
mov
xlat
imull
mov
arpl
jle
add
call
xor
inc
push
rcrb
mov
mov
sbb
cld
inc
fcos
hlt
xchg
mov
dec
mov
ja
push
xor
xor
js
sub
and
sub
std
cmp
inc
jne
js
daa
inc
sub
sbb
mov
push
ja
mov
pushf
add
test
sub
fnstenv
sbb
cmp
sub
and
cmpsl
jle
sti
push
ljmp
jp
mov
lcall
sti
stos
jl
test
jnp
jb
cmp
pushl
js
and
imul
mov
inc
mov
pushl
adc
gs
inc
fnsave
sub
sub
jno
xchg
adc
xchg
hlt
xor
je
inc
ret
and
call
cli
out
lcall
adc
add
test
jno
push
sub
dec
lret
jmp
nop
stos
loop
add
mov
and
push
ljmp
dec
pop
daa
dec
jno
cmpsl
psubsb
test
cmp
inc
pop
inc
iret
mov
xchg
mov
jne
push
and
cmp
cmp
std
push
or
push
ss
pop
inc
es
jae
inc
fdivrl
cs
ja
inc
fisttpl
sub
nop
repnz
inc
xlat
mov
mov
xchg
xor
xor
xlat
insb
mov
in
cmpsl
and
mov
mov
mov
mov
inc
mov
cmc
xor
hlt
ss
cmc
aas
cwtl
jbe
cmp
sub
repnz
adc
in
outsl
lret
or
hlt
jmp
lcall
mov
inc
mov
pop
mov
xchg
fs
or
add
out
xchg
in
xor
stos
js
gs
dec
insl
pushl
pop
xchg
inc
inc
xchg
add
movsl
int
mulb
insb
jge
or
jecxz
ret
xchg
mov
aad
inc
lods
enter
and
mov
call
sbb
sti
out
pushl
sarl
fwait
test
into
fwait
pop
test
dec
jne
or
sbb
mov
inc
repz
xchg
and
sahf
ss
stos
faddl
test
mov
std
mov
xor
jo
sbb
mov
leave
or
scas
es
or
push
addb
push
cmp
pop
lods
fists
mov
cmpsb
xchg
lahf
xor
cmp
mov
mov
cmp
fldt
mov
mov
pop
mov
dec
ljmp
and
inc
xor
pop
enter
pop
pop
jmp
adc
sbb
shll
test
rcr
jmp
adc
divl
jne
std
pop
sbb
or
adc
cli
cmp
xchg
lea
fnsave
xchg
mov
mov
or
lcall
mov
lods
lock
decl
shl
fs
inc
cmp
hlt
jo
test
mov
mov
sub
mov
repnz
in
mov
fistpll
test
mov
adc
ret
push
pushf
stc
xor
dec
mov
jmp
ds
dec
jne
inc
addr16
mov
cmp
fwait
adc
imul
sbb
out
sub
pop
in
pop
cmp
lcall
insb
jp
inc
pushl
xor
scas
daa
int
addr16
jae
jbe
jnp
and
sub
clc
jbe
inc
hlt
popf
jo
fcmovnu
mov
mov
data16
aam
sbb
decl
mov
cmp
incl
lods
mov
dec
pusha
ljmp
sub
mov
ja
or
dec
sbb
in
decl
xor
xchg
popf
mov
add
cld
je
stos
ljmp
push
scas
shlb
adc
ret
pushl
cmp
mov
jne
sbb
or
dec
aas
mov
ja
push
mov
or
or
call
or
sbb
jns
add
incb
sub
adc
sub
or
mov
jmp
data16
lret
inc
jb
add
aas
add
mov
push
fwait
testl
mov
jbe
insb
jo
push
iret
add
add
decl
sub
push
testl
stc
inc
add
lds
insl
mov
dec
mov
or
dec
fisubs
js
adc
push
jo
hlt
shll
sbb
nop
testl
loopne
loop
or
pop
shl
mov
mov
ss
jno
repnz
push
cmpsb
cmp
test
cmp
push
inc
push
xor
xchg
pushl
out
imul
clc
inc
add
lods
dec
inc
push
dec
test
imul
xor
add
iret
sete
orl
decl
xchg
vxorps
fldt
pop
orl
cwtl
sbb
sbb
and
cmp
out
mov
add
jnp
fsubl
push
sbb
push
push
xor
shlb
mov
test
mov
rcl
jae
mov
add
std
test
in
shll
and
or
sub
and
adc
das
mov
mov
push
or
cltd
mov
xlat
push
decb
int3
or
cmp
arpl
push
jb
stc
fwait
mov
pop
xor
mov
cli
push
decl
cmpsl
incl
push
adc
pop
adc
fs
nop
lds
and
adc
jl
jmp
jmp
movl
decl
mov
xor
dec
sub
std
lcall
mov
das
mov
mov
arpl
faddl
jo
push
imul
test
push
jmp
pop
mov
add
push
pop
ja
test
mov
sub
pop
inc
mov
xor
call
sub
testl
xchg
xor
test
xlat
mov
adc
and
or
xchg
dec
mov
mov
mov
add
test
sahf
lahf
xor
pushf
nop
jge
xchg
jbe
scas
xchg
fsubrs
mov
movsb
sub
ficomps
es
out
mov
cs
jp
add
dec
fwait
call
dec
xchg
fdivl
lahf
jge
xchg
pop
push
sahf
mov
int3
pop
mov
and
call
xlat
cwtl
xchg
pop
stos
dec
jbe
cmpsb
inc
jbe
das
add
or
ror
or
nop
inc
and
or
lock
jbe
inc
jae
pop
decl
mov
lret
push
stos
jecxz
xchg
test
push
js
lcall
mov
dec
sub
or
in
mov
and
xlat
xchg
fnstenv
pushf
sub
sbb
cltd
cmpsb
into
fwait
inc
mov
jmp
add
mov
cmp
js
sub
dec
fcompl
outsb
jbe
test
xor
sub
xorl
test
insl
jmp
test
lahf
decl
jns
xor
add
arpl
xchg
sub
jmp
jecxz
pop
lcall
xchg
push
mov
outsl
test
mov
movsb
shrl
cmc
push
fstl
pop
and
sar
cld
ret
stos
xor
push
insb
negl
mov
sahf
or
daa
pushl
mov
mov
pop
mov
test
dec
add
cmpsl
test
mov
and
aad
dec
xor
jmp
je
adc
mov
cmp
fidivl
call
pop
in
les
cmp
dec
adc
lea
inc
dec
notl
mov
lret
out
jmp
rorb
add
mov
sub
cmp
fnstsw
pop
lods
jmp
inc
imul
sub
or
mov
imul
mov
ret
add
xor
pop
jnp
add
sar
inc
adc
fwait
jg
mov
jb
jns
std
jge
push
cmp
leave
jbe
push
mov
arpl
iret
jnp
mov
call
nop
scas
aaa
inc
shll
dec
fimull
leave
sahf
and
pop
call
ds
mov
sub
push
dec
jns
cmp
divl
in
movsb
xor
pop
jge
cmc
test
in
mov
movsb
xor
fildl
call
sbb
adc
int3
sbb
loope
cld
incl
adc
dec
jmp
jecxz
inc
pop
mov
iret
sbb
inc
inc
or
add
nop
ljmp
cmpsb
int
icebp
xor
and
in
repnz
ljmp
cmp
or
cmp
xor
pushf
mov
sub
jecxz
addr16
inc
ljmp
mov
mov
pop
cmp
imul
jne
xchg
xor
outsb
cwtl
cli
jle
jmp
mov
mov
mov
and
xor
loop
lcall
fwait
cmp
aaa
bound
add
mov
cmp
pusha
arpl
imul
lds
inc
decl
jg
pop
lods
int3
add
ljmp
sbb
jge
dec
scas
lret
adc
dec
push
and
fwait
mov
sub
sahf
mov
and
sbb
call
scas
mov
jne
inc
pop
mov
xchg
fldcw
inc
add
push
mov
pop
pushl
jb
mov
pop
scas
jge
push
sub
insb
fistpl
lcall
dec
sbb
out
cli
lret
push
stos
mov
sbb
out
cmp
out
sbb
mov
adc
out
pushl
inc
movsl
pushl
cwtl
imul
mov
or
xor
cmp
mov
clc
loop
jns
xor
js
sbb
cmc
outsl
push
sub
lcall
addr16
mov
push
je
fcmovb
mov
push
cwtl
mov
imul
and
imul
sbb
mov
fwait
stos
je
ss
cmpsl
add
and
xor
sub
mov
xor
mov
imul
or
lret
sbb
in
or
pop
or
dec
push
cld
fwait
fs
adc
mov
or
pop
xchg
mov
fucomip
mov
lds
fldcw
mov
push
push
adc
lods
cmpsb
inc
sbb
adc
adc
icebp
adc
pushf
int3
xchg
jb
xchg
je
ljmp
sub
shll
add
fisttpll
js
sbb
jmp
mov
js
not
xor
adc
add
xor
rcl
lret
je
ret
movsb
filds
mov
aad
mov
mov
data16
cmp
add
and
sbb
out
repz
sti
xchg
cmp
inc
xor
xchg
scas
or
outsb
test
sbb
mov
rcrl
or
pop
notl
mov
push
outsb
mov
decl
mov
lret
imul
inc
dec
mov
jmp
jmp
jnp
gs
adc
push
int3
sbbb
lods
jge
insb
or
loopne
pop
mov
or
fmull
sub
cmpxchg
and
lock
loope
incl
cmpsb
icebp
call
cwtl
aas
jmp
jbe
dec
lret
add
repnz
jp
test
mov
jg
lods
pushf
push
inc
rcrb
pop
mov
push
jbe
push
adc
mov
cmp
test
clc
adc
xor
mov
mov
and
jg
jnp
jmp
in
or
push
jne
lret
adc
mov
std
popa
loop
push
dec
xor
scas
outsl
mov
notl
loopne
pop
push
sbb
je
or
mov
push
nop
lcall
sbb
inc
jb
scas
dec
pop
push
les
pop
imul
mov
in
lret
mov
mov
popl
adc
fistpl
pop
sbb
outsl
nop
repnz
lods
xor
out
inc
jbe
dec
fdivs
mov
loopne
mov
aas
cmp
scas
loope
das
insb
cli
icebp
call
scas
std
jl
in
incl
test
gs
ljmp
aaa
stos
adc
cwtl
push
pop
pushf
outsl
cmp
fmull
mov
sarb
mov
repnz
jnp
push
push
and
add
sbb
call
insl
leave
mov
cmpsl
and
mov
sbb
lods
pop
sbb
jbe
and
inc
and
ja
fs
orl
fidivs
xor
je
push
aaa
rclb
and
pop
jl
cmp
outsl
nop
in
xor
rcrb
lret
pop
mov
cmc
andl
jl
jl
ljmp
push
lret
push
arpl
mov
in
repz
mov
neg
lcall
sub
and
mov
mov
xchg
in
mov
sti
or
dec
or
pop
cmp
ret
incl
inc
jnp
ljmp
or
xchg
and
xorl
mov
sbb
test
mov
cmp
add
jecxz
mov
mov
adc
inc
outsl
stc
add
xor
scas
mov
out
je
jbe
leave
cmp
jge
pop
mov
mov
jl
jg
pop
dec
or
nop
sub
sbb
cmp
mov
push
lea
xchg
outsl
xchg
inc
xchg
add
call
addr16
push
dec
bound
jae
fildll
int3
aaa
push
pop
fisttpll
pop
mov
lret
in
mov
xor
int
clc
xor
or
jae
hlt
inc
inc
adc
push
popa
push
rorl
mov
out
and
leave
pop
idivb
dec
and
mov
hlt
pop
push
mov
test
outsl
add
insl
lahf
sbb
call
mov
aaa
decl
push
inc
sub
pop
f2xm1
pop
or
call
dec
shrl
push
ja
push
out
es
rcll
ja
cmp
sti
addr16
notl
test
lds
movsb
push
mov
les
es
inc
jg
incl
xchg
jb
incl
fldt
lock
or
les
push
mov
in
neg
sub
gs
cli
out
fdivs
dec
sti
xchg
xor
int
lea
test
scas
inc
test
lock
xor
jo
incl
adc
shll
mov
cmpsl
cmp
xor
sbb
sahf
cli
ja
mov
or
or
jbe
cmp
add
sbb
out
clc
fcos
and
lret
sbb
mov
sbb
sti
test
cltd
lods
loope
push
aam
incl
jmp
xchg
adc
pushl
and
sub
lcall
dec
cld
mov
andb
pop
add
sbb
cmp
mov
cmp
cmp
xlat
call
inc
jmp
jmp
les
jl
ficompl
adc
jns
xor
cmpsl
or
pop
mov
idivl
out
add
test
lahf
cmp
popa
incl
pop
ret
jecxz
push
jmp
fidivl
inc
es
xor
jmp
xor
outsl
jmp
push
arpl
inc
notb
mov
cmp
mov
mov
mov
cmc
aad
mov
pop
mov
orl
and
mov
and
push
out
clc
inc
mov
add
jg
jb
mov
fsubrl
cmp
clc
mov
inc
loope
adc
aad
pusha
xchg
add
cmp
push
imul
fcom
and
mov
xchg
or
adc
jl
outsl
std
pop
ds
or
or
ffree
push
sub
inc
stc
out
mov
lea
enter
inc
call
xchg
pusha
mov
jge
js
test
mov
xor
adc
ret
rcl
xchg
in
cmpsb
mov
mov
dec
mov
and
push
push
call
mov
xor
and
jno
fisubs
sbb
jl
dec
mov
cli
pusha
nop
jle
dec
orl
cltd
ljmp
pop
sti
jns
stc
je
shlb
addl
push
jmp
std
sub
mov
fists
ja
mov
ja
dec
push
xchg
cmp
sar
dec
aas
and
push
es
inc
jbe
dec
sbb
int3
sub
xchg
inc
or
lods
test
out
ljmp
in
imul
jmp
roll
mov
aam
push
sbb
pop
push
mov
mov
pop
fcmovne
es
ficoms
scas
test
pop
inc
cmp
push
cmc
sub
add
jbe
mov
lret
in
sbb
dec
es
sbb
daa
xor
or
popa
lods
and
das
jmp
arpl
addr16
std
test
cld
andl
incl
add
xchg
add
ljmp
mov
push
call
pop
push
divb
lds
icebp
mov
pop
ja
int
test
push
lcall
test
es
nop
jbe
ds
sbb
xlat
xor
jns
lcall
dec
xchg
push
jnp
into
lcall
adc
rorl
stos
jg
enter
dec
cld
lret
jns
scas
jmp
jle
and
jmp
mov
int
not
sub
jecxz
decb
cs
adc
and
and
sti
ja
popa
nop
decl
movsb
je
or
pop
stc
cmp
adc
pop
inc
push
mov
pop
call
adc
adc
dec
lds
and
fwait
and
leave
incl
mov
jl
movsl
mov
div
jecxz
in
cmp
mov
xor
call
data16
sub
dec
out
or
jnp
negb
add
fmull
and
ja
or
jne
push
lods
pop
jl
xlat
mov
add
in
mov
arpl
cld
sub
adc
cmc
negl
mov
mov
das
mov
dec
mov
incl
jmp
or
or
jno
push
or
in
pop
out
in
xchg
jns
lods
mov
movsb
mov
ljmp
std
sub
fisttps
lock
jbe
sbb
fsts
lea
out
fidivl
ja
and
xlat
stos
fbstp
xchg
adc
repnz
sbb
gs
shlb
lock
mov
popf
jmp
add
xchg
xor
sar
test
call
test
mov
adc
push
push
and
push
xorl
in
jmp
sbb
jecxz
int
fadd
iret
adc
and
in
fiaddl
mov
mov
cmc
das
cld
aaa
pushl
xchg
clc
mull
mov
pop
push
jne
ja
outsb
pop
adc
cmp
jmp
sbb
jmp
add
sub
push
subl
iret
xor
imul
xchg
jecxz
das
jbe
pop
pop
mov
sbb
pop
add
add
imul
adc
arpl
add
or
cmc
xchg
push
inc
stos
inc
decl
sub
inc
popa
dec
sub
sbb
sbb
xor
ret
lret
push
sbb
pusha
sub
mov
stc
insb
out
push
aad
fimuls
pop
xor
sub
call
xchg
popf
ja
imul
cmp
ds
push
inc
mov
jmp
jmp
pop
push
lret
xchg
or
inc
add
jle
mov
sub
adc
fisttpl
lea
or
fsubl
pop
int3
lcall
push
mov
dec
call
adc
test
sub
jmp
ret
sbb
daa
jae
bound
pop
loop
jl
fwait
call
out
sub
add
cwtl
pop
inc
xchg
mov
dec
test
andb
xor
dec
or
mov
leave
push
mov
pushl
es
inc
push
mov
sub
loope
clc
xlat
test
addr16
aad
push
jb
lret
call
rorb
divl
sbb
testl
sub
jbe
inc
sbb
adc
ljmp
inc
negl
or
mov
fcmovu
repz
and
scas
adc
iret
ret
mov
cmp
sbb
pop
lock
pop
push
sub
mov
bound
das
and
cs
sti
jg
out
mov
clc
out
mov
mov
lret
sbb
sahf
cmp
ss
out
hlt
call
push
out
sub
fwait
xchg
fldcw
mov
sbb
out
lock
in
call
add
dec
aam
imul
cltd
mov
cmp
and
xchg
cmpb
xchg
dec
jecxz
fadds
mov
clc
fwait
xor
aad
sbb
cmp
dec
shl
scas
test
add
jbe
mov
ja
in
push
rcll
jmp
imul
aas
decl
jle
dec
mov
xchg
mov
bnd
insl
jae
in
leave
call
sub
movsl
out
xor
cmc
jo
push
sbb
call
hlt
out
push
mov
jb
test
test
xor
into
mov
dec
sbb
mov
sar
movsb
js
mov
sub
gs
jnp
sbb
enter
cmp
xchg
push
and
adc
rcrl
mov
push
dec
xchg
hlt
and
xchg
sbb
clc
mov
mov
ja
or
add
sar
sbb
int3
fnsave
icebp
add
and
sub
or
inc
pop
jbe
mov
cmp
sahf
or
inc
scas
dec
push
lcall
mov
or
lods
push
lcall
add
mov
fnsave
es
fsts
inc
je
shlb
inc
movsl
mov
imul
in
cwtl
or
xchg
pop
push
push
loopne
push
adc
dec
and
fnstsw
jb
and
enter
inc
add
sti
xchg
decl
cmpsb
jbe
cld
xor
cmpsl
push
push
es
xor
or
inc
jp
ljmp
loope
sar
sbb
xchg
cmp
jo
faddp
adc
data16
push
or
aaa
adc
cmc
mov
mov
aad
pop
stos
xor
decl
fsubs
mov
call
roll
ja
jo
push
xchg
jmp
adc
add
push
push
pusha
or
mov
xor
xchg
pop
out
inc
mov
dec
jmp
imul
insb
inc
adc
inc
ds
adc
inc
lods
rol
xor
loopne
xchg
imulb
scas
ds
cltd
in
mov
aad
fmuls
call
xor
mov
enter
insb
inc
outsb
jge
lcall
jmp
out
jp
pop
inc
xlat
insb
aad
imul
je
jo
lret
inc
mov
daa
xchg
sbb
jbe
sarb
jb
cli
stc
out
pop
mov
cmp
ss
dec
xchg
pop
adc
adc
out
fistl
pop
lcall
lods
int
call
xchg
ret
sbb
cltd
ja
cmp
aad
dec
incl
jg
adc
push
cld
sub
or
or
jg
jbe
cvtps2pd
or
xor
and
pop
and
and
movsb
mov
adc
notb
test
lret
cmp
decl
cmp
lcall
dec
fs
fsubs
call
mov
mov
mov
add
inc
cltd
pop
sub
fstpt
mov
lods
cmp
fsubrl
push
aaa
lret
or
push
sbb
sbb
rorb
adc
idiv
mov
sahf
push
lods
incl
or
jge
pop
lock
jns
out
jo
jecxz
xor
repz
clc
inc
icebp
add
inc
test
mov
fldz
xchg
cmp
dec
sub
cmc
outsb
and
xlat
sbb
mov
das
jecxz
fdivrl
rcrl
test
std
sbb
jbe
adc
sbb
ljmp
cmpsl
pop
pop
fildl
add
and
dec
xchg
cmp
scas
xchg
push
popa
dec
fiadds
jg
sub
adc
xchg
xor
jns
ror
dec
js
lods
dec
inc
push
or
jle
add
rcl
mov
jmp
mov
divb
in
out
add
sub
bound
dec
popf
nop
je
inc
sahf
push
out
pop
sbb
mov
cmpsb
out
mov
push
mov
adc
mov
cld
add
iret
lcall
adc
test
sar
mov
mov
mov
decl
push
fmul
pop
mov
mov
push
and
mov
test
pop
outsb
or
cmp
mov
jnp
into
xor
enter
stc
xchg
lcall
cmpsl
xchg
flds
decl
xchg
cwtl
pushl
addr16
or
in
sbbb
sbb
loop
decl
or
push
inc
out
les
xor
add
clc
mov
mov
add
pop
mov
adc
mov
sub
std
mov
mov
mov
adc
push
sub
xlat
mov
pusha
sub
mov
jmp
xor
aad
out
in
sbb
jp
lods
adc
push
aam
lcall
sbb
pusha
or
cmp
jl
xor
insl
sbb
mov
movsb
xchg
incl
dec
jne
negl
loop
stos
xchg
add
jecxz
xchg
jle
sbb
das
lcall
dec
fnstsw
imul
lods
add
cmp
aas
icebp
int
jae
jecxz
mull
sahf
dec
inc
add
ret
push
xor
jg
mov
incl
pop
cmp
sbb
mov
repz
jg
xorb
jl
lock
mov
or
daa
mov
je
or
incl
lds
mov
loope
lea
clc
js
push
push
mov
jb
addb
sub
push
mov
sar
iret
add
adc
inc
and
out
shll
jo
sub
jno
and
cmpsb
push
and
out
cs
test
int
mov
or
push
hlt
mov
inc
das
adc
mov
sub
movsl
push
insl
adc
loop
or
jo
mov
leave
jbe
movsb
push
add
mov
cmp
popa
aaa
or
stos
dec
and
cmp
mov
sahf
lock
sub
mov
imul
mov
jne
jmp
sub
in
inc
outsb
shrb
out
xlat
inc
nop
inc
cltd
mov
add
repnz
lcall
movsl
lret
mov
and
or
scas
push
xor
xchg
adc
xor
mov
popf
or
sub
sar
jecxz
sarl
jle
lcall
xor
lahf
out
xorl
mov
cwtl
inc
push
mov
sbb
and
or
mov
fstps
cmpsl
les
stos
sbb
xor
aam
fs
in
jle
pop
mov
mov
mov
rolb
add
xchg
jge
repz
jle
addl
bnd
movsl
xchg
fsubs
push
pusha
cmpsl
nop
lcall
push
cmp
inc
mov
mov
jmp
xchg
add
out
rclb
js
and
cwtl
fimull
mov
aaa
mov
std
pop
mulb
and
push
loope
jle
pushl
fisttps
inc
jb
xchg
push
call
cmpsl
mov
lock
mov
mov
das
add
out
dec
xlat
addr16
ss
and
cltd
ja
dec
shlb
int3
or
mov
fistps
dec
jnp
es
jg
sub
ret
loopne
hlt
frstor
add
mov
ljmp
inc
xorl
aas
sub
ds
mov
dec
mov
or
add
inc
call
das
cmp
sub
insb
jb
shrl
cmp
stc
push
mov
arpl
sar
jbe
jle
fwait
outsb
and
inc
decl
dec
insb
mov
jp
ja
jl
push
or
imul
cmp
cmp
repnz
mov
imull
fldenv
jmp
mov
gs
inc
mov
faddp
imul
aad
sbb
sub
fisttps
repz
push
mov
xchg
fsubs
mov
lds
aaa
sbb
sub
roll
inc
and
jne
inc
iret
mov
cmp
adc
or
fiaddl
aas
xchg
xor
mov
push
incl
bnd
lcall
data16
call
loope
mulb
add
sub
mov
dec
cmpsb
sti
sbb
push
decl
stc
out
add
cs
dec
pop
adc
bnd
loopne
ret
js
mov
mov
pop
xchg
pop
in
jp
lcall
das
xor
orl
lea
mov
lret
adc
sub
in
sbb
ja
mov
adc
xchg
fmull
lock
lcall
xchg
aaa
ds
lods
scas
push
jnp
push
inc
decl
mov
pop
sbb
sarb
xchg
mov
std
jmp
add
es
aaa
jo,pt
out
mov
add
shl
or
fsubrs
pusha
sub
cmpsl
pushl
mov
cld
push
addr16
scas
add
cmp
mov
fld
sahf
mov
mov
lcall
xor
add
sbb
mov
mov
insl
xor
pop
push
aad
mov
fwait
je
int3
sub
jne
sub
js
dec
fldt
popa
testl
or
std
cli
add
call
push
push
je
xor
leave
xor
mov
and
pushl
and
fbstp
adc
cmpsb
invd
in
xchg
and
sbb
and
push
pop
pusha
mov
dec
mov
call
lcall
xor
enter
stos
mov
inc
divl
je
or
cld
mov
xor
mov
in
cltd
shll
dec
jne
jb
jo
loop
sbb
lods
ja
nop
test
or
outsl
xchg
jne
mov
shll
xor
pop
pop
pop
ljmp
mov
pop
rcrb
aad
mov
iret
into
cs
in
inc
add
ja
push
pop
inc
jae
adc
sub
xor
xlat
mov
mov
test
imul
xchg
xor
ret
adc
std
sbb
sub
xor
ljmp
aaa
add
or
aaa
adc
add
std
loopne
hlt
xlat
mov
fstpt
clc
dec
add
scas
or
inc
andb
lea
mov
std
mov
dec
sub
push
xor
add
xor
jp
incb
xchg
imul
cmp
pop
cmp
adc
push
int3
in
lret
imul
push
xor
cltd
and
loope
sub
adc
cmp
adc
ljmp
icebp
aad
leave
scas
hlt
pop
mov
push
dec
jb
and
lcall
or
imul
mov
jno
jl
cmp
mov
mov
test
stos
push
je
mov
pop
div
mov
ret
addr16
xor
roll
or
xor
sti
clc
xchg
mov
push
clc
bound
push
andl
stos
lret
lods
out
scas
outsb
rorb
mov
and
or
lret
inc
decl
call
into
call
inc
jl
es
or
lcall
and
mov
jge
ljmp
xlat
fcoml
std
sbb
out
aad
mov
int
test
cmpsb
xor
loope
push
incl
push
cs
in
loop
or
xchg
dec
add
ljmp
arpl
xlat
popf
cmp
hlt
cmp
jnp
insb
mov
incl
test
sbb
mov
lods
mov
xor
mov
xor
test
mov
jnp
aam
pop
jg
xchg
add
and
cli
lret
test
aam
lret
negb
arpl
jecxz
loop
outsb
es
nop
mov
sbb
enter
mov
pop
repz
jnp
fbld
mov
pushl
cli
and
pop
stos
pop
pushl
lahf
mov
mov
push
jnp
mov
pop
js
movsb
psraw
out
sti
aaa
mov
mov
sbb
lcall
pushf
cmp
pushl
cmp
xlat
bound
insl
sub
in
fcmovb
divl
pop
stc
sbb
push
imul
jmp
call
outsb
int3
je
in
pushl
pop
mov
ret
shll
xor
mov
jmp
xchg
fidivl
add
loop
scas
sahf
jmp
mov
ss
loop
sub
sbb
mov
jg
mov
or
je
cmpb
cmp
xor
and
cmp
mov
jl
clc
outsb
jnp
sti
popf
setp
aas
jns
fmull
mov
addr16
clc
xor
lods
cli
test
lods
mov
out
les
jae
jnp
and
fnstcw
pop
stos
iret
and
jno
sahf
pushl
cmp
cmp
je
lds
and
jmp
decb
add
and
sti
cmp
cmpsl
jp
inc
ljmp
mov
push
mov
call
xchg
into
push
jp
mov
xchg
stos
sub
ljmp
jo
pop
aam
idiv
clc
ja
adc
pusha
add
jae
stc
mov
addl
cmpsb
mov
popf
jmp
shl
or
gs
mov
add
aam
lcall
iret
out
cmpsb
shlb
aad
adc
xor
adc
xchg
imul
add
mov
mov
push
and
ljmp
test
repz
lcall
push
mov
pop
arpl
jne
sub
mov
lock
sbb
lock
lea
push
pop
push
xchg
sbb
mov
pop
enter
aaa
icebp
mov
cmpl
mov
divb
ret
imul
jp
lods
jle
popa
cmp
mov
mov
fimuls
sar
or
out
mov
adc
out
push
ljmp
mov
mov
mov
ret
mov
mull
mov
aaa
je
or
sbb
fmull
in
adc
cmpsl
xor
jae
push
mov
xor
ljmp
cltd
stos
cmp
xor
sub
fbld
fdivs
adc
or
jae
inc
push
decl
xchg
add
idivl
xchg
add
adc
sahf
mov
mov
test
pusha
dec
mov
adc
lret
inc
xchg
adc
cmp
lahf
cmp
mov
cmp
push
call
incl
push
data16
lcall
iret
dec
fildl
pop
cmp
out
test
push
out
cmpsl
add
ljmp
xor
sbb
repz
ficomps
cmc
sub
repnz
inc
add
lcall
add
mov
outsb
push
pusha
jmp
pop
into
stc
fists
jne
xor
push
sti
rcll
dec
sahf
pop
jmp
pop
inc
add
in
mov
jne
imul
inc
sub
inc
push
mov
mov
nop
dec
cwtl
add
push
push
push
mov
cld
inc
insl
call
stc
insb
incl
jecxz
jbe
dec
dec
sbb
insb
or
ss
or
mov
pop
sbb
push
je
jbe
inc
popf
and
out
aam
and
sub
xchg
xor
mov
or
or
inc
cmp
adc
fistpll
cwtl
lods
push
ljmp
andl
lock
push
stos
testl
cli
mov
pop
cmc
insb
push
push
sbb
add
and
adc
cmp
sbb
xor
jns
mov
xchg
decl
int
prefetch
mov
testb
inc
inc
ret
test
xor
inc
lahf
jne
sbb
shll
je
fildll
pop
aaa
xchg
test
loop
xor
fldenv
aad
enter
ss
std
iret
popa
mov
and
cmp
outsl
test
pop
in
xchg
aaa
inc
dec
lcall
cmp
incl
add
lds
jle
lock
xor
sub
mov
push
testl
adc
ljmp
int3
les
insb
cmp
mov
in
test
push
dec
jle
aam
orb
incl
into
popa
fcos
pop
hlt
sub
les
test
dec
adc
xchg
sbbb
jae
xchg
and
test
sub
out
cwtl
shrb
and
push
enter
cmp
ja
xor
inc
stos
hlt
and
add
jl
jo
mov
shl
ret
and
aaa
ljmp
push
mov
shrl
mov
daa
lcall
dec
xchg
js
mov
add
enter
fs
dec
fisubrl
jecxz
adc
jno
inc
stos
lds
cld
hlt
imul
lcall
and
mov
movsb
call
fsubr
mov
push
mov
and
outsb
popa
mov
dec
jmp
aam
add
and
mov
int
push
adc
shll
cmp
mov
jae
daa
pop
test
ljmp
scas
data16
ja
in
and
fdivs
fs
pop
jl
movsl
sub
mov
adc
mov
ds
xchg
hlt
jbe
fdiv
mov
jg
push
int
push
in
add
sbb
or
xchg
imul
bound
jns
icebp
push
mov
test
sbb
mov
mov
xchg
jo
push
ret
mov
outsb
in
fwait
sub
cmp
imul
jnp
mov
push
adc
or
and
fistpl
jns
and
mov
sar
and
out
leave
jno
sbb
add
jns
cwtl
xor
and
mov
fwait
test
retw
mov
pusha
and
xorl
popa
sti
or
or
sbb
divl
test
push
cmpsl
and
imul
sbb
xor
test
je
pop
loop
push
ficompl
xorl
inc
pushl
or
idivl
arpl
aas
mov
pop
add
and
dec
cmp
int3
fsubrs
enter
jge
ja
inc
and
cs
mov
jmp
scas
inc
std
ljmp
or
jo
and
mov
sbb
imull
sti
push
mov
sbb
xorl
pop
outsb
inc
dec
out
imul
and
lods
xor
xchg
ja
nopl
ret
lea
inc
mov
sbb
cmp
ret
jmp
jno
je
pop
sub
or
mov
mov
popa
xor
xlat
xor
ljmp
jmp
jmp
push
ret
cmp
xor
mov
repnz
loop
decl
imul
jle
cmp
not
lods
sub
xor
pop
or
aad
xor
call
arpl
loope
jge
decl
je
push
sbb
pop
inc
jbe
out
mov
sbb
sbb
cmpsl
lcall
sub
mov
arpl
lods
mov
int3
pop
jmp
sub
xor
mov
loopne
and
jo
rol
or
cld
mov
out
decl
pop
loopne
fimull
lcall
scas
add
sbb
aam
cmc
and
mov
mov
int
adc
neg
int3
scas
mov
mov
adc
jbe
lahf
aam
addb
idivl
dec
pop
xor
xchg
xchg
add
dec
sub
push
in
scas
mov
pusha
aaa
or
push
xchg
mov
or
and
pop
stc
ret
ja
arpl
movsl
mov
or
mov
jns
push
push
push
or
jmp
cmpsb
cmp
jmp
pop
dec
daa
ja
xchg
call
mov
jno
outsb
mov
mov
imul
test
scas
ret
lret
pop
dec
movsb
pop
pop
add
mov
jmp
mov
xor
jno
sbb
repnz
push
cs
testb
fiadds
jne
scas
test
push
in
scas
pop
clc
ficompl
sbb
jg
adc
pop
scas
xlat
je
inc
dec
mov
test
push
faddl
mov
stc
outsb
or
cmp
or
mov
insl
xor
jns
jmp
je
xor
jbe
mov
add
ret
stos
scas
fisubl
cmp
cmp
sti
sub
add
push
push
inc
sbb
lcall
or
aad
inc
pop
ljmp
roll
ljmp
std
aaa
call
ja
xchg
out
sub
incl
push
fcmove
out
and
dec
lcall
sub
out
sub
mov
in
xor
hlt
xor
fisubs
insl
mov
jge
icebp
cwtl
dec
jbe
mov
insl
sbb
lcall
and
xor
xchg
cwtl
pop
jmp
adc
jg
mov
dec
dec
aam
xchg
outsb
pop
leave
loop
aam
adc
sbb
sbb
test
push
cld
shlb
and
pop
pushl
or
repnz
or
mov
push
popa
jae
jmp
sub
call
mov
aaa
notl
lods
pop
mov
sub
mov
push
addr16
push
pop
xchg
xchg
fwait
js
incl
inc
inc
inc
sti
sbb
movsl
decl
loope
cmc
bound
or
mov
aam
shll
shl
lea
cld
add
jle
jmp
je
dec
cltd
pushl
std
push
dec
test
jmp
inc
pop
outsb
jle
sub
je
cmp
pushl
add
mov
gs
cld
mov
test
daa
es
imul
xor
fisttpl
ljmp
mov
mov
fwait
hlt
mov
into
sbb
lcall
pop
and
lret
das
mov
pop
nop
mov
mov
aaa
adc
ljmp
and
push
add
test
lcall
fnstcw
mov
sbb
fs
mov
int3
enter
bound
mov
cwtl
push
pusha
mov
sub
jmp
daa
fbld
notl
std
jnp
jmp
imull
jbe
sbb
inc
or
call
ret
sub
pop
aam
js
stc
lds
cld
lret
shl
jmp
adc
mov
xchg
inc
imul
pop
and
test
roll
popa
xlat
xchg
sub
lock
sti
add
in
or
adc
in
cmp
sub
in
into
cmp
mov
and
std
notl
test
add
dec
dec
and
cltd
in
jmp
push
cmp
mov
xchg
add
cld
mov
addr16
and
pop
call
ss
mov
fnstcw
in
cmpsb
pop
test
jl
decl
push
hlt
leave
sti
mov
js
jp
jge
mov
lret
mov
mov
adc
cld
divl
aad
add
das
inc
and
int
insb
xor
jmp
xor
stc
ss
int3
jge
add
push
cmpl
flds
push
mov
je
ret
fcoms
out
nop
incb
mov
mov
xor
mov
out
jo
call
mov
pop
xor
xchg
mov
push
fwait
call
sub
jge
mov
pop
js
cmp
add
sarb
and
fs
mov
movsl
xchg
pusha
or
cli
jecxz
not
sub
adc
out
loop
and
inc
cltd
lds
movsl
mov
push
mov
jmp
or
xor
scas
push
sub
push
lcall
mov
sub
repz
mov
scas
pop
or
lock
lret
arpl
add
jb
push
inc
out
jmp
sbb
fiaddl
push
mull
call
sub
jle
imul
pop
pop
or
dec
mov
stos
sti
jno
fdivrl
cmp
mov
pushl
stc
push
loope
out
dec
sub
pop
mov
inc
mov
jns
mov
stc
idivl
mov
adc
leave
push
xchg
xlat
sbb
addr16
jge
iret
sbb
mov
jmp
aaa
les
jge
mov
cwtl
sbb
shr
std
mov
pop
js
mov
cmpsb
add
sub
inc
push
mov
mov
les
sbb
pop
addr16
xor
mov
lcall
inc
je
xor
mov
jne
ds
sbb
bound
test
and
dec
dec
cmp
pop
loopne
sub
or
jae
sub
push
jmp
jmp
cmp
les
mov
jno
sbb
and
push
pop
js
jnp
ljmp
call
addr16
lcall
inc
aas
ja
xchg
dec
pop
xchg
sbb
ja
fists
lcall
mov
lret
adc
cwtl
sarl
add
cmp
clc
mov
xor
andb
push
pop
xchg
or
xor
cmp
pop
sahf
cmp
mov
in
psubw
mov
scas
cld
and
test
into
dec
pop
mov
or
mov
test
push
std
xchg
cltd
add
test
push
loop
lds
jae
mov
inc
divl
int
lods
mov
mov
sbb
dec
mov
ret
out
lods
push
hlt
lahf
mov
or
jnp
sbb
mov
aam
cmp
adc
add
std
out
inc
mov
push
and
push
mov
push
cmc
push
shlb
add
cld
lahf
jmp
out
pushl
mov
and
add
into
inc
xchg
mov
push
es
out
mov
sbb
xor
std
mov
adc
push
mov
hlt
jnp
aas
or
inc
sahf
inc
mov
leave
adc
repz
and
push
cmp
sbb
inc
add
mov
out
sub
mov
sbb
adc
jg
mov
sti
pop
push
rclb
dec
add
fbstp
xor
and
xchg
mov
std
das
mov
fistl
clc
xchg
cmc
dec
shl
in
inc
mov
imul
inc
out
jbe
add
xchg
stc
sahf
outsb
fdivr
mov
xchg
popa
mov
loope
lahf
sub
or
xchg
popf
je
jmp
sub
xchg
lods
lcall
dec
dec
xor
push
or
push
lods
or
mov
nop
sub
pop
push
testl
and
mov
movsb
push
cwtl
les
cmp
or
aad
sub
add
div
push
adc
lds
xchg
push
push
or
jge
fiaddl
dec
push
notl
out
sbb
and
leave
loope
imul
push
out
bound
sbb
push
sbb
cmpsl
mov
jmp
rorb
or
jne
jae
stos
sub
xor
and
mov
cmp
into
add
mov
lcall
sub
push
shrb
mov
and
cmp
jmp
mov
jp
pop
popa
dec
mov
in
insb
or
call
mov
negl
mov
shll
pop
rcrb
cmp
fdivrl
xchg
mov
sub
cmp
test
push
push
cmp
sahf
aad
adc
mov
push
jne
vmptrst
outsb
or
push
dec
or
loop
mov
mov
and
push
sub
cmp
and
pop
roll
imul
xlat
jns
notb
ss
pop
daa
inc
jecxz
aad
cld
jne
xor
mov
pop
mov
dec
jp
imulb
std
bound
lods
cmp
vmwrite
idiv
or
push
mov
xor
xchg
jae
xor
pop
pusha
cmpsb
arpl
and
or
push
pop
decb
inc
in
push
sbb
lcall
shll
je
xchg
lods
and
call
mov
mov
jae
mov
hlt
call
ret
sti
ljmp
inc
pop
inc
shl
xlat
sbb
adc
inc
aad
push
inc
and
push
gs
fadds
cmc
mov
inc
push
stc
enter
loopne
sbb
loope
sub
mov
ficomps
xor
out
lea
js
add
add
mov
jl
enter
sti
arpl
mov
testl
test
or
leave
jp
and
mov
jb
and
lods
std
mov
adc
int
xorl
dec
dec
psubusw
arpl
cs
aas
popf
jmp
and
sbb
push
sub
xor
sbb
insb
stos
cmp
mov
sub
testl
jmp
pop
dec
and
lcall
std
inc
orb
fdivr
fists
ss
decl
jl
sar
add
sub
pushf
fs
daa
cltd
or
or
lcall
mov
push
adc
aad
sbb
lds
outsb
call
xchg
push
cwtl
xor
sbb
push
gs
sti
or
decb
daa
sub
or
jae
sbb
pop
push
std
lods
fisttpll
sbb
cmp
mov
push
jbe
das
imul
xchg
shl
pop
imul
int
ret
std
repz
loop
jge
shlb
repnz
scas
cld
mov
inc
pop
decl
xchg
dec
test
sub
in
movsb
shl
xchg
test
imul
mov
sti
cmp
mov
and
mov
xor
pop
push
int
pop
or
and
sbb
inc
add
add
int
shll
jbe
mov
data16
mov
xor
jmp
jo
xor
inc
seta
addr16
mov
ljmpw
and
mov
jle
sbb
sub
push
mov
cld
movl
or
jbe
cwtl
or
data16
adc
sbb
lock
xchg
test
adc
cmp
and
out
push
out
jne
clc
adc
xchg
xor
les
enter
mov
cmp
adc
xchg
push
sbb
mov
push
loop
outsl
out
jns
movb
ss
aad
ja
sbb
push
int3
aaa
imul
mov
lahf
shlb
jo
sbb
or
lcall
push
bound
and
fwait
cltd
lcall
fwait
sub
pushl
addr16
lret
ds
iret
mov
xchg
cwtl
inc
loop
fdivs
out
jl
dec
and
push
mov
xor
jle
in
add
mov
add
fbld
push
call
out
pop
nop
pop
pop
xchg
lahf
push
sub
adc
mov
cmp
push
std
pop
dec
mov
sub
je
jl
add
ss
incl
test
mov
sbb
aas
jns
cmp
lods
mov
adcl
aam
and
sub
pusha
decl
mov
aas
aam
mov
ja
mov
lds
idiv
mov
roll
push
popa
decl
outsl
rcrl
xchg
fldt
pushf
fidivl
mov
xchg
sbb
in
fsts
test
mov
insb
and
pop
sbb
sti
loope
aas
ud0
sub
xor
mov
mov
in
push
lods
mov
or
lcall
push
test
int
rcrl
sbb
aas
icebp
ss
jmp
xchg
int3
cld
jbe
jbe
cmpsb
testb
cmc
jp
testl
mov
in
or
lods
push
mov
int3
je
in
andb
inc
leave
or
outsb
mov
mov
ja
mov
jno
repnz
jnp
mov
into
mov
outsl
xchg
js
pushl
insb
xor
xchg
test
je
gs
mov
stos
cli
scas
pop
cmpsl
and
popl
jp
incl
ret
dec
cltd
mov
xchg
sbb
sbb
cmpsl
addl
sahf
or
add
leave
pop
mov
mov
mov
xor
sub
daa
or
xchg
pop
mov
dec
cmpsb
movsb
cmp
aas
push
fldt
hlt
popa
rep
add
xor
and
fwait
xor
push
jecxz
lods
pop
movsl
xchg
and
push
mov
or
jmp
leave
fucom
xor
ljmp
je
popf
imulb
sbb
jb
ljmp
scas
sbb
addr16
rorb
sbb
xchg
cmp
adc
mov
mov
jmp
in
and
cmp
data16
jae
mov
jbe
fidivrl
cmp
and
inc
dec
decl
stc
or
call
xchg
xchg
shr
xchg
decl
fiaddl
sbb
testl
insl
and
sti
dec
ljmp
sbb
push
add
je
arpl
out
out
in
add
jg
and
lcall
movsl
mov
into
imul
xchg
fcompl
mov
and
fdivp
shr
sub
ljmp
cs
dec
mov
out
aam
pop
cmp
movsb
mov
jne
std
ljmp
xchg
sahf
push
loope
nop
ret
pop
cs
data16
jl
mov
fildl
test
adc
mov
jo
rcl
loop
adc
pusha
je
in
jge
xchg
nop
mov
insb
out
or
sbb
call
movsb
les
pushl
pop
add
call
xchg
shlb
inc
cli
insb
jge
cltd
push
ret
cld
inc
popf
int
pop
in
pushl
inc
je
bound
cmpl
adc
push
add
scas
sub
jmp
mov
push
ljmp
mov
mov
sub
jmp
or
cmp
xor
xchg
aaa
and
ja
sti
fmul
cmp
push
pop
mov
idiv
cs
sbb
out
cmp
outsl
fisubrs
jmp
mov
je
aad
adc
jbe
scas
or
push
push
sub
enter
mov
xchg
sbb
sahf
mov
int
inc
negl
inc
lret
push
xor
jbe
jl
jmp
nop
jo
enter
fiadds
ja
insb
inc
or
arpl
pushf
add
test
frstor
pop
adc
ljmp
dec
jmp
mov
mov
jo
loope
sbb
cmp
xor
in
out
xchg
fisubl
mov
femms
or
decl
hlt
int
fdivrl
pop
xor
idivl
out
repnz
xchg
addb
jmp
cmp
jg
push
ja
aaa
push
sbb
loope
push
jbe
into
or
mov
pushl
xor
fisubs
mov
mov
push
adc
je
loope
ret
cmpps
push
repz
jne
je
xlat
pop
out
aas
push
pop
in
mov
fdivl
xor
call
dec
xchg
jae
jne
int3
cs
ffree
out
shrl
ds
inc
mov
into
mov
std
in
call
bound
sbb
fs
mov
or
mov
call
dec
js
outsl
inc
pop
lahf
xchg
push
out
xchg
cmp
push
daa
call
sbb
das
xchg
and
xorb
stos
mov
push
mov
loope
fisttps
mov
and
fidivl
lods
sbb
mov
aas
cld
adc
ljmp
es
cmp
arpl
stos
inc
push
cwtl
jbe
jae
mov
push
or
testl
push
jge
jo
push
in
inc
cmc
jbe
lret
js
inc
xor
mov
or
sub
js
dec
enter
xchg
add
daa
stc
jbe
shl
push
addr16
mov
pop
decl
pusha
jg
incl
cmp
lods
sub
adc
incl
add
ljmp
jecxz
fdivs
cmp
mov
std
jecxz
loopne
dec
rol
or
incl
lods
mov
xor
push
pop
popa
mov
out
adc
pop
xor
fstpl
add
fcoms
add
aas
add
or
mov
xchg
dec
lahf
lds
hlt
shl
adc
cmp
sbb
shll
test
movsb
push
ds
xor
or
sub
cmc
cmp
imul
ja
inc
incl
outsl
pop
sbb
jmp
cltd
adc
xor
or
fimuls
test
clc
adc
call
pushf
call
and
mov
mov
xchg
adcb
xchg
push
inc
faddl
into
ficoms
std
dec
repnz
rclb
mov
mov
pop
ds
lock
jne
jge
or
cmp
cmp
inc
ljmp
outsb
xor
pushf
js
insl
mov
rol
xchg
stos
jbe
aas
mov
inc
adc
insb
push
cmpsl
and
inc
jl
sbbb
cmp
lcall
repz
push
mov
shrl
sahf
and
mov
aaa
inc
xchg
stos
lret
outsl
jle
popf
out
jno
stos
mov
mov
call
push
push
jg
lea
incl
mov
inc
out
jb
insl
sti
xchg
mov
aad
dec
mov
clc
lret
js
je
mov
mov
push
jmp
stos
std
ljmp
jnp
inc
pushl
inc
adc
dec
into
xchg
decl
cmp
jbe
cld
xchg
popf
sbb
daa
jmp
lret
jmp
mov
fwait
jmp
decb
leave
and
dec
sub
cmc
and
lcall
gs
inc
fistps
mov
lret
mov
dec
stos
andl
pop
dec
lock
scas
xchg
xchg
test
jmp
mov
out
jno
dec
mov
fs
xchg
pushl
stc
lods
add
cld
xor
addl
pop
popf
call
loop
leave
mov
sbb
insl
adc
insl
or
call
push
cs
jo
inc
push
add
rcrl
std
xchg
mov
push
adc
jmp
push
sbb
pop
std
jl
imull
and
add
pop
jge,pt
cmp
outsb
out
repz
aad
lret
xor
lods
scas
cltd
iret
mov
int
cmp
in
fwait
test
or
out
inc
test
xchg
ret
jns
mov
das
ljmp
sbbl
out
mov
jae
decl
push
push
shll
hlt
std
outsb
aad
jecxz
and
stc
clc
mov
fsubl
inc
or
test
jl
lret
aas
repz
xchg
test
pop
sub
cmpsl
ja
notb
or
imul
ja
rorl
add
sub
aad
ljmp
call
notl
ljmp
jp
ret
inc
lcall
push
push
lcall
fcmovnu
cmpsl
jnp
mov
sbb
cmp
je
dec
push
or
lea
pop
jmp
push
lcall
adc
push
ja
daa
jge
jo
add
ja
in
or
scas
mov
leave
hlt
push
adc
in
push
lcall
xor
jmp
jno
push
jnp
xchg
je
int3
jmp
mov
jbe
sub
and
stc
fcmovbe
dec
sarl
call
iret
rolb
jg
fimuls
adc
ja
mov
roll
and
mov
push
push
mov
dec
jmp
or
mov
push
ljmp
jne,pn
mov
cmpsb
mulb
xchg
jo
or
aad
dec
jnp
pushl
jb
mov
shlb
adc
push
stos
inc
dec
xor
mov
mov
xchg
cmpsl
mov
adc
xor
ds
cmp
lods
add
insl
mov
ss
mov
aaa
sub
dec
sub
inc
outsb
xchg
lcall
cmp
adc
pop
add
mov
call
sub
decl
mov
dec
call
and
divl
xchg
inc
lods
mul
shll
mov
sub
mov
mov
xchg
inc
inc
daa
je
shlb
addr16
movsl
sbb
frstor
mulb
ja
inc
xor
imul
add
add
cld
sub
jle
xchg
sub
cmp
flds
dec
loopne
aam
sti
cld
notl
cli
cmp
or
push
add
mov
inc
jmp
cmp
pop
imul
fs
sbb
repz
add
flds
or
jb
loope
sti
hlt
clc
lret
add
cli
lcall
sbb
push
arpl
cmp
hlt
push
xor
and
inc
xchg
aaa
mov
push
ror
and
dec
mov
inc
stc
inc
xchg
xlat
sahf
mov
adc
mov
and
aad
lods
jns
push
ss
xchg
cmp
xchg
dec
jp
push
xchg
fists
les
mov
sbb
testl
push
push
loope
jbe
dec
fimull
and
gs
jecxz
stc
call
movsl
dec
rorb
mov
push
lcall
jbe
loop
and
out
mov
push
add
js
xchg
pushl
jl
sbb
mov
lods
mov
jmp
leave
jl
adc
test
fsubs
fstpt
sbb
cmpsb
call
cld
cltd
add
xchg
test
mov
or
mov
mov
ret
aad
or
pmaddwd
xor
lahf
pop
int
imul
lods
push
xchg
cmp
mov
in
mov
loopne
add
pop
rcl
push
adc
xchg
ss
mov
icebp
sub
ljmp
mov
psubq
je
xchg
xchg
inc
cmc
xor
sbb
jne
std
mov
bound
les
stc
clc
fwait
lods
or
push
adc
cmp
bnd
aad
fsubs
sbb
gs
push
xchg
loope
adc
push
mov
bound
or
mov
std
xor
enter
adc
mov
mov
outsb
mov
ss
outsb
jo
pop
stos
or
gs
mov
sub
xlat
mov
cmc
push
pushf
push
in
lods
sbb
pop
add
test
test
adc
fcoms
rclb
je
and
lret
insb
lcall
rol
lods
ds
pop
mov
fld
add
ja
jecxz
popw
stos
adc
xchg
addr16
cmp
bound
lea
dec
test
and
dec
cmp
sub
mov
fists
mov
incl
mov
ds
inc
jmp
jne
and
dec
mov
popf
mov
cmpsb
and
push
pop
shrl
or
movsl
xor
jmp
push
lea
int
jo
aam
outsb
loope
sbb
loopne
jne
mov
pop
sbb
cmp
scas
and
xchg
xor
icebp
sub
shlb
cmovp
imul
loop
lret
mov
pop
cwtl
cmc
negl
dec
sti
and
sub
lahf
jo
andl
or
sub
xchg
mov
xchg
pop
std
call
inc
pop
mov
addr16
adc
sbb
pop
jne
imul
and
push
mov
mov
xchg
mov
in
lahf
repnz
sbb
outsb
xor
pop
adc
mov
std
adc
push
lcall
hlt
es
pusha
icebp
jmp
data16
lcall
insl
repnz
mov
pop
xchg
jbe
enter
mov
mov
out
ja
mov
stc
sub
test
cmp
in
add
in
jnp
test
scas
insb
inc
add
and
lds
ljmp
push
push
and
movsl
cmp
xchg
jle
decl
pop
notl
enter
mov
cmp
inc
push
add
xor
outsl
pop
mov
xor
out
js
cs
push
adc
pop
xor
jle
hlt
mov
insb
jmp
mov
test
jo
sbb
jb
lret
filds
sub
mov
mov
ds
testb
jns
out
jo
cmp
sub
inc
js
xor
out
aaa
test
stc
xor
sbb
sub
add
repz
mov
pop
and
sbb
mov
divb
aam
iret
push
ljmp
lods
sub
ret
fwait
adc
es
std
call
int
xchg
dec
std
cmp
clc
sub
mov
aas
ret
add
call
or
sbb
loope
mov
js
push
or
dec
cmp
inc
arpl
call
cmp
cmp
jmp
ret
pop
repz
fidivl
xchg
or
sbb
das
cwtl
stos
insb
ds
gs
or
sahf
jb
test
adc
fidivs
jle
xchg
mov
stc
mov
incl
das
stc
sub
or
mov
out
and
imul
fdivs
sbb
xlat
cwtl
push
and
orb
xchg
pop
int3
inc
fsubs
lods
push
lds
jb
repz
sbb
mov
sbb
lcall
push
ficompl
pmullw
mov
ljmp
adc
adc
repz
pop
adc
cmpsl
jmp
sbb
xlat
push
ret
mov
loopne
int
jp
sub
mov
and
subl
xchg
call
test
jg
lret
lock
xor
inc
mov
jo
lds
scas
fsqrt
addr16
stos
and
add
xchg
pop
mov
xchg
inc
negb
aad
xchg
ret
fidivs
enter
xlat
sbb
pop
pop
fwait
mov
rcrl
xlat
aaa
sbb
std
test
enter
or
lcall
sub
cmp
std
xlat
cmpsb
in
in
imul
mov
ret
mov
out
and
popf
out
fldenv
mov
or
test
mov
push
sbb
mov
stc
inc
lret
subb
inc
add
jp
pop
add
shl
fmuls
ljmp
loop
testb
mov
pop
ljmp
call
sbb
jle
out
inc
fldpi
aaa
sub
dec
movsb
repz
or
mov
rorb
sub
mov
and
shrb
ds
cmpsb
mov
mov
daa
lods
int3
pop
sti
std
mov
sbb
shl
nop
scas
sbb
jl
sub
popa
xchg
jle
ret
and
les
repnz
cmp
jnp
mov
cld
dec
out
or
stos
pop
add
ljmp
jno
inc
ja
jnp
sahf
xchg
loop
xor
jnp
arpl
ret
lret
xchg
bound
and
mov
test
xchg
and
mov
rolb
mull
gs
push
cld
sahf
cmp
ret
adc
mov
mov
cmpsl
pop
popf
pusha
mov
ja
leave
in
ret
mov
out
call
push
jge
adc
dec
mov
decl
xor
decl
outsl
sbb
iret
leave
mov
sar
xchg
or
aad
mov
out
xlat
mov
hlt
cmpsl
adc
dec
and
sti
pop
lock
lret
icebp
iret
ljmp
pop
jle
and
fdivr
leave
dec
lret
in
aas
dec
add
imul
xchg
loop
popa
hlt
icebp
mov
mov
sub
repz
jne
xchg
sti
aad
loop
scas
fimull
cmp
out
sti
and
je
cli
insb
push
jmp
jle
mov
or
mov
lock
add
fbstp
clc
sub
dec
sahf
push
jp
ja
dec
call
js
adc
jmp
and
adc
adc
lea
rcll
and
pushl
or
push
das
mov
leave
jbe
mull
decl
in
cmp
dec
sub
push
mov
sbb
fbstp
xchg
bound
aam
push
std
into
lods
stos
cmp
loope
outsb
sub
aam
mov
std
daa
xorb
cmc
jmp
mov
or
out
mov
or
lods
cmp
sbb
and
cmp
ja
xorb
aas
test
icebp
mov
cld
jo
jl
mov
rcrl
imul
and
xor
loope
sub
sti
xchg
mov
sbbl
xor
mov
test
mov
aam
add
inc
incl
imull
idivb
jbe
dec
xchg
out
cwtl
sub
out
es
or
movsl
lods
hlt
mov
incl
adc
test
scas
es
decl
push
pop
dec
jbe
inc
out
xor
js
xor
stc
xor
cmp
pop
mov
aaa
clc
inc
jb
lret
cmc
lods
dec
hlt
pop
cmp
jnp
xchg
pusha
jle
adc
sub
jl
out
mov
stc
push
aam
shl
push
enter
inc
jmp
ret
int3
aaa
jle
push
cmp
outsb
leave
mov
mov
je
dec
inc
jb
inc
decb
mov
push
push
xchg
call
mov
xchg
mov
xor
aam
push
mov
fwait
arpl
jmp
std
lahf
add
and
mov
icebp
mov
cs
dec
mov
cmp
mov
dec
xchg
rorl
xor
cmp
pop
mov
test
pushl
stos
fsubrp
mov
sbb
aad
mov
loop
sar
adc
out
cmp
and
push
xor
pushl
test
cmp
xlat
jo
scas
jmp
ljmp
in
movsb
inc
sbb
pop
fwait
mov
mov
push
incl
push
cld
dec
pushl
ret
jnp
or
lcall
out
subl
inc
add
xchg
inc
cmp
aam
ljmp
int
loop
ds
aad
sbb
shlb
shll
jae
inc
mov
pop
pop
adc
push
mov
sbb
dec
sub
repnz
cmp
mov
xor
call
sbb
ljmp
or
loope
push
lock
ja
jmp
inc
mov
sahf
notl
repnz
add
clc
push
in
adc
js
inc
in
cmp
fisubs
decl
adc
incl
call
daa
sbb
call
add
ret
dec
inc
push
dec
mov
xor
inc
shrb
out
adc
repnz
and
imul
sbbl
jge
ljmp
mov
mov
xor
push
cltd
dec
lcall
lea
jbe
outsb
es
or
rcll
add
divl
lahf
pop
aaa
ljmp
std
bound
nop
sbb
add
xchg
adcb
mov
stc
loop
cmp
icebp
sbb
cwtl
pop
cld
pop
jmp
aad
lcall
xor
or
out
test
lods
in
add
loope
ss
cmp
xchg
je
leave
sbb
xchg
fists
stc
adc
aam
jnp
push
dec
push
in
cld
jge
ljmp
pop
xlat
lods
loopne
sahf
lea
mov
push
mov
lret
dec
add
aas
adc
notb
ret
mov
and
daa
fimull
mov
cmp
lods
outsb
fs
cli
sbb
in
stos
aas
push
and
hlt
sarl
pop
mov
js
cmpsb
mov
cmp
push
inc
sbb
lret
test
xchg
push
int
and
or
push
fisttpll
imul
pop
mov
and
testb
pop
lea
sub
xchg
lcall
cmpsl
leave
pusha
repz
or
addr16
push
sahf
rorb
negb
popf
in
push
cmpsb
sbb
imul
movsl
data16
pop
call
cmp
out
daa
inc
jne
mov
cmpsb
jle
add
leave
sbb
and
sbb
push
mov
imull
test
incl
mov
jl
fiaddl
in
ljmp
add
mov
push
and
rcr
xor
aad
dec
out
mov
adc
sbb
mov
jnp
mov
sub
in
ds
push
inc
jp
sbb
mov
rclb
pop
imul
xchg
dec
lea
dec
pushl
jge
push
sbb
outsb
mov
mov
out
push
enter
jmp
mov
decl
add
push
cmp
pop
sbb
xorb
xchg
xlat
fnstenv
xor
lcall
pop
mov
dec
cmp
lahf
sbb
mov
popa
mov
add
ljmp
cmp
out
cmp
mov
testl
hlt
push
ljmp
cli
fsubp
je
or
and
jp
add
ds
sbb
pop
xor
inc
mov
sub
or
xrelease
pushf
sub
pushl
fsubrl
lcall
mov
jo
inc
int
xor
dec
inc
testl
lea
or
pop
imul
out
add
and
loopne
aas
mov
orb
imul
inc
fs
push
xor
sbb
pushf
fidivl
push
adc
sbb
je
ds
mov
mov
leave
jo
ss
movsl
je
inc
daa
icebp
push
inc
jmp
push
fdivs
add
adc
orb
or
and
push
sub
jnp
mov
ljmp
mov
fisttps
sub
ljmp
in
pop
cmpsb
in
sub
scas
adc
cmp
inc
pop
int3
call
insb
cmp
sub
fnstenv
movsb
xor
sub
jmp
push
ja
jae
out
pop
and
fcompl
cmp
ljmp
cmp
rolb
fdivs
in
cli
testb
push
outsb
ljmp
xchg
sbb
loope
jae
int
jo
cmp
pushl
pop
pop
mov
mov
adc
stos
adc
enter
rcrl
stos
fimull
add
test
or
or
inc
negb
int
sub
push
sbb
ss
xlat
idivl
std
mov
movsl
xchg
dec
ret
jmp
mov
in
mov
jg
mov
push
lret
jmp
mov
lock
push
add
dec
out
cmc
xor
push
push
push
movsl
pop
xor
fdivp
pop
test
inc
mov
jne
std
clc
jecxz
and
dec
int
mov
push
popa
outsl
xchg
ds
mov
stc
js
adc
jb
jns
pop
xchg
mov
push
int3
iret
mov
mov
inc
add
adc
or
push
sti
fdivrs
mov
mov
mov
adc
das
mov
fwait
gs
roll
cmp
xor
or
ja
hlt
push
rclb
sbb
std
xchg
fs
es
push
sub
xchg
ljmp
adc
xchg
and
mov
push
xchg
hlt
mov
popl
mov
ret
adc
cwtl
das
stos
dec
or
sub
sarb
xor
mov
cmp
std
fsubl
loop
adc
push
pop
and
or
aad
cmpsl
pushf
push
inc
filds
dec
aam
pusha
andb
fistps
and
ljmp
pop
push
mov
stc
inc
cltd
pop
push
jb
pop
mov
sub
and
inc
dec
sub
inc
std
movsl
movsl
or
or
jne
push
dec
jnp
adc
lcall
jb
push
mov
sub
or
mov
sbb
repnz
stos
sub
ja
xchg
mov
sahf
inc
mov
push
pusha
push
cmc
xchg
or
rcll
xor
inc
cli
push
mov
xchg
and
dec
jl
dec
ret
outsl
inc
mov
rorl
test
shrl
mov
and
fdivs
je
inc
cs
xchg
sub
inc
add
das
add
dec
xor
pop
mov
jmp
mov
lahf
incl
test
lods
xchg
leave
and
test
xchg
js
cmp
aad
push
jb
test
lcall
adc
push
andb
sub
andl
fdivr
leave
pop
pop
fisubrs
das
or
or
and
lcall
inc
mov
xor
add
sub
je
fimull
and
rorl
dec
test
xor
hlt
inc
lcall
mov
sar
push
mov
sub
fistpll
mov
dec
cwtl
aaa
in
sti
sbb
xchg
adc
mov
inc
sub
jno
ds
mov
mov
jge
jl
mov
dec
dec
adc
insb
jbe
test
push
gs
push
and
mov
roll
testl
jbe
mov
or
inc
jbe
cwtl
out
mov
shlb
xor
jno
inc
out
push
cwtl
xchg
mull
xchg
je
mov
mov
fnstenv
shll
jmp
and
sbb
fcomps
xor
xchg
idivb
cmp
push
repz
xchg
pop
sbb
sbb
and
or
mov
int
imul
lcall
rcrl
add
fdivs
shlb
fwait
or
imul
cld
leave
test
mov
xchg
int3
inc
imul
cltd
flds
jo
into
sub
pop
lret
mov
rdpmc
leave
mov
pusha
into
fs
mov
push
push
mov
sub
mov
cmc
mov
fadds
cltd
mov
mov
adc
inc
pop
dec
gs
or
and
add
adc
cltd
push
push
gs
icebp
and
xchg
add
jmp
movsb
xchg
loope
dec
inc
or
dec
popa
fildll
out
rcrl
lods
add
fsubr
int
fiadds
or
or
jp
ret
jmp
popf
ljmp
rorb
sti
push
lret
sbb
push
pop
pop
or
sti
mov
and
cli
das
scas
adc
int3
or
cmp
cmpsb
mov
sar
andl
sbb
inc
xchg
neg
dec
adc
fidivl
incl
cs
movsl
sbb
mov
loop
lret
xchg
aas
or
dec
hlt
or
cmp
jge
jecxz
xor
and
lcall
mov
mov
push
inc
decl
jne
dec
test
out
push
xor
shrl
out
or
stc
shlb
dec
mov
call
push
or
lcall
cli
shrl
sbb
arpl
inc
lds
sub
adc
out
enter
jns
ja
and
jmp
pop
mov
cmpsb
clc
sub
stc
or
loop
mov
divl
int
xorb
and
mov
mov
lods
lret
pop
stos
xchg
pop
jns
dec
insb
or
jbe
or
mov
mov
rclb
push
sub
or
loop
sub
add
arpl
addr16
adc
insl
repz
inc
cmpl
jnp,pt
es
lea
adc
jmp
push
clc
push
scas
push
mov
mov
adc
cltd
xor
mov
arpl
jbe
mov
pop
arpl
rorb
pop
sub
push
and
pop
shlb
repnz
out
out
cmpsl
sub
or
mov
out
cmpl
push
add
mov
nop
and
in
jno
mov
xor
cmp
adc
xor
sti
or
push
fldl
dec
movsl
xchg
incl
dec
mov
gs
pop
xchg
mov
ret
icebp
jne
scas
loop
fistpll
mov
mov
movsl
incl
push
out
ret
clc
test
add
pushl
xchg
sarb
adc
mull
js
pop
test
cmp
mov
inc
js
and
jecxz
or
mov
jb
ljmp
pop
mulb
cmp
mov
ljmp
inc
std
dec
jne
jbe
mov
cs
push
jg
sbb
adc
cmc
subb
mov
fs
xchg
imull
sub
ja
inc
sbb
pusha
jmp
add
aaa
mov
ja
incl
sbb
pop
sbb
pushl
cmp
and
or
outsl
push
pop
pushl
jecxz
lods
loop
test
nop
mov
ja
pop
arpl
push
add
or
jmp
rcrb
xchg
mov
loope
mov
inc
jmp
dec
clc
jbe
sbb
ret
pushf
ret
and
sub
sbbb
test
pop
test
jecxz
fldl
testl
add
jmp
inc
addr16
and
push
or
lods
pop
jo
xor
cmpsb
test
mov
jnp
mov
jmp
jno
add
insb
xchg
jecxz
jl
sub
xorl
outsl
xchg
xor
xor
add
mov
lock
xor
repz
jae
mov
clc
xchg
sub
push
orb
push
mov
and
addr16
sub
fs
aas
xor
mov
cs
ret
cmp
xor
inc
or
cmp
in
sbbl
xchg
mov
rolb
mov
sbb
push
sarb
sbb
ja
push
mov
lret
lods
pop
int
popa
fimuls
adc
pop
mov
ds
gs
negl
jb
dec
push
add
loop
adc
loope
std
scas
xchg
mov
and
cmpsb
xor
jbe
jle
daa
cltd
insb
and
mov
or
xchg
jbe
jg
test
mov
push
addl
arpl
add
shr
xor
sbb
sbb
and
push
dec
jb
popf
pop
or
mov
cmpsb
lahf
ljmp
mov
push
aaa
or
inc
sbb
in
sbb
lcall
sub
cmp
fiadds
inc
mov
xchg
pause
inc
or
jo
cmp
out
add
movsl
push
lock
gs
pop
or
adc
shrl
pushl
sarl
sbb
aaa
xchg
cmp
pop
add
mov
jge
idivb
fbstp
cmp
sbb
fcmovnu
mov
ret
imul
in
sti
mov
addb
lcall
jno
mov
sub
pusha
dec
into
es
inc
dec
add
or
sub
jl
jmp
sti
mov
xchg
cmp
lret
fsubrs
push
mov
jp
fnstenv
xchg
clc
or
ss
repnz
std
dec
test
in
sar
stos
loop
xor
shl
sub
push
popa
test
lret
hlt
inc
lds
and
jmp
movsl
add
movsb
mov
stos
cmp
dec
lret
dec
rcll
adc
adc
roll
pushl
xchg
pusha
sub
cmpsb
mov
mov
xor
push
movsb
ret
mov
mov
fimuls
mull
jne
and
or
pusha
andb
jl
stc
sub
push
imul
scas
cmp
nop
and
pop
outsb
test
ljmp
xchg
sbb
adc
repnz
into
jne
jl
std
inc
call
jno
mov
lcall
fldl
sbb
mov
mov
jbe
push
loop
sbb
pop
or
sbb
xchg
and
imul
daa
je
xlat
jns
lods
jmp
add
cmp
ljmp
inc
out
inc
je
pop
testl
clc
jl
lods
xchg
divl
mov
pop
lcall
fldl
decl
dec
inc
and
jp
scas
push
pop
dec
xchg
scas
pop
out
jl
jl
sbb
ljmp
hlt
js
jmp
orl
cmp
js
incl
imull
leave
sarb
xchg
or
scas
push
inc
into
cmp
pusha
in
out
mov
fwait
movb
or
sahf
stc
int
sbb
outsl
popa
aaa
mov
neg
jmp
push
clc
dec
push
jo
stos
pop
ljmp
dec
call
xor
ljmp
decl
repnz
divb
and
sub
inc
or
sub
nop
jmp
mulb
mov
jbe
jo
hlt
xchg
das
out
and
or
xchg
inc
stc
and
pop
fisttpl
push
arpl
fs
or
sti
insl
lcall
cmpsl
pop
lret
decl
cld
jl
sub
shll
test
and
lea
dec
into
cmpsb
mov
ss
cli
push
pusha
fistps
imul
fucomi
insl
lret
je
ficomps
add
sbb
cmp
and
nopl
xor
mov
and
sbb
fsubs
movsl
adc
std
or
dec
call
lea
lods
cltd
fstps
ja
dec
ja
iret
mov
ljmp
out
daa
or
adc
imul
xchg
cmp
fcomps
mov
xchg
cmpsl
pop
inc
cwtl
sbb
out
dec
arpl
add
pop
pop
pop
mov
sub
not
fcom
adc
and
xchg
es
iret
loopne
or
fbstp
mov
lods
stos
and
adc
xor
cld
imul
push
std
fstps
jl
incl
pop
es
xchg
push
add
or
jb
pop
ljmp
lcall
adcb
adc
pop
cmc
push
mull
adc
sub
ror
mov
pop
call
push
ljmp
mov
sub
pop
mov
rcrl
mov
stc
leave
mov
cs
sti
out
add
cmp
mov
mov
xor
cmp
cmp
sub
out
xor
and
or
dec
in
mov
lds
out
cmp
or
int
into
out
je
adc
or
sbb
aaa
pop
dec
std
mov
outsl
mov
ja
mov
xor
out
call
inc
and
test
lods
les
sub
fwait
dec
or
cmpsb
xor
pushl
lret
jl
notl
sbb
ficomps
jb
and
xchg
xchg
ja
sub
sti
xor
inc
push
cmpsb
cmp
orl
vpcmpgtb
arpl
push
dec
fwait
sbb
mov
jae
mov
xor
stos
inc
push
or
ss
xor
xor
iret
pop
nop
mov
mov
cmp
cmc
cmp
cli
clc
mov
in
ja
mov
add
sbb
in
fwait
std
push
add
xlat
adc
push
xor
arpl
aas
or
movsb
imulb
lea
je
mov
jp,pt
sbb
mov
out
jbe
sub
jno
sub
std
fimuls
pause
je
pushf
and
xor
inc
push
xlat
sti
hlt
xor
cmpsl
into
sub
inc
lods
movntq
push
and
mov
cmp
sbb
adc
xor
insb
pop
cmpsl
sbb
push
dec
and
in
adc
idivl
mov
mov
cmc
sbb
out
push
push
fisttpll
add
cltd
or
cmc
int3
sbb
and
pop
pusha
cmc
push
cmpsl
ljmp
pushf
ja
lcall
jg
add
popf
inc
mov
xchg
std
mov
sub
ret
jmp
mov
dec
xchg
and
lods
mov
gs
ja
xlat
leave
in
mov
jmp
cli
das
cmp
add
scas
or
push
cltd
jno
dec
jg
or
insb
jmp
shl
lret
cmpsb
lret
decl
leave
mov
daa
lods
call
jns
sub
sub
sub
arpl
mov
mov
sbb
jne
xor
and
cmpsl
mov
ds
pop
add
push
adc
jne
or
sbb
test
fists
jnp
mov
pop
add
or
rcl
push
bound
shrb
in
bound
jo
lea
scas
test
inc
xor
andl
int3
pop
sbb
call
mov
inc
lret
lock
iret
cmp
lods
insl
cmp
lock
in
mov
arpl
into
pushf
jl
loopne
incl
movsl
cltd
sbb
and
dec
jnp
notl
aad
xchg
stc
es
call
sahf
and
dec
idiv
sbbl
cmpsl
in
cmp
fcoml
addr16
lods
add
cld
cmp
incl
ret
test
sub
clc
add
mov
out
xchg
pusha
fwait
std
sbb
or
lret
push
jbe
outsb
in
mov
adc
lea
pop
sar
sbb
fwait
jns
xchg
push
mov
xchg
or
icebp
xchg
outsl
push
xorb
subl
add
mov
sbb
cld
and
or
xorb
xlat
in
lods
out
add
scas
lcall
stos
jne
sub
idiv
clc
push
leave
lahf
cmp
push
dec
lret
mov
aam
pop
pop
stos
inc
loop
mov
pop
jecxz
decl
in
sbb
cmp
mov
inc
cli
decl
mov
cmc
jmp
sarb
and
or
mov
call
decl
stc
adc
clc
jp
mov
mov
jl
pushl
lret
lods
stc
pop
push
jbe
mov
and
adcb
idiv
popf
cmpsb
xchg
pop
and
popa
out
mov
mov
enter
dec
out
cmpsb
pushl
test
adc
jecxz
pop
sub
inc
push
incl
rorb
data16
push
int3
sub
out
and
fcom
lcall
bound
sub
sahf
cmp
dec
jmp
xchg
sbb
gs
xchg
sti
fadds
loop
imul
push
adc
rol
xlat
cs
arpl
out
sub
xchg
jo
insl
pop
mov
cmp
addr16
pop
or
sub
sbb
adc
sti
xor
ja
loope
in
jbe
gs
xor
and
in
jg
lods
inc
into
dec
sub
out
fwait
bsr
jmp
jmp
mov
ja
je
xlat
scas
or
pushf
je
xchg
adc
cmp
jmp
mov
mov
jb
setnp
ficomps
xor
pusha
out
cld
into
fiaddl
sub
lcall
dec
test
adc
icebp
outsl
jmp
sti
jb
cli
outsb
xor
dec
fs
inc
pusha
mov
xlat
gs
lcall
add
mov
inc
xchg
pop
adc
push
stos
inc
sbb
push
call
pop
xchg
cmp
pop
jno
jns
loope
push
sahf
out
jnp
shrl
pusha
shlb
test
jp
lods
daa
mov
fwait
mov
mov
les
fnstenv
lahf
adc
rcrb
dec
mov
push
dec
lea
ljmp
mov
js
mov
std
mov
pop
push
dec
mov
jb
cld
mov
adc
std
shrl
fmuls
les
adc
inc
lods
pop
sbb
push
mov
mov
add
aam
in
rol
cmpsb
popf
mov
xchg
push
aad
jle
aaa
adc
and
movsb
xchg
std
daa
fnstsw
sub
inc
aaa
aad
xchg
and
mov
push
xchg
fwait
mov
or
cmp
add
sbb
ljmp
outsb
pushl
fs
and
inc
stos
jl
cmp
cld
scas
pop
add
mov
cmc
ds
add
mov
add
push
mov
shll
cli
cmp
and
jbe
xchg
in
xchg
fwait
je
clc
or
cmc
jbe
dec
jmp
add
mov
jmp
arpl
mov
mov
ss
mov
push
scas
addl
dec
mov
outsb
in
call
and
daa
movsl
adc
adc
sbb
push
jle
fsub
jnp
mov
test
mov
mov
sahf
mov
or
jno
mov
lcall
mov
jbe
call
rolb
jp
ja
out
or
lret
push
in
es
std
and
push
cmp
mov
sbb
dec
imul
pop
ret
adc
inc
mov
sub
popa
mov
and
sbb
rcll
mov
or
cli
dec
mov
mov
sub
loopne
addl
mov
or
xchg
clc
pop
in
fildll
stc
mov
call
jmp
pop
cmp
int
sub
notl
sbb
mov
scas
outsl
adc
or
into
decl
pop
push
push
xchg
cltd
xor
mov
mov
cli
mov
cld
and
test
gs
in
sub
arpl
pop
stc
sub
fiadds
das
nop
add
pushl
mov
pop
and
adc
mov
shlb
cmp
movsl
idiv
pusha
cmp
ljmp
pop
xchg
pushl
call
out
inc
sub
in
cltd
lret
ds
mov
in
ja
loope
cli
scas
xchg
push
inc
lret
jns
sbb
adc
pop
inc
lods
pusha
add
in
loope
dec
idiv
in
xchg
and
lret
pop
jo
sub
sti
pop
adc
aad
test
cmc
loope
fwait
pop
enter
pop
int3
scas
sub
jmp
into
rclb
stos
dec
lcall
cmpsl
not
data16
add
dec
xor
mov
shlb
cmc
incl
or
adc
adcl
sbb
jl
pushf
mov
xchg
pushl
xorl
incl
lahf
es
cltd
xor
mov
pushf
outsl
xor
sub
adc
add
stc
xor
mov
xor
push
cli
inc
test
les
aaa
mov
idiv
sbb
mov
int3
daa
dec
push
mov
bound
lret
pop
pop
pop
sub
popf
xchg
mov
and
mov
push
cwtl
xchg
std
cs
jecxz
xchg
pop
jbe
mov
jo
pop
shrl
cmp
movsl
sub
xor
sbb
shll
push
xchg
jbe
shrb
lds
push
pop
mov
call
cmpsl
ret
sbb
imul
pop
out
sarb
mov
inc
jmp
stos
sar
sub
mov
and
fs
xor
rorl
sub
loopne
ja
shlb
incb
adc
mov
inc
push
add
cmp
cld
es
in
lret
dec
lcall
and
ds
out
sets
inc
sub
xchg
dec
lcall
pop
nop
dec
js
lea
call
dec
imul
xchg
aaa
bound
shll
iret
notl
test
add
out
add
cmp
or
call
loop
and
cmpsl
mov
lret
push
mov
pop
ja
add
cltd
push
popa
test
lock
dec
jae
xlat
jg
imul
testb
mov
and
jns
fisttps
je
push
out
mov
shll
sub
inc
mov
outsl
lcall
lret
loope
decl
mov
xchg
or
xor
mov
or
and
mov
inc
mov
sbb
and
sti
fs
xlat
imul
pushl
jnp
inc
mov
inc
xor
into
fwait
ret
jbe
scas
hlt
loopne
jbe
ljmp
repz
lock
shl
push
filds
mov
dec
push
adc
sbb
in
push
popa
aad
imul
mov
cmp
sbb
shlb
lods
sbb
push
mov
pop
test
stc
cmpl
pop
ljmp
mov
dec
dec
mov
pop
xor
xor
jne
or
test
lock
cli
lock
call
scas
je
jb
xchg
out
and
xchg
jecxz
push
push
dec
lahf
out
sar
sub
mov
mov
adc
mull
mov
sbb
clc
pushl
cwtl
stos
or
dec
xor
push
bt
in
ficoms
pop
idiv
shll
mov
aaa
dec
cli
std
lock
cmp
out
mov
idivl
fcomps
leave
inc
pusha
pop
xchg
out
ja
test
dec
scas
sar
or
ja
cwtl
mov
mov
or
and
jmp
sbb
movq
push
jbe
imul
mov
cld
stc
je
fsubrs
cmp
inc
jg
and
mov
std
decb
loopne
xchg
xor
cli
in
and
and
negl
fs
std
es
sarl
inc
popf
testl
xor
std
jmp
call
mov
push
xchg
mov
enter
sbb
push
leave
sahf
xchg
shrb
jg
xor
incl
xlat
adc
repnz
add
jge
fdecstp
mov
cmpsb
gs
inc
je
and
cmp
js
dec
mov
push
mov
out
mov
in
inc
inc
outsb
push
shrb
call
inc
sahf
arpl
jo
lock
inc
mov
popa
sbb
inc
lods
jecxz
jnp
pop
roll
lock
in
loope
or
lds
or
mov
cmp
dec
xor
ss
sahf
mov
dec
stc
push
pop
cmp
push
cmp
pop
lret
xchg
fs
and
or
shlb
jp
fbstp
push
inc
mov
sbb
jns
test
test
loop
sub
loope
std
gs
jne
int3
and
xor
dec
push
sub
test
out
or
repnz
sub
dec
push
and
sbb
xor
xor
sbb
mulb
std
xor
pop
pushf
pusha
xlat
dec
lea
xchg
mov
subb
mov
clc
pop
leave
mov
test
inc
incl
cmpsl
xchg
ret
cld
cmp
leave
sbb
sbb
sbb
fmuls
ljmp
or
decl
lcall
scas
sub
fwait
in
dec
pushl
mov
jge
inc
decl
and
mov
out
adc
jnp
out
or
popf
iret
cli
inc
adc
loop
xor
enter
push
sbb
cld
fs
jp
jns
lcall
add
fwait
lds
jmp
imul
dec
and
sbb
fcoml
pop
mov
scas
jns
insb
push
pop
pusha
imulb
cmp
inc
xor
sub
jne
pop
out
sbb
ja
jp
std
mov
aam
push
movsl
mov
lahf
xor
test
mov
aaa
mov
cmp
stos
and
jb
cld
cli
call
out
adc
xor
js
cmp
cmp
mov
sub
iret
mov
std
jns
inc
or
dec
pop
movsb
push
in
mov
lods
pop
rcrb
test
pop
repnz
arpl
rol
adc
negb
jle
test
xorl
in
cmp
xchg
push
mov
call
jns
inc
cld
lret
dec
jmp
dec
pop
out
sub
out
mov
js
fwait
or
mov
xlat
add
pop
jle
sub
mov
mov
bound
pop
incl
in
xor
test
add
pop
call
fidivs
insb
imull
aas
es
mov
push
outsl
les
fs
and
insl
inc
adc
mov
push
push
xor
call
pop
sarl
xor
das
out
loope
sbb
or
mov
pop
scas
and
adc
mov
bound
jl
mov
mov
aas
cmpsl
cmpsb
adc
or
and
or
cmc
mov
mov
mov
and
icebp
clc
data16
mov
mov
loop
lcall
or
fmul
iret
adc
lock
push
jns
out
test
or
in
movsb
xor
into
inc
xchg
js
jge
repnz
xor
clc
jg
insl
mov
jmp
incl
dec
pop
rcrl
xchg
xor
cmp
cmpsl
fdivs
mov
push
xchg
jmp
outsl
mov
ljmp
les
test
and
push
or
add
add
lret
cmp
pop
out
dec
pop
push
jecxz
fadds
loopne
lock
test
mov
jno
add
adc
sbb
cmc
jae
repz
pushl
lods
pop
sahf
jae
loop
je
jno
mov
sub
lock
sbb
push
mov
xor
mov
mov
mov
add
adc
mov
scas
pop
lods
mov
xlat
movsb
sbb
push
imul
mov
pushl
mov
add
mov
movsb
jns
adc
es
sbb
mov
mov
add
in
lods
insl
cmp
push
jmp
xchg
pop
out
stc
popa
or
notl
fstpt
insl
adc
xor
dec
ljmp
lds
push
dec
loopne
jne
not
lods
inc
mov
push
cmp
sbb
mov
pop
sub
and
add
jnp
shlb
and
pop
fistps
pop
inc
dec
fcmovb
inc
dec
jb
enter
out
test
mov
cli
subl
lods
jo
in
xor
mov
push
adc
or
imul
lahf
pop
cmp
jns
mov
mov
push
xchg
int3
mov
adc
inc
dec
stos
test
ja
and
loopne
inc
stc
jae
inc
jo
push
adc
test
xor
rclb
jae
adc
push
mov
push
xor
enter
push
jl
arpl
xchg
add
jmp
fwait
aad
or
jp
insb
sub
andl
imul
sbb
mov
inc
popf
mov
ljmp
popa
mov
lds
lea
test
adc
jo
adc
inc
ljmp
xchg
inc
mov
sar
jb
push
mov
mov
mov
ret
ss
repz
mov
jecxz
fcomi
stos
add
dec
shll
outsl
inc
push
push
call
movsb
jae
mov
adc
pop
cmpsl
adc
push
decl
mov
lods
push
adc
test
push
and
out
mov
jmp
mov
in
add
scas
add
in
xchg
mov
lcall
lods
ret
jmp
jb
out
jmp
out
inc
dec
ja
insl
imul
pop
sub
cmp
push
decl
mov
movsl
xor
add
mov
mov
mov
sbb
iret
imul
ja
cmp
lret
adc
mov
xchg
cmp
cmp
jne
sbb
add
jnp
in
jmp
xchg
fdivrs
mov
dec
aaa
dec
subb
cltd
push
shlb
cwtl
dec
lcall
push
fcos
sbb
aam
push
xchg
mov
xchg
sbb
pop
xor
aaa
incl
adc
cmpsl
jmp
das
in
mov
push
or
fstpl
add
add
ret
jg
push
and
or
pop
jne
stos
outsb
stc
lahf
dec
mov
sarl
pop
mov
gs
sub
imul
xor
xor
in
inc
xor
mov
inc
xchg
std
shll
lods
lcall
pop
outsb
jmp
scas
je
mov
jae
jnp
incb
and
sub
negl
xor
xor
aam
xor
or
dec
mov
popf
sbb
mov
imul
ljmp
fmulp
add
and
mov
fstps
lret
xchg
or
or
outsl
xchg
fnsave
jnp
jns
sbb
sub
pop
mov
jge
idiv
jmp
add
scas
pushl
add
jl
sbb
mov
and
mov
mov
lock
xchg
nop
jne
cmp
sti
call
lea
lcall
mov
dec
ljmp
push
pop
cmp
sbb
push
inc
into
out
push
adc
sbb
inc
lcall
and
cmp
jp
or
mov
cli
pop
mov
jb
xchg
lods
push
ljmp
test
add
movl
push
sub
mov
adc
xchg
jmp
pop
or
call
push
fs
enter
inc
stos
xorb
rcll
pop
hlt
sub
popf
js
ret
lods
sti
or
mov
lods
mov
in
fistps
adc
insl
into
mov
js
andb
pop
mov
sbb
into
push
inc
incl
push
int
jp
roll
jnp
das
stos
push
ja
and
and
xor
lea
push
mov
test
sub
inc
cld
push
es
data16
outsl
adc
movsb
pop
dec
and
in
out
xor
cmc
imul
aaa
mov
jne
mov
mov
push
lock
into
ret
xchg
aad
fnstenv
inc
bound
and
mov
lret
fstpt
test
in
ss
jl
aam
fdivr
fwait
jge
cmp
mov
daa
aam
psrld
push
fldenvs
xchg
adc
add
dec
and
pop
jns
out
inc
mov
lds
into
adc
pushl
mov
sbb
imul
sub
mov
jne
xor
test
push
in
mov
mov
mov
movsl
leave
arpl
push
imul
ret
call
xor
mov
aad
ss
pusha
icebp
jmp
inc
sar
mov
and
lahf
pop
push
rcrb
sub
int
and
push
pop
in
icebp
jmp
insl
push
addr16
pushl
xchg
lcall
nop
daa
dec
das
cld
xchg
jg
add
decl
add
in
sbb
rcrl
pop
cmpsb
mov
call
mov
mov
cmp
mull
or
jae
xchg
or
add
fwait
pop
push
lcall
xor
decl
jbe
ret
xchg
test
fcoml
mov
aas
aad
arpl
mov
fwait
lock
lret
adc
popf
or
mov
dec
pop
hlt
xchg
jne
leave
jl
jb
js
cmp
pop
mov
repz
mov
hlt
push
xchg
jmp
xor
pusha
movsb
push
push
xchg
jmp
rcl
pop
ljmp
ljmp
pushl
mov
icebp
cli
loopne
dec
iret
in
lea
mov
mov
ss
push
outsb
add
sub
test
push
arpl
mov
push
mov
bound
cmovns
std
jno
shlb
xlat
pop
xor
std
sahf
pop
cmpsl
xlat
push
inc
mov
scas
adc
pusha
jne
clc
sub
jp
jmp
jmp
sub
lea
cwtl
push
xchg
push
insb
push
out
push
sbb
cwtl
push
sbb
xor
mov
cmp
ds
in
scas
in
adc
mov
lahf
leave
add
sbb
popa
lcall
ret
stos
fs
jbe
mov
sub
push
jmp
out
stc
movsl
ror
negl
popa
sbb
pusha
push
jns
flds
aaa
jle
mov
jmp
mov
sbb
ja
cltd
jne
jp
adc
and
pop
sub
mov
gs
cmp
xchg
sbb
push
cltd
add
incl
mov
jb
sub
push
not
popa
mov
jle
adc
adc
sbb
jae
mov
jmp
sbb
ljmp
add
negb
call
mov
sbb
xchg
sub
lods
push
sub
xor
xor
pushl
ret
mov
xlat
stc
scas
bound
dec
xor
push
jns
jb
lock
insl
fwait
insb
pop
movsl
or
idiv
mov
xlat
add
jge
xor
jb
sbb
jmp
fstl
push
cmpsl
in
stos
pop
incl
or
dec
fildl
repnz
mov
jb
and
pop
push
or
jg
inc
jmp
xchg
add
jns
cwtl
in
aas
pop
xor
stc
fdivr
mov
mov
loope
outsb
push
mov
in
idivb
lea
jae
inc
inc
popa
fucomp
sar
out
shll
lret
pushf
mov
cmp
pop
negb
imul
nop
fsubrp
call
inc
ret
pop
ja
ds
data16
dec
xchg
mov
mov
jb
stos
std
adc
sti
ss
push
dec
mov
adc
les
or
xor
push
inc
test
popf
call
adc
call
adc
lcall
and
mov
pop
stos
lods
or
ret
decl
popf
insb
inc
pop
ja
jecxz
inc
hlt
and
aaa
push
out
shlb
iret
stos
jnp
test
aaa
mov
sbb
and
shl
inc
cmp
cmp
insl
movsl
icebp
sbb
xchg
xor
dec
sbb
jge
repz
es
cmp
sbb
push
and
lods
mov
add
lods
shrl
ret
sub
jbe
sub
outsl
and
push
ss
inc
bound
mov
out
mov
ljmp
dec
je
cli
in
xchg
push
imul
jmp
xchg
fwait
rolb
mov
sar
je
clc
sar
add
or
dec
out
es
gs
stc
mov
and
and
popf
ret
je
scas
std
test
out
and
mov
bound
popa
orb
shll
sbb
mov
jbe
adc
es
push
xchg
sbb
mov
dec
mov
stc
das
mov
dec
jecxz
cld
and
cltd
je
inc
lock
xor
arpl
clc
mov
sahf
xlat
movsb
call
sub
pop
adc
xchg
sub
mov
pop
adc
js
cwtl
arpl
cmc
gs
arpl
inc
cmpsb
lahf
sub
shr
scas
mov
mov
lds
xor
xchg
sub
sbb
mov
mov
mov
cmpsb
gs
cmc
xchg
mov
jecxz
mov
out
loop
fisubrl
sub
in
mov
insl
aas
fnstcw
ss
mov
push
loopne
cmpsl
mov
mov
imul
jge
jmp
popf
jg
cmp
mov
stc
daa
loop
cmc
cld
icebp
negl
cmp
mov
xorb
sarl
push
jecxz
std
jge
jne
mov
mulb
je
xor
or
ret
or
daa
push
shlb
cmp
and
fstl
pop
fwait
cmc
push
loope
clc
xchg
mov
and
ss
mov
jmp
rcrb
js
in
adc
and
popa
and
or
fsubr
mov
mov
add
add
push
inc
lcall
loopne
jg
sub
sub
and
or
into
push
add
mov
aas
push
out
ss
in
adc
aaa
push
popl
jl,pt
or
jae
or
fnstenv
ljmp
aam
pop
insb
sub
jnp
cltd
ret
adc
inc
mov
cld
pop
inc
ljmp
sti
jns
push
loop
pushl
push
popa
arpl
pop
lahf
in
and
in
mov
fidivrl
icebp
mov
movsl
inc
sarb
pusha
pushl
test
jnp
fdivrl
dec
lods
inc
test
or
loop
pop
xchg
negb
testl
cmc
jmp
and
cwtl
mov
je,pn
stos
ds
fisttps
push
sub
cwtl
cs
and
xlat
ja
insb
clc
cmpsl
sti
test
pop
lcall
jg
push
mov
mov
or
inc
mov
data16
pushf
mov
decb
std
mov
loope
repz
icebp
jmp
xchg
pop
push
mov
add
addr16
ret
xor
jg
clc
jae
push
test
adc
ljmp
dec
or
test
or
stos
pushf
sbb
xor
push
push
xchg
cmpsl
jle
or
clc
fisttpll
push
adc
pop
jl
cmp
xor
daa
add
mov
cmp
arpl
pushl
iret
cmpb
cld
jns
adc
pop
unpcklps
outsb
mov
add
popa
pushf
idiv
mov
imul
incl
pop
lds
mov
decl
inc
sbb
mov
test
mov
int3
cmc
mov
mov
loopne
incl
stos
nop
or
addr16
mov
cmc
mov
xchg
aad
or
pop
jle
jns
ja
movsb
mov
xor
inc
je
lods
popa
mov
repnz
mov
cmp
loope
lods
pop
inc
call
call
lcall
scas
nop
hlt
mov
rcll
addr16
repnz
push
lahf
mov
ret
out
fadds
mov
cs
sbb
addl
cwtl
mov
and
inc
jmp
push
mov
scas
mov
sub
cmpxchg
add
jae
negb
adc
or
inc
incl
arpl
cmp
fnop
pop
int3
inc
sahf
loop
pushl
or
ljmp
pop
cmp
mov
sub
stos
sub
add
dec
dec
jbe
or
jne
sub
add
push
cld
fdivl
shl
add
repz
adc
loope
push
jnp
jmp
mov
jae
adc
sub
pop
out
push
inc
test
inc
xchg
push
push
mov
lcall
dec
repnz
mov
fstl
ror
and
lods
xchg
pushl
push
ficoml
lcall
call
lcall
ljmp
outsb
mov
je
push
inc
stc
sbb
pop
push
aas
mov
cwtl
inc
push
add
inc
and
mov
ret
les
jle
adc
jnp
and
pushl
sbb
out
sbb
daa
xor
lret
addr16
int3
xchg
or
jo
or
insl
fdiv
add
push
xlat
dec
arpl
sub
or
dec
fs
jge
sbb
sub
dec
push
incl
pusha
icebp
daa
adc
test
decl
out
pusha
repz
push
ljmp
jno
test
decl
inc
cli
pop
xor
xlat
mov
es
lock
sub
push
add
pop
sub
sub
and
inc
nop
and
lock
js
push
imul
arpl
xor
div
cmp
adc
loope
mov
dec
mov
jnp
pop
sbb
cld
out
pusha
push
sub
xchg
sub
jmp
and
jmp
push
out
xor
jbe
test
sub
loopne
in
call
sbb
sbb
js
pop
cmpsl
cmp
decl
mov
mov
mov
push
testl
cmc
cld
or
mov
incl
pop
gs
pop
clc
pop
das
popf
mov
movsl
mov
shll
jae
std
shrl
out
xor
and
not
cwtl
pop
pop
pop
inc
sub
lock
stc
jg
in
dec
gs
ljmp
add
fmul
in
dec
dec
mov
inc
push
mov
inc
dec
rcrb
fidivrs
pushl
into
and
bound
add
ljmp
mov
mov
icebp
mov
jbe
jno
push
iret
rdmsr
inc
sbb
stc
scas
adc
pop
pushf
pushl
pop
cmp
cld
sti
sub
dec
or
add
movsl
fildll
call
lods
add
pop
call
jno
xchg
cmp
jmp
sbb
call
xchg
int3
pushl
lcall
dec
pushf
mov
adc
scas
sarb
mov
mov
je
push
add
in
sub
jg
sbb
adc
mov
cli
enter
sti
test
pop
nop
pushf
mov
and
mov
add
movsb
push
lcall
je
jle
mov
cmp
cmc
daa
into
mov
pushl
loope
pop
dec
dec
jno
fbld
xchg
lahf
mov
dec
cmc
in
adc
ja
jecxz
cld
orl
pop
xchg
decl
mov
or
mov
pop
mov
cmp
icebp
stc
or
in
jmp
cmpsb
pop
loop
dec
cltd
test
jl
scas
lds
shlb
cli
shlb
sub
add
and
lcall
shll
ljmp
loopne
enter
fadd
call
sub
cmpsb
xchg
and
jge
ja
outsb
pop
sbb
mov
arpl
jmp
and
lcall
hlt
xchg
scas
pusha
inc
push
cmp
mov
cmp
call
mov
jo
add
or
fnsave
push
xchg
jmp
cld
test
lods
cli
stos
jge
orl
lods
out
push
push
jb
mov
and
fs
cmp
mov
test
dec
pop
dec
sbb
lcall
sub
inc
xor
inc
frstor
add
and
loop
xor
pop
aam
decl
sarb
pop
outsl
xchg
das
mov
xor
repz
dec
int
pop
and
dec
pop
mov
push
jmp
mov
call
bound
int
imull
fstpl
std
or
dec
cmp
js
push
ljmp
sub
jl
lds
or
ja
inc
xor
push
loope
mov
sti
es
insb
mov
mov
enter
and
cmp
mov
push
push
cs
inc
xchg
in
or
mov
push
push
iret
add
xor
adc
cmp
mov
ficompl
shll
test
data16
nop
lcall
insl
clc
lods
std
mov
push
jl
pushl
sbb
loope
pushl
mov
xlat
and
leave
jbe
or
lret
pop
dec
pop
loope
mov
iretw
mov
arpl
mov
dec
sbb
nop
push
add
and
loopne
xor
mov
addr16
pop
incl
dec
pop
lods
sub
stos
incl
inc
xlat
loope
mov
jo
pop
cltd
sub
cmp
js
cmpsl
add
push
and
xlat
addl
mov
sub
and
sbb
or
push
cmp
cmpsb
ret
mov
xchg
push
out
daa
f2xm1
xchg
add
scas
ret
inc
sub
sub
mov
sub
mov
push
xlat
lret
pop
popf
adc
incl
imul
jmp
hlt
fnstenv
cmpb
jg
ret
je
jnp
sti
ljmp
mov
sbb
lcall
lds
fistpll
cmc
incl
in
stc
pop
and
lods
movsb
insb
pop
cmp
sub
mov
insl
push
call
or
push
mov
adc
jl
xchg
inc
or
aaa
dec
lret
mov
xchg
cmp
cmp
addr16
dec
shll
add
inc
jmp
sub
imul
nop
or
cmp
mov
jecxz
pop
rcrb
cmp
sub
add
mov
mov
frstor
sbb
imul
sarb
outsb
xchg
dec
mov
je
mov
lret
jg
inc
ljmp
in
fwait
ljmp
pop
repnz
call
sbb
pop
xchg
and
cwtl
sub
sub
or
jo
jmp
fisubrs
test
jecxz
hlt
ret
or
mov
lcall
jbe
xchg
mov
pop
mov
dec
adc
fcmovnbe
imul
jle
icebp
mov
test
push
xor
divl
in
iret
mov
jne
xor
and
xchg
adc
mov
call
pop
or
mov
lret
xor
sub
enter
std
pop
mov
clc
sar
xor
stos
xchg
xor
jmp
add
aaa
mov
dec
xor
sbb
mov
xchg
push
ja
sahf
lods
inc
xor
sti
jmp
loope
mov
add
int
mov
xchg
dec
sbb
cltd
test
mov
adc
sar
sbb
inc
sahf
xchg
outsl
mov
mov
jl
add
lret
rorl
dec
insb
outsb
es
lcall
adc
xchg
inc
ror
pushf
push
cs
stos
mov
rol
in
cmp
jmp
add
popa
test
sarl
jo
xor
ja
push
cmp
lods
adc
sbb
out
inc
cmp
lcall
mov
xchg
mov
imul
mov
scas
loopne
aam
push
sbb
push
cmp
xchg
adc
call
or
adc
clc
mov
pop
js
shll
je
mov
cwtl
pushl
rolb
std
mov
pop
ficoml
cs
call
cwtl
push
pusha
jmp
lds
divl
adc
push
inc
sbb
adc
cld
jmp
fadds
sub
pop
mov
jns
enter
movsb
cltd
stos
xor
call
xchg
sbbl
insb
cld
pop
mov
mov
push
in
jp
pop
fucomip
scas
sub
push
push
mov
mov
or
outsl
jno
sar
aam
imul
jns
mov
test
sub
inc
lahf
call
test
ljmp
cmc
enter
xor
and
sub
push
jmp
cmpsb
icebp
jg
les
ljmp
sti
xchg
mov
call
test
inc
jae
pushl
pop
sahf
lock
stos
or
adc
pushf
or
hlt
cmp
stc
lods
jo
push
cmpsl
and
jle
push
pop
add
fsubl
xchg
leave
sti
gs
ss
dec
pop
add
call
popf
or
push
call
outsl
rorl
xor
ss
sbb
xor
mov
and
pop
fwait
push
cmp
sbb
mov
mov
cld
sub
daa
js
incl
add
jge
cmpsb
pusha
mov
cwtl
mov
sbb
sbb
push
push
shlb
add
mov
notl
jmp
xorb
loop
gs
lret
sub
push
jbe
loopne
inc
lock
mov
lcall
rcrb
xchg
xor
mov
and
rcl
lock
mov
jbe
insb
xchg
xor
es
sti
pop
decl
fmulp
inc
push
lret
or
aaa
push
or
decl
call
pop
mov
jne
lock
lret
lods
shlb
and
pushl
pop
jo
mov
jg
mov
jmp
int
sbb
testl
push
clc
add
and
es
jbe
insb
cmp
sub
shl
push
dec
cmp
and
pop
jo
jnp
test
stos
and
shll
push
dec
add
imul
bound
insl
add
lcall
adc
imul
dec
inc
push
cli
sbb
adc
add
ljmp
xor
sar
adc
ret
sub
jg
mov
xchg
ja
loope
aas
or
cmp
insb
push
arpl
call
inc
jbe
push
inc
test
adc
insb
mov
mov
push
jl
stos
xor
ficompl
int3
mov
adc
adc
jge
adcl
inc
push
je
cmp
lods
aas
sahf
fcos
mov
fiadds
sbb
pushf
sub
pop
mov
leave
das
cmc
daa
lcall
pop
popa
ja
mov
dec
push
sub
cmpsl
mov
dec
test
out
icebp
vmovaps
js
dec
fsubs
subl
adc
les
outsb
xchg
mov
in
xor
mov
ljmp
sbb
adc
push
filds
pushl
xlat
jmp
je
dec
and
test
adc
cld
fstl
jae
out
lahf
ljmp
xchg
aaa
xor
sbb
dec
dec
push
and
mov
jbe
hlt
xchg
jno
sbb
int3
rcrl
mov
in
add
ljmp
std
fidivrs
cwtl
cmc
mull
addr16
push
cmp
call
sub
and
ja
mov
cli
mov
lea
mov
sub
add
movsl
and
sbb
shrl
lods
push
ds
ljmp
outsb
insb
jl
mov
or
loopne
movsl
inc
xchg
push
test
inc
or
xorl
in
adc
fcomi
loop
and
jo
xor
sub
inc
lds
push
inc
sbb
or
xchg
lcall
dec
mov
pop
hlt
sbb
mov
pusha
cmpsb
pop
cmp
add
or
js
adc
mov
cmp
fsubr
mov
sbb
and
dec
or
lcall
loope
xchg
repnz
int3
decl
cs
pushl
andb
std
hlt
in
loopne,pt
int3
push
sahf
mov
add
or
cmpb
jmp
into
xlat
ljmp
mov
push
incl
lods
fdivl
test
xor
sarb
ljmp
lcall
cld
xor
and
cltd
or
ret
adc
jmp
lods
je
lods
sbb
lcall
ljmp
imul
pop
fdivs
xchg
decl
mov
jo
inc
ficoms
mov
mulb
xlat
inc
gs
jp
ljmp
lods
in
push
fwait
dec
test
cli
mov
lea
mov
jo
inc
dec
xchg
mov
or
fbld
ret
sbb
sahf
adc
jmp
lods
rcrb
test
add
mov
lahf
dec
inc
mov
add
adc
out
sbb
stos
pop
fs
mov
cmp
movsb
scas
js
incl
jo
adc
ljmp
es
call
test
cld
jbe
addb
push
mov
ljmp
repz
incl
cmp
push
pop
fimuls
jmp
gs
add
fisubrl
xchg
movsl
pop
sub
dec
in
mov
or
sti
pushl
lods
mov
out
sub
mov
xor
lcall
lea
cmpsb
mov
js
jmp
outsb
fdivl
ljmp
push
fs
dec
pop
dec
mov
divl
daa
ljmp
push
cltd
bsf
bound
data16
jmp
fwait
testl
xor
jmp
push
dec
fsts
push
cmp
mov
push
dec
jo
sbb
sub
cs
in
filds
mov
cmp
into
sarl
xchg
pushf
mov
sbb
rorl
push
push
mov
jmp
ret
test
ljmp
roll
cmpl
sarb
out
mov
pop
in
mov
or
cmp
jle
mov
dec
xchg
pop
mov
insb
mov
pop
add
outsb
ja
scas
sbb
mov
out
in
push
jl
lock
and
push
fwait
movaps
xchg
test
cli
push
pop
push
cmp
shrb
jbe
fildll
xor
sbb
push
sub
sub
in
xchg
js
jbe
cli
mov
gs
out
in
mov
push
cmp
ljmp
add
jmp
rcll
sbb
xor
cmpsb
or
sbb
cmc
sar
and
lret
jnp
cmp
push
xchg
sub
insb
ja
ljmp
outsb
fcoms
add
dec
pop
sbb
and
ja
imul
jg
stc
ljmp
js
data16
jb
cli
sahf
decl
out
sub
add
sbb
aam
jg
or
call
popf
mov
push
imul
data16
pop
inc
dec
jns
and
clc
cs
mov
out
je
lock
incl
xlat
adc
mov
and
aam
movl
fwait
sbb
lods
incl
mov
clc
stc
mov
divb
aaa
lea
sub
sbb
or
mov
jle
or
pusha
aam
mov
sbb
movsl
and
jecxz
sbb
mov
adc
cmc
jae
outsl
dec
enter
sub
push
xor
mov
sbb
xchg
dec
in
cmp
xlat
cld
lret
std
mov
imul
ss
ds
roll
mov
pop
clc
mov
jae
add
ss
cmpsb
test
lcall
fisttps
vmread
jmp
xchg
mov
mov
mov
mov
movsb
idiv
sbbl
pop
imul
pop
push
pusha
add
cmp
cltd
dec
sti
daa
push
push
and
xor
pusha
push
mov
mov
es
fdivs
xor
outsb
fs
sbb
jge
cmc
xchg
mov
int3
js
inc
into
or
jns
in
inc
into
int
add
add
push
fistpll
hlt
imulb
xchg
aam
mov
cmp
jns
add
je
mov
push
lahf
mov
mov
or
and
jnp
adc
push
sub
sbb
mov
cli
and
mov
sbb
cmc
sbb
cmp
sti
aam
enter
mov
xor
clc
mov
sub
push
push
aas
and
mov
dec
add
es
addr16
hlt
rcr
es
xlat
xchg
cmpb
aaa
or
notl
fidivrl
jne
mov
push
cmpb
pop
sub
gs
xor
fdivrl
jge
in
jae
addr16
adc
and
sbb
movsb
push
push
xchg
push
std
in
jmp
sahf
outsl
xor
mov
inc
xchg
adc
push
pop
lods
mov
xor
cs
divb
movsb
xchg
push
xor
sbb
pop
loopne
and
in
ljmp
jo
xor
mov
popf
decl
cmc
or
add
jmp
icebp
xchg
sti
pop
dec
sbb
jne
adc
imul
sbb
stos
in
int3
sub
push
lea
jp
jne
gs
jl
dec
add
cmc
testl
inc
ljmp
dec
ret
jmp
pop
cwtd
shrl
push
lock
in
scas
or
in
jmp
or
lcall
dec
fs
jbe
inc
lahf
loopne
xchg
jecxz
ja
cld
xor
cld
xchg
movl
jg
jl
jns
addr16
add
ljmp
mov
lcall
imul
pushf
or
jns
ljmp
ds
call
ret
jmp
aaa
prefetcht2
popa
jno
sub
and
and
mov
mov
push
lds
or
ja
js
xchg
mov
andl
mov
insl
jl
mov
pop
or
sti
aaa
faddl
inc
pushl
mov
pop
inc
push
dec
jmp
pop
mov
mov
in
call
push
imul
jge
pushf
dec
or
and
mov
inc
ret
cmc
gs
ud0
call
test
in
mov
xor
xchg
and
or
and
mov
pop
cmp
xchg
xlat
sub
cmpsl
sub
test
and
es
mov
and
subl
hlt
push
test
cmpsb
je
adc
stos
xor
push
out
sbb
lock
mov
dec
jge
pop
add
out
sbb
insl
xchg
lock
inc
sub
xchg
pushl
ret
cmc
or
xchg
push
and
cwtl
stos
das
ja
pusha
sub
push
sti
adc
je
cmpsb
and
mov
add
dec
inc
aad
or
mov
mov
or
testl
xchg
into
mov
xchg
sbb
lret
shl
cmp
shll
nop
or
xor
mov
fistl
or
ja
cmp
or
outsb
cmp
mov
mov
negb
daa
shrb
xchg
xchg
jo
xchg
sbb
lcall
and
sub
ficompl
jbe
lods
int3
mov
sub
jne
int
ret
imul
fs
nop
sub
adc
ret
stc
xor
aas
xor
div
test
mov
pushf
cmp
daa
or
stos
xchg
sti
arpl
inc
divb
mov
enter
xchg
mov
or
into
sub
mov
imul
js
mov
sbb
mov
sar
inc
aaa
xchg
cli
xor
push
or
data16
inc
int3
lods
stos
sub
mov
push
mov
pop
mov
incl
fistpl
call
inc
sahf
jno
lea
jle
and
loop
pop
push
mov
sbb
out
mov
adc
cwtl
xor
ljmp
push
cld
or
jp
gs
aas
mov
mov
shlb
cs
mov
sbb
cli
jmp
fcmove
xchg
push
and
out
xor
testl
arpl
decb
call
je
call
pop
push
jnp
push
fwait
mov
adc
mov
lret
add
jge
and
mov
ret
and
shll
fdivrl
rol
pop
fldcw
stos
stos
pop
sar
not
in
cmp
imul
lock
sub
test
cwtl
pop
push
out
mov
lods
jmp
andl
pusha
adc
fidivs
dec
jns
jo
xchg
out
jmp
inc
mov
jbe
sub
adc
sub
and
outsb
jecxz
push
jbe
adc
roll
mov
xchg
clc
add
loopne
dec
movsb
jle
jmp
ret
test
sbb
call
test
push
repz
jmp
fistpl
mov
cmp
dec
inc
pushl
fs
push
inc
and
jle
push
in
outsb
mov
push
or
hlt
dec
stc
popf
call
xchg
cwtl
mov
cmp
pop
lods
sbb
jbe
push
and
ljmp
and
popf
out
sbb
adc
orb
das
jl
pop
pusha
xchg
xor
xchg
sub
int
inc
xor
add
popf
dec
xchg
sbb
jno
nop
and
fwait
bound
adc
clc
adc
faddl
pop
idivl
add
xorl
addr16
lret
je
xchg
ljmp
loop
ja
imul
test
sbb
mov
jno
jnp
ret
dec
sub
outsl
inc
lock
cmp
loope
fcoms
push
sbb
stos
pop
lds
sbb
or
mov
stc
pop
add
push
notl
inc
xchg
mov
loopne
pushl
mov
xchg
sbb
rcr
xchg
test
sti
and
adc
pop
ja
xor
sbb
adc
inc
or
xorl
adcb
lcall
and
fimuls
hlt
sub
lock
out
jns
sbb
and
and
inc
les
loopne
xor
dec
pop
sbb
iret
mov
push
mov
test
push
es
inc
movsb
sbb
sbb
xorb
mov
push
imulb
cld
mov
or
and
inc
mov
mov
or
jle
mov
fdivr
xchg
test
icebp
pop
int
pop
jg
jmp
push
jp
outsl
lahf
into
mov
xchg
push
and
in
mov
rolb
out
and
or
inc
dec
mov
out
or
cmpsl
dec
addr16
fsts
sub
int
out
xor
add
jne
out
cld
mov
add
push
scas
loope
mov
dec
cmpsl
in
push
and
xor
dec
fisubrs
mov
ljmp
mov
nop
sti
fidivrl
cmpsl
jbe
sbb
lret
and
cld
add
daa
sbb
sbb
add
sub
xchg
fistl
or
dec
jb
cmp
push
mov
mov
pop
js
sahf
cmp
adc
cwtl
or
not
mov
sysret
scas
scas
idiv
std
or
loop
mov
and
push
jb
imul
push
scas
mov
pushf
mov
daa
mov
arpl
adc
xlat
xor
sub
test
repnz
andb
subb
inc
push
adc
in
cs
lea
xor
ljmp
cmp
in
iret
sbb
pop
sub
stos
daa
stc
add
push
mov
subl
ja
jmp
in
cmp
call
inc
sbb
and
das
jo
in
inc
icebp
inc
adc
pushl
repnz
loop
ret
arpl
push
clc
sbb
pop
enter
lods
test
inc
aad
mov
pop
addl
dec
pusha
adc
rcr
adc
jo
popf
int3
in
pop
mov
xor
cwtl
sbb
aad
in
xor
add
call
popa
aad
adc
mov
lahf
das
and
xchg
mov
push
jae
popa
mov
call
cmp
push
jo
and
fildll
xor
mov
sbb
js
fcmovnb
lock
sub
mov
lods
bound
xchg
mov
mov
xchg
fcomps
xchg
aad
dec
push
and
dec
mov
xorl
test
inc
scas
sti
add
mov
xlat
add
jmp
mov
sar
push
push
jo
movsl
leave
lea
call
mov
repnz
and
push
inc
dec
sbb
xchg
out
sbbb
stos
cli
out
push
decl
and
mov
or
jns
inc
jmp
xchg
xor
fcoms
mov
or
xor
mov
and
cmp
cmc
mov
out
aas
push
negb
scas
mov
out
xorl
fadds
cwtl
or
ss
cmc
pop
dec
pop
mov
nop
pop
shrb
push
xchg
adc
or
fdivl
ljmp
sub
rcrl
adc
ljmp
jge
cmp
mov
push
gs
inc
cmc
ret
pop
decl
mov
sbb
cmp
je
shll
pop
push
scas
xchg
popf
or
cmp
aad
sbb
mov
aam
rcrb
out
test
jg
xchg
xor
mov
push
cld
add
jne
jbe
push
inc
out
dec
sbb
dec
pop
and
loop
mov
jge
call
pop
out
aas
xchg
jo
imul
loop
mov
jne
pop
neg
mov
push
mov
pushf
push
push
test
test
dec
ds
pop
decl
xchg
mov
xor
out
call
cmc
mov
pop
sbb
ds
push
pop
dec
pushl
push
lock
rolb
incl
sub
ja
ret
outsl
xor
xchg
mov
scas
pop
jge
call
sbb
ljmp
je
xchg
mov
inc
jle
jmp
mov
aad
add
std
fldt
and
test
xor
mov
stos
addr16
cmpsl
das
rclb
cltd
sbb
or
mov
data16
cltd
repnz
sti
mov
mov
arpl
mov
add
test
sbb
icebp
out
push
decl
cltd
xor
call
and
outsl
std
out
scas
bound
jnp
xchg
or
pop
int
cmp
shll
shlb
cld
inc
ljmp
fiadds
clc
insl
or
xor
les
lock
and
rcr
inc
cmpsl
cld
sub
inc
jl
pop
dec
mov
movsb
call
sbb
icebp
sti
shl
incl
lods
xor
aad
nop
or
addr16
ja
mov
ficoml
movsl
mov
push
jmp
sahf
cltd
je
lret
mov
mov
jge
stos
cltd
jbe
add
and
sbb
iret
out
test
pop
add
mov
pop
fisttpl
fdivp
adc
es
push
or
mov
xchg
push
and
mov
cli
lcall
dec
fnstenv
incl
jnp
sbb
inc
andl
std
xor
pop
imul
scas
jg
divb
inc
xchg
js
adc
mov
out
int3
insb
outsb
mov
std
imul
sahf
adc
jecxz
add
les
insl
sub
jge
loop
cmp
push
cmpsl
clc
or
jns
icebp
std
push
mov
mov
dec
inc
iret
pop
std
mov
scas
dec
mov
xor
mov
mov
inc
sbb
pop
add
fsubrl
stos
xchg
jae
fistpl
inc
sbb
imul
mov
jbe
clc
xorl
imul
jmp
pop
iret
in
and
xchg
jge
lcall
sahf
clc
inc
rorl
clc
fists
mov
sub
ret
jbe
fcompl
or
loopne
add
cmp
lret
fstpl
movsl
lods
fs
repz
push
dec
ljmp
in
push
add
fstl
and
test
rcrb
cltd
push
lcall
cmpsl
push
add
mov
mov
ja
pop
or
add
adc
cmpsl
mov
push
cmc
aad
fcmovnb
sbb
jmp
xlat
sti
or
fs
movsb
mov
mov
pushl
push
gs
pop
inc
sub
lcall
push
or
jbe
in
shlb
mov
data16
and
xchg
lcall
popf
pop
movswl
ljmp
pop
cmpsl
not
and
cli
ret
jo
or
jno
sbb
fdivs
xchg
and
xorl
push
int3
sub
mulb
sub
mov
jbe
xor
jbe
lcall
sub
shll
cs
and
xchg
mov
cwtl
dec
cmp
sbbl
incl
push
pop
leave
inc
sti
push
sbb
aaa
lret
dec
mov
ss
je
mov
sti
sahf
inc
lret
int
fcomps
push
pop
xchg
cltd
cmp
add
or
and
mov
push
jnp
xor
push
pop
sbb
lcall
cltd
aaa
dec
cli
jne
mov
insl
adc
xchg
xchg
mov
inc
nop
sbb
pop
and
adc
dec
pop
lods
cs
mov
mov
cld
out
push
fdivr
nop
and
mov
loop
adc
aad
add
pop
and
mov
fsubs
mov
lock
decl
cmp
push
xchg
call
stos
js
sbb
adcl
xor
mov
inc
mov
jno
inc
decl
movsb
dec
push
mov
jmp
jp
mov
push
or
in
call
xor
bound
call
imul
jbe
push
gs
fs
imul
jecxz
sbb
decl
out
lds
sbb
lods
xchg
xchg
testb
or
fxam
insb
ljmp
popa
adc
sbb
rclb
outsl
sbb
or
and
idiv
aam
mov
nop
mov
cwtl
inc
xchg
push
jle
popa
cld
test
repnz
dec
out
inc
std
add
push
jmp
mov
push
lods
dec
outsb
cmpl
in
jno
cmp
dec
adc
incl
xor
je
jl
stos
push
push
call
mov
add
xor
push
mov
ret
mov
mov
lret
sub
daa
ljmp
jo
push
iret
cmp
out
xchg
jne
decl
div
call
out
fimull
push
lret
ja
sbbl
out
mov
xor
xor
xchg
int3
mov
xlat
subb
jecxz
inc
push
sbb
xchg
decl
push
cs
stc
shll
mov
or
xchg
fisttpll
dec
sub
test
sbb
jne
lea
pushl
sub
or
add
repnz
dec
incl
add
popf
shll
lods
pop
incl
bnd
imul
xor
lret
mov
jae
push
decl
sub
lock
jno
ja
es
iret
repnz
mov
cmc
lock
mov
pushl
ss
xlat
or
mov
pop
call
xchg
cmpsl
adc
and
or
and
jns
mov
outsl
out
mov
pop
test
out
repnz
imul
add
jne
incl
jo
or
xchg
inc
sub
push
stc
pop
inc
in
adc
add
adc
bound
fwait
dec
pop
clc
mov
ret
leave
les
jecxz
notb
cwtl
pop
push
mov
gs
add
push
inc
movl
cmp
arpl
mov
jmp
cmp
das
add
adc
mov
jmp
lods
fcomp
mov
jbe
adc
repz
and
lcall
sbb
rorb
jbe
pop
mov
testb
pop
aas
cmp
int3
sti
jle
lcall
mov
fcmovne
lods
icebp
stos
pop
call
imul
call
adc
mov
stc
adc
pushl
movsb
cmp
push
or
jo
mov
test
xchg
loop
add
or
cli
and
jb
call
mov
mov
push
dec
repz
and
push
add
jecxz
lock
and
pop
adc
sub
insb
push
in
cmp
inc
mov
xor
pushf
push
fiadds
cmc
or
push
or
jnp
add
mov
xor
fimuls
add
push
pop
pop
and
out
add
test
adc
or
ret
aaa
sub
ja
and
shlb
sub
lret
jmp
loop
sub
xchg
ret
push
lret
imul
jmp
push
sub
jecxz
insl
xchg
xchg
dec
mov
jmp
mov
popa
pushl
and
lcall
sub
xor
imulb
mov
andb
orl
dec
stc
out
out
icebp
sub
jmp
in
mov
or
sub
pop
sub
and
mov
push
and
aaa
cld
decl
sbb
mov
movsb
stos
les
dec
adc
push
nop
out
subl
clc
testb
or
add
test
xor
mov
mov
adc
mov
clc
cli
idiv
fnstcw
fdivr
xchg
pushf
js
inc
lock
popa
jmp
inc
mov
add
sub
lea
sub
fcoms
and
incl
or
pop
pop
fisubrs
xor
push
sbbl
sub
lcall
pop
mov
ret
jge
push
rcrb
cmpsl
pop
lods
push
jb
mov
data16
lcall
insl
repnz
test
movsb
shrb
cmpsb
jg
insb
push
decl
add
xchg
mov
mov
jno
icebp
jmp
add
nop
movaps
xchg
rol
sub
int3
mov
pusha
xchg
mov
test
sbb
sub
inc
leave
ds
mov
and
icebp
jno
pop
cmp
push
or
imul
jns
insl
leave
arpl
add
call
add
lahf
mov
adc
out
or
push
ljmp
mov
dec
and
mov
cmp
incl
jmp
fdivs
mov
sbb
std
pop
cs
mov
jmp
nop
jl
cltd
popa
xor
fdiv
fsub
mov
and
ja
leave
jecxz
in
adc
loop
mov
addb
cmp
mov
adc
rorb
jp
ja
fstl
in
adc
mov
stc
arpl
and
pop
push
test
lock
inc
out
push
dec
ds
call
daa
jle
cmpsb
or
popa
into
cld
test
std
dec
mov
dec
jnp
sub
movsl
mull
mov
pushf
test
addb
sbb
push
mull
and
add
sbb
and
mov
pop
out
mov
cwtl
mov
ljmp
leave
cmp
jo
cld
sub
cmc
andb
lcall
push
adc
ja
cmpsl
mov
lret
leave
dec
mov
or
xchg
ja
in
push
fimuls
xchg
je
jae
inc
dec
out
adc
jns
aas
scas
jp
adc
adc
test
push
iret
xchg
int
xor
outsl
cmp
push
mov
ja
pop
cwtl
inc
in
clc
mov
xchg
stc
push
fnstcw
incl
push
or
and
mov
mov
mov
mov
jg
mov
loop
xchg
jmp
roll
fdivs
push
adc
ljmp
into
push
in
lahf
mov
loope
pop
xor
add
lods
cmp
sbbl
or
dec
add
mov
incl
hlt
cmp
jecxz
adc
xor
jb
xlat
loope
jl
mov
ficomps
mov
sbb
out
sti
js
mov
jmp
pop
dec
add
jae
lcall
sbb
mov
or
lods
andl
push
mulb
adc
xchg
mov
mov
pushf
cmp
adc
xchg
push
pop
sti
sub
dec
decl
roll
push
push
mov
nop
xchg
test
xor
dec
and
pusha
dec
jno
pop
ja
stc
imul
orl
ficompl
icebp
and
mov
std
mov
js
push
pop
in
int3
aad
adc
mov
mov
clc
sbbb
push
mov
enter
ret
and
sbb
mov
xor
and
insb
and
sbb
mov
sbb
dec
aaa
sub
js
repnz
xchg
mov
mov
bound
icebp
xor
dec
roll
jmp
add
mov
and
cmp
lret
mov
cmp
jle
imul
or
xchg
push
and
mov
lods
dec
sub
mov
add
push
enter
sub
jne
jae
nop
pop
inc
in
je
sub
and
pop
fwait
ret
mov
gs
push
pop
dec
and
repz
sbb
dec
pop
lahf
pusha
loope
call
mov
roll
push
mov
jns
jmp
sbb
mov
jne
pushf
adc
aam
fistps
inc
sarl
decl
stos
ficomps
jns
shll
in
call
cltd
cmp
cmpsb
dec
jge
push
and
decl
cmpsb
push
inc
dec
int
pop
movsb
lds
adc
ljmp
mov
pop
mov
ret
jns
clc
out
xor
mov
jg
repnz
push
add
arpl
fstpl
sub
mov
lret
xchg
sbb
lea
mov
xor
pop
jbe
jo
cmpsl
rclb
daa
cmp
jbe
sbb
out
mov
movsl
dec
jbe
xorb
sbb
push
xor
mov
xchg
ja
mov
mov
std
inc
fwait
jno
repnz
lods
xor
jo
xor
mov
pop
pop
cld
dec
js
nop
sahf
sbb
push
jmp
jnp
xor
pop
dec
push
or
mov
nop
lods
outsb
shlb
ja
lds
mov
call
fisttpll
jbe
insl
mov
cmp
pop
std
repz
dec
test
jbe
movsl
roll
call
inc
push
das
cltd
cs
adc
out
adc
scas
xor
jmp
pop
add
ficoml
dec
xchg
xor
sbb
iret
push
pop
lret
das
mov
inc
mov
or
xor
sbb
sbb
dec
jns
sbb
push
testb
sbb
xchg
jbe
mov
inc
sub
sub
inc
cmp
ret
insb
rorl
push
mov
xlat
fnop
sub
je
jge
mov
hlt
mov
int3
sub
fildl
push
push
adc
push
outsb
mov
inc
mov
cmpsl
test
pushf
add
lea
mov
sub
add
mov
mov
pop
out
xlat
mov
jno
hlt
and
cmp
push
arpl
pushl
mov
mov
dec
inc
test
push
sbb
loop
ret
add
jmp
lcall
data16
jo
push
clc
xchg
pop
mul
mov
or
push
test
call
mov
icebp
hlt
adc
insb
in
ja
in
sbb
sbb
xor
rolb
xchg
fldenv
decl
jae
jo
fs
insb
add
cmp
cmp
in
sub
add
jae,pt
push
mov
sbb
fdivrl
xor
outsb
call
xlat
or
add
cmp
and
pushl
mov
cmp
jne
cmpsb
pop
adc
sbb
and
in
pop
push
push
lcall
mov
into
xor
xlat
ret
mov
or
subb
sti
sbb
and
data16
call
stos
pushf
sti
jg
outsb
pop
aaa
in
xchg
cmp
icebp
sbb
jge
aam
test
test
nop
aad
pop
in
ss
mov
sbb
cmc
les
jns
call
ds
decl
js
ja
lods
sub
mov
enter
jle
push
out
xchg
add
cvtps2pd
add
or
movsb
ficoml
jmp
test
sbb
popf
push
sbb
outsb
out
sti
jns
repz
scas
int3
sub
leave
daa
add
loope
insl
aad
fildll
out
fstl
mov
push
and
nop
popf
flds
in
pop
and
sub
add
adc
mov
pop
bound
cmc
lret
and
icebp
and
mov
aas
jne
xor
es
movsb
adc
mull
enter
sub
incb
fnstenv
inc
bound
ljmp
repz
push
adc
test
and
mov
stc
les
or
xor
jle
or
fimull
arpl
outsb
daa
mul
rorl
mov
jle
mov
push
dec
or
ljmp
cli
test
sbb
inc
xchg
pop
sub
jno
stos
add
pop
inc
adcb
cli
xor
testb
rcrb
cmpsb
outsb
mov
xchg
jbe
lahf
lods
inc
and
jmp
xchg
test
or
das
cwtl
addr16
lods
or
popf
pop
aaa
mov
rclb
decl
nop
movsl
lea
push
fisttpl
sar
pushf
jb
cwtl
push
mov
lcall
jbe
or
stos
mov
fwait
ret
and
lock
xor
fdivrp
stos
pop
sbb
jae
push
and
mov
jns
fisttpll
call
popa
ja
xor
adc
push
jne
sbb
aam
pop
fwait
xchg
lcall
in
cli
dec
adc
mov
das
bound
stc
adc
mov
clc
pop
decl
cmp
call
and
mov
xor
add
in
ud0
cmp
and
jmp
push
mov
cli
clc
xchg
cmpsb
fidivrl
ret
adc
inc
cltd
mov
aaa
loopne
mov
inc
push
xchg
mov
fisubl
call
mov
dec
pop
add
jge
mov
inc
daa
cmpsl
jle
aaa
dec
inc
xchg
repz
sbb
cmp
jecxz
cmp
or
lret
movsl
decl
lret
cmc
xor
std
test
scas
mov
addr16
mov
or
xor
and
leave
jmp
xorb
aas
dec
cmpsb
pop
or
or
ja
mov
mov
pop
out
fs
adc
adc
leave
and
out
addr16
test
jne
hlt
cli
mov
mov
je
clc
idivl
mov
leave
orb
pop
and
and
and
jne
cmp
xlat
fbstp
xor
mov
int3
jb
adc
jns
call
arpl
jo
xchg
std
int
sbb
inc
test
inc
ss
notb
nop
lods
dec
ljmp
rorl
mov
popa
clc
mov
out
sbb
and
shll
adc
call
imull
rcrb
sbb
pop
test
sub
xor
mov
mov
cmp
xchg
daa
decl
cmp
cs
rolb
lods
orl
test
ljmp
dec
and
pop
push
mov
mov
jg
jle
out
mov
cmpsl
mov
not
push
stos
rolb
and
icebp
repnz
out
loopne
xor
daa
test
lret
push
cwtl
sbb
cli
pushl
xorl
inc
mov
jnp
test
pop
add
pop
add
jmp
inc
mov
sbb
jmp
dec
mov
hlt
pushf
mov
sbb
repnz
or
mov
incl
pop
lret
lret
and
xor
push
scas
xchg
dec
push
loope
aas
ljmp
ficoml
lods
sbb
mov
inc
outsb
iret
pushf
add
insb
mov
into
fistl
sub
push
je
fimull
test
push
jle
add
inc
mov
or
jnp,pt
mov
dec
inc
cmpsb
sub
ljmp
mov
outsb
loop
cmp
cld
xchg
adc
sbb
lcall
sbb
adc
jbe
out
ret
sti
mov
lcall
je
push
xor
add
mov
imul
jle
insb
add
inc
repnz
pushl
and
out
and
bound
icebp
push
rcrl
or
das
sbb
push
ljmp
js
mov
lods
inc
sahf
std
hlt
mov
jmp
cmp
mov
adcb
cld
notb
xchg
clc
inc
faddp
adc
loopne
mov
push
jp
mov
int3
jle
mov
inc
in
popa
mov
pop
pushf
ja
pop
cmc
or
dec
pop
mov
outsb
xchg
clc
test
xor
cmp
cmc
imul
xlat
mov
testl
add
gs
push
sbb
mov
mov
out
adc
pushl
int
or
mov
pop
ficoms
cmpsl
iret
fstpt
mov
inc
cmpsl
cmpsb
mov
leave
pop
sub
sbb
ds
out
jg
xlat
mov
loop
xchg
inc
imul
sub
or
std
cs
je
mov
adc
cmc
push
aad
addr16
pusha
movsb
cld
mov
push
mov
xor
xchg
push
add
push
jp
std
in
mov
push
int3
sub
push
aaa
mov
mov
xor
inc
mov
sahf
sub
leave
fisttpl
or
mov
ficoml
jg
icebp
xchg
std
mov
scas
clc
sub
or
idivl
in
pop
inc
or
and
xor
inc
and
dec
or
in
xchg
pop
lahf
scas
test
mov
adc
pusha
in
mov
call
insb
push
sub
mov
mov
sub
mov
or
inc
dec
adc
xchg
mov
ja
mov
xor
cmp
jbe
push
or
or
xchg
outsb
xchg
sub
push
or
cmp
rclb
pop
loope
idivb
xor
adc
jo
fidivrl
and
or
imul
repnz
jge
xchg
hlt
pop
stc
jl
clc
mov
lret
xchg
xor
adc
repz
cmpsl
mov
mov
push
inc
push
add
and
cmc
mov
xchg
stos
ja
push
mov
test
incb
push
ret
inc
lea
xchg
repnz
rolb
in
mov
sub
rolb
mov
mov
mov
xchg
in
movsb
push
fmuls
mov
ss
loope
or
test
mov
ret
imul
and
dec
xor
jb
xor
push
mov
and
sbb
fcomps
adc
cs
aas
adc
dec
jnp
or
adc
jbe
push
and
outsb
daa
dec
hlt
jnp
mov
mov
mov
push
arpl
stos
repnz
mov
jl,pn
mov
add
in
lds
jo
xor
int3
pop
cwtl
or
sub
cmc
mov
jl
mov
mov
xor
adc
fistl
pop
roll
fcos
lock
ljmp
mov
call
int
fs
das
mov
mov
sbb
jmp
incl
call
push
push
in
jns
add
pop
push
jg
jecxz
lods
lret
mov
mov
imul
jb
lods
call
xchg
arpl
jmp
or
cmc
mov
stc
xchg
sub
mov
mov
pusha
insb
movsl
add
pop
out
cmp
popf
test
test
or
dec
mov
add
lds
addr16
add
xchg
cmp
lahf
fdivrp
inc
fnstsw
push
and
idivb
rol
int3
mov
xlat
jp
sarl
pop
daa
inc
stc
aam
sbb
dec
add
push
fstl
mov
mov
gs
aaa
stos
fdivrs
pop
xor
mov
leave
mov
add
mov
sbb
ss
sub
call
insb
pop
popf
xchg
aaa
sub
test
loope
scas
push
std
int
nop
and
cmpb
cmp
movsl
push
in
push
dec
mov
add
addr16
jmp
or
sarl
cmpsb
push
scas
cmpsl
lret
mov
sub
lcall
je
into
int
pop
dec
outsb
movsb
inc
sbb
jg
mov
std
jle
or
fisttpll
je
adc
mov
cmp
xchg
pop
bound
out
fs
movsl
pushl
int3
sub
dec
xor
or
bound
fcomps
movsb
jmp
repnz
fs
jecxz
lock
leave
mov
push
stos
inc
pop
push
ljmp
xorb
add
cmpsb
mov
inc
cld
call
mov
dec
pop
out
pushl
test
dec
jbe
push
cmp
es
push
or
xchg
jmp
sbb
popa
inc
lds
imul
jb
ss
sbb
fcomps
mov
adc
loop
sbb
sahf
decl
mov
lret
decl
cmpsb
scas
scas
and
xor
scas
out
mov
test
test
mov
xchg
call
pop
xchg
repnz
out
jo
test
cmp
das
sbb
bound
out
pop
adc
jo
mov
fcomps
mov
cmp
stc
arpl
inc
or
cmp
out
repnz
call
jb
sub
mull
outsl
cmp
decl
ljmp
test
lock
sbb
adc
push
inc
sub
xchg
ja
movsb
outsb
int
inc
cmp
xor
pop
shll
je
dec
jb
sbb
xchg
jo
and
add
mov
imulb
inc
add
test
incb
insl
repnz
xchg
outsb
pop
out
mov
movl
daa
jae
dec
loop
cltd
sub
push
mov
es
and
adc
or
in
sub
pop
ss
fdivrl
outsb
sti
sub
fmuls
mov
es
dec
add
sar
push
push
xchg
pop
call
inc
and
adc
xlat
jl
cmp
pop
sub
push
jp
ljmp
push
call
aaa
sbb
sbb
aad
jbe
push
jmp
ljmp
cmpsl
or
or
ss
sahf
xlat
fists
cmp
mov
fyl2x
jmp
adc
mov
xorl
adc
push
ret
rorl
xor
add
subb
iret
ficomps
mov
bound
jno
cmpsl
jmp
incl
mov
pop
addr16
imul
rorl
xor
ss
jb
sub
pop
push
sub
jmp
movsl
cmpsb
or
xor
idiv
orl
jbe
pop
bndldx
shll
sti
cmpsb
subb
shlb
or
push
cmc
int
adc
shrl
sbb
xchg
add
in
sub
rcr
xor
push
mov
mov
pop
xchg
mov
das
lds
mov
ret
add
push
mov
lock
neg
mov
ja
cwtl
pop
out
sarb
xor
push
aaa
inc
stos
test
sub
lds
ss
push
xor
add
fs
adc
dec
neg
rolb
push
cmp
add
mov
out
pushf
pop
roll
iret
push
in
in
push
inc
adc
fwait
xchg
mov
clc
mov
ljmp
aas
cmc
rcr
shrl
mov
popa
and
push
sbb
incl
dec
cmpl
aaa
std
jbe
inc
ret
mov
aas
mov
push
pushl
lods
or
mov
call
std
jne
sub
mov
pop
or
dec
inc
jbe
repnz
pop
incl
les
sub
mov
sub
or
adc
xchg
mov
sti
jp
push
mov
mov
dec
ret
mov
or
in
xor
je
xchg
ds
incl
sbb
roll
popa
stos
jae
sbbl
lahf
out
je
sti
ss
sub
push
incw
adc
call
and
and
jae
outsl
add
invd
sar
enter
xor
in
fisubs
sub
xchg
daa
mov
xchg
out
iret
jmp
mov
cli
test
jg
sbbb
addb
test
sarb
cmpsb
jg
leave
lcall
mov
std
idivl
jmp
clc
mov
mov
cltd
inc
ss
jne
dec
add
dec
daa
add
jbe
inc
jmp
decb
mov
adc
or
dec
arpl
in
cld
xchg
or
addl
testl
xor
loopne
in
push
xlat
data16
xor
out
xchg
or
subb
xchg
dec
dec
sub
scas
adc
or
ret
or
ret
mov
mov
outsb
jmp
xchg
pushw
xchg
lret
cmp
les
cmpsb
push
and
ljmp
imul
cmpsl
and
pushf
das
xchg
cmpsb
mov
outsb
lcall
shrl
jecxz
adc
dec
push
and
pushl
pop
jl
jne
inc
in
mov
mov
pop
and
sbb
xor
insl
or
pop
xor
aas
adc
out
out
hlt
lods
mov
lret
stos
das
scas
and
or
or
aad
das
fnsave
mov
test
das
jg
mov
out
cmp
sub
lahf
sub
repz
das
and
fcoms
pop
sbb
add
and
dec
push
push
or
xor
ss
pop
cmp
dec
sbb
adc
mov
movsl
and
and
out
orb
movl
idivl
loopne
add
dec
mov
je
dec
add
xor
adcb
push
cmp
incl
fs
loope
push
pop
mov
call
inc
mov
in
in
sub
push
lret
test
in
jl
pusha
push
out
mov
xor
sub
pop
decl
jno
movsl
aam
das
jbe
add
pop
test
lcall
jle
je
out
mov
mov
xor
mov
xor
mov
and
into
jbe
int
stos
cmc
mov
sysenter
divl
inc
test
cmp
push
pop
mov
call
xchg
pop
adc
dec
inc
outsb
shll
mov
jo
jmp
jne
test
in
call
rcll
out
inc
outsb
rorl
or
inc
or
xor
cmp
mov
clc
es
sub
aad
imul
ret
sub
das
incl
jne
adcb
push
repz
push
lcall
mov
dec
cli
xor
dec
xor
arpl
mov
fsubrl
sub
notl
xchg
in
repz
fs
imul
inc
adcb
jecxz
xlat
insb
dec
call
test
mov
shl
inc
gs
std
roll
sbb
xor
xorl
inc
insb
mov
push
aaa
sbb
cmp
lods
out
fists
test
outsl
popf
pop
push
repnz
sbb
das
mov
insb
inc
mov
loop
fnsave
cltd
scas
sti
add
mov
dec
or
aaa
lcall
bound
mov
inc
mov
shrl
cs
daa
pusha
out
or
mov
in
and
call
notl
in
add
mov
test
pop
add
pop
sbb
adc
pushf
rolb
fmull
das
pop
pop
pop
incl
inc
mov
test
lea
xor
jae
loop
lods
movsb
outsb
fists
aas
je
sub
sub
movsl
pop
xchg
mov
scas
cmp
cli
add
mov
jo
imul
ss
stos
lcall
push
xchg
insb
jecxz
call
mov
and
push
scas
cmc
mov
jmp
popa
xor
mov
mov
lahf
les
mov
fisubl
add
out
ljmp
mov
stos
push
lcall
int
into
sub
scas
or
fwait
aaa
test
push
inc
call
mov
jmp
ss
dec
jl
repz
pusha
lret
mov
das
sub
adc
fldenv
adc
xor
inc
lods
xlat
mov
jmp
push
das
sub
ss
into
jo
mov
cmpsb
mov
ret
and
out
xor
out
adcb
xchg
inc
mov
inc
xchg
jbe
and
mov
mov
push
xor
in
arpl
rcrl
cmp
fiaddl
nop
push
insl
movsl
mov
sbb
inc
mov
sub
fsubp
dec
sbb
movsb
dec
cmc
in
shr
mov
xchg
decl
pop
loope
jl
mov
xchg
pop
std
je
ja
sub
mov
movsl
lock
xor
add
pop
movq
xor
int
hlt
mov
inc
mov
push
aaa
gs
xchg
jbe
mov
sub
sub
mov
cltd
sar
mov
sbb
fwait
cmc
cmpsl
jbe
int3
sbb
daa
std
addr16
call
mov
repnz
ja
dec
cwtl
add
cmpsl
or
push
test
mov
pop
idivl
imul
faddp
dec
adc
cmp
add
mov
inc
inc
push
lock
repnz
mov
cld
jmp
test
sub
or
or
sub
idiv
add
aad
call
dec
dec
ss
pop
jb
xchg
repnz
add
jg
gs
xchg
cmpl
dec
add
xchg
xchg
data16
mov
mov
sbb
imul
aad
je
pushf
adc
fadd
cmp
xlat
mov
imul
fwait
mov
out
mov
inc
xchg
mov
mov
nop
mov
movsl
dec
pop
insb
adc
cmp
jns
pop
mov
push
add
out
outsl
out
movsb
dec
dec
jge
ds
sbb
jbe
add
fadd
push
es
fidivs
icebp
ljmp
repz
sbb
or
in
das
push
sub
arpl
inc
pushf
mov
pop
cltd
pop
sub
sub
mov
push
mov
push
or
mov
mov
shll
ss
or
movsw
dec
mov
mov
bnd
es
cld
jbe
sub
push
xchg
in
mov
out
xlat
jmp
repz
cmp
mov
push
dec
nop
dec
mov
push
out
xchg
pusha
ss
mov
ss
xchg
lock
jbe
js
pusha
in
pushl
jmp
in
jg
imul
movsb
jmp
movsb
nop
jo
in
lret
mov
lcallw
sub
insb
mov
and
popa
aaa
mov
add
lods
inc
stos
jbe
popf
mov
add
pop
inc
xchg
mov
ss
and
xor
mov
je
jmp
mov
stos
xlat
movsb
push
imull
push
ror
repz
test
movsb
stc
push
and
inc
or
push
jmp
test
out
jecxz
pop
inc
pop
inc
xlat
aas
adc
cmp
cmp
sub
outsb
std
call
cli
push
clc
or
push
clc
jg
jo
call
pop
sub
push
lock
movsb
xchg
nop
imul
add
push
jp
mov
movsb
mov
icebp
inc
out
je
fs
call
inc
jecxz
popa
inc
pop
inc
pop
inc
sbb
shlb
movb
ret
xor
sub
movsb
cmpsb
xchg
arpl
shlb
dec
inc
sbb
fcoms
dec
int3
dec
movl
decb
or
inc
sti
jnp
gs
sub
movl
mov
stc
iret
xor
inc
imul
xor
out
and
sbb
xor
in
jbe
test
mov
movb
adc
pop
ljmp
xchg
push
and
push
in
scas
stos
xor
stos
dec
push
sbb
push
out
fldcw
push
pop
sub
sub
or
xchg
test
xor
sub
out
or
lahf
aas
sub
or
jmp
nop
push
test
call
das
add
pushf
cmp
inc
test
mov
es
jmp
and
add
jmp
mov
ljmp
popf
adc
sub
mov
int3
call
insb
mov
notl
cs
mov
mull
mov
mov
test
sbb
mov
mov
xor
cs
jbe
jg
outsb
stos
test
iret
push
xor
cmp
mov
mov
push
movsb
adc
jmp
xchg
addr16
push
pop
and
xor
add
sysenter
aaa
mov
cwtl
imul
cmp
sub
test
adc
and
cmpsb
sub
out
jae
das
push
out
sub
in
aam
enter
sub
aad
adc
test
lcall
movsl
or
adc
ja
sub
xor
or
std
ljmp
scas
subl
xor
add
into
mov
mov
das
add
add
mov
aas
sub
xor
sub
xor
ljmp
mov
mov
pop
shrl
sub
mov
sub
movsb
aas
xchg
mov
sbb
xor
incb
call
xor
les
xor
mov
scas
pop
mov
jmp
and
sub
cmp
pop
es
xor
das
jmp
das
add
mov
mov
pop
cmp
xor
and
das
into
mov
iret
imul
pop
std
push
cwtl
sub
out
jmp
dec
movsl
cld
xchg
cmc
sbb
xor
mov
out
les
out
jmp
adc
sub
pop
and
xchg
stos
pop
xor
in
sub
push
clc
xchg
out
imul
sub
or
lcall
es
push
imul
xor
xor
imul
mov
movsb
nop
pop
xor
xchg
add
outsl
ja
sub
jmp
pop
add
das
dec
ljmp
xchg
push
mov
call
push
and
pushw
divb
xor
test
cli
xor
movsb
xchg
mov
xor
mov
jmp
sub
sub
stos
mov
sbb
xor
or
stos
inc
shll
and
push
std
sahf
jmp
sbb
mul
sbb
call
jmp
pushl
popl
pushf
mov
pushl
ret
pushl
pusha
movb
movl
mov
lea
jmp
mov
pusha
add
cmp
call
pushf
lea
jo
pushf
pushl
popl
pusha
push
pushl
ret
repnz
movsb
addb
sub
or
lret
imull
fisubrs
addr16
or
add
or
or
add
or
jns,pt
stos
push
mov
push
mov
adc
adc
mov
inc
lret
in
jo
lret
jbe
push
sub
out
ds
cltd
push
xorl
jg
bnd
ret
xchg
sub
loop
cmp
enter
repz
stc
or
push
stc
mov
add
lea
je
clc
cmp
jmp
pushl
popl
pushf
pushl
ret
push
pusha
lea
jne
call
mov
xchg
out
fiadds
shlb
aad
fisttpl
pmaxsw
add
loope
inc
js
data16
dec
fwait
std
scas
or
dec
sub
cmp
testl
rorb
pop
popf
pcmpeqw
es
xor
mov
sbb
xchg
pop
adc
and
aam
pop
fstpt
ret
test
flds
sbb
jmp
out
adc
out
sbb
out
adc
aas
addl
stos
mov
not
call
xchg
mov
pushf
xchg
lea
mov
pushl
not
push
movzbw
mov
pushl
pushl
ret
ja
sub
jbe
pop
xchg
dec
mov
je
cld
ljmp
sub
pushf
in
shl
fildll
shll
loopne
fidivrs
je
js
jns
xchg
jp
pop
rorb
mov
xor
add
into
repz
fsubrl
ja
addr16
imul
push
cmpl
out
ss
adc
push
fsubr
aas
pop
or
mov
xor
les
push
scas
push
scas
mov
adc
cli
xchg
mov
fcos
clc
cmp
jbe
stc
mov
xor
mov
mov
testl
cmp
mov
jbe
idiv
cmp
cmp
mov
ja
ja
mov
mov
inc
das
pop
test
xchg
data16
push
imul
lds
and
mov
stos
jle
lcall
into
repz
std
mov
ds
leave
push
orb
xchg
dec
mov
push
mov
int3
or
mov
ljmp
adc
ror
adc
imul
stc
xor
and
push
mov
shrd
jno
mov
dec
pop
jns
mov
mov
mov
jo
jae
mov
jge
jge
fs
adcb
sub
iret
push
push
pushf
lea
jne
pushf
push
pusha
jmp
clc
ror
cmp
push
add
pushf
pushf
jmp
pop
lea
lea
lea
pusha
call
ja
cmc
clc
jmp
movl
pushl
lea
jmp
stos
pushf
pusha
pushf
lea
jmp
lea
ja
pushf
lea
jb
clc
cmp
cmp
pusha
cmpb
pushl
mov
call
mov
xchg
aam
rolb
rolb
or
dec
mov
ds
jmp
add
in
sti
daa
clc
sbb
push
clc
lcall
arpl
add
add
cld
jecxz
push
hlt
es
jp
into
push
xchg
sub
inc
ret
or
enter
mov
rcrb
jb
push
out
jl
pop
adc
add
lahf
jecxz
jp
mov
mov
cld
xor
xchg
mov
into
add
xor
pop
fxch
add
jl
pop
imul
lods
mov
add
pop
or
std
stc
add
add
add
cmc
arpl
add
or
out
pusha
push
lea
jne
jmp
pushf
cmc
pushw
popfw
jmp
rol
push
jmp
add
jmp
mov
fwait
test
push
stc
sbb
adc
adc
sbb
jb
scas
mov
cmpsl
pop
xor
jg
inc
xor
mov
mov
adcb
jge
jp
jns
je
je
call
shlb
jno
lahf
pushl
lea
jne
setge
pushf
not
mov
movw
pushl
mov
lea
jmp
call
pushf
push
inc
lea
call
not
clc
rol
call
xor
stos
addb
mov
push
mov
fs
stc
gs
sarb
repnz
xor
test
insb
mov
rclb
pop
mov
push
inc
outsl
cmpb
dec
pop
test
push
xchg
arpl
xchg
stc
mov
pop
cltd
lcall
bt
not
pushl
mov
stc
ror
call
lea
pushf
jmp
lea
je
jmp
mov
pushf
pushf
pushl
ret
popf
notl
loope
loopne
in
xor
cmp
xor
sbb
and
mov
sub
push
push
repz
std
and
cltd
push
pop
xchg
dec
and
fxch
mov
dec
mov
lods
ret
push
rcrb
daa
mov
xchg
mov
mov
mov
mov
mov
mov
shl
dec
xchg
gs
xchg
cmp
mov
pushf
test
pushf
lea
je
stc
cmp
add
pushf
cmc
cmp
stc
cmp
pushf
mov
mov
lea
jb
pusha
lea
jmp
push
lea
je
jmp
mov
push
pusha
test
cmp
test
pusha
call
jp
lods
addb
mov
push
xchg
lcall
loop
jo
cmp
inc
pop
test
repz
hlt
mov
sbbl
scas
mulb
popf
sbbb
lcallw
gs
jge
popa
xchg
aad
xchg
push
movsb
inc
in
fisubrs
lret
sub
pop
int
jmp
popa
scas
ret
or
jne
jne
cmp
loop
pop
fdivrs
loop,pt
loopne
or
mov
dec
inc
mov
mov
ficoms
iret
pop
xchg
mov
lock
sbb
ss
cmc
push
lods
push
call
fsubl
dec
sub
mov
jae,pt
lods
addb
fstl
into
ds
in
xor
jmp
push
adc
pop
lods
push
jnp
sahf
inc
lcall
jae
outsl
xchg
arpl
fisubrl
jmp
and
sbb
mov
imul
add
out
add
push
dec
in
jl
ret
sbb
push
sub
xchg
inc
fprem1
push
fsubl
fadd
pop
inc
mov
int3
aad
xchg
ds
sub
orb
mov
lret
dec
mov
je
mov
ljmp
imul
gs
or
cs
ficompl
jmp
jecxz
addb
cmp
add
ss
out
cmp
ret
cwtl
daa
int3
mov
call
lds
mov
xor
into
stos
cmp
rcrb
adc
mov
pop
push
repz
stos
lods
push
es
cmovge
inc
imul
std
mov
inc
xchg
mov
xchg
xchg
test
movsl
mov
dec
stos
pop
movsl
push
lods
in
int
jle
mov
or
pusha
pushl
lea
jne
not
btr
not
neg
mov
jmp
pushf
movl
pushf
push
push
push
lea
jmp
cwtl
repnz
add
push
cmpb
icebp
xchg
mov
xchg
out
jno
xchg
mov
mov
imul
sahf
into
mov
jmp
sbb
jg
jp
iret
or
cmp
ret
xor
ret
jae
js
cltd
xchg
insb
pop
cmovp
scas
addb
push
cltd
push
mov
mov
insl
mov
lock
inc
pop
test
sub
fisttps
or
lods
cmc
stos
xchg
mov
sub
mov
lret
test
lcall
nop
sar
andb
lret
shlb
pop
mov
xchg
push
push
movsl
fidivl
orl
push
jne
dec
scas
addb
movsb
jge
xor
mov
out
shrb
test
xchg
jbe
mov
mov
mov
xchg
jl
xor
jp
mov
cmp
sbb
sub
pop
je
lcall
ss
lahf
adc
int
push
and
mov
jo
out
mov
std
repz
adc
inc
push
int
rcr
dec
shl
or
psllq
repnz
lock
pmaddwd
or
bound
mov
add
sbb
or
lea
mov
cmc
mov
jmp
cmpb
pusha
call
stc
stc
call
mov
lahf
mov
setns
movl
lea
je
pushf
lea
pusha
call
lahf
seto
not
lea
call
sub
pushf
jmp
jns
sub
mov
mov
push
mov
cld
add
xchg
lret
outsb
mov
xor
jb
dec
outsl
push
jg
inc
fwait
lcall
aas
stc
and
xchg
iret
and
pop
mov
mov
repnz
aaa
push
add
mov
cmpb
lods
mov
add
jge
aam
in
adc
out
shlb
jbe
jbe
js
mov
mov
mov
stos
ret
pop
pop
clc
pop
mov
mov
scas
addb
das
icebp
subps
test
ret
adc
sub
imul
ja
enter
xchg
nop
jno
add
roll
mov
ja
mov
rol
outsl
mov
movsb
sbb
sbbb
xlat
xchg
xchg
or
push
add
jno
cmp
pop
add
sbbb
mov
movsl
movsl
movsl
ret
adc
sbb
jo
and
hlt
sahf
scas
fdivrs
jae
pop
mov
mov
cmp
loope
xchg
sarb
shl
fs
je
jmp
bswap
mov
push
push
push
pusha
lea
jmp
mov
bswap
lea
pushf
mov
not
pushf
setno
movzbw
pushl
popl
pop
jmp
mov
pusha
movb
movl
call
add
mov
xchg
dec
sahf
inc
cmpsb
jno
cmc
cmp
js
jo
lret
dec
sub
xlat
fisttps
dec
pop
mov
inc
jo
jno
jb
add
sbb
stos
je
inc
adc
aas
insb
mov
sbb
add
cs
pop
xor
jmp
push
mov
rcrb
int
push
mov
data16
pusha
adc
repnz
lods
mov
enter
jge
push
inc
dec
daa
pusha
cli
lret
pushf
push
xchg
cmp
mov
pusha
andl
adc
fldl
push
cmp
aas
rorb
test
ss
jecxz,pt
into
xor
or
xchg
xchg
or
lock
cmp
ss
int3
xor
xor
and
dec
jmp
lea
jb
pushf
pushf
pushf
bt
cmp
jmp
pushf
movl
mov
pushf
movb
pushf
movl
pushf
mov
push
movw
lea
jmp
lea
je
xchg
neg
add
mov
sub
not
shr
setl
lea
not
bswap
mov
and
and
neg
shl
add
jmp
pushf
pusha
pushf
movl
mov
call
jp
inc
mov
xchg
dec
xchg
gs
cmc
rcrb
hlt
cld
sarb
std
sbb
rolb
stos
jo
inc
nop
inc
nop
dec
xchg
dec
stos
or
lret
mov
sub
pop
xchg
pop
ret
test
inc
push
adc
stos
push
test
adc
adc
pop
or
insl
push
stc
imul
cmp
cli
dec
mov
sub
xchg
lock
popf
add
les
fadd
leave
xor
cmp
xor
cmp
ss
cli
imul
shl
xchg
scas
mov
xchg
or
xor
mov
xor
aaa
lods
xor
mov
outsl
mov
pop
xchg
ret
cmpl
stos
push
lods
pop
pop
mov
stos
jmp
jno
cmp
call
cmp
jmp
jo
inc
mov
xchg
pop
mov
mov
pusha
mov
mov
ds
push
xchg
dec
and
int
jle
push
xchg
clc
mov
sarl
in
sti
sbb
or
sti
or
or
or
xor
sbb
sbb
movl
mov
pushl
popl
movb
pushl
ret
movl
jmp
jmp
fistps
xor
and
sub
movsl
imul
fs
push
sub
xchg
mov
jecxz
xor
leave
shlb
out
loop
in
cmp
cmp
leave
cmp
xchg
test
lahf
or
sub
mov
cmp
jl
test
push
fiadds
pusha
inc
cmpsl
pop
sbb
repnz
xchg
dec
pop
mov
sub
dec
xchg
arpl
lret
xchg
rorl
out
push
ret
mov
cmp
jne
or
mov
push
sub
push
xor
mov
and
cmp
popl
leave
movl
orl
jb
flds
lret
and
jmp
aas
lret
cmp
cmp
cmp
pop
and
xor
fs
je
lea
mov
movsbw
movsbw
movzbw
pushf
mov
movzbl
lea
jno
push
jmp
call
pusha
pushl
jmp
add
mov
pushf
pusha
cmp
jmp
pop
movzwl
jmp
adc
add
addb
imul
iret
adc
xlat
scas
mov
mov
sub
out
call
xor
pop
sbb
arpl
xchg
rorl
cmpsb
xchg
test
loope
orl
sub
cmp
dec
mov
shr
push
and
pop
iret
pop
fwait
push
pop
sbbb
cmpsb
cmpsl
cmpsb
mov
imul
pop
orb
aam
fldenv
and
and
xlat
and
rol
daa
dec
xor
mov
push
aad
fcmove
mov
jmp
pusha
lea
jae
jl
pusha
lea
jne
pushf
call
stc
clc
cmp
or
mov
pusha
mov
lea
je
mov
pushf
bswap
lea
not
lea
pop
jns
movzwl
call
or
mov
xchg
inc
movsl
dec
sahf
push
nop
inc
xchg
je
lea
lahf
iret
or
lret
push
mov
mov
inc
rorl
xchg
pop
repz
shl
imul
or
mov
mov
xor
aad
cmp
mov
dec
mov
mov
xchg
stos
sub
sahf
and
or
leave
movw
mov
lea
jbe
bt
mov
dec
add
stc
shld
inc
sar
mov
dec
movzbw
jmp
rol
movb
pushf
inc
pushf
ror
clc
cmp
add
call
jmp
cmc
shrd
mov
shrd
inc
dec
push
add
shr
shr
pusha
movzbw
rcl
mov
btc
add
pushl
pop
pop
call
lea
je
pusha
stc
cmp
lea
pusha
pushf
pushl
pushl
ret
and
mov
cmpsl
inc
pushf
inc
mov
xor
loope
fldcw
push
pop
inc
ret
in
cmp
cmp
xor
sbb
fildl
nop
mov
push
mov
push
push
mov
hlt
mov
out
and
dec
dec
ss
dec
fsubrl
icebp
iret
jmp
adc
cmp
xor
jecxz
sub
xor
orl
xchg
je
inc
mov
or
jae
dec
sbb
int3
shlb
das
xor
lret
ss
add
sbb
std
push
lea
je
pusha
cmp
call
and
out
daa
xor
movsb
data16
in
jne
cmp
out
scas
aad
addb
xor
lds
outsl
fstl
stos
movsb
ret
leave
aaa
pop
push
ret
addr16
bound
gs
xor
ret
roll
inc
das
repz
fistps
adc
mov
insl
push
sub
xchg
lahf
inc
mov
or
out
fists
addr16
pushf
push
cmpsl
push
pop
lods
lods
pop
mov
push
cmp
ror
add
imulb
fs
jmp
jg
xor
push
lea
push
xchg
pop
andb
mov
xor
pop
sbbb
js
and
mov
fldcw
adc
imul
pusha
jge
xor
pop
cmpsb
fisubl
dec
and
popa
movsb
popf
inc
cmp
push
xchg
movsl
pop
test
pop
adc
insl
mov
push
sub
dec
mov
sub
cltd
jg
sub
int
into
xor
aas
int
shll
xor
lret
inc
inc
cmpl
sbb
jmp
rcl
mov
shl
pusha
test
mov
xadd
sub
mov
shl
neg
lea
mov
neg
clc
mov
and
pop
stc
dec
mov
rol
mov
shr
neg
pushf
xor
lea
xchg
pusha
pusha
lods
stc
not
rol
rcl
mov
bt
rol
not
rcr
jmp
call
or
jmp
fs
cmp
push
mov
mov
adc
aaa
jae
clc
cmpsl
inc
mov
xorl
jp
jno
jno
jle
or
fisttps
repz
test
fstps
inc
lods
push
lods
push
push
scas
push
mov
rorb
and
fs
jne
setne
pushfw
push
cmc
clc
pushl
mov
call
lea
ja
call
movb
movl
movb
push
lea
jmp
lea
js
mov
bswap
pop
pushf
pushl
ret
pushf
cmpb
pusha
lea
jne
sar
rcr
sub
push
inc
rcl
mov
add
jae
neg
add
cmc
mov
pushf
movl
stc
mov
test
pusha
pushl
lea
je
jo
stc
cmp
sub
jmp
not
clc
xor
cmp
push
clc
pushl
mov
pushf
add
test
cmp
test
movw
push
jmp
movl
push
jmp
not
pushf
mov
pushf
movzbw
movl
cwtl
cwtl
movzbl
lea
call
call
lea
jb
pusha
xor
pushf
pushf
lea
call
pusha
call
or
sti
mov
mov
mov
imul
mov
es
dec
cs
pop
xchg
xchg
ja
ja
addr16
xchg
dec
sub
cltd
xor
cs
int
cmp
xor
and
fcomp
jmp
hlt
lcall
lahf
bound
ficompl
dec
mov
and
addb
cwtl
inc
mov
call
jbe
stos
lahf
bound
add
mov
gs
insl
xchg
iret
mov
ds
sbb
int3
jns
xlat
fstps
mov
mov
insl
fcoms
cltd
or
sbb
fisubl
push
mov
dec
sbb
test
jmp
cld
sub
mov
dec
lahf
arpl
mov
in
cmc
inc
push
aam
dec
push
mov
cld
jno
pop
lods
cltd
js
aad
jb
xor
mov
pop
mov
jle
sbbb
andnps
mov
pop
lcall
pop
sbb
jbe
mov
fiaddl
je
cmp
ss
jmp
sub
cmpsl
dec
dec
mov
and
sbb
adc
mov
add
mov
push
test
mov
outsl
sub
js
stos
ja
dec
mov
xchg
outsb
pop
mov
lea
rolb
inc
nop
mov
inc
mov
inc
mov
cwtl
jo
dec
jmp
mov
jmp
test
cmc
or
jmp
cmpsl
int
mov
add
add
push
fdivs
jecxz
push
xlat
movsl
xchg
fucomi
xor
mulb
hlt
and
sbb
sub
les
push
dec
xchg
push
lea
sub
push
pop
mov
push
mov
fimull
push
pop
mov
jb
pop
or
rcrl
xchg
inc
in
mov
adc
and
sbb
loopne
out
call
loope
adc
addb
jmp
mov
jmp
pusha
movzbw
call
sbb
mov
call
mov
mov
lea
jne
adc
rcr
ror
bsf
mov
pushf
jmp
add
add
add
mov
add
add
add
add
jo
push
add
mov
add
push
add
bound
add
push
add
add
add
add
xchg
sbb
sub
cmp
add
iret
fildll
mov
mov
mov
scas
push
ret
xlat
mov
addps
mov
sbb
adc
adc
cli
jecxz
loope
mov
cmpsb
test
push
mov
enter
pop
jne
adcb
fldenv
shlb
fimuls
or
sub
call
pop
push
fwait
cli
lcall
jecxz
sbb
push
in
push
loopne
push
push
sub
mov
sbb
pushf
push
pusha
lea
jne
call
adc
pushf
pushl
jmp
shl
cmc
sub
bswap
movsbw
jmp
shr
neg
cmc
mov
clc
xor
shld
bswap
shr
bt
rol
mov
cmc
test
cmp
or
jmp
lea
jae
pushf
stc
test
cmp
movb
lea
jae
bt
clc
pusha
cmp
pusha
lea
ja
not
dec
pushf
setne
inc
lea
jmp
movl
pusha
jmp
push
mov
pusha
push
mov
movsbw
not
movzbw
bswap
movl
lahf
lea
bswap
push
lea
push
pushf
call
pushf
lea
je
push
pusha
not
pushl
lea
jmp
lea
ja
call
add
add
adc
add
sbb
adc
add
add
add
add
add
add
lea
call
call
jmp
lahf
cmc
xchg
mov
pop
iret
adc
sbb
lret
sub
mov
loopne
jp
andb
out
scas
cltd
imul
in
or
pop
and
sub
and
sub
xor
sub
and
cs
cmp
inc
or
adc
cli
lea
pusha
push
lea
call
ljmp
rorb
in
jg
test
xor
mov
daa
daa
add
scas
jns
jg
jae
inc
movsl
jns
pop
cmpsl
push
movsb
pop
pop
push
mov
cmp
into
jp
or
dec
inc
pushf
iret
add
int3
sarl
and
fwait
mov
adc
in
add
cmp
jle
dec
inc
jne
jp
add
arpl
stc
dec
push
call
dec
test
lods
mov
or
ljmp
adc
mov
mov
lret
jmp
stos
pop
cmpsl
push
mov
pop
mov
jg
jle
dec
push
lcall
aaa
xchg
gs
mov
ret
js
mov
ror
std
sub
add
ss
jo
cld
cmp
mov
dec
dec
mov
pop
iret
add
in
sub
test
shr
add
shr
xchg
push
stos
inc
jne
dec
adc
jecxz
enter
fiaddl
fs
call
jmp
not
pusha
jmp
aas
push
repz
test
dec
xchg
outsb
xchg
mov
and
pop
xchg
jmp
adcb
adcb
imul
in
jecxz
cld
push
add
sti
add
add
add
pop
js
inc
ret
bound
pop
test
push
popa
mov
mov
or
mov
aam
imul
dec
adc
mov
sbb
sbb
cmp
jge
ret
filds
push
loope
jge
xor
sub
pop
push
pop
push
ret
and
popf
add
sbb
mov
aas
lods
push
pop
andl
pop
inc
mov
in
mov
pop
xlat
jns
jns
icebp
cs
sbb
adc
sbb
loopne
jmp
jo
sub
cmp
shr
insb
paddw
cmp
jmp
lods
lock
fldt
push
inc
cmp
add
adc
ss
enter
out
mov
or
imul
fnsave
jecxz
lods
bound
pop
rcrl
pushf
jbe
mov
or
mov
xchg
add
cmp
add
movsb
cli
pop
mov
mov
mov
pop
jo
movsb
nop
xchg
sbb
fstps
mov
ud2
addr16
jno
dec
test
dec
in
test
dec
dec
aad
lret
inc
arpl
or
pusha
fimuls
stc
jmp
dec
ja
fadds
lds
xor
daa
das
adc
fcmovb
out
fs
push
sub
jne
cmp
bound
jnp
inc
adc
hlt
or
mov
nop
mov
mov
xchg
pop
mov
sub
out
and
push
lds
stos
or
xor
adc
std
mov
arpl
sub
ficoms
mov
and
xchg
mov
in
divl
mov
cwtl
pop
inc
pop
shlb
movsl
jbe
adc
enter
rcrl
jnp
mov
jmp
arpl
xlat
aad
movsl
mov
push
and
gs
lahf
pop
mov
rep
mov
sub
inc
mov
jp
cmpl
orb
nop
dec
nop
push
xchg
outsl
xchg
outsb
xchg
fs
push
fcompl
jge
inc
mov
add
test
shll
stc
add
adc
test
mov
test
clc
add
bt
cmp
mov
shr
or
mov
test
cmp
jmp
jmp
movw
movl
push
pushl
popl
pusha
pusha
movb
pushl
ret
jmp
cmp
movsbw
movzbw
lea
setae
not
not
mov
push
pushf
call
push
sbb
lds
cltd
into
add
xchg
pop
sbb
sbb
sbb
inc
pop
add
iret
sub
add
sbb
sbb
sbb
loopne
xor
lea
out
adc
cmp
mov
lods
sarb
outsl
pop
mov
mov
cmpsl
xchg
or
sbb
pop
outsl
mov
push
cmpl
jbe
mov
pusha
lea
andb
daa
mov
cmp
bt
jmp
ljmp
daa
adc
adc
adc
pop
ret
adc
cs
dec
add
jae
push
repnz
inc
fistps
mov
stc
and
fisubl
shrl
fsubrl
rcrb
fidivrl
xchg
nop
subl
xchg
add
pusha
bt
cmp
jmp
mov
lea
jl
push
push
lea
ja
pusha
call
sar
add
ror
cmc
call
pop
and
addb
xchg
dec
sahf
inc
xchg
pop
lcall
pop
into
xor
xchg
jg
mov
outsb
leave
dec
bound
pusha
xchg
mov
mov
inc
sub
aas
jbe
pop
xchg
les
out
out
sub
lahf
xchg
mov
or
out
test
lods
jo
mov
xchg
xchg
insl
cwtl
fwait
cwtl
data16
xchg
test
xor
inc
mov
pop
pushf
pushf
pushf
pushl
ret
clc
or
call
mov
pusha
pushf
call
rcr
movl
call
add
shr
neg
mov
call
push
call
pop
push
movsbl
movsbw
cwtl
lea
pushf
jmp
das
outsb
adc
addb
addr16
insb
mov
mov
xchg
loop
mov
js,pn
sbb
mov
nop
inc
mov
in
fmuls
and
mov
dec
lods
popf
dec
xchg
dec
mov
inc
inc
mov
pop
mov
movl
mov
mov
out
xor
sub
push
mov
pop
mov
xor
xor
stc
sbb
push
repz
pop
jge
jnp
add
inc
lcall
lock
push
jae
in
popf
lahf
inc
dec
or
mov
shlb
and
shrb
sub
and
add
push
out
mov
push
into
cs
sbb
or
mov
scas
mov
in
xchg
fwait
pop
inc
stos
lcall
mov
mov
popf
push
int
out
adc
adc
in
hlt
adc
adc
insb
and
movb
pushl
ret
jne
call
lea
je
test
call
adc
push
mov
lea
jae
push
call
or
pushl
lea
je
inc
bsf
btc
dec
xor
btr
add
shr
movzbl
mov
btc
mov
bswap
call
jmp
lea
jne
adc
push
mov
clc
cmp
stc
or
push
lea
je
xchg
lea
mov
pushf
pushf
movzwl
bswap
movsbw
bswap
pusha
lea
not
push
jmp
movb
add
cmp
stc
cmp
movb
not
movl
setle
lea
mov
setl
mov
call
lea
jl
not
movsbw
pop
pushf
pusha
xchg
push
mov
jmp
jbe
sub
addb
xchg
dec
xchg
jbe
dec
pushf
dec
lods
push
js
pop
jb
aas
outsb
faddp
sbb
mov
xchg
xlat
test
test
pop
test
lods
ja
scas
xorl
inc
rclb
stos
adc
movsl
pop
xchg
iret
dec
xchg
fisttpl
sbb
lock
cmp
adc
mov
into
test
movsb
movsl
pop
mov
mov
jle
fnstsw
test
aam
sub
btr
mov
neg
shrd
add
shld
movl
cmp
mov
add
call
lea
jge
lea
push
mov
pushl
pushf
call
jmp
add
add
and
lret
mov
test
stos
jl
jo
js
ja
jne
scas
cmp
pop
lds
ljmp
jmp
movsl
je
inc
ret
scas
aad
insl
push
xchg
imul
int
lds
dec
and
push
push
sti
addl
xchg
push
ds
or
lcall
xchg
push
mov
divb
popf
xor
in
jae
mov
push
jp
dec
mov
jmp
mov
dec
push
lea
pop
pop
lods
push
lods
push
stos
push
lods
dec
adc
or
or
fsubrl
aaa
pushf
lea
je
pushf
test
call
cmc
sub
jmp
xchg
movzwl
bswap
lea
push
mov
jmp
jmp
cmp
pushf
pusha
movb
lea
ja
jmp
lea
jne
shr
bsr
mov
call
push
je
lret
addb
jo
dec
test
xchg
dec
nop
inc
mov
clc
add
adc
das
in
imul
mov
mov
push
push
push
xchg
jmp
stos
mov
or
mov
pushf
jl
pop
movsb
into
repz
inc
xchg
mov
inc
popa
jmp
es
push
inc
inc
xchg
sub
je
mov
sub
mov
mov
sub
inc
repz
aaa
xchg
xor
movsl
call
jo
js
pop
sbb
add
pop
pop
decb
adc
stos
xchg
jbe
pusha
pushf
testb
in
or
push
push
push
addr16
mov
hlt
cmp
sub
nop
cld
xchg
aam
lock
jb
outsl
popa
jo
clc
cmc
mov
sub
mov
jnp
sub
push
lret
xor
scas
sbb
sub
mov
aam
jge
cmp
lds
shlb
fistps
dec
xchg
sti
cli
xlat
lahf
adc
or
push
in
pop
push
test
into
repz
pop
mov
fidivrs
pop
xchg
push
fwait
dec
or
stos
and
lock
mov
cs
test
sub
das
jmp
cmp
lcall
xchg
sub
and
mov
sub
xchg
push
and
xor
inc
push
mov
lret
pop
popf
loopne
or
fldenv
dec
or
sub
adc
xor
mov
push
mov
movb
add
and
repz
sub
pop
mov
stc
cmp
out
adc
cmp
in
xlat
and
fwait
and
mov
lds
jg
cmp
js
push
mov
lret
ja
pop
push
mov
push
cmp
call
and
mull
mov
out
mov
xchg
fiaddl
mov
mov
xor
aad
mov
adcb
push
in
inc
dec
add
cld
pop
mov
cmp
sub
mov
inc
in
test
jne
es
or
and
add
and
sahf
push
cld
sarb
adc
fcoms
fbld
dec
or
lret
xor
and
pushf
or
movsl
inc
pop
stos
ljmp
jg
ljmp
xchg
jmp
andb
sbb
btc
cmpb
and
xchg
es
jo
cmp
leave
mov
jnp
mov
out
pop
call
mov
sbb
adc
xchg
dec
mov
or
loopne
movsl
in
dec
je
and
or
inc
mov
daa
cli
add
xchg
sub
ljmp
xchg
mov
or
dec
xchg
imul
inc
sbb
ja
lret
mov
stos
jg
scas
push
cmp
sbbb
and
add
adc
xchg
ja
out
loop
lods
outsb
mov
sub
mov
or
in
sub
adc
sbb
or
and
negb
aas
jle
out
cmpsb
out
pop
xchg
lock
fwait
inc
mov
mov
je
mov
shrb
fistpl
pop
je
pusha
adcl
testb
testl
xor
sbb
adc
or
hlt
sahf
and
cmp
pop
pop
or
mov
jl
imul
je
pushf
pop
testl
inc
push
int3
inc
ja
dec
scas
jne
in
sub
jns
loopne
jp
jb
shrl
ret
push
out
mov
xchg
and
rclb
fcmovu
sahf
sbb
and
loop
jl
pop
movsb
into
repz
jmp
mov
xor
mov
mov
rcrb
adc
cmp
cltd
dec
mov
in
stos
cmp
xor
test
aam
cmp
cltd
and
sbb
pop
ss
pop
jmp
jne
mov
push
adc
test
iret
xchg
in
sub
xchg
scas
movsb
mov
hlt
in
push
shrb
shl
sub
sbb
loopne
fistpl
push
push
mov
fcoml
setno
andb
lock
inc
adc
ja
jne
out
mov
dec
pop
imul
and
cmpsb
mov
in
cmp
adc
or
or
xor
add
lds
pop
cmp
adc
mov
jp
shrl
test
jnp
jnp
mov
jg
jle
gs
sub
loop
lock
scas
out
push
xchg
or
gs
xor
repnz
movsb
sarl
cltd
popf
or
and
mov
or
lods
sbb
int
rcll
ds
pop
insb
add
xchg
mov
jecxz
add
mov
add
orb
int3
add
icebp
dec
movsb
nop
popf
cwtl
clc
fldt
aad
inc
mov
int3
mov
pand
push
jns
inc
mov
cmp
int
dec
aad
adc
inc
loopne
iret
fiadds
stc
in
std
push
mov
rcrb
repz
cmpsb
fldt
shll
mov
lahf
lock
fdivl
dec
data16
xchg
sarl
mov
cmp
mov
enter
fists
and
test
mov
xchg
ja
dec
xchg
out
sub
push
leave
xchg
adc
jae
cmp
je
fwait
popa
jnp
xor
testl
dec
and
pop
arpl
ficoms
or
movb
lea
je
pusha
movw
pushf
pusha
lea
jmp
cmc
cmc
mov
clc
clc
test
mov
call
call
push
mov
call
mov
pusha
pushf
jmp
movl
call
not
jmp
mov
xchg
cmp
xor
cmp
lcall
lock
cmp
mov
mov
mov
mov
mov
mov
mov
addr16
add
hlt
bound
rclb
push
rorl
lret
mov
loop
ret
jnp
bound
out
pop
sbb
push
sbb
xor
and
and
and
sub
das
fcompl
and
fs
jne
push
call
mov
jmp
and
xchg
pop
mov
pop
mov
fmuls
push
lcall
sbb
jmp
gs
and
jecxz
out
es
iret
cmp
cltd
jge
jno
push
lea
mov
cmovb
pusha
cmp
mov
dec
sahf
loop
pop
out
in
cld
cmpsb
jecxz
es
xlat
aaa
push
cmpsb
inc
push
leave
pop
cwtl
inc
add
sub
inc
out
imul
cmp
cmc
cs
and
adc
test
jg
int3
push
xor
mov
ret
dec
data16
or
push
jecxz
in
out
pop
out
out
sbb
sbb
xor
out
adc
lds
loopne
hlt
sub
and
sub
enter
fwait
jbe
pop
xorl
hlt
mov
call
insb
int3
test
cltd
and
mov
icebp
outsl
push
cwtl
push
cmp
pop
xchg
xchg
div
inc
pextrw
pop
dec
inc
test
adc
mov
loopne
ja
inc
cmpsl
gs
cwtl
mov
push
arpl
movsl
inc
lea
rcl
test
ror
mov
mov
cmp
clc
jmp
or
call
add
inc
gs
outsl
fs
gs
imul
add
push
add
pusha
imul
cmp
push
cmc
pushf
add
push
pushf
pushf
movb
lea
jmp
lea
call
push
call
mov
xchg
xlat
or
push
jmp
cld
xor
jmp
loopne
movsl
iret
es
stc
or
mov
dec
es
les
jecxz
loop
push
adc
mov
pushf
push
stos
xlat
push
mov
adc
jp
js
aas
push
pusha
lods
adc
fwait
inc
add
cmpsl
rcrl
mov
pushf
and
jg
and
fcom
xor
adc
hlt
sub
insl
rcrb
xchg
imul
outsl
xchg
insl
insl
pop
js
mov
sbb
xor
inc
mov
adc
testl
inc
sbb
add
xchg
sbb
jle
jo
xchg
loop
and
ss
pop
das
ja
adc
and
inc
aad
cmp
stc
push
mov
sub
in
sub
sub
mov
jp
jmp
mov
mov
push
aaa
das
fs
mov
inc
arpl
sbbb
ret
add
xor
add
es
das
fldcw
jmp
cs
xlat
imul
and
push
imull
inc
xchg
cs
fsts
xor
test
pop
imul
xchg
mov
xchg
or
push
jbe
add
or
xor
sahf
aad
sub
cmp
ret
test
arpl
pop
pop
aam
xor
imul
ljmp
mov
xchg
xlat
ja
and
leave
cltd
mov
call
movsb
mov
js
sbb
dec
inc
push
sbb
js
lahf
and
in
testl
jle
ficompl
mov
dec
add
ljmp
sahf
movups
enter
push
and
in
popa
ret
xor
xchg
adc
ja
xlat
or
push
push
mov
push
dec
sti
push
subb
mov
sti
push
aaa
and
dec
xchg
shrb
shrl
xchg
mov
in
inc
stc
adc
call
mov
int
mov
in
cmpsl
stos
sbb
fsubrs
xor
inc
ficoml
mov
xor
cmp
shlb
xchg
push
insl
fs
sbb
dec
neg
cld
jmp
cmp
xchg
imul
pop
push
call
dec
sahf
bound
mov
mov
ss
pop
loopne
out
cmp
enter
rol
xor
int
adc
mov
jp
jge
dec
addb
scas
movsb
inc
xchg
dec
stos
jle
cli
xchg
sub
mov
mov
mov
lea
ret
je
test
aaa
icebp
and
mov
pop
push
fisttpll
mov
fimuls
outsb
nop
mov
sbb
mov
pop
icebp
stos
fs
mov
xor
mov
and
mov
jp
addr16
fs
arpl
push
in
jle
dec
mov
add
add
mov
insb
push
xlat
addb
imul
mov
mov
divl
out
pop
lods
inc
mov
and
and
jo
jno
mov
dec
pushf
jmp
imul
xlat
addb
mov
bound
mov
cwtl
jo
mov
fildl
popf
add
test
sbb
push
data16
add
lahf
mov
arpl
stc
and
clc
xchg
daa
push
xchg
scas
dec
and
leave
cmp
mov
sti
sbb
pop
push
adc
or
call
sbb
lret
out
shll
icebp
call
lret
addb
xor
js
lcall
insl
mov
and
xlat
loop
out
cmp
or
xor
mov
pusha
call
jecxz
bnd
mov
sbb
imulb
xor
pusha
ja
xchg
lods
pop
leave
rorb
xchg
pop
inc
popf
jl
sbb
mov
sbb
cld
xor
jmp
insl
mov
mov
pop
mov
ljmp
push
movsl
out
andl
inc
mov
mov
and
xor
ss
movb
pushl
popl
movb
push
push
pushl
ret
mov
call
lods
ret
addb
loop
roll
pop
shrl
jl
rolb
xlat
xchg
fcmovnu
je
sub
clc
in
fadds
fildl
out
cwtl
scas
xchg
inc
pop
mov
divb
dec
mov
dec
mov
xlat
fs
mov
mov
add
scas
jp
fadd
push
scas
scas
data16
addr16
xchg
push
js
mov
add
btc
mov
cmp
xchg
add
rcr
call
push
mov
lea
call
stc
sub
push
push
pushf
pusha
lea
jne
push
pushf
call
cmc
jle
xor
cmp
pushf
cmp
bt
or
call
mov
pusha
mov
push
lea
jmp
pusha
xor
jmp
mov
xchg
fadds
notl
sbb
mov
dec
stos
shl
xor
sub
jnp
push
into
roll
roll
out
in
aaa
in
xor
out
mov
or
arpl
or
mov
inc
jle
cmpsl
jge
pop
push
inc
jle
pop
les
adc
cmp
pop
pushf
jle
das
jns
es
in
testb
xor
out
mov
sbb
and
sub
add
ss
sti
pusha
mov
or
mov
mov
inc
mov
mov
mov
ficomps
push
test
dec
lea
jae
pushf
not
xchg
setge
mov
jmp
pushl
inc
bt
bt
movb
shr
push
lea
je
push
adc
mov
lea
jmp
shld
bswap
not
sub
clc
mov
clc
call
mov
xchg
ds
add
xor
roll
cmp
popa
ds
roll
dec
pushf
fstps
pop
ret
leave
mov
inc
bound
pop
xchg
xor
mov
and
les
add
cltd
cmp
inc
add
cli
or
push
shlb
push
xorl
xchg
xlat
test
popf
inc
mov
inc
mov
mov
dec
es
xor
in
mov
and
rcr
sub
and
jmp
test
xor
rcl
lea
mov
ror
call
pushf
mov
movsbl
push
push
pusha
mov
pushf
mov
pushf
movw
pushl
ret
push
cmp
dec
lods
je
pop
xchg
jno
and
adc
or
cwtl
sahf
loope
mov
test
push
mov
popa
mov
rcll
inc
dec
stos
xchg
xchg
inc
imul
out
les
jecxz
mov
shll
cmp
std
dec
jbe
fdiv
adc
cwtl
inc
fcompl
or
pop
and
mov
push
mov
imul
or
sbb
loope
sbb
adc
adc
or
mov
and
insb
and
call
mov
mov
mov
movzbl
push
pusha
lea
pusha
jmp
pop
pop
call
jbe
jno
popa
xchg
jg
jae
enter
pop
mov
push
push
push
jns
mov
pop
mov
outsl
mov
popf
sahf
cwtl
mov
mov
sub
mov
xor
shlb
sahf
push
imul
cmpsb
mov
adc
xchg
pop
stos
xchg
lahf
inc
mov
push
lcall
test
lods
movsb
movsb
push
cmp
sbb
mov
aam
shr
iret
jne
addb
xor
add
hlt
ds
pushf
sub
scas
mov
push
cmp
xor
and
out
aaa
jecxz
cmp
sub
jp
sahf
aam
xchg
insl
dec
adc
testl
mov
sbb
jge
pop
mov
mov
not
xchg
lods
fildl
add
add
add
mov
cmpsl
jp
lret
jp
shr
sub
in
fimull
jmp
sub
and
mov
pop
mov
xchg
ret
pop
and
push
xchg
enter
aas
les
pop
mov
jno
or
sbb
in
pop
xchg
dec
shrb
sbb
rcrl
add
lcall
push
dec
mov
into
scas
pop
mov
gs
hlt
or
mov
cmp
dec
mov
jmp
mov
xor
xchg
push
sub
les
fidivrl
inc
fistps
jmp
inc
and
xor
addr16
mov
xchg
cmc
mov
push
sti
add
add
icebp
add
sbb
cmp
sub
add
test
add
shld
jmp
cmp
xor
jmp
aas
inc
add
addb
popa
mov
pop
mov
lods
or
test
shrl
jnp
jae
inc
cwtl
dec
mov
mov
mov
jl
fstpl
mov
jb
ss
adc
imul
fsubs
popa
and
xor
and
xor
adc
mov
arpl
test
xlat
rcrb
xor
cmp
cmpb
sub
in
push
lret
lret
xor
int3
ds
xor
cmp
dec
out
fisttps
movzbl
sbb
cmc
push
aam
movsbw
sar
mov
mov
aad
sub
bsf
push
cmp
jmp
shrb
aas
icebp
xor
mov
ljmp
jnp
pop
inc
mov
dec
mov
arpl
and
test
fnstenv
jg
jg
sub
adc
fmuls
jmp
sub
ljmp
fs
les
pop
mov
xor
rclb
adc
sbb
loop
jecxz
jp
lret
push
xchg
push
jmp
icebp
or
pusha
pushl
push
lea
jne
shld
mov
call
push
lea
je
pusha
lea
jmp
pop
pushf
pushf
pusha
push
movl
mov
push
push
movl
pushf
movb
push
pushl
lea
jmp
sete
mov
push
pushf
pushf
pushl
lea
call
push
call
pusha
pushf
movl
pushf
lea
jmp
out
addb
or
or
xor
pop
push
fidivl
mov
in
mov
inc
pop
mov
pusha
mov
std
mov
cmp
aam
aam
adc
jno
idivl
or
and
or
pop
into
pop
cwtl
push
mov
jbe
das
repnz
in
mov
mov
outsl
sbb
pop
sbb
daa
shlb
shrb
fisubrl
rcl
shll
and
das
push
je
jl
cmp
shl
cmp
jmp
add
shr
shrd
shr
mov
cmp
mov
shr
pushl
call
pushf
pusha
pusha
mov
mov
movw
mov
pushl
pushl
ret
mov
filds
mov
mov
mov
test
mov
dec
mov
mov
pushf
add
adc
sub
int3
rorb
jge
add
sti
mov
pushf
popa
cwtl
pop
push
sub
dec
mov
fwait
in
int3
mov
mov
and
cmpsl
cmp
sub
and
and
mov
jnp
arpl
movsl
dec
ds
fwait
std
test
push
sbb
insl
mov
int3
jl
pop
rcll
repz
aad
fdiv
fs
pop
or
xchg
insl
or
adc
push
in
push
call
sbb
call
jp
jae
mov
mov
or
test
imul
aas
xor
bt
mov
sbb
daa
and
daa
mov
dec
shld
shr
cmc
shrd
mov
bt
test
push
or
call
jmp
push
movl
pushf
movl
pusha
lea
jmp
adc
jmp
fstpl
int3
sub
adc
adc
es
sub
add
dec
push
sbb
jnp
je
testl
pop
lahf
int
lock
dec
popf
bound
push
dec
cmpsl
mov
js
cmpsl
mov
mov
outsl
jbe
enter
adc
jmp
mov
and
fdivrs
decl
or
inc
xor
das
aad
test
call
pop
aaa
push
loop
xchg
mov
pop
mov
push
orb
ljmp
and
mov
sbb
adc
adc
sbb
out
sub
sbb
in
sbb
dec
sbb
xor
inc
jp
or
test
mov
pop
adc
mov
in
cmp
jmp
iret
xor
xor
cmp
push
xchg
popa
pushf
test
jmp
jmp
loop
ret
xchg
push
lret
adc
and
sub
sbb
out
cmpsl
sub
and
pop
mov
push
push
les
add
lcall
jbe
enter
inc
inc
ret
push
or
xor
jae
lret
or
cmpsb
test
mov
je
pushf
inc
mov
or
xlat
add
and
fisubl
and
imul
in
xor
cmp
call
insl
pop
inc
jecxz
xchg
test
lods
jnp
inc
inc
inc
daa
lret
mov
mov
aas
sti
mov
fnstsw
fs
push
mov
push
shll
adc
and
mov
or
jmp
loop
lds
xor
fnstenv
cli
add
xor
rorl
mov
jge
sbbl
inc
lods
dec
mov
dec
leave
jg
mov
jge
inc
mov
mov
dec
dec
mov
pop
mov
mov
push
dec
stc
jecxz
xchg
sub
lahf
push
fs
ss
outsb
sbb
lret
push
add
mov
filds
fidivrl
ficomps
add
test
push
mov
mov
das
sub
or
adc
xchg
cmp
out
mov
pop
jnp
jp
jb
jl
jp
sbb
or
fldenv
cmp
int3
push
sub
aas
cmc
outsl
cmp
or
in
xor
adc
sbb
call
ljmp
imul
mov
pop
push
add
add
add
add
add
add
sbbb
imul
mov
pop
push
add
add
add
add
add
pop
push
add
mov
daa
sti
and
daa
lock
push
mov
mov
sub
mov
mov
xchg
mov
mov
mov
xchg
or
rcrb
enter
inc
data16
mov
rcrb
jl
jmp
add
mov
mov
sub
rorb
popa
repnz
push
js
pop
arpl
movsb
fistl
mov
js
stos
jle
jle
mov
push
fiadds
sahf
pop
mov
psubusb
cli
stc
testl
incb
sti
mov
mov
mov
dec
cmc
shl
not
setle
setnp
lods
push
call
xchg
shll
addb
lret
sub
sbb
sub
mov
in
mov
cwtl
imul
and
inc
lea
shlb
dec
mov
jp
or
jl
cmp
sbb
sbb
mov
push
xchg
mov
lret
push
pop
lea
into
sbbl
mov
mov
movsl
jl
push
push
cmpsb
cmpsb
pop
pop
push
test
movsb
pop
mov
mov
push
push
mov
fimull
sti
call
pop
insl
sbb
addb
jg
dec
scas
dec
lcall
push
lret
and
int
int
push
scas
out
das
ficoms
lods
rclb
fists
pop
or
test
sbb
adc
or
mov
rcll
rclb
pslld
hlt
paddd
sti
add
add
lcall
pushl
popl
pusha
movb
pushf
push
pushl
ret
pushf
mov
mov
push
mov
mov
pusha
pushf
pusha
lea
call
push
call
jmp
aam
addb
sub
and
fiadds
sahf
push
dec
sahf
lock
mov
cmp
mov
pop
inc
jae
cltd
sti
adc
and
adc
popf
cmp
xchg
and
lea
call
pop
push
xor
dec
hlt
sub
lock
ret
in
imul
nop
inc
or
inc
xchg
inc
lea
jp
jmp
jb
dec
xchg
in
dec
in
cmp
test
push
jns
pop
xchg
dec
scas
pop
mov
inc
mov
mov
je
jo
shrb
loope
push
mov
jnp
addb
out
pmaxsw
lret
sarb
cwtl
push
or
mov
xor
sti
xor
sub
and
loope
and
popf
rcll
push
rolb
adc
jecxz
jae
jg
pop
and
rcrb
das
xchg
sub
jmp
std
repz
pop
mov
jbe
insb
jae
insl
mov
loopne
js
loop
mov
push
movsl
scas
jb
xchg
dec
and
inc
imul
shl
jns
test
mov
mov
inc
mov
jae
xchg
xor
sub
leave
and
out
xchg
dec
popf
pop
xchg
inc
cltd
inc
cltd
inc
test
cwtl
push
add
push
ficompl
lods
sarb
dec
shll
xor
inc
movsb
pop
xor
repz
andl
cmpsl
jne
adc
es
cmp
or
and
cmp
shll
fnsave
pop
test
cwtl
bt
cmc
xor
pusha
call
pushf
notb
loop
in
rorb
fimuls
lret
add
psrlw
xlat
ficoml
lcall
mov
dec
out
loopne
xchg
dec
pop
mov
jns
cmpsl
aas
or
adc
lds
fsubrl
xor
subb
xlat
mov
jbe
mov
mov
mov
mov
cmpsb
mov
xor
jge
pusha
xchg
jo
jbe
idivl
cmp
cmp
idivl
mov
mov
ja
mov
mov
xor
xchg
pusha
pushf
movb
jmp
call
movl
pushf
pushf
push
lea
jmp
inc
add
addb
pushf
dec
mov
and
aad
out
sub
cmovb
rolb
fimull
fildl
fadds
fistpll
out
cwtl
xor
flds
push
mov
pop
mov
pusha
out
inc
lods
cmc
or
dec
adc
pminub
stos
in
es
dec
mov
xor
mov
cwtl
inc
push
out
adc
sti
xor
add
or
push
testb
add
cmp
cmp
add
loop
mov
sbb
fwait
xchg
inc
mov
inc
add
and
sub
ja,pn
mov
scas
jle
jge
dec
stos
jbe
or
lds
negl
mov
jbe
and
dec
xchg
call
cli
loope
lods
jo
pusha
mov
mov
dec
mov
dec
dec
mov
mov
outsl
xchg
outsl
jle
fs
jns
push
push
push
pushl
ret
inc
pop
cmp
cmpsl
inc
xchg
dec
xchg
inc
sahf
inc
mov
leave
dec
jle
pop
and
push
pop
push
bound
push
inc
pushf
pushf
testb
fstp
or
in
ret
rol
mov
xor
cmp
ret
lods
adc
in
mov
ljmp
cmp
ds
cmp
or
cmp
xor
adc
mov
dec
dec
dec
push
aad
addr16
push
les
aas
jle
pushf
dec
adc
pushf
loope
xchg
xchg
or
insb
repnz
sbb
sbb
aam
test
aam
or
nop
mov
int
add
sbb
es
mov
and
insl
mov
cli
insb
insl
mov
mov
fcomp
jno
mov
jne
pop
mov
movsl
pop
stos
lods
push
lods
in
int
rcll
call
clc
test
cmp
pusha
call
not
pusha
lea
pushf
bswap
push
mov
jmp
pushf
mov
lea
call
push
pusha
lea
jne
movsbw
not
bswap
setns
mov
pusha
pusha
push
lea
jmp
pusha
jmp
bt
cmp
pusha
call
mov
lea
jbe
inc
pushf
call
stc
push
test
or
jmp
mov
xchg
into
adc
sbb
adc
sbb
clc
or
outsl
or
dec
push
loope
int
inc
cwtl
flds
lock
mov
pop
pop
and
fcmovbe
xchg
ljmp
xchg
sub
aaa
setg
xchg
mov
sahf
inc
or
cltd
loopne
push
test
aam
add
js
mov
ljmp
call
and
sub
les
js
in
addb
jl
inc
nop
dec
xchg
jne
dec
dec
mov
dec
mov
sbb
mov
ret
leave
or
inc
bound
add
fsubl
loop
test
mov
sbbl
mov
push
in
lret
ret
rcrb
sub
mov
mov
sub
xchg
dec
xchg
fs
cltd
insb
insb
sahf
gs
popa
bound
cltd
addr16
pop
lea
xchg
pusha
pushl
lea
jb
push
pushf
pushl
ret
pusha
movw
pushl
popl
pushf
pushf
pushf
movw
pushl
ret
fistps
std
sbb
adc
and
sub
and
add
lea
xlat
or
xor
ja
inc
popf
mov
push
add
hlt
sub
mov
and
and
ds
out
clc
lret
push
lods
cmc
xor
sub
sub
imul
mov
xor
es
fwait
sub
gs
test
lahf
adc
pop
fiaddl
cmc
add
stc
std
or
pop
add
hlt
mov
push
dec
mov
and
pushf
push
movb
pushl
ret
clc
add
pushf
pusha
pushf
lea
jmp
cmp
pusha
repnz
push
lea
jne
cwtl
movb
lea
push
jmp
lea
bswap
mov
mov
call
lea
jne
pusha
movzbl
mov
push
pushl
lea
jmp
jmp
add
pop
imul
insl
add
push
jmp
cmp
movb
call
adc
in
addb
repz
je
pop
faddl
test
ja
mov
pop
mov
push
mov
orb
das
or
cli
lods
arpl
lods
in
and
or
loop
sarl
sub
mov
dec
lret
stos
lods
cmc
int3
out
loop
xchg
mov
pusha
xchg
test
push
lods
sti
xor
xchg
xor
in
xchg
out
stc
adc
loopne
sarl
int
aaa
aaa
shlb
movsl
sbb
cmp
sti
add
je
pushf
lea
jmp
lea
jg
pop
movsbw
pushf
not
lea
jb
pop
pusha
mov
jmp
mov
pushf
bt
jmp
std
mov
rcll
lret
sub
mov
mov
mov
xchg
mov
ja
popa
stos
ja
ja
xor
jge
sub
adc
notb
ret
jmp
in
in
push
int3
call
cltd
xor
out
stos
jbe
das
sub
and
add
cs
sbb
sbb
add
rclb
es
das
shll
fisubrl
fcmovnu
mov
ja
orb
jne
sub
mov
test
pop
andb
ja
mov
sbb
cs
xchg
push
mov
dec
mov
mov
cmp
outsb
lock
int3
mov
inc
xor
mov
test
push
in
and
mov
sahf
xchg
in
cmp
xor
int
shll
cmp
stos
inc
pop
mov
fsubl
add
movw
movl
pushl
pushf
pushl
popl
pusha
pushf
pushl
ret
push
cmp
add
pusha
pushf
cmp
mov
call
pushf
movl
call
pop
inc
cld
out
addb
dec
lahf
jl
inc
lcall
or
aas
in
pop
arpl
xchg
dec
sahf
inc
fwait
int
cmp
push
sti
das
outsb
fisttpll
movsb
outsb
ja
in
push
aam
dec
xchg
out
jle
scas
pusha
popa
scas
imul
lahf
push
jne
cltd
loopne
sbb
incb
bt
add
pushf
pushf
movw
push
lea
je
cmp
stc
cmc
add
pusha
pushl
pusha
lea
jmp
movl
jmp
call
test
aaa
bswap
rol
mov
clc
shl
pusha
lea
je
pusha
mov
call
lea
jae
cmc
call
adc
xchg
dec
mov
in
sub
xchg
add
std
icebp
mov
flds
push
loope
out
ss
jle
cmp
push
or
jecxz
das
cmc
mov
jmp
notl
lret
push
js
lods
les
mov
cwtl
inc
sahf
dec
mov
sub
add
movb
inc
mov
jns
daa
inc
sahf
jp
mov
jbe
mov
ja
jecxz
and
fisttps
jle
push
jmp
mov
xchg
add
aas
fimuls
rorb
cmc
or
lea
out
dec
cmp
mov
adc
push
mov
fs
out
cmp
insb
jne
mov
sub
lret
ss
mov
xchg
dec
add
xor
dec
inc
jno
mov
push
dec
popf
xchg
and
mov
cmpsb
int3
fldt
scas
shll
bound
in
adc
cmp
out
sbb
test
xor
add
stc
fwait
ja
mov
or
adc
and
lret
in
pop
fnstcw
pop
cld
ss
mov
push
mov
lcall
xor
adc
inc
cmpsb
xchg
inc
mov
pop
mov
incb
cwtl
mov
out
xorb
add
pop
sub
and
ljmp
repz
gs
mov
cmp
pop
out
cltd
in
xor
shlb
mov
inc
pop
mov
jae
loope
sub
call
push
sahf
inc
cltd
bound
sahf
addr16
insb
outsl
imul
push
frstor
lret
ret
icebp
addb
ja
lea
add
outsb
lahf
ficoms
sub
pmaxsw
das
repz
cmc
adc
sub
adc
adc
lret
adc
pop
lods
sbb
fisttpll
in
pop
push
loop
fnstcw
xor
sub
and
orb
cmp
push
loope
in
mov
in
aad
dec
push
mov
sbb
dec
nop
pop
test
jae
push
add
xlat
or
xor
xor
or
mov
pushf
cwtl
outsb
xchg
imul
cli
mov
lea
sub
addb
mov
add
mov
shlb
push
andb
popa
andb
inc
shll
insl
andl
out
fldl
insl
adc
cmc
cmpsl
lds
pop
es
mov
xor
and
and
and
and
mov
int3
mov
fiaddl
in
rolb
fildl
in
xor
adc
cs
stos
add
cmpsl
jl
ret
mov
nop
inc
and
das
stc
adc
mov
cmp
jge
test
into
add
cmp
cmp
notl
lea
int
inc
mov
xor
push
push
fcmovnb
or
arpl
xchg
in
fcoml
cmp
fisttpll
sub
and
and
fisubrl
rclb
sarb
ja
sub
addb
xchg
push
sbbl
ret
add
cmpsl
pop
lods
sbb
xchg
mov
xor
loope
loope
into
add
mov
xor
mov
jns
cli
sub
mov
cli
xor
jg
jl
out
sub
mov
ljmp
pusha
add
gs
inc
jle
es
xchg
sbb
add
pusha
mov
loope
sub
mov
sbb
xor
cmp
and
rcll
cmp
ss
cmp
xor
into
movsb
sbb
jnp
data16
cld
sbb
fs
jbe
sar
sbb
btc
stc
sub
jmp
xor
lea
jg
pusha
movw
not
call
or
cmc
addb
imul
jb
pop
push
fs
jo
xlat
cld
sbb
inc
std
je
pop
inc
cwtl
sbbl
xchg
sbb
add
cwtl
jge
push
or
jg
xor
mov
fbstp
inc
jl
inc
clc
adc
or
add
or
cli
add
mov
call
pushf
call
movb
call
pushf
pushf
pusha
call
pushf
pushf
jmp
cmp
pushf
sub
pushf
cmp
pusha
or
pushl
push
lea
je
not
mov
mov
bswap
lahf
lea
push
jmp
call
rclb
cmp
xor
call
addr16
mov
xlat
sbb
test
std
je
inc
pop
and
out
xor
jo
mov
lret
sbb
in
push
sbb
shlb
insb
pop
jo
sub
mov
or
push
adc
jmp
clc
sub
stos
adc
lcall
sub
addb
subb
lods
sub
mov
out
insb
or
sub
jno
test
cmpsl
cmc
adc
fnstcw
xchg
inc
out
test
xchg
fwait
mov
lret
jbe
xchg
enter
shll
shrb
outsb
arpl
and
push
imul
rcrb
mov
inc
xchg
jle
jmp
push
adc
lret
enter
jo
xchg
dec
xchg
imul
mov
shr
jnp
push
xchg
fs
jns
mov
pushf
lea
jmp
pushf
pusha
jmp
call
jmp
mov
push
fs
subb
outsl
lea
cmp
push
leave
cs
leave
sbb
push
and
iret
fcoms
push
mov
cmp
cmpl
mov
pop
popf
push
data16
cltd
insb
faddl
pop
int
imul
jmp
mov
push
testl
cmp
fisttpll
popa
push
insb
faddl
pop
int
or
pop
iret
add
pop
int
leave
push
or
mov
je
jg
xchg
je
and
mov
push
mov
inc
lea
cwtl
dec
mov
xor
shlb
mov
andl
push
sub
mull
sub
mov
pop
test
sti
mov
cmp
addr16
orb
cltd
mov
movsb
jns
sub
daa
pusha
mov
sti
cmc
sub
and
or
add
rorb
gs
push
je
mov
fbstp
push
mov
dec
mov
sub
loopne
in
lock
movb
mov
clc
cmp
movb
mov
pusha
mov
lea
jbe
call
inc
sysexit
clc
addb
mov
mov
movsb
lret
mov
in
js
int
inc
mov
fildl
fidivrl
in
cmp
dec
inc
add
insl
cmpsb
pop
dec
test
ss
popf
test
add
push
sbb
mov
pusha
mov
pop
mov
mull
jns
inc
ficoml
xor
icebp
mov
jae
inc
sbb
mov
stos
mov
mov
mov
mov
mov
inc
add
mov
mov
out
call
daa
in
pop
cmpsl
pusha
lea
jb
clc
clc
cmpb
push
lea
jne
stc
mov
push
bt
call
push
push
pushf
pushf
lea
jae
test
cmc
cmp
push
xor
pushf
push
push
lea
call
call
add
neg
sub
mov
pusha
test
mov
test
push
pusha
call
pop
xor
push
mov
pop
adcb
sahf
dec
and
sbb
test
cmp
and
mov
fwait
mov
push
test
pop
mov
popf
int
push
in
sbbb
or
hlt
movsb
push
pop
outsl
mov
sahf
gs
nop
fnstenv
and
fmul
jno
rcll
inc
xchg
loop
fidivrl
les
jecxz
or
pop
jb
cmp
cltd
dec
pop
fmuls
mov
push
mov
adc
fadds
inc
imul
cmp
daa
cmp
ds
int
ret
lds
inc
scas
push
test
out
mov
clc
addb
xor
pop
aad
fimuls
fldl
dec
pop
push
dec
ja
lahf
jg
pop
shr
add
mov
jmp
mov
daa
dec
and
pop
lds
aas
je
and
mov
jae
ficomps
rorb
dec
xor
inc
pusha
mov
mov
push
icebp
xchg
xchg
outsb
sub
mov
adc
dec
sarb
aad
subl
inc
cmp
insb
cmp
pop
adc
test
lcall
sub
jmp
xor
add
sub
sbbb
pop
es
sti
fisttps
std
mov
cmpl
mov
int3
orb
pop
adc
ret
lds
jb
mov
scas
cmpsl
jne
jl
testb
iret
aaa
test
push
xchg
xorb
pop
and
lret
stos
imul
ss
mov
jb
and
fs
test
fbld
out
shl
test
insl
mov
int
ficoml
decl
dec
lock
dec
loop
mov
ss
insb
cmp
in
add
int
sbb
add
jp
inc
cmp
hlt
sub
aas
les
lret
xor
xor
lret
mov
inc
mov
call
jge
sub
xchg
dec
xchg
dec
xchg
dec
scas
inc
lcall
or
outsl
icebp
arpl
mov
les
adc
jo
xchg
xor
lea
adc
jp
faddl
les
mov
mov
pusha
lea
in
pusha
dec
lahf
bound
dec
mov
or
movsb
bound
dec
imul
cmp
faddl
mov
sbb
sub
mov
in
imul
mov
mov
push
push
mov
fdiv
push
mov
dec
jns
pusha
pusha
cmp
mov
call
and
sti
addb
jo
jle
dec
xchg
inc
mov
xchg
sub
jle
sub
mov
inc
xchg
push
test
insb
push
arpl
cmp
ret
dec
fdivs
or
fldt
and
add
sub
jle
dec
mov
ret
mov
sub
and
daa
fisubs
sarb
imul
addb
add
or
pop
fisubs
faddp
sbb
out
jle
psadbw
pop
aas
in
or
or
cmpsb
sbb
pop
test
inc
jne
stc
aaa
cs
and
xlat
scas
adc
lea
cmp
sbb
or
dec
mov
inc
xchg
gs
mov
dec
lcall
fsubs
inc
dec
mov
roll
shlb
and
cs
fdivl
shrl
ficompl
bt
and
jmp
push
pusha
call
movl
pusha
pushf
movl
pushf
lea
jmp
lea
jae
push
mov
jmp
pusha
pushf
call
call
mov
lea
mov
lea
jmp
call
jae
sub
addb
stos
jb
dec
xchg
inc
mov
push
cmp
inc
test
fbstp
lret
or
bound
into
out
xchg
clc
sub
pcmpgtw
or
add
sub
fidivl
fdivl
xor
int3
mov
out
pop
into
data16
mov
add
movb
push
mov
lea
jmp
lea
mov
pushf
pusha
jmp
pushf
lea
call
jmp
add
xchg
inc
xchg
jae
push
mov
and
mov
inc
mov
xchg
movsl
imul
fxch
and
lods
cmp
idivl
mov
push
mov
cmp
sbb
or
or
fs
mov
cmp
adc
mov
push
xor
fsub
adc
mov
inc
aad
rcrl
fisttps
in
insl
mov
fwait
into
pop
shlb
pop
jmp
dec
push
mov
lods
lods
pop
cmpsl
pop
mov
lods
push
adc
lods
into
fisubs
loop
testb
pusha
lea
je
movzbw
movsbw
lea
mov
cwtl
pusha
pusha
lea
mov
lea
je
push
movzbl
bswap
pushf
sete
pushl
popl
movsbw
lea
push
movzbl
call
hlt
sahf
test
addb
ss
int
jecxz
jp
sub
or
jo
cs
mov
out
es
push
stc
das
testl
fisubrs
add
mov
pop
movb
lds
stos
push
pop
dec
mov
xchg
jl
mov
xchg
rolb
mov
push
jecxz
push
in
push
in
adc
movsb
adc
xchg
bound
popa
incl
mov
mov
mov
fildl
inc
gs
mov
xchg
mov
push
xchg
imulb
sub
xor
enter
adc
pusha
push
or
fnstsw
rol
adc
or
fwait
and
shlb
movsb
inc
fstpl
mov
mov
sbb
in
mov
loopne
jmp
push
ds
add
dec
aas
or
mov
ljmp
sub
fsubs
sahf
push
std
cmp
leave
xor
ret
or
insl
fcos
jmp
je
or
lcall
add
xlat
flds
icebp
sti
into
sub
cs
dec
and
imul
inc
cwtl
dec
popf
inc
nop
dec
test
cmpsb
jo
gs
jnp
inc
movsb
test
in
lock
pop
loop
out
adc
adc
and
call
rorb
into
and
js
test
pushf
pusha
lea
je
inc
inc
xor
add
xor
jmp
push
bt
pusha
or
pushf
jmp
imul
stc
stc
clc
pusha
add
pushl
lea
jmp
movw
adc
jmp
lea
je
call
in
addb
in
adc
sub
push
gs
push
loope
cld
inc
pop
int3
add
les
iret
adc
adc
es
sub
sub
shlw
jmp
adc
ds
sahf
ds
add
out
cmp
repnz
out
push
pop
popa
mul
cmpsl
push
dec
xchg
or
dec
mov
dec
cwtl
jp
dec
mov
js
mov
in
sub
add
mov
jns
mov
jne
mov
inc
inc
mov
dec
mov
cs
pop
jo
in
out
incl
pop
add
orb
jno
in
mov
mov
pop
xchg
and
dec
cwtl
dec
xchg
pop
lcall
aam
jp
int3
jo
and
jl
jmp
mov
jecxz
mov
bound
sahf
push
mov
xchg
dec
and
push
push
int
sub
and
dec
subl
es
addb
fildl
jge
jnp
das
xor
imul
cmp
adc
push
loop
in
sbb
mov
popf
rorl
or
in
imul
call
stos
pushf
mov
lea
jmp
jmp
cmp
xchg
inc
nop
dec
test
pushf
inc
cltd
push
aad
ret
roll
stos
fs
push
add
inc
repnz
in
add
mov
jp
jne
dec
dec
xchg
mov
cmp
pushf
outsb
cwtl
lods
jno
les
stos
cmp
sub
sub
dec
test
rorb
pusha
test
jb
stos
push
cmpsl
test
pop
stos
scas
pop
pop
stos
inc
push
pusha
call
pushf
movb
movl
call
lds
sbb
rclb
xchg
mov
mov
aaa
in
mov
pop
inc
jl
mov
mov
mov
pop
popa
lahf
cmc
push
shlb
pop
lcall
mov
les
inc
mov
and
into
mov
iret
rcrb
faddl
fidivrl
rolb
push
cmpsl
pop
adc
outsl
test
data16
adc
sbb
cmp
roll
mov
jge
dec
xor
add
mov
mov
cmp
dec
sarl
jge
leave
lahf
inc
roll
xchg
dec
nop
dec
test
ja
inc
xchg
pusha
xchg
push
mov
lcall
popa
lcall
aam
popf
out
mov
imul
addr16
mov
dec
lock
jle
dec
aam
jae
lret
jne
addl
stc
sub
adc
sbb
sbb
popf
out
shlb
ret
je
cld
repz
adc
icebp
shrb
aam
fcomp
shlb
fisubl
dec
xor
mov
daa
shlb
rorl
pushf
ret
mov
lea
call
aas
push
repz
outsl
xchg
inc
xchg
inc
mov
insb
repnz
in
jo
and
popf
fcomps
pop
inc
jecxz
cld
and
das
repz
cs
repz
pop
sbb
lea
ljmp
lea
scas
movsb
aad
mov
pop
add
mov
xor
jecxz
sbb
and
push
stos
pop
push
dec
xchg
mov
inc
les
scas
jne
iret
dec
or
repnz
inc
sbb
clc
and
adc
mov
filds
xchg
push
lcall
push
lods
into
sbb
cmc
test
imul
mov
or
psubq
repnz
repz
stc
or
cmc
sbb
pop
lcall
cmpsb
leave
or
lods
jmp
sti
mov
pusha
cmpb
push
pusha
jmp
not
mov
call
call
fistps
adc
sbb
pop
ret
pop
dec
xchg
rolb
xchg
mov
xlat
cltd
jns
in
or
dec
imulb
xor
ss
add
and
sub
test
test
mov
loop
or
lret
test
add
leave
stos
add
out
jo
dec
dec
aas
out
sbb
sbb
out
adc
adc
cs
add
pop
xchg
push
mov
push
popf
test
mov
les
jns
ficompl
outsb
mov
jno
inc
mov
push
push
mov
movsl
in
cmpb
mov
movb
movl
mov
pusha
push
lea
jmp
movl
mov
push
pushf
call
btc
mov
bt
bt
and
test
add
push
mov
push
lea
jmp
pushl
popl
pushf
pushl
ret
push
movl
pushf
mov
movw
pushf
lea
jmp
ror
push
neg
bt
bt
stc
movl
not
cmc
clc
ror
mov
pushl
pushf
inc
movb
movb
lea
call
clc
call
xchg
pushf
pushf
not
movl
jmp
call
mov
movzbl
lea
push
xchg
pusha
push
mov
pushl
popl
mov
call
push
movl
jmp
mov
xchg
loopne
mov
mov
jecxz
insl
out
add
mov
adc
add
lds
clc
ss
fcoms
mov
mov
sub
ss
cmc
arpl
out
jno
mov
sbbb
xchg
jno
gs
cmp
sbb
and
mov
inc
pop
test
pusha
popf
outsl
push
outsb
outsb
outsl
cwtl
fstpl
inc
movsb
pop
mov
add
fs
jne
push
jmp
jge
inc
pop
addl
mov
xlat
into
cs
mov
insl
pop
fldenv
xor
repnz
and
es
sbb
adc
outsl
dec
out
mov
xor
iret
xor
int
ret
xor
adc
jmp
das
inc
mov
jae
loopne
and
or
lods
loopne
cmpl
addl
cli
and
out
sub
js
push
cmp
and
or
ds
hlt
cs
sub
into
sbb
enter
arpl
sbb
outsl
jecxz
repnz
jecxz
movsb
adc
adc
ret
or
dec
sbb
sbb
cmc
sub
cltd
sbb
hlt
jbe
dec
push
or
jle
push
push
mov
mov
add
xor
and
or
sbb
jns
jl
insb
mov
jno
loope
sbb
and
jge
mov
push
lea
jmp
push
movl
pusha
push
pushl
lea
jmp
mov
push
mov
push
pusha
mov
movw
pushl
ret
pushf
pushl
pushl
movl
lea
jns
pushf
movl
pushf
pushf
lea
jmp
cmp
test
push
push
pushf
lea
je
clc
stc
add
test
bt
push
pusha
cmp
mov
pushl
push
movb
lea
jb
push
pushl
bt
cmp
pusha
jmp
shr
shl
mov
jmp
add
cmp
bt
call
jnp
test
cmc
sub
stc
clc
pusha
cmp
mov
pusha
lea
jae
pusha
lea
jmp
call
mov
movw
movb
lea
jmp
add
mov
add
add
add
add
add
add
push
add
add
add
add
jg
push
adc
fisttpll
test
pop
sub
out
imul
pop
imul
ret
dec
xor
shrb
shlb
cmp
sub
iret
push
in
push
fcoml
mov
push
rolb
popf
nop
pop
and
xchg
lcall
pushf
mov
das
shll
xor
mov
push
jge
mov
jbe
push
cmc
data16
gs
std
lea
add
mov
mov
mov
dec
ljmp
movsb
jno
jle
xor
je
jge
pusha
leave
roll
jg
in
cs
shl
out
inc
cmp
adc
je
jge
test
int
addr16
mov
xor
push
pop
fyl2x
mov
mov
xor
xor
jnp
jl
dec
dec
ret
xor
add
mov
mov
lret
stos
push
push
aas
lcall
movl
xlat
sahf
sbb
inc
mov
cmpsl
add
popf
add
out
xchg
popa
mov
or
cmp
mov
test
cltd
sub
cld
xor
leave
cli
inc
or
rcl
push
imul
hlt
add
push
mov
in
aam
pop
test
popa
scas
shrb
ss
inc
stos
sarb
lods
popa
mov
adc
dec
aas
xorb
cmp
cmp
mov
cmc
push
or
in
test
sub
imul
in
aas
mov
push
adc
add
mov
mov
xchg
stos
jecxz
mov
dec
push
inc
movsl
sti
dec
je
and
in
mov
lea
add
adc
inc
mov
das
imul
inc
insl
jg
mov
jp
shl
test
push
or
jnp
iret
pop
cmpsl
jp
jae
add
adc
mov
mov
in
fptan
stos
shrb
nop
testl
xchg
add
mov
dec
inc
aas
sub
repz
mov
out
shll
add
xor
stos
push
sub
repnz
pushf
or
dec
repz
je
mov
adc
mov
addr16
pop
xchg
mov
mov
fsub
dec
fstps
fs
lea
xchg
inc
shlb
mov
and
js
sti
mov
js
and
iret
ja
add
adc
or
adc
fdivrl
dec
sub
aaa
repz
outsl
subl
test
insl
fimull
push
sbb
or
pop
loop
mov
push
push
push
daa
xor
jo
xlat
inc
stos
cmc
outsb
push
mov
push
pop
mov
cwtl
fbstp
mov
mov
mov
cltd
enter
mov
xchg
dec
cmp
in
lock
cmp
jns
cmpsl
mov
aas
mov
not
lea
push
adc
cli
xchg
adc
call
add
jae
inc
out
pushl
pop
jmp
clc
clc
in
push
stc
mov
sbb
add
mov
sbb
pop
jne
dec
out
sbb
dec
lods
xchg
bound
dec
rolb
pop
out
iret
sahf
shl
mov
lods
js
adc
in
mov
mov
dec
push
hlt
mov
mov
das
and
push
push
cmpsl
lods
mov
bound
jecxz
popf
and
lahf
fsubs
cmp
mov
pop
mov
jb
pop
leave
rcrb
insb
and
xchg
dec
mov
sbb
insb
jae
sub
jnp
daa
loopne
scas
mov
aaa
dec
scas
mov
icebp
sarb
mov
mov
xor
and
scas
fadd
xor
pop
pop
scas
mov
cmp
sbb
or
shlb
insb
mov
idivw
dec
lods
out
add
dec
push
jg
sarl
enter
inc
rcl
xor
lods
nop
dec
mov
cld
mov
sub
orb
mov
aad
rcrb
jbe
int
xor
ret
xchg
or
out
arpl
push
lcall
lea
xchg
or
pop
jae
out
in
mov
ss
rcr
xor
add
loop
fsts
push
jge
jp
aad
test
and
pop
jle
mov
repz
stos
shlb
and
lds
pop
add
sti
fdecstp
or
jns
aaa
shlb
fdivr
ret
fdivs
xchg
sub
push
mov
jle
mov
mov
xorl
inc
push
mov
cmp
jge
xor
mov
sub
sahf
ss
pop
cwtl
fsincos
sub
out
mov
jns
js
out
ljmp
mov
mov
push
push
jae
cmpl
cmp
adc
ljmp
mov
cmpsl
dec
xchg
xchg
sub
pop
inc
mov
or
repnz
push
cmpsl
sub
in
out
xchg
daa
pop
repz
mov
or
pop
push
mov
bound
ficoml
push
sbb
mov
in
push
out
lahf
mov
pop
and
sbb
scas
and
cld
jmpw
push
cmpsl
inc
les
sahf
add
je
inc
jns
cltd
push
fdivs
into
lcall
mov
push
repnz
jb
fstpt
movb
and
mov
add
sbb
ret
jbe
inc
mov
jle
test
mov
cmp
cmp
inc
insl
clc
xchg
pop
mov
aaa
mov
cmp
dec
push
adc
ret
lret
test
insb
aaa
fldl
ljmp
shl
jno
mov
mov
mov
insb
dec
adc
fs
nop
sbb
movsb
adc
or
lea
pop
clc
ja
xchg
xchg
fdivp
and
gs
jb
int3
cmp
dec
mov
dec
arpl
in
loope
lahf
aaa
sub
pop
xor
mov
sahf
test
in
imul
push
scas
jle
adc
xor
inc
scas
rolb
and
mov
cmpsb
mov
inc
mov
mov
ret
test
push
xchg
ds
cmpsl
sub
movsb
loop
sub
mov
pop
insl
and
adc
rorl
jbe
xchg
aas
jb
jo
pop
popf
sti
loop
inc
jo
lahf
or
xchg
js
adc
push
bnd
int3
int
lods
hlt
imul
sbb
jle
or
out
mov
stos
xor
add
push
jnp
lods
dec
inc
mov
loopne
mov
mov
aam
or
stos
pop
inc
js
dec
adc
call
inc
mov
push
mov
push
mov
mov
jb
add
fimull
jae
or
ljmp
nop
loopne
lret
sub
mov
lret
cltd
nop
add
imul
cmpsl
enter
outsb
mov
fldl
mov
jb
xchg
jp
or
in
push
adc
mov
lods
sti
xor
ret
repz
cwtl
jle
xchg
lds
notl
dec
outsb
jo
sar
push
or
jmp
shr
push
fprem
push
call
arpl
repz
fdivl
push
idivl
testb
pushf
clc
aam
inc
mov
mov
popf
mov
push
lods
loope
mov
test
loope
and
jne
jns
mov
sbb
push
dec
and
push
xor
adc
mov
gs
std
scas
sub
call
jge
mov
mov
jecxz
mov
sub
sbb
repz
imul
cmp
lret
push
mov
jl
pop
ss
mov
mov
mov
ljmp
loopne
push
ror
jg
jne
mov
loope
fisubs
lods
negb
and
clc
mov
mov
jbe
cmp
cmpsb
int3
push
scas
jo
mov
sbb
loop
sbb
cmpsl
jb
rcr
cmp
pop
sbb
outsl
sub
fstp
pop
cmpsb
jg
mov
mov
addl
in
mov
push
xorb
cmpsb
mov
shrb
sahf
and
add
xchg
sbb
cli
scas
push
ss
add
popf
clc
mov
sub
call
push
pop
push
repz
push
sar
mov
imul
sbb
add
sbb
or
mov
arpl
loop
ljmp
push
movsl
jge
jmp
add
mov
jno
mov
popa
ret
outsb
adc
ret
mov
mov
movsb
rcrb
ret
loopne
jp
cwtl
sbb
stc
mov
sub
das
jmp
sub
mov
incl
sbb
dec
mov
aam
inc
adc
aad
xchg
int
ds
arpl
inc
cwtl
je
push
ss
jns
les
into
stc
loopne
std
cmp
jns
xchg
inc
xchg
dec
mov
stc
xchg
rorl
int3
dec
leave
dec
sub
inc
xchg
lcall
jmp
in
fcomip
shlb
cs
mov
icebp
ret
scas
jnp
jmp
push
sbb
ds
sub
sbb
stos
in
inc
in
push
and
fs
dec
fisubs
loopne
sub
pop
mov
outsl
test
lock
into
cmp
cmp
ja
mov
xchg
mov
add
mov
inc
mov
orl
and
es
pop
pop
sub
xor
dec
fidivrl
mov
enter
jbe
in
dec
icebp
stos
cld
repnz
nop
pop
popf
jmp
push
adc
and
xchg
lcall
lret
pop
movsb
sub
pop
sbb
cltd
adc
xor
les
movsl
pop
xor
pusha
mov
jmp
jnp
lret
loop
dec
fdivr
arpl
xchg
pop
scas
push
push
push
xor
in
sub
pop
in
sbb
shrb
sbb
xor
adc
pop
lret
jecxz
dec
sti
jns
cs
add
fld
test
out
das
sbb
inc
mov
inc
cmc
decb
adc
sahf
lods
repnz
cltd
push
adc
push
cs
imul
push
or
popa
pop
divb
and
rolb
je
mov
cmp
cmpsl
bound
pop
test
xchg
pop
cld
pop
imul
jge
aad
frstor
pop
in
mov
adc
jl
xchg
or
into
into
jbe
adc
fidivrs
pop
pop
pop
dec
scas
gs
sub
orl
cltd
ss
or
add
or
cmp
int3
loop
mov
add
add
xchg
shll
in
xor
ds
or
sub
xor
adc
in
movsb
pop
fistl
inc
fisttpl
rcll
iret
mov
int
xor
cld
fs
test
lret
adc
loop
outsl
cltd
sub
xchg
cmpsl
stos
pop
es
fildll
push
ficoml
inc
and
mov
xor
dec
lcall
scas
in
push
sub
jnp
pushl
sub
cltd
xchg
dec
dec
jno
out
jg
shrb
ficomps
iret
ss
loopne
ljmp
push
sbb
adc
sbb
inc
jne
jle
push
push
jmp
jge
dec
push
addl
mov
pop
fld
sbb
cmp
and
pop
inc
cmp
stc
cmp
or
loop,pt
out
adc
fidivs
mov
pop
xchg
pop
cli
xchg
sbb
sbb
std
xor
lret
pop
jmp
fldl
push
cwtl
sbbl
sub
pop
add
ret
out
xor
arpl
push
les
ret
pop
in
mov
stos
push
pop
push
sbb
int3
das
in
mov
scas
dec
scas
push
pop
movsb
push
stos
pop
mov
pop
xor
adc
out
add
dec
outsl
popa
fs
imul
add
pop
out
addl
add
add
add
push
fnsave
push
lar
sbb
leave
pop
xchg
inc
add
sbb
push
push
and
inc
mov
adc
adc
add
mov
daa
fisubl
cli
push
mov
rorb
or
call
add
cmp
stos
lds
movl
test
push
mov
stos
push
cmp
insl
sahf
flds
shlb
pusha
movl
mov
lea
jmp
pusha
push
movl
mov
call
inc
dec
inc
clc
neg
dec
xchg
sar
test
push
mov
pushl
shl
mov
sub
stc
push
mov
sar
mov
jmp
cmp
pop
sbb
pop
sbbb
add
fsubl
aaa
jmp
pop
cmp
add
pop
inc
push
aaa
jecxz
loope
clc
cmp
sbb
mov
dec
rcrb
fs
push
lret
mov
jl
xchg
jne
xor
outsl
xchg
outsl
jb
mov
repz
xlat
dec
das
out
pop
pop
sti
xchg
jg
mov
divl
mov
aad
aas
icebp
call
repnz
pop
lret
xor
mov
jmp
leave
xor
cmpb
mov
aaa
out
fldl
int3
dec
mov
fcmove
mov
jbe
xchg
push
loopne
jb
nop
sahf
push
lret
jecxz
or
ja
mov
les
xor
mov
sti
pop
les
lret
xor
sub
enter
xchg
jbe
pop
cli
adc
cmp
test
stc
pushf
movzwl
add
inc
shld
shld
mov
pushf
add
call
push
jl
sbb
dec
xchg
ror
ljmp
mov
imul
jmp
cld
and
and
and
sub
cmp
mov
sub
movsb
adc
add
out
cmpsl
pop
sbb
cmp
stos
jae
pop
test
movsb
rep
pusha
mov
xchg
lret
add
mov
sbb
inc
mov
jmp
inc
daa
movsb
jle
pop
das
hlt
pop
inc
hlt
dec
xorb
mov
scas
push
stos
push
cmpsl
pop
mov
pop
sbb
pop
ret
cld
or
sbb
add
pushf
lea
jmp
shl
push
call
lea
jae
jmp
mov
push
jmp
shr
pushf
cmp
cmp
jmp
push
movl
jnp
pusha
movl
mov
push
pushf
lea
jmp
lea
je
cmp
pusha
sub
clc
cmc
bt
cmp
call
add
sbb
dec
xchg
dec
stos
inc
xchg
ret
in
cmc
sub
and
or
aad
push
sbb
cld
and
rolb
mov
loop
movsb
hlt
mov
je
pusha
mov
jno
shlb
insl
outsl
popa
push
cmc
sub
shll
shrl
daa
leave
cs
mov
mulb
mov
dec
gs
popa
addr16
outsl
js
add
xchg
cmc
push
lock
sub
cmp
mov
cmp
jecxz
pop
inc
icebp
in
ds
cld
es
sub
sub
jbe
insb
or
and
in
rclb
test
sub
and
jp
xchg
test
mov
xor
daa
jmp
movsb
ret
rcrb
dec
jne
stos
pop
je
xor
xchg
inc
add
jl
xchg
inc
sahf
inc
mov
xchg
push
mov
adc
repnz
popf
dec
mov
mov
mov
test
inc
xchg
insl
lahf
mov
subl
add
setnp
pusha
xchg
setae
mov
dec
pushf
push
inc
push
mov
setne
pushf
mov
lea
call
push
mov
pushf
lea
call
push
pusha
mov
call
lahf
cmc
xchg
sbb
icebp
adc
sbb
sbb
pop
lds
aas
scas
sbb
jo
popa
mov
fsubrp
sahf
bound
mov
push
aam
es
xchg
jge
jb
fs
mov
mov
mov
pushf
pushf
lea
jbe
push
mov
lahf
push
bswap
not
lea
call
test
mov
clc
test
test
test
pushf
mov
jmp
push
push
mov
movl
jmp
xor
mov
cmp
pusha
bt
or
pushl
jmp
push
movl
movb
pushl
pushl
popl
movw
pushl
ret
inc
movb
cmc
push
ror
clc
stc
add
mov
test
call
mov
pusha
mov
lea
jmp
movzbw
mov
not
bswap
seta
pop
movzbl
xchg
mov
push
mov
movsbw
not
push
pushf
mov
push
push
mov
mov
pop
pusha
mov
pushf
push
pushl
ret
stc
jmp
call
mov
test
ror
sbb
pusha
mov
jmp
jmp
jmp
lea
je
pushf
pushf
call
jo
sbb
mov
mov
or
xchg
or
mov
jecxz
fucomp
jl
add
scas
jb
sbb
or
les
xchg
lret
mov
and
jle
ljmp
mov
mov
repnz
jmp
mov
mov
or
lods
dec
xor
mov
xlat
test
push
jo
cmp
xchg
sub
cli
ljmp
add
lcall
lea
xor
mov
sbb
fs
push
lcall
pop
sahf
arpl
sub
cmp
and
cmp
cltd
mov
test
push
and
and
push
cmp
arpl
mov
inc
hlt
xor
inc
js
subb
pop
xor
sbb
into
mull
inc
arpl
movsb
mov
fildll
xor
sub
mov
adc
lahf
ss
aam
mov
sbb
or
in
ss
insl
mov
test
xlat
xor
sahf
sbbb
mov
dec
push
mov
out
jnp
in
ss
xchg
lahf
xchg
sahf
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
loop
mov
sub
lods
push
sbb
test
mov
icebp
jb
in
out
in
mov
ljmp
fwait
hlt
fchs
xchg
xor
ss
push
lret
mov
fwait
sbb
mov
sbb
jmp
ret
incl
xchg
push
lods
xchg
xchg
or
sahf
out
cmp
jmp
cwtl
xlat
fwait
sbb
mov
pop
cmp
add
cmpsb
add
mov
lcall
sub
cld
jns
xchg
xor
mov
sbb
addr16
pop
fwait
cld
pop
fwait
pop
cli
daa
std
pop
test
fcoml
pushf
sbb
mov
sbb
cltd
pop
pop
pop
sub
and
rcrl
daa
and
pop
sbb
hlt
lods
sbb
es
adc
adc
or
cmp
mov
mov
mov
and
repz
lahf
xor
addr16
xchg
add
and
out
sub
xor
push
push
pop
repz
cmc
jne
mov
lea
jmp
pop
add
add
pushf
lods
mov
inc
add
loopne
decl
xor
or
outsl
sbb
push
enter
xchg
sbb
cmpsw
push
pushf
mov
aad
dec
add
sub
pop
aad
mov
das
adc
adc
mov
stos
xor
push
mov
mov
push
stos
jmp
cmc
adc
sarb
ljmp
daa
add
cli
jae
stos
jecxz
cmc
sub
rcrl
scas
sbb
cltd
xchg
add
aad
ror
repz
push
stos
pop
stos
cmp
adc
cs
fmull
je
sbb
jg
mov
and
dec
mov
adc
xchg
mov
mov
jmp
movsl
pop
ss
mov
ljmp
push
xchg
mov
mov
cmpsl
xor
cs
insb
repnz
pushf
push
les
lods
inc
xchg
jbe
adc
cwtl
pop
sbb
jb
cmp
lcall
lea
testl
dec
or
mov
aas
mov
fstpt
sbb
pop
mov
mov
mov
mov
xchg
outsl
jmp
into
cld
scas
or
divl
insb
push
sti
adc
xor
adc
iret
inc
cmpsl
mov
addr16
add
cmp
inc
imul
and
incl
imul
cld
mov
sti
and
insl
clc
sub
mov
push
arpl
jne
push
test
mov
mov
negl
ljmp
add
mov
jae
xlat
sbb
insl
ret
inc
test
insl
and
aam
sarb
and
or
cltd
fadds
jno
test
jmp
dec
sub
ljmp
jbe
scas
xor
sub
sub
testl
mov
inc
fmul
and
stc
mov
out
add
movsl
test
je
cmp
arpl
lret
call
pushf
bound
rcr
jmp
call
xlat
mov
add
inc
jge
ja
fildll
pop
into
mov
mov
adc
jmp
push
mov
rcll
push
cmpsl
ret
or
outsl
sub
xor
sbb
in
push
inc
sub
mov
loop
jb
sti
xlat
push
push
sbbb
inc
jle
decl
das
cmp
push
lret
loopne
pushf
and
mov
jns
ds
out
pop
jnp
sub
pop
adc
pushl
scas
xor
frstor
mov
gs
xor
jbe
punpckhbw
push
xor
incl
or
cmp
sbb
or
mov
cli
push
jne
lcall
lahf
jle
mov
outsb
cmp
jg
mov
inc
jmp
adc
xchg
pushf
decl
xchg
sub
addr16
int3
fisttpl
outsl
dec
into
push
xchg
mov
negl
rcrb
xchg
pushl
inc
xchg
cmp
mov
call
imul
testb
cli
inc
cs
das
lods
pop
jmp
cmp
inc
sub
repz
xchg
xor
fldl
xchg
jns
xchg
mov
bound
adc
shrl
movsb
dec
and
xlat
andl
fnstenv
xchg
sub
movsb
mov
mov
push
sub
jge
or
jno
repz
xor
sub
push
fstps
xchg
pushl
add
scas
cmp
pop
mov
shrl
fdiv
adcl
lcall
xchg
cld
stos
jbe
mov
stc
xor
cmp
cmp
mov
add
push
mov
sbb
inc
sti
hlt
mov
std
and
inc
mov
enter
jbe
add
fprem
addr16
out
arpl
test
decl
popa
dec
xorb
sahf
cli
or
jns
call
add
or
add
loope
jno
frstor
sbb
or
sbb
andps
mov
mov
mul
sub
pusha
jmp
cmp
lea
lea
cwtl
setl
pop
mov
movb
lea
ja
call
mov
lea
call
call
xor
and
xchg
push
mov
pushf
popa
mov
cmp
or
sub
dec
inc
inc
ds
adc
cltd
push
and
outsl
sub
add
imul
sbb
test
mov
scas
std
ret
jae
roll
jecxz
sub
stos
ljmp
push
in
test
xlat
push
push
pushf
les
loopne
cld
push
adc
dec
imul
cmp
fs
ljmp
push
push
add
negl
inc
xor
lret
adc
adc
add
fidivl
sbb
iret
sbb
leave
adc
adc
jae
addr16
mov
fwait
push
dec
jg
jge
rclb
dec
xlat
mov
sub
aam
or
repnz
mov
mov
fs
sbb
push
mov
mov
out
push
mov
ja
ret
stos
cmp
mov
repnz
inc
push
mov
mov
inc
sub
das
rcrb
inc
sbb
insb
xchg
sarl
push
push
push
push
push
cmpsl
pop
mov
scas
scas
les
jbe
pop
cmpsb
mov
fmuls
mov
clc
ror
jmp
jmp
jmp
jmp
or
call
setbe
lea
jge
push
lods
pusha
call
mov
mov
xchg
stc
cmp
xor
xor
add
or
sbb
jge
cmp
pop
fmull
inc
adc
movb
pop
adc
in
push
into
push
adc
dec
fsts
outsb
cltd
push
stc
pop
ss
push
pusha
jbe
lds
lret
mov
jg
sub
ror
xor
arpl
mov
mov
lods
shll
sti
cwtl
push
mov
add
fadds
dec
dec
cmpsb
dec
mov
inc
mov
inc
add
icebp
adc
sub
dec
mov
mov
pushl
clc
or
call
jmp
shr
jmp
movzbl
bswap
pushl
pushf
pop
movsbw
push
lea
push
setle
lahf
movl
mov
lea
pusha
jmp
stc
cmp
call
stc
jmp
clc
cmc
not
push
ror
movb
pushl
jmp
test
xchg
repz
clc
sub
cs
push
inc
dec
xchg
lmsw
xchg
int
mov
mov
aas
adc
notl
iret
adc
adc
mov
add
mov
fs
sahf
arpl
jp
mov
aas
icebp
mov
and
lock
pop
lret
sbb
hlt
das
fldl
mov
pop
lret
add
jmp
mov
mov
xchg
mov
test
loope
fsts
aad
lds
pop
push
dec
test
mov
fld
sbb
test
pop
cltd
fsubr
mov
or
cmp
repnz
jbe,pt
pop
out
in
sti
add
fwait
push
mov
mov
arpl
cmp
jp
xlat
mov
testb
or
or
add
aad
hlt
push
in
jmp
stos
sarl
xchg
out
out
or
xor
cmp
ss
es
sbb
sbb
movsb
mov
ret
dec
inc
push
dec
cltd
dec
sub
jge
icebp
fwait
mov
mov
push
dec
bound
and
bound
dec
cmp
loopne
cmp
insl
mov
mov
movsb
or
loope
sub
lds
or
inc
adc
popa
mov
xchg
outsb
xchg
jg
bound
lahf
gs
imul
jle
jp
aaa
cmp
pushf
clc
add
add
pusha
clc
or
push
movb
jmp
js
dec
sub
xchg
inc
cltd
push
xchg
jo
jno
jge
push
pop
adc
jecxz
call
cmp
cmp
dec
aad
pop
popa
xlat
or
and
add
das
les
mov
out
or
xchg
rcrl
scas
nop
jg
push
cmp
add
out
xor
lret
xor
lret
xor
xor
dec
jbe
fimuls
or
call
xor
cs
insb
add
pushf
stos
daa
addl
or
xor
ss
jmp
test
or
push
inc
lock
movsb
inc
dec
nop
mov
sub
pop
or
xchg
dec
sbb
les
cli
sub
dec
out
sub
mov
xchg
fnstenv
out
add
jbe
aad
daa
xchg
push
xor
out
adc
bound
dec
mov
dec
cmpsl
bt
cmc
test
call
push
push
not
pushf
pushf
lea
lea
jne
pusha
movl
pushl
pushf
mov
pushf
mov
push
movb
pushl
ret
push
lea
call
push
mov
call
lea
ja
jmp
jmp
mov
call
call
mov
xchg
les
enter
pop
mov
adcl
das
adc
pop
mov
push
mov
fs
div
inc
lea
push
test
leave
dec
scas
push
pop
rolb
mov
call
or
inc
mov
inc
xchg
gs
push
fadd
and
fbld
xchg
jb
add
int
or
sub
sub
fisubrl
das
shrb
dec
cmp
cmp
and
pusha
lea
call
pushf
movw
pusha
mov
pushf
push
pusha
pushf
lea
jmp
fs
cmp
addl
mov
inc
popf
inc
xchg
dec
cmpsl
jl
fisttpll
and
sbb
mov
bsr
lret
leave
mov
stos
gs
mov
movsl
jns
push
movsl
scas
lcall
lock
test
mov
cmp
int3
ret
arpl
add
out
dec
xchg
push
int3
pop
out
mov
pop
aas
and
or
inc
cwtl
sbbl
xorl
ja
xchg
adc
fsubs
mov
decl
push
into
push
shrd
movzbl
neg
push
btc
push
adc
test
mov
inc
mov
cmc
test
push
pushf
lea
je
test
bsr
sbb
dec
mov
shl
btc
add
jb
mov
cmp
cmc
test
pushf
jmp
pushf
lea
jne
bswap
push
mov
pusha
mov
movl
lea
jmp
push
pushf
pushf
lea
je
bt
pusha
stc
jmp
scas
shll
addl
jmp
enter
mov
dec
mov
fisttpll
inc
mov
pop
inc
jge
mov
jb
jge
pop
ret
rorl
fldt
push
mov
pop
loopne
mov
push
xor
inc
shrl
fcmovnbe
in
fs
cmpsb
je
mul
je
xchg
xor
pop
aas
stos
mov
pusha
sub
lods
cmpsl
ja
jne
pop
mov
imulb
movsl
loopne
mov
pop
push
mov
push
push
mov
xchg
mov
mov
pusha
cmp
cmp
jmp
inc
add
addl
xchg
jnp
jno
dec
lahf
inc
xchg
popa
dec
add
int3
pop
xchg
lods
xor
mov
mov
mov
inc
mov
xor
lods
xchg
xchg
fsubrs
ds
loope
repnz
lods
orb
jae
cmp
cmc
push
pusha
push
sbb
pop
push
repnz
push
repnz
repz
icebp
mov
and
jns
jo
ret
sub
fimuls
jo
dec
pop
je
push
adc
ds
repnz
sub
sub
lret
sbb
in
pop
xlat
add
mov
xchg
cwtl
dec
aad
push
repnz
ss
outsl
mov
lahf
fiaddl
cmp
jb
ja
jp
ja
adc
ret
inc
mov
and
push
push
test
xchg
add
das
xor
adc
test
dec
inc
fcompl
loope
jg
sub
mov
mov
pop
rcll
lret
mov
push
pop
cmp
in
or
das
cli
sub
sub
sub
xor
bound
rcr
or
pop
mov
out
cli
aad
daa
out
shlb
jb
jns
jnp
add
and
cwtl
cs
and
les
add
das
in
aas
sbb
enter
xchg
sub
mov
jmp
test
pushf
push
hlt
push
cmpb
dec
fistps
jecxz
mov
or
hlt
mov
sub
imul
mov
aad
mov
lahf
xchg
mov
mov
in
cmp
and
fldt
mov
sub
lea
xor
adc
or
shrb
add
sub
cmpsb
mov
shl
ja
mov
dec
sbb
xchg
inc
xchg
gs
stos
jno
xlat
insl
test
ret
adc
or
insl
xchg
push
mov
outsl
xchg
imul
sti
mov
push
lcall
pop
call
pushf
push
movl
mov
mov
pusha
movl
push
lea
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
addr16
stc
cmc
cmp
pushf
jmp
call
lds
fistpll
psubusw
in
loopne
aas
adc
jno
ret
pusha
and
loopne
mov
cwtl
pop
lds
ljmp
sub
bound
outsl
out
out
cmc
push
mov
inc
lea
add
movsl
mov
jecxz
in
mov
sub
add
add
fiadds
add
stc
or
add
add
clc
add
ss
jl
adc
adc
xchg
int3
lcall
sbbb
incl
pusha
lea
jne
or
mov
bt
pusha
call
pushf
lea
call
call
pusha
pushl
lea
je
pushf
pushf
cmp
call
pusha
movb
push
pushl
popl
push
push
pushl
ret
clc
rol
push
call
test
push
cmc
cmpb
pusha
pushf
lea
jne
or
rcr
mov
push
add
pushf
jmp
push
pusha
pusha
movl
pushf
mov
mov
push
mov
pushl
ret
pusha
add
pushf
push
movw
movw
lea
jmp
in
pusha
pushl
movl
call
call
inc
or
xor
mov
push
das
outsb
cltd
push
mov
inc
movsl
in
add
cmpsl
xchg
dec
mov
jns
ret
or
std
sbb
loopne
lock
mov
pop
mov
jbe
addl
fimull
out
xor
push
int3
dec
lcall
inc
idivb
inc
sub
in
call
xor
mov
sub
pop
xor
les
mov
add
ret
test
testb
inc
fisttpl
neg
add
or
lods
aas
lret
out
ret
sbb
clc
pop
sub
outsb
andb
test
or
dec
or
lret
mov
push
lock
push
or
mov
ss
sbb
stos
pop
lahf
xchg
adc
cmp
or
inc
addb
cmpsb
mov
xor
loop
cwtl
nop
subl
cmp
xor
sbb
mov
rolb
out
jl
popa
jp
cmpl
in
icebp
outsb
testl
in
bnd
push
sbb
lock
lods
sbb
mov
out
pop
pop
fcoml
test
movsb
sub
stos
mov
jle
ret
pop
inc
daa
mov
rcrl
push
insb
mov
mov
stc
outsb
and
adc
daa
jp
fmul
psubusw
sbb
pop
out
sbb
sbb
adc
les
int
lds
pop
lret
and
loopne
sti
mov
jle
dec
xor
add
test
cltd
inc
xchg
dec
xchg
dec
cwtl
push
stos
jl
ja
mov
add
repz
sarb
and
les
repz
shll
out
lcall
add
xchg
inc
movsb
fsts
add
es
cld
or
pop
testb
call
idivb
add
movsbw
not
mov
movzbw
pop
lea
pop
movsbl
pop
push
pushf
mov
movzbw
pop
pusha
push
pushf
movb
pushl
ret
mov
xchg
out
shlb
sub
or
leave
mov
push
mov
xchg
inc
mov
inc
out
and
pop
orb
xchg
pop
mov
lock
sahf
aam
push
add
lds
inc
aam
addb
xor
imul
in
mov
rorb
les
rcrl
cmp
cmp
lds
cmpsl
jge
lds
mov
jns
out
push
mov
jb
jae
mov
jp
mov
scas
xor
lcall
divb
addl
insb
mov
mov
push
mov
push
pushf
int
test
in
or
inc
adc
nop
clc
mov
rorb
mov
xlat
pop
pop
push
cmc
bound
xchg
iret
fimuls
int
push
sti
jnp
idiv
mov
outsb
ja
in
test
leave
lds
rorl
cwtl
inc
xchg
insb
push
lahf
xchg
xchg
outsl
add
jl
sub
sub
inc
push
pushf
pushf
pushf
lea
jmp
ret
xor
cmp
aaa
ljmp
xor
leave
les
push
mov
add
dec
pop
xor
int3
int3
fimuls
xchg
and
mov
push
xchg
dec
fwait
out
inc
scas
gs
mov
xor
mov
pop
xor
sbb
nop
scas
dec
xchg
aam
mov
cli
push
fucomp
enter
jno
jne
ja
mov
jno
lea
jp
jl
shlb
sub
and
lea
call
pusha
push
movl
pushf
lea
jmp
call
popa
xor
xchg
fwait
pop
cmpsb
inc
xchg
dec
rcr
or
cmp
movsb
fwait
push
cs
or
mov
jge
mov
mov
mov
mov
stos
sbb
push
movsb
loope
fsubrl
xor
xchg
push
or
sub
push
cmpsb
mov
xor
test
add
pop
mov
push
lods
push
stos
ljmp
mov
out
fnsave
addl
and
xor
sub
xchg
aaa
push
mov
mov
lock
shl
or
or
or
xor
je
les
mov
push
popa
lret
imulb
xlat
sbb
bound
mov
dec
jns
pop
xchg
mov
into
inc
daa
sub
sti
xor
sub
rolb
cmp
cli
test
pop
inc
xor
int
insb
adc
mov
mov
movsl
pop
push
stos
pop
cmpsb
pop
pop
dec
stos
pop
cmp
sbb
sub
cmp
popa
mov
mov
jmp
lea
call
jmp
cmp
movb
pushf
jmp
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
mov
mov
pusha
call
movb
movl
pushf
pushf
movl
pusha
lea
jmp
lea
pusha
pushf
jmp
push
insb
sbb
addl
inc
xchg
jl
jnp
js
dec
dec
inc
or
pop
rorb
rorb
push
mov
jns
inc
and
movsl
cmovbe
sbb
mov
je
lds
fsubp
mov
cld
outsl
movsb
fnsave
mov
or
bound
loopne
insl
cmp
cli
repnz
mov
add
rol
ret
shlb
cmp
repnz
add
cmpw
pushf
call
mov
jne
addl
std
and
push
shlb
imul
dec
aas
out
cmp
iret
or
or
ljmp
jl
add
adc
les
push
aad
pop
fimuls
nop
dec
or
into
or
xor
xchg
dec
dec
mov
sub
push
shll
xchg
xor
cmp
flds
cmpsl
loop
fisttps
inc
scas
push
pop
ror
or
in
sub
mull
sti
and
sub
and
and
int3
cmp
out
xor
mov
mov
movsb
inc
inc
lcall
cmpsb
push
cmpsb
dec
cmpsb
pop
pop
cli
xor
xchg
dec
mov
mov
mov
cmc
jo
addr16
out
scas
cwtl
or
andb
jp
inc
xchg
imul
aas
cmp
inc
pop
scas
stos
test
ror
cmc
stos
fs
fld
mov
or
out
loopne
mov
dec
adc
dec
pop
mov
cltd
lcall
inc
lock
rcrb
mov
pop
add
aam
adc
jl
cmp
ja
push
leave
shlb
xchg
out
cmp
pop
fs
mov
xlat
pushf
jae
inc
mov
xchg
dec
pop
dec
and
dec
xchg
mov
adc
ss
loop
mov
cvtdq2ps
fucom
cmp
hlt
sub
pop
jne
jne
mov
add
lret
dec
xchg
ffreep
and
dec
fxch
int
dec
xchg
out
out
inc
dec
push
leave
add
push
pop
xchg
fiadds
fildl
ljmp
test
push
xchg
scas
js
sub
mov
xchg
mov
jl
jbe
cmpl
js
je
pop
push
into
push
movsb
add
pop
ljmp
dec
outsl
fs
gs
popa
outsb
fs
gs
add
xor
push
sbb
popf
xor
mov
pop
aaa
aad
out
push
mov
xor
jecxz
loop
mov
mov
xchg
das
clc
push
fnstenv
sub
jmp
inc
lods
push
es
inc
stc
and
divl
mov
mov
sahf
in
sub
jle,pn
js
inc
iret
and
xor
and
push
mov
mov
mull
xor
aam
pop
nop
aaa
ss
out
std
pop
mov
jb
and
mov
push
push
adc
xor
inc
std
cmp
mov
or
bound
push
sub
xor
iret
scas
mov
inc
xchg
ja
and
cli
arpl
das
jmp
xchg
imul
mov
sti
pop
dec
jno
aad
std
inc
out
mov
mov
and
or
ds
stos
xor
std
imulb
aad
negl
repnz
adc
pop
pop
insl
std
insb
adc
les
notl
xchg
mov
in
in
xor
pop
mull
push
pop
andl
ss
sarl
scas
aad
add
mov
mov
xor
test
das
and
xor
xor
je
jo
clc
fdivs
mov
cli
stc
dec
cmp
aam
xchg
mov
fiadds
insl
push
fdivs
sub
jp
leave
mov
mov
rcrb
pop
mov
pop
push
cmpsl
push
and
imul
xor
push
mov
icebp
std
mov
push
and
pop
fwait
lds
ret
push
lcall
int3
test
jp
mov
pop
loop
mov
test
scas
xchg
idiv
push
daa
xor
xor
mov
cmpsb
cmp
cmp
mov
hlt
lds
cli
mov
daa
das
sub
push
sub
and
sbb
addr16
push
xor
sub
lcall
inc
sbb
xor
or
jp
mov
inc
dec
mov
inc
pop
mov
aam
clc
ss
mov
sbb
aad
cmp
ret
repnz
xor
mov
push
xor
pop
inc
adc
adc
push
xor
aaa
aaa
jp
scas
and
xor
inc
ret
call
push
xor
sub
ja
xor
jbe
sub
sbb
push
add
xchg
call
lds
push
xor
sbb
push
fdiv
mov
dec
aad
add
xchg
fcoms
jb
mov
inc
and
mov
cmp
add
jbe
js
mov
jl
push
fisubrl
xchg
push
mov
movsb
mov
push
das
sbbb
sub
and
sbb
mov
cmp
mov
push
mov
in
cmc
xchg
enter
mov
mov
mov
fnstenv
xor
jle
pushf
enter
push
sbb
jns
pop
cwtl
mov
call
sbb
adc
pop
inc
out
repnz
scas
inc
and
mov
int3
xchg
mov
push
cs
imul
ja
mov
inc
xor
jo
in
mov
std
loopne
mov
aam
mov
ret
push
sub
es
add
int
and
pop
jecxz
scas
dec
cmp
scas
int
xchg
mov
fisttpl
idivl
lock
or
cmpsl
sub
push
sub
adc
mov
pop
and
mov
mov
push
aaa
sub
push
fldt
mov
push
mov
xor
jno
add
cmp
inc
mov
add
xchg
cs
sub
mov
fmull
out
fwait
idivb
push
das
arpl
push
and
xor
pop
jmp
das
movsl
fists
pop
mov
addl
sub
pop
imul
loope
or
sub
xor
sarl
push
in
jns
cmc
lcall
mov
into
std
fistl
cmpsl
inc
rorl
fildll
and
push
and
mov
ss
pop
mov
jnp
aad
and
jle
dec
subl
imul
mov
in
sbb
push
fisttpll
bound
mov
je
mov
xchg
push
fwait
or
push
cs
imul
push
mov
push
sub
es
push
mov
cmp
sbbb
aam
rorb
xchg
and
mov
jge
mov
stc
mov
inc
mov
ja
leave
push
iret
and
push
xor
test
fnstsw
or
adc
inc
out
xor
je
xchg
cs
mov
test
imul
xor
mov
cmp
stos
mov
xor
mov
jb
mov
and
cs
mov
das
cmp
fcompl
addr16
std
aam
ljmp
movsb
popf
ja
frstor
xchg
adc
into
adc
inc
sti
repz
aad
js
and
hlt
push
outsb
fstp
push
mov
sahf
inc
inc
xor
loope,pn
sarl
ja
cmp
pop
shlb
sub
daa
sub
jmp
pop
jae
inc
not
or
dec
or
sub
pop
jg
and
mov
dec
fisubs
es
inc
aaa
push
push
push
adc
sub
and
pop
sub
xor
aad
repnz
cmp
xor
mov
or
movl
jmp
mov
or
push
es
fidivl
cmp
and
mov
arpl
dec
jae
push
sub
and
jge
mov
push
mov
and
dec
cmpsb
mov
and
jmp
adc
lods
inc
sub
nop
adc
mov
xlat
sub
adc
ss
fwait
mov
adc
sub
ss
cmc
dec
mov
lahf
and
inc
jbe
loopne
mov
sbbb
cltd
fcoml
mov
mov
mov
std
icebp
dec
notb
or
fsubrl
xor
xchg
negl
idivb
push
adc
in
xchg
xor
lret
pop
mov
out
add
movsl
dec
loop
dec
call
add
push
jl
idivl
and
jl
adc
imul
inc
fidivl
push
jp
pop
adc
mov
xorl
test
lea
mov
imulb
inc
inc
jmp
jnp
jbe
je
sti
adc
jno
sbb
std
stos
push
lea
js
mov
push
aad
aaa
hlt
mov
scas
xchg
xor
cld
aas
jns
pop
inc
das
mov
dec
std
push
xor
mov
jno
dec
xor
xchg
push
and
cmp
jg
mov
ret
jns
xchg
loop
sbb
or
icebp
push
sti
xor
xor
movsl
insb
xchg
add
out
es
mov
ret
aam
or
cmc
mov
adc
loopne
rorl
push
mov
pop
fcoms
shl
out
adc
fstl
jb
xchg
jne
mov
scas
aad
sub
cli
aad
xchg
xchg
sbb
fidivl
mov
jbe
std
mov
and
xor
push
cmp
pop
jle
mov
clc
sti
xchg
mov
aam
adc
ret
jne
jp
imulb
mov
mov
pop
es
dec
xor
repnz
and
jno
inc
cmpsb
loopne
fcmovnu
lds
mov
imulb
mov
xchg
ss
dec
push
enter
pop
ret
aad
pop
inc
dec
je
add
adc
fnstenv
mov
std
add
xor
sbb
pop
adc
xchg
mov
inc
sbb
std
ja
int
repz
test
adc
cmpl
mov
popf
mov
mov
jo
in
cmp
inc
mov
divb
sbb
std
sub
jecxz
dec
daa
fstpl
jecxz
scas
jnp
std
mov
xor
ljmp
push
dec
fidivl
aaa
add
inc
call
xor
jbe
std
outsl
cmp
fimull
ss
push
jb
jnp
mov
jbe
adc
iret
add
sbb
push
fdivrp
xchg
dec
adc
ret
mov
clc
or
stc
mov
test
cltd
pop
jmp
lret
ljmp
es
lds
loope
insb
sbb
mov
adc
cs
inc
inc
xor
divb
push
cmp
imul
mov
cmp
clc
sar
jne
jbe
mov
cmpsl
es
jecxz
and
es
pop
punpckldq
shl
xorb
ret
ja
sbb
aad
xor
cmp
pop
cs
scas
mov
cmpsl
xchg
cmpsb
insb
shr
push
loope
in
xchg
sahf
clc
aaa
mov
arpl
fldt
aaa
shlb
xchg
icebp
vunpcklpd
stos
dec
sub
push
fwait
mov
shrl
rol
mov
jo
mov
cwtl
imul
mov
sti
sbb
push
idivl
fisubrl
mov
ljmp
add
sub
insl
scas
jb
adc
cmp
das
fidivs
bound
sar
loopne
in
mov
in
addr16
arpl
push
pop
stc
mov
ja
addr16
call
adc
fst
sbb
mov
jno
iret
js
xor
dec
add
flds
ja
push
sarb
mov
and
test
insb
std
cmc
rcrl
and
pushf
insb
cwtl
inc
or
xlat
lods
mov
sub
sub
aaa
mov
inc
push
jmp
aam
mov
pusha
pop
xlat
scas
fidivl
out
hlt
sub
mov
sub
lock
ljmp
fcomip
repnz
hlt
and
imulb
xor
in
xor
adc
and
daa
int
aaa
mov
xchg
xlat
xor
add
daa
iret
ss
adc
jle
aaa
iret
lock
and
push
sub
xor
mov
push
aad
add
and
jne
xchg
xlat
addr16
mov
mov
outsl
popf
idiv
ret
shll
shrb
xlat
sti
xchg
cs
call
pop
in
scas
push
and
inc
add
push
jge
inc
inc
push
and
jo
mov
xor
or
mov
mov
mov
arpl
shlb
push
fisttpl
cmp
pushf
xchg
sub
cs
loope
pop
add
dec
and
decb
ror
sub
jmp
pop
test
jge
jmp
xchg
xor
add
scas
mov
inc
mov
push
js
in
add
xchg
ss
loopne
repnz
mov
and
jbe
xchg
pop
jbe
and
or
mov
fwait
mov
adc
inc
into
dec
and
pop
insl
mov
or
negl
aaa
or
or
out
ja
xlat
xor
and
fidivrl
imul
xor
fwait
push
mov
xorl
pop
push
je
out
arpl
xor
aam
ss
jae
jmp
fbld
test
cmc
adc
ss
jnp
jnp
je
push
or
je
idiv
imul
sbb
outsl
add
sahf
push
cmc
adc
push
into
adc
adc
in
xor
and
imul
sub
std
jo
adc
out
add
mov
mull
arpl
cmp
or
push
push
std
out
das
xor
or
add
mov
push
push
push
add
scas
add
add
push
sbb
aam
insl
add
push
mov
inc
xor
jge
inc
adc
sub
xor
push
mov
mov
mov
call
xor
arpl
movsb
jle
fisttpl
lret
aas
sub
inc
aad
divb
outsb
and
fnstcw
rcll
mov
mov
cld
lahf
in
xor
push
fnstenv
push
xor
cli
add
fidivl
fs
jne
cmp
add
sti
xor
sbb
fbld
bound
push
mov
nop
mov
add
fsubs
sub
je
ja
mov
cmc
outsl
sbb
sbb
idivl
pop
inc
addl
cmp
ljmp
pushf
mov
cmp
pop
mov
mov
insl
mov
insl
mov
cmpb
and
pop
cmpb
jge
jo
rcrl
jge
ss
inc
inc
movsb
fsts
push
mov
fwait
gs
fstpl
jns
jl
notb
cmc
push
std
and
mov
inc
and
pop
imull
jo
jae
jg
data16
lahf
and
sub
jge
push
mov
and
daa
rclb
iret
xchg
adc
leave
cmp
ljmp
pop
popf
inc
pop
xlat
push
xor
fdivrp
push
mov
dec
aad
cmc
daa
fs
and
in
out
cmp
adc
adc
ret
roll
add
cmpsb
add
and
sbb
sbb
pop
loopne
loop
call
sahf
xor
addb
nop
jnp
push
pushf
movl
call
lea
ja
dec
and
add
pusha
inc
mov
clc
cmp
pusha
push
mov
lea
jb
test
pushf
cmp
cmp
call
pusha
pushf
setle
lods
bt
xor
clc
pusha
clc
not
jmp
mov
xchg
ret
adc
adc
mov
outsb
out
inc
xchg
rcll
xchg
push
xchg
inc
pop
mov
pop
mov
adc
test
test
iret
mov
in
jp
push
sti
sbb
scas
lds
adc
sub
sub
and
xor
push
lds
notb
loopne
inc
inc
and
xchg
dec
bound
and
movb
lea
jmp
jae,pt
dec
addl
insb
mov
pop
mov
movsl
xor
out
cld
mov
or
or
repnz
clc
ss
test
adc
in
in
push
adc
sbb
out
in
cmp
into
xor
call
jmp
mov
pushf
call
pushf
cli
test
xchg
in
fstpt
loop
loop
pop
xor
ss
pop
adc
pusha
push
xchg
pop
pop
mov
push
mov
xor
shll
and
sub
jp
std
fadd
outsb
and
add
xchg
mov
sbb
sti
lret
sbb
pop
and
mov
into
mov
inc
addl
or
or
fadd
outsb
jne
loope
mov
sbb
test
mov
pusha
mov
push
js
cmp
add
xchg
add
xchg
sub
or
mov
test
mov
les
dec
or
adc
daa
insb
mov
fistl
hlt
cs
scas
pusha
mov
jb
scas
or
inc
mov
repnz
jns
popa
stos
popa
lahf
arpl
imul
sbbl
dec
addl
scas
pusha
jns
int3
ds
sbb
test
lods
dec
push
xchg
pop
sbbl
mov
lcall
jne
push
mov
imul
inc
push
and
add
scas
mov
push
mov
mov
push
or
or
inc
mov
pop
fs
cmp
pop
inc
jle
inc
and
pusha
lods
outsb
mov
inc
mov
fwait
sbb
ljmp
cs
fildll
int3
iret
ret
mov
les
adc
push
lea
je
test
push
movl
pusha
cmp
call
cmp
pusha
push
call
add
add
das
rol
stc
bts
push
shld
adc
mov
pusha
rcr
sub
bsr
sub
lahf
push
btr
push
shl
aad
rol
push
clc
aad
daa
sub
cwtl
lahf
pushf
call
pushf
lea
ja
jmp
clc
cmp
cmp
xor
cmp
xor
jbe
mov
mov
stc
sti
mov
testl
cmp
mov
jbe
idiv
cmp
cmp
mov
ja
ja
mov
mov
adc
lea
push
pushl
ret
inc
clc
call
test
call
lea
jne
add
or
rol
and
mov
pusha
bt
pushf
cmp
pusha
push
lea
ja
pushf
movsbw
bswap
setl
mov
not
xchg
mov
not
mov
pushf
pushf
pushl
bswap
mov
jmp
pushf
stos
pushf
mov
pushf
pusha
lea
jmp
jmp
jmp
scas
out
xchg
dec
addl
int3
sbb
sbb
and
or
ds
std
xchg
push
add
push
xor
in
cmp
hlt
or
xor
sub
lods
jnp
push
mov
or
mov
xchg
pop
leave
cld
or
mov
pop
mov
xchg
fsub
lret
sti
push
xchg
and
rcl
xlat
shlb
and
addl
pop
mov
dec
xchg
stc
fidivl
outsb
out
push
mov
pop
xor
hlt
adc
sbb
sbb
sub
and
loope
mov
dec
push
mov
push
adc
das
scas
cmc
aas
add
push
lea
mov
mov
jns
movsb
mov
dec
fwait
icebp
adc
addr16
in
les
fnsave
adc
and
adc
sbb
in
in
sbb
and
addb
cmp
lea
pushf
pushf
pushf
push
movl
jmp
lea
jb
pusha
clc
cmpb
pushf
lea
jne
shl
adc
sbb
jmp
fidivs
sbb
push
les
lret
sub
and
jp
xchg
inc
repnz
xor
mov
mov
or
push
in
jmp
push
push
sub
push
aas
jmp
out
or
jmp
cmp
setno
cwtl
lea
pushf
pushf
movzbw
jmp
lea
ja
push
bt
jmp
jmp
push
pusha
lea
jmp
add
jmp
pushl
stos
pushf
setg
call
call
jmp
cmc
pusha
rol
push
not
pushf
ror
cmp
cmp
jmp
test
push
stc
add
pusha
call
movb
call
rol
pusha
inc
pushl
ror
pushf
cmc
add
push
clc
call
movw
pushf
mov
pushf
jmp
out
mov
addl
cmp
fnstenv
outsb
out
jp
in
jp
xchg
mov
jae
jns
jb
jo
stos
in
test
dec
mov
call
xor
fldl
sahf
xor
les
rcll
push
aam
hlt
rcrl
outsl
push
addr16
inc
fwait
imul
loop
sbb
or
testl
mov
movsb
pop
pop
xchg
rol
movsbw
or
btc
mov
stc
push
bswap
shld
mov
add
or
stc
rol
mov
cmp
pushf
clc
mov
stc
test
jmp
jmp
push
lock
std
std
test
xchg
push
mov
ret
jne
test
lret
frstor
data16
pushf
mov
pop
jae
xor
xor
mov
in
cmp
jp
push
push
int
mov
push
sub
or
add
daa
xchg
test
jbe
in
xchg
push
cmpsl
adc
je
in
or
sarb
enter
rorb
setge
movb
pushf
pusha
lahf
mov
pop
lea
lea
jmp
cmp
or
pushl
pushl
call
movzwl
lea
and
neg
mov
jmp
stc
cmp
pusha
lea
ja
cmc
sbb
setae
ror
sub
bt
push
bts
cmc
add
add
dec
jmp
not
mov
test
cmc
add
clc
test
mov
jmp
bswap
pushf
movsbw
bswap
mov
not
dec
shrd
push
ror
push
rcr
bsf
mov
cmc
xchg
rcl
mov
shld
rcl
mov
jmp
int3
popf
jmp
call
pusha
mov
cmp
stc
test
movb
mov
lea
je
call
movl
push
movb
lea
jmp
and
push
addl
jne
jg
xchg
xchg
insb
cmp
jno
mov
and
and
inc
insl
pop
mov
inc
pushf
inc
inc
fildl
cmpl
enter
out
mov
jb
mov
icebp
xchg
cmp
jnp
mov
jne
int
push
cmp
sbb
jae
pop
rcrl
scas
call
mov
push
cmpsl
lds
inc
mulb
arpl
adc
add
cmp
cmp
iret
xor
xor
cmp
mov
cli
cmc
add
pushf
cmp
pushl
lea
jb
pusha
lea
jmp
pushf
mov
movsbw
lea
pusha
pushf
movl
call
pushf
clc
jmp
bts
xor
add
sub
sub
movsbw
and
rcl
rcr
shr
btr
sbb
or
bts
mov
pushf
add
rol
shrd
add
inc
add
not
mov
bsr
mov
stc
jmp
push
push
mov
inc
mov
pusha
jmp
dec
stc
mov
clc
clc
ror
pusha
cmp
call
jp
xor
xchg
lea
push
mov
sub
or
sub
mov
inc
nop
imul
sbb
test
outsb
cmpsb
jno
adc
fistpll
rcr
out
filds
push
leave
xchg
mov
mov
add
inc
add
pop
xlat
cwtl
stos
pop
mov
jl
das
cmp
test
jmp
testb
push
inc
jae
inc
cwtl
inc
sub
dec
push
mov
push
xchg
xchg
xchg
xchg
mov
jp
push
movsl
xchg
pusha
pushf
movl
pushf
jmp
sub
push
addl
xor
cmp
lods
cltd
add
add
jmp
adc
lods
jo
xchg
dec
stos
js
jg
jl
jl
add
inc
pop
mov
lods
push
add
add
in
test
lea
ret
add
pmaddwd
repnz
std
cli
call
insl
push
or
ss
in
out
incl
xchg
in
fidivrs
out
rorb
rolb
mov
fs
xlat
lock
pop
jne
movsl
mov
sahf
dec
into
mov
push
cwtl
enter
pop
nop
mov
add
std
lahf
dec
nop
addr16
push
xchg
pop
push
sbb
rcrl
inc
shlb
pop
dec
inc
cli
fcoms
mov
adc
lea
sub
lret
mov
and
pop
xor
xlat
and
in
cld
pop
adc
sbb
pop
loop
sbb
sbb
aas
test
jp
xchg
lea
ja
call
mov
cmp
movb
lea
jb
cmp
cmp
cmp
pushf
lea
jae
stc
rol
not
rcr
mov
adc
mov
dec
mov
pushf
movb
xor
cmp
cmc
test
repnz
push
jmp
mov
mov
xchg
jmp
cld
and
stos
movsb
jns
loopne
sub
out
mov
jmp
bound
lods
jb
jnp
jnp
xor
jnp
sub
shlb
ds
jbe
mov
inc
rclb
bound
cmp
jne
inc
cmpsl
jle
cmpsl
push
popf
inc
mov
xchg
cmp
subl
jns
mov
cwtl
push
xchg
ja
insb
lahf
icebp
loopne
or
xchg
add
xchg
pop
xchg
bound
insl
mov
push
cmpsb
and
jns
cmpsl
mov
dec
dec
mov
pushf
test
ljmp
mov
xchg
shl
push
pop
inc
mov
lds
xchg
jp
jp
mov
mov
loopne
mov
repnz
mov
fs
mov
push
mov
data16
test
out
add
neg
jmp
mov
push
pusha
lods
call
lea
je
clc
clc
jmp
pushf
movl
pushf
push
lea
jmp
push
pusha
pushl
lea
jae
pusha
pushl
xor
pusha
call
call
push
call
sub
bt
add
clc
sub
sub
mov
jmp
cmc
pushl
or
pushl
pushl
lea
je
bswap
push
call
movb
mov
mov
pushf
jmp
lea
pop
pop
call
lea
call
jb
pushf
pusha
pushf
lea
jae
call
sub
addl
lods
je
jne
jp
jb
push
pop
adc
mov
sbb
xor
xchg
pusha
fcmovb
leave
or
and
xchg
mulb
aad
jmp
sub
fadd
pusha
pop
adc
dec
cld
push
mov
add
test
adc
addr16
into
cld
int
or
add
testb
str
std
or
sarl
ss
sbb
addl
cmp
xor
fiaddl
fisttps
testl
jns
stos
push
jg
scas
pop
ret
int
sbb
inc
nop
inc
cs
sub
fistl
test
jmp
in
lea
jp
pop
mov
xchg
push
icebp
divl
out
test
lods
arpl
bound
imul
xchg
imul
lcall
int
pushf
call
popf
cpuid
nop
pushf
movl
push
pusha
pushf
movl
pushf
lea
jmp
jmp
movsbl
mov
push
pusha
lea
mov
mov
pushf
mov
pushl
push
lea
jmp
mov
pushl
pusha
movb
pushf
lea
jmp
pushf
popl
pushf
call
rol
and
btc
add
movzbw
movzbl
btr
add
not
not
cmp
xor
dec
sbb
btc
shld
add
dec
dec
mov
inc
movzbl
jmp
mov
push
pushl
pushf
mov
mov
mov
lea
jmp
jmp
mov
jmp
ror
aam
dec
mov
adc
mov
jmp
mov
mov
movb
pushf
lea
jmp
sub
mov
jmp
push
pushf
setbe
lahf
mov
movw
xor
push
pusha
cmc
clc
xor
jmp
mov
repz
popl
jmp
shl
shrd
bsr
movzbl
jmp
jmp
mov
call
pushf
mov
call
mov
call
sar
xor
mov
stc
test
bt
push
add
call
jmp
pushf
pushl
mov
mov
pusha
jmp
push
mov
mov
pusha
pushf
pushf
mov
jmp
mov
call
mov
pushf
jmp
jmp
mov
push
movb
push
lea
jmp
cmc
shr
pusha
pushf
movb
movw
mov
push
movb
push
pushf
popl
push
mov
pushf
jmp
clc
movb
clc
xor
pushl
mov
mov
lea
jbe
dec
cmp
add
push
cmp
clc
jmp
pushl
popl
pushf
lea
jmp
sar
neg
rcl
mov
call
pushf
add
dec
neg
neg
movsbl
sub
lea
bswap
mov
clc
pusha
call
mov
mov
mov
call
cmp
cmp
add
call
mov
push
movw
push
lea
jmp
pushf
jmp
mov
push
mov
push
mov
pushf
pushf
lea
jmp
push
push
mov
pusha
pushf
pushf
mov
pushf
pushf
lea
jmp
call
pop
adc
adc
pop
adc
pop
adc
pop
adc
push
pop
adc
pop
adc
push
pop
adc
or
push
adc
testb
movl
pop
adc
add
adc
add
adc
pop
pop
adc
push
adc
pop
adc
sbb
adc
sysret
adc
pop
adc
or
adc
sbb
adc
sti
pop
adc
sbb
adc
pop
adc
push
adc
sti
pop
adc
add
adc
pop
adc
sbb
adc
or
adc
pop
adc
push
pop
adc
pop
adc
push
pop
adc
push
pop
adc
push
push
adc
pop
adc
pop
adc
pop
adc
push
adc
add
adc
pop
pop
adc
pop
adc
pop
adc
pop
adc
or
adc
or
adc
pop
adc
sbb
adc
or
adc
or
push
adc
add
adc
sbb
pop
adc
or
pop
adc
add
adc
pop
adc
or
adc
or
adc
or
adc
pop
adc
add
adc
adc
adc
adc
adc
adc
push
adc
pop
adc
sbb
adc
pop
adc
pop
adc
push
adc
pop
adc
pop
adc
pop
adc
sysret
adc
pop
adc
or
pop
adc
pop
adc
add
adc
pop
adc
adc
adc
or
adc
adc
adc
or
adc
add
adc
or
pop
adc
add
adc
sbb
adc
push
adc
adc
push
pop
adc
or
adc
pop
adc
pop
adc
add
pop
adc
push
adc
pop
adc
pop
adc
sbb
pop
adc
push
pop
adc
sbb
adc
testb
fisttps
pop
adc
push
adc
cmc
pop
adc
pop
adc
or
adc
sbb
adc
add
adc
push
pop
adc
push
pop
adc
pop
adc
push
adc
adc
adc
sbb
adc
push
adc
cmc
pop
adc
push
pop
adc
push
pop
adc
or
pop
adc
testb
cltd
add
adc
or
adc
sti
pop
adc
incl
adc
or
pop
adc
cld
pop
adc
sbb
adc
pop
adc
push
pop
adc
pop
adc
sbb
pop
adc
pop
adc
sbb
pop
adc
pop
adc
sysret
adc
push
pop
adc
pop
adc
pop
adc
pop
adc
add
adc
pop
adc
push
pop
adc
pop
adc
add
adc
adc
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
push
adc
cmc
pop
adc
pop
pop
adc
push
adc
cmc
pop
adc
or
adc
or
pop
adc
pop
adc
adc
adc
or
adc
push
adc
pop
adc
adc
pop
adc
adc
pop
adc
adc
pop
adc
adc
pop
adc
adc
mov
mov
pushf
movb
pushf
mov
push
push
pushf
jmp
pushl
inc
mov
mov
shld
mov
sar
mov
cmp
call
jmp
call
pushl
popl
pushf
lea
jmp
pushf
mov
mov
lea
jmp
pushf
call
push
mov
pushf
lea
jmp
pushf
pushf
pushf
pushf
mov
pushf
pushl
pusha
lea
jmp
jmp
jmp
sub
jne
ror
notl
sbb
call
mov
movw
pushf
push
pushf
lea
jmp
not
cmc
not
call
pushl
popl
pushf
movb
pushl
pushl
lea
jmp
pushf
mov
call
bt
sub
mov
call
mov
jmp
mov
pushf
pushf
push
lea
jmp
mov
call
jmp
call
cmc
shrd
pushf
mov
bt
sub
mov
pushl
cmc
sub
test
shl
mov
movw
pusha
mov
mov
mov
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
mov
pushf
setle
setbe
mov
jmp
push
call
shl
not
sub
notl
not
sub
clc
pusha
mov
pusha
pushf
pushl
sub
clc
clc
bt
and
jmp
jmp
mov
pushf
call
movzbw
mov
jmp
mov
call
pushf
mov
movw
inc
stc
cmp
push
xor
clc
test
clc
test
mov
clc
test
bt
stc
sub
jmp
bts
adc
ror
lea
pushf
cmp
mov
jmp
mov
xadd
mov
test
mov
pusha
cmp
sub
pusha
add
jle
clc
shl
jo
push
push
push
mov
pushf
mov
call
movl
jmp
call
mov
mov
jmp
mov
pushf
sub
jmp
jmp
mov
bswap
push
mov
call
mov
jmp
pushf
pushl
movzbw
mov
movl
mov
pushf
pusha
call
mov
mov
movb
mov
movw
lea
jmp
pushf
mov
jmp
call
call
mov
push
mov
pusha
lea
jmp
mov
push
mov
pushf
pushf
lea
jmp
xor
bt
xchg
clc
jmp
mov
push
jmp
mov
pushl
mov
jmp
mov
push
push
mov
pushf
popl
call
pushf
push
movl
jmp
jmp
mov
pushf
movw
push
mov
pushl
mov
movb
mov
push
jmp
add
push
pusha
pushf
jmp
clc
mov
not
pushf
xor
cmp
movw
add
push
jmp
pushf
mov
mov
lea
jmp
add
pushf
mov
pushf
lea
jmp
mov
call
movb
pushf
popl
pushl
pusha
pushl
popl
movw
pushl
push
lea
jmp
add
cmc
lea
movzbw
mov
call
mov
pushl
jmp
jmp
push
pushf
mov
movw
pushf
pushf
lea
jmp
pushl
push
mov
pushf
mov
call
jmp
movb
pushf
jmp
call
aas
dec
movzbw
mov
bts
xor
btr
mov
test
clc
call
pusha
mov
call
call
push
pusha
mov
pushf
mov
lea
jmp
call
test
cbtw
clc
cwtl
jmp
mov
mov
lea
jmp
btr
test
pusha
inc
mov
add
add
jmp
push
jmp
mov
mov
mov
jmp
test
cmp
cmp
pusha
pushf
lea
jne
mov
bswap
xorb
movzbw
mov
not
pop
pusha
pushf
push
lea
jmp
pushf
pushf
popl
mov
movb
movb
pushl
popl
push
pushf
pushf
lea
jmp
pusha
mov
jmp
pushf
mov
mov
pushf
mov
mov
mov
push
movb
lea
jmp
push
movl
pushf
mov
movw
mov
pushf
pushf
pushl
ret
shl
rol
not
mov
neg
dec
not
movzbw
inc
bt
rol
shl
and
bts
shl
sub
mov
jmp
mov
pushf
push
jmp
jmp
pusha
push
mov
pushf
mov
mov
mov
call
movl
pushl
popl
pushf
pushl
mov
movb
lea
jmp
pusha
pushf
pusha
inc
call
push
lea
call
pushf
pushl
pushl
popl
mov
lea
jmp
push
pusha
movw
pushf
popl
call
call
push
mov
movw
pushf
movb
lea
jmp
call
rcr
movzbl
shl
cmp
or
shl
add
ror
not
ror
btc
shld
xor
shrd
pusha
sub
sar
push
bsf
add
shld
shr
mov
movw
cmc
sub
stc
stc
pushl
add
pushl
jmp
not
cwtl
pusha
mov
pushl
lahf
mov
push
lea
cpuid
clc
pushf
call
shl
jmp
shl
jmp
pushf
pushl
popl
push
jmp
push
lea
jne
pushf
mov
pushl
pushf
lea
jmp
pushl
popl
pushf
push
movb
pushf
lea
jmp
jmp
pushf
push
movb
mov
mov
call
pushf
mov
mov
mov
repz
popl
pushf
pusha
call
xadd
btc
sub
dec
lea
mov
btc
mov
movzbl
ja
ror
and
add
bt
shl
mov
rcr
setle
xor
stc
neg
sete
jmp
call
xchg
push
mov
repz
popl
rol
pop
cmp
push
pushf
sub
xchg
clc
mov
push
shrd
push
stc
shld
inc
adc
push
stc
rcl
push
test
call
xchg
bt
xor
stc
sub
pusha
jmp
mov
call
pushf
mov
jmp
call
mov
mov
pushf
mov
cmp
sub
stc
call
movw
mov
movw
pushf
lea
jmp
movl
jmp
sub
call
push
add
call
jmp
test
stc
add
pushf
cmc
pushl
popf
pushf
lea
jmp
mov
pushf
call
pusha
push
pushf
mov
call
cld
movb
rep
pop
lea
ror
mov
bsr
pop
mov
clc
pushl
popf
movl
pusha
lea
jmp
mov
push
sub
pusha
pushf
pushf
mov
pushl
mov
pushl
lea
jmp
pushf
sub
pushf
jmp
repz
popl
call
pusha
call
pusha
bswap
pushf
mov
movb
lea
movb
call
btr
mov
pushf
add
jmp
bt
test
xor
call
lea
jne
pushf
push
sub
jmp
cwtl
pushf
push
sub
pushf
lea
jg
pushf
mov
pusha
pushl
pushf
lea
jmp
jmp
das
or
mov
clc
pushf
xor
mov
jmp
call
mov
call
pushf
mov
call
jmp
mov
mov
jmp
mov
push
lea
jo
pushf
repz
popl
pushf
pusha
pusha
mov
push
movb
pushf
call
pushf
mov
call
mov
pushl
popl
pushf
push
mov
mov
lea
jmp
push
jmp
call
push
pusha
push
mov
movb
pusha
mov
pushl
lea
jmp
mov
push
pushl
pushf
lea
jmp
mov
mov
lea
jmp
jb
push
pusha
pusha
mov
mov
pushf
movb
pushf
lea
jmp
push
call
pushf
popl
mov
pushl
mov
jmp
xor
pushf
xchg
test
push
push
mov
call
lahf
call
call
push
pusha
sub
cmp
cmc
pushl
bt
add
pushf
mov
movl
mov
movb
inc
pushl
stc
clc
stc
sub
jmp
cmc
pushl
sub
cmc
pushf
cmc
add
pusha
movb
call
call
mov
mov
jmp
mov
pushl
mov
pushl
lea
jno
push
jmp
pusha
push
mov
pushf
mov
jmp
push
mov
pushf
repz
popl
call
jmp
movb
pushf
xchg
pusha
call
call
jmp
push
call
mov
pushf
push
lea
jmp
jmp
pushl
popl
push
push
lea
jmp
pushl
pushl
popl
push
movw
mov
mov
lea
jmp
jmp
cmp
pushf
mov
cmp
cmc
pusha
cmp
add
pushf
call
sub
cmp
stc
call
call
bt
pushf
push
call
add
mov
movzbw
adc
mov
jmp
jmp
test
cmc
daa
mov
btr
mov
pushf
pushf
pusha
movb
sub
mov
stc
mul
pushf
pushf
jmp
or
mov
test
stc
push
add
pusha
jmp
repz
popl
call
pushf
repz
popl
jmp
pusha
pusha
mov
jmp
movb
mov
call
mov
push
lea
jmp
inc
add
sub
bt
mov
pusha
xor
ror
movsbw
movsbw
movzbw
neg
dec
movzbl
setbe
movw
inc
shrd
mov
cmc
xor
lea
movsbl
dec
bt
not
add
pushf
xor
ror
movzbl
bts
cmc
not
mov
movb
cmc
pushf
push
rol
call
call
jmp
call
pushf
jmp
xor
mov
bt
call
mov
mov
lea
jmp
mov
pushf
pushf
pushf
pushf
lea
jmp
movsbw
inc
rcl
and
xor
pushf
jmp
mov
lea
jl
pusha
pusha
pushf
mov
jmp
mov
pushl
pushl
pushf
pushf
lea
jmp
repz
popl
pushl
pusha
mov
pushf
pushf
pushf
pushf
mov
pushl
mov
jmp
pushf
ror
mov
pushf
test
not
pushf
cmp
call
and
mov
sub
mov
call
jmp
mov
call
push
mov
call
call
mov
movb
pushf
push
mov
lea
jmp
mov
jmp
btc
bts
mov
bt
pushf
mov
add
call
jmp
mov
push
pushf
call
pushl
mov
call
pusha
movb
pushf
mov
movw
lea
jge
push
mov
mov
lea
jmp
pushf
push
mov
call
rol
shl
and
cmc
movsbw
mov
bt
call
jmp
mov
mov
call
cmc
sub
lea
jnp
pushf
pusha
mov
pusha
push
push
pushf
lea
jmp
call
push
push
jmp
lea
jne
pusha
dec
mov
pushf
and
jmp
mov
movw
push
call
call
mov
mov
movb
mov
mov
movw
lea
jmp
mov
mov
call
add
add
add
bt
pusha
shrd
movb
call
pushf
mov
push
jmp
add
movb
lea
jmp
mov
pushf
repz
popl
call
call
pushf
call
cmp
mov
bt
mov
pushf
mov
clc
call
pushf
popl
pushf
movb
pushl
popl
mov
lea
jmp
call
mov
jmp
push
pushf
mov
mov
pushf
pushf
push
repz
popl
pushf
lea
jno
pushf
push
mov
call
push
mov
pusha
pusha
pushl
push
mov
pushf
push
movb
mov
push
call
inc
clc
dec
and
mov
jmp
call
push
repz
popl
call
pushf
pushf
push
pushf
mov
pusha
movb
lea
jmp
jmp
mov
pushf
mov
movw
movl
lea
jmp
call
bsf
inc
mov
setbe
rcr
bt
mov
mov
jmp
mov
pushf
mov
pushl
pushf
popl
pushf
movb
pushl
pushl
popl
pushf
pushl
mov
lea
jmp
mov
pushf
mov
push
mov
call
mov
mov
pushl
mov
mov
jmp
sbb
bt
mov
cmc
pusha
add
pusha
lea
jmp
pushf
mov
mov
lea
jmp
jmp
pushf
movb
xchg
call
jmp
lea
js
mov
jmp
clc
sub
pusha
mov
push
movb
lea
jmp
call
movb
pushf
popl
jmp
call
mov
movb
pushf
popl
jmp
call
movw
mov
jmp
push
cwtl
rcr
aad
mov
bts
not
and
shr
mov
cmc
movw
add
pusha
call
jmp
clc
add
pushf
pushl
pusha
mov
lea
jmp
call
and
std
rol
test
mov
sbb
test
aad
cwtl
pop
cmc
sbb
pop
movzbl
rcr
sbb
mov
pop
bsf
shld
pop
bt
rol
cltd
pop
movsbl
pop
bsr
cld
pop
or
xadd
pop
xadd
stc
stc
shl
pop
mov
add
popf
call
pushl
push
pushf
popl
mov
pushf
pushf
pushl
popl
push
lea
jmp
mov
pushf
push
pushf
mov
repz
popl
call
pushf
pushl
popl
pushl
pusha
lea
jmp
cmp
rol
mov
add
sbb
sar
sub
mov
clc
bt
cmp
add
jmp
mov
call
push
call
or
pushf
pushf
pushf
clc
xor
pushf
mov
call
mov
pusha
movb
push
lea
jmp
push
mov
mov
pushf
lea
jmp
jmp
call
mov
clc
cmp
shr
jmp
pusha
pushf
mov
jmp
pusha
mov
pushl
call
mov
pushf
pusha
push
lea
jmp
mov
movb
pushf
pushf
jmp
add
cmp
mov
setge
dec
adc
xor
add
pusha
pushf
mov
pusha
pushf
movb
lea
je
mov
pusha
lea
jmp
push
mov
jmp
push
pusha
dec
pusha
cmc
test
add
mov
xchg
bt
xor
test
sub
pushf
jmp
jmp
pushf
call
mov
call
stc
mov
bt
call
movb
jmp
add
stc
not
bt
bt
bt
xor
jmp
jo
mov
pushf
lea
jmp
call
mov
mov
movb
pushf
jmp
and
mov
stc
cmc
push
sub
stc
call
repz
popl
pushf
movb
pushl
mov
jmp
push
pushf
jmp
mov
mov
pushf
popl
push
pushl
popl
pusha
push
pushf
lea
jmp
bswap
bt
mov
cmc
mov
sub
clc
pushf
bt
sub
call
mov
call
mov
mov
movb
call
pusha
mov
mov
pushf
call
pushf
lea
jne
cmp
jmp
sub
push
push
movb
lea
jne
cmp
call
repz
popl
movb
push
mov
pusha
jmp
call
xchg
mov
jmp
mov
jmp
call
jmp
mov
pushf
popl
mov
pushl
popl
push
mov
pusha
movw
lea
jmp
call
lahf
setge
mov
call
jmp
mov
mov
jmp
jmp
mov
movb
mov
jmp
not
not
movzbl
stc
pushf
xor
pushf
pusha
lea
jb
pusha
inc
movb
mov
pusha
not
mov
movb
mov
movb
inc
jmp
mov
movb
mov
pusha
mov
pusha
call
rol
cmp
btc
xor
bswap
bt
bswap
lea
bt
call
jmp
xchg
sbb
push
mov
rcr
jmp
sub
mov
mov
jmp
pusha
mov
pusha
sub
pushl
lea
jno
push
pusha
lea
jne
cmc
sub
pushf
xchg
call
jmp
movb
mov
call
pushf
popl
call
call
shl
call
pushf
mov
pushf
push
pushf
lea
jmp
push
jmp
jmp
mov
push
movb
call
jmp
mov
pushf
lea
jmp
repz
pusha
jmp
cmc
sub
mov
pushf
jmp
jmp
add
pushf
jmp
pushf
mov
mov
movb
call
pushf
mov
jmp
movw
lea
ja
rcl
cwtl
aam
mov
sets
cwtl
lea
dec
not
clc
sub
push
pushf
mov
sar
lea
bts
sbb
bt
and
sar
sub
pop
push
mov
lea
pushf
std
bswap
push
movzbw
pusha
movsbl
mov
movzbw
lea
cld
std
cld
cld
mov
movsbl
bswap
mov
pushl
lea
jb
std
cld
pusha
mov
push
mov
rep
sub
bsr
xchg
xadd
mov
btr
movsbl
mov
bt
cmp
clc
cld
pushl
popf
push
lea
jmp
mov
pushf
mov
mov
pushl
mov
push
call
mov
pushf
pushf
lea
jmp
inc
bt
push
bt
xor
mov
clc
stc
mov
call
cwtl
mov
pushl
pushl
jmp
repz
popl
mov
push
jmp
movb
pusha
pusha
mov
mov
mov
mov
movl
pushf
pushf
lea
jmp
pusha
pusha
pushf
mov
push
movb
push
pushl
lea
jmp
mov
movb
push
movw
lea
jmp
jmp
pushf
movl
jmp
mov
movb
mov
lea
jmp
jmp
mov
pusha
pushf
pushf
lea
jmp
push
pusha
call
pushf
sub
jmp
add
jmp
jmp
pusha
sub
call
pushf
jmp
dec
test
xchg
cmp
clc
xor
movb
add
pushl
call
lea
je
push
pushf
mov
jmp
lea
je
push
pushf
pusha
jmp
not
cmp
neg
setb
mov
mov
inc
jmp
pusha
call
stc
shld
jmp
push
mov
rcr
mov
test
test
bt
xor
call
push
sub
jmp
push
jmp
dec
shl
mov
sub
mov
test
sub
call
stc
shr
add
call
mov
push
movw
movb
lea
jmp
mov
mov
lea
jmp
lea
mov
push
lea
jbe
push
mov
mov
pushf
pushl
movl
lea
jmp
pusha
mov
push
movw
pushl
ret
call
pusha
mov
push
mov
jmp
mov
pushf
pusha
pushf
pushf
lea
jmp
not
pushf
inc
jmp
shr
sbb
rol
and
rdtsc
cmp
jmp
mov
pusha
push
pushf
movw
lea
jmp
add
pusha
pushf
call
dec
bsf
mov
pushf
add
movw
mov
pushl
lea
jmp
inc
pushf
call
sbb
and
mov
sbb
add
push
pushf
movb
pusha
mov
lea
jns
pusha
pushf
pushf
mov
push
pushf
mov
lea
jmp
bsr
aas
das
push
mov
movw
call
jmp
jmp
push
add
call
pushf
push
mov
mov
pushl
popl
pusha
pushf
pushf
lea
jmp
btr
call
mov
jmp
jmp
pushf
pushl
mov
push
lea
jmp
shr
pusha
mov
pushf
pushf
popl
pushl
jmp
call
shr
bt
call
call
mov
jmp
pusha
movzbw
movzbl
movsbw
inc
stc
jmp
mov
mov
push
mov
pushf
mov
pushl
ret
pusha
call
bsr
movzbw
clc
mov
shl
mov
stc
test
add
call
push
pushl
mov
pusha
push
movl
lea
jmp
mov
jmp
jmp
call
call
call
mov
pushf
push
mov
pusha
mov
mov
pushf
call
mov
pusha
mov
pushf
mov
pushf
push
mov
jmp
and
pusha
pushl
call
repz
popl
call
pushf
pusha
mov
pushf
inc
add
jle
cmp
pusha
test
or
lea
jbe
pusha
movl
lea
je
cmc
call
sub
movb
pushf
call
decl
push
jmp
mov
jmp
mov
call
pushl
mov
pushl
mov
pushl
ret
lea
btc
inc
mov
add
bsr
mov
pushf
cmp
pushf
not
pusha
pushf
not
stc
test
mov
and
call
movb
stc
add
pushf
cmp
cmc
pushf
not
cmc
xor
push
test
test
stc
add
pushf
add
cmp
sub
jmp
mov
pushf
mov
jmp
shl
push
pushf
mov
push
mov
call
pushf
repz
popl
call
jmp
cmc
stc
cmp
add
pusha
clc
bt
add
jmp
bt
call
rcl
mov
clc
jmp
sub
push
pusha
test
test
and
mov
pushl
pushf
popl
pushl
pushl
popl
pushl
push
pushf
mov
lea
jmp
btr
bsf
mov
bsr
cmp
setnp
rcl
mov
jmp
rcr
pushf
mov
pushf
push
add
push
pusha
movw
lea
jmp
call
pusha
divl
call
jmp
sbb
aam
jmp
clc
stc
cmpl
jmp
push
mov
pushf
popl
call
pushf
pusha
call
pusha
lea
jno
popl
pushf
lea
jmp
pusha
call
pushf
pushf
popl
call
pusha
call
push
pushf
call
push
jmp
xor
movzbw
inc
bswap
movsbw
not
pushl
inc
inc
bswap
bts
movsbw
xor
movsbw
add
not
mov
jmp
movb
pusha
pushf
pushl
popl
pushl
lea
jmp
or
pusha
pushf
mov
pushf
lea
je
test
xor
stc
stc
xchg
test
push
jmp
call
setp
dec
inc
sbb
bsf
neg
xor
btc
bswap
movzbl
pusha
clc
mov
clc
push
rol
movl
clc
stc
push
add
mov
jmp
pushf
pusha
jmp
call
adc
bsr
das
mov
cmp
stc
shl
test
mov
push
add
lea
jl
pusha
pushf
mov
pushl
push
lea
jmp
mov
mov
pushf
lea
jmp
movw
jmp
pushf
mov
push
pushf
pushl
ret
call
jmp
pushl
pushf
mov
movb
push
pushl
ret
push
movb
mov
pushf
pushf
pushl
mov
pushl
ret
pushf
mov
movb
mov
pusha
mov
push
push
lea
jmp
mov
pushf
call
mov
movw
pushl
pushf
lea
jmp
call
pushf
call
push
mov
call
movw
jmp
mov
jmp
call
bt
cmc
sub
pushf
pushf
pusha
div
jmp
lahf
dec
neg
mov
pushf
test
cmc
test
sub
cmc
cmc
test
movb
add
movb
pushf
popl
jmp
stc
jmp
rol
mov
rol
sbb
mov
pushl
mov
cmp
push
or
xadd
neg
sub
mov
pushf
movsbw
not
jmp
pushf
mov
jmp
add
add
add
dec
inc
add
lock
add
mov
push
push
add
push
add
push
add
xchg
add
push
add
xchg
add
push
add
mov
push
add
push
add
push
add
