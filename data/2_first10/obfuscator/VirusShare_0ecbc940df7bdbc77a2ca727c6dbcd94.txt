nop
nop
pusha
nop
nop
xor
nop
call
nop
nop
pop
nop
xor
mov
nop
add
movzwl
lea
mov
nop
nop
nop
add
nop
nop
nop
add
nop
shl
mov
nop
nop
add
nop
nop
nop
popa
xor
call
nop
nop
nop
not
nop
call
nop
xor
add
nop
nop
jmp
nop
nop
xchg
bound
add
add
enter
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
add
arpl
add
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
add
add
add
ss
dec
add
push
add
xchg
add
stos
add
mov
add
fbld
stc
add
adc
add
add
aaa
add
inc
add
gs
jg
add
add
mov
add
lds
add
add
jmp
add
add
add
adc
data16
das
data16
inc
data16
pop
data16
imul
jle
add
xchg
data16
popf
data16
lods
data16
mov
data16
data16
out
add
cmc
data16
or
add
sbb
add
add
cmp
add
add
pop
add
push
add
jp
add
test
add
add
insb
popa
add
mov
add
pusha
add
shlb
sub
push
pusha
add
sbb
add
stc
add
mov
add
xchg
bound
add
add
enter
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
add
arpl
add
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
add
add
add
ss
dec
add
push
add
xchg
add
stos
add
mov
add
fbld
stc
add
adc
add
add
aaa
add
inc
add
gs
jg
add
add
mov
add
lds
add
add
jmp
add
add
add
adc
data16
das
data16
inc
data16
pop
data16
imul
jle
add
xchg
data16
popf
data16
lods
data16
mov
data16
data16
out
add
cmc
data16
or
add
sbb
add
add
cmp
add
add
pop
add
push
add
jp
add
test
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
gs
je
inc
jbe
outsb
je
add
add
gs
je
push
popa
jo
push
popa
jb
imul
inc
js
je
jb
arpl
jae
add
inc
gs
gs
jo
imul
add
add
popa
jo
xor
je
gs
add
add
popa
jo
popa
insb
imul
dec
outsl
arpl
push
outsb
insb
outsl
arpl
add
dec
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
add
imul
jae
insb
gs
outsb
jo
je
add
add
jae
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
push
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
je
imul
bound
gs
add
add
je
popa
outsb
fs
gs
outsl
outsb
je
js
add
add
je
popa
imul
outsw
add
add
je
push
inc
js
arpl
imul
add
add
jb
jne
insb
push
jb
je
arpl
add
imul
insb
gs
bound
arpl
add
add
imul
insb
gs
outsb
jo
je
add
add
imul
je
push
jb
imul
imul
push
inc
push
dec
xor
cs
dec
dec
add
add
outsl
jb
push
jns
je
insl
push
push
ja
push
add
add
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
inc
outsb
jns
arpl
jae
gs
jb
outsb
je
add
add
arpl
jo
jbe
outsb
je
outsl
addr16
add
add
imul
gs
imul
add
add
gs
jb
jbe
outsb
je
outsl
addr16
add
add
gs
jb
jbe
outsb
je
outsl
addr16
add
add
jns
je
gs
jb
jns
popa
jae
add
add
jns
je
outsb
jne
push
jb
jbe
fs
jns
gs
add
add
je
jne
jb
outsb
je
ja
jb
imul
add
je
arpl
imul
add
inc
gs
arpl
imul
js
add
add
push
popa
insb
imul
dec
outsl
outsl
imul
arpl
imul
imul
jb
jae
add
add
gs
push
gs
imul
push
je
je
jae
add
add
popa
fs
jbe
outsb
je
outsl
addr16
add
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
je
arpl
imul
add
push
gs
gs
imul
add
add
je
gs
imul
jne
add
add
popa
jb
push
gs
imul
inc
push
xor
cs
dec
dec
add
add
insb
insb
dec
jae
inc
imul
add
popa
outsb
addr16
outsb
jne
add
add
popa
jb
jb
jbe
add
add
gs
je
dec
inc
dec
push
imul
add
inc
jb
popa
je
push
imul
popa
je
outsl
outsb
inc
add
add
push
outsb
popa
arpl
jae
inc
popa
je
add
add
jo
je
push
popa
addr16
add
add
ja
popa
jo
imul
push
add
add
ja
jb
insl
add
add
imul
jae
js
add
inc
imul
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
gs
je
je
add
add
je
arpl
insb
insb
push
popa
outsb
add
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
gs
imul
js
dec
outsb
addr16
inc
add
add
push
inc
gs
dec
inc
inc
add
add
inc
imul
jae
popa
addr16
add
add
imul
push
add
add
insl
push
outsl
inc
push
data16
add
add
insl
outsl
jbe
push
jb
jo
add
add
jb
insb
insb
push
imul
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jae
imul
popa
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
dec
gs
arpl
inc
js
add
iret
scas
and
lods
test
jno
in
es
rolb
add
fimull
pop
push
inc
insb
out
imul
mov
nop
pop
jg
mov
sbb
pusha
jmp
lods
sbb
int
call
xchg
inc
push
sbb
inc
push
add
pop
loopne
aad
sti
int
leave
sti
out
mov
aad
inc
fnsave
jne
push
loopne
sbb
outsb
mov
lret
push
and
xchg
pop
loopne
sbb
outsb
aas
xor
cmpsb
daa
xchg
loopne
sbb
outsl
daa
add
inc
aas
xor
mov
xor
xchg
ljmp
daa
sbb
sti
test
pop
sti
pushf
push
test
dec
stos
sti
pushf
dec
dec
lods
add
pop
mov
adc
addr16
pop
nop
pop
nop
push
nop
mov
nop
lea
nop
nop
xor
nop
nop
nop
xor
nop
nop
std
nop
lods
nop
nop
add
nop
nop
stos
nop
nop
dec
nop
nop
nop
jne
popa
movsb
inc
aaa
shl
addr16
mov
das
out
aaa
xlat
sub
aam
cmp
pop
pop
int
notl
cmpsl
fs
adc
cs
movsl
fs
aaa
xchg
rolb
jns
mov
pop
inc
testb
out
arpl
in
push
push
inc
inc
aaa
fs
int
fs
int3
aaa
cmp
xor
push
add
fs
aaa
ds
int3
aaa
lods
int3
aaa
shrl
int
push
sbb
fs
mov
aaa
mov
dec
adc
lea
std
inc
mov
fdivs
repnz
stos
mov
mov
mov
gs
sub
jecxz
and
push
jbe
push
pop
sub
jg
jp
xor
sarl
test
jle
movb
add
cmp
xchg
add
or
daa
mov
int
xchg
dec
mov
fstpt
cmp
pop
sub
lret
iret
and
mov
pop
shll
out
imul
jmp
loop
pushf
dec
xor
fistpll
mov
cmp
stos
xchg
rcll
cmc
outsl
sbb
sar
iret
xor
push
std
inc
pop
cmp
outsl
je
loop
cmpsl
push
lret
sub
or
push
mov
jl
mov
or
lahf
into
xchg
mov
cltd
out
pop
pop
pop
push
dec
mov
xlat
arpl
aam
cmc
push
out
dec
sarb
xor
sub
mov
add
in
mov
data16
jmp
adc
sarb
mov
data16
subl
or
outsl
xchg
call
and
jns
aam
push
push
add
cmp
jae
movsl
sbb
cmc
mov
adc
cld
mov
ss
push
dec
lcall
arpl
adc
ret
pop
pop
sbb
shll
inc
inc
repz
mov
lods
lock
or
js
lock
hlt
or
and
js
pop
aaa
cli
xlat
not
mov
mov
jp
dec
repnz
int
mov
ds
nop
rcrb
in
jne
popf
pop
inc
outsb
js
cmp
into
test
int3
js
das
sub
aaa
in
jg
add
inc
imull
and
xchg
pusha
movsb
lahf
pop
pop
or
mov
shlb
fmul
push
xchg
imul
rcrl
xchg
in
xchg
mov
fcom
mov
sub
inc
popf
jge
lds
adc
addr16
add
call
out
sub
mov
sbb
lcall
or
aaa
scas
xchg
fs
add
cs
iret
sbb
mov
je
inc
bound
xchg
push
loop
je
shlb
ss
movl
pop
ds
xor
and
pop
fdivs
pop
into
std
lds
or
xor
in
mov
outsb
cld
sti
jbe
test
mov
sub
jg
and
orl
or
xor
aad
fldt
inc
lahf
and
fdivrl
adc
inc
sub
adc
fsts
loope
loopne
adc
rorb
fistpl
add
cmp
adc
or
xor
rcrl
push
loop
nop
sub
lea
enter
sub
les
stos
push
jb
fldl
cmp
sbb
mov
cmp
and
adc
das
loop
stos
inc
add
dec
popa
std
xlat
outsl
cmp
inc
pop
or
ja
pop
mov
addr16
adc
pop
mov
jne
mov
and
outsl
push
sbb
sub
xchg
sbb
mov
pop
rorl
xchg
xchg
fwait
stos
test
xor
push
aaa
imul
add
addr16
nop
and
xor
mov
insl
xchg
xchg
mov
cmp
aad
dec
je
push
in
je
iret
sbb
xor
test
mov
pop
xor
xchg
fadds
jmp
fldl
sub
push
mov
movsb
shll
int
imul
fsubs
dec
stc
ja
sahf
cmpsl
xchg
out
fcmovnb
in
sub
hlt
inc
mov
xchg
and
mov
pop
in
test
out
jl
lods
aaa
sti
xchg
xchg
lods
popa
adc
or
mov
pushf
sub
mov
dec
xor
insl
mov
loop
push
addr16
cs
add
mov
addb
push
xchg
cmpsl
gs
mov
pop
into
outsl
cltd
cmc
xchg
mull
in
dec
cmpsl
adc
dec
sub
adc
xchg
pop
push
scas
jl
sbb
fwait
add
lods
or
jl
cmp
addb
fistl
sub
add
add
fadds
or
pop
mov
inc
stos
insb
into
jbe
sub
dec
lods
shll
pop
inc
fidivs
pop
and
mov
add
mov
in
pop
rcrl
ficompl
and
subb
mov
adc
xchg
repz
out
sub
icebp
inc
and
mov
in
mov
in
loope
and
sbb
bound
mov
repz
shr
xlat
mov
dec
dec
subl
mov
pop
enter
call
pop
dec
stos
jns
orl
sub
adc
pop
xor
pop
jne
gs
add
fimull
insb
pop
pop
addr16
mov
mov
filds
sarl
inc
xchg
mov
adc
push
sbb
in
ss
push
shrb
std
subb
inc
mov
call
jl
sub
data16
push
push
not
mov
push
mov
out
mov
or
jbe
xchg
pushf
aad
pop
sbb
daa
or
mov
add
mov
sbb
into
cmp
mov
leave
cmp
ret
push
xchg
cltd
pusha
mov
dec
lds
jg
idivb
jg
pop
lock
and
xor
icebp
push
aam
out
cmp
cmp
lock
xchg
jge
aad
into
test
jle
leave
mov
mov
and
sbb
insl
mov
and
je
clc
inc
mov
call
out
xor
xlat
jbe
cmpsb
testb
popf
addb
sub
popa
mov
mov
std
ret
fsubr
out
clc
adc
lods
inc
jp
cmp
jae
xor
test
pop
and
arpl
xor
fxtract
pop
in
in
sub
inc
adc
jae
sar
dec
and
xchg
fprem
xlat
xlat
gs
call
hlt
std
xchg
incl
int3
push
xor
pop
sub
jl
arpl
mov
xchg
nop
xchg
pushf
sub
ja
roll
cmp
mov
push
cli
shl
cwtl
movsl
inc
imul
dec
and
inc
lsl
rcrl
movsl
shr
into
pop
cmp
in
xorl
xlat
movsb
or
cmp
out
push
jmp
cltd
inc
int3
push
and
or
scas
stos
jp
outsl
mov
popa
xor
shlb
cltd
imul
xorb
adc
insb
adc
lret
cltd
pop
adc
mov
fidivrl
and
lahf
test
pop
lods
mov
out
adc
out
xchg
xor
lcall
dec
mov
fists
negl
shlb
adc
pop
sti
jecxz
sbb
mov
mov
mov
roll
xchg
and
dec
aas
dec
jne
push
sti
sbb
pushf
xor
andl
mov
sbb
fldl
push
ficomps
arpl
xor
xlat
fdiv
cmp
jp
xor
mov
lret
outsl
lock
mov
dec
gs
in
iret
fcoml
xor
fldl
jb
dec
lock
dec
out
mov
pop
inc
cmpsb
mov
add
xor
push
cwtl
jge
lcall
xchg
jns
fwait
out
push
and
ja
mov
sub
push
in
lret
mov
sub
sub
cwtl
mov
lcall
out
movsl
vpaddw
and
jecxz
inc
stos
mov
inc
pop
adc
add
je
jecxz
dec
and
outsl
adc
jnp
mov
push
imul
das
sub
push
xchg
fcomp
dec
lds
icebp
xchg
pop
ds
cs
dec
daa
aaa
incb
movsb
jb
inc
ss
mov
testl
lcall
adc
ja
xor
cli
ret
test
cwtl
stc
lea
jbe
sahf
into
xchg
shr
in
xchg
jmp
push
sub
cmp
loop
cmpl
sbb
ja
fisubrl
dec
push
and
adc
push
mov
lret
aam
xchg
mov
dec
pop
je
xchg
leave
stos
cmp
bound
gs
mov
add
adc
in
sahf
ds
add
and
jge
inc
sbb
loop
cmpsb
fs
aam
pusha
adc
pop
mov
mov
jno
jo
js
sub
inc
in
lea
inc
cmpsl
arpl
cmp
loope
xor
xchg
in
pop
pop
repnz
mov
xchg
xchg
in
mov
jp
jbe
and
lods
mov
addr16
sbb
mov
cld
inc
add
mov
in
jp
or
mov
mov
in
stos
add
incb
lock
mov
in
lods
call
push
insl
jo
test
xchg
fsub
cmp
xchg
sub
sti
lods
jmp
jae
rcll
call
lods
clc
add
and
sti
or
mov
ret
test
add
fisubs
mov
cmp
pop
xchg
inc
mov
and
jg
sbbb
xor
in
and
inc
rolb
sti
xor
sbb
dec
cmp
insl
fyl2x
cltd
cli
aad
iret
push
mov
or
xchg
cmc
push
push
mov
repnz
or
dec
sub
test
cwtl
lahf
jb
xor
mov
mov
stc
add
adc
jae
mov
xchg
aas
push
ret
lahf
icebp
pop
fwait
mov
jnp
dec
inc
cltd
mov
pusha
jbe
out
jns
xchg
repz
or
sbb
out
cwtl
movsl
add
jmp
arpl
cld
mov
shlb
fistps
loopne
aad
hlt
sbb
fcomip
ss
sahf
mov
negb
loopne
add
cmpsl
jnp
enter
jo
daa
enter
mov
sbb
xchg
movsl
ret
push
das
in
and
xor
lock
test
fdivrs
mov
loope
hlt
push
pop
mov
mov
adc
xchg
inc
mov
mov
lcall
sub
mov
xlat
in
lret
jne
inc
mov
shlb
das
shr
xchg
cmp
pop
fwait
fwait
stos
int3
xor
lods
dec
inc
addr16
subb
lods
popf
out
cmc
lret
pop
std
add
out
insl
negb
or
jecxz
in
and
int
stos
lret
testl
xchg
in
dec
add
pop
scas
mov
jns
clc
loopne
push
movsb
std
dec
das
sbb
xchg
pop
and
fiadds
cmp
sbb
sbb
dec
lcall
cmp
cs
dec
enter
imul
mov
dec
jmp
les
mov
je
ret
xlat
cmpsb
test
enter
cmp
and
loopne
clc
mov
or
cmc
adc
sub
xchg
insb
movsl
or
or
aam
xor
fdivp
loopne
dec
jge
lods
sbb
inc
loop
jne
mov
inc
xchg
test
ret
jecxz
or
daa
scas
jbe
jne
jae
dec
dec
ljmp
jb
xor
lret
and
mov
dec
xor
dec
jecxz
xor
ficoms
cmp
imul
pop
scas
idivl
ret
xchg
outsl
mov
inc
add
cmp
fiadds
imul
in
outsb
jg
fldt
into
aas
outsl
and
rol
mov
or
add
push
sub
sbb
xchg
mov
ss
fs
stos
pop
sbbb
adc
gs
sub
sti
fistpll
and
push
sbb
mov
xorl
hlt
adc
inc
sub
out
in
pop
mov
shrb
test
inc
outsl
mov
mov
and
inc
jmp
adc
popa
popf
shlb
sbb
jb
lea
ds
lret
cmp
mov
cmc
in
mulb
xchg
mov
add
inc
pop
pop
sub
adc
dec
out
pop
scas
adc
or
inc
div
aas
popf
jae
xor
out
call
lea
and
rorb
dec
aam
and
scas
cmpsl
fldt
xor
ds
xor
jp
mov
inc
popf
sub
aaa
push
popa
test
pop
sbb
adc
mov
sbb
jmp
mov
das
test
sarl
das
jo
orb
cmpb
gs
ret
jp
fnstenv
and
imul
cmc
popl
hlt
xchg
cmpsl
push
mov
dec
loopne
push
lahf
fwait
lods
in
push
jae
sbb
dec
inc
add
clc
add
dec
dec
cwtl
xchg
movsl
addb
adc
mov
in
jo
adc
aad
push
adc
mov
retw
jo
mov
in
mov
push
cmc
adcb
pop
lret
shll
scas
test
xchg
push
add
or
xchg
cltd
lcall
cmp
pop
icebp
scas
mov
xchg
pop
lods
mov
sbb
shrl
mov
loop
mov
arpl
dec
test
mov
cli
mov
test
imul
sub
mov
mov
pop
mov
enter
outsl
push
xor
lret
out
lods
jl
xor
iret
add
jge
sbb
sbb
push
outsb
lcall
sarl
and
mov
add
push
pusha
mov
push
dec
shlb
out
add
insb
sub
scas
adc
pop
out
test
add
dec
xchg
lods
inc
adc
lods
add
lret
lea
outsb
pushf
pusha
dec
ss
push
sub
push
mov
inc
mov
mov
xor
dec
xchg
std
mov
out
jbe
aaa
mov
or
aad
sbb
pop
add
add
push
sbb
in
sarb
cmp
adc
mov
push
fisubrs
adc
shll
dec
daa
cltd
mov
dec
stos
lahf
pop
imul
cld
cmp
jnp
std
mov
push
shll
movsl
ret
xor
imul
in
sbb
stos
sub
jnp
push
inc
scas
and
fcomp
sbb
jg
iret
cli
lock
aaa
push
cltd
pop
dec
and
int3
pop
scas
nop
sahf
clc
fmul
mov
shll
inc
push
sub
ret
inc
adc
out
roll
cmp
lds
aas
dec
push
in
adcl
xchg
in
push
insb
pop
mov
push
cmp
ss
or
out
pop
loope
lahf
sub
stos
les
sub
fldl
shll
daa
incb
push
das
lds
inc
outsl
mov
sti
mov
mov
addr16
js
inc
sarl
inc
clc
dec
rorb
sub
loope
push
xor
mov
jl
xor
daa
dec
cld
mov
dec
int3
das
lock
pusha
mov
ret
ror
push
push
pushf
xlat
lds
loope
jl
ljmp
cmp
xlat
push
adcl
aad
adc
and
push
std
jbe
loopne
mov
mov
jecxz
in
data16
inc
xchg
filds
imul
inc
fwait
sbbb
xor
pop
cltd
and
push
lahf
jae
inc
loopne
fmul
or
sub
xor
inc
mov
sbb
pushf
rclb
push
xchg
aaa
orb
adc
adc
pop
sub
jbe
shll
pop
mov
sbbb
xor
and
sub
cmc
mov
and
insl
pop
in
or
in
ret
adc
shll
sbb
loope
mov
xor
xor
mov
mov
stos
mov
cmc
cltd
and
insb
mov
xchg
imul
shrl
cmp
jge
cmp
push
sub
push
das
push
add
rcll
mov
xchg
ss
or
dec
push
fdivl
adc
push
dec
idiv
subl
mov
cltd
into
imul
fstpl
xor
fs
push
push
push
push
shll
pop
in
lahf
into
ds
sahf
gs
hlt
xchg
mov
stos
jg
pop
filds
insl
add
jae
and
sub
cmpsl
fiadds
pop
inc
scas
es
push
inc
mov
fnstcw
in
dec
imul
inc
fmull
push
call
fnstcw
mov
cmp
leave
mov
mov
aaa
inc
int3
pop
idivl
enter
adc
xor
ja
xor
cmc
bound
dec
imul
sub
adc
dec
sbb
add
push
fsubs
pop
mov
adc
push
out
or
daa
pusha
mov
xor
push
in
jno
mov
loope
andl
addr16
rcrl
aaa
test
push
arpl
sub
aaa
in
imul
bound
fists
xor
clc
imul
jmpw
jg
add
imul
jmp
fdivs
mov
pop
cmp
aad
shll
daa
lahf
shll
add
xchg
adc
in
push
int3
push
insb
insb
cmp
push
les
jbe
fucomip
adc
adc
pop
pop
enter
xchg
scas
aam
cs
aad
lods
orb
lea
sub
jle
sub
push
and
jno
add
notb
cwtl
push
inc
pop
mov
dec
add
ret
jmp
icebp
mov
js
lods
cs
or
and
movsl
xchg
aam
clc
fwait
jg
shll
adc
push
xchg
mov
sti
sub
iret
pop
ljmp
xor
or
adc
or
ljmp
arpl
sbb
shrl
int3
aam
push
mov
aaa
mov
xlat
call
inc
add
mov
xor
sub
jp
imul
das
in
add
adc
add
fwait
std
aas
jae
xchg
jae
int
arpl
lds
loopne
xorl
fbld
xchg
mov
adc
nop
push
adc
nop
fisubs
popf
scas
push
dec
adc
clc
outsb
iret
pop
adc
adc
rolb
dec
data16
test
cmc
mov
mov
int
dec
enter
sub
add
sarb
pop
sub
jge
dec
mov
insl
ret
out
and
addr16
or
cmpsb
sti
clc
inc
retw
pusha
pop
pop
dec
fs
jo
cmp
jmp
xchg
je
js
hlt
in
push
add
and
xor
mov
mov
roll
pop
daa
push
or
cmpsl
call
jl
push
xor
pop
pushf
out
lock
das
shrb
dec
adc
sbb
mov
mov
xchg
adc
mov
aam
test
divb
stos
and
pop
lods
test
jecxz
jbe
push
fs
sarl
stc
cmp
jp
shrb
jmp
cmp
jle
icebp
xchg
out
mov
andl
lahf
adc
into
fwait
mov
pop
insb
rcl
adc
and
xchg
das
push
aad
repz
daa
or
fnstcw
add
inc
push
lret
lahf
pusha
repnz
shll
mov
jne
xchg
test
mov
test
pusha
jno
je
or
mov
rcrl
pop
inc
jmp
adc
subb
mov
jp
mov
clc
inc
mov
mov
inc
xchg
out
cmpsb
push
xchg
xor
pop
mov
mov
loopne
push
mov
or
outsl
push
bound
xchg
xchg
jmp
fdivs
mov
adc
addr16
cmc
cs
mov
mov
mov
mov
clc
push
bound
adc
mov
das
push
jno
adc
cmp
jne
es
fildll
push
scas
daa
jecxz
inc
push
or
mov
mov
mov
inc
hlt
or
or
lods
sub
mov
inc
into
movsb
or
mov
pop
pop
cs
mulb
add
xchg
sbb
js
xor
jecxz
fimuls
sbb
data16
jne
jo
xchg
orb
out
mov
movl
andl
gs
sbb
add
jb
pop
int3
call
add
dec
lds
and
or
push
xchg
xchg
fldl
mov
ret
adc
inc
ret
cmp
cmp
mov
xchg
jo
dec
pop
jle
das
cmp
push
outsb
cmp
test
xchg
scas
add
xchg
aad
mov
and
mov
mov
mov
nop
pop
xor
jno
repz
xor
add
push
lods
out
xchg
inc
inc
mov
je
cwtl
movsb
and
insb
test
ret
pop
std
xchg
rcll
add
inc
popf
ja
in
jmp
mov
in
test
clc
cwtl
push
inc
and
inc
dec
sub
lret
je
int
xor
mov
bound
mov
loopne
mov
mov
mov
xchg
loopne
xchg
or
inc
push
inc
es
jno
xor
cmpsl
add
jg
dec
cmpsl
das
push
popf
daa
popa
pop
cmp
cmp
mov
ret
sar
pop
movsb
xchg
mov
pop
xchg
jo
inc
add
xor
jge
clc
insl
lret
add
repnz
cmpl
jno
test
decb
aam
or
or
cmpsb
roll
inc
jmp
lods
inc
push
cmpb
xor
out
push
mov
mov
push
lock
mov
push
add
adc
jns
xor
nop
je
sbbl
push
cmpsl
test
les
inc
mov
fldt
in
inc
jno
movsl
mov
imul
out
mov
mov
and
xor
mov
fists
mull
mov
pop
cmp
push
pop
mov
cmp
sbb
ret
push
mov
scas
fildll
fsubr
push
and
inc
xchg
pop
adc
jle
mov
push
adc
pushf
sub
cmp
fwait
into
jo
lock
sti
rorl
test
outsl
int
mov
cmp
mov
pop
lock
icebp
or
and
ds
loope
mov
jae
cmp
js
dec
sbb
cmp
sarl
sbb
and
push
fcoms
and
pop
jae
shrl
sar
sahf
and
mov
pop
dec
int3
fcmovbe
push
xchg
sub
test
test
into
xchg
fldcw
mov
jb
ljmp
inc
incl
jle
fnsetpm(287
popf
or
lret
mov
mov
popa
xor
inc
into
cmp
lret
inc
sub
pop
jle
xlat
stos
fcmovu
icebp
dec
in
mov
and
ret
pop
mov
pushf
lahf
test
cld
inc
pop
es
xorb
lret
subb
movsb
loop
mov
ret
mov
sbb
pop
pop
imul
mov
sbb
jmp
imul
sbb
and
xor
dec
pop
pop
push
dec
jl
pop
and
xor
pop
repz
cmp
icebp
jge
mov
test
pop
adc
shlb
loop
enter
sbb
pop
aas
aaa
aaa
xchg
mov
xor
or
aaa
xor
pop
fdivl
arpl
jns
mov
sub
ret
pop
nopl
push
scas
fsubrl
in
and
mov
into
into
add
sub
notb
fcomps
jle
xchg
add
cltd
and
xor
xchg
imul
add
dec
shrl
xchg
arpl
xor
inc
mov
lahf
mov
mov
jp
or
or
mov
adc
mov
jae
enter
jge
dec
arpl
popa
in
js
test
xchg
and
test
out
lods
adc
mov
xchg
cmpsb
jbe
enter
testl
and
xchg
cld
mov
pop
jbe
add
push
and
call
lock
jno
pop
pop
lret
rcll
jecxz
aam
fcomp
push
jge
lret
mov
pusha
inc
mov
shrl
push
push
mov
xor
inc
mov
mov
lock
xor
aas
popa
jmp
in
mov
roll
add
lea
push
push
xlat
les
jle
fdivr
cmp
pop
pop
imul
mov
jae
lret
and
ret
outsb
mov
sbb
ljmp
mov
push
xor
cmc
adc
jne
and
gs
mov
gs
mov
mov
mov
cmpps
jge
imul
cli
dec
aam
stc
pusha
xor
sbb
clc
mov
in
das
mov
jmp
adc
dec
loope
cmpsb
repnz
inc
dec
xchg
outsb
cmpsb
sub
fbstp
jl
fistpl
xchg
negb
insb
pop
int
outsb
add
sub
inc
inc
mov
dec
rcr
lcall
cmp
mov
mov
jb
sarl
hlt
sbb
inc
xchg
and
push
or
iret
or
lahf
jmp
sub
pop
xor
lret
xor
pusha
jns
fwait
test
push
sbb
jle
dec
lret
push
xor
mov
data16
dec
dec
push
fsubs
fcmove
stc
lret
or
mov
inc
sti
cmpsb
or
or
add
cmpsl
mov
movsl
mov
mov
jge
xor
pop
push
and
adcb
push
outsb
nop
cmp
cmp
pop
movsl
icebp
push
dec
xchg
inc
sub
call
push
sbb
push
ds
mov
push
mov
fwait
cli
into
imul
jmp
mov
jg
pop
cmp
mov
frstor
push
loopne
cmc
cs
inc
loopne
jnp
jno
es
cwtl
andb
pop
divl
pop
mov
lods
in
andb
out
cmp
xor
pop
jmp
jmp
lcall
stc
pop
mov
cmp
aas
iret
stos
xchg
imulb
cmp
inc
xchg
cltd
sar
push
insl
mov
fs
mov
xorb
int3
jbe
xchg
add
inc
mov
xchg
sub
iret
adc
loopne
scas
xchg
loope
xchg
inc
fidivs
or
dec
mov
pop
and
xor
leave
add
xchg
fwait
pop
sahf
push
add
jae
xchg
and
push
les
pop
sbb
jbe
fildll
mov
mov
sub
sub
adc
xchg
mov
or
movsl
pop
push
stos
pop
ds
bound
in
test
lea
sub
cli
ficoml
jno
in
gs
push
mov
mov
lret
xor
and
pop
sub
pop
pop
lods
or
imul
dec
jge
aam
or
cmp
cmpsb
lea
cmp
lcall
sbb
arpl
mov
xor
sbb
mov
sub
sub
push
movsb
xor
cld
push
sbb
sti
fbld
imul
xlat
xor
js
out
jge
add
aam
push
rclb
xchg
je
outsb
xor
int
loope
cs
pop
cs
insb
inc
jo
xchg
dec
sub
movsb
lea
pushf
test
cmp
cmc
xchg
add
sbb
insb
mov
xor
lods
push
cmp
pusha
pushf
popf
fdiv
adc
daa
icebp
jge
je
fwait
xchg
or
mov
repz
mov
test
sti
lods
mov
xchg
test
jb
push
repnz
mov
rcr
push
fwait
lods
adc
or
dec
sbb
add
push
push
inc
iret
scas
push
into
sub
xchg
add
in
push
jle
xor
test
mov
xor
jne
gs
imul
mov
fwait
scas
mov
adc
mov
inc
jp
hlt
testl
dec
add
out
jl
inc
push
mov
jno
push
jae
ret
lods
push
add
shll
or
jae
ljmp
cwtl
aam
pushf
rorl
mov
in
ret
jnp
ret
xor
cmp
out
jae
cmp
mov
mov
sbb
sbb
pop
stos
ficomps
stos
daa
outsb
and
jecxz
sbb
gs
iret
enter
lock
lcall
dec
inc
cmp
sbb
lock
test
xchg
or
dec
stos
dec
sbb
mov
sahf
shll
mov
loope
mov
lods
sub
push
pop
mov
adcb
inc
test
or
ret
iret
lock
outsb
mov
add
pop
pop
inc
mov
arpl
sbb
mov
test
mov
icebp
insl
cs
xchg
or
and
in
leave
out
dec
pop
pop
and
dec
ffree
test
cmp
sbb
push
cmp
adc
mov
mov
dec
cld
pop
adc
loope
cmp
out
cwtl
sub
add
movsb
ds
jnp
data16
fs
adc
movsb
xor
mov
sbb
lret
out
jae
sub
cmp
dec
push
sub
xchg
shrb
fisubs
lods
xchg
outsb
xchg
adc
insl
xorl
dec
movsl
mov
lock
push
ret
mov
ja
cwtl
xchg
or
mov
or
sbb
or
inc
lea
mov
out
ljmp
cmp
outsl
sbb
in
cmpsb
lret
sbb
mov
xchg
sbb
pop
add
stos
aaa
imul
and
mov
pop
imul
in
data16
or
mov
dec
pop
xor
fadds
loope
mov
ret
into
movzbl
jmp
inc
nop
filds
fs
and
jge
repnz
xor
fsubrp
add
adcl
aas
lret
loop
popw
sahf
pop
push
and
jo
mov
cmp
dec
test
add
inc
mov
adc
xor
push
and
lret
or
scas
loop
movb
and
mov
clc
pop
cmp
outsb
mov
mov
jmp
fst
stos
pushf
or
sub
push
xchg
popa
cmp
fldenv
aam
xor
movsb
cmp
daa
push
or
repz
insb
iret
or
test
push
dec
dec
add
cmc
jne
subb
cs
inc
pop
fdivrl
jno
cmpsl
xlat
out
xchg
notl
in
aas
or
jbe
or
pop
mov
mov
lea
cs
push
fnsave
sarb
movsl
icebp
hlt
sbbl
sub
jns
inc
hlt
adc
dec
sti
mov
mov
lahf
and
add
push
mov
imul
jg
shlb
movd
pmulhuw
sbb
stc
repnz
stos
cld
mov
sahf
push
mov
inc
sbb
xchg
pop
fcmovu
aad
hlt
frstor
adc
lcall
or
pop
jbe
jmp
loop
fadd
lods
cmp
pop
pop
test
loopne
adc
mov
call
add
adc
xor
enter
lock
mov
loope
xchg
ljmp
lahf
test
vpmaddwd
rorl
jecxz
push
ss
mov
or
addr16
movsl
out
shrl
rcrb
test
cmp
and
mov
ja
sub
pop
pusha
sarl
and
into
into
negl
rolb
jle
xor
and
shrl
test
mov
jle
out
sbb
std
js
nop
push
roll
push
imul
fisubs
sahf
repz
test
movsb
ror
jne
fmull
pop
insl
push
mov
and
fstp
xor
cmp
lcall
add
sub
loope
js
inc
popf
inc
mov
out
stos
je
xchg
add
fistl
mov
insb
fadds
jae
or
pop
fs
sbb
pop
je
cmpsb
adc
les
in
xchg
nop
mov
dec
dec
lret
push
subb
push
movsb
call
pusha
movsl
xchg
iret
clc
fxch
ret
inc
or
sti
cmpl
ret
les
jl
loopne
push
sbb
enter
mov
loop
jno
xchg
sbb
inc
enter
lahf
pop
popf
pop
sub
xchg
pop
outsl
mov
dec
mov
adcb
pushf
mov
jp
mov
xlat
ret
mov
mov
repz
push
out
cmp
sbb
shll
mov
sub
sahf
adc
xchg
push
fdiv
mov
into
das
or
sub
jge
icebp
in
jo
sub
adc
enter
fstpt
adc
sbb
out
and
or
dec
out
adc
cli
dec
fmul
pop
shr
orl
inc
sub
xor
in
xor
mov
inc
ret
aas
in
xlat
sbb
xor
xchg
jp
imul
scas
shlb
andb
pop
in
pusha
inc
iret
lods
and
sub
jecxz
je
sti
mov
xor
adc
and
xor
push
int
int3
push
int
ficompl
push
fs
add
inc
jl
cld
aad
into
sbb
pop
add
xor
sbb
imul
loop
lcall
mov
and
out
mov
sub
out
sub
aad
idivl
lea
push
pop
cmp
int
sahf
bound
push
mov
sti
inc
ljmp
loop
push
cmove
dec
int
loope
dec
xor
int
das
fadds
addr16
clc
lret
repz
popf
sti
sbb
movsb
loop
mov
and
mov
inc
in
mov
rorl
cmpsl
jl
outsl
iret
sub
cmp
dec
jae
mov
pop
xchg
out
dec
or
cmp
aaa
dec
jge
mov
fildl
movsb
sarl
shlb
fisubs
xchg
push
jo
das
cmp
xchg
rcrl
cli
cld
insl
in
lea
das
mov
jns
stc
fstpt
lock
popa
cld
inc
or
push
jne
nop
ret
mov
cmc
insl
fsts
aaa
dec
mov
push
jle
sub
dec
jo
punpckhdq
mov
and
push
lret
mov
xor
out
in
mov
sub
fcmovnb
rcr
inc
adc
mov
insl
aas
bound
mov
mov
sbb
adc
inc
or
fcomps
sbb
push
mull
jge
xlat
aaa
mov
sub
xchg
push
mov
inc
popa
sub
adc
test
imul
push
insl
add
push
push
lahf
int3
pushl
icebp
add
cltd
xchg
lahf
jb
inc
xchg
xchg
add
addb
dec
add
cmpsb
mov
xor
xchg
sysexit
mov
xor
or
xchg
inc
mov
sarl
inc
nop
pushf
pop
and
xlat
add
cli
mov
outsb
cmp
mov
cmc
scas
daa
and
loopne
outsb
xor
xlat
roll
lcall
or
fwait
ljmp
scas
inc
lea
call
cmpsb
lret
inc
fdivp
and
scas
jecxz
sbb
pop
inc
mov
xchg
inc
or
inc
lret
cmp
mov
loop
mov
test
lds
dec
push
push
jle
and
sbb
hlt
mov
adc
sub
push
test
stc
cmp
dec
in
jb
pop
jno
test
cwtl
push
leave
mov
push
push
pop
out
arpl
adc
jecxz
lods
and
fldl
fdivrl
bound
addps
les
jno
into
xchg
dec
popw
stos
shlb
xchg
testb
jmp
add
push
dec
push
fisubrs
in
push
sub
sub
xchg
iret
aad
frstor
jle
popa
jg
mov
jae
out
stc
jp
push
dec
je
les
jbe
jbe
cltd
rcr
icebp
inc
in
dec
mov
icebp
cli
int
ficompl
dec
mov
mov
sub
mov
jecxz
lret
jbe
movsl
jmp
dec
mov
fwait
push
sbb
sub
ret
sbb
imul
lret
mov
ljmp
mov
push
addr16
jo
int3
inc
sbb
cmp
orb
xchg
pop
cmp
push
mov
jae
insb
bnd
cmc
aam
adc
and
fcmovnb
jae
loopne
pushf
or
cmp
aas
movsb
xlat
pop
daa
jae
xchg
mov
adc
pop
fneni(8087
xor
cltd
int3
sub
inc
mov
sahf
in
out
mov
add
adc
xlat
sahf
adc
sti
mov
popa
rcll
cmp
push
stos
enter
aad
cmovp
es
mov
mov
xorl
mov
das
hlt
and
loop
jbe
or
dec
and
mov
imul
ret
insl
pop
or
fbstp
push
sbb
rorl
ficoms
mov
sarl
sub
enter
cmpsb
cmp
cmp
or
push
mov
push
or
mov
adc
mov
mov
aad
cmp
dec
or
mov
shrb
pop
push
jbe
adc
aam
popf
pop
lea
mov
ud2
pop
inc
jno
sub
pcmpeqb
sbb
xor
ret
add
push
add
or
mov
adc
and
xor
xchg
stc
inc
out
rorl
sbb
mov
mov
loope
sarb
adc
inc
test
sub
xchg
sub
pop
mov
push
pop
in
push
pop
out
push
icebp
adc
repz
xor
add
insb
cltd
lret
in
mov
loopne
xchg
shll
pop
dec
scas
out
fistps
inc
fs
xchg
mov
xchg
sub
pop
shll
push
leave
call
movsb
imul
cmpsb
test
bound
insl
push
sahf
adc
out
jl
pop
testb
dec
add
inc
lret
mov
pop
mov
es
cmp
cmp
cmp
or
add
mov
movsl
or
pop
inc
lcall
fists
std
dec
adc
ret
push
inc
je
stc
test
loop
fs
mov
push
xor
lea
fsts
jb
js
push
test
push
adc
in
mov
clc
lds
xor
mov
call
into
xor
jne
inc
imul
mov
cli
fistps
push
jbe
sarl
cmp
sbb
or
mov
adc
test
jg
jg
or
push
aam
mov
jne
sahf
hlt
aaa
rorb
arpl
dec
rcll
pop
sbb
inc
push
mov
out
sbb
fcompl
stc
ret
fcmovnb
cmp
aam
testl
mov
rorb
mov
lcall
dec
rep
adc
jb
mov
xchg
cmp
or
dec
cmp
mov
js
xchg
inc
sbb
adc
fistl
loope
test
push
pop
cmp
inc
sarl
pusha
lret
xchg
bound
mov
sarb
push
int3
std
fistps
popf
inc
inc
in
push
mov
sbb
ljmp
xchg
stc
das
xchg
mov
je
or
and
out
inc
scas
rclb
testl
scas
lret
push
mov
movb
rolb
dec
shl
call
es
cmp
inc
mov
xor
fnsave
pushf
int
xor
lcall
add
jns
stc
mov
aad
sbb
cmp
dec
add
mov
lret
push
mov
jb
out
push
lds
ja
mov
mov
sub
xchg
lcall
add
adc
and
jmp
popf
jns
xor
xor
orb
cld
xchg
push
jnp
mov
fisubs
inc
or
pushf
lock
pop
dec
jle
ss
inc
inc
mov
dec
aaa
fsubrl
sub
pop
or
push
testl
jl
sub
xor
cli
out
inc
out
insl
into
test
shll
movsl
pop
mov
and
push
dec
push
add
movsl
jp
int
pop
or
cmp
jae
add
icebp
cli
mov
inc
orb
aas
idiv
jae
jo
xor
aad
lret
lea
nop
dec
adc
mov
mov
cmp
into
aas
aad
mov
data16
aad
sub
movb
push
arpl
xchg
jno
cmp
dec
data16
loop
sti
mov
adc
inc
mov
lahf
dec
nop
sub
and
imul
rcrl
int
pop
jl
arpl
aaa
nop
gs
mov
mov
dec
mov
xchg
bound
jmp
insl
arpl
push
xchg
or
or
and
xchg
ficoml
jnp
and
imul
outsb
and
es
sbb
push
fneni(8087
cmc
jmp
mov
mov
js
rcl
dec
sarb
mov
mov
inc
leave
inc
adc
jp
sbb
mov
dec
adc
cli
push
push
out
adc
sbb
jg
dec
addb
push
mulb
out
jl
sbb
xchg
xchg
mov
insb
push
push
subl
sub
mov
cmpsb
inc
addr16
shrl
shlb
pop
jae
or
adc
sub
bound
xor
mov
mov
out
add
adc
adc
sbb
iret
insb
sub
xchg
pop
ss
scas
and
adc
xor
std
sbb
arpl
loopne
add
add
sti
fnstsw
mov
xchg
sbbl
fs
add
lret
cmp
mov
sbb
addl
inc
xlat
add
mov
insl
sarb
ljmp
out
cmp
mov
mov
xchg
xor
pop
xor
lods
dec
sub
inc
push
lret
out
imul
add
cmp
nop
xor
stos
mov
iret
add
jb
mov
adc
cmp
sbb
jg
mov
jbe
nop
popa
daa
add
pop
lds
outsl
outsl
cmp
jbe
cld
inc
xor
aaa
inc
ret
int
xchg
push
pop
icebp
sbb
sub
mov
sbb
adc
add
sbb
mov
fnstenv
inc
fcoml
lret
sahf
inc
sbb
dec
dec
and
cli
test
xor
inc
repnz
sub
stos
xchg
sub
and
cmpsl
jne
jl
rcll
mov
mov
int
call
adc
das
jmp
push
lcall
icebp
loop
push
adc
divb
arpl
xor
loop
daa
call
or
mov
cmp
adc
cmc
addl
out
adc
pop
aad
and
sub
sbb
xor
jmp
jmpw
jns
sub
jmp
inc
orl
cmc
imul
jle
popa
imul
out
loope
and
push
shlb
imul
out
or
in
jb
jp
xorl
call
pop
inc
or
lods
mov
pushl
xchg
sub
push
jb
shlb
lret
sbb
enter
aaa
dec
js
into
imull
lods
fwait
rcrb
mov
lret
aad
cmpsl
pop
push
fstpl
mov
lods
inc
or
loop
push
inc
outsb
push
call
in
push
int3
jmp
stos
and
xorl
loop
fimull
in
leave
scas
sbb
ror
fucomip
push
aam
mov
jp
xchg
dec
lock
insb
mov
aas
push
fisttpl
xlat
jmp
mov
sahf
jge
jg
scas
repz
cmp
adc
push
adc
dec
lds
test
pop
int3
sbb
push
stos
xchg
je
xchg
pop
xchg
and
adc
xor
mov
add
adc
mov
sub
test
stc
cmp
out
jecxz
mov
mov
push
jne
iret
xchg
stos
movsl
inc
pop
add
fildll
cmp
icebp
cmp
orl
or
inc
bound
xor
pop
jo
push
movl
inc
sbb
les
ret
sarb
jecxz
xchg
sbbb
popa
jb
cmp
stos
test
push
and
loop
xor
jne
adc
adc
push
inc
addr16
xor
je
cmp
add
inc
or
xchg
jle
mov
cmp
stos
adc
pop
cld
call
test
repnz
scas
and
bound
xchg
dec
mov
sti
dec
xchg
cmp
mov
shlb
ss
xor
push
icebp
outsb
mov
movsl
sbb
push
shlb
scas
jne
mov
repnz
hlt
add
xor
mov
jp
jbe
pop
into
jno
push
std
dec
add
and
adc
fucomi
jne
jp
loope
sub
push
lods
fstpl
cmpsb
lcall
test
push
rorl
ja
pusha
rcrb
test
pop
icebp
xchg
dec
test
inc
orl
push
test
cli
xchg
fnstenv
outsl
add
mov
pushf
and
sti
cmpsb
pop
or
push
add
xchg
outsl
scas
sti
and
dec
and
mov
outsl
or
daa
xchg
cld
daa
xor
mov
xchg
xlat
jl
hlt
xor
push
pop
jecxz
jne
mov
movsl
dec
xorl
mov
imul
and
cmp
jle
dec
hlt
cmp
jo
or
or
dec
iret
movsl
sti
movsb
jae
add
mov
and
cmp
adc
loope
pandn
es
outsb
xchg
mov
cmp
mov
inc
rclb
mov
jmp
sarb
andb
shrb
out
inc
mov
jmp
cltd
xchg
adc
push
js
popf
lods
stos
subb
sub
daa
pop
stc
cmpsl
movsb
movsl
mov
pop
insb
xor
jmp
or
fisttps
inc
pop
movsb
incb
pop
pop
jae
int3
std
push
xor
push
orl
and
xor
outsb
jge
jle
mov
dec
xor
insb
daa
jmp
or
jbe
pop
inc
xchg
movsb
dec
movsl
and
jl
dec
movsl
or
lahf
out
jle
in
jae
and
or
cmp
xor
inc
fwait
mov
dec
lret
mov
cli
dec
rorl
mov
mov
lret
das
movsl
orl
push
lds
adc
cmp
xchg
insb
cwtl
or
push
add
sub
add
mov
pop
js
ljmp
xor
dec
icebp
pause
mov
sub
insb
or
outsl
jg
mov
ret
outsb
pop
sbb
sti
adc
jge
add
jb
cmc
jg
or
push
cs
push
popa
iret
jnp
rcrb
and
inc
and
aam
inc
mov
pushf
gs
xchg
and
movsb
pop
pusha
in
xchg
inc
cmpsb
dec
fbld
repz
inc
add
js
jmp
mov
daa
sub
scas
cmpsb
pusha
adc
sarb
inc
fdivrs
mov
pop
mov
jnp
pop
ja
push
pop
lret
adc
cmp
push
neg
add
mov
jne
push
fs
push
and
and
push
loop
jns
jl
xor
xorb
jle
push
scas
mov
push
adc
mov
and
pop
xor
cmpsb
push
les
ljmp
xchg
add
push
pushf
and
mov
jle
jmp
lods
ret
es
cwtl
ja
sti
sbb
push
mov
fwait
cmp
mov
outsl
sbb
cmp
dec
mov
cmp
add
imul
add
and
jb
and
pushl
and
mov
push
cltd
daa
int3
rolb
call
sbb
sarb
roll
fisubl
xor
inc
adc
fstl
pop
mov
pushf
xor
loop
or
adc
outsl
rolb
mov
cmp
lods
movsb
dec
mov
inc
adc
outsl
xor
or
popf
je
push
cmp
jno
call
and
push
and
push
adc
sbb
xorb
cmp
add
loop
rclb
inc
adc
sbb
outsb
xlat
psubusw
mov
ret
and
xchg
out
adc
xor
shrb
inc
and
sbb
inc
lcall
lods
test
pop
int
cmp
lcall
inc
rcl
loop
pop
jnp
xor
cmp
fcmovu
xor
xchg
jae
call
loopne
jae
push
sbb
pop
or
jge
rcll
aas
adc
xor
fs
jp
mov
sti
outsl
test
pop
enter
test
stos
movsb
and
push
sbbb
shrl
sarb
adcb
adc
icebp
xor
and
dec
mov
loopne
ljmp
fwait
bound
sbb
jecxz
cmp
and
fxam
aaa
decl
jno
flds
roll
ss
xchg
fwait
adc
mov
in
clc
jecxz
add
insb
pop
inc
sub
adc
jb
out
adc
rcrl
sub
sub
mov
ret
xor
lods
and
popf
hlt
inc
cmpsb
test
movsl
xchg
push
sub
rcll
gs
notl
test
xchg
mov
decl
cmp
pusha
jge
push
xchg
adc
inc
scas
sbb
push
test
stos
cmpsb
aad
mov
cmpsl
aas
pop
dec
das
dec
pop
xchg
sub
mov
mov
fisubrl
dec
cmc
in
stos
fneni(8087
test
sbb
lahf
dec
daa
and
pop
ja
or
mov
inc
or
in
jp
jecxz
repnz
les
mov
push
push
test
test
sbb
xor
dec
mov
mov
inc
jle
pusha
testl
loopne
outsb
in
adc
xchg
enter
out
pop
fmuls
pop
cld
push
mov
bound
cltd
or
test
jge
add
xor
shll
cmpsl
adc
pop
lea
mull
movsb
mov
xor
dec
adc
mov
jae
add
cs
push
add
in
inc
mov
pop
adc
lret
jle
leave
or
loopne
repnz
insl
push
stos
mov
inc
popf
jo
lcall
rolb
sbb
sbb
pop
push
int
in
movsl
iret
rclb
sbb
xor
jmp
mov
iret
pop
adc
pop
cwtl
ret
adc
push
pusha
sahf
jmp
out
ret
into
aaa
add
push
ret
lods
push
mov
xor
pop
adc
and
sbb
sub
xlat
sahf
xor
xchg
and
lret
sbb
mov
xchg
cmp
and
les
scas
inc
jb
xchg
mov
mov
iret
dec
lods
push
mov
xchg
fdivs
mov
inc
mov
inc
fwait
mov
jl
xchg
pop
out
push
lds
shl
out
push
pop
xchg
add
pop
in
mov
cmc
addr16
subl
push
bound
dec
jae
out
pop
aam
jmp
stos
cmp
mov
push
inc
imulb
ret
push
adc
fldl
scas
lret
arpl
mov
pop
je
outsb
and
fistps
mov
pop
stc
leave
mov
icebp
push
mov
mov
lret
inc
and
push
or
mov
mov
fidivs
add
xor
cmp
adc
adc
sbb
pushf
daa
jno
iret
push
or
int3
and
push
sub
xchg
cmpsl
adc
ret
test
stc
insb
lods
sahf
in
lock
loope
xchg
ss
rorb
jnp
out
in
pop
xchg
jbe
pop
sub
push
call
arpl
cmp
mov
sbb
push
lret
inc
jns
xor
daa
mov
cltd
enter
repnz
rorl
dec
fdivrl
test
dec
lods
cli
in
repnz
xchg
out
jno
mov
repz
iret
lock
add
xchg
adc
lcall
xor
insb
jns
add
mov
add
mov
xchg
sbb
loop
popf
sub
pop
fnstsw
jbe
icebp
xor
cmc
jae
rcrl
xchg
out
in
push
add
pop
ljmp
loopne
pop
icebp
mov
nop
orl
jnp
inc
or
cmpsl
les
cmc
or
xchg
xchg
sbb
shl
inc
dec
push
dec
repnz
movsb
jge
inc
stos
imul
sbb
nop
and
mov
sbb
push
mov
scas
loopne
popf
dec
mov
mov
js
cli
push
mov
sub
and
ret
int3
mov
mov
mov
sub
sub
pop
xor
inc
cs
push
rorl
imul
sub
push
enter
rorl
scas
es
mov
aaa
insb
test
cmp
addw
ss
pop
push
fisttpll
mov
cmp
sahf
inc
xchg
inc
pop
insb
add
shrl
jno
adc
subb
cs
bound
adc
add
pusha
sti
outsb
cs
adc
mov
out
popa
sub
mov
jecxz
arpl
and
rcrb
mov
in
mov
aaa
xchg
cld
and
mov
in
mov
and
push
mov
push
pop
or
outsl
aaa
outsl
data16
jno
lock
test
insl
into
imul
push
daa
pop
adc
ljmp
dec
xor
adc
into
movsb
leave
nop
cmp
add
and
inc
jp
push
sbb
popl
popf
stos
inc
pop
les
stos
jnp
outsb
jecxz
popf
dec
jbe
inc
ror
jae
jecxz
js
fs
fsubrs
mov
inc
addl
xlat
mov
jbe
add
loopne
lock
lcall
es
sub
aam
xchg
loopne
loop
sbb
xor
cmp
icebp
or
and
mov
cmc
out
push
pop
das
loope
cltd
arpl
aaa
test
rcrl
lods
sub
ret
dec
push
mov
ljmp
or
jnp
lods
or
loope
fisubl
push
das
sbb
pop
arpl
jb
aad
sbb
imulb
mov
flds
mov
out
cmp
or
ljmp
rolb
mov
aaa
dec
imull
mov
xor
ds
in
jg
out
push
ss
in
xor
xchg
ret
adc
xor
js
shlb
inc
jae
add
mov
ds
test
outsb
mov
mov
mull
hlt
fcmovnu
jmp
mov
pop
mov
inc
mov
xchg
xchg
jp
xchg
dec
xchg
add
in
sarb
xor
rcrb
cmc
fidivl
mov
inc
in
cwtl
sbb
xchg
mov
cwtl
sub
mov
std
mov
scas
fisubrs
mov
or
jmp
xor
outsb
xor
sahf
cs
xchg
imul
jb
int3
jle
pop
xchg
shl
adcb
push
sub
out
cmp
scas
push
add
fbstp
scas
rcrl
jge
fisttpll
pop
pushf
cmpsl
lock
daa
adc
push
inc
leave
mov
pop
fs
push
shl
pop
xor
inc
jmp
mov
dec
adc
cmp
cld
lods
imul
xchg
arpl
ljmp
lock
xchg
nop
cwtl
add
mov
xor
in
mov
sbb
xor
ss
fdiv
and
outsb
cmp
xchg
dec
fmull
dec
push
xchg
xchg
clc
adc
push
or
sbb
daa
add
xchg
addr16
mov
outsb
in
xchg
xchg
dec
rol
xor
in
popl
add
rclb
sub
push
mov
into
inc
adc
sub
mov
leave
and
movsl
adc
in
clc
je,pt
mov
scas
cmp
decb
fwait
sbb
and
imul
mov
xchg
jb
lret
pop
stc
mov
pop
or
es
inc
cs
inc
leave
inc
push
addb
pop
mov
in
mov
ja
scas
xor
push
mov
jecxz
aaa
xorb
adc
sahf
push
hlt
add
sbb
es
mov
hlt
adc
mov
adc
cs
leave
mov
out
nop
test
hlt
xchg
jo
sub
xor
icebp
xchg
xor
fdivrs
movsl
out
sarb
dec
mov
repnz
jp
sahf
iret
xor
stc
lahf
es
arpl
cmpsl
or
and
lods
stos
imul
out
hlt
and
imul
and
jns
shll
mov
xchg
add
int
sbb
or
cmp
xor
in
call
int3
sbb
sahf
or
adc
jns
jl
iretw
sbb
push
dec
mov
imul
cs
xor
cmp
stos
add
cli
popa
das
cmp
cmc
xor
incl
mov
out
xchg
mov
idiv
and
xchg
and
mov
jae
or
jge
mov
faddl
stos
clc
xchg
inc
pop
pop
test
push
sub
mov
cmp
pop
mov
outsb
push
mov
adc
sub
push
enter
fmul
mov
cwtl
ljmp
sub
jns
test
mov
cli
and
lret
lods
xor
cmp
movsl
in
insb
pop
adc
dec
pop
push
mov
jecxz
test
xor
stos
gs
mov
inc
jmp
movsb
and
add
jmp
mov
adcb
or
sbb
int3
push
add
mov
mov
inc
push
mov
and
sbb
cwtl
inc
jp
xor
and
jmp
mov
push
lods
jmp
dec
dec
stos
xchg
pop
or
gs
inc
ds
arpl
jge
sub
rcll
cli
xchg
or
mov
cwtl
sbb
inc
or
jmp
xchg
pop
adc
lods
xchg
stc
loopne
mov
mov
movsl
lea
and
ljmp
into
mov
ss
nop
sub
dec
dec
pop
filds
outsl
jns
xchg
mov
mov
scas
ja
and
pop
inc
jecxz
leave
adc
nop
pop
sti
jno
sbb
scas
in
push
pop
mov
movsl
push
into
lds
icebp
cli
mov
jne
or
pop
and
int
int3
shll
xlat
push
adc
dec
je
xchg
imul
dec
cmpsl
pop
xor
inc
rorl
loope
lea
mov
shll
fnsave
mov
jle
xor
jge
jmp
mov
faddl
xor
pusha
pop
int3
sbb
lret
mov
pop
xchg
dec
adc
lods
inc
mov
mov
push
push
lods
in
popa
loopne
xor
jae
movsl
and
cmpsb
fcmovnu
pushf
les
shlb
xchg
shlb
mov
push
sub
or
mov
mov
pop
lds
xchg
and
mov
sub
fsubrs
fldt
int3
mov
stos
movsl
sub
cmp
mov
inc
pop
add
dec
insb
sub
xchg
sarl
aad
arpl
shl
lock
repz
clc
lock
insb
xchg
arpl
insb
dec
push
ret
hlt
add
enterw
inc
and
xor
je
mov
call
xchg
fmul
vmread
in
in
jns
icebp
lods
movsl
cmp
ret
jae
movsb
fdivr
lahf
add
xor
and
mov
mov
stc
fwait
fs
pop
xor
dec
pop
or
pop
clc
decl
cmpsb
divb
in
fwait
push
lahf
lock
fldl
add
cmp
ret
gs
cmpsl
hlt
adc
cmp
lret
in
ljmp
sub
pop
pop
add
push
mov
fdivr
or
lret
push
dec
stc
dec
lcall
mov
js
shl
int3
mov
idiv
add
xor
fiadds
inc
mov
jae
inc
loope
pop
daa
fsub
jge
adc
mov
xor
or
and
adc
jno
jnp
mov
or
lret
mov
adc
jo
mov
xchg
adc
out
orl
cli
sub
cwtl
int
idivl
pop
sub
dec
inc
rolb
lods
insl
out
cwtl
insb
popa
pop
adc
push
add
fdivl
test
mov
cmp
add
push
jp
mov
popa
or
jmp
sbb
mov
adc
add
lock
loope
xorb
mov
mov
sti
dec
je
test
repz
mov
add
xchg
dec
stos
out
xchg
test
cld
fildl
mov
shl
sub
sti
mov
out
imul
int
xchg
daa
jb
and
in
stc
xchg
cmp
aad
or
mov
ljmp
cmp
sbb
arpl
lret
sahf
ret
insb
ret
pop
in
add
enter
cmpsl
xchg
xchg
outsl
fisttpl
cltd
std
xor
lds
mov
and
mov
inc
fwait
xor
lcall
shr
in
ret
mov
cmp
sub
sbb
or
mov
xchg
out
and
lret
fidivrs
jp
mov
xchg
add
fwait
push
in
pop
jns
jb
sub
dec
in
int3
or
push
adc
jecxz
jecxz
mov
fidivl
aaa
popa
test
in
fsubs
sarl
or
jle
adc
je
les
out
movsb
pop
imul
dec
mov
fcmove
andl
push
push
lods
iret
mov
add
stos
sub
insb
add
in
inc
mov
xadd
push
lock
roll
pop
xchg
scas
int
sarl
push
sbb
push
test
adc
xor
cmp
jmp
nop
mov
lds
pop
inc
gs
mov
cli
xor
cmpsb
imul
pop
sahf
sbb
cs
fs
lods
js
and
repz
sub
sbb
push
sbb
xchg
fwait
mov
mov
xor
cwtl
jno
mov
scas
in
push
jl
int
test
jb
xor
cmpb
dec
outsb
mov
add
movsl
mov
sbb
mov
sbb
ret
in
testl
pop
push
pop
adc
test
or
mov
cmp
push
lods
or
out
mov
sub
out
jns
ficomps
dec
outsl
push
frstor
jb
sub
test
xor
xchg
pop
push
clc
and
jle
or
imulb
test
test
iret
movsb
lcall
mov
fisttpl
adc
stos
movsl
dec
adc
rcr
sbb
add
mov
imul
xchg
lock
cs
jg
lods
fsts
sbb
adc
and
pop
daa
xor
xchg
fwait
xchg
add
fs
and
mov
adc
les
ss
aas
pop
sbb
jp
imul
mov
mov
and
enter
daa
daa
mov
inc
mov
leave
push
iret
xor
daa
mov
outsb
jecxz
out
cltd
cmpsb
inc
loope
out
add
push
fistps
imul
sbb
arpl
dec
cs
fnstsw
aaa
fmull
pop
mov
sahf
push
mov
stos
jbe
xchg
cmc
rcrb
adc
xor
stc
rcl
push
dec
cmp
cmpb
pop
cmp
dec
inc
add
xor
repnz
and
fwait
std
movsl
xor
shll
dec
and
stos
push
scas
pop
xchg
mov
iret
mov
jo
or
push
sub
ret
je
imul
insl
or
out
xchg
nop
pop
inc
add
popf
lods
xchg
stc
pop
inc
adc
inc
mov
cld
cmc
cmp
mov
jo
sbbb
gs
pop
mov
add
fidivs
jecxz
gs
mov
or
mov
rcll
fs
or
push
mov
xor
push
push
jle
pusha
nop
xor
add
fst
ret
pop
icebp
push
and
inc
or
mov
xor
xchg
data16
into
sub
in
mov
pmaxsw
adc
insl
mov
cmpsl
stc
pop
aaa
mov
sbb
xor
ret
and
data16
push
mov
push
adc
mov
subl
xlat
inc
push
cmpsb
and
mov
or
sbb
fsts
sub
cmpsb
out
cli
movsl
cmp
jle
sbb
jecxz
mov
sbb
pop
aas
add
and
pushf
mov
es
and
pushf
shrb
mov
sahf
fwait
sub
xchg
sbb
sub
xor
push
add
xchg
jmp
push
add
dec
add
push
and
shr
and
add
fisttpll
dec
aad
jae
imul
adc
sahf
xchg
stos
pusha
xor
test
dec
mov
push
mov
cld
mov
loope
mov
les
insb
inc
or
enter
out
daa
loope
enter
jmp
pop
movsl
jmp
scas
cmp
cmp
sub
scas
jmp
scas
dec
push
out
sbb
add
fnstsw
inc
icebp
mov
sti
loopne
sub
and
mov
pop
jmp
gs
test
xchg
or
lret
xchg
outsl
sbb
repz
sbb
add
mov
mov
hlt
or
gs
jno,pt
clc
fstl
inc
arpl
lahf
xorb
mov
jg
fst
clc
add
and
stc
cmp
gs
jmp
xchg
mov
insb
pop
rcl
push
inc
push
repnz
push
mov
push
jbe
mov
bound
repz
test
data16
pop
jmp
std
adcb
imul
cmp
mov
mov
in
mov
push
cwtl
ja
dec
repz
std
push
jge
lods
inc
scas
into
ret
stc
leave
bound
add
dec
jmp
cld
sub
int3
addl
pop
sbb
mov
fisubs
test
push
sbb
cltd
lret
popf
jno
les
mov
divl
scas
mov
fildl
mov
mov
push
pop
les
jmp
pushf
fisttpll
adc
cmp
test
into
ds
adc
in
lock
sbb
jle
xchg
pop
and
add
clc
test
sub
push
add
dec
fs
sti
sbb
pop
cli
data16
adcb
or
das
icebp
or
inc
pusha
repz
xor
repz
pop
out
or
mov
flds
sub
dec
aam
cld
adc
ljmp
out
stos
les
fstps
test
xchg
jg,pn
xchg
popa
cmpsb
mov
dec
or
or
xor
or
and
insl
mov
sub
ja
and
ret
fucom
jp
call
cmp
push
into
inc
aad
test
cli
ljmp
ljmp
push
mov
out
mov
cltd
mov
shrb
fildl
ret
cmpsb
fmuls
pop
stos
xchg
push
mov
mov
jg
sbb
rorb
or
in
outsb
ljmp
movsl
lret
dec
dec
dec
cmp
and
ret
int3
pop
incl
mov
mov
enter
test
add
sarl
fwait
lret
aaa
inc
cmp
jmp
repnz
xchg
dec
pop
scas
xchg
or
or
and
sbb
add
aad
inc
mov
cmp
hlt
fs
add
jle
nop
mov
cmp
gs
sbb
fcmovnb
adc
clc
fwait
movsl
mov
in
das
jge
out
xor
mov
or
cmp
add
xchg
jmp
sbb
cmpl
push
sub
jbe
lret
fs
push
scas
je
cmpb
rcrl
les
aas
fbld
in
xor
pop
push
sub
ja
out
lea
push
js
pop
hlt
mov
stos
enter
cmpsb
push
cwtl
leave
cmp
or
xchg
push
lret
xchg
jl
out
mov
out
out
fdivrl
cmp
sub
xchg
push
mov
sbb
and
and
in
test
mov
cmc
inc
incl
push
fcomps
mov
add
lcall
add
mov
cmp
clc
scas
inc
fxch
xchg
in
sub
roll
mov
rorl
sti
ja
dec
jle
call
or
insb
lds
lds
jno
pop
pusha
aas
sbb
mov
push
jl
pop
mov
clc
mov
outsb
aad
sbb
data16
call
add
mov
mov
cmpsl
xor
iret
adc
dec
inc
inc
mov
mov
iret
jge
push
jle
mov
das
push
dec
sbb
push
testb
stc
sbb
repnz
or
lret
loope
out
lods
in
sub
test
xor
mov
jg
jge
add
test
sti
cmp
or
dec
and
mov
sbb
jns
dec
movsb
cmpsl
and
mov
adc
and
shrl
push
cmp
sbb
jl
repnz
mov
cmp
and
push
stos
aaa
ds
cmp
dec
mov
jo
out
rolb
or
push
ret
dec
insb
jae
rol
add
jge
mov
cmp
and
jmp
xchg
or
fldcw
add
push
xor
mov
mov
mov
idivb
sbb
push
dec
fxch
pop
popf
mov
mov
sbb
arpl
jle
pop
cmpsl
fwait
jns
push
mov
pand
cmp
dec
int
mov
push
outsb
sub
and
js
xchg
jbe
push
cmc
jnp
sarb
xor
and
lret
shlb
jno
add
and
sub
bound
jecxz
mov
aam
lahf
fadds
cmpsb
push
lock
jp
inc
ret
icebp
lods
std
jecxz
push
xor
popa
fstl
mov
or
xchg
lret
ljmp
jns
pop
sahf
test
xchg
inc
or
ds
sub
je
push
xchg
shrb
mov
imulb
sbb
or
scas
into
jnp
pushf
cmpsl
or
adc
clc
sbbb
sub
rorl
xchg
aam
jo
jo
mov
inc
loope
mov
xor
xchg
lods
jbe
xchg
jo
lcall
sub
jno
fisubrs
push
add
mov
shlb
sub
add
cmp
mov
mov
sarb
iret
inc
hlt
in
js
ds
dec
stc
divl
loop
cmp
pop
push
mov
neg
loope
cmp
mov
inc
cwtl
outsb
test
testl
fmul
push
das
scas
jnp
fs
repz
mov
and
cmp
sarl
add
mov
mov
dec
cli
in
addr16
fwait
hlt
or
inc
jnp
jl
sbb
sbb
lock
sbb
cmp
add
loopne
sbb
lea
add
and
pop
lock
loop
inc
jg
xlat
push
jne
je
xchg
cld
jmp
cmc
mov
in
loopne
push
pop
push
cmc
push
pusha
pop
dec
mov
and
popfw
mov
and
ja
or
sbb
xchg
push
icebp
es
push
mov
pop
insl
xor
dec
mov
movsl
testl
pop
sbb
push
pop
and
cmc
cmp
cli
cmpsb
jl
push
sbb
jb
data16
sbb
pop
ret
in
addr16
inc
xrstor
loope
ljmp
and
push
sahf
shlb
fwait
mov
cmp
out
sbb
cmpsb
ss
inc
jmp
sbb
jbe
enter
mov
xor
iret
xor
pop
cmp
mov
enter
cmp
mov
cmp
adc
inc
inc
jmp
xchg
jmp
or
fistpl
lods
in
roll
xchg
jb
pop
push
lods
lret
jmp
shll
shl
jle
cli
pop
cwtl
push
mov
push
stos
xchg
xchg
das
xchg
hlt
jbe
pushf
imulb
mov
pop
push
push
pop
cwtl
jle
and
addb
push
jae
mov
cld
lret
hlt
ss
jmp
push
in
mov
sbb
jo
iret
leave
mov
adc
mov
pop
xorb
sub
pop
dec
faddl
adc
or
aas
jl
stos
jne
aam
imulb
shl
push
add
test
xchg
fildll
xor
outsl
enter
adc
add
cltd
or
scas
mov
int3
lods
mov
and
push
jns
out
or
jae
jns
push
insb
jno
imul
push
imul
fisubs
lea
jne
mov
in
lock
enter
daa
pop
jg
mov
xchg
add
cmc
repz
js
les
imul
sbb
les
mov
cmpsl
cmp
ljmp
jnp
and
outsb
in
mov
icebp
and
lds
add
dec
mov
nop
inc
xchg
mov
repz
fstl
jne
in
outsl
jnp
pushf
pop
push
push
or
mul
rorb
mov
jge
sahf
push
push
push
cmp
mov
fiaddl
pop
push
add
and
inc
mov
les
inc
mov
xorl
lret
daa
mov
xor
repnz
adc
mov
insb
push
aas
sub
jecxz
or
jg
imul
sbb
adc
mov
jge
idiv
popw
xchg
lret
pop
inc
cmp
mov
popa
repz
fdivr
rorb
aas
lds
fldl
addr16
jl
rol
rcll
pop
sar
adc
ss
movsl
jge
dec
push
pop
mov
xor
sub
dec
or
dec
inc
and
inc
fbld
das
add
xor
adc
pusha
pop
push
nop
in
jp
or
sub
subb
pop
hlt
mov
inc
jb
jcxz
dec
adc
fdivs
fistl
xchg
or
xchg
sbb
imul
mov
addr16
popa
mov
jp
mov
dec
fcompl
lcall
mov
pop
and
or
add
sbb
jo
sbb
sub
jns
subl
loopne
ljmp
mov
push
or
divl
out
sub
adc
push
insb
dec
mov
inc
push
and
fucomi
ljmp
push
gs
stos
inc
lods
mov
dec
aad
sub
xor
mov
jno
aas
jns
inc
push
cmp
pop
ret
jmp
push
aad
jp
gs
aas
in
iret
xchg
out
ret
shrb
adc
xchg
adc
out
je
jno
mov
int3
sbb
jo
inc
out
fsubs
cltd
adc
xlat
xor
cmp
xchg
pop
sub
push
or
push
rcll
xchg
xchg
bound
push
xor
sub
cmpsb
nop
pop
xchg
mov
call
add
mov
data16
xchg
sbb
fwait
or
daa
xchg
movsb
popa
shl
sbb
daa
xor
fisubl
testl
ret
inc
xchg
xchg
jge
aas
cmp
mov
loope
outsl
test
movsl
xchg
aad
mov
mov
pop
in
mov
sub
add
fimull
mov
mov
in
pop
pop
les
stc
leave
pop
aaa
dec
jns
int3
dec
push
fstpl
or
loope
in
inc
int3
add
out
sub
or
jmp
cltd
jecxz
push
add
shrl
fcoml
bound
add
jno
adc
xchg
jp
jecxz
push
push
jnp
les
sarb
and
cmc
mov
sub
push
out
nop
stos
loope
push
mov
nop
sbb
mov
cmpsl
stc
xchg
pop
push
push
mov
imul
cmc
lds
cmpsb
pop
inc
in
mov
aad
lcall
jbe
or
sbb
adc
outsb
dec
push
cwtl
push
pop
addr16
adc
cmpl
pop
xchg
je
mov
xchg
and
sbb
xchg
stos
add
iret
enter
xchg
jge
out
bound
sub
adc
fnstcw
mov
outsb
ja
add
adc
popf
leave
stc
loop
stos
aaa
andb
jmp
xchg
fdiv
test
clc
sub
add
ja
push
xchg
orb
mov
outsb
cmp
or
jns
scas
cwtl
pop
iret
push
cmp
jbe
dec
adc
pushl
ret
cmp
dec
int3
push
adc
mov
xchg
dec
jmp
ret
sti
pop
sbbl
ret
mov
rcrb
pop
mov
pushf
mov
pop
push
lds
push
pop
gs
mov
xor
push
adc
cmp
inc
sbb
sar
sti
out
mov
jp
fisubrl
inc
mov
addb
push
std
mov
jb
dec
xor
in
in
addl
in
into
sbbb
aad
jnp
jmp
add
outsb
pusha
mov
jno
jnp
leave
jg
ds
mov
adc
das
rorb
mov
ds
call
rclb
sarl
or
sahf
hlt
inc
dec
add
mov
jge
cmp
inc
inc
xchg
cmpsb
andb
inc
jb
mov
fcmovnb
push
xchg
sub
sbb
mov
sbb
xor
lcall
dec
pushf
sub
andl
mov
cmp
jno
adc
movb
mov
inc
addb
lods
mov
divps
lret
loop
roll
aad
and
enter
or
push
leave
mov
movsl
movsl
or
pop
ja
out
xor
pushf
pop
sub
push
rclb
scas
jl
push
jo
pop
addb
jge
cmp
dec
fs
stc
dec
minps
ret
or
aad
ja
push
aad
std
test
sbb
mov
jo
outsb
xor
insl
es
hlt
pop
mov
xor
std
and
mov
fmul
test
pop
mov
mov
loop
dec
xor
into
pop
fsubr
sbb
push
inc
and
xor
inc
or
push
cmpsl
fldt
pop
neg
lock
jp
loope
movsb
sbb
xor
jbe
dec
jnp
jmp
test
sub
mov
xor
je
filds
sub
jecxz
imul
mov
popa
cmp
sti
pop
mov
lret
adc
movsl
sti
mov
std
xchg
xchg
inc
addr16
clc
clc
pop
notb
xor
adc
mov
xor
jge
push
frstor
fdivr
sbb
outsl
lahf
mov
add
lahf
adc
addb
add
jp
or
dec
adc
js
or
push
sub
mov
fbstp
out
in
cvtdq2ps
pusha
xor
scas
pop
call
push
xchg
sahf
shll
jnp
jo
cmpsb
inc
pop
add
mov
cmc
xchg
ljmp
pop
aam
jle
test
rorl
cwtd
xor
push
pop
popa
mov
or
fwait
pop
sub
and
push
jl
jl
test
lods
and
fcmovnb
fs
aaa
je
inc
sub
cmp
push
sub
push
jmp
pop
aas
inc
cs
sbb
je
jp
cmp
push
daa
popf
aam
dec
scas
lret
pop
sbb
pop
xchg
mov
push
mov
cltd
add
cltd
sbb
mov
add
adc
enter
aam
bound
out
leave
je
xor
mov
xor
push
mov
add
xor
push
mov
in
sub
mov
int
arpl
es
jne
lret
testl
cwtl
add
stc
sub
xchg
mov
testb
xchg
push
test
lock
cli
inc
mov
and
scas
xchg
dec
aam
scas
add
cmovge
inc
xchg
pop
xchg
int3
gs
jbe
pop
incb
and
inc
fs
add
cmp
or
add
pop
cmp
shlb
outsl
xchg
push
push
es
lcall
push
cmp
movsb
push
lret
or
fildll
scas
lret
sub
dec
xchg
je
xor
and
or
cmp
and
aam
repnz
xor
insl
pop
mov
ret
sub
sahf
mov
aas
pop
mov
ja
and
mov
jecxz
dec
stos
pop
lcall
loop
rcrl
insl
xor
xchg
sbb
sti
xor
out
fs
pop
data16
lea
pop
stc
cmp
ret
add
push
ja
xor
mov
sbb
call
xor
dec
mov
mov
jge
add
inc
sub
out
or
in
mov
test
push
mov
mov
mov
mov
sbb
sti
push
mov
sub
je
call
or
sbb
xchg
adc
ret
in
fistpll
gs
add
mov
mov
push
push
ret
sub
pusha
arpl
jl
jbe
out
fwait
xlat
xchg
inc
push
add
pop
or
sbb
and
pop
es
xchg
outsb
scas
fsubl
xchg
enter
lcall
int
xchg
ja
arpl
cmp
dec
rclb
push
lret
lods
xlat
push
or
push
stc
mov
or
sub
adc
jnp
iret
mov
outsl
jle
or
jae
test
adc
pop
mov
inc
icebp
pusha
sbb
test
je
mov
repnz
int
lcall
test
mov
mov
and
lea
adc
add
xor
push
mov
sbb
inc
in
inc
mov
cld
or
jns
clc
add
and
rcll
ja
pop
stos
cmpsl
jmp
ljmp
cmc
xchg
dec
dec
setns
rclb
fcomip
xchg
pextrw
addb
inc
loop
test
scas
adc
lods
mov
mov
sbb
ret
jno
add
imul
pmulhw
jp
js
mov
pop
addr16
ss
sub
movsl
test
pop
and
dec
or
pusha
pop
insl
popf
mov
ss
scas
push
lahf
sarb
pop
xchg
in
push
push
loopne
cwtl
aam
cmpl
inc
lret
call
scas
aas
push
jg
pop
jmp
call
and
outsb
cmp
fiaddl
pusha
push
bswap
daa
cli
mov
xor
push
pop
pop
in
loope
test
int
aaa
push
testb
nop
adc
out
push
xchg
dec
push
fwait
dec
push
test
push
mov
ret
arpl
xor
pop
mov
jmp
aaa
aaa
inc
dec
data16
pop
sub
fidivrl
sub
cmp
cmp
pop
scas
inc
add
inc
xchg
fcoml
js
xchg
pop
sub
xlat
aam
out
gs
mov
jo
paddd
jmp
stc
dec
je
mov
xchg
loope
dec
popa
aaa
add
or
or
lds
or
pop
popa
loop
mov
sbb
mov
std
sbb
jb
jb
dec
mov
inc
sub
mov
shrl
jb
movsb
ljmp
and
xor
gs
adc
into
in
xor
inc
shll
loope
fs
add
scas
loopne
inc
lahf
dec
cmpsl
push
movsb
outsl
jne
outsb
movsb
lcall
lock
insb
or
fstpt
ljmp
scas
pusha
cmp
mov
cwtl
shll
xor
dec
ret
or
sub
js
stos
or
rorl
pop
dec
enter
mov
ds
lock
insb
and
jg
xor
into
popl
pop
xor
setae
mov
push
ds
push
dec
cmp
insb
adc
stos
inc
imull
pop
lcall
cmpsb
jl
jns
fisubs
xor
aad
pop
and
xchg
cltd
mov
cmp
cwtl
daa
jnp
inc
jmp
mov
cmc
leave
mov
push
out
jecxz
jns
add
cmp
sahf
repz
push
ret
arpl
dec
ret
loop
adc
push
add
push
push
pop
in
push
out
push
imul
fsubrl
fmul
dec
in
mov
inc
inc
pop
jl
insl
sarb
in
adc
xor
or
jp
pushf
pop
ss
jo
add
loopne
int
cmp
mov
mov
out
shll
jo
ss
adc
and
loope
subb
adc
dec
mov
adc
mov
call
dec
mov
les
lods
dec
push
jecxz
sub
leave
aaa
mov
rcrb
addr16
dec
and
sub
xchg
mov
bound
mov
add
rcr
xchg
pop
cs
adc
addr16
stos
sbb
sub
push
mov
cmp
add
pop
daa
push
jns
jnp
sbb
and
push
inc
xchg
sub
roll
outsl
shr
mov
mov
xchg
mov
imul
dec
adc
cmp
arpl
pop
ror
jb
adc
push
cmp
jmp
add
dec
inc
cli
or
in
or
xorb
pop
and
and
subb
add
cwtl
sti
popf
test
scas
outsb
and
lret
clc
js
popa
aas
mov
inc
xorl
inc
and
xorl
or
ret
outsb
jle
addl
rolb
jns
mov
cmp
dec
mov
pop
fcoml
cld
and
jo
xchg
dec
test
scas
jno
lods
xchg
adc
push
scas
pop
imul
dec
cmp
add
or
fs
cmp
and
sti
jg
mov
fwait
and
push
xchg
sbb
cltd
xchg
fsubrs
shrb
sub
mov
stos
cld
ret
aad
repnz
jnp
cmp
mov
pushf
xchg
iret
push
pushf
hlt
or
pushf
pop
inc
cmp
shlb
outsl
inc
clc
pusha
inc
add
mov
mov
cwtl
xor
mov
popf
mov
movsb
jae
je
mov
dec
aad
push
inc
and
and
mul
adc
inc
and
add
inc
xorl
movsl
sbb
mov
shrb
loopne
xchg
lods
xchg
out
outsl
dec
xor
add
cwtl
addr16
pop
insl
jmp
ljmp
fdivs
fisubrl
fisttps
jle
jmp
dec
dec
mov
xor
sbb
inc
xor
jmp
ror
adc
aas
jmp
cwtl
sbb
mov
lret
pop
aam
enter
mov
mov
data16
pop
out
mov
mov
mov
fistpll
push
lret
xchg
jb
inc
sub
and
mov
sub
into
jns
xor
mov
orb
mov
hlt
sbb
sbb
data16
sarb
dec
fs
lods
mov
sbb
push
mov
or
das
lock
fisubrl
adc
ror
fistpl
inc
icebp
push
mov
cmpsb
sti
cmp
pusha
aaa
and
dec
stos
inc
dec
cmp
stos
sub
and
push
push
inc
sub
mov
imul
pop
push
sub
mov
les
sub
dec
push
les
add
inc
mov
in
mov
dec
dec
ja
das
adc
scas
mov
xor
push
pop
sub
aas
int3
outsb
and
daa
xchg
or
pusha
pusha
mov
mov
fwait
jp
push
iret
ret
outsb
insl
pop
adc
xor
out
xor
lret
into
lret
into
fmul
ret
xor
int
inc
fiaddl
mov
inc
or
data16
sahf
push
mov
pushf
pop
repz
cmp
call
in
ficoms
stos
cmp
pop
cmp
xchg
scas
or
sbb
test
sub
imul
or
mov
pop
lock
dec
aam
xchg
imul
fdivrl
and
outsl
fsts
scas
inc
and
aam
cmp
int3
orl
xchg
jbe
xor
sbb
lahf
in
inc
and
mov
jl
cmpsl
repnz
sbb
out
dec
dec
xor
push
shll
in
mov
mov
cmp
sbb
adc
adc
icebp
shrl
mov
cmp
add
pushf
xor
inc
scas
jl
mov
adc
sub
sub
vcvtps2dq
scas
fisubs
push
aaa
repnz
push
dec
mov
pusha
xlat
mov
push
out
sbb
mov
mov
out
aaa
push
pushf
inc
dec
es
xchg
adc
or
inc
push
std
fsubs
rol
jmp
xlat
jns
jne
xchg
fimull
pop
add
cmpsb
ds
mov
or
mov
push
pop
pop
loop
xchg
scas
mov
ret
add
das
sub
test
add
inc
addr16
mov
xorl
pop
push
push
fcoms
push
xor
pushf
call
inc
sbb
mov
mov
fwait
iret
add
rorl
sub
cmp
repz
xchg
pop
pop
sbb
xlat
test
mov
sbb
pop
mov
nop
and
add
push
iret
cmp
xor
jno
icebp
and
dec
shl
jecxz
lock
fldenv
mov
int3
fs
pushf
or
sbb
mov
lahf
push
jne
loopne
das
aam
stos
dec
and
leave
mov
mov
add
ret
mov
mov
add
adc
lea
in
inc
mov
or
clc
xchg
fidivrl
jecxz
pop
and
test
shrl
push
divb
sbb
push
aad
ljmp
xorl
lock
cli
aam
mov
mov
mov
repz
inc
dec
sbb
inc
jno
add
enter
mov
add
jl
and
sbb
fwait
push
stc
sbb
popf
inc
sbb
sbb
ret
in
pop
dec
fistpl
insl
icebp
clc
lret
cmp
clc
mov
inc
and
dec
arpl
xchg
mov
test
stos
or
mov
int
subl
out
loope
cmp
add
cmp
push
mov
lret
fcmovu
scas
xchg
and
xor
fst
movsb
mov
jge
call
in
and
aam
add
cltd
lahf
addr16
inc
pop
hlt
adc
lea
adc
dec
lods
sbb
add
sbb
imul
mov
rcrl
fildl
pop
imul
xchg
orl
push
aam
cmp
add
mov
cmp
aad
jl
sbb
mov
dec
mov
jecxz
mov
movsl
sbb
mov
jle
cmpsl
cmp
lret
mov
sti
jo
je
pop
adc
lea
nop
mov
fistpll
adcb
and
cmp
push
shrb
and
add
loopne
push
mov
xor
and
jle
je
pop
inc
mov
outsb
jno
lods
or
mov
ljmp
test
mov
sbb
mov
jle
and
cmpsb
int
clc
dec
add
pop
mov
aas
cli
lods
push
bound
push
xor
cmp
je
xchg
out
ror
push
repz
std
test
or
push
xor
sub
push
loop
lock
int3
adc
adc
out
nop
inc
sar
xchg
xchg
sub
sbb
daa
dec
testb
jmp
xchg
pop
hlt
mov
xchg
xchg
push
dec
or
in
sbb
clc
jno
mov
cmc
push
xchg
pop
pop
push
mov
loope
push
dec
jb
push
je
or
xor
inc
and
sbb
mov
and
and
leave
inc
inc
mov
and
cltd
hlt
test
dec
inc
dec
ret
sbb
std
mov
sti
movsl
inc
cld
pop
adc
dec
jmp
es
lahf
cs
push
unpcklps
repz
das
pop
add
cmp
jb
ret
addr16
arpl
out
adc
das
cs
sbb
cltd
mov
mov
dec
test
mov
stos
stos
jmp
sti
and
or
loope
fstps
add
inc
inc
sbb
push
jecxz
cwtl
mov
scas
int3
adc
lcall
mov
popa
or
mov
xchg
cmc
aad
pop
mov
pop
add
movsl
xlat
mov
mov
cltd
cmp
movsl
cmc
and
sbbl
dec
popf
lods
add
fstl
mov
iret
cmp
inc
cmp
movsl
aaa
jmp
push
push
test
ja
mov
insb
mov
pop
jg
sub
ja
pop
enter
adc
and
icebp
loop
lock
inc
aam
std
mov
adc
xchg
xor
sbb
loope
lahf
shll
mov
sub
rorb
mov
adc
shlb
and
cmp
xlat
outsb
add
mov
notb
xlat
jae
mov
rclb
imul
jae
sub
mov
je
enter
mov
rcrb
pop
repnz
push
cmp
xor
fld
inc
lea
fcomps
push
fisubrs
aaa
add
add
sbb
and
pop
mov
xchg
nop
jne
cld
mov
aas
lcall
stos
lcall
jge
packssdw
adc
pushf
cmp
jnp
inc
sub
in
add
or
adc
fistl
dec
gs
sbbl
and
aad
or
std
clc
cmpsb
mov
pushf
mov
add
add
in
cmp
xor
xlat
pop
jmp
daa
in
shlb
stos
aas
test
push
push
jp
loop
cmp
xchg
movsl
pushf
cmp
pop
lods
add
cmc
pop
jnp
mov
adc
scas
push
ljmp
push
les
xchg
xchg
cmp
mov
inc
insl
xchg
mov
pop
adc
jp
loopne
pusha
test
outsl
scas
pop
aaa
pop
out
inc
aas
jae
out
mov
or
fbstp
out
lock
sub
in
mov
bound
inc
outsl
sbb
mov
adc
gs
cmpsl
aam
scas
jo
cmp
test
adc
sub
adc
std
insb
fwait
loopne
sbb
lods
jg
push
shll
gs
sub
aad
dec
pop
cmp
jl
xor
loop
push
add
mov
cmpsb
insl
ss
dec
sub
popa
mov
and
orb
jmp
loopne,pn
mov
jnp
xchg
cmp
pusha
stos
sub
insb
stc
lods
jnp
xchg
and
test
add
push
xlat
daa
push
mov
dec
adc
sti
aaa
or
dec
pusha
adc
push
cmpsl
ss
xor
adc
fbstp
out
dec
out
and
ds
fstps
mov
fstps
adc
pop
shll
inc
sbb
lods
int3
push
or
inc
out
lret
mov
pop
cmc
stc
mov
in
mov
xor
mov
mov
int
repz
out
mov
mov
jp
mov
or
sub
xchg
cmpsl
dec
iret
int
cltd
fwait
fldenv
pop
setb
daa
pop
popl
cmpb
push
mov
iret
jnp
leave
sbb
mov
dec
jg
xchg
xor
test
les
enter
or
jmp
jge
push
mov
jns
test
push
mov
lods
or
mov
pop
and
mov
or
in
leave
int3
dec
xor
pop
xchg
outsl
cmp
pop
xor
mov
ficomps
pop
sbb
dec
mov
sbb
jbe
test
jmp
es
add
xor
pop
pusha
stos
lgdtl
mov
ret
jns
test
lock
cltd
hlt
out
cltd
rol
loopne
sahf
sub
js
movsl
jae
push
mov
sahf
pop
repz
loop
mov
lods
adc
push
lods
sahf
jecxz
push
jae
or
insl
pop
mov
lahf
cmp
call
push
add
in
xor
outsb
pop
xor
jmp
imul
add
mov
inc
sbb
sub
cwtl
lds
xchg
lea
ljmp
ljmp
pop
sti
daa
mov
xor
or
int
fstpl
mov
bound
sbb
xor
pushf
in
jg
mov
enter
sbb
pop
iret
mov
mov
outsb
dec
in
mov
mov
sbb
xlat
repz
int3
dec
pop
and
adc
jmp
cmc
stos
inc
push
xchg
xor
sbb
js
in
inc
and
std
fimuls
xchg
fst
movsb
rcll
in
or
fwait
ds
mov
push
aaa
push
shll
imul
and
loop
and
movsl
push
fsubrp
mov
popa
cmp
add
mov
and
lods
addr16
shll
rcll
adc
or
mov
and
xor
jmp
xor
xor
lods
jnp
jbe
xor
push
test
int
imul
xchg
mov
cmp
jns
jp
testb
add
mov
inc
loope
cld
jl
jbe
shlb
push
dec
push
cmpsb
test
mov
push
mov
inc
and
sbb
js
in
mov
insb
ja
fldl2e
and
lahf
and
imul
sub
dec
in
mov
test
cltd
mov
mov
subl
mov
dec
adc
loope
loope
inc
pop
inc
sbb
das
xchg
cli
icebp
mov
mov
nop
mov
mov
iret
popf
cmpsl
pop
into
push
pop
daa
out
or
lock
pop
cli
push
mov
jge
ret
incb
push
std
icebp
jmp
arpl
xor
sti
out
int3
jl
stos
jne
test
enter
xlat
aas
inc
mov
mov
cmp
ja
sahf
xor
cmc
and
test
sbb
jb
cmc
mov
notl
imul
jnp
test
imul
and
and
xchg
mov
cmpsl
lods
js
sbb
mov
jecxz
movsb
push
shll
mov
enter
clc
pop
loop
icebp
pusha
push
scas
movsl
jb
stc
jne
push
test
gs
add
xchg
addr16
cmp
hlt
es
and
add
and
gs
inc
mov
jbe
and
adc
or
mov
shll
data16
int
mov
lcall
popf
mov
xor
dec
std
test
rcll
stos
jb
cwtl
and
mov
fnsave
fists
push
ret
and
adc
pop
or
jno
in
shl
xchg
jmpw
jns
fdiv
dec
into
adc
fst
ja
popa
sub
pop
movsb
popf
xor
outsl
ret
stos
jg,pn
push
out
aas
std
and
cli
push
stc
repz
lds
xchg
das
js
inc
push
mov
lea
call
test
jb
jl
cmpsb
dec
into
ret
xchg
call
xor
popa
pop
cli
lods
cmp
out
dec
mov
call
and
mov
inc
fwait
lock
sarb
mov
sbbb
enter
lret
push
in
pop
pop
or
fbld
jae
jo
pop
js
xchg
mov
pop
ss
fcoms
test
mov
dec
jae
pusha
icebp
aas
cld
sbbl
mov
fstpl
dec
loope
fisubrs
pop
sbb
mov
iret
adc
mov
adc
sti
aad
loop
clc
lods
cmp
cltd
pop
mov
aad
mov
and
scas
out
rcr
lods
idivb
lods
adc
jmp
pop
fmull
xchg
fwait
cli
rorl
cmp
aaa
sub
daa
inc
ret
xor
mov
mov
ror
add
xchg
adc
push
cld
fcoml
mov
lods
jp
mov
int
push
loopne
les
gs
add
sbb
negl
pop
adc
mov
inc
pop
std
adc
repz
xor
out
pop
test
xchg
cmc
pop
testb
cmpsl
ftst
jecxz
pop
push
add
sub
sbb
cmp
add
in
fdivrs
pop
clc
xor
mov
ss
push
xchg
jp
dec
decb
mov
xchg
mov
mov
ret
loope
xchg
sub
insl
fidivs
roll
mov
xor
roll
pop
and
outsb
mov
rcll
out
mov
inc
ja
das
inc
in
cmp
test
lret
addr16
dec
xchg
hlt
cmp
mov
repnz
bound
add
sbb
push
cmp
div
into
mov
cwtl
mov
flds
scas
add
cmp
iret
xchg
pop
cmc
mov
or
orl
xor
pusha
mov
sub
icebp
cmp
adc
clc
sub
and
cmp
insb
jbe
aad
in
mov
insb
lret
ljmp
fidivl
lret
mov
sar
or
das
clc
mov
or
mov
scas
inc
pop
scas
sub
iret
jae
std
lods
in
add
ss
mov
cmp
popf
push
fyl2xp1
lock
mov
mov
lret
gs
or
xor
insl
subb
das
mov
into
lret
sbb
jg
xor
lahf
scas
inc
jne
jge
xchg
xchg
mov
mov
xchg
or
pop
cs
into
and
in
addr16
shll
and
hlt
push
lods
xchg
in
pop
mov
xchg
cli
in
mov
in
mov
mov
adc
jnp
jbe
sub
imul
pop
repnz
jp
push
mov
dec
js
add
out
pop
sbb
jmp
xchg
mov
and
into
jnp
les
in
dec
cmp
mov
stos
cli
adc
and
adcl
push
or
mov
mov
cwtl
xor
cmp
insl
jl
mov
fsubr
pop
mov
arpl
sarb
les
sub
mov
aam
inc
in
std
int3
bound
fs
pop
push
xor
add
orl
sbb
mov
test
push
xor
neg
inc
xchg
push
ss
int
test
test
int
xor
scas
mov
lods
outsl
pop
or
sbb
adc
cmpsl
cmp
jb
in
jecxz
fildll
mov
fidivs
or
aad
and
outsb
outsl
outsb
sbb
pop
mov
popa
lods
repz
push
sbb
int3
push
push
pop
aas
dec
jmp
xchg
and
mov
lcall
imul
mov
mov
imul
cmpsb
mov
lock
fldl
jne
cmp
in
roll
inc
xchg
sahf
jle
lret
fs
add
inc
frstor
stos
data16
push
push
xor
out
data16
ret
add
cs
xrelease
xchg
and
shl
pushf
lret
std
rorb
shll
clc
sbb
xor
sti
rorb
pop
daa
dec
push
push
shl
lret
jp
lods
shlb
add
cmc
ret
stos
pop
pop
sbb
jne
cmpsb
mov
leave
fdivrl
rcrb
fists
mov
mov
loope
inc
jno
cwtl
and
jns
pop
adc
inc
aaa
sub
into
push
mov
xor
sub
mov
xchg
cli
xchg
repnz
cli
aam
fisttps
mov
out
xchg
and
repnz
jnp
sbbb
xor
mov
outsb
ja
mov
mov
fisubrs
sbb
pushf
outsl
sbbl
mov
repz
test
sbb
jg
push
lret
dec
add
xor
jnp
jbe
pop
loope
sub
les
test
mov
dec
ds
sub
add
sub
inc
popf
ffree
outsb
pop
cld
pop
jecxz
pop
xchg
push
addl
or
sbb
in
pop
daa
lea
test
daa
pop
cmpsl
sahf
pop
testb
stc
cmp
pusha
jae
daa
and
add
dec
pop
mov
jbe
inc
in
fisubrl
push
ds
and
call
jns
mov
lret
stos
mov
pop
loopne
or
and
js
xchg
loope
inc
jge
lods
lea
xchg
and
mov
into
adc
fs
std
scas
out
pop
adc
push
lea
faddl
pushf
rcrl
aas
lods
fimull
in
int3
int3
push
mov
jo
imull
fsubrl
fisttpl
push
jb
dec
pop
mov
stos
sub
adc
xor
movsb
inc
test
popa
dec
subb
push
mov
icebp
cltd
mov
inc
cmp
lods
in
jp
and
sub
jae
mov
scas
iret
xor
aas
mov
inc
jnp
inc
sub
ljmp
sarl
stos
or
idivl
cmp
add
xor
and
cmpsl
or
sbb
iret
test
clc
mov
xchg
adc
mov
out
sub
or
loope
xchg
ret
pop
sub
bound
xlat
arpl
aas
in
js
pop
ja
push
dec
outsl
xor
cmp
test
ja
lods
and
cmp
idiv
add
mov
iret
movsl
jno
inc
sarl
aad
add
mov
push
in
roll
and
sbb
or
jb
clc
int
mov
dec
iret
dec
mov
mov
and
inc
ret
int3
pop
push
data16
shlb
xor
scas
jns
xlat
jmp
cmpsb
and
mov
xchg
les
in
es
xchg
out
nop
mov
and
xchg
lcall
jnp
int3
sub
ljmp
fmull
stos
or
imulb
push
sub
sub
les
or
loopne
pop
in
add
insl
jmp
fstl
mov
lret
jae
aaa
cmp
xchg
xchg
dec
pushf
xchg
in
aam
jb
sub
jae
sbb
cmp
inc
ret
sahf
int3
les
or
lods
push
roll
and
sbbl
sub
test
repz
imul
mov
push
rep
out
and
add
inc
xchg
cmpsb
or
rolb
outsl
jg
clc
icebp
icebp
dec
adc
cs
icebp
sub
insl
gs
mov
inc
inc
xlat
addl
ret
push
pop
or
fbld
push
repnz
out
loop
cltd
push
mov
test
out
push
fmull
or
rclb
push
jle
push
pushf
iret
aad
xor
fcompl
xor
cli
xor
or
sbb
iret
xor
jle
out
or
cli
insb
pop
xchg
popf
insb
add
loop
mov
push
ss
mov
into
ret
adc
sahf
xor
rol
outsl
out
andb
jp
imull
fst
adc
jne
add
add
jnp
fs
ficomps
push
ja
xor
jae
jle
push
stc
mov
inc
daa
cmp
icebp
add
and
sbb
fistps
xor
sub
lods
mov
movsb
out
jmp
xchg
out
jge
inc
imull
lret
push
dec
sub
mov
xchg
fsubs
out
mov
dec
mov
adc
stos
repz
jp
pop
cmpsl
push
addr16
mov
stc
lret
in
rorb
mov
sub
sub
ds
mov
iret
push
mov
pop
dec
or
pop
cwtl
or
mov
jo
jle
adc
popf
or
push
jg
inc
push
imul
jne
loop
out
leave
in
cmpsb
shrb
lds
ds
xorb
xlat
les
push
ds
cs
mov
shrb
pop
lret
mov
fs
ror
int3
loope
in
nop
je
or
out
int3
js
jmp
mov
adc
cmp
adc
iret
movl
xor
dec
dec
ds
mov
stc
insl
add
push
mov
mov
ss
cltd
ss
bound
jle
mov
and
dec
cmp
data16
cmp
lods
daa
lret
xchg
pop
add
flds
fwait
insl
jecxz
xor
in
add
pop
pop
popa
cmpb
andl
or
inc
cwtl
add
enter
adc
pop
cli
add
mov
daa
je
adc
in
fdivrs
xchg
jmp
cli
xor
cli
leave
sub
jle
jns
imul
sub
out
arpl
shlb
or
cli
xchg
cmp
and
cli
lcall
popa
out
dec
cvtpi2ps
cmpsb
sbb
lods
daa
mov
lret
sbb
jb
add
adc
jb
les
adc
popf
js
rcrl
mov
add
das
fsub
mov
nop
xor
jmp
pop
aas
jno
adc
imul
inc
xchg
lods
cmpsb
or
negb
les
jns
icebp
push
out
ds
push
clc
xor
hlt
push
fs
lea
pop
sub
xlat
sbb
sub
push
cmp
negb
mov
cmp
mov
pushl
fisttps
xchg
mov
decl
sub
pop
cmp
outsl
xchg
jecxz
dec
lock
pop
push
jmp
daa
mov
ds
loope
mov
movsb
lea
lock
lahf
lods
xchg
inc
and
fstpl
xor
andnps
add
inc
test
addb
push
fiaddl
popf
sti
psubusw
jmp
sbb
fsubs
sub
inc
push
jmp
jno
fcoms
pop
adc
xor
cmp
sub
mulb
cmpsb
lret
fimuls
mov
jae
jb
mov
aam
jbe
adc
scas
push
or
mov
aam
decl
fdivs
cmp
mov
popf
mov
not
xchg
lcall
in
addps
xchg
shrl
and
xchg
lea
jns
pop
adc
bound
lret
push
lret
out
outsl
mov
verw
sub
subb
or
jns
xchg
mov
pop
roll
loop
ret
repnz
ds
flds
pop
jns
fcmove
jp
jg
ljmp
xchg
push
insb
ss
sub
xor
xor
mov
dec
imul
inc
fmuls
outsb
pop
xor
in
bound
loopne
out
ljmp
dec
mov
imul
stos
xchg
pop
mov
dec
rcrl
inc
fsubs
fcmovne
daa
fidivs
sbb
or
lea
jle
add
mov
pop
adcl
dec
cmp
push
add
inc
call
stc
das
loopne
cld
push
fisubs
cmp
sbb
and
inc
pop
test
xor
cld
aam
mov
invd
mov
ret
fimuls
pushf
mov
mov
out
scas
jmp
and
jge
xchg
mov
mov
lahf
and
cli
mov
mov
outsl
mov
ja
cmp
or
cmp
movsl
dec
arpl
jo
shlb
adc
je
push
sub
xchg
cmc
ja
adc
sarl
sar
xor
lods
and
sbb
mov
or
addr16
mov
fldenv
push
dec
pop
mov
clc
lds
push
mov
mov
push
lcall
into
sub
clc
rcl
into
dec
adc
push
push
push
cltd
insb
js
jnp
jnp
jg
cmp
rcr
call
cmp
clc
out
rorl
mov
in
cmpsl
insb
test
jl
imul
pusha
push
outsl
mov
cltd
and
mov
lahf
int
call
add
cmp
or
aaa
andl
fnsave
adc
jmp
out
repz
movsl
ljmp
lcall
daa
mov
je
fcompl
push
aaa
adcl
je
fwait
mov
dec
xchg
pop
insl
cld
sub
inc
inc
cmp
test
mov
jecxz
mov
jle
push
xor
out
aad
or
leave
and
je
pop
jle
pop
xchg
push
popf
adc
sbb
xchg
or
lds
sub
ficoml
xchg
or
stos
mov
dec
ficomps
pop
icebp
lret
fistps
and
pop
js
inc
cmpsb
arpl
pop
jecxz
push
mov
dec
xchg
inc
fmulp
pop
stos
into
imul
stos
or
pop
push
inc
pop
dec
sub
repnz
call
test
pop
outsb
inc
mov
aam
mov
notb
mov
clc
out
stc
mov
arpl
cmc
ret
jg
and
sbb
mov
sub
push
gs
dec
push
mov
mov
and
ss
pop
add
insl
imul
pop
sarl
push
xchg
pop
icebp
pop
adc
jns
mov
testb
shrb
in
cli
add
push
inc
push
pop
loope
cmp
mov
rcrb
js
xchg
lret
loopne
pusha
push
jl
inc
les
add
jecxz
pop
mov
das
adc
push
cmp
out
fimull
jg
ljmp
push
push
testl
dec
push
out
inc
and
inc
pop
adc
in
or
mov
cld
adc
xchg
test
inc
in
sbb
or
push
add
in
sub
in
or
cmpsl
pusha
pop
mov
jle
jns
movsl
pop
in
jae
cmpl
push
rclb
leave
inc
cmpsb
test
dec
fdivl
push
aam
enter
xor
test
ja
pop
bound
adc
pop
inc
stos
add
sbb
jo
sbb
jne
pusha
ret
aad
or
jl
mov
sbb
dec
push
getsec
cwtl
loopne
add
movsb
dec
loope
jnp
cld
cmp
add
mov
rcrb
test
ret
mov
imul
notb
in
mov
mov
adc
push
lahf
daa
arpl
movsl
imul
stc
cmp
std
mov
int
dec
cmp
or
cltd
cmp
lods
subl
out
jae
es
mov
les
daa
fs
xchg
jp
dec
pusha
jnp
pop
ficompl
push
jge
sti
movsl
push
sahf
insb
rcll
jnp
fwait
or
mov
sub
in
cmp
ljmp
call
mov
or
pop
add
shr
xchg
out
stos
sahf
test
push
movsb
outsl
pop
out
or
mov
jns
mov
in
dec
dec
push
setae
push
movl
fsubs
jno
mov
jecxz
test
fstpl
sbb
adc
mov
decb
inc
sub
xchg
negl
adc
test
sbb
sbb
or
add
pop
jge
rclb
sub
jmp
push
inc
pop
mov
push
pop
cmp
stos
mov
fidivrl
fdivs
sbb
outsb
test
loop
imul
js
out
shrb
std
test
sbb
sub
xor
es
adc
lods
mov
insl
xchg
pop
cmpl
movsl
and
ss
push
pop
mov
stos
andl
jl
shrl
cmc
mov
mov
pop
cmp
mov
or
and
lret
cs
gs
cmp
nop
stc
inc
fnstcw
adc
loope
imull
sbb
pop
push
jae
adc
cmpl
out
or
enter
shr
mov
loope
cs
loopne
jmp
insb
cmp
and
dec
ret
popf
add
push
mov
dec
push
xchg
ret
sbb
sub
mov
roll
pop
das
test
fs
mov
jb
xchg
movsl
ja
jne
xchg
nop
cltd
jne
out
das
out
imul
xlat
in
jo
dec
push
std
push
mov
faddl
xor
mov
jecxz
mov
in
dec
cwtl
mov
stc
in
sbb
sbb
and
push
pop
or
out
adc
popa
fwait
pushf
scas
jae
movsl
cmp
xchg
outsl
sub
popa
push
mov
jmp
sbb
inc
andb
xchg
or
sbbl
xor
pop
xchg
imul
ror
dec
inc
fldt
aad
jg
adc
mov
pop
xchg
push
cmc
push
je
inc
lcall
sub
xor
lea
test
ror
out
aaa
fwait
pop
or
add
js
lock
orl
cmp
adc
dec
ljmp
movb
pop
pop
adc
xchg
insb
frstor
nop
mov
cmp
jo
cs
pop
out
inc
push
push
icebp
jo
cmp
or
dec
lret
push
jp
inc
dec
fnsave
mov
fwait
jb
outsl
jge
dec
lds
dec
cs
rcrl
fisttps
sbb
insl
lret
adc
mov
in
jecxz
xchg
and
push
pop
mov
or
xor
pop
fiaddl
clc
push
xor
es
mov
out
sub
mov
mov
mov
pop
fwait
mov
push
frstor
testl
and
fdiv
mov
sahf
and
mov
adc
icebp
inc
dec
std
call
lock
in
scas
mov
xlat
stos
loopne
sub
mov
fdivs
jo
push
lods
das
repnz
mov
cmp
mulb
testl
nop
test
xchg
es
jmp
bound
in
push
xchg
mov
loopne
push
dec
bound
sbb
or
insl
lods
jnp
idiv
pop
ret
pop
in
sub
in
ret
arpl
mov
dec
repnz
cmpsl
dec
pop
or
xlat
and
pop
pop
mov
cld
in
pusha
mov
cmp
shrb
adc
jge
stc
mov
stos
dec
ficompl
stos
test
cmova
mov
cmp
or
imul
fwait
jne
pop
jb
fnop
rol
mov
pusha
push
mov
xor
push
or
sbb
nop
aas
arpl
sub
xchg
sub
idiv
xor
push
in
leave
xchg
mov
jle
add
push
jecxz
in
testb
mov
or
sbb
out
xor
mov
jne
out
sbb
jg
lea
rclb
je
fists
shll
jp
fcomps
test
sub
lods
inc
sbb
ljmp
mov
push
aas
rcll
push
dec
inc
daa
outsb
cmp
jbe
movsb
mov
cs
push
and
mov
and
lods
aas
mov
fisubrs
ret
mov
inc
aad
jg
das
lods
push
xchg
xchg
sbb
ja
mov
dec
aam
xor
in
hlt
test
mov
fstpl
data16
mov
sahf
int
daa
and
jl
das
cmp
mov
and
sbb
cltd
xor
inc
mov
pusha
dec
pop
addr16
orb
pop
lcall
inc
pop
push
mov
push
cmp
jae
mov
pop
pop
cmpsb
pop
mov
test
movsb
push
pop
mov
push
xor
or
jge
mov
xchg
or
divb
dec
sbb
lcall
addr16
dec
cmpl
xchg
pop
add
jl
cmp
loopne
adcb
or
jle
or
mov
sub
sub
dec
loope
popa
add
fwait
int3
sub
out
jo
fidivl
mov
out
jb
loopne
mov
mov
divl
ja
or
push
push
shr
sbb
and
out
xor
in
adc
dec
push
adc
push
pop
into
fsubs
cmp
xchg
jbe
movsb
add
sub
mov
clc
fs
push
insl
add
icebp
jo
loope
sbb
xchg
xor
dec
mov
lahf
mov
ror
inc
pusha
pop
dec
data16
rclb
push
add
xchg
and
xchg
pop
inc
stos
call
loopne
mov
cmp
or
scas
adcb
cwtl
jl
cli
xor
jns
inc
jnp
push
sbb
push
mov
mov
jae
popf
pop
lock
xchg
outsb
mov
xchg
outsl
pop
icebp
sub
adc
cwtl
test
cmp
or
addl
mov
ds
jb
lret
add
imul
cmpsb
aas
mov
xchg
fidivl
adc
cmp
mov
clc
xor
lods
push
stos
push
cli
movl
loopne
mov
jge
and
sub
push
xchg
lret
out
shlb
xor
ret
dec
loop
aas
cmp
mov
jp
test
mov
fsubrl
push
ret
repz
pop
aad
jl
popf
jge
cmp
mull
cmpxchg
inc
pop
jp
subl
xchg
mov
idiv
je
ja
bound
pop
xchg
sbb
call
shl
in
mov
sbb
cltd
sub
sub
rorb
es
pop
pop
fwait
xchg
sub
mov
cmp
movl
xor
test
xchg
mov
mov
fidivrl
adc
mov
mov
jle
gs
push
pop
clc
or
repnz
sbb
inc
xchg
push
xchg
sbb
pushf
mov
push
push
out
pop
xchg
hlt
int
int
fdivrs
nop
mov
sbbl
cmc
sbb
jp
jg
ss
dec
jmp
or
loope
icebp
cmpsl
gs
jno
out
push
push
adc
jae
insb
inc
and
cmp
pop
adc
dec
xchg
sti
es
pushf
inc
mov
adcl
mov
aas
xor
outsl
jo
add
outsl
ds
gs
insl
mov
push
pushf
faddl
sbb
add
push
int3
sub
dec
push
loop
imul
inc
out
mov
pop
cs
incb
iret
or
repz
cmp
push
pop
jns
fadd
stos
mov
push
jb
and
fwait
adc
jb
push
les
adcb
gs
in
sub
dec
pcmpgtb
ret
push
fstpt
addl
jg
inc
aas
insl
jl
sub
fwait
shll
fwait
pop
sub
or
out
shr
dec
mov
lds
pop
subl
pop
jg
xchg
loopne
fmull
das
mov
cmc
pusha
insb
inc
bound
imul
ret
int
aas
mov
in
xchg
jne
out
test
jno
push
lock
lods
divb
sti
push
pushf
cmpsb
xor
lods
pop
add
mov
das
scas
rcrl
inc
loope
les
xchg
pusha
jo
lds
push
incb
das
ds
call
js
test
pop
inc
mov
inc
sub
add
xchg
js
or
js
arpl
xchg
pop
mov
out
mov
push
ljmp
xor
jo
add
mov
jge
jo
lods
daa
sbb
pop
inc
push
mov
divl
rol
cmp
insl
inc
mov
in
xchg
cmp
pop
sbb
pop
test
adc
xor
in
or
cmpsb
into
aad
xchg
call
das
int
lahf
cmpsb
xlat
mov
sub
les
insl
fiaddl
or
lods
xor
mov
int
xchg
lret
mov
jns
mov
push
lods
movsl
rclb
xchg
push
jmp
xchg
cltd
sub
insb
inc
insb
lods
mov
push
stc
cmp
into
lcall
stos
xor
aad
push
ljmp
fidivl
pop
mov
pop
test
push
pop
in
xchg
xor
push
ds
jae
mov
divl
ja
mov
inc
shll
and
jge
and
sbb
push
cmp
jno,pn
xchg
sbb
rcll
fidivrl
mov
dec
cmp
clc
jmp
pop
pop
out
mov
dec
dec
mov
das
dec
inc
repz
and
cwtl
jp
sbbb
nop
sub
sub
xchg
aaa
xchg
pop
insl
in
aas
inc
test
adc
lret
negb
add
fadds
iret
aam
imul
sbb
popa
push
je
movsl
notl
enter
outsl
sbb
ret
jae
dec
arpl
xchg
bound
jb
scas
nop
movsb
jge
xchg
je
xchg
mov
addb
orl
mov
or
fmuls
mov
aam
ss
cmp
in
jnp
cmp
push
add
icebp
add
xlat
dec
test
scas
scas
pushf
lock
push
jo
mov
lahf
push
cmpsl
inc
cmpsl
mov
decl
pushf
mov
dec
or
xchg
aam
xchg
sub
inc
clc
outsb
pop
aaa
dec
sahf
inc
pop
sbb
adc
hlt
xlat
or
xchg
jne
fwait
inc
loope
pop
and
outsb
cltd
jle
sub
nop
fdivl
mov
addr16
divl
mov
jle
mov
pushw
inc
or
stos
lods
aad
adc
pop
into
sub
push
movsb
mov
jp
mov
xchg
insb
mov
sbb
xor
jno
sub
pop
and
jae
movsb
ds
mov
iret
xor
in
mov
call
fstps
sbb
imul
xchg
pusha
mov
lock
jae
ljmp
add
loopne
ffreep
rolb
mov
or
sub
xor
stos
add
mov
cmpsb
je
jnp
mov
repz
repnz
adc
push
leave
pop
mov
xor
jo
jg
shl
sub
and
popf
inc
cmp
leave
loop
movsl
sub
adc
testb
adcl
sbb
pop
mov
mov
fiadds
mov
repnz
das
pop
jecxz
pop
push
imul
jmp
and
mov
jle
stos
les
add
out
movb
push
jl
nop
imulb
nop
xchg
mulb
mov
daa
sub
mov
push
addb
mov
dec
movsl
mov
setl
sub
adc
in
fs
jge
es
jg
call
add
push
call
pop
std
push
sub
int
sbb
stos
pop
mov
scas
ljmp
icebp
and
add
sbb
xchg
inc
fadds
mov
int
in
cmp
adcl
fdivr
shll
les
mov
and
xor
es
xlat
fsub
xchg
mov
cmp
jg
cmp
jge
testl
dec
stos
adc
xor
icebp
lret
push
jg
int3
or
pushf
jo
mov
jg
xor
inc
sbb
flds
mov
enter
lret
xchg
jecxz
xchg
and
push
ret
cmp
cmpb
movsl
mov
cwtl
mov
cltd
addr16
out
imul
pop
mov
xlat
add
mov
push
fs
pop
sbb
jp
pushf
test
inc
mov
test
aaa
push
aad
fidivl
icebp
xchg
add
xchg
es
push
mov
inc
dec
cmpsb
pop
lods
jg
and
ret
ss
loope
movsl
and
adc
pop
xor
int
or
adc
xchg
lock
cmp
dec
pop
sub
jne
xchg
xor
dec
iret
sahf
or
popa
or
popf
inc
xlat
mov
or
das
repnz
mov
lods
jmp
incb
cmp
shll
push
insl
fiaddl
push
jg
movsl
pop
in
clc
adc
aam
cld
test
xchg
nop
mov
stc
int
hlt
in
pop
push
or
popf
data16
sbb
add
shlb
or
jmp
stc
into
sub
rorb
cmp
adc
jno
call
or
pop
loopne
fisttpl
jl
out
out
or
sbb
xchg
push
jae
sub
fisttpl
sbbb
xchg
xchg
insb
shll
punpcklwd
mov
xor
in
insb
test
adc
mov
inc
test
pop
lods
sbb
jno
push
adc
popf
imul
shl
es
icebp
decl
adc
push
out
cmp
and
push
cltd
and
test
addl
call
xchg
std
mov
movl
mov
xchg
fwait
in
xlat
sub
scas
das
xchg
jo
nop
dec
mov
filds
pop
push
int3
or
movsl
xchg
dec
sarb
sarb
push
enter
cmp
push
sub
pop
mov
cwtl
dec
jo
dec
flds
shll
adc
rcll
jp
sbb
jecxz
pop
sbb
cs
outsb
pop
cmp
add
mov
xchg
int3
xchg
cli
iret
rorb
clc
jmp
push
js
imul
jno
xor
call
xlat
mov
push
mov
push
cmp
mov
ss
hlt
fisttpll
push
aaa
imul
mov
push
lret
ljmp
sub
add
lods
cmp
jecxz
mull
jg
cli
cmp
xchg
sbb
or
pop
mov
sbb
stc
inc
test
fisttpll
test
shrl
je
mov
jnp
jmp
xchg
cmp
fdiv
in
in
loopne
or
xor
xorl
push
push
push
mov
arpl
sbb
addr16
jbe
les
lock
jno
or
xor
movsb
mov
xor
test
enter
bound
cmc
std
movsl
out
mov
cmp
movsl
and
cltd
movsb
mov
popf
xchg
lods
int
xor
dec
push
scas
mov
aam
nop
lods
std
divl
popa
mov
es
mov
and
shll
push
cmpsl
out
adcb
aam
xchg
leave
mov
inc
dec
sbb
push
mov
enter
dec
test
xchg
xor
pop
inc
test
sti
lea
in
inc
lahf
cmp
andl
dec
data16
jle
test
or
adc
pushf
mov
and
or
pop
cs
add
fs
imul
add
jo
fists
sbb
or
jecxz
pushf
mov
adc
jmp
push
ljmp
ret
dec
andl
pushf
sub
aas
mov
jo
mov
mov
push
scas
and
inc
incl
pusha
sbb
pop
adc
mov
das
jp
dec
aaa
rorl
push
test
inc
ja
daa
push
test
movsl
fs
movsb
sbb
inc
mov
shrb
adc
add
icebp
mov
add
ret
sbb
in
jg
add
push
jbe
mov
inc
ss
pop
xor
icebp
pop
push
dec
imul
ljmp
or
push
xchg
cltd
add
jmp
inc
nop
mov
pop
icebp
pop
orb
sbb
inc
sub
mov
popf
push
fisttpl
inc
aas
lret
imul
aaa
or
fidivrs
ljmp
mov
inc
add
mov
ror
insl
ljmp
dec
popa
or
jle
sub
fcmovnu
add
pop
stos
sub
add
mul
lret
sbb
sti
stc
push
jl
mov
lret
int3
mov
mov
mov
lods
or
adc
pop
das
push
lret
dec
in
lock
adc
repz
lcall
push
add
pop
sahf
xor
stc
pop
mov
xlat
mov
call
pop
push
and
cmpsl
pushf
jne
test
fisubs
aaa
popa
cmp
xchg
ds
pop
stc
jae
ja
adc
mov
bndstx
mov
cmc
inc
loope
daa
lahf
inc
gs
std
repnz
cmpsb
addr16
mov
cmp
fdivp
test
test
cwtl
inc
cltd
cmp
inc
sti
dec
and
jo
push
and
sbb
push
es
cmp
mov
fnstenvs
adc
xchg
out
je
cwtl
xchg
mov
fbstp
pushw
sub
out
push
lret
inc
mov
xchg
cmp
mov
movzbl
dec
xchg
cmpsb
pusha
ret
inc
repnz
repnz
rorl
adc
xlat
or
and
call
test
fbld
xor
int3
and
test
scas
dec
cmpsb
cs
adc
into
mov
jnp
xor
lock
pusha
aad
aas
movsl
add
clc
dec
loop
mov
and
aaa
xchg
mov
push
xchg
pop
xor
cmp
sbb
add
cmc
jg
jae
sub
into
cmpsl
cwtl
negl
mov
outsb
adc
mov
in
lods
int3
sub
stc
push
fldenv
cmp
push
xlat
xchg
xor
sbb
xchg
cmp
rcrb
imul
in
pop
aaa
mov
adcb
push
imul
mov
add
push
push
jp
dec
addl
bound
mov
mov
push
lock
pop
xchg
sub
or
sub
or
imul
in
enter
pop
jns
jle
push
pop
jcxz
test
push
sbb
jb
adcb
je
pop
xor
xor
pop
pop
fwait
addr16
sahf
fstps
stos
cmp
mov
dec
xchg
shll
sbb
inc
pop
inc
insb
mov
aam
test
ja
push
faddp
sbb
jl
cmpsb
xorl
fwait
andl
and
cmovb
dec
int3
stc
xor
jmp
mov
push
test
mov
adc
fiadds
and
mov
jmp
in
in
inc
xchg
das
cmp
jl
int3
add
and
mov
out
call
sbb
mov
mov
aaa
fwait
pusha
mov
xor
pop
mov
dec
dec
adc
push
dec
cltd
das
inc
cld
inc
sbb
aad
mov
push
inc
hlt
mov
and
sar
jg
xor
add
jle
push
in
pop
ret
lret
cmp
aam
sbb
loopne
ljmp
or
lahf
or
xor
mov
push
and
mov
pop
popa
inc
test
and
xchg
imul
mov
dec
or
jmp
or
dec
adc
repz
into
xor
rcrl
mov
test
mov
mov
sti
push
hlt
sbb
movsl
es
bound
mov
mov
cli
cmp
js
stos
daa
pop
outsl
or
js
in
pop
jbe
fwait
into
fstl
stc
adc
jle
inc
lcall
cmp
pop
repz
enter
in
jge
bound
mull
or
in
jbe
ljmp
idivl
jge
push
sub
mov
cwtl
sub
sti
unpckhps
ja
lods
mov
mov
out
shrl
pop
dec
push
adc
xor
arpl
xlat
lcall
sbb
std
scas
xor
adc
lds
outsb
subl
arpl
xchg
mov
add
lods
dec
setns
sbb
subb
fninit
cmpsl
mov
or
mov
push
imul
mov
add
jmp
xor
das
jbe
inc
out
scas
xchg
sub
adc
shlb
mov
shll
jne
cwtl
xlat
pop
into
adc
mov
xorb
mov
mov
cmpsb
jnp
repz
je
add
jbe
xchg
int
lods
pop
je
fstpl
shll
push
arpl
fisubrl
adc
mov
mov
mov
cmp
insl
fildll
jno
add
sti
pop
lcall
jge
jbe
sahf
bnd
inc
xor
mov
mov
mov
ljmp
bound
mov
test
pop
push
pop
mov
xor
inc
sbb
push
ret
loop
sbb
addb
loopne
stc
push
repz
lret
mov
dec
dec
nop
pop
dec
cmc
mov
mov
mov
mov
rorl
or
clc
xchg
xor
jae
aaa
sti
int3
xor
inc
rclb
and
into
faddl
mov
fstpt
fstl
jg
push
mov
aad
xchg
dec
stos
test
mulb
in
or
notb
hlt
jp
addr16
xor
inc
push
jmp
sub
call
lea
or
or
xchg
xchg
fwait
push
pop
mov
lock
popa
inc
fisubl
adc
xchg
xchg
cli
in
add
add
loopne
xchg
shlb
rolb
jl
xor
lods
cmp
adc
ljmp
mov
hlt
lcall
outsb
adc
mov
insb
mov
push
jle
fildll
mov
adc
dec
adc
inc
mov
je
es
mov
out
outsb
xchg
sub
cmp
ret
cld
xchg
inc
out
aaa
and
scas
test
sub
ljmp
dec
fwait
dec
jmp
mov
add
sbb
mov
mov
fstps
sbbb
mov
add
cs
pop
mov
call
ja
mov
or
mov
inc
xor
dec
dec
repz
sub
cmpsl
in
outsb
xor
pop
outsl
es
int
mov
lahf
mov
and
mov
push
adc
adcb
mov
je
sub
push
adc
mov
je
lock
push
inc
push
push
sbb
adc
test
jl
out
shl
mov
inc
stc
xchg
adc
xchg
xchg
mov
push
cmp
int
jg
rcl
gs
sub
jp
mov
push
iret
fiaddl
cld
daa
sbb
je
aaa
mov
push
mov
jle
jecxz
push
dec
sub
cli
sbb
pop
jle
lea
std
lret
movsl
idiv
pop
jp
jecxz
or
je
xor
xchg
dec
mov
sbb
int
enter
push
sub
in
mov
insl
and
ljmp
popa
stc
or
dec
shlb
xor
pushf
mov
aam
std
cmpsl
pop
xchg
imul
fs
inc
popf
ss
stos
repnz
push
mov
add
stos
adc
outsb
les
sarl
inc
cmp
ret
push
pop
dec
push
sbb
xor
inc
les
push
push
mov
cmp
mov
mov
dec
stos
shr
sub
fimuls
pop
out
jae
test
testl
lret
js
dec
leave
loopne
test
outsb
sbb
fldpi
test
adc
sarl
dec
mov
lods
jg
dec
or
int
dec
in
test
repnz
xlat
and
nop
push
gs
call
and
ljmp
repz
ret
jae
sbb
out
ds
add
stos
ret
xor
cmp
scas
fisubl
or
loop
js
clc
adc
test
cmpsl
adcl
jno
jnp
and
or
inc
dec
enter
jno
mov
popa
lret
fistl
pop
xor
xchg
lahf
fldt
mov
test
mov
roll
ss
xorb
ds
sahf
push
push
xor
pop
pop
pop
out
adc
das
ss
xor
arpl
push
add
mov
call
add
roll
xchg
loop
call
in
push
lahf
aaa
or
cltd
or
std
aaa
mov
mov
aad
pop
pushf
cmp
sbb
xchg
sbb
mov
stos
ss
cs
mov
jno
sarb
cmpsb
jo
mov
call
mov
jmp
ljmp
dec
lods
mov
ret
xchg
xchg
or
mov
mov
mov
sbb
mov
dec
inc
hlt
ret
jns
jns
adc
stc
or
xchg
jno
fstl
int
clc
jmp
stos
les
je
insl
scas
jmp
mov
jne
lods
mov
sub
xor
cmp
in
sub
pop
dec
push
inc
pop
dec
int3
mov
insb
icebp
int
movsb
filds
jge
mov
fmuls
or
subl
dec
test
or
ds
sub
mov
arpl
cmpsl
lret
lea
cld
out
mov
cld
arpl
cwtl
in
xlat
testl
stos
mov
mov
out
je
push
mov
addl
cmp
inc
inc
fidivl
iret
loope
repz
movsl
mov
inc
lea
stc
shrb
insb
fdivl
ret
adc
lock
mov
sub
rolb
jg
inc
fdivrl
adc
in
push
repz
das
push
push
push
pop
test
dec
ret
adc
lods
cmp
mov
mov
or
adc
loopne
xchg
cmpsb
fstps
push
mov
sbb
add
push
push
test
mov
and
dec
mov
ja
shlb
mov
fucom
and
jo
adc
mov
cmp
push
cmp
push
ds
jbe
pop
gs
in
xlat
lea
inc
clc
test
in
sbb
mov
cli
sub
insl
outsb
jl
sub
out
cmpsb
pop
xor
rcr
idiv
test
sub
enter
adc
aad
fdivrl
jp
add
daa
lock
pop
mov
pop
outsl
in
pop
data16
or
xchg
dec
dec
xchg
lea
adcb
std
and
add
in
push
xchg
clc
sbb
daa
xchg
adc
movsb
adc
push
cmpsl
cmp
in
pusha
stc
inc
inc
insb
fnstcw
leave
cmp
adc
mov
mov
ljmp
mov
pop
pop
sub
lock
cld
int3
rcll
inc
mov
out
sbb
mov
mov
add
lret
lea
xor
addr16
aaa
mov
sub
jp
out
adc
shrb
push
stc
xor
pop
push
cmp
pop
mov
sbb
push
xchg
inc
sarb
xor
lret
inc
add
call
add
popf
stos
jg
scas
movsb
dec
push
mov
in
dec
push
inc
xchg
sbb
cltd
pop
mov
clc
stos
pop
jle
sub
fstps
jbe
or
xchg
stc
and
daa
add
into
xor
inc
test
outsb
add
ja
inc
cwtl
cli
dec
mul
jge
cmp
outsb
push
inc
fcomps
call
sbb
inc
out
inc
mov
das
fwait
clc
dec
mov
sub
xor
sbb
push
mov
outsb
mov
sbb
or
call
jne
adcb
push
mov
or
test
xchg
xchg
data16
dec
pop
add
rcl
je
cltd
pop
shll
pop
cld
repnz
repz
shlb
cmp
add
jb
add
insl
dec
add
sub
and
adcb
xchg
lods
mov
inc
mov
xor
icebp
push
stos
inc
out
xchg
pop
cmp
loopne
imul
lret
fdivr
dec
or
xor
cmp
movsl
sbb
mov
leave
or
sbb
push
mov
adc
repnz
mov
xor
aas
mov
adc
mov
out
int
scas
out
bnd
pop
les
cmp
es
loop
sub
dec
pop
cwtl
fnstenv
mov
and
and
arpl
pop
fstpt
out
out
cltd
ret
and
pop
inc
sub
fxch
and
push
test
mov
sub
pop
incl
call
dec
es
sbb
test
adc
in
gs
lock
dec
loope
js
pop
pop
sbb
xchg
flds
outsl
dec
dec
xor
xor
dec
ficoms
outsl
push
repz
into
in
pushf
test
mov
hlt
xchg
mov
sbb
sti
add
dec
jo
lea
mov
loope
mov
data16
adc
loopne
dec
lds
mov
and
testb
cmp
pop
mov
dec
xchg
call
pushf
stos
clc
and
in
push
dec
imul
mov
mov
dec
dec
xor
mov
push
sub
and
push
out
sub
rorb
jo
mov
xchg
mov
sti
pushf
in
jmp
shrl
cmp
hlt
jbe
ficomps
mov
push
inc
daa
popa
inc
cwtl
mov
fsts
cli
lods
mov
push
jmp
mov
aam
jo
adc
mov
es
ja
in
ja
mov
dec
adc
pop
mov
ljmp
sti
or
mov
mov
mov
ficoms
data16
push
ret
adc
sti
jl
nop
popf
jns
or
push
shrb
jge
xor
mov
inc
cmp
add
imul
and
pop
add
jg
inc
jg
sub
xor
inc
sbb
lock
jl
mov
lea
xor
pop
sub
cld
pop
mov
and
test
adc
adc
insb
inc
lock
jo
cli
out
aaa
add
fcmovnbe
pop
lock
test
sahf
jns
pushf
sbb
js
jns
mov
int3
popa
les
sub
sbb
push
jp
aaa
es
cmpsl
fdivp
js
xchg
jmp
shlb
andl
outsl
cltd
mov
orl
mov
pop
lcall
ret
mov
xchg
out
fsubl
scas
scas
cmp
dec
fcmovu
push
mov
adcl
xor
mov
xor
add
cmpsb
or
shlb
arpl
icebp
mov
mov
je
xchg
cmp
add
sub
sahf
aas
cmp
and
inc
jmp
gs
aam
gs
in
mov
out
fistl
push
add
sbb
lret
mov
ret
sbb
pop
fisttpl
jbe
push
mov
lret
flds
scas
add
bound
dec
in
pop
fiadds
jmp
pop
push
rolb
inc
add
xchg
adc
jecxz
cltd
sbb
jnp
push
mov
push
push
shll
mov
inc
xor
mov
pop
lods
xor
xor
lea
repz
stos
mov
xchg
mov
push
mov
gs
in
xchg
jo
leave
das
cmp
adc
cli
push
jmp
inc
cltd
or
mov
and
repnz
xor
ret
push
xlat
fists
jge
inc
mov
fldcw
fisubs
jo
jno
push
daa
jmp
ret
ret
fmull
inc
mov
cli
inc
sbb
scas
flds
pop
aaa
inc
jnp
push
adc
movsb
mov
sub
dec
sahf
les
icebp
or
insl
mov
jmp
ret
insb
or
repnz
lret
mov
fwait
iret
push
add
xchg
aas
es
ljmp
or
movsl
fdivrs
cs
daa
sahf
jb
ja
ret
dec
sub
add
mov
cmp
stos
sbb
daa
jp
call
push
mov
push
cli
lods
pop
idivb
stos
repz
testl
sub
jbe
mov
jno
out
mov
push
daa
fiadds
pop
mov
xchg
pop
jle
out
cld
andb
pop
add
and
scas
jecxz
inc
jp
out
cmpsl
test
push
bnd
orb
adc
push
idivl
pop
in
push
jle
fsubs
jns
add
negl
sub
xchg
adc
add
lcall
mov
cli
cmc
pushf
xchg
push
test
cwtl
push
dec
lods
scas
jns
pop
cli
sbb
mov
pop
pop
xchg
and
inc
xor
rolb
jg
add
popa
aas
pop
mov
mov
jb
imul
in
push
stos
aam
xor
nop
adc
repnz
jae
icebp
mov
mov
lods
rcrl
in
imul
scas
cmp
cwtl
and
adc
into
test
cmp
ljmp
pop
addr16
xchg
ja
aaa
sbb
adc
and
sbb
dec
popf
insl
outsl
fwait
xchg
mov
push
ret
adc
fadds
aad
hlt
add
cmp
push
pop
cmp
jecxz
and
loope
arpl
xor
scas
stos
sbb
mov
mov
pushf
mov
test
sub
cmp
xchg
out
xor
stos
jle
stos
lods
jo
inc
mov
cltd
into
sti
lahf
movsb
bound
out
dec
lret
stos
data16
jae
xchg
fdivl
fcoml
pop
outsl
cs
push
ljmp
addl
pusha
jo
mov
lock
daa
push
sti
cwtl
add
sub
cmp
and
inc
and
jnp
cs
daa
aad
int3
js
jp
mov
mov
jae
mov
ljmp
mov
jns
xchg
or
mov
outsl
mov
lcall
loope
lret
mov
dec
add
sub
sbbb
ret
in
shlb
ret
mov
lods
pushf
das
fisttps
cmp
sbb
xor
jnp
test
xchg
push
dec
jl
xchg
cld
push
pop
or
push
xlat
push
loope
xchg
pop
push
mov
iret
xchg
sub
and
mov
mov
push
inc
ss
out
bound
sub
inc
add
aas
push
roll
ficomps
stos
xor
imulb
jge
mov
out
cmp
imul
mov
nop
xchg
and
pop
push
push
sbb
mov
pop
add
outsl
jecxz
data16
std
sbb
loope
pop
rorb
lods
fwait
xchg
adc
pop
rclb
push
pop
cwtl
addr16
cmp
and
int3
and
mov
or
sbb
ficoml
clc
inc
xchg
lods
inc
std
adc
and
jmp
pop
lock
subl
adcb
imul
mov
notl
sbb
xor
add
jns
push
shll
or
ljmp
mov
mov
daa
xor
arpl
jae
xchg
in
jo
lods
xchg
fcomp
sbb
xchg
pushf
add
sub
pop
push
das
add
mov
aad
and
sbb
scas
or
dec
jmp
orb
popf
dec
pop
shll
cmp
dec
xchg
loop
sub
or
fdivl
out
xor
cmp
sbb
repz
int
sbb
fisubrs
mov
sub
pop
aas
ja
and
sub
iret
in
adc
test
add
add
ret
enter
dec
jge
mov
leave
cmp
in
ja
fdivs
sti
vcvtsd2si
push
adc
inc
sbb
push
inc
addb
imull
jge
push
aaa
jmp
add
mov
push
xchg
lcall
pushf
rcrl
mov
push
sub
movsb
dec
mov
aad
sbb
adc
adc
push
cltd
stos
jp
dec
loope
pop
sbb
mov
outsl
ja
popa
test
cmp
cmpsl
dec
icebp
loopne
push
ret
fmuls
into
cltd
orl
lock
clc
adc
cmpsl
loopne,pn
cs
jns
lahf
xchg
mov
mov
sahf
lcall
lock
and
mov
mov
add
fs
loopne
xchg
in
inc
cmpsl
out
aaa
in
es
out
push
mov
cli
orl
or
out
fwait
fwait
loop
sbb
mov
outsb
xchg
mov
sbbb
shlb
shl
and
into
lahf
cmp
imul
stos
cs
dec
hlt
movsl
call
push
push
mov
and
out
cwtl
mov
int3
leave
cmp
sbb
out
pop
add
xchg
aad
cld
test
xchg
pop
xchg
jo
mov
stos
scas
icebp
test
shl
arpl
mov
add
arpl
test
movsb
ret
sbb
jbe
subw
pop
mov
xchg
xor
fs
orb
cmp
das
push
push
out
imul
xor
add
dec
mov
mov
push
push
icebp
cmp
lcall
mov
nop
xchg
and
mov
sub
sub
and
add
data16
push
dec
sub
arpl
lahf
push
push
add
mov
mov
push
add
or
bound
popa
add
into
psrad
shll
and
fistpll
jnp
push
out
push
jno
enter
mov
icebp
xorb
lods
pop
cmp
pop
jno
rcll
lea
lea
movsl
jne
loopne
pop
stos
mov
and
mov
mov
scas
cld
jnp
dec
mov
mov
pop
cmp
adc
fstl
sub
mov
pushf
xor
pop
cli
sarl
fisttpl
jmp
test
and
aam
mov
cmp
lret
pop
jle
and
jo
mov
jl
insl
into
cmpsl
les
pushf
and
mov
mov
and
fldenv
sub
adc
sub
mov
xchg
add
mov
xchg
fdivrl
cmc
sbb
and
mov
leave
inc
mov
stc
fdivrl
and
sbb
dec
adc
ja
xchg
cwtl
sahf
orb
mov
popa
push
popf
sbb
cli
sub
insb
negb
push
addr16
daa
hlt
adc
js
gs
adc
leave
mov
out
mov
or
test
cmpsl
jmp
jae
icebp
inc
lahf
imul
lods
scas
ret
sub
or
mov
add
and
cmp
xchg
inc
and
sub
subl
faddl
push
push
xchg
inc
mov
loop
cmpsb
or
ja
loope
imulb
arpl
pop
lods
inc
das
xchg
movhps
push
sahf
out
rcrl
xchg
adc
lret
cwtl
incb
fwait
stos
lock
clc
xchg
dec
test
cmp
fwait
sbb
sub
sbb
push
stc
bound
mov
rorb
das
loopne
hlt
cwtl
lods
add
cmp
test
loope
push
lahf
loop
test
mov
xchg
cli
mov
sahf
or
sub
cmp
push
jno
out
xchg
cmp
pop
add
in
and
jno
jge
push
pop
mov
scas
das
sub
cmp
orb
leave
mov
xor
push
nop
nop
scas
sbb
gs
xor
fstpl
fnsave
lods
divl
push
mov
cli
test
xor
inc
mov
mov
inc
cmp
dec
pop
in
std
ret
mov
pushf
hlt
into
call
movsb
pop
es
push
outsb
mov
inc
popa
and
add
lret
addr16
sub
ficoml
inc
mov
xchg
aad
test
lret
mov
out
stos
lcall
outsl
dec
into
push
js
leave
jae
adc
mov
pop
mov
sub
loopne
fdivrs
cmp
aaa
movsb
xchg
mov
and
in
push
add
movsb
dec
int3
cmpsb
inc
hlt
sti
out
imull
jnp
stos
int
pop
jg
daa
pop
jl
lock
push
je
mov
sub
pop
dec
add
adcl
and
push
lods
xchg
mov
xlat
movsb
sahf
xchg
in
cld
int
adc
andb
push
xor
push
lcall
and
movsb
lods
xchg
xor
insb
ds
in
ror
sub
xor
cltd
in
push
mov
mov
repz
int
jae
jbe
repz
in
cmc
scas
push
lret
mov
or
imul
popa
mov
sbb
jecxz
dec
cmp
sarb
push
repz
in
jbe
test
and
nop
cs
mov
mov
lods
mov
sbb
arpl
add
jecxz
push
test
or
dec
and
call
cld
ja
call
pop
cmp
push
enter
xor
movsl
in
in
sub
ljmp
adc
mov
jno
stos
jecxz
fmull
mov
inc
sti
neg
jnp
jbe
pop
shll
mov
push
fwait
pop
mov
mov
push
inc
das
xor
popl
fildl
lock
movsb
cmp
pop
ljmp
mov
lahf
add
lods
add
cmp
sbb
cmp
call
loop
outsl
or
push
fisttpll
mov
int
xchg
in
push
jg
push
pop
mov
mov
mov
xor
into
incl
movsb
xlat
sarb
ja
repnz
push
int3
mov
jbe
pop
in
dec
cltd
inc
sub
add
push
fnstcw
out
ja
mov
jno
nop
repz
ljmp
rcrb
or
mov
hlt
dec
lea
lea
in
push
inc
jmp
jb
outsl
fucom
mov
mov
push
iret
fs
insl
jbe
dec
sahf
aam
mov
call
dec
test
daa
push
imul
enter
lahf
sub
cmpsb
sbb
movsl
leave
mov
loope
sbb
push
lea
leave
ds
push
je
int3
repz
mov
jo
inc
adc
inc
xchg
jecxz
aaa
add
sti
jp
xor
outsl
aam
adc
pop
stc
add
cmp
xchg
mov
mov
aam
les
adc
aaa
sub
push
in
mov
loopne
mov
lods
aaa
adc
ret
mov
call
and
xor
ja
insl
test
mov
xor
mov
lcall
add
repz
push
fstl
aas
xchg
leave
inc
call
cmp
imull
xchg
mov
mov
shlb
ljmp
les
nop
and
push
lods
mov
fisttps
mov
xor
mov
sub
jnp
daa
jnp,pt
mov
mov
add
aam
mov
fists
das
daa
std
neg
adc
loope
popa
adc
jl
inc
xlat
mov
jle
inc
and
xchg
or
loopne
test
test
push
push
sub
pop
jno
jnp
sub
pop
lahf
test
xchg
xor
fnstcw
cs
mov
pop
xor
enter
mov
in
lahf
mul
pop
cwtl
jb
fistps
push
and
sbb
lcall
lahf
xor
test
sti
popf
lock
or
sub
cld
mov
push
push
out
repz
pushf
test
aaa
rcrl
dec
das
loopne
mov
jne
or
imul
movsb
insb
test
insb
adc
imulb
mov
xchg
xchg
imul
cmp
das
adc
jmp
inc
jnp
imul
enter
inc
jns
outsb
js
stos
bound
add
sbb
loope
push
dec
jnp
pop
popf
cmp
jle
pusha
push
in
xlat
mov
ja
hlt
pop
cwtl
mov
mov
push
rclb
cs
cmp
mov
pop
jle
popf
cmp
dec
jp
insb
and
lahf
xchg
push
cmp
pop
mov
int
xor
aam
jp
inc
push
cmp
cmc
or
popa
xor
js
xor
stos
xor
and
in
imul
jl
xchg
je
xchg
push
jl
jg
xor
cwtl
pusha
addr16
loopne
sahf
in
pop
or
jnp
inc
movsb
gs
pop
repnz
pop
lcall
mov
sahf
xchg
jmp
inc
or
inc
popf
mov
es
mov
push
outsb
cmc
repnz
divl
std
cmp
inc
lods
pop
aas
sub
xor
jb
lahf
xor
push
mov
in
lock
in
cmp
inc
lret
cmp
shrl
mov
not
cltd
ljmp
and
stos
dec
outsl
test
and
xchg
aaa
dec
test
mov
mov
lods
jnp
call
mov
ficoml
dec
dec
dec
out
inc
push
loopne
push
ret
sbb
stc
movsl
inc
enter
add
push
pop
jbe
sahf
aam
jae
mov
inc
cmp
mov
sbb
das
add
movl
xor
cmc
cwtl
int3
add
adc
inc
jne
in
mov
pop
add
mov
fists
aas
jne
cmc
fucomip
popf
inc
cwtl
xor
mov
addr16
jmp
jns
adc
scas
mov
test
cmp
fstp
les
or
push
in
pushf
xor
bound
inc
sub
xor
jnp
daa
and
xor
loopne
sbb
pop
negb
inc
mov
sbb
pop
das
inc
test
cli
addr16
jmp
mov
inc
xor
aaa
pop
cwtl
inc
sub
and
and
nop
dec
xor
je
jns
dec
sahf
pop
add
or
jns
xor
int3
dec
lock
sbb
xor
cmp
pop
pop
ja
cli
push
es
xchg
mov
xchg
enter
mov
andl
fidivrl
jg
xchg
mov
ja
sub
inc
push
icebp
add
jge
lahf
out
je
ret
movsb
adc
or
sbbl
shrb
sub
fldcw
dec
jge
clc
cwtl
mov
pop
cmc
xchg
add
cmp
addr16
jecxz
loope
clc
out
inc
jg
ljmp
mov
dec
shl
pusha
xor
jae
jns
and
lcall
sti
cwtl
and
sti
iret
and
xor
repz
push
xchg
inc
call
ss
pop
mov
jmp
loopne
push
leave
js
lock
xchg
push
push
es
mov
sub
push
inc
inc
pop
insl
push
sarl
orb
push
aad
stos
cltd
or
push
inc
push
pop
fs
fmulp
nop
neg
ss
dec
invd
push
stos
hlt
in
dec
xchg
xor
dec
inc
js
fsts
fistpll
pop
roll
adc
hlt
sahf
insb
in
xchg
loopne
in
stos
dec
aaa
addr16
xor
xor
push
mov
push
jle
popa
adc
sub
cmp
pop
cmpsl
and
dec
push
pop
imul
adc
aad
negl
jo
ficompl
adc
shll
add
mov
scas
mov
sbb
nop
std
or
pop
imul
stc
adc
sti
push
in
push
repz
ljmp
js
and
mov
leave
mov
adc
shrl
pop
in
cmp
sti
out
xchg
adc
lods
pop
xor
mov
xor
xlat
pop
jmp
cmc
lods
test
pop
dec
js
xlat
add
cmp
and
out
adc
jle
scas
push
add
pop
iret
popa
xchg
fldcw
and
shr
adcb
repnz
xchg
xchg
push
cmp
scas
mov
into
dec
inc
cwtl
xor
fdivrs
mov
icebp
fiaddl
dec
cld
inc
sti
mov
daa
mov
fisubl
jg
mov
enter
inc
je
pop
daa
rclb
xchg
imul
outsl
or
xchg
inc
je
mov
inc
and
inc
es
dec
out
movq
dec
add
or
mov
and
fnstcw
xorl
mov
fdivl
jno
outsl
dec
mov
enter
test
sbb
loop
inc
je
popa
xchg
pop
test
xchg
add
push
mov
jg
mov
mov
mov
jl
pop
sarb
lcall
nop
fildll
mov
mov
sub
mov
enter
aaa
into
ds
push
repnz
lret
mov
and
aad
push
addr16
push
cmpsl
add
jmp
pop
mov
xchg
enter
icebp
mov
loope
mov
pop
push
and
jg
xor
stos
xchg
aad
popf
outsb
data16
cmp
fildll
sub
cwtl
out
cmpb
insl
in
mov
cbtw
mov
dec
add
add
mov
pusha
dec
adc
cmp
fistpll
dec
loope
xor
pushf
and
int3
mov
fwait
pop
push
push
jns
pop
sbb
subb
cmp
inc
test
outsl
and
xchg
lea
lea
loop
test
insb
scas
inc
fidivs
out
pop
sti
inc
stos
sub
mov
or
sub
fsubr
mov
xor
inc
mov
andb
out
xchg
das
mov
jae
mov
cmp
inc
inc
dec
mov
daa
xchg
cmp
pop
sarl
mov
mov
adc
gs
jg
iret
repnz
pop
fs
out
xor
sbb
sub
sub
xor
mov
cltd
sbb
sarb
lods
dec
into
negb
idiv
addr16
ljmp
jbe
orl
fstpl
xchg
adc
sub
sub
and
mov
pop
push
dec
stos
lret
outsb
jl
mov
adc
jae
xchg
xor
lcall
lahf
mov
testl
push
dec
dec
data16
push
push
add
ja
jge
push
xchg
xchg
add
xchg
inc
sub
cmp
gs
mov
jnp
fsubrs
sti
gs
test
push
pop
outsb
mov
bound
ljmp
and
mov
inc
xchg
mov
mov
add
loopne
das
outsl
shll
movsl
xchg
mov
rcrl
jbe
adc
cld
inc
pop
add
jecxz
lea
jo
fldl
mov
and
mov
lods
xchg
std
addr16
pop
fidivrs
xor
add
ja
out
negl
mov
clc
adc
pop
cld
push
fdivp
insl
pop
mov
push
cmc
cmp
fbstp
call
cmp
pushf
bound
addb
jge
inc
repnz
push
mov
and
cmp
pop
subw
hlt
fmulp
xor
test
insl
fistpl
mov
mov
xlat
aam
test
xchg
dec
stos
xchg
xor
sbb
pop
xor
push
jmp
in
lock
pop
jge
out
test
ss
popf
mov
arpl
imul
adcb
xchg
fwait
lock
xor
psubq
jb
lret
dec
pop
sub
fidivl
loop
adc
call
dec
pop
xor
jecxz
xor
pop
adc
add
add
insb
sbb
mov
jmp
testb
push
xor
ret
stos
or
push
mov
cmpsl
cmpsb
lods
mov
jnp
in
pop
sbb
sbb
jbe
mov
push
dec
notb
or
jae
xchg
into
cmpsl
fucomip
dec
push
pop
out
sbb
mov
movsb
mov
sub
xchg
and
call
imulb
cmpsb
inc
jmp
loope
jmp
nop
pop
xor
cmp
mov
jle
das
sbb
movsb
enter
aam
arpl
mov
pop
sub
adc
ret
and
outsb
cmp
cli
cwtl
cmp
mov
jnp
loop
mov
leave
cltd
add
jmp
sbb
aas
mov
in
jns
jae
shlb
xor
jae
or
mov
ret
jmp
movsl
cmp
or
xchg
orl
flds
fisttpll
mov
fsubrp
neg
mov
stos
mov
fnsave
cmp
fs
lcall
inc
cld
dec
ret
mov
push
pop
ja
enter
shrb
std
lcall
fildl
pop
stos
sti
adc
std
xor
mov
cs
jae
push
pop
decl
loope
xchg
cwtl
test
pop
sahf
es
mov
movsl
push
popa
inc
xor
cmpb
mov
std
movsb
and
push
out
xchg
jl
sti
cwtl
addr16
sub
cli
adc
jmp
push
rcrl
lcall
add
out
mov
outsb
inc
cli
lcall
rorl
fs
hlt
add
pushf
sbb
sbb
dec
rolb
dec
adc
xor
fisubl
xor
jb
and
mov
inc
jno
and
cltd
jb
xchg
cmp
lods
jb
xor
roll
cmpsb
and
mov
push
dec
adc
pop
pusha
pop
inc
push
sbb
xor
sbb
cld
in
popa
cmp
mov
fisubs
jmp
push
bound
jnp
mov
inc
hlt
iret
and
jnp
jl
adc
pop
aad
ret
repz
aaa
add
sbb
lret
lea
loopne
rclb
xchg
adc
adc
out
sub
mov
sub
push
and
out
repz
mov
xchg
leave
or
ds
xchg
pop
roll
stc
jb
rcll
je
sub
jg
and
mov
add
mov
xor
movsb
sub
mov
rcrb
stc
mov
and
fildl
jbe
iret
push
mov
nop
push
lcall
mov
lock
les
popa
add
in
pop
hlt
out
push
xor
xchg
test
cmp
pop
xchg
lods
push
sbb
iret
mov
fisubrs
cmpsb
cmp
jno
xor
mov
cld
cmpsb
testl
mov
push
pop
push
push
ja
bound
fmul
in
push
inc
stos
or
loope
adc
jmp
add
push
dec
push
push
and
inc
jg
shlb
pop
ret
adc
shrl
cli
adc
mov
dec
idiv
cmp
and
adcb
mov
jb
imul
sbb
sti
xlat
mov
pop
jne
aam
insb
inc
scas
addb
dec
ljmp
aas
ljmp
icebp
pop
cmpb
out
cli
mov
sbb
rcrb
movsb
leave
bnd
int
aaa
sti
aas
mov
je
in
mov
out
lret
pop
inc
insb
xchg
je
inc
mov
call
subb
out
pop
inc
cmpsb
fcompl
xchg
mov
aas
push
xchg
jne
xor
es
sti
xchg
sub
pop
add
jmp
add
loope
jmp
cmpsb
scas
mov
mov
roll
bound
loopne
in
jl
xor
xchg
adc
mov
dec
test
jbe
fnstsw
movsl
and
lods
fs
lret
rclb
or
mov
sub
bound
daa
mov
adc
imul
mov
loop
jmp
dec
dec
sbb
out
xchg
pop
inc
imul
xor
rolb
xor
and
jl
mov
into
ljmp
mov
stos
aaa
jl
pushf
loop
inc
clc
out
imul
mov
cmpsb
fldenv
dec
ja
add
js
stos
sbb
movsl
xchg
adc
adc
jns
cmp
dec
push
mov
jmp
lret
imul
ja
xchg
cli
mov
push
xchg
loopne
xchg
or
dec
out
stos
inc
rcrb
int3
adc
rclb
sub
dec
jmp
addr16
add
sbb
jmp
cmpsb
mov
je
adc
ds
pop
mov
loopnew
data16
and
push
add
xchg
cmpsl
iret
or
jp
adcb
sbb
aam
lds
aas
lds
xchg
pop
cld
out
iret
inc
sbb
hlt
jno
inc
jno
stos
int3
mov
loop
loop
inc
pop
gs
sbb
in
movsl
or
jle
test
xor
lods
push
xchg
gs
push
jmp
adc
mov
sbb
cmpsl
aam
das
ja
ljmp
jmp
test
arpl
xorl
xchg
shll
mov
adc
fildll
bound
shll
sbb
sbbb
nop
mov
jge
fidivs
push
in
pop
push
xor
stos
inc
mov
sub
cli
or
pusha
or
push
sub
mov
in
jns
int
xchg
cmp
jns
pop
jg
sbb
jb
inc
aas
bound
cmp
xlat
cmp
into
pop
add
push
hlt
std
push
push
ffreep
cld
sub
shr
icebp
mov
je
mov
lds
dec
mov
insb
pusha
push
xlat
rolb
dec
or
mov
cs
and
mov
fstp
inc
test
and
loopne
mov
rcrb
cmp
sti
xchg
xor
aam
or
jne
jge
pop
mov
stos
sub
sbb
push
notl
ja
vmwrite
das
and
js
xorb
lods
ret
into
jle
sub
fldenv
mov
xchg
cmp
imul
sbb
shll
sbb
add
movsl
push
sbb
ds
in
sub
dec
xchg
jp
jb
aad
stos
aaa
daa
or
iret
call
pop
cmp
clc
fnsave
cmpsb
xchg
mov
in
sub
and
jg
cmc
cmp
lods
imul
jo
in
jmp
out
lahf
or
out
mov
xlat
push
xor
jbe
or
fcoml
int3
addr16
clc
popa
push
negl
pop
aad
add
xchg
pushf
and
jg
jmp
ljmp
icebp
fadds
fmuls
mov
out
xlat
xor
mov
enter
cmp
mov
fisubs
add
aaa
sub
push
sbb
sbb
and
xor
pop
push
imul
lret
pop
dec
dec
loope
fcompp
mov
stos
sbb
ret
leave
inc
sbb
mull
jl
pop
lods
sub
mov
pop
aaa
lea
adc
cltd
push
add
mov
loop
scas
repnz
and
cmp
mov
and
mov
es
aam
inc
bound
add
ljmp
adc
popl
mov
mov
push
repnz
mov
loope
lea
int3
stos
stos
lcall
nop
out
dec
outsb
mov
mov
call
xlat
mov
cld
loope
push
jle
test
cmp
fidivl
xchg
and
test
mov
fnsave
xchg
inc
mov
out
lret
mov
das
pmullw
bound
or
jge
xor
shrl
mov
inc
scas
pop
adc
daa
mov
jecxz
nop
sbb
adc
mov
loop
cld
add
bswap
dec
sbb
mov
arpl
sarl
das
sbb
stc
sarl
jbe
inc
hlt
adc
gs
pop
test
mov
xor
lret
ss
pop
ror
out
pop
in
shll
popa
mov
mov
push
fldenv
sti
mov
mov
shlb
jno
jo
lea
and
sub
scas
fldl
sarb
jge
xchg
sti
rorb
in
or
lret
jl
notl
das
lods
inc
mov
enter
cmp
pusha
aad
cmp
add
aaa
movsl
inc
mov
inc
jp
cwtl
xchg
pop
das
hlt
fs
xchg
pop
push
xchg
xchg
cmc
add
addr16
mov
mov
outsl
imul
mov
mov
pop
popa
ret
mov
lcall
jns
mov
aam
mov
xor
inc
lcall
pop
aas
popf
ficomps
jmp
push
push
loopne
cmp
jo
ret
lret
mov
xchg
xor
xor
les
fdivrl
add
shll
cli
leave
iret
add
push
push
add
js
dec
pop
cmpsb
jp
sbb
cli
out
lds
cmp
outsb
into
or
jne
lret
je
jne
popa
rorl
xchg
popa
repz
adc
test
sub
ljmp
call
pop
add
xchg
pop
pop
jbe
xchg
movl
popa
lods
fsubr
dec
and
xor
inc
sub
inc
hlt
mov
pop
dec
jl
cs
dec
dec
imul
pop
push
xchg
push
stos
adc
mov
xor
xchg
fisttpl
sbb
incb
or
icebp
jae
mov
mov
and
mul
add
sahf
mov
push
inc
inc
fimull
orb
shl
push
sbb
inc
adc
stos
adc
dec
ljmp
test
push
aad
xchg
xchg
or
cmp
lret
enter
out
mov
mov
add
stos
xchg
or
les
bound
repnz
cmp
inc
xor
adc
adcl
orb
inc
xor
sbb
out
sub
das
xor
dec
addw
popf
xorl
adc
cmp
push
pop
or
test
test
jmp
xchg
sar
in
ret
dec
repz
dec
in
mov
ficompl
push
xlat
shrl
sbb
dec
es
ljmp
aas
pop
sub
aam
rcrl
cmpsb
add
cwtl
clc
aam
jl
inc
loop
cmp
sub
hlt
xchg
xchg
dec
jl
sbb
test
andb
cmpsb
in
dec
enter
jns
shl
push
pop
jg
sbb
sub
xchg
inc
gs
iret
xchg
cmp
push
jg
xchg
xchg
pop
ljmp
lretw
dec
enter
lcall
cmp
loopne
bound
xchg
es
sti
clc
mov
add
roll
out
int
dec
sbb
and
es
cmp
mov
decb
les
pop
arpl
imul
hlt
jbe
xchg
xor
pop
cmp
ja
test
outsl
jmp
sbb
es
repz
fcoml
cmp
add
cmp
sahf
adc
fistpll
in
cmpsb
mov
push
lcall
sti
je
ret
out
std
push
or
fidivrl
in
sahf
icebp
xlat
add
dec
lcall
into
ja
rclb
xchg
add
and
out
xchg
mov
aad
sub
mov
jns
xor
rclb
in
popf
jecxz
pop
js
xor
jnp
xor
push
je
cwtl
or
std
and
and
stc
push
pop
cli
xor
lea
sbb
int3
mov
and
sbb
and
pop
cs
or
mov
sbb
out
test
dec
add
jecxz
mov
xor
jecxz
call
insb
ja
or
ljmp
mov
jb
cmp
cmpsb
js
add
or
std
xchg
sbb
xchg
pop
adc
ds
leave
testb
into
sub
push
xchg
xchg
lock
jmp
adc
repnz
mov
gs
cmpsl
adc
or
jo
jo
push
loopne
daa
nop
bound
imul
das
jne
jge
pop
movsb
nop
cmp
fsubs
inc
out
inc
mov
rcr
cmp
adc
fistl
rcrl
mov
lret
dec
fsubrs
inc
insl
add
jo
jb
dec
mov
mov
rol
cmc
mov
fidivrl
aam
repz
cmp
in
cmp
mov
dec
jbe
lahf
jns
popf
mov
inc
pop
or
aam
bound
fcmove
mov
popa
cmp
cmc
mov
mov
jns
je
inc
xor
sub
jg
mov
movsb
push
jecxz
insb
push
push
pusha
jb
pop
insl
clc
xlat
sbb
scas
push
jno
ret
xchg
ret
jle
bound
xlat
movb
aad
and
add
pop
lds
xor
stc
cwtl
inc
imul
stos
cltd
daa
scas
pushf
inc
fildl
movsb
inc
nop
pop
shll
xchg
adc
jmp
ficoml
data16
cmc
pop
cmp
test
out
push
add
or
jbe
jnp
sub
repnz
insl
fistpll
fstl
add
daa
rclb
scas
lds
insb
frstor
data16
ja
andb
xlat
mov
fdivrs
sbb
or
enter
xor
xchg
dec
push
xor
out
roll
cmp
ret
stos
negb
lods
movsl
movsl
js
mov
in
adc
rolb
mov
cld
outsb
mov
std
and
andl
xor
pop
bound
int
arpl
mov
sub
xchg
pop
pop
jnp
jge
sub
rorl
mov
cmpl
sarb
insb
adc
in
arpl
pop
or
jl
popf
inc
add
cmpb
scas
outsl
scas
lahf
cs
fisubrs
sbb
lahf
pop
xorl
lds
add
out
push
lock
push
mov
adcl
fnstcw
adc
imul
int3
ljmp
lcall
test
xor
movl
pop
jnp
dec
ret
and
test
test
pop
imulb
xor
dec
add
inc
int
decl
mov
xor
dec
or
sub
lcall
in
xchg
jl
fmulp
fisubrl
mov
adc
inc
jg
ja
jo
mov
jb
xor
loope
pop
popl
loop
pop
adc
mov
add
call
in
cwtl
xchg
mov
mov
cmpsl
test
sub
jecxz
ss
enter
add
add
into
in
cmpsl
roll
pop
rcrb
xchg
sbb
adc
out
adc
dec
sbb
push
popf
mov
xchg
sti
test
les
pusha
cmp
shr
rcrl
dec
ret
iret
and
into
stos
hlt
push
out
mov
movsb
or
cmp
addr16
push
fwait
es
mov
cwtl
cltd
gs
push
push
repz
mov
mov
pop
adc
dec
mov
xchg
imul
lods
sub
cmp
movsb
mov
sbb
mov
rorb
push
cltd
and
xor
mull
xor
adc
inc
lods
add
int
jo
xchg
fadds
enter
les
loopne
and
pop
xchg
sub
add
push
mov
mov
add
fisubs
adc
jle
jg
xchg
popa
leave
xlat
push
mov
loop
arpl
movsb
sub
pop
dec
js
sbb
sahf
sbb
pop
clc
ret
addr16
je
inc
xor
jae
mov
das
aad
mov
ljmp
mov
sbb
xlat
mov
and
rcll
aas
add
shl
rcrl
lods
jne
shrl
xor
pop
push
jl
push
in
rcpps
jp
in
rcl
fidivrs
insb
xor
scas
mov
movsl
fldt
dec
pop
xor
imul
sbb
adc
or
ds
cli
fisubrl
arpl
cmp
push
pusha
insl
lods
popf
ret
dec
ret
pop
xchg
cmp
out
pop
adc
insl
stc
fsubl
ja
out
push
out
stos
jmp
int3
pop
and
fdivs
mov
outsl
jle
test
jnp
fdivrs
push
jne
cs
sub
lret
lods
and
imul
jge
mov
xchg
js
pop
pusha
dec
clc
dec
negb
mov
push
dec
cltd
imul
test
insl
xchg
test
mov
mov
xchg
jg
cld
add
stos
mov
and
out
cmp
dec
out
ret
adc
push
pop
nop
data16
mov
and
in
xchg
jno
mov
dec
or
gs
sub
mov
xchg
rolb
repz
push
jmp
sahf
out
pcmpeqb
pushf
mov
jg
pop
push
xchg
xlat
cmpl
mov
sbb
add
adc
sub
push
dec
ss
andb
cmpsl
sbb
movsb
leave
inc
mov
mov
ss
add
lahf
movsl
cmpsb
add
out
in
pop
xor
lcall
xchg
and
cli
push
xor
xor
repz
outsl
mov
push
movsb
jnp
or
xor
loopne
sti
inc
cwtl
pop
data16
lock
in
loop
mov
sub
lret
testl
add
dec
insl
push
pop
mov
cmpsb
xlat
or
jg
or
jg
fsubl
ljmp
xor
rcrl
lock
lret
mov
or
lahf
cmp
in
dec
mov
hlt
outsb
sub
aam
push
xchg
add
adc
aas
rolb
jle
lcall
lods
or
aam
sti
in
rcl
mov
pop
cmp
adc
mov
jecxz
inc
push
loopne
loop
ficoms
clc
addr16
add
shl
fs
sahf
imul
push
adc
stos
sbb
jae
mov
add
push
adc
sbb
mov
mov
push
pop
iret
das
lret
mov
sbb
xor
mov
sbb
fcompl
sbb
and
pop
testb
rolb
add
pop
jb
mov
lcall
pop
movsb
mov
xor
cmc
clc
or
xchg
or
cmc
js
in
ds
or
xlat
cmpsb
mov
mov
mov
adc
dec
mov
into
inc
sbb
mov
mov
pop
or
adc
push
cmp
and
cwtl
pusha
jno
fldcw
inc
xchg
cwtl
and
cmp
jae
jp
aam
inc
inc
divb
je
fdiv
push
das
out
push
xchg
outsl
and
call
iret
adc
gs
fsts
subl
scas
mov
push
icebp
xor
jbe
jg
cwtl
out
movsb
mov
das
mov
out
dec
xor
cmp
jp
push
jne
xor
fwait
sbb
sub
inc
lcall
jg
mov
ret
lods
ret
xchg
cltd
test
dec
mov
push
sbb
cld
jae
outsb
test
xor
in
repnz
jl
dec
test
pop
jae
daa
mov
pusha
lds
pop
mov
pop
mov
adc
and
add
pop
xchg
cmc
das
dec
sbb
dec
lahf
pop
mov
sub
pusha
or
xor
and
and
jp
scas
lds
jne
mov
pop
cmp
mov
xor
sub
sbb
sbb
xchg
jge
xor
jno
push
stos
push
das
sarl
divb
pop
pop
movsl
and
adc
addr16
and
push
je
insl
dec
mov
or
loopne
dec
in
sub
jo
data16
or
cltd
mov
movsb
inc
lret
pop
adc
jnp
mov
aas
pushf
add
add
jns
push
ljmp
addb
stos
sub
xor
fldenv
loopne
ss
adc
outsb
pop
scas
pop
insb
xor
lds
add
ret
arpl
push
test
daa
jae
jne
sbb
jbe
push
rcrl
sbb
adc
negl
pop
lds
in
loope
int
aaa
lret
push
mov
push
inc
pusha
pop
cmp
cmpsb
testb
dec
push
sti
neg
test
and
les
jl
js
in
or
jg
cmp
cmpsl
loopne
pusha
pop
dec
test
dec
and
ficomps
cltd
pop
cmp
mov
add
xchg
jle
xchg
cmp
fisubrs
jp
scas
inc
outsl
push
xchg
xchg
adc
fwait
pusha
and
out
jae
cwtl
mov
js
ret
cmpsb
sub
int
cmc
mov
sbb
mov
in
js
subb
int3
adc
mov
push
fucomp
fwait
pop
test
ss
push
and
dec
push
movsl
dec
outsl
mov
adc
fidivrs
gs
dec
inc
out
int3
xchg
xor
incb
bound
dec
push
enter
sar
jb
push
xchg
pop
cmpsb
into
add
imul
mov
and
call
clc
test
and
addb
inc
pushf
adc
cmp
adc
dec
jns
inc
mov
stos
jbe
aam
lcall
push
mov
jl
jo
fld
movsl
fcomps
inc
xor
mov
subb
lds
popa
loope
mov
arpl
push
addr16
in
xchg
stos
in
dec
lods
push
aas
popfw
mov
iret
stos
mov
jecxz
push
add
cmp
cmpsb
movsb
ret
das
mov
adc
or
mov
add
jp
dec
rcll
mov
out
xlat
push
cltd
inc
sbb
rcrb
push
jne
cmpsb
pop
jle
cltd
pop
fmulp
sahf
insb
fdivrs
sbb
rcl
cmp
pusha
mov
sbb
not
xor
push
adc
xchg
lcall
inc
and
ds
int3
mov
lock
je
mov
mov
mov
shll
xchg
mov
sub
and
pop
push
pop
dec
or
fildl
pusha
sti
enter
fnstenv
xor
lods
stos
in
sub
dec
flds
loope
mov
lock
out
xor
hlt
inc
repz
out
add
cmc
add
sahf
pop
push
pop
and
pop
push
mov
add
pop
inc
lcall
outsl
pop
leave
pop
aaa
xor
pop
lods
fistpl
push
hlt
adc
mov
or
push
cwtl
stos
cltd
sub
inc
lea
dec
repz
pop
and
mov
mov
test
or
fistpll
mov
push
mov
jae
sbb
pop
mov
cmp
mov
ja
addr16
mov
and
push
mov
cwtl
and
pop
vmwrite
xor
jp
sti
notb
dec
jnp
scas
lods
mov
lock
adc
pop
xor
and
mov
sbb
pop
pop
fcmovnb
mov
lock
jnp
ror
std
dec
imul
xchg
inc
dec
pop
testb
push
pop
jnp
push
dec
cwtl
std
jne
aaa
popa
xor
adc
int3
push
fsts
push
fsts
test
mov
inc
xor
jl
add
or
jb
sarb
jmp
sub
push
add
test
sub
pop
sbb
jle
push
inc
dec
jl
inc
fstpt
mov
pushf
xchg
arpl
or
loopne
icebp
cvtps2pd
inc
mov
xchg
stos
aam
out
inc
hlt
cmp
sub
sub
mov
loopne
add
mov
aaa
add
into
arpl
pop
mov
xor
fwait
add
addr16
and
in
jnp
mov
add
jle
dec
push
ficoml
push
imul
inc
adc
adc
push
int
sub
arpl
xchg
clc
adc
mov
dec
dec
cmpsb
iret
mov
ljmpw
push
repz
rcll
add
mov
sbb
xchg
lds
fwait
inc
sub
mov
sub
mov
pop
sub
int
rclb
aas
jne
cwtl
push
lea
add
lds
mov
popa
imul
xor
sahf
cmc
jbe
sti
cltd
push
nop
mov
pop
out
add
pop
fwait
out
jg
les
pop
inc
ss
or
pop
adc
mov
loope
push
mov
outsl
mov
add
add
lahf
std
out
mov
or
xlat
pop
imul
clc
fistpll
sbbb
mov
out
shrl
jns
jge
or
mov
add
int3
jb
mov
dec
pop
cmp
sbb
or
push
fwait
add
or
cmpsl
mov
adcb
mov
out
ljmp
cld
mov
clc
aaa
cmp
sbb
sub
cmp
ret
bound
les
sti
insl
jne
lcall
mov
pop
xor
mov
push
jnp
and
fwait
gs
cmp
mov
push
and
push
cmp
lret
jb
sti
pop
je
mov
inc
aas
aas
cmpsb
shl
mov
scas
inc
mov
hlt
insl
or
add
mov
in
fs
cmp
pusha
nop
mov
mov
pop
push
sub
cmp
adc
mov
mov
ss
sub
cmp
repz
inc
xchg
icebp
repz
mov
cmp
inc
xchg
add
mov
test
add
push
push
test
mov
and
lcall
cli
inc
ret
cwtl
call
loop
nop
lret
adc
rorb
cmpsb
jmp
hlt
xor
mov
and
mov
or
fsubs
jmp
jb
hlt
push
and
xlat
out
ljmp
sub
not
pop
mov
out
jno
xchg
add
scas
in
mov
lods
popa
pop
cmp
fdivs
push
xchg
stos
sahf
out
subb
fsubr
fimull
push
sub
sbb
adcl
movsl
cmc
add
daa
or
in
testl
pop
pop
push
push
sbb
push
je
push
mov
icebp
filds
push
and
lahf
adc
push
jecxz
cli
das
xor
int
rcll
loop
es
in
add
mov
xlat
xchg
in
mov
call
in
ljmp
jnp
in
jl
test
sub
stos
shll
sti
rcr
add
xor
fcmovu
mov
jo
test
push
loopne
test
cmp
add
xchg
in
mov
dec
dec
cld
dec
negb
mov
xor
out
mov
pusha
and
push
cld
pop
loopne
out
fimull
cmp
add
adc
scas
jno
pop
push
pushf
mov
stos
test
add
add
mov
inc
lret
mov
jnp
adc
mov
sub
mov
dec
mov
ljmp
imul
add
int3
mov
cmp
es
iret
dec
mov
mov
out
mov
xchg
sbb
cltd
shrl
scas
std
scas
imul
enter
sub
fisttpll
inc
xchg
sbb
ret
jo
mov
and
xor
bound
fcoms
inc
clc
mov
push
aaa
jge
mov
je
mov
movsl
in
inc
mov
or
shrb
jno
loope
data16
and
mov
sbb
cli
ds
loop
imulb
and
push
mov
popf
loopne
mov
mov
pop
data16
or
adc
add
or
push
adc
les
sub
jno
mov
adc
cld
icebp
jne
mov
ja
sti
popf
cltd
inc
add
movsl
arpl
insl
imul
or
push
xor
push
out
jecxz
aaa
repnz
mov
popa
dec
dec
and
pop
sahf
dec
outsl
dec
jl
mov
mov
movsb
aad
dec
into
call
add
out
add
inc
rorb
aaa
jmp
push
jne
inc
dec
mov
cmp
sarl
mov
dec
data16
add
lods
int3
push
sbb
jns
movsl
push
js
stc
cmpsb
dec
stos
xor
and
dec
dec
addb
push
add
cmp
hlt
mov
sub
jae
out
das
add
aaa
dec
or
test
adc
fisubrs
mov
jb
inc
outsl
xor
je
test
adc
popa
aaa
pop
ja
push
pop
pop
fmulp
in
bound
mov
mov
push
sbb
adc
sub
into
jl
cmpsl
xor
dec
ja
push
js
adc
add
cwtl
inc
sbb
sub
ret
pop
data16
jno
xchg
jno
ror
inc
movsl
vpextrw
lds
shrl
je
out
imul
test
dec
inc
sub
fs
imul
xchg
mov
inc
sbb
lcall
add
test
fs
lods
test
push
cmp
js
shrl
mov
pop
cwtl
sbb
mov
lret
iret
dec
push
fdivl
mov
xorl
xor
cld
fucomi
int
outsb
fidivrl
imul
jp
adcb
xchg
imull
lea
push
int
xchg
add
inc
xorb
jge
scas
ror
mov
inc
add
push
mov
repz
add
rcrb
fwait
repnz
mov
adc
mov
jo
sahf
push
lret
lret
push
inc
pop
add
into
mull
sbb
insb
xor
bound
pop
cmpsb
sahf
jle
sub
pop
movsb
mov
sbb
dec
mov
jne
mov
lea
sarl
add
or
cmp
scas
sbb
xchg
test
pop
pop
jecxz
push
or
jo
js
jg
fwait
pop
fcmove
repz
stos
out
push
cmp
push
add
mov
lcall
sbbb
out
stos
adc
mov
clc
mov
inc
lahf
dec
in
cmp
sbbl
xchg
xor
hlt
in
dec
push
subps
cmp
mov
into
addr16
jecxz
jmp
daa
movsl
enter
mov
dec
xchg
rorw
out
loope
shll
dec
or
xlat
shrl
adc
ljmp
jns
xchg
ret
jg
subl
push
and
mov
sbb
ja
shr
lahf
outsb
xchg
loope
faddl
jno
cmp
and
mov
xchg
pop
ljmp
icebp
arpl
jns
or
pop
iret
aad
shl
mov
arpl
push
xor
jo
sarl
jecxz,pt
cs
outsl
inc
xchg
jmp
mov
pushf
cmp
cltd
push
aam
sub
out
shl
xchg
das
aaa
push
cmp
inc
xchg
sbbl
mov
pop
add
lods
and
lcall
movsl
mov
xor
test
adc
mov
or
das
or
test
js
mov
and
jge
and
test
imul
xchg
stos
fwait
cwtl
xor
pop
mov
daa
lods
arpl
push
cltd
popa
movsb
inc
aam
rcl
adc
lret
cmp
out
daa
mov
inc
and
shll
pop
mov
adc
push
int3
mov
adc
adc
adc
add
pop
not
nop
test
icebp
mov
jno
dec
push
fadds
mov
lods
inc
inc
dec
add
testb
test
scas
scas
bound
sub
gs
divb
insl
sub
imul
in
movsb
xor
out
dec
adc
lretw
jecxz
rolb
jb
push
xchg
mov
xor
cld
and
sbb
mov
sbb
fisubrl
adc
xlat
sub
insb
test
mov
enter
add
xor
sub
das
mov
je
adc
jmp
sbb
xchg
in
lock
fbstp
cmp
imul
test
cmpsb
scas
dec
push
inc
mov
outsl
repz
sub
in
push
pop
repnz
xchg
mov
icebp
icebp
punpcklbw
aad
adc
cmp
jg
mov
cmp
enter
insb
int3
das
cmp
imul
sahf
xchg
imul
and
jb
adc
aas
bound
cmpsb
mov
fsubl
cmp
push
mov
sarb
pop
ljmp
call
movsl
push
bound
push
stos
sar
dec
outsb
dec
jbe
cmp
dec
les
and
mov
dec
xchg
jecxz
out
sbb
jno
mov
cmp
sbb
ror
ljmp
pop
push
adc
xchg
sub
mov
xchg
aam
outsl
or
push
insl
and
scas
sub
fmull
sbb
cmp
jmp
mov
add
in
push
mov
cmpsl
sub
arpl
cmpsb
and
xchg
xlat
movsl
bound
jb
sbb
loopne
jne
orl
mov
mov
insb
inc
out
movups
push
xlat
mov
and
je
xor
cli
cltd
test
and
or
cli
inc
push
mov
je
mov
dec
inc
xor
or
repnz
jg
mov
cltd
js
rolb
sti
push
push
add
sbb
enter
xchg
sub
outsl
in
fdivs
cmp
mov
jnp
xor
cmp
mov
sub
push
xchg
xchg
mov
xchg
push
sub
notl
jae
test
push
sbb
jge
sbb
iret
cmc
jae
mov
push
fcomps
jmp
jo
jg
ret
push
cmp
mov
cwtl
push
fidivs
pop
and
ret
mov
popa
pop
cld
adc
std
jae
sub
sti
add
cmp
xchg
fiaddl
out
mov
and
insl
jp
or
cltd
lock
xchg
jecxz
push
or
xor
adc
sbb
dec
imul
cmpsb
sbb
dec
mov
xchg
into
xor
in
add
push
inc
movsb
xchg
xor
imul
in
sub
cld
mov
xchg
lds
stos
inc
rcl
call
mov
inc
sbb
jno
or
cmp
movsb
pop
add
or
fmull
sti
loope
loopne
xchg
push
push
xor
mov
in
push
iret
insb
rcll
insl
imul
and
hlt
sahf
inc
pop
xchg
jle
mov
ret
inc
insl
lods
push
jp
lret
adc
lods
movsb
add
dec
adc
mov
cmc
int3
pop
out
push
sbb
cvtps2pi
xchg
mov
arpl
lret
into
mov
xchg
jbe
push
lret
stc
lea
mov
shl
repnz
stos
sub
std
shlw
aas
push
mov
adc
jl
ja
loopne
fstpl
popa
sbb
jo
fsubl
jecxz
ja
sub
pop
icebp
in
jg
push
dec
sbb
shrl
rclb
aad
fadd
ret
outsb
pop
js
push
test
fcompl
or
sbb
mov
test
mov
push
and
leave
fwait
dec
jb
or
adc
mov
add
pop
jmp
repz
jle
popa
mov
loop
add
adc
add
cld
or
rcrl
imul
rep
loope
decb
lods
xchg
or
je
in
test
movsb
cmp
insl
xor
xchg
sti
mov
flds
sbb
xchg
cmc
sarb
int3
aas
sarl
inc
jecxz
push
fsubrl
push
sahf
mov
hlt
repnz
cmp
sbb
push
jbe
idivb
test
dec
into
ret
inc
adc
pop
push
insb
cs
inc
shl
movsb
mov
insl
cld
test
addr16
sbb
popa
adc
pop
insb
xchg
aaa
out
int3
mov
scas
sub
jle
jecxz
call
cmc
jbe
xor
shr
shll
call
ret
cmpb
addb
dec
sbb
cs
test
push
test
cmp
push
pmaddwd
jg
jmp
push
imul
into
repnz
xor
push
nop
ds
push
mov
mov
int
and
pop
xlat
ret
inc
icebp
test
out
push
jecxz
adcl
push
jl
fwait
cmpsl
dec
pop
lcall
sub
and
push
mov
inc
pop
jno
aaa
inc
pop
popa
dec
shrb
scas
or
or
add
push
or
jno
ss
mov
aam
clc
incb
clc
mov
xchg
pop
xor
incl
jecxz
inc
sti
dec
dec
ficoml
or
dec
xor
mov
pop
test
jecxz
mov
inc
xor
ret
in
pop
nop
adc
add
dec
sub
fisubs
jne
mov
cmp
popa
aas
mov
cmpsl
fmul
das
push
cmpb
nop
push
xchg
push
ss
je
mov
divb
in
xor
mov
and
push
ret
roll
lods
scas
mov
adc
fsubr
dec
mov
lret
jecxz
outsb
jne
dec
push
enter
test
adc
inc
or
mov
inc
insb
or
out
in
cmc
xchg
test
mov
adc
sti
scas
stos
imul
addl
push
dec
bound
mov
add
xor
cld
or
adc
xchg
cs
jg
fistpll
dec
xchg
jmp
sub
jnp
adc
andl
mov
mov
aad
cmp
shrb
xchg
cmp
or
shr
out
andl
cwtl
mov
xor
or
and
sub
mov
xor
jecxz
jge
xchg
mov
rcll
mov
lds
ss
pop
add
xor
movsb
mov
xchg
push
daa
ds
add
ror
loope
xor
sub
gs
push
and
cmp
cmc
stc
lds
mov
out
pop
fsubr
rolb
cmp
imul
insb
mov
pop
jno
jmp
sbb
dec
addr16
out
mov
iret
cmp
clc
icebp
jbe
mov
push
outsb
lret
sub
and
mov
imul
and
fcmovnb
lea
lods
sbb
sbb
into
mov
add
sarb
push
mov
push
sub
sub
jge
mov
outsb
or
lcall
fisttpll
pop
and
cwtl
cmp
cmp
idivl
enter
xor
movsl
stos
rcrb
dec
pop
outsb
xchg
bound
in
out
dec
lock
pop
ret
pop
sub
sub
mov
jno
jo
lods
cmpl
cmp
add
or
stos
aaa
lods
adc
call
iret
popa
cmp
je
mov
mov
out
arpl
cmc
fstp
inc
push
and
ret
mov
pop
jecxz
jns
mov
imul
inc
cli
mov
aad
nop
mov
cmp
mov
mov
sub
cmp
adc
cmp
cmc
call
push
jle
mov
fsubrp
jo
dec
xchg
push
and
xchg
ffree
add
inc
inc
in
push
insb
popf
fwait
add
out
in
popf
push
lcall
inc
mov
sbb
loope
imul
mov
cmp
rorb
inc
xor
mov
ficompl
xchg
test
lock
mov
cmp
mov
js
lods
fcmove
pusha
lcall
pop
in
ja
mov
jle
adc
inc
decb
enter
andb
inc
fsubl
mov
add
jbe
push
cmp
outsl
add
push
lea
fidivs
rcll
and
call
dec
cwtl
push
mov
sbb
scas
data16
es
cli
dec
and
cwtl
or
and
addl
in
sub
dec
mov
xchg
cld
daa
xor
sbb
mov
jbe
pop
iret
sbb
or
pop
mov
sub
arpl
mov
mov
pop
xor
repz
sub
lods
test
mov
push
dec
dec
cmp
or
lahf
cmc
mov
push
jbe
push
lods
push
sbb
dec
push
jge
cmp
dec
sti
mov
cmp
cld
pop
sbb
or
push
sbb
das
shrb
pop
mov
out
lds
stos
hlt
inc
cmpsb
lret
fmuls
movsl
outsl
call
inc
add
xor
rcrb
data16
in
pusha
push
xchg
cmpsl
or
sbb
and
cmpsl
into
cld
jae
lock
sub
scas
or
movsl
xor
loope
mov
repnz
or
xor
sub
adc
pop
pop
aam
add
and
test
loop
das
iret
inc
and
lds
push
hlt
mov
push
nop
push
lcall
out
push
add
lret
add
mov
jecxz
cmp
out
xchg
mov
jnp
jne
fistps
pop
mov
stos
test
sbbb
aam
push
adc
lret
icebp
fwait
icebp
or
addr16
scas
dec
mov
cmp
int
mov
cmp
icebp
adc
add
imul
dec
push
movsl
lahf
sub
mov
pushf
lods
repz
xor
test
xchg
shll
sbb
repnz
loop
cwtl
iret
jns
sbb
or
fnstenv
jg
lods
or
fnstsw
leave
mov
iret
fidivl
jbe
xchg
dec
aaa
repnz
inc
andb
sbb
mov
or
xchg
ret
or
jle
adc
pop
sbb
ficomps
shl
mov
inc
enter
loopne
cli
sarb
data16
loopne
imul
pop
mov
ljmp
cmpsb
mov
mov
mov
stos
add
sahf
stos
mov
fisttpl
and
xchg
mov
push
in
or
js
sub
stos
int3
stos
cli
dec
mov
aas
pop
ja
and
mov
sbb
dec
jge
cmp
and
popf
imul
movsl
adc
call
in
imul
je
movsb
and
dec
ret
test
iret
and
cltd
movsl
mov
push
cmpb
imul
icebp
pop
test
stos
or
xchg
add
fnsave
cld
jmp
in
push
pop
add
ds
cmc
data16
pop
add
in
sub
test
pop
imul
xlat
in
dec
jnp
push
xchg
and
sub
das
xchg
lea
jmp
ljmp
mov
enter
test
shll
xchg
imul
lock
mov
jg
aad
mov
add
das
cmp
gs
int3
fstpt
dec
cmp
mov
scas
lods
sbb
nop
sub
js
and
mov
add
ficompl
movsb
loop
sti
sub
jo
mov
loop
lods
xchg
mov
sub
daa
and
sbb
or
in
shll
mov
xchg
cmpsl
mov
popf
push
mov
inc
sbb
push
cli
adc
lahf
inc
fisubrs
push
add
inc
cli
ror
stc
mov
push
mov
or
dec
push
sub
mov
jmp
jge
sbb
xor
mov
sub
push
push
sub
repnz
mov
out
inc
out
add
pusha
icebp
shll
pop
mov
mov
inc
repz
ja
incb
mov
cs
push
mov
add
fstps
test
rorb
and
stc
xor
pop
adc
repnz
js
sbb
aad
inc
repz
int3
jb
pop
or
sbb
int
adc
dec
ret
and
mov
lret
fldt
scas
mov
in
negl
sbb
sbb
shlb
nop
adcb
frstor
jmp
ds
push
hlt
add
insl
lcall
cmpb
fdivl
pop
roll
loopne
and
sub
sub
imul
xor
xor
inc
adc
mov
mov
adc
jbe
pop
adc
lea
adcl
in
inc
insb
test
xor
leave
inc
gs
iret
cmp
sub
aam
xor
je
int3
jo
fisubrs
xor
push
sub
mov
mov
stos
sbb
cmpsb
dec
push
dec
test
lock
or
rcr
xchg
push
push
pushf
pop
je
push
add
ret
sub
mov
push
rcll
daa
push
mov
int
fcomi
lahf
incb
sub
and
shrl
int
repnz
jns
adc
mov
and
mov
cmp
cmp
push
push
jae
cmpsl
clc
push
ss
cmp
movsl
push
std
mov
mov
cmc
inc
mov
add
mov
push
enter
bsf
lcall
jmp
fimull
mov
sbbb
and
push
add
sbb
pop
pushf
int3
adc
mov
dec
into
into
fnstcw
sarb
push
enter
mov
xorl
dec
pushf
test
dec
cli
xchg
test
jo
push
movsb
mov
push
aas
rclb
or
mov
stc
fldl
lret
das
lret
xchg
pop
sti
out
add
add
test
inc
push
sti
aam
int
test
adc
pop
out
ret
pop
dec
sub
mov
repz
mov
int
push
daa
mov
mov
pop
loopne
sub
psrlw
scas
rorb
and
pop
pop
loope
lcall
jge
jns
xchg
mov
xchg
sarl
xor
std
jl
mov
xchg
dec
test
jl
add
dec
pop
out
js
sbb
neg
mov
jo
push
or
jle
jns
ljmp
ljmp
jo
jge
xchg
push
sub
lock
push
dec
inc
cmp
stc
inc
jp
inc
aas
addb
cmp
sub
inc
mov
clc
push
adc
sub
or
pop
pop
push
es
in
in
fisttpl
rclb
jae
outsl
jae
add
popf
jbe
push
mov
jp
inc
out
es
xchg
stos
pop
pop
enter
cs
scas
and
mov
mov
pop
cmc
or
and
ss
cmp
add
das
aam
out
fstpt
mov
mov
pop
popf
sbb
mov
les
xchg
scas
mov
mov
pop
test
cmpsb
xchg
dec
xor
stos
pop
jb
sub
jmp
xorb
and
push
icebp
inc
mov
adc
or
mov
or
in
or
pshufw
imul
mov
sbb
lods
lea
enter
addr16
push
insl
addr16
rcr
jmp
mov
pop
pop
dec
cmc
xchg
scas
pop
sbb
fsubr
add
pop
mov
xor
sub
push
sbb
js
pushf
or
stos
cmp
nop
inc
sbb
push
cmc
in
cmp
rcrb
jp
jo
sti
cmp
push
mov
add
scas
shr
js
ret
push
push
in
cmp
cmpsb
inc
mov
adc
addr16
push
and
xor
cmp
inc
repz
jns
cmp
mov
das
inc
sub
mov
add
mov
sti
and
or
add
mov
adc
and
orl
out
das
push
xor
inc
cmp
fs
scas
or
adc
imul
repnz
clc
stc
fwait
scas
test
lahf
not
jb
dec
mov
test
das
enter
inc
sbb
outsl
mov
pop
dec
xor
cwtl
jmp
and
mov
or
mov
out
xchg
dec
mov
out
mov
sub
sub
xchg
jo
jecxz
inc
or
scas
sahf
ret
sub
fdivr
push
mov
clts
test
aas
jg
sub
lret
or
pop
mov
int
adc
ret
push
push
push
adc
dec
imul
nop
mov
rolb
out
int3
adc
cmpb
jno
xchg
jbe
sbb
push
xor
sbb
jb
ds
js
pop
mov
out
addr16
outsb
and
mov
popf
sub
dec
adc
into
je
cmp
int3
imul
mov
or
lahf
mov
scas
stos
popf
push
sub
std
push
push
sub
out
sbb
stos
in
mov
stc
das
or
out
sub
xchg
cmp
mov
cli
and
ret
imul
cmp
sbb
les
loopne
test
in
aam
xchg
push
shlb
fcmovnbe
mov
push
sub
cmpsb
test
sti
std
fnsave
cmpsb
dec
add
test
imul
xchg
mov
xchg
test
test
in
repnz
sti
sbb
dec
xchg
imul
shr
sbb
and
push
ljmp
and
ds
enter
iret
outsl
jb
aas
test
jmp
sub
aaa
push
in
inc
movsb
lret
pop
mov
sub
ficompl
insl
les
test
outsb
mov
dec
fwait
pop
pop
sarb
lret
xchg
inc
imull
and
movsl
ja
adc
movsl
sub
rcrb
push
rcl
mov
dec
lea
jmp
js
lahf
xchg
inc
xchg
stc
and
sub
xor
frstor
xchg
dec
dec
xlat
pusha
sbb
shrl
stos
adc
sbb
and
or
fstpt
repz
lahf
push
icebp
mov
ds
repnz
cs
mov
dec
dec
mov
cld
inc
xchg
cltd
in
fcomip
jbe
dec
hlt
mov
and
add
in
adc
add
addr16
ficoms
xor
mov
test
pop
scas
xchg
hlt
in
das
lret
pop
jg
aad
pop
jecxz
repnz
lret
fnstsw
pop
add
iret
in
mov
lcall
ljmp
arpl
dec
jne
sbb
insl
test
dec
cmp
cmc
xor
adc
mov
repz
loopne
mov
in
leave
das
jnp
sbb
lret
cmc
cmpsl
out
pop
loop
aaa
sub
pop
cmp
mov
pushf
scas
push
mov
push
insb
loopne
and
pop
mov
gs
and
xor
or
ret
mov
jecxz
imul
dec
movsb
add
mov
es
and
pop
pop
sti
add
pushf
xlat
dec
xchg
call
or
adc
mov
cs
outsb
jg
mov
push
pop
shrl
jp
lcall
aaa
dec
int
push
ja
sbb
outsb
or
fcmovnu
mov
mov
arpl
mov
push
cmp
out
xor
sub
hlt
mull
xchg
icebp
addr16
jae
mov
dec
xor
cltd
and
jp
cltd
adc
ret
sub
aam
push
enter
mov
push
cmp
dec
lahf
lea
dec
ficomps
adc
push
push
jo
out
push
mov
sbb
add
mov
ret
mov
mov
ja
mov
mov
jo
cmp
mov
add
aaa
mov
scas
adc
ja
mov
out
andl
sbb
lahf
xor
dec
sbb
lds
js
mov
lock
aaa
les
jns
xchg
out
faddl
mov
stos
mov
lret
clc
sub
pop
jb
cmp
faddl
movsl
push
jl
nop
jb
pushf
mov
add
xorb
rclb
add
sub
icebp
jle
xchg
push
xor
pop
int
cwtl
cmp
xchg
adc
mov
xchg
ss
out
pop
std
xor
test
fisttps
inc
dec
pop
sub
fldt
icebp
outsb
int3
adc
pushf
movsl
jnp
mov
adc
adc
or
hlt
out
maskmovq
imull
cmp
xor
lret
add
adc
push
out
aaa
jns
push
sbb
daa
cld
ljmp
das
jno
out
jl
lods
mov
fstpt
mov
lret
enter
pop
pop
rcll
or
stos
mov
orl
jl
mov
out
repz
add
cmc
cmpsb
out
andl
cld
stc
mov
andb
sbb
sub
push
scas
movsb
lret
dec
movsb
xchg
mov
arpl
outsb
sbb
adc
frstor
cmc
mov
push
stos
call
xor
movsl
adc
mov
arpl
ljmp
add
into
arpl
sbb
xchg
stc
int
mov
cmp
repz
xorl
push
stos
sub
add
inc
pop
sub
push
movsb
insl
outsb
mov
std
rolb
push
lret
popf
mov
mov
push
sbbb
mov
cld
cmp
push
ret
mov
clc
add
movsl
aam
jge
add
nop
and
ficoms
inc
insl
int3
mov
clc
push
mov
sbb
cwtl
or
dec
adc
xchg
push
pop
mov
cmpsl
test
loope
and
adc
mov
dec
inc
in
push
test
lods
insl
xchg
cwtl
adc
jmp
std
in
clc
ss
cmp
fstps
jb
loop
jg
jmp
ljmp
ljmp
test
sbb
jmp
loope
mov
inc
out
aam
mov
test
dec
sbb
mov
or
xchg
subb
rol
cmpsl
xor
xlat
enter
pop
dec
call
cmp
pop
es
push
stos
push
mov
out
clc
mov
ret
daa
fdiv
pop
mov
ret
pop
xchg
and
jns
std
mov
mov
pop
dec
insl
cmp
notl
ret
sub
dec
mov
imul
pop
outsb
jl
inc
sbb
fcomps
mov
aas
ror
mov
outsb
mov
push
inc
or
and
and
in
ret
mov
fsubrl
jne
adc
inc
inc
pop
ljmp
or
dec
into
adc
xchg
hlt
jmp
sbb
cmp
test
and
mov
dec
fadds
pop
mov
test
mov
out
sub
cmp
shrl
lods
ficomps
push
dec
stc
and
mov
lret
pop
fldl
fwait
lret
add
clc
sub
mov
lods
pop
jle
jg
pop
movsl
addr16
mov
jns
xchg
pushf
daa
je
add
or
jns
lods
xor
sti
fmuls
loopne
push
shrl
adc
push
mov
pop
nop
cs
mov
aad
cwtl
mov
xchg
sbb
cmpsl
paddb
pop
test
in
sbb
pop
mov
and
shrl
das
mov
iret
cli
pop
out
add
xor
rcl
adc
xchg
scas
xchg
cmpsb
inc
push
dec
js
cmpsb
sahf
stos
movsb
add
dec
sbb
mov
xchg
ds
inc
gs
test
push
inc
enter
ds
leave
pop
jno
cmp
adc
sbb
mov
addr16
jo
xchg
cwtl
test
pushf
and
push
out
xchg
add
iret
xchg
lds
shlb
push
xor
sbb
seta
mov
and
pusha
insb
stc
test
iret
pop
pushf
into
daa
daa
mov
push
pushf
sbb
add
mov
push
movsb
mov
adc
push
aad
jl
mov
decb
popf
nop
enter
sub
lods
mov
mov
fnsave
into
sbb
ja
ljmp
push
jae
cltd
insb
inc
inc
or
ljmp
jns
nop
or
mov
xor
pusha
sub
out
call
aas
test
jmp
arpl
mov
pusha
frstor
jle
ljmp
insb
xchg
icebp
imul
scas
cmp
insb
fimuls
idivb
sub
outsb
lcall
cmpsl
mov
sub
sub
lret
stc
pop
sbb
std
icebp
test
push
pushf
call
pop
push
cmp
cli
sti
sbb
dec
int
xchg
xchg
and
and
rolb
xchg
jb
fstpt
xchg
dec
mov
out
popf
pushf
cmpsl
insl
mov
mov
push
mov
icebp
push
nop
add
mov
ljmp
in
xlat
mov
dec
mov
loop
cmc
int
pushl
ds
aam
jecxz
xchg
or
push
insl
imul
arpl
xchg
std
dec
dec
push
outsb
insl
imul
cwtl
inc
push
add
les
jecxz
or
add
rcrb
stc
in
pop
aaa
cmp
subl
pop
push
inc
or
in
inc
lods
xlat
pop
pushf
mov
aam
pop
mov
or
cwtl
and
dec
test
cltd
iret
popf
test
adc
mov
mov
jbe
pop
mov
xchg
ret
je
ret
and
mov
or
dec
sti
pop
mov
test
mov
cmp
xor
add
push
pop
adc
xchg
shll
jmp
push
xor
stc
stc
fs
pop
jns
lds
jp
pusha
push
sti
push
sarb
xchg
xor
mov
push
sbb
push
ja
out
idivb
mov
jge
xchg
fisttps
cmp
imul
fidivs
mov
movsb
sbb
test
outsb
js
loope
pop
xchg
add
mov
cmp
iret
dec
inc
sub
lret
inc
push
ds
push
push
icebp
xchg
jbe
or
add
fwait
imul
fdivl
ret
inc
inc
sub
aas
or
in
movsl
cmpsb
add
outsl
xchg
jbe
daa
lds
pop
pop
push
mov
andb
or
cmp
ja
pop
mov
xlat
cmp
sbb
gs
mov
add
out
js
jecxz
int3
addr16
arpl
test
fstpl
inc
adc
pop
adc
pop
scas
cwtl
sbb
in
rorb
aas
push
sbb
mov
lea
push
cs
fdivs
test
sub
mov
xchg
add
arpl
lea
dec
mov
out
dec
in
pop
std
xor
lock
cmp
cli
mov
pop
fnstcw
fcmovnb
dec
test
imul
aam
addb
xchg
inc
inc
or
xchg
shrl
jno
pop
arpl
fmull
xchg
sbb
stc
cmpsb
add
mov
pop
mov
sti
add
mov
dec
or
rorl
dec
repnz
pop
mov
repz
pop
xor
lea
int3
xor
cmp
push
lret
mov
ds
dec
outsb
ja
inc
stos
mov
fstl
addl
or
inc
divb
adc
leave
shlb
rorl
stos
ret
aam
fsubl
pop
inc
dec
stc
cli
mov
add
pusha
jo
inc
scas
fmuls
gs
aas
sbb
test
out
fnstsw
inc
mov
cmpl
cmc
in
mov
sub
xor
test
loop
inc
scas
sarl
dec
popf
js
cli
das
pop
jne
or
xor
sti
lock
in
repnz
jne
cmpsb
and
sbbb
test
imull
inc
aas
mulb
aaa
xor
pop
pushf
jnp
mov
div
mov
mov
ret
ss
in
push
je
or
mov
jno
andb
sbb
jo
add
mov
faddl
fildll
mov
push
fidivs
scas
mov
mov
pop
push
sub
push
mov
sbb
pop
or
and
adc
insl
arpl
or
mov
sub
in
xlat
les
repz
in
lret
xor
sar
test
push
std
and
pop
mov
imull
movsl
hlt
or
xchg
sbb
addb
add
sub
fwait
into
pop
and
test
mov
cmp
bound
inc
add
fldenv
inc
imul
outsl
push
push
addr16
out
mov
inc
jg
push
xchg
sbb
out
inc
mov
not
into
sbb
fstps
leave
fildl
sub
xor
push
xlat
shll
mov
jbe
jae
xor
pop
mov
pop
mov
dec
push
stos
dec
lods
push
loopne
out
push
fmull
cmp
mov
xor
sbb
pop
leave
hlt
jecxz
mov
push
push
push
sub
outsl
sahf
aad
ss
push
jle
xor
pop
jae
hlt
xchg
mov
nop
ret
inc
sarl
sbb
bound
scas
add
test
shrb
movsl
mov
mov
loope
sub
aaa
mov
loop
xchg
aas
push
pop
adc
ror
icebp
fbstp
stc
sbb
fstpl
je
arpl
inc
xchg
pusha
call
jg
adc
daa
push
loope
loope
and
cmc
aad
into
or
sub
ss
loop
or
into
cltd
inc
xchg
loope
lods
js
adc
jp
xor
mov
sti
add
fldenv
stos
movsl
lret
inc
int3
sbbl
mov
int3
fistpll
ljmp
call
push
mov
pusha
popf
lods
iret
jmp
pusha
leave
ret
inc
mov
jnp
adc
cld
sbb
pop
iret
jb
pushf
push
sahf
repnz
add
icebp
xchg
dec
rolb
ret
lods
pusha
into
cmp
or
repnz
pusha
mov
ds
xor
pop
out
xchg
cmc
out
xchg
rcl
stc
inc
aam
insl
rcrb
cmp
enter
daa
sbb
cmpb
mov
ljmp
mov
or
push
sub
jp
cmc
mov
mov
add
outsb
mov
xchg
in
imul
fbld
dec
mov
test
js
stc
adc
hlt
or
or
cmp
out
dec
xchg
aas
icebp
mov
inc
sub
push
dec
mov
jge
cltd
cli
push
outsb
jns
inc
mov
lea
push
addr16
jl
out
sub
xchg
int3
add
ret
jo
cltd
xor
hlt
cmpsb
stos
inc
stc
push
jb
pop
xchg
or
arpl
roll
or
repnz
int3
xor
mov
dec
pop
mov
in
dec
mov
adc
mov
hlt
pop
jle
fildl
scas
xchg
ljmp
repnz
mov
jns
loope
mov
dec
aaa
pop
xchg
scas
dec
dec
push
test
xchg
pop
out
les
push
mov
cmp
sbb
testb
cmp
fcompl
mov
out
mov
nop
dec
xor
aam
xor
xchg
addr16
sbb
xchg
inc
icebp
mov
or
outsb
push
into
dec
sub
stos
mov
jmp
addb
xchg
xchg
rclb
jl
mov
mov
xchg
push
and
pop
xchg
lcall
or
add
mov
daa
jo
pusha
xor
cmpl
sbb
adc
jne
xor
mov
lds
sahf
jae
jbe
mov
dec
ja
int3
pop
jmp
fstpt
push
popa
and
movsb
std
orl
jno
test
xor
cmp
popf
movsl
leave
add
mov
aam
xor
clc
push
les
and
repnz
stos
movsl
mov
push
jno
pop
aaa
sbb
mov
mov
jmp
sbb
cmp
jle
fwait
cltd
clc
sub
test
xor
dec
mov
ljmp
and
pop
jns
pop
and
xor
mov
ret
dec
es
jmp
jl
inc
xchg
push
mov
sbb
stc
je
jnp
loop
add
xor
push
adc
cmc
mov
pop
mov
mov
sbb
add
inc
arpl
push
scas
ret
mov
outsb
fidivrs
inc
subb
dec
in
cld
andl
das
test
lods
sbb
sbb
pop
xchg
mov
sbb
push
pushf
gs
in
pop
cmp
jmp
les
add
jp
mov
cmp
xchg
negl
pop
mov
in
add
jo
push
fwait
jnp
jmp
test
cld
mov
data16
lods
mov
cli
inc
add
into
das
cmpsl
push
xor
mov
xchg
nop
inc
repnz
mov
mov
test
stc
and
mov
jge
int
repz
mov
xor
mov
arpl
jp
or
or
in
scas
pop
pop
enter
cmpsl
mov
inc
gs
sbb
pop
xchg
dec
push
mov
outsl
pop
pop
xor
xor
pop
mov
je
outsb
cmp
jbe
addl
div
adc
loope
xor
loopne
mov
inc
cmp
iret
xchg
fnsave
cld
xchg
dec
popf
xchg
sub
mov
add
push
sub
pop
repnz
xor
lahf
push
data16
push
cwtl
adc
and
sarl
scas
xchg
or
mov
pop
jl
mov
jmp
out
cmpsl
fdivp
jne
and
daa
vpshufd
mov
sub
xor
jbe
xchg
popf
pop
push
out
add
xchg
fninit
int3
lahf
roll
ljmp
mov
sbb
xchg
into
mov
mov
test
test
in
or
lret
outsb
jo
inc
arpl
call
stos
jl
cli
ficoms
push
das
jbe
push
stos
or
pop
sbb
lret
mov
dec
pop
mov
adc
jno
icebp
loopne
lret
jnp
push
add
jae
add
xchg
lret
jmp
sarb
push
add
inc
mov
mov
loop
jns
adc
or
in
inc
mov
or
xchg
outsb
fs
pop
fidivl
xchg
push
dec
sbb
popa
rcl
xchg
cmp
pop
pop
xlat
roll
mov
jmp
adc
lods
sub
push
sub
repz
shll
xchg
fwait
repnz
add
fsubr
sbb
test
mov
das
jmp
data16
sbb
rol
pop
ss
jno
adcb
outsl
insb
rclb
jmp
popa
shlb
mov
or
push
stos
aad
mov
leave
push
mov
push
xchg
in
xchg
aas
and
or
arpl
sub
xchg
xchg
insl
shlb
call
cltd
and
fstps
je
mov
inc
inc
adc
test
mov
or
in
imul
mov
test
mov
lcall
dec
sti
cmpsl
andl
add
stos
addr16
lcall
and
cmp
mov
ss
and
jo
repz
adc
and
sbb
inc
mov
push
push
push
rorb
pop
rcrl
add
mov
pop
add
leave
cli
test
inc
xchg
jecxz
pop
sbb
lods
mov
mov
pop
jl
insb
out
ds
jb
cmp
xor
ljmp
in
jge
popa
mov
and
push
adc
iret
js
into
xchg
es
insl
mov
xchg
in
aaa
or
xchg
out
aas
jecxz
mov
movsb
cli
inc
xchg
cmpsl
orl
test
jnp
outsb
xchg
fstps
sub
and
das
mov
pop
pop
fstpl
enter
enter
cwtl
daa
dec
pop
mov
inc
xchg
int3
jno
xchg
dec
loop
mov
xchg
cmp
sbb
stos
xchg
xchg
rolb
dec
and
stc
pop
sbbl
xor
push
cmp
mov
add
mov
sub
mov
pop
rcrb
lods
add
cmp
cmpsl
je
fisubs
into
mov
cmp
jne
adc
push
aad
sbb
jnp
test
into
stos
cli
jle
or
push
xchg
divb
or
xorl
lret
ret
std
test
imul
negb
push
xlat
push
xchg
mov
in
ret
cmpsb
mov
mov
mov
mov
scas
mov
shll
sbb
cmp
mov
jne
mov
aaa
xor
fsubs
dec
adc
ret
cmp
jae
inc
cmpsl
js
daa
dec
mov
sub
fisubrl
xchg
js
roll
add
xor
sti
jl
mov
data16
mov
inc
cli
or
movsl
mov
push
aam
xchg
iret
push
cmp
fmull
xchg
repz
or
scas
jecxz
or
cmp
jmp
nop
sbb
mov
loop
bound
mov
or
push
mov
data16
xor
lcall
adc
stos
cli
xor
xchg
jmp
mov
cld
and
fsubrs
push
push
lret
rcrw
dec
cli
cwtl
rclb
sbb
jb
fsubrl
mov
pop
iret
dec
lret
or
dec
dec
shlb
sarl
loope
pop
in
pop
lret
pop
add
das
xchg
jmp
out
xor
jmp
nop
sub
sbb
sub
cmp
jns
cld
inc
or
adc
dec
scas
mov
repz
sub
pxor
sbb
pop
imulb
adc
mov
xchg
mov
fiadds
sub
shlb
or
clc
scas
cmp
add
xor
pop
in
fwait
enter
and
mov
add
push
inc
sahf
sub
mov
call
mov
mov
sub
sub
dec
shlb
movsl
inc
adc
imul
inc
push
xchg
sub
jge
and
sub
push
loopne
sbb
ret
and
ljmp
sbb
pop
aas
mov
lahf
shlb
dec
stos
cmpsl
imul
jge
and
mov
pop
jge
add
jb
or
ss
pop
push
mov
daa
mov
ja
fyl2xp1
push
push
cs
ret
pop
adc
out
cld
pop
jle
cmpsl
xor
gs
fisttpl
xchg
jb
lds
sahf
call
mov
or
repz
jb
xor
and
sti
inc
iret
call
mov
ret
add
mov
test
sbb
inc
sbb
movsb
test
hlt
idivb
lcall
das
ret
imul
pop
push
out
add
or
out
test
lods
jns
jle
stc
loop
and
iret
cwtl
orb
loop
rorl
inc
lods
cmp
jbe
mov
ljmp
add
sub
outsl
leave
jnp
and
movsb
lods
cwtl
cmp
adc
pop
sbb
imul
loop
stos
xchg
lock
push
test
and
lret
xchg
fldenv
jmp
add
xchg
cwtl
outsl
and
dec
jo
jmp
pop
xor
fildll
in
jle
in
and
mov
loope
xchg
mul
xor
bnd
imulb
xchg
push
adc
push
mov
jbe
dec
scas
in
mov
hlt
fistl
pop
sti
lcall
xor
xlat
sbb
or
cmc
push
mov
pop
push
mov
movsl
adc
jg
lcall
scas
jne,pn
in
scas
lds
mov
in
and
dec
mov
inc
add
mov
lahf
dec
and
mov
inc
into
ja
loopne
jns
inc
inc
in
sbb
add
scas
jns
aad
inc
cs
sub
adc
cmp
jae
cld
adc
ljmp
xor
add
inc
sub
push
dec
test
in
push
fxch
rcrb
dec
dec
lahf
cmpsb
mov
xor
xor
pop
call
mov
push
stos
push
in
aam
push
mov
ret
aad
dec
sbb
or
cmpsb
mov
push
das
cmpsb
push
push
pop
mov
mov
mov
popa
and
leave
add
pop
jne
movsl
in
mov
and
mov
aaa
fs
les
loopne
enter
and
push
ss
rclb
inc
adc
into
ds
mov
test
loop
int
bound
es
dec
push
imul
dec
push
mov
filds
inc
lods
inc
xchg
inc
sub
cmp
push
rcrb
sbb
bound
loope
mov
pop
cmp
dec
pop
push
push
inc
cmp
mov
cmc
cwtl
jg
jge
in
push
jle
mov
rcll
jo
popa
push
enter
jbe
lods
insl
mov
jl
cmc
sbb
jns
mov
fsts
iret
xchg
fnstsw
movsl
adc
jns
out
in
shl
inc
pop
xchg
subl
ds
mov
shll
in
and
pop
repz
adc
push
dec
push
add
or
mov
push
mov
mov
and
movsb
cmovp
test
int3
mov
sbb
mov
dec
mov
mov
pop
mov
inc
js
mov
aad
cltd
or
xchg
loope
nop
repnz
sbb
shlb
mov
cmc
cmp
movsl
xchg
mov
xor
lret
add
xor
mov
push
loopne
xchg
cmp
adc
in
adc
movsb
std
in
xchg
xlat
or
fldt
jmp
or
xor
push
pop
inc
push
das
cltd
jge
std
arpl
add
daa
fs
mov
sahf
ficompl
mov
xchg
ret
data16
xor
aas
sbb
sahf
aad
cmp
std
adc
mov
and
push
ret
call
insb
mov
xlat
cmp
push
insb
dec
and
test
mov
imul
fcmovne
pop
mov
add
repnz
sbb
pushf
push
inc
test
lahf
or
je
jg
das
cmpsl
movsb
add
mov
insl
imul
xchg
sub
insl
push
dec
cli
shll
fistps
lods
aaa
lods
adc
je
dec
data16
stos
pushf
mov
add
mov
mov
in
fcoms
ss
adc
imul
jno
in
outsb
xor
inc
mov
mov
cltd
gs
mov
ss
scas
xor
mov
mov
rorl
inc
mov
addr16
jmp
roll
cld
adc
adc
push
push
pop
cld
xchg
jnp
push
ss
loopne
mov
mov
rol
jbe
inc
lret
cli
lea
jg
mov
sbb
sbb
cmp
popf
cmp
pop
scas
les
push
jle
pop
cmp
mov
movsb
and
psubb
cmp
and
jo
cli
mov
mov
xlat
push
stc
popa
inc
xor
dec
sub
cmp
cs
ret
jge
aaa
lret
fiaddl
push
pop
xchg
dec
idivb
mov
push
cs
out
repz
adc
scas
xor
xchg
xor
mov
inc
sarl
out
cmp
xor
cmc
mov
lods
movsl
adc
int
lret
pop
and
mov
jmp
or
mov
push
sub
sahf
lcall
pop
jmp
stos
pop
and
call
push
fildl
frstor
cmp
push
pop
pop
jnp
dec
jno
pop
cltd
sti
mov
call
shll
adc
adc
loope
std
std
bswap
xchg
cwtl
jno
mov
mov
rcll
aas
lds
mov
push
xchg
addr16
pop
pushf
fistpl
popa
sbb
fldl
inc
inc
loopne
lock
shll
inc
out
inc
rorl
lods
stc
push
stos
rcrb
divl
jmp
jecxz
push
or
dec
or
jae
sub
lret
test
bound
adc
scas
jnp
jg
mov
xchg
mov
mov
imul
xchg
fistps
jb
mov
arpl
xchg
lret
orb
scas
and
mov
add
cmp
pop
add
hlt
xchg
jp
mov
xchg
sbb
jo
xchg
fstpl
xor
pop
jp
std
ljmp
sbb
xor
dec
lret
shll
mov
jae
fwait
dec
adc
into
or
ds
cltd
and
test
push
outsl
and
pop
scas
fstl
push
inc
lret
hlt
or
test
dec
insb
fwait
lahf
cltd
jp
fiadds
or
sbb
cmpsb
pop
loopne
outsl
xchg
shlb
and
bound
lahf
repz
fdivr
push
push
mov
add
and
pop
add
aam
or
jecxz
or
sbb
xchg
jb
push
cwtl
xor
stc
out
cmpsb
aas
les
movups
jbe
outsl
sti
loope
lds
xchg
add
pushf
js
push
movsl
dec
sbb
pusha
scas
fdivs
dec
dec
jge
mov
mov
arpl
shll
aad
fsubrs
dec
adc
dec
imul
xor
mov
adc
sub
adc
fnstsw
mov
sub
ds
adc
push
jmp
mov
xor
lods
add
inc
adc
test
sbb
add
or
cmp
inc
cwtl
aad
int
adc
push
add
in
loop
jo
sti
dec
leave
rclb
test
rol
faddl
cmp
scas
aas
pop
and
xchg
inc
mov
inc
shrb
fidivrs
fistpl
ret
pop
jg
sub
jmp
cmc
stc
sbb
xchg
aaa
dec
inc
std
mov
adc
imul
xor
push
call
popa
mov
pusha
adc
lock
mov
fdiv
adc
push
inc
push
lret
mov
xor
push
loope
mov
push
add
and
outsb
stos
int
sub
stc
push
sbb
push
jmp
adc
loope
mov
addr16
or
lret
and
ret
xchg
cltd
jae
repnz
xchg
jns
dec
add
or
movsb
cmp
es
das
call
xor
addr16
adc
addb
jg
inc
mov
jbe
jle
lahf
jno
insb
inc
out
mov
stc
xorps
mov
arpl
jne
mov
lret
and
xor
sbb
lret
cs
scas
dec
inc
jp
mov
lcall
mov
pop
or
mov
call
stos
imul
add
rcll
iret
and
pop
sbb
fstps
lret
and
scas
adc
mov
loope
data16
rcrl
mov
cs
sub
das
push
ret
jmp
xchg
push
lock
xor
or
mov
fidivrl
cmc
shr
out
insl
int3
into
xchg
stos
orl
xchg
mov
dec
mov
outsb
daa
iret
and
in
jb
arpl
inc
jge
push
arpl
imul
repnz
sub
and
jb
add
push
sub
mov
cmp
mov
movsb
enter
xchg
mov
loopne
fwait
stos
jno
test
jno
xchg
repz
popf
mov
aas
adc
movsb
mov
or
orb
push
mov
fisubrs
stc
sub
lcall
cli
jnp
test
ljmp
int3
mov
push
in
jne
mov
lret
pop
jns
stos
ljmp
call
pop
outsl
or
dec
cltd
mov
fldl
or
and
outsl
mov
lock
xlat
add
nop
adc
lds
push
js
add
cmp
outsl
andl
std
mov
cli
sbbb
imul
in
dec
pop
adc
imul
les
sbb
adc
pop
bound
jmp
popa
cld
sub
mov
jp
mov
dec
cltd
push
or
dec
mov
pop
ret
dec
xchg
out
adc
pop
mov
xor
mov
ret
jne
mov
add
xchg
xchg
push
or
nop
repz
addr16
aas
mov
ja
xor
cmp
in
leave
adc
lcall
andb
xchg
sub
fdivl
aam
scas
dec
fldl
mov
mov
pop
cmp
xchg
xchg
adc
add
subb
dec
test
xchg
xor
fpatan
movsl
es
or
fwait
and
loop
lret
push
or
and
jge
jbe
dec
fistl
sbb
mov
lret
dec
fistps
dec
sub
jae
clc
das
loop
push
into
inc
mov
add
mov
push
push
leave
jae
mov
leave
dec
vpslld
out
or
subl
ret
pop
dec
dec
xchg
js
jle
mov
lret
pop
je
cmp
popf
repnz
mov
sbb
adc
and
jns
xchg
inc
jl
lahf
push
into
inc
fidivrs
data16
cmp
test
sahf
mov
or
dec
out
rorl
gs
mov
push
xchg
into
xlat
xlat
cmc
dec
and
cli
and
addr16
add
cmpb
lds
or
pop
adc
fstpl
add
adc
test
hlt
arpl
add
lea
ss
mov
dec
loopne
pop
cmpsl
jecxz
add
ja
or
or
lods
push
shrb
push
lds
mov
idivl
dec
adcl
gs
cs
std
inc
popl
cld
nop
or
dec
xchg
add
pop
inc
jecxz
sbb
sahf
imul
push
dec
lcall
inc
cmpxchg
in
mov
lret
fiadds
insl
xchg
jg
dec
mov
and
out
adc
aad
push
imul
xor
and
add
mov
movsb
xor
sbb
mov
inc
xchg
insl
or
outsb
xchg
mov
sub
shrl
push
lds
popa
inc
mov
mov
testl
call
push
or
mov
loop
jno
mov
ror
pop
icebp
xor
fisubrl
shlb
loopne
icebp
popf
aaa
push
sub
hlt
pop
addl
mov
sub
add
jl
add
or
popf
mov
jno
jle
std
aam
mov
imul
loop
cmp
nop
mov
inc
mov
roll
cld
pop
push
dec
pop
in
mov
ss
insl
out
sbb
stos
jnp
inc
add
and
lret
push
inc
xchg
shl
into
pop
mov
add
iret
xor
mov
lds
popa
add
std
push
scas
out
xchg
jb
jge
mov
or
inc
ljmp
ljmp
cmp
or
push
scas
in
or
loopne
jle
lds
jns
or
inc
push
cmp
cmp
arpl
and
cmpsb
cs
sbb
pusha
sbb
jbe
push
mov
jae
sub
adc
xor
mov
syscall
add
movsl
sti
lea
imul
repnz
xchg
and
push
xlat
call
outsl
adc
and
mov
adc
outsb
mov
pusha
adc
jmp
shll
xchg
jecxz
std
jmp
sbb
sbb
int3
push
mov
jbe
and
test
jno
push
dec
call
cs
enter
mov
fsts
call
push
jns
icebp
and
popf
cmp
and
dec
adc
inc
xchg
push
fisttpl
les
pop
mov
fwait
and
inc
cmc
hlt
push
outsb
imul
dec
cmp
ja
jb
mov
push
jnp
into
aas
int
mov
jp
addb
dec
adc
inc
inc
and
xchg
mov
in
cmp
pop
xlat
dec
inc
or
mov
jo
mov
scas
psubd
stos
mov
jmp
jle
jle
push
rorl
lcall
fimuls
test
sub
loopne
jmp
pop
out
out
sub
in
into
xor
fstps
cwtl
loopne
cmp
dec
fdivl
sarb
pop
inc
mov
inc
or
mov
push
or
cltd
sbb
lock
call
popf
or
shl
push
mov
insl
repnz
pop
das
ret
outsb
out
iret
push
push
mov
xchg
pop
or
fsubr
xchg
test
test
in
int3
or
shl
addb
or
mov
cs
xchg
mov
bound
lret
xor
jns
test
stos
lods
xchg
enter
xor
inc
nop
nop
out
or
or
fwait
pop
hlt
popa
jl
scas
ljmp
push
cmp
notb
inc
mov
jecxz
out
fdivr
pop
mov
test
push
pusha
jno
mov
push
aam
pop
stos
roll
or
imul
cmpsb
push
in
shrb
cmc
outsb
call
mov
push
push
xor
es
insl
pop
cmp
andb
inc
dec
movsb
dec
jne
jl
mov
cltd
inc
sub
fwait
xlat
or
sbbl
aas
gs
outsl
mov
and
scas
icebp
popf
pop
or
jae
lahf
push
mov
and
gs
repnz
and
lods
jecxz
pop
push
in
shlb
and
ss
loop
jb
sbb
cld
or
and
inc
lret
outsb
mov
sti
sahf
xchg
mov
inc
scas
scas
neg
dec
mov
leave
pop
cmp
adc
pop
ss
js
and
outsl
mov
das
lods
data16
shld
cmpb
jne
cmp
dec
cmp
cltd
push
adc
xor
push
sahf
mov
lcall
mov
in
loope
cmpsb
sbb
xchg
repz
fidivl
dec
xchg
sub
push
cwtl
adc
into
dec
sub
mov
and
fndisi(8087
rcr
sbb
jae
dec
jmp
mov
cmp
cmp
xchg
or
out
clc
xor
mov
push
cmpsb
push
test
ret
push
cmp
add
lock
dec
pop
dec
jno
inc
mov
out
cmpsl
jnp
and
sar
ds
mov
xchg
mov
pusha
dec
push
and
jns
cld
icebp
xchg
xor
pop
push
push
outsl
mov
mov
js
sub
popl
push
push
in
mov
cmc
div
clc
sbb
cmc
cmp
push
mov
stc
inc
out
and
push
loope
push
lods
dec
scas
dec
dec
mov
pop
rcrb
add
xchg
pop
repz
imul
lds
cmp
aad
dec
mov
adc
test
jl
adc
repnz
pop
or
mov
xchg
outsl
in
xor
std
shll
daa
push
mov
mov
adcb
icebp
in
loopne
jo
jg
mov
dec
jne
mov
cmp
out
fadd
mul
or
stos
fildll
add
fdivl
cmp
adc
jns
dec
stos
jne
in
mov
sbb
addb
gs
rcrb
rclb
les
call
push
pushf
xlat
mov
mov
pop
jns
mov
or
sar
int3
pop
das
imul
and
adc
cmp
ret
inc
push
jl
sub
fdivl
jne
or
mov
outsl
xchg
hlt
dec
loop
pop
or
insl
shrl
sub
adc
cmpsb
rcl
rolb
repnz
js
jge
push
mov
mov
in
and
xchg
sbb
das
or
int3
popl
cld
test
mov
aas
out
adc
jo
dec
pop
mov
repz
jb
loopne
xorb
in
mov
addr16
orb
xor
cli
out
pop
ds
cmpsl
push
inc
and
ret
push
inc
mulb
arpl
or
lods
push
xor
cmp
mov
dec
int
sub
jge
lahf
pop
aam
sar
inc
or
sahf
pop
nop
cli
xchg
mov
sub
jbe
xchg
scas
or
sbb
mov
rcll
jge
stc
mov
in
mov
in
mov
pop
sarb
sbb
inc
jge
or
jecxz
mov
insb
jae
mov
adc
es
pop
popf
sub
sahf
rorl
mov
sahf
pop
mov
dec
fdivs
xchg
movsl
pop
pushf
or
lds
mov
add
mov
fisubl
test
ss
ljmp
lods
sbbb
cmp
adc
cwtl
ss
and
inc
and
mov
xor
mov
in
iret
mov
or
and
outsb
ret
push
mov
inc
push
je
bound
jge
mov
loope
aam
inc
jae
lods
mov
mov
mov
mov
pop
test
pop
adc
nop
mov
xchg
icebp
jmp
adc
and
test
cmp
js
in
aad
dec
lock
fistps
pop
push
xchg
adc
jae
pop
repz
mov
lcall
mov
pop
lods
test
out
cmpsl
loop
mov
mov
pop
movsb
sbb
fcmovnb
pop
xor
aaa
mov
mov
adc
push
test
and
outsb
push
dec
sbb
outsb
scas
lods
adc
ds
sbb
iret
data16
call
sub
movsb
dec
sub
repz
cmp
aas
popa
mov
ret
lock
inc
mov
mov
fsubs
mov
aad
mov
mov
xchg
mov
jle
ljmp
fsubr
ficompl
and
push
dec
push
adc
lcall
mov
lahf
sti
sub
sub
xchg
xchg
pop
lods
fisubrl
xchg
adc
addl
pop
test
or
les
mov
bound
jbe
cmpsb
cmp
jg
lea
jl
stc
sbb
mov
sub
dec
in
dec
sub
les
xlat
es
mov
inc
ret
cmp
sub
outsb
call
enter
jmp
cmp
ficomps
dec
shrl
mov
adc
jb
sub
sbb
scas
ss
daa
fistpl
nop
nop
cmpsl
cmp
push
loope
jns
mov
adc
sbb
cmc
cld
jno
dec
popf
fdivrl
mov
test
mov
ds
mov
push
jnp
lahf
sbb
cmp
mov
adc
jecxz
aad
mov
mov
sbb
xor
mov
mov
mov
clc
sub
cmp
mov
mov
inc
std
dec
clc
cmp
call
pop
add
push
stc
sbb
sti
jg
dec
arpl
mov
addr16
add
adc
pusha
xchg
cwtl
popf
xchg
divb
stos
fldenv
outsb
in
stos
pop
js
testb
cmp
mov
bound
inc
or
jne
inc
push
or
xchg
mov
jle
out
inc
imul
lea
insb
jnp
cwtl
es
fsubs
sti
cmp
push
addr16
xorl
sub
jbe
mov
xchg
clc
out
add
lret
mov
mov
es
ds
jp
cmp
stc
movb
add
cmp
iret
std
sarl
cltd
scas
or
pop
mov
or
push
jecxz
fadds
push
aam
pop
fistpll
pop
lds
inc
dec
loop
call
push
test
xchg
mov
mov
sub
dec
cmp
adc
mov
sbb
xchg
pop
jne
add
lods
cs
imul
cwtl
mov
mov
inc
mov
fsubrs
mov
cmp
lock
je
xor
cmp
lods
in
ffreep
jl
mov
scas
mov
loop
movsb
add
jbe
popf
xor
rol
mov
popf
test
insb
icebp
sub
shl
lods
cmp
mov
or
int3
sbb
add
insl
aad
xchg
mov
mov
and
or
cli
mov
xchg
push
mov
push
mov
jb
sbb
scas
sub
les
pushf
cwtl
cltd
pop
jbe
fs
jne
mov
les
icebp
mov
pop
mov
nop
jbe
xchg
push
mov
loop
xlat
dec
movsb
clc
mov
inc
ffreep
pop
cld
test
test
pop
pop
jno
mov
add
cmpsb
outsb
in
iret
sub
pop
jno
pop
pop
sahf
push
stos
adc
scas
mov
inc
jg
inc
in
aad
ljmp
int3
push
push
lahf
out
mov
jl
rcll
sub
pop
nop
cmp
test
cmpb
adc
int3
mov
gs
adc
push
icebp
aam
mov
inc
out
or
xchg
cwtl
insl
imul
pusha
push
pop
xorl
sbb
dec
in
xor
pop
xchg
in
out
lea
push
outsb
push
iret
mov
in
sbb
repz
scas
repnz
lcall
repnz
jmp
nop
shlb
shlb
and
aas
stos
or
sarb
ret
ret
pop
aas
jg
shl
mov
popf
and
test
jnp
sbb
nop
in
mov
aam
aas
cmc
sar
pop
aad
pop
mov
imul
vsubsd
push
mov
fwait
or
jl
cmp
imul
dec
mov
ret
cltd
push
inc
ljmp
and
cmpsl
gs
adc
or
mov
das
and
es
xchg
mov
and
in
sti
into
hlt
push
mov
vunpcklps
jnp
mov
add
in
ljmp
pop
fnstsw
test
ret
sbb
jne
leave
fmuls
mov
adc
and
fistpll
xchg
adc
test
mov
pop
stos
add
mov
rcr
nop
and
rolb
jmp
repnz
jl
sbb
jne
inc
mov
out
inc
mov
out
sbb
sub
inc
jno
jg
xchg
push
cli
outsl
loopne
pushf
bound
jne
cmc
add
shlb
dec
and
add
pusha
pop
mov
lea
js
lcall
mov
xchg
and
test
mull
xchg
sbb
rcrl
out
dec
cs
cli
scas
dec
out
aas
fcoml
mov
scas
xor
dec
subl
out
popa
jnp
int3
push
lods
fwait
sub
sbb
pop
bound
mov
jmp
arpl
and
jb
mov
negl
lds
jg
ljmp
mov
adc
lahf
rcrb
frstor
or
adc
dec
mov
popf
dec
mov
lock
test
cwtl
in
mov
pop
sub
xchg
je
dec
adc
hlt
mov
ja
shrl
add
pop
sahf
sti
je
mov
xor
stos
push
movsb
add
adc
cmp
pop
sbb
mov
or
jbe
sub
push
lret
imulb
les
aam
insb
push
in
dec
jno
jmp
push
push
sub
orb
enter
les
mov
out
jg
cmp
mov
movsb
sbb
lcall
loopne
mov
and
in
sbb
mov
add
sub
and
insl
inc
add
jmp
lods
testb
push
lods
in
xlat
xchg
sar
ror
sbb
xchg
push
fadds
jge
insl
cmovle
push
and
adc
aas
mov
btr
sub
gs
jne
xchg
xorl
cwtl
das
lock
xor
das
jmp
popf
lods
mov
xchg
stos
sahf
bound
adcl
call
mov
dec
sub
mov
jne
add
xchg
push
addl
je
jmp
rolb
in
dec
gs
sub
out
sti
shll
push
ljmp
cmpsb
in
mov
das
jecxz
lods
std
dec
mov
in
cmc
pop
push
lret
sbb
push
mov
mov
rorb
cmpsb
aas
sbb
or
in
repz
std
int
or
popf
adc
mov
aas
mov
push
paddsw
inc
push
push
add
and
xor
jo
pop
sbb
sub
cmp
and
jo
popf
lods
ret
negl
pop
mov
rcr
mov
clc
mov
jb
pushf
push
jle
sub
mov
in
lods
xchg
jno
bound
inc
push
add
fidivrs
adc
lods
cltd
cwtl
inc
mov
inc
adc
imul
mov
push
add
xor
add
mov
test
xor
mov
pop
xchg
jg
in
jmp
data16
pusha
loope
push
mov
lcall
xor
data16
push
sub
jmp
arpl
pop
sbb
loopne,pn
out
cmp
imul
fdiv
adc
in
sarb
pusha
pushf
repnz
pop
and
mov
repnz
xchg
imul
outsl
or
mov
test
lcall
push
mov
into
push
ret
mov
xchg
pop
fwait
pop
pop
movl
xor
out
and
xchg
dec
outsl
les
fsub
dec
ss
add
mov
inc
int
rol
pop
sub
int3
gs
rorb
push
and
lret
insl
test
lret
fiaddl
movsb
xlat
in
mov
cmp
fsts
xchg
push
bound
sbb
pop
cmc
push
pop
mov
aad
xchg
jmp
aas
inc
fcmovnu
sub
mov
lret
add
and
int3
pop
repz
jge
jge
repz
pop
jo
stos
in
pop
sub
psubsw
cmpsb
into
sbb
cmp
xor
xchg
aam
xchg
test
add
cltd
xor
jae
ljmp
ljmp
cmp
sub
loope
cli
decb
xor
aaa
lret
mov
and
mov
sarb
dec
rcrl
lea
add
out
insb
fucomi
mov
cmp
mov
jge
subl
mov
pop
adc
jmp
cltd
aaa
push
add
in
xchg
scas
lock
test
lret
in
clc
cmp
inc
js
mov
push
loop
pushf
xor
cld
es
in
or
dec
add
leave
adc
inc
cmp
dec
jne
stos
imul
jp
insl
js,pn
sti
mov
or
and
sbb
mov
pop
dec
or
xchg
cmpsb
addb
je
jp
push
std
in
cmp
xchg
mov
xchg
leave
subb
cmp
xchg
scas
xchg
sub
sub
jbe
out
test
adc
rcll
jle
pop
rcr
inc
adc
mov
lods
inc
testl
iret
in
test
lcall
push
test
jbe
add
xchg
push
std
add
push
addr16
es
fwait
cmpsb
cmp
rcr
xchg
push
fwait
cltd
stc
out
fistpl
cmp
orb
sarl
cli
dec
imul
and
dec
mov
mov
sub
ficoml
divb
ss
xchg
dec
mov
jno
pusha
mov
xlat
push
in
or
pusha
xchg
adc
cmp
xchg
sbb
leave
aam
mov
and
sbb
dec
scas
mov
insb
outsl
enter
xchg
insl
inc
int
mov
ficompl
pop
mov
jo,pt
loop
ss
and
sub
mov
jae
loop
jb
nop
pop
xchg
xrelease
ror
push
jge
scas
daa
xchg
xor
sub
xchg
xchg
xchg
mov
mov
in
inc
test
dec
sub
test
xor
jnp
xor
dec
mov
mov
int
sbb
sarl
xchg
mov
jno
scas
mov
mov
movsb
ja
jnp
iret
popa
xor
or
aaa
mov
mov
cld
jns
bound
lds
out
push
mov
addr16
xchg
test
mov
setl
mov
sbb
mov
popf
push
scas
push
gs
cmp
in
push
sbb
incb
filds
add
outsb
out
jnp
jp
sub
push
push
iret
ljmp
adcb
mov
xor
ja
jg
inc
mov
jns
pop
sub
mov
or
in
addr16
jns
push
outsl
cmp
jbe
jg
sarl
pop
loopne
das
stc
ret
pop
pop
jae
rorl
add
imul
nop
aad
mov
movsb
and
jle
arpl
enter
adc
imul
adc
lahf
adc
sbb
imul
pop
sahf
out
mov
insl
sahf
jp
inc
push
outsl
not
jg
fdivr
out
cwtl
add
mov
je
in
cs
int
out
aam
jns
mov
test
push
jnp
pop
and
into
and
scas
movsl
lcall
stc
mov
inc
jne
leave
fdivr
mov
cmp
js
mov
push
aas
movsl
leave
fisttpll
repz
jmp
lock
insb
ds
add
dec
jmp
sar
cmp
lcall
out
mov
dec
push
popa
jnp
push
loopne
test
ljmp
xchg
mov
ret
push
inc
iret
sub
mov
jg
mov
xchg
mov
adc
lcall
inc
pusha
fcoml
push
gs
les
mov
sub
mov
xchg
sbb
inc
cltd
jp
dec
int3
pop
dec
in
clc
cmp
push
or
imul
fucomp
fs
sub
ret
cmpsb
dec
inc
testl
xor
sub
shlb
imul
fldenv
negl
cmp
fidivrs
stc
mov
enter
test
mov
inc
cmp
push
sbb
gs
jbe
push
rcpps
push
mov
cmp
or
jae
xor
push
sub
loope
mov
test
xchg
jecxz
inc
in
sub
xchg
sbb
in
and
mov
test
data16
xchg
or
xor
in
pop
sti
fsubr
jl
outsl
std
mov
js
mov
push
std
leave
addr16
mov
test
popa
and
iret
in
cmpsb
loope
cli
jbe
sbb
aam
push
mov
into
xchg
or
pop
mov
es
push
insb
mov
jno
push
imul
repz
pop
stc
push
outsl
hlt
loop
xor
jmp
jne
push
jp
mov
mov
into
push
xchg
outsb
pop
adc
jnp
sti
cs
xor
mov
adcb
jbe
xchg
fsts
inc
cmp
xchg
push
es
mov
push
mov
or
mov
lds
mov
dec
push
fcmovnbe
or
lods
inc
lret
dec
pop
sarb
bound
or
push
pushf
push
lock
and
outsb
testl
in
or
mov
mov
adc
adc
sahf
add
push
jmp
jb
adc
lcall
sbb
int
cltd
jle
bound
fucomp
nop
cs
sub
sbb
repnz
das
pop
jae
inc
xor
jle
xchg
pop
push
adc
orb
or
out
sub
push
sbb
mov
es
jmp
mov
xchg
in
pop
fimuls
mov
adc
inc
scas
mov
add
mov
enter
adc
ss
and
mov
mov
icebp
lods
mov
stos
sub
inc
mov
push
cli
mov
or
or
sub
jno
pop
rcr
adc
inc
std
stos
js
adc
xlat
jne
test
or
xchg
pop
lods
imul
push
pop
addb
or
ret
push
lods
sbb
mov
into
scas
xor
and
adc
shll
or
addb
mov
lds
and
push
repnz
adc
mov
xchg
and
cmp
push
sbb
int
mov
sub
dec
and
adc
cmp
sub
lret
pop
push
or
sub
xor
inc
jae
outsb
outsb
cwtl
jmp
mov
adc
dec
shlb
jb
pusha
test
mov
sub
mov
mov
outsb
xchg
jl
icebp
cmp
stos
pop
fdivrp
inc
or
mov
push
jle
outsl
mov
rolb
ds
rolb
xchg
adc
andb
stos
rcrb
mov
lods
jnp
pop
mov
mov
cli
lds
repnz
dec
xchg
pop
mov
data16
repz
cltd
shl
js
xchg
cwtl
mov
test
les
scas
push
sub
xchg
or
imul
ret
push
inc
in
sub
mov
jecxz
cmc
dec
or
gs
cmpsb
adcb
mov
dec
dec
sub
cmc
mov
lods
push
add
and
icebp
mov
and
add
nop
int3
add
nop
dec
test
mov
pop
add
dec
push
xor
pop
inc
repnz
adc
adc
js
mov
cmp
and
mov
mov
mov
push
jp
out
fcmovnbe
sub
aaa
in
lret
xchg
inc
imul
xchg
inc
cmpsl
arpl
xchg
pop
mov
adc
xor
into
adc
cld
pusha
shrb
jnp
dec
scas
mov
icebp
shlb
and
sbb
test
jo
and
bound
or
pop
test
push
xchg
lods
mov
repz
sub
aad
xchg
pop
lods
aam
inc
adc
jo
pop
ret
xchg
push
mov
loop
aaa
pop
test
adc
mov
lock
sub
push
or
rorl
int3
jp
pushf
and
cmp
scas
mov
stos
lods
mov
jp
xor
or
inc
xlat
popf
or
lahf
nop
out
fcomip
pop
add
adc
adc
ror
les
les
cmpsb
sub
movsb
add
in
cmp
icebp
jne
mov
ret
mov
lret
lods
sar
push
adc
testl
add
and
lret
shrb
loopne
inc
jae
mov
mov
repnz
cli
into
push
fadds
pop
xor
xchg
dec
test
mov
in
sbb
cmp
in
ds
pop
sbb
mov
out
jge
ds
loopne
pop
jecxz
lds
mov
cmpsl
fnstenv
push
adc
test
push
xchg
lds
int
sahf
arpl
test
mov
mov
test
repz
mov
mov
mov
fists
mov
push
or
and
mov
pop
sarb
aad
xor
cs
fcoms
cmp
sti
sbb
dec
shll
sbb
dec
test
pop
mov
inc
pushf
jecxz
cmpsb
ljmp
aam
adc
in
xor
mov
pop
sub
ret
gs
fcom
push
xchg
mov
dec
mov
push
adcl
lea
mov
sub
fidivl
cmp
add
dec
test
push
sub
lock
je
int3
neg
ds
jmp
adc
push
out
sub
data16
pop
adc
mov
cmp
je
lret
dec
gs
jb
pop
xor
jg
and
sbb
sbb
adc
mov
mov
mov
cli
je
test
sbb
leave
bound
jg
adcb
mov
sbb
xor
mov
jg
aad
fdivrs
es
pop
lock
sub
sub
sbb
pop
or
jle
add
ret
dec
scas
cmpsb
fnstcw
aaa
aas
mov
fisttpl
sbb
mov
pop
dec
inc
xor
mov
lret
dec
dec
push
jnp
adc
push
outsb
out
or
jae
rep
out
outsb
leave
sbb
inc
subb
xor
mov
lds
cli
cmc
and
mov
and
test
pop
cmp
pushf
jp
insb
les
lock
pop
dec
xlat
pop
in
nopl
cmc
clc
ja
stos
xchg
jne
je
jg
xchg
pop
adc
movb
pusha
insb
mov
dec
xchg
outsb
inc
push
movsb
mov
into
jg
push
ret
push
loop
xchg
hlt
dec
push
out
xor
imul
mov
fnstcw
jae
and
inc
push
add
dec
jae
rcrl
and
insb
xor
insb
cmpl
xor
cmc
pop
add
pop
pop
data16
push
lret
xor
xchg
inc
imul
xchg
in
pop
nop
xchg
stos
lock
pop
movsl
jns
enter
cmp
dec
xchg
dec
inc
stos
push
xchg
sbb
fcmovnb
aad
test
adc
sarb
shll
add
dec
mov
pop
mov
push
call
fcmovne
push
popf
cld
sbb
aam
ficoms
sahf
jno
pop
enter
jp
xor
sub
dec
push
push
pop
push
adc
push
dec
out
daa
push
xchg
sbb
popa
nop
lds
inc
or
xchg
cmpsl
jbe
xor
test
sub
fnsave
mov
or
mov
mov
fmul
stos
fwait
inc
loop
mov
cmc
push
cmp
outsl
icebp
scas
and
lds
leave
sti
pushl
mov
test
dec
hlt
push
or
popf
pop
cwtl
test
mov
cmp
cwtl
xchg
gs
dec
mov
adc
adc
bound
mov
dec
dec
iret
adc
pop
cli
into
or
imul
out
cld
loopne
imulb
data16
mov
xlat
icebp
stos
jp
sub
fwait
sbb
or
daa
sbb
add
or
daa
jl
xchg
cmpsb
cmp
repz
mov
leave
mov
mov
cmc
stos
inc
call
sarl
adc
fldenv
aaa
mov
or
fbld
icebp
cs
test
icebp
sbb
mov
sahf
push
stc
push
xchg
mov
inc
inc
dec
push
addr16
mov
sarb
xchg
sub
cmpsl
or
leave
cmpsl
js
lods
das
inc
mov
in
decl
mov
clc
sub
mov
cmp
dec
std
js
dec
adc
dec
pushl
hlt
jno
push
push
cmp
lods
loopne
es
xorb
sti
jno
jbe
xchg
lret
inc
or
mov
out
mov
inc
fsub
negb
cld
leave
xchg
addl
fimuls
inc
and
andb
lea
aas
outsl
stos
jb
or
ss
push
sbb
or
xlat
sahf
ja
loop
lret
jle
inc
add
mov
push
dec
and
imul
das
imul
xor
dec
je
jmp
repnz
lret
sahf
ss
cmp
cmpsb
sub
sub
xor
fwait
imul
call
dec
and
in
cmp
sti
jo
cmp
cli
movsb
push
dec
mov
fstps
pop
inc
leave
xor
push
or
movsl
ficomps
mov
aaa
sub
dec
popf
mov
pop
dec
mov
mov
repz
in
or
cmpsb
test
fistpll
pop
jecxz
mov
inc
rorb
lcall
ss
and
sahf
outsl
nop
dec
and
sbb
stos
or
cmc
fistl
aam
daa
js
scas
int3
fsub
ficomps
out
mov
jle
push
mov
mov
inc
add
cmp
clc
in
cmp
ljmp
inc
mov
dec
jo
test
jmp
das
subl
daa
sbb
dec
ret
mov
dec
mov
add
inc
lock
fsubrs
add
fcoml
std
shrb
and
jecxz
shlb
inc
pop
xchg
in
push
mov
mov
jb
js
cmp
js
cmp
ss
jmp
sti
inc
pop
cld
or
sub
popl
mov
xchg
aas
dec
test
jp
into
jge
dec
xorl
fdivrl
mov
test
mov
dec
mov
and
xor
loopne
leave
fidivrs
lcall
add
sbb
std
aaa
xorb
fldl
xor
leave
jo
mov
dec
inc
out
push
cmp
push
xor
icebp
mov
cmpb
dec
dec
mov
dec
sub
sbb
cmp
pop
mov
jbe
adc
dec
pop
ret
mov
push
int3
mov
dec
inc
cmp
fisubl
sbb
mov
jmp
xchg
adc
adc
xchg
mov
cmp
or
mov
or
mov
int
int3
rcr
push
scas
daa
mov
cs
shll
nop
imul
mov
popf
cld
push
pop
and
stos
adc
mov
rolb
pushl
out
addr16
fldl
pop
int3
and
les
xor
push
add
cmc
negl
mov
fdivrs
push
push
int3
inc
lock
incl
xchg
std
stc
fwait
mov
aam
in
push
jp
dec
xor
and
loopne
clc
jle
mov
push
shrb
pop
hlt
hlt
js
scas
pop
jmp
push
pop
pop
in
sbb
mov
loope
xchg
ds
shl
cmp
fcoms
cmp
in
mov
loopne
xchg
sub
inc
xchg
test
outsl
dec
cmp
clc
lahf
lcall
shlb
mov
loope
lcall
inc
popa
cmp
jl
bt
pop
push
les
mov
stc
pop
in
out
cld
daa
mov
into
leave
xor
sbb
dec
xlat
fidivl
aam
adc
es
mov
adc
jg
out
ljmp
jl
dec
mov
jae
dec
pop
adc
lret
setb
int3
xor
mov
add
inc
ja
cmp
icebp
and
fists
fldl
or
jle
mov
mov
jle
stos
imul
cmp
js
jp
and
ret
in
in
int
xchg
add
loop
xor
pop
cld
daa
cmp
ret
ret
mov
or
lds
sbb
sbb
pop
insb
lock
rorb
adc
and
sub
dec
mov
mov
ss
shrb
jecxz
lret
mov
test
inc
add
je
cmpsb
fstpl
and
out
ss
loopne
adc
push
shll
mov
push
mov
es
aam
ljmp
cmpsb
repnz
stc
jbe
dec
loope
inc
jns
lret
lods
fnstcw
pop
sahf
enter
xchg
mov
fadd
popf
loopne
xchg
mov
cwtl
jge
sub
fstpl
repz
jle
dec
push
inc
jg
mov
pop
sub
lahf
cmp
dec
pop
pop
and
fnstcw
push
pop
ss
push
xchg
test
cli
inc
outsb
es
bnd
test
lret
outsl
xor
xchg
lock
sbb
int3
pop
fsts
mov
jmp
jne
lea
cltd
rcll
shrb
inc
lods
shll
mov
and
neg
repnz
xlat
int3
add
push
fildl
sti
and
insl
and
mov
daa
fists
ss
les
or
and
daa
mov
addl
mov
sar
inc
jl
fscale
cwtl
jb
inc
inc
jl
jmp
aad
loopw
adc
imul
sbbb
in
mov
cs
or
ret
cmp
ret
div
xchg
fcoml
xchg
jmp
aam
inc
mov
mov
mov
pop
push
push
cli
aas
adc
lods
int
xor
test
lcall
and
cmp
rcrb
test
adc
fmull
lea
outsl
daa
rcl
mov
add
ret
dec
dec
jnp
int
outsb
cmp
daa
fwait
imul
pushf
addr16
pop
mov
in
out
pop
mov
ss
jge
ja
mov
xchg
shlb
int
lret
inc
dec
or
jge
push
adc
push
lcall
clc
pusha
cmc
ja
in
push
cmp
pop
mov
mov
mov
sub
scas
hlt
xchg
icebp
push
sbb
xlat
cmc
nop
lds
les
and
mov
les
rorl
pop
jns
orl
push
inc
mov
and
cli
adc
sub
push
pop
les
lock
jge
pop
data16
sub
stos
push
movsb
xchg
lock
sbb
pushf
jge
clc
out
sti
push
dec
add
dec
into
pop
in
or
scas
cli
xor
sbb
mov
push
mov
and
jge
inc
cmp
cmp
mov
add
sbb
jmp
cmp
sub
in
push
pushf
fisubrs
ss
stos
cli
cmc
lods
jb
inc
in
or
pop
cmpl
mov
imul
push
or
sub
or
je
xchg
and
jp
or
jne
fisubrl
sbb
leave
subl
jp
test
inc
negb
push
jo
aaa
in
test
mov
dec
push
test
sub
outsb
mov
inc
push
js
pop
cmpsb
mov
in
test
pop
lret
arpl
data16
dec
scas
jo
fwait
leave
and
push
push
jbe
or
mov
fmuls
mov
cmp
loop
in
cmc
mov
jmp
mov
aad
fiadds
push
push
sub
fldt
push
aas
mov
add
inc
mov
push
jmp
int3
xor
stc
add
inc
jnp
push
sub
and
sbb
repz
out
lcall
fisubs
scas
xchg
out
ds
push
add
sub
pop
ljmp
fstpl
push
lds
push
mov
daa
imull
test
fistps
iret
es
sub
xor
add
les
ds
ja
cmp
test
xlat
sbb
adcb
xor
push
pop
out
scas
test
jb
inc
in
pshufw
adc
push
repz
pop
lahf
lcall
fisubrs
mov
sub
insl
xor
enter
fmull
mov
shlb
xlat
jno
xor
push
leave
cmpsl
inc
mov
cmp
je
or
dec
mov
push
notrack
sub
arpl
sti
sub
and
fisttps
pop
or
push
mov
aaa
clc
sbb
adc
or
xchg
or
cld
pusha
push
iret
push
mov
mov
inc
push
pusha
sbb
jecxz
sub
loopne,pn
out
and
cmp
add
dec
inc
xchg
or
enter
negl
cmp
rcll
dec
mov
jle
push
psrlq
sahf
stos
movsb
xchg
inc
sbb
mov
pop
call
pop
mov
hlt
mov
jbe
out
mov
in
cmc
pop
hlt
sbb
push
mov
jb
mov
mov
push
xchg
pop
adc
mov
pop
stos
push
mov
or
ss
out
mov
pusha
mov
incb
sahf
fisttpl
pop
jl
pop
pop
sbb
ljmp
cmc
xchg
out
out
adc
sbb
mov
ja
leave
mov
jb
outsl
shl
insb
insl
xchg
roll
test
mov
mov
dec
aaa
rclb
aaa
jle
subl
lcall
ljmp
andb
testl
inc
pop
add
inc
xor
fistpl
add
iret
jns
sub
and
sub
scas
push
pop
and
pop
jl
cmp
adc
pop
mov
imulb
dec
int3
sub
add
mov
icebp
mov
fwait
outsb
xor
inc
mov
and
xchg
icebp
mov
roll
mov
divb
pop
mov
imul
scas
dec
repnz
xchg
inc
call
inc
data16
xor
ja
pop
mov
das
adc
mov
add
dec
sbb
lret
lret
dec
mov
fs
push
ds
add
testb
test
js
sbb
lcall
jne
lods
lods
dec
lret
insl
arpl
out
out
in
jmp
cmp
jno
leave
stos
call
repz
add
cmp
add
and
push
movl
fisubs
lds
pop
sahf
pop
f2xm1
js
fwait
test
xchg
jle,pt
add
jne
int
dec
push
jge
in
cmp
lds
mov
cltd
add
sahf
or
push
adc
push
cmp
fdivr
cli
cmp
in
dec
jno
enter
lahf
sbb
fsubrl
sti
pop
fiaddl
vucomisd
lock
xor
dec
stos
out
shl
xchg
pushf
sub
add
test
pop
xor
push
jl
nop
mov
pop
inc
inc
sub
lea
inc
out
ds
push
in
imul
fstps
cmp
pusha
loopne
cltd
je
xchg
push
scas
je
mov
push
adc
insl
cmovo
sub
and
mov
jmp
imul
pop
es
sub
sub
and
or
fisubrl
in
add
loopne
cmp
add
shll
ret
jle
jp
inc
xor
shr
xchg
fisubrl
cmp
test
jo
and
adc
pushf
insl
xor
mov
lods
add
test
inc
cld
stos
xor
out
rcrb
dec
and
mov
mov
jnp
push
scas
or
xchg
fistps
xor
jecxz
in
lds
pushf
ds
lods
sub
aaa
popf
jns
ds
xor
pop
jl
jb
cmp
ja
into
loop
fstl
jmp
mov
mov
sbb
or
push
lcall
roll
das
test
lcall
int
mov
sbb
mov
aam
add
lods
xchg
ja
ret
jo
hlt
mov
arpl
cmp
fistpll
cmp
mov
push
jp
cmp
push
subl
les
scas
ficompl
pop
jo
pop
mov
add
iret
out
aas
add
sub
loope
pop
or
mov
orl
andb
in
mov
popa
ficoms
stos
mov
xor
jmp
push
xchg
adc
hlt
xor
push
clc
dec
es
inc
shll
push
js
ljmp
dec
and
push
inc
ficoml
das
add
cmp
cld
imul
dec
cld
fstpl
push
mov
add
outsl
dec
mov
jo
shlb
mov
jl
pop
inc
icebp
adc
jl
sub
lds
pop
xlat
in
in
rcll
mov
sbb
mov
shlb
jae
xor
lods
pusha
addr16
cmc
push
xchg
mov
icebp
sti
js
aas
add
aam
loop
es
idivl
in
cmp
adc
mov
cmpsl
xchg
pop
movsb
in
inc
jl
inc
les
xor
or
xchg
add
je
jmp
in
adc
inc
lea
jno
div
push
pusha
scas
icebp
xchg
and
push
adc
xor
das
push
sti
repz
cmpsb
in
fs
sub
sbb
inc
sbb
fwait
andb
movsl
dec
adc
push
aaa
aaa
xor
sub
ret
out
dec
in
mov
mov
dec
outsb
enter
lods
cmc
jmp
arpl
orb
dec
sahf
aad
enter
inc
fstpl
adc
fiadds
sbb
loopne
dec
leave
aas
inc
jns
stc
jmp
and
jl
loope
fcomps
or
pushf
int3
fxch
mov
insb
loop
cld
jbe
daa
cmpsl
negb
inc
xchg
jb
ret
out
cmpsb
or
mov
dec
das
jp
out
pusha
or
lcall
mov
cwtl
sti
sbb
lret
fsubs
add
bound
pop
imul
add
int3
repz
and
dec
jg
or
jo
rcll
divb
mov
jne
insb
movsl
push
out
loope
jne
in
mov
sbb
cld
pop
add
mov
pop
std
movl
ret
imul
divb
jb
out
dec
imul
std
jl
inc
add
push
xorb
adc
xor
clc
iret
jge
subb
fdivs
xchg
in
movb
cmp
jecxz
dec
int3
jle
rcrb
in
aaa
jecxz
cs
add
jl
out
js
cltd
aaa
inc
jmp
sbb
sbb
adc
sub
lods
subb
fbld
pop
enter
push
test
jo
lds
cmovns
jbe
sub
cli
xchg
xchg
mov
lods
pop
and
add
icebp
xchg
cmp
add
shrl
mov
mov
icebp
out
lock
out
push
mov
cltd
add
jb
jmp
out
adc
inc
inc
in
outsb
imul
mov
push
ds
popa
cmp
pop
subb
ja
call
xchg
lret
sahf
mov
add
repnz
cmpsl
jns
and
push
and
cmc
jp
loope
mov
cmp
cli
xor
push
andb
mov
push
jne
mov
ret
popa
jae
and
jle
pop
mov
inc
sbb
enter
jno
mov
mov
test
test
add
lret
mov
sub
pop
shll
mov
ret
jge
xor
push
dec
loopne
movsl
out
sub
push
add
inc
imul
push
dec
cmp
sti
add
push
enter
leave
lea
cs
loop
inc
rcll
cmp
xor
push
hlt
mov
gs
lret
add
pop
sar
lahf
into
icebp
push
fs
add
mov
fwait
loopne
lahf
mov
inc
inc
push
in
bound
nop
inc
sbb
aaa
cmp
jp
sub
cmp
or
push
push
outsb
int
cli
push
push
ljmp
add
movzwl
hlt
mov
cmp
daa
in
popa
jae
xchg
xor
mov
xchg
xor
ja
and
movsb
xchg
mov
mov
cmp
mov
inc
aas
or
clc
mov
mov
shrb
idiv
into
test
mov
ret
sub
xchg
add
stos
cwtl
popa
mov
and
or
jae
fcomps
push
loop
mov
jge
inc
xor
int
and
jno
mov
ljmp
jae
popa
push
xlat
lods
push
loopne
jl
ds
push
in
in
mov
xchg
inc
fidivs
imul
dec
iret
sbb
inc
ss
inc
mov
sahf
cmp
es
pop
call
orb
jo
gs
shr
sbb
das
lods
sub
jl
mov
adcl
cmp
mov
xchg
and
pop
push
sbb
or
ss
cmp
cmp
jmp
sub
xor
clc
push
jmp
push
aad
push
rcl
mov
lret
test
xor
cmpsb
lret
add
cmp
rcrl
xlat
bound
inc
in
aad
ds
fiadds
es
xchg
sbb
or
mov
std
push
arpl
aad
shl
test
and
sub
jns
repz
mov
repnz
in
sub
ret
pop
cli
mov
sbb
mov
pop
jnp
inc
addl
and
cmpsl
inc
popa
and
ror
or
stos
mov
ljmp
add
enter
js
or
pop
jns
lods
add
pushf
add
mov
push
ret
add
and
mov
cmp
push
test
fsubs
xor
jae
xchg
icebp
sbb
mov
iret
jle
sar
push
pop
xchg
xor
xlat
inc
jg
cmp
inc
loop
ljmp
vcvtdq2ps
xchg
js
add
iret
in
cmp
jge
and
enter
pop
cld
nop
ja
lcall
incb
jle
dec
enter
addl
pop
mov
icebp
mov
adc
cld
sub
sbb
fldenv
cs
push
sub
sbb
ror
sbb
hlt
add
ret
out
pop
pop
mov
add
push
mov
sahf
jecxz
push
mov
cltd
mov
cmc
insb
push
in
xor
ljmp
and
int3
fistpll
sub
ja
int3
cmp
add
sub
mov
repnz
mov
lea
popa
pop
inc
out
test
jecxz
lods
in
pushf
dec
or
mov
jecxz
pop
aas
sarb
in
andl
fisttpll
jge
ffreep
jo
imul
inc
sbbb
pop
mov
js
pop
loop
rcr
jae
ret
sbb
pop
mov
push
pop
jmp
pop
fcomp
mov
roll
add
cmp
adc
loopne
movsl
sub
lahf
fisttpl
aad
push
mov
xchg
sub
into
push
lods
fistpl
pusha
adc
out
bound
and
fists
or
cmp
pushf
fwait
push
or
ret
xchg
arpl
in
jp
sub
or
mov
leave
loope
loope
cmp
aad
lret
jb
xchg
cld
hlt
pushw
movsb
jmp
stc
fisubrl
aam
mov
mov
je
adc
dec
push
popf
mull
sub
leave
repz
or
inc
movb
pop
pop
jns,pn
mov
xchg
sub
stos
fwait
fs
cmp
mov
cmc
loop
mov
das
sysexit
push
add
in
les
sub
stc
popf
sbb
pop
adc
mov
pop
repnz
cwtl
fidivl
popa
mov
mov
sbb
lret
sbb
fstpl
jg
xor
outsl
mov
call
sti
jno
in
les
mov
dec
jecxz
subl
xor
in
jne
and
cmp
xor
daa
sub
xchg
inc
cwtl
imul
pusha
or
dec
cwtl
jl
adc
add
xchg
mov
or
jo
adc
dec
cmpsb
pop
xor
out
xchg
mov
lods
insl
rorw
imul
sbb
pop
dec
repz
pop
arpl
jnp
mov
and
lods
sar
dec
dec
adc
in
xor
ja
push
adc
mov
jae
jg
jb
test
mov
push
clc
xchg
cmp
stos
dec
out
xchg
inc
mov
jg
es
scas
jb
inc
mov
pop
in
insb
dec
mov
test
aas
orl
dec
and
adc
fdivs
add
inc
push
icebp
or
xor
jp
mov
loope
mov
inc
movsl
cmp
and
sub
add
lret
mov
dec
or
pop
mov
fwait
mov
mov
jecxz
or
cmp
into
inc
mov
out
xchg
jo
push
into
loop
subl
test
xor
outsl
gs
mov
cmp
fsubr
and
cmc
mov
mov
aaa
jl
xor
jb
aad
xchg
mov
data16
inc
sbb
inc
jle
int3
sahf
xchg
push
add
sbb
ds
fstpt
fimull
jns
cltd
sbb
push
adc
aad
test
push
sbb
push
push
iret
arpl
mov
inc
out
idivl
jnp
sbb
inc
xor
sub
inc
jnp
cwtl
xlat
cltd
mov
dec
dec
jl
lahf
test
int
sti
xor
inc
pop
sub
and
rcrl
fstpt
add
jo
and
xchg
fstpt
cmpsb
push
inc
xlat
xchg
and
insb
aaa
hlt
xchg
femms
das
pusha
pop
ret
mov
or
out
loope
push
mov
sub
fildl
dec
mov
mov
fmull
fistpll
adc
or
out
inc
inc
iret
mov
ds
cmp
mov
nop
jge
int
jno
addb
rorb
inc
fidivs
push
stc
test
mov
fmuls
scas
daa
in
sahf
repz
fs
inc
stos
repz
popf
mov
xor
aaa
and
adc
outsl
jne
mov
and
fs
xchg
stos
js
js
cmp
mov
leave
jno
leave
std
push
push
inc
or
out
inc
cmc
fldl
sbb
cmp
pushw
cmp
outsb
push
adc
pushf
push
jecxz
rolb
into
inc
jbe
push
push
imul
mov
cmpsl
popa
ret
and
in
xchg
inc
daa
adc
xor
inc
es
fucomip
pop
xor
xchg
andl
or
int3
xchg
pushf
and
imul
cmovp
sbb
addb
mov
lds
minps
dec
cmpb
jb
pop
xchg
imul
in
dec
push
popf
imul
inc
cmp
mov
sub
dec
notl
fwait
xor
push
call
xchg
insb
dec
dec
rcr
lds
cmp
arpl
mov
call
mov
and
cmp
shll
call
es
inc
sub
push
test
fs
lcall
je
cmp
daa
cmpb
scas
je
inc
icebp
jmp
cmp
push
add
jge
ja
aad
mov
fimuls
mov
jne
and
and
lock
fcoms
mov
ss
or
pop
push
sbb
pop
adc
sahf
mov
or
pop
push
fwait
or
outsl
mov
int
ljmp
aam
pop
ret
lret
or
mov
mov
mov
fiadds
add
mov
scas
pop
mov
fsubr
jae
or
out
pusha
sti
sub
jno
cmp
add
mov
repnz
dec
mov
push
cmp
xor
mov
add
mov
lea
sub
pop
dec
push
push
and
mov
push
and
pop
outsb
add
or
xor
pop
roll
fisttpll
iret
dec
daa
call
std
aad
and
shrb
out
jle
into
imul
push
por
jns
ja
outsb
lods
dec
jno
fildl
sahf
push
pushl
jmp
lret
add
push
mov
jmp
jb
testl
and
out
lahf
xor
sub
add
xor
push
out
inc
dec
xchg
jmp
pop
aam
enter
add
and
or
cmp
inc
jbe
les
fisubrl
popf
push
les
pop
cmp
sub
xchg
js
call
lea
dec
ljmp
jns
lahf
std
sub
sbb
cld
mov
fisttpll
sub
mov
rcl
mov
and
insb
inc
add
fwait
sar
mov
pop
xchg
dec
cmpb
and
mov
cmc
cltd
popf
bnd
rcr
pop
frstor
incb
insb
jnp
nop
sub
in
xor
stc
lahf
dec
push
out
jl
iret
hlt
ss
les
inc
out
mov
test
lock
inc
lcall
sub
and
inc
icebp
xlat
fimuls
in
add
mov
inc
add
pop
imul
push
popf
xor
cmp
push
imul
jecxz
mov
cmp
sub
and
inc
andl
adc
inc
icebp
dec
inc
call
push
and
aam
sub
cmpb
mov
jge
mov
popa
and
adc
and
repz
jge
stos
dec
enter
into
loopne
shr
dec
lods
into
xor
mov
in
not
sti
or
jae
es
mov
gs
fildll
repz
jl
fcomp
push
outsb
inc
or
mov
dec
sub
sbb
lahf
fwait
pop
mov
jge
jl
push
outsl
cli
ds
push
sahf
cli
test
push
aam
cmp
lea
aas
lock
ficomps
dec
insl
jb
aaa
leave
lods
test
xchg
bound
mov
lret
push
add
jle
inc
iret
jecxz
pop
and
pop
pop
pop
push
push
dec
xor
push
xchg
adc
mov
cltd
fsubr
rcrb
pop
adc
adcb
mov
in
lss
and
jl
mov
out
push
stc
daa
pop
push
bound
outsb
jb
clc
add
inc
or
mov
ret
cmp
jns
nop
cs
les
out
inc
add
in
imul
mov
pop
dec
inc
jl
cmpsl
mov
stos
mov
mov
xor
insb
fscale
and
cmp
mov
sub
sbb
cmpl
push
mov
repnz
jle
notl
mov
and
dec
sarl
popa
pushf
mov
loop,pt
movsl
mov
adcb
popa
add
add
sbb
int3
enter
sub
cmp
lods
ljmp
mov
push
jle
push
or
dec
call
push
ljmp
push
mov
cmp
insb
rcr
dec
dec
pop
stos
bound
pop
movsb
iret
and
je
ret
mov
xchg
lock
sbb
fldt
xchg
mov
gs
pop
std
dec
xchg
or
leave
jg
sbb
bound
or
jg
xchg
xor
mov
and
pop
push
and
lret
push
pop
ja
shlb
movsb
stc
inc
inc
inc
rorb
mov
dec
mov
xchg
cmp
xchg
fsubs
sbb
outsb
lock
data16
and
ljmp
sbb
xchg
jae
add
shl
mov
pop
outsb
les
cld
mov
sub
push
mov
xorb
sbb
call
jmp
loop
jge
insl
faddl
jnp
rclb
jnp
mov
enter
rorl
sti
push
xchg
mov
insl
cmp
enter
sbb
dec
rolb
inc
in
push
jne
lods
cmpsb
mov
lahf
fwait
stc
fimuls
pop
jo
inc
push
adcb
pop
fmull
jo
fs
test
ja
cmc
mov
enter
fcomip
dec
xchg
stc
leave
adc
lds
add
lds
push
mov
je
xchg
xor
sub
mov
jl
xor
xor
and
mov
xchg
scas
mov
pop
push
pop
nop
mov
xor
or
movsb
lret
pop
sbb
stos
in
int
jns
inc
xor
mov
mov
jnp
xlat
mov
jnp
in
inc
push
mov
pusha
dec
je
fxtract
mov
mov
mov
mov
jbe
fpatan
xor
hlt
mov
or
push
je
sub
mov
cld
or
ss
lea
lret
mov
add
sub
in
or
roll
mov
test
add
repz
insb
or
xchg
and
inc
mov
lods
pop
fcompl
sub
mov
sub
mov
fists
mov
int3
loope
mov
and
push
cmp
dec
cmp
int
xchg
leave
mov
hlt
push
lret
cli
lea
add
idivl
jecxz
pop
fistps
mov
jne
adc
rcll
jge
aam
add
daa
ret
int
cmp
int3
adc
rcrl
xchg
mov
ds
add
cmp
icebp
cmp
add
jns
outsl
aaa
imul
out
push
mov
jo
faddl
adc
out
jg
dec
inc
xchg
xchg
add
mov
xlat
and
push
lcall
add
pmaxsw
jo
aaa
mov
mov
scas
pop
inc
in
xchg
out
sub
add
adc
adc
popl
mov
jbe
fidivrl
jno
inc
push
sti
flds
in
test
and
lret
inc
pop
jo
lcall
xlat
out
shll
cmp
dec
insl
sub
push
inc
sbb
sbb
stos
inc
adc
stos
push
dec
xor
fisubrl
in
push
push
adc
pop
loop
add
pop
popl
aad
push
or
out
xchg
xchg
cwtl
test
orb
sbb
push
push
fmuls
jl
sub
mov
push
jg
jb
cmp
cld
jmp
es
fsubrs
mov
sbb
push
shrl
test
fwait
mov
and
into
pop
mov
sbb
sbb
ja
dec
push
rol
fstpt
arpl
dec
sbb
bound
jecxz
push
movsl
sahf
and
pop
gs
adc
in
xlat
lea
fstpl
outsb
pop
inc
testl
pop
mov
xor
xor
nop
nop
movsl
insb
pop
or
int
mov
aad
bound
fcom
push
dec
aad
xor
repz
ret
push
dec
sbb
add
mov
out
outsl
cli
cmp
insl
pushf
mov
inc
and
cmp
pop
mov
xor
ljmp
icebp
orb
andl
fisttpll
cld
xchg
lahf
and
fistl
fisubrs
xor
xchg
fmuls
xor
fisttpll
and
addr16
pusha
cmc
adc
stos
bound
rcrl
js
lock
loop
pop
adcl
sti
lock
jecxz
add
add
outsl
mov
lods
xchg
fmul
push
mov
sub
add
jp
repz
test
mov
and
ficoml
std
repz
adc
scas
fdivr
aad
add
lcall
add
test
fwait
lods
out
ret
fildll
call
pop
cld
xor
sub
hlt
sub
fisubs
sbbl
icebp
mov
rcr
inc
fcmovbe
dec
dec
pop
sbb
decl
lods
inc
xchg
add
pop
mov
dec
sbbb
jle
cmp
adc
or
enter
enterw
xchg
nop
cwtl
movsl
push
shll
add
mov
rcll
stos
stc
cli
or
jbe
mov
das
lock
or
xchg
rol
adc
pop
lods
push
sbb
gs
push
mov
gs
bound
stos
add
cmc
cmp
sbb
and
lock
repnz
cmpsb
fidivrs
out
xchg
ret
mov
repz
cmpsl
adc
mov
xchg
lret
mov
scas
aaa
repz
sub
gs
cmpsb
les
subb
dec
push
mov
add
inc
iret
inc
sub
imul
jnp
in
cltd
dec
dec
into
std
inc
jge
jae
movl
and
test
outsl
in
imul
and
xchg
imul
push
push
enter
sbbb
cld
dec
in
or
cld
push
push
pop
aam
das
popf
cmpsb
push
cli
add
add
pop
fwait
add
sti
je
insb
fisubrl
cmp
mov
mov
add
outsl
xor
shll
mov
sbb
js
add
jbe
xor
mov
jg
mov
mov
mov
mov
jl
stc
add
nop
stc
leave
hlt
loopne
push
or
iret
int3
sbb
jae
cmpb
ret
push
mov
icebp
pop
or
sbb
mov
jae
push
and
adc
and
cmp
paddw
gs
loop
cmp
cwtl
xor
lret
ret
in
cmp
insb
out
inc
mov
mov
lret
and
mov
das
mov
pop
adc
pop
jle
sub
xchg
or
mov
movsb
les
jmp
cmp
jp
mov
adcl
push
cmp
and
lds
and
movzbl
stos
es
jo
dec
xchg
and
test
mov
xchg
mov
inc
mov
data16
test
adc
cld
inc
enter
int
incb
dec
xchg
cwtl
sub
insb
dec
andb
jle
ds
das
dec
out
dec
lods
pop
xor
mov
sar
mov
roll
pop
mov
dec
fisttpll
cmp
pop
jl
lahf
lock
mov
mov
pop
xchg
mov
fildll
xchg
or
pop
mov
sbb
and
sbb
mov
adc
in
fs
clc
push
jecxz
bnd
adc
ret
cmpsl
clc
pop
mov
inc
lods
jo
mov
push
cmpsl
lret
insb
das
mov
or
das
cmc
sbb
test
in
cwtl
add
inc
je
fwait
dec
lods
outsl
mov
xor
out
add
sbb
out
xchg
add
xchg
bound
movsb
or
stc
jp
push
dec
mov
push
enter
sbb
dec
out
xor
mov
inc
pop
mov
jg
jb
mov
lcall
mov
stc
pusha
jns
cltd
mov
fisttpll
cs
jmp
fisubrs
test
inc
and
lcall
faddl
add
icebp
push
xchg
pop
or
jae
inc
xor
sub
mov
out
sub
inc
jne
push
movsl
pop
shll
pop
data16
xor
loopne
and
mov
int3
push
popa
mov
out
out
imul
pop
aaa
or
pop
das
ds
je
stos
jg
add
cmp
fnstcw
mov
mov
shl
les
daa
mov
rorb
cmpsb
popf
aas
pop
ds
pusha
out
push
fs
int
inc
mov
jp
dec
jne
lcall
sbb
push
aas
or
rorl
sub
sub
inc
into
push
and
push
push
movsb
rcll
push
leave
sub
pop
sub
in
leave
icebp
in
nop
cmc
es
push
sub
cmp
xchg
inc
mov
cmp
dec
lods
inc
inc
jg
sbb
push
and
mov
mov
push
pushf
fucomp
daa
and
shr
imul
sarb
xor
hlt
nop
loop
xor
mov
and
in
js
loop
popf
insl
outsb
and
test
adc
insl
pop
jno
mov
pop
shll
lret
mov
jle
aaa
inc
dec
call
xor
lret
fsubp
sbb
mov
les
out
pop
inc
xchg
cli
je
or
add
mov
cmp
cmp
icebp
ds
pushf
xchg
sub
add
cli
and
jl
fistps
stc
scas
sbb
es
call
pop
movb
fld
ret
jg
push
mov
scas
cmp
xlat
add
lea
and
test
mov
lds
sar
shlb
add
push
push
fs
das
ror
cmpsl
or
testb
pop
pop
add
cli
jg
add
popa
fs
jle
xlat
sub
cmp
insb
mov
add
pop
lahf
fstpt
add
cmp
dec
mov
push
dec
outsl
sub
mov
mov
frstor
cmp
loope
in
cmp
das
or
in
cmp
push
add
push
mov
icebp
mov
into
fs
icebp
das
sahf
lret
mov
fadds
bound
rcll
dec
js
leave
rcr
mull
shrl
js
adc
aaa
cmp
cmp
rcrl
in
nop
dec
icebp
adc
sbb
shlb
fs
cmp
xor
dec
fs
call
mov
dec
pushf
push
pop
pop
rcll
or
mov
movsb
cmc
xor
ret
dec
ja
add
fcoml
cmp
bound
jp
or
xchg
es
out
divl
div
push
push
mov
mov
push
xor
sbb
fcmovnu
jmp
test
pop
ds
adc
pop
and
inc
fcoml
lock
push
sub
icebp
mov
adcl
lcall
mov
sub
adc
movsl
xor
and
cmp
ljmp
add
push
dec
stos
out
add
mov
cs
mov
sub
sarb
mov
sbb
jo
push
mov
fstl
movsb
mov
mov
mov
popl
push
sub
cmp
fcomps
jns
out
mov
pop
mov
sti
cmp
mov
insl
pusha
addr16
xor
out
xchg
dec
pop
fwait
lahf
aas
sub
add
test
lret
out
jle
cmp
mov
push
arpl
or
xchg
mov
outsl
mov
inc
jo
mov
push
xchg
and
add
fnsave
stc
rcrl
pop
jno
cmpsb
inc
lcall
or
fstl
cmp
sub
rclb
mov
pushf
inc
mov
mov
xchg
mov
lret
fildl
mov
cltd
arpl
xor
dec
xchg
mov
adc
adc
push
test
int
lock
jg
fiaddl
aad
jge
jmp
sub
jne
fcoms
pop
loop
sub
ffreep
sahf
insl
push
adc
fwait
lods
sahf
push
dec
int
mov
xchg
sbb
cli
test
xor
sbb
sti
cltd
stos
loop
clc
aas
mov
inc
pushf
push
lret
jle
loop
leave
jnp
mov
pop
sub
ljmp
outsl
push
sbb
or
ljmp
jno
and
mov
xor
ljmp
mov
std
popa
imul
mov
add
stc
inc
movsb
lock
push
bound
cli
scas
xchg
pusha
sbb
out
cli
in
js
mov
jae
push
cmp
jmp
aad
or
cli
mov
sbb
aas
mov
or
movsl
xor
cmp
icebp
cmp
jg
push
add
insl
lods
faddl
rorl
xchg
in
movsb
xor
jne
xor
cmc
jno
leave
iret
mov
jae
notl
pop
jne
je
mov
sub
dec
outsl
mul
loope
icebp
jns
loopne
pop
pop
sbb
xchg
and
mov
es
xchg
jge
and
jns
repnz
mov
ret
sub
fs
fsubp
jbe
sbb
sbb
and
insl
lcall
push
stc
mov
mov
mov
movsl
and
cmp
je
cmp
sub
xchg
js
sub
test
fdivs
shlb
in
and
inc
cmp
inc
jb
pop
icebp
jge
test
sub
stos
loope
stos
mulb
mov
fmuls
adc
mov
mov
out
iret
ret
into
fucom
adc
jmp
jmp
addr16
or
and
push
mov
cmpsl
pop
leave
je
arpl
scas
xchg
push
decb
in
es
into
aad
movl
sbb
push
inc
lods
push
scas
jo
int
lret
mov
cmp
bound
jne
imul
stos
cmp
orl
and
popf
and
sarl
sub
adc
jae
mov
outsb
xchg
and
pop
mov
iret
add
adc
loop
lds
shr
adc
sbb
jno
push
sub
add
or
clc
iret
inc
dec
lret
idivb
and
xor
adc
push
add
addl
push
loope
lret
adc
push
cs
cmpsl
enter
pop
sub
clc
sahf
dec
popf
shrb
addr16
sbb
adc
cmp
in
adc
or
adc
ret
dec
or
icebp
mov
sub
jns
adc
mov
gs
insb
jge
negl
insl
dec
or
test
subb
pop
and
pop
aam
in
cmp
cmp
dec
xor
and
pop
jmp
gs
or
mov
sarb
xor
cld
pop
mov
insl
ret
and
xchg
cli
fmuls
pushf
cmp
stos
mov
cmp
adc
out
dec
push
outsb
imul
jnp
in
sub
sub
or
int3
mov
add
mov
insb
test
pop
pop
andl
in
daa
pop
arpl
cmp
or
jecxz
jne
adc
adc
mov
rcrl
imul
lock
xchg
fwait
dec
jns
popf
daa
cmp
inc
out
cmc
pop
cmp
sbb
ficoms
les
icebp
lea
das
insl
sub
pushf
lret
sbb
roll
outsl
xlat
js
lods
ss
cmp
inc
xchg
xchg
getsec
jecxz
sar
nop
sahf
sub
and
movlhps
arpl
pop
dec
clc
pop
push
adc
push
xchg
dec
cmp
out
stc
pushf
push
nop
add
pop
pop
fldt
bound
lcall
ljmp
mov
mov
fnstsw
cli
jg
inc
sbb
adc
pushf
lret
xchg
jnp
add
movsl
pushf
or
jg
push
addr16
lds
mov
jb
mulb
arpl
cld
xchg
jle
imul
jnp
xlat
pop
loope
xchg
inc
inc
and
or
outsl
jecxz
push
or
movb
mov
mov
push
ljmp
daa
mov
push
and
inc
dec
int3
xor
inc
xchg
test
lahf
add
sbb
mov
xorl
test
mov
aas
sbb
ljmp
sub
dec
jbe
dec
mov
loope
clc
xchg
cmp
imul
xor
cmp
lahf
ljmp
push
cmp
movsb
sbb
cld
adc
mov
into
mov
push
sbb
hlt
xor
push
pop
push
icebp
dec
test
mov
out
dec
push
insb
mov
push
cmp
or
pop
mov
cmc
cmp
pop
cmp
test
add
test
inc
lea
push
test
jge
push
jg
ja
subl
mov
jge
rcll
cmpsb
js
add
dec
jle
mov
and
or
loopne
test
lods
xchg
insl
cli
popa
xor
inc
xor
imulb
jnp
push
fwait
mov
out
jp
mov
push
arpl
mov
jle
push
and
fcomp
test
out
fwait
mov
pmuludq
js
and
or
cmp
pop
imul
xlat
pop
xor
in
ljmp
js
jae
push
pusha
gs
lret
xchg
lret
into
jg
xchg
test
data16
cmc
pop
jne
cmp
aad
int3
push
popa
mov
addl
add
outsb
inc
xor
push
jo
add
sbb
cmp
pop
sbb
push
push
out
jno
adc
mov
dec
lock
or
or
dec
pop
int3
xchg
jne
cld
jae
movsb
and
ret
push
jns
push
push
dec
mov
dec
pop
fwait
cmp
and
stos
lret
movsb
xchg
sub
sub
sub
cltd
lds
rcrb
mov
push
rolb
gs
jb
xchg
cmp
pop
in
dec
adc
mov
dec
ret
inc
inc
js
enter
cmp
sbb
rclb
jg
test
stc
std
testl
add
bound
fbld
mov
and
cmp
mov
mov
mov
cmpsl
push
or
sub
inc
jno
ror
xchg
adc
push
ljmp
push
xchg
sbb
push
sub
cmp
lock
dec
add
jnp
fwait
gs
leave
sbb
jae
mov
cwtl
imul
or
mov
dec
movsl
jb
aaa
inc
xchg
fcoml
shrb
mov
fbld
inc
or
mov
in
cmp
lods
lret
add
push
dec
lds
sbb
mov
insl
out
adc
dec
cmp
dec
push
cwtl
add
in
out
cmp
pop
addl
sahf
jl
sbb
jmp
push
xchg
push
or
or
pop
rcrl
add
dec
pop
xchg
decb
pop
xchg
std
les
mov
bound
fdivl
or
and
xor
popa
xlat
dec
sub
lahf
mov
dec
addr16
movsl
dec
jns,pn
mov
sbb
fldenv
dec
xchg
adc
loopne
dec
jge
orl
push
jns
dec
ljmp
xlat
insb
fucomp
sub
xor
cmp
mov
jae
push
cwtl
sbb
cmpsl
pop
fimull
imul
inc
cmp
xchg
jae
xchg
roll
aad
mov
cmp
xchg
iret
jne
push
mov
mov
push
or
sbb
adc
jo
xchg
cwtl
lret
xor
subb
jecxz
jle
xchg
xorb
arpl
out
sarb
jne
or
xchg
xor
loope
lret
enter
cld
mov
leave
xor
mov
push
idivb
repnz
add
inc
js
stos
fcomps
or
ss
das
in
sub
or
push
add
inc
jl
jae
xor
fbstp
cli
xor
cmp
xor
xchg
dec
fucom
mov
or
int3
cmp
sahf
cmp
sbb
cmp
hlt
sub
add
sbb
mov
hlt
add
dec
test
jo
cmp
sub
repz
inc
inc
dec
stc
mov
cmp
mov
fldl
bound
cmpsl
xchg
cs
or
mov
adc
or
cld
fwait
cmp
mov
pop
in
ss
xchg
push
xchg
inc
mov
out
fcmovnb
test
or
imul
jnp
sbb
or
add
and
cmc
sub
inc
sub
sbb
or
stos
insb
and
xchg
inc
cmp
repnz
xlat
pop
in
inc
lea
loope
aam
mov
push
cmpsl
xor
sub
repnz
ret
sub
pop
and
ljmp
repz
or
push
mov
arpl
test
inc
outsb
mov
jmp
enter
std
mov
mov
sbb
int3
ror
aad
sub
movsb
xchg
push
shrb
test
xchg
in
sub
push
jne
stos
in
loop
sti
aas
jns
cmp
sub
rorl
or
lcall
or
mov
iret
add
xor
je
leave
out
inc
sbb
dec
jo
int3
ljmp
and
mov
or
shll
std
lea
mov
adc
enter
mov
pop
clc
rorl
mov
mov
dec
xchg
pop
aaa
inc
xchg
mov
jb
ror
inc
inc
mov
pop
inc
repz
or
cmp
and
lds
add
adc
fwait
xor
mov
out
jne
popf
inc
jmp
stos
sub
pushf
add
out
outsb
add
pushf
pop
cmc
stos
jge
sbb
pop
movsl
out
cld
jnp
shrb
add
cld
and
addr16
sbb
push
lock
addr16
ljmpw
jne
leave
movsl
jnp
sub
cli
add
push
cltd
jne
daa
dec
ss
sbb
pop
and
or
push
in
add
sbb
mov
or
nop
clc
pop
dec
imul
pop
sub
mov
fadds
inc
jecxz
popl
cmp
int
ss
cmc
adc
shl
sbb
push
jmp
cmpsl
jo
inc
sarb
push
nop
movsb
add
or
pop
mov
mov
aaa
jp
xchg
sub
addr16
aad
or
xor
rorb
ret
mov
les
fildl
popf
data16
inc
adc
jmp
push
ja
repz
addr16
lcall
mov
int3
pop
enter
rcrl
xor
pusha
pop
adc
sbb
fwait
shrb
xor
jnp
mov
jbe,pn
popf
leave
add
outsb
movsl
push
mov
xor
add
add
mov
scas
add
push
subl
mov
pop
in
lcall
or
inc
les
dec
pop
lock
lods
loopne
xlat
lcall
push
add
clc
adc
inc
lret
mov
mov
dec
or
icebp
or
push
repz
pop
push
fdivrp
xchg
jp
int
pop
mov
fs
jmp
push
cwtl
mov
xchg
xchg
or
sbb
adc
imul
xchg
inc
inc
pushf
dec
test
xor
add
push
and
adc
push
add
xchg
dec
or
bound
call
pop
dec
mov
fs
fisubs
popf
mov
sub
movlps
jmp
push
or
inc
ljmp
lcall
loope
cs
fnstsw
fdivrl
jbe
sub
dec
lds
ljmp
lods
push
ds
cmp
lret
es
lahf
pop
in
add
dec
arpl
loop
into
xchg
div
je
push
jg
hlt
xchg
mov
dec
xor
adc
jne
or
aam
mov
jb
jb
inc
bound
xor
incl
and
insb
stos
cld
mov
sbb
xchg
cwtl
mov
stc
jge
data16
aam
jno
fistpll
cmc
push
js
int3
and
insb
mov
push
mov
mov
fmulp
popa
fadd
cli
sbb
inc
jp
xchg
xlat
leave
cwtl
ficompl
jnp
int
pop
rclb
fistpl
xor
test
sahf
aas
shlb
jnp
or
cmpsb
je
jbe
pop
jnp
inc
popa
push
mov
adc
bound
mov
mov
hlt
gs
repnz
stc
mov
aad
jb
push
das
sahf
stc
in
sbb
mov
stos
negb
and
or
xor
in
jmp
push
sarl
push
subl
or
cwtl
lret
sbb
divl
jnp
lock
xchg
rcrl
loopne
push
xchg
fimuls
aad
in
and
test
cmc
inc
sti
inc
inc
pop
adc
cmp
mov
push
fstl
in
sub
xor
xchg
insl
js
cmp
imul
dec
or
in
iret
jge
adc
lret
int
aam
adc
xchg
cmp
std
out
aam
cmpsb
inc
ja
call
loopne
leave
push
cs
add
in
inc
mov
jl,pt
subl
into
pop
pusha
and
in
aam
pop
xor
mov
inc
xor
js
add
add
push
or
xchg
pop
pushf
and
test
xchg
jnp
inc
cltd
jecxz
xchg
sub
jl
cmpsb
cmp
mul
cmp
xor
jo
in
mov
mov
mov
push
fwait
jl
insb
shrl
inc
push
mov
inc
in
stos
jae
std
orb
and
mov
sub
cmp
cmp
das
adc
cli
leave
jge
das
es
cmp
cltd
mov
and
push
or
adc
lret
push
sub
or
xchg
loope
mov
mov
jbe
mov
lahf
jb
outsl
jae
hlt
out
mov
add
int
bound
call
push
sti
mul
stc
int
dec
les
inc
sahf
mov
in
rolb
and
mov
aam
rcll
cld
push
xchg
enter
adc
stos
push
les
push
sbb
xchg
mov
mov
pop
imul
negl
in
jnp
nop
lock
out
orb
arpl
sbb
or
dec
adc
imul
aam
mov
gs
cltd
stc
mov
testl
xor
pushf
aaa
cltd
and
dec
lods
mov
mov
mov
stos
pop
mov
mov
int3
ljmp
pop
inc
xchg
xchg
stos
aas
decl
lret
repz
jb
lods
jo
rcrb
xchg
pop
out
pop
xchg
pop
mov
pop
imul
mov
repnz
pop
or
push
lea
xchg
js
adc
pop
push
and
lock
cmp
cmc
aad
pop
dec
pusha
push
dec
adc
pop
jl
js
or
fildll
lret
icebp
addr16
cmpsb
inc
sbb
add
add
mov
in
adc
and
pusha
mov
sub
add
notl
gs
dec
je
cmpsb
std
test
or
into
xlat
add
ds
pop
inc
enter
nop
cs
xchg
cld
aad
fldt
icebp
add
dec
pop
sbb
das
push
pop
popa
cs
dec
sbb
jo
filds
enter
xor
cmovnp
mov
cmp
mov
jnp
insb
jmp
push
sbb
sub
lcall
daa
aad
test
loop
xor
in
xchg
pop
fisubrl
and
jo
cld
enter
inc
js
and
and
scas
js
subl
jl
push
inc
sbb
leave
and
push
dec
iret
out
ffreep
ljmp
sbb
xor
add
ret
outsb
mov
cmp
mov
daa
daa
stc
pop
pop
xchg
insl
mov
dec
dec
cmp
xor
cmp
stc
sub
jne
lcall
mov
andl
mov
add
jp
mov
int
aam
mov
imul
jp
sbb
bound
mov
adc
out
ss
sub
cmp
jp
mov
test
mov
adc
xchg
cs
mov
popf
xchg
outsl
xchg
sub
mov
cli
push
pop
inc
lret
mov
fmull
jnp
not
mov
mov
aad
jns
andb
clc
inc
mov
fdivl
std
cld
fmul
test
mov
sub
mov
adc
sbbl
daa
jo
enter
cmpb
and
or
hlt
fcoms
jl
cmpsl
ljmp
lds
jge
cmpb
or
xor
daa
fstpt
xchg
aad
push
das
iret
sbb
xorl
mov
jb
lcall
pop
mov
cmp
aas
xchg
aad
in
test
daa
jae
cli
mov
push
dec
sbb
stc
push
dec
lahf
es
lods
cwtl
in
xor
mov
xorb
mov
xorb
scas
lods
loopne
out
xchg
jns
xchg
lock
sbb
notb
push
mov
jmp
jp
jge
lock
imul
call
jns
dec
and
cmp
xor
mov
stos
add
or
pop
mov
xor
inc
cmc
int
loopne
or
adc
sbb
lahf
xorl
ss
mov
mov
scas
ret
gs
pop
mov
or
les
push
add
movsb
cmp
mov
push
add
nop
inc
addl
mov
and
xchg
xor
test
or
xor
mov
mov
pop
xchg
push
lcall
pop
or
outsb
jl
enter
jno
shr
in
jb
sbb
inc
xchg
aas
cmpsl
mov
in
loope
std
jg
pop
mov
imul
in
in
mov
mov
lahf
jge
mov
and
xor
adc
mov
movsl
test
scas
mov
mov
xor
mov
daa
enter
xor
stos
mov
rol
outsb
fildl
cwtl
dec
lret
or
push
mov
lret
sub
fcoms
jg
cmpl
xchg
sahf
sub
testl
xchg
test
sbb
dec
or
cwtl
inc
and
roll
mov
and
js
lcall
sub
sub
cli
ljmp
push
xchg
es
pop
stos
adcl
dec
pop
adc
adc
push
call
jecxz
nop
lret
mov
in
popf
ret
aas
insb
shrb
lods
subb
cmp
push
xchg
jo
xchg
cld
sub
insb
pop
sub
sbb
push
mov
or
sbb
and
push
imull
les
addl
in
cwtl
push
lods
daa
das
ljmp
insl
leave
cmp
test
pop
movsb
ja
mov
xor
fucomi
mov
fistl
stos
cmc
out
add
jno
jbe
in
in
out
or
sbb
pop
mov
lcall
cmpsl
ds
pop
xlat
xchg
adc
xchg
cmp
cmc
repz
sub
gs
stos
aas
mov
add
jg
lahf
dec
rcll
jbe
dec
rolb
cmpsb
add
out
inc
fdiv
loop
mov
stos
fnsave
loopne
and
je
push
jae
sbb
xchg
cli
pop
js
and
dec
cmpsl
mov
sbb
cltd
fmul
mov
push
mov
jp
jns
sbb
xchg
cmc
sub
cltd
dec
push
mov
xor
out
sbb
jae
test
push
cmp
and
mull
aaa
sbb
mov
mov
sub
sbb
sbb
pop
inc
adc
jmp
and
xchg
insb
cmp
xor
and
and
ds
cwtl
hlt
cmc
push
cmpsl
jne
push
xchg
mov
inc
adc
shlb
ficoms
inc
fdivr
test
dec
mov
adc
mov
incb
packssdw
cmp
test
mov
das
push
cmp
mov
sub
mov
cwtl
insl
mov
ror
fnsave
sbb
jae
pop
mov
test
cmpsb
pop
and
cs
lret
pusha
inc
lahf
push
push
in
inc
repnz
cltd
xchg
xchg
jge
inc
mov
sbb
sub
push
and
loopne
and
fisttps
lock
cmp
pop
in
in
xorb
scas
mov
stc
loope
xchg
fiaddl
loop
jle
push
fadds
lahf
cmp
xchg
imul
cmc
lret
xchg
data16
mov
sbb
mov
and
mov
mov
pop
jmp
inc
pop
and
or
jle
test
pop
pop
jl
mov
sahf
adc
inc
lcall
jl
jno
fcomps
lock
fcompl
adcb
cmpsb
stos
call
movsb
pop
scas
xchg
lahf
aaa
mov
xlat
sbb
mov
jb
loop
test
int3
and
fwait
xchg
sbb
out
adc
xchg
sbb
sub
fistpll
mov
arpl
inc
popf
adc
js
mov
and
out
decb
jae
xchg
loopne
sbb
sub
stos
inc
stc
mov
loopne
loope
adc
or
in
xchg
cmp
cmp
fcoms
mov
pop
and
leave
fstl
mov
call
pusha
sub
test
or
out
inc
ret
lret
outsb
xchg
outsl
imul
mov
sbb
and
es
arpl
pushf
mov
or
fstpt
mov
dec
cmp
push
mov
aaa
movsb
cmpsb
jg
aaa
rorl
sub
or
mov
lahf
in
aam
insl
dec
testl
dec
mov
push
pop
adc
cli
xchg
dec
lods
xor
jg
loop
cmp
inc
jne
push
mov
mov
hlt
lds
mov
push
stc
js
xchg
add
mov
jecxz
or
stc
outsb
mov
jle
insb
dec
mov
sbb
jae
lods
sbb
fistpl
insb
bound
sbb
iretw
into
outsl
subl
or
cmc
mov
mov
pushf
rcl
test
js
pop
imul
or
inc
sub
adc
mov
xchg
in
ret
in
xor
or
icebp
lds
rcrb
sbbb
xchg
xchg
ljmp
sarb
rorb
xchg
dec
lcall
jns
add
xor
clc
loopne
push
adc
mov
das
ss
loope
insb
insb
sub
xor
mov
popa
sub
xchg
cmp
repz
in
mov
repz
xchg
or
in
mov
popf
bound
rcrl
lock
fstpt
mov
sub
test
sbb
lods
movb
iret
or
mov
popa
test
sbb
adc
dec
imul
out
repz
jg
mov
repnz
cmc
pop
jne
gs
lcall
popa
jle
repz
subl
lahf
icebp
gs
iret
ja
xchg
sbb
loop
add
jg
mov
or
add
js
mov
jb
sub
aaa
mov
in
inc
test
add
pop
dec
popl
pop
fiadds
cmc
sbb
xor
pusha
pop
add
adc
inc
push
insb
mov
das
push
outsb
js
cltd
cmp
ficompl
mov
lock
mov
int
cmp
into
sbb
mov
inc
adc
jecxz
pop
adc
or
dec
or
movsb
or
pusha
adc
jmp
mov
aaa
rcrl
xchg
dec
xchg
cmc
shlb
test
fildl
cmp
pop
add
sbb
adc
ficompl
sub
cmp
insl
inc
mov
inc
dec
cmp
stos
xor
xchg
nop
mov
pop
dec
and
stos
mov
scas
loopne,pt
jo
rorl
xor
mov
shll
test
inc
sub
lea
pop
sub
sti
mov
pushf
in
inc
cmp
cmpsb
push
imul
addr16
xchg
icebp
push
xor
cmp
outsb
lcall
push
inc
incb
sbb
add
nop
out
or
and
xchg
xor
and
jb
pop
movsb
dec
outsl
jbe
mov
loope
mov
and
inc
mov
dec
jg
or
test
mov
or
dec
jg
lea
clc
add
mov
lods
shrb
pause
cld
sbb
cmc
xchg
mov
inc
cmp
notl
cmc
lods
push
js
adc
iret
cmp
mov
sarb
inc
mov
mov
sub
push
mov
js
xchg
and
mov
xor
into
push
push
dec
cmpsl
pop
jns
mov
mov
and
test
int
insl
ds
in
sarb
push
out
out
div
jmp
ss
pusha
fbld
push
add
shll
mov
icebp
xor
aaa
inc
out
or
add
dec
ret
ror
cltd
shl
sbb
js
test
iret
cltd
or
jns
jp
mov
xchg
pusha
dec
mov
outsl
xor
sub
arpl
lock
sahf
lds
xchg
cltd
fs
mov
lcall
adc
push
and
push
sub
xor
stos
jl
outsl
add
fadd
jl
sbb
test
sbb
loop
sar
mov
lcall
dec
jl
sub
imul
mov
add
mov
jl
and
jmp
push
lods
cmpsl
lcall
cmovae
sub
fdivrl
push
add
mov
scas
push
into
fcmovne
push
mov
scas
cld
add
inc
arpl
push
add
dec
pop
es
icebp
nop
mov
mov
sub
pop
dec
add
in
and
push
mov
mov
int
push
rclb
rorl
cmp
pop
and
arpl
mov
add
cwtl
cmp
cmp
push
adc
push
and
lret
jns
add
and
push
and
sub
mov
mov
and
movsl
cmp
pop
add
insb
or
sbb
stos
test
ret
mov
addr16
ss
sbb
lods
push
orb
out
addb
push
ret
test
adc
and
pop
mov
jbe
not
or
je
dec
fisubs
dec
mov
jecxz
xchg
or
dec
mov
outsb
pusha
ljmp
leave
mov
popl
test
out
pop
dec
dec
fcmove
sti
mov
out
fs
xchg
scas
sbb
push
or
add
push
in
cwtl
sub
lret
jle
call
mov
repnz
nop
popf
outsb
aam
daa
lods
dec
jle
xchg
mov
lret
xor
mov
pop
cli
xchg
cli
stos
fcoml
shr
sub
iret
mov
in
pop
sysexit
mov
mov
fcompl
addr16
daa
xchg
lods
fnsave
shlb
mov
jp
jge
jb
push
xor
and
dec
lods
push
pop
sub
pop
insb
mov
fs
inc
add
sub
aas
mov
bound
imulb
jmp
xor
fstpt
cli
jge
add
mov
xchg
sbb
mov
add
xor
pop
psrld
push
sbb
lock
outsl
inc
and
xchg
xor
mov
addr16
sub
fadds
int
push
out
mov
daa
sub
add
fcomp
cmp
mov
or
fdivrl
out
loop
fisubrs
sbb
push
adc
stc
cmp
leave
int
inc
aam
jp
testb
pop
loope
rcl
and
vandpd
mov
movsl
sub
inc
mov
in
jo
pop
or
cltd
xchg
jmp
lahf
cmp
pop
dec
test
fisubrl
cmp
xor
movsb
mov
or
mov
jg
ss
cli
pop
or
incl
inc
clc
jno
enter
and
std
push
xor
sub
dec
ficomps
and
bound
mov
call
imul
xor
adc
and
arpl
lcall
sub
lock
cltd
inc
sbb
adc
ljmp
testb
imul
je
mov
sub
mov
push
xlat
jo
inc
pop
orl
push
scas
pop
dec
xchg
sbb
dec
fildll
outsl
lcall
jne
stos
push
stc
outsb
push
mov
jns
cmpsb
sbbl
mov
ljmp
ds
fcoml
fwait
push
std
and
and
mov
in
dec
jno
sub
sarl
fldt
cmpsb
lahf
mov
arpl
ret
xor
jne
cltd
pop
inc
or
enter
pushf
test
fldenv
insl
push
push
mov
dec
enter
int
or
movsl
mov
lods
inc
mov
addb
mov
dec
inc
jnp
dec
jmp
pop
insl
int
rorb
cli
repnz
sahf
insb
xchg
or
jae
cs
out
sub
jbe
scas
ja
cmp
cmpsl
push
push
cltd
mov
daa
shll
popl
pushf
pop
jecxz
mov
cwtl
dec
xor
or
aaa
push
jno
mov
push
call
mov
adc
sbb
xchg
stos
movsl
cmp
inc
inc
adc
jge
push
cltd
out
mov
mov
sub
dec
push
enter
mov
mov
pop
or
xchg
popf
xor
sbb
es
mov
inc
jle
adc
and
jmp
pop
popf
fdivs
cmp
inc
enter
lcall
lds
jb
imul
sbbb
out
sar
cld
leave
std
pop
add
data16
and
mov
push
ss
fldl
mov
jae
mov
push
add
out
into
and
and
add
xchg
xchg
popa
outsb
mov
std
insb
ret
pushl
xchg
mov
cwtl
mov
inc
shr
xchg
sub
xlat
xchg
dec
or
aaa
push
in
lret
sahf
or
inc
dec
adc
enter
out
add
movq
mov
fsubr
pop
popf
adc
test
das
and
int3
pushf
mov
test
push
xor
jne
xchg
lods
mov
aam
xlat
insl
cmp
andb
xchg
xchg
ret
pop
fwait
xchg
leave
popa
push
push
ret
adc
mov
outsb
xor
dec
bound
and
das
mov
int
daa
jmp
inc
sbb
sbb
mov
adc
add
nop
mov
inc
enter
jle
data16
mov
lock
loopne
aas
adc
std
test
mov
pop
mov
test
jecxz
aaa
push
mov
sub
movl
pop
ja
xor
adc
push
mov
dec
xor
mov
repnz
sbb
and
pop
pop
repz
rcrb
arpl
inc
and
mov
int
push
push
or
inc
xor
stc
pop
pop
in
mov
push
mov
sub
shll
jge
stos
rorl
roll
int3
jno
jg
cs
pop
or
fs
mov
mov
inc
pop
ret
stc
mov
lds
and
jnp
enter
rorl
pop
imul
int
mov
into
repz
and
cld
mov
jmp
and
insb
stc
outsb
and
mov
add
push
jbe
scas
mov
inc
lods
or
xchg
jge
pop
push
mov
pandn
aas
int
jl
inc
mov
add
insl
inc
outsb
pop
push
jae
pop
mov
or
pop
mull
cmp
fwait
xor
push
push
cli
mov
and
enter
fs
icebp
xchg
add
sbb
pusha
lds
out
add
xor
sub
sbbl
in
cli
jnp
push
mov
inc
fnsave
iret
cmc
pop
leave
fs
xchg
mov
lahf
lods
and
dec
jle
aas
fwait
lods
xor
or
xchg
roll
push
ss
in
or
popa
out
and
rcrl
sub
inc
movsl
cmp
pop
jae
jne
jns
mov
inc
dec
rorb
inc
mov
lea
orb
fwait
int
outsb
out
inc
sahf
lods
cmp
pop
rcrl
push
pusha
dec
mov
xorl
shrl
pop
rcr
mov
lock
adc
mov
mov
or
pop
rcl
bound
outsl
aad
add
test
jp
mov
mov
nop
jae
pop
andl
sti
pop
in
insb
decb
and
jns
cmp
in
mov
xchg
lret
xor
mov
pop
ficoml
pop
addr16
test
lock
insb
int
inc
adc
into
pop
stos
cmpsl
popf
xor
mov
xchg
mov
mov
out
and
mov
gs
testl
loope
push
sbb
aas
and
ret
hlt
push
fcomps
int3
jl
inc
and
mov
cwtl
frstor
mov
dec
nop
jg
xchg
je
in
pop
lods
dec
jne
mov
sub
clc
jbe
jb
bound
mov
dec
xchg
fidivl
xlat
and
mov
roll
inc
lea
jl
xchg
push
xchg
sub
ds
arpl
lods
cltd
rcll
push
mov
ss
in
lret
shrb
mov
add
push
pop
loope
sub
enter
in
in
arpl
jnp
push
jo
pop
mov
or
test
jno
sbbl
test
ret
cmp
in
mov
mov
ret
dec
shlb
or
sbb
and
je
je
out
add
leave
adc
out
ljmp
adc
lahf
xchg
xorb
pop
mov
insl
pop
sub
lret
sbbl
dec
scas
into
jns
rorb
out
pop
sti
cmp
pop
aad
xchg
arpl
pop
fsubrp
push
nop
sahf
sahf
pop
inc
mov
jge
inc
fdivs
pop
jns
in
add
fisubl
ds
sbb
jae
mov
mov
mov
jnp
movsb
jle
mov
test
mov
inc
fsub
dec
out
xchg
mov
fwait
arpl
inc
push
add
lods
cmpsl
sub
call
sar
into
dec
jno
pop
sbb
mov
mov
or
outsl
xor
vmaxsd
lds
loope
mov
test
imul
or
mov
fildll
stc
cmp
sub
adc
hlt
mov
insb
movsb
repnz
pop
outsl
inc
sti
hlt
cld
mov
cmc
adc
mov
inc
in
fwait
dec
test
fidivl
sub
lret
lods
adc
jge
stos
in
sahf
and
sbb
sub
xor
fdivrp
mov
cltd
dec
pushf
shlb
add
cli
lret
mov
outsb
in
add
adc
les
xchg
les
mov
inc
inc
adc
stc
or
dec
aad
lds
icebp
sub
xchg
pushf
imul
fcmovu
aam
fimuls
mov
roll
pop
outsl
daa
scas
xchg
cmp
sbb
adc
ss
and
inc
cli
add
shll
or
mov
loop
bound
sbb
fidivs
jecxz
sub
mov
xchg
imul
incb
xor
shl
ret
leave
enter
test
stos
insb
dec
adc
push
mov
cmp
push
sbb
jecxz
cmp
and
mov
push
pop
xchg
jb
mov
push
ret
pop
cmc
rcll
jmp
in
add
mov
int
mov
cmpsl
xchg
jle
ror
cmp
dec
ret
stos
pop
or
leave
insl
and
push
sub
or
push
add
cltd
mov
insb
jl
dec
xor
and
and
mov
xor
sbb
xor
xchg
loope
insb
push
fdivrs
mov
pop
sub
insl
dec
fwait
or
add
gs
push
movsl
dec
xchg
pop
pusha
pop
fwait
xor
cmc
mov
lock
add
addr16
cld
cmp
nop
sbb
mov
sti
popa
orb
fldt
dec
sbb
jo
daa
out
gs
and
imul
sbb
fbld
sub
xchg
mov
cld
repz
cld
outsb
mov
cmc
ja
adc
stos
add
repnz
lock
push
pop
scas
xlat
push
xorb
sbb
call
cmp
xchg
adc
dec
push
and
mov
jne
sarl
dec
sbb
mov
movl
testl
pop
mov
sbb
aam
pusha
stc
lods
adc
inc
cli
cltd
mov
mov
mov
aaa
mov
pop
lds
imul
jbe
mov
push
add
dec
lahf
ds
xchg
into
sub
popf
dec
fs
sbb
jge
add
shll
mov
push
adc
push
pushf
pop
pop
imul
sbb
mov
xor
fdivl
test
int
aad
aas
loope
inc
outsb
add
adc
push
andl
dec
push
sbb
fbstp
add
pop
mov
hlt
loope
shll
mov
dec
in
cmp
daa
nop
dec
sub
mov
inc
and
jmp
pop
stc
fstl
sub
adc
push
xchg
adc
dec
jo
inc
pushf
lahf
lods
rcl
popa
dec
mov
sub
sub
jmp
nop
sub
or
shll
mov
arpl
jmp
inc
sub
jns
lds
loopne
out
jne
shr
add
daa
add
mov
and
mov
inc
jnp
lds
dec
and
mov
popf
xor
in
out
mov
pop
mov
lds
and
push
enter
dec
in
mul
insb
jno
outsl
ss
dec
test
mov
jge
cs
add
pop
cltd
ds
rcr
inc
jb
movsb
mov
sub
push
and
adc
pusha
repz
sub
pop
mov
jns
mov
dec
int
add
bound
insb
fcmovnu
push
sub
fistps
into
daa
loope
mov
and
in
dec
dec
popf
lret
sbb
fbstp
insl
idiv
lret
jbe
into
push
jecxz
mov
imul
jge
lahf
pop
bound
mov
ljmp
shll
and
clc
mov
mov
movsl
icebp
ret
jge
xor
xor
inc
jnp
sbbb
movsl
cmpsb
or
xchg
repnz
jbe
je
ja
andb
jo
and
inc
pop
push
in
outsl
xchg
int
test
mov
aas
mov
cmp
push
leave
lds
insb
or
xor
shr
int3
lods
mov
push
mov
xor
mov
lahf
and
movsb
and
cmpsl
fnstsw
sahf
push
ret
mov
add
repz
mov
cmp
adc
pop
es
and
add
cmpsb
fcoms
sub
cld
scas
into
test
les
push
inc
scas
addb
shr
xchg
mov
jg
shrl
xor
lret
sbb
outsl
jecxz
and
add
nop
ljmp
pushf
aas
push
mov
test
hlt
imul
adc
imul
stc
movsb
inc
mov
pop
cmpl
in
in
dec
jmp
shll
xchg
inc
dec
mov
leave
jne
aaa
mov
pop
push
jle
out
cli
or
movsb
cld
mov
addb
pop
aaa
inc
int
out
dec
and
xchg
mov
add
jecxz
daa
sbb
in
sub
loope
stos
adc
jmp
sbb
push
xor
ds
jge
mov
testb
insb
insl
dec
push
mov
xor
jno
mov
test
pop
fadd
loope
mov
and
pop
aam
jae
jne
sbb
imul
push
mov
dec
in
mov
test
xchg
ds
lock
pop
cli
mov
pop
mov
inc
pop
out
or
mov
push
sub
popa
mov
ds
mov
in
push
fisttpl
jmp
stc
inc
inc
xor
out
vorps
push
pop
es
lahf
data16
sub
xor
fcomps
and
push
mov
sbb
mov
scas
push
movntps
ret
add
cmpsb
orb
lea
cmpsb
sbb
and
sub
aam
pop
pop
movsb
pop
jecxz
jmp
in
cld
outsb
pop
das
outsb
sbb
and
mov
inc
adc
jle
lea
dec
fs
inc
mov
mov
fidivs
mov
cmp
push
mov
gs
mov
jp
and
or
mov
cmpsb
jns
inc
and
es
and
cs
cmp
mov
lea
movntq
imul
pop
jmp
dec
dec
sub
push
jae
idiv
adc
push
aam
es
cmp
aam
lock
sbb
sbb
jmp
loopne
test
jmp
pop
mov
inc
jp
andl
adc
pop
test
ss
sub
mov
and
lret
push
jns
cmp
in
push
mulb
pop
adc
int
pop
insb
aam
xchg
hlt
fldl
fists
mov
loope
mov
push
dec
shlb
stos
mov
inc
adc
pop
fisubrs
rorl
sub
pop
lret
fiadds
pop
or
pushf
xor
jmp
sbb
xor
aam
repz
or
jb
std
icebp
jno
mov
lcall
shl
inc
dec
xchg
push
rol
dec
icebp
cmpl
pop
jbe
in
mov
loop
xchg
loop
icebp
mov
movsl
cli
data16
in
push
xchg
cld
shl
jge
pushl
xchg
ss
sahf
and
pop
inc
insb
adc
inc
adc
pop
std
add
cwtl
sub
daa
mov
fisubs
adc
popa
scas
cli
pop
mov
scas
and
int
cmp
xlat
sbb
ja
sarl
js
adcb
shll
insb
cmp
mov
mov
fidivrl
mov
je
cmc
imul
sbb
mov
push
pop
fidivrs
clc
add
xchg
add
popf
jnp
mov
xchg
sub
sbb
mov
sbb
shl
inc
notl
loop
push
cmp
out
jl
sbb
lods
inc
inc
xchg
inc
int3
sbb
inc
cmovl
dec
jne
jae
xchg
out
cmp
test
pop
mov
mov
test
push
out
cmp
push
jle
xlat
or
bound
inc
and
mov
push
pop
daa
xlat
inc
fildll
add
test
into
xor
xchg
cmp
cmpsb
pop
sbb
inc
pop
stos
cs
dec
mov
imull
jo
inc
pop
push
xchg
ficompl
popf
and
data16
in
out
gs
call
rcr
mov
out
xlat
dec
pushl
mov
scas
push
mov
popa
cs
cwtl
sbb
cltd
cwtl
mov
rcr
jecxz
sbb
je
xor
nop
mov
cwtl
xchg
shlb
dec
adc
jg
jl
mov
arpl
shlb
lods
arpl
cmp
jg
push
jbe
push
dec
adc
daa
mov
xchg
or
iret
mov
bound
lea
fwait
dec
mov
shlb
xchg
stos
ss
insb
mov
cmp
sub
xlat
into
mov
fwait
sbbb
mov
rclb
push
cmp
pop
dec
and
xor
lret
adc
xchg
push
and
sub
outsl
mov
cli
es
xor
push
xchg
pusha
movsl
leave
rcl
data16
int3
loop
in
out
xlat
or
rcll
movsb
mov
mov
pop
pop
dec
call
ljmp
fdivs
cmpb
xchg
cmp
pop
pushf
sbbb
inc
fistl
cli
cld
jmp
outsb
je
pop
in
push
push
cli
addr16
leave
sub
outsl
cmpsl
ficoml
push
andb
xchg
jmp
shrb
jno
cmp
jge
cmp
fs
test
mov
adc
mov
mov
mov
and
out
xor
add
in
xchg
xchg
mov
xor
jg
sub
lds
push
or
dec
test
xchg
dec
xlat
inc
xchg
dec
xlat
xlat
out
scas
int
push
inc
iret
ret
xchg
mov
xor
test
ljmp
mov
and
cmp
and
adc
mov
cli
call
cld
sbb
aad
and
adc
les
rorb
push
mov
loop,pn
sahf
loope
clc
mov
cmp
pop
cmp
ret
mov
fisubrs
or
aad
and
insl
rorl
pop
aaa
daa
ds
lods
clc
adc
adc
int3
shll
pop
and
lret
aas
mov
push
fcomi
xor
adc
jns
and
cmp
sbbb
cmp
cmp
pusha
mov
sub
int
mov
nop
jb
mov
popa
mov
idivb
imulb
mov
jp
loopne
xor
inc
and
add
fstpt
mov
xchg
inc
sbb
xor
inc
jle
pop
in
int3
push
xchg
jo
fs
add
negl
or
ds
clc
cld
or
bound
js
push
push
cmpsl
xor
cmpsb
repz
jo
rorl
jnp
lods
ja
mov
enter
jae
sahf
outsb
hlt
insb
fsubrl
in
mov
xchg
mov
cmp
clc
and
sub
out
cmp
mov
pop
popf
xchg
enter
dec
loope
ret
movsl
insl
add
xchg
loope
mov
shll
adc
or
sbb
outsb
outsl
mov
insl
mov
xchg
divb
in
insb
stc
rorl
xchg
jae
push
movsl
out
jmp
dec
lods
mov
cmpsl
push
stos
and
cwtl
sbb
add
xchg
es
inc
ja
stos
repz
mov
out
sub
pop
in
pop
paddw
xchg
adc
cmp
inc
movb
sbb
pushl
stos
daa
add
dec
inc
out
xchg
jne
dec
sub
out
lahf
and
cli
ret
jle
es
inc
pop
mov
xchg
pop
sti
inc
xchg
cmp
fisttpll
cmpsl
adc
xorb
adc
sbb
stos
test
arpl
cwtl
mov
notb
inc
aad
mov
cmpsb
jle
cwtl
xchg
pop
sub
mov
cmp
mov
nop
adc
sub
or
xlat
xchg
push
test
cld
jno
sbb
cmp
xlat
clc
push
cmc
insb
push
cmp
sahf
sbb
loope
xchg
ds
push
loop
cmc
jmp
dec
lds
es
adc
call
hlt
adc
dec
sar
pop
jmp
mov
push
nop
push
loopne
dec
insb
mov
pop
ds
jmp
out
cmp
adc
and
popa
daa
pop
hlt
jb
ficomps
jo
lcall
test
loope
out
loop
fs
push
shll
xlat
daa
aam
sub
out
insb
lods
lods
push
adcl
loopne
push
pop
push
jle
push
hlt
and
and
sub
mov
ja
shrb
and
arpl
push
gs
inc
mov
ljmp
inc
sbb
cmp
jp
pop
add
out
dec
sub
mov
aam
int
and
push
sbb
xlat
adc
sbb
inc
sti
add
and
icebp
lcall
sti
mov
out
out
cmp
jmp
ljmp
and
jns
pop
lret
imul
mov
jmp
idivl
mov
faddl
jg
and
mov
xor
jp
lret
ds
add
xchg
xchg
xor
add
xor
xchg
push
or
add
or
loopne
mov
pop
cwtl
sbb
loopne
ficoml
or
inc
lock
popl
sti
mov
add
push
ss
inc
inc
insb
push
dec
lods
leave
jno
stc
loopne
or
fcoms
aad
scas
mov
idivb
sub
mov
dec
sub
cmp
neg
or
dec
inc
fdivp
pop
fdivl
aas
shll
mov
fprem
data16
imul
test
and
inc
pop
push
pop
pop
dec
sbb
sbb
lea
push
movsb
cmp
ja
xchg
jns
shl
scas
sub
and
jmp
sbb
mov
movsb
out
sarl
fwait
push
rolb
aas
or
lret
movsl
mov
push
push
in
mov
ljmp
nop
sub
insb
dec
or
addb
cmpl
inc
mov
jne
mov
ja
jne
fcomps
dec
fs
push
jle
ljmp
stos
push
mov
sub
repnz
stc
divl
ffreep
test
dec
or
push
cmp
scas
or
fidivl
mov
adc
test
sti
test
push
jns
in
xor
sub
sub
mov
mov
add
jle
lds
mov
push
mov
xchg
shlb
sar
xor
xlat
js
mov
in
pop
gs
repnz
rcrl
sub
add
test
jae
mov
push
push
gs
scas
mov
push
mov
dec
push
mov
jo
sti
mov
test
mov
aam
jg
push
xchg
xor
int
movsl
cmp
pushf
rcl
je
xchg
pop
nop
push
outsb
dec
jle
dec
mov
sbb
xchg
jo
ljmp
jg
addl
jno
pop
fiaddl
cmp
mov
gs
fwait
xor
clc
roll
cmp
scas
ja
mov
jb
xor
mov
cmpb
es
aam
test
or
cmp
fsubr
scas
sbb
test
mov
or
addr16
pushf
sub
mov
ljmp
jecxz
int3
adc
dec
xor
jle
and
add
insl
xlat
jge
es
xlat
imul
sbb
cmpsl
inc
mov
orl
xor
repz
leave
int3
pushf
arpl
xor
adc
or
adc
pop
xchg
inc
bnd
ret
jo
fxch
iret
cmp
mov
movsl
lea
das
mov
push
icebp
add
xchg
push
pop
rcrl
test
mov
sbb
or
cmp
dec
dec
test
and
dec
mov
mov
insl
gs
sbb
out
pop
dec
repnz
mov
mov
ja
ss
ljmp
fs
scas
mov
jbe
pop
es
int
pushf
mov
das
int3
dec
test
pop
fucomip
mov
push
mov
sub
cmp
inc
pushf
fbstp
jge
adc
add
mov
jl
rcrl
sub
pop
cmp
rorb
cmp
mov
popa
jmp
add
data16
push
and
cwtl
push
ret
sbb
xor
rcll
adc
stc
mov
aad
xor
in
fsubs
daa
arpl
pop
fsubrs
pop
push
cwtl
jnp
xor
cmc
xor
xchg
addl
mov
jno
data16
dec
insl
movsb
sbb
outsb
push
dec
popa
sub
popf
and
sub
inc
jae
loope
and
pop
xor
pop
sbb
ficompl
lods
nop
pop
out
popf
es
lods
and
jmp
mov
movsb
pop
and
and
pop
xor
insb
or
cmc
nop
jg
xlat
repz
pop
jne
xchg
repz
mov
xchg
scas
nop
dec
xor
lods
push
jl
xor
inc
pop
out
inc
or
dec
test
imull
leave
cmp
imul
scas
mov
xchg
iret
sbb
es
add
shll
dec
and
nop
sub
dec
or
gs
mov
movsb
sbb
push
daa
add
inc
push
push
out
sub
aas
leave
and
aam
scas
mov
or
cmp
cmc
aam
dec
bound
jmp
adc
lock
dec
icebp
fidivl
sbb
jne
cld
sub
rcr
push
fistps
jmp
pop
sbb
dec
jp
rcpps
pop
je
lds
popf
push
ja
or
jb
cli
int3
or
dec
sbb
mov
push
jp
inc
inc
aas
fs
mov
xadd
stos
pop
rcl
fisubl
jbe
addb
dec
mov
icebp
cmp
outsl
pop
dec
or
scas
nopl
lods
stos
jnp
push
shll
jmp
stc
cmc
cmp
call
sbb
xchg
xchg
shrl
cmp
negb
das
inc
insl
jp
aam
mov
add
dec
enter
fldt
mov
sub
clc
add
jmp
pop
hlt
stc
hlt
aaa
into
jae
jo
jp
lret
mov
xchg
or
and
adc
lea
fwait
vpsubd
mov
xchg
mov
sbbl
cli
insl
mov
cwtl
cmc
loopne
sbb
dec
jne
fisubl
jo
mov
cmpsl
adc
sbb
mov
inc
dec
iret
into
sub
mov
fnstcw
jecxz
movb
cmpsl
jg
and
mov
mov
sbb
push
aaa
lock
sub
xor
shl
mov
jns
pop
inc
loopne
lods
cmp
lret
daa
stc
testl
push
mov
mov
xor
xor
sahf
fcmovnbe
or
test
imul
jae
sub
cwtl
fs
ljmp
idivl
mov
leave
adc
jmp
dec
mov
into
adc
mov
clc
adc
sub
mov
int3
lret
loop
dec
bound
mov
leave
shll
push
inc
clc
fidivrl
or
cmc
push
addr16
or
inc
cmc
jp
xor
nop
dec
adc
mov
pop
outsl
sub
jmp
push
iret
out
lods
daa
pop
mov
fnstenv
cmp
pop
cmc
ret
aaa
ja
mov
mov
cli
insb
pop
sbb
lds
push
jne
pop
mov
mov
es
inc
jmp
scas
in
int3
xlat
fldl
xchg
pop
mov
inc
test
pushl
aas
repnz
test
or
push
leave
or
dec
scas
lcall
sub
push
push
xchg
push
xchg
mov
stos
add
cs
rcr
sbb
adc
test
and
mov
cmp
int3
dec
int3
xchg
pop
add
xchg
mov
mov
psubsw
xchg
cmp
fwait
pop
test
popl
add
add
push
pop
movsb
mov
addr16
mov
mov
pop
enter
js
add
ficompl
daa
roll
inc
adc
insl
cmc
lret
stos
je
adc
fwait
jge
mov
clc
stos
lock
scas
mov
daa
outsb
mov
rep
insl
sub
inc
xchg
xlat
cs
cmp
jmp
daa
push
rorl
out
push
cmp
xchg
sbb
movsl
jno
movl
scas
lods
gs
mull
push
fisubrs
jb
in
into
jp
stos
inc
aaa
push
pop
push
bound
shl
add
jg
test
inc
test
sbb
ljmp
add
adc
scas
loope
loop
jae
movsb
dec
push
pop
js
test
pop
das
add
daa
lcall
stc
xor
fdivrs
fs
sub
mov
lods
iret
loope
adc
mov
or
call
fwait
dec
jns
cmc
adc
or
xchg
aam
pop
das
xor
cmc
sub
pop
aad
mov
adc
gs
xor
dec
adc
cmc
shrb
fstl
adcl
cwtl
sub
mov
test
std
pop
sbb
jg
stc
stos
cwtl
xchg
or
mov
insb
punpcklbw
push
xchg
je
cmp
add
gs
pop
xchg
test
xor
mov
iret
mov
ljmp
inc
adc
sbb
subb
in
and
stos
adc
inc
adc
xchg
jg
push
mov
jg
aad
call
lahf
inc
nop
pusha
push
ljmp
cmpsb
pop
push
and
xchg
out
shlb
bnd
pop
lret
rcrb
icebp
fldlg2
movsb
data16
test
adc
mov
jle
xchg
jnp
adc
adc
pushl
ds
or
mov
sbb
push
mov
test
cs
lods
dec
jmp
out
mov
mov
shr
mov
push
bound
sbb
inc
push
mov
xchg
jg
shlb
push
cltd
mov
jge
mov
jg
push
cmpsl
fldcw
loope
outsl
or
fsubrp
pop
cmp
dec
fdivl
xor
xor
cmc
inc
adc
daa
push
jb
loopne
mov
jg
jecxz
in
out
shlb
insl
dec
pop
lahf
push
adc
dec
jb
lret
js
inc
adc
lcall
xor
and
xchg
lret
faddl
mov
adc
jle
icebp
jns
jecxz
xchg
inc
xchg
sub
lods
add
add
sub
verw
fdiv
push
xor
pusha
ret
xchg
pop
jp
xchg
aad
sub
or
adc
fisubrl
mov
jo
mov
or
mov
push
rclb
cmp
jo
or
push
xor
cmp
int3
lahf
cmpl
mov
and
stos
sbb
sub
or
arpl
lods
inc
add
mov
les
fmuls
in
lcall
sti
fadd
mov
loope
lret
jmp
decl
fsub
fiaddl
loop
enter
lret
lea
jne
sbb
mov
cs
mov
xor
or
mov
xchg
incb
or
popl
ds
ss
movsl
push
popa
adc
clc
pushw
push
jg
add
sub
lcall
subb
push
sub
and
push
cmpsb
xchg
add
jge
cmpsb
mov
add
pop
cmpsl
pop
aad
cli
bound
jns
pop
push
adc
dec
fidivl
xchg
mov
mov
inc
test
jno
push
mov
mov
pop
mov
fldt
rclb
sarl
ret
subl
mov
adc
pop
decl
rcrl
cwtl
movsb
xchg
mov
jmp
popa
movsl
mov
lcall
fldenv
push
scas
movsb
pop
frstpm(287
sbb
jecxz
ret
adc
mov
shlb
sub
imul
cmp
fidivrl
lock
inc
sbb
loope
fnstenv
lret
jl
stos
es
shlb
aam
pop
aaa
cmpsb
mov
imul
fsubs
rorb
push
negl
in
lret
fidivrl
sub
jne
sbbb
or
adc
mov
fldl
xchg
in
cmc
and
mov
lea
sbb
dec
repz
test
or
mov
fucom
mov
ljmp
pop
or
test
adc
test
push
mov
cld
mov
jns
mov
adc
pop
sub
popf
or
and
xlat
je
sub
jge
mov
out
jp
ja
fiadds
sbb
push
aaa
pop
pop
push
xor
push
dec
and
daa
dec
je
xor
cmp
imul
adc
aaa
mov
and
push
or
insb
cmp
mov
jp
xchg
xchg
mov
cmp
push
repnz
adc
aas
repnz
test
push
shr
fxch
push
mov
insb
jbe
cld
xor
sub
sub
mov
mov
jecxz
sbb
jle
in
adc
mov
mov
push
je
fdivp
sbb
inc
leave
add
jbe
jbe
xchg
paddusb
jb
jb
mov
cmpsl
xchg
jae
mov
fiaddl
in
mov
add
push
mov
inc
jae
clc
lods
jae
push
out
mov
mov
cmp
stc
lods
pop
xchg
aad
sub
inc
dec
adc
add
mov
dec
mov
ljmp
inc
stos
cmp
mov
dec
mov
iret
outsl
bound
sub
adc
sahf
nop
icebp
repnz
pop
jge
mov
call
dec
fisubrs
aam
daa
sbb
xchg
mov
mov
mov
or
stc
cs
mov
pop
lret
xchg
jno
aas
repz
adc
out
leave
xlat
and
jmp
cmp
ficoms
call
pop
xorb
xchg
adc
pop
and
mov
and
mov
pop
mov
pop
push
jecxz
icebp
sbb
jno
mov
push
call
or
fs
std
jmp
adc
pop
shrb
dec
pop
insb
pop
cmp
inc
cli
sti
cmpsb
hlt
into
cmpl
inc
loopne
jge
xchg
xor
in
rcl
movsl
mov
loope
or
dec
test
push
fnstsw
ja
cmp
mov
aaa
jnp
inc
lcall
dec
mov
jo
cmp
jb
movsl
sbb
mov
dec
or
enter
fcomip
dec
mov
mov
fcompl
lcall
dec
jnp
sbb
test
push
adc
lret
push
out
aam
pop
xor
jae
pop
inc
stos
fcmovnbe
loope
and
iret
call
mov
mov
add
loop
cmp
clc
loopne
mov
mov
je
int
fsubs
sbb
aas
xchg
fbld
sub
sbb
stos
enter
gs
xlat
sarl
xor
test
xlat
bound
jle
roll
imul
jb
cltd
adc
lods
cli
addl
in
repnz
mov
andl
fcomi
inc
jo
seta
xchg
xor
fwait
mov
imulb
xor
fwait
cmc
jne
push
and
cli
aaa
cmp
loop
xchg
out
xchg
std
jge
mov
test
or
sbb
rorb
pushf
add
push
hlt
lods
fiaddl
outsl
pop
out
adc
push
sub
aaa
fwait
add
mov
or
test
dec
sbb
pop
hlt
pop
and
fbstp
or
fnstcw
push
sub
mov
mov
mov
jnp
lret
jecxz
xchg
out
outsb
stos
insl
adc
jmp
iret
jmp
push
mov
stos
movsb
and
mov
mov
movsb
int3
insb
mov
lahf
fmuls
fiadds
lods
test
mov
ja
repz
into
shlb
loope
jo
icebp
sub
or
nop
add
es
push
cs
rcrl
lea
sbb
jbe
jbe
or
out
mov
inc
cmc
cld
xor
fistps
cltd
cmpsb
pop
xchg
inc
xor
in
dec
fistl
jns
stos
push
adc
pushf
mov
scas
push
sbb
add
jle
into
ss
pop
outsb
or
in
push
rorl
or
xor
mov
dec
xchg
sub
or
imul
cmpsl
or
roll
adc
xor
add
jg
sub
mov
and
inc
test
mov
mov
jle
mov
xchg
sub
out
movsb
inc
mov
push
xchg
stc
sub
or
out
cmp
lods
test
jae
inc
cmp
test
scas
sbb
push
adc
mov
sub
xlat
add
mov
cld
lods
or
xor
je
flds
lds
in
and
lea
inc
stc
mov
dec
std
loope
lock
adc
cmpsl
cmpsl
daa
mov
push
dec
ss
jno
das
sahf
jle
push
cmp
push
in
mov
mov
xor
sarb
inc
mov
enter
mov
xchg
dec
cltd
fdivr
jno
imulb
mov
je
xchg
mov
in
inc
ret
aad
jo
repz
lahf
aaa
push
pusha
sahf
xor
adc
rol
call
out
fnstsw
cmp
ja
and
xchg
pop
fistps
mov
sbb
aad
call
cmp
mov
mov
pop
jb
js
push
mov
mov
mov
cmp
jle
aad
jle
jnp
inc
sti
shll
push
inc
jmp
dec
pop
ret
add
fwait
xchg
and
scas
loopne,pt
inc
shlb
mov
pop
push
jecxz
pusha
inc
imul
mov
aad
sub
mov
fcom
cmpsb
loopne
and
into
or
pop
in
icebp
pop
test
mov
andb
mov
sarl
ljmp
pop
mov
cmpsb
push
mov
jmp
fnstcw
mov
int3
outsb
movsb
aas
pop
test
xor
and
inc
out
jo
sbb
out
sbb
push
add
pop
orb
outsb
push
fisttpll
sbb
sub
stc
dec
cld
aas
and
leave
movb
imul
sbb
xor
dec
or
out
loope
sbb
fsubp
popa
clc
jmp
testl
jge
hlt
mov
stos
push
xorb
xchg
ja
or
xchg
loopne
push
pop
in
fidivrs
or
pop
pop
insb
jle
in
out
mov
mov
fisubs
push
mov
mov
jno
call
nop
clc
dec
xchg
sub
jge
mov
repz
roll
lret
cmp
mov
subl
imul
xchg
adc
mov
push
insl
push
popa
mov
dec
outsl
push
rcrb
jmp
sbb
call
imul
fwait
dec
adc
push
and
inc
cwtl
push
rcll
xchg
push
and
popa
xor
decl
mov
mov
cld
out
push
std
out
xorb
in
and
mov
cs
inc
dec
mov
aam
rorl
cwtl
cmp
xchg
test
lret
add
addr16
imul
and
xorb
push
sub
shll
sub
push
clc
scas
cmp
mov
sbb
mov
das
lcall
sti
cmc
out
jns
int
mov
or
sti
shr
cltd
mov
xor
mov
ret
loopne
fnstenv
fbstp
mov
mov
and
ss
mov
push
repz
shll
pushf
imul
fsubs
cltd
iret
je,pt
cmpsb
addl
push
outsb
dec
stos
insl
sbb
testl
dec
push
popa
pusha
notb
dec
jmp
push
jns
stc
scas
or
adc
inc
insb
std
pop
aas
lret
jmp
sub
ja
sahf
fsts
sbb
lahf
mov
pop
xor
test
insb
sti
mov
stc
stos
sbbb
jno
sub
shll
fabs
cmp
inc
or
or
mov
xchg
push
arpl
pop
cmp
sbb
rcrb
or
outsl
insl
insb
jge,pt
int3
into
add
mov
in
inc
hlt
xor
pop
and
mov
cmp
lea
popa
frstpm(287
pusha
or
adc
rorl
cmp
pop
or
js
insl
mov
add
fidivl
negl
adc
idivb
and
jbe
mov
inc
mov
mov
xor
push
and
lods
pop
pushf
in
fs
rcrb
shl
test
clc
fildll
je
jg
mov
loopne
xchg
push
cmp
cltd
sub
adc
xchg
pop
mov
shll
hlt
inc
xor
lahf
mov
ror
repnz
scas
or
inc
and
pusha
xor
xchg
out
jge
aaa
jmp
inc
add
or
inc
subl
arpl
mov
lods
dec
mov
pusha
mov
mov
std
mov
jecxz
das
stos
xor
mov
xchg
mov
ffreep
ret
mov
scas
les
hlt
jle
xor
xor
cld
andl
scas
pop
mov
andb
add
add
insb
sbb
fdivl
out
xchg
sbb
push
hlt
inc
test
popf
pop
dec
test
jae
inc
dec
mov
dec
or
push
jno
and
adc
mov
aam
pusha
mov
pop
data16
sbb
in
sub
cs
negl
int3
dec
mov
mov
scas
outsb
aam
gs
fdivrl
fstpt
push
dec
sahf
rcl
jnp
test
dec
lods
mov
popa
and
enter
enter
lret
or
loopne
dec
imul
sbb
fwait
cmc
lret
loope
lods
jg,pt
inc
stc
in
jmp
fistps
pop
iret
adc
xor
ja
pop
outsl
bound
dec
inc
insl
dec
out
mov
ret
pmaxsw
xlat
jo
lcall
pop
push
xchg
sub
add
xor
data16
jge
sbb
push
dec
shlb
cs
sti
lods
pop
cwtl
sub
repnz
pop
outsb
mov
std
mov
shlb
cmp
mov
jl
ds
sahf
sbb
push
and
mov
mov
xchg
aaa
adc
in
mov
mov
dec
and
mov
je
adc
and
repz
mov
or
xchg
dec
pop
pop
mov
cmpsb
xchg
inc
sub
mov
cltd
ret
cltd
mov
lcall
int3
jns
in
pop
dec
in
jnp
dec
push
add
xor
enter
jg
inc
pop
cld
jmp
fistps
ret
shrb
stos
dec
es
adc
negb
loope
or
mov
and
cltd
mov
mov
mov
mov
fs
leave
enter
in
sti
add
mov
mulb
and
or
mov
xlat
inc
pop
mov
fistl
jo
push
pop
fdivs
xchg
out
push
jmp
scas
test
mov
mov
loop,pt
mov
xchg
jecxz
out
fnsave
xchg
out
xchg
movsb
pop
leave
cmpsl
dec
cmp
jae
in
push
fs
cmpsl
inc
aad
dec
sti
cmp
pop
mov
sub
push
cmc
mov
or
cmp
aad
pusha
mov
mov
inc
out
das
jo
or
jo
fsts
inc
jnp
sarl
pushf
mull
mov
out
mov
cltd
sub
add
mov
aas
adc
mov
pusha
loop
rorb
jl
adc
xchg
mov
stos
inc
pushf
dec
addl
fwait
or
in
lret
ljmp
or
sahf
mov
iret
std
jle
jmp
loope
das
test
es
add
xor
sbbb
test
or
mov
lock
mov
inc
push
sbb
and
and
std
ret
movsl
fcom
popa
sub
adcl
lods
rorl
setb
jbe
push
fdiv
outsl
sub
dec
fistl
xor
les
xchg
aas
loope
fs
in
lahf
scas
arpl
mov
and
add
pop
lods
xor
arpl
add
and
inc
push
negb
lahf
pop
outsl
mov
or
decl
loop
aas
adc
aam
adc
inc
into
or
fistl
pop
mov
inc
push
or
stos
int3
jno
xor
pop
xor
rclb
xor
inc
add
cmp
fdivrl
mov
jge
cmp
leave
fnstcw
lods
cmp
test
xor
or
sbb
js
pop
pop
sbb
fwait
cwtl
add
mov
mov
cs
jmp
cwtl
jae
sbb
dec
sahf
fstpl
adc
inc
cmp
test
xchg
cmp
aam
stc
es
and
or
je
mov
dec
mov
cmp
xor
or
dec
nop
ja
sub
insb
shrl
movsl
and
add
cltd
mov
lods
mov
cwtl
xor
mov
adc
xchg
jg
jmp
das
pusha
cmpsl
notl
in
fstps
shrl
call
mov
orl
xchg
pop
jge
cmp
insb
and
iret
xchg
xchg
mov
pop
push
xchg
add
out
fdivl
jno
jle
sub
sub
xchg
movsb
sti
push
and
adc
mov
dec
daa
push
xor
adc
dec
sub
insb
inc
mov
sbb
mov
insl
push
pop
loop
push
and
pop
shr
ljmp
mov
into
dec
cmp
mov
sbb
movsb
dec
ja
sahf
sbb
jp
out
xchg
pop
pop
push
pushl
mov
pop
cmp
mov
es
mov
or
mov
es
insb
inc
xor
popf
lret
sbb
jge
lea
imul
or
js
push
fisubl
dec
add
out
push
orb
insb
xor
and
dec
xlat
push
cmp
jns
inc
hlt
adc
je
fadd
mov
cmp
or
bound
gs
int3
mov
xorps
xor
das
dec
mov
mov
in
push
lods
jns
repnz
dec
sub
pop
xor
shrb
pop
sbb
jb
pop
lret
and
int3
insl
sbb
add
pop
mov
mov
jnp
loopne
jecxz
jle
mov
xchg
dec
and
call
push
pushf
sbb
in
out
xor
cmp
scas
repz
pop
mov
out
jbe
fcmovb
jne
adc
push
out
and
nop
in
pop
pushl
fmull
and
or
push
add
mov
rcr
lret
push
mov
jbe
out
iret
jbe
cwtl
mov
in
add
or
lods
jne
mov
aas
cmc
sub
xchg
xchg
cltd
movsl
mov
filds
loop
jne
mov
sbb
js
shrl
ret
sbb
jnp
xorb
cwtl
fsubs
dec
jbe
fiaddl
int3
cmc
das
stc
ljmp
jo
sub
xchg
rolb
mov
xchg
les
leave
cmp
je
mov
dec
pop
call
adc
scas
fistps
pop
out
add
in
rcl
rolb
loope
pop
jns
cmp
mov
fwait
jle
or
mov
sub
jae
push
in
mov
push
mov
add
cwtl
cmp
or
sti
cmp
cmpl
push
das
and
cmp
inc
mov
mov
inc
enter
inc
std
dec
mov
mov
adc
adc
cmp
mov
adc
test
addr16
jno
dec
iret
js
fucomp
mov
or
sti
sub
loopne
jmp
andl
in
mov
testl
insl
mov
mov
cmp
lahf
add
ficoms
xorb
dec
jno
pop
fnstsw
cwtl
mov
mov
xor
push
cli
jg
leave
stc
sahf
lds
jmp
jo
mov
pop
stos
sahf
sub
inc
mov
adcb
sbbl
mov
gs
mov
mov
or
int
test
inc
jnp
dec
movb
adc
pusha
inc
pop
push
out
scas
jp
and
mov
xlat
jb
lea
mov
loop
ds
pop
fldl
lods
push
ss
out
sub
xchg
add
jne
mov
dec
sti
iret
out
push
popa
cmp
or
jp
add
shl
mov
in
adc
sarl
repz
int
aam
stc
and
mulb
sub
pop
mov
ret
sahf
mov
push
mov
fiadds
sub
int3
sti
push
adc
inc
push
push
ret
xchg
lds
cmp
and
mov
fs
out
add
xchg
inc
pop
mov
push
mov
mov
arpl
mov
xor
pushf
cmp
add
push
fcompl
ret
test
aam
clc
mov
and
fldt
rolb
lods
mov
dec
xchg
adc
shrl
clc
scas
mov
jae
lea
sbb
mov
pop
addl
mov
jae
sub
cld
xchg
jno
push
pop
movsl
jl
ja
inc
sbb
neg
dec
pop
lods
mov
insb
cmpsl
jg
sarb
mov
in
cmpsl
mov
xor
lods
inc
adc
lret
arpl
push
adc
mov
sub
sub
loope
filds
cmc
adc
ljmp
add
xchg
and
into
cmpb
hlt
scas
js
sbb
fistps
mov
sarl
insb
cmp
xchg
sbb
push
adc
lods
xchg
dec
xor
jno
je
fiadds
jnp
out
popf
fwait
cs
dec
popl
iret
movb
aad
pop
std
cmp
pop
in
sti
push
cmpsb
add
popa
addr16
lcall
or
pop
hlt
xchg
push
sbbb
hlt
cld
dec
out
ss
push
push
repz
iret
mov
out
data16
xor
inc
push
cmp
xchg
int
inc
lea
and
cmp
in
pop
and
test
cmpsl
insl
dec
push
jnp
pop
cltd
dec
aam
out
fnstsw
bound
sbb
out
arpl
add
xor
inc
mov
ss
and
hlt
mov
popf
sbb
ret
bndldx
lret
rcl
xor
sbb
ja
xrelease
cmpsl
insl
sbb
cwtl
jns
shrl
jns
jmp
icebp
js
xchg
xlat
dec
xorb
cmc
loope
adc
iret
cmp
out
out
in
pop
xor
rolb
ds
dec
jecxz
push
js
lcall
ret
test
xlat
rclb
cltd
cmp
outsl
xlat
adc
mov
jle
mov
dec
add
mov
scas
loopne
xor
push
sbb
cmp
or
fldt
movsb
sbb
test
xor
aam
lods
notb
mov
addr16
pop
xchg
mov
lret
and
hlt
sbb
es
ret
dec
jnp
sbb
rcll
out
adc
fimuls
inc
adcb
scas
pop
xor
outsb
pop
xchg
sub
sub
outsl
cli
rorl
insl
jo
jp
pusha
bound
and
adc
dec
xor
push
dec
bound
pop
cltd
mov
pop
flds
int3
inc
shl
imul
xor
push
fstl
mov
lds
xor
shrb
xchg
fldl
push
insl
in
or
bound
addps
pop
outsl
adc
ret
push
and
and
lods
pop
call
mov
aaa
mov
jb
jmp
push
pop
test
cmc
imul
jae
repnz
leave
cmp
hlt
daa
lret
out
xchg
xchg
xor
push
adc
stc
push
sub
cmp
js
xor
push
xchg
add
jge
dec
mov
js
popf
jno
lods
dec
sbb
cmpsb
cld
fsubs
xchg
rclb
divb
inc
pop
leave
push
test
or
das
sub
dec
adc
push
mov
mov
cmpsl
idivb
mov
xchg
addr16
add
repz
inc
stos
jns
cmp
ja
mov
shlb
stos
xchg
popa
push
movsl
cs
fsubrs
icebp
pop
cmpsl
mov
dec
loop
or
jmp
lcall
cmpsb
loope
mov
cli
pand
cmp
fldt
sub
stc
stc
sub
bound
cmpsl
popf
lods
push
push
push
hlt
movsl
adc
js
popf
push
sbb
push
mov
pop
dec
push
sti
jl
aam
and
mov
adc
fldcw
cmpsl
fisttpll
sub
pop
std
and
test
ficoms
shl
clc
popf
dec
or
sub
push
sub
jmp
rol
call
mov
scas
xchg
jg
es
inc
sub
cmc
mov
jmp
std
sahf
mov
dec
pop
bound
xlat
dec
aas
jmp
pop
test
cmp
test
mov
ret
enter
outsb
and
popa
mov
mov
mov
cmpsl
loope
add
inc
lret
ljmp
mov
xor
fnsave
test
stc
push
pushf
xor
ficoml
aam
fcmove
mov
in
fwait
mov
test
xor
leave
dec
repnz
push
ds
les
xchg
mov
push
cmp
clc
das
loop
mov
pop
lods
dec
mov
scas
cmpsb
inc
jae
mov
mov
push
ror
icebp
jecxz
pop
stc
add
sbb
gs
fcmovnb
and
fdiv
test
add
enter
adc
xor
sahf
leave
leave
and
push
enter
sbb
jne
pop
and
mov
mov
fnstsw
loope
pop
add
stos
mov
sub
and
and
loop
lahf
je
pop
dec
xchg
pop
mov
or
imul
mov
cmp
jge
insl
mov
addr16
fcompl
aam
cmp
aad
je
shl
or
add
and
jp
jo
sahf
mov
cmpsb
mov
jbe
lods
sub
push
xcrypt-ctr
cmpsl
faddl
int3
test
xor
pop
icebp
pop
scas
daa
pop
mov
pop
push
aad
enter
sbb
pop
xchg
or
popl
je
xchg
in
in
mov
jge
int
shll
and
push
mov
mov
aas
jns
iret
inc
cwtl
xchg
ret
stos
fiaddl
pop
cwtl
xor
sti
hlt
adc
xor
push
dec
mov
pushf
shrl
jl
das
push
mov
callw
xchg
dec
push
pop
leave
std
iret
fidivrs
in
xor
mov
sbb
inc
adc
dec
pop
xchg
mov
mov
sbb
mov
fiaddl
pushf
insb
fwait
mov
lds
cmp
adc
test
xor
inc
push
sub
and
insl
imul
jnp
mov
nop
sahf
pusha
sub
lret
push
xchg
push
mov
ljmp
xchg
cmpsl
xchg
pop
orl
jns
xlat
lds
out
std
mov
mov
insl
aad
fdivrs
sub
shlb
test
ljmp
inc
mov
aad
testl
xorl
outsl
movsb
scas
loope
es
dec
or
test
mov
jecxz
pusha
xor
xor
stos
mov
add
mov
or
cli
jecxz
mov
hlt
lock
xchg
xor
sub
xor
mov
stc
cmp
lds
lret
lcall
mov
push
imul
add
push
lahf
pop
cmpsb
mov
mov
inc
xor
push
fwait
cmc
dec
jge
jmp
insl
iret
pop
mov
repz
mov
push
xchg
mov
push
dec
les
xchg
jo
jns
dec
fwait
xorl
push
cld
cmpsl
xchg
fcomps
dec
cs
fistps
xor
shll
popf
push
pop
jl
data16
inc
daa
pop
mov
lcall
imul
push
fimuls
cmp
jp
ljmp
ljmp
push
aas
inc
pop
lahf
adc
inc
loop
lret
mov
mov
les
cmp
cmpsl
sub
mov
push
sbb
pop
mov
inc
sbb
xor
inc
ret
and
cmp
cmp
flds
fnstcw
popf
fldenv
pushf
xchg
ficoms
in
xchg
pop
ret
add
mov
fisubl
sub
cmp
xchg
dec
push
call
add
sub
xchg
jbe
dec
pop
mov
sti
leave
shlb
addr16
inc
xor
jmp
push
fnsave
cmp
enter
jg
cwtl
popa
andb
push
or
iret
pop
inc
mov
cmp
add
imul
mov
gs
adc
dec
outsl
outsl
std
mulb
dec
insl
mov
mov
and
mov
cmp
movsl
adc
addr16
cld
call
in
mov
jbe
call
jns
push
fisttpl
jmp
sbbb
jecxz
or
xchg
push
mov
jbe
push
mov
adcl
xchg
hlt
jnp
idivl
shl
es
scas
dec
hlt
jmp
add
test
dec
rol
add
inc
call
add
call
icebp
imul
and
mov
inc
pop
add
push
repnz
mov
xor
or
lea
in
and
mov
popf
test
xchg
sti
fs
mov
pop
psubsb
aas
fistpll
aam
xchg
test
gs
cmp
jp
jae
mov
lea
addr16
push
xorb
cld
add
xchg
jmp
xchg
add
lret
aam
jge
sarl
push
test
adc
cwtl
mov
cwtl
or
leave
pop
pop
lcall
push
mov
sbb
and
sbb
orl
sub
test
in
cmp
repz
mov
loop
test
inc
xor
xchg
out
ljmp
fwait
jle
mov
shl
sub
and
mov
gs
iret
outsl
xchg
dec
cld
mov
out
add
in
jg
neg
cmpsl
xor
xor
test
ret
xchg
jo
cmc
inc
add
sub
add
in
scas
fldl
or
loop
add
jo
sub
addr16
add
and
in
daa
fnstsw
mov
std
imul
fistps
popf
jecxz
ja
jle
inc
mov
ljmp
addr16
test
push
mov
aad
fidivrl
add
cmpsb
jmp
aam
clc
inc
jo
daa
std
jb
gs
pop
movsl
adc
dec
push
call
rclb
pop
add
lahf
loop
ja
xchg
xlat
sub
in
xchg
fs
lea
xor
stc
lds
push
mov
mov
loop
pop
cld
out
test
out
and
scas
pop
rorl
lcall
push
shll
xor
cmp
into
cmpsl
mov
mov
cmpsb
stos
inc
or
daa
lock
mov
loop
add
or
cmpl
nop
data16
push
stc
loopne
pop
mov
data16
push
mov
dec
sub
test
mov
nop
adc
jge
xchg
mov
das
push
imul
dec
stos
mov
pop
mov
sbb
vmwrite
out
inc
push
lret
adc
inc
push
cmpsb
xor
mov
adc
fmulp
sub
inc
dec
mov
lcall
loop
and
mov
jbe
xor
shll
sbb
mov
int
and
push
shll
in
push
inc
ret
sahf
dec
sbb
dec
mov
movsb
stc
mov
xor
xlat
icebp
test
add
pushf
push
leave
jns
pushl
adc
pushaw
dec
icebp
shll
and
fldlg2
jnp
adc
pop
shlb
mov
and
mov
dec
pop
je
dec
test
out
imul
repnz
shrb
push
push
shlb
inc
gs
shl
leave
gs
inc
pop
das
jmp
stos
fcoml
pop
dec
mov
pop
dec
mov
clc
std
cmc
rcr
mov
mov
and
and
jg
xlat
pop
push
and
jmp
fcomip
push
dec
cwtl
sti
loop
push
shll
rcrb
loop
inc
inc
fistpl
mov
and
out
iret
arpl
jnp
ss
popa
and
pop
jo
mov
mov
arpl
loope
mov
fimull
ja
imul
dec
iret
movsb
push
cld
jmp
dec
enter
pop
cltd
call
outsl
jns
pusha
jno
sbb
stc
xchg
sbb
xchg
xor
in
push
mov
xor
or
mov
call
xchg
js
push
out
xchg
jp
out
mov
sub
sub
cmpsb
enter
dec
pop
push
enter
sub
add
into
stc
aam
aam
loop
push
cmpsl
movsb
je
leave
mov
gs
out
jmp
pop
jp
pop
xlat
push
sub
and
outsl
lods
and
pop
repz
sub
aam
push
lret
mov
dec
andb
popf
test
daa
mov
pop
xor
imul
aam
adc
into
push
push
inc
push
adc
jg
lods
rcrb
loopne
scas
sbb
pop
and
mov
bound
add
into
call
push
mov
in
aaa
ja
xchg
pusha
hlt
div
mov
jno
mov
imull
xor
jle
aad
and
pop
das
adcb
adc
or
cli
sbb
xchg
shll
das
and
xchg
outsb
sbb
dec
mov
push
sbb
lods
cmp
inc
adc
pushf
sbb
popa
div
cmp
mov
fnsave
pop
sbb
push
jo
mov
shll
xchg
cmp
imul
xor
mov
push
mov
xor
movsb
test
xchg
ja
push
sbb
push
imul
out
inc
or
pop
jne
xchg
mov
add
loop
inc
xchg
ret
gs
push
mov
sbb
aas
mov
adc
test
cmp
dec
gs
push
out
mov
jae
sbbb
mov
out
shrb
inc
xor
aam
or
arpl
mov
sbb
popf
es
in
push
and
pop
pop
rcll
loope
aas
daa
mov
cli
in
arpl
int3
sub
sub
hlt
xchg
mov
repnz
sbb
repz
mov
adc
rolb
sub
and
add
xchg
data16
mov
loop
and
int
lcall
lret
or
arpl
cs
testl
filds
insb
pop
add
clc
das
test
pop
mov
out
or
sbb
icebp
or
xchg
sub
leave
inc
xchg
test
adc
in
jmp
test
subl
fldcw
call
fildl
jb
pop
out
push
out
into
outsl
scas
push
mov
inc
xor
pop
xchg
mov
loopne
lret
mov
mov
mov
imul
insl
push
nop
cmp
mov
data16
std
in
pop
jbe
aas
jl
loop
mov
mov
je
loopne
aam
jno
je
inc
lea
ret
js
pop
mov
ljmp
jno
clc
pusha
test
fimull
movsl
xchg
sti
xorl
movsb
shll
aas
jo
stc
push
divb
ja
pop
cmp
movsl
and
mov
lret
data16
pop
idivb
sub
adc
mov
add
rcl
subl
std
lods
into
sub
in
adc
sbb
jno
sbb
lret
adcl
jmp
push
mov
ret
and
ret
das
inc
pop
test
xchg
cld
sar
pop
fimuls
mov
cmp
sub
and
mov
mov
stc
nop
jg
punpckhdq
pop
sub
roll
xchg
in
inc
stc
mov
add
lret
ljmp
shlb
mov
int
insb
and
lock
sbb
fs
dec
fidivs
lcall
insl
sbbb
cmpsl
into
mov
ret
sahf
stos
js
ret
inc
xchg
push
mov
ftst
add
clc
lret
mov
int
xor
sbb
and
jnp
pop
out
dec
jb
push
xchg
xor
jg
loopne
icebp
dec
dec
mov
mov
cmc
pop
jo
cli
rolb
in
popf
mov
js
push
loop
xor
xchg
mov
add
test
ja
jns
pop
sahf
mov
sbb
fistpl
cwtl
mov
mov
xchg
dec
dec
cmp
mov
lock
mov
and
loopne
mov
and
lods
gs
popf
stos
lahf
mov
push
movsb
test
xchg
mov
mov
ljmp
sbb
iret
in
loopne
adc
jno
sahf
loop
fbstp
jle
dec
call
mov
sbb
stos
clc
xchg
dec
or
shll
or
shrl
xor
add
enter
or
jle
ret
mov
fwait
xlat
sub
test
pop
sarb
fistpl
dec
mov
sti
dec
inc
daa
jne
inc
ljmp
imul
das
popf
aam
cwtl
sbb
adc
mov
sbb
pop
testl
lds
int
sti
mov
int
outsb
int3
rcll
test
test
fisubl
adc
sbbl
mov
outsl
cli
addr16
pop
mov
rcrl
orb
push
add
xor
or
call
flds
js
sbb
adc
aaa
outsl
cs
pop
aam
jp
ss
mov
stc
insb
inc
pop
outsb
cmc
popf
sub
out
sub
mov
movsl
movsb
mov
dec
push
jo
ret
addr16
cli
arpl
sub
pusha
dec
mov
jo
xor
insl
shll
icebp
inc
adc
bound
jmp
push
pusha
insl
inc
shrl
jmp
jo
ds
es
dec
imul
ds
js
cwtl
xorl
push
repnz
push
push
adc
add
pop
mov
jl
dec
andb
in
or
and
stos
and
rclb
decl
or
or
fisttpll
jbe
mov
in
push
adc
sti
mov
leave
into
push
faddp
pop
dec
adc
add
adc
sub
outsl
mov
xor
jno
pop
dec
leave
icebp
add
clc
ljmp
mov
scas
nop
jb
outsl
pop
out
mov
or
daa
lret
ljmp
jp
fimull
out
mov
sub
adc
test
adc
mov
sub
aas
int
sbb
lcall
pop
or
sahf
negl
popf
mov
cmp
call
incb
xchg
push
inc
add
pop
test
clc
xchg
lds
xchg
push
aas
adc
lods
push
cmova
sub
sub
cld
push
cmpb
out
cmpsl
xchg
sbb
incl
lcall
or
xchg
aaa
jmp
pop
int3
fcomp
ja
hlt
jnp
xchg
mov
pop
or
jnp
sub
lahf
cmp
fisubs
cmpsl
add
mov
and
ret
movsb
dec
subb
xchg
pop
sbb
imul
push
xchg
movsl
neg
mov
xor
leave
inc
ret
sbb
into
gs
dec
pop
rol
jo
xchg
add
popa
sub
jae
movb
and
sub
outsl
xorb
push
add
enter
push
mov
inc
incb
push
cmp
cmp
jnp
loopne,pt
mov
add
adc
adc
popa
xchg
xchg
jle
jg
aaa
add
data16
sbb
out
sbb
das
fsubp
pop
dec
repnz
push
cltd
mov
xchg
xchg
arpl
icebp
das
iret
repnz
inc
sbb
aad
insl
js
shlb
push
movsb
dec
push
push
mov
xorb
nop
aas
pop
xchg
decb
bound
std
je
mov
jl
cwtl
push
mov
out
popf
jo
mov
push
add
enter
inc
sub
ss
fldcw
sub
mov
jnp
data16
test
data16
sbbl
fsubp
test
repnz
xchg
outsb
and
in
ljmp
sbb
jb
cli
jmp
dec
testb
mov
idiv
cmpsl
pushf
enter
pusha
and
hlt
adc
mov
pusha
hlt
cmpsb
rcl
mov
sbb
in
sub
mov
rcrl
mov
adc
add
int3
xorl
xlat
les
xor
and
imul
repz
in
fisubrs
mov
repnz
sub
cmp
fisubl
clc
rcrl
inc
xchg
iret
lcall
sbb
inc
dec
add
mov
cmc
lds
sbb
punpckldq
cmpsb
icebp
filds
mov
aaa
loopne
xor
add
ret
pop
jge
adc
pop
in
arpl
ljmp
push
es
add
jns
fld
lock
test
out
jnp
cmc
xchg
jge
cmp
pop
daa
cmp
pop
cmp
add
pop
hlt
pop
inc
sbb
aam
call
jge
inc
mov
out
pop
test
xor
and
jne
test
adc
mov
stc
xchg
addr16
mov
push
inc
fiaddl
fstl
cmp
es
xchg
mov
bound
aas
and
bound
out
adc
xor
jp
push
into
gs
and
mov
add
not
nop
in
fdiv
pop
std
inc
xor
movsl
call
xchg
add
fcmovnb
outsl
lahf
add
repnz
imul
je
xlat
inc
insl
push
pop
xlat
cld
and
mov
lea
dec
jmp
jae
and
ret
lcall
arpl
fs
xchg
cmp
xchg
mov
adc
pop
inc
xor
adc
dec
pusha
dec
adc
rcll
loopne
cld
jg
movsb
stos
push
or
repz
lods
loope
jo
fstpt
ss
pop
jb
stos
imull
inc
mov
xchg
rorl
and
add
pop
roll
push
add
xchg
daa
dec
mov
adc
roll
sub
mov
into
xchg
and
push
lret
xchg
xchg
lods
lahf
ficoml
sub
and
loope
pop
jle
sub
repz
jecxz
or
add
inc
fcomps
cmp
dec
xchg
cld
xchg
mov
rclb
mov
mov
rclb
mov
out
int
mov
xchg
mov
arpl
in
scas
or
xchg
xchg
mov
mov
jge
inc
jmp
cli
jb
icebp
loop
xchg
cmp
enter
mov
xchg
mov
loop
mov
in
iret
add
call
push
jnp
mov
cltd
ds
js
mov
jp
test
rol
xchg
hlt
rep
xchg
xchg
sub
mov
jnp
xor
addr16
popa
push
push
insl
xlat
cs
xor
rclb
movsl
mov
mov
cmp
lea
sub
cli
popa
repnz
add
jg
fst
and
mov
or
push
cmpsb
fidivs
add
inc
imul
daa
sub
mov
add
rcrb
out
cmp
addr16
adc
loop
jmp
hlt
cmp
pop
inc
int
cs
adc
ds
pop
aas
push
mov
push
and
hlt
cmp
pop
lret
test
stc
arpl
adc
mov
pop
mov
nop
loope
ss
xlat
in
xchg
insb
inc
stos
and
cmc
or
dec
mov
push
dec
in
cmp
sbb
mov
sahf
xor
lods
inc
insb
mov
popa
outsl
add
inc
movsbl
xchg
or
push
lds
sbb
sub
dec
hlt
ds
mov
jmp
dec
cmp
mov
mov
and
mov
aas
jg,pt
push
jbe
repz
js
bnd
es
in
dec
add
loopne
push
mov
into
jle
xor
int
or
or
cmpb
ficompl
pop
xchg
popa
cli
jno
mov
mov
insl
icebp
cvtps2pi
mov
in
dec
sbb
mov
cmp
mov
ficoml
lds
cmp
adc
pusha
fadd
xchg
inc
test
pop
sub
xchg
jecxz
push
mov
add
push
int3
xor
mov
push
fcmovbe
roll
les
xchg
push
cmp
cmp
mov
notb
fsubrp
xchg
call
ss
mov
xchg
js
out
insl
pop
das
cli
std
hlt
and
stc
shlb
je
xchg
incb
insl
ret
ja
mov
adc
out
jne
adc
aaa
xor
scas
je
xchg
loopne
cmp
orb
bound
xor
xor
jl,pn
loope
rol
mov
xlat
ja
jmp
lret
scas
sub
call
jmp
inc
mov
jbe,pn
cmp
fnstenv
push
jecxz
pop
mov
push
sub
mov
pop
cs
fildl
or
cltd
rcl
or
dec
ret
loopne
xchg
and
mov
sub
jae
or
pop
jb
push
xchg
and
icebp
and
sub
data16
clc
xor
hlt
add
mov
icebp
stc
xchg
jecxz
les
loop
jp
mov
ljmp
clc
push
inc
xchg
sub
add
xchg
sbb
adc
mov
sub
ficomps
shlb
out
sub
aaa
shlb
mov
iret
ss
mov
xor
and
lea
mov
imul
test
inc
and
cs
push
mov
or
nop
adc
daa
dec
icebp
mov
fidivrs
push
adcl
movsl
insl
repz
add
stc
sub
pop
dec
pop
pop
jno
fdivs
push
mov
push
cmpsb
cld
xorl
insl
insb
ficoml
sub
dec
aaa
dec
jne
stos
aaa
push
mov
ja
loope
mov
std
sahf
stos
xlat
out
movsl
jecxz
test
jnp
test
loop
jb
xchg
ret
leave
xchg
lods
loopne
sbb
fs
nop
aam
loopne
sbb
in
ja
aad
fcmovnbe
stos
mov
mov
sbb
push
or
adc
mov
sub
hlt
cmp
imul
ss
in
in
into
push
add
imul
sahf
cwtl
push
jg
jbe
or
mov
adc
jo
push
pushf
sbb
pop
test
out
fiaddl
mov
cwtl
cmp
aaa
add
fs
push
jb
mov
aam
cmp
sub
shr
xchg
lret
dec
pop
repz
or
push
fmull
mov
cmp
push
xchg
or
sbb
gs
dec
in
jecxz
cltd
cmp
test
inc
push
xchg
push
mov
push
popa
mov
mov
or
jae
je
jo
daa
inc
loopne
popa
push
cli
das
lret
int3
pop
adc
dec
push
cmc
add
push
movsb
bnd
ljmp
mov
test
cli
rol
lret
jo
ficompl
popf
mov
loopne
xchg
lcall
push
mov
mov
fucomip
xor
xor
arpl
mov
xchg
jge
arpl
jl
sub
scas
push
sbb
incl
mov
faddl
or
je
es
adc
je
ret
dec
mov
fnstsw
lret
cwtl
pop
insb
push
clc
lods
jmp
jo
cmp
test
cmpsb
adc
dec
and
aaa
test
cmp
pop
int3
rcll
test
mov
popa
call
iret
dec
push
fsubl
pop
jecxz
pop
ljmp
aas
cmp
pop
gs
bound
xchg
mov
xchg
dec
pop
dec
mov
mov
xor
or
or
dec
mov
pop
dec
rclb
shlb
push
jo
inc
pop
fneni(8087
push
mov
xor
rcrb
mov
cld
or
out
jmp
negl
cs
sbb
cmc
mov
jbe
fsubp
pop
mov
test
sbb
lock
xorl
or
push
adc
fdivrl
ret
sbb
sub
mov
test
out
sub
lahf
popf
ljmp
adc
fistl
and
push
mov
lods
fcompl
cmp
leave
adc
addl
xchg
aaa
insl
mov
ja
pusha
jb
mov
sbb
inc
adc
mov
incl
cmp
jno
push
mov
outsl
xchg
jle
leave
mov
out
lea
xchg
and
mov
sub
pop
sahf
pop
repnz
mov
pop
mov
inc
ret
inc
out
lahf
and
andb
stos
mov
scas
mov
mov
xorb
jecxz
jbe
jmp
fwait
test
jp
lea
aas
lock
adc
pop
das
pop
add
notb
loope
das
aaa
cli
sti
dec
shl
add
cmpsl
gs
arpl
xor
cltd
cmpsb
lds
stc
xor
sbb
fdivrs
out
fcomps
lds
gs
inc
or
add
repnz
xchg
stos
mov
or
mulb
rorb
inc
pop
test
adc
cld
adc
es
jno
fwait
jb
inc
or
divb
xlat
es
popf
jo
sbb
adcl
inc
fstpt
das
cwtl
aad
out
adc
jle
imul
imul
pop
mov
mov
fmuls
mov
mov
mov
sub
xchg
mov
sbb
sub
pop
xchg
cli
lahf
cmp
mov
add
mov
out
cmpsb
pop
enter
or
and
cmp
dec
sub
jge
dec
and
cltd
push
loopne
sbb
aaa
or
dec
mov
std
dec
add
jnp
push
lods
sub
jbe
and
cli
fnstsw
push
gs
sbb
popa
out
jmp
jae
scas
mov
imul
mov
std
push
mov
push
ret
scas
decl
add
or
int
xor
daa
outsl
and
loop
inc
adc
ja
push
xor
rcrl
cld
adc
add
mov
pop
dec
inc
jns
bound
scas
repz
inc
bound
or
jl
test
xorb
inc
mov
hlt
jg
js
pushf
inc
mov
mov
jbe
cmp
lods
mov
test
jne
push
push
push
pop
dec
xchg
push
xchg
pop
aaa
add
sub
jne
adc
pop
inc
cmc
push
mov
leave
ret
movsl
jno
mov
pop
pop
mov
lods
jmp
stos
mov
call
into
mov
popf
pop
out
ret
push
xor
roll
mov
xchg
lods
push
xchg
pusha
outsb
jmp
fisubrs
xchg
xor
xchg
sub
lods
lret
js
je
iret
mov
mov
and
in
jno
shll
cmpsl
std
int
mov
sub
pusha
cmp
or
xchg
cmpsb
iret
stos
cwtl
mov
cltd
not
int
ret
add
out
mov
jge
aad
fsts
enter
sysret
cmp
push
cmp
jbe
sbb
sbb
popf
add
or
movsl
sub
outsl
adc
mov
xchg
mov
fldcw
mov
enter
sbb
imul
leave
and
jge
shll
outsl
gs
and
ds
in
cli
ja
shrl
stc
push
loope
xchg
sarl
lea
out
and
rclb
lock
test
mov
inc
sbb
fcomps
cli
clc
arpl
pushf
fildll
hlt
cmp
jns
xchg
inc
mov
push
jns
lock
or
call
cmp
mov
fdivs
sbb
repz
ret
push
sbb
nop
dec
and
and
mov
pop
sbb
mov
adc
fadd
leave
pop
or
popf
call
cmp
inc
sub
pop
add
aad
jmp
sub
jecxz
or
dec
inc
daa
repz
pop
push
push
mov
iret
and
aaa
sti
sub
loope
mov
scas
sub
sub
rcrl
push
mov
sbb
jp
jo
cmp
aaa
imul
mov
popa
inc
lock
ret
mov
mov
fmul
out
mov
stc
dec
es
andl
dec
jp
out
adc
mov
mov
adc
mov
cmp
insl
xchg
mov
cmp
push
cmpsl
xor
jge
testl
loop
xor
inc
pop
pop
jne
push
pop
pop
sbb
inc
jp
shr
add
fdivrs
loop
sbb
sahf
in
pusha
mov
sbb
and
scas
hlt
and
divb
push
add
jbe
and
mov
lds
pop
test
push
adc
sub
cmp
rol
push
scas
ret
out
cmpsl
jbe
mov
inc
pushf
in
int
fwait
lock
call
pop
cli
dec
inc
jge
xchg
in
xor
insb
and
xchg
push
or
aam
add
cmp
mov
lea
xchg
test
shl
fsubr
inc
or
clc
and
in
cmpl
push
xchg
call
lea
repnz
cli
fstpl
and
into
inc
scas
insl
or
mov
insl
push
jnp
mov
hlt
lahf
push
andb
inc
je
sahf
dec
fsubl
fwait
lock
fsub
out
mov
shrl
stc
sub
pop
stos
mov
rorl
rolb
sbbl
ret
push
xlat
addr16
xchg
cli
shlb
fwait
xor
push
jbe
jp
push
ret
and
inc
or
out
add
jns
bound
jns
test
iret
mov
lret
and
lahf
adc
repnz
jg
sahf
and
in
sbb
and
lret
mov
sbb
mov
iret
out
xor
xchg
scas
mov
dec
push
dec
dec
cmp
inc
inc
cmpl
add
sbb
jl
xor
test
push
mov
je
add
scas
in
jge
rcrl
dec
jnp
shrb
xchg
dec
fsubs
jg
cmp
subl
andl
and
les
rcrl
adc
rcrl
popf
loope
ss
adc
and
aaa
adc
aam
sbb
je
or
mov
fists
cmpsl
cs
rclb
mov
mov
sbbl
rcll
subb
cmpsb
xchg
loop
sub
lods
bnd
movsb
or
dec
daa
out
cltd
fstl
jno
cwtl
pusha
loope
rcll
aas
mov
rep
clc
pushf
ss
and
leave
mov
push
push
movsb
stc
mov
push
inc
scas
xchg
xor
popa
pop
jge
addr16
mov
or
in
lahf
push
mov
repz
push
dec
cmp
push
xor
and
push
lock
push
xor
js
sbb
xchg
inc
cmpsl
or
inc
mov
cmp
outsb
cmp
add
mov
pushf
cmpsb
pop
mov
push
mov
and
jno
xchg
and
rolb
or
sbb
cmc
cli
les
push
mov
sub
je
cmp
push
mov
xchg
lock
mov
fldenv
aam
bound
roll
add
mov
xor
in
sub
inc
push
std
sbb
inc
push
pop
inc
cmp
dec
pop
mov
push
hlt
xchg
sarb
inc
aas
push
cmp
loop
or
push
mulb
sub
clc
test
jb
adc
bound
mov
add
inc
mov
add
inc
mov
lods
call
dec
jnp
jp
mov
in
fs
pop
mov
dec
push
outsl
clc
or
mov
bnd
mov
sub
inc
loop
mov
jge
ret
xchg
fiaddl
insb
dec
cmp
and
pop
popa
int
mov
scas
mov
ret
fistpl
in
shll
loopne
inc
and
jo
mov
jge
xorl
xchg
fs
jae
and
vprotd
frstor
clc
or
mov
mov
fidivrs
pop
dec
aad
add
dec
sbb
sbb
aaa
cmp
repz
std
jo
jmp
int
test
addr16
dec
scas
lods
cmpsb
lods
pop
add
fbstp
or
sub
jbe
popf
cmp
insb
sub
xchg
push
inc
jo
icebp
pop
add
not
ret
xchg
imul
addr16
test
popa
insb
clc
lds
je
xchg
cltd
mov
clc
sub
mov
and
lods
adc
pop
and
sbb
sbb
xor
push
cwtl
jns
jg
ds
xor
outsl
test
pusha
ret
mov
adc
nop
xchg
into
mov
call
pop
add
iret
ss
inc
out
xor
out
mov
cmc
stos
sahf
lcall
inc
addr16
nop
ljmp
ds
test
mov
dec
rol
jp
push
aaa
test
push
lcall
and
and
fsubrl
pop
push
mov
sub
sbb
jl
out
jmp
jecxz
stos
inc
fwait
pop
adc
xchg
lds
fsts
pushf
add
outsl
mov
out
popa
fildll
jno
sbb
pop
sbb
fdiv
add
sahf
or
lock
jne
das
movsb
out
add
inc
inc
push
push
sbbl
sub
dec
add
jge
sbb
loopne
or
jb
adc
mov
out
cltd
sub
mov
cs
xchg
push
mov
popa
out
inc
arpl
shll
adc
jl
sub
es
push
cwtl
and
subb
stos
mov
insl
push
dec
mov
push
gs
fdiv
stos
xor
mov
adc
repz
dec
flds
mov
mov
nop
enter
popf
aaa
ss
dec
mov
fdivrl
adc
cmc
scas
shr
sub
mov
stc
aam
cmpsl
inc
sbb
and
and
mov
push
sub
xor
adc
xchg
sarl
dec
mov
xchg
adc
mov
inc
movsl
mov
popa
cmp
sub
ficoml
mov
repnz
inc
cmp
mov
mov
sub
jnp
repz
fnstcw
pop
cmp
mov
push
out
test
mov
mov
and
cli
push
adc
in
loop
mov
or
adc
orb
mov
ss
push
hlt
lahf
adc
add
xor
lods
push
aaa
fmull
push
cmp
and
int3
cwtl
sbb
cmp
jmp
push
ss
iret
loope
movb
or
dec
ja
mov
jmp
rclb
ret
adc
sbb
ss
shl
adc
lahf
mov
push
imul
and
test
adc
mov
mov
out
bts
mov
aas
loopne
add
mov
pop
sub
xchg
pop
sub
sbb
rorb
call
xor
mov
mov
pop
or
mov
lahf
cmpsl
test
jmp
and
pop
push
push
dec
sub
shrl
and
aam
cmpsb
cmp
test
outsb
push
int
or
adc
dec
js
popf
inc
mov
gs
ret
in
dec
jmp
cs
add
pop
cmpsb
mov
push
cwtl
sub
push
imull
nop
lahf
test
pop
jl
xlat
lret
fnstenv
inc
popa
dec
dec
jnp
push
rcr
xchg
mov
popa
stc
cmc
daa
xor
cwtl
mov
cld
sti
sub
mov
outsb
stos
xchg
outsb
or
pop
call
outsl
inc
insl
hlt
push
pop
jge
ja
ror
xchg
sub
sbb
push
mov
mov
cltd
adc
push
add
sub
add
inc
fs
outsl
lret
js
cmc
cli
and
jo
cmc
ret
data16
lods
mov
popf
dec
cld
xor
xchg
sbb
and
cmp
mov
xchg
sub
pop
stc
popl
lock
mov
int
xchg
loope
enter
sub
mov
mov
inc
cmp
cmp
adc
mov
shll
sbb
xchg
cld
addr16
in
mov
mov
out
repz
push
inc
out
into
mov
mov
mov
cli
loop
and
dec
pop
in
mov
dec
and
jo
pop
outsb
punpcklwd
inc
fldcw
nop
or
jle
cmc
dec
fisubs
out
push
or
fcoml
add
rol
cwtl
xchg
aad
in
movsl
std
gs
adc
or
xor
sbb
adc
dec
std
inc
cmp
or
daa
test
jp
fldenv
mov
lret
push
ds
pusha
xchg
mov
sbb
adc
jne
call
mov
jp
cmp
sub
sahf
fldenv
pop
push
stc
mov
repnz
sbb
dec
adc
lds
stc
daa
sub
mov
add
in
cmp
add
sub
mov
ret
sbb
leave
jnp
decb
and
jae
and
mov
pushl
xor
out
imul
jl
test
sub
pop
sbb
mov
out
cld
jp
imul
repz
add
fwait
xchg
sarb
outsb
in
stos
aad
mov
jl
push
lods
in
out
dec
aas
adc
xchg
xor
mov
or
int3
push
in
fiadds
sti
pop
and
mov
sti
fdivrs
movsl
ljmp
shlb
lcall
and
inc
jle
cmp
pop
dec
outsl
ficoms
faddp
insb
mov
aaa
jns
mov
clc
add
xchg
fprem1
add
jbe
bound
mov
mov
xchg
cmpsb
subb
cmpsl
or
rolb
in
int
inc
fucomip
data16
mov
and
xor
sbb
sbb
subl
inc
and
sahf
mov
add
mov
mov
outsb
stc
pop
movsl
add
add
sub
clc
jge
pushf
movsl
adc
test
dec
shll
mov
or
inc
in
rcll
pop
loopne
xor
das
adc
sti
fisubrl
and
loopne
shl
lods
out
lcall
pop
inc
rolb
mov
repz
lea
mov
cmp
pop
popa
inc
add
lret
pop
cli
out
je
cmp
jge
fwait
mov
or
lret
jg
inc
sub
test
das
dec
mov
sub
loope
dec
testb
cmp
mov
pusha
je
pop
dec
incl
aam
loopw
sub
mov
inc
inc
mov
lea
fwait
xchg
dec
test
mov
adc
cmp
jae
mov
cwtl
dec
ret
cwtl
pop
pop
mov
andb
scas
dec
inc
push
fistpl
adc
mov
and
aad
std
test
addr16
ljmp
test
jb
xchg
nop
aaa
sahf
dec
xor
repnz
inc
dec
adc
mov
inc
popf
pop
mov
cmc
xchg
popf
sub
sbb
jg
sbb
lea
adcl
pop
daa
repnz
mov
cs
sub
and
outsl
cltd
bound
jge
pop
sbb
xor
xchg
push
xchg
lods
dec
push
rcrb
idivl
sbb
inc
cmc
dec
movb
inc
lea
loop
jmp
scas
scas
outsb
xchg
adc
jle
xchg
push
jne
mov
push
and
mov
lock
cmp
dec
inc
jge
repz
dec
insb
xchg
add
or
mov
psubw
out
insl
and
rolb
push
sbb
sub
cmp
push
cs
jecxz
clc
adc
cmp
mov
das
push
mov
and
leave
int3
fcmovnbe
loop
xor
pop
loopnew
push
mov
stos
in
mov
mov
or
in
out
shrb
mov
fwait
xchg
cli
popa
imul
cmp
enter
add
lret
lcall
push
je
lods
aad
movsl
nop
mov
out
pop
leave
pop
push
sbb
fwait
or
jno
movsl
mov
or
psubusb
iret
insb
and
mov
add
movsl
repz
cmp
lds
cmc
cmp
outsb
adc
mov
cmp
rorb
addl
cmp
xor
pop
sbb
iret
insb
push
inc
dec
mov
pop
mov
push
out
inc
push
jl
pop
imul
test
lcall
test
dec
jne
es
jmp
mov
scas
jae
icebp
cmp
outsl
sbb
add
aad
cmpsb
ds
dec
scas
arpl
xor
jp
mov
test
imul
rol
pop
push
push
sbb
fbld
lret
decl
int3
div
push
cmp
sti
cli
aam
int
in
mov
std
mov
std
pop
cwtl
mov
fwait
sti
xor
cmpsl
and
add
mov
daa
loop
jge
and
push
movsb
xor
lcall
sahf
test
call
shrl
mov
cld
imul
xor
lcall
and
mov
mov
sub
xchg
and
pop
inc
mov
pushf
data16
stos
push
jp
add
and
xchg
jno
fadds
add
jns
or
xchg
cmp
jecxz
xchg
jne
mov
cmpsl
ss
pop
sbb
repnz
loope
inc
xchg
popf
mov
jmp
cmp
leave
dec
out
test
push
push
lea
dec
mov
lret
mov
in
std
nop
jp
scas
aas
popf
nop
jne
xor
or
shll
stos
jo
cltd
sbb
ja
sub
int
imul
ja
cmp
mov
fsubs
mov
pop
cmp
or
jb
pusha
or
cmp
into
and
fidivs
mov
or
test
mov
ficompl
int
test
adc
cld
test
loop
xchg
aad
jo
and
adcb
mov
cmc
aas
jae
mov
decl
sarl
lods
cs
xor
pop
and
cmp
cmp
adc
push
cmpsl
jl
lods
add
gs
sbb
xchg
imul
loopew
ret
push
leave
mov
je
repnz
pop
mov
loop
lea
outsl
rolb
mov
xor
or
and
ret
sub
mov
dec
cmp
pop
adc
adc
sar
sahf
and
jne
lods
scas
mov
jecxz
cld
movsb
jae,pn
cmp
mov
push
sbb
push
push
mov
jmp
push
ja
dec
xchg
cmp
bound
inc
add
data16
mov
xor
inc
or
push
xor
sahf
out
push
or
jl
imul
jns
sbb
push
inc
in
je
lds
sbb
cmp
dec
bswap
daa
pushf
ret
fwait
xchg
mov
add
addr16
xchg
jmp
mov
adc
pop
mov
hlt
mov
sub
mov
data16
int
test
jne
jnp
rolb
aaa
cmp
dec
mov
fs
mov
cmp
imul
aad
loopne
push
mov
inc
jg
xor
cmp
or
push
push
cld
push
sub
sbb
sbb
sbb
int
lret
nop
mov
dec
fisubl
inc
dec
jle
movsl
sbb
cltd
adc
jecxz
sub
add
or
ret
out
inc
repnz
test
xchg
decl
jno
sub
cmp
nop
jno
aad
inc
jno
clc
int
out
or
popa
mov
out
addr16
out
and
cwtl
cmp
xlat
inc
lret
pushf
lahf
mov
sub
repz
stos
or
imul
or
ljmp
loope
mov
xchg
lock
out
sbb
aaa
aam
es
loope
data16
adc
cwtl
arpl
lods
dec
arpl
xor
dec
sbb
jnp
or
inc
sbb
jo
scas
xchg
and
lcall
enter
adc
dec
int
or
ds
jecxz
mov
insb
mov
jbe
or
inc
or
out
test
add
fs
add
adc
jbe
adc
jns
push
jg
cld
loop
lcall
sub
push
test
aam
leave
push
lock
pop
scas
dec
lods
and
in
into
xchg
cltd
stos
dec
cli
jno
jnp
bt
loope
in
sbb
cmp
aaa
mov
es
fst
fdiv
or
arpl
adc
mov
push
lods
dec
xor
mov
mov
xchg
jle
cmp
bound
sub
jg
aad
dec
mov
mov
gs
inc
pop
mov
sbb
mov
inc
rcrb
neg
push
movsb
cltd
inc
stc
pop
sbb
xchg
fwait
and
push
in
or
mov
fs
outsb
push
inc
adc
xor
push
push
xor
ljmp
and
testb
lcall
mov
mov
addl
movsb
inc
loope
scas
addr16
push
mov
rcr
mov
sbb
mov
pusha
cmc
jae
dec
in
mov
adc
inc
inc
xor
jne
mov
sbb
adc
faddl
and
or
sub
push
ja
mov
aad
or
or
loop
cmp
into
insl
ja
fmuls
mov
or
jbe
pop
push
dec
dec
push
push
mov
adc
loopne
daa
push
les
xchg
dec
test
aaa
xchg
and
sbb
push
addr16
jne
jl
loopne
cmp
shlb
sub
push
hlt
xor
inc
ret
adc
bound
mov
ss
add
scas
cmp
mov
mov
js
pop
push
pop
add
xor
push
cld
push
mov
mov
jecxz
jmp
xlat
dec
sbb
mov
out
jle
cs
mov
aad
mov
jo
data16
rclb
xchg
les
sbb
mov
push
and
dec
mov
insb
xchg
mov
aam
sbb
cmpsl
sbb
call
dec
jmp
push
jbe
jp
gs
std
out
lret
lea
test
insb
test
jne
xor
lret
shrl
pusha
insb
out
iret
shll
or
adc
sub
enter
int
jb
jl
aad
pop
bound
roll
xchg
add
repnz
mov
mov
cwtl
imul
icebp
sub
xor
cmp
jg
sub
mov
inc
ret
rorl
ljmp
scas
loopne
mov
es
lahf
lret
push
or
cmpsb
xchg
jmp
push
cmp
push
enter
mov
fwait
xchg
add
mov
aaa
std
out
hlt
icebp
inc
jecxz
cli
rcrb
vpmacssdql
jecxz
int3
mov
cmp
cmp
sbb
cmc
test
adc
movsb
arpl
shlb
jmp
sarb
sub
insl
xchg
and
cmpsl
jo
into
pop
repnz
cmpsl
or
inc
shlb
shr
int3
jmp
fidivs
out
ss
ds
mov
mov
movsb
inc
mov
jmp
ds
mov
fwait
xchg
pop
lcall
ret
xlat
dec
mov
push
inc
push
cmpsb
xchg
mov
jno
jge
loop
ja
rcl
dec
mov
pop
jl
xchg
xor
mov
mov
clc
jecxz
fmull
fists
aaa
in
inc
pop
jg
xchg
xor
pop
jg
cli
pop
push
pop
call
and
sbb
iret
hlt
popa
jb
xor
stos
cmpsb
test
xor
dec
mov
push
icebp
subb
cmc
push
pusha
xchg
adc
leave
je
jge
mov
mov
inc
int3
es
idivl
pop
mov
add
ja
popa
shll
dec
hlt
dec
dec
jg
in
in
movsb
ljmp
lods
test
mov
pop
cli
pushf
or
xor
add
fwait
pop
mov
mov
push
inc
enter
scas
das
xor
jg
sbb
insb
into
push
in
jo
xchg
jae
jbe
push
in
push
aad
mov
fcomip
or
in
dec
leave
lret
insb
stc
outsb
les
push
lahf
pop
mov
push
in
xchg
mov
inc
xchg
test
cwtl
stos
std
bound
add
ret
shlb
xor
insl
xchg
sub
and
iret
sub
inc
mov
sti
sbb
rcll
dec
mov
into
iret
mov
cmp
push
cmpsb
inc
fisubl
std
mov
mov
repz
and
inc
jp
mov
cmp
dec
or
mov
dec
mov
test
insb
cmp
mov
hlt
scas
and
push
push
notb
lahf
mov
xchg
ret
push
push
add
xchg
inc
fnstsw
enter
fsubrp
sbb
rorb
adc
out
jnp
adc
loope
mov
es
lcall
fildll
test
adc
push
mov
cmp
sbb
xor
lods
lret
sub
lods
aas
or
rcl
jns
mov
gs
inc
xor
addl
sarl
mov
insb
and
jns
dec
mov
loop
pushl
pop
fisubrl
mov
test
xchg
ret
mov
out
push
pop
dec
xor
int
xchg
rcrb
push
jmp
xlat
add
pop
into
fists
fcomi
xor
addr16
arpl
outsl
loopne
shlb
loopne
mov
repnz
pusha
mov
pop
jmp
cmp
and
jmp
mov
fucomi
mov
push
push
icebp
inc
icebp
jecxz
mov
fstpt
fcmove
movsl
pop
mov
dec
and
es
pop
jae
cmp
out
adc
xchg
sub
lods
fcmovne
aad
icebp
pop
rcrl
jne
fidivs
mov
sbb
xor
imul
jge
dec
dec
xchg
sarb
sbb
andb
pop
or
sub
lret
stos
push
in
pop
pop
test
nop
dec
push
mov
fsts
test
cmpb
sub
insb
shll
sbb
mov
inc
sbb
imul
adc
arpl
loope
jno
mov
setnp
xlat
push
fs
jnp
xor
out
out
shrl
clc
movsb
push
iret
stos
mov
subps
mov
bound
xor
jno
ficoml
dec
mov
or
lea
es
jl
xor
mov
sub
filds
in
push
js
dec
sar
cmp
mov
mov
dec
ja
int3
movb
xor
xorb
in
insb
pop
popa
mov
pop
inc
cli
dec
inc
sbb
shlb
hlt
loope
mov
data16
cwtl
xchg
adc
mov
cmp
add
je
repnz
sub
and
jecxz
inc
sti
add
cltd
and
int
lahf
xchg
push
mov
mov
in
cli
sub
pop
pop
mov
add
dec
add
ficoms
jmp
jle
fnstenv
cmpsl
jo
xchg
mov
pop
ds
cmp
inc
cmpsl
lock
inc
inc
jl
sbb
mov
xor
aam
aad
mov
pop
pop
add
jo
inc
jmp
scas
cmp
outsb
mov
pop
sub
jns
and
mov
andl
neg
mov
jo
out
sbb
jnp
scas
outsb
in
out
inc
fwait
xchg
mov
fs
cmpsl
pop
repnz
ljmp
iret
jne
pusha
xchg
add
push
mov
jle
cmp
mov
or
jl
imul
push
pop
mov
push
mov
lods
cld
adc
stos
xchg
lock
movsl
gs
mov
pop
sbb
lods
lods
nop
pop
mov
test
pusha
aam
dec
push
out
lods
repz
das
jae
add
lods
jnp
ss
add
das
push
adc
daa
rorb
cmp
xchg
mov
xor
xchg
mov
adc
sub
popa
das
test
call
insl
sub
push
icebp
data16
xchg
mov
jb
pushf
sub
adc
mov
mov
jl
scas
fstl
inc
lods
pusha
mov
mov
loope
pop
cmc
and
bound
orb
leave
mov
sub
ss
gs
fstps
scas
jle
push
mov
ror
ret
sub
cmpb
and
jecxz
bound
mov
or
repnz
adc
outsb
rolb
push
add
push
test
mov
cmpb
push
popa
shl
pushf
push
mov
mov
loopne
rcl
inc
cld
push
or
cli
adc
jg
add
xchg
xor
stc
sti
lods
outsb
cmp
iret
insb
sbb
mov
jno
pushf
loope
add
icebp
lret
xorb
adc
icebp
shrb
shrb
pop
int
loope
sub
push
stos
cli
sub
push
push
inc
rorb
push
lret
jae
nop
je
pop
jo
insl
add
jo
xchg
rol
add
addr16
sbb
cmc
cmp
jns
fcomi
das
je
cmc
pop
das
xlat
roll
push
pop
std
mov
ror
scas
fdivs
adc
pop
mov
pop
fcmovb
pop
xor
aas
jne
arpl
xor
or
test
repz
pop
in
add
rcrl
jecxz
mov
cmpsb
dec
and
jbe
cli
add
data16
into
and
xor
xor
test
movsb
rclb
clc
and
test
mov
jae
push
fsqrt
jp
inc
sub
mov
test
xor
xchg
pop
enter
call
xor
clc
cmpsb
in
jns
jg
pop
pop
cmp
add
call
and
ljmp
test
mov
and
gs
xchg
inc
call
imul
jmp
pop
sti
pop
lods
xor
ss
xor
fmuls
cld
lods
loopne
imul
in
rclb
jecxz
ja
inc
or
add
push
hlt
or
jno
cmc
lds
jge
push
mov
xor
das
cmpsb
push
push
mov
sti
xchg
insb
fcoms
stos
pop
icebp
jo
inc
fimull
xlat
or
fsubs
push
data16
nop
call
cmp
xchg
sub
aas
lods
ret
sahf
mov
movsb
push
scas
fists
repz
scas
ret
push
mov
xor
fsub
loop
xchg
sahf
jno
out
mov
sbb
pop
bound
add
loopne
fsts
iret
repnz
ljmp
iret
lock
stos
mov
nop
popf
fdivp
sbb
ret
or
mov
mov
mov
xchg
shll
adc
lds
test
and
cwtl
ror
inc
xor
adc
out
jmp
das
xor
pop
aas
cmpsb
out
filds
mov
or
push
inc
shlb
imul
sbb
jg
popf
in
jns
int3
jns
int
or
into
bound
xchg
lock
pop
mov
ds
nop
mov
pushf
sti
imul
enter
xor
jnp
jp
lret
es
jge
dec
test
lcall
std
int
push
lods
leave
mov
into
fists
cltd
cmpsb
loop
push
fs
adc
adc
push
cltd
mov
jp
dec
jbe
out
lret
push
mov
addl
xchg
dec
pop
cltd
mov
int3
sub
in
lods
imul
test
mov
insb
jp
outsb
dec
pop
dec
pop
test
pop
sub
outsb
ljmp
arpl
adc
and
xchg
jg
and
mov
dec
or
or
cmp
incl
dec
popa
lahf
stos
cld
xchg
push
mov
add
inc
popa
inc
insl
rcr
push
out
mov
xor
adc
and
fistl
test
call
fs
les
mov
jns
fldcw
push
arpl
addr16
push
stos
xchg
jns
mov
pop
nop
xor
push
add
dec
bound
fs
cld
fs
int
ljmp
mov
cmpsl
sbb
sbb
std
pop
pop
jno
inc
inc
lds
mov
test
aad
int
popf
enter
daa
enter
cmp
nop
cmpsb
pop
pop
outsl
fwait
icebp
pop
pop
pop
in
adc
push
mov
fidivrl
adc
push
cmp
sbb
imul
and
adc
sarb
je,pn
pop
inc
test
fucom
pushf
imul
pop
fdivrs
cmpsl
stc
xor
bswap
xor
cmp
mov
cmpsb
dec
das
jae
xchg
call
xchg
add
clc
arpl
roll
pop
xchg
outsb
scas
jne
sbb
lods
xor
dec
and
je
xor
bound
lock
rdmsr
or
cmp
mov
mov
into
add
push
and
popa
movb
stos
mov
hlt
xor
sbb
pushl
xchg
jae
loop
and
insl
add
jno
pop
pop
xchg
popa
cli
add
dec
test
mov
dec
nop
sub
adc
daa
mov
mov
js
jg
jp
inc
inc
xchg
punpckhbw
push
push
divl
mov
mov
sub
xor
lahf
ficompl
add
out
sub
ret
fcmovb
ss
pop
mov
push
pop
mov
or
lret
movsb
adc
lret
scas
xchg
jb
ds
std
push
xor
push
pop
push
cli
cltd
mov
pop
mov
mov
stos
cmc
mov
xor
clc
mov
push
push
mov
push
std
stos
inc
jo
jno
jmp
sahf
cmpb
xchg
sbb
scas
jne
call
sbb
movsl
adc
or
lret
ds
inc
push
arpl
fstl
ljmp
pop
xchg
mov
mov
popa
adc
xor
insb
stc
push
sub
loop
outsl
cld
dec
ret
sbb
xor
jl
test
lods
lea
cmc
dec
adc
dec
call
jg
hlt
xchg
cmpsb
into
into
ss
adc
enter
and
dec
daa
fcmovne
idivl
xchg
adcl
and
mov
lods
rolb
inc
pushf
and
repz
dec
and
cs
add
jns
call
outsl
mov
pop
xchg
add
loope
std
xchg
mov
movsb
fldcw
push
dec
pop
mov
shl
sub
cmpsb
ret
jbe
or
imul
loope
push
rcl
pop
jmp
les
repnz
lcall
movsb
bound
mov
fisubl
inc
fsubs
sub
xor
jae
mov
adc
and
outsb
cli
popf
fucom
cmp
mov
lret
rol
pop
inc
inc
or
xor
popa
mov
and
jle
jne
mov
adc
fisubl
mov
in
mov
int
xor
es
rorl
add
adc
test
lods
add
das
pushf
arpl
sub
or
xchg
pop
js
in
sub
lea
cwtl
inc
push
jb
and
xchg
xchg
mov
rcll
xchg
out
push
xchg
lea
scas
and
dec
jl
push
into
mov
pushf
in
or
lahf
inc
mov
stos
cmp
pop
addr16
inc
dec
call
mov
cs
adcl
arpl
data16
push
push
fwait
pop
fcoml
adc
mov
jle
push
adc
shlb
pop
dec
mov
mov
sbb
sarl
or
insb
push
rolb
xlat
mov
mov
sbb
inc
out
int
stos
popa
jno
mov
add
inc
inc
lahf
mov
adc
cmp
mov
xor
lret
in
push
fisttpl
hlt
push
dec
xor
insl
fimull
mov
push
adc
icebp
jmp
add
sbb
test
dec
xlat
cmp
inc
mov
sub
das
mov
cmpsb
lods
inc
outsl
mov
adc
cs
loope
lods
jl
add
jmp
fnstenv
fidivrl
popa
push
add
pop
push
dec
cmp
jmp
jae
mov
pop
nop
cli
sbb
mov
push
adc
cltd
mov
and
stos
and
sub
out
push
ja
add
push
into
jo
je
pop
mov
clc
ret
scas
sbb
inc
test
bound
in
mov
or
imul
mov
fdivl
stos
xchg
ds
lcall
rol
push
jmp
das
lea
in
and
lds
fidivrs
lea
icebp
in
mov
scas
leave
stos
pop
test
ss
imul
daa
cmpsl
lea
popa
dec
int
jg
add
push
dec
imul
testb
and
insb
sahf
sub
add
jmp
rcr
push
dec
add
dec
xchg
xor
popa
fmul
jecxz
mov
sahf
fsts
mov
inc
into
pusha
lea
mov
orb
push
sub
pop
add
popa
jle
pop
cltd
loopne
mov
add
push
sahf
lret
jecxz
lcall
negb
inc
and
mov
sub
cmp
push
pop
or
js
mov
fsubrl
mov
lock
mov
mov
fistpll
rcr
fnsave
pusha
cld
xchg
sbb
sub
aam
in
pop
das
sbb
inc
out
cwtl
ljmp
dec
repz
or
stc
sbb
les
sahf
mov
dec
xor
mov
sub
xor
and
popf
lods
loope
xor
jp
sub
outsw
std
enter
loope
xchg
loop
cmp
lods
in
mov
icebp
imul
push
sbb
jmp
shlb
mov
lods
adc
and
push
sbb
sub
pop
mov
jnp
setb
sub
test
dec
dec
push
lods
dec
lods
into
je
shr
fimuls
mov
fwait
cltd
sub
add
std
inc
rorb
sbb
push
jo
lods
and
add
in
dec
scas
and
bound
data16
lret
orb
in
icebp
inc
dec
imul
inc
xchg
das
mov
fsubrp
cmp
mov
loopne
xchg
jp
aam
mov
or
push
and
test
mov
es
mov
jp
jl
stc
bound
inc
scas
pop
imul
mov
bound
dec
out
sahf
mov
shrb
mov
dec
push
in
push
sub
shrb
mov
in
xorl
jno
sbb
clc
rclb
pop
xchg
jb
and
jle
dec
icebp
mov
in
repnz
mov
add
mov
movsb
scas
call
and
or
ljmp
repz
xchg
sub
push
push
roll
rolb
js
out
inc
mov
mov
aad
push
aam
pop
popf
adc
mov
sub
rcll
dec
jl
aad
scas
cmc
cmpl
mov
cli
test
xchg
adc
dec
pop
mov
mov
mov
dec
sub
ss
dec
add
pop
outsb
pop
xlat
add
jno
adc
sbb
xor
cli
test
rol
fstps
movsb
sbb
loop
test
pop
cs
popl
push
adc
mov
popf
dec
pop
mov
dec
sbb
bound
fists
repz
pop
dec
mov
jne
jbe
mov
fs
add
or
jecxz
mov
cli
imul
das
add
xor
imul
and
stos
jnp
xor
les
mov
inc
scas
mov
fwait
pop
mov
sbb
rclb
in
and
mov
loopne
or
imul
adc
pop
jne
mov
shll
loopne
mov
mov
mov
out
xor
loopne
lods
mov
push
sbb
outsl
call
pusha
xor
sub
fisttpll
movsl
jp
pop
outsb
jle
out
jnp
xor
lods
adc
das
jbe
call
pushf
sub
lret
repnz
sbb
movb
lret
push
mov
stc
in
push
mov
insb
fsubrs
or
inc
inc
push
cmp
imul
mov
sbb
flds
adc
sbb
mov
mov
jp
sti
inc
or
shrb
lods
jp
mov
das
cmp
push
push
xchg
movb
jmp
inc
jg
packuswb
fildl
sub
mov
push
popf
adc
push
loop
push
mov
jmp
subl
in
inc
and
cmp
jae
cld
jno
pop
mov
dec
insb
pop
push
jnp
pop
mov
aaa
fcoml
pop
shll
mov
inc
out
xchg
outsl
mov
lahf
push
cli
fnstsw
fmul
and
add
xchg
push
xor
pop
sbb
inc
jle
pop
inc
sbb
push
fsubl
lahf
xor
clc
mov
rorl
es
inc
lret
orl
pusha
int3
ret
dec
cli
or
sbb
ficoms
and
push
push
xchg
pop
mov
leave
rorl
fimull
aas
xchg
mov
push
pop
mov
cld
mov
add
inc
xor
arpl
push
repz
mov
push
cld
cmc
pop
or
cmp
sbb
jmp
movsb
and
cmp
mov
daa
sub
adc
jp
push
pop
or
xor
scas
test
add
xor
mov
aas
mov
outsb
jge
enter
test
lcall
sub
out
rol
aad
sahf
inc
lcall
lods
clc
mov
arpl
cmp
andb
pop
push
sbb
add
pop
adc
imul
mov
and
pop
push
mov
out
cmpsl
repnz
fstl
inc
mov
lret
pusha
jnp
inc
sti
and
dec
jns
std
or
sub
adc
cmp
lcall
out
fcmove
outsb
pop
mov
movsb
data16
and
jo
add
add
sub
jecxz
push
cltd
in
cmpsl
push
cmp
mov
cli
neg
fwait
xor
cmp
cmc
jge
jp
jg
add
push
xor
inc
nop
enter
xor
dec
insl
dec
loope
xor
out
xchg
ss
fiaddl
sbb
dec
and
inc
fwait
cmp
ja
cmpsb
daa
pop
movsb
arpl
jbe
in
out
gs
sub
adc
xchg
cmp
or
stc
cltd
mov
rolb
lods
mov
inc
mov
add
cltd
fistl
orl
int
xchg
jg
mov
pop
loop
adc
push
push
dec
fstpt
ret
pusha
add
pop
mov
cmpsl
adc
jns
rorb
jo
push
mov
inc
mov
push
out
mov
fisttps
scas
std
xchg
cmp
lret
fbld
or
jns
repnz
aad
push
jbe
mov
ja
testb
mov
sbb
clc
fucomip
pop
arpl
add
out
jle
sub
outsl
shll
xlat
or
mov
mov
pop
jmp
lods
pushf
jg
data16
sbb
aas
adc
adc
dec
mov
sub
inc
fsub
mul
add
sti
fdivrs
xchg
dec
push
pop
inc
jmp
pop
jecxz
nop
cmp
and
sbb
frstor
mov
into
fbld
sub
inc
rol
div
push
stos
jp
push
push
bound
sub
jle
dec
repnz
js
js
push
jne
inc
scas
scas
call
and
jl
push
imul
popf
out
adc
xchg
out
mov
mov
lds
cltd
movb
jge
insb
jp
mov
xchg
xchg
xor
fsubr
out
sti
fcoml
jne
out
clc
iret
fstl
mov
movsb
add
sti
loop
mov
jns
inc
push
push
xchg
pcmpgtw
push
sbb
push
or
aam
insl
in
jg
pop
fidivs
lret
xlat
in
mov
jg
shrb
push
das
pusha
cmp
cmp
xchg
add
sbb
sahf
pop
pop
adc
ljmp
addr16
cltd
jge
add
out
push
push
repz
dec
inc
mov
dec
adc
in
xchg
inc
mov
popa
ficoml
fstl
jg
incb
xor
int3
push
lods
divl
sbb
dec
aas
mov
mov
push
cmp
push
or
and
rorl
inc
jl
jge
in
xchg
std
jb
fldt
pop
mov
inc
cmpsl
js
or
movsl
sbb
mov
imul
mov
mov
pop
in
pop
mov
adc
cmp
sbb
mov
lret
jb
ret
lret
push
push
aaa
fildll
iret
add
nop
test
loopne
neg
movsl
add
popf
adc
mov
mov
jl
mov
xchg
push
jl
or
mov
stos
inc
mov
faddp
pop
add
sub
add
mov
daa
iret
inc
inc
sub
inc
mov
enter
mov
movsb
std
jmp
or
mov
out
push
fst
imul
xor
popf
test
lock
pop
xor
pop
cmp
lods
cmc
jecxz
insb
imul
mov
ja
testl
mov
mov
inc
jno
test
push
inc
sub
fwait
mov
cli
insb
inc
xchg
lret
jge
fwait
inc
jae
popa
cmp
mov
cmp
xchg
dec
shl
inc
loop
test
and
pop
mov
rcll
mov
or
pop
lahf
mov
int3
add
iret
add
lods
sub
push
jp
pop
xor
pop
sbb
inc
sar
xlat
rorb
rorl
mov
das
js
add
add
mov
mov
and
jle
pop
adc
xchg
pusha
lods
mov
outsl
cmovbe
rcll
mov
mulb
cmp
jecxz
dec
aad
lock
mov
pop
jbe
push
in
xlat
xor
dec
shll
mov
fsts
sbb
jno
cld
xlat
xor
int
inc
movsl
xchg
mov
aaa
push
and
movsb
pop
inc
add
and
cld
cmp
mov
push
movsb
adcl
push
xor
jp
cltd
sarl
jg
dec
in
loop
add
loope
pop
push
xor
js
dec
jae
es
add
imull
jae
sub
mov
jne
or
das
jo
testl
int
in
cltd
adc
sbbl
or
cmp
adcb
and
out
mov
cmp
pop
or
cmp
test
iret
pop
repz
pop
in
mov
loop
hlt
cmp
mov
pop
lds
cwtl
mov
cmp
mov
lock
shlb
jl
in
mov
xor
movsb
or
insb
inc
pop
mov
add
lods
xor
push
xor
test
adc
insb
xchg
push
cmp
add
xchg
pop
cmp
jmp
fsts
out
push
loopew
push
je
fs
add
lock
lods
mov
test
ret
push
xor
mov
stos
movsb
xchg
and
xchg
cmp
sub
jg
mov
testb
inc
xchg
in
stc
pop
data16
xor
xchg
mov
mov
sub
xor
cwtl
mov
xor
cli
mov
mov
cmp
and
mov
mov
test
imul
mov
cmp
push
lea
insb
inc
mov
jo
and
inc
xor
dec
add
outsb
mov
outsl
inc
or
push
cmp
xchg
pop
and
fdivr
mov
mov
adc
lret
xor
ljmp
fnstenv
je
repz
mov
push
push
pushf
push
xor
repz
xchg
mov
mov
mov
mov
mov
ss
adc
push
sahf
push
sbb
jmp
stos
pop
push
jp
dec
push
jle
mov
and
push
and
adc
push
dec
pop
popf
mov
cmp
push
adc
mov
movsb
push
arpl
movl
jmp
mov
jp
push
mov
jp
lock
es
xlat
pop
sub
cmp
and
rorl
push
out
pushf
pushf
xchg
outsb
out
and
outsl
scas
jno
insl
faddl
insl
jge
int3
sub
cli
sbb
aaa
push
and
fisttpl
jp
mov
icebp
rcll
dec
jecxz
sbb
inc
adc
push
gs
lods
outsl
jl
leave
mov
pop
inc
xor
or
push
pop
mov
sbb
repnz
shll
loop
pop
inc
or
es
pushf
pop
fnsave
jo
or
mov
mov
cmc
jne
cmp
jl
nop
in
clc
adc
push
mov
outsl
mov
pop
loopne
fxch
pop
mull
ds
shll
fs
das
loope
adc
jl
and
ret
xor
in
sub
lahf
mov
mov
data16
mov
xchg
inc
inc
mov
out
scas
fs
leave
int
adc
fldcw
adc
inc
js
outsb
push
clc
insb
arpl
clc
jp
pop
cmp
and
insl
shrb
cmp
pop
mov
push
add
push
mov
inc
fs
pop
lret
xlat
push
sub
in
xchg
xchg
pop
push
sbb
pusha
movsb
addb
lret
mov
xchg
or
fisttps
xchg
mov
jno
std
repz
cmp
adc
add
mov
or
sub
cs
ljmp
or
jg
dec
sbb
jg
cld
mov
addb
dec
adc
adc
or
mov
cmp
in
pushf
push
mov
add
lret
lahf
adc
mov
cmp
dec
mov
pusha
insb
nop
rcll
sbb
lods
int3
out
xlat
push
pop
adc
adc
adc
sar
mov
add
cmpsb
test
stos
or
sbb
mov
cs
cltd
jne
fdivl
test
xchg
cmp
adc
push
scas
inc
frstor
ds
lea
rorl
adc
es
push
or
adc
fsts
jle
rorl
inc
gs
sub
mov
mov
mov
jg
mov
rcrb
fs
imul
mov
shl
jne
stos
lock
stc
dec
adc
sbb
dec
decl
or
and
aas
je
pop
movsb
adc
scas
sbb
push
mov
dec
je
mov
pop
push
out
popf
mov
or
fs
inc
icebp
repnz
xchg
cpuid
idivb
mov
fs
mov
ficoml
and
jbe
mov
movsb
or
xchg
dec
outsl
mov
outsb
pop
or
cmc
mov
push
pop
xchg
push
pop
out
mov
test
aas
sti
cld
out
push
lods
in
inc
sub
iret
out
mov
push
imul
test
mov
insb
aad
xchg
jecxz
sub
fdivrp
pop
push
outsl
cmp
ljmp
mov
cmpsb
xor
or
cmpb
mov
ja
imul
inc
in
addr16
mov
mov
lea
int3
fistpll
enter
out
imul
lret
adc
je
cmc
add
xchg
pushf
dec
in
and
fcomps
dec
mov
push
or
mov
icebp
pop
outsb
xchg
push
push
adc
xor
in
sub
sub
lcall
out
aam
add
enter
dec
inc
jmp
sub
mov
adc
and
lret
fstpt
pop
mov
stos
and
imul
insl
sub
cmp
sbbl
bound
bswap
cmp
push
xchg
js
fadds
in
fxch
sub
scas
mov
pop
jl
pop
mov
in
add
imul
sbb
mov
pop
out
cmp
in
shrl
xor
jg
inc
fmull
sbb
sti
jae
sbb
dec
cwtl
jecxz
bound
loope
mov
sub
pushf
sub
or
out
mov
out
fsubr
icebp
and
mov
and
push
dec
ja
mov
scas
inc
xchg
or
jne
inc
movsb
dec
outsl
sbb
movsb
clc
inc
sbb
jno
imul
bound
xchg
adc
sbb
and
adc
xlat
pushf
push
xor
mov
adc
mov
jnp
insb
imul
xor
mov
pop
rcrb
aas
xchg
imul
ret
faddl
mov
addr16
testb
test
jg
inc
mov
lret
fidivrs
push
inc
inc
xchg
cmp
pop
rclb
sub
xor
mov
xor
sub
arpl
enter
jno
insl
push
xchg
adc
mov
push
pop
adc
shlb
push
cmp
jo
pop
mov
out
lahf
cltd
cmc
ja
add
jnp
out
rol
add
mov
std
js
imul
mov
mov
pop
inc
xor
xchg
imul
sahf
mov
push
jae
or
iret
mov
jo
mov
js
pop
dec
jnp
push
arpl
insb
push
mov
pop
fsts
add
test
imul
shll
and
gs
inc
dec
nop
jae
mov
inc
inc
push
out
jo
insb
push
sti
inc
lret
add
mov
jb
and
in
mov
in
xor
mov
std
leave
ds
dec
clc
push
jno
mov
lcall
insl
mov
out
inc
mov
cmp
sub
inc
mov
inc
pop
daa
in
out
mov
push
imul
or
dec
repnz
pop
inc
shll
cmovne
push
push
aaa
push
and
adc
dec
scas
and
dec
roll
cmp
jecxz
pop
scas
pop
xchg
mov
mov
and
or
and
shrb
test
imul
push
cmpsb
sbb
fwait
rorb
adc
ja
jno
ljmp
cltd
movsb
mov
push
add
loop
jno
xor
pop
adc
add
shlb
jmp
xor
lret
xchg
in
mov
lods
pop
fcoml
pop
inc
mov
and
mov
rcll
int
fucomi
mov
push
add
icebp
imul
testl
sbb
and
xchg
push
add
jecxz
test
lret
lahf
cmp
mov
hlt
repnz
test
fcompl
jae
dec
dec
aas
mov
into
xchg
jg
aaa
out
mov
push
insb
jne
pop
mov
cmc
test
cmpsb
cmp
jl
jno
sub
mov
outsb
imul
adc
sub
jp
test
sbb
rorl
xchg
cli
pusha
cs
test
lds
xchg
xchg
add
pop
push
aas
adc
pop
pop
jne
cmpsl
mov
inc
js
or
sub
xor
loop
fiadds
test
int
or
push
push
mov
js
pop
dec
mov
sub
sub
pop
addr16
outsb
cmpsb
repz
mov
and
mov
xchg
sti
jno
mov
movsl
movsb
inc
push
inc
popa
pop
filds
lea
jecxz
in
lea
xor
out
test
push
orb
push
stc
lock
adc
and
sbb
ja
or
fcomps
jmp
daa
cltd
or
fidivl
pop
inc
mov
fadd
sub
jnp
xorl
inc
mov
div
movsl
mov
sahf
jnp
mov
mov
es
inc
inc
dec
cmc
mov
xchg
xor
cli
jb
pushf
stc
negb
outsl
push
mov
dec
je
scas
divb
or
mov
lea
xchg
dec
in
xchg
sub
add
aas
xlat
pop
and
lods
lods
ja
outsb
std
or
aad
add
fnsave
sahf
lahf
pop
fistps
dec
xor
xchg
outsl
lret
rol
shlb
fnstcw
jle
mov
sub
js
mov
jmp
fsubl
insl
cmp
lock
adc
cltd
jle
orl
int3
xor
data16
mov
inc
ss
and
sub
daa
cmp
in
lret
dec
rclb
mov
and
arpl
arpl
call
jns
mov
cs
out
pop
push
or
push
popa
lock
pushf
mov
pop
into
or
imul
arpl
out
jg
push
jo
adc
add
push
imul
adc
pop
test
xor
clc
ss
fdivrs
xlat
mov
and
cmp
xor
dec
fwait
lods
adc
lcall
leave
cmp
add
or
adc
inc
pop
stos
dec
jb
sub
jno
js
aaa
cmp
mov
sub
push
jno
cwtl
dec
gs
pop
dec
inc
out
aas
lret
das
mov
jp
inc
lret
outsb
pop
adc
push
movsl
popa
fs
mov
sbb
push
xchg
or
inc
shlb
adc
sbb
xor
pop
xchg
add
mov
ret
fs
mov
adcl
mov
fs
pop
add
and
lahf
sbb
mov
jae
jg
xchg
mov
fcmovnb
imul
jmp
out
shll
mov
cmpsl
lods
dec
iret
shr
fidivs
es
das
add
push
xor
loope
fstpl
lods
pop
jg
dec
push
sub
out
icebp
cmp
cs
sbb
shll
pop
mov
ret
fisubs
mov
int3
cmpsl
rcrl
adc
pop
push
mov
dec
cmp
mov
daa
aaa
hlt
loopne
xchg
adc
out
xchg
cmpsb
add
add
andl
add
sbb
pop
jne
mov
jae
xor
adc
add
pop
or
cmpsb
ficompl
lods
inc
sbb
nop
inc
jo
dec
sti
jge
ja
pusha
inc
mov
dec
push
adc
xor
shrb
shrb
gs
jmp
nop
xor
aas
pop
mov
mov
mov
nop
shrb
jns
push
pop
jns
fs
rcll
ljmp
mov
call
jl
inc
shl
ret
pop
cmp
mov
inc
xor
jp
out
aas
ret
in
and
jge
cmp
dec
sub
inc
insl
movl
jg
jp
pop
fimull
loopne
in
pop
xchg
sbb
and
aam
cmp
rcr
scas
push
sub
xchg
popf
jp
jne
lret
push
jmp
pop
cli
sarb
and
cmp
ror
push
pop
int3
pusha
out
push
repz
push
xchg
test
std
in
dec
lcall
cmp
pop
aad
lret
fsubrs
test
mov
adc
negb
inc
movsl
mov
aam
push
jbe
add
push
mov
and
push
pop
or
fsubrs
push
push
loop
push
loop
loop
dec
pop
push
stos
es
data16
push
adc
mov
in
ss
sub
fimuls
or
shll
or
test
cmc
cs
rcrl
pop
loop
fnstcw
inc
xor
push
cmp
mov
sub
mov
xor
loope
or
jp
xor
jb
std
dec
jb
mov
sub
roll
pop
pop
ds
mov
xchg
xchg
jno
sbb
das
mov
scas
pop
js
inc
adc
push
push
ss
mov
push
rclb
push
sti
filds
sbb
push
fidivs
push
movsb
lods
sti
out
sub
mov
or
sub
jb
mov
outsl
jge
push
adcb
cld
cmp
xchg
addr16
xchg
pop
and
movsl
test
cmp
push
xchg
mov
cmp
insb
or
in
sub
or
mov
ss
jno
mov
add
fisubrs
cmp
lret
push
mov
outsb
lret
jbe
pop
popf
mov
cld
ss
out
or
jp
mov
jmp
sub
outsl
inc
into
push
jo
enter
std
lea
sbb
pop
mov
test
sbb
pop
dec
out
xchg
lock
pop
popf
mov
es
mov
test
xchg
adc
cmp
cltd
enter
push
cmp
stos
lea
cwtl
cmp
jne
jb
pop
cmp
movsl
push
mov
lret
orb
or
cmp
inc
inc
dec
out
das
pop
lock
imulb
or
and
insl
or
xor
push
jecxz
inc
shlb
cmpsl
outsl
lods
imul
ljmp
fstps
lahf
mov
xor
nop
add
sbb
xor
inc
xchg
jne
testl
sarl
dec
push
je
add
fistl
js
mov
dec
hlt
stos
jmp
test
mov
sbb
je
dec
stos
in
add
or
inc
mov
and
and
lahf
push
out
paddb
push
mov
fadds
nop
inc
and
test
fdivl
cli
and
xchg
clc
push
ja
adc
cmp
xchg
pop
in
test
ja
pushl
cmpsb
xchg
inc
mov
push
xor
mov
test
scas
movsl
scas
in
xor
pop
and
jge
mov
insl
push
cmp
and
loopne
iret
dec
push
mov
sub
adc
jge
ds
push
std
data16
lods
les
jbe
repnz
sbb
paddq
fwait
push
fnstcw
notb
push
mov
push
pusha
pop
iret
je
push
adc
push
in
stc
iret
in
push
aas
xor
mov
aas
test
gs
psrld
cmpsb
adc
mov
push
stos
add
into
pop
in
shlb
pop
ret
cmpsb
lods
xor
jecxz
movsb
push
mov
addl
nop
or
pop
out
mov
xchg
rcl
pop
test
push
out
jae
sbb
jae
or
test
imul
pop
or
ror
mov
cmp
rsqrtps
mov
test
dec
ret
xchg
sub
mov
insl
iret
pop
push
cld
cmp
rclb
xor
int3
mov
ja
xchg
lds
inc
dec
cmp
fidivrl
and
mov
push
repnz
lods
pop
jp
pop
jnp
lds
push
mov
pop
jl
aaa
f2xm1
xchg
dec
push
sub
sub
push
test
or
mov
call
xor
enter
add
mov
xchg
push
mov
xchg
pop
fists
lahf
jge
icebp
aam
lea
push
repnz
pop
sbb
leave
mov
movsb
mov
mov
je
mov
imul
divl
mov
dec
pop
aaa
fbstp
notl
push
stc
test
loopne
dec
cltd
aaa
test
sbb
cmc
ficompl
mov
inc
decl
int3
dec
daa
cmpsl
jle
std
mov
inc
fsubl
push
call
inc
scas
add
adc
add
out
rcr
add
pop
mov
ljmp
sub
loop
pop
cmc
mov
or
fldenv
out
sbb
fwait
mov
flds
cmpsl
aas
pusha
imul
ss
mov
xchg
test
mov
inc
xchg
mov
pop
adc
push
jae
in
loope
es
sub
out
cmp
mov
mov
shrb
enter
cld
out
jle
ret
or
fcoml
mov
sarl
lahf
inc
fcompl
popf
es
fadds
adc
sbb
adc
add
or
mov
movsb
pop
shlb
lret
fnsave
mov
imul
sbb
loop
cmp
sahf
inc
xchg
pop
data16
dec
sub
cmpsl
fwait
pop
lock
mov
es
cmp
stos
add
js
pop
fs
or
stc
add
cmp
cmp
jecxz
push
xor
rorb
aas
into
and
sbb
pop
xor
lea
jne
scas
mov
into
je
stos
dec
shlb
ss
mov
cli
pop
fiaddl
adc
pop
pop
xchg
push
xor
fsubs
push
mov
jp
or
enter
adc
rorl
movsl
sbb
lods
mov
pop
out
jmp
aaa
cld
sbb
and
mov
je
sbb
pop
jbe
negl
sbb
pop
mov
pop
jl
int
mov
and
push
mov
ja
cmp
icebp
push
mov
fidivrl
repz
lods
cmc
mov
mov
pop
xor
fcmovbe
call
and
mov
mov
ret
shll
in
sbb
push
sbb
mov
insb
ja
and
inc
mov
test
pop
sarb
sub
adc
fnstenv
sbb
cld
sub
sti
in
sub
rcl
adc
nop
jnp
mov
mov
cmp
sarl
icebp
data16
les
popl
outsl
adc
dec
xor
xchg
lods
mov
cmc
pop
mov
push
mov
sbb
jg
fmull
dec
insb
sti
dec
sub
sahf
or
jl
cmp
mov
xchg
repz
jne
sub
jl
fxam
sbb
call
loop
and
push
xor
push
or
mov
jbe
adc
cmpsb
cwtl
pop
cmp
setns
and
imul
shll
jmp
addr16
sti
sub
push
scas
cmp
lods
pop
jmp
mov
fiaddl
in
xchg
ljmp
imul
in
in
in
lahf
ret
repz
mov
movsl
addr16
dec
stos
test
in
inc
cmp
clc
scas
dec
jmp
or
inc
and
xchg
test
jl
mov
xchg
mov
cltd
aad
mov
lret
insl
jge
xlat
xchg
test
lock
ret
loope
test
out
sbb
pop
movsl
pop
cwtl
add
fisttps
dec
sbb
nop
scas
xchg
repz
mov
jge
scas
xor
lcall
lds
ljmp
sub
scas
fstpl
push
adc
lahf
dec
ficoml
ljmp
add
xchg
repnz
pop
mov
sub
dec
std
cmp
jae
repz
xor
call
ljmp
mov
and
mov
data16
fnstcw
mov
sbb
out
jbe
daa
test
push
mov
cmpsb
aaa
push
mov
or
or
and
insl
lcall
sarb
mov
or
inc
fcmovb
inc
pop
cli
fldl
mov
add
icebp
in
adc
adc
fbld
sub
insl
xor
imul
and
das
pop
push
mov
popa
dec
aam
hlt
btc
xchg
mov
mov
xchg
mov
xor
repz
push
pop
outsb
notb
mov
mov
ja
push
xlat
call
sub
popl
insb
xchg
leave
mov
repnz
pop
mov
iret
jae
out
xor
push
mov
fs
mov
mov
ljmpw
mov
pop
lret
imul
xchg
sub
cmp
mov
lcall
outsb
nop
dec
jge
and
mov
adc
pop
inc
cmp
mov
jmpw
cmp
shll
mov
mov
jmp
or
mov
in
subb
push
adc
ja
or
sub
push
das
add
mov
mov
sete
sbb
sbb
dec
mov
je
jmp
cmp
aad
mov
lods
jbe
test
pop
xor
cmp
cmp
xlat
xchg
sub
or
fdiv
inc
out
call
jle
inc
xchg
stos
andb
sahf
daa
rcll
mov
aaa
dec
mov
push
popf
adc
dec
push
jmp
cmpsb
jmp
inc
dec
mov
cmp
push
inc
pop
lret
push
clc
aad
mov
mov
aam
adc
fs
outsl
in
jmp
or
pop
mov
icebp
aaa
mov
sbb
out
cmpsl
xchg
lcall
dec
mov
cwtl
nop
ficoml
mov
pusha
sarb
mov
test
mov
in
clc
cmp
lock
mov
ds
push
pushf
push
imul
mov
sbb
jnp
xor
test
jle
push
clc
mov
repz
lret
mov
imul
mov
or
cld
add
fdivs
sub
scas
sahf
mov
lcall
xor
add
add
fs
shl
and
inc
nop
jl
shl
outsb
nop
push
sub
add
lcall
dec
fsts
js
dec
gs
xchg
mov
pop
dec
inc
jl
test
add
jae
inc
sbb
into
mov
sub
push
mov
or
daa
jge
les
imul
insl
xor
cmp
test
js
jb
test
fdivs
sub
addl
mov
inc
mov
xor
mov
lret
dec
popf
mov
dec
inc
sbb
sub
scas
lea
sahf
adc
dec
jle
push
mov
and
aam
jl
pop
push
jge
out
mov
sbb
xchg
mov
jo
dec
enter
push
mov
imul
bound
lea
lret
jne
add
dec
pop
push
mov
and
and
xor
stc
lahf
or
subb
xchg
aas
scas
or
popa
mov
rcrb
xchg
xchg
add
sub
popf
xchg
mov
xor
out
mov
in
xchg
cmp
mov
sbb
inc
mov
xchg
xor
pop
or
cld
jne
sbb
mull
push
inc
lods
rclb
jb
jg
xchg
cs
push
cmp
jg
cmp
jbe
jb
popf
mov
xor
ss
repnz
es
fwait
movsl
pop
xchg
mov
scas
mov
add
push
dec
xor
fcmovbe
faddl
hlt
test
out
out
in
cmp
scas
jnp
into
mov
push
xlat
mov
mov
repnz
xchg
or
mov
pop
jo
lea
popf
mov
sti
loope
cmpsl
add
sub
lods
in
xor
push
dec
or
push
repz
icebp
dec
jecxz
aam
adc
mov
jp
mov
sub
push
stos
mov
cmp
dec
push
push
xchg
push
mov
add
dec
dec
mov
out
pop
xor
sub
nop
push
movsl
shlb
cmpsl
push
lea
or
sub
mov
pop
dec
mov
jg
mov
mov
loopne
mov
push
jg
sbb
cmp
insl
andb
xchg
fwait
mov
lods
lods
inc
sub
mov
ret
int3
cmc
dec
mov
stos
mull
mov
add
cs
arpl
enter
sbb
sbb
mov
pop
rcl
leave
xor
sbb
add
pop
lds
les
jle
cmp
addb
adc
mov
mov
push
sbb
ret
iret
cltd
mov
lret
mov
push
minps
mov
icebp
shll
jecxz
add
jle
and
or
xor
enter
shll
ret
mov
scas
xor
pop
xor
xor
adc
sbb
scas
pop
xchg
xor
sub
and
sbb
inc
inc
xlat
outsb
loope
jmp
adc
cmp
sbb
popa
push
fcoml
fnsave
or
xchg
mov
inc
movsl
and
add
xchg
testl
inc
mov
mulb
mov
jecxz
loope
scas
addl
inc
pop
mov
jo
icebp
inc
mov
cmpsb
popf
sub
or
outsl
cmp
jmp
bound
lods
cli
ljmp
lret
pop
pop
pop
stc
cwtl
subl
push
pop
sbb
xchg
and
leave
push
dec
mov
sub
cli
fldl
inc
mov
cmc
test
sub
push
inc
sarl
scas
cmp
adc
daa
ja
int3
xor
jbe
xor
xor
adc
cmp
movsl
das
sub
popa
xchg
lret
push
and
jmp
adc
jecxz
aas
push
mov
xchg
mov
or
push
mov
hlt
insb
cltd
enter
jnp
call
out
cmp
sbb
sub
dec
sub
add
into
pushf
dec
jae
mov
xchg
or
jl
shl
mov
push
sti
test
fsubr
sub
sbb
outsl
jmp
or
int3
push
in
or
mov
mov
mov
push
xlat
mov
cmpsl
jo
xchg
testl
stc
in
sbb
jecxz
pusha
adc
add
or
mov
loop
sub
jecxz
and
cmp
loop
int
xor
sbb
movsb
pop
scas
std
jb
negb
lret
jecxz
ffreep
rcrl
fisubl
mov
mov
repz
sbbl
scas
loopne
adc
push
cli
rcrb
xor
inc
pop
add
and
push
in
repnz
outsw
sbbl
jo
mov
popf
sub
mov
imul
mov
mov
iret
out
pop
sub
xchg
je
lret
cmp
in
and
jmp
sbb
fists
sub
sub
pop
fldt
in
fmuls
sub
mov
add
sub
inc
out
movsl
mov
shrb
nop
in
adc
arpl
aaa
arpl
pop
sbb
xor
inc
insb
fwait
jo
jnp
and
sub
cmp
add
sbb
insb
lods
js
leave
inc
gs
fxch
adc
rorb
jl
mov
jno
js
fdivs
and
xor
jo
push
cs
imul
lret
aad
nop
xlat
ss
call
adc
mov
xchg
pusha
adc
jge
lods
jmp
enter
mov
inc
cld
xor
sbb
pop
sbb
push
sub
mov
jge
jne
imul
std
mov
and
mov
popa
xor
or
sbbl
or
mov
xchg
cmp
popf
das
mov
shrb
cltd
mov
jae
test
mov
mov
and
test
cmp
insb
loop
test
cmp
push
push
out
xchg
mov
cmp
mov
incl
xlat
lret
lcall
jl
loope
jb
cmp
cmp
inc
adc
enter
or
imul
out
hlt
int3
or
lret
aam
sbb
das
mov
in
mov
sbb
sbb
and
fwait
inc
mov
mov
daa
test
lods
imul
and
enter
and
mov
or
add
xor
inc
pop
jb
jg,pt
and
xor
dec
jge
xchg
add
push
and
jb
push
lcall
xor
call
jl
or
xor
ds
popa
pop
inc
lods
xlat
dec
jge
aam
sarb
nop
and
and
clc
data16
push
pushf
and
rcr
aaa
sahf
inc
mov
scas
add
cmp
push
sahf
addl
cs
mov
test
sbbb
sarl
ja
pop
xchg
les
mov
inc
int3
aaa
bound
daa
cltd
pop
mov
mov
mov
mov
clc
adc
push
and
rolb
push
in
in
ret
push
into
adc
pop
push
inc
aad
mov
incl
push
or
dec
test
shll
jl
les
push
and
mov
pusha
lock
sub
or
push
test
mov
lcall
leave
in
mov
xor
adc
jmp
cmc
lea
test
jnp
or
cwtl
sub
incb
bound
cmp
inc
pop
xchg
in
rorl
xlat
mov
mov
pop
mov
aam
test
mov
test
xchg
add
popa
ret
mov
push
lock
dec
pop
enter
aad
push
mov
xchg
xchg
push
mov
push
int3
cmp
in
push
jo
bound
icebp
je
dec
mov
lea
insb
cld
ret
adc
pop
int3
insl
shlb
or
sbb
mov
cmpsl
cmpsb
imul
mov
stos
loop
int
lods
or
out
movsl
cmp
xchg
push
push
inc
jge
add
arpl
jno
incl
add
aad
cmp
add
or
cmpsl
sbb
daa
adc
push
mov
loope
scas
dec
push
fisttpl
cmpsb
sub
and
pop
hlt
or
insl
insb
push
insl
int3
clc
xor
mov
pop
stos
scas
or
leave
inc
sbb
xor
icebp
pop
inc
mov
lret
in
sti
mov
daa
stos
push
jns
mov
jae,pn
jno
je
cmp
mov
fidivs
fs
xor
or
clc
outsb
or
sahf
sbb
lret
mov
mov
stos
daa
or
push
ljmp
test
in
or
mov
or
push
lcall
push
jae
and
repz
lock
and
sbb
mov
daa
and
ja
push
xor
test
sbbl
fs
and
jmp
sbb
mov
hlt
jecxz
cmp
fsubrl
dec
xor
add
jge
int3
es
lods
xchg
sbb
fwait
testb
and
pop
inc
mov
sub
pop
aas
rorb
mov
pop
call
in
inc
or
mov
xchg
pusha
jbe
clc
fwait
cwtl
enter
stos
stos
out
sbb
and
xlat
mov
mov
dec
mov
add
push
sarb
pusha
ret
xlat
loop
inc
loopne
aam
pop
aad
cmc
mov
add
cmp
cmp
add
lock
inc
mov
jp
push
or
push
sbb
shr
adc
pop
test
ret
lock
push
nop
mov
jb
mov
mov
mov
bound
mov
cld
rcr
pop
push
or
pusha
shlb
lcall
pop
xchg
push
sbb
fwait
out
dec
mull
xor
fs
mov
or
mov
inc
test
insl
push
loopne
mov
es
mov
addl
leave
data16
and
mov
movsl
insb
dec
faddl
jne
sbb
pusha
dec
jp
lcall
and
mov
pop
dec
push
xchg
jae
aas
inc
sti
sbb
outsb
jae
adcl
and
and
jge
lret
mov
fsts
stos
inc
or
bound
aas
ret
nop
jge
cmpsl
jnp
das
mov
in
pop
repnz
add
insb
call
dec
mov
inc
jle
dec
dec
and
dec
push
dec
int3
jge
out
rclb
lds
test
sub
mov
and
mov
mov
mov
adc
mov
push
subb
jmp
fnstcw
rol
sti
ss
sub
or
test
xor
mov
mov
out
mov
icebp
mov
or
fadd
gs
xchg
push
stos
or
jo
jge
xor
stos
gs
mov
sar
mov
adc
push
imul
push
bsr
xor
lods
pop
add
adc
pop
jge
mov
cs
in
into
sub
add
test
inc
aad
sbb
push
xor
hlt
iret
sub
pop
imulb
ffree
ja
test
iret
adc
in
std
push
stos
popf
and
dec
sahf
lock
mov
loope
sbb
mov
icebp
inc
and
dec
dec
and
mov
lea
jb
jnp
shrb
cmp
addr16
jb
mov
data16
shrb
xchg
mov
leave
inc
inc
sbb
and
jns
adc
sti
mov
shl
mov
xchg
testl
or
push
imul
add
cmp
pushf
and
mov
and
stos
imul
data16
xchg
mov
or
lods
fisubrl
out
xor
mov
fsubrs
or
mov
popf
stc
rcll
flds
sub
roll
aad
push
push
cmp
push
mov
outsb
mov
xchg
pop
shll
lret
outsb
clc
jl
cld
shlb
xor
je
rcl
movsl
mov
insl
pop
std
lret
pop
jne
sbb
not
sti
stos
mov
and
sbbl
stos
dec
call
int
in
inc
call
les
mov
lock
sub
fidivl
dec
insb
iret
icebp
in
clc
sub
dec
fs
adc
and
sbb
scas
push
outsb
je
push
sub
mov
mov
ja
cmp
data16
rol
jmp
dec
xchg
pop
mov
add
roll
mov
shlb
jle
fisttps
or
movsb
daa
push
inc
inc
dec
dec
mov
fists
jns
push
push
cltd
mov
cmp
inc
sbb
push
add
jne
test
cmp
call
push
mov
ret
dec
sarb
push
xchg
sahf
out
mov
leave
dec
adc
mov
sti
inc
xchg
mov
mov
and
imul
lret
xor
aaa
sahf
clc
in
scas
jns
lret
and
push
lods
negl
cmpsb
xchg
xor
test
xor
lret
and
inc
sbb
push
jmp
cs
dec
mov
and
cmp
inc
movsl
pop
adc
and
loope
jp
sub
xchg
add
dec
bnd
rolb
lret
jno
mov
jp
xchg
and
data16
stc
and
add
cmp
jle
adc
sahf
call
testb
ds
xchg
cmc
xchg
mov
and
or
pop
and
mov
and
test
and
mov
pop
pop
fwait
in
out
sar
je
test
dec
test
cmp
mov
mov
xchg
cmp
xchg
dec
mov
out
std
mov
add
pushf
jbe
ljmp
cltd
cmc
jecxz
sub
sub
cmp
jge
cmp
xor
mov
shlb
ret
loop
mov
sarb
cltd
adc
sti
fprem
pusha
jle
xor
jo
mov
pop
or
mov
push
in
loop
aas
mov
mov
add
repnz
ret
cld
call
dec
adc
les
or
sub
lock
jno
dec
std
dec
jle
pop
push
jl
icebp
mov
lret
in
mov
jg
mov
and
mov
add
mov
mov
sbb
and
lods
cmc
xchg
cmp
mov
mov
sarl
fwait
imul
mov
cmp
andb
jne,pt
inc
in
and
orl
subb
push
mov
pop
mov
and
cld
and
in
jb
sub
repnz
push
xchg
pop
nop
loop
leave
mov
sub
adc
cvtpi2ps
mov
jecxz
jl
and
jg
pop
xor
outsl
pusha
shll
gs
cmp
negb
in
mov
bsr
and
mov
xor
ja
mov
add
adc
int3
jne
add
fincstp
inc
std
pop
cmp
lods
in
out
cmp
sbb
stos
dec
dec
clc
mov
fwait
add
dec
aam
test
jno
addr16
and
fs
pushf
les
int
add
inc
in
adc
stc
imul
stos
clc
pop
std
data16
push
cltd
mov
stc
cltd
or
mov
inc
jo
ss
in
cmp
pop
popa
or
bound
add
ljmp
clc
add
cmp
mov
sub
ljmp
andl
push
pop
dec
cmpb
mov
sbb
scas
in
fiaddl
mov
adc
in
push
out
cltd
ret
and
xchg
mov
daa
mov
cmp
aam
imul
fsts
dec
or
icebp
data16
inc
stc
popf
or
cltd
xchg
cmp
int3
adc
into
cmp
sub
call
mov
js
ss
xchg
xchg
call
mov
scas
movsl
outsb
out
jo
arpl
and
lds
fisubl
inc
jnp
or
push
ret
jb
mov
inc
cs
mov
shrb
imulb
out
out
or
cltd
out
popf
mov
push
mov
inc
mov
clc
gs
adc
stos
addr16
js
or
adc
ss
dec
sbb
dec
cwtl
cs
fcoml
jns
mov
mov
ffreep
adc
push
mov
sub
fstpt
jns
popf
sbb
push
stc
sub
mov
sub
cmpsl
lods
pop
insl
insb
jecxz
pop
xchg
fcomps
push
out
bound
cmpsb
jne
popf
iret
fisubl
inc
adc
fidivl
into
or
xor
outsb
pushf
jmp
jp
jo
push
mov
mov
daa
adc
ss
shll
addr16
in
jp
scas
cltd
mov
imul
mov
xchg
xor
ss
negb
xchg
push
xor
cmp
testl
cmpsl
jmp
shlb
call
lahf
sbb
test
push
cltd
pop
sub
pop
test
add
leave
cmp
sub
pop
mov
dec
and
ss
sub
call
dec
fcomi
mov
sub
adc
fbstp
push
rcll
shrb
cli
pop
aam
clc
lods
dec
call
push
lds
xchg
add
or
or
pop
jbe
or
nop
sub
jg
mov
aad
rcll
xchg
jecxz
xor
and
hlt
mov
jo
imul
push
mov
xchg
sbb
cmp
push
lods
fdivr
lret
or
xchg
shlb
scas
push
lods
dec
lcall
mov
fwait
cmp
es
aas
stos
daa
xchg
adc
xchg
in
push
sub
sbb
mov
mov
push
hlt
popl
mov
outsb
icebp
mov
dec
inc
fisubs
pop
lcall
shlb
dec
and
mov
and
sub
movsb
notl
test
adc
adc
jg
pusha
cli
jmp
xchg
push
cmp
in
sbb
add
add
mov
repnz
push
sub
push
lock
mov
or
mov
or
pushf
pusha
push
clc
fistps
call
xlat
pop
push
sub
or
jb
mov
test
adc
out
out
cmp
outsl
addl
pop
je
pop
mov
mov
divl
xchg
outsb
pop
movb
and
inc
cmp
fnstenv
mov
or
mov
cli
mov
push
fsubl
or
enter
push
sub
test
gs
mov
mov
ret
icebp
push
lret
out
sti
fstl
push
clc
mov
enter
adc
aad
push
push
xchg
shrb
enter
lds
mov
repnz
leave
stos
push
add
enter
sti
pop
cs
popa
out
cmc
and
xchg
stos
and
outsb
adc
decb
push
addr16
push
mov
mov
js
cld
pop
rorl
or
test
jp
jg
xor
push
stos
push
push
int3
cmp
adc
xlat
dec
adc
lods
jl
or
scas
and
fsubr
lock
and
mov
lahf
and
sbb
sarl
cmp
sub
mov
cmp
cs
mov
mov
arpl
xor
jae
clc
sbb
sar
stos
je
dec
jg
pop
jb
aaa
repnz
mov
sbb
mov
xchg
fucom
mov
pop
push
and
dec
cwtl
adc
and
mov
xchg
dec
jg
inc
dec
lds
lock
int3
mov
mov
icebp
xor
movsl
mov
stos
jb
and
or
jle
or
rcrb
lods
inc
sbb
lret
jecxz
sbb
in
repz
fcmovnu
inc
mov
std
add
rcl
faddl
xor
subl
pushl
loop
enter
push
sbb
popa
test
xchg
adcb
mov
xchg
adc
xchg
cs
pop
stc
mov
sub
inc
aad
xchg
fsubs
subl
lret
cmp
add
addr16
fdivp
xor
push
dec
mov
lea
or
lods
mov
bnd
gs
sbb
cmc
je
inc
inc
test
fcompl
mov
sbb
adc
sbb
insl
pop
dec
jp
jl
cli
mov
es
cmc
xchg
mov
adc
cwtl
hlt
push
pop
jp
cmp
lahf
mov
not
sbb
inc
ret
push
idivl
push
push
fwait
mov
aaa
sub
mov
jge
dec
adc
pop
ja
push
popf
mov
movsl
out
pop
enter
pusha
mov
or
inc
push
xchg
aam
xchg
sub
xchg
jle
mov
repz
and
jne
push
mov
sub
push
fdivs
faddl
mov
add
int
lods
js
sbb
lock
out
inc
sbb
es
notb
loop
aaa
xchg
lret
xchg
jnp
xlat
mov
xchg
in
lods
add
adc
scas
lods
sub
pop
xor
inc
test
xor
jge
add
hlt
sbb
mov
imul
xor
shlb
xor
out
ret
les
adc
push
icebp
in
add
adc
dec
jp
lret
mov
dec
mov
xchg
adc
push
ja
daa
fisubl
sbb
fwait
push
into
jae
ds
mov
mov
pushf
or
scas
cmpsl
xchg
repnz
jp
pop
jge
hlt
popa
test
sub
or
dec
ja
cmp
adc
add
xor
movsl
push
ss
push
jns
test
xchg
ljmp
fistl
push
xchg
mov
lock
lahf
jae
inc
mov
xchg
je
push
in
push
xchg
dec
mov
adc
cmp
jp
push
cltd
jg
lds
gs
adc
xorl
add
and
aam
push
sbb
sub
in
lret
inc
and
push
fwait
jbe
jg
jbe
jg
xor
mov
jb
jle
addb
lods
imulb
rcll
pop
and
out
sub
add
push
xchg
ja
int3
les
dec
leave
add
imul
cmp
push
sbb
push
lret
sub
or
rorl
mov
pop
adc
aad
mov
or
movsb
pop
icebp
lret
or
mov
shll
push
loopne
adc
das
mov
popf
jl
xlat
pop
dec
ds
cli
loopne
push
mov
mov
lcall
push
stc
fstpl
lock
outsl
add
mov
aam
in
jge
cmp
adc
push
pop
jp
push
rolb
mov
sbb
lds
mov
lret
xchg
notb
jp
push
pop
mov
jecxz
mov
lcall
mov
setl
adc
add
or
andb
test
adc
clc
xchg
insb
ret
addr16
pop
daa
lods
dec
aas
bound
rclb
bound
push
or
sub
add
inc
sbb
add
pop
push
cmpsb
mov
fisubrs
adc
and
rorb
popa
xor
lret
ljmp
mov
xor
mov
cmp
ret
lret
jo
daa
cmp
leave
push
bound
and
sti
adc
pop
mov
movsb
out
mov
arpl
hlt
mov
cmp
dec
cmp
jle
cs
lea
stc
test
xor
in
out
mov
mov
xchg
add
mov
sbb
mov
pusha
fucomi
or
xchg
sub
mov
sub
shlb
nop
jnp
push
test
jle
xorb
cmp
sbb
lods
push
daa
sub
push
xor
adc
mov
pop
sbb
aam
inc
pop
lcall
mov
sbb
xchg
push
imulb
xchg
mov
cmp
adc
cmp
popl
std
dec
cwtl
dec
xor
pop
sar
icebp
pusha
mov
stos
daa
dec
data16
lcall
xor
fidivs
jns
xchg
fcompl
pop
orb
loopne
sbb
test
mov
push
imull
inc
mov
add
pop
cmpsb
arpl
jmp
bound
dec
sub
jo
out
push
dec
jge
leave
fldcw
adc
mov
je
jle
cmp
xchg
jl
std
cwtl
sbb
mov
out
xchg
das
sub
mov
aad
data16
jb
xchg
fwait
stc
push
fcoms
aas
mov
aas
and
and
bound
ja
mull
cmc
xchg
cli
cmpsl
mov
fcmovnu
pop
pop
repz
mov
in
jp
inc
mov
xchg
outsl
clc
fstp
xchg
aaa
lods
dec
push
sub
shl
stc
das
insl
out
pop
nopl
pop
rcl
hlt
lock
and
andl
or
in
mov
xchg
mov
sahf
xor
into
ret
add
ljmp
ficompl
cld
adc
and
ss
dec
out
and
adcb
int3
pop
fadds
dec
fsts
test
or
cli
cmpsb
push
sbb
inc
xchg
or
lds
cwtl
repnz
mov
lret
jmp
xchg
loope
ljmp
insl
adc
loop
js
xorl
cmpsb
aam
fstps
movsb
fisttpll
jge
dec
jns
mov
inc
mov
out
pop
imul
xchg
lock
xor
pusha
test
std
dec
idivl
cmp
dec
cld
je
test
pushf
jnp
scas
push
jl
jmp
cmp
mov
fadds
cmp
jae
les
sbb
in
sbb
cmpsl
push
add
int3
xchg
jge
movsl
push
rorb
outsl
adcl
out
inc
pop
repz
outsb
adc
int
ss
fstl
fstpt
pushf
mov
mov
insb
stos
imul
fnstcw
idivl
ret
nop
cmp
imul
clc
sub
aas
ret
push
jmp
lea
ljmp
out
push
stos
inc
inc
jno
cmpl
lret
cmp
hlt
jl
sbb
add
pop
mov
in
fwait
es
sbb
imul
push
cmp
icebp
jae
mov
adc
outsb
jb
pop
loop
arpl
dec
iret
dec
jbe
lods
stos
add
sbb
pop
aas
lret
hlt
pusha
dec
mov
out
stos
fisubrl
sub
aam
out
leave
mov
repz
adc
ret
sub
or
dec
cmp
icebp
repnz
add
fsub
cld
lock
mov
out
xor
mov
fistpll
jae
call
cmp
and
adcb
or
adc
push
pop
jne
and
xor
imul
stos
cmc
fistps
mov
imul
fistl
or
and
loopne
jecxz
sub
xor
jae
negb
mov
fidivrs
push
jecxz
adc
cmp
mov
jg
add
fwait
xchg
sub
jmp
arpl
and
jae
into
into
pop
call
inc
rcll
pop
and
icebp
inc
cltd
cmpb
cmp
push
inc
add
lret
dec
xor
inc
push
fmull
and
jecxz
enter
mov
or
and
dec
add
arpl
leave
imul
daa
das
pop
es
movsl
lods
out
lods
filds
addr16
xchg
fisubrs
mov
pusha
jl
and
fldenv
pop
xlat
mov
xchg
bound
xchg
push
addb
out
adc
cwtl
pop
das
or
popa
lods
dec
push
jnp
cmpsl
lcall
dec
mov
adc
bound
pushf
mov
pop
lods
cmpsl
lock
or
pop
jl
cmp
arpl
in
mov
lea
pushf
jp
gs
jle
fnstenv
pusha
idivl
loop
adc
pop
stos
imul
repz
pop
adc
ret
pop
sarb
or
frstor
cmpsl
insb
js
pop
in
fwait
loop
lcall
mov
shll
cmp
and
add
xchg
mov
sbb
push
jo
and
cli
shlb
fadds
ret
push
mov
mov
adc
xchg
into
adc
mov
push
inc
xchg
sbb
mov
mov
lahf
cmp
xchg
pop
pop
rorb
fnsave
mov
loopne
iret
mov
fdivs
push
add
imul
sbb
mov
inc
sub
aad
pop
test
pusha
jge
clc
xchg
xchg
mov
ja
jp
sub
arpl
sub
aam
shrl
cmp
out
inc
push
stos
rclb
sti
js
pop
xchg
cmp
in
cld
mov
and
out
jbe
mov
mov
sub
mov
rcl
int
jnp
or
inc
outsl
aaa
stos
xchg
push
cmp
ds
lds
cmp
repnz
mov
xlat
test
mov
mull
sub
aaa
ficoms
mov
xchg
jbe
addr16
repz
mov
cmp
inc
add
cld
mov
add
push
test
rolb
mov
icebp
fldl
sbb
in
mov
cmp
adc
mov
add
cltd
andl
inc
shrl
xor
inc
jae
jns
nop
inc
enter
add
xchg
and
push
fcomps
pusha
aaa
nop
fwait
or
es
cmp
addr16
fwait
popf
xor
sub
mov
into
loopne
or
push
cs
pusha
or
cmp
inc
imul
jnp
jmp
lea
sub
inc
out
nop
jbe
or
push
jbe
sbb
inc
out
jecxz
cld
sub
pusha
xor
adc
daa
mov
out
push
adc
sbb
jmp
imul
sbb
sti
div
popf
lods
mov
mov
js
loope
lds
jmp
adc
int
mov
call
aad
stc
aaa
fidivl
or
add
and
arpl
dec
sti
push
pop
fldl
test
iret
bound
lcall
cmpsl
cmp
mov
push
mov
adc
in
mov
mov
adc
shrl
lahf
jp
ljmp
repnz
aam
mov
fwait
cld
cmpsl
mov
stos
int
adc
xchg
mov
jb
push
insl
shl
mov
inc
sbb
push
jmp
pop
mov
scas
cs
or
pop
push
adc
ret
in
sbbl
or
pushl
jnp
lahf
add
lcall
cwtl
or
leave
arpl
push
cmp
pusha
mov
test
xchg
adc
jo
adc
mov
mov
and
movsb
mov
jg
daa
or
pushf
xchg
das
xor
sub
jbe
loop
jnp
pop
mov
sbb
std
or
adc
scas
inc
out
xor
mov
shl
inc
lahf
lods
aaa
movsb
jecxz
mov
test
popa
rcll
stos
xchg
js
dec
push
pop
mov
xor
sub
jp
push
cli
push
push
xorl
mov
insl
jmp
push
stc
xchg
xor
leave
dec
out
mov
shll
cmpsl
in
shrb
ficomps
xor
in
cli
jge
adc
add
push
sub
mov
repz
not
inc
call
mov
fwait
sbb
mov
insl
movsl
lahf
add
pusha
sti
bound
mov
sbb
and
test
add
out
icebp
lds
test
and
cmc
or
ret
cmp
mov
in
adcb
ret
aaa
xchg
or
pop
roll
jo
int
fisttpll
cmp
mov
jb
jecxz
push
adc
inc
push
inc
pop
mov
pop
neg
push
xchg
adc
pop
mov
xor
cmp
sbb
pusha
cmp
pop
pusha
std
mov
or
int
incl
xor
mov
push
leave
or
mov
mov
adc
mov
fldcw
daa
fstpl
popa
push
out
fiaddl
sub
cltd
repz
dec
xchg
push
cld
stos
cmp
aas
in
decb
movl
cmpsb
imul
ds
lods
int
mov
call
xor
ljmp
and
gs
lret
or
xlat
sub
and
or
push
cmc
popa
push
xchg
outsb
add
lcall
jecxz
lds
or
cltd
std
xor
mov
shll
loopne
andl
mov
and
ljmp
push
pop
sub
xlat
lds
sti
xor
lock
inc
nop
or
fstpt
mov
mov
lea
inc
test
push
sbb
and
gs
outsb
daa
mov
mov
xchg
jnp
out
push
ret
xchg
divb
test
or
popa
dec
andl
jle
pop
mov
mov
dec
cmpsl
ror
enter
movb
aas
ret
push
fnstcw
mov
mov
stos
pop
mov
nop
xorb
mov
and
and
push
mov
xchg
sbbb
int
stos
test
outsb
inc
xorb
gs
cmp
inc
mov
lahf
xor
xor
adc
jmp
data16
outsl
pop
lcall
int3
dec
pop
leave
mov
stos
int3
inc
stos
aad
adc
int
cld
inc
adc
repnz
mov
pop
ja
inc
shrb
and
fsubl
data16
jle
outsb
inc
ds
ja
stos
jg
adc
push
jge
je
mov
pop
mov
and
cmp
mov
enter
insl
lock
xlat
mov
mov
push
ljmp
xorl
loopne
pop
mov
xor
cmpsl
repz
mov
inc
in
mov
cmp
mov
repz
cltd
je
mov
fsub
dec
sub
in
aam
stc
fcmovbe
popf
mov
enter
jmp
sub
stc
jecxz
sbb
jne
lret
xor
lods
inc
or
test
aad
xor
or
jg
cltd
stc
sbb
inc
divb
scas
sbb
inc
xchg
imul
cmp
aas
ja
ret
jbe
mov
xchg
lahf
das
push
lret
ret
mov
mov
loop
popf
or
aad
dec
xchg
out
repz
mov
outsl
aaa
loopne
or
sbb
out
jne
fnstcw
lods
dec
aaa
test
mov
inc
adc
movsl
mov
pop
jnp
das
fwait
xlat
mov
hlt
call
mov
into
mov
int
int3
cs
inc
push
and
leave
out
xchg
mov
jo
xorl
jecxz
pop
lret
fsubs
outsb
shll
jle
adc
xor
fadd
xchg
nop
hlt
repz
push
sub
mov
mov
pop
in
push
xchg
xchg
nop
xchg
xchg
mov
fidivl
mov
out
call
gs
push
pop
into
push
stos
push
jp
mov
imul
mov
sbb
cmp
daa
incl
das
test
pusha
movsb
push
adc
adc
nop
nop
cmc
adc
jo
sub
pop
sbb
xor
mov
pushf
mov
mov
cltd
mov
dec
cmp
push
mov
aad
std
adc
or
popa
push
and
xor
add
mov
adc
mov
add
lds
mov
cmp
pop
push
sti
or
pop
sbb
int3
test
gs
jecxz
inc
ljmp
cwtl
jle
imul
mov
add
inc
cmp
mov
lcall
ja
cmp
aaa
mov
push
inc
xchg
jg
testl
mov
push
and
pop
out
outsb
ja
sbb
fstpt
add
into
sub
xchg
or
push
jne
cmpl
mov
inc
frstor
imul
cmpsl
mov
in
add
and
ja
imul
aas
pusha
je
xor
inc
loope
jo
daa
dec
jg
jo
xlat
sbb
or
xchg
mov
daa
leave
movsl
dec
dec
mov
mov
fsubrs
popf
rorb
mov
push
clc
inc
in
ja
xor
shlb
mul
insl
inc
jno
jmp
cwtl
pop
and
jle
pop
jo
loop
mov
xchg
lahf
or
pop
xor
mov
and
sahf
scas
imul
cltd
add
orl
fstl
or
test
imul
hlt
mov
inc
and
loopne
xor
cmpsb
sbb
ds
shlb
cmpsb
popa
or
fcomps
mov
ljmp
dec
ret
add
lahf
mov
add
sub
ret
pop
push
and
adc
jle
les
push
sub
pop
test
push
pop
mov
rcr
add
das
insl
mov
mov
jo
loopne
dec
inc
scas
xor
movl
dec
out
mov
xchg
mov
xchg
adc
outsl
out
pop
inc
jmp
aaa
xor
aad
and
cld
push
xor
cmc
pop
jmp
ret
not
jmp
pop
sbb
arpl
pop
inc
mov
inc
inc
gs
jl
pop
cs
push
lcall
fisubrs
ficoml
pop
dec
cltd
movsl
aam
out
dec
pop
loop
pop
aad
add
add
sub
lcall
sarb
fwait
lock
imul
jecxz
cmp
bound
out
mov
decb
adc
cmp
lds
cmpsw
push
cmpsb
leave
testl
dec
ret
and
loopne
nop
jae
mov
loope
add
push
dec
icebp
push
pop
push
pop
mov
jp
xchg
jge
mov
cmpsb
add
dec
sbb
xor
push
or
hlt
ss
inc
sub
xchg
es
mov
jnp
fldenv
lds
add
cmp
mov
mov
mov
dec
mov
into
lahf
in
jae
ret
pop
dec
push
dec
push
mov
test
into
outsb
push
dec
test
sbb
or
stc
test
xor
in
jns
xchg
rorl
stc
sub
push
inc
cmpsb
or
out
rorl
loope
cwtl
sub
fsubrs
cmpb
lds
imul
xor
cmpsl
fs
rol
lock
adc
and
mov
cmpsb
jmp
dec
test
sub
daa
cs
lgs
lea
inc
lock
std
jno
movsb
adc
push
jecxz
jne
adcl
xchg
or
jae
dec
insb
xchg
cld
sub
or
sti
int
call
adc
xchg
test
les
aam
mov
cs
push
imul
add
mov
adc
sbb
mov
pushf
add
sbb
jnp
cmp
or
ficoms
dec
addr16
fiadds
insb
mov
aas
or
jmp
mov
jmp
jns
jbe
push
frstor
xchg
iret
push
jbe
lcall
and
dec
jmp
mov
outsl
xchg
push
push
and
fildl
jno
inc
dec
loopne
adc
pop
ja
or
lcall
test
sahf
push
movsb
femms
es
sbb
popa
xor
push
mov
jmp
and
jmp
sbb
sti
mov
jns
xor
inc
jae
les
mov
or
sahf
dec
inc
repz
sbb
out
clc
jmp
cltd
pop
fcmovbe
jb
pop
stc
inc
mov
loop
sub
inc
sahf
mov
out
or
fs
pop
js
cmpsb
testl
add
xor
stc
mov
xchg
subl
cwtl
inc
add
loopne
inc
or
and
test
pop
ficoml
pop
push
mov
push
mov
inc
adc
add
daa
xchg
add
repz
insl
push
mov
rcrb
cld
call
mov
xchg
popf
data16
mov
mov
mov
push
add
push
movsb
mov
mov
pop
in
call
in
std
fnstenv
xchg
shr
subb
jge
jns
aas
std
mov
leave
add
call
aaa
in
dec
fisttpl
mov
jp
pop
mov
push
xor
js
addl
xchg
cmpsb
inc
pop
movsb
stc
jp
xchg
cmp
or
mov
inc
loop
push
repz
mulb
mov
add
xor
in
pop
pop
push
cmp
inc
or
xchg
hlt
cltd
int3
mov
or
add
mov
push
inc
mov
outsl
jo
dec
sub
leave
sbb
mov
jp
pop
imul
push
xor
jno
pop
movsb
ds
out
sub
stos
ljmp
cwtl
out
dec
icebp
arpl
push
jge
push
addr16
jp
xchg
js
das
std
outsl
jmp
or
es
and
mov
or
or
mov
aas
mov
movsl
rcrl
pop
out
sub
push
push
pushl
inc
and
jb
mov
rcl
int3
xor
outsb
xchg
mov
mov
add
iret
mov
add
push
lods
adc
inc
sbb
lret
mov
enter
ret
inc
jo
inc
mov
pop
jmp
sahf
push
push
cmp
mov
push
xchg
iret
and
sahf
inc
jno
jle
jg
or
fidivrl
rcrl
xchg
lret
aaa
or
xchg
pop
mulb
inc
push
nop
inc
fbstp
lret
mov
scas
xorb
jle
adc
fimuls
or
adc
lcall
std
inc
push
mov
stos
inc
add
ret
sub
js
movsb
cwtl
imul
pop
mov
adc
sar
dec
sbb
mov
out
movsb
cmp
sbb
ja
test
pop
xlat
cmp
lds
push
lock
inc
out
cmpsb
dec
clc
inc
scas
mov
lahf
fidivl
pop
lock
mov
pop
jg
ret
xchg
pop
lret
xor
stos
nop
jp
repnz
gs
cmp
popf
lods
fwait
cwtl
icebp
mov
les
sub
add
or
add
xor
pusha
pop
mov
daa
popl
int
ss
idiv
jns
pop
and
dec
cmp
test
mov
sbb
cwtl
adc
sbb
loopne
pusha
or
cmc
mov
fnstcw
dec
lds
or
dec
and
aam
sahf
mov
jecxz
repz
jg
jp
and
out
xor
cmp
fs
xchg
sbbl
scas
sub
popf
cltd
pop
jg
pop
sbb
cmp
mov
cmp
sub
dec
pusha
jmp
aas
ja
dec
dec
sub
fiadds
or
dec
pop
adc
stos
xlat
push
sbb
pop
xor
xor
cld
dec
mov
inc
mov
call
add
or
orl
hlt
les
add
jmp
lds
scas
mov
mov
xchg
cmp
pop
lahf
or
mov
stos
scas
xor
and
sbb
sbb
daa
aaa
lods
dec
js
fs
add
adc
ljmp
ja
cmp
daa
push
nop
or
push
enter
mov
out
xchg
dec
mov
enter
ret
sub
loopne
lock
adc
and
popf
xchg
bound
ret
cmp
and
jo
sbb
leave
fistpll
jge
loop
sub
push
test
push
ljmp
test
frstpm(287
sarl
add
and
insl
outsb
inc
sub
rcrb
mov
mov
inc
adc
adc
xchg
mov
fstp
xchg
je
pop
and
sbb
ret
mov
and
sbb
notb
es
mov
push
pop
out
stos
xchg
sub
dec
jg
adc
inc
adc
insl
or
fidivs
xor
repnz
loop
xchg
mov
pop
and
cs
mov
mov
mov
insb
mov
sub
adc
gs
in
cwtl
cmp
add
js
xor
movb
bound
incb
push
sub
push
lret
push
inc
clc
sahf
mov
sti
sub
xchg
mov
shl
inc
xlat
sub
outsl
addr16
dec
inc
cmp
lock
fcomp
clc
mov
or
or
xor
mov
bound
and
inc
movsb
incb
sti
icebp
negb
cwtl
cmp
adc
push
xor
push
mov
fisttps
dec
inc
aas
sub
cltd
pop
or
or
jo
sbb
test
dec
xorl
push
shrl
cmp
scas
jae
cwtl
mov
xchg
add
jg
cs
pop
xor
jne
dec
cmp
mov
lahf
ljmp
lret
xchg
mov
sahf
or
je
mov
movsl
pop
loop
mov
adc
dec
mov
cmp
mov
mov
inc
push
dec
imul
pop
popf
xchg
jae
sub
mov
js
arpl
mov
push
xor
dec
xchg
cmp
mov
test
push
xchg
jge
into
stos
push
xchg
out
add
xor
mov
fcmovnu
outsb
jle
movsl
sbb
xor
pop
movsb
and
lods
push
mov
mov
or
pop
sti
push
push
pop
fs
lds
inc
sbb
xor
vpunpcklwd
ret
mov
sub
sbb
ljmp
and
outsl
xor
mov
xchg
scas
jp
les
mov
hlt
lea
in
leave
xor
sbb
pusha
or
add
scas
adc
les
sub
cmp
mov
xor
inc
push
addl
mov
insl
imul
test
or
cmpsl
ljmp
out
shrl
inc
push
shrl
js
cmp
and
gs
daa
out
xor
xchg
icebp
sub
fwait
push
out
das
mov
les
stos
mov
mov
pandn
mov
aad
lock
and
add
in
lea
pushf
out
sub
or
cmp
lcall
push
aas
lods
push
pop
into
xchg
xchg
mov
adc
sub
cmp
cmp
cmpsb
test
shrl
dec
and
jno
mul
bound
lods
mov
mov
rcrb
and
bound
adc
fldcw
arpl
add
mov
cpuid
pop
xor
mov
lea
movsb
fmull
adc
ds
ficomps
cmp
fsubl
adcb
dec
pusha
xor
jecxz
adc
mov
in
hlt
mov
jne
aam
xchg
xor
mov
inc
pop
mov
dec
inc
test
mov
outsl
inc
adc
imul
mov
and
inc
stc
test
jne
popa
fisubrl
sub
mov
data16
cmp
pop
xor
adc
xorl
ret
enter
data16
or
cmp
jl
out
test
stos
jo
insl
jns
lds
cmp
mov
hlt
fsubr
xchg
pop
mov
movsl
and
fists
loopne
jp
mov
mov
lods
adc
jnp
inc
and
idivb
stos
adc
push
ljmp
dec
sub
adc
rorb
dec
imul
out
mov
icebp
repz
mov
loop
imul
push
mov
or
mov
xchg
shrb
pusha
mov
ret
jg
mov
rolb
jae
notb
mov
jmp
mov
sub
or
in
jl
or
jle
enter
cmp
mov
fdiv
sbbb
mov
dec
gs
mov
push
cmp
loope
scas
inc
stos
decb
cmp
cmc
jg
fiaddl
mov
mov
add
test
sub
mov
scas
push
sub
pop
push
lods
cmp
jne
enter
mov
mov
pop
add
fstpl
and
xor
aad
cltd
mov
and
int3
sbb
push
jmp
dec
ljmp
icebp
les
imul
lock
ja
mov
pop
outsl
and
js
lock
sbb
inc
std
jecxz
jne
insl
iret
sti
mov
in
inc
cmp
inc
add
das
mov
or
mov
in
scas
add
pusha
push
test
adc
xchg
inc
jns
mov
movsl
dec
leave
mov
pusha
sub
and
das
gs
or
xchg
divb
add
rcrb
xchg
push
mov
movsb
inc
lods
ljmp
mov
out
dec
jmp
add
or
push
pop
and
int3
pop
mov
add
fidivl
cmp
xchg
adc
dec
icebp
mov
or
fiaddl
roll
inc
out
out
xor
popf
dec
into
out
pop
push
push
sbb
sahf
xchg
ret
jecxz
sti
psrld
dec
inc
ds
push
js
sub
pop
icebp
jmp
sti
xor
int
addr16
pop
out
jg
rorb
lods
ds
jno
mov
arpl
scas
test
xor
lret
mov
pop
push
adc
inc
clc
push
cmc
fidivs
ja
mov
cmpb
push
and
sub
jmp
popa
int
add
call
jno
or
cmp
lret
sub
ja
nop
in
cwtl
xchg
jae
insb
mov
loop
lretw
and
lcall
dec
movsb
xchg
dec
mov
lcall
fdivrl
cmp
insb
add
pusha
loopne
orl
cmpsl
out
mov
jne
jno
scas
cmp
cmp
mov
dec
jge
repz
scas
pop
adc
out
and
dec
jnp
in
fisttpl
fwait
in
fdivrl
adcb
jno
jge
rolb
sahf
adc
lret
sbb
inc
repnz
negb
stos
sub
mov
fcoml
in
push
enter
fsubrs
imul
push
test
ret
lcall
xor
es
cli
mov
jns
push
call
and
or
lds
jb
ja
jns
cmp
fsubs
adc
xor
push
sbb
fdivrs
inc
dec
cld
shrb
inc
mov
imul
mov
mov
pop
push
or
test
xor
or
push
int3
shl
and
scas
adc
fstl
cwtl
outsb
je
lods
or
stc
hlt
ret
dec
jne
lea
lods
dec
fadds
outsb
ret
test
shlb
aas
pop
mov
and
stc
xor
pushw
daa
test
xchg
icebp
push
sub
in
xchg
cmpsl
inc
pop
daa
push
insb
add
xor
xchg
mov
outsl
and
inc
outsb
sbb
pop
add
cmpsl
daa
loop
push
or
push
jae
sahf
push
xchg
cld
nop
dec
insl
cmpsb
dec
lods
sarb
sub
sub
ret
mov
pop
cmp
cmpsl
enter
add
mov
mov
das
dec
pushf
into
inc
scas
rorl
shlb
xchg
fmuls
mov
mov
ljmp
fsubrp
fdivs
outsb
xlat
push
sub
aas
fcoms
adc
mov
je
pop
adc
js
repnz
pop
mov
mov
fstps
pushf
inc
pop
int3
les
imul
jnp
ds
aaa
xor
sti
mov
push
and
sbb
xchg
push
fcompl
lods
inc
or
ret
enter
add
inc
mov
jl
push
in
je
ss
xchg
or
sbb
pop
pop
inc
jp
aam
push
xchg
sub
mov
or
std
stc
pop
xchg
outsb
inc
cmp
dec
jb
adc
sub
or
sarb
iret
scas
repz
jmp
mov
mov
int3
inc
bound
out
cmp
mov
cld
dec
scas
mov
ds
push
addr16
sbb
lahf
decb
jecxz,pn
std
shlb
loopne
inc
adc
xchg
dec
pop
push
leave
sub
sti
pop
mov
adc
jnp
cmc
add
and
push
loop
mov
rorl
mov
test
loope
and
inc
outsb
pop
fisttps
pop
sbb
mov
jecxz
jl
emms
je
nop
pop
in
cs
mov
pop
adc
inc
add
loope
mov
stc
dec
xor
dec
fcmovne
mov
shrb
dec
jae
aaa
pop
test
cld
inc
mov
stos
test
xchg
outsl
lods
add
or
leave
jno
fwait
cs
jecxz
mov
shrb
cmp
data16
adc
imul
in
jb
jo
in
cltd
push
inc
sbb
mov
xor
clc
repz
mov
dec
xchg
sub
jecxz
movsb
fs
es
or
test
mov
aas
andb
adc
inc
imul
and
or
leave
adc
push
aam
vpmaxub
sahf
lret
arpl
fisubrl
jmp
outsl
and
inc
out
xlat
repz
arpl
jl
imul
test
movsb
sbb
addb
lock
lea
adc
and
daa
mov
loope
adc
clc
push
push
iret
decb
mov
andb
arpl
out
ret
into
test
dec
cmp
and
dec
mov
mov
jecxz
scas
push
inc
xchg
hlt
dec
test
test
xorb
xchg
js
adc
stos
sti
mov
jle
movsb
aas
cld
jp
ja
inc
inc
aad
je
bnd
cmp
push
out
push
bound
scas
stc
div
cmp
cld
mov
xchg
and
jecxz
pop
push
test
jle
sbb
loope
or
dec
mov
mov
push
mov
jecxz
cmp
out
hlt
mov
fcompl
mov
sub
jmp
sbb
jge
jge
ret
fwait
or
fsubs
dec
ret
or
hlt
mov
cmp
pop
inc
sti
fisubrs
mov
in
dec
mov
and
sub
mov
xor
push
fiadds
cmpsl
xlat
rcrb
loope
jb,pt
xchg
and
mov
cmp
mov
pusha
xchg
adc
lret
pop
fs
sub
iret
lds
stos
test
test
das
test
or
outsb
sbb
and
pusha
fidivl
into
mov
cmp
mov
inc
roll
mov
cmpsb
or
test
push
jmp
xlat
repz
jmp
fwait
lret
ja
pop
fstpl
mov
jns
and
pop
fidivrl
scas
pop
pop
ja
shll
add
rorl
jmp
push
and
adc
pushf
cmp
test
cmp
repnz
add
lret
mov
sbb
mov
push
push
and
or
mov
mov
dec
sbb
mov
es
shrb
dec
push
out
in
xor
lods
xchg
push
imul
pop
std
rcrl
loop
repz
insl
out
mov
push
jno
sbbl
sub
cltd
jns
repz
adc
and
ret
push
popa
or
jmp
rclb
and
es
out
dec
dec
pop
sahf
cmovae
call
fists
arpl
lea
out
and
jae
sahf
movsb
mov
ja
aad
mov
or
pushf
xlat
into
jle
fwait
nop
cmp
fbld
pop
shl
testb
adc
cld
aad
or
xchg
int3
jbe
jbe
sbb
arpl
insb
or
xor
aam
inc
mov
mov
loopne
lea
push
flds
in
adc
ret
test
aam
cltd
jmp
addb
arpl
or
fstpt
dec
scas
loopne
adc
dec
dec
xchg
push
jg
andl
push
push
pop
shll
cld
xor
lea
jns
cs
cmp
mov
cmpsb
mov
pop
mov
xor
mov
cmp
ret
push
ficoml
xor
sbb
jne
pop
add
xchg
dec
idivb
or
pop
pop
into
call
pop
push
pop
mov
mov
int3
jge
das
dec
lret
in
xor
jp
das
ret
jp
mov
cmp
hlt
push
mov
fistps
add
pop
test
sub
add
daa
mov
ret
push
and
push
mov
inc
sbb
mov
test
adc
test
sub
cmpsl
pop
cli
jmp
inc
pop
out
jl
in
inc
jl
jo
aam
sbb
shrb
mov
mov
jno
nop
push
dec
push
jge
jmp
push
fs
clc
cwtl
add
dec
mov
fs
movsl
loop
inc
push
adc
push
xor
fsubl
int3
mov
ss
int
ss
icebp
dec
dec
sub
sti
and
sub
mov
in
cmpsb
subb
lea
dec
jle
and
movsl
rcrl
sub
les
mov
mov
inc
jae
hlt
fwait
out
bound
fcomps
movsb
fcmovu
loop
pop
imul
icebp
insl
insl
lret
outsb
leave
push
mov
test
ljmp
mov
xchg
mov
mov
bound
add
mov
jmp
inc
push
adc
sub
inc
loop
push
jo
sbb
lock
pop
or
test
js
test
out
cmpsb
cmp
fistpll
xlat
or
jg
mov
fucompp
ljmp
lret
cmp
pusha
jmp
cltd
sub
push
xor
insb
xchg
inc
jns
xlat
sbb
test
mov
mov
jge
lock
repz
fmull
addr16
sbb
imul
les
xor
jno
xor
cmpsl
mov
sub
stos
gs
in
psadbw
pushf
jecxz,pn
mov
in
or
aas
sub
cmp
lea
sub
sub
mov
in
cld
add
bnd
aaa
pusha
pop
mov
out
pushf
or
mov
lds
adcb
jns
jge
adc
test
and
stc
inc
scas
xchg
jno
push
inc
movzwl
fucomp
or
lahf
rorb
arpl
call
pop
and
jne
jb
mov
cmp
repz
cmp
push
enter
mov
jns
push
dec
scas
stos
bound
adc
inc
scas
and
adc
cli
out
pop
fbstp
std
sahf
pop
inc
jae
xor
inc
aam
mov
push
data16
cmp
dec
adc
lcall
sub
mov
nop
pop
mov
push
xor
cmp
ret
push
fstl
inc
jae
arpl
push
xchg
dec
and
shlb
adc
enter
test
mov
mov
add
lods
pop
dec
loopne
push
test
push
sarl
dec
mov
sbb
and
xor
popa
out
in
jne
popa
and
and
aaa
xor
mov
mov
or
arpl
or
rorl
cwtl
sub
movsl
repz
cmp
sbb
lods
xchg
add
fistps
dec
inc
sbb
rcl
bound
data16
sti
jl
sub
bound
cmpl
pop
mov
out
inc
out
mov
test
jge
enter
ss
dec
movsl
fsubs
inc
ljmp
jno
mov
mov
ret
jns
cwtl
pop
stc
or
decl
popf
jl
pop
sarl
cmp
pop
push
int3
lret
movsl
cmpsb
push
ret
mov
or
xchg
push
and
adc
and
psubd
pop
sahf
push
fimull
lret
sbb
pop
dec
roll
daa
jp
dec
xor
push
xchg
popf
arpl
add
xchg
cmpl
inc
nop
inc
aas
repnz
mov
lock
mov
mov
pop
sbb
xchg
test
clc
push
imul
mov
icebp
sar
fsub
call
xchg
fmull
ja
lods
in
in
push
pop
or
pop
push
xor
ljmp
and
push
outsl
repnz
arpl
fidivrl
cmp
pop
cmc
fists
sahf
xor
pushf
add
inc
imul
ljmp
sarb
mov
mov
lahf
mov
loope
int3
jl
loopne
sbb
mov
jns
je
in
inc
mov
or
movsl
shll
pop
fcmovne
mov
xor
ds
and
clc
popf
scas
mov
mov
dec
jmp
inc
arpl
test
xor
loope
pusha
lret
int
addr16
aas
fidivrl
ja
dec
aam
mov
hlt
aad
mov
xchg
pop
add
mov
push
pop
jae
sub
mov
mov
xor
fwait
xchg
ja
sbb
pop
data16
mov
rorl
stc
jns
xor
ds
pusha
ds
and
mov
adc
push
mov
mov
pop
inc
scas
je
test
mov
test
incb
xor
add
jne
nop
cmp
mov
pusha
fsubrl
dec
and
loopne
lret
pop
push
std
cs
sub
mov
rcr
mov
pushf
sub
fisubs
imul
xor
addb
cmpsb
cmp
out
inc
jno
push
inc
xchg
push
cmp
sbb
fiadds
fs
hlt
jae
sbb
xchg
scas
xor
push
je,pn
rorb
xor
cmovnp
sbb
or
sub
insb
lods
movsl
leave
adc
pop
fsts
add
inc
insl
rcrl
xorb
add
or
jecxz
cld
loopne
adc
xchg
imul
inc
ljmp
or
stos
sbb
lods
jns
sub
rcl
loop
lret
pop
xchg
imul
jmp
push
push
push
jg
cwtl
addr16
sbbb
sub
mov
test
cltd
mov
sub
xorb
sub
xchg
cmp
lret
cmpsb
mov
or
dec
jmp
mov
std
cld
adc
jl
xchg
xlat
mov
test
mov
or
cmp
icebp
jl
das
ss
addr16
lods
lds
mov
int
xor
push
hlt
in
and
cmp
mov
mov
movsl
and
jb
mov
inc
sahf
loope
mov
mov
iret
or
jg
incb
jae
jnp
mov
inc
cli
insl
loopne
sub
insb
pop
es
mov
push
mov
es
ds
push
mov
jle
ljmp
test
adc
out
call
xor
addb
int3
mov
cld
popf
adcb
outsl
xor
and
mov
jmp
cs
mov
dec
out
push
loope
outsb
dec
int
sub
or
inc
pushf
lds
add
inc
daa
jnp
push
add
dec
mov
test
inc
mov
js
in
js
jl
sub
sbb
pusha
hlt
movsl
imul
int3
xor
cmp
fsubrl
pop
mov
ja
xchg
pop
movsl
insl
xor
jecxz
xchg
pusha
mov
mov
mov
aaa
pop
jmp
imul
jb
adc
add
int
ja
enter
jbe
inc
and
xchg
out
out
xchg
xchg
cmc
cmc
mov
push
add
inc
cmp
jg
mov
inc
cmp
shrl
cmp
mov
sbb
mov
jb
sarl
add
jl
sbb
mov
rorb
call
dec
es
xchg
testl
push
sbb
sahf
cmp
mov
mov
in
jns
and
jge
inc
daa
loop
push
fsubrl
cmp
rcl
jbe
shll
or
cmp
in
clc
shll
sbb
in
xlat
add
xchg
add
jne
fst
rorl
push
dec
inc
shr
jae
ds
xchg
add
jmp
scas
push
loop
push
repnz
jecxz
mov
pop
pop
jne
cld
pop
xor
repz
jnp
mov
in
adc
cmp
int3
mov
pop
jp
mov
test
jnp,pt
je
push
fmuls
je
add
jmp
addr16
xor
pop
test
xchg
insb
jge
stos
and
inc
lcall
fists
add
loopne
popaw
xlat
lret
cmp
mov
popf
mov
mov
xchg
sub
mov
leave
inc
lret
cmp
out
or
mov
inc
les
xor
in
pop
dec
mov
fs
scas
pop
fistps
test
cmc
and
test
mov
das
add
bound
fcoml
je
addr16
psubsb
add
ss
fildl
enter
stos
cs
dec
cs
xchg
das
iret
int3
cmp
daa
inc
movsl
dec
adc
push
push
lret
sbbb
int3
jns
cltd
push
push
mov
cmp
incb
inc
cmp
mov
adcl
movsb
mov
mov
push
pop
sbb
mov
iret
or
push
rcr
enter
dec
test
repz
and
repnz
outsb
addr16
pop
pop
in
inc
inc
sahf
enter
dec
pop
pop
push
imul
jno
mov
jge
inc
rorl
or
es
iret
test
loope
adc
add
sub
dec
mov
lods
mull
sub
test
mov
loop
xchg
push
lea
mov
inc
jbe
add
add
cltd
gs
xchg
mov
popf
sbb
fs
mov
dec
mov
ja
xchg
inc
mov
shll
or
and
xchg
pop
jl
shll
in
jns
sub
xor
xchg
mov
sbb
xor
mov
daa
mov
mov
mov
pop
jae
xor
mov
xorb
add
cmpsb
lahf
sub
int
pusha
sub
mov
adcl
mov
pop
or
ret
cwtl
sbb
aam
pop
nop
aaa
jae
jl
or
adc
mov
dec
xchg
inc
inc
mov
and
out
pushf
mov
imul
add
cmp
fisttpl
lret
mov
dec
ja
xchg
ret
jo
pop
mov
sti
sub
add
add
push
and
mov
push
sar
inc
js,pt
dec
mov
test
and
insb
mov
inc
push
mov
scas
jg
inc
adc
add
jl
fdivrs
popf
js
push
xor
in
push
mov
mov
lds
in
jge
or
xchg
mov
scas
in
pop
sarb
loopne
movzwl
push
aam
lods
jnp
pop
push
lock
es
add
mov
hlt
xchg
xor
push
fcomps
dec
ror
jb
add
and
idivl
sti
ret
les
scas
cli
leave
and
push
aas
mov
icebp
out
lret
add
adc
out
cmp
and
fimull
fimuls
or
and
jecxz
out
push
cmpl
add
xor
aaa
mov
and
inc
pop
cs
inc
mov
stos
mov
lahf
jg
sbb
cwtl
lahf
xlat
sub
fwait
xchg
mov
push
mov
int
mov
loope
sbb
dec
ljmp
dec
je
mov
adcl
rolb
pop
decl
insl
es
jle
dec
jl
jecxz
inc
xchg
cmp
fs
ljmp
cmp
jno
lods
pusha
lock
pop
xor
add
sub
pop
es
inc
mov
clc
imul
pop
std
push
aaa
jne
sub
fldt
call
nop
in
cs
aaa
and
movsl
mov
mov
mov
mov
mov
jge
and
jg
mov
push
adc
adc
inc
lods
scas
jp
xchg
loop
es
lret
arpl
jmp
jns
mov
ret
bound
and
jg
dec
or
movsl
movsl
xchg
dec
into
inc
or
ss
in
testl
pop
cld
xchg
mov
aaa
xchg
and
lods
xor
xchg
popa
push
mull
aaa
pop
rclb
mov
dec
jp
inc
iret
mov
xor
pop
xchg
push
inc
into
repz
je
adc
loop
sub
inc
push
jle
cmp
insb
xor
cmp
and
inc
mov
scas
lret
or
rorl
mov
jne
dec
mov
xchg
dec
mov
lcall
test
jb
jg
ret
pop
jbe
stc
push
jo
mov
cmpb
das
inc
js
outsl
movsb
and
lret
sub
int
cmp
fnstcw
fisubrs
cmp
sbb
inc
jmp
xor
shrb
scas
scas
shrb
mov
inc
pop
rclb
pop
xchg
xor
pop
sti
hlt
leave
xor
inc
mov
and
inc
mov
mov
xor
pop
push
push
aaa
push
cs
dec
jb
and
call
xchg
jno
insl
cmp
dec
inc
mov
out
pop
repz
in
testl
int
jno
mov
ljmp
popf
shll
pushf
stc
call
aam
pop
jg
xor
push
outsb
leave
jbe
push
daa
push
ds
loope
test
test
mov
movsb
enter
pop
jno
lods
call
add
push
popa
jp
or
stos
xorb
popf
int
adc
push
hlt
dec
out
arpl
in
cmp
pop
jns
jl
sbb
jecxz
sub
lods
push
in
shrb
or
jecxz
and
pushf
in
push
jne
adc
aas
out
rcrb
jl
mov
mov
popa
into
or
leave
adc
sub
sub
fcoml
adc
push
roll
std
xchg
mov
and
int
mov
fsubrl
mov
ss
lds
cmp
sub
xchg
xchg
push
bound
repnz
lods
scas
xchg
roll
mov
cmp
pop
ret
cmp
int3
sahf
fdivrs
lret
nop
icebp
mov
jp,pn
jp
mov
mov
push
dec
rcll
add
mov
mov
xchg
mov
pushf
fbld
mov
add
lods
add
mov
xchg
test
cmpsl
cmp
call
jno
xchg
and
stos
aas
add
hlt
les
and
lcall
outsb
les
das
fdivrs
xlat
jp
add
orl
ljmp
or
mov
jl
iret
mov
mov
fistps
mov
bound
sub
pop
lcall
or
addr16
xchg
sub
inc
into
pop
pushl
imul
rcll
jmp
jns
out
xor
cmc
outsl
pop
sub
enter
add
insb
andb
xor
scas
dec
mov
cld
roll
cmp
mov
push
insl
sarb
mov
xor
push
push
dec
lea
pop
push
scas
out
orb
adc
movsb
mov
cmpb
rcl
adc
or
jb
cmp
in
sbb
xor
xor
xor
inc
fldcw
inc
xchg
leave
lods
popf
xor
mov
xchg
shlb
jbe
or
push
outsl
ss
xchg
jge
sbb
sbbb
cmp
outsl
bound
jmp
dec
cwtl
lea
inc
arpl
sbb
shlb
int
outsb
lret
push
out
into
pop
sub
ja
in
pop
lea
xchg
or
data16
mov
and
jbe
repnz
xchg
mov
ja
xchg
cwtl
fildl
inc
cmp
mov
lret
pop
dec
add
out
aaa
les
in
xor
or
dec
dec
popa
cmp
jmp
enter
test
andb
adc
jmp
adc
in
mov
setnp
xchg
jb
and
cmp
aas
fmulp
loop
cmc
inc
enter
shlb
enter
fmuls
cmp
cwtl
test
out
fisubs
out
pop
mov
imul
push
push
notb
xor
adc
out
mov
adc
orb
movsl
jnp
ret
inc
jecxz
jbe
in
push
jge
out
negb
in
fidivrs
adc
mov
popl
xchg
xor
mov
sbb
jb
jnp
pop
aaa
add
sbb
inc
jns
mov
cmp
loope
enter
mov
add
cmpsb
cmp
push
shrl
xchg
xchg
int
or
mov
mov
and
out
cmp
dec
mov
ret
jp
cmp
fwait
sbb
or
dec
dec
add
gs
jg
fdivrp
jge
shrb
sar
adc
inc
ret
test
dec
sahf
pmuludq
mov
mov
sbb
ja
mov
xchg
rol
das
adc
or
xor
fcompl
clc
lcall
es
mov
out
daa
inc
add
mov
push
adc
inc
rorl
push
test
mov
push
mov
mov
dec
in
jmp
xchg
clc
pop
push
push
lds
clc
xor
mov
jmp
gs
mov
insb
cli
and
sti
icebp
inc
in
stos
jecxz
inc
shrb
outsl
xchg
jae
std
repz
mov
xchg
rcl
and
sahf
int3
cmp
shlb
cmp
pop
loop
cmpsl
jmp
lds
xor
fmuls
insl
nop
push
cmpsb
pop
lods
dec
mov
imul
mov
adc
daa
loopne
stos
xchg
push
sub
mov
mov
mov
lock
sub
icebp
fstpl
mov
adc
shl
in
sub
xchg
sti
ror
loope
loop
pusha
out
nop
test
push
shrl
add
dec
negl
sti
add
mov
jns
mov
or
movsl
xchg
fcomi
sbb
or
xchg
mov
mov
lcall
cmp
adc
in
lea
fwait
lret
fsubl
rcl
sub
fbstp
adc
and
repz
sbb
outsl
jne
clc
fcoml
mov
mov
ja
pop
or
push
fwait
sbb
je
mov
hlt
or
add
aas
imul
aad
out
jle
push
xchg
sub
push
jp
jmp
or
cmp
out
mov
xchg
insl
ret
dec
out
jge
inc
imul
sbb
into
popf
xor
daa
jecxz
push
sahf
pushf
cmpsb
sbb
sub
lahf
in
ds
xchg
push
scas
pop
lcall
mov
rcrl
arpl
dec
sbb
jmp
and
inc
fistps
mov
cwtl
sahf
sbb
ror
orl
jmp
push
mov
dec
inc
adc
jmp
sbbl
push
mov
cmp
cmpsb
pop
cmc
dec
mov
ret
and
arpl
rcrb
mov
mov
cwtl
jnp
js
repz
lcall
je
jne
and
aam
pop
xor
popf
xchg
fstl
imul
mov
pop
pop
stos
mov
add
fucomip
inc
stos
adc
xchg
or
lcall
pop
mov
mov
repz
add
scas
sahf
sub
pop
dec
pushf
mov
cmc
jnp
aam
sahf
mov
push
rorl
jecxz
inc
ljmp
dec
adc
test
in
lcall
into
icebp
mov
cmp
in
pop
xchg
push
cmpsl
push
addb
mov
dec
ss
add
dec
and
adcl
push
std
into
repz
loop
and
sub
aaa
xchg
rcl
stc
and
adc
pop
in
scas
pop
or
pop
mov
xor
mov
add
jmp
aas
cmpsl
dec
push
inc
aaa
sarb
daa
mov
int3
imul
sbb
adc
dec
negb
dec
out
lret
dec
mov
push
push
cmp
sbb
mov
ret
mov
sub
or
fidivrl
movl
jmp
les
fs
out
aaa
adc
and
jge
aaa
pop
xchg
mov
mov
movsb
sbb
lock
fwait
xchg
cmp
pop
test
sbb
mov
icebp
mov
mov
aaa
bound
xchg
loope
cmp
out
fisubrl
sub
scas
cmpsb
dec
fdivrs
jbe
mov
aad
movsl
push
ss
push
jb
lahf
pop
les
dec
jns
xor
xor
or
and
pop
in
pop
mov
push
into
repnz
sarl
out
push
test
xor
pop
test
or
je
daa
pop
xchg
ljmp
mov
inc
in
imul
dec
sub
or
imul
jl
mov
jecxz
fwait
shll
lock
and
xchg
push
inc
push
xchg
in
stc
das
rcrb
sbb
inc
push
bound
cli
adc
dec
nop
cmp
cmp
out
in
dec
adc
sub
xorb
dec
inc
xor
add
or
lahf
pop
cmpsb
aaa
lea
js
or
imul
jmp
int
jnp
xlat
hlt
push
pop
sub
scas
xchg
pusha
int3
test
jno
push
cmpsl
pop
push
xlat
cld
and
add
stos
or
movsb
mov
out
movsl
movb
insl
pop
xchg
xchg
adc
add
jb
pop
sub
push
gs
in
inc
push
cmp
mov
fadd
inc
rolb
iret
mov
xchg
adc
xchg
rorb
or
mov
mov
cmp
pop
lea
vprotb
mov
in
push
ja
xchg
or
cmc
leave
mov
in
adc
test
push
or
mov
xor
push
orb
pop
loopne
popf
sbb
mov
aad
shll
cltd
mov
sbb
jp
cmp
sbb
scas
jge
mov
enter
ret
push
inc
mov
cmpsl
movsl
mov
push
test
icebp
inc
mov
das
inc
fimuls
dec
and
aam
enter
bound
andl
fs
cmp
subl
sub
push
in
mov
pop
xchg
repnz
gs
sar
sahf
sub
fdivp
cwtl
insb
or
mov
outsl
mov
cli
inc
add
fistps
ds
enter
popf
push
or
aad
adc
pop
pop
and
mov
sbb
or
xchg
or
push
lahf
add
leave
add
out
push
mov
ds
in
out
das
jns
gs
push
mov
cltd
scas
push
push
sbb
out
aas
sbb
pop
push
jne
push
push
push
jge
aad
faddl
sub
jl
inc
outsl
sbb
stos
fisttps
cwtl
pop
bound
pusha
pshufw
inc
sbb
xchg
aad
inc
jp
push
inc
push
sti
lcall
mov
clc
std
adc
xchg
movsb
pop
mov
dec
add
sarl
shll
ret
insb
add
or
mov
gs
inc
sub
lods
fisubrl
in
inc
pushf
xchg
in
gs
add
cmp
mov
pop
outsb
repnz
cmp
aas
jae
or
aaa
mov
icebp
or
loope
mov
push
xchg
push
adcb
sub
pop
aas
xor
sbb
cld
int
icebp
mov
sti
adc
fs
test
lock
daa
mov
pop
ljmp
adc
movsb
clc
xchg
mov
adcl
outsb
jnp
sar
add
and
xchg
dec
adc
add
aaa
push
xchg
rolb
pop
xchg
data16
addr16
pop
insb
mov
xor
repnz
imul
mov
xorb
in
jae
fistps
adc
dec
xor
jb
in
jp
mov
xor
dec
sbb
imul
imul
imul
adc
cmp
mov
jmp
adc
ljmp
lahf
add
adcl
mov
lea
mov
dec
adc
or
push
addr16
inc
inc
rclb
xchg
push
imulb
test
inc
psubsb
pushl
add
inc
push
inc
jne
jnp
arpl
mov
insl
jno
adc
pop
sbb
idivl
repnz
in
dec
dec
pop
popf
enter
imul
lret
cs
jg
and
clc
sti
push
dec
push
jbe
movsb
xlat
dec
adc
or
push
add
xor
sti
fdivr
pusha
shrb
push
bound
xchg
fucomi
and
sub
jno
push
mov
imul
out
push
cs
pushf
mov
cwtl
dec
std
lock
mov
push
sbb
mov
jbe
in
and
push
jae
cmp
lds
xchg
popaw
xchg
notl
aad
test
notl
inc
aad
setp
out
adc
sub
in
incl
mov
movsl
jo
and
push
sbb
adc
les
iret
shlb
int3
cmp
mov
popf
cmpsb
push
mov
cmpsb
jl
pop
mov
jo
mov
sub
insl
loope
push
pop
jmp
test
push
into
ret
and
add
neg
jl
daa
cmpsl
sbb
mov
fildl
jo
int
fwait
or
loop
push
mov
pop
sub
sub
lods
mov
pusha
aaa
imul
pop
sbb
inc
std
inc
adc
jb
les
sbb
mov
sub
ret
call
out
movsb
inc
sbb
jo
insl
pop
mov
adc
xor
dec
push
sub
or
int3
ljmp
shrb
in
add
mov
sub
arpl
std
arpl
testb
shrb
jne
adc
shrb
jl
push
imul
sbb
sbbb
mov
in
mov
popf
fwait
adc
and
inc
lea
xchg
cmp
dec
mov
lret
sub
popa
rcll
negl
sbb
add
test
adc
ret
mov
adc
hlt
pop
lret
mov
into
test
ret
xor
out
nop
jge
repnz
xchg
push
xor
ja
test
in
test
les
pusha
mov
adc
mov
cmp
mov
fcompl
pop
aam
sbb
call
jo
pop
out
jecxz
cmpl
or
cmp
es
mov
push
push
lock
add
cmp
sub
stc
mov
xor
push
popa
aad
pop
cmp
in
or
lods
push
push
xor
push
les
mov
jo
adc
mov
sub
inc
pop
dec
pop
dec
addr16
adc
jns
mov
inc
outsb
das
xchg
adc
test
xchg
push
inc
stos
in
dec
push
pop
js
in
mov
dec
int
outsl
lods
jae
cli
mov
mov
add
repnz
mov
adc
mov
dec
pop
xchg
jp
es
outsl
cmp
adc
push
sub
cs
xlat
xchg
add
cmpsb
shlb
inc
mov
stos
cmp
mov
cmpsl
int3
div
add
mov
imul
dec
xchg
fnstcw
pop
repnz
sarb
jmp
or
test
jecxz
rorb
shrb
mov
je
inc
jp
mov
outsl
mov
test
adcb
mov
pop
inc
or
mov
test
std
frstor
xchg
faddl
mov
mov
aam
dec
js
addr16
jnp,pt
sbb
jb
repz
jbe
addr16
bound
pcmpgtw
pop
inc
lea
mov
cmp
loope
fwait
push
into
pop
xchg
fbstp
notb
hlt
loope
icebp
add
mov
mov
mov
xor
xor
xorb
fdivs
stc
xlat
repnz
and
sub
int
mov
lcall
add
test
aad
in
xorl
jmp
clc
mov
mov
mov
cmpsb
jne
cmp
inc
pop
bound
jg
sub
xor
mov
mov
mov
loop
mov
stc
call
lods
rcl
jno
dec
mov
ss
ficoml
xchg
fsubs
dec
pop
movsl
cld
inc
mov
push
cmc
int
mov
push
add
scas
ret
testl
les
pop
mov
pop
lret
xchg
cmp
dec
ficoms
push
and
dec
push
jg
into
enter
fbld
pop
mov
push
jle
vpshaw
aam
lahf
jne
xchg
orl
xchg
add
inc
in
xchg
pop
sub
or
sahf
pmulhrw
int
stos
out
lahf
inc
adc
xchg
shlb
cmp
ficoms
out
jno
icebp
adc
sub
fstpt
lret
out
gs
fsubp
fwait
push
mov
jecxz
dec
dec
cmc
fcomip
stos
test
dec
xor
ljmp
xor
sub
popf
shll
mov
shll
sbb
mov
mov
cs
lahf
sbb
addl
jnp
cli
stos
aam
pop
xor
pop
pop
mov
pop
mov
mov
rolb
xlat
jo
shll
pop
nop
sub
mov
fiadds
jb
fwait
cmc
xor
fisttpl
xchg
icebp
lret
fsts
adc
into
call
xor
fiadds
addb
jmp
sbb
and
dec
hlt
std
lret
adc
xchg
sbb
push
mov
sub
test
cmp
mov
shll
lods
inc
jle
push
je
xchg
repz
push
int3
aad
popf
mov
adc
push
or
pop
lods
add
jmp
int
loop
pop
cmp
xchg
cmp
gs
push
mov
mov
mull
pop
mov
fcomps
into
xor
sbb
ja
mov
and
mov
inc
rep
bound
cwtl
xchg
pop
xchg
and
icebp
mov
sbb
mov
jmp
cmpb
cld
ffree
jnp
sub
xchg
add
int
push
scas
cmp
nop
insb
sbb
sub
add
xchg
push
or
je
rorb
inc
cli
xchg
mov
pop
loop
inc
jecxz
jbe
dec
test
daa
stos
addr16
stos
decb
das
push
xor
mov
dec
mov
mov
call
xchg
rorl
xor
push
push
adc
bound
or
and
movsl
sbb
xchg
arpl
jae
pop
xchg
or
popa
addr16
xor
arpl
dec
push
push
and
push
jne
dec
cli
test
inc
cs
mov
cld
cmp
xchg
add
mov
inc
jl
mov
push
loop
xlat
mov
jbe
in
rcpps
sarl
sahf
into
outsl
outsb
das
inc
mov
ljmp
or
in
cmp
and
adc
roll
lods
cmpb
xchg
popf
push
pop
adc
mov
mov
mov
xchg
adc
xchg
mov
bound
ljmp
bound
xchg
cmpsb
es
cld
cmp
in
repnz
bnd
xor
mov
aam
clc
or
pop
test
xchg
and
enter
or
or
or
aaa
mov
mov
pop
and
je
gs
sarl
mov
lahf
push
jg
mov
mov
shrl
shl
mov
fnstcw
and
inc
jbe
inc
lock
adc
lods
dec
add
and
fld
sub
test
movsl
push
jge
pop
les
ja
lcall
mov
or
pop
cmpsb
cmp
lods
outsl
mov
and
es
cli
xchg
xor
fsub
outsl
push
jg
pusha
dec
into
lods
cmp
dec
out
jecxz
imul
scas
inc
and
pop
cli
sti
in
aam
cmp
pop
lods
ja
pop
push
bound
mov
lahf
scas
jg
push
inc
ret
push
and
adc
outsb
push
outsl
cmpsb
test
pop
mov
imul
sbb
aad
cli
adc
jnp
bound
mov
cmp
xor
mov
data16
lret
sbb
xchg
xor
xor
push
mov
sti
sub
xchg
xchg
lret
fadds
mov
js
xchg
lret
insb
push
pop
fists
jnp
push
jnp
stos
sti
enter
lea
mov
cwtl
rorl
pusha
add
xor
int3
jne
aam
in
jecxz
push
cmp
push
test
push
pop
repnz
dec
cld
jge
mov
xor
decl
sbb
or
cmpl
or
sub
jmp
lret
adc
dec
mov
mov
xor
in
pop
sub
stos
pop
pop
in
outsb
mov
movsb
cltd
push
mov
cli
jo
les
adc
icebp
fiaddl
ret
jo
rolb
aas
push
sbb
xchg
subl
in
arpl
rcll
jmp
shl
fwait
std
enter
leave
fimuls
xor
cwtl
ds
dec
arpl
int3
sub
push
out
scas
mov
jmp
leave
sub
xlat
lock
aaa
scas
push
dec
jbe
pop
imul
movsb
negb
sub
adc
add
std
sbb
jle
lret
lret
and
inc
or
push
xchg
mov
sti
insb
and
cmp
push
inc
mov
pop
sbb
xchg
sub
into
add
adc
fistpl
ljmp
loop
rcrb
stos
out
daa
cmpsb
push
inc
roll
push
in
add
xor
rcll
sbb
push
sar
imul
sub
xchg
decb
shl
mov
sbb
mov
pushf
xchg
xor
enter
in
out
in
lds
pmuludq
pop
lods
aaa
jmp
or
sbb
lds
stc
pop
outsb
sti
data16
xchg
sti
sbb
xor
xchg
sti
push
cmpsl
and
aas
sub
sbb
aaa
or
test
movsb
inc
or
sahf
sub
add
cwtl
in
adc
fstpl
out
jbe
jg
in
test
nop
and
jl
out
or
sbb
cmp
shll
rclb
aas
sarb
jmp
mov
mov
flds
sub
fsubp
and
mov
pop
testl
xchg
mov
sub
mov
mov
jge
outsl
adc
int3
lds
pop
xchg
xchg
scas
imull
cmc
xor
sub
stos
ret
cmp
loop
dec
repz
pop
out
movsb
stos
icebp
cmpsb
cmpsl
cmp
add
sbb
daa
cltd
fidivs
lods
sub
inc
dec
scas
insl
mov
lcall
mov
addb
add
and
xor
mov
daa
cmp
and
ljmp
mov
mov
enter
pop
divb
movsb
and
fmulp
add
cmp
out
les
adc
es
sbb
mov
pop
repnz
ja
add
add
jnp
mov
pop
sbb
push
cwtl
mov
cli
scas
call
les
and
mov
lods
inc
mov
mov
dec
add
fimuls
jge
sahf
movsl
in
mov
es
fwait
mov
adc
push
imul
fcom
repz
sbb
pop
pusha
notl
mov
xchg
clc
dec
cmp
ljmp
xchg
ja
jae
imul
jmp
pop
or
cltd
cmpsl
mov
popa
jecxz
test
dec
ja
rclb
out
inc
cld
fmuls
lret
cmp
inc
dec
cmpsb
popf
mov
add
pop
xor
test
xor
mov
sbb
mov
or
daa
xorb
shl
fwait
iret
lods
fidivl
fisubrs
repz
outsb
jecxz
inc
push
insl
insl
fdivp
push
std
jno
divl
call
jecxz
xchg
stos
and
lret
adc
jo
sub
and
push
push
mov
xlat
push
sub
rcr
in
int
adc
sub
es
adc
inc
mov
stc
aas
xorl
xchg
pop
xchg
pop
fwait
insb
adc
pushf
fsts
insl
adc
cvtpi2ps
adc
jecxz
lds
jg
sbb
hlt
xor
cmp
adc
test
mov
push
sbb
xchg
or
popa
mov
mov
lods
sub
fwait
in
shlb
dec
ret
sahf
dec
mov
aaa
xor
pop
mov
aad
cs
out
mov
mov
push
mov
lret
jns
dec
mov
dec
mov
mov
addb
and
insb
adcb
subl
js
fisubrs
xor
fs
xchg
cmp
inc
dec
sub
iret
add
popa
jge
lahf
mov
imulb
into
insl
dec
in
ja
outsb
xchg
testl
lods
xor
cmp
popf
adc
jbe
sub
das
mov
dec
sbb
inc
dec
mov
adc
cmc
dec
mov
mov
stos
xor
rcrl
aas
clc
sub
mov
stos
shlb
cs
lret
insb
dec
sub
xlat
movsb
pop
dec
mov
leave
cmp
aam
call
fwait
xchg
std
xchg
adcb
mov
fidivrl
xlat
mov
out
cmpsl
mov
out
sbb
cmp
mov
xor
push
aad
and
cwtl
sahf
lock
and
pop
outsl
add
cmpb
add
push
out
cltd
leave
mov
jb
pop
jecxz
jl
testl
jae
dec
hlt
inc
stc
int3
test
daa
addr16
cli
aas
cmp
push
inc
push
arpl
jne
or
pop
or
push
aam
jno
and
loop
mov
xlat
test
mov
lea
cli
loopne
mov
das
add
lcall
xchg
push
and
sbb
insl
iret
fdivs
mov
pop
das
push
jmp
push
inc
pop
int3
add
push
ret
ret
rcll
fcom
push
daa
adc
and
subb
and
ret
jmp
or
cwtl
sbb
notb
and
push
or
into
push
rol
movzbl
mov
push
jno
das
pop
jo
lds
xchg
sub
in
jne
pushf
push
mov
cmp
push
inc
dec
sbb
inc
rcll
push
push
aaa
fs
mov
cmpsl
jno
sar
and
aad
and
push
jbe
add
cmc
mov
jb
sti
stc
pop
sbbb
insb
roll
push
mov
push
mov
cwtl
pop
inc
jae
pushf
imul
mov
pop
xchg
pop
into
mov
pop
pop
mov
sub
pop
mov
stos
cmp
sub
xchg
jge
sbb
sbb
pop
mov
bound
mov
push
cmp
mov
scas
pop
data16
stc
xchg
xchg
mov
cltd
aaa
jns
ja
mov
mov
adc
add
rolb
add
or
jns
dec
arpl
leave
hlt
push
das
mov
popa
icebp
mov
pxor
xor
enter
dec
dec
enter
adc
xchg
push
ds
push
pop
xchg
addr16
jae
ret
mov
cli
test
xchg
pop
dec
push
mov
imul
lods
jmp
push
sbb
adc
rcrl
pop
aas
insb
arpl
sti
icebp
test
ret
sahf
arpl
mov
mov
shr
out
xor
jns
inc
jle
pop
ss
loopne
mov
shrb
das
test
mov
jp
adc
in
adc
mov
loope
inc
test
jl
lock
sub
aad
insb
mov
xchg
ret
sbb
add
arpl
icebp
adc
int
jecxz
sub
lret
adc
or
inc
mov
ret
movsl
stc
mov
clc
inc
dec
sbb
xor
sbb
in
cmp
movsl
sar
in
xor
ret
aaa
enter
xchg
popf
int3
jg
repz
cltd
push
cmp
or
jle
sub
push
pop
xlat
mov
sbb
fwait
pop
mov
mov
cltd
stos
mov
add
sahf
into
or
inc
adc
jp
popf
dec
sbb
mov
cmpb
lcall
xchg
stc
adc
xor
and
dec
movsb
insb
mov
dec
ret
pop
sub
jle
pushf
inc
dec
sub
imul
lret
lret
mov
movsb
movl
pop
xchg
loopne
movl
push
mov
cld
cmpsl
push
dec
cmp
sti
aad
jg
xlat
stos
in
mov
sbb
lahf
push
dec
xor
icebp
in
mov
adc
cmp
or
ds
add
out
sbb
adc
xor
pop
or
add
mov
cmpsb
push
jnp
mov
orb
and
cld
pop
sbb
adc
rcrb
and
xchg
mov
jns
sub
std
rclb
xchg
mov
ljmp
pop
jle
inc
or
enter
call
and
test
enter
sub
pusha
bound
scas
or
cmp
push
jae
mov
loop
pop
hlt
push
dec
insl
daa
cmp
mov
cmp
divb
add
mov
xor
int
scas
ljmp
sbb
push
fwait
mov
cmpsb
je
or
clc
mov
sti
clc
xchg
inc
dec
aaa
call
sahf
pop
add
xor
ja
add
pop
insb
xor
jnp
pop
sbb
mov
push
cmp
xor
xor
xchg
mov
pop
push
sbb
lods
push
and
inc
stc
xchg
shlb
mov
cmp
sub
je
cmp
pop
mov
out
ret
outsb
xchg
repnz
cmp
aad
adc
inc
rcl
mov
cmpsb
sub
jb
popa
pop
jmp
push
out
jns
lock
movsl
or
out
add
xlat
push
or
xchg
test
lret
imul
sbb
jno
sti
push
push
ret
repnz
mov
mov
lods
mov
lea
arpl
fldcw
mov
jb
and
scas
popa
mov
sub
mov
jp
mov
in
pop
imul
sub
in
movsl
mov
xor
ficomps
mov
enter
xor
or
ret
ret
loopne
out
mov
pop
ret
push
mov
ss
mov
in
or
cwtl
sbb
push
jnp
push
out
fldcw
ss
lea
loop
loop
ret
dec
push
shll
ja
mov
jae
or
imul
pop
mov
hlt
cltd
inc
jg
lods
mov
dec
fiaddl
jne
loop
and
add
out
aad
in
lea
and
sbb
dec
out
ds
dec
iret
sbb
pop
lahf
popf
testl
test
sti
cmp
leave
loopne
jbe
gs
adc
sub
cmp
or
cmc
mov
push
lret
sub
pop
mov
and
ljmp
shlb
xchg
lahf
sub
inc
jns
pop
jge
pop
stos
mov
and
jecxz
jb
fimuls
and
mov
loop
adc
push
sbb
xchg
repnz
push
cmpsl
dec
out
mov
pop
jmp
sub
xchg
push
lret
cli
scas
cld
pop
pushf
imul
pop
jno
imul
loop
xor
mov
push
popa
push
pop
cmp
and
push
icebp
and
out
pop
pop
xlat
lahf
xchg
in
ja
mov
bound
test
xchg
pop
mov
pop
movsl
repnz
clc
mov
xor
ds
pop
rcrl
out
shr
cmp
push
aad
mov
hlt
lods
push
and
cmp
pop
out
and
sub
ds
data16
iret
xor
push
add
dec
stc
and
shl
inc
jge
ss
or
lfs
mov
sbb
loop
mov
psubsb
dec
jns
jmp
dec
push
imul
pop
aaa
out
sahf
add
sbb
mov
mov
sub
movsb
sub
sub
js
jg
andl
dec
push
imul
adc
dec
mov
inc
adc
sbb
pop
push
pop
jb
xlat
mov
iret
xchg
adc
push
cld
sbb
push
adc
xorl
xchg
cmp
xchg
push
and
out
bound
jnp
xor
dec
lds
mov
lcall
add
out
cs
popa
je
ljmp
jo
add
les
jns
dec
int
nop
jnp
mov
movsb
fistpll
push
xor
and
lret
cmp
sbb
xor
xchg
fxch
and
ds
daa
outsl
jo
fwait
outsb
xchg
shl
sbb
sbb
and
ss
fwait
push
push
test
add
mov
inc
mov
dec
inc
dec
mov
mov
sahf
mov
sbb
sub
loopne
das
cli
popf
or
sbb
sti
inc
push
icebp
adc
bnd
int
in
and
dec
into
xchg
aam
mov
cwtl
jecxz
mov
sbb
push
fidivrl
test
sahf
dec
xor
in
and
mov
push
mov
shrb
push
ret
imul
popa
lods
inc
bound
bound
mov
pop
mov
mov
fwait
push
lahf
imul
lds
sti
movsl
sbb
pop
xor
leave
jl,pt
aad
leave
scas
mov
cmp
push
pop
xchg
int3
fwait
scas
mov
sub
inc
fs
dec
xor
cwtl
daa
sub
inc
je
loope
lods
inc
jno
pusha
push
pop
jb
jnp
cmpsl
push
mov
xor
ja
out
xchg
outsb
je
shrl
pop
inc
or
mov
jle
fnstenv
mov
xchg
dec
add
imul
fmuls
ljmp
ret
push
imul
shrl
mov
lods
mov
jb
dec
xor
lcall
and
inc
push
arpl
mov
add
sahf
jbe
cld
popa
loop
mov
jge
ds
mov
mov
fadd
cmc
mov
mov
adc
jbe
popf
sbb
pop
mov
xchg
push
dec
mov
mov
dec
leave
jecxz
ret
pop
sbb
lret
in
add
push
xchg
push
fsubrp
jae
ficomps
xchg
rcrb
and
dec
mov
cmp
sbb
and
xchg
daa
fmuls
pop
or
ljmp
cld
fsubrp
mov
xchg
cwtl
cmp
ja
xchg
add
inc
and
clc
fxch
adc
push
rcrl
insl
mov
call
cmp
inc
mov
mov
pop
jns
cmp
pop
lds
pop
iret
push
test
mov
mov
leave
fcmovnbe
adc
rcr
fsubrp
stos
mov
xor
and
jl
xchg
ja
lds
enter
stos
cmp
xchg
mov
in
repnz
inc
ss
call
or
sub
mov
jnp
iret
lds
pop
fadds
mov
mov
out
popa
xor
nop
int3
xor
test
js
lea
mov
divb
js
scas
mov
inc
and
scas
pushw
test
mov
test
and
test
or
sbb
adc
pop
jno
repz
mov
lock
stos
pop
sub
pop
mov
cs
call
xor
iret
lods
shrb
and
inc
cmpsl
push
jns
jne
mov
cltd
push
adc
mov
jbe
mov
push
xor
clc
pop
dec
fsubr
dec
sbb
mov
in
inc
lcall
mov
sbb
push
popl
enter
mov
mov
fcomip
div
ret
cmpsb
test
cmpl
idivb
xor
add
jo
and
adc
or
dec
mov
and
cmp
adc
cli
stos
pop
xchg
cmp
jo
sbb
mov
notb
sub
cs
aaa
push
sub
jp
inc
push
stos
pop
mov
push
xchg
lret
mov
pop
enter
adc
cmpb
data16
and
jecxz
and
jp
das
push
xchg
fistps
mov
push
test
sub
and
shrl
pushf
cli
lods
mov
insb
inc
jbe
push
mov
mov
jne
jl
add
or
pop
push
stos
mov
int
pushf
and
pop
leave
in
mov
scas
pop
shld
adc
mov
or
lea
push
test
popf
inc
pop
jne
mov
push
mov
mov
enter
test
ficoms
inc
stc
js
inc
test
loop
fisubs
out
inc
sti
leave
pop
mov
stc
dec
scas
stc
cltd
xchg
mov
push
movsl
mov
arpl
push
std
movsb
popa
mov
out
or
addr16
outsb
and
inc
xchg
test
fisubl
fsub
das
repnz
dec
out
shlb
jne
jp
jo
push
add
add
aas
leave
mov
or
push
inc
mov
imul
mov
popa
lcall
pop
lret
sti
int
scas
lock
inc
mov
mov
mov
push
mov
fmull
icebp
or
mov
xchg
jae
fistps
in
out
and
lock
add
lds
inc
stos
cmpsb
xlat
inc
or
ja
add
test
testb
sub
fisubs
mov
pop
dec
jge
sahf
pop
or
iret
xor
mov
mov
mov
pop
rcrl
outsl
mov
cs
mov
fdivrl
inc
shlb
jp
bnd
sub
out
fsubrs
and
pop
mov
cmpsl
xchg
jge
stos
mov
or
pop
xchg
out
scas
adc
mov
cmp
dec
jle
rorl
mov
aas
adc
add
jp
and
subl
xchg
lahf
dec
inc
sub
or
inc
stos
sub
push
push
leave
push
cmp
mov
sub
mov
mov
jbe
sbb
movsb
or
pop
out
xor
adcl
into
fisubl
mov
popf
mov
fcmovne
in
dec
add
dec
adc
jb
jb
pop
ficomps
popf
push
adc
sub
xorl
js
ret
sub
fisubl
or
mov
stos
sbb
movsb
inc
jno
or
insb
xor
lds
fdivs
push
or
sub
mov
les
js
das
je
in
inc
cmpsl
dec
pop
enter
jp
mov
das
xchg
mov
in
mov
xchg
ds
mov
push
mov
pusha
or
mov
add
sti
cmpsb
int3
mov
jl
dec
stc
cltd
sbb
in
jge
enter
movsb
imul
out
xchg
and
movsb
mull
or
jb
adc
cmp
jecxz
mov
cmp
pop
pop
cmpsl
push
sub
cmp
testl
xchg
out
ret
movsb
data16
mov
lahf
lea
aad
in
rcrb
loopne
mov
mov
into
and
dec
cmpsb
sbb
addl
lcall
loop
xchg
xor
xchg
jg
movsl
shll
mov
sbb
ret
rclb
jmp
jno
aaa
mov
cmp
icebp
loopne
jne
mov
xor
loop
fisttps
leave
mov
in
and
arpl
movaps
aad
clc
inc
sahf
das
test
or
rorl
cmp
out
jl
sti
mov
push
enter
inc
mov
sbb
jge
add
rcr
pop
push
mov
inc
mov
lret
mov
jae
sbb
xchg
aam
jp
sbb
mov
les
jb
insb
fimull
outsb
cmp
cmpsb
icebp
sahf
movsb
nop
ror
rol
jmp
shlb
sub
push
in
mov
push
jp
movsl
mov
or
les
mov
arpl
sub
adc
inc
xor
test
je
addr16
push
xchg
insb
mov
mov
outsb
scas
outsb
jno
pop
cmc
rclb
and
jne
dec
push
jno
outsl
push
movsb
mov
iret
pop
movsl
or
mov
mov
and
cmc
adc
sbb
jae
iret
lcall
les
aas
mov
scas
imul
push
sub
adc
movsb
pop
imul
push
inc
xchg
jae
lret
xchg
mov
add
and
popf
xor
mov
sarb
icebp
and
in
pop
lods
incl
aas
cmp
or
insl
jbe
adc
ljmp
or
je,pt
xor
mov
shl
mov
xchg
ja
and
mov
gs
jb
cmp
adc
or
inc
stc
push
push
hlt
stos
bound
sahf
clts
sbb
pusha
mov
das
xchg
mov
nop
rorl
sub
adcb
pop
push
inc
int3
scas
jl
faddp
push
cmp
out
test
sbb
adc
xchg
mov
pop
mov
mov
push
mov
jae
notb
xchg
and
pusha
movl
lock
ds
push
pushf
mov
jb
cwtl
inc
loopne
mov
scas
andps
in
jno
cmp
mov
insl
adc
rcrl
insl
push
lods
cli
sbb
adc
push
shll
sbb
jecxz
xchg
roll
jne
inc
jbe
cld
movsl
std
mov
inc
in
or
ja
scas
xchg
out
sub
or
aaa
js
sub
sbb
mov
test
out
mov
rcr
test
scas
cmp
inc
mov
shrb
jp
mov
dec
push
mov
les
jb
push
cltd
sbb
and
cs
enter
dec
dec
cmpsl
int
ret
out
mov
stc
ret
pop
std
xchg
inc
inc
cmp
or
mov
leave
xchg
cld
pop
std
push
jmp
mov
cmp
dec
lret
jne
jmp
out
mov
cltd
mov
sub
pop
pop
or
and
sbb
xchg
and
sub
or
pop
ss
mov
divl
pop
jl
mov
int
es
fisttps
loop
cmp
cmp
call
inc
inc
push
sar
adc
jmp
gs
daa
sub
ljmp
mov
mov
dec
sub
add
outsb
lcall
pop
pop
jmp
xchg
mov
stc
idiv
xor
sub
lds
mov
sub
mov
nop
pop
out
lret
xchg
push
in
fcompl
mov
std
adc
fwait
pop
mov
and
cs
inc
mov
test
mov
rolb
mov
push
lret
sub
add
fists
fstpt
rcr
mov
fisttps
sbbl
xchg
cmc
dec
nop
lods
in
inc
cmpsl
dec
mov
popf
test
mov
pop
fadd
mov
nop
or
cmp
mov
cmpsb
jle
arpl
ss
xchg
xor
mov
ficoml
push
xor
mov
mov
mov
cs
pop
fistl
jle
pop
mov
je
sub
icebp
lock
push
cmp
or
adc
and
call
insb
pop
insl
jno
pop
icebp
jge
xchg
xlat
scas
xorl
fistl
push
dec
fistl
and
push
mov
cmp
xlat
jp
push
popa
mov
mov
or
cmpsb
add
sbb
or
stc
sub
frstor
cltd
rcrl
sub
test
push
sti
aaa
and
sbb
into
sbb
mov
inc
push
out
mov
imul
das
fisttpll
push
xchg
mov
test
and
add
and
jbe
in
mov
jb
cmp
or
cs
xor
mov
xchg
hlt
daa
jmp
lfs
data16
es
call
and
inc
daa
cmc
std
pop
rolb
add
xchg
pop
jmp
mov
mov
jp
fcoml
mov
xchg
movsl
lret
dec
sti
lcall
rorb
dec
es
add
ret
xor
popf
xchg
xor
pop
inc
loop
jbe
jecxz
sahf
insb
test
fistpll
and
fs
xchg
mov
inc
test
sbb
or
mov
popf
in
imull
sub
std
inc
pop
lock
mov
mov
sbb
nop
sbb
add
adc
clc
jae
jne
and
lock
mov
imul
scas
test
mov
fcmovne
lret
cmp
popa
shrl
hlt
jmp
and
sub
push
imul
pop
pop
jnp
clc
mov
push
add
cmpsb
mov
jb
subb
gs
adc
stc
ret
popf
mov
or
cwtl
xchg
add
lock
cli
sahf
in
ljmp
pop
sub
fwait
push
sahf
ss
cmp
lret
roll
loopne
inc
jmp
popa
add
push
sub
fidivrs
sarl
test
in
js
and
lock
pop
push
outsl
push
jl
jmp
shrb
cmp
mov
outsl
mov
fstpl
je
sub
inc
jno
das
imul
out
leave
adc
pop
lock
ljmp
push
jb
jge
and
int3
movsb
in
lcall
clc
jno
ss
xchg
cmp
inc
adc
xor
lfs
inc
sub
mov
xchg
insb
inc
insb
lock
mov
adc
stos
or
jecxz
xchg
cwtl
loop
invd
psrlw
sub
pop
dec
fsts
scas
sbb
push
repnz
mov
mov
push
pop
ds
mov
out
fwait
sbb
sub
jbe
mov
dec
aas
ja
xchg
mov
dec
sbb
jnp
jo
pushf
mov
loope
mulb
ja
dec
dec
nop
push
cmp
outsl
mov
es
sti
daa
mov
sub
pop
jo
dec
cmc
stc
jmp
and
scas
and
push
sub
mov
lahf
dec
add
xor
mov
dec
lret
subl
push
pop
xchg
xor
pop
outsl
sti
inc
push
clc
xchg
shll
sub
push
enter
xor
imul
outsl
adc
adc
fmull
lahf
lcall
mov
pop
loope
ss
inc
push
jl
ljmp
cltd
out
shl
mov
mov
popf
xchg
adc
pop
mov
lahf
icebp
das
dec
and
out
xor
ret
xor
std
lock
mov
cs
imull
inc
push
das
add
push
test
lods
int
mov
shll
subb
mov
fnstsw
cld
not
repz
inc
mov
orl
mov
lcall
pushf
scas
push
loopne
ljmp
cmp
scas
insb
push
xor
xor
sub
mov
dec
pop
xchg
and
popf
cltd
add
scas
jo
and
jmp
mov
hlt
dec
adc
xor
rclb
sbb
mov
dec
faddl
push
mov
mov
imul
pop
dec
nop
and
mov
ljmp
icebp
xchg
xchg
mov
out
fisubl
push
popf
mov
pop
out
dec
lods
frstor
cli
sbb
or
call
xorb
dec
das
js
mov
mov
push
jne
pop
insl
pop
sti
adc
aad
scas
repz
add
aaa
xor
daa
fwait
out
aad
mov
repnz
out
mov
fstp
push
jmp
insl
std
stos
aam
add
xchg
enter
xchg
sub
sub
xor
movsb
push
pop
mov
ja
test
in
je
mull
popa
xor
mov
sbb
je
popa
rorb
pusha
inc
or
mov
and
stos
dec
ljmp
lock
cmp
mov
add
js
xchg
push
sbb
dec
sahf
icebp
subl
dec
adc
xor
sub
dec
mov
out
adc
in
out
mov
leave
cmpsb
call
or
mov
mov
outsb
add
sub
jnp
aaa
jle
lods
out
push
test
lock
sbb
sbbb
stos
jbe
sbb
jo
and
shrb
and
dec
je
inc
inc
sub
setae
mov
cmp
push
fcoms
cli
xchg
xor
aam
stos
out
ss
sbb
adc
pop
hlt
inc
test
jb
fistps
jae
push
js
shll
and
and
mov
sbb
js
aas
sub
xchg
xchg
xlat
repz
dec
push
pop
std
or
push
jns
xor
inc
mov
mov
mov
or
ret
ja,pn
add
ljmp
dec
mov
loopne
pusha
mov
inc
cmp
rcr
jge
icebp
mov
sub
dec
xor
das
mov
insb
dec
xor
cwtl
and
and
std
icebp
mov
mov
dec
pop
popf
sti
dec
outsl
cltd
mov
pop
stc
xchg
mov
roll
lea
pop
ret
and
pop
data16
out
sbb
cs
outsb
jg
sbb
push
retw
aaa
cmp
jl
aam
or
lods
cmp
dec
xchg
push
aas
cmp
das
mov
rol
negb
jmp
scas
test
ss
xor
add
stos
or
or
adc
push
bswap
inc
leave
add
cmp
test
add
ret
add
fs
into
test
ret
addr16
sbb
enter
mov
xchg
pop
mov
ljmp
add
mov
cwtl
cmp
push
mull
loope
sub
pop
mov
stos
and
jbe
dec
dec
dec
daa
push
mov
and
xor
pop
sahf
fmull
mov
cld
aad
cmpsl
mov
mov
inc
mov
fadd
popa
ret
cmc
sbb
xor
in
cli
sbb
push
ja
xor
enter
fiadds
jmp
or
data16
out
in
mov
and
outsl
jle
fwait
in
jmp
call
xor
xchg
pushf
mov
insl
mov
jmp
mov
push
mov
pop
fs
mov
cmp
aad
stc
and
rcr
adc
in
jbe
ficoms
ficompl
push
push
aas
xchg
inc
add
jno
xchg
adc
into
sti
dec
jmp
jae
add
mov
jmp
lahf
out
fcoms
outsb
in
ss
inc
or
hlt
ret
pop
xchg
sbb
stos
popa
and
sbb
cltd
pop
push
lods
loop
and
ss
jecxz
test
or
and
jbe
adc
adc
sbb
out
lahf
add
push
les
sti
mov
jbe
insl
inc
cmc
add
pushl
mov
and
mov
mov
add
subl
adc
jmp
je
fwait
or
cli
adc
lahf
lds
scas
call
jp
push
int
sub
lods
sub
jns
lcall
movsb
int
andl
aaa
data16
fucomi
inc
xor
pop
xor
orl
push
push
push
decl
push
push
add
test
dec
push
mov
or
xchg
fsubr
xchg
and
inc
adc
pushf
fisttps
arpl
out
pushf
add
and
lods
xchg
and
mov
loopne
and
in
inc
jo
add
cltd
mov
sbb
shrb
lods
lret
or
or
test
push
cmc
add
inc
aad
pop
movsb
test
out
xchg
push
decl
inc
test
adc
push
mov
dec
das
in
adc
cmpsb
std
or
in
pop
fnstsw
sub
mov
ret
fucomip
cli
jmp
aad
jno
jo,pn
xchg
adc
outsl
xchg
xorb
jo
push
outsl
sbb
mov
sbb
xchg
pusha
sarl
xor
xor
jl
hlt
cmp
nop
sbb
pop
xchg
shl
sbb
scas
mov
sub
dec
push
lahf
dec
movsb
xchg
and
movsl
aaa
inc
jp
xlat
or
inc
icebp
cld
jp
sahf
jae
pop
std
push
movsb
dec
sub
pop
inc
test
ja
xchg
andl
iret
mov
jns
cld
dec
cltd
jp
or
ljmp
fmul
shll
push
pop
mov
pushfw
test
xor
dec
nop
sub
bnd
mov
jns
cmp
jg
push
scas
rolb
pop
and
jo
data16
cmp
dec
movsl
mov
lcall
stos
dec
stos
push
insb
push
lods
in
out
dec
incb
fwait
mov
shl
push
lods
mov
icebp
mul
int3
jmp
sbb
fisttps
xchg
mov
xchg
mov
push
mov
cwtl
push
adc
jb
adc
flds
add
xor
sub
fdivrp
int
cs
aad
or
mov
ss
lock
lea
push
jb
sti
lret
xor
xchg
pop
pushf
mov
fiaddl
icebp
imul
push
in
dec
pop
cmpsl
cmp
jae
and
mov
dec
inc
mov
insl
and
sub
jns
pop
cmc
movsb
and
aam
dec
mov
enter
mov
cmc
adc
je
jne
adc
mov
mov
mov
xor
cmp
test
scas
xchg
rolb
inc
call
aad
sub
insb
and
xchg
dec
stos
aam
fsubl
push
dec
push
cmp
sar
ss
icebp
or
adc
or
jle
out
inc
in
es
mov
jae
repnz
lret
push
and
lcall
pop
cs
cmp
jp
xchg
outsb
int3
ss
push
xchg
adc
das
and
into
push
mov
pop
cmpsl
fst
test
pop
popa
jecxz
popa
dec
loope
in
rorb
repnz
mov
mov
ja
mov
call
std
mov
adc
inc
push
and
push
mov
dec
and
mov
jmp
cmp
sub
ret
sbb
sbb
inc
dec
add
jmp
mov
pop
sbb
in
lahf
mov
rol
in
stc
ja,pt
iret
mov
and
call
aam
pop
insl
repnz
dec
popa
cmp
cwtl
or
test
fldenv
xlat
cmp
push
inc
pop
pop
dec
dec
pop
push
aas
xchg
cmc
sbb
fwait
adc
sub
mov
gs
iret
adc
in
mov
movsl
mov
dec
stc
shl
push
and
testl
xchg
sub
nop
inc
ljmp
mov
lds
jae
js
jno
mov
jo
std
ret
pop
enter
add
push
fmul
mov
mov
test
popf
stc
out
pushf
xchg
cmpb
mov
orb
aaa
icebp
mov
aad
ret
push
adc
xchg
ret
pop
mov
cmp
dec
and
ret
dec
push
push
jo
inc
mov
add
add
adc
xorb
or
jns
adc
fstpl
mov
stos
mov
popf
fnsetpm(287
jo
mov
loope
xchg
and
aaa
jb
or
and
pop
mov
pop
fwait
mov
test
xchg
mov
lahf
or
das
mov
and
adc
insl
push
pop
pop
ds
rcr
sti
std
ja
shlb
adc
insb
mov
pop
gs
aaa
dec
cmpsl
popa
jmp
mov
inc
inc
pop
sub
xor
sbb
lock
les
ds
ds
in
fdivr
jg
xchg
pop
sbb
cmp
inc
xchg
lods
inc
int3
xchg
stos
adc
push
lret
mov
out
clc
push
lret
pop
push
or
adc
sub
mov
mov
or
shll
push
jb
push
or
xchg
xchg
roll
xor
pop
or
push
push
mov
adc
test
push
pop
std
scas
leave
pusha
inc
or
clc
nop
cmp
xor
rorl
xchg
pop
mov
outsl
or
or
pop
orl
hlt
mov
add
pop
mul
cmpsb
pop
fcomp
movsl
mov
cs
lcall
das
outsl
fwait
push
or
dec
sbb
pop
and
imul
mov
inc
pop
push
mov
roll
iret
and
dec
pop
jmp
lea
outsb
cmp
pop
ret
popa
adc
aad
pop
xchg
cs
aad
fildl
adc
jbe
pop
in
pop
pop
dec
add
sbb
pop
andb
popf
popf
mov
or
ds
jmp
mov
mov
outsb
dec
sbb
mov
xchg
push
ret
xor
and
out
outsl
fistpll
out
out
push
or
std
in
adc
dec
xlat
mov
stc
cmpsb
std
adc
cmp
jns
icebp
cmp
testl
add
aam
test
mov
adc
shll
xchg
and
shlb
or
inc
lods
and
cmp
sub
mov
shll
adc
aad
push
je
mov
jne
jg
sbb
and
scas
jp
inc
inc
vmmcall
dec
jno
add
cli
test
jle
ljmp
and
ror
cltd
mov
inc
xchg
pop
cmp
add
js
aam
ljmp
mov
pop
xchg
sub
cmpl
fsts
dec
mov
loope
insb
arpl
sbb
pop
gs
scas
dec
pusha
insb
outsb
cmp
and
jo
cli
faddl
test
orl
cld
jge
mov
pop
pop
sbb
push
cmp
in
mov
fdivrl
sbb
mov
mov
xor
aam
loop
rorb
popa
sub
lds
mov
aas
lods
daa
fstps
loop
mov
adc
mov
mov
lds
and
xchg
test
pusha
jle
int
cmp
rolb
ja
and
dec
xor
push
insl
cmpl
arpl
pusha
out
push
repnz
popa
mov
lock
push
add
loop
xor
pop
mov
je
pop
inc
imul
cmp
mov
add
filds
push
out
icebp
add
mov
hlt
dec
cmp
lret
sub
pop
jno
cs
notl
imull
cmpsb
xchg
fidivs
dec
jle
daa
fwait
es
sub
pop
ljmp
jl
push
mov
dec
bound
adc
nop
xor
mov
inc
or
mov
pop
ficoml
filds
push
loope
shl
test
cli
mov
sbb
les
sbb
mov
enter
sti
sbb
rorb
pop
fdivs
and
add
dec
mov
add
repz
mov
andl
cli
inc
pop
fldt
add
mov
inc
inc
les
es
push
pop
adc
scas
dec
pop
jmp
add
ret
inc
das
mov
pop
push
dec
cld
mov
mov
jbe
insb
or
or
xchg
jl
push
lock
aaa
push
cmp
sbb
cmpsb
movsl
add
adc
sub
adc
outsl
push
xchg
mov
fwait
aam
cmp
fstps
dec
outsb
addl
js
sbb
cld
cmp
sbb
pushf
xchg
mulb
fstpl
stc
xchg
stc
mov
loope
mov
ror
js
insb
or
xor
inc
xchg
push
test
adc
enter
pop
inc
cld
daa
dec
test
adc
xor
jecxz
add
xchg
lods
rorl
lret
popf
imul
shll
cmpsb
jge
mov
pushf
iret
mov
lea
mov
jb
fcoms
dec
je
jle
jo
testl
jl
dec
dec
jbe
ficomps
cmp
cmpsl
fcmovne
inc
popf
fisubs
or
aad
lret
fmul
add
sbb
or
into
cmp
pushw
imul
movsl
push
push
lahf
je
or
xchg
and
add
insb
setb
dec
push
mull
es
shrb
fiaddl
adc
inc
aad
sbb
loop
add
aad
mov
lds
or
iret
sbb
pop
mov
jb
movsl
outsl
fwait
dec
mov
or
jb
ja
cmp
adc
xchg
lods
fildl
idivl
stos
addr16
dec
aam
in
jae
push
pop
aas
insl
incb
pop
ja
add
xor
or
cmc
sub
lods
mov
loopne
mov
pop
pop
sub
pusha
jmp
lds
fs
push
outsb
jno
inc
fdivp
dec
aas
in
adc
mov
cmpsl
or
mov
repz
icebp
out
inc
aad
arpl
rcrb
xchg
jg
jecxz
mov
jo
dec
push
loope
adc
sub
xlat
rcrl
xor
xorl
js
dec
nop
sub
notl
sarb
test
cmp
add
inc
sbb
inc
xor
xor
outsl
stc
fnstcw
imul
aad
push
in
jb
sbbl
jg
hlt
pop
enter
push
fdivr
jne
push
cltd
cmpl
fincstp
fiadds
add
insl
xchg
dec
jnp
test
ljmp
xchg
arpl
xor
mov
cmp
out
pop
jl
stos
int
and
mov
jbe
aam
aaa
arpl
fbld
fwait
clc
and
sub
ret
jg
sbb
addb
xor
clc
call
dec
ja
js
popl
lret
mov
or
aam
dec
and
push
movsb
dec
mov
jb
xor
daa
fiadds
jmp
fisubrl
mov
jae
cs
jns
pusha
jg
xorl
frstor
ds
je
int
inc
in
stos
insl
pop
daa
dec
iret
mov
movsl
jns
mov
sub
jnp
dec
mov
cmp
push
xchg
or
cmp
pop
mov
xor
dec
sub
rol
lock
fiadds
lret
adc
pop
icebp
dec
shl
mov
jbe
aas
mov
dec
inc
loopne
outsb
jne
fwait
xor
iret
mov
int3
and
xchg
and
cmp
cmpsb
and
dec
sub
notb
mov
bound
fdivp
fidivrl
stos
cli
cld
cs
xor
ss
mov
pop
repnz
in
xchg
cld
mov
add
xlat
fistpl
stos
insl
cld
stos
xlat
jmp
and
and
and
mov
mov
sub
dec
dec
jnp
mov
mov
movsl
xchg
mov
push
push
jno
mov
popa
adc
cmp
je
in
jbe
mov
push
pop
scas
xchg
ret
dec
pop
stos
push
testb
add
mov
add
aas
jg
ss
mov
outsl
cld
jle
or
inc
mov
ficompl
stos
push
adc
adc
push
inc
or
fwait
je
pop
jb
add
jnp
lds
movsl
sbb
push
push
add
ds
aas
sbb
nop
xor
dec
sub
dec
lret
jl
shlb
out
add
fists
sub
fisttpll
lods
sub
add
test
sbb
lret
adcl
sti
adc
mov
test
inc
mov
xlat
adc
ja
sbb
mov
bound
and
or
inc
cmc
or
mov
movb
mov
es
adcl
jge
jno
adc
mov
adc
jl
rcrl
pop
cmp
xlat
inc
jnp
xchg
in
je
pop
xor
lahf
mov
in
out
xorb
ret
mov
ret
and
adc
jecxz
mov
cmp
stos
aad
jb
loopne
and
sbb
cltd
rolb
cmc
repnz
and
dec
ss
pop
or
fucomi
mov
adc
inc
mov
pop
jb
inc
popa
push
sahf
sti
das
push
orl
mov
jbe
arpl
prefetchw
in
test
ja
push
fwait
inc
sahf
inc
idiv
jne
out
fadd
push
clc
and
xchg
xchg
dec
cld
out
xor
in
sbb
push
cmpsb
cmp
sbb
pop
loop
and
in
mov
jb
inc
cmp
stos
jg
call
in
mov
pop
dec
popa
fmull
dec
mov
and
cltd
cld
xor
in
push
xchg
shll
lret
dec
mov
inc
or
xlat
mov
cwtl
xchg
and
adc
push
mov
cmp
mov
pop
lret
fnstcw
pop
xchg
pop
test
lcall
mov
pop
inc
xor
imul
add
loop
scas
cmpps
dec
jae
jno
cmpsb
mov
mov
push
ja
mov
rclb
in
pop
push
data16
pop
pusha
daa
mov
sub
push
mov
xchg
out
mov
mov
mov
int
ret
aad
mov
jne
or
or
push
pop
push
xor
notl
push
xchg
sub
jb
pop
sub
add
or
cs
dec
stos
dec
push
dec
test
sbb
rol
mov
insb
pushf
adc
cmpsb
scas
jmp
sub
orl
and
pop
mov
sub
inc
addb
popa
mov
inc
in
mov
daa
ljmp
lods
into
jl
mov
test
roll
popf
in
pop
icebp
add
movsb
and
mov
aam
add
mov
push
cmc
xor
bound
hlt
aas
mov
mov
mov
mov
popf
test
lahf
shr
mov
mov
ret
push
jg
jno
jae
jbe
sub
push
inc
xchg
ret
cmp
cmp
and
pop
add
outsl
repz
jnp
jns
testb
xchg
dec
mov
mov
and
sub
add
test
cmp
stos
or
inc
popa
jg
mov
push
stos
pop
aam
push
and
inc
xchg
xchg
hlt
or
movsl
mov
cltd
outsb
sbb
faddl
mov
cmp
les
stos
stos
adc
clc
xchg
push
sbb
or
fwait
pop
fcoml
outsl
cmp
mov
aaa
cltd
ret
sbb
and
aas
push
iret
shll
add
es
push
and
xchg
xchg
xchg
leave
xor
out
dec
sub
push
ljmp
adc
mov
jle
push
cld
mov
cmp
cltd
aam
out
cmp
das
jp
loope
inc
or
andb
xchg
rolb
shrb
pusha
flds
cmp
ds
push
mov
mov
fs
arpl
jle
aaa
int
popf
sbb
push
add
ds
dec
dec
fldl
inc
cmpsb
popl
rcr
pop
adc
xchg
jle
rcrl
pop
ljmp
add
xchg
cld
push
adc
or
fsts
lret
pop
ja
mov
mov
sub
into
xchg
mov
rclb
aad
cmp
lods
bound
loope
jge
ja
in
push
out
cwtl
sbb
andl
in
dec
outsb
mov
das
addl
xchg
xchg
dec
pop
shr
in
xchg
dec
sub
mov
lds
mov
and
sub
dec
fs
jmp
je
cmp
aam
jbe
cmp
xchg
je
or
shlb
out
loop
and
fidivs
and
sbb
call
push
rclb
cwtl
in
xchg
sub
add
repnz
out
shr
ret
xchg
pop
sbb
dec
mov
jp
sar
stc
dec
lret
out
sar
pop
insb
aad
dec
lcall
rcrb
or
std
and
push
xlat
das
ljmp
js
mov
aad
shrl
inc
pop
dec
repnz
and
sarb
stc
ficomps
xchg
jns
inc
in
add
xlat
pusha
mov
mov
dec
push
fsubrp
stos
pop
sti
sbb
push
stos
push
add
adc
dec
inc
int
pop
out
ret
mov
sbb
rcll
push
dec
fistpl
mov
mov
add
sbb
bound
stos
mov
repnz
dec
cli
ret
sbb
pushf
and
scas
sub
and
jmp
inc
aad
arpl
and
enter
fists
add
push
divl
fmuls
dec
sbb
popa
stos
aad
dec
inc
dec
movsl
clc
xorb
xchg
jo
in
xchg
in
bound
pushf
mov
adc
outsb
jle
int
jmp
lds
push
sbb
add
lds
les
adc
xor
xchg
push
xor
mov
mov
push
testl
repz
repnz
jp,pn
andl
shll
nop
addr16
das
cwtl
inc
mov
cld
add
jmp
mov
mov
mov
je
adc
movntq
cmp
mov
jnp
mov
and
add
mov
insb
loope
leave
pop
adc
je
std
push
repnz
and
push
push
ret
and
shlb
mov
jg
xchg
mov
jb
jecxz
push
movsl
icebp
bound
outsb
or
fildl
mov
outsl
push
inc
lcall
fimuls
inc
leave
jecxz
mov
movsb
mov
pushw
repz
outsb
fdivs
xor
adc
cmc
sbb
add
sub
pop
xchg
es
daa
hlt
xor
test
negb
clc
lods
pop
xor
int
pop
lahf
bound
cld
jp
subb
ret
jae
mov
int
pop
lds
stos
repz
pop
mov
clc
pop
cwtl
movsb
sbb
dec
jae
pop
cwtl
test
mov
inc
push
cli
push
data16
rolb
pop
jmp
popf
sbb
sub
xorb
insl
sarb
pop
into
mov
pop
in
pop
mov
xchg
adc
pushf
or
fsts
xchg
xor
jg
fwait
gs
inc
push
cltd
mov
sbb
jo
leave
int3
enter
jle
pop
push
adc
adc
popa
xchg
pop
repnz
sub
xlat
or
test
mov
sub
stos
cmp
inc
int3
movsb
adc
push
pop
pop
es
pop
mov
xchg
sbb
repz
xchg
mov
test
mov
xor
xchg
mov
sbb
lods
test
add
jl
lcall
xchg
daa
push
call
jg
or
icebp
iret
aas
fbstp
inc
mov
lea
pop
jmp
repz
mov
lret
xchg
mov
lods
fimull
pop
lock
push
loope
lds
push
test
add
mov
in
and
mov
call
mov
xlat
mov
bound
pop
fnstenv
mov
addr16
data16
mov
and
dec
sti
mov
add
icebp
add
inc
xor
insb
or
inc
addr16
cmovns
repnz
sbb
out
fmuls
movsb
mov
aaa
bt
cmp
test
movsl
hlt
cmp
jne
dec
adc
pop
cmp
add
inc
jl
aad
movsb
mov
vmwrite
mov
subb
push
jl
push
xchg
mov
lea
jecxz
hlt
out
push
adc
nop
push
cld
jns
sub
outsl
in
bound
jge
pop
or
xor
fstpt
adc
pop
push
movsl
int
loop
push
add
aam
inc
mov
adc
movsl
jge
jp
push
add
andb
jbe
cld
sbb
test
push
in
lock
mov
sub
lods
cmp
daa
push
sbb
lds
lret
lea
ret
cltd
xor
stc
mov
mov
mov
add
ret
pop
mov
mov
loop
xor
outsb
cmp
pushf
adc
stc
jbe
or
or
inc
add
icebp
push
rcll
das
ret
aad
in
pop
sub
sub
aam
xor
pushf
add
data16
inc
cmp
lret
add
dec
or
xchg
cmp
lods
ret
inc
scas
and
cmpsb
hlt
es
xor
push
in
mov
mull
cmp
and
jnp
xor
sub
test
fistl
aas
dec
mov
loop
jg
xchg
push
cmp
jnp
in
push
push
and
stos
sub
mov
mov
cli
out
repz
or
imul
sub
cmp
xchg
sbb
mov
bound
movsl
fs
pop
mov
pop
aam
inc
mov
add
or
pop
arpl
push
cmpsb
sub
lret
imul
pop
stos
jb,pn
mov
cmpsb
push
call
rolb
push
push
pop
jl
rolb
jmp
cmpsb
adc
cmp
call
imul
icebp
xchg
mov
dec
repnz
cs
xchg
cmp
or
sub
imul
std
out
dec
mov
xchg
adc
ss
cmp
and
ficompl
jb
fsubrp
loope
stos
in
push
dec
xchg
lahf
add
fiaddl
fidivrs
mov
cmp
imul
mov
mov
xchg
mov
xor
test
rclb
sbb
jge
aas
bound
cmp
test
bound
lea
xor
inc
jns
push
testb
mov
into
xchg
int3
std
gs
movl
rolb
and
test
xor
pusha
fwait
xchg
aad
imul
sahf
or
loop
js
rclb
pop
jmp
dec
inc
cmpsb
lea
daa
jo
lea
sbb
sub
imul
std
mov
out
jmp
jns
inc
jecxz
add
sub
aad
inc
adc
popf
cld
and
and
les
leave
push
push
push
pop
xchg
push
jnp
test
fsubrp
pop
fildll
cmp
out
jp
cmp
popa
mov
hlt
std
sti
push
push
hlt
js
gs
into
std
enter
add
xlat
lock
add
cmpsl
cmp
test
fcoms
adc
inc
inc
inc
cmpl
or
insl
stc
cwtl
pop
push
iret
stos
sub
cmp
and
fsubp
fstp
test
mov
and
jne
lods
pop
push
sub
push
call
lods
xor
enter
sbb
add
mov
push
fdivr
dec
inc
mov
xor
dec
push
add
and
push
aas
out
mov
out
lcall
leave
jo
repnz
sbb
ret
adc
mov
jne
test
xchg
mov
cs
xchg
jbe
je
inc
sbb
xchg
dec
xchg
lea
adc
xchg
and
shl
jg
cmpsl
fnsave
dec
or
mov
or
and
sub
sbb
arpl
mov
jl
inc
into
cmp
pop
sub
pop
and
mov
dec
std
fildl
cmp
in
sbb
or
mov
int3
aad
inc
loopne
aas
cmp
xor
dec
sub
jnp
and
pop
popa
out
fdivrp
cltd
ret
xor
and
outsl
fs
jnp
and
mov
dec
adc
pusha
dec
aad
add
imul
repz
sbb
or
push
dec
or
pop
dec
or
cmp
es
std
cwtl
out
mov
cmp
mov
loopne
fisttps
dec
sub
rcll
xor
int
je
aam
pusha
pop
inc
clc
mov
std
inc
xchg
and
test
fwait
in
fidivrl
inc
ficomps
and
scas
in
lds
fwait
adc
ffreep
out
dec
in
incb
sarl
fcmovb
mov
dec
adc
sbb
std
mov
lret
and
mov
cmpsb
loop
test
sub
cmp
lcall
int3
fsts
std
adc
or
mov
or
divb
pop
pop
out
in
pop
xchg
inc
aad
adc
test
xor
xor
repnz
scas
dec
scas
outsl
jecxz
mov
cltd
pop
hlt
sub
sub
scas
imul
xchg
add
mov
mov
cmp
mov
adc
ja
stc
jbe
adc
lret
insb
dec
int
push
std
adc
cmp
test
pop
jg
dec
cmp
rclb
popa
xor
stc
mov
out
rcll
cmp
sahf
and
sahf
int3
xchg
xchg
push
xchg
dec
mov
daa
rolb
xchg
push
add
add
out
insl
sbb
fs
hlt
pop
pop
xchg
fdiv
test
mov
mov
jl
mov
or
xorb
lcall
enter
push
dec
mov
mov
idivb
mov
jbe
jp
stos
sbb
jg
mov
int
xor
sbb
pop
pop
pop
int3
les
jns
mov
imul
adc
inc
sbb
fs
pop
cli
out
cmp
jmp
add
adc
sbb
xor
iret
and
ret
push
mov
mov
pop
out
aam
insl
lods
nop
fdivl
jno
sub
xor
test
dec
stos
mov
jae
xchg
loopne
lret
scas
jno
lahf
sub
mov
repnz
outsl
shll
adc
push
stc
les
jle
bound
fadd
cmpsb
xchg
push
rclb
divb
jle
shlb
push
cs
and
test
jno
dec
movsb
jb
test
orb
adc
out
adcb
flds
stos
xchg
lock
xchg
iret
xor
ret
pop
ljmp
stos
aaa
fmul
push
in
roll
and
xchg
dec
rcll
push
ds
xor
pusha
add
adc
fcmovb
leave
or
xchg
pop
sub
xchg
dec
push
pop
or
jge
dec
dec
negb
sub
pop
sbb
int
call
fcompl
rep
sub
xchg
ret
dec
test
mov
sub
mov
rorl
xor
fdivrp
aad
scas
and
xchg
inc
jo
scas
sbb
inc
and
inc
dec
mov
test
dec
mov
pop
pop
daa
or
jnp
out
lods
adc
pop
les
sub
xor
or
dec
scas
jle
fldenv
outsl
xchg
in
lea
jge
aad
mov
xchg
pushf
or
jo
push
and
xchg
test
divb
sub
dec
or
push
mov
jl
mov
into
adc
test
scas
sub
pop
adc
xchg
std
mov
jne
sub
outsl
iret
iret
loop
mov
dec
pop
and
sbb
sub
pop
sub
inc
lea
pop
pop
out
or
pusha
or
bound
and
scas
xor
lcall
pop
cmp
pop
mov
divb
add
mov
ds
mov
jl
push
cmpsb
jns
or
inc
fimuls
cmp
xchg
cs
cwtl
mov
jno
dec
xchg
dec
loope
xor
pop
pop
xor
mov
in
cmpsb
cmp
mov
adc
sbbl
add
mov
filds
cmp
fisttpll
pop
lea
cmp
pusha
lock
in
in
xchg
incl
scas
or
fs
xchg
mov
mov
cmc
sbb
jg
xor
push
jl,pn
and
cmp
aas
daa
sub
hlt
out
pop
mov
imulb
add
push
adc
fnsave
rol
or
sahf
mov
mov
pop
inc
and
in
sarb
sbb
imul
scas
clc
mov
mov
mov
fisttps
jge
lods
push
xor
out
lods
aad
and
lret
pop
in
call
push
fisubl
leave
test
jp
mov
xor
dec
xor
cmp
or
pop
cli
inc
fstpt
xor
mov
out
orb
loop
sbb
bound
xchg
in
imul
adc
scas
xchg
and
repnz
sti
or
cmpl
pop
pop
rdpmc
into
aaa
cmp
cld
data16
adc
notb
fwait
xor
das
mov
inc
hlt
ss
pop
pop
cwtl
push
pop
pop
add
call
in
cld
jb
addr16
stc
jbe
cmp
scas
pusha
mov
adc
inc
mov
sub
dec
dec
push
mov
or
adc
cmp
call
xchg
mov
inc
repz
dec
in
test
mov
dec
adc
popa
inc
push
rdmsr
mov
mov
jno
ror
hlt
mov
or
in
mov
ret
push
cltd
aad
inc
mov
stos
aas
shlb
mov
pushl
push
ds
jecxz
pop
std
in
xchg
arpl
imul
aas
cmp
xchg
mov
push
cmpsl
rcll
ljmp
pop
sbb
sub
leave
pop
repz
cmp
adc
sub
xor
jmp
sti
loopne
mov
shll
or
xor
je
xchg
jns
jnp
push
dec
addr16
lods
cld
xchg
sub
test
push
pop
pop
into
addr16
adc
pop
lahf
mov
add
jl
lcall
sub
sbbb
push
addr16
jno
lcall
or
scas
mov
sbb
fiaddl
inc
add
stos
sarb
ja
outsl
dec
adc
push
mov
pop
jae
xor
push
or
dec
sbb
push
jge
jg
inc
rcrl
add
push
stos
sarl
aas
shlb
fucom
or
std
arpl
pop
mov
cwtl
jbe
mov
sub
mov
test
inc
inc
mov
dec
xor
xor
nop
jne
mulb
fldenv
mov
adc
jae
pusha
mov
in
outsl
out
fdiv
dec
mov
in
cmp
enter
sarl
mov
mov
mov
divb
xor
dec
add
lods
bound
pop
adc
jg
add
mov
add
jnp
dec
sub
mov
sbb
scas
sbbl
or
ja
rorl
test
xor
adc
and
popa
push
mov
add
lret
push
fadds
dec
xchg
mov
iret
imul
test
inc
sub
subl
mov
push
jmp
xor
ficomps
and
aad
ficompl
repz
es
lcall
into
insb
inc
inc
xor
fnstsw
or
mov
cmp
xchg
jo
pop
pop
aam
sahf
adcl
andb
cwtl
xor
cmp
adc
sbb
stos
and
add
jns
fildll
rclb
ret
inc
mov
mov
cmc
lock
lea
outsb
add
jmp
sahf
leave
add
or
hlt
jnp
icebp
xor
sbb
lods
pusha
adc
jnp
cmpsb
inc
je
sub
adc
mov
pop
popf
mov
push
xchg
push
fistps
mov
popa
cli
lahf
jno
pop
pop
in
sub
mov
pop
push
mov
jae
cmc
es
iret
jle
inc
jmp
dec
ds
sbb
cmpsb
xor
subl
add
mov
orl
pop
mov
sti
shlb
dec
hlt
or
jge
mov
jmp
mov
fsubrl
cmc
adc
xor
dec
stc
and
xor
andb
sub
repz
stos
push
inc
cmp
clc
aaa
dec
pop
cmpsb
into
aas
mov
imul
cmpsl
xchg
or
mov
fimuls
inc
xchg
push
xchg
mov
arpl
mov
fisubl
or
outsl
in
daa
addr16
fists
pop
sub
jnp
mov
arpl
mov
out
lods
es
les
test
xor
mov
loope
xchg
fwait
ljmp
xor
inc
mov
inc
idivb
sahf
icebp
fisubs
out
insb
inc
mov
bound
pop
stos
cmpsl
xchg
cmp
inc
arpl
movsb
pop
lods
dec
inc
lcall
xchg
sub
dec
jle
pop
sahf
adc
call
cwtl
scas
push
pop
fnstenv
jo
xor
rorl
out
lcall
mov
scas
adc
movsl
mov
movsl
xor
cltd
inc
outsl
popa
daa
push
cltd
mov
aad
enter
adc
scas
test
xlat
pop
repz
out
push
into
and
add
pop
fimuls
cmp
pop
ljmp
ja
repz
in
rcl
sar
push
adc
mov
jo
and
push
mov
mov
mov
jmp
pop
jnp
inc
gs
mov
cmp
outsl
test
pop
dec
lret
or
hlt
adc
mov
insb
pop
lret
dec
cld
lcall
dec
fstpt
mov
cwtl
mov
fstl
xchg
cld
xchg
xchg
daa
ljmp
xor
pop
mov
js
add
out
js
mov
mov
pop
push
sbb
lret
movsl
movsb
out
shll
or
and
fmuls
sarl
mov
cmp
cmp
adc
push
mov
jmp
pop
sarb
sarl
loopne
sbb
ret
roll
jp
mov
sti
pop
leave
lcall
sub
jmp
stos
es
mov
sub
pop
fld
or
sbb
add
enter
jb
test
push
push
push
stos
pop
ja
fdivrs
jns
xor
insl
cmp
ds
dec
daa
lahf
xor
xchg
mov
sbb
lret
or
jecxz
ret
mov
xor
scas
es
cwtl
arpl
add
push
pop
jle
adc
iret
ret
sub
push
pop
cmp
out
js
mov
pushf
test
shll
ja
adc
adc
outsb
xor
test
ffree
add
or
shll
inc
mov
sti
push
push
xorl
adc
cmc
icebp
shl
popf
mov
dec
scas
popf
int
mov
ret
or
mov
stos
xor
sub
std
test
and
test
xadd
test
iret
inc
cmp
stos
iret
rorl
ja
jmp
enter
pushf
cmp
fcomp
push
mov
hlt
xchg
cmpsl
xchg
jbe
addr16
jno
push
hlt
and
inc
neg
push
pop
cmpsb
pop
and
das
out
mov
sbb
lret
xchg
jp
inc
andl
add
stos
xor
addl
fisttps
movsl
or
lahf
fldcw
inc
dec
dec
std
pop
fwait
jno
gs
add
aad
inc
lock
sbb
mov
les
inc
outsb
fwait
jl
adc
lods
movsl
movsl
or
out
or
iret
or
add
dec
loopne
mov
jo
test
add
insb
dec
sub
add
subb
cld
enter
lahf
xchg
adc
repz
cmp
jl
pushf
xchg
sbb
mov
or
sub
xor
sub
aam
sbbb
xchg
or
mov
aam
adc
repz
scas
sub
ds
roll
jl
xchg
into
aad
jae
mov
lret
xor
adc
and
cld
jmp
dec
push
mov
pushf
sbb
xchg
jns
fmuls
je
imull
push
and
cmc
mov
mov
add
adc
fbstp
into
mov
push
gs
inc
sbb
out
xchg
sub
inc
adc
cmp
cwtl
inc
cwtl
pop
sti
inc
and
out
xor
rep
xor
push
ljmp
inc
mov
xlat
xchg
add
aad
mov
adc
xchg
adc
xchg
or
in
jb
add
mov
cmc
xchg
sbb
mov
pop
outsb
dec
mov
adc
inc
push
add
inc
movsb
mov
cmp
es
faddp
cmp
xor
outsl
loopne,pn
xor
sbb
in
or
mov
int
pop
jge
sahf
jno
xchg
and
add
inc
outsb
andl
mov
cld
lods
int
mov
test
cmpsb
xor
movsl
mov
mov
sbb
jle
add
dec
repnz
xchg
push
pop
cli
aas
xchg
inc
das
pop
nop
dec
bound
movsb
xorl
pop
pop
lds
rcrb
loopne
push
fisttpl
push
insb
inc
imul
icebp
orl
xchg
mov
adc
out
iret
icebp
pop
lea
cli
sub
add
sub
xor
loopne
xchg
cwtl
movsl
inc
in
loopne
dec
inc
js
push
push
mov
jb
test
push
imul
push
nop
dec
and
xchg
xor
stos
stos
add
push
call
push
gs
int
dec
mov
popf
inc
push
aaa
call
and
aad
outsb
fsubrs
push
push
mov
orl
add
aad
sbb
loop
xor
lahf
out
scas
out
ss
mov
cmpsl
cmpsl
icebp
fs
shrl
lock
mov
cld
adc
add
jne
pop
int
push
add
adc
xchg
fcoms
insb
inc
outsb
and
mov
int3
jecxz
jae
ret
stc
xlat
push
inc
jmp
adc
lret
xchg
call
in
mov
push
push
push
or
sub
aad
inc
jne
jnp
jl
jmp
sub
outsb
sbb
loope
sahf
cli
xchg
scas
jge
sarl
mov
jo
jge
push
sbb
in
add
add
adc
mov
movsb
int
in
fst
mov
adcl
add
cwtl
xchg
das
cmp
hlt
fbstp
clc
inc
sbb
cmp
xchg
jecxz
hlt
test
push
mov
add
dec
jge
or
cltd
out
adc
aas
out
mov
sub
int
fimull
imul
add
pop
push
xor
mov
jge
out
fistps
pushf
pushf
mov
dec
hlt
scas
mov
ds
aas
inc
fimull
xor
xchg
inc
push
pop
mov
lds
push
jl
ljmp
xchg
ret
sbb
xor
icebp
shll
aas
ss
js
adc
pop
sbb
mov
gs
dec
scas
mov
xor
mov
stos
repnz
inc
adc
xor
sub
xor
inc
ljmp
or
mov
in
jno
test
loop
or
mov
imul
lret
mov
aas
sub
sbb
push
or
mov
lock
dec
sub
push
mov
jg
inc
cmp
pop
lahf
imul
cmp
pusha
mov
jmp
loope
mov
pop
sbb
cld
push
mov
inc
stc
add
pop
add
or
cld
push
movsb
fidivl
xor
rol
scas
scas
jle
mov
xchg
stos
cmpsl
or
pop
les
iret
mov
lea
iret
mov
dec
mov
pop
pop
fstpl
mov
ret
inc
inc
inc
repz
test
inc
cli
pop
js
xorb
sbb
pop
xchg
lds
je
inc
stos
xchg
sbb
mov
aas
iret
ds
scas
pop
xchg
idivl
push
mov
fldenv
outsl
shlb
cmp
das
leave
or
subb
test
mov
and
inc
sbb
icebp
push
mov
inc
gs
xchg
or
mov
cli
loope
clc
mov
or
lahf
loope
add
sub
insl
test
lods
notl
push
fsubs
cmp
int3
sbb
adc
sbb
and
inc
lds
stc
or
arpl
inc
pop
add
and
shlb
sbb
cmp
adc
mov
outsl
sbb
cld
test
fs
movsl
sbb
mov
mov
adc
sub
in
inc
lahf
cs
imul
cli
jl
jne
pop
cmp
stos
pop
test
pushf
int
jae
adc
add
testb
mov
lcall
loope
int
and
pop
mov
adc
inc
pop
ficomps
xchg
adc
push
or
fisubs
mov
ds
loope
scas
stc
pop
add
outsb
mov
pop
mov
gs
or
sahf
push
adc
es
test
int3
gs
out
sbb
push
pop
jmp
insl
jmp
je
gs
cltd
mov
ljmp
add
jne
push
adc
or
push
sbbl
sbbb
push
jg,pt
add
mov
add
jno
or
jle
jge
pop
imulb
shlb
dec
imul
mov
orl
testl
push
pop
out
adc
sub
push
add
stos
sub
rcl
fnstenv
xchg
mov
cmp
adc
mov
and
movsb
popf
lahf
cs
jo
xchg
mov
in
push
mov
inc
push
push
pop
push
jae
jge
cmpsl
in
ds
shrl
add
mov
add
stc
inc
inc
adc
fsubrl
mov
scas
test
addb
xchg
dec
fdivrs
sub
insb
mov
cmp
testb
imul
xor
adc
decb
mov
outsb
and
inc
mov
pop
bound
and
rclb
das
sbb
mov
insb
push
sub
or
jns
add
cmp
fadd
or
cmp
xchg
std
cmp
out
cmc
lret
aam
inc
lcall
enter
pop
or
pop
imulb
jg
dec
movsl
mov
aas
mov
and
fwait
test
adc
pop
sub
jp
xchg
inc
icebp
stos
leave
xor
pop
aas
sbb
outsb
fcompl
pop
dec
cmpsl
mov
mov
ret
jle
cmp
iret
test
lcall
inc
jmp
push
out
add
add
pop
nop
movsl
mov
inc
lret
stos
sbb
idivb
pop
mov
int
inc
mov
pop
and
outsb
outsl
test
push
sub
outsb
xor
xor
xor
sbb
aaa
pop
mov
jb
adc
pop
les
push
enter
xchg
jne
stc
fwait
dec
jo
lock
mov
daa
vmwrite
sbb
sub
movsl
push
xchg
lahf
pop
cmp
scas
pusha
pop
and
pop
enter
mov
aad
std
xor
xchg
and
inc
movsl
mov
inc
mov
push
sbb
and
cmovnp
stos
mov
mov
mov
popf
lds
pop
xchg
sbb
add
popa
daa
xchg
mov
scas
push
arpl
pop
stos
orl
pop
xchg
mov
sub
cmpsb
fwait
cs
push
in
mov
jne
xrelease
in
ss
inc
mov
xor
pop
or
imul
leave
icebp
xlat
and
pop
mov
int3
sub
mov
lods
jmp
mov
test
test
aam
dec
loop
inc
inc
daa
sbb
sbb
push
lock
repz
add
sbb
imul
sti
add
incb
mov
or
sti
gs
mov
jno
adc
mov
icebp
pop
sub
fidivrs
adc
ret
inc
mov
inc
jae
roll
mov
in
jge
in
pop
mov
or
mov
sub
sub
stc
daa
jae
push
pop
cmp
sub
xchg
adc
dec
jp
shrl
mov
mov
lret
mov
jne
in
adc
pop
cs
push
out
leave
mov
inc
add
into
or
xchg
or
pop
push
js
or
push
out
fnstcw
std
fwait
lret
in
sbb
cltd
outsb
pop
stos
cmp
push
cmp
lods
les
add
and
stos
mov
jne
cwtl
lahf
mov
mov
les
inc
aas
int
jne
aas
push
cmp
jp
xor
sbb
push
fstpl
cmpb
xor
data16
pop
push
cmp
ficoml
and
lret
in
int
mov
ds
pop
xchg
xor
jecxz
lcall
or
mov
push
push
or
pop
leave
sbb
mov
xlat
sub
insl
or
sub
cmp
and
push
or
ret
orl
sbb
shrl
lock
or
movsb
push
call
cmpb
pop
jns
push
cmp
and
out
mov
push
mov
aad
incl
mov
sub
xor
mov
jl
loope
icebp
jo
push
ss
mov
int
cld
adcl
ret
add
cmpsb
leave
jecxz
pop
sahf
ja
and
mov
out
daa
in
sarl
push
addl
mov
mov
aas
cs
sbb
cmp
lret
out
mov
cmp
mov
imul
xor
mov
pop
cmp
cltd
lcall
incl
xor
jno
fidivl
pop
inc
fiaddl
jo
lods
aas
mov
lods
dec
ja
iret
xor
repz
adc
cmp
pop
lock
jle
pop
adc
test
pop
adc
out
jno
and
xor
add
inc
jmp
sbb
loope
xor
or
insl
test
outsb
mov
repnz
mul
cli
mov
int
outsb
push
adc
pop
adc
das
pop
jge
bound
sarb
cld
mov
push
jnp
cwtl
xor
sbb
jne
jle
or
fimuls
ss
notl
in
push
inc
and
stc
loope
cwtl
mov
lods
pop
je
test
dec
mov
lods
movsl
sbb
in
mov
scas
mov
das
outsb
cmp
stos
cs
sbbb
mov
test
shrl
loop
mov
lock
addr16
decl
mov
add
cmpsb
in
sbb
icebp
ss
shll
mov
cmp
aaa
jmp
jp
adc
dec
mov
or
sarl
bound
xchg
faddl
mov
sub
cltd
das
inc
scas
test
mov
ja
imul
out
mov
sub
push
and
xor
pop
adc
fwait
inc
inc
enterw
ficoms
outsb
ficoms
scas
lahf
adc
pop
dec
pushf
int
into
scas
cmp
test
xor
or
sahf
movsb
mov
adc
add
fisubrl
adc
xchg
addr16
dec
test
inc
or
jmp
out
lds
jno
jns
push
into
clc
add
cmp
or
cmp
cmp
sub
push
push
popa
lahf
cld
dec
insl
sub
push
and
jmp
adc
push
add
repnz
pushf
es
outsb
iret
xchg
stos
mov
xchg
inc
outsl
add
xchg
enter
fprem1
cs
out
sub
jmp
loopne
jl
and
fcmovnb
cmpsb
push
adc
loop
sahf
and
addr16
outsl
cmp
icebp
addr16
dec
sti
pop
xchg
cld
jnp
push
iret
sub
mov
mov
inc
dec
adc
repz
dec
pop
scas
imul
testb
dec
shr
add
fstps
jnp
mov
insb
out
sub
out
bound
imul
pop
adc
clc
aad
fnstcw
cmpsl
sub
sub
pop
iret
adc
push
lock
out
sbb
mov
out
rclb
cs
loopne
jnp
or
fnsave
sbb
js
rorl
push
lds
push
popf
sbb
out
fbstp
xchg
push
pop
gs
inc
adc
pop
int3
or
sbb
iret
push
cli
mov
fcoms
aas
inc
mov
jnp
imul
pop
push
cs
fcomp
ja
jg
or
decl
js
shlb
in
aas
pop
and
repz
pusha
mov
fists
mov
fstl
out
out
mov
inc
adc
sub
aas
sar
pop
inc
iret
push
sub
scas
popa
push
rolb
enter
push
sub
dec
pop
test
lret
jmp
cmp
push
pop
movsb
dec
test
sbb
add
mov
test
movsl
cmpsl
out
loop
xchg
sub
xor
push
lcall
cmp
into
cmovnp
mov
aam
outsb
mov
and
dec
scas
inc
inc
xlat
mov
or
push
insb
ret
sub
mov
fimull
or
or
scas
adc
push
repnz
or
loop
push
pop
inc
mov
stos
jge
xor
xchg
cmp
sbb
xor
dec
xchg
mov
pop
dec
ja
mov
iret
jge
pop
das
mov
test
test
cmp
jg
cmp
cltd
hlt
std
leave
fchs
pop
mov
imul
iret
cmp
mov
and
mov
add
sub
cmpsb
inc
jae
or
jge
ss
cmp
or
mov
lods
jecxz
daa
iret
pop
inc
push
sub
mov
out
sub
cmp
and
loope
sysret
arpl
cmp
daa
ret
sub
mov
xchg
lret
sarl
outsl
adc
rcr
jecxz
pop
scas
js
dec
or
insb
dec
add
call
ret
gs
outsb
lods
and
lret
or
cmp
inc
push
xchg
fcomps
sbb
fs
out
xchg
mov
arpl
sbb
aam
lds
xchg
leave
arpl
and
sub
cmp
fs
pmaxsw
sbb
inc
hlt
jo
imul
out
push
push
mov
add
push
jne
sbb
xchg
jnp
fistpl
push
nop
arpl
xchg
adc
inc
dec
loop
daa
push
sarl
iret
sub
pop
ret
sub
sbb
mov
cmp
negl
popa
aam
dec
movsb
clc
xchg
shl
ret
scas
negl
cmp
pusha
ja
aam
jmp
pop
lods
push
cmpsl
xchg
cltd
jmp
xor
inc
cmp
mov
mov
cmc
and
sarb
icebp
adc
and
adc
jp
mov
xchg
push
dec
stos
es
fs
cwtl
shr
dec
dec
mov
or
loope
cmp
out
test
cwtl
sahf
jbe
ds
jge
repnz
rcll
popf
cli
out
das
sbb
adc
in
adc
push
sub
sub
inc
in
frstor
xchg
je
movsb
incl
sbb
ljmp
xor
es
mov
lds
pop
je
test
repnz
popf
add
popa
test
add
xchg
xor
mov
clc
daa
stos
add
notb
add
sub
insb
je
scas
sarb
mov
cld
pop
into
mov
int3
dec
push
aas
jns
pop
cmpsl
std
cvtps2pd
mov
test
in
fistpll
lods
inc
in
sahf
sti
or
push
gs
cs
sbb
inc
sbbl
sbb
add
sbb
inc
xchg
loop
loopne
jmp
lds
jmp
imul
xor
jl
hlt
mov
mov
push
cmpsl
jns
pushl
xorl
push
mov
cwtl
cs
stos
cmc
mov
cmp
stos
pop
xchg
cmp
sub
lret
lods
into
xchg
lret
sub
xor
xlat
xchg
mov
sahf
adc
jg
neg
int3
add
lahf
or
pop
and
lds
aad
dec
loop
out
data16
bound
aam
popa
xchg
mov
cmp
pop
ret
mov
lret
inc
dec
push
pop
daa
fwait
test
mov
xchg
xor
inc
pop
fs
loope
fidivrl
test
adc
repnz
jnp
sti
loopne
loope
ds
sbb
lret
cmp
jmp
xor
orl
aad
mov
push
popf
jae
lss
outsl
add
mov
jae
shr
add
cltd
mov
mov
int3
rcr
mov
xor
mov
jno
mov
mov
ds
jle
sub
test
clc
jp
mov
jle
je
cmp
dec
shlb
xor
add
das
sbb
stos
mov
adc
loop
stos
scas
out
push
mov
pop
mov
shr
cmpl
mov
jl
pusha
mov
xor
pushf
iret
sbb
sub
leave
or
adc
mov
jge
jo
rcrl
xor
leave
xchg
adc
mov
xor
ficoms
scas
stc
jmp
fimuls
cmc
cltd
lods
mov
das
stos
jbe
std
cs
dec
add
pop
sbb
push
in
or
out
mov
repz
cmp
push
xor
shrl
aaa
popf
pop
or
ja
mov
xor
loopne
add
dec
cltd
cmp
pop
push
shl
jb
push
bound
popa
incl
jns
or
shrb
shrd
imul
divb
jb
rcr
mov
dec
cmp
mov
out
sbb
in
add
push
mov
adc
shll
push
fisubs
ja
mov
aas
js
xor
lahf
std
cld
sub
and
dec
add
jo
mov
cmp
test
dec
mov
sbb
pop
gs
pushf
push
jno
mov
jae
jnp
adc
and
int
fcmovne
or
mov
mov
ret
xor
fidivs
or
adc
scas
dec
std
into
int3
pop
mov
mov
je
out
or
mov
aas
gs
push
jmp
iret
mov
imull
jmp
pusha
pop
mov
std
and
sbb
test
fistl
dec
or
or
add
jbe
loopne
lods
loopne
mov
xchg
std
or
int3
fs
jg
idivb
std
push
xchg
xor
cld
out
sahf
push
xchg
in
sti
ja
push
pop
push
jb
popf
ret
sahf
push
xor
jp
xchg
jno
les
insl
jno
inc
shrl
lock
test
mov
mov
jae
push
repnz
insb
ret
outsl
icebp
add
stos
jne
shrb
and
jns
add
jno
pop
cmp
sbb
out
movl
add
shrl
faddp
ljmp
ljmp
int3
push
hlt
test
jo
mov
rorl
and
addr16
out
and
cmc
mov
movsl
mov
mov
adc
and
repz
adc
pop
lret
push
in
mov
sbb
in
push
mov
pop
xorb
adc
sbb
mov
inc
jg
shl
inc
ljmp
and
add
xor
jmp
xchg
add
loop
adcb
xchg
xchg
insb
adc
sbbl
cli
inc
mov
rorb
mov
lret
adc
sbb
push
in
or
lock
pop
jne
aad
pop
mulb
test
xchg
mov
mov
mov
inc
or
rclb
out
cwtl
push
in
int3
mov
sub
add
inc
push
pop
mov
ficomps
in
jb
sbb
sub
lods
fdivs
sti
cltd
pusha
xor
mov
mov
inc
or
imul
pop
pushf
pusha
imul
sbb
inc
xor
push
cltd
add
scas
xchg
js
sbb
std
or
or
sub
and
cmp
je
xor
jecxz
push
inc
je
into
jno
in
dec
cmpsb
push
mov
jmp
arpl
push
ret
pop
jb
fmuls
nop
and
fstps
mov
dec
and
rol
push
inc
push
bound
push
repnz
pop
dec
xchg
sub
jge
or
arpl
mov
adcl
paddd
xchg
add
sub
icebp
fisttpl
sbb
adc
cld
icebp
mov
cmp
jg
aaa
mov
push
arpl
ret
jbe
sti
jg
test
mov
cmpsl
xorl
shll
fdivrl
rcr
pop
es
xchg
adcb
repz
sbb
outsb
adc
or
lahf
add
outsb
cmp
sub
adc
movsl
jo
dec
jo
addr16
jp
or
jns
mov
push
mov
add
mov
rorl
shl
and
mov
cmp
lret
mov
sub
leave
and
inc
push
pop
cmp
stos
add
xsha1
cmpsb
mov
push
mov
outsb
xchg
push
ja
cld
xor
out
out
pop
or
dec
sbb
cld
mov
out
cmc
and
push
mov
test
testl
leave
repnz
and
pop
cld
dec
jmp
adcb
cmp
xlat
adc
in
mov
push
aas
cmp
icebp
das
addb
in
ja
pop
dec
lock
fistpl
and
mov
out
push
cmp
xor
inc
mov
inc
jns
test
je
test
dec
mov
rcrl
xor
movsl
clc
jns
sub
jecxz
jns
adc
push
stc
lret
mov
outsb
in
gs
sbb
loop
ss
cltd
outsb
out
ret
xor
xor
and
fdivs
push
iret
mov
sub
jnp
xchg
mov
cmp
mov
pushf
lret
pop
mov
out
add
jae
adc
mov
lcall
jle
ss
xor
mov
inc
cmp
cmc
mov
ret
xor
xor
call
aam
in
fwait
or
lds
xchg
cmp
xor
iret
sahf
or
into
loopne
in
mov
hlt
cmp
in
inc
inc
add
xor
sub
fidivrl
adc
cli
lret
cmp
xor
jmp
lock
pop
inc
test
cmpsb
lret
mov
aam
fnstsw
add
sub
mov
xchg
fisttps
outsb
jecxz
mov
push
and
mov
mov
and
ss
stc
pushf
sub
inc
jo
or
mov
xchg
lods
dec
sbb
mov
and
int
jne
push
xorl
cltd
jg
rolw
pop
lods
add
movb
das
cmpb
cltd
xor
out
push
mov
lods
jp
orl
jo
xchg
orl
test
sbb
dec
pushf
or
gs
mov
mov
mov
lds
ljmp
cmp
mov
gs
jb
stos
cmp
pop
outsl
scas
cld
pop
les
adc
hlt
jae
cmp
insl
xchg
cmp
and
lods
insb
ja
out
sub
jae
int
jb
adc
lods
sbb
inc
fcompl
ficoml
push
xor
fnstenv
mov
and
dec
adcl
cmc
insl
fdivr
and
mov
push
push
add
and
inc
pop
enter
lock
sbb
lds
push
int
push
mov
sbb
sbb
mov
or
fucomp
mov
xchg
jae
mov
lret
sbb
in
inc
mov
mov
push
scas
loop
add
test
xor
mov
in
xor
in
test
jns
fptan
arpl
cmpsb
and
loop
ficoms
cli
out
inc
jns
inc
push
adc
fcmovbe
in
into
jg
je
jne
mov
or
jb
sti
aas
arpl
pop
add
sbbl
push
subl
cmpsb
out
or
xchg
cmp
loop
int
shrb
mull
rolb
nop
push
push
pop
xchg
out
outsb
fidivrs
pop
addr16
and
ljmp
mov
jno
out
in
dec
push
pop
mov
xor
mov
push
icebp
jnp
push
xchg
int3
pop
mov
int
into
pop
call
xorl
movsb
mov
mov
wrmsr
push
mov
cmpsb
cmc
inc
cmp
mov
push
pop
movups
pushf
add
pop
mov
sub
push
inc
cmc
aad
mulb
xchg
ss
xchg
aas
inc
leave
xchg
ret
lock
jge
lcall
xlat
loop
clc
mov
mov
decl
stos
ss
add
jbe
fs
cmp
outsl
jae
lret
xchg
sbbb
std
xchg
xor
jo
outsl
cmpl
orb
andb
imul
jecxz
jne
mov
mov
cmc
push
pusha
jnp
jo,pn
mov
and
sub
xchg
pusha
negl
scas
xchg
lahf
sbb
jmp
cmc
adc
xchg
insl
fbld
adc
loopne
xor
dec
ficoms
mov
push
lcall
and
imul
adc
hlt
inc
cwtl
sahf
insl
inc
pop
jae
sbb
jnp
adc
jge
jecxz
inc
mov
push
fwait
and
rcrb
icebp
out
sbbb
out
sahf
jmp
pop
mov
adc
out
sbb
push
int
adc
sub
inc
mov
rolb
filds
jp
repnz
js
mov
jnp
mov
inc
and
cltd
stos
and
dec
ret
mov
inc
adc
or
inc
aas
sub
pop
mov
mov
push
and
ss
pop
lods
adc
add
jg
inc
or
imul
iret
cli
scas
daa
push
add
ss
mov
sahf
mov
adc
outsl
test
sti
or
xchg
inc
inc
jmp
cmpsb
lds
mov
fnstenv
add
lahf
jp
mov
mov
mov
mov
mov
jg
add
or
jp
sub
jnp
insl
dec
scas
pushf
dec
mov
push
mov
into
bnd
sub
ss
adc
push
test
mov
pop
xchg
lods
jns
sub
or
mov
jne
push
jp
movsl
mov
leave
push
sub
xchg
out
adc
cltd
push
enter
sub
xchg
xchg
rorb
sbb
mov
cmp
fnstsw
popf
aas
fs
cmp
cmp
jg
stc
jge
stc
xor
les
fnstsw
outsb
cli
fsubl
inc
adc
xchg
pop
pusha
xchg
lock
stos
lds
mov
lods
mov
sub
add
inc
cmp
or
ljmp
popf
fwait
sbb
sbb
mov
adcl
fbstp
mov
loope
dec
cli
cmp
xor
mov
xchg
imul
pop
out
cmp
aaa
push
adc
int3
mov
cs
in
jg
add
repnz
adc
jb
mov
pop
mov
jb
std
imul
sub
mov
push
lea
in
cwtl
loopne
push
sarl
test
or
fisttpll
xchg
xchg
mov
cmp
mov
push
stos
xor
aas
xor
in
dec
scas
test
cmp
movsb
and
je
insb
and
dec
or
or
in
sub
sub
mov
sub
imul
movl
and
lea
fnstcw
bound
pop
arpl
daa
sub
aaa
and
je
test
scas
insl
leave
jmp
sub
jle
and
cmp
lock
jb
inc
aas
sub
ss
jp
hlt
sbb
out
js
cltd
mov
adc
push
repz
or
push
jne
pop
inc
data16
xlat
jecxz
movsb
and
xchg
movsb
in
ds
cmp
mov
mov
hlt
popa
push
mov
inc
pop
aad
push
xchg
nop/reserved
cmpsl
xor
mov
repnz
push
xchg
mov
mov
xchg
icebp
ja
sahf
xchg
imul
mov
jmp
cmp
les
pop
mov
xchg
mov
loope
inc
jno
and
jmp
pop
cmp
icebp
lods
cmc
stos
mov
pushf
pop
sub
xchg
mov
xchg
dec
in
pop
inc
fisubl
aam
fwait
mov
loop
lahf
clts
jbe
ret
adc
fnstsw
push
push
lret
mov
pop
cli
jae
in
jecxz
cmc
std
test
outsb
xchg
mov
es
mov
sub
cmp
cmpsl
mov
popa
push
push
adc
dec
jge
mov
out
add
or
ja
push
movb
pop
pusha
push
lret
xorl
sub
dec
add
out
dec
nop
incl
xor
loop
xchg
fwait
rolb
sbb
push
dec
mov
test
mov
sbbl
xchg
and
out
jecxz
xchg
push
xchg
loope
dec
sub
add
js
jne
xchg
inc
and
sub
cmp
inc
je
mov
mov
cmp
test
movsb
jle
push
mov
add
std
add
mov
cwtl
pop
mov
test
scas
jecxz
rorl
xchg
add
fistl
out
mov
ja
xor
lock
sbb
jb
shl
mov
lret
sbb
pop
mov
mov
lret
inc
jg
xor
int3
mov
inc
rorl
adc
jp
mov
mov
push
push
bound
mul
mov
shrl
movb
repz
scas
hlt
xchg
test
fdivrs
mov
daa
pop
push
jb
inc
hlt
imul
movsl
xor
nop
test
dec
shrl
sub
scas
add
lea
fcmovu
adc
mov
pop
fidivrs
inc
push
test
push
sbb
adc
pop
pop
adc
pop
dec
push
inc
jae
push
enter
lock
addl
xorl
mov
mov
mov
jp
xchg
dec
loope
fcoml
jno
mov
fsts
sbbb
in
pop
sbb
pop
dec
mov
xchg
call
je
cmpb
mov
mov
sbb
sbb
aad
sub
pop
ret
lds
xchg
aam
pop
sub
xchg
xchg
adc
aaa
jbe
mov
aaa
xor
fadds
sbb
inc
inc
clc
out
sub
push
and
imul
pop
cwtl
imul
dec
call
rorl
pop
loop
jp
push
fwait
inc
hlt
fstp
cld
shl
in
aam
loop
adc
jb
lretw
cmpsb
ffreep
dec
pop
cwtl
xchg
push
xlat
dec
xchg
push
sahf
aad
adc
add
into
test
inc
out
mov
lret
imul
in
loop
ljmp
or
pop
fs
test
addr16
mov
jbe
lret
mov
cld
stos
pop
rol
dec
jns
or
mov
cmpsl
pop
jb
or
rorl
mov
push
lcall
adc
loopne
test
aaa
add
cs
pop
popa
mov
leave
inc
push
stc
and
fwait
xor
inc
mul
add
movsb
xor
popf
cmp
pop
inc
push
mov
arpl
mov
cmp
ljmp
mov
aas
cmp
jg
inc
or
mov
push
cld
jns
ss
mov
jnp
xchg
arpl
outsb
cmp
add
xchg
iret
test
fwait
rcrb
pop
sbb
push
call
mov
or
dec
jo
and
rcrb
movsl
pop
push
mov
icebp
mov
push
cmpsl
sub
and
out
push
iret
sub
xchg
push
add
mov
mov
fmull
push
adc
mov
ja
stos
imul
std
in
daa
mov
inc
dec
or
ljmp
jl
call
jmp
jno
pop
xchg
inc
das
fstpl
ret
sub
and
call
dec
cli
sub
rclb
push
mov
call
das
shlb
test
jnp
cmc
xchg
das
scas
mov
or
rcrl
stc
call
mov
push
sbb
dec
fcoms
andl
ss
add
rorl
dec
push
sar
cmpsl
pop
push
imul
add
mov
cld
push
sub
movsb
add
jmp
stos
add
iret
fdivrl
gs
das
and
inc
xchg
fcompl
pop
iret
sahf
sub
xchg
orl
or
fidivrs
sbb
xor
jns
fs
dec
mov
lds
js
cmp
jbe
mov
push
hlt
and
fidivrs
shll
jno
sbb
push
dec
fwait
in
arpl
loope
adc
sti
arpl
js
push
mov
sti
jnp
sbb
push
push
jb
ror
in
mov
out
pushf
imul
or
push
je
in
xchg
xchg
popa
and
jg
add
aad
mov
mov
lret
push
test
clc
mov
imul
mov
es
cltd
shrl
xchg
dec
sub
jmp
sub
sbb
fldenv
or
push
add
setge
xor
pop
push
imul
sbb
and
adc
scas
jnp
sbb
mov
lcall
pop
or
shlb
adc
sbb
pop
data16
inc
cmpsl
inc
mov
stc
imul
nop
cmpsl
push
aas
arpl
out
cmpl
push
orb
xchg
or
lcall
dec
xlat
inc
cmpsl
iret
fisubrl
add
ret
mov
rcll
add
adcl
inc
dec
or
mov
mov
add
and
push
jle
push
xchg
adc
in
sub
out
mov
lahf
fldcw
nop
inc
divb
in
push
sahf
pushf
loopne
mov
cmp
jb
jae
idivb
fwait
jg
adc
mov
jb
arpl
popf
in
and
xor
pop
jnp
add
add
dec
fisttpll
insl
enter
mov
aad
mov
jne
sub
push
lcall
xor
inc
xor
or
pop
inc
bound
and
into
out
mov
pop
sub
sub
sub
gs
jo
inc
scas
testb
cmp
adc
mov
jl
pop
and
fmull
fsubrs
ja
and
mov
pushw
mov
mov
lret
pop
jecxz
test
cmpsl
inc
insl
mov
dec
shl
jmp
das
sbb
xchg
mov
add
xor
je
data16
je
ja
aas
sub
adc
pop
mov
sbb
into
aad
jge
ret
repz
pop
mov
mov
push
xchg
jle
fcompl
jp
ja
xchg
pop
ret
add
adc
pop
adc
push
xor
stc
pop
mov
adc
xchg
adc
mov
add
ljmp
out
push
pop
xlat
or
cwtl
cwtl
test
sub
cmp
or
cmpsl
insb
cmp
decl
pop
xchg
jp
jns
xchg
adc
fwait
mov
mov
xchg
sbb
sub
push
sub
xchg
add
mov
sbb
test
rol
hlt
xor
cltd
fdivl
insb
adc
mov
fwait
pop
and
push
ljmp
cwtl
cmpsb
xchg
push
mov
inc
and
adc
inc
cwtl
movd
popf
stos
nop
lds
ret
or
ds
fcoml
sub
sbb
sub
leave
xchg
jp
pusha
gs
mov
repz
rorb
cmc
scas
js
mov
or
dec
cld
stos
jbe
into
out
xchg
jne
inc
and
pop
pushf
sbb
and
mov
xor
or
lds
fst
pop
xor
popf
mov
mov
into
add
repz
jmp
rcr
xor
imul
std
or
pop
jns
loopne
xchg
xor
lahf
mov
adc
loope
lods
or
mov
cld
xchg
jg
inc
pop
sbb
sahf
push
pop
mov
in
outsb
jbe
inc
mov
loop
mov
loop
int3
fs
mov
je
jmp
xchg
sub
jg
aas
insl
ljmp
sbb
inc
ljmp
mov
sub
gs
aad
ja
jae
push
loopne
push
sti
jle
inc
push
imul
push
cmp
rcl
xchg
repz
jno
mov
sbb
push
mov
in
add
xchg
sub
xlat
fs
add
aas
sarl
lcall
shlb
sub
dec
pop
cmp
lahf
mov
sti
adc
add
xlat
loop
jnp
sbb
jae
rorb
or
sub
jae
sub
xchg
je
add
inc
orl
lahf
dec
lock
dec
or
pop
movl
ss
dec
jo
aam
xor
movsb
scas
jecxz
jnp
ret
sbb
sub
outsb
mov
lock
iret
mov
push
jle
pop
push
cmp
mov
stc
lods
sub
jle
sbb
in
sti
xchg
push
mov
or
adc
stos
jb,pt
fdivl
stos
sub
push
pop
shl
jo
repz
nop
out
push
out
jp
jb
mov
xor
cmp
jl
cwtl
aad
in
or
push
lret
popa
xchg
lea
inc
push
adcl
js
dec
test
inc
dec
pop
and
sub
ficomps
jno
jg
lahf
xchg
out
cmp
adc
stos
and
cmp
pandn
cli
cwtl
mov
out
and
lea
mov
rorl
pop
nop
push
cs
aam
inc
movsb
gs
icebp
cli
popf
add
cs
adc
cltd
and
ret
sub
dec
fstl
push
daa
imull
adc
stos
mov
and
iret
repz
pop
test
dec
mov
sbb
inc
clc
ja
fistps
push
mov
ja
xlat
aaa
arpl
shrb
je
fsubl
and
mov
adc
addr16
rcr
cmp
andl
jno
adc
test
sbb
inc
xchg
adc
setg
clc
cltd
xchg
icebp
sbb
loop
ds
jbe
add
push
xorb
frstor
leave
outsb
cmpsb
mov
fcmovnu
push
repnz
xchg
test
enter
jecxz
jo
std
insl
add
dec
xor
jp
cltd
cmp
mov
pop
out
shll
xlat
mov
fisubrl
jge
lods
pop
add
in
mov
jp
jg
negb
mov
sti
mov
jle
xchg
and
js
nop
idivb
or
dec
mov
out
or
xchg
call
mov
popf
mov
aaa
jl
inc
cmpsb
aas
jnp
mov
dec
mov
lret
xchg
mov
xchg
loop
mov
mov
out
ljmp
call
mov
ret
cmp
cmp
stos
sar
add
and
or
and
add
stos
push
cmp
orb
cmp
adc
pop
sub
and
mov
mov
mov
subb
fdivl
adc
lods
rcl
push
xchg
cmp
lahf
dec
jae
arpl
sub
jne
lds
dec
arpl
into
test
mov
inc
and
lea
mov
mov
das
stos
xchg
scas
push
mov
call
loope
sub
insb
add
mov
jg
mov
mov
cmp
sarb
xor
dec
stc
subb
adc
cmp
andl
mov
push
out
cmp
int3
mov
dec
cmp
or
push
fsubrs
xor
repz
sub
fldenv
sbb
add
pop
adc
cmp
add
or
adc
sbb
std
add
cld
jecxz
sti
leave
das
lcall
mov
sub
fs
imul
push
int3
xlat
fmull
jae
jns
ds
lock
xor
fisttpll
lret
aaa
xchg
add
out
aam
mov
xor
mov
cmp
jmp
or
inc
bound
jae
sti
test
repnz
inc
cli
or
imul
add
xlat
daa
icebp
mov
cmp
push
nop
outsb
sbb
push
mov
out
jo
nop
cmp
out
subl
rorl
sbb
stos
mov
jg
sbb
rorl
cmpsb
adc
adc
pop
icebp
divl
jbe
inc
xchg
hlt
pop
stos
or
movsl
cmc
xchg
inc
shrl
or
push
std
sbb
inc
xchg
lret
stos
xchg
test
imul
and
mov
out
int
inc
push
out
out
or
adc
jo
xor
arpl
mov
scas
lods
or
sbb
xchg
sbb
sbb
outsl
dec
loope
sbb
test
pushf
jbe
arpl
cld
xor
dec
mov
movsb
add
sbb
sar
mov
loope
or
jae
mov
ljmp
es
or
fs
cld
movsl
pop
scas
int3
out
jae
inc
int3
jecxz
loop
mov
push
ja
in
cli
pop
mov
cmp
dec
add
shlb
aas
and
and
jae
sbb
push
xchg
adc
int
pusha
out
inc
sbb
add
dec
incl
sub
sub
mov
jg
xor
cmp
rcl
ret
lds
mov
dec
cmpsb
loop
mov
sub
repz
inc
or
sbb
iret
out
push
pop
rcrl
sar
dec
cmpsl
dec
mov
jo
sub
stos
outsb
add
popa
andl
pop
sbb
outsl
imul
sub
ja
in
cmp
jl
sbb
sahf
push
mov
push
dec
mov
xor
jns
xchg
inc
mov
or
jmp
push
pop
adc
sub
cmpsl
xchg
inc
xchg
dec
dec
cltd
jl
fstl
jb
lock
fs
jle
fcomp
mov
push
adc
mov
inc
ja
pop
loop
leave
movsl
iret
add
dec
aas
xchg
cmc
inc
adc
push
repnz
mov
cltd
pop
cmpsl
lock
das
scas
inc
cld
ja
into
dec
inc
ds
jno
cmpsb
xchg
adcb
jne
popf
xchg
fdivrl
jl
or
in
mov
jle
jae
lret
arpl
add
addl
or
sub
cmpb
imul
repnz
jp
imul
push
js
das
xchg
pop
fldt
fwait
ret
int
inc
cmpsl
xchg
sub
mov
mov
cwtl
dec
or
jmp
sbb
jp
lock
aaa
gs
es
mov
sub
dec
bound
add
test
push
pandn
adc
arpl
sub
test
int3
jbe
jmp
and
daa
jbe
adc
cs
imul
sbb
pop
lret
insb
push
ret
mov
push
fld
sbb
pop
and
pop
fwait
popa
inc
xchg
xchg
int
scas
cmp
lds
insl
mov
or
xchg
jae
dec
jp
andl
push
or
mov
inc
aam
jns
lcall
jle
cwtl
jg
jne
and
pop
sub
out
jne
popf
xchg
mov
test
gs
fcomi
ljmp
je
xchg
pop
sub
neg
jmp
fwait
ret
stos
hlt
popf
scas
xor
push
sub
inc
cmc
jmp
int3
cmpsl
adc
stos
sti
fwait
xchg
pop
sbb
les
dec
lret
sub
repz
mov
fmuls
mov
pushf
js
call
loop
in
enter
inc
aam
iret
cmc
push
pushf
mov
mov
xlat
inc
mov
xor
sahf
es
jge
jmp
ja
scas
ret
out
ret
test
xlat
pop
or
aam
das
mov
mov
mov
out
test
repz
das
cmp
hlt
das
dec
ds
out
inc
cmpsl
cmp
jle
mov
out
pop
enter
ret
hlt
aaa
mov
xchg
cwtl
lret
sahf
cmp
pop
ljmp
ja
imul
fisttpll
dec
out
imul
imul
jl
adc
cmpl
in
push
pop
das
movsb
pushf
add
movsb
xor
cmpsl
imul
hlt
daa
adc
mov
lret
clc
insb
pop
or
mov
test
idiv
mov
subl
lret
fmuls
sub
adc
cmpb
pop
repnz
jae
add
xchg
cltd
fucomi
loope
test
hlt
ret
sti
test
sbb
shll
test
mov
int
pop
or
fs
mov
push
hlt
mov
dec
into
into
mov
push
fldcw
std
inc
pop
jo
data16
in
mov
and
jp
add
insl
ret
faddl
mov
pusha
sbb
insb
aam
pop
pop
and
mov
cld
cli
shlb
xor
je
xor
xchg
cmpsb
push
insl
sti
push
idiv
out
fsubs
imul
push
into
xor
test
cli
xor
adc
call
icebp
lock
enter
push
in
mov
fisubl
mov
fld
sub
and
mov
dec
rol
pop
stc
xchg
lret
add
aas
mov
mov
int
bsr
mov
or
cmp
mov
lcall
bound
cmp
xchg
cld
xchg
inc
mov
mov
push
jge
dec
pop
scas
ret
push
xchg
stc
sbb
xchg
cmp
xor
mov
lcall
mov
jo
mov
or
ffree
clc
and
add
rclb
pop
dec
jb
leave
or
imul
sub
pop
mov
cmp
cmc
loope
mov
les
insb
inc
rcll
ljmp
mov
inc
xor
add
mov
cmp
movsb
inc
call
sub
mov
cltd
js
pushf
popa
adc
jae
jmp
jl
pop
sub
xor
cli
dec
fiadds
adc
sub
in
imul
imul
push
jb
xor
scas
and
inc
mov
mov
jae
aas
dec
cli
aaa
adc
adc
rolb
sbb
sbb
loopne
mov
xchg
pushl
addr16
outsb
lret
stos
and
dec
cwtl
ret
rorl
xchg
mov
into
iret
pop
repnz
and
je
jnp
dec
dec
inc
rclb
test
push
push
sbb
inc
push
adc
pop
jns
or
fnsave
xor
pop
xchg
addr16
shl
insl
pop
call
mov
inc
test
mov
xlat
mov
stos
fwait
pop
push
cli
xor
cmpsl
cmp
and
pop
sbb
mov
xor
mov
mov
jnp
inc
fwait
loope
lods
enter
js
out
lods
or
xor
test
in
imul
mov
and
cmpsb
push
fsubr
arpl
das
mov
out
pusha
jp
clc
mov
or
sub
sahf
mov
sbb
cmp
cmpsl
pop
daa
jge
iret
lret
mov
mov
test
inc
push
movsb
sub
bound
gs
add
cwtl
movsb
xchg
scas
xor
mov
pop
mov
or
shlb
lcall
mov
sub
shlb
imul
ds
das
jbe
shl
cmpsl
adc
test
inc
sbb
inc
imul
jno
rclb
and
mov
outsb
in
xchg
in
sbb
cmpsb
and
pop
push
daa
pop
or
sbb
sub
cld
push
call
xor
in
cmpsb
mov
mov
lock
inc
test
hlt
jnp
xor
mov
mov
dec
lods
adc
rcrl
iret
mov
lds
adc
xor
addr16
les
fcomps
out
flds
push
add
inc
inc
push
ret
mov
xchg
cmpsb
xor
insb
repnz
pusha
fidivl
rorb
rorb
testb
fwait
cli
pop
loope
fdivrl
mov
sbb
es
std
lods
mov
imul
js
lret
repz
push
scas
xchg
xor
or
xchg
xlat
push
pop
cmp
je
jp
jno
dec
pop
dec
mov
mov
out
sbb
push
orb
inc
leave
fadd
push
icebp
and
mov
jp
cmp
jae
pop
ret
xor
hlt
xor
lea
lods
fstpt
push
adc
push
jecxz
mov
pop
mov
sub
sbbl
outsl
test
lret
les
mov
imul
dec
mov
pop
inc
aas
in
fildll
sub
arpl
sahf
das
test
mov
sbb
sub
icebp
mov
addb
cwtl
aaa
sti
xsave
xchg
mov
not
mov
notl
or
mov
out
jecxz
push
shll
insb
cld
gs
cltd
and
xchg
shl
dec
dec
add
push
inc
lods
mull
push
lret
out
jl
and
pop
dec
inc
and
jbe
add
dec
mov
pop
pop
jmp
cwtl
add
inc
shl
pusha
xor
add
jge
push
lea
cltd
mov
fs
jl
std
push
mov
test
xchg
jecxz
cltd
addr16
inc
and
aaa
jmp
ret
fnstcw
dec
dec
bound
pop
cmc
test
hlt
ret
stos
outsl
mov
dec
mov
popaw
push
out
test
aad
rorb
push
mov
cwtl
pop
pop
repnz
sbb
add
pusha
push
cli
ljmp
stos
out
in
push
xor
loopne
nop
add
xchg
pop
repnz
add
push
jge
cmpsl
aaa
imul
pop
and
bound
scas
adc
cmpsb
insl
in
and
jg
rep
movsl
mov
inc
push
xor
iret
push
fiadds
jmp
cwtl
mov
xor
repz
jge
or
xchg
add
mov
push
call
xchg
js
lret
std
jnp
sbb
outsl
cmp
adc
ja
xchg
pop
repz
push
rcr
dec
sbb
sub
shl
inc
dec
mov
out
pop
mov
and
into
push
pop
dec
mov
mov
adc
mov
xchg
xchg
jnp
inc
ds
jmp
mov
repnz
movsl
orb
ljmpw
fiadds
pop
mov
cmp
and
adc
out
bound
jo
mov
imul
push
mov
mov
mov
jb,pn
ja
stc
mulb
xchg
in
test
push
xor
dec
mov
notl
and
jp
popa
xor
and
add
mov
pop
in
clc
lret
sub
lods
dec
leave
sbb
adc
rcrl
je
and
fwait
inc
mov
test
sbb
and
and
mov
add
adcb
add
out
or
movb
xchg
xor
cltd
or
and
pop
lret
inc
testl
lret
push
pop
push
mov
out
lret
or
push
pop
jne
mov
daa
mov
mov
dec
outsb
mov
dec
mov
sbb
mov
cwtl
scas
and
scas
push
scas
pop
cwtl
gs
gs
sub
cltd
aam
push
ficompl
inc
imul
cs
adc
sub
fadds
push
lcall
xlat
loopne
es
inc
inc
mov
xchg
pusha
pop
stc
sar
idivl
je
pop
xchg
mov
dec
adc
xchg
out
sbb
data16
mov
push
inc
out
dec
inc
jle
push
pushf
sbb
cmp
push
notl
sub
dec
xchg
mov
cli
std
ficompl
je
daa
adc
loopne
insb
mov
pop
xor
push
sub
cmpsb
pop
dec
mov
stos
ljmp
addr16
mov
popf
mov
pop
pushf
inc
addb
mov
in
sub
lods
rcr
sti
jne
fpatan
mov
sub
mov
subb
je
test
pusha
jp
arpl
pop
lods
loopne
lods
pop
rorl
inc
mov
inc
jno
xchg
mov
jmp
je
out
mov
pop
push
out
imul
call
pushf
jae
mov
lcall
pop
mov
mov
lret
or
or
jmp
pop
orb
sbb
out
pusha
popl
rorb
cmp
jb
test
push
adc
push
xor
loopne
outsl
sti
pop
or
jae
sub
jno
mov
xchg
jge
dec
iret
and
inc
xchg
xchg
sub
cmp
movb
mov
xlat
lods
in
mov
sbb
mov
pop
adc
loopne
cltd
dec
in
loopne
out
out
fnstsw
es
mov
xchg
test
inc
pop
cmp
sub
xor
fldl
xchg
call
jecxz
mov
mov
into
lods
pop
jne
fimull
test
mov
mov
pop
fcmovbe
sub
jle
add
das
jne
fbld
or
stos
movsb
jnp
xchg
xchg
jno
sbb
or
out
adcb
out
xchg
in
cmp
cmpsl
add
xlat
fs
jnp
cmp
mov
dec
jns
scas
inc
int
push
test
out
add
jecxz
push
popf
jae
pop
ss
pop
mov
mov
gs
hlt
xor
enter
in
ja
test
jno
fstl
pop
mov
pop
js
repnz
push
push
cs
std
jo
and
pop
popf
add
bound
inc
ljmp
imul
das
jb
push
jge
push
push
and
push
cmp
repnz
andb
cli
sub
xchg
push
inc
push
cmovnp
mov
cmp
add
dec
insl
clc
jbe
punpckhdq
add
xor
pop
addr16
dec
in
daa
xor
je
inc
push
push
dec
repnz
rcll
pop
sbb
xlat
push
mov
jb
push
fldenv
out
scas
outsb
push
lea
mov
aad
das
push
loopne
inc
leave
cmpsl
into
pop
mov
pushf
mov
cmc
adc
jmp
xlat
inc
sbb
dec
or
xchg
cmpsl
push
mov
xlat
xchg
jnp
lds
lds
mov
ret
fwait
pop
xor
mov
sbb
scas
imul
std
inc
aas
xchg
das
xor
inc
or
push
mov
cs
stc
sbb
adc
mov
inc
sbb
push
adc
ret
jge
andb
mov
sub
and
mov
hlt
jns
dec
lds
sbb
ss
adc
xchg
xor
and
add
xchg
mov
pusha
adc
dec
dec
jae
dec
mov
out
in
cwtl
and
repnz
mov
xchg
call
lock
xchg
xor
and
rcrl
les
mov
jle
lods
fbstp
mov
add
dec
fcompl
call
cwtl
jmp
repnz
filds
sub
icebp
or
outsl
xor
xchg
fimull
fdivrl
mov
or
pop
iret
jbe
lcall
push
ja
dec
and
mov
nop
lds
push
repnz
mov
and
lcall
push
xchg
add
in
pop
popa
push
jmp
in
sub
pop
roll
xor
notb
cld
or
adc
in
cwtl
sub
popf
mov
jg
xor
mov
xor
sub
arpl
adc
stos
inc
stc
add
and
pop
mov
mov
aad
jge
push
mov
cs
aas
jl
icebp
or
call
les
in
xchg
sbbb
hlt
in
mov
sti
inc
add
daa
mov
sub
mov
jp
mov
inc
rcll
sarb
cmp
mov
jno
repz
jno
push
in
aad
repz
or
xor
and
stc
mov
hlt
mov
cmpsl
outsl
sub
push
stc
pop
subps
andl
sbb
jnp
pop
xchg
shll
jnp
sbb
cwtl
clc
sub
daa
popl
ficoms
loope
outsb
sbb
and
and
pop
jns
in
int3
lahf
test
mov
xor
and
dec
jae
xchg
dec
mov
shlb
ja
or
or
cmp
xchg
nop
cmp
fwait
xchg
pop
fidivrs
ficomps
and
push
jne
call
das
cli
int3
dec
lret
outsl
push
jae
push
push
stc
jnp
lds
adc
push
ret
movsb
inc
loop
mov
int3
loope
lahf
pop
fstpl
cmpsl
and
mov
xor
lea
push
pushw
mov
lock
mov
add
and
and
adc
ds
xor
adc
mov
int3
sub
mov
pop
sub
pop
xchg
repnz
out
icebp
leave
imul
jno
mov
and
pushf
mov
xlat
xchg
rcr
ja
fmull
notl
ficompl
mov
mov
xchg
push
pushf
push
mov
popa
sub
imul
cmp
mov
sbb
push
xor
push
mov
jae
repz
and
stos
js
loopne
inc
or
jmp
jae
ficoml
addr16
gs
mov
cmc
jae
aas
andb
sub
dec
stc
xor
clc
xchg
iret
push
gs
loopne
inc
clc
sti
imul
pusha
test
adc
in
lods
pop
xor
shll
mov
stos
nop
mov
iret
jo
dec
cmp
dec
jge
subl
dec
sub
out
lods
pop
out
int
ja
push
and
xor
in
mov
fucom
xor
push
add
psrlq
mov
adc
or
lret
lret
xor
pop
push
divb
mov
push
fists
ficoml
sbb
and
jnp
test
jecxz
mov
les
int3
or
add
or
lods
insl
jne
add
sarb
mov
cmpsb
jle
dec
pop
inc
inc
les
add
xor
jle
and
enter
inc
fidivrs
outsl
add
lret
or
out
push
add
adc
pop
mov
insb
enter
aam
dec
pushf
xchg
lret
cmpsb
sti
jp
cmpsb
mov
movsb
inc
cmpsl
push
out
xor
or
fwait
dec
mov
push
addr16
stos
dec
mov
adc
sub
mov
mov
adc
sti
sbb
ret
shrb
js
loopne
sbb
aas
and
and
jnp
stos
outsl
or
jmp
nop
andb
jp
sbb
mov
shll
sub
pop
push
or
lcall
or
sub
mov
push
ret
enter
cmp
loop
je
add
sub
and
das
and
in
daa
or
andl
subl
jnp
je
pop
or
test
icebp
inc
sbb
sub
repnz
adc
mov
add
mov
into
mov
lahf
mov
das
pop
insb
das
shll
mov
xor
cmc
loope
and
and
pop
mov
or
orl
mov
mov
addr16
xchg
insl
add
test
sub
pop
xchg
test
cli
add
sub
push
and
sub
sbb
mov
sub
sbb
inc
imul
mov
jmp
fistpl
add
add
fwait
mov
pop
negl
push
pop
or
sbb
mov
push
mov
popf
icebp
mov
cltd
push
pop
sti
pushf
pop
xlat
push
adc
xor
push
jmp
cmpsb
jae
out
push
ret
push
iret
xor
xchg
pop
or
inc
add
ljmp
icebp
mov
insb
xor
cmpsl
movlps
pop
xor
insb
les
pusha
cmpsl
add
add
mov
inc
cmc
dec
movntq
test
sbb
push
xchg
jne
int3
inc
insl
push
aam
and
sbb
add
jl
xchg
std
les
aad
cmp
sub
jne
out
xchg
xchg
call
push
test
stos
add
je
scas
mov
push
add
jl
or
imul
mov
cmp
pop
stos
pushf
xor
xor
inc
add
das
push
test
pop
loope
and
mov
dec
js
pop
mov
iret
scas
idivl
cli
lcall
mov
mov
jb
and
sub
arpl
stos
das
rorb
add
add
fsubs
xchg
mov
out
ret
xchg
lods
cmpsb
jb
loop
mov
dec
aam
push
popa
pop
aam
push
xor
fdivrl
pop
stos
into
fs
mov
sub
or
mov
adc
sub
sti
add
inc
cmpsl
sub
arpl
lahf
aam
divb
mov
and
jmp
loope
pop
jns
jno
push
mov
inc
mov
and
jg
mov
fwait
clc
dec
data16
int3
mov
jno
or
mov
mov
loop
mov
push
lret
nop
cmp
and
add
lret
mov
inc
scas
add
mov
xchg
ja
mov
pop
pushl
or
aam
inc
cld
mov
pop
inc
or
loope
std
repz
pop
cmp
addb
loop
hlt
movsl
ret
lcall
test
aas
add
shlb
out
div
xchg
sbb
xchg
jae
in
pop
test
fsubrl
xor
call
sub
inc
iret
in
dec
imul
stos
inc
mov
xor
cli
mov
fnstsw
fisubs
xor
push
xchg
fwait
leave
lret
push
adc
fsubs
sbb
and
inc
sahf
mov
jae
repz
adc
push
les
xchg
jo
int3
jo
mov
jns
fdivl
cmc
bound
add
or
dec
cmp
dec
lret
lret
fcoml
jno
xchg
mov
cld
or
fs
mov
pop
pop
pushf
jecxz
mov
imul
in
pop
push
xor
mulb
mov
add
cmp
jmp
cwtl
mov
out
or
cwtl
jno
mov
addr16
jmp
cmpsl
xchg
or
xchg
cmp
add
adc
lods
nop
icebp
jle
or
fucom
pop
jge
mov
andb
ljmp
lds
ds
sbb
xor
inc
dec
xor
xor
inc
mov
sub
xor
mov
and
cwtl
insb
imul
popf
inc
clc
jecxz
cmpsl
popa
mov
mov
adc
cmp
enter
xor
fildl
pop
ss
xchg
int
loope
fs
les
mov
ret
inc
sbb
pop
sbb
insl
in
movsb
push
sub
out
or
xchg
push
push
pushf
mov
test
test
sub
fs
rcll
js
and
pop
xor
das
shrb
add
int
and
mov
mov
mov
scas
cmp
or
fdivrl
icebp
adc
inc
out
add
js
ljmp
push
or
or
push
pop
ljmp
cwtl
in
push
daa
fwait
jl
in
dec
movsl
dec
sar
cmpl
loope
jne
mov
mov
xor
or
int
pop
repnz
mov
test
lods
fwait
dec
mov
insb
xchg
pop
movsl
push
lret
pop
sbbb
stos
sub
insl
push
adc
cs
jle
and
xlat
loopne
je
mov
xorb
xor
cmp
lea
lea
inc
mov
dec
mov
in
mov
gs
xchg
add
jl
sub
loope
xchg
roll
popa
rcr
jbe
iret
es
test
aas
lods
daa
xor
and
xchg
mov
insb
movsl
push
int
cli
or
outsb
xor
cmp
sbb
and
xor
dec
subb
push
mov
divl
pop
mov
lea
dec
ficomps
popa
imul
gs
andl
xchg
or
test
pop
inc
cmp
and
cmpsb
repz
inc
mov
stc
jae
mov
arpl
shlb
mov
test
and
popa
cmpsl
cmpsl
sub
adc
rolw
mov
ljmp
lods
sub
arpl
jne
ret
dec
sub
xor
in
mov
jle
jg
shrl
imul
or
test
mov
xor
scas
js
cmp
outsl
dec
add
lahf
mov
push
test
imul
mov
and
pusha
sbb
fldcw
jo
xchg
sub
repnz
cld
adc
shll
fsub
jae
aas
mov
pop
inc
or
jbe
mov
mov
int3
iret
cmc
jp
push
mov
loopne
dec
xchg
lods
je
push
xor
stos
es
push
mov
or
das
sub
pop
sub
xorb
push
cmp
fisubs
or
xor
es
pop
xlat
je
sub
mov
and
dec
push
test
inc
sub
adc
mov
sahf
pop
add
test
mov
movsl
movsb
imulb
jnp
push
dec
jnp
add
mov
mov
xchg
mov
jmp
aam
adc
sbb
adc
pop
mov
fstps
iret
push
fldl
jp
lock
add
loope
mov
pop
mov
test
divb
pop
leave
xor
inc
aad
adc
mov
push
ret
js
push
jnp
push
and
pop
cmc
and
or
cmp
sub
or
lahf
inc
in
xchg
mov
data16
dec
push
inc
imul
inc
pop
dec
mov
scas
hlt
pop
push
int
xchg
cltd
int
arpl
xchg
loopne
dec
xchg
cmp
in
in
xor
cld
pop
stos
dec
repz
mov
loopne
push
mov
daa
adc
in
mov
stc
mov
push
imul
jne
sub
jecxz
cmp
jno
mov
mov
mov
adc
mov
or
mov
ds
js
mov
sbb
lahf
cmpb
xchg
jle
add
jle
movb
out
sbb
or
in
add
inc
lret
jno
cwtl
movsl
stos
loope
pop
mov
xchg
push
sub
data16
xchg
loop
enter
cmpl
repnz
mov
cmp
pop
cmp
push
sbb
push
inc
jne
xchg
lret
test
or
lahf
in
cmp
add
pop
lcall
pop
les
cwtl
ret
test
xchg
hlt
mov
fistl
xor
out
popf
xchg
jno
xor
xor
xlat
inc
sbb
jmp
into
in
pushf
lahf
bound
scas
mov
es
lahf
outsl
inc
xor
iret
sub
fsubs
sahf
sub
xor
sub
ret
ror
pop
dec
pop
mov
je
cmp
pop
pop
adc
shr
push
test
ret
sub
pop
mov
inc
xchg
lahf
sti
dec
out
mov
stos
pop
popf
aas
movsb
lods
pushf
je
jne
js
mov
mov
fbld
mov
rcll
das
pop
stos
shlb
jae
aas
rclb
and
cmpsb
rclb
mov
les
roll
add
push
pop
dec
stos
call
into
adc
enter
mov
mov
ds
pop
push
aas
sbb
popf
or
repnz
cwtl
xchg
popa
cmp
lahf
and
sub
cmpsl
pop
inc
lock
in
add
cmp
lds
lods
lods
xchg
pop
ss
xchg
xorl
mov
push
xchg
out
add
push
mov
movsl
ret
in
adc
xchg
es
xor
and
cmp
fstl
nop
movsb
adc
dec
add
and
lds
notb
popfw
into
loopew
lret
imul
out
test
mov
lahf
and
ja
iret
jnp
aas
testl
out
cmpb
push
mov
andl
push
loop
clc
fisttpl
lret
pop
sahf
sub
xchg
push
les
adc
mov
imul
mov
sbb
imul
and
xchg
mov
sub
rcrl
xchg
fidivl
stos
xchg
jb
cli
push
cli
and
scas
out
sbb
daa
and
fadd
out
push
das
xchg
rorb
xor
jg
test
clc
loop
inc
mov
jl
inc
xchg
mov
cmp
xor
adc
std
dec
xor
mov
clc
test
testb
fs
int3
mov
sahf
pop
aam
aaa
cmp
push
xchg
jle
push
out
pop
fnsave
add
inc
push
repz
movsb
loopne
inc
xor
xor
jae
jnp
sub
mov
lret
xorb
repz
cmp
roll
stc
mov
sbb
push
hlt
movsb
add
std
xchg
sahf
iret
jl
mov
loope
addb
imul
lock
into
jge
ja
movsl
in
fisttpll
test
cmp
in
push
xchg
mov
sbb
dec
mov
in
sub
decb
cmp
sub
sub
sbb
mov
in
sbb
lea
push
dec
and
xchg
xchg
loopne
mov
mov
lea
in
lds
adc
mov
ret
loope
neg
dec
xchg
jmp
enter
dec
cmp
or
clc
jb
pop
ljmp
adc
clc
lss
sub
lcall
pop
push
fcos
inc
xor
clc
std
rcrb
mov
subl
xor
adc
mov
imul
or
xchg
mov
stos
cs
sub
xor
and
push
icebp
push
and
out
insb
lret
pop
or
sbb
fldl
mov
push
mov
cli
popa
lea
in
inc
and
rcll
lea
inc
gs
cmp
push
xor
outsl
inc
pop
aas
push
ljmp
in
arpl
push
mov
sbb
xor
scas
js
push
xchg
sbb
js
sub
adc
push
mov
int3
cmp
ljmp
mov
mov
cmpsl
mov
rolb
setle
out
push
inc
mov
ss
inc
xor
std
xor
xchg
aam
mov
inc
int3
movsb
or
lock
pop
int
push
fucomp
outsb
mov
call
stos
fucomp
mov
call
test
sarl
bnd
hlt
lret
mov
pushf
xchg
add
jmp
sarl
aaa
and
std
jge
pusha
dec
push
out
add
js
aaa
mov
lods
ret
sub
enter
pop
sarb
inc
jecxz
jno
add
fcomip
adc
dec
loop
mov
push
jns
pop
inc
into
clc
xchg
sahf
insb
jnp
sarb
cmp
repnz
mov
in
cmp
cltd
and
shlb
add
out
cmpsb
and
mov
stos
jb
repnz
inc
sti
inc
xchg
mov
mov
iret
cmpsb
outsb
idiv
stc
jne
sub
xor
pop
cltd
daa
in
out
call
or
xorb
addr16
push
cmpsl
in
and
push
cmp
add
aad
in
lods
outsl
test
cmpsb
mov
dec
sub
mov
sub
outsb
lds
and
push
fisubs
int3
shlb
pop
push
mov
ret
les
or
frstor
std
call
in
movsl
xchg
lret
adc
je
test
or
push
lea
lock
mov
cld
jmp
scas
dec
gs
scas
cs
lret
pop
pop
mov
mov
int
pop
mov
adc
mov
jmp
dec
fs
mov
cli
in
add
add
insl
xor
shll
xchg
sub
adcl
gs
mov
jle
fisubs
xchg
pop
inc
stc
adc
and
sub
pushf
sub
mov
jg
dec
pusha
mov
call
dec
push
int3
bound
push
sti
mov
sarl
mov
xchg
xchg
xlat
es
movsb
mov
out
out
pop
mov
add
loopne
sti
inc
sbb
rcll
mov
lcall
in
ljmp
dec
test
jo
daa
aad
add
test
inc
xchg
pop
lods
fucomp
mov
std
out
mov
adcb
popa
lret
rep
cld
int3
add
and
test
mov
lock
in
inc
mov
jge
xor
sub
or
sbb
rcr
out
cli
shlb
aam
mov
adc
mov
fidivrl
cmpsl
mov
jecxz
sti
aas
cltd
in
enter
xchg
xor
incl
inc
sahf
rorb
roll
mov
iret
lret
in
xchg
mov
inc
push
or
jns
and
and
clc
jae
and
outsl
sbb
xchg
cmpsl
mov
cmp
lods
add
lret
jle
jp
btc
rol
movsb
jbe
and
scas
stos
pop
lahf
imul
add
pop
sahf
divb
ret
adc
or
dec
fimuls
mov
add
dec
sbb
movsl
test
divb
sbb
mov
jmp
mov
sbb
fs
xchg
enter
xchg
and
call
mov
lods
sub
inc
or
push
mov
aad
pop
shr
lods
nop
pop
sbb
aaa
mov
xchg
rolb
daa
jne
add
sbb
rcrl
stc
sub
cli
adc
push
js
pop
rcl
jnp
insl
jg
sub
or
cld
mov
sbb
fistpll
rorl
add
sub
add
imul
mov
sahf
sub
in
aad
ljmp
or
adcl
add
and
andl
cmpsl
in
or
pop
ret
loope
push
xor
xor
inc
mov
sub
add
sub
paddd
add
cmp
inc
ret
pop
fwait
push
pop
dec
inc
cmpsl
xor
and
or
imul
mov
rcrb
push
lods
insb
lahf
lods
cltd
ds
lret
shr
into
jp
cmp
adc
cmpsl
outsl
pop
pop
sarb
lods
insb
cld
jg
in
sbb
das
jp
out
out
subb
pop
scas
cmpsb
movsl
jg
mov
insl
mov
sbb
sub
xchg
adc
jo
fistpll
jbe
xor
add
test
mov
repz
push
shrl
lret
lahf
pushl
fnstenv
cmp
jmp
sub
bnd
xlat
cmp
mov
cli
sbb
sub
into
xchg
dec
rclb
stos
push
inc
rolb
mov
aam
mov
fwait
pop
pop
sbb
rcll
sub
mov
mov
xchg
xor
and
mov
out
daa
lods
clc
sbb
push
adc
push
inc
das
movsl
out
push
fs
dec
cmp
fldcw
mov
into
leave
push
xchg
cmc
xchg
lret
xchg
lock
dec
movsl
aam
push
mov
jecxz
mov
adc
test
mov
ja
xlat
mov
test
test
fidivrs
popa
bound
hlt
mov
sahf
pop
pop
cld
cmp
in
cmp
xchg
mov
push
xchg
sub
insb
or
test
popf
xchg
jecxz
mov
fistl
repz
and
idivb
fimull
xor
jl
rcrl
popa
sbbb
jne
sarb
and
mov
mov
xchg
mov
lods
test
test
or
lret
int
jae
push
xchg
push
fcoml
pop
jmp
insl
iret
pushf
ret
add
cmp
or
stos
arpl
psrlw
ljmp
stos
ds
adc
bound
ja
pop
sbb
sub
cmp
cmp
jl
addr16
popf
dec
sti
ret
mov
loop
rclb
test
sub
imul
rolb
imul
aam
cmp
mov
push
and
pop
cmp
mov
xor
aaa
daa
mov
lods
cli
sti
sub
adc
xor
sbb
pop
imul
in
xchg
shl
inc
repnz
ss
mov
shl
inc
push
daa
sub
jmp
repz
sub
adc
in
popa
or
or
xchg
mov
or
stos
arpl
mov
pushl
iret
clc
push
lods
pop
in
lock
sub
pop
jns
outsb
aad
aas
inc
xlat
xchg
adc
sarl
gs
xor
je
adc
in
mov
jb
ficoml
xchg
fxch
in
lods
adc
sub
pop
inc
inc
popf
inc
stos
pop
and
mov
ljmp
mov
lret
cwtl
xor
pop
mov
dec
sbb
jecxz
sub
adc
jle
or
outsb
outsb
loopne
sahf
insl
jle
pusha
in
popf
xchg
ja
popf
inc
mov
and
sub
stc
fldt
ja
scas
movl
scas
cwtl
xchg
mov
jle
test
hlt
shlb
add
add
xchg
rclb
lods
mov
mov
sti
data16
push
out
sub
xchg
jae
mov
hlt
sahf
mov
mov
pop
mov
sbb
lods
inc
push
mov
je
cmpsb
mov
inc
or
lods
das
aad
jmp
cmc
jmp
mov
fsubrl
test
test
push
imul
xor
push
sti
jp
icebp
fistps
xchg
cli
push
stos
rclb
es
and
inc
into
fnstenv
je
imul
fcmovu
lods
test
mov
inc
xchg
adc
inc
adc
mov
arpl
inc
movsl
pop
scas
jb
cmc
xor
cltd
mov
jmp
push
jmp
scas
or
xor
leave
jp
imul
sub
pop
jmp
ret
nop
mov
mov
mov
push
add
ljmp
popf
test
xchg
xchg
xchg
mov
dec
popa
jl
inc
punpckhwd
ss
inc
jmp
adc
nop
dec
sbb
cmpl
or
ret
xchg
arpl
lods
lods
je
jl
pop
sbb
lahf
pusha
loop
rorl
out
std
cmp
insl
test
hlt
popa
and
sbb
shrb
adc
rolb
repnz
cli
call
xorl
push
cli
inc
shll
mov
int
in
loop
ss
js
cmpsl
push
or
jl
and
in
xchg
push
pop
sbb
push
mov
adc
outsl
lea
in
sbb
cwtl
mov
inc
mov
mov
cld
imul
ljmp
lahf
add
sub
cmp
pushf
mov
test
rcrl
leave
inc
lret
jmp
test
mov
popf
filds
shrb
out
out
inc
cmc
out
mov
dec
push
xchg
and
pop
aam
jg
scas
pop
inc
clc
and
mov
pop
pop
js
out
cs
pop
push
add
cmc
es
imul
movsl
mov
in
dec
and
pop
pop
pop
insb
push
adc
gs
or
dec
je
pop
xchg
xchg
in
outsl
mov
add
inc
in
lea
movsl
mov
andb
mov
fs
out
je
xchg
ljmp
in
call
sti
orl
out
dec
int3
sahf
jbe
sbb
aaa
addb
sbb
adc
xor
and
scas
adc
lods
adcb
outsb
push
pop
cmc
cmpsl
push
sub
sbb
jle
outsl
pop
and
lret
dec
add
flds
out
cltd
mov
in
push
adc
mov
pushf
pop
cld
das
cmp
fdivrs
jge
or
loop
scas
dec
lds
pop
hlt
jg
mov
lahf
push
leave
push
lock
cs
jp
and
cmp
int
pop
xchg
movsb
push
push
and
lret
pop
cmp
fwait
std
sub
mov
icebp
in
xlat
outsl
pop
jnp
inc
mov
xchg
and
cld
fists
imul
lea
shll
mov
mov
fwait
sub
pop
cmpsl
mov
pushf
cmp
xlat
adc
inc
loope
sbb
xor
add
loop
jne
cli
push
les
cld
jge
ficoml
iret
lods
lods
push
dec
sub
mov
cli
sub
pop
mov
pushl
or
into
aad
lock
xchg
lret
and
mov
or
xor
dec
lods
add
aaa
sub
push
xor
clc
movsl
push
xchg
into
ror
jo
push
mov
sbb
sbb
jb
mov
and
jno
hlt
pop
pop
push
dec
dec
lret
data16
sbb
push
mov
fcoms
insl
scas
pop
cwtl
int3
xorb
mov
or
scas
mov
lahf
push
out
movsl
add
inc
inc
sbb
sub
mov
dec
rcrb
jno
sbb
pop
leave
inc
movsb
lock
je
out
and
clc
sbb
out
lods
mov
xor
lret
mov
pop
cmp
pop
cmpsb
dec
push
push
xchg
loopne
js
sub
pop
xchg
mov
pop
icebp
pop
mov
jl
push
and
sbb
xorl
scas
adc
sub
popf
rcrb
mov
lahf
jp
nop
cmp
in
xor
adc
dec
loopne
sbb
dec
fisubrl
ljmp
mov
adc
testl
loopne
sbb
testb
insb
sbb
pop
cmpl
in
sub
jb
out
fs
test
insl
pop
movsl
sbb
cmp
in
out
push
mov
lcall
dec
mov
shlb
sbb
cltd
or
int
push
test
pop
cmp
iret
xor
cmpsl
icebp
jo
push
and
out
pop
movsl
cwtl
in
sub
add
fildl
cmp
stos
rcrb
loope
pop
xchg
and
stc
adc
in
stos
daa
cmpsb
inc
mov
popf
gs
pop
xchg
push
outsb
sub
test
pop
dec
mov
aad
push
loop
stc
imul
pusha
xor
pop
lods
mov
aad
mov
inc
lock
fists
test
mov
mov
cmc
fwait
cld
xchg
movsb
ja
and
sbb
jnp
mov
jecxz
bound
xor
mov
sahf
cld
sbb
or
pop
cmp
sbb
insl
mov
or
lea
pop
mov
jmp
iret
mov
fisubl
mov
push
lods
push
js
cmc
mov
sbb
xor
idivb
in
test
adc
pop
inc
pop
lcall
loope
outsb
data16
stos
push
pop
inc
ret
shll
in
ret
lods
data16
sarb
add
adc
mov
jmp
outsb
dec
xchg
adc
sbb
in
add
cmc
adc
cltd
sbb
stos
sbb
in
ss
loopne
iret
adc
popa
xchg
popa
iret
pop
in
test
and
xchg
out
xorb
sub
out
repz
cltd
cwtl
push
and
arpl
fcoms
ficomps
jnp
dec
cmp
mov
dec
addr16
pop
insb
cwtl
shlb
mov
pop
out
jg
and
repnz
jle
jne
ja
insb
sub
mov
ja
or
dec
out
xchg
movsl
lret
pop
mov
mov
cmp
clc
or
mov
xchg
das
call
sub
and
add
repz
popa
inc
or
pop
or
lcall
aad
imul
xchg
push
mov
aam
movsb
push
repnz
rol
pop
or
lcall
push
push
or
cmp
lret
sub
lret
call
pop
shlb
out
push
pop
ret
loope
outsl
inc
inc
inc
mov
push
out
inc
sbb
les
xor
cmpsl
mov
jl
in
ss
pop
and
jg
addr16
adc
pop
std
sbb
cli
pop
jp
pop
sbb
adcl
punpckhdq
test
test
xchg
pushf
jbe
flds
insb
push
mov
mov
fs
sbb
sbb
mov
sub
add
adc
mov
cmc
inc
lret
jno
inc
pop
fcoms
fdivp
cld
or
clc
notb
fsubs
xor
push
andl
cwtl
xor
or
xchg
imul
and
test
rorb
daa
sub
mov
and
adc
ds
dec
shl
mov
adc
lods
jnp
push
adc
jle
fisubrl
adc
push
push
lcall
jecxz
mov
jp
cmc
fdivrp
push
or
sbb
mov
pop
mov
movsl
aad
pushf
adc
mov
mov
adc
adc
movsl
xchg
fmuls
jl
fcmovnbe
sub
je
mov
mov
mov
push
mov
aas
pop
rcrb
mov
lock
out
lret
pop
fnsave
push
push
pop
mov
xor
pop
bound
mov
outsb
daa
or
jb
pop
lods
sub
xchg
push
dec
stc
insl
and
xchg
or
imul
inc
xor
xor
adc
lret
out
mov
in
iret
sbb
sbb
cmc
inc
lahf
dec
pop
jl
idivb
mov
cmpsl
sub
in
daa
pop
icebp
jmp
jbe
mov
or
loopne
sbb
cmc
xor
mov
stc
push
push
sbb
jmp
or
or
cltd
push
mov
js
jae
repz
ds
rolb
cmc
pushf
jle
add
pushf
lahf
mov
loop
push
call
pop
jb
push
in
aam
jecxz
das
xlat
out
xor
je
icebp
fmul
ss
je
das
push
push
add
outsl
jb
jae
leave
roll
lcall
xchg
and
cmpsl
sub
add
test
sbb
loope
inc
fldenv
in
cmp
std
or
lods
xchg
and
bound
ss
add
lds
je
push
rcll
leave
push
or
hlt
ja
outsb
push
push
push
lahf
cmp
jb
sub
push
dec
cmpsl
daa
adc
dec
jne
je
test
jbe
rcll
fnstenv
aad
pop
or
clc
movsb
sbbl
lods
in
push
and
cs
push
popf
mov
xchg
ljmp
pop
mov
scas
mov
sbb
sub
movsl
or
sub
stos
dec
arpl
hlt
out
stos
jp
leave
xor
pusha
adc
and
pushf
sbb
xor
mov
mov
fwait
dec
movhps
sbb
aas
cmpsb
mov
inc
inc
pop
mov
lods
cld
test
sbb
notl
repz
loop
cli
ja
xchg
mov
xchg
insb
cltd
cltd
lock
mov
mov
or
stos
sub
daa
je
add
cmp
and
lock
xchg
pop
cmp
mov
sbb
xchg
sahf
sbb
adc
mov
ljmp
leave
arpl
xchg
pop
outsl
mov
enter
mov
ret
ficoml
jno
inc
das
inc
add
dec
scas
cmpsb
out
pop
ja
in
fmull
emms
lds
sbb
sbb
daa
cli
negl
fwait
jns
int
in
mov
dec
inc
hlt
jecxz
imul
popf
stos
inc
es
test
cmp
xchg
push
mov
and
mov
jnp
test
and
or
aam
lret
scas
cmc
in
jbe
mov
cmp
and
jle
mov
or
rcl
ffreep
sub
imul
sti
pushf
jecxz
cmp
cmp
cltd
adc
jo
arpl
and
sti
movsl
cli
popf
in
rclb
or
xchg
jbe
rcrb
add
mov
sbbb
ljmp
sub
cli
jns
in
jmp
cmp
jbe
lret
inc
out
mov
divb
or
xor
mov
add
ret
addr16
jle
cmpb
push
pop
imul
sarl
sahf
rcrl
ficoms
pop
movsl
push
rorl
movsb
fwait
scas
cmc
xor
xor
fisubs
sbb
or
inc
xlat
int3
aas
push
enter
arpl
sbb
inc
push
movsl
inc
je
xor
push
popa
add
scas
mov
pop
or
sbb
andl
sub
clc
fidivl
xor
enter
and
fucomi
mov
sbb
je
lods
roll
mov
adc
push
nop
test
push
mov
repz
shll
cmp
subl
aad
jb
shrb
xor
push
ficompl
dec
pop
push
outsb
aad
sbb
fnstcw
cs
movl
jb
adc
mov
add
dec
addr16
ss
les
scas
pop
imul
add
out
add
pop
push
shr
push
roll
push
ret
jl
cmp
inc
ljmp
inc
js
je
imul
push
sbb
pop
xor
pop
cwtl
ja
jo
sti
mov
ds
enter
mov
and
xor
push
and
mov
cmp
fcmovu
mov
test
jmp
int
sub
inc
adc
ds
adc
dec
cltd
fimull
pop
pop
clc
out
gs
xchg
jns
pop
cli
aaa
mov
into
clc
rcll
add
enter
push
jne
in
and
into
mov
subl
sbb
push
push
out
repnz
std
jns
iret
pusha
sub
mov
mov
outsb
mov
clts
xor
mov
out
pushf
mov
and
inc
cwtl
add
sbb
mov
mov
dec
faddp
int3
push
xchg
add
add
push
mov
and
cs
push
xor
mov
xchg
mov
ljmp
sbb
mov
mov
repnz
inc
dec
xchg
pop
movsb
leave
sbb
sbb
testb
and
cmp
int
ret
dec
dec
shlb
push
das
pop
fisubrs
movsb
sbb
adc
sub
scas
cltd
adc
lds
daa
iret
sbb
fidivrs
mov
sbb
cmp
push
js
fwait
aaa
inc
test
in
call
adc
shrl
cmp
jno
pop
xchg
dec
push
lods
pop
mov
daa
jge
xor
dec
cmp
jo
cmp
mov
jge
mov
jns
push
and
push
inc
add
xchg
js
sub
mov
test
push
jg
adc
stos
shll
push
insl
dec
dec
xchg
aas
xor
xor
xor
sbb
daa
jg
lds
mov
lods
aam
or
dec
je
fbld
or
inc
push
ret
mov
xlat
sbb
cli
mov
loopne
hlt
enter
pop
test
and
cs
std
lsl
inc
data16
sub
aad
ret
pusha
repnz
mov
popf
fimull
adc
pop
sub
leave
jnp
xchg
shlb
jmp
mov
je
fucom
ret
sub
shrl
adc
jecxz
xor
ja
mov
addr16
or
and
pop
xchg
pop
sub
pop
push
xchg
adc
jnp
rolb
adc
xlat
mov
in
cs
jp
popa
adc
call
and
push
mov
cmp
or
pushf
std
mov
inc
scas
or
loop
andl
sbb
xchg
cs
mov
and
mov
add
arpl
out
jg
leave
shll
jnp
psrlq
lea
xchg
in
pop
out
mov
and
scas
or
icebp
std
test
jecxz
movsb
mov
rcrl
imul
scas
mov
ss
bound
push
cmpl
mov
cmc
sub
jge
mov
jo
cmc
push
jmp
push
adcl
int
push
mov
enter
or
jne
call
push
loope
jle
fdivrs
dec
jp
add
push
repnz
loopne
xchg
fdiv
push
lahf
dec
popf
mov
pop
sarl
hlt
cltd
add
movsb
adc
cmpsl
and
mov
mov
test
sub
pop
or
mov
add
gs
addb
or
fcompl
iret
xor
mov
push
jne
fcoml
or
pop
out
dec
and
inc
mov
mov
daa
sbb
and
jmp
mov
daa
test
cltd
mov
mov
lret
lcall
cmpsl
xchg
xor
jne
and
rcl
cld
scas
mov
imul
lock
sub
inc
push
movsl
loopne
test
xor
push
pop
mov
mov
fcmove
push
cmp
popa
pop
jne
adc
or
add
adc
rorb
lret
jl
pushf
insb
mov
out
cmc
inc
adc
jno
push
lods
out
sub
rcrl
jmp
jo
jp
in
aad
xchg
jg
setge
je
popa
scas
or
xor
inc
mov
aad
leave
ret
push
dec
repz
lret
das
rorb
or
icebp
loop
out
dec
mov
lods
cmpsl
out
push
dec
mov
pop
gs
jmp
sti
pop
js
or
test
push
adc
stc
pop
aam
mov
out
or
pop
fstl
xchg
mov
inc
mov
enter
cmp
mov
popf
aas
push
inc
ja
pushf
vcomisd
clc
and
sbb
jo
in
sahf
addb
cs
stc
pop
cs
lock
aas
aaa
lock
cli
sub
dec
fdivs
or
sub
jg
stc
daa
adc
xchg
int3
sub
fiaddl
mov
inc
adc
js
ja
inc
pop
leave
shll
icebp
pop
aaa
lods
out
popa
and
movsb
mov
aad
sub
loop
addl
push
or
daa
imul
adc
jne
xchg
addr16
mul
jecxz
or
scas
into
mov
sbb
or
adc
and
das
das
xchg
movsb
add
cmpsb
jl
sub
clc
or
pop
add
sahf
outsb
mov
test
mov
mov
sbb
jno
call
jnp
jle
cwtl
arpl
sti
ret
cmpsb
xchg
fwait
push
and
or
inc
dec
mov
lock
inc
pop
inc
pop
sahf
out
inc
and
repnz
ss
hlt
or
ret
testl
inc
and
aad
stc
test
pop
mov
out
ret
pop
subl
mov
lahf
cmp
push
xor
mov
jge
test
inc
ljmp
je
nop
jle
xor
sub
add
jnp
fwait
cwtl
cmpsb
pop
pop
les
lret
mov
jno
adcl
fxch
jne
jae
fsts
mov
ds
insb
push
mov
xor
push
push
pusha
or
js
add
push
xor
aaa
mov
in
mov
push
xlat
and
ljmp
sti
stc
jl
jl
xor
in
fs
repnz
lcall
stos
rcr
in
push
dec
adc
mov
adc
bound
mov
mov
pop
mov
sub
cli
jbe
pusha
sbb
rcr
mov
popf
ror
jno
ljmp
ljmp
inc
sbb
insb
mov
sahf
lods
les
in
jns
and
cld
call
lods
mov
mov
scas
clc
es
into
sbb
xchg
loop
dec
stos
and
ds
mov
insl
aaa
aam
cmpb
pop
dec
inc
xor
mov
xor
jno
mov
inc
dec
or
pop
insl
xor
xor
lds
stos
fadds
push
test
ljmp
cmp
roll
sbb
jns
std
inc
nop
pop
add
enter
mov
inc
xor
dec
push
inc
cli
inc
imul
sub
mov
dec
adc
and
adc
jge
aam
lcall
ss
add
leave
mov
xor
in
pop
iret
in
outsb
divb
mov
pop
ljmp
fimuls
or
xlat
push
or
mov
fstl
fwait
sahf
in
or
fildl
xorb
sub
gs
out
insb
subl
push
sbb
add
push
lret
mov
popf
pop
pop
cmc
out
sbb
push
jb
xor
ret
pop
out
or
scas
inc
xor
add
cmp
add
push
inc
lea
pop
dec
fs
outsl
sbb
push
out
imul
pop
outsl
mov
add
pop
aad
push
ds
nop
fiaddl
fcomps
lods
pop
loope
sbb
dec
mov
add
or
cmpsb
pop
jno
mov
loop
add
ss
dec
nop
sti
aaa
ds
sbb
fs
andl
xor
mov
add
into
sub
cli
sbb
scas
or
in
mov
dec
jbe
sub
inc
clc
cltd
pop
jge
fadds
mov
ss
cmp
pop
mov
inc
push
in
sbbb
cmp
pop
mov
pop
mov
mov
cmpsl
pop
jb
in
imul
mov
sub
fnstsw
xchg
mov
mov
icebp
mov
mov
mov
fldenv
aas
sub
cmp
jecxz
adc
push
hlt
or
push
incb
dec
mov
xchg
push
jae
push
push
mov
mov
jecxz
leave
shll
push
mov
inc
adc
dec
adc
push
int
sti
dec
lds
or
xor
inc
push
stos
inc
sub
jno
mov
rorb
jae
sbb
mov
loope
out
mov
cld
xor
sbb
hlt
clc
add
lods
in
push
cmpsb
cmpsb
aas
movsl
rcll
push
push
lret
addb
xchg
add
lock
sbb
ss
gs
loop
sbb
lret
pop
stc
movsb
push
mov
mov
mov
fcmovbe
in
xchg
inc
or
loope
sub
test
adc
outsb
arpl
sahf
icebp
imul
xor
push
push
and
inc
js
out
mov
sub
outsl
in
out
arpl
sbbl
xchg
aas
push
jg
mov
jns
pop
xorb
fcoml
pop
jl
sbb
sahf
fcmovnu
and
enter
push
mov
loop
pop
imul
mov
aaa
xchg
ret
xchg
bnd
push
rcl
mov
ficompl
ss
xchg
outsb
pop
pusha
dec
mov
das
cmp
test
jp
adc
es
push
mov
dec
les
cltd
mov
fwait
jg
enter
jecxz
add
mov
fidivs
sub
cs
push
mov
xlat
and
mov
movsb
xchg
mov
gs
or
or
imul
mov
add
add
adc
cmove
icebp
out
das
fs
loop
in
es
mov
push
adc
in
mov
orl
push
push
sub
jbe
call
sbb
jbe
push
jae
cmp
je
pop
mov
xor
mov
sub
cmpsb
dec
xchg
adc
decl
hlt
es
int
push
jmp
outsl
mov
aas
jno
fs
sarb
mov
inc
stos
adc
insb
dec
push
ljmp
and
push
or
adc
pushf
xchg
insl
fists
dec
cmp
jecxz
sub
ja
mov
dec
aaa
nop
adc
repnz
mov
lcall
cmc
mov
sub
lcall
addr16
pop
clc
mov
jb
push
ret
daa
pop
filds
and
sbb
std
bound
cmp
ror
stc
add
outsb
adc
int3
dec
mov
mov
loop
dec
bound
jge
and
out
adc
sbb
cmpsb
leave
push
cmc
push
sbb
xchg
adc
push
bound
into
imul
shl
icebp
fidivrl
add
jns
jle
loope
out
mulps
cmp
jle
loop
aam
fwait
jg
jecxz
xchg
mov
xchg
push
hlt
sar
sbb
sti
addr16
push
jb
or
stos
in
stos
or
ret
adc
adcl
mov
call
iret
cs
fsts
pop
jecxz
add
push
in
cmp
jp
aad
dec
pop
mov
and
push
lock
es
outsl
fisubs
xchg
lret
aas
je
imul
arpl
jb
bswap
pushf
out
or
mov
stos
test
jbe
sub
inc
mov
ljmp
cltd
jmp
xlat
lds
xor
orl
shrb
push
pusha
xor
add
test
icebp
lods
and
hlt
sbb
sub
insb
test
push
push
lock
data16
fstpt
dec
insb
cmp
shl
or
push
lret
and
xchg
dec
pop
push
pop
dec
sbb
mov
or
cmpsw
cmp
flds
jl
jb
into
mov
or
push
lret
jmp
mov
sbb
inc
dec
pop
sbb
push
clc
popa
cmp
leave
shll
pop
adc
dec
nop
inc
hlt
iret
xchg
insb
push
adc
jg
mov
dec
hlt
movsb
mov
shrb
fs
loopne
pop
fildll
sub
data16
xor
mov
or
stos
out
movl
aaa
fimuls
out
lock
pusha
jge
adc
adc
xor
in
fcompl
cltd
or
or
je
or
mov
es
xchg
lods
aas
adc
fistl
mov
pop
pop
push
hlt
mov
xchg
adc
mov
mov
es
mov
testb
mov
jg
mov
xchg
inc
xchg
jae
pop
mov
jp
mov
cmp
out
pop
xorb
add
jbe
int
xchg
cmp
mov
icebp
lret
aas
adcl
popf
stc
fistps
pop
mov
dec
add
loopne
adc
loopne
xchg
dec
shll
mov
xchg
add
fs
mov
and
and
cmc
mov
push
loopne
jno,pn
mov
hlt
mov
lock
iret
push
xor
pop
and
pusha
cmpsb
pop
mov
rcll
pop
mov
pusha
scas
lea
addl
pop
push
dec
popf
cltd
aas
pop
mov
dec
mov
ret
jge
or
pop
xchg
hlt
jge
addr16
lret
mov
jmp
repnz
ret
orl
pop
aaa
jg
inc
adc
ds
bound
mov
mov
xchg
lods
les
mov
nop
xchg
out
sahf
insl
or
arpl
cmc
mov
adc
out
xor
and
repz
mov
rcr
mov
pusha
fdivrs
and
jmp
pop
xor
add
insl
mov
mov
ds
sbb
jmp
push
and
adc
xor
pusha
lret
inc
jmp
fsubrs
addl
jg
cmp
in
arpl
bts
frstor
sbb
out
jo
add
xchg
inc
out
xor
lods
or
mov
cmpl
lcall
iret
pop
jg
int
adcl
sub
dec
fidivrs
xchg
add
push
lock
push
subb
sbb
fcomp
xor
sub
pop
cmc
mov
daa
dec
leave
js
fnstenv
cmpsb
mov
pop
out
push
sub
aaa
mov
push
inc
sahf
rolb
xor
cmp
xorb
adc
out
push
sbb
clc
je
and
cmp
pop
adc
repnz
fistpll
mov
cmpsb
mul
pop
addl
shll
dec
push
mov
imul
sbbb
movsb
insb
and
pop
lods
fs
stos
xor
movsl
test
or
inc
in
mov
test
xchg
xor
adc
mov
subb
stos
loopne
adc
aad
mov
xchg
jp
aam
cmc
sbb
jne
cmp
jl
and
inc
xchg
mov
cmp
or
mov
repnz
mov
cmp
scas
test
loop
or
xor
out
xchg
sbb
or
mov
pusha
lds
mov
hlt
fisttpl
mov
xchg
in
and
js
lahf
mov
adcl
stos
push
andnps
arpl
mov
dec
jecxz
push
test
in
mov
push
and
pop
push
add
mov
sbb
adc
xchg
repnz
adc
fcompl
sbb
into
ja
xchg
xchg
adc
rcrl
inc
cli
fnstcw
pop
rcrb
ljmp
ljmp
out
fcoml
in
adc
movsb
out
pop
sub
jo
lcall
andl
add
push
or
xchg
xor
popf
inc
stos
dec
or
mov
and
les
shrb
jnp
cmp
dec
lret
pusha
xlat
mov
movl
sbb
cmp
insl
insl
hlt
and
test
inc
cmp
cmp
add
xchg
mov
adc
shll
mov
pop
adc
jg
lods
pushf
scas
adc
and
mov
pop
xchg
pop
and
cmc
or
outsb
jecxz
jmp
je
jns
mov
loop
sbb
sbb
mov
inc
imul
sbb
repz
mov
and
mov
mov
xlat
pop
icebp
out
xchg
pop
fwait
sti
aad
inc
and
arpl
rolb
lea
dec
popa
ss
jmp
xor
outsb
sbb
push
push
test
les
addb
or
test
in
adcb
sub
mov
add
popf
pusha
push
xchg
cmp
sbb
xchg
nop
pushf
loope
pop
popa
push
movsl
popf
popa
push
mov
shl
lods
ficoms
xor
cmp
mov
xchg
pop
and
sbb
sub
pop
ss
sbb
ja
dec
shll
repz
movsb
lods
cmp
pop
push
jge
jg
or
outsl
cmp
jb
pop
scas
lock
or
inc
and
mov
mov
int
mov
lock
xor
mov
not
dec
xchg
fwait
sub
mov
and
pop
imul
mov
dec
lds
cmp
jno
cld
cmp
shll
js
pusha
pop
das
dec
and
shrb
test
push
rcr
push
pop
subb
addl
and
fstpl
mov
sbb
pop
inc
test
sbb
fidivl
nop
and
cmpsb
lods
pop
or
outsb
and
cmp
lds
pop
lods
fimuls
dec
cmpsb
cmp
mov
imul
push
fucomp
push
xchg
ret
scas
add
int3
adc
mov
xchg
xor
sub
in
cmp
jg
aam
rep
cmpsl
mov
mov
fucom
nop
add
pop
cmpsb
adc
jge
outsb
sub
xchg
mov
cmpsl
movsl
pusha
mov
rcrl
jns
cmp
test
sub
and
adc
int
add
nop
enter
sbb
data16
data16
mov
mov
dec
cmp
push
arpl
pop
cltd
push
fmull
xchg
shlb
mov
pushf
fsubrl
lret
mov
mov
add
jae
jne
mov
pshufw
cmpsb
shrl
mov
fisubrl
aad
ror
in
clc
jnp
inc
in
pop
push
sub
imulb
add
fiadds
loopne
loop
lock
out
aaa
inc
arpl
fisubs
pop
lods
add
mov
lods
mov
sbb
repnz
adc
fwait
adc
adc
pop
subb
sbb
adc
inc
dec
jg
inc
and
or
enter
scas
negb
fists
imul
jecxz
mov
ret
aad
or
fistps
push
cmpl
popf
rcll
jnp
xchg
mov
adc
xor
xor
and
test
sbb
adc
std
mov
inc
mov
push
xchg
xchg
or
or
scas
cld
in
jns
dec
push
loope
and
mov
add
xchg
inc
sbb
ret
sbbb
pushf
aad
push
arpl
fcoms
and
add
ljmp
push
cli
inc
inc
ret
xchg
aad
mov
imul
mov
repnz
sbb
xchg
sub
add
pop
sub
pusha
aad
shrb
lock
inc
inc
repz
mov
ret
insl
sbb
xor
fnsave
inc
movsb
jb
movsb
fmull
and
pop
mov
pop
in
sbb
jne
push
mov
into
cltd
xchg
inc
fwait
pop
data16
pop
rcrb
push
sbb
jle
cmp
xchg
lods
mov
adc
pop
jp
dec
shlb
push
cmp
aad
cmp
lds
outsb
push
dec
lea
xchg
and
cmpb
mov
rcrl
push
hlt
pop
cltd
xor
repnz
cmp
js
roll
lret
sub
dec
or
sub
dec
xchg
dec
cwtl
test
int
sbb
data16
dec
hlt
xchg
pop
leave
push
mov
js
popa
bnd
pop
cs
sbb
mov
rorl
test
popf
push
mov
cmp
dec
cwtl
dec
cmpsl
fsubrl
push
inc
fwait
leave
out
test
and
sahf
test
mov
mov
pop
jne
inc
sbb
cmp
sbb
xchg
fsts
cmp
mov
mov
mov
xchg
pop
xor
pop
insl
or
es
mov
sahf
fisubrl
mov
push
xchg
bound
jecxz
repz
mov
cmpsb
push
movb
adc
xor
pop
cwtl
movsb
jno
ret
pop
test
fs
xor
into
mov
mov
ret
outsb
mov
andl
or
mov
pusha
pop
test
lret
inc
mov
or
xchg
dec
xchg
nop
dec
sbb
pop
lahf
or
fcoml
push
ja
push
push
pop
dec
cmpb
and
into
sbb
adc
fdivs
cmp
fcomps
inc
rolb
cmpb
inc
push
and
rep
filds
push
fdivrl
xor
inc
pop
mov
call
negl
mov
cmp
dec
adc
xlat
pop
dec
notb
imulb
addr16
sub
mov
into
sbb
lea
outsb
int3
arpl
xlat
jb
mov
loop
cli
int
insb
pop
fwait
jo
cmp
xchg
xchg
cmp
push
shl
in
adc
xorb
insb
add
mov
test
pop
sbb
shlb
xchg
inc
notrack
js
sahf
ret
nop
ja
fwait
jns
adc
and
xchg
jmp
pop
mov
ds
add
jg
insl
mov
out
sub
cmp
fcoml
cwtl
jle
mov
icebp
and
jns
js
sahf
jno
nop
add
int3
push
lret
push
bsf
push
jle
test
dec
jmp
rorl
data16
adc
shlb
inc
ds
fisttpll
cmc
test
dec
lahf
sub
jo
loopne
push
xchg
mov
or
jecxz
data16
fs
bound
adc
sub
loop
xchg
decl
cwtl
cs
inc
or
aas
fiadds
lods
popf
cmc
push
sbb
sub
cmpsl
scas
jno
repnz
xor
and
ja
add
ficompl
push
incl
sub
dec
xchg
jnp,pn
xchg
xor
pop
shll
xchg
daa
and
xchg
xchg
repnz
divb
fstp
inc
aaa
sbb
enter
pop
arpl
mov
in
inc
sbb
xor
call
and
adc
loop
bound
inc
mov
mov
mov
lock
lahf
mov
and
sub
fistpll
adc
lds
mov
inc
ds
inc
cli
cli
into
push
adc
pusha
inc
xchg
inc
ret
loopne
adc
dec
inc
xchg
popa
mov
mov
adc
xchg
aaa
mul
push
dec
rcr
xchg
inc
xchg
pop
sahf
jmp
add
lods
inc
mov
xchg
rol
mov
push
mov
call
cmpsl
jae
xchg
push
jmp
pop
sub
sub
sarb
movsl
inc
xchg
stos
imul
adcl
fwait
imul
inc
repnz
inc
sub
fimull
fnstenv
xchg
pop
mov
daa
imul
ficomps
or
and
sahf
and
test
movsb
cvtdq2ps
fisttps
dec
movsb
int3
repnz
mov
lods
push
sub
or
inc
sbb
repz
sbbb
push
dec
inc
lds
mov
je
sbb
xchg
inc
jns
inc
mov
sub
das
sbb
xchg
insb
ret
xchg
sarl
imul
xor
xlat
inc
call
cmp
stos
jb
loop
gs
jl
xchg
pop
adc
mov
xor
fists
pop
mov
sbb
pop
xor
mov
icebp
inc
mov
or
cli
scas
std
ds
movsl
jl
xchg
and
popa
xor
xor
ljmp
adc
xchg
loopne
cmp
adc
fcoml
dec
cs
mov
mov
lods
push
sbb
sub
pusha
mov
jge
pop
cli
aad
test
stc
rcl
subb
aas
and
ja
xchg
cmp
repz
call
mov
pop
sahf
inc
pop
cmp
idivl
ss
sarl
cltd
add
pusha
mov
imul
cmp
jae
xor
lret
movsl
rol
mov
mov
pop
add
mov
xor
dec
sti
jo
out
std
add
clc
mov
mov
or
mov
pushf
out
lret
leave
mov
jle
mov
cmpb
mulb
fbld
insl
ljmp
and
cs
orb
mov
mov
sbb
lea
mov
movsb
push
in
add
mov
or
add
dec
push
scas
cld
cmpsb
sti
gs
test
xchg
subl
push
mov
mov
mov
dec
fcoms
fistpl
leave
and
sbb
int
push
pusha
add
mov
pushf
cmp
rcrl
icebp
mov
loope
mov
fisubs
mov
popa
push
mov
das
push
or
mov
pop
mov
mov
mov
lods
lods
repnz
les
xor
es
lcall
leave
je
cli
jge
hlt
loop
sahf
ds
int
pop
add
ret
sbb
mov
cs
dec
adc
xorl
xchg
xlat
mov
stos
fisubrs
lahf
or
hlt
popf
or
mov
or
inc
pop
in
mov
pushf
sarb
add
pop
cmp
xchg
pop
inc
fdivrl
push
mov
or
push
dec
pop
pop
and
pop
push
inc
adc
dec
xchg
into
scas
dec
push
pop
mov
into
add
imul
sbb
jae
ffree
sbb
rsm
lds
xchg
jmp
push
in
mov
imul
or
insl
in
adc
std
mov
mov
pop
aaa
xor
add
sbb
notl
jmp
xor
or
sbb
add
and
out
rorl
inc
xchg
inc
or
cwtl
adc
push
xorb
out
xchg
dec
stc
pushf
loop
jmp
adc
mov
pushf
mov
mov
cwtl
in
cli
gs
in
out
ret
shrl
mov
dec
mov
repnz
outsl
add
imul
mov
xchg
mov
mov
xor
push
sub
push
mov
xchg
imul
push
jge
or
jl
in
push
push
xchg
pop
fsubrs
sti
sub
addr16
popf
iret
ret
pop
jecxz
sbb
fcmovne
rclb
jmp
inc
in
sti
fimull
adc
xchg
cmp
add
push
fwait
cld
cmpsb
pop
bound
add
xor
pop
mov
sbb
dec
in
push
arpl
and
push
leave
dec
sbb
lods
dec
popa
jg
pop
add
mov
int
inc
mov
xchg
sarb
dec
fmul
shlb
xor
lods
jns
pop
adc
lret
scas
fmuls
pop
test
inc
pop
xor
or
sbb
push
add
loop
std
les
ffreep
lret
lea
mov
aam
push
gs
cmpb
jg
inc
and
sub
cmpsb
push
mov
clc
aad
imul
aad
jmp
fsubs
xchg
jmp
jecxz
sarb
inc
cltd
stc
aas
incl
dec
jp
jg
cmp
mov
mov
cmpsl
rcll
xchg
ret
sti
test
jo
idivb
divl
cltd
adc
in
adc
out
dec
jne
fwait
push
div
movsl
call
inc
cwtl
orl
xor
cs
and
rorl
sbb
popa
mov
dec
fisubl
pop
fmull
add
popf
cltd
ficoml
xchg
add
pusha
scas
test
sub
jno
sbb
pop
rcll
mov
cltd
xor
jb
out
xchg
in
mov
xchg
arpl
jo
loopne
repz
or
lds
call
mov
icebp
cli
mov
pop
ret
cmp
dec
inc
xlat
adc
inc
sub
sti
mov
imull
jo
dec
out
lock
dec
cmc
je
int
loop
mov
lahf
jl
cmpsb
jp
jl
inc
jo
rclb
xchg
dec
aam
les
sub
push
sbb
mov
arpl
push
pop
push
xlat
pop
out
xor
xchg
into
or
push
lods
push
fs
out
mov
mov
adc
sti
or
ret
scas
xchg
pop
jnp,pt
daa
jmp
xchg
out
cs
ljmp
xor
repnz
adc
or
dec
cltd
fmuls
or
ljmp
pop
cld
cmc
adc
pop
mov
push
pop
push
pop
in
mov
jmp
in
je
loopne
cmp
rcl
pop
scas
and
sbb
and
sbb
cwtl
lret
sub
scas
rorb
mov
mov
cmc
rcrl
lods
xlat
call
ljmp
push
push
mov
rolb
lcall
jbe
and
lods
jp
mulb
push
test
aaa
icebp
pop
imul
xor
xchg
jo
lock
push
mov
add
repnz
sub
pop
push
cmp
cmp
push
mov
mov
cmp
iret
aaa
lock
or
xchg
inc
pop
nop
addb
xchg
call
xlat
loopne
xchg
push
sub
dec
test
jge
and
rorl
fs
les
pop
into
pop
in
and
stos
cmp
es
fucomip
repz
and
mov
push
out
arpl
fwait
int3
mov
mov
in
shrl
mov
jl
push
test
popf
sti
leave
sub
dec
push
leave
test
cmp
and
xchg
sbb
cmp
fs
int
sub
mov
xor
lock
adc
cwtl
jae
inc
push
call
adc
push
mov
pop
pushaw
out
xor
cmp
mov
mov
gs
in
pop
xor
mov
add
mov
mov
jge
lret
mov
sahf
jo
add
mov
mov
bnd
cmp
movsb
and
les
inc
fdivr
popf
xchg
stos
mov
pop
inc
or
adc
xchg
int3
int
rcr
outsl
notb
jp
cltd
ja
adc
sub
mov
xchg
stc
mov
lods
out
add
lods
sbb
in
inc
mov
scas
scas
in
test
or
xchg
mov
or
idivb
fdivrl
loope
and
xor
dec
pop
pop
jmp
jle
les
fisubs
cmp
mov
inc
xchg
inc
addb
mov
stos
sub
lret
hlt
psubsw
xorl
sbb
push
mov
int
push
cmpsl
mov
adc
adc
ss
mov
int3
adc
daa
cmpsb
mov
push
js
pop
std
xchg
movsl
xchg
or
out
push
add
nop
cmp
dec
ljmp
cmp
sub
xor
repz
rcr
cld
in
push
mov
into
xchg
xor
cld
push
mov
aam
adc
and
cmp
pop
sbb
fldenv
in
jo
cmc
cmp
lds
add
insl
mov
mov
jecxz
jle
xor
mov
jmp
pop
das
test
adc
cltd
and
