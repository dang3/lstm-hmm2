incl
add
cmp
push
and
add
push
sbb
and
and
adc
add
jmp
push
add
and
addl
xor
sbb
add
inc
sbb
nop
inc
add
loopne
sbb
call
push
cmp
adc
sbb
sbbb
add
dec
orl
call
addb
inc
adc
addl
cmp
adc
inc
push
fstpt
xorb
incl
or
mov
inc
adc
movsb
add
mov
mov
mov
orl
add
add
fistps
andl
sti
lcall
add
or
sbb
add
test
inc
inc
sbb
sbb
cli
mov
adc
test
add
aam
inc
jbe
mov
add
jb
lcall
outsl
incl
pop
int3
nop
or
pop
push
shlb
add
cmp
nop
addl
push
jp
add
shlb
inc
add
push
adc
xchg
add
movsb
push
sbb
xorl
pusha
test
mov
mov
insb
adc
loopne
and
or
xorb
add
inc
adc
add
loopne
inc
cmp
add
pop
fstpt
and
loopne
nop
jb
inc
xor
incl
lods
loopne
add
inc
test
or
adc
rorl
and
shlb
rclb
mov
int3
mov
add
sbbl
xor
inc
loopne
pusha
xor
fcoms
inc
cmpsb
sbb
mov
insb
addl
jle
jl
jo
or
and
sbb
push
shlb
icebp
pushl
or
test
inc
add
incl
addb
das
push
cmp
add
and
orl
test
sub
adc
cmp
in
or
mov
nop
or
mov
sub
mov
sbbl
inc
test
rolb
cmp
cld
cmp
push
ret
mov
and
sbb
mov
xor
adc
cmp
mov
inc
nop
add
cwtl
nop
sbb
add
and
add
nop
pop
mov
adc
pusha
mov
sub
and
sub
add
data16
int
loop
sub
or
sbb
jo
jge
mov
pop
sbb
lret
add
inc
xor
push
cmp
add
int3
pusha
xchg
les
inc
inc
jo
pusha
bound
popa
adc
pusha
adc
push
out
pop
inc
shll
clc
push
fmuls
or
and
rcrb
mov
testb
lods
push
insb
mov
stos
rcrb
xor
lret
movsb
adc
xor
andl
sub
inc
pusha
xor
pusha
ss
xor
add
shlb
cli
add
or
into
int
push
xchg
mov
shlb
jp
push
aam
addl
adc
mov
test
and
mov
xor
lods
shlb
mov
add
add
pop
mov
inc
or
pusha
xor
xor
lret
sbb
sbb
adc
sbb
insl
loopne
in
rclb
pushf
and
push
imul
nop
inc
inc
jbe
mov
add
add
adc
fsubs
lods
addb
fisubrs
adcb
movsb
rolb
incb
mov
pop
pop
sbb
inc
shl
cmp
lcall
or
add
inc
and
cmp
inc
cmp
into
pop
adc
add
xorb
or
jo
shlb
or
clc
cwtl
mov
adc
mov
enter
mov
inc
cmp
push
pop
pop
inc
cmpsb
sub
scas
stos
push
add
mov
ret
fwait
cmp
insb
sbb
add
lock
pop
cmp
sbbl
sub
dec
adcb
test
cmp
lcall
cmpsb
or
loopne
hlt
mov
inc
push
andl
mov
adc
push
mov
pop
cld
dec
sbb
pop
push
mov
ret
xor
lcall
add
xchg
xor
or
test
cmp
rorb
xor
test
enter
call
cmp
xor
or
bound
orl
pop
into
cmp
or
cltd
dec
push
pop
js
dec
push
inc
xchg
inc
clc
mov
sbb
nop
dec
cmp
incl
inc
nop
or
jle
out
and
or
cmpsb
inc
lods
pop
enter
cmp
ljmp
rorb
sbb
add
push
sbb
xor
orl
pushf
subl
dec
add
push
xor
push
inc
add
and
or
sbb
stos
pop
data16
clc
stos
and
push
xor
lcall
push
adc
xor
cmpb
mov
adc
test
push
andl
push
in
xor
or
xor
xor
test
sub
xor
add
in
push
xor
test
push
push
mov
or
or
mov
cmp
xor
cltd
xor
sbb
shl
call
cmp
add
stos
xchg
call
add
add
int3
add
insb
jae
in
je
adc
mov
out
nop
mov
ret
push
jno
or
fiaddl
sbb
mov
xor
sbbb
cld
ss
into
popa
or
jo
stos
insb
jo
fmuls
xorl
lcall
or
xor
pusha
xor
sbb
mov
enter
mov
sahf
add
gs
cwtl
mov
push
test
cltd
ret
push
shrb
add
repnz
and
test
mov
mov
or
pop
add
add
push
shll
add
push
add
cs
in
js
stos
jmp
xor
xor
push
cwtl
enter
ror
adc
addl
enter
sbb
jbe
add
add
loop
sbb
mov
xchg
pusha
add
adc
adc
adc
add
lods
and
mov
push
fmull
mov
iret
gs
in
test
rclb
dec
push
flds
and
dec
cs
push
cld
dec
and
cwtl
mov
push
add
sbb
data16
adc
loop
add
sahf
cmp
lcall
cmpsb
js
sbbb
insb
mov
addl
lret
mov
mov
xchg
mov
orb
mov
enter
mov
dec
cmpsl
and
aam
xor
add
cld
ret
mov
push
and
mov
ss
or
inc
testb
pop
inc
xchg
lods
rolb
add
pop
push
mov
js
cmp
stos
or
adc
inc
mov
add
push
add
fcom
pusha
mov
jle
clc
dec
cli
or
lods
inc
or
test
cmpb
dec
enter
adc
lcall
add
loopne
xchg
sbb
xchg
rcrl
cli
xorl
inc
aad
hlt
hlt
pushf
pusha
pop
mov
xchg
inc
addl
push
or
add
mov
je
pusha
mov
or
and
fadds
test
jbe
or
inc
mov
orl
push
pushf
shlb
call
inc
adc
jle
inc
push
and
adc
data16
cmp
inc
jle
mov
pop
push
loop
adc
sbb
subl
andl
mov
mov
or
add
push
push
pusha
cmpb
dec
push
add
clc
loopne
mov
add
xor
add
subl
xor
ficoms
mov
adc
cmp
add
xor
dec
loopne
and
addb
adc
jmp
and
addb
nop
xchg
call
add
in
test
sbb
or
test
addb
adc
je
shrl
addl
add
sbb
movsb
and
cmp
test
inc
enter
push
sahf
fsubl
mov
jmp
lret
sbb
push
mov
fdivrs
inc
insl
mov
inc
rolb
jle
jmp
xchg
dec
mov
mov
loope
inc
push
mov
sbb
xor
hlt
adc
adcl
dec
and
or
and
cmp
push
or
repnz
test
enter
inc
ret
clc
loopne
cmp
jo
mov
and
and
adc
shl
xor
sbb
add
test
xchg
add
sub
ret
xor
loopne
jp
add
into
push
test
es
enter
push
xor
pusha
bound
mov
data16
inc
or
sbb
test
lcall
adc
xor
and
push
cmp
js
hlt
es
or
rcrb
inc
xor
jl
adc
stos
pop
push
mov
adc
sub
adc
pop
lcall
push
cmp
test
pushf
push
ret
and
pop
mov
and
inc
xchg
dec
fdivrl
or
pusha
xorl
push
and
push
push
lock
subb
cmpsb
in
ret
inc
inc
jo,pn
xor
push
xchg
insb
and
pop
inc
ret
jne
pusha
cmp
mov
xchg
mov
cmpsl
pop
je
push
jo
add
push
mov
pop
and
mov
sbb
lret
scas
jbe
nop
adc
add
adc
push
andl
stos
hlt
sbb
lcall
push
ret
sub
shrb
cmp
adc
and
shlb
mov
cmp
sbb
xchg
jmp
sbb
push
ss
xchg
mov
and
mov
or
fildl
subl
cld
ljmp
lea
test
and
pop
xchg
push
jl
cmp
ljmp
fs
roll
mov
dec
addl
push
adc
add
xchg
xchg
inc
add
nop
sub
inc
lds
data16
rorb
mov
ss
mov
add
xor
and
cwtl
adc
add
inc
sar
sbb
or
inc
pop
add
push
pusha
add
add
fcoml
xchg
call
cmpsb
sbb
push
mov
mov
andl
mov
mov
inc
loopne
inc
and
jo
sbb
js
fdivrp
pop
xchg
enter
insb
cmp
pusha
push
pushf
dec
pop
push
dec
push
jne
xchg
fdivr
lods
mov
push
xchg
mov
loopne
pusha
pop
lock
inc
jo
inc
lds
fimull
insb
xor
pushf
loop
or
and
daa
adc
cs
push
add
sbb
pusha
nop
dec
loope
jnp
subl
dec
push
push
out
or
mov
or
sbb
inc
cmp
inc
mov
je
pop
loopne
and
mov
cmpl
xor
and
push
or
cmp
adc
xchg
test
xchg
push
inc
or
or
or
jl
ret
fsubrs
lcall
mov
jae
inc
add
xor
popa
pusha
test
xchg
out
pusha
push
dec
and
mov
inc
inc
sahf
push
add
js
sbbb
cmp
mov
sbb
sub
xchg
imul
cmp
sbb
add
in
cltd
mov
xor
into
or
inc
aam
push
lods
push
mov
and
fs
in
mov
roll
add
cmp
pop
xor
je
loopne
sbb
sub
inc
jo
jo
or
ret
cli
into
add
jo
xchg
jb
push
lcall
movsb
mov
or
xchg
mov
dec
rorb
inc
add
ljmp
stos
sbb
fs
mov
mov
and
test
enter
mov
lock
push
test
aad
push
inc
fmuls
and
in
mov
adc
loopne
pusha
sub
hlt
repnz
mov
inc
or
push
jo
or
adc
push
jo
enter
push
push
adc
adc
in
dec
jo
ljmp
or
and
adc
nop
adc
pop
xor
xor
pusha
push
enter
sbb
sub
je
and
nop
push
push
loop
sub
lods
inc
push
loopne
pusha
mov
add
subl
dec
cmp
cs
inc
mov
lret
add
and
and
mov
mov
mov
push
cmp
add
and
sbb
test
add
inc
xchg
mov
or
int3
lods
inc
and
inc
ret
adcb
xor
and
push
stos
pusha
movsb
xor
or
fisubl
and
pop
stos
jbe
inc
mov
xor
adc
inc
or
test
or
jo
sbb
xchg
mov
insb
cmpsb
shlb
xor
popa
addb
lock
rcrb
movsb
mov
dec
sub
jae
add
and
lcall
add
inc
inc
or
push
cmp
add
mov
inc
sbb
mov
pop
rorb
push
or
movsb
push
ficoml
out
out
mov
xchg
rolb
adcl
inc
xchg
sub
pusha
push
pop
xchg
rcl
add
mov
sub
push
sbb
test
fs
orl
pushw
lods
or
or
mov
int3
pop
data16
cs
push
test
push
loopne
adc
inc
push
cmp
inc
adc
rclb
aam
sbb
pop
out
sub
push
das
xchg
test
cld
push
mov
ret
sub
mov
jp
mov
cmc
fs
inc
and
add
pop
js
pushf
cs
inc
cmpl
bound
or
sarb
dec
lods
shll
cmp
sbb
jle
jo
hlt
loopne
cmp
loopne
push
add
add
sub
shlb
sub
mov
add
fmuls
xor
sbb
in
add
ds
pusha
xor
sub
loopne
fdivr
adcb
lcall
scas
sub
fs
inc
adc
xchg
jo
mov
or
xchg
xchg
fmuls
xchg
mov
jo
push
xor
push
mov
cwtl
orl
out
xchg
fs
sub
sbb
sahf
cmpsb
and
and
inc
inc
aam
pop
inc
cmp
inc
or
ret
add
sbb
mov
xchg
leave
divb
xchg
mov
test
and
in
cmp
sbb
fimull
push
push
rcrb
mov
cmp
cli
scas
shlb
add
and
stos
cmpb
sbb
enter
nop
loop
nop
nop
add
xchg
aam
mov
or
sbb
adc
mov
xor
sbb
fiaddl
inc
test
and
fcoml
add
cmp
rclb
or
int3
lcall
cwtl
stos
and
popa
inc
xor
in
data16
jle
ret
ljmp
push
andl
cmp
adc
roll
in
cmp
and
push
sbb
pusha
push
add
push
add
pusha
adc
mov
mov
add
movsb
test
popa
loopne
mov
mov
dec
xchg
mov
mov
test
xchg
xchg
cmp
add
data16
outsb
pop
or
dec
jo
mov
xchg
and
test
xor
int3
je
xor
lds
dec
sub
or
testb
cmp
sbb
mov
add
jle
mov
xorb
mov
jb
push
lock
scas
sub
cmpsb
xchg
cmp
and
sub
or
sub
sbb
jo
pushf
sbbl
xchg
mov
xor
andl
das
add
rcr
cld
inc
xchg
inc
movsb
add
pop
or
nop
jbe
pusha
adc
adc
daa
sbb
dec
sbb
xor
or
push
cmp
pop
stos
in
ret
add
mov
sbb
push
inc
push
xor
cli
fsubs
loop,pt
rolb
es
into
addl
pop
aad
or
push
lret
adcl
push
movsl
xchg
addl
dec
repnz
xchg
dec
movsb
xor
push
push
push
add
lods
inc
sbb
mov
xorb
or
mov
cmpsb
add
and
mov
xchg
mov
mov
xor
pusha
inc
push
cmp
lods
cmpsb
int
cmp
cwtl
adc
cmp
sbb
add
pop
or
insl
adc
cmp
movsb
rorb
dec
inc
test
add
sbb
dec
adc
out
stos
add
movsl
adc
test
rcrb
push
xchg
push
hlt
inc
pusha
xacquire
inc
pusha
add
and
test
or
call
add
push
push
je
dec
pusha
ss
xchg
ret
rcrb
testb
push
xchg
adc
add
sbb
repnz
inc
test
adc
andb
add
ret
dec
mov
fs
adc
mov
cmp
fadds
lods
dec
and
push
xor
and
xchg
dec
lock
aad
push
inc
loopne
add
push
add
fiadds
test
xor
inc
pop
hlt
xchg
sub
popa
and
ficoml
int
stos
clc
and
and
fcoms
sub
add
sbbl
or
inc
mov
mov
mov
and
es
xchg
ret
push
lcall
add
sbbb
subl
and
sub
push
inc
adcb
and
or
je,pt
cwtl
imul
sbb
add
nop
xorl
cmp
hlt
insl
add
dec
movsb
push
mov
sbb
push
test
add
in
mov
int3
aam
cmp
pusha
nop
and
test
pusha
cs
dec
pop
and
out
repnz
push
inc
adc
fcom
add
xor
aam
sub
inc
and
ljmp
push
push
adc
mov
fisubrl
inc
cwtl
shrb
rolb
test
mov
push
jmp
inc
movsl
adc
adc
insb
add
sub
fdivr
adc
jp
adc
data16
or
push
push
insb
lcall
into
sbb
loopne
sub
in
fs
dec
add
js
xor
lock
inc
cmp
loopne
incl
dec
hlt
sub
xorb
inc
mov
dec
push
test
insb
scas
sub
push
mov
mov
fimull
mov
mov
mov
add
mov
push
sub
nop
test
rolb
push
inc
mov
xor
test
and
mov
jl
inc
push
sub
int3
cmp
mov
nop
loopne
push
ljmp
in
xor
lcall
lret
dec
or
inc
xor
pop
pusha
fsubl
xor
add
push
loopne
inc
addb
push
addb
and
jp
mov
stos
and
adc
mov
cwtl
dec
or
and
lret
push
mov
lcall
andl
and
add
or
or
rcl
push
or
pop
rcl
or
stos
cmp
nop
les
add
jae
mov
xlat
or
pushf
add
addl
pop
test
xor
add
out
lret
mov
fcoms
fs
push
push
jo
or
push
in
ljmp
jp
test
add
fdivr
mov
push
push
inc
enter
and
out
stos
ror
pop
sbb
stos
inc
cmp
loop
xor
clc
add
cmpb
test
sub
adc
push
loopne
xchg
fidivs
dec
enter
cmp
push
lret
push
sbbl
test
lods
fdivl
and
add
roll
mov
inc
add
dec
sub
out
testb
es
cmp
adc
bound
fcoml
cwtl
inc
xor
cmp
xor
test
push
push
xchg
movsb
mov
dec
push
nop
fdivrs
mov
push
hlt
mov
rorl
adc
sub
inc
cmpsb
add
faddl
or
sub
jo
push
jne
mov
fidivs
inc
nop
and
adc
xchg
or
push
and
stos
xor
xchg
repnz
mov
les
xchg
add
cmp
add
shlb
push
inc
subl
pusha
inc
je
pusha
xchg
push
add
xor
add
popa
mov
insb
cmp
nop
push
xchg
xchg
ret
into
mov
xor
inc
decb
and
push
in
add
jo
cmp
stos
and
jo
inc
sbb
outsb
cli
add
fiaddl
or
fcompl
inc
sbb
bound
mov
mov
push
or
sbb
mov
pop
mov
add
dec
inc
add
adc
movsb
cmp
xchg
jmp
ret
orb
rolb
jo
out
push
cwtl
adc
push
aam
xor
scas
add
or
cmp
popa
xchg
rcll
add
and
leave
in
xor
je
daa
sbb
inc
movsb
lret
push
add
inc
inc
and
push
cmp
mov
cmp
mov
sbbb
and
inc
insb
and
rorb
xchg
rclb
or
and
mov
inc
push
insb
adc
dec
push
cmp
inc
xor
out
inc
cs
aam
xor
sbb
push
repnz
je
xor
es
jle
jo
imul
inc
add
cmpb
mov
jo
addb
xchg
inc
aam
xchg
enter
add
fs
push
call
push
pop
add
shlb
mov
xchg
adc
xor
mov
xchg
xchg
push
sbb
jl
cmp
and
fdivrl
push
sub
dec
sub
mov
test
shlb
mov
and
divb
nop
inc
repnz
stos
pop
das
adc
sbb
fs
push
adc
inc
cltd
shrl
xor
cmp
out
xor
nop
push
add
sbb
out
add
push
shlb
loopne
adc
push
repnz
je
aam
push
add
adc
add
push
xor
or
push
pushf
or
mov
aad
or
nop
outsb
sub
add
xchg
push
adc
and
mov
pusha
xchg
in
ljmp
adc
or
faddl
jb
inc
xchg
in
or
test
and
fiaddl
xor
nop
add
push
sub
xor
inc
jo
or
addl
or
cmp
mov
stos
inc
sbb
sbb
ljmp
sub
pusha
int
xchg
mov
adc
rorl
add
inc
add
mov
shlb
sbb
int3
or
xor
out
jo
push
add
sbb
rcrb
pusha
xchg
movsb
add
cmpl
sbb
dec
lods
mov
and
cmp
imul
inc
es
pop
dec
pusha
dec
scas
andl
inc
xor
xor
testb
or
mov
les
and
xchg
inc
jno
jo
mov
sbb
adc
cs
addl
xor
cmp
cs
notb
push
inc
inc
push
cmp
cs
inc
sub
fiaddl
js
add
test
enter
mov
mov
add
in
lcall
ss
and
pop
cmpsb
dec
dec
add
mov
add
or
pop
xchg
mov
shrd
xchg
adc
data16
inc
and
mov
rclb
push
loopne
fiaddl
cmp
jo
addl
mov
pusha
xlat
cmp
add
ljmp
sbb
or
jo
sbb
push
or
mov
push
outsb
adc
adc
mov
sbb
push
xchg
or
addl
shlb
loopne
ror
and
andb
cltd
inc
insb
addb
mov
int3
jle
pop
inc
cwtl
jecxz
add
imul
push
cmp
sbb
cmp
inc
or
add
sub
sub
jmp
xchg
sbb
test
cmpsb
adc
push
mov
loopne
dec
lds
pop
inc
cwtl
xor
dec
jno
ret
mov
cmpb
shrb
rolb
int3
lea
dec
push
push
add
sbbl
sbb
mov
adc
inc
cwtl
and
mov
aam
fs
xchg
pop
mov
andb
cmp
adc
lcall
mov
add
movl
aad
dec
or
pop
jbe
inc
xor
push
xorb
inc
loop
cwtl
insb
add
shlb
push
imul
mov
add
sbb
inc
pop
push
adc
mov
jo
fsubrs
cmp
sbb
add
xchg
dec
dec
and
add
push
and
bound
test
mov
es
outsb
or
push
gs
jbe
adcl
andl
adc
test
sbb
adc
add
shl
sbb
dec
mov
adc
push
pop
into
push
push
inc
add
xchg
jle
or
pop
mov
inc
and
inc
test
push
xchg
repnz
addl
and
out
mov
mov
pusha
xor
push
shlb
mov
and
and
stos
add
cwtl
add
push
adc
dec
clc
shrb
dec
cwtl
add
fsubrp
inc
or
insb
sbb
mov
and
out
inc
mov
jo
inc
sbb
or
dec
je
add
sahf
or
loopne
and
sbbb
sbb
push
dec
push
sub
rcl
jo
push
and
sub
movsl
xor
inc
push
inc
sub
sub
dec
push
movsb
cmp
repnz
add
ljmp
movsb
testb
and
or
jle
pop
orl
sbb
or
or
add
nop
add
mov
loopne
bound
loopne
pop
xor
sahf
mov
xor
nop
xchg
add
jle
popa
shlb
mov
les
cmp
fcoms
adc
and
adc
push
int3
xor
and
lcall
push
push
loopne
nop
dec
imul
sbb
xor
inc
push
push
cmpsl
push
cs
inc
inc
or
and
xor
pop
filds
stos
mov
test
or
pushw
and
and
dec
scas
data16
pop
inc
sub
test
cmpsb
add
adc
test
or
push
inc
push
or
stos
mov
test
sub
mov
ficoml
cmp
or
adc
or
ret
dec
popa
clc
mov
inc
inc
xchg
sbb
pop
outsb
sbb
mov
push
dec
adc
mov
push
or
inc
xchg
push
sbb
xor
loopne
data16
loopne
jl
mov
sbb
jb
loop
mov
jo
sbb
sbb
fiadds
add
adc
cmp
andl
pop
test
orb
idivb
adcl
mov
adc
push
es
add
js
inc
adc
inc
je
pusha
mov
push
or
enter
or
clc
sbb
xchg
movsb
or
push
sub
and
jb
mov
bound
pusha
sub
cmpl
rcrl
and
scas
nop
insb
jne
push
call
call
cwtl
mov
scas
rcrb
rolb
xchg
push
add
ds
push
test
and
sub
mov
imul
fiadds
int3
push
call
sbb
pushf
js
rolb
dec
mov
notb
fildl
lods
test
data16
inc
push
ret
ret
or
pop
sub
in
or
push
xchg
inc
sub
les
cmpsb
enter
mov
add
cltd
add
rorl
push
xor
cmp
add
inc
push
mov
cmpl
mov
pusha
int
clc
add
sub
mov
xchg
cmp
pushf
orb
in
andl
push
pop
adc
add
xchg
shlb
xor
test
push
xor
add
pusha
xchg
stos
or
repnz
cmpl
rolb
push
cs
int
in
test
subl
or
shr
fcoms
es
movsb
mov
lcall
or
cmpsb
out
xchg
dec
and
ljmp
dec
push
adc
cs
xor
fisubl
les
jmp
test
pushf
push
mov
add
nop
andl
cwtl
dec
and
mov
sbb
ret
or
mov
inc
mov
push
jle
push
add
dec
or
push
inc
cmp
and
cs
pusha
test
add
popa
dec
pusha
adc
mov
add
jo
shlb
jb
mov
call
sub
int
mov
call
es
add
or
jo
cld
add
dec
loopne
adc
fsubrl
inc
in
push
ret
sub
inc
les
in
je
mov
adc
notb
fidivrs
js
xor
mov
add
push
orl
mov
push
xchg
dec
xchg
or
cmp
add
mov
repnz
mov
add
add
mov
lods
inc
gs
outsb
push
add
enter
inc
rorb
shlb
and
inc
adcl
add
aad
inc
or
or
out
stos
adc
call
gs
stos
push
push
in
cli
cmp
push
adc
xchg
movb
push
jo
in
sbb
xor
push
xchg
test
push
inc
sub
hlt
xchg
dec
inc
jb
decl
out
and
in
adc
jo
pop
ret
sub
or
movsl
pop
mov
repnz
and
xchg
or
ljmp
jp
bndstx
pop
rolb
add
test
or
cs
cmp
faddl
xor
and
cmpsb
cmp
sbbb
lret
mov
andl
xor
mov
or
ret
ss
mov
jo
xor
push
add
add
xchg
loopne
inc
and
nop
and
xor
push
or
xor
mov
fadds
mov
addb
cli
xorb
test
outsb
and
inc
jo
mov
hlt
cmpsb
les
dec
sub
repnz
xchg
inc
mov
pusha
les
push
and
push
push
loope
bound
mov
inc
pop
sub
inc
data16
mov
adc
dec
or
xor
outsb
inc
or
xchg
fcoms
cmp
mov
sub
ja
shll
push
mov
and
and
xchg
rorl
jb
mov
dec
xor
pop
inc
sub
inc
es
mov
rolb
jl
add
inc
inc
cwtl
pusha
add
sbb
add
mov
adc
jo
stos
test
mov
pushf
andb
pop
xor
pusha
adc
and
push
xchg
ret
and
mov
xorl
lret
dec
mov
ret
in
insb
add
xchg
mov
fisubl
cltd
add
fsubrl
and
pop
or
xor
inc
inc
sub
or
jo
fs
rorb
cwtl
ds
movsb
xor
adc
dec
in
or
mov
lock
mov
nop
jb
fdivl
dec
add
jo
sbb
inc
sbb
int3
and
or
or
cmpsb
add
lcall
fsubrs
adc
or
sarl
pop
xor
loop
add
jbe
and
sub
or
in
xchg
test
add
inc
out
hlt
xchg
lret
shlb
add
or
je
jo
inc
or
mov
push
cwtl
sbb
add
je
pop
cmp
test
adc
xor
push
addb
or
cmp
mov
adc
cmp
adc
and
or
xchg
jp
mov
mov
inc
mov
ljmp
pop
pusha
inc
jae
loopne
or
sbb
clc
mov
loopne
int3
cli
and
test
jb
jno
xor
mov
mov
xor
push
adc
sub
add
add
add
dec
mov
push
add
lret
ss
sbb
es
push
fadds
or
or
xor
inc
add
loop
aam
mov
ljmp
pop
push
andb
jl
and
cmp
cld
or
adc
and
ljmp
xchg
test
test
dec
cwtl
es
je
xchg
jo
push
insb
addl
inc
jo
lcall
push
dec
push
sbb
push
mov
addl
cmp
mov
shrb
or
or
dec
add
data16
push
sbb
mov
push
push
lods
push
rolw
push
ret
cs
fmuls
sbb
pop
adc
inc
inc
jl
xchg
int3
out
test
sbb
sub
inc
or
sbb
addb
add
shlb
push
cmp
cmpsl
out
or
test
inc
adc
pusha
jp
sub
sbb
push
fiadds
mov
mov
push
mov
pushf
adc
cld
mov
add
cli
push
mov
adc
fdiv
add
cwtl
fs
jecxz
mov
lret
test
rorl
pop
and
inc
or
insl
add
and
xchg
add
sub
or
sbb
adc
inc
test
rcrb
mov
mov
cmp
jnp
sbbl
ret
fidivrs
pushf
add
xorb
mov
mov
test
clc
pusha
mov
sub
inc
xchg
dec
andb
sahf
rcrb
sub
xchg
shrb
inc
xor
andl
push
xor
and
pop
sub
int3
adc
xchg
push
pushl
xor
add
ljmp
push
push
bound
jb
clc
loop
and
sub
inc
cmp
ljmp
hlt
orb
jo
popa
jb
cld
push
ret
movsl
xchg
pop
addb
mov
inc
and
adc
pop
in
inc
cwtl
cwtl
push
mov
and
add
stos
inc
rcrb
sub
lods
xchg
subl
jo
nop
imul
add
clc
rolb
pusha
in
add
dec
inc
xor
xor
jl
enter
xchg
mov
cmpl
sbbl
dec
mov
insl
xor
cmp
enter
and
pop
loopne
dec
add
into
nop
jb
cs
jb
cmp
daa
mov
stos
or
fs
xor
in
dec
ljmp
lock
push
and
addb
inc
jo
xor
mov
jae
inc
fisubs
add
pusha
xor
mov
lods
push
cld
scas
mov
add
add
cs
cmpl
cmpb
lods
or
cmp
mov
jo
test
add
add
adc
les
add
sbbl
push
sub
fs
cmpsb
jl
call
inc
jo
add
push
int3
dec
sbb
movsb
int3
xor
or
addb
lods
add
inc
push
incb
test
push
push
bound
jb
shlb
pop
adc
dec
mov
and
in
inc
data16
pop
mov
je
inc
push
sub
adc
add
push
push
pusha
cmp
xchg
mov
jecxz
pop
add
and
mov
int3
pop
adc
scas
aam
inc
xchg
sbb
faddl
or
mov
mov
push
roll
lcall
cmpsb
lcall
inc
dec
dec
je
pop
jb
xor
xor
call
dec
cmpl
inc
xchg
dec
mov
push
fimull
and
inc
orl
pop
inc
or
push
dec
cmp
test
fimuls
addb
mov
sbb
test
cld
mov
push
sbbb
insb
adc
popa
andb
addl
sbb
or
jb
sub
add
push
add
lcall
mov
movsb
stos
adc
adc
lret
cwtl
repnz
push
xor
mov
mov
cmp
or
in
jo
and
or
nop
dec
test
mov
sbb
mov
push
push
add
add
xchg
inc
add
ljmp
je
xchg
fsubrp
inc
push
test
xor
dec
mov
dec
jbe
or
sub
dec
dec
jle
pop
jle
dec
xor
add
and
lods
sbb
aam
sahf
pop
add
xor
cs
dec
movsb
xchg
adc
lock
cmp
sub
dec
test
sbb
hlt
push
pop
inc
decl
add
andb
test
push
push
jne
insb
adc
pop
rclb
insb
out
fimull
data16
jo
lcall
and
xchg
dec
test
lret
sub
inc
xchg
add
loope
pushf
test
aam
adc
popa
aam
andb
enter
xor
or
push
push
or
xor
cwtl
lret
cs
fs
loopne
into
or
and
hlt
cli
test
mov
or
xor
push
daa
andl
mov
and
add
hlt
xor
mov
shrb
pop
xchg
and
mov
ljmp
or
shlb
push
adc
ficoms
add
js
cld
cmp
pop
push
adc
sbb
dec
and
movsb
add
roll
dec
push
sub
loopne
xchg
pusha
inc
pop
test
rcll
xchg
jo
mov
or
les
test
loopne
mov
aaa
popa
push
mov
sbb
out
jl
inc
data16
add
push
or
push
sub
shlb
repnz
out
add
sub
adc
mov
test
add
clc
xor
add
mov
xchg
cmp
xor
xchg
inc
js
sbb
jae,pn
stos
fidivl
dec
test
fdivl
xor
inc
loop
xorb
xor
sub
or
xchg
jb
mov
adc
jno
rolb
adc
add
incl
push
cmp
xchg
push
inc
add
adc
add
adc
cmp
les
or
push
xor
xchg
orb
xchg
adc
sbb
push
or
xchg
push
dec
popa
push
jp
ficoms
je
test
stos
je
addl
out
jo
sbb
ret
xor
and
add
jmp
add
jp
sbb
sub
cmp
push
dec
pusha
xor
jl
push
sbb
or
lcall
mov
push
or
or
cmpsb
test
mov
test
mov
or
push
add
fstps
add
push
xchg
push
jo
push
add
mov
push
mov
mov
test
or
and
ret
cmpb
les
or
lods
or
into
cmp
test
mov
js
xor
sbb
inc
xchg
add
scas
xor
ret
daa
and
inc
fiadds
leave
test
out
pop
or
lock
out
js
sbb
xchg
inc
ficompl
sbb
jp
push
push
orb
pop
subl
xchg
loopne
and
mov
push
xor
mov
and
dec
addl
mov
test
aaa
adc
dec
xchg
les
cwtl
pop
sub
xor
jo
and
push
dec
es
xchg
adc
inc
sub
lcall
push
mov
adc
shlb
outsb
cmp
adc
mov
adc
xchg
xchg
ror
loop
jb
dec
add
out
mov
xor
push
or
mov
or
mov
outsb
or
aad
cmp
push
xchg
enter
xchg
pusha
mov
in
push
push
orb
or
cli
pop
out
pusha
adc
fs
and
xchg
es
loopne
js
dec
ret
or
insb
add
add
enter
in
rcl
test
loop
push
enter
xchg
jb
add
repnz
inc
or
push
add
cmpsb
lods
and
adc
pop
mov
mov
or
mov
data16
loope
and
popa
scas
or
pop
add
shlb
clc
insb
jle
push
add
rcll
inc
mov
cmp
sbb
add
insb
pop
add
test
push
inc
test
shlb
mov
bound
push
ret
out
sbb
andl
mov
inc
dec
test
push
lods
sub
mov
addb
pop
and
add
or
inc
fs
test
ret
fsubrl
adcl
add
test
movsb
fs
jbe
inc
push
pop
xchg
addb
test
shrb
xorb
inc
imul
push
sbb
mov
rolb
xor
leave
xor
dec
dec
jp
and
xchg
andb
xchg
repnz
cmp
int3
xor
push
jbe
inc
inc
push
xchg
insb
push
dec
je
pop
adc
ficoml
loop
inc
sbb
loopne
ss
cmp
push
and
test
cltd
xor
sub
shl
adc
mov
cwtl
ret
and
mov
aam
or
sbb
orb
dec
add
add
bound
dec
subb
or
xchg
cmp
add
insl
mov
xchg
adc
add
push
cmp
and
adc
in
pop
push
dec
and
adc
adc
add
jbe
sub
ret
add
lret
jo
mov
mov
push
into
shlb
orl
pop
cs
xchg
adcl
mov
xchg
xor
add
cli
mov
push
sbb
sbb
mov
sbb
cmpl
and
es
mov
xchg
push
je
sub
lock
and
dec
stos
rolb
ret
pop
lret
aam
sbb
jnp
sbb
jo
scas
test
sub
mov
dec
push
ret
or
add
rorb
fmuls
add
lret
loope
pop
push
mov
rorb
cli
and
mov
je
ficoms
int3
add
aaa
push
lret
pop
repnz
ret
inc
xor
push
inc
sub
add
movsb
hlt
cwtl
or
fldt
shr
xor
dec
and
dec
test
dec
jle
sub
push
mov
inc
pusha
orb
nop
jo
loopne
orl
cltd
xorl
mov
jno
push
enter
dec
add
loope
lret
sbb
inc
add
xor
pop
enter
mov
sbb
sbb
es
mov
adc
sbb
inc
movsb
and
fs
jo
loop
addr16
add
inc
cli
pusha
inc
shlb
addb
pop
shl
test
call
enter
or
mov
jp
xor
push
push
or
adc
dec
jle
in
les
xor
xchg
loope
xor
insb
les
fadds
inc
movups
mov
jo
cmpsl
inc
addl
inc
dec
add
sbb
test
pushf
call
mov
fs
loop
add
ret
enter
mov
sbb
add
xchg
cltd
xchg
or
popa
adcb
rolb
adc
es
jp
sbb
pusha
aam
adc
ret
test
mov
adc
enter
and
in
and
add
pop
xchg
insb
js
adc
leave
xor
jp
mov
adc
pop
loopne
or
dec
and
sbb
nop
rcrb
cmpsb
loop,pt
add
xor
or
int3
shlb
addl
add
cmp
lcall
or
xor
sub
movsb
sbb
rcrb
jbe
inc
movsb
xchg
stos
ljmp
mov
xor
cwtl
and
pusha
push
dec
push
inc
push
xchg
fidivs
xor
push
popf
sbb
ljmp
cmp
inc
push
adc
inc
in
cwtl
xor
and
ret
sbb
add
push
xchg
push
xchg
or
pusha
jp
andb
mov
cs
jae
rclb
adc
fiadds
ss
or
dec
push
mov
sub
jbe
jae
push
push
fsubrl
xchg
push
push
dec
ljmp
pop
stos
lds
enter
sbb
or
adc
push
shlb
int3
in
enter
or
sbbl
jo
add
push
mov
xor
dec
pop
sub
out
or
and
cmp
mov
adc
push
ss
xchg
dec
sub
lret
sub
mov
push
mov
add
mov
jae
ss
mov
mov
add
sbb
jbe
andb
lret
cmpsb
and
fdivrs
movsl
or
stos
push
test
xor
add
add
push
test
and
adc
push
lcall
add
xor
xchg
aam
xor
push
jo
mov
push
inc
and
push
and
addl
bnd
aam
jp
mov
jp
jo
enter
repnz
popa
orb
mov
sbb
add
and
or
inc
scas
call
mov
sbb
insb
and
xor
inc
adc
add
lods
mov
mov
inc
add
pop
fs
xor
pop
push
adc
push
add
lret
dec
test
xchg
sub
xor
or
shl
adc
es
xor
ljmp
add
cs
out
and
adc
or
sub
xchg
sub
mov
inc
push
dec
inc
mov
addl
lods
inc
fimuls
sbb
xor
inc
js
xlat
mov
loopne
adc
sbb
push
or
into
cmpb
and
add
push
pusha
js
cltd
stos
adcb
in
adc
andl
or
mov
scas
out
cmp
es
outsb
loope
inc
cli
into
sbb
add
dec
cwtl
lods
enter
aam
and
scas
lods
adc
or
inc
jo
rolb
test
stos
and
adc
or
adc
pop
popa
push
cwtl
lcall
add
dec
or
push
dec
and
dec
and
loope
jle,pt
mov
adc
sub
cmp
add
js
test
test
loopne
push
jp
adc
lret
sub
sub
or
xor
add
sub
cmp
jecxz
or
jo
sbb
int3
dec
nop
push
push
call
test
dec
rcr
cmp
popa
ss
pushw
cwtl
bound
leave
js
mov
xchg
push
add
lods
jle
pop
movsb
mov
test
mov
pushf
orb
xor
jl
xor
and
jno
add
mov
or
sub
sarb
pop
loopne
and
pop
nop
sbb
loopne
cmp
and
dec
je
xor
push
inc
inc
cmp
xchg
dec
xor
andl
fisubl
sbb
inc
add
fimull
adcl
sbbl
cltd
pop
inc
js
sbb
ds
nop
in
inc
int3
nop
push
adc
push
insb
mov
into
xorl
lea
pop
push
mov
sub
rolb
dec
sub
bound
push
loopne
and
leave
mov
jb
jp
xchg
lock
cmp
xchg
or
and
cmpsb
push
jp
sti
test
add
and
or
or
push
lods
je
dec
jb
jle
xor
and
mov
fcom
add
mov
or
add
mov
sbb
rolb
outsb
incb
mov
faddl
push
clts
ds
fsubrl
sbb
adc
sub
orl
test
inc
sub
adc
add
xchg
int3
into
pop
push
repnz
dec
loopne
push
fidivs
mov
adc
adc
sbb
push
pushf
je
and
nop
xchg
dec
testl
dec
mov
push
cwtl
or
pop
xchg
pusha
push
subl
jp
dec
or
push
imul
or
xchg
dec
and
in
js
pop
and
mov
sbb
loop
inc
js
add
sbb
gs
faddl
fmull
es
inc
mov
in
into
push
fiadds
push
sbb
data16
push
cltd
and
sbb
cwtl
fcom
adc
and
cltd
xchg
jbe
pusha
and
sbb
es
dec
dec
xor
sbb
push
or
jp
pop
cltd
loope
cmpsb
negb
sub
xchg
xor
cmc
inc
sbb
or
ss
cwtl
and
xor
xor
cmp
jl
xchg
and
jb
or
fs
and
mov
add
lret
xor
cmp
clc
add
adc
mov
inc
dec
adc
andb
push
and
fmull
cmp
and
test
cmp
pop
push
add
hlt
add
dec
and
or
and
adc
fsubl
xor
add
push
testb
push
pop
hlt
test
nop
add
xor
in
adc
and
push
or
lods
push
bound
xchg
add
inc
test
add
sub
and
scas
push
dec
cli
cwtl
dec
push
push
rcl
inc
adc
xchg
push
sbbb
xchg
pusha
stos
out
hlt
add
and
pushf
push
mov
mov
adc
inc
mov
or
inc
and
pushf
call
addb
inc
or
nop
adc
xchg
loope
push
mov
into
inc
or
xchg
mov
mov
adc
cmp
inc
jo
sub
xor
loopne
cmp
pusha
sub
mov
sub
push
je
fisubl
loopne
cmp
rcll
ficompl
add
xchg
cwtl
loop
jo
sbb
lret
dec
push
cltd
in
outsb
push
jl
je
test
test
shrb
add
cmp
ret
ret
cwtl
jl
xor
sbb
xor
leave
inc
mov
mov
push
sub
mov
jo
jo
inc
or
notb
inc
fmul
push
xor
mov
add
or
dec
or
mov
nop
jb
sub
adc
out
push
add
gs
dec
add
ljmp
rorb
enter
inc
and
and
sub
cs
mov
idiv
push
sbb
je
xchg
xor
sbb
shlb
add
inc
fidivl
inc
add
inc
xchg
lods
movsb
jl
clc
push
xor
js
inc
out
andl
adc
xchg
inc
sbb
nop
cmp
mov
cltd
test
dec
push
add
and
xchg
inc
inc
or
int3
push
rcrb
es
shlb
sbb
xor
push
adc
add
xchg
scas
in
sbb
adc
xor
push
and
sub
insb
testb
aam
and
cli
pop
fs
xor
in
es
inc
push
ss
push
add
and
or
jp
mov
push
mov
xchg
fs
or
push
jb
mov
xchg
mov
xchg
jo
pop
pop
dec
imul
push
inc
xorl
mov
mov
sbb
jo
push
xor
sbb
push
mov
fs
push
mov
xchg
adc
push
and
pop
mov
ret
rolb
inc
cwtl
pop
sub
add
inc
xchg
shr
add
loopne
mov
jb
pop
jbe
and
lods
inc
add
push
add
mov
inc
xor
adc
sbb
cmpsb
push
rorl
add
movsb
xor
outsb
je
sub
mov
push
dec
add
shll
mov
mov
repnz
dec
push
insb
inc
nop
sub
jne
and
pop
xor
and
push
jo
inc
push
subl
add
inc
push
nop
lret
inc
pushf
hlt
inc
add
add
push
cmpsb
mov
aam
xor
ss
and
cmpsb
pop
nop
jbe
add
lock
pop
dec
mov
pushf
sbbb
adc
rolb
mov
mov
mov
test
adcl
inc
int3
test
push
lods
hlt
cmp
mov
adc
sbb
push
adc
and
dec
pop
out
add
cli
mov
push
movsb
adc
je
test
pop
and
add
movb
xor
jle
dec
push
xor
push
mov
lock
add
mov
mov
or
sub
xchg
rclb
add
scas
jo
shll
or
push
addl
xor
mov
mov
mov
pushf
outsb
mov
adc
push
mov
add
loop
rclb
jo
mov
clc
in
dec
mov
sbbl
jb
sbb
mov
sbb
xchg
nop
dec
sbb
and
test
adc
pusha
push
mov
push
sub
add
mov
xor
xor
incl
cmp
xor
sub
jb
scas
fimull
push
mov
adc
jbe
cmpsb
adc
and
push
mov
cmp
adc
cld
cmpsb
push
daa
mov
loopne
or
adc
stos
jo
sub
mov
jl
lds
add
inc
pop
lock
sbb
jle
add
adc
push
sub
test
xchg
dec
outsb
mov
mov
sub
xchg
pusha
xor
add
inc
cmp
push
sub
jb
or
cltd
jne
xor
sti
popa
xor
loop
loopne
jle
add
push
sub
mov
shrb
push
push
cs
mov
mov
pop
sahf
push
and
loopne
int3
outsb
inc
bound
sbb
mov
mov
jo
cmp
rclb
movsb
data16
sbb
and
lods
addl
sbb
fidivs
inc
shll
pusha
scas
es
fcoms
ljmp
pop
xchg
aam
addl
int3
test
sbb
jbe
bound
jbe
inc
pop
adc
cltd
add
xor
dec
and
adc
push
mov
xchg
and
shl
adc
adcb
jo
add
sub
inc
mov
mov
ds
dec
mov
shrb
dec
popa
adc
js
xor
xchg
mov
xor
push
sahf
push
into
mov
ret
inc
orl
inc
or
int3
dec
add
sbbb
popa
push
mov
jo
aad
jb
add
or
and
pushaw
lods
outsb
call
mov
rorb
push
and
xor
cmpsl
push
cmp
add
loope
sub
jl
pushf
adc
incb
dec
test
sbb
nop
pop
cmpsb
dec
je
push
test
cltd
icebp
pop
and
adc
jo
add
xchg
xor
mov
inc
sbbl
sbb
shrl
pop
and
push
data16
sbb
scas
mov
inc
inc
jne
add
dec
mov
loopne
clc
cwtl
test
push
push
add
jo
mov
xchg
dec
or
cmp
orl
sbb
or
mov
push
je
lods
mov
cmp
add
push
arpl
lock
incb
cwtl
adc
adcb
cld
push
mov
mov
cmc
mov
sahf
in
add
sub
rol
ret
or
push
movsl
add
add
and
sbb
mov
push
clc
test
or
mov
xchg
sbb
add
pop
nop
sbb
jle
cmp
stos
loopne
mov
and
enter
dec
outsb
push
mov
int3
nop
out
out
mov
insb
push
adc
push
cs
in
xchg
xchg
cmp
test
lret
je
xchg
adc
sbb
movsb
orb
pusha
adc
push
xchg
fdivs
dec
xor
pushaw
in
cwtl
xabort
andl
add
jp
sub
rolb
push
out
pop
je
dec
ret
add
and
adc
dec
add
adc
mov
not
jo
test
icebp
inc
sbb
loopne
ljmp
pop
cwtl
lret
ds
test
mov
push
imul
cmp
mov
fiadds
clc
dec
add
sub
add
in
mov
pop
mov
add
dec
or
jb
pop
push
push
mov
mov
fildl
push
dec
inc
dec
sub
inc
leave
ret
push
add
pop
sti
fildl
dec
ss
add
fisttps
add
add
lea
push
pushl
add
call
or
leave
ret
mov
jnp
dec
add
fs
dec
push
mov
push
push
add
add
push
loopne
lahf
sbb
push
call
outsb
rorl
fldenv
sub
inc
cmpsb
stc
sub
inc
push
mov
sbb
lret
pop
add
rclb
sbb
decl
sub
inc
mov
add
inc
dec
lock
out
inc
mov
movsb
ret
push
pop
jns
int3
addr16
add
push
lea
push
mov
out
pop
xor
mov
sub
inc
int3
lock
int3
incb
sti
out
pusha
add
inc
dec
sar
cltd
lcall
arpl
inc
outsb
push
arpl
test
xor
push
mov
outsl
inc
push
mov
dec
js
cld
fwait
mov
dec
fadds
pop
lds
cs
mov
add
inc
mov
decl
pop
cmp
sub
sub
mov
sbb
xor
dec
push
dec
ds
jge
xlat
push
or
xor
data16
add
dec
fcomp
fidivs
inc
dec
jbe
dec
push
push
dec
mov
pop
push
mov
inc
push
addr16
leave
mov
jo
jg
cli
dec
decl
jne
xchg
pop
inc
insb
je
mov
orl
insl
je
add
movb
lret
ret
mov
addr16
out
dec
push
xor
out
mov
fadd
jae
sbb
ds
mov
cld
jbe
rcll
decb
mov
shl
cwtl
inc
push
jbe
pop
xor
fiaddl
xor
lret
xor
pop
ja
push
rclb
push
cld
push
push
xchg
pop
scas
jge
pusha
add
inc
mov
dec
insb
mov
cmp
pushf
dec
stos
push
mov
push
push
xchg
mov
add
sub
ror
dec
ds
xor
push
push
pop
dec
cmp
xor
push
mov
test
pop
insl
jne
mov
dec
add
dec
xor
call
add
lods
mov
sahf
add
movsl
pop
ret
sub
or
xor
icebp
mov
xor
sub
in
movsb
data16
aaa
push
pandn
mov
mov
notl
outsb
mov
lahf
cli
rorb
nop
xchg
inc
popa
jb
fbstp
add
pop
and
inc
loope
pop
fmull
fidivrs
push
jbe
add
jo
xor
dec
js
ret
popa
jo
cmc
pusha
imul
push
imul
dec
adc
add
mov
add
push
jge
mov
mov
push
arpl
inc
nop
dec
cmp
pop
cmp
stos
js
jne
insl
into
into
push
pop
js
push
push
push
mov
xor
mov
lret
lcall
icebp
loop
fs
js
enter
hlt
cmpsl
aas
cld
jb
xor
inc
dec
icebp
ret
inc
jns
fiadds
push
inc
push
ljmp
stc
dec
ljmp
outsl
out
dec
lret
sub
gs
sbb
push
lock
xor
mov
ss
ret
clc
clc
adc
mov
push
inc
dec
inc
aaa
mov
ret
aas
push
ljmp
shrb
test
dec
sbb
jae
add
xchg
mov
inc
inc
fs
out
push
imul
jnp
iret
sbb
dec
dec
sbb
imul
setnp
mov
out
ss
pushf
add
push
popa
dec
inc
inc
mov
jmp
mov
ss
cmp
iret
xor
fwait
mov
dec
inc
xor
pop
sub
jb
call
dec
dec
test
inc
pop
int
pusha
test
jo
imul
addb
jbe
inc
outsl
rol
add
pop
fsubrs
push
cli
ds
pushl
or
hlt
cld
jl
dec
stc
ja
ja
sub
mov
std
ja
repnz
jae
ja
or
ja
sbb
in
out
in
outsb
or
es
cmp
movsl
sub
and
ja
mov
sub
dec
jg
out
incl
pop
jae
mov
xchg
pop
je
adc
neg
std
out
push
ja
daa
roll
cmc
ja
adc
ja
ja
jb
jne
adc
divb
inc
and
shlb
and
in
filds
and
add
mov
jnp
and
fnstsw
and
xor
ja
cmp
or
pop
pushw
push
dec
pushf
js
nop
ss
inc
ja
ja
ja
cmp
ja
xor
or
mov
rep
repz
into
ja
xchg
imul
cs
pushf
out
pop
adc
movb
adc
mov
and
or
or
fs
adc
loop
jle
pushl
sbb
push
aas
add
aas
mov
push
pop
pop
ja
xchg
jg
mov
cmpsl
and
mov
fidivrs
clc
ja
adc
mov
inc
and
sbb
push
testl
xchg
call
ja
push
and
fisttpll
mov
jl
xor
jp
or
jp
movsb
mov
fbld
js
outsl
ja
mov
ja
fwait
sub
pop
sarl
adc
xchg
fnstsw
or
es
iret
sbb
ret
dec
or
xchg
cmp
xchg
mov
push
xchg
rcrb
xor
imul
dec
push
adc
add
adc
pop
mov
fsubrs
cmpsl
mov
adc
fwait
shl
pusha
ja
ljmp
xor
mov
add
call
mov
js
cld
std
aam
shlb
sub
pop
leave
ss
add
sub
mov
pusha
imul
mov
xchg
movsl
xchg
test
shlb
pop
fsub
cld
mov
add
js
loop
and
jg
rcrl
sbb
pop
mov
adcl
inc
idiv
push
fmuls
push
test
sbb
int
lock
add
mov
icebp
sahf
and
push
ret
into
sub
aam
cmp
lcall
ja
test
shl
jb
lcall
jbe
sub
pop
push
std
push
sarb
jnp
test
scas
sub
xchg
push
iret
jbe
xorb
pop
pop
sbb
inc
das
pop
adc
rorb
cli
adc
imul
scas
fsubrs
sbb
cwtl
push
daa
add
push
sahf
lcall
cltd
in
and
nop
loope
mov
or
popa
dec
mov
xchg
outsl
add
pushl
inc
or
outsb
scas
fidivrl
cmpsb
xchg
and
outsl
in
loop
and
cld
repnz
aas
add
lret
loopne
cmp
jle
out
sbb
je
imul
int
pop
pop
mov
xchg
cwtl
loopne
stos
adc
pop
test
int
sub
adc
lcall
sbb
mov
mov
adc
mov
lahf
enter
xor
pop
ss
lds
clc
cli
sub
jbe
cwtl
rcrl
inc
icebp
jbe
sub
inc
pusha
adc
ret
xchg
mov
subl
je
mov
xchg
dec
adc
loope
sbb
pop
dec
mov
or
out
insb
xor
xchg
loope
idiv
and
cld
xchg
shl
add
sarb
mov
sbb
xor
sub
in
neg
xchg
mov
mov
std
stos
and
or
sub
push
jge
in
orb
push
insb
jae
jno
or
pop
push
ja
mov
xor
jb
sbbb
adc
sbb
sub
pop
hlt
xlat
rcrb
or
or
daa
pop
xchg
clc
add
add
inc
mov
fwait
cmp
ja
clc
mov
mov
add
dec
adc
fwait
test
inc
cmpsl
addr16
push
sbb
cmp
cmc
cli
fst
ja
cmp
inc
mov
push
insb
sbbb
ja
mov
ret
aad
ja
mov
cmpsl
outsb
and
in
cmp
pop
movsl
mov
add
int3
add
out
jle
ja
jae
andl
xchg
add
stc
inc
in
nop
inc
mov
mov
adc
mov
push
subl
rolb
sub
into
insl
in
outsb
mov
push
adc
lock
mov
mov
clc
test
movsl
add
shr
lock
hlt
jg
push
out
ret
into
aam
bound
test
rep
or
sub
add
pop
std
lahf
or
add
push
inc
cmp
fstpl
mov
mov
push
ds
sub
jno
iret
xor
imul
mov
push
xor
push
filds
jg
popa
add
mov
and
ja
cwtl
pop
mov
call
xor
ds
jo
push
call
test
mov
scas
js
jecxz
or
mov
call
or
fmulp
ja
movsl
mov
add
cmp
add
int
scas
mulb
pop
je
mov
rorl
pop
fiaddl
xor
mov
jmp
out
inc
sbbl
lcall
sub
sbb
nop
mov
scas
lods
loopne
jnp
clc
cmp
fwait
pushl
cmp
ja
mov
mov
js
cmp
adc
outsb
cld
pop
mov
scas
rorb
out
sbb
roll
scas
inc
jl
jb
test
inc
xchg
mov
test
and
shl
inc
inc
push
mov
rcr
out
cmpsb
shrb
sub
add
mov
call
shr
sbb
push
mov
inc
sbb
out
pop
ss
or
inc
pop
jl
add
in
movl
mov
stos
dec
xchg
jge
xor
mov
inc
xchg
adc
mov
aam
fidivl
pop
xor
insl
xchg
lahf
rorl
ja
sahf
cmp
pop
jl
bound
add
imul
or
insb
incb
popf
ljmp
in
jmp
scas
push
fst
cmp
push
js
sub
jne
xchg
mov
cmp
cmp
add
icebp
sub
dec
pop
jb
mov
mov
and
xchg
shll
add
pop
lods
sbb
cmp
mov
test
out
mov
or
leave
pop
icebp
xchg
call
loopne
pop
bound
clc
push
stos
mov
cmp
adc
outsl
jl
loopne
jp
ja
mov
je
jge
sbb
ja
dec
add
clc
mov
pop
notl
out
push
std
imul
fcoml
push
test
mov
inc
out
add
dec
adc
faddp
xor
stos
push
sbb
pop
jno
jbe
ret
pop
dec
sbb
dec
jp
orl
cmp
xorl
loopne
outsl
dec
sbb
xor
pop
dec
and
pop
jns
rcll
out
or
jb,pn
mov
insl
xor
add
and
xor
addl
fsubrs
fisttpl
cmp
fidivrs
icebp
incl
divb
jge
nop
test
nop
inc
aam
xchg
out
je
push
adc
addl
sbb
ret
movb
loope
dec
test
push
sub
lock
ja
out
and
mov
pop
test
movsb
jae
mov
fwait
dec
in
ss
rolb
pop
dec
pop
fildll
inc
lea
jg
mov
push
test
out
mov
push
pop
je
rep
dec
mov
es
add
xlat
xchg
sub
stos
push
and
frstor
mov
out
xchg
jge
sbb
mov
ret
add
xchg
or
xchg
imul
adc
je
mov
cmpsl
das
jno
fidivs
push
add
shlb
fiadds
test
push
repnz
pop
icebp
adc
push
flds
inc
and
fidivrs
sbb
lods
jmp
loope
mov
mov
xchg
and
ret
xor
sub
ja
in
jge
fists
out
daa
cmpsb
popf
inc
mov
push
aas
pop
push
out
arpl
lock
jmp
xchg
daa
lret
jl
mov
test
adc
add
push
push
lods
insb
js
rol
push
aaa
data16
xchg
sub
ds
add
out
or
mov
xchg
mov
or
mov
or
mov
sbb
push
push
movsb
sbb
or
mov
inc
rcll
test
xchg
cs
lods
add
mov
aad
xchg
or
sbb
cmp
js
pop
js
or
data16
push
pushf
and
lcall
popf
lds
or
or
mov
mov
xchg
out
xor
lahf
sub
mov
outsl
or
mov
adc
sbb
push
pop
adc
clc
add
sub
lods
or
sti
out
subb
jmp
js
addb
sub
loope
push
xchg
adc
jnp
incl
push
add
in
sbb
aad
fsubs
add
xchg
nop
add
adc
adc
mov
add
push
mov
sbb
icebp
idiv
lock
dec
hlt
sbb
push
sub
or
or
fisttps
adc
fwait
and
xlat
arpl
call
or
cmpb
push
xchg
ret
cmpb
mov
jl
xchg
call
sbb
mov
mov
sbb
push
push
and
and
cmpsl
xor
sub
psubd
loopne
inc
icebp
sarb
data16
and
ror
push
std
mov
js
lcall
fisttps
out
mov
lret
pop
or
mov
adcb
std
stos
out
cmc
mov
nop
jae
fdivr
sbb
das
jbe
into
add
jle
cmp
xchg
insb
xchg
xor
inc
out
rclb
roll
jmp
orb
or
bound
jl
shlb
loopne
ror
mov
sbb
pop
fidivrs
ficompl
call
mov
call
mov
fdivrl
leavew
push
cmp
mov
fdivs
add
pop
in
mov
jp
fmull
push
inc
cs
push
sub
rolb
xrelease
mov
mov
cmp
int3
add
push
mov
mov
sarb
jnp
xchg
inc
sbb
cs
ss
cld
jg
and
push
dec
in
mov
mov
and
shl
std
aas
jp
mov
nop
cmp
jo
negb
jle
sbb
xor
out
mov
adc
sub
xchg
jbe
push
mov
mov
push
in
dec
sub
add
push
or
pop
pusha
cwtl
mov
add
insl
scas
dec
std
ret
fistpll
fsts
dec
cmp
les
mov
push
mov
call
fs
mov
push
movsl
mov
inc
inc
mov
stos
jp
incb
push
dec
out
xor
ja
dec
adc
addr16
daa
jge
addr16
add
in
dec
sub
das
jp
sub
movsl
sub
loop
pop
push
add
dec
push
insl
call
push
sub
lods
and
inc
push
insb
loop
and
aad
xor
pop
jmp
push
dec
push
gs
xchg
cli
shll
fcomps
mov
iret
in
call
and
ret
js
lcall
cld
cmc
jg
add
pop
lret
add
cmpsb
jmp
sar
add
cmp
cmc
cmp
rcrl
sub
sbb
cld
fdivl
adc
pusha
inc
xchg
and
outsb
mov
shrb
xor
hlt
pop
add
push
shlb
lcall
lock
mov
add
stc
sub
cld
mov
repz
push
jl
pop
mov
jae
sbbl
ret
jbe
mov
outsb
push
push
push
ret
mov
test
sbb
mov
decb
ss
js
add
ret
loopne
shl
inc
inc
adc
xchg
push
inc
push
add
mov
pop
jbe
loope
push
inc
mov
fistps
out
push
push
jb
das
je
push
add
add
shr
cmp
jmp
push
add
push
jmp
jae
clc
dec
inc
dec
lods
inc
cmp
fistpll
cmp
jno
jns
push
lea
cli
mov
mov
filds
xchg
gs
ret
inc
push
std
add
jle
sub
shlb
mov
stc
das
mov
dec
dec
dec
rorl
jae
loopne
out
pop
insl
dec
mov
imull
xor
pop
mov
dec
inc
js
inc
pop
add
pushf
inc
xorb
add
add
sbb
ss
fwait
or
inc
rorb
mov
mov
push
clc
dec
pop
dec
xor
aam
dec
push
dec
pop
rorl
dec
mov
enter
fmuls
adc
dec
ds
fisubrs
add
pushf
inc
sarl
insb
jbe
jns
mov
xchg
dec
dec
imul
ret
dec
imul
inc
or
mov
push
push
jl
xor
push
inc
push
add
and
call
inc
dec
mov
repz
jmp
mov
push
pusha
push
in
add
mov
fiadds
jmp
cmp
int
loop
outsb
add
imul
sbb
inc
gs
addr16
add
in
loope
add
xor
mov
push
mov
xor
xchg
mov
popa
xchg
shr
out
lcall
mov
fsubl
push
call
das
rolb
dec
push
je
dec
inc
dec
add
ret
fimuls
push
lahf
and
xor
lock
call
orl
dec
mov
add
mov
jecxz
jbe
push
rep
ss
loopne
insl
lods
mov
aaa
xor
push
insl
and
push
insb
dec
inc
data16
dec
jecxz
pop
add
jne
dec
aam
or
xorb
clc
inc
mov
push
bound
in
push
aaa
push
add
inc
or
loopne
add
sub
sub
in
sub
jb
bound
nop
enter
js
dec
mov
mov
js
mov
clc
loopne
sbb
cmp
gs
je
mov
cmp
clc
inc
push
xor
dec
addr16
imul
das
aaa
add
shlb
fs
lds
push
mov
push
jns
call
ja
push
inc
jno
and
sahf
jb
jne
fs
pop
inc
rcr
mov
jl
fs
push
mov
sbb
popa
cld
mov
push
data16
jp
cmp
inc
in
out
dec
bound
mov
stos
nop
cs
add
push
mov
push
in
xor
cmpsb
or
test
std
sbb
into
pop
rcll
ss
push
push
ficoms
jl
in
repz
clc
mov
cmp
xor
pop
or
add
adc
jne
rorb
neg
jno
add
push
imul
jns
insl
mov
push
lea
push
push
mov
and
xor
push
mov
loop
lret
iret
rclb
lods
inc
nop
gs
aad
decb
pop
mov
inc
push
fs
jl
bound
mov
push
push
lahf
fbld
sbb
out
js
dec
push
popa
arpl
pop
push
dec
dec
pushf
scas
idivl
mov
dec
rcr
xchg
mov
mov
ret
dec
jns
dec
addb
push
jb
inc
lods
mov
decl
or
out
pop
shll
xor
out
fisttps
inc
xor
ds
cmp
hlt
push
int3
inc
or
push
xor
pushf
jp
inc
pusha
add
sub
and
cmp
sub
push
jne
lock
inc
test
mov
dec
out
cld
pop
push
sbb
inc
ja
fildll
fsubs
dec
xor
dec
dec
pop
cwtl
inc
cli
inc
imul
add
pop
lret
ror
mov
add
mov
sub
add
inc
jne
push
jg
push
hlt
push
in
les
mov
shlb
dec
aaa
ret
iret
out
and
testl
or
add
aaa
dec
add
ret
pop
mov
cmp
fadds
dec
clc
push
rclb
mov
push
in
imul
or
sbb
or
inc
inc
dec
xchg
in
jns
push
push
rcr
std
faddp
push
btc
pop
pop
enter
ljmp
sub
je
out
enter
inc
ss
faddl
dec
inc
loopne
js
out
xor
xlat
or
sub
add
dec
dec
pop
xor
push
jbe
sti
into
in
mov
pop
outsl
jo
dec
mov
loopnew
sar
movsb
ret
add
xchg
ljmp
in
pop
sbb
push
cmp
dec
addr16
icebp
ss
inc
cmp
dec
pop
dec
xchg
shlb
sarb
or
cltd
push
loopne
pushf
push
roll
aas
inc
cmp
dec
mov
xor
pusha
adcl
idivb
dec
jmp
mov
and
lock
mov
xor
aaa
jp
xchg
lret
mov
icebp
cmp
dec
testb
jo
clc
dec
push
jmp
add
je
in
movb
lods
ds
push
das
pop
add
imul
dec
aaa
clc
pop
jle
out
xor
inc
dec
sarb
push
filds
idivl
xor
xor
stc
dec
pop
push
jp
shll
adc
ds
ss
jb
pop
jmp
mov
push
bound
jle
lock
fadds
data16
push
jne
call
and
lret
mov
mov
insl
dec
pminub
push
fwait
lock
fcomps
pop
or
imul
lahf
inc
mov
ret
jns
xor
ljmp
pop
cmpsl
stc
jbe
popa
pop
mull
sbb
xor
fs
xor
and
push
push
hlt
fadds
cmpb
data16
push
inc
xchg
cli
pop
inc
ret
mov
add
push
mov
scas
dec
clc
mov
mov
dec
cld
mov
ja
cld
add
adc
add
sub
insb
dec
jge
xchg
mov
shll
movsl
fdivrl
push
shlb
and
fidivrs
stc
test
rdpmc
mov
inc
dec
cltd
and
jns
bound
jecxz
jmp
pop
loopne
lret
fs
mov
testl
or
out
add
push
pusha
xrelease
push
lods
movsl
fcmovne
pop
ret
bound
sub
push
mov
or
cmp
hlt
ds
add
sbb
mov
mov
mov
je
sbbb
clc
and
repnz
mov
add
sub
ljmp
xor
jg
and
and
stos
xor
push
push
jecxz
shlb
js
inc
jae
mov
dec
or
pop
sti
dec
pusha
and
leave
or
add
fs
sub
adc
or
hlt
popa
add
mov
mov
and
aas
clc
cmp
sbb
insb
lahf
and
ja
fbstp
repz
sbb
push
in
imull
and
xadd
pop
ljmp
push
push
push
lcall
sub
dec
adc
aaa
push
pop
in
pop
xor
push
add
in
mov
jns
pop
and
inc
loope
scas
outsb
dec
insb
addr16
in
cmpsb
arpl
adc
and
mov
arpl
adc
sarl
mov
mul
stc
lods
shl
dec
pop
fiadds
out
xchg
out
or
sbb
shr
cmp
or
add
xchg
sbb
pop
add
stc
mov
in
stos
sbb
add
cmpsl
jbe
cs
lret
mov
inc
sbb
pop
sub
xor
sarl
mov
aaa
xlat
stc
cmp
cmp
test
mov
ja
push
cwtl
int3
push
cmp
or
pop
pop
or
fimull
aas
xor
shll
movsl
mov
jge
inc
daa
pop
adc
hlt
xchg
inc
fstpt
movsb
rolb
mov
dec
and
sbb
fsubrs
jno
push
pop
dec
or
fsqrt
dec
or
inc
pop
cmp
cmpsl
sub
ja
lahf
jmp
jbe
jl
xor
mov
imul
cmc
sub
cmc
cmpsl
inc
ret
jnp
mov
xor
sarb
test
leave
test
popf
or
lahf
mov
mov
add
xor
jmp
and
jmp
adc
mov
lds
xchg
add
lock
fildll
pop
xor
pop
push
rcrl
adc
jge
std
cmp
lret
push
pop
loop
iret
sbb
inc
in
pop
or
sbb
sbb
pop
and
cmp
icebp
icebp
jo
inc
push
ret
js
jecxz
sub
aaa
in
sub
mov
js
and
jecxz
sub
out
sub
add
loope
insl
ja
cli
sbb
fnstcw
mov
pop
jbe
push
in
adc
sbb
stc
xor
xor
pop
dec
jno
in
shrl
loope
dec
push
pop
in
orb
cmp
fisttps
adc
rep
lcall
xlat
pop
add
adc
arpl
rolb
pop
cs
pop
xchg
cmp
push
push
xchg
outsb
test
ljmp
stos
cld
add
cli
repnz
mov
pusha
or
daa
sub
mov
data16
xchg
loopne
or
enter
push
pop
or
jl
icebp
mov
or
adc
or
out
add
push
sub
clc
add
call
mov
push
loope
mov
cmp
lods
xor
sub
pop
push
jae
out
ss
push
pop
mov
aaa
aaa
push
push
pop
push
xor
sub
lret
insb
sub
pop
push
mov
rcll
dec
fimull
repz
gs
xor
test
shlb
push
sti
inc
es
bound
inc
xchg
out
push
mov
dec
pop
dec
jns
dec
dec
loopne
xor
bound
cmpsl
lret
gs
enter
cmp
clc
mov
add
jae
inc
push
push
in
outsb
xchg
fisttpll
add
mov
xchg
clc
cmpsl
dec
add
mov
clc
decl
call
dec
call
jp
call
jmp
xor
sbb
sub
aaa
dec
dec
cmp
push
push
dec
pop
adc
hlt
fadds
sub
clc
push
dec
add
mov
icebp
inc
mov
add
in
ja
out
repz
dec
faddl
push
jo
and
mov
mov
push
push
in
dec
shlb
sbb
mov
addl
neg
lods
xor
fcomps
dec
push
inc
shll
fcmovnu
scas
movsb
jne
cmp
dec
stos
jb
aaa
addr16
inc
pop
dec
push
mov
je
xchg
aas
add
push
scas
jge
sbb
xchg
add
fimull
fimull
mov
pushw
test
mov
mov
subb
inc
sbb
fdivl
dec
flds
enter
cwtl
sti
mov
push
data16
imul
out
inc
push
add
xor
test
jb
cwtl
mov
lods
xchg
imul
xor
popa
inc
dec
inc
rolb
dec
push
fwait
shll
je
mov
mov
xor
sahf
xor
lock
test
and
xchg
mov
pushf
fs
push
inc
pushf
cmp
sbbl
mov
push
test
cltd
mov
and
dec
mov
jae
lods
inc
dec
push
adc
fiaddl
fsubs
dec
sub
insb
jns
popf
mov
into
aam
pop
lods
mov
xor
fwait
rorl
sbb
inc
cmp
out
dec
in
xchg
jbe
adc
adc
ja
inc
sub
pop
dec
push
lret
adc
jle
inc
add
call
push
dec
pop
jbe
or
cmpsb
test
add
enter
je
rcrl
inc
jmp
enter
notb
testl
dec
cmp
dec
mov
inc
jbe
pusha
rorl
cmp
xchg
iret
jl
stos
cli
inc
push
insb
dec
icebp
inc
loop
outsl
xor
sbb
push
push
inc
dec
clc
adc
int3
mov
hlt
div
jbe
jle
lods
inc
push
dec
jl
push
dec
dec
sub
pushfw
mov
imul
dec
xchg
inc
dec
inc
lods
data16
add
fcomip
shlb
dec
dec
cwtl
outsl
inc
fdivrp
imul
gs
cmp
fs
mov
dec
out
out
insl
dec
popa
add
cmc
fildl
add
push
imul
rorb
jmp
inc
dec
inc
mov
dec
int
push
fldcw
xchg
cwtl
push
jne
inc
cmp
cmovo
rcr
dec
sbb
mov
inc
sbb
je
pop
rcll
jb
jl
aaa
icebp
add
pop
cmp
xor
xor
add
arpl
cmp
dec
dec
inc
cmp
mov
dec
inc
sub
popa
js
dec
les
dec
iret
popa
mov
out
or
push
jae
mov
pop
stos
dec
xor
out
pop
fs
dec
pop
push
imul
pop
ret
dec
cwtl
js
dec
cmc
push
sub
fsubrp
outsb
xchg
cmp
xchg
mov
dec
sarl
je
fsubl
jo
lret
inc
sub
stos
shlb
cmp
movsl
cmc
jge
dec
xor
jno
jl
mov
and
mov
ja
xchg
xor
cmpsb
pop
lods
inc
push
xor
repnz
repnz
jbe
lcall
inc
insl
rol
test
repz
jae
xor
outsb
mov
repz
ss
jl
push
sbb
or
out
xor
dec
inc
or
mov
or
cmp
push
ds
cmp
and
data16
add
push
call
push
lret
dec
hlt
popf
and
icebp
push
inc
mov
mov
imul
xor
sub
sub
pusha
pushf
clc
push
sbb
push
arpl
add
and
out
dec
xchg
ja
cld
xor
repz
push
sti
xchg
mov
xchg
ficomps
pinsrw
xor
punpckhdq
pusha
lret
sub
ds
push
or
aad
xor
mov
add
cmp
test
or
popf
repz
imul
jo
push
and
push
mov
pop
test
push
pop
pop
aaa
or
nop
data16
je
sbb
push
cli
pop
push
mov
push
scas
loope
mov
cmovno
mov
rclb
xchg
mov
adc
rolb
fisubrl
and
shrl
imul
es
mov
mov
cmp
ret
push
test
add
sub
add
pop
divb
or
movsl
add
cli
dec
setb
ja
sub
enter
add
imul
nop
adc
sahf
test
xor
scas
out
and
lods
add
or
cltd
inc
das
popa
iret
or
cmpsb
js
mov
rolb
mov
add
add
adc
push
or
sbb
mov
pop
sub
jnp
sarb
xlat
pop
int
icebp
cmp
lea
popf
xchg
adc
lea
xor
call
cltd
or
dec
mov
nop
jnp
and
sbb
cmp
xlat
jae
sahf
lcall
xor
mov
jb
pusha
and
cmp
inc
pop
jno
sbbl
dec
xchg
imul
imul
sbb
mov
fwait
loopne
push
add
inc
ja
dec
push
dec
sub
push
xor
push
mov
popa
popa
leave
and
cmpsb
jmp
mov
dec
cs
and
jae
add
cli
push
pop
mov
add
movsb
movsb
and
aad
xor
jb
xlat
loope
and
mov
mov
in
dec
sbb
sbb
pop
sub
xchg
mov
enter
pop
mov
push
xor
xchg
pop
arpl
mov
ja
ja
or
ret
inc
nop
scas
dec
leave
add
mov
cmpsb
mov
mov
negl
and
xchg
lods
cmc
cmp
test
mov
jge
pop
fldenv
movsb
mov
mov
sub
sub
mov
or
sarl
dec
rcll
insl
lods
scas
mov
inc
sub
mov
cmp
jle
cmp
push
sub
xor
jae
mov
pop
add
cld
or
xchg
xchg
mov
push
sbbb
jnp
scas
arpl
xchg
je
lcall
add
mov
out
mov
fsubs
or
out
sbb
hlt
jbe
movsl
push
sbb
hlt
mov
imul
jne
jo
pop
pop
sbb
test
lahf
dec
mov
cs
pop
loopne
add
xor
aas
xor
js
ds
repz
inc
cmp
inc
cwtl
and
scas
push
jge
push
arpl
aaa
stos
mov
scas
iret
pop
jno
xchg
sahf
std
cwtl
adc
push
xlat
scas
or
adc
cmp
cmpsb
mov
add
or
icebp
dec
add
iret
popa
push
mov
ljmp
ja
jne
and
dec
rclb
pushl
repnz
inc
mov
aaa
or
jno
ja
ss
rolb
sbb
loop
dec
dec
popa
clc
or
adc
mov
xor
nop
cmp
sahf
bound
flds
out
arpl
add
rclb
pop
mov
dec
cmp
outsl
xchg
mov
clc
xchg
jbe
arpl
mov
filds
push
into
flds
push
mov
xor
clc
mov
scas
loopne
jmp
insb
loop
mov
inc
ljmp
jae
addl
ret
jno
inc
pop
mov
das
rcl
inc
push
jb
push
fstpt
push
movsb
inc
fsubrp
push
pop
inc
mov
mov
push
push
inc
inc
call
sbb
loop
xor
or
dec
inc
cmp
and
loopne
iret
pop
add
push
iret
jl
jo
imul
cld
inc
repnz
inc
dec
inc
push
fdivr
xchg
mov
xor
inc
jb
insl
in
mov
push
dec
cli
cld
inc
push
jbe
and
test
rcrb
inc
dec
inc
inc
dec
ret
outsb
xor
cmpl
fs
ficompl
lock
mov
dec
popa
dec
add
push
outsl
inc
sub
out
dec
addr16
add
sub
inc
pop
sarb
popa
arpl
lock
ds
in
jp
push
jle
repz
inc
push
pop
push
ljmp
loope
inc
sbb
pop
add
hlt
add
clc
add
or
jae
xlat
arpl
pop
cwtl
push
out
rorb
aaa
push
in
roll
inc
out
or
sar
inc
xchg
push
dec
inc
bound
dec
mov
push
or
mov
fsubp
dec
pop
xor
jns
pop
imul
aam
inc
imul
aaa
xchg
push
jne
or
sbb
add
test
dec
je
std
xor
adc
fadd
je
fadds
xchg
dec
inc
push
and
xchg
lret
sub
imul
sbb
sbb
jnp
divl
inc
inc
jbe
rcll
dec
addl
sbb
lret
divl
ficompl
inc
arpl
push
out
data16
or
hlt
adc
push
push
pop
shrb
andl
dec
xadd
ss
shlb
aam
dec
shl
inc
push
sub
xchg
fcmovb
dec
jo
sub
mov
mov
lret
inc
sbbl
jbe
jae
fcmovnb
mov
imul
dec
cld
inc
popf
and
loope
push
mov
dec
pop
push
adc
push
mov
fs
mov
mov
fsubr
push
xchg
ret
cwtl
dec
lcall
mov
inc
fsubrl
bound
pop
lds
mov
ja
pop
out
cmp
dec
or
xor
loope,pn
fdiv
addr16
addr16
sub
adc
loop
and
pop
mov
push
repz
xorb
push
insl
pop
lods
mov
jns
mov
loope
loop
test
sub
loop
sub
out
ja
cmp
mov
and
cld
sub
jg
sbb
imul
ret
lret
xor
sub
loope
loopne
out
cmp
sub
push
and
xorl
xor
pop
clc
pop
jp
lahf
movsb
ja
jnp
or
int
jge
push
xor
jp
ja
or
jg
lret
in
out
subl
pushf
mov
add
ja
lock
loopne
push
add
stc
fstpl
ja
add
rcrl
xor
movsl
add
sbb
push
and
xor
pusha
in
cmpsl
outsb
dec
ja
push
inc
int
add
adc
inc
mov
lock
adc
xchg
outsl
mov
cmp
mov
xchg
ja
sti
popa
inc
jecxz
sub
and
and
xor
sub
ja
sub
fstl
aaa
inc
js
and
xor
test
std
aas
repnz
inc
shl
push
nop
in
push
xchg
syscall
adc
inc
ja
adc
popa
dec
adc
sub
cwtl
ja
pop
add
sarl
fdivrl
xchg
test
mov
xchg
push
mov
je
push
or
aad
push
dec
loop
inc
cmp
loopne
fmull
pop
or
cmpsl
sti
ja
les
mov
push
into
sbb
outsl
xchg
jns
sub
loop
jo
inc
jb
stos
test
pop
loop
mov
pop
lock
insb
push
subl
insb
and
rcl
inc
sti
ret
ja
pop
sub
and
jo
daa
xor
mov
lds
add
xor
je
adc
loopne
xor
clc
das
add
stos
leave
cmp
rorb
or
add
out
pop
adc
push
cmp
xchg
ja
testl
pop
dec
mov
xchg
mov
stos
xlat
fcoms
sub
mov
stc
in
mov
in
ja
movsl
and
push
hlt
insl
in
or
adc
xorb
pushf
addb
push
into
shll
leave
enter
mov
popf
lret
js
sub
popf
pop
lahf
addb
mov
cld
push
push
loop
jmp
pop
icebp
jae
jo
addr16
scas
fisttpll
sub
pop
push
inc
iret
inc
clc
mov
xchg
testl
sub
push
push
push
push
mov
mov
ja
xchg
adc
cmp
fnsave
sub
cmc
mov
mov
shrb
orb
orb
dec
nop
ficoms
outsb
cli
adc
jae
inc
test
sbb
or
ret
add
lret
mov
clc
loopne
sbb
push
jns
insl
out
pop
cmp
mov
rcrb
xor
clc
mov
adc
cmp
pop
lahf
jae
add
add
cmpsb
pop
mov
clc
out
lret
push
mov
push
sbb
add
shll
mov
ja
dec
cltd
xor
test
or
out
jp
hlt
xor
mov
fmuls
mov
mov
shlb
mov
xchg
out
jp
push
push
adc
push
ja
mov
xchg
pop
lock
movsb
scas
xchg
test
mov
nop
or
xchg
mov
adc
int3
cli
push
push
lock
pop
insl
push
scas
fcoml
sub
setnp
mov
xor
push
jecxz
adc
or
jno
jb
fcompl
cmp
jg
mov
adc
cwtl
cmp
mov
xor
cli
into
test
mov
aad
ds
pop
rorb
cmp
fmuls
out
fsubrl
pop
cwtl
adc
and
fstpt
sub
and
xor
mov
imul
push
pop
add
xchg
mov
subb
jecxz
xor
add
cmp
adc
idivl
mov
cs
mov
rcll
push
outsb
dec
jae
add
rcll
push
icebp
xor
push
cmp
push
add
or
jp
lds
andb
mov
dec
mov
mov
mov
inc
outsl
mov
adc
push
icebp
cmp
mov
mov
pushf
hlt
mov
ret
and
out
out
dec
sbb
repz
insb
popa
aam
mov
pusha
and
push
push
xchg
lock
pushf
add
sti
mov
mov
aam
loope
into
sub
dec
jp
lahf
shl
scas
js
loopne
mov
shl
mov
jo
lret
nop
mov
sbb
lahf
mov
sub
mov
and
cmpsb
fstpt
dec
mov
out
clc
pop
inc
stos
pop
jp
cmp
sbb
jb
sti
repnz
js
ret
call
fiaddl
out
outsb
das
add
push
push
or
sub
arpl
sbbb
fimuls
mov
or
pop
adc
push
popf
sbb
sub
nop
daa
test
dec
sub
or
adc
cmpsb
ljmp
and
jmp
xorb
stos
pop
sbb
ds
jmp
and
sub
mov
ror
mov
pop
jl
jmp
pop
clc
cli
pusha
mov
or
out
enter
push
loope
sbb
pusha
xchg
dec
push
inc
mov
mov
inc
ljmp
dec
ror
loopne
ja
rcll
test
sbb
js
pop
xchg
mov
daa
mov
pop
pop
and
add
sbb
pop
shll
leave
push
lods
adc
xchg
inc
in
mov
push
shlb
test
and
ljmp
pop
and
cld
ja
pop
push
cmpsb
dec
dec
mov
xchg
pop
shlb
sub
push
inc
mov
jo
inc
push
sarl
aaa
xor
mov
ja
xor
push
mov
xchg
inc
dec
mov
cs
mov
sub
rcrb
xor
es
lock
orb
add
mov
xchg
aad
xchg
inc
xor
xor
jecxz
pop
repnz
cmp
pop
mov
jo
insb
add
mov
enter
dec
call
add
aad
ja
enter
push
mov
add
aaa
je
fwait
inc
aam
jle
nop
sbb
pop
mov
xor
ret
cmp
add
inc
out
ja
lock
pushf
popf
mov
loope
data16
xlat
insb
loopne
cmpb
mov
cmc
xchg
out
inc
push
in
and
dec
mov
mov
inc
pop
aaa
outsb
ja
jge
daa
pushl
shrb
dec
push
cld
push
daa
jmp
dec
repnz
push
lock
enter
les
pop
dec
push
imul
sbb
and
add
xor
push
inc
dec
insl
adc
dec
push
stc
loopne
dec
cmp
arpl
add
loop
push
add
shll
dec
push
fldlg2
ljmp
xor
insb
push
stos
mov
call
aam
bound
adc
inc
insl
repnz
jno
je
push
and
into
pusha
repnz
xor
mov
mov
sbbl
sub
add
loopne
arpl
jb
inc
inc
sbb
xor
xor
rcrl
jbe
add
scas
lock
dec
sub
out
dec
insl
push
js
dec
ljmp
inc
into
dec
push
push
sahf
in
and
cmp
repz
jae
rorb
shlb
push
inc
xchg
fsts
or
ljmp
mov
cld
push
mov
inc
push
fisubs
xchg
jns
imul
add
sbb
pop
in
push
outsb
in
adc
fstps
jb
push
cmp
mov
inc
push
out
bound
push
lahf
ja
push
popa
mov
mov
jp
xchg
xor
mov
int
or
cli
mov
jecxz
push
xchg
sbb
aad
mov
adc
fs
out
call
cmp
icebp
ja
loopne
sarb
jle
cmc
add
xchg
and
in
sahf
push
mov
pushf
outsb
mov
pop
jl
adc
cmpsb
jmp
inc
lods
ja
push
jge
test
sub
std
sbb
jle
adc
aas
add
xor
movsb
xor
decl
adc
int3
movsb
cmpsb
cmp
jmp
inc
jmp
and
sahf
sbb
xchg
add
or
add
insb
call
sub
cli
push
hlt
scas
out
dec
repz
cmp
add
sarl
cs
sbb
cmpsl
sub
push
arpl
shrb
sbb
jnp
fnstcw
sarb
in
pop
inc
jmp
or
lods
scas
xchg
movl
push
clc
or
sbb
lcall
out
mov
cmpsb
inc
sbb
dec
or
add
jmp
movsb
sti
fistps
in
and
movsb
test
dec
mov
jo
shl
fdivl
rclb
outsb
push
mov
scas
adc
pop
incl
mov
arpl
inc
xchg
jb
cmpsb
add
cld
fmuls
lret
sbb
pusha
and
into
jo
add
int
mov
ret
sub
mov
mov
movsl
jb
jbe
inc
fdivrl
push
gs
sub
loop
cld
pusha
add
ret
mov
add
std
loopne
aam
daa
mov
fimull
mov
fs
pusha
sbb
and
andb
push
lock
scas
push
cmp
and
movsb
push
inc
ret
in
stc
pushf
dec
dec
cmc
inc
push
cld
dec
push
cmp
pop
shlb
lods
outsb
loope
stos
push
push
push
outsl
adc
fbld
push
les
cmp
je
inc
into
mov
mov
or
leave
into
stos
sbb
xor
jl
js
test
mov
pop
mov
inc
add
cmp
mov
incl
xchg
sbb
or
jmp
clc
jns
inc
rorb
insl
add
add
enter
or
int
cwtl
adc
or
hlt
fdivrl
cmp
ret
mov
jl
imul
and
cld
roll
mov
adc
adc
sub
sbb
fadds
pop
adc
jmp
sti
aas
adc
mov
clc
cmpsl
xor
cmp
fsubrs
imul
imul
xchg
inc
in
sbb
loope
mov
out
xchg
fucomi
popa
aam
out
mov
nop
sub
dec
pop
pop
sar
pop
mov
idivl
pop
insb
push
aas
push
sub
sbb
push
jo
loope
adc
cld
icebp
mov
stos
or
gs
push
inc
loop
popa
pop
pushaw
sub
out
loope
icebp
inc
shr
xchg
push
popf
push
rcrl
sbb
jl
popa
cli
adc
lea
mov
mov
mov
jle
aam
lds
mov
sub
or
push
enter
lock
push
inc
mov
je
fwait
inc
adc
hlt
and
ds
movsb
addr16
ljmp
cmp
jne
sub
loope
lock
xor
sub
push
cmpsl
sbbl
imul
mov
adc
adc
dec
or
clc
xlat
xchg
and
mov
mov
lock
push
stos
mov
ds
xchg
sub
call
lods
jecxz
fdivrl
shrb
stc
inc
insb
movb
ja
mov
mov
lret
mov
pop
bound
in
mov
cli
ja
in
insb
test
jno
jae
outsb
stos
sub
adc
jb
xchg
mov
cld
rcll
cmp
cmp
push
add
ds
js
dec
mov
jp
pop
cwtl
fiadds
clc
negb
dec
pop
out
call
mov
add
bound
and
nop
push
xchg
xor
ja
mov
push
pop
in
mov
dec
cs
ja
je
and
cmp
fsubr
cmpsb
loop
idivl
testb
ret
mov
xor
ja
xor
xor
out
stos
pop
jb
mov
pop
mov
lret
lret
bound
and
out
into
les
xorb
sub
out
mov
xor
outsl
mov
add
mov
ds
add
push
inc
jg
xlat
lea
mov
xor
xor
sbb
sub
ds
and
sub
repnz
jle
icebp
sub
sbb
ss
into
fisubrl
rcll
test
and
fwait
cmpsb
ljmp
addr16
fdivs
mov
lcall
adc
sbb
addl
lea
cmp
push
adc
sbb
mov
enter
js
inc
jp
sub
dec
cwtl
sbb
jae
ss
and
bound
or
push
popf
add
jl
pop
lds
addr16
push
add
loopne
ret
inc
push
leave
push
add
or
inc
push
sbb
add
andb
fs
ret
and
test
fsub
and
dec
dec
mov
ljmp
loop
mov
or
inc
js
stc
iret
xchg
hlt
orl
inc
dec
ficoms
adc
loope
xor
test
shll
aam
xor
and
pushf
in
insb
mov
cmp
xchg
shrb
addb
cli
pop
and
shr
test
add
aaa
dec
std
fdivrl
xchg
int
mov
pusha
mov
pop
push
sarb
xchg
dec
lahf
mov
je
rol
arpl
add
jb
sbb
movsl
push
pusha
fstp
push
fidivrs
out
push
jg
xchg
stos
push
jbe
add
xlat
add
aad
jecxz
pop
outsb
mov
xor
pop
jno
adc
repnz
repnz
inc
jg
pop
push
icebp
cmp
loop
mov
sbb
cmp
jmp
cli
cmp
push
xor
cwtl
lock
sub
jns
cmp
pop
rolb
sarl
adc
push
mov
clc
test
or
fcomip
cmp
data16
jne
push
mov
inc
dec
mov
or
cmp
test
xchg
inc
inc
jl
xor
inc
lods
mov
sub
inc
sbb
pop
cmp
push
rolb
shll
dec
inc
insb
ljmp
inc
xor
inc
pop
pop
insl
jl
aaa
jb
pop
insl
ret
xor
inc
test
inc
push
mov
push
jbe
icebp
adc
add
jne
bound
dec
outsl
jno
push
add
loop
rclb
cli
add
mov
aaa
inc
scas
repnz
add
jnp
adc
and
dec
dec
xor
and
pop
orb
mov
loop
cmp
push
pop
pop
inc
shlb
sbb
push
rcrb
sub
push
push
adc
dec
xor
push
and
inc
sub
jp
fwait
test
cmp
dec
xor
dec
cmp
jne
cmp
rcrb
mov
dec
cli
dec
and
jmp
push
sub
in
mulb
decl
iret
ds
add
dec
push
in
inc
adc
scas
jae
out
inc
xor
xchg
call
inc
push
dec
add
scas
je
xchg
test
test
push
insb
clc
out
fs
bound
outsb
push
jp
dec
test
sahf
push
fwait
sahf
mov
mov
add
xor
fwait
mov
roll
ljmp
and
add
repz
insl
and
inc
cld
or
arpl
xor
cld
or
test
mov
call
mov
imulb
add
cwtl
sub
in
jbe
jg
ficompl
jbe
out
push
outsl
mov
bound
scas
inc
popa
add
mov
and
mov
inc
jne
sub
test
lock
clc
or
repnz
push
jle
jbe
js
push
or
push
push
imul
push
sub
sub
bound
mov
ret
loopne
loop
fdivl
inc
dec
clc
xor
dec
les
movsb
adc
fldenv
cli
lods
dec
insl
fiaddl
dec
les
or
push
je
fcmovnb
into
add
popl
negl
xor
cmp
enter
push
mov
xorb
xlat
inc
mov
subl
fsubrl
dec
mov
xor
ljmp
inc
fnstenv
icebp
shlb
inc
fsubrs
push
dec
arpl
adc
fiadds
pop
inc
mov
imul
in
test
icebp
pop
mov
and
insb
mov
sahf
xor
loopne
add
nop
fmuls
lds
cmp
or
adc
imul
push
out
inc
rorl
add
dec
fs
inc
mov
test
into
add
hlt
pop
shll
mov
and
jo
xor
mov
push
fcomps
adc
mov
inc
push
sbb
cs
sub
call
scas
jae
jne
mov
popf
cmp
outsb
dec
or
push
sahf
mov
adc
nop
inc
das
push
movl
lret
push
aaa
scas
dec
outsb
xor
mov
push
mov
data16
mov
push
pop
dec
inc
les
xorl
push
into
add
mov
aad
je
aaa
dec
sub
mov
mov
xor
jns
jns
sbb
inc
adc
jmp
cmp
je
into
addb
call
mov
aam
push
inc
xor
mov
inc
mov
in
fwait
mov
push
dec
ror
mov
insb
jbe
repnz
push
adc
fwait
dec
aas
xchg
inc
cmp
lret
cs
adc
and
iret
and
add
inc
pop
xor
fcompl
popf
add
pop
pushw
and
add
push
js
xor
push
inc
sbb
dec
or
inc
xchg
ja
pop
imul
xor
adc
mov
dec
mov
dec
dec
mov
and
dec
sub
jno
or
jne
js
push
add
mov
rcr
pop
repnz
jbe
xchg
adc
push
pushw
rolb
sahf
xor
mov
inc
clc
adc
inc
fbld
adc
fildl
mov
push
sbb
sbb
inc
jle
clc
pop
jnp
icebp
inc
mov
xor
mov
clc
cltd
xchg
loopne
jae
dec
mov
shll
nop
fcoml
add
sbb
dec
fs
sub
rcl
or
sub
sti
jecxz
into
pop
inc
addr16
mov
mov
push
loopne
cmp
jp
jnp
and
mov
add
ja
lea
mov
mov
xor
loopne
cmc
mov
sub
js
adc
sbb
fcomi
sub
cmpsl
sahf
stos
ja
or
jg
lcall
cli
mov
jo
vhaddpd
mov
cmp
cmp
std
adc
jne
push
mov
sub
bound
mov
xchg
mov
fwait
popa
gs
add
push
mov
inc
clc
sub
movsl
push
leave
ja
dec
dec
mov
jge
xchg
sbbb
cli
sub
jmp
gs
push
push
add
mov
push
movsb
out
les
clc
lock
push
movsl
int3
dec
pop
jo
stc
dec
aad
pop
jno
adc
xchg
outsl
lock
add
push
mov
fadd
fisubrl
mov
stos
adc
cli
adc
aaa
outsb
pop
cld
in
popa
decl
ja
add
xchg
ja
jmp
ret
sbb
push
fwait
xor
inc
repz
aaa
icebp
ja
adc
jmp
out
clc
push
fsqrt
xchg
les
out
loope
sbb
outsb
or
adc
inc
cli
mov
and
mov
or
fcmovnbe
cmp
mov
pusha
push
decl
mov
mov
sub
nop
push
into
or
les
ja
ja
mov
scas
push
sbb
or
testb
mov
int3
mov
test
clc
rcr
cwtl
push
sub
lahf
push
data16
in
call
xchg
cs
stos
sub
ja
mov
jne
rcll
xchg
int
mov
cli
jmp
mov
lock
gs
inc
mov
mov
and
jo
adc
mov
cmp
setbe
lods
ja
cmp
adc
xorb
mov
jo
pop
loopne
pop
pop
stc
mov
dec
mov
sbb
fnstenv
mov
cmp
loopne
mov
and
mov
xor
push
push
and
mov
lock
mov
js
lds
sbb
aam
fisubrs
cmp
sahf
push
mov
clc
incb
shll
adc
aaa
add
faddp
and
outsb
sarb
mov
push
jbe
notb
cmp
cmp
pusha
fidivl
dec
add
sub
pop
cmp
adc
jecxz
xchg
jbe
mov
outsl
leave
call
adc
xor
in
push
xchg
lds
adcl
leave
bound
add
lds
ret
push
adc
scas
push
sbb
cmp
xorl
push
insl
push
insb
es
shll
add
je
add
xor
adc
push
xor
adc
mov
ja
add
shrl
movsb
cltd
inc
ja
sbb
xchg
clc
adc
jno
inc
lock
clc
insb
xchg
fisubrs
cld
insl
push
shlb
pop
icebp
addr16
mov
sbb
rsqrtps
movsl
jne
loope
ss
das
js
subps
mov
push
ja
int3
sub
orb
cmp
repnz
mov
ret
jg
and
lcall
add
cld
mov
movsl
ja
pop
pusha
sub
insb
fbld
cmp
sbb
sbb
xor
push
pop
or
rcl
push
xchg
mov
shll
add
inc
jl
cmpsb
arpl
inc
mov
xchg
mul
push
cmp
lock
push
and
into
ret
or
mov
lods
lods
loope
inc
xor
mov
repnz
push
mov
nop
push
mov
sbb
lods
testb
sbb
pusha
xchg
xchg
insl
mov
push
ljmp
dec
rcl
test
sbbb
push
cmpsl
xor
sub
pop
pop
and
in
outsb
push
lcall
ja
pcmpgtb
dec
aaa
push
inc
es
addl
jl
cmpsl
adcb
mov
pop
jmp
iret
ret
mov
push
in
sti
pop
pushf
adc
or
cmp
ret
out
mov
add
imul
mov
xchg
lahf
mov
lods
scas
cmc
stc
pop
pop
pusha
movsl
inc
inc
andb
out
mov
je
or
push
lahf
cld
add
fimull
xchg
sar
adc
ja
inc
xchg
push
repnz
mov
ja
jbe
lods
orb
stos
xchg
push
movsb
pop
cmp
jg
inc
std
add
out
cltd
aaa
mov
mov
dec
loopne
add
adc
dec
push
pop
rolb
decl
in
add
pushf
ljmp
arpl
mov
int
mov
es
push
or
adc
loop
test
out
pushl
mov
jecxz
lahf
rolb
xchg
in
movsb
pop
cld
sbb
pop
xchg
dec
add
sbb
inc
or
cli
out
add
xchg
out
ja
xor
fbld
and
add
xchg
adc
push
sbb
or
popa
dec
and
subb
fs
push
push
sahf
xchg
data16
int3
aam
push
outsl
mov
dec
popa
andb
mov
orb
mov
sub
mov
fsubrl
jo
mov
clc
lret
jne
mov
orl
in
hlt
cmp
push
enter
mov
inc
adc
or
clc
in
ljmp
inc
dec
adc
mov
pusha
mov
cmp
xorl
or
sbb
insb
xor
fiadds
sahf
mov
shlb
test
sbb
orb
jne
or
pop
jge
dec
or
rolb
imul
sub
jp
call
cmp
xchg
dec
ja
jl
or
adc
pop
imul
sti
mov
push
nop
and
gs
lods
cmp
push
push
xchg
mov
es
outsl
lods
add
add
mov
push
or
push
jl
adc
jmp
aas
jecxz
iret
adc
xor
pop
js
mov
icebp
outsb
add
mov
mov
lock
mov
jle
push
mov
repnz
in
sbb
movsb
call
cli
xor
jecxz
or
mov
je
sub
ficomps
es
incl
andb
fmuls
mov
push
push
mov
xor
outsb
adc
ds
pop
lods
push
push
add
or
ss
pop
lahf
mov
push
loope
movsb
or
loopne
sbbl
shrl
add
mov
iret
adc
mov
ss
add
rorb
mov
sub
sub
jbe
mov
fsubrl
fldcw
push
push
and
mov
cmpsb
inc
xlat
xor
andb
in
push
nop
enter
rol
or
xchg
sub
xor
js
jp
ljmp
push
inc
imul
push
push
lds
inc
dec
decl
add
popa
loope
ss
inc
addr16
lret
add
outsl
lock
jo
dec
cs
ss
cmp
pop
loop
inc
data16
int3
push
lea
and
jo
das
lea
sbb
ja
push
jo
rorl
jno
aad
inc
push
loopne
inc
cli
cmp
xchg
xor
pop
or
hlt
dec
adc
nop
add
js
pop
bound
in
sbb
mov
add
in
cld
mov
call
inc
sbb
push
std
mov
push
mov
ss
pop
add
or
clc
aam
insb
sarb
xlat
adcb
jne
pop
fidivrl
lea
scas
pop
loopne
aad
xor
pop
mov
nop
jb
push
adc
insb
mov
js
push
shlb
es
pushl
mov
sarb
jp
out
test
mov
cwtl
leave
sbb
push
jo
cld
push
jle
jp
mov
add
mov
into
iret
orb
repz
and
push
out
out
je
jl
inc
jg
jne
pusha
lea
xor
outsl
xor
push
ja
pusha
pushf
and
lds
xchg
loop
or
add
cs
xor
cmp
mov
xchg
in
test
std
ljmp
jp
iret
aaa
cltd
ds
popa
ljmp
push
call
mov
or
ss
inc
out
lcall
xchg
imul
fcom
jnp
sarl
ret
mov
fisubrs
xorb
fsubp
cmpb
ja
inc
mov
hlt
adc
or
xor
iret
in
fists
or
jg
clc
sub
into
ret
jecxz,pt
add
mov
test
dec
inc
aam
jg
inc
sub
adc
lea
int3
add
mov
enter
or
addr16
or
pushf
mov
enter
jmp
jg
mov
dec
ja
addr16
leave
push
clc
lock
xchg
ja
in
pusha
cmpsl
jle
add
sbb
das
cwtl
loope
xchg
adc
and
outsb
push
hlt
add
adc
outsl
add
cltd
pop
jl
das
pop
aad
cltd
loop
mov
call
mov
push
xor
pop
nop
adc
xor
movnti
adc
leave
push
sub
adcl
lcall
or
ja
jmp
pop
sub
and
sub
inc
lret
stos
lods
filds
sub
cmp
mov
and
inc
mov
push
mov
add
repnz
lahf
ja
jno
push
mov
add
inc
jp
lods
pop
jno
out
mov
in
or
add
jae
repnz
push
addb
clc
ja
xor
inc
repnz
mov
dec
in
idivb
xchg
sub
pusha
xor
pop
scas
ficoms
pop
push
push
stc
or
insl
cmpl
lods
paddsb
loop
jle
ds
das
icebp
push
mov
adc
add
mov
sbb
inc
adc
push
add
push
pop
stc
loope
insl
and
sti
aas
mov
js
je
inc
mov
push
loopne
incb
mov
pusha
dec
mov
sti
cmp
ret
dec
or
or
aaa
push
add
loop
fs
push
out
incl
in
cmp
sbb
xor
mov
push
jecxz
sbb
or
mov
add
xchg
js
clc
push
jl
jbe
jbe
outsl
enter
cmpsb
je
out
rcr
mov
mov
jbe
jle
or
jp
mov
ss
inc
pop
add
adc
adc
and
idivl
push
mov
xchg
or
stos
lea
mov
movsb
ja
mov
movsl
jo
hlt
pushf
je
cwtl
sbb
cmp
loope
insl
mov
ljmp
movsl
xchg
dec
ja
or
outsb
sub
aaa
pop
cwtl
sub
or
sub
xor
ja
repnz
mov
jns
loop
or
or
or
addr16
setne
pop
or
xor
iret
inc
rep
jge
imul
pop
sbb
test
call
int3
inc
sub
aas
jge
xchg
ja
outsb
and
xorb
and
loop
jns
sbb
das
push
cmp
sub
sti
fs
cmpsl
or
jne
fmulp
dec
loop
clc
psubsb
sub
mov
clc
inc
mov
cmp
jl
dec
mov
mov
icebp
push
out
insb
sahf
in
add
pop
inc
xor
test
stos
pop
adc
xchg
mov
imul
dec
shll
inc
insb
pushf
int
hlt
jae
jno
mov
sbb
push
std
and
cmc
clc
loope
call
push
xchg
test
cltd
and
pop
lret
push
jb
jecxz
fxch
es
fs
int3
and
int
mov
xor
or
hlt
test
mov
lods
inc
aad
loopne
scas
int
lahf
mov
inc
popf
ja
push
jae
mov
cli
fists
addb
xlat
jns
cltd
cmp
mov
sahf
into
and
mov
cmp
mov
mov
bound
add
push
addb
push
adc
int
sar
xor
call
or
js
xor
fisttpll
into
aam
fadds
xor
and
xchg
les
inc
mov
fs
mov
sub
sub
insl
sti
sbb
jp
sub
and
repnz
call
cltd
icebp
sbb
push
mov
push
push
aas
dec
pop
cmpsl
js
jns
sub
inc
je
dec
sub
rcrb
mov
cltd
cwtl
and
shll
mov
push
mov
xor
push
mov
fadds
xchg
or
in
clc
cs
out
inc
push
aas
xor
testl
fs
dec
orb
add
std
leave
xchg
sub
jnp
out
mov
repnz
jmp
es
rorb
mov
sub
mov
int
pop
movzwl
leave
jne
adc
test
add
mov
sub
ds
daa
mov
insl
ret
test
push
xor
jno
jg
cld
aam
push
mov
sub
loopne
or
and
mov
jno
add
inc
mov
int3
cs
xor
mov
add
es
sbb
test
mov
ret
rorl
jg
add
and
inc
and
push
out
sub
cmp
leave
sbb
ljmp
mov
ja
stc
jmp
jo
roll
dec
aad
mov
outsb
stos
sti
cwtl
mov
cli
adc
add
fdivrl
lock
jne
or
lods
les
outsl
movb
jecxz
repnz
inc
xlat
push
pop
jle
or
pop
lock
rol
rcrl
and
arpl
cld
cmp
dec
mov
push
fs
mov
sub
pusha
dec
add
insb
mov
mov
mov
jbe
jle
lods
call
jecxz
add
orb
jo
lea
jmp
iret
dec
pop
out
jnp
jmp
outsb
mov
das
dec
add
inc
mov
iret
ret
stos
dec
sbb
and
pop
icebp
ret
ret
cmp
outsl
pop
xor
dec
outsl
sbb
testl
add
mov
out
inc
mov
xchg
aam
imul
adc
dec
add
arpl
dec
mov
inc
add
jl
dec
cmp
pop
dec
add
testb
in
sbb
push
inc
fidivrs
push
add
and
and
sub
or
cld
adc
imul
rorl
dec
fsubp
stos
ret
sbbb
out
xor
dec
push
inc
jecxz
xchg
aam
mov
xor
jne
cmp
push
mov
jl
or
aam
add
xchg
xor
jmp
inc
outsl
xchg
outsb
add
ret
jae
add
mov
dec
aad
inc
jb
out
push
inc
movsb
mov
ss
loop
mov
cmp
adc
jo
add
sub
xchg
enter
jl
add
or
imul
sbb
scas
lret
sub
out
addr16
push
in
dec
ljmp
popa
push
incb
clc
inc
push
adc
cmp
inc
fidivs
cmp
and
xor
dec
xchg
push
dec
mov
inc
testl
or
add
enter
cld
add
les
setnp
cld
das
sarb
pop
pinsrw
mov
gs
imul
rorb
pop
dec
jbe
nop
xor
dec
push
cmp
mov
shll
loopne
call
cmpsb
xchg
lcall
mov
inc
in
xor
cs
and
ss
sarb
push
pop
pop
mov
fs
push
adc
push
push
imul
inc
push
repz
add
inc
dec
pop
push
pushl
inc
dec
ret
add
jge
push
pop
subb
icebp
add
cltd
jp
mov
dec
cmpsb
dec
mov
mov
mov
dec
outsl
out
js
push
inc
mov
loopne
mov
push
in
insl
ljmp
xchg
gs
dec
divl
je
add
push
and
lods
cmp
cmp
or
pusha
loope
std
or
aam
std
lret
push
js
dec
jne
xor
dec
iret
mov
rcll
jge
aam
dec
test
cltd
xor
addr16
lock
dec
push
fsubr
jmp
lea
mov
cli
mov
mov
sbbl
mov
mov
ljmp
mov
or
std
dec
sbb
sub
bnd
mov
dec
stos
and
aam
cli
push
out
fcomps
sub
lret
sbb
popf
ret
adc
or
jg
sarl
pusha
jbe
cmp
ja
ds
std
fidivrs
pop
lahf
mov
inc
pushl
xchg
scas
jns
push
mov
inc
arpl
call
inc
fsubl
xor
and
data16
ret
cmp
cld
push
movsb
dec
sub
xchg
dec
les
jnp
clc
scas
ret
jle
sub
js
ja
addr16
into
repnz
lcall
fcoms
adc
mov
movsl
notb
es
jmp
inc
add
cmp
jmp
jmp
fildll
hlt
mov
xchg
mov
cli
movzbl
inc
push
repz
mov
add
cmp
cmp
cmp
or
add
xchg
imul
popa
cmp
mov
cmpb
loopne
mov
jb
jo
decl
stos
mov
sub
and
popf
add
mov
mov
lea
adcl
xor
cmp
dec
repnz
pusha
pop
int3
inc
jg
inc
pop
sbb
pop
stos
mov
sbb
decb
sub
in
push
rorl
lcall
sar
push
iret
mov
mov
adc
call
iret
lock
inc
push
insb
jno
dec
ja
mov
and
xchg
stos
pop
ja
test
hlt
jne,pt
add
sub
xorb
dec
mov
jns
js
outsl
shr
lock
sub
std
add
sub
adc
movsb
adc
cs
pop
lea
in
mov
jmp
jecxz
jle
mov
xchg
insl
aam
push
stc
cwtl
out
in
out
sahf
paddd
decl
out
push
ja
jo
ljmp
ja
push
push
ljmp
ss
jp
dec
sbb
and
push
jl
jecxz
add
lahf
push
push
jbe
pusha
sub
lds
movaps
xchg
push
pop
fdivl
ja
push
inc
inc
mov
ror
out
les
icebp
lea
lret
cli
mov
cmp
les
mov
cmove
pop
ja
sbb
xchg
adc
cli
pop
addb
or
jge
int3
loope
stc
xor
notb
push
fsubl
adc
sahf
icebp
sbb
ljmp
les
xor
xor
fists
dec
cmc
add
push
lock
mov
jbe
or
or
pcmpeqd
jg
xorl
ja
and
mov
aad
hlt
call
dec
push
addb
cmp
or
shlb
push
pop
and
dec
and
test
ja
js
inc
lods
pop
sbb
inc
cli
sarb
lahf
adc
mov
cwtl
out
bound
dec
orb
dec
cmpsl
cmp
daa
inc
jb
add
and
adc
subb
sbb
adc
in
ds
ja
bound
adc
cmp
dec
nop
pop
fcmovu
in
rcrl
or
orb
jecxz
adc
push
dec
sbb
cmp
mov
ljmp
push
je
dec
add
xlat
sub
aaa
pop
into
flds
clc
mov
xor
xor
cltd
pop
sub
sub
adc
sub
ficoms
sbb
roll
pop
or
mov
fcmovnb
in
mov
movsb
adc
ds
add
les
ja
inc
pop
lock
or
stc
sbb
cli
lock
push
push
mov
ret
sub
jmp
movb
inc
inc
roll
int
mov
das
push
dec
int3
insb
fisttps
data16
cmp
dec
inc
cmpsb
enter
mov
mov
ror
jle
push
sbb
sbb
inc
lret
lret
sti
sti
push
orl
pop
hlt
push
test
fdivrl
outsl
jmp
movsl
mov
mov
mov
fiaddl
stos
fstpt
aam
sub
dec
or
faddl
mov
and
gs
sahf
sub
arpl
mov
repnz
adcl
mov
pop
aas
jecxz
lcall
cld
jecxz
push
ficoml
mov
loopne
push
xchg
hlt
clc
sbb
mov
xchg
in
outsl
fistpll
add
xor
shll
hlt
stos
pusha
ja
mov
aad
and
lret
arpl
aaa
cmp
sbb
cmp
pop
daa
inc
sub
pushf
cmpsb
or
xchg
les
ret
int3
sbb
roll
add
add
inc
mov
and
mov
shl
inc
pop
sbb
orb
jmp
inc
pusha
add
xchg
fwait
or
ret
fs
and
mov
mov
cmp
sbb
cmp
pop
pushl
pop
sub
push
jle
mov
mov
ja
push
pop
or
aam
dec
jno
push
iret
movsl
test
sub
pop
pop
les
cld
cs
ss
cmp
pop
aaa
inc
pop
inc
xor
ret
or
call
iret
jle
inc
sbb
and
dec
es
call
incb
lcall
cmp
incl
add
push
push
hlt
sub
fwait
or
or
clc
add
pop
les
jae
lock
jecxz
cld
push
fsubrs
sbb
in
adc
push
jl
movsb
outsb
bound
aad
in
ljmp
scas
inc
sahf
inc
adc
sarl
adc
js
pop
jne
imul
fs
xchg
mov
popa
xchg
sub
ret
jns
adc
popa
mov
jecxz
enter
jmp
dec
inc
ds
jne
mov
lods
mov
test
stos
cmc
push
loopne
mov
pop
popa
mov
clc
xor
jge
dec
call
shrl
jle,pn
adc
and
or
mov
aas
ret
add
mov
in
ja
loope
push
faddl
push
and
jmp
cmc
je
lret
add
sbb
std
andps
xchg
pop
dec
lcall
jbe
mov
adc
cltd
bound
jo
imul
cmpsb
mov
push
test
pop
jg
push
in
cmp
jmp
lcall
or
xchg
pusha
mov
cli
fwait
cmp
sarb
pop
shrl
sbb
sbb
in
cmp
xor
icebp
or
adcb
sbb
inc
je
inc
mov
sbb
sub
mov
aaa
ja
pop
mov
adcl
bound
xor
xor
stc
js
pop
shrl
cmp
lds
jge
add
fiaddl
push
out
mov
inc
cmp
rorb
sub
repnz
insb
pop
mov
jmp
dec
adcb
add
mov
fdivp
jg
cmc
pop
jmp
ja
inc
je
scas
pop
repz
sbb
imul
and
adc
test
movsb
pop
outsb
hlt
popf
aas
or
js
add
or
xor
fisubrl
cld
andl
jb
mov
outsb
dec
mov
test
js
pop
addr16
dec
popa
mov
jns
inc
adc
jbe
clc
popf
ret
out
jbe
add
mov
jl
dec
ss
xor
test
push
ret
dec
mov
enter
push
pusha
inc
loope
fmuls
inc
inc
cmp
push
dec
insb
inc
inc
dec
inc
pop
sub
in
mov
mov
add
rorl
clc
cmp
inc
and
dec
jo
or
arpl
and
mov
mov
pop
jecxz
inc
add
ret
push
mov
rcll
inc
and
sub
pop
ret
into
aas
pop
out
inc
ss
cli
push
push
fistps
jmp
dec
aaa
xor
js
push
mov
adc
inc
mov
push
push
mov
xchg
gs
inc
jne
ret
lcall
dec
addr16
jg
add
mov
fs
xchg
insb
add
mov
movsb
xor
xchg
push
adc
fs
xor
popa
mov
xor
jo
mov
jb
std
xor
jge
inc
inc
pop
addr16
push
outsb
mov
sbb
dec
pop
imul
dec
testl
pop
xor
ficoms
mov
cwtl
and
add
jp
out
push
mov
cmpsb
push
xchg
outsb
fcmovb
subl
sub
pop
mov
pushf
adc
push
push
cmpsb
jbe
push
cmpsb
xorl
jp
dec
adc
dec
jmp
outsb
cmp
or
inc
mov
test
pop
dec
mov
fadds
lahf
sub
jle
xor
or
pop
add
test
clc
xchg
aaa
fcmovu
push
ljmp
aam
pop
push
jns
dec
inc
pop
pop
test
ret
fs
popa
mov
cmp
add
pop
pop
imul
in
es
or
jl
cmpsb
loopne
inc
pushaw
js
dec
repz
movsl
aaa
arpl
adc
and
push
jo
dec
mov
notb
jg
push
in
imul
inc
push
push
dec
dec
shrb
ljmp
jle
jl
or
or
jbe
fwait
fs
add
lock
add
sub
mov
ljmp
ss
lods
daa
inc
je
dec
dec
dec
js
xor
aaa
fs
pop
shl
pusha
mov
fprem
icebp
rcrb
xchg
loop
fiaddl
push
rolb
dec
mov
lea
or
scas
stos
mov
aaa
lcall
dec
mov
cmp
aad
sub
rol
fucomi
je
mov
mov
fidivrs
outsb
mov
cmp
mov
sarl
jg
popf
cmpsb
pushf
push
loop
pop
fnstenv
xchg
clc
and
cli
adc
or
movsb
popf
adc
add
lods
sub
test
ja
mov
jg
add
xor
mov
or
sbb
pop
fdivl
mov
js
pusha
push
push
inc
out
add
test
adc
push
addl
stos
push
lret
pop
mov
out
xchg
jl
add
movd
pop
jp
mov
loopne
cmp
icebp
in
cmc
ljmp
sbb
out
movsb
dec
push
addr16
add
cld
popa
dec
jmp
push
mov
sub
cltd
movsb
xor
hlt
and
rolb
adc
mov
xchg
mov
mov
adc
jbe
shll
or
test
loop
lock
cmpb
add
sub
mov
movsl
mov
je
mov
pop
jne
ret
int3
push
jo
fbstp
inc
mov
loopne
inc
pop
ja
xchg
or
xchg
jmp
mov
sub
repz
inc
push
ds
ret
out
cmpb
mov
jno
popa
lods
push
mov
clc
adc
push
loop
push
call
jle
pop
es
dec
jmp
pop
pop
test
in
add
in
push
lea
and
popf
adc
and
sub
ljmp
sub
shll
sbb
arpl
dec
add
mov
out
out
add
cs
cmp
cmpsb
jmp
divl
or
daa
dec
dec
jge
stos
pop
int
movl
cmp
add
pushf
push
mov
sbb
outsl
push
pop
arpl
icebp
or
repnz
cld
sub
sbb
loop
call
cmc
or
jg
ja
mov
or
push
test
push
sbbb
popf
icebp
les
or
add
out
adc
int
adc
jbe
fdivr
addb
add
jnp
xchg
and
fucomp
cltd
and
ljmp
sub
xor
xorl
sbb
pop
cwtl
lret
rolb
mov
add
fwait
ss
scas
cmp
aad
adc
sbb
lds
push
call
xor
int
push
pop
int
push
cmp
loop
sti
aas
inc
xor
std
mov
loopne
test
ds
lret
sti
leave
xor
and
leave
jmp
jle
sub
jecxz
pusha
jl
movsb
sub
mov
pushf
push
stc
inc
xchg
xor
xchg
pop
ja
jge,pt
mov
pop
push
dec
fbld
or
xor
mov
add
clc
shrl
or
xchg
push
lock
add
sub
rclb
je
cmp
ljmp
xor
aad
movl
inc
xchg
pushf
push
bound
fwait
aam
scas
mov
xchg
not
lcall
hlt
shl
sub
stos
fcompl
popl
xchg
mov
andb
insb
sub
aas
sbb
ds
int3
dec
pushf
push
mov
mov
inc
or
addr16
out
mov
mov
jnp
addl
in
sbb
or
jle
mov
enter
loop
daa
push
pop
jmp
fwait
xchg
test
dec
push
xchg
sbb
jle
sbb
pop
fld
and
push
sbbb
ljmp
or
iret
pop
push
loopne
xchg
call
jbe
pop
hlt
inc
lock
cmp
push
inc
mov
mov
push
and
icebp
mov
loop
fldl
rolb
rol
cmp
ja
fcompl
dec
jmp
push
lcall
je
or
jbe
push
pusha
sti
mov
pop
sub
inc
pop
pcmpeqb
push
mov
sub
jne
sbb
pusha
xchg
mov
pop
dec
sbb
mov
bound
cmp
cmpl
mov
outsl
and
pop
mov
fidivl
jmp
dec
data16
fadds
ljmp
inc
mov
inc
or
loope
lahf
icebp
jecxz
mov
push
ret
inc
insl
mov
loopne
dec
adc
mov
ja
xchg
test
addb
sub
push
pop
movsl
aaa
out
and
and
insb
lock
fstps
inc
jge
lods
pop
inc
lcall
and
lret
mov
dec
or
mov
or
je
js
lret
pusha
std
inc
data16
add
pop
fnsave
dec
cmp
xchg
xchg
ss
loopne
xor
lods
fnsave
pop
mov
dec
inc
or
dec
mov
imul
movsb
out
test
shl
movsb
or
sub
pop
mov
iret
pop
add
xlat
mov
stos
cmp
jne
sahf
inc
or
insb
mov
xchg
jnp
adc
dec
cmp
push
mov
cs
adc
push
xchg
sbbb
and
test
jne
fxch
jb
xchg
add
stos
test
popa
ds
leave
insb
aas
jle
jne
mov
or
pop
and
mov
test
leave
pop
ror
fsub
xchg
popl
add
or
push
subb
ret
shll
push
add
or
loopne
cs
lds
sarb
sbb
dec
push
add
push
and
fcomps
aad
cmpl
or
adc
es
pushf
push
lahf
mov
adc
cmc
push
cld
xchg
jb
xchg
mov
push
push
push
mov
lods
or
leave
xchg
ret
ret
gs
jg
and
add
mov
lret
das
or
mov
test
popa
aas
in
inc
shl
incl
sub
cmc
out
pause
rclb
mov
loopne
subl
push
jg
jg
addr16
inc
push
add
bound
dec
inc
xchg
adc
mov
rcll
mov
push
xor
push
js
xor
add
imul
mov
cmp
add
inc
add
xchg
jns
jne
inc
xor
add
mov
jo
subl
in
pop
sbb
xchg
dec
fs
cmp
out
jns
pop
int3
jle
inc
and
mov
cmpsb
mov
add
dec
cmp
test
mov
mov
cmp
push
add
and
push
jns
or
push
adcb
mov
into
lret
test
test
push
add
out
aas
lea
push
inc
mov
dec
cmp
pop
add
rorl
out
imul
jecxz
inc
inc
push
cmp
jo
lock
and
push
shlb
xlat
mov
arpl
inc
mov
push
inc
outsb
mov
subb
in
pop
inc
mov
sti
inc
sub
xorl
jb
and
push
push
pop
cli
dec
xor
push
loope
ss
xor
addr16
movsl
xchg
mov
mov
jle
mov
je
dec
je
enter
mov
sub
repz
stc
jae
rclb
push
bound
inc
dec
add
lret
pop
int3
sub
jnp
cltd
dec
push
ret
pop
pop
mov
cli
and
cmp
shll
aas
lcall
addb
ret
add
clc
pop
add
out
add
andb
ret
jecxz
ret
push
push
fldl
dec
cli
outsl
xor
dec
inc
cmp
inc
fldl
dec
lret
mov
push
data16
insb
xor
test
fstl
dec
sbb
dec
jns
inc
inc
mov
into
inc
out
cmp
decl
and
arpl
add
lret
loopne
push
rcrb
add
pop
push
push
js
addl
mov
fildll
xlat
loope
sub
push
imul
roll
pop
mov
dec
gs
into
or
cmp
xor
inc
adcb
cmp
inc
dec
outsl
inc
inc
dec
pop
add
mov
mov
scas
inc
dec
jl
mov
push
outsb
jbe
fidivs
ret
lsl
inc
jno
mov
cs
fidivs
fs
cwtl
fcmovne
or
ljmp
dec
mov
pop
imul
xor
imul
enter
stos
add
inc
inc
insl
outsl
gs
inc
std
dec
gs
sub
adcb
xchg
je
xlat
loopne
addl
imul
xlat
dec
cltd
dec
inc
and
adc
add
mov
jns
jb
lods
mov
mov
adc
jns
jecxz
and
and
dec
test
push
adc
cmp
push
jmp
push
push
dec
pusha
std
imul
dec
pusha
cmp
sbb
add
jecxz
inc
movsb
inc
xor
leave
and
mov
addr16
jl
out
pop
jmp
fadd
inc
addr16
loopne
jp
mov
enter
jo
nop
inc
xor
dec
sarl
loop
dec
push
fsubr
outsl
xor
icebp
mov
cs
mov
cltd
movsl
cli
ret
loop
mov
push
std
mov
int
inc
inc
inc
inc
mov
shlb
pop
jbe
push
jne
push
push
scas
movsb
inc
sbb
mov
popa
ja
dec
inc
icebp
inc
push
inc
mov
je
fsubp
loopne
shll
push
lret
cmp
in
les
mov
inc
jge
jp
stos
add
outsb
call
cld
mov
adc
add
lock
lret
jg
loopne
jecxz
out
jl
sbb
cmp
addr16
aas
imul
add
or
aaa
sbb
xchg
lods
xchg
cmp
bnd
adc
push
test
dec
mov
jge
and
jne
cmp
addb
bound
sub
jo
jp
stos
xchg
jb
jne
sbb
lods
or
es
push
cltd
ljmp
rolb
mov
mov
bound
sti
mov
test
ss
mov
add
loopne
add
inc
sbb
popf
mov
mov
or
add
or
xor
outsl
fiadds
and
push
adc
pop
pop
or
and
outsl
mov
call
je
cld
sub
and
push
mov
ds
mov
cltd
cmpsb
sahf
ja
pop
sbb
ret
xchg
jecxz
xor
mov
inc
aas
dec
add
push
inc
dec
dec
add
pop
insl
pop
xchg
push
cwtl
icebp
mov
in
push
into
je
insb
into
sub
adc
lahf
pop
shrb
mov
sub
lods
xchg
or
adc
jle
pop
mov
test
insb
fucom
and
orb
cmp
fsub
sub
test
daa
ljmp
mov
push
sub
out
test
add
sub
incl
push
lock
mov
mov
push
xor
jo
add
or
xor
adc
xorb
sbb
inc
negl
int3
adc
shlb
add
lods
dec
push
add
stos
jbe
sarl
adc
jo
mov
outsl
je
stos
leave
dec
xor
or
les
jecxz
jne
es
pushf
cltd
cmp
mov
cwtl
add
add
shlb
cmp
dec
mov
movsl
and
adc
xchg
push
nop
loop
push
daa
rcrb
mov
test
in
fwait
loopne
daa
inc
mov
incb
aaa
inc
or
js
loopne
pushf
notb
xchg
or
rcrl
push
or
movsl
jnp
std
inc
imul
shlb
xchg
js
pop
fcomps
pop
loop
inc
inc
xor
sahf
dec
cmpsb
mov
into
inc
das
jg
or
aam
and
push
jecxz
xor
xor
sbb
cld
push
lds
sub
hlt
dec
and
push
push
mov
add
pop
push
sub
repnz
aad
icebp
sbb
xchg
out
aas
ss
jae
xchg
pop
xchg
test
jle
lret
out
push
mov
pop
stc
sti
push
js
add
popl
lret
gs
arpl
sbb
mov
lea
push
jmp
push
mov
fwait
test
cmpsb
sub
jo,pn
cmp
pop
pop
mov
sbb
sub
sbb
sbbl
cmp
lods
sbb
je
jne
popf
adc
es
lods
xchg
or
mov
inc
loope
or
sbb
pop
xor
lods
jl
jo
mov
dec
popf
add
pop
pushf
mov
lods
lret
cmp
in
addl
jmp
dec
scas
push
outsl
cmp
rcr
shll
adc
ja
std
fisubs
outsl
mov
fmull
jbe
or
add
push
hlt
mov
pop
ja
mov
mov
lock
mov
stc
loopne
lcall
movsl
rcl
pop
dec
jno
dec
or
sbb
add
test
sub
xchg
addb
xor
dec
dec
push
orl
lcall
aas
int
pop
in
and
sti
and
rolb
push
ficompl
cmp
push
out
insb
xchg
fidivs
loopne
repz
ja
cld
cwtl
mov
or
xor
es
out
push
mov
adc
mul
out
and
xchg
or
mov
xchg
jne
lods
pop
push
fidivrl
xchg
push
xor
lock
add
mov
push
pop
int
or
sub
clc
std
stc
pop
add
push
loope
push
incl
frstor
and
aad
mov
scas
es
cs
jl
add
mov
sti
sahf
cli
and
adc
xchg
das
mov
sbb
orl
push
mov
jns
xor
xor
push
push
loopne
sbb
jb
test
sar
leave
fcmove
pop
mov
add
jp
mov
lock
push
or
mov
pop
pusha
xlat
lret
test
scas
xor
push
xlat
dec
gs
lods
push
jg
mov
movsb
jl
mov
sbb
pop
jno
and
sbb
mov
sub
dec
inc
sub
dec
mov
clc
aas
adc
jl
jl
add
nop
out
jno
imul
insb
lret
dec
cli
lds
dec
jno
inc
add
adc
iret
nop
test
inc
add
ret
sti
sub
dec
jle
xor
add
cmp
outsl
outsb
pop
jo
stos
dec
jbe
add
inc
pushf
dec
dec
dec
arpl
inc
pop
loopne
dec
mov
stc
sub
xor
je
bound
imul
mov
dec
push
jo
inc
sahf
mov
xor
pop
dec
pop
ja
lock
xor
add
dec
mov
push
shrb
popa
push
xor
test
lock
inc
xchg
loopne
shrb
pop
fisubl
shlb
popa
pop
inc
dec
adc
add
or
push
push
in
call
out
cli
dec
push
rorb
daa
adc
push
mov
mov
movsb
dec
dec
daa
inc
inc
shrb
scas
inc
push
inc
and
pushf
das
clc
xorl
cmp
inc
inc
sbb
push
test
mov
inc
fs
ret
or
jle
or
add
test
pop
add
or
mov
ret
pop
int3
cmpsl
add
add
std
add
mov
dec
shl
fdivrl
daa
inc
mov
in
jl
movsb
daa
mov
dec
and
ja
jg
or
add
test
cli
roll
add
mov
sub
pop
dec
cs
inc
sbbb
dec
mov
out
cmp
int
xchg
cmp
adc
jbe
iret
push
loop
ficoml
imul
ffreep
pop
mov
ljmp
loopne
jecxz
xor
ljmp
mov
addb
xchg
shr
jae
jnp
pop
xchg
fwait
insl
jp
loopne
mov
xchg
or
pop
test
aaa
enter
mov
ficomps
fimuls
push
jecxz
add
or
in
or
hlt
and
mov
pop
push
sbb
mov
jl
neg
inc
mov
fsts
xorb
mov
and
sub
dec
ror
fs
out
sub
js
adc
pop
xchg
adc
or
mov
std
mov
cli
add
inc
cmp
mov
push
into
push
jge
xor
sbb
add
cwtl
in
aas
icebp
mov
sbb
mov
push
adcb
pop
push
cwtl
cmp
push
aad
jmp
and
push
push
and
outsb
incb
jl
push
adc
cwtl
dec
js
pop
pop
cmp
movsb
ljmp
lahf
shr
ja
add
sbb
leave
mov
testb
sbb
sahf
andl
xadd
push
push
ja
fs
push
jo
ja
loopne
stos
inc
data16
fdiv
mov
inc
mov
mov
pop
jp
xchg
add
pop
pmuludq
pop
cli
rol
cmp
pop
lea
xor
push
jmp
mov
push
mov
mov
es
pop
mov
mov
nop
mov
rcr
decl
lods
rolb
jo
dec
push
mov
lock
or
mov
int
or
sbb
test
clc
insl
mov
popa
repz
in
mov
jle
mov
cmpsl
gs
repnz
call
cltd
scas
imul
sub
push
notl
test
int3
int
mov
xchg
movsb
add
dec
xor
and
loop
dec
mov
sub
adc
push
cmp
inc
in
scas
out
ljmp
les
popl
mov
add
mov
jecxz,pn
loope
decl
out
pop
push
jnp
xchg
ffree
pop
pusha
mov
cmp
stc
or
mov
pop
sbb
dec
scas
push
popa
pop
jns
lock
adc
mov
dec
clc
dec
pop
ja
loopne
cmp
ljmp
cmp
gs
add
sbb
ja
add
push
hlt
adc
cmpsl
mov
mov
mov
mov
and
add
js
sbb
or
mov
inc
lds
and
sbb
sub
xor
pop
push
rcrl
jecxz
jmp
xchg
push
mov
xchg
jbe
mov
mov
lock
lcall
lcall
or
pop
pop
inc
fcomp
cmp
xchg
push
inc
pop
es
cli
jecxz
mov
mov
inc
jge
negl
mov
mov
pop
mov
sbb
mov
mov
outsb
and
and
dec
mov
inc
out
pop
mov
adc
mov
in
xorl
call
mov
subb
jno
cld
fbstp
or
lock
mov
inc
or
lcall
or
cwtl
cmp
enter
jae
xchg
push
sub
jle
cli
popa
std
adc
std
rcr
dec
lock
dec
xchg
xor
sbb
dec
fsubrs
cld
lea
sub
push
mov
insl
inc
mov
shlb
xchg
das
xor
mov
daa
mov
mov
push
cltd
hlt
rcr
adc
cmp
cld
mov
mov
sub
bound
fs
cmp
bound
xchg
incl
fildll
ljmp
sub
add
std
pop
mov
mov
lds
ret
push
ret
push
jg
fisttpl
sub
shlb
jecxz
mov
into
andb
je
scas
lock
in
cmp
test
subl
stos
aaa
mov
cmpsb
inc
xor
daa
push
mov
arpl
or
shlb
jns
nop
dec
rorb
imul
inc
pop
xchg
adc
mov
dec
aad
xchg
add
pop
call
arpl
scas
stos
lock
outsb
test
jp
xchg
outsb
int3
lcall
ret
fwait
inc
pusha
and
fwait
out
push
cmp
mov
fsubrs
fstl
sbb
stc
scas
out
jp
or
cs
cwtl
push
push
nop
outsl
sub
push
ja
popf
add
out
clc
xchg
fdivrs
inc
adc
jge
add
inc
mov
jo
push
mov
pop
push
ss
jp
mov
jnp
sbb
and
xlat
inc
mov
ja
cmpb
testb
add
ret
std
loope
dec
pop
xor
fistps
mov
push
movsb
push
stos
ficomps
in
cld
mov
jno
and
cld
andb
shrb
mov
std
xchg
lcall
xor
std
pop
push
or
and
mov
cmp
dec
rcrb
adc
js
jb
clc
popf
shrl
das
sub
fcmove
push
popa
adc
rclb
sti
fadds
cli
outsl
jl
dec
divb
and
or
aaa
mov
rcrl
jno
gs
dec
xchg
inc
std
ja
or
jne
call
imul
je
mov
cmc
aam
roll
adc
outsb
push
clc
add
xchg
push
mov
bnd
sub
jmp
insl
xchg
cmp
or
rcrl
add
jne
mov
sub
sar
xchg
inc
push
or
enter
les
ljmp
hlt
mov
lods
pop
pop
ja
ucomiss
dec
shlb
test
lea
mov
movsl
int
insb
iret
or
inc
jb
inc
push
pop
lods
call
js
cli
add
jg
mov
xor
cmp
test
addb
cmp
ja
shrl
push
mov
testl
sub
lahf
jl
push
mov
jmp
xchg
push
or
pop
sbbb
icebp
jg
or
ret
ja
ret
out
add
sar
pop
aam
addr16
movsb
lcall
cmp
push
pop
cmp
jnp
in
dec
xor
fists
add
icebp
loop
imul
sti
les
out
pop
out
cmp
push
push
ret
loopne
in
ljmp
movl
add
data16
mov
mov
rcrb
dec
add
inc
or
push
sbb
pop
lock
inc
xor
inc
pop
dec
push
add
mov
dec
sbb
lret
or
jp
orl
inc
inc
sarb
xor
dec
mov
mov
sbbb
movsb
addb
inc
jo
arpl
lret
clc
mov
test
inc
cld
sti
pushl
dec
dec
push
add
sub
cmp
jb
mov
sbb
rcr
or
xor
xchg
inc
les
push
add
in
jo
int3
bound
sbb
inc
xlat
mov
inc
adc
push
push
pop
imul
ficompl
aam
xchg
add
mov
jmp
inc
xor
pop
add
loop
mov
sub
cwtl
push
push
fldt
and
js
or
ret
push
addr16
bound
push
pop
adc
jns
cli
or
adc
addr16
sbb
addr16
add
test
or
sbb
ss
lcall
ret
pop
jns
dec
cld
gs
insb
arpl
mov
roll
fnstcw
and
push
mov
dec
aaa
mov
je
add
add
xchg
dec
arpl
or
cltd
jb
pcmpgtd
nop
arpl
fst
pop
fldl
push
fiadds
xlat
test
jecxz
test
dec
xor
insb
inc
jae
push
jo
and
push
dec
fimuls
push
cmp
jmp
fsubr
sti
ret
pop
test
inc
sbb
add
inc
scas
cmp
xor
sub
shrd
push
cmpsb
test
pop
andb
fildll
mov
xor
stos
ljmp
inc
push
fs
fisttpl
aas
icebp
sbb
popa
orw
add
cmp
and
outsb
std
aas
inc
xor
mov
push
push
adc
push
jbe
scas
leave
sbb
notb
add
fsubrs
add
arpl
mov
pop
popf
cmp
stos
je
enter
push
xchg
mov
push
add
jo
and
push
jge
mov
movsl
push
mov
enter
movsl
movsl
mov
pop
lret
ja
rep
xor
pop
popf
cmc
adc
jns
lock
or
or
fs
jo
aam
in
jecxz
mov
pusha
mov
movsb
jae
mov
push
nop
add
test
into
pop
inc
xchg
add
pusha
lods
jnp
push
incl
mov
mov
xlat
cmp
nop
mov
call
ss
repz
cmpsl
mov
dec
outsb
push
pusha
clc
scas
push
or
repz
push
adc
push
sbbl
pop
jo
leave
arpl
ljmp
sub
jo
lds
xchg
leave
mov
sub
sbb
push
cmpsb
cmpl
mov
mov
adcb
jecxz
icebp
out
sub
add
icebp
ret
jecxz
lock
push
mov
add
not
lret
cs
inc
in
xor
cli
ss
das
popl
xchg
imul
sub
or
jl
xchg
or
sarl
loop
push
ds
shlb
fildl
aam
shll
shlb
or
popa
mov
inc
enter
out
negl
sub
pop
push
fbld
inc
xchg
pop
pop
jmp
mov
dec
test
push
sbb
insb
cli
mov
push
or
pop
stc
jno
repz
mov
mov
ret
imul
aad
sub
lahf
outsl
cmpsb
xchg
pop
jle
fistpl
clc
cmp
mov
insb
sysret
cs
and
icebp
jb
and
gs
sbb
mov
sar
add
pop
push
rol
sub
dec
jl
sub
sbb
inc
add
lock
fcomi
xchg
push
call
das
mov
xchg
pop
je
push
or
and
or
ja
icebp
xlat
lds
jl
jg
jno
sbb
add
xchg
stos
xor
jno
adc
inc
pop
in
ret
dec
sahf
mov
test
or
pop
sbb
neg
dec
pop
mov
jns
scas
xlat
xchg
and
or
iret
push
cmp
ljmp
pusha
jbe
or
jmp
clc
jmp
inc
inc
cwtl
loopne
sbb
sbb
mov
lahf
sub
cs
mov
add
cmc
incb
mov
xchg
xor
ja
out
mov
sti
cmp
add
mov
js
in
shr
push
addl
sbb
test
fldl
loopne
cmc
or
jge
cmpl
rol
add
pop
dec
sbb
push
mov
and
jge
mov
add
addl
pop
jnp
or
sti
jns
push
outsb
fidivrl
dec
or
add
mov
and
hlt
adc
and
sub
mov
jmp
rolb
sbb
aam
add
ret
inc
rolb
out
pop
jbe
sti
orb
mov
and
popw
test
jge
or
add
pop
add
repz
mov
xchg
jne
push
jmp
pop
dec
xor
sub
mov
cwtl
shl
imul
push
arpl
jmp
aad
push
outsb
inc
mov
push
mov
cmp
adc
mov
cmp
jp
mov
or
rorl
imull
jb
pop
mov
jno
add
cmp
incb
setl
sub
inc
sub
push
dec
adc
lock
push
jge
push
lret
aad
mov
mov
add
aas
mov
xchg
push
pop
inc
add
push
push
xchg
xchg
mov
sbb
or
inc
dec
icebp
sub
icebp
aas
push
pop
push
scas
mov
leave
movsl
inc
call
inc
adc
int
ret
popa
into
ret
or
inc
mov
xchg
add
int3
or
or
rorl
or
add
adc
add
aaa
add
loope
dec
cli
dec
xor
jg
push
les
xor
xchg
ja
inc
dec
dec
add
inc
pushf
push
enter
jg
jns
push
push
push
mov
cmp
cmpsl
jb
cld
or
jns
and
mov
sub
jle
arpl
sbbb
ljmp
add
lcall
lods
pop
sbb
lock
aad
mov
sbb
in
shrl
cli
sbb
fdivrl
inc
xchg
addr16
sub
shll
sbb
fldenv
cld
add
ljmp
ljmp
sti
fisttps
sarl
decb
and
dec
jno
mov
mov
xchg
fsubs
and
pop
xor
in
rcrb
ljmp
cli
pop
mov
cli
repz
inc
cwtl
std
xor
fdivp
xchg
mov
or
in
mov
mov
pop
test
push
or
orl
and
clc
cli
mov
push
rcll
push
sub
icebp
sahf
pop
testl
mov
xlat
sbb
les
mov
mov
sbb
add
ja
movsl
push
jno
mov
or
xchg
mov
jmp
add
testl
push
mov
xchg
notl
pop
shrb
and
sbb
jo
pop
repnz
dec
pop
hlt
ja
and
rorb
loope
lds
icebp
pop
stc
cmp
std
xchg
dec
sub
cli
add
add
ret
push
push
or
add
mov
cmp
call
in
sarb
mov
adc
outsl
bound
push
ret
roll
imul
mov
jnp
shl
nop
cs
jle
sub
or
mov
lock
jle
std
adc
pop
mov
or
sub
js
lret
fs
sub
jo
pusha
shl
inc
loopne
sti
or
push
add
test
call
and
add
jg
mov
dec
cmpsb
sahf
mov
shlb
cmpsl
jno
clc
add
into
pop
pusha
and
pushf
sahf
rolb
adc
mov
pushf
jae
and
mov
dec
sub
add
ja
sbb
out
mov
clc
jge
ja
xchg
in
pop
adc
loope,pt
jle
cmc
or
outsb
in
mov
rcl
outsl
xlat
sub
mov
add
jo
push
jo
mov
in
loopne
daa
adc
jl
sbbb
je
scas
xorl
mov
shr
aad
dec
mov
pop
je
daa
lods
cmp
inc
fisubl
fcomp
loopne
mov
cmpsl
enter
imul
mov
rclb
jb
mov
inc
mov
pop
sub
sub
rcrl
out
dec
or
cmp
mov
je
mov
call
aas
ja
inc
or
add
inc
gs
sub
sbb
fsubl
les
loope
pop
pop
sbb
mov
or
out
mov
loope
ficoms
jo
and
scas
mov
mov
add
push
push
jle
int3
add
adc
mov
imulb
mov
dec
stos
and
adc
cmpsb
sub
popa
mov
mov
xchg
cmp
push
push
cmp
mov
scas
cs
adc
lock
lret
or
xor
push
and
or
lcall
ljmp
cmpb
cmp
fcoms
push
push
push
pop
hlt
inc
enter
lcall
sbb
neg
movsl
push
add
ds
sti
dec
js
xor
orb
sbb
add
xchg
sbb
outsb
movl
scas
jp
shll
adcl
mov
cmp
push
out
mov
daa
insb
cmp
lock
xor
push
adcb
ja
cmovns
pop
add
push
mov
movsl
addr16
rclb
cmc
outsl
cli
xor
loopne
daa
push
jo
mov
cmp
mov
pop
push
imul
pop
or
push
mov
mov
into
scas
std
xor
cmp
jnp
shlb
into
push
loopne
loopne
sub
adc
scas
push
mov
movsl
and
not
and
cwtl
into
in
sahf
jmp
dec
and
lahf
and
fildll
hlt
stos
ret
xchg
or
dec
jp
jbe
sub
jecxz
fadds
cmp
ljmp
out
sbb
clc
lods
mov
mov
xor
dec
sub
fwait
xor
pop
dec
inc
mov
movsl
pop
clc
pusha
add
push
popa
rclb
dec
jp
inc
adc
adcl
pop
sbb
aad
sub
push
lcall
ret
jg
inc
mov
test
and
stos
ss
lock
xor
sub
enter
idivl
out
lock
lods
xchg
or
pop
push
in
stos
andl
jmp
in
out
les
je
cld
mov
cmc
mov
dec
outsb
or
push
sub
xchg
out
inc
push
xchg
ret
mov
fisubrl
test
imul
fwait
xor
add
inc
pop
sbb
cmp
addb
adc
inc
ficomps
sbb
sub
mov
cmpb
testb
cmc
lret
addl
xor
push
test
xchg
lahf
lea
sbb
cmp
hlt
nopl
pop
dec
cmp
imul
scas
pop
in
outsb
cmp
in
cmp
pusha
adc
inc
pushf
call
jp
clc
push
clc
mov
lods
jo
xchg
sub
and
loop
add
pop
loopnew
mov
ja
mov
stos
mov
inc
shlb
add
jg
dec
push
inc
xor
dec
push
pushf
mov
mulb
adc
and
nop
xchg
cmp
fwait
xchg
jbe
icebp
push
add
sub
fwait
mov
mov
andb
mov
push
adc
ds
add
dec
das
pop
outsl
mov
in
cli
mov
imul
shll
jnp
jbe
dec
scas
ljmp
jle
das
xor
pop
jbe
outsl
cli
sahf
xchg
add
pushf
or
movl
outsb
stos
mov
add
and
cmpsl
or
cmp
inc
pusha
jle
loope
decb
lods
add
pop
adc
dec
cmpsb
mov
fwait
and
bnd
nop
cmp
jecxz
adc
mov
add
sbb
push
dec
or
or
decl
popa
sbb
nop
dec
inc
push
or
int3
out
push
jmp
add
or
popa
and
inc
adc
mov
jg
call
pusha
call
enter
cmpsl
xor
and
or
adc
lock
subb
cli
test
add
adc
stos
out
jo
insl
cmp
dec
std
sbb
and
call
lcall
pop
std
stc
add
bound
inc
and
ltr
or
xchg
mov
aad
cmp
ret
xchg
ja
cmp
xchg
std
bnd
cmp
dec
cmp
jecxz
cmpsb
data16
pusha
fcmove
test
mov
sbb
loopne
fs
fs
fcomps
add
lcall
jmp
dec
outsb
inc
ds
xor
jo
mov
mov
test
js
jae
loopne
and
je
xchg
mov
loop
mov
shrb
add
push
rolb
mov
dec
mov
lret
mov
push
js
stc
jb
dec
popa
push
jmp
les
ljmp
lcallw
or
test
adc
push
test
mov
xor
ja
or
lahf
inc
aaa
or
push
and
int3
inc
add
adc
push
cmp
sub
inc
jmp
mov
dec
inc
jle
clc
xor
or
loopne
sub
test
iret
and
cwtl
and
sub
rolb
inc
jb
das
xor
inc
jno
inc
add
ret
lret
inc
add
movsl
mov
loop
pop
dec
inc
mov
cld
xor
cli
adc
outsb
jb
je
inc
add
out
xor
loope
mov
stc
cmp
jl
mov
outsb
js
call
outsl
pop
jecxz
pushf
xor
dec
inc
jg
popf
or
lds
lahf
mov
ss
repz
add
repnz
popa
xor
lock
lock
xchg
pop
inc
pop
jbe
push
ret
jo
in
add
dec
call
mov
inc
lods
and
or
jb
add
lahf
mov
inc
je
mov
popaw
xchg
xor
inc
orb
outsb
and
inc
lock
mov
subl
cmp
out
cmp
and
lods
inc
sbb
jmp
jbe
jg
pusha
jle
in
inc
inc
jae
mov
push
or
inc
mov
jle
lret
xchg
push
push
es
cmp
cwtl
or
jo
xchg
mov
inc
nop
rolb
xor
cs
int
push
mov
test
inc
pop
adc
insb
out
in
cmp
mov
add
fistpl
add
je
push
xor
fs
add
dec
rcrb
xor
mov
xor
in
lcall
sbb
dec
jl
decb
pop
inc
inc
je
les
or
rolb
xor
jne
cld
xchg
orb
into
cmp
pop
cmp
sub
push
dec
dec
gs
in
imul
loope
out
mov
dec
bound
and
dec
inc
dec
out
ljmp
mov
fisttpll
cmp
aam
mov
push
push
test
sbb
mov
add
je
jecxz
push
jo
dec
pop
or
and
jns
outsb
push
cmc
cwtl
fmull
out
repz
cld
ljmp
dec
xor
stc
repz
xor
push
dec
insl
inc
pop
add
sub
xor
cmc
gs
xchg
cmp
pop
dec
jb
data16
jne
jl
insl
arpl
push
sub
mov
cli
xor
xor
inc
mov
jae
je
dec
add
push
gs
ja
dec
inc
loopne
push
shlb
aas
ficomps
mov
dec
push
int
aaa
outsl
dec
xor
cli
cmp
xchg
dec
lock
add
mov
sbb
jno
lret
call
daa
sub
aam
adc
inc
aad
xor
ds
iret
adc
xadd
sbb
add
aam
dec
loopne
mov
and
fstpl
ret
inc
push
inc
and
cmp
cmp
push
repnz
pop
jb
cmc
cmc
sub
xchg
sub
and
fimuls
and
push
push
push
pushl
push
dec
ja
inc
fcomps
pop
push
or
nop
repz
inc
dec
mov
flds
sarl
gs
or
push
jl
adc
ss
jmp
fadd
dec
fadds
sbb
je
sub
pop
push
outsb
push
imul
jno
mov
test
int3
mov
jbe
mov
aaa
cmp
mov
out
andb
insb
push
les
push
test
out
les
loop
shlb
call
xor
mov
dec
aaa
push
adc
xor
arpl
in
movsb
fisubl
inc
cmc
ss
adc
imul
xor
cmpsb
push
push
xlat
bnd
sub
pop
call
fsubs
je
add
jno
popf
sbb
sbb
cmp
mov
mov
mov
lahf
mov
inc
pmullw
fwait
cmpb
ss
out
push
pop
mov
push
outsb
push
ficomps
jne
mov
xor
das
jns
outsl
ret
pop
mov
inc
mov
inc
inc
sbb
pop
inc
loope
cltd
ret
scas
ret
ljmp
cmp
mov
sbb
jbe
dec
and
xor
data16
mov
cmp
ja
dec
dec
or
mov
mov
sbb
push
popa
outsl
pop
lahf
push
dec
addl
dec
jne
dec
ja
jle
clc
ss
bound
inc
add
dec
add
mov
sub
mov
dec
push
pop
and
cmp
mov
pop
add
push
cld
adc
push
add
xchg
test
cmp
mov
push
or
add
sbb
jmp
ja
xchg
in
ja
out
sub
jns
cmc
add
xchg
adc
add
mov
push
ljmp
jle
idivb
lcall
adc
xor
lahf
int3
fcom
mov
mov
cmp
and
xor
out
rcrb
clc
pop
add
sbb
sbb
ja
jp
ljmp
jp
pusha
or
ja
fwait
scas
shlw
sub
sub
mov
data16
ja
pop
adc
iret
add
adc
call
fildll
mov
xchg
into
xor
addr16
mov
ja
jmp
ja
pmaxsw
mov
xchg
sbb
enter
ja
daa
popf
dec
pusha
sar
or
or
pushl
inc
outsl
fists
push
into
add
pop
scas
mov
cmpb
mov
fs
cmp
sti
jecxz
add
dec
mov
pop
dec
lret
sub
inc
sbbb
cld
cmpb
adc
out
les
stc
xor
pop
jp
fisttpll
mov
int3
dec
jg
cmc
call
inc
das
outsb
cmp
add
lret
dec
out
xor
mov
clc
rcll
rol
xchg
jg
pop
xlat
jo
fisubs
ja
cmp
mov
dec
and
adc
inc
sbb
dec
add
add
sahf
pop
xor
xor
add
mov
and
dec
xchg
jp
dec
test
rcrl
outsb
in
ja
cmp
repnz
xchg
fs
jg
jo
jnp
ja
daa
lcall
inc
jg
push
xor
inc
sub
rcrl
or
sbb
das
std
adc
sub
xchg
in
aam
loop
or
xor
ret
push
test
es
decb
push
mov
cwtl
inc
xor
jecxz
les
ja
nop
xchg
mov
ss
xor
aaa
xchg
ret
ja
mov
cmpsl
das
ja
lret
push
std
mov
outsb
sbb
mov
cwtl
or
sbb
pop
add
int3
push
lods
mov
fcoml
jmp
lcall
lcall
insb
xchg
xchg
mov
mov
mov
imul
in
sub
sbb
sbb
push
lcall
sti
jo
add
inc
xchg
into
aad
shl
cli
movsl
dec
je
push
pusha
jge
mov
lea
push
mov
pop
pop
lret
orl
add
sbb
push
push
test
adc
add
clc
loop
ljmp
push
daa
aam
je
mov
jne
xor
out
lock
sbb
test
and
cs
les
sub
xor
call
inc
hlt
and
lahf
adc
ja
or
aam
or
and
roll
xchg
push
sbb
add
add
ja
xchg
pop
push
adc
ja
push
int3
jb
adc
adc
dec
mov
and
arpl
mov
adc
cmp
lds
fwait
sti
mov
jne
or
push
iret
test
mov
cmp
jo
fwait
push
mov
ja
call
jmp
daa
pusha
adc
scas
dec
fsubrs
xor
repnz
sub
daa
cli
stos
sbb
in
push
icebp
sbb
stc
fidivrs
mov
jmp
mov
rorb
dec
fistpll
ja
push
ret
sub
cmpsb
stc
stos
xor
pop
xor
add
jbe
rorb
push
je
pop
pop
xor
out
adc
dec
mov
mov
push
rcl
and
divb
movsl
push
cltd
lods
es
enter
mov
adc
add
add
addl
scas
xor
push
cmp
cltd
les
data16
fmuls
leave
aaa
sub
and
addr16
mov
fadds
and
push
je
dec
jg
inc
inc
aaa
fisubrl
in
mov
sbb
ja
outsl
mov
daa
jnp
add
mov
aaa
push
adc
cwtl
push
pop
add
add
sbb
push
test
mov
enter
testb
in
sub
jb
int3
push
fildl
add
mov
ja
mov
pop
pop
add
xchg
outsb
inc
sbb
push
push
sbb
sbb
cmpsb
or
icebp
xor
sub
sbb
loopne
loop
sbb
fnstenv
orb
xchg
pop
lea
inc
xchg
dec
lock
push
ret
call
lret
adc
push
jmp
mov
cmp
sub
jo
cmp
mov
cmp
fildll
pop
ss
add
movsl
hlt
mov
mov
sub
in
lock
outsb
test
repz
in
ja
arpl
pop
pop
fcmovb
jne
hlt
inc
pop
xchg
jbe
fildl
data16
cmc
stos
add
cmp
adc
loopne
inc
addr16
icebp
dec
ds
icebp
les
leave
ds
loopne
cs
fcompl
push
in
sahf
add
fistpl
ret
inc
fstpt
or
xlat
xchg
mov
pop
cli
nop
push
push
das
and
dec
mov
mov
xor
lods
sbbb
pop
lret
xlat
ds
add
std
pop
cmpb
sub
ja
repz
sub
push
and
ja
mov
andl
lcall
sar
fs
push
xchg
add
jnp
loopne
pop
jl
mov
jle
jmp
mov
xchg
popa
sub
sti
add
lods
aam
sar
jmp
xlat
ficoml
js
stos
cld
or
loop
ss
jae
push
xchg
pop
fnstsw
lods
inc
add
pop
jge
jmp
add
mov
cmp
jle
or
in
rol
adc
dec
cmpsl
es
pop
mov
mov
hlt
xchg
inc
fbld
mov
lcall
add
loop
or
clc
mov
cwtl
lret
cwtl
add
pop
shrb
push
xchg
loope
xchg
lock
enter
dec
out
or
stos
scas
cmp
ffreep
mov
rclb
or
fnstenv
call
xor
mov
jno
jmp
and
shll
sar
or
sub
loope
sbb
ja
mov
pop
imul
push
popa
sub
pop
clc
incb
fdivl
mov
out
js
xor
cld
les
loope
inc
sbb
mov
xchg
mov
mov
jae
faddp
pop
data16
sbb
push
testb
fwait
inc
pop
mov
dec
inc
add
add
aam
dec
or
sti
and
pop
addl
cmp
jle
addr16
push
sub
inc
in
xchg
inc
dec
xchg
add
inc
jo
inc
jecxz
test
ret
mov
inc
inc
or
hlt
xlat
scas
jbe
dec
popl
out
insb
outsl
or
push
clc
sub
int
push
rol
mov
jno
and
add
dec
loopnew
xor
testl
rclb
jbe
xor
sbb
push
inc
dec
pop
dec
pop
hlt
or
jbe
outsl
test
inc
mov
pop
sbb
inc
sub
mov
push
outsb
push
xchg
xchg
inc
push
or
pop
push
mov
cmpb
outsl
insl
cwtl
das
test
jb
insl
dec
adc
mov
push
sub
add
adc
popa
inc
subl
sbb
lods
dec
push
insb
mov
sub
and
xor
add
sbb
shrb
jo
mov
sbbl
xor
inc
ret
inc
pop
and
mov
add
xor
movl
lock
inc
ret
insl
inc
add
je
insl
test
mov
push
dec
sbb
xchg
repz
fldenv
adcb
mov
dec
dec
pop
rcll
mov
mov
or
and
loop
aad
or
dec
push
popa
mov
and
push
dec
scas
clc
jo
movaps
test
sbb
adc
movsb
out
rorb
js
dec
add
dec
cmp
xor
cmp
addr16
scas
pop
push
fadd
dec
cmpsl
sub
lea
sbb
je
xor
inc
sub
push
inc
dec
nop
cmp
idivb
push
pusha
jbe
js
inc
xchg
hlt
js
and
imul
mov
push
jbe
and
cmpsb
pushl
jne
xchg
cwtl
bound
cwtl
xor
add
mov
aaa
jo
movnti
out
test
xor
cmp
dec
inc
add
fsubs
push
cmpsb
pusha
and
inc
inc
fs
add
dec
data16
jnp
push
push
in
daa
add
mov
sbb
jp
push
mov
in
in
inc
cli
das
mov
inc
push
push
dec
rcl
pop
mov
add
dec
mov
int
test
mov
xchg
ret
rcll
insb
jp
mov
aas
divb
fiadds
xchg
jbe
and
inc
push
dec
push
jae
jb
outsl
xor
sbb
fnstenv
push
mov
adcb
push
ljmp
push
inc
aaa
out
dec
inc
dec
inc
adc
popf
push
sub
hlt
xchg
push
or
xor
into
stos
js
dec
mov
dec
mov
xor
inc
jae
xchg
sbb
dec
jbe
adc
sbb
imul
fadds
clc
jle
push
incl
repz
push
push
in
xchg
outsb
jp
ds
dec
mov
jno
xor
add
ret
dec
mov
cli
decl
push
mov
ret
dec
std
int3
cwtl
fs
iret
lods
jg
push
call
dec
ret
ja
rol
addr16
lret
dec
jno
jmp
inc
sbb
mov
cld
fs
dec
loop
test
dec
xchg
inc
and
icebp
dec
ljmp
stc
jecxz
jg
and
pop
inc
jae
int
pop
xor
lret
mov
mov
pop
or
in
inc
jl
cbtw
fs
xchg
data16
stos
sub
mov
xchg
out
add
jbe
addl
mov
mov
inc
jb
and
jb
pushf
push
pop
fldl2t
xor
lret
jno
add
ja
adc
mov
or
pop
cmpsl
sarb
dec
dec
fmull
js
in
lock
ljmp
scas
mov
sub
into
push
sarb
out
pusha
sub
xchg
fucomip
mov
aam
and
popf
inc
popa
mov
js
adc
sub
rolb
cmp
push
mov
mov
or
add
sub
pop
or
es
fwait
roll
mov
fwait
out
or
das
movb
mulb
push
movsb
sub
inc
inc
add
outsb
jo
mov
mov
mov
jmp
shl
sti
push
shrl
mov
repz
sbb
lcall
stc
mov
cld
or
enter
js
sbb
and
xchg
out
sub
cmp
dec
xorl
inc
mov
xor
pop
sub
xor
or
sti
jns
fistl
pop
mov
and
fnstsw
dec
and
jbe
xorl
inc
dec
or
mov
xchg
adc
movsl
jecxz
leave
xchg
pop
test
cmpb
adc
ret
inc
shll
testl
jo
das
mulb
inc
shlb
pop
nop
adc
pop
clc
cmpl
repz
jbe
xchg
mov
es
ljmp
gs
pop
mov
or
shrb
adc
pop
mov
pop
sbb
pop
jge
and
xchg
pop
insb
insb
sbb
sub
cmpsl
lret
cld
xor
mov
mov
mov
jl
out
stc
jae
pop
cld
or
sbb
sbb
subb
cmp
mov
adc
decb
xor
rcll
mov
jge
lcall
dec
es
or
cmc
sbb
and
rolb
test
and
add
or
ret
or
enter
daa
dec
xor
popl
movsl
dec
or
arpl
rcrl
pop
xor
pop
push
das
ds
sbb
outsl
subb
push
pop
mov
sub
bound
mov
add
pop
ret
xor
mov
lret
insb
mov
nop
xor
or
fwait
repnz
roll
in
mov
lahf
xorb
mov
push
or
inc
into
lret
icebp
aam
movsb
adc
addl
pop
movsb
outsb
xlat
dec
xor
mov
cli
scas
xorl
push
clc
mov
dec
sbb
push
out
ljmp
sti
sub
cmpsb
cmpsl
in
sub
pusha
xor
lods
es
loop
push
jno
pop
sarl
push
lcall
out
add
sub
test
xchg
adc
jge
insb
lds
addb
xor
adc
les
je
mov
cmpsl
cltd
push
mov
or
cmp
jbe
insb
mov
adc
adc
or
push
dec
add
sub
cld
jl
mov
sub
mov
lock
loope
incl
mov
cmp
loop
ds
or
sub
insl
out
cmp
xor
xchg
outsl
pop
cmpsb
cwtl
sub
adc
sahf
ret
adc
mov
mov
insb
cmp
push
clc
dec
fwait
sarl
adcb
jecxz
incl
nop
sub
sahf
add
adc
push
imull
rdmsr
fnsave
add
xlat
sbb
sarl
subb
mov
cmp
push
push
sub
js
aam
and
adc
ds
fstpl
jne
lock
sar
pop
ljmp
stos
call
push
clc
ljmp
sbb
test
aam
pop
in
fnstsw
jl
mov
jmp
and
test
mov
fdivl
jns
inc
movsl
and
orb
fcompl
lret
jp
mov
adc
push
or
and
mov
sub
xchg
add
ror
inc
dec
jmp
jge
rcrb
xchg
sbb
mov
scas
das
dec
aaa
mov
cs
sub
scas
xor
and
test
test
aas
cmpsl
dec
cmp
fbstp
xchg
dec
call
inc
mov
repz
mov
inc
pop
sbb
mov
fs
cld
sbb
or
insl
dec
and
stos
clc
sub
js
cmc
push
ja
cltd
mov
pop
pop
push
movsl
scas
mov
andl
add
iret
test
xor
pop
test
test
jno
mov
xor
push
push
mov
leave
push
inc
cltd
nop
or
xor
test
mov
adc
fwait
and
or
sti
or
jmp
mov
adcb
dec
push
and
dec
push
add
movsb
ljmp
icebp
xor
push
mov
add
push
dec
dec
sbb
ss
push
dec
mov
cmpsl
push
inc
add
add
dec
add
dec
dec
inc
cld
mov
inc
fmuls
icebp
pop
lcall
mov
imul
ss
pop
jae
int
mov
jl
call
push
imul
sub
les
xorb
out
lea
push
mov
xor
mov
push
jno
dec
inc
outsb
aam
les
push
push
insl
xchg
inc
rorb
pop
lds
push
movl
mov
es
dec
mov
jne
inc
inc
inc
mov
popa
imul
outsl
dec
aad
dec
addr16
outsl
and
dec
fsts
dec
inc
scas
cwtl
dec
es
xor
rorb
rolb
data16
sbb
insb
dec
lret
inc
mov
mov
mov
call
add
inc
mov
into
ss
jnp
fidivrl
fisubs
push
or
push
xchg
mov
cmp
push
adc
fisubl
push
loopne
jge
mov
mov
sbb
lock
testb
shlb
inc
lcall
jbe
aaa
imul
mov
push
xor
lock
pop
js
clc
mov
aaa
or
arpl
out
jae
dec
and
push
imul
mov
jbe
adc
es
cmpsl
lock
jo
or
ret
inc
lcall
orb
out
lock
daa
dec
dec
jno
or
rcll
rol
jmp
aam
push
rcrl
xor
push
pop
dec
addb
enter
dec
sub
or
pop
adc
repnz
popa
fs
inc
add
inc
dec
jmp
cld
push
mov
push
xor
popaw
adc
mov
push
ljmp
shlb
call
popa
out
jo
pop
sbb
pop
mov
shr
fs
ss
orl
dec
movsl
loopne
sarl
push
imul
out
dec
addr16
nop
leave
mov
aaa
imul
push
shlb
addr16
mov
popf
push
mov
adc
inc
adc
mov
and
ret
mov
push
mov
testl
mov
ss
or
push
dec
aaa
mov
repnz
inc
xor
in
fildll
pop
mov
aas
mov
or
dec
scas
pop
dec
outsl
adc
dec
fcmovne
lcall
std
mov
fidivs
adc
gs
bound
es
jmp
or
test
inc
mov
lret
xlat
hlt
push
push
and
sub
add
sarl
cld
pop
ret
cld
add
push
mov
movsb
ljmp
ss
je
pop
dec
inc
mov
push
popa
cld
nop
inc
enter
jns
data16
imul
jae
xor
inc
inc
ljmp
movsb
inc
push
jl
inc
outsl
and
in
iret
dec
arpl
pop
push
mov
push
jo
movsb
jne
in
lahf
test
sahf
fisttpll
rorl
jno
jmp
lds
mov
ret
cli
fs
ficoms
mov
mov
mov
pusha
ret
xor
fmul
push
xor
push
and
push
lret
mov
repnz
push
or
xchg
mov
push
inc
xor
inc
inc
popa
pop
sub
push
xchg
and
movsb
imul
pushf
fdivr
pop
or
xor
inc
into
jo
inc
repnz
mov
stc
inc
adc
push
or
and
dec
pop
jl
movsb
iret
xor
imul
rorw
imul
addr16
dec
outsb
sti
pusha
sub
popa
imul
subl
add
pop
inc
arpl
add
cmc
jbe
inc
das
ret
pop
std
add
dec
outsb
insl
imul
push
add
rorb
push
xchg
scas
sbbb
mov
mov
pusha
cli
mov
clc
jmp
and
pop
sub
std
add
jne
cmp
out
mov
push
mov
dec
aas
outsb
inc
mov
xchg
or
mov
dec
sub
jmp
das
lock
out
enter
jae
je
scas
jmp
mov
push
jmp
sbb
xchg
dec
dec
dec
insl
stc
dec
jae
ret
sub
je
xor
xor
shlb
arpl
gs
dec
sub
xor
dec
xor
pusha
pusha
insl
fs
decb
repnz
addr16
addr16
pop
mov
es
jns
into
ss
xor
hlt
or
jb
mov
popf
pop
inc
ss
and
mov
push
rclb
jl
in
sub
push
aad
add
movsl
std
fisubrs
je
push
aaa
push
scas
mov
dec
mov
imul
add
ss
rclb
jmp
sarb
dec
popa
pusha
and
ret
out
js
dec
dec
dec
outsb
ret
je
sbb
imul
lret
lock
xor
fimull
add
add
jb
outsl
inc
cwtl
mov
mov
lods
cltd
rorl
xor
sbb
xchg
inc
js
clc
loop
jge
lds
jnp
ret
inc
push
xor
add
mov
push
imul
enter
les
xchg
dec
or
es
mov
mov
sahf
push
int3
push
xor
inc
dec
test
ret
mov
push
add
inc
sar
pop
pop
and
jne
jb
adc
add
js
inc
adc
and
dec
fmuls
xchg
xchg
add
pusha
je
outsl
fidivrs
adc
repz
push
pushw
lods
xchg
or
test
aaa
insb
adc
es
xor
mov
repnz
inc
cli
xor
movsb
imul
addr16
xor
sub
dec
arpl
cmp
add
mov
lds
ss
jmp
push
es
dec
loop
jl
inc
sub
ret
dec
push
pop
inc
inc
pop
insb
les
cmp
add
mov
adc
jmp
adc
int3
inc
arpl
cmp
or
push
xor
into
lds
push
dec
cmp
mov
push
mov
cmp
imul
cs
push
adcb
stos
mov
call
addr16
call
mov
push
push
cmpsl
sti
dec
addb
sbb
xchg
dec
mov
imul
ret
aaa
pop
test
call
rcrb
lahf
pop
mov
mov
clc
dec
and
popa
dec
bound
fnstenv
add
test
aas
add
pop
shlb
mov
inc
xor
and
movsb
add
xlat
or
xchg
push
push
rcr
cmc
ret
pop
rol
gs
mov
in
jg
adc
call
cmc
jmp
aas
clc
and
xor
inc
dec
jbe
jb
in
std
frstor
push
xor
sbb
inc
push
push
xchg
sarb
and
add
dec
jne
inc
fcomps
jno
movsb
fidivl
dec
jo
add
inc
jbe
xor
add
push
in
dec
cmp
mov
enter
mov
add
jb
push
js
bound
loop
mov
push
dec
test
cmp
inc
inc
push
push
mov
sbb
add
lahf
xlat
push
pop
sub
mov
jno
ffree
push
mov
adc
lock
pop
jno
in
inc
dec
out
dec
push
ss
mov
lods
les
cwtl
adc
lods
lahf
sub
mov
jns
loopne
iret
add
pop
xchg
imul
ja
inc
dec
js
insb
dec
inc
push
add
mov
fisttpll
xchg
arpl
xor
xchg
aad
jo
inc
mov
test
gs
fs
cmp
inc
push
loopne
pop
mov
add
xchg
cmp
inc
sbb
bound
or
push
inc
xor
adc
mov
jl
push
and
jp
jbe
out
add
das
inc
roll
xor
inc
dec
push
push
pop
and
lea
push
outsl
push
push
jns
xor
dec
inc
xchg
ja
aad
mov
adc
mov
dec
push
jmp
icebp
into
inc
xor
out
or
lds
xor
xchg
xor
addl
dec
cmp
mov
cmp
aaa
push
inc
lock
xor
addr16
dec
aas
mov
xchg
jno
fwait
mov
cmp
loop
jl
sub
dec
push
xor
inc
clc
cwtl
js
out
push
push
inc
inc
incb
jp
pop
pop
sbb
and
lahf
xchg
add
mov
xor
cli
outsl
ficoml
mov
in
mov
sahf
loop
xor
or
mov
jae
daa
sbb
pop
enter
mov
bound
push
add
inc
addr16
and
adc
loop
fdivrs
data16
es
pop
cmp
sub
mov
addl
cld
loope
xor
push
dec
push
test
movsl
jl
mov
push
add
pop
roll
or
inc
loopne
dec
mov
dec
mov
jo
outsb
fwait
jbe
dec
dec
out
dec
inc
push
dec
push
je
ror
pop
pop
jmp
push
js
inc
adc
insb
inc
int3
xor
xor
pop
xor
aam
xor
and
outsb
cs
popa
or
sbb
push
add
enter
cs
mov
xchg
jmp
les
data16
scas
pusha
test
fidivrs
jbe
inc
mov
loopne
jbe
dec
sbb
lods
pop
xor
sbb
dec
stc
dec
push
add
lock
sbb
xor
adc
test
jno
ja
push
lock
mov
iret
inc
jns
cld
push
movb
push
mov
int3
jl
call
dec
jb
ret
add
push
fmuls
or
lock
push
insb
jmp
rolb
dec
xor
mov
clc
outsb
rol
dec
jae
xlat
cltd
ret
push
outsl
and
imul
fnstenv
mov
and
xor
cmp
lret
cld
jne
insb
shr
xor
dec
push
add
scas
test
push
popa
push
and
xor
add
ret
inc
dec
dec
je
and
js
jne
sub
inc
or
mov
dec
inc
rorl
sbb
lahf
js
jns
je
sbb
push
lea
cmp
mov
in
cmc
adc
cmpsl
test
dec
sub
rcll
test
mov
imul
repz
testb
stos
add
stos
pop
jl
inc
mov
jecxz
adc
adc
jbe
js
mov
push
clc
adc
ficoml
xor
clc
inc
or
ja
jae
add
jp
icebp
outsb
dec
pop
addr16
xor
adc
outsl
test
push
je
inc
push
push
dec
lret
mov
sbb
jge
push
inc
jns
jns
data16
pop
push
imul
inc
add
dec
mov
jbe
dec
scas
pop
mov
adc
mov
dec
outsl
add
dec
dec
add
outsl
jae
push
jp
ret
sub
outsb
sbb
inc
ja
push
push
dec
cmp
cmp
shlb
push
and
rclb
addr16
mov
xor
and
aaa
iret
xchg
inc
mov
fldcw
mov
hlt
add
fwait
sbb
ljmp
imul
mov
shlb
dec
lret
adc
xor
inc
jp
dec
test
insb
jbe
xchg
dec
and
lods
adc
cmpsb
cmp
pusha
cmp
icebp
sbb
ficomps
sti
cmp
jne
push
push
and
test
and
sbb
mov
jns
push
ljmp
sbb
pop
jmp
inc
ss
pop
or
clc
push
js
fsubl
sub
popa
sbb
mov
mov
dec
push
xor
mov
jns
scas
cli
jecxz
call
test
and
mov
repnz
pop
jl
mov
dec
ljmp
push
sbb
push
sbb
addr16
xor
mov
das
push
dec
into
inc
hlt
jl
mov
push
pop
dec
pop
bound
into
mov
jbe
call
divl
rolb
lock
adc
rolb
pop
jge
dec
push
add
jb
jo
out
mov
loopne
bound
mov
loopne
inc
mov
into
mov
or
mov
mov
shll
dec
lods
jno
rorb
adcb
pop
stc
jl
sbb
add
pusha
jle
in
sbb
or
mov
andb
xchg
inc
push
inc
dec
test
aad
mov
enter
mov
rcrb
insb
dec
in
in
dec
mov
rclb
add
lret
pop
inc
push
pop
sarl
cwtl
push
jns
pop
xchg
mov
arpl
push
xlat
inc
push
pop
dec
sbb
dec
in
mov
or
cmp
mov
push
dec
insl
inc
js
into
dec
data16
jae
xor
cld
or
cwtl
fsubp
fldt
push
fs
mov
dec
inc
data16
or
mov
push
jecxz
and
xor
fld1
cmp
rorl
xor
dec
test
dec
mov
sar
dec
jbe
pushf
xchg
mov
inc
mov
clc
inc
xor
inc
dec
mov
fisttpll
ror
mov
xchg
push
fsubrl
dec
lods
popa
inc
mov
mov
cmp
mov
loopne
mov
dec
dec
dec
cmpsl
push
int3
loope
dec
dec
and
add
jmp
shlb
ficoml
adc
xchg
xor
je
test
imull
mov
fs
aaa
les
inc
jo
jecxz
orb
add
rolb
rol
xor
mov
mov
jb
add
push
mov
pop
xlat
lret
js
mov
fmuls
mov
push
xchg
push
jno
add
sub
lret
mov
test
ficompl
mov
xor
fs
sbb
data16
loopne
sub
and
fistps
flds
movsb
mov
dec
jo
or
addr16
adc
push
push
shrb
xchg
mov
mov
cmp
add
clc
lea
push
jns
notl
rorb
mov
in
in
pop
invd
fimuls
ror
fistpl
sbb
test
mov
push
push
jbe
in
pop
push
add
push
insl
jmp
mov
inc
stc
mov
jns
ja
call
loop
scas
les
js
push
scas
inc
cmp
mov
push
jns
cld
inc
lcall
and
pushf
outsb
mov
add
pop
xor
jne
fcoms
push
movsb
std
xchg
inc
sub
fcompl
sarl
ret
adc
test
and
push
testl
outsb
repz
push
lds
xor
ret
pop
push
pusha
lds
sbb
roll
pop
call
aaa
jmp
flds
movsl
sbb
adc
ret
aaa
cmp
cld
sub
outsb
xchg
and
test
cli
adc
sahf
mov
xor
or
xor
shll
xor
push
psubw
imul
pushl
jo
pop
or
aad
push
mov
bound
loop
ss
cmp
das
inc
inc
adc
xor
mov
loopne
pop
push
inc
rcrl
clc
push
jb
ljmp
insl
ljmp
lea
cmp
sub
enter
inc
gs
xor
imul
dec
ret
adc
loop
fdivrl
stos
insb
sub
iret
mov
xchg
sub
loopne
addr16
fisttps
shlb
bound
xchg
push
xchg
xor
jle
andb
or
adc
and
jo
push
notl
mov
incl
push
inc
sbb
test
xchg
icebp
fcmovbe
int
rcrb
popa
out
addr16
xchg
int
jmp
mov
jmp
push
push
imul
lea
pusha
cmpsl
pop
dec
lcall
fs
dec
jnp
jecxz
mov
add
add
push
call
leave
inc
xor
mov
arpl
xchg
test
test
iret
femms
ja
and
test
pop
shrl
xchg
mov
lcall
jo
xor
push
jne
ret
das
aaa
mov
cmp
push
inc
add
cmpsb
jp
fdivs
jmp
sbb
fldl
test
cltd
push
push
push
sub
popa
pop
mov
and
jo
inc
pop
lcall
sub
pop
pmullw
out
or
cli
and
sbb
lcall
xchg
icebp
rcll
adcl
push
in
dec
mov
sub
push
mov
lds
ja
xchg
jnp
push
cwtl
xor
jecxz
sets
mov
into
inc
dec
mov
jmp
add
sub
ja
push
push
shll
ja
clc
add
sti
sub
xorl
push
cmp
nop
jp
pusha
add
and
xchg
xor
push
mov
push
iret
mov
adc
clc
push
insl
dec
fldt
enter
aas
cmp
iret
ss
cmpsl
pop
inc
pusha
imul
icebp
push
in
inc
adcb
dec
imul
add
std
rcr
into
hlt
jno
lcall
adc
dec
add
rol
ds
or
sbb
cmpsl
pop
es
scas
aam
xor
xor
add
dec
fiaddl
nop
mov
jg
push
xor
aas
lea
pop
sub
aad
add
jg
in
xor
pusha
fstl
fwait
fwait
xchg
cmp
ret
or
lret
push
out
add
repnz
mov
lds
sbb
mov
push
add
cltd
add
daa
add
mov
push
add
sub
scas
jle
adc
insb
inc
jne
jns
imulb
sbb
shrb
sbb
push
jmp
sti
shl
ss
stc
add
test
popa
add
jo
test
jnp
mov
ss
repnz
inc
test
ja
cmpsl
cmp
cmp
fimull
dec
jb
inc
xor
push
ds
mov
gs
pop
jbe
push
or
push
sub
inc
push
mov
pop
pop
in
hlt
sarb
push
sub
stos
cli
fprem1
push
inc
xchg
jno
popa
inc
fs
outsl
inc
imul
cld
mov
imul
push
and
or
inc
jns
repnz
jnp
push
int
dec
cmp
aam
incl
sbb
push
mov
sbb
sbb
bnd
ds
inc
ret
dec
and
inc
int
js
cld
sbb
dec
les
fsubrp
push
xor
lcall
or
shrb
imul
out
mov
cmp
xchg
lret
fsts
lahf
insb
jb
or
jbe
lods
pop
add
xor
mov
fimull
les
cmp
enter
xchg
add
fadds
lcall
cmp
and
test
jnp
dec
andb
xchg
sbbl
jo
mov
jge
lods
scas
mov
and
lds
int
movsb
les
push
sbb
enter
lret
test
mov
xor
inc
xor
push
push
inc
mov
outsb
add
add
pop
or
push
inc
dec
adc
pop
andl
dec
or
mov
dec
xor
mov
cwtl
loop
fisubl
outsb
lock
mov
dec
push
add
loopne
scas
mov
jnp
jmp
pop
or
addr16
insl
pop
sub
dec
adc
xor
aaa
outsb
inc
add
scas
inc
push
jmp
aaa
cmp
insl
inc
es
lods
aam
sahf
mov
pop
inc
and
xor
cmp
dec
es
into
data16
mov
dec
data16
int
cmp
jb
roll
inc
bound
les
idiv
mov
inc
cmpsb
sbb
xchg
iret
xchg
daa
ret
push
push
das
add
add
hlt
dec
dec
adc
mov
mov
add
call
fisttps
out
popa
ss
gs
fadds
icebp
ss
ret
or
cmp
sbb
dec
jne
push
inc
adc
or
cmp
inc
xor
clc
insb
add
sbb
sbb
mov
cs
inc
cmp
push
jge
rol
clc
add
and
push
push
sbb
push
sbb
mov
mov
xchg
push
mov
das
adc
jns
fisubs
adc
or
inc
dec
xor
xchg
push
dec
mov
adc
stos
xor
aaa
push
dec
inc
cmc
xlat
ret
shlb
push
or
lret
js
jle
imul
xor
cli
jbe
stc
ret
mov
int
add
mov
shrb
inc
jmp
pop
out
ja
rcl
or
fiadds
sbb
mov
lcall
mov
aam
mov
push
in
sbb
push
dec
dec
mov
inc
pop
dec
cmp
xchg
add
fs
and
push
mov
sbb
jmp
xor
in
inc
inc
push
xchg
mov
cmpsl
pusha
mov
sub
xchg
dec
cmovb
fnstsw
jbe
pop
jmp
fs
nop
daa
jge
inc
call
xchg
lret
push
sub
ja
mov
jl
push
adc
mov
mov
jo
clc
mov
cwtl
test
xchg
dec
ljmp
jmp
lcall
pop
jecxz
and
in
aad
mov
pusha
sbb
cmp
pop
loopne
inc
cmp
or
sbb
pusha
dec
loopw
push
stc
and
xchg
jle
xor
add
cs
mov
dec
sub
cmp
xorl
fdivrl
sbb
pop
in
popl
sub
push
in
lahf
sbb
dec
rorl
test
mov
fwait
lods
dec
les
fdivrs
out
inc
mov
pop
rolb
xchg
pop
push
out
sbb
cmp
dec
jge
xchg
mov
and
fldcw
sub
ret
std
repz
aam
xchg
popf
jnp
out
in
cmp
nop
cli
adc
lock
push
inc
imul
or
ljmp
and
imul
mov
shll
dec
loop
and
std
mov
int3
xchg
xor
lock
daa
and
or
insl
shrb
daa
aam
jbe
fildl
lea
in
or
jecxz
mov
xorb
pop
cmp
into
sbb
add
adc
mov
ret
sbb
pop
push
jne
pop
push
xor
sahf
mov
ret
sub
xchg
xor
jecxz
dec
loop
and
xchg
and
dec
cmp
leave
movsb
adc
cs
add
sbb
mov
loopne
xchg
ror
in
not
mov
lret
stos
fidivrl
mov
jp
faddl
outsl
push
sbb
inc
pop
mov
push
aaa
push
lock
mov
mov
fnstsw
push
pop
das
sar
jecxz
mov
inc
jnp
mov
loopne
aam
ret
call
call
and
add
cmp
int3
sub
xlat
push
and
fiaddl
mov
das
dec
dec
sbb
sbb
out
add
cmp
push
in
les
add
mov
push
cld
test
int
dec
in
inc
fildl
xor
sbb
and
dec
jg
mov
fwait
push
pop
fldt
dec
or
xchg
lahf
add
sbb
xchg
std
adc
data16
test
xchg
je
adc
mov
mov
push
add
insb
cli
xor
pop
inc
add
mov
add
dec
mov
std
jmp
fcoms
sub
pop
sbbl
inc
into
lcall
or
pop
add
cmp
cmp
mov
aas
mov
hlt
sub
popa
in
mov
sub
adc
repnz
add
or
inc
or
out
sub
mov
xor
dec
mov
test
loopne
xor
test
and
sbb
cmp
aam
push
mov
push
lcall
jne
jo
jl
scas
mov
mov
pop
fwait
hlt
push
aam
lds
imul
shll
dec
out
scas
scas
clc
add
out
movsl
sub
imul
sbb
cmpsb
sub
jae
fistpl
and
loop
push
cmpl
xlat
push
pushl
jmp
roll
pop
in
or
jae
cmp
pop
in
mov
mov
mov
sbb
jmp
icebp
fsubl
in
imul
add
std
pushf
mov
add
dec
pusha
sbb
cmpsb
shll
and
aaa
in
fsubrp
lea
lea
inc
pop
sub
fdivs
pop
dec
test
cmp
sub
repz
mov
insb
clc
imul
cltd
pop
mov
insl
syscall
clc
xchg
ds
icebp
xchg
pusha
jnp
pop
mov
or
ds
leave
clc
scas
inc
push
es
xchg
movsl
data16
jmp
xor
mov
adc
push
dec
mov
fldt
xor
ret
pop
test
adc
jnp
mov
push
pop
cmpsl
add
dec
xor
mov
ja
js
ret
add
je
sub
or
cwtl
push
xlat
shl
orl
xchg
cmp
sahf
sub
mov
shl
fs
push
inc
bnd
aas
and
push
push
and
dec
add
xlat
rol
xchg
jno
int3
push
push
bound
lods
icebp
outsl
adc
out
imul
add
cli
movl
xor
dec
into
ret
and
inc
sbb
int3
push
dec
inc
xor
cmp
cmp
jno
sbb
xchg
int
fs
mov
pop
imul
scas
subb
mov
cmp
inc
push
daa
and
in
and
inc
add
xchg
and
fists
dec
aam
inc
js
shll
cld
loopne
sbb
sbb
push
cli
dec
jb
jno
call
inc
mov
jbe
shll
call
push
mov
sahf
mov
inc
and
icebp
push
movsl
repz
xor
ret
or
bound
pop
dec
insl
fs
sub
ljmp
lcall
inc
ds
cli
ljmp
loopne
xor
sarw
testb
cmpsb
or
mov
jg
lods
sbb
or
lea
bound
cltd
xor
rcll
jne
inc
jno
cmpsl
scas
or
sbb
aaa
sub
adc
push
add
loop
out
add
repnz
pop
cmc
pop
add
sbbb
loope
fwait
scas
outsl
ja
scas
ret
movsl
adc
cs
sub
in
rcrl
roll
push
adc
adc
jo
cli
imul
into
push
in
xchg
int
lock
sbb
scas
arpl
loope
into
mov
adcl
inc
inc
push
jecxz
ds
jne
int
jns
pop
jnp
shlb
xor
scas
xor
aas
lcall
pop
dec
out
lods
jns
dec
sbb
das
mov
insl
orl
out
dec
cmp
std
data16
xchg
dec
aam
fistpll
fiadds
adc
mov
pop
mov
xor
sub
and
outsb
movsb
xor
movq
mov
or
sbb
add
int3
sbb
repz
outsl
add
je
jl
test
xchg
mov
and
test
push
xchg
or
jg
sub
imul
scas
pop
divl
je
mov
sub
js
mov
pop
in
pushf
push
cmp
rorb
adc
lret
std
cmpsb
in
paddw
lock
mov
xchg
adc
sarb
xor
or
out
stc
mov
push
data16
jecxz
xchg
loop
cld
andl
loope
sbb
or
popa
jp
and
lock
pop
xchg
xor
jbe
xor
subb
imul
or
pop
into
adc
aam
dec
sub
adc
mov
loopne
lret
movsl
sub
mov
roll
repnz
sahf
xchg
jl
adc
lock
insb
ret
hlt
dec
icebp
mov
xorb
adcb
mov
sub
int
or
mov
xchg
cli
add
jg
push
adc
cmpsl
jno
mov
cs
add
jle
daa
in
sbb
cmp
mov
outsb
cld
add
call
xor
inc
test
push
mov
sub
or
xchg
or
fcoml
mov
sbb
push
jle
xor
xchg
push
pop
adc
ljmp
call
movsb
sub
je
jmp
jmp
add
pop
push
dec
jo
pushf
mov
mov
lods
or
ret
pop
push
orl
mov
repnz
or
push
push
jecxz
test
icebp
aaa
push
roll
inc
add
dec
pop
jecxz
push
or
sbb
xor
cmp
jno
mov
iret
dec
sarl
scas
xor
add
outsb
fwait
insb
fidivs
ss
int3
mov
adc
and
and
fnstsw
xor
insb
xor
cvtdq2ps
mov
push
bound
call
or
mov
sub
stos
push
hlt
outsl
jg
jne
lcall
cmp
inc
filds
rcl
inc
push
pop
inc
and
sar
test
loop
arpl
and
sub
xor
cmp
insb
clc
icebp
mov
or
daa
cmp
cmp
movsb
pop
or
jbe
xchg
imul
mov
int3
push
mov
adc
sarl
in
ja
stos
xlat
or
call
xchg
inc
mov
xchg
or
or
mov
inc
bound
out
xchg
adc
mov
cmpsl
xor
sarl
xlat
mov
push
xor
loop
xchg
jmp
adc
add
sar
inc
lds
xchg
sbb
mov
sbb
cmp
cld
add
enter
std
lret
sahf
leave
stos
xchg
daa
loop
enter
push
inc
lea
add
icebp
lds
outsb
decb
xchg
popf
pop
xchg
inc
das
clc
cmc
sbb
sub
pusha
js
ret
jl
test
sbb
pop
jo
xor
js
sub
and
stos
inc
sarl
jecxz
dec
lret
bound
inc
lea
stos
mov
pop
mov
push
lods
in
or
pop
outsb
jle
mov
xchg
pusha
repz
lret
popa
outsl
or
sti
movsl
jg
sbb
xchg
xchg
mov
mov
and
pop
roll
fiaddl
rcr
sbb
fdivr
cmpsb
ror
inc
aas
bound
lock
inc
inc
outsb
orb
outsl
xchg
mov
adc
sbb
adc
jno
inc
stos
or
sti
mov
movsl
es
rcl
out
mov
xchg
xchg
inc
cmp
mov
cmpsb
xchg
mov
mov
in
jae
pop
mov
ret
ret
push
push
inc
lock
je
jo
shrl
xchg
out
fs
std
pop
std
inc
mov
imull
jge
clc
in
out
inc
popl
mov
dec
mov
pop
cli
lret
mov
sbb
cmp
adc
mov
outsl
fstpt
stos
clc
popa
add
loopne
mov
adc
xor
jne
lock
pop
sub
cld
lock
adc
icebp
sbb
or
xor
insb
and
xorl
adc
es
aas
aam
sahf
loope
in
pop
cli
add
push
add
pop
fsubrs
pop
andb
lea
mov
or
popa
std
std
fstpt
mov
data16
sarb
in
push
clc
add
jl
inc
loope
dec
fbld
inc
out
std
inc
fisubs
in
mov
and
movsb
fdivr
stos
shrl
jne
inc
pop
cmpsb
adc
daa
test
out
xchg
inc
xchg
fcoms
hlt
sbb
inc
xchg
fbstp
pop
mov
inc
iret
adc
cmp
lock
adc
and
adcb
iret
aam
inc
aam
inc
inc
sub
aam
pop
adc
pushf
mov
ss
sbb
add
aas
lods
stc
out
cwtl
ja
sub
mov
shl
incl
test
xchg
ficoms
stc
pop
sbb
mov
outsl
add
lcall
ja
cmp
adc
fistpll
out
sbb
sbb
imul
rol
jmp
mov
rcll
xchg
jecxz
rorl
cld
out
xor
cs
xlat
xor
fcmovnb
adc
out
nop
js
pop
inc
jp
jb
and
lea
and
ljmp
sub
dec
add
aaa
pop
jg
sahf
scas
and
int
sbb
stos
dec
das
xlat
ljmp
sub
inc
pop
jle
or
cmpsb
mov
jae
sbb
or
aaa
cmc
sarl
push
adc
push
mov
lock
je
cmp
add
cmp
xorb
cmpsl
mov
adc
sbb
dec
mov
ret
insb
push
inc
mov
pop
mov
ja
sahf
adc
pop
out
xlat
inc
and
dec
aad
js
xor
mov
cmp
imul
cmp
cmpsl
inc
inc
jg
inc
dec
inc
jg
mov
push
push
push
add
addr16
pop
popf
xor
lods
xor
shlb
lea
out
dec
js
inc
inc
gs
mov
les
inc
test
push
loop
push
mov
je
mov
pop
sbb
rorl
add
or
jl
or
fcmovbe
jl
adc
mov
in
in
adc
sahf
rol
inc
mov
ret
add
sarb
add
daa
add
pop
shll
stc
dec
add
shrb
add
mov
cs
ret
or
mov
inc
jo
xchg
adc
adc
push
xor
dec
push
xor
cmp
fildl
mov
mov
xchg
mov
dec
inc
push
arpl
es
loop
ss
adc
call
ljmp
add
testl
sbb
in
dec
and
jl
inc
and
dec
adc
cmp
sbb
cmp
and
test
sbb
test
hlt
and
les
push
sbb
jo
xchg
mov
inc
pop
adc
inc
jne
js
out
pop
imul
mov
test
sahf
aaa
push
outsb
arpl
out
outsb
or
dec
or
pusha
js
push
addps
mov
dec
rcrb
clc
mov
rcrl
dec
mov
fs
dec
mov
inc
test
lret
or
dec
dec
or
add
inc
cli
iret
add
jno
jns
or
dec
int3
mov
push
sub
push
scas
sti
inc
xor
push
mov
pusha
xchg
mov
call
xor
ljmp
arpl
icebp
xchg
daa
imul
xor
dec
xchg
mov
addr16
pushf
lods
sbb
addr16
movsl
sbb
push
dec
pushf
imul
aas
andb
stos
int3
ficompl
add
fdivs
popa
push
lahf
inc
dec
inc
inc
pop
dec
pop
clc
adc
cltd
mov
xor
dec
push
in
es
insb
mov
jae
shlb
xchg
push
mov
push
dec
add
jbe
fistpl
add
pop
lock
lds
int
scas
push
adc
nop
sub
rorl
xchg
or
inc
jge
jae
push
outsb
add
dec
fs
roll
loopne
add
enter
push
mov
dec
sahf
cltd
mov
movsb
outsb
and
sbb
fs
dec
push
xor
cwtl
fimull
sbb
push
cmp
mov
hlt
add
push
mov
cmp
gs
jne
jecxz
jecxz
dec
push
dec
movsb
jle
lods
push
adc
xchg
dec
dec
jbe
inc
mov
add
push
adc
loopne
push
xchg
enter
jb
adc
xchg
jo
pop
pop
pop
push
xor
ds
in
push
data16
xchg
mov
push
xor
push
jne
inc
pop
les
popa
test
lret
xor
dec
inc
test
dec
jae
push
xorb
mov
movb
ror
push
push
arpl
pusha
nop
test
stos
movsb
imulb
add
xor
pop
cmp
loope
scas
dec
mov
inc
adc
jae
jno
loopne
cmp
jbe
inc
inc
ficoms
arpl
pop
stos
orb
addr16
xchg
mov
outsb
jne
test
lcall
das
mov
sub
scas
and
cmp
sahf
pop
dec
mov
psubusw
ljmp
fs
ljmp
inc
push
pop
repnz
out
rclb
inc
jno
cmp
mov
mov
sbb
dec
push
leave
add
pop
add
push
xchg
mov
fildl
aam
data16
jne
cmpsl
and
repz
stos
and
lock
rol
imul
push
xchg
or
xchg
jp
fldl
mov
and
mov
arpl
test
mov
inc
mov
lock
mov
adc
pop
pop
inc
pop
push
xor
lahf
rorb
aaa
aaa
dec
push
xchg
xchg
loope
and
stos
out
adc
outsb
gs
outsb
sub
inc
aaa
outsb
imul
jno
cmp
iret
jb
xchg
push
jmp
mov
sub
xchg
add
push
push
jae
aaa
push
mov
push
je
adc
cld
mov
ret
push
dec
push
add
adc
popa
cwtl
and
mov
arpl
push
lock
push
push
inc
cmpsl
clc
push
mov
dec
je
push
out
dec
test
call
mov
call
inc
inc
push
dec
push
inc
lcall
imul
scas
inc
push
push
inc
cmpsb
out
outsl
dec
gs
cmp
and
push
jge
fwait
jne
int3
xor
je
xchg
ds
push
pop
popa
fldcw
or
push
xchg
sbb
inc
xlat
pusha
mov
pushf
and
lahf
int
ja
and
pop
or
outsl
jg
incb
mov
sub
pop
test
jle
or
int
sbb
and
adc
mov
arpl
add
jmp
pop
sar
xchg
es
mov
cmc
fildll
pop
xchg
lock
loopne
lods
pop
push
fstpl
ds
jne
cmp
push
popf
lock
aad
fdivs
lods
xchg
mov
xchg
int3
and
ja
js
sahf
add
nop
clc
push
jecxz
ljmp
sbb
push
add
xchg
jb
jnp
add
xor
pop
insl
shl
aaa
mov
adc
mov
adc
loop
std
add
inc
dec
add
ja
xlat
mov
addr16
scas
movsl
iret
or
je
test
dec
mov
adc
popa
push
jle
fs
push
cmp
or
inc
rolb
mov
push
ja
mov
pop
add
xor
add
out
mov
out
xchg
or
pop
ja
mov
cmpsb
decb
das
ret
add
mov
rorb
jo
aam
inc
sub
or
outsl
pop
sbb
jge
fisttpll
sub
ja
jno
xchg
jae
movsb
pop
repnz
inc
shlb
jle
push
imul
xlat
push
decb
cs
addr16
je
pop
icebp
mov
push
fcomip
cmp
push
xor
in
in
xor
xchg
push
repnz
es
pop
mov
mov
dec
mov
aas
addr16
dec
jg
cmpb
call
xchg
ja
xor
or
popl
add
push
loope
and
fimull
outsb
jle
enter
jcxz,pt
add
sbb
sbb
cmp
stc
add
lahf
movsl
sbb
int3
pop
call
push
aam
add
inc
lods
cmc
push
in
cmpsb
in
mov
cmpsl
inc
inc
int
jns
dec
or
xchg
test
xlat
ja
cli
js
in
dec
adc
icebp
or
sbb
cwtl
loope
mov
pop
movsl
push
mov
mov
aas
cld
jbe
sbb
fcom
lea
push
popa
mov
xchg
push
push
cs
sbb
lods
ss
add
sub
ret
inc
shr
adc
cwtl
arpl
pop
jne
push
push
add
pop
sbb
and
jp
xchg
jp
fwait
pop
cmp
hlt
inc
loope
clc
xchg
sub
or
and
sbb
dec
add
jo
sub
mov
hlt
stc
cmp
push
aam
test
dec
cmp
jmp
clc
or
pusha
lock
jmp
loopne
adc
jmp
enter
pop
jge
pop
inc
xchg
sbb
sbb
addr16
jg
push
mov
aas
ret
daa
insb
add
jmp
or
sbb
dec
fnsave
mov
fwait
ret
or
lock
jp
je
mov
cmp
mov
jp
mov
aas
ljmp
orl
xor
fsubl
cmpsb
imul
sti
arpl
push
lock
mov
ret
mov
addr16
stc
add
stos
outsl
hlt
mov
out
test
pop
test
leave
cmpsb
adc
pop
mov
xchg
clc
cmp
inc
jne
adcl
xchg
jb
test
mov
xchg
sbb
push
in
std
jp
sub
adc
xchg
adc
jno
mov
xor
mov
imul
dec
adc
jne
adc
and
enter
popa
enter
jns
data16
inc
out
mov
jb
ficoms
mov
and
mov
clc
mov
cmpsl
mov
addb
flds
add
movsl
push
or
jns
adc
jp
adc
and
push
push
pop
push
add
daa
cmp
imul
xchg
jecxz
pop
mov
jbe
fisubl
xchg
cmp
sbb
add
and
xor
push
mov
call
jns
call
sarb
call
mov
movaps
shlb
clc
xchg
pop
jo
stos
mov
mov
cltd
jmp
scas
into
sub
mov
or
add
rclb
pop
adc
jmp
sbb
lahf
push
in
je
push
jb
stos
test
inc
xlat
xor
sbb
aaa
cmp
add
mov
ret
mov
mov
inc
or
mov
shr
std
jae
shlb
out
sbb
push
test
inc
push
jp
push
jg
scas
fldl
xor
pop
dec
mov
js
inc
pushf
orb
sub
loopne
xor
inc
sbb
cmp
inc
or
mov
xor
jmp
or
or
mov
fsubrs
push
popf
xchg
or
in
push
dec
cmp
and
inc
jecxz
cmpsl
or
pop
insb
pop
push
lock
jle
popf
out
shrl
mov
shlb
fwait
clc
push
pop
icebp
mov
xchg
jle
outsb
jnp
imul
inc
sub
stos
cli
add
pop
pop
fs
loopne
clc
adc
xchg
adc
add
push
jbe
testb
add
hlt
pop
icebp
aad
add
sub
mov
cs
jae
std
mov
or
pop
outsl
fsubrl
js
inc
dec
scas
jns
mov
mov
scas
test
dec
fs
jno
add
sbb
pop
outsl
jmp
mov
dec
inc
push
xchg
mov
push
add
jp
and
push
les
and
dec
or
movsl
mov
dec
adc
xchg
or
adc
test
fmul
add
xchg
lret
sti
data16
lods
out
je
aaa
jbe
inc
dec
ret
jno
insl
jo
pop
movsb
and
loop
mov
or
ret
in
add
pop
jecxz
ss
push
xor
cmc
add
sub
push
xor
mov
aaa
fs
frstor
pop
mov
in
subb
xor
mov
mov
dec
xor
outsb
push
ss
aam
push
inc
adc
test
ret
jbe
cmp
test
jno
outsb
push
sahf
and
cmp
outsb
xor
dec
sbb
mov
pusha
push
int3
orb
and
loop,pt
and
loope
call
cmp
repz
or
mov
dec
jae
loope
push
adc
push
mov
pop
inc
adc
mov
mov
pop
push
pcmpeqd
xor
cmpsb
inc
stos
idiv
mov
cmc
adc
test
int
adc
jb
pop
pop
mov
inc
mov
xorb
dec
pushf
test
xchg
mov
mov
test
loopne
in
inc
sbb
add
or
add
pusha
inc
jge
mov
repnz
inc
movsb
test
dec
or
mov
subb
mov
aas
add
outsb
popa
add
inc
mov
xchg
push
mov
pop
xor
pop
sub
fstpl
ja
dec
push
clc
push
in
lods
jae
add
mov
insb
pop
mov
sub
rcr
cltd
or
push
and
mov
xchg
int
sub
lock
inc
stos
addr16
lods
xor
or
pusha
add
shl
jge
gs
mov
hlt
loopne
add
gs
and
jle
mov
inc
pop
stc
inc
bound
imul
test
add
daa
xor
rorb
xlat
sbb
sub
cmp
sbbl
mov
mov
jmp
mov
popa
jne
add
fidivrl
mov
test
pop
or
or
inc
or
mov
dec
sub
xor
mov
dec
add
mov
jae
scas
imul
ja
sub
jg
xchg
into
lds
lea
add
jbe
push
xchg
cmp
push
and
dec
test
out
fistpl
add
push
stos
imul
add
lcall
fsubr
jge
push
std
jl
inc
jg
xor
ja
cltd
leave
es
sbb
jnp
js
sub
fwait
mov
fidivrl
fdivs
sarl
scas
pop
sub
inc
loopne
xor
xor
dec
jo
mov
sbb
das
sbb
and
push
push
aad
and
inc
pop
inc
cld
mov
mov
imul
pop
pop
icebp
daa
inc
mov
call
xor
lret
data16
cld
inc
daa
jns
mov
mov
fchs
ljmp
ret
mov
lret
jl
push
lods
fs
push
inc
inc
sbb
packsswb
push
cmp
cmp
add
sbb
inc
mov
dec
adc
popf
out
or
xor
in
rolb
cmp
iret
sub
fldl
push
notb
ret
push
roll
addb
xor
inc
sbb
popa
or
sbb
js
jl
rol
shll
shlb
sbb
and
iret
mov
lret
jecxz
leave
sti
loopne
xorl
xchg
xor
outsl
in
ljmp
in
mov
pop
xchg
icebp
icebp
hlt
cmp
pop
fwait
sub
dec
xor
punpckhdq
xchg
jl
call
cmc
pushf
pop
call
and
push
xchg
dec
lcall
mov
dec
mov
pop
xor
or
into
insl
add
xor
iret
push
mov
loopne
mov
cmp
cmp
ret
and
adc
mov
ret
outsb
inc
jmp
fimuls
mov
sub
lds
and
jp
in
xchg
stos
lods
pop
fcoms
arpl
cmp
push
movsl
test
sbb
ljmp
xor
xor
xchg
mov
outsb
sbb
dec
loopne
dec
and
and
sbb
outsl
fcoml
jo
mov
mov
gs
enter
mov
push
dec
dec
adc
jo
inc
sar
loop
mov
insl
aaa
jo
pop
lock
pop
dec
or
xchg
fcmove
dec
cmp
xchg
es
push
mov
jle
rclb
add
xor
mov
dec
jne
loop
jle
dec
xor
pop
or
sar
jmp
push
je
insb
xchg
mov
insl
mov
mov
fldl
xchg
imul
add
jmp
lock
mov
push
into
push
cs
loope
outsb
fs
add
aas
add
cs
pop
into
into
sub
adc
shll
cli
das
cmp
popa
ss
push
push
jbe
add
mov
dec
xor
dec
loopne
rolb
iret
xlat
cmp
push
aam
inc
int
repz
call
jbe
add
rcrl
push
inc
pusha
or
pop
hlt
clc
mov
pushf
enter
shlb
sbb
stos
js
imul
add
cmp
jo
out
data16
addr16
inc
fisttpl
push
cmp
rorl
clc
push
inc
ljmp
roll
xchg
lods
cli
aas
push
push
jg
into
add
mov
nop
mov
lea
clc
pop
outsl
and
ja
sub
xchg
out
mov
lods
add
xchg
out
jle
xor
mov
ja
cmp
movsb
loope
mov
push
shlb
mov
push
cmc
push
je
pushf
cmc
dec
dec
jno
rcr
or
je
lret
mov
mov
sub
add
or
mov
cmp
pop
faddl
sbb
ljmp
inc
in
inc
popa
xchg
xchg
add
fsubl
fwait
ss
inc
call
cmp
mov
mov
push
push
cmp
jb
stos
jl
ja
pop
pop
lock
cmp
repz
ja
ds
fsubrl
andb
add
and
js
ret
aaa
xchg
pusha
adc
pop
mov
xor
lahf
mov
cmp
shll
pop
mov
sub
nopl
or
add
and
pop
js
fdivrp
int3
sar
xchg
inc
bound
scas
xchg
add
xchg
adc
xchg
fists
in
imul
sbb
sarb
and
mov
iret
cmp
clc
and
push
jmp
fbld
adc
mov
inc
xchg
in
lahf
add
pop
push
dec
xlat
sub
scas
cmc
mov
sahf
ja
sar
decl
les
cwtl
shlb
xchg
cmc
push
or
sarb
pop
arpl
out
add
cmp
mov
ds
pop
lret
mov
push
cli
xchg
andb
mov
notb
out
cmp
das
popa
xor
jg
call
cmp
lock
sub
sbb
loope
xorl
push
subb
cmp
mov
mov
push
loopne
nop
mov
add
das
mov
or
jnp
loop
dec
push
sub
pop
andb
js
inc
cmp
lock
and
xchg
inc
xlat
jnp
jecxz
mov
adc
mov
shl
add
insl
aam
mov
cmpsl
mov
rol
xor
mov
cld
out
js
mov
jl
sti
movsb
mov
jns
test
ljmp
lock
pop
or
movsb
out
inc
orb
fcmovnb
dec
inc
cmpsb
es
jle
call
icebp
shlb
sbb
pop
ja
loop
rclb
xchg
sbb
mov
mov
inc
rcrb
pop
add
jno
push
add
andb
or
push
sub
dec
inc
mov
mov
fcmove
mov
addb
cld
gs
and
dec
mov
rorb
mov
or
popf
fdiv
ja
out
mov
add
dec
and
dec
push
nop
push
push
and
add
pusha
adc
sbb
ja
sub
sbb
push
cli
mov
adc
ja
dec
jge
fstpt
pop
nop
or
cmc
lock
clc
das
mov
cmp
mov
clc
hlt
or
push
fs
sbb
add
mov
ss
push
or
or
add
mov
add
dec
aam
cli
sbb
andb
stc
and
mov
arpl
mov
add
lret
sbb
mov
ret
mov
add
inc
and
mov
mov
jp
bound
mov
jno
bound
cltd
mov
mov
test
jecxz
xchg
add
call
dec
test
push
pop
add
mov
rol
jnp
leave
add
mov
mov
push
bound
data16
sbb
stos
ja
and
popa
jg
mov
bnd
jge
sbb
or
push
incl
jge
outsl
pop
mov
shrl
inc
adc
xor
cmp
sub
sbb
dec
outsb
repnz
mov
adc
pop
cwtl
test
mov
insl
mov
mov
push
xor
shll
popa
inc
js
cmp
pop
sbb
jg
mov
fimull
xchg
pop
sub
imull
and
add
or
cld
inc
rcll
movb
arpl
jecxz
push
loopne
mov
divl
andb
or
imul
mov
mov
movsb
cli
pop
mov
call
xor
xchg
add
sti
daa
sbb
mov
ja
js
and
jg
jae
pushf
dec
cmp
jp
xchg
cld
sub
xor
dec
sub
or
mov
lods
clc
cmp
push
test
push
push
jp
test
lds
bnd
lahf
adc
sub
js
nop
add
data16
push
pusha
andl
cld
cmp
add
push
iret
add
inc
sahf
dec
in
cmc
mov
sbbb
mov
sahf
mov
mov
out
es
pop
fsubr
sbb
push
aad
cmp
mov
cmp
cmpsb
fucomip
jb
inc
pop
or
cmp
std
add
xchg
pop
mov
aad
hlt
loop
stc
cs
dec
jnp
mov
test
inc
add
jno
mov
pop
xor
negl
loopne
sub
dec
cmp
cmp
lock
inc
mov
loopne
loope
xor
adc
jae
aam
pop
ret
pop
xor
mov
fbstp
pop
test
adc
cltd
test
push
adc
cli
outsl
sbb
and
ja
jle
add
das
push
inc
pop
or
or
cltd
mov
shlb
addr16
daa
cwtl
pop
mov
mov
push
and
mov
inc
dec
jbe
call
sub
and
hlt
adc
add
xor
add
mov
jns
or
cmpsb
or
or
xchg
roll
mov
pop
sbb
cs
shrl
push
rcrl
arpl
xor
pop
jbe
lds
jo
icebp
aas
orb
push
mov
mov
ja
adc
icebp
sarb
ljmp
xchg
xorb
rcrl
ds
or
push
bound
pop
xchg
cmp
pop
add
sub
fisttpl
cld
out
dec
jl
and
inc
jle
test
insl
test
fstl
and
dec
mov
movswl
push
test
xchg
jmp
sbb
rol
icebp
jmp
rcll
addl
out
mov
add
and
bound
call
sbb
sub
xorb
push
mov
jl
add
or
mov
xchg
xchg
jmp
add
das
mov
sub
imul
lock
jle
pop
fidivrl
in
xor
sbb
fwait
pop
cmc
aas
out
in
dec
sbb
and
outsb
push
inc
sbb
xchg
and
mov
in
les
loope
cld
shlb
dec
mov
adc
cmp
inc
rdmsr
shlb
fs
ljmp
add
mov
xchg
fisttpll
lock
mov
cmc
or
xchg
dec
dec
add
inc
adc
jno
inc
adc
adc
mov
call
ficoms
add
push
sahf
loope
cmp
add
je
lahf
mov
imul
pop
fists
sbb
cld
add
pop
hlt
inc
jb
xor
dec
outsl
mov
sbb
xchg
pop
sbb
int
inc
sbb
mov
dec
push
dec
inc
pop
push
dec
push
add
addr16
mov
imul
data16
arpl
fimuls
push
in
mov
jae
push
push
add
rcrb
dec
inc
push
push
jne
or
or
mov
cmp
or
push
ret
je
iret
fs
rcrb
dec
jbe
ss
hlt
clc
sti
mov
ljmp
ret
sub
sbb
in
xchg
gs
or
push
push
or
roll
mov
imul
ficoms
insl
xchg
sub
dec
dec
negl
je
mov
and
xor
add
dec
dec
sti
xchg
fs
pusha
inc
lahf
aas
mov
loopne
enter
inc
mov
xor
dec
inc
ret
jbe
imulb
push
jne
pop
jno
jbe
push
dec
std
dec
inc
pop
adc
xchg
cmp
mov
aas
add
int
cmp
xor
cmp
jo
adc
lock
test
enter
addr16
pop
dec
loopne
push
push
cmp
lahf
sbb
ja
xchg
dec
add
test
outsl
xchg
aad
cmpb
sbbl
add
pusha
mov
mov
repnz
jle
add
cld
and
test
push
repz
push
push
insl
addr16
and
adc
xor
adc
xor
jl
mov
jmp
xor
repnz
arpl
call
mov
mov
pop
add
jnp
dec
mov
loopne
jp
push
mov
repnz
repz
mov
ja
adc
mov
hlt
xchg
shlb
xor
mov
mov
fistps
inc
mov
in
dec
xor
sbb
push
mov
cmp
mov
push
fcomip
aas
pushf
pushf
ja
fisubs
shlb
add
mov
lods
jo
stos
sub
sti
scas
mov
mov
sbb
push
xor
lea
jl
xchg
dec
or
xlat
pop
adc
xlat
mov
je
xorb
mov
addb
or
loop
pop
inc
or
stc
or
in
test
or
test
scas
pop
push
and
mov
fists
push
fwait
or
and
cmpsb
xor
scas
push
dec
jl
test
sbb
and
enter
hlt
outsb
xlat
fstps
out
xor
pusha
lea
add
sub
scas
sbb
hlt
in
jge
cmpsl
mov
pop
out
rcrb
adcb
shrl
mov
xchg
xchg
add
mov
mov
jb
inc
add
jnp
xchg
leave
xchg
mov
push
dec
mov
add
leave
xlat
push
dec
xchg
ret
xchg
ret
clc
lahf
jecxz
pop
cmc
ja
and
rol
aad
leave
faddl
cmp
andb
ret
mov
shlb
xor
push
stc
dec
pop
jg
out
jo
lods
lahf
scas
add
adc
add
mov
jmp
sbb
rclb
add
cld
nop
sub
lea
mov
sbb
push
adc
lcall
fildl
into
ret
andb
jns
lds
xchg
rcr
sarb
in
cs
ja
or
ret
sub
rcl
lahf
outsb
icebp
xor
call
rcr
sbb
push
pop
movsl
mov
xor
xor
ja
pusha
subb
or
xchg
test
lock
in
push
shll
mov
pop
je
add
push
jmp
ret
mov
aad
xor
shlb
inc
push
hlt
das
popa
sbb
xorl
mov
jo
outsl
push
sbb
mov
loope
test
sahf
mov
es
push
cmp
sub
mov
cmp
mov
sbb
js
incl
cmpsb
aaa
inc
pop
mov
dec
test
lock
outsb
and
push
sub
jmp
out
jle
mov
dec
pop
bound
aam
cwtl
daa
jnp
mov
adc
roll
loope
lock
push
pop
ss
sar
ret
popf
addl
or
test
sub
test
or
xchg
inc
sbb
inc
pop
mov
sbb
cli
jo
sar
mov
push
xchg
pop
loopne
clc
outsl
push
loope
jno
icebp
mov
in
cltd
sahf
call
icebp
cmp
das
shlb
mov
gs
ss
and
mov
aad
nop
adc
repnz
xchg
loop
lock
pop
jbe
arpl
testb
pop
test
adc
subb
xchg
sbb
inc
push
lods
and
mov
notb
ret
adc
das
add
pop
cli
sbb
lock
icebp
mov
mov
imul
lahf
sbb
push
mov
enter
test
adc
sbb
adc
xchg
outsb
neg
mov
and
dec
mov
or
lret
inc
mov
cli
cmp
lock
aad
clc
mov
or
push
jg
push
mov
jno
cli
scas
lret
outsl
ds
cwtl
jmp
cwtl
xor
add
pushl
xchg
fidivrl
jae
or
test
mov
pop
das
int3
xchg
xchg
loope
orl
mov
push
pop
add
adc
jmp
ja
cmp
in
adc
mov
into
mov
and
ds
call
dec
pop
jnp
test
push
pushf
pop
dec
loop
jno
bound
jmp
xor
lcall
outsb
sti
sbb
daa
adc
pusha
adc
mov
scas
mov
cmpsl
dec
and
jo
jbe
mov
fs
add
adc
push
adc
push
rcrb
or
mov
jne
xor
je
mov
add
push
enter
cmpsb
jbe
fldt
dec
jnp
into
lcall
adcb
data16
mov
and
mov
pop
je
dec
jo
iret
leave
cmp
pop
addl
test
adc
cmpb
stos
pop
pop
pop
add
or
jecxz
std
cmpb
add
xor
sub
jbe
and
adc
fcomps
mull
lock
fs
mov
fs
pop
sbb
mov
mov
dec
cmpb
xor
test
mov
mov
aaa
out
lods
shrl
jp
ficompl
lcall
and
fcompl
cmp
dec
pop
xchg
call
mov
pop
dec
notb
addb
scas
cld
sub
sub
adc
sbb
je
push
int3
out
cmp
ret
repz
jle
enter
sti
xchg
cs
loope
les
loop
popf
sbb
movsl
jle
iret
push
divb
loopne
int
cmc
push
add
dec
pusha
out
or
add
je
lds
inc
movsl
mov
add
test
decb
jge
jle
jp
movsb
add
xchg
sbb
cmp
pusha
mov
jb
or
lock
loope
xor
push
add
xor
cwtl
xorb
mov
and
stos
out
add
add
cmp
xchg
mov
lea
push
sub
cld
sarb
mov
xchg
lds
push
ficompl
and
ljmp
out
push
aad
js
dec
inc
mov
leave
out
add
test
xchg
stos
jp
cmp
pushf
filds
loopne
loopne
xchg
dec
sti
loopne
loopne
loopne
or
or
add
push
scas
outsb
jne
inc
insb
add
sub
push
jne
add
and
xchg
dec
dec
inc
xor
inc
insl
arpl
jo
mov
arpl
insb
inc
subb
test
inc
ss
imul
cmp
jns
add
hlt
xchg
roll
mov
out
inc
push
ss
inc
insb
ljmp
js
sub
dec
push
inc
and
shll
jne
adc
add
into
inc
into
xchg
jle
in
ficoms
dec
push
mov
daa
dec
lea
push
fmul
rcrb
addr16
adc
pop
sub
rcrb
push
rorb
xchg
mov
push
ss
xor
add
or
inc
shlb
mov
mov
mov
enter
mov
and
jae
jne
inc
cmp
cwtl
jns
shll
in
stos
sbb
cld
les
push
push
jge
dec
outsl
es
dec
jecxz
int
add
insb
outsb
push
or
loopne
shrl
push
outsb
push
jnp
push
dec
fldcw
out
jbe
lea
pop
ret
push
xchg
push
push
loop
inc
inc
xor
add
sub
sbb
xor
lahf
cvtps2pd
fcomps
push
mov
js
or
loop
cmp
dec
inc
mov
rol
dec
adc
mov
pusha
insb
cmpsb
and
imul
jb
pop
xchg
orl
icebp
push
jo
mov
mov
ss
gs
aaa
ss
xor
insl
mov
dec
gs
jle
cs
pop
cmp
inc
mov
inc
cmpsb
loop
lret
dec
lods
mov
push
xor
jnp
lcall
les
clc
sub
sub
push
insb
test
scas
adc
sub
add
int
lea
lods
cs
ja
dec
mov
or
shrb
pop
and
add
or
mov
imul
and
mov
push
jge
iret
sub
rcll
pop
lds
jl
cs
and
mov
loop
lock
dec
jl
xor
mov
idiv
lods
std
push
decl
cwtl
push
or
pushf
ja
mov
mov
sub
sub
lret
jne
jbe
push
pop
add
test
fs
mov
xchg
inc
or
stos
fsts
fbstp
sar
ja
xchg
mov
xor
daa
adc
push
jg
xor
sahf
loopne,pt
pop
sub
add
mov
aam
sbb
out
movsl
popa
or
leave
sub
data16
sub
inc
push
xor
shll
dec
add
push
xlat
andb
jmp
sti
lahf
mov
adc
xor
add
data16
or
inc
mov
fidivrs
xor
push
dec
add
xor
outsl
leave
or
jg
pop
pop
xchg
jno
subl
xchg
popa
mov
push
xchg
xlat
xchg
xchg
inc
pop
das
and
mov
popa
gs
add
mov
mov
outsb
push
add
add
add
addr16
push
cld
xor
sbb
es
imul
mov
dec
out
dec
insb
pop
jo
xchg
xchg
mov
enter
sarb
mov
sbb
into
fnstsw
dec
dec
call
pop
sub
stos
push
lds
ja
clc
or
aas
jecxz
test
sbb
loopne
dec
loop
pop
xchg
xchg
jo
and
je
cmp
ja
inc
dec
data16
insb
pop
sti
mov
xlat
lods
mov
pop
fidivl
mov
jb
in
das
out
xor
xchg
push
lret
add
mov
jge
add
loope
loopne
sbbb
pop
ds
push
popf
mov
outsb
vphadduwq
add
xchg
and
fxtract
mov
and
mov
fistpl
push
add
insb
pop
lea
sub
jp
popa
fildll
fadds
push
iret
dec
jp
mov
je
cmc
fadds
adc
aas
jb
inc
add
pop
sub
mov
sahf
inc
jo
pop
dec
add
sbb
divb
cmp
faddl
mov
scas
test
ja
cwtl
add
clc
add
cmp
pop
mov
and
xchg
lock
or
pop
js
outsb
stos
jle
mov
shlb
int3
and
sahf
repnz
pop
add
sbb
sub
cmp
xchg
faddl
cwtl
dec
dec
pop
lock
jb
sahf
xchg
shlb
sub
fcmovne
test
jo
in
add
repz
data16
dec
scas
in
or
mov
nop
xchg
cli
inc
push
or
sub
mov
add
inc
adcb
sub
hlt
aad
cs
out
lret
or
pop
jmp
rcll
rclb
cld
xor
lahf
mov
pop
int3
xchg
or
adc
out
xlat
out
mov
out
pop
out
adc
shl
jecxz
cmc
pop
aad
inc
lds
cld
xorb
fldt
mov
cmp
mov
cmc
icebp
push
movsb
cmp
call
pop
sti
jae
pushf
fs
scas
in
in
imul
clc
or
leave
scas
push
sbb
cmp
xchg
inc
xchg
lds
mov
mov
push
sub
or
pop
lods
dec
push
push
jmp
jmp
add
adc
add
mov
in
shll
pop
sbb
mov
pushl
inc
fwait
fwait
movsb
sub
mov
inc
cld
mov
aad
cmp
add
xchg
mov
repnz
scas
mov
inc
pop
pop
je
imul
xchg
outsl
inc
xchg
movsb
call
scas
imul
push
das
lcall
out
lock
and
mov
adc
int3
outsl
movsl
cmpsl
sub
cmc
add
ds
loop
inc
mov
adc
dec
movsl
call
es
add
jl
or
lock
outsb
jns
lahf
or
insb
lsl
fwait
xor
ja
sub
jl
jo
cmp
into
jecxz
test
loopne
scas
or
add
cmp
imul
dec
add
cmpsl
stos
add
cmp
in
xor
xchg
pop
cmc
repnz
in
sahf
add
push
cmp
jecxz
into
adc
ss
pop
and
push
loop
inc
cld
add
jle
sub
sbb
rcl
jbe
outsb
cmpsb
jo
hlt
inc
out
call
fs
xor
or
cld
mov
jmp
xchg
inc
pop
xchg
aaa
pop
ja
clc
outsl
sarb
fs
jae
add
xchg
outsb
inc
push
inc
js
or
inc
sbbl
jg
push
cmc
jg
push
das
inc
adc
xlat
cmpb
add
jo
rclb
popa
scas
data16
incl
gs
test
and
ret
pop
or
cmp
sub
inc
test
mov
pop
mov
lods
gs
cmp
popf
cli
inc
in
cmp
daa
in
jp
out
iret
movsl
lea
mov
inc
push
rclb
jecxz
push
sahf
mov
mov
lret
xor
adc
xor
lea
cmp
rorb
sbb
push
scas
daa
or
lahf
shll
cs
jns
pop
aas
shr
add
push
out
add
xchg
cmp
jno
arpl
cld
and
call
iret
ss
popf
push
xor
jle
jne
into
ljmp
int
xor
or
inc
pop
insl
mov
lods
pusha
fwait
lock
adc
aam
sub
xchg
cmp
in
mov
out
jmp
aaa
mov
jne
pushf
inc
pop
inc
mov
addr16
cld
lahf
add
and
movb
out
and
mov
mov
adc
or
push
in
hlt
scas
fiaddl
inc
notb
call
pop
popf
dec
lcall
adcl
jg
in
lcall
push
insb
pop
adcb
test
jmp
inc
cs
sub
sbb
dec
leave
inc
adc
mov
dec
or
call
pop
add
sub
out
cmp
pushf
mov
sbb
rcrb
mov
add
mov
bound
cmp
iret
xchg
insb
sbb
cs
roll
daa
roll
imul
ret
mov
mov
dec
or
mov
push
or
testl
xlat
add
lock
sahf
pop
bound
mov
jg
jmp
push
test
je
orl
jo
js
push
lea
mov
cltd
xlat
cmpsl
sbb
mov
push
ret
cmpsb
fcoms
adc
sub
pop
add
imul
data16
dec
sub
cmpsl
gs
jne
push
inc
cmp
fmuls
push
call
mov
lds
inc
pop
add
fldl
bound
xor
mov
lret
iret
mov
and
add
loope,pt
mov
jo
cmc
mov
inc
ret
push
push
dec
inc
pop
mov
fstpl
outsb
addr16
push
shrb
incb
or
imul
push
mov
hlt
scas
jl
pop
xchg
push
dec
fwait
add
dec
loop
xchg
push
sbb
addr16
lods
sub
cmc
sbb
stc
jae
aam
ja
repnz
or
lahf
lods
jg
lds
rorb
pop
pop
mov
call
std
outsl
push
mov
xchg
and
sti
movsl
pushf
rcrb
repz
cmc
add
or
lea
lods
add
lcall
scas
adc
add
icebp
ud0
popa
mov
cmp
add
imul
add
dec
sbb
sahf
int3
ljmp
push
sbb
ja
sub
pop
pop
cmc
nop
cmpb
aad
arpl
push
sahf
pop
je
mov
cmp
enter
jbe
loop
sbb
daa
adc
scas
ss
scas
push
stos
dec
fmuls
into
mov
in
pop
mov
ret
sub
in
orb
cmpb
movsb
push
cmp
pop
mov
stos
pop
cmp
test
lcall
push
xchg
es
lods
add
dec
xchg
ss
and
leave
xor
jmp
ds
add
loopne
das
leave
mov
jbe
mov
sub
cmpsb
cmpb
mov
vucomiss
and
cmp
jp
xor
xchg
add
mov
cwtl
sub
hlt
lret
mov
jb
xor
pop
test
adc
cmp
lcall
movsb
loopne
into
into
add
lock
push
nop
arpl
xchg
loope
repz
and
loopne
js
jg
in
adc
and
or
mov
movsb
cmpsb
sub
fdivr
mov
sub
mov
ds
fcomp
push
mov
sub
add
loop
adc
bound
in
cwtl
mov
add
xchg
fwait
pop
nop
aam
clc
cs
lahf
xchg
ja
pop
and
or
test
mov
mov
push
icebp
push
adc
sub
cs
pop
sub
add
and
or
clc
mov
xchg
sahf
enter
adc
outsl
je,pt
ja
xchg
inc
mov
mov
jns
mov
add
mov
xchg
fcmovnbe
and
fs
cmp
xchg
mov
or
clc
mov
std
bound
add
and
xchg
loopne
cwtl
das
cmp
or
test
and
out
hlt
xchg
push
addb
push
cmp
add
decl
fimull
add
fdivrs
mov
lods
xchg
je
and
loopne
ja
sbb
push
sub
xor
cmpsb
pop
nop
sbb
mov
sub
and
fbld
imul
xor
adc
fdiv
mov
cs
push
ljmp
jmp
xor
aaa
or
fcomip
add
push
jno
cs
int3
adc
mov
mov
adc
lock
or
jno
into
add
mov
mov
cmp
xchg
xchg
fmuls
cmpsl
adc
sbb
pop
test
fstl
gs
ja
or
ja
add
cmp
mov
add
loope
mov
adc
pushf
dec
in
popa
inc
add
gs
cmp
subl
add
and
ja
das
jl
add
fs
test
leave
pop
roll
adc
push
leave
and
aam
sub
mov
das
hlt
push
cmc
stc
xor
jmp
jp
cld
xchg
cmp
stos
int3
jns
inc
add
pop
jge
add
jmp
jmp
xor
cmp
clc
jmp
in
das
push
adc
pop
push
xchg
ljmp
add
or
aam
jne
dec
add
pop
mov
iret
ret
inc
cltd
into
xor
fstpl
push
pop
jecxz
sbb
mov
push
fs
mov
mov
inc
ja
loope
pushf
test
jb
mov
cld
cmc
pop
fistpll
fmuls
push
loop
incl
ja
adc
mov
adc
mov
jno
rolb
or
scas
insl
test
mov
add
sbb
subb
daa
push
add
dec
xchg
fmuls
lock
push
rolb
jne
or
and
or
pop
loopne
or
jmp
fwait
add
das
sarb
pop
ss
xor
xlat
nop
mov
out
aam
icebp
popf
adc
mov
add
aam
fwait
movsl
lret
outsb
lsl
iret
scas
push
inc
call
add
sbb
jnp
sbb
cmc
cld
inc
pop
jl
cmp
aas
jmp
pop
or
mov
cld
cs
and
mov
mov
popf
sub
je
cmp
dec
xchg
pop
xchg
pop
jo
xor
cmp
mov
mov
add
push
push
dec
xor
push
sub
mov
pushl
test
pushf
mov
xor
pusha
add
push
or
into
adc
push
pop
icebp
gs
int3
daa
ja
mov
jge
and
xchg
inc
sbb
lret
lods
out
push
adc
iret
mov
subl
in
fidivl
pop
inc
add
sbb
les
jnp
xor
rcr
push
xor
mov
inc
nop
inc
cmpsb
test
jg
sub
into
add
inc
out
pop
mov
fcompl
xchg
int3
ss
in
sahf
test
jmp
push
dec
xor
cs
cmp
into
mov
jbe
cmp
in
or
mov
rcrb
pop
js
jl
xor
inc
cwtl
push
adc
fnstcw
cmpb
inc
mov
aad
inc
xchg
paddd
cwtl
inc
shrl
sub
dec
cmp
sub
inc
jbe
jno
mov
jns
sarl
fcmovnb
repz
cmp
or
push
xor
add
test
call
push
ja
push
sub
mov
out
test
fisubs
sub
mov
or
std
lock
sub
push
lds
sub
xor
mov
add
ljmp
mov
sub
push
sbb
test
cwtl
repnz
jmp
subl
into
popf
jl
popf
lock
testl
mov
lock
cs
sbb
mov
mov
sub
pushf
xchg
jns
xchg
mov
fwait
or
or
mov
in
shrb
xchg
scas
mov
aad
xchg
sub
xor
jle
cmp
xchg
mov
mov
dec
add
lods
ret
jecxz
scas
clc
cwtl
push
stos
xlat
aas
dec
dec
inc
add
adcl
movsl
out
jb
mov
cmc
insl
jno
adcl
ja
mov
data16
js
movsl
push
jo
insb
sbb
lock
push
loop
mov
push
jge
out
dec
pop
jne
push
fdivs
jns
mov
mov
xor
call
int3
ljmp
add
mov
mov
mov
cmp
inc
jo
cmp
out
adc
or
sub
add
daa
loop
inc
dec
adc
rorb
pop
inc
push
sti
lahf
popf
shlb
scas
jp
xlat
push
out
push
lods
lahf
decl
scas
aad
lods
ja
in
add
push
jg
push
mov
mov
mov
mov
push
sbb
stos
stc
add
xchg
cmp
lret
lods
movsl
cmpsl
incl
cmpsl
mov
inc
dec
sbb
adc
adc
dec
ds
push
arpl
adc
roll
insb
jge
pop
ss
lcall
add
mov
or
jb
sub
sbb
sarl
jae
ja
scas
cld
mov
adc
inc
xchg
xchg
or
pop
pop
lock
adc
cwtl
lret
inc
ja
and
daa
push
or
add
cld
lds
cmp
lcall
mov
cwtl
test
aaa
aad
lock
xor
lahf
loop
mov
push
daa
inc
mov
mov
in
add
xchg
xchg
pop
rcrb
adc
sbb
clc
mov
push
jmp
or
leave
cmp
xchg
roll
sar
or
aad
mov
inc
adc
fsubrs
sbb
dec
bnd
pop
flds
jo
sbb
pop
push
lret
incl
testl
enter
addr16
xchg
mov
mov
lea
cmp
sahf
mov
incb
dec
mov
fstp
repz
xor
mov
in
adc
add
cmp
cmp
xchg
out
imul
mov
mov
inc
push
push
lahf
test
dec
dec
xchg
cmp
pop
sbb
pop
bound
xchg
filds
push
push
mov
dec
mov
jg
insb
out
imul
ja
jecxz
sbb
into
cmp
incl
xchg
ja
push
adc
popa
and
push
imul
fs
mov
sti
out
icebp
and
ja
js
xchg
daa
or
cld
xchg
aaa
in
sub
loopne
mov
shl
or
cmc
test
cld
sbbb
arpl
test
cmpsb
sar
js
or
test
xchg
ss
xchg
in
sarb
fwait
popf
pop
add
mov
fwait
jp
aad
out
jl
cmp
add
sahf
xchg
or
divb
in
mov
sbb
adc
insb
inc
in
or
pushf
add
pop
cld
pop
mov
add
aaa
dec
push
data16
mov
jbe
add
paddd
sti
or
pop
lahf
xchg
cmpsb
mov
push
imul
xchg
mov
dec
jno
xor
ja
cmp
add
fldt
cmp
cmpsb
clc
cmp
pop
rcrb
xor
pushf
push
sub
push
shl
sub
fisubs
jno
lret
ficoms
cli
mov
mov
sub
ret
outsb
sub
push
shll
insl
sbb
sbb
mov
xchg
pop
roll
xor
movb
xor
fisubrs
test
hlt
aas
mov
cld
push
jne
and
test
outsb
sub
jg
inc
add
stos
adc
cmp
add
or
jle
mov
inc
gs
mov
adc
mov
or
sub
movsl
add
cmp
loope
mov
ljmp
add
lcall
sub
das
movsl
jmp
push
inc
imul
aam
das
push
dec
fcomps
popf
push
cmc
out
lcall
push
stos
div
fld
cmp
cmpsb
inc
out
popf
add
data16
mov
adc
aas
mov
jnp
xor
insl
shrb
add
aas
fadds
sub
dec
or
orb
in
cmp
or
push
sub
pop
ror
xchg
xor
cmc
and
add
leave
pop
daa
insl
in
pop
pushf
mov
fmuls
movsl
movb
ljmp
ds
pop
lock
rolb
or
push
andb
mov
jb
mov
and
aad
adc
sub
dec
jmp
psubw
test
lcall
add
sub
add
and
cmp
pop
aaa
xchg
jnp
cwtl
ja
repnz
dec
sbb
mov
xchg
push
jbe
pop
sarl
and
jg
les
adc
cwtl
test
push
movsl
shrb
jne
into
xor
push
fcoml
ror
xor
icebp
imul
popf
pop
cmpb
xchg
cmpsl
fisttpll
decb
mov
sbb
lods
inc
adc
push
push
xor
popf
jbe
pop
jo
jb
push
ficomps
scas
call
jecxz
shl
fimull
adc
push
push
lret
mov
xchg
mov
ljmp
inc
rorl
movsb
pushl
hlt
aad
imul
push
fildl
paddb
jecxz
ret
push
in
xchg
fs
fbld
add
push
mov
ret
mov
lret
les
pop
cmp
fs
inc
or
fst
sub
pushf
push
ljmp
add
or
fbstp
jmp
insb
fdiv
sub
and
xor
ds
cmp
push
ja
jp
lods
es
cs
mov
and
insb
or
sub
paddusb
call
enter
sub
sbb
mov
mov
xor
stos
add
push
movsl
mov
dec
mov
testl
ret
push
insl
or
sub
mov
cmc
xor
data16
pushf
sub
roll
mov
cmp
add
fcomip
fildll
clc
pop
add
pop
xor
sbb
stc
or
hlt
rorl
jo
test
sub
int
pushf
and
cmpl
or
test
or
push
cli
nop
adc
cmp
mov
shrb
shl
push
ret
rcrb
fdivrl
lods
xchg
push
ja
aam
inc
ss
aam
cmc
cmpsl
lahf
xchg
xor
mov
add
arpl
scas
ds
rolb
loopne
stos
scas
icebp
test
mov
sbb
mov
inc
mov
dec
jp
ja
mov
nop
sub
sbb
pop
out
cld
movsb
cmpsb
test
es
xchg
inc
sar
inc
imul
pusha
pop
in
jb
cmp
inc
xor
fwait
js
jo
jecxz
je
adc
sahf
gs
addr16
mov
imul
cmp
scas
mov
or
es
xor
lea
cmc
ss
loop
mov
mov
mov
inc
fidivs
inc
add
xlat
ss
in
adc
jmp
pop
arpl
push
addb
cwtl
ret
outsl
jne
lock
loopne
or
loop
mov
push
mov
push
inc
jmp
push
js
jp
dec
bound
adc
push
xor
mov
jae
jo
mov
outsl
fldln2
xchg
repnz
out
pop
jmp
outsl
nop
pushf
xchg
push
mov
dec
loop
scas
mov
and
cltd
aam
insb
cmc
push
xor
and
fcomps
incb
push
je
mov
ret
or
nop
jo
xor
not
mov
stc
aaa
dec
inc
js
sub
imul
cwtl
sub
and
shlb
xor
push
fwait
aam
mov
adc
dec
dec
push
inc
movsl
jno
dec
dec
jmp
and
or
ds
pop
or
dec
dec
es
loopne
dec
jecxz
add
and
movsl
adc
cmp
mov
mov
push
rclb
push
nop
push
inc
xchg
gs
int
mov
xor
mov
je
stc
dec
loope
fdivrs
dec
outsl
adc
cs
xchg
inc
xor
mov
js
out
rclb
inc
xor
sub
je
cmc
dec
and
inc
fiaddl
aaa
mov
into
mov
pop
fwait
bound
outsb
and
push
dec
xchg
jp
iret
std
and
add
es
mov
fs
xchg
testb
jle
jmp
xor
inc
jb
push
dec
pop
les
adc
xchg
aad
shlb
pop
and
sbb
xchg
mov
mov
scas
push
lahf
adc
and
in
jp
sbb
jnp
push
jnp
stc
loopne
push
jo
adc
xchg
adc
mov
mov
mov
xor
mov
dec
sbb
ja
cwtl
sub
pop
jmp
pop
mov
xchg
lea
jle
push
xchg
push
leave
mov
mov
out
mov
out
mov
dec
fidivs
mov
loopne
hlt
mov
xorb
cmc
sbb
les
pop
or
lods
mov
fimull
add
mov
lods
push
mov
sti
add
mov
sbb
add
fsubs
inc
iret
pop
int3
pop
add
sub
and
and
idiv
cmp
pop
and
lcall
jbe
mov
daa
xorb
add
mov
jae
inc
fmuls
lret
std
add
mov
test
xchg
mov
xor
jo
cmp
push
mov
loop
and
add
mov
cs
xor
or
xor
xor
sub
aam
lock
push
lret
loope
pop
icebp
test
mov
je
lea
sbb
dec
jbe
shl
test
mov
inc
mov
inc
shll
aad
push
jno
fidivl
fincstp
mov
pop
outsl
sub
push
dec
jecxz
in
jnp
fldl
cmp
pusha
repz
add
fimull
imul
pop
insl
sahf
adc
lods
and
lret
lret
rcll
cmpsl
pop
shrb
or
xchg
pop
jl
outsl
push
push
cmp
and
add
lds
addr16
insb
adc
pop
dec
outsl
les
xor
xchg
xchg
addl
mov
out
sti
xchg
add
mov
push
inc
and
jno
scas
daa
xchg
out
add
pushf
out
ja
lock
xchg
pusha
pop
popa
push
lods
ja
mov
xchg
mov
push
idivb
js
imul
sbb
cmp
es
xor
pop
adc
xchg
cmp
sbb
ja
jle
jmp
enter
emms
aaa
adc
divl
mov
ds
gs
sbb
mov
js
pop
mov
mov
pop
dec
cmp
test
mov
pushf
adc
ds
mov
js
ficompl
push
push
xorb
cmpsb
ljmp
popa
cmp
adc
scas
jmp
sti
rdmsr
push
shrb
es
repnz
mov
lods
pop
les
cli
mov
test
push
sub
pop
or
repnz
sahf
cmpsb
nop
pop
data16
fstps
fsubs
add
push
lret
das
outsb
mov
lds
imul
sub
test
pop
inc
out
shll
dec
shrd
sbb
inc
lods
mov
pusha
sub
in
sub
xor
inc
inc
ja
rclb
lret
sbb
add
ja
add
lret
xchg
aam
push
cli
leave
or
in
fidivrl
js
inc
inc
xchg
repnz
xchg
mov
in
das
dec
jno
xchg
xchg
jp
mov
jmp
mov
push
add
mov
icebp
sbb
xchg
int3
insl
clc
and
cmp
pop
loope
xor
mov
popf
inc
add
mov
cmpsb
in
push
mov
sub
mov
cli
mul
mov
scas
lods
add
add
das
and
xor
dec
jge
mov
adc
std
rcll
cmpsl
popa
leave
out
push
mov
pop
notb
mov
jg
clc
outsl
daa
and
insb
pop
fadds
aaa
cmp
sti
inc
mov
ret
in
movsb
jle
sarl
dec
jo
lea
xchg
jno
cmc
std
jb
adc
xchg
push
mov
test
iret
icebp
sbb
ljmp
mov
ret
loop
bound
adc
adc
aad
pop
and
lret
mov
nop
lret
cld
std
xor
mov
loope
mov
fistl
push
lret
decl
inc
lret
sbb
push
ljmp
icebp
rorl
cltd
clc
lea
jo
xor
mov
je
clc
int
aas
add
lret
daa
add
outsl
adc
les
mov
add
sbb
mov
bound
jmp
and
rolb
lds
inc
push
les
das
dec
out
cmp
add
scas
movsl
xchg
xorb
lahf
cmc
sbb
xchg
aam
imul
lods
outsb
sarb
leave
les
ja
dec
and
cli
xchg
pop
pop
bound
mov
cltd
jmp
xor
xchg
inc
out
xlat
outsl
xchg
sysexit
add
mov
ds
mov
cmpsb
inc
dec
xchg
push
cli
shl
mov
xchg
arpl
push
jl
add
sbb
mov
movsl
jb
jne
fsubs
adc
xor
sbb
mov
testl
push
mov
dec
cmp
mov
repz
sub
adc
dec
clc
sbb
lahf
roll
sbb
mov
xchg
push
xor
cli
and
stc
mov
and
das
negb
cwtl
lea
jne
pop
xchg
xlat
mov
push
or
sub
dec
imul
mov
xchg
dec
test
test
sbb
cmp
jbe
or
testl
xchg
cli
pop
pusha
xlat
es
flds
sbb
pop
decl
loopne
scas
push
aad
dec
or
push
xor
clc
and
or
pop
les
int
push
data16
cmp
bound
adc
fs
les
xchg
ss
jl
cmp
xor
gs
or
push
insl
xchg
adc
pop
dec
test
mov
inc
stc
dec
insb
add
dec
outsb
xchg
test
fwait
add
and
inc
call
inc
fildl
fimuls
jmp
xor
add
loopne
add
xor
inc
push
gs
test
dec
ret
inc
dec
js
mov
jmp
dec
mov
adc
or
jo
add
fnsave
icebp
and
mov
or
dec
jns
mov
stc
cmc
xor
xchg
call
pop
push
outsb
insb
push
jns
ret
push
inc
data16
xchg
sbb
sti
jno
test
jmp
addb
push
xor
xorb
cmp
and
jl
imulb
dec
mov
mov
push
out
dec
xchg
dec
arpl
or
dec
in
loope
add
mov
pop
inc
inc
fwait
ret
xor
add
dec
adc
lahf
rdmsr
pop
jge
data16
aaa
cmc
jae
jp
dec
push
imull
insb
js
push
shrb
pop
clc
and
pop
jmp
cmp
xchg
push
adc
pop
shrl
jns
adc
stc
sbb
mov
dec
add
out
jo
jb
rolb
xchg
inc
into
insl
and
mov
fs
nop
test
sahf
ss
push
cli
js
inc
mov
mov
jno
adc
or
mov
jae
push
or
pop
mov
inc
add
hlt
ficoml
aaa
insl
jnp
pop
inc
mov
out
jae
jo
or
adcb
insl
rorl
aaa
dec
jae
push
pop
adcb
sbb
iret
les
or
mov
decb
xor
js
xor
xor
clc
outsl
lods
pop
dec
dec
jne
dec
push
dec
mov
cmpb
inc
outsl
xor
dec
gs
adc
movsb
pcmpeqw
xor
sbb
call
push
popa
xor
push
insl
movb
lea
push
push
push
pop
dec
xor
rolb
aam
je
rclb
and
imul
mov
jo
xchg
lret
mov
ljmp
pop
out
push
in
pop
pop
cli
and
pop
cld
enter
or
js
bound
mov
nop
test
insb
dec
outsl
data16
outsl
push
shll
shl
lcall
jb
fbstp
cld
inc
test
jmp
bound
test
cwtl
les
dec
mov
sub
jmp
imul
ret
push
xor
jb
mov
shlb
mov
shl
dec
add
adc
xchg
jp
hlt
addr16
aaa
inc
aaa
add
ss
sbb
shlb
gs
or
testb
push
adc
add
ret
ss
jns
test
enter
dec
cmp
sbb
sub
in
xchg
inc
pop
jle
mov
cmp
loop
inc
inc
add
sub
adc
push
add
inc
outsl
jbe
loope
nop
add
popl
cs
xor
push
jno
out
shlb
adc
mov
cmpsb
loopne
dec
and
add
addl
push
in
pop
lret
mov
jns
dec
data16
push
or
inc
shlb
mov
add
outsb
jbe
mov
mov
inc
xor
dec
stc
sbb
cs
rorb
rcll
cmc
sub
inc
dec
dec
add
testb
xor
rorl
inc
cs
jnp
insb
cmp
mov
ret
nop
jb
or
ret
and
xor
mov
xchg
push
and
pop
dec
and
mov
mov
jb
inc
outsl
xor
cmc
push
dec
aaa
jae
je
xor
lods
or
jne
rorb
loop
out
dec
or
mov
popa
fmuls
xchg
jo
push
xor
dec
inc
dec
add
push
inc
dec
add
sub
cmp
mov
jo
ja
shlb
cmp
xor
inc
popa
xchg
arpl
add
mov
daa
clc
push
nop
xor
ret
inc
daa
inc
pop
or
add
aaa
sbbb
dec
dec
mov
pop
push
daa
test
test
out
outsl
mov
jbe
shll
inc
popa
jns
push
jae
loope
jmp
jecxz
insb
sbb
pop
addr16
adc
inc
fimuls
cmp
loopne
adc
js
push
mov
cmp
imul
and
rcr
lock
push
movb
inc
dec
inc
cmp
dec
xor
ucomiss
decb
mov
out
xor
push
inc
loopne
dec
sahf
dec
push
cmp
shlb
and
jp
div
mov
push
xor
test
dec
insb
data16
dec
dec
out
inc
push
xor
popa
mov
loop
jne
xchg
push
outsl
aad
push
xor
fidivl
ja
repz
outsl
jns
dec
push
rclb
sub
push
sbb
ret
jae
call
imul
nop
xor
sub
push
xlat
and
sub
imul
sub
outsl
pop
stc
test
imul
dec
pop
inc
push
in
push
pop
cmp
dec
jo
cld
and
addb
cmc
jmp
movsb
ljmp
repnz
or
rcr
inc
mov
xchg
pop
sbb
push
jne
jo
sarl
jo
test
notb
push
dec
fcomps
xor
mov
xchg
jne
test
add
xchg
cmp
imul
insb
dec
jb
add
mov
mov
mov
clc
icebp
mov
dec
aam
push
out
dec
inc
aaa
push
cli
mov
or
jo
mov
mov
aaa
insb
xchg
popa
jno
add
lahf
test
bound
mov
mov
pop
add
sub
aam
cmp
adc
jno
js
shrl
lods
xor
jp
dec
loopne
out
dec
je
sbb
xchg
mov
pusha
arpl
or
lods
lahf
shlb
xor
inc
xor
pop
push
ret
dec
loope
inc
popa
or
andl
ret
push
addb
in
xchg
psllq
mov
mov
or
lcall
mov
mov
movsl
pop
xchg
shr
stos
mov
jns
xchg
xchg
mov
add
pop
push
repnz
call
and
and
dec
cli
cmp
fcmove
lds
dec
ljmp
mov
je
fcoms
lods
leave
mov
nop
pop
andl
cmp
mov
imul
pushl
insl
aam
or
jns
add
loop
insb
push
add
xor
xchg
in
ja
setle
push
sub
xchg
push
fstpt
jb
sub
sbb
in
mov
and
mov
sti
nop
xchg
popa
in
fldt
mov
push
leave
cmp
xchg
sbb
popf
jp
and
test
jae
cmpb
or
adc
arpl
jle
xchg
lea
das
test
dec
out
sbb
shrl
fstpt
mov
rclb
movsb
and
cltd
movsb
shlb
push
jne
mov
out
sub
jno
sub
out
xor
sub
dec
xchg
ds
cmp
xchg
cmp
or
inc
rcrb
out
push
add
add
dec
cmp
pop
test
out
call
dec
and
adc
sbb
pusha
xor
bound
cmpsb
cli
cmpsb
ja
test
pop
loope
je
add
push
popf
mov
dec
stos
in
inc
ficoml
add
and
lahf
mov
jl
xchg
mov
or
insb
into
test
adc
jae
jecxz
icebp
xchg
das
and
imul
push
adc
pop
pop
je
ret
in
pop
dec
repz
cmp
idivb
fwait
xor
xchg
or
push
mov
lret
jne
test
mov
fldenv
loopne
inc
loope
xchg
pop
dec
in
enter
ds
lock
decb
or
jg
iret
popa
cs
js
into
dec
and
cmp
or
mov
std
je
pop
arpl
inc
mov
pop
inc
push
pop
insb
pusha
dec
ds
rorl
or
ja
mov
xor
add
cld
repz
pop
mov
aaa
sub
enter
adc
rol
push
jg
fsubr
jno
and
dec
adcb
and
fucompp
lock
sbb
inc
adc
sbb
xor
mov
dec
andl
fcoml
aaa
pop
sbb
or
mov
lret
jb
adc
adc
cmp
xchg
mov
lods
push
pushl
sub
std
arpl
sbb
das
inc
rol
jle
adc
repz
mov
insl
cwtl
xor
popf
dec
es
cld
movsl
jl
xor
add
pop
push
in
cmpsl
pop
icebp
cs
popf
jmp
xor
sar
pop
out
cmpb
mov
dec
jb
xchg
rcr
mov
push
jmp
cmpsl
mov
dec
je
xchg
sbb
mov
push
inc
add
test
mov
pop
push
out
fidivrs
lods
sub
lcall
xorb
in
jnp
rcrb
pushf
jns
add
repz
xor
cmc
mov
loopne
sahf
push
movsb
aas
loop
icebp
lock
int
je
call
adc
dec
pop
xchg
stos
popa
nop
push
imul
xor
push
jmp
pop
and
aaa
xor
clc
add
fldenv
adc
or
push
mov
dec
inc
dec
mov
dec
jo
or
pop
dec
dec
dec
pop
push
loopne
inc
clc
dec
mov
or
fdiv
xchg
sahf
add
sbb
inc
cmc
add
inc
fldcw
inc
lods
jnp
dec
inc
pop
pop
sub
inc
mov
nop
nop
push
push
shlb
outsl
pushf
jbe
inc
aaa
mov
stos
lret
imul
mov
push
jns,pn
pop
add
xchg
mov
xor
jl
popa
inc
add
dec
inc
push
mov
outsl
xor
push
sbb
mov
dec
imul
fildll
jno
nop
sub
dec
call
test
xchg
push
inc
and
gs
shlb
cmp
mov
cmc
pushf
lret
push
mov
out
pusha
inc
dec
inc
std
cmp
outsb
jne
cmp
sahf
xor
jl
inc
dec
inc
repnz
sub
xor
lcall
subb
fcomp
push
xor
push
push
jae
dec
mov
sub
loope
out
mov
popa
pop
je
push
mov
inc
in
arpl
inc
das
jo
pusha
pusha
jmp
or
aaa
rcll
mov
xchg
aam
mov
icebp
stc
movb
shrl
cli
push
call
jns
jns
jb
xchg
orb
push
add
data16
jno
in
jbe
js
popa
outsb
push
into
dec
scas
mov
cmp
sub
lods
inc
fisubrl
dec
bound
pop
push
xchg
rol
mov
or
dec
mov
push
dec
jns
inc
dec
mov
ret
loopne
mov
fildl
lea
add
insb
inc
dec
vfixupimmps
je
in
jnp
dec
xchg
push
inc
mov
pop
pop
inc
xor
inc
jp
dec
loope
inc
cmpsb
push
or
icebp
nop
int3
daa
pop
out
and
bound
call
imul
pop
push
adc
pop
jb
jmp
pop
inc
and
movsb
das
jns
dec
push
pop
or
call
fistps
pop
dec
mov
add
cmc
push
xor
and
push
pop
daa
fistl
mov
lods
fidivl
outsl
imul
sti
es
fdivl
push
popa
imul
dec
fwait
mov
sbb
sub
pusha
push
xor
loop
dec
dec
arpl
sbb
aaa
inc
popa
lods
pop
jl
shl
push
push
daa
int
insl
or
lahf
mov
out
dec
inc
fidivrl
inc
inc
gs
pop
inc
pusha
dec
shrb
mov
inc
mov
dec
loopne
ja
adc
xchg
mov
inc
mov
pop
mov
dec
ss
pop
pop
ret
inc
push
stc
pop
fsubrl
subb
inc
pop
mov
jno
dec
pop
jne
xor
dec
xchg
rorl
fwait
mov
je
dec
jbe
insb
push
xor
movlps
xor
es
jle
outsl
xchg
mov
insb
in
dec
fisttps
fmull
aad
fists
sti
pushf
stos
push
dec
outsl
aam
mov
fcmove
in
jbe
sbb
mov
ret
or
test
adc
dec
gs
in
add
mov
fcomi
or
add
js
jne
cmp
xchg
pop
cmp
xorl
adc
outsl
js
xchg
aam
outsl
jp
ret
out
ss
leave
xchg
out
pop
dec
push
outsb
push
fbstp
jns
xor
shrl
enter
lock
arpl
mov
aaa
je
testl
out
pop
push
das
sub
lods
test
je
popa
add
dec
push
xchg
lods
outsb
sub
inc
dec
or
cli
pop
lea
inc
sbb
insl
add
jo
test
inc
push
mov
cwtl
lods
push
out
shl
in
shl
ss
inc
push
bound
mov
ljmp
cmpsb
mov
fwait
jne
and
jmp
xor
mov
push
shr
sub
inc
or
addr16
ret
pop
pop
fs
lahf
dec
xor
inc
repz
cmp
sub
push
jno
sbb
imulb
inc
push
inc
jl
jo
adc
jp
xor
sub
imul
push
sub
push
enter
andl
popa
add
xchg
inc
dec
pusha
mov
add
pop
and
or
push
mov
das
xchg
sahf
shrb
outsl
add
sub
push
ljmp
sbb
mov
dec
mov
data16
push
mov
mov
js
add
push
inc
inc
push
arpl
sbb
push
push
mov
mov
sbb
pop
mov
push
push
jb
push
jnp
rcrl
clc
push
lcall
pop
hlt
xor
mov
pusha
adc
pusha
sti
mov
dec
ja
adc
jmp
inc
addr16
fbld
jb
hlt
shll
and
enter
daa
popa
popa
je
loop
outsl
push
loope
jl
scas
dec
loopne
dec
in
stc
dec
loop
add
cmpsl
or
inc
and
rcrw
dec
inc
or
xor
jae
jb
roll
insl
xor
push
dec
pop
out
js
pusha
cs
dec
xor
push
ja
inc
test
jo
sbb
bound
fisubl
movsb
lret
andl
add
cld
into
shrb
lods
pop
dec
outsl
loop
std
insb
sub
movd
stos
push
gs
inc
dec
push
inc
or
orl
lcall
push
mov
or
xlat
xchg
xchg
sbb
out
jne
inc
jo
cmp
adc
into
int3
lods
mov
mov
outsb
incb
push
andb
push
ret
cli
inc
mov
or
sti
inc
push
ss
and
mov
sbb
bound
daa
lret
iret
mov
pop
push
jne
sub
xchg
out
push
mov
cmp
jbe
pop
shlb
pop
pop
popa
addr16
jbe
add
outsb
cmc
xchg
movb
bound
sub
add
loop
pop
xor
jmp
push
pop
inc
les
mov
dec
aad
aam
xchg
ficoms
insl
xor
scas
push
ss
testl
push
mov
adc
daa
adc
jl
clc
pop
mov
outsb
push
sub
ret
inc
ret
outsl
push
adc
adc
pop
lock
push
in
insb
in
inc
jge
sbbb
push
sbb
inc
push
cli
ljmp
clc
es
jmp
stc
pop
mov
dec
dec
testb
mov
mov
jbe
lds
push
popl
adc
and
shrb
imul
addr16
and
mov
outsb
cs
xor
sbbb
dec
iret
clc
outsl
push
and
insb
and
add
sti
out
cmpsl
je
rclb
mov
xorb
xchg
cltd
and
sbb
mov
push
test
add
or
mov
ret
xor
lcall
xchg
add
int
pop
pop
lcall
jbe
rol
jne
lods
sub
dec
clc
jno
add
xchg
pusha
shll
ja
insl
or
mov
xor
sar
shlb
scas
js
inc
and
or
mov
lods
ja
movsl
jb
imul
sub
jmp
cmc
pop
ja
lea
cmp
ja
icebp
popf
hlt
ja
loopne
mov
popa
std
push
sbb
fidivrs
pusha
or
mov
rolb
mov
int3
jno
cmp
int3
dec
pop
sbb
insl
ret
add
add
add
and
add
outsl
dec
and
clc
sbb
stc
je
or
xchg
sbb
adc
xor
outsb
pop
adc
pop
sub
pusha
stc
dec
iret
xchg
pop
mov
sarl
in
mov
jno
clc
movsb
lret
xchg
jle
scas
dec
sete
ja
lock
mov
ficompl
adc
mov
test
pop
pop
jmp
xchg
pushf
sbb
mov
mov
push
fsubl
les
inc
test
scas
ja
jecxz
mov
loope
mov
test
pop
mov
inc
ja
jge
das
cmp
push
xchg
ds
sbb
hlt
out
in
push
pushf
pop
xor
ja
out
in
fadds
xor
sbb
fnstsw
je
mov
lret
ja
push
dec
add
adc
ret
insl
cmpsl
shlb
sub
repz
arpl
ja
test
xchg
pop
mov
shrb
aam
and
or
fidivrs
dec
inc
ja
inc
in
out
xchg
jmp
aaa
add
push
lret
in
jno
mov
hlt
dec
dec
xchg
mov
daa
loop
pusha
push
gs
cmpsl
outsl
stc
lds
lea
add
outsl
rclb
push
shrl
pop
or
cmp
add
out
mov
xor
sub
inc
repnz
adc
gs
in
xchg
pop
rcrb
arpl
imul
pop
or
lret
test
shrb
and
inc
cmp
out
add
pop
ret
cmp
mov
pop
dec
test
lcall
sbb
ljmp
sbb
fs
sub
or
sub
add
add
lods
sbb
in
mov
nop
cwtl
shl
jg
jno
jno
test
test
cld
jg
cs
mov
mov
push
mov
push
mov
in
inc
daa
in
dec
fwait
push
dec
cmp
faddp
ds
or
adc
cmp
push
cmp
fadds
and
mov
sub
call
shrb
mov
push
adc
sbb
xor
cmpsl
dec
aam
movsb
jno
add
push
push
xor
xor
roll
mov
and
jmp
lret
xchg
std
push
ret
push
fsubrs
aas
imul
xchg
scas
dec
and
push
inc
or
mov
lcall
cmc
push
jl
mov
jg
or
sbb
sbb
test
outsb
movhps
mov
adc
and
aas
push
and
orb
jae
inc
add
jg
or
push
ret
cli
into
mov
ja
inc
aam
int
cld
jo
sahf
pushf
push
out
or
jecxz
cmpsl
mov
cmp
mov
in
inc
mov
cli
push
push
add
push
jne
gs
xchg
add
cmpsb
push
nop
inc
push
sbb
lock
push
inc
push
mov
sbb
add
and
add
and
rolb
xchg
test
call
loopne
test
nop
mov
pop
ret
aas
jae
in
in
subl
dec
mov
jg
filds
xor
scas
mov
cmp
or
movsl
cwtl
mov
scas
mov
jno
adcb
xor
sbb
sbb
test
pusha
lods
adc
pop
lret
rol
mov
add
lcall
sub
mov
adc
dec
outsl
mov
push
push
movsl
jle
xlat
or
add
arpl
xchg
filds
loopne
negb
sar
rorl
rol
mov
cmp
mov
sub
push
cmpsl
movsb
movsb
ja
jl
in
ret
aas
aaa
cld
imul
and
mov
pop
lahf
push
or
jb
outsl
cli
mov
mov
mov
add
ja
bswap
lds
mov
popf
jbe
scas
push
push
aaa
ss
sbbb
incb
or
or
js
loop
shlb
mov
rcrb
aam
add
orl
xchg
cltd
push
fucom
xchg
pop
loope
loop
xchg
fcompl
pop
inc
ret
out
jp
sti
daa
and
mov
addl
and
jmp
shll
pop
les
inc
xor
cmp
decl
cmp
loop
fidivs
or
add
add
hlt
xorb
jle
cltd
xchg
sbb
jecxz
adc
scas
out
dec
and
in
aad
das
fidivs
cmp
or
gs
add
push
push
jg
lret
cmp
push
mov
rorb
je
add
jmp
mov
push
sbb
ja
xchg
adc
in
ret
ljmp
pop
sbb
add
adc
mov
pusha
xchg
inc
pop
mov
ja
pop
jp
clc
pushl
pop
test
adc
inc
jne
pop
push
push
dec
pop
ds
push
sub
daa
cmp
lods
loope
dec
cld
or
shlb
aas
dec
lea
xchg
pushl
add
push
dec
add
outsb
ret
cmp
cmp
and
jle
push
jge
adc
nop
fisubrs
fs
ret
push
inc
push
xchg
cld
xchg
sbb
mov
jo
mov
cli
fwait
pop
fs
dec
out
lds
iret
cmp
mov
cmpsb
in
insb
inc
add
fs
xchg
in
idivb
jno
add
femms
sub
xlat
pop
cld
das
add
or
mov
adc
ja
lahf
mov
dec
sbb
cltd
inc
loope
ret
pop
or
aaa
lea
lea
push
pop
or
pusha
pop
out
add
xchg
push
dec
xchg
ret
push
inc
mov
pop
mov
cmp
cmp
addb
pop
cld
xchg
loopne
shrb
xor
rcrb
testb
push
mov
cld
and
sub
ret
je
sub
test
jo
mov
jmp
data16
loop
dec
outsl
push
dec
push
push
xchg
call
sbb
dec
insb
loope
ds
out
add
xor
bound
outsb
ret
out
push
mov
ljmp
aaa
dec
enter
cli
xchg
push
fsubp
push
or
aaa
xor
mov
cmp
and
lock
jecxz
sbb
stc
mov
inc
push
repnz
add
movsb
lret
ficoms
ret
mov
lods
dec
cld
xor
jg
push
mov
push
jle
icebp
repnz
sbb
inc
aaa
std
dec
jno
xchg
ret
daa
mov
popf
pop
loopne
push
mov
sbbb
fstpt
or
lcall
mov
mov
inc
and
mov
call
data16
and
rcr
les
jno
adc
ds
dec
imul
pop
sub
push
jbe
add
ret
fcmove
les
rorb
xor
pop
push
push
xchg
sbb
addr16
inc
lret
jo
mov
add
lahf
jno
out
roll
mov
inc
xlat
ret
or
push
jns
mov
inc
ret
js
push
add
jne
ret
dec
shlb
outsl
shll
lcall
lods
ret
inc
xor
inc
mov
sub
into
lock
xchg
xor
std
int3
mov
mov
push
and
mov
pushf
jmp
call
outsl
cmp
push
push
ss
int
adc
sbb
dec
adc
add
mov
pop
xor
jae
cmp
ljmp
jg
ljmp
cwtl
rorl
sub
mov
and
outsl
sbb
inc
ret
mov
jmp
xor
cltd
pop
test
mov
sbb
or
pop
jbe
xlat
dec
or
jb
pop
xor
sbb
inc
adc
add
iret
or
popa
adc
jmp
inc
adc
into
jae
dec
bound
push
popa
aaa
js
push
mov
and
dec
sarb
push
repz
insb
mov
xlat
es
out
push
movlps
and
inc
push
sti
xchg
mov
jbe
push
push
push
insb
cmp
jge
sbb
aad
popa
mov
or
pusha
cmpsl
cli
push
in
cmp
aaa
pop
and
xor
pop
ret
cwtl
inc
inc
bound
mov
cmp
lret
xchg
push
cs
cs
and
push
xchg
sub
cld
outsl
addr16
into
xchg
fs
push
xlat
pop
or
sti
shrb
jae
jo
sbb
mov
sahf
sub
sarb
push
xchg
dec
sbb
push
mov
sbbb
call
xchg
js
push
imul
out
push
jne
add
outsl
mov
dec
ss
push
arpl
push
xor
push
push
push
mov
and
int
xchg
subl
aas
adc
ret
jb
out
imul
adc
dec
mov
ret
js
bound
pop
lret
mov
xchg
jmp
cmp
rolb
cmc
fildl
mov
inc
dec
aad
add
adc
jbe
push
rorb
jecxz
push
ss
mov
outsb
push
push
ss
ss
add
jb
pushf
pop
add
insl
sbb
mov
add
xchg
dec
mov
roll
rolb
inc
mov
sub
push
dec
xor
mov
fadd
xor
add
ljmp
jle
dec
dec
add
inc
pop
or
cmp
sub
dec
cmc
dec
dec
xor
fidivrl
add
sbb
frstor
jecxz
sub
dec
dec
cltd
mov
enter
out
mov
loope
insb
insl
inc
inc
push
push
mov
lods
or
cwtl
jg
arpl
shlb
and
outsl
dec
pop
test
xor
std
roll
js
dec
dec
inc
out
xor
inc
test
sub
punpckhbw
push
inc
dec
lcall
adc
and
push
sahf
or
mov
call
es
push
add
adc
jo
xor
es
push
fisttpl
imul
and
and
stos
or
fsubs
add
push
sub
mov
inc
aad
add
jge
enter
stos
push
mov
dec
mov
adc
push
enter
xchg
repnz
push
dec
clc
push
xor
push
js
add
stos
cmp
adc
inc
sarb
mov
xor
sub
inc
mov
and
out
or
and
ss
dec
js
fisttps
js
dec
in
dec
ret
mov
xor
cmpl
mov
push
jae
inc
adc
xchg
mov
faddp
jb
mov
inc
xchg
push
cmp
jns
push
test
data16
dec
or
rolb
add
adc
add
pop
inc
pusha
inc
mov
inc
inc
sub
dec
add
add
xor
call
dec
lret
orb
pop
adc
data16
dec
subb
sbb
inc
mov
sub
in
aaa
punpckldq
pop
mov
dec
shrb
xchg
test
pop
add
fidivrl
fisttpll
fdivl
xchg
cmp
repnz
pushl
insb
in
jbe
inc
imul
pop
fimull
xchg
rcl
bound
xor
scas
add
jmp
push
data16
iret
xlat
jo
mov
int3
mov
mov
push
int3
sub
push
dec
popa
cmp
cmp
dec
push
je
push
imul
adc
mov
sti
add
cwtl
jb
fs
add
shlb
inc
and
andl
bound
outsl
and
sub
ss
add
fbstp
inc
dec
jo
je
jb
and
lods
ss
xor
mov
rcll
push
push
mov
pop
push
jge
enter
mov
addb
push
pop
dec
add
imul
pop
inc
push
dec
inc
pop
xor
leave
lock
outsb
loopne
xchg
jecxz
adc
push
cs
les
repnz
fcmovnb
popa
push
sarb
or
ret
dec
inc
imul
xchg
lcall
mov
adc
jae
mov
jae
fistl
mov
out
or
fistps
ret
rorb
bound
sbb
mov
cmp
or
push
ljmp
dec
test
mov
inc
xchg
xor
add
scas
xchg
adc
xchg
repz
ja
pop
inc
dec
nop
dec
mov
push
push
jb
stc
test
inc
push
xor
sahf
push
jo
inc
cli
inc
loopne
lret
cmp
jnp
mov
push
adc
jb
pop
pusha
stc
jl
dec
sarb
jns
push
cmovo
dec
jo
pop
sarl
cmp
movsb
push
jbe
pop
push
dec
push
inc
clc
sub
add
lods
push
push
aaa
sub
pop
push
inc
push
sbb
mov
xor
sub
xor
jne
lock
mov
pushf
dec
loop
daa
push
loopne
cmp
sub
dec
push
xorw
xchg
push
shr
inc
aaa
inc
push
pop
bound
push
xchg
imul
push
xor
dec
leave
adc
jge
push
inc
mov
add
aam
pop
ret
sub
xlat
mov
loopne
jnp
sbb
jne
dec
mov
dec
push
add
dec
xor
adc
in
add
sub
adc
insl
pop
adc
or
mov
adc
sub
ret
add
jg
loop
mov
dec
dec
push
mov
ja
push
ja
ljmp
xor
ljmp
or
clc
push
dec
popf
rclb
pop
or
mov
add
int3
dec
insl
shlb
and
mov
dec
dec
push
js
dec
ja
inc
jae
pop
and
incl
push
call
jmp
out
enter
add
rcll
ret
cli
push
ret
incb
es
into
leave
sub
pop
imul
ja
inc
fistps
inc
add
lcall
xor
rorb
ja,pn
adc
xor
imull
add
subl
adc
mov
xorb
cmp
pushf
or
push
rolb
int
in
ja
or
shlb
mov
cltd
loopne
cmp
mov
or
pop
sbb
fwait
stc
mov
add
push
sahf
cwtl
inc
and
call
inc
xor
pop
scas
xchg
sub
mov
add
loopne
fstps
loope
fwait
out
aam
sub
fwait
dec
add
call
pop
enter
loop
lock
aaa
popf
add
xchg
ja
sub
xor
jp
ja
or
sbb
mov
dec
jmp
xchg
dec
repz
inc
mov
add
js
mov
andl
add
mov
sahf
inc
ja
sbb
cmc
or
fiadds
movd
mov
jge
xorl
dec
and
mov
pop
sbb
insb
divb
ja
test
les
mov
fildl
nop
sub
mov
push
mov
lds
ja
push
and
ljmp
das
inc
pop
in
cmp
outsl
rclb
xchg
adc
or
xchg
add
clc
stos
lods
jg
daa
push
ja
int3
xchg
add
int
push
loop
jo
sub
out
dec
push
clc
test
loope
dec
ja
adc
xor
movsl
popa
sbbb
mov
movsl
jl
xor
call
push
inc
js
out
pop
sbbl
dec
fmuls
mov
es
push
mov
mov
or
das
jmp
ja
jg
add
dec
sub
xorl
and
or
negl
and
popf
lods
mov
sbb
into
jle
mov
mov
cmpb
jo
lds
xchg
mov
sbb
push
and
addr16
addb
sbb
or
fistps
sub
sbb
add
sbbl
jg
cmp
cwtl
ja
xchg
in
or
bound
pop
dec
mov
add
clc
ja
and
test
mov
ss
dec
jo
dec
xchg
int
xor
in
fidivs
mov
rcl
push
cwtl
mov
mov
rorl
jo
out
lock
jae
push
inc
push
lahf
imul
fadd
test
orb
ja
in
cs
push
lahf
add
or
nop
pop
enter
repz
subb
clc
and
pop
fbstp
aad
jo
mov
push
jl
loop
sarb
fidivs
icebp
jbe
ret
enter
inc
or
loopne
xor
shlb
fcmovb
pop
imul
leave
xchg
out
cmp
in
inc
pop
pop
sub
mov
pop
cmp
aam
inc
cmp
pop
or
outsb
xor
push
mov
mov
aas
int
or
ficompl
sub
mov
in
mov
mov
fsubr
movl
cmp
or
push
pop
jg
adc
pop
mov
stos
in
dec
aam
mov
mov
call
lock
in
jbe
push
cwtl
or
mov
or
add
into
dec
arpl
pop
dec
or
test
sub
jo
insb
lods
sub
jae
add
fcmovnb
push
loopne
inc
out
jp
ret
mov
add
pop
sub
push
push
incb
pop
ficoms
jecxz
and
fdivl
push
jle
xchg
xchg
or
bnd
test
adc
pushf
ds
xor
sbb
pushf
and
add
cld
scas
add
jno
mov
fmull
decl
fcoms
fs
push
mov
xor
pop
cld
dec
add
jl
rorb
add
cmpsl
or
mov
or
push
sub
fcoml
or
fwait
ljmp
inc
insb
cwtl
test
out
cmp
test
inc
cmp
insl
add
sub
ja
jbe
add
ljmp
loop
out
add
fsts
imul
movsb
or
jmp
or
dec
and
jl
mov
inc
add
rorb
xchg
test
loop
lock
add
mov
loope
jp
lcall
sarl
ja
sub
out
ret
fucomip
or
popl
lcall
dec
jne
mov
insb
jl
loope
jg
scas
jb
xor
mov
adc
xchg
jg
fadds
adc
fcoml
mov
insl
mov
loop
push
lock
mov
lahf
test
sar
and
and
shlb
dec
sbb
dec
jp
adc
mov
or
insl
mov
lock
insl
inc
dec
stos
fidivrl
xchg
and
mov
sti
popa
clc
inc
adc
mov
sbb
jbe
mov
xchg
pop
mov
jns
dec
push
pusha
mov
ss
jo
loopne
sub
test
fidivl
mov
push
ds
aas
jns
cmpl
xchg
dec
push
stos
sbb
shrb
sbb
pop
mov
push
popa
fisubs
fcmovbe
je
cmpsb
dec
add
inc
xor
aam
mov
pop
shlb
enter
out
and
and
call
lea
das
shl
scas
ja
xchg
insl
mov
jl
mov
cmp
mov
xchg
pop
loopne
lahf
and
add
lock
loope
push
jo
ljmp
xor
push
rorb
jnp
fmuls
push
mov
bound
enter
xor
mov
fwait
bound
test
push
push
in
loopne
mov
arpl
or
push
adc
xor
mov
and
cmp
jno
jg
sub
sbb
sub
or
lock
pop
mov
in
cmpb
jg
sarl
cld
mov
lods
jle
dec
out
jo
cmp
xor
sbb
sbb
pusha
fdiv
in
jg
push
out
fbld
inc
daa
push
sub
push
sub
loopne
jg
cmp
cmp
or
sti
jl
fbstp
loopne
hlt
inc
aam
adc
or
insl
jno
jl
pop
sar
xchg
jmp
lahf
pop
ja
adc
push
pop
leave
dec
xchg
pop
cs
mov
mov
ja
cmp
movsb
mov
xor
rorb
loopne
mov
jo
hlt
dec
ret
les
sub
ret
ja
xor
cmp
stos
xor
xchg
xchg
push
ljmp
pop
imul
and
mov
push
mov
and
jmp
dec
ja
arpl
jbe
inc
cmp
mov
mov
cld
mov
inc
push
mov
leavew
add
lods
sbb
inc
scas
js
inc
pop
adc
adc
repz
js,pt
adc
xlat
sub
les
xchg
xbegin
mov
push
xor
popa
aad
fs
push
in
adc
aad
or
shrb
jge
jbe
movsl
lods
xorl
cmp
sbb
xlat
daa
sti
push
subl
cmp
imul
pop
out
fstpt
ja
jge
push
mov
fwait
push
ficomps
cmpsb
dec
add
in
icebp
addr16
pop
adc
pusha
mov
sbb
lcall
mov
pop
out
inc
jg
xchg
ja
cmp
popf
sbb
addl
cli
mov
or
repz
or
mov
call
movsb
aaa
mov
fadds
ljmp
xor
sbb
lds
je
add
cwtl
or
cmpsb
in
paddsw
ljmp
mov
sub
or
pop
test
mov
mov
lds
sub
sbb
addl
cmp
cld
dec
mov
jg
aas
pushf
push
add
push
add
fidivl
les
arpl
and
jno
ficompl
cmp
mov
jbe
jno
shrb
ss
dec
mov
push
sti
push
fiaddl
lret
jg
push
sub
sbb
orb
test
inc
add
std
je
inc
and
out
outsl
sbbb
imul
lock
insl
mov
ret
mov
push
rcrl
jl
xchg
dec
or
dec
aas
mov
and
lcall
mov
jb
orl
and
jne
popa
inc
push
leave
aaa
ret
in
rol
mov
inc
outsl
fisubrs
push
cltd
call
cmp
std
jnp
mov
in
lret
fucom
sbb
adc
out
neg
and
adcb
je
cmpb
inc
shll
out
mov
pushf
movaps
mov
cmp
enter
push
insb
aaa
adc
mov
adc
mov
jecxz
add
imul
inc
shr
xchg
mov
ljmp
lods
ds
bndstx
pop
dec
xor
sbb
adc
imul
aam
pushl
addr16
fstp
add
mov
add
arpl
pop
int3
mov
loope
mov
or
cld
and
aam
nop
fisubrl
dec
xor
jno
ror
push
push
jle
in
sub
ret
push
add
sbbl
push
js
and
pop
scas
stc
xor
std
pop
inc
lea
cmp
xchg
add
stos
jne
clc
lock
push
cmp
shlb
nop
xor
sbb
les
cmp
sti
jge
aad
jmp
cmpsl
cmpsl
imul
stc
es
adc
push
pop
js
and
cmp
repnz
push
cmpsl
cmp
enter
shrb
add
or
sub
adc
mov
adc
aad
xchg
jnp
cmp
pop
pop
mov
mov
cld
imul
jg
jmp
xchg
jl
insb
shl
dec
mov
xchg
inc
sbb
insb
inc
push
push
add
ljmp
shlb
pop
pop
mov
ja
push
aam
pop
mov
ja
in
mov
sbb
ja
sbb
push
jmp
sahf
inc
adc
mov
lock
in
dec
sahf
or
ja
int3
adc
and
dec
mov
popl
lods
mov
jle
pusha
outsb
cmp
loop
cmpsl
in
jne
mov
jecxz
sub
lods
ret
mov
dec
fildll
popa
ret
inc
jne
scas
jmp
jo
mov
push
mov
fnstsw
push
mov
inc
cmp
scas
shlb
lcall
pop
and
add
clc
cs
or
pop
jno
scas
mov
add
mov
or
sub
or
test
or
adc
pop
and
movsl
mov
and
add
stos
scas
lock
imul
cli
jge
pcmpgtd
lret
ret
push
test
add
nop
pop
inc
sbb
test
je
dec
add
roll
add
pop
rcl
idivl
sbb
pushf
call
dec
sub
out
ja
mov
cmp
rcrb
aaa
ficoml
xchg
mov
pop
sbb
jmp
fcomps
enter
push
push
xor
lods
testl
lfs
xchg
clc
std
loopne
push
call
addr16
loopne
cmc
adc
xchg
adc
popw
out
fcoms
out
pop
xchg
out
add
or
jmp
shlb
sbb
mov
adc
pandn
pop
push
dec
ljmp
dec
test
jns
jnp
xchg
loopne
cmpsl
das
sbb
adcb
fcmovb
in
jmp
xor
xor
and
xor
and
pusha
push
inc
out
or
and
aaa
jmp
cmp
addl
hlt
inc
mov
adc
mov
push
insb
ds
push
stos
or
or
add
icebp
adcb
mov
sbb
popf
mov
adc
pop
mov
xor
add
test
or
and
sbb
pusha
aam
sbb
and
aas
negb
rorb
mov
js
mov
xorl
push
sbb
fdivrs
hlt
mov
imul
xchg
pusha
icebp
out
scas
cmp
adc
int
sar
or
and
out
dec
scas
ja
pop
dec
imul
inc
inc
sub
add
lcall
fstpt
addb
and
and
xchg
lahf
cmc
jg
pop
and
dec
int
hlt
pop
in
push
adc
filds
test
jl
pushf
out
xchg
call
sti
ja
dec
fcoms
jo
and
mov
inc
add
or
daa
push
jle
xchg
add
add
or
out
adc
movsb
mov
jp
sbb
fsubr
push
je
js
pop
loopne
decb
inc
sbb
gs
push
cmp
pop
dec
pop
jmp
xchg
ja
mov
stos
inc
fiaddl
dec
testw
sub
lcall
xchg
push
cmp
in
cmp
scas
push
push
into
sub
inc
cld
pop
inc
inc
cwtl
popf
arpl
mov
or
or
xor
push
test
inc
jge
pop
pop
rolb
fmull
test
scas
fisttps
cs
dec
add
fimull
jns
jbe
or
ss
int3
add
pop
mov
int3
cmp
add
stos
sahf
outsb
fwait
out
outsb
dec
int3
sub
pushf
adc
dec
fmul
sbb
xchg
aam
mov
pop
inc
std
sbb
inc
les
add
push
and
push
insl
inc
mov
movsb
sbb
xor
dec
in
xor
xor
and
ja
nop
pop
movswl
push
mov
xor
dec
push
ljmp
mov
hlt
pop
jo
test
xchg
or
pop
cld
ror
test
or
pop
popf
arpl
repnz
repz
inc
jb
add
loope
adc
push
ret
inc
in
inc
movl
add
inc
test
push
xchg
lock
dec
test
fists
ds
lcall
and
bound
inc
jnp
adc
mov
mov
xchg
add
push
ret
push
popf
mov
rolb
mov
add
scas
orb
mov
jg
sti
push
loopne
insl
xor
int3
push
jp
insb
adc
dec
xchg
pusha
add
outsl
call
or
inc
jecxz
mov
addb
sbb
or
jecxz
and
dec
pop
stc
push
or
shlb
pushf
adc
adc
inc
xlat
sbb
adc
std
mov
aaa
dec
sbb
hlt
cmp
jno
add
int
cmpsl
rclb
rcrb
cmp
xor
dec
negb
shrl
or
mov
and
daa
sub
fists
sbb
lcall
es
mov
cld
pop
gs
insl
jne
daa
and
push
mov
mov
cltd
imul
adc
lahf
and
rorl
test
ja
fisubrs
mov
push
jb
xchg
and
movhps
cmp
imul
mov
int3
dec
mov
sar
sti
lret
test
fcomip
ds
lock
test
insl
inc
mov
das
or
jle
test
pop
mov
jl
push
sarl
add
inc
pushf
mov
or
clc
add
in
repnz
lock
inc
cltd
ds
ss
fwait
ret
jns
jl
cmp
xchg
cmp
cmpsl
push
or
jb
sub
mov
pop
test
movl
pushf
mov
add
loop
jmp
cmp
jp
cli
push
push
fcmove
adc
push
orb
leave
sahf
mov
inc
jle,pt
lods
nop
push
or
lock
mulps
sbb
loope
sub
out
pop
pop
insb
push
popf
dec
adc
sbb
mov
jmp
inc
mov
xchg
pop
mov
push
mov
mov
add
lahf
enter
jecxz
je
add
jo
adc
hlt
pop
add
out
ret
clc
cmp
fsubs
dec
call
dec
mov
mov
push
lcall
pop
lock
dec
out
subb
add
mov
jo
dec
sub
push
adc
incl
cmp
sub
jae
in
ficoml
xor
mov
cltd
stc
loop
cld
add
fs
cmp
cmpb
fisubs
sbb
mov
aaa
mov
or
cmc
xchg
xor
push
aad
jge
push
lea
jge
inc
add
lods
and
dec
push
mov
shrl
mov
scas
ja
inc
sub
repz
mov
adc
movsb
repnz
and
or
dec
or
data16
rorb
or
pop
or
sbb
movsb
pop
jo
ja
cli
filds
dec
xor
sbb
jp
mov
or
mov
push
and
andl
adc
inc
loopne
sbb
mov
push
xor
test
jne
pop
xor
mov
mov
sub
add
stos
mov
push
cmp
dec
bound
mov
pop
mov
inc
and
sbb
or
icebp
and
push
mov
fs
pop
cld
xchg
adc
sub
stc
mov
scas
cmp
fs
dec
sub
das
cmpl
rcrb
loope
jp
add
and
jp
or
or
pop
dec
sub
mov
outsb
lret
pop
sahf
xor
cmp
fisubrl
mov
call
out
lret
cmp
jp
sbb
add
ret
cli
rolb
sbb
push
fcomip
mov
dec
inc
call
sub
clc
mov
bound
pop
xchg
jg
mov
xchg
pop
das
ljmp
add
xor
cmpsb
jge
mov
jae
in
mov
push
cmp
adcb
test
je
and
inc
xchg
movsl
lods
lods
or
cmp
mov
and
ffreep
cld
push
loope
je
jp
jmp
call
sbb
loope
sbb
mov
cmp
cs
mov
ja,pn
xor
js
inc
pop
popa
xor
mov
popf
fs
out
mov
iret
push
fildll
jbe
push
cwtl
pop
push
sar
pop
daa
filds
or
addb
inc
mov
popa
sarl
loope
and
sbbb
xchg
fbstp
lock
xor
or
mov
pop
jmp
jge
adc
sbb
ds
inc
mov
xor
dec
add
stos
jb
add
jb
jo
stos
xchg
test
and
repnz
loopne
mov
sarb
push
pop
jle
pusha
loope
push
jge
cli
out
orb
dec
inc
push
add
fdivrs
lds
jo
out
scas
xchg
or
push
push
and
sub
dec
ljmp
dec
bound
inc
je
jno
add
sbb
adc
push
mov
cmp
pop
daa
jl
test
stos
outsb
jne
sbb
jbe
test
cmovl
fidivrs
dec
xchg
lock
js
out
or
jle
mov
loopne
jl
rorb
cltd
add
jne
scas
ret
add
jnp
dec
iret
iret
add
icebp
popf
es
mov
and
adc
push
leave
dec
fdiv
ljmp
inc
cmp
aad
cli
aaa
aas
hlt
push
cld
repz
dec
and
stc
mov
mov
cld
popf
pop
lds
stos
add
sbb
pusha
xor
pop
idivl
jle
adc
push
sti
sbb
fwait
pushf
lret
pop
sbb
loop
mov
pop
sbb
pop
pop
add
add
add
inc
decb
mov
jg
std
sbb
cmpsl
ror
insb
jne
loopne
add
aas
fs
clc
jno
push
shrl
mov
repz
lock
popf
push
push
test
push
mov
movsb
adc
cmp
aaa
sub
add
mov
shlb
movsl
pcmpeqb
pop
idiv
insl
jg
mov
or
xor
and
scas
ret
and
jg
cmp
clc
fcmovnb
mov
push
dec
fs
jle
arpl
inc
cli
popa
or
in
mov
fs
mov
mov
fwait
mov
inc
hlt
lcall
icebp
cld
push
enter
mov
adc
call
inc
fwait
add
mov
pushf
fnsave
pop
add
push
inc
loop
push
mov
fucomip
inc
nop
sti
push
mov
hlt
test
pop
xchg
shl
movsl
mov
in
sub
fcmovnb
jg
cmp
xor
bswap
xchg
pop
xor
pop
ret
xor
les
jl
rcr
push
and
fists
mov
fwait
bound
fs
rclb
imul
cltd
lret
ret
and
es
pop
clc
mov
sbb
jb
divb
decb
add
lret
sti
loope
mov
popa
std
insb
mov
roll
xor
jg
push
mov
or
xchg
dec
pop
je
dec
mov
mov
pushf
pop
or
xor
fstpl
out
jge
cmpsb
jl
ljmp
cmp
cmp
fidivl
xlat
or
test
clc
frstor
xor
arpl
loop
hlt
das
les
sbb
nop
push
dec
xchg
leave
stc
and
ret
mov
inc
or
jecxz
mov
xor
push
push
sbb
fimull
xchg
nop
popf
fstl
push
pop
jbe
push
mov
movsl
dec
dec
clc
mov
lods
shl
push
mov
sti
push
testb
mov
sbb
ret
jge
cmp
iret
and
sub
ret
xor
sub
imul
jmp
jnp
add
mov
adc
dec
fwait
xchg
mov
out
mov
scas
cmpl
out
pop
sub
mov
rclb
jle
sbb
mov
pop
cmp
ljmp
cmp
cltd
mov
jecxz
aam
out
in
dec
insb
add
ret
mov
inc
shrb
adc
dec
jb
mov
mov
aaa
inc
pop
jno
xor
adc
jmp
out
mov
mov
mov
adc
or
movsb
push
lock
sti
adc
xor
cmp
repnz
mov
js
aam
add
push
insb
sub
ret
mov
jo
dec
pushf
xorl
into
test
mov
jecxz
mov
jne
push
rcrb
add
decl
mov
cmp
or
iret
addr16
mov
dec
aaa
pushf
ror
mov
mov
arpl
or
dec
push
jg
ss
lods
mov
test
rorb
xchg
es
aam
or
sub
lods
repnz
sbb
mov
call
cltd
rorb
test
sub
lcall
xor
push
inc
mov
idivl
int3
into
in
lret
sbb
push
sbb
lcall
test
popf
mov
js
inc
test
add
lahf
dec
sub
nop
mov
sub
pop
mov
mov
pusha
jb
mov
ret
and
add
imul
js
cmpb
jmp
mov
in
imul
ss
and
pop
cmpsl
and
ljmp
mov
mov
sbb
hlt
sub
ds
mov
adc
fcomps
addb
inc
adc
sub
or
dec
in
push
in
push
in
lea
fcomp
adc
nop
sub
test
dec
xchg
cmpsb
shll
insb
cmp
pop
cli
add
ja
pop
lock
jecxz
popa
decb
sbb
jb
pop
sarl
jl
ja
insb
sub
dec
cmpl
ds
das
fcom
sbb
in
ret
add
xchg
pop
sub
inc
test
add
pushf
inc
addl
incl
shl
das
jo
ja
and
xlat
ret
ja
daa
in
mov
add
pusha
xchg
sub
fwait
aaa
push
in
fldl
push
ja
imul
xor
nop
int
jmp
pop
arpl
jae
sbbb
jp
cli
push
push
std
mov
sahf
dec
inc
repz
cmp
or
adc
shr
add
dec
jg
mov
add
push
dec
sbb
cmp
sbb
add
ja
jne
ret
sub
xor
sbb
and
cmp
pop
dec
adc
andl
push
dec
ja
mov
push
cmp
mov
xchg
cmp
cwtl
stc
ja
test
js
inc
and
rcr
or
and
sub
and
out
setp
fsub
sbb
dec
lcall
inc
cmp
ret
cmp
sbb
into
fldt
into
inc
loope
idivl
ja
sub
xchg
dec
push
jp
insb
pushf
adc
pop
ds
dec
lods
add
add
popf
cld
pop
ret
push
inc
stos
xor
sar
loop
push
lods
add
test
pop
cmp
or
clc
sti
jo
and
test
fs
outsl
test
int
mov
pop
enter
push
loope
inc
cmp
sub
mov
sub
pushf
adc
repnz
push
push
test
or
xchg
jle
addr16
sub
jmp
cmpsb
and
sbb
push
push
dec
mov
inc
adc
pushf
jbe
subb
dec
jecxz
outsb
fisttps
arpl
add
fldl
sbb
ficomps
in
pop
inc
sti
cmp
dec
add
pop
sarb
loop
pushf
mov
in
cld
add
scas
sub
orb
xor
add
out
int
xchg
cs
jge
mov
pop
idivb
or
mov
mov
out
js
andl
jnp
scas
testl
in
or
jmp
cld
loop
mov
xlat
add
mov
mov
lock
fistl
outsb
rcl
pop
push
pop
add
loope
test
clc
int
aaa
add
sbb
xor
ja
or
jb
pop
cld
inc
decl
jmp
push
ret
jmp
jno
xor
shll
jb
jmp
ret
jg
outsl
cld
adc
cwtl
inc
pop
dec
popa
mov
dec
push
or
das
xchg
je
pop
jmp
add
fs
push
fiaddl
shl
pusha
push
cmpsb
call
je
pop
cli
inc
adc
daa
adc
or
dec
cwtl
sbb
sbb
and
mov
jge
or
add
push
dec
and
aad
mov
or
repnz
sbb
adc
cwtl
mov
inc
mov
sbb
lods
les
pop
sub
pushf
sub
movsl
xchg
fdivr
das
sub
jno
cmpsb
pushf
ja
lods
aad
popa
mov
sbb
lods
dec
adc
push
or
xor
xorl
cld
orl
aad
scas
hlt
inc
and
add
ror
jecxz
jmp
mov
sbb
push
in
pop
push
shrb
cltd
dec
jle
xor
daa
add
mov
clc
push
add
in
xchg
test
mull
mov
adc
pusha
and
xchg
mov
repz
fcomp
jo
and
mov
mov
insb
je
clc
jmp
rol
mov
test
mov
addl
out
clc
xor
lds
fwait
clc
outsl
pop
aad
addr16
or
adc
mov
enter
aas
sahf
mov
stos
dec
mov
data16
cli
jg
std
mov
mov
add
cmp
jl
ror
sub
and
out
and
subb
mov
daa
lock
mov
mov
sub
mov
cmp
xor
jmp
mov
sub
testb
cmp
and
aas
xchg
add
push
loopne
and
add
popf
add
subb
inc
push
add
sbb
popf
outsb
addb
inc
int
je
jg
je
mov
adc
stos
mov
outsl
das
movsb
adc
or
sub
das
mov
movsb
xor
add
sub
xor
cld
pop
pop
or
add
or
inc
adc
ret
xchg
sbb
jle
mov
ljmp
repz
repnz
test
adc
xor
adc
dec
stos
mov
fs
and
ljmp
shlb
and
ja
pushf
add
leave
test
mov
mov
xchg
lock
or
inc
push
adc
ja
mov
cli
jmp
ja
clc
xchg
mov
xchg
dec
sbb
cld
and
cmpsb
lock
mov
push
and
jb
or
sbb
cmp
mov
or
push
adc
fdivr
mov
outsb
pop
push
lret
mov
mov
int3
add
mov
mov
mov
rclb
dec
push
clc
pop
decl
adcb
sbb
cmp
add
dec
xor
leave
adc
mov
sbb
adc
adc
cld
pop
adc
cwtl
fwait
push
stos
xchg
xor
movsb
dec
cmp
stos
andl
sbb
out
mov
sahf
cmp
in
pop
add
xchg
repnz
add
fildl
push
xor
or
inc
or
sub
adc
ja
jle
cs
adc
fistl
add
dec
push
jmp
jl
fistl
mov
pop
and
and
mov
insl
push
enter
loop
or
dec
or
pusha
sub
sub
insb
sub
mov
or
addr16
aas
and
hlt
loop
adc
push
push
lock
lret
xchg
cmpsl
add
mov
xchg
add
cmp
push
adc
in
cli
ja
xor
xchg
and
rcl
ja
and
aad
test
or
cltd
cmp
cli
sub
fwait
cmpsb
mov
push
xor
jecxz
jo
inc
mov
ljmp
push
add
fnstenv
mov
dec
mov
cmpsb
loopne
mov
scas
test
fnstsw
sbb
push
call
pop
orl
xor
sbbl
ss
cmp
aas
lods
sbb
int3
cmp
xchg
mov
add
pusha
dec
loope
adc
int3
sbb
cmpsl
mov
jle
or
cld
push
cmp
push
std
out
loope
imul
sbb
mov
push
hlt
or
cmp
xor
cs
fcos
cmp
ljmp
imul
jmp
insl
or
mov
mov
jp
leave
mov
sbb
jo
xor
popf
loopne
inc
int3
inc
xorb
lds
fiadds
clc
cmp
in
scas
inc
call
xor
into
bound
mov
rcrl
call
into
out
ret
test
enter
pop
xchg
pusha
in
mov
cmp
sbb
lock
add
ret
mov
or
xchg
xchg
mov
jl
pop
push
sub
and
cmp
pop
and
mov
dec
cmpsb
ljmp
jno
movsl
stc
in
add
jecxz
fwait
neg
pop
and
jbe
idivl
dec
in
xor
push
or
insl
mov
loope
cmp
in
std
mov
or
lds
mov
mov
cmc
adc
sub
popf
adc
pop
roll
dec
adc
push
movsl
rol
popa
lea
aaa
add
outsl
hlt
or
es
loope
call
mov
loope
cs
cmpsb
jp
add
lds
icebp
jnp
das
pop
push
ja
int
movsb
push
cmpsl
pop
jmp
cmc
js
or
std
inc
jge
mov
mov
push
pop
sbb
dec
add
jo
and
les
aad
shrl
fiadds
test
pop
mov
xchg
adc
sub
fwait
repnz
adc
sbb
lds
and
push
jle
sub
push
jmp
outsb
pop
call
pop
cmp
test
lret
out
rcrb
arpl
adc
and
cltd
mov
or
repnz
push
fsts
sub
lods
adc
clc
adc
and
mov
pop
shl
jnp
pop
xor
mov
jo
arpl
ret
clc
pop
add
dec
ficoms
cmp
xchg
xchg
sub
cmp
in
push
jnp
add
adc
and
nop
mov
lret
push
inc
cltd
jnp
insl
mov
push
imul
sub
push
jmp
ret
movsb
push
mov
push
ja
ret
jnp
jnp
aad
cmp
dec
sti
pop
cmp
popf
leave
dec
dec
sub
orl
int3
adc
pop
out
mov
jnp
jle
sub
hlt
std
jecxz
into
inc
xchg
adc
je
pop
gs
nop
or
imul
les
aaa
and
popa
dec
xchg
addr16
dec
pop
mov
mov
mov
push
mov
and
test
lds
bound
sub
xchg
sahf
xor
ljmp
xor
add
dec
jle
pop
add
inc
dec
or
inc
pop
push
push
in
push
and
mov
push
or
adc
les
loopne
add
cltd
xchg
pop
inc
shll
lock
pop
outsl
call
dec
es
ja
and
adcb
push
and
lock
repnz
hlt
fnstenv
xchg
pop
out
xor
add
loope
add
stc
add
test
and
hlt
fnstcw
cs
jns
test
and
outsl
pop
shlb
sbb
ljmp
mov
or
push
adc
cmp
add
out
loopne
dec
int3
sub
shrb
pop
lds
ja
add
xor
test
inc
push
jmp
and
das
inc
cs
add
lret
test
or
in
adc
fs
mov
adc
or
push
nop
jo
scas
test
push
cwtl
push
cld
pop
sbb
sub
mov
orl
jg
xor
in
insb
clc
inc
inc
lods
gs
addr16
add
or
test
movsb
rcrb
add
das
push
push
adc
lcall
sahf
repnz
loop
mov
sbb
mov
ljmp
aam
stos
outsl
or
movsb
lgdtl
in
sahf
test
mov
fwait
pushf
push
mulb
jg
mov
inc
inc
adc
push
mov
call
pop
fwait
mov
xchg
xor
loopne
in
mov
and
and
lcall
incb
jmp
inc
pop
cmp
mov
add
sub
les
jle
mov
xor
xchg
sub
xsave
fnstcw
icebp
and
inc
inc
push
push
jb
mov
push
fsubrl
jae
push
add
jp
clc
ss
lock
fadds
rorb
mov
dec
push
inc
mov
add
shr
add
or
adc
pop
xor
mov
and
repz
pop
inc
cmc
pop
out
adc
rolb
push
mov
adc
fnsave
adc
out
in
sbb
pop
ficoms
xor
dec
and
or
aam
adc
fstl
in
test
rolb
jmp
icebp
scas
outsl
insl
iret
mov
shr
aam
mov
clc
cmp
stc
inc
or
int3
cmp
ret
push
imul
dec
dec
movsb
mov
rcrl
sbb
out
out
outsl
adcl
pop
pushf
add
mov
mov
fidivrs
in
fs
push
xor
decb
negl
loopne
pop
cmp
hlt
faddp
mov
cli
cmp
je
xor
ret
add
mov
loop
sub
dec
pop
jle
or
inc
inc
repz
pop
call
imul
and
stos
mov
inc
insl
arpl
push
ret
pop
push
loop
push
push
pop
or
mov
jnp
cld
outsl
mov
lock
xor
out
aaa
std
mov
or
cmpsb
in
and
shrb
sub
rcll
sbb
or
les
loope
lahf
push
cmp
pop
mov
mov
sbb
outsl
mov
jecxz
sahf
scas
push
cltd
bound
imul
lds
imul
out
mov
jle
cmpsb
rolb
stos
mov
popa
dec
cmp
scas
push
mov
daa
pop
decl
test
in
cmp
xchg
cs
jle
sub
mov
push
mov
out
out
xchg
sub
add
push
push
mov
in
lods
jg
aas
push
repnz
inc
xchg
bound
xor
stos
jl
mov
add
sbb
mov
push
and
mov
pop
lds
cmp
mov
pop
dec
xchg
adc
xchg
or
clc
pushl
loopne
repnz
inc
stos
push
and
add
push
and
jbe
repnz
or
mov
mov
mov
or
fwait
mov
sub
call
iret
ja
jo
js
fwait
jne
xchg
aam
hlt
lahf
rolb
jmp
mov
insb
into
dec
mov
sub
jbe
mov
adc
inc
cmp
int3
scas
clc
mov
jns
leave
push
leave
add
out
mov
ja
add
adc
cli
jo
incl
pop
or
cld
ror
leave
pop
dec
in
lea
pop
mov
test
aad
gs
call
clc
jae
xor
mov
clc
cmp
push
hlt
mov
and
test
popa
jge
cmp
inc
fdiv
mov
inc
imulb
scas
inc
sti
push
lds
in
pusha
mov
and
jbe
mov
mov
pop
mov
adc
pop
xor
xchg
icebp
nop
rorb
call
pop
cli
mov
sub
mov
lock
nop
fdivl
or
xor
fisubrs
out
aam
sbb
imulb
adc
addb
push
dec
or
cmpsb
pop
dec
sbb
pusha
push
push
push
pavgw
loopne
sbb
jl
add
mov
add
add
xlat
mov
cld
adc
subb
test
add
aad
rolb
scas
lds
xchg
rclb
test
push
dec
cld
loop
sahf
cmp
or
mov
and
sub
outsl
fdivrs
adcl
cs
adc
jno
fdivrl
push
stc
push
adc
mov
pop
insb
loopne
add
mov
outsl
push
ret
and
sbb
cmp
sbb
adc
int
mov
into
nop
scas
or
pop
mov
mov
leave
incb
push
lret
imul
adc
mov
fwait
and
sub
mov
mov
incb
test
pop
fs
pop
test
data16
shl
outsb
sbb
lods
inc
and
call
pop
ss
shll
jns
jg
pop
adc
sub
insl
loope
push
out
daa
cmpsb
icebp
bound
jg
or
subb
mov
mov
pop
push
cmpsb
sbb
pop
aad
xchg
sub
into
push
add
outsb
sbb
ja
popf
movsl
shll
ja
lret
mov
sbb
stos
sbb
rcrl
mov
fisubrs
mov
aas
add
shl
jmp
sbb
dec
enter
cmp
pop
mov
in
cmpsl
push
cs
inc
mov
push
fsubs
shlb
or
imul
push
cmp
es
subb
sbb
cld
push
call
jg
add
pop
sub
aad
pushl
pop
and
add
ja
dec
xchg
pusha
pop
inc
or
cmp
ret
mov
mov
inc
inc
fwait
ret
aas
push
xorb
lock
jge
inc
jae
cmpb
cmp
repnz
jle
scas
and
mov
adcb
dec
jg
cmpsb
cmp
loop
lock
mov
push
int3
lock
cmp
stc
add
xchg
cmp
inc
push
fwait
clc
ret
sbb
lahf
dec
leave
jae
or
mov
fiaddl
cli
movsb
dec
push
inc
xchg
mov
mov
add
pop
fsubl
mov
push
push
or
xor
enter
xchg
or
sbb
pusha
push
cmc
adc
icebp
or
mov
dec
sbb
loop
enter
sbb
or
repnz
cmp
adc
and
call
idiv
xor
inc
mov
addr16
and
add
inc
test
xchg
les
call
call
insb
push
mov
adc
inc
adc
push
out
adc
adc
push
mov
mov
aas
ja
adc
sbb
data16
mov
clc
std
cmp
xchg
or
xor
cmp
or
stc
pop
jecxz
lods
sbb
xchg
inc
loope
adc
mov
fwait
fiadds
pop
sbb
into
mov
pop
or
fsubs
add
and
ss
inc
scas
pop
mov
inc
inc
add
pop
jl
jb
sbb
adc
out
cli
mov
and
cmc
push
push
icebp
lcall
adc
adc
lcall
cmpl
push
add
ljmp
jae
jmp
dec
cmp
loop
pop
adc
mov
pop
dec
cmp
std
testb
inc
lcall
sub
or
push
add
test
push
jae
mov
ja
js
xlat
repz
cwtl
movsb
lock
pop
outsb
aad
cmp
pushf
jno
push
daa
xchg
insb
subb
shlb
xlat
fs
mov
sbb
sbb
add
nop
fcmovb
mov
test
jae,pn
adc
int
sbb
or
iret
outsb
loope
xor
fsubs
jbe
push
and
in
jns
sti
mov
mov
dec
jb
cmc
push
lea
xchg
sti
add
aam
stos
pop
sub
out
jmp
jno
xchg
sbb
sub
or
dec
out
jae
lret
lret
jbe
cmp
mov
jp
lods
fs
aam
xor
loopne
outsb
xor
or
daa
sar
shlb
loope
mov
mov
xchg
test
mov
xchg
fmuls
add
cs
inc
mov
push
mov
pop
les
fwait
ds
sub
repnz
jg
push
out
add
dec
aas
mov
aas
pop
lret
test
cmc
clc
push
bound
mov
and
push
pop
movsl
push
pop
mov
test
lea
fdivs
aas
icebp
ss
inc
lods
mov
cmp
and
inc
xchg
add
neg
imul
adc
pushf
fs
insl
lods
push
pop
pop
loopne
inc
rcl
jns
cmpsb
or
jo
aas
aaa
push
in
in
icebp
ret
mov
lcall
or
pop
mov
add
jae
or
ret
data16
jmp
mov
ds
add
jp
cmp
pusha
test
ljmp
rorb
ret
and
jge
lds
sti
js
add
push
sub
xor
or
sbb
ds
test
lret
repnz
mov
adc
lds
rorl
nop
xchg
mov
ja
mov
mov
divl
pop
jmp
pop
xchg
sbb
test
test
lahf
iret
stos
shl
aas
out
sub
aad
xor
enter
int
inc
jae
or
test
data16
ljmp
dec
cld
adc
xchg
aaa
push
sbb
or
scas
push
inc
ja
xchg
es
out
and
test
pushf
adcb
sbb
cmp
loopne
sbb
push
mov
inc
fwait
dec
pop
ror
adc
fidivrl
xchg
pop
adc
push
cwtl
adcl
mov
je
rorl
dec
aas
add
or
icebp
add
push
clc
ljmp
jmp
jo
loop
inc
icebp
push
dec
ja
and
scas
nop
pop
dec
fidivrl
sub
push
test
inc
mov
cmc
jo,pt
daa
inc
pushf
jle,pt
cmp
aam
push
in
mov
jne
add
and
cmp
sbb
add
js
rcll
sbb
jb
or
outsl
mov
cmpsb
dec
nop
fidivrl
cmp
addr16
push
xchg
fs
das
sbb
test
inc
jg
test
xchg
pusha
mov
mov
adc
cs
dec
test
xchg
pop
lock
mov
dec
xchg
mov
push
mov
in
xchg
mov
xchg
adc
and
push
cwtl
pop
xor
loop
jae
dec
jl
push
sub
cltd
js
mov
dec
xor
adc
ja
cmp
inc
mov
sbb
cmc
jbe
add
and
sbb
aam
mov
pop
lods
in
push
cli
xchg
mov
test
fnsave
out
cli
loopne
inc
pushf
test
pusha
mov
mov
jmp
inc
enter
add
push
dec
loop
push
sbb
jmp
jae
sbb
jne
cmp
repz
jb
or
in
movsb
push
jne
mov
jg
xor
cltd
push
push
sbb
vmwrite
scas
into
not
push
inc
int
sbb
test
imul
lahf
push
es
mov
mov
jae
fwait
jno
cmp
pushf
jo
shll
add
mov
mov
lock
mov
sub
push
add
leave
mov
push
ljmp
cmp
pop
test
push
inc
mov
add
movsl
stc
mov
push
dec
dec
imul
fistps
addb
std
insb
je
mov
mov
inc
ja
int
lret
jge
push
mov
adc
mov
mov
sub
inc
and
mov
adc
sbb
mov
aam
mov
ss
xchg
cli
push
and
decl
inc
movl
ja
out
xor
bound
cmpl
sbbl
or
sbbb
xor
mov
stos
add
xchg
pop
test
push
pop
add
jecxz
ds
daa
mov
mov
icebp
pop
add
add
sub
add
dec
testl
das
lahf
xchg
addl
insl
cmp
ds
addr16
jg
jmp
lock
rolb
lods
mov
inc
mov
sbbb
or
test
push
gs
int
jl
push
in
push
pop
je
jl
sub
lcall
adc
sar
cmp
clc
sub
arpl
cs
mulb
enter
insb
adc
rclb
movsb
jmp
fmull
mov
adc
adc
cmpsb
outsl
rclb
lret
stos
fidivrs
and
xor
or
pop
sub
cmp
push
jno
push
adc
cmp
or
fwait
repnz
das
inc
mov
test
aas
loope
sub
sbb
in
xchg
cld
ficoml
lret
add
xchg
dec
or
adcb
jp
lods
xor
sarl
jmp
add
sbb
push
mov
mov
int3
mov
movsb
and
es
lock
xor
add
push
sbb
cmpsb
cmp
mov
adc
jnp
adc
jecxz
dec
xchg
sbb
lret
mov
cmp
sbb
bound
cld
lds
xchg
add
push
pusha
cmp
pop
cli
xchg
popa
popa
jl
ss
xchg
xor
sbb
cli
cmp
icebp
push
pop
mov
mov
scas
sub
hlt
push
jnp
arpl
popa
inc
jo
cmp
lods
addl
cmp
push
push
or
dec
add
push
inc
sarb
mov
loop
bound
pop
out
push
xchg
fstpt
or
hlt
insl
mov
jg
rorl
jbe
or
sahf
sbb
ja
mov
popf
jle
mov
cmpl
mov
or
rorb
outsl
fsubrl
xchg
pop
pop
add
mov
cmp
jle
faddp
pop
stos
sub
or
clc
push
fisubrs
test
scas
negb
loopne
xchg
adc
jbe
icebp
or
cli
cmpsb
jl
dec
push
sub
divps
test
cmp
xor
cmp
sbb
shl
sbb
mov
jbe
add
loopne
out
nop
and
push
rcll
test
xchg
rcrb
sub
sbb
cld
je
pushf
sub
outsb
inc
jnp
es
or
sbb
lock
lret
dec
add
insl
loop
sbb
xchg
fwait
mov
icebp
adc
sbb
dec
pop
push
addb
jnp
mov
into
ss
popa
add
jb
dec
push
pop
adc
mov
add
xchg
adc
cs
cmpsb
adc
xor
mov
fwait
sbb
xchg
cwtl
scas
aas
fiadds
mov
mov
add
jns
ss
insl
in
dec
aaa
or
lods
fdivrl
inc
test
stc
adc
pop
rcrb
jnp
loopne
mov
add
and
rcrb
xlat
mov
int3
js
es
mov
ljmp
cwtl
mov
sub
push
push
and
add
push
sbb
cmp
and
out
pop
adc
push
jp
inc
pop
or
mov
push
lret
lea
push
pop
sbb
inc
popa
frstor
jp
jo
dec
sbb
or
ret
pop
jo
mov
mov
out
adc
mov
test
xor
adc
or
and
leave
or
stos
test
cwtl
popf
xor
and
mov
lock
or
fidivrl
repz
cs
push
and
or
sub
loop
rcll
ja
inc
push
clc
xor
ss
fldt
movsb
push
or
test
sti
inc
xor
cld
leave
pop
cmp
rcrb
cmpsb
sbb
dec
in
arpl
call
pop
push
repnz
mov
mov
addr16
loope
sbb
insb
or
cs
cmp
jge
pop
leave
and
out
xchg
cmp
jae
nop
dec
mov
hlt
scas
cld
pop
int3
insl
adcl
push
xorb
loop
pop
repnz
aad
gs
call
jl
sub
loopne
inc
push
movsb
aaa
sub
xor
or
push
sub
mov
xor
pop
in
pop
cld
and
jg
not
xchg
inc
adc
int3
add
push
xchg
loopne
lods
paddsb
mov
clc
mov
and
movsl
aad
pop
push
or
mov
mov
fldt
pop
bswap
xor
lods
add
fsubl
stc
adc
hlt
inc
push
add
add
mov
jl
lret
adc
mov
cli
loop
arpl
arpl
push
and
shll
insb
jg
mov
stos
clc
repnz
loopne
sbb
and
test
cs
ret
dec
mov
ret
stos
push
mov
push
push
cltd
sbb
int
adc
loopne
dec
mov
dec
inc
out
loope
ja
push
mov
xorl
bnd
aam
movsb
sbb
cmpsb
movsl
loope
mov
cmp
sub
xor
jnp
into
ret
xchg
push
pop
fmull
and
jg
popa
mov
cs
scas
jns
push
shll
or
rcrl
fcmovbe
adc
cwtl
fidivs
imul
lret
jl
jg
mov
and
mov
inc
sbb
aas
push
push
cmpsb
jl
adc
mov
aad
jl
stc
push
ror
adc
loopne
outsb
mov
ss
orl
mov
dec
aam
fcoms
insl
mov
mov
movhps
pop
adc
lods
nop
lock
pop
push
in
adc
ljmp
inc
or
dec
aaa
in
data16
sarb
ljmp
adc
cmpsl
ds
inc
addl
dec
icebp
imulb
je
push
jl
sbb
sahf
rcll
notl
hlt
adc
pop
push
mov
sahf
call
cmp
inc
push
or
jp
push
fs
popf
push
stos
es
test
xchg
mov
lock
jle
test
arpl
xor
add
and
movsl
jg
or
sbb
loope
mov
sbb
sbb
lock
fnsave
push
dec
cld
dec
inc
jge
sbb
repnz
mov
mov
mov
and
shll
addr16
pushfw
adc
rolb
jle
xor
cmpsb
stos
mov
jle
jg
lret
inc
xor
mov
daa
mov
test
and
dec
lahf
dec
inc
fcomip
leave
xchg
jmp
cwtl
and
ljmp
std
xchg
add
cs
loope
jecxz
shl
lret
mov
in
cld
clc
lods
std
pusha
jg
ja
mov
lahf
jmp
pushf
mov
dec
push
and
fdivr
or
insl
fisttps
mov
invd
sbb
call
hlt
cmp
sti
inc
lret
mov
icebp
out
icebp
xchg
inc
pop
iret
sub
les
push
cld
xchg
jo
fisubrl
ficomps
xor
or
scas
add
cwtl
lds
fisttpll
sbb
stos
inc
mov
lds
out
test
imulb
les
inc
dec
mov
xor
jle
mov
cld
pop
fmuls
jb
dec
jmp
adc
pop
sbb
and
pop
mov
es
in
xchg
mov
mov
add
out
mov
hlt
bound
sub
out
cmp
mov
sbb
cwtl
sbb
or
decb
sbb
xlat
xchg
inc
xchg
xchg
push
std
mov
pop
cs
jno
mov
lock
mov
cmp
pop
orb
bound
loope
xor
jne
fwait
mov
roll
mov
aad
pusha
je
call
movsl
pop
cmp
mov
lea
movsb
jbe
test
addl
mov
and
jnp
cmp
xchg
mov
push
data16
fnstenv
mov
dec
adc
push
push
sbb
mov
mov
ficoms
push
sub
pop
jnp
jne
lods
les
cmpsl
ss
mov
jns
jp
pop
pop
or
push
dec
inc
ret
mov
jp
mov
int3
pop
aaa
mov
enter
daa
aam
dec
mov
mov
pop
xchg
dec
test
mov
and
mov
loope
daa
ja
enter
mov
xchg
xor
add
adc
les
call
and
cli
out
gs
cmpsb
or
mov
mov
in
pop
xlat
sub
lock
add
bound
sub
pop
in
mov
sub
fbstp
sbb
mov
es
mov
adc
xchg
fisubrs
mov
xchg
jmp
mov
pop
mov
add
ret
ja
incb
mov
mov
popa
dec
cmpsb
pushf
dec
jg
cli
add
fadds
into
cmpsl
fisttpl
dec
cltd
push
add
jne
ret
sti
add
adc
in
xchg
xchg
mov
popa
nop
mov
adcb
mov
in
mov
fnsave
mov
shl
push
or
mov
movsb
xlat
dec
into
fmul
adc
fisttpl
pop
jo
lcall
call
jecxz
mov
and
cmp
call
bound
mov
adc
cmp
out
flds
into
inc
cmp
scas
adc
mov
xchg
mov
pop
sub
nop
pusha
stos
and
addb
daa
loopne
fnsave
shlb
jo
mov
scas
sub
xorb
or
sahf
sbb
or
popf
mov
imul
mov
rol
nop
movsb
je
jmp
cmc
fsubl
cmp
stc
add
arpl
int
sbb
jns
xchg
mov
dec
nop
adc
shlb
dec
mov
int3
aam
xor
xor
lea
xchg
cltd
cmp
mov
hlt
and
hlt
fdiv
xchg
mov
add
and
divb
inc
inc
ljmp
movsb
shll
xor
out
push
call
adc
je
int3
bnd
enter
outsb
adc
sub
leave
jo
xchg
aas
test
mov
jo
push
int3
xor
arpl
sub
gs
les
cmpsb
aas
mov
cwtl
lock
icebp
mov
cs
outsb
push
das
popa
clc
inc
cli
cmp
xor
dec
mov
lods
mov
cmp
jns
shrl
jp
sbb
ret
es
dec
shr
xor
sbb
lock
push
push
jmp
mov
pop
cmp
into
stos
sar
arpl
dec
lcall
jnp
jnp
jmp
in
movsb
cwtl
inc
loop
xlat
add
es
movsl
or
std
xchg
mov
jb,pn
cmpb
ds
jno
lret
xchg
mov
inc
data16
sub
aam
popa
das
rcrb
xlat
mov
pop
cld
add
mov
adc
dec
cld
scas
adc
fcompl
jl
mov
mov
lea
aad
sti
mov
pop
dec
fs
sahf
in
jae
bound
mov
stc
xor
clc
lcall
dec
pop
rol
pop
inc
pop
std
pop
add
lret
sarl
int3
xchg
add
mul
and
cmp
mull
out
shrb
std
push
cmp
divb
shll
adc
xbegin
sbb
push
jg
jg
lahf
inc
repz
add
pop
pop
mov
cmpb
test
out
and
scas
out
test
adc
orb
mov
scas
int
jl
mov
push
xlat
js
jmp
in
push
jae
repnz
push
add
es
es
push
in
sarb
sbb
push
inc
adc
aaa
push
or
inc
fdivrs
push
jg
cmp
sti
gs
add
in
or
inc
push
add
and
ja
push
in
add
inc
pop
outsl
or
jae
push
insl
pop
cli
sub
or
hlt
jnp
negb
cld
mov
pusha
jae
test
xor
mov
ffreep
in
rolb
jbe
pop
lock
inc
sbb
stos
push
add
mov
rolb
dec
imul
sbb
mov
mov
push
gs
xchg
and
addr16
roll
std
lea
ja
jns
jp
xchg
rcrl
test
int
ret
lcall
movb
and
lods
sub
adc
mov
pop
lds
mov
popf
adc
xchg
adc
add
stc
in
adc
sbb
bound
inc
pop
push
dec
ffree
xchg
add
lock
loop
in
dec
lahf
in
fdivp
or
cmp
sub
outsb
fisubl
cld
rol
hlt
add
jg
lsl
test
jmp
dec
test
jecxz
mov
je
ljmp
push
scas
imul
out
sbb
mov
jg
rolb
fidivs
sub
lea
jo
cmpsl
and
lods
sub
ja
nop
pop
inc
add
gs
add
pop
hlt
decl
test
cmp
cmpxchg
je
idiv
andb
pop
jge
push
pop
jge
xchg
cli
lea
testl
and
mov
jg
and
pop
pop
mov
push
mov
xor
jg
ja
sub
dec
push
in
mov
mov
mov
test
cmpsb
xor
push
test
jno
inc
adc
jecxz
jne
fisubrl
xchg
sbb
dec
inc
fs
aad
push
dec
in
in
xlat
loopne
loope
mov
scas
ljmp
cmp
std
push
mov
push
jmp
pop
movsb
notl
out
clc
pop
cld
subl
mov
cmp
adc
xchg
xor
aad
add
xchg
push
mov
mov
cmp
and
das
add
xor
pop
or
mov
rcll
and
sbb
outsl
push
int3
mov
sahf
mov
sub
inc
ret
mov
mov
vpackuswb
push
pop
mov
les
pop
shrb
leave
jp
cmpsl
dec
mov
inc
mov
hlt
pop
pusha
and
stos
push
mov
rorb
jmp
mov
cwtl
mov
ljmp
pop
bound
pop
adc
or
xchg
add
push
xchg
add
pop
mov
sbb
pusha
lock
cli
ljmp
sahf
std
push
cmp
loop
inc
cmp
or
add
jl
lds
push
loopne
loop
xchg
mov
ficoms
js
mov
punpckhbw
push
inc
andl
sbb
movsb
adc
pop
movsb
cmp
imul
inc
clc
es
clc
fistps
add
rcrl
bound
jne
jp
pop
mov
subb
add
mov
add
aam
xor
xor
clc
mov
aam
sbb
adc
xchg
xchg
call
inc
sub
or
mov
mov
dec
mov
scas
lret
les
jg
scas
rclb
or
pushf
adc
mov
cld
push
add
inc
sbb
push
jg
add
fwait
in
sahf
push
add
adc
or
inc
rolb
in
lds
es
bound
icebp
xchg
sbb
into
ret
xor
inc
mov
ret
dec
cmp
das
cwtl
pop
stos
mov
subl
dec
popf
add
xor
jg
mov
lock
xor
adcb
ret
mov
fisubs
daa
pusha
lds
cmpsb
adc
lock
cmp
mov
add
jecxz
cld
jbe
lock
push
ss
pop
adc
sbb
incl
mov
shlb
xlat
sub
inc
imul
hlt
insb
or
inc
aad
adc
lcall
dec
mov
ficomps
mov
mov
xor
add
add
ret
dec
mov
in
push
sti
dec
loopne
xor
mov
add
mov
hlt
out
je
daa
in
sahf
lds
sbbl
ret
push
pusha
cmp
push
pop
hlt
jge
add
pop
pop
faddl
mov
add
loope
incl
sti
add
cmp
mov
dec
enter
adc
dec
or
cmp
gs
add
sarb
ret
loop
dec
aam
gs
xor
icebp
pop
shl
push
icebp
dec
shlb
loop
mov
lock
jmp
roll
out
repnz
fs
ret
dec
hlt
jno
mov
adc
cltd
lods
out
cmpsb
in
mov
loope
push
ljmp
fists
pushf
inc
sbbl
xchg
orl
dec
lods
fnop
and
mov
stos
mulb
repz
hlt
push
and
pushf
aam
xchg
jle
shl
and
enter
push
xchg
cmc
add
add
mov
ret
xor
rcrb
lock
sub
js
je
rclb
cltd
cmp
mov
lock
and
addr16
add
imul
popf
int
add
adc
lock
and
xchg
xchg
push
sbb
xor
gs
das
js
repz
pop
xor
pusha
dec
rcll
pushl
xchg
mov
clc
add
nop
fs
jmp
lods
lret
xchg
mov
aad
xchg
pusha
clc
out
or
pop
lds
ja
rolb
add
call
xchg
icebp
mov
ss
cltd
lea
xchg
daa
cli
xor
sarl
test
dec
es
out
jo
sub
in
add
lahf
or
cmp
movsb
jg
movsb
jg
inc
push
cli
mov
loopne
and
in
addb
or
into
pop
jmp
cwtl
cld
xlat
lret
stc
xchg
sbb
fdivs
decb
stc
rcrb
jbe
imul
ret
cmpsl
xor
imul
pushf
dec
vmaxpd
jp
dec
stc
std
lret
enter
adc
addb
jb
outsb
sub
leave
in
or
lock
insb
or
push
sub
sub
lahf
and
xor
addl
and
mov
dec
or
mov
adc
lds
mov
xchg
test
imul
or
mov
mov
sbb
jmp
jge
cwtl
mov
mov
mov
aad
mov
and
ficoml
sbb
sbb
add
mov
mov
les
add
fbstp
cmp
or
mov
dec
adc
fdivrl
mov
or
addr16
and
mov
mov
mov
js
mov
cmpsb
mov
popa
xchg
xchg
xor
jge
push
lret
clc
pop
mov
in
icebp
pop
add
aaa
mov
mov
push
mov
syscall
inc
add
sub
push
cwtl
clc
add
xchg
push
lods
xchg
fdivrp
or
call
sub
adc
push
loop
and
mov
xor
shl
movsl
and
pop
cmp
fstps
loop
in
in
mov
outsb
mov
lahf
sbb
or
add
in
pop
fisttps
bswap
xchg
in
jg
mov
dec
test
aas
je
jle
pop
mov
nop
ss
cmc
xchg
add
test
inc
rorl
cmp
clc
decl
push
xor
cmp
mov
outsl
xor
lock
std
in
jp
lods
test
cltd
les
jb
or
xchg
jle
mov
dec
call
out
mov
sub
rolb
mov
shll
and
cs
pop
mov
push
mov
mov
or
popa
lea
je
das
jl
xorb
mulb
test
movsl
pop
lods
cmp
xor
inc
and
jnp
decb
scas
dec
out
shlb
cmpl
iret
sbb
lea
push
push
push
sbb
icebp
aas
ret
scas
mov
mov
mov
inc
add
pop
loope
mov
mov
clc
fwait
sub
cmp
pop
call
ss
scas
fidivrl
mov
push
sub
xchg
movsl
out
fidivrl
jecxz
insb
shrb
jo
repnz
lcall
stos
das
xor
mov
pop
mov
add
imul
mov
shrl
faddl
and
js
call
loope
and
dec
xchg
pop
fildl
fstps
bound
cmc
push
es
mov
add
and
add
cmp
les
push
or
shrl
pop
popf
jo
or
fst
sbb
out
insb
faddl
push
sarl
mov
stos
lret
jno
jnp
sub
filds
adc
aaa
xchg
jg
sub
and
cli
sbb
ss
sbb
test
sbb
aaa
push
mov
popa
iret
xor
lcall
in
adc
add
push
mov
adc
fmull
fwait
add
sub
xor
js
imul
xor
iret
daa
xchg
shl
pop
lods
mov
es
jg
imul
popa
lods
and
pop
push
mov
add
or
xchg
inc
js
rcrl
popf
rcrb
jae
outsb
and
inc
dec
orb
mov
dec
mov
xor
and
leave
pop
xchg
icebp
jmp
add
mov
pop
mov
push
pop
hlt
and
sub
sub
jg
clc
dec
int3
nop
ja
stos
mov
xchg
clc
andb
sub
xor
sub
fcomp
and
cmp
adc
mov
sub
dec
mov
sub
mov
inc
outsl
rolb
and
dec
and
mov
sbb
in
push
hlt
or
mov
je
mov
stos
mov
repnz
jmp
push
std
fwait
scas
xchg
push
jbe
nop
pop
and
xor
or
mov
je
or
cs
repz
ds
mov
frndint
test
push
loop
mov
pop
outsl
ret
push
das
rcrl
adc
andb
outsb
clc
jno
ret
push
mov
dec
andb
xchg
test
mov
cmp
mov
inc
cmp
stc
incl
cwtl
cmpsb
sti
inc
test
ljmp
fs
mov
loopne
ja
mov
arpl
loope
aaa
jae
xor
cmpsb
lret
ljmp
cwtl
mov
xorb
clc
push
push
loopne
and
dec
out
rcrb
pop
mov
mov
add
hlt
mov
test
xchg
inc
push
pop
imul
sbb
es
or
movsb
orb
dec
pushf
push
push
ljmp
lods
add
ficompl
scas
inc
mov
testb
push
lret
sub
je
jle
pop
and
fdivs
add
add
shlb
testb
sbb
ss
or
notb
lock
mov
ficoms
in
add
xor
loop
mov
call
pop
push
sbb
je
xor
aaa
push
add
jb
subb
out
cwtl
test
jge
std
pop
cmp
inc
mov
movsb
add
fbstp
mov
rcrl
movsl
pop
outsl
in
pop
mov
sbb
push
sbb
push
mov
mov
mov
sahf
pop
clc
in
enter
inc
mov
and
rcrb
ds
cmp
insb
push
fisttpl
lods
das
int3
xchg
dec
loopne
or
dec
imul
addl
cwtl
fdivrs
push
adc
xor
or
or
jg
cmp
out
xchg
or
or
jo
or
add
mov
addb
mov
or
jbe
mov
xchg
push
jg
arpl
push
ds
sbb
das
xabort
adc
xchg
add
in
lock
jge
pop
push
pushf
jns
mov
ds
mov
aas
pop
and
movsb
sahf
nop
inc
inc
jp
ds
and
scas
ret
popa
ljmp
or
or
notl
fcoml
dec
sarl
push
mov
add
fwait
jle
adc
ret
adc
cmp
cmp
add
and
pop
rcrl
fdiv
ja
mov
loope
cs
mov
loopne
rclb
mov
sbb
mov
and
pusha
and
testb
sub
cmp
pop
popf
push
mov
push
out
lahf
cmp
sbb
cmp
lahf
mov
jne
das
icebp
or
bound
test
lds
and
add
add
jl
nop
xchg
mov
dec
inc
dec
leave
test
push
cli
test
push
adcb
xchg
mov
fs
sti
outsb
insl
cmpsb
and
dec
pop
lock
sub
mov
fbld
or
push
sbb
mov
cmp
and
lock
sub
mov
sub
xchg
xor
xor
mov
cmp
mov
enter
or
pop
or
ret
aam
cld
adc
repnz
jp
and
pop
pushf
adc
fcomps
addl
lcall
mov
shl
adc
or
adc
pop
add
add
lea
cmp
popf
sbb
sbb
mov
test
lods
ljmp
decl
das
xorl
adc
ss
pop
cmp
mov
push
scas
cli
lret
mov
lock
sub
bound
inc
nop
jecxz
mov
sarl
pop
js
dec
or
or
jl
clc
clc
in
jecxz
sub
pop
lret
js
mov
je
mov
pop
or
xchg
mov
mov
fisttpll
dec
stos
mov
into
fistpll
fnsave
push
or
mov
out
imull
repz
inc
mov
and
test
inc
jo
inc
sbb
mov
arpl
jno
ficompl
rclb
cwtl
mov
mov
mov
mov
js
and
pushf
cmpsb
and
fdivl
inc
insl
cwtl
sarb
fsubrl
cmp
outsl
or
iret
sarb
add
mov
lods
jo
out
or
add
cld
sbb
mov
dec
mov
icebp
mov
ret
pushl
jl
jge
jg
xchg
sbb
mov
pop
mov
lods
add
stos
stos
bound
in
js
lods
inc
xor
inc
cltd
mov
jno
enter
fdivl
clc
pop
andb
sub
adc
loop
sub
inc
pop
insb
mov
and
mov
and
fidivrl
fdivs
rcrb
mov
test
hlt
mov
scas
mov
dec
cmp
add
stos
and
ja
fmulp
xlat
fisttps
or
subb
sbb
addb
stos
add
and
add
jae
push
faddl
push
mov
or
sub
popl
xchg
mov
rcrb
enter
pop
pusha
adc
mov
out
movsl
scas
paddsw
push
lret
rolb
mov
push
sbb
aas
mov
les
xor
mov
loop
mov
mov
add
mov
jnp
mov
test
mov
dec
out
mov
jbe
xchg
pop
clc
or
sub
mov
fwait
mov
mov
lret
xchg
in
mov
stos
jp
jbe
push
bound
push
xor
enter
push
dec
loope
arpl
and
loopne
xor
test
call
mov
jp
add
jo
and
xchg
shlb
ffree
xor
mov
loop
lea
jne
add
ret
movsl
or
pushf
inc
bound
and
push
xchg
jbe
push
push
adcb
adc
lea
xorb
rcrb
sbb
mov
and
mov
stos
or
imul
pop
pop
fwait
rcrb
cmp
and
pusha
out
inc
lds
mov
pop
sub
addr16
outsb
pushf
or
add
addb
jecxz
loopne
imul
movsb
pop
inc
jp
ljmp
popa
test
sub
xor
nop
fwait
cmpsl
or
ljmp
add
dec
add
aam
enter
loope
imul
fucomip
jle
mov
push
xor
push
div
dec
inc
add
sub
add
dec
sbbl
scas
test
adc
sub
cmp
push
aad
negl
and
cmpsb
pop
add
and
dec
push
arpl
add
aam
negl
xchg
pop
outsb
shll
mov
cwtl
mov
xor
rolb
push
iret
ljmp
lahf
adc
cs
shlb
pop
add
loopne
movsb
push
call
jg
jg
fiadds
in
in
mov
outsl
mov
push
addr16
insb
push
dec
inc
jbe
fstpt
jecxz
bnd
xchg
insb
mov
fsub
movsl
fistpl
bsf
pop
sbb
mov
xor
mov
ror
data16
insl
cld
xchg
sbb
movsb
lret
sbb
jle
in
xchg
add
out
je
stos
loope
outsb
inc
jg
inc
jns
or
repz
shl
jno
arpl
xchg
fsts
pop
and
cmpsb
popa
mov
jns
or
fisubs
out
jmp
shrb
and
xchg
xor
sub
and
cmp
sbb
sub
cmp
mov
fcompl
inc
repnz
dec
push
sbb
roll
jbe
push
jl
cld
push
sbb
call
inc
inc
ret
mov
test
or
stos
fwait
ss
movsl
mov
arpl
jp
pusha
xor
lcall
decl
push
mov
jle
out
mov
xor
mov
incl
push
das
inc
stos
clc
in
in
mov
cmp
or
in
xchg
lods
es
sub
and
outsl
into
mov
push
ret
mov
rorl
or
pop
ss
inc
fidivrs
add
jge
jecxz
mov
mov
movsb
icebp
push
mov
mov
mov
outsl
cwtl
notb
pushf
imul
test
imul
or
inc
loope
scas
adc
pop
cwtl
lods
pop
inc
shll
lahf
push
aam
fwait
sarb
add
xor
aam
inc
lahf
iret
les
js
cmp
movsb
push
in
stos
pop
outsl
inc
jmp
enter
mov
ret
unpcklps
into
dec
jg
adc
ja
sahf
jno
and
xchg
hlt
mov
nop
sahf
fs
cmp
jmp
shll
xor
push
mov
hlt
loop
sub
dec
fidivrs
pop
push
xlat
lock
xor
mov
add
sub
sarl
popa
ret
push
jl
sti
addb
xchg
add
mov
inc
jl
adc
mov
pop
sarl
insl
add
ds
push
pop
add
pop
mov
lock
data16
outsb
cmpsb
cmp
xor
test
sub
and
xchg
sarb
jae
cmpsb
dec
mov
test
inc
mov
push
fcomip
push
cld
dec
loop
mov
scas
ficompl
pop
mov
aas
fwait
shlb
out
lods
repz
cmp
ret
sarb
fcmovne
fisttpl
jne
inc
cmpl
leave
adc
lret
clc
cld
cmp
push
adc
leave
push
dec
je
das
addr16
push
add
or
inc
mov
cmp
jo
call
sbb
int3
push
xor
ss
jo
repz
push
mov
sti
add
xorl
pop
mov
sub
mov
inc
add
inc
sub
lock
and
repz
and
shrb
enter
sbb
mov
cwtl
adc
mov
or
iret
test
push
push
or
mov
das
nop
xor
in
in
mov
hlt
fdivs
xchg
fcoml
inc
cmpb
ljmp
xor
out
fistpl
jle
cmp
jmp
cmpl
icebp
out
fs
ss
pop
ficompl
sbb
xchg
fs
xlat
pusha
or
sub
push
jns
and
adc
outsb
push
sarb
add
adc
fistpl
lock
jle
and
xor
fwait
or
mov
and
cmc
fdivrl
aas
test
xor
push
fmuls
cmp
push
cmp
pavgb
or
fndisi(8087
pop
fs
mov
movl
jmp
push
push
adc
addb
adc
push
call
mov
ds
dec
inc
add
cmp
inc
imul
test
dec
sti
mov
sub
repnz
xor
pusha
xchg
adc
scas
cmp
cmpsb
scas
jae
and
or
xchg
inc
jo
ja
xchg
mov
in
ljmp
idivl
in
mov
roll
lret
push
popa
adc
icebp
xchg
fnstcw
in
int3
push
loopne
lods
push
sbbb
dec
movsb
pop
add
push
popa
ficoml
mov
sbb
push
mov
daa
add
fnstsw
ret
jl
cmc
shl
push
jae
ja
pop
fisttps
adc
clc
flds
or
ljmp
ja
push
stos
jbe
pop
addr16
sbb
cwtl
pop
int
dec
daa
push
loop
dec
push
fst
dec
cmp
cmp
notl
aas
into
mov
pop
loop
sub
mov
stos
hlt
cli
lret
shll
nop
loopne
push
cmp
hlt
movl
mov
add
push
cmpb
mov
sbb
icebp
lahf
movsl
arpl
sub
add
inc
hlt
adc
int3
int3
loopne
mov
add
notb
mov
adc
dec
popa
out
and
xchg
movsl
mov
mov
dec
sub
cmp
xchg
test
popa
inc
out
jl
jo
push
imul
shlb
jo
adc
testl
mov
push
mov
in
mov
or
ja
dec
adc
jno
push
fisubrl
pop
cmovo
jecxz
outsb
aam
das
xor
mov
mov
inc
jle
fstl
sub
dec
adc
sub
xor
adc
ret
dec
and
lcall
fwait
icebp
cltd
push
add
mov
fists
pop
shrl
mov
sysret
add
push
sbb
mov
mov
nop
loopne
adc
sbb
mov
inc
or
mov
in
jle
rclb
aas
movsb
aad
adc
sub
das
sbb
inc
cmp
pop
mulb
aas
cmp
mov
outsl
adc
out
xchg
rclb
inc
notl
movl
xor
inc
cmp
pop
aam
inc
pop
mov
push
add
popa
ret
mov
rolb
jecxz
and
and
out
fsubl
xchg
sub
cmpsb
cmp
leave
sbb
pop
push
inc
xchg
xor
jno
js
lock
pop
pop
test
mov
jo
out
lcall
inc
popa
mov
pop
xchg
sbb
stc
in
mov
or
pop
and
fxtract
mov
mov
cmp
mov
jg
xchg
ja
inc
loope
inc
iret
and
loope
inc
mov
or
pop
imul
push
push
int
int3
or
push
gs
adc
xchg
scas
andb
mov
int
sub
cmp
fdivl
sbb
insb
or
xchg
xchg
pushf
inc
mov
js
dec
mov
lock
out
or
sahf
or
cmp
mul
out
pop
mov
je
lea
dec
test
jge
mov
lock
inc
inc
and
inc
xorb
pop
sbb
push
test
jle
sarl
cli
sub
into
mov
xor
push
dec
and
mov
int
rorb
xchg
loop
sbb
cmp
rcl
pop
in
test
jnp
divl
jo
ret
sub
push
scas
lods
orl
sub
mov
or
jmp
jl
lock
jae
add
and
pop
lcall
mov
pop
out
pop
ret
std
ror
inc
sub
mov
jg
stos
cltd
sbb
loopne
lods
xchg
loope
xchg
jns
hlt
test
dec
pop
xchg
out
sub
xchg
or
xchg
adc
test
test
je
push
cmp
dec
jecxz
lods
xchg
mov
mov
into
cmpsb
fisttps
push
push
into
mov
xor
movb
je
sbb
aam
mov
movsb
xchg
push
mov
mov
loopne
ja
jo
pop
aam
cmp
mov
ret
sub
pop
int3
mov
xchg
clc
stos
or
loop
int3
push
mov
mov
inc
or
xor
adcl
cli
movsb
dec
rol
xor
push
sarb
push
popa
popf
mov
in
xchg
adc
or
iret
inc
js
or
sbb
jmp
enter
frndint
jge
xor
pop
loope
int
stos
iret
and
and
sbb
push
mov
adc
fnop
jecxz
aad
daa
dec
lods
out
test
scas
dec
jne
hlt
jp
or
ljmp
lret
xor
cmp
js
std
orl
dec
mov
mov
dec
xchg
and
sub
cmp
xor
mov
push
imul
xor
jno
pop
and
adc
loopne
sub
or
xor
aas
rclb
dec
sbbb
insl
sub
push
out
stos
sbb
cmp
push
and
cli
push
jb
cli
pusha
movsb
sub
push
lods
cmpsb
pop
cmpsb
and
ds
out
mov
mov
push
cmp
gs
std
lods
js
sahf
lahf
ja
aaa
lds
dec
xor
jp
shrl
xchg
sbb
call
cmp
add
movsb
add
inc
mov
xchg
xchg
cmpsb
std
mov
enter
dec
icebp
mov
xchg
or
mov
sbb
adc
or
mov
adc
add
jg
jne
xchg
int3
add
outsl
or
fistpl
jl
xchg
adc
add
das
bound
dec
outsl
sub
pusha
sub
dec
lods
rcrb
mov
adc
sbb
dec
cmp
cli
push
xor
in
and
andb
imul
mov
inc
fwait
movsl
imul
push
cli
pop
lods
inc
sub
jnp
cwtl
cmovl
mov
lret
mov
mov
ret
xor
xchg
int
cmc
jnp
inc
lret
scas
pop
rcrb
hlt
outsb
rcrl
sbb
cmp
imul
cmp
ret
sbb
lret
icebp
pop
cli
popa
shl
xchg
xchg
in
popf
mov
rcll
add
push
or
hlt
sub
mov
cld
insl
mov
into
rcll
xor
ret
adc
mov
mov
shlb
push
sub
fwait
mov
movsb
jb
add
sub
mov
jecxz
inc
movsb
fyl2x
mov
in
loop
push
mov
test
xor
cmp
pop
mov
in
insb
mov
adc
fadd
mov
and
cwtl
jmp
add
cwtl
inc
pusha
mov
push
jns
cmp
mov
jl
and
movsb
loopne
or
add
mov
pop
es
dec
test
pop
mov
pop
add
pop
popa
ljmp
in
jp
loopne
ljmp
xor
mov
or
push
cmp
inc
cmp
mov
push
mov
push
das
xchg
lock
rcrl
sarb
xchg
and
sbb
xchg
inc
push
mov
xor
ror
dec
pushl
mov
pushf
jecxz
cmp
push
cwtl
out
leave
or
xor
in
js
pushf
loop
sub
mov
xchg
gs
mov
mov
jmp
xchg
rcrb
maskmovq
push
push
mov
in
loopne
adc
sbbl
ret
mov
fdivs
dec
iret
inc
mov
add
cmp
xor
ret
sub
mov
mov
pop
add
xchg
data16
push
push
pop
clc
xorb
rorl
sarl
add
ficoms
aad
mov
push
and
push
inc
add
or
test
cmp
sub
adc
sub
imul
mov
jmp
sub
shll
pop
lahf
subl
sahf
mov
lea
jno
pop
inc
add
out
xchg
mov
ficomps
dec
aad
sub
shl
nop
or
adc
adc
cmp
xor
lock
pop
aad
lahf
lea
addl
adc
push
rcrl
ficoml
xchg
mov
das
mov
and
push
fsub
cltd
or
mov
add
sub
inc
xchg
fdivrl
sub
jg
jno
aad
outsb
mov
and
ret
arpl
iret
or
push
ret
bswap
sbb
pop
xchg
add
lods
add
cld
adc
imul
xchg
in
in
add
add
sub
inc
fcom
xchg
iret
ret
stos
sub
fsave
pop
and
pop
pop
pop
cmp
shl
push
adc
test
pop
data16
jecxz
orl
subb
sub
icebp
sbb
push
cmp
test
shll
pop
or
xor
gs
popf
sbbb
stos
sub
sahf
call
test
xchg
mov
imul
jb
pushl
dec
negl
adc
ret
and
sahf
stc
mov
mov
insl
out
push
loopne
or
shl
xchg
test
fcoml
in
lock
lods
mov
jo
ds
ljmp
dec
mov
fwait
dec
loope
call
push
xchg
pop
icebp
mov
sub
sbb
ljmp
jae
addb
xor
ficomps
imul
sub
push
cmp
pop
ja
jns
aas
pop
lods
or
les
or
lock
hlt
sub
icebp
jle
clc
lea
bound
mov
pushf
and
mov
sub
mov
iret
pop
add
push
mov
fstp
enter
or
clc
add
mov
adc
xchg
adc
in
push
mov
daa
jl
inc
pop
push
dec
mov
lods
dec
call
pop
ficoml
mov
mov
pop
jmp
mov
sub
daa
fdivl
scas
out
xor
cs
jecxz
push
xchg
jne
add
inc
and
adc
push
lods
test
and
sub
inc
lret
mov
loop
scas
add
imul
xchg
std
aam
sbb
sbb
hlt
bound
call
push
psrad
jne
adc
push
sahf
add
pushf
jns
and
lret
xchg
push
out
orb
adc
sub
cld
jle
icebp
jno
sub
or
clc
mov
jecxz
dec
pop
pop
and
insb
mov
cmp
bound
pop
arpl
sub
into
fimuls
or
ret
inc
push
arpl
rol
pop
mov
lcall
dec
shl
sub
sbb
ret
cmpsl
dec
jnp
add
xchg
shrl
aas
xchg
lcall
cmp
popf
scas
dec
lock
mov
fcmovnb
rcl
mov
inc
int3
mov
pop
sbbl
pushl
inc
js
nop
lret
lret
stc
sub
jo
push
lock
insl
stos
call
xchg
jbe
push
xchg
lock
and
sahf
sbb
mov
orb
inc
sub
into
clc
rcr
fiaddl
xchg
jns
das
loopne
movsb
add
and
adc
sbb
jp
leave
movsl
aam
rolb
fcompl
not
es
pop
icebp
mov
push
mov
icebp
int3
jnp
pop
add
js
pushf
fstpl
fs
aad
sbb
mov
mov
cmp
fdiv
stos
inc
les
jnp
leave
rolb
imull
jle
gs
jb
lods
cli
sar
jge
ret
jne
into
lret
ss
adc
xchg
sarb
push
cmp
push
adc
and
loop
xor
pusha
xor
pusha
sbb
or
adc
sbb
jp
daa
je,pn
sub
hlt
xorb
sub
pop
push
xor
aas
pop
xor
cwtl
mov
sub
outsl
pop
pop
cmpl
mov
mov
xor
mov
sbb
jp
cmp
and
or
inc
pop
mov
lcall
test
lcall
mov
lcall
and
insl
cltd
add
divl
jmp
push
push
sbb
dec
shl
jl
mov
clc
dec
js
push
xchg
imul
js
sti
repz
clc
decl
rcrb
imul
xchg
stos
jns
leave
push
and
out
cmp
jo
pop
lods
loopne
cmp
rolb
cld
and
arpl
jne
jle
dec
pop
hlt
fstps
clc
les
mov
or
xchg
jne
mov
cmp
and
mov
test
lock
xchg
iret
jg
movsl
mov
add
dec
inc
and
fsubrl
inc
add
ret
fcoml
jge
push
lret
mov
xchg
rol
push
mov
xor
mov
mov
xchg
hlt
xor
fimuls
cmp
dec
lods
pusha
sahf
sbb
daa
push
pusha
imul
pop
cmc
and
add
adc
xchg
loopne
clc
shr
add
lock
fidivrl
aas
inc
add
rorb
fcomps
outsb
fcomp
mov
popa
scas
mov
xlat
pushf
mov
cs
imul
adc
ja
lea
into
shlb
mov
dec
inc
aaa
ds
mov
add
jne
mov
jb
adc
xor
jecxz
xchg
adc
ret
adc
mov
mov
or
shrb
in
jmp
mov
add
fwait
pop
sbb
adc
jbe
lock
mov
fmulp
aam
jo
test
loopne
outsb
cltd
nop
into
mov
mov
out
mov
jbe
ret
lea
xchg
push
xchg
dec
jge
pop
test
data16
sbb
mov
ljmp
faddl
sbb
push
push
inc
dec
fcoml
das
push
mov
test
add
jmp
push
sbbl
push
jo
jmp
fs
xchg
sub
jno
adc
cmp
dec
test
loop
jg
pop
jne
mov
sub
stos
cld
fwait
adc
push
xlat
pop
pop
mov
pop
jnp
cmp
addr16
sub
fbstp
loop
enter
test
outsb
mov
jle
imul
addb
fcomp
mov
rorb
sbb
fsts
insb
and
dec
clc
enter
insb
cmpsl
push
in
cld
jo
inc
enter
mov
js
jmp
or
ja
lret
jno
jmp
loop
or
sub
pop
aas
out
push
fcomps
sub
hlt
inc
insb
sbb
test
inc
or
jno
jge
push
dec
stos
cmp
inc
add
mov
rclb
jle
pop
adc
out
and
sub
fucomip
ja
mov
clc
xchg
call
push
mov
ret
sti
aam
mov
mov
les
rclb
add
or
aaa
cld
or
sbb
push
xchg
out
mov
test
xor
xchg
test
sti
sub
pop
fmul
cmp
int3
pop
mov
loop
lock
xchg
test
xor
jne
push
add
pop
je
adc
sbb
add
in
test
inc
outsl
call
movsb
xor
add
aam
push
or
cmp
pop
sub
incb
mov
mov
mov
cltd
or
lock
insb
stos
les
lods
add
push
pop
iret
sub
dec
add
push
mov
cmp
mov
push
pop
push
inc
or
rcrb
pusha
xlat
sbb
pop
dec
in
stc
cmp
rorl
dec
movsb
dec
mov
sbb
cmp
ret
pop
in
push
pop
pop
lock
sbb
or
lret
arpl
pusha
fcoml
scas
fs
or
inc
ret
ljmp
in
add
jge
movsb
jecxz
mov
pop
fildll
cmpsb
pop
cmpsl
nop
aaa
lock
xchg
js
les
push
pop
in
jl
aam
mov
push
cltd
pop
jmp
adc
push
iret
push
mov
ss
pop
and
test
scas
jo
xorb
test
or
push
jp
les
repnz
push
mov
sbb
arpl
sbb
clc
sub
mov
mov
and
iret
lea
xchg
cltd
movsl
sub
rcrb
push
pushl
loop
aad
lds
push
inc
xchg
fldenv
add
adc
movsb
nop
pop
jg
jg
out
mov
dec
aaa
fmul
xorb
push
mov
jmp
icebp
push
mov
mov
xchg
xor
js
sub
sub
and
push
add
jnp
out
or
sbb
push
or
dec
xchg
mov
fiaddl
hlt
cmpsl
push
push
dec
je
iret
fistps
lods
inc
out
jle
in
mov
mov
call
out
pusha
pop
pop
in
push
cmpsl
xchg
cmpsb
rcrb
je
push
cmpsl
mov
inc
out
cld
fists
push
and
sbb
add
inc
roll
jbe
and
enter
sbb
pop
jmp
inc
add
ret
dec
outsl
cmp
add
aas
hlt
add
call
fnstsw
add
daa
push
or
dec
js
out
jae
sbb
mov
adcl
xchg
mov
jbe
mov
repnz
xchg
mov
arpl
fwait
push
dec
add
ss
jl
push
sbb
jp
push
fdiv
aaa
cmpsb
cmpsl
xor
ja
orl
rcl
dec
repnz
mov
lcall
mov
shll
ret
clc
out
dec
jmp
pop
jmp
or
into
pop
or
fsubp
sub
cmp
xchg
imul
sarb
mov
pop
xchg
mov
int
clc
xchg
add
sub
popw
out
and
loope
add
add
and
outsb
cwtl
xor
aaa
nop
lods
incl
aaa
xor
movsl
aam
mov
push
clc
xchg
es
jp
into
push
lea
mov
es
les
test
in
data16
mov
and
fdivr
insb
sub
mov
cmpsb
inc
pusha
movsb
jb
loopne
lock
imul
js
push
jb
add
add
pusha
adc
aad
inc
jl
push
cmp
icebp
hlt
stc
hlt
mov
in
push
adc
jnp
repnz
mov
pop
or
or
insb
inc
jl
mov
sbb
adc
ja
xchg
mov
mov
jno
stos
sbb
jo
mov
daa
loopne
stos
mov
adc
insb
dec
insb
cld
cmp
stos
cli
mov
icebp
mov
popa
ret
bound
outsl
aad
jmp
rorb
ljmp
push
aam
fildll
mov
xlat
enter
cmp
in
mov
les
pop
out
ja
cwtl
dec
pop
hlt
sub
scas
test
inc
pusha
dec
jge
xchg
or
sbb
pop
push
adc
mov
iret
mov
fdivp
jb
xor
movsl
push
inc
sbb
lret
xor
jne
xor
push
push
push
and
add
shl
jne
xchg
popa
jbe
xchg
mov
jg
xchg
addb
or
pushl
inc
sub
pop
ds
imul
inc
xchg
adc
xorb
movsb
cmpsb
push
xchg
xchg
jbe
dec
loopne
cld
push
jno
loope
data16
push
lcall
inc
pop
dec
sbb
cmp
add
xchg
cmc
mov
mov
fidivrl
and
ljmp
xchg
into
leave
jb
cmpsl
sub
adc
inc
inc
adc
sub
ficoms
sub
xchg
jp
ja
cli
mov
mov
xchg
hlt
nop
mov
cli
pop
push
stos
mov
rclb
sbb
out
mov
hlt
outsl
hlt
fiaddl
mov
xor
cwtl
mov
or
and
inc
pop
aad
aaa
std
add
adc
add
ja
push
inc
cltd
xchg
lcall
or
jp
push
fcompl
lods
std
xlat
call
mov
inc
jb
test
pop
rorb
mov
hlt
sub
insl
push
fwait
in
sub
mov
mov
aaa
into
jecxz
push
sub
push
je
sahf
cli
xorl
ds
and
lret
neg
push
dec
dec
rorl
addr16
cmp
mov
mov
pop
push
loopne
fmulp
mov
movsl
add
cmp
stos
scas
mov
dec
push
enter
rorb
ja
fnsave
pop
mov
pop
add
mov
ret
dec
adc
out
sub
jecxz
fiadds
sub
adc
adc
je
xchg
jbe
stos
js
aaa
rclb
sahf
mov
push
cli
jbe
fwait
cmp
inc
or
sub
js
pop
or
xorl
ljmp
adc
cwtl
fisubl
ss
leave
stos
clc
push
loopne
mov
cltd
sbb
aad
decl
mov
test
js
jne
add
nop
out
or
adc
jne
add
cwtl
jle
lahf
subb
jno
mov
inc
fsubrs
or
pop
ljmp
jae
add
out
les
shlb
cmp
int3
cmp
fiaddl
shrl
repnz
fcmovu
cmpps
adc
mov
xchg
mov
mulb
inc
inc
std
mov
ret
nop
pop
cmp
xor
hlt
fiaddl
xlat
test
sub
movsb
mov
xor
out
sti
in
pop
add
and
ja
movsb
or
or
loop
pop
dec
cltd
push
das
and
jl
pop
push
pop
jle
loope
push
pop
lods
add
jb
mov
loope
add
jae
sbb
or
rorb
push
rolb
jge
punpckldq
stos
jae
fwait
lock
add
popa
mov
jle
and
out
mov
or
roll
cmpsb
aas
xor
in
sbb
pop
test
dec
out
icebp
std
mov
cmc
push
and
mov
jecxz
gs
mov
adc
or
cmpsl
adc
stc
push
clc
inc
jl
dec
loope
or
inc
jl
jnp
jnp
add
jg
push
inc
pinsrw
fwait
into
dec
push
xchg
cmp
cs
mov
xchg
dec
sub
icebp
lret
dec
addr16
aaa
mov
push
lar
push
jp
cmpb
pop
rclb
pusha
gs
bound
out
mov
out
shr
ja
stc
jg
push
xchg
in
rcrb
fwait
outsb
inc
aas
dec
imul
inc
aad
out
push
fwait
in
jecxz
jle
insl
out
in
outsl
std
shll
and
sub
cmp
mov
push
loope
jnp
loopne
sub
add
lret
cmp
daa
push
pop
bound
mov
or
sahf
popf
popa
and
dec
push
lcall
mov
rep
out
ljmp
pop
cld
adc
stos
std
or
decl
adc
xor
or
adc
xchg
xor
das
popa
adc
push
sarl
inc
loopne
adc
into
pop
xorl
scas
lcall
flds
daa
call
popl
xchg
and
in
mov
icebp
fwait
scas
mov
fwait
das
ds
jbe
dec
test
clc
pushf
ss
jne
xchg
jns
push
inc
mov
jp
dec
andb
call
addb
arpl
ret
mov
xchg
sbb
pop
xor
or
out
cmpsl
lcall
roll
inc
lcall
and
xor
push
fs
out
lahf
out
dec
fistl
arpl
adc
pop
test
das
sub
imul
aam
and
incb
ret
push
pushf
bound
test
push
push
push
incl
rclb
xor
scas
es
pop
cmp
and
mov
mov
cmp
xor
sub
loopne
addl
enter
cmpsb
js
pop
lds
lcall
mov
insb
leave
dec
dec
xor
leave
js
jo
fnstsw
aas
adc
dec
hlt
or
dec
inc
nopl
mov
cld
xchg
xlat
adc
ja
dec
lock
inc
test
sbb
data16
punpcklbw
repz
in
mov
xor
pop
jl
out
sub
movsl
inc
andb
xor
mov
xor
aam
push
add
mov
nop
addl
cltd
cmp
lret
sbb
push
sbb
lcall
in
add
lret
mov
leave
into
sahf
or
adc
loope
xchg
in
cmp
test
call
fwait
addl
cmp
pop
sbb
cmpsb
or
test
xchg
sbb
xchg
xchg
push
lds
lea
push
out
loopne
lds
xor
not
inc
mov
adc
inc
cmp
fldt
add
add
or
fiadds
pushf
aam
outsl
push
inc
cmp
inc
mov
adc
jge
dec
insb
imul
sti
hlt
xchg
mov
call
jne
out
fdivl
mov
cmp
lods
imul
mov
icebp
sti
xor
inc
or
push
push
pop
js
mov
mov
mov
es
cs
aad
aaa
mov
mov
add
aas
andb
std
cwtl
xor
pushf
jo
push
testl
mov
adc
mov
shrl
dec
mov
mov
scas
das
pop
xchg
pop
nop
mov
sub
pop
mov
test
mov
rcll
imul
jle
call
and
or
add
push
xor
add
push
pop
add
loop
addr16
cmp
push
and
inc
stos
push
cmpsb
jnp
jno
inc
add
xchg
push
aas
stc
div
pop
add
movsl
aam
add
mov
bound
dec
ret
in
or
out
arpl
cmp
js
mov
or
outsb
fbstp
incb
sbb
jecxz
loopne
pop
push
push
pop
inc
jle
add
repnz
xchg
or
or
dec
lahf
daa
mov
in
bound
mov
mov
adc
jns
inc
bound
jns
psubusb
jae
sti
sbb
ja
ret
xor
and
dec
or
add
insb
cmc
clc
aad
add
stos
loope
xor
adc
pop
add
mov
rolb
scas
and
pop
pop
nop
data16
repnz
and
adc
bound
cmp
or
mov
rolb
imul
ljmp
inc
scas
mov
or
mov
inc
mov
dec
inc
js
adc
test
and
shll
rclb
push
sub
push
push
add
xchg
bound
sbb
xor
xchg
pop
and
adc
js
jg
or
push
loopne
inc
int
cltd
push
scas
cmpsl
hlt
cld
add
clc
hlt
dec
xor
mov
jo
lds
lahf
jns
scas
add
sub
jbe
or
dec
sbb
add
push
jp
mov
xor
repnz
imul
insb
dec
lock
cmp
faddl
push
imul
sub
push
addl
aaa
testl
jp
loopne
cmp
test
je
adc
nop
pop
push
rorl
mov
jp
addr16
jmp
push
jne
outsl
stos
test
inc
outsb
mov
xchg
testl
sbb
mov
sbb
mov
push
cmp
cli
loope
nop
in
sbb
adcb
sar
jmp
test
lock
jmp
mov
lret
stos
inc
adc
iret
ret
pop
push
or
popf
pop
mov
mov
out
cs
rcrl
inc
sahf
jmp
daa
xor
or
js
arpl
ficoml
aas
fldcw
popa
ja
push
aam
adc
add
sbb
cmp
test
dec
jo
clc
inc
daa
xorb
fistps
les
adc
pop
ret
or
push
faddp
movsl
lock
ss
mov
andl
xorl
sub
outsb
push
xchg
mov
insb
sbb
pusha
insl
add
push
add
jle
in
imul
dec
xor
xchg
mov
inc
pop
mov
push
call
dec
adc
mov
outsb
xor
sub
xorl
mov
scas
test
and
mov
jb
push
subl
xor
lods
inc
inc
addr16
insl
mov
mull
cmp
add
sub
outsb
mov
in
add
cwtl
push
cwtl
divb
or
lods
rclb
stos
mov
sub
pop
adc
lods
mov
inc
inc
sbb
pop
inc
sub
sub
movsl
adc
mov
lods
fiaddl
adcb
and
sbb
jle
shr
xlat
inc
js
mov
cltd
push
cmp
stos
xchg
sub
cwtl
pop
sbb
call
pushf
push
inc
js
add
xchg
fwait
cmp
xchg
fwait
movsb
xchg
shlb
dec
loop
push
das
imul
xchg
rcll
leave
xor
test
mov
inc
add
add
aas
sbb
dec
pop
pxor
or
addb
mov
scas
into
pop
mov
lock
or
jo
outsl
xor
icebp
mov
shll
or
rcll
push
push
cltd
push
jmp
cmc
pop
lcall
sub
inc
data16
lahf
mov
cmp
push
lods
repnz
loopne
daa
je
mov
inc
lret
rcll
pop
cmp
adc
xorl
sbb
out
out
jo
xor
mov
daa
or
or
ja
mov
outsb
xchg
jecxz
add
or
hlt
push
or
out
add
lods
sbb
js
adc
lock
mov
mov
sbb
ret
adc
fisubs
ds
xor
inc
inc
cmc
push
mov
xchg
mov
xor
pop
sub
and
adc
mov
cmp
sbb
notb
cltd
in
stos
pop
mov
jnp
or
sbb
mov
outsl
sub
adc
adc
lahf
mov
pop
out
cmp
popa
or
lret
xchg
scas
xchg
and
fsubr
repnz
cli
mov
mov
lcall
shrb
mov
inc
push
int3
in
jecxz
lods
jnp
nop
push
movsb
and
dec
in
pop
sbbl
xchg
xor
dec
push
shrl
pop
fmuls
pop
dec
test
mov
push
orb
cld
mov
arpl
imul
mov
scas
xchg
xlat
lahf
xchg
les
lret
mov
xor
notl
ljmp
push
loopne
push
adc
sbb
insb
lret
add
xor
ret
push
jge
xchg
outsl
jle
mov
add
sbb
insb
decb
sbb
scas
dec
add
push
push
cmp
clc
faddl
jle
test
ss
jl
ljmp
lahf
mov
cld
int3
add
cwtl
mov
xchg
add
call
mov
inc
test
cmpl
inc
adc
push
std
lds
daa
inc
outsb
mov
mov
cwtl
fcoms
cli
orb
mov
jecxz
inc
adc
into
cmc
pop
jno
stc
lcall
mov
ljmp
adc
cli
sahf
add
std
or
xchg
add
inc
and
rorl
mov
and
cmc
stos
xlat
jp
outsb
ljmp
test
rcl
push
cltd
repnz
adc
xor
xor
lock
hlt
incl
xor
lds
inc
ljmp
loope
and
adc
mov
mov
add
sti
cmpb
push
or
out
xor
push
outsl
ljmp
and
add
jmp
inc
in
add
loop
jb
or
push
inc
push
fdiv
mov
pusha
adc
xchg
jns
add
sub
lahf
daa
jns
or
or
xor
stc
adc
push
or
rcll
arpl
pop
lcall
icebp
aaa
xor
xor
push
pop
xorb
mov
sub
jbe
inc
push
andb
inc
xor
loope
add
mov
scas
add
sbb
into
xor
mov
mov
mov
or
xchg
push
dec
leave
mov
or
js
sbb
xchg
push
ja
push
out
add
roll
or
fxch
scas
cli
aad
and
sbbb
sbb
lock
pop
sub
insb
push
jbe
or
int
roll
add
push
mov
inc
jmp
shl
pushf
mov
in
and
inc
jmp
and
mov
mov
scas
jmp
lcall
test
nop
pop
lret
inc
and
mov
insb
out
sarb
dec
mov
xor
mov
jns
lods
loopne
mov
push
loopne
xor
mov
pop
outsl
cld
sub
test
add
mov
cld
and
jnp
mov
pushf
popf
pop
adc
mov
or
lcall
clc
jg
cmp
push
xchg
fstl
add
pop
fistpl
cmc
test
pusha
test
insb
mov
pop
icebp
cmp
loop
xchg
inc
sub
xor
decl
jl
or
add
or
les
cs
js
push
cmp
jp
sarb
lock
test
out
inc
cmp
cmp
aaa
sbbb
adc
ja
and
ret
ret
cs
lret
jns
xor
jb
adc
push
out
push
aad
pushf
dec
mov
xchg
and
shl
push
clc
cld
cwtl
dec
and
push
lds
dec
jmp
add
mov
into
shll
pop
add
sbb
cmpsb
sub
pop
mov
pusha
aas
insl
sub
cmpsb
dec
mov
mov
lahf
clc
mov
fisubrl
adc
or
mov
stos
sub
push
lods
dec
cld
stos
or
jo
fs
arpl
lds
mov
daa
pop
xchg
add
es
push
sarb
inc
loop
lcall
ficomps
sbb
aad
stos
dec
or
add
cmp
fldt
scas
ret
or
xorl
mov
lahf
cmp
loope
push
aas
and
les
clc
sbb
sahf
ja
xchg
or
xchg
mov
jae
push
or
fwait
xor
add
push
push
hlt
out
xchg
lods
ja
nop
xor
inc
shll
lcall
push
rorb
pop
shll
jecxz
or
mov
jg
imul
lods
lcall
mov
adc
sbbb
ret
insl
movsb
cli
inc
pop
movsl
xor
cmpsb
or
pop
test
inc
mov
pop
or
int
mov
test
xchg
xor
sarb
inc
mov
pusha
movb
push
cld
pusha
xchg
es
cmp
ret
mov
adc
push
dec
iret
aas
mov
out
mov
or
cmpsl
stc
mov
loop
mov
insb
cmpsl
add
push
fsubrs
or
inc
or
xchg
push
jp
mov
and
push
nop
test
push
mov
mov
mov
ds
pop
popf
mov
sbb
jne
add
jnp
or
ljmp
adc
adc
dec
add
sbb
sub
cli
loop
into
lcall
ret
popf
clc
jg
bound
loopne
xlat
mov
in
cli
or
lods
les
js
mov
and
scas
mov
add
pop
test
sub
sbb
call
inc
dec
rolb
or
pop
mov
sahf
roll
lods
inc
cmpsb
scas
adc
lock
mov
xchg
popa
inc
pop
subl
sub
pop
arpl
ja
add
data16
xchg
jge
cmp
jge
data16
scas
xorl
xchg
fistpl
mov
cmp
mov
pop
mov
or
sbb
push
andb
dec
in
lock
jmp
adc
jno
scas
xchg
mov
loope
add
adc
rcrb
xchg
mov
and
or
or
or
test
xchg
aas
cmp
mov
sub
mov
orb
movsb
stos
lds
ss
insb
adc
mov
jecxz
sub
call
loopne
scas
add
push
inc
clc
mov
xchg
add
test
jnp
cmp
adc
jle
lods
add
idivb
lock
cmc
jg
cmp
xchg
inc
mov
adc
sbb
loope
ss
fmuls
and
or
cmp
into
mov
data16
add
es
sbb
std
dec
jo
leave
ja
lods
rcr
lock
mov
je
mov
loopne
pop
rorl
decl
xchg
out
xorl
pop
push
aaa
push
test
jl
divb
jne
cld
cli
mov
xor
xor
shrb
mov
or
xor
sbb
icebp
cs
xchg
dec
pop
pop
popa
adc
jl
aaa
sbb
lods
es
xlat
enter
or
pusha
cs
push
pop
add
sub
and
hlt
hlt
pavgb
mov
fs
jmp
or
into
daa
sahf
dec
cli
cld
fldcw
jecxz
outsl
xchg
mov
addb
shlb
ss
adc
decb
data16
mov
popa
nop
mov
rorl
add
jno
loop
std
jb
push
or
xchg
je
pop
jmp
pusha
lock
mov
daa
sbb
mov
hlt
sub
sub
cmpb
out
ret
mov
cmp
or
jge
or
mov
jmp
mov
pop
jno
stos
sbb
lds
ljmp
jns
inc
lods
xor
add
push
sbb
push
sbb
lcall
iret
cmp
adc
or
sbb
mov
pop
push
das
push
addr16
inc
incl
and
sub
mov
incb
sub
cmp
roll
movb
loopne
xchg
push
push
in
mov
das
push
add
sbb
xchg
mov
mov
xchg
jo
int
or
ljmp
icebp
lret
into
data16
mov
push
les
jp
pushl
lcall
loopne
ror
cs
jns
lcall
pop
je
icebp
jae
push
stos
push
sbb
push
add
and
adc
mov
test
cltd
mov
pop
add
inc
add
inc
push
imul
aas
rcll
fnsave
int3
sub
add
xlat
incb
hlt
mov
dec
sbb
leave
inc
pop
adc
xor
mov
movsl
pop
sahf
jge
mov
push
and
mov
lcall
fists
dec
lock
mov
subb
push
dec
aas
aam
shll
xchg
add
sar
les
xchg
inc
lods
data16
inc
hlt
adc
js
mov
js
test
pop
push
in
jl
sbb
sbb
mov
mov
mov
cmp
jecxz
xor
js
jp
cmpb
xchg
fstl
sbb
repnz
jmp
pop
push
iret
add
es
lods
jns
sbb
cltd
and
mov
mov
leave
mov
sub
int
insb
stos
adc
push
lret
dec
filds
jbe
popf
popf
les
fisubs
xchg
popa
fadd
mov
inc
sub
add
lods
aad
imul
inc
fidivrs
mov
dec
mov
pop
cmp
pop
xor
push
pop
les
or
pop
loope
and
cmp
inc
xchg
cmpsb
mov
pop
and
je
sub
mov
add
pop
sbb
fnstcw
mov
jno
mov
lds
dec
push
xor
push
inc
mov
pusha
sbb
mov
push
or
cmpsb
adc
dec
test
inc
mov
xchg
sub
or
sbb
xor
cld
xor
cmp
cmp
jecxz
add
fs
repnz
call
pop
cld
loope
bound
or
or
inc
push
iret
lds
sub
adc
incb
push
int
rcrb
mov
inc
or
push
or
icebp
das
aam
in
cmpsb
sbb
mov
jbe
std
mov
sub
dec
jo
cmp
fadds
shll
and
pusha
sbb
punpckhbw
fcmovne
dec
das
and
loopne
adc
sub
lock
daa
repnz
gs
mov
adcb
ret
or
mov
sub
sti
stos
les
mov
fdivrp
inc
int3
push
test
sahf
and
or
filds
test
mov
mov
es
clc
data16
insl
sbb
cwtl
test
push
inc
loop
xchg
xchg
std
dec
and
mov
push
xlat
cmpsb
movsb
jae
loopne
push
test
xor
push
pop
xchg
clc
push
inc
inc
jae
ja
push
add
cmpsb
lcall
and
adc
and
decb
pusha
or
fcomps
jg
mov
xor
test
or
insl
scas
mov
arpl
orb
pop
dec
ja
sbb
and
lret
loope
mov
mov
in
adc
inc
or
inc
movsb
add
sahf
or
les
add
push
js
adc
and
insl
lods
clc
add
outsb
dec
mov
pop
mov
add
fsubrl
add
movsb
add
push
add
fldcw
inc
sbb
sub
mov
adc
div
or
and
xchg
gs
sti
pop
jb
mov
ljmp
hlt
and
dec
xor
add
test
add
inc
arpl
ljmp
cwtl
xor
add
mov
ret
ds
fsubr
rcr
gs
cmpps
jns
mov
mov
mov
cmpsl
call
fcoms
push
add
xchg
mov
sbb
getsec
add
lcall
add
test
daa
lcall
dec
iret
cmp
inc
push
cld
imul
mov
or
dec
dec
lret
lahf
mov
rclb
fidivs
ret
xor
pusha
lret
aas
mov
fcos
sbb
or
icebp
mov
sbbb
inc
push
xor
mov
sbb
mov
add
or
addr16
push
dec
pop
out
or
subl
fmul
pop
push
mov
push
jb
mov
rorl
mov
or
into
jp
test
andl
mov
pop
push
or
stos
in
and
addb
scas
dec
aad
pop
out
add
outsb
mov
inc
jb
subl
ja
and
cltd
andl
clc
pusha
adc
pop
mov
add
add
jl
mov
nop
jb,pt
loope
js
mov
jne
movsb
push
cmc
inc
cmpb
cmp
aam
ljmp
fwait
xor
popf
adc
xchg
push
fsubs
ljmp
in
push
fidivl
pushf
mov
xchg
push
imul
or
mov
lret
jge
pop
add
dec
adc
push
pop
scas
inc
lods
fisubs
clc
ror
icebp
js
adc
fcoms
jnp
or
cmpsb
dec
fwait
int3
add
addl
cmp
mov
lea
icebp
decl
clc
inc
mov
fiaddl
rclb
fidivrl
lock
inc
push
mov
push
hlt
push
cli
stos
lahf
loop
iret
pop
fisttpll
mov
in
adc
or
addr16
sbb
fstpt
fldenv
fidivs
xchg
push
sbbb
xchg
cmpsb
pop
pop
sub
pusha
push
sbb
imul
cmp
xchg
lock
aam
mov
mov
int
pop
push
je
sbb
mov
out
imull
out
popa
xor
or
in
hlt
subb
xor
jo
push
movsb
mov
push
cmpsl
jb
outsb
ljmp
test
push
add
mov
sbb
js
lds
sbbb
jmp
lcall
cli
push
sbb
fisttps
xchg
sub
inc
je
push
push
sbb
sbb
add
fdivrs
mov
cld
shrd
xchg
jne
xor
or
rclb
mov
out
cmpsl
outsb
sahf
cmpb
lds
and
in
jo
fiadds
add
in
cmc
mov
movsb
inc
and
sub
push
std
rclb
xor
je
jmp
insl
xchg
cs
adc
sbb
pop
dec
addb
push
les
stos
cmp
sar
add
cmpsl
pop
mov
loop
sbb
pop
xchg
lret
loopne
in
pop
in
ljmp
add
popf
and
mull
les
xor
ret
xchg
xor
dec
je
push
jo
ficompl
ret
add
sahf
in
mov
add
pop
pusha
sub
pop
and
add
call
jp
and
or
adc
lret
and
outsl
mov
ficoml
mov
dec
fbld
push
test
sub
sub
mov
out
mov
repz
lock
or
push
icebp
stos
sub
jg
out
xchg
pushf
f2xm1
jne
clc
cmpsb
mov
and
mov
jmp
fldl
or
push
sub
int
add
inc
rolb
lods
pusha
ret
loop
inc
test
lcall
sar
pop
call
cwtl
ss
add
or
push
sbbb
pop
rcrb
in
push
retw
and
aad
jg
sbb
push
xlat
inc
mov
mov
and
jnp
mov
inc
sub
mov
mov
sti
lods
adc
adc
out
lock
mov
xor
lret
and
pop
lock
xchg
push
adc
push
xchg
pop
jb
sbb
pushf
jbe
rcll
loop
nop
push
clc
jg
hlt
arpl
push
push
arpl
roll
fs
popa
loop
js
cwtl
xor
mov
loopne
pop
or
mov
jbe
fidivrs
stos
arpl
or
aam
push
rcl
scas
clc
push
mov
in
cltd
mov
in
push
movl
mov
mov
pop
lock
je
and
les
jmp
lcall
int
dec
in
push
loopne
xchg
bound
add
cmp
cmp
sbb
imul
pop
pusha
sub
add
xor
aaa
push
ret
dec
inc
dec
xchg
dec
add
lock
xchg
cmp
shrb
popa
repz
and
test
mov
or
mov
ret
mov
mov
stos
hlt
repnz
add
in
or
test
mov
or
imul
sbb
repnz
jno
rcll
mov
shlb
fisttps
sbb
adc
jmp
pop
clc
addb
stc
mov
jp
inc
cld
mov
mov
rcrl
orb
jg
add
mov
sarb
cmp
add
imul
pop
fsubrs
cs
clc
push
xor
cltd
jp
and
cmpsb
cmp
adc
jge
mov
icebp
ret
mov
sti
sub
jns
imul
jne
adc
decl
out
lock
inc
xor
mov
cmp
pusha
ret
or
pushf
sub
test
or
mov
mov
push
xlat
add
imull
mov
sbb
aaa
inc
dec
fcoml
enter
inc
orb
aad
std
aas
jnp
xchg
enter
mov
push
and
xchg
leave
cld
or
int
jbe
ret
xchg
test
fcmovnu
shrb
call
and
testb
xor
ret
fistps
aas
and
push
ficoms
push
scas
or
ds
jl
push
mov
imul
in
popa
sbb
pop
dec
lcall
pusha
add
cmp
push
sub
sarb
inc
cld
dec
les
es
adcb
mov
adc
dec
push
test
push
das
roll
mov
aaa
dec
pop
pop
adc
lock
aam
f2xm1
mov
js
icebp
nop
mov
mov
push
mov
cmc
sub
adc
sub
xor
loopne
das
or
add
cmp
inc
test
fsubs
push
push
push
xorb
test
js
inc
jnp
adc
xchg
loopne
add
mov
jg
pminub
dec
jp
js
rorb
popa
lahf
cmp
aaa
lahf
mov
cmc
mov
and
mov
inc
push
aas
cmpsb
fcmovu
fiadds
les
inc
mov
xor
sbb
inc
xchg
clc
lds
jb
push
or
outsb
ret
jo
mov
dec
aam
push
jo
add
jg
hlt
aas
cmpb
mov
icebp
aad
les
ljmp
ds
in
andb
sbb
add
out
inc
movsb
jle
adc
fistps
pop
ds
add
add
mov
gs
mov
push
push
inc
lods
fs
ficompl
pop
movsl
int
jb
mov
or
xchg
cwtl
cmp
mov
adc
aam
hlt
mov
cmp
andb
pop
bnd
jmp
inc
fwait
cld
mov
aas
xor
sbb
xchg
test
fwait
rclb
mov
mov
stos
adc
rorb
imul
xchg
and
add
push
push
call
ret
in
clc
ss
cmp
daa
lds
loope
fcmove
lahf
or
jmp
adc
xchg
or
scas
sti
add
cwtl
ret
mov
fistps
mov
jge
add
xchg
sbb
je
push
js
jge
lcall
inc
add
insl
hlt
enter
test
xor
mov
inc
pop
loope
jne
sahf
xchg
andb
adc
subl
clc
jno
push
inc
lcall
cmp
rol
mulb
adc
mov
call
sub
fwait
pushf
mov
add
cmc
inc
out
cmp
out
popa
and
sti
lret
inc
pop
push
out
stos
aad
adc
loopne
int3
call
pusha
and
mov
inc
lahf
and
enter
lahf
inc
insb
xor
xor
or
incl
dec
ret
or
cmp
incl
imul
pop
add
cmp
movsl
lods
fadds
and
add
and
xchg
nop
push
pop
mov
push
addl
test
cld
jle
addr16
sub
cmp
lods
jp
pmaxub
cli
aad
xchg
out
je
cmp
hlt
out
push
dec
cld
pop
or
ss
mov
or
xchg
mov
int3
mov
or
adc
push
aad
mov
cmpsl
shrb
mov
scas
ret
jle
xor
mov
loop
ror
add
inc
loopne
shll
ret
mov
xor
divl
dec
les
jbe
in
ja
and
fimuls
mov
cmp
mov
ja
inc
sub
pop
mov
mov
lea
push
push
fistpll
jmp
sahf
lock
push
pop
mov
dec
stos
jo
mov
pop
adc
sahf
mov
push
pop
test
inc
ds
jmp
aaa
mov
das
jg
cmp
mov
sbb
sbb
pop
cmpsb
push
dec
fnstsw
xchg
add
adc
int3
jecxz
inc
cmp
fdivrs
fdivs
xchg
add
bound
shlb
or
dec
or
pop
push
dec
add
xchg
pop
mov
or
sbb
mov
pop
or
sub
or
cmp
in
sub
sahf
jp
outsl
push
icebp
mov
outsl
pop
jno
xlat
push
aam
sbb
xor
cld
add
gs
ret
lret
xorb
cmc
mov
mov
push
push
ja
inc
or
das
clc
lods
xchg
adc
inc
xor
inc
mov
push
cmc
push
mov
mov
ret
les
cmp
add
and
notb
int3
xchg
in
and
andb
sar
aas
sbb
dec
inc
mov
stos
icebp
pop
mov
and
pcmpgtb
out
sarb
ds
and
xchg
lock
dec
jae
test
fldt
rclb
mov
or
sbb
lock
rcrb
lret
clc
mov
or
mov
sub
dec
fisubs
inc
or
xlat
outsl
push
leave
sub
xchg
ss
lock
in
lcall
push
xlat
adc
ja
and
inc
xor
mov
movsl
xor
ss
mov
sbbb
pop
test
xor
mov
out
arpl
jne
outsl
xor
insl
pop
inc
lret
in
xchg
ret
mov
pusha
xchg
jmp
sbb
fistpll
mov
lock
mov
decb
insl
push
sub
andl
stos
or
sbb
adc
add
mov
ret
je
xor
cmp
lods
mov
jb
xorb
rorb
add
cmpsb
out
int3
mov
add
jmp
lahf
ja
lock
add
in
pop
inc
call
ss
cltd
add
in
mov
incb
xchg
mov
sbb
sub
loopne
test
cmp
enter
lock
add
mov
sub
cld
outsl
dec
xchg
mov
or
outsl
and
cmp
lea
cmpb
jo
fimuls
std
pop
nop
pop
out
adc
sbb
inc
jle
push
mov
cltd
sbb
cs
call
sbb
pop
fbld
push
mov
adc
and
stos
dec
ds
mov
pop
jae
adc
add
test
push
fsubs
hlt
aaa
add
lods
mov
xor
rorl
mov
scas
fs
mov
xchg
inc
mov
add
jmp
int3
inc
les
cmc
add
das
cmp
fisubl
pop
sarb
es
outsb
inc
mov
cmc
out
add
dec
rorb
in
add
js
pop
jp
jp
out
cli
mov
fstpt
lea
sub
es
lods
shrl
ret
mov
int3
mov
mov
mov
in
pop
outsl
js,pn
push
cmp
mov
and
jb
pop
pusha
decl
adc
xchg
cmpsb
jae
xchg
sahf
ja
shll
sar
scas
enter
jo
cmpsb
push
add
sbb
cmp
push
xchg
es
cmp
pop
dec
jo
ss
cli
push
enter
add
scas
dec
cld
daa
sbb
jne
addb
data16
nop
dec
rol
lock
in
mov
ja
add
addr16
lods
jne
add
sbb
sbb
pop
xchg
add
loopne
push
jo
fildll
jb
cmp
mov
add
cmp
mov
decl
jo
push
fimull
dec
push
in
mov
pop
xor
test
pushf
cmp
add
and
dec
arpl
pop
test
mov
mov
inc
adc
push
rcrb
inc
push
repz
bound
mov
jmp
sbb
sti
jno
fwait
push
in
pop
scas
cmp
mov
and
leave
mov
inc
push
pop
pushl
js
cmpsl
pushf
stos
jle
call
jne
xor
add
sbb
jle
test
arpl
das
cs
mov
jbe
icebp
mov
cli
jecxz
mov
jnp
hlt
ret
dec
and
push
test
mov
outsl
push
lcall
push
and
add
sbb
sbb
push
push
ss
sbb
mov
mov
jno
shl
adc
lods
add
mov
imul
movsl
mov
lods
push
mov
iret
sbb
fdivrl
sub
fcoms
into
mov
xlat
sbb
scas
rol
hlt
lea
dec
inc
lods
add
cs
jae
and
or
mov
lcall
jbe
jle
sub
dec
and
stos
ja
test
out
and
push
mov
in
pop
add
and
xor
push
ficomps
or
fs
jns
xor
mov
and
flds
and
movl
inc
cli
mov
jecxz
lds
cli
jg
not
arpl
cmpsb
mov
or
insl
xchg
and
sahf
cltd
mov
cmp
add
in
ljmp
and
arpl
inc
sbb
hlt
or
push
call
or
cmc
scas
push
call
test
pop
insb
clc
sahf
pop
inc
hlt
mov
mov
lret
push
subb
mov
sub
xchg
pop
sarb
pop
mov
add
enter
mov
xchg
jp
out
shrl
sub
cli
dec
add
inc
jge
int
xchg
mov
adc
pop
cld
das
adcb
icebp
imul
push
int3
pop
cld
subl
mov
pop
jp
fildl
jnp
lea
add
xor
fucompp
pop
cld
sub
pop
scas
cmpsb
dec
or
add
fcmovu
cmp
arpl
clc
mov
fistl
dec
je
push
hlt
aad
stos
adc
es
pop
and
popa
punpckhbw
jl
les
fists
inc
xor
rcrb
add
ljmp
pop
jl
es
jg
gs
and
mov
sbb
lock
fcoms
loope
xchg
inc
mov
mov
dec
out
mov
cmc
mov
sub
loope
rcl
mov
pop
or
push
cmp
jno
xor
inc
aaa
loop
push
imul
mov
in
xor
shl
push
dec
lds
xchg
sub
lcall
roll
push
ja
insl
std
ds
ja
fisubs
shr
pop
push
dec
add
hlt
lret
add
out
push
sbb
sub
or
hlt
jg
fnop
cmpsb
push
shrb
xchg
xorl
aam
adc
movsb
or
inc
cs
cltd
loope
out
cli
mov
ljmp
lds
mov
insl
nop
cmp
pop
clts
inc
and
push
int
mov
and
sbb
mov
and
push
jnp
fmull
outsl
mov
fs
int3
dec
push
sti
mov
adc
sbb
sti
imulb
mov
mov
add
fyl2x
inc
aas
and
enter
sbb
mov
loopne
push
sbb
cmp
jo
mov
push
sbb
dec
mov
add
jmp
sbb
out
test
xor
jo
sti
mov
mov
scas
jbe,pn
loopne
mov
cltd
push
add
test
loope
jne
addr16
and
sub
mov
loope
subb
icebp
adc
in
inc
dec
outsl
push
mull
cmp
pop
xor
or
add
mov
dec
mov
js
dec
mov
addr16
bound
fistl
scas
push
rolb
loope
shll
hlt
cmpsl
mov
mov
fiaddl
stos
pop
insb
insb
popa
pop
hlt
or
shll
mov
dec
adc
and
pop
adc
ja
mov
data16
add
or
pop
fidivl
cmp
iret
cmp
cli
pop
loope
push
cmpsb
shll
ret
filds
in
fcoms
jae
jg
and
pusha
xchg
push
loopne
add
mov
cs
jge
push
add
pop
movsb
inc
sub
out
into
inc
sti
jp
add
mov
lea
shl
xchg
adcl
pusha
int3
ds
fnsave
or
testb
inc
add
insb
xchg
movsl
jbe
je
add
sbb
jno
jnp
xor
mov
sbbb
int3
pop
ss
inc
sbb
pop
inc
outsb
sbb
inc
add
sub
cwtl
mov
push
inc
clc
clc
ljmp
stc
mov
loopne
les
mov
mov
xchg
icebp
xor
scas
push
les
jo
ss
imul
aaa
push
fwait
lret
ret
ljmp
push
jecxz
nop
push
xchg
sub
push
mov
test
subl
testl
mov
adc
and
push
cmp
sub
push
scas
dec
dec
loop
mov
mov
repz
idivb
lock
xchg
pop
or
bound
movsb
add
adc
test
ficomps
adc
jbe
pop
jg
sbb
cs
enter
pop
lds
pop
pusha
xor
mov
or
xor
dec
scas
lret
cmpsl
loop
add
add
pop
push
xor
sub
jo
loope
mov
cld
mov
imul
or
sub
cmp
sub
pop
sub
out
popa
push
dec
insb
js
sbb
add
sbb
or
sub
leave
test
xchg
cmc
mov
in
xchg
stc
mov
sub
shlb
cmp
xchg
inc
test
sbb
cli
imul
loopne
dec
lock
xchg
and
imul
mov
movsb
into
jmp
fsubrs
jne
mov
xlat
xor
jbe
add
mov
movsl
mov
insb
js
sbb
cmc
lods
add
sub
mov
sbb
stos
daa
fdivs
test
lds
pop
insb
addl
mov
lock
jo
mov
dec
pushf
push
loopne
mov
scas
loop
leave
push
icebp
mov
mov
inc
push
repnz
fcmovbe
clc
fmull
shrl
aad
add
cmp
lock
fistl
adc
ret
jns
mov
inc
es
cmp
add
movsb
add
push
lret
mov
add
in
mov
lock
mov
pop
jo
lods
xor
pop
shll
fidivrs
clc
fcomps
push
xor
dec
mov
sbb
popa
paddw
xchg
fadds
jno
xor
xchg
push
aam
loop
sar
adc
pop
sbb
rorb
dec
jo
adc
pushf
aam
sub
cmp
push
add
mov
cmpsl
jle
loope
mov
std
or
insb
cltd
mov
jo
int
stos
mov
inc
mov
fcomp
fstpt
loope
fsub
inc
jg
push
lock
mov
push
loopne
addr16
pop
xor
mov
cltd
push
push
sbb
addr16
cmp
xlat
rcll
sbb
cmp
test
mov
inc
adc
icebp
rclb
xor
rorl
rcrb
movsl
ret
jmp
sahf
dec
mov
sbb
pushf
push
es
fisubrs
dec
ja
pop
jo
mov
xchg
push
test
inc
adc
pop
dec
lret
pusha
and
test
cmpsb
cmc
jmp
dec
add
add
ret
push
inc
loop
jg
dec
scas
fmul
jg
sub
mov
cs
dec
xor
xchg
push
mov
lods
pusha
inc
push
pop
icebp
test
repz
jo
sub
jnp
inc
push
sub
add
mov
jae
push
mov
xchg
int3
dec
lret
dec
arpl
mov
fcomps
inc
pusha
in
sbb
add
push
shlb
loope
mov
insb
pushf
mov
sbb
or
push
fld
ret
push
loopne
lds
or
pusha
cs
aad
cmp
mov
insb
add
xchg
pusha
pop
cs
outsl
jbe
out
push
loop
jbe
cld
enter
xchg
jb
push
sbb
mov
in
movsl
lds
adc
add
mov
inc
lret
mov
daa
call
call
and
clc
or
mov
push
lds
add
insb
jb
inc
in
and
inc
ret
call
add
cmp
or
ss
lcall
or
push
pop
pop
jge
pop
loope
aas
int
xor
mov
out
arpl
mov
int
sbb
lcall
inc
or
push
push
lock
pop
pop
shl
jmp
insb
idiv
mov
mov
loopne
or
test
fistpll
mov
pop
sub
movsb
sbb
push
xor
je
jmp
fisttps
push
adc
das
loopne
mov
jo
jg
daa
imul
or
pop
ljmp
inc
sbb
jns
xor
outsb
push
std
dec
fists
mov
outsl
pop
fldcw
roll
mov
pop
fimuls
call
sbb
cld
out
dec
loope
mov
dec
ljmp
cmp
ja
add
add
push
inc
pushf
lahf
dec
rcrl
add
mov
pop
or
lods
adc
mov
in
mov
movsb
scas
pushw
nop
test
xchg
in
mov
add
pop
cmp
loope
mov
inc
jp
das
lods
dec
sub
aaa
dec
cmp
je
inc
add
or
push
shrl
fwait
inc
loop
inc
mov
push
fmull
inc
xchg
nop
jp
pop
stos
or
shr
mov
jne
adc
call
scas
cwtl
mov
xorb
push
jmp
icebp
int3
pop
xchg
jmp
mov
push
pop
ja
mov
jno
push
cmc
out
mov
adc
jge
sbb
js
push
mov
les
inc
dec
jle
cli
clc
push
xchg
data16
repnz
icebp
add
jge
cwtl
dec
inc
dec
cmpb
fimuls
push
pusha
gs
dec
sbb
outsl
jae
ss
cs
stos
xor
or
push
xor
sbb
in
inc
dec
xchg
lret
jmp
pop
sbb
push
or
ds
fisubrs
pop
push
sub
cmp
sti
lds
sar
sub
adc
mov
jnp
inc
rolb
sbb
in
js
inc
sub
cltd
mov
push
pop
xor
jne
fdivl
add
mov
lcall
nop
movsl
add
clc
jo
shl
push
sub
ja
sub
fsubl
or
cli
push
js
push
add
ret
pushf
call
push
repz
xor
jb
jp
shlb
dec
push
loop
jle
pop
loopne
push
xchg
jmp
ret
jmp
ret
in
hlt
jg
or
and
mov
int
into
aas
or
dec
jle
iret
add
iret
or
je
mov
pop
bound
push
test
cmpsb
jg
cmpsl
bound
addr16
adc
or
roll
rorl
add
add
rolb
imul
addr16
jns
mov
addl
dec
adc
fs
cmp
das
jg
lret
sub
shll
jmp
pop
inc
sbbl
mov
rcrl
jl
xor
scas
mov
psubusb
jg
pusha
or
in
pusha
xchg
movsb
iret
push
mov
mov
cltd
sub
or
cmp
push
inc
xor
or
xchg
adc
jle
pusha
jle
rcll
xchg
aaa
out
icebp
ss
pop
push
rorb
xchg
inc
js
mov
mov
dec
lods
and
cltd
cltd
push
push
mov
loop
mov
and
mov
inc
inc
pop
jae
loop
dec
mov
fsubrs
jecxz
mov
xor
lcall
pushw
sahf
adc
mov
scas
xchg
sub
aaa
pop
jge
inc
xlat
push
dec
adc
jbe
adc
and
cwtl
iret
mov
pop
mov
stos
pop
mov
fsubl
aad
sub
cmp
inc
scas
push
jle
nop
sbb
lcall
clc
outsl
stos
push
scas
test
sub
rclb
stc
mov
pop
inc
adc
lahf
lcall
adc
mov
sbb
adcl
xchg
sbbb
sbbb
adc
inc
imul
call
int3
ljmp
xchg
repnz
adc
sti
insl
or
cmpb
or
fists
jbe
mov
pushf
inc
hlt
lock
incl
sbb
int
popa
mov
inc
addl
cmp
outsl
fimull
adcl
das
outsl
xor
aam
cwtl
sub
aam
stos
bound
or
and
decb
jp
dec
or
data16
and
or
les
in
orb
test
push
jbe
or
lock
sub
outsb
jo
xchg
xor
in
sbb
dec
bound
clc
mov
mov
push
andl
mov
test
ja
push
fwait
push
sub
inc
outsl
ljmp
xor
lock
sub
adc
mov
negl
fcmovnb
jg
lret
add
and
mov
and
inc
sarl
mov
mov
jg
cli
push
out
mov
or
test
push
lds
sub
mov
pop
rclb
sub
or
test
cld
sarb
jecxz
loope
or
push
push
cmpsb
ret
mov
mov
int3
or
lahf
push
inc
cmp
enter
cmp
xor
add
add
cmp
cmpsb
sub
bound
in
inc
pusha
sbbb
lock
push
out
clc
jge
rorb
dec
and
notl
test
call
add
add
int
in
add
mov
lock
pop
push
push
jbe
imul
scas
repnz
and
mov
cmc
pusha
lcall
mov
mov
mov
lret
push
sbb
push
jb
mov
adc
or
xorb
mov
xchg
add
add
sub
popf
outsb
adc
dec
add
gs
movsl
hlt
test
inc
xor
xchg
data16
mov
pop
jno
call
cmp
movsb
jmp
fadd
insl
call
jle
lock
push
add
cmpb
shll
xor
es
inc
xchg
test
sub
cmp
or
ficoml
popf
or
das
gs
jecxz
fcmovnb
outsb
sub
arpl
inc
out
pop
jne
push
sbb
fidivrl
ljmp
loopne
adc
cmp
lret
sbb
call
dec
aas
push
cld
xchg
mov
pop
repz
jge
hlt
dec
hlt
ljmp
mov
icebp
sub
adc
hlt
and
lcall
jle
xchg
mov
psrld
bnd
je,pt
pop
mov
mov
aaa
jmp
loopne
cmp
aaa
add
fiaddl
aad
jb
xchg
cmpsl
sbb
add
inc
loope
jge
sub
out
lahf
or
xchg
loop
push
add
mov
dec
insl
xor
and
pop
icebp
lcall
adc
mov
inc
sub
lock
jp
xor
nopl
enter
fs
dec
cli
cmc
aad
inc
test
inc
mov
leave
jo
aam
jle
call
loopne
mov
jo
adc
mov
mov
mov
xchg
pop
stos
and
fsub
incl
mov
ja
fistl
dec
aad
pop
add
pop
pop
dec
jno
sbb
in
pop
sbb
xchg
mov
test
inc
mov
pop
adc
aam
xchg
push
sub
scas
jecxz
jle
push
mov
xchg
nop
sahf
cwtl
outsl
mov
jg
adc
jg
add
mov
mov
mov
mov
imul
std
push
sarl
shrb
adc
ret
mov
sbb
push
push
mov
incb
xchg
aam
sub
dec
push
pop
popf
push
adc
jnp
aas
lods
popf
and
addl
outsl
sarb
loopne
stos
icebp
mov
sub
dec
push
lods
std
lock
ljmp
dec
stos
data16
int
fimull
imul
outsb
cmp
lods
adc
push
imul
test
mov
or
jp
out
mov
cli
in
nop
add
inc
call
jae
inc
lds
add
sbb
add
shrb
xor
xor
add
push
or
inc
and
dec
sub
inc
xchg
addl
xor
add
push
pushf
mov
mov
mov
adc
das
std
sub
xchg
inc
push
aas
xor
outsl
push
sub
pushf
int3
stos
repz
sbb
aam
ret
in
in
push
mov
or
mov
add
lock
pop
repnz
xchg
mov
daa
push
out
insb
xor
sub
sub
ja
xor
rcrb
test
xchg
in
push
mov
popa
popa
stos
imul
stc
ljmp
lock
cwtl
js
or
rolb
lods
sbb
pop
leave
out
mov
xchg
dec
nop
subb
pop
pusha
lods
mov
mov
pop
repz
test
adc
jb
cld
sbb
test
jne
ret
cmp
and
lods
or
out
add
adc
push
shlb
aas
nop
lahf
int3
push
cmp
incb
sbb
cs
and
mov
pavgw
and
in
arpl
popf
mov
push
sub
and
outsb
pusha
jp
sbb
scas
sar
movsl
xor
mov
cmp
scas
test
jmp
subb
xchg
jb
and
mov
clc
roll
shll
shll
mov
inc
sahf
push
std
dec
and
inc
shrl
hlt
dec
push
push
push
mov
add
ljmp
aas
mov
inc
scas
pop
inc
xchg
jo
test
mov
add
mov
and
decl
fdivr
sub
fldl
add
lret
push
cmp
jno
stc
cli
lcall
mov
push
ljmp
hlt
add
dec
and
cmp
xor
bound
mov
cmp
jp
icebp
jg
sbb
psllw
jns
mov
cwtl
shr
mov
xchg
xchg
jecxz
mov
sub
or
cmc
int
mov
xchg
test
lahf
inc
pushfw
cmp
xlat
test
and
cmp
xchg
std
pushf
hlt
in
outsb
cld
and
pusha
inc
jge
and
or
sub
cld
cs
push
jns
ret
ja
add
outsl
xchg
and
mov
aam
int
mov
push
dec
stc
push
sbb
cmp
jmp
or
test
int3
lcall
jmp
les
cmp
mov
jo
mov
ret
lcall
inc
inc
repz
call
cmp
mov
xchg
scas
and
inc
mov
das
js
jb
inc
ds
js
call
ljmp
lods
mov
add
add
xorb
into
add
push
neg
addr16
or
lock
jae
pop
adc
out
test
scas
aad
mov
cld
mov
push
inc
push
push
jb
inc
js
push
aad
mov
jp
and
scas
push
daa
cmp
aaa
push
clc
xor
mov
sbb
xor
add
pop
stos
add
fimull
outsb
movsb
scas
xorb
mov
pop
add
leave
add
xlat
cli
lods
arpl
mov
sub
cmpb
inc
and
push
push
cmp
add
daa
xchg
ja
xor
mov
rolb
inc
cmp
loop
aaa
lods
adc
inc
push
imulb
add
push
adc
fisttpl
jns
sub
lock
sbb
pop
pop
insb
push
es
outsb
or
inc
les
cmp
ja
or
in
in
mov
add
cmp
loopne
mov
dec
jp
pop
and
cld
and
inc
sbb
and
incl
inc
pushf
add
cwtl
add
lds
repz
pop
addb
add
xchg
ja
jecxz
xchg
cmp
cmp
lret
roll
pop
xchg
jb
mov
mov
xchg
mov
mov
nop
jae
or
loope
jo
sub
icebp
sub
xor
jnp
les
ja
loope
sahf
jno
dec
lds
inc
add
lret
xor
js
nop
fistpll
shrb
loopne
xor
xchg
add
test
sbb
loopne
sbb
stos
pop
cs
jmp
mov
aaa
or
mov
cmp
inc
and
cmp
mov
nop/reserved
mov
imulb
stos
ds
out
cli
sub
popa
mov
pop
push
pop
xchg
lds
mov
adc
jge
subb
fdivp
mov
mov
jne
movsb
data16
adc
jb
mov
insb
xor
cs
insb
add
bound
xor
cli
lea
add
nop
stos
xorl
jae
clc
push
ljmp
aaa
mov
cmp
inc
bound
outsb
pop
mov
and
fisttpl
out
jle
in
push
cmpsb
xor
push
inc
inc
or
aas
inc
das
je
or
fbstp
leave
pop
jp
movsb
xor
pop
imul
push
mov
mov
movsl
sbb
cmp
adc
pop
pop
pusha
rclw
ret
bound
add
mov
xlat
sbb
fcoms
dec
adc
pop
rcll
fldl
mov
ret
push
test
jecxz
inc
out
loop
inc
mov
gs
push
xchg
xor
jmp
and
lods
adcl
test
push
push
in
hlt
jmp
into
rcll
fnstenv
sbb
adc
fmul
clc
dec
lahf
call
mov
cmp
or
rdmsr
or
shlb
das
enter
stos
and
jo
daa
shl
aaa
fadds
mov
cmpsb
mov
scas
gs
imul
adc
sub
and
aas
pop
add
arpl
and
xchg
mov
cmc
int
xor
cmp
stos
adc
cmp
and
fldcw
scas
xor
enter
test
mov
test
push
aad
stos
repz
mov
xorb
sub
mov
dec
adcl
dec
dec
jae
and
or
pushf
outsb
cs
arpl
and
mov
das
dec
cmp
je
mov
fnsave
lcall
or
popa
hlt
or
jns
mov
lock
or
push
mov
add
dec
arpl
inc
add
in
or
fxch
gs
pop
ret
daa
pushf
hlt
sbb
or
add
pop
sbb
mov
pusha
jae
mov
xchg
xor
arpl
and
cmp
cmp
pop
push
hlt
add
sbb
push
bound
xor
rolb
dec
pop
pop
clc
pop
mov
inc
incl
pop
loopne
mov
fisubrs
call
and
cmp
jno
pop
je
dec
ret
ljmp
inc
inc
test
mov
and
jbe
mov
jnp
mov
adcl
adc
jo
pop
cmp
push
test
xchg
ret
adc
jbe
nop
push
dec
les
and
cmp
ficoms
lods
jne
mov
mov
push
adc
insb
test
push
mov
clc
pusha
cmpsl
loopne
in
inc
cs
loope
call
xchg
adc
popa
stc
add
and
pop
cltd
pop
xchg
mov
or
divb
cmp
lahf
cs
jg
xchg
lahf
add
stc
pop
pusha
pop
mov
and
int
add
pop
mov
mov
push
outsl
lods
cwtl
call
mov
sbb
pop
js
into
adc
sub
jnp
imul
loope
sbb
scas
jecxz
in
cmp
stos
lret
in
arpl
cmpsb
lcall
mov
jmp
outsb
adc
pop
cmp
cld
inc
jnp
loop
cmpl
or
inc
xor
pop
scas
shlb
ja
xchg
iret
loope
mov
push
cmp
int
jne
adc
xchg
push
cmpb
popa
sub
int3
mov
or
inc
test
pop
adc
mov
push
sarl
sbb
and
push
lods
jp
mov
mov
jno
in
in
inc
cmpxchg
inc
movl
cmp
in
xchg
mov
xchg
flds
xor
or
sbb
lea
dec
push
psubsb
cmp
jl
mov
cltd
mov
sbbl
mov
sbb
stos
cmpb
add
iret
subb
mov
iret
sahf
xchg
jmp
adc
mov
popf
dec
loope
das
or
jmp
push
add
push
jl
jnp
pop
sbb
andl
ret
and
and
fsubrs
mov
leave
fisttps
popa
aaa
push
push
or
shll
ret
clc
sbb
std
jg
inc
or
mov
sbb
bound
mov
lock
lret
and
jnp
or
scas
movsl
add
icebp
test
mov
js
test
mov
in
ja
mov
hlt
jecxz
mov
cli
sub
xor
jp
icebp
adc
insb
adc
ret
aas
adc
mov
fildll
or
jbe
daa
stos
push
dec
xchg
cmp
dec
scas
cmp
imul
mov
add
pop
cmpsl
cs
orl
mov
sbb
incl
jmp
mov
rorb
lds
and
add
mov
jg
xchg
inc
lcall
stc
mov
add
jle
inc
mov
cmp
cmpsl
jo
ret
mov
gs
sbb
cmp
mov
insl
add
jl
clc
xor
add
mov
xchg
add
xcrypt-cbc
cmpsl
nop
cmp
js
xor
ret
movl
mov
loope
outsl
ja
inc
mov
jmp
jne
data16
or
in
jl
mov
or
push
das
and
sti
loop
and
jp
mov
inc
aad
faddl
jo
jecxz
push
aam
lock
dec
pop
dec
adc
negb
mov
out
aad
js
xor
push
cli
loope
cmpsb
lock
cmp
ja
ss
sub
lcall
xor
loope
mov
sub
out
inc
addr16
xchg
push
shl
dec
jge
xchg
ja
cmp
xor
or
cli
aaa
add
stos
cs
add
cwtl
or
dec
std
mov
xchg
cpuid
sub
loope
mov
mov
mov
aam
ret
ficompl
add
loop
test
fs
fsubl
data16
push
fisubs
cwtl
ret
pop
jmp
inc
xchg
xchg
fildl
pop
mov
clc
push
clc
and
ja
mov
lods
push
add
aas
cmp
jb
cwtl
sbbb
and
pop
cld
dec
cmp
mov
cmpsl
icebp
sbb
pop
rolb
push
xchg
nop
js
es
les
adc
push
mov
scas
enter
cmp
aam
pusha
pop
lds
fisubs
jb
jo
pop
cmpb
pusha
sbb
xorb
test
push
inc
mov
clc
pop
jl
lret
stc
dec
mov
leave
push
push
je
out
in
xchg
mov
pushf
adc
mov
mov
mov
push
add
push
or
dec
call
loope
mov
cmpsl
rcll
ja
xor
mov
adc
out
adc
repz
call
and
dec
add
inc
out
cwtl
pop
mov
test
add
and
sbb
mov
rcrl
add
sahf
dec
outsb
fnstcw
sub
jle
jae
and
inc
aaa
fisttps
adc
inc
fldt
jo
add
add
ljmp
add
jae,pn
and
pop
lock
into
mov
fmuls
jbe
pop
test
cmp
push
in
xor
aad
lea
xor
ror
push
add
sub
cmp
or
adc
loop
sbb
popl
aas
andl
jg
mov
sub
iret
xchg
ja
ss
fs
jl
push
sbb
add
in
jl,pt
add
xchg
pop
addr16
jl
es
jo
rolb
xor
adc
lahf
add
cld
dec
cmc
xchg
pop
pop
pusha
push
loopne
imul
add
cmp
add
stc
lahf
sub
xchg
jo
push
fsubs
outsb
clc
pop
repz
sub
aam
or
ret
popf
mov
xchg
popa
stos
iret
adcl
push
push
repz
subb
aaa
bound
sbb
pop
fcomps
xchg
mov
ja
adc
popf
mov
sub
nop
push
add
push
lret
in
gs
daa
clc
test
mov
cmp
cwtl
xor
ror
adc
stos
adc
je
mov
loop
cmp
es
mov
sub
mov
rorb
insb
rol
in
sub
insb
aad
pop
mov
cwtl
mov
sarl
clc
or
out
inc
test
or
scas
call
cli
sub
loop
push
mov
data16
ja
xor
jb,pn
rolb
aad
mov
mov
outsl
xor
mov
xor
cmp
rcl
push
pop
clc
rorb
stos
test
push
push
mov
push
xor
push
iret
in
loopne
mull
incb
movsb
lock
cmp
repnz
push
out
inc
test
xor
adc
sub
and
pop
scas
in
shlb
inc
mov
xor
incl
mov
rolb
mov
enter
or
repz
adc
adc
test
fstl
mov
mov
or
mov
push
mov
lods
xchg
mov
je
fidivs
jb
aam
sbb
sbb
jmp
mov
pop
ret
or
adc
sub
add
mov
scas
push
loopne
arpl
pop
enter
cmp
js
mov
cwtl
xchg
fwait
dec
clc
fldt
xor
sub
add
outsl
mov
stos
popf
xor
in
xor
fimull
mov
inc
inc
xchg
mov
in
mov
inc
lahf
sbb
inc
inc
add
dec
mov
das
adc
inc
xorb
push
nop
pop
cmp
pusha
mov
scas
dec
cmp
pop
stos
add
mov
mov
push
out
or
mov
inc
mov
jecxz
fldt
orb
mov
data16
push
out
mov
fimuls
pop
roll
push
pop
les
clc
iret
js
sbb
and
pushf
mov
in
mov
mov
insb
popa
or
xchg
jb
sbb
and
dec
out
test
pop
pop
jmp
push
testl
lock
es
sahf
inc
sbb
sbb
ja
jg
in
ror
lods
add
push
jmp
ljmp
adc
stos
sbb
inc
cmp
call
rorb
sbb
xor
jo
inc
push
jno
dec
xor
test
dec
loop
add
daa
dec
jae
xchg
push
inc
xchg
ret
je
jg
lock
dec
push
aam
inc
jecxz
xlat
mov
ljmp
push
add
insb
loopne
push
or
les
sub
and
cmp
mov
cli
xchg
mov
inc
sahf
jle
fs
ljmp
adc
fbld
mov
daa
inc
jmp
stc
into
and
jns
mov
test
sti
test
jne
pop
rolb
push
int3
pop
sbb
mov
fdivrl
mov
cmp
pusha
mov
icebp
jne
dec
xchg
add
popf
cmpsb
add
bound
ja
fsubs
dec
dec
and
add
add
sub
jb
cli
pop
test
and
out
push
out
xor
and
add
sub
mov
ja
gs
imul
or
xor
leave
xchg
jp
jno
ljmp
mov
xchg
mov
cmp
dec
jnp
adc
bound
js
add
xor
test
push
lcall
adc
mov
loop
js
xchg
mov
fbstp
jne
clc
add
cvttps2pi
fnstsw
inc
dec
rcrl
jb
sbb
out
jb
add
dec
pop
lods
dec
ljmp
test
aaa
or
mov
addl
int
into
cmp
and
lods
icebp
sub
hlt
test
jg
xchg
lea
push
in
and
ficoms
xor
inc
aam
sub
jmp
out
push
inc
xchg
adc
add
test
xor
fwait
sub
push
lock
mov
adc
mov
cmp
test
jo
testl
jmp
ret
mov
inc
mov
fstps
stos
clc
mov
shlb
bound
or
add
mov
xchg
or
add
test
cmpsl
lret
test
inc
rolb
push
xchg
aaa
xor
ja
lods
sub
fcomp
sbb
mov
and
sbb
hlt
and
ret
repnz
mov
outsl
jns
ret
int
enter
aad
push
mov
add
lods
xchg
movsb
call
inc
stc
or
inc
fnsave
sbb
push
adc
shl
out
clc
pop
jmp
addr16
mov
push
hlt
inc
jns
cmc
lods
inc
pop
movsb
mov
mov
sbb
pop
push
pop
insl
aam
xchg
push
mov
sub
cmp
sub
xchg
add
hlt
pop
pop
sbb
fstpl
cmp
pop
es
les
sti
dec
add
imull
sahf
aad
push
in
inc
sub
or
or
jmp
cmpsb
stc
imul
fs
shll
fsubl
push
ror
jge
sub
jl
sub
pop
lret
adc
inc
jp
push
jb
ret
mov
fbstp
dec
lds
rclb
adc
enter
scas
negl
dec
getsec
int
pop
mov
and
shrb
cmp
shlb
push
xchg
imul
adc
add
jne
mov
out
pop
js,pn
daa
jae
cmp
in
or
mov
pop
out
push
mov
sub
pop
pop
add
cwtl
or
and
mov
mov
in
daa
imul
add
xchg
divl
sbb
js
rorl
or
dec
xlat
fcmovne
fsubr
push
and
shlb
jp
jge
sub
xor
loop
pop
std
lcall
mov
outsl
dec
push
xor
roll
aaa
lahf
mov
insb
xchg
scas
push
jne
pop
std
loope
lret
jecxz
push
push
stos
mov
fbstp
sti
out
inc
sbbl
stc
loope
dec
popa
ret
or
es
jbe
xchg
jp
dec
cltd
mov
mov
jmp
ss
pop
popf
je
in
jecxz
jbe
jne
shlb
cmp
icebp
mov
pop
jno
inc
cs
push
cmpsb
sub
mov
push
cld
inc
jl
dec
andl
out
hlt
xor
adcb
ds
repz
xor
insl
aad
push
lock
and
push
push
inc
pop
test
jnp
xchg
adc
subb
push
mov
sub
fsts
or
push
andb
bound
inc
dec
inc
push
inc
mov
daa
cmp
in
pop
adc
rol
ljmp
or
pop
add
loopne
jae
mov
mov
jnp
das
push
in
xlat
push
adc
push
jnp
fsubs
adc
xchg
lds
sbb
and
fwait
jl
mov
sbb
xchg
push
rcr
push
ja
loope
mov
pop
shll
mov
lock
es
aad
js
push
repz
jecxz
inc
or
lcall
mov
xchg
push
sbb
adc
pop
cmp
fisttpll
add
inc
adcb
test
dec
clc
sbb
lods
dec
lds
jp
stc
sbbl
or
mov
scas
and
ja
clc
test
or
bound
sbb
sbb
add
pop
mov
mov
pusha
inc
dec
test
loop
add
xor
jge
cli
stos
adc
ret
into
and
icebp
loop
repnz
int
add
incb
cltd
add
daa
out
aas
sbb
xchg
pop
push
lcall
out
orl
rorl
dec
and
dec
jecxz
sbb
xlat
adc
mov
or
and
xchg
aam
inc
or
sbb
loopne
fisttps
push
dec
and
rcrb
in
inc
jmp
jo
push
repnz
sbb
xor
push
push
scas
xor
push
loope
jb
in
jge
pop
jl
mov
mov
jnp
loopne
mov
pop
ds
push
add
lods
or
jo
adc
or
out
sbb
lods
or
pop
sub
dec
pop
icebp
ja
hlt
inc
cmp
scas
xchg
test
es
insb
dec
sub
std
stc
jg
pop
test
cwtl
dec
dec
add
out
mov
mov
cmp
or
cs
xor
mov
xor
or
nop
es
xor
mov
sar
mov
shll
aas
push
push
dec
je
nop
jp
out
mov
paddq
test
fisttpl
mov
and
movsl
pmuludq
fcoms
std
add
jl
test
mov
in
inc
mov
inc
pop
sub
lcall
sti
jecxz
nop
push
idiv
pop
sbb
rclb
rorb
pop
xchg
xor
pop
in
push
mov
test
sub
mov
popa
push
or
ja
bound
xor
jae
push
ret
xor
and
lods
andb
lds
push
std
cmpsl
push
jo
push
mov
push
adc
mov
or
pop
pop
push
add
sbb
push
inc
test
nop
adcb
int3
out
test
movsl
inc
mov
jmp
ret
dec
mov
cld
dec
inc
rcll
pop
mov
jp
adcl
fnstcw
and
inc
sbb
test
cmp
divl
out
push
xchg
inc
lock
fidivl
mov
push
outsl
mov
outsl
cmp
inc
out
push
push
stos
ss
or
stos
subl
sbb
cmp
inc
out
jmp
in
add
out
mov
push
mov
sbb
addr16
fstpt
mov
insl
xor
fldt
shll
les
adc
cmp
in
and
mov
mov
and
pop
sbb
push
hlt
addl
adc
out
rcrl
jle
scas
sbb
inc
or
int3
jp
adc
cmp
dec
jecxz
jb
sbb
int3
lods
push
adc
mov
add
inc
dec
dec
xor
cmpl
push
insb
shlb
lock
loopne
cli
sub
fs
jp
stos
pop
loop
xor
int3
xchg
popa
mov
lock
adc
xor
fwait
jecxz
or
add
lret
mov
and
cwtl
outsb
cmp
sbbl
mov
js
sarl
hlt
arpl
mov
mov
mov
out
cmp
or
je
outsb
fcoms
jl
jmp
inc
mov
mov
pushf
jae
rclb
cmc
stc
jg
inc
je
mov
into
jns
ja
stc
nop
clc
aaa
mov
cld
pushf
push
adc
clc
add
push
xchg
mov
add
loope
incl
inc
adc
mov
repnz
sahf
ret
pop
hlt
add
rorl
sbb
inc
es
xchg
adcb
adc
movsl
rclb
das
push
aas
ret
jmp
jl
clc
into
sbb
and
lret
jbe
adcl
call
divb
or
aam
pmuludq
add
out
xchg
inc
xor
call
test
mov
push
fstpl
jo
jecxz
mov
pop
icebp
aaa
cltd
cmp
or
xor
or
add
cwtl
dec
rolb
lahf
dec
pop
flds
mov
ret
clc
ljmp
mov
xchg
js
push
iret
inc
add
or
or
or
icebp
addr16
pop
rcll
nop
dec
orl
xchg
mov
fsubs
dec
pop
cmp
sub
mov
xor
inc
jno
data16
out
scas
adc
out
insl
fimull
cmc
sbbl
pop
icebp
jp
rclb
out
testb
sub
fimull
mov
jl
jne
outsl
mov
inc
imul
cwtl
rorb
ss
xrelease
cmpsb
inc
outsb
stc
mov
sub
push
faddl
and
repnz
cli
test
or
out
outsb
aaa
andb
mov
mov
mov
jb
push
jmp
ror
pop
movsb
xor
and
faddp
cmp
outsl
cld
pop
lods
mov
rolb
or
es
push
mov
insb
xor
sub
xor
jo
daa
or
dec
jg
shr
mov
xchg
test
pop
xchg
jnp
xlat
ja
inc
outsl
pop
leave
rep
out
pop
mov
aad
lock
push
xchg
cli
cmc
test
ss
ja
fmull
outsb
enter
imul
mov
les
test
pusha
into
pop
movsl
dec
dec
cmp
rcr
sbb
xchg
insl
movsb
mov
enter
lds
and
fadds
jle
jmp
jo
loope
test
adc
jb
cmp
fcom
or
test
lcall
add
dec
inc
imull
rcll
stos
test
out
adc
sbb
outsb
or
and
rcrb
push
fimuls
int3
clc
jmp
mov
je
mov
enter
icebp
push
fsin
push
jp
cmc
int3
add
mov
in
or
adc
push
or
clc
in
sbb
mov
insb
data16
int3
pop
or
clc
lds
rorl
xchg
push
and
mov
mov
lods
scas
add
rolb
ljmp
dec
shlb
jnp
pop
loop
dec
stos
test
mov
outsb
inc
xor
mov
rorb
lret
and
clc
pop
stos
loop
ds
mov
fsubs
push
clc
push
rolb
mov
loopne
xor
jmp
jg
fcoms
sub
xchg
ret
pop
popa
pop
pop
stos
jns
mov
stos
jg
test
and
sbb
in
js
lock
push
stc
movsb
scas
mov
cmpsl
mov
mov
aam
mov
loop
shll
test
loope
fmul
sub
sub
inc
lock
test
mov
mov
cmpsl
or
push
faddl
out
or
sbb
push
pop
lock
fwait
xorb
xor
lods
std
dec
push
xor
jne
shlb
pop
mov
push
cmp
cld
pop
test
cwtl
insb
lock
pop
out
mov
cli
pinsrw
adcl
ret
xor
cmp
xchg
repz
jecxz
pop
jne
pop
add
dec
add
subb
out
mov
pop
cld
mov
inc
xchg
add
mov
jnp
in
cmpsb
push
adc
adc
inc
jl
mov
aaa
mov
and
shrb
lods
lods
cwtl
mov
xchg
inc
lea
loopne
push
cmpsb
mov
clc
decl
mov
test
dec
insb
inc
mov
cmp
and
sub
dec
inc
mov
fidivrs
ljmp
sbb
jns
sub
outsb
les
mov
xor
sbb
aam
push
out
push
jno
test
bound
test
pusha
lock
repz
fisttpl
adc
shrl
sub
jmp
fidivl
subl
xchg
cmpb
mov
pop
and
shl
data16
push
xor
push
or
ljmp
dec
enter
andl
in
sub
in
jmp
pop
mov
sbb
loope
das
or
mov
imulb
fldcw
push
movsb
stos
push
push
insb
mov
lods
mov
ljmp
pop
adc
jg
lahf
sbb
cmc
lret
or
mov
hlt
adc
daa
repnz
hlt
std
inc
loope
pop
xlat
and
sti
repnz
jae
mov
inc
or
mov
mov
loopne
push
stos
add
jbe
jb
loopne
fistpll
test
xchg
xor
dec
aas
dec
cli
test
jp
cld
out
int
nop
fidivrs
ror
push
jge
aas
jp
adc
mov
outsb
ljmp
clc
mov
fimull
sahf
pop
or
and
jb
jecxz
stos
cld
adc
clc
movsb
cmpsl
les
loopne
sar
mov
loopne
testl
fcompl
ljmp
int
push
ljmp
fcoms
dec
fwait
in
add
sbb
ja
inc
xor
mov
push
cmpsb
lds
pusha
mov
or
lret
jbe
push
cmp
cmp
stos
movsb
pop
das
fstpl
jbe
lret
lcall
mov
dec
jnp
or
adc
cmp
lea
testb
push
push
mov
popf
mov
or
sbb
push
pop
arpl
and
mov
or
cmc
push
add
and
cmc
popa
sbb
stos
mov
jae
adc
mov
sbb
cwtl
out
outsb
adc
inc
pop
add
jl
int3
xor
xor
fwait
ljmp
addl
mov
xor
mov
xor
cld
mov
pushf
loope
hlt
addr16
stos
pop
pop
imul
mov
shr
adc
add
sub
inc
push
add
insl
clc
ret
and
outsb
out
dec
ja
adc
test
add
lea
ljmp
fldl
push
mov
pop
icebp
pop
xchg
mov
push
push
rorl
xor
js
cmpsl
ljmp
je
push
sub
jo
sub
inc
mov
cmp
jmp
je
in
ljmp
in
dec
sub
insb
cwtl
dec
adc
pop
lods
push
push
cli
fistl
ss
add
mov
ljmp
sbb
jne
cld
out
xchg
pop
mov
sbb
fidivrl
sahf
pop
js
mov
gs
std
jg
inc
sub
add
cmpsb
in
jno
adc
arpl
scas
ss
sbb
inc
and
pop
lcall
or
mov
aad
ljmp
fadds
pop
cmp
cmp
loopne
pop
les
sub
enter
mov
cmp
dec
add
push
js
xlat
push
insb
clc
stos
push
mov
ret
arpl
fisubs
testl
inc
or
sarl
clc
push
mov
sub
and
lret
jb
lret
mov
out
or
dec
shl
xor
aas
ja
inc
mul
mov
jp
or
xchg
ret
cmpb
push
mov
xchg
iret
mov
jae
rcl
repz
test
rcll
mov
shr
inc
sbbl
or
mov
sbb
rorl
loop
aas
dec
test
ja
cmp
add
test
addr16
adc
aad
js
jo
sub
pop
ljmp
mov
sub
movsl
inc
sti
pop
mov
xchg
adcb
sub
fldl
nop
orb
inc
roll
adc
push
jle
sub
sbb
in
push
and
and
sahf
sbb
inc
mov
je
and
mov
xor
pop
loopne
scas
pusha
jae
ljmp
add
daa
je
and
push
adcl
aas
pop
mov
outsl
jl
add
orb
and
es
jle
fistpl
in
loop
insl
xor
pop
mov
mov
adc
movsl
jle
js
jl
jo
pop
and
add
imul
addr16
test
jle
jne
loopne
push
jmp
clc
cmpb
inc
sbb
mov
xor
sub
mov
movsb
icebp
jmp
lahf
or
das
clc
xchg
sarb
mov
lcall
rcl
test
rcrb
pop
lret
ljmp
sbb
xor
add
clc
or
je
sti
cli
sub
ret
pusha
out
push
mov
pop
jmp
das
and
xchg
pop
sbb
je
xchg
push
and
jecxz
sub
hlt
lods
ss
xor
push
pop
mov
lods
mov
push
nop
lock
or
std
mov
rcrb
sbb
sbb
cltd
enter
test
rorb
lret
test
cwtl
push
jns
notl
sub
or
cwtl
lds
loope
sub
or
mov
clc
pop
xchg
add
xchg
fstps
pusha
stc
sub
and
xchg
adc
sbb
jp
faddl
push
loop
cmp
setne
out
rclb
sub
ljmp
mov
jmp
in
int
cwtl
cwtl
mov
add
outsl
rol
adc
shrl
lret
gs
sbb
mov
pmaxsw
push
lods
jg
jp
and
xor
mulb
popa
jnp
jp
mov
pop
in
jnp
inc
mov
lds
lret
fstl
xor
dec
add
sub
fisubrl
pop
sub
cmc
pop
loop
push
inc
fdivl
inc
mov
cmp
mov
ss
lock
dec
lcall
and
adc
imul
jo
pushl
dec
arpl
loopne
xchg
mov
fptan
mov
or
fmuls
mov
pop
icebp
int
loop
sahf
add
push
arpl
sbbl
and
orb
out
push
fs
loope
cli
or
mov
ror
and
xchg
movsb
cmp
scas
imul
rorl
inc
ret
jg
mov
pop
sti
inc
push
cli
repnz
mov
mov
adc
cli
mov
lret
pop
cltd
jb,pn
and
mov
jp
jbe
adc
clc
adc
pop
mov
mov
out
dec
inc
in
rorl
mov
rcr
xor
sar
and
pop
cld
jl,pn
ret
je
dec
add
adc
pop
test
lahf
add
jp
sub
in
addl
scas
loop
sbb
jae
fldt
mov
or
sub
fwait
jne
inc
or
loop
dec
cmpb
xor
or
and
cmp
cmp
into
push
repz
mov
mov
scas
fidivrl
scas
add
pop
hlt
lock
nop
mov
pop
mov
pop
sub
add
ret
sub
mov
and
decl
je
cld
mov
or
inc
mov
inc
xor
xchg
push
inc
les
push
scas
nop
cmp
adc
pusha
pop
dec
sbb
es
mov
xchg
mov
maxps
mov
call
aam
push
outsl
and
or
movsl
andl
ss
mulb
fcoml
inc
add
jbe
cmp
les
xor
loopne
mov
cld
and
xlat
or
test
mov
in
insb
or
mov
test
std
ja
adc
arpl
push
xchg
jb
scas
lcall
cmp
jge
roll
test
test
lods
add
rolb
lcall
sbb
pop
push
scas
shl
imul
cmp
lcall
sbb
fdiv
cmpl
adc
pop
cmp
xor
sub
incb
or
mov
sahf
cltd
mov
add
lock
cmp
mov
incl
jecxz
xchg
xorl
add
outsl
decl
rol
lock
movsb
scas
in
cltd
rcrb
ss
jge
cmp
adcl
add
jl
scas
xor
lret
sub
bound
aam
in
test
ja
cs
add
push
aad
das
cmpb
in
mov
inc
mov
sub
cmpsb
mov
lret
jp
jb
lcall
insb
mov
int
xchg
and
xor
aad
jns
aam
les
test
add
xor
adc
clc
lret
sub
movb
mov
adc
jle
push
leave
in
sub
in
push
mov
movsl
lock
push
lret
jge
add
cmp
cmpsb
cld
inc
mov
mov
inc
in
je
cs
mov
bound
dec
jmp
push
sbb
push
and
or
into
subl
sbb
mov
push
or
xchg
push
lahf
scas
pop
push
pusha
inc
out
xor
push
or
cmp
jb
sub
lock
inc
push
jne
scas
sahf
or
pop
clc
push
aaa
ljmp
test
scas
xor
clc
lods
jbe
in
lods
loope
mov
mov
sbb
push
lret
push
sub
and
outsl
js
icebp
push
mov
xor
add
pop
orl
sbb
mov
pop
xchg
xor
lock
mov
and
fldcw
notl
or
lret
dec
or
dec
stos
mov
mov
dec
sbbl
or
imulb
dec
movl
inc
lcall
sbb
adc
cmpl
pop
fcmovnbe
add
lret
jecxz
out
mov
sub
mov
jecxz
cli
mov
out
leave
or
fisttps
test
or
into
out
xchg
push
es
clc
sub
cmp
jbe
mov
jne
mov
mov
pop
mov
pusha
in
fidivrl
push
clc
inc
je
sbb
xorb
sub
jno
or
pop
inc
mov
fnstsw
mov
imul
push
fstpl
adc
pop
push
cs
pop
fisubl
push
lock
add
and
pop
mov
pop
addr16
push
rcl
test
mov
xchg
sahf
pop
dec
out
sbb
loop
ja
mov
cmc
cmp
push
sbb
fidivrl
test
icebp
and
and
leave
add
cmp
xchg
addr16
pushf
and
push
adc
pop
shrb
subb
adc
pop
out
mov
xchg
icebp
mov
mov
pop
and
mov
sbb
add
xor
aas
leave
push
sbb
cltd
decb
icebp
pop
inc
cld
pop
adc
jp
dec
add
dec
cmpsb
push
xor
xchg
ss
fsubrs
andl
mov
mov
loop
prefetchnta
push
js
adc
cli
adc
adc
mov
pop
fistps
or
mov
mov
scas
mov
adc
movsl
lock
jns
pop
pushl
jo
fistps
sub
arpl
jecxz
sbb
add
fistpll
pusha
push
mov
add
out
bound
adc
pop
push
add
sbb
repnz
pop
mov
sar
push
push
andl
ret
mov
icebp
dec
inc
xlat
adc
push
call
add
out
das
push
sub
hlt
lcall
cmc
in
dec
mov
push
inc
inc
iret
adc
mov
xchg
pushf
test
xchg
jle
sbb
cli
mov
or
cmp
or
inc
and
pop
icebp
sub
ret
and
fadds
jne
xlat
scas
inc
pop
shrl
sarb
pop
test
das
xor
and
insb
mov
out
cs
and
xchg
lds
inc
fildll
push
jae
loope
xor
mov
and
jno
xor
mov
adc
or
aas
add
add
or
mov
nop
or
int3
inc
jbe
adc
aam
outsl
cmpl
adc
jle
pop
and
ficoms
cmp
leave
and
cmpsb
or
mov
pusha
ss
mov
in
mov
nop
lock
test
push
lcall
mov
mov
push
mov
icebp
adc
mov
dec
mov
ret
xchg
movsl
and
lds
adc
pop
add
sub
push
push
lret
pop
and
xchg
adc
popa
jo
insl
out
sbb
mov
or
sbb
call
xchg
push
and
sbb
adc
repnz
push
cmp
add
addb
xorl
xchg
call
xor
dec
shrl
dec
fimuls
xchg
push
gs
inc
mov
sbb
inc
sub
mov
sbbl
jae
adc
push
sbb
ja
mov
jge
inc
push
adc
pop
repnz
hlt
dec
pop
ss
push
divl
imul
push
cld
push
cmp
rcl
inc
dec
fildl
jp
les
imul
adc
sahf
mov
sub
cmp
shl
or
xchg
or
inc
aaa
rolb
arpl
test
mov
repz
fimuls
xor
sarb
gs
push
jae
xor
mov
stc
mov
add
sbb
mov
mov
fnstsw
or
jb
xlat
ret
fwait
sbb
rorl
adc
dec
push
pop
add
sbb
inc
dec
aas
or
pop
or
aaa
push
sbb
xor
clc
shlb
mov
rol
pop
push
rcrb
xchg
and
mov
js
and
hlt
mov
loope
dec
dec
out
adcb
inc
sbb
outsl
imul
inc
adc
rcr
ret
ja
push
push
jo
or
jnp
push
in
mul
loope
cmp
cmp
pop
pop
lock
mov
jo
cmc
cmp
push
in
mov
je
push
fsubrl
std
daa
or
add
cmpsl
inc
mov
pop
add
and
mov
jno
inc
sbbl
pop
call
jg
incl
cmp
icebp
fs
sbb
negb
rol
arpl
inc
push
or
js
ret
sub
repz
aaa
mov
mov
cmpsl
adc
lds
or
mov
mov
stos
jmp
fstl
mov
gs
xor
ss
subb
stos
in
jmp
xchg
inc
add
fnop
cld
daa
pop
idivl
into
pop
lret
fildl
hlt
jnp
pop
xor
mov
add
jmp
seto
pop
xchg
jge
cmp
pop
cwtl
inc
arpl
les
je
mov
pop
imul
pop
dec
sti
popf
into
stos
jno
adc
mov
mov
out
cmp
es
arpl
jae
mov
pop
lock
jns
xchg
mov
daa
sar
jp
dec
gs
add
push
xchg
xorl
clc
fcoms
cmp
mov
jb
movsl
loope
mov
mov
pop
hlt
xchg
les
sti
push
push
clc
daa
jecxz
mov
add
bound
jae
jge
movsl
mov
imul
popf
es
add
add
cmp
xchg
aam
push
add
icebp
push
mov
inc
xchg
push
stc
cmp
inc
lods
xor
mov
popa
adc
dec
ljmp
jbe
xlat
and
pushf
mov
dec
call
or
sbb
inc
or
dec
and
imul
adc
es
push
mov
arpl
ljmp
xchg
pop
mov
shlb
mov
cmp
mov
lock
stc
or
mov
loopne
push
jmp
cmpsl
mov
and
fisubrl
jle
push
imul
mov
dec
test
jle
push
cmc
pop
cmpsl
or
fsubl
add
icebp
and
sbb
fisubl
pop
loop
ljmp
cmp
pop
adc
out
inc
pop
popa
sbb
jmp
andl
gs
jp
das
stos
aaa
dec
sub
stos
je
cld
in
dec
incb
std
fwait
cmp
call
push
fsubs
and
scas
inc
mov
stos
roll
cld
decl
leave
repz
test
push
fldenv
fists
rcrl
movsl
insl
out
mov
or
sbb
pop
pushf
fidivl
outsl
test
sub
mov
cmp
and
sbb
scas
cli
orl
clc
adcb
mov
inc
out
mov
imul
fldenv
cmp
pop
and
sbb
sbb
and
push
xor
inc
push
sub
cltd
xchg
dec
mov
inc
fwait
hlt
orb
stos
movsb
xor
jmp
loope
pop
js
xor
sahf
or
xor
mov
sub
sub
fadds
adc
mov
cwtl
dec
sub
push
sbb
aaa
adc
sbb
adc
jl
rcrb
mov
xchg
cmovg
mov
aad
ret
xchg
mov
push
rorb
pop
xor
xchg
test
clc
cmpsb
cmp
mov
scas
sub
adc
jne
inc
pusha
mov
mov
fmul
fcoml
dec
push
inc
mov
sbb
xchg
imul
xor
jno
xchg
inc
aaa
xlat
or
cld
pushw
pop
xchg
scas
and
rclb
in
lahf
div
cmp
jo
add
mov
push
loop
xorb
enter
dec
lods
mov
jno
jo
inc
or
fildll
stc
pop
xchg
shl
add
aas
xchg
jmp
pop
aam
sbb
mov
aas
jmp
icebp
scas
mov
clc
ss
push
sbb
mov
pop
int
mov
sbb
movsl
testb
sub
pop
sub
cs
das
daa
test
iret
xchg
imull
push
loop
push
jnp
sub
repnz
aaa
inc
add
cmp
dec
xor
shll
clc
sbb
pushf
inc
adcb
pop
mov
lock
test
fiadds
loopne
adc
cmpsb
adc
dec
dec
sbb
inc
or
cs
loopne
sub
cmp
rorb
add
and
roll
ret
add
loop
das
push
or
movsl
jb
outsb
pusha
rcrl
fisubl
jmp
lret
xor
dec
add
test
pusha
pop
pushf
out
stc
ja
sbb
or
imul
xor
outsb
psubw
cs
aas
lret
test
dec
add
add
xlat
inc
test
dec
mov
scas
adc
push
incl
add
cmp
push
and
add
push
sbb
and
and
adc
add
jmp
push
add
and
addl
xor
sbb
add
inc
sbb
nop
inc
add
loopne
sbb
call
push
cmp
adc
sbb
sbbb
add
dec
orl
call
addb
inc
adc
addl
cmp
adc
inc
push
fstpt
xorb
incl
or
mov
inc
adc
movsb
add
mov
mov
mov
orl
add
add
fistps
andl
sti
lcall
add
or
sbb
add
test
inc
inc
sbb
sbb
cli
mov
adc
test
add
aam
inc
jbe
mov
add
jb
lcall
outsl
incl
pop
int3
nop
or
pop
push
shlb
add
cmp
nop
addl
push
jp
add
shlb
inc
add
push
adc
xchg
add
movsb
push
sbb
xorl
pusha
test
mov
mov
insb
adc
loopne
and
or
xorb
add
inc
adc
add
loopne
inc
cmp
add
pop
fstpt
and
loopne
nop
jb
inc
xor
incl
lods
loopne
add
inc
test
or
adc
rorl
and
shlb
rclb
mov
int3
mov
add
sbbl
xor
inc
loopne
pusha
xor
fcoms
inc
cmpsb
sbb
mov
insb
addl
jle
jl
jo
or
and
sbb
push
shlb
icebp
pushl
or
test
inc
add
incl
addb
das
push
cmp
add
and
orl
test
sub
adc
cmp
in
or
mov
nop
or
mov
sub
mov
sbbl
inc
test
rolb
cmp
cld
cmp
push
ret
mov
and
sbb
mov
xor
adc
cmp
mov
inc
nop
add
cwtl
nop
sbb
add
and
add
nop
pop
mov
adc
pusha
mov
sub
and
sub
add
data16
int
loop
sub
or
sbb
jo
jge
mov
pop
sbb
lret
add
inc
xor
push
cmp
add
int3
pusha
xchg
les
inc
inc
jo
pusha
bound
popa
adc
pusha
adc
push
out
pop
inc
shll
clc
push
fmuls
or
and
rcrb
mov
testb
lods
push
insb
mov
stos
rcrb
xor
lret
movsb
adc
xor
andl
sub
inc
pusha
xor
pusha
ss
xor
add
shlb
cli
add
or
into
int
push
xchg
mov
shlb
jp
push
aam
addl
adc
mov
test
and
mov
xor
lods
shlb
mov
add
add
pop
mov
inc
or
pusha
xor
xor
lret
sbb
sbb
adc
sbb
insl
loopne
in
rclb
pushf
and
push
imul
nop
inc
inc
jbe
mov
add
add
adc
fsubs
lods
addb
fisubrs
adcb
movsb
rolb
incb
mov
pop
pop
sbb
inc
shl
cmp
lcall
or
add
inc
and
cmp
inc
cmp
into
pop
adc
add
xorb
or
jo
shlb
or
clc
cwtl
mov
adc
mov
enter
mov
inc
cmp
push
pop
pop
inc
cmpsb
sub
scas
stos
push
add
mov
ret
fwait
cmp
insb
sbb
add
lock
pop
cmp
sbbl
sub
dec
adcb
test
cmp
lcall
cmpsb
or
loopne
hlt
mov
inc
push
andl
mov
adc
push
mov
pop
cld
dec
sbb
pop
push
mov
ret
xor
lcall
add
xchg
xor
or
test
cmp
rorb
xor
test
enter
call
cmp
xor
or
bound
orl
pop
into
cmp
or
cltd
dec
push
pop
js
dec
push
inc
xchg
inc
clc
mov
sbb
nop
dec
cmp
incl
inc
nop
or
jle
out
and
or
cmpsb
inc
lods
pop
enter
cmp
ljmp
rorb
sbb
add
push
sbb
xor
orl
pushf
subl
dec
add
push
xor
push
inc
add
and
or
sbb
stos
pop
data16
clc
stos
and
push
xor
lcall
push
adc
xor
cmpb
mov
adc
test
push
andl
push
in
xor
or
xor
xor
test
sub
xor
add
in
push
xor
test
push
push
mov
or
or
mov
cmp
xor
cltd
xor
sbb
shl
call
cmp
add
stos
xchg
call
add
add
int3
add
insb
jae
in
je
adc
mov
out
nop
mov
ret
push
jno
or
fiaddl
sbb
mov
xor
sbbb
cld
ss
into
popa
or
jo
stos
insb
jo
fmuls
xorl
lcall
or
xor
pusha
xor
sbb
mov
enter
mov
sahf
add
gs
cwtl
mov
push
test
cltd
ret
push
shrb
add
repnz
and
test
mov
mov
or
pop
add
add
push
shll
add
push
add
cs
in
js
stos
jmp
xor
xor
push
cwtl
enter
ror
adc
addl
enter
sbb
jbe
add
add
loop
sbb
mov
xchg
pusha
add
adc
adc
adc
add
lods
and
mov
push
fmull
mov
iret
gs
in
test
rclb
dec
push
flds
and
dec
cs
push
cld
dec
and
cwtl
mov
push
add
sbb
data16
adc
loop
add
sahf
cmp
lcall
cmpsb
js
sbbb
insb
mov
addl
lret
mov
mov
xchg
mov
orb
mov
enter
mov
dec
cmpsl
and
aam
xor
add
cld
ret
mov
push
and
mov
ss
or
inc
testb
pop
inc
xchg
lods
rolb
add
pop
push
mov
js
cmp
stos
or
adc
inc
mov
add
push
add
fcom
pusha
mov
jle
clc
dec
cli
or
lods
inc
or
test
cmpb
dec
enter
adc
lcall
add
loopne
xchg
sbb
xchg
rcrl
cli
xorl
inc
aad
hlt
hlt
pushf
pusha
pop
mov
xchg
inc
addl
push
or
add
mov
je
pusha
mov
or
and
fadds
test
jbe
or
inc
mov
orl
push
pushf
shlb
call
inc
adc
jle
inc
push
and
adc
data16
cmp
inc
jle
mov
pop
push
loop
adc
sbb
subl
andl
mov
mov
or
add
push
push
pusha
cmpb
dec
push
add
clc
loopne
mov
add
xor
add
subl
xor
ficoms
mov
adc
cmp
add
xor
dec
loopne
and
addb
adc
jmp
and
addb
nop
xchg
call
add
in
test
sbb
or
test
addb
adc
je
shrl
addl
add
sbb
movsb
and
cmp
test
inc
enter
push
sahf
fsubl
mov
jmp
lret
sbb
push
mov
fdivrs
inc
insl
mov
inc
rolb
jle
jmp
xchg
dec
mov
mov
loope
inc
push
mov
sbb
xor
hlt
adc
adcl
dec
and
or
and
cmp
push
or
repnz
test
enter
inc
ret
clc
loopne
cmp
jo
mov
and
and
adc
shl
xor
sbb
add
test
xchg
add
sub
ret
xor
loopne
jp
add
into
push
test
es
enter
push
xor
pusha
bound
mov
data16
inc
or
sbb
test
lcall
adc
xor
and
push
cmp
js
hlt
es
or
rcrb
inc
xor
jl
adc
stos
pop
push
mov
adc
sub
adc
pop
lcall
push
cmp
test
pushf
push
ret
and
pop
mov
and
inc
xchg
dec
fdivrl
or
pusha
xorl
push
and
push
push
lock
subb
cmpsb
in
ret
inc
inc
jo,pn
xor
push
xchg
insb
and
pop
inc
ret
jne
pusha
cmp
mov
xchg
mov
cmpsl
pop
je
push
jo
add
push
mov
pop
and
mov
sbb
lret
scas
jbe
nop
adc
add
adc
push
andl
stos
hlt
sbb
lcall
push
ret
sub
shrb
cmp
adc
and
shlb
mov
cmp
sbb
xchg
jmp
sbb
push
ss
xchg
mov
and
mov
or
fildl
subl
cld
ljmp
lea
test
and
pop
xchg
push
jl
cmp
ljmp
fs
roll
mov
dec
addl
push
adc
add
xchg
xchg
inc
add
nop
sub
inc
lds
data16
rorb
mov
ss
mov
add
xor
and
cwtl
adc
add
inc
sar
sbb
or
inc
pop
add
push
pusha
add
add
fcoml
xchg
call
cmpsb
sbb
push
mov
mov
andl
mov
mov
inc
loopne
inc
and
jo
sbb
js
fdivrp
pop
xchg
enter
insb
cmp
pusha
push
pushf
dec
pop
push
dec
push
jne
xchg
fdivr
lods
mov
push
xchg
mov
loopne
pusha
pop
lock
inc
jo
inc
lds
fimull
insb
xor
pushf
loop
or
and
daa
adc
cs
push
add
sbb
pusha
nop
dec
loope
jnp
subl
dec
push
push
out
or
mov
or
sbb
inc
cmp
inc
mov
je
pop
loopne
and
mov
cmpl
xor
and
push
or
cmp
adc
xchg
test
xchg
push
inc
or
or
or
jl
ret
fsubrs
lcall
mov
jae
inc
add
xor
popa
pusha
test
xchg
out
pusha
push
dec
and
mov
inc
inc
sahf
push
add
js
sbbb
cmp
mov
sbb
sub
xchg
imul
cmp
sbb
add
in
cltd
mov
xor
into
or
inc
aam
push
lods
push
mov
and
fs
in
mov
roll
add
cmp
pop
xor
je
loopne
sbb
sub
inc
jo
jo
or
ret
cli
into
add
jo
xchg
jb
push
lcall
movsb
mov
or
xchg
mov
dec
rorb
inc
add
ljmp
stos
sbb
fs
mov
mov
and
test
enter
mov
lock
push
test
aad
push
inc
fmuls
and
in
mov
adc
loopne
pusha
sub
hlt
repnz
mov
inc
or
push
jo
or
adc
push
jo
enter
push
push
adc
adc
in
dec
jo
ljmp
or
and
adc
nop
adc
pop
xor
xor
pusha
push
enter
sbb
sub
je
and
nop
push
push
loop
sub
lods
inc
push
loopne
pusha
mov
add
subl
dec
cmp
cs
inc
mov
lret
add
and
and
mov
mov
mov
push
cmp
add
and
sbb
test
add
inc
xchg
mov
or
int3
lods
inc
and
inc
ret
adcb
xor
and
push
stos
pusha
movsb
xor
or
fisubl
and
pop
stos
jbe
inc
mov
xor
adc
inc
or
test
or
jo
sbb
xchg
mov
insb
cmpsb
shlb
xor
popa
addb
lock
rcrb
movsb
mov
dec
sub
jae
add
and
lcall
add
inc
inc
or
push
cmp
add
mov
inc
sbb
mov
pop
rorb
push
or
movsb
push
ficoml
out
out
mov
xchg
rolb
adcl
inc
xchg
sub
pusha
push
pop
xchg
rcl
add
mov
sub
push
sbb
test
fs
orl
pushw
lods
or
or
mov
int3
pop
data16
cs
push
test
push
loopne
adc
inc
push
cmp
inc
adc
rclb
aam
sbb
pop
out
sub
push
das
xchg
test
cld
push
mov
ret
sub
mov
jp
mov
cmc
fs
inc
and
add
pop
js
pushf
cs
inc
cmpl
bound
or
sarb
dec
lods
shll
cmp
sbb
jle
jo
hlt
loopne
cmp
loopne
push
add
add
sub
shlb
sub
mov
add
fmuls
xor
sbb
in
add
ds
pusha
xor
sub
loopne
fdivr
adcb
lcall
scas
sub
fs
inc
adc
xchg
jo
mov
or
xchg
xchg
fmuls
xchg
mov
jo
push
xor
push
mov
cwtl
orl
out
xchg
fs
sub
sbb
sahf
cmpsb
and
and
inc
inc
aam
pop
inc
cmp
inc
or
ret
add
sbb
mov
xchg
leave
divb
xchg
mov
test
and
in
cmp
sbb
fimull
push
push
rcrb
mov
cmp
cli
scas
shlb
add
and
stos
cmpb
sbb
enter
nop
loop
nop
nop
add
xchg
aam
mov
or
sbb
adc
mov
xor
sbb
fiaddl
inc
test
and
fcoml
add
cmp
rclb
or
int3
lcall
cwtl
stos
and
popa
inc
xor
in
data16
jle
ret
ljmp
push
andl
cmp
adc
roll
in
cmp
and
push
sbb
pusha
push
add
push
add
pusha
adc
mov
mov
add
movsb
test
popa
loopne
mov
mov
dec
xchg
mov
mov
test
xchg
xchg
cmp
add
data16
outsb
pop
or
dec
jo
mov
xchg
and
test
xor
int3
je
xor
lds
dec
sub
or
testb
cmp
sbb
mov
add
jle
mov
xorb
mov
jb
push
lock
scas
sub
cmpsb
xchg
cmp
and
sub
or
sub
sbb
jo
pushf
sbbl
xchg
mov
xor
andl
das
add
rcr
cld
inc
xchg
inc
movsb
add
pop
or
nop
jbe
pusha
adc
adc
daa
sbb
dec
sbb
xor
or
push
cmp
pop
stos
in
ret
add
mov
sbb
push
inc
push
xor
cli
fsubs
loop,pt
rolb
es
into
addl
pop
aad
or
push
lret
adcl
push
movsl
xchg
addl
dec
repnz
xchg
dec
movsb
xor
push
push
push
add
lods
inc
sbb
mov
xorb
or
mov
cmpsb
add
and
mov
xchg
mov
mov
xor
pusha
inc
push
cmp
lods
cmpsb
int
cmp
cwtl
adc
cmp
sbb
add
pop
or
insl
adc
cmp
movsb
rorb
dec
inc
test
add
sbb
dec
adc
out
stos
add
movsl
adc
test
rcrb
push
xchg
push
hlt
inc
pusha
xacquire
inc
pusha
add
and
test
or
call
add
push
push
je
dec
pusha
ss
xchg
ret
rcrb
testb
push
xchg
adc
add
sbb
repnz
inc
test
adc
andb
add
ret
dec
mov
fs
adc
mov
cmp
fadds
lods
dec
and
push
xor
and
xchg
dec
lock
aad
push
inc
loopne
add
push
add
fiadds
test
xor
inc
pop
hlt
xchg
sub
popa
and
ficoml
int
stos
clc
and
and
fcoms
sub
add
sbbl
or
inc
mov
mov
mov
and
es
xchg
ret
push
lcall
add
sbbb
subl
and
sub
push
inc
adcb
and
or
je,pt
cwtl
imul
sbb
add
nop
xorl
cmp
hlt
insl
add
dec
movsb
push
mov
sbb
push
test
add
in
mov
int3
aam
cmp
pusha
nop
and
test
pusha
cs
dec
pop
and
out
repnz
push
inc
adc
fcom
add
xor
aam
sub
inc
and
ljmp
push
push
adc
mov
fisubrl
inc
cwtl
shrb
rolb
test
mov
push
jmp
inc
movsl
adc
adc
insb
add
sub
fdivr
adc
jp
adc
data16
or
push
push
insb
lcall
into
sbb
loopne
sub
in
fs
dec
add
js
xor
lock
inc
cmp
loopne
incl
dec
hlt
sub
xorb
inc
mov
dec
push
test
insb
scas
sub
push
mov
mov
fimull
mov
mov
mov
add
mov
push
sub
nop
test
rolb
push
inc
mov
xor
test
and
mov
jl
inc
push
sub
int3
cmp
mov
nop
loopne
push
ljmp
in
xor
lcall
lret
dec
or
inc
xor
pop
pusha
fsubl
xor
add
push
loopne
inc
addb
push
addb
and
jp
mov
stos
and
adc
mov
cwtl
dec
or
and
lret
push
mov
lcall
andl
and
add
or
or
rcl
push
or
pop
rcl
or
stos
cmp
nop
les
add
jae
mov
xlat
or
pushf
add
addl
pop
test
xor
add
out
lret
mov
fcoms
fs
push
push
jo
or
push
in
ljmp
jp
test
add
fdivr
mov
push
push
inc
enter
and
out
stos
ror
pop
sbb
stos
inc
cmp
loop
xor
clc
add
cmpb
test
sub
adc
push
loopne
xchg
fidivs
dec
enter
cmp
push
lret
push
sbbl
test
lods
fdivl
and
add
roll
mov
inc
add
dec
sub
out
testb
es
cmp
adc
bound
fcoml
cwtl
inc
xor
cmp
xor
test
push
push
xchg
movsb
mov
dec
push
nop
fdivrs
mov
push
hlt
mov
rorl
adc
sub
inc
cmpsb
add
faddl
or
sub
jo
push
jne
mov
fidivs
inc
nop
and
adc
xchg
or
push
and
stos
xor
xchg
repnz
mov
les
xchg
add
cmp
add
shlb
push
inc
subl
pusha
inc
je
pusha
xchg
push
add
xor
add
popa
mov
insb
cmp
nop
push
xchg
xchg
ret
into
mov
xor
inc
decb
and
push
in
add
jo
cmp
stos
and
jo
inc
sbb
outsb
cli
add
fiaddl
or
fcompl
inc
sbb
bound
mov
mov
push
or
sbb
mov
pop
mov
add
dec
inc
add
adc
movsb
cmp
xchg
jmp
ret
orb
rolb
jo
out
push
cwtl
adc
push
aam
xor
scas
add
or
cmp
popa
xchg
rcll
add
and
leave
in
xor
je
daa
sbb
inc
movsb
lret
push
add
inc
inc
and
push
cmp
mov
cmp
mov
sbbb
and
inc
insb
and
rorb
xchg
rclb
or
and
mov
inc
push
insb
adc
dec
push
cmp
inc
xor
out
inc
cs
aam
xor
sbb
push
repnz
je
xor
es
jle
jo
imul
inc
add
cmpb
mov
jo
addb
xchg
inc
aam
xchg
enter
add
fs
push
call
push
pop
add
shlb
mov
xchg
adc
xor
mov
xchg
xchg
push
sbb
jl
cmp
and
fdivrl
push
sub
dec
sub
mov
test
shlb
mov
and
divb
nop
inc
repnz
stos
pop
das
adc
sbb
fs
push
adc
inc
cltd
shrl
xor
cmp
out
xor
nop
push
add
sbb
out
add
push
shlb
loopne
adc
push
repnz
je
aam
push
add
adc
add
push
xor
or
push
pushf
or
mov
aad
or
nop
outsb
sub
add
xchg
push
adc
and
mov
pusha
xchg
in
ljmp
adc
or
faddl
jb
inc
xchg
in
or
test
and
fiaddl
xor
nop
add
push
sub
xor
inc
jo
or
addl
or
cmp
mov
stos
inc
sbb
sbb
ljmp
sub
pusha
int
xchg
mov
adc
rorl
add
inc
add
mov
shlb
sbb
int3
or
xor
out
jo
push
add
sbb
rcrb
pusha
xchg
movsb
add
cmpl
sbb
dec
lods
mov
and
cmp
imul
inc
es
pop
dec
pusha
dec
scas
andl
inc
xor
xor
testb
or
mov
les
and
xchg
inc
jno
jo
mov
sbb
adc
cs
addl
xor
cmp
cs
notb
push
inc
inc
push
cmp
cs
inc
sub
fiaddl
js
add
test
enter
mov
mov
add
in
lcall
ss
and
pop
cmpsb
dec
dec
add
mov
add
or
pop
xchg
mov
shrd
xchg
adc
data16
inc
and
mov
rclb
push
loopne
fiaddl
cmp
jo
addl
mov
pusha
xlat
cmp
add
ljmp
sbb
or
jo
sbb
push
or
mov
push
outsb
adc
adc
mov
sbb
push
xchg
or
addl
shlb
loopne
ror
and
andb
cltd
inc
insb
addb
mov
int3
jle
pop
inc
cwtl
jecxz
add
imul
push
cmp
sbb
cmp
inc
or
add
sub
sub
jmp
xchg
sbb
test
cmpsb
adc
push
mov
loopne
dec
lds
pop
inc
cwtl
xor
dec
jno
ret
mov
cmpb
shrb
rolb
int3
lea
dec
push
push
add
sbbl
sbb
mov
adc
inc
cwtl
and
mov
aam
fs
xchg
pop
mov
andb
cmp
adc
lcall
mov
add
movl
aad
dec
or
pop
jbe
inc
xor
push
xorb
inc
loop
cwtl
insb
add
shlb
push
imul
mov
add
sbb
inc
pop
push
adc
mov
jo
fsubrs
cmp
sbb
add
xchg
dec
dec
and
add
push
and
bound
test
mov
es
outsb
or
push
gs
jbe
adcl
andl
adc
test
sbb
adc
add
shl
sbb
dec
mov
adc
push
pop
into
push
push
inc
add
xchg
jle
or
pop
mov
inc
and
inc
test
push
xchg
repnz
addl
and
out
mov
mov
pusha
xor
push
shlb
mov
and
and
stos
add
cwtl
add
push
adc
dec
clc
shrb
dec
cwtl
add
fsubrp
inc
or
insb
sbb
mov
and
out
inc
mov
jo
inc
sbb
or
dec
je
add
sahf
or
loopne
and
sbbb
sbb
push
dec
push
sub
rcl
jo
push
and
sub
movsl
xor
inc
push
inc
sub
sub
dec
push
movsb
cmp
repnz
add
ljmp
movsb
testb
and
or
jle
pop
orl
sbb
or
or
add
nop
add
mov
loopne
bound
loopne
pop
xor
sahf
mov
xor
nop
xchg
add
jle
popa
shlb
mov
les
cmp
fcoms
adc
and
adc
push
int3
xor
and
lcall
push
push
loopne
nop
dec
imul
sbb
xor
inc
push
push
cmpsl
push
cs
inc
inc
or
and
xor
pop
filds
stos
mov
test
or
pushw
and
and
dec
scas
data16
pop
inc
sub
test
cmpsb
add
adc
test
or
push
inc
push
or
stos
mov
test
sub
mov
ficoml
cmp
or
adc
or
ret
dec
popa
clc
mov
inc
inc
xchg
sbb
pop
outsb
sbb
mov
push
dec
adc
mov
push
or
inc
xchg
push
sbb
xor
loopne
data16
loopne
jl
mov
sbb
jb
loop
mov
jo
sbb
sbb
fiadds
add
adc
cmp
andl
pop
test
orb
idivb
adcl
mov
adc
push
es
add
js
inc
adc
inc
je
pusha
mov
push
or
enter
or
clc
sbb
xchg
movsb
or
push
sub
and
jb
mov
bound
pusha
sub
cmpl
rcrl
and
scas
nop
insb
jne
push
call
call
cwtl
mov
scas
rcrb
rolb
xchg
push
add
ds
push
test
and
sub
mov
imul
fiadds
int3
push
call
sbb
pushf
js
rolb
dec
mov
notb
fildl
lods
test
data16
inc
push
ret
ret
or
pop
sub
in
or
push
xchg
inc
sub
les
cmpsb
enter
mov
add
cltd
add
rorl
push
xor
cmp
add
inc
push
mov
cmpl
mov
pusha
int
clc
add
sub
mov
xchg
cmp
pushf
orb
in
andl
push
pop
adc
add
xchg
shlb
xor
test
push
xor
add
pusha
xchg
stos
or
repnz
cmpl
rolb
push
cs
int
in
test
subl
or
shr
fcoms
es
movsb
mov
lcall
or
cmpsb
out
xchg
dec
and
ljmp
dec
push
adc
cs
xor
fisubl
les
jmp
test
pushf
push
mov
add
nop
andl
cwtl
dec
and
mov
sbb
ret
or
mov
inc
mov
push
jle
push
add
dec
or
push
inc
cmp
and
cs
pusha
test
add
popa
dec
pusha
adc
mov
add
jo
shlb
jb
mov
call
sub
int
mov
call
es
add
or
jo
cld
add
dec
loopne
adc
fsubrl
inc
in
push
ret
sub
inc
les
in
je
mov
adc
notb
fidivrs
js
xor
mov
add
push
orl
mov
push
xchg
dec
xchg
or
cmp
add
mov
repnz
mov
add
add
mov
lods
inc
gs
outsb
push
add
enter
inc
rorb
shlb
and
inc
adcl
add
aad
inc
or
or
out
stos
adc
call
gs
stos
push
push
in
cli
cmp
push
adc
xchg
movb
push
jo
in
sbb
xor
push
xchg
test
push
inc
sub
hlt
xchg
dec
inc
jb
decl
out
and
in
adc
jo
pop
ret
sub
or
movsl
pop
mov
repnz
and
xchg
or
ljmp
jp
bndstx
pop
rolb
add
test
or
cs
cmp
faddl
xor
and
cmpsb
cmp
sbbb
lret
mov
andl
xor
mov
or
ret
ss
mov
jo
xor
push
add
add
xchg
loopne
inc
and
nop
and
xor
push
or
xor
mov
fadds
mov
addb
cli
xorb
test
outsb
and
inc
jo
mov
hlt
cmpsb
les
dec
sub
repnz
xchg
inc
mov
pusha
les
push
and
push
push
loope
bound
mov
inc
pop
sub
inc
data16
mov
adc
dec
or
xor
outsb
inc
or
xchg
fcoms
cmp
mov
sub
ja
shll
push
mov
and
and
xchg
rorl
jb
mov
dec
xor
pop
inc
sub
inc
es
mov
rolb
jl
add
inc
inc
cwtl
pusha
add
sbb
add
mov
adc
jo
stos
test
mov
pushf
andb
pop
xor
pusha
adc
and
push
xchg
ret
and
mov
xorl
lret
dec
mov
ret
in
insb
add
xchg
mov
fisubl
cltd
add
fsubrl
and
pop
or
xor
inc
inc
sub
or
jo
fs
rorb
cwtl
ds
movsb
xor
adc
dec
in
or
mov
lock
mov
nop
jb
fdivl
dec
add
jo
sbb
inc
sbb
int3
and
or
or
cmpsb
add
lcall
fsubrs
adc
or
sarl
pop
xor
loop
add
jbe
and
sub
or
in
xchg
test
add
inc
out
hlt
xchg
lret
shlb
add
or
je
jo
inc
or
mov
push
cwtl
sbb
add
je
pop
cmp
test
adc
xor
push
addb
or
cmp
mov
adc
cmp
adc
and
or
xchg
jp
mov
mov
inc
mov
ljmp
pop
pusha
inc
jae
loopne
or
sbb
clc
mov
loopne
int3
cli
and
test
jb
jno
xor
mov
mov
xor
push
adc
sub
add
add
add
dec
mov
push
add
lret
ss
sbb
es
push
fadds
or
or
xor
inc
add
loop
aam
mov
ljmp
pop
push
andb
jl
and
cmp
cld
or
adc
and
ljmp
xchg
test
test
dec
cwtl
es
je
xchg
jo
push
insb
addl
inc
jo
lcall
push
dec
push
sbb
push
mov
addl
cmp
mov
shrb
or
or
dec
add
data16
push
sbb
mov
push
push
lods
push
rolw
push
ret
cs
fmuls
sbb
pop
adc
inc
inc
jl
xchg
int3
out
test
sbb
sub
inc
or
sbb
addb
add
shlb
push
cmp
cmpsl
out
or
test
inc
adc
pusha
jp
sub
sbb
push
fiadds
mov
mov
push
mov
pushf
adc
cld
mov
add
cli
push
mov
adc
fdiv
add
cwtl
fs
jecxz
mov
lret
test
rorl
pop
and
inc
or
insl
add
and
xchg
add
sub
or
sbb
adc
inc
test
rcrb
mov
mov
cmp
jnp
sbbl
ret
fidivrs
pushf
add
xorb
mov
mov
test
clc
pusha
mov
sub
inc
xchg
dec
andb
sahf
rcrb
sub
xchg
shrb
inc
xor
andl
push
xor
and
pop
sub
int3
adc
xchg
push
pushl
xor
add
ljmp
push
push
bound
jb
clc
loop
and
sub
inc
cmp
ljmp
hlt
orb
jo
popa
jb
cld
push
ret
movsl
xchg
pop
addb
mov
inc
and
adc
pop
in
inc
cwtl
cwtl
push
mov
and
add
stos
inc
rcrb
sub
lods
xchg
subl
jo
nop
imul
add
clc
rolb
pusha
in
add
dec
inc
xor
xor
jl
enter
xchg
mov
cmpl
sbbl
dec
mov
insl
xor
cmp
enter
and
pop
loopne
dec
add
into
nop
jb
cs
jb
cmp
daa
mov
stos
or
fs
xor
in
dec
ljmp
lock
push
and
addb
inc
jo
xor
mov
jae
inc
fisubs
add
pusha
xor
mov
lods
push
cld
scas
mov
add
add
cs
cmpl
cmpb
lods
or
cmp
mov
jo
test
add
add
adc
les
add
sbbl
push
sub
fs
cmpsb
jl
call
inc
jo
add
push
int3
dec
sbb
movsb
int3
xor
or
addb
lods
add
inc
push
incb
test
push
push
bound
jb
shlb
pop
adc
dec
mov
and
in
inc
data16
pop
mov
je
inc
push
sub
adc
add
push
push
pusha
cmp
xchg
mov
jecxz
pop
add
and
mov
int3
pop
adc
scas
aam
inc
xchg
sbb
faddl
or
mov
mov
push
roll
lcall
cmpsb
lcall
inc
dec
dec
je
pop
jb
xor
xor
call
dec
cmpl
inc
xchg
dec
mov
push
fimull
and
inc
orl
pop
inc
or
push
dec
cmp
test
fimuls
addb
mov
sbb
test
cld
mov
push
sbbb
insb
adc
popa
andb
addl
sbb
or
jb
sub
add
push
add
lcall
mov
movsb
stos
adc
adc
lret
cwtl
repnz
push
xor
mov
mov
cmp
or
in
jo
and
or
nop
dec
test
mov
sbb
mov
push
push
add
add
xchg
inc
add
ljmp
je
xchg
fsubrp
inc
push
test
xor
dec
mov
dec
jbe
or
sub
dec
dec
jle
pop
jle
dec
xor
add
and
lods
sbb
aam
sahf
pop
add
xor
cs
dec
movsb
xchg
adc
lock
cmp
sub
dec
test
sbb
hlt
push
pop
inc
decl
add
andb
test
push
push
jne
insb
adc
pop
rclb
insb
out
fimull
data16
jo
lcall
and
xchg
dec
test
lret
sub
inc
xchg
add
loope
pushf
test
aam
adc
popa
aam
andb
enter
xor
or
push
push
or
xor
cwtl
lret
cs
fs
loopne
into
or
and
hlt
cli
test
mov
or
xor
push
daa
andl
mov
and
add
hlt
xor
mov
shrb
pop
xchg
and
mov
ljmp
or
shlb
push
adc
ficoms
add
js
cld
cmp
pop
push
adc
sbb
dec
and
movsb
add
roll
dec
push
sub
loopne
xchg
pusha
inc
pop
test
rcll
xchg
jo
mov
or
les
test
loopne
mov
aaa
popa
push
mov
sbb
out
jl
inc
data16
add
push
or
push
sub
shlb
repnz
out
add
sub
adc
mov
test
add
clc
xor
add
mov
xchg
cmp
xor
xchg
inc
js
sbb
jae,pn
stos
fidivl
dec
test
fdivl
xor
inc
loop
xorb
xor
sub
or
xchg
jb
mov
adc
jno
rolb
adc
add
incl
push
cmp
xchg
push
inc
add
adc
add
adc
cmp
les
or
push
xor
xchg
orb
xchg
adc
sbb
push
or
xchg
push
dec
popa
push
jp
ficoms
je
test
stos
je
addl
out
jo
sbb
ret
xor
and
add
jmp
add
jp
sbb
sub
cmp
push
dec
pusha
xor
jl
push
sbb
or
lcall
mov
push
or
or
cmpsb
test
mov
test
mov
or
push
add
fstps
add
push
xchg
push
jo
push
add
mov
push
mov
mov
test
or
and
ret
cmpb
les
or
lods
or
into
cmp
test
mov
js
xor
sbb
inc
xchg
add
scas
xor
ret
daa
and
inc
fiadds
leave
test
out
pop
or
lock
out
js
sbb
xchg
inc
ficompl
sbb
jp
push
push
orb
pop
subl
xchg
loopne
and
mov
push
xor
mov
and
dec
addl
mov
test
aaa
adc
dec
xchg
les
cwtl
pop
sub
xor
jo
and
push
dec
es
xchg
adc
inc
sub
lcall
push
mov
adc
shlb
outsb
cmp
adc
mov
adc
xchg
xchg
ror
loop
jb
dec
add
out
mov
xor
push
or
mov
or
mov
outsb
or
aad
cmp
push
xchg
enter
xchg
pusha
mov
in
push
push
orb
or
cli
pop
out
pusha
adc
fs
and
xchg
es
loopne
js
dec
ret
or
insb
add
add
enter
in
rcl
test
loop
push
enter
xchg
jb
add
repnz
inc
or
push
add
cmpsb
lods
and
adc
pop
mov
mov
or
mov
data16
loope
and
popa
scas
or
pop
add
shlb
clc
insb
jle
push
add
rcll
inc
mov
cmp
sbb
add
insb
pop
add
test
push
inc
test
shlb
mov
bound
push
ret
out
sbb
andl
mov
inc
dec
test
push
lods
sub
mov
addb
pop
and
add
or
inc
fs
test
ret
fsubrl
adcl
add
test
movsb
fs
jbe
inc
push
pop
xchg
addb
test
shrb
xorb
inc
imul
push
sbb
mov
rolb
xor
leave
xor
dec
dec
jp
and
xchg
andb
xchg
repnz
cmp
int3
xor
push
jbe
inc
inc
push
xchg
insb
push
dec
je
pop
adc
ficoml
loop
inc
sbb
loopne
ss
cmp
push
and
test
cltd
xor
sub
shl
adc
mov
cwtl
ret
and
mov
aam
or
sbb
orb
dec
add
add
bound
dec
subb
or
xchg
cmp
add
insl
mov
xchg
adc
add
push
cmp
and
adc
in
pop
push
dec
and
adc
adc
add
jbe
sub
ret
add
lret
jo
mov
mov
push
into
shlb
orl
pop
cs
xchg
adcl
mov
xchg
xor
add
cli
mov
push
sbb
sbb
mov
sbb
cmpl
and
es
mov
xchg
push
je
sub
lock
and
dec
stos
rolb
ret
pop
lret
aam
sbb
jnp
sbb
jo
scas
test
sub
mov
dec
push
ret
or
add
rorb
fmuls
add
lret
loope
pop
push
mov
rorb
cli
and
mov
je
ficoms
int3
add
aaa
push
lret
pop
repnz
ret
inc
xor
push
inc
sub
add
movsb
hlt
cwtl
or
fldt
shr
xor
dec
and
dec
test
dec
jle
sub
push
mov
inc
pusha
orb
nop
jo
loopne
orl
cltd
xorl
mov
jno
push
enter
dec
add
loope
lret
sbb
inc
add
xor
pop
enter
mov
sbb
sbb
es
mov
adc
sbb
inc
movsb
and
fs
jo
loop
addr16
add
inc
cli
pusha
inc
shlb
addb
pop
shl
test
call
enter
or
mov
jp
xor
push
push
or
adc
dec
jle
in
les
xor
xchg
loope
xor
insb
les
fadds
inc
movups
mov
jo
cmpsl
inc
addl
inc
dec
add
sbb
test
pushf
call
mov
fs
loop
add
ret
enter
mov
sbb
add
xchg
cltd
xchg
or
popa
adcb
rolb
adc
es
jp
sbb
pusha
aam
adc
ret
test
mov
adc
enter
and
in
and
add
pop
xchg
insb
js
adc
leave
xor
jp
mov
adc
pop
loopne
or
dec
and
sbb
nop
rcrb
cmpsb
loop,pt
add
xor
or
int3
shlb
addl
add
cmp
lcall
or
xor
sub
movsb
sbb
rcrb
jbe
inc
movsb
xchg
stos
ljmp
mov
xor
cwtl
and
pusha
push
dec
push
inc
push
xchg
fidivs
xor
push
popf
sbb
ljmp
cmp
inc
push
adc
inc
in
cwtl
xor
and
ret
sbb
add
push
xchg
push
xchg
or
pusha
jp
andb
mov
cs
jae
rclb
adc
fiadds
ss
or
dec
push
mov
sub
jbe
jae
push
push
fsubrl
xchg
push
push
dec
ljmp
pop
stos
lds
enter
sbb
or
adc
push
shlb
int3
in
enter
or
sbbl
jo
add
push
mov
xor
dec
pop
sub
out
or
and
cmp
mov
adc
push
ss
xchg
dec
sub
lret
sub
mov
push
mov
add
mov
jae
ss
mov
mov
add
sbb
jbe
andb
lret
cmpsb
and
fdivrs
movsl
or
stos
push
test
xor
add
add
push
test
and
adc
push
lcall
add
xor
xchg
aam
xor
push
jo
mov
push
inc
and
push
and
addl
bnd
aam
jp
mov
jp
jo
enter
repnz
popa
orb
mov
sbb
add
and
or
inc
scas
call
mov
sbb
insb
and
xor
inc
adc
add
lods
mov
mov
inc
add
pop
fs
xor
pop
push
adc
push
add
lret
dec
test
xchg
sub
xor
or
shl
adc
es
xor
ljmp
add
cs
out
and
adc
or
sub
xchg
sub
mov
inc
push
dec
inc
mov
addl
lods
inc
fimuls
sbb
xor
inc
js
xlat
mov
loopne
adc
sbb
push
or
into
cmpb
and
add
push
pusha
js
cltd
stos
adcb
in
adc
andl
or
mov
scas
out
cmp
es
outsb
loope
inc
cli
into
sbb
add
dec
cwtl
lods
enter
aam
and
scas
lods
adc
or
inc
jo
rolb
test
stos
and
adc
or
adc
pop
popa
push
cwtl
lcall
add
dec
or
push
dec
and
dec
and
loope
jle,pt
mov
adc
sub
cmp
add
js
test
test
loopne
push
jp
adc
lret
sub
sub
or
xor
add
sub
cmp
jecxz
or
jo
sbb
int3
dec
nop
push
push
call
test
dec
rcr
cmp
popa
ss
pushw
cwtl
bound
leave
js
mov
xchg
push
add
lods
jle
pop
movsb
mov
test
mov
pushf
orb
xor
jl
xor
and
jno
add
mov
or
sub
sarb
pop
loopne
and
pop
nop
sbb
loopne
cmp
and
dec
je
xor
push
inc
inc
cmp
xchg
dec
xor
andl
fisubl
sbb
inc
add
fimull
adcl
sbbl
cltd
pop
inc
js
sbb
ds
nop
in
inc
int3
nop
push
adc
push
insb
mov
into
xorl
lea
pop
push
mov
sub
rolb
dec
sub
bound
push
loopne
and
leave
mov
jb
jp
xchg
lock
cmp
xchg
or
and
cmpsb
push
jp
sti
test
add
and
or
or
push
lods
je
dec
jb
jle
xor
and
mov
fcom
add
mov
or
add
mov
sbb
rolb
outsb
incb
mov
faddl
push
clts
ds
fsubrl
sbb
adc
sub
orl
test
inc
sub
adc
add
xchg
int3
into
pop
push
repnz
dec
loopne
push
fidivs
mov
adc
adc
sbb
push
pushf
je
and
nop
xchg
dec
testl
dec
mov
push
cwtl
or
pop
xchg
pusha
push
subl
jp
dec
or
push
imul
or
xchg
dec
and
in
js
pop
and
mov
sbb
loop
inc
js
add
sbb
gs
faddl
fmull
es
inc
mov
in
into
push
fiadds
push
sbb
data16
push
cltd
and
sbb
cwtl
fcom
adc
and
cltd
xchg
jbe
pusha
and
sbb
es
dec
dec
xor
sbb
push
or
jp
pop
cltd
loope
cmpsb
negb
sub
xchg
xor
cmc
inc
sbb
or
ss
cwtl
and
xor
xor
cmp
jl
xchg
and
jb
or
fs
and
mov
add
lret
xor
cmp
clc
add
adc
mov
inc
dec
adc
andb
push
and
fmull
cmp
and
test
cmp
pop
push
add
hlt
add
dec
and
or
and
adc
fsubl
xor
add
push
testb
push
pop
hlt
test
nop
add
xor
in
adc
and
push
or
lods
push
bound
xchg
add
inc
test
add
sub
and
scas
push
dec
cli
cwtl
dec
push
push
rcl
inc
adc
xchg
push
sbbb
xchg
pusha
stos
out
hlt
add
and
pushf
push
mov
mov
adc
inc
mov
or
inc
and
pushf
call
addb
inc
or
nop
adc
xchg
loope
push
mov
into
inc
or
xchg
mov
mov
adc
cmp
inc
jo
sub
xor
loopne
cmp
pusha
sub
mov
sub
push
je
fisubl
loopne
cmp
rcll
ficompl
add
xchg
cwtl
loop
jo
sbb
lret
dec
push
cltd
in
outsb
push
jl
je
test
test
shrb
add
cmp
ret
ret
cwtl
jl
xor
sbb
xor
leave
inc
mov
mov
push
sub
mov
jo
jo
inc
or
notb
inc
fmul
push
xor
mov
add
or
dec
or
mov
nop
jb
sub
adc
out
push
add
gs
dec
add
ljmp
rorb
enter
inc
and
and
sub
cs
mov
idiv
push
sbb
je
xchg
xor
sbb
shlb
add
inc
fidivl
inc
add
inc
xchg
lods
movsb
jl
clc
push
xor
js
inc
out
andl
adc
xchg
inc
sbb
nop
cmp
mov
cltd
test
dec
push
add
and
xchg
inc
inc
or
int3
push
rcrb
es
shlb
sbb
xor
push
adc
add
xchg
scas
in
sbb
adc
xor
push
and
sub
insb
testb
aam
and
cli
pop
fs
xor
in
es
inc
push
ss
push
add
and
or
jp
mov
push
mov
xchg
fs
or
push
jb
mov
xchg
mov
xchg
jo
pop
pop
dec
imul
push
inc
xorl
mov
mov
sbb
jo
push
xor
sbb
push
mov
fs
push
mov
xchg
adc
push
and
pop
mov
ret
rolb
inc
cwtl
pop
sub
add
inc
xchg
shr
add
loopne
mov
jb
pop
jbe
and
lods
inc
add
push
add
mov
inc
xor
adc
sbb
cmpsb
push
rorl
add
movsb
xor
outsb
je
sub
mov
push
dec
add
shll
mov
mov
repnz
dec
push
insb
inc
nop
sub
jne
and
pop
xor
and
push
jo
inc
push
subl
add
inc
push
nop
lret
inc
pushf
hlt
inc
add
add
push
cmpsb
mov
aam
xor
ss
and
cmpsb
pop
nop
jbe
add
lock
pop
dec
mov
pushf
sbbb
adc
rolb
mov
mov
mov
test
adcl
inc
int3
test
push
lods
hlt
cmp
mov
adc
sbb
push
adc
and
dec
pop
out
add
cli
mov
push
movsb
adc
je
test
pop
and
add
movb
xor
jle
dec
push
xor
push
mov
lock
add
mov
mov
or
sub
xchg
rclb
add
scas
jo
shll
or
push
addl
xor
mov
mov
mov
pushf
outsb
mov
adc
push
mov
add
loop
rclb
jo
mov
clc
in
dec
mov
sbbl
jb
sbb
mov
sbb
xchg
nop
dec
sbb
and
test
adc
pusha
push
mov
push
sub
add
mov
xor
xor
incl
cmp
xor
sub
jb
scas
fimull
push
mov
adc
jbe
cmpsb
adc
and
push
mov
cmp
adc
cld
cmpsb
push
daa
mov
loopne
or
adc
stos
jo
sub
mov
jl
lds
add
inc
pop
lock
sbb
jle
add
adc
push
sub
test
xchg
dec
outsb
mov
mov
sub
xchg
pusha
xor
add
inc
cmp
push
sub
jb
or
cltd
jne
xor
sti
popa
xor
loop
loopne
jle
add
push
sub
mov
shrb
push
push
cs
mov
mov
pop
sahf
push
and
loopne
int3
outsb
inc
bound
sbb
mov
mov
jo
cmp
rclb
movsb
data16
sbb
and
lods
addl
sbb
fidivs
inc
shll
pusha
scas
es
fcoms
ljmp
pop
xchg
aam
addl
int3
test
sbb
jbe
bound
jbe
inc
pop
adc
cltd
add
xor
dec
and
adc
push
mov
xchg
and
shl
adc
adcb
jo
add
sub
inc
mov
mov
ds
dec
mov
shrb
dec
popa
adc
js
xor
xchg
mov
xor
push
sahf
push
into
mov
ret
inc
orl
inc
or
int3
dec
add
sbbb
popa
push
mov
jo
aad
jb
add
or
and
pushaw
lods
outsb
call
mov
rorb
push
and
xor
cmpsl
push
cmp
add
loope
sub
jl
pushf
adc
incb
dec
test
sbb
nop
pop
cmpsb
dec
je
push
test
cltd
icebp
pop
and
adc
jo
add
xchg
xor
mov
inc
sbbl
sbb
shrl
pop
and
push
data16
sbb
scas
mov
inc
inc
jne
add
dec
mov
loopne
clc
cwtl
test
push
push
add
jo
mov
xchg
dec
or
cmp
orl
sbb
or
mov
push
je
lods
mov
cmp
add
push
arpl
lock
incb
cwtl
adc
adcb
cld
push
mov
mov
cmc
mov
sahf
in
add
sub
rol
ret
or
push
movsl
add
add
and
sbb
mov
push
clc
test
or
mov
xchg
sbb
add
pop
nop
sbb
jle
cmp
stos
loopne
mov
and
enter
dec
outsb
push
mov
int3
nop
out
out
mov
insb
push
adc
push
cs
in
xchg
xchg
cmp
test
lret
je
xchg
adc
sbb
movsb
orb
pusha
adc
push
xchg
fdivs
dec
xor
pushaw
in
cwtl
xabort
andl
add
jp
sub
rolb
push
out
pop
je
dec
ret
add
and
adc
dec
add
adc
mov
not
jo
test
icebp
inc
sbb
loopne
ljmp
pop
cwtl
lret
ds
test
mov
push
imul
cmp
mov
fiadds
clc
dec
add
sub
add
in
mov
pop
mov
add
dec
or
jb
pop
push
push
mov
mov
fildl
push
dec
inc
dec
sub
inc
leave
ret
push
add
pop
sti
fildl
dec
ss
add
fisttps
add
add
lea
push
pushl
add
call
or
leave
ret
mov
jnp
dec
add
fs
dec
push
mov
push
push
add
add
push
loopne
lahf
sbb
push
call
outsb
rorl
fldenv
sub
inc
cmpsb
stc
sub
inc
push
mov
sbb
lret
pop
add
rclb
sbb
decl
sub
inc
mov
add
inc
dec
lock
out
inc
mov
movsb
ret
push
pop
jns
int3
addr16
add
push
lea
push
mov
out
pop
xor
mov
sub
inc
int3
lock
int3
incb
sti
out
pusha
add
inc
dec
sar
cltd
lcall
arpl
inc
outsb
push
arpl
test
xor
push
mov
outsl
inc
push
mov
dec
js
cld
fwait
mov
dec
fadds
pop
lds
cs
mov
add
inc
mov
decl
pop
cmp
sub
sub
mov
sbb
xor
dec
push
dec
ds
jge
xlat
push
or
xor
data16
add
dec
fcomp
fidivs
inc
dec
jbe
dec
push
push
dec
mov
pop
push
mov
inc
push
addr16
leave
mov
jo
jg
cli
dec
decl
jne
xchg
pop
inc
insb
je
mov
orl
insl
je
add
movb
lret
ret
mov
addr16
out
dec
push
xor
out
mov
fadd
jae
sbb
ds
mov
cld
jbe
rcll
decb
mov
shl
cwtl
inc
push
jbe
pop
xor
fiaddl
xor
lret
xor
pop
ja
push
rclb
push
cld
push
push
xchg
pop
scas
jge
pusha
add
inc
mov
dec
insb
mov
cmp
pushf
dec
stos
push
mov
push
push
xchg
mov
add
sub
ror
dec
ds
xor
push
push
pop
dec
cmp
xor
push
mov
test
pop
insl
jne
mov
dec
add
dec
xor
call
add
lods
mov
sahf
add
movsl
pop
ret
sub
or
xor
icebp
mov
xor
sub
in
movsb
data16
aaa
push
pandn
mov
mov
notl
outsb
mov
lahf
cli
rorb
nop
xchg
inc
popa
jb
fbstp
add
pop
and
inc
loope
pop
fmull
fidivrs
push
jbe
add
jo
xor
dec
js
ret
popa
jo
cmc
pusha
imul
push
imul
dec
adc
add
mov
add
push
jge
mov
mov
push
arpl
inc
nop
dec
cmp
pop
cmp
stos
js
jne
insl
into
into
push
pop
js
push
push
push
mov
xor
mov
lret
lcall
icebp
loop
fs
js
enter
hlt
cmpsl
aas
cld
jb
xor
inc
dec
icebp
ret
inc
jns
fiadds
push
inc
push
ljmp
stc
dec
ljmp
outsl
out
dec
lret
sub
gs
sbb
push
lock
xor
mov
ss
ret
clc
clc
adc
mov
push
inc
dec
inc
aaa
mov
ret
aas
push
ljmp
shrb
test
dec
sbb
jae
add
xchg
mov
inc
inc
fs
out
push
imul
jnp
iret
sbb
dec
dec
sbb
imul
setnp
mov
out
ss
pushf
add
push
popa
dec
inc
inc
mov
jmp
mov
ss
cmp
iret
xor
fwait
mov
dec
inc
xor
pop
sub
jb
call
dec
dec
test
inc
pop
int
pusha
test
jo
imul
addb
jbe
inc
outsl
rol
add
pop
fsubrs
push
cli
ds
pushl
or
hlt
cld
jl
dec
stc
ja
ja
sub
mov
std
ja
repnz
jae
ja
or
ja
sbb
in
out
in
outsb
or
es
cmp
movsl
sub
and
ja
mov
sub
dec
jg
out
incl
pop
jae
mov
xchg
pop
je
adc
neg
std
out
push
ja
daa
roll
cmc
ja
adc
ja
ja
jb
jne
adc
divb
inc
and
shlb
and
in
filds
and
add
mov
jnp
and
fnstsw
and
xor
ja
cmp
or
pop
pushw
push
dec
pushf
js
nop
ss
inc
ja
ja
ja
cmp
ja
xor
or
mov
rep
repz
into
ja
xchg
imul
cs
pushf
out
pop
adc
movb
adc
mov
and
or
or
fs
adc
loop
jle
pushl
sbb
push
aas
add
aas
mov
push
pop
pop
ja
xchg
jg
mov
cmpsl
and
mov
fidivrs
clc
ja
adc
mov
inc
and
sbb
push
testl
xchg
call
ja
push
and
fisttpll
mov
jl
xor
jp
or
jp
movsb
mov
fbld
js
outsl
ja
mov
ja
fwait
sub
pop
sarl
adc
xchg
fnstsw
or
es
iret
sbb
ret
dec
or
xchg
cmp
xchg
mov
push
xchg
rcrb
xor
imul
dec
push
adc
add
adc
pop
mov
fsubrs
cmpsl
mov
adc
fwait
shl
pusha
ja
ljmp
xor
mov
add
call
mov
js
cld
std
aam
shlb
sub
pop
leave
ss
add
sub
mov
pusha
imul
mov
xchg
movsl
xchg
test
shlb
pop
fsub
cld
mov
add
js
loop
and
jg
rcrl
sbb
pop
mov
adcl
inc
idiv
push
fmuls
push
test
sbb
int
lock
add
mov
icebp
sahf
and
push
ret
into
sub
aam
cmp
lcall
ja
test
shl
jb
lcall
jbe
sub
pop
push
std
push
sarb
jnp
test
scas
sub
xchg
push
iret
jbe
xorb
pop
pop
sbb
inc
das
pop
adc
rorb
cli
adc
imul
scas
fsubrs
sbb
cwtl
push
daa
add
push
sahf
lcall
cltd
in
and
nop
loope
mov
or
popa
dec
mov
xchg
outsl
add
pushl
inc
or
outsb
scas
fidivrl
cmpsb
xchg
and
outsl
in
loop
and
cld
repnz
aas
add
lret
loopne
cmp
jle
out
sbb
je
imul
int
pop
pop
mov
xchg
cwtl
loopne
stos
adc
pop
test
int
sub
adc
lcall
sbb
mov
mov
adc
mov
lahf
enter
xor
pop
ss
lds
clc
cli
sub
jbe
cwtl
rcrl
inc
icebp
jbe
sub
inc
pusha
adc
ret
xchg
mov
subl
je
mov
xchg
dec
adc
loope
sbb
pop
dec
mov
or
out
insb
xor
xchg
loope
idiv
and
cld
xchg
shl
add
sarb
mov
sbb
xor
sub
in
neg
xchg
mov
mov
std
stos
and
or
sub
push
jge
in
orb
push
insb
jae
jno
or
pop
push
ja
mov
xor
jb
sbbb
adc
sbb
sub
pop
hlt
xlat
rcrb
or
or
daa
pop
xchg
clc
add
add
inc
mov
fwait
cmp
ja
clc
mov
mov
add
dec
adc
fwait
test
inc
cmpsl
addr16
push
sbb
cmp
cmc
cli
fst
ja
cmp
inc
mov
push
insb
sbbb
ja
mov
ret
aad
ja
mov
cmpsl
outsb
and
in
cmp
pop
movsl
mov
add
int3
add
out
jle
ja
jae
andl
xchg
add
stc
inc
in
nop
inc
mov
mov
adc
mov
push
subl
rolb
sub
into
insl
in
outsb
mov
push
adc
lock
mov
mov
clc
test
movsl
add
shr
lock
hlt
jg
push
out
ret
into
aam
bound
test
rep
or
sub
add
pop
std
lahf
or
add
push
inc
cmp
fstpl
mov
mov
push
ds
sub
jno
iret
xor
imul
mov
push
xor
push
filds
jg
popa
add
mov
and
ja
cwtl
pop
mov
call
xor
ds
jo
push
call
test
mov
scas
js
jecxz
or
mov
call
or
fmulp
ja
movsl
mov
add
cmp
add
int
scas
mulb
pop
je
mov
rorl
pop
fiaddl
xor
mov
jmp
out
inc
sbbl
lcall
sub
sbb
nop
mov
scas
lods
loopne
jnp
clc
cmp
fwait
pushl
cmp
ja
mov
mov
js
cmp
adc
outsb
cld
pop
mov
scas
rorb
out
sbb
roll
scas
inc
jl
jb
test
inc
xchg
mov
test
and
shl
inc
inc
push
mov
rcr
out
cmpsb
shrb
sub
add
mov
call
shr
sbb
push
mov
inc
sbb
out
pop
ss
or
inc
pop
jl
add
in
movl
mov
stos
dec
xchg
jge
xor
mov
inc
xchg
adc
mov
aam
fidivl
pop
xor
insl
xchg
lahf
rorl
ja
sahf
cmp
pop
jl
bound
add
imul
or
insb
incb
popf
ljmp
in
jmp
scas
push
fst
cmp
push
js
sub
jne
xchg
mov
cmp
cmp
add
icebp
sub
dec
pop
jb
mov
mov
and
xchg
shll
add
pop
lods
sbb
cmp
mov
test
out
mov
or
leave
pop
icebp
xchg
call
loopne
pop
bound
clc
push
stos
mov
cmp
adc
outsl
jl
loopne
jp
ja
mov
je
jge
sbb
ja
dec
add
clc
mov
pop
notl
out
push
std
imul
fcoml
push
test
mov
inc
out
add
dec
adc
faddp
xor
stos
push
sbb
pop
jno
jbe
ret
pop
dec
sbb
dec
jp
orl
cmp
xorl
loopne
outsl
dec
sbb
xor
pop
dec
and
pop
jns
rcll
out
or
jb,pn
mov
insl
xor
add
and
xor
addl
fsubrs
fisttpl
cmp
fidivrs
icebp
incl
divb
jge
nop
test
nop
inc
aam
xchg
out
je
push
adc
addl
sbb
ret
movb
loope
dec
test
push
sub
lock
ja
out
and
mov
pop
test
movsb
jae
mov
fwait
dec
in
ss
rolb
pop
dec
pop
fildll
inc
lea
jg
mov
push
test
out
mov
push
pop
je
rep
dec
mov
es
add
xlat
xchg
sub
stos
push
and
frstor
mov
out
xchg
jge
sbb
mov
ret
add
xchg
or
xchg
imul
adc
je
mov
cmpsl
das
jno
fidivs
push
add
shlb
fiadds
test
push
repnz
pop
icebp
adc
push
flds
inc
and
fidivrs
sbb
lods
jmp
loope
mov
mov
xchg
and
ret
xor
sub
ja
in
jge
fists
out
daa
cmpsb
popf
inc
mov
push
aas
pop
push
out
arpl
lock
jmp
xchg
daa
lret
jl
mov
test
adc
add
push
push
lods
insb
js
rol
push
aaa
data16
xchg
sub
ds
add
out
or
mov
xchg
mov
or
mov
or
mov
sbb
push
push
movsb
sbb
or
mov
inc
rcll
test
xchg
cs
lods
add
mov
aad
xchg
or
sbb
cmp
js
pop
js
or
data16
push
pushf
and
lcall
popf
lds
or
or
mov
mov
xchg
out
xor
lahf
sub
mov
outsl
or
mov
adc
sbb
push
pop
adc
clc
add
sub
lods
or
sti
out
subb
jmp
js
addb
sub
loope
push
xchg
adc
jnp
incl
push
add
in
sbb
aad
fsubs
add
xchg
nop
add
adc
adc
mov
add
push
mov
sbb
icebp
idiv
lock
dec
hlt
sbb
push
sub
or
or
fisttps
adc
fwait
and
xlat
arpl
call
or
cmpb
push
xchg
ret
cmpb
mov
jl
xchg
call
sbb
mov
mov
sbb
push
push
and
and
cmpsl
xor
sub
psubd
loopne
inc
icebp
sarb
data16
and
ror
push
std
mov
js
lcall
fisttps
out
mov
lret
pop
or
mov
adcb
std
stos
out
cmc
mov
nop
jae
fdivr
sbb
das
jbe
into
add
jle
cmp
xchg
insb
xchg
xor
inc
out
rclb
roll
jmp
orb
or
bound
jl
shlb
loopne
ror
mov
sbb
pop
fidivrs
ficompl
call
mov
call
mov
fdivrl
leavew
push
cmp
mov
fdivs
add
pop
in
mov
jp
fmull
push
inc
cs
push
sub
rolb
xrelease
mov
mov
cmp
int3
add
push
mov
mov
sarb
jnp
xchg
inc
sbb
cs
ss
cld
jg
and
push
dec
in
mov
mov
and
shl
std
aas
jp
mov
nop
cmp
jo
negb
jle
sbb
xor
out
mov
adc
sub
xchg
jbe
push
mov
mov
push
in
dec
sub
add
push
or
pop
pusha
cwtl
mov
add
insl
scas
dec
std
ret
fistpll
fsts
dec
cmp
les
mov
push
mov
call
fs
mov
push
movsl
mov
inc
inc
mov
stos
jp
incb
push
dec
out
xor
ja
dec
adc
addr16
daa
jge
addr16
add
in
dec
sub
das
jp
sub
movsl
sub
loop
pop
push
add
dec
push
insl
call
push
sub
lods
and
inc
push
insb
loop
and
aad
xor
pop
jmp
push
dec
push
gs
xchg
cli
shll
fcomps
mov
iret
in
call
and
ret
js
lcall
cld
cmc
jg
add
pop
lret
add
cmpsb
jmp
sar
add
cmp
cmc
cmp
rcrl
sub
sbb
cld
fdivl
adc
pusha
inc
xchg
and
outsb
mov
shrb
xor
hlt
pop
add
push
shlb
lcall
lock
mov
add
stc
sub
cld
mov
repz
push
jl
pop
mov
jae
sbbl
ret
jbe
mov
outsb
push
push
push
ret
mov
test
sbb
mov
decb
ss
js
add
ret
loopne
shl
inc
inc
adc
xchg
push
inc
push
add
mov
pop
jbe
loope
push
inc
mov
fistps
out
push
push
jb
das
je
push
add
add
shr
cmp
jmp
push
add
push
jmp
jae
clc
dec
inc
dec
lods
inc
cmp
fistpll
cmp
jno
jns
push
lea
cli
mov
mov
filds
xchg
gs
ret
inc
push
std
add
jle
sub
shlb
mov
stc
das
mov
dec
dec
dec
rorl
jae
loopne
out
pop
insl
dec
mov
imull
xor
pop
mov
dec
inc
js
inc
pop
add
pushf
inc
xorb
add
add
sbb
ss
fwait
or
inc
rorb
mov
mov
push
clc
dec
pop
dec
xor
aam
dec
push
dec
pop
rorl
dec
mov
enter
fmuls
adc
dec
ds
fisubrs
add
pushf
inc
sarl
insb
jbe
jns
mov
xchg
dec
dec
imul
ret
dec
imul
inc
or
mov
push
push
jl
xor
push
inc
push
add
and
call
inc
dec
mov
repz
jmp
mov
push
pusha
push
in
add
mov
fiadds
jmp
cmp
int
loop
outsb
add
imul
sbb
inc
gs
addr16
add
in
loope
add
xor
mov
push
mov
xor
xchg
mov
popa
xchg
shr
out
lcall
mov
fsubl
push
call
das
rolb
dec
push
je
dec
inc
dec
add
ret
fimuls
push
lahf
and
xor
lock
call
orl
dec
mov
add
mov
jecxz
jbe
push
rep
ss
loopne
insl
lods
mov
aaa
xor
push
insl
and
push
insb
dec
inc
data16
dec
jecxz
pop
add
jne
dec
aam
or
xorb
clc
inc
mov
push
bound
in
push
aaa
push
add
inc
or
loopne
add
sub
sub
in
sub
jb
bound
nop
enter
js
dec
mov
mov
js
mov
clc
loopne
sbb
cmp
gs
je
mov
cmp
clc
inc
push
xor
dec
addr16
imul
das
aaa
add
shlb
fs
lds
push
mov
push
jns
call
ja
push
inc
jno
and
sahf
jb
jne
fs
pop
inc
rcr
mov
jl
fs
push
mov
sbb
popa
cld
mov
push
data16
jp
cmp
inc
in
out
dec
bound
mov
stos
nop
cs
add
push
mov
push
in
xor
cmpsb
or
test
std
sbb
into
pop
rcll
ss
push
push
ficoms
jl
in
repz
clc
mov
cmp
xor
pop
or
add
adc
jne
rorb
neg
jno
add
push
imul
jns
insl
mov
push
lea
push
push
mov
and
xor
push
mov
loop
lret
iret
rclb
lods
inc
nop
gs
aad
decb
pop
mov
inc
push
fs
jl
bound
mov
push
push
lahf
fbld
sbb
out
js
dec
push
popa
arpl
pop
push
dec
dec
pushf
scas
idivl
mov
dec
rcr
xchg
mov
mov
ret
dec
jns
dec
addb
push
jb
inc
lods
mov
decl
or
out
pop
shll
xor
out
fisttps
inc
xor
ds
cmp
hlt
push
int3
inc
or
push
xor
pushf
jp
inc
pusha
add
sub
and
cmp
sub
push
jne
lock
inc
test
mov
dec
out
cld
pop
push
sbb
inc
ja
fildll
fsubs
dec
xor
dec
dec
pop
cwtl
inc
cli
inc
imul
add
pop
lret
ror
mov
add
mov
sub
add
inc
jne
push
jg
push
hlt
push
in
les
mov
shlb
dec
aaa
ret
iret
out
and
testl
or
add
aaa
dec
add
ret
pop
mov
cmp
fadds
dec
clc
push
rclb
mov
push
in
imul
or
sbb
or
inc
inc
dec
xchg
in
jns
push
push
rcr
std
faddp
push
btc
pop
pop
enter
ljmp
sub
je
out
enter
inc
ss
faddl
dec
inc
loopne
js
out
xor
xlat
or
sub
add
dec
dec
pop
xor
push
jbe
sti
into
in
mov
pop
outsl
jo
dec
mov
loopnew
sar
movsb
ret
add
xchg
ljmp
in
pop
sbb
push
cmp
dec
addr16
icebp
ss
inc
cmp
dec
pop
dec
xchg
shlb
sarb
or
cltd
push
loopne
pushf
push
roll
aas
inc
cmp
dec
mov
xor
pusha
adcl
idivb
dec
jmp
mov
and
lock
mov
xor
aaa
jp
xchg
lret
mov
icebp
cmp
dec
testb
jo
clc
dec
push
jmp
add
je
in
movb
lods
ds
push
das
pop
add
imul
dec
aaa
clc
pop
jle
out
xor
inc
dec
sarb
push
filds
idivl
xor
xor
stc
dec
pop
push
jp
shll
adc
ds
ss
jb
pop
jmp
mov
push
bound
jle
lock
fadds
data16
push
jne
call
and
lret
mov
mov
insl
dec
pminub
push
fwait
lock
fcomps
pop
or
imul
lahf
inc
mov
ret
jns
xor
ljmp
pop
cmpsl
stc
jbe
popa
pop
mull
sbb
xor
fs
xor
and
push
push
hlt
fadds
cmpb
data16
push
inc
xchg
cli
pop
inc
ret
mov
add
push
mov
scas
dec
clc
mov
mov
dec
cld
mov
ja
cld
add
adc
add
sub
insb
dec
jge
xchg
mov
shll
movsl
fdivrl
push
shlb
and
fidivrs
stc
test
rdpmc
mov
inc
dec
cltd
and
jns
bound
jecxz
jmp
pop
loopne
lret
fs
mov
testl
or
out
add
push
pusha
xrelease
push
lods
movsl
fcmovne
pop
ret
bound
sub
push
mov
or
cmp
hlt
ds
add
sbb
mov
mov
mov
je
sbbb
clc
and
repnz
mov
add
sub
ljmp
xor
jg
and
and
stos
xor
push
push
jecxz
shlb
js
inc
jae
mov
dec
or
pop
sti
dec
pusha
and
leave
or
add
fs
sub
adc
or
hlt
popa
add
mov
mov
and
aas
clc
cmp
sbb
insb
lahf
and
ja
fbstp
repz
sbb
push
in
imull
and
xadd
pop
ljmp
push
push
push
lcall
sub
dec
adc
aaa
push
pop
in
pop
xor
push
add
in
mov
jns
pop
and
inc
loope
scas
outsb
dec
insb
addr16
in
cmpsb
arpl
adc
and
mov
arpl
adc
sarl
mov
mul
stc
lods
shl
dec
pop
fiadds
out
xchg
out
or
sbb
shr
cmp
or
add
xchg
sbb
pop
add
stc
mov
in
stos
sbb
add
cmpsl
jbe
cs
lret
mov
inc
sbb
pop
sub
xor
sarl
mov
aaa
xlat
stc
cmp
cmp
test
mov
ja
push
cwtl
int3
push
cmp
or
pop
pop
or
fimull
aas
xor
shll
movsl
mov
jge
inc
daa
pop
adc
hlt
xchg
inc
fstpt
movsb
rolb
mov
dec
and
sbb
fsubrs
jno
push
pop
dec
or
fsqrt
dec
or
inc
pop
cmp
cmpsl
sub
ja
lahf
jmp
jbe
jl
xor
mov
imul
cmc
sub
cmc
cmpsl
inc
ret
jnp
mov
xor
sarb
test
leave
test
popf
or
lahf
mov
mov
add
xor
jmp
and
jmp
adc
mov
lds
xchg
add
lock
fildll
pop
xor
pop
push
rcrl
adc
jge
std
cmp
lret
push
pop
loop
iret
sbb
inc
in
pop
or
sbb
sbb
pop
and
cmp
icebp
icebp
jo
inc
push
ret
js
jecxz
sub
aaa
in
sub
mov
js
and
jecxz
sub
out
sub
add
loope
insl
ja
cli
sbb
fnstcw
mov
pop
jbe
push
in
adc
sbb
stc
xor
xor
pop
dec
jno
in
shrl
loope
dec
push
pop
in
orb
cmp
fisttps
adc
rep
lcall
xlat
pop
add
adc
arpl
rolb
pop
cs
pop
xchg
cmp
push
push
xchg
outsb
test
ljmp
stos
cld
add
cli
repnz
mov
pusha
or
daa
sub
mov
data16
xchg
loopne
or
enter
push
pop
or
jl
icebp
mov
or
adc
or
out
add
push
sub
clc
add
call
mov
push
loope
mov
cmp
lods
xor
sub
pop
push
jae
out
ss
push
pop
mov
aaa
aaa
push
push
pop
push
xor
sub
lret
insb
sub
pop
push
mov
rcll
dec
fimull
repz
gs
xor
test
shlb
push
sti
inc
es
bound
inc
xchg
out
push
mov
dec
pop
dec
jns
dec
dec
loopne
xor
bound
cmpsl
lret
gs
enter
cmp
clc
mov
add
jae
inc
push
push
in
outsb
xchg
fisttpll
add
mov
xchg
clc
cmpsl
dec
add
mov
clc
decl
call
dec
call
jp
call
jmp
xor
sbb
sub
aaa
dec
dec
cmp
push
push
dec
pop
adc
hlt
fadds
sub
clc
push
dec
add
mov
icebp
inc
mov
add
in
ja
out
repz
dec
faddl
push
jo
and
mov
mov
push
push
in
dec
shlb
sbb
mov
addl
neg
lods
xor
fcomps
dec
push
inc
shll
fcmovnu
scas
movsb
jne
cmp
dec
stos
jb
aaa
addr16
inc
pop
dec
push
mov
je
xchg
aas
add
push
scas
jge
sbb
xchg
add
fimull
fimull
mov
pushw
test
mov
mov
subb
inc
sbb
fdivl
dec
flds
enter
cwtl
sti
mov
push
data16
imul
out
inc
push
add
xor
test
jb
cwtl
mov
lods
xchg
imul
xor
popa
inc
dec
inc
rolb
dec
push
fwait
shll
je
mov
mov
xor
sahf
xor
lock
test
and
xchg
mov
pushf
fs
push
inc
pushf
cmp
sbbl
mov
push
test
cltd
mov
and
dec
mov
jae
lods
inc
dec
push
adc
fiaddl
fsubs
dec
sub
insb
jns
popf
mov
into
aam
pop
lods
mov
xor
fwait
rorl
sbb
inc
cmp
out
dec
in
xchg
jbe
adc
adc
ja
inc
sub
pop
dec
push
lret
adc
jle
inc
add
call
push
dec
pop
jbe
or
cmpsb
test
add
enter
je
rcrl
inc
jmp
enter
notb
testl
dec
cmp
dec
mov
inc
jbe
pusha
rorl
cmp
xchg
iret
jl
stos
cli
inc
push
insb
dec
icebp
inc
loop
outsl
xor
sbb
push
push
inc
dec
clc
adc
int3
mov
hlt
div
jbe
jle
lods
inc
push
dec
jl
push
dec
dec
sub
pushfw
mov
imul
dec
xchg
inc
dec
inc
lods
data16
add
fcomip
shlb
dec
dec
cwtl
outsl
inc
fdivrp
imul
gs
cmp
fs
mov
dec
out
out
insl
dec
popa
add
cmc
fildl
add
push
imul
rorb
jmp
inc
dec
inc
mov
dec
int
push
fldcw
xchg
cwtl
push
jne
inc
cmp
cmovo
rcr
dec
sbb
mov
inc
sbb
je
pop
rcll
jb
jl
aaa
icebp
add
pop
cmp
xor
xor
add
arpl
cmp
dec
dec
inc
cmp
mov
dec
inc
sub
popa
js
dec
les
dec
iret
popa
mov
out
or
push
jae
mov
pop
stos
dec
xor
out
pop
fs
dec
pop
push
imul
pop
ret
dec
cwtl
js
dec
cmc
push
sub
fsubrp
outsb
xchg
cmp
xchg
mov
dec
sarl
je
fsubl
jo
lret
inc
sub
stos
shlb
cmp
movsl
cmc
jge
dec
xor
jno
jl
mov
and
mov
ja
xchg
xor
cmpsb
pop
lods
inc
push
xor
repnz
repnz
jbe
lcall
inc
insl
rol
test
repz
jae
xor
outsb
mov
repz
ss
jl
push
sbb
or
out
xor
dec
inc
or
mov
or
cmp
push
ds
cmp
and
data16
add
push
call
push
lret
dec
hlt
popf
and
icebp
push
inc
mov
mov
imul
xor
sub
sub
pusha
pushf
clc
push
sbb
push
arpl
add
and
out
dec
xchg
ja
cld
xor
repz
push
sti
xchg
mov
xchg
ficomps
pinsrw
xor
punpckhdq
pusha
lret
sub
ds
push
or
aad
xor
mov
add
cmp
test
or
popf
repz
imul
jo
push
and
push
mov
pop
test
push
pop
pop
aaa
or
nop
data16
je
sbb
push
cli
pop
push
mov
push
scas
loope
mov
cmovno
mov
rclb
xchg
mov
adc
rolb
fisubrl
and
shrl
imul
es
mov
mov
cmp
ret
push
test
add
sub
add
pop
divb
or
movsl
add
cli
dec
setb
ja
sub
enter
add
imul
nop
adc
sahf
test
xor
scas
out
and
lods
add
or
cltd
inc
das
popa
iret
or
cmpsb
js
mov
rolb
mov
add
add
adc
push
or
sbb
mov
pop
sub
jnp
sarb
xlat
pop
int
icebp
cmp
lea
popf
xchg
adc
lea
xor
call
cltd
or
dec
mov
nop
jnp
and
sbb
cmp
xlat
jae
sahf
lcall
xor
mov
jb
pusha
and
cmp
inc
pop
jno
sbbl
dec
xchg
imul
imul
sbb
mov
fwait
loopne
push
add
inc
ja
dec
push
dec
sub
push
xor
push
mov
popa
popa
leave
and
cmpsb
jmp
mov
dec
cs
and
jae
add
cli
push
pop
mov
add
movsb
movsb
and
aad
xor
jb
xlat
loope
and
mov
mov
in
dec
sbb
sbb
pop
sub
xchg
mov
enter
pop
mov
push
xor
xchg
pop
arpl
mov
ja
ja
or
ret
inc
nop
scas
dec
leave
add
mov
cmpsb
mov
mov
negl
and
xchg
lods
cmc
cmp
test
mov
jge
pop
fldenv
movsb
mov
mov
sub
sub
mov
or
sarl
dec
rcll
insl
lods
scas
mov
inc
sub
mov
cmp
jle
cmp
push
sub
xor
jae
mov
pop
add
cld
or
xchg
xchg
mov
push
sbbb
jnp
scas
arpl
xchg
je
lcall
add
mov
out
mov
fsubs
or
out
sbb
hlt
jbe
movsl
push
sbb
hlt
mov
imul
jne
jo
pop
pop
sbb
test
lahf
dec
mov
cs
pop
loopne
add
xor
aas
xor
js
ds
repz
inc
cmp
inc
cwtl
and
scas
push
jge
push
arpl
aaa
stos
mov
scas
iret
pop
jno
xchg
sahf
std
cwtl
adc
push
xlat
scas
or
adc
cmp
cmpsb
mov
add
or
icebp
dec
add
iret
popa
push
mov
ljmp
ja
jne
and
dec
rclb
pushl
repnz
inc
mov
aaa
or
jno
ja
ss
rolb
sbb
loop
dec
dec
popa
clc
or
adc
mov
xor
nop
cmp
sahf
bound
flds
out
arpl
add
rclb
pop
mov
dec
cmp
outsl
xchg
mov
clc
xchg
jbe
arpl
mov
filds
push
into
flds
push
mov
xor
clc
mov
scas
loopne
jmp
insb
loop
mov
inc
ljmp
jae
addl
ret
jno
inc
pop
mov
das
rcl
inc
push
jb
push
fstpt
push
movsb
inc
fsubrp
push
pop
inc
mov
mov
push
push
inc
inc
call
sbb
loop
xor
or
dec
inc
cmp
and
loopne
iret
pop
add
push
iret
jl
jo
imul
cld
inc
repnz
inc
dec
inc
push
fdivr
xchg
mov
xor
inc
jb
insl
in
mov
push
dec
cli
cld
inc
push
jbe
and
test
rcrb
inc
dec
inc
inc
dec
ret
outsb
xor
cmpl
fs
ficompl
lock
mov
dec
popa
dec
add
push
outsl
inc
sub
out
dec
addr16
add
sub
inc
pop
sarb
popa
arpl
lock
ds
in
jp
push
jle
repz
inc
push
pop
push
ljmp
loope
inc
sbb
pop
add
hlt
add
clc
add
or
jae
xlat
arpl
pop
cwtl
push
out
rorb
aaa
push
in
roll
inc
out
or
sar
inc
xchg
push
dec
inc
bound
dec
mov
push
or
mov
fsubp
dec
pop
xor
jns
pop
imul
aam
inc
imul
aaa
xchg
push
jne
or
sbb
add
test
dec
je
std
xor
adc
fadd
je
fadds
xchg
dec
inc
push
and
xchg
lret
sub
imul
sbb
sbb
jnp
divl
inc
inc
jbe
rcll
dec
addl
sbb
lret
divl
ficompl
inc
arpl
push
out
data16
or
hlt
adc
push
push
pop
shrb
andl
dec
xadd
ss
shlb
aam
dec
shl
inc
push
sub
xchg
fcmovb
dec
jo
sub
mov
mov
lret
inc
sbbl
jbe
jae
fcmovnb
mov
imul
dec
cld
inc
popf
and
loope
push
mov
dec
pop
push
adc
push
mov
fs
mov
mov
fsubr
push
xchg
ret
cwtl
dec
lcall
mov
inc
fsubrl
bound
pop
lds
mov
ja
pop
out
cmp
dec
or
xor
loope,pn
fdiv
addr16
addr16
sub
adc
loop
and
pop
mov
push
repz
xorb
push
insl
pop
lods
mov
jns
mov
loope
loop
test
sub
loop
sub
out
ja
cmp
mov
and
cld
sub
jg
sbb
imul
ret
lret
xor
sub
loope
loopne
out
cmp
sub
push
and
xorl
xor
pop
clc
pop
jp
lahf
movsb
ja
jnp
or
int
jge
push
xor
jp
ja
or
jg
lret
in
out
subl
pushf
mov
add
ja
lock
loopne
push
add
stc
fstpl
ja
add
rcrl
xor
movsl
add
sbb
push
and
xor
pusha
in
cmpsl
outsb
dec
ja
push
inc
int
add
adc
inc
mov
lock
adc
xchg
outsl
mov
cmp
mov
xchg
ja
sti
popa
inc
jecxz
sub
and
and
xor
sub
ja
sub
fstl
aaa
inc
js
and
xor
test
std
aas
repnz
inc
shl
push
nop
in
push
xchg
syscall
adc
inc
ja
adc
popa
dec
adc
sub
cwtl
ja
pop
add
sarl
fdivrl
xchg
test
mov
xchg
push
mov
je
push
or
aad
push
dec
loop
inc
cmp
loopne
fmull
pop
or
cmpsl
sti
ja
les
mov
push
into
sbb
outsl
xchg
jns
sub
loop
jo
inc
jb
stos
test
pop
loop
mov
pop
lock
insb
push
subl
insb
and
rcl
inc
sti
ret
ja
pop
sub
and
jo
daa
xor
mov
lds
add
xor
je
adc
loopne
xor
clc
das
add
stos
leave
cmp
rorb
or
add
out
pop
adc
push
cmp
xchg
ja
testl
pop
dec
mov
xchg
mov
stos
xlat
fcoms
sub
mov
stc
in
mov
in
ja
movsl
and
push
hlt
insl
in
or
adc
xorb
pushf
addb
push
into
shll
leave
enter
mov
popf
lret
js
sub
popf
pop
lahf
addb
mov
cld
push
push
loop
jmp
pop
icebp
jae
jo
addr16
scas
fisttpll
sub
pop
push
inc
iret
inc
clc
mov
xchg
testl
sub
push
push
push
push
mov
mov
ja
xchg
adc
cmp
fnsave
sub
cmc
mov
mov
shrb
orb
orb
dec
nop
ficoms
outsb
cli
adc
jae
inc
test
sbb
or
ret
add
lret
mov
clc
loopne
sbb
push
jns
insl
out
pop
cmp
mov
rcrb
xor
clc
mov
adc
cmp
pop
lahf
jae
add
add
cmpsb
pop
mov
clc
out
lret
push
mov
push
sbb
add
shll
mov
ja
dec
cltd
xor
test
or
out
jp
hlt
xor
mov
fmuls
mov
mov
shlb
mov
xchg
out
jp
push
push
adc
push
ja
mov
xchg
pop
lock
movsb
scas
xchg
test
mov
nop
or
xchg
mov
adc
int3
cli
push
push
lock
pop
insl
push
scas
fcoml
sub
setnp
mov
xor
push
jecxz
adc
or
jno
jb
fcompl
cmp
jg
mov
adc
cwtl
cmp
mov
xor
cli
into
test
mov
aad
ds
pop
rorb
cmp
fmuls
out
fsubrl
pop
cwtl
adc
and
fstpt
sub
and
xor
mov
imul
push
pop
add
xchg
mov
subb
jecxz
xor
add
cmp
adc
idivl
mov
cs
mov
rcll
push
outsb
dec
jae
add
rcll
push
icebp
xor
push
cmp
push
add
or
jp
lds
andb
mov
dec
mov
mov
mov
inc
outsl
mov
adc
push
icebp
cmp
mov
mov
pushf
hlt
mov
ret
and
out
out
dec
sbb
repz
insb
popa
aam
mov
pusha
and
push
push
xchg
lock
pushf
add
sti
mov
mov
aam
loope
into
sub
dec
jp
lahf
shl
scas
js
loopne
mov
shl
mov
jo
lret
nop
mov
sbb
lahf
mov
sub
mov
and
cmpsb
fstpt
dec
mov
out
clc
pop
inc
stos
pop
jp
cmp
sbb
jb
sti
repnz
js
ret
call
fiaddl
out
outsb
das
add
push
push
or
sub
arpl
sbbb
fimuls
mov
or
pop
adc
push
popf
sbb
sub
nop
daa
test
dec
sub
or
adc
cmpsb
ljmp
and
jmp
xorb
stos
pop
sbb
ds
jmp
and
sub
mov
ror
mov
pop
jl
jmp
pop
clc
cli
pusha
mov
or
out
enter
push
loope
sbb
pusha
xchg
dec
push
inc
mov
mov
inc
ljmp
dec
ror
loopne
ja
rcll
test
sbb
js
pop
xchg
mov
daa
mov
pop
pop
and
add
sbb
pop
shll
leave
push
lods
adc
xchg
inc
in
mov
push
shlb
test
and
ljmp
pop
and
cld
ja
pop
push
cmpsb
dec
dec
mov
xchg
pop
shlb
sub
push
inc
mov
jo
inc
push
sarl
aaa
xor
mov
ja
xor
push
mov
xchg
inc
dec
mov
cs
mov
sub
rcrb
xor
es
lock
orb
add
mov
xchg
aad
xchg
inc
xor
xor
jecxz
pop
repnz
cmp
pop
mov
jo
insb
add
mov
enter
dec
call
add
aad
ja
enter
push
mov
add
aaa
je
fwait
inc
aam
jle
nop
sbb
pop
mov
xor
ret
cmp
add
inc
out
ja
lock
pushf
popf
mov
loope
data16
xlat
insb
loopne
cmpb
mov
cmc
xchg
out
inc
push
in
and
dec
mov
mov
inc
pop
aaa
outsb
ja
jge
daa
pushl
shrb
dec
push
cld
push
daa
jmp
dec
repnz
push
lock
enter
les
pop
dec
push
imul
sbb
and
add
xor
push
inc
dec
insl
adc
dec
push
stc
loopne
dec
cmp
arpl
add
loop
push
add
shll
dec
push
fldlg2
ljmp
xor
insb
push
stos
mov
call
aam
bound
adc
inc
insl
repnz
jno
je
push
and
into
pusha
repnz
xor
mov
mov
sbbl
sub
add
loopne
arpl
jb
inc
inc
sbb
xor
xor
rcrl
jbe
add
scas
lock
dec
sub
out
dec
insl
push
js
dec
ljmp
inc
into
dec
push
push
sahf
in
and
cmp
repz
jae
rorb
shlb
push
inc
xchg
fsts
or
ljmp
mov
cld
push
mov
inc
push
fisubs
xchg
jns
imul
add
sbb
pop
in
push
outsb
in
adc
fstps
jb
push
cmp
mov
inc
push
out
bound
push
lahf
ja
push
popa
mov
mov
jp
xchg
xor
mov
int
or
cli
mov
jecxz
push
xchg
sbb
aad
mov
adc
fs
out
call
cmp
icebp
ja
loopne
sarb
jle
cmc
add
xchg
and
in
sahf
push
mov
pushf
outsb
mov
pop
jl
adc
cmpsb
jmp
inc
lods
ja
push
jge
test
sub
std
sbb
jle
adc
aas
add
xor
movsb
xor
decl
adc
int3
movsb
cmpsb
cmp
jmp
inc
jmp
and
sahf
sbb
xchg
add
or
add
insb
call
sub
cli
push
hlt
scas
out
dec
repz
cmp
add
sarl
cs
sbb
cmpsl
sub
push
arpl
shrb
sbb
jnp
fnstcw
sarb
in
pop
inc
jmp
or
lods
scas
xchg
movl
push
clc
or
sbb
lcall
out
mov
cmpsb
inc
sbb
dec
or
add
jmp
movsb
sti
fistps
in
and
movsb
test
dec
mov
jo
shl
fdivl
rclb
outsb
push
mov
scas
adc
pop
incl
mov
arpl
inc
xchg
jb
cmpsb
add
cld
fmuls
lret
sbb
pusha
and
into
jo
add
int
mov
ret
sub
mov
mov
movsl
jb
jbe
inc
fdivrl
push
gs
sub
loop
cld
pusha
add
ret
mov
add
std
loopne
aam
daa
mov
fimull
mov
fs
pusha
sbb
and
andb
push
lock
scas
push
cmp
and
movsb
push
inc
ret
in
stc
pushf
dec
dec
cmc
inc
push
cld
dec
push
cmp
pop
shlb
lods
outsb
loope
stos
push
push
push
outsl
adc
fbld
push
les
cmp
je
inc
into
mov
mov
or
leave
into
stos
sbb
xor
jl
js
test
mov
pop
mov
inc
add
cmp
mov
incl
xchg
sbb
or
jmp
clc
jns
inc
rorb
insl
add
add
enter
or
int
cwtl
adc
or
hlt
fdivrl
cmp
ret
mov
jl
imul
and
cld
roll
mov
adc
adc
sub
sbb
fadds
pop
adc
jmp
sti
aas
adc
mov
clc
cmpsl
xor
cmp
fsubrs
imul
imul
xchg
inc
in
sbb
loope
mov
out
xchg
fucomi
popa
aam
out
mov
nop
sub
dec
pop
pop
sar
pop
mov
idivl
pop
insb
push
aas
push
sub
sbb
push
jo
loope
adc
cld
icebp
mov
stos
or
gs
push
inc
loop
popa
pop
pushaw
sub
out
loope
icebp
inc
shr
xchg
push
popf
push
rcrl
sbb
jl
popa
cli
adc
lea
mov
mov
mov
jle
aam
lds
mov
sub
or
push
enter
lock
push
inc
mov
je
fwait
inc
adc
hlt
and
ds
movsb
addr16
ljmp
cmp
jne
sub
loope
lock
xor
sub
push
cmpsl
sbbl
imul
mov
adc
adc
dec
or
clc
xlat
xchg
and
mov
mov
lock
push
stos
mov
ds
xchg
sub
call
lods
jecxz
fdivrl
shrb
stc
inc
insb
movb
ja
mov
mov
lret
mov
pop
bound
in
mov
cli
ja
in
insb
test
jno
jae
outsb
stos
sub
adc
jb
xchg
mov
cld
rcll
cmp
cmp
push
add
ds
js
dec
mov
jp
pop
cwtl
fiadds
clc
negb
dec
pop
out
call
mov
add
bound
and
nop
push
xchg
xor
ja
mov
push
pop
in
mov
dec
cs
ja
je
and
cmp
fsubr
cmpsb
loop
idivl
testb
ret
mov
xor
ja
xor
xor
out
stos
pop
jb
mov
pop
mov
lret
lret
bound
and
out
into
les
xorb
sub
out
mov
xor
outsl
mov
add
mov
ds
add
push
inc
jg
xlat
lea
mov
xor
xor
sbb
sub
ds
and
sub
repnz
jle
icebp
sub
sbb
ss
into
fisubrl
rcll
test
and
fwait
cmpsb
ljmp
addr16
fdivs
mov
lcall
adc
sbb
addl
lea
cmp
push
adc
sbb
mov
enter
js
inc
jp
sub
dec
cwtl
sbb
jae
ss
and
bound
or
push
popf
add
jl
pop
lds
addr16
push
add
loopne
ret
inc
push
leave
push
add
or
inc
push
sbb
add
andb
fs
ret
and
test
fsub
and
dec
dec
mov
ljmp
loop
mov
or
inc
js
stc
iret
xchg
hlt
orl
inc
dec
ficoms
adc
loope
xor
test
shll
aam
xor
and
pushf
in
insb
mov
cmp
xchg
shrb
addb
cli
pop
and
shr
test
add
aaa
dec
std
fdivrl
xchg
int
mov
pusha
mov
pop
push
sarb
xchg
dec
lahf
mov
je
rol
arpl
add
jb
sbb
movsl
push
pusha
fstp
push
fidivrs
out
push
jg
xchg
stos
push
jbe
add
xlat
add
aad
jecxz
pop
outsb
mov
xor
pop
jno
adc
repnz
repnz
inc
jg
pop
push
icebp
cmp
loop
mov
sbb
cmp
jmp
cli
cmp
push
xor
cwtl
lock
sub
jns
cmp
pop
rolb
sarl
adc
push
mov
clc
test
or
fcomip
cmp
data16
jne
push
mov
inc
dec
mov
or
cmp
test
xchg
inc
inc
jl
xor
inc
lods
mov
sub
inc
sbb
pop
cmp
push
rolb
shll
dec
inc
insb
ljmp
inc
xor
inc
pop
pop
insl
jl
aaa
jb
pop
insl
ret
xor
inc
test
inc
push
mov
push
jbe
icebp
adc
add
jne
bound
dec
outsl
jno
push
add
loop
rclb
cli
add
mov
aaa
inc
scas
repnz
add
jnp
adc
and
dec
dec
xor
and
pop
orb
mov
loop
cmp
push
pop
pop
inc
shlb
sbb
push
rcrb
sub
push
push
adc
dec
xor
push
and
inc
sub
jp
fwait
test
cmp
dec
xor
dec
cmp
jne
cmp
rcrb
mov
dec
cli
dec
and
jmp
push
sub
in
mulb
decl
iret
ds
add
dec
push
in
inc
adc
scas
jae
out
inc
xor
xchg
call
inc
push
dec
add
scas
je
xchg
test
test
push
insb
clc
out
fs
bound
outsb
push
jp
dec
test
sahf
push
fwait
sahf
mov
mov
add
xor
fwait
mov
roll
ljmp
and
add
repz
insl
and
inc
cld
or
arpl
xor
cld
or
test
mov
call
mov
imulb
add
cwtl
sub
in
jbe
jg
ficompl
jbe
out
push
outsl
mov
bound
scas
inc
popa
add
mov
and
mov
inc
jne
sub
test
lock
clc
or
repnz
push
jle
jbe
js
push
or
push
push
imul
push
sub
sub
bound
mov
ret
loopne
loop
fdivl
inc
dec
clc
xor
dec
les
movsb
adc
fldenv
cli
lods
dec
insl
fiaddl
dec
les
or
push
je
fcmovnb
into
add
popl
negl
xor
cmp
enter
push
mov
xorb
xlat
inc
mov
subl
fsubrl
dec
mov
xor
ljmp
inc
fnstenv
icebp
shlb
inc
fsubrs
push
dec
arpl
adc
fiadds
pop
inc
mov
imul
in
test
icebp
pop
mov
and
insb
mov
sahf
xor
loopne
add
nop
fmuls
lds
cmp
or
adc
imul
push
out
inc
rorl
add
dec
fs
inc
mov
test
into
add
hlt
pop
shll
mov
and
jo
xor
mov
push
fcomps
adc
mov
inc
push
sbb
cs
sub
call
scas
jae
jne
mov
popf
cmp
outsb
dec
or
push
sahf
mov
adc
nop
inc
das
push
movl
lret
push
aaa
scas
dec
outsb
xor
mov
push
mov
data16
mov
push
pop
dec
inc
les
xorl
push
into
add
mov
aad
je
aaa
dec
sub
mov
mov
xor
jns
jns
sbb
inc
adc
jmp
cmp
je
into
addb
call
mov
aam
push
inc
xor
mov
inc
mov
in
fwait
mov
push
dec
ror
mov
insb
jbe
repnz
push
adc
fwait
dec
aas
xchg
inc
cmp
lret
cs
adc
and
iret
and
add
inc
pop
xor
fcompl
popf
add
pop
pushw
and
add
push
js
xor
push
inc
sbb
dec
or
inc
xchg
ja
pop
imul
xor
adc
mov
dec
mov
dec
dec
mov
and
dec
sub
jno
or
jne
js
push
add
mov
rcr
pop
repnz
jbe
xchg
adc
push
pushw
rolb
sahf
xor
mov
inc
clc
adc
inc
fbld
adc
fildl
mov
push
sbb
sbb
inc
jle
clc
pop
jnp
icebp
inc
mov
xor
mov
clc
cltd
xchg
loopne
jae
dec
mov
shll
nop
fcoml
add
sbb
dec
fs
sub
rcl
or
sub
sti
jecxz
into
pop
inc
addr16
mov
mov
push
loopne
cmp
jp
jnp
and
mov
add
ja
lea
mov
mov
xor
loopne
cmc
mov
sub
js
adc
sbb
fcomi
sub
cmpsl
sahf
stos
ja
or
jg
lcall
cli
mov
jo
vhaddpd
mov
cmp
cmp
std
adc
jne
push
mov
sub
bound
mov
xchg
mov
fwait
popa
gs
add
push
mov
inc
clc
sub
movsl
push
leave
ja
dec
dec
mov
jge
xchg
sbbb
cli
sub
jmp
gs
push
push
add
mov
push
movsb
out
les
clc
lock
push
movsl
int3
dec
pop
jo
stc
dec
aad
pop
jno
adc
xchg
outsl
lock
add
push
mov
fadd
fisubrl
mov
stos
adc
cli
adc
aaa
outsb
pop
cld
in
popa
decl
ja
add
xchg
ja
jmp
ret
sbb
push
fwait
xor
inc
repz
aaa
icebp
ja
adc
jmp
out
clc
push
fsqrt
xchg
les
out
loope
sbb
outsb
or
adc
inc
cli
mov
and
mov
or
fcmovnbe
cmp
mov
pusha
push
decl
mov
mov
sub
nop
push
into
or
les
ja
ja
mov
scas
push
sbb
or
testb
mov
int3
mov
test
clc
rcr
cwtl
push
sub
lahf
push
data16
in
call
xchg
cs
stos
sub
ja
mov
jne
rcll
xchg
int
mov
cli
jmp
mov
lock
gs
inc
mov
mov
and
jo
adc
mov
cmp
setbe
lods
ja
cmp
adc
xorb
mov
jo
pop
loopne
pop
pop
stc
mov
dec
mov
sbb
fnstenv
mov
cmp
loopne
mov
and
mov
xor
push
push
and
mov
lock
mov
js
lds
sbb
aam
fisubrs
cmp
sahf
push
mov
clc
incb
shll
adc
aaa
add
faddp
and
outsb
sarb
mov
push
jbe
notb
cmp
cmp
pusha
fidivl
dec
add
sub
pop
cmp
adc
jecxz
xchg
jbe
mov
outsl
leave
call
adc
xor
in
push
xchg
lds
adcl
leave
bound
add
lds
ret
push
adc
scas
push
sbb
cmp
xorl
push
insl
push
insb
es
shll
add
je
add
xor
adc
push
xor
adc
mov
ja
add
shrl
movsb
cltd
inc
ja
sbb
xchg
clc
adc
jno
inc
lock
clc
insb
xchg
fisubrs
cld
insl
push
shlb
pop
icebp
addr16
mov
sbb
rsqrtps
movsl
jne
loope
ss
das
js
subps
mov
push
ja
int3
sub
orb
cmp
repnz
mov
ret
jg
and
lcall
add
cld
mov
movsl
ja
pop
pusha
sub
insb
fbld
cmp
sbb
sbb
xor
push
pop
or
rcl
push
xchg
mov
shll
add
inc
jl
cmpsb
arpl
inc
mov
xchg
mul
push
cmp
lock
push
and
into
ret
or
mov
lods
lods
loope
inc
xor
mov
repnz
push
mov
nop
push
mov
sbb
lods
testb
sbb
pusha
xchg
xchg
insl
mov
push
ljmp
dec
rcl
test
sbbb
push
cmpsl
xor
sub
pop
pop
and
in
outsb
push
lcall
ja
pcmpgtb
dec
aaa
push
inc
es
addl
jl
cmpsl
adcb
mov
pop
jmp
iret
ret
mov
push
in
sti
pop
pushf
adc
or
cmp
ret
out
mov
add
imul
mov
xchg
lahf
mov
lods
scas
cmc
stc
pop
pop
pusha
movsl
inc
inc
andb
out
mov
je
or
push
lahf
cld
add
fimull
xchg
sar
adc
ja
inc
xchg
push
repnz
mov
ja
jbe
lods
orb
stos
xchg
push
movsb
pop
cmp
jg
inc
std
add
out
cltd
aaa
mov
mov
dec
loopne
add
adc
dec
push
pop
rolb
decl
in
add
pushf
ljmp
arpl
mov
int
mov
es
push
or
adc
loop
test
out
pushl
mov
jecxz
lahf
rolb
xchg
in
movsb
pop
cld
sbb
pop
xchg
dec
add
sbb
inc
or
cli
out
add
xchg
out
ja
xor
fbld
and
add
xchg
adc
push
sbb
or
popa
dec
and
subb
fs
push
push
sahf
xchg
data16
int3
aam
push
outsl
mov
dec
popa
andb
mov
orb
mov
sub
mov
fsubrl
jo
mov
clc
lret
jne
mov
orl
in
hlt
cmp
push
enter
mov
inc
adc
or
clc
in
ljmp
inc
dec
adc
mov
pusha
mov
cmp
xorl
or
sbb
insb
xor
fiadds
sahf
mov
shlb
test
sbb
orb
jne
or
pop
jge
dec
or
rolb
imul
sub
jp
call
cmp
xchg
dec
ja
jl
or
adc
pop
imul
sti
mov
push
nop
and
gs
lods
cmp
push
push
xchg
mov
es
outsl
lods
add
add
mov
push
or
push
jl
adc
jmp
aas
jecxz
iret
adc
xor
pop
js
mov
icebp
outsb
add
mov
mov
lock
mov
jle
push
mov
repnz
in
sbb
movsb
call
cli
xor
jecxz
or
mov
je
sub
ficomps
es
incl
andb
fmuls
mov
push
push
mov
xor
outsb
adc
ds
pop
lods
push
push
add
or
ss
pop
lahf
mov
push
loope
movsb
or
loopne
sbbl
shrl
add
mov
iret
adc
mov
ss
add
rorb
mov
sub
sub
jbe
mov
fsubrl
fldcw
push
push
and
mov
cmpsb
inc
xlat
xor
andb
in
push
nop
enter
rol
or
xchg
sub
xor
js
jp
ljmp
push
inc
imul
push
push
lds
inc
dec
decl
add
popa
loope
ss
inc
addr16
lret
add
outsl
lock
jo
dec
cs
ss
cmp
pop
loop
inc
data16
int3
push
lea
and
jo
das
lea
sbb
ja
push
jo
rorl
jno
aad
inc
push
loopne
inc
cli
cmp
xchg
xor
pop
or
hlt
dec
adc
nop
add
js
pop
bound
in
sbb
mov
add
in
cld
mov
call
inc
sbb
push
std
mov
push
mov
ss
pop
add
or
clc
aam
insb
sarb
xlat
adcb
jne
pop
fidivrl
lea
scas
pop
loopne
aad
xor
pop
mov
nop
jb
push
adc
insb
mov
js
push
shlb
es
pushl
mov
sarb
jp
out
test
mov
cwtl
leave
sbb
push
jo
cld
push
jle
jp
mov
add
mov
into
iret
orb
repz
and
push
out
out
je
jl
inc
jg
jne
pusha
lea
xor
outsl
xor
push
ja
pusha
pushf
and
lds
xchg
loop
or
add
cs
xor
cmp
mov
xchg
in
test
std
ljmp
jp
iret
aaa
cltd
ds
popa
ljmp
push
call
mov
or
ss
inc
out
lcall
xchg
imul
fcom
jnp
sarl
ret
mov
fisubrs
xorb
fsubp
cmpb
ja
inc
mov
hlt
adc
or
xor
iret
in
fists
or
jg
clc
sub
into
ret
jecxz,pt
add
mov
test
dec
inc
aam
jg
inc
sub
adc
lea
int3
add
mov
enter
or
addr16
or
pushf
mov
enter
jmp
jg
mov
dec
ja
addr16
leave
push
clc
lock
xchg
ja
in
pusha
cmpsl
jle
add
sbb
das
cwtl
loope
xchg
adc
and
outsb
push
hlt
add
adc
outsl
add
cltd
pop
jl
das
pop
aad
cltd
loop
mov
call
mov
push
xor
pop
nop
adc
xor
movnti
adc
leave
push
sub
adcl
lcall
or
ja
jmp
pop
sub
and
sub
inc
lret
stos
lods
filds
sub
cmp
mov
and
inc
mov
push
mov
add
repnz
lahf
ja
jno
push
mov
add
inc
jp
lods
pop
jno
out
mov
in
or
add
jae
repnz
push
addb
clc
ja
xor
inc
repnz
mov
dec
in
idivb
xchg
sub
pusha
xor
pop
scas
ficoms
pop
push
push
stc
or
insl
cmpl
lods
paddsb
loop
jle
ds
das
icebp
push
mov
adc
add
mov
sbb
inc
adc
push
add
push
pop
stc
loope
insl
and
sti
aas
mov
js
je
inc
mov
push
loopne
incb
mov
pusha
dec
mov
sti
cmp
ret
dec
or
or
aaa
push
add
loop
fs
push
out
incl
in
cmp
sbb
xor
mov
push
jecxz
sbb
or
mov
add
xchg
js
clc
push
jl
jbe
jbe
outsl
enter
cmpsb
je
out
rcr
mov
mov
jbe
jle
or
jp
mov
ss
inc
pop
add
adc
adc
and
idivl
push
mov
xchg
or
stos
lea
mov
movsb
ja
mov
movsl
jo
hlt
pushf
je
cwtl
sbb
cmp
loope
insl
mov
ljmp
movsl
xchg
dec
ja
or
outsb
sub
aaa
pop
cwtl
sub
or
sub
xor
ja
repnz
mov
jns
loop
or
or
or
addr16
setne
pop
or
xor
iret
inc
rep
jge
imul
pop
sbb
test
call
int3
inc
sub
aas
jge
xchg
ja
outsb
and
xorb
and
loop
jns
sbb
das
push
cmp
sub
sti
fs
cmpsl
or
jne
fmulp
dec
loop
clc
psubsb
sub
mov
clc
inc
mov
cmp
jl
dec
mov
mov
icebp
push
out
insb
sahf
in
add
pop
inc
xor
test
stos
pop
adc
xchg
mov
imul
dec
shll
inc
insb
pushf
int
hlt
jae
jno
mov
sbb
push
std
and
cmc
clc
loope
call
push
xchg
test
cltd
and
pop
lret
push
jb
jecxz
fxch
es
fs
int3
and
int
mov
xor
or
hlt
test
mov
lods
inc
aad
loopne
scas
int
lahf
mov
inc
popf
ja
push
jae
mov
cli
fists
addb
xlat
jns
cltd
cmp
mov
sahf
into
and
mov
cmp
mov
mov
bound
add
push
addb
push
adc
int
sar
xor
call
or
js
xor
fisttpll
into
aam
fadds
xor
and
xchg
les
inc
mov
fs
mov
sub
sub
insl
sti
sbb
jp
sub
and
repnz
call
cltd
icebp
sbb
push
mov
push
push
aas
dec
pop
cmpsl
js
jns
sub
inc
je
dec
sub
rcrb
mov
cltd
cwtl
and
shll
mov
push
mov
xor
push
mov
fadds
xchg
or
in
clc
cs
out
inc
push
aas
xor
testl
fs
dec
orb
add
std
leave
xchg
sub
jnp
out
mov
repnz
jmp
es
rorb
mov
sub
mov
int
pop
movzwl
leave
jne
adc
test
add
mov
sub
ds
daa
mov
insl
ret
test
push
xor
jno
jg
cld
aam
push
mov
sub
loopne
or
and
mov
jno
add
inc
mov
int3
cs
xor
mov
add
es
sbb
test
mov
ret
rorl
jg
add
and
inc
and
push
out
sub
cmp
leave
sbb
ljmp
mov
ja
stc
jmp
jo
roll
dec
aad
mov
outsb
stos
sti
cwtl
mov
cli
adc
add
fdivrl
lock
jne
or
lods
les
outsl
movb
jecxz
repnz
inc
xlat
push
pop
jle
or
pop
lock
rol
rcrl
and
arpl
cld
cmp
dec
mov
push
fs
mov
sub
pusha
dec
add
insb
mov
mov
mov
jbe
jle
lods
call
jecxz
add
orb
jo
lea
jmp
iret
dec
pop
out
jnp
jmp
outsb
mov
das
dec
add
inc
mov
iret
ret
stos
dec
sbb
and
pop
icebp
ret
ret
cmp
outsl
pop
xor
dec
outsl
sbb
testl
add
mov
out
inc
mov
xchg
aam
imul
adc
dec
add
arpl
dec
mov
inc
add
jl
dec
cmp
pop
dec
add
testb
in
sbb
push
inc
fidivrs
push
add
and
and
sub
or
cld
adc
imul
rorl
dec
fsubp
stos
ret
sbbb
out
xor
dec
push
inc
jecxz
xchg
aam
mov
xor
jne
cmp
push
mov
jl
or
aam
add
xchg
xor
jmp
inc
outsl
xchg
outsb
add
ret
jae
add
mov
dec
aad
inc
jb
out
push
inc
movsb
mov
ss
loop
mov
cmp
adc
jo
add
sub
xchg
enter
jl
add
or
imul
sbb
scas
lret
sub
out
addr16
push
in
dec
ljmp
popa
push
incb
clc
inc
push
adc
cmp
inc
fidivs
cmp
and
xor
dec
xchg
push
dec
mov
inc
testl
or
add
enter
cld
add
les
setnp
cld
das
sarb
pop
pinsrw
mov
gs
imul
rorb
pop
dec
jbe
nop
xor
dec
push
cmp
mov
shll
loopne
call
cmpsb
xchg
lcall
mov
inc
in
xor
cs
and
ss
sarb
push
pop
pop
mov
fs
push
adc
push
push
imul
inc
push
repz
add
inc
dec
pop
push
pushl
inc
dec
ret
add
jge
push
pop
subb
icebp
add
cltd
jp
mov
dec
cmpsb
dec
mov
mov
mov
dec
outsl
out
js
push
inc
mov
loopne
mov
push
in
insl
ljmp
xchg
gs
dec
divl
je
add
push
and
lods
cmp
cmp
or
pusha
loope
std
or
aam
std
lret
push
js
dec
jne
xor
dec
iret
mov
rcll
jge
aam
dec
test
cltd
xor
addr16
lock
dec
push
fsubr
jmp
lea
mov
cli
mov
mov
sbbl
mov
mov
ljmp
mov
or
std
dec
sbb
sub
bnd
mov
dec
stos
and
aam
cli
push
out
fcomps
sub
lret
sbb
popf
ret
adc
or
jg
sarl
pusha
jbe
cmp
ja
ds
std
fidivrs
pop
lahf
mov
inc
pushl
xchg
scas
jns
push
mov
inc
arpl
call
inc
fsubl
xor
and
data16
ret
cmp
cld
push
movsb
dec
sub
xchg
dec
les
jnp
clc
scas
ret
jle
sub
js
ja
addr16
into
repnz
lcall
fcoms
adc
mov
movsl
notb
es
jmp
inc
add
cmp
jmp
jmp
fildll
hlt
mov
xchg
mov
cli
movzbl
inc
push
repz
mov
add
cmp
cmp
cmp
or
add
xchg
imul
popa
cmp
mov
cmpb
loopne
mov
jb
jo
decl
stos
mov
sub
and
popf
add
mov
mov
lea
adcl
xor
cmp
dec
repnz
pusha
pop
int3
inc
jg
inc
pop
sbb
pop
stos
mov
sbb
decb
sub
in
push
rorl
lcall
sar
push
iret
mov
mov
adc
call
iret
lock
inc
push
insb
jno
dec
ja
mov
and
xchg
stos
pop
ja
test
hlt
jne,pt
add
sub
xorb
dec
mov
jns
js
outsl
shr
lock
sub
std
add
sub
adc
movsb
adc
cs
pop
lea
in
mov
jmp
jecxz
jle
mov
xchg
insl
aam
push
stc
cwtl
out
in
out
sahf
paddd
decl
out
push
ja
jo
ljmp
ja
push
push
ljmp
ss
jp
dec
sbb
and
push
jl
jecxz
add
lahf
push
push
jbe
pusha
sub
lds
movaps
xchg
push
pop
fdivl
ja
push
inc
inc
mov
ror
out
les
icebp
lea
lret
cli
mov
cmp
les
mov
cmove
pop
ja
sbb
xchg
adc
cli
pop
addb
or
jge
int3
loope
stc
xor
notb
push
fsubl
adc
sahf
icebp
sbb
ljmp
les
xor
xor
fists
dec
cmc
add
push
lock
mov
jbe
or
or
pcmpeqd
jg
xorl
ja
and
mov
aad
hlt
call
dec
push
addb
cmp
or
shlb
push
pop
and
dec
and
test
ja
js
inc
lods
pop
sbb
inc
cli
sarb
lahf
adc
mov
cwtl
out
bound
dec
orb
dec
cmpsl
cmp
daa
inc
jb
add
and
adc
subb
sbb
adc
in
ds
ja
bound
adc
cmp
dec
nop
pop
fcmovu
in
rcrl
or
orb
jecxz
adc
push
dec
sbb
cmp
mov
ljmp
push
je
dec
add
xlat
sub
aaa
pop
into
flds
clc
mov
xor
xor
cltd
pop
sub
sub
adc
sub
ficoms
sbb
roll
pop
or
mov
fcmovnb
in
mov
movsb
adc
ds
add
les
ja
inc
pop
lock
or
stc
sbb
cli
lock
push
push
mov
ret
sub
jmp
movb
inc
inc
roll
int
mov
das
push
dec
int3
insb
fisttps
data16
cmp
dec
inc
cmpsb
enter
mov
mov
ror
jle
push
sbb
sbb
inc
lret
lret
sti
sti
push
orl
pop
hlt
push
test
fdivrl
outsl
jmp
movsl
mov
mov
mov
fiaddl
stos
fstpt
aam
sub
dec
or
faddl
mov
and
gs
sahf
sub
arpl
mov
repnz
adcl
mov
pop
aas
jecxz
lcall
cld
jecxz
push
ficoml
mov
loopne
push
xchg
hlt
clc
sbb
mov
xchg
in
outsl
fistpll
add
xor
shll
hlt
stos
pusha
ja
mov
aad
and
lret
arpl
aaa
cmp
sbb
cmp
pop
daa
inc
sub
pushf
cmpsb
or
xchg
les
ret
int3
sbb
roll
add
add
inc
mov
and
mov
shl
inc
pop
sbb
orb
jmp
inc
pusha
add
xchg
fwait
or
ret
fs
and
mov
mov
cmp
sbb
cmp
pop
pushl
pop
sub
push
jle
mov
mov
ja
push
pop
or
aam
dec
jno
push
iret
movsl
test
sub
pop
pop
les
cld
cs
ss
cmp
pop
aaa
inc
pop
inc
xor
ret
or
call
iret
jle
inc
sbb
and
dec
es
call
incb
lcall
cmp
incl
add
push
push
hlt
sub
fwait
or
or
clc
add
pop
les
jae
lock
jecxz
cld
push
fsubrs
sbb
in
adc
push
jl
movsb
outsb
bound
aad
in
ljmp
scas
inc
sahf
inc
adc
sarl
adc
js
pop
jne
imul
fs
xchg
mov
popa
xchg
sub
ret
jns
adc
popa
mov
jecxz
enter
jmp
dec
inc
ds
jne
mov
lods
mov
test
stos
cmc
push
loopne
mov
pop
popa
mov
clc
xor
jge
dec
call
shrl
jle,pn
adc
and
or
mov
aas
ret
add
mov
in
ja
loope
push
faddl
push
and
jmp
cmc
je
lret
add
sbb
std
andps
xchg
pop
dec
lcall
jbe
mov
adc
cltd
bound
jo
imul
cmpsb
mov
push
test
pop
jg
push
in
cmp
jmp
lcall
or
xchg
pusha
mov
cli
fwait
cmp
sarb
pop
shrl
sbb
sbb
in
cmp
xor
icebp
or
adcb
sbb
inc
je
inc
mov
sbb
sub
mov
aaa
ja
pop
mov
adcl
bound
xor
xor
stc
js
pop
shrl
cmp
lds
jge
add
fiaddl
push
out
mov
inc
cmp
rorb
sub
repnz
insb
pop
mov
jmp
dec
adcb
add
mov
fdivp
jg
cmc
pop
jmp
ja
inc
je
scas
pop
repz
sbb
imul
and
adc
test
movsb
pop
outsb
hlt
popf
aas
or
js
add
or
xor
fisubrl
cld
andl
jb
mov
outsb
dec
mov
test
js
pop
addr16
dec
popa
mov
jns
inc
adc
jbe
clc
popf
ret
out
jbe
add
mov
jl
dec
ss
xor
test
push
ret
dec
mov
enter
push
pusha
inc
loope
fmuls
inc
inc
cmp
push
dec
insb
inc
inc
dec
inc
pop
sub
in
mov
mov
add
rorl
clc
cmp
inc
and
dec
jo
or
arpl
and
mov
mov
pop
jecxz
inc
add
ret
push
mov
rcll
inc
and
sub
pop
ret
into
aas
pop
out
inc
ss
cli
push
push
fistps
jmp
dec
aaa
xor
js
push
mov
adc
inc
mov
push
push
mov
xchg
gs
inc
jne
ret
lcall
dec
addr16
jg
add
mov
fs
xchg
insb
add
mov
movsb
xor
xchg
push
adc
fs
xor
popa
mov
xor
jo
mov
jb
std
xor
jge
inc
inc
pop
addr16
push
outsb
mov
sbb
dec
pop
imul
dec
testl
pop
xor
ficoms
mov
cwtl
and
add
jp
out
push
mov
cmpsb
push
xchg
outsb
fcmovb
subl
sub
pop
mov
pushf
adc
push
push
cmpsb
jbe
push
cmpsb
xorl
jp
dec
adc
dec
jmp
outsb
cmp
or
inc
mov
test
pop
dec
mov
fadds
lahf
sub
jle
xor
or
pop
add
test
clc
xchg
aaa
fcmovu
push
ljmp
aam
pop
push
jns
dec
inc
pop
pop
test
ret
fs
popa
mov
cmp
add
pop
pop
imul
in
es
or
jl
cmpsb
loopne
inc
pushaw
js
dec
repz
movsl
aaa
arpl
adc
and
push
jo
dec
mov
notb
jg
push
in
imul
inc
push
push
dec
dec
shrb
ljmp
jle
jl
or
or
jbe
fwait
fs
add
lock
add
sub
mov
ljmp
ss
lods
daa
inc
je
dec
dec
dec
js
xor
aaa
fs
pop
shl
pusha
mov
fprem
icebp
rcrb
xchg
loop
fiaddl
push
rolb
dec
mov
lea
or
scas
stos
mov
aaa
lcall
dec
mov
cmp
aad
sub
rol
fucomi
je
mov
mov
fidivrs
outsb
mov
cmp
mov
sarl
jg
popf
cmpsb
pushf
push
loop
pop
fnstenv
xchg
clc
and
cli
adc
or
movsb
popf
adc
add
lods
sub
test
ja
mov
jg
add
xor
mov
or
sbb
pop
fdivl
mov
js
pusha
push
push
inc
out
add
test
adc
push
addl
stos
push
lret
pop
mov
out
xchg
jl
add
movd
pop
jp
mov
loopne
cmp
icebp
in
cmc
ljmp
sbb
out
movsb
dec
push
addr16
add
cld
popa
dec
jmp
push
mov
sub
cltd
movsb
xor
hlt
and
rolb
adc
mov
xchg
mov
mov
adc
jbe
shll
or
test
loop
lock
cmpb
add
sub
mov
movsl
mov
je
mov
pop
jne
ret
int3
push
jo
fbstp
inc
mov
loopne
inc
pop
ja
xchg
or
xchg
jmp
mov
sub
repz
inc
push
ds
ret
out
cmpb
mov
jno
popa
lods
push
mov
clc
adc
push
loop
push
call
jle
pop
es
dec
jmp
pop
pop
test
in
add
in
push
lea
and
popf
adc
and
sub
ljmp
sub
shll
sbb
arpl
dec
add
mov
out
out
add
cs
cmp
cmpsb
jmp
divl
or
daa
dec
dec
jge
stos
pop
int
movl
cmp
add
pushf
push
mov
sbb
outsl
push
pop
arpl
icebp
or
repnz
cld
sub
sbb
loop
call
cmc
or
jg
ja
mov
or
push
test
push
sbbb
popf
icebp
les
or
add
out
adc
int
adc
jbe
fdivr
addb
add
jnp
xchg
and
fucomp
cltd
and
ljmp
sub
xor
xorl
sbb
pop
cwtl
lret
rolb
mov
add
fwait
ss
scas
cmp
aad
adc
sbb
lds
push
call
xor
int
push
pop
int
push
cmp
loop
sti
aas
inc
xor
std
mov
loopne
test
ds
lret
sti
leave
xor
and
leave
jmp
jle
sub
jecxz
pusha
jl
movsb
sub
mov
pushf
push
stc
inc
xchg
xor
xchg
pop
ja
jge,pt
mov
pop
push
dec
fbld
or
xor
mov
add
clc
shrl
or
xchg
push
lock
add
sub
rclb
je
cmp
ljmp
xor
aad
movl
inc
xchg
pushf
push
bound
fwait
aam
scas
mov
xchg
not
lcall
hlt
shl
sub
stos
fcompl
popl
xchg
mov
andb
insb
sub
aas
sbb
ds
int3
dec
pushf
push
mov
mov
inc
or
addr16
out
mov
mov
jnp
addl
in
sbb
or
jle
mov
enter
loop
daa
push
pop
jmp
fwait
xchg
test
dec
push
xchg
sbb
jle
sbb
pop
fld
and
push
sbbb
ljmp
or
iret
pop
push
loopne
xchg
call
jbe
pop
hlt
inc
lock
cmp
push
inc
mov
mov
push
and
icebp
mov
loop
fldl
rolb
rol
cmp
ja
fcompl
dec
jmp
push
lcall
je
or
jbe
push
pusha
sti
mov
pop
sub
inc
pop
pcmpeqb
push
mov
sub
jne
sbb
pusha
xchg
mov
pop
dec
sbb
mov
bound
cmp
cmpl
mov
outsl
and
pop
mov
fidivl
jmp
dec
data16
fadds
ljmp
inc
mov
inc
or
loope
lahf
icebp
jecxz
mov
push
ret
inc
insl
mov
loopne
dec
adc
mov
ja
xchg
test
addb
sub
push
pop
movsl
aaa
out
and
and
insb
lock
fstps
inc
jge
lods
pop
inc
lcall
and
lret
mov
dec
or
mov
or
je
js
lret
pusha
std
inc
data16
add
pop
fnsave
dec
cmp
xchg
xchg
ss
loopne
xor
lods
fnsave
pop
mov
dec
inc
or
dec
mov
imul
movsb
out
test
shl
movsb
or
sub
pop
mov
iret
pop
add
xlat
mov
stos
cmp
jne
sahf
inc
or
insb
mov
xchg
jnp
adc
dec
cmp
push
mov
cs
adc
push
xchg
sbbb
and
test
jne
fxch
jb
xchg
add
stos
test
popa
ds
leave
insb
aas
jle
jne
mov
or
pop
and
mov
test
leave
pop
ror
fsub
xchg
popl
add
or
push
subb
ret
shll
push
add
or
loopne
cs
lds
sarb
sbb
dec
push
add
push
and
fcomps
aad
cmpl
or
adc
es
pushf
push
lahf
mov
adc
cmc
push
cld
xchg
jb
xchg
mov
push
push
push
mov
lods
or
leave
xchg
ret
ret
gs
jg
and
add
mov
lret
das
or
mov
test
popa
aas
in
inc
shl
incl
sub
cmc
out
pause
rclb
mov
loopne
subl
push
jg
jg
addr16
inc
push
add
bound
dec
inc
xchg
adc
mov
rcll
mov
push
xor
push
js
xor
add
imul
mov
cmp
add
inc
add
xchg
jns
jne
inc
xor
add
mov
jo
subl
in
pop
sbb
xchg
dec
fs
cmp
out
jns
pop
int3
jle
inc
and
mov
cmpsb
mov
add
dec
cmp
test
mov
mov
cmp
push
add
and
push
jns
or
push
adcb
mov
into
lret
test
test
push
add
out
aas
lea
push
inc
mov
dec
cmp
pop
add
rorl
out
imul
jecxz
inc
inc
push
cmp
jo
lock
and
push
shlb
xlat
mov
arpl
inc
mov
push
inc
outsb
mov
subb
in
pop
inc
mov
sti
inc
sub
xorl
jb
and
push
push
pop
cli
dec
xor
push
loope
ss
xor
addr16
movsl
xchg
mov
mov
jle
mov
je
dec
je
enter
mov
sub
repz
stc
jae
rclb
push
bound
inc
dec
add
lret
pop
int3
sub
jnp
cltd
dec
push
ret
pop
pop
mov
cli
and
cmp
shll
aas
lcall
addb
ret
add
clc
pop
add
out
add
andb
ret
jecxz
ret
push
push
fldl
dec
cli
outsl
xor
dec
inc
cmp
inc
fldl
dec
lret
mov
push
data16
insb
xor
test
fstl
dec
sbb
dec
jns
inc
inc
mov
into
inc
out
cmp
decl
and
arpl
add
lret
loopne
push
rcrb
add
pop
push
push
js
addl
mov
fildll
xlat
loope
sub
push
imul
roll
pop
mov
dec
gs
into
or
cmp
xor
inc
adcb
cmp
inc
dec
outsl
inc
inc
dec
pop
add
mov
mov
scas
inc
dec
jl
mov
push
outsb
jbe
fidivs
ret
lsl
inc
jno
mov
cs
fidivs
fs
cwtl
fcmovne
or
ljmp
dec
mov
pop
imul
xor
imul
enter
stos
add
inc
inc
insl
outsl
gs
inc
std
dec
gs
sub
adcb
xchg
je
xlat
loopne
addl
imul
xlat
dec
cltd
dec
inc
and
adc
add
mov
jns
jb
lods
mov
mov
adc
jns
jecxz
and
and
dec
test
push
adc
cmp
push
jmp
push
push
dec
pusha
std
imul
dec
pusha
cmp
sbb
add
jecxz
inc
movsb
inc
xor
leave
and
mov
addr16
jl
out
pop
jmp
fadd
inc
addr16
loopne
jp
mov
enter
jo
nop
inc
xor
dec
sarl
loop
dec
push
fsubr
outsl
xor
icebp
mov
cs
mov
cltd
movsl
cli
ret
loop
mov
push
std
mov
int
inc
inc
inc
inc
mov
shlb
pop
jbe
push
jne
push
push
scas
movsb
inc
sbb
mov
popa
ja
dec
inc
icebp
inc
push
inc
mov
je
fsubp
loopne
shll
push
lret
cmp
in
les
mov
inc
jge
jp
stos
add
outsb
call
cld
mov
adc
add
lock
lret
jg
loopne
jecxz
out
jl
sbb
cmp
addr16
aas
imul
add
or
aaa
sbb
xchg
lods
xchg
cmp
bnd
adc
push
test
dec
mov
jge
and
jne
cmp
addb
bound
sub
jo
jp
stos
xchg
jb
jne
sbb
lods
or
es
push
cltd
ljmp
rolb
mov
mov
bound
sti
mov
test
ss
mov
add
loopne
add
inc
sbb
popf
mov
mov
or
add
or
xor
outsl
fiadds
and
push
adc
pop
pop
or
and
outsl
mov
call
je
cld
sub
and
push
mov
ds
mov
cltd
cmpsb
sahf
ja
pop
sbb
ret
xchg
jecxz
xor
mov
inc
aas
dec
add
push
inc
dec
dec
add
pop
insl
pop
xchg
push
cwtl
icebp
mov
in
push
into
je
insb
into
sub
adc
lahf
pop
shrb
mov
sub
lods
xchg
or
adc
jle
pop
mov
test
insb
fucom
and
orb
cmp
fsub
sub
test
daa
ljmp
mov
push
sub
out
test
add
sub
incl
push
lock
mov
mov
push
xor
jo
add
or
xor
adc
xorb
sbb
inc
negl
int3
adc
shlb
add
lods
dec
push
add
stos
jbe
sarl
adc
jo
mov
outsl
je
stos
leave
dec
xor
or
les
jecxz
jne
es
pushf
cltd
cmp
mov
cwtl
add
add
shlb
cmp
dec
mov
movsl
and
adc
xchg
push
nop
loop
push
daa
rcrb
mov
test
in
fwait
loopne
daa
inc
mov
incb
aaa
inc
or
js
loopne
pushf
notb
xchg
or
rcrl
push
or
movsl
jnp
std
inc
imul
shlb
xchg
js
pop
fcomps
pop
loop
inc
inc
xor
sahf
dec
cmpsb
mov
into
inc
das
jg
or
aam
and
push
jecxz
xor
xor
sbb
cld
push
lds
sub
hlt
dec
and
push
push
mov
add
pop
push
sub
repnz
aad
icebp
sbb
xchg
out
aas
ss
jae
xchg
pop
xchg
test
jle
lret
out
push
mov
pop
stc
sti
push
js
add
popl
lret
gs
arpl
sbb
mov
lea
push
jmp
push
mov
fwait
test
cmpsb
sub
jo,pn
cmp
pop
pop
mov
sbb
sub
sbb
sbbl
cmp
lods
sbb
je
jne
popf
adc
es
lods
xchg
or
mov
inc
loope
or
sbb
pop
xor
lods
jl
jo
mov
dec
popf
add
pop
pushf
mov
lods
lret
cmp
in
addl
jmp
dec
scas
push
outsl
cmp
rcr
shll
adc
ja
std
fisubs
outsl
mov
fmull
jbe
or
add
push
hlt
mov
pop
ja
mov
mov
lock
mov
stc
loopne
lcall
movsl
rcl
pop
dec
jno
dec
or
sbb
add
test
sub
xchg
addb
xor
dec
dec
push
orl
lcall
aas
int
pop
in
and
sti
and
rolb
push
ficompl
cmp
push
out
insb
xchg
fidivs
loopne
repz
ja
cld
cwtl
mov
or
xor
es
out
push
mov
adc
mul
out
and
xchg
or
mov
xchg
jne
lods
pop
push
fidivrl
xchg
push
xor
lock
add
mov
push
pop
int
or
sub
clc
std
stc
pop
add
push
loope
push
incl
frstor
and
aad
mov
scas
es
cs
jl
add
mov
sti
sahf
cli
and
adc
xchg
das
mov
sbb
orl
push
mov
jns
xor
xor
push
push
loopne
sbb
jb
test
sar
leave
fcmove
pop
mov
add
jp
mov
lock
push
or
mov
pop
pusha
xlat
lret
test
scas
xor
push
xlat
dec
gs
lods
push
jg
mov
movsb
jl
mov
sbb
pop
jno
and
sbb
mov
sub
dec
inc
sub
dec
mov
clc
aas
adc
jl
jl
add
nop
out
jno
imul
insb
lret
dec
cli
lds
dec
jno
inc
add
adc
iret
nop
test
inc
add
ret
sti
sub
dec
jle
xor
add
cmp
outsl
outsb
pop
jo
stos
dec
jbe
add
inc
pushf
dec
dec
dec
arpl
inc
pop
loopne
dec
mov
stc
sub
xor
je
bound
imul
mov
dec
push
jo
inc
sahf
mov
xor
pop
dec
pop
ja
lock
xor
add
dec
mov
push
shrb
popa
push
xor
test
lock
inc
xchg
loopne
shrb
pop
fisubl
shlb
popa
pop
inc
dec
adc
add
or
push
push
in
call
out
cli
dec
push
rorb
daa
adc
push
mov
mov
movsb
dec
dec
daa
inc
inc
shrb
scas
inc
push
inc
and
pushf
das
clc
xorl
cmp
inc
inc
sbb
push
test
mov
inc
fs
ret
or
jle
or
add
test
pop
add
or
mov
ret
pop
int3
cmpsl
add
add
std
add
mov
dec
shl
fdivrl
daa
inc
mov
in
jl
movsb
daa
mov
dec
and
ja
jg
or
add
test
cli
roll
add
mov
sub
pop
dec
cs
inc
sbbb
dec
mov
out
cmp
int
xchg
cmp
adc
jbe
iret
push
loop
ficoml
imul
ffreep
pop
mov
ljmp
loopne
jecxz
xor
ljmp
mov
addb
xchg
shr
jae
jnp
pop
xchg
fwait
insl
jp
loopne
mov
xchg
or
pop
test
aaa
enter
mov
ficomps
fimuls
push
jecxz
add
or
in
or
hlt
and
mov
pop
push
sbb
mov
jl
neg
inc
mov
fsts
xorb
mov
and
sub
dec
ror
fs
out
sub
js
adc
pop
xchg
adc
or
mov
std
mov
cli
add
inc
cmp
mov
push
into
push
jge
xor
sbb
add
cwtl
in
aas
icebp
mov
sbb
mov
push
adcb
pop
push
cwtl
cmp
push
aad
jmp
and
push
push
and
outsb
incb
jl
push
adc
cwtl
dec
js
pop
pop
cmp
movsb
ljmp
lahf
shr
ja
add
sbb
leave
mov
testb
sbb
sahf
andl
xadd
push
push
ja
fs
push
jo
ja
loopne
stos
inc
data16
fdiv
mov
inc
mov
mov
pop
jp
xchg
add
pop
pmuludq
pop
cli
rol
cmp
pop
lea
xor
push
jmp
mov
push
mov
mov
es
pop
mov
mov
nop
mov
rcr
decl
lods
rolb
jo
dec
push
mov
lock
or
mov
int
or
sbb
test
clc
insl
mov
popa
repz
in
mov
jle
mov
cmpsl
gs
repnz
call
cltd
scas
imul
sub
push
notl
test
int3
int
mov
xchg
movsb
add
dec
xor
and
loop
dec
mov
sub
adc
push
cmp
inc
in
scas
out
ljmp
les
popl
mov
add
mov
jecxz,pn
loope
decl
out
pop
push
jnp
xchg
ffree
pop
pusha
mov
cmp
stc
or
mov
pop
sbb
dec
scas
push
popa
pop
jns
lock
adc
mov
dec
clc
dec
pop
ja
loopne
cmp
ljmp
cmp
gs
add
sbb
ja
add
push
hlt
adc
cmpsl
mov
mov
mov
mov
and
add
js
sbb
or
mov
inc
lds
and
sbb
sub
xor
pop
push
rcrl
jecxz
jmp
xchg
push
mov
xchg
jbe
mov
mov
lock
lcall
lcall
or
pop
pop
inc
fcomp
cmp
xchg
push
inc
pop
es
cli
jecxz
mov
mov
inc
jge
negl
mov
mov
pop
mov
sbb
mov
mov
outsb
and
and
dec
mov
inc
out
pop
mov
adc
mov
in
xorl
call
mov
subb
jno
cld
fbstp
or
lock
mov
inc
or
lcall
or
cwtl
cmp
enter
jae
xchg
push
sub
jle
cli
popa
std
adc
std
rcr
dec
lock
dec
xchg
xor
sbb
dec
fsubrs
cld
lea
sub
push
mov
insl
inc
mov
shlb
xchg
das
xor
mov
daa
mov
mov
push
cltd
hlt
rcr
adc
cmp
cld
mov
mov
sub
bound
fs
cmp
bound
xchg
incl
fildll
ljmp
sub
add
std
pop
mov
mov
lds
ret
push
ret
push
jg
fisttpl
sub
shlb
jecxz
mov
into
andb
je
scas
lock
in
cmp
test
subl
stos
aaa
mov
cmpsb
inc
xor
daa
push
mov
arpl
or
shlb
jns
nop
dec
rorb
imul
inc
pop
xchg
adc
mov
dec
aad
xchg
add
pop
call
arpl
scas
stos
lock
outsb
test
jp
xchg
outsb
int3
lcall
ret
fwait
inc
pusha
and
fwait
out
push
cmp
mov
fsubrs
fstl
sbb
stc
scas
out
jp
or
cs
cwtl
push
push
nop
outsl
sub
push
ja
popf
add
out
clc
xchg
fdivrs
inc
adc
jge
add
inc
mov
jo
push
mov
pop
push
ss
jp
mov
jnp
sbb
and
xlat
inc
mov
ja
cmpb
testb
add
ret
std
loope
dec
pop
xor
fistps
mov
push
movsb
push
stos
ficomps
in
cld
mov
jno
and
cld
andb
shrb
mov
std
xchg
lcall
xor
std
pop
push
or
and
mov
cmp
dec
rcrb
adc
js
jb
clc
popf
shrl
das
sub
fcmove
push
popa
adc
rclb
sti
fadds
cli
outsl
jl
dec
divb
and
or
aaa
mov
rcrl
jno
gs
dec
xchg
inc
std
ja
or
jne
call
imul
je
mov
cmc
aam
roll
adc
outsb
push
clc
add
xchg
push
mov
bnd
sub
jmp
insl
xchg
cmp
or
rcrl
add
jne
mov
sub
sar
xchg
inc
push
or
enter
les
ljmp
hlt
mov
lods
pop
pop
ja
ucomiss
dec
shlb
test
lea
mov
movsl
int
insb
iret
or
inc
jb
inc
push
pop
lods
call
js
cli
add
jg
mov
xor
cmp
test
addb
cmp
ja
shrl
push
mov
testl
sub
lahf
jl
push
mov
jmp
xchg
push
or
pop
sbbb
icebp
jg
or
ret
ja
ret
out
add
sar
pop
aam
addr16
movsb
lcall
cmp
push
pop
cmp
jnp
in
dec
xor
fists
add
icebp
loop
imul
sti
les
out
pop
out
cmp
push
push
ret
loopne
in
ljmp
movl
add
data16
mov
mov
rcrb
dec
add
inc
or
push
sbb
pop
lock
inc
xor
inc
pop
dec
push
add
mov
dec
sbb
lret
or
jp
orl
inc
inc
sarb
xor
dec
mov
mov
sbbb
movsb
addb
inc
jo
arpl
lret
clc
mov
test
inc
cld
sti
pushl
dec
dec
push
add
sub
cmp
jb
mov
sbb
rcr
or
xor
xchg
inc
les
push
add
in
jo
int3
bound
sbb
inc
xlat
mov
inc
adc
push
push
pop
imul
ficompl
aam
xchg
add
mov
jmp
inc
xor
pop
add
loop
mov
sub
cwtl
push
push
fldt
and
js
or
ret
push
addr16
bound
push
pop
adc
jns
cli
or
adc
addr16
sbb
addr16
add
test
or
sbb
ss
lcall
ret
pop
jns
dec
cld
gs
insb
arpl
mov
roll
fnstcw
and
push
mov
dec
aaa
mov
je
add
add
xchg
dec
arpl
or
cltd
jb
pcmpgtd
nop
arpl
fst
pop
fldl
push
fiadds
xlat
test
jecxz
test
dec
xor
insb
inc
jae
push
jo
and
push
dec
fimuls
push
cmp
jmp
fsubr
sti
ret
pop
test
inc
sbb
add
inc
scas
cmp
xor
sub
shrd
push
cmpsb
test
pop
andb
fildll
mov
xor
stos
ljmp
inc
push
fs
fisttpl
aas
icebp
sbb
popa
orw
add
cmp
and
outsb
std
aas
inc
xor
mov
push
push
adc
push
jbe
scas
leave
sbb
notb
add
fsubrs
add
arpl
mov
pop
popf
cmp
stos
je
enter
push
xchg
mov
push
add
jo
and
push
jge
mov
movsl
push
mov
enter
movsl
movsl
mov
pop
lret
ja
rep
xor
pop
popf
cmc
adc
jns
lock
or
or
fs
jo
aam
in
jecxz
mov
pusha
mov
movsb
jae
mov
push
nop
add
test
into
pop
inc
xchg
add
pusha
lods
jnp
push
incl
mov
mov
xlat
cmp
nop
mov
call
ss
repz
cmpsl
mov
dec
outsb
push
pusha
clc
scas
push
or
repz
push
adc
push
sbbl
pop
jo
leave
arpl
ljmp
sub
jo
lds
xchg
leave
mov
sub
sbb
push
cmpsb
cmpl
mov
mov
adcb
jecxz
icebp
out
sub
add
icebp
ret
jecxz
lock
push
mov
add
not
lret
cs
inc
in
xor
cli
ss
das
popl
xchg
imul
sub
or
jl
xchg
or
sarl
loop
push
ds
shlb
fildl
aam
shll
shlb
or
popa
mov
inc
enter
out
negl
sub
pop
push
fbld
inc
xchg
pop
pop
jmp
mov
dec
test
push
sbb
insb
cli
mov
push
or
pop
stc
jno
repz
mov
mov
ret
imul
aad
sub
lahf
outsl
cmpsb
xchg
pop
jle
fistpl
clc
cmp
mov
insb
sysret
cs
and
icebp
jb
and
gs
sbb
mov
sar
add
pop
push
rol
sub
dec
jl
sub
sbb
inc
add
lock
fcomi
xchg
push
call
das
mov
xchg
pop
je
push
or
and
or
ja
icebp
xlat
lds
jl
jg
jno
sbb
add
xchg
stos
xor
jno
adc
inc
pop
in
ret
dec
sahf
mov
test
or
pop
sbb
neg
dec
pop
mov
jns
scas
xlat
xchg
and
or
iret
push
cmp
ljmp
pusha
jbe
or
jmp
clc
jmp
inc
inc
cwtl
loopne
sbb
sbb
mov
lahf
sub
cs
mov
add
cmc
incb
mov
xchg
xor
ja
out
mov
sti
cmp
add
mov
js
in
shr
push
addl
sbb
test
fldl
loopne
cmc
or
jge
cmpl
rol
add
pop
dec
sbb
push
mov
and
jge
mov
add
addl
pop
jnp
or
sti
jns
push
outsb
fidivrl
dec
or
add
mov
and
hlt
adc
and
sub
mov
jmp
rolb
sbb
aam
add
ret
inc
rolb
out
pop
jbe
sti
orb
mov
and
popw
test
jge
or
add
pop
add
repz
mov
xchg
jne
push
jmp
pop
dec
xor
sub
mov
cwtl
shl
imul
push
arpl
jmp
aad
push
outsb
inc
mov
push
mov
cmp
adc
mov
cmp
jp
mov
or
rorl
imull
jb
pop
mov
jno
add
cmp
incb
setl
sub
inc
sub
push
dec
adc
lock
push
jge
push
lret
aad
mov
mov
add
aas
mov
xchg
push
pop
inc
add
push
push
xchg
xchg
mov
sbb
or
inc
dec
icebp
sub
icebp
aas
push
pop
push
scas
mov
leave
movsl
inc
call
inc
adc
int
ret
popa
into
ret
or
inc
mov
xchg
add
int3
or
or
rorl
or
add
adc
add
aaa
add
loope
dec
cli
dec
xor
jg
push
les
xor
xchg
ja
inc
dec
dec
add
inc
pushf
push
enter
jg
jns
push
push
push
mov
cmp
cmpsl
jb
cld
or
jns
and
mov
sub
jle
arpl
sbbb
ljmp
add
lcall
lods
pop
sbb
lock
aad
mov
sbb
in
shrl
cli
sbb
fdivrl
inc
xchg
addr16
sub
shll
sbb
fldenv
cld
add
ljmp
ljmp
sti
fisttps
sarl
decb
and
dec
jno
mov
mov
xchg
fsubs
and
pop
xor
in
rcrb
ljmp
cli
pop
mov
cli
repz
inc
cwtl
std
xor
fdivp
xchg
mov
or
in
mov
mov
pop
test
push
or
orl
and
clc
cli
mov
push
rcll
push
sub
icebp
sahf
pop
testl
mov
xlat
sbb
les
mov
mov
sbb
add
ja
movsl
push
jno
mov
or
xchg
mov
jmp
add
testl
push
mov
xchg
notl
pop
shrb
and
sbb
jo
pop
repnz
dec
pop
hlt
ja
and
rorb
loope
lds
icebp
pop
stc
cmp
std
xchg
dec
sub
cli
add
add
ret
push
push
or
add
mov
cmp
call
in
sarb
mov
adc
outsl
bound
push
ret
roll
imul
mov
jnp
shl
nop
cs
jle
sub
or
mov
lock
jle
std
adc
pop
mov
or
sub
js
lret
fs
sub
jo
pusha
shl
inc
loopne
sti
or
push
add
test
call
and
add
jg
mov
dec
cmpsb
sahf
mov
shlb
cmpsl
jno
clc
add
into
pop
pusha
and
pushf
sahf
rolb
adc
mov
pushf
jae
and
mov
dec
sub
add
ja
sbb
out
mov
clc
jge
ja
xchg
in
pop
adc
loope,pt
jle
cmc
or
outsb
in
mov
rcl
outsl
xlat
sub
mov
add
jo
push
jo
mov
in
loopne
daa
adc
jl
sbbb
je
scas
xorl
mov
shr
aad
dec
mov
pop
je
daa
lods
cmp
inc
fisubl
fcomp
loopne
mov
cmpsl
enter
imul
mov
rclb
jb
mov
inc
mov
pop
sub
sub
rcrl
out
dec
or
cmp
mov
je
mov
call
aas
ja
inc
or
add
inc
gs
sub
sbb
fsubl
les
loope
pop
pop
sbb
mov
or
out
mov
loope
ficoms
jo
and
scas
mov
mov
add
push
push
jle
int3
add
adc
mov
imulb
mov
dec
stos
and
adc
cmpsb
sub
popa
mov
mov
xchg
cmp
push
push
cmp
mov
scas
cs
adc
lock
lret
or
xor
push
and
or
lcall
ljmp
cmpb
cmp
fcoms
push
push
push
pop
hlt
inc
enter
lcall
sbb
neg
movsl
push
add
ds
sti
dec
js
xor
orb
sbb
add
xchg
sbb
outsb
movl
scas
jp
shll
adcl
mov
cmp
push
out
mov
daa
insb
cmp
lock
xor
push
adcb
ja
cmovns
pop
add
push
mov
movsl
addr16
rclb
cmc
outsl
cli
xor
loopne
daa
push
jo
mov
cmp
mov
pop
push
imul
pop
or
push
mov
mov
into
scas
std
xor
cmp
jnp
shlb
into
push
loopne
loopne
sub
adc
scas
push
mov
movsl
and
not
and
cwtl
into
in
sahf
jmp
dec
and
lahf
and
fildll
hlt
stos
ret
xchg
or
dec
jp
jbe
sub
jecxz
fadds
cmp
ljmp
out
sbb
clc
lods
mov
mov
xor
dec
sub
fwait
xor
pop
dec
inc
mov
movsl
pop
clc
pusha
add
push
popa
rclb
dec
jp
inc
adc
adcl
pop
sbb
aad
sub
push
lcall
ret
jg
inc
mov
test
and
stos
ss
lock
xor
sub
enter
idivl
out
lock
lods
xchg
or
pop
push
in
stos
andl
jmp
in
out
les
je
cld
mov
cmc
mov
dec
outsb
or
push
sub
xchg
out
inc
push
xchg
ret
mov
fisubrl
test
imul
fwait
xor
add
inc
pop
sbb
cmp
addb
adc
inc
ficomps
sbb
sub
mov
cmpb
testb
cmc
lret
addl
xor
push
test
xchg
lahf
lea
sbb
cmp
hlt
nopl
pop
dec
cmp
imul
scas
pop
in
outsb
cmp
in
cmp
pusha
adc
inc
pushf
call
jp
clc
push
clc
mov
lods
jo
xchg
sub
and
loop
add
pop
loopnew
mov
ja
mov
stos
mov
inc
shlb
add
jg
dec
push
inc
xor
dec
push
pushf
mov
mulb
adc
and
nop
xchg
cmp
fwait
xchg
jbe
icebp
push
add
sub
fwait
mov
mov
andb
mov
push
adc
ds
add
dec
das
pop
outsl
mov
in
cli
mov
imul
shll
jnp
jbe
dec
scas
ljmp
jle
das
xor
pop
jbe
outsl
cli
sahf
xchg
add
pushf
or
movl
outsb
stos
mov
add
and
cmpsl
or
cmp
inc
pusha
jle
loope
decb
lods
add
pop
adc
dec
cmpsb
mov
fwait
and
bnd
nop
cmp
jecxz
adc
mov
add
sbb
push
dec
or
or
decl
popa
sbb
nop
dec
inc
push
or
int3
out
push
jmp
add
or
popa
and
inc
adc
mov
jg
call
pusha
call
enter
cmpsl
xor
and
or
adc
lock
subb
cli
test
add
adc
stos
out
jo
insl
cmp
dec
std
sbb
and
call
lcall
pop
std
stc
add
bound
inc
and
ltr
or
xchg
mov
aad
cmp
ret
xchg
ja
cmp
xchg
std
bnd
cmp
dec
cmp
jecxz
cmpsb
data16
pusha
fcmove
test
mov
sbb
loopne
fs
fs
fcomps
add
lcall
jmp
dec
outsb
inc
ds
xor
jo
mov
mov
test
js
jae
loopne
and
je
xchg
mov
loop
mov
shrb
add
push
rolb
mov
dec
mov
lret
mov
push
js
stc
jb
dec
popa
push
jmp
les
ljmp
lcallw
or
test
adc
push
test
mov
xor
ja
or
lahf
inc
aaa
or
push
and
int3
inc
add
adc
push
cmp
sub
inc
jmp
mov
dec
inc
jle
clc
xor
or
loopne
sub
test
iret
and
cwtl
and
sub
rolb
inc
jb
das
xor
inc
jno
inc
add
ret
lret
inc
add
movsl
mov
loop
pop
dec
inc
mov
cld
xor
cli
adc
outsb
jb
je
inc
add
out
xor
loope
mov
stc
cmp
jl
mov
outsb
js
call
outsl
pop
jecxz
pushf
xor
dec
inc
jg
popf
or
lds
lahf
mov
ss
repz
add
repnz
popa
xor
lock
lock
xchg
pop
inc
pop
jbe
push
ret
jo
in
add
dec
call
mov
inc
lods
and
or
jb
add
lahf
mov
inc
je
mov
popaw
xchg
xor
inc
orb
outsb
and
inc
lock
mov
subl
cmp
out
cmp
and
lods
inc
sbb
jmp
jbe
jg
pusha
jle
in
inc
inc
jae
mov
push
or
inc
mov
jle
lret
xchg
push
push
es
cmp
cwtl
or
jo
xchg
mov
inc
nop
rolb
xor
cs
int
push
mov
test
inc
pop
adc
insb
out
in
cmp
mov
add
fistpl
add
je
push
xor
fs
add
dec
rcrb
xor
mov
xor
in
lcall
sbb
dec
jl
decb
pop
inc
inc
je
les
or
rolb
xor
jne
cld
xchg
orb
into
cmp
pop
cmp
sub
push
dec
dec
gs
in
imul
loope
out
mov
dec
bound
and
dec
inc
dec
out
ljmp
mov
fisttpll
cmp
aam
mov
push
push
test
sbb
mov
add
je
jecxz
push
jo
dec
pop
or
and
jns
outsb
push
cmc
cwtl
fmull
out
repz
cld
ljmp
dec
xor
stc
repz
xor
push
dec
insl
inc
pop
add
sub
xor
cmc
gs
xchg
cmp
pop
dec
jb
data16
jne
jl
insl
arpl
push
sub
mov
cli
xor
xor
inc
mov
jae
je
dec
add
push
gs
ja
dec
inc
loopne
push
shlb
aas
ficomps
mov
dec
push
int
aaa
outsl
dec
xor
cli
cmp
xchg
dec
lock
add
mov
sbb
jno
lret
call
daa
sub
aam
adc
inc
aad
xor
ds
iret
adc
xadd
sbb
add
aam
dec
loopne
mov
and
fstpl
ret
inc
push
inc
and
cmp
cmp
push
repnz
pop
jb
cmc
cmc
sub
xchg
sub
and
fimuls
and
push
push
push
pushl
push
dec
ja
inc
fcomps
pop
push
or
nop
repz
inc
dec
mov
flds
sarl
gs
or
push
jl
adc
ss
jmp
fadd
dec
fadds
sbb
je
sub
pop
push
outsb
push
imul
jno
mov
test
int3
mov
jbe
mov
aaa
cmp
mov
out
andb
insb
push
les
push
test
out
les
loop
shlb
call
xor
mov
dec
aaa
push
adc
xor
arpl
in
movsb
fisubl
inc
cmc
ss
adc
imul
xor
cmpsb
push
push
xlat
bnd
sub
pop
call
fsubs
je
add
jno
popf
sbb
sbb
cmp
mov
mov
mov
lahf
mov
inc
pmullw
fwait
cmpb
ss
out
push
pop
mov
push
outsb
push
ficomps
jne
mov
xor
das
jns
outsl
ret
pop
mov
inc
mov
inc
inc
sbb
pop
inc
loope
cltd
ret
scas
ret
ljmp
cmp
mov
sbb
jbe
dec
and
xor
data16
mov
cmp
ja
dec
dec
or
mov
mov
sbb
push
popa
outsl
pop
lahf
push
dec
addl
dec
jne
dec
ja
jle
clc
ss
bound
inc
add
dec
add
mov
sub
mov
dec
push
pop
and
cmp
mov
pop
add
push
cld
adc
push
add
xchg
test
cmp
mov
push
or
add
sbb
jmp
ja
xchg
in
ja
out
sub
jns
cmc
add
xchg
adc
add
mov
push
ljmp
jle
idivb
lcall
adc
xor
lahf
int3
fcom
mov
mov
cmp
and
xor
out
rcrb
clc
pop
add
sbb
sbb
ja
jp
ljmp
jp
pusha
or
ja
fwait
scas
shlw
sub
sub
mov
data16
ja
pop
adc
iret
add
adc
call
fildll
mov
xchg
into
xor
addr16
mov
ja
jmp
ja
pmaxsw
mov
xchg
sbb
enter
ja
daa
popf
dec
pusha
sar
or
or
pushl
inc
outsl
fists
push
into
add
pop
scas
mov
cmpb
mov
fs
cmp
sti
jecxz
add
dec
mov
pop
dec
lret
sub
inc
sbbb
cld
cmpb
adc
out
les
stc
xor
pop
jp
fisttpll
mov
int3
dec
jg
cmc
call
inc
das
outsb
cmp
add
lret
dec
out
xor
mov
clc
rcll
rol
xchg
jg
pop
xlat
jo
fisubs
ja
cmp
mov
dec
and
adc
inc
sbb
dec
add
add
sahf
pop
xor
xor
add
mov
and
dec
xchg
jp
dec
test
rcrl
outsb
in
ja
cmp
repnz
xchg
fs
jg
jo
jnp
ja
daa
lcall
inc
jg
push
xor
inc
sub
rcrl
or
sbb
das
std
adc
sub
xchg
in
aam
loop
or
xor
ret
push
test
es
decb
push
mov
cwtl
inc
xor
jecxz
les
ja
nop
xchg
mov
ss
xor
aaa
xchg
ret
ja
mov
cmpsl
das
ja
lret
push
std
mov
outsb
sbb
mov
cwtl
or
sbb
pop
add
int3
push
lods
mov
fcoml
jmp
lcall
lcall
insb
xchg
xchg
mov
mov
mov
imul
in
sub
sbb
sbb
push
lcall
sti
jo
add
inc
xchg
into
aad
shl
cli
movsl
dec
je
push
pusha
jge
mov
lea
push
mov
pop
pop
lret
orl
add
sbb
push
push
test
adc
add
clc
loop
ljmp
push
daa
aam
je
mov
jne
xor
out
lock
sbb
test
and
cs
les
sub
xor
call
inc
hlt
and
lahf
adc
ja
or
aam
or
and
roll
xchg
push
sbb
add
add
ja
xchg
pop
push
adc
ja
push
int3
jb
adc
adc
dec
mov
and
arpl
mov
adc
cmp
lds
fwait
sti
mov
jne
or
push
iret
test
mov
cmp
jo
fwait
push
mov
ja
call
jmp
daa
pusha
adc
scas
dec
fsubrs
xor
repnz
sub
daa
cli
stos
sbb
in
push
icebp
sbb
stc
fidivrs
mov
jmp
mov
rorb
dec
fistpll
ja
push
ret
sub
cmpsb
stc
stos
xor
pop
xor
add
jbe
rorb
push
je
pop
pop
xor
out
adc
dec
mov
mov
push
rcl
and
divb
movsl
push
cltd
lods
es
enter
mov
adc
add
add
addl
scas
xor
push
cmp
cltd
les
data16
fmuls
leave
aaa
sub
and
addr16
mov
fadds
and
push
je
dec
jg
inc
inc
aaa
fisubrl
in
mov
sbb
ja
outsl
mov
daa
jnp
add
mov
aaa
push
adc
cwtl
push
pop
add
add
sbb
push
test
mov
enter
testb
in
sub
jb
int3
push
fildl
add
mov
ja
mov
pop
pop
add
xchg
outsb
inc
sbb
push
push
sbb
sbb
cmpsb
or
icebp
xor
sub
sbb
loopne
loop
sbb
fnstenv
orb
xchg
pop
lea
inc
xchg
dec
lock
push
ret
call
lret
adc
push
jmp
mov
cmp
sub
jo
cmp
mov
cmp
fildll
pop
ss
add
movsl
hlt
mov
mov
sub
in
lock
outsb
test
repz
in
ja
arpl
pop
pop
fcmovb
jne
hlt
inc
pop
xchg
jbe
fildl
data16
cmc
stos
add
cmp
adc
loopne
inc
addr16
icebp
dec
ds
icebp
les
leave
ds
loopne
cs
fcompl
push
in
sahf
add
fistpl
ret
inc
fstpt
or
xlat
xchg
mov
pop
cli
nop
push
push
das
and
dec
mov
mov
xor
lods
sbbb
pop
lret
xlat
ds
add
std
pop
cmpb
sub
ja
repz
sub
push
and
ja
mov
andl
lcall
sar
fs
push
xchg
add
jnp
loopne
pop
jl
mov
jle
jmp
mov
xchg
popa
sub
sti
add
lods
aam
sar
jmp
xlat
ficoml
js
stos
cld
or
loop
ss
jae
push
xchg
pop
fnstsw
lods
inc
add
pop
jge
jmp
add
mov
cmp
jle
or
in
rol
adc
dec
cmpsl
es
pop
mov
mov
hlt
xchg
inc
fbld
mov
lcall
add
loop
or
clc
mov
cwtl
lret
cwtl
add
pop
shrb
push
xchg
loope
xchg
lock
enter
dec
out
or
stos
scas
cmp
ffreep
mov
rclb
or
fnstenv
call
xor
mov
jno
jmp
and
shll
sar
or
sub
loope
sbb
ja
mov
pop
imul
push
popa
sub
pop
clc
incb
fdivl
mov
out
js
xor
cld
les
loope
inc
sbb
mov
xchg
mov
mov
jae
faddp
pop
data16
sbb
push
testb
fwait
inc
pop
mov
dec
inc
add
add
aam
dec
or
sti
and
pop
addl
cmp
jle
addr16
push
sub
inc
in
xchg
inc
dec
xchg
add
inc
jo
inc
jecxz
test
ret
mov
inc
inc
or
hlt
xlat
scas
jbe
dec
popl
out
insb
outsl
or
push
clc
sub
int
push
rol
mov
jno
and
add
dec
loopnew
xor
testl
rclb
jbe
xor
sbb
push
inc
dec
pop
dec
pop
hlt
or
jbe
outsl
test
inc
mov
pop
sbb
inc
sub
mov
push
outsb
push
xchg
xchg
inc
push
or
pop
push
mov
cmpb
outsl
insl
cwtl
das
test
jb
insl
dec
adc
mov
push
sub
add
adc
popa
inc
subl
sbb
lods
dec
push
insb
mov
sub
and
xor
add
sbb
shrb
jo
mov
sbbl
xor
inc
ret
inc
pop
and
mov
add
xor
movl
lock
inc
ret
insl
inc
add
je
insl
test
mov
push
dec
sbb
xchg
repz
fldenv
adcb
mov
dec
dec
pop
rcll
mov
mov
or
and
loop
aad
or
dec
push
popa
mov
and
push
dec
scas
clc
jo
movaps
test
sbb
adc
movsb
out
rorb
js
dec
add
dec
cmp
xor
cmp
addr16
scas
pop
push
fadd
dec
cmpsl
sub
lea
sbb
je
xor
inc
sub
push
inc
dec
nop
cmp
idivb
push
pusha
jbe
js
inc
xchg
hlt
js
and
imul
mov
push
jbe
and
cmpsb
pushl
jne
xchg
cwtl
bound
cwtl
xor
add
mov
aaa
jo
movnti
out
test
xor
cmp
dec
inc
add
fsubs
push
cmpsb
pusha
and
inc
inc
fs
add
dec
data16
jnp
push
push
in
daa
add
mov
sbb
jp
push
mov
in
in
inc
cli
das
mov
inc
push
push
dec
rcl
pop
mov
add
dec
mov
int
test
mov
xchg
ret
rcll
insb
jp
mov
aas
divb
fiadds
xchg
jbe
and
inc
push
dec
push
jae
jb
outsl
xor
sbb
fnstenv
push
mov
adcb
push
ljmp
push
inc
aaa
out
dec
inc
dec
inc
adc
popf
push
sub
hlt
xchg
push
or
xor
into
stos
js
dec
mov
dec
mov
xor
inc
jae
xchg
sbb
dec
jbe
adc
sbb
imul
fadds
clc
jle
push
incl
repz
push
push
in
xchg
outsb
jp
ds
dec
mov
jno
xor
add
ret
dec
mov
cli
decl
push
mov
ret
dec
std
int3
cwtl
fs
iret
lods
jg
push
call
dec
ret
ja
rol
addr16
lret
dec
jno
jmp
inc
sbb
mov
cld
fs
dec
loop
test
dec
xchg
inc
and
icebp
dec
ljmp
stc
jecxz
jg
and
pop
inc
jae
int
pop
xor
lret
mov
mov
pop
or
in
inc
jl
cbtw
fs
xchg
data16
stos
sub
mov
xchg
out
add
jbe
addl
mov
mov
inc
jb
and
jb
pushf
push
pop
fldl2t
xor
lret
jno
add
ja
adc
mov
or
pop
cmpsl
sarb
dec
dec
fmull
js
in
lock
ljmp
scas
mov
sub
into
push
sarb
out
pusha
sub
xchg
fucomip
mov
aam
and
popf
inc
popa
mov
js
adc
sub
rolb
cmp
push
mov
mov
or
add
sub
pop
or
es
fwait
roll
mov
fwait
out
or
das
movb
mulb
push
movsb
sub
inc
inc
add
outsb
jo
mov
mov
mov
jmp
shl
sti
push
shrl
mov
repz
sbb
lcall
stc
mov
cld
or
enter
js
sbb
and
xchg
out
sub
cmp
dec
xorl
inc
mov
xor
pop
sub
xor
or
sti
jns
fistl
pop
mov
and
fnstsw
dec
and
jbe
xorl
inc
dec
or
mov
xchg
adc
movsl
jecxz
leave
xchg
pop
test
cmpb
adc
ret
inc
shll
testl
jo
das
mulb
inc
shlb
pop
nop
adc
pop
clc
cmpl
repz
jbe
xchg
mov
es
ljmp
gs
pop
mov
or
shrb
adc
pop
mov
pop
sbb
pop
jge
and
xchg
pop
insb
insb
sbb
sub
cmpsl
lret
cld
xor
mov
mov
mov
jl
out
stc
jae
pop
cld
or
sbb
sbb
subb
cmp
mov
adc
decb
xor
rcll
mov
jge
lcall
dec
es
or
cmc
sbb
and
rolb
test
and
add
or
ret
or
enter
daa
dec
xor
popl
movsl
dec
or
arpl
rcrl
pop
xor
pop
push
das
ds
sbb
outsl
subb
push
pop
mov
sub
bound
mov
add
pop
ret
xor
mov
lret
insb
mov
nop
xor
or
fwait
repnz
roll
in
mov
lahf
xorb
mov
push
or
inc
into
lret
icebp
aam
movsb
adc
addl
pop
movsb
outsb
xlat
dec
xor
mov
cli
scas
xorl
push
clc
mov
dec
sbb
push
out
ljmp
sti
sub
cmpsb
cmpsl
in
sub
pusha
xor
lods
es
loop
push
jno
pop
sarl
push
lcall
out
add
sub
test
xchg
adc
jge
insb
lds
addb
xor
adc
les
je
mov
cmpsl
cltd
push
mov
or
cmp
jbe
insb
mov
adc
adc
or
push
dec
add
sub
cld
jl
mov
sub
mov
lock
loope
incl
mov
cmp
loop
ds
or
sub
insl
out
cmp
xor
xchg
outsl
pop
cmpsb
cwtl
sub
adc
sahf
ret
adc
mov
mov
insb
cmp
push
clc
dec
fwait
sarl
adcb
jecxz
incl
nop
sub
sahf
add
adc
push
imull
rdmsr
fnsave
add
xlat
sbb
sarl
subb
mov
cmp
push
push
sub
js
aam
and
adc
ds
fstpl
jne
lock
sar
pop
ljmp
stos
call
push
clc
ljmp
sbb
test
aam
pop
in
fnstsw
jl
mov
jmp
and
test
mov
fdivl
jns
inc
movsl
and
orb
fcompl
lret
jp
mov
adc
push
or
and
mov
sub
xchg
add
ror
inc
dec
jmp
jge
rcrb
xchg
sbb
mov
scas
das
dec
aaa
mov
cs
sub
scas
xor
and
test
test
aas
cmpsl
dec
cmp
fbstp
xchg
dec
call
inc
mov
repz
mov
inc
pop
sbb
mov
fs
cld
sbb
or
insl
dec
and
stos
clc
sub
js
cmc
push
ja
cltd
mov
pop
pop
push
movsl
scas
mov
andl
add
iret
test
xor
pop
test
test
jno
mov
xor
push
push
mov
leave
push
inc
cltd
nop
or
xor
test
mov
adc
fwait
and
or
sti
or
jmp
mov
adcb
dec
push
and
dec
push
add
movsb
ljmp
icebp
xor
push
mov
add
push
dec
dec
sbb
ss
push
dec
mov
cmpsl
push
inc
add
add
dec
add
dec
dec
inc
cld
mov
inc
fmuls
icebp
pop
lcall
mov
imul
ss
pop
jae
int
mov
jl
call
push
imul
sub
les
xorb
out
lea
push
mov
xor
mov
push
jno
dec
inc
outsb
aam
les
push
push
insl
xchg
inc
rorb
pop
lds
push
movl
mov
es
dec
mov
jne
inc
inc
inc
mov
popa
imul
outsl
dec
aad
dec
addr16
outsl
and
dec
fsts
dec
inc
scas
cwtl
dec
es
xor
rorb
rolb
data16
sbb
insb
dec
lret
inc
mov
mov
mov
call
add
inc
mov
into
ss
jnp
fidivrl
fisubs
push
or
push
xchg
mov
cmp
push
adc
fisubl
push
loopne
jge
mov
mov
sbb
lock
testb
shlb
inc
lcall
jbe
aaa
imul
mov
push
xor
lock
pop
js
clc
mov
aaa
or
arpl
out
jae
dec
and
push
imul
mov
jbe
adc
es
cmpsl
lock
jo
or
ret
inc
lcall
orb
out
lock
daa
dec
dec
jno
or
rcll
rol
jmp
aam
push
rcrl
xor
push
pop
dec
addb
enter
dec
sub
or
pop
adc
repnz
popa
fs
inc
add
inc
dec
jmp
cld
push
mov
push
xor
popaw
adc
mov
push
ljmp
shlb
call
popa
out
jo
pop
sbb
pop
mov
shr
fs
ss
orl
dec
movsl
loopne
sarl
push
imul
out
dec
addr16
nop
leave
mov
aaa
imul
push
shlb
addr16
mov
popf
push
mov
adc
inc
adc
mov
and
ret
mov
push
mov
testl
mov
ss
or
push
dec
aaa
mov
repnz
inc
xor
in
fildll
pop
mov
aas
mov
or
dec
scas
pop
dec
outsl
adc
dec
fcmovne
lcall
std
mov
fidivs
adc
gs
bound
es
jmp
or
test
inc
mov
lret
xlat
hlt
push
push
and
sub
add
sarl
cld
pop
ret
cld
add
push
mov
movsb
ljmp
ss
je
pop
dec
inc
mov
push
popa
cld
nop
inc
enter
jns
data16
imul
jae
xor
inc
inc
ljmp
movsb
inc
push
jl
inc
outsl
and
in
iret
dec
arpl
pop
push
mov
push
jo
movsb
jne
in
lahf
test
sahf
fisttpll
rorl
jno
jmp
lds
mov
ret
cli
fs
ficoms
mov
mov
mov
pusha
ret
xor
fmul
push
xor
push
and
push
lret
mov
repnz
push
or
xchg
mov
push
inc
xor
inc
inc
popa
pop
sub
push
xchg
and
movsb
imul
pushf
fdivr
pop
or
xor
inc
into
jo
inc
repnz
mov
stc
inc
adc
push
or
and
dec
pop
jl
movsb
iret
xor
imul
rorw
imul
addr16
dec
outsb
sti
pusha
sub
popa
imul
subl
add
pop
inc
arpl
add
cmc
jbe
inc
das
ret
pop
std
add
dec
outsb
insl
imul
push
add
rorb
push
xchg
scas
sbbb
mov
mov
pusha
cli
mov
clc
jmp
and
pop
sub
std
add
jne
cmp
out
mov
push
mov
dec
aas
outsb
inc
mov
xchg
or
mov
dec
sub
jmp
das
lock
out
enter
jae
je
scas
jmp
mov
push
jmp
sbb
xchg
dec
dec
dec
insl
stc
dec
jae
ret
sub
je
xor
xor
shlb
arpl
gs
dec
sub
xor
dec
xor
pusha
pusha
insl
fs
decb
repnz
addr16
addr16
pop
mov
es
jns
into
ss
xor
hlt
or
jb
mov
popf
pop
inc
ss
and
mov
push
rclb
jl
in
sub
push
aad
add
movsl
std
fisubrs
je
push
aaa
push
scas
mov
dec
mov
imul
add
ss
rclb
jmp
sarb
dec
popa
pusha
and
ret
out
js
dec
dec
dec
outsb
ret
je
sbb
imul
lret
lock
xor
fimull
add
add
jb
outsl
inc
cwtl
mov
mov
lods
cltd
rorl
xor
sbb
xchg
inc
js
clc
loop
jge
lds
jnp
ret
inc
push
xor
add
mov
push
imul
enter
les
xchg
dec
or
es
mov
mov
sahf
push
int3
push
xor
inc
dec
test
ret
mov
push
add
inc
sar
pop
pop
and
jne
jb
adc
add
js
inc
adc
and
dec
fmuls
xchg
xchg
add
pusha
je
outsl
fidivrs
adc
repz
push
pushw
lods
xchg
or
test
aaa
insb
adc
es
xor
mov
repnz
inc
cli
xor
movsb
imul
addr16
xor
sub
dec
arpl
cmp
add
mov
lds
ss
jmp
push
es
dec
loop
jl
inc
sub
ret
dec
push
pop
inc
inc
pop
insb
les
cmp
add
mov
adc
jmp
adc
int3
inc
arpl
cmp
or
push
xor
into
lds
push
dec
cmp
mov
push
mov
cmp
imul
cs
push
adcb
stos
mov
call
addr16
call
mov
push
push
cmpsl
sti
dec
addb
sbb
xchg
dec
mov
imul
ret
aaa
pop
test
call
rcrb
lahf
pop
mov
mov
clc
dec
and
popa
dec
bound
fnstenv
add
test
aas
add
pop
shlb
mov
inc
xor
and
movsb
add
xlat
or
xchg
push
push
rcr
cmc
ret
pop
rol
gs
mov
in
jg
adc
call
cmc
jmp
aas
clc
and
xor
inc
dec
jbe
jb
in
std
frstor
push
xor
sbb
inc
push
push
xchg
sarb
and
add
dec
jne
inc
fcomps
jno
movsb
fidivl
dec
jo
add
inc
jbe
xor
add
push
in
dec
cmp
mov
enter
mov
add
jb
push
js
bound
loop
mov
push
dec
test
cmp
inc
inc
push
push
mov
sbb
add
lahf
xlat
push
pop
sub
mov
jno
ffree
push
mov
adc
lock
pop
jno
in
inc
dec
out
dec
push
ss
mov
lods
les
cwtl
adc
lods
lahf
sub
mov
jns
loopne
iret
add
pop
xchg
imul
ja
inc
dec
js
insb
dec
inc
push
add
mov
fisttpll
xchg
arpl
xor
xchg
aad
jo
inc
mov
test
gs
fs
cmp
inc
push
loopne
pop
mov
add
xchg
cmp
inc
sbb
bound
or
push
inc
xor
adc
mov
jl
push
and
jp
jbe
out
add
das
inc
roll
xor
inc
dec
push
push
pop
and
lea
push
outsl
push
push
jns
xor
dec
inc
xchg
ja
aad
mov
adc
mov
dec
push
jmp
icebp
into
inc
xor
out
or
lds
xor
xchg
xor
addl
dec
cmp
mov
cmp
aaa
push
inc
lock
xor
addr16
dec
aas
mov
xchg
jno
fwait
mov
cmp
loop
jl
sub
dec
push
xor
inc
clc
cwtl
js
out
push
push
inc
inc
incb
jp
pop
pop
sbb
and
lahf
xchg
add
mov
xor
cli
outsl
ficoml
mov
in
mov
sahf
loop
xor
or
mov
jae
daa
sbb
pop
enter
mov
bound
push
add
inc
addr16
and
adc
loop
fdivrs
data16
es
pop
cmp
sub
mov
addl
cld
loope
xor
push
dec
push
test
movsl
jl
mov
push
add
pop
roll
or
inc
loopne
dec
mov
dec
mov
jo
outsb
fwait
jbe
dec
dec
out
dec
inc
push
dec
push
je
ror
pop
pop
jmp
push
js
inc
adc
insb
inc
int3
xor
xor
pop
xor
aam
xor
and
outsb
cs
popa
or
sbb
push
add
enter
cs
mov
xchg
jmp
les
data16
scas
pusha
test
fidivrs
jbe
inc
mov
loopne
jbe
dec
sbb
lods
pop
xor
sbb
dec
stc
dec
push
add
lock
sbb
xor
adc
test
jno
ja
push
lock
mov
iret
inc
jns
cld
push
movb
push
mov
int3
jl
call
dec
jb
ret
add
push
fmuls
or
lock
push
insb
jmp
rolb
dec
xor
mov
clc
outsb
rol
dec
jae
xlat
cltd
ret
push
outsl
and
imul
fnstenv
mov
and
xor
cmp
lret
cld
jne
insb
shr
xor
dec
push
add
scas
test
push
popa
push
and
xor
add
ret
inc
dec
dec
je
and
js
jne
sub
inc
or
mov
dec
inc
rorl
sbb
lahf
js
jns
je
sbb
push
lea
cmp
mov
in
cmc
adc
cmpsl
test
dec
sub
rcll
test
mov
imul
repz
testb
stos
add
stos
pop
jl
inc
mov
jecxz
adc
adc
jbe
js
mov
push
clc
adc
ficoml
xor
clc
inc
or
ja
jae
add
jp
icebp
outsb
dec
pop
addr16
xor
adc
outsl
test
push
je
inc
push
push
dec
lret
mov
sbb
jge
push
inc
jns
jns
data16
pop
push
imul
inc
add
dec
mov
jbe
dec
scas
pop
mov
adc
mov
dec
outsl
add
dec
dec
add
outsl
jae
push
jp
ret
sub
outsb
sbb
inc
ja
push
push
dec
cmp
cmp
shlb
push
and
rclb
addr16
mov
xor
and
aaa
iret
xchg
inc
mov
fldcw
mov
hlt
add
fwait
sbb
ljmp
imul
mov
shlb
dec
lret
adc
xor
inc
jp
dec
test
insb
jbe
xchg
dec
and
lods
adc
cmpsb
cmp
pusha
cmp
icebp
sbb
ficomps
sti
cmp
jne
push
push
and
test
and
sbb
mov
jns
push
ljmp
sbb
pop
jmp
inc
ss
pop
or
clc
push
js
fsubl
sub
popa
sbb
mov
mov
dec
push
xor
mov
jns
scas
cli
jecxz
call
test
and
mov
repnz
pop
jl
mov
dec
ljmp
push
sbb
push
sbb
addr16
xor
mov
das
push
dec
into
inc
hlt
jl
mov
push
pop
dec
pop
bound
into
mov
jbe
call
divl
rolb
lock
adc
rolb
pop
jge
dec
push
add
jb
jo
out
mov
loopne
bound
mov
loopne
inc
mov
into
mov
or
mov
mov
shll
dec
lods
jno
rorb
adcb
pop
stc
jl
sbb
add
pusha
jle
in
sbb
or
mov
andb
xchg
inc
push
inc
dec
test
aad
mov
enter
mov
rcrb
insb
dec
in
in
dec
mov
rclb
add
lret
pop
inc
push
pop
sarl
cwtl
push
jns
pop
xchg
mov
arpl
push
xlat
inc
push
pop
dec
sbb
dec
in
mov
or
cmp
mov
push
dec
insl
inc
js
into
dec
data16
jae
xor
cld
or
cwtl
fsubp
fldt
push
fs
mov
dec
inc
data16
or
mov
push
jecxz
and
xor
fld1
cmp
rorl
xor
dec
test
dec
mov
sar
dec
jbe
pushf
xchg
mov
inc
mov
clc
inc
xor
inc
dec
mov
fisttpll
ror
mov
xchg
push
fsubrl
dec
lods
popa
inc
mov
mov
cmp
mov
loopne
mov
dec
dec
dec
cmpsl
push
int3
loope
dec
dec
and
add
jmp
shlb
ficoml
adc
xchg
xor
je
test
imull
mov
fs
aaa
les
inc
jo
jecxz
orb
add
rolb
rol
xor
mov
mov
jb
add
push
mov
pop
xlat
lret
js
mov
fmuls
mov
push
xchg
push
jno
add
sub
lret
mov
test
ficompl
mov
xor
fs
sbb
data16
loopne
sub
and
fistps
flds
movsb
mov
dec
jo
or
addr16
adc
push
push
shrb
xchg
mov
mov
cmp
add
clc
lea
push
jns
notl
rorb
mov
in
in
pop
invd
fimuls
ror
fistpl
sbb
test
mov
push
push
jbe
in
pop
push
add
push
insl
jmp
mov
inc
stc
mov
jns
ja
call
loop
scas
les
js
push
scas
inc
cmp
mov
push
jns
cld
inc
lcall
and
pushf
outsb
mov
add
pop
xor
jne
fcoms
push
movsb
std
xchg
inc
sub
fcompl
sarl
ret
adc
test
and
push
testl
outsb
repz
push
lds
xor
ret
pop
push
pusha
lds
sbb
roll
pop
call
aaa
jmp
flds
movsl
sbb
adc
ret
aaa
cmp
cld
sub
outsb
xchg
and
test
cli
adc
sahf
mov
xor
or
xor
shll
xor
push
psubw
imul
pushl
jo
pop
or
aad
push
mov
bound
loop
ss
cmp
das
inc
inc
adc
xor
mov
loopne
pop
push
inc
rcrl
clc
push
jb
ljmp
insl
ljmp
lea
cmp
sub
enter
inc
gs
xor
imul
dec
ret
adc
loop
fdivrl
stos
insb
sub
iret
mov
xchg
sub
loopne
addr16
fisttps
shlb
bound
xchg
push
xchg
xor
jle
andb
or
adc
and
jo
push
notl
mov
incl
push
inc
sbb
test
xchg
icebp
fcmovbe
int
rcrb
popa
out
addr16
xchg
int
jmp
mov
jmp
push
push
imul
lea
pusha
cmpsl
pop
dec
lcall
fs
dec
jnp
jecxz
mov
add
add
push
call
leave
inc
xor
mov
arpl
xchg
test
test
iret
femms
ja
and
test
pop
shrl
xchg
mov
lcall
jo
xor
push
jne
ret
das
aaa
mov
cmp
push
inc
add
cmpsb
jp
fdivs
jmp
sbb
fldl
test
cltd
push
push
push
sub
popa
pop
mov
and
jo
inc
pop
lcall
sub
pop
pmullw
out
or
cli
and
sbb
lcall
xchg
icebp
rcll
adcl
push
in
dec
mov
sub
push
mov
lds
ja
xchg
jnp
push
cwtl
xor
jecxz
sets
mov
into
inc
dec
mov
jmp
add
sub
ja
push
push
shll
ja
clc
add
sti
sub
xorl
push
cmp
nop
jp
pusha
add
and
xchg
xor
push
mov
push
iret
mov
adc
clc
push
insl
dec
fldt
enter
aas
cmp
iret
ss
cmpsl
pop
inc
pusha
imul
icebp
push
in
inc
adcb
dec
imul
add
std
rcr
into
hlt
jno
lcall
adc
dec
add
rol
ds
or
sbb
cmpsl
pop
es
scas
aam
xor
xor
add
dec
fiaddl
nop
mov
jg
push
xor
aas
lea
pop
sub
aad
add
jg
in
xor
pusha
fstl
fwait
fwait
xchg
cmp
ret
or
lret
push
out
add
repnz
mov
lds
sbb
mov
push
add
cltd
add
daa
add
mov
push
add
sub
scas
jle
adc
insb
inc
jne
jns
imulb
sbb
shrb
sbb
push
jmp
sti
shl
ss
stc
add
test
popa
add
jo
test
jnp
mov
ss
repnz
inc
test
ja
cmpsl
cmp
cmp
fimull
dec
jb
inc
xor
push
ds
mov
gs
pop
jbe
push
or
push
sub
inc
push
mov
pop
pop
in
hlt
sarb
push
sub
stos
cli
fprem1
push
inc
xchg
jno
popa
inc
fs
outsl
inc
imul
cld
mov
imul
push
and
or
inc
jns
repnz
jnp
push
int
dec
cmp
aam
incl
sbb
push
mov
sbb
sbb
bnd
ds
inc
ret
dec
and
inc
int
js
cld
sbb
dec
les
fsubrp
push
xor
lcall
or
shrb
imul
out
mov
cmp
xchg
lret
fsts
lahf
insb
jb
or
jbe
lods
pop
add
xor
mov
fimull
les
cmp
enter
xchg
add
fadds
lcall
cmp
and
test
jnp
dec
andb
xchg
sbbl
jo
mov
jge
lods
scas
mov
and
lds
int
movsb
les
push
sbb
enter
lret
test
mov
xor
inc
xor
push
push
inc
mov
outsb
add
add
pop
or
push
inc
dec
adc
pop
andl
dec
or
mov
dec
xor
mov
cwtl
loop
fisubl
outsb
lock
mov
dec
push
add
loopne
scas
mov
jnp
jmp
pop
or
addr16
insl
pop
sub
dec
adc
xor
aaa
outsb
inc
add
scas
inc
push
jmp
aaa
cmp
insl
inc
es
lods
aam
sahf
mov
pop
inc
and
xor
cmp
dec
es
into
data16
mov
dec
data16
int
cmp
jb
roll
inc
bound
les
idiv
mov
inc
cmpsb
sbb
xchg
iret
xchg
daa
ret
push
push
das
add
add
hlt
dec
dec
adc
mov
mov
add
call
fisttps
out
popa
ss
gs
fadds
icebp
ss
ret
or
cmp
sbb
dec
jne
push
inc
adc
or
cmp
inc
xor
clc
insb
add
sbb
sbb
mov
cs
inc
cmp
push
jge
rol
clc
add
and
push
push
sbb
push
sbb
mov
mov
xchg
push
mov
das
adc
jns
fisubs
adc
or
inc
dec
xor
xchg
push
dec
mov
adc
stos
xor
aaa
push
dec
inc
cmc
xlat
ret
shlb
push
or
lret
js
jle
imul
xor
cli
jbe
stc
ret
mov
int
add
mov
shrb
inc
jmp
pop
out
ja
rcl
or
fiadds
sbb
mov
lcall
mov
aam
mov
push
in
sbb
push
dec
dec
mov
inc
pop
dec
cmp
xchg
add
fs
and
push
mov
sbb
jmp
xor
in
inc
inc
push
xchg
mov
cmpsl
pusha
mov
sub
xchg
dec
cmovb
fnstsw
jbe
pop
jmp
fs
nop
daa
jge
inc
call
xchg
lret
push
sub
ja
mov
jl
push
adc
mov
mov
jo
clc
mov
cwtl
test
xchg
dec
ljmp
jmp
lcall
pop
jecxz
and
in
aad
mov
pusha
sbb
cmp
pop
loopne
inc
cmp
or
sbb
pusha
dec
loopw
push
stc
and
xchg
jle
xor
add
cs
mov
dec
sub
cmp
xorl
fdivrl
sbb
pop
in
popl
sub
push
in
lahf
sbb
dec
rorl
test
mov
fwait
lods
dec
les
fdivrs
out
inc
mov
pop
rolb
xchg
pop
push
out
sbb
cmp
dec
jge
xchg
mov
and
fldcw
sub
ret
std
repz
aam
xchg
popf
jnp
out
in
cmp
nop
cli
adc
lock
push
inc
imul
or
ljmp
and
imul
mov
shll
dec
loop
and
std
mov
int3
xchg
xor
lock
daa
and
or
insl
shrb
daa
aam
jbe
fildl
lea
in
or
jecxz
mov
xorb
pop
cmp
into
sbb
add
adc
mov
ret
sbb
pop
push
jne
pop
push
xor
sahf
mov
ret
sub
xchg
xor
jecxz
dec
loop
and
xchg
and
dec
cmp
leave
movsb
adc
cs
add
sbb
mov
loopne
xchg
ror
in
not
mov
lret
stos
fidivrl
mov
jp
faddl
outsl
push
sbb
inc
pop
mov
push
aaa
push
lock
mov
mov
fnstsw
push
pop
das
sar
jecxz
mov
inc
jnp
mov
loopne
aam
ret
call
call
and
add
cmp
int3
sub
xlat
push
and
fiaddl
mov
das
dec
dec
sbb
sbb
out
add
cmp
push
in
les
add
mov
push
cld
test
int
dec
in
inc
fildl
xor
sbb
and
dec
jg
mov
fwait
push
pop
fldt
dec
or
xchg
lahf
add
sbb
xchg
std
adc
data16
test
xchg
je
adc
mov
mov
push
add
insb
cli
xor
pop
inc
add
mov
add
dec
mov
std
jmp
fcoms
sub
pop
sbbl
inc
into
lcall
or
pop
add
cmp
cmp
mov
aas
mov
hlt
sub
popa
in
mov
sub
adc
repnz
add
or
inc
or
out
sub
mov
xor
dec
mov
test
loopne
xor
test
and
sbb
cmp
aam
push
mov
push
lcall
jne
jo
jl
scas
mov
mov
pop
fwait
hlt
push
aam
lds
imul
shll
dec
out
scas
scas
clc
add
out
movsl
sub
imul
sbb
cmpsb
sub
jae
fistpl
and
loop
push
cmpl
xlat
push
pushl
jmp
roll
pop
in
or
jae
cmp
pop
in
mov
mov
mov
sbb
jmp
icebp
fsubl
in
imul
add
std
pushf
mov
add
dec
pusha
sbb
cmpsb
shll
and
aaa
in
fsubrp
lea
lea
inc
pop
sub
fdivs
pop
dec
test
cmp
sub
repz
mov
insb
clc
imul
cltd
pop
mov
insl
syscall
clc
xchg
ds
icebp
xchg
pusha
jnp
pop
mov
or
ds
leave
clc
scas
inc
push
es
xchg
movsl
data16
jmp
xor
mov
adc
push
dec
mov
fldt
xor
ret
pop
test
adc
jnp
mov
push
pop
cmpsl
add
dec
xor
mov
ja
js
ret
add
je
sub
or
cwtl
push
xlat
shl
orl
xchg
cmp
sahf
sub
mov
shl
fs
push
inc
bnd
aas
and
push
push
and
dec
add
xlat
rol
xchg
jno
int3
push
push
bound
lods
icebp
outsl
adc
out
imul
add
cli
movl
xor
dec
into
ret
and
inc
sbb
int3
push
dec
inc
xor
cmp
cmp
jno
sbb
xchg
int
fs
mov
pop
imul
scas
subb
mov
cmp
inc
push
daa
and
in
and
inc
add
xchg
and
fists
dec
aam
inc
js
shll
cld
loopne
sbb
sbb
push
cli
dec
jb
jno
call
inc
mov
jbe
shll
call
push
mov
sahf
mov
inc
and
icebp
push
movsl
repz
xor
ret
or
bound
pop
dec
insl
fs
sub
ljmp
lcall
inc
ds
cli
ljmp
loopne
xor
sarw
testb
cmpsb
or
mov
jg
lods
sbb
or
lea
bound
cltd
xor
rcll
jne
inc
jno
cmpsl
scas
or
sbb
aaa
sub
adc
push
add
loop
out
add
repnz
pop
cmc
pop
add
sbbb
loope
fwait
scas
outsl
ja
scas
ret
movsl
adc
cs
sub
in
rcrl
roll
push
adc
adc
jo
cli
imul
into
push
in
xchg
int
lock
sbb
scas
arpl
loope
into
mov
adcl
inc
inc
push
jecxz
ds
jne
int
jns
pop
jnp
shlb
xor
scas
xor
aas
lcall
pop
dec
out
lods
jns
dec
sbb
das
mov
insl
orl
out
dec
cmp
std
data16
xchg
dec
aam
fistpll
fiadds
adc
mov
pop
mov
xor
sub
and
outsb
movsb
xor
movq
mov
or
sbb
add
int3
sbb
repz
outsl
add
je
jl
test
xchg
mov
and
test
push
xchg
or
jg
sub
imul
scas
pop
divl
je
mov
sub
js
mov
pop
in
pushf
push
cmp
rorb
adc
lret
std
cmpsb
in
paddw
lock
mov
xchg
adc
sarb
xor
or
out
stc
mov
push
data16
jecxz
xchg
loop
cld
andl
loope
sbb
or
popa
jp
and
lock
pop
xchg
xor
jbe
xor
subb
imul
or
pop
into
adc
aam
dec
sub
adc
mov
loopne
lret
movsl
sub
mov
roll
repnz
sahf
xchg
jl
adc
lock
insb
ret
hlt
dec
icebp
mov
xorb
adcb
mov
sub
int
or
mov
xchg
cli
add
jg
push
adc
cmpsl
jno
mov
cs
add
jle
daa
in
sbb
cmp
mov
outsb
cld
add
call
xor
inc
test
push
mov
sub
or
xchg
or
fcoml
mov
sbb
push
jle
xor
xchg
push
pop
adc
ljmp
call
movsb
sub
je
jmp
jmp
add
pop
push
dec
jo
pushf
mov
mov
lods
or
ret
pop
push
orl
mov
repnz
or
push
push
jecxz
test
icebp
aaa
push
roll
inc
add
dec
pop
jecxz
push
or
sbb
xor
cmp
jno
mov
iret
dec
sarl
scas
xor
add
outsb
fwait
insb
fidivs
ss
int3
mov
adc
and
and
fnstsw
xor
insb
xor
cvtdq2ps
mov
push
bound
call
or
mov
sub
stos
push
hlt
outsl
jg
jne
lcall
cmp
inc
filds
rcl
inc
push
pop
inc
and
sar
test
loop
arpl
and
sub
xor
cmp
insb
clc
icebp
mov
or
daa
cmp
cmp
movsb
pop
or
jbe
xchg
imul
mov
int3
push
mov
adc
sarl
in
ja
stos
xlat
or
call
xchg
inc
mov
xchg
or
or
mov
inc
bound
out
xchg
adc
mov
cmpsl
xor
sarl
xlat
mov
push
xor
loop
xchg
jmp
adc
add
sar
inc
lds
xchg
sbb
mov
sbb
cmp
cld
add
enter
std
lret
sahf
leave
stos
xchg
daa
loop
enter
push
inc
lea
add
icebp
lds
outsb
decb
xchg
popf
pop
xchg
inc
das
clc
cmc
sbb
sub
pusha
js
ret
jl
test
sbb
pop
jo
xor
js
sub
and
stos
inc
sarl
jecxz
dec
lret
bound
inc
lea
stos
mov
pop
mov
push
lods
in
or
pop
outsb
jle
mov
xchg
pusha
repz
lret
popa
outsl
or
sti
movsl
jg
sbb
xchg
xchg
mov
mov
and
pop
roll
fiaddl
rcr
sbb
fdivr
cmpsb
ror
inc
aas
bound
lock
inc
inc
outsb
orb
outsl
xchg
mov
adc
sbb
adc
jno
inc
stos
or
sti
mov
movsl
es
rcl
out
mov
xchg
xchg
inc
cmp
mov
cmpsb
xchg
mov
mov
in
jae
pop
mov
ret
ret
push
push
inc
lock
je
jo
shrl
xchg
out
fs
std
pop
std
inc
mov
imull
jge
clc
in
out
inc
popl
mov
dec
mov
pop
cli
lret
mov
sbb
cmp
adc
mov
outsl
fstpt
stos
clc
popa
add
loopne
mov
adc
xor
jne
lock
pop
sub
cld
lock
adc
icebp
sbb
or
xor
insb
and
xorl
adc
es
aas
aam
sahf
loope
in
pop
cli
add
push
add
pop
fsubrs
pop
andb
lea
mov
or
popa
std
std
fstpt
mov
data16
sarb
in
push
clc
add
jl
inc
loope
dec
fbld
inc
out
std
inc
fisubs
in
mov
and
movsb
fdivr
stos
shrl
jne
inc
pop
cmpsb
adc
daa
test
out
xchg
inc
xchg
fcoms
hlt
sbb
inc
xchg
fbstp
pop
mov
inc
iret
adc
cmp
lock
adc
and
adcb
iret
aam
inc
aam
inc
inc
sub
aam
pop
adc
pushf
mov
ss
sbb
add
aas
lods
stc
out
cwtl
ja
sub
mov
shl
incl
test
xchg
ficoms
stc
pop
sbb
mov
outsl
add
lcall
ja
cmp
adc
fistpll
out
sbb
sbb
imul
rol
jmp
mov
rcll
xchg
jecxz
rorl
cld
out
xor
cs
xlat
xor
fcmovnb
adc
out
nop
js
pop
inc
jp
jb
and
lea
and
ljmp
sub
dec
add
aaa
pop
jg
sahf
scas
and
int
sbb
stos
dec
das
xlat
ljmp
sub
inc
pop
jle
or
cmpsb
mov
jae
sbb
or
aaa
cmc
sarl
push
adc
push
mov
lock
je
cmp
add
cmp
xorb
cmpsl
mov
adc
sbb
dec
mov
ret
insb
push
inc
mov
pop
mov
ja
sahf
adc
pop
out
xlat
inc
and
dec
aad
js
xor
mov
cmp
imul
cmp
cmpsl
inc
inc
jg
inc
dec
inc
jg
mov
push
push
push
add
addr16
pop
popf
xor
lods
xor
shlb
lea
out
dec
js
inc
inc
gs
mov
les
inc
test
push
loop
push
mov
je
mov
pop
sbb
rorl
add
or
jl
or
fcmovbe
jl
adc
mov
in
in
adc
sahf
rol
inc
mov
ret
add
sarb
add
daa
add
pop
shll
stc
dec
add
shrb
add
mov
cs
ret
or
mov
inc
jo
xchg
adc
adc
push
xor
dec
push
xor
cmp
fildl
mov
mov
xchg
mov
dec
inc
push
arpl
es
loop
ss
adc
call
ljmp
add
testl
sbb
in
dec
and
jl
inc
and
dec
adc
cmp
sbb
cmp
and
test
sbb
test
hlt
and
les
push
sbb
jo
xchg
mov
inc
pop
adc
inc
jne
js
out
pop
imul
mov
test
sahf
aaa
push
outsb
arpl
out
outsb
or
dec
or
pusha
js
push
addps
mov
dec
rcrb
clc
mov
rcrl
dec
mov
fs
dec
mov
inc
test
lret
or
dec
dec
or
add
inc
cli
iret
add
jno
jns
or
dec
int3
mov
push
sub
push
scas
sti
inc
xor
push
mov
pusha
xchg
mov
call
xor
ljmp
arpl
icebp
xchg
daa
imul
xor
dec
xchg
mov
addr16
pushf
lods
sbb
addr16
movsl
sbb
push
dec
pushf
imul
aas
andb
stos
int3
ficompl
add
fdivs
popa
push
lahf
inc
dec
inc
inc
pop
dec
pop
clc
adc
cltd
mov
xor
dec
push
in
es
insb
mov
jae
shlb
xchg
push
mov
push
dec
add
jbe
fistpl
add
pop
lock
lds
int
scas
push
adc
nop
sub
rorl
xchg
or
inc
jge
jae
push
outsb
add
dec
fs
roll
loopne
add
enter
push
mov
dec
sahf
cltd
mov
movsb
outsb
and
sbb
fs
dec
push
xor
cwtl
fimull
sbb
push
cmp
mov
hlt
add
push
mov
cmp
gs
jne
jecxz
jecxz
dec
push
dec
movsb
jle
lods
push
adc
xchg
dec
dec
jbe
inc
mov
add
push
adc
loopne
push
xchg
enter
jb
adc
xchg
jo
pop
pop
pop
push
xor
ds
in
push
data16
xchg
mov
push
xor
push
jne
inc
pop
les
popa
test
lret
xor
dec
inc
test
dec
jae
push
xorb
mov
movb
ror
push
push
arpl
pusha
nop
test
stos
movsb
imulb
add
xor
pop
cmp
loope
scas
dec
mov
inc
adc
jae
jno
loopne
cmp
jbe
inc
inc
ficoms
arpl
pop
stos
orb
addr16
xchg
mov
outsb
jne
test
lcall
das
mov
sub
scas
and
cmp
sahf
pop
dec
mov
psubusw
ljmp
fs
ljmp
inc
push
pop
repnz
out
rclb
inc
jno
cmp
mov
mov
sbb
dec
push
leave
add
pop
add
push
xchg
mov
fildl
aam
data16
jne
cmpsl
and
repz
stos
and
lock
rol
imul
push
xchg
or
xchg
jp
fldl
mov
and
mov
arpl
test
mov
inc
mov
lock
mov
adc
pop
pop
inc
pop
push
xor
lahf
rorb
aaa
aaa
dec
push
xchg
xchg
loope
and
stos
out
adc
outsb
gs
outsb
sub
inc
aaa
outsb
imul
jno
cmp
iret
jb
xchg
push
jmp
mov
sub
xchg
add
push
push
jae
aaa
push
mov
push
je
adc
cld
mov
ret
push
dec
push
add
adc
popa
cwtl
and
mov
arpl
push
lock
push
push
inc
cmpsl
clc
push
mov
dec
je
push
out
dec
test
call
mov
call
inc
inc
push
dec
push
inc
lcall
imul
scas
inc
push
push
inc
cmpsb
out
outsl
dec
gs
cmp
and
push
jge
fwait
jne
int3
xor
je
xchg
ds
push
pop
popa
fldcw
or
push
xchg
sbb
inc
xlat
pusha
mov
pushf
and
lahf
int
ja
and
pop
or
outsl
jg
incb
mov
sub
pop
test
jle
or
int
sbb
and
adc
mov
arpl
add
jmp
pop
sar
xchg
es
mov
cmc
fildll
pop
xchg
lock
loopne
lods
pop
push
fstpl
ds
jne
cmp
push
popf
lock
aad
fdivs
lods
xchg
mov
xchg
int3
and
ja
js
sahf
add
nop
clc
push
jecxz
ljmp
sbb
push
add
xchg
jb
jnp
add
xor
pop
insl
shl
aaa
mov
adc
mov
adc
loop
std
add
inc
dec
add
ja
xlat
mov
addr16
scas
movsl
iret
or
je
test
dec
mov
adc
popa
push
jle
fs
push
cmp
or
inc
rolb
mov
push
ja
mov
pop
add
xor
add
out
mov
out
xchg
or
pop
ja
mov
cmpsb
decb
das
ret
add
mov
rorb
jo
aam
inc
sub
or
outsl
pop
sbb
jge
fisttpll
sub
ja
jno
xchg
jae
movsb
pop
repnz
inc
shlb
jle
push
imul
xlat
push
decb
cs
addr16
je
pop
icebp
mov
push
fcomip
cmp
push
xor
in
in
xor
xchg
push
repnz
es
pop
mov
mov
dec
mov
aas
addr16
dec
jg
cmpb
call
xchg
ja
xor
or
popl
add
push
loope
and
fimull
outsb
jle
enter
jcxz,pt
add
sbb
sbb
cmp
stc
add
lahf
movsl
sbb
int3
pop
call
push
aam
add
inc
lods
cmc
push
in
cmpsb
in
mov
cmpsl
inc
inc
int
jns
dec
or
xchg
test
xlat
ja
cli
js
in
dec
adc
icebp
or
sbb
cwtl
loope
mov
pop
movsl
push
mov
mov
aas
cld
jbe
sbb
fcom
lea
push
popa
mov
xchg
push
push
cs
sbb
lods
ss
add
sub
ret
inc
shr
adc
cwtl
arpl
pop
jne
push
push
add
pop
sbb
and
jp
xchg
jp
fwait
pop
cmp
hlt
inc
loope
clc
xchg
sub
or
and
sbb
dec
add
jo
sub
mov
hlt
stc
cmp
push
aam
test
dec
cmp
jmp
clc
or
pusha
lock
jmp
loopne
adc
jmp
enter
pop
jge
pop
inc
xchg
sbb
sbb
addr16
jg
push
mov
aas
ret
daa
insb
add
jmp
or
sbb
dec
fnsave
mov
fwait
ret
or
lock
jp
je
mov
cmp
mov
jp
mov
aas
ljmp
orl
xor
fsubl
cmpsb
imul
sti
arpl
push
lock
mov
ret
mov
addr16
stc
add
stos
outsl
hlt
mov
out
test
pop
test
leave
cmpsb
adc
pop
mov
xchg
clc
cmp
inc
jne
adcl
xchg
jb
test
mov
xchg
sbb
push
in
std
jp
sub
adc
xchg
adc
jno
mov
xor
mov
imul
dec
adc
jne
adc
and
enter
popa
enter
jns
data16
inc
out
mov
jb
ficoms
mov
and
mov
clc
mov
cmpsl
mov
addb
flds
add
movsl
push
or
jns
adc
jp
adc
and
push
push
pop
push
add
daa
cmp
imul
xchg
jecxz
pop
mov
jbe
fisubl
xchg
cmp
sbb
add
and
xor
push
mov
call
jns
call
sarb
call
mov
movaps
shlb
clc
xchg
pop
jo
stos
mov
mov
cltd
jmp
scas
into
sub
mov
or
add
rclb
pop
adc
jmp
sbb
lahf
push
in
je
push
jb
stos
test
inc
xlat
xor
sbb
aaa
cmp
add
mov
ret
mov
mov
inc
or
mov
shr
std
jae
shlb
out
sbb
push
test
inc
push
jp
push
jg
scas
fldl
xor
pop
dec
mov
js
inc
pushf
orb
sub
loopne
xor
inc
sbb
cmp
inc
or
mov
xor
jmp
or
or
mov
fsubrs
push
popf
xchg
or
in
push
dec
cmp
and
inc
jecxz
cmpsl
or
pop
insb
pop
push
lock
jle
popf
out
shrl
mov
shlb
fwait
clc
push
pop
icebp
mov
xchg
jle
outsb
jnp
imul
inc
sub
stos
cli
add
pop
pop
fs
loopne
clc
adc
xchg
adc
add
push
jbe
testb
add
hlt
pop
icebp
aad
add
sub
mov
cs
jae
std
mov
or
pop
outsl
fsubrl
js
inc
dec
scas
jns
mov
mov
scas
test
dec
fs
jno
add
sbb
pop
outsl
jmp
mov
dec
inc
push
xchg
mov
push
add
jp
and
push
les
and
dec
or
movsl
mov
dec
adc
xchg
or
adc
test
fmul
add
xchg
lret
sti
data16
lods
out
je
aaa
jbe
inc
dec
ret
jno
insl
jo
pop
movsb
and
loop
mov
or
ret
in
add
pop
jecxz
ss
push
xor
cmc
add
sub
push
xor
mov
aaa
fs
frstor
pop
mov
in
subb
xor
mov
mov
dec
xor
outsb
push
ss
aam
push
inc
adc
test
ret
jbe
cmp
test
jno
outsb
push
sahf
and
cmp
outsb
xor
dec
sbb
mov
pusha
push
int3
orb
and
loop,pt
and
loope
call
cmp
repz
or
mov
dec
jae
loope
push
adc
push
mov
pop
inc
adc
mov
mov
pop
push
pcmpeqd
xor
cmpsb
inc
stos
idiv
mov
cmc
adc
test
int
adc
jb
pop
pop
mov
inc
mov
xorb
dec
pushf
test
xchg
mov
mov
test
loopne
in
inc
sbb
add
or
add
pusha
inc
jge
mov
repnz
inc
movsb
test
dec
or
mov
subb
mov
aas
add
outsb
popa
add
inc
mov
xchg
push
mov
pop
xor
pop
sub
fstpl
ja
dec
push
clc
push
in
lods
jae
add
mov
insb
pop
mov
sub
rcr
cltd
or
push
and
mov
xchg
int
sub
lock
inc
stos
addr16
lods
xor
or
pusha
add
shl
jge
gs
mov
hlt
loopne
add
gs
and
jle
mov
inc
pop
stc
inc
bound
imul
test
add
daa
xor
rorb
xlat
sbb
sub
cmp
sbbl
mov
mov
jmp
mov
popa
jne
add
fidivrl
mov
test
pop
or
or
inc
or
mov
dec
sub
xor
mov
dec
add
mov
jae
scas
imul
ja
sub
jg
xchg
into
lds
lea
add
jbe
push
xchg
cmp
push
and
dec
test
out
fistpl
add
push
stos
imul
add
lcall
fsubr
jge
push
std
jl
inc
jg
xor
ja
cltd
leave
es
sbb
jnp
js
sub
fwait
mov
fidivrl
fdivs
sarl
scas
pop
sub
inc
loopne
xor
xor
dec
jo
mov
sbb
das
sbb
and
push
push
aad
and
inc
pop
inc
cld
mov
mov
imul
pop
pop
icebp
daa
inc
mov
call
xor
lret
data16
cld
inc
daa
jns
mov
mov
fchs
ljmp
ret
mov
lret
jl
push
lods
fs
push
inc
inc
sbb
packsswb
push
cmp
cmp
add
sbb
inc
mov
dec
adc
popf
out
or
xor
in
rolb
cmp
iret
sub
fldl
push
notb
ret
push
roll
addb
xor
inc
sbb
popa
or
sbb
js
jl
rol
shll
shlb
sbb
and
iret
mov
lret
jecxz
leave
sti
loopne
xorl
xchg
xor
outsl
in
ljmp
in
mov
pop
xchg
icebp
icebp
hlt
cmp
pop
fwait
sub
dec
xor
punpckhdq
xchg
jl
call
cmc
pushf
pop
call
and
push
xchg
dec
lcall
mov
dec
mov
pop
xor
or
into
insl
add
xor
iret
push
mov
loopne
mov
cmp
cmp
ret
and
adc
mov
ret
outsb
inc
jmp
fimuls
mov
sub
lds
and
jp
in
xchg
stos
lods
pop
fcoms
arpl
cmp
push
movsl
test
sbb
ljmp
xor
xor
xchg
mov
outsb
sbb
dec
loopne
dec
and
and
sbb
outsl
fcoml
jo
mov
mov
gs
enter
mov
push
dec
dec
adc
jo
inc
sar
loop
mov
insl
aaa
jo
pop
lock
pop
dec
or
xchg
fcmove
dec
cmp
xchg
es
push
mov
jle
rclb
add
xor
mov
dec
jne
loop
jle
dec
xor
pop
or
sar
jmp
push
je
insb
xchg
mov
insl
mov
mov
fldl
xchg
imul
add
jmp
lock
mov
push
into
push
cs
loope
outsb
fs
add
aas
add
cs
pop
into
into
sub
adc
shll
cli
das
cmp
popa
ss
push
push
jbe
add
mov
dec
xor
dec
loopne
rolb
iret
xlat
cmp
push
aam
inc
int
repz
call
jbe
add
rcrl
push
inc
pusha
or
pop
hlt
clc
mov
pushf
enter
shlb
sbb
stos
js
imul
add
cmp
jo
out
data16
addr16
inc
fisttpl
push
cmp
rorl
clc
push
inc
ljmp
roll
xchg
lods
cli
aas
push
push
jg
into
add
mov
nop
mov
lea
clc
pop
outsl
and
ja
sub
xchg
out
mov
lods
add
xchg
out
jle
xor
mov
ja
cmp
movsb
loope
mov
push
shlb
mov
push
cmc
push
je
pushf
cmc
dec
dec
jno
rcr
or
je
lret
mov
mov
sub
add
or
mov
cmp
pop
faddl
sbb
ljmp
inc
in
inc
popa
xchg
xchg
add
fsubl
fwait
ss
inc
call
cmp
mov
mov
push
push
cmp
jb
stos
jl
ja
pop
pop
lock
cmp
repz
ja
ds
fsubrl
andb
add
and
js
ret
aaa
xchg
pusha
adc
pop
mov
xor
lahf
mov
cmp
shll
pop
mov
sub
nopl
or
add
and
pop
js
fdivrp
int3
sar
xchg
inc
bound
scas
xchg
add
xchg
adc
xchg
fists
in
imul
sbb
sarb
and
mov
iret
cmp
clc
and
push
jmp
fbld
adc
mov
inc
xchg
in
lahf
add
pop
push
dec
xlat
sub
scas
cmc
mov
sahf
ja
sar
decl
les
cwtl
shlb
xchg
cmc
push
or
sarb
pop
arpl
out
add
cmp
mov
ds
pop
lret
mov
push
cli
xchg
andb
mov
notb
out
cmp
das
popa
xor
jg
call
cmp
lock
sub
sbb
loope
xorl
push
subb
cmp
mov
mov
push
loopne
nop
mov
add
das
mov
or
jnp
loop
dec
push
sub
pop
andb
js
inc
cmp
lock
and
xchg
inc
xlat
jnp
jecxz
mov
adc
mov
shl
add
insl
aam
mov
cmpsl
mov
rol
xor
mov
cld
out
js
mov
jl
sti
movsb
mov
jns
test
ljmp
lock
pop
or
movsb
out
inc
orb
fcmovnb
dec
inc
cmpsb
es
jle
call
icebp
shlb
sbb
pop
ja
loop
rclb
xchg
sbb
mov
mov
inc
rcrb
pop
add
jno
push
add
andb
or
push
sub
dec
inc
mov
mov
fcmove
mov
addb
cld
gs
and
dec
mov
rorb
mov
or
popf
fdiv
ja
out
mov
add
dec
and
dec
push
nop
push
push
and
add
pusha
adc
sbb
ja
sub
sbb
push
cli
mov
adc
ja
dec
jge
fstpt
pop
nop
or
cmc
lock
clc
das
mov
cmp
mov
clc
hlt
or
push
fs
sbb
add
mov
ss
push
or
or
add
mov
add
dec
aam
cli
sbb
andb
stc
and
mov
arpl
mov
add
lret
sbb
mov
ret
mov
add
inc
and
mov
mov
jp
bound
mov
jno
bound
cltd
mov
mov
test
jecxz
xchg
add
call
dec
test
push
pop
add
mov
rol
jnp
leave
add
mov
mov
push
bound
data16
sbb
stos
ja
and
popa
jg
mov
bnd
jge
sbb
or
push
incl
jge
outsl
pop
mov
shrl
inc
adc
xor
cmp
sub
sbb
dec
outsb
repnz
mov
adc
pop
cwtl
test
mov
insl
mov
mov
push
xor
shll
popa
inc
js
cmp
pop
sbb
jg
mov
fimull
xchg
pop
sub
imull
and
add
or
cld
inc
rcll
movb
arpl
jecxz
push
loopne
mov
divl
andb
or
imul
mov
mov
movsb
cli
pop
mov
call
xor
xchg
add
sti
daa
sbb
mov
ja
js
and
jg
jae
pushf
dec
cmp
jp
xchg
cld
sub
xor
dec
sub
or
mov
lods
clc
cmp
push
test
push
push
jp
test
lds
bnd
lahf
adc
sub
js
nop
add
data16
push
pusha
andl
cld
cmp
add
push
iret
add
inc
sahf
dec
in
cmc
mov
sbbb
mov
sahf
mov
mov
out
es
pop
fsubr
sbb
push
aad
cmp
mov
cmp
cmpsb
fucomip
jb
inc
pop
or
cmp
std
add
xchg
pop
mov
aad
hlt
loop
stc
cs
dec
jnp
mov
test
inc
add
jno
mov
pop
xor
negl
loopne
sub
dec
cmp
cmp
lock
inc
mov
loopne
loope
xor
adc
jae
aam
pop
ret
pop
xor
mov
fbstp
pop
test
adc
cltd
test
push
adc
cli
outsl
sbb
and
ja
jle
add
das
push
inc
pop
or
or
cltd
mov
shlb
addr16
daa
cwtl
pop
mov
mov
push
and
mov
inc
dec
jbe
call
sub
and
hlt
adc
add
xor
add
mov
jns
or
cmpsb
or
or
xchg
roll
mov
pop
sbb
cs
shrl
push
rcrl
arpl
xor
pop
jbe
lds
jo
icebp
aas
orb
push
mov
mov
ja
adc
icebp
sarb
ljmp
xchg
xorb
rcrl
ds
or
push
bound
pop
xchg
cmp
pop
add
sub
fisttpl
cld
out
dec
jl
and
inc
jle
test
insl
test
fstl
and
dec
mov
movswl
push
test
xchg
jmp
sbb
rol
icebp
jmp
rcll
addl
out
mov
add
and
bound
call
sbb
sub
xorb
push
mov
jl
add
or
mov
xchg
xchg
jmp
add
das
mov
sub
imul
lock
jle
pop
fidivrl
in
xor
sbb
fwait
pop
cmc
aas
out
in
dec
sbb
and
outsb
push
inc
sbb
xchg
and
mov
in
les
loope
cld
shlb
dec
mov
adc
cmp
inc
rdmsr
shlb
fs
ljmp
add
mov
xchg
fisttpll
lock
mov
cmc
or
xchg
dec
dec
add
inc
adc
jno
inc
adc
adc
mov
call
ficoms
add
push
sahf
loope
cmp
add
je
lahf
mov
imul
pop
fists
sbb
cld
add
pop
hlt
inc
jb
xor
dec
outsl
mov
sbb
xchg
pop
sbb
int
inc
sbb
mov
dec
push
dec
inc
pop
push
dec
push
add
addr16
mov
imul
data16
arpl
fimuls
push
in
mov
jae
push
push
add
rcrb
dec
inc
push
push
jne
or
or
mov
cmp
or
push
ret
je
iret
fs
rcrb
dec
jbe
ss
hlt
clc
sti
mov
ljmp
ret
sub
sbb
in
xchg
gs
or
push
push
or
roll
mov
imul
ficoms
insl
xchg
sub
dec
dec
negl
je
mov
and
xor
add
dec
dec
sti
xchg
fs
pusha
inc
lahf
aas
mov
loopne
enter
inc
mov
xor
dec
inc
ret
jbe
imulb
push
jne
pop
jno
jbe
push
dec
std
dec
inc
pop
adc
xchg
cmp
mov
aas
add
int
cmp
xor
cmp
jo
adc
lock
test
enter
addr16
pop
dec
loopne
push
push
cmp
lahf
sbb
ja
xchg
dec
add
test
outsl
xchg
aad
cmpb
sbbl
add
pusha
mov
mov
repnz
jle
add
cld
and
test
push
repz
push
push
insl
addr16
and
adc
xor
adc
xor
jl
mov
jmp
xor
repnz
arpl
call
mov
mov
pop
add
jnp
dec
mov
loopne
jp
push
mov
repnz
repz
mov
ja
adc
mov
hlt
xchg
shlb
xor
mov
mov
fistps
inc
mov
in
dec
xor
sbb
push
mov
cmp
mov
push
fcomip
aas
pushf
pushf
ja
fisubs
shlb
add
mov
lods
jo
stos
sub
sti
scas
mov
mov
sbb
push
xor
lea
jl
xchg
dec
or
xlat
pop
adc
xlat
mov
je
xorb
mov
addb
or
loop
pop
inc
or
stc
or
in
test
or
test
scas
pop
push
and
mov
fists
push
fwait
or
and
cmpsb
xor
scas
push
dec
jl
test
sbb
and
enter
hlt
outsb
xlat
fstps
out
xor
pusha
lea
add
sub
scas
sbb
hlt
in
jge
cmpsl
mov
pop
out
rcrb
adcb
shrl
mov
xchg
xchg
add
mov
mov
jb
inc
add
jnp
xchg
leave
xchg
mov
push
dec
mov
add
leave
xlat
push
dec
xchg
ret
xchg
ret
clc
lahf
jecxz
pop
cmc
ja
and
rol
aad
leave
faddl
cmp
andb
ret
mov
shlb
xor
push
stc
dec
pop
jg
out
jo
lods
lahf
scas
add
adc
add
mov
jmp
sbb
rclb
add
cld
nop
sub
lea
mov
sbb
push
adc
lcall
fildl
into
ret
andb
jns
lds
xchg
rcr
sarb
in
cs
ja
or
ret
sub
rcl
lahf
outsb
icebp
xor
call
rcr
sbb
push
pop
movsl
mov
xor
xor
ja
pusha
subb
or
xchg
test
lock
in
push
shll
mov
pop
je
add
push
jmp
ret
mov
aad
xor
shlb
inc
push
hlt
das
popa
sbb
xorl
mov
jo
outsl
push
sbb
mov
loope
test
sahf
mov
es
push
cmp
sub
mov
cmp
mov
sbb
js
incl
cmpsb
aaa
inc
pop
mov
dec
test
lock
outsb
and
push
sub
jmp
out
jle
mov
dec
pop
bound
aam
cwtl
daa
jnp
mov
adc
roll
loope
lock
push
pop
ss
sar
ret
popf
addl
or
test
sub
test
or
xchg
inc
sbb
inc
pop
mov
sbb
cli
jo
sar
mov
push
xchg
pop
loopne
clc
outsl
push
loope
jno
icebp
mov
in
cltd
sahf
call
icebp
cmp
das
shlb
mov
gs
ss
and
mov
aad
nop
adc
repnz
xchg
loop
lock
pop
jbe
arpl
testb
pop
test
adc
subb
xchg
sbb
inc
push
lods
and
mov
notb
ret
adc
das
add
pop
cli
sbb
lock
icebp
mov
mov
imul
lahf
sbb
push
mov
enter
test
adc
sbb
adc
xchg
outsb
neg
mov
and
dec
mov
or
lret
inc
mov
cli
cmp
lock
aad
clc
mov
or
push
jg
push
mov
jno
cli
scas
lret
outsl
ds
cwtl
jmp
cwtl
xor
add
pushl
xchg
fidivrl
jae
or
test
mov
pop
das
int3
xchg
xchg
loope
orl
mov
push
pop
add
adc
jmp
ja
cmp
in
adc
mov
into
mov
and
ds
call
dec
pop
jnp
test
push
pushf
pop
dec
loop
jno
bound
jmp
xor
lcall
outsb
sti
sbb
daa
adc
pusha
adc
mov
scas
mov
cmpsl
dec
and
jo
jbe
mov
fs
add
adc
push
adc
push
rcrb
or
mov
jne
xor
je
mov
add
push
enter
cmpsb
jbe
fldt
dec
jnp
into
lcall
adcb
data16
mov
and
mov
pop
je
dec
jo
iret
leave
cmp
pop
addl
test
adc
cmpb
stos
pop
pop
pop
add
or
jecxz
std
cmpb
add
xor
sub
jbe
and
adc
fcomps
mull
lock
fs
mov
fs
pop
sbb
mov
mov
dec
cmpb
xor
test
mov
mov
aaa
out
lods
shrl
jp
ficompl
lcall
and
fcompl
cmp
dec
pop
xchg
call
mov
pop
dec
notb
addb
scas
cld
sub
sub
adc
sbb
je
push
int3
out
cmp
ret
repz
jle
enter
sti
xchg
cs
loope
les
loop
popf
sbb
movsl
jle
iret
push
divb
loopne
int
cmc
push
add
dec
pusha
out
or
add
je
lds
inc
movsl
mov
add
test
decb
jge
jle
jp
movsb
add
xchg
sbb
cmp
pusha
mov
jb
or
lock
loope
xor
push
add
xor
cwtl
xorb
mov
and
stos
out
add
add
cmp
xchg
mov
lea
push
sub
cld
sarb
mov
xchg
lds
push
ficompl
and
ljmp
out
push
aad
js
dec
inc
mov
leave
out
add
test
xchg
stos
jp
cmp
pushf
filds
loopne
loopne
xchg
dec
sti
loopne
loopne
loopne
or
or
add
push
scas
outsb
jne
inc
insb
add
sub
push
jne
add
and
xchg
dec
dec
inc
xor
inc
insl
arpl
jo
mov
arpl
insb
inc
subb
test
inc
ss
imul
cmp
jns
add
hlt
xchg
roll
mov
out
inc
push
ss
inc
insb
ljmp
js
sub
dec
push
inc
and
shll
jne
adc
add
into
inc
into
xchg
jle
in
ficoms
dec
push
mov
daa
dec
lea
push
fmul
rcrb
addr16
adc
pop
sub
rcrb
push
rorb
xchg
mov
push
ss
xor
add
or
inc
shlb
mov
mov
mov
enter
mov
and
jae
jne
inc
cmp
cwtl
jns
shll
in
stos
sbb
cld
les
push
push
jge
dec
outsl
es
dec
jecxz
int
add
insb
outsb
push
or
loopne
shrl
push
outsb
push
jnp
push
dec
fldcw
out
jbe
lea
pop
ret
push
xchg
push
push
loop
inc
inc
xor
add
sub
sbb
xor
lahf
cvtps2pd
fcomps
push
mov
js
or
loop
cmp
dec
inc
mov
rol
dec
adc
mov
pusha
insb
cmpsb
and
imul
jb
pop
xchg
orl
icebp
push
jo
mov
mov
ss
gs
aaa
ss
xor
insl
mov
dec
gs
jle
cs
pop
cmp
inc
mov
inc
cmpsb
loop
lret
dec
lods
mov
push
xor
jnp
lcall
les
clc
sub
sub
push
insb
test
scas
adc
sub
add
int
lea
lods
cs
ja
dec
mov
or
shrb
pop
and
add
or
mov
imul
and
mov
push
jge
iret
sub
rcll
pop
lds
jl
cs
and
mov
loop
lock
dec
jl
xor
mov
idiv
lods
std
push
decl
cwtl
push
or
pushf
ja
mov
mov
sub
sub
lret
jne
jbe
push
pop
add
test
fs
mov
xchg
inc
or
stos
fsts
fbstp
sar
ja
xchg
mov
xor
daa
adc
push
jg
xor
sahf
loopne,pt
pop
sub
add
mov
aam
sbb
out
movsl
popa
or
leave
sub
data16
sub
inc
push
xor
shll
dec
add
push
xlat
andb
jmp
sti
lahf
mov
adc
xor
add
data16
or
inc
mov
fidivrs
xor
push
dec
add
xor
outsl
leave
or
jg
pop
pop
xchg
jno
subl
xchg
popa
mov
push
xchg
xlat
xchg
xchg
inc
pop
das
and
mov
popa
gs
add
mov
mov
outsb
push
add
add
add
addr16
push
cld
xor
sbb
es
imul
mov
dec
out
dec
insb
pop
jo
xchg
xchg
mov
enter
sarb
mov
sbb
into
fnstsw
dec
dec
call
pop
sub
stos
push
lds
ja
clc
or
aas
jecxz
test
sbb
loopne
dec
loop
pop
xchg
xchg
jo
and
je
cmp
ja
inc
dec
data16
insb
pop
sti
mov
xlat
lods
mov
pop
fidivl
mov
jb
in
das
out
xor
xchg
push
lret
add
mov
jge
add
loope
loopne
sbbb
pop
ds
push
popf
mov
outsb
vphadduwq
add
xchg
and
fxtract
mov
and
mov
fistpl
push
add
insb
pop
lea
sub
jp
popa
fildll
fadds
push
iret
dec
jp
mov
je
cmc
fadds
adc
aas
jb
inc
add
pop
sub
mov
sahf
inc
jo
pop
dec
add
sbb
divb
cmp
faddl
mov
scas
test
ja
cwtl
add
clc
add
cmp
pop
mov
and
xchg
lock
or
pop
js
outsb
stos
jle
mov
shlb
int3
and
sahf
repnz
pop
add
sbb
sub
cmp
xchg
faddl
cwtl
dec
dec
pop
lock
jb
sahf
xchg
shlb
sub
fcmovne
test
jo
in
add
repz
data16
dec
scas
in
or
mov
nop
xchg
cli
inc
push
or
sub
mov
add
inc
adcb
sub
hlt
aad
cs
out
lret
or
pop
jmp
rcll
rclb
cld
xor
lahf
mov
pop
int3
xchg
or
adc
out
xlat
out
mov
out
pop
out
adc
shl
jecxz
cmc
pop
aad
inc
lds
cld
xorb
fldt
mov
cmp
mov
cmc
icebp
push
movsb
cmp
call
pop
sti
jae
pushf
fs
scas
in
in
imul
clc
or
leave
scas
push
sbb
cmp
xchg
inc
xchg
lds
mov
mov
push
sub
or
pop
lods
dec
push
push
jmp
jmp
add
adc
add
mov
in
shll
pop
sbb
mov
pushl
inc
fwait
fwait
movsb
sub
mov
inc
cld
mov
aad
cmp
add
xchg
mov
repnz
scas
mov
inc
pop
pop
je
imul
xchg
outsl
inc
xchg
movsb
call
scas
imul
push
das
lcall
out
lock
and
mov
adc
int3
outsl
movsl
cmpsl
sub
cmc
add
ds
loop
inc
mov
adc
dec
movsl
call
es
add
jl
or
lock
outsb
jns
lahf
or
insb
lsl
fwait
xor
ja
sub
jl
jo
cmp
into
jecxz
test
loopne
scas
or
add
cmp
imul
dec
add
cmpsl
stos
add
cmp
in
xor
xchg
pop
cmc
repnz
in
sahf
add
push
cmp
jecxz
into
adc
ss
pop
and
push
loop
inc
cld
add
jle
sub
sbb
rcl
jbe
outsb
cmpsb
jo
hlt
inc
out
call
fs
xor
or
cld
mov
jmp
xchg
inc
pop
xchg
aaa
pop
ja
clc
outsl
sarb
fs
jae
add
xchg
outsb
inc
push
inc
js
or
inc
sbbl
jg
push
cmc
jg
push
das
inc
adc
xlat
cmpb
add
jo
rclb
popa
scas
data16
incl
gs
test
and
ret
pop
or
cmp
sub
inc
test
mov
pop
mov
lods
gs
cmp
popf
cli
inc
in
cmp
daa
in
jp
out
iret
movsl
lea
mov
inc
push
rclb
jecxz
push
sahf
mov
mov
lret
xor
adc
xor
lea
cmp
rorb
sbb
push
scas
daa
or
lahf
shll
cs
jns
pop
aas
shr
add
push
out
add
xchg
cmp
jno
arpl
cld
and
call
iret
ss
popf
push
xor
jle
jne
into
ljmp
int
xor
or
inc
pop
insl
mov
lods
pusha
fwait
lock
adc
aam
sub
xchg
cmp
in
mov
out
jmp
aaa
mov
jne
pushf
inc
pop
inc
mov
addr16
cld
lahf
add
and
movb
out
and
mov
mov
adc
or
push
in
hlt
scas
fiaddl
inc
notb
call
pop
popf
dec
lcall
adcl
jg
in
lcall
push
insb
pop
adcb
test
jmp
inc
cs
sub
sbb
dec
leave
inc
adc
mov
dec
or
call
pop
add
sub
out
cmp
pushf
mov
sbb
rcrb
mov
add
mov
bound
cmp
iret
xchg
insb
sbb
cs
roll
daa
roll
imul
ret
mov
mov
dec
or
mov
push
or
testl
xlat
add
lock
sahf
pop
bound
mov
jg
jmp
push
test
je
orl
jo
js
push
lea
mov
cltd
xlat
cmpsl
sbb
mov
push
ret
cmpsb
fcoms
adc
sub
pop
add
imul
data16
dec
sub
cmpsl
gs
jne
push
inc
cmp
fmuls
push
call
mov
lds
inc
pop
add
fldl
bound
xor
mov
lret
iret
mov
and
add
loope,pt
mov
jo
cmc
mov
inc
ret
push
push
dec
inc
pop
mov
fstpl
outsb
addr16
push
shrb
incb
or
imul
push
mov
hlt
scas
jl
pop
xchg
push
dec
fwait
add
dec
loop
xchg
push
sbb
addr16
lods
sub
cmc
sbb
stc
jae
aam
ja
repnz
or
lahf
lods
jg
lds
rorb
pop
pop
mov
call
std
outsl
push
mov
xchg
and
sti
movsl
pushf
rcrb
repz
cmc
add
or
lea
lods
add
lcall
scas
adc
add
icebp
ud0
popa
mov
cmp
add
imul
add
dec
sbb
sahf
int3
ljmp
push
sbb
ja
sub
pop
pop
cmc
nop
cmpb
aad
arpl
push
sahf
pop
je
mov
cmp
enter
jbe
loop
sbb
daa
adc
scas
ss
scas
push
stos
dec
fmuls
into
mov
in
pop
mov
ret
sub
in
orb
cmpb
movsb
push
cmp
pop
mov
stos
pop
cmp
test
lcall
push
xchg
es
lods
add
dec
xchg
ss
and
leave
xor
jmp
ds
add
loopne
das
leave
mov
jbe
mov
sub
cmpsb
cmpb
mov
vucomiss
and
cmp
jp
xor
xchg
add
mov
cwtl
sub
hlt
lret
mov
jb
xor
pop
test
adc
cmp
lcall
movsb
loopne
into
into
add
lock
push
nop
arpl
xchg
loope
repz
and
loopne
js
jg
in
adc
and
or
mov
movsb
cmpsb
sub
fdivr
mov
sub
mov
ds
fcomp
push
mov
sub
add
loop
adc
bound
in
cwtl
mov
add
xchg
fwait
pop
nop
aam
clc
cs
lahf
xchg
ja
pop
and
or
test
mov
mov
push
icebp
push
adc
sub
cs
pop
sub
add
and
or
clc
mov
xchg
sahf
enter
adc
outsl
je,pt
ja
xchg
inc
mov
mov
jns
mov
add
mov
xchg
fcmovnbe
and
fs
cmp
xchg
mov
or
clc
mov
std
bound
add
and
xchg
loopne
cwtl
das
cmp
or
test
and
out
hlt
xchg
push
addb
push
cmp
add
decl
fimull
add
fdivrs
mov
lods
xchg
je
and
loopne
ja
sbb
push
sub
xor
cmpsb
pop
nop
sbb
mov
sub
and
fbld
imul
xor
adc
fdiv
mov
cs
push
ljmp
jmp
xor
aaa
or
fcomip
add
push
jno
cs
int3
adc
mov
mov
adc
lock
or
jno
into
add
mov
mov
cmp
xchg
xchg
fmuls
cmpsl
adc
sbb
pop
test
fstl
gs
ja
or
ja
add
cmp
mov
add
loope
mov
adc
pushf
dec
in
popa
inc
add
gs
cmp
subl
add
and
ja
das
jl
add
fs
test
leave
pop
roll
adc
push
leave
and
aam
sub
mov
das
hlt
push
cmc
stc
xor
jmp
jp
cld
xchg
cmp
stos
int3
jns
inc
add
pop
jge
add
jmp
jmp
xor
cmp
clc
jmp
in
das
push
adc
pop
push
xchg
ljmp
add
or
aam
jne
dec
add
pop
mov
iret
ret
inc
cltd
into
xor
fstpl
push
pop
jecxz
sbb
mov
push
fs
mov
mov
inc
ja
loope
pushf
test
jb
mov
cld
cmc
pop
fistpll
fmuls
push
loop
incl
ja
adc
mov
adc
mov
jno
rolb
or
scas
insl
test
mov
add
sbb
subb
daa
push
add
dec
xchg
fmuls
lock
push
rolb
jne
or
and
or
pop
loopne
or
jmp
fwait
add
das
sarb
pop
ss
xor
xlat
nop
mov
out
aam
icebp
popf
adc
mov
add
aam
fwait
movsl
lret
outsb
lsl
iret
scas
push
inc
call
add
sbb
jnp
sbb
cmc
cld
inc
pop
jl
cmp
aas
jmp
pop
or
mov
cld
cs
and
mov
mov
popf
sub
je
cmp
dec
xchg
pop
xchg
pop
jo
xor
cmp
mov
mov
add
push
push
dec
xor
push
sub
mov
pushl
test
pushf
mov
xor
pusha
add
push
or
into
adc
push
pop
icebp
gs
int3
daa
ja
mov
jge
and
xchg
inc
sbb
lret
lods
out
push
adc
iret
mov
subl
in
fidivl
pop
inc
add
sbb
les
jnp
xor
rcr
push
xor
mov
inc
nop
inc
cmpsb
test
jg
sub
into
add
inc
out
pop
mov
fcompl
xchg
int3
ss
in
sahf
test
jmp
push
dec
xor
cs
cmp
into
mov
jbe
cmp
in
or
mov
rcrb
pop
js
jl
xor
inc
cwtl
push
adc
fnstcw
cmpb
inc
mov
aad
inc
xchg
paddd
cwtl
inc
shrl
sub
dec
cmp
sub
inc
jbe
jno
mov
jns
sarl
fcmovnb
repz
cmp
or
push
xor
add
test
call
push
ja
push
sub
mov
out
test
fisubs
sub
mov
or
std
lock
sub
push
lds
sub
xor
mov
add
ljmp
mov
sub
push
sbb
test
cwtl
repnz
jmp
subl
into
popf
jl
popf
lock
testl
mov
lock
cs
sbb
mov
mov
sub
pushf
xchg
jns
xchg
mov
fwait
or
or
mov
in
shrb
xchg
scas
mov
aad
xchg
sub
xor
jle
cmp
xchg
mov
mov
dec
add
lods
ret
jecxz
scas
clc
cwtl
push
stos
xlat
aas
dec
dec
inc
add
adcl
movsl
out
jb
mov
cmc
insl
jno
adcl
ja
mov
data16
js
movsl
push
jo
insb
sbb
lock
push
loop
mov
push
jge
out
dec
pop
jne
push
fdivs
jns
mov
mov
xor
call
int3
ljmp
add
mov
mov
mov
cmp
inc
jo
cmp
out
adc
or
sub
add
daa
loop
inc
dec
adc
rorb
pop
inc
push
sti
lahf
popf
shlb
scas
jp
xlat
push
out
push
lods
lahf
decl
scas
aad
lods
ja
in
add
push
jg
push
mov
mov
mov
mov
push
sbb
stos
stc
add
xchg
cmp
lret
lods
movsl
cmpsl
incl
cmpsl
mov
inc
dec
sbb
adc
adc
dec
ds
push
arpl
adc
roll
insb
jge
pop
ss
lcall
add
mov
or
jb
sub
sbb
sarl
jae
ja
scas
cld
mov
adc
inc
xchg
xchg
or
pop
pop
lock
adc
cwtl
lret
inc
ja
and
daa
push
or
add
cld
lds
cmp
lcall
mov
cwtl
test
aaa
aad
lock
xor
lahf
loop
mov
push
daa
inc
mov
mov
in
add
xchg
xchg
pop
rcrb
adc
sbb
clc
mov
push
jmp
or
leave
cmp
xchg
roll
sar
or
aad
mov
inc
adc
fsubrs
sbb
dec
bnd
pop
flds
jo
sbb
pop
push
lret
incl
testl
enter
addr16
xchg
mov
mov
lea
cmp
sahf
mov
incb
dec
mov
fstp
repz
xor
mov
in
adc
add
cmp
cmp
xchg
out
imul
mov
mov
inc
push
push
lahf
test
dec
dec
xchg
cmp
pop
sbb
pop
bound
xchg
filds
push
push
mov
dec
mov
jg
insb
out
imul
ja
jecxz
sbb
into
cmp
incl
xchg
ja
push
adc
popa
and
push
imul
fs
mov
sti
out
icebp
and
ja
js
xchg
daa
or
cld
xchg
aaa
in
sub
loopne
mov
shl
or
cmc
test
cld
sbbb
arpl
test
cmpsb
sar
js
or
test
xchg
ss
xchg
in
sarb
fwait
popf
pop
add
mov
fwait
jp
aad
out
jl
cmp
add
sahf
xchg
or
divb
in
mov
sbb
adc
insb
inc
in
or
pushf
add
pop
cld
pop
mov
add
aaa
dec
push
data16
mov
jbe
add
paddd
sti
or
pop
lahf
xchg
cmpsb
mov
push
imul
xchg
mov
dec
jno
xor
ja
cmp
add
fldt
cmp
cmpsb
clc
cmp
pop
rcrb
xor
pushf
push
sub
push
shl
sub
fisubs
jno
lret
ficoms
cli
mov
mov
sub
ret
outsb
sub
push
shll
insl
sbb
sbb
mov
xchg
pop
roll
xor
movb
xor
fisubrs
test
hlt
aas
mov
cld
push
jne
and
test
outsb
sub
jg
inc
add
stos
adc
cmp
add
or
jle
mov
inc
gs
mov
adc
mov
or
sub
movsl
add
cmp
loope
mov
ljmp
add
lcall
sub
das
movsl
jmp
push
inc
imul
aam
das
push
dec
fcomps
popf
push
cmc
out
lcall
push
stos
div
fld
cmp
cmpsb
inc
out
popf
add
data16
mov
adc
aas
mov
jnp
xor
insl
shrb
add
aas
fadds
sub
dec
or
orb
in
cmp
or
push
sub
pop
ror
xchg
xor
cmc
and
add
leave
pop
daa
insl
in
pop
pushf
mov
fmuls
movsl
movb
ljmp
ds
pop
lock
rolb
or
push
andb
mov
jb
mov
and
aad
adc
sub
dec
jmp
psubw
test
lcall
add
sub
add
and
cmp
pop
aaa
xchg
jnp
cwtl
ja
repnz
dec
sbb
mov
xchg
push
jbe
pop
sarl
and
jg
les
adc
cwtl
test
push
movsl
shrb
jne
into
xor
push
fcoml
ror
xor
icebp
imul
popf
pop
cmpb
xchg
cmpsl
fisttpll
decb
mov
sbb
lods
inc
adc
push
push
xor
popf
jbe
pop
jo
jb
push
ficomps
scas
call
jecxz
shl
fimull
adc
push
push
lret
mov
xchg
mov
ljmp
inc
rorl
movsb
pushl
hlt
aad
imul
push
fildl
paddb
jecxz
ret
push
in
xchg
fs
fbld
add
push
mov
ret
mov
lret
les
pop
cmp
fs
inc
or
fst
sub
pushf
push
ljmp
add
or
fbstp
jmp
insb
fdiv
sub
and
xor
ds
cmp
push
ja
jp
lods
es
cs
mov
and
insb
or
sub
paddusb
call
enter
sub
sbb
mov
mov
xor
stos
add
push
movsl
mov
dec
mov
testl
ret
push
insl
or
sub
mov
cmc
xor
data16
pushf
sub
roll
mov
cmp
add
fcomip
fildll
clc
pop
add
pop
xor
sbb
stc
or
hlt
rorl
jo
test
sub
int
pushf
and
cmpl
or
test
or
push
cli
nop
adc
cmp
mov
shrb
shl
push
ret
rcrb
fdivrl
lods
xchg
push
ja
aam
inc
ss
aam
cmc
cmpsl
lahf
xchg
xor
mov
add
arpl
scas
ds
rolb
loopne
stos
scas
icebp
test
mov
sbb
mov
inc
mov
dec
jp
ja
mov
nop
sub
sbb
pop
out
cld
movsb
cmpsb
test
es
xchg
inc
sar
inc
imul
pusha
pop
in
jb
cmp
inc
xor
fwait
js
jo
jecxz
je
adc
sahf
gs
addr16
mov
imul
cmp
scas
mov
or
es
xor
lea
cmc
ss
loop
mov
mov
mov
inc
fidivs
inc
add
xlat
ss
in
adc
jmp
pop
arpl
push
addb
cwtl
ret
outsl
jne
lock
loopne
or
loop
mov
push
mov
push
inc
jmp
push
js
jp
dec
bound
adc
push
xor
mov
jae
jo
mov
outsl
fldln2
xchg
repnz
out
pop
jmp
outsl
nop
pushf
xchg
push
mov
dec
loop
scas
mov
and
cltd
aam
insb
cmc
push
xor
and
fcomps
incb
push
je
mov
ret
or
nop
jo
xor
not
mov
stc
aaa
dec
inc
js
sub
imul
cwtl
sub
and
shlb
xor
push
fwait
aam
mov
adc
dec
dec
push
inc
movsl
jno
dec
dec
jmp
and
or
ds
pop
or
dec
dec
es
loopne
dec
jecxz
add
and
movsl
adc
cmp
mov
mov
push
rclb
push
nop
push
inc
xchg
gs
int
mov
xor
mov
je
stc
dec
loope
fdivrs
dec
outsl
adc
cs
xchg
inc
xor
mov
js
out
rclb
inc
xor
sub
je
cmc
dec
and
inc
fiaddl
aaa
mov
into
mov
pop
fwait
bound
outsb
and
push
dec
xchg
jp
iret
std
and
add
es
mov
fs
xchg
testb
jle
jmp
xor
inc
jb
push
dec
pop
les
adc
xchg
aad
shlb
pop
and
sbb
xchg
mov
mov
scas
push
lahf
adc
and
in
jp
sbb
jnp
push
jnp
stc
loopne
push
jo
adc
xchg
adc
mov
mov
mov
xor
mov
dec
sbb
ja
cwtl
sub
pop
jmp
pop
mov
xchg
lea
jle
push
xchg
push
leave
mov
mov
out
mov
out
mov
dec
fidivs
mov
loopne
hlt
mov
xorb
cmc
sbb
les
pop
or
lods
mov
fimull
add
mov
lods
push
mov
sti
add
mov
sbb
add
fsubs
inc
iret
pop
int3
pop
add
sub
and
and
idiv
cmp
pop
and
lcall
jbe
mov
daa
xorb
add
mov
jae
inc
fmuls
lret
std
add
mov
test
xchg
mov
xor
jo
cmp
push
mov
loop
and
add
mov
cs
xor
or
xor
xor
sub
aam
lock
push
lret
loope
pop
icebp
test
mov
je
lea
sbb
dec
jbe
shl
test
mov
inc
mov
inc
shll
aad
push
jno
fidivl
fincstp
mov
pop
outsl
sub
push
dec
jecxz
in
jnp
fldl
cmp
pusha
repz
add
fimull
imul
pop
insl
sahf
adc
lods
and
lret
lret
rcll
cmpsl
pop
shrb
or
xchg
pop
jl
outsl
push
push
cmp
and
add
lds
addr16
insb
adc
pop
dec
outsl
les
xor
xchg
xchg
addl
mov
out
sti
xchg
add
mov
push
inc
and
jno
scas
daa
xchg
out
add
pushf
out
ja
lock
xchg
pusha
pop
popa
push
lods
ja
mov
xchg
mov
push
idivb
js
imul
sbb
cmp
es
xor
pop
adc
xchg
cmp
sbb
ja
jle
jmp
enter
emms
aaa
adc
divl
mov
ds
gs
sbb
mov
js
pop
mov
mov
pop
dec
cmp
test
mov
pushf
adc
ds
mov
js
ficompl
push
push
xorb
cmpsb
ljmp
popa
cmp
adc
scas
jmp
sti
rdmsr
push
shrb
es
repnz
mov
lods
pop
les
cli
mov
test
push
sub
pop
or
repnz
sahf
cmpsb
nop
pop
data16
fstps
fsubs
add
push
lret
das
outsb
mov
lds
imul
sub
test
pop
inc
out
shll
dec
shrd
sbb
inc
lods
mov
pusha
sub
in
sub
xor
inc
inc
ja
rclb
lret
sbb
add
ja
add
lret
xchg
aam
push
cli
leave
or
in
fidivrl
js
inc
inc
xchg
repnz
xchg
mov
in
das
dec
jno
xchg
xchg
jp
mov
jmp
mov
push
add
mov
icebp
sbb
xchg
int3
insl
clc
and
cmp
pop
loope
xor
mov
popf
inc
add
mov
cmpsb
in
push
mov
sub
mov
cli
mul
mov
scas
lods
add
add
das
and
xor
dec
jge
mov
adc
std
rcll
cmpsl
popa
leave
out
push
mov
pop
notb
mov
jg
clc
outsl
daa
and
insb
pop
fadds
aaa
cmp
sti
inc
mov
ret
in
movsb
jle
sarl
dec
jo
lea
xchg
jno
cmc
std
jb
adc
xchg
push
mov
test
iret
icebp
sbb
ljmp
mov
ret
loop
bound
adc
adc
aad
pop
and
lret
mov
nop
lret
cld
std
xor
mov
loope
mov
fistl
push
lret
decl
inc
lret
sbb
push
ljmp
icebp
rorl
cltd
clc
lea
jo
xor
mov
je
clc
int
aas
add
lret
daa
add
outsl
adc
les
mov
add
sbb
mov
bound
jmp
and
rolb
lds
inc
push
les
das
dec
out
cmp
add
scas
movsl
xchg
xorb
lahf
cmc
sbb
xchg
aam
imul
lods
outsb
sarb
leave
les
ja
dec
and
cli
xchg
pop
pop
bound
mov
cltd
jmp
xor
xchg
inc
out
xlat
outsl
xchg
sysexit
add
mov
ds
mov
cmpsb
inc
dec
xchg
push
cli
shl
mov
xchg
arpl
push
jl
add
sbb
mov
movsl
jb
jne
fsubs
adc
xor
sbb
mov
testl
push
mov
dec
cmp
mov
repz
sub
adc
dec
clc
sbb
lahf
roll
sbb
mov
xchg
push
xor
cli
and
stc
mov
and
das
negb
cwtl
lea
jne
pop
xchg
xlat
mov
push
or
sub
dec
imul
mov
xchg
dec
test
test
sbb
cmp
jbe
or
testl
xchg
cli
pop
pusha
xlat
es
flds
sbb
pop
decl
loopne
scas
push
aad
dec
or
push
xor
clc
and
or
pop
les
int
push
data16
cmp
bound
adc
fs
les
xchg
ss
jl
cmp
xor
gs
or
push
insl
xchg
adc
pop
dec
test
mov
inc
stc
dec
insb
add
dec
outsb
xchg
test
fwait
add
and
inc
call
inc
fildl
fimuls
jmp
xor
add
loopne
add
xor
inc
push
gs
test
dec
ret
inc
dec
js
mov
jmp
dec
mov
adc
or
jo
add
fnsave
icebp
and
mov
or
dec
jns
mov
stc
cmc
xor
xchg
call
pop
push
outsb
insb
push
jns
ret
push
inc
data16
xchg
sbb
sti
jno
test
jmp
addb
push
xor
xorb
cmp
and
jl
imulb
dec
mov
mov
push
out
dec
xchg
dec
arpl
or
dec
in
loope
add
mov
pop
inc
inc
fwait
ret
xor
add
dec
adc
lahf
rdmsr
pop
jge
data16
aaa
cmc
jae
jp
dec
push
imull
insb
js
push
shrb
pop
clc
and
pop
jmp
cmp
xchg
push
adc
pop
shrl
jns
adc
stc
sbb
mov
dec
add
out
jo
jb
rolb
xchg
inc
into
insl
and
mov
fs
nop
test
sahf
ss
push
cli
js
inc
mov
mov
jno
adc
or
mov
jae
push
or
pop
mov
inc
add
hlt
ficoml
aaa
insl
jnp
pop
inc
mov
out
jae
jo
or
adcb
insl
rorl
aaa
dec
jae
push
pop
adcb
sbb
iret
les
or
mov
decb
xor
js
xor
xor
clc
outsl
lods
pop
dec
dec
jne
dec
push
dec
mov
cmpb
inc
outsl
xor
dec
gs
adc
movsb
pcmpeqw
xor
sbb
call
push
popa
xor
push
insl
movb
lea
push
push
push
pop
dec
xor
rolb
aam
je
rclb
and
imul
mov
jo
xchg
lret
mov
ljmp
pop
out
push
in
pop
pop
cli
and
pop
cld
enter
or
js
bound
mov
nop
test
insb
dec
outsl
data16
outsl
push
shll
shl
lcall
jb
fbstp
cld
inc
test
jmp
bound
test
cwtl
les
dec
mov
sub
jmp
imul
ret
push
xor
jb
mov
shlb
mov
shl
dec
add
adc
xchg
jp
hlt
addr16
aaa
inc
aaa
add
ss
sbb
shlb
gs
or
testb
push
adc
add
ret
ss
jns
test
enter
dec
cmp
sbb
sub
in
xchg
inc
pop
jle
mov
cmp
loop
inc
inc
add
sub
adc
push
add
inc
outsl
jbe
loope
nop
add
popl
cs
xor
push
jno
out
shlb
adc
mov
cmpsb
loopne
dec
and
add
addl
push
in
pop
lret
mov
jns
dec
data16
push
or
inc
shlb
mov
add
outsb
jbe
mov
mov
inc
xor
dec
stc
sbb
cs
rorb
rcll
cmc
sub
inc
dec
dec
add
testb
xor
rorl
inc
cs
jnp
insb
cmp
mov
ret
nop
jb
or
ret
and
xor
mov
xchg
push
and
pop
dec
and
mov
mov
jb
inc
outsl
xor
cmc
push
dec
aaa
jae
je
xor
lods
or
jne
rorb
loop
out
dec
or
mov
popa
fmuls
xchg
jo
push
xor
dec
inc
dec
add
push
inc
dec
add
sub
cmp
mov
jo
ja
shlb
cmp
xor
inc
popa
xchg
arpl
add
mov
daa
clc
push
nop
xor
ret
inc
daa
inc
pop
or
add
aaa
sbbb
dec
dec
mov
pop
push
daa
test
test
out
outsl
mov
jbe
shll
inc
popa
jns
push
jae
loope
jmp
jecxz
insb
sbb
pop
addr16
adc
inc
fimuls
cmp
loopne
adc
js
push
mov
cmp
imul
and
rcr
lock
push
movb
inc
dec
inc
cmp
dec
xor
ucomiss
decb
mov
out
xor
push
inc
loopne
dec
sahf
dec
push
cmp
shlb
and
jp
div
mov
push
xor
test
dec
insb
data16
dec
dec
out
inc
push
xor
popa
mov
loop
jne
xchg
push
outsl
aad
push
xor
fidivl
ja
repz
outsl
jns
dec
push
rclb
sub
push
sbb
ret
jae
call
imul
nop
xor
sub
push
xlat
and
sub
imul
sub
outsl
pop
stc
test
imul
dec
pop
inc
push
in
push
pop
cmp
dec
jo
cld
and
addb
cmc
jmp
movsb
ljmp
repnz
or
rcr
inc
mov
xchg
pop
sbb
push
jne
jo
sarl
jo
test
notb
push
dec
fcomps
xor
mov
xchg
jne
test
add
xchg
cmp
imul
insb
dec
jb
add
mov
mov
mov
clc
icebp
mov
dec
aam
push
out
dec
inc
aaa
push
cli
mov
or
jo
mov
mov
aaa
insb
xchg
popa
jno
add
lahf
test
bound
mov
mov
pop
add
sub
aam
cmp
adc
jno
js
shrl
lods
xor
jp
dec
loopne
out
dec
je
sbb
xchg
mov
pusha
arpl
or
lods
lahf
shlb
xor
inc
xor
pop
push
ret
dec
loope
inc
popa
or
andl
ret
push
addb
in
xchg
psllq
mov
mov
or
lcall
mov
mov
movsl
pop
xchg
shr
stos
mov
jns
xchg
xchg
mov
add
pop
push
repnz
call
and
and
dec
cli
cmp
fcmove
lds
dec
ljmp
mov
je
fcoms
lods
leave
mov
nop
pop
andl
cmp
mov
imul
pushl
insl
aam
or
jns
add
loop
insb
push
add
xor
xchg
in
ja
setle
push
sub
xchg
push
fstpt
jb
sub
sbb
in
mov
and
mov
sti
nop
xchg
popa
in
fldt
mov
push
leave
cmp
xchg
sbb
popf
jp
and
test
jae
cmpb
or
adc
arpl
jle
xchg
lea
das
test
dec
out
sbb
shrl
fstpt
mov
rclb
movsb
and
cltd
movsb
shlb
push
jne
mov
out
sub
jno
sub
out
xor
sub
dec
xchg
ds
cmp
xchg
cmp
or
inc
rcrb
out
push
add
add
dec
cmp
pop
test
out
call
dec
and
adc
sbb
pusha
xor
bound
cmpsb
cli
cmpsb
ja
test
pop
loope
je
add
push
popf
mov
dec
stos
in
inc
ficoml
add
and
lahf
mov
jl
xchg
mov
or
insb
into
test
adc
jae
jecxz
icebp
xchg
das
and
imul
push
adc
pop
pop
je
ret
in
pop
dec
repz
cmp
idivb
fwait
xor
xchg
or
push
mov
lret
jne
test
mov
fldenv
loopne
inc
loope
xchg
pop
dec
in
enter
ds
lock
decb
or
jg
iret
popa
cs
js
into
dec
and
cmp
or
mov
std
je
pop
arpl
inc
mov
pop
inc
push
pop
insb
pusha
dec
ds
rorl
or
ja
mov
xor
add
cld
repz
pop
mov
aaa
sub
enter
adc
rol
push
jg
fsubr
jno
and
dec
adcb
and
fucompp
lock
sbb
inc
adc
sbb
xor
mov
dec
andl
fcoml
aaa
pop
sbb
or
mov
lret
jb
adc
adc
cmp
xchg
mov
lods
push
pushl
sub
std
arpl
sbb
das
inc
rol
jle
adc
repz
mov
insl
cwtl
xor
popf
dec
es
cld
movsl
jl
xor
add
pop
push
in
cmpsl
pop
icebp
cs
popf
jmp
xor
sar
pop
out
cmpb
mov
dec
jb
xchg
rcr
mov
push
jmp
cmpsl
mov
dec
je
xchg
sbb
mov
push
inc
add
test
mov
pop
push
out
fidivrs
lods
sub
lcall
xorb
in
jnp
rcrb
pushf
jns
add
repz
xor
cmc
mov
loopne
sahf
push
movsb
aas
loop
icebp
lock
int
je
call
adc
dec
pop
xchg
stos
popa
nop
push
imul
xor
push
jmp
pop
and
aaa
xor
clc
add
fldenv
adc
or
push
mov
dec
inc
dec
mov
dec
jo
or
pop
dec
dec
dec
pop
push
loopne
inc
clc
dec
mov
or
fdiv
xchg
sahf
add
sbb
inc
cmc
add
inc
fldcw
inc
lods
jnp
dec
inc
pop
pop
sub
inc
mov
nop
nop
push
push
shlb
outsl
pushf
jbe
inc
aaa
mov
stos
lret
imul
mov
push
jns,pn
pop
add
xchg
mov
xor
jl
popa
inc
add
dec
inc
push
mov
outsl
xor
push
sbb
mov
dec
imul
fildll
jno
nop
sub
dec
call
test
xchg
push
inc
and
gs
shlb
cmp
mov
cmc
pushf
lret
push
mov
out
pusha
inc
dec
inc
std
cmp
outsb
jne
cmp
sahf
xor
jl
inc
dec
inc
repnz
sub
xor
lcall
subb
fcomp
push
xor
push
push
jae
dec
mov
sub
loope
out
mov
popa
pop
je
push
mov
inc
in
arpl
inc
das
jo
pusha
pusha
jmp
or
aaa
rcll
mov
xchg
aam
mov
icebp
stc
movb
shrl
cli
push
call
jns
jns
jb
xchg
orb
push
add
data16
jno
in
jbe
js
popa
outsb
push
into
dec
scas
mov
cmp
sub
lods
inc
fisubrl
dec
bound
pop
push
xchg
rol
mov
or
dec
mov
push
dec
jns
inc
dec
mov
ret
loopne
mov
fildl
lea
add
insb
inc
dec
vfixupimmps
je
in
jnp
dec
xchg
push
inc
mov
pop
pop
inc
xor
inc
jp
dec
loope
inc
cmpsb
push
or
icebp
nop
int3
daa
pop
out
and
bound
call
imul
pop
push
adc
pop
jb
jmp
pop
inc
and
movsb
das
jns
dec
push
pop
or
call
fistps
pop
dec
mov
add
cmc
push
xor
and
push
pop
daa
fistl
mov
lods
fidivl
outsl
imul
sti
es
fdivl
push
popa
imul
dec
fwait
mov
sbb
sub
pusha
push
xor
loop
dec
dec
arpl
sbb
aaa
inc
popa
lods
pop
jl
shl
push
push
daa
int
insl
or
lahf
mov
out
dec
inc
fidivrl
inc
inc
gs
pop
inc
pusha
dec
shrb
mov
inc
mov
dec
loopne
ja
adc
xchg
mov
inc
mov
pop
mov
dec
ss
pop
pop
ret
inc
push
stc
pop
fsubrl
subb
inc
pop
mov
jno
dec
pop
jne
xor
dec
xchg
rorl
fwait
mov
je
dec
jbe
insb
push
xor
movlps
xor
es
jle
outsl
xchg
mov
insb
in
dec
fisttps
fmull
aad
fists
sti
pushf
stos
push
dec
outsl
aam
mov
fcmove
in
jbe
sbb
mov
ret
or
test
adc
dec
gs
in
add
mov
fcomi
or
add
js
jne
cmp
xchg
pop
cmp
xorl
adc
outsl
js
xchg
aam
outsl
jp
ret
out
ss
leave
xchg
out
pop
dec
push
outsb
push
fbstp
jns
xor
shrl
enter
lock
arpl
mov
aaa
je
testl
out
pop
push
das
sub
lods
test
je
popa
add
dec
push
xchg
lods
outsb
sub
inc
dec
or
cli
pop
lea
inc
sbb
insl
add
jo
test
inc
push
mov
cwtl
lods
push
out
shl
in
shl
ss
inc
push
bound
mov
ljmp
cmpsb
mov
fwait
jne
and
jmp
xor
mov
push
shr
sub
inc
or
addr16
ret
pop
pop
fs
lahf
dec
xor
inc
repz
cmp
sub
push
jno
sbb
imulb
inc
push
inc
jl
jo
adc
jp
xor
sub
imul
push
sub
push
enter
andl
popa
add
xchg
inc
dec
pusha
mov
add
pop
and
or
push
mov
das
xchg
sahf
shrb
outsl
add
sub
push
ljmp
sbb
mov
dec
mov
data16
push
mov
mov
js
add
push
inc
inc
push
arpl
sbb
push
push
mov
mov
sbb
pop
mov
push
push
jb
push
jnp
rcrl
clc
push
lcall
pop
hlt
xor
mov
pusha
adc
pusha
sti
mov
dec
ja
adc
jmp
inc
addr16
fbld
jb
hlt
shll
and
enter
daa
popa
popa
je
loop
outsl
push
loope
jl
scas
dec
loopne
dec
in
stc
dec
loop
add
cmpsl
or
inc
and
rcrw
dec
inc
or
xor
jae
jb
roll
insl
xor
push
dec
pop
out
js
pusha
cs
dec
xor
push
ja
inc
test
jo
sbb
bound
fisubl
movsb
lret
andl
add
cld
into
shrb
lods
pop
dec
outsl
loop
std
insb
sub
movd
stos
push
gs
inc
dec
push
inc
or
orl
lcall
push
mov
or
xlat
xchg
xchg
sbb
out
jne
inc
jo
cmp
adc
into
int3
lods
mov
mov
outsb
incb
push
andb
push
ret
cli
inc
mov
or
sti
inc
push
ss
and
mov
sbb
bound
daa
lret
iret
mov
pop
push
jne
sub
xchg
out
push
mov
cmp
jbe
pop
shlb
pop
pop
popa
addr16
jbe
add
outsb
cmc
xchg
movb
bound
sub
add
loop
pop
xor
jmp
push
pop
inc
les
mov
dec
aad
aam
xchg
ficoms
insl
xor
scas
push
ss
testl
push
mov
adc
daa
adc
jl
clc
pop
mov
outsb
push
sub
ret
inc
ret
outsl
push
adc
adc
pop
lock
push
in
insb
in
inc
jge
sbbb
push
sbb
inc
push
cli
ljmp
clc
es
jmp
stc
pop
mov
dec
dec
testb
mov
mov
jbe
lds
push
popl
adc
and
shrb
imul
addr16
and
mov
outsb
cs
xor
sbbb
dec
iret
clc
outsl
push
and
insb
and
add
sti
out
cmpsl
je
rclb
mov
xorb
xchg
cltd
and
sbb
mov
push
test
add
or
mov
ret
xor
lcall
xchg
add
int
pop
pop
lcall
jbe
rol
jne
lods
sub
dec
clc
jno
add
xchg
pusha
shll
ja
insl
or
mov
xor
sar
shlb
scas
js
inc
and
or
mov
lods
ja
movsl
jb
imul
sub
jmp
cmc
pop
ja
lea
cmp
ja
icebp
popf
hlt
ja
loopne
mov
popa
std
push
sbb
fidivrs
pusha
or
mov
rolb
mov
int3
jno
cmp
int3
dec
pop
sbb
insl
ret
add
add
add
and
add
outsl
dec
and
clc
sbb
stc
je
or
xchg
sbb
adc
xor
outsb
pop
adc
pop
sub
pusha
stc
dec
iret
xchg
pop
mov
sarl
in
mov
jno
clc
movsb
lret
xchg
jle
scas
dec
sete
ja
lock
mov
ficompl
adc
mov
test
pop
pop
jmp
xchg
pushf
sbb
mov
mov
push
fsubl
les
inc
test
scas
ja
jecxz
mov
loope
mov
test
pop
mov
inc
ja
jge
das
cmp
push
xchg
ds
sbb
hlt
out
in
push
pushf
pop
xor
ja
out
in
fadds
xor
sbb
fnstsw
je
mov
lret
ja
push
dec
add
adc
ret
insl
cmpsl
shlb
sub
repz
arpl
ja
test
xchg
pop
mov
shrb
aam
and
or
fidivrs
dec
inc
ja
inc
in
out
xchg
jmp
aaa
add
push
lret
in
jno
mov
hlt
dec
dec
xchg
mov
daa
loop
pusha
push
gs
cmpsl
outsl
stc
lds
lea
add
outsl
rclb
push
shrl
pop
or
cmp
add
out
mov
xor
sub
inc
repnz
adc
gs
in
xchg
pop
rcrb
arpl
imul
pop
or
lret
test
shrb
and
inc
cmp
out
add
pop
ret
cmp
mov
pop
dec
test
lcall
sbb
ljmp
sbb
fs
sub
or
sub
add
add
lods
sbb
in
mov
nop
cwtl
shl
jg
jno
jno
test
test
cld
jg
cs
mov
mov
push
mov
push
mov
in
inc
daa
in
dec
fwait
push
dec
cmp
faddp
ds
or
adc
cmp
push
cmp
fadds
and
mov
sub
call
shrb
mov
push
adc
sbb
xor
cmpsl
dec
aam
movsb
jno
add
push
push
xor
xor
roll
mov
and
jmp
lret
xchg
std
push
ret
push
fsubrs
aas
imul
xchg
scas
dec
and
push
inc
or
mov
lcall
cmc
push
jl
mov
jg
or
sbb
sbb
test
outsb
movhps
mov
adc
and
aas
push
and
orb
jae
inc
add
jg
or
push
ret
cli
into
mov
ja
inc
aam
int
cld
jo
sahf
pushf
push
out
or
jecxz
cmpsl
mov
cmp
mov
in
inc
mov
cli
push
push
add
push
jne
gs
xchg
add
cmpsb
push
nop
inc
push
sbb
lock
push
inc
push
mov
sbb
add
and
add
and
rolb
xchg
test
call
loopne
test
nop
mov
pop
ret
aas
jae
in
in
subl
dec
mov
jg
filds
xor
scas
mov
cmp
or
movsl
cwtl
mov
scas
mov
jno
adcb
xor
sbb
sbb
test
pusha
lods
adc
pop
lret
rol
mov
add
lcall
sub
mov
adc
dec
outsl
mov
push
push
movsl
jle
xlat
or
add
arpl
xchg
filds
loopne
negb
sar
rorl
rol
mov
cmp
mov
sub
push
cmpsl
movsb
movsb
ja
jl
in
ret
aas
aaa
cld
imul
and
mov
pop
lahf
push
or
jb
outsl
cli
mov
mov
mov
add
ja
bswap
lds
mov
popf
jbe
scas
push
push
aaa
ss
sbbb
incb
or
or
js
loop
shlb
mov
rcrb
aam
add
orl
xchg
cltd
push
fucom
xchg
pop
loope
loop
xchg
fcompl
pop
inc
ret
out
jp
sti
daa
and
mov
addl
and
jmp
shll
pop
les
inc
xor
cmp
decl
cmp
loop
fidivs
or
add
add
hlt
xorb
jle
cltd
xchg
sbb
jecxz
adc
scas
out
dec
and
in
aad
das
fidivs
cmp
or
gs
add
push
push
jg
lret
cmp
push
mov
rorb
je
add
jmp
mov
push
sbb
ja
xchg
adc
in
ret
ljmp
pop
sbb
add
adc
mov
pusha
xchg
inc
pop
mov
ja
pop
jp
clc
pushl
pop
test
adc
inc
jne
pop
push
push
dec
pop
ds
push
sub
daa
cmp
lods
loope
dec
cld
or
shlb
aas
dec
lea
xchg
pushl
add
push
dec
add
outsb
ret
cmp
cmp
and
jle
push
jge
adc
nop
fisubrs
fs
ret
push
inc
push
xchg
cld
xchg
sbb
mov
jo
mov
cli
fwait
pop
fs
dec
out
lds
iret
cmp
mov
cmpsb
in
insb
inc
add
fs
xchg
in
idivb
jno
add
femms
sub
xlat
pop
cld
das
add
or
mov
adc
ja
lahf
mov
dec
sbb
cltd
inc
loope
ret
pop
or
aaa
lea
lea
push
pop
or
pusha
pop
out
add
xchg
push
dec
xchg
ret
push
inc
mov
pop
mov
cmp
cmp
addb
pop
cld
xchg
loopne
shrb
xor
rcrb
testb
push
mov
cld
and
sub
ret
je
sub
test
jo
mov
jmp
data16
loop
dec
outsl
push
dec
push
push
xchg
call
sbb
dec
insb
loope
ds
out
add
xor
bound
outsb
ret
out
push
mov
ljmp
aaa
dec
enter
cli
xchg
push
fsubp
push
or
aaa
xor
mov
cmp
and
lock
jecxz
sbb
stc
mov
inc
push
repnz
add
movsb
lret
ficoms
ret
mov
lods
dec
cld
xor
jg
push
mov
push
jle
icebp
repnz
sbb
inc
aaa
std
dec
jno
xchg
ret
daa
mov
popf
pop
loopne
push
mov
sbbb
fstpt
or
lcall
mov
mov
inc
and
mov
call
data16
and
rcr
les
jno
adc
ds
dec
imul
pop
sub
push
jbe
add
ret
fcmove
les
rorb
xor
pop
push
push
xchg
sbb
addr16
inc
lret
jo
mov
add
lahf
jno
out
roll
mov
inc
xlat
ret
or
push
jns
mov
inc
ret
js
push
add
jne
ret
dec
shlb
outsl
shll
lcall
lods
ret
inc
xor
inc
mov
sub
into
lock
xchg
xor
std
int3
mov
mov
push
and
mov
pushf
jmp
call
outsl
cmp
push
push
ss
int
adc
sbb
dec
adc
add
mov
pop
xor
jae
cmp
ljmp
jg
ljmp
cwtl
rorl
sub
mov
and
outsl
sbb
inc
ret
mov
jmp
xor
cltd
pop
test
mov
sbb
or
pop
jbe
xlat
dec
or
jb
pop
xor
sbb
inc
adc
add
iret
or
popa
adc
jmp
inc
adc
into
jae
dec
bound
push
popa
aaa
js
push
mov
and
dec
sarb
push
repz
insb
mov
xlat
es
out
push
movlps
and
inc
push
sti
xchg
mov
jbe
push
push
push
insb
cmp
jge
sbb
aad
popa
mov
or
pusha
cmpsl
cli
push
in
cmp
aaa
pop
and
xor
pop
ret
cwtl
inc
inc
bound
mov
cmp
lret
xchg
push
cs
cs
and
push
xchg
sub
cld
outsl
addr16
into
xchg
fs
push
xlat
pop
or
sti
shrb
jae
jo
sbb
mov
sahf
sub
sarb
push
xchg
dec
sbb
push
mov
sbbb
call
xchg
js
push
imul
out
push
jne
add
outsl
mov
dec
ss
push
arpl
push
xor
push
push
push
mov
and
int
xchg
subl
aas
adc
ret
jb
out
imul
adc
dec
mov
ret
js
bound
pop
lret
mov
xchg
jmp
cmp
rolb
cmc
fildl
mov
inc
dec
aad
add
adc
jbe
push
rorb
jecxz
push
ss
mov
outsb
push
push
ss
ss
add
jb
pushf
pop
add
insl
sbb
mov
add
xchg
dec
mov
roll
rolb
inc
mov
sub
push
dec
xor
mov
fadd
xor
add
ljmp
jle
dec
dec
add
inc
pop
or
cmp
sub
dec
cmc
dec
dec
xor
fidivrl
add
sbb
frstor
jecxz
sub
dec
dec
cltd
mov
enter
out
mov
loope
insb
insl
inc
inc
push
push
mov
lods
or
cwtl
jg
arpl
shlb
and
outsl
dec
pop
test
xor
std
roll
js
dec
dec
inc
out
xor
inc
test
sub
punpckhbw
push
inc
dec
lcall
adc
and
push
sahf
or
mov
call
es
push
add
adc
jo
xor
es
push
fisttpl
imul
and
and
stos
or
fsubs
add
push
sub
mov
inc
aad
add
jge
enter
stos
push
mov
dec
mov
adc
push
enter
xchg
repnz
push
dec
clc
push
xor
push
js
add
stos
cmp
adc
inc
sarb
mov
xor
sub
inc
mov
and
out
or
and
ss
dec
js
fisttps
js
dec
in
dec
ret
mov
xor
cmpl
mov
push
jae
inc
adc
xchg
mov
faddp
jb
mov
inc
xchg
push
cmp
jns
push
test
data16
dec
or
rolb
add
adc
add
pop
inc
pusha
inc
mov
inc
inc
sub
dec
add
add
xor
call
dec
lret
orb
pop
adc
data16
dec
subb
sbb
inc
mov
sub
in
aaa
punpckldq
pop
mov
dec
shrb
xchg
test
pop
add
fidivrl
fisttpll
fdivl
xchg
cmp
repnz
pushl
insb
in
jbe
inc
imul
pop
fimull
xchg
rcl
bound
xor
scas
add
jmp
push
data16
iret
xlat
jo
mov
int3
mov
mov
push
int3
sub
push
dec
popa
cmp
cmp
dec
push
je
push
imul
adc
mov
sti
add
cwtl
jb
fs
add
shlb
inc
and
andl
bound
outsl
and
sub
ss
add
fbstp
inc
dec
jo
je
jb
and
lods
ss
xor
mov
rcll
push
push
mov
pop
push
jge
enter
mov
addb
push
pop
dec
add
imul
pop
inc
push
dec
inc
pop
xor
leave
lock
outsb
loopne
xchg
jecxz
adc
push
cs
les
repnz
fcmovnb
popa
push
sarb
or
ret
dec
inc
imul
xchg
lcall
mov
adc
jae
mov
jae
fistl
mov
out
or
fistps
ret
rorb
bound
sbb
mov
cmp
or
push
ljmp
dec
test
mov
inc
xchg
xor
add
scas
xchg
adc
xchg
repz
ja
pop
inc
dec
nop
dec
mov
push
push
jb
stc
test
inc
push
xor
sahf
push
jo
inc
cli
inc
loopne
lret
cmp
jnp
mov
push
adc
jb
pop
pusha
stc
jl
dec
sarb
jns
push
cmovo
dec
jo
pop
sarl
cmp
movsb
push
jbe
pop
push
dec
push
inc
clc
sub
add
lods
push
push
aaa
sub
pop
push
inc
push
sbb
mov
xor
sub
xor
jne
lock
mov
pushf
dec
loop
daa
push
loopne
cmp
sub
dec
push
xorw
xchg
push
shr
inc
aaa
inc
push
pop
bound
push
xchg
imul
push
xor
dec
leave
adc
jge
push
inc
mov
add
aam
pop
ret
sub
xlat
mov
loopne
jnp
sbb
jne
dec
mov
dec
push
add
dec
xor
adc
in
add
sub
adc
insl
pop
adc
or
mov
adc
sub
ret
add
jg
loop
mov
dec
dec
push
mov
ja
push
ja
ljmp
xor
ljmp
or
clc
push
dec
popf
rclb
pop
or
mov
add
int3
dec
insl
shlb
and
mov
dec
dec
push
js
dec
ja
inc
jae
pop
and
incl
push
call
jmp
out
enter
add
rcll
ret
cli
push
ret
incb
es
into
leave
sub
pop
imul
ja
inc
fistps
inc
add
lcall
xor
rorb
ja,pn
adc
xor
imull
add
subl
adc
mov
xorb
cmp
pushf
or
push
rolb
int
in
ja
or
shlb
mov
cltd
loopne
cmp
mov
or
pop
sbb
fwait
stc
mov
add
push
sahf
cwtl
inc
and
call
inc
xor
pop
scas
xchg
sub
mov
add
loopne
fstps
loope
fwait
out
aam
sub
fwait
dec
add
call
pop
enter
loop
lock
aaa
popf
add
xchg
ja
sub
xor
jp
ja
or
sbb
mov
dec
jmp
xchg
dec
repz
inc
mov
add
js
mov
andl
add
mov
sahf
inc
ja
sbb
cmc
or
fiadds
movd
mov
jge
xorl
dec
and
mov
pop
sbb
insb
divb
ja
test
les
mov
fildl
nop
sub
mov
push
mov
lds
ja
push
and
ljmp
das
inc
pop
in
cmp
outsl
rclb
xchg
adc
or
xchg
add
clc
stos
lods
jg
daa
push
ja
int3
xchg
add
int
push
loop
jo
sub
out
dec
push
clc
test
loope
dec
ja
adc
xor
movsl
popa
sbbb
mov
movsl
jl
xor
call
push
inc
js
out
pop
sbbl
dec
fmuls
mov
es
push
mov
mov
or
das
jmp
ja
jg
add
dec
sub
xorl
and
or
negl
and
popf
lods
mov
sbb
into
jle
mov
mov
cmpb
jo
lds
xchg
mov
sbb
push
and
addr16
addb
sbb
or
fistps
sub
sbb
add
sbbl
jg
cmp
cwtl
ja
xchg
in
or
bound
pop
dec
mov
add
clc
ja
and
test
mov
ss
dec
jo
dec
xchg
int
xor
in
fidivs
mov
rcl
push
cwtl
mov
mov
rorl
jo
out
lock
jae
push
inc
push
lahf
imul
fadd
test
orb
ja
in
cs
push
lahf
add
or
nop
pop
enter
repz
subb
clc
and
pop
fbstp
aad
jo
mov
push
jl
loop
sarb
fidivs
icebp
jbe
ret
enter
inc
or
loopne
xor
shlb
fcmovb
pop
imul
leave
xchg
out
cmp
in
inc
pop
pop
sub
mov
pop
cmp
aam
inc
cmp
pop
or
outsb
xor
push
mov
mov
aas
int
or
ficompl
sub
mov
in
mov
mov
fsubr
movl
cmp
or
push
pop
jg
adc
pop
mov
stos
in
dec
aam
mov
mov
call
lock
in
jbe
push
cwtl
or
mov
or
add
into
dec
arpl
pop
dec
or
test
sub
jo
insb
lods
sub
jae
add
fcmovnb
push
loopne
inc
out
jp
ret
mov
add
pop
sub
push
push
incb
pop
ficoms
jecxz
and
fdivl
push
jle
xchg
xchg
or
bnd
test
adc
pushf
ds
xor
sbb
pushf
and
add
cld
scas
add
jno
mov
fmull
decl
fcoms
fs
push
mov
xor
pop
cld
dec
add
jl
rorb
add
cmpsl
or
mov
or
push
sub
fcoml
or
fwait
ljmp
inc
insb
cwtl
test
out
cmp
test
inc
cmp
insl
add
sub
ja
jbe
add
ljmp
loop
out
add
fsts
imul
movsb
or
jmp
or
dec
and
jl
mov
inc
add
rorb
xchg
test
loop
lock
add
mov
loope
jp
lcall
sarl
ja
sub
out
ret
fucomip
or
popl
lcall
dec
jne
mov
insb
jl
loope
jg
scas
jb
xor
mov
adc
xchg
jg
fadds
adc
fcoml
mov
insl
mov
loop
push
lock
mov
lahf
test
sar
and
and
shlb
dec
sbb
dec
jp
adc
mov
or
insl
mov
lock
insl
inc
dec
stos
fidivrl
xchg
and
mov
sti
popa
clc
inc
adc
mov
sbb
jbe
mov
xchg
pop
mov
jns
dec
push
pusha
mov
ss
jo
loopne
sub
test
fidivl
mov
push
ds
aas
jns
cmpl
xchg
dec
push
stos
sbb
shrb
sbb
pop
mov
push
popa
fisubs
fcmovbe
je
cmpsb
dec
add
inc
xor
aam
mov
pop
shlb
enter
out
and
and
call
lea
das
shl
scas
ja
xchg
insl
mov
jl
mov
cmp
mov
xchg
pop
loopne
lahf
and
add
lock
loope
push
jo
ljmp
xor
push
rorb
jnp
fmuls
push
mov
bound
enter
xor
mov
fwait
bound
test
push
push
in
loopne
mov
arpl
or
push
adc
xor
mov
and
cmp
jno
jg
sub
sbb
sub
or
lock
pop
mov
in
cmpb
jg
sarl
cld
mov
lods
jle
dec
out
jo
cmp
xor
sbb
sbb
pusha
fdiv
in
jg
push
out
fbld
inc
daa
push
sub
push
sub
loopne
jg
cmp
cmp
or
sti
jl
fbstp
loopne
hlt
inc
aam
adc
or
insl
jno
jl
pop
sar
xchg
jmp
lahf
pop
ja
adc
push
pop
leave
dec
xchg
pop
cs
mov
mov
ja
cmp
movsb
mov
xor
rorb
loopne
mov
jo
hlt
dec
ret
les
sub
ret
ja
xor
cmp
stos
xor
xchg
xchg
push
ljmp
pop
imul
and
mov
push
mov
and
jmp
dec
ja
arpl
jbe
inc
cmp
mov
mov
cld
mov
inc
push
mov
leavew
add
lods
sbb
inc
scas
js
inc
pop
adc
adc
repz
js,pt
adc
xlat
sub
les
xchg
xbegin
mov
push
xor
popa
aad
fs
push
in
adc
aad
or
shrb
jge
jbe
movsl
lods
xorl
cmp
sbb
xlat
daa
sti
push
subl
cmp
imul
pop
out
fstpt
ja
jge
push
mov
fwait
push
ficomps
cmpsb
dec
add
in
icebp
addr16
pop
adc
pusha
mov
sbb
lcall
mov
pop
out
inc
jg
xchg
ja
cmp
popf
sbb
addl
cli
mov
or
repz
or
mov
call
movsb
aaa
mov
fadds
ljmp
xor
sbb
lds
je
add
cwtl
or
cmpsb
in
paddsw
ljmp
mov
sub
or
pop
test
mov
mov
lds
sub
sbb
addl
cmp
cld
dec
mov
jg
aas
pushf
push
add
push
add
fidivl
les
arpl
and
jno
ficompl
cmp
mov
jbe
jno
shrb
ss
dec
mov
push
sti
push
fiaddl
lret
jg
push
sub
sbb
orb
test
inc
add
std
je
inc
and
out
outsl
sbbb
imul
lock
insl
mov
ret
mov
push
rcrl
jl
xchg
dec
or
dec
aas
mov
and
lcall
mov
jb
orl
and
jne
popa
inc
push
leave
aaa
ret
in
rol
mov
inc
outsl
fisubrs
push
cltd
call
cmp
std
jnp
mov
in
lret
fucom
sbb
adc
out
neg
and
adcb
je
cmpb
inc
shll
out
mov
pushf
movaps
mov
cmp
enter
push
insb
aaa
adc
mov
adc
mov
jecxz
add
imul
inc
shr
xchg
mov
ljmp
lods
ds
bndstx
pop
dec
xor
sbb
adc
imul
aam
pushl
addr16
fstp
add
mov
add
arpl
pop
int3
mov
loope
mov
or
cld
and
aam
nop
fisubrl
dec
xor
jno
ror
push
push
jle
in
sub
ret
push
add
sbbl
push
js
and
pop
scas
stc
xor
std
pop
inc
lea
cmp
xchg
add
stos
jne
clc
lock
push
cmp
shlb
nop
xor
sbb
les
cmp
sti
jge
aad
jmp
cmpsl
cmpsl
imul
stc
es
adc
push
pop
js
and
cmp
repnz
push
cmpsl
cmp
enter
shrb
add
or
sub
adc
mov
adc
aad
xchg
jnp
cmp
pop
pop
mov
mov
cld
imul
jg
jmp
xchg
jl
insb
shl
dec
mov
xchg
inc
sbb
insb
inc
push
push
add
ljmp
shlb
pop
pop
mov
ja
push
aam
pop
mov
ja
in
mov
sbb
ja
sbb
push
jmp
sahf
inc
adc
mov
lock
in
dec
sahf
or
ja
int3
adc
and
dec
mov
popl
lods
mov
jle
pusha
outsb
cmp
loop
cmpsl
in
jne
mov
jecxz
sub
lods
ret
mov
dec
fildll
popa
ret
inc
jne
scas
jmp
jo
mov
push
mov
fnstsw
push
mov
inc
cmp
scas
shlb
lcall
pop
and
add
clc
cs
or
pop
jno
scas
mov
add
mov
or
sub
or
test
or
adc
pop
and
movsl
mov
and
add
stos
scas
lock
imul
cli
jge
pcmpgtd
lret
ret
push
test
add
nop
pop
inc
sbb
test
je
dec
add
roll
add
pop
rcl
idivl
sbb
pushf
call
dec
sub
out
ja
mov
cmp
rcrb
aaa
ficoml
xchg
mov
pop
sbb
jmp
fcomps
enter
push
push
xor
lods
testl
lfs
xchg
clc
std
loopne
push
call
addr16
loopne
cmc
adc
xchg
adc
popw
out
fcoms
out
pop
xchg
out
add
or
jmp
shlb
sbb
mov
adc
pandn
pop
push
dec
ljmp
dec
test
jns
jnp
xchg
loopne
cmpsl
das
sbb
adcb
fcmovb
in
jmp
xor
xor
and
xor
and
pusha
push
inc
out
or
and
aaa
jmp
cmp
addl
hlt
inc
mov
adc
mov
push
insb
ds
push
stos
or
or
add
icebp
adcb
mov
sbb
popf
mov
adc
pop
mov
xor
add
test
or
and
sbb
pusha
aam
sbb
and
aas
negb
rorb
mov
js
mov
xorl
push
sbb
fdivrs
hlt
mov
imul
xchg
pusha
icebp
out
scas
cmp
adc
int
sar
or
and
out
dec
scas
ja
pop
dec
imul
inc
inc
sub
add
lcall
fstpt
addb
and
and
xchg
lahf
cmc
jg
pop
and
dec
int
hlt
pop
in
push
adc
filds
test
jl
pushf
out
xchg
call
sti
ja
dec
fcoms
jo
and
mov
inc
add
or
daa
push
jle
xchg
add
add
or
out
adc
movsb
mov
jp
sbb
fsubr
push
je
js
pop
loopne
decb
inc
sbb
gs
push
cmp
pop
dec
pop
jmp
xchg
ja
mov
stos
inc
fiaddl
dec
testw
sub
lcall
xchg
push
cmp
in
cmp
scas
push
push
into
sub
inc
cld
pop
inc
inc
cwtl
popf
arpl
mov
or
or
xor
push
test
inc
jge
pop
pop
rolb
fmull
test
scas
fisttps
cs
dec
add
fimull
jns
jbe
or
ss
int3
add
pop
mov
int3
cmp
add
stos
sahf
outsb
fwait
out
outsb
dec
int3
sub
pushf
adc
dec
fmul
sbb
xchg
aam
mov
pop
inc
std
sbb
inc
les
add
push
and
push
insl
inc
mov
movsb
sbb
xor
dec
in
xor
xor
and
ja
nop
pop
movswl
push
mov
xor
dec
push
ljmp
mov
hlt
pop
jo
test
xchg
or
pop
cld
ror
test
or
pop
popf
arpl
repnz
repz
inc
jb
add
loope
adc
push
ret
inc
in
inc
movl
add
inc
test
push
xchg
lock
dec
test
fists
ds
lcall
and
bound
inc
jnp
adc
mov
mov
xchg
add
push
ret
push
popf
mov
rolb
mov
add
scas
orb
mov
jg
sti
push
loopne
insl
xor
int3
push
jp
insb
adc
dec
xchg
pusha
add
outsl
call
or
inc
jecxz
mov
addb
sbb
or
jecxz
and
dec
pop
stc
push
or
shlb
pushf
adc
adc
inc
xlat
sbb
adc
std
mov
aaa
dec
sbb
hlt
cmp
jno
add
int
cmpsl
rclb
rcrb
cmp
xor
dec
negb
shrl
or
mov
and
daa
sub
fists
sbb
lcall
es
mov
cld
pop
gs
insl
jne
daa
and
push
mov
mov
cltd
imul
adc
lahf
and
rorl
test
ja
fisubrs
mov
push
jb
xchg
and
movhps
cmp
imul
mov
int3
dec
mov
sar
sti
lret
test
fcomip
ds
lock
test
insl
inc
mov
das
or
jle
test
pop
mov
jl
push
sarl
add
inc
pushf
mov
or
clc
add
in
repnz
lock
inc
cltd
ds
ss
fwait
ret
jns
jl
cmp
xchg
cmp
cmpsl
push
or
jb
sub
mov
pop
test
movl
pushf
mov
add
loop
jmp
cmp
jp
cli
push
push
fcmove
adc
push
orb
leave
sahf
mov
inc
jle,pt
lods
nop
push
or
lock
mulps
sbb
loope
sub
out
pop
pop
insb
push
popf
dec
adc
sbb
mov
jmp
inc
mov
xchg
pop
mov
push
mov
mov
add
lahf
enter
jecxz
je
add
jo
adc
hlt
pop
add
out
ret
clc
cmp
fsubs
dec
call
dec
mov
mov
push
lcall
pop
lock
dec
out
subb
add
mov
jo
dec
sub
push
adc
incl
cmp
sub
jae
in
ficoml
xor
mov
cltd
stc
loop
cld
add
fs
cmp
cmpb
fisubs
sbb
mov
aaa
mov
or
cmc
xchg
xor
push
aad
jge
push
lea
jge
inc
add
lods
and
dec
push
mov
shrl
mov
scas
ja
inc
sub
repz
mov
adc
movsb
repnz
and
or
dec
or
data16
rorb
or
pop
or
sbb
movsb
pop
jo
ja
cli
filds
dec
xor
sbb
jp
mov
or
mov
push
and
andl
adc
inc
loopne
sbb
mov
push
xor
test
jne
pop
xor
mov
mov
sub
add
stos
mov
push
cmp
dec
bound
mov
pop
mov
inc
and
sbb
or
icebp
and
push
mov
fs
pop
cld
xchg
adc
sub
stc
mov
scas
cmp
fs
dec
sub
das
cmpl
rcrb
loope
jp
add
and
jp
or
or
pop
dec
sub
mov
outsb
lret
pop
sahf
xor
cmp
fisubrl
mov
call
out
lret
cmp
jp
sbb
add
ret
cli
rolb
sbb
push
fcomip
mov
dec
inc
call
sub
clc
mov
bound
pop
xchg
jg
mov
xchg
pop
das
ljmp
add
xor
cmpsb
jge
mov
jae
in
mov
push
cmp
adcb
test
je
and
inc
xchg
movsl
lods
lods
or
cmp
mov
and
ffreep
cld
push
loope
je
jp
jmp
call
sbb
loope
sbb
mov
cmp
cs
mov
ja,pn
xor
js
inc
pop
popa
xor
mov
popf
fs
out
mov
iret
push
fildll
jbe
push
cwtl
pop
push
sar
pop
daa
filds
or
addb
inc
mov
popa
sarl
loope
and
sbbb
xchg
fbstp
lock
xor
or
mov
pop
jmp
jge
adc
sbb
ds
inc
mov
xor
dec
add
stos
jb
add
jb
jo
stos
xchg
test
and
repnz
loopne
mov
sarb
push
pop
jle
pusha
loope
push
jge
cli
out
orb
dec
inc
push
add
fdivrs
lds
jo
out
scas
xchg
or
push
push
and
sub
dec
ljmp
dec
bound
inc
je
jno
add
sbb
adc
push
mov
cmp
pop
daa
jl
test
stos
outsb
jne
sbb
jbe
test
cmovl
fidivrs
dec
xchg
lock
js
out
or
jle
mov
loopne
jl
rorb
cltd
add
jne
scas
ret
add
jnp
dec
iret
iret
add
icebp
popf
es
mov
and
adc
push
leave
dec
fdiv
ljmp
inc
cmp
aad
cli
aaa
aas
hlt
push
cld
repz
dec
and
stc
mov
mov
cld
popf
pop
lds
stos
add
sbb
pusha
xor
pop
idivl
jle
adc
push
sti
sbb
fwait
pushf
lret
pop
sbb
loop
mov
pop
sbb
pop
pop
add
add
add
inc
decb
mov
jg
std
sbb
cmpsl
ror
insb
jne
loopne
add
aas
fs
clc
jno
push
shrl
mov
repz
lock
popf
push
push
test
push
mov
movsb
adc
cmp
aaa
sub
add
mov
shlb
movsl
pcmpeqb
pop
idiv
insl
jg
mov
or
xor
and
scas
ret
and
jg
cmp
clc
fcmovnb
mov
push
dec
fs
jle
arpl
inc
cli
popa
or
in
mov
fs
mov
mov
fwait
mov
inc
hlt
lcall
icebp
cld
push
enter
mov
adc
call
inc
fwait
add
mov
pushf
fnsave
pop
add
push
inc
loop
push
mov
fucomip
inc
nop
sti
push
mov
hlt
test
pop
xchg
shl
movsl
mov
in
sub
fcmovnb
jg
cmp
xor
bswap
xchg
pop
xor
pop
ret
xor
les
jl
rcr
push
and
fists
mov
fwait
bound
fs
rclb
imul
cltd
lret
ret
and
es
pop
clc
mov
sbb
jb
divb
decb
add
lret
sti
loope
mov
popa
std
insb
mov
roll
xor
jg
push
mov
or
xchg
dec
pop
je
dec
mov
mov
pushf
pop
or
xor
fstpl
out
jge
cmpsb
jl
ljmp
cmp
cmp
fidivl
xlat
or
test
clc
frstor
xor
arpl
loop
hlt
das
les
sbb
nop
push
dec
xchg
leave
stc
and
ret
mov
inc
or
jecxz
mov
xor
push
push
sbb
fimull
xchg
nop
popf
fstl
push
pop
jbe
push
mov
movsl
dec
dec
clc
mov
lods
shl
push
mov
sti
push
testb
mov
sbb
ret
jge
cmp
iret
and
sub
ret
xor
sub
imul
jmp
jnp
add
mov
adc
dec
fwait
xchg
mov
out
mov
scas
cmpl
out
pop
sub
mov
rclb
jle
sbb
mov
pop
cmp
ljmp
cmp
cltd
mov
jecxz
aam
out
in
dec
insb
add
ret
mov
inc
shrb
adc
dec
jb
mov
mov
aaa
inc
pop
jno
xor
adc
jmp
out
mov
mov
mov
adc
or
movsb
push
lock
sti
adc
xor
cmp
repnz
mov
js
aam
add
push
insb
sub
ret
mov
jo
dec
pushf
xorl
into
test
mov
jecxz
mov
jne
push
rcrb
add
decl
mov
cmp
or
iret
addr16
mov
dec
aaa
pushf
ror
mov
mov
arpl
or
dec
push
jg
ss
lods
mov
test
rorb
xchg
es
aam
or
sub
lods
repnz
sbb
mov
call
cltd
rorb
test
sub
lcall
xor
push
inc
mov
idivl
int3
into
in
lret
sbb
push
sbb
lcall
test
popf
mov
js
inc
test
add
lahf
dec
sub
nop
mov
sub
pop
mov
mov
pusha
jb
mov
ret
and
add
imul
js
cmpb
jmp
mov
in
imul
ss
and
pop
cmpsl
and
ljmp
mov
mov
sbb
hlt
sub
ds
mov
adc
fcomps
addb
inc
adc
sub
or
dec
in
push
in
push
in
lea
fcomp
adc
nop
sub
test
dec
xchg
cmpsb
shll
insb
cmp
pop
cli
add
ja
pop
lock
jecxz
popa
decb
sbb
jb
pop
sarl
jl
ja
insb
sub
dec
cmpl
ds
das
fcom
sbb
in
ret
add
xchg
pop
sub
inc
test
add
pushf
inc
addl
incl
shl
das
jo
ja
and
xlat
ret
ja
daa
in
mov
add
pusha
xchg
sub
fwait
aaa
push
in
fldl
push
ja
imul
xor
nop
int
jmp
pop
arpl
jae
sbbb
jp
cli
push
push
std
mov
sahf
dec
inc
repz
cmp
or
adc
shr
add
dec
jg
mov
add
push
dec
sbb
cmp
sbb
add
ja
jne
ret
sub
xor
sbb
and
cmp
pop
dec
adc
andl
push
dec
ja
mov
push
cmp
mov
xchg
cmp
cwtl
stc
ja
test
js
inc
and
rcr
or
and
sub
and
out
setp
fsub
sbb
dec
lcall
inc
cmp
ret
cmp
sbb
into
fldt
into
inc
loope
idivl
ja
sub
xchg
dec
push
jp
insb
pushf
adc
pop
ds
dec
lods
add
add
popf
cld
pop
ret
push
inc
stos
xor
sar
loop
push
lods
add
test
pop
cmp
or
clc
sti
jo
and
test
fs
outsl
test
int
mov
pop
enter
push
loope
inc
cmp
sub
mov
sub
pushf
adc
repnz
push
push
test
or
xchg
jle
addr16
sub
jmp
cmpsb
and
sbb
push
push
dec
mov
inc
adc
pushf
jbe
subb
dec
jecxz
outsb
fisttps
arpl
add
fldl
sbb
ficomps
in
pop
inc
sti
cmp
dec
add
pop
sarb
loop
pushf
mov
in
cld
add
scas
sub
orb
xor
add
out
int
xchg
cs
jge
mov
pop
idivb
or
mov
mov
out
js
andl
jnp
scas
testl
in
or
jmp
cld
loop
mov
xlat
add
mov
mov
lock
fistl
outsb
rcl
pop
push
pop
add
loope
test
clc
int
aaa
add
sbb
xor
ja
or
jb
pop
cld
inc
decl
jmp
push
ret
jmp
jno
xor
shll
jb
jmp
ret
jg
outsl
cld
adc
cwtl
inc
pop
dec
popa
mov
dec
push
or
das
xchg
je
pop
jmp
add
fs
push
fiaddl
shl
pusha
push
cmpsb
call
je
pop
cli
inc
adc
daa
adc
or
dec
cwtl
sbb
sbb
and
mov
jge
or
add
push
dec
and
aad
mov
or
repnz
sbb
adc
cwtl
mov
inc
mov
sbb
lods
les
pop
sub
pushf
sub
movsl
xchg
fdivr
das
sub
jno
cmpsb
pushf
ja
lods
aad
popa
mov
sbb
lods
dec
adc
push
or
xor
xorl
cld
orl
aad
scas
hlt
inc
and
add
ror
jecxz
jmp
mov
sbb
push
in
pop
push
shrb
cltd
dec
jle
xor
daa
add
mov
clc
push
add
in
xchg
test
mull
mov
adc
pusha
and
xchg
mov
repz
fcomp
jo
and
mov
mov
insb
je
clc
jmp
rol
mov
test
mov
addl
out
clc
xor
lds
fwait
clc
outsl
pop
aad
addr16
or
adc
mov
enter
aas
sahf
mov
stos
dec
mov
data16
cli
jg
std
mov
mov
add
cmp
jl
ror
sub
and
out
and
subb
mov
daa
lock
mov
mov
sub
mov
cmp
xor
jmp
mov
sub
testb
cmp
and
aas
xchg
add
push
loopne
and
add
popf
add
subb
inc
push
add
sbb
popf
outsb
addb
inc
int
je
jg
je
mov
adc
stos
mov
outsl
das
movsb
adc
or
sub
das
mov
movsb
xor
add
sub
xor
cld
pop
pop
or
add
or
inc
adc
ret
xchg
sbb
jle
mov
ljmp
repz
repnz
test
adc
xor
adc
dec
stos
mov
fs
and
ljmp
shlb
and
ja
pushf
add
leave
test
mov
mov
xchg
lock
or
inc
push
adc
ja
mov
cli
jmp
ja
clc
xchg
mov
xchg
dec
sbb
cld
and
cmpsb
lock
mov
push
and
jb
or
sbb
cmp
mov
or
push
adc
fdivr
mov
outsb
pop
push
lret
mov
mov
int3
add
mov
mov
mov
rclb
dec
push
clc
pop
decl
adcb
sbb
cmp
add
dec
xor
leave
adc
mov
sbb
adc
adc
cld
pop
adc
cwtl
fwait
push
stos
xchg
xor
movsb
dec
cmp
stos
andl
sbb
out
mov
sahf
cmp
in
pop
add
xchg
repnz
add
fildl
push
xor
or
inc
or
sub
adc
ja
jle
cs
adc
fistl
add
dec
push
jmp
jl
fistl
mov
pop
and
and
mov
insl
push
enter
loop
or
dec
or
pusha
sub
sub
insb
sub
mov
or
addr16
aas
and
hlt
loop
adc
push
push
lock
lret
xchg
cmpsl
add
mov
xchg
add
cmp
push
adc
in
cli
ja
xor
xchg
and
rcl
ja
and
aad
test
or
cltd
cmp
cli
sub
fwait
cmpsb
mov
push
xor
jecxz
jo
inc
mov
ljmp
push
add
fnstenv
mov
dec
mov
cmpsb
loopne
mov
scas
test
fnstsw
sbb
push
call
pop
orl
xor
sbbl
ss
cmp
aas
lods
sbb
int3
cmp
xchg
mov
add
pusha
dec
loope
adc
int3
sbb
cmpsl
mov
jle
or
cld
push
cmp
push
std
out
loope
imul
sbb
mov
push
hlt
or
cmp
xor
cs
fcos
cmp
ljmp
imul
jmp
insl
or
mov
mov
jp
leave
mov
sbb
jo
xor
popf
loopne
inc
int3
inc
xorb
lds
fiadds
clc
cmp
in
scas
inc
call
xor
into
bound
mov
rcrl
call
into
out
ret
test
enter
pop
xchg
pusha
in
mov
cmp
sbb
lock
add
ret
mov
or
xchg
xchg
mov
jl
pop
push
sub
and
cmp
pop
and
mov
dec
cmpsb
ljmp
jno
movsl
stc
in
add
jecxz
fwait
neg
pop
and
jbe
idivl
dec
in
xor
push
or
insl
mov
loope
cmp
in
std
mov
or
lds
mov
mov
cmc
adc
sub
popf
adc
pop
roll
dec
adc
push
movsl
rol
popa
lea
aaa
add
outsl
hlt
or
es
loope
call
mov
loope
cs
cmpsb
jp
add
lds
icebp
jnp
das
pop
push
ja
int
movsb
push
cmpsl
pop
jmp
cmc
js
or
std
inc
jge
mov
mov
push
pop
sbb
dec
add
jo
and
les
aad
shrl
fiadds
test
pop
mov
xchg
adc
sub
fwait
repnz
adc
sbb
lds
and
push
jle
sub
push
jmp
outsb
pop
call
pop
cmp
test
lret
out
rcrb
arpl
adc
and
cltd
mov
or
repnz
push
fsts
sub
lods
adc
clc
adc
and
mov
pop
shl
jnp
pop
xor
mov
jo
arpl
ret
clc
pop
add
dec
ficoms
cmp
xchg
xchg
sub
cmp
in
push
jnp
add
adc
and
nop
mov
lret
push
inc
cltd
jnp
insl
mov
push
imul
sub
push
jmp
ret
movsb
push
mov
push
ja
ret
jnp
jnp
aad
cmp
dec
sti
pop
cmp
popf
leave
dec
dec
sub
orl
int3
adc
pop
out
mov
jnp
jle
sub
hlt
std
jecxz
into
inc
xchg
adc
je
pop
gs
nop
or
imul
les
aaa
and
popa
dec
xchg
addr16
dec
pop
mov
mov
mov
push
mov
and
test
lds
bound
sub
xchg
sahf
xor
ljmp
xor
add
dec
jle
pop
add
inc
dec
or
inc
pop
push
push
in
push
and
mov
push
or
adc
les
loopne
add
cltd
xchg
pop
inc
shll
lock
pop
outsl
call
dec
es
ja
and
adcb
push
and
lock
repnz
hlt
fnstenv
xchg
pop
out
xor
add
loope
add
stc
add
test
and
hlt
fnstcw
cs
jns
test
and
outsl
pop
shlb
sbb
ljmp
mov
or
push
adc
cmp
add
out
loopne
dec
int3
sub
shrb
pop
lds
ja
add
xor
test
inc
push
jmp
and
das
inc
cs
add
lret
test
or
in
adc
fs
mov
adc
or
push
nop
jo
scas
test
push
cwtl
push
cld
pop
sbb
sub
mov
orl
jg
xor
in
insb
clc
inc
inc
lods
gs
addr16
add
or
test
movsb
rcrb
add
das
push
push
adc
lcall
sahf
repnz
loop
mov
sbb
mov
ljmp
aam
stos
outsl
or
movsb
lgdtl
in
sahf
test
mov
fwait
pushf
push
mulb
jg
mov
inc
inc
adc
push
mov
call
pop
fwait
mov
xchg
xor
loopne
in
mov
and
and
lcall
incb
jmp
inc
pop
cmp
mov
add
sub
les
jle
mov
xor
xchg
sub
xsave
fnstcw
icebp
and
inc
inc
push
push
jb
mov
push
fsubrl
jae
push
add
jp
clc
ss
lock
fadds
rorb
mov
dec
push
inc
mov
add
shr
add
or
adc
pop
xor
mov
and
repz
pop
inc
cmc
pop
out
adc
rolb
push
mov
adc
fnsave
adc
out
in
sbb
pop
ficoms
xor
dec
and
or
aam
adc
fstl
in
test
rolb
jmp
icebp
scas
outsl
insl
iret
mov
shr
aam
mov
clc
cmp
stc
inc
or
int3
cmp
ret
push
imul
dec
dec
movsb
mov
rcrl
sbb
out
out
outsl
adcl
pop
pushf
add
mov
mov
fidivrs
in
fs
push
xor
decb
negl
loopne
pop
cmp
hlt
faddp
mov
cli
cmp
je
xor
ret
add
mov
loop
sub
dec
pop
jle
or
inc
inc
repz
pop
call
imul
and
stos
mov
inc
insl
arpl
push
ret
pop
push
loop
push
push
pop
or
mov
jnp
cld
outsl
mov
lock
xor
out
aaa
std
mov
or
cmpsb
in
and
shrb
sub
rcll
sbb
or
les
loope
lahf
push
cmp
pop
mov
mov
sbb
outsl
mov
jecxz
sahf
scas
push
cltd
bound
imul
lds
imul
out
mov
jle
cmpsb
rolb
stos
mov
popa
dec
cmp
scas
push
mov
daa
pop
decl
test
in
cmp
xchg
cs
jle
sub
mov
push
mov
out
out
xchg
sub
add
push
push
mov
in
lods
jg
aas
push
repnz
inc
xchg
bound
xor
stos
jl
mov
add
sbb
mov
push
and
mov
pop
lds
cmp
mov
pop
dec
xchg
adc
xchg
or
clc
pushl
loopne
repnz
inc
stos
push
and
add
push
and
jbe
repnz
or
mov
mov
mov
or
fwait
mov
sub
call
iret
ja
jo
js
fwait
jne
xchg
aam
hlt
lahf
rolb
jmp
mov
insb
into
dec
mov
sub
jbe
mov
adc
inc
cmp
int3
scas
clc
mov
jns
leave
push
leave
add
out
mov
ja
add
adc
cli
jo
incl
pop
or
cld
ror
leave
pop
dec
in
lea
pop
mov
test
aad
gs
call
clc
jae
xor
mov
clc
cmp
push
hlt
mov
and
test
popa
jge
cmp
inc
fdiv
mov
inc
imulb
scas
inc
sti
push
lds
in
pusha
mov
and
jbe
mov
mov
pop
mov
adc
pop
xor
xchg
icebp
nop
rorb
call
pop
cli
mov
sub
mov
lock
nop
fdivl
or
xor
fisubrs
out
aam
sbb
imulb
adc
addb
push
dec
or
cmpsb
pop
dec
sbb
pusha
push
push
push
pavgw
loopne
sbb
jl
add
mov
add
add
xlat
mov
cld
adc
subb
test
add
aad
rolb
scas
lds
xchg
rclb
test
push
dec
cld
loop
sahf
cmp
or
mov
and
sub
outsl
fdivrs
adcl
cs
adc
jno
fdivrl
push
stc
push
adc
mov
pop
insb
loopne
add
mov
outsl
push
ret
and
sbb
cmp
sbb
adc
int
mov
into
nop
scas
or
pop
mov
mov
leave
incb
push
lret
imul
adc
mov
fwait
and
sub
mov
mov
incb
test
pop
fs
pop
test
data16
shl
outsb
sbb
lods
inc
and
call
pop
ss
shll
jns
jg
pop
adc
sub
insl
loope
push
out
daa
cmpsb
icebp
bound
jg
or
subb
mov
mov
pop
push
cmpsb
sbb
pop
aad
xchg
sub
into
push
add
outsb
sbb
ja
popf
movsl
shll
ja
lret
mov
sbb
stos
sbb
rcrl
mov
fisubrs
mov
aas
add
shl
jmp
sbb
dec
enter
cmp
pop
mov
in
cmpsl
push
cs
inc
mov
push
fsubs
shlb
or
imul
push
cmp
es
subb
sbb
cld
push
call
jg
add
pop
sub
aad
pushl
pop
and
add
ja
dec
xchg
pusha
pop
inc
or
cmp
ret
mov
mov
inc
inc
fwait
ret
aas
push
xorb
lock
jge
inc
jae
cmpb
cmp
repnz
jle
scas
and
mov
adcb
dec
jg
cmpsb
cmp
loop
lock
mov
push
int3
lock
cmp
stc
add
xchg
cmp
inc
push
fwait
clc
ret
sbb
lahf
dec
leave
jae
or
mov
fiaddl
cli
movsb
dec
push
inc
xchg
mov
mov
add
pop
fsubl
mov
push
push
or
xor
enter
xchg
or
sbb
pusha
push
cmc
adc
icebp
or
mov
dec
sbb
loop
enter
sbb
or
repnz
cmp
adc
and
call
idiv
xor
inc
mov
addr16
and
add
inc
test
xchg
les
call
call
insb
push
mov
adc
inc
adc
push
out
adc
adc
push
mov
mov
aas
ja
adc
sbb
data16
mov
clc
std
cmp
xchg
or
xor
cmp
or
stc
pop
jecxz
lods
sbb
xchg
inc
loope
adc
mov
fwait
fiadds
pop
sbb
into
mov
pop
or
fsubs
add
and
ss
inc
scas
pop
mov
inc
inc
add
pop
jl
jb
sbb
adc
out
cli
mov
and
cmc
push
push
icebp
lcall
adc
adc
lcall
cmpl
push
add
ljmp
jae
jmp
dec
cmp
loop
pop
adc
mov
pop
dec
cmp
std
testb
inc
lcall
sub
or
push
add
test
push
jae
mov
ja
js
xlat
repz
cwtl
movsb
lock
pop
outsb
aad
cmp
pushf
jno
push
daa
xchg
insb
subb
shlb
xlat
fs
mov
sbb
sbb
add
nop
fcmovb
mov
test
jae,pn
adc
int
sbb
or
iret
outsb
loope
xor
fsubs
jbe
push
and
in
jns
sti
mov
mov
dec
jb
cmc
push
lea
xchg
sti
add
aam
stos
pop
sub
out
jmp
jno
xchg
sbb
sub
or
dec
out
jae
lret
lret
jbe
cmp
mov
jp
lods
fs
aam
xor
loopne
outsb
xor
or
daa
sar
shlb
loope
mov
mov
xchg
test
mov
xchg
fmuls
add
cs
inc
mov
push
mov
pop
les
fwait
ds
sub
repnz
jg
push
out
add
dec
aas
mov
aas
pop
lret
test
cmc
clc
push
bound
mov
and
push
pop
movsl
push
pop
mov
test
lea
fdivs
aas
icebp
ss
inc
lods
mov
cmp
and
inc
xchg
add
neg
imul
adc
pushf
fs
insl
lods
push
pop
pop
loopne
inc
rcl
jns
cmpsb
or
jo
aas
aaa
push
in
in
icebp
ret
mov
lcall
or
pop
mov
add
jae
or
ret
data16
jmp
mov
ds
add
jp
cmp
pusha
test
ljmp
rorb
ret
and
jge
lds
sti
js
add
push
sub
xor
or
sbb
ds
test
lret
repnz
mov
adc
lds
rorl
nop
xchg
mov
ja
mov
mov
divl
pop
jmp
pop
xchg
sbb
test
test
lahf
iret
stos
shl
aas
out
sub
aad
xor
enter
int
inc
jae
or
test
data16
ljmp
dec
cld
adc
xchg
aaa
push
sbb
or
scas
push
inc
ja
xchg
es
out
and
test
pushf
adcb
sbb
cmp
loopne
sbb
push
mov
inc
fwait
dec
pop
ror
adc
fidivrl
xchg
pop
adc
push
cwtl
adcl
mov
je
rorl
dec
aas
add
or
icebp
add
push
clc
ljmp
jmp
jo
loop
inc
icebp
push
dec
ja
and
scas
nop
pop
dec
fidivrl
sub
push
test
inc
mov
cmc
jo,pt
daa
inc
pushf
jle,pt
cmp
aam
push
in
mov
jne
add
and
cmp
sbb
add
js
rcll
sbb
jb
or
outsl
mov
cmpsb
dec
nop
fidivrl
cmp
addr16
push
xchg
fs
das
sbb
test
inc
jg
test
xchg
pusha
mov
mov
adc
cs
dec
test
xchg
pop
lock
mov
dec
xchg
mov
push
mov
in
xchg
mov
xchg
adc
and
push
cwtl
pop
xor
loop
jae
dec
jl
push
sub
cltd
js
mov
dec
xor
adc
ja
cmp
inc
mov
sbb
cmc
jbe
add
and
sbb
aam
mov
pop
lods
in
push
cli
xchg
mov
test
fnsave
out
cli
loopne
inc
pushf
test
pusha
mov
mov
jmp
inc
enter
add
push
dec
loop
push
sbb
jmp
jae
sbb
jne
cmp
repz
jb
or
in
movsb
push
jne
mov
jg
xor
cltd
push
push
sbb
vmwrite
scas
into
not
push
inc
int
sbb
test
imul
lahf
push
es
mov
mov
jae
fwait
jno
cmp
pushf
jo
shll
add
mov
mov
lock
mov
sub
push
add
leave
mov
push
ljmp
cmp
pop
test
push
inc
mov
add
movsl
stc
mov
push
dec
dec
imul
fistps
addb
std
insb
je
mov
mov
inc
ja
int
lret
jge
push
mov
adc
mov
mov
sub
inc
and
mov
adc
sbb
mov
aam
mov
ss
xchg
cli
push
and
decl
inc
movl
ja
out
xor
bound
cmpl
sbbl
or
sbbb
xor
mov
stos
add
xchg
pop
test
push
pop
add
jecxz
ds
daa
mov
mov
icebp
pop
add
add
sub
add
dec
testl
das
lahf
xchg
addl
insl
cmp
ds
addr16
jg
jmp
lock
rolb
lods
mov
inc
mov
sbbb
or
test
push
gs
int
jl
push
in
push
pop
je
jl
sub
lcall
adc
sar
cmp
clc
sub
arpl
cs
mulb
enter
insb
adc
rclb
movsb
jmp
fmull
mov
adc
adc
cmpsb
outsl
rclb
lret
stos
fidivrs
and
xor
or
pop
sub
cmp
push
jno
push
adc
cmp
or
fwait
repnz
das
inc
mov
test
aas
loope
sub
sbb
in
xchg
cld
ficoml
lret
add
xchg
dec
or
adcb
jp
lods
xor
sarl
jmp
add
sbb
push
mov
mov
int3
mov
movsb
and
es
lock
xor
add
push
sbb
cmpsb
cmp
mov
adc
jnp
adc
jecxz
dec
xchg
sbb
lret
mov
cmp
sbb
bound
cld
lds
xchg
add
push
pusha
cmp
pop
cli
xchg
popa
popa
jl
ss
xchg
xor
sbb
cli
cmp
icebp
push
pop
mov
mov
scas
sub
hlt
push
jnp
arpl
popa
inc
jo
cmp
lods
addl
cmp
push
push
or
dec
add
push
inc
sarb
mov
loop
bound
pop
out
push
xchg
fstpt
or
hlt
insl
mov
jg
rorl
jbe
or
sahf
sbb
ja
mov
popf
jle
mov
cmpl
mov
or
rorb
outsl
fsubrl
xchg
pop
pop
add
mov
cmp
jle
faddp
pop
stos
sub
or
clc
push
fisubrs
test
scas
negb
loopne
xchg
adc
jbe
icebp
or
cli
cmpsb
jl
dec
push
sub
divps
test
cmp
xor
cmp
sbb
shl
sbb
mov
jbe
add
loopne
out
nop
and
push
rcll
test
xchg
rcrb
sub
sbb
cld
je
pushf
sub
outsb
inc
jnp
es
or
sbb
lock
lret
dec
add
insl
loop
sbb
xchg
fwait
mov
icebp
adc
sbb
dec
pop
push
addb
jnp
mov
into
ss
popa
add
jb
dec
push
pop
adc
mov
add
xchg
adc
cs
cmpsb
adc
xor
mov
fwait
sbb
xchg
cwtl
scas
aas
fiadds
mov
mov
add
jns
ss
insl
in
dec
aaa
or
lods
fdivrl
inc
test
stc
adc
pop
rcrb
jnp
loopne
mov
add
and
rcrb
xlat
mov
int3
js
es
mov
ljmp
cwtl
mov
sub
push
push
and
add
push
sbb
cmp
and
out
pop
adc
push
jp
inc
pop
or
mov
push
lret
lea
push
pop
sbb
inc
popa
frstor
jp
jo
dec
sbb
or
ret
pop
jo
mov
mov
out
adc
mov
test
xor
adc
or
and
leave
or
stos
test
cwtl
popf
xor
and
mov
lock
or
fidivrl
repz
cs
push
and
or
sub
loop
rcll
ja
inc
push
clc
xor
ss
fldt
movsb
push
or
test
sti
inc
xor
cld
leave
pop
cmp
rcrb
cmpsb
sbb
dec
in
arpl
call
pop
push
repnz
mov
mov
addr16
loope
sbb
insb
or
cs
cmp
jge
pop
leave
and
out
xchg
cmp
jae
nop
dec
mov
hlt
scas
cld
pop
int3
insl
adcl
push
xorb
loop
pop
repnz
aad
gs
call
jl
sub
loopne
inc
push
movsb
aaa
sub
xor
or
push
sub
mov
xor
pop
in
pop
cld
and
jg
not
xchg
inc
adc
int3
add
push
xchg
loopne
lods
paddsb
mov
clc
mov
and
movsl
aad
pop
push
or
mov
mov
fldt
pop
bswap
xor
lods
add
fsubl
stc
adc
hlt
inc
push
add
add
mov
jl
lret
adc
mov
cli
loop
arpl
arpl
push
and
shll
insb
jg
mov
stos
clc
repnz
loopne
sbb
and
test
cs
ret
dec
mov
ret
stos
push
mov
push
push
cltd
sbb
int
adc
loopne
dec
mov
dec
inc
out
loope
ja
push
mov
xorl
bnd
aam
movsb
sbb
cmpsb
movsl
loope
mov
cmp
sub
xor
jnp
into
ret
xchg
push
pop
fmull
and
jg
popa
mov
cs
scas
jns
push
shll
or
rcrl
fcmovbe
adc
cwtl
fidivs
imul
lret
jl
jg
mov
and
mov
inc
sbb
aas
push
push
cmpsb
jl
adc
mov
aad
jl
stc
push
ror
adc
loopne
outsb
mov
ss
orl
mov
dec
aam
fcoms
insl
mov
mov
movhps
pop
adc
lods
nop
lock
pop
push
in
adc
ljmp
inc
or
dec
aaa
in
data16
sarb
ljmp
adc
cmpsl
ds
inc
addl
dec
icebp
imulb
je
push
jl
sbb
sahf
rcll
notl
hlt
adc
pop
push
mov
sahf
call
cmp
inc
push
or
jp
push
fs
popf
push
stos
es
test
xchg
mov
lock
jle
test
arpl
xor
add
and
movsl
jg
or
sbb
loope
mov
sbb
sbb
lock
fnsave
push
dec
cld
dec
inc
jge
sbb
repnz
mov
mov
mov
and
shll
addr16
pushfw
adc
rolb
jle
xor
cmpsb
stos
mov
jle
jg
lret
inc
xor
mov
daa
mov
test
and
dec
lahf
dec
inc
fcomip
leave
xchg
jmp
cwtl
and
ljmp
std
xchg
add
cs
loope
jecxz
shl
lret
mov
in
cld
clc
lods
std
pusha
jg
ja
mov
lahf
jmp
pushf
mov
dec
push
and
fdivr
or
insl
fisttps
mov
invd
sbb
call
hlt
cmp
sti
inc
lret
mov
icebp
out
icebp
xchg
inc
pop
iret
sub
les
push
cld
xchg
jo
fisubrl
ficomps
xor
or
scas
add
cwtl
lds
fisttpll
sbb
stos
inc
mov
lds
out
test
imulb
les
inc
dec
mov
xor
jle
mov
cld
pop
fmuls
jb
dec
jmp
adc
pop
sbb
and
pop
mov
es
in
xchg
mov
mov
add
out
mov
hlt
bound
sub
out
cmp
mov
sbb
cwtl
sbb
or
decb
sbb
xlat
xchg
inc
xchg
xchg
push
std
mov
pop
cs
jno
mov
lock
mov
cmp
pop
orb
bound
loope
xor
jne
fwait
mov
roll
mov
aad
pusha
je
call
movsl
pop
cmp
mov
lea
movsb
jbe
test
addl
mov
and
jnp
cmp
xchg
mov
push
data16
fnstenv
mov
dec
adc
push
push
sbb
mov
mov
ficoms
push
sub
pop
jnp
jne
lods
les
cmpsl
ss
mov
jns
jp
pop
pop
or
push
dec
inc
ret
mov
jp
mov
int3
pop
aaa
mov
enter
daa
aam
dec
mov
mov
pop
xchg
dec
test
mov
and
mov
loope
daa
ja
enter
mov
xchg
xor
add
adc
les
call
and
cli
out
gs
cmpsb
or
mov
mov
in
pop
xlat
sub
lock
add
bound
sub
pop
in
mov
sub
fbstp
sbb
mov
es
mov
adc
xchg
fisubrs
mov
xchg
jmp
mov
pop
mov
add
ret
ja
incb
mov
mov
popa
dec
cmpsb
pushf
dec
jg
cli
add
fadds
into
cmpsl
fisttpl
dec
cltd
push
add
jne
ret
sti
add
adc
in
xchg
xchg
mov
popa
nop
mov
adcb
mov
in
mov
fnsave
mov
shl
push
or
mov
movsb
xlat
dec
into
fmul
adc
fisttpl
pop
jo
lcall
call
jecxz
mov
and
cmp
call
bound
mov
adc
cmp
out
flds
into
inc
cmp
scas
adc
mov
xchg
mov
pop
sub
nop
pusha
stos
and
addb
daa
loopne
fnsave
shlb
jo
mov
scas
sub
xorb
or
sahf
sbb
or
popf
mov
imul
mov
rol
nop
movsb
je
jmp
cmc
fsubl
cmp
stc
add
arpl
int
sbb
jns
xchg
mov
dec
nop
adc
shlb
dec
mov
int3
aam
xor
xor
lea
xchg
cltd
cmp
mov
hlt
and
hlt
fdiv
xchg
mov
add
and
divb
inc
inc
ljmp
movsb
shll
xor
out
push
call
adc
je
int3
bnd
enter
outsb
adc
sub
leave
jo
xchg
aas
test
mov
jo
push
int3
xor
arpl
sub
gs
les
cmpsb
aas
mov
cwtl
lock
icebp
mov
cs
outsb
push
das
popa
clc
inc
cli
cmp
xor
dec
mov
lods
mov
cmp
jns
shrl
jp
sbb
ret
es
dec
shr
xor
sbb
lock
push
push
jmp
mov
pop
cmp
into
stos
sar
arpl
dec
lcall
jnp
jnp
jmp
in
movsb
cwtl
inc
loop
xlat
add
es
movsl
or
std
xchg
mov
jb,pn
cmpb
ds
jno
lret
xchg
mov
inc
data16
sub
aam
popa
das
rcrb
xlat
mov
pop
cld
add
mov
adc
dec
cld
scas
adc
fcompl
jl
mov
mov
lea
aad
sti
mov
pop
dec
fs
sahf
in
jae
bound
mov
stc
xor
clc
lcall
dec
pop
rol
pop
inc
pop
std
pop
add
lret
sarl
int3
xchg
add
mul
and
cmp
mull
out
shrb
std
push
cmp
divb
shll
adc
xbegin
sbb
push
jg
jg
lahf
inc
repz
add
pop
pop
mov
cmpb
test
out
and
scas
out
test
adc
orb
mov
scas
int
jl
mov
push
xlat
js
jmp
in
push
jae
repnz
push
add
es
es
push
in
sarb
sbb
push
inc
adc
aaa
push
or
inc
fdivrs
push
jg
cmp
sti
gs
add
in
or
inc
push
add
and
ja
push
in
add
inc
pop
outsl
or
jae
push
insl
pop
cli
sub
or
hlt
jnp
negb
cld
mov
pusha
jae
test
xor
mov
ffreep
in
rolb
jbe
pop
lock
inc
sbb
stos
push
add
mov
rolb
dec
imul
sbb
mov
mov
push
gs
xchg
and
addr16
roll
std
lea
ja
jns
jp
xchg
rcrl
test
int
ret
lcall
movb
and
lods
sub
adc
mov
pop
lds
mov
popf
adc
xchg
adc
add
stc
in
adc
sbb
bound
inc
pop
push
dec
ffree
xchg
add
lock
loop
in
dec
lahf
in
fdivp
or
cmp
sub
outsb
fisubl
cld
rol
hlt
add
jg
lsl
test
jmp
dec
test
jecxz
mov
je
ljmp
push
scas
imul
out
sbb
mov
jg
rolb
fidivs
sub
lea
jo
cmpsl
and
lods
sub
ja
nop
pop
inc
add
gs
add
pop
hlt
decl
test
cmp
cmpxchg
je
idiv
andb
pop
jge
push
pop
jge
xchg
cli
lea
testl
and
mov
jg
and
pop
pop
mov
push
mov
xor
jg
ja
sub
dec
push
in
mov
mov
mov
test
cmpsb
xor
push
test
jno
inc
adc
jecxz
jne
fisubrl
xchg
sbb
dec
inc
fs
aad
push
dec
in
in
xlat
loopne
loope
mov
scas
ljmp
cmp
std
push
mov
push
jmp
pop
movsb
notl
out
clc
pop
cld
subl
mov
cmp
adc
xchg
xor
aad
add
xchg
push
mov
mov
cmp
and
das
add
xor
pop
or
mov
rcll
and
sbb
outsl
push
int3
mov
sahf
mov
sub
inc
ret
mov
mov
vpackuswb
push
pop
mov
les
pop
shrb
leave
jp
cmpsl
dec
mov
inc
mov
hlt
pop
pusha
and
stos
push
mov
rorb
jmp
mov
cwtl
mov
ljmp
pop
bound
pop
adc
or
xchg
add
push
xchg
add
pop
mov
sbb
pusha
lock
cli
ljmp
sahf
std
push
cmp
loop
inc
cmp
or
add
jl
lds
push
loopne
loop
xchg
mov
ficoms
js
mov
punpckhbw
push
inc
andl
sbb
movsb
adc
pop
movsb
cmp
imul
inc
clc
es
clc
fistps
add
rcrl
bound
jne
jp
pop
mov
subb
add
mov
add
aam
xor
xor
clc
mov
aam
sbb
adc
xchg
xchg
call
inc
sub
or
mov
mov
dec
mov
scas
lret
les
jg
scas
rclb
or
pushf
adc
mov
cld
push
add
inc
sbb
push
jg
add
fwait
in
sahf
push
add
adc
or
inc
rolb
in
lds
es
bound
icebp
xchg
sbb
into
ret
xor
inc
mov
ret
dec
cmp
das
cwtl
pop
stos
mov
subl
dec
popf
add
xor
jg
mov
lock
xor
adcb
ret
mov
fisubs
daa
pusha
lds
cmpsb
adc
lock
cmp
mov
add
jecxz
cld
jbe
lock
push
ss
pop
adc
sbb
incl
mov
shlb
xlat
sub
inc
imul
hlt
insb
or
inc
aad
adc
lcall
dec
mov
ficomps
mov
mov
xor
add
add
ret
dec
mov
in
push
sti
dec
loopne
xor
mov
add
mov
hlt
out
je
daa
in
sahf
lds
sbbl
ret
push
pusha
cmp
push
pop
hlt
jge
add
pop
pop
faddl
mov
add
loope
incl
sti
add
cmp
mov
dec
enter
adc
dec
or
cmp
gs
add
sarb
ret
loop
dec
aam
gs
xor
icebp
pop
shl
push
icebp
dec
shlb
loop
mov
lock
jmp
roll
out
repnz
fs
ret
dec
hlt
jno
mov
adc
cltd
lods
out
cmpsb
in
mov
loope
push
ljmp
fists
pushf
inc
sbbl
xchg
orl
dec
lods
fnop
and
mov
stos
mulb
repz
hlt
push
and
pushf
aam
xchg
jle
shl
and
enter
push
xchg
cmc
add
add
mov
ret
xor
rcrb
lock
sub
js
je
rclb
cltd
cmp
mov
lock
and
addr16
add
imul
popf
int
add
adc
lock
and
xchg
xchg
push
sbb
xor
gs
das
js
repz
pop
xor
pusha
dec
rcll
pushl
xchg
mov
clc
add
nop
fs
jmp
lods
lret
xchg
mov
aad
xchg
pusha
clc
out
or
pop
lds
ja
rolb
add
call
xchg
icebp
mov
ss
cltd
lea
xchg
daa
cli
xor
sarl
test
dec
es
out
jo
sub
in
add
lahf
or
cmp
movsb
jg
movsb
jg
inc
push
cli
mov
loopne
and
in
addb
or
into
pop
jmp
cwtl
cld
xlat
lret
stc
xchg
sbb
fdivs
decb
stc
rcrb
jbe
imul
ret
cmpsl
xor
imul
pushf
dec
vmaxpd
jp
dec
stc
std
lret
enter
adc
addb
jb
outsb
sub
leave
in
or
lock
insb
or
push
sub
sub
lahf
and
xor
addl
and
mov
dec
or
mov
adc
lds
mov
xchg
test
imul
or
mov
mov
sbb
jmp
jge
cwtl
mov
mov
mov
aad
mov
and
ficoml
sbb
sbb
add
mov
mov
les
add
fbstp
cmp
or
mov
dec
adc
fdivrl
mov
or
addr16
and
mov
mov
mov
js
mov
cmpsb
mov
popa
xchg
xchg
xor
jge
push
lret
clc
pop
mov
in
icebp
pop
add
aaa
mov
mov
push
mov
syscall
inc
add
sub
push
cwtl
clc
add
xchg
push
lods
xchg
fdivrp
or
call
sub
adc
push
loop
and
mov
xor
shl
movsl
and
pop
cmp
fstps
loop
in
in
mov
outsb
mov
lahf
sbb
or
add
in
pop
fisttps
bswap
xchg
in
jg
mov
dec
test
aas
je
jle
pop
mov
nop
ss
cmc
xchg
add
test
inc
rorl
cmp
clc
decl
push
xor
cmp
mov
outsl
xor
lock
std
in
jp
lods
test
cltd
les
jb
or
xchg
jle
mov
dec
call
out
mov
sub
rolb
mov
shll
and
cs
pop
mov
push
mov
mov
or
popa
lea
je
das
jl
xorb
mulb
test
movsl
pop
lods
cmp
xor
inc
and
jnp
decb
scas
dec
out
shlb
cmpl
iret
sbb
lea
push
push
push
sbb
icebp
aas
ret
scas
mov
mov
mov
inc
add
pop
loope
mov
mov
clc
fwait
sub
cmp
pop
call
ss
scas
fidivrl
mov
push
sub
xchg
movsl
out
fidivrl
jecxz
insb
shrb
jo
repnz
lcall
stos
das
xor
mov
pop
mov
add
imul
mov
shrl
faddl
and
js
call
loope
and
dec
xchg
pop
fildl
fstps
bound
cmc
push
es
mov
add
and
add
cmp
les
push
or
shrl
pop
popf
jo
or
fst
sbb
out
insb
faddl
push
sarl
mov
stos
lret
jno
jnp
sub
filds
adc
aaa
xchg
jg
sub
and
cli
sbb
ss
sbb
test
sbb
aaa
push
mov
popa
iret
xor
lcall
in
adc
add
push
mov
adc
fmull
fwait
add
sub
xor
js
imul
xor
iret
daa
xchg
shl
pop
lods
mov
es
jg
imul
popa
lods
and
pop
push
mov
add
or
xchg
inc
js
rcrl
popf
rcrb
jae
outsb
and
inc
dec
orb
mov
dec
mov
xor
and
leave
pop
xchg
icebp
jmp
add
mov
pop
mov
push
pop
hlt
and
sub
sub
jg
clc
dec
int3
nop
ja
stos
mov
xchg
clc
andb
sub
xor
sub
fcomp
and
cmp
adc
mov
sub
dec
mov
sub
mov
inc
outsl
rolb
and
dec
and
mov
sbb
in
push
hlt
or
mov
je
mov
stos
mov
repnz
jmp
push
std
fwait
scas
xchg
push
jbe
nop
pop
and
xor
or
mov
je
or
cs
repz
ds
mov
frndint
test
push
loop
mov
pop
outsl
ret
push
das
rcrl
adc
andb
outsb
clc
jno
ret
push
mov
dec
andb
xchg
test
mov
cmp
mov
inc
cmp
stc
incl
cwtl
cmpsb
sti
inc
test
ljmp
fs
mov
loopne
ja
mov
arpl
loope
aaa
jae
xor
cmpsb
lret
ljmp
cwtl
mov
xorb
clc
push
push
loopne
and
dec
out
rcrb
pop
mov
mov
add
hlt
mov
test
xchg
inc
push
pop
imul
sbb
es
or
movsb
orb
dec
pushf
push
push
ljmp
lods
add
ficompl
scas
inc
mov
testb
push
lret
sub
je
jle
pop
and
fdivs
add
add
shlb
testb
sbb
ss
or
notb
lock
mov
ficoms
in
add
xor
loop
mov
call
pop
push
sbb
je
xor
aaa
push
add
jb
subb
out
cwtl
test
jge
std
pop
cmp
inc
mov
movsb
add
fbstp
mov
rcrl
movsl
pop
outsl
in
pop
mov
sbb
push
sbb
push
mov
mov
mov
sahf
pop
clc
in
enter
inc
mov
and
rcrb
ds
cmp
insb
push
fisttpl
lods
das
int3
xchg
dec
loopne
or
dec
imul
addl
cwtl
fdivrs
push
adc
xor
or
or
jg
cmp
out
xchg
or
or
jo
or
add
mov
addb
mov
or
jbe
mov
xchg
push
jg
arpl
push
ds
sbb
das
xabort
adc
xchg
add
in
lock
jge
pop
push
pushf
jns
mov
ds
mov
aas
pop
and
movsb
sahf
nop
inc
inc
jp
ds
and
scas
ret
popa
ljmp
or
or
notl
fcoml
dec
sarl
push
mov
add
fwait
jle
adc
ret
adc
cmp
cmp
add
and
pop
rcrl
fdiv
ja
mov
loope
cs
mov
loopne
rclb
mov
sbb
mov
and
pusha
and
testb
sub
cmp
pop
popf
push
mov
push
out
lahf
cmp
sbb
cmp
lahf
mov
jne
das
icebp
or
bound
test
lds
and
add
add
jl
nop
xchg
mov
dec
inc
dec
leave
test
push
cli
test
push
adcb
xchg
mov
fs
sti
outsb
insl
cmpsb
and
dec
pop
lock
sub
mov
fbld
or
push
sbb
mov
cmp
and
lock
sub
mov
sub
xchg
xor
xor
mov
cmp
mov
enter
or
pop
or
ret
aam
cld
adc
repnz
jp
and
pop
pushf
adc
fcomps
addl
lcall
mov
shl
adc
or
adc
pop
add
add
lea
cmp
popf
sbb
sbb
mov
test
lods
ljmp
decl
das
xorl
adc
ss
pop
cmp
mov
push
scas
cli
lret
mov
lock
sub
bound
inc
nop
jecxz
mov
sarl
pop
js
dec
or
or
jl
clc
clc
in
jecxz
sub
pop
lret
js
mov
je
mov
pop
or
xchg
mov
mov
fisttpll
dec
stos
mov
into
fistpll
fnsave
push
or
mov
out
imull
repz
inc
mov
and
test
inc
jo
inc
sbb
mov
arpl
jno
ficompl
rclb
cwtl
mov
mov
mov
mov
js
and
pushf
cmpsb
and
fdivl
inc
insl
cwtl
sarb
fsubrl
cmp
outsl
or
iret
sarb
add
mov
lods
jo
out
or
add
cld
sbb
mov
dec
mov
icebp
mov
ret
pushl
jl
jge
jg
xchg
sbb
mov
pop
mov
lods
add
stos
stos
bound
in
js
lods
inc
xor
inc
cltd
mov
jno
enter
fdivl
clc
pop
andb
sub
adc
loop
sub
inc
pop
insb
mov
and
mov
and
fidivrl
fdivs
rcrb
mov
test
hlt
mov
scas
mov
dec
cmp
add
stos
and
ja
fmulp
xlat
fisttps
or
subb
sbb
addb
stos
add
and
add
jae
push
faddl
push
mov
or
sub
popl
xchg
mov
rcrb
enter
pop
pusha
adc
mov
out
movsl
scas
paddsw
push
lret
rolb
mov
push
sbb
aas
mov
les
xor
mov
loop
mov
mov
add
mov
jnp
mov
test
mov
dec
out
mov
jbe
xchg
pop
clc
or
sub
mov
fwait
mov
mov
lret
xchg
in
mov
stos
jp
jbe
push
bound
push
xor
enter
push
dec
loope
arpl
and
loopne
xor
test
call
mov
jp
add
jo
and
xchg
shlb
ffree
xor
mov
loop
lea
jne
add
ret
movsl
or
pushf
inc
bound
and
push
xchg
jbe
push
push
adcb
adc
lea
xorb
rcrb
sbb
mov
and
mov
stos
or
imul
pop
pop
fwait
rcrb
cmp
and
pusha
out
inc
lds
mov
pop
sub
addr16
outsb
pushf
or
add
addb
jecxz
loopne
imul
movsb
pop
inc
jp
ljmp
popa
test
sub
xor
nop
fwait
cmpsl
or
ljmp
add
dec
add
aam
enter
loope
imul
fucomip
jle
mov
push
xor
push
div
dec
inc
add
sub
add
dec
sbbl
scas
test
adc
sub
cmp
push
aad
negl
and
cmpsb
pop
add
and
dec
push
arpl
add
aam
negl
xchg
pop
outsb
shll
mov
cwtl
mov
xor
rolb
push
iret
ljmp
lahf
adc
cs
shlb
pop
add
loopne
movsb
push
call
jg
jg
fiadds
in
in
mov
outsl
mov
push
addr16
insb
push
dec
inc
jbe
fstpt
jecxz
bnd
xchg
insb
mov
fsub
movsl
fistpl
bsf
pop
sbb
mov
xor
mov
ror
data16
insl
cld
xchg
sbb
movsb
lret
sbb
jle
in
xchg
add
out
je
stos
loope
outsb
inc
jg
inc
jns
or
repz
shl
jno
arpl
xchg
fsts
pop
and
cmpsb
popa
mov
jns
or
fisubs
out
jmp
shrb
and
xchg
xor
sub
and
cmp
sbb
sub
cmp
mov
fcompl
inc
repnz
dec
push
sbb
roll
jbe
push
jl
cld
push
sbb
call
inc
inc
ret
mov
test
or
stos
fwait
ss
movsl
mov
arpl
jp
pusha
xor
lcall
decl
push
mov
jle
out
mov
xor
mov
incl
push
das
inc
stos
clc
in
in
mov
cmp
or
in
xchg
lods
es
sub
and
outsl
into
mov
push
ret
mov
rorl
or
pop
ss
inc
fidivrs
add
jge
jecxz
mov
mov
movsb
icebp
push
mov
mov
mov
outsl
cwtl
notb
pushf
imul
test
imul
or
inc
loope
scas
adc
pop
cwtl
lods
pop
inc
shll
lahf
push
aam
fwait
sarb
add
xor
aam
inc
lahf
iret
les
js
cmp
movsb
push
in
stos
pop
outsl
inc
jmp
enter
mov
ret
unpcklps
into
dec
jg
adc
ja
sahf
jno
and
xchg
hlt
mov
nop
sahf
fs
cmp
jmp
shll
xor
push
mov
hlt
loop
sub
dec
fidivrs
pop
push
xlat
lock
xor
mov
add
sub
sarl
popa
ret
push
jl
sti
addb
xchg
add
mov
inc
jl
adc
mov
pop
sarl
insl
add
ds
push
pop
add
pop
mov
lock
data16
outsb
cmpsb
cmp
xor
test
sub
and
xchg
sarb
jae
cmpsb
dec
mov
test
inc
mov
push
fcomip
push
cld
dec
loop
mov
scas
ficompl
pop
mov
aas
fwait
shlb
out
lods
repz
cmp
ret
sarb
fcmovne
fisttpl
jne
inc
cmpl
leave
adc
lret
clc
cld
cmp
push
adc
leave
push
dec
je
das
addr16
push
add
or
inc
mov
cmp
jo
call
sbb
int3
push
xor
ss
jo
repz
push
mov
sti
add
xorl
pop
mov
sub
mov
inc
add
inc
sub
lock
and
repz
and
shrb
enter
sbb
mov
cwtl
adc
mov
or
iret
test
push
push
or
mov
das
nop
xor
in
in
mov
hlt
fdivs
xchg
fcoml
inc
cmpb
ljmp
xor
out
fistpl
jle
cmp
jmp
cmpl
icebp
out
fs
ss
pop
ficompl
sbb
xchg
fs
xlat
pusha
or
sub
push
jns
and
adc
outsb
push
sarb
add
adc
fistpl
lock
jle
and
xor
fwait
or
mov
and
cmc
fdivrl
aas
test
xor
push
fmuls
cmp
push
cmp
pavgb
or
fndisi(8087
pop
fs
mov
movl
jmp
push
push
adc
addb
adc
push
call
mov
ds
dec
inc
add
cmp
inc
imul
test
dec
sti
mov
sub
repnz
xor
pusha
xchg
adc
scas
cmp
cmpsb
scas
jae
and
or
xchg
inc
jo
ja
xchg
mov
in
ljmp
idivl
in
mov
roll
lret
push
popa
adc
icebp
xchg
fnstcw
in
int3
push
loopne
lods
push
sbbb
dec
movsb
pop
add
push
popa
ficoml
mov
sbb
push
mov
daa
add
fnstsw
ret
jl
cmc
shl
push
jae
ja
pop
fisttps
adc
clc
flds
or
ljmp
ja
push
stos
jbe
pop
addr16
sbb
cwtl
pop
int
dec
daa
push
loop
dec
push
fst
dec
cmp
cmp
notl
aas
into
mov
pop
loop
sub
mov
stos
hlt
cli
lret
shll
nop
loopne
push
cmp
hlt
movl
mov
add
push
cmpb
mov
sbb
icebp
lahf
movsl
arpl
sub
add
inc
hlt
adc
int3
int3
loopne
mov
add
notb
mov
adc
dec
popa
out
and
xchg
movsl
mov
mov
dec
sub
cmp
xchg
test
popa
inc
out
jl
jo
push
imul
shlb
jo
adc
testl
mov
push
mov
in
mov
or
ja
dec
adc
jno
push
fisubrl
pop
cmovo
jecxz
outsb
aam
das
xor
mov
mov
inc
jle
fstl
sub
dec
adc
sub
xor
adc
ret
dec
and
lcall
fwait
icebp
cltd
push
add
mov
fists
pop
shrl
mov
sysret
add
push
sbb
mov
mov
nop
loopne
adc
sbb
mov
inc
or
mov
in
jle
rclb
aas
movsb
aad
adc
sub
das
sbb
inc
cmp
pop
mulb
aas
cmp
mov
outsl
adc
out
xchg
rclb
inc
notl
movl
xor
inc
cmp
pop
aam
inc
pop
mov
push
add
popa
ret
mov
rolb
jecxz
and
and
out
fsubl
xchg
sub
cmpsb
cmp
leave
sbb
pop
push
inc
xchg
xor
jno
js
lock
pop
pop
test
mov
jo
out
lcall
inc
popa
mov
pop
xchg
sbb
stc
in
mov
or
pop
and
fxtract
mov
mov
cmp
mov
jg
xchg
ja
inc
loope
inc
iret
and
loope
inc
mov
or
pop
imul
push
push
int
int3
or
push
gs
adc
xchg
scas
andb
mov
int
sub
cmp
fdivl
sbb
insb
or
xchg
xchg
pushf
inc
mov
js
dec
mov
lock
out
or
sahf
or
cmp
mul
out
pop
mov
je
lea
dec
test
jge
mov
lock
inc
inc
and
inc
xorb
pop
sbb
push
test
jle
sarl
cli
sub
into
mov
xor
push
dec
and
mov
int
rorb
xchg
loop
sbb
cmp
rcl
pop
in
test
jnp
divl
jo
ret
sub
push
scas
lods
orl
sub
mov
or
jmp
jl
lock
jae
add
and
pop
lcall
mov
pop
out
pop
ret
std
ror
inc
sub
mov
jg
stos
cltd
sbb
loopne
lods
xchg
loope
xchg
jns
hlt
test
dec
pop
xchg
out
sub
xchg
or
xchg
adc
test
test
je
push
cmp
dec
jecxz
lods
xchg
mov
mov
into
cmpsb
fisttps
push
push
into
mov
xor
movb
je
sbb
aam
mov
movsb
xchg
push
mov
mov
loopne
ja
jo
pop
aam
cmp
mov
ret
sub
pop
int3
mov
xchg
clc
stos
or
loop
int3
push
mov
mov
inc
or
xor
adcl
cli
movsb
dec
rol
xor
push
sarb
push
popa
popf
mov
in
xchg
adc
or
iret
inc
js
or
sbb
jmp
enter
frndint
jge
xor
pop
loope
int
stos
iret
and
and
sbb
push
mov
adc
fnop
jecxz
aad
daa
dec
lods
out
test
scas
dec
jne
hlt
jp
or
ljmp
lret
xor
cmp
js
std
orl
dec
mov
mov
dec
xchg
and
sub
cmp
xor
mov
push
imul
xor
jno
pop
and
adc
loopne
sub
or
xor
aas
rclb
dec
sbbb
insl
sub
push
out
stos
sbb
cmp
push
and
cli
push
jb
cli
pusha
movsb
sub
push
lods
cmpsb
pop
cmpsb
and
ds
out
mov
mov
push
cmp
gs
std
lods
js
sahf
lahf
ja
aaa
lds
dec
xor
jp
shrl
xchg
sbb
call
cmp
add
movsb
add
inc
mov
xchg
xchg
cmpsb
std
mov
enter
dec
icebp
mov
xchg
or
mov
sbb
adc
or
mov
adc
add
jg
jne
xchg
int3
add
outsl
or
fistpl
jl
xchg
adc
add
das
bound
dec
outsl
sub
pusha
sub
dec
lods
rcrb
mov
adc
sbb
dec
cmp
cli
push
xor
in
and
andb
imul
mov
inc
fwait
movsl
imul
push
cli
pop
lods
inc
sub
jnp
cwtl
cmovl
mov
lret
mov
mov
ret
xor
xchg
int
cmc
jnp
inc
lret
scas
pop
rcrb
hlt
outsb
rcrl
sbb
cmp
imul
cmp
ret
sbb
lret
icebp
pop
cli
popa
shl
xchg
xchg
in
popf
mov
rcll
add
push
or
hlt
sub
mov
cld
insl
mov
into
rcll
xor
ret
adc
mov
mov
shlb
push
sub
fwait
mov
movsb
jb
add
sub
mov
jecxz
inc
movsb
fyl2x
mov
in
loop
push
mov
test
xor
cmp
pop
mov
in
insb
mov
adc
fadd
mov
and
cwtl
jmp
add
cwtl
inc
pusha
mov
push
jns
cmp
mov
jl
and
movsb
loopne
or
add
mov
pop
es
dec
test
pop
mov
pop
add
pop
popa
ljmp
in
jp
loopne
ljmp
xor
mov
or
push
cmp
inc
cmp
mov
push
mov
push
das
xchg
lock
rcrl
sarb
xchg
and
sbb
xchg
inc
push
mov
xor
ror
dec
pushl
mov
pushf
jecxz
cmp
push
cwtl
out
leave
or
xor
in
js
pushf
loop
sub
mov
xchg
gs
mov
mov
jmp
xchg
rcrb
maskmovq
push
push
mov
in
loopne
adc
sbbl
ret
mov
fdivs
dec
iret
inc
mov
add
cmp
xor
ret
sub
mov
mov
pop
add
xchg
data16
push
push
pop
clc
xorb
rorl
sarl
add
ficoms
aad
mov
push
and
push
inc
add
or
test
cmp
sub
adc
sub
imul
mov
jmp
sub
shll
pop
lahf
subl
sahf
mov
lea
jno
pop
inc
add
out
xchg
mov
ficomps
dec
aad
sub
shl
nop
or
adc
adc
cmp
xor
lock
pop
aad
lahf
lea
addl
adc
push
rcrl
ficoml
xchg
mov
das
mov
and
push
fsub
cltd
or
mov
add
sub
inc
xchg
fdivrl
sub
jg
jno
aad
outsb
mov
and
ret
arpl
iret
or
push
ret
bswap
sbb
pop
xchg
add
lods
add
cld
adc
imul
xchg
in
in
add
add
sub
inc
fcom
xchg
iret
ret
stos
sub
fsave
pop
and
pop
pop
pop
cmp
shl
push
adc
test
pop
data16
jecxz
orl
subb
sub
icebp
sbb
push
cmp
test
shll
pop
or
xor
gs
popf
sbbb
stos
sub
sahf
call
test
xchg
mov
imul
jb
pushl
dec
negl
adc
ret
and
sahf
stc
mov
mov
insl
out
push
loopne
or
shl
xchg
test
fcoml
in
lock
lods
mov
jo
ds
ljmp
dec
mov
fwait
dec
loope
call
push
xchg
pop
icebp
mov
sub
sbb
ljmp
jae
addb
xor
ficomps
imul
sub
push
cmp
pop
ja
jns
aas
pop
lods
or
les
or
lock
hlt
sub
icebp
jle
clc
lea
bound
mov
pushf
and
mov
sub
mov
iret
pop
add
push
mov
fstp
enter
or
clc
add
mov
adc
xchg
adc
in
push
mov
daa
jl
inc
pop
push
dec
mov
lods
dec
call
pop
ficoml
mov
mov
pop
jmp
mov
sub
daa
fdivl
scas
out
xor
cs
jecxz
push
xchg
jne
add
inc
and
adc
push
lods
test
and
sub
inc
lret
mov
loop
scas
add
imul
xchg
std
aam
sbb
sbb
hlt
bound
call
push
psrad
jne
adc
push
sahf
add
pushf
jns
and
lret
xchg
push
out
orb
adc
sub
cld
jle
icebp
jno
sub
or
clc
mov
jecxz
dec
pop
pop
and
insb
mov
cmp
bound
pop
arpl
sub
into
fimuls
or
ret
inc
push
arpl
rol
pop
mov
lcall
dec
shl
sub
sbb
ret
cmpsl
dec
jnp
add
xchg
shrl
aas
xchg
lcall
cmp
popf
scas
dec
lock
mov
fcmovnb
rcl
mov
inc
int3
mov
pop
sbbl
pushl
inc
js
nop
lret
lret
stc
sub
jo
push
lock
insl
stos
call
xchg
jbe
push
xchg
lock
and
sahf
sbb
mov
orb
inc
sub
into
clc
rcr
fiaddl
xchg
jns
das
loopne
movsb
add
and
adc
sbb
jp
leave
movsl
aam
rolb
fcompl
not
es
pop
icebp
mov
push
mov
icebp
int3
jnp
pop
add
js
pushf
fstpl
fs
aad
sbb
mov
mov
cmp
fdiv
stos
inc
les
jnp
leave
rolb
imull
jle
gs
jb
lods
cli
sar
jge
ret
jne
into
lret
ss
adc
xchg
sarb
push
cmp
push
adc
and
loop
xor
pusha
xor
pusha
sbb
or
adc
sbb
jp
daa
je,pn
sub
hlt
xorb
sub
pop
push
xor
aas
pop
xor
cwtl
mov
sub
outsl
pop
pop
cmpl
mov
mov
xor
mov
sbb
jp
cmp
and
or
inc
pop
mov
lcall
test
lcall
mov
lcall
and
insl
cltd
add
divl
jmp
push
push
sbb
dec
shl
jl
mov
clc
dec
js
push
xchg
imul
js
sti
repz
clc
decl
rcrb
imul
xchg
stos
jns
leave
push
and
out
cmp
jo
pop
lods
loopne
cmp
rolb
cld
and
arpl
jne
jle
dec
pop
hlt
fstps
clc
les
mov
or
xchg
jne
mov
cmp
and
mov
test
lock
xchg
iret
jg
movsl
mov
add
dec
inc
and
fsubrl
inc
add
ret
fcoml
jge
push
lret
mov
xchg
rol
push
mov
xor
mov
mov
xchg
hlt
xor
fimuls
cmp
dec
lods
pusha
sahf
sbb
daa
push
pusha
imul
pop
cmc
and
add
adc
xchg
loopne
clc
shr
add
lock
fidivrl
aas
inc
add
rorb
fcomps
outsb
fcomp
mov
popa
scas
mov
xlat
pushf
mov
cs
imul
adc
ja
lea
into
shlb
mov
dec
inc
aaa
ds
mov
add
jne
mov
jb
adc
xor
jecxz
xchg
adc
ret
adc
mov
mov
or
shrb
in
jmp
mov
add
fwait
pop
sbb
adc
jbe
lock
mov
fmulp
aam
jo
test
loopne
outsb
cltd
nop
into
mov
mov
out
mov
jbe
ret
lea
xchg
push
xchg
dec
jge
pop
test
data16
sbb
mov
ljmp
faddl
sbb
push
push
inc
dec
fcoml
das
push
mov
test
add
jmp
push
sbbl
push
jo
jmp
fs
xchg
sub
jno
adc
cmp
dec
test
loop
jg
pop
jne
mov
sub
stos
cld
fwait
adc
push
xlat
pop
pop
mov
pop
jnp
cmp
addr16
sub
fbstp
loop
enter
test
outsb
mov
jle
imul
addb
fcomp
mov
rorb
sbb
fsts
insb
and
dec
clc
enter
insb
cmpsl
push
in
cld
jo
inc
enter
mov
js
jmp
or
ja
lret
jno
jmp
loop
or
sub
pop
aas
out
push
fcomps
sub
hlt
inc
insb
sbb
test
inc
or
jno
jge
push
dec
stos
cmp
inc
add
mov
rclb
jle
pop
adc
out
and
sub
fucomip
ja
mov
clc
xchg
call
push
mov
ret
sti
aam
mov
mov
les
rclb
add
or
aaa
cld
or
sbb
push
xchg
out
mov
test
xor
xchg
test
sti
sub
pop
fmul
cmp
int3
pop
mov
loop
lock
xchg
test
xor
jne
push
add
pop
je
adc
sbb
add
in
test
inc
outsl
call
movsb
xor
add
aam
push
or
cmp
pop
sub
incb
mov
mov
mov
cltd
or
lock
insb
stos
les
lods
add
push
pop
iret
sub
dec
add
push
mov
cmp
mov
push
pop
push
inc
or
rcrb
pusha
xlat
sbb
pop
dec
in
stc
cmp
rorl
dec
movsb
dec
mov
sbb
cmp
ret
pop
in
push
pop
pop
lock
sbb
or
lret
arpl
pusha
fcoml
scas
fs
or
inc
ret
ljmp
in
add
jge
movsb
jecxz
mov
pop
fildll
cmpsb
pop
cmpsl
nop
aaa
lock
xchg
js
les
push
pop
in
jl
aam
mov
push
cltd
pop
jmp
adc
push
iret
push
mov
ss
pop
and
test
scas
jo
xorb
test
or
push
jp
les
repnz
push
mov
sbb
arpl
sbb
clc
sub
mov
mov
and
iret
lea
xchg
cltd
movsl
sub
rcrb
push
pushl
loop
aad
lds
push
inc
xchg
fldenv
add
adc
movsb
nop
pop
jg
jg
out
mov
dec
aaa
fmul
xorb
push
mov
jmp
icebp
push
mov
mov
xchg
xor
js
sub
sub
and
push
add
jnp
out
or
sbb
push
or
dec
xchg
mov
fiaddl
hlt
cmpsl
push
push
dec
je
iret
fistps
lods
inc
out
jle
in
mov
mov
call
out
pusha
pop
pop
in
push
cmpsl
xchg
cmpsb
rcrb
je
push
cmpsl
mov
inc
out
cld
fists
push
and
sbb
add
inc
roll
jbe
and
enter
sbb
pop
jmp
inc
add
ret
dec
outsl
cmp
add
aas
hlt
add
call
fnstsw
add
daa
push
or
dec
js
out
jae
sbb
mov
adcl
xchg
mov
jbe
mov
repnz
xchg
mov
arpl
fwait
push
dec
add
ss
jl
push
sbb
jp
push
fdiv
aaa
cmpsb
cmpsl
xor
ja
orl
rcl
dec
repnz
mov
lcall
mov
shll
ret
clc
out
dec
jmp
pop
jmp
or
into
pop
or
fsubp
sub
cmp
xchg
imul
sarb
mov
pop
xchg
mov
int
clc
xchg
add
sub
popw
out
and
loope
add
add
and
outsb
cwtl
xor
aaa
nop
lods
incl
aaa
xor
movsl
aam
mov
push
clc
xchg
es
jp
into
push
lea
mov
es
les
test
in
data16
mov
and
fdivr
insb
sub
mov
cmpsb
inc
pusha
movsb
jb
loopne
lock
imul
js
push
jb
add
add
pusha
adc
aad
inc
jl
push
cmp
icebp
hlt
stc
hlt
mov
in
push
adc
jnp
repnz
mov
pop
or
or
insb
inc
jl
mov
sbb
adc
ja
xchg
mov
mov
jno
stos
sbb
jo
mov
daa
loopne
stos
mov
adc
insb
dec
insb
cld
cmp
stos
cli
mov
icebp
mov
popa
ret
bound
outsl
aad
jmp
rorb
ljmp
push
aam
fildll
mov
xlat
enter
cmp
in
mov
les
pop
out
ja
cwtl
dec
pop
hlt
sub
scas
test
inc
pusha
dec
jge
xchg
or
sbb
pop
push
adc
mov
iret
mov
fdivp
jb
xor
movsl
push
inc
sbb
lret
xor
jne
xor
push
push
push
and
add
shl
jne
xchg
popa
jbe
xchg
mov
jg
xchg
addb
or
pushl
inc
sub
pop
ds
imul
inc
xchg
adc
xorb
movsb
cmpsb
push
xchg
xchg
jbe
dec
loopne
cld
push
jno
loope
data16
push
lcall
inc
pop
dec
sbb
cmp
add
xchg
cmc
mov
mov
fidivrl
and
ljmp
xchg
into
leave
jb
cmpsl
sub
adc
inc
inc
adc
sub
ficoms
sub
xchg
jp
ja
cli
mov
mov
xchg
hlt
nop
mov
cli
pop
push
stos
mov
rclb
sbb
out
mov
hlt
outsl
hlt
fiaddl
mov
xor
cwtl
mov
or
and
inc
pop
aad
aaa
std
add
adc
add
ja
push
inc
cltd
xchg
lcall
or
jp
push
fcompl
lods
std
xlat
call
mov
inc
jb
test
pop
rorb
mov
hlt
sub
insl
push
fwait
in
sub
mov
mov
aaa
into
jecxz
push
sub
push
je
sahf
cli
xorl
ds
and
lret
neg
push
dec
dec
rorl
addr16
cmp
mov
mov
pop
push
loopne
fmulp
mov
movsl
add
cmp
stos
scas
mov
dec
push
enter
rorb
ja
fnsave
pop
mov
pop
add
mov
ret
dec
adc
out
sub
jecxz
fiadds
sub
adc
adc
je
xchg
jbe
stos
js
aaa
rclb
sahf
mov
push
cli
jbe
fwait
cmp
inc
or
sub
js
pop
or
xorl
ljmp
adc
cwtl
fisubl
ss
leave
stos
clc
push
loopne
mov
cltd
sbb
aad
decl
mov
test
js
jne
add
nop
out
or
adc
jne
add
cwtl
jle
lahf
subb
jno
mov
inc
fsubrs
or
pop
ljmp
jae
add
out
les
shlb
cmp
int3
cmp
fiaddl
shrl
repnz
fcmovu
cmpps
adc
mov
xchg
mov
mulb
inc
inc
std
mov
ret
nop
pop
cmp
xor
hlt
fiaddl
xlat
test
sub
movsb
mov
xor
out
sti
in
pop
add
and
ja
movsb
or
or
loop
pop
dec
cltd
push
das
and
jl
pop
push
pop
jle
loope
push
pop
lods
add
jb
mov
loope
add
jae
sbb
or
rorb
push
rolb
jge
punpckldq
stos
jae
fwait
lock
add
popa
mov
jle
and
out
mov
or
roll
cmpsb
aas
xor
in
sbb
pop
test
dec
out
icebp
std
mov
cmc
push
and
mov
jecxz
gs
mov
adc
or
cmpsl
adc
stc
push
clc
inc
jl
dec
loope
or
inc
jl
jnp
jnp
add
jg
push
inc
pinsrw
fwait
into
dec
push
xchg
cmp
cs
mov
xchg
dec
sub
icebp
lret
dec
addr16
aaa
mov
push
lar
push
jp
cmpb
pop
rclb
pusha
gs
bound
out
mov
out
shr
ja
stc
jg
push
xchg
in
rcrb
fwait
outsb
inc
aas
dec
imul
inc
aad
out
push
fwait
in
jecxz
jle
insl
out
in
outsl
std
shll
and
sub
cmp
mov
push
loope
jnp
loopne
sub
add
lret
cmp
daa
push
pop
bound
mov
or
sahf
popf
popa
and
dec
push
lcall
mov
rep
out
ljmp
pop
cld
adc
stos
std
or
decl
adc
xor
or
adc
xchg
xor
das
popa
adc
push
sarl
inc
loopne
adc
into
pop
xorl
scas
lcall
flds
daa
call
popl
xchg
and
in
mov
icebp
fwait
scas
mov
fwait
das
ds
jbe
dec
test
clc
pushf
ss
jne
xchg
jns
push
inc
mov
jp
dec
andb
call
addb
arpl
ret
mov
xchg
sbb
pop
xor
or
out
cmpsl
lcall
roll
inc
lcall
and
xor
push
fs
out
lahf
out
dec
fistl
arpl
adc
pop
test
das
sub
imul
aam
and
incb
ret
push
pushf
bound
test
push
push
push
incl
rclb
xor
scas
es
pop
cmp
and
mov
mov
cmp
xor
sub
loopne
addl
enter
cmpsb
js
pop
lds
lcall
mov
insb
leave
dec
dec
xor
leave
js
jo
fnstsw
aas
adc
dec
hlt
or
dec
inc
nopl
mov
cld
xchg
xlat
adc
ja
dec
lock
inc
test
sbb
data16
punpcklbw
repz
in
mov
xor
pop
jl
out
sub
movsl
inc
andb
xor
mov
xor
aam
push
add
mov
nop
addl
cltd
cmp
lret
sbb
push
sbb
lcall
in
add
lret
mov
leave
into
sahf
or
adc
loope
xchg
in
cmp
test
call
fwait
addl
cmp
pop
sbb
cmpsb
or
test
xchg
sbb
xchg
xchg
push
lds
lea
push
out
loopne
lds
xor
not
inc
mov
adc
inc
cmp
fldt
add
add
or
fiadds
pushf
aam
outsl
push
inc
cmp
inc
mov
adc
jge
dec
insb
imul
sti
hlt
xchg
mov
call
jne
out
fdivl
mov
cmp
lods
imul
mov
icebp
sti
xor
inc
or
push
push
pop
js
mov
mov
mov
es
cs
aad
aaa
mov
mov
add
aas
andb
std
cwtl
xor
pushf
jo
push
testl
mov
adc
mov
shrl
dec
mov
mov
scas
das
pop
xchg
pop
nop
mov
sub
pop
mov
test
mov
rcll
imul
jle
call
and
or
add
push
xor
add
push
pop
add
loop
addr16
cmp
push
and
inc
stos
push
cmpsb
jnp
jno
inc
add
xchg
push
aas
stc
div
pop
add
movsl
aam
add
mov
bound
dec
ret
in
or
out
arpl
cmp
js
mov
or
outsb
fbstp
incb
sbb
jecxz
loopne
pop
push
push
pop
inc
jle
add
repnz
xchg
or
or
dec
lahf
daa
mov
in
bound
mov
mov
adc
jns
inc
bound
jns
psubusb
jae
sti
sbb
ja
ret
xor
and
dec
or
add
insb
cmc
clc
aad
add
stos
loope
xor
adc
pop
add
mov
rolb
scas
and
pop
pop
nop
data16
repnz
and
adc
bound
cmp
or
mov
rolb
imul
ljmp
inc
scas
mov
or
mov
inc
mov
dec
inc
js
adc
test
and
shll
rclb
push
sub
push
push
add
xchg
bound
sbb
xor
xchg
pop
and
adc
js
jg
or
push
loopne
inc
int
cltd
push
scas
cmpsl
hlt
cld
add
clc
hlt
dec
xor
mov
jo
lds
lahf
jns
scas
add
sub
jbe
or
dec
sbb
add
push
jp
mov
xor
repnz
imul
insb
dec
lock
cmp
faddl
push
imul
sub
push
addl
aaa
testl
jp
loopne
cmp
test
je
adc
nop
pop
push
rorl
mov
jp
addr16
jmp
push
jne
outsl
stos
test
inc
outsb
mov
xchg
testl
sbb
mov
sbb
mov
push
cmp
cli
loope
nop
in
sbb
adcb
sar
jmp
test
lock
jmp
mov
lret
stos
inc
adc
iret
ret
pop
push
or
popf
pop
mov
mov
out
cs
rcrl
inc
sahf
jmp
daa
xor
or
js
arpl
ficoml
aas
fldcw
popa
ja
push
aam
adc
add
sbb
cmp
test
dec
jo
clc
inc
daa
xorb
fistps
les
adc
pop
ret
or
push
faddp
movsl
lock
ss
mov
andl
xorl
sub
outsb
push
xchg
mov
insb
sbb
pusha
insl
add
push
add
jle
in
imul
dec
xor
xchg
mov
inc
pop
mov
push
call
dec
adc
mov
outsb
xor
sub
xorl
mov
scas
test
and
mov
jb
push
subl
xor
lods
inc
inc
addr16
insl
mov
mull
cmp
add
sub
outsb
mov
in
add
cwtl
push
cwtl
divb
or
lods
rclb
stos
mov
sub
pop
adc
lods
mov
inc
inc
sbb
pop
inc
sub
sub
movsl
adc
mov
lods
fiaddl
adcb
and
sbb
jle
shr
xlat
inc
js
mov
cltd
push
cmp
stos
xchg
sub
cwtl
pop
sbb
call
pushf
push
inc
js
add
xchg
fwait
cmp
xchg
fwait
movsb
xchg
shlb
dec
loop
push
das
imul
xchg
rcll
leave
xor
test
mov
inc
add
add
aas
sbb
dec
pop
pxor
or
addb
mov
scas
into
pop
mov
lock
or
jo
outsl
xor
icebp
mov
shll
or
rcll
push
push
cltd
push
jmp
cmc
pop
lcall
sub
inc
data16
lahf
mov
cmp
push
lods
repnz
loopne
daa
je
mov
inc
lret
rcll
pop
cmp
adc
xorl
sbb
out
out
jo
xor
mov
daa
or
or
ja
mov
outsb
xchg
jecxz
add
or
hlt
push
or
out
add
lods
sbb
js
adc
lock
mov
mov
sbb
ret
adc
fisubs
ds
xor
inc
inc
cmc
push
mov
xchg
mov
xor
pop
sub
and
adc
mov
cmp
sbb
notb
cltd
in
stos
pop
mov
jnp
or
sbb
mov
outsl
sub
adc
adc
lahf
mov
pop
out
cmp
popa
or
lret
xchg
scas
xchg
and
fsubr
repnz
cli
mov
mov
lcall
shrb
mov
inc
push
int3
in
jecxz
lods
jnp
nop
push
movsb
and
dec
in
pop
sbbl
xchg
xor
dec
push
shrl
pop
fmuls
pop
dec
test
mov
push
orb
cld
mov
arpl
imul
mov
scas
xchg
xlat
lahf
xchg
les
lret
mov
xor
notl
ljmp
push
loopne
push
adc
sbb
insb
lret
add
xor
ret
push
jge
xchg
outsl
jle
mov
add
sbb
insb
decb
sbb
scas
dec
add
push
push
cmp
clc
faddl
jle
test
ss
jl
ljmp
lahf
mov
cld
int3
add
cwtl
mov
xchg
add
call
mov
inc
test
cmpl
inc
adc
push
std
lds
daa
inc
outsb
mov
mov
cwtl
fcoms
cli
orb
mov
jecxz
inc
adc
into
cmc
pop
jno
stc
lcall
mov
ljmp
adc
cli
sahf
add
std
or
xchg
add
inc
and
rorl
mov
and
cmc
stos
xlat
jp
outsb
ljmp
test
rcl
push
cltd
repnz
adc
xor
xor
lock
hlt
incl
xor
lds
inc
ljmp
loope
and
adc
mov
mov
add
sti
cmpb
push
or
out
xor
push
outsl
ljmp
and
add
jmp
inc
in
add
loop
jb
or
push
inc
push
fdiv
mov
pusha
adc
xchg
jns
add
sub
lahf
daa
jns
or
or
xor
stc
adc
push
or
rcll
arpl
pop
lcall
icebp
aaa
xor
xor
push
pop
xorb
mov
sub
jbe
inc
push
andb
inc
xor
loope
add
mov
scas
add
sbb
into
xor
mov
mov
mov
or
xchg
push
dec
leave
mov
or
js
sbb
xchg
push
ja
push
out
add
roll
or
fxch
scas
cli
aad
and
sbbb
sbb
lock
pop
sub
insb
push
jbe
or
int
roll
add
push
mov
inc
jmp
shl
pushf
mov
in
and
inc
jmp
and
mov
mov
scas
jmp
lcall
test
nop
pop
lret
inc
and
mov
insb
out
sarb
dec
mov
xor
mov
jns
lods
loopne
mov
push
loopne
xor
mov
pop
outsl
cld
sub
test
add
mov
cld
and
jnp
mov
pushf
popf
pop
adc
mov
or
lcall
clc
jg
cmp
push
xchg
fstl
add
pop
fistpl
cmc
test
pusha
test
insb
mov
pop
icebp
cmp
loop
xchg
inc
sub
xor
decl
jl
or
add
or
les
cs
js
push
cmp
jp
sarb
lock
test
out
inc
cmp
cmp
aaa
sbbb
adc
ja
and
ret
ret
cs
lret
jns
xor
jb
adc
push
out
push
aad
pushf
dec
mov
xchg
and
shl
push
clc
cld
cwtl
dec
and
push
lds
dec
jmp
add
mov
into
shll
pop
add
sbb
cmpsb
sub
pop
mov
pusha
aas
insl
sub
cmpsb
dec
mov
mov
lahf
clc
mov
fisubrl
adc
or
mov
stos
sub
push
lods
dec
cld
stos
or
jo
fs
arpl
lds
mov
daa
pop
xchg
add
es
push
sarb
inc
loop
lcall
ficomps
sbb
aad
stos
dec
or
add
cmp
fldt
scas
ret
or
xorl
mov
lahf
cmp
loope
push
aas
and
les
clc
sbb
sahf
ja
xchg
or
xchg
mov
jae
push
or
fwait
xor
add
push
push
hlt
out
xchg
lods
ja
nop
xor
inc
shll
lcall
push
rorb
pop
shll
jecxz
or
mov
jg
imul
lods
lcall
mov
adc
sbbb
ret
insl
movsb
cli
inc
pop
movsl
xor
cmpsb
or
pop
test
inc
mov
pop
or
int
mov
test
xchg
xor
sarb
inc
mov
pusha
movb
push
cld
pusha
xchg
es
cmp
ret
mov
adc
push
dec
iret
aas
mov
out
mov
or
cmpsl
stc
mov
loop
mov
insb
cmpsl
add
push
fsubrs
or
inc
or
xchg
push
jp
mov
and
push
nop
test
push
mov
mov
mov
ds
pop
popf
mov
sbb
jne
add
jnp
or
ljmp
adc
adc
dec
add
sbb
sub
cli
loop
into
lcall
ret
popf
clc
jg
bound
loopne
xlat
mov
in
cli
or
lods
les
js
mov
and
scas
mov
add
pop
test
sub
sbb
call
inc
dec
rolb
or
pop
mov
sahf
roll
lods
inc
cmpsb
scas
adc
lock
mov
xchg
popa
inc
pop
subl
sub
pop
arpl
ja
add
data16
xchg
jge
cmp
jge
data16
scas
xorl
xchg
fistpl
mov
cmp
mov
pop
mov
or
sbb
push
andb
dec
in
lock
jmp
adc
jno
scas
xchg
mov
loope
add
adc
rcrb
xchg
mov
and
or
or
or
test
xchg
aas
cmp
mov
sub
mov
orb
movsb
stos
lds
ss
insb
adc
mov
jecxz
sub
call
loopne
scas
add
push
inc
clc
mov
xchg
add
test
jnp
cmp
adc
jle
lods
add
idivb
lock
cmc
jg
cmp
xchg
inc
mov
adc
sbb
loope
ss
fmuls
and
or
cmp
into
mov
data16
add
es
sbb
std
dec
jo
leave
ja
lods
rcr
lock
mov
je
mov
loopne
pop
rorl
decl
xchg
out
xorl
pop
push
aaa
push
test
jl
divb
jne
cld
cli
mov
xor
xor
shrb
mov
or
xor
sbb
icebp
cs
xchg
dec
pop
pop
popa
adc
jl
aaa
sbb
lods
es
xlat
enter
or
pusha
cs
push
pop
add
sub
and
hlt
hlt
pavgb
mov
fs
jmp
or
into
daa
sahf
dec
cli
cld
fldcw
jecxz
outsl
xchg
mov
addb
shlb
ss
adc
decb
data16
mov
popa
nop
mov
rorl
add
jno
loop
std
jb
push
or
xchg
je
pop
jmp
pusha
lock
mov
daa
sbb
mov
hlt
sub
sub
cmpb
out
ret
mov
cmp
or
jge
or
mov
jmp
mov
pop
jno
stos
sbb
lds
ljmp
jns
inc
lods
xor
add
push
sbb
push
sbb
lcall
iret
cmp
adc
or
sbb
mov
pop
push
das
push
addr16
inc
incl
and
sub
mov
incb
sub
cmp
roll
movb
loopne
xchg
push
push
in
mov
das
push
add
sbb
xchg
mov
mov
xchg
jo
int
or
ljmp
icebp
lret
into
data16
mov
push
les
jp
pushl
lcall
loopne
ror
cs
jns
lcall
pop
je
icebp
jae
push
stos
push
sbb
push
add
and
adc
mov
test
cltd
mov
pop
add
inc
add
inc
push
imul
aas
rcll
fnsave
int3
sub
add
xlat
incb
hlt
mov
dec
sbb
leave
inc
pop
adc
xor
mov
movsl
pop
sahf
jge
mov
push
and
mov
lcall
fists
dec
lock
mov
subb
push
dec
aas
aam
shll
xchg
add
sar
les
xchg
inc
lods
data16
inc
hlt
adc
js
mov
js
test
pop
push
in
jl
sbb
sbb
mov
mov
mov
cmp
jecxz
xor
js
jp
cmpb
xchg
fstl
sbb
repnz
jmp
pop
push
iret
add
es
lods
jns
sbb
cltd
and
mov
mov
leave
mov
sub
int
insb
stos
adc
push
lret
dec
filds
jbe
popf
popf
les
fisubs
xchg
popa
fadd
mov
inc
sub
add
lods
aad
imul
inc
fidivrs
mov
dec
mov
pop
cmp
pop
xor
push
pop
les
or
pop
loope
and
cmp
inc
xchg
cmpsb
mov
pop
and
je
sub
mov
add
pop
sbb
fnstcw
mov
jno
mov
lds
dec
push
xor
push
inc
mov
pusha
sbb
mov
push
or
cmpsb
adc
dec
test
inc
mov
xchg
sub
or
sbb
xor
cld
xor
cmp
cmp
jecxz
add
fs
repnz
call
pop
cld
loope
bound
or
or
inc
push
iret
lds
sub
adc
incb
push
int
rcrb
mov
inc
or
push
or
icebp
das
aam
in
cmpsb
sbb
mov
jbe
std
mov
sub
dec
jo
cmp
fadds
shll
and
pusha
sbb
punpckhbw
fcmovne
dec
das
and
loopne
adc
sub
lock
daa
repnz
gs
mov
adcb
ret
or
mov
sub
sti
stos
les
mov
fdivrp
inc
int3
push
test
sahf
and
or
filds
test
mov
mov
es
clc
data16
insl
sbb
cwtl
test
push
inc
loop
xchg
xchg
std
dec
and
mov
push
xlat
cmpsb
movsb
jae
loopne
push
test
xor
push
pop
xchg
clc
push
inc
inc
jae
ja
push
add
cmpsb
lcall
and
adc
and
decb
pusha
or
fcomps
jg
mov
xor
test
or
insl
scas
mov
arpl
orb
pop
dec
ja
sbb
and
lret
loope
mov
mov
in
adc
inc
or
inc
movsb
add
sahf
or
les
add
push
js
adc
and
insl
lods
clc
add
outsb
dec
mov
pop
mov
add
fsubrl
add
movsb
add
push
add
fldcw
inc
sbb
sub
mov
adc
div
or
and
xchg
gs
sti
pop
jb
mov
ljmp
hlt
and
dec
xor
add
test
add
inc
arpl
ljmp
cwtl
xor
add
mov
ret
ds
fsubr
rcr
gs
cmpps
jns
mov
mov
mov
cmpsl
call
fcoms
push
add
xchg
mov
sbb
getsec
add
lcall
add
test
daa
lcall
dec
iret
cmp
inc
push
cld
imul
mov
or
dec
dec
lret
lahf
mov
rclb
fidivs
ret
xor
pusha
lret
aas
mov
fcos
sbb
or
icebp
mov
sbbb
inc
push
xor
mov
sbb
mov
add
or
addr16
push
dec
pop
out
or
subl
fmul
pop
push
mov
push
jb
mov
rorl
mov
or
into
jp
test
andl
mov
pop
push
or
stos
in
and
addb
scas
dec
aad
pop
out
add
outsb
mov
inc
jb
subl
ja
and
cltd
andl
clc
pusha
adc
pop
mov
add
add
jl
mov
nop
jb,pt
loope
js
mov
jne
movsb
push
cmc
inc
cmpb
cmp
aam
ljmp
fwait
xor
popf
adc
xchg
push
fsubs
ljmp
in
push
fidivl
pushf
mov
xchg
push
imul
or
mov
lret
jge
pop
add
dec
adc
push
pop
scas
inc
lods
fisubs
clc
ror
icebp
js
adc
fcoms
jnp
or
cmpsb
dec
fwait
int3
add
addl
cmp
mov
lea
icebp
decl
clc
inc
mov
fiaddl
rclb
fidivrl
lock
inc
push
mov
push
hlt
push
cli
stos
lahf
loop
iret
pop
fisttpll
mov
in
adc
or
addr16
sbb
fstpt
fldenv
fidivs
xchg
push
sbbb
xchg
cmpsb
pop
pop
sub
pusha
push
sbb
imul
cmp
xchg
lock
aam
mov
mov
int
pop
push
je
sbb
mov
out
imull
out
popa
xor
or
in
hlt
subb
xor
jo
push
movsb
mov
push
cmpsl
jb
outsb
ljmp
test
push
add
mov
sbb
js
lds
sbbb
jmp
lcall
cli
push
sbb
fisttps
xchg
sub
inc
je
push
push
sbb
sbb
add
fdivrs
mov
cld
shrd
xchg
jne
xor
or
rclb
mov
out
cmpsl
outsb
sahf
cmpb
lds
and
in
jo
fiadds
add
in
cmc
mov
movsb
inc
and
sub
push
std
rclb
xor
je
jmp
insl
xchg
cs
adc
sbb
pop
dec
addb
push
les
stos
cmp
sar
add
cmpsl
pop
mov
loop
sbb
pop
xchg
lret
loopne
in
pop
in
ljmp
add
popf
and
mull
les
xor
ret
xchg
xor
dec
je
push
jo
ficompl
ret
add
sahf
in
mov
add
pop
pusha
sub
pop
and
add
call
jp
and
or
adc
lret
and
outsl
mov
ficoml
mov
dec
fbld
push
test
sub
sub
mov
out
mov
repz
lock
or
push
icebp
stos
sub
jg
out
xchg
pushf
f2xm1
jne
clc
cmpsb
mov
and
mov
jmp
fldl
or
push
sub
int
add
inc
rolb
lods
pusha
ret
loop
inc
test
lcall
sar
pop
call
cwtl
ss
add
or
push
sbbb
pop
rcrb
in
push
retw
and
aad
jg
sbb
push
xlat
inc
mov
mov
and
jnp
mov
inc
sub
mov
mov
sti
lods
adc
adc
out
lock
mov
xor
lret
and
pop
lock
xchg
push
adc
push
xchg
pop
jb
sbb
pushf
jbe
rcll
loop
nop
push
clc
jg
hlt
arpl
push
push
arpl
roll
fs
popa
loop
js
cwtl
xor
mov
loopne
pop
or
mov
jbe
fidivrs
stos
arpl
or
aam
push
rcl
scas
clc
push
mov
in
cltd
mov
in
push
movl
mov
mov
pop
lock
je
and
les
jmp
lcall
int
dec
in
push
loopne
xchg
bound
add
cmp
cmp
sbb
imul
pop
pusha
sub
add
xor
aaa
push
ret
dec
inc
dec
xchg
dec
add
lock
xchg
cmp
shrb
popa
repz
and
test
mov
or
mov
ret
mov
mov
stos
hlt
repnz
add
in
or
test
mov
or
imul
sbb
repnz
jno
rcll
mov
shlb
fisttps
sbb
adc
jmp
pop
clc
addb
stc
mov
jp
inc
cld
mov
mov
rcrl
orb
jg
add
mov
sarb
cmp
add
imul
pop
fsubrs
cs
clc
push
xor
cltd
jp
and
cmpsb
cmp
adc
jge
mov
icebp
ret
mov
sti
sub
jns
imul
jne
adc
decl
out
lock
inc
xor
mov
cmp
pusha
ret
or
pushf
sub
test
or
mov
mov
push
xlat
add
imull
mov
sbb
aaa
inc
dec
fcoml
enter
inc
orb
aad
std
aas
jnp
xchg
enter
mov
push
and
xchg
leave
cld
or
int
jbe
ret
xchg
test
fcmovnu
shrb
call
and
testb
xor
ret
fistps
aas
and
push
ficoms
push
scas
or
ds
jl
push
mov
imul
in
popa
sbb
pop
dec
lcall
pusha
add
cmp
push
sub
sarb
inc
cld
dec
les
es
adcb
mov
adc
dec
push
test
push
das
roll
mov
aaa
dec
pop
pop
adc
lock
aam
f2xm1
mov
js
icebp
nop
mov
mov
push
mov
cmc
sub
adc
sub
xor
loopne
das
or
add
cmp
inc
test
fsubs
push
push
push
xorb
test
js
inc
jnp
adc
xchg
loopne
add
mov
jg
pminub
dec
jp
js
rorb
popa
lahf
cmp
aaa
lahf
mov
cmc
mov
and
mov
inc
push
aas
cmpsb
fcmovu
fiadds
les
inc
mov
xor
sbb
inc
xchg
clc
lds
jb
push
or
outsb
ret
jo
mov
dec
aam
push
jo
add
jg
hlt
aas
cmpb
mov
icebp
aad
les
ljmp
ds
in
andb
sbb
add
out
inc
movsb
jle
adc
fistps
pop
ds
add
add
mov
gs
mov
push
push
inc
lods
fs
ficompl
pop
movsl
int
jb
mov
or
xchg
cwtl
cmp
mov
adc
aam
hlt
mov
cmp
andb
pop
bnd
jmp
inc
fwait
cld
mov
aas
xor
sbb
xchg
test
fwait
rclb
mov
mov
stos
adc
rorb
imul
xchg
and
add
push
push
call
ret
in
clc
ss
cmp
daa
lds
loope
fcmove
lahf
or
jmp
adc
xchg
or
scas
sti
add
cwtl
ret
mov
fistps
mov
jge
add
xchg
sbb
je
push
js
jge
lcall
inc
add
insl
hlt
enter
test
xor
mov
inc
pop
loope
jne
sahf
xchg
andb
adc
subl
clc
jno
push
inc
lcall
cmp
rol
mulb
adc
mov
call
sub
fwait
pushf
mov
add
cmc
inc
out
cmp
out
popa
and
sti
lret
inc
pop
push
out
stos
aad
adc
loopne
int3
call
pusha
and
mov
inc
lahf
and
enter
lahf
inc
insb
xor
xor
or
incl
dec
ret
or
cmp
incl
imul
pop
add
cmp
movsl
lods
fadds
and
add
and
xchg
nop
push
pop
mov
push
addl
test
cld
jle
addr16
sub
cmp
lods
jp
pmaxub
cli
aad
xchg
out
je
cmp
hlt
out
push
dec
cld
pop
or
ss
mov
or
xchg
mov
int3
mov
or
adc
push
aad
mov
cmpsl
shrb
mov
scas
ret
jle
xor
mov
loop
ror
add
inc
loopne
shll
ret
mov
xor
divl
dec
les
jbe
in
ja
and
fimuls
mov
cmp
mov
ja
inc
sub
pop
mov
mov
lea
push
push
fistpll
jmp
sahf
lock
push
pop
mov
dec
stos
jo
mov
pop
adc
sahf
mov
push
pop
test
inc
ds
jmp
aaa
mov
das
jg
cmp
mov
sbb
sbb
pop
cmpsb
push
dec
fnstsw
xchg
add
adc
int3
jecxz
inc
cmp
fdivrs
fdivs
xchg
add
bound
shlb
or
dec
or
pop
push
dec
add
xchg
pop
mov
or
sbb
mov
pop
or
sub
or
cmp
in
sub
sahf
jp
outsl
push
icebp
mov
outsl
pop
jno
xlat
push
aam
sbb
xor
cld
add
gs
ret
lret
xorb
cmc
mov
mov
push
push
ja
inc
or
das
clc
lods
xchg
adc
inc
xor
inc
mov
push
cmc
push
mov
mov
ret
les
cmp
add
and
notb
int3
xchg
in
and
andb
sar
aas
sbb
dec
inc
mov
stos
icebp
pop
mov
and
pcmpgtb
out
sarb
ds
and
xchg
lock
dec
jae
test
fldt
rclb
mov
or
sbb
lock
rcrb
lret
clc
mov
or
mov
sub
dec
fisubs
inc
or
xlat
outsl
push
leave
sub
xchg
ss
lock
in
lcall
push
xlat
adc
ja
and
inc
xor
mov
movsl
xor
ss
mov
sbbb
pop
test
xor
mov
out
arpl
jne
outsl
xor
insl
pop
inc
lret
in
xchg
ret
mov
pusha
xchg
jmp
sbb
fistpll
mov
lock
mov
decb
insl
push
sub
andl
stos
or
sbb
adc
add
mov
ret
je
xor
cmp
lods
mov
jb
xorb
rorb
add
cmpsb
out
int3
mov
add
jmp
lahf
ja
lock
add
in
pop
inc
call
ss
cltd
add
in
mov
incb
xchg
mov
sbb
sub
loopne
test
cmp
enter
lock
add
mov
sub
cld
outsl
dec
xchg
mov
or
outsl
and
cmp
lea
cmpb
jo
fimuls
std
pop
nop
pop
out
adc
sbb
inc
jle
push
mov
cltd
sbb
cs
call
sbb
pop
fbld
push
mov
adc
and
stos
dec
ds
mov
pop
jae
adc
add
test
push
fsubs
hlt
aaa
add
lods
mov
xor
rorl
mov
scas
fs
mov
xchg
inc
mov
add
jmp
int3
inc
les
cmc
add
das
cmp
fisubl
pop
sarb
es
outsb
inc
mov
cmc
out
add
dec
rorb
in
add
js
pop
jp
jp
out
cli
mov
fstpt
lea
sub
es
lods
shrl
ret
mov
int3
mov
mov
mov
in
pop
outsl
js,pn
push
cmp
mov
and
jb
pop
pusha
decl
adc
xchg
cmpsb
jae
xchg
sahf
ja
shll
sar
scas
enter
jo
cmpsb
push
add
sbb
cmp
push
xchg
es
cmp
pop
dec
jo
ss
cli
push
enter
add
scas
dec
cld
daa
sbb
jne
addb
data16
nop
dec
rol
lock
in
mov
ja
add
addr16
lods
jne
add
sbb
sbb
pop
xchg
add
loopne
push
jo
fildll
jb
cmp
mov
add
cmp
mov
decl
jo
push
fimull
dec
push
in
mov
pop
xor
test
pushf
cmp
add
and
dec
arpl
pop
test
mov
mov
inc
adc
push
rcrb
inc
push
repz
bound
mov
jmp
sbb
sti
jno
fwait
push
in
pop
scas
cmp
mov
and
leave
mov
inc
push
pop
pushl
js
cmpsl
pushf
stos
jle
call
jne
xor
add
sbb
jle
test
arpl
das
cs
mov
jbe
icebp
mov
cli
jecxz
mov
jnp
hlt
ret
dec
and
push
test
mov
outsl
push
lcall
push
and
add
sbb
sbb
push
push
ss
sbb
mov
mov
jno
shl
adc
lods
add
mov
imul
movsl
mov
lods
push
mov
iret
sbb
fdivrl
sub
fcoms
into
mov
xlat
sbb
scas
rol
hlt
lea
dec
inc
lods
add
cs
jae
and
or
mov
lcall
jbe
jle
sub
dec
and
stos
ja
test
out
and
push
mov
in
pop
add
and
xor
push
ficomps
or
fs
jns
xor
mov
and
flds
and
movl
inc
cli
mov
jecxz
lds
cli
jg
not
arpl
cmpsb
mov
or
insl
xchg
and
sahf
cltd
mov
cmp
add
in
ljmp
and
arpl
inc
sbb
hlt
or
push
call
or
cmc
scas
push
call
test
pop
insb
clc
sahf
pop
inc
hlt
mov
mov
lret
push
subb
mov
sub
xchg
pop
sarb
pop
mov
add
enter
mov
xchg
jp
out
shrl
sub
cli
dec
add
inc
jge
int
xchg
mov
adc
pop
cld
das
adcb
icebp
imul
push
int3
pop
cld
subl
mov
pop
jp
fildl
jnp
lea
add
xor
fucompp
pop
cld
sub
pop
scas
cmpsb
dec
or
add
fcmovu
cmp
arpl
clc
mov
fistl
dec
je
push
hlt
aad
stos
adc
es
pop
and
popa
punpckhbw
jl
les
fists
inc
xor
rcrb
add
ljmp
pop
jl
es
jg
gs
and
mov
sbb
lock
fcoms
loope
xchg
inc
mov
mov
dec
out
mov
cmc
mov
sub
loope
rcl
mov
pop
or
push
cmp
jno
xor
inc
aaa
loop
push
imul
mov
in
xor
shl
push
dec
lds
xchg
sub
lcall
roll
push
ja
insl
std
ds
ja
fisubs
shr
pop
push
dec
add
hlt
lret
add
out
push
sbb
sub
or
hlt
jg
fnop
cmpsb
push
shrb
xchg
xorl
aam
adc
movsb
or
inc
cs
cltd
loope
out
cli
mov
ljmp
lds
mov
insl
nop
cmp
pop
clts
inc
and
push
int
mov
and
sbb
mov
and
push
jnp
fmull
outsl
mov
fs
int3
dec
push
sti
mov
adc
sbb
sti
imulb
mov
mov
add
fyl2x
inc
aas
and
enter
sbb
mov
loopne
push
sbb
cmp
jo
mov
push
sbb
dec
mov
add
jmp
sbb
out
test
xor
jo
sti
mov
mov
scas
jbe,pn
loopne
mov
cltd
push
add
test
loope
jne
addr16
and
sub
mov
loope
subb
icebp
adc
in
inc
dec
outsl
push
mull
cmp
pop
xor
or
add
mov
dec
mov
js
dec
mov
addr16
bound
fistl
scas
push
rolb
loope
shll
hlt
cmpsl
mov
mov
fiaddl
stos
pop
insb
insb
popa
pop
hlt
or
shll
mov
dec
adc
and
pop
adc
ja
mov
data16
add
or
pop
fidivl
cmp
iret
cmp
cli
pop
loope
push
cmpsb
shll
ret
filds
in
fcoms
jae
jg
and
pusha
xchg
push
loopne
add
mov
cs
jge
push
add
pop
movsb
inc
sub
out
into
inc
sti
jp
add
mov
lea
shl
xchg
adcl
pusha
int3
ds
fnsave
or
testb
inc
add
insb
xchg
movsl
jbe
je
add
sbb
jno
jnp
xor
mov
sbbb
int3
pop
ss
inc
sbb
pop
inc
outsb
sbb
inc
add
sub
cwtl
mov
push
inc
clc
clc
ljmp
stc
mov
loopne
les
mov
mov
xchg
icebp
xor
scas
push
les
jo
ss
imul
aaa
push
fwait
lret
ret
ljmp
push
jecxz
nop
push
xchg
sub
push
mov
test
subl
testl
mov
adc
and
push
cmp
sub
push
scas
dec
dec
loop
mov
mov
repz
idivb
lock
xchg
pop
or
bound
movsb
add
adc
test
ficomps
adc
jbe
pop
jg
sbb
cs
enter
pop
lds
pop
pusha
xor
mov
or
xor
dec
scas
lret
cmpsl
loop
add
add
pop
push
xor
sub
jo
loope
mov
cld
mov
imul
or
sub
cmp
sub
pop
sub
out
popa
push
dec
insb
js
sbb
add
sbb
or
sub
leave
test
xchg
cmc
mov
in
xchg
stc
mov
sub
shlb
cmp
xchg
inc
test
sbb
cli
imul
loopne
dec
lock
xchg
and
imul
mov
movsb
into
jmp
fsubrs
jne
mov
xlat
xor
jbe
add
mov
movsl
mov
insb
js
sbb
cmc
lods
add
sub
mov
sbb
stos
daa
fdivs
test
lds
pop
insb
addl
mov
lock
jo
mov
dec
pushf
push
loopne
mov
scas
loop
leave
push
icebp
mov
mov
inc
push
repnz
fcmovbe
clc
fmull
shrl
aad
add
cmp
lock
fistl
adc
ret
jns
mov
inc
es
cmp
add
movsb
add
push
lret
mov
add
in
mov
lock
mov
pop
jo
lods
xor
pop
shll
fidivrs
clc
fcomps
push
xor
dec
mov
sbb
popa
paddw
xchg
fadds
jno
xor
xchg
push
aam
loop
sar
adc
pop
sbb
rorb
dec
jo
adc
pushf
aam
sub
cmp
push
add
mov
cmpsl
jle
loope
mov
std
or
insb
cltd
mov
jo
int
stos
mov
inc
mov
fcomp
fstpt
loope
fsub
inc
jg
push
lock
mov
push
loopne
addr16
pop
xor
mov
cltd
push
push
sbb
addr16
cmp
xlat
rcll
sbb
cmp
test
mov
inc
adc
icebp
rclb
xor
rorl
rcrb
movsl
ret
jmp
sahf
dec
mov
sbb
pushf
push
es
fisubrs
dec
ja
pop
jo
mov
xchg
push
test
inc
adc
pop
dec
lret
pusha
and
test
cmpsb
cmc
jmp
dec
add
add
ret
push
inc
loop
jg
dec
scas
fmul
jg
sub
mov
cs
dec
xor
xchg
push
mov
lods
pusha
inc
push
pop
icebp
test
repz
jo
sub
jnp
inc
push
sub
add
mov
jae
push
mov
xchg
int3
dec
lret
dec
arpl
mov
fcomps
inc
pusha
in
sbb
add
push
shlb
loope
mov
insb
pushf
mov
sbb
or
push
fld
ret
push
loopne
lds
or
pusha
cs
aad
cmp
mov
insb
add
xchg
pusha
pop
cs
outsl
jbe
out
push
loop
jbe
cld
enter
xchg
jb
push
sbb
mov
in
movsl
lds
adc
add
mov
inc
lret
mov
daa
call
call
and
clc
or
mov
push
lds
add
insb
jb
inc
in
and
inc
ret
call
add
cmp
or
ss
lcall
or
push
pop
pop
jge
pop
loope
aas
int
xor
mov
out
arpl
mov
int
sbb
lcall
inc
or
push
push
lock
pop
pop
shl
jmp
insb
idiv
mov
mov
loopne
or
test
fistpll
mov
pop
sub
movsb
sbb
push
xor
je
jmp
fisttps
push
adc
das
loopne
mov
jo
jg
daa
imul
or
pop
ljmp
inc
sbb
jns
xor
outsb
push
std
dec
fists
mov
outsl
pop
fldcw
roll
mov
pop
fimuls
call
sbb
cld
out
dec
loope
mov
dec
ljmp
cmp
ja
add
add
push
inc
pushf
lahf
dec
rcrl
add
mov
pop
or
lods
adc
mov
in
mov
movsb
scas
pushw
nop
test
xchg
in
mov
add
pop
cmp
loope
mov
inc
jp
das
lods
dec
sub
aaa
dec
cmp
je
inc
add
or
push
shrl
fwait
inc
loop
inc
mov
push
fmull
inc
xchg
nop
jp
pop
stos
or
shr
mov
jne
adc
call
scas
cwtl
mov
xorb
push
jmp
icebp
int3
pop
xchg
jmp
mov
push
pop
ja
mov
jno
push
cmc
out
mov
adc
jge
sbb
js
push
mov
les
inc
dec
jle
cli
clc
push
xchg
data16
repnz
icebp
add
jge
cwtl
dec
inc
dec
cmpb
fimuls
push
pusha
gs
dec
sbb
outsl
jae
ss
cs
stos
xor
or
push
xor
sbb
in
inc
dec
xchg
lret
jmp
pop
sbb
push
or
ds
fisubrs
pop
push
sub
cmp
sti
lds
sar
sub
adc
mov
jnp
inc
rolb
sbb
in
js
inc
sub
cltd
mov
push
pop
xor
jne
fdivl
add
mov
lcall
nop
movsl
add
clc
jo
shl
push
sub
ja
sub
fsubl
or
cli
push
js
push
add
ret
pushf
call
push
repz
xor
jb
jp
shlb
dec
push
loop
jle
pop
loopne
push
xchg
jmp
ret
jmp
ret
in
hlt
jg
or
and
mov
int
into
aas
or
dec
jle
iret
add
iret
or
je
mov
pop
bound
push
test
cmpsb
jg
cmpsl
bound
addr16
adc
or
roll
rorl
add
add
rolb
imul
addr16
jns
mov
addl
dec
adc
fs
cmp
das
jg
lret
sub
shll
jmp
pop
inc
sbbl
mov
rcrl
jl
xor
scas
mov
psubusb
jg
pusha
or
in
pusha
xchg
movsb
iret
push
mov
mov
cltd
sub
or
cmp
push
inc
xor
or
xchg
adc
jle
pusha
jle
rcll
xchg
aaa
out
icebp
ss
pop
push
rorb
xchg
inc
js
mov
mov
dec
lods
and
cltd
cltd
push
push
mov
loop
mov
and
mov
inc
inc
pop
jae
loop
dec
mov
fsubrs
jecxz
mov
xor
lcall
pushw
sahf
adc
mov
scas
xchg
sub
aaa
pop
jge
inc
xlat
push
dec
adc
jbe
adc
and
cwtl
iret
mov
pop
mov
stos
pop
mov
fsubl
aad
sub
cmp
inc
scas
push
jle
nop
sbb
lcall
clc
outsl
stos
push
scas
test
sub
rclb
stc
mov
pop
inc
adc
lahf
lcall
adc
mov
sbb
adcl
xchg
sbbb
sbbb
adc
inc
imul
call
int3
ljmp
xchg
repnz
adc
sti
insl
or
cmpb
or
fists
jbe
mov
pushf
inc
hlt
lock
incl
sbb
int
popa
mov
inc
addl
cmp
outsl
fimull
adcl
das
outsl
xor
aam
cwtl
sub
aam
stos
bound
or
and
decb
jp
dec
or
data16
and
or
les
in
orb
test
push
jbe
or
lock
sub
outsb
jo
xchg
xor
in
sbb
dec
bound
clc
mov
mov
push
andl
mov
test
ja
push
fwait
push
sub
inc
outsl
ljmp
xor
lock
sub
adc
mov
negl
fcmovnb
jg
lret
add
and
mov
and
inc
sarl
mov
mov
jg
cli
push
out
mov
or
test
push
lds
sub
mov
pop
rclb
sub
or
test
cld
sarb
jecxz
loope
or
push
push
cmpsb
ret
mov
mov
int3
or
lahf
push
inc
cmp
enter
cmp
xor
add
add
cmp
cmpsb
sub
bound
in
inc
pusha
sbbb
lock
push
out
clc
jge
rorb
dec
and
notl
test
call
add
add
int
in
add
mov
lock
pop
push
push
jbe
imul
scas
repnz
and
mov
cmc
pusha
lcall
mov
mov
mov
lret
push
sbb
push
jb
mov
adc
or
xorb
mov
xchg
add
add
sub
popf
outsb
adc
dec
add
gs
movsl
hlt
test
inc
xor
xchg
data16
mov
pop
jno
call
cmp
movsb
jmp
fadd
insl
call
jle
lock
push
add
cmpb
shll
xor
es
inc
xchg
test
sub
cmp
or
ficoml
popf
or
das
gs
jecxz
fcmovnb
outsb
sub
arpl
inc
out
pop
jne
push
sbb
fidivrl
ljmp
loopne
adc
cmp
lret
sbb
call
dec
aas
push
cld
xchg
mov
pop
repz
jge
hlt
dec
hlt
ljmp
mov
icebp
sub
adc
hlt
and
lcall
jle
xchg
mov
psrld
bnd
je,pt
pop
mov
mov
aaa
jmp
loopne
cmp
aaa
add
fiaddl
aad
jb
xchg
cmpsl
sbb
add
inc
loope
jge
sub
out
lahf
or
xchg
loop
push
add
mov
dec
insl
xor
and
pop
icebp
lcall
adc
mov
inc
sub
lock
jp
xor
nopl
enter
fs
dec
cli
cmc
aad
inc
test
inc
mov
leave
jo
aam
jle
call
loopne
mov
jo
adc
mov
mov
mov
xchg
pop
stos
and
fsub
incl
mov
ja
fistl
dec
aad
pop
add
pop
pop
dec
jno
sbb
in
pop
sbb
xchg
mov
test
inc
mov
pop
adc
aam
xchg
push
sub
scas
jecxz
jle
push
mov
xchg
nop
sahf
cwtl
outsl
mov
jg
adc
jg
add
mov
mov
mov
mov
imul
std
push
sarl
shrb
adc
ret
mov
sbb
push
push
mov
incb
xchg
aam
sub
dec
push
pop
popf
push
adc
jnp
aas
lods
popf
and
addl
outsl
sarb
loopne
stos
icebp
mov
sub
dec
push
lods
std
lock
ljmp
dec
stos
data16
int
fimull
imul
outsb
cmp
lods
adc
push
imul
test
mov
or
jp
out
mov
cli
in
nop
add
inc
call
jae
inc
lds
add
sbb
add
shrb
xor
xor
add
push
or
inc
and
dec
sub
inc
xchg
addl
xor
add
push
pushf
mov
mov
mov
adc
das
std
sub
xchg
inc
push
aas
xor
outsl
push
sub
pushf
int3
stos
repz
sbb
aam
ret
in
in
push
mov
or
mov
add
lock
pop
repnz
xchg
mov
daa
push
out
insb
xor
sub
sub
ja
xor
rcrb
test
xchg
in
push
mov
popa
popa
stos
imul
stc
ljmp
lock
cwtl
js
or
rolb
lods
sbb
pop
leave
out
mov
xchg
dec
nop
subb
pop
pusha
lods
mov
mov
pop
repz
test
adc
jb
cld
sbb
test
jne
ret
cmp
and
lods
or
out
add
adc
push
shlb
aas
nop
lahf
int3
push
cmp
incb
sbb
cs
and
mov
pavgw
and
in
arpl
popf
mov
push
sub
and
outsb
pusha
jp
sbb
scas
sar
movsl
xor
mov
cmp
scas
test
jmp
subb
xchg
jb
and
mov
clc
roll
shll
shll
mov
inc
sahf
push
std
dec
and
inc
shrl
hlt
dec
push
push
push
mov
add
ljmp
aas
mov
inc
scas
pop
inc
xchg
jo
test
mov
add
mov
and
decl
fdivr
sub
fldl
add
lret
push
cmp
jno
stc
cli
lcall
mov
push
ljmp
hlt
add
dec
and
cmp
xor
bound
mov
cmp
jp
icebp
jg
sbb
psllw
jns
mov
cwtl
shr
mov
xchg
xchg
jecxz
mov
sub
or
cmc
int
mov
xchg
test
lahf
inc
pushfw
cmp
xlat
test
and
cmp
xchg
std
pushf
hlt
in
outsb
cld
and
pusha
inc
jge
and
or
sub
cld
cs
push
jns
ret
ja
add
outsl
xchg
and
mov
aam
int
mov
push
dec
stc
push
sbb
cmp
jmp
or
test
int3
lcall
jmp
les
cmp
mov
jo
mov
ret
lcall
inc
inc
repz
call
cmp
mov
xchg
scas
and
inc
mov
das
js
jb
inc
ds
js
call
ljmp
lods
mov
add
add
xorb
into
add
push
neg
addr16
or
lock
jae
pop
adc
out
test
scas
aad
mov
cld
mov
push
inc
push
push
jb
inc
js
push
aad
mov
jp
and
scas
push
daa
cmp
aaa
push
clc
xor
mov
sbb
xor
add
pop
stos
add
fimull
outsb
movsb
scas
xorb
mov
pop
add
leave
add
xlat
cli
lods
arpl
mov
sub
cmpb
inc
and
push
push
cmp
add
daa
xchg
ja
xor
mov
rolb
inc
cmp
loop
aaa
lods
adc
inc
push
imulb
add
push
adc
fisttpl
jns
sub
lock
sbb
pop
pop
insb
push
es
outsb
or
inc
les
cmp
ja
or
in
in
mov
add
cmp
loopne
mov
dec
jp
pop
and
cld
and
inc
sbb
and
incl
inc
pushf
add
cwtl
add
lds
repz
pop
addb
add
xchg
ja
jecxz
xchg
cmp
cmp
lret
roll
pop
xchg
jb
mov
mov
xchg
mov
mov
nop
jae
or
loope
jo
sub
icebp
sub
xor
jnp
les
ja
loope
sahf
jno
dec
lds
inc
add
lret
xor
js
nop
fistpll
shrb
loopne
xor
xchg
add
test
sbb
loopne
sbb
stos
pop
cs
jmp
mov
aaa
or
mov
cmp
inc
and
cmp
mov
nop/reserved
mov
imulb
stos
ds
out
cli
sub
popa
mov
pop
push
pop
xchg
lds
mov
adc
jge
subb
fdivp
mov
mov
jne
movsb
data16
adc
jb
mov
insb
xor
cs
insb
add
bound
xor
cli
lea
add
nop
stos
xorl
jae
clc
push
ljmp
aaa
mov
cmp
inc
bound
outsb
pop
mov
and
fisttpl
out
jle
in
push
cmpsb
xor
push
inc
inc
or
aas
inc
das
je
or
fbstp
leave
pop
jp
movsb
xor
pop
imul
push
mov
mov
movsl
sbb
cmp
adc
pop
pop
pusha
rclw
ret
bound
add
mov
xlat
sbb
fcoms
dec
adc
pop
rcll
fldl
mov
ret
push
test
jecxz
inc
out
loop
inc
mov
gs
push
xchg
xor
jmp
and
lods
adcl
test
push
push
in
hlt
jmp
into
rcll
fnstenv
sbb
adc
fmul
clc
dec
lahf
call
mov
cmp
or
rdmsr
or
shlb
das
enter
stos
and
jo
daa
shl
aaa
fadds
mov
cmpsb
mov
scas
gs
imul
adc
sub
and
aas
pop
add
arpl
and
xchg
mov
cmc
int
xor
cmp
stos
adc
cmp
and
fldcw
scas
xor
enter
test
mov
test
push
aad
stos
repz
mov
xorb
sub
mov
dec
adcl
dec
dec
jae
and
or
pushf
outsb
cs
arpl
and
mov
das
dec
cmp
je
mov
fnsave
lcall
or
popa
hlt
or
jns
mov
lock
or
push
mov
add
dec
arpl
inc
add
in
or
fxch
gs
pop
ret
daa
pushf
hlt
sbb
or
add
pop
sbb
mov
pusha
jae
mov
xchg
xor
arpl
and
cmp
cmp
pop
push
hlt
add
sbb
push
bound
xor
rolb
dec
pop
pop
clc
pop
mov
inc
incl
pop
loopne
mov
fisubrs
call
and
cmp
jno
pop
je
dec
ret
ljmp
inc
inc
test
mov
and
jbe
mov
jnp
mov
adcl
adc
jo
pop
cmp
push
test
xchg
ret
adc
jbe
nop
push
dec
les
and
cmp
ficoms
lods
jne
mov
mov
push
adc
insb
test
push
mov
clc
pusha
cmpsl
loopne
in
inc
cs
loope
call
xchg
adc
popa
stc
add
and
pop
cltd
pop
xchg
mov
or
divb
cmp
lahf
cs
jg
xchg
lahf
add
stc
pop
pusha
pop
mov
and
int
add
pop
mov
mov
push
outsl
lods
cwtl
call
mov
sbb
pop
js
into
adc
sub
jnp
imul
loope
sbb
scas
jecxz
in
cmp
stos
lret
in
arpl
cmpsb
lcall
mov
jmp
outsb
adc
pop
cmp
cld
inc
jnp
loop
cmpl
or
inc
xor
pop
scas
shlb
ja
xchg
iret
loope
mov
push
cmp
int
jne
adc
xchg
push
cmpb
popa
sub
int3
mov
or
inc
test
pop
adc
mov
push
sarl
sbb
and
push
lods
jp
mov
mov
jno
in
in
inc
cmpxchg
inc
movl
cmp
in
xchg
mov
xchg
flds
xor
or
sbb
lea
dec
push
psubsb
cmp
jl
mov
cltd
mov
sbbl
mov
sbb
stos
cmpb
add
iret
subb
mov
iret
sahf
xchg
jmp
adc
mov
popf
dec
loope
das
or
jmp
push
add
push
jl
jnp
pop
sbb
andl
ret
and
and
fsubrs
mov
leave
fisttps
popa
aaa
push
push
or
shll
ret
clc
sbb
std
jg
inc
or
mov
sbb
bound
mov
lock
lret
and
jnp
or
scas
movsl
add
icebp
test
mov
js
test
mov
in
ja
mov
hlt
jecxz
mov
cli
sub
xor
jp
icebp
adc
insb
adc
ret
aas
adc
mov
fildll
or
jbe
daa
stos
push
dec
xchg
cmp
dec
scas
cmp
imul
mov
add
pop
cmpsl
cs
orl
mov
sbb
incl
jmp
mov
rorb
lds
and
add
mov
jg
xchg
inc
lcall
stc
mov
add
jle
inc
mov
cmp
cmpsl
jo
ret
mov
gs
sbb
cmp
mov
insl
add
jl
clc
xor
add
mov
xchg
add
xcrypt-cbc
cmpsl
nop
cmp
js
xor
ret
movl
mov
loope
outsl
ja
inc
mov
jmp
jne
data16
or
in
jl
mov
or
push
das
and
sti
loop
and
jp
mov
inc
aad
faddl
jo
jecxz
push
aam
lock
dec
pop
dec
adc
negb
mov
out
aad
js
xor
push
cli
loope
cmpsb
lock
cmp
ja
ss
sub
lcall
xor
loope
mov
sub
out
inc
addr16
xchg
push
shl
dec
jge
xchg
ja
cmp
xor
or
cli
aaa
add
stos
cs
add
cwtl
or
dec
std
mov
xchg
cpuid
sub
loope
mov
mov
mov
aam
ret
ficompl
add
loop
test
fs
fsubl
data16
push
fisubs
cwtl
ret
pop
jmp
inc
xchg
xchg
fildl
pop
mov
clc
push
clc
and
ja
mov
lods
push
add
aas
cmp
jb
cwtl
sbbb
and
pop
cld
dec
cmp
mov
cmpsl
icebp
sbb
pop
rolb
push
xchg
nop
js
es
les
adc
push
mov
scas
enter
cmp
aam
pusha
pop
lds
fisubs
jb
jo
pop
cmpb
pusha
sbb
xorb
test
push
inc
mov
clc
pop
jl
lret
stc
dec
mov
leave
push
push
je
out
in
xchg
mov
pushf
adc
mov
mov
mov
push
add
push
or
dec
call
loope
mov
cmpsl
rcll
ja
xor
mov
adc
out
adc
repz
call
and
dec
add
inc
out
cwtl
pop
mov
test
add
and
sbb
mov
rcrl
add
sahf
dec
outsb
fnstcw
sub
jle
jae
and
inc
aaa
fisttps
adc
inc
fldt
jo
add
add
ljmp
add
jae,pn
and
pop
lock
into
mov
fmuls
jbe
pop
test
cmp
push
in
xor
aad
lea
xor
ror
push
add
sub
cmp
or
adc
loop
sbb
popl
aas
andl
jg
mov
sub
iret
xchg
ja
ss
fs
jl
push
sbb
add
in
jl,pt
add
xchg
pop
addr16
jl
es
jo
rolb
xor
adc
lahf
add
cld
dec
cmc
xchg
pop
pop
pusha
push
loopne
imul
add
cmp
add
stc
lahf
sub
xchg
jo
push
fsubs
outsb
clc
pop
repz
sub
aam
or
ret
popf
mov
xchg
popa
stos
iret
adcl
push
push
repz
subb
aaa
bound
sbb
pop
fcomps
xchg
mov
ja
adc
popf
mov
sub
nop
push
add
push
lret
in
gs
daa
clc
test
mov
cmp
cwtl
xor
ror
adc
stos
adc
je
mov
loop
cmp
es
mov
sub
mov
rorb
insb
rol
in
sub
insb
aad
pop
mov
cwtl
mov
sarl
clc
or
out
inc
test
or
scas
call
cli
sub
loop
push
mov
data16
ja
xor
jb,pn
rolb
aad
mov
mov
outsl
xor
mov
xor
cmp
rcl
push
pop
clc
rorb
stos
test
push
push
mov
push
xor
push
iret
in
loopne
mull
incb
movsb
lock
cmp
repnz
push
out
inc
test
xor
adc
sub
and
pop
scas
in
shlb
inc
mov
xor
incl
mov
rolb
mov
enter
or
repz
adc
adc
test
fstl
mov
mov
or
mov
push
mov
lods
xchg
mov
je
fidivs
jb
aam
sbb
sbb
jmp
mov
pop
ret
or
adc
sub
add
mov
scas
push
loopne
arpl
pop
enter
cmp
js
mov
cwtl
xchg
fwait
dec
clc
fldt
xor
sub
add
outsl
mov
stos
popf
xor
in
xor
fimull
mov
inc
inc
xchg
mov
in
mov
inc
lahf
sbb
inc
inc
add
dec
mov
das
adc
inc
xorb
push
nop
pop
cmp
pusha
mov
scas
dec
cmp
pop
stos
add
mov
mov
push
out
or
mov
inc
mov
jecxz
fldt
orb
mov
data16
push
out
mov
fimuls
pop
roll
push
pop
les
clc
iret
js
sbb
and
pushf
mov
in
mov
mov
insb
popa
or
xchg
jb
sbb
and
dec
out
test
pop
pop
jmp
push
testl
lock
es
sahf
inc
sbb
sbb
ja
jg
in
ror
lods
add
push
jmp
ljmp
adc
stos
sbb
inc
cmp
call
rorb
sbb
xor
jo
inc
push
jno
dec
xor
test
dec
loop
add
daa
dec
jae
xchg
push
inc
xchg
ret
je
jg
lock
dec
push
aam
inc
jecxz
xlat
mov
ljmp
push
add
insb
loopne
push
or
les
sub
and
cmp
mov
cli
xchg
mov
inc
sahf
jle
fs
ljmp
adc
fbld
mov
daa
inc
jmp
stc
into
and
jns
mov
test
sti
test
jne
pop
rolb
push
int3
pop
sbb
mov
fdivrl
mov
cmp
pusha
mov
icebp
jne
dec
xchg
add
popf
cmpsb
add
bound
ja
fsubs
dec
dec
and
add
add
sub
jb
cli
pop
test
and
out
push
out
xor
and
add
sub
mov
ja
gs
imul
or
xor
leave
xchg
jp
jno
ljmp
mov
xchg
mov
cmp
dec
jnp
adc
bound
js
add
xor
test
push
lcall
adc
mov
loop
js
xchg
mov
fbstp
jne
clc
add
cvttps2pi
fnstsw
inc
dec
rcrl
jb
sbb
out
jb
add
dec
pop
lods
dec
ljmp
test
aaa
or
mov
addl
int
into
cmp
and
lods
icebp
sub
hlt
test
jg
xchg
lea
push
in
and
ficoms
xor
inc
aam
sub
jmp
out
push
inc
xchg
adc
add
test
xor
fwait
sub
push
lock
mov
adc
mov
cmp
test
jo
testl
jmp
ret
mov
inc
mov
fstps
stos
clc
mov
shlb
bound
or
add
mov
xchg
or
add
test
cmpsl
lret
test
inc
rolb
push
xchg
aaa
xor
ja
lods
sub
fcomp
sbb
mov
and
sbb
hlt
and
ret
repnz
mov
outsl
jns
ret
int
enter
aad
push
mov
add
lods
xchg
movsb
call
inc
stc
or
inc
fnsave
sbb
push
adc
shl
out
clc
pop
jmp
addr16
mov
push
hlt
inc
jns
cmc
lods
inc
pop
movsb
mov
mov
sbb
pop
push
pop
insl
aam
xchg
push
mov
sub
cmp
sub
xchg
add
hlt
pop
pop
sbb
fstpl
cmp
pop
es
les
sti
dec
add
imull
sahf
aad
push
in
inc
sub
or
or
jmp
cmpsb
stc
imul
fs
shll
fsubl
push
ror
jge
sub
jl
sub
pop
lret
adc
inc
jp
push
jb
ret
mov
fbstp
dec
lds
rclb
adc
enter
scas
negl
dec
getsec
int
pop
mov
and
shrb
cmp
shlb
push
xchg
imul
adc
add
jne
mov
out
pop
js,pn
daa
jae
cmp
in
or
mov
pop
out
push
mov
sub
pop
pop
add
cwtl
or
and
mov
mov
in
daa
imul
add
xchg
divl
sbb
js
rorl
or
dec
xlat
fcmovne
fsubr
push
and
shlb
jp
jge
sub
xor
loop
pop
std
lcall
mov
outsl
dec
push
xor
roll
aaa
lahf
mov
insb
xchg
scas
push
jne
pop
std
loope
lret
jecxz
push
push
stos
mov
fbstp
sti
out
inc
sbbl
stc
loope
dec
popa
ret
or
es
jbe
xchg
jp
dec
cltd
mov
mov
jmp
ss
pop
popf
je
in
jecxz
jbe
jne
shlb
cmp
icebp
mov
pop
jno
inc
cs
push
cmpsb
sub
mov
push
cld
inc
jl
dec
andl
out
hlt
xor
adcb
ds
repz
xor
insl
aad
push
lock
and
push
push
inc
pop
test
jnp
xchg
adc
subb
push
mov
sub
fsts
or
push
andb
bound
inc
dec
inc
push
inc
mov
daa
cmp
in
pop
adc
rol
ljmp
or
pop
add
loopne
jae
mov
mov
jnp
das
push
in
xlat
push
adc
push
jnp
fsubs
adc
xchg
lds
sbb
and
fwait
jl
mov
sbb
xchg
push
rcr
push
ja
loope
mov
pop
shll
mov
lock
es
aad
js
push
repz
jecxz
inc
or
lcall
mov
xchg
push
sbb
adc
pop
cmp
fisttpll
add
inc
adcb
test
dec
clc
sbb
lods
dec
lds
jp
stc
sbbl
or
mov
scas
and
ja
clc
test
or
bound
sbb
sbb
add
pop
mov
mov
pusha
inc
dec
test
loop
add
xor
jge
cli
stos
adc
ret
into
and
icebp
loop
repnz
int
add
incb
cltd
add
daa
out
aas
sbb
xchg
pop
push
lcall
out
orl
rorl
dec
and
dec
jecxz
sbb
xlat
adc
mov
or
and
xchg
aam
inc
or
sbb
loopne
fisttps
push
dec
and
rcrb
in
inc
jmp
jo
push
repnz
sbb
xor
push
push
scas
xor
push
loope
jb
in
jge
pop
jl
mov
mov
jnp
loopne
mov
pop
ds
push
add
lods
or
jo
adc
or
out
sbb
lods
or
pop
sub
dec
pop
icebp
ja
hlt
inc
cmp
scas
xchg
test
es
insb
dec
sub
std
stc
jg
pop
test
cwtl
dec
dec
add
out
mov
mov
cmp
or
cs
xor
mov
xor
or
nop
es
xor
mov
sar
mov
shll
aas
push
push
dec
je
nop
jp
out
mov
paddq
test
fisttpl
mov
and
movsl
pmuludq
fcoms
std
add
jl
test
mov
in
inc
mov
inc
pop
sub
lcall
sti
jecxz
nop
push
idiv
pop
sbb
rclb
rorb
pop
xchg
xor
pop
in
push
mov
test
sub
mov
popa
push
or
ja
bound
xor
jae
push
ret
xor
and
lods
andb
lds
push
std
cmpsl
push
jo
push
mov
push
adc
mov
or
pop
pop
push
add
sbb
push
inc
test
nop
adcb
int3
out
test
movsl
inc
mov
jmp
ret
dec
mov
cld
dec
inc
rcll
pop
mov
jp
adcl
fnstcw
and
inc
sbb
test
cmp
divl
out
push
xchg
inc
lock
fidivl
mov
push
outsl
mov
outsl
cmp
inc
out
push
push
stos
ss
or
stos
subl
sbb
cmp
inc
out
jmp
in
add
out
mov
push
mov
sbb
addr16
fstpt
mov
insl
xor
fldt
shll
les
adc
cmp
in
and
mov
mov
and
pop
sbb
push
hlt
addl
adc
out
rcrl
jle
scas
sbb
inc
or
int3
jp
adc
cmp
dec
jecxz
jb
sbb
int3
lods
push
adc
mov
add
inc
dec
dec
xor
cmpl
push
insb
shlb
lock
loopne
cli
sub
fs
jp
stos
pop
loop
xor
int3
xchg
popa
mov
lock
adc
xor
fwait
jecxz
or
add
lret
mov
and
cwtl
outsb
cmp
sbbl
mov
js
sarl
hlt
arpl
mov
mov
mov
out
cmp
or
je
outsb
fcoms
jl
jmp
inc
mov
mov
pushf
jae
rclb
cmc
stc
jg
inc
je
mov
into
jns
ja
stc
nop
clc
aaa
mov
cld
pushf
push
adc
clc
add
push
xchg
mov
add
loope
incl
inc
adc
mov
repnz
sahf
ret
pop
hlt
add
rorl
sbb
inc
es
xchg
adcb
adc
movsl
rclb
das
push
aas
ret
jmp
jl
clc
into
sbb
and
lret
jbe
adcl
call
divb
or
aam
pmuludq
add
out
xchg
inc
xor
call
test
mov
push
fstpl
jo
jecxz
mov
pop
icebp
aaa
cltd
cmp
or
xor
or
add
cwtl
dec
rolb
lahf
dec
pop
flds
mov
ret
clc
ljmp
mov
xchg
js
push
iret
inc
add
or
or
or
icebp
addr16
pop
rcll
nop
dec
orl
xchg
mov
fsubs
dec
pop
cmp
sub
mov
xor
inc
jno
data16
out
scas
adc
out
insl
fimull
cmc
sbbl
pop
icebp
jp
rclb
out
testb
sub
fimull
mov
jl
jne
outsl
mov
inc
imul
cwtl
rorb
ss
xrelease
cmpsb
inc
outsb
stc
mov
sub
push
faddl
and
repnz
cli
test
or
out
outsb
aaa
andb
mov
mov
mov
jb
push
jmp
ror
pop
movsb
xor
and
faddp
cmp
outsl
cld
pop
lods
mov
rolb
or
es
push
mov
insb
xor
sub
xor
jo
daa
or
dec
jg
shr
mov
xchg
test
pop
xchg
jnp
xlat
ja
inc
outsl
pop
leave
rep
out
pop
mov
aad
lock
push
xchg
cli
cmc
test
ss
ja
fmull
outsb
enter
imul
mov
les
test
pusha
into
pop
movsl
dec
dec
cmp
rcr
sbb
xchg
insl
movsb
mov
enter
lds
and
fadds
jle
jmp
jo
loope
test
adc
jb
cmp
fcom
or
test
lcall
add
dec
inc
imull
rcll
stos
test
out
adc
sbb
outsb
or
and
rcrb
push
fimuls
int3
clc
jmp
mov
je
mov
enter
icebp
push
fsin
push
jp
cmc
int3
add
mov
in
or
adc
push
or
clc
in
sbb
mov
insb
data16
int3
pop
or
clc
lds
rorl
xchg
push
and
mov
mov
lods
scas
add
rolb
ljmp
dec
shlb
jnp
pop
loop
dec
stos
test
mov
outsb
inc
xor
mov
rorb
lret
and
clc
pop
stos
loop
ds
mov
fsubs
push
clc
push
rolb
mov
loopne
xor
jmp
jg
fcoms
sub
xchg
ret
pop
popa
pop
pop
stos
jns
mov
stos
jg
test
and
sbb
in
js
lock
push
stc
movsb
scas
mov
cmpsl
mov
mov
aam
mov
loop
shll
test
loope
fmul
sub
sub
inc
lock
test
mov
mov
cmpsl
or
push
faddl
out
or
sbb
push
pop
lock
fwait
xorb
xor
lods
std
dec
push
xor
jne
shlb
pop
mov
push
cmp
cld
pop
test
cwtl
insb
lock
pop
out
mov
cli
pinsrw
adcl
ret
xor
cmp
xchg
repz
jecxz
pop
jne
pop
add
dec
add
subb
out
mov
pop
cld
mov
inc
xchg
add
mov
jnp
in
cmpsb
push
adc
adc
inc
jl
mov
aaa
mov
and
shrb
lods
lods
cwtl
mov
xchg
inc
lea
loopne
push
cmpsb
mov
clc
decl
mov
test
dec
insb
inc
mov
cmp
and
sub
dec
inc
mov
fidivrs
ljmp
sbb
jns
sub
outsb
les
mov
xor
sbb
aam
push
out
push
jno
test
bound
test
pusha
lock
repz
fisttpl
adc
shrl
sub
jmp
fidivl
subl
xchg
cmpb
mov
pop
and
shl
data16
push
xor
push
or
ljmp
dec
enter
andl
in
sub
in
jmp
pop
mov
sbb
loope
das
or
mov
imulb
fldcw
push
movsb
stos
push
push
insb
mov
lods
mov
ljmp
pop
adc
jg
lahf
sbb
cmc
lret
or
mov
hlt
adc
daa
repnz
hlt
std
inc
loope
pop
xlat
and
sti
repnz
jae
mov
inc
or
mov
mov
loopne
push
stos
add
jbe
jb
loopne
fistpll
test
xchg
xor
dec
aas
dec
cli
test
jp
cld
out
int
nop
fidivrs
ror
push
jge
aas
jp
adc
mov
outsb
ljmp
clc
mov
fimull
sahf
pop
or
and
jb
jecxz
stos
cld
adc
clc
movsb
cmpsl
les
loopne
sar
mov
loopne
testl
fcompl
ljmp
int
push
ljmp
fcoms
dec
fwait
in
add
sbb
ja
inc
xor
mov
push
cmpsb
lds
pusha
mov
or
lret
jbe
push
cmp
cmp
stos
movsb
pop
das
fstpl
jbe
lret
lcall
mov
dec
jnp
or
adc
cmp
lea
testb
push
push
mov
popf
mov
or
sbb
push
pop
arpl
and
mov
or
cmc
push
add
and
cmc
popa
sbb
stos
mov
jae
adc
mov
sbb
cwtl
out
outsb
adc
inc
pop
add
jl
int3
xor
xor
fwait
ljmp
addl
mov
xor
mov
xor
cld
mov
pushf
loope
hlt
addr16
stos
pop
pop
imul
mov
shr
adc
add
sub
inc
push
add
insl
clc
ret
and
outsb
out
dec
ja
adc
test
add
lea
ljmp
fldl
push
mov
pop
icebp
pop
xchg
mov
push
push
rorl
xor
js
cmpsl
ljmp
je
push
sub
jo
sub
inc
mov
cmp
jmp
je
in
ljmp
in
dec
sub
insb
cwtl
dec
adc
pop
lods
push
push
cli
fistl
ss
add
mov
ljmp
sbb
jne
cld
out
xchg
pop
mov
sbb
fidivrl
sahf
pop
js
mov
gs
std
jg
inc
sub
add
cmpsb
in
jno
adc
arpl
scas
ss
sbb
inc
and
pop
lcall
or
mov
aad
ljmp
fadds
pop
cmp
cmp
loopne
pop
les
sub
enter
mov
cmp
dec
add
push
js
xlat
push
insb
clc
stos
push
mov
ret
arpl
fisubs
testl
inc
or
sarl
clc
push
mov
sub
and
lret
jb
lret
mov
out
or
dec
shl
xor
aas
ja
inc
mul
mov
jp
or
xchg
ret
cmpb
push
mov
xchg
iret
mov
jae
rcl
repz
test
rcll
mov
shr
inc
sbbl
or
mov
sbb
rorl
loop
aas
dec
test
ja
cmp
add
test
addr16
adc
aad
js
jo
sub
pop
ljmp
mov
sub
movsl
inc
sti
pop
mov
xchg
adcb
sub
fldl
nop
orb
inc
roll
adc
push
jle
sub
sbb
in
push
and
and
sahf
sbb
inc
mov
je
and
mov
xor
pop
loopne
scas
pusha
jae
ljmp
add
daa
je
and
push
adcl
aas
pop
mov
outsl
jl
add
orb
and
es
jle
fistpl
in
loop
insl
xor
pop
mov
mov
adc
movsl
jle
js
jl
jo
pop
and
add
imul
addr16
test
jle
jne
loopne
push
jmp
clc
cmpb
inc
sbb
mov
xor
sub
mov
movsb
icebp
jmp
lahf
or
das
clc
xchg
sarb
mov
lcall
rcl
test
rcrb
pop
lret
ljmp
sbb
xor
add
clc
or
je
sti
cli
sub
ret
pusha
out
push
mov
pop
jmp
das
and
xchg
pop
sbb
je
xchg
push
and
jecxz
sub
hlt
lods
ss
xor
push
pop
mov
lods
mov
push
nop
lock
or
std
mov
rcrb
sbb
sbb
cltd
enter
test
rorb
lret
test
cwtl
push
jns
notl
sub
or
cwtl
lds
loope
sub
or
mov
clc
pop
xchg
add
xchg
fstps
pusha
stc
sub
and
xchg
adc
sbb
jp
faddl
push
loop
cmp
setne
out
rclb
sub
ljmp
mov
jmp
in
int
cwtl
cwtl
mov
add
outsl
rol
adc
shrl
lret
gs
sbb
mov
pmaxsw
push
lods
jg
jp
and
xor
mulb
popa
jnp
jp
mov
pop
in
jnp
inc
mov
lds
lret
fstl
xor
dec
add
sub
fisubrl
pop
sub
cmc
pop
loop
push
inc
fdivl
inc
mov
cmp
mov
ss
lock
dec
lcall
and
adc
imul
jo
pushl
dec
arpl
loopne
xchg
mov
fptan
mov
or
fmuls
mov
pop
icebp
int
loop
sahf
add
push
arpl
sbbl
and
orb
out
push
fs
loope
cli
or
mov
ror
and
xchg
movsb
cmp
scas
imul
rorl
inc
ret
jg
mov
pop
sti
inc
push
cli
repnz
mov
mov
adc
cli
mov
lret
pop
cltd
jb,pn
and
mov
jp
jbe
adc
clc
adc
pop
mov
mov
out
dec
inc
in
rorl
mov
rcr
xor
sar
and
pop
cld
jl,pn
ret
je
dec
add
adc
pop
test
lahf
add
jp
sub
in
addl
scas
loop
sbb
jae
fldt
mov
or
sub
fwait
jne
inc
or
loop
dec
cmpb
xor
or
and
cmp
cmp
into
push
repz
mov
mov
scas
fidivrl
scas
add
pop
hlt
lock
nop
mov
pop
mov
pop
sub
add
ret
sub
mov
and
decl
je
cld
mov
or
inc
mov
inc
xor
xchg
push
inc
les
push
scas
nop
cmp
adc
pusha
pop
dec
sbb
es
mov
xchg
mov
maxps
mov
call
aam
push
outsl
and
or
movsl
andl
ss
mulb
fcoml
inc
add
jbe
cmp
les
xor
loopne
mov
cld
and
xlat
or
test
mov
in
insb
or
mov
test
std
ja
adc
arpl
push
xchg
jb
scas
lcall
cmp
jge
roll
test
test
lods
add
rolb
lcall
sbb
pop
push
scas
shl
imul
cmp
lcall
sbb
fdiv
cmpl
adc
pop
cmp
xor
sub
incb
or
mov
sahf
cltd
mov
add
lock
cmp
mov
incl
jecxz
xchg
xorl
add
outsl
decl
rol
lock
movsb
scas
in
cltd
rcrb
ss
jge
cmp
adcl
add
jl
scas
xor
lret
sub
bound
aam
in
test
ja
cs
add
push
aad
das
cmpb
in
mov
inc
mov
sub
cmpsb
mov
lret
jp
jb
lcall
insb
mov
int
xchg
and
xor
aad
jns
aam
les
test
add
xor
adc
clc
lret
sub
movb
mov
adc
jle
push
leave
in
sub
in
push
mov
movsl
lock
push
lret
jge
add
cmp
cmpsb
cld
inc
mov
mov
inc
in
je
cs
mov
bound
dec
jmp
push
sbb
push
and
or
into
subl
sbb
mov
push
or
xchg
push
lahf
scas
pop
push
pusha
inc
out
xor
push
or
cmp
jb
sub
lock
inc
push
jne
scas
sahf
or
pop
clc
push
aaa
ljmp
test
scas
xor
clc
lods
jbe
in
lods
loope
mov
mov
sbb
push
lret
push
sub
and
outsl
js
icebp
push
mov
xor
add
pop
orl
sbb
mov
pop
xchg
xor
lock
mov
and
fldcw
notl
or
lret
dec
or
dec
stos
mov
mov
dec
sbbl
or
imulb
dec
movl
inc
lcall
sbb
adc
cmpl
pop
fcmovnbe
add
lret
jecxz
out
mov
sub
mov
jecxz
cli
mov
out
leave
or
fisttps
test
or
into
out
xchg
push
es
clc
sub
cmp
jbe
mov
jne
mov
mov
pop
mov
pusha
in
fidivrl
push
clc
inc
je
sbb
xorb
sub
jno
or
pop
inc
mov
fnstsw
mov
imul
push
fstpl
adc
pop
push
cs
pop
fisubl
push
lock
add
and
pop
mov
pop
addr16
push
rcl
test
mov
xchg
sahf
pop
dec
out
sbb
loop
ja
mov
cmc
cmp
push
sbb
fidivrl
test
icebp
and
and
leave
add
cmp
xchg
addr16
pushf
and
push
adc
pop
shrb
subb
adc
pop
out
mov
xchg
icebp
mov
mov
pop
and
mov
sbb
add
xor
aas
leave
push
sbb
cltd
decb
icebp
pop
inc
cld
pop
adc
jp
dec
add
dec
cmpsb
push
xor
xchg
ss
fsubrs
andl
mov
mov
loop
prefetchnta
push
js
adc
cli
adc
adc
mov
pop
fistps
or
mov
mov
scas
mov
adc
movsl
lock
jns
pop
pushl
jo
fistps
sub
arpl
jecxz
sbb
add
fistpll
pusha
push
mov
add
out
bound
adc
pop
push
add
sbb
repnz
pop
mov
sar
push
push
andl
ret
mov
icebp
dec
inc
xlat
adc
push
call
add
out
das
push
sub
hlt
lcall
cmc
in
dec
mov
push
inc
inc
iret
adc
mov
xchg
pushf
test
xchg
jle
sbb
cli
mov
or
cmp
or
inc
and
pop
icebp
sub
ret
and
fadds
jne
xlat
scas
inc
pop
shrl
sarb
pop
test
das
xor
and
insb
mov
out
cs
and
xchg
lds
inc
fildll
push
jae
loope
xor
mov
and
jno
xor
mov
adc
or
aas
add
add
or
mov
nop
or
int3
inc
jbe
adc
aam
outsl
cmpl
adc
jle
pop
and
ficoms
cmp
leave
and
cmpsb
or
mov
pusha
ss
mov
in
mov
nop
lock
test
push
lcall
mov
mov
push
mov
icebp
adc
mov
dec
mov
ret
xchg
movsl
and
lds
adc
pop
add
sub
push
push
lret
pop
and
xchg
adc
popa
jo
insl
out
sbb
mov
or
sbb
call
xchg
push
and
sbb
adc
repnz
push
cmp
add
addb
xorl
xchg
call
xor
dec
shrl
dec
fimuls
xchg
push
gs
inc
mov
sbb
inc
sub
mov
sbbl
jae
adc
push
sbb
ja
mov
jge
inc
push
adc
pop
repnz
hlt
dec
pop
ss
push
divl
imul
push
cld
push
cmp
rcl
inc
dec
fildl
jp
les
imul
adc
sahf
mov
sub
cmp
shl
or
xchg
or
inc
aaa
rolb
arpl
test
mov
repz
fimuls
xor
sarb
gs
push
jae
xor
mov
stc
mov
add
sbb
mov
mov
fnstsw
or
jb
xlat
ret
fwait
sbb
rorl
adc
dec
push
pop
add
sbb
inc
dec
aas
or
pop
or
aaa
push
sbb
xor
clc
shlb
mov
rol
pop
push
rcrb
xchg
and
mov
js
and
hlt
mov
loope
dec
dec
out
adcb
inc
sbb
outsl
imul
inc
adc
rcr
ret
ja
push
push
jo
or
jnp
push
in
mul
loope
cmp
cmp
pop
pop
lock
mov
jo
cmc
cmp
push
in
mov
je
push
fsubrl
std
daa
or
add
cmpsl
inc
mov
pop
add
and
mov
jno
inc
sbbl
pop
call
jg
incl
cmp
icebp
fs
sbb
negb
rol
arpl
inc
push
or
js
ret
sub
repz
aaa
mov
mov
cmpsl
adc
lds
or
mov
mov
stos
jmp
fstl
mov
gs
xor
ss
subb
stos
in
jmp
xchg
inc
add
fnop
cld
daa
pop
idivl
into
pop
lret
fildl
hlt
jnp
pop
xor
mov
add
jmp
seto
pop
xchg
jge
cmp
pop
cwtl
inc
arpl
les
je
mov
pop
imul
pop
dec
sti
popf
into
stos
jno
adc
mov
mov
out
cmp
es
arpl
jae
mov
pop
lock
jns
xchg
mov
daa
sar
jp
dec
gs
add
push
xchg
xorl
clc
fcoms
cmp
mov
jb
movsl
loope
mov
mov
pop
hlt
xchg
les
sti
push
push
clc
daa
jecxz
mov
add
bound
jae
jge
movsl
mov
imul
popf
es
add
add
cmp
xchg
aam
push
add
icebp
push
mov
inc
xchg
push
stc
cmp
inc
lods
xor
mov
popa
adc
dec
ljmp
jbe
xlat
and
pushf
mov
dec
call
or
sbb
inc
or
dec
and
imul
adc
es
push
mov
arpl
ljmp
xchg
pop
mov
shlb
mov
cmp
mov
lock
stc
or
mov
loopne
push
jmp
cmpsl
mov
and
fisubrl
jle
push
imul
mov
dec
test
jle
push
cmc
pop
cmpsl
or
fsubl
add
icebp
and
sbb
fisubl
pop
loop
ljmp
cmp
pop
adc
out
inc
pop
popa
sbb
jmp
andl
gs
jp
das
stos
aaa
dec
sub
stos
je
cld
in
dec
incb
std
fwait
cmp
call
push
fsubs
and
scas
inc
mov
stos
roll
cld
decl
leave
repz
test
push
fldenv
fists
rcrl
movsl
insl
out
mov
or
sbb
pop
pushf
fidivl
outsl
test
sub
mov
cmp
and
sbb
scas
cli
orl
clc
adcb
mov
inc
out
mov
imul
fldenv
cmp
pop
and
sbb
sbb
and
push
xor
inc
push
sub
cltd
xchg
dec
mov
inc
fwait
hlt
orb
stos
movsb
xor
jmp
loope
pop
js
xor
sahf
or
xor
mov
sub
sub
fadds
adc
mov
cwtl
dec
sub
push
sbb
aaa
adc
sbb
adc
jl
rcrb
mov
xchg
cmovg
mov
aad
ret
xchg
mov
push
rorb
pop
xor
xchg
test
clc
cmpsb
cmp
mov
scas
sub
adc
jne
inc
pusha
mov
mov
fmul
fcoml
dec
push
inc
mov
sbb
xchg
imul
xor
jno
xchg
inc
aaa
xlat
or
cld
pushw
pop
xchg
scas
and
rclb
in
lahf
div
cmp
jo
add
mov
push
loop
xorb
enter
dec
lods
mov
jno
jo
inc
or
fildll
stc
pop
xchg
shl
add
aas
xchg
jmp
pop
aam
sbb
mov
aas
jmp
icebp
scas
mov
clc
ss
push
sbb
mov
pop
int
mov
sbb
movsl
testb
sub
pop
sub
cs
das
daa
test
iret
xchg
imull
push
loop
push
jnp
sub
repnz
aaa
inc
add
cmp
dec
xor
shll
clc
sbb
pushf
inc
adcb
pop
mov
lock
test
fiadds
loopne
adc
cmpsb
adc
dec
dec
sbb
inc
or
cs
loopne
sub
cmp
rorb
add
and
roll
ret
add
loop
das
push
or
movsl
jb
outsb
pusha
rcrl
fisubl
jmp
lret
xor
dec
add
test
pusha
pop
pushf
out
stc
ja
sbb
or
imul
xor
outsb
psubw
cs
aas
lret
test
dec
add
add
xlat
inc
test
dec
mov
scas
adc
push
rclb
sbb
jl
jl
ds
add
in
inc
sub
mov
test
data16
bound
fnstsw
xor
andl
xchg
pusha
mov
mov
icebp
or
faddl
cmp
adc
or
inc
mov
das
mov
push
and
add
jecxz
enter
sti
cmp
mov
popf
leave
in
inc
shlb
stos
xchg
mov
mov
into
mov
sub
cli
xor
ds
test
xlat
pop
shll
and
or
je
mov
inc
fcoms
mov
mov
and
push
mov
sub
rorl
jnp
jae
push
mov
dec
or
incb
pop
pop
jns
push
sbb
push
inc
push
js
cmp
and
xor
push
adc
imul
les
xchg
enter
dec
pop
lcall
dec
or
mov
sub
std
mov
shll
jns
call
dec
cmp
imul
cmpsl
fiaddl
sub
xchg
mov
cmp
sub
lock
jne
mov
pop
ret
and
in
jbe
add
pop
je
fimull
push
sbb
pop
das
or
sti
data16
ja
shll
sbb
sbb
aas
subb
leave
scas
cmp
inc
pop
mov
cmp
jg
jmp
test
es
mov
in
lea
and
mov
mov
cld
mov
mov
jns
cmpsb
mov
cmp
jns
jns
sbb
je
popa
insb
inc
insb
insb
jl
lock
ss
in
sbb
inc
jo
aam
push
loopne
sub
cmp
cmpsl
or
hlt
or
lds
fcmovnu
cmovg
daa
cmp
lds
sub
push
mov
inc
addr16
popa
cmpsl
pop
test
adc
xchg
rcrb
test
cmp
xchg
negl
orl
cmpsl
inc
jae
sbb
insb
int
lcall
mov
and
xchg
popf
sbb
ret
push
int
dec
or
and
ret
popf
add
dec
popa
mov
js
sbb
xchg
mov
adc
mov
cli
cmp
mov
hlt
mov
or
push
rclb
add
daa
push
jle
add
xchg
xchg
jo
push
ljmp
rorl
test
inc
cs
stc
je
sbb
jae
cmp
sub
pop
iret
or
cmpsb
xchg
arpl
lods
adc
outsb
or
dec
mov
cmp
daa
pop
gs
or
bound
and
xchg
xchg
js
ljmp
jmp
and
lods
loopne
sub
mov
clc
repnz
test
push
xchg
js
enter
lock
jge
mov
xlat
or
mov
sub
into
push
hlt
mov
cmp
fldcw
rolb
jmp
adc
inc
or
dec
test
or
ret
out
clc
add
mov
shll
lods
inc
adc
clc
jl
sbb
js
roll
mov
aam
pop
pushf
push
cmp
mov
mov
ds
and
and
loop
xchg
in
nop
and
pushf
pop
dec
cli
leave
imul
pop
pop
jb
jp
icebp
xchg
cld
or
mov
adc
pop
les
sub
xchg
cmpsb
cltd
inc
clc
lahf
add
push
sub
xor
jne
loopne
inc
sub
jp
dec
test
pop
and
mov
dec
inc
nop
fcmovu
les
inc
adcl
adc
push
pop
loope
sbb
mov
lods
pop
or
or
push
jno
lds
cmp
pop
pop
loopne
shrb
inc
rorl
iret
loope
mov
jmp
jg
rorb
and
in
push
xchg
adc
mov
sbb
fildl
cmp
sbb
mov
sbb
xor
adc
mov
and
pop
enter
pop
pop
jmp
pop
cmp
or
xchg
push
mov
push
push
jbe
call
adc
repnz
or
and
jbe
and
mov
inc
clc
pop
mov
add
cmpsl
sbb
or
or
or
cli
sbb
movsl
sub
mov
fisttpll
xchg
or
aad
inc
push
cmpsl
push
dec
aas
loope
add
sahf
aad
and
test
push
repz
outsl
push
xchg
adc
fwait
cmpsb
push
rorb
xor
sbb
add
mov
sbb
lock
sub
inc
lahf
jo
pop
insb
jmp
ret
inc
aad
push
adc
test
add
jne
rorb
lcall
outsb
xor
ss
movsl
mov
adc
cmp
pop
push
mov
push
les
and
ss
cmc
arpl
add
sahf
out
push
ror
loop
or
xor
mov
push
or
and
shrl
xchg
push
sbb
mov
adc
sub
ja
mov
pushf
scas
mov
shlb
jl
pop
stos
xchg
mov
sub
sub
and
mov
adc
pop
call
out
add
les
loopne
or
popf
or
jecxz
push
adc
adc
out
inc
jo
xchg
das
mov
imul
jp
mov
xor
adc
aaa
aam
push
adc
lahf
add
and
sar
pusha
mov
sub
das
mov
shlb
sbbb
xchg
std
pop
mov
push
insb
ja
stc
les
adc
pusha
jmp
loopne
inc
cmp
jp
js
or
inc
push
push
pop
mov
or
adc
clc
jnp
push
je
jae
dec
aad
mov
cmp
bound
fwait
push
cmp
add
mov
push
insb
sbb
push
mov
outsb
les
or
or
popa
shlb
testl
jmp
cmp
jmp
pop
mov
cli
cs
push
fiadds
inc
movl
pshufw
adc
lods
jecxz
clc
rcll
test
mov
jl
pop
inc
cmp
repnz
jle
scas
and
pop
or
xchg
inc
fs
xor
mov
dec
adc
sbbl
cmp
test
push
out
pop
xor
sahf
or
inc
xchg
pusha
aam
dec
mov
xchg
push
clc
bnd
loop
lea
push
push
ret
ljmp
movsl
inc
xor
adc
or
jb
fwait
ss
jne
push
fisttpl
xchg
inc
mov
aas
mov
into
icebp
and
lds
dec
fdivp
loope
aaa
popl
bound
andl
ljmp
sbb
jnp
aad
adc
pop
push
out
fldenv
adc
leave
mov
cmp
mov
aas
mov
add
sbb
lea
aaa
jge
loopne
adc
outsl
and
and
mov
cltd
pop
lods
push
jecxz
jg
xor
cmp
ret
cmp
or
jbe
pop
aas
dec
sub
fldln2
bound
aad
push
pop
aad
rorb
xchg
js
inc
outsl
sub
adc
cmp
lea
insl
pop
enter
test
xchg
pop
cmp
loope
xor
aas
loope
mov
jecxz
rcll
jmp
pop
int
ffree
in
mov
scas
mov
fcoml
push
scas
or
xor
test
shll
xabort
xor
mov
icebp
pop
xor
sub
inc
pop
fsubrl
xor
repz
lret
ss
movsl
daa
xchg
test
push
aaa
or
mov
or
in
cli
mov
sub
lahf
das
adc
push
test
in
ret
sub
xchg
ds
xor
cmpsl
mov
iret
cmp
adc
pop
orl
xchg
pop
lcall
negl
mov
dec
mov
mov
fmulp
pop
mov
sub
jp
nop
fcompl
in
fdivs
or
icebp
int3
jo
fiaddl
mov
shrl
or
xor
fwait
lods
testb
dec
cmpsl
cmp
xchg
mov
xchg
lret
pop
add
and
inc
and
cmp
xor
icebp
xchg
jno
in
sbb
pop
dec
outsl
les
xlat
int
pushf
xchg
inc
scas
or
sub
sub
aam
fadds
jnp
ret
pop
xchg
jo
sbb
loopne
mov
or
cmp
mov
add
add
andb
cmp
xor
inc
out
xlat
movsl
aad
aaa
out
stos
adc
jge
or
addb
les
inc
ret
jle
test
push
ret
or
xor
loop
jl
dec
xchg
xlat
loopne
jno
int3
jo
add
aam
ja
inc
inc
addr16
mov
cmp
push
add
push
lcall
jne
popa
shll
call
push
pop
xor
xchg
ficomps
add
or
xchg
mov
js
aam
mov
fs
popa
outsl
add
inc
int
and
xor
insb
pop
stc
icebp
movsb
clc
cwtl
loop
mov
lods
outsb
hlt
pop
or
push
das
xor
push
je
mov
ffreep
push
mov
out
movsl
ljmp
add
pop
cmpsb
mov
sbb
test
out
inc
rcrl
xor
test
outsl
sbb
sbb
scas
and
js
inc
sbbb
push
filds
mov
incl
pop
daa
sub
fnstcw
add
cmp
add
mov
sarl
pop
popl
jecxz
aaa
or
mov
or
adc
scas
or
mov
jns
and
adcb
adc
and
cmp
in
ljmp
mov
mov
lods
cwtl
call
icebp
orl
test
jo
fsts
mov
sub
ret
mov
pop
dec
xchg
call
adc
mov
jns
mov
cmpsb
xchg
add
lea
xor
and
scas
adc
bnd
add
xor
xor
xchg
mov
adc
das
iret
push
mov
cmp
cwtl
fdivs
xor
xlat
add
shll
and
sar
loop
and
mov
cmpl
scas
shrb
mov
ljmp
push
popf
xor
push
lret
std
adc
push
es
fldcw
shrl
and
scas
ret
mov
jg
mov
cmpsb
in
pop
xchg
push
gs
jl
inc
or
ljmp
shrb
xchg
stos
adc
add
add
sti
ret
shll
faddl
xor
push
mov
loopne
ror
je
adc
xlat
xor
adcl
mov
mov
js
out
jb
repz
or
divl
sti
push
adc
xchg
in
cmpsb
mov
jecxz
cmc
mov
fsubrl
aaa
sub
jmp
sbb
aam
cmp
test
or
outsb
add
jg
call
dec
mov
xor
jle
mov
mov
sbb
mov
push
pusha
inc
and
icebp
les
por
cmp
jo
test
lods
repnz
push
xlat
rcll
inc
add
xlat
mov
insb
pusha
shrb
cmp
dec
aam
xchg
jle
fcmovnb
mov
fwait
dec
cmc
mov
pminsw
mov
cs
xchg
add
nop
add
push
icebp
push
jmp
push
popf
pop
add
or
and
insb
push
icebp
repnz
push
dec
inc
popf
in
lock
xor
test
aas
data16
out
inc
pop
mov
pop
int3
sbb
push
adc
jne
gs
fildll
and
jo
mov
pop
rdtsc
add
dec
cli
mov
stos
shl
aad
adc
xchg
into
or
lock
add
jmp
jns
imul
icebp
cwtl
sbbb
dec
fstps
and
lahf
sub
lds
fildll
loop
test
lods
or
pop
mov
and
fcmovbe
push
mov
dec
sbb
loopne
outsl
out
pusha
gs
jmp
lea
dec
cmp
or
sar
daa
out
es
add
lods
inc
mov
mov
xchg
in
pop
rcrl
jge
sbb
loopne
xchg
or
loope
dec
pop
pusha
ret
sbb
pusha
mov
pop
jge
pop
xor
fidivrs
or
les
dec
or
das
jge
cmc
sbb
or
sub
test
mov
ss
push
push
cmp
cmpb
enter
add
lds
xchg
inc
loop
dec
fwait
adc
mov
or
mov
push
sub
dec
push
add
cld
loop
lcall
push
jecxz
clc
push
filds
xor
xor
andl
xchg
and
add
cmc
adcl
fiaddl
ss
xchg
movsb
dec
mov
dec
add
mov
nop
sbb
aas
shll
sub
pop
pop
cmpl
sub
push
sbb
xchg
popa
xchg
sbb
int3
cmp
mov
adc
add
lret
call
xor
jbe
and
addl
push
pushf
js
lods
arpl
cmp
hlt
je
lods
mov
enter
scas
hlt
mov
pop
lock
sti
movsb
arpl
decb
mov
or
test
mov
dec
loop
push
push
aad
mov
pop
cmpsl
psubsw
cmpsl
push
fdivs
aam
mov
xchg
mov
data16
cmp
dec
js
sub
icebp
ds
out
jecxz
jnp
les
push
sbb
rcrb
jbe
push
pop
xchg
jecxz
jmp
inc
cltd
dec
mov
mov
int3
mov
loopne
add
pop
addb
mov
ja
or
ds
xor
cmp
out
aam
imul
mov
imul
scas
les
xor
leave
inc
testl
inc
jb
xchg
rcrb
std
xor
mov
and
test
rcrl
sbb
inc
cli
orb
dec
gs
push
add
sub
pushf
popa
mov
icebp
mov
xchg
pusha
inc
add
xchg
cmp
xor
lods
imul
js
xor
movsb
mov
xchg
lret
ror
cmp
mov
sbb
sub
cmpsl
loop
rclb
pop
xchg
or
les
aad
psubusw
sbb
dec
out
push
add
dec
adcl
xchg
insb
popa
inc
xor
pop
mov
dec
repnz
xor
sub
or
icebp
sub
in
pop
add
cmpsl
fldenv
and
lret
iret
xchg
xor
jb
inc
sub
adc
lods
mov
jnp
pop
iret
cmc
mov
push
cwtl
jbe
lcall
mov
adc
add
add
mov
cld
jmp
add
leave
bt
cs
repz
pushf
cmp
dec
mov
xor
xor
rorl
sub
jle
andl
push
ja
clts
lcall
inc
loopne
ss
jmp
xchg
add
ljmp
es
and
push
aad
roll
scas
jo
or
dec
inc
stos
popa
pop
and
sub
jo
or
subl
cmpl
test
loop
pop
aas
lds
outsb
sub
inc
test
xor
push
dec
inc
sub
bswap
cmp
decl
inc
push
or
xchg
bound
push
jg
and
lahf
pusha
and
push
dec
mov
pop
sarl
sub
call
pop
insb
shrb
adc
jo
roll
and
adc
int3
mov
popa
shll
and
mov
outsb
clc
in
test
jl
scas
out
lods
test
in
add
mov
mov
das
mov
out
sub
rclb
cwtl
sbb
or
mov
dec
jbe
cli
xchg
fidivs
push
into
scas
jle
and
inc
inc
xchg
mov
pop
in
mov
jo
dec
into
push
xchg
imul
mov
roll
imul
sub
jne
jo
jne
clc
pop
mov
cmp
test
lods
or
mov
jle
and
insb
jbe
and
subl
lods
inc
jne
popf
test
or
cld
and
mov
mov
add
out
leave
pop
and
jp
cwtl
mov
push
arpl
push
sbb
cmp
stos
test
loope
stc
aas
lds
orps
mov
mov
insb
add
push
aam
std
nop
adc
inc
jecxz
or
mov
je
test
js
lcall
popa
cs
cld
lcall
sub
mov
mov
mov
mov
push
sub
add
or
jb
pop
sti
mov
pusha
repz
aas
adc
push
cld
sbb
or
fdivr
push
das
adc
sbb
push
bound
out
pop
clc
mov
in
cmp
xchg
xor
jge
jno
filds
cmp
add
loop
aas
sub
pop
imul
adc
mov
or
jbe
push
rcl
mov
fpatan
stos
data16
shll
arpl
in
jns
pop
cltd
sbb
divl
pop
dec
bound
je
jne
stos
xchg
or
lods
sbb
icebp
fiaddl
test
and
xchg
js
jnp
repz
pop
out
adc
les
sarl
iret
add
xor
jecxz
iret
xchg
imul
ja
or
push
test
mov
scas
fs
jl
test
cli
lret
leave
clc
cmp
fiadds
stc
pop
pop
push
jb
jl
sub
mov
xor
loope
mov
lcall
jmp
cmp
pop
and
shrl
xchg
es
repz
or
and
push
cwtl
lds
lds
and
mov
or
mov
sarl
add
cmp
lods
cmp
fwait
mov
adc
add
add
pusha
gs
sub
roll
push
loop
out
ret
ja
stc
jno
dec
jno
sbb
xchg
jno
fldt
imul
pop
xlat
daa
sub
daa
mov
fwait
mov
inc
mov
mov
out
js
nop
fidivs
inc
pusha
mov
sti
dec
in
push
fwait
call
sbb
clc
ds
cli
xchg
movl
popa
movsb
jecxz
push
in
fmuls
decl
rcll
test
lods
adc
jecxz
add
insb
mov
pushf
push
clc
push
test
movsl
sar
dec
pop
push
repnz
notb
imul
test
add
psrlw
cmp
nop
bound
popf
clc
push
std
cmp
in
and
add
mov
mov
adc
sub
shrl
jle
sub
jg
jne,pn
shr
jae
add
pop
in
inc
ds
movsl
inc
xchg
icebp
std
out
cltd
jae
dec
das
cwtl
pushf
dec
sub
adc
adc
sbb
movsl
push
cmp
push
orb
jle
jbe
dec
testl
add
fcmovnb
test
xchg
mov
in
xor
inc
aaa
lret
adc
jecxz
mov
pop
adc
nop
insb
jge
xor
add
mov
cmc
cli
addr16
stos
mov
dec
clc
mov
mov
sbbb
pop
cmp
push
and
fsubrs
dec
pop
add
add
scas
push
cmp
jg
fucomi
mov
pop
cmp
cmp
pop
xchg
xor
xor
pop
cmpsb
movsb
lret
or
mov
rcl
xor
pop
cltd
xor
sub
in
jo
shlb
fcomp
shlb
out
arpl
sbb
cmp
and
sbb
mov
ficoml
es
ror
dec
pop
enter
inc
mov
sbb
in
or
sbb
sbb
ret
movb
cli
cmp
xchg
jb
sub
mov
add
fnstenv
outsl
or
aam
inc
pushw
sarb
movl
repz
stos
push
js
in
and
faddp
shlb
xchg
pop
dec
lcall
or
insl
das
mov
xchg
clc
mov
mov
rcrl
xchg
jbe
aaa
mov
pop
negl
jno
into
fisttps
push
out
jne
cmc
mov
and
scas
sbb
icebp
mov
mov
lds
add
jo
enter
add
mov
outsl
push
mov
xchg
outsb
xor
punpckhbw
xorl
dec
insb
fdivrs
adc
decl
jbe
stc
movsb
fucomi
ss
sub
cwtl
push
pusha
lds
inc
and
lods
xchg
fnstcw
adc
mov
mov
shll
push
fldl
xlat
inc
sti
xchg
ret
in
stos
pop
and
jmp
test
popf
orl
push
in
sub
loop
mov
jne
loope
sub
sub
bound
dec
xchg
sub
and
xchg
jb
add
lret
pop
aaa
mov
jns
or
xor
daa
xor
ret
fsubrs
fwait
dec
push
and
xor
int3
and
leave
xchg
xchg
out
outsb
inc
cmp
rcr
pop
js
sbb
dec
inc
mov
mov
fs
push
loop
mov
sbb
sbb
cmp
sbb
pop
or
fistpl
push
push
inc
xlat
ret
insl
popa
mov
fwait
xchg
mov
fucomip
sbb
mov
sahf
mov
aad
mov
sbb
cmpsb
mov
sub
sbb
adc
orl
pop
dec
sbb
das
lcall
es
pusha
leave
push
mov
mov
bound
mov
xchg
push
push
lods
add
add
xor
aad
fs
pop
dec
lea
dec
mov
push
cmp
pop
jmp
inc
pop
and
enter
imul
mov
pushf
jl
imul
sbb
push
mov
lds
fwait
mov
mov
test
pop
jnp
push
aaa
mov
push
sub
pop
push
add
daa
mov
es
arpl
cmpsb
pop
outsb
and
in
imul
addl
inc
jne
rolb
fistps
insb
repnz
push
and
and
push
pop
roll
inc
insl
xchg
js
enter
mov
cli
sahf
sbb
and
sahf
adc
test
sub
ss
pop
inc
and
push
mov
add
ljmp
jo
adc
sub
xor
out
mov
add
sti
fstps
movsb
ret
ficompl
fsubrs
test
add
mov
xor
lea
lahf
cmp
inc
ja
mov
insb
push
roll
pop
mov
movsb
mov
xchg
scas
ffree
aad
cwtl
ret
xchg
jno
test
push
fwait
fwait
inc
outsl
pop
lock
sbb
mov
pusha
cmpsb
fistpll
ss
test
cwtl
test
mov
pop
jmp
test
pushl
mov
fisttps
mov
outsb
rolb
and
outsl
push
js
mov
pop
add
xchg
push
leave
ja
mov
or
sbb
pop
roll
xchg
out
push
stc
in
outsb
negb
in
pop
incb
decb
xchg
push
push
popf
push
or
outsb
fsubr
add
movsb
mov
std
lea
bound
int3
hlt
xchg
mov
jns
mov
stc
inc
xchg
mov
fldcw
and
cmp
lea
xor
jecxz
push
inc
cwtl
incl
push
xor
sahf
loope
push
leave
fdivp
cmp
xlat
shrb
insb
daa
xchg
mov
pop
and
add
push
push
rcll
loopne
pop
loope
out
test
or
rorl
push
mov
jg
in
sbb
pop
fidivrs
out
cmp
shl
mov
xchg
or
inc
add
pusha
or
subps
mov
pop
pop
push
sbb
pop
rclb
jnp
mov
xchg
out
add
push
push
mov
pop
scas
adc
adc
lods
fadds
ret
adc
mov
lret
or
jmp
push
pop
into
push
icebp
das
fcomps
dec
cmc
jg
sbb
sarb
pop
or
cmp
lea
jmp
mov
pop
adc
dec
sub
jge
sbb
outsl
pop
mov
icebp
sub
cld
cmp
ljmp
pushf
sahf
dec
mov
imul
push
push
xchg
and
xorb
inc
fmuls
inc
sti
push
andl
loop
or
cmpsb
clc
pop
jbe
mov
mov
lahf
adc
pop
loopne
or
or
mov
inc
dec
call
mov
in
pusha
scas
adc
repz
sbb
inc
push
data16
cmpsl
add
push
or
pop
out
mov
sub
or
sub
loope
inc
fstpt
incl
ror
jbe
push
ja
pop
je
pop
jno
mov
mov
ja
dec
mov
push
stos
stos
or
cmp
pushf
pop
in
xor
pushf
adc
jmp
pop
push
sub
jmp
cs
lea
add
int
adc
sub
add
lret
adc
and
cmpsb
mov
test
push
es
pushf
fldl
or
push
mov
cmp
pop
ja
cwtl
and
adc
fiadds
outsb
dec
mov
sti
and
rcrl
sahf
cs
insl
cmpsb
hlt
xor
test
mov
jg
inc
cmpsl
pop
sub
into
push
adc
loop
inc
jo
or
push
aas
nop
mov
aaa
dec
push
add
clc
roll
inc
pop
xor
pop
cmp
decb
scas
xorb
mov
adc
cmp
lea
sarb
xor
mov
cmp
jecxz
sub
sub
pop
cwtl
add
add
pop
je
push
ret
clc
in
fstpt
xor
ja
adc
mov
and
cli
and
fcoms
mov
pop
sub
xor
clc
add
inc
push
call
xchg
adc
enter
sbb
pop
pop
xchg
pop
std
out
jo
jl
xor
outsl
insb
add
jg
and
outsl
sbb
out
add
sub
xchg
sub
dec
cli
sarb
inc
loop
mov
pop
std
push
lret
jbe
adc
jl
movsb
sub
fisubrl
xchg
ss
or
sub
cmpsb
jne
dec
enter
or
mov
lods
mov
leave
arpl
stc
sarl
lock
mov
xchg
out
dec
cmp
sbb
push
enter
cmp
cmpsb
into
add
cmp
imul
jecxz
jno
or
stc
inc
jge
stos
or
sbb
movl
add
inc
adc
cld
fdiv
cmpb
movl
sbb
or
inc
xchg
add
inc
pushl
movsl
jo
dec
sub
push
std
pop
dec
inc
dec
dec
int
jne
pop
push
dec
stos
in
jle
xchg
les
xor
add
cwtl
mov
jmp
scas
push
std
cwtl
lcall
sub
jo
and
shlb
imul
add
adc
adc
es
or
or
scas
or
jp
or
mov
and
xor
lea
xchg
outsl
push
jo
mov
rolb
outsb
mov
add
dec
mov
nop
insb
push
enter
dec
jns
aas
or
enter
hlt
adc
inc
les
or
test
jp
jl
push
lahf
push
inc
push
fstps
pusha
popa
pop
js
ljmp
push
jno
sub
xor
int3
mov
dec
push
jge
mov
mov
push
sbb
les
stos
cmpb
sbb
push
popa
fstps
gs
ja
mov
imul
out
int
mov
in
xor
pcmpgtd
negb
cmpsl
sbb
lcall
push
les
sbb
pop
icebp
add
sbb
shr
mov
and
hlt
mov
adc
sub
mov
sub
shlb
scas
bound
push
mov
gs
xor
xchg
ret
inc
lods
lock
in
repnz
xchg
loopne
pop
dec
sbb
outsb
push
push
out
push
cmpsl
pop
jge
imul
adc
loopne
pushf
scas
mov
movsl
or
hlt
push
test
pushf
cmc
call
outsl
sub
cmpsb
mov
inc
xlat
fdivs
pop
push
jmp
mov
ljmp
sbb
loope
or
add
rol
test
jno
add
sub
jl
add
mov
push
data16
std
lods
roll
dec
sahf
mov
adc
pop
lcall
mov
mov
xchg
les
adc
lods
int3
clc
sbb
add
out
orw
jge
mov
add
dec
mov
mov
sahf
in
ret
movsl
std
inc
arpl
gs
ds
inc
xchg
dec
cmp
aaa
test
sub
jl
dec
inc
mov
ret
sbb
push
repnz
lret
push
cmp
cs
insb
inc
mov
ss
xor
xchg
jno
ret
shl
ror
xchg
stos
mov
js
jl
sbb
ss
hlt
pop
add
out
decl
mov
push
xor
mov
or
daa
sub
js
xchg
and
mov
or
pusha
jmp
cwtl
dec
pop
jmp
pop
xchg
xchg
push
test
aas
jae
icebp
or
jb
adc
das
sti
pop
or
add
and
ljmp
ja
inc
loope
std
nop
aam
sar
mov
gs
call
mov
or
iret
aas
mov
sbb
pop
or
ds
das
cmp
add
mov
test
out
or
mov
iret
out
cmp
inc
dec
imul
jmp
push
mov
add
add
ljmp
push
jmp
je
mov
push
dec
and
call
les
fldcw
sbb
mov
jl
mov
fldt
fisubl
insl
js
test
ljmp
pop
lods
xchg
push
or
push
jno
outsl
cmp
hlt
or
xchg
cwtl
jp
and
push
je
out
ret
dec
adc
xor
pushf
add
popa
scas
sbb
push
add
xchg
ror
ljmp
inc
add
xor
push
into
cmp
mov
adcb
mov
aam
mov
sub
gs
sbb
push
movsl
pop
pop
or
popa
ljmp
adc
push
push
scas
xchg
xchg
cmp
mov
mov
push
out
out
jnp
test
test
and
mov
lahf
mov
adc
xchg
xchg
scas
lcall
mov
test
xlat
fisttps
pop
scas
jns
loope
aas
adc
insl
adc
xor
aad
fmull
lds
sub
cmp
sbb
inc
xchg
insb
mov
lds
add
insb
rcll
cmpb
pop
lods
xchg
mov
ficomps
add
push
imul
pop
mov
cmp
or
push
cmp
or
add
pop
push
dec
or
mov
mov
lret
lret
test
adc
movb
and
xchg
mov
ja
adc
inc
mov
add
sub
ljmp
pop
loope
insb
rcrb
icebp
adc
sbb
cmp
stc
rolb
mov
je
cmpsl
sub
xor
cmpsl
fdivrs
mov
push
mulb
rcll
insl
and
fidivrl
or
inc
aaa
stos
or
or
lret
jnp
or
xchg
ficompl
push
int
cs
aam
fadd
and
subl
add
add
pusha
inc
ret
flds
cld
pmaddwd
cwtl
mov
add
mov
popf
push
clc
cmpl
pop
ljmp
loopne
rclb
aaa
aas
lea
pop
hlt
and
out
sub
mov
int3
popa
jg
xor
enter
loop
push
sbb
xchg
mov
setnp
jl
mov
pop
xor
inc
jns
xor
push
cmpsb
or
and
das
repz
add
aam
roll
push
mov
xor
fcmovnbe
ret
xchg
lret
aaa
cmp
push
jl
enter
mov
or
add
mov
xor
enter
mov
lahf
inc
lock
pop
sbb
mov
add
xor
pop
loop
rol
push
inc
scas
inc
jno
sbb
je
lahf
notl
and
cmc
mov
loope
inc
loope
mov
dec
pop
frstor
aam
mov
iret
out
mov
adc
mov
and
or
ss
inc
jne
sbb
mull
enter
stos
mov
lret
out
ds
out
pop
lea
pop
dec
sbb
std
outsl
dec
add
pop
mov
jns
mov
adc
bound
popa
mov
loopne
decl
mov
xor
adc
sub
cld
fwait
mov
subb
mov
int3
inc
fldenv
out
sti
mov
call
nop
movsl
cmp
sbb
lods
ljmp
mov
jo
mov
pop
pop
cwtl
cs
mov
cmpsb
jae
enter
test
sahf
pop
jmp
mov
fldt
dec
and
xchg
js
mov
iret
adc
mov
lea
mov
push
sbb
test
dec
adc
sbb
loopne
or
xchg
inc
ja
mov
xchg
adc
add
ss
loope
std
rolb
push
mov
jb
mov
adcb
sbb
push
push
ret
xchg
sub
xchg
dec
cwtl
in
jl
cmp
leave
arpl
dec
sub
loop
and
inc
cmp
add
jle
add
cs
push
loopne
mov
stc
out
xor
add
bound
add
xchg
and
mov
lret
mov
lock
frstor
hlt
arpl
adc
cmpsl
dec
jl
adc
mov
pop
js
int
in
clc
clc
push
sti
mov
or
shufps
scas
lock
push
insb
add
frstor
dec
popw
popa
ret
imul
xor
push
sub
gs
incl
push
push
jbe
pop
xchg
inc
jecxz
gs
lea
pop
sbb
dec
jmp
je
push
gs
subl
sub
cmp
xor
les
jbe
inc
movsl
dec
or
pop
test
mov
push
and
xor
iret
lahf
aas
shrb
dec
aad
out
xlat
pushf
data16
insl
sbb
and
hlt
inc
fsubs
mov
bound
add
jae
test
sarl
xor
sub
xor
lea
push
sbb
add
or
xor
ret
xchg
mov
sbb
jecxz
xchg
nop
fs
cmp
dec
int3
arpl
add
mov
fdivrp
jecxz
insl
pop
popa
andl
out
pop
dec
out
in
inc
cmpb
daa
stos
adc
cmpsb
in
jb
and
les
sub
leave
jmp
inc
in
push
mov
add
movsl
xor
sub
inc
gs
fnstenv
pop
enter
xchg
push
cli
pop
mov
xchg
xchg
pop
xor
cmp
xor
mov
lahf
cmp
sub
mov
mov
orb
outsl
sbb
mov
out
ljmp
dec
adc
or
or
rcll
xor
pop
xchg
mov
icebp
addb
push
mov
lods
cli
movb
addps
sahf
inc
sarb
mov
addl
fidivs
daa
add
cs
pop
sbb
imul
mov
jp
pusha
dec
loop
xorl
arpl
test
stos
addl
mov
loop
and
adc
fidivs
pop
cmp
mov
loope
or
inc
in
adc
or
out
or
mov
pusha
cmp
roll
sbb
enter
int3
xlat
adc
ret
repz
cmpsb
ret
sbb
sbb
lahf
cmp
call
mov
mov
rcrb
fsub
mov
add
pusha
movsb
arpl
mov
sarl
pop
xchg
and
je
or
outsb
ds
psraw
cmp
nop
adc
lods
leave
cli
lds
jnp
scas
push
push
xor
inc
in
movsw
mov
dec
orl
pop
dec
inc
push
imul
inc
ds
pop
add
jbe
adc
jnp
inc
add
push
xor
sub
out
orl
push
push
jmp
in
stos
flds
ds
shrb
cld
mov
outsb
mov
mov
outsl
push
cmp
jo
movsb
mov
test
mov
cmpsb
mov
pop
cmp
or
cmp
adc
stos
pxor
lcall
ficoms
cmp
sahf
repnz
cmp
cmp
mov
sub
or
hlt
decb
or
sbb
jp
dec
hlt
mov
fwait
aad
pop
cs
xor
shl
sti
ja
xchg
push
jo
and
cmpsl
test
es
fwait
adc
pop
push
xchg
ret
jmp
add
cmpl
mov
mov
add
in
and
adc
shrb
pop
jle
mov
cmp
cmp
pushl
imul
loopne
inc
pop
dec
push
lods
push
xor
pushf
pop
aam
call
sbb
jne
adc
xchg
cmp
scas
bound
inc
repnz
stos
or
dec
adc
cmp
cmpsl
cld
add
sub
push
jno
popa
mov
adc
push
icebp
fwait
cmp
lods
sbb
lods
std
insb
xchg
icebp
or
sbb
repnz
ret
popa
or
dec
pop
jmp
cmc
xor
add
or
fwait
lcall
pushf
incb
mov
roll
shlb
filds
sbb
aaa
lret
cld
pop
or
add
mov
clc
clc
ljmp
or
cmp
cmp
out
sbb
test
mov
ficomps
sub
insb
stos
icebp
cmpsl
sub
jl
xor
mov
rclb
push
pop
push
pop
mov
popf
xchg
fsubs
xchg
mov
pop
outsb
addr16
mov
imul
and
mov
movaps
inc
js
lods
cmp
push
inc
jg
test
dec
enter
subl
data16
mov
sub
lods
nopl
fadd
cmpsb
push
sbb
push
push
mov
pop
sar
lock
adc
mov
cmpsb
cmp
xor
adc
fsubp
movsl
aad
cmp
fidivrl
out
pop
out
mov
les
sub
shlb
dec
mov
loopne
ss
mov
jno
or
cld
scas
push
mov
dec
jp
out
or
and
imul
push
fdivrl
xor
mov
xchg
jbe
dec
jg
jns
xor
sbb
out
mov
or
not
xor
ficoms
sub
push
xchg
nop
mov
jecxz
inc
outsb
pop
std
fwait
sub
add
andb
ljmp
iret
xchg
call
psubusb
faddl
dec
and
mov
push
aas
pop
fisubrs
lcall
clc
pushl
add
mov
inc
pushf
mov
repz
fsubs
decb
flds
add
loope
out
imul
push
mov
testb
fists
je
jae
out
dec
in
ljmp
lock
or
adc
inc
ljmp
fwait
jo
ja
adc
flds
jmp
lods
nop
mov
sub
lcall
mov
popa
jmp
dec
or
push
sarl
or
jl
pop
mov
fwait
or
push
xchg
mov
and
gs
and
pop
jb
inc
mov
mov
fists
inc
jl
xor
mov
adcb
add
jg
test
xor
pop
std
add
sub
mov
arpl
push
sub
enter
scas
fwait
mov
sub
jge
jge
sub
inc
adc
in
jb
or
xchg
out
rcrb
cmp
mov
out
xchg
ja
pop
aaa
aaa
pusha
inc
das
hlt
in
push
aaa
cmpsb
inc
es
xor
cwtl
aad
and
adc
mov
and
xor
fiaddl
mov
repz
in
jecxz
das
sub
jle
lds
jmp
clc
outsl
inc
incb
ljmp
loope
fiaddl
outsb
add
adc
outsl
cmp
dec
sahf
sbb
cmp
push
inc
inc
les
push
xorl
mov
add
sbb
cmc
ret
or
inc
mov
aam
lret
jo
out
mov
push
push
adc
leave
adc
push
pop
fs
mov
les
sub
and
jg
int
sub
dec
jne
orb
movsl
jecxz
xorb
mov
push
pop
cmp
xchg
cli
mov
jns
sahf
out
add
mov
fwait
dec
mov
inc
mov
or
int3
cmc
insb
enter
jecxz
push
pop
mov
or
pop
jle
pop
mov
mov
cmp
mov
rcrl
sub
jne
in
cltd
pop
pop
xchg
add
mov
popf
out
loop
rcll
jl
jns
nop
jo
or
and
es
push
jbe
jnp
mov
dec
clc
push
add
sbb
sub
scas
pop
pop
adc
adc
xorl
test
ja
jg
inc
sbb
inc
adc
sbb
lea
pop
int
adc
lea
enter
cmpb
fiadds
pop
and
push
mov
sub
clc
stos
ss
fs
add
pop
jae
pop
aas
ret
pop
mov
adc
jp
test
cmp
les
mov
clc
mov
sti
ss
lahf
loop
and
daa
mov
or
jbe
sub
mov
xchg
dec
test
mov
enter
jbe
notb
ret
es
lods
jae
inc
sbb
mov
cli
sub
jecxz
adc
push
jle
mov
pop
adc
xchg
add
xor
pop
mov
jno,pt
adc
test
into
sbb
movsl
das
pop
mov
loope
cli
pop
dec
or
shlb
outsb
adc
out
cli
in
pop
ret
mov
out
inc
shlb
adc
jge
dec
xor
push
xor
addl
aas
vpcomb
cmpsb
incl
mov
cmpsb
pop
test
mov
sub
push
movl
scas
xor
mov
sbb
jb
int
sarb
or
mov
pop
rolb
pop
hlt
out
mov
inc
lcall
loope
lcall
mov
testl
add
addr16
mov
push
push
mov
popf
or
iret
ljmp
pop
mov
fs
mov
mov
sbb
xchg
mov
jp
or
hlt
decl
ljmp
test
jae
pop
xor
and
mov
push
mov
jae
cli
mov
jne
add
or
mov
out
test
sub
mov
and
xlat
pop
out
push
cmp
fmulp
pop
or
adc
mov
test
iret
mov
testl
aas
ret
sti
mov
nop
scas
xor
xor
xchg
rcl
sbb
daa
inc
loop
pop
push
push
add
xchg
fwait
mov
sub
xlat
shlb
mov
xchg
mov
ss
xchg
outsb
mov
lret
les
xchg
push
cli
mov
fs
sbb
dec
fdivrl
jg
and
sub
lock
jg
sbb
imulb
pop
rolb
adc
xchg
xchg
pusha
lods
mov
lock
xchg
mov
add
jp
mov
call
les
cmpb
scas
cmp
mov
sar
pop
mov
ja
xor
mov
mov
bnd
sbb
lods
fists
mov
bound
or
jae
add
pop
test
pusha
js
sub
and
pop
jp
or
mov
sub
or
je
fstl
lods
ljmp
gs
inc
setl
lea
adc
loope
inc
pop
mov
les
mov
mov
outsl
lret
movsb
sti
inc
es
mov
aas
ljmp
sub
pop
xchg
adc
pop
push
mov
paddb
cld
xchg
pop
out
dec
movsb
jmp
movsl
and
adc
adc
adc
sahf
jae
mov
mov
sbb
in
mov
fisubrs
cmp
inc
lret
shufps
out
sbb
pusha
mov
pop
pop
inc
xor
jo
adc
pop
cmp
cmp
in
xor
mov
and
ja
clc
pop
loop
pop
ret
into
nop
scas
psubd
fadds
cmp
mov
push
xchg
mov
mov
ds
lods
fucomi
sbb
xchg
dec
mov
pusha
mov
loopne
sbb
push
sub
dec
pusha
test
cmp
add
call
push
adc
inc
add
icebp
mov
rclb
cmpl
adc
ljmp
push
inc
xchg
nop
xor
rcl
mov
jl
lock
ds
mov
jno
xchg
loopne
fidivl
sub
lock
fadds
int
inc
dec
xchg
sub
sahf
nop
ljmp
lea
sub
mov
scas
xchg
and
aad
faddl
and
out
pop
inc
push
fs
push
sbb
movsl
mov
dec
inc
gs
daa
mov
mov
ret
inc
clc
inc
ds
add
test
mov
shl
and
sbb
mov
jb
cmpsl
clc
xchg
daa
jp
stos
xlat
fldcw
xor
movsl
ja
cmp
pop
mov
add
ljmp
jne
xchg
or
pop
sub
inc
jo
test
jo
nop
into
sti
add
cmpsl
mov
and
cmc
int3
test
jo
and
es
ss
ret
ds
repnz
jo
add
lret
xor
cmp
mov
pop
sub
es
cli
movsl
mov
lret
notl
and
in
pop
pop
lcall
xchg
test
sahf
mov
or
mov
test
jno
aam
inc
and
aaa
or
mov
sub
js
lds
push
icebp
mov
mov
adc
aaa
or
jmp
inc
inc
fdivs
mov
popa
jge
sbb
push
jmp
cli
sbb
xor
xchg
sbb
fwait
jg
out
scas
cli
jl
out
daa
rcrl
cmp
inc
push
cmp
nop
popa
mov
push
pusha
inc
cli
inc
lds
filds
mov
xchg
arpl
dec
and
add
sbb
ljmp
cli
clc
jp
xor
nop
fcomps
stos
and
add
fcomps
cmp
mov
inc
aam
add
and
push
sub
sbb
and
pushl
pop
lock
orl
imul
push
cmc
outsl
jne
pop
out
adc
xchg
adc
gs
sub
out
enter
mov
push
dec
sub
repz
negb
add
pop
inc
push
xchg
jbe
xchg
daa
aam
loop
fs
into
insb
xor
idivl
and
and
mov
jle
push
xchg
jle
insl
cwtl
xchg
xchg
push
les
mov
in
pop
mov
fbstp
repnz
nop
js
cli
or
mov
out
push
cmp
pop
cld
and
icebp
call
xor
test
orb
mov
jge
jl
std
xlat
jb
xchg
and
movsb
lahf
mov
mov
jbe
dec
mov
push
mov
inc
push
sbb
push
inc
stc
lods
lds
sub
sarb
movsb
xchg
add
push
adc
insl
adc
fld
xchg
mov
xchg
xchg
shl
mov
push
negb
mov
adc
dec
xchg
hlt
jle
pop
lea
cmc
mov
push
popf
and
sti
aas
enter
data16
je
add
lods
addr16
fwait
sub
mov
popf
insb
adc
push
cmp
dec
dec
mov
rcrl
xchg
mov
nop
xor
adc
xchg
cmp
outsl
cwtl
outsb
sbb
mov
mov
mov
cmp
fistl
adc
add
insb
imul
inc
popf
orb
mov
push
ret
pop
cmp
add
mov
rcl
xchg
xor
or
jg
aas
cwtl
mov
xorl
jp
shrl
sub
lcall
xchg
stos
test
shll
insb
shl
cli
aas
ljmp
inc
inc
lret
lods
outsb
inc
add
jle
dec
dec
or
lock
or
mov
out
scas
cmpb
push
cld
testb
lock
push
inc
mov
popf
mov
loop
js
daa
push
jns
jnp
lock
cmpb
cmp
add
ret
lods
inc
jae
push
pop
push
xchg
cmpsl
jl
xchg
adc
inc
and
out
test
ss
mov
orl
sbb
mov
jecxz
adc
mov
pop
inc
pop
aas
xchg
sbb
sti
adc
jmp
lock
add
inc
or
lea
pop
sbbl
mov
aaa
jno
add
in
jg
out
inc
xor
add
add
xchg
dec
sbb
lahf
repz
movsl
dec
add
ljmp
mov
add
stos
xchg
jg
mov
hlt
push
inc
hlt
mov
mov
pusha
jo
aad
sbb
add
adc
push
pop
aad
aaa
shrb
pop
mov
dec
sbb
push
adc
out
lods
or
push
lret
or
nop
js
push
push
push
ficoml
call
xchg
push
or
push
in
xchg
sub
xor
mov
decb
inc
mov
jle
adc
pushf
ds
jbe
and
popa
jge
xor
sub
push
std
mov
mov
fbld
and
sbb
fs
cmp
or
dec
ljmp
pop
sbb
pusha
rcll
or
pusha
enter
lods
dec
or
imul
adc
jle
orb
xor
subl
mov
jnp
xor
or
ljmp
inc
testb
rclb
js,pt
rolb
out
into
add
or
add
xchg
xor
inc
ficoml
fstp
adc
inc
pop
clc
mov
lock
inc
dec
add
aas
or
sbb
sbbl
lods
sahf
push
in
xor
fadds
cmp
fiaddl
mov
jne
and
rol
xor
mov
xchg
mov
add
cld
push
test
lret
mov
adc
mov
push
ljmp
fmuls
jno
rclb
and
je
push
mov
icebp
push
xor
inc
leave
aam
ja
aas
jae
push
add
mov
std
je
push
fwait
cmp
add
into
test
and
inc
adcb
lea
imul
lcall
dec
push
cmp
add
aam
dec
push
incl
or
lret
xor
int
dec
jg
int
lods
dec
clc
int
sub
mov
push
sub
inc
call
jg,pt
mov
lock
push
dec
or
pop
push
add
add
adc
add
inc
mov
pop
in
mov
bswap
xor
adc
iret
or
lcall
daa
test
iret
cmpb
and
fbstp
xchg
sub
inc
jp
mov
pop
ficompl
fisubrl
and
or
xor
call
xchg
nop
cmp
fwait
jne,pt
or
and
pop
jge
add
inc
popf
and
loopne
and
pop
or
mov
push
call
xchg
shlb
mov
jne
sub
inc
aad
std
loope
xor
jbe
cmpsl
repz
push
ret
cmp
outsl
adc
inc
or
int3
orb
push
ja
mov
cmp
push
mov
int
and
mov
mov
clc
es
loopne
jge
fistpll
push
jp
scas
inc
mov
sbb
pop
clc
loopne
sbb
jne
cmp
pop
std
push
cmc
jg
mov
mov
adc
clc
cli
pop
icebp
push
and
jnp
jbe
stos
rclb
jo
ds
cmp
aas
loope
dec
lea
shll
and
cmpsb
cmp
lods
cmp
es
push
js
test
mov
push
push
inc
imul
cmpsl
pop
xlat
outsb
push
les
incl
dec
shlb
push
mov
pushf
ds
cmovne
repnz
mov
xor
inc
mov
arpl
inc
ds
inc
jns
call
arpl
fnstsw
and
hlt
pop
or
movsb
ficomps
add
fdivrl
mov
fs
loop
aam
mov
mov
in
dec
adc
ds
mov
ja
and
shld
and
ret
inc
lea
and
sti
test
or
adc
mov
outsl
push
cmc
jmp
cli
pop
or
test
and
ds
mov
test
sub
rcrb
push
out
clc
lock
xchg
xchg
leave
pop
add
js
lret
xchg
push
push
pop
fwait
and
or
xor
sub
jg
xor
xchg
lods
mov
test
ret
std
xchg
push
sub
mov
nop
pusha
loope
aam
fneni(8087
or
sub
push
sub
or
and
les
cmpl
xchg
mov
aaa
bound
out
jecxz
or
xchg
jg
push
pusha
add
aad
mov
andl
jmp
mov
cmp
add
imulb
sub
roll
data16
xlat
es
pop
pop
pop
testl
in
mov
orb
cmpsl
in
xor
cmp
decl
mov
int3
popl
mov
lcall
adc
lock
pushf
test
sbb
insl
enter
or
lea
incb
ret
mov
mov
mov
out
sbb
and
inc
movsb
mov
rorl
sbb
lfs
jecxz
mov
xchg
lds
mov
data16
inc
jmp
imul
sub
xor
jo
nop
or
inc
fistpll
xchg
mov
mov
cli
pop
jmp
inc
adc
push
jb
imul
cltd
or
pop
add
pop
dec
mov
push
fnstsw
into
cmp
lret
les
into
xchg
push
sub
mov
xchg
xor
add
push
shr
mov
or
adc
adc
into
inc
mov
xor
call
daa
mov
push
mov
push
int3
cli
cli
cwtl
imul
push
lods
inc
adc
idivl
sbb
sahf
jmp
cmp
jo
adc
inc
dec
inc
mov
adc
lock
bound
stos
push
xor
sbb
push
dec
pop
test
leave
inc
ret
xchg
movsb
aad
xor
ja
lock
mov
cs
lods
mov
ds
mov
ret
pushf
sbb
ret
mov
bnd
pusha
imul
adc
into
int
mov
lea
lods
stos
ss
push
dec
int
sub
lcall
mov
int
cmp
push
leave
pop
mov
out
pop
lock
nop
sarb
mov
sub
push
mov
scas
cmpl
jg
push
aad
adc
dec
push
repnz
and
rorb
mov
and
sbb
pop
add
sbb
dec
add
xorb
mov
add
push
push
loopne
mov
clc
dec
push
xchg
test
cli
lds
fs
sti
aam
inc
xor
sub
mov
inc
mov
xchg
jl
mov
push
mov
add
xchg
pop
jo
mov
sbb
cmp
sub
push
dec
adc
sub
lret
shlb
push
push
lods
dec
outsb
mov
aad
and
out
jmp
fs
mov
sar
jecxz
mov
or
cmp
sbb
mov
lea
push
movsb
jg
cmp
push
imul
mov
lcall
es
pushf
pop
or
dec
in
inc
add
icebp
mov
test
cmc
lea
ficoms
or
sub
ljmp
pop
int
das
cmp
or
mov
sarb
clc
sahf
xchg
xchg
lods
fbld
jg
mov
pop
cld
std
insl
imul
mov
jge
jmp
pop
cs
mov
addl
stos
mov
testl
mov
pushw
in
imul
sahf
mov
push
gs
insb
sbb
aaa
push
in
jae
cwtl
mov
jecxz
mov
movsb
push
inc
jl
push
arpl
stos
pop
lods
dec
mov
inc
mov
movsb
sbb
daa
subb
std
mov
inc
in
jne
sahf
sbb
inc
mov
cmpsb
cltd
scas
scas
adc
dec
mov
dec
aam
mov
push
clc
pop
mov
push
sub
push
fstpt
repnz
lea
outsl
js
pushw
cwtl
stos
mov
jne
jl
lods
movsl
or
sti
dec
jae
xchg
dec
bound
das
bound
rorb
hlt
outsl
clc
mov
mov
jne
adc
add
push
paddw
jns
and
jl
lret
and
or
xor
mov
mov
shlb
add
nop
addr16
icebp
jg
jmp
push
jle
pusha
fsubrl
dec
xor
out
call
sbb
inc
jp
rorb
adc
lret
ret
jge
mov
dec
inc
xchg
sbb
aaa
mov
add
ret
mov
push
xor
mov
sub
sahf
addb
or
sbb
in
in
mov
mov
and
mov
insb
cld
pop
ret
or
popa
dec
mov
xchg
cmp
mov
lret
pop
dec
pushf
mov
mov
mov
push
lods
push
add
stc
pusha
cmp
inc
ret
scas
outsl
inc
cmp
mov
add
js
push
push
and
out
test
arpl
in
out
daa
lods
inc
out
cmp
mov
mov
movsl
inc
cmp
jae
jmp
inc
mov
add
sbb
or
rolb
out
add
push
icebp
les
sub
loop
mov
add
outsl
loope
xor
loopne
or
sbb
pop
lea
inc
push
dec
lock
ror
push
aam
jle
mov
fmull
push
sarl
or
mov
xchg
ret
bnd
sbb
pop
and
push
mov
bound
pusha
push
fildll
aas
xlat
or
mov
xchg
cmpb
push
aam
mov
imul
int3
adc
ds
loope
loopne
inc
or
je
or
or
add
sub
pop
jg
dec
xchg
in
andl
mov
pop
call
nop
inc
jge
cmp
test
cmpsl
push
negb
cmp
mov
xchg
pop
push
movl
push
and
cmp
xor
or
mov
into
ret
xchg
pop
pop
stos
ja
jnp
jmp
mov
xchg
stos
stos
scas
pop
mov
leave
add
scas
inc
sahf
faddp
pop
movl
adc
or
jg
sbb
ds
pop
add
mov
jne
lods
test
add
pop
lcall
out
hlt
cmc
mov
call
test
loop
xchg
decb
add
je
adc
fwait
pop
cmpsl
rorl
pop
and
insb
nop
cmp
inc
mov
xchg
rorb
scas
mov
xchg
dec
pop
dec
fldln2
jne
xchg
fsubl
adc
outsl
sub
mov
push
or
mov
imul
add
mov
cmp
int3
test
hlt
data16
sub
jmp
adc
adc
in
std
dec
ret
int
sbb
loop
mov
js
inc
sbb
mov
cld
cwtl
lret
leave
ljmp
in
popf
push
jae
fbld
adc
orl
dec
cwtl
pusha
pop
nop
xor
mov
dec
shlb
sar
cltd
clc
mov
sub
sbb
or
repnz
sub
adc
sbb
sbb
or
stos
mov
mov
insb
dec
xlat
pop
sub
loope
incl
pusha
pop
inc
xor
fcoml
or
add
sbb
and
sahf
rorl
test
in
add
jle
xchg
dec
addr16
lahf
aam
jb
mov
lds
add
push
sbb
test
shlb
mov
lock
cld
mov
or
mov
loope
mov
popa
add
imul
add
fs
jbe
xchg
rcrb
notb
inc
cld
push
subb
mov
cmp
pop
rolb
repz
jg
enter
inc
and
adc
adc
xchg
add
xchg
lods
dec
dec
lcall
test
nop
in
iret
fs
pop
enter
je
bound
aad
add
into
ret
cmp
fdivr
pop
fsubs
loop
xchg
xchg
xor
mov
scas
jle
jno
adc
mov
imul
mov
shll
mov
adc
mov
or
inc
push
or
add
pop
daa
loope
push
push
mov
dec
daa
jg
adc
xor
adc
aam
je
mov
cmp
push
sti
repnz
jl
mov
xchg
mov
mov
jno
cmpl
mov
fisubrs
dec
movsb
test
decb
imul
sub
xor
inc
cmc
add
mov
push
ffreep
test
sub
mov
and
jmp
jmp
insl
push
mov
adc
loope
outsb
lret
jg
lock
xchg
loope
pusha
fdivr
or
js
arpl
cli
adc
pop
pop
mov
mov
xchg
sub
orb
sub
ljmp
fcompl
mov
adc
ljmp
stos
push
insb
je
adc
out
fs
jg
arpl
sbb
mov
adc
ds
mov
filds
add
sbb
pushf
adc
inc
dec
push
adc
jecxz
inc
mov
jb
jbe
jns
scas
push
jp
addr16
pop
pop
jo
push
inc
aad
jo
add
dec
ss
fwait
out
and
gs
jp
xor
add
and
scas
fnstcw
mov
gs
mov
pusha
cmp
cmp
adc
test
subb
mov
sarl
jno
dec
mov
cmc
pushf
maxps
or
mov
adc
sbb
das
sub
jne
popa
stos
adc
popa
pop
scas
test
xchg
push
data16
sub
xchg
or
push
orl
pmuludq
pop
mov
xchg
fst
dec
mov
mov
lret
xchg
stos
pop
or
xor
fldenv
int3
out
dec
sbbl
add
cmc
xor
orl
shll
cmp
mov
jbe
insb
xor
clc
add
das
test
pop
outsl
mov
adc
inc
lods
js
rorb
outsb
loope
shr
js
imul
add
add
lahf
leave
xor
pushf
jnp
pop
xorb
and
iret
pushf
add
add
aad
inc
test
push
jge
in
in
std
pop
loopne
mov
icebp
dec
js
mov
sbb
cmpsb
push
mov
or
out
stos
pop
push
sarl
xchg
dec
shlb
std
arpl
in
xchg
mov
fiadds
xor
or
in
inc
sub
out
mov
test
sbb
nop
aam
and
pop
sub
lahf
pusha
or
fmul
js
rorl
call
adc
inc
nop
std
pusha
xlat
sub
jnp
int3
cli
fistps
lcall
out
addl
repnz
fsts
xlat
sbb
xchg
std
sub
or
pop
clc
test
mov
add
cmc
movlhps
pop
std
cmc
bound
adc
out
shrl
pop
iret
jne
js
sbb
xchg
cmpsb
mov
xor
movd
int3
inc
push
xchg
movsb
movsl
add
les
orl
push
les
movsl
and
mov
or
mov
and
xchg
push
push
add
inc
xor
loopne
lea
jp
lea
sub
fdivl
in
mov
or
out
xorl
cwtl
clc
fsubs
cmp
add
jbe
sbb
push
cmp
push
insl
das
xchg
mov
lock
rcll
push
jb
cmpsl
sub
loopne
inc
adc
fidivrl
pop
inc
push
sub
pop
cs
lret
and
addr16
xchg
out
push
mov
cmpl
sub
push
or
lea
fiaddl
cli
iret
mov
mov
mov
adcb
popf
inc
repz
sbb
fiaddl
dec
sbb
fidivrs
movsl
sub
pop
add
sahf
les
xor
inc
inc
fistpll
lds
cmpsl
roll
jmp
mov
sbb
in
add
das
ja
jg
sbb
sbb
daa
mov
pop
push
xchg
dec
push
mov
insb
in
nop
loope
scas
imul
jle
mov
aad
mov
das
mov
cld
push
andl
or
pop
jmp
call
sarb
outsb
inc
setne
sti
push
xchg
ljmp
shrl
add
or
pop
cmpl
cmp
cmp
pop
mov
cs
fcomps
mov
sbb
sbb
lods
add
out
loop
mov
push
arpl
dec
xor
in
and
jno
and
sti
xchg
cmc
outsl
adc
mov
ljmp
adc
lock
sub
cld
cmc
icebp
lods
loopne
add
clc
and
mov
ja
pop
pop
loopne
or
adc
push
xlat
push
push
fs
rcll
pusha
jge
cmp
jp
add
cld
mov
or
inc
fwait
push
sbb
arpl
inc
mov
mov
mov
int
xchg
mov
mov
cmp
xorl
aad
add
fwait
inc
jae
mov
pop
push
lret
jns
fucomip
jmp
pushl
cld
xchg
push
cmpsb
popf
pop
push
add
pop
jne
pop
push
xchg
rclb
shlb
dec
xor
loop
and
push
adc
mov
pusha
lret
mov
jnp
nop
lea
add
in
xlat
jge
pushl
dec
and
jbe
xchg
push
xor
rol
add
pop
loope
pushl
mov
push
cwtl
mov
jbe
lea
test
lcall
fldenv
mov
add
fcomps
dec
not
xor
adc
sbb
or
mov
add
loop
push
jne
adc
mov
ds
jb
mov
repnz
mov
ss
call
inc
je
jecxz
adc
sbb
cmp
fwait
mov
fisubrs
push
and
and
dec
fcomip
xchg
bnd
push
lock
lcall
pop
test
push
xchg
mov
sbb
xchg
jns
int3
push
mov
aas
call
push
mov
cli
dec
add
arpl
ret
mov
sub
fsubrp
mov
push
push
fsubrl
pop
xchg
mov
add
jmp
in
add
sti
fs
icebp
mov
push
in
pop
mov
or
dec
fs
pushf
sbb
cltd
mov
mov
mov
nop
pop
or
xlat
shll
fimull
add
xchg
lods
dec
test
scas
pusha
insb
push
popf
xchg
hlt
mov
bound
scas
sub
dec
loopne
inc
xor
pop
nop
pop
and
add
mov
mov
scas
sbb
cmp
lods
mov
cmpsb
dec
adc
xchg
mov
mov
jmp
cmpsl
dec
fisttpll
or
out
test
push
insb
cmp
xor
cs
and
ror
in
aam
jp
mov
xbegin
cs
adc
mov
dec
inc
or
jle
je
daa
jl
adc
repz
mov
ljmp
stc
jle
dec
icebp
sarb
add
gs
or
cli
dec
in
into
mov
pop
enterw
push
xor
fidivs
loop
int
add
test
xchg
pop
push
enter
adc
xchg
pop
jne
lods
bound
sbb
jae
in
add
add
push
insb
push
xchg
mov
dec
mov
sbb
in
outsl
cmp
add
xchg
push
loop,pt
aas
or
mov
aas
mov
jnp,pn
xchg
jp
add
push
and
mov
mov
xchg
cmp
int
jae
push
cmpl
sbb
mov
subl
sbb
sarb
mov
loopne
insb
ffreep
imul
xchg
or
in
fwait
outsl
dec
jbe
cld
jge
mov
mov
sbb
jg
addr16
mov
ljmp
pop
ss
dec
push
xor
dec
add
xchg
mov
loop
inc
gs
mov
mov
push
sbb
xchg
outsb
jno
jg
imul
or
out
test
xor
loopne
push
cld
rol
sbb
das
scas
add
imul
sti
pushf
and
adc
mov
lgs
js
push
aaa
fs
xchg
out
scas
add
add
imulb
dec
call
repnz
and
push
fadd
mov
xchg
lea
jge
jg
and
lret
test
dec
pop
inc
call
jge
xchg
gs
rolb
rclb
loopne
cwtl
xchg
jg
cli
nop
xlat
xchg
loope
mov
sbbl
jecxz
shll
je
shl
adc
ja
mov
or
out
fstpt
pop
mov
les
push
mov
push
lods
in
xchg
jmp
xchg
fisttps
jp
push
jbe
shrl
scas
and
sbb
inc
mov
cmp
adc
andb
sbb
mov
outsb
push
ret
sbb
push
mov
into
lret
out
xchg
mov
jl
xchg
adc
lock
jl
clc
rolb
nop
add
cmpsb
in
fwait
loop
mov
cmpsb
or
int
push
pop
mov
insb
adc
dec
das
add
adc
adc
cld
lcall
and
add
cmp
adc
mov
jbe
or
loope
and
repnz
shll
ljmp
cld
sub
inc
inc
pop
mov
faddp
mov
ljmp
iret
inc
dec
dec
mov
push
inc
xchg
xor
in
sbb
les
lock
rcll
loop
data16
or
sahf
and
adc
scas
and
idivb
and
pop
or
scas
inc
add
sti
rcr
cs
sub
mov
stos
stos
adc
mov
pop
lds
push
cld
mov
lds
jge
call
xchg
or
jg
dec
call
xchg
mov
jecxz
ret
sbb
pusha
mov
out
inc
loop
sub
pop
out
movsb
inc
call
xlat
jl
pop
cmc
jmp
mov
push
pushf
push
xor
mov
cmp
and
mov
rcrb
xor
je
fldenv
and
jne
dec
mov
pop
add
in
mov
pop
lea
test
loop
ret
inc
mov
lock
les
lret
bound
xchg
fcoml
daa
hlt
mov
sbb
sti
xorl
icebp
dec
sub
push
cld
popa
insl
pop
or
inc
mov
dec
jno
inc
dec
inc
dec
cwtl
and
inc
stc
mov
mov
mov
stos
aam
aaa
sbb
leave
sarb
addl
idivb
push
movsb
icebp
out
hlt
aam
jl
lds
mov
lods
mov
push
mov
in
pop
add
pop
cmp
adc
or
mov
enter
movsl
mov
int3
into
roll
or
popa
adc
clc
or
xchg
cli
and
in
jp
jne
loopne
ret
enter
sub
icebp
jo
xchg
pop
daa
inc
popa
dec
inc
sbb
xor
scas
push
add
sbb
cmpsl
jne
outsb
fcomip
xor
adc
data16
lock
push
push
push
and
cmp
sbb
hlt
pop
cltd
andl
shll
add
adc
mov
rol
xor
xor
dec
cmp
mov
mov
push
push
orl
jmp
mov
mov
aas
sbb
adc
push
into
xchg
lea
movsb
mov
fsubrl
or
loopne
inc
les
jnp
fistpl
in
inc
in
mov
fwait
jo
xorb
cmp
cld
dec
insb
popa
incl
add
xchg
nop
xor
jcxz
push
lock
in
and
xchg
xchg
mov
adc
rol
cmp
mov
mov
pop
dec
out
clc
jmp
xor
in
lfs
lods
sbb
inc
inc
inc
arpl
sbb
pop
imul
adc
popa
leave
fsubl
pop
mov
ja
test
xor
aas
pop
pop
push
pop
je
adc
ficoml
cmp
pushf
cwtl
ret
lcall
push
repnz
xor
mov
iret
lea
mov
jle
test
pop
repz
ret
or
push
mov
pop
mov
call
mov
lods
movb
and
push
mov
add
mov
cltd
orb
sbb
movb
es
inc
sbb
das
add
lods
inc
dec
bound
mov
dec
push
mov
movl
outsb
insb
orl
jecxz
loop
sar
xor
enter
mov
dec
inc
inc
or
rclb
jp
into
outsl
fcoms
mov
mov
add
push
jp
cmc
das
mov
inc
clc
mov
lcall
xchg
out
sahf
and
dec
bound
pusha
mov
js
test
sub
ja
in
mov
sub
loopne
jp
add
iret
inc
sub
test
lock
popf
lcall
sbb
icebp
cmpsb
sbb
aas
inc
inc
mov
sti
fsubl
mov
fdivrp
and
inc
inc
mov
aas
and
daa
cmp
jg
or
call
mov
outsb
je
cmp
leave
dec
or
adc
dec
push
rcrb
pop
inc
mov
push
ds
loopne
mov
adc
xorb
dec
or
add
out
aam
mov
hlt
inc
push
test
inc
pop
adc
dec
into
loope
subb
shll
fwait
or
pop
cwtl
in
nop
jg
ret
je
sub
es
mov
xlat
je
and
rorb
sbb
push
push
mov
sbb
lret
out
mov
mov
pop
cmp
add
xor
adcb
lock
cs
icebp
dec
sbb
rolb
push
add
movsb
ret
test
or
fsub
jecxz
cwtl
lret
and
mov
sub
sahf
fnsave
inc
push
ds
cmp
in
or
xlat
sbb
xchg
adc
js
pop
test
dec
pop
jo
xchg
jb
push
frstor
mov
mov
xchg
rcll
jge
push
and
mov
loope
fwait
and
js
fimuls
icebp
xchg
aad
push
movsl
mov
fstps
push
mov
push
jbe
mov
adc
insb
mov
cmp
xchg
inc
test
pop
and
sub
add
into
loope
pop
push
add
cmpsb
inc
fsubs
ss
cmp
pop
enter
stos
cmp
rolb
inc
cvtpi2ps
lcall
dec
cltd
mov
push
test
out
dec
fisubs
mov
and
ret
mov
add
loope
mov
lret
adc
loopne
incl
cld
fisttpl
dec
test
inc
jmp
mov
and
loopne
outsl
mov
movsb
stos
orl
or
call
pop
adc
test
popf
xchg
fidivrs
inc
inc
stos
outsb
xor
pushf
mov
jmp
fidivl
mov
push
sti
sub
and
test
add
cmp
or
dec
clc
out
sbb
add
int3
xorl
sarl
pop
add
jle
mov
mov
and
aas
insl
mov
dec
mov
dec
adc
jecxz
sub
je
push
inc
jecxz
sub
xchg
jp
les
mov
bound
outsb
addl
cmp
push
jle
addr16
leave
push
push
dec
pop
imul
or
mov
mov
jp
loop
pop
sarl
mov
add
inc
popf
add
sahf
mov
pop
lahf
or
and
in
sbb
dec
cmp
arpl
cmp
ficoml
test
ret
adc
and
sbb
mov
jo
orb
push
in
mov
pusha
subl
xor
lods
xor
ds
dec
or
sarl
mov
mov
cmp
xchg
lds
mov
xlat
cmp
jmp
imul
sar
pushf
lret
ja
fcoml
sub
stc
add
decb
mov
js
jnp
adc
int3
cltd
and
leave
aam
mov
push
mov
fwait
xor
xchg
jmp
repz
inc
movsl
cmpb
sub
lahf
js
add
stos
jg
mov
lea
push
xor
push
lcall
repnz
decl
stos
add
jae
sub
inc
enter
lock
clc
adc
shll
rcrb
sub
movsb
ret
pop
cmp
sbb
loop
sub
ljmp
cmc
inc
lock
inc
sub
or
ja
jno
mov
xchg
hlt
mov
sub
movsb
test
ja
jp
adc
dec
push
xchg
mov
cld
scas
sub
cmp
sbb
fisttpl
and
sbb
xchg
xor
aas
fcom
fs
xchg
push
out
add
addb
mov
mov
mov
sbb
mov
les
test
mov
addl
adc
in
fdivrl
hlt
cmpsb
push
sbb
fcmovne
push
in
push
xor
adc
push
loope
js
mov
jge
shl
iret
dec
adc
ljmp
ja
inc
or
ss
jbe
aam
cld
sub
sbb
loope
adc
scas
mov
pop
negb
adc
and
and
dec
jmp
pop
in
add
mov
in
add
push
mov
jo
and
test
jecxz
imul
and
jle
insl
subb
aaa
les
loope
scas
sbb
lret
pop
int
push
daa
rolb
mov
cwtl
ljmp
and
xchg
sbb
fcomps
mov
inc
pop
bound
rclb
pop
rcrl
test
mov
incl
in
stos
xchg
int
dec
loope
sbb
popf
sub
inc
arpl
mov
jmp
aam
sbb
sub
subl
jmp
dec
push
add
mov
repz
xchg
pop
in
fs
unpckhps
addb
loopne
loope
mov
push
and
jl
call
out
lods
lds
mov
mov
repnz
mov
pushl
add
shrb
cmp
rolb
fimuls
mulb
negb
mov
pop
or
xchg
mov
data16
jmp
js
adc
repnz
jmp
mov
decl
ljmp
push
sbb
pop
cmc
pop
nop
sbb
ljmp
lock
fwait
cmpsb
inc
or
movsb
jns
inc
adc
mov
adc
outsb
jecxz
cmc
pop
repnz
mov
cmp
loop
inc
mov
sub
adcl
inc
nop
inc
or
sub
push
jp
test
cmpsb
inc
ficomps
xor
or
add
ja
int3
mov
in
pop
adc
loopne
lcall
adc
jl
or
stos
shl
mov
int
mov
xchg
aas
pop
sbb
je
in
test
jge
pop
insb
mov
pusha
mov
adc
loope
jno
mov
into
cmp
adc
xchg
add
xor
in
arpl
push
imul
loopne
js
insl
shrb
push
add
std
lds
jnp
and
adc
and
pop
mov
or
xchg
fwait
mov
cld
mov
mov
popf
jne
fbstp
mov
sbb
movsl
add
les
icebp
rolb
xor
sbb
lock
stos
dec
xor
jae
xor
mov
xorb
add
mov
in
xchg
sub
mov
xor
push
jmp
push
cs
shll
fsubrs
jecxz
jp
sub
sbb
xor
lea
arpl
adc
cmp
cld
add
loop
out
out
lds
mov
mov
pop
cmc
dec
push
mov
fadds
sub
adc
xor
cmpsl
and
mov
lock
cmp
mov
dec
mov
les
add
popa
push
mov
inc
aas
and
icebp
mov
pop
cmpb
sbbl
mov
jle
or
mov
sub
jl
or
out
cmpsl
icebp
out
enter
pop
mov
les
nop
clc
push
mov
aad
dec
and
jmp
xchg
subb
sub
je
negb
inc
das
jo
add
or
out
sbb
dec
ficoml
hlt
lods
jbe
xor
add
lret
adc
loop
pop
add
and
movsl
or
fs
mov
pop
fldl
std
dec
adc
ret
insb
sbb
push
add
dec
cli
dec
test
pop
jbe
xchg
lcall
loopne
inc
mov
fistpll
lods
push
inc
mov
mov
lock
xchg
mov
sub
fidivs
mov
add
mov
adc
sti
mov
dec
pop
cmp
xchg
push
inc
bound
int
inc
jecxz
jp
jbe
mov
int3
or
lcall
mov
stos
mov
inc
loopne
rorb
inc
pop
cmp
stos
fadds
sbb
popa
sbb
mov
mov
pop
insl
les
enter
or
adc
xor
add
in
mov
pop
push
mov
cmp
push
test
and
push
aaa
adc
loope
daa
sbb
nop
pop
jnp
sub
movsl
add
push
leave
mov
mov
int
repz
mov
mov
repnz
xor
or
arpl
sub
ror
fistps
and
sub
mov
movsb
sbb
jl
pushf
push
adc
cmp
pop
loop
shrb
pop
lret
fdivs
xchg
jbe
call
inc
jle
mov
jle
inc
mov
and
push
lods
in
pusha
sbb
stos
add
jo
push
mov
pop
in
xchg
sarb
clc
stos
pop
sbb
daa
insl
xor
outsl
rorb
fisubrl
lods
pop
pusha
jbe
or
imulb
push
push
add
ret
jne
pop
gs
cs
popa
push
dec
push
imul
or
outsl
sub
lock
and
push
aas
or
mov
outsl
insl
lret
jecxz
into
cmc
inc
test
push
fsubrl
or
and
lea
jge
xchg
and
hlt
addb
sub
or
mov
mov
loopne
sbb
pop
les
repz
pop
mov
aas
ss
cmc
jge
push
jnp
adc
rcrl
inc
out
fisubrl
mov
loop
sbb
sbb
push
dec
div
cmp
mov
ja
jnp
aad
add
add
or
es
push
mov
push
pop
sbb
arpl
add
sub
scas
cmp
jecxz
xor
sub
test
jecxz
adc
in
or
cmp
fcoml
out
ror
je
jg
lea
mov
loop
ljmp
es
in
mov
mov
cwtl
adc
loope
out
add
add
clc
mov
ja
cli
push
jne
test
xor
es
sub
movsb
sub
add
jle
pop
aas
incb
out
and
mov
call
dec
jg
stc
bound
and
in
cmc
jl
jle
jge
push
mov
inc
ja
sahf
gs
and
pop
les
ja
les
fldenv
mov
xor
nop
dec
adc
scas
test
cmp
pop
xor
mov
sub
dec
sbb
ja
rol
test
dec
cmp
pop
xchg
movsb
pop
loopne
pop
loop
loopne
call
sub
xchg
ret
daa
mov
adc
mov
jno
adc
sub
lcall
inc
jmp
dec
in
inc
dec
rcrl
dec
inc
mov
in
adc
sbb
push
pop
xchg
mov
add
rol
mov
fwait
add
push
mov
imul
push
inc
bound
push
sub
adc
or
popa
mov
cmp
jl
push
or
xchg
add
loopne
mov
mov
add
add
mov
je
sbb
daa
jecxz
xor
dec
dec
out
xor
add
addr16
and
mov
mov
add
lea
scas
es
cmp
loop
cmp
scas
add
mov
insl
cmp
ljmp
push
dec
andb
outsl
fs
ret
sub
rolb
lods
mov
inc
lret
cmpsl
fwait
lcall
cwtl
sbb
insl
cli
add
std
adc
loop
outsl
ljmp
mov
decl
sarb
pop
cmp
out
jmp
inc
and
loope
hlt
xchg
xor
lock
addl
out
popa
aad
inc
fwait
pop
in
testl
sbb
mov
insl
loope
fs
sahf
in
aaa
or
icebp
add
cmpsl
pusha
jl
or
xchg
jo
dec
lods
sti
add
jae
decl
in
stc
and
imul
cmp
cmp
jmp
out
xor
shll
mov
daa
out
dec
sbb
jnp
dec
pop
decl
shlb
inc
or
outsl
mov
cmp
add
adc
sbb
ja
push
scas
xchg
jle
arpl
xchg
mov
stos
adc
inc
pop
fwait
repz
test
push
add
je,pt
fmuls
dec
xchg
push
and
sbb
mov
xor
cmp
mov
xchg
outsb
add
adc
test
jae
imul
mov
jp
sbb
jae
test
sub
push
cmp
xorb
jl
js
insl
addb
outsb
xor
jns
mov
lcall
dec
mov
adc
ss
enter
clc
cld
pop
aas
xchg
outsl
inc
pop
bound
mov
adc
sahf
lcall
rorl
mov
mov
arpl
push
adc
outsl
fisubrs
ds
fmul
bound
push
adc
xchg
inc
adc
jge
push
xchg
addr16
cmp
pop
xchg
xor
in
mov
hlt
bound
push
into
clc
mov
lods
cltd
lock
jecxz
subb
dec
push
test
add
pop
scas
and
test
insl
mov
inc
adc
out
popa
jge
fistpll
sbbb
mov
or
loopne
out
mov
std
xchg
push
ret
xorb
xchg
call
push
jle
fistpll
adc
js
mov
call
popf
loop
pop
loop
mov
sub
stos
add
fldpi
pusha
add
or
enter
icebp
xor
pop
push
lahf
mov
int
push
stc
cmp
mov
or
out
mov
xor
decb
rorb
cmp
jle
mov
mov
push
mov
sub
jmp
mov
xor
and
andb
pop
shll
ljmp
je
add
stc
adc
or
push
mov
sbb
fisubs
xchg
cmp
test
clc
fnstsw
add
or
adc
imul
hlt
daa
cmp
inc
mov
cmp
cmp
ret
cmp
loope
filds
jle
ljmp
mov
std
popf
sbb
gs
shrb
mov
insb
cmp
jl
mov
popa
adc
jg
ljmp
inc
xor
mov
aad
sbb
data16
test
std
fsts
loopne
clc
jmp
sbb
mov
in
pop
cmp
xchg
dec
xor
xchg
imul
dec
sub
out
int3
out
imul
jne
dec
pop
jns
mov
mov
mov
ret
xchg
jbe
popa
aad
xlat
clc
mov
mov
aaa
mov
sbb
and
ret
std
shld
pop
pop
jne
rcll
inc
and
pop
addr16
cmp
cmp
idivl
loopne
sbb
testb
mov
xlat
pop
call
push
popf
movups
rorb
xchg
cmp
dec
pop
rorl
aam
loop
jmp
xchg
sbb
dec
or
pop
push
enter
scas
jp
cwtl
in
cltd
cmp
mov
pushf
pushl
inc
dec
jns
mov
inc
jp
inc
scas
subb
sbbb
sbb
mov
jle
std
mov
mov
clc
sub
sbb
scas
sub
fwait
aaa
dec
cs
dec
test
shll
or
xchg
and
cmp
push
adc
enter
xor
cmp
rcl
insl
cmp
pop
addb
mov
add
sbbl
sbb
mov
lods
mov
fnstenv
sub
shr
add
fs
xor
mov
push
add
fs
ja
mov
inc
cmp
pop
lock
xchg
push
pop
sar
xor
or
add
sbb
fistps
adc
popa
mov
sbb
test
lret
sbb
jge
cmp
mov
jnp
scas
imul
adc
mov
inc
add
push
test
cmp
add
mov
stos
sbb
sub
ret
fbld
sar
pop
cmp
fdivr
cli
decl
mul
add
inc
sbb
or
popa
pop
fldl2t
jmp
rcrb
mov
clc
xor
or
scas
cmc
jle
cs
pop
lahf
jnp
xor
popa
movsb
stos
movsl
daa
xchg
aaa
lahf
les
test
mov
mov
mov
inc
lods
pushf
shrb
push
movsb
cmpsl
mov
ljmp
pop
push
popa
loopne
int3
xor
xchg
cltd
ljmp
mov
out
mulb
insl
rcrl
arpl
jmp
cmp
addr16
adc
or
ret
les
xchg
subb
xchg
sahf
mov
inc
push
or
sar
jmp
in
insb
and
jnp
insb
jge
stc
sbb
inc
push
adc
mov
inc
pop
xchg
mov
push
scas
es
add
adc
int3
xorb
test
je
adc
pop
push
scas
ret
dec
cltd
insl
in
js
mov
cmp
bound
xor
mov
jp
push
int
mov
xor
call
filds
adc
and
sbb
aad
clc
pop
add
aad
les
sbb
js
mov
lock
daa
std
dec
jno
cmp
lea
mov
aam
pop
pop
pop
xor
mov
out
mov
mov
add
mov
jmp
pop
add
shlb
sbbb
jbe
addl
sub
data16
lds
stos
dec
jno
fmul
jle
push
xor
inc
xchg
push
ja
and
lds
sbb
ds
jo
xchg
call
dec
adc
bound
add
insl
cmp
mov
nopl
jae
push
sbb
je
xchg
fsub
pop
dec
xchg
mov
out
or
rcrl
push
inc
jb
mov
imul
push
mov
jl
push
jmp
inc
je
mov
movsl
pop
out
in
ljmp
xor
add
cmc
mov
js
pushl
ret
sbb
sahf
mov
test
rcrb
icebp
xlat
add
pushf
mov
inc
inc
adc
xchg
fistpll
cld
lahf
cmpb
or
jo
insb
nop
cmp
cld
mov
cltd
pop
jo
pop
jnp
adc
cwtl
or
imul
or
push
and
cli
and
adc
fidivrl
scas
inc
add
ret
gs
xchg
lds
loop
sub
cltd
scas
mov
cmp
xor
daa
int3
cli
mov
jnp
jo
call
stos
addr16
or
rorl
push
lds
shrl
push
mov
loopne
stc
sub
push
std
out
xor
xor
pop
mov
sahf
jge
mov
xchg
das
push
ljmp
jecxz
enter
fwait
xchg
jl
or
aaa
pop
enter
inc
cmpsl
call
aas
and
and
inc
mov
or
xlat
mov
and
clc
sub
adcl
inc
test
lds
add
cmp
and
cmpsl
sahf
mov
scas
jno
jo
push
push
push
pop
fists
pop
sbb
adc
andl
fcmovnb
cli
out
shr
add
adc
out
cs
std
cmp
test
bound
test
sub
xchg
mov
jb
out
inc
xchg
into
movsb
cmpsb
cmpsl
leave
fstps
out
push
xchg
std
or
mov
pop
and
ljmp
cmpsb
mov
push
data16
jnp
icebp
aas
lock
fistpl
int3
sarb
dec
jle
gs
testb
sub
fcoms
push
pop
test
lock
ret
loop
mov
or
mov
adc
cmp
icebp
fsub
clc
cmpl
or
clc
cwtl
incl
jb
sbb
inc
addl
add
clc
adc
jmp
sub
lahf
cwtl
push
mov
cmp
inc
cwtl
fs
adc
mov
mov
sub
aam
std
add
dec
ds
rorl
fisubs
loope
jno
shl
lds
pusha
sub
push
addr16
jo
shrb
aad
mov
or
jp
call
mov
mov
push
or
xchg
dec
addr16
bound
sub
mov
push
xchg
mov
js
test
clc
lods
rorb
cs
pop
sahf
pcmpgtd
cld
leave
xchg
sbb
pop
addl
stos
jl
lret
cwtl
pop
push
cli
ret
and
xor
cmpsb
dec
call
cmp
push
xchg
add
mov
and
xorb
into
xchg
mov
and
mov
je
or
jo
aaa
fstps
mov
lret
out
sarb
loopne
divl
loopne
xchg
loop,pn
or
rorl
mov
sub
sub
inc
mov
and
mov
xchg
adc
sbb
aam
or
jbe
out
scas
mov
adc
das
jge
or
movsb
mov
cmpsb
mov
adc
add
dec
sub
and
push
gs
inc
psubusw
mov
cmp
pop
sbb
shll
dec
jp
arpl
int3
insl
cmp
jge
push
pop
repnz
mov
lea
les
mov
jle
push
fists
xlat
jp
sahf
add
pop
pop
inc
test
push
ljmp
or
cld
scas
mov
cmp
in
lahf
rcrl
pop
pop
andl
dec
or
mov
test
incb
pop
adc
neg
daa
dec
pop
lret
popa
and
fwait
pop
mov
cmpsl
dec
or
add
test
adc
cs
subl
push
pop
fs
and
inc
fdivl
fdiv
mov
pusha
scas
faddl
push
sbb
or
sbb
add
aaa
cmp
pop
ror
int
lods
fcoms
aad
lods
and
inc
ljmp
loop
xchg
or
loop
rcll
jle
mov
lods
pop
mov
ret
inc
sbb
repz
dec
adc
outsb
jl
push
pusha
test
pop
inc
in
scas
shlb
out
jg
and
outsb
in
push
cli
loopne
sub
add
cld
test
push
or
test
adc
xchg
xor
pop
add
std
cs
dec
add
rorl
in
pop
inc
cltd
sbb
es
jno
pop
adc
or
aad
sahf
lods
adc
incl
mov
jae
es
inc
outsl
mov
xor
ret
int
adc
mov
pop
pop
into
xlat
jmp
fnstcw
popa
std
mov
push
add
lods
repz
mov
arpl
cld
jae
stos
aas
mov
shrl
mov
jb
push
jle
popa
ljmp
mov
inc
lock
sub
cs
mov
and
xor
sub
js
or
pop
rclb
add
ljmp
jecxz
add
outsb
push
or
mov
or
sahf
xchg
lret
int3
jp
nop
ljmp
inc
imul
jbe
pusha
push
iret
cli
and
xor
in
popf
loopne
add
jg
outsl
pop
ss
or
aas
popf
pop
popa
jo
mov
mov
repz
or
mov
int
mov
pop
mov
lods
fwait
xchg
jno
addb
ficoml
and
je
jmp
lds
out
adc
add
cmp
sbb
push
add
sti
das
adc
cmp
add
stos
inc
decl
inc
mov
xchg
arpl
rolb
popf
add
gs
mov
mov
in
aas
ret
jp
or
push
pop
fbstp
cmpsb
push
push
sub
jle
in
push
insb
and
push
mov
aaa
aam
push
inc
test
pushf
sub
xchg
sbb
aam
cli
sbb
call
mov
or
mov
aad
enter
add
xorl
push
push
add
fisubrs
mov
aam
xor
cli
jl
mov
adc
mov
dec
add
push
in
ret
loop
sahf
dec
mov
fnstenv
mov
xor
loop
movsl
jne
pop
inc
inc
mov
ret
ljmp
fmull
cwtl
rolb
loope
ds
xor
mov
mov
pusha
xchg
shrb
stc
xchg
test
xorb
roll
int
loop
mov
mov
push
jp
inc
faddl
sbb
cmp
pop
or
push
idiv
mov
mov
outsl
rcr
mov
or
lcall
decl
test
sbb
push
pop
xor
xchg
scas
adcl
mov
mov
sub
pop
push
bound
ds
mov
xchg
push
pop
in
out
pop
lods
sub
inc
mov
push
and
aam
and
sbb
clc
dec
mov
push
es
roll
mov
loopne
decl
jp
in
sbb
pop
jecxz
sbb
pop
xchg
push
adc
add
sbb
std
add
mov
mov
mov
cmp
les
mov
cli
pop
inc
xor
xchg
cwtl
hlt
add
mov
add
ja
or
adc
les
jl
mov
loope
sub
xor
les
aad
rorb
cmp
sbbb
es
xchg
out
stos
shlb
mov
ljmp
xchg
es
lods
test
jmp
sub
fistpl
mov
adc
fs
sbb
into
ljmp
popf
stos
cld
xchg
adc
cmpsl
outsl
push
repnz
imul
cmp
mov
and
repz
push
sbb
add
fisttpll
sbb
pop
xchg
std
lea
xor
filds
or
repnz
mov
push
incb
rclb
pop
popa
cmp
xchg
and
hlt
inc
sarl
jp
lcall
imul
dec
cld
jnp,pn
jecxz
pop
jne
nop
bound
xchg
jp
cwtd
aaa
std
popa
sub
mov
data16
inc
add
mov
jp
jl
fldenv
addr16
test
xchg
xchg
jae
out
pop
shr
or
push
movsb
aas
push
jp
fsubr
lods
add
mov
push
ret
rcl
mulb
ss
dec
mov
mov
gs
js
mov
inc
sbb
clc
rcl
cmpb
mov
jbe
push
pop
nop
imul
pusha
pop
lea
pop
mov
outsb
and
fnstenv
adc
test
jl
sbb
int3
mov
out
jnp
sub
push
and
rorl
sbb
xlat
int3
push
push
add
pop
arpl
inc
fisttps
sbbl
mov
mov
rcrb
ds
push
mov
sbb
push
mov
sbb
sbb
jmp
adc
dec
cltd
mov
call
and
enter
lock
fs
cwtl
pop
or
rcr
inc
add
jg
jb
mov
sub
daa
cmc
and
prefetch
or
mov
mov
aad
xchg
mov
mov
nop
out
negl
pop
fldenv
leave
clc
in
inc
fiaddl
cmp
test
aas
pushf
pop
lds
idiv
pop
inc
adc
xchg
xlat
jbe
or
mov
notb
mov
lods
mov
adc
dec
push
in
pop
sub
xor
fiaddl
in
sub
shrl
jb
ret
push
push
aaa
mov
mov
cmp
sbb
push
and
adc
jo
repz
sbb
fistl
fists
bound
push
enter
pop
sub
jb
pop
xchg
stos
pop
call
or
test
mov
test
ds
mov
adc
mov
xchg
dec
test
loopne
in
shl
mov
add
lock
stos
outsl
adc
pop
arpl
dec
insb
clc
or
or
or
rorb
push
sahf
mov
mov
addr16
jle
xchg
js
xorl
loop
sbb
ja
add
sbb
inc
popa
push
lds
loopne
jmp
add
rol
ret
in
fdivl
aad
mov
shrb
addr16
and
add
jl
fs
ljmp
lods
testb
add
mov
and
or
add
js
cmpsb
sub
and
ss
jp
inc
scas
sub
scas
or
sbb
jge
lods
nop
cwtl
test
xorl
mov
cmp
mov
xor
dec
adc
mov
push
inc
cmp
movswl
lock
push
sub
jb
mov
std
add
lods
sub
mov
clc
adc
pop
repnz
inc
pop
fnsetpm(287
enter
mov
push
adc
sbb
mov
outsb
mov
cwtl
jo
ljmp
inc
sub
or
adcl
xor
dec
push
adc
cli
gs
scas
sbb
lret
roll
pop
in
adc
je
add
jecxz
out
xchg
push
inc
sti
fisttps
movsb
and
out
cwtl
and
mov
adc
into
jae
xor
arpl
fsubs
clc
sbb
jnp
adc
scas
sbb
stc
popa
mov
jmp
ret
pusha
arpl
sub
and
mov
mov
mov
movsb
or
pop
push
mov
into
fdivl
hlt
scas
je
roll
int
test
into
adc
mov
inc
push
outsb
cs
rcrb
push
ds
dec
ret
popa
xor
fmuls
aad
insb
shlb
cmp
jmp
cmpsl
adc
out
add
adc
add
bound
adc
push
mov
cmp
data16
movsl
std
pop
push
daa
rcrb
hlt
fidivrl
inc
jp
adc
les
add
enter
jb
inc
inc
pop
inc
push
icebp
or
xchg
loop
push
mov
or
filds
mov
push
cmp
and
push
ja
pop
add
mov
jg
shlb
call
dec
pop
or
lcall
pop
lock
sbb
jo
push
icebp
repz
xchg
push
scas
outsl
or
jae
mov
sti
jg
fstl
add
sbb
mov
call
cs
lods
xor
jecxz
or
bound
arpl
scas
adc
mov
aaa
lock
das
sub
movsl
pop
inc
test
jne
daa
add
loopne
movsl
mov
pop
cs
jmp
mov
adc
iret
shlb
mov
cld
and
add
mov
enter
xor
movsb
lds
or
jecxz
int3
cli
push
out
or
sbb
push
scas
rolb
fwait
push
pop
dec
adc
clc
inc
adc
clc
fucomip
mov
xor
xchg
iret
xchg
insw
call
jg
or
xchg
ss
cmp
and
cld
push
inc
sbb
sahf
pop
cld
les
add
adc
cmp
sbb
out
ret
mov
shlb
fiadds
cs
in
sub
xchg
jecxz
jmp
cmp
pusha
lock
xchg
lret
dec
popa
aad
ja
lret
mov
dec
jp
cmp
fimull
sbb
insb
scas
inc
inc
je
pop
inc
nop
inc
lea
jecxz
mov
inc
imul
sub
mov
add
xchg
je
dec
in
les
pop
enter
xchg
call
add
lahf
jmp
inc
xor
bound
add
stos
push
incb
hlt
sub
or
stos
jae
cmc
dec
or
sbb
push
aas
push
packsswb
fnstcw
mov
lock
add
fcomps
adc
mov
pop
mov
inc
sbb
popa
xor
enter
cmpsb
mov
or
cmpb
xor
add
add
movsb
pop
mov
add
shlb
in
cmp
dec
imul
pop
pop
pop
sub
lock
inc
fsubr
xor
dec
dec
mov
mov
bound
es
and
ljmp
mov
js
sarl
ljmp
jae
les
push
aam
jae
mov
mov
notb
mov
mov
pop
out
cli
sahf
enter
fs
jns
or
xor
pusha
or
xchg
pop
ret
push
hlt
or
sbb
inc
movsl
xchg
jg
cmp
dec
aad
sbbb
jecxz
shrb
inc
push
lret
xorl
and
fnsave
in
push
fs
mov
push
or
push
inc
mov
pop
push
jmp
jecxz
mov
mov
ret
adc
call
rcrl
adc
fistpl
add
sub
xchg
push
outsl
cmp
inc
jae
cwtl
and
mov
jg
or
and
mull
mov
inc
mov
sbb
es
add
cltd
xor
mov
pop
and
jle
jne
fnstenv
ja
ret
jbe
rcll
adc
adc
fwait
bound
nop
fdivrl
sti
pusha
inc
fcoml
gs
lcall
sub
lods
cmc
fsubrs
inc
lea
push
inc
lahf
loop
dec
jns
mov
aad
dec
in
insb
cmp
shr
mov
and
mov
cmpsl
insb
mov
adcl
nop
mov
add
add
das
xor
sbb
int3
ret
lcall
test
xchg
fcoml
mov
cli
outsl
mov
mov
jl
loopne
shlb
jno
xchg
or
ja
cmp
imul
mov
fs
sub
imulb
mov
xor
orl
in
dec
pushaw
fs
les
inc
mov
lods
popa
adc
into
mov
fdivrl
mov
es
adc
out
test
pop
std
cmc
mov
pop
jo
mov
ljmp
inc
cmp
js
cmp
add
adc
rcr
fdivl
jmp
jb
add
cmp
xor
pop
pop
punpckhdq
cmp
int
lds
addr16
test
in
xchg
repnz
inc
mov
dec
in
std
dec
adc
push
push
mov
adcb
aam
call
stc
movsb
lock
push
add
pushf
movsl
pop
lea
ja
jae
test
sbb
add
push
clc
jp
jae
popf
repnz
xlat
inc
hlt
dec
rcrl
add
mov
fistl
mov
fwait
icebp
pop
mov
jecxz
daa
loop
pop
adc
lea
mul
xchg
xor
sub
testl
mov
out
mov
dec
cld
mov
mov
insl
andps
add
pop
lock
jns
mov
mov
add
loope
cli
stos
push
cmp
mov
addr16
inc
std
pushl
sbb
xor
push
icebp
inc
inc
dec
dec
inc
push
pop
pop
lods
push
pop
pop
rcrb
mov
push
clc
lods
jg
fs
mov
pop
je
outsb
jns
jg
test
adc
vpextrb
dec
sahf
adc
pushf
out
push
adc
enter
lcall
inc
inc
into
lahf
jno
in
pop
aam
shll
std
fistpll
dec
in
inc
andl
push
addb
lods
rcr
adc
jb
fcmovnbe
jnp
fs
or
cmp
xchg
or
adc
jecxz
fcomp
add
adc
or
or
jmp
push
mov
stc
inc
xchg
xchg
ss
mov
iret
mov
pusha
insb
pop
lock
xchg
jecxz
push
call
call
fsubrl
cmp
push
test
sub
js
xor
mov
xor
dec
push
sarb
pushf
into
sub
inc
sti
or
fucomip
and
nop
pop
dec
pop
aaa
fwait
xchg
dec
cmp
push
fs
dec
ret
sub
mov
xor
fmuls
ljmp
dec
pop
or
mov
scas
jne
rolb
mov
add
add
inc
mov
push
ljmp
mov
or
scas
jl
mov
ret
addr16
lock
and
shrl
lods
ljmp
pop
or
aad
cld
pop
scas
xor
mov
adc
das
and
or
movsb
subl
jp
xchg
das
or
push
push
je
cmp
or
sub
inc
cmp
adc
nop
mov
stos
test
mov
dec
xlat
rorb
adc
les
xor
dec
ljmp
inc
jg
or
sahf
xchg
mov
mov
pop
adc
rolb
mov
xor
pop
lock
push
movsb
mov
lea
jo
aad
int3
add
mov
mov
loope
lret
imul
addl
pop
call
push
cli
movsb
pop
add
adc
sub
outsb
dec
gs
outsb
and
cmp
jo
or
daa
pop
pmulhw
push
out
sbb
nop
jo
incl
iret
test
lods
sbb
sbb
leave
shll
push
pop
cmp
mov
dec
pop
or
pop
out
clc
jl
cmp
pop
xchg
scas
add
add
mov
es
fsubrl
xor
test
dec
popf
decb
jne
push
leave
clc
aaa
hlt
pop
xchg
rolb
sub
cmpsb
xchg
adc
adc
loop
loope
cld
sbb
push
push
insl
lock
push
jne
sub
rcr
and
lds
and
aam
mov
xor
xchg
push
jle
inc
mov
cmc
xor
js
sbb
pop
scas
and
push
sbb
cmp
icebp
xchg
add
and
je
mov
xchg
out
xor
shrb
adc
adc
xor
idivl
add
push
je
sub
in
mov
or
push
clc
dec
or
stos
sub
iret
cltd
mov
pop
adc
push
mov
inc
ja
pop
or
das
ja
pop
jp
jp
decl
cmp
scas
call
sub
outsl
dec
rorb
mov
lock
inc
dec
cmp
xor
sbb
add
decl
lock
or
cld
clc
sbb
outsl
loope
and
mov
add
lock
push
in
addr16
dec
and
mov
jecxz
sbb
mov
adc
insl
inc
dec
test
xchg
cltd
pusha
cs
lahf
ljmp
arpl
dec
clc
add
shlb
sbb
pop
add
pop
mov
sbb
xlat
xor
sbb
jmp
aaa
loop
daa
jle
sbb
bts
lock
iret
lock
mov
fnsave
hlt
mov
cmp
aam
fidivrs
add
mov
test
sbb
xor
shr
push
les
add
or
mov
jle
lods
mov
mov
mov
popl
xor
popf
subl
push
in
ja
loop
dec
outsb
sub
and
es
js
test
and
push
movsl
add
xor
jbe
push
mov
lock
dec
mov
int
test
inc
pop
stos
fsubrs
aas
aas
shrb
add
and
fildl
fmull
xor
fsubl
fsubrs
inc
sbb
push
mov
fstpt
hlt
repnz
lcall
add
movsb
pop
adcb
mov
add
jno
xor
fdivrs
pop
cs
stos
ds
sbbl
adc
and
lea
imul
jo
cmc
fisubs
add
lcall
clc
dec
fcomps
jbe
fidivrs
xor
sahf
push
and
and
mov
cmc
out
sbb
stos
out
inc
call
jb
sbb
mov
xchg
xchg
and
push
sbb
cmc
pop
fdivrs
aas
sbb
hlt
imulb
pop
fs
fxch
or
andb
mov
scas
adc
jnp
enter
dec
cmpsl
mov
add
stc
xchg
push
jno
mov
add
xchg
leave
mov
sub
js
bound
mov
xor
je
jmp
call
dec
xchg
pushf
mov
mov
shll
fisubl
mov
and
dec
pop
add
hlt
xchg
popf
cmp
pop
inc
jl
daa
in
dec
and
out
or
cmpsb
divb
hlt
jg
std
cmp
call
inc
subl
cmp
xor
cmpb
pop
loop
cltd
pop
outsl
mov
adc
xchg
arpl
jno
dec
repnz
or
and
add
insb
ja
add
sub
int3
cmp
push
mov
or
rclb
cmp
shll
xchg
and
jns
jmp
jo
mov
jo
icebp
add
pop
ficoml
mov
test
pop
loopne
mov
mov
dec
add
jmp
sbb
push
out
aas
mov
xchg
call
fs
shlb
push
xor
push
jl
adc
xchg
push
jbe
mov
sub
in
sub
test
mov
fisttps
sahf
scas
mov
ret
pop
push
mov
pop
push
dec
aas
push
push
mov
pusha
bound
imul
jg
mov
sarl
sub
cmpsb
cmp
pop
sub
push
and
push
lds
sub
xor
cmp
mov
nop
repnz
sti
inc
insb
test
testb
jg
sbb
xchg
sbb
pop
fwait
out
and
cmc
ret
sahf
and
xchg
imul
or
ret
push
push
mov
aam
jno
push
dec
or
lcall
mov
sti
sub
push
cmp
or
bound
arpl
test
outsb
adc
cmp
cmpsl
adc
aas
and
sbb
sub
adc
xchg
int
xchg
decl
js
lea
stc
mov
and
insl
xchg
add
fcomps
jecxz
xchg
mov
sub
lods
fsts
pop
ss
test
into
dec
push
shl
cltd
push
pop
cmp
add
inc
pop
dec
sbb
adc
leave
jae
call
cltd
fsts
imul
inc
cmp
aaa
mov
cmp
dec
repz
subb
cwtl
and
ja
or
sbb
xchg
xchg
pop
mov
adc
cmp
pop
xor
adcl
movsl
mov
outsb
leave
xor
jns
pop
test
xchg
inc
loop
arpl
insl
in
gs
inc
or
jle
inc
xchg
or
lock
xor
ljmp
mov
scas
outsb
xor
inc
mov
ret
xor
push
or
movsl
shrb
dec
mov
mov
shrb
or
push
dec
and
mov
dec
aad
mov
adc
sbb
cmp
das
leave
dec
sbb
movsb
push
inc
shll
xor
jle
mov
mov
filds
inc
inc
cli
insb
mov
shlb
push
pushf
push
lea
fadds
cs
out
pop
mov
cmp
fdivs
inc
push
and
in
jbe
mov
iret
add
ljmp
mov
sub
adc
push
mov
xlat
or
xor
xor
push
jb
stc
cmpsb
imul
pop
push
fidivrs
or
and
mov
sub
enter
add
ljmp
popa
sbb
adc
jmp
fmull
je
shrd
and
inc
insb
mov
out
mov
insb
sub
sub
mov
sbb
lret
les
add
das
shlb
int3
lds
test
xchg
jo,pn
icebp
imul
cmpsb
cmp
andl
jnp
xlat
cmp
sub
jmp
sbb
xchg
mov
xorb
ss
lahf
loop,pt
cwtl
push
aam
and
xchg
sub
adc
push
and
fbld
cmp
mov
pop
cltd
cmpl
jae
pop
pop
loope
inc
mov
xchg
call
jecxz
or
incl
ljmp
and
shlb
mov
xchg
ret
loope
aas
adc
leave
dec
inc
dec
adc
jecxz
and
rclb
mov
push
aam
jnp
push
lods
scas
push
popa
pop
cmpsb
sub
lret
es
cwtl
mull
inc
jge
repnz
adc
test
xchg
out
adcb
adc
add
add
mov
xor
test
pop
xchg
test
jmp
leave
mov
imul
mov
xor
dec
iret
mov
sbb
xchg
subb
pop
mov
movl
xchg
jb
mov
jmp
jmp
stos
inc
jb
jp
outsb
fdivs
push
ror
inc
push
adc
inc
xor
inc
or
inc
int
aas
and
jmp
xlat
jp
mov
push
jb
out
cmpsl
lods
icebp
mov
pop
inc
mov
imul
lahf
ja
jecxz
pusha
pop
jg
cmp
xchg
daa
inc
testl
adc
mov
add
adc
outsb
fbld
jo
ret
pop
jg
push
pop
xchg
adc
imul
or
jg
jo
fidivrl
inc
stos
jg
cmp
add
sbb
call
std
rcll
movsb
xor
loop
out
add
clc
shl
push
ljmp
insl
sbb
fidivl
shrl
popl
mov
pop
dec
inc
cs
mov
leave
mov
mov
insl
ja
outsl
sub
ret
lcall
mov
sar
inc
pop
in
adc
adc
notb
repz
stos
loopne
sbb
lahf
pop
cmc
cmp
sbb
add
adc
fcomps
call
clc
or
stc
push
js
jae
adc
js
lcall
in
add
sub
pop
les
lret
aad
out
xor
lcall
cmp
mov
sbb
sbb
insl
lcall
add
mov
and
sbb
repnz
shrl
and
clc
and
or
and
aaa
sahf
add
loopne
pusha
xchg
stos
rorb
movsb
mov
add
sbb
loope
out
lahf
xor
add
add
hlt
push
jmp
and
in
sub
cli
lock
push
or
stc
pop
lods
sbb
dec
decl
fwait
push
cld
dec
pop
ss
xor
xchg
std
icebp
lcall
mov
mov
rclb
inc
pop
add
jle
je
push
inc
mov
cmp
and
rcl
mov
xchg
mov
or
inc
fs
xchg
test
and
mov
pop
je
test
mov
fcmovb
mov
cld
push
into
sahf
lret
in
sub
lcall
cmp
cmp
sbb
xor
test
lcall
mov
inc
stos
shll
sbb
or
hlt
cmp
add
pop
mov
xchg
lock
mov
call
inc
arpl
xchg
sbb
clc
mov
loop
pop
inc
add
dec
and
test
jecxz
loopne
enter
out
xor
adc
push
pop
mov
push
fistpll
and
or
push
ja
mov
test
loopne
stc
loope,pn
jecxz
inc
add
pop
xor
jo
dec
push
pop
jge
sbb
call
shlb
push
adc
je
les
jl
add
or
and
pop
fisttpll
sbb
dec
dec
dec
push
push
pop
iret
andl
aaa
hlt
shrb
push
adc
mov
lea
jecxz
jg
and
out
rcl
sbb
adc
fisubrl
dec
sub
sbbb
jle
adc
es
and
mov
pop
mov
loop
jno
jbe
aas
mov
add
mov
stc
je
dec
daa
mov
sarb
cltd
shrb
sub
scas
outsl
lret
insb
loopne
into
stos
les
jbe
test
pop
add
je
scas
aas
ret
sbb
pop
sbb
sbb
xchg
js
out
loopne
test
cli
sbb
pop
sti
aam
adc
movsl
mov
fst
push
sub
inc
shl
test
stc
fs
fs
sub
pop
ret
stos
lret
push
into
pop
xchg
push
and
icebp
pop
adcl
xor
test
mov
mov
fidivrl
and
jmp
aam
lock
xor
mov
cwtl
popa
pop
lds
jmp
clc
scas
ljmp
decl
sbb
shr
aad
shlb
jb
mov
scas
inc
mov
out
add
jno
xor
test
jae
movsl
bound
push
jno
mov
stc
ss
scas
cmp
or
xchg
js
mov
mov
push
ret
jp
or
sub
mov
and
add
xchg
addr16
in
dec
push
or
push
mov
nop
add
push
outsl
push
push
jo
scas
sub
aas
pop
in
clc
cmc
mov
sub
fiadds
lock
inc
xchg
icebp
scas
roll
cmp
mov
repnz
and
rolb
daa
bnd
ret
jno
ljmp
dec
mov
jbe
mov
loope
aaa
xor
mov
adc
daa
mov
mov
repz
test
pop
and
sbbb
jnp
mov
arpl
mov
int3
test
push
add
pop
lock
das
or
xor
inc
mov
jmp
jl
call
arpl
add
adc
xor
push
fistps
outsb
es
dec
fdivrl
jmp
andb
or
and
jbe
ret
dec
jecxz
pop
aas
mov
std
xchg
xor
or
js
push
push
mov
out
pop
loope
pusha
ret
test
inc
lock
ss
scas
fists
push
jl
xchg
dec
jl
ja
mov
cli
sbb
std
cmp
sub
cmc
cli
stos
mov
les
outsl
sahf
sub
inc
mov
js
xor
pushf
jp
push
fwait
repnz
fs
add
sbb
scas
mov
xchg
add
fistpl
pop
or
pop
cwtl
jo
add
das
cld
test
ljmp
ud0
lods
ljmp
mov
push
jb
push
push
jecxz
mov
cwtl
mov
out
dec
out
call
push
fisubl
pop
imull
and
les
sbb
push
sub
lcall
mov
adc
mov
add
push
rcrb
lcall
dec
add
ljmp
dec
movsb
icebp
sub
loope
loop
xor
shrb
jl
das
jg
into
fyl2xp1
shll
pop
mov
sub
cmp
fadds
loopne
lahf
sbb
lds
out
jle
enter
xor
int3
scas
add
xor
in
call
shll
mov
mov
mov
iret
and
ja,pt
cmp
cld
enter
je
push
jp
and
dec
xor
sub
add
aad
xor
repnz
add
data16
lods
pusha
pusha
inc
jmp
and
xchg
mov
stos
mov
xchg
mov
mov
shrl
inc
cmp
push
push
js
xchg
push
push
repnz
insl
ret
push
dec
test
int3
bound
jl
imul
xor
shlb
mov
xor
test
mov
js
dec
stos
cld
aas
inc
js
xor
cwtl
or
ja
pop
or
jge
xor
cld
das
call
shrb
and
push
fildl
jg
out
xchg
cmc
push
dec
out
pop
inc
adc
push
jae
and
jecxz
jae
mov
mov
add
nop
pushf
filds
inc
stc
gs
xlat
xor
push
stos
bnd
xchg
xchg
sub
and
sub
pop
add
add
pop
in
jecxz
loop
xchg
xchg
push
mov
jge
in
outsl
mov
rcrb
in
or
jecxz
inc
cmp
int
clc
lea
movsl
mov
dec
enter
aaa
jge
lret
dec
mov
push
dec
repz
lea
fisttpl
push
sub
mov
cmp
push
sbb
bound
shl
add
inc
adc
mov
xor
repz
and
hlt
pusha
stos
jne
mov
fiaddl
push
jo
jg
fimuls
sub
stos
sub
mov
xchg
cli
push
out
outsb
xor
add
sar
xchg
mov
and
lods
cmp
cwtl
rcll
pusha
and
inc
dec
adc
out
gs
pop
std
cmpsb
add
lock
sbb
decl
sarl
icebp
aas
inc
xor
xchg
testl
test
movq
lods
rcll
cli
and
dec
enter
push
and
ds
xchg
mov
mov
dec
dec
fsub
stc
xorl
mov
jno
ss
sub
out
ret
mov
add
dec
ja
dec
sbb
or
xor
cmp
imul
scas
or
inc
xchg
jno
mov
lock
insl
clc
outsl
jge
xchg
mov
popa
dec
cwtl
jb
dec
mov
jl
mov
sbb
dec
aaa
clc
push
mov
ret
mov
push
js
jmp
xchg
xchg
scas
or
ljmp
jae
inc
in
fmul
mov
loop
or
push
push
mov
and
pop
addb
dec
pushf
add
js
ret
dec
rcll
jle
mov
std
add
repnz
and
and
and
and
mov
lds
icebp
aam
or
mov
lock
aad
lcall
inc
fld1
xchg
jo
insl
xchg
movsb
mov
sbb
mov
enter
jp
jp
mov
lea
jmp
shlb
movsb
imul
cmp
imul
jl
cmp
sbb
repz
cs
push
inc
inc
outsb
mov
jmp
push
ret
sbb
dec
and
jmp
daa
shll
dec
mov
cmpsl
pop
dec
jo
pop
mov
dec
out
outsb
fmull
xor
cld
cmp
std
cmc
jg
pop
sub
pop
ret
mov
es
adcb
push
dec
jp
or
lea
push
inc
mov
mov
loope
mov
push
sti
jp
adc
out
cmp
in
lret
jne
xor
sar
pop
jbe
stos
adc
ret
sar
clc
inc
adc
push
sub
adc
mov
fsubrl
cmp
sub
push
sub
sbb
pop
mov
or
push
inc
adc
incl
pop
pop
cli
pop
and
adc
xchg
pop
mov
xchg
cmp
cmove
mov
or
lahf
ljmp
dec
mov
push
cmpsb
add
or
loope
data16
and
shrl
movsl
cmpl
divb
adc
aam
add
pop
xchg
push
mov
jb
test
hlt
cmp
mov
push
shr
pop
cmp
push
jnp
inc
out
lods
lock
jb
out
ja
mov
inc
movl
ss
sar
push
xchg
rcrb
cld
xlat
ret
sbbb
sbb
test
gs
push
es
cmp
in
fcmovbe
jg
std
imul
or
sbb
mov
xchg
loop
push
or
gs
push
mov
int3
push
fimull
ret
js
pop
iret
adc
or
jmp
lds
inc
ljmp
cmp
dec
xor
lea
fstps
lret
notb
lods
mov
xor
imul
mov
rolb
inc
mov
iret
fnstcw
xlat
sub
shll
int3
lock
push
lahf
ss
clc
xor
cld
inc
inc
xchg
mov
loopne
mov
mov
mov
add
mov
and
ret
int3
sbb
dec
jle
add
or
sbb
mov
les
imul
pop
outsl
ret
xchg
aaa
add
lock
mov
dec
mov
outsl
add
xchg
or
ljmp
stc
psubw
xor
arpl
cld
pop
or
sub
aaa
dec
inc
loop
fimull
push
dec
loop
aas
lods
push
aas
inc
add
jo
jg
lahf
jle
cltd
or
outsb
push
rol
pop
bound
ret
loop
rorl
jge
sahf
xchg
mov
xchg
xchg
sub
aad
fwait
inc
mov
dec
ds
jecxz
mov
aaa
inc
mov
pushf
pop
lds
jo
fists
cltd
out
es
insb
movsl
loop
dec
mov
in
push
cmc
fs
jmp
jmp
mov
and
jp
adc
jg
and
stos
enter
in
test
roll
adcb
add
lcall
js
jne
ljmp
pushf
pop
pop
pop
outsl
sub
scas
les
enter
test
loop
mov
inc
push
jnp
jno
dec
push
aas
mov
or
pushf
movsl
sbb
xor
mov
pop
xor
add
mov
outsl
mov
sbb
xor
push
xchg
mov
lods
loope
push
lock
xchg
orl
shll
fcomi
jb
xor
dec
loopne
sbb
push
adc
enter
into
test
lcall
and
stc
js
inc
mov
bound
adc
sub
icebp
adc
or
in
in
ja
xchg
push
and
sbb
add
xchg
push
xor
in
std
mov
loop
mov
and
lret
int3
ret
ja
adc
pop
push
enter
hlt
push
jg
or
sub
fwait
cmpsb
icebp
bound
or
inc
lcall
out
and
das
and
out
test
push
jbe
loope
sub
pop
lds
into
xor
adc
imul
xchg
xor
in
and
pop
test
test
add
add
or
aaa
outsb
std
jmp
sbb
fstps
call
inc
pop
jb
lret
push
mov
sahf
enter
xor
outsb
in
incl
incb
xchg
fs
add
xchg
test
add
or
cmp
test
adc
arpl
add
ret
lahf
push
pop
mov
flds
pop
push
or
push
mov
out
pushf
sub
mov
incl
pop
nop
cmpsb
stos
and
jp
aam
push
shrl
sbb
mov
movb
add
ja
aaa
sbb
lods
mov
clc
push
js
aam
sub
lods
dec
cld
push
mov
repnz
add
loopne
cld
fs
jecxz
xchg
fbld
lret
pop
fninit
es
xor
pushf
scas
add
lds
pop
rcrb
pop
pop
orl
flds
sbb
sbb
sbb
lods
and
ljmp
and
pop
lahf
mov
sarb
sub
mov
mov
pop
aaa
xchg
pop
xor
jb
js
nop
jb
cmp
pop
push
popl
inc
sub
and
testb
mov
mov
outsl
dec
inc
fwait
mov
mov
jbe
insb
inc
fistpll
adc
push
jo
adc
aad
push
jmp
fs
dec
push
imul
lds
add
stos
test
ds
and
cwtl
xchg
cmp
dec
lahf
or
and
daa
xor
dec
pop
adc
mov
inc
xchg
push
adc
pusha
outsb
cmc
ljmp
jmp
lcall
dec
dec
sbb
fsubs
rol
adcb
je
ja
fmull
inc
aad
cmp
dec
test
jp
outsb
loope
fs
clc
xchg
loopne
cs
clc
gs
or
inc
out
lds
fiadds
mov
mov
inc
push
inc
insb
cmp
push
sti
fistpll
jae
jnp
adc
adc
add
inc
cli
inc
dec
js
stos
idiv
add
les
cmp
ja
cmc
jl
mov
daa
push
icebp
or
bound
add
or
das
jp
test
sahf
jo
mov
shlb
outsb
pop
jg
fcmovb
lods
xchg
aam
clc
xchg
std
mov
add
jg
sbb
fcoml
dec
mov
loop
hlt
lock
jb
out
mov
mov
xchg
shlb
push
jne
mov
pop
jg
add
mov
arpl
not
dec
jle
cmp
std
fsubrs
daa
sub
sbb
cmp
rorb
add
mov
jo
std
lret
aaa
mov
aam
cmp
cmpsb
push
adc
adc
hlt
jmp
xor
xchg
dec
pop
movsb
test
dec
jbe
loopne
xor
mov
aad
fucompp
icebp
push
jecxz
popa
icebp
sar
mov
outsb
int3
sarl
dec
loope
mov
and
mov
inc
mov
ljmp
jecxz
and
inc
inc
xor
adc
or
cmpsl
jne
ret
fimull
add
fbstp
and
pushf
loop
mov
nop
mov
jb
xchg
iret
lock
mov
dec
dec
sbb
inc
jo
xchg
or
adc
lods
lds
and
mov
lret
pop
ljmp
mov
push
add
adc
jno
xor
add
mov
lock
sar
lret
xor
dec
pop
loopne
pop
cwtl
push
ja
mov
push
inc
cli
add
test
add
xchg
dec
and
dec
lahf
add
movsb
pop
push
jl
pop
cs
imul
mov
popa
jo
fdiv
cmpsb
mov
or
push
or
cld
lahf
pop
scas
push
rcll
push
pop
mov
insl
out
mov
gs
mov
mov
test
shll
out
test
fisttps
pop
jno
add
and
mov
sbb
sub
inc
xchg
nop
inc
ja
dec
jb
inc
mov
and
rol
jnp
divb
pop
dec
adc
xor
jmp
gs
and
mov
jmp
mov
cmp
or
sbb
sub
arpl
push
adc
push
inc
rcr
add
out
mov
or
cmp
or
sbb
cmp
cmpsl
adc
add
das
jae
mov
fidivs
aaa
fistpll
xor
js
mov
das
dec
es
adc
push
cmp
jns
adc
fiaddl
add
jl
ja
int
pop
cld
pop
rclb
push
nop
test
dec
mov
push
mov
ffreep
ret
rclb
inc
jmp
rolb
bound
aam
dec
pop
frstor
xor
je
and
inc
add
pop
imul
imul
aaa
pop
scas
sbbl
mov
scas
or
jmp
add
aam
in
push
jno
movsb
ljmp
jp
bnd
cmp
dec
xor
push
pop
mov
pop
inc
ljmp
bound
mov
js
cmp
orl
xchg
aas
test
push
sbbl
cmpsb
push
call
add
ds
cld
mov
sti
incl
mov
loope
out
push
push
ret
lcall
mov
clc
ffree
call
lahf
mov
jmp
inc
mov
adc
add
out
lock
dec
xchg
scas
jmp
loope
inc
lahf
jbe
sub
out
movsl
and
dec
add
incl
inc
pop
mov
dec
mov
adc
repz
xchg
inc
or
and
iret
frstor
cmp
xor
rolb
adc
shll
test
adc
add
xor
iret
ss
pop
loop
push
xchg
aaa
xchg
notb
loope
xchg
pop
cmp
xchg
icebp
sbb
std
sub
pop
push
pop
pusha
sub
cmp
clc
push
mov
lods
lock
xchg
or
cs
in
push
jo
aad
test
cld
add
js
setle
jnp
mov
and
inc
cmp
jbe
rol
scas
ljmp
inc
aad
jno
ret
dec
test
mov
outsb
mov
sub
sbbb
ret
jo
pop
lds
mov
shrl
mov
push
bound
push
icebp
aaa
into
dec
gs
mov
add
lahf
and
in
mov
or
xor
cmpsl
push
js
movsb
mov
loopne
and
adc
shlb
jmp
loopne
xor
xchg
cmp
ret
xor
mov
pop
shll
out
and
add
or
mov
mov
call
dec
call
ss
rcl
inc
bound
inc
fdivl
sbb
pop
sbb
mov
sub
arpl
daa
sarb
mov
pop
push
xor
cmp
jl
testb
testl
cmpsb
pushf
push
jg
and
ja
test
or
cld
iret
mov
cmp
pushf
jg
mov
cmp
outsb
adc
jp
test
fwait
daa
jbe
notb
dec
data16
push
xor
int
shrl
inc
sub
addb
adc
or
dec
inc
aam
mov
pop
cvttps2pi
loope
sahf
clc
int3
inc
xlat
dec
lock
sub
out
fists
hlt
mov
neg
lret
push
cmp
lock
push
fs
sbb
popa
add
mov
xchg
js
icebp
dec
out
cwtl
sub
add
add
pusha
in
imul
dec
fdivl
xchg
out
mov
jecxz
insl
push
inc
cmp
and
xor
pusha
push
and
cltd
int3
pop
add
fbld
jmp
xchg
push
lock
fdivrs
mov
or
xchg
lret
insl
inc
ljmp
sub
movsl
mov
add
movsb
sub
jge
adc
sub
lock
xorl
and
clc
jmp
mov
std
add
dec
jne
dec
add
scas
fsubrs
add
push
cmp
mov
fadds
rcrb
ret
pop
fdivl
adc
xchg
inc
sub
xchg
xchg
add
ljmp
ljmp
cmp
insb
lcall
xchg
movsb
inc
lds
cmpl
add
test
adc
mov
dec
adc
pop
andb
aas
sbb
cmp
sub
push
inc
jl
jb
push
shrb
dec
clc
xor
shlb
cmp
mov
int3
dec
insl
test
sbb
xchg
mov
jae
popf
idivb
xchg
stos
incb
icebp
mov
dec
sbb
out
or
insb
push
sar
inc
cmpb
fdivrl
mov
clc
mov
xor
dec
mov
pop
push
fcoms
and
and
sbb
mov
push
adc
sbb
mov
add
repnz
movsb
pop
jmp
ret
gs
test
jbe
insb
rclb
loope
orb
add
rcll
mov
adc
cmp
les
inc
push
pmuludq
or
xor
inc
mov
mov
dec
jl
loop
pop
sub
mov
sahf
push
mov
arpl
fisttps
call
out
adc
mov
jne
insl
inc
push
mov
inc
xchg
std
add
lock
xchg
clc
loop
mov
mov
add
mov
add
mov
xor
or
pop
je
add
jl
test
mov
sbb
pop
lcall
push
lds
jb
mov
xor
test
ja
sub
cmpsl
sarl
mov
or
jb
sub
xchg
shl
and
dec
lret
loop,pn
add
xchg
jb
mov
push
fcomip
adc
sbb
js
sti
or
cmp
xorb
arpl
je
nop
sbb
or
xchg
inc
push
xor
or
orb
into
outsb
mov
rcrb
xor
insb
gs
jne
adc
orb
std
mov
pop
xchg
pusha
jo
adc
lea
sti
test
mov
test
mov
call
push
add
loop
sub
push
sub
cld
in
dec
ss
adc
cltd
imul
push
sbb
sbb
mov
pop
out
loopne
ficompl
lds
mov
push
jo
lock
les
into
imul
push
pop
add
jg
xor
cmpsb
repz
popf
ret
ljmp
adc
lea
jbe
adc
arpl
mov
mov
cld
out
add
inc
les
lahf
sub
rclb
call
sbb
xchg
mov
in
addb
add
ss
jl
sar
sbb
sbb
adc
fidivrl
out
call
adc
jecxz
or
movsb
mov
mov
sti
test
push
aam
loope
jbe
xchg
out
mov
cmp
mov
jnp
adc
or
dec
dec
lock
hlt
clc
cmp
repnz
call
cmpsb
das
pop
gs
mov
scas
add
js
movsl
inc
sub
and
mov
loope
lock
insb
imul
mov
mov
out
mov
sbb
pop
mov
std
mov
outsl
orb
mov
pop
inc
es
xlat
lret
clc
push
sbb
sbb
lods
cmp
inc
fcom
dec
sbb
jmp
adc
out
in
xchg
cld
aad
mov
nop
jb
jbe
int
sbb
enter
or
add
inc
cmp
aaa
and
in
add
xchg
dec
ds
pop
mov
xor
cmpl
pop
and
add
stos
dec
sbb
or
inc
add
mov
jmp
pusha
sbb
mov
cli
cmpb
enter
out
fwait
mov
jnp
adcb
adcb
mov
mov
push
push
js
push
sbb
adc
mov
dec
mov
xor
test
lcall
stos
pop
jne
push
dec
or
xchg
fimuls
pop
push
pushf
or
mov
out
and
ffreep
aad
ds
sahf
ljmp
test
add
pop
jmp
lock
std
cld
mov
jg
mov
cs
insl
sbb
js
xor
add
enter
sub
mov
inc
in
sarb
dec
rorb
push
sub
rorl
popa
repnz
mov
xlat
lods
out
in
push
insl
pop
cltd
cld
add
sub
xor
outsl
xor
pop
mov
cmpb
cmp
xlat
pop
jle
jle
imul
inc
ficompl
mov
add
rcrb
test
data16
jg
mov
and
add
test
lock
dec
and
add
pop
arpl
bound
call
movb
mov
icebp
fs
jecxz
sar
in
ss
and
push
mov
xchg
sub
imul
jns
cltd
ja
add
xchg
mov
add
cmp
and
and
ljmp
fstl
jb
cmp
xchg
flds
sbb
scas
push
sbb
or
aaa
mov
loop
scas
mov
addl
xchg
popa
sbb
pop
xchg
sar
and
mov
inc
add
xor
mov
cmp
add
xlat
cli
add
inc
mov
sbb
and
sbb
jg
outsl
push
cwtl
push
mov
dec
adc
rcrb
sti
sub
lret
es
xchg
idivb
inc
mov
shll
cmc
jp
pusha
ss
cmp
call
popl
insl
cs
pop
decl
mov
les
mov
frstor
or
fs
sub
jbe
sbb
or
int
lods
push
sub
pushf
cmpb
dec
jae
mov
jmp
pop
sub
repz
outsb
add
cwtl
pop
push
jle
and
fmuls
push
and
mov
cmp
ret
pop
pop
scas
and
sbb
mov
push
add
xchg
testb
lcall
aad
ret
cs
cs
out
daa
push
sub
xchg
cmp
inc
in
ss
scas
rorl
sti
ljmp
push
test
mov
sbb
dec
adc
adc
into
xor
mov
or
loopne
lea
xchg
lods
addr16
loop
mov
testb
xlat
stos
mov
and
pop
test
dec
xorb
icebp
push
lea
or
rcll
pusha
push
add
iret
push
cmp
pop
testl
icebp
outsl
mov
insb
mov
cmp
inc
sub
xor
movl
test
ja
loope
test
ret
insl
faddl
insb
ret
shll
push
adc
inc
inc
ret
mov
mov
fstl
jle
push
cld
adc
scas
dec
mov
arpl
mov
stc
fldl
jecxz
test
or
sar
ret
clc
out
xchg
jno
pop
aad
outsl
push
push
sbb
ja
jge
out
and
or
sub
inc
data16
xor
aad
push
pop
subl
mov
ss
mov
mov
xor
and
cmc
push
andl
or
and
mov
shrb
fstps
mov
cmpsl
lds
jno
imul
cmc
fwait
lea
cmc
adc
lret
pop
mov
cmp
hlt
loope
mov
lds
push
sbb
pop
test
mov
inc
stos
add
sbb
out
add
loopne
mov
sub
data16
push
iret
out
repnz
inc
jecxz
jmp
jmp
js
addl
out
add
aad
and
adc
cmp
rorw
and
lret
cmpsb
out
test
push
add
aas
mov
inc
inc
ret
xor
inc
arpl
pusha
aam
dec
clc
pop
lahf
scas
int
aaa
sti
scas
xchg
dec
sbb
mov
stc
stos
pop
fidivs
mov
mov
xchg
xchg
sub
sbb
jno
test
in
lcall
sub
cwtl
movsb
aaa
add
ds
fwait
cmp
xchg
sub
jmp
daa
cmp
sbb
jg
cli
xchg
lock
add
inc
in
xor
cmp
xlat
add
xor
push
xchg
dec
enter
pop
lcall
push
or
cltd
ret
mov
out
xchg
test
in
xchg
pop
adc
sub
xchg
jae
dec
gs
add
mov
and
adc
in
inc
or
jns
mov
cmp
mov
add
fsubs
xor
lods
dec
push
pusha
xchg
mov
imul
bnd
in
jo
ja
bound
jbe
hlt
data16
es
pusha
addr16
fcmovnu
shll
mov
or
jnp
push
pop
dec
ror
pop
and
into
inc
cwtl
mov
push
jb
leave
pop
sub
rorb
cmpsl
imul
ret
or
insl
inc
jo
and
test
jnp
xchg
and
dec
shlb
imul
push
and
sbb
dec
rcl
or
rolb
popa
repnz
lea
jmp
imul
and
push
incb
lret
mov
js
dec
insb
sub
pop
jnp
mov
inc
in
add
jecxz
or
or
mov
mov
aaa
lock
sahf
lea
dec
fnstcw
stos
fwait
adc
fdivr
leave
cwtl
cmp
ds
add
cltd
subb
push
push
imul
inc
test
add
xor
sbb
push
add
andl
mov
neg
inc
sbb
int3
std
xchg
inc
xchg
sbb
and
ret
cs
and
and
jae
cmp
andl
xlat
and
mov
insb
jecxz
mov
js
jl
roll
je
psllw
xlat
seto
inc
push
mov
sbb
ds
incl
fdivs
movsl
adc
push
rcrl
repz
std
jl
lret
lcall
cmc
fwait
loop
jp
aad
or
mov
pop
scas
xor
orl
cwtl
movsl
out
incb
mov
hlt
add
mov
and
sub
adc
sbb
aas
xchg
nop
push
iret
push
add
push
daa
dec
pop
mov
cmc
jbe
int3
jle
repz
and
xchg
mov
aad
repz
cmc
xchg
negl
pop
lret
jl
popf
xchg
xchg
push
jmp
cld
sbb
push
test
loop
ss
jnp
xor
cmp
inc
imul
cmp
sahf
and
arpl
jg
lea
out
fadds
add
dec
shl
loopne
cmpsb
ja
inc
and
lds
rolb
xchg
push
xor
and
test
push
out
adc
and
sbb
outsl
stos
xor
or
repnz
dec
test
sbbb
push
sub
or
imul
iret
add
xor
and
call
sub
imul
es
icebp
cmpl
push
sub
inc
bound
mov
call
out
adc
mov
fldenv
sub
mov
or
xor
mov
mov
popf
mov
adc
mov
xchg
sbb
push
leave
sub
inc
mov
xchg
repz
mov
pop
pop
das
pop
sahf
dec
mov
inc
or
aad
sti
nop
enter
pop
cmc
add
or
js
push
sti
aam
es
call
mov
pop
mov
loopne
sbb
imul
mov
pop
mov
mov
stos
clc
pop
sub
ret
dec
jmp
xlat
or
pop
jl
dec
ror
sbb
push
adc
stos
lods
icebp
in
and
pop
jmp
ds
dec
nop
leave
js
mov
ja
loope
es
ja
lods
std
test
scas
mov
add
in
push
inc
cmpsb
or
scas
das
pop
aad
xor
pop
int
mov
cmp
adc
sub
cltd
lahf
mov
xchg
lea
and
sbb
adc
aam
arpl
or
push
xchg
hlt
mov
or
movsb
sub
pop
jmp
fnstsw
stc
loop
jl
sbb
out
out
andb
xchg
sub
pop
nopl
int
pop
test
in
stos
fstpt
int
test
xchg
mov
pop
adc
xor
scas
addb
inc
pop
aad
jo
dec
jno
lods
adc
clc
sbb
lcall
int3
pop
add
addr16
dec
stos
adc
mov
mov
lock
out
bound
jo
lds
dec
iret
or
or
movsl
sbb
loope
and
fdiv
and
daa
movl
mov
ja
pop
push
mov
push
add
push
mov
repz
add
xchg
int
lock
mov
jae
adc
pop
push
je
dec
push
js
mov
fidivrs
cmp
dec
outsb
scas
ficomps
jle
sbb
add
ja
push
aam
clc
insl
shrl
imul
add
loopne
add
mov
mov
push
mov
in
stc
lods
push
pminub
sbb
lret
mov
inc
pop
push
adc
adc
sbb
xchg
jl
mov
pusha
int3
dec
sub
cmc
or
call
call
dec
nop
cs
rclb
sti
sbb
movsb
cld
fstpt
jnp
shlb
adcb
daa
add
push
adc
clc
ds
push
sbb
fildl
incb
mov
mov
jno
inc
decb
xchg
movsb
imul
call
sahf
imul
enter
shl
out
aad
sbb
xchg
int
add
mov
sbb
cmpl
pop
mov
ret
xor
nop
or
xchg
sbb
stos
push
or
aaa
inc
outsl
mov
sti
jmp
xor
sbb
loop
cltd
ret
xchg
incb
aas
cs
mov
sbb
loop
mov
fsubl
mov
ja
xchg
shll
jle
dec
out
lea
push
dec
pop
sub
fcmovu
es
in
lar
xor
xchg
aad
push
loope
in
pop
sbb
adcb
jb
xchg
inc
arpl
mov
outsb
dec
aaa
cld
negb
xchg
mov
outsb
dec
inc
cmp
imul
rclb
jb
add
and
aas
test
dec
push
sub
inc
orb
mov
fldcw
std
jb
push
pop
pop
sub
imul
movsl
lock
fcmovnu
icebp
push
inc
repz
inc
ret
push
jge
pushf
jb
adc
pop
call
adc
xor
dec
into
cmp
pusha
mov
add
addb
pushf
mov
push
pop
call
stos
and
adc
roll
mov
push
adc
stc
xchg
test
jno
push
pop
enter
sti
pop
jbe
push
cmp
outsl
cld
jg
mov
xchg
lds
adc
push
mov
xchg
test
aaa
push
and
push
add
gs
shlb
xor
add
xor
mov
bound
mov
leave
or
hlt
push
in
rcr
push
push
sub
adc
sbb
subb
xchg
jl
sub
add
or
stc
add
lea
lret
in
cmp
adc
ret
pop
cmpsb
out
lret
add
xchg
lock
daa
pusha
push
xor
or
jo
testl
adc
jnp
sub
movsl
mov
outsb
js
xor
test
jp
inc
and
or
mov
add
add
add
mov
loope
jb
pop
mov
test
sbb
shlb
sbb
pusha
add
adc
push
cld
cmpb
sbb
test
jo
sub
rorl
push
out
lock
lock
gs
out
push
mov
or
inc
enter
arpl
sub
in
inc
into
hlt
outsb
pop
dec
fisttpll
adc
jl
mov
xchg
cmp
inc
pushf
mov
dec
sub
mov
mov
mov
std
and
xchg
rorl
repz
orl
dec
jnp
pop
cltd
scas
and
rorb
mov
icebp
mov
shlb
push
test
pusha
pop
inc
cli
fwait
adc
testb
adc
stos
dec
ss
aam
sbb
adc
orb
stos
sub
mov
and
cld
adc
dec
sbb
inc
fsubl
incb
mov
mov
xor
push
add
jge
lock
cld
xchg
das
dec
cmpsl
andl
jecxz
out
sbb
adc
aas
xchg
imulb
jl
and
rcrb
xor
icebp
outsl
sbb
sbb
ss
jbe
adc
inc
ret
inc
add
adc
mov
call
pusha
push
arpl
pop
sbb
outsl
mov
sbb
ja
sti
sarb
mov
pop
cmp
push
stos
outsl
cmc
loop
loop
jb
insl
mov
jecxz
jnp
jo
mov
push
aas
jle
inc
outsl
int
and
into
jb
cld
mov
sub
lret
loop
dec
mov
mov
lock
push
add
xorb
dec
push
adc
xor
mov
aaa
rol
dec
push
or
aas
call
ret
dec
shlb
test
cltd
in
push
rorb
jp
mov
inc
mov
push
fimuls
xchg
pop
xchg
dec
sub
cmp
mov
mov
in
pop
das
dec
sub
jg
jb
lret
xchg
inc
mov
add
push
rol
jp
push
pop
icebp
cwtl
and
adc
cmp
xchg
pop
sbb
mov
mov
mov
push
fidivs
jmp
cmp
stos
dec
xchg
mov
cmpl
or
lods
fnsave
fwait
sarb
movsl
fldl
cmp
mov
push
dec
sub
shll
cli
ljmp
enter
cmpsb
xor
push
jno
jnp
js
cld
outsl
aam
inc
jno
shl
aaa
loop
push
imul
mov
insb
fwait
popa
mov
outsb
push
inc
add
pop
pop
adc
and
nop
or
icebp
shrl
mov
pop
insb
and
loopne
xchg
sbb
add
push
lahf
aam
shlb
stos
jmp
idiv
fs
sti
mov
js
jp
cwtl
movsb
sub
clc
push
add
cli
lahf
ljmp
or
sti
decl
jb
aam
adc
mov
mov
dec
int3
push
xchg
mov
add
mov
lods
adc
pop
loop
push
repz
scas
mov
cld
decl
pcmpgtb
inc
jno
inc
into
dec
in
addb
lcall
xor
loope
rclb
cmp
fwait
mov
dec
mov
mov
test
cmp
cmp
mov
mov
fsubs
lcall
clc
incl
out
scas
dec
iret
cmp
aam
mov
cmp
addr16
ljmp
cmp
jno
in
and
lock
mov
scas
testb
xor
call
cld
pop
or
xchg
inc
arpl
mov
pop
notl
pop
mov
popf
aaa
decl
or
popa
sbb
dec
jb
out
inc
xchg
sub
sti
jle
fsubrs
sub
sarl
shll
inc
lret
dec
sub
mov
push
fisubs
enter
inc
rol
xchg
nop
xchg
mov
pushl
std
and
adc
dec
xchg
es
int3
test
cmp
jae
in
jp
call
mov
je
sub
mov
xchg
cmpl
mov
or
lcall
das
leave
fs
daa
and
xor
outsl
loop
adc
or
sub
clc
jg
scas
cmp
jmp
test
add
mov
xor
push
or
popa
hlt
mov
daa
add
jno
cld
pop
icebp
dec
adc
aas
cmp
aam
dec
cmp
dec
xrelease
das
xor
call
and
mov
inc
fisubs
mov
call
or
adc
cld
xchg
mov
das
cli
outsl
clc
jge
jae
scas
push
or
push
lods
adc
inc
xor
loop
jmp
cwtl
les
out
test
cmpsl
inc
jne
pop
cli
jge
push
add
xchg
mov
mov
ljmp
jnp
cmpsl
add
or
call
and
cli
jb
lds
mull
adc
hlt
adc
jns
mov
lcall
mov
sbbb
adc
pushf
lock
popw
mov
in
jo
pop
negb
jb
arpl
rclb
test
xchg
mov
imul
call
fnstsw
testb
push
ljmp
dec
scas
clc
ljmp
mov
test
fcmove
pushf
cwtl
test
mov
scas
sub
push
std
fcomps
or
mov
rclb
sub
mov
xchg
xor
fucomp
inc
stos
cmp
jbe
mov
mov
test
mov
mov
notl
xchg
mov
stos
mov
inc
dec
pop
push
lods
mov
mov
ljmp
test
inc
sub
push
cwtl
sahf
into
push
ds
add
sar
loopne
in
mull
mov
mov
bound
pushf
mov
or
adc
cltd
or
pop
cld
mov
les
xchg
sbb
lcall
std
xor
push
push
jmp
lods
add
clc
shlb
leave
cmc
fucomip
rorl
out
xchg
sub
sbbb
out
push
mov
data16
mov
sahf
fwait
decl
stc
jecxz
pop
repnz
scas
or
pop
or
sub
decl
xor
sbbl
test
sub
roll
test
rcll
cmp
inc
push
ljmp
inc
mov
dec
lcall
mov
test
push
or
mov
out
and
add
test
and
fidivl
or
xchg
inc
xchg
and
incl
pushf
das
lret
scas
or
adc
rcl
mov
mov
cmp
pushl
xor
rclb
neg
inc
loope
add
in
xchg
popl
lcall
inc
mov
std
jno
cmpsb
xchg
fstps
push
ffree
adc
jo
lock
sti
pop
stc
xchg
inc
test
jno
sub
ljmp
pop
dec
out
push
ja
cltd
xor
jmp
and
xor
adc
loopne
mov
clc
pop
hlt
lcall
movsb
inc
loop
cmpl
fisubl
xor
inc
fidivrl
scas
ss
and
cwtl
sbb
mov
push
cmp
mov
test
loopne
insl
sbb
movsb
das
inc
jmp
loopne
ljmp
mov
out
mov
sbbb
out
and
jae
lahf
test
pop
mov
fbstp
mov
imul
cmp
je
push
inc
jecxz
jb
scas
cmc
adc
ljmp
add
mov
mov
jl
push
jg
mov
cld
imul
nop
jo
jb
push
stos
mov
dec
fcompl
jmp
popf
or
cmp
cmp
jmp
dec
into
mov
das
dec
out
incl
adc
mulb
sahf
lret
andl
fst
imul
push
call
xacquire
andl
cld
das
ret
mov
rorb
xchg
decl
jmp
jge
add
invd
pop
pushf
xor
add
inc
and
hlt
call
push
outsb
outsb
xchg
pop
pop
mov
loope
popf
cmp
subb
cmp
jg
inc
jno
bound
shrl
inc
lods
cli
testl
das
and
xchg
dec
jge
clc
dec
push
shrb
mov
sti
in
push
adc
dec
mov
mov
test
push
jmp
xlat
sub
xchg
push
jle
dec
dec
mov
int3
and
popf
mov
push
sbb
jecxz
xchg
addr16
push
dec
lods
or
call
cli
imul
leave
pop
cli
jle
int3
add
xlat
jb
aaa
lcall
xlat
add
dec
mov
xchg
sub
jecxz
imul
mov
daa
mov
lock
jnp
lods
or
jg
lret
arpl
clc
xchg
bound
jp
aad
aaa
dec
push
enter
mov
jg
lret
xchg
sbb
outsl
push
mov
ret
iret
das
jp
adc
adc
mov
dec
out
push
test
push
or
xor
test
decl
and
mov
add
xchg
cmp
jnp
or
lods
jnp
xchg
lods
push
and
adc
dec
lret
gs
push
fwait
int
xor
rcll
mov
xchg
incl
outsb
push
icebp
inc
lds
out
imul
jg
mov
mov
repnz
sub
dec
cmc
rcrb
xchg
mov
ret
or
mov
sub
sbbb
push
stc
jmp
incl
or
iret
mov
mov
sbb
stc
lahf
stc
jp
sub
push
js
mov
xor
jo
je
clc
jmp
mov
mov
mov
jmp
push
mov
dec
add
adc
cmpb
outsl
popa
hlt
xchg
ss
jg
and
adc
jmp
fstps
cmp
cli
sub
lods
dec
ljmp
scas
fistps
cltd
imul
dec
std
ljmp
push
push
sbb
icebp
popf
imul
mov
lock
enter
dec
je
xor
pop
and
adc
pop
mov
pushl
cmc
dec
fs
jle
sahf
inc
jmp
and
xor
out
mov
pop
mov
test
lahf
fwait
int3
rclb
mov
lds
call
xchg
adc
adc
mov
aas
jns
lret
aas
clc
and
push
das
or
dec
movsb
test
pop
out
mov
out
sbb
lds
test
or
sbb
and
xor
mov
xchg
xor
icebp
notl
out
and
jecxz
cmp
mov
shrl
xor
xor
pop
mov
cli
xchg
xor
sub
ljmp
aas
fistps
lods
inc
loopne
cvtps2pi
in
or
pushf
pop
in
js
shrl
fsubrs
sub
xchg
sub
mov
cmp
jg
or
cmpsl
inc
in
xor
ret
in
push
or
filds
std
mov
stos
rcll
outsl
jp
jns
lods
add
inc
and
push
sub
jge
call
push
mov
stc
jge
iret
pop
inc
xor
cld
mov
fisubs
jmp
hlt
sbb
and
imul
int
sbb
mov
rcrb
clc
lret
loop
cmp
aad
inc
mov
gs
push
cmp
jmp
call
shll
insl
cmp
lcall
outsl
pop
rorb
and
movsb
andb
add
jg
push
sbb
pop
pop
mov
clc
or
lcall
jne
testl
inc
mov
jmp
clc
ljmp
mov
in
jns
sbb
daa
push
je
stos
push
gs
sbb
dec
out
mov
or
inc
or
xchg
pop
cmp
dec
and
js
fcomi
jmp
push
mov
incl
dec
xchg
outsl
gs
push
out
cmc
lds
inc
mov
fstps
mov
stos
mov
xchg
xor
or
pop
xor
aas
loope
sbb
or
mov
lds
or
out
dec
ret
xchg
pop
cmc
adc
or
and
idiv
stos
mov
gs
inc
push
xchg
mov
popa
mov
pusha
jmp
divb
movsb
hlt
sbb
arpl
orb
jmp
jl
ljmp
cli
sbb
fnsave
sub
popa
cmp
mov
mov
popa
jb
and
lock
mov
std
add
sbb
cmp
int
test
rorl
dec
dec
pushf
xor
ret
dec
lods
push
call
loope
push
mov
pop
scas
lcall
sbb
lods
repnz
ja
jg
jb
push
in
sbb
lods
xor
mov
or
pop
clc
ljmp
mov
mov
mov
movsl
fimull
xchg
scas
imul
ficompl
stos
inc
jecxz
outsl
scas
push
in
out
sbb
pop
clc
mov
dec
mov
popf
cmp
fisttpl
clc
or
mov
sub
mov
in
ljmp
cld
js
cmpxchg
sahf
xchg
in
and
cmp
decb
roll
push
jnp
int3
xor
dec
in
bound
stc
xchg
sbb
sbb
lods
add
cli
call
cmp
rclb
hlt
stc
and
aad
ljmp
jle
js
aaa
inc
outsl
out
test
push
mov
scas
lock
mov
stos
roll
loopne
or
sbb
inc
stos
pusha
je
pop
std
decl
ljmp
sbb
shrl
mov
and
jecxz
pop
sub
sbb
test
adc
pusha
mov
lcall
pop
stos
je
lea
stos
lcall
xchg
pop
loopne
xchg
fnstenv
mov
test
pop
pop
jge
ja
and
xchg
mov
push
mov
push
inc
lret
mov
aaa
lcall
cld
or
pop
notl
inc
mov
test
outsb
or
or
mov
push
jg
mov
sub
inc
iret
xlat
pusha
mov
dec
roll
and
dec
or
dec
arpl
push
jg
xchg
jl
gs
dec
add
mov
fadds
pop
mov
pop
xchg
aad
or
mov
xchg
mov
mov
jns
mov
lock
sub
movsb
cmp
dec
filds
jmp
aas
xchg
icebp
gs
leave
pushf
add
fstl
es
dec
and
and
adc
sbb
lods
inc
fs
enter
push
mov
std
mov
jge
dec
adc
shrl
jno
outsb
mov
fcmovnbe
mov
adc
test
outsl
or
and
fdivrp
and
test
push
movsb
and
cmpsl
xchg
lret
inc
adc
mov
push
divb
sub
lcall
fdivr
mov
adcl
cltd
xor
mov
int3
pop
lock
lcall
das
out
cmpsb
clc
sarl
mov
scas
negw
push
pop
cmp
incl
adc
roll
std
pop
lock
leave
mov
js
mov
fstl
out
xchg
subb
das
push
dec
mov
pop
mov
fnsave
in
mov
push
popa
or
push
decl
das
or
mov
pusha
mov
dec
out
mov
incb
out
mov
add
sub
push
inc
mov
xlat
out
data16
bnd
mov
mov
jne
add
dec
mov
test
aad
pop
idivb
int3
add
ret
mov
cmp
xchg
repz
pop
outsb
iret
rcll
out
mov
pop
icebp
mov
loopne
add
dec
ljmp
adc
push
jge
ljmp
lcall
push
jp
mov
push
jmp
lock
icebp
jmp
lahf
inc
fisubrs
and
mov
clc
lcall
popa
not
push
sub
xchg
cmp
jge
lcall
jbe
notl
pop
dec
pop
add
movsl
inc
lods
pusha
stc
lods
push
imul
fcoml
mov
mov
cmp
pop
iret
mov
lods
jae
lods
push
jmp
cmpsl
mov
add
push
rcrb
gs
cmp
or
ljmp
inc
fwait
adc
cmp
lcall
bound
lods
xor
out
add
xor
loop
push
outsl
bts
push
call
mulb
jae
int3
and
roll
add
pop
imul
mov
out
sub
popf
sub
addr16
in
loopne
call
test
call
jmp
add
test
cld
push
lock
add
pop
xor
jbe
adc
loope
cld
adc
gs
mov
cmpsb
int
xchg
incb
test
xor
aam
xabort
loope
or
and
push
aaa
movsb
cwtl
cmc
inc
insl
fucomi
mov
sub
cmpl
and
add
or
scas
dec
iret
bound
fldenv
xorb
test
insb
push
mov
leave
decl
cmpsl
mov
dec
add
adc
sub
ret
and
notl
or
push
cmp
jo
cmpsb
pushf
ljmp
dec
xchg
and
fcmovu
jb
call
mov
lods
in
lods
icebp
idiv
jg
scas
add
cmp
ss
mov
lcall
pop
jecxz
or
and
scas
push
mov
mov
clc
in
mov
hlt
lods
clc
xchg
add
mov
rol
pop
inc
add
lcall
outsb
rorb
xchg
xor
aad
mov
je
adc
lahf
rcr
icebp
lcall
cs
mov
mov
int3
repz
stc
mov
test
mov
stos
into
lods
loope
scas
popf
lods
movsl
cli
jg
into
add
outsl
pusha
mov
mov
mov
scas
mov
add
lret
lret
pop
inc
and
daa
out
xchg
mov
test
push
stc
or
dec
cld
mov
clc
cmp
xchg
pop
test
cmpsl
add
xchg
rclb
int
or
in
fidivl
add
and
in
cwtl
scas
outsb
ret
icebp
xchg
jne
dec
nop
test
mov
lea
cmp
rolb
rolb
aas
cmp
movsl
aad
mov
adc
mov
mov
mov
pusha
add
mov
outsl
lea
jl
sub
jb
mov
jg
sbb
lods
out
and
sub
add
mov
xchg
cwtl
xor
das
pop
lock
les
dec
aaa
mov
adc
clc
pop
rolb
ret
push
gs
xlat
cmp
jb
dec
sbb
adc
cmc
inc
mov
mov
mov
sarb
add
into
inc
fsubrs
clc
scas
lahf
and
loopne
fisubrl
pop
lcall
loope
daa
add
ret
je
cmp
imul
cmpsl
sahf
and
cmc
dec
pushf
jo
sub
fsubrs
xor
leave
adc
clc
ljmp
lds
mov
xchg
inc
ja
mov
aas
mov
xchg
mov
fistpll
jg
lahf
xor
cmp
cld
jnp
inc
mov
loope
lods
adc
cmp
mov
push
call
ret
or
cmp
xor
inc
scas
mov
xor
sbbl
test
push
xlat
sbb
lods
add
or
jle
sub
mov
mov
xchg
lods
loopne
lods
mov
mov
sbb
lods
mov
insb
mov
mov
push
nop
ret
push
xlat
xchg
icebp
out
in
xchg
sbb
divl
adc
mov
insb
lret
jno
push
push
xchg
pusha
xchg
and
pusha
pop
sti
daa
cli
mov
pusha
pop
sub
xlat
and
movsl
les
dec
aas
pop
clc
loope
jnp
int
add
repz
push
add
lahf
lea
daa
xchg
dec
insl
pop
dec
push
add
and
xchg
dec
clc
mov
push
lock
jp
mov
aam
int
jg
mov
sbb
mov
push
nop
imulb
scas
xchg
jmp
loope
ljmp
xchg
pmulhuw
cmp
push
xor
push
mov
sub
or
pop
dec
testl
pop
push
iret
ds
ss
sub
sbb
test
mov
gs
push
out
or
call
fnstcw
out
repnz
and
sub
in
pop
pop
and
rcll
dec
mov
sete
adc
mov
stos
jl
call
fs
lods
gs
push
cld
testl
out
enter
xor
test
mov
cld
jae
out
stos
fcoms
and
jecxz
ss
mov
xor
fs
push
push
andb
jecxz
clc
inc
cmp
aas
das
jle
movsb
push
fs
js
pop
sbb
nop
push
in
dec
out
pop
icebp
mov
mul
jmp
xchg
pop
aam
pop
pusha
jle
insl
push
mov
dec
das
add
mov
pop
jmp
subb
test
push
test
jge
jmp
shl
sar
cmp
std
test
sbb
mov
shl
loopne
fcompl
pop
add
sahf
popf
fsubr
push
outsl
jo
xor
xorb
pop
fwait
pop
push
call
and
shr
rorl
or
push
xchg
or
sub
andl
pushf
ss
dec
loopne
icebp
subl
adc
pop
fs
sbb
dec
xor
call
mov
cld
in
sub
add
inc
shll
mov
scas
adc
mov
pop
pop
jmp
cmp
sahf
jp
les
ficomps
push
dec
pop
jl
mov
pop
stos
or
std
pop
bswap
int
push
xorl
data16
es
add
pop
sub
xchg
daa
nop
ljmp
int3
or
iret
dec
cmpsb
sub
add
sub
cmpsb
adc
inc
push
movsb
cld
push
rolb
js
xchg
cmpb
fdiv
sbb
mov
das
jg
pop
push
adc
aas
sub
adc
hlt
pop
jno
dec
dec
push
adc
push
adc
int
jecxz
or
std
or
push
test
jnp
movsl
addr16
cwtl
sub
fwait
mov
mov
dec
mov
or
scas
sbb
test
inc
shlb
fisubs
rcrl
insb
push
insb
inc
add
xor
mov
cmp
stc
in
add
in
pop
mov
scas
xchg
jecxz
or
push
fdivp
cmp
insl
fs
imul
mov
es
imul
gs
lds
popa
xlat
jg
mov
xchg
repnz
sbb
pop
icebp
stos
adc
scas
and
push
sarl
ja
cmp
jle
push
fidivrl
ds
hlt
add
in
or
or
sbb
mov
loop
scas
mov
nop
popa
push
add
nop
fwait
in
popa
inc
mov
cs
push
mov
or
mov
or
jb
bound
jnp
xor
cwtl
cmp
adc
sbb
ret
in
cmp
inc
call
dec
or
inc
adc
add
pop
les
mov
orb
xchg
rolb
adc
add
adc
push
hlt
sbb
jmp
ja
fs
sbb
ja
push
loop
enter
add
call
jl
les
dec
add
lds
pop
xor
in
loope
xor
sbb
insl
test
nop
push
js
sub
mov
out
fists
jnp
test
push
xchg
aaa
sbb
or
jg
sbb
je
push
push
scas
inc
popf
dec
test
or
ret
dec
orb
les
fisubrs
in
sub
sarl
jne
iret
pop
xchg
push
push
out
push
sbb
daa
imul
mov
dec
loope
test
adcl
fwait
test
cmp
aam
jg
pusha
fildll
sub
sbb
ds
dec
mov
mov
sub
inc
adc
xor
clc
xchg
adc
inc
sbb
adc
ficomps
sub
sahf
loop
xor
or
xchg
fstps
test
shr
ret
push
into
gs
jmp
aas
push
dec
push
roll
ror
cwtl
or
divb
and
jg
stc
pop
and
fcomp
xor
or
outsb
mov
adc
outsl
push
adc
mov
scas
inc
sub
xchg
mov
enter
push
xlat
push
js
cltd
inc
imul
push
adc
std
xchg
cmp
mov
in
sar
orl
andb
shll
fisttps
sbb
out
add
push
fmull
jg
add
dec
xchg
lahf
lea
mov
decl
stos
cmp
mov
daa
test
push
add
mov
std
adc
xchg
and
bound
mov
add
outsl
stos
jmp
out
adc
adc
adc
pop
xor
sbb
cmc
sub
enter
les
das
ljmp
inc
ja
or
imul
and
aam
fwait
cmpsb
adc
xchg
inc
or
dec
ret
push
cmp
cmc
inc
inc
mov
loope
xchg
popa
mov
les
aas
jno
pop
sub
loope
xor
dec
mov
dec
stc
jo
xor
div
inc
adcl
adc
dec
addr16
leave
imul
xor
xchg
psubb
jbe
fisubs
mov
add
fcoml
test
pusha
mov
cmp
xchg
ljmp
dec
inc
fcompl
adc
push
jb
pop
inc
dec
mov
mov
dec
mov
pusha
idiv
out
stos
fldl
push
int3
pop
and
loop
cmp
mov
xchg
loopne
jbe
adc
test
push
mov
lods
adc
push
sub
adcb
xchg
out
aaa
test
inc
sbb
mov
xor
ret
cmc
jbe
add
inc
ljmp
test
ds
jp
loopne
stc
addl
push
mov
aas
xor
idiv
lock
jle
jecxz
mov
out
push
ja
mov
inc
xor
pusha
or
and
cmp
jno
jne
or
push
loop
ret
sub
jbe
cs
test
push
loopne
fdivs
addr16
adc
xchg
xchg
xor
lds
ss
dec
in
out
push
mov
mov
std
adc
jbe
lea
adc
inc
dec
dec
cmp
ret
mov
lods
adc
sub
pop
push
les
hlt
fadds
add
arpl
ja
inc
xor
inc
add
imul
mov
add
xlat
in
popa
push
push
das
xor
cmp
push
dec
and
mov
das
xchg
outsb
add
dec
test
pusha
cmc
mov
ds
aaa
or
stc
fwait
out
cmp
push
ja
insb
mov
out
push
mov
sbb
imul
adc
xchg
rclb
jp
cld
mov
mov
sub
cwtl
negl
outsl
mov
stc
aad
frstor
insl
lret
dec
sbb
out
dec
cld
inc
sub
jnp
popa
call
repnz
faddl
ret
sub
inc
sub
cmp
rolb
rcr
sbb
mov
cmpb
lds
add
lret
jle
sub
or
out
loope
bound
inc
rolb
jnp
mov
dec
outsb
insb
sbb
inc
fildll
mov
push
mov
icebp
sbb
push
mov
lahf
mov
sbbl
mov
js
pusha
ret
mov
add
in
mov
mov
xchg
push
add
sub
mov
rorb
and
fistpll
sub
jae
or
add
imul
lds
mov
and
int3
inc
dec
movb
in
jl
dec
add
shll
ds
in
cmpsb
sbb
clc
xchg
jo
leave
add
xchg
or
shrl
int3
cmp
xchg
addb
xor
out
xlat
mov
dec
mov
fnstsw
xchg
ds
adc
push
or
stos
push
jle
sbb
hlt
push
roll
js
cmp
lods
add
sbb
push
es
icebp
or
jge
inc
mov
push
in
pop
sbb
inc
js
inc
xchg
fidivrl
inc
or
push
shufps
std
sahf
cmp
pop
jne
mov
and
add
sbb
xor
jl
or
jb
imul
pop
bound
adc
cmp
xor
in
dec
insb
add
push
fsubr
adc
xor
lods
fcoms
mov
popa
ret
mov
sub
es
mov
std
xor
cmp
push
lret
aaa
ds
call
int
jge
hlt
mov
sti
pop
push
icebp
mov
into
mov
mov
mov
or
adc
or
das
ja
inc
out
mov
adc
mov
mov
cmp
lods
mov
push
sub
mov
lock
rolb
into
adc
add
cmpsl
call
jnp
fdivl
push
loopne
push
add
call
and
int3
cltd
sbb
cmp
ret
mov
fwait
and
push
lcall
cmc
and
mov
jns
sub
and
fs
pop
and
inc
popl
aam
test
push
pop
les
and
jno
dec
clc
inc
xchg
je
cmp
rolb
push
jle
mov
inc
or
insb
adc
jnp
or
adc
inc
xor
and
fidivrs
js
pop
adc
ds
jecxz
inc
test
roll
mov
inc
sahf
fisttpl
mov
addb
out
ret
xor
sbb
test
mov
les
in
ja
lock
inc
fstpt
stos
mov
xor
pop
xor
mov
and
pop
testb
aas
shlb
cs
adc
push
pop
clc
scas
pop
xchg
arpl
mov
movsb
xor
dec
inc
cmp
cmp
dec
pop
push
or
sub
sbb
add
shl
xchg
jle
enter
xchg
xor
rolb
dec
pop
js
arpl
push
push
test
sub
push
popa
cld
out
dec
jo
nop
cmp
cli
push
pop
cmp
je
jecxz
movsb
xlat
sub
pusha
nop
rolb
arpl
push
jp
jbe
cmp
xor
mov
sarb
ljmp
push
loopne
mov
subb
int3
xor
mov
data16
addb
inc
mov
or
dec
sub
cld
mov
cli
pop
or
cmp
rcrl
rorb
inc
xor
aam
pop
jp
inc
mov
mov
call
cmc
aad
test
call
test
lods
or
sub
sarb
call
or
sahf
sbb
je
out
mov
pop
lock
mov
inc
cld
sbb
int
add
outsb
and
pop
negb
fdivrs
dec
mov
iret
stos
sahf
xchg
cmp
fstpt
mov
dec
lods
cmp
or
push
adc
or
jbe
cli
jecxz
push
push
lock
pop
mov
or
mov
inc
ret
mov
es
push
addb
call
lods
push
add
movsl
sbb
idivb
cmc
test
movsb
lea
std
mov
add
mov
and
roll
gs
hlt
out
fs
inc
and
popa
pop
jle
mov
sbb
cmp
loop
mov
adc
push
sti
push
and
mov
push
mov
cmp
outsl
sub
aad
dec
and
xor
sbb
sbb
or
push
add
clc
mov
cs
fimull
out
pop
adc
inc
dec
jge
loopne
cld
push
adcb
scas
ss
mov
sbb
lds
and
ss
bound
aas
fnstcw
jb
es
adcb
push
iret
cmp
gs
xor
leave
call
push
or
lds
mov
insb
push
icebp
out
sbb
pusha
or
mov
pop
add
push
adc
scas
nop
push
dec
and
mov
and
mov
adc
add
idivb
dec
jae
enter
clc
push
dec
push
jge
das
rolb
imul
pop
leave
jmp
adc
rorl
ret
leave
jo
clc
jo
ret
sbb
ja
mov
inc
lss
arpl
and
inc
lock
mov
scas
test
out
fs
mov
xchg
add
cmpsb
js
loope
sbb
aaa
in
ret
xchg
test
mov
imul
rclb
insl
pop
pop
pop
orb
jbe
fistl
fists
ja
jl
test
pop
or
mov
inc
mov
icebp
aad
mov
mov
cmp
adc
and
xchg
lock
push
dec
ficomps
add
sub
jo
aad
inc
lock
pop
loopne
add
mov
es
cmp
xchg
faddl
movsb
shl
push
lcall
xchg
push
mov
call
ficomps
dec
add
ljmp
jle
lods
subb
sbb
jo
sarb
pop
lods
iret
sbb
push
repnz
adc
or
mov
orb
inc
lret
jbe
int3
jno
movb
xchg
int3
outsb
icebp
outsl
shl
pop
cld
jns
repz
inc
stc
mov
das
stos
sub
mov
incb
sarl
lods
xchg
dec
adc
mov
clc
mov
inc
mov
ss
push
mov
pushf
lods
es
outsl
decb
notb
rcr
movsl
ja
mov
enter
rcrb
push
add
mov
icebp
rcl
lcall
mov
addr16
or
dec
enter
mov
jle
sbb
push
in
ficomps
and
ret
stos
sbb
inc
aad
xchg
mov
test
jmp
lock
in
mov
and
jmp
or
and
sbb
loope
pop
clc
pop
add
sub
pop
fisubrs
pusha
call
int
cmpsl
stos
dec
aad
xor
es
xor
ret
mov
pop
arpl
rolb
insb
pop
cwtl
js
cli
mov
nop
pop
cs
sub
pmuludq
xor
mov
sbb
js
jge
add
xchg
punpckhbw
xchg
push
data16
jg
out
xor
cltd
scas
ja
and
add
lock
fst
scas
mov
jmp
je
into
int
vmread
adc
pop
popa
lea
add
mov
sahf
cli
test
or
mov
adc
loop
add
cmp
out
adc
or
inc
xor
test
xor
xchg
mov
inc
movsl
sarl
shll
inc
mov
pop
sahf
pop
iret
mov
xorl
and
ss
aas
shll
cwtl
stos
ss
sub
fdivs
sub
hlt
mov
lea
pop
cmp
aad
stos
mov
inc
dec
cmp
mov
push
in
add
lcall
cmp
pusha
sbbl
xchg
test
aaa
out
xor
xchg
mov
gs
xchg
sub
lret
cmpsl
mov
mov
jg
mov
call
cmc
dec
in
jmp
jg
dec
jb
inc
rcll
fmull
rcl
cmp
push
dec
jg
sti
pop
and
mov
xor
dec
movsl
inc
mov
movsb
pop
xchg
jbe
mov
pop
popf
mov
jmp
jne
cwtl
sub
inc
push
aas
jbe
clc
xor
sbb
pop
adc
test
fcmovnb
sbb
xchg
leave
daa
adc
jg
stos
jp
mov
xorl
add
and
lret
or
insb
jo
push
mov
jno
pop
mov
sbbb
adc
sub
and
aaa
imul
cwtl
scas
pop
xchg
xlat
add
cwtl
mov
jecxz
aaa
jg
pop
push
cmp
add
add
orb
cmp
jle
leave
jns
mov
nop
inc
cmp
jno
xlat
jl
add
add
xchg
out
add
dec
cmpsb
push
pop
hlt
aas
jge
mov
dec
arpl
mov
add
mov
adc
lods
les
jecxz
icebp
fimuls
cmpsl
repz
lods
mov
notl
sub
mov
jbe
sbb
sbb
and
pushf
xor
pop
rcrb
popf
leave
xchg
shlb
into
adc
push
mov
movsb
in
adc
cld
or
add
push
sbbl
outsb
adc
lods
lahf
add
sbb
xchg
dec
cmp
xchg
loopne
ficomps
fwait
xorl
mov
cli
test
inc
push
lock
push
mov
int3
out
fsubr
push
inc
sbb
add
jp
aaa
push
fcoml
shll
cmp
mov
pop
push
outsb
ror
fadds
jmp
sub
shll
cwtl
fdivl
scas
ja
fnsave
jo
fsubr
sub
inc
add
xchg
fmulp
popf
aaa
sub
push
or
and
mov
push
sub
add
leave
outsl
jecxz
mov
add
or
scas
inc
int3
lcall
sbb
push
stos
push
xchg
xchg
sarl
les
or
in
sub
int3
in
xlat
pop
or
pop
nop
mov
cmc
imul
andb
call
enter
or
insl
pop
inc
test
movsl
mov
push
loope
or
pop
aad
je
mov
incb
sbb
cmc
inc
add
sbbb
int3
fimuls
rolb
rorb
arpl
cmp
hlt
xchg
pop
int
movb
sbb
pop
cmpsl
mov
push
xchg
add
subl
push
add
xor
dec
xor
mov
jecxz
jl
fbstp
and
mov
pop
ss
std
hlt
jbe
push
repz
mov
mov
sub
loop
cmpsl
test
cmp
sub
fsubrl
sbb
pop
test
movsb
cmp
jge
xor
dec
jb
add
xor
add
addb
pop
push
dec
cld
sub
fadd
fs
or
inc
and
push
arpl
mov
hlt
aaa
sbb
push
mov
push
cli
fldt
add
mov
rolb
repnz
test
and
fdivr
pop
mov
xchg
hlt
push
mov
dec
pop
or
inc
jae
dec
dec
bound
mov
jle
mov
push
daa
adc
clc
xchg
lods
xchg
icebp
cmp
cli
mov
popa
jl
add
add
mov
ja
clc
daa
push
xchg
jo
adc
and
mov
add
jmp
sub
std
xor
xchg
frstor
push
fisttps
xor
test
js
adc
mov
or
jg
jbe
mov
testl
push
push
pop
ja
mov
xor
ss
mov
ljmp
adc
add
arpl
fbstp
adc
addl
mov
sbb
cmp
or
imulb
and
scas
mov
fistl
lock
mov
sbb
mov
scas
popa
rclb
adc
push
loop
scas
adc
xor
dec
pop
sarl
mov
sbb
cmp
loope
fs
jo
dec
mov
mov
rolb
lcall
testb
xlat
aas
shll
fwait
cmp
or
in
mov
scas
mov
push
rclb
pop
je
jno
and
das
jg
jmp
out
sarb
sbb
mov
enter
xor
mov
repnz
mov
jl
push
movsb
pop
data16
sub
add
das
rcrb
cwtl
jg
into
inc
fs
xor
ret
jge
pop
mov
mov
jbe
lcall
add
add
je
inc
decl
cmp
das
jne
jno
mov
inc
cmp
stos
shrb
fistpll
mov
jmp
sbb
cld
add
test
sub
aad
clc
pop
jb
xchg
ja
js
mov
loop
add
mov
jbe
jae
jae
sbb
movsb
inc
mov
shlb
mov
or
daa
incl
mov
mov
push
adc
pop
ret
cmp
movsb
and
call
ret
std
test
and
repnz
rorl
mov
int3
dec
imul
incl
inc
sub
andl
bound
movsl
mov
sub
pop
cmp
pop
adc
fisttpll
xorl
sbb
push
ficompl
test
dec
push
cmc
and
cmpb
and
sub
inc
js
clc
cwtl
lods
inc
cmpb
jge
out
xor
ja
mov
inc
push
nop
or
mov
push
js
ja
and
add
iret
add
sub
movd
jae
in
fisttpl
pop
bound
mov
adc
clc
push
dec
sbb
push
or
mov
call
ret
enter
jb
rclb
fsubrs
bound
call
rcll
xor
dec
pop
xchg
pop
and
in
inc
ja
rorl
hlt
idivb
hlt
cltd
jge
movsb
pop
or
mov
dec
cmc
incl
push
into
shrb
ds
out
mov
pushf
jo
xchg
rcll
or
mov
jg
in
bound
pop
jl
or
test
cld
inc
fdivs
pop
push
push
movsb
test
dec
inc
xchg
or
inc
and
jecxz
call
adc
mov
mov
cmpsb
int
adc
sbb
rcll
mov
push
push
jl
inc
or
rcr
inc
cmp
mov
lea
dec
push
adc
fisubrl
sti
and
stos
or
xchg
mov
out
add
enter
cmp
and
and
add
outsb
mov
pop
xor
jae
jns
test
sub
fists
lock
inc
lock
pop
xor
dec
ja
xor
mov
into
add
nop
jne
cmp
sbb
aad
insl
clc
rorb
jo
xchg
stos
cmp
dec
push
inc
sbb
insb
push
adc
and
cmp
and
adc
not
out
dec
loopne
icebp
fcomps
add
push
daa
jo
outsb
mov
test
pop
andb
mov
and
call
mov
adc
dec
add
inc
or
fcmovbe
fiaddl
iret
pop
add
inc
popa
adc
mov
loopne
mov
mov
and
cmp
sti
xchg
clc
fwait
popa
lods
and
inc
std
push
xor
sbb
inc
pop
sbb
sub
add
lea
pop
loop
jo
sbb
ss
pop
xchg
stos
push
cwtl
cwtl
daa
call
push
dec
repnz
test
push
dec
mov
lret
cmpsb
add
adc
mov
les
sub
ja
inc
pushf
aam
sbb
lock
cmp
fidivl
xchg
or
mov
add
push
push
jno
or
sar
or
add
jbe
into
out
add
insl
sti
cmp
ret
fistl
jno
mov
fidivs
add
push
and
cltd
cli
in
mulb
xor
insb
out
hlt
add
mov
inc
retw
retw
xorl
xchg
sbb
mov
arpl
cwtl
in
fdivs
gs
dec
cld
stos
push
and
and
jmp
push
mov
dec
sbb
les
xchg
xorl
shll
stos
add
xor
xor
xor
test
and
xor
loop
push
stc
xor
xor
fstp
ficompl
pop
xor
cltd
sbb
dec
sbb
jns
mov
dec
lock
sbb
in
mov
movsb
and
pop
imul
fwait
sub
cs
pop
jl
xor
sbb
enter
popa
or
aaa
je
aad
add
stos
mov
call
push
movb
or
clc
xor
xchg
shr
dec
mov
jle
dec
push
enter
fwait
and
arpl
lods
loopne
pop
loope
mov
pushaw
pusha
inc
rcl
mov
jne
outsb
into
cmp
jg
inc
jo
cli
aaa
jp
ret
lret
std
aaa
shl
negb
push
rolb
insb
xor
pop
mov
dec
mov
mov
xchg
xor
or
mov
and
or
sbb
popa
jecxz
jmp
je
or
adc
mov
ss
cwtl
test
mov
adc
push
sbb
sbb
jb
mov
or
dec
movl
and
inc
fadd
pushl
push
nop
xor
mov
cltd
xchg
test
enter
and
sub
std
enter
push
addl
ja
out
add
out
mov
cli
adc
cmpps
xlat
fs
loope
sbb
fwait
sahf
or
jg
and
mov
xchg
push
lret
pop
pmullw
je
sbb
jle
aas
inc
sub
jbe
xchg
lods
mov
lds
mov
sub
jl
jo
movsl
xchg
into
pop
hlt
cs
popf
push
mov
sar
lods
sbb
movsb
sahf
sub
sbb
sahf
inc
inc
or
jle
scas
repnz
mov
mov
jp
or
cwtl
loope
fcomps
fnstenv
punpcklbw
enter
test
mov
mov
pop
hlt
adc
lcall
jne
push
jno
xchg
mov
mov
out
orl
not
stc
rcrl
movsb
xor
add
mov
dec
jno
pop
sbb
sbb
or
sbbb
jecxz
rcr
int3
test
subb
jbe
inc
les
les
fucom
lahf
inc
je
mov
ljmp
int
inc
imul
add
add
or
add
jbe
mov
dec
cld
mov
sub
xorb
dec
sti
inc
jmp
lret
mov
test
icebp
pop
repz
or
and
xchg
incl
sbbb
lcall
or
inc
jmp
jo
and
incb
pop
jo
pusha
jnp
shl
pop
pop
sti
loope
cmc
jp
js
ja
or
lcall
jl
jo
mov
mov
imul
xchg
hlt
inc
inc
lock
fwait
push
xchg
sbb
jg
arpl
jg
adc
das
jb
xchg
sbb
rcll
das
bound
mov
push
je
mov
in
iret
cltd
inc
enter
xchg
adc
cli
cmp
jecxz
mov
in
mov
int
lret
xor
add
add
cwtl
leave
or
lret
movsb
pop
or
xchg
add
lock
add
sub
cmp
in
dec
mov
sbb
cmc
nop
in
scas
cmc
nop
xchg
insw
xor
daa
shr
fcom
leave
je
lods
icebp
mov
mov
clc
fld
sub
fwait
dec
mov
push
lods
out
push
je
test
dec
loopne
dec
push
enter
and
cmpsl
repz
jge
jg
aam
stos
sti
cmp
es
pop
icebp
mov
fdivr
rcll
xor
rcrb
aas
mov
cld
fdivp
inc
xchg
add
mov
inc
pushf
and
decl
sub
fstpl
or
push
sbb
imulb
adc
jno
sbb
int3
cmp
aam
inc
popf
add
mov
add
jae
test
ficoml
cmc
push
movsb
dec
fadd
test
cmp
sub
mov
mov
std
out
mov
inc
jmp
sbb
sbb
mov
jne
ja
push
mov
push
mov
std
imul
or
xor
add
mov
xor
outsb
cld
adc
in
int
adc
push
or
push
jecxz
fsubp
xor
push
into
inc
xor
pusha
lea
add
or
fwait
in
ja
loopne
and
fistpl
ret
mov
cld
or
repz
jns
shrb
add
add
fisubrs
aad
popf
xor
sub
mov
iret
cmpsb
out
je
xchg
and
cwtl
mov
mov
repz
cwtl
mov
int
popa
in
mov
mov
sbb
adc
ret
inc
mov
sub
leave
shr
ffreep
loopne
inc
xchg
test
loopne
out
aam
cld
jl
add
pop
loop
loop
or
in
lods
ror
out
fidivrs
in
xor
cmpsl
ja
add
inc
adc
fsubs
js
xor
add
ljmp
push
push
lods
inc
mov
push
mov
mov
add
adc
or
dec
mov
xor
pop
sub
push
adc
push
dec
cmp
xchg
pop
leave
movsb
mov
push
ds
clc
in
pop
mov
mov
in
into
push
and
ss
or
sub
mov
and
incb
jge
outsb
pop
push
insb
in
rcl
cmp
lret
stos
sub
repnz
mov
pop
sahf
mov
add
es
rorb
filds
inc
ret
add
jbe
xlat
movl
lds
je
mov
loope
ds
jge
sbb
cmp
shll
outsb
xchg
stc
xor
mov
push
scas
movsl
adc
sbb
lock
mov
aad
mov
rcrl
scas
mov
push
push
call
movsl
mov
cmp
xor
and
loope
je
mov
push
push
addl
jmp
movsb
dec
mov
orl
lock
rcl
jo
pop
dec
sub
cmp
lods
into
pop
push
xor
pop
pop
bound
xor
inc
cmp
cmp
lcall
adc
mov
out
or
fcmovne
faddp
add
nop
outsl
cmp
test
mov
adc
repz
push
mov
les
test
xchg
hlt
in
sti
or
add
add
jg
or
fwait
sbb
ds
xchg
sbb
adc
sub
inc
xchg
dec
push
out
push
jg
xor
icebp
sbb
mov
jbe
push
sbb
mov
adc
and
sub
xchg
call
dec
int
mov
daa
fbld
loope
arpl
cmp
mov
enter
dec
cmp
xor
xchg
mov
pusha
std
mov
lahf
fwait
imul
and
mov
hlt
and
sub
pop
roll
roll
aas
nop
pop
call
movsb
das
dec
dec
dec
add
adc
pop
cmpsl
xchg
cld
xchg
sbbb
leave
aam
sbb
push
dec
lods
orl
xlat
jp
pusha
in
sub
outsw
mov
mov
mov
sub
pusha
movsl
add
mov
in
ret
push
rcll
mov
in
jecxz
out
xor
jae
lret
mov
test
mov
icebp
jmp
lds
aaa
jne
push
out
or
and
insl
es
test
nop
cltd
xor
pop
inc
movsl
mov
in
int3
xchg
cmc
dec
mov
lock
or
and
test
mov
jmp
xchg
pop
cmc
ds
jmp
pop
arpl
inc
or
jae
pop
push
clc
adc
mov
bound
cmc
lock
loop
orl
ret
sahf
jecxz
mov
mov
mov
popa
fstpl
jbe
pop
xchg
ret
push
jl
jno
pop
mov
sub
dec
mov
ja
xor
mov
add
push
out
xchg
bound
dec
imul
dec
lds
adc
stos
xchg
push
lea
or
pop
aas
lods
sarl
jp
adc
je
popl
inc
add
xor
imul
jbe
mov
mov
rcl
aas
lcall
mov
fsubl
add
testb
pop
enter
dec
out
stos
or
push
lock
mov
and
fwait
inc
addl
bound
clc
sub
mov
xchg
lahf
cmp
xchg
mov
push
fists
outsl
in
imul
out
xlat
add
scas
lahf
mov
mov
shrb
push
cmp
mov
jns
mov
mov
and
mov
cltd
ret
test
xchg
mov
hlt
sub
cli
mov
xchg
stos
bound
push
xor
push
pop
push
sbb
add
fsts
movb
inc
ds
xor
add
mov
inc
add
or
sbb
sbb
lret
lahf
mov
pop
mov
push
push
in
subl
jnp
pop
fistpll
scas
scas
pusha
xchg
cmp
push
push
outsl
outsb
out
sar
xchg
cmp
or
mov
pop
xchg
lds
sbb
insl
push
or
sub
bnd
and
fnstcw
or
andl
add
lods
mov
xchg
call
shlb
xchg
daa
loopne
jle
mov
fcomp
and
mov
popf
into
pop
mov
aaa
in
ret
decb
aam
stc
movsl
dec
fisubs
int3
not
xchg
ret
shll
dec
jne
or
xchg
dec
xorl
cmp
rclb
cli
push
cmp
jl
mov
lret
or
repnz
bound
xchg
xorb
sbb
xor
sarb
je
imul
decl
shl
sub
test
adc
fwait
pop
sti
lret
lret
cmp
rcrb
and
mov
adc
xchg
and
rol
lock
popf
xchg
add
xchg
repnz
stos
pop
jne
cmpl
adc
cli
out
fsts
cs
mov
mov
and
cmpsb
out
mov
sbb
test
movsl
mov
add
sbb
pusha
cmp
jae
xor
jp
mov
into
stos
mov
sbb
imul
dec
push
fstl
test
xchg
in
outsb
cld
push
fnstcw
mov
xlat
mov
lcall
das
mov
mov
fcmovb
sahf
sub
jnp
jbe
sar
data16
inc
and
icebp
out
cmpl
test
lcall
aam
inc
sub
xchg
lods
push
inc
scas
add
nop
outsb
inc
popa
into
daa
pop
sahf
mov
mov
cmpl
mov
lcall
sub
mov
inc
pop
inc
xchg
cs
cmpsb
test
call
dec
cmp
dec
adc
fwait
add
and
clc
inc
mov
popl
inc
daa
insb
mov
call
lea
ljmp
sub
aam
inc
dec
orb
call
ja
int3
out
add
ret
mov
adc
mov
lret
dec
add
add
insl
insl
fmull
dec
jb
movsl
int
jle
jecxz
ljmp
mov
fnstsw
and
sbb
add
xchg
mov
sbb
inc
dec
jecxz
dec
mov
push
pop
xchg
stos
inc
xor
dec
sub
push
sub
xor
pop
idivl
insl
jmp
xlat
incl
or
xchg
fsubs
fcoms
sub
jge
mov
xchg
call
nop
add
shll
mov
mov
add
sbb
aad
push
orb
lock
out
xor
movsl
mov
adc
lea
push
inc
test
and
clc
push
addb
push
sbb
and
jg
and
xlat
xchg
mov
mov
or
jo
inc
std
sbb
dec
lcall
clc
ja
and
cli
sbb
repnz
and
inc
ljmp
xchg
mov
hlt
xlat
cmc
out
cli
xchg
jns
add
shrd
pop
ret
out
sbb
ficompl
sahf
loopne
push
cltd
adc
jo
mov
adc
in
js
add
in
jmp
and
xor
loopne
in
movsl
addr16
incl
cmp
jp
mov
cmc
sti
mov
test
loope
gs
int
add
fildll
sbb
addl
or
adc
and
lock
mov
sub
leave
shlb
loope
cld
mov
loope
pop
inc
fs
in
lahf
lds
push
push
bound
mov
nop
mov
mov
add
cli
add
stos
xor
insl
scas
ds
pop
out
xor
inc
insb
ror
test
cli
lret
aas
pop
or
xor
sub
cld
das
dec
and
jno
or
outsl
hlt
push
push
mov
imul
scas
hlt
add
repnz
call
addl
lods
loop
xor
mov
dec
out
or
faddl
jmp
js
sub
outsl
mov
mov
pop
cwtl
jle
jecxz
xchg
dec
leave
add
adc
pop
test
arpl
scas
xchg
inc
clc
dec
rorb
in
insb
push
clc
xchg
sbbb
out
aad
pop
jle
sti
aas
add
adc
mov
ja
repnz
das
js
xchg
xchg
int
jnp
insb
xchg
mov
icebp
sub
dec
nop
js
or
out
popf
pop
add
stos
fsubrs
or
cld
pop
cld
dec
jge
test
sahf
adc
jp
or
dec
pop
mov
dec
ja
rclb
jmp
and
xchg
mov
lcall
adc
enter
push
lret
xchg
sub
rcr
flds
push
sub
aad
mov
fwait
ja
loope
jl
inc
test
xchg
mov
and
test
jecxz
adc
loopne
mov
or
aaa
addb
add
adc
shll
push
lret
pop
loopne
dec
sbb
lock
rclb
add
outsb
je
inc
stos
mov
aas
add
and
daa
dec
lret
xor
call
dec
or
push
xlat
aad
lods
adc
add
ret
pop
pusha
jmp
imul
add
add
repz
je
sbb
sbb
sub
add
roll
js
dec
sbb
add
jp
int3
pop
jne
lcall
fucomi
cli
orb
mov
sbb
aas
loop
xor
ja
jl
mov
mov
push
decb
xchg
adc
dec
insb
pop
and
pop
xchg
pop
shl
mov
inc
mov
loopne
test
scas
dec
mov
ret
sub
outsl
lahf
inc
xchg
mov
movsb
xor
and
sub
arpl
jg
or
aas
ds
dec
loope
je
adc
mov
xchg
clc
dec
out
xor
lea
idiv
mov
addl
outsl
addb
push
call
stos
sbb
ss
dec
pop
icebp
sbb
xchg
dec
sbb
or
jb
push
dec
mov
or
pop
hlt
or
inc
shlb
sahf
jmp
add
inc
fisubs
incl
or
andb
vpaddd
mov
lods
sub
in
cmp
pop
xchg
mov
inc
push
imul
add
or
in
pop
insl
xchg
xchg
fwait
enter
inc
inc
sub
shl
mov
movsl
mov
sti
imul
dec
mov
jecxz
inc
mov
add
ud2
mov
jo
incl
ret
fidivrs
pushf
pop
sbb
repz
ret
pop
mov
xor
daa
xlat
xchg
stos
popl
lods
mov
icebp
or
adcb
add
cltd
jg
xor
sahf
xchg
xchg
cli
mov
and
push
cmp
pushl
push
fninit
sub
pop
push
jne
jge
mov
sbb
stc
outsl
inc
xor
xchg
xchg
sbb
push
inc
xchg
lods
incl
mov
nop/reserved
ss
faddp
pop
shlb
ret
adc
cli
inc
or
sti
mov
jns
ret
or
inc
sub
pop
test
push
xlat
sbb
andb
stos
or
jle
dec
mov
test
push
mov
imul
out
pop
cmp
adc
jns
xchg
jns
ror
add
fwait
pop
mov
jp
mov
stc
mov
dec
xor
mov
ss
iret
dec
repz
daa
inc
adcb
sbb
xor
inc
inc
loop
mov
mov
xchg
idivb
test
sbb
shrl
lds
insb
jg
test
add
mov
outsb
and
push
cmp
lret
fbld
mov
imul
add
add
add
rcll
cmp
adc
xchg
mov
fisttpll
cmp
add
std
sbb
mov
dec
or
pushf
fsub
mov
cli
mov
test
pusha
dec
into
mov
xor
enter
fcoml
jmp
push
outsl
ja
xor
cs
xchg
xor
adc
and
mov
test
pop
lret
mov
jae
push
pusha
mov
test
and
adc
sub
cli
sbb
decb
in
pusha
jecxz
popf
ror
pop
mov
xor
lret
push
gs
push
mov
adc
stos
call
xchg
inc
rcr
pop
ret
lcall
gs
gs
xchg
outsb
inc
adc
std
lods
jb
decl
push
ffreep
add
dec
call
mov
inc
lods
dec
out
aaa
daa
sbb
je
push
dec
mov
arpl
jmp
and
inc
xor
rol
rorl
sbb
push
inc
dec
pusha
shlb
pop
call
mov
out
fisttpl
adc
xchg
dec
dec
cmp
mov
rorb
mov
jne
mov
jmp
mov
and
xor
sbb
dec
test
ljmp
cmp
add
push
xor
popf
xor
and
test
imul
lods
dec
and
inc
rcll
fdivrl
add
xor
je
test
les
sbb
mov
aam
idivb
sbb
movsb
out
mov
and
loopne
in
movsl
rorl
insl
fsubl
jge
inc
mov
mov
test
cmpsl
scas
xchg
sbb
gs
add
mov
repz
add
es
mov
repz
mov
ljmp
mov
cwtl
sbb
loop
sbb
shll
js
xor
addr16
dec
into
cwtl
jmp
xor
or
lret
cmc
insl
jno
xchg
fdivrs
es
push
dec
lea
sbb
mov
and
adc
push
les
js
adc
and
lret
mov
mov
sbb
pushf
das
pusha
dec
sub
inc
in
sub
int
push
add
shlb
ja
imul
push
adc
ret
cli
cmp
imul
roll
inc
cmp
cmpsl
sbb
pop
js
mov
mov
mov
and
push
inc
or
ret
xorb
inc
and
ret
shlb
jno
mov
popa
dec
mov
cmp
stc
or
movsl
ds
pop
xchg
cmp
and
pop
or
cmp
fistps
adc
dec
seta
pop
pop
pop
lea
les
popa
inc
test
mov
sahf
ds
and
fistpll
dec
inc
jbe
lcall
mov
mov
xor
enter
mov
call
popf
dec
addr16
push
and
es
inc
sub
dec
aas
inc
pop
sub
stc
pusha
inc
jle
sbbl
mov
push
mov
notb
lcall
and
push
js
shll
aas
push
pop
orl
fisubrl
hlt
sbb
jns
rcr
mov
fsubrl
icebp
loopne
stos
inc
aas
dec
outsl
inc
pusha
cwtl
cli
mov
jb
push
pop
ja
jne
std
aad
xor
loop
pop
clc
add
cmp
hlt
mov
dec
lret
cmp
test
ja
stc
or
or
jecxz
fistl
gs
lods
testl
pop
push
stc
rorb
xchg
jae
mov
scas
imul
lock
int
and
in
shr
roll
add
xchg
imul
mov
mov
add
adc
mov
cmp
mull
push
in
sahf
stos
lods
rorl
add
shl
pop
xlat
pop
es
cmp
ljmp
insl
call
insb
ret
enter
pop
inc
mov
out
cmp
xchg
shll
jnp
push
lock
mull
sub
test
test
mov
out
adcl
insb
aaa
cld
addb
aad
push
shl
into
fists
cmp
jp
xorb
movsl
mov
aas
gs
movsl
and
or
lret
jl
iret
leave
ja
mov
cltd
loopne
jg
in
enter
mov
sti
mov
movsl
arpl
sbb
les
jb
cmp
sti
push
decb
inc
es
or
enter
scas
cmp
in
jge
xor
dec
or
stos
ficoml
pop
pop
clc
push
stos
jg
xchg
ljmp
dec
jecxz
and
js
jo
popa
icebp
mov
pop
pop
dec
cmc
inc
adc
test
and
insb
push
add
adc
or
push
add
add
xorl
shl
lock
incl
add
push
popa
imul
imul
xor
cmp
push
inc
js
idiv
gs
imul
gs
push
gs
outsl
insb
jne
dec
outsl
jne
je
inc
jnp
push
outsl
imul
test
fcmovne
mov
outsw
pop
inc
gs
jne
inc
outsl
insl
insl
push
loopne
out
sub
xchg
insb
ja
adc
xorb
cmp
push
dec
inc
fwait
out
insl
xorl
jo
addr16
cli
jbe
and
loopne
rcrb
adc
jae
jb
gs
outsl
jb
gs
lods
mov
mov
jb
push
sbb
xor
push
jo
jae
loopne
mov
jns,pt
inc
ss
jle
jnp
push
inc
jb
dec
inc
dec
inc
daa
push
imul
mov
inc
pop
arpl
jmp
sbb
popa
fs
and
jo
out
xor
and
pusha
jbe
jns
sub
ret
xchg
fs
mov
push
and
cmpsl
mov
icebp
push
jle
push
and
int3
jae
addr16
testl
xor
or
fsubrs
or
push
enter
je
cmp
test
push
xchg
pop
popa
nop
xor
pushf
lock
sbb
insb
arpl
frstor
jns
jo
ja
xchg
imulb
cmp
mov
sbb
push
inc
mov
jb
adc
jns
in
out
inc
int3
pop
movsb
mov
js
push
inc
movl
pop
sub
jbe
shrl
insb
ja
add
inc
jne
mov
inc
inc
inc
sbb
lahf
cmpsb
inc
cmp
mov
dec
cld
mov
fsts
sbb
pusha
out
outsb
imul
push
cmp
push
jb
push
fdiv
cmp
jl
testb
cmp
lret
fs
xor
imul
outsb
cli
addr16
ja
jae
nop
outsb
xor
dec
outsl
xor
sub
xchg
fsubs
hlt
pop
shlb
sub
rorb
cmpsb
sbb
push
push
lahf
outsb
dec
add
mov
sbb
jae
inc
xchg
inc
adc
data16
mov
pop
adc
sbb
lods
outsb
inc
insl
ljmp
jp
mov
gs
outsb
push
jo
and
imul
fs
loope
pop
mov
jae
mov
pop
pop
roll
loopne
sbb
in
jb
sub
jae
fstcw
mov
push
jne
cmc
in
jge
jns
lods
push
arpl
outsb
dec
scas
ret
mov
ja
call
into
push
push
sub
inc
and
sarb
mov
xchg
movsl
popf
xor
sbb
pop
inc
push
cmp
pop
sbb
lock
test
dec
dec
dec
dec
ja
aad
push
mov
enter
imul
inc
push
ret
jns
lock
stos
push
xor
roll
xchg
pop
push
mov
dec
in
data16
push
stc
adc
pop
mov
outsl
les
es
in
sbb
dec
jnp
mov
int3
je
inc
mov
addr16
mov
or
outsl
imul
mov
lret
push
mov
pop
popa
pushf
mov
mov
sbb
jo
aad
cmp
loop
push
sbb
push
sbb
cmp
mov
aad
adc
bound
cmc
loopne
pop
jecxz
bound
or
push
jle
push
jns
je
sbb
sbb
nop
sbb
or
ficompl
pop
pop
add
or
lock
shrl
pop
sub
xchg
pop
jns
adc
in
inc
dec
jb
pop
and
inc
fs
pop
ljmp
shll
js
xor
and
rcll
lock
inc
push
xchg
loop
mov
fbstp
fimull
pusha
das
sbb
xor
insb
aaa
sub
scas
push
jle
mov
xor
pop
pop
ss
rcll
jl
inc
sbb
jbe
sbb
sbb
cwtl
pop
adc
xchg
pop
or
cmp
or
dec
out
jae
jecxz
adc
gs
sbb
sbb
and
imul
dec
repz
dec
outsb
outsl
xchg
jns
fistl
push
mov
inc
repz
or
xor
sahf
adc
das
inc
jne
push
push
js
int3
push
adc
mov
insb
push
cmp
cmp
insb
std
inc
jae
adcb
popf
pop
xor
in
add
xor
das
sub
mov
pop
inc
sub
add
arpl
adc
push
lcall
outsl
sub
jb
jbe
cmpsb
dec
shrl
fisubs
inc
gs
out
xor
addr16
pop
mov
outsb
dec
sbb
int3
nop
mov
fs
aaa
push
jbe
push
popa
xchg
arpl
cwtl
sbb
rcrl
pop
inc
inc
decl
mov
inc
add
dec
add
leave
hlt
aas
stc
add
test
add
add
add
out
divl
add
popf
or
push
inc
pop
std
std
sarb
add
add
push
push
adc
adc
add
mov
nop
pop
mov
and
insl
add
js
divps
add
or
pusha
cs
in
pop
push
push
call
loop
inc
add
lcall
dec
add
rcrb
and
push
cs
in
push
add
dec
repz
push
fdivl
xchg
dec
roll
dec
xchg
lock
add
lcall
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
mov
inc
