push
call
ret
ret
lds
dec
mov
cmp
adc
ret
inc
adc
movsl
inc
jl
in
sub
into
add
xchg
cwtl
ss
test
xor
ret
call
cmp
ja
mov
outsl
cwtl
imul
notl
rcl
mov
dec
into
lahf
stos
or
push
ss
leave
and
shlb
in
cs
ror
ret
sbb
lret
pop
jmp
shlb
sti
xor
sbb
jle
push
imulb
lock
data16
add
pop
lret
cmp
mov
mov
pop
pop
xchg
pop
jge
out
imul
xorb
negb
jl
push
mov
lret
ljmp
repz
inc
lahf
lock
mov
shrl
dec
mov
jecxz
add
ss
and
cmp
xchg
pop
sbb
ds
into
and
call
xor
mov
mov
lods
es
mov
jno
mov
iret
jns
xor
test
xchg
sbb
cmpb
push
call
mov
dec
pop
jmp
lock
lcall
icebp
into
fnstenv
mov
faddl
fidivs
sub
sbbb
push
insl
into
add
lret
lea
test
pop
fcmovnu
xchg
stos
clc
xchg
mov
add
fsubrp
pop
rclb
cmp
les
pop
clc
ljmp
into
adc
rcr
fs
out
push
mov
in
jg
pusha
cli
dec
enter
pop
test
adcb
xchg
dec
jnp
lsl
cmp
mov
push
aam
xchg
xchg
xchg
idivl
xchg
es
idivb
mov
fidivrs
sbb
outsl
push
push
pop
and
stos
dec
adc
test
int
enter
movsb
loope
or
ficomps
sub
dec
stos
js
and
hlt
jnp
aad
xchg
mov
lock
push
jle
rolb
push
add
xor
jmp
shll
mov
outsl
mov
popf
cwtl
adcb
jb
jecxz
cltd
imul
dec
stc
jge
popf
rcrl
scas
mov
sub
xor
repnz
cli
adc
cltd
movsl
sarb
inc
inc
jb
movsb
mov
pop
popa
sarl
ret
and
mov
ja
aaa
adc
jo
mov
je
inc
dec
mov
stc
push
in
mov
ret
pop
and
popf
mov
jno
pusha
imul
xor
sub
cmp
jp
adc
or
mov
xchg
imul
leave
aad
repz
inc
cmp
mov
cmp
outsl
aas
mov
sbb
xchg
in
mov
jns
mov
cwtl
leave
adc
divl
and
sarl
jns
push
adc
sub
pop
shl
fwait
ja
loope
addb
int
or
sarb
xor
enter
scas
sbb
and
pushf
sti
int3
gs
adc
add
xor
and
sti
inc
mov
pop
pop
stc
and
or
jbe
lahf
mov
fcomi
lods
movsl
and
pop
fwait
or
imul
pop
xchg
sti
int3
mov
xchg
mov
roll
push
int
pusha
mov
dec
iret
pop
inc
mov
daa
and
cmpsl
arpl
sub
jl
shl
adc
pop
cwtl
addl
cld
loope
sub
leave
pop
mov
push
sbb
repz
xchg
out
shrb
add
sub
adc
jmp
xchg
sub
je
es
cli
mov
push
testb
mov
rolb
pushf
pop
sub
leave
and
movsb
push
dec
jns
mov
scas
push
and
dec
dec
mov
jp
xor
imul
jbe
ret
pop
sahf
pop
cltd
mov
sahf
scas
out
and
xchg
sbb
mov
ret
int3
inc
mov
mov
fucomip
push
and
stos
subb
mov
js
jnp
popf
push
jge
sarl
in
sbb
daa
pop
in
mov
push
iret
mov
inc
rcrl
mov
sbb
aam
sbb
mov
inc
adc
lds
rorb
stos
imul
es
xor
inc
in
xor
int
lock
and
test
jge
adc
cmc
sarb
loopne
icebp
adc
fcmovnb
xor
xchg
out
repnz
add
mov
mov
add
in
inc
aaa
movsl
mov
sbb
loope
gs
fldt
cmp
orps
repz
addl
jae
adc
xchg
ret
sub
mov
cmp
int3
mov
cltd
pop
push
enter
negb
jle
ds
cmp
pop
xchg
ss
jmp
xchg
pop
mov
insl
add
test
pop
sub
lods
nop
xchg
int
js
cmp
in
mov
pop
ljmp
cwtl
pop
pop
sbb
sbb
lret
push
push
jne
cwtl
ds
mov
fbld
sbb
mov
outsl
pop
iret
in
clc
dec
adc
ds
jnp
sbb
mov
cmpl
xlat
xchg
dec
shll
das
inc
inc
into
sub
dec
pop
push
push
mov
lret
sbbl
subl
xchg
fisttpll
aas
out
testb
sub
mov
sbb
jae
shlb
cmp
mov
jecxz
imul
dec
pop
or
dec
movsb
mov
jg
faddl
stos
cmp
imul
test
add
xor
inc
xor
das
insb
out
leave
les
imul
or
test
inc
inc
mov
js
ror
aam
or
inc
mov
mov
sbb
mov
leave
fs
push
sbb
loopne
ss
mulb
push
popa
addr16
cmpsb
sbb
inc
jg
sub
jne
or
ja
imull
xchg
lods
aad
xchg
add
mov
lcall
popa
sahf
cmp
push
cmp
push
popa
inc
call
sbb
pop
ljmp
sub
inc
je
fcmovb
ficomps
sbb
leave
outsl
push
pushf
sub
xchg
cmp
or
cmpsl
in
and
data16
daa
pusha
push
add
test
sub
xchg
insl
test
or
ds
sti
stc
mov
push
push
push
pop
ret
addb
or
aaa
dec
pusha
fisubl
push
fs
ficompl
inc
and
inc
inc
fists
sub
dec
xchg
push
sub
in
and
pop
movsl
mov
or
pop
mov
adc
push
jb
shll
pop
mov
lods
hlt
mov
aaa
fstps
dec
mov
out
std
test
imul
push
xor
gs
test
rcrb
mov
pop
cmp
cli
push
jnp
mov
in
fnstcw
sbb
fiaddl
lea
mov
popa
xchg
jge
jo
jbe
mov
jb
movsb
pop
jmp
inc
push
in
lock
mov
mov
adc
faddl
imul
andl
test
test
in
adc
les
lret
mov
loop
mov
lea
outsl
mov
jno
xor
cmpsl
adcl
clc
push
sti
mov
inc
rcrb
lods
dec
fwait
jl
outsl
xor
inc
inc
jl
cmp
fwait
push
arpl
pushl
filds
cmpsb
out
lcall
adc
ficoml
std
dec
pop
inc
imul
test
out
jae
jno
sub
pusha
adc
push
and
mov
pop
setne
icebp
push
ret
push
rolb
lds
je
mov
jne
pop
lcall
adc
push
sbb
int
xor
ja
testb
xchg
push
fbld
xchg
out
mov
xor
stos
jne
stos
ficoms
outsb
rclb
sub
ss
stc
ret
lahf
adc
lea
inc
call
mov
pop
sbb
mov
mov
in
aaa
jb
xchg
jmp
xchg
mull
cmp
cmpsb
or
jmp
in
and
sbb
sti
movsb
loopne
push
test
xor
bound
rep
les
repz
xchg
jne
rorl
lsl
shlb
and
xchg
das
rcr
cmp
dec
aaa
jnp
fs
xor
sbb
or
or
lcall
or
jl
out
mov
jp
imul
pop
sarl
dec
lret
pop
mov
pop
jp
add
push
xor
pop
mov
sbb
call
lahf
mov
cltd
fcomi
cmp
mov
pop
incl
jmp
sbb
push
add
lret
add
addr16
add
mov
popf
pop
jmp
push
test
or
xchg
mov
das
xor
mov
mov
test
sahf
inc
movsl
and
mov
sub
ss
xor
cmp
es
stos
sub
mov
cmpsl
dec
jge
inc
add
fwait
stc
out
daa
or
adc
das
pop
rorb
dec
outsl
lret
push
push
lahf
sbbl
jle
popl
pop
sub
cs
mov
stc
aas
pop
pop
movsl
mov
inc
sub
fcomps
repnz
lret
jg
mov
cmp
adc
cmp
jg
jae
je
jae
fidivrs
xor
or
pusha
das
sbb
gs
pushf
mov
stos
je
jecxz
or
cmc
xchg
out
sti
mov
jno
adc
mov
push
lret
mov
xchg
fisubs
dec
jae
mov
jne
pop
xchg
adc
add
push
jl
in
gs
testl
cmp
xor
sub
shrb
xchg
jmp
testb
dec
mov
xor
push
push
pop
stc
test
cmp
iret
cmp
pop
xor
outsl
fdivr
clc
in
pushf
cwtl
cmpsb
inc
mov
stc
test
andb
into
push
and
out
inc
jne
jnp
or
pop
inc
es
adc
test
test
push
out
inc
add
imul
mov
pop
inc
sbb
arpl
push
clc
ljmp
out
push
xchg
jno
test
stos
cmp
dec
inc
daa
mov
mov
inc
add
mov
cs
mov
xchg
and
iret
call
arpl
jecxz
inc
jne
std
inc
ret
mov
push
and
lcall
andl
scas
cltd
sarb
sub
insb
cmp
ret
mov
sbb
lret
and
mov
loope
cs
test
aaa
jmp
imul
jmp
mov
ret
int3
mov
sbb
fchs
dec
mov
jo
mov
fisubl
or
rcrb
inc
add
mov
cmp
fisttps
in
dec
mov
loopne
add
mov
mov
gs
lods
or
jne
insb
loopne
in
dec
mov
nop
call
jl
adc
or
dec
bound
xchg
xor
push
mov
mov
sbb
pop
mov
xchg
stc
outsl
push
out
shr
lahf
mov
stos
sub
in
push
dec
lret
adc
addl
repz
les
cmp
lock
out
test
adc
sub
clc
sub
mov
push
add
insb
mov
ja
and
lcall
gs
repnz
and
bound
test
orb
inc
push
movsb
int3
shlb
stc
fnstcw
stos
cmc
scas
sbb
mov
mov
out
les
sbb
in
push
test
in
dec
gs
jo
fwait
or
lret
ljmp
and
sub
sub
lcall
test
clc
das
unpckhps
js
mov
shrb
cmpsb
push
xchg
cmp
ljmp
mov
mov
hlt
int
mov
add
xchg
fldl
add
add
fildl
sub
fidivl
lahf
and
or
fs
pop
xchg
jns
lret
jnp
fmul
jo
xchg
jmp
push
js
addr16
imul
jge
pop
pop
pushf
sahf
pop
add
icebp
fcmovnu
or
ja
sub
jg
or
push
sbb
xchg
icebp
mov
arpl
ljmp
jnp,pn
leave
ret
jmp
mov
jne
popa
popf
std
ret
popa
fists
mov
mov
xchg
push
push
and
xchg
dec
jmp
cwtl
loope
cmpsb
out
es
add
xor
dec
div
das
mov
out
xor
sub
push
pop
mov
pop
int3
divl
cmp
fs
jmp
shll
xor
cmp
adc
imul
int3
pusha
mov
push
loop
ret
sub
sti
sbb
dec
and
jo
cmp
dec
jp
and
aam
nop
fsts
stc
fimuls
sub
rorb
and
pop
inc
test
sbb
adc
pop
or
test
stc
fidivrl
iret
xor
mov
mov
mov
push
push
cmp
bound
xchg
stos
cmp
cmc
adc
add
add
leave
test
clc
popf
or
daa
out
gs
loop
mov
jo
ret
aam
leave
xchg
std
jl
xor
mov
divb
cmp
jb
scas
sbbb
icebp
data16
jge
fmul
movsb
in
mov
mov
cmp
loopne
mov
push
mov
mov
jge
cmpsb
repnz
das
pop
in
fwait
mov
movsb
arpl
rorl
and
mov
xor
test
xor
movl
popa
cld
or
popa
shrl
adc
xor
das
scas
bound
pop
pop
cld
sahf
adc
jle
cs
sub
xorl
shll
push
jae
adc
jno
dec
jnp
es
jno
dec
pop
leave
mov
insb
scas
in
aad
nop
cmpsb
jns
ret
repnz
dec
out
out
inc
cltd
adc
out
inc
cmp
cmp
and
scas
sub
shll
scas
mov
sbb
mov
iret
push
imul
stc
push
shll
jecxz
arpl
fisubs
lea
dec
imul
mov
inc
cwtl
stos
mov
mov
fwait
sub
sarb
mov
adc
test
pop
jns
pop
mov
fs
mov
mov
mov
add
inc
call
into
lea
cmpps
js
inc
cwtl
xchg
push
inc
leave
cs
xchg
ds
subl
inc
mov
jnp
mov
fstl
or
addr16
inc
call
subl
fwait
scas
out
xchg
shll
xlat
outsb
push
popf
ja
pop
daa
inc
rol
or
cmp
add
popf
mov
push
jle
cli
mov
mov
fmuls
sub
jno
fdivrs
cli
cwtl
test
sahf
xchg
mov
call
sahf
nop
sub
les
cmp
push
jae
lock
jmp
outsl
movsl
and
and
mov
xchg
movsb
adc
out
movsl
ret
aaa
cmp
icebp
lcall
fstpt
dec
push
mov
arpl
sbb
push
jne
adc
and
ljmp
and
stos
xor
test
inc
push
xchg
jmp
cmpsb
stos
inc
sub
pop
pop
pop
decl
scas
and
and
sbb
rcrb
jne
ret
scas
adc
push
iret
add
or
pop
sbb
fwait
leave
fnsave
sub
movsb
bound
or
ds
push
fidivrl
rolb
mov
xor
lret
je
pop
imul
sbb
pop
in
mov
icebp
fisttpll
lock
sarb
mov
jns
jp
sub
fldt
mov
je
ja
xlat
mov
push
mov
maskmovq
fwait
or
repnz
fdivp
add
iret
addr16
push
fcoms
loopne
cmpsb
out
imul
test
jne
pop
sbb
or
ljmp
push
xchg
pop
enter
je
jp
add
leave
movsl
add
movsb
adc
xor
jae
in
cmpsl
popf
sbb
stos
scas
pop
cwtl
sub
stc
lcall
jp
inc
pop
loope
sbb
das
sbb
ds
mov
sbb
and
loope
pop
cmp
int3
in
mov
or
repz
jbe
cltd
jb
repz
lahf
int
ret
mov
or
pop
aam
fistpll
sbb
gs
adcb
addr16
mov
insl
aad
popa
icebp
mov
aaa
clc
call
and
push
jb
bound
add
xchg
cltd
ljmp
mov
addr16
or
lea
push
aad
xchg
hlt
pop
mov
dec
adc
sub
aas
jg
pop
jp
mov
mov
imul
test
jbe
pop
negl
xchg
push
add
add
gs
ret
stos
loopne
shl
mov
pop
inc
gs
mov
mov
pop
mov
sbb
jle
aas
mov
sub
or
daa
xor
ds
sahf
mov
xchg
and
and
pusha
sbb
xchg
lds
int3
mov
es
dec
or
les
sbbl
sub
out
inc
inc
sbb
sub
and
or
ss
mov
mov
xor
cli
out
xchg
or
data16
ror
fstpl
jl
fldcw
sbb
movsl
mov
lret
add
xchg
les
pop
lds
rcll
pop
xchg
je
jmp
mov
push
pop
aaa
mov
mov
push
xorb
add
sbb
cmpsb
test
and
mov
aam
insl
fidivl
test
sbb
cmpb
sbbl
inc
add
ljmp
mov
mov
mov
pop
movsl
cmp
into
clc
jo
mov
xchg
pop
sub
test
sbb
xchg
int
inc
fisttpl
aad
mov
jecxz
mov
pop
sub
cmp
mov
shrb
sub
lret
outsl
jecxz
mov
jno
pushf
ret
fsubrp
in
insl
jb
inc
push
lods
hlt
pop
lock
hlt
sbbl
in
sub
xor
imul
mov
enter
imulb
stc
movsl
pop
xor
and
cmpsl
cltd
test
imul
xchg
lea
adc
aaa
adc
adc
and
jg
out
inc
imul
inc
repz
jle
adc
test
ds
pop
or
xlat
enter
adcl
mov
mov
push
popf
int3
ds
notl
add
repz
xlat
add
out
xor
dec
xchg
mov
hlt
sbb
data16
xchg
add
femms
xor
cwtl
mov
dec
call
in
cltd
push
repnz
cmp
mov
sar
icebp
addr16
pop
outsl
cltd
stos
xchg
cmp
pushf
divb
ss
test
cmpsb
cmp
aas
adc
inc
dec
and
xchg
sbb
stos
pushf
outsb
in
icebp
sbb
push
pop
fldl
cmp
outsb
xchg
outsb
sub
loope
push
test
leave
lds
cmp
push
loopne
pop
cmp
and
movsl
lock
sub
lock
clc
xor
inc
mov
xrelease
add
dec
out
fwait
pop
shl
push
or
mov
ljmp
arpl
dec
mov
sub
pop
mov
sbb
rcll
orb
aam
xchg
mov
and
out
leave
sub
mov
out
das
scas
dec
fucomp
test
hlt
das
pop
stos
dec
in
sub
inc
iret
leave
sub
mov
mov
sub
sub
rcrb
mov
std
cmp
test
jbe
les
cltd
inc
fists
fwait
test
push
mov
fcoms
jns
outsb
mov
jbe
inc
in
or
insl
repnz
pusha
mov
cs
adc
xor
insb
lret
add
mov
or
push
sbb
mov
outsb
cmp
loopne
outsl
cmp
mov
pop
or
movsl
out
xchg
inc
je
dec
and
inc
cmpsl
hlt
xchg
mov
mov
shl
dec
imul
mov
xor
adc
sar
push
sahf
pop
lock
sbb
ja
or
test
add
jl
cwtl
dec
roll
incl
xchg
jle
jmp
xchg
and
inc
subps
loop
sub
xor
add
push
imul
sbb
repnz
jle
inc
jmp
scas
test
cld
pop
cmp
ret
cld
into
sub
xchg
ret
xlat
popf
jge
outsb
pop
push
das
and
adc
pop
pop
push
aad
les
incl
xchg
imul
ret
or
stos
sbb
lea
and
repnz
cltd
std
inc
dec
or
jmp
lahf
lods
hlt
nop
mov
mov
imul
adc
fsts
sti
pop
jne
fs
gs
fbstp
xor
fisubs
cmp
adc
sbb
shlb
xor
sbb
daa
imul
loope
andb
bound
add
push
aas
enter
fiaddl
inc
mov
pusha
jne
adc
repnz
outsl
jge
shrl
test
xchg
pop
int3
ret
mov
mov
outsl
mov
cmpsl
or
mov
inc
outsb
jmp
dec
cmp
popf
mov
sub
xor
adc
cmp
adc
mov
xorl
cmp
dec
loope
and
stos
xchg
push
out
shr
mov
jecxz
sahf
or
shlb
sarb
mov
jp
fistpl
test
inc
add
dec
mov
pop
cmp
fwait
shlb
push
gs
adcb
ficompl
test
xor
dec
sub
pop
gs
stos
das
jp
pop
mov
stos
xor
fldenv
icebp
push
lods
pop
adc
add
sub
test
insl
mov
xor
adc
sbb
cmp
cmp
pop
mov
pop
cmp
jge
sbbl
into
inc
adc
into
dec
repz
idivb
jl
mov
mov
jl
sub
test
popa
pushf
push
nop
jno
sahf
cwtl
or
fcoml
sub
cmpsl
adc
hlt
add
push
test
mov
popa
jnp
cmp
outsl
push
dec
idivl
inc
xchg
cmp
push
jno
and
insb
mov
inc
bound
mov
test
movsl
mov
mov
mov
ds
mov
xchg
test
fldenv
int3
pop
xchg
pop
push
adc
mov
pop
dec
push
push
dec
enter
adc
cmp
inc
testl
enter
scas
sub
jbe
subl
push
push
gs
mov
jecxz
dec
lret
testl
dec
outsl
dec
in
test
xchg
ds
cwtl
cmp
push
inc
pop
cmp
ficompl
jo
out
sbb
hlt
cmp
je
jae
outsl
xchg
fnstcw
into
mov
movsl
fdiv
sbb
add
push
rcll
jmp
fistpl
pop
ret
imul
xor
mov
cmp
loopne
std
or
cltd
mov
fidivl
mov
mov
sbb
call
adc
mov
fabs
mov
sub
push
rcrb
jbe
dec
mov
idivl
in
jl
cvtps2pi
call
xchg
pop
xor
sti
mov
jnp
mov
xchg
pop
stos
outsb
ja
mov
lock
jno
popf
stc
mov
inc
xchg
in
xor
pop
insb
pushf
subl
and
fisubs
dec
push
pop
cltd
mov
int
icebp
sahf
scas
aas
xchg
int
hlt
xchg
and
in
loope
es
out
addb
js
jne
sbb
notl
xchg
cwtl
jp
sahf
loopne
jmp
xchg
bound
fldenv
add
andl
es
enter
loop
jle
adc
jno
push
mov
push
ljmp
sub
fistpl
sbb
arpl
ret
xor
gs
xchg
pushf
std
in
nop
call
push
jl
or
aas
pop
stos
sub
mov
sbb
ds
add
jb
cmp
sub
jle
cmpl
or
jp
mov
sbb
fs
mov
mov
pop
and
lahf
jae
es
stos
mov
lds
mov
iret
pop
aas
enter
in
jp
movsl
das
mov
icebp
add
dec
cli
enter
mov
mulb
mov
nop
add
mov
test
sub
pop
arpl
xlat
add
gs
mov
enter
xor
mov
fcmovnu
stc
roll
xchg
jg
xchg
mov
push
mov
or
cltd
in
in
xchg
pop
les
push
mov
pop
dec
fwait
lds
aad
and
addb
testb
mov
xchg
push
addr16
fdivp
fstps
inc
les
push
ja
pop
mov
insb
js
xchg
sbb
or
mov
in
shll
fsts
dec
out
rorb
jae
in
outsl
sub
call
rcl
push
call
sbb
pusha
fnstsw
loopne
lret
jb
add
sub
out
rol
jg
nop
xor
loop
jmp
lods
cmp
outsl
lret
inc
mov
popf
fs
mov
pop
mov
movsl
sti
pop
mov
sub
mov
xor
sti
xchg
push
cmp
pop
js
inc
adc
loopne
out
je
xor
sub
xchg
frstor
or
xchg
mov
fiaddl
cmpsb
pushf
adc
outsb
sub
mov
push
fidivl
in
icebp
insb
outsb
test
fdivl
mov
mov
cmpsl
dec
pop
repz
mov
mov
out
jle
push
out
subb
sub
icebp
dec
adcb
lock
fwait
sarl
and
lds
les
xchg
mov
mov
dec
cmp
jae
bound
jmp
cmp
pop
inc
shll
popa
inc
xchg
js
xor
jle
jle
arpl
xor
inc
xorl
pop
ja
xchg
xor
lret
push
sahf
xchg
add
inc
sub
add
push
repnz
in
out
adc
jbe
cwtl
popf
mov
add
pop
mov
and
push
xchg
inc
sbb
fcomi
xchg
and
cmp
sub
jl
cmp
jno
cmp
je
inc
mov
daa
out
and
push
dec
pop
bound
mov
mov
lret
mov
pop
bsr
loop
xchg
adc
leave
mov
lods
stos
add
data16
xchg
in
xor
push
test
icebp
and
cwtl
cmpsl
add
add
dec
pop
jae
ja
pop
jnp
lahf
cli
mov
lret
outsb
pop
sub
inc
inc
or
ss
ret
push
push
fstpt
stc
iret
and
jno
xor
cmpsl
cmp
dec
cmpsl
jbe
shrb
jns,pn
mov
outsb
sbb
cmp
imul
test
test
inc
cmp
data16
push
imul
fnsave
xchg
cltd
add
shrl
cmp
nop
aaa
orb
mov
cmp
inc
outsb
out
cwtl
daa
xchg
test
stc
sub
or
pop
in
insb
fldenv
popa
fs
push
dec
rorl
cmp
pop
jp
mov
decb
xchg
mov
lods
imul
xchg
cmpsb
jge
sub
testl
test
daa
pop
cmp
pop
adc
mov
xchg
aad
adc
xchg
in
incb
mov
push
add
ret
mov
mov
or
pop
mov
dec
divl
inc
add
and
popa
and
aad
xchg
mov
bound
fnsave
jno
push
loope
jae
pop
pop
push
out
nop
jmp
loop
push
cli
fsubl
dec
cmpl
das
mov
push
std
fsubl
in
inc
pop
popa
pop
push
js
mov
mov
pusha
cli
mov
insl
jb
lahf
mov
or
movsb
push
jecxz
addr16
loop
rclb
add
icebp
sahf
jns
sub
xchg
adc
sub
daa
xlat
adc
pop
fstl
cmp
or
popa
jle
mov
test
cmpsl
and
and
mov
idiv
enter
lret
mov
add
mov
mov
dec
xchg
cld
mov
cltd
iret
int
cs
mov
push
cmpsb
dec
or
outsl
push
sti
dec
orl
sbb
bound
and
jle
push
scas
mov
popa
cwtl
ds
dec
insb
test
in
inc
call
lcall
or
pop
add
push
aaa
pop
xchg
xor
push
int
out
xchg
in
mov
push
aam
cltd
push
int3
clc
sub
cmpsl
test
adc
iret
insl
pop
stos
out
mov
pop
je
xor
orb
inc
jbe
daa
push
mov
push
jnp
out
shrb
pop
mov
mov
and
stos
stos
cmp
add
jmp
daa
loope
mov
jg
sbb
mov
inc
and
idiv
mov
dec
cmp
mov
sbb
mov
mov
dec
dec
push
jecxz
imul
in
dec
adc
scas
sub
mov
shll
scas
addr16
shl
mov
push
inc
mov
pop
rorb
mov
rclb
outsl
sub
lahf
xchg
cmpsb
adc
out
das
cwtl
inc
push
xchg
cltd
xor
into
mov
aam
sub
lcall
mov
into
fmuls
and
sbb
inc
scas
fimuls
out
dec
cltd
lods
ljmp
roll
push
and
leave
loope
aas
sbb
xchg
in
push
add
cmp
fbld
sahf
outsb
inc
lcall
frstor
test
test
mov
aad
dec
mov
fmulp
femms
out
mov
push
int
pop
rcrb
push
fistl
fisttpl
cld
push
push
mov
xor
test
cmpsb
jmp
imul
clc
and
in
mov
je
loop
mov
sti
out
mov
cld
xor
inc
fiadds
ja
add
inc
xor
aam
int
outsl
adc
adc
imul
cmpsb
dec
and
xchg
jb
data16
sbb
insl
mov
and
lret
adcl
or
xchg
shl
push
push
push
outsl
push
mov
jmp
push
sbbb
add
cs
mov
aad
repnz
arpl
mov
mov
mov
pop
inc
jbe
mov
mov
stc
ret
loopne
inc
sbb
pop
imul
and
scas
pusha
addl
outsb
ret
xor
sub
pop
xchg
aaa
and
push
mov
rorl
and
sbb
insb
add
sbb
imulb
sub
repz
xor
push
loope
in
adc
shr
mov
adcl
jne
clc
jno
bound
testb
insb
test
xor
xchg
fnstenv
xchg
adc
aad
push
jp
test
mov
imul
sub
pop
xor
test
pop
sbb
fcoml
lods
cltd
rcrb
in
dec
bound
test
js
push
inc
notl
mov
add
jae
mov
add
or
cmp
imul
mov
mov
push
rolb
imul
dec
flds
or
fisttpll
mov
int
pop
add
add
pop
icebp
and
mov
push
xorb
sbb
mov
hlt
in
xchg
xchg
xchg
cmpsl
adc
and
push
push
jg
push
cmp
sub
fcmovne
jnp
adc
mov
xchg
sub
sti
in
fcoml
mov
inc
mov
popa
sub
jl
scas
ds
mov
mov
jl
lds
arpl
push
adc
mov
dec
movsl
daa
cs
insl
cmpsl
and
frstor
lds
enter
cmp
inc
ret
jp
ds
push
mov
pop
pop
rcl
lods
leave
sarb
push
fnstcw
pop
lods
xor
push
or
in
lahf
lcall
test
lods
adc
add
jge
clc
and
pop
das
mov
pushf
sbb
fsubrs
pop
mov
mov
add
movl
scas
notb
cmpsl
shlb
lock
add
mov
outsb
xchg
add
pushf
mov
cmp
outsb
daa
add
fisttpll
shlb
inc
cwtl
add
stos
or
cmpsb
or
ret
push
pop
arpl
and
sub
xchg
push
pop
repnz
aad
out
cmpsl
test
push
and
or
mov
shll
mov
and
andb
inc
push
push
pop
arpl
loop
imul
popa
dec
mov
jecxz
ss
jecxz
aas
lcall
decl
cmp
daa
push
mov
imul
push
adc
jg
arpl
loope
lret
mov
pop
cmpl
movsl
or
push
ret
fwait
ljmp
push
jl
xchg
dec
lret
sbb
repnz
aad
icebp
push
add
mov
xlat
orb
adcl
sub
pusha
xchg
dec
movsb
lret
push
dec
sub
lods
pushf
xor
mov
inc
jnp
sti
push
out
xchg
mov
inc
pop
sub
cld
stos
mov
mov
cmc
repnz
xchg
int
and
imul
popa
stos
mov
mov
mov
arpl
sti
mov
inc
sti
popf
and
popf
lods
bound
cmpsl
int
leave
mov
imul
or
das
ja
xchg
je
add
cmc
mov
enter
pop
aam
shlb
push
movntq
xchg
cwtl
xchg
mov
dec
test
pop
sub
jns
mov
mov
in
cmc
mov
sub
push
pop
and
push
push
mov
mov
cmpsb
push
jge
mov
push
push
push
inc
inc
xchg
xchg
cmp
loop
in
jmp
cmp
xchg
es
inc
pop
adc
mov
mov
mov
out
repz
jns
lret
jmp
lods
mov
jns
jp
pop
and
int
lds
int
sub
mov
scas
adc
or
popf
in
cwtl
data16
outsb
inc
fs
mov
pop
pop
lock
xchg
xchg
ss
mov
aam
sub
dec
cld
addr16
pop
sahf
mov
call
adc
ds
test
mov
and
cmp
aas
inc
or
out
test
or
loop
idivl
mov
push
mov
ret
jnp
repnz
mov
mov
fstpt
sti
xchg
fimuls
dec
enter
or
lcall
dec
mov
adc
and
ljmp
push
cs
arpl
outsb
adc
sub
push
iret
popa
cmp
mov
adc
push
fwait
mov
mov
lcall
lods
add
cmp
dec
mov
sub
mov
je
insb
into
sbb
cmp
xor
mov
or
ds
pushf
rol
clc
fxch
clc
jae
mov
test
xor
xchg
push
and
loop
jne
xor
cwtl
dec
push
rcrl
xchg
and
test
xor
shlb
in
pop
dec
adc
inc
fwait
push
es
loope
outsl
lcall
inc
out
cltd
sbb
repnz
mov
mov
jp
inc
mov
rorl
jno
push
inc
sbb
push
add
inc
mov
xchg
jo
push
xchg
addb
xchg
movsb
nop
leave
xor
mov
xor
fsubrl
movsb
movsl
mov
mov
insl
push
test
sub
push
or
mov
or
push
aas
xchg
lds
jmp
mov
and
cmp
adc
dec
push
fldl
mov
aaa
repz
dec
into
rorb
enter
dec
xchg
imul
or
mov
pop
inc
sti
les
repz
cwtl
fistpll
aas
pop
adc
popf
test
dec
add
decb
add
xchg
xor
adc
lret
scas
cli
cmp
imul
daa
imul
loope
push
mov
lea
sub
out
sub
jno
repnz
dec
iret
mov
and
outsl
push
sub
adc
mov
cmp
add
mov
mov
ljmp
mov
add
aam
sub
mov
sbb
xor
cs
sti
cmp
leave
shll
mov
sahf
out
ret
inc
xlat
push
loop
nop
mov
pop
lcall
mov
outsb
sbb
dec
insl
dec
aad
sti
xor
dec
lcall
sbb
push
xor
inc
dec
sbb
sub
imul
repnz
clc
lods
daa
and
sbb
arpl
in
inc
adc
adc
dec
add
sbb
sub
cmc
pop
pop
pusha
gs
add
orl
pop
sub
ljmp
popa
xchg
dec
test
cltd
push
sub
sub
mov
and
pop
mov
into
lods
jge
inc
movsl
imul
jnp
dec
jmp
pop
out
push
sub
fimull
clc
lret
or
mov
push
fimuls
clc
mov
cmc
mov
xchg
sub
pop
jns
repz
fists
outsb
iret
or
cmp
and
imul
and
daa
dec
fimull
scas
push
inc
data16
sbb
dec
cmpsl
lcall
test
mov
aam
mov
mov
xchg
cmpsb
ret
cmp
loope
imul
inc
mov
call
in
cltd
push
jmp
std
ret
mull
mov
outsl
cmp
adc
repnz
dec
xchg
jp
inc
adc
and
in
arpl
mov
fs
adc
mov
iret
adc
gs
movsb
aad
xor
js
add
inc
fidivrs
jno
or
je
mov
xlat
adcl
repz
test
insb
sub
jne
push
cs
mov
xchg
add
mov
lds
sahf
or
in
dec
cwtl
dec
ljmp
mov
and
mov
mov
xchg
cmp
jl
cli
or
bound
jns
jnp
call
pop
les
out
sub
xchg
or
iret
dec
xchg
sbb
outsl
in
pop
push
icebp
outsb
rolb
push
stos
scas
lahf
mov
sti
idivb
inc
jb
xchg
imul
jmp
iret
xchg
sub
mov
test
adc
lods
testb
mov
cmp
frstor
pushf
mov
or
leave
sbb
mov
iret
out
dec
xor
mov
aam
inc
inc
push
fbstp
mov
and
fistpl
xorl
cmpsl
fs
sti
mov
cmp
movsb
mov
lret
cs
or
outsb
sub
jb
pop
enter
dec
jle
pop
push
movsl
fwait
repz
in
adc
mov
dec
cmp
std
pop
ljmp
adc
cmp
cmp
jg
gs
push
mov
add
pop
sub
and
rorb
lods
jo
sar
in
mov
xchg
adc
and
xchg
sarb
push
aam
rolb
shrl
dec
sub
lods
lock
enter
je
jo
dec
push
jns,pt
mov
lret
mov
push
adc
mov
and
roll
mov
sub
into
mov
nop
dec
pop
addl
adc
fs
jno
or
adc
add
movsl
fisttpl
out
out
inc
cwtl
xchg
mov
adc
imull
mov
jo
fsubl
lcall
inc
adc
xchg
cmp
xchg
mov
stos
cmp
flds
jno
mov
scas
mov
aam
sub
sbb
das
clc
pop
jle
push
andb
push
xor
add
cmp
lcall
loopne
xchg
push
cmp
leave
adc
mov
mov
push
data16
int3
dec
jmp
jbe
push
sahf
add
ljmp
adc
imul
mov
test
xchg
pop
adc
andl
mov
std
lea
sbb
test
jnp
or
imul
inc
sahf
lods
jl
adcb
push
int
mov
xchg
or
out
pop
pop
ret
or
and
in
ds
add
and
lret
mov
jb
pop
xchg
and
jmp
inc
xor
out
sub
sbb
adc
testb
in
fisttpl
insl
jecxz
pop
inc
push
movsb
xchg
pushf
or
ja
inc
or
out
call
std
aas
lds
testb
sbb
jp
std
lock
or
xor
cmpsb
or
rclb
sub
mov
push
pusha
stc
or
out
mov
shrl
or
lods
mov
ret
pop
push
fbld
je
test
int
sarl
cmpsb
stc
cwtl
cmc
or
andl
mov
pop
ljmp
stos
add
xchg
or
pop
xchg
sbb
adc
jp
xchg
mov
xchg
adc
subb
ret
scas
sbb
cmp
jb
hlt
dec
ja
push
mov
sbb
pop
mov
jbe
les
shrb
mov
cwtl
iret
sub
test
lods
xor
lea
dec
sub
in
mov
adc
stos
out
dec
push
cmp
sarb
test
cmp
xor
push
rclb
test
mov
add
jo
pop
push
test
jnp
es
xor
movsb
inc
clc
popa
cmp
in
aaa
and
sbb
xor
lahf
and
mov
push
xor
test
nop
arpl
test
mov
fdivr
fldcw
xorb
in
es
adc
fdivrs
add
adc
mull
gs
stc
imul
push
xchg
push
sbb
or
sbb
inc
mov
out
fldt
pop
xlat
push
xchg
cmpsb
pop
xor
adc
iret
inc
sub
cmpsl
lret
jo
fiadds
mov
jmp
les
ret
lods
sub
ds
push
lahf
sar
in
xlat
and
xchg
jno
cltd
add
xchg
adcl
adc
scas
iret
scas
xor
loope
int3
pop
in
add
xor
or
popa
or
ret
push
push
repnz
xchg
in
dec
xchg
sbb
out
insb
leave
push
out
or
and
push
xor
sub
pop
and
mov
jle
in
or
adc
mov
imul
pop
ja
rolw
sahf
scas
inc
jp
inc
mov
jb
xor
iret
sbb
stos
addr16
loop
filds
xor
add
lret
jb
mov
add
push
xchg
jmp
push
mov
fcoms
inc
mov
inc
push
insl
and
pop
and
imul
mov
push
push
cmp
outsl
sub
sub
push
push
test
sarb
test
scas
dec
pop
mov
push
arpl
stos
notb
cmpsb
scas
pop
fstpt
adcl
lahf
jge
xchg
push
dec
push
cmp
jle
bound
dec
mov
push
adcl
fists
push
fsubr
shll
add
xor
lods
and
lret
add
jns
sahf
mov
and
inc
inc
scas
arpl
aad
sbb
and
cli
clc
test
scas
gs
and
sbb
out
in
mov
imul
and
cmp
push
fcompl
push
fs
pop
dec
push
push
cs
lahf
shlb
lret
lahf
cmp
into
add
mov
loop
mov
pop
int3
mov
fbld
jg
sub
xchg
fucomi
and
or
adc
test
js
call
insl
out
cltd
xor
adc
aam
sbb
pop
fidivs
pop
lahf
xor
inc
gs
jae
sub
or
shll
daa
cs
xchg
sbb
jmp
mov
inc
jge
mov
adc
jl
call
adc
icebp
sti
jp
popf
or
and
mov
fisubs
call
add
sarl
mov
das
inc
jmp
lds
mov
loop
jne
xchg
sub
xor
cmp
sarl
push
mov
test
xlat
repz
repnz
cs
push
out
push
shll
and
dec
cmp
sub
sub
mov
xchg
pop
aam
xchg
rcrl
cltd
pop
loop
dec
cli
mov
xor
inc
ror
lret
cmp
mov
cmp
adc
iret
or
dec
pop
lcall
fcompl
mov
and
mov
mov
outsb
ss
push
pop
jmp
cwtl
in
daa
pop
fisttpll
sti
mov
insl
or
rcrb
sbb
data16
das
popa
jbe
adc
addr16
out
shlb
jmp
gs
call
lret
arpl
test
pop
test
xchg
je
out
imul
inc
gs
repz
rorb
adc
pop
fdivs
insl
iret
mov
inc
or
jbe
xchg
stc
leave
mov
xlat
loopne
into
sub
pop
jne
mov
cmp
or
inc
mov
jp
cmp
dec
adc
jmp
nop
enter
movsb
and
out
sub
pusha
cmpsl
out
scas
test
cwtl
into
out
rcll
std
xor
xor
lods
cld
push
js
xchg
add
or
ret
sub
out
adc
ror
stc
pop
mov
mov
adc
movsb
lods
adc
clc
add
es
mov
jecxz
fmuls
jmp
sub
gs
pushf
jnp
fisubrl
jg
lea
cmp
mov
sbb
adc
cwtl
sbb
addr16
jecxz
mov
mov
cmp
lods
pop
push
and
loopne
loopne
push
rol
ss
adc
aaa
imul
stos
fwait
jp
mov
sarb
or
mov
jns
lds
inc
loope
jl
jg
mov
sub
adc
xchg
or
arpl
sub
sub
out
outsb
in
xor
addr16
xor
lcall
lret
jmp
jae
imul
shll
inc
xchg
cli
fs
jno
add
sbb
stos
lds
bound
mov
in
mov
mov
push
dec
pop
sub
fbld
das
mov
xorb
fs
xor
fwait
mov
and
enter
jae
add
loopne
test
jae
pop
fadds
js
stos
pop
inc
push
addr16
push
and
or
or
dec
ss
in
cwtl
jl
pushf
cmpsb
xchg
cmp
mov
xor
cmp
pop
xor
dec
or
or
cli
xor
fwait
repz
sbb
dec
cmpsb
mov
das
repz
add
mov
xchg
push
cwtl
test
addb
mov
adc
lds
cltd
addr16
mov
dec
or
and
mov
pop
pop
push
sar
and
sub
adc
pushl
clc
add
aas
shll
mov
cmpsb
xchg
mov
fxch
gs
imul
cmpsb
and
test
call
negl
mov
adc
pop
in
das
push
push
int3
out
fs
fadd
test
in
jne
cwtl
dec
jo
pop
sub
enter
sbb
and
imul
or
cmpsb
jge
test
cwtl
mov
fldenv
leave
push
cmp
jno
xchg
push
test
int3
ffreep
leave
cltd
test
outsl
dec
mov
jnp
cwtl
fnstcw
loope
test
ljmp
int
in
cwtl
jne
push
jge
push
pop
pop
mov
xor
dec
faddl
stc
shll
icebp
mov
icebp
ret
stos
enter
mov
sarb
mov
mov
and
sbb
in
iret
xchg
xor
lods
fsubr
rolb
xchg
lea
jge
mov
jle
ja
dec
mov
mov
pop
jb
shll
inc
out
mov
mov
cmc
movsb
and
arpl
outsb
sbb
mov
inc
loopne
cmp
out
pop
jmp
movsb
jnp
mov
sahf
rcrl
xchg
mov
push
xor
in
cmp
insl
lods
int3
cli
mov
adc
stos
pop
outsb
or
pop
sbb
xchg
xchg
xorb
push
adc
xchg
push
stos
sub
shll
fs
jl
incb
sub
pop
sar
icebp
and
sub
lahf
mov
cmp
ret
mov
clc
mov
add
mov
sahf
mov
jne
testb
mov
mov
ret
hlt
inc
push
pop
jae
sub
idivl
es
loop
jbe
inc
js
outsb
ficompl
pop
into
fs
fnsave
jne
test
scas
cli
xchg
dec
push
ja
adc
setg
cmp
out
hlt
push
jge
scas
inc
fidivs
pushf
shlb
ljmp
push
rorl
xor
popl
paddusb
fsubs
mov
dec
sbb
and
cmc
stc
mov
loopne
push
and
dec
pop
popa
cmc
adc
popf
mov
mov
lods
int
pusha
jecxz
push
test
or
sub
popf
mov
xchg
clc
jno
test
xchg
and
mov
cmpsb
push
sarb
lahf
loope
ret
add
pshufw
ljmp
ret
fisubrl
dec
push
inc
dec
iret
push
ss
iret
mov
mov
testl
scas
xor
movsb
enter
dec
popa
jl
pop
clc
sbb
mov
and
mov
adc
pusha
xchg
pop
pop
pop
cmc
ror
jns
jbe
cmpsb
xchg
lods
mov
into
and
xchg
imul
mov
pop
push
mov
imul
jne
fcmovu
xor
pop
pop
filds
out
sahf
sahf
rorb
iret
and
cli
mov
dec
pusha
fists
adc
scas
ret
xchg
pop
int
adc
ljmp
xchg
inc
dec
packuswb
xchg
pop
push
mov
inc
xchg
sub
push
xchg
popf
push
lahf
arpl
mov
scas
inc
sbb
sub
repnz
sub
mov
push
jmp
test
push
or
or
or
in
adc
pop
mov
jne
nop
push
mov
jns
xchg
add
roll
loope
xchg
xchg
mov
in
mov
xchg
aam
push
sbb
mov
pusha
sub
inc
xchg
lea
pop
movsl
mov
push
xor
shl
test
fidivs
fbstp
pop
xor
jg
inc
ret
int3
jmp
icebp
gs
out
mov
mov
sahf
daa
or
inc
mov
jp
xor
das
stos
push
push
or
pop
mov
cmpsl
movsl
or
cmc
lret
push
jmp
mov
cmpsl
push
sub
xchg
xor
sub
sbb
sbb
inc
sahf
push
mov
jno
mov
neg
arpl
mov
imul
lahf
adcl
sub
rorl
xlat
aaa
xor
outsl
mov
dec
sti
xchg
arpl
xchg
out
popa
sbb
popf
out
adc
pop
push
ja
mov
mov
aad
cld
jnp
xchg
mov
aam
jne
insl
mov
movsl
sub
lods
cmp
jl
hlt
and
mov
lods
lret
sub
xor
data16
xlat
or
lods
ljmp
nop
inc
xlat
insl
inc
mov
xchg
cwtl
in
bound
pop
mov
inc
adc
out
cwtl
jl
sbb
xchg
imul
cmp
ret
insb
pop
cmp
fnstsw
jmp
ret
ret
add
add
xorb
jl
int
mov
in
mov
rcl
mov
in
mov
adc
lahf
pop
loop
shrl
outsb
or
stos
dec
push
and
xor
dec
out
xor
loop
imull
sarl
dec
mov
jo
or
and
ret
ja
mov
jno
into
adc
aaa
pop
sub
out
rorl
out
mov
int3
cltd
sbbb
lds
mov
call
push
cwtl
sbb
dec
cmp
mov
sub
jo
movsb
xchg
test
cmc
and
stc
idivl
mov
xor
aam
ret
lea
xchg
inc
add
bound
std
ss
push
cmpsb
stos
bound
mov
cmp
in
mov
leave
or
test
add
mov
xchg
aam
punpcklbw
inc
fwait
outsl
xor
cwtl
mov
jp
sbb
xchg
lods
sahf
cmpl
inc
rolb
ja
sbb
dec
cwtl
pushf
imul
mov
ja
jnp
sub
pop
cmp
mov
out
loopne
insb
ljmp
xlat
shll
jnp
outsb
or
lea
xchg
int3
jbe
ljmp
push
shll
inc
popa
movl
je
push
push
hlt
add
aam
lcall
fistpl
jbe
pop
sbb
pop
mov
or
mov
fidivrs
inc
rorl
xor
bound
cmp
lret
popf
addr16
dec
push
repnz
push
pop
orb
jnp
sub
sbb
stos
push
mov
inc
push
repnz
inc
leave
sti
imul
and
mov
sahf
leave
mov
pop
and
pushf
dec
dec
fists
adc
push
add
jo
and
sbb
enter
sbb
mov
sbbb
add
jmp
lcall
loope
repnz
jbe
inc
insl
ret
sbb
xlat
and
xchg
xor
jl
mov
repnz
nop
int
and
sbb
adcl
pushf
sub
int3
pop
stc
movsb
aam
dec
mov
inc
add
int
fwait
pop
out
cmp
or
inc
rorl
sbb
push
les
inc
cmc
xlat
push
sub
mul
push
stos
or
call
sbb
icebp
push
insl
or
loop
jmp
mov
mov
inc
xor
and
mov
xchg
loopne
push
lahf
xor
dec
mov
sbb
jecxz
xchg
dec
mov
dec
lahf
jbe
sub
loope
lds
and
pop
cli
jno
xchg
mull
push
xlat
or
jns
js
sub
mov
push
shl
loope
xchg
sub
xor
and
loopne
test
movsl
inc
mov
test
stos
insb
in
cwtl
je
out
sbb
sbb
pushf
insl
out
les
call
dec
xor
lods
in
mov
xorl
and
pop
je
ss
or
mov
fcmovb
into
repz
push
sub
gs
pop
fsubs
cmp
and
add
or
cmp
pop
stc
rclb
push
in
lcall
mov
mov
mov
fstpl
shrb
adc
or
sbb
push
dec
mov
jle
repz
rolb
outsl
jle
sbb
jmp
inc
sbb
ss
outsl
sub
aad
xor
popa
out
inc
jle
lcall
push
sahf
and
pop
es
iret
push
cmc
push
subb
push
mov
ret
clc
cmpsb
jecxz
js
cmp
and
mov
sbb
cvtps2pi
lahf
pop
xchg
jecxz
stc
sbb
xchg
mov
imul
jo
and
cmp
add
xorb
std
sub
push
scas
lret
adc
in
test
es
popa
pop
xor
loop
into
dec
addr16
fiaddl
test
ja,pt
pop
dec
addl
or
jns
pop
stos
adc
sar
rorl
mov
push
icebp
xor
imul
mov
push
push
shlb
decl
push
mov
mov
inc
lret
or
sbb
rcrb
rcrb
inc
out
test
lea
sub
cltd
cli
add
xor
arpl
leave
neg
and
fistl
cwtl
fisttpll
xchg
push
adc
fwait
hlt
sbb
or
lea
ret
scas
lods
iret
ljmp
lret
jne
ficoml
js
lock
mov
lds
lret
lret
push
mov
cld
inc
add
push
jle
pop
pushf
mov
cmp
aad
rolb
movsl
pop
movsb
add
cmpsb
adc
hlt
sbb
movsb
test
and
inc
ret
mov
sbb
inc
addr16
in
inc
lcall
in
repz
sub
adc
stos
add
cld
outsl
je
out
aad
rorl
mov
mov
jmp
or
rorb
sub
cltd
pop
fdivrl
stos
xchg
dec
movsb
stos
add
shlb
popa
xchg
fisubrs
gs
dec
or
lret
jns
add
int
stos
mov
mulb
in
fdivl
fs
xchg
jp
mov
insl
mov
stos
xor
sub
adc
std
fadd
push
test
sbb
fisubrl
fisttpl
nop
aaa
mov
inc
xchg
and
xchg
fcoml
js
sub
sbb
mov
mov
ljmp
loopne
outsl
out
pop
cmpsb
mov
stc
xor
into
and
repnz
bound
xchg
stos
sub
xor
jg
pop
movsl
mov
mov
mov
gs
popa
jae
cmpsb
sub
inc
and
mov
cmpsb
stos
pusha
and
int
ljmp
xor
rcl
sub
pop
lret
lock
add
sbb
in
cmp
sub
push
sub
sbb
out
sbb
pop
push
pushf
ds
aam
ljmp
shlb
xor
cmp
cs
popa
push
lahf
lock
mov
xor
adc
push
mov
stos
shr
cli
std
fisttpll
push
xchg
mov
xchg
lcall
mov
fcompl
mov
add
ljmp
push
test
sbb
call
xchg
xchg
ja
clc
les
cmp
aaa
aaa
pop
aad
pop
into
hlt
or
loopne
inc
lds
ffree
xchg
arpl
stos
ss
or
inc
movsl
out
xchg
sbbb
push
inc
xchg
sbb
xor
xchg
rclb
mov
lods
shlb
xchg
cmp
push
mov
clc
or
in
xchg
fstps
aam
out
dec
dec
leave
mov
mov
leave
jge
push
fwait
aam
inc
imul
notl
add
lahf
sub
dec
jge
sbb
aam
adc
stos
sbb
adc
push
addr16
mov
push
jl
cld
aad
inc
test
ljmp
inc
in
repz
cmp
push
and
and
sbb
rcrb
sahf
jmp
mov
xchg
and
sub
push
notl
mov
loope
cmp
mov
popf
pop
fcomps
dec
add
movsb
and
adc
in
data16
jge
cmpsb
adc
bound
fidivrl
fistps
pop
imul
test
pop
and
mov
mov
xchg
je
sbb
fiadds
lods
flds
test
dec
fsubrl
dec
jae
xor
nop
add
scas
aam
xchg
cli
aad
ret
xor
xchg
out
mov
ds
clc
push
xchg
jmp
cmp
sub
xor
mov
push
pop
negl
aas
or
outsl
js
sub
iret
add
int3
repz
sbb
inc
pop
dec
dec
mov
jge
jmp
mov
inc
xlat
pusha
mov
inc
jmp
sbb
loop
or
add
pop
add
inc
mov
inc
lea
js
dec
andb
inc
cld
je
insb
outsb
imul
adc
dec
mov
jp
repz
aas
inc
mov
cmc
aaa
pop
loope
es
jno
je
inc
data16
xor
popa
pop
dec
pop
cmp
mov
pop
movsb
rcl
out
das
dec
dec
lds
aad
jo
add
rcrb
hlt
cwtl
arpl
mov
pop
cltd
ret
mov
addl
dec
mov
int
sub
loope
push
bound
mov
cwtl
push
imul
cmpsw
xor
inc
jmp
mov
add
test
arpl
mov
xor
loope
rcrb
aad
adc
sbb
cwtl
xor
sbb
ss
daa
inc
mov
test
cmp
push
adc
xchg
mov
repz
loopne
in
mov
xor
mov
dec
gs
fldenv
loope
cltd
sbb
enter
orl
adc
mul
cld
sahf
push
xor
sbbb
cmpsb
fidivrs
jmp
fsubp
dec
fnstsw
out
adc
lds
loope
push
mov
and
arpl
insb
stos
mov
dec
fldcw
dec
add
push
inc
mov
mov
into
dec
push
push
jmp
js
jns
aad
push
lcall
lods
std
in
lds
push
cwtl
dec
cmp
clc
cmp
mov
test
add
subb
xchg
sbb
fstpl
adc
cmc
push
data16
push
out
add
cmpsb
leave
leave
push
in
pop
jle
shrl
pop
mov
dec
jmp
out
aas
mov
out
imul
adc
ret
adc
in
xchg
lret
sub
mov
cmp
add
sbb
stos
cmp
pop
adc
adc
sbb
loope
pop
insb
rorb
out
xchg
dec
push
dec
jl
insl
xor
xor
rclb
lret
imul
dec
or
add
add
in
call
mov
xchg
int3
lock
sbb
lock
mov
fdivrp
mov
push
shrl
adc
fbstp
jp
pop
xlat
in
sub
inc
mov
dec
fbld
cmc
imulb
push
outsb
js
mov
push
lahf
cld
scas
jge
sub
scas
clc
xchg
sahf
mov
xchg
mov
mov
cs
and
push
inc
das
inc
out
jp
imul
ds
in
add
pop
mov
and
cmp
outsl
mov
loop
push
popf
pop
pop
xchg
push
lret
mov
movsb
das
jns
add
clc
inc
shrb
push
pop
repnz
ds
sarb
outsb
lock
sbbl
jae
dec
pop
or
add
adc
push
jp
rol
xchg
popf
pop
cmpsb
cld
xor
mov
pop
ja
jl
pop
or
add
lret
jns
fists
dec
mov
sub
dec
sahf
mov
jg
push
add
daa
pusha
push
shll
pop
mov
jns
ds
or
daa
xchg
fdivs
dec
xchg
enter
jbe
aaa
leave
jmp
mov
insl
xorb
js
cmp
shll
pop
cmp
push
sbb
mov
jnp
cmp
push
sub
adc
std
in
aas
bound
pop
mov
and
lock
mov
stos
scas
jnp
fisubrl
ret
push
test
mov
out
popl
icebp
adc
push
sub
adc
stc
imul
out
mov
and
out
adc
sbbl
repz
adc
frstor
ja
sub
ss
test
nop
std
jb
add
xchg
cmp
sub
mov
mov
xor
xor
dec
cmpsl
pop
sbb
lret
mov
sbb
in
sub
and
mov
jl
sbb
fmull
mov
push
and
loopne
lock
mov
inc
xchg
lods
add
lret
or
jne
dec
or
sbb
in
sidtl
mov
mov
pop
hlt
pxor
and
adc
repz
sbb
imul
and
xchg
push
and
loopne
in
mov
inc
lods
jmp
inc
mov
and
and
shr
or
adc
movsb
aaa
iret
and
outsb
cmpsb
loop
pop
shlb
xor
jb
sbb
mov
gs
sbb
movsl
mov
ret
jae
cmc
mov
inc
mulb
or
aam
dec
jne
or
xchg
cmpsb
xor
add
sbb
xor
sbb
jl
jnp
fsubs
call
push
ja
xor
mov
lods
adc
jnp
xchg
push
ds
cmp
lret
and
and
cli
pop
popf
cmp
fwait
enter
stos
xchg
and
icebp
pop
bound
mov
orb
sti
lods
test
push
cs
xchg
mov
xchg
out
sub
mov
std
arpl
inc
add
ret
mov
das
cli
mov
shrb
pop
adc
outsl
cltd
lahf
and
push
xchg
lcall
sub
sub
orb
sbb
mov
shlb
stos
enter
xchg
xchg
ja
jecxz
sahf
mov
xchg
pop
push
pop
jno
lcall
sbb
adc
test
or
cmp
cmp
add
dec
leave
sbb
and
pop
enter
cmc
xchg
ss
add
push
dec
adc
adc
fs
jp
jmp
push
dec
add
xchg
ja
dec
cmp
adc
in
js
inc
mov
loope
push
fdivr
xchg
xchg
arpl
mov
cmp
dec
imul
js
sbb
imul
xchg
leave
icebp
fisubs
les
xchg
sbb
jmp
clc
aad
lret
repnz
sbb
js
adcl
pusha
push
imul
mov
inc
and
mov
pop
pop
or
or
sbb
and
inc
push
rcll
push
and
inc
xor
and
push
insb
adc
ss
repz
decb
dec
sbb
jle
es
lcall
sahf
aas
out
enter
loope
into
push
mov
imulb
mov
movsl
mov
push
popf
test
pop
or
dec
mov
add
mov
fsts
cmp
inc
and
mov
lret
enter
mov
xor
sbb
mov
es
push
xchg
adc
xor
add
pop
in
push
mov
xchg
inc
dec
sahf
cwtl
daa
dec
adc
or
sbb
fwait
push
cmp
sbb
xchg
cmpl
pusha
jecxz
insl
daa
mov
sub
fmull
xchg
notb
xchg
stc
dec
sub
pop
out
and
scas
mov
dec
push
mov
push
add
sbb
push
dec
je
mov
cmc
cli
das
lret
or
popa
decl
fldcw
adc
rorl
jb
push
add
cmp
repnz
int
sbb
gs
xchg
notb
pop
and
sub
ret
jnp
xrelease
inc
xchg
mov
sub
mov
pop
pop
sbb
mov
dec
out
loopne
andb
out
scas
int
jae
mov
jns
cmpsb
inc
inc
add
add
shrl
mov
jmp
add
out
sarl
int3
xrelease
mov
sti
ret
inc
fidivl
lret
nop
out
add
outsl
dec
shrb
lods
loop
pop
mov
mov
std
lds
test
cmpsb
jnp
mov
out
mov
ja
push
mov
push
xchg
test
lea
clc
push
leave
andl
dec
icebp
lret
pop
mov
xor
les
jmp
mov
arpl
xchg
add
loope
cmp
adc
and
jo
repnz
mov
movsl
push
jne
cmpsl
inc
mov
out
mov
xchg
inc
test
mov
cmp
push
inc
aad
jns
add
icebp
data16
adc
pop
movsl
cmpsb
fs
cmpsl
dec
pop
or
push
shl
clc
dec
mov
addl
popf
push
push
sbb
push
xor
adc
add
push
pop
ret
out
inc
jno
add
scas
ds
xor
gs
adcl
test
cmp
test
jecxz
sbb
push
sti
int
push
not
popa
sbb
test
mov
fadd
inc
or
cmc
daa
xor
sub
inc
jbe
cltd
xor
pop
andl
push
cmp
xchg
jo
cmc
mov
adcl
pop
std
inc
sub
xlat
mull
rcll
test
sub
inc
inc
push
lahf
add
inc
movsl
sbb
subb
fisttpll
and
fisttpll
fmuls
inc
idivb
xor
decb
xor
add
inc
xchg
sbb
mov
and
aas
cld
adc
pop
in
mov
xchg
pop
push
loop
sarl
cmp
dec
jl
push
jecxz
into
xchg
add
adc
push
icebp
add
push
pop
or
lea
adc
dec
and
xchg
pop
movsb
cmp
daa
insb
cli
das
xor
fistpll
push
xchg
loopne
popf
fadds
cmc
div
xchg
insl
push
jl
pop
mov
sub
test
inc
movb
xor
pop
mov
popa
arpl
dec
xlat
lahf
jo
push
lcall
idivb
pop
andb
ss
mov
cmp
std
mov
xor
pop
add
shll
nop
mov
in
stos
push
pushl
sbb
outsl
pushf
inc
or
lahf
insb
insl
pop
lods
lea
fisubs
jecxz
xlat
addr16
rorl
jo
out
adc
xchg
mov
rcrb
xor
jmp
dec
in
mov
mov
and
mov
fsubrl
lods
outsb
mov
scas
aad
imul
push
das
out
xlat
sub
xchg
sub
lea
sub
les
inc
xor
mov
in
pop
and
add
mov
test
inc
push
or
cmp
dec
cli
inc
push
cmpsl
iret
add
jecxz
mulb
js
xchg
mov
and
cmp
outsw
xchg
rolb
jl
xor
call
xchg
das
sbb
sarb
addr16
leave
or
ds
loope
xchg
inc
cmp
inc
adc
dec
push
scas
or
xchg
sbb
es
imul
jl
scas
clc
cli
nop
jns
jnp
hlt
jle
fwait
pop
mov
inc
aaa
cmp
loop
lcall
sub
stc
mov
lcall
push
out
sbb
adc
pop
push
lahf
ljmp
lret
outsl
mov
lahf
enter
aam
xor
push
nop
ret
xchg
mov
in
stos
dec
push
pop
ja
sarl
je
stos
int
mov
push
dec
fimuls
fcomi
sbb
jns
ljmp
or
xor
in
in
insb
cli
or
ja
pop
in
push
gs
inc
xor
pop
pop
mov
lea
xchg
out
mov
pop
in
aad
sub
loop
xor
mov
mov
cld
xchg
jmp
push
testb
mov
addl
dec
decl
lods
lcall
mov
sarb
mov
dec
enter
push
jne
or
dec
mov
adc
fdivl
out
xchg
imul
subl
mov
dec
and
push
sub
pop
fs
mov
and
ja
rolb
test
lahf
aad
jp
xor
dec
nop
xchg
adc
dec
cwtl
dec
jnp
xlat
test
push
pop
int
std
mov
jne
dec
adc
cmp
xchg
rorl
ljmp
mov
cmpsl
js
or
stos
ficomps
jne
pop
mov
mov
fisttps
mov
lods
aad
mov
arpl
or
shrb
cmp
push
push
push
and
addl
xchg
xchg
cmp
mov
add
es
imul
hlt
xlat
inc
and
cmpsb
flds
push
jae
inc
adc
movl
sub
subl
or
fwait
cld
cmp
or
push
adc
pop
ljmp
ret
shl
cli
dec
push
in
add
fwait
lahf
xor
mov
out
scas
scas
push
insl
incl
sbb
lret
cmpsl
mov
mov
sub
jno
mov
loopne
jnp
sahf
out
jns
test
lcall
mov
popf
add
inc
inc
mov
popl
imul
pop
mov
lahf
adc
and
repnz
ds
sti
fsubrl
ja
lds
outsl
push
and
mov
push
push
pop
mov
rorl
jne
sub
rorl
in
cmp
xlat
xchg
popa
cmp
jl
push
push
add
filds
leave
xor
fldt
xchg
into
xchg
ret
push
ficomps
push
in
xchg
pop
jle
mov
inc
mov
ss
adc
cmpsb
lcall
cmp
push
fdivrs
add
add
test
pusha
xor
or
xchg
and
ja
pop
sbb
add
inc
adc
arpl
scas
xchg
cmp
stos
cwtl
and
jle
je
imul
push
push
xchg
push
and
mov
jo
imul
xor
in
mul
xor
jge
aam
lds
xchg
inc
dec
std
hlt
dec
cli
fcomi
imul
nop
nop
sub
daa
push
dec
mov
push
inc
ja
or
inc
xchg
and
dec
daa
xor
scas
andl
adc
jle
das
xchg
sub
inc
mov
sub
popa
loope
xchg
lock
ds
mov
push
cld
push
addr16
or
xchg
or
pop
jmp
or
sahf
mov
out
push
int
lret
inc
push
cld
jno
mov
test
scas
sub
in
push
jmp
fisubrl
cwtl
stos
fnsave
push
inc
sub
call
clc
jl
scas
add
xchg
push
lret
lock
mov
out
iret
dec
xor
mov
fs
jge
popf
out
cmp
adcl
sbb
mov
sub
pop
or
outsb
mov
cmc
popa
jmp
sbb
pop
sti
and
and
and
or
ds
test
je
cmpsl
inc
ljmp
cmc
pop
pop
or
sahf
popf
adc
mov
xchg
sahf
pushf
fsubrs
lret
jns
xor
loopne
jle
sti
mov
fmulp
sbb
jns
sub
or
sub
ljmp
and
cli
xchg
jle
loope
jbe
add
shlb
push
mov
cmp
sub
pop
bound
sbb
cs
xchg
shr
add
rcrb
jo
sar
xor
sub
call
imul
push
add
adc
dec
xlat
cli
lds
sub
out
xchg
sbb
ret
stos
adc
adc
aas
sti
fst
test
cs
cmpsb
push
mov
dec
sbb
out
cs
cli
add
out
mov
fmull
cmp
mov
inc
or
dec
adc
pusha
xchg
aas
and
lods
inc
data16
xlat
jge
insb
pop
xchg
mov
sbb
stc
es
roll
pop
push
clc
mov
sub
mov
iret
sbb
mov
stos
and
popl
push
inc
stc
jmp
nop
jo
js
pop
ljmp
xorl
daa
popf
xor
lret
rcrl
cmp
pop
ficomps
inc
mov
or
add
mull
push
sbb
cmp
or
call
xchg
ret
lret
jmp
fistl
pop
mov
or
sbb
or
das
mov
pop
push
xchg
add
out
inc
cmp
pop
mov
xchg
mov
dec
xchg
dec
or
adc
std
data16
and
mov
loope
xor
lahf
xchg
mov
repz
or
bndstx
cmpsl
adc
and
aad
inc
mov
pushf
jmp
gs
nop
lcall
inc
std
xor
mov
icebp
push
ret
sbb
movsl
adc
xchg
fsubr
ds
sub
decl
jne
repnz
mov
pop
pop
ss
repz
push
xchg
scas
enter
ficompl
dec
fsubr
fsts
mov
iret
cmc
int
xor
in
push
cmpl
rorb
jl
cltd
mov
pop
pop
stos
mov
mov
cmpb
cltd
into
ljmp
rorb
add
jnp
sbb
les
jecxz
add
dec
sbb
and
pop
or
loop
push
cli
loopne
cwtl
arpl
cmp
xor
outsl
mov
push
pusha
ljmp
cmp
xlat
fdivl
cmp
dec
xor
add
jmp
or
rcrb
add
pop
stos
xchg
jne
rep
sub
push
mov
xchg
add
jmp
pop
pop
jg
cmpsl
shll
push
shll
out
repnz
cmp
mov
lock
push
fsubl
in
mov
sub
xchg
mov
sub
jl
ds
js
jecxz
int
ret
ss
add
fisubrs
or
mov
xchg
pop
cltd
dec
cmc
push
sti
aam
push
pusha
cmpsl
andb
mov
dec
sbb
dec
gs
enter
orb
stc
shr
test
rorb
jle
stos
xor
pop
xchg
movsl
sub
dec
dec
pop
jnp
out
cmpsb
mov
adc
add
out
push
adc
movsl
jb
jb
mov
ja
jae
rorb
cmc
adc
push
mov
pop
ret
mov
in
ret
repnz
pop
mov
in
sbb
ret
dec
xlat
gs
pminsw
mov
mov
sahf
filds
inc
shrl
jle
jecxz
insl
ret
enter
push
jbe
add
mov
mov
push
mov
lods
cltd
jns
lret
mov
cmp
inc
add
mov
icebp
xor
sti
inc
sti
insl
fstpt
imul
das
xor
mov
push
lcall
inc
mov
lods
nop
popa
aas
insb
stc
mov
and
pusha
mov
icebp
sub
testb
push
cmpsb
sbb
jns
lods
xor
outsl
push
test
movsb
mov
outsb
daa
fildl
or
cmpb
sbb
scas
shll
mov
cmpsl
int3
lret
sti
sub
dec
xor
clc
dec
pushf
fstpt
mov
movl
in
movsb
ss
sub
dec
sti
or
divb
mov
cmp
mov
mov
sti
insl
outsl
insb
jl
push
divl
and
sbb
orb
dec
mov
adc
decb
cmp
movsl
push
lods
mov
mov
je
dec
cwtl
mov
push
popf
cmp
dec
xchg
clc
push
test
xchg
fwait
dec
pop
inc
inc
jae
repnz
mov
xor
mov
xor
inc
fildl
andl
clc
ret
inc
pop
add
inc
pop
cs
or
jb
loope
and
add
dec
insl
stc
pop
rcl
call
xor
cmp
lcall
xrelease
mov
out
imul
stc
js
stos
push
test
ja
add
adc
xor
mov
movsb
repz
cld
stos
shl
fcoml
lret
arpl
lods
jp
pusha
dec
roll
ja
xor
lods
xchg
mov
sahf
ret
jae
xchg
jg
mov
movsb
add
push
jp
xorb
clc
sbb
shll
dec
mov
and
pop
in
out
and
mov
pop
clc
dec
in
xorb
jo
ja
mov
push
pop
dec
mov
inc
je
dec
jbe
ret
negb
lods
jnp
xor
shlb
dec
popa
add
or
lret
aad
mov
push
sub
sub
outsb
or
inc
loop
or
pmaxsw
dec
jae
js
negl
xor
pop
mov
dec
je
je
push
lds
sbb
mov
cmc
in
pop
fnstsw
cmp
hlt
test
mov
into
xor
xchg
sbb
dec
sbb
dec
or
hlt
adc
push
in
sub
in
outsb
inc
outsl
ret
xor
js
fidivs
ficoml
mul
xor
add
enter
stc
pusha
shll
shlb
decb
std
movsl
stos
add
inc
pop
outsb
or
cmp
or
add
enter
leave
xchg
push
mov
or
inc
iret
inc
aas
inc
out
bound
in
jns
xor
int3
movsl
fs
aam
hlt
xchg
insl
inc
pop
imul
in
mov
mov
stos
pop
cld
dec
xor
repz
mov
and
jbe
jmp
pusha
inc
add
sbb
jle
ljmp
cltd
jmp
mov
add
data16
jge
mov
and
and
movsl
mov
push
or
inc
loope
mov
mov
push
gs
cmp
scas
xor
jnp
out
sti
cmpsb
cmp
test
push
xchg
jb
mov
je
push
or
ja
jnp
add
in
das
mov
dec
leave
out
mov
cmp
adc
and
stos
xchg
add
sbb
push
jmp
and
dec
fstpt
pop
pushf
rcrb
aas
push
out
rorb
ja
test
test
dec
testl
lds
mov
loop
fistps
mov
fs
add
outsl
fs
lods
mov
imul
ret
mov
out
xchg
fwait
test
daa
xchg
outsl
jle
mov
mov
mov
fisubrl
and
dec
jmp
push
enter
subl
and
ja
or
dec
jo
icebp
jns
xor
xor
arpl
aad
jbe
mov
jae
mov
cmpsb
negb
push
mov
dec
cwtl
pop
scas
adc
mov
icebp
lods
mov
stos
lods
jae
scas
divb
lds
xor
pop
and
and
push
mov
add
mov
xchg
adc
fiadds
cltd
out
sbb
aad
pop
mov
sbb
pop
push
not
cmp
or
dec
jns
mov
pop
lahf
inc
outsl
fucomi
icebp
dec
push
jl
push
lret
jae
insb
xchg
out
jmp
lahf
cmpsb
int
or
sbb
pop
daa
and
mov
cs
push
push
je
stos
iret
xlat
in
movb
repz
lock
xor
pop
and
push
imul
data16
stos
insl
mov
std
ss
repz
scas
add
imul
pop
xchg
aas
cmp
pop
cld
and
push
mov
inc
add
or
ss
or
jle
mov
dec
inc
lret
cmp
sti
repz
adc
push
rorl
je
mov
sbb
es
imul
or
adc
fcomp
inc
mov
jnp
cmpsl
sbb
and
dec
xchg
cmpsb
inc
jae
sub
mov
and
lods
sahf
mov
adc
aam
jnp
cld
cmp
ret
mov
sbb
stc
aam
andb
negl
sahf
push
xor
in
cmp
popa
fstps
orl
inc
lahf
subb
fdivr
mov
sti
push
jge
jns
dec
push
cli
mov
repz
or
in
xor
add
push
add
sbb
lods
lret
cli
pop
mov
int
fadd
ficompl
insb
mov
adc
inc
pop
adc
fisubs
sub
xchg
filds
dec
pop
repz
rcll
add
cmpsb
scas
dec
std
sub
xor
adc
xchg
rol
fcompp
mov
adc
fldcw
xchg
ret
cmp
push
cmp
adc
mov
testl
inc
negb
ljmp
lea
in
push
js
push
jae
int3
je
jae
cmp
mov
imul
dec
xchg
sub
mov
jno
ret
push
mov
dec
mov
pop
lret
in
ljmp
rcl
and
dec
fucomip
ja
xchg
ss
cwtl
xchg
fwait
xchg
push
std
or
adc
or
xor
xor
jne
pop
push
push
pop
xor
dec
push
stos
popf
xor
std
pop
rorl
xchg
hlt
mov
fs
xchg
or
outsl
sbb
adc
add
fwait
std
and
pop
pop
push
adc
mov
cmpsb
jbe
jl
jns
popfw
sub
xor
ficompl
push
bound
mov
cltd
out
xlat
xor
xchg
adc
mov
out
aam
stos
enter
mov
outsb
push
mov
icebp
inc
sub
adc
aaa
mov
jnp
xor
add
lods
cwtl
in
in
and
pop
or
insl
adc
or
mov
out
fwait
inc
inc
hlt
push
sub
mov
pop
mov
cmp
pop
aad
jmp
add
andl
inc
and
and
mov
jge
test
pop
inc
jecxz
xor
lcall
dec
push
mov
ljmp
dec
pop
pop
push
movl
vmread
fcmovnbe
loope
pusha
sub
imul
mov
xchg
xor
or
fcoms
lcall
mov
pop
test
xchg
scas
pop
hlt
adc
lds
push
sub
movsb
pop
add
mov
or
push
adc
test
push
xchg
push
and
andb
push
mov
pusha
cmp
inc
mov
outsl
pop
xchg
jge
pop
and
icebp
sbb
cmp
mov
mov
lcall
inc
pop
mov
mov
notb
inc
and
adc
xchg
push
daa
and
add
clc
rcll
popa
sub
pop
and
xlat
adcb
xrelease
mov
add
addl
cmpb
fnstcw
dec
cmpb
push
test
test
dec
jne
push
dec
xchg
and
hlt
xor
mov
dec
scas
and
mov
fnsave
or
je
addr16
xchg
push
mov
ja
in
add
cmpsl
xor
sbb
outsl
add
imul
in
push
add
adc
call
pop
repz
inc
xchg
xor
push
mov
ljmp
mov
mov
mov
sti
and
ss
stc
add
jl
movsb
out
push
push
sti
pop
andl
stos
addr16
push
xchg
loopne
xchg
dec
pop
hlt
mov
mov
jle
iret
sub
daa
jmp
xor
jecxz
out
or
push
mov
pusha
orl
mov
dec
dec
ljmp
sub
pusha
dec
or
add
xchg
mov
sub
fists
or
pushf
lock
pushf
fistl
mov
pop
or
std
lods
repnz
cmp
jecxz
push
mov
shll
addb
sbb
cwtl
out
leave
jae
jmp
cmpsl
sub
cli
xor
lock
dec
out
sbb
js
fdivrs
xor
sub
pop
loop
out
ds
scas
push
iret
or
stc
sub
scas
xchg
sbb
in
xor
add
shlb
and
and
idivb
sbb
jae
shl
rorl
mov
sahf
xchg
jl
insl
push
out
jmp
mov
adc
sbb
data16
sub
inc
dec
lahf
out
sbb
sub
or
cld
cmp
xchg
mov
movsl
and
jmp
sbb
mov
inc
and
int3
and
push
roll
mov
push
jae
jne
and
pop
test
and
cmp
cwtl
xor
ret
mov
adc
jbe
mov
sbb
pop
sbb
xchg
int3
xor
xchg
std
mov
insb
sub
add
aad
inc
mov
daa
xor
out
xor
cmc
pop
sub
mov
sbb
aam
inc
movsb
mov
sub
sbbl
mov
dec
andb
sarl
and
je
repz
lret
mov
fcoml
adc
lds
popa
jmp
or
test
xor
fnstenv
cmc
push
stos
mov
mov
test
pop
cmp
subl
scas
in
xchg
add
push
xor
outsb
ret
sbb
mov
int
loopne
sub
or
fnsave
shlb
inc
pop
cmpsl
pushf
aad
jecxz
jnp
cmp
sub
imul
push
dec
mov
jp
dec
push
pop
inc
insb
shrb
cltd
pop
sub
lds
add
dec
dec
dec
pop
stos
daa
push
push
adc
xchg
roll
test
or
frstor
push
loopne
add
sbb
push
mov
fwait
push
jbe
jo
outsb
nop
dec
lcall
mov
xchg
inc
fisttpl
inc
gs
ljmp
jge
cmpsl
cld
std
adc
dec
xor
cli
loop
jno
out
dec
inc
int3
mov
lea
sbb
jns
mov
fcoms
add
inc
int3
xchg
scas
mov
je
fnstenv
les
cs
std
mov
ret
and
das
mov
push
fldl
jo
sbb
dec
jns,pt
leave
jecxz
scas
icebp
sarb
push
and
xor
rcrb
fisubl
cmp
xchg
lcall
inc
call
test
or
sub
leave
gs
clc
xor
fisttpll
push
mov
scas
mov
add
mov
push
sub
add
mov
gs
test
push
push
xor
cmc
xchg
dec
jno
mov
lret
inc
stos
push
int
ja
leave
add
stos
jle
mov
xor
pushf
jne
mov
or
orl
jp
stos
jb
sub
lods
fstpl
stc
pop
aaa
stos
adcb
aas
imul
inc
adc
leave
nop
adc
mov
into
mov
mov
ficoml
aas
out
cmp
lea
xchg
jb
jp
pop
mov
cmp
xchg
add
cmp
jns
jae
push
inc
pop
cmp
popf
ss
jno
into
icebp
pop
or
mov
dec
nop
movsb
sbb
sub
stos
mov
pop
stc
jmp
add
inc
outsb
es
xchg
clc
cmp
jle
pop
xlat
pop
mov
inc
dec
and
and
or
and
cmp
mov
cmp
inc
jmp
lret
cli
mov
cmp
jmp
mov
mov
sub
push
jo
dec
cmc
addr16
pop
test
pop
mov
sub
xlat
sub
pop
fwait
mov
add
cwtl
inc
sub
lock
or
cmp
inc
mov
adc
bswap
dec
pop
or
cmp
push
add
mov
andl
or
cmc
lds
cs
enter
sbb
pop
jae
jmp
lret
jecxz
inc
mov
lahf
addb
lock
rorl
cmpsb
lods
addr16
subb
mov
jle
push
out
outsb
cmp
call
pop
pop
ror
jecxz
punpckhwd
cmpsl
test
ss
jmp
jmp
inc
test
pop
adc
xchg
mov
in
add
scas
js
xor
dec
out
jl
daa
xor
lods
addl
jne
push
jge
cmp
and
cmp
push
pop
sti
jmp
enter
mov
neg
mov
les
cmp
fmuls
adc
dec
push
mov
mov
inc
pop
lods
sbb
pop
add
popf
cmpsb
dec
mov
push
sbb
mov
mov
pusha
test
cmpsl
movsl
sarl
fbld
jle
jns
es
mov
push
adc
pop
dec
sub
ljmp
jmp
cmp
sbb
xor
scas
lock
dec
in
and
idivl
adc
inc
and
push
cmp
push
das
fcmovnu
jno
jecxz
mov
push
nop
xchg
fcmove
mov
dec
jnp
lea
push
fsubs
shlb
out
pop
jns
jmp
adc
cld
dec
outsb
out
shrl
xor
aas
sub
sbbb
stc
cmc
test
pop
fs
push
jmp
adc
adc
lods
ljmp
shlb
mov
xor
jl
icebp
or
xor
gs
jle
cmp
sbb
fs
push
mov
sub
mov
outsb
ficoms
fnstsw
test
rsm
call
pusha
and
das
mov
mov
test
sbb
hlt
scas
sbb
xor
fisttps
jae
call
mov
scas
pop
add
or
mov
dec
cmp
lock
loope
rol
lcall
push
mov
jno
pop
cmp
push
and
pop
movsl
lods
fwait
mov
jo
jmp
sub
mov
enter
lret
xchg
outsl
mov
or
add
pop
rorb
sub
imul
clc
aam
sub
and
das
and
mov
xchg
out
int
test
mov
mov
push
xor
jmp
jl
and
int
ljmp
cmpl
add
arpl
ja
sub
mov
cld
adc
xchg
xchg
sbb
jmp
or
cwtl
daa
mov
or
and
rcrl
rcr
scas
jno
cmp
mov
in
cwtl
test
ss
ljmp
adc
jge
and
icebp
orl
mov
mov
fcmovnb
pop
imul
inc
sbb
ss
mov
jb
xor
sbbl
test
mov
pop
dec
cmp
cltd
cmpsb
sarl
mov
cmp
ljmp
clc
lds
fstps
and
es
decl
rolb
lcall
mov
jae
pop
rorl
sbb
bound
clc
lea
jbe
add
movsb
xchg
sub
daa
fst
add
adc
inc
push
dec
mov
fstpt
cs
dec
ret
fisttps
ud0
out
pushf
jge
add
call
and
pop
mulb
and
add
add
mov
sbb
xor
cltd
test
cmp
lock
jno
testl
sahf
add
das
rcrb
pop
pop
cli
push
or
aaa
data16
movsl
pop
mov
fwait
push
mov
aad
sub
sbb
cs
dec
js
out
andb
int3
leave
add
aam
and
mov
mov
leave
jmp
subb
mov
arpl
mov
push
orl
scas
mov
jg
jecxz
add
icebp
inc
stc
cmp
or
add
adc
dec
into
call
sub
push
test
xor
stos
mov
cmp
pushf
dec
xchg
sti
fistps
mov
imul
lret
hlt
mov
sti
cmp
rorb
sbb
loope
add
mov
sti
inc
cmp
out
icebp
lock
cmpsb
fdivl
cli
add
movsl
mov
aas
and
pop
repz
ret
xchg
pop
xor
in
gs
scas
inc
sub
push
jle
jmp
ja
adc
es
scas
pop
or
cltd
ss
sbb
jae
imul
mov
imul
aad
inc
push
push
aas
sub
bound
hlt
stc
lea
cmc
in
pop
repz
and
push
fiaddl
sub
pushf
xchg
adc
imul
xchg
jg
push
imul
jae
lahf
cld
xorb
lahf
hlt
or
mov
cmp
xor
das
and
aas
aad
stos
rcll
ret
loope
ja
dec
inc
cmp
sbb
xor
lock
pusha
aas
mov
add
inc
pop
and
iret
push
pushf
pop
loope
stos
push
nop
sub
rolb
add
add
rcr
ret
push
adc
mov
jnp
mov
add
dec
arpl
xchg
dec
xchg
pop
inc
ficoms
jge
add
xchg
and
add
testb
icebp
fnsave
pop
add
mov
hlt
cmp
ficoms
in
lds
mov
in
rcll
stos
out
les
dec
aaa
mov
xchg
fwait
inc
and
call
fsubs
lods
inc
jb
inc
push
adc
xor
mov
pop
fisttps
call
andb
mov
mov
mov
in
xlat
pop
aam
sbb
inc
adc
fstps
adc
add
inc
xsaves
mov
mov
insl
movsb
jecxz
loope
mov
dec
rcrb
test
xor
mov
push
rcrl
jo
int
cmpsl
js
adc
and
inc
mov
push
pop
ja
sub
or
xor
movsl
sbb
ret
xor
outsl
popl
sbb
into
cld
jno
adc
add
rorl
shll
and
es
mov
and
push
pop
dec
cmp
mov
enter
add
int3
push
fstpt
pushf
xchg
adc
subl
inc
mov
stc
fdivrs
push
shll
push
inc
xchg
mov
push
add
xchg
mov
ret
jecxz
mov
xchg
shrb
push
or
or
xor
adc
sub
cmp
rep
cs
stos
leave
jl
adcl
enter
mov
arpl
loope
ss
cmp
mov
mov
inc
loopne
outsl
push
subb
and
cmp
mov
cmp
sbb
lea
ffreep
jmp
js
lods
scas
mov
daa
jne
cmp
jp
fisttps
std
dec
mov
jne
je
dec
mov
roll
mov
daa
imul
inc
add
pop
popf
aaa
popa
cmp
cmp
xor
adc
stos
add
jmp
xchg
xchg
shll
fsubrs
and
jecxz
dec
sar
ja
jo
sahf
iret
mov
mov
test
sub
mov
and
test
inc
in
dec
add
int
inc
lret
pop
imul
inc
mov
add
jae
dec
mov
cld
jl
out
out
mov
notb
or
jl
mov
xchg
pop
adc
stos
arpl
sbb
cmp
sar
fbstp
mov
or
jl
es
popa
mov
mov
rcll
inc
jmp
jmp
enter
clc
adc
das
dec
dec
push
push
div
mov
inc
negb
cs
js
cwtl
push
sbb
mov
pop
mov
std
fcompl
clc
xchg
and
inc
cmp
sbb
jge
les
push
sbb
mov
sub
sub
add
insl
xor
bound
xor
mov
popl
stos
add
inc
dec
icebp
int3
test
xor
push
push
inc
add
imul
mov
cmp
add
xchg
lds
sub
pop
pop
mov
rorl
cmpl
and
shlb
add
sub
and
ret
lock
xchg
xchg
subb
mov
es
sbb
and
ret
vmread
add
scas
bound
jne
aad
sbb
dec
push
xchg
xchg
nop
mov
sub
rcll
mov
or
imulb
test
adc
jne
push
add
pop
es
add
nop
gs
ja
xchg
or
stos
es
and
jmp
mov
lret
xorb
mov
stos
mov
outsb
data16
pop
xor
mov
or
sahf
jo
mov
insl
fmull
test
subb
xchg
xor
mov
shrb
xchg
pop
inc
jecxz
stos
aas
pusha
push
sbb
push
or
roll
mov
and
jne
outsl
jbe
adc
rolb
sbb
iret
data16
mov
dec
jne
mov
pop
and
xchg
cmp
lods
ret
push
adc
bound
xchg
or
xchg
clc
int
fwait
adc
stc
mov
push
dec
inc
into
mov
repnz
cld
push
jecxz
stc
mov
cmp
or
jns
and
ret
fisubrs
jecxz
xor
dec
adc
mov
adc
negb
test
int3
mov
adc
pop
dec
aaa
push
out
push
dec
push
xchg
xchg
dec
in
shll
push
pop
jp
mov
mov
jnp
sbb
cmpsb
loopne
jno
lret
movsb
test
xchg
pop
inc
orl
lret
jb
inc
mov
mov
mov
scas
sbb
xor
imul
and
adc
rcrl
iret
adc
sbb
sbb
jne
push
pop
sbb
sub
add
lret
cmp
cmpsl
push
xor
or
adc
and
fld1
test
jae
popa
adc
out
call
lock
jecxz
adcb
jae
outsb
xor
push
lods
inc
push
in
in
mov
xor
cmpsb
jle
sarl
add
xchg
or
sarl
data16
loop
loop
jnp
xor
cmp
inc
or
outsl
jmp
sub
test
enter
fwait
add
fimuls
lock
and
ss
pop
xor
pop
out
mov
fld
pop
push
test
das
mov
outsl
shrl
mov
sub
mov
xor
lock
popf
and
out
dec
lods
leave
lds
ds
adc
mov
push
mov
jecxz
mov
out
pushf
stc
out
mov
lea
xchg
jmp
mov
inc
jbe
shrl
pop
std
push
mov
mov
jmp
outsb
arpl
mov
xor
push
add
sbb
pop
sub
daa
and
xchg
cmp
mov
jns
push
jle
mov
flds
inc
test
das
push
aas
mov
stc
ds
insl
aam
sub
lea
lret
pshufw
dec
push
testl
jne
pop
cmp
pushl
cmp
rcrb
cmp
cmp
adc
jne
in
mov
push
ss
shlb
roll
xchg
add
pop
dec
insb
aaa
cltd
jg
cwtl
jnp
inc
and
ja
ljmp
test
and
dec
xor
pusha
jo
loopne
mov
mov
js
adc
or
sbb
xchg
ficompl
pop
jmp
and
lahf
cwtl
lcall
into
xchg
sub
and
incl
or
cmp
lahf
fs
or
xchg
or
push
mov
out
data16
in
in
mov
and
sahf
imul
jbe
int3
in
clc
add
mov
es
std
pop
scas
pop
xchg
xchg
xchg
cltd
mov
data16
sbb
das
in
mov
pop
xchg
sbb
sbb
and
mov
fistps
lret
jmp
or
xchg
es
cmpsl
jge
push
inc
cmp
xchg
jecxz
out
sub
cmp
movsl
fstpl
cli
xor
outsb
ja
add
cmp
into
cmp
pop
call
sti
inc
rcll
mov
das
arpl
jb
std
into
js
jne
xchg
insb
sti
add
bound
repnz
xor
cmpsb
sub
dec
push
cwtl
cmp
clc
pop
inc
ss
mov
jnp
hlt
xor
push
pop
cmp
push
imul
rcr
push
pop
sbb
xlat
mov
mov
push
mov
mov
rclb
adc
lcall
fcoml
dec
into
or
add
push
xor
ret
xor
sbb
test
mov
data16
and
dec
int
jp
inc
xlat
and
sub
fcmovb
inc
sub
into
aad
mov
push
mov
fcoml
mov
add
xchg
cmp
jne
inc
add
fidivl
or
dec
cltd
adc
lods
inc
push
es
mov
dec
scas
jg
mov
roll
je
pop
cmp
rcll
sti
inc
repz
jecxz
xchg
out
fdivl
dec
adc
jp
mov
add
out
push
pop
pop
dec
popa
stos
pop
mov
pop
lahf
push
sbb
inc
mov
or
mov
icebp
test
mov
repz
les
add
clc
je
fcoms
dec
lds
xor
add
bound
out
jge
ljmp
cmp
cmp
sub
imul
mov
mov
test
xchg
mov
jne
pop
leave
adc
jnp
inc
lret
pop
outsl
mov
push
pop
ret
jo
sub
xchg
sub
pusha
pop
cmp
pop
mov
dec
lods
sbb
popf
jno
lret
xchg
dec
cld
xorl
jbe
inc
les
mov
hlt
rorl
daa
out
shlb
pop
jnp
lret
dec
jecxz
shl
idiv
push
xchg
lods
shlb
xchg
xchg
cmp
inc
fsubrs
mov
movsb
ret
ja
into
sbb
jns
fnsave
imul
sub
push
dec
jmp
out
orl
fwait
jnp
test
jmp
call
in
addr16
out
pushf
inc
jno
inc
push
sar
dec
mov
bound
xchg
out
fisttpll
adc
xchg
mov
shrb
dec
cli
stos
jecxz
xor
hlt
push
pop
inc
shll
cmp
push
inc
cwtl
outsb
sub
insl
jb
pop
enter
movsl
xchg
fdivr
dec
enter
push
ds
xchg
jae
sarb
cld
cmpl
mov
pop
loope
xchg
test
and
mov
mov
cmc
cmpsl
lea
jle
dec
adc
adc
adc
mov
pop
pushl
or
out
pop
pusha
pop
mov
dec
adc
cwtl
fs
mov
in
jmp
pop
out
xchg
scas
xor
push
std
jg
and
pop
std
fcmovb
dec
cltd
daa
jge
or
xchg
push
mov
cmpsl
hlt
cwtl
cmpsb
push
and
xchg
inc
in
mov
ja
sub
aas
mov
popf
xor
out
popf
mov
cltd
xchg
cltd
fldcw
imul
add
mov
jb
push
nop
xor
cmp
xchg
inc
arpl
push
sub
lcall
into
and
clc
mov
test
mov
fcomp
repz
jmp
push
ret
mov
dec
sub
xchg
dec
lods
or
rorl
xor
fwait
cld
test
fucomp
les
cmp
or
outsb
inc
cmp
into
dec
ja
and
mov
adc
imul
ja
mov
adc
cmpsl
sub
jge
mov
sahf
xor
push
xor
dec
sub
loop
jle
fwait
cmc
push
aas
jmp
arpl
pop
test
loopne
and
sti
adc
and
cs
scas
ljmp
jns
incl
dec
lods
ljmp
inc
fisubs
das
shrb
imulb
scas
mov
gs
jne
out
js
loopne
jp
pop
fdivl
loop
or
lds
or
int3
mov
push
or
push
xor
cld
fdivrp
lcall
xchg
leave
inc
adc
les
outsl
or
cs
xchg
pop
mov
mov
sbb
sbb
sub
test
cmp
fisubrs
pop
add
sbb
or
xchg
mov
cmp
mov
dec
in
fnstenv
movsl
jns
mov
inc
jmp
push
dec
or
and
lret
out
or
xor
outsl
call
mov
cmp
loopne
insl
repz
sahf
push
leave
fstpt
add
jp
xor
daa
jp
and
push
mov
sbb
fsubrp
dec
daa
dec
or
subb
jno
data16
add
sbb
mov
dec
sbb
loope
pop
xchg
popa
pop
ss
jae
test
pop
mov
clc
setge
cmp
idivl
mov
mov
push
movsb
popf
call
jl
fwait
popf
dec
nopl
inc
ds
add
rcll
pop
cmp
testb
lods
xchg
and
mov
sub
add
and
shlb
mov
mov
adc
shl
mov
repnz
lods
ja
stos
lcall
xor
cmpsl
push
or
aaa
lcall
cmp
push
xchg
insb
daa
or
mov
cmc
fs
inc
mov
in
popf
add
rcl
sub
loope
out
enter
add
inc
jle
jne
sub
aam
ret
mov
cmp
lock
mov
test
push
or
out
adc
inc
jl
xor
test
add
adc
add
outsb
pop
xchg
pop
scas
shll
xchg
cli
fdiv
adc
mov
scas
out
add
sbb
mov
insb
mov
mov
cmp
xor
push
pop
movsb
mov
inc
jb
sub
mov
sbb
push
sub
cmp
icebp
aam
adc
jmp
popf
sub
enter
scas
jmp
xor
popf
test
adc
push
int3
add
fnsave
xchg
push
xor
lods
pushf
repnz
ret
push
mov
out
sbb
mov
pop
and
sub
movsb
mov
pop
dec
xchg
mov
xor
mov
xor
in
loopne
pop
mull
inc
rorl
and
dec
xchg
icebp
push
imul
jecxz
pop
push
loopne
pop
pop
mov
cli
int3
sub
adc
clc
sbb
or
lcall
enter
sbb
add
mov
xor
std
ja
fldcw
lods
sarb
out
push
leave
pop
popa
xchg
popa
pop
loopne
clc
adc
out
sbbb
lock
xor
mov
adc
inc
pop
mov
mov
shll
nop
jne
addr16
cltd
adc
and
frndint
add
mov
adc
pop
fwait
cmpb
xchg
or
and
ret
adc
xchg
pushf
sbb
xchg
adc
mov
sub
outsb
nop
jmp
shll
inc
adc
mov
arpl
scas
fimull
push
cmp
xor
cltd
push
push
push
loopne
cmp
rolb
mov
adc
xchg
ret
add
pop
mov
xchg
mov
sub
jmp
cmc
fnstsw
push
popa
cmp
cmp
dec
pop
mov
shrb
data16
pop
add
fisttpll
lds
in
pop
js
jb
inc
out
call
xchg
mov
push
mov
xor
mov
cltd
sbb
or
lahf
pop
lea
pop
cmc
dec
sub
pop
mov
xlat
outsl
lock
mov
sub
aaa
daa
clc
ret
subl
cmp
push
sub
das
aam
movsl
je
rcll
ret
outsb
mov
rcl
out
sbbl
mov
mov
mov
mov
scas
cmpsb
and
or
fwait
lds
sbb
sbb
cmp
dec
adc
or
mov
fwait
mov
mov
and
inc
ds
adc
or
enter
or
and
mov
lods
sub
cmpsl
add
fwait
inc
mov
pop
sbb
pop
fucom
push
into
lods
cltd
sub
xchg
dec
mov
flds
shlw
imul
mov
adc
mov
push
stos
pop
fs
sarl
cmp
ret
sub
pop
xchg
jle
adc
jle
dec
push
cltd
xor
lret
gs
fnstcw
xlat
jecxz
movsl
or
dec
push
insl
sbb
ret
xchg
adc
mov
sbb
lods
dec
cltd
and
scas
mov
sub
sbb
add
inc
inc
faddl
xchg
cli
inc
cwtl
cmpsl
insb
xor
mov
add
fldenv
pop
into
adc
cmpsl
xor
and
or
int
lods
xchg
cld
fdecstp
xchg
cmp
cwtl
xchg
inc
rcl
fwait
pop
call
mov
dec
fwait
and
scas
outsb
lds
stos
jb
cli
adc
inc
scas
or
push
loopne
aas
cmp
aad
jle
clc
ret
inc
or
popa
fwait
mov
adc
xor
push
add
xchg
pop
ret
or
filds
xor
insl
clc
lea
test
push
mov
or
cmp
enter
cmp
shlb
mov
jne
sub
lods
dec
add
mov
jl
push
mov
push
popa
cltd
add
add
popa
sub
jecxz
das
jo,pn
cmc
adc
insl
adc
mov
jp
jns
adc
dec
fildll
sub
sbb
negl
mov
adc
xchg
mov
adc
mov
imulb
sub
xor
rol
push
repz
repnz
ficoms
js
add
jle
nop
and
fildl
ljmp
sub
int
cmp
loope
inc
and
and
fidivrl
les
add
xor
out
push
fs
lock
add
jae
jne
jmp
test
das
fwait
push
inc
cmp
jno
cltd
pop
out
mov
xlat
pushf
and
popa
shr
and
mov
pop
bound
sahf
repz
xchg
lcall
movsl
stos
cmpsb
sub
push
push
pop
push
outsl
bound
and
ret
mov
adc
mov
and
xor
icebp
repnz
out
mov
roll
shlb
int
fcom
aas
fildll
outsb
jecxz
out
and
test
fnsave
in
rorb
xor
mov
sub
pushf
inc
shll
xchg
xchg
lock
inc
xchg
cwtl
adc
mov
out
dec
inc
sbb
xor
cltd
jno
out
sub
jle
cld
mov
ss
inc
loopne
lcall
inc
pop
in
movsb
mov
or
call
jnp
dec
imul
fistpl
inc
or
adc
aad
jle
in
mov
adc
loopne
out
cmp
test
shlb
sbb
jecxz
xor
ss
adc
lea
add
stos
lret
push
je
je
mov
je
cmp
jbe
loop
pop
sub
je
mov
stc
mov
sbb
cld
xlat
adc
xlat
jmp
mov
fsts
adc
xchg
cmp
adc
lcall
or
cmp
mov
lods
hlt
test
jle
mov
sub
mov
out
mov
sarl
sahf
push
add
jl
fdivp
cs
mov
subl
jb
sub
jecxz
lahf
insb
aad
xor
lods
adc
andl
inc
sub
fs
shrb
jae
or
sbb
jae
jns
and
sub
dec
xchg
jecxz
aaa
mov
pop
jno
pop
dec
hlt
mov
add
push
inc
inc
imul
xchg
mov
int
inc
shlb
jne
scas
dec
shl
aaa
popa
ljmp
sub
int3
add
adc
mov
sbb
jl
cld
xlat
pusha
sub
sbb
cmp
adc
stc
xlat
cmpsb
icebp
sbb
cmpsl
scas
add
je
push
mov
inc
scas
lret
xchg
jne
int3
sti
jnp
push
mov
ja
mov
insb
data16
or
test
es
or
adc
xchg
push
loopne
data16
lcall
cltd
adc
cmp
mov
icebp
in
mov
jg
lahf
pop
imul
mov
dec
push
lret
fstpt
xchg
out
pop
mov
adc
lock
xchg
dec
or
cmpl
xlat
pushf
pop
adc
hlt
xchg
out
adc
mov
je
aas
inc
pop
dec
addps
or
add
pusha
fdiv
popl
fcmovnbe
ds
pop
in
dec
aas
inc
clc
xor
jmp
dec
movsb
js
mov
add
adc
inc
sbb
negl
inc
lret
aad
ror
mov
fs
jbe
cmp
lods
push
sbb
dec
imul
in
or
int3
sub
push
cltd
sti
push
mov
stos
gs
icebp
pop
or
jno
scas
jg
leave
loopne
xchg
cmp
dec
adc
rcrb
mov
sub
sub
aaa
dec
popf
lock
das
ds
je
add
xchg
cmpsl
pop
mov
test
scas
bound
cmp
hlt
fisubrl
xchg
mov
adc
imul
inc
clc
add
push
cmp
dec
jmp
pop
jnp
mov
lods
sbb
inc
dec
adc
and
xchg
xor
add
cmp
outsb
hlt
pop
sub
stc
and
or
mov
cmp
rclb
lret
jo
or
addr16
dec
repnz
sahf
lret
add
movsb
inc
aad
sub
mov
sub
or
lock
or
movsb
fisubl
push
push
stos
mov
icebp
mov
bound
xlat
leave
sub
push
ret
dec
shlb
out
pop
or
idivl
lret
addb
fwait
xor
out
adc
mov
mov
sub
cmp
push
repz
repz
test
pop
out
movlps
and
adc
push
aaa
negl
mov
jle
or
lods
ds
and
mov
les
push
rolb
mov
leave
cmpsl
mov
pop
icebp
ja
ja
adc
fnstsw
pushf
lahf
stos
xor
xor
and
nop
xlat
xchg
push
xchg
pop
inc
jnp
mov
cs
push
and
and
movl
dec
addb
daa
jo
lds
out
push
lahf
shlb
out
inc
inc
or
stos
jmp
inc
pusha
jge
jle
movb
popf
loopne
cld
or
adc
fimuls
sub
dec
lods
fs
sub
mov
cmpsl
arpl
pop
lcall
sbb
jmp
add
mov
pop
call
inc
pop
jmp
fisttpll
int3
or
je
adc
push
enter
adc
mov
faddl
jl
mov
sti
sbb
mov
adc
jmp
int3
push
outsb
lret
loop
scas
adc
arpl
push
mov
pop
ss
sbb
xor
xchg
mov
mov
pushf
nop
cli
or
xor
adc
jl
testb
mov
in
cmp
rcl
repz
sub
mov
mov
xor
popf
push
aas
jl
jg
and
rorl
sti
cwtl
lahf
sbb
dec
in
mov
rcrb
ret
push
lcall
mov
shl
scas
in
mov
fucomip
dec
lock
inc
hlt
repnz
pop
pop
push
or
pop
in
mov
enter
shlb
fiaddl
add
or
outsb
call
dec
jnp
add
nop
jl
mov
and
movsb
lds
sbb
sbb
insb
or
das
push
int
push
xor
xchg
adc
dec
inc
jmp
cmpsl
out
or
jmp
sub
jnp
inc
inc
jecxz
cmp
call
mov
stos
and
push
push
into
cs
test
stc
inc
arpl
dec
std
xchg
push
mov
xchg
ret
push
xor
sbb
int
stos
mov
add
pushf
cwtl
mov
push
jnp
ljmp
push
xor
xor
adc
mov
mov
call
mov
rcll
sub
xchg
jo
add
and
pop
jb
inc
cmp
add
insl
iret
add
add
sub
cmpsl
or
mov
test
xchg
fadd
pop
dec
push
inc
scas
adc
repnz
mov
loop
les
or
mov
test
and
pop
mov
sub
popa
fistl
mov
lea
and
lahf
push
fwait
adc
xchg
hlt
popf
scas
adc
out
imul
pop
adc
dec
out
pusha
jp
sub
pop
es
in
mov
fstpl
xchg
jl
and
mov
test
popa
icebp
jbe
scas
dec
inc
popa
sbb
fwait
dec
ss
addb
mov
subl
bound
stos
jle
mov
xorb
inc
adc
test
xor
dec
mov
mov
js
mov
outsl
inc
inc
or
mov
and
mov
sub
xor
mov
dec
cmp
sarb
fists
sub
mov
sbb
js
mov
or
cmp
sub
lret
shll
sbb
enter
xchg
jo
mov
iret
pop
call
adc
pop
dec
cmpsl
test
mov
mov
xlat
push
das
sub
fmull
pop
stc
jae
cmc
dec
jbe
mov
push
push
pop
jne
mov
in
stc
push
push
xor
pop
outsl
fs
ficoml
adc
pusha
imul
adc
inc
push
cwtl
int
cwtl
popa
add
lock
stos
fwait
lods
cli
cmp
test
inc
inc
push
sbb
stos
mov
jb
push
mov
test
or
js
mov
fucomip
push
push
movsl
pop
pop
clc
add
cltd
mov
jae
sahf
shll
mov
cmp
fwait
loopne
pop
in
xchg
and
shll
lods
ret
data16
mov
dec
les
and
scas
loopne
adc
out
inc
in
call
inc
in
push
test
or
add
sub
pop
out
cs
jo
js
mov
sbb
enter
daa
mov
test
xor
add
jns
repnz
dec
movsl
push
push
jge
mov
enter
scas
cld
aas
sbb
mov
inc
pop
insl
cmpsb
xor
imul
mov
stos
jnp
lret
lock
adc
push
jle
sti
inc
icebp
mov
aas
add
stc
repnz
ljmp
leave
aaa
jmp
ret
movsb
mov
cmp
sahf
pop
or
mov
stos
inc
add
hlt
push
xchg
add
and
inc
shll
sbb
andl
test
or
rol
inc
icebp
or
inc
jae
fxch
movsl
add
test
xlat
sbb
sbb
push
rcl
mov
lea
pusha
sub
movsb
test
add
and
outsl
shl
popf
out
jmp
out
pop
loopne
pop
cld
mov
lods
jle
enter
stc
jae
mov
mov
imul
mov
lods
rcrb
fildl
cmp
insb
movsb
clc
and
jl
add
xchg
lret
mov
sbb
jp
das
sub
jne
cltd
out
imul
push
lock
push
ret
stc
jb
addr16
pop
push
stos
andb
lret
add
jg
fisubrl
cltd
int
add
repnz
out
and
ficomps
ja
add
enter
inc
aad
imul
setnp
das
xor
shrb
push
dec
outsb
movsl
pop
mov
mov
idivl
addr16
call
push
adc
push
sub
adc
adc
dec
jg
dec
jge
push
out
sti
inc
sub
cmp
jbe
or
jns
pcmpeqb
rcr
sti
push
lds
pop
xchg
mov
sbb
lods
jge
cmp
and
sub
push
sub
add
gs
dec
xor
mov
sub
in
jecxz
ret
jae
enter
andps
jnp
imul
cmpsl
jb
fs
shl
sub
push
xor
aas
clc
adc
cmp
push
out
sub
ja
les
inc
lcall
push
mov
int
popf
mov
sub
add
stos
pop
jb
mov
call
mov
ret
cltd
mov
roll
sub
in
add
pop
je
aas
outsl
or
insl
mov
ss
mov
lods
cmpsl
pusha
and
mov
sub
int
fldt
div
mov
jmp
mov
sbb
sbb
aaa
loope
jae
dec
jl
test
fsubrs
shlb
in
iret
pop
jge
sbb
xchg
jge
cmp
shlb
push
mov
or
sbb
fldcw
imul
add
rcrb
jg
lods
loopne
push
and
and
pop
popf
pand
inc
dec
sahf
dec
sbb
sahf
mov
pop
stos
gs
das
ret
or
sbb
out
xor
mov
add
nop
gs
fwait
dec
out
adc
or
push
xchg
xor
jnp
roll
sbb
faddl
cmc
movsb
dec
ret
int3
mov
xor
in
imul
sub
test
mov
out
stos
xor
hlt
add
les
dec
and
sbb
pop
add
fsubr
aad
xchg
xchg
inc
mov
and
push
xor
mov
das
cld
mov
and
xlat
or
or
inc
mov
sbb
dec
or
dec
mov
mov
mov
push
push
test
je
push
sbb
xchg
fidivl
int
mov
lret
insb
dec
mov
test
ljmp
ret
lcall
push
push
xchg
adc
or
xchg
or
stos
add
push
cmp
xchg
mov
jnp
and
icebp
push
iret
cli
mov
lcall
outsb
lret
call
mov
iret
fstl
cmc
aas
xor
xlat
inc
fldl
push
xchg
hlt
int3
dec
enter
jp
mov
dec
pop
mov
cmc
aas
pop
mov
jns
mov
test
aas
jp
inc
repz
pop
fwait
and
mov
pop
xchg
xchg
idivl
adc
push
mov
in
es
jne
sub
data16
cs
mov
push
xchg
testb
inc
lahf
fisubl
sbb
adc
outsl
push
mov
xchg
cmp
mov
scas
pop
xor
icebp
sub
fadds
xor
movb
dec
shlb
std
in
inc
and
gs
sbb
push
add
and
xchg
scas
mov
jmp
sbb
add
scas
dec
xchg
fst
adc
scas
adc
push
sbb
mov
xor
scas
push
popa
jl
mov
xchg
mov
adc
adc
mov
fsubl
or
mov
jmp
mov
pop
or
or
mov
mov
and
lcall
aas
aad
and
xor
aaa
jecxz
pop
mov
cmpsl
or
repz
add
or
xchg
mov
dec
inc
add
mull
pop
enter
xchg
scas
ds
or
mov
ret
mov
fcoml
js
fcoml
sbb
pop
popf
fnstenv
mov
cmpsb
call
mov
cs
cld
lods
push
dec
jecxz
inc
mov
pusha
xchg
sub
ja
cmpsl
jg
inc
les
fbstp
insl
sub
ja
jns
imul
fs
mov
mov
clc
das
jo
xor
adc
mov
aad
add
mov
in
lcall
pop
mov
fwait
stc
call
sbb
mov
popf
pop
pusha
fnsave
int3
aad
out
das
imul
mov
inc
add
jecxz
ja
aad
adc
icebp
in
int3
in
xchg
sete
cmp
xorl
mov
or
in
push
mov
jno
push
scas
jg
xor
and
popa
add
ret
sbb
outsl
dec
lods
pop
cmc
pusha
enter
add
popf
leave
xor
jp
sub
jle
jne
out
sti
lods
fistpl
aas
inc
xor
xor
inc
orb
imul
mov
mov
popf
lods
cmp
fists
lret
dec
arpl
dec
cmp
call
lcall
dec
push
notb
outsl
mov
cs
jmp
inc
cmpb
xchg
jg
push
mov
xchg
fisubrs
test
xchg
xchg
into
fdivl
movsl
mov
fidivrs
std
loope
add
mov
cltd
repz
out
mov
add
out
es
adc
add
cmp
int3
xor
aad
dec
insb
in
int3
insl
jle
das
xor
mov
mov
ljmp
jmp
jb
out
les
pop
or
pop
mov
ljmp
and
jg
push
inc
add
push
push
cltd
adc
lock
clc
mov
sbb
insl
pop
cmpsl
and
xchg
xchg
sbb
xor
test
scas
inc
sub
sbb
into
cmc
aad
out
lds
add
pop
aaa
aas
dec
xor
cmp
test
xchg
pop
lahf
test
push
cmpb
jns
sbb
push
lea
leave
out
add
mov
mov
inc
lret
pop
int
sub
inc
in
test
ds
jne
mov
push
sub
enter
das
push
ja
cmp
lahf
outsb
aam
pusha
pusha
adc
jge
pushf
sub
sbb
scas
mov
xchg
js,pn
fistpl
sbb
ret
gs
pop
cli
les
into
dec
push
iret
cmp
enter
lea
movsl
mov
repnz
enter
pop
sarb
loope
xor
xor
add
sbbl
jnp
aas
jecxz
adc
pushl
push
mov
shlb
mov
scas
cli
xor
mov
or
scas
pusha
jl
or
jno
push
aas
addr16
sub
imul
testb
xchg
into
fyl2x
fisttps
wbinvd
imul
aaa
sub
in
gs
in
jns
mov
std
inc
jne
pop
sub
idivb
xchg
push
dec
pop
data16
sub
jns
incl
cmpsb
inc
mov
pop
add
jnp
inc
mov
in
add
xor
jge
movsb
dec
test
dec
daa
inc
fwait
adc
mov
divb
xchg
test
jb
fucomip
dec
or
jle
xchg
paddusb
nop
add
pop
sub
out
add
adc
sub
fidivrs
in
bnd
push
fwait
xchg
pop
cs
das
dec
out
popf
or
adc
jbe
push
cmpsl
and
adc
push
in
pushf
vpshuflw
idivb
pushf
shl
xchg
push
or
rclb
dec
mov
test
das
or
xor
dec
orb
mov
fs
xor
stc
xchg
push
sub
enter
cld
icebp
cltd
or
mov
mov
daa
jmp
test
add
xorb
movsl
sahf
xchg
inc
jle
add
pop
sub
stc
ja
lods
mov
sti
aas
mov
mov
insl
les
sub
jb
pop
mov
xor
dec
sbb
fcmovnb
cmpxchg
mov
int
mov
push
pop
cwtl
pop
lcall
jo
jae
and
daa
inc
push
sbb
push
jns
mov
cmp
inc
adc
aad
jns
mov
jl
or
ss
arpl
cmp
dec
jge
adc
pop
popf
int3
pop
jp
pop
and
adc
or
sbb
repz
mov
mov
adc
add
lods
or
mov
sbb
and
mov
and
mov
addr16
mov
mov
hlt
jb
dec
cmp
bound
andl
xlat
push
pop
mov
sti
xlat
sbb
mov
mov
and
mov
or
in
xchg
es
jmp
movsl
es
pushf
mov
in
sahf
lea
sub
add
inc
test
jecxz
mov
xor
cmp
jae
add
bound
push
jecxz
enter
out
mov
cltd
hlt
in
xlat
insb
jg
movsl
pushf
inc
int3
lock
inc
push
outsl
leave
xor
and
mov
mov
les
inc
push
out
imul
cmp
jbe
je
mov
pop
inc
mov
xchg
xchg
mov
jle
push
mov
push
and
adc
push
sbb
and
xchg
mov
adc
mov
xchg
popf
mov
sbb
cwtl
ret
mov
inc
rorl
stos
jg
or
fs
scas
xchg
shrb
adc
or
sbb
fcompl
hlt
mov
push
fisubs
or
sti
dec
sub
and
call
sbbb
push
pushw
mov
mov
sbbl
bound
cmc
xor
sub
mov
inc
ss
sub
bound
push
stc
imul
jns
push
out
jle
push
sbb
into
aad
iret
in
shl
out
rcr
mov
lahf
mov
cs
adc
imul
xlat
xlat
or
mov
orb
push
inc
lods
mov
lods
in
lret
mov
pusha
imul
insb
jno
mov
shll
pusha
aas
sbb
loop
jg
mov
lea
std
add
xlat
jo
in
and
jb
dec
cmp
mov
mov
lret
sub
mov
pop
jmp
sub
fstp
xchg
or
imul
inc
push
push
and
test
and
pop
push
xchg
push
mov
jo
and
xor
imul
sbb
add
aam
dec
mov
repz
addr16
aad
lret
xchg
push
push
insb
jmp
fistps
pop
int
adc
mov
ja
lods
lret
lds
dec
dec
sbb
enter
or
jg
bswap
xor
push
jne
mov
jae
stos
mov
repnz
xor
arpl
ja
lea
ret
or
ja
sub
push
hlt
lock
pop
add
dec
int3
sbbb
rolb
in
jb
inc
fs
push
jno
push
das
or
jne
test
cmp
xor
jp
fisubrs
dec
in
jb
xchg
addr16
push
cmp
std
xor
sti
les
xchg
sub
push
sub
cmp
dec
jl
repnz
mov
fistl
adc
cmp
mov
dec
cmc
adc
cld
mov
aaa
std
loop
in
iret
adc
in
lret
pop
sub
pop
and
dec
pop
sbb
adc
cmp
sub
mov
fcmovnb
jecxz
mov
mov
sqrtps
ljmp
pushf
mov
inc
jl
jecxz
loopne
les
sub
fstl
sbb
inc
pushf
lods
mov
mov
and
sbb
cmp
inc
pushf
mov
inc
je
dec
loope
inc
pop
lods
sub
mov
les
pop
and
leave
add
jp
shr
adc
xorl
sub
push
into
xchg
jae
or
mov
adcb
and
sbb
mov
push
pushf
cwtl
fadd
aad
push
data16
sub
mov
hlt
push
js
jl
jge
faddp
dec
test
inc
repnz
ljmp
dec
inc
push
ds
jns
jg
repz
cli
repnz
outsb
cmpsl
cmpsl
ljmp
jbe
push
out
sub
test
mov
jae
stos
stos
call
adc
js
inc
insb
adc
xchg
int
shll
lea
push
cmp
test
add
mov
add
push
push
lret
sbb
iret
test
jmp
pop
jns
shrb
mov
sbb
rorb
xchg
and
jmp
rcll
scas
and
fisubrl
xor
dec
xchg
aad
push
lods
std
cmp
ja
cwtl
adc
push
pop
and
pop
mov
lret
rclb
xchg
and
push
test
adc
mov
pop
shr
dec
mov
jge
in
rorb
aaa
push
fmuls
push
andl
push
ret
shl
sbb
or
lods
ds
jge
push
notl
sti
repz
or
ret
repz
je
mov
shll
pop
popa
mov
sub
movsb
dec
js
cmp
filds
dec
xor
loope
mov
mov
std
mov
push
loopne
les
iret
bound
test
ret
leave
mov
mov
mov
repz
xor
cmc
and
dec
dec
pop
dec
lods
fsubrs
jecxz
idivl
ja
mov
sbb
enter
jae
xchg
xor
cmp
stc
xor
cwtl
mov
aas
xchg
enter
rolb
jne
pop
pop
sbb
sbbb
add
pop
cmp
js
xchg
pop
and
inc
push
pop
stos
jmp
cmc
sub
jo
das
aas
jle
cld
xor
jb
jmp
sub
rcrl
out
mov
pop
or
dec
and
insl
imull
sub
in
add
dec
push
push
push
test
imul
mov
jns
pushf
xchg
lcall
mov
cmpsb
pop
ret
pop
xchg
or
enter
cmp
xchg
in
jnp
add
push
push
mov
hlt
sbb
mov
loope
insl
je
movsb
jmp
ffreep
insl
pop
dec
push
xor
mov
into
jl
in
dec
lods
sbb
psraw
fwait
push
dec
lahf
lret
mov
xor
mov
adc
test
mov
sbb
je
gs
je
or
sub
sub
lods
jl
add
clc
stos
iret
pop
in
mov
add
lods
ds
cmc
cmp
mov
mov
data16
loope
mov
dec
out
inc
mov
psrlq
je
bound
sarl
mov
push
push
sbb
enter
sub
push
addr16
test
and
push
mov
mov
flds
pop
ret
jl
aam
sbb
lods
shl
and
iret
sti
or
mov
fadds
mov
into
shrl
call
shl
fldenv
dec
pushl
xchg
pushf
sbb
insb
xchg
add
enter
push
enter
fdivs
outsl
xlat
mov
pop
jo
or
ja
sub
jb
rolb
lret
lock
inc
push
mov
js
and
pop
or
fwait
cmp
adc
xor
fyl2xp1
xchg
sub
xlat
or
call
mov
aam
push
inc
cld
repz
pop
xchg
add
pop
orl
fdiv
inc
addr16
je
jns
xor
xchg
pop
daa
fsubrs
idivl
mov
pop
cmp
inc
fcomi
mov
mov
pushf
mov
jb
jle
js
jge
sub
nop
mov
push
out
dec
xchg
lock
notb
jb
or
or
cmp
ds
test
into
sub
push
and
jl
inc
sbb
gs
arpl
xor
test
pusha
pop
and
mov
dec
xor
shrb
inc
into
pop
fwait
les
inc
sbb
iret
pop
inc
sbb
ror
fmul
inc
pop
cmpsl
pop
inc
rol
rcll
sbb
loopne
push
jbe
fwait
leave
jae
inc
or
mov
sbb
jle
push
inc
fiadds
cmpsb
cmpsb
jne
js
repz
sub
push
mov
cmpsl
inc
pop
xlat
jecxz
lret
jge
jae
loop
push
fwait
loopne
jo
cwtl
push
aad
add
getsec
pop
push
hlt
jo
fisubrl
push
in
test
push
adcb
push
xor
stc
fs
xchg
sarb
in
mov
inc
or
call
pop
pop
sbb
jns
rorl
scas
fldenv
mov
sub
outsb
xlat
mov
shlb
xchg
cltd
xor
push
jecxz
lds
fsubs
fcmovbe
int
push
pop
sti
fs
jp
cmpsl
cmpsb
shlb
ljmp
dec
fnstcw
into
pop
adc
mov
in
sbb
lahf
or
and
pop
shl
mov
jmp
push
mov
out
enter
sbb
or
inc
mov
aad
jns
clc
pop
xchg
roll
inc
icebp
mov
cwtl
je
pop
xchg
lods
scas
jns
pop
ds
ret
jmp
daa
test
mov
stos
add
insb
neg
push
pusha
sub
aad
xchg
imul
out
dec
popf
xchg
push
addr16
shll
cmpsl
inc
sbbb
inc
sbb
pop
jnp
push
outsb
cltd
sti
stos
repnz
push
adc
push
jmp
sbb
cmc
ret
inc
jne
data16
sbb
pop
pop
icebp
sub
es
sub
mov
add
mov
inc
jg
cmp
push
insl
sbb
movups
sbb
pop
jne
jnp
mov
sub
movsl
sub
push
adc
mov
int
adc
add
or
push
mov
imulb
or
xchg
or
mov
inc
jp
mov
push
xchg
lret
rolb
ret
jecxz
lahf
in
out
dec
in
lret
leave
fs
int3
aaa
mov
add
sbb
push
cmp
fsubrp
pop
daa
adc
mulb
aaa
mov
test
mov
in
push
adc
arpl
fcompl
cmp
movsl
popa
ret
fsubr
lds
sti
jle
or
xchg
addr16
xor
pop
push
lods
sbb
int3
lea
sbb
scas
and
or
fidivrl
in
dec
cmp
outsb
call
push
inc
dec
mov
sub
mov
js
sbb
imul
and
mov
push
fwait
xor
xchg
js
or
push
jmp
cmp
testl
iret
sbb
xor
mov
testl
movsl
mov
pop
xchg
mov
jnp
jle
mov
out
outsl
sbb
xor
push
out
lret
fwait
mov
lahf
js
sub
dec
fwait
lods
out
cmp
lods
add
jo
mov
lods
mov
mov
int3
inc
jne
jle
jle
sub
inc
add
or
loopne
cmp
jne
mov
test
mov
xchg
sbb
out
mov
inc
nop
dec
insl
xchg
out
lret
outsl
es
inc
mov
xchg
or
mov
push
aaa
push
out
movsl
aas
xchg
jl
test
mov
repz
scas
scas
mov
inc
cltd
pusha
in
or
mov
sub
pop
push
cmp
bnd
insl
lea
call
cmp
or
loopne
xlat
or
mov
cltd
cli
mov
jmp
in
xchg
mov
out
jp
in
repnz
adc
mov
dec
scas
and
jb
fcmovu
dec
decl
icebp
fldt
push
das
push
cld
jecxz
and
cmp
and
fsubrs
sbb
add
jb
jno
inc
mov
xor
push
sti
outsl
add
dec
push
cwtl
rcrb
jnp
dec
adc
movl
cmc
test
cli
movsl
or
cltd
cltd
ds
movsl
frstor
and
sub
ficoml
or
pop
icebp
fists
jne
cmpsl
mov
add
xchg
aaa
add
mov
dec
add
in
cld
and
inc
xchg
xchg
outsl
push
inc
xor
push
ret
repz
push
push
mov
fisubrs
xlat
ficompl
inc
push
or
push
sub
fldenv
mov
jmp
mov
inc
mov
adc
xor
test
jl
jno
cmp
orl
xchg
mov
xchg
iret
and
insl
sbb
or
out
outsb
into
and
repnz
popa
mov
lock
push
dec
div
sbb
scas
sub
lods
aad
adc
mov
dec
mov
sbb
dec
jg
push
xchg
icebp
push
pop
mov
or
push
cs
xchg
sub
movsb
jne
mul
out
cmp
fxch
jbe
dec
arpl
xchg
ret
in
cmp
push
push
lea
push
cmp
jns
jg
int3
dec
cmpl
xchg
aaa
pop
insb
stc
test
dec
push
and
adc
push
jo
scas
mov
lock
pop
pop
sbb
test
xor
or
movsb
loope
or
sub
cli
mov
pop
xchg
mov
inc
loop
inc
mov
pop
jg
leave
ljmp
jle
test
cmp
loopne
dec
bound
sbb
and
stos
xor
push
cmpsb
jg
push
fwait
inc
aad
push
dec
push
lds
dec
or
sub
nop
mov
ja
xor
addb
mov
roll
inc
in
int
push
pop
call
cld
inc
cmp
jg
mov
push
push
cmp
in
mov
cmp
imul
or
rorl
lods
mov
jno
sbb
add
call
lret
repz
push
lock
xor
mov
cltd
cli
push
add
sbb
out
lahf
adc
inc
dec
sarb
fs
mov
icebp
or
out
mov
outsb
pop
adc
push
les
dec
outsb
xchg
jle
fidivs
repnz
ficoml
cwtl
sbb
mov
xor
pop
shrb
cli
incb
sarb
test
cmp
ljmp
dec
fistpl
mov
push
and
dec
cli
push
xchg
mov
scas
mov
xor
jmp
jp
sbb
mov
xchg
cmp
xchg
lret
and
push
mov
loop
fadds
jge
and
push
std
or
pop
push
mov
add
cmp
mov
rcll
cmp
push
repz
sarb
mov
fcmovu
cmp
in
dec
dec
lods
fidivs
adc
sub
sbbl
pop
mov
pop
add
rol
loopne
dec
and
push
mov
xchg
in
test
jmpw
mov
cmp
dec
std
sbb
ja
pop
sahf
arpl
jle
push
add
mov
stos
jbe
mov
lock
pop
clc
push
fldenv
sbb
scas
inc
pop
out
cld
js
aaa
lods
dec
repnz
out
fs
adc
cmp
inc
push
inc
cs
aad
mov
insl
andb
les
adc
fistpll
push
out
xor
enter
lcall
or
mov
fists
add
fucomi
mov
xchg
in
lds
idivb
test
xchg
xor
test
cmp
and
lock
das
dec
or
es
push
subl
pusha
sub
or
xor
sub
mov
xlat
adc
nop
repz
or
mov
mov
push
pop
daa
xor
rorb
adc
and
mov
fadds
dec
mov
push
decl
test
or
sahf
shrb
and
push
pop
pushf
shrl
or
xchg
loop
xor
and
push
sub
call
lret
inc
sub
in
sarl
mov
add
mov
dec
out
je
mov
xchg
adc
pop
sbb
lahf
in
sub
jp
dec
lcall
cwtl
jmp
ret
add
es
push
xorb
lods
jne
sub
add
in
pushf
pop
adc
popa
int
sbb
jl
mov
iret
push
in
out
out
inc
push
pop
sahf
int
xchg
and
xchg
mov
gs
outsl
cmp
inc
xchg
scas
mov
jnp
in
insb
jge
fmuls
loopne
or
dec
hlt
fcmovnb
cmpsb
mov
stos
cmpsl
add
montmul
cmpsb
add
xchg
mov
fbld
mov
dec
in
sub
mov
addr16
or
inc
lahf
mov
fs
out
jecxz
pop
call
leave
imul
rclb
or
fisubs
enter
loope
stos
jg
repz
xchg
cwtl
es
mov
nop
mov
ret
loop
insl
mov
push
inc
sub
rcr
aad
xor
mov
inc
mov
lcall
ds
cmpsl
jno
adc
data16
mov
xchg
jne
popa
adc
ror
jbe
dec
push
nop
mov
dec
fmull
and
lea
or
mov
aaa
mov
and
stc
dec
je
inc
repnz
pop
arpl
into
adc
add
lds
xchg
sbb
scas
leave
popa
mov
test
push
movsb
fildll
popf
test
inc
mov
cli
into
dec
lods
subb
pop
sub
sbb
jmp
cmp
out
xchg
pop
adc
stc
insb
xlat
nop
cwtl
pop
mov
mov
mov
ja
mov
mov
out
jp
pop
adc
cmc
adc
ret
in
sub
scas
adc
stos
push
mov
out
pop
xchg
cmpsl
aaa
in
mov
jnp
mov
and
sbb
das
mov
cmc
je
aaa
pop
sub
inc
add
xor
pop
push
mov
ljmp
inc
fscale
jae
lahf
ficompl
je
imul
aam
sbb
sti
mov
and
lret
cmp
jmp
jo
jge
ret
lock
jecxz
push
out
push
dec
pop
mov
stos
dec
inc
fs
in
aaa
clc
imul
and
cli
xchg
in
scas
test
cmp
inc
add
pop
daa
cmp
int3
test
cld
sbb
fsubr
in
and
xchg
outsl
xchg
push
cmpsl
mov
into
loop
or
mov
push
push
cmp
rolb
sub
in
xorb
jp
pop
dec
gs
lea
in
cmp
adc
leave
dec
inc
pop
cld
sub
ret
xchg
popa
dec
leave
pop
fsubrs
fwait
dec
jle
mov
es
jae
mov
xchg
add
repz
xor
aam
pusha
shll
and
mov
pop
mov
jl
or
jnp
pop
in
mov
cmp
fadds
or
adc
cld
jmp
clc
rcll
sub
mov
lock
inc
in
aad
jnp
xchg
mov
push
push
aam
je
push
pop
fnstenv
xchg
mov
rol
testb
dec
out
xor
mulb
loop
enter
xor
push
push
pop
or
sub
iret
pop
xor
sub
ss
dec
pop
jae
push
and
xor
clc
push
xor
int
clc
imul
aaa
mov
pop
out
stos
sbb
or
pop
por
adc
jo
inc
mov
icebp
icebp
sub
pop
push
call
sub
sub
scas
inc
mov
dec
iret
add
fwait
and
add
stc
adc
jb
jno
stos
mov
xchg
test
jl
cs
push
shrb
fsubrl
outsb
xor
ss
xchg
stos
mov
fnstcw
mov
roll
sbb
adc
push
scas
bound
push
xor
push
nop
cmc
xchg
lahf
dec
movsb
pop
mov
rclb
repz
mov
inc
mov
cmp
cmc
int
ljmp
mov
leave
les
outsl
mov
or
xor
or
xchg
add
rcrl
pop
sbb
sbb
dec
out
and
out
imul
jno
andl
ret
mov
ja
int3
sbb
mov
addb
loope
cld
sub
jmp
and
jmp
and
cld
sub
in
push
addr16
std
jge
popf
push
lods
mov
adc
push
pop
mov
aas
sub
xchg
aas
fstps
sub
xchg
sub
mov
int3
mov
adc
mov
cmpsl
jns
test
mov
scas
adc
mov
add
xlat
clc
gs
and
sahf
fisubs
sub
out
mov
xchg
das
jb
in
sub
push
and
fadd
mov
xchg
sub
loopne
push
movsb
mov
cltd
mov
pop
jmp
pop
repnz
jnp
mov
es
clc
lock
xor
mov
xchg
mov
push
in
push
jno
inc
daa
xor
mov
loop
jno
add
add
shrb
fs
test
dec
dec
inc
push
dec
or
arpl
mov
js
mov
mov
and
adc
dec
jmp
test
out
inc
insb
cmp
push
lret
mov
loope
ds
out
add
daa
pop
inc
xor
mov
in
mov
and
add
dec
icebp
pop
jo
sub
mov
imul
push
in
mov
pop
fiaddl
test
movsl
jb
sahf
cmp
scas
add
sub
pop
bound
inc
push
test
jg
gs
ret
push
jmp
sub
adc
test
xchg
leave
andb
std
push
inc
jecxz
jno
nop
sub
xor
pop
adc
xchg
icebp
mov
inc
sahf
sub
cmp
inc
push
mov
sub
xchg
xor
pop
lods
add
adc
aam
lret
fnsave
daa
das
inc
add
xor
pop
pop
ficompl
jmp
push
sahf
aam
pop
xchg
push
stos
adc
outsl
xor
iret
or
jo
rclb
enter
popf
mov
movsl
fadds
lcall
or
fbstp
in
adc
xchg
addr16
rcr
pop
xlat
cmp
push
loope
popf
adc
int
loope
sbb
pop
mov
xchg
mov
aad
xor
fwait
nop
icebp
ja
xchg
mov
xchg
mov
mov
push
xchg
fwait
shl
sbb
xor
inc
dec
nop
jmp
xchg
xchg
repnz
out
cld
fdivrl
pushf
arpl
mov
iret
sti
inc
dec
decl
sahf
mov
push
data16
in
xchg
xor
and
mov
push
pop
arpl
inc
sub
push
jns
scas
xchg
loopne
xlat
mov
loopne
sbbl
test
ja
or
lds
and
jle
push
dec
cld
push
cmp
sbb
mov
cmp
scas
xchg
adc
push
push
adc
jg
mov
jl
icebp
cmp
out
jp
dec
das
inc
mov
xchg
and
push
xchg
ja
inc
pop
and
mov
cmp
subb
pop
adc
fidivl
fidivs
cmp
adc
stc
shrl
repz
shr
sub
push
shll
jge
mov
jg
and
jg
or
or
fisubs
pop
rorl
notl
out
add
icebp
push
incl
sahf
mov
push
scas
and
mov
lahf
mov
loop
or
cmp
rdpmc
or
xchg
leave
pop
in
dec
sub
or
mov
mov
add
aad
loope
ss
wrmsr
lods
cmp
or
sbb
pop
pusha
mov
mov
roll
push
out
dec
cmpsb
outsb
aas
ljmp
pop
xor
andb
sbb
jl
lods
dec
fcmove
cli
pusha
jns
andb
mov
push
add
dec
cmp
js
mov
test
insb
sbb
test
imul
stos
addr16
jnp
cmp
mov
leave
fcomps
sub
fcoms
xor
or
stc
mov
push
cmp
fcmovnb
lock
js
pop
and
mov
xchg
push
test
mov
jp
jbe
mov
and
fdivs
push
xor
pop
inc
mov
mov
sahf
mov
imul
jg
xor
repz
pushf
mov
mov
out
mov
adc
jmp
gs
add
dec
outsl
test
cmp
mov
sub
cld
mov
jns
lret
adc
xchg
pop
jl
es
fidivrs
mov
cwtl
iret
popf
and
fsubr
dec
mov
movsl
add
daa
movsb
dec
lret
fdivr
fsubrs
lret
xlat
and
cmp
xor
push
cs
sub
cmc
daa
divb
fwait
pop
pusha
nop
cmp
jg
fldt
mov
lods
pop
outsl
sub
adc
pop
fidivrl
es
mov
pop
inc
loop
dec
insl
mov
adc
push
push
and
ja
repnz
aam
je
ss
loopne
ss
sub
jne
sbb
mov
inc
xchg
pusha
or
bound
cld
pop
dec
jnp
add
inc
push
testb
inc
lret
movsb
out
clc
addb
in
fcoml
out
test
loop
xchg
ret
sbb
mov
mov
repz
inc
dec
hlt
aas
pop
iret
fdivl
pop
mov
bound
mov
inc
push
xchg
dec
shl
cmp
outsl
out
xor
and
fdivrs
sub
jmp
mull
cmpsb
mov
adc
jmp
out
mov
jl
bound
ret
push
rorb
inc
xor
jbe
xchg
divb
std
pop
mov
enter
sub
lds
movsb
sbb
loopne
xchg
and
push
rorb
fsubr
pop
ja
cltd
fdiv
mov
stos
adc
pop
fisttpll
lods
ds
or
cmp
iret
mov
xor
xchg
lock
mov
loop
pop
push
mov
add
dec
outsb
lret
in
xchg
xor
outsl
cmpsl
sub
mov
ljmp
mov
add
xor
dec
dec
mov
faddl
popf
or
inc
scas
nop
adcb
daa
lret
pop
int
loop
and
dec
or
sahf
dec
cmpsb
icebp
cmp
sbb
and
sbb
shll
ret
mov
mov
sub
pop
pop
mov
dec
ds
rorl
cwtl
data16
in
push
mov
es
dec
lods
mov
mov
andl
mov
xchg
pop
scas
adc
dec
dec
loope
pop
scas
inc
mov
iret
jp
dec
dec
cmp
mov
jb
pop
push
and
pop
mov
dec
jno
xchg
in
sbb
push
sahf
hlt
fildll
cwtl
cli
dec
into
sahf
cmc
push
test
ljmp
pop
sub
rep
mov
fidivs
and
fdivrl
andl
adc
cmp
or
cmp
addl
pusha
repnz
pop
mov
in
adc
cmp
ret
js
idiv
cli
je
test
or
push
sysexit
mov
xor
xlat
inc
jns
lds
sahf
jl
mov
movsl
gs
xchg
push
outsb
stos
adc
stos
jae
les
fdivrs
jg
xlat
push
add
xchg
sub
xor
dec
pop
adc
cltd
or
and
cmpb
lds
test
push
inc
mov
outsl
xchg
or
add
in
cmpnleps
mov
sub
adc
mov
cmpsb
inc
inc
cmp
pop
adc
fnstsw
sub
xchg
mov
dec
int3
ljmp
pop
jle
loope
mov
dec
sbb
xor
pop
sahf
inc
push
addr16
or
in
dec
int
ss
mov
push
out
sbb
add
jecxz
sbb
ja
cmp
ljmp
pushf
shlb
cmpsb
pop
cli
lcall
xchg
mov
call
xchg
jae
inc
clc
mov
sub
cwtl
xchg
popa
lock
aas
inc
test
rcrl
insl
daa
jbe
out
pusha
divb
js
xchg
std
add
test
pushf
sbb
xchg
ret
xorb
push
mov
repz
test
jecxz
or
fdivr
lcall
mov
das
aas
push
add
inc
std
sub
lods
jno
xor
pcmpeqb
enter
cli
jnp
jo
inc
xchg
shrb
push
or
outsl
stos
clc
push
sub
sbb
call
mov
sahf
sub
push
sahf
je
call
or
ja
outsl
in
call
rcll
es
xchg
adc
inc
scas
negl
pushf
jl
movsl
jmp
ja
es
and
push
or
outsb
xor
js
shlb
pop
add
jne
ja
and
mov
dec
xchg
push
stos
mov
shll
ds
xchg
ja
adc
mov
into
in
out
repz
add
or
jb
jno
call
lret
push
pop
xorb
xor
sbb
stc
jp
mov
rcrl
mov
push
push
ds
xchg
and
imul
dec
xchg
test
insb
lds
decl
add
xor
out
daa
sbb
scas
sub
jnp
cmp
jnp
aad
call
int3
in
xchg
mov
pop
adc
icebp
pop
mov
push
or
movsl
pop
outsb
ss
repnz
mov
lods
ja
jmp
add
add
push
xchg
popa
mov
mov
sub
clc
and
lods
gs
sarb
xchg
jmp
push
mov
mov
push
xchg
and
fdivrs
loop
cld
jbe
les
xchg
dec
mov
push
popa
repnz
pushf
sub
xor
ljmp
jae
sbb
or
icebp
and
xchg
loope
bound
ftst
hlt
cmpsl
push
sub
loope
push
push
rcrl
imul
in
or
aam
insb
sub
push
lods
mov
popf
lret
xchg
sti
je
jmp
aas
pop
dec
or
cmp
lahf
or
sbb
xlat
pop
fsubl
xor
cmp
xchg
daa
xor
fsubrl
push
or
test
les
ljmp
add
movq
push
lret
jle
sbb
fbstp
daa
call
outsb
insl
jmp
out
xchg
push
dec
sub
jecxz
add
movsb
jns
adc
jns
popa
dec
icebp
and
cmp
out
mov
out
in
jg,pt
add
mov
and
int3
lods
or
mov
dec
in
or
cwtl
xchg
mov
mov
sti
mov
jmp
cwtl
lds
inc
and
shl
leave
scas
jae
jg
dec
scas
sub
arpl
add
mov
arpl
cltd
push
cmp
es
dec
adc
notl
jle
sbb
sub
and
add
in
arpl
xchg
inc
xlat
outsl
outsb
cwtl
in
aas
push
sub
jecxz
mov
mov
fadds
add
fisttpl
inc
push
pop
les
xor
pop
je
mov
mov
bound
dec
stc
jp
imul
lods
cld
add
cwtl
or
and
test
roll
sub
mov
gs
jnp
xchg
sub
mov
jmp
ret
stos
data16
stc
mov
mov
pop
or
das
xor
popl
in
mov
jo
mov
int
xchg
xor
pop
jecxz
loope
andb
loop
xchg
sahf
mov
jnp
popf
sub
outsl
xor
pop
rclb
jbe
push
push
mov
lods
and
adc
aad
ss
mov
lods
pop
lods
pop
das
and
adc
test
fadd
lea
arpl
ja
call
inc
push
jb
or
cmp
jne
push
int3
movsl
adc
or
test
mov
notl
insl
stc
mov
into
daa
jnp
jns,pn
add
in
shll
sar
sub
or
pop
scas
xor
in
data16
movsl
sti
push
xchg
xlat
les
or
aas
pop
fs
sub
adc
xorl
adc
inc
daa
pop
xor
cmp
xchg
push
mov
and
lock
pop
clc
mov
stc
mov
punpckhdq
push
popa
mov
addr16
xchg
hlt
pushaw
in
outsb
fcmovnu
cmpl
ss
insb
aas
ret
and
push
sub
std
xor
cltd
cmp
xchg
sbb
mov
movsb
xor
or
pop
mov
sub
cmc
in
andb
fwait
mov
in
rolb
xorl
sub
fcompl
add
shlb
and
fmuls
dec
pop
repnz
adc
sub
test
xchg
fsubl
mov
dec
in
jp
push
data16
mov
addr16
cmp
mov
arpl
mov
repnz
jle
hlt
jne
inc
sbb
popa
lret
sbb
jb
cmpl
inc
mov
iret
outsb
cmp
cmp
or
jb
arpl
loopne
xor
mov
rcl
xlat
in
lods
pop
xor
xchg
sbbb
sub
mov
sbb
repnz
and
imul
xchg
adcb
sub
or
mov
in
movsl
cmp
pop
cmc
mov
xchg
add
sbb
adc
mov
xchg
xchg
aas
fimull
sub
push
jns
loope
jle
dec
push
lret
stc
repnz
ja
shl
mov
shrl
fucomip
rcrl
dec
sub
jecxz
push
cli
xchg
cmp
push
aad
inc
cs
xchg
fs
dec
mov
enter
es
movsb
int
and
mov
sub
jb
add
push
sbb
sbb
into
adc
inc
pushl
pop
in
xor
cltd
mov
xchg
inc
sbb
jbe
adc
adcl
inc
sub
mov
std
andb
sub
cltd
inc
mov
inc
fnstsw
sahf
lds
and
sbb
jns
jae
out
adc
mov
and
and
ljmp
push
call
je
sbb
cmpsl
and
rorb
adc
add
fcomip
in
dec
loop
cltd
add
aam
aad
cmp
push
rcrb
adc
inc
sti
fisttpl
mov
xor
adc
sbb
jns
and
mov
xor
push
cmc
xchg
rep
or
mov
push
or
sbb
jae
stos
or
dec
xchg
xchg
mov
mov
sahf
mov
cwtl
push
test
int
dec
push
mov
ds
idivl
xor
icebp
lret
cmp
cmp
sbb
xchg
rcll
ret
add
out
sbb
dec
xchg
push
or
jne
dec
mov
data16
inc
sti
ja
xor
jmp
int
mov
pop
jb
or
dec
xchg
mov
jno
push
stos
xchg
cmp
test
and
test
sub
and
adc
notl
or
cmpsl
dec
inc
call
sbb
adc
loop
rcll
jl
jno
sub
pop
js
hlt
cmp
out
cmp
jbe
xor
xchg
sti
sub
pop
out
dec
cmpsb
dec
add
mov
pop
pop
mov
add
test
jb
jg
out
outsl
cmp
xor
mov
push
pop
mov
imul
ret
xchg
aad
add
aas
inc
rcrl
loop
jae
dec
addr16
sbb
inc
test
adc
pop
cmp
fisubrs
pusha
sahf
sahf
mov
pop
sbb
jmp
aad
pop
outsb
mov
xor
insl
mov
add
sbb
popl
mov
pop
push
repnz
sub
iret
ja
lea
ss
pop
in
in
in
cmp
xchg
stc
and
mov
and
cltd
push
popa
xor
xor
loope
mov
jle
maskmovq
imull
fisttps
das
mov
push
std
adc
or
ffree
jl
ljmp
stos
icebp
and
jnp
and
xor
xor
cmpl
lret
mov
or
test
mov
xchg
cmp
jecxz
mov
icebp
xchg
mov
mov
sub
inc
lods
mov
xchg
sbb
call
push
stos
les
loope
dec
push
jb
andb
dec
outsl
inc
gs
mov
mov
inc
xchg
xor
cltd
xor
mov
jl
and
pop
lods
cltd
sub
xchg
and
cmpsl
and
int
adc
fdivrs
out
dec
cmp
fdivs
or
test
aas
lods
in
sbb
cmp
hlt
cltd
shl
sbb
int3
pop
in
mov
sbb
push
jae
xor
test
cwtl
pushf
stc
data16
repnz
cld
jne
ja
sbb
loopne
js
dec
arpl
repnz
hlt
pop
insl
inc
dec
jmp
adc
dec
arpl
push
bound
aad
imul
push
mov
push
in
lock
in
jmp
sbb
jb
adc
in
std
mov
clc
jb
xlat
in
bnd
push
xchg
add
in
or
cmpsb
and
xor
sbb
inc
decb
push
in
xchg
int3
mov
mov
pop
jl
sub
in
test
xchg
cmpsl
jmp
push
pop
mov
add
pop
add
dec
pop
sbb
push
push
jns
popf
jg
aam
clc
mov
sti
ja
ljmp
xor
mov
insb
xchg
add
push
cmpsb
or
enter
mov
fdivl
jg
jecxz
lods
test
addb
scas
fs
test
andb
sbb
xor
cmp
imul
mov
mov
adc
mov
out
int
fs
addb
xchg
shlb
int3
and
mov
adc
dec
mov
in
test
mov
aad
les
inc
inc
fcmovnbe
in
push
aam
lds
mov
outsb
adc
jmp
in
lcall
mov
jmp
xchg
and
fstpl
push
mov
mov
in
or
pop
adc
adc
mov
add
xchg
jnp
mov
mov
mov
shll
lcall
ja
jne
adc
mov
gs
inc
or
call
js
jbe
filds
sub
and
sub
ss
push
cwtl
xchg
outsl
imul
mov
fs
push
dec
dec
je
psrad
and
mov
push
push
repz
push
icebp
les
imul
sbb
movsl
xor
out
mov
not
lea
rcrb
mov
enter
or
test
xlat
jno
icebp
xor
pop
inc
push
insb
dec
es
das
data16
test
sti
xor
mov
cmp
add
lahf
aas
pop
jns
xor
aam
cltd
mov
bound
cmp
push
adc
lret
scas
stc
pop
push
orb
jge
cwtl
or
sbb
sub
aam
add
mov
xchg
mov
jns
rcrb
push
out
push
mov
jecxz
sub
in
pop
add
jno
imul
pop
xchg
ljmp
sbb
lea
inc
xchg
adc
rolb
mov
or
or
pop
xchg
xor
jge
emms
sbb
test
or
xchg
jbe
pop
cmp
jmp
mov
shrb
adc
adc
push
stc
pop
in
cmc
mov
movsb
pop
dec
in
shll
jle
and
mov
jb
xchg
nop
lock
pop
enter
jg
inc
movsl
push
ss
mov
xor
inc
nop
sbb
inc
xchg
andb
cmp
lret
add
fisubrl
add
cs
xor
sar
outsb
pop
push
pop
loop
mov
dec
push
sbb
lahf
mov
mov
fildll
or
jb
repnz
mov
push
and
mov
pop
outsl
pop
jno
arpl
inc
std
mov
insb
dec
xor
mov
lcall
fdivl
push
fwait
pop
loop
sub
lret
sti
aad
je
loope
loopne
mov
or
fs
fldenv
aas
stos
push
cmp
jle
cwtl
fistps
fcmovbe
inc
pop
ljmp
xlat
inc
cmpsb
xchg
mov
sahf
cmp
hlt
test
inc
cmp
lea
xor
push
or
rorb
or
and
add
lret
sub
cmp
and
insb
xorl
pop
pop
scas
mov
fdivrs
unpcklps
ds
repz
lods
pop
imul
sbb
dec
mov
pop
pop
repz
and
push
inc
outsb
dec
dec
sub
push
sub
push
rclb
mov
add
adc
subl
jb
addl
mov
push
push
or
sbb
dec
mov
icebp
and
xor
xor
fists
inc
mov
flds
mov
push
loop
shlb
xchg
rolb
or
arpl
push
enter
idivb
das
data16
out
and
aas
jmp
popf
cli
aam
mov
cmp
int
lods
xchg
mov
push
iret
mov
pop
jp
inc
subl
sbb
mov
rcrb
imul
pop
mov
jns
pop
push
xchg
es
push
jae
dec
add
inc
das
outsl
adc
sbb
cmpsl
inc
lods
inc
frstor
or
mov
test
mov
mov
inc
inc
xchg
cmp
pusha
cwtl
push
nop
testl
jno
add
rcrl
mov
pop
ja
aam
xlat
mov
scas
add
sbb
pop
sbb
mull
pop
pusha
dec
lret
cltd
or
sbb
jnp
jno
jecxz
dec
test
jbe
push
push
mov
lock
dec
inc
cwtl
cwtl
push
and
or
test
enter
ja
lret
push
mov
out
outsb
out
out
jnp
lods
lret
cmp
xor
cltd
test
or
int
outsl
mov
dec
std
mov
push
jns
loop
lahf
push
scas
push
mov
sub
idivb
ja
sbb
jns
adc
lcall
scas
adc
pop
mov
mov
std
cmc
sub
inc
cli
lds
mov
mov
outsl
and
js
mov
mov
inc
mov
pop
push
out
cmpsl
div
push
add
xchg
cmp
fs
and
adc
out
addl
ja
jne
mov
adc
loop
dec
jae
pop
lcall
cwtl
push
lds
pusha
imulb
movsb
fcmove
and
cmpsb
sub
stc
lock
or
or
or
fisubrl
or
sub
and
push
daa
xchg
xorb
mov
jg
xor
sbb
cmp
in
loop
push
jle
dec
pop
cwtl
xchg
lret
pop
mov
repnz
outsl
add
mov
pusha
dec
cltd
pop
and
pushf
rcll
mov
sahf
pop
sti
xchg
mov
cmp
xchg
mov
pop
dec
insb
add
mov
xor
and
mov
add
inc
stos
ficoml
lret
and
mov
add
lods
int
in
mov
mov
xchg
push
add
iret
cmpsb
add
pop
xor
mov
and
stc
push
dec
push
push
jg
aam
sbb
and
stc
push
adc
xlat
add
fisttpll
adc
test
add
pusha
sbb
cld
fldt
and
mov
xor
sub
addr16
xor
adc
push
mov
in
push
or
fucom
shll
push
cmpsb
out
lock
mov
jbe
std
mov
cmp
pop
int3
xchg
fimull
stos
fdivrp
sub
negb
fcomi
xchg
fdivs
pushf
jno
scas
mov
mov
in
scas
imul
xchg
and
stc
rorl
jle
ljmp
jns
lds
lret
jl
mov
mov
dec
test
jl
frstor
sub
push
mov
push
push
and
popa
adc
out
sbb
out
push
inc
mov
xchg
cmp
repnz
aam
mov
xchg
add
adc
mov
mov
ds
ficomps
stos
sbb
shll
jno
test
xor
sbb
add
xchg
inc
xor
add
mov
insb
push
push
cmp
dec
jns
xor
or
fucom
ret
fists
xlat
fbld
sub
push
xchg
mov
push
pusha
push
jmp
xchg
and
mov
adc
nop
es
pop
push
aaa
clc
sarl
test
and
mov
mov
insb
dec
fs
cltd
movsl
cmpsb
test
xor
ljmp
cld
cmpsb
pop
push
sbb
rorb
adc
sbb
push
push
js
pop
sub
jo
pop
stos
mov
sub
xchg
notb
adc
mov
mov
jle
mov
js
dec
out
pusha
adc
pushf
mov
ret
shll
scas
mov
jo
xor
xchg
aad
push
fld1
xlat
mov
push
mov
inc
mov
cmpsb
xchg
jne
stos
hlt
dec
ljmp
sbb
adc
add
cmc
jle
cmpsb
and
shrb
xchg
xchg
pusha
psrlq
ja
fwait
rcrb
push
arpl
sub
mov
into
add
add
pop
les
mov
xor
sbb
or
jne
stc
je
push
shlb
sub
outsb
cmpsl
xchg
mov
sub
jecxz
mov
out
mov
adc
popf
int3
or
adc
add
test
push
xchg
pop
or
pop
cmp
push
divl
gs
push
or
pop
push
jmp
xor
xor
dec
sub
add
mov
fimuls
cmpsl
stos
popf
push
sbb
lods
in
xor
push
jne
mov
idivb
iret
sbb
adc
pop
pop
xchg
mov
je
nop
movups
sub
stc
stos
cmpxchg
push
mov
test
sub
jg
pushf
pusha
jns
inc
push
testl
pop
fimull
sub
and
xchg
enter
iret
movsl
insb
xchg
dec
dec
dec
xchg
orl
fisubrl
lea
enter
loope
cs
mov
xor
mov
mov
cwtl
add
sub
push
push
in
addr16
adc
aaa
inc
cld
daa
cmc
lea
lds
mov
and
add
or
cmc
lods
fdivr
loop
aam
stc
pop
movb
lret
push
xchg
stc
shlb
sti
mov
adc
mov
adc
in
sbb
sub
pop
dec
test
sbb
or
js
lea
insb
les
xor
push
xchg
jae
and
and
mov
lock
lds
sub
or
into
sbb
and
and
and
jno
cmp
sub
mov
fsubr
jl
mov
jno
fwait
sbb
add
outsb
ds
xor
lods
add
sub
in
jmp
cmp
sub
and
xchg
sbb
data16
inc
loopne
aas
inc
jno
sbb
mov
out
adc
xchg
rsm
fnsave
add
sbb
xor
mov
adc
adc
jge
sub
push
jecxz,pt
loope
sbb
mov
xchg
pusha
xor
enter
js
xor
jp
fucomi
sarb
xchg
aad
daa
pop
push
daa
sbb
cmp
popa
loopne
pop
sarl
lahf
daa
aam
sub
sub
adc
rolb
push
sti
mov
mov
or
and
adc
jmp
loop
lods
add
sahf
mov
mov
inc
movsb
mov
mov
inc
ds
jbe
ljmp
ficoms
sub
imull
cltd
pop
push
pop
lahf
dec
jge
gs
mov
aas
mov
imull
mov
inc
sbbb
push
out
hlt
add
int
push
mov
mov
insb
lret
jle
loop
in
xchg
lcall
in
mov
cmpsb
inc
jle
jnp
pop
scas
call
pop
mov
or
sarb
addl
rol
sahf
mov
adc
stc
ffree
dec
pop
add
lahf
cmp
divb
movsl
push
fwait
lds
cmpsb
dec
ljmp
lgdtl
xchg
ljmp
push
jp
cmp
in
add
mov
por
and
mov
or
or
xchg
cld
imul
jbe
out
push
sub
cmpsl
movb
xor
cmp
mov
mov
popa
mov
out
push
dec
sbb
adc
adc
sub
negl
int3
push
repz
jmp
jnp
lea
jns
jecxz
add
movsb
cwtl
push
xchg
daa
xchg
or
jnp
lods
pusha
pushl
aaa
cltd
sti
fdivrs
cmp
out
xchg
or
loopne
push
jb
lock
ja
addr16
imul
cwtl
roll
or
and
xchg
sbb
int3
addr16
mov
jb
dec
into
xchg
add
mov
nop
sahf
and
xchg
imul
ss
ljmp
mov
cmc
loope
or
xchg
inc
adc
sti
loope
inc
fwait
inc
aas
mov
getsec
add
repnz
or
movsb
xor
pop
cli
or
andb
mov
lods
jo
jae
repz
sbb
mov
pop
adc
pop
pop
mov
push
add
sahf
xchg
call
adc
mov
push
leave
mov
clc
sub
dec
xchg
clc
iret
cltd
cli
stos
mov
pop
mov
jns
ss
outsl
mov
cwtl
mov
test
lods
mov
nop
pop
mov
movsl
inc
out
jae
cmp
jnp
fdivl
ret
cld
or
bound
jmp
inc
xor
add
xchg
or
push
jbe
fwait
push
pop
fidivrl
jp
jge
insb
adc
jg
or
mov
mov
inc
scas
inc
jge
imul
iret
dec
mov
xchg
dec
out
js
add
lahf
mov
ret
clc
mov
out
dec
cmc
mov
lcall
fldenv
or
push
mov
iret
sub
bound
dec
mov
test
aam
adc
imul
mov
mov
xchg
adc
addr16
ret
adc
iret
test
ljmp
pop
in
cli
sbb
adc
test
nop
xor
shl
jecxz
repz
fidivs
add
scas
sub
sbb
mov
lods
test
jp
rolb
mov
xchg
das
lret
orl
out
lods
dec
xchg
xchg
movsl
jge
lret
cmp
xchg
js
ljmp
xor
cmpsb
lret
xchg
pushf
dec
loope
inc
dec
adc
inc
in
shlb
sbb
lahf
inc
sbb
test
negb
popf
dec
fwait
sbb
test
pop
iret
or
jl
cmp
scas
mov
mov
ret
xchg
loope
cwtl
das
shlb
mov
mov
adc
lds
xor
fisubl
cmp
in
mov
xchg
pop
daa
and
data16
or
dec
mov
inc
ja
push
mov
ss
data16
mov
lods
rcr
das
dec
adc
lock
dec
imul
lcallw
and
cmp
cmpsb
pop
push
popf
js
jo
iret
sbb
push
in
mov
mov
cltd
arpl
dec
inc
mov
inc
jo
jb
lret
pop
fldcw
icebp
push
js
fwait
sub
sub
mov
push
xor
dec
dec
jmp
sub
jmp
lock
ljmp
pop
mov
fdivp
pop
lods
insb
dec
or
push
sbb
out
inc
enter
xchg
dec
sti
jmp
push
add
sbb
clc
jecxz
mov
fnstcw
aas
lahf
adc
je
out
xor
add
aam
cmpsl
pop
psllw
cmp
mov
fidivs
fs
movsb
xor
pop
aas
lret
movsl
and
inc
ret
mov
push
lea
enter
outsb
rolb
lock
jecxz
das
xchg
jne
outsl
enter
in
mov
xlat
sub
adc
cmpsl
mov
and
sub
call
xlat
lret
sub
mov
sbb
mov
mov
test
adc
mov
scas
insb
push
lret
in
popa
popa
sarl
mov
inc
lcall
inc
cld
mov
out
mov
cmpsb
je
ret
xor
mov
mov
jg
add
add
test
jno
xchg
in
aas
sti
in
adc
mov
int3
xchg
adc
dec
xor
test
enter
lret
jmp
js
ja
pop
jmp
cmp
dec
or
adc
cmpsb
inc
lcall
dec
movsb
or
fcompl
lds
pop
jnp
ljmp
inc
adc
icebp
lahf
imul
inc
cld
outsb
out
lock
jne
and
std
cmp
fmull
sbb
mov
add
dec
stos
into
mov
mov
mov
gs
or
ss
pop
sbb
std
mov
xor
and
iret
sub
jno
out
rclb
pop
icebp
jle
push
mov
enter
or
aaa
mov
subl
cmpsl
mov
popa
inc
cmp
into
lods
sbb
mov
xchg
push
iret
leave
adc
add
add
inc
cmpsl
sbb
or
xor
clc
mov
xlat
fistps
lcall
jnp
fs
fimull
scas
lret
sbb
mov
or
pop
leave
or
imul
ret
or
fwait
aam
or
push
sbb
aad
cwtl
xchg
out
mov
and
jno
movsl
or
subw
mov
cltd
mov
and
push
pop
test
ret
cmp
iret
mov
jge
es
stc
sub
jg
cmpl
in
enter
mov
loope
adc
adc
das
xor
pop
ret
cmp
cmc
fidivl
cmp
inc
mov
andl
mov
sub
mov
loop
or
push
add
outsl
popa
lahf
push
pop
sub
rcl
xchg
cmp
lret
add
jg
inc
pop
nop
mov
xchg
jmp
cmp
jge
cli
xor
loop
loope
jmp
and
mov
fwait
add
mov
cmp
or
jl
repz
lods
pushf
push
fsub
ret
cmp
int3
data16
or
mov
int
mov
insl
xor
adc
idivl
jmp
addr16
mov
in
inc
iret
pusha
pushf
test
mov
add
aaa
add
gs
and
push
or
xor
and
shll
cwtl
mov
mov
adc
sbb
mov
xor
push
adc
insb
push
call
jmp
jbe
test
mov
and
add
daa
jecxz
xor
xchg
loopne
sub
push
mov
leave
aaa
jle
ret
mov
call
mov
imul
fsubl
mov
or
and
fld
sub
arpl
test
andb
shll
push
pusha
mov
mov
sub
outsl
mov
js
xchg
imul
push
addr16
lds
or
lea
rcrb
negb
push
in
cmc
sbb
mov
mov
inc
xchg
ficomps
fwait
pushf
adc
push
inc
mov
xchg
and
in
or
mov
sahf
mov
dec
into
push
rolb
dec
into
movsl
xor
inc
loopne
test
pusha
addb
stos
mov
test
jle
push
insb
das
inc
lock
cld
mov
in
cmp
adc
lahf
mov
xor
inc
mov
push
pop
pop
sub
inc
lods
add
pop
int3
cmp
cmp
frstor
xlat
inc
add
jl
push
push
jg
aaa
and
fcomp
fadd
mov
mov
xchg
jno
test
test
fldt
loope
in
inc
rorb
pop
cld
outsl
gs
xorl
out
rorl
shll
nop
jecxz
mov
mov
add
or
mov
arpl
or
cmp
shlb
pop
xchg
fwait
and
lds
loopne
jg
add
imul
adc
and
inc
clc
shll
inc
test
into
xor
scas
mov
add
adc
test
cmc
push
jg
notb
push
popa
aas
mov
and
cmp
mov
loope
movsl
dec
mov
dec
or
mov
push
rolb
mov
imul
or
outsb
push
aad
or
dec
and
xchg
fs
jae
scas
jnp
arpl
data16
jnp
out
out
or
mov
lret
sarl
adc
loop
rclb
pop
mov
icebp
hlt
jb
out
in
rcll
mov
inc
add
pop
adcb
repz
sahf
push
bound
pusha
xor
pop
add
pushf
shrl
lea
cli
cmp
addr16
inc
adc
mov
stos
and
cmp
loope
outsl
inc
test
sbb
pushf
add
cmp
pop
jp
pop
adc
sbb
ss
push
push
mov
mov
push
ret
cmp
dec
jmp
sbb
shll
cld
pop
push
push
aam
fldcw
das
mov
push
dec
add
fmull
nop
stos
mov
clc
lea
iret
xor
rcll
inc
inc
dec
frndint
dec
mov
xor
pop
insb
subl
dec
out
adc
mov
jnp
mov
cltd
cli
xchg
lea
imul
lea
cmp
push
lea
pusha
xchg
sub
ja
xor
xchg
insb
sbb
push
test
and
jae
lret
mov
push
lret
stos
mov
idivb
mov
imul
pop
sbb
dec
outsl
mov
data16
xchg
cmp
sahf
ss
xor
push
push
lsl
sbb
pop
cmpsb
dec
iret
jnp
dec
fiaddl
cmp
sub
lock
in
inc
xchg
cwtl
je
push
lahf
decl
mov
mov
cmpl
inc
mov
cmpsb
je
aad
idivl
xor
cmp
js
fs
adc
lahf
es
cli
fsubrl
or
fildl
outsl
enter
mov
dec
inc
mov
into
ljmp
and
pop
and
xchg
mov
cmp
xchg
jg
dec
insb
mov
incb
rclb
sbb
sbb
stos
mov
or
push
imul
cmp
fdivl
sbb
stos
std
cwtl
adc
jnp
jle
add
insb
hlt
jnp
cmovge
je
aad
sub
pop
xor
pushf
mov
inc
outsb
pop
push
pusha
stos
adc
jecxz
fildll
or
xchg
fisttpl
int3
mov
sbb
or
adc
push
movsb
lods
jb
and
sbb
stos
and
inc
ss
out
out
push
fwait
js
scas
xlat
sarb
jp
cmp
fisubrl
sub
xchg
daa
scas
mov
mov
hlt
mov
sbbb
shr
mov
cmp
inc
push
pop
cmc
inc
je
pop
mov
cmp
js
xchg
pushl
std
fstps
push
jo
push
sbb
cwtl
mov
adc
mov
sbb
icebp
cmp
stos
jo
and
push
loope
add
lret
sbb
in
fwait
jne
pop
outsl
lods
out
mov
iret
imul
push
clc
daa
cmpsl
or
test
clc
in
or
cmp
sub
or
xchg
leave
sbb
mov
jmp
jle
fidivrl
fidivrl
in
jno
aam
mov
add
fwait
in
out
cli
xchg
faddl
xchg
pushf
sbb
and
adcl
jns
std
mov
movsl
inc
push
push
fcoms
in
lock
mov
jg
test
pop
mov
dec
jo
out
sub
daa
aam
outsl
testb
mov
lcall
bound
mov
pop
test
imul
imul
aam
xor
jae
pusha
and
add
fnstcw
push
mov
add
xor
inc
jmp
stos
xadd
inc
loope
mov
push
movsl
test
fs
call
js
cmc
xchg
lock
and
inc
std
xchg
mov
jg
mov
lock
out
jo
fdivl
pop
hlt
mov
popf
or
or
push
mov
mov
sbb
rcll
out
mov
mov
push
or
jo
dec
xor
xchg
xlat
hlt
lods
add
lods
lods
sbbb
or
stc
scas
inc
jno
pop
aas
dec
push
nop
test
or
fwait
and
aad
jle
jecxz
jo
mov
imul
jle
mov
push
stc
cmc
adc
mov
mov
and
shl
push
ret
and
gs
push
push
es
sbb
xor
push
or
or
pop
adc
lcall
stos
and
xchg
push
mov
push
jle
jge
push
adc
cmp
push
outsl
loop
xchg
ret
cmc
pushf
adc
add
mov
nop
pop
cmp
mov
popl
inc
icebp
lds
fxch
add
out
xchg
aas
rol
fcmovu
mov
jne
mov
mov
repnz
push
jne
fs
pop
data16
mov
or
insb
hlt
movsl
in
xchg
or
dec
icebp
fcoml
andb
lods
mov
test
je
addl
insl
inc
or
mov
scas
or
dec
pop
cmp
jo
mov
add
aad
loope
fwait
mov
xor
fildl
cmp
test
pop
xor
inc
xor
xchg
pop
fildll
push
sbb
lcall
xchg
jno
jmp
mov
jp
add
jo
mov
and
mov
imul
push
fildll
and
addr16
stos
jmp
dec
pop
shl
loopne
lahf
data16
and
lods
popf
mov
dec
push
movsl
cmc
fcomps
repz
sbb
xchg
std
mov
out
pmulhrsw
cmp
icebp
fsubs
xchg
jp
loope
pushl
mov
lds
or
arpl
fadds
pop
int3
out
pop
stos
je
sar
imul
add
ror
scas
scas
popf
mov
sub
dec
mov
aad
cmc
add
push
fstps
lods
or
push
jge
loopne
fsubrs
dec
and
xchg
sbb
lea
js
sbb
jecxz
setl
and
pop
push
into
and
mov
mov
jo
stos
jnp
add
cmc
xor
call
out
mov
jge
cmpsl
adc
jge
scas
shl
sbb
mov
lcall
test
and
pop
dec
xor
add
xor
lahf
inc
xchg
scas
lods
push
stos
and
xor
or
push
daa
pop
mov
inc
outsl
mov
int
mov
mov
shlb
xchg
sub
xchg
jae
out
insb
push
outsb
out
inc
cld
adc
cmpsb
daa
mov
jne
cmp
jbe
shr
fs
mov
push
dec
xor
xor
xchg
stc
vpcmpeqd
cmp
jp
or
lahf
push
out
ret
jne
and
popa
jmp
ja
in
sarl
cmp
xchg
aaa
xor
cmp
sub
cli
adc
loope
mov
test
and
pop
test
lds
xlat
arpl
dec
cli
call
outsl
ret
xchg
sbbl
test
in
adc
jne
dec
dec
xor
pop
in
sub
in
ret
jbe
or
jmp
cmp
js
es
xor
test
adc
xchg
int
outsb
push
sbb
pop
fsubp
jns
fisubl
dec
sbb
jo
vandpd
aam
cmp
in
push
std
movsl
scas
xor
fsubr
pop
cmp
shlb
shl
jb
leave
pop
adc
in
pop
fwait
pop
sbb
repz
add
inc
xor
fists
outsl
aam
push
mov
xor
outsb
lods
shlb
insl
rclb
push
loope
and
inc
xor
pushf
loopne
or
dec
je
fwait
mov
test
test
pushf
shrl
cmp
inc
loop
dec
imul
cmpl
push
xchg
jae
mov
in
push
cmp
push
jne
push
lods
test
out
fcomp
pop
out
fstpl
js
int
inc
fsubl
inc
adc
xor
mov
jb
push
scas
dec
mov
lret
xor
cmp
cmp
lds
mov
cmp
pop
imul
mov
fisttpl
cmp
out
lret
and
inc
into
push
ds
jmp
push
fistps
dec
adc
dec
cmp
rcrb
ret
xchg
and
repz
add
pop
lahf
jl
or
mov
sti
mov
lcall
addr16
jae
movsl
xchg
cmp
jo
xor
push
repnz
dec
int
mov
mov
lods
push
imul
cmp
xchg
loopne
mov
jl
je
cmp
in
jns
inc
push
orps
jns
pop
adc
sbb
test
out
lds
mov
cmp
push
in
or
mov
mov
dec
and
fbstp
mov
data16
xchg
dec
fistps
cmp
lret
in
out
aaa
xchg
aas
inc
repnz
or
mov
push
rorb
iret
andb
test
mov
out
pop
rcl
lock
mov
pop
cmpsb
jbe
outsb
cwtl
add
or
push
sub
jecxz
in
push
push
std
pop
dec
clc
gs
movsb
push
clc
mov
inc
popa
sub
clc
fiadds
cmp
and
dec
fcom
mov
mov
ja
xor
insb
jno
xchg
and
push
test
push
xchg
pop
or
push
cld
movsl
xor
imul
and
push
mov
fucom
mov
stc
jg
xchg
push
sbb
inc
jns
leave
and
stos
add
imulb
hlt
sub
pushf
mov
into
out
push
lock
pop
neg
mov
mov
repnz
adc
imul
imul
bound
pop
gs
add
push
ret
sarl
cmp
xlat
cmpsl
jge
test
jmp
xor
and
fldcw
pop
hlt
popw
sti
movsl
inc
mov
imul
cld
xchg
rep
inc
cmp
jb
cmp
sub
popf
xchg
cmpsb
push
aad
cmpsl
mul
mov
xchg
cld
movsl
in
nop
in
push
int
cmpb
lret
adc
mov
pop
cmpsl
jl
ss
cmp
or
psubsw
xchg
mov
cmpsb
sub
xchg
sbb
pop
jne
shlb
dec
and
cwtl
jae
add
and
subl
std
mov
cmpl
sahf
addr16
pop
aad
lahf
movd
or
rcrb
dec
jl
out
in
popa
stos
inc
sbb
jl
cld
jecxz
stos
dec
stos
test
shlb
test
push
jo
dec
hlt
fisubl
jno
inc
jl
push
sbb
cmp
add
ds
rclb
int
mov
adc
or
push
mov
cld
mov
popf
iret
sub
roll
adc
outsl
add
jecxz
or
add
jae
push
ss
dec
pop
add
add
and
jl
les
add
subl
lods
repnz
pop
imul
jb
fidivl
frstor
sub
sahf
pusha
and
clc
sub
std
cltd
add
je
lahf
or
add
xchg
in
dec
shl
push
push
shll
pop
mov
aaa
mov
add
xchg
cmp
dec
push
push
xlat
mov
fnsave
mov
or
pusha
cmp
add
push
jbe
jl
lock
test
clc
divl
outsb
mov
xor
or
push
mov
movsb
jge
pop
repz
mov
mov
dec
xchg
mov
gs
add
sub
jo
mov
jo
fwait
scas
pop
mov
lcall
ds
in
std
adc
xlat
subb
jmp
push
pop
into
into
push
xchg
adc
dec
das
xor
cmp
jmp
mulb
in
std
sbb
sbb
adc
arpl
cltd
lret
ret
xchg
lea
pop
push
cwtl
stos
lock
jnp
push
stc
test
push
into
xchg
mov
sbb
idivl
push
push
mov
iret
or
lret
dec
pop
test
sbb
lea
adc
jbe
sbb
jae
ror
mov
mov
pop
stos
or
mov
mov
mov
stc
cmp
rorb
sti
sub
inc
scas
push
popa
mov
outsb
cmpsb
xchg
pushf
daa
push
xchg
push
mov
cld
mov
std
adc
xchg
stos
xchg
add
add
pop
cmp
sahf
mov
xlat
mov
daa
add
push
out
jnp
mov
notb
xor
xchg
lahf
push
out
sarl
sub
xor
in
dec
push
test
mov
es
mov
xlat
out
mov
and
lret
mov
es
pushf
scas
mov
jp
into
ret
cmp
mov
and
pop
cmp
lret
movsl
lods
stc
lods
addr16
jo
test
scas
fucomp
mov
roll
adc
lcall
shll
fld
mov
arpl
shll
pusha
insl
or
pop
push
mov
arpl
mov
dec
rorl
jno
dec
xchg
xor
mov
push
mov
pop
pop
sbb
pop
adc
jmp
in
leave
mov
lods
mov
imulb
cmp
cld
mov
imul
mov
jb
pop
shr
mov
fadds
add
sahf
mov
jbe
test
orl
ror
rorl
push
out
testl
cmp
push
jnp
add
pop
popa
loopne
je
fs
pop
popa
inc
cmp
cmpsl
sbb
loop
int3
arpl
fcmovbe
lods
xchg
int3
sbb
push
jl
dec
adc
or
xor
and
insl
sub
dec
add
ss
rcrl
lret
mov
inc
inc
dec
iret
dec
xchg
out
nop
fcmovbe
mov
mov
cmpsb
jl
mov
fsubrl
fdivl
call
ljmp
add
clc
notb
sbb
and
shrl
daa
mov
or
mov
mov
fwait
in
pop
cmc
out
idivl
mov
int3
incb
insb
hlt
mov
inc
cmp
mov
adc
or
lahf
dec
adc
push
andl
mov
jmp
paddusw
mov
in
pop
adc
clc
push
lods
dec
test
popf
shll
out
roll
clc
and
xor
add
push
pop
cmpsl
fisttpll
aaa
mov
loopne
ljmp
inc
mov
xchg
mov
jns
jno
imul
aas
xchg
push
rclb
out
fldl
mov
pusha
xchg
repnz
inc
scas
lret
or
xchg
mov
xchg
rorb
mov
lods
in
or
cmp
xchg
aad
andb
jecxz,pn
mov
sbb
icebp
jae
mov
loopne
jae
popa
and
push
mov
js
cmp
dec
jp
jle
jle
or
fwait
or
icebp
or
test
push
pop
add
out
xlat
int3
jmp
into
push
cmp
mov
xchg
ds
ret
pop
push
pop
sbb
mov
pop
cmc
test
and
cmpsb
in
dec
pop
mov
or
inc
mov
adcl
dec
inc
mov
pop
xchg
and
ret
pop
dec
enter
movsb
test
orl
mov
jmp
xchg
sbb
add
and
dec
out
xchg
adc
test
jo
mov
mov
push
adc
adc
xchg
addl
inc
mov
ficoml
test
nop
je
mov
pop
and
pop
adcl
lods
mov
and
dec
cmpsb
cltd
and
ss
mov
mov
inc
ja
mov
lcall
mov
dec
pop
push
pop
xchg
mov
or
loop
mov
push
mov
sub
aaa
adc
stc
xchg
add
lods
leave
aad
in
loopne,pt
aas
shl
or
test
dec
out
aaa
inc
push
sbb
stos
lret
pusha
and
out
adc
push
sahf
lock
sub
je
into
xor
cli
pop
and
das
pop
test
mov
xor
pop
jge
mov
push
add
mov
jl
subl
in
repz
daa
lahf
in
mov
cwtl
push
push
xor
push
jo
push
dec
cmp
add
pushf
push
test
mov
int3
mov
sbb
je
fwait
xchg
cmc
mov
jp
xor
adc
sahf
pop
pop
inc
inc
xor
lcall
inc
test
push
sub
sbb
add
int
cmpsl
pop
out
and
dec
sbb
call
inc
inc
gs
push
push
repz
add
dec
sbb
mov
aaa
sub
mov
in
test
popf
enter
cmp
fcmovu
out
fsubrl
dec
scas
loope
or
xchg
push
lcall
int
int3
mov
in
call
outsl
repnz
jle
repz
decb
xchg
fisubl
test
std
push
sbb
pop
xchg
dec
in
dec
in
aas
push
je
pop
sub
call
mov
mov
repnz
fstps
ljmp
cmpl
cs
adc
push
push
nop
imul
dec
scas
loope
lock
imul
icebp
inc
cltd
pop
mov
loop
out
jp
inc
pop
sub
shrl
lds
jae
daa
lcall
push
add
jno
inc
jbe
add
pushf
cmp
rclb
xchg
test
inc
adc
stos
insl
dec
rclb
mov
push
fcompl
mov
jns
pop
push
icebp
lahf
fldenv
add
push
jnp
mov
aas
xorb
jns
mov
dec
das
jl
call
jle
pop
mov
out
loopne
loopne
mov
imul
in
push
shl
jmp
cs
or
and
outsl
or
add
and
jg
dec
out
popf
data16
aad
fwait
in
lcall
pop
jl
js
add
daa
ret
add
lods
lds
dec
ret
sub
mov
and
repnz
mov
rorb
fmuls
pop
fcoms
mov
push
jle
stos
xchg
bound
xor
jbe
xchg
sbb
dec
fst
and
jmp
lret
xchg
inc
push
mov
das
mov
icebp
push
jnp
fiaddl
pop
xor
mov
je
mov
push
out
pop
imul
pop
or
js
pop
push
adc
into
inc
mov
mov
ja
add
adc
jp
popf
mov
cld
cs
stc
dec
in
sub
mov
or
mov
mov
loope
daa
into
jmp
jne
push
or
push
jbe
test
cmp
std
sub
ss
sbb
out
pusha
into
mov
std
push
mov
hlt
mov
sarb
or
aas
fnstsw
xor
shl
adc
adc
cmpsb
xor
rcrb
xchg
fisttps
stos
sub
cmp
xor
add
lret
sahf
pop
movsl
orl
sbb
cmp
int3
fwait
into
arpl
pop
mov
jmp
jo
add
imul
xor
cltd
aad
add
test
addr16
insb
xchg
dec
sbb
and
adc
lahf
xchg
mov
mov
adc
call
and
push
inc
sub
bnd
bound
fdivr
adc
pop
in
es
cmp
mov
movnti
jge
sub
stos
xchg
add
sub
xor
adc
mov
mov
test
push
pop
jecxz
loope
jle
mov
pop
stos
data16
sahf
mov
sub
shlb
push
sahf
fists
push
sub
or
mov
fnstsw
xchg
mov
cmc
add
lret
insb
iret
mov
cmp
sbb
in
ret
in
push
xchg
mov
mov
scas
push
and
call
inc
pop
inc
mov
adc
scas
push
test
enter
cmp
adc
sbb
jge
mov
push
ss
ss
js
or
mov
iret
push
hlt
push
push
lea
cmp
aas
in
pop
mov
mov
ffreep
enter
lds
loop
shrb
outsl
adc
in
sub
mov
mov
xchg
mov
sub
or
ss
mov
pop
xchg
jl
cwtl
gs
mov
icebp
addb
push
dec
into
lret
push
ja
cwtl
hlt
sub
inc
clc
scas
in
push
insl
mov
jns
gs
movups
xchg
xor
repnz
jnp
dec
neg
mov
or
dec
mov
test
je
xor
lods
pop
fs
bound
outsb
stos
pushf
into
xchg
xchg
fsubrs
inc
jle
lret
flds
pop
mov
filds
dec
ja
les
movsl
int
outsl
lds
inc
cmp
dec
int3
cwtl
push
lahf
push
and
jne
push
inc
aaa
mov
push
mov
mov
test
push
in
and
or
jp
push
dec
push
ds
aam
test
mov
mov
call
inc
xchg
push
xchg
jo
bound
pop
fisttpll
mov
or
lods
cli
repz
pop
xor
orl
mov
mov
sub
aad
imul
repz
enter
mov
inc
mov
jo
and
insl
sub
jne
shrl
jbe
in
add
in
fildll
popf
mov
imul
in
nop
popf
and
inc
lahf
lods
adc
movl
sub
and
cwtl
lock
or
and
xchg
aaa
cld
pop
cmp
rcrl
push
dec
in
sbb
arpl
sub
mov
das
cmpsl
cmp
inc
iret
adc
mov
iret
cwtl
outsl
int
jp
repz
and
fistpl
out
or
push
push
sbb
lret
dec
pop
outsl
scas
call
jmp
lods
inc
filds
stos
cwtl
gs
test
cli
out
sbb
add
in
and
and
dec
mov
inc
rol
int3
sarb
sbb
std
or
cltd
mov
sub
push
and
bound
mov
sbb
jnp
cmp
pop
movsb
lret
mov
fldl
pushf
lcall
fs
jp
adc
lock
pop
mov
filds
ret
outsb
adc
sub
imul
fnstsw
sub
cmc
lcall
mov
adc
mov
jb
ret
lret
sarb
mov
pop
aas
mov
fsubp
sbb
scas
mov
ja
ret
in
lds
std
jg
mov
sub
cli
decl
cmp
call
mov
dec
gs
out
push
in
rcrl
stc
push
sub
add
aam
ficomps
jb
mov
jne
pop
aam
jl
mov
imul
dec
add
mov
lea
sti
andl
push
or
fldl
or
stc
push
mov
cli
mov
inc
rolb
in
clc
sbb
lds
xchg
pop
xlat
xchg
arpl
je
ds
outsl
lock
int3
in
cmp
icebp
push
xor
inc
jno
out
xor
fimull
fsubl
scas
mov
or
scas
scas
cmp
jmp
adc
hlt
lret
inc
mov
jae
insb
orb
dec
test
xor
fsubl
mov
cltd
lea
roll
mov
insl
dec
cwtl
mov
push
mov
xchg
lcall
dec
test
cmovg
mov
jne
inc
or
push
aaa
movsb
jnp
fsts
shlb
rcl
mov
shrl
pop
inc
adc
fmuls
push
mov
inc
ror
pop
sbbl
xchg
leave
mov
dec
mov
shrb
ret
call
xorb
mov
pop
jb
jnp
cmp
push
push
or
sbb
sbb
cmpsb
test
mov
fisubl
lahf
sbb
inc
push
or
test
lret
sti
xchg
xor
inc
outsl
push
pusha
scas
dec
xor
lds
xchg
data16
pushf
les
xchg
lret
dec
bound
and
lcall
sub
test
or
rolb
cmpl
cli
pushf
sub
sub
shll
repz
push
mov
and
mov
and
pop
call
dec
sub
xorl
int3
and
and
push
and
cmp
cmp
sub
and
cmpsb
jle
mov
add
sub
loope
repz
adc
pop
das
xchg
push
push
mov
shr
xchg
mov
jmp
cmp
cmpsl
mov
out
outsl
sub
inc
xor
mov
dec
mov
pusha
push
xchg
dec
jp
mov
pop
sbb
in
out
xor
xor
scas
or
add
pop
cli
dec
popa
jmp
add
xor
mov
xor
lret
sub
daa
dec
fsubrl
mov
fstp
xchg
call
sbb
icebp
rol
pop
leave
push
pop
jb
mov
mov
arpl
mov
sahf
pop
dec
sti
data16
push
mov
fsubs
inc
push
jnp
jge
inc
xchg
xor
add
xor
sbb
ficomps
push
sub
mov
jl
sbb
bound
mov
xchg
pushf
sbb
add
jne
mov
sbb
adcl
aad
mov
and
pushf
iret
pop
mov
iret
jne
sub
popf
mov
mov
lods
lret
xchg
pop
test
fwait
xchg
mov
jae
dec
lcall
ja
repz
hlt
add
adc
iret
mov
jae
pop
dec
add
xchg
lock
pop
call
call
pop
sub
sbb
scas
outsl
or
in
sub
jne
popa
fwait
sahf
inc
xchg
xchg
add
fs
push
inc
pop
sbb
notb
lock
jne
pop
cmc
loope
push
int3
or
push
mov
test
xor
pusha
dec
adc
xor
jne
in
sub
stc
loope
ret
and
jb
enter
push
imul
or
dec
adc
cltd
or
jbe
leave
ja
cmc
xchg
push
in
adc
imul
pop
cmp
repz
aas
pop
push
push
dec
pop
loopne
idivl
inc
xor
xlat
sbb
sar
pop
cmp
cld
mov
mov
sarb
stos
fs
cwtl
lods
inc
pop
loop
lret
pusha
mov
aam
jne
jne
in
inc
addr16
dec
sbb
je
inc
adc
ds
xor
push
or
and
push
aas
negl
into
mov
mov
push
arpl
mov
jne
cltd
jl
pop
sub
add
jb
pop
add
push
arpl
in
ret
lods
and
int3
xchg
inc
pop
cwtl
daa
mov
adc
fwait
mov
aad
cmp
mov
inc
sub
stos
cmp
sbb
xlat
lret
adc
addr16
aaa
outsb
movsb
mov
into
xchg
out
je
fdivrl
and
int
adc
mov
cmpsl
push
outsb
dec
test
and
xchg
mov
inc
scas
lock
aam
sbb
inc
mov
insb
or
mov
icebp
dec
fwait
ror
popa
and
test
pusha
or
adcb
adc
mov
je
lock
call
push
jg
dec
inc
or
rcrb
add
push
add
in
inc
lret
cltd
and
mov
out
sti
mov
daa
mov
jge
jae
aam
lahf
add
lret
xor
cmp
neg
frstor
jo
jbe
jno
pop
ja
add
test
sbbb
jae
sub
or
shl
addl
xor
nop
adc
ret
orb
mov
mov
cmp
addb
out
or
cmp
jg
sbb
dec
icebp
cmp
call
test
call
push
nop
lahf
sub
fiadds
and
and
pop
push
push
or
ja
push
into
xlat
je
pop
cld
xor
sarl
xlat
cmpsl
icebp
mov
mov
pushf
cltd
rcrb
pushf
ficompl
add
mov
addb
in
xor
arpl
push
test
sbb
mov
or
cli
dec
cmp
cli
push
dec
jnp
adc
aas
jno
test
ss
pop
jno
mov
mov
mov
rclb
mov
test
add
mov
pop
std
and
add
jmp
stos
cli
push
adc
cmp
inc
je
ds
dec
aam
mov
dec
loop
pop
xchg
inc
mov
jge
movsb
mov
sbb
adc
fcmovne
and
push
lret
sbb
cwtl
sbb
iret
sub
int3
cmp
aad
push
lret
inc
cmp
add
mov
push
jecxz
xchg
lret
aam
loop
mov
mov
sbb
addr16
int3
inc
bound
mov
cmpb
std
push
enter
adc
jbe
fstp
nop
aam
cwtl
popa
sarl
daa
pop
cltd
push
and
xchg
je
icebp
in
insl
lret
shrb
adc
repnz
outsb
cmp
xor
test
push
or
clc
ja
aas
dec
add
outsb
or
out
stos
push
movsb
xchg
aaa
bound
add
popa
es
inc
xchg
and
jle
icebp
mov
inc
and
int3
test
imulb
xor
mov
mov
mov
es
orl
test
cmp
scas
out
loope
in
repz
in
stc
nop
stc
cmp
fsub
push
dec
mov
cmp
and
movsb
adc
jmp
stos
cld
sub
sbb
sahf
mov
lea
loopne
adc
pop
sub
das
sahf
lds
and
sahf
sbb
mov
mov
sub
hlt
xor
sub
fldt
lret
loopnew,pn
ret
inc
inc
pop
mov
push
mov
in
rcrl
cmp
jne
xchg
adc
push
pop
dec
pushf
scas
stos
pop
in
adc
clc
adcl
adc
sub
pop
push
inc
filds
pop
popa
loop
cmp
lock
sbb
xchg
lcall
mov
mov
jnp
les
dec
mov
push
adc
cltd
movsb
sub
repnz
lods
lods
int3
outsl
mov
sbb
mov
insl
pop
lret
push
jbe
jae
cmp
sbbl
and
sub
and
xorl
pop
or
push
bound
jae
xor
lds
cld
mov
jae
sahf
xchg
clc
add
ljmp
fwait
pop
push
mov
mov
and
std
jno
daa
sub
loopw
scas
ret
lret
push
pop
cltd
mov
not
mov
pop
push
sbb
pop
jmp
pop
addr16
pop
into
in
mov
ljmp
dec
or
xorl
int
lcall
shlb
mov
aas
mov
xchg
ds
ds
orl
outsb
xor
adc
icebp
mov
mov
outsb
push
add
inc
lahf
test
jg
fnsave
mov
test
jmp
xchg
iret
mov
int3
push
mov
gs
mov
mov
fwait
lahf
xchg
mov
xchg
in
add
rcll
stos
test
imul
iret
push
hlt
cmp
sbb
or
bound
xchg
je
cmc
mov
ror
sbb
xchg
icebp
mov
push
dec
pusha
icebp
cmp
inc
mov
dec
sbbb
and
out
stos
cmp
aam
push
push
sub
and
jns
add
lret
popf
inc
mov
xchg
cmpb
sub
xchg
insb
mov
jo
jno
cmp
shlb
sar
out
int
jns
cmp
pop
dec
movzbl
adc
mov
xchg
aad
sub
cltd
sub
sub
fwait
xor
sbb
mov
test
faddl
movsb
push
in
stos
sbb
iret
xchg
jno
in
out
in
jmp
push
imul
mov
clc
cmpsl
aad
cmp
push
xor
lcall
mov
pop
or
inc
cwtl
mov
push
adc
add
xor
inc
fs
add
ficompl
addr16
pusha
loopne
mov
fs
jecxz
fsts
dec
dec
jl
popa
sub
addb
lods
push
add
cs
in
inc
xor
mov
in
add
or
cmp
test
test
sbb
xor
fistpll
loop
icebp
and
ds
push
inc
lea
adc
js
xor
push
gs
scas
or
dec
push
out
push
shlb
add
adc
xor
pushf
call
jbe
push
aas
sub
sub
cmc
imul
inc
notb
push
sbb
lds
mov
pop
jg
stc
out
xor
sbb
jge
mov
adc
movsb
sbb
push
mov
add
rorl
int3
jmp
adc
jnp
add
pop
cmpsb
xlat
adc
mov
gs
mov
pop
and
cmp
ljmp
xor
push
and
lret
imul
mov
xchg
or
and
loop
in
fisttps
in
jnp
push
add
imul
roll
pop
sub
inc
adc
mov
repz
pop
sbb
sub
aad
sahf
push
push
pop
mov
std
call
mov
insb
xchg
lcall
rorb
pop
mov
mov
sahf
addr16
mov
loope
dec
test
and
inc
mov
xchg
sbb
push
scas
mov
sahf
call
aam
ret
les
loopne
lea
mov
leave
clc
and
in
mov
and
sbb
shl
test
push
hlt
mov
and
lret
aas
or
cmp
das
adc
jae
jp,pn
pop
xchg
aam
or
mov
dec
jl
int
test
sub
lahf
jle
rolb
or
or
mov
daa
xor
add
lds
sub
faddp
lret
mov
insl
repnz
push
xchg
mov
mov
xlat
in
incb
shrb
or
cmp
sub
jbe
movsl
mov
jl
subl
cltd
pop
xchg
call
fucom
mov
pop
repz
and
mov
cmpsb
lahf
repz
add
jl
jmp
pop
jns
roll
outsl
lcall
jns
add
jp
and
push
inc
lods
dec
add
es
jge
aam
xorb
int
subb
xor
nop
push
inc
cmp
insb
pushf
into
pop
push
daa
in
adc
subb
pop
sbb
xchg
add
lods
lods
je
xor
and
dec
jnp
inc
mov
je
imul
xor
test
jge
addb
jo
lahf
push
pop
rorb
mov
fisubl
sbb
push
or
scas
out
and
sbb
dec
enter
or
scas
cmp
repnz
ljmp
and
xchg
mov
and
lods
cmc
repz
mov
in
and
es
out
jecxz
adc
sbb
lock
mov
icebp
push
cmp
out
les
xor
jno
int3
fimull
cltd
xchg
push
movsb
clc
push
mov
or
cld
stos
push
mov
popl
jge
mov
dec
sbb
and
xor
mov
push
les
jg
add
fsubrp
dec
aaa
ficoml
add
rcll
outsl
jl
test
bound
inc
add
mov
adc
jns
rorb
pop
dec
inc
cmp
adc
mov
jmp
adc
sub
rcrb
push
sub
ficoms
mov
cmp
stos
outsb
pop
xlat
call
repnz
shlb
adc
pop
test
cmp
mov
loope
add
testb
sbb
lret
fnstenv
lock
sub
enter
fistl
int
rcl
pop
addl
cmpsb
push
fidivs
rclb
stos
test
test
pop
mov
rorl
xor
mov
mov
pop
adc
mov
cmp
data16
dec
movsl
imul
jecxz
pop
fadds
cmp
cwtl
fcomp
push
push
addr16
lret
stc
lock
cmp
popa
outsl
jne
insl
sub
mov
mov
nop
pushf
mov
jb
xor
aas
aad
cmc
pop
cs
leave
fsub
mov
outsl
jecxz
dec
xchg
and
pop
adc
fimull
jnp
loopw
hlt
pop
stos
ljmp
xlat
jno
push
and
enter
fldenv
jp
faddl
aad
push
mov
jae
test
cmpb
imul
or
add
jno
mov
cli
mov
in
loopne
int3
dec
cltd
inc
and
test
jg
cmpsb
xchg
mov
cmp
push
push
cltd
int3
inc
call
mov
cmp
stc
xchg
cmp
cmpsb
adc
mov
fstpt
je
fldcw
data16
mov
loop
loope
js
jg
and
xchg
or
jle
fadd
mov
pop
and
hlt
push
xchg
cmpsb
nop
xor
adc
loop
cltd
int
jl
aaa
jle
cmp
mov
bound
pusha
push
xchg
cld
add
stc
jle
or
test
ds
and
pop
inc
loopne
clc
xlat
std
xchg
mov
int
mov
rcr
in
fmul
inc
push
sbb
mov
fdivrp
pcmpeqb
sub
dec
loope
iret
arpl
mov
pop
or
ficomps
lcall
sti
lahf
and
sub
mov
dec
nop
push
adc
es
loope
cld
push
sub
cmpsb
imul
adc
jecxz
iret
lcall
jbe
sub
sbb
jae
dec
xor
and
jb
inc
mov
xor
lret
adcb
aas
dec
mov
cmpsl
mov
xchg
push
and
iret
loopne
xchg
nop
inc
movsl
and
pop
mov
push
mov
and
mov
sbb
sub
bound
mov
arpl
fdiv
mov
sahf
aad
scas
push
clc
outsb
ja
sahf
xor
jecxz
add
rol
popf
std
mov
gs
xlat
testb
imul
je
and
xchg
mov
sbb
je
mov
jle
mov
inc
sbb
pop
mov
lcall
divl
jb
fimull
fmull
mov
mov
and
imul
into
mov
addr16
pusha
dec
mov
fnstenv
and
cs
and
jl
test
popa
jno,pn
add
dec
les
mov
lods
sbb
aaa
sub
es
imulb
inc
add
mov
ffreep
dec
pop
icebp
ja
xchg
cmp
and
in
or
and
gs
add
push
out
adc
and
jge
test
and
fmulp
sub
mov
jns
dec
pop
dec
pop
mov
pop
inc
pop
clc
lds
or
jns
repnz
orb
sbbb
inc
fsubrp
xchg
mov
and
mov
jnp
add
ror
sub
std
popf
inc
jp
std
test
sti
jecxz
incl
cmp
lock
and
test
popa
enter
popa
testl
fxch
imul
insb
call
sti
rolb
jmp
enter
popf
xor
and
cld
pop
inc
sub
loopne
pop
mov
or
adc
xchg
or
add
sub
pop
ret
or
test
in
loope
push
inc
in
outsl
hlt
inc
gs
js
in
push
popa
pop
insb
push
push
mov
mov
mov
fdivr
sbb
dec
mov
sub
repz
nop
sub
jp
loopne
stos
adc
rcr
jmp
adc
jmp
and
xchg
dec
push
jle
push
outsl
sub
jge
push
and
in
xor
mov
movb
mov
stos
mov
mov
mov
dec
mov
push
shlb
jno
jecxz
mov
ret
stc
mov
fwait
inc
call
cmc
mov
or
add
dec
push
or
push
pop
jae
in
push
aad
ds
xor
adc
lea
das
stos
ja
insb
mov
dec
in
scas
out
fidivs
mov
or
outsl
sahf
out
add
shll
pop
fildl
inc
jae
icebp
add
roll
jnp
mov
sahf
xor
lret
ds
lds
shl
mov
sub
mov
dec
nop
mov
imulb
add
mov
lds
les
inc
test
fcoms
adcb
insb
push
fld
aaa
lds
push
out
in
cmc
sub
mov
mov
mov
add
pusha
and
out
mov
jge
pop
jae
pop
jp
jo
stos
out
aad
mov
shlb
xchg
cmpsb
cli
stos
sbb
mov
in
movb
stc
out
adc
xlat
push
stos
or
mov
add
cld
push
sub
xor
cmpsl
sar
data16
or
jo
ret
fisubl
fs
mov
bound
mov
adc
pop
xchg
fidivl
push
xchg
add
mull
or
add
adc
push
xchg
stc
fsubrp
sub
scas
lcall
pop
fisttps
outsl
scas
push
mov
cltd
int3
test
or
or
and
or
xor
hlt
mov
addb
jo
ret
pop
xchg
mov
push
aad
sub
dec
pusha
adc
inc
and
loopne
lods
sub
cmp
jmp
cmp
mov
aaa
push
fxtract
ljmp
imul
cmpsb
aad
mov
icebp
out
scas
mov
pop
mov
sub
and
std
mov
in
in
xchg
xor
clc
data16
push
je
int
push
add
rcrl
je
fwait
aas
movsl
dec
mov
jmp
sub
xchg
outsl
jmp
push
shr
ds
fs
out
push
repz
int3
xchg
lahf
or
std
inc
sti
add
push
pop
imul
fs
jcxz
add
fsubrl
mov
leave
inc
xor
orb
dec
sbb
dec
push
mov
pop
icebp
out
push
xorb
cmp
adc
lds
and
pushf
lret
sbb
dec
xchg
stos
leave
mov
pop
cmp
xchg
jmp
dec
inc
xor
cmp
push
dec
push
cmp
jbe
fistpl
cmp
mov
add
cld
call
pop
std
lds
xor
xchg
iret
xchg
cmp
cmp
movsl
out
sbb
jb
leave
pop
pop
into
fsubrs
sub
jbe
mov
repz
sahf
sub
xchg
adc
imul
fcmovnbe
push
mov
cmc
and
fsubl
mov
mov
scas
cmp
ret
pusha
or
adc
ror
sahf
mov
dec
jmp
outsb
cld
adc
sbbl
mov
cltd
push
ljmp
loopne
stos
repz
and
mov
xchg
xchg
dec
mov
repz
sahf
sbbl
cltd
lcall
rcll
in
dec
cmp
inc
add
scas
sahf
arpl
cmp
sbb
out
fidivrs
xor
add
js
pop
cwtd
ficompl
outsl
xchg
add
sub
mov
rcrb
lahf
or
or
dec
mov
pop
mov
movsb
sbb
and
mov
add
push
cld
loope
arpl
pusha
sub
sub
push
mov
aas
sub
add
and
cmp
loope
sub
outsb
out
dec
daa
mov
pop
dec
lea
call
mov
in
adc
ds
out
cmpsb
cmp
mov
inc
adc
pop
pusha
jb
repnz
sub
sbb
dec
mov
cmpsb
or
inc
or
push
cmp
mov
daa
call
dec
jp
or
pop
jb
out
or
cld
push
fisttpll
arpl
pop
fsub
fs
repnz
cld
gs
mov
lahf
pop
pop
inc
cmp
into
sub
out
stos
aam
enter
movsb
int3
or
inc
aad
ds
jo
inc
push
add
fisubrl
pop
cmp
mov
outsl
js
fs
pop
xchg
lods
stos
jbe
icebp
mov
push
outsb
adc
pop
iret
nop
lods
inc
lods
mov
lock
mov
scas
adc
mov
or
pop
js
cmovg
int
je
in
sbb
xor
add
in
je
mov
in
aas
movsb
ret
aad
add
loopne
cmp
out
pop
js
je
inc
fnsave
mov
fstpt
mov
and
nop
lds
or
sub
push
inc
movsb
jb,pt
jge
mov
mov
insb
imul
dec
sahf
lahf
mov
je
push
int3
insb
lods
pop
out
pop
adc
stos
mov
fldcw
jp
imul
pop
jno
enter
incb
adc
cmp
cld
mov
rcrl
lcall
push
and
xchg
fcomps
mov
push
mov
mov
adc
out
cld
xorl
mov
xchg
sti
add
movsl
and
xchg
dec
pop
xchg
insl
es
movsb
xchg
lcall
push
ljmp
and
iret
lds
dec
pop
mov
mov
sbb
pop
add
fwait
scas
jg
add
shr
test
inc
fldenv
mov
dec
adc
mov
stos
and
data16
icebp
sarb
int3
imul
inc
fcmovnb
lret
cltd
mov
dec
add
rorb
in
in
sbb
xchg
je
xor
cmp
shr
popa
popf
cmp
xchg
movsb
in
mov
test
in
cwtl
ficompl
mov
gs
pop
pop
insb
clc
filds
bound
jae
jo
push
outsb
and
ss
getsec
std
bound
pop
pop
shl
popa
stos
push
mov
notl
mov
sub
add
sub
dec
dec
dec
push
aam
sbb
adc
sarb
out
or
cmp
imul
iret
loope
cld
xchg
mov
stos
out
int3
es
pop
mov
call
dec
insb
push
jbe
test
mov
cwtl
sbb
out
scas
loopne
sbb
mov
xor
addl
pop
jne
mov
pop
in
dec
jb
pop
mov
adc
xchg
push
mov
add
inc
mov
out
jecxz
cwtl
and
in
sub
push
sbb
into
or
mov
push
mov
sbb
les
jnp
addr16
adc
jne
push
push
ds
or
xor
bound
push
xor
lahf
testb
lods
push
jge
mov
repnz
jp
in
jp
mov
inc
dec
sbb
sbb
rcrl
push
pushf
jecxz
rcrb
roll
mov
rorb
xchg
popa
and
movsb
cmp
mov
out
out
fdivs
jbe
xlat
inc
push
inc
test
lea
out
push
popf
xchg
sahf
orl
ljmp
outsb
xchg
dec
aam
jnp
test
jo
in
rcrb
sub
xchg
insl
popa
popa
pop
loop
sbb
push
pop
xorl
adc
sbb
cmp
mov
addl
ret
in
bound
xchg
stos
cmpsl
cmp
or
xchg
test
jmp
bound
pop
mov
jb
xchg
testl
mov
inc
adc
shll
test
stc
dec
adcl
adc
dec
pop
test
inc
mov
push
jbe
add
mov
movsb
test
inc
imul
ret
push
xor
aam
mov
add
sbb
call
stc
psadbw
cmp
cmp
fistl
ret
mov
adc
pop
repnz
in
addr16
data16
inc
loopne
pop
das
xchg
std
xchg
in
sbb
or
hlt
mov
aaa
xor
andb
and
fcoms
mov
adc
cmc
rcrl
lcall
popf
mov
jge
scas
pop
repz
popa
out
arpl
mov
sbb
ja
or
inc
pop
call
mov
daa
sbb
pop
ja
push
fucomi
or
jns
jmp
iret
inc
adcb
push
add
mov
lea
xchg
scas
jne
sbb
xchg
mov
and
loopne
push
lcall
or
cmc
mov
bound
cmc
or
mov
pop
shl
and
pusha
push
jl
mov
dec
push
mov
jmp
push
leave
sub
sbb
pop
xor
loopne
out
hlt
jmp
aas
das
loop
ja
jmp
sbb
jno
movsl
jle
pop
and
fldenv
mov
stos
add
sti
out
jecxz
outsb
xchg
pusha
mov
and
test
rcrl
xchg
inc
push
nop
dec
mov
push
sub
aas
push
sub
cmpsl
mov
xor
scas
mov
hlt
outsl
cmp
sbb
add
jl
les
inc
icebp
cld
inc
mov
test
jle
mov
add
insl
bnd
add
adc
mov
cmc
mov
in
dec
in
movsb
out
loopne
mov
stos
bound
inc
push
add
and
push
popa
leave
cs
pop
hlt
es
inc
cmp
push
and
add
out
adcb
and
xor
add
fs
and
push
dec
mov
inc
pop
rolb
not
push
jl
insb
or
pop
cmpb
movsl
xchg
lds
stos
push
loope
mov
into
mov
popa
popl
cmovp
cmp
sub
into
mov
mov
xchg
test
sub
sbb
xor
inc
or
adc
cmp
mov
mov
or
stos
sti
push
push
stos
aaa
xchg
pop
lret
cmp
cmpsl
fstpt
adc
cmc
sub
lea
outsl
xor
hlt
clc
and
add
and
pop
jle
cmp
js
push
int
scas
jecxz
les
icebp
and
outsl
mov
push
pop
incb
cmp
popa
xchg
mov
out
inc
adc
inc
pusha
mov
xor
fdivrs
xchg
jge
push
insb
push
imulb
mov
mov
test
aas
or
popa
jl
mov
or
sub
lock
sahf
xchg
lahf
clc
cwtl
scas
cli
test
imul
mov
xor
ja
lods
outsl
mov
xor
scas
add
cwtl
jmp
fcompl
sub
mov
repnz
bndstx
icebp
es
push
xor
push
and
test
mov
add
sbb
adc
imul
jge
pop
sbb
mov
aaa
sub
lea
xor
mov
mov
int
lcall
pop
mov
mov
jl
jo
add
pop
inc
outsb
jmp
iret
std
xchg
in
xlat
mov
or
adc
add
adc
cmp
inc
inc
call
cmp
inc
mov
mov
ret
cmp
push
shlb
cmp
call
fidivrl
in
and
aam
fs
je
and
push
dec
test
xor
xchg
dec
pop
and
bound
adc
ljmp
out
ja
cs
xorb
pop
int
mov
lahf
inc
rep
in
jecxz
pop
add
inc
fucom
xor
aad
mov
adc
mov
in
lods
xor
adc
push
imul
out
jbe
sbb
mov
repz
xchg
ret
scas
sti
cwtl
add
shl
mov
mov
js
lds
jnp
stc
sbb
cmp
sub
je
scas
lcall
js
pop
repnz
rolb
out
or
mov
add
pop
adc
and
shlb
lds
inc
icebp
sbb
adc
nop
cmpsb
testl
into
mov
inc
jno
cltd
xchg
test
stos
sbb
cmp
mov
push
dec
gs
mov
sub
mov
inc
dec
push
jp
insl
lods
imul
pop
sbb
jle
aaa
imul
jmp
loopne
fidivs
nop
mov
or
mov
shrl
enter
xchg
dec
cld
ljmp
pop
lods
in
dec
jno
push
pop
imul
ss
xor
imul
dec
ret
in
flds
adc
pop
fistl
andl
fwait
mov
loop
movsl
sbb
ret
repnz
xlat
push
hlt
sbb
jo
lea
adc
cmpsl
xor
loop
or
fldcw
dec
rcrl
fisttps
mov
sub
adc
jmp
xchg
or
into
pop
sbb
lret
sbbl
das
and
ljmp
lret
cmc
sub
ja
lea
gs
int3
addr16
mov
repz
add
je
iret
shlb
ja
mov
mov
inc
mov
mov
repz
stos
and
inc
cmp
clc
jp
and
mov
mov
sbb
sbb
js
flds
xor
rcr
jl
mov
movsl
or
data16
shlb
cmp
jmp
jle
lret
and
pop
clc
dec
jmp
jae
xchg
rcrl
jno
inc
jp
and
mov
cmp
in
adc
imul
test
jmp
inc
mov
and
and
sarl
ss
and
mov
test
pop
lret
add
in
mov
pop
mov
mov
push
nop
imul
mov
inc
movsb
adc
cpuid
pop
and
mov
lds
add
arpl
xor
xchg
int
test
pusha
dec
add
movsb
inc
mov
adc
mov
push
ficoms
pop
pusha
or
fwait
sarb
sub
das
mov
out
iret
stos
hlt
mov
add
popf
mov
adc
cld
test
dec
movsl
add
mov
movsl
je
mov
filds
mov
jg
iret
out
adc
lcall
cmp
push
das
sahf
into
push
lcall
push
and
push
lcall
shlb
push
push
xchg
cmp
lds
ljmp
lods
mov
test
cmpsb
xchg
xchg
movsl
notb
call
mov
je
pop
xor
sbb
push
inc
sub
mov
inc
jae
add
inc
xchg
pop
add
pop
lds
and
stos
cli
mov
dec
fidivl
dec
incb
loopne
js
mov
adc
cld
cmp
stos
repz
inc
inc
lods
out
cmp
pusha
or
cmp
fs
loopne
stc
clc
jge
pop
cmp
dec
inc
imul
dec
mov
mov
popa
xor
sahf
das
dec
adc
or
sub
sub
cvtpi2ps
imul
gs
or
jle
push
cmc
stc
jae
fbld
inc
sbb
imul
xor
nop
jae
icebp
adc
or
adcl
fdivrl
out
sahf
pop
pop
or
les
pusha
shl
das
sub
jo
mov
mov
les
push
mov
scas
test
jmp
xchg
str
mov
or
pusha
decb
out
rorb
sbb
imul
ret
push
imul
ljmp
dec
dec
jbe
or
pop
int3
pop
ja
loope
loopne
adc
rcll
addb
and
cs
jno
lods
or
dec
and
pop
into
dec
jno
sub
dec
pop
repnz
push
imul
mov
pop
push
lds
ds
jne
xchg
mov
xchg
sub
xor
test
pop
mov
fld1
or
inc
mov
mov
mov
fsubrs
inc
test
pusha
push
sub
in
xchg
test
jbe
filds
adc
cmpb
popf
nop
lret
dec
fcmovb
int
stos
test
sbb
popa
inc
mov
pop
out
lods
cmp
or
fcmovb
dec
popf
xchg
test
pop
stos
es
jl
inc
inc
nop
es
nop
adc
push
pop
push
or
pusha
dec
repz
ficompl
cmc
sbb
pop
or
popf
aam
push
sbb
mov
dec
sbb
mov
pop
dec
push
fstpl
sti
fsts
scas
push
xor
inc
jle
pop
and
sarb
fidivs
in
clc
scas
cmp
aaa
and
dec
mov
rcl
pop
jns
mov
lods
sbbb
inc
mov
xor
sbb
loope
lret
xor
fbld
push
in
loop
dec
or
xlat
push
rcrl
jns
fldcw
mov
xchg
lcall
icebp
mov
sub
je
rolb
mov
out
mov
call
movsl
jbe
bound
mov
loop
in
and
add
popa
add
jne
fcomps
cmp
dec
test
sbb
mov
or
mov
fists
scas
mov
cmpsb
sub
jecxz
ret
daa
sarb
mov
ficoml
mov
mov
lret
sti
mov
cmpl
push
jbe
mov
insl
repnz
cwtl
nop
mov
push
pop
and
mov
sbb
scas
int3
push
enter
pop
test
inc
jae
clc
mov
jle
push
scas
pop
cmp
or
xchg
mov
push
cmc
jp
mov
les
cmpsb
nop
popa
shl
mov
in
xchg
sbb
mov
mov
xor
jg
jmp
mov
adc
ja
ret
repnz
jl
or
xor
or
sti
test
mov
lods
test
in
mov
jbe
inc
das
xor
outsb
aam
inc
bnd
push
sbb
jl
mov
or
jne
lods
fsubrl
push
cs
inc
push
mov
add
add
imul
sub
or
cmpsl
aad
xchg
pop
pop
stos
inc
and
mov
sbb
jns
fs
mov
sub
sbb
or
shr
lds
xchg
xor
lock
icebp
cli
add
jge
test
test
xchg
add
sti
inc
pushf
sub
movsl
xchg
mov
push
xor
mov
xchg
xchg
ret
stos
jns
into
mov
jl
or
insb
aaa
inc
mov
movntq
out
sbb
push
aad
add
xor
xor
mov
and
mov
pop
stos
mov
test
mov
addl
jle
xor
std
test
sbb
xchg
lods
sub
pop
ljmp
pop
lock
push
mov
jnp
cwtl
jns
sbb
lock
jnp
mov
js
ss
and
lds
popa
js
jnp
and
add
test
inc
cmp
sti
dec
sbb
pop
adc
add
mov
movsl
out
dec
inc
jge
mov
dec
int
pop
addb
mov
xor
aas
cmp
jb
fucomip
movzbl
int
cmp
mov
aaa
push
test
or
and
pop
or
xor
xchg
aas
fstpt
cmp
jecxz
push
lret
out
jmp
lret
adcl
mov
inc
loopne
mov
adc
adc
cwtl
dec
inc
dec
movsl
sub
cltd
jecxz
repnz
or
push
inc
sub
and
or
push
pop
cmpsb
in
push
les
sub
and
clc
ret
xchg
imul
nop
enter
xchg
mov
dec
sbbl
cli
test
fidivl
imul
or
mov
pop
adc
movsl
sbb
stc
mov
sbb
ret
cs
inc
xor
xor
js
es
and
leave
sti
sar
sub
iret
shrb
adc
mov
add
pop
jo
rcl
dec
iret
cmp
jg
call
lods
test
repz
dec
dec
mov
and
div
cs
pushf
jb
test
adc
int3
pop
sub
stos
loopne
js
in
lret
mov
cmp
and
jnp
inc
outsl
mov
js
out
push
test
inc
push
fldenv
inc
push
push
cmp
in
loope
adc
fsubs
out
scas
cs
xor
and
push
insl
mov
mov
inc
add
xchg
inc
push
jecxz
xor
out
or
aad
jne
iret
pop
addb
sarb
rcrl
divl
es
pushf
scas
call
sbb
cs
lcall
xorb
pop
cmpsb
pop
gs
mov
or
xchg
pop
jge
and
sbb
fildl
loopne
push
push
cmpsw
outsb
pop
or
scas
mov
mov
pop
aaa
into
mov
push
sarb
add
push
inc
mov
out
pop
repz
in
inc
sti
scas
das
lret
pusha
sti
dec
in
cmp
in
int3
pop
push
or
dec
hlt
mov
enter
pop
dec
adc
jno
call
fdivrs
test
pop
divb
mov
es
mov
int3
lock
jo
ret
cmp
gs
cmp
push
ret
push
mov
xor
call
push
mov
aad
mov
push
jo
int3
cli
xchg
sbb
shl
sarb
out
shrd
popa
add
xchg
nop
decb
jle
mov
mov
push
cwtl
xor
pop
int
lret
dec
pop
pusha
lods
cmp
pop
mov
gs
je
adc
jb
cmpsl
in
mov
mov
testb
push
cli
mov
icebp
rolb
jp
push
insb
dec
enter
sbb
jno
push
or
repnz
add
xor
xor
adc
lods
insl
jle
xchg
hlt
insl
jns
mov
inc
aaa
add
mov
add
mov
mov
cld
pop
sub
into
addl
test
add
movsl
loop
into
pop
cld
cld
int
nop
aaa
ds
inc
xor
sub
mov
movsb
cmpsb
push
and
popa
sarb
loope
push
jo
mov
iret
and
lock
and
addr16
push
xchg
xchg
pop
add
jne
repz
sbb
add
mov
mov
sbb
cmpsl
sub
dec
cmpsl
mov
movsb
pop
lea
lea
cld
sub
push
clc
test
sub
cmp
lahf
or
inc
mov
popa
and
cmpsb
bound
xchg
fst
mov
dec
sub
insl
testb
xchg
jne
aaa
push
jge
and
push
ljmp
mov
mov
das
lret
fisubs
cmp
stos
pop
repz
addr16
rolb
pop
stc
in
insl
stos
out
mov
xor
xchg
push
imul
sub
jg
test
cmc
adc
mov
fdivs
inc
rol
add
adc
sub
icebp
add
mov
or
and
xlat
fwait
add
pusha
stc
scas
je
daa
mov
mov
mov
hlt
ret
vmovntdq
subl
lahf
in
push
into
test
mov
movsb
pusha
mov
inc
xchg
xchg
add
ljmp
fninit
dec
mov
out
arpl
add
xor
jle
int
in
xchg
push
aas
cwtl
cmpsb
and
pop
lahf
daa
inc
fsubl
sbb
fcmovne
or
out
adc
mov
lret
mov
push
mov
pop
bound
movsb
std
int3
or
add
mov
lret
mov
or
mov
hlt
add
orb
rorl
mov
dec
imul
inc
popa
mov
sub
mov
ret
outsl
outsb
fisttpll
bound
and
test
mov
xor
cld
sti
int
testl
daa
mov
aam
jecxz
mov
subl
dec
push
dec
push
cmp
test
leave
mov
int
fldcw
ftst
sbb
cmp
jnp
lods
jl
xor
sub
jns
lahf
sarb
in
fistpl
sub
jno
pop
popa
es
sbb
mov
xor
sbb
iret
testl
fadds
shlb
sub
pmulhuw
push
mov
cmp
call
xchg
and
sub
fucomp
adc
iret
pop
insl
mov
clc
mov
imul
in
or
dec
fcoms
push
ljmp
jl
leave
inc
pop
data16
outsl
movsb
movsl
adc
call
data16
sub
movsl
push
mov
jbe
push
arpl
lods
or
fmuls
cmpsl
ficomps
aad
xor
hlt
mov
cli
shrl
xor
jno
inc
mov
rcrl
mov
sbb
xchg
add
addl
dec
jno
les
sarl
loopne
jae
xchg
rcr
or
lret
xor
jmp
lock
jle
sub
mov
pop
pop
xor
xor
adc
adc
dec
test
pop
pop
movsl
cmp
mov
xchg
sti
test
cmp
lods
lock
lds
out
jl
mov
ror
pop
rolb
jle
and
addl
mov
pop
data16
pop
inc
js
sub
pop
sub
add
bound
xchg
xchg
incb
dec
adc
btr
fsts
push
test
js
loopne
mov
push
dec
mov
and
jle
jl
mov
in
call
cwtl
xor
pop
loopne
push
insb
lret
push
adc
and
out
inc
adc
xor
inc
stos
push
adc
daa
imul
dec
pop
xor
scas
jo
sub
shrl
ds
ds
in
outsl
out
das
test
ret
jno
lret
mov
aaa
adc
push
jo
fnstcw
loop
ss
push
cld
ljmp
push
xchg
xchg
int
jg
pop
or
pop
add
fsubr
cmp
rolb
push
or
cmp
mov
xlat
daa
jp
icebp
insb
pop
lahf
lock
inc
pop
adc
xorl
je
adc
or
enter
es
push
pusha
mov
push
jmp
mov
daa
sub
adc
aad
loop
add
imul
scas
adc
mov
push
sub
lahf
icebp
sbb
xchg
xchg
es
cmp
insb
pop
cmp
fdivr
adc
imul
fcomip
stos
aas
adc
mov
jl
jle
cmp
cli
fstps
sbb
push
lahf
sub
jg
mov
and
repz
inc
and
mov
push
mov
addl
shll
insl
mov
and
pop
iret
xchg
inc
cltd
lds
mov
lcall
cmp
sbb
xor
mov
negb
cli
into
mov
sbbb
in
xor
pop
xchg
cmp
sub
into
ret
adc
adc
mov
popa
in
iret
xor
popf
lret
sbb
stos
xor
jnp
stos
outsb
lock
xchg
adc
fwait
ds
push
mov
pop
enter
mov
mov
jmp
cmp
cs
cmc
mov
test
loopne
push
mov
fstps
push
xor
sahf
nop
mov
outsl
shlb
cmp
shrb
push
add
pop
add
cmp
xchg
xchg
iret
or
mov
out
ret
dec
sbb
sbb
add
pushf
push
pop
mov
scas
sub
and
sti
cld
push
mov
enter
mov
aaa
test
fdivl
cmp
cmp
cmc
dec
jg
clc
mov
movsb
insl
pop
and
push
in
ret
mov
mov
add
sub
mov
xchg
adc
adc
jge
fcmovnu
add
push
loope
aaa
xchg
fwait
push
xchg
xchg
call
cmp
cmp
fisttpl
scas
fsub
shlb
repnz
je
fidivrs
ffree
sub
mov
stos
idiv
ljmp
mov
sub
pusha
xchg
xchg
xchg
test
lret
sbb
dec
mov
shlb
ds
inc
das
or
mov
das
lahf
push
jmp
jmp
sti
dec
jle
test
fsubrl
mov
mov
pushl
jg
push
roll
in
pushf
les
in
add
les
mov
pop
jmp
mov
jns
int3
divl
stc
mov
mov
int
in
imul
jo
mov
data16
mov
pop
mov
pop
push
add
sahf
je
jg
push
loop
xchg
rcrl
fdivs
dec
stos
adc
daa
xchg
loopne
or
push
imul
fwait
in
lea
cli
test
aaa
jmp
xor
mov
scas
int3
out
in
cmp
cs
imul
dec
xchg
pop
pusha
sbb
cld
test
icebp
jecxz
mov
repnz
mov
lock
jo
and
adc
mov
push
add
ljmp
jecxz
sub
in
pop
idivb
insl
and
and
xor
ficoml
sbb
pop
mov
inc
popf
mov
and
aad
jno
mov
or
mov
aam
mov
movsl
iret
mov
mov
push
sub
dec
xor
xor
cmp
pop
mov
movsb
loop
lahf
pushl
movsb
push
mov
insb
inc
xor
int
sub
test
push
xlat
mov
mov
pop
movsb
jg
int
ss
frstpm(287
loopne
arpl
notb
mov
testb
aad
inc
jmp
in
cmp
inc
dec
inc
sbb
hlt
je
cmp
push
cmp
xor
and
mov
mov
lret
popf
jns
sbb
pop
lods
popa
stos
test
fdivrs
pop
add
aaa
out
jmp
xor
in
and
pop
test
push
pop
push
jg
lcall
push
pop
insb
xor
popa
js
aam
xchg
lret
sbb
lahf
daa
repz
xor
push
jge
arpl
jne
ss
imul
sbb
out
leave
inc
lahf
lret
pop
test
jecxz
in
ljmp
fisubrl
jae
add
movsb
push
bound
push
inc
cli
xchg
fs
mov
xor
adc
cwtl
ja
inc
xchg
pop
in
sbb
movsl
xchg
enter
call
sbb
scas
cmpl
icebp
or
jle
push
dec
leave
sbb
push
mov
hlt
push
into
jg
inc
cmc
dec
jbe
xchg
cmp
jmp
jnp
das
jmp
mov
test
lods
xor
movsl
add
pop
daa
stc
ds
jg
dec
push
shlw
or
lock
mov
inc
inc
cmp
push
sub
out
push
adc
sbb
dec
sbb
out
movsb
popa
cmp
sub
xor
or
jge
push
insb
mov
nop
push
outsl
and
aad
shl
cmc
call
mov
pop
mov
cli
adc
mov
loopne
jae
push
adc
ljmp
test
scas
sbbl
mov
mov
cmp
es
and
test
pop
pop
add
dec
rcrl
inc
iret
and
daa
xchg
adc
mov
inc
mov
push
inc
fwait
jnp
aas
add
cmp
popl
mov
lcall
arpl
sub
push
xor
les
dec
or
pusha
or
mov
aaa
pusha
lock
or
push
xlat
insb
mov
jo
cmc
sbb
in
adc
stc
stos
es
fmull
loopne
add
push
add
dec
inc
ja
out
sbb
imul
cmpsb
mov
mov
pop
add
js
aam
add
rcrb
pop
cmp
xchg
js
mov
ds
cmp
adc
fsubrl
into
jecxz
pop
push
and
les
insb
sub
xchg
rolb
push
cmp
bswap
mov
or
test
xor
jnp
dec
imul
and
mov
mov
push
out
add
push
and
sub
loopne
int3
out
jle
xchg
jns
pop
mov
mov
or
and
outsl
cmp
jb
pop
frstor
fsubs
xor
xchg
popf
adc
inc
push
xchg
add
bound
or
xor
out
xlat
sub
xchg
mov
inc
lahf
or
sbb
lret
push
stos
or
aad
jp
lea
inc
mov
mov
adc
mov
xor
or
inc
mov
jnp
or
outsb
bound
cmp
out
fisubrl
lds
jmp
adc
shlb
push
xchg
jnp
imul
int
adc
add
je
push
xchg
xor
jmp
mov
gs
add
mov
jnp
mov
roll
adc
inc
leave
das
scas
mov
inc
mov
dec
cmp
sub
pop
mov
jp
push
cmc
scas
jmp
push
mov
fsubrp
pop
pushf
stos
gs
mov
mov
xor
sbb
in
rcr
les
cmp
sbbl
or
gs
or
in
push
mov
gs
into
movsb
shl
std
adc
sub
sub
repnz
xchg
jecxz
punpckldq
leave
push
pop
stc
mov
xchg
out
inc
or
out
movsl
xor
add
cmp
insb
mov
mov
mov
iret
stos
or
or
mov
ret
popf
test
leave
push
cmp
cmp
stos
cli
xor
xor
or
add
add
push
test
bound
push
pusha
cmp
xor
rep
pop
pop
into
jnp
xchg
jg
jo
push
lret
fwait
inc
push
xchg
addr16
add
aad
add
xor
xchg
mov
movsb
mov
push
xor
pusha
enter
lds
adc
dec
fmuls
jmp
mov
pushf
sbb
jb
and
push
sub
pop
stos
repz
dec
fists
cmp
sbb
imul
stos
xor
fimuls
xchg
sub
xchg
and
aaa
loop
outsl
mov
lock
push
shrl
xor
aas
lods
mov
or
aas
lret
xchg
pop
mov
out
or
dec
jle
xchg
into
sbb
jb
jecxz
dec
jp
popa
mov
mov
inc
mov
lahf
xchg
pop
sub
jns
jle
cmpsl
xor
cwtl
add
fidivrs
xchg
xor
sbb
pop
es
add
xor
sub
push
scas
les
pushf
dec
cmpsb
es
shll
sar
dec
vminss
loop
imul
dec
pop
testb
or
cmp
addr16
pop
cmp
xchg
addr16
outsb
in
xor
mov
rcr
shl
int3
push
xchg
mov
and
inc
inc
xchg
jae
pop
add
lods
xchg
dec
adc
icebp
pop
out
loop
outsb
repz
idiv
mov
and
xor
push
mov
mov
popa
out
add
add
test
cltd
leave
es
lret
push
sti
nop
je
mov
in
cltd
out
add
and
sbb
mov
adc
cmc
jne
or
mov
outsb
lds
and
inc
rclb
push
out
and
push
aad
or
mov
es
sub
mov
scas
xor
push
ret
jg
andb
or
cmp
push
pop
insb
mov
dec
pop
pop
test
shrb
xchg
cwtl
xchg
imul
das
and
lods
jle
jae
cld
fidivl
xchg
imul
daa
pusha
or
and
in
loope
addr16
mov
fiadds
mov
enter
or
out
int
push
jmp
fs
inc
xor
enter
stos
out
ret
sub
cmpsl
push
lret
cmp
push
mov
out
dec
sbb
in
and
stc
cs
jb
fstp
addl
mov
in
mov
aaa
mov
fldl
rcrb
push
in
xchg
mov
loope
dec
insb
jbe
sbb
in
push
mov
pushf
outsl
push
sbb
mov
and
lds
or
pop
push
sub
arpl
mov
pop
xchg
add
xchg
or
xchg
mov
push
jmp
loope
push
add
ret
insl
dec
hlt
sub
mov
or
cmpsb
loope
mov
lcall
add
pop
std
cltd
inc
push
add
scas
adc
inc
jne
sub
xor
jg
jecxz
xchg
mov
add
inc
fstl
sbb
add
scas
and
outsl
jne
inc
xchg
dec
enter
lock
jl
in
cmp
test
pop
mov
lods
push
xchg
xchg
push
jno
and
sbb
fdivrs
es
pop
jge
mov
pop
pop
into
jp
xor
and
call
ljmp
or
fs
popf
mov
add
loopne
lock
push
cmp
mov
shll
xchg
cld
jle
in
insb
sahf
outsl
or
xchg
shlb
dec
nop
add
sub
mov
dec
jns
scas
addr16
int
cmp
sbb
test
sarb
aas
jp
out
iret
call
call
out
popf
mov
dec
push
cmp
js
std
popf
pushf
adc
jbe
or
bound
push
dec
or
or
mov
inc
cmp
mov
into
cwtl
rol
or
add
dec
xchg
fdivrs
test
mov
adc
bound
mov
jl
icebp
popf
iret
xchg
add
outsb
dec
movl
mov
stc
mov
or
and
loop
sub
dec
test
ret
sbb
in
jnp
jmp
mov
add
shlb
push
fimuls
xchg
test
dec
sarb
movsb
lret
inc
clc
adc
inc
pushf
shl
dec
or
rcr
std
icebp
gs
insb
out
mov
sbb
scas
mov
mov
pop
pop
das
addr16
mov
and
adc
inc
mov
and
sub
cmp
filds
sti
cmp
cmp
xorl
push
or
aaa
lcall
repnz
mov
aad
lock
xchg
and
leave
mov
add
jl
jnp
mov
inc
insl
pop
inc
mov
or
and
bound
repz
adc
movsl
pop
mov
pop
movsb
jmp
lods
sub
divl
sbb
mov
sub
mov
js
pop
ret
ja
pop
push
dec
ds
sub
lcall
mov
and
or
add
test
nop
fiadds
cmp
hlt
push
sbb
addb
lds
ffree
aad
push
xor
pop
in
push
mov
insb
mov
xchg
cmp
and
sti
inc
movsl
ret
jecxz
jmp
addl
pop
nop
push
iret
mov
jno
lea
cs
lcall
andb
jge
or
xor
and
jg
adc
cli
pop
jmp
fcompl
mov
mov
loopne
out
mov
ficoms
aas
push
lret
pop
bsf
mov
loope
leave
and
adc
xchg
testl
or
ja
pop
insl
xlat
arpl
dec
mov
xchg
cli
pusha
out
xchg
js
loopne
scas
mov
movd
push
lahf
aad
push
pop
dec
stos
dec
sahf
dec
lds
and
rcrb
push
or
lcall
insl
andb
test
pushf
mov
jg
mov
pop
popa
jb
sbb
mov
or
aad
sub
loop
arpl
mov
test
xchg
dec
mov
jo
dec
jp
sub
adc
and
std
arpl
inc
pop
int
popf
test
imul
clc
mov
in
or
push
fninit
fsubrp
mov
xor
sbb
rol
lea
sub
cld
sbbl
inc
cmpsl
subb
out
mov
mov
xor
or
push
add
push
cmpsb
call
push
std
push
push
insb
pop
mov
and
cli
pusha
aaa
stos
aaa
mov
cmp
ja
push
int
aaa
sbb
insb
testl
movsl
sub
mov
pop
frstor
xchg
nop
dec
cli
data16
lret
pop
adc
fcmove
jmp
jg
fnstsw
and
pop
test
cwtl
mov
mov
mov
adc
sbbl
imul
and
lcall
adc
push
mov
or
movb
mov
movb
test
pop
sbb
andl
push
mov
cmp
or
dec
stos
mov
jb
in
test
dec
adc
ja
divl
out
and
ret
arpl
and
push
insl
inc
movsl
mov
mov
call
lea
mov
inc
sti
inc
inc
sarl
add
stos
sbb
push
loopne
push
test
inc
fs
sbb
mov
or
in
in
in
testl
psadbw
pop
xor
xor
and
cld
arpl
sub
daa
push
jle
cmpsl
in
dec
push
icebp
out
aam
aaa
sub
xchg
lds
xchg
imul
das
pop
inc
enter
mov
idivl
aad
movsb
add
xor
sarl
aad
ror
sub
and
mov
addr16
fidivrs
mov
sbb
xchg
ds
mov
aam
or
xor
sub
push
int
mov
add
test
sbb
pop
pop
xchg
push
pop
stc
mov
jle
cmpsl
fcomip
dec
sub
enter
popa
fbld
clc
cmp
adc
leave
lea
jae
fstpl
mov
sub
mov
testb
xor
jmp
pslld
xor
push
cmpsl
fstpl
mov
sub
xchg
rclb
inc
xor
dec
arpl
mov
dec
out
test
mov
xlat
fimull
lea
pop
stos
movq
rcl
lahf
imul
adc
xor
popf
pushf
mov
shl
cmp
push
mov
xchg
xlat
jle
call
adc
in
sbb
and
test
xchg
mov
dec
aad
xor
mov
rorb
and
out
jl
movsb
mov
push
subb
adc
dec
cmp
inc
fstp
out
dec
scas
mov
jno
loopne
sub
inc
shlb
sub
inc
dec
fstpl
adc
mov
xorb
fbstp
loop
cmp
adc
cltd
ljmp
adcl
jo
or
jae,pt
mov
pusha
jo
inc
sahf
fbld
add
bound
or
push
xor
mov
push
sub
pop
xchg
sub
in
mov
sub
inc
push
outsb
or
sbb
movb
ja
nop
mov
adc
fwait
stc
ja
mov
cmp
dec
nop
bound
sub
frstor
imul
daa
pop
lds
pop
mov
sbb
leave
xchg
mov
pop
fcoms
ret
mov
jae
mov
mov
xchg
push
inc
ja
inc
aam
cmpsl
mov
fistl
mov
int3
adc
mov
cltd
lds
jne
mov
notb
sbb
mov
ret
mov
mov
mov
xor
sarb
mov
add
pop
or
xlat
aad
sarb
lret
rorl
mov
sbb
dec
fstpt
adc
cmp
pop
hlt
ret
je
mov
addb
mov
nop
test
aad
xchg
mov
fdivrp
jmp
or
out
loope
enter
pusha
lock
push
mov
aam
lock
idiv
dec
or
add
xchg
sbb
fadd
inc
or
sub
push
fsub
hlt
push
call
jne
pop
jbe
mov
jno
push
xchg
add
mov
and
loopne
or
pop
mov
enter
in
cs
ljmp
sub
insb
xchg
jp
adc
pop
jo
pop
inc
outsb
adc
push
jb
leave
lock
enter
sahf
or
fs
inc
push
in
fists
sub
stos
ljmp
addr16
sub
mov
mov
call
push
xchg
jbe
imul
push
fwait
int3
adc
xchg
and
xchg
dec
inc
xchg
add
mov
into
mov
add
mov
test
ss
or
cwtl
or
jne
sbb
adc
mov
cmc
mov
dec
mov
inc
mov
jo
dec
adc
pop
js
mov
iret
sbb
out
sub
mov
xor
mov
addr16
std
push
and
stc
es
fisttps
push
xor
xor
dec
test
sub
sub
shr
rol
adc
arpl
stc
into
jmp
lcall
call
fnstcw
lcall
in
mov
mov
cld
imul
pop
fdiv
xchg
mov
mov
xor
cmpsb
jnp
xlat
xchg
xchg
loopne
clc
pop
xor
aas
or
push
xor
push
mov
xchg
add
mov
dec
andb
adc
cmc
xchg
push
xorl
jnp
sbb
loop
push
mov
mov
das
outsb
mov
push
xchg
add
aad
fstps
in
shlb
pop
insb
into
add
xlat
xor
inc
sub
mov
adc
dec
or
sub
js
outsb
mov
shrb
cmp
lahf
shll
or
and
mov
imul
jecxz
inc
ret
adc
inc
or
stos
les
inc
jge
fiaddl
pop
pop
xlat
inc
imul
lea
je
ljmp
xchg
lds
lods
jbe
mov
ja
scas
das
jecxz
js
cmpsb
mov
mov
mov
ss
cmp
stos
cli
push
jmp
mov
pop
pop
mov
xchg
ret
mov
mov
rorl
cld
mov
repnz
cmp
adc
rorb
cmp
mov
stc
ret
and
outsb
push
testl
mov
sub
pop
sub
repnz
push
cmp
bound
adc
loop
jne
add
bound
leave
or
adc
xchg
lret
sahf
mov
mov
add
or
push
jmp
movsl
iret
fidivrs
adc
sub
xchg
je
cmp
mov
mov
push
push
and
xchg
and
pushf
pop
ljmp
cltd
loope
loope
mov
cmp
push
pushf
repz
jnp
mov
es
imul
cmp
push
clc
sbb
or
mov
push
fldenv
and
and
aam
cmp
mov
add
jns
push
add
fbld
out
add
pop
push
push
daa
movsb
and
mov
rol
pusha
outsl
movsl
cmpsb
add
pop
aam
mov
fistps
cmp
add
rol
cmpsl
xchg
cmp
mov
ds
sbb
nop
pop
xchg
sub
and
out
and
jge
js
sub
mov
adc
xor
loope
and
lret
mov
bound
mov
xchg
fisubs
cmpsb
push
jae
sub
cmp
pop
and
shrl
sbb
push
bound
dec
iret
cmp
adc
pop
cli
daa
mov
jl
in
xor
pop
mov
movsb
xor
repz
clc
out
mov
sub
pop
filds
mov
insl
add
xchg
rcrl
scas
sbb
cmovp
pop
lret
addr16
cld
popa
icebp
mov
dec
div
push
rorl
outsb
ret
jp
push
mov
addr16
bound
cltd
repnz
mov
xchg
in
out
sub
andl
ret
adc
mov
addr16
aam
push
outsb
xchg
push
call
pop
inc
jp
pop
sbb
filds
arpl
icebp
icebp
sub
cli
lods
push
cwtl
jmp
mov
lds
scas
das
mov
jecxz
insb
sbb
mov
out
push
add
lcall
int3
pushf
and
fiadds
js
sub
sub
pop
packsswb
adc
rcll
sub
outsl
adc
adc
pop
data16
mov
arpl
sbb
xchg
sbb
std
xchg
mov
pop
pop
jg
aas
popf
sbb
push
ss
lret
sbb
sahf
inc
test
push
jge
popa
mov
jbe
bound
mov
xchg
aaa
dec
xor
out
shrb
out
sbb
in
xchg
inc
out
leave
dec
xor
cltd
push
lods
out
jno
cmp
inc
adc
mov
andl
mov
ret
repz
mov
in
scas
push
imul
xchg
push
fildll
cltd
lret
cwtl
sar
jle
inc
nop
or
cmp
mov
lcall
lods
jbe
xchg
scas
fs
mov
xlat
cmp
mov
xchg
sbb
mov
xor
xor
scas
inc
pop
pop
push
dec
add
jl
fildl
pop
out
ss
and
adc
fiaddl
push
ds
pop
sub
mov
in
rorb
ret
icebp
inc
jbe
lods
mov
jo
loop
mov
mov
mov
jg
pop
xor
xchg
sub
dec
imul
mov
cmp
cwtl
ret
mov
je
mov
mov
sub
adc
movsb
leave
push
dec
mov
lock
shll
pop
call
cwtl
or
mov
jp
and
hlt
fcoms
cmp
sahf
xor
mov
in
xchg
push
jge
lret
dec
shrb
mov
mov
test
ljmp
das
scas
push
mov
cmp
pop
rcl
pop
sbb
add
sbb
lods
xlat
mov
dec
mov
xchg
bound
push
ffreep
in
dec
shrb
out
sub
jmp
sub
addl
ja
inc
mov
aas
mov
push
mov
cmp
inc
push
jne
inc
xor
inc
pop
mov
fistl
mov
fadds
ja
jb
dec
xor
inc
insb
cmp
dec
dec
shll
mov
ficompl
data16
pop
and
iret
or
addr16
xchg
and
pop
mov
adc
shlb
push
jge
fwait
or
inc
ret
or
repnz
mov
insl
imul
pop
movsl
out
outsl
sub
sbb
popf
adc
das
shl
adc
adc
cmp
das
popf
fmuls
mov
dec
or
mov
andl
shlb
lods
or
je
cs
sbb
xor
aas
repz
xlat
sbb
add
les
das
jl
sub
and
pushf
popf
xchg
mov
or
ret
lods
push
pop
adc
xor
repnz
inc
sub
sbbb
pusha
sahf
inc
ljmp
push
add
mul
call
lret
inc
aas
sub
leave
test
popl
data16
mov
xor
cmp
sub
inc
rcrb
enter
orl
push
xor
lods
fbld
adc
mov
mov
sub
push
jno
out
adc
xor
xchg
xchg
pop
lods
bound
xchg
pop
mov
addr16
cs
jbe
imul
adcl
idivl
xor
xchg
add
in
lcall
pop
and
shlb
mov
jnp
hlt
or
add
notb
sub
pop
je
cltd
movsl
dec
rorb
in
popa
addl
and
roll
mov
scas
insb
sub
nop
scas
sub
inc
test
lcall
lcall
mov
pop
add
mov
xchg
or
test
push
mov
push
or
in
pop
and
lcall
pop
lahf
fs
sub
cmp
data16
mov
xchg
rcrb
sarb
call
add
pop
add
mov
push
scas
loopne
pushf
lds
cmpsl
inc
xchg
notl
mov
int
sbb
and
rolb
lcall
out
inc
das
cltd
push
mov
mov
adc
mov
sub
into
mov
leave
inc
mov
jmp
fbld
dec
ret
dec
push
add
and
sbb
clc
cld
adc
mov
inc
and
movsl
orl
aaa
mov
xorl
pop
pop
push
push
push
pusha
cmc
je
sub
fcmovb
movsb
pushf
sarb
dec
jno
stc
inc
adc
xchg
mov
add
into
jp
inc
jbe
push
flds
push
out
mov
mov
mov
icebp
shll
or
cmpsb
jo
mov
push
jbe
fwait
and
mov
or
sti
mov
inc
data16
xchg
xor
pop
enter
mov
push
xchg
out
push
pavgb
add
sub
popa
int3
enter
sub
mov
and
out
inc
js
push
into
and
jnp
sub
movsb
sbb
ds
repz
sbb
ret
sbb
jecxz
pop
inc
divb
aad
popf
pop
push
das
outsb
mov
inc
insl
scas
xchg
in
push
push
inc
mov
or
repnz
lods
nop
shrb
popf
mov
push
sbb
push
adc
out
sahf
repnz
adc
adc
lea
jge
mov
movsl
jb
jp
repz
pop
adc
andl
mov
std
cltd
cvtps2pi
mov
notb
or
js
sub
mov
xchg
pushf
scas
cmp
sub
jno
sarl
xchg
xor
inc
push
cltd
mov
pop
jae
adc
js
std
addr16
mov
xchg
ljmp
lds
lahf
add
pop
or
lahf
mov
rcll
xchg
xchg
add
xchg
mov
jmp
out
jo
mov
xor
test
scas
out
in
cmpb
xchg
jl
mov
scas
lea
cmpsl
notl
stc
push
jns
lods
adc
adc
xchg
sbb
jbe
mov
jo
cmp
fsub
pop
pop
xor
ret
roll
push
sbb
pop
outsb
lcall
push
pop
lret
das
fsubrs
jle
sub
push
inc
mov
cmp
pand
push
cmp
add
adc
jno
shl
mov
xor
aam
andl
adc
push
pop
sub
les
mov
inc
mov
adc
rclb
outsl
xchg
mov
lcall
mov
cmp
lcall
and
or
mov
mov
sub
fldt
adc
inc
jge
sbb
xor
mov
sbb
jne
cmp
pop
loopne
loopne
mov
sti
loop
aaa
push
movsb
sub
push
loopne
stos
outsb
int
dec
sub
test
stos
rclb
push
or
out
pop
or
hlt
dec
mov
jle
push
mov
imul
or
jp
mov
cs
sahf
sub
ror
dec
dec
push
daa
adc
in
push
fwait
pop
fldt
mov
out
and
xor
jle
xchg
pop
mov
cmovle
mov
out
and
mov
insb
aad
ljmp
clc
dec
inc
imul
dec
aas
ret
cmpsb
decl
iret
push
push
sub
sbb
dec
xor
sbb
sub
jo
es
add
mov
aad
mov
mov
jg
and
or
push
ret
loop
mov
out
xchg
xchg
mov
mov
sub
adc
jp
cmp
stc
mov
cld
mov
mov
test
jno
mov
call
push
mov
shlb
pop
out
shlb
shrb
lahf
cmp
stos
mov
sbb
sub
shll
push
add
mov
shl
and
mulb
jl
lock
mov
lds
adc
loopne
mov
or
push
mov
add
insl
stos
stos
les
int3
cld
mov
fidivs
cld
and
cli
sub
in
dec
jnp
add
jmp
adc
dec
pop
ret
bound
insl
ljmp
gs
rolb
xor
rol
mov
out
dec
aas
mov
sub
sbb
add
sub
cmpsb
push
or
mov
sti
jae
or
push
fdivs
mov
mov
dec
jecxz
shrl
mov
popa
pushf
leave
and
xlat
in
add
bound
xchg
inc
cltd
xlat
int3
jmp
clc
xchg
and
mov
add
les
jo
inc
jg
sbb
pop
cmc
xor
mov
and
pop
sti
inc
sbb
out
fmuls
test
and
out
add
cmpb
sbb
mov
push
out
test
xchg
add
ret
jp
xchg
roll
push
mov
mov
ret
mov
lods
pop
jl
inc
sahf
inc
jle
pop
fsubrp
mov
push
loopne
mov
addr16
fdivs
outsl
mov
and
pop
mov
pop
stos
pop
lds
mov
cmp
mov
pop
ret
les
dec
jecxz
loopne
mov
and
aad
enter
inc
mov
addr16
jg
dec
out
xchg
bound
lahf
xchg
xlat
mov
out
push
in
call
xchg
fnsave
push
cmpsl
mov
in
jl
jo
adc
repz
mov
imul
nop
je
pop
fistl
icebp
insl
jle
fs
lods
add
push
bound
xchg
insl
push
mov
rcll
add
and
cltd
xor
leave
and
and
xor
das
xchg
es
dec
iret
push
bound
inc
mov
ss
int
stos
mov
inc
mov
mov
mov
imul
call
popa
adc
jb
push
invd
in
add
lods
mov
in
int
or
insl
fnstsw
xchg
mov
pop
add
or
adc
mov
or
sub
mov
into
pop
mov
add
sbb
adc
inc
popa
out
test
inc
loopne
xchg
cmpsb
xor
cmp
cmp
and
cli
or
stos
mov
cwtl
stos
jge
add
pusha
loop
dec
or
sbb
sub
jne
or
dec
jle
sbb
push
cld
in
popa
mov
dec
frstor
cmp
pop
cmpxchg
and
adc
dec
mov
into
aas
mov
lock
pop
jne
push
sbb
mov
adc
arpl
mov
inc
aas
jmp
shlb
push
jae
lahf
in
cmp
xchg
pop
movsl
jb
push
pop
push
mov
ljmp
xchg
add
jmp
or
arpl
mov
inc
push
mov
js
ds
and
ja
and
add
xor
in
inc
sti
dec
sarl
push
divl
in
xchg
jecxz
cwtl
dec
testl
ficomps
inc
adc
cmp
lea
push
gs
dec
repz
and
fisubs
push
pop
jecxz
push
fs
mov
cltd
hlt
jmp
mov
pushl
push
mov
dec
xchg
dec
pop
jmp
cltd
pop
fldcw
xchg
pop
mov
sub
loopne
sub
imul
in
daa
fldcw
int3
sub
inc
or
mov
sbb
int3
dec
fidivrl
ja
lock
jge
in
push
pushf
sub
add
aas
loopne
adc
aam
lret
nop
mov
mov
repz
in
sub
arpl
fisttps
stos
jbe
fnstenv
pop
movsb
add
in
mov
call
inc
jbe
cmp
push
xchg
cld
cs
mov
cwtl
cmc
adc
dec
les
push
mov
inc
xor
sub
add
push
xchg
bound
sbb
add
sub
out
jg
daa
push
test
cmp
arpl
gs
cmpsl
testb
push
pushf
xor
xchg
sub
push
adc
mov
cmpsl
sub
cwtl
pop
cmp
add
xor
add
push
xor
xchg
xchg
dec
sbb
sbb
stos
fldcw
insb
xlat
std
pop
adc
jbe
cmpsl
inc
cmp
sub
add
and
inc
xchg
inc
iret
int
jmp
jns
jg
mov
inc
dec
jl
bound
pop
aas
mov
pop
add
pop
loope
stc
lds
sbb
and
inc
push
dec
jmp
sbb
jmp
imul
subb
pop
fsub
xchg
mov
pop
fwait
dec
test
push
sbb
xor
ljmp
xor
call
aas
xchg
pop
pop
call
popa
out
icebp
push
sbb
push
push
bound
ret
dec
jne
mov
and
sub
sbb
add
mov
mov
insb
clc
rcrb
imul
mov
adc
insl
pop
pusha
xlat
stc
jno
stos
in
sbb
aaa
shr
std
jge
rorb
and
std
inc
mov
in
push
nop
pop
xlat
sbb
popa
push
test
cs
dec
lds
sbb
inc
pushf
enter
std
jmp
je
push
and
cmc
and
adc
mov
pop
outsb
loopne
jecxz
andl
push
or
push
std
cmc
push
jmp
cmpb
mov
jp
mov
rcl
loope
aas
fsubrp
push
and
test
or
jg
mov
push
sbb
sub
ret
enter
movsl
mov
lret
dec
xchg
popf
cwtl
enter
xchg
add
dec
jo
das
or
lahf
fildl
jmp
lock
lea
fs
jae
add
cwtl
call
not
or
jae
xor
and
dec
jbe
adc
mov
scas
cwtl
insb
jge
mov
cmp
cltd
xchg
xlat
aad
cmpsl
cs
cltd
mov
or
xlat
scas
fisubs
lods
sbb
or
adc
test
dec
ds
test
sti
daa
jbe
lret
lea
pop
dec
stos
mov
mov
and
mov
and
jns
jbe
loope
dec
push
outsb
jae
daa
mulps
mov
or
jp
xor
stos
aam
cli
out
or
mov
mov
cli
loopne,pn
cltd
lock
fwait
push
add
push
jle
dec
mov
ljmp
pushf
mov
or
cmpsl
pop
sub
adc
pop
lods
call
insb
sti
inc
adc
jge
addr16
mov
push
push
and
sub
stc
das
jle
inc
ja
xor
cmp
in
aas
in
fs
jne
sub
mov
jbe
dec
dec
push
cmp
mov
add
pop
jae
incl
inc
push
clc
flds
add
mov
xchg
outsb
test
pop
lods
xor
and
pop
fiaddl
adc
xor
das
inc
mov
in
mov
lahf
mov
cs
aad
adc
into
and
adc
mov
in
mov
adc
jp
shlb
sbb
push
add
and
push
fcomip
aad
loop
add
ret
cmp
shrl
cld
roll
dec
bound
aam
lods
fstl
ret
pushf
cli
and
test
leave
dec
lret
out
and
inc
pop
mov
pop
cmp
and
sbb
push
jmp
imul
adc
into
std
scas
and
test
out
dec
loope
mov
pcmpeqd
and
mov
jbe
loop
ja
in
sbb
cmp
or
enter
movsb
insl
xchg
enter
mov
out
dec
repz
in
aam
jnp
cmp
cmpsl
sub
add
int3
movsl
xlat
and
out
lock
push
cld
xor
add
mov
xchg
aam
pop
test
or
hlt
push
dec
jg
in
in
mov
jg
mov
aas
cmpsb
dec
inc
sub
imul
movsb
jae
out
je
jns
dec
je
in
jp
push
testb
lcall
pop
in
xor
mov
mov
fidivl
mov
or
rcrb
mov
std
pop
mov
or
fs
dec
jle
es
sbb
or
inc
xchg
xor
test
ja
jle
fmul
movsb
xchg
mov
jno
adc
subb
dec
int
or
fimull
push
jb
sub
add
mov
or
cmp
shr
cmp
xchg
loope
push
int3
aaa
stos
or
or
daa
ret
inc
add
sub
and
sbb
pop
mov
and
es
lock
adcb
int
jbe
lahf
shl
xchg
daa
dec
subl
nop
roll
je
lock
js
aas
repnz
test
and
imul
cmp
push
jne
inc
cmp
jae
roll
sub
fidivrl
or
lds
test
push
jmp
fdivs
js
mov
ljmp
into
sub
xchg
mov
out
pusha
and
ljmp
fsubs
in
into
dec
push
mov
imul
and
mov
imul
fcomps
pop
les
pop
lea
sarb
ljmp
ljmp
push
ret
pop
fcomp
aaa
xor
int3
out
int
add
and
mov
lcall
add
popa
cld
adc
jmp
jae
cld
jmp
jae
sub
daa
ss
mov
iret
mov
das
lock
adc
mov
mov
insb
scas
daa
lret
shll
pushf
mov
scas
je
sub
in
pop
insl
rdtsc
xor
aad
ret
mov
sbb
mov
in
das
xchg
ljmp
test
xor
in
loopne
je
mov
sub
inc
popa
xchg
nop
push
or
test
sub
filds
insl
or
fwait
sarb
imul
or
sbb
cli
dec
mov
test
xor
lret
int3
daa
enter
add
cmp
or
pusha
xchg
push
push
pusha
out
jl
sub
ret
or
cmpsl
out
or
inc
mov
dec
pop
inc
xchg
lret
inc
cwtl
in
decb
fldenv
jae
or
dec
out
loop
out
test
sbb
xlat
mov
xor
mov
pusha
dec
cwtl
xchg
subl
pushf
push
jp
fdivs
jmp
inc
cltd
sbb
into
int
in
lds
mov
mov
test
jnp
jne
mov
cmp
xor
sub
outsb
pop
or
jmp
dec
out
loop
fs
lret
ds
cmp
cmpsb
pop
das
fadds
mov
sbb
jnp
ret
lret
xor
adc
inc
sub
cmp
ljmp
pop
jno
aam
or
add
arpl
and
scas
add
and
xor
xchg
in
in
and
inc
mov
inc
sbb
xor
pop
mov
stos
testb
gs
insl
and
lds
dec
mov
lods
lods
xchg
stc
inc
in
cmp
sub
ret
ja
xchg
jmp
mov
dec
jecxz
gs
cs
cmp
lret
movsb
nop
jle
pushf
xchg
pop
lock
and
outsl
sub
jmp
xchg
sbb
mov
or
mov
int
fildll
inc
test
outsb
lds
leave
cmpsb
div
sahf
cmp
or
sub
stos
fisttpll
cmp
dec
scas
in
jle
pop
pop
lahf
push
xchg
and
mov
inc
push
hlt
jb
mov
nop
push
push
pushf
cld
cpuid
and
inc
push
jae
daa
inc
xor
adc
cltd
pop
sub
xchg
sub
and
mov
notl
enter
ficoml
das
or
filds
sub
outsl
cmp
add
pop
cwtl
cmpsl
adc
mov
icebp
cld
fisubrs
divl
jge
out
mov
out
mov
pop
mov
lods
push
xchg
jb
pop
sub
out
lods
outsb
pop
into
movsb
scas
xchg
mov
jae,pt
pusha
int
mov
lea
ja
pop
jns
iret
jg,pt
dec
lret
add
les
in
arpl
ret
xchg
insl
and
hlt
jp
mov
jnp
movsl
sbb
cltd
shll
sbb
shrl
inc
cmp
insb
addl
inc
dec
arpl
sub
push
inc
or
nop
dec
mov
lcall
or
mov
hlt
fsub
sub
dec
adc
imul
fcmovbe
loope
pop
mov
dec
ja
mov
ficompl
aam
and
cmp
insl
and
mov
dec
out
add
lcall
xorb
fsubp
shll
ljmp
lret
fadd
sub
add
cmp
inc
fmuls
xor
pop
dec
or
gs
jb
jno
ret
movsl
adc
stc
sub
aam
adc
push
jl
outsb
mov
mov
nop
mov
sbb
inc
mov
cmp
movsb
sbb
shl
jge
insl
or
scas
test
push
imul
test
jg
rorb
sahf
lea
nop
adc
or
daa
rorl
push
jo
jge
es
jge
jae
or
aam
ret
dec
scas
in
lcall
sub
dec
cmp
push
mov
mov
mov
inc
lods
jae
xor
jge
ja
push
adc
adc
xor
jge
xor
or
jp
ficoml
cli
add
xlat
xchg
sahf
in
std
aam
mov
lret
stos
leave
jbe
push
adc
int3
pop
out
movsb
lcall
out
cs
and
cwtl
jns
ds
inc
decl
inc
and
sub
nop
mov
dec
ds
lret
pop
inc
xor
sahf
sub
add
and
std
in
hlt
sbbl
xchg
gs
jg
icebp
mov
pop
mov
mov
sbb
cmp
and
outsb
js
xchg
or
hlt
pusha
xchg
fucom
inc
stos
cmc
dec
arpl
add
int
outsl
rcrb
add
inc
imul
lea
gs
fimull
repz
outsb
in
leave
mov
pop
mov
loopne
push
subl
imul
loop
test
ficomps
fsubs
adc
dec
mov
pop
xchg
inc
lret
sub
push
push
mov
outsb
mov
mov
pop
cmp
repnz
addr16
jp
push
stos
repnz
add
subl
or
pushf
iret
stos
jo
xchg
pop
scas
shrl
cmp
lea
negb
xchg
or
cmp
dec
cmp
aam
jmp
js
out
adc
pushl
in
jecxz
shr
inc
pushf
push
xchg
stc
cmp
fstpt
jnp
dec
popa
lods
push
sar
test
push
in
cwtl
hlt
or
sbb
pop
cmp
sarb
or
push
mov
cltd
adc
sbb
movsb
dec
nopl
je
push
es
es
mov
cmc
mov
and
sti
cmpsl
adc
jae
fwait
cmp
ret
int
es
pop
push
mov
cs
je
mov
push
push
daa
sbb
jl
gs
cmp
movsb
std
pop
and
std
rcll
cmp
jg
jne
daa
lea
mov
xchg
or
cli
ja
inc
adc
sahf
stc
out
mov
cltd
jno
cmp
or
cmp
jo
push
sarb
cli
and
sub
in
and
dec
push
into
and
adc
xor
mov
xchg
ja
jmp
lret
pushf
fiaddl
pop
stos
add
repz
es
mov
sub
out
xlat
js
dec
mov
jnp
andb
fst
xor
call
insb
or
jae
scas
dec
cld
push
push
xchg
mov
js
or
out
add
sub
into
dec
mulb
movsb
mov
mov
mov
adc
and
fisubrs
adc
sti
adc
in
xchg
aam
pop
in
mov
xor
jmp
imul
cmp
iret
push
fs
dec
pusha
adc
sbb
fimull
mov
mov
shrb
lahf
daa
daa
stc
addr16
repz
aam
in
mov
jg
cmp
aas
rcll
xor
or
push
cli
mov
jl
jl
pop
in
dec
scas
adcb
xchg
inc
les
popa
dec
and
inc
aad
ss
repnz
in
out
clc
inc
fldenv
test
adc
pusha
lret
mov
jp,pt
cmp
add
pop
frstor
adc
xchg
loop
aaa
dec
push
lea
lods
inc
mov
xor
out
in
insl
fs
jge
mov
and
adc
test
cmp
mov
or
out
adc
call
lods
and
arpl
repnz
push
mov
sahf
mov
pusha
mov
jg
push
cli
mov
mov
cs
das
ja
and
xlat
gs
call
popa
pushf
dec
dec
adc
cmp
mov
add
movsb
rcl
cmpsb
and
or
in
shll
shlb
xchg
or
xchg
je
mov
sub
dec
lahf
xchg
jge
and
lahf
es
and
or
js
sub
loope
or
into
xchg
xor
lret
fwait
repnz
test
jl
sub
sub
out
lret
inc
jl
adc
adc
fiadds
cmpsl
out
xor
addb
xor
addl
inc
loope
sti
aam
inc
ficompl
ret
cld
outsl
shrl
inc
icebp
vmwrite
mov
outsl
mov
test
ja
add
push
pop
daa
xchg
jp
jae
ljmp
xor
aaa
adc
negl
int
mov
les
and
jmp
pusha
xchg
icebp
cmpsb
faddp
add
testb
cld
jo
add
mov
sub
xor
xchg
insb
call
cmc
jno
xchg
dec
ja
repz
les
mov
gs
stos
jmp
adc
je
sbb
paddsb
push
mov
rcl
sub
adc
sbb
push
cs
sbb
dec
cmp
aas
cmp
call
sarb
daa
rcl
div
out
xchg
cmp
int3
imulb
sub
mov
xor
or
inc
jnp
xor
jg
mov
je
stc
out
xchg
add
push
mov
inc
es
int
pop
push
add
mov
inc
cmp
cli
divl
push
cwtl
add
nop
sub
jl
popf
lcall
mov
inc
xchg
mov
dec
lahf
iret
mov
add
sub
sbb
aad
push
clc
sbb
fstl
dec
or
loope
push
out
in
dec
adc
mov
ficompl
jne
aad
xor
les
adc
and
cmp
cmp
es
mov
fs
dec
ds
push
fcmovnu
loopne
jns
sti
fstp
sub
pop
cmpsb
pop
cmpl
aas
test
leave
mov
and
jno
xchg
adc
dec
pop
mov
not
sbb
and
fcoml
dec
push
stos
cmp
call
jbe
into
pop
into
test
pop
dec
mov
sub
xchg
dec
push
in
test
ret
jo
clc
mov
into
out
xchg
pop
dec
jbe
xchg
mov
in
inc
or
adc
orl
push
push
addr16
fs
sub
movb
in
psllq
jecxz
roll
aam
mov
std
gs
xor
mov
mov
sub
in
scas
out
dec
pop
cltd
popl
xor
mov
mov
mov
dec
or
mov
xor
add
push
int
into
divb
inc
mov
pop
pop
mov
mov
sbb
testb
and
orb
ja
mov
rcl
mov
and
gs
mov
xchg
fisttpll
test
pushf
jl
cld
push
mov
xor
add
fcmovne
loope
mov
or
out
or
mov
imul
adc
cmp
push
loop
loope
jne
inc
cmpsl
aaa
mov
out
pop
bound
or
jp
les
xchg
dec
fists
stos
cmp
into
jne
mov
vrcp14ps
mov
mov
loope
fs
loop
adc
add
sbb
roll
testb
mov
dec
mov
sub
jle
mov
and
jae
sti
or
shrb
sub
int3
shlb
icebp
lea
add
or
ror
push
sub
imul
outsb
pop
pop
mov
xchg
in
mov
je,pt
jle
xchg
dec
outsb
call
pop
add
mov
aas
push
jo
das
icebp
aas
or
pop
outsl
shll
movsl
call
hlt
adc
xchg
push
addr16
scas
lods
sbb
push
dec
jmp
ret
je
pushf
lcall
pop
test
loop
fcmovu
in
push
cmp
xor
clc
sbb
scas
xlat
sahf
push
mov
xchg
call
out
mov
xor
jae
jg
cmpsb
xlat
cmp
sbb
dec
and
loope
sub
or
into
out
xchg
push
xlat
fldcw
aad
mov
pop
push
fs
imulb
dec
sub
jl
push
adc
cmp
push
dec
out
dec
xchg
sub
jnp
push
jno
fidivl
xchg
xchg
jnp
cmpsl
cmp
adc
mov
mov
in
ficompl
lds
add
jns
xor
imul
mov
mov
std
inc
fidivrs
test
loopne
movsl
leave
add
aaa
cmpsb
and
ror
cld
mov
inc
and
sub
push
xor
rcrb
shll
sbb
mov
add
insl
cmp
inc
jp
lds
ljmp
mov
cltd
sarb
lahf
inc
ja
inc
mov
sub
out
mov
test
scas
jge
rolb
addr16
inc
cmpsb
jne
add
fsubrs
ja
add
add
daa
jnp
dec
mov
adcl
or
outsb
inc
cwtl
stos
adc
loopne
mov
clc
jmp
cmpb
mov
das
imul
lds
adc
sarl
loope
fmull
movsl
inc
pusha
jg
add
pop
rorb
cmc
mov
sbb
inc
pop
lahf
std
dec
mov
icebp
xor
icebp
or
cmpsl
cli
sub
ljmp
inc
pop
aas
in
adc
stos
int3
jle
pop
idivb
mov
jmp
pop
and
pop
dec
mov
cmpsb
lahf
repnz
mov
out
cmpsl
movsl
mov
push
call
paddq
imul
movsb
mov
or
sarb
mov
arpl
jo
sub
out
pop
movsl
mov
dec
out
push
cmp
xor
add
sub
shrb
testb
xchg
enter
adc
pop
pushf
mov
imul
lods
mov
mul
popa
inc
les
mov
mov
popa
inc
loop
fcmove
adc
hlt
mov
dec
push
mov
and
jnp
xchg
shlb
pushl
mov
inc
leave
gs
cwtl
inc
xchg
add
push
test
ror
inc
jbe
xchg
insl
ror
imul
jb
jl
dec
roll
or
lock
je
fstps
sub
mov
clc
data16
pop
sbb
int3
mov
sub
pop
leave
fbld
mov
pusha
sub
data16
pushf
stc
mov
xor
jg
mov
out
push
ss
in
adc
scas
popa
inc
jbe
imul
jl
xlat
mov
push
inc
inc
cmpsb
into
or
cli
out
xor
add
mov
andb
stc
jbe
mov
inc
rorb
xor
push
ret
into
jge
clc
mov
xor
or
add
hlt
add
xor
shll
sub
int
fs
aaa
ficoml
and
jecxz
xchg
outsb
sub
dec
test
cmpsb
fistpll
pop
add
scas
inc
or
negl
mov
mov
pop
out
cld
mov
cmc
pop
inc
jb
xor
mov
fcmovu
mov
inc
fsubrs
sub
inc
jne
sbbl
int
mov
pop
jl
xchg
inc
xor
add
xor
ret
in
jecxz
not
pop
fs
push
int3
stc
fidivrl
mov
push
sub
clc
fnstcw
fwait
lret
sahf
pop
jl
and
push
icebp
dec
outsb
lcall
scas
push
pop
mov
cmp
push
pushf
adc
and
sarb
in
and
xchg
mov
push
xchg
negl
aad
arpl
rcl
decb
inc
negl
pusha
pop
inc
jg
and
mov
imul
adc
push
pop
and
out
imul
fdivs
scas
sbb
mov
pop
or
or
rclb
cmp
int
xor
pop
xor
sbb
test
jb
xor
ljmp
cmp
incb
jne
xchg
and
into
movsl
bound
mov
popa
addb
fwait
leave
xchg
dec
xor
pop
mov
cmp
inc
ljmp
lahf
push
rcr
add
aad
gs
pop
dec
clc
adc
out
push
ret
icebp
mov
aam
pop
stos
or
ds
push
lods
shll
sbb
pop
inc
inc
xor
mov
push
mov
fcmovbe
jo
lret
cmp
popa
rcrb
mov
out
mov
jle
ds
adc
repz
mov
push
sub
and
inc
test
aam
imul
sbb
inc
in
out
mov
in
sub
fcoms
mov
push
pop
lret
ret
sub
ret
test
mov
jae
rorb
lret
out
fldcw
sbb
xor
jmp
insb
shlb
xchg
aaa
or
insl
pop
pop
push
idivl
insb
xchg
pop
int3
push
pop
fdivp
jmp
sub
lock
mov
nop
pop
xor
notb
fcoml
addr16
adc
insb
pushw
or
jnp
dec
test
sti
in
repz
aas
mov
movsb
mov
shl
push
sbb
pop
sbb
popa
xlat
ret
sahf
loope
pop
dec
mov
add
mov
add
fcomp
adc
repnz
ror
jns
adc
stos
mov
into
pop
pusha
add
adc
iret
mov
outsb
scas
jnp
jmp
repz
push
jne
jne
fistl
es
push
pop
fsubrs
sub
in
dec
or
loop
add
lds
addr16
mov
je
loope
subb
jns
pop
mov
shrl
js
test
in
out
outsb
dec
cli
pop
xor
jge
inc
or
push
sub
adc
inc
ja
jne
subps
inc
lahf
xchg
orl
ja
mulb
je
adc
cmpsb
lods
and
mov
mov
std
push
sbb
jae
dec
sbb
adc
les
andl
jbe
inc
popa
lahf
and
add
loopne
inc
sbb
mov
fadds
lods
dec
ljmp
xor
and
sub
and
stc
imul
mov
inc
inc
out
lock
stos
iret
inc
or
sub
test
xchg
jb
testl
insb
dec
mov
ss
fisttpll
xor
mov
xchg
es
popf
dec
mov
notl
jo
lcall
fwait
js
jg
push
xchg
adc
popa
lahf
jno
aas
jne
clc
test
scas
in
pop
xor
push
jnp
loop
nop
add
push
loopne
adc
mov
loopne
and
mov
push
and
add
jge
or
fistpl
mov
and
push
dec
push
adcb
fsubs
fsubrp
pushf
imul
jnp
ret
pop
insb
sub
pushf
adc
pop
loopne
and
jns
imul
icebp
rorl
mov
mov
std
xchg
out
inc
xchg
inc
add
loope
in
cmpsb
sub
std
mov
cmpsb
push
vorps
cmc
adc
rcrb
push
mov
dec
inc
fldt
stos
rorb
sahf
shrb
out
xor
adc
ss
icebp
mov
mov
mov
mov
aam
fsubs
push
je
push
mov
mov
popl
leave
mov
cmp
ja
js
mov
push
imul
push
clc
jno
mov
sub
cmc
mov
xchg
imul
or
arpl
xchg
cltd
imul
and
xchg
jmp
sbb
in
in
sub
nop
push
js
cs
mull
leave
and
cmp
xor
lret
pop
outsb
mov
add
shll
sbb
mov
push
ds
out
xchg
sub
mov
sub
scas
orb
stc
jmp
leave
jo
fiaddl
fwait
pop
adcl
f2xm1
dec
nop
mov
sub
sub
sete
nop
outsl
int3
push
sarb
mov
sub
xor
push
mov
imul
mov
add
pop
sarl
jge
jno
sbb
sub
lods
gs
das
out
push
pop
out
mov
loope
sub
mov
loopne
add
pop
adc
je
dec
or
repnz
ljmp
xor
jb
mov
push
xchg
es
adc
sub
sahf
push
inc
jbe
xchg
cltd
int3
insl
sub
test
pop
hlt
jge
scas
cmpsl
test
pop
aas
adc
cmpb
and
js
sub
test
lcall
ds
xchg
pop
dec
pop
cmp
lods
rorl
sub
cwtl
push
add
ret
pop
cmp
movsl
fdivrl
mov
mov
daa
mov
or
lahf
mov
xchg
repz
inc
sbb
push
cmpsl
js
dec
jp
adc
jb
int
mov
inc
clc
dec
repz
std
add
leave
mov
sbb
dec
ljmp
fists
lahf
cmp
dec
scas
pop
sti
sbb
lock
add
fcmovnb
inc
mov
inc
mov
adc
or
jno
mov
jns
mov
push
lret
sub
mov
add
pop
jnp
or
dec
push
jl
repz
jp
popa
lret
repnz
pusha
jl
adc
inc
jns
std
ljmp
out
mov
inc
dec
jmp
and
jp
ss
lret
fsubl
add
movl
enter
dec
push
pop
iret
cwtl
adc
pop
popa
fmul
adc
out
inc
daa
cmp
adc
cwtl
rcrl
addr16
push
leave
jo
xchg
push
inc
roll
call
scas
push
push
inc
outsl
xor
jmp
imul
or
fidivrl
mov
add
sub
sub
ret
adc
lcall
xor
push
mov
mov
push
test
adc
mov
es
negb
push
push
pop
fbld
mov
ds
xchg
cli
pop
jo
das
push
mov
pop
push
dec
aam
mov
mov
stc
xchg
mov
mov
addr16
sub
adc
ljmp
int
mov
xchg
adc
fsubrl
pop
insb
push
sub
imul
test
pusha
add
test
stc
pop
test
xor
dec
pop
flds
sbb
cli
cwtl
iret
inc
and
cli
cmpsl
xchg
pushf
or
ds
fdivs
clc
pushf
cmp
popf
cltd
adc
sbb
in
cmp
test
notl
stc
cli
mov
stc
mov
jnp
push
and
orb
pop
jge
pop
int
cltd
xor
xchg
xor
stc
enter
inc
pop
insl
lods
inc
mov
lret
ljmp
iret
push
insb
lret
xchg
mov
test
les
mov
or
fidivl
nop
mov
push
pop
arpl
addr16
ret
xor
cltd
loop
out
fptan
lcall
and
aam
repz
int
inc
xchg
lcall
jl
nop
pop
sbb
mov
xchg
jle
jbe
mov
daa
test
sub
aaa
sbb
or
leave
or
cs
xor
xor
popa
mulb
jl
cld
cmpnleps
pushf
push
and
fwait
call
push
sbb
stos
test
lea
lret
ss
test
cmp
or
mov
and
pop
cli
sub
jp
push
nop
in
mov
cs
out
pop
in
inc
pop
push
cmp
mov
dec
sbb
xchg
mov
lods
pop
push
test
test
loopne
or
or
fimuls
ljmp
fdivs
mov
in
jne
test
jp
dec
loop
das
ret
xchg
rep
cs
fisttpll
or
shlb
mov
sbb
loopne
or
push
int
ja
out
mov
fcomps
dec
adc
mov
fs
xchg
ret
jecxz
in
sub
cmp
call
mov
sub
loopne
ljmp
mov
mov
lea
mov
xchg
clc
xor
rorl
cmpsl
xchg
sbb
pop
sub
repz
repnz
js
aam
pop
mov
nop
imul
popf
sub
jae
clc
cld
fldl
xlat
cmp
aam
mov
cmpsl
sub
std
cmp
mov
stc
sti
es
xchg
mov
cwtl
insb
repz
pop
leave
jge
mov
mov
ret
ja
push
jne
test
and
fldenv
jg
out
push
incb
xchg
ret
jbe
icebp
mov
imul
sbb
in
loop
lret
push
add
xchg
adc
xchg
inc
fbstp
push
lds
mov
jo
lcall
xor
mov
or
fldl
xchg
lods
outsl
mov
push
pop
sbb
mov
cmp
faddl
call
inc
jecxz
ret
inc
push
adc
jno
sbb
rcl
outsb
das
test
stos
in
int3
push
dec
lock
cmp
or
xor
add
xor
adc
xchg
addr16
push
loop
cli
mov
gs
in
inc
insl
out
loope
mov
or
ret
adc
mov
sub
stc
fcomi
movsl
scas
add
sub
roll
hlt
mov
std
mov
lds
stc
inc
cmp
pop
xchg
mov
adc
cmpsl
push
leavew
fimull
mov
loop
add
lods
pop
idivl
xchg
sub
aaa
sti
out
pop
push
ss
out
jmp
cmpsl
pop
dec
rcrb
lods
notl
pop
ds
add
popa
mov
movsl
nop
cmp
pusha
pop
sub
out
push
addl
mov
andb
push
ret
or
xchg
jecxz
jo
xchg
cmp
pop
test
pop
loop
xor
cs
xchg
or
scas
pop
pushf
ljmp
push
lods
lret
scas
mov
icebp
insl
mov
cltd
and
pushf
push
push
jmp
or
jp
sahf
or
fstpl
je
test
push
outsb
dec
enterw
addr16
sbb
inc
shrb
jp
cltd
cmp
imul
push
xor
cli
mov
xlat
das
cli
xchg
mov
adc
outsl
cwtl
leave
ficoml
cmp
mov
insb
jae
push
es
mov
rclb
fld
movsl
add
jae
cmp
add
loopne
lds
cmpsb
lcall
int
stos
mov
hlt
scas
insb
lock
int
push
jb
mov
insb
enter
aas
aam
daa
arpl
cs
jne
js
adc
jp
jp
lea
aas
rcrb
add
stos
repnz
xor
into
mov
push
pop
es
jge
cmp
pop
jmp
rclb
pop
add
or
in
repz
xor
adc
xchg
out
cwtl
dec
mov
roll
daa
or
ja
inc
es
mov
push
and
inc
xor
or
dec
jl
or
mov
mov
ret
sbb
mov
test
test
pop
pop
mov
jle
pop
jnp
outsl
or
mov
sbb
dec
jge
jp
lret
push
movsl
or
fists
add
mov
fmul
andl
pop
aas
imul
push
lret
jo
xchg
je
mov
mov
arpl
xchg
mov
xor
icebp
sbb
jns
sbb
pop
xchg
aam
add
das
nop
in
sbb
nop
cld
test
arpl
push
dec
shl
mov
andl
push
push
inc
push
dec
pop
rorl
xchg
xor
popf
cmp
xchg
cmp
inc
or
sbb
stc
or
stos
in
mov
cltd
and
mov
addr16
js
mov
mov
bound
mov
cmp
or
addr16
and
or
rcrl
sbb
and
mov
or
pushf
jno
dec
or
popa
lods
mov
push
xlat
and
push
push
pop
inc
lret
xchg
test
pop
std
mov
mov
sbb
mov
mov
lods
dec
mov
sahf
dec
stos
jecxz
cmpsb
loope
sbb
mov
repnz
scas
lcall
add
faddl
pushf
sbb
aas
mov
mov
sub
jle
sbb
shrb
orl
inc
ficoml
and
imulb
xor
dec
add
addb
aad
add
add
js
dec
sti
adc
ret
ret
out
cmp
daa
clc
adc
or
mov
xor
push
sub
xor
sub
xchg
rorb
pop
imull
orb
dec
mov
imul
xchg
es
adc
fs
xchg
cmp
jns
jnp
sbb
jnp
cmp
ret
inc
sub
ljmp
push
or
in
cmp
dec
adc
push
rorl
pushf
inc
sbb
enter
dec
xor
lcall
and
pop
lret
inc
ds
push
dec
ja
jae
pushf
clc
push
lea
fs
add
es
xchg
push
out
mov
jae
scas
jae
outsb
cmc
xchg
rcrb
jmp
cmc
jo
mov
mov
dec
adc
xchg
lods
in
add
testb
inc
pop
or
add
sbb
aaa
lds
test
loope
out
sti
and
cmc
lea
and
mov
std
mov
mov
mov
cmp
dec
fistps
cld
cmp
mov
jnp
pop
mov
aas
jmp
test
mov
incl
outsl
test
fcompl
fildl
xor
xchg
scas
mov
mov
jns
sub
jne
lret
xor
mov
add
jno
jbe
fisubrl
cmp
popa
mov
fmul
subb
cli
jl
test
mov
xchg
imul
in
mov
imul
and
stc
mov
add
movsb
cmp
and
sub
mov
arpl
xor
sbb
scas
fcmovne
jae
in
faddp
or
es
arpl
push
out
div
jmp
leave
movsb
stc
dec
sub
cmp
inc
push
cmpsb
subb
lret
mov
xchg
rcrl
mov
push
fisttpll
cld
addl
test
dec
fcmovnbe
dec
cwtl
mov
lcall
add
in
cmp
xchg
mull
mov
lret
xor
call
and
ljmp
sahf
int
adc
inc
sbb
mov
decb
std
lahf
cltd
sti
sbb
mov
push
jp
cmpsl
lods
push
out
xor
xor
mov
adc
mov
adc
xor
mov
notb
hlt
and
push
dec
adc
jle
cmp
sbb
and
pop
push
insl
lods
test
std
or
das
outsl
push
orl
mov
call
inc
jns
mov
scas
sub
push
aas
in
jle
mov
jne
movsb
mov
mov
pop
aaa
pop
sub
jmp
stos
lods
mov
lea
adc
inc
push
xchg
lods
rcrb
push
cmpsb
jecxz
adc
je
push
add
dec
fmull
jg
test
lret
sub
mov
sbb
clc
imul
dec
pop
xchg
enter
adc
addb
repnz
jns
push
aam
scas
pop
cmp
mov
push
call
and
into
int3
stos
in
mov
mov
dec
out
and
cs
xchg
cmp
xchg
jmp
mov
jge
adc
mov
addr16
out
or
pop
xchg
jl
call
icebp
int3
adc
les
dec
lahf
and
dec
loop
dec
aaa
lods
and
inc
test
xlat
out
icebp
push
outsl
xchg
jae
cmp
popf
sub
inc
sbb
dec
rcr
mov
leave
sti
mov
pop
scas
jne
push
jbe
shlb
fcmovnu
inc
push
lcall
push
jecxz
daa
ja
mov
outsl
call
lret
cmp
xor
stos
pop
rorl
orb
aad
or
shrb
mov
jnp
rol
les
test
dec
mov
rorl
decb
cmp
xchg
fcompl
push
loope
inc
pop
mov
movsb
lret
mov
into
jp
repz
rcll
mov
ljmp
inc
stc
inc
in
sar
jecxz
mov
xchg
fnstcw
nop
and
addb
add
rorl
lods
adc
loop
and
leave
mov
mov
push
imul
or
aaa
test
loopne,pn
aam
sub
jnp
inc
aas
addr16
jne
popf
fistps
nop
mov
mov
in
pop
jecxz
call
sbb
xorl
pop
jnp
cmp
sbb
mov
or
bound
add
sbb
fistl
inc
push
dec
stos
xchg
pop
xchg
mov
mov
in
lret
xchg
loopne
cli
es
movsl
mov
adc
mov
addr16
insl
xchg
adc
rcrb
cwtl
aam
pushf
shll
inc
xchg
or
pusha
cmp
ljmp
mov
cmp
in
cmpsb
mov
adc
or
mov
lea
xor
mov
mov
pop
push
cld
add
push
cmp
mov
and
lahf
xor
ss
or
jo
sub
into
dec
test
pop
int3
xchg
xchg
iret
xor
jge
xchg
cmpb
fwait
dec
movsl
xchg
sar
sub
dec
sub
mov
adc
push
push
int3
pop
mov
out
cmp
jnp
xchg
hlt
mov
pop
stc
fistpl
mov
into
cltd
jecxz
or
hlt
aaa
and
stos
test
xchg
jbe
lds
pop
dec
xchg
loop
push
push
or
pop
push
xchg
stc
lahf
fwait
lar
xchg
dec
movsl
sub
dec
pop
jne
or
push
cmp
mov
fstl
pop
fsubrl
push
ja
sbb
test
xchg
add
mov
fucomp
cld
cli
push
xor
inc
into
mov
push
push
dec
xor
rcrl
mov
xchg
scas
inc
into
cmp
addl
cli
jl
push
push
aam
call
add
mov
push
mov
sbb
lcall
sahf
stos
jno
loope
in
pop
scas
sti
loop
and
xor
cmp
cmp
sub
xor
rclb
fdivrs
pop
push
mov
add
popf
out
mulb
aas
jl
pop
push
inc
mov
stc
cmpsl
mov
sbb
insl
dec
cmpb
ret
jmp
lret
dec
repnz
lods
inc
cmpsb
pop
pusha
push
adc
and
lea
fcomp
add
cmp
xor
pop
add
aaa
push
mov
ret
mov
add
sbb
and
push
cwtl
mov
outsl
mov
iret
leave
jns
roll
inc
adc
adc
and
rclb
lret
push
or
jg
xlat
mov
pop
testb
popf
loopne
xchg
testl
adc
mov
nop
inc
pop
inc
mov
sub
mov
xchg
cmp
or
ret
iret
and
gs
int
sti
fistl
aad
fildl
jmp
int3
fwait
stos
pop
rclb
and
or
mov
mov
xchg
adc
mov
inc
adc
iret
subw
add
fidivrl
pop
cmp
rclb
fildl
popf
loopne
cmpsl
sub
jge
mov
xchg
jp
pop
push
xor
xor
mov
pop
das
pop
out
sbb
jne
add
jae
pop
mov
jb
pop
cmovne
int
mov
dec
popf
pop
jg
lret
mov
cmpsb
sbb
add
sub
dec
ret
jbe
jge
sub
insl
jo
pop
pop
add
add
mov
popa
sbb
in
scas
scas
cmc
cmp
ret
js
xchg
call
jbe
mov
cs
je
int3
push
xor
and
mov
xor
mov
test
sbb
out
aas
sbbl
int
fildl
test
sbb
adc
movsb
test
mov
adc
push
push
and
test
dec
fnstcw
sbb
sti
xchg
push
test
ss
jo
cs
loopne
and
adc
or
lret
xor
call
and
popa
mov
push
and
mov
pop
adc
push
adc
jmp
out
aam
jle
test
sbb
fisubrl
js
insl
inc
push
pop
test
xor
cmpl
lods
adc
aaa
imul
rcl
mov
fists
loope
adc
pop
in
jg
sub
movsb
push
addr16
push
dec
test
push
lock
imul
fmuls
jae
les
sub
das
pop
lahf
jo
cmpsb
out
adc
mov
repz
cltd
sub
mov
or
or
popa
add
pop
or
push
iret
std
xchg
testl
idivb
cmpsl
scas
sub
jecxz
push
xchg
fcomi
imul
pop
jecxz
xchg
call
pop
mov
xchg
adcl
lods
jmp
imul
mov
sub
test
mov
adc
fistl
aaa
or
aam
push
shrl
outsl
stos
mov
aas
movsb
mov
pop
iret
inc
mov
add
mov
test
aam
add
lock
les
or
push
or
stos
adc
lahf
cmpsb
out
call
test
jbe
mov
push
sub
test
adc
dec
or
imul
outsl
in
inc
push
addr16
xor
mov
sbb
sbb
pop
je
xlat
scas
cmp
push
les
lret
or
pop
add
stc
push
dec
adc
cmp
xlat
loop
inc
pop
mul
mov
aad
cmpsl
jno
in
stos
cli
mov
adc
pop
cwtl
mov
data16
sub
lahf
inc
push
mov
lret
andb
pusha
cltd
dec
jae
lds
mov
sahf
push
inc
mov
cmc
test
jno
inc
cs
jae
mov
insl
gs
jg
cmp
mov
stos
pusha
adc
stc
stc
cmp
hlt
add
mov
pusha
mov
mov
cmp
popf
lods
inc
and
mov
bound
sub
rcrl
pop
mov
imul
inc
push
shlb
mov
fsubp
dec
adc
jl
mov
shl
fidivrl
jbe
in
mov
nop
jle
rcrb
jno
mov
pop
pop
xor
scas
hlt
and
push
adc
test
loope
inc
mov
or
addr16
decb
mov
in
adc
adc
xchg
or
stc
aam
add
mov
out
sbb
cs
mov
out
inc
or
ja
jmp
cmp
into
or
outsb
cmc
mov
jo
mov
xor
push
mov
adc
and
out
xchg
xor
inc
xchg
mov
mov
roll
mov
cli
outsl
and
sub
mov
pop
lods
add
adc
ss
addr16
pop
out
xor
cmc
mov
ljmp
cltd
or
mov
cmp
adc
sahf
lcall
lock
sub
xchg
popf
in
inc
addb
stos
mov
and
sbb
es
xchg
cmp
ret
ja
dec
aam
loopne
adcb
pop
lds
xor
test
jecxz
pop
mov
mov
mov
rorl
sub
daa
jb
mov
out
jbe
lock
repz
push
sbb
push
mov
pop
std
in
clc
addr16
lds
test
and
cmp
xor
xchg
dec
mov
cmp
daa
sbb
ficoml
mov
call
test
jb
push
daa
cmp
inc
add
cmpsl
fisubs
lods
xchg
jle
and
dec
jb
cmpsb
cmp
xchg
inc
int3
arpl
sbb
or
cs
sbb
ficomps
lock
lret
call
sahf
pop
adc
fs
cwtl
pop
scas
pop
fsubrs
cmpsb
xor
pushf
dec
sub
and
mov
jmp
int
cmp
fnstcw
loop
push
or
sbb
fsubrp
jns
and
mov
insl
pop
push
aad
rorb
push
std
inc
push
ficoms
and
fisubl
inc
xchg
gs
pop
add
xchg
adc
aas
or
out
out
push
or
imul
mov
test
scas
mulb
cmpsl
jmp
mov
lods
jne
jmp
add
sbb
xor
xchg
pop
ss
mov
pmaxub
pop
push
inc
fdiv
cmp
incb
xlat
popa
xchg
mov
jmp
mov
inc
inc
leave
lock
jmp
popf
fs
mov
pusha
dec
cmpsb
insl
les
out
jge
insb
xor
inc
movsb
sub
cmpsl
repz
dec
daa
fstps
mov
cltd
sub
cmp
mov
mov
push
cltd
mov
xor
shll
jae
pop
arpl
je
in
scas
dec
xor
xchg
pop
mov
and
jb
in
stos
shl
mov
aas
xor
jo
and
mov
xchg
pushf
or
ficompl
cmc
pop
mov
lock
push
imul
cld
out
mov
and
sub
mov
sbb
jnp
cmpl
sti
xchg
push
push
mov
adc
addb
jno
je
sub
add
push
push
stos
cli
or
pop
je
scas
outsl
outsb
mov
cwtl
and
dec
mov
inc
jns
cmpsb
and
jo
mov
in
test
adc
ret
cmpsl
in
jnp
cltd
mov
xlat
dec
mov
leave
inc
add
pop
push
jnp
ficoms
add
inc
out
cmp
pushf
cmp
test
pop
dec
into
arpl
add
add
addl
shll
sub
movsl
sub
call
or
pop
lret
insb
sbb
add
mov
sahf
sbb
in
pop
outsl
add
jmp
xchg
inc
push
sbb
int3
aad
dec
add
fildll
mov
push
adc
or
push
mov
mov
popa
dec
inc
js
xchg
fisubl
and
add
fcmovnbe
push
out
xor
lcall
inc
or
insb
mov
inc
ficompl
jmp
bound
insb
dec
cld
jp
insl
xlat
xorl
mov
idivb
sti
pop
and
scas
dec
jg
das
adc
xchg
dec
xchg
cmp
or
xor
lds
dec
pushf
xor
loop
jns
sub
jb
test
pop
ret
jnp
aaa
sub
jnp
hlt
fisubrl
scas
xchg
push
mov
jl
mov
loop
and
adc
mov
cmp
cwtl
repnz
jle
jge
repnz
pop
inc
lods
xchg
fists
in
cld
popa
or
mov
std
shll
ds
mov
daa
fstps
in
cltd
repz
testl
lea
test
or
add
sub
pop
unpcklps
adc
adc
loop
icebp
aad
ret
sbb
mov
cld
jo
stos
xchg
psubusw
shr
jl
jb
and
lea
push
repz
inc
inc
movl
xorb
movsb
sub
repz
mov
negb
insb
ja
cmpsl
ljmp
and
imul
aad
mov
arpl
adc
inc
pop
popf
int
fistl
out
sbb
push
fwait
add
mov
sti
inc
fidivrl
test
rclb
scas
dec
loope
mov
or
adc
stc
mov
or
mov
xchg
in
fs
lret
xchg
popf
dec
cmp
sbb
xchg
xor
lods
or
or
sbb
sbb
cmpsl
inc
mov
lret
mov
mov
shrl
inc
push
insl
movsl
jge
jmp
push
push
mov
cwtl
cmpsb
mov
mov
scas
mov
rcll
out
stc
xor
movsl
fucomi
mov
pop
xorl
xchg
and
mov
stos
add
adc
loopne
es
subl
inc
imul
sbb
pop
js
lea
mov
addr16
push
loope
mov
mov
or
je
jo
pmulhuw
lret
into
movsl
add
inc
movsb
lock
cmc
hlt
insb
loope
aaa
ds
add
data16
adc
sbb
and
and
lods
or
aam
push
cmp
loopne
rorb
xchg
out
hlt
inc
jno
mov
adc
pop
push
mov
enter
cltd
push
test
ficoml
mov
std
mov
dec
cmpsb
dec
jno
ljmp
ljmp
and
rclb
imul
adc
test
inc
mov
or
in
push
popa
pop
pop
dec
je
and
cmp
push
jl
cmp
mov
std
out
mov
aas
and
jg
dec
outsl
mov
jb
loopne
and
aad
adc
inc
enter
movsl
fsubs
jge
mov
test
mov
divb
testb
adc
adcl
push
stos
cmpsl
pop
adc
adc
sub
neg
or
lcall
mov
push
inc
add
stos
imul
push
push
xorb
inc
cmp
daa
aaa
bnd
sbb
push
jecxz
mov
outsb
xor
pop
jbe
pop
mov
repz
mov
je,pt
out
movsl
shl
xchg
mov
add
add
jmp
mov
xchg
lods
mov
mov
jnp
jecxz
mov
or
adc
push
cmp
mov
xor
push
sbb
sub
mov
mov
cmp
arpl
ljmp
mov
push
aam
mov
jne
push
push
cmp
sbb
std
scas
out
loopne
xor
popf
mov
sub
lret
pop
jns
sbb
int3
jge
dec
jae
inc
jno
sub
cmp
jecxz
sarb
test
mov
nop
xchg
mov
dec
aam
psrlw
mov
adcb
xchg
scas
mov
fwait
cli
or
push
sbb
scas
add
cmp
movaps
or
pop
jno
mov
jbe
and
in
fistl
or
and
dec
mov
out
out
in
mov
fsubl
adc
jge
insl
jmp
mov
dec
dec
imul
repz
and
push
fstpt
das
xor
mov
jns
pop
mov
xor
loopne
sbb
add
push
xlat
mov
mov
mov
sub
lods
mov
std
xchg
pop
test
arpl
push
ss
stos
icebp
sbb
in
std
xchg
dec
fwait
ret
xchg
push
mov
test
xlat
mov
inc
lods
mov
cmpsb
inc
or
pop
inc
mov
aaa
fwait
add
pop
sbb
test
cld
cmp
add
jbe
clc
cwtl
inc
rcrb
fcompl
stos
mov
loopne
xor
push
fdivr
cmp
nop
mov
sti
es
mov
pop
jecxz
lcall
push
fbld
inc
mov
jbe,pn
lret
or
jbe
cmp
jecxz
push
cmp
popf
fsts
stos
sbbl
xor
and
cwtl
fidivl
lds
sarl
cltd
inc
sub
jbe
jbe
mov
dec
pop
ss
add
fucomp
push
cs
xor
cmp
test
les
stc
into
out
pop
jne
ret
or
cmpl
dec
xchg
insb
leave
and
jne
and
cmp
clc
test
hlt
into
ja
mov
mov
mov
dec
push
xchg
push
clc
or
adcl
xchg
jns
ret
jmp
mov
xchg
mov
sub
addr16
or
leave
pop
mov
pop
ror
add
clc
jns
fwait
dec
sbb
cmp
cmpsl
mov
inc
sub
enter
sbb
push
call
add
adc
cmp
mov
in
leave
pop
push
in
js
mov
sar
pop
pop
and
pop
mov
out
sbb
xchg
lods
inc
pop
cmp
scas
dec
dec
test
cmpsb
in
lahf
xchg
push
mov
sub
inc
xchg
dec
and
adc
in
mov
sbb
jecxz
and
mov
lret
and
add
gs
dec
nop
fimull
adc
sbb
imul
jl
scas
push
dec
dec
hlt
les
or
scas
ret
shlb
mov
les
test
daa
std
and
inc
arpl
enter
mov
xor
sub
in
jl
xor
and
xchg
add
sbb
aas
ss
imull
inc
ja
pop
lret
fisttpll
fstl
pop
icebp
jno
jb
jo
sahf
xchg
aas
pop
popf
not
push
ret
dec
popf
insl
popf
popa
push
cmc
les
adc
repnz
into
loop
fs
cwtl
add
and
inc
mov
out
cli
imul
xchg
das
dec
pop
jae
sub
fldt
and
mov
cwtd
jmp
mov
sbb
call
mov
adc
pop
shrl
inc
mov
je
xchg
xchg
and
add
popl
into
repnz
and
mov
das
adc
stc
jno
dec
arpl
rolb
mov
xorl
scas
jle
repnz
insb
add
mov
jp
lods
xor
mov
pop
nop
jae
je
sub
mov
push
mov
push
sahf
mov
in
loope
aam
fimull
fldenv
je
jmp
mov
or
mov
push
dec
push
fistps
ss
jae
dec
sahf
adc
pop
enter
rcrb
xchg
jecxz
mov
scas
cmpsl
rclb
arpl
popa
int3
mov
jbe
dec
and
int
mov
out
data16
jnp
mov
dec
mov
cmp
pop
sub
loope
mov
mov
outsl
pop
loope
dec
fiadds
fisttpl
je
out
inc
xor
call
mov
jp
fwait
loop
xchg
enter
add
out
dec
add
lret
sub
jae
ror
aad
stc
or
xchg
hlt
mov
jmp
pop
mov
out
sti
dec
pusha
stos
inc
cmp
pop
int
lea
xor
shll
sub
jmp
je
push
andb
clc
addr16
mov
dec
or
sub
xchg
dec
xchg
xchg
push
inc
fdivrp
lcall
dec
xchg
dec
out
cmp
shll
sub
adc
and
shlb
out
ja
cli
mov
and
mov
pop
mov
ja
adc
imul
push
pop
call
xlat
lcall
inc
pop
sbb
push
fsubl
cmp
movsb
ljmp
sbb
mov
mov
xor
mov
mov
popa
dec
sbb
test
andb
pop
int
jne
sub
mov
clc
mov
xor
test
mov
arpl
xchg
mov
xor
jo
mov
mov
fnsetpm(287
dec
xor
xchg
icebp
lcall
mov
scas
dec
icebp
je
mov
push
inc
push
lcall
xor
mov
test
jp
out
xchg
mov
xlat
sub
or
pop
pop
cmpsl
push
lret
and
sarb
xchg
adc
cmp
fcompl
jle
call
mov
mov
mov
inc
cltd
sbb
sbb
adc
mov
and
xlat
add
mov
ds
sbb
mov
dec
cmp
sbb
jnp
push
sub
fs
int3
jge
pop
cmpsl
pop
sub
movsb
mov
scas
push
and
std
cmp
ja
mov
movsb
arpl
add
cmc
andl
js
sub
lods
jnp
inc
loopne
fwait
das
pop
mov
push
movsbl
mov
jp
mov
lcall
xchg
adc
sbb
inc
inc
fbld
lahf
jae
and
aaa
dec
out
dec
xor
xor
inc
pop
jg
lahf
movsw
mov
and
jno
or
jne
loop
enter
lret
lret
or
and
adc
mov
and
cmpsb
movsb
mov
xchg
stos
mov
notl
jb
mov
into
and
and
inc
adc
xchg
lcall
sub
mov
out
xchg
mov
and
popa
pusha
jnp
test
das
fcoml
jb
mov
pop
mov
out
sub
adc
mov
je
push
std
sti
lock
cmp
push
push
pop
rcrl
or
outsl
pop
jl
xchg
aas
push
loop
out
test
sbb
push
dec
mov
in
mov
inc
in
inc
xor
or
mov
inc
es
sub
and
inc
into
pop
jge
mov
push
es
insl
pop
dec
cld
push
jp
fcmove
addb
test
cmc
jge
imul
mov
jb
mov
repz
jg
ljmp
icebp
mov
cmp
in
mov
and
aas
xchg
xor
mov
or
xchg
lret
rcrb
sub
movsb
pop
xchg
movsl
popf
jno
push
inc
sbb
sbb
and
outsl
mov
leave
xchg
leave
mov
aas
in
dec
cwtl
fbld
pusha
jge
jb
push
and
xorb
rolb
inc
insl
ja
and
or
les
mov
sub
pop
or
clc
and
into
lods
in
jno
outsb
mov
pop
leave
mov
imull
xchg
pop
jp
aad
jb
mov
lret
sbb
lods
push
sub
cmc
test
mov
ss
xchg
mov
daa
or
lock
sub
stos
ret
jbe
hlt
je
repz
push
js
fbstp
call
mov
mov
cmpsb
cld
sbb
or
mov
stos
dec
ficompl
mov
fwait
mov
xor
pop
gs
cwtl
cwtl
or
cmp
mov
sub
int3
outsb
jge
push
ss
mov
pusha
fcoml
dec
scas
das
and
addr16
in
dec
inc
ja
xor
int3
lds
into
icebp
xchg
nop
daa
mov
sub
test
add
mov
sbb
mov
push
test
dec
push
pop
push
hlt
mov
sti
mov
fwait
mov
loope
movsb
xor
xchg
mov
jecxz
xchg
mov
std
in
mov
loopne
subl
adc
mov
scas
xchg
adc
loope
popf
dec
shrb
in
insb
push
jmp
sub
int
cmp
ja
jnp
push
lds
push
sub
rcl
jge
outsb
sbb
xchg
mov
fstpl
jp
scas
pop
mov
sbb
stos
das
insl
cmp
pop
mov
xchg
cs
dec
cmp
cltd
jle
enter
test
repnz
pop
test
xchg
loopne
push
popf
xchg
mov
nop
mul
dec
arpl
jl
sbb
loop
add
jmp
rclb
imul
sub
ror
and
enter
pop
sbb
movsb
hlt
jnp
sahf
and
jne
xchg
flds
ror
pusha
xor
outsb
insb
repz
in
in
mov
add
add
jg
arpl
pop
mov
add
notl
scas
mov
scas
cmp
jecxz
icebp
xchg
js
daa
xor
push
jnp
pop
cltd
sub
push
mov
or
sub
stos
test
imul
mov
inc
jne
cmp
lret
xchg
cmp
fld
loope
mov
xchg
mov
push
popa
sub
enter
in
add
test
xchg
arpl
test
xor
mov
jbe
and
or
jns
adcl
mov
pop
push
mov
adc
test
leave
icebp
adc
lahf
aad
dec
arpl
pop
cmp
fs
jge
pop
mov
jno
adc
inc
rcll
loopne
pop
mov
add
inc
mov
adc
mov
push
jb
enter
hlt
dec
and
mov
arpl
cmp
inc
dec
sub
or
rcrb
pushf
dec
and
adc
enter
into
daa
nop
gs
shl
xchg
lea
pusha
sbb
movsb
outsl
adc
or
lret
loop
in
pop
or
and
xchg
test
xchg
add
push
enter
adc
or
mov
test
dec
mov
mov
add
shl
cld
dec
mov
dec
call
rorl
popf
fwait
loop
sbb
pop
movsl
loop
test
and
inc
fisubs
test
and
dec
in
push
test
sbb
xchg
cmpsb
cmp
test
js
and
shll
aaa
incb
mov
mov
sti
push
adc
or
rcrb
mov
bound
rorl
in
pop
jbe
jp
sub
mov
das
inc
les
add
mov
cmp
inc
or
mov
lock
rorb
dec
dec
cli
xor
lahf
fmuls
xorb
mov
push
lcall
pushf
jmp
push
cmp
adcb
xchg
aas
repnz
gs
andb
xchg
loop
pop
sub
pop
cmp
xchg
out
test
mov
sbbl
dec
bound
popl
ljmp
nop
cmc
fidivs
or
add
cmp
adc
jae
mull
cli
iret
cmp
sub
call
pushf
int
test
inc
sbbb
cwtl
testl
int
in
repnz
sti
roll
jl
push
jns
ret
shrl
lock
pusha
dec
pusha
cld
adc
ds
or
pushf
fstpt
leave
mov
inc
rcll
data16
ljmp
xchg
fdivrl
push
test
adc
adc
clc
pop
imul
xlat
jnp
repz
sti
gs
lock
push
sti
sub
sbb
cmp
jmp
push
cmpsb
int3
xor
aas
push
cmc
mov
rolb
push
mov
add
cltd
dec
rclb
or
or
je
cmp
cmpsl
in
int3
adc
std
mov
jno
pop
in
mov
pop
cmp
lock
int3
mov
lret
cltd
xchg
jl
or
cmp
adc
mov
sub
pusha
or
out
hlt
xor
sbb
hlt
adc
repz
int3
jbe
cmpsl
imul
mov
sub
rep
cmp
fwait
jmp
jae
pop
and
aaa
std
sbb
push
fdivp
das
mov
je
add
push
pop
cmp
sub
fdivs
loop
in
gs
into
out
lret
pop
cltd
pop
push
mov
cs
fwait
pop
jo
mov
mov
push
or
sbb
push
fnsave
int
test
fwait
loop
xchg
fstpt
mov
pinsrw
dec
ret
stc
repz
sub
or
fmull
xor
out
pop
and
addr16
in
cltd
sbb
test
mov
cmp
xor
xor
test
cli
or
ja
cmp
rorl
inc
js
pushf
in
sahf
adc
cltd
fcompl
mov
int
pusha
fs
and
shr
lahf
scas
out
push
xchg
fs
or
shlb
add
es
xchg
imul
xor
js
lret
stc
fwait
nop
std
movsb
test
sub
mov
jecxz
fistl
xor
mov
jg
jg
fidivrs
repnz
int
mov
mov
daa
repnz
cli
scas
dec
shl
in
sbb
jmp
rcr
out
sbb
in
xor
inc
cmp
jno
jl
cld
or
cmp
mov
push
add
test
arpl
and
das
in
shlb
loopne
jmp
nop
adc
nop
mov
cli
jecxz
int
mov
popf
cmp
jno
imul
arpl
pop
clc
sarl
pop
dec
mov
leave
push
adc
sub
gs
into
sahf
dec
push
sarb
cmp
push
push
daa
cmp
or
sub
cltd
movsl
dec
push
mov
dec
daa
lock
outsb
mulb
popa
testb
cs
ficoml
jl
fs
jmp
push
scas
ds
hlt
pop
mov
sub
jecxz
les
jnp
pusha
mov
aas
xchg
fisubs
cmp
xor
out
sahf
mov
mov
in
daa
ret
dec
scas
adc
sub
lret
loopne
lods
jge
stc
in
dec
fldl
sbb
cmc
xorl
jge
mov
cwtl
add
mov
pop
sbb
fadd
or
sti
cmp
int
ja
das
lods
cs
jnp
in
sub
pop
or
cmp
clc
bnd
xor
stc
in
jge
xor
or
daa
fisubs
mov
cmp
xor
or
push
ja
popa
pop
sar
inc
or
sti
out
fadd
jg
insl
sub
push
pop
in
mov
ss
add
jb
and
test
popf
inc
add
cmpb
dec
shlb
push
hlt
outsl
pop
sbb
test
adc
xchg
mov
mov
adc
jne
mov
pop
push
lods
jp
sbb
and
sub
push
xchg
hlt
mov
adc
push
mov
mov
loop
xchg
addl
inc
mov
lret
mov
mov
jns
xchg
insl
in
xor
mov
sbb
fadd
fdivp
loop
jns
fdivrl
add
push
cli
dec
xor
lea
push
jmp
scas
cmp
or
pop
pop
ds
push
std
bound
and
cmp
gs
popf
sub
loop
addr16
jne
movsl
dec
and
in
dec
pushf
insb
add
mov
das
aaa
lcall
dec
leave
imul
mov
xor
out
int
cs
sbb
mov
cltd
xor
cld
sub
das
mov
inc
jae
add
loopne
je
lods
inc
dec
fadds
mov
cmp
clc
hlt
jnp
shll
lods
pop
outsl
jge
int
pop
inc
ds
sub
pop
mov
adc
lods
jns
imul
add
push
loope
xchg
aam
mov
pop
inc
and
sti
mov
pop
pushf
outsb
shll
loope
pop
stc
dec
insl
mov
and
arpl
rcrl
sbb
or
jge
dec
push
test
mov
xchg
hlt
ror
iret
mov
xor
scas
xor
pop
push
std
lahf
out
and
insl
loope
sti
repnz
xor
aad
dec
xor
loope
inc
xchg
decb
bound
add
pop
xchg
lahf
lcall
mov
mov
push
fisubs
mov
sbb
xlat
push
loope
mov
or
ret
add
psllw
pop
jns
xchg
fwait
jg
shlb
jmp
xchg
js
xchg
je
mov
add
lods
sbb
stos
pop
xorb
push
mov
pop
je
ret
mov
or
fnstcw
mov
jge
adcb
jecxz
jge
scas
rcrb
push
shl
bound
jge
jge
and
lret
add
out
push
rcll
or
aaa
mulb
inc
pop
daa
leave
stos
add
jge
mov
daa
mov
jnp
lea
hlt
sbb
lret
adc
xchg
nop
push
repz
cmp
inc
push
call
mov
pop
mov
xchg
dec
pop
jmp
lahf
jb
mov
jbe
jb
add
dec
mov
pop
mov
insb
push
lret
mov
loop
pusha
and
push
icebp
test
mov
sub
pop
ljmp
xchg
jae
cmp
fadds
movsl
sub
push
push
and
lahf
mov
stos
bound
jns
stos
pushf
sbb
and
xor
add
orl
imul
jp
icebp
inc
push
stc
cmp
mov
leave
mov
pop
imul
xchg
shrb
enter
mov
subps
je
lcall
pop
jge
in
and
xchg
jne
mov
xchg
and
in
inc
stc
mov
xor
mov
jns
ds
adc
sub
bound
or
lods
stos
xor
mov
enter
mov
pop
inc
lods
mov
push
int3
loope
cmp
mov
ss
mov
add
mov
and
lahf
jmp
lahf
fcmovnbe
scas
push
sti
cmp
filds
sub
ds
jne
and
sbb
loopne
xor
adc
icebp
jae
lcall
pop
stos
inc
fadds
jnp
stos
mov
mov
mov
lods
mov
jnp
fdiv
ds
or
inc
and
scas
cmc
in
nop
test
loopne
mov
cltd
inc
fidivrl
sub
fcompl
rolb
adc
or
ja
aaa
jne
pushf
maxps
push
out
add
bnd
fldcw
cmp
add
ds
test
add
ret
sbb
js
repnz
lret
add
lock
mov
ret
or
test
dec
inc
mov
addr16
dec
dec
clc
std
repz
mov
xchg
push
out
push
popa
pop
xor
cmp
dec
lea
dec
sti
pop
decl
pop
cmp
xor
fildl
or
sub
sub
jbe
fstpl
cmp
cmp
xchg
lret
cld
jns
xchg
or
xlat
rorb
add
sub
leave
xor
call
out
jmp
nop
push
cmp
add
outsb
xor
sub
inc
jge
mov
mov
and
add
js
lret
in
ret
cmp
std
rcrl
dec
pop
push
mov
inc
add
ret
fs
dec
add
inc
adc
jp
icebp
gs
not
arpl
mov
xor
push
dec
dec
cmp
add
push
xlat
xchg
outsl
in
mov
xor
pop
leave
int3
pop
mov
movsb
outsb
das
data16
bswap
pop
add
jnp
popl
test
fsubrp
push
ljmp
pop
adc
stos
jp
shlb
fs
daa
jnp
cli
ja
inc
test
pop
out
mov
aam
xchg
jecxz
in
xchg
and
jle
outsb
fsubrp
cwtl
adc
aam
addb
and
ret
lcall
xor
inc
scas
movsl
mov
xchg
imul
and
into
clc
pop
aas
or
adc
push
lods
les
inc
xchg
pop
mov
scas
and
mov
imul
pop
das
mov
xchg
jle
mov
jns
fwait
fs
mov
popf
sbb
arpl
insl
sbb
xchg
ja
outsl
add
pop
mov
cmc
inc
test
push
lock
fisubl
cmp
frstor
add
or
idivb
inc
lock
push
sarb
outsb
inc
xchg
xchg
jmp
xor
je
rcll
mov
pushf
test
adc
cmp
lods
mov
mov
xor
repz
dec
fcmovne
loope
shll
loope
or
shl
and
pop
mov
push
es
and
add
push
sti
sbb
movsl
sbb
mov
lock
dec
dec
jmp
in
inc
sub
out
add
dec
cmp
fildl
sti
inc
add
jnp
inc
jg
daa
and
insb
push
pop
xchg
insb
mov
hlt
ss
adc
js
xor
push
mov
add
mov
mov
cmpsb
rclb
and
add
dec
dec
call
mov
pop
mov
daa
shll
int
mov
fisubrl
jmp
or
jb
sbb
mov
add
cli
sub
inc
out
in
cmp
push
lret
int
mov
or
sbb
jmp
xchg
push
shrl
adc
les
push
xchg
ljmp
test
lret
pop
cs
out
sbb
cli
push
movsl
adcb
dec
xor
sbb
in
popa
mov
push
imul
inc
pushf
jno
popf
xlat
pop
inc
pop
dec
out
stc
mov
sbb
and
xor
mov
push
mov
cli
lds
les
adc
lock
mov
in
dec
mov
jmp
jo
sbb
bound
jae
jnp
aam
shlb
pushf
aam
aad
icebp
mov
imul
popf
or
enter
cwtl
cltd
outsl
adc
mov
push
add
outsl
xchg
jns
movsl
add
ret
je
jne
loop
sub
mov
pusha
in
xchg
pop
push
stc
lea
arpl
fdivr
inc
test
cmp
fwait
jo
sbb
insb
ret
ret
push
lods
inc
movsl
fwait
inc
mov
sub
loop
or
pop
xor
adc
jnp
aas
dec
cmp
inc
xor
repz
add
cwtl
jbe
test
push
jne
fisttpl
sbb
cmpl
sub
pop
testb
cs
in
inc
stc
notl
clc
andps
push
fidivrs
mov
imul
in
xor
xchg
sbb
divl
adc
and
fadds
pop
jp
inc
cmp
and
and
out
mov
and
mov
fists
testb
pop
or
mov
sbb
les
test
add
xchg
adc
jo
and
fidivl
arpl
ficoms
cmpl
iret
ljmp
mov
jb
stos
xchg
es
outsl
xadd
xchg
xor
or
sti
cs
imul
shrb
test
notl
sbb
pop
adc
dec
les
xchg
std
jns
mov
mov
sub
mov
jmp
mov
js
jae
lea
js
cmp
ficoml
mov
jne
jbe
ja
test
pop
lock
inc
stos
gs
fisubl
pop
cmp
mov
fcmovnbe
jns
bound
add
jno
mov
sub
push
lea
mov
ljmp
push
sub
lods
adc
icebp
or
sub
xor
and
imul
int3
pusha
push
insl
iret
xchg
sub
or
pop
sbb
fsubrl
cltd
sub
push
adc
movsl
add
sbb
and
lods
mov
mov
fnsave
mov
xchg
xor
and
sti
jmp
les
ret
notb
push
cwtl
add
test
lds
inc
or
push
xchg
gs
int
push
cmpsb
and
sub
int
sub
or
aad
mov
mov
and
xor
jmp
pop
inc
pusha
mov
mov
xchg
leave
mov
arpl
sahf
add
and
enter
out
mov
jnp
pop
inc
jmp
inc
mov
icebp
push
xchg
mov
ja
loope
lret
pop
push
lods
inc
cmpsl
je
movsl
dec
jae
clc
enter
fwait
inc
dec
adc
pushf
icebp
faddl
pop
pushf
sbb
fsubrs
and
ret
cmc
adc
dec
adc
repnz
sti
push
xor
push
mov
mov
add
inc
mov
loopne
mov
rorb
dec
divb
pushf
inc
mov
pop
pushf
scas
mov
test
mov
lret
mov
jno
xchg
rcrl
mov
pushf
add
and
cmpsl
call
popa
lret
rolw
sahf
push
mov
filds
sub
jno
and
mov
sbb
xlat
push
fmul
cmpsb
nop
fsubs
mov
xchg
inc
movsl
inc
daa
dec
push
pop
xlat
cmp
inc
lret
jmp
ret
out
cmp
insl
xchg
cmp
and
cwtl
ret
add
daa
xlat
push
jae
ret
loop
mov
scas
jno
mov
pop
jne
xchg
jl
in
xor
sbb
lahf
loopne
movsl
xorl
add
stos
push
filds
pop
pop
push
mov
prefetch
xchg
jb
aaa
cwtl
cmp
ss
and
movsb
movsb
cmp
stos
xchg
lods
outsb
jne
mov
jl
arpl
stc
push
lret
adc
lahf
es
xlat
mov
mov
ljmp
iret
lahf
push
fsubs
dec
shrl
lret
mov
xor
and
xchg
das
push
cmp
pop
sti
mov
xchg
andl
xlat
out
or
test
jbe
inc
scas
cmp
orl
out
add
push
mov
dec
movsb
outsb
lret
inc
nop
outsb
add
dec
inc
pop
mov
test
xchg
add
xchg
push
out
sub
insl
imul
bsf
xchg
jnp
stos
daa
ja
dec
insb
adc
or
mov
jno
aam
je
cmp
xor
daa
gs
jns
xchg
ja
adc
pushf
outsb
jnp
add
jg
xchg
push
mov
pop
mov
inc
inc
lahf
sbb
cs
push
insb
mov
push
cmp
inc
and
dec
mov
add
cmp
push
out
scas
pusha
jge
mov
pusha
mov
sub
fistpl
sub
addr16
mov
mov
imul
cwtl
fnstcw
mov
loopne
out
push
mov
xor
insl
add
movsb
or
cmp
lds
lods
cmpsl
push
fwait
js
popf
sub
shrl
add
enter
popa
ljmp
pop
dec
and
mov
test
fsubs
pop
or
mov
fcmovb
clc
pop
mov
out
mov
loopne
adc
into
test
add
and
ffreep
sbb
jbe
inc
jl
out
subl
jg
orb
or
sbb
roll
mov
or
sbb
lea
fdivp
movsb
ror
mov
adcl
fldt
dec
loope
mov
dec
sub
pop
inc
cld
stc
sahf
mov
loop
rorl
mov
popf
js
movl
and
pop
xchg
adc
fmuls
push
mov
jp
pop
jnp
jp
cmp
lcall
in
inc
in
outsb
test
lcall
inc
rol
add
push
jbe
andl
adc
or
sub
in
mov
cmp
jl
push
lahf
mov
adc
cmp
insb
cmp
pushf
sahf
mov
mov
outsb
pop
jns
mov
test
xor
outsl
and
push
rorl
pop
stc
mov
arpl
cld
inc
test
out
add
jnp
pop
in
sbb
nop
cmc
or
daa
out
imulb
lret
lret
scas
test
out
sub
push
sub
pop
xchg
call
arpl
pop
popa
xor
xor
aaa
inc
loop
rclb
pop
cmp
mov
xor
mov
cmc
jns
mov
sub
sbb
add
mov
cmpsb
push
jno
out
sub
adc
jg
dec
xchg
fidivrs
adc
mov
lea
lock
mov
test
hlt
cmp
testb
xchg
mov
xor
add
rcrl
testb
mov
adc
pop
pop
daa
cmp
jl
mov
pop
popf
push
imul
and
cmp
adc
jbe
fdivr
imul
mov
into
add
sub
adc
jmp
pop
shrl
ds
sub
mov
test
scas
call
pop
ror
into
stc
cltd
mov
dec
push
stos
mov
mov
sub
jge
movsb
dec
repnz
arpl
mov
sbb
dec
ja
adc
jl
enter
dec
or
dec
mov
movsl
ret
dec
sbb
mov
cli
xchg
or
lea
stc
je
mov
std
leave
sub
lods
jmp
mov
xor
push
cmpsb
mov
inc
inc
in
fcmovnb
dec
mov
addr16
test
out
and
adc
inc
push
push
fwait
jmp
sbb
out
mov
push
push
rolb
aam
shrl
jmp
in
clc
push
pop
or
lods
mov
lcall
ja
adc
pop
pusha
test
test
or
sbb
mov
aam
ljmp
sbb
jns
lods
cwtl
cmp
mov
push
cmpsl
je
insb
arpl
inc
pop
push
xor
lahf
out
adc
fdivrl
fwait
adc
test
lock
out
xchg
and
xor
js
out
and
int
subl
sbb
inc
mov
popf
icebp
fstpl
pop
repnz
jae
dec
pop
aad
or
lret
mov
lcall
repnz
sub
ss
ret
dec
push
pop
or
mov
inc
ljmp
xor
mov
movsb
dec
test
or
loope
and
dec
mov
stc
arpl
dec
pop
jg
lea
push
ret
out
xor
xchg
jae
je
std
icebp
mov
push
pop
in
push
jl
mov
pushf
dec
popa
repnz
inc
test
cmp
out
xor
fs
popf
mov
arpl
icebp
dec
push
mov
push
icebp
int
mov
int3
in
iret
cmp
or
fsubs
aas
hlt
pop
rcr
cltd
add
sahf
pop
pop
or
lahf
fidivl
outsl
loop
and
lea
shll
shl
mov
or
scas
xor
adc
les
jae
dec
mov
je
jb
test
push
mov
sbb
pop
lret
in
sbb
out
cld
movsl
pop
loopne
insb
sub
call
cmp
dec
sbbb
or
cmp
adc
cmpsb
mov
ja
mov
push
pop
sub
insb
int3
mov
mov
and
sub
imul
arpl
call
jl
and
out
ds
xlat
adc
sti
fildl
pop
sbb
stos
faddl
loop
clc
imul
rclb
outsb
mov
xorl
jg
das
mov
add
xchg
ljmp
cli
gs
inc
pop
cmp
mov
outsb
pop
push
lods
repnz
xor
cmp
movsl
sub
xchg
mov
outsl
addr16
fstl
xchg
shll
or
rcr
insb
movsl
jecxz
cmp
xor
and
add
aad
or
mov
dec
or
rcll
pop
rcrb
and
imul
pop
enter
je
leave
iret
lcall
rcrl
icebp
sbb
dec
loop
lds
mov
sub
lret
fmull
add
sbb
add
xor
pushw
cmpsl
or
mov
inc
mull
sub
lods
test
cmpsl
jg
xchg
out
imul
andl
sbb
icebp
lods
test
inc
xchg
lock
cmpsl
sarl
mov
mov
push
jp
outsb
and
fistpll
inc
add
add
pop
out
xorl
push
pop
test
cmp
arpl
mov
pop
movsb
mov
rcr
push
or
cmp
pop
leave
insb
hlt
or
mov
xchg
sub
jge
sbb
jne
add
mov
mov
adc
mov
ja
icebp
orl
push
inc
fistpll
out
call
inc
shrb
je
or
mov
insb
data16
nop
popa
inc
mov
jb
in
fisttpl
adc
push
cmp
dec
mov
cld
jmp
lea
mul
xchg
dec
adc
pop
sbb
pop
jno
mov
sbb
inc
push
cmp
adc
insb
in
jmp
movsb
orl
xchg
movsl
push
xchg
cwtl
pop
jmp
push
mov
shl
std
in
scas
sub
testb
std
scas
or
lahf
lea
add
pop
ret
adc
sbb
insb
jb
clc
dec
or
push
pop
mov
fisubrs
inc
xor
xchg
mov
push
jge
mov
cmc
inc
gs
cmpl
mov
scas
rcr
inc
scas
push
mov
mov
push
aaa
add
add
push
dec
pop
loope
xlat
in
xor
out
push
repnz
sub
movsb
sub
fdivrl
mov
dec
and
mov
sub
sub
mov
mov
sbb
idivl
and
cltd
xor
mov
adc
out
jbe
std
rorl
arpl
movsl
arpl
push
fbstp
bswap
sbb
mov
adc
ljmp
sahf
in
aam
incl
jl
mov
cmp
out
jmp
xor
mov
xchg
int
cmp
jno
xor
sub
rol
sbb
mov
out
cmp
cs
pop
sahf
cld
xchg
in
stos
shrb
inc
addr16
movsb
or
cmpsb
jae
sahf
add
aas
jno,pn
sbb
mov
outsb
cmpsb
push
inc
inc
pop
lret
push
in
add
inc
movsl
ljmp
loopne
mov
sbb
shrl
daa
mov
fists
arpl
jmp
sub
aas
leave
sub
sbb
dec
stc
mov
jecxz
pop
or
int
add
push
sahf
sub
mov
push
pop
jnp
push
stos
mov
aaa
dec
mul
or
pop
cmpsb
add
or
cmp
ret
insb
lods
rorl
cwtl
or
pop
mov
mov
sarb
lahf
or
xchg
xor
pop
inc
inc
jo
push
cltd
imul
sarl
insl
and
jl
or
test
adc
popa
scas
sub
cmc
xchg
sbb
lcall
fimuls
lret
and
fs
out
stc
mov
jmp
in
clc
adc
lods
int
cli
repnz
mov
ss
movsl
popa
addl
adc
bound
mov
dec
adc
xchg
fldenv
cmp
adc
dec
adcl
dec
aaa
push
cwtl
sub
mov
adc
inc
xor
test
call
and
inc
aaa
in
or
gs
ds
dec
push
leave
ficomps
loop
add
pop
sbb
popa
mov
push
inc
sbb
gs
pop
mov
mov
sbb
jl
mov
ret
xor
ss
jg
lcall
bound
movsl
mov
mov
sub
adc
and
pop
jo
adc
adc
xchg
inc
add
out
push
stc
fisttpll
xor
aad
dec
mov
mov
xchg
mov
mov
mov
lcall
sahf
adc
loopne
jmp
jmp
ffreep
adc
inc
cmpsl
sub
xorb
lock
jg
jne
test
push
movsl
andl
sti
cmp
popf
addr16
test
cmp
xor
xchg
fucomp
in
mov
xor
jmp
je
xor
js
xor
push
push
pop
sbbb
jecxz
xor
insb
rcll
mov
inc
or
xor
lcall
iret
adc
aaa
and
pop
jl
sbb
sbb
lahf
dec
leave
jl
jl
outsb
jle
test
dec
icebp
test
adc
push
roll
sbb
sub
mov
fisubl
pop
popa
cwtl
mov
clc
in
int
mov
jne
xor
cmpsb
mov
inc
mov
jg
stc
or
fldenv
pop
xor
inc
imul
je
shlb
fnstcw
and
push
dec
hlt
arpl
and
les
call
push
cltd
xchg
pop
pop
mov
scas
pop
mov
add
cmp
test
cmc
aam
call
add
fldenv
mov
inc
and
xor
dec
dec
ret
push
pop
push
std
psrld
cmp
jne
shl
pop
xor
out
sub
mov
add
sub
push
popa
inc
cld
jb
sahf
pusha
js
aaa
dec
xor
xchg
popf
xchg
out
adc
leave
push
xchg
xor
dec
movd
lods
insl
jno
loop
enter
mov
jl
movsb
xchg
push
and
cmp
fiadds
out
cmp
sbb
mov
fidivrl
jmp
inc
and
mov
lods
cs
out
sub
cmpsl
add
ficoml
shl
pop
inc
roll
mov
pushf
mov
out
mov
hlt
or
xor
ljmp
lret
adc
mov
adc
cmc
add
pop
lahf
push
fs
push
add
inc
das
ljmp
mov
js
xor
rclb
inc
ret
sub
pop
mov
test
inc
jge
add
push
push
mov
and
arpl
fbstp
xchg
cmpsl
pop
and
stc
in
fists
inc
jbe
xor
pop
mov
fnstenv
push
clc
mov
mov
sbb
adc
mov
pusha
mov
pop
shlb
xchg
out
push
inc
test
inc
lods
addl
ds
rclb
lods
and
inc
mov
dec
sbb
mov
push
xchg
std
push
xchg
push
push
xor
rolb
pop
xchg
jl
inc
pop
adcb
imul
add
push
cs
push
xchg
xor
addr16
fdivl
fimuls
sub
xchg
test
sbb
dec
pop
push
lcall
jecxz
ss
inc
fs
rol
and
into
xor
outsl
xchg
and
add
dec
jno
pop
pop
push
repnz
adc
mov
cltd
fsub
mov
xchg
mov
mov
aam
sub
sahf
mov
or
lds
or
inc
dec
or
adc
insb
xor
sub
dec
push
cmpsb
push
imul
fs
lods
jl
notb
popa
adc
mov
sub
pusha
push
stos
inc
xor
add
cmp
xor
push
sub
xchg
test
pop
int
xchg
jmp
outsb
or
aas
cmpsb
nop
leave
arpl
mov
in
push
repnz
pop
adc
out
aaa
mov
add
in
add
iret
imul
decl
push
int
adc
inc
daa
and
addr16
jge
mov
inc
cld
inc
fistpl
call
dec
mov
jb
dec
cmp
setae
adc
test
jne
adc
and
push
xchg
out
ds
lcall
inc
nop
in
aas
enter
pop
pop
and
dec
dec
xlat
lea
xchg
jp
fadds
nop
into
shl
jbe
mov
in
aad
dec
aam
cltd
insb
xchg
lods
int3
mov
loope
jns
inc
shr
xchg
xchg
fidivrs
mov
sbb
mov
xlat
rorb
sub
arpl
cmp
test
inc
scas
jle
je
aam
lahf
test
mov
mov
inc
testb
sub
push
addb
jo
jbe
in
dec
pop
or
call
int
ds
cli
lcall
lods
xchg
inc
aam
pop
lods
lods
std
inc
pop
xchg
dec
mov
sbbl
cmp
push
push
mov
bnd
xlat
or
pop
lock
out
and
cmp
sub
dec
cmpb
xlat
sub
sahf
sbb
xor
cld
xor
jbe
int3
out
jge
jb
mov
in
aam
out
xor
xor
not
adc
adc
test
xchg
push
inc
hlt
pop
cmpsl
fistl
jle
inc
aam
js
inc
push
inc
push
add
mov
mov
lods
fisubrs
sbb
dec
popa
add
into
lods
jl
pusha
out
bound
cmpsl
or
call
push
lods
mov
add
addb
lcall
sub
inc
in
push
imul
jno
sti
fdivp
gs
mov
inc
xlat
sub
push
shl
push
mov
ljmp
jp
or
mov
pop
or
or
push
push
xchg
mov
sbb
xor
dec
mov
shr
mov
pop
push
push
sbb
pop
mov
push
add
lcall
adc
pop
fdivrp
cmpsb
xchg
cmp
clc
pop
jp
mov
jge
jg
insb
pop
addb
jno
push
out
cmp
push
sbbl
data16
outsb
jecxz
vprotb
testl
test
stc
lret
stc
or
xor
sbb
out
pop
pmaddwd
out
dec
push
mov
xor
xlat
push
les
mov
mov
call
dec
imul
mov
mov
or
negb
pushf
jg
mov
push
imul
iret
and
pop
mov
dec
ret
scas
pop
iret
lds
inc
fdiv
sbb
dec
out
gs
insl
daa
sub
sbb
dec
test
out
test
lea
in
scas
mov
aaa
shll
ds
push
inc
cs
inc
in
xchg
xchg
call
cmp
add
sub
popf
jb
hlt
outsb
icebp
inc
mov
out
push
mov
and
mov
daa
xchg
lret
add
loop
push
and
loop
adc
sub
and
mov
mov
sub
adc
xchg
adc
outsl
mov
fdivrl
xchg
hlt
dec
jmp
es
into
sub
mov
jmp
xchg
mov
cmp
xorb
fadd
sub
jb
js
jmp
mov
dec
and
jge
or
daa
push
out
cld
pop
mov
inc
jp
mov
mov
aas
enter
data16
ficoms
cmc
loope
pushf
outsb
sbb
adc
loop
adc
popf
mov
xor
enter
das
jle,pt
jno
mov
shlb
or
jb
aam
jno
in
inc
insb
cmc
push
mov
dec
dec
pop
jecxz
and
push
jbe
sub
mov
jg
jno
decl
push
adc
icebp
sarb
inc
push
stos
outsb
mov
inc
cmp
cltd
push
add
es
push
addb
push
ds
cltd
cmp
mov
and
rcrl
pop
js
adc
mov
test
cli
sti
subb
fwait
xchg
or
inc
test
pop
movsl
sub
mov
out
cmp
or
lock
lret
loopne
mov
dec
sahf
cmpsl
mov
jno
fisubs
mov
hlt
pop
xor
jg
xchg
or
xor
addb
push
lahf
clc
pop
push
nop
fstpl
loopne
xchg
sub
and
jle
roll
les
sub
hlt
clc
mov
adc
and
movsl
adc
push
rolb
push
xchg
gs
jp
loopne
enter
shll
insb
mov
cwtl
out
jno
bnd
sahf
pop
in
sar
dec
lock
aaa
jae
ja
cmc
inc
imul
inc
mov
nop
lret
push
push
adc
test
and
xchg
sbb
mov
xchg
mov
push
scas
sub
mov
outsb
dec
in
mov
jae
icebp
incb
icebp
add
dec
aad
sbb
sub
in
jno
pusha
int3
add
mov
push
dec
jae
inc
or
rcl
fistps
ss
jg
fs
ret
sbb
clc
inc
ljmp
pop
mull
or
clc
test
xor
adc
mov
in
in
push
pop
cld
scas
jmp
cltd
or
stc
xchg
aas
sub
add
mov
or
mov
mov
and
dec
mov
sub
ljmp
mov
iret
dec
shll
insl
std
cmp
addb
mov
gs
jle
push
pop
sub
cmp
lods
sbbl
and
push
sub
xchg
iret
leave
cmpsl
cld
jo
ds
mov
test
popf
adcl
inc
out
je
incb
xor
out
js
repz
inc
cs
pop
imul
mov
add
cltd
inc
xor
sub
faddl
outsl
xor
mov
inc
aam
and
mov
mov
ja
into
and
loopne
xor
into
push
insb
xchg
lods
int
xchg
mov
imul
mov
jno
and
pop
loop,pt
pop
sbb
inc
push
lea
fnstsw
pop
jnp
or
repnz
scas
dec
arpl
sub
cmp
stc
je
lods
pop
mov
hlt
iret
mov
pusha
inc
lret
fwait
mov
cld
mov
pusha
test
nop
xor
inc
inc
repz
dec
or
or
out
inc
into
ficompl
push
push
adc
xchg
fs
inc
lahf
fnstcw
mov
cmp
xchg
popa
mov
pop
cmp
test
inc
xor
arpl
and
jae
lods
cwtl
jmp
jl
flds
roll
filds
jne
and
addl
mov
inc
mov
ret
leave
mov
sub
jnp
pop
adc
adc
xlat
icebp
adc
and
or
in
scas
xchg
outsl
and
fistpll
mov
and
jns
jbe
lret
daa
imul
dec
pop
ss
or
stos
popa
xchg
fsubrl
std
repz
and
cmp
and
daa
inc
ljmp
adc
sub
roll
inc
iret
je
mov
shll
xchg
jno
mov
adc
mov
fmul
popa
push
mov
dec
pop
rclb
cld
scas
adc
js
inc
and
out
mov
std
inc
scas
and
iret
mov
xchg
sub
arpl
push
inc
arpl
mov
dec
adc
dec
mov
cmc
cli
mov
int3
int3
dec
push
leave
mov
inc
mov
inc
lods
jne
test
incl
jbe
pop
xor
mov
and
mov
cld
pushf
pushf
aad
sub
mov
push
mov
test
loop
into
lds
fstps
ja
push
aas
xor
repnz
ja
mov
dec
xor
inc
cmpsl
nop
mov
and
xor
jae
mov
ds
mov
js
xor
or
std
int
add
mov
lods
mov
or
dec
mov
in
lcall
fdiv
test
push
leave
loop
jecxz
xchg
add
loope
pop
jmp
dec
sahf
aad
adc
shlb
outsb
xchg
lock
mov
or
les
or
and
inc
out
jle
jbe
inc
fldcw
cs
jnp
sub
stos
dec
ljmp
sub
sub
adc
cmpsl
outsb
es
cmc
pop
jb
lcall
popf
push
adc
iret
arpl
jecxz
mov
or
push
or
mov
fnstcw
jmp
push
adc
fmuls
cmp
or
pop
dec
and
pusha
sub
cmp
bound
test
out
out
push
je
fcomip
ja
jbe
nop
push
adc
mov
loopne
mov
adc
adc
xchg
xor
mov
mov
fiadds
fstpl
aas
jmp
decb
movsl
xchg
cli
aas
jnp
and
ja
cmpsl
adc
sub
enter
add
jecxz
mov
xchg
add
ret
repnz
xchg
in
pop
mov
rcll
ljmp
hlt
pusha
aaa
or
imul
inc
xchg
xor
testl
pop
sbb
loopne
push
xchg
xor
mov
stc
fisubrl
in
shlb
dec
scas
jo
inc
mov
frstor
cwtl
arpl
repz
fwait
inc
xor
jl
pop
xor
cmpl
sub
iret
and
inc
mov
popa
xor
das
clc
ret
filds
repnz
fcoml
mov
std
inc
inc
mov
lods
rcrb
mov
je
pop
ja
mov
xor
xor
mov
repz
test
jmp
in
ds
popf
repnz
add
pop
and
cltd
add
jne
scas
mov
adc
xlat
mov
adc
into
sub
or
jl
mov
mov
cmpsl
mov
out
xchg
cli
pusha
es
pop
push
push
and
xor
ret
push
and
adc
dec
ret
or
sbb
mov
pop
imul
mov
sub
push
or
mov
cmpsl
mov
js
cmp
jecxz
mov
dec
pop
sbb
mov
mov
jae
dec
or
push
mov
mov
and
faddp
cmpsl
and
into
lcall
lret
jb
jmp
out
adc
js
das
push
mov
pop
lea
jp
clc
mov
adc
mov
sbb
xchg
push
sti
ret
hlt
in
aad
push
imul
ss
bound
inc
mulb
push
popa
cmp
pop
jmp
dec
sub
cmpsb
push
fs
loop
mov
cwtl
mov
dec
into
in
and
into
cmc
inc
adc
cmp
arpl
inc
out
push
ja
push
jecxz
ret
mov
and
jo
sub
pop
fwait
mov
and
lods
std
inc
xchg
sub
movsl
xchg
ficoml
add
adcb
pop
cmpsl
std
cmpsb
dec
xor
movsb
sbb
fidivrs
lcall
inc
dec
leave
push
dec
out
hlt
pushf
ja
test
mov
int
out
dec
dec
inc
xor
inc
xor
mov
mov
or
adc
pop
adc
adc
icebp
and
data16
cltd
inc
imul
cli
arpl
xor
lret
mov
cltd
stos
out
sbb
xor
lods
int
movsl
cmp
sub
rorb
rorb
sbb
popf
push
test
jo
addr16
sbb
hlt
push
rorl
dec
ss
push
dec
lods
cli
cmp
jns
mov
cmp
mov
dec
lock
jp
loop
sub
fsub
out
lret
out
jl
jb
pusha
call
xchg
stos
cs
loop
sbb
scas
and
ficoml
sub
adc
and
adc
popa
xchg
push
jo
inc
add
nop
testb
add
and
jo
push
mov
and
push
popa
and
pop
xlat
daa
adc
inc
mov
and
push
mov
insl
roll
stos
xor
scas
cld
sub
stos
je
arpl
add
fs
movsb
orb
cltd
in
xor
in
cltd
mov
jne
clc
or
lods
shl
xor
inc
negb
jns
lahf
mov
mov
xor
pop
ss
pop
mov
mov
arpl
sub
fdivrl
mov
push
out
mov
cld
js
loopne
add
lea
cmp
mov
aas
mov
mov
mov
stos
push
and
lret
mov
aam
iret
sbb
mov
movsl
test
inc
insb
jl
loopne
mov
insl
shrl
xor
xorl
inc
fs
push
leave
out
add
pop
rorb
dec
nop
rorb
push
and
xor
xchg
mov
cwtl
add
int3
fdivrl
jg
jmp
mov
add
fwait
lahf
test
outsb
xchg
int3
pop
cmp
pop
mov
shl
arpl
adcl
and
into
cld
mov
mov
inc
or
and
xchg
mov
movsb
not
test
push
les
lock
pusha
mov
dec
loope
cltd
and
jb
mov
data16
dec
sbb
fisubrl
xchg
imul
add
cmp
cmpl
lods
or
jns
scas
unpcklps
rcpps
sarl
scas
dec
adc
icebp
push
fxam
xor
stc
bound
das
sub
mov
out
xor
inc
call
pop
pop
push
push
data16
fsubrs
xorl
sbb
or
mov
push
enter
lds
adc
pop
or
clc
dec
les
stos
xchg
or
cmp
and
or
adcb
sti
sti
mov
push
daa
mov
outsw
mov
pop
cmp
stos
imul
mov
lods
ja
push
cmp
cmp
std
dec
or
imul
pop
add
inc
sbb
mov
push
out
mov
cmpsb
inc
jo
push
push
sbb
dec
mov
push
arpl
paddusb
jg
iret
jne
int
pop
or
sub
add
cmp
orb
repz
or
sbb
fwait
sar
mov
imul
sbb
outsb
dec
cmp
dec
clc
push
jl
and
jbe
add
inc
push
mov
cmc
mov
out
cltd
and
psrlq
cld
ja
test
jecxz
subl
nop
and
jecxz
inc
fidivs
hlt
add
int3
dec
imulb
inc
fwait
or
lret
ss
andb
lret
std
sbb
dec
dec
pop
dec
cmp
mov
leave
jl
pop
push
sbb
fwait
popa
repnz
mov
pop
adc
add
inc
pushl
les
add
push
and
xchg
cmpsb
add
fmuls
daa
aad
adc
inc
xor
xchg
movsl
adc
mov
test
sbbb
sbb
ds
push
dec
loopne
imul
aas
xor
dec
into
cmc
stos
leave
push
mov
mov
add
pop
div
sti
nop
push
lcall
mov
rorb
lock
aas
outsb
mov
insb
enter
insl
test
mov
dec
sub
imul
jl
ret
clc
mov
jbe
xchg
icebp
and
ja
pop
pop
andb
int
mov
fucom
add
jnp
pop
cmc
rcll
xlat
es
xchg
add
cmpl
outsb
pop
push
mov
push
push
out
mov
aad
push
ret
add
and
sahf
psrlw
out
jb
and
adc
outsl
or
sub
push
inc
push
stc
sub
mov
sbb
bound
and
jae
jno
test
xchg
mov
jl
cmpb
pop
xor
leave
xchg
ffreep
outsl
mov
mov
enter
hlt
sub
js
mov
sti
sarb
jle
sbb
bound
fisubrs
int
mov
lret
cmp
jmp
add
jo
mov
ficoml
js
cmp
in
dec
inc
mov
in
imul
cld
jge
xchg
clc
jg
pop
lret
loopne
nop
aas
xor
or
inc
adcl
jecxz
sbb
sub
movsb
push
cld
sbbb
lds
je
pop
jo
xor
hlt
xor
iret
add
add
fcoml
nop
movsl
sub
mov
push
fnstcw
cmpl
xchg
and
dec
ljmp
out
mov
and
shld
xor
push
push
es
dec
jno
movsl
cmc
or
push
xlat
mov
push
lret
pop
test
jp
xchg
pop
cltd
pop
mov
and
xor
insb
and
xor
dec
lcall
xchg
movsl
gs
jmp
pop
pop
cmpsl
dec
push
push
or
out
push
icebp
aas
or
xchg
xor
mov
inc
andl
xor
rorb
dec
mov
adcb
rorb
sbb
push
out
mov
pusha
lock
xor
cmp
es
jb
inc
jns
mov
int3
leave
aas
loopne
or
adc
push
mov
movsb
dec
lret
jns
sbb
loop
icebp
and
jp
sbb
and
icebp
xchg
lods
popf
test
ljmp
cli
lcall
push
pop
iret
xchg
or
dec
pop
inc
push
mov
cmp
pusha
out
mov
leave
std
pusha
push
xchg
imul
push
test
dec
jle
xor
vmulpd
or
cmp
xchg
inc
inc
ret
aad
jl
mov
push
std
add
scas
add
lcall
xchg
insb
xchg
scas
jne
add
in
popf
call
and
inc
loope
insb
xchg
and
push
out
dec
adc
push
in
and
cmc
push
mov
dec
xor
stc
jl
call
repz
inc
rorb
mov
jmp
int
nop
loope
mov
divl
pop
dec
inc
add
jecxz
jae
sub
ficomps
lds
lcall
mov
push
movsl
push
xor
add
mov
pop
xor
in
mov
push
out
adc
sub
mov
sbb
add
xchg
movsl
filds
dec
imul
jge
sbb
xchg
les
cmp
sbb
sbb
cltd
push
inc
adc
mov
xchg
cmpsb
mov
xor
or
fistps
test
inc
fsubrs
mov
sbb
jecxz
or
stos
push
movsl
adc
lock
jp
popf
sahf
pop
push
sub
sbb
push
mov
shl
scas
cmpsl
std
adc
cld
movsl
stos
or
cmp
push
arpl
inc
jecxz
call
aam
lea
pop
icebp
push
mov
sbb
or
in
mov
ljmp
mov
inc
movsb
sbb
dec
int3
mov
popa
or
pusha
imul
adc
int3
into
das
fldl
popf
add
and
add
mov
lock
or
jmp
stc
pop
in
int3
test
mov
dec
adc
xlat
dec
mov
shlb
add
jne
out
push
int
inc
mov
mov
mov
test
hlt
testb
out
sub
loope
lods
rorb
mov
pusha
inc
mov
mov
loop
dec
mov
rcrl
in
mov
cmp
jle
cwtl
sbb
jnp
jp
adc
sbb
xchg
xchg
jnp
repz
cmp
in
mov
or
xchg
gs
sbb
jl
imul
inc
movsb
aam
mov
cmp
dec
movsb
lods
adcb
jbe
jnp
inc
jo
dec
mov
rcl
fists
das
or
xchg
pop
sbb
push
mov
push
xor
int3
sub
lock
std
cmp
inc
push
push
pop
mov
sahf
imul
push
push
bound
pop
in
scas
xchg
test
jbe
fsubrs
xlat
daa
jns
in
pop
mov
mov
scas
popa
clc
push
cmp
cwtl
data16
fwait
sbb
xorb
inc
enter
adc
pop
fbld
leave
out
sub
mov
mov
jbe
rcr
test
leave
and
or
cmp
sahf
mov
pop
fwait
imul
mov
in
mov
lret
adc
add
es
aam
mov
jge
cli
mov
dec
fdivrl
cmp
xor
lret
xor
lcall
cmp
mov
out
lea
inc
stc
mov
pop
ss
push
loope
xlat
add
ret
in
mov
lret
inc
lahf
mov
lcall
ss
imul
sbb
mov
int3
xchg
aaa
ret
mov
in
cmc
pop
fldt
lods
sbbb
push
or
mov
fiaddl
insl
sub
push
sar
movsl
mov
sub
dec
inc
frstor
mov
mov
shll
jmp
xchg
sbb
and
in
mov
xchg
addr16
sub
movsb
sbb
add
inc
cmp
xchg
jbe
aad
mov
sbb
pop
test
push
cs
mov
mov
and
icebp
ret
stos
stos
movsb
pop
pop
push
movsb
cmp
add
insb
push
ret
lds
pushf
test
dec
lds
aaa
cmc
lods
scas
mov
clc
mov
mov
ds
push
mov
imul
jns
cmp
loope
adc
leave
mov
push
cmp
jecxz
adc
dec
xchg
xlat
mov
sbb
icebp
bound
pop
adc
xchg
inc
ja
std
in
xor
mov
fdivs
jne
dec
push
mov
or
fsubrs
mov
adc
sbb
scas
push
push
mov
push
loope
push
lods
out
and
sub
pop
xor
shl
cmc
outsl
pop
dec
sti
push
jecxz
sbb
sbb
fwait
jp
pop
notb
and
imul
xchg
mov
add
bound
pusha
pop
jb
hlt
int
inc
out
fdivl
sub
mov
mov
les
mov
sbb
sbb
cmpl
loope
inc
mov
jnp
push
mov
shlb
repz
bound
adc
cmp
add
out
dec
add
aaa
ficompl
mov
push
adc
into
xor
dec
sbb
int3
cmpb
jb
pop
mov
or
out
xor
lret
gs
xor
inc
daa
imul
add
inc
xlat
cltd
adc
iret
cli
movsl
roll
push
sub
stc
or
nop
push
or
mov
fldl
adc
mov
lea
sbb
test
mov
add
dec
je
adc
rcrl
dec
pop
fisubrs
pop
adc
mov
push
scas
imul
jno
loop
lahf
inc
mov
and
std
nop
or
push
stos
mov
cwtl
or
insl
xor
stos
adc
divps
loop
and
pop
aad
movsb
xchg
cs
push
in
pop
bound
or
and
mov
mov
int3
sub
repz
mov
imul
in
popf
sbb
jo
jo
arpl
jo
and
push
xchg
add
jo
cmp
inc
adc
in
jmp
pop
adc
pop
pop
jns
je
stos
jmp
or
es
sub
jp
repz
sub
sbb
lods
shl
xchg
cmc
jecxz
cs
out
mov
cltd
int3
test
lock
push
je
dec
xor
xorb
aam
xchg
or
dec
and
enter
sub
and
stos
in
lcall
std
imul
das
inc
fldl
shrl
pop
dec
cmp
jecxz
jne
jno
movsb
adc
adc
xor
sbb
push
inc
cmp
xchg
mov
pop
jecxz
mov
lods
js
enter
cmpsl
popf
nop
andb
mov
ret
stos
cli
xor
fucomip
add
push
mov
mov
inc
adc
mov
jnp
adcl
lahf
add
ss
enter
jo
push
orb
insl
arpl
cmp
in
inc
mov
scas
mov
and
bound
fsubrs
adc
sahf
cs
scas
add
lret
dec
add
fisubl
pop
popf
mull
push
sub
iret
scas
or
sti
xchg
jbe
lret
mov
sub
imul
shl
imulb
push
addr16
and
push
shr
shrl
int3
add
ret
data16
stos
es
sub
mov
sub
js
out
ljmp
cld
mov
sbb
jecxz
dec
shlb
pusha
mov
xchg
push
lods
rorl
clc
mov
sub
xchg
notl
add
sub
sub
jp
push
pop
mov
sbb
pop
cmc
gs
cmc
divl
lret
push
pop
mov
test
xor
sbb
xlat
cld
fidivs
mov
subb
jbe
popl
mov
mov
xor
dec
jmp
lds
pop
mov
fmul
sub
sahf
push
lods
orl
sub
imul
mov
xchg
adc
jg
or
aaa
dec
mov
movsb
loopne
ljmp
outsb
movsb
stos
or
dec
and
mull
mov
dec
cli
and
add
outsl
mov
and
cltd
dec
hlt
fsubrl
into
adc
jns
ds
int
lret
paddw
sub
xchg
sahf
dec
enter
pop
mov
test
adc
out
mov
or
mov
loopne
nop
out
sub
and
xchg
xor
outsb
into
fnstsw
lods
shlb
mov
adc
pop
aam
inc
lods
cmp
mov
or
fiaddl
insl
and
mov
sti
cmp
sub
rolb
dec
xlat
push
out
mov
gs
iret
sub
add
and
mov
mov
push
xor
sbb
idiv
fwait
in
sahf
roll
xor
out
cli
or
ja
jb
insb
out
mov
add
sbb
pushf
movsb
nop
add
dec
sbb
jle
and
aaa
mov
roll
push
test
xor
loopne
jle
adcl
sbbb
and
xor
mov
popf
add
ljmp
xor
in
popf
mov
popa
sbb
push
hlt
add
and
jge
mov
imul
inc
mov
jle
ja
mov
and
lcall
ljmp
lock
outsl
adc
or
out
pop
cmp
xchg
dec
push
mov
push
fwait
adc
or
ret
mov
aas
mov
testb
or
fndisi(8087
xor
je
icebp
pop
sub
in
inc
push
jnp
pushf
std
push
scas
sbb
jle
xor
adc
sti
pop
fcomi
lcall
xorl
orb
das
outsb
mov
jns
mov
shrl
sbb
push
push
inc
sub
repz
push
ret
and
lea
movsb
mov
cmc
mov
sbb
mov
daa
ret
loope
jmp
ret
outsb
ljmp
mov
pusha
icebp
jmp
addr16
mov
adc
jae
lds
clc
fs
nop
sub
push
pop
sbb
add
push
mov
sahf
in
mov
sbb
sbb
out
push
push
leave
and
cwtl
popa
cmc
mov
adc
add
scas
int
popa
cmp
fcoms
fwait
js
add
lea
sbb
sbb
ss
icebp
cmpsb
fmuls
mov
mov
mov
pop
icebp
ja
dec
ds
cmpsb
mov
pop
xchg
mov
repnz
mov
js
or
cmpsl
push
sub
popa
and
xchg
call
es
rcll
mov
cmp
shll
or
inc
adc
lret
push
add
add
fsts
push
xchg
xchg
ds
mov
dec
add
nop
push
dec
outsl
mov
int
mov
fwait
dec
xor
cwtl
adc
mov
adc
adc
inc
lahf
es
loopne
xchg
mov
stc
bound
data16
pushf
dec
js
xor
outsb
dec
pop
inc
iret
pop
and
and
in
and
pusha
dec
cmc
dec
enter
mov
fsubrs
scas
jp
sub
loope
jo
je
inc
dec
in
fsts
push
or
xchg
bnd
mov
xchg
test
dec
jp
mov
ja
psrlq
clc
test
mov
das
inc
add
sub
xchg
cld
jno
and
repnz
mov
inc
xchg
in
inc
mov
xchg
cmp
mov
or
push
dec
and
out
inc
nop
into
sub
cmc
in
xor
add
xchg
pop
enter
cmpsl
pop
jl
pop
xor
sub
and
arpl
sbb
test
cmp
movsb
xor
xchg
test
lret
mov
cmp
xchg
call
inc
fistl
add
lahf
sub
imul
roll
test
cmp
ret
xor
sub
dec
fdivrl
cmp
adc
jecxz
repnz
leave
in
ret
lods
mov
enter
movsl
jnp
js
test
sub
fimuls
fdivl
call
pop
xchg
popl
call
jl
test
sub
test
aas
dec
enter
sub
sub
cmpsb
or
cmp
adcb
into
mov
jle
int3
inc
sarb
pop
ljmp
xor
inc
leave
add
cmpsl
push
or
addr16
cmp
push
cmp
cmp
push
insb
inc
mov
fxch
push
pop
xor
dec
xchg
adc
sti
rolb
sbb
push
jns
mov
mov
xchg
imul
imul
leave
sub
out
mov
add
xchg
dec
cli
aad
sbb
and
sbb
add
cmovbe
sbb
sbb
cmpsl
js
in
shlb
sbb
dec
dec
gs
xor
jmp
dec
sub
shll
hlt
push
out
pop
mov
inc
repz
and
fimull
enter
popf
jecxz
mov
xor
xorb
dec
fcom
cmp
inc
imul
into
xchg
inc
pop
and
andb
int
mov
rcrb
aam
outsl
pop
repnz
repnz
ja
fsubrs
bound
xor
and
jmp
mov
inc
cmp
clc
adc
ret
ret
repnz
in
outsl
jno
mov
mov
lods
test
add
incb
inc
test
inc
inc
in
sbb
pop
jle
daa
das
out
cmp
and
shrb
les
in
cmp
outsl
cs
add
adc
cs
enter
push
pop
mov
mov
and
rorl
pop
lds
mov
scas
jne
cmp
cmp
out
lret
outsl
inc
mov
ja
jnp
xchg
rcrl
mov
mov
andb
inc
lea
dec
mov
and
sub
pop
xchg
xor
push
and
jecxz
sub
movsl
test
outsl
imul
std
ret
mov
dec
jmp
xchg
int3
push
push
mov
shrl
jnp
pop
push
das
push
cmp
dec
push
hlt
mov
cmc
and
xor
push
ds
cwtl
lahf
lret
or
test
mov
test
or
daa
push
or
divl
or
sub
adc
push
dec
cmc
mov
addr16
sub
out
push
fcomps
popf
out
gs
gs
jbe
pushf
hlt
and
mov
jne,pn
leave
cmc
and
stos
and
jmp
cmp
inc
sbb
cmc
pop
test
sbb
ljmp
pop
pop
xor
ljmp
lds
das
adc
mov
loope
push
aas
jne
je
adc
sbb
jno
mov
cmp
mov
dec
mov
repz
add
sbb
add
movsl
xchg
sub
inc
and
jae
push
add
cmpeqps
adc
lahf
aaa
leave
and
enter
pop
idivl
imul
loop
push
or
rcrb
push
xchg
jg
repz
or
movsl
jae
data16
lock
adc
paddusb
rclb
in
sub
jne
hlt
push
mov
lods
movsl
filds
outsl
push
into
stc
leave
mov
nop
jmp
les
cmp
push
fnstenv
xchg
dec
jbe
lret
int
inc
lods
in
stos
daa
and
dec
lds
xor
or
cmc
inc
in
inc
or
rcrl
and
xchg
cmpsl
imull
mov
jns
cmp
mov
cmp
cmp
mov
in
test
cld
repz
testb
arpl
stos
fimuls
loop
ljmp
xchg
das
xor
or
xchg
rcrl
jmp
mov
and
cmpsl
cmpsl
or
mov
lock
jl
js
mov
out
or
adc
div
imul
ljmp
lea
out
into
in
push
into
pop
cvtps2pi
cmp
lea
sahf
xchg
lock
push
push
js
xor
xchg
xchg
mov
pushl
lock
imul
cli
adc
sub
add
push
lods
inc
sub
add
stos
out
sbb
inc
ljmp
bound
xor
sbb
xchg
andl
adc
into
pop
inc
sub
fldlg2
fwait
int3
cmc
into
orb
jo
ljmp
notb
sub
sbb
popa
notl
movsl
mov
pop
enter
push
push
cmp
loop
pop
pop
push
xchg
cli
dec
sub
fcmovb
out
and
sbb
jge
js
or
cmp
scas
and
adc
mov
outsl
stos
mov
pop
adc
test
lea
scas
jo
xor
cmp
jmp
icebp
pushf
push
or
adc
les
jnp
stc
jge
jnp
sub
out
dec
mov
and
add
sahf
jnp
movsl
adc
and
incb
xor
outsb
mov
aad
and
xchg
add
and
repz
sub
add
cld
mov
fbstp
or
clc
test
pop
xchg
cltd
pop
jge
adc
sub
repz
add
insl
dec
aas
imul
outsl
cwtl
xchg
jle
sub
jmp
pop
inc
dec
push
mov
or
aaa
bound
xchg
insb
stos
fisttpl
lret
mov
xchg
cmp
sbbl
outsl
wrmsr
and
push
loop
xlat
in
push
jle
inc
or
xlat
mov
sahf
mov
xchg
jnp
lods
pushl
or
bound
popa
outsb
xor
jge
mov
movsb
test
test
sti
mov
mov
pop
sub
add
ds
or
shrl
nop
inc
sarb
pop
push
rsqrtps
cmp
add
sbb
jbe
stos
idivb
pusha
mov
loope
mov
cmp
ret
lcall
scas
mov
out
xchg
jae
repz
pop
jns
dec
mov
or
int
push
xchg
mov
or
aas
or
jns
fdivrs
jne
fsubrs
popf
push
xchg
aad
ret
add
rcrl
lock
adc
divl
rcl
push
lock
xchg
lahf
test
fwait
insb
lea
cmp
repz
jp
jle
fdivs
addr16
sub
scas
mov
sbb
pop
jns
mov
call
cmc
sbb
sbb
pushf
sbb
inc
mull
je
stos
movsl
shl
xchg
xor
jb
insb
xor
xor
out
iret
mov
cmpl
push
test
and
xor
sub
adc
xchg
mov
rorb
test
cmpb
paddusw
stos
ret
pop
shrb
pop
les
aaa
cwtl
das
mov
push
sar
xchg
push
test
popf
push
stos
jb
out
mov
ja
mov
jge
adc
inc
jae
inc
xchg
call
rcl
push
sbb
lea
out
mov
pop
repz
scas
js
mov
inc
cmpsb
xor
int3
xchg
cmp
push
xor
sub
iret
nop
popa
aas
mov
cwtl
jge
mov
in
cmpsl
sub
jbe
sub
dec
fwait
cli
push
lahf
fs
insb
popf
xchg
jbe
jg
push
movsb
jmp
add
jno
adc
push
pushf
lret
int3
data16
cmp
sub
test
xlat
ljmp
ds
push
xchg
lock
ljmp
cmp
mov
hlt
fcomps
pop
and
call
stc
stos
xchg
mov
imul
aam
cmp
xchg
dec
push
or
int
push
outsl
cmp
ja
stc
leave
icebp
imul
in
pusha
mov
ja
stos
loope
test
mov
and
rcrb
aas
std
and
jb
fcmovnb
das
subl
cmpsb
lds
addl
shl
push
cmp
mov
sbb
std
push
scas
jge
push
mov
rol
sarl
cmove
ficoml
das
js
pushf
push
repz
test
push
jg
push
test
xchg
imul
loopne
cli
or
mov
insb
sbb
rcrb
repnz
mov
or
xchg
cmp
push
jne
jl
fsubrp
pop
jne
dec
push
mov
ret
mov
sbb
xchg
dec
fcoml
mov
xchg
mov
sbb
lret
and
loop
test
and
sbb
scas
mov
cmp
loop
add
test
out
add
push
shrb
push
pushf
dec
aas
pop
mov
imull
sbb
dec
mov
test
dec
or
scas
sbbl
lcall
test
lods
sub
jo
cli
in
push
sbb
js
movsb
xor
loop
add
push
out
jmp
cmpsl
lcall
pop
addr16
adc
pushl
adc
pop
cmp
sub
and
jns
mov
add
push
jnp,pt
into
mov
jle
adc
add
mov
cmc
pop
xchg
cmp
lea
jmp
int3
lret
sarb
out
jmp
jnp
jb
andl
jbe
jnp
ja
jmp
je
test
sub
mov
rorb
inc
mov
xor
inc
aas
and
xor
mov
repnz
and
out
aad
bound
inc
jg
lcall
fisubrs
dec
lret
add
daa
mov
mov
fistl
mov
push
sbb
adc
adcl
cwtl
and
dec
insb
les
mov
jo
mov
out
icebp
inc
hlt
dec
xchg
or
sub
insl
out
roll
add
and
inc
test
jb
ljmp
int
inc
imul
movsb
push
push
hlt
lret
popf
pop
fdiv
mov
jg
lea
in
iret
test
add
push
and
dec
fwait
xor
xchg
xor
jnp
sarl
je
jo
inc
mov
add
mov
cmpsl
or
orb
dec
out
xchg
mov
loope
and
mov
stos
push
xor
mov
out
fisubs
and
nop
outsl
filds
adcl
ja
xchg
push
je
out
push
aas
and
lahf
sub
jp
adc
imul
xorl
fnsave
stc
pop
test
lret
imul
scas
enter
int
xchg
rol
jl
out
pop
inc
dec
lahf
add
xor
stc
cmpsl
gs
out
cmp
sbb
iret
and
loop
xchg
mov
mov
dec
and
sbb
and
out
add
cs
push
cwtl
xor
sub
fsubrs
pop
add
xor
mov
dec
pop
std
enter
sbb
jne
push
mov
repnz
outsb
sub
negl
arpl
push
dec
jge
cmp
sbb
mov
cltd
or
notb
mov
or
mov
lods
xor
add
leave
pop
inc
xchg
shlb
inc
imul
insb
icebp
push
pop
repz
je
into
je
push
cwtl
sahf
notl
mov
roll
cmc
xlat
daa
pop
xchg
pinsrw
or
bound
dec
ja
insb
lcall
push
dec
iret
xlat
pop
loope
jno
dec
xchg
sti
popf
shl
pop
lods
lock
bound
sti
loop
insb
std
testl
push
movsb
mov
scas
adc
lds
and
aas
pop
pop
pop
mov
pop
cld
dec
fistl
out
xor
les
dec
jbe
xchg
cli
adc
jp
xchg
cmpsb
es
leave
cmp
mov
mov
sbb
mov
ret
mov
mov
js
popf
test
mov
dec
mov
mov
cmc
subb
dec
jo
bswap
inc
ret
push
mov
cld
inc
pop
sahf
inc
and
outsl
stc
andb
pop
clc
pop
outsb
xlat
xchg
mov
imul
daa
and
loopne
cltd
mov
test
icebp
cmpb
jg
mov
pop
push
lahf
cwtl
inc
sub
popa
popa
add
mov
fcmovnbe
fwait
xor
out
bound
in
mov
dec
inc
inc
xor
mov
rolb
mov
xor
xor
dec
fisubs
cmp
pop
test
cmpsb
xor
jmp
jne
insb
jb
loopne
jle
into
dec
add
inc
and
cmpsl
cmp
mov
pop
hlt
insl
scas
inc
sub
mov
add
mov
xchg
lahf
movsb
or
or
cli
xchg
fs
jns
shlb
xchg
cwtl
sub
push
jnp
sub
mov
test
mov
inc
jl
fstpl
cld
xchg
inc
xor
mov
xor
js
inc
push
cld
movsl
push
pop
xlat
imul
shlb
adc
rcl
sub
mov
push
mov
or
adc
aam
xchg
es
rcrl
and
sbb
fs
push
rcrl
jb
daa
adc
dec
pop
mov
push
xor
mov
push
test
lcall
add
xor
daa
out
adc
dec
and
push
ret
ret
xchg
dec
lock
xorl
xchg
lret
and
nop
add
aaa
xchg
popf
in
mov
adc
out
gs
fstpl
sbb
cmc
and
es
in
push
and
cmpsb
pop
aas
roll
dec
movsl
imul
or
loop
xchg
pop
fcmovbe
push
pop
lock
lods
mov
dec
mov
imul
push
dec
pop
das
ss
pusha
jle
pop
jne
repz
adc
cmovl
out
inc
push
bound
xor
cltd
pop
xchg
xor
stos
shlb
mov
lock
mov
arpl
repnz
loop
pop
push
pop
test
mov
popf
push
xchg
enter
int3
mov
xchg
adc
or
in
fstl
dec
shlb
jp
add
xchg
xchg
cmp
data16
movb
pop
cmp
sub
int
arpl
xor
cli
popf
mov
ljmp
xchg
mov
in
stos
fstpl
mov
push
push
pop
ja
stc
mov
mov
ljmp
divl
xchg
sbb
in
pushf
push
push
adc
call
xchg
jp
xlat
inc
orl
inc
in
mov
hlt
int3
ss
mov
xchg
test
in
iret
scas
icebp
mov
int3
xor
ret
je
imul
int3
add
or
lock
aam
xor
xchg
pop
aas
pop
pop
stos
loope
adc
loopne
jmp
pop
add
push
add
adc
psllq
imulb
sbb
jbe
ret
roll
lods
push
xchg
lret
xchg
mov
outsb
loopne
dec
pop
inc
scas
aaa
inc
or
dec
xorl
add
or
repz
push
sbb
pusha
xchg
inc
enter
and
mov
lret
jns
mov
xor
inc
and
nop
dec
push
repnz
mov
shll
das
xlat
pusha
adc
es
dec
mov
xlat
cmp
or
fsub
loop
es
dec
jmp
push
push
push
push
push
test
jl
cmp
sbb
insl
scas
pop
popf
push
fistl
mov
mov
mov
mov
ss
out
mov
scas
fisubrl
sub
aas
stos
lret
cs
sarb
xchg
adc
mov
dec
sub
test
sub
mov
dec
or
imul
xchg
addl
je
sarb
adc
jae
pusha
outsb
fs
ss
push
push
sbb
sub
rcr
lret
hlt
scas
cmp
outsb
outsb
and
pop
insl
mov
ret
ret
adc
mov
into
movsb
xchg
fisttps
or
mov
popf
mov
imul
mov
dec
aas
cwtl
inc
test
loopne
or
xor
jb
xchg
loopne
test
sub
mov
push
xor
adc
stc
movsl
sub
jmp
test
testb
mov
in
sub
iret
and
lods
xor
adc
and
and
lock
xlat
je,pn
pop
cmp
pop
dec
mov
lret
mov
cmp
and
inc
ljmp
stos
pop
lods
sahf
in
jne
cli
mov
cmp
loope
mov
inc
mov
outsl
mov
jmp
mov
lods
adc
lods
jmp
cmp
std
adc
daa
in
xor
inc
cmp
in
pop
push
loop
adc
lods
jb
iret
add
xlat
insb
push
fsubs
test
sub
sub
in
dec
test
arpl
mov
mov
out
fstpl
mov
push
push
das
xchg
and
fwait
pop
jge
jns
pusha
push
fs
push
daa
ljmp
loope
mov
pop
jno
outsl
cmc
mov
cmp
out
mov
outsl
or
pop
je
jo
cmpsb
or
loope
jl
popf
mov
stos
sub
mov
mov
jae
mov
push
imul
pop
aas
push
mov
inc
imul
ja
jo
mov
mov
jo
lahf
push
fldcw
fsubrp
mov
clc
mov
shll
cli
push
fstps
push
in
data16
out
mov
das
push
pusha
gs
std
sbb
inc
mov
pop
xchg
aas
int
das
and
jl
inc
and
inc
sub
outsl
or
xchg
in
jae
cmp
pop
stos
fimull
out
mov
shr
ret
hlt
xchg
out
outsb
filds
aas
adc
ret
adc
pop
test
mov
dec
xchg
fisttps
movsl
push
inc
sbb
out
in
test
cwtl
es
mov
ja
pop
rolb
repz
add
sbb
pushf
sub
shlb
xlat
push
iret
in
popa
and
inc
sub
xchg
js
mov
and
push
and
movsl
lock
cmp
stos
cld
popa
test
sti
ret
ljmp
push
add
cmp
xor
fnstenv
andl
out
inc
pusha
cmpsl
popf
push
dec
and
inc
mov
pop
xor
mov
mov
dec
decb
into
aaa
adc
test
jae
cmp
idivl
ds
shll
and
sbb
or
aam
xor
inc
int
mov
jns
push
add
shl
ret
cltd
outsb
sahf
mov
mov
xor
rorl
xor
ficoms
push
xchg
mov
cltd
mov
dec
and
addl
scas
shlb
jge
inc
xor
or
das
idiv
adc
xchg
addr16
sub
mov
loop
pop
stos
xchg
dec
inc
push
push
adc
or
jnp
or
mov
aad
fdivr
nop
jl
fs
dec
inc
pop
jge
gs
xchg
std
data16
cmp
dec
bound
mov
sub
stos
xchg
mov
dec
test
fnstenv
push
dec
jmp
in
clc
enter
sub
mov
stos
push
mov
adc
inc
xor
xchg
mov
jbe
test
or
jecxz
dec
ffree
dec
dec
pop
popa
lret
sbb
xchg
inc
sti
mov
pop
mov
pop
mov
inc
jae
ds
jl
mov
bound
sbb
jb
jmp
sub
lahf
imul
imul
fcmovnu
jle
dec
into
and
pop
xchg
jae
inc
lds
insl
enter
rorb
mov
fwait
test
idivl
push
ljmp
scas
xchg
test
inc
mov
adc
xchg
aas
loopne
rcrb
popa
ret
mov
movsl
add
mov
sti
imul
fisttps
mov
gs
rorb
mov
xchg
lret
gs
jbe
inc
test
cmp
ret
xor
in
sahf
fisubl
addr16
ss
mov
or
std
add
icebp
in
mov
outsl
lods
lods
stos
int3
fmull
lods
push
jbe
inc
das
mov
or
and
sub
push
and
mov
mov
in
xchg
ds
mov
pusha
mov
jg
in
popa
rolb
add
inc
rolb
je
insb
lock
dec
cmp
clc
ret
insl
aaa
enter
out
push
jno
cld
sbb
dec
out
xchg
add
scas
mov
xor
mov
lret
jmp
xorb
and
and
xchg
and
cmpsl
ds
mov
mov
mov
imul
mov
jbe
mov
jge
pop
push
pop
jmp
push
call
ja
jmp
mov
inc
rol
mov
or
push
lods
cmp
icebp
js
arpl
lock
push
je
andl
cmp
cli
outsl
scas
dec
loope
xchg
jno
test
outsb
enter
mov
xchg
fcoms
pop
inc
mov
or
xchg
enter
fisubrs
test
sbb
es
ds
daa
fwait
mov
pop
jne
iret
loop
fdivs
add
mov
xchg
test
js
sbb
popa
xor
mov
sub
mov
cli
xor
sti
scas
mov
add
jmp
add
inc
mov
pop
jg
fmuls
and
mov
add
cmp
loopne
mov
or
pop
pop
cld
fstp
call
jae
fcom
scas
and
fwait
mov
fidivrl
ret
outsl
fists
inc
push
mov
xor
xchg
shlb
out
sub
aam
popa
lea
icebp
mov
ret
xchg
test
inc
mov
add
mov
inc
movl
fdivl
mov
xor
mov
push
lock
push
jns
div
nop
sub
pushl
loope
or
icebp
inc
fstl
or
sbb
or
jo
dec
adc
dec
adc
adc
mov
inc
jae
mov
mov
jecxz
in
rcrb
insl
or
test
push
lahf
push
mul
mov
jbe
sub
dec
cmpsl
movsl
pop
js
xchg
leave
dec
inc
ljmp
out
seta
mov
and
lods
pop
and
popa
mov
push
and
aam
hlt
aaa
push
cld
jp
mov
jo
lcall
or
xor
xor
xchg
fstpl
jnp
xor
test
dec
push
or
call
stc
out
mov
aad
les
push
add
jo
push
add
or
dec
fwait
adc
push
xlat
cmp
dec
fwait
mov
jp
dec
and
popfw
sbb
cmp
mov
data16
stos
inc
out
push
or
bound
icebp
lods
cld
pop
mov
and
or
lods
je
sub
sbb
lea
in
lods
fildl
lret
cli
mov
inc
insb
in
pop
xor
shll
iret
ret
add
je
push
js
in
clc
hlt
sbb
jnp
push
sbb
adc
cld
sbbb
pop
int
xor
adcl
mov
cmpsl
jge
cmp
cmp
jp
add
lcall
pusha
mov
or
stos
ret
jecxz
das
xchg
cmp
jbe
pop
gs
fldenv
loope
or
test
sahf
cld
pusha
movsl
test
fwait
scas
or
mov
sub
test
mov
jg
or
sbb
pop
or
jp
add
subb
adc
xor
xchg
inc
negl
daa
cld
mov
cmc
lock
cli
popa
xlat
adc
add
leave
ficoms
pop
mov
xor
adc
lea
xchg
popf
sbb
lcall
cmc
jno
mov
mov
cmp
movsl
jge
mov
std
idivb
sbb
stos
adc
ficompl
insl
outsl
enter
and
icebp
cmp
arpl
inc
dec
pop
movsb
icebp
mov
fst
xabort
mov
and
mov
stos
mov
dec
jmp
cld
lock
xchg
adc
sub
jecxz
push
cmp
jg
xor
fstpt
mov
stos
pop
mov
lret
adc
fldl
repz
out
mov
addr16
fcompl
mov
pop
repz
pop
repz
dec
or
jb
std
loopne
pop
ds
sbb
mov
clc
mov
faddl
jp
dec
arpl
dec
test
or
xorl
fidivrl
fbstp
mov
repz
mov
inc
aad
xchg
lret
popf
xchg
ds
push
or
jno
andl
dec
push
in
lret
push
add
movsb
ficompl
popf
popa
pop
testl
sarb
jb
sub
add
test
jns
cwtl
mov
popa
dec
addr16
jo
mov
dec
mov
sbb
add
addb
adc
mov
push
add
sub
adc
lcall
xchg
add
dec
ret
aaa
sub
negl
stc
and
lcall
add
push
frstor
inc
repz
jp
insl
inc
fwait
jno
adc
fs
mov
cwtl
test
in
rcl
lds
push
adc
and
cmc
inc
push
pop
adc
and
shrb
movsb
xchg
loop
pop
mov
mov
dec
pop
fwait
bound
neg
mov
loop
adc
adcb
subb
mov
das
sub
inc
jecxz
dec
cmp
or
or
xor
sbb
mov
bound
mov
pop
movsb
sahf
into
jne
jns
lods
cs
pusha
dec
mov
sarl
push
jmp
dec
test
cs
movsl
xor
subb
cmc
iret
scas
mov
lcall
rclb
stos
pop
out
jp
sahf
pop
jl
dec
cmc
subb
loopne
mov
push
pop
add
insl
js
mov
icebp
mov
mov
pop
fs
adc
xor
sbb
inc
ljmp
lahf
jmp
sahf
dec
add
lret
iret
pushf
adc
inc
cltd
ds
adc
sbb
or
fsub
and
hlt
adc
mov
mov
and
mov
inc
aas
insb
insb
fcmovb
push
shrb
push
push
sub
mov
sbb
jnp
daa
xchg
cmc
std
aas
mov
push
stos
sub
subb
lret
or
mov
pop
add
lret
stc
mov
adc
jns
inc
cmpb
stos
jmp
in
jecxz
pop
notl
movsb
sbb
les
dec
jmp
add
xor
mov
enter
out
shlb
sub
movsl
lret
xchg
fxch
fs
out
loope
jmp
in
inc
push
sub
pop
subl
cmpw
cmc
jns
mov
jg
cmp
and
or
insl
mov
mov
andl
mov
cmp
daa
pop
push
xchg
pop
mov
in
or
dec
cmp
popa
flds
sbb
stc
push
ljmp
das
sarb
in
xchg
pop
or
repz
or
mov
jne
out
cmpsb
mov
adc
mov
lea
mov
daa
jns
enter
push
in
and
and
sbbb
arpl
fidivrs
and
adc
sub
sbb
dec
push
jb
shr
push
add
fisubs
inc
loop
mov
mov
jl
pop
cmc
aaa
pushf
pop
adc
mov
insb
add
fbld
xchg
inc
xchg
fwait
insb
dec
lahf
adc
pop
pop
push
arpl
adc
loopne
push
negl
lods
into
fwait
jo
aam
orl
jp
inc
daa
stc
mov
lahf
cmpsl
adc
push
xlat
loopne
cmpb
xor
xlat
mov
sahf
xchg
mov
mov
dec
dec
je
mov
pop
std
push
xchg
pop
fisubs
cmp
in
sbb
and
add
cmp
sti
ret
test
xchg
repnz
movsb
mov
or
mov
and
push
cmp
mov
pop
out
lds
lods
xchg
mov
pop
sbb
mov
xor
lret
add
jecxz
inc
add
and
ja
mov
add
lea
dec
dec
jp
stos
imul
xor
pop
sub
xchg
fisubrl
mov
and
js
push
jecxz
jle
rcll
xchg
dec
adc
add
lods
inc
nop
into
shrl
xorl
gs
loop
inc
in
aad
pop
or
fadds
daa
dec
stc
jmp
outsl
sub
fcomp
adc
hlt
cld
pop
movsl
mov
adc
xor
pusha
std
sub
xchg
cld
mov
fcoml
xchg
or
out
add
sbb
scas
inc
dec
jmp
aam
cwtl
xor
mov
cmp
mov
lods
aam
xor
xor
inc
sub
imul
outsl
in
std
popf
daa
fstl
cmc
es
push
dec
es
cmp
lea
mov
movsb
inc
js
lcall
push
scas
adc
stos
mov
hlt
stc
push
mov
mov
fisubrs
fsts
jne
inc
clc
cmp
mov
sahf
in
je
rcll
loopne
inc
rcl
insl
rolb
xor
fdivr
adc
mov
xor
lea
aas
flds
push
xchg
sbb
cmpsl
add
test
adc
push
hlt
sub
push
lcall
and
std
dec
add
jp
pop
insb
stos
aad
pop
mov
cmpsl
cmpsl
xlat
out
in
mov
jle
test
xor
adc
cmp
jne
xchg
in
lock
ljmp
sbb
pop
add
cwtl
stc
dec
xchg
stos
jnp
or
and
adc
lods
insb
mov
adc
or
ret
arpl
in
movsb
adc
push
push
inc
pop
inc
loope
insl
ds
adc
int3
xchg
inc
xchg
mov
xor
rol
into
xchg
cmc
or
sub
ret
xor
test
les
xlat
xchg
mov
inc
mov
sub
iret
jbe
xchg
aaa
aaa
pop
adc
push
loop
fldcw
outsl
mov
cmp
out
and
or
xchg
xor
pop
lods
sub
mov
lcall
xorb
pop
cs
mov
clc
fisubrl
repz
aas
stos
push
jb
xchg
cmp
adc
sahf
add
dec
mov
sub
fsub
push
out
or
loop
test
rol
dec
pop
aad
fcoms
outsl
add
sti
inc
ja
loope
mov
mov
frstor
or
mov
xchg
xor
or
sub
xlat
inc
jne
push
xlat
mov
xchg
test
lcall
mov
int
in
jp
into
sbb
mov
aas
sbb
or
or
push
dec
out
movsb
mov
cmpl
jp
in
test
test
cs
adc
lret
scas
lock
sbb
stos
lds
push
test
hlt
lock
out
fwait
jle
pushw
int
rolb
outsl
jns
xor
cmp
sbb
cld
outsl
aaa
jno
dec
loope
dec
enter
fs
insl
xor
xchg
inc
mov
fcompl
jmp
sub
adc
pop
mov
push
mov
nop
xchg
sub
mov
inc
jg
mov
into
push
or
cli
inc
mov
adc
testb
lret
add
sub
fistps
xchg
lahf
sar
mov
xchg
loope
pop
fcmovnbe
cmp
add
call
pop
jno
and
push
mov
sbb
incb
xor
pop
ss
std
inc
adc
dec
xchg
inc
imul
sarb
aas
lahf
and
lds
adc
add
cs
and
stos
fimull
loope
nop
and
push
outsl
loopne
xchg
xor
clc
sub
mov
hlt
lock
movsl
out
sbb
jge
das
xchg
out
stc
andl
xor
mov
call
pop
cli
cld
push
cmp
mov
rcr
cmpsl
nop
cs
outsl
pop
xchg
and
mov
outsb
sub
out
push
fldcw
loop
pop
mov
mov
ret
inc
sarl
leave
adc
pop
xor
insb
jne
mov
push
add
xchg
int3
add
jae
in
stc
sbb
call
addl
fcmovb
orl
insl
dec
data16
aad
imul
adc
mov
les
add
test
imul
imul
mulb
repz
jp
mov
jge
je
lds
add
adc
insb
imul
sub
mov
pop
lret
outsb
push
ret
out
fnsave
test
mov
mov
andl
pop
stos
lods
out
inc
pop
push
js
mov
cmp
stos
test
adc
xchg
dec
or
mov
or
sub
mov
aas
sub
xchg
ss
iret
xchg
fstl
sbb
addl
sbb
add
lret
sahf
bound
imul
mov
mov
test
ss
pop
scas
sub
ret
sbb
push
mov
cltd
call
orl
fisttps
cmp
push
jne
and
aaa
negl
jl
push
sbb
mov
jns
mov
cmp
pop
addr16
push
aad
sbb
jmp
lret
stos
lods
addb
imul
cmc
push
add
jg
adc
add
adc
mov
xchg
pop
dec
mov
dec
xor
mov
xchg
mov
mov
dec
lock
push
xor
and
mov
sub
pushf
xchg
cld
jp
cmpsb
jne
inc
cmpsb
popa
adc
aam
mov
mov
or
aaa
add
jl
lahf
mov
mov
out
push
dec
push
dec
test
and
popf
sub
das
mov
add
jmp
jecxz
sbb
in
pusha
xchg
add
xor
adc
lcall
int
cli
push
pop
pop
xchg
ret
add
rcrl
sbb
fidivrl
push
jns
gs
push
sbb
xor
and
jo
jg
mov
adc
push
xor
out
xchg
fnsave
addr16
test
mov
pop
mov
and
add
xchg
mov
shll
movb
mov
test
or
pop
cmpb
mov
jecxz
fwait
cli
in
inc
xchg
sbb
div
cmp
cmc
xchg
ret
pop
outsl
pop
out
xchg
dec
ret
loope
pop
fsts
lcall
flds
or
cli
mov
rclb
stos
rcl
pcmpgtb
push
cmp
mov
lahf
sbb
or
rorb
fcomi
fidivrs
xor
insb
stos
fs
pusha
mov
jmp
mov
imul
xor
xchg
sbb
aam
mov
clc
push
in
pop
sti
jae
cmpsl
mov
imul
add
addl
pop
sbb
xchg
inc
das
lret
mov
movsb
addr16
sub
sbb
std
gs
fs
popa
jmp
insl
int3
test
sub
fisubrl
outsb
mov
in
fidivl
jo
adc
inc
shrl
shlb
in
int
jle
loopne
jge
pmullw
mov
cmp
inc
add
js
jle
push
movsb
rolb
fadd
sub
imull
into
fidivrs
xor
xchg
push
jle
shll
mov
aad
push
test
or
jecxz
cld
bound
cwtl
call
cmp
les
fcoms
push
lods
popf
or
adc
adc
pop
jg
decl
and
dec
or
push
pop
outsl
dec
jo
inc
pusha
rolb
out
cmp
pushf
clc
sbb
jb
loopne
lahf
lret
pop
inc
mov
cli
mov
out
dec
cs
cmc
cmc
popf
hlt
in
mov
pop
sbb
nop
add
cmpsl
xchg
add
mov
in
dec
mov
pop
xor
or
pop
mov
imul
dec
xchg
mov
adc
push
dec
lods
ror
movl
fsubs
sbb
mov
and
mov
adc
lods
push
jl
push
stos
sbb
dec
jl
push
mov
xchg
jge
pop
std
cmp
jnp
pop
push
adc
xchg
in
pop
imul
add
jle
dec
sbb
shrb
loop
dec
imul
scas
arpl
and
add
push
int
cmpsl
sub
push
fbld
jp
inc
call
sahf
pushf
in
or
push
or
and
leave
sbb
dec
mov
cmp
fs
js
pop
leave
dec
shll
test
xor
pushf
dec
and
in
lret
mov
iret
xor
cmp
sbb
popf
xchg
out
pushf
jl
mov
or
mov
push
cmp
mov
and
mov
inc
rolb
pop
repz
stc
pop
cmp
and
mov
stc
mov
mov
rorl
pop
movsb
cmp
mov
lods
cmp
dec
mov
mov
adc
push
push
cmp
dec
repz
pusha
pop
inc
pushf
push
mov
mov
imul
test
ljmp
sbb
ret
dec
jne
sub
mov
jecxz
stos
test
dec
sbb
sbb
test
sub
test
nop
ja
dec
test
push
popa
inc
or
push
ds
dec
sbb
mov
cmp
cmpsb
cli
mov
xchg
sarb
inc
pop
jns
pop
icebp
lods
push
and
pop
ljmp
inc
in
pop
mov
add
sbb
xchg
sub
add
fstp
adc
push
jg
xchg
sub
out
imul
cmp
insl
imul
sbb
mov
outsb
pop
test
sbb
cmp
imul
enter
and
fcmovnu
adc
add
call
jl
add
out
int
mov
js
mov
shr
jne
cwtl
sub
pop
push
adc
pop
aas
jne
sarl
jp
iret
in
mov
dec
in
adc
cli
pop
mov
fsub
adc
cmp
xchg
nop
xchg
repz
stos
cltd
icebp
test
aas
adcb
cmp
adc
dec
insb
in
mov
xchg
daa
jns
rcll
xor
hlt
cwtl
mov
int
cmpsl
leave
xchg
arpl
pop
fcomps
adc
xchg
lods
pop
adc
xchg
push
mov
cs
lret
nop
inc
sub
gs
mov
xor
pop
push
popf
xchg
sti
jno
dec
jnp
jg
jp
xor
popl
inc
xor
mov
in
inc
rcrb
daa
and
lock
xor
cmc
fwait
sub
mov
loop
mov
nop
mov
xchg
mov
or
in
push
int
xor
fsubrs
mov
leave
pop
lock
movsb
mov
push
jle
jmp
lds
mov
test
stc
xor
clc
insb
adc
xor
jne
mov
add
cmp
out
mov
jne
mov
enter
sbb
and
popa
idivb
ret
sub
test
pushf
jmp
int
lahf
cs
or
cmpsl
pop
xorl
xor
inc
notl
movsb
pop
stos
aaa
or
mov
sbb
sbb
or
push
add
xchg
push
push
jae
arpl
xor
aas
mov
scas
inc
push
pop
lahf
add
notl
xchg
add
movsl
pop
popf
add
and
imul
push
aam
mov
lea
and
xor
mov
or
cli
cmc
out
and
xchg
clc
subl
sub
fsubrl
push
pop
xor
addl
xchg
in
mov
sar
jae
sbb
sub
dec
cmp
movsb
call
sahf
notl
insl
xor
in
or
dec
test
xchg
mov
dec
push
mov
add
xchg
in
call
cmp
sbb
test
fstl
cmc
mov
mov
movsb
mov
cmpsb
and
mov
mov
adc
arpl
icebp
out
ja
aaa
ret
pop
aas
or
pop
data16
lea
add
mov
in
mov
lods
cli
cmp
aas
jnp
mov
sbb
orb
adc
mov
jo
rep
adc
mov
imul
adcb
ret
shll
sbb
sbb
insl
or
movsl
mov
push
mov
scas
xor
aaa
les
add
sub
mov
call
sub
jge
jb
sub
fmull
ja
cs
ss
cmp
ret
fistpl
repnz
mov
lock
jl
jmp
cmp
mov
popf
stos
out
cmpsb
mov
sbb
in
ja
cld
cmp
into
stos
fs
insl
pop
les
mov
push
lret
sbb
xor
pop
inc
pop
jecxz
lahf
xchg
stc
and
test
push
xchg
imul
mov
and
push
out
jmp
adc
xor
cltd
mov
jno
xor
mov
dec
dec
jns
xor
xchg
mov
test
mov
xor
pop
inc
mov
test
inc
repz
out
addb
push
insl
arpl
loope
jbe
sahf
sbb
scas
ljmp
movsl
xchg
jge
bnd
xchg
outsb
idivb
movsb
pop
pusha
push
aas
bound
mov
mov
das
xchg
sarb
mov
dec
pop
test
dec
and
aaa
aad
fisttpll
aas
and
insl
insb
sub
dec
cmpsl
fisubl
lock
jl
cmp
std
pop
ds
mov
cmp
iret
and
cmp
aam
sub
xchg
adc
in
sbbb
mov
cmp
push
shrl
int3
mov
cltd
inc
outsb
ja
and
scas
xchg
or
imul
mov
inc
mov
push
test
aas
popf
push
push
shll
pop
xchg
jne
jae
xor
xor
dec
data16
scas
lahf
jbe
xchg
mov
jmp
jle
inc
ret
push
popl
clc
ja
pop
ret
sub
enter
mov
mov
mov
jb
sub
sbb
xchg
or
mov
adc
adc
or
fiadds
or
repz
push
gs
cmp
lret
pop
dec
cli
iret
fmull
inc
fdivl
mov
dec
and
add
out
mov
jle
jmp
shrb
outsl
push
lods
mov
sbb
pop
pop
push
xlat
sahf
mov
jle
icebp
jecxz
fucomip
pop
inc
add
cmpsl
sbb
xor
cmpsb
cmc
ljmp
sbb
test
xchg
xlat
fsts
xchg
ficompl
call
imul
xor
lods
arpl
popa
pushf
nop
out
int3
xchg
stc
jns
or
loope
xchg
jl
mov
repz
pop
pop
repnz
shl
adc
lahf
imul
xor
rol
inc
icebp
mov
dec
mov
jge
fadds
mov
imul
cmp
imul
mov
nop
bound
add
in
inc
mov
jecxz
mov
and
shl
push
fidivl
in
cli
xor
syscall
or
mov
dec
lret
sbb
divl
jl
sbb
jmp
xchg
jp
mov
xchg
pinsrw
mov
jmpw
pop
pusha
cld
or
rcrb
pop
orl
je
lret
jg
inc
push
xor
pop
cmp
rcrl
leave
mov
lcall
mov
pop
lea
dec
mov
mov
leave
insb
xor
cltd
and
sbb
mov
adc
push
fdiv
xchg
mov
ficoml
cmc
gs
add
and
test
and
addb
inc
in
testb
inc
fsubp
inc
pop
xor
rorl
and
sub
jge
jnp
cmpsl
testl
xchg
xchg
in
sti
inc
jp
test
int
hlt
ss
fs
mov
pop
sub
pop
pop
popa
and
or
fimuls
loope
mov
shll
jbe
ret
cmpl
inc
xchg
xchg
popf
in
mov
mov
out
pop
inc
adc
jmp
enter
and
popf
xor
ljmp
sahf
and
mov
into
jl
dec
or
in
push
jg
add
pop
xchg
hlt
insl
dec
push
sub
shll
mov
mov
sbb
mov
je
sub
mov
jge
cwtl
pop
adc
or
int
loop
arpl
insl
sbb
mov
lcall
ret
push
dec
xchg
pop
ljmp
mov
ret
js
push
mov
mov
repnz
movsb
pop
xchg
mov
das
clc
pushf
mov
aaa
das
jl
jne
push
js
fadd
jmp
sub
fiadds
mov
hlt
scas
inc
and
adcb
mov
xchg
pop
mov
cmpsl
pop
dec
jno
into
fistps
xchg
cld
fiadds
pop
icebp
sub
mov
and
loopne
movsl
out
out
or
mov
sbb
imul
mov
sub
pop
addr16
repnz
out
aaa
cltd
adc
cmpsb
or
jecxz
sub
aam
sub
xchg
jmp
xchg
dec
adc
sub
mov
outsl
mov
pop
or
lods
or
fisubs
ds
fwait
cwtl
into
cmpsl
movsl
xchg
aas
mov
push
rcrb
repz
push
push
xchg
push
call
std
push
idiv
addr16
pop
xor
sbb
call
mov
mov
and
test
cwtl
scas
ret
jmp
pop
inc
rcrb
insl
add
mov
mov
aad
adc
insb
and
cmc
dec
in
in
test
mov
inc
mov
cmp
in
jns
test
pop
cmp
cs
pusha
testb
cmp
pop
pusha
pop
or
insb
imulb
testb
mov
adc
hlt
push
insb
mov
lods
cwtl
addb
jmp
arpl
loopne
dec
mov
jecxz
leave
lret
sub
xchg
and
nop
aad
mov
pusha
loop
and
loope
jo
pop
adc
jl
test
lods
and
inc
push
push
int
xor
xchg
mov
cmp
enter
test
mov
test
sub
or
div
out
dec
js
add
pushf
popa
fildl
sbb
inc
sub
pushf
movsl
insb
repz
mov
in
inc
icebp
gs
push
adc
out
pop
mov
push
jno
cmpsl
out
repz
cmc
sub
mov
int
add
sub
stos
dec
lea
dec
decb
mov
fistl
and
pop
into
out
pop
cwtl
sarl
pop
es
or
fs
mov
shlb
cltd
stc
outsb
cmpl
andb
xor
lret
xor
lock
mov
sarl
xlat
mov
push
xor
adc
icebp
mov
push
fistpl
sub
xor
xchg
cmp
subb
mov
fwait
add
pop
adc
lods
inc
pushf
push
jno
aad
shll
sub
sub
xor
subb
mov
mov
sbb
add
dec
mov
test
sti
push
lods
das
add
test
pop
xlat
mov
notl
addr16
aas
xchg
aaa
loop
lea
clc
xor
sub
outsb
out
enter
mov
into
rcrl
int
test
ljmp
mov
call
addr16
fstl
clc
cmp
inc
mov
dec
ficompl
filds
xchg
xchg
lods
ret
push
test
ja
popa
addb
add
leave
ljmp
or
fs
pop
mov
mov
mov
popa
jecxz
add
sub
imul
adc
cmpsb
sahf
insb
stos
cmpsb
cld
ficompl
icebp
mov
lret
insb
popa
sbbl
dec
lret
insl
stos
adc
sbb
xlat
lock
push
inc
cmp
cltd
push
sub
sub
lret
sti
outsb
out
loopne
in
dec
es
pop
test
jl
jo
pop
cmc
pop
mov
insb
rorl
push
bound
inc
scas
push
rorl
cmp
pop
mov
ljmp
subb
out
stos
add
sbb
js
inc
leave
rcl
xor
pop
and
sub
jmp
add
outsl
andb
sub
push
not
or
sub
mov
mov
mov
jecxz
and
push
jbe
mov
aam
repz
cmp
push
xor
ljmp
add
jae
fcmovnb
not
dec
cmc
mov
push
xchg
pushf
add
arpl
jle
fsts
pop
nop
add
mov
loop
pop
ret
ret
adc
xor
mov
jg
aam
imull
lahf
xor
mov
sbb
sub
mov
bound
andl
arpl
sti
loope
jmp
jp
arpl
or
dec
jne
inc
daa
pop
mov
adc
fwait
arpl
std
pusha
xor
and
pop
fs
test
add
xor
jnp
int
cmp
mov
dec
jg
dec
sub
xlat
jbe
pop
sbbb
xlat
decl
std
mov
fnstsw
jbe
je
add
vaddss
mov
rorl
mov
mov
insl
negw
or
xchg
mov
incl
push
mov
pop
lahf
and
push
jecxz
adc
cmc
push
movsb
sbb
adc
outsb
arpl
inc
push
cmpsl
fldl
aam
adc
cmp
sbb
into
dec
mov
andb
out
movsb
sub
cmp
lock
loop
push
xor
out
lock
mov
xchg
or
xor
ds
mov
mov
icebp
push
test
adcl
mov
ds
or
lods
nop
dec
add
gs
rclb
out
test
notl
test
mov
push
sub
mov
popf
ljmp
cmpsb
sbb
rorb
sbb
jmp
xchg
mov
lret
adc
pop
add
aad
jp
cmp
jmp
xchg
cli
out
sbb
push
or
lahf
mov
ss
xor
lcall
fisubrl
cmovge
addb
pusha
arpl
xorl
icebp
les
adc
push
hlt
mov
lock
nop
push
les
jae
sub
and
mov
push
nop
mov
sbb
push
xor
lds
das
xchg
fs
push
cwtl
mov
add
mov
fdivrs
arpl
mov
sbb
or
xor
mov
and
lds
cmp
iret
ds
addb
sub
jle
ljmp
mov
push
jmp
lcall
sub
inc
dec
jg
xor
xchg
int
or
outsb
adcl
jno
sub
push
insl
outsl
adc
cmc
rolb
jnp
cmpsb
adc
stos
sub
mov
or
xor
jne
pusha
movsb
mov
dec
ret
inc
sbb
mov
mov
sbb
mov
dec
adc
cmp
add
mov
pop
mov
cltd
cmpb
into
sub
mov
cwtl
sahf
aaa
dec
test
cli
mov
pushf
dec
xchg
mov
push
sarb
or
xchg
and
dec
xor
pop
out
mov
mov
and
jecxz
out
cli
stc
xlat
insb
aam
lcall
mov
push
xchg
add
mov
xor
in
insb
mov
imul
cmpsl
or
lds
push
jb
push
xchg
inc
mov
daa
cs
icebp
lods
inc
mov
test
leave
sahf
or
mov
inc
inc
lcall
in
sub
icebp
aam
and
je
add
mov
daa
test
insb
stos
inc
stc
leave
cmc
pop
jnp
push
jle
sarb
sahf
aad
js
lret
sti
xor
lods
ret
mov
mov
ljmp
sbb
mov
xchg
rol
lods
fcoml
xor
lock
cmpsl
iret
js
scas
scas
jno
cmp
mov
popf
jge
add
fisttps
std
popa
into
in
jp
pop
rcr
add
mov
dec
ja
pop
mov
mov
out
cld
stc
jle
pop
aam
xchg
aas
inc
xchg
lock
mov
push
dec
ds
cmp
dec
mov
cwtl
mov
push
and
test
and
insb
and
aaa
xchg
sub
insl
push
shll
sti
pop
shl
mov
jecxz
icebp
mov
pushf
push
lahf
add
outsl
sub
mov
mov
fsubrl
leave
jno
nop
and
xchg
or
nop
daa
daa
ds
je
pop
or
adc
aas
in
xchg
stos
inc
mov
jo
outsb
bound
and
jae
movsb
stos
push
xor
cmp
adc
mov
sub
dec
add
cmp
and
xchg
movsb
jmp
sbb
aaa
and
test
shlb
xchg
fwait
cld
push
repz
rol
adcl
scas
xor
push
cmp
ret
mov
jmp
imul
mov
sub
scas
pop
divb
push
sub
push
sbb
jecxz
mov
les
jp
shlb
hlt
pop
mov
add
insb
popf
lea
adc
incl
and
mov
push
adc
lods
add
ljmp
push
jns
cmpsb
fwait
dec
push
stos
test
cmp
aaa
or
adc
popa
add
sub
adc
mov
push
lahf
xchg
push
mov
push
lods
push
negl
push
mov
jle
call
push
ljmp
test
test
mov
mov
mov
mov
adc
loop
dec
pop
lgs
dec
xchg
jb
inc
nop
inc
adc
inc
popf
inc
mov
movsb
testb
shlb
fcoml
xchg
push
xlat
shrb
pop
and
add
sub
dec
pop
or
sbb
mov
xor
aam
add
mov
xchg
jp
pop
mov
ljmp
dec
out
roll
repnz
out
or
xchg
stos
cld
and
pop
push
fsub
dec
add
dec
push
clc
imul
sub
sub
add
push
clc
aam
loope
mov
fsubrl
xchg
inc
xchg
mov
cmpl
je
popa
lret
daa
lds
add
fsubrl
je
sahf
movsl
test
mov
pop
popl
mov
or
cmpsb
xor
das
jg
stos
and
fs
test
iret
jb
insl
mov
loope
xchg
shrd
pop
fsts
lock
push
push
jp
and
pop
xor
or
sub
scas
outsb
sbb
mov
xchg
xchg
scas
arpl
lods
jp
push
popl
fidivrl
fxch
int
jns
cmpsb
sbb
jmp
faddl
shrb
aaa
mov
xchg
mov
andb
xchg
push
notb
mov
in
movsl
jge
daa
mov
mov
inc
daa
nop
sbbl
sbb
and
dec
push
adc
and
je
or
lods
jbe
js
lods
mov
jnp
push
jbe
sub
mov
in
addr16
dec
xor
dec
dec
xor
inc
inc
cmp
outsb
sub
out
xchg
cld
adc
mov
cmc
loope
lret
arpl
ds
imul
rorl
xchg
mov
lret
mov
xchg
repz
gs
cmc
imul
jmp
fwait
mul
repz
andl
lods
test
out
lcall
lds
jb
lods
ret
repnz
sub
jg
or
add
jbe
xchg
mov
cmp
leave
cld
xor
mov
push
adc
adc
int3
lods
movl
xchg
mov
push
clc
dec
xchg
mov
enter
pop
push
jp
loope
adc
sbb
add
ret
aam
pop
push
dec
in
imul
test
sbb
enter
addr16
mov
fs
adcb
adc
sbb
fs
cmp
adc
sti
lods
popf
rcll
add
mov
repz
add
aam
fidivrs
xchg
daa
inc
mov
pop
sub
mov
lods
dec
adc
out
outsl
in
mov
jmp
jns
sbb
cwtl
mov
inc
outsl
test
cmp
sbbl
les
xchg
ljmp
stos
out
mov
xlat
les
pop
jne
std
pop
inc
repnz
bound
sbb
cwtl
push
out
out
movsl
add
or
ret
cmp
jae
xlat
outsl
mov
bound
xor
stc
lret
mov
icebp
or
add
add
ret
cmc
push
pop
sub
pop
sub
sub
inc
imul
aaa
mov
and
inc
mov
insl
enter
icebp
pusha
mov
shrl
mov
jae
call
pop
jne
repnz
dec
lret
hlt
adc
mov
jle
push
adc
aad
jge
addr16
insb
jp
clc
sub
cmpsb
jl
andl
sub
lea
cmp
mov
dec
in
and
aas
or
jns
cmp
mov
aad
pop
leave
jo
bound
xchg
pop
insl
sub
push
sub
lds
xorb
add
daa
out
jns
inc
sub
cmp
imul
dec
add
push
lret
cmp
js
out
fstp
mov
sub
add
mov
sbb
aam
xorl
jbe
pop
test
xchg
mov
cmpl
inc
mov
jbe
lcall
and
sahf
jmp
mov
cmp
add
mov
mov
pop
adc
jmp
xchg
push
pop
jb
xchg
shrl
test
pusha
test
and
jnp
icebp
jp
fdivs
mov
push
mov
xor
nop
leave
gs
sub
mov
push
lcall
in
push
add
arpl
jo
fldl2e
dec
inc
mov
js
cmp
mov
xlat
in
inc
arpl
mov
mov
pop
aaa
dec
adc
in
in
scas
lock
pop
xchg
and
sahf
push
pop
imul
arpl
cmp
mov
adcl
shl
push
out
shl
arpl
leave
out
out
int3
cmpb
test
jmp
or
sbb
cmp
fs
aam
and
pushf
mov
inc
nop
addb
mull
sahf
rcll
jb
scas
cmpsl
push
fxch
enter
mov
fcoml
in
lea
imul
pop
xor
inc
xchg
lret
inc
add
mov
push
mov
sub
std
ror
out
inc
mov
xor
fldenv
clts
dec
jb
js
push
and
mov
lahf
mov
aas
xor
ret
in
mov
xchg
or
dec
mov
test
xor
or
pusha
pop
cmpsb
jns
pusha
push
repnz
inc
lret
push
in
or
lods
inc
dec
sbb
cmp
jne
and
andb
mov
ret
adc
inc
std
jmp
in
inc
or
pop
push
icebp
leave
mov
push
insl
lods
mov
inc
lret
sub
and
cmp
xchg
clc
lcall
adc
sti
add
das
test
lret
jp
test
xchg
pop
negl
xor
popa
xor
addr16
adc
js
imull
push
xor
mov
out
in
xchg
jl
pop
mov
xchg
mov
dec
lock
out
adc
gs
jge
stos
bound
aam
data16
sbb
mov
xchg
in
jl
dec
cpuid
push
sbb
lods
mov
and
insl
jp
rolb
shlb
mov
mov
jno
push
xor
enter
jne
or
arpl
mov
out
jne
lods
mov
test
pop
cmc
cmp
mov
fwait
cmp
fisubs
xor
mov
fs
int3
mov
lea
ljmp
lock
and
push
xchg
ret
jmp
add
fldt
mov
loope
inc
imul
dec
push
jns
subl
stos
sbb
stos
mov
push
xchg
pop
and
sbb
dec
xchg
cmp
dec
mov
sbbl
shlb
add
mov
addr16
inc
add
xchg
ss
insl
scas
psrld
jbe
jecxz
divl
xchg
push
adc
lock
cmp
insb
std
popf
test
mov
fcom
or
push
mov
jmp
mov
popa
add
test
dec
push
mov
or
and
and
fwait
idivl
icebp
bound
xchg
rclb
mov
xor
jb
push
xor
cltd
add
xchg
add
xor
repnz
mov
cli
push
andb
stc
mov
push
push
insb
into
leave
push
mov
sahf
jbe
cmp
or
dec
or
xor
sbb
mov
dec
outsl
lcall
jmp
adc
cmp
aaa
clc
add
xchg
xor
xlat
jp
adc
xchg
mov
scas
jge
sub
pop
add
jmp
adc
sbb
cmp
xor
daa
xchg
add
arpl
pop
repz
fldenv
in
mov
test
int3
adc
ret
jle
push
pop
mov
xor
fsub
bound
xor
popf
pop
lods
jp
cs
jnp
cmp
movsb
shrl
das
jb
adc
sbb
outsl
push
cmp
nop
lahf
out
test
pop
lcall
cmp
rcrb
jno
inc
mov
inc
sbb
cmp
shrb
pop
pop
dec
adc
lods
and
jge
or
jb
mov
repnz
jmp
jno
cld
mov
xor
test
dec
inc
pop
incl
leave
mov
xchg
or
aas
fisttps
push
dec
int3
mov
mov
ficompl
aaa
gs
add
and
xchg
mov
sub
cmp
aaa
inc
mov
fwait
enter
jle
xor
pop
mov
push
leave
insb
aaa
add
stos
daa
sbb
or
mov
fwait
push
stos
aaa
fdivrs
dec
push
mov
stc
jno
push
add
rolb
mov
test
lock
stos
scas
out
aam
int3
xlat
sub
es
es
xor
cmpsl
cmp
loope
jp
pop
adc
pop
mov
mov
sbb
popa
add
pop
loope
push
das
clc
xchg
adc
jl
es
xchg
les
jbe
out
les
xchg
push
inc
in
push
xchg
sub
dec
sub
mov
aad
stos
xchg
mov
ret
mov
repz
push
add
aad
out
pop
stc
dec
mov
cmp
sub
add
pusha
mov
mov
test
adc
pop
inc
or
mov
lcall
test
vhaddps
arpl
enter
push
pushf
imul
push
inc
das
adc
xor
add
adc
leave
shr
mov
add
mov
orb
sbb
mov
mov
dec
mov
sub
mov
int
adc
pop
fimull
pop
mov
inc
lea
mov
aaa
mov
repnz
lods
mov
add
xor
ffree
sti
add
and
clc
loop
sbb
push
jle
add
jecxz
inc
jbe
das
mov
je
je
pusha
fstpl
xor
push
push
sti
ljmp
icebp
sbb
test
fwait
sbb
neg
dec
add
in
xchg
pop
imul
imul
xor
scas
sbb
mov
fstpl
out
in
jo
subl
jge
mov
aam
es
jle
dec
mov
xchg
mov
scas
addr16
sbb
hlt
lods
movsl
push
ret
incb
daa
xchg
pop
dec
lcall
mov
push
inc
sub
mov
push
add
fldl
lea
imull
inc
es
add
nop
lcall
dec
inc
repz
push
sub
mov
or
mov
out
sbb
cmp
push
les
dec
or
jno
int3
and
lret
cmp
push
dec
push
push
lods
sbb
icebp
daa
jecxz
mov
in
fs
xor
daa
dec
push
push
mov
adc
sbb
ud0
inc
ja
iret
sbb
outsb
pop
sub
mov
push
jae
mov
adc
push
mov
inc
lock
out
popf
or
or
adc
sahf
push
cmpsb
std
ja
mov
push
faddl
std
mov
or
add
jmp
fistpll
fidivs
adc
stos
outsb
test
xchg
lret
pop
mov
shr
mov
sub
inc
orb
sub
or
incb
pop
xchg
fcmovb
and
and
fsubrs
js
shlb
xchg
jo
inc
mov
inc
sbb
dec
and
mov
aam
mov
xor
mov
and
pop
add
mov
xchg
in
cmpsb
inc
mov
add
mov
cwtl
test
dec
mov
inc
cltd
rcll
andl
xor
xchg
xchg
jg
inc
mov
push
push
sub
pop
inc
test
les
jp
mov
push
fmuls
inc
loopne
sbb
cmc
int
push
hlt
jmp
push
pop
dec
or
add
arpl
mov
movsl
sub
pop
call
dec
cltd
clc
cmp
jl
arpl
and
mov
int
outsb
cmp
add
mov
dec
sbb
inc
test
scas
add
cwtl
jb
inc
shr
xor
je
lret
mov
fs
ret
scas
andl
pop
push
mov
stos
xchg
push
push
pushf
dec
sub
leave
into
cltd
xchg
leave
out
or
sbb
jmp
adcl
das
sbb
xchg
mov
aam
lcall
fisttps
push
js
jmp
je
cmpsl
sti
mov
shll
sub
jbe
pop
jmp
mov
stos
int3
mov
int3
hlt
js
adc
negb
stos
sub
dec
push
scas
clc
mov
pop
ret
insb
or
or
imul
xor
clc
sbb
and
scas
sbb
clc
inc
notl
sbb
ja
jmp
mov
inc
nop
inc
cwtl
jle
xchg
jae
push
scas
stc
xlat
mov
push
mov
push
adc
inc
sbb
ljmp
mov
jo
mov
pop
rorb
sti
jp
lea
mov
repnz
push
sub
jmp
dec
pop
push
jecxz
cltd
mov
mov
push
pop
cmp
mov
fmuls
in
dec
lea
xchg
aam
push
faddl
lods
sti
lock
jecxz
mov
aad
dec
lock
jo
ret
pop
cli
das
inc
and
inc
jo
testb
mov
mov
out
or
not
out
ret
orb
mov
xor
xor
rcr
fidivl
and
test
lret
in
mov
push
inc
popa
dec
pop
rcrb
scas
jns
ficomps
aad
xchg
imul
loop
xchg
jmp
mov
push
jg
pop
in
cs
cmpb
sahf
jecxz
jecxz
insl
add
sbb
push
add
aam
in
aaa
jmp
cld
js
cmp
test
xor
pop
mov
and
push
outsl
mov
insb
xchg
and
add
fs
adc
rcr
loop
xchg
mov
sbb
mov
jg
cld
fnsave
jge
aas
or
popa
cmp
inc
insl
jmp
loope
mov
push
icebp
iret
cmp
scas
pop
repnz
jne
jns
mov
dec
sahf
adc
sbb
fs
out
push
ret
rolb
lods
or
ljmp
icebp
adc
push
cwtl
mov
aas
push
iret
lahf
shrl
hlt
sub
arpl
jae
out
mov
sbb
mov
ss
xor
lcall
xor
push
repz
nop
outsl
loop
popf
jmp
jns
lock
test
fsubp
cltd
std
add
imul
stc
dec
sub
fsubl
xlat
sbb
je
push
xchg
hlt
pushf
xchg
scas
data16
shrb
dec
int
cmp
cwtl
push
sbb
xlat
jo
inc
pop
lods
cmpsb
mov
ret
fs
xlat
add
push
data16
push
mov
insb
add
loope
leave
insl
fidivs
sub
cld
int
cmp
scas
mov
inc
dec
or
and
dec
lahf
add
fistpl
pop
jb
and
sti
addr16
addr16
lea
pop
leave
fstpt
sbbb
fstpl
push
aaa
jnp
adc
and
inc
inc
xchg
stos
ret
and
out
jb
dec
iret
mov
lea
pop
daa
push
fwait
pop
mov
rcll
cltd
repnz
pusha
movsl
cmc
call
pop
mov
data16
mov
sbbl
addr16
cmp
mov
and
imul
xor
mov
loop
iret
sbb
mov
aas
xchg
push
pop
nop
xchg
push
mov
fs
or
fs
stos
stc
insl
hlt
imul
outsb
int
lds
movsb
or
sub
adc
call
xor
insb
mov
movzbl
stos
clc
xor
mov
and
pop
pushf
fbstp
add
xchg
xchg
dec
mov
rcrb
clc
push
add
dec
rorl
pop
jge
and
xchg
test
in
hlt
add
scas
pop
lret
in
cmp
jo
add
sub
mov
sub
sarb
sub
test
test
xchg
jp
jecxz
or
cmp
mov
xchg
fwait
cmp
ret
mov
adc
push
and
pop
push
jno
stc
mov
sbb
adc
jecxz
pop
popa
push
fadds
in
cli
add
scas
or
popf
push
pushf
andl
mov
ljmp
mov
and
jnp
nop
imul
int3
das
lds
popf
rclb
and
and
pop
inc
cmp
xor
xor
inc
outsb
xchg
fidivs
pop
lahf
sub
push
mov
ss
xchg
out
lret
xor
jne
push
dec
cmp
bound
jp
lods
js
mov
aad
addb
xor
xor
mov
loopne
pop
push
call
jle
xor
cmp
or
test
inc
dec
push
adc
in
stos
fucomip
out
hlt
mov
mov
ret
in
pop
push
mov
mov
or
das
sahf
add
push
push
lock
jp
dec
sti
add
dec
cmp
repz
dec
sbb
jle
ljmp
mov
xchg
push
in
or
bound
repz
fwait
notl
sub
dec
jns
enter
push
cld
call
lahf
fiadds
roll
sbb
sub
imul
pop
out
mov
mov
mov
sbb
mov
adc
jae
or
shlb
lods
push
test
jae
or
rcrb
adc
cmpsb
jl
rcrl
mov
nop
mov
mov
mov
dec
je
fisttps
or
or
fcoms
xchg
jne
dec
bound
jg
sbb
jbe
xchg
popf
or
mov
in
das
sub
int
xchg
hlt
add
mov
fwait
inc
mov
call
shll
arpl
pop
push
fstl
loope
fisubl
hlt
dec
jmp
inc
mov
dec
leave
fiadds
push
and
add
mov
jl
addr16
add
dec
mov
sub
sub
sbb
mov
xor
bound
cltd
out
mov
add
jl
pop
out
test
sbbl
lcall
dec
push
or
jp
fldt
in
push
cmp
aas
mov
js
adc
roll
pop
mov
push
sbb
jns
ja
push
pop
movswl
iret
xor
sub
cltd
lcall
and
out
ja
mov
fwait
xor
xchg
outsl
iret
popf
mov
xchg
cmp
push
mov
or
cmpxchg8b
in
aad
or
sahf
xchg
enter
mov
dec
jge
nop
mov
ret
jge
jnp
cmc
mov
mov
xchg
movsl
and
test
push
inc
jno
push
mov
or
scas
add
xchg
mull
push
out
lcall
or
mov
mov
push
pop
stos
adc
xor
test
or
in
sbb
out
inc
adc
xor
adc
inc
outsl
fnstcw
push
dec
mov
repnz
in
push
jge
xchg
test
popf
push
filds
leave
je
jnp
inc
out
xchg
orb
stos
push
lret
fs
xlat
xlat
cltd
pop
dec
xor
daa
pop
cmpsb
jb
sbb
daa
fnstcw
inc
jbe
or
mov
fisubrl
sar
and
dec
xor
out
or
testl
insl
sub
int
and
fcoml
ja
outsl
insl
adc
stc
xor
push
pop
xchg
or
cmpsb
add
mov
mov
inc
lret
bound
pop
mov
stos
dec
cmp
and
mov
ret
scas
pop
xchg
mulb
rcrl
imul
cmc
sti
inc
les
repnz
cld
loopne
pop
sbb
adc
inc
test
add
xorb
shl
das
push
fwait
call
jp
mov
adc
xor
mov
pop
or
ss
push
mov
gs
push
push
ret
mov
jb
add
sub
in
sbb
divl
loope
jae
push
or
adc
shld
dec
mov
sbb
pop
mov
cmp
ret
mov
imul
push
pop
sbb
or
scas
aam
stos
push
xchg
mov
push
or
fsubp
cmc
and
gs
push
stos
clc
cmp
je
loope
add
pop
cmp
push
scas
pop
jl
xchg
add
push
test
inc
subb
mov
adc
les
mov
sbb
mov
pop
mov
in
or
pop
test
and
or
scas
xor
loope
stos
push
popa
testb
aad
repnz
xlat
jnp
inc
ljmp
xchg
lret
mov
inc
jge
out
xchg
mov
outsl
leave
dec
push
outsl
push
ds
mov
popf
adc
leave
cmpsl
loope
dec
add
mov
adc
jmp
xchg
arpl
mov
add
pushf
call
pop
sbb
test
sbb
out
outsb
dec
lret
or
xor
pushf
push
push
inc
scas
shlb
pushf
xchg
and
jns
pop
mov
xchg
sub
arpl
mov
mov
xchg
push
sub
jl
and
call
pop
aaa
stc
in
push
inc
pop
lods
cmp
dec
jle
hlt
dec
cmpb
add
mov
or
mov
ljmp
mov
push
lcall
cmp
mov
mov
mov
or
sbb
test
and
pop
jmp
arpl
dec
out
and
sbb
pop
test
xchg
fmull
dec
mov
lahf
lock
repz
jae
push
aas
imul
or
jb
sbb
dec
mov
test
sub
stos
jge
xor
call
jae
mov
pop
imul
jbe
mov
sub
mov
cmp
sbb
popa
lahf
push
cs
cmpsl
jmp
or
sub
arpl
scas
mov
stos
les
pushf
dec
push
cmp
leave
and
xchg
xchg
xchg
xchg
pop
adcl
and
inc
mov
mov
and
inc
adc
mov
mov
sub
fsubs
insb
lds
test
inc
test
push
cmc
rorb
cltd
cwtl
xchg
pop
jecxz
pop
mov
mov
movsl
shrb
loope
or
call
loop
outsl
xchg
inc
xchg
xchg
mov
cmp
arpl
rorl
scas
pop
cs
cld
jmp
pop
adc
rorb
and
fucomi
in
hlt
jb
stos
pushf
pop
inc
inc
pop
mov
ljmp
hlt
inc
xor
and
test
xchg
mov
push
pop
fadd
adc
cmp
mov
faddp
fidivl
fs
push
xchg
jge
test
fbld
fadd
sub
mov
js
fbld
add
xchg
les
xchg
ss
pop
frstor
add
mov
lock
adc
cltd
imul
dec
sub
xor
pop
cmp
fcompl
test
pop
push
dec
std
mov
mov
and
sub
in
iret
adc
sti
pop
push
fs
aas
and
addr16
loopne
and
xchg
add
loop
fiaddl
and
fimuls
aam
popa
inc
pusha
jns
adc
mov
cmp
cs
faddl
dec
movsl
xchg
popa
int
sbb
inc
mov
add
out
or
ret
push
inc
mov
pop
xor
movups
jb
cwtl
addb
inc
test
dec
arpl
mov
jb
jno
dec
adc
cld
mov
push
in
shrb
pop
mov
movsl
test
mov
adcb
sub
dec
test
fcompl
jmp
mov
mov
cmpsl
mov
xor
mov
pop
lods
xor
addr16
addr16
inc
fists
adcl
adcl
xchg
and
das
mov
dec
daa
in
call
push
push
ret
jnp
mov
test
jg
push
cltd
cmc
imul
fnsave
jb
mov
jns
sahf
mov
mov
push
sub
movsb
cwtl
aad
rcll
mov
inc
cmp
das
xlat
or
mov
scas
iret
mov
or
mov
mov
xorb
fimuls
cmp
in
pop
adc
inc
add
out
call
test
pushf
push
inc
pop
fcomp
imul
jae
lock
mov
jb
adc
xchg
push
lods
mov
out
jne
out
fs
iret
enter
idivl
imul
ret
jno
mov
xor
jbe
out
mov
fidivs
xor
imul
leave
push
mov
xchg
or
add
nop
dec
sub
inc
insl
xorl
cmpsl
jae
sub
pop
and
jecxz
sub
popf
lret
test
scas
mov
add
int
fs
pusha
adc
push
dec
repz
cmp
pop
mov
mov
mov
hlt
push
inc
ss
xchg
mov
jg
lea
out
outsb
pop
negl
into
cmp
loopne
shlb
pop
jns
jecxz
xchg
mov
mov
cld
mov
pop
cmpsb
outsl
push
and
lret
rorl
aad
lret
ret
dec
call
subb
mov
xlat
jb
sar
sbb
xlat
std
mov
data16
popa
test
push
inc
mov
sub
and
dec
sbb
lock
mov
mov
movsb
add
aas
bound
ret
fwait
pop
mov
sub
add
mov
jne
aas
xchg
dec
loop
push
es
jne
inc
stc
push
jge
adc
and
icebp
or
aam
push
ja
push
inc
push
inc
addr16
loope
jg
popf
lret
out
jo
in
adc
divb
add
mov
scas
sbb
pop
jl
and
dec
scas
aaa
and
xorl
es
mov
add
dec
push
test
leave
push
inc
cli
cmp
xor
pushf
fisubrl
lods
out
std
push
sbb
sbb
and
out
or
push
stos
jl
out
pop
out
mov
jbe
repz
adc
lods
or
pop
sbb
insb
scas
fldenv
or
jae
push
mov
dec
adc
push
mov
pop
clc
xchg
dec
dec
nop
mov
test
inc
push
stc
sbb
mov
pop
dec
addb
and
jno
mov
sub
bound
cmovbe
in
pushf
push
mov
inc
push
mov
dec
ret
fisttps
mov
jne
cli
je
mov
fcomip
cmp
dec
inc
push
dec
xchg
jno
xor
fstpt
mov
outsb
iret
cmpsb
lret
ret
sbb
ret
push
jno
test
inc
je
cmp
adc
icebp
test
scas
mov
nop/reserved
insl
data16
divb
adc
imul
lea
das
xchg
or
hlt
shl
lods
pop
jg
adc
in
out
cmc
popf
nop
cmc
xchg
lds
call
push
movsb
xor
pop
xchg
ret
data16
repz
cmp
mov
arpl
js
arpl
sti
push
test
push
inc
sub
mov
imulb
xor
repnz
int
sbbb
iret
fstpt
ja
push
cmp
jg
adc
push
push
decb
xchg
test
outsl
xchg
sub
shrb
jae
push
incl
cmc
xchg
push
sbb
ret
scas
inc
out
push
inc
pop
movsl
stc
loop
pop
push
movsb
sti
imul
out
cmp
cmp
dec
rcrb
call
mov
adc
mov
in
bound
dec
shll
sub
or
dec
sbb
pop
adc
fimuls
imull
xchg
push
add
push
fstl
rcll
jno
sub
sahf
sub
adc
jge
loope
mov
arpl
and
push
push
lret
pop
stos
and
iret
leave
sbb
jmp
pop
incl
push
dec
xor
add
inc
jae
sub
imul
addr16
pop
sti
aad
pop
nop
mov
mov
xchg
pop
xchg
push
or
das
sarl
xchg
jg
sti
dec
mov
dec
and
adc
ror
pop
push
fisubl
sub
xor
dec
sub
inc
dec
dec
add
jne
nop
cmpsb
xchg
repz
mov
and
xlat
pop
pop
fwait
add
int
mov
lahf
cmpsb
sbb
sbb
scas
aad
inc
mov
nop
mov
jge
fdivs
aad
cmp
call
cmovge
and
adc
jg
insl
nop
cmp
pop
test
outsl
cmp
mov
int
outsl
sbb
adc
test
and
mov
in
xor
push
dec
adc
fldl
xor
js
jge
das
cmp
int
add
loop
out
lahf
push
and
add
out
cmp
adc
and
dec
pop
sti
or
ljmp
inc
inc
lods
sub
push
push
cmp
dec
mov
aas
add
lods
movups
mov
xchg
cld
sbb
pop
or
outsl
add
data16
cwtl
pop
jecxz
test
xor
cltd
outsl
push
pop
add
jno
lret
incl
jno
in
or
xchg
xor
xchg
dec
fcmove
sub
out
int
fwait
js
mov
xchg
cld
mov
fdivl
sti
shrl
add
cmovle
xchg
cmp
mov
xchg
cmp
scas
inc
inc
pop
inc
xchg
roll
add
xor
push
rcrl
out
fsubrl
aas
cmp
or
jns
adc
aam
lods
cwtl
shr
outsl
cmp
cli
popf
repnz
inc
test
sbb
pop
out
xchg
xchg
iret
mov
into
icebp
cmpsb
jno
push
aas
leave
mov
rol
or
or
negb
out
dec
aas
cmp
add
popa
aam
cmpl
sbb
xor
cli
jle
hlt
xchg
aad
push
jle
aad
mov
pop
adc
dec
sbb
shrb
cmp
ljmp
maxps
pop
aaa
fidivs
cmpsb
je
gs
test
out
and
sub
push
xor
adc
fwait
and
sbb
and
cmc
mov
cmpsb
mov
inc
repnz
pop
pop
add
into
sub
scas
mov
jp
sub
cld
dec
pop
push
xchg
sub
add
add
jle
mov
daa
cmp
pop
or
dec
pop
push
inc
fs
testb
pop
pop
mov
cmpsb
int
mov
cld
in
push
dec
dec
dec
sub
es
dec
cs
scas
call
or
jae
cmp
mov
lds
subl
fistpll
cwtl
mov
or
nop
movsl
mov
jns
jb
jecxz
int
je
fcoms
add
dec
mov
jmp
sub
sbb
mov
pop
mov
sbb
ror
shll
mov
fisubrs
and
dec
or
movsl
pop
sbb
xor
subl
mov
push
add
sbb
imul
jns
mov
in
pop
mov
fcmovu
pop
aam
lods
xor
sub
imul
pop
sarb
pop
jg
sbb
loope
popf
fisubrs
icebp
stc
mov
lret
jecxz
test
push
test
lcall
dec
sbb
pop
stos
mov
xchg
gs
test
xchg
cmp
jp
or
jp
pop
mov
jne
push
aaa
jns
dec
movsb
test
push
ret
push
inc
cmc
out
jle
push
inc
pop
dec
mov
cmp
cld
sarb
add
call
or
rol
xchg
adc
arpl
inc
mov
mov
push
js
imul
inc
jnp
push
decl
bound
push
dec
push
sbb
dec
scas
popa
adc
jbe
mov
pop
fbld
stos
jne
cs
or
mov
ss
loopne
clc
sbb
psrad
out
sub
xlat
mov
hlt
sub
out
repnz
fnsave
daa
inc
out
js
mov
pop
dec
bound
leave
icebp
mov
in
mov
fisubl
dec
push
pop
jl
nop
test
or
insb
or
repz
imul
xor
pop
mov
clc
cmp
enter
roll
mov
popf
pop
or
les
popl
ud2
psraw
push
push
shlb
shlb
out
cmc
ret
inc
cmp
fisubrs
and
xchg
shlb
rcl
xor
jmp
and
jnp
xchg
add
xchg
or
cmp
mov
loopne
je
insl
xchg
fidivrs
push
test
sbb
mov
pause
adc
push
bound
mov
xchg
jnp
mov
ljmp
into
mov
mov
push
mov
jg
lret
add
enter
push
add
and
pop
and
loopne
shll
xchg
ljmp
sbb
orb
mov
ja
stos
int3
gs
aad
inc
fnstcw
ss
sbb
jge
das
loope
movsl
and
outsl
sub
popf
rorl
push
cwtl
dec
pop
daa
cmp
push
xor
and
imul
scas
mov
sbb
dec
or
jnp
xchg
vaddps
ss
aaa
push
out
testb
push
scas
rol
jge
jne
lock
fstpt
data16
sbb
daa
mov
xchg
sbb
push
dec
div
mov
sbb
popf
rcl
mov
shr
mov
fwait
mov
rorb
std
jne
and
bnd
xor
adc
insl
add
or
arpl
call
movsl
xchg
sub
inc
sbb
inc
sub
and
fxch
fdiv
mov
xor
je
pop
out
inc
inc
int3
daa
jg
lahf
int3
iret
lods
inc
lret
dec
and
stos
mov
ja
cmpsl
push
js
xchg
js
lahf
pop
daa
xchg
cwtl
cmc
and
stc
add
arpl
int
mov
xor
mov
dec
cmp
adc
cld
cmp
push
cli
add
mov
inc
fbstp
sbb
sub
mov
push
fisubrs
jno
lds
cmp
inc
loopne
arpl
and
push
mov
push
loope
pushf
xchg
mov
sar
arpl
int
pusha
imul
xor
popa
paddd
xor
xor
push
cwtl
adc
or
popf
sbb
cmp
add
mov
mov
add
repnz
fwait
xchg
clc
inc
add
out
adc
add
loope
lcall
insl
icebp
pop
outsl
imul
push
stos
xor
jns
mov
popf
xchg
sbb
scas
push
xor
movsb
int
lahf
or
nop
xchg
dec
xchg
mov
cmp
stos
movsl
mov
sahf
inc
jge
push
iret
cmp
push
adc
pop
cld
push
jmp
xchg
push
or
xchg
int
faddp
nop
rorb
or
mov
fists
pop
pop
sub
popf
mov
stos
addb
jne
mov
dec
sbb
fsubrs
lea
jo
fiadds
adc
adc
mov
test
adc
stos
outsb
jnp
jle
loopne
outsb
out
push
je
or
push
jo
mov
out
and
cli
sbb
mov
add
js
mov
inc
and
or
add
arpl
dec
gs
jmp
ret
mov
xchg
lcall
adc
idivl
jb
and
xchg
add
adc
clc
int3
dec
pop
insl
jl
sub
mov
fildll
roll
gs
test
mov
in
out
dec
sarb
push
xchg
aas
loopne
cwtl
and
movsb
out
sbb
ret
inc
sbb
mov
sbb
das
dec
sub
dec
fisubrl
inc
push
or
pop
sub
add
stos
xor
mov
sbb
push
dec
out
das
mov
mov
or
jl
push
jno
les
ljmp
mov
pop
jle
push
mov
repz
inc
cwtl
add
inc
or
jmp
adc
and
mov
pop
addb
faddl
frstor
mov
call
cmc
sarl
cwtl
imull
mov
fsubl
jmp
xchg
ss
mov
adc
cmpsb
or
aaa
xchg
push
jg
cmp
pop
xor
mov
mov
scas
stos
xchg
xor
sahf
out
mov
push
jecxz
inc
stos
cmp
notl
adc
lret
mov
repz
in
mov
and
adc
jnp
mov
or
fimull
xchg
insb
sub
xor
pop
fistl
lods
xor
jmp
sbb
pop
icebp
jns
shl
dec
test
loopw
cmp
sarl
mov
lahf
jecxz
xlat
dec
imul
sbb
push
jecxz
insl
lds
pop
and
cld
aam
xor
push
jle
mov
sub
or
sbbb
out
lret
cmc
xchg
int
inc
imul
add
jnp
dec
fwait
or
push
xchg
mov
leave
clc
pop
inc
hlt
test
xchg
dec
imul
dec
mov
gs
call
lret
xor
lahf
mov
ljmp
insl
gs
jne
cmp
sbb
cmp
or
ficomps
jp
lods
sahf
pop
shr
fcomp
inc
out
pushf
sti
repnz
daa
out
or
pop
ret
out
shll
dec
inc
scas
jo
and
cli
jp
scas
push
pop
fcomp
in
lret
or
enter
lret
or
mov
dec
das
and
popf
xor
cmp
and
ljmp
sub
aaa
sbb
aam
std
in
sub
rcll
sbb
pop
data16
push
loope
adc
jecxz
std
push
sub
xchg
or
dec
scas
and
popa
int3
icebp
stos
sbb
stos
mov
push
sbb
inc
out
test
jno
test
mov
sbb
push
movsb
mov
dec
aaa
xor
push
outsl
cmp
pushf
cmp
cld
xchg
movsl
fwait
enter
pop
das
in
jb
push
cmp
in
mov
adc
movsl
loope
cltd
jnp
xor
test
push
arpl
nop
mov
out
lods
cwtl
add
xor
mov
cs
lret
mov
fildll
insl
adc
inc
rcrl
das
sahf
std
adc
arpl
sub
popf
scas
and
dec
adc
jne
je
pop
xor
pusha
clc
push
insb
in
add
xor
loop
dec
test
mov
jbe
ljmp
stos
aam
test
outsl
xor
jmp
sub
jge
xor
xchg
jo
int
ss
and
or
scas
les
push
pusha
jge
jg
jl
popa
das
ret
sarb
les
mov
add
mov
popa
imul
mov
mov
subb
dec
sarb
lcall
les
jo
mov
dec
daa
inc
adc
lret
js
xchg
xor
jns
jno
in
les
nop
test
sahf
add
jb
sbb
jmp
mov
add
jecxz
ljmp
add
rcl
insb
in
decb
push
xor
lret
repz
int3
sti
jo
cmpsl
mov
mov
imul
call
das
cli
movsb
ds
lods
nop
mov
enter
repz
mov
or
sahf
sahf
rolb
pusha
or
dec
push
lret
dec
fsubp
stos
xor
ja
dec
cltd
gs
xchg
subb
cmp
and
aam
pop
pop
das
sahf
dec
add
push
cmp
inc
lret
adc
nop
or
mov
cmpsb
fsubr
jecxz
adc
les
jecxz
push
outsl
xchg
fmuls
scas
jge
aas
push
adc
aas
shrl
les
or
aam
sbb
inc
mov
xchg
sbb
xchg
jns
mov
or
sbb
inc
fisubrl
xchg
popf
loopne
push
and
pop
clc
pop
xor
mov
inc
movsb
sbb
xor
fidivl
xchg
shl
sub
mov
jl
das
mov
mov
sahf
ljmp
popf
jnp,pt
lcall
bnd
push
jbe
sahf
fildl
aad
adc
std
sbb
cmpsb
and
call
and
movsb
jae
lock
leave
lods
fnstenv
fadds
into
push
in
scas
ret
les
xor
cmpsl
pusha
das
aas
sub
sub
pop
mov
dec
push
inc
fcomi
push
mov
sarl
jo
xchg
jp
cli
push
ret
aaa
xchg
into
lods
jp
inc
xor
scas
rorb
pop
cmp
jno
sub
push
mov
sbb
imul
cmp
mov
mov
or
frstor
xor
push
mov
neg
sub
fistps
fstpl
push
mov
jne
add
and
shr
xor
fimull
cmp
cs
add
lods
aaa
pshufw
rclb
push
fs
mov
les
das
and
repz
outsl
jmp
fs
popa
and
xchg
or
stos
adc
int3
lds
push
jbe
mov
sahf
dec
lods
push
xchg
sbb
pop
sub
leave
bound
mov
into
scas
ret
xlat
ljmp
jle
and
test
in
sub
pop
movsl
inc
flds
stos
mov
addr16
testb
inc
xor
push
push
stos
sbb
cmpsb
mov
sub
leave
push
fsubrs
xchg
jne
repz
addr16
pop
mov
push
and
popf
ret
lea
xchg
hlt
and
mov
cmpsl
in
ds
adc
xor
call
dec
inc
bound
pop
cmp
scas
xlat
pop
in
dec
cmpsl
loope
add
sbb
test
add
adc
mov
ret
hlt
cld
je
or
ret
cmp
sbb
or
rclb
js
xchg
test
mov
adc
sub
sahf
ds
xchg
xchg
ds
push
xor
sbb
in
ds
or
rcrb
cmp
mov
mov
jne
sbbl
ret
in
and
mov
nop
cli
inc
popa
lods
pop
dec
xchg
push
push
imul
dec
adc
and
mov
test
or
pop
fbld
xor
outsb
add
xor
push
test
int3
repz
sbb
adc
cmc
fsubl
data16
mov
addr16
in
mov
mov
pop
jecxz
ds
call
adc
push
imul
arpl
sub
xor
dec
dec
arpl
xor
inc
sbb
xchg
push
in
outsl
xchg
sub
int
leave
cs
jp
cmp
xor
mov
in
sarb
pop
mov
push
aam
imul
xchg
xor
je
push
inc
jo
fwait
xchg
pop
out
outsl
push
popf
cmpsb
push
push
daa
dec
pop
push
mov
dec
pop
mov
xchg
push
add
rdrand
push
add
movsl
and
int
aam
dec
sbb
xor
aam
mov
xor
or
jg
in
inc
mov
stc
dec
adc
loop
xor
cmp
xor
add
jle
mov
mov
js
jne
pop
cmp
push
or
xor
ss
or
ficompl
imul
mov
sahf
jno
jnp
pusha
fs
das
imul
int
pop
arpl
test
insl
mov
push
lret
cmpsb
pop
adc
int3
test
and
push
subb
gs
std
ja
cmpsl
jne
xchg
mov
or
jecxz
and
mov
dec
scas
sub
inc
jecxz
popf
fmuls
aas
and
rcr
ficomps
ss
cmovo
xchg
rorl
leave
xchg
push
cmp
dec
fldt
sti
outsb
int
xchg
lods
xchg
scas
cmp
and
sbb
and
pop
dec
cmpl
sahf
lea
jg
fnsave
ljmp
xchg
add
or
cmpsl
and
xlat
and
pop
pusha
sub
push
cmp
add
dec
mov
out
sqrtps
xor
cmp
ror
es
scas
push
stc
dec
mov
xor
fimull
cwtl
inc
and
scas
lret
out
lock
xor
aad
insl
lret
xor
sbb
xor
sar
cli
jecxz
cmpsl
xor
xor
stc
outsb
adc
bound
or
and
mov
add
pop
add
push
mov
decl
push
cmp
rcrb
divps
in
clc
pop
jge
and
pop
stos
cli
cld
das
cmp
mov
sub
ja
lods
fs
notb
shl
cmp
add
mov
addr16
mov
int3
sub
pop
push
das
hlt
subl
es
xor
pop
cmpsl
insl
or
aas
dec
cltd
cmp
dec
outsl
repz
roll
mov
and
sbb
mov
scas
sub
add
mov
jg
je
scas
cltd
xchg
xor
or
or
jb
dec
ljmp
xor
les
dec
xchg
push
pop
dec
andb
pop
jnp
out
xchg
lods
mov
dec
adcb
imul
bound
add
out
pop
cli
rcr
inc
dec
outsb
push
std
mov
inc
call
aad
stc
stos
mov
andl
push
out
mov
inc
stos
cmp
pop
loop
jg
dec
jle
dec
mov
add
jno
inc
into
iret
leave
insb
push
ficoml
fucomip
popa
push
lret
and
push
jl
out
sub
mov
je
aam
cmc
rorl
into
shll
adc
sbb
push
xlat
sbb
scas
push
jmp
sarl
rep
mov
outsb
xor
sbb
inc
gs
jne
pop
pop
mov
push
leave
jne
in
add
cmp
mov
push
call
in
mov
outsb
das
adc
cltd
xchg
push
in
popa
push
pushl
xor
adc
loop
ss
sti
mov
adc
pop
dec
dec
mov
in
adcb
and
xor
iret
insb
fimull
pop
or
std
cmp
mov
imul
ret
shrb
sti
add
sub
and
or
out
shll
dec
sahf
cmpsb
leave
pop
sahf
cmp
jge
xor
sub
nop
test
push
push
rolb
mov
mov
adc
mov
rorb
cmc
push
adc
shl
ret
jne
das
xchg
dec
cld
mov
jb
iret
mov
dec
inc
fxam
outsl
xchg
ljmp
neg
mov
movsb
sbb
push
leave
pop
mov
and
push
adc
mov
xchg
push
inc
aaa
jno
jmp
mov
popf
movaps
xchg
call
push
xchg
mov
xor
mov
pop
addr16
lret
fbstp
rclb
popf
xor
jbe
cwtl
mov
out
cmpsl
fwait
or
mov
jo
mov
sub
imul
and
adc
popf
in
lea
icebp
dec
pop
pusha
adc
ds
add
popa
cmc
push
or
adcb
mov
sub
jge
movsb
mov
sbb
mov
mov
pop
mov
mov
pusha
mov
cmp
jne
mov
dec
cs
cmp
push
js
xchg
pusha
int3
icebp
push
jb
push
sbbl
sbb
xchg
adcb
pop
xchg
pop
mov
jbe
loop
scas
jl
dec
dec
cwtl
lcall
lods
adc
push
aas
cmp
and
cltd
mov
fcomps
mov
mov
fidivl
xchg
insl
mov
roll
lcall
fnsetpm(287
and
pop
lock
hlt
pop
jge
test
mov
daa
enter
jg
xchg
and
pshufw
insb
push
mov
xchg
cwtl
push
leave
insb
sbb
int
jb
insb
pop
cmp
adcb
ljmp
lahf
sti
sbbl
jmp
nop
inc
push
mov
repnz
adc
push
push
test
pop
cmpsb
mov
loop
mov
pushf
jb
dec
mov
cwtl
std
lock
add
mov
rcr
jae
fwait
mov
mov
inc
orb
mov
push
push
push
decl
outsl
cwtl
cmp
ficoms
in
stos
mov
sbb
mov
xchg
sub
xor
cmc
outsb
inc
xchg
fldt
int
mov
cltd
leave
sub
pop
fdivrl
fstl
sti
adcb
mov
mov
xchg
stc
sbb
mov
sbb
movsl
cmp
out
fidivs
xchg
xchg
test
pop
call
mov
sub
nop
in
or
add
jl
fadd
daa
lret
push
xlat
adc
fimull
adc
jb
adc
aaa
add
outsl
daa
inc
fsubl
xchg
imul
out
stos
xchg
adc
and
fchs
jecxz
mov
cmp
adc
dec
stos
push
lcall
jne
adc
xorl
in
jno
xor
jmp
out
into
repz
cmp
fs
nop
loop
and
movsl
xchg
mov
and
js
call
xor
mov
mov
mov
dec
bound
nop
rclb
push
dec
out
pop
xchg
mov
out
iret
inc
mov
aas
out
dec
mov
hlt
and
out
pop
in
incb
dec
movsb
fwait
popa
ds
xor
test
mov
fdivs
dec
mov
jge
add
jb
add
ja
imul
add
loope
lcall
mov
xchg
add
ja
inc
in
inc
imul
je
pop
jo
sub
sbb
cmp
xor
and
jl
lcall
mov
push
scas
inc
jle
push
std
xor
xor
aas
call
mov
cs
int3
cmp
std
jne
lret
cs
mov
pushf
and
add
fidivs
push
fcoms
and
inc
repnz
hlt
mov
sbb
xor
sub
xor
mov
sti
js
push
sbb
dec
mov
push
mov
cmc
push
push
pushf
adc
orl
mov
mov
jne
jle
or
rcll
xchg
mov
cmpsl
jae
call
cs
inc
mov
cwtl
pop
cmpl
pop
je
ljmp
ss
add
es
mov
or
scas
lahf
sarb
popf
dec
or
adc
fidivl
sub
lds
pop
mov
sub
in
call
and
push
fbld
ljmp
mov
in
andl
jge
push
mov
jns
clc
adc
and
into
xor
pop
imul
xchg
das
ss
mov
lock
adc
int3
jbe
int3
scas
inc
cmp
push
icebp
mov
sub
mov
outsl
gs
mov
push
call
imul
mov
sahf
add
pusha
or
mov
iret
pop
pushf
inc
outsb
add
pop
fidivl
fsubrs
cmpsb
mov
stc
mov
mov
adcl
cmp
icebp
ret
rolb
ficomps
sbb
test
ret
mov
loopne
add
mov
out
test
ret
cmp
push
div
or
fsub
pop
jbe
push
pop
lea
and
jp
dec
aam
jle
pop
mov
sbb
xor
sub
repz
repnz
insb
mov
test
jns
xchg
je
fimuls
je
pushf
pop
pmaddwd
xor
jbe
xchg
cmp
and
sub
pop
add
out
fldl
insb
xchg
jecxz
fistpll
shlb
xor
or
mov
xor
cmp
push
mov
cmp
pop
jmp
das
mov
mov
push
movsb
loope
sbb
push
in
test
jno
mov
xchg
xor
mov
hlt
mov
ret
jns,pt
jp
std
sub
aas
xor
push
push
inc
xchg
inc
data16
adc
iret
movsb
test
jbe
push
dec
sbb
add
enter
mov
call
stos
shll
imul
add
fmulp
adc
dec
inc
pop
out
movsb
mov
sbb
decl
pop
pop
dec
cmp
out
jo
fcoms
lds
pop
jnp
jl
aaa
pop
inc
or
and
loope
push
cmc
gs
adc
loopne
mov
stos
lcall
aaa
add
cmc
mov
sbb
loopne
cmpsl
pop
inc
in
mov
test
shrb
mov
xchg
mov
sbb
xchg
or
mov
sub
fwait
inc
sub
jle
cmp
mov
jecxz
pop
mov
iret
cltd
adc
xor
ret
pop
xchg
lods
push
and
or
jp
mov
inc
stos
sbb
add
push
push
or
jnp
dec
or
ja
cltd
std
mov
cmp
pop
inc
pushf
cmovl
ret
push
imul
sbb
and
sbb
xchg
sti
data16
dec
bts
call
mov
and
dec
jle
pop
fstpl
jne
dec
int3
stc
mov
inc
and
push
adc
jnp
jbe
sbb
push
cmp
cwtl
xor
dec
cmp
jae
cltd
sahf
in
jg
sub
push
jle
dec
and
fwait
pop
push
imulb
adc
scas
xchg
mov
push
popl
or
idivl
lods
mov
lahf
mov
hlt
test
test
data16
bound
daa
arpl
sub
pop
test
sub
sub
mov
shl
sbb
pop
cmp
mov
cmp
xchg
sbb
jp
out
insl
sti
inc
sahf
inc
sbb
xchg
orl
mov
ja
pop
push
xchg
in
jno
inc
jp
fisttpl
sarl
testl
xor
les
mov
add
mov
push
mov
stos
sahf
sub
sbb
sti
and
and
sub
mov
sbb
adc
test
adc
inc
pop
jbe
addr16
mov
fsubr
scas
mov
adc
test
mov
or
xchg
fwait
in
add
push
lea
cmp
outsb
aam
dec
arpl
pop
lret
into
mov
pop
mov
add
sbb
adcl
dec
es
add
adc
stos
pop
mov
notl
add
aaa
push
in
pop
ret
fsubrp
xchg
add
push
mov
nop
ror
outsl
sarb
frstor
jp
add
data16
mov
hlt
jne
cli
sbb
fcoms
div
idivb
xor
in
pop
out
ficompl
dec
test
push
les
and
ret
fstl
lea
movb
daa
add
push
ja
mov
pop
lret
sbb
mov
xchg
sahf
push
cmpsl
xchg
push
pop
fwait
mov
sbb
ror
and
xlat
xor
inc
ret
push
in
jle
push
xchg
jp
xor
xlat
ljmp
in
jp
pop
dec
inc
pop
arpl
enter
ret
clc
jmp
push
imul
scas
das
dec
test
jp
in
push
incl
test
aaa
adcl
in
daa
adc
mov
xor
lods
pop
fidivrl
jge
mov
das
sbbb
mov
mov
push
out
pop
mov
mov
fs
cmpsb
and
adc
lods
in
loope
sbb
lods
aas
and
test
sub
repnz
xchg
add
in
cmp
scas
xor
mov
loop
call
sbb
cmpsl
lods
mov
lcall
and
inc
lret
idivb
jmp
scas
jmp
gs
iret
andl
scas
xchg
rolb
test
lods
xchg
decl
or
test
inc
lods
movl
dec
jp
clc
nop
sbb
mov
push
lods
inc
xor
pop
inc
cmp
push
jb
add
ds
cltd
adc
pop
and
aad
imul
push
dec
scas
shl
xor
outsl
mov
lods
dec
pop
xor
andb
in
rorl
cli
inc
fsubrp
nop
jl
mov
iret
cmpsl
or
cli
inc
jae
lret
sbb
ret
je
push
pop
nop
adc
add
ljmp
fwait
rcll
mov
cmp
mov
out
jns
mov
subb
cli
ret
inc
test
pushf
push
mov
in
mov
stos
sub
out
cmpsb
int3
int
daa
test
xor
popf
pop
dec
in
dec
jns
cmp
pop
pop
movsl
loop
jnp
mov
int
sbb
jg
out
jno
adc
jbe
test
fcoml
xchg
repnz
mov
out
out
mov
fistps
test
clc
pop
jae
dec
mov
in
clc
cwtl
lea
jns
inc
and
fimuls
jecxz
test
or
iret
cmp
jmp
push
xor
std
loopne
jno
push
push
xchg
xor
jp
xchg
mov
xchg
test
adc
lret
and
addr16
stos
popf
xchg
adc
cmp
loop
xchg
cld
packssdw
mov
call
shll
xchg
mov
mov
pop
jmp
mov
cld
movsl
push
add
mov
pop
repz
sub
adc
xchg
lcall
popf
sti
lea
jle
mov
rcrb
or
insl
jmp
or
icebp
mov
ret
out
dec
cwtl
dec
sub
sub
add
mov
sub
aas
xchg
add
aaa
push
pop
lods
dec
test
mov
sub
cmp
negb
test
cltd
popf
ljmp
je
pusha
pop
adc
xor
pop
fwait
ret
sbb
rclb
addb
lds
dec
push
jb
or
pop
mov
clc
inc
xor
fwait
ja
push
iret
jl
jmp
jge
dec
or
cmpsb
lea
or
jnp
pop
frstor
stos
imul
fldt
or
mov
aad
mov
test
push
mov
pusha
xor
adc
mov
rorl
inc
imul
push
test
push
inc
lods
repz
pop
ss
jge
xchg
fisttpll
popf
les
push
pop
inc
loope
int3
andb
es
mov
mov
sbb
lcall
dec
bound
rorl
pop
jmp
xchg
xchg
cmp
sarb
or
add
int
cli
cmp
inc
push
sub
stc
adc
fdivl
dec
push
lds
lea
sbb
push
or
cmc
rcl
xor
or
dec
mov
out
and
or
xchg
cmp
loope
mov
push
jbe
mov
jbe
test
loop
push
sbb
dec
mov
jbe
leave
std
hlt
cwtl
adc
or
clc
orl
mov
jae
in
mov
popf
imul
insl
push
sub
mov
cmpsl
or
cmpsl
movsl
push
cli
adc
sub
bswap
push
das
cld
sbb
adc
jge
outsb
into
ficomps
sbbl
movsl
jmp
adc
out
loop
xchg
sub
pushf
div
jmp
inc
cltd
jne
jne
add
push
ds
and
cmpb
xchg
pop
movsb
std
rcl
out
xchg
xchg
clc
lret
add
xor
out
jmp
jae
pop
jle
cltd
sbbl
mov
sbb
mov
pushf
pop
pop
add
cmp
cmc
cmp
xor
lcall
or
jg
pop
xchg
stos
pushf
sti
dec
dec
scas
dec
shlb
clc
jb
rep
stc
pop
or
lds
jnp
or
add
inc
cld
ficompl
ljmp
or
inc
inc
loopne
mov
daa
and
cmpsb
cltd
mov
enter
mov
pop
jo
adc
rcrl
dec
lcall
add
xchg
mov
adc
mov
cwtl
aaa
xchg
ljmp
xchg
shlb
addr16
hlt
cmp
sbb
jne
cmp
sub
pop
mov
adc
mov
jp
and
pop
pop
and
sub
adcl
xor
push
mov
dec
push
cmpsl
leave
jb
clc
out
and
xor
jns
adc
and
push
pop
push
into
int3
inc
push
fidivrs
xchg
clc
stos
popf
test
dec
inc
pop
dec
mov
and
in
ror
js
scas
cmp
sti
add
mov
es
dec
xor
nop
push
inc
push
inc
or
push
add
add
movsb
sub
adc
bound
sbb
inc
pushf
pop
inc
fistl
push
push
andb
out
cwtl
sub
in
les
inc
xchg
loop
add
fldl
iret
ret
outsb
or
fsubr
push
cmp
mov
lods
wbinvd
cmc
in
or
lods
add
dec
push
jns
ljmp
repz
inc
push
xchg
push
or
dec
add
xchg
movsl
jecxz
shll
xchg
test
addr16
insb
dec
mov
in
ret
stos
mov
push
data16
cmp
inc
fucomp
outsl
lahf
shlb
push
push
pushf
out
push
mov
and
leave
push
push
lds
ja
jle
cwtl
lods
ds
jmp
clc
pop
mov
inc
out
xchg
inc
movsb
xchg
adc
pop
and
cmpsb
std
aaa
cld
scas
push
mov
dec
ret
les
je
cmp
or
in
dec
xchg
shll
pop
std
push
cli
and
mov
jg
ret
xor
jp
cltd
jbe
test
into
xchg
pop
pop
push
stos
jns
mulb
sti
jbe
popa
into
fisubl
add
mov
jae
pop
jle
xchg
ret
sbb
pop
sbb
cmp
xor
dec
lcall
out
test
or
and
mov
mov
sbb
je
mov
aaa
mov
loopne
mov
in
sub
push
cmp
and
push
and
out
inc
outsl
adc
mov
jbe
pop
scas
mov
test
lea
popf
shlb
cld
test
mov
cmpsb
mov
cli
sub
dec
jge
cmp
pop
imull
or
mov
add
cwtl
movsl
stos
pop
fs
xor
push
mov
pop
out
push
pop
sbb
cmpsl
dec
jne
das
lcall
ja
shrl
xchg
xchg
push
cmpsb
inc
arpl
outsb
sub
outsb
push
or
mov
loop
lahf
lret
sbb
mov
int3
sub
dec
sbb
fildll
mov
pop
int3
jecxz
cmp
push
pop
sbb
bnd
mov
mov
gs
test
in
into
cmp
push
sub
stos
mov
cmp
fsubrp
push
cmpsl
aaa
stos
xchg
and
adc
pop
out
out
xlat
mov
or
adc
shl
orl
push
shlb
fwait
adc
push
inc
pop
or
sarb
push
adcb
xor
sub
in
daa
out
dec
and
sbb
xchg
xor
movl
fidivl
push
lods
mov
add
jecxz
xor
and
out
test
adc
mov
lcall
mov
jno
or
cli
mov
call
mov
adc
cld
ja
cwtl
fcmovne
sub
sub
test
xchg
shrl
jge
sub
insl
and
les
cmpsb
mov
dec
jle
repnz
aas
aad
rcl
cli
cmc
dec
in
je
std
ja
out
scas
mov
xor
sbb
cltd
sti
add
fwait
sarb
fcomi
fbstp
sarl
and
cmp
stc
mov
fbld
jo
int3
rorb
sarl
xchg
mov
pop
fisubrl
rorl
sub
xor
inc
lods
sub
cld
push
push
ss
add
repz
cmp
repnz
not
sub
gs
or
pop
push
cs
imulb
fcos
out
dec
testl
arpl
dec
xlat
lret
dec
test
jae
shr
xchg
stos
iret
xor
push
and
lcall
or
repnz
hlt
je
test
pusha
inc
ljmp
pop
inc
pop
xor
mov
jge
inc
mov
push
sahf
jo
inc
or
leave
xlat
in
adc
push
pop
scas
mov
xor
sahf
xchg
mov
outsl
fistpl
jge
cmp
mov
fildll
out
adcl
in
cltd
pop
xchg
jno
popa
daa
int
subl
out
bound
insl
inc
rorl
mov
jbe
cld
mov
leave
xchg
xor
inc
movsb
outsb
test
ret
ret
decb
mov
cmp
cmp
sub
xor
mov
and
daa
outsb
stc
std
jmp
call
ja
mov
in
push
cmp
xor
and
iret
xor
pop
add
shl
hlt
add
mov
out
mov
divb
in
mov
test
test
inc
xchg
shll
loopne
fnstenv
cltd
dec
jl
aas
scas
mov
mov
ret
pushf
pushf
icebp
icebp
mov
mov
lds
lock
push
rclb
popa
xor
test
jmp
xor
or
inc
cmp
test
and
adc
bound
add
sbbb
insb
jne
cwtl
cmp
push
ret
mov
jl
dec
data16
jbe
xor
fisubl
movsl
mov
bound
cmpsb
stos
nop
stos
xor
jnp
fwait
push
ljmp
cmp
cmpsl
add
ljmp
nop
xor
jmp
call
nop
mov
xchg
cltd
ret
push
fbld
mov
or
jge
push
fcmovb
out
pusha
mov
or
mov
xor
loopne
pop
call
sahf
adc
cmpsb
fmuls
dec
sti
pop
cltd
inc
jnp
js
divb
mov
mov
dec
and
push
adcb
dec
mov
add
ret
and
in
scas
adc
xchg
scas
repnz
sbb
test
into
pop
fisubl
into
cld
sbb
inc
or
pushl
bound
adc
aam
mov
popf
jae
mov
adc
sbb
cld
pusha
inc
aaa
sbb
repnz
outsl
fisubrs
cmc
ret
outsb
cld
aaa
dec
lahf
push
inc
in
stos
int
iret
notl
and
sub
jmp
addl
sub
test
cmp
pop
jae
lret
inc
lods
sbb
sub
jmp
jmp
sbb
sub
jecxz
out
sbb
sbb
dec
int3
cmpsl
dec
push
adc
shrl
pop
fldt
push
mov
add
xor
jno
fsubrl
ss
push
cmp
pop
cmc
jp
outsb
jbe
ljmp
mov
dec
loope
and
and
in
jp
inc
test
adc
mov
or
in
jecxz,pt
ret
push
pop
sub
push
stos
fs
out
dec
sub
loop
jl
push
dec
add
scas
cmp
xor
xor
fstps
fisubrs
scas
dec
mulb
js
fs
inc
loope
mov
or
mov
add
xor
out
outsb
outsl
xor
jg
ja
sbb
sbb
out
and
stc
push
in
and
clc
movsb
push
push
jne
insl
mov
aaa
shrl
in
jno
sbb
ret
rorl
pop
xchg
sbb
adc
jl
mov
cmpsl
bound
jp
lret
sub
push
sahf
adc
lcall
aad
dec
dec
test
fildl
add
or
divl
mov
jle
mov
stc
xchg
mov
aad
idivl
loope
and
pop
jae
in
pusha
jns
xchg
push
mov
cmp
or
dec
pop
mov
jmp
fsub
add
lahf
mov
inc
add
cmp
fistpll
data16
adc
push
imul
pop
movsb
ficompl
or
stc
outsl
push
aam
pop
xor
push
lret
aad
push
jg
and
xor
stos
jmp
xor
movq
and
shll
sahf
xchg
pop
sub
data16
ret
dec
sbb
cs
out
testb
lcall
push
mov
les
addb
dec
mov
call
test
test
imul
in
pop
insl
repz
dec
sbb
adc
sub
ljmp
adc
dec
ja
push
fisttps
fwait
cmp
fcmovb
push
xchg
xchg
sub
or
inc
jle
inc
cmpb
repnz
rcll
xchg
jg
or
push
xor
pop
xor
xchg
jne
out
jl
xchg
cmp
fwait
movl
add
cli
test
loop
dec
enter
xor
cli
and
js
push
imul
xchg
outsb
enter
fcoms
sub
in
fs
scas
add
jg
push
jge
fstps
outsb
jae
mov
out
fcmovnu
pushf
test
rcrl
xchg
mov
out
lea
or
cltd
cli
int
lahf
es
inc
dec
add
mov
xchg
sub
or
jp
dec
loopne
sub
push
xor
shlb
add
or
in
das
add
adc
jp
into
xchg
stos
mov
ret
xchg
loope
lahf
lret
dec
cmpsl
push
pop
ds
js
xchg
sbb
xor
aas
mov
dec
imul
je
test
in
xlat
cmp
hlt
testb
scas
mov
mov
xor
or
xchg
lds
lock
dec
call
fildl
mov
out
ds
popa
enter
aas
icebp
repnz
push
cli
xchg
adc
mov
std
add
cmp
sbb
mov
jecxz
mov
xchg
mov
fdivr
sub
lea
xor
mov
cmp
pmaddwd
and
fdivl
adc
mov
or
aam
imul
sbb
mov
jge
push
lea
jp
xchg
sub
sahf
cmpsb
or
cltd
scas
adc
jmp
and
aad
aas
sbb
out
nop
mov
in
arpl
aad
lds
dec
out
jbe
add
mov
pop
lods
sub
lret
mov
mov
js
mov
mulb
xchg
xchg
jmp
cltd
lock
xchg
int3
dec
sub
mov
cwtl
enter
sbb
arpl
imul
mov
pop
inc
adc
loop
xchg
mov
jno
ss
xchg
fistpll
loope
fincstp
mov
xchg
out
faddl
add
or
pop
push
testl
repnz
cltd
mov
adc
in
jge
cld
flds
and
repnz
mov
push
cltd
cmc
pusha
sub
int3
mov
and
addl
aas
addb
pop
jmp
dec
mov
subl
dec
pop
dec
push
cmpsb
pavgb
dec
rcrl
push
in
rcrb
and
pop
dec
dec
cmpsb
and
out
mov
ljmp
imul
aaa
das
fiadds
and
mov
out
adc
mov
dec
insb
dec
pop
hlt
cld
push
or
movsl
call
and
test
js
push
test
mov
hlt
or
cmp
xchg
pop
inc
ret
sub
xor
std
mov
jb
xor
xor
jge
aas
leave
xor
loop
fsubs
and
jle
push
and
push
mov
popa
enter
pusha
jno
mov
and
push
into
fcoml
gs
push
cmp
iret
inc
xchg
lods
jge
cmc
xchg
add
sub
pop
out
loop
out
outsl
je
sub
mov
pop
out
outsl
mov
cmc
scas
in
rcrb
jnp
cmpsb
jbe
add
xchg
mov
inc
fldl
add
mov
movsl
mov
hlt
pop
pushf
sbb
mov
sub
iret
iret
outsl
loopne
ret
in
sbb
jne
scas
mov
std
sti
mov
ljmp
adc
les
fsts
dec
or
rcrl
out
in
imul
jne
out
sub
add
fstl
mov
push
gs
ret
out
push
push
xchg
and
lret
jg
scas
ss
mov
loope
imul
lods
in
jne
sbb
mov
xor
imul
pop
je
jl
cmp
mov
fists
push
repz
leave
loopne
rep
scas
sub
push
push
mov
mov
mov
adc
inc
mov
xchg
fsubrs
sbb
pop
mov
xchg
iret
std
rcrb
pop
xorl
sahf
fs
aad
mov
int
sti
adc
addr16
test
xchg
arpl
or
inc
mov
sub
mov
bound
inc
xlat
out
or
mov
repnz
push
bound
or
clc
and
mov
jl
dec
mov
mov
push
leave
cwtl
mov
adc
in
ljmp
test
mov
push
or
movsb
pop
mov
xor
loope
sub
push
fwait
cmp
fstp
out
xchg
xor
insl
add
mov
xor
loopne
sbb
orl
aad
inc
lods
scas
jne
pop
inc
daa
jae
jbe
imul
push
mov
movsb
data16
andb
loope
xchg
test
pusha
andb
sub
mov
xchg
sub
push
or
jb
sbb
outsb
adc
notb
js
mov
jno
rcll
lds
adc
scas
addb
mov
and
cmpb
shrl
fldcw
mov
pushf
in
or
inc
mov
shlb
lock
xchg
cld
popa
ljmp
sahf
and
jo
xchg
adc
and
jae
daa
sub
fiadds
jno
or
frstor
push
mov
push
out
fs
inc
pop
xchg
push
in
sub
fwait
push
mov
cmp
mov
push
arpl
pop
loopne
mov
or
pop
dec
push
xor
jmp
es
cwtl
flds
push
add
push
pop
pop
pop
push
pop
jecxz
movsb
push
lret
push
and
mov
jge
sbb
lcall
cmp
jne
push
pop
adc
mov
mov
pushw
cmc
f2xm1
jae
xchg
ret
popa
out
jmp
cltd
sbb
bnd
scas
movsb
shl
jns
jle
jmp
jle
push
dec
dec
add
dec
fs
mov
xchg
jns
fwait
cltd
push
push
sbbl
hlt
mov
inc
cli
icebp
lcall
cmp
and
xor
aas
scas
test
add
out
xor
cmp
daa
fldt
jmp
mov
jl
push
mov
js
cs
mov
jge
pop
mov
adc
push
xchg
or
pop
ret
mov
xor
push
test
aas
cmp
movsl
or
mov
cld
lret
fiaddl
dec
add
push
lret
pop
xlat
xchg
xchg
add
loopne
sub
inc
or
rorb
cmp
popa
cld
mov
push
or
cmp
fcoms
enter
lea
add
shlb
cmp
or
cmpsb
int3
lods
mov
sub
lods
into
mov
adc
mov
adc
out
aad
jmp
lods
dec
int3
ret
inc
jno
popa
mov
rorb
adc
sub
loopne
sbb
sbb
mov
mov
sub
mov
mov
push
aas
aad
inc
std
push
pop
sahf
iret
sub
jbe
xchg
fmulp
imul
int
stos
aaa
loopne
lods
lret
cmpsl
cwtl
cwtl
xlat
inc
xorb
scas
push
ljmp
arpl
or
cmp
and
mov
mov
dec
jo
mov
imul
cmp
insl
sbb
mov
push
movsb
fsub
pop
push
cmpsb
jle
push
and
sti
hlt
mov
lret
ds
loopne
and
and
cld
jp
emms
xchg
test
mov
adc
jb
gs
xchg
dec
dec
mov
jmp
pop
sbb
jl
jp
dec
pop
mov
or
cwtl
pop
mov
jle
pcmpeqd
dec
or
outsb
in
cltd
inc
popa
xchg
fnstenv
mov
pop
in
popf
insb
cmp
ret
nop
aas
pushaw
sub
stc
scas
fimull
jae
icebp
loop
or
dec
nop
mov
pusha
sub
or
xchg
fcomps
aaa
xor
nop
and
fsubrl
arpl
js
fisubrl
jl
mov
jecxz
jge
bound
cmp
mov
push
inc
bound
lock
jmp
shll
aam
in
dec
stc
and
decb
insb
jge
mov
fucomip
mov
mov
icebp
fcompl
inc
push
sahf
push
popa
lea
jecxz
jp
xor
int3
dec
push
test
lock
mov
inc
jbe
pop
inc
mov
adc
sbb
clc
sub
jecxz
push
icebp
outsl
popa
xchg
shll
in
mov
lock
xchg
or
enter
nop
jne
dec
mov
add
xchg
jmp
out
dec
out
jg
add
pop
das
pop
lea
aaa
pusha
cli
mov
loope
jne
ja
sbb
stos
mov
or
ret
or
mov
xor
dec
lahf
pop
mov
jle
std
add
movsl
mov
lds
cmc
cmp
xor
fadd
sub
and
loop
xor
jne
xchg
jo
test
sbb
xchg
imul
sub
push
pop
push
jae
xor
push
daa
push
push
push
loope
xor
cmc
sbb
xor
dec
popa
mov
xor
mov
popa
xor
lods
pop
addr16
repnz
fdivrs
push
nop
stos
mov
cmp
push
jmp
lret
testb
sti
shll
push
mov
cmp
enter
add
jb
hlt
out
ret
incl
sbb
out
jmp
insl
dec
adc
cmpsl
test
dec
scas
data16
or
scas
shr
pushf
jnp
addps
imul
mov
push
pop
jp
test
push
int
jge
outsl
test
cmc
pmulhuw
add
popl
cmpb
xchg
mov
push
xchg
adc
xchg
push
sub
loopne
das
cmp
adc
mov
cli
fs
lds
mov
jecxz
outsl
dec
jl
jle
test
testb
mov
test
pop
mov
pop
pusha
mov
mov
scas
add
iret
js
jle
xchg
pop
mov
or
dec
add
loope
adc
inc
jg
inc
ljmp
ljmp
dec
cmpsl
and
stos
dec
cmp
gs
mov
push
es
jb
ljmp
jne
pushf
loopne
add
mov
lea
pop
and
mov
cmp
xchg
loopne
inc
adc
divl
repz
push
and
subl
xchg
push
and
sbb
mov
and
and
mov
clc
dec
cld
ds
call
in
imul
scas
cwtl
push
movsl
cmp
test
jp
aad
mov
sub
gs
mov
sub
push
lret
adc
mulb
loopne
mov
and
aaa
sub
idivb
lods
cld
lret
push
or
lahf
fisubrs
fcmovne
mov
lahf
mov
testb
insl
leave
lret
lds
stc
xor
call
dec
les
insb
cmpsb
js
dec
mov
and
xor
jg
push
test
or
jge
inc
pop
add
xor
repz
push
sub
loopne
inc
mov
out
mov
mov
mov
mov
xlat
cmp
nop
push
in
jg
mov
add
or
push
jle
lret
divb
addr16
jnp
push
call
adc
das
das
push
movsb
push
mov
and
push
jno
ljmp
pop
sbb
or
scas
fwait
sbb
idiv
or
pop
and
mov
pop
mov
orb
popf
imul
out
xor
sbb
sub
jne
stos
jnp
adc
popa
xchg
add
xor
imulb
lea
mov
jae
fs
mov
out
sub
mov
lcall
outsl
testl
mov
lahf
push
add
add
push
xchg
jl
out
ja
gs
cmp
jno
adc
sbb
dec
mov
push
cmp
jne
loopne
xchg
mov
push
clc
lock
jno
or
bound
xchg
rcrl
enter
sub
cmp
popa
ja
dec
iret
cld
les
jb
pop
push
fsubs
sub
and
cmpsl
and
out
mov
insb
add
shl
sbb
bound
shlb
lds
inc
mov
test
pop
loope
ljmp
out
push
xor
push
cmp
mov
fdivrl
lahf
in
insl
int3
pop
sahf
and
enter
roll
mov
jns
xchg
popf
add
mov
mov
insb
push
push
das
jno
ljmp
out
mov
fdivp
insb
mov
stos
or
bound
inc
mov
loopne
pop
push
pop
and
sub
cli
push
adc
lahf
xor
mov
mov
pop
push
popf
sub
cmp
add
push
fisubs
int3
lock
fnstcw
mov
icebp
les
inc
not
xor
jp
fisubs
call
repz
or
or
cmp
sbb
mov
and
jno
fstps
je
or
dec
dec
imul
gs
mov
cmp
add
pop
hlt
dec
jmp
ss
leave
pushf
int3
mov
xor
sbb
jge
push
shrb
rcl
adc
push
mov
pop
je
bound
xor
xchg
repz
xor
outsb
push
scas
push
test
lahf
sbbb
mov
jne
or
test
inc
push
pop
into
xor
ds
push
out
sbb
insb
inc
push
mov
xor
xorb
fwait
hlt
fcomi
lea
sbb
adc
out
xor
arpl
ror
jno
cmp
subl
aaa
lcall
outsl
mov
mov
and
mov
vpminub
in
sbb
add
inc
pop
xor
inc
test
jns
dec
cs
cmp
cld
add
lods
and
or
rolb
adc
fcmovb
loop
mov
mov
add
mov
add
loop
pop
ror
xchg
sbb
out
xor
outsl
movsl
jecxz
jo
adc
mov
icebp
xchg
mov
lea
sub
adc
je
fcoml
cmp
lea
loope
push
ljmp
pusha
jnp
cmp
enterw
sub
rcr
cmp
ja
mov
dec
lcall
or
cli
ds
enter
sub
sbb
jge
ja
sub
aaa
or
pop
jno
insb
jmp
std
adc
sti
fimull
test
into
cmc
test
adc
movl
mov
adc
sahf
cmp
dec
lcall
jg
mov
clc
lahf
jmp
lods
jo
fnstenv
movsl
cmpsb
mov
xor
cmp
mov
scas
bound
hlt
jle
repz
push
add
adc
in
lret
pop
or
ds
mov
xor
into
xchg
dec
stos
outsb
pop
cmc
cwtl
pop
lea
ret
out
in
aam
scas
cwtl
rcl
and
es
sub
pop
enter
rol
icebp
jmp
ljmp
ret
sbb
fcompl
push
shlb
pop
xchg
popa
jecxz
mov
jge
xor
cmp
bound
pop
sarl
add
test
das
iret
push
mov
cmp
mov
xor
movsl
push
xor
inc
adc
out
pop
sbb
test
shll
xor
test
ret
out
cmp
cmp
imul
decb
movsl
arpl
ljmp
cld
pop
jbe
imul
aam
push
dec
hlt
cmpsl
mov
cmp
pop
lret
outsb
pop
int3
pop
int3
mov
sub
bound
mov
sbb
ljmp
leave
cmp
ja
int
adc
push
hlt
jno
or
lret
mov
int
fiadds
scas
mov
shr
scas
jb
call
inc
cmp
pop
adc
sbb
movsl
imulb
sbb
lds
lods
int
dec
and
xchg
jl
scas
subl
popf
cli
sub
fcomip
push
sbb
dec
xor
pop
jecxz
jno
repz
add
jne
mov
mov
xchg
arpl
in
pop
mov
inc
jb
push
iret
lods
inc
int
mov
cltd
lods
mov
and
divb
pop
push
add
insb
add
int
dec
sbb
sub
lds
andb
std
popf
pushf
jp
inc
mov
jge
test
aad
and
sbbl
mov
lcall
jns
stc
in
mov
mov
lret
scas
xlat
nop
mov
add
sbb
xchg
dec
xor
pop
sti
ljmp
jns
pop
imul
lahf
int
and
fistps
add
sahf
fidivl
push
cltd
jg
into
mov
leave
pop
adcb
mov
loopne
push
lahf
pop
cltd
mov
mov
push
pop
cmp
roll
hlt
enter
mov
mov
mov
rolb
ret
sbb
mov
leave
mov
jb
aam
leave
mov
inc
idivb
adcl
sarb
jnp
fs
inc
aad
push
fistl
mov
dec
shl
in
test
jne
nop
or
inc
lahf
sbb
in
xchg
out
fisubl
cld
or
sub
fldenv
inc
push
lds
jno
inc
sub
and
push
repz
jmp
cmpsl
xchg
repnz
and
xchg
xchg
add
dec
mov
stos
xor
shrl
pop
mov
in
inc
popa
jbe
push
rorl
mov
mov
into
sub
or
daa
mov
sahf
inc
stc
xchg
mov
imul
mov
and
idivb
sub
mul
xor
repz
or
fdiv
mov
lds
xchg
int3
mov
pop
mov
js
push
jg
inc
shl
subl
push
idivb
hlt
outsl
fldcw
rolb
adc
xchg
inc
jne
sub
in
popf
fwait
fwait
and
in
inc
cs
popa
in
push
xchg
inc
insl
or
loopne
mov
enter
sbb
lds
negb
clc
mov
cmp
sti
jne
or
cmc
mov
pop
mov
or
inc
into
sbb
dec
inc
jb
sahf
subl
mov
or
mov
stc
test
sbb
xchg
cs
scas
adc
sbb
jp
inc
hlt
xchg
xor
xchg
repnz
movsb
mov
sub
fdivs
loop
icebp
fnsave
pusha
mov
cmc
outsl
stos
cmpsl
push
and
pop
gs
fists
add
mov
lock
adc
sbb
pop
lahf
xchg
and
test
pusha
int
mov
fucom
or
dec
jb
sbb
add
in
xlat
rorl
mov
xor
jg
dec
jp
mov
stos
leave
loope
outsb
mov
mov
sbb
insl
ret
mov
jl
lret
jno
cmp
push
mov
outsb
cltd
mov
jl
leave
add
test
imul
pop
out
mov
scas
sahf
inc
inc
jnp
rcrb
cmp
mov
fildl
cwtl
stc
jnp
das
cmpsl
mov
enter
pop
stos
fmull
popa
adc
mov
adc
xor
xchg
inc
leave
aam
add
mov
mov
aaa
es
cmp
in
out
imull
mov
add
xchg
xchg
add
cmp
test
stos
jbe
ret
dec
push
mov
mov
or
sub
mov
or
add
xchg
int3
add
mov
into
out
xchg
xor
fstl
shlb
xor
xor
repz
add
test
mov
xor
mov
loop
cmp
loope
inc
fucom
adc
roll
mov
mov
enter
jge
push
dec
adc
cs
bound
sbb
xchg
aad
or
or
out
mov
inc
pop
xchg
inc
out
pusha
jnp
leave
adc
mov
outsb
imul
mov
rcll
jp
add
adc
mov
cmp
bound
int
xchg
sbb
jg
inc
stos
imul
inc
or
lods
cli
stos
sbb
push
pop
cmpsb
lods
push
mov
add
loope
mov
jmp
sub
pop
inc
out
outsl
inc
ficomps
aas
ret
mov
aaa
sub
pop
hlt
iret
in
scas
mov
mulb
test
loope
xchg
jb
mov
aad
xor
or
xchg
cmpsl
subb
dec
arpl
mov
xlat
call
add
hlt
js
sub
inc
insl
xor
test
jg
lock
mov
xchg
mov
sbb
mov
push
das
pop
dec
xor
push
sub
int
add
xchg
ja
sub
call
ds
push
popf
sub
imul
sbb
or
shll
add
scas
rcr
push
jo
movsb
in
dec
ja
inc
jae
icebp
es
add
or
insb
popf
or
xchg
mov
sub
repz
pop
insl
jnp
inc
cmp
mov
lret
pop
rcrb
ret
ljmp
sub
add
xchg
sahf
pop
xor
cmp
shrl
stos
insl
mov
std
addr16
mov
fcom
inc
andb
sub
cltd
fsubrl
or
imul
dec
jo
arpl
int
stos
scas
sub
inc
mov
ficoms
and
or
iret
mov
loopne
cwtl
lcall
enter
test
fs
fsubrp
xchg
call
js
jmp
dec
ljmp
popa
sbbl
inc
mov
or
cmp
jmp
data16
out
inc
push
sub
ljmp
pusha
adc
outsb
add
mov
gs
nop
xlat
pushl
movsl
fdivl
sub
cmp
jno
dec
adc
sub
int
pop
lea
insb
xor
push
pushf
sarl
xchg
mov
adc
sar
push
mov
lds
push
or
xor
js
pop
jg
jo
sub
push
push
xor
cld
je
xlat
lahf
es
add
fdiv
lret
loopne
mov
push
pop
push
ror
cmp
mov
icebp
adc
repnz
mov
cltd
sbb
xor
aad
call
mov
adc
popa
pop
dec
and
ret
sub
mov
fs
cmp
pusha
scas
stos
scas
mov
jle
mov
mov
sub
sub
mov
xchg
rorb
dec
xlat
js
xor
jns,pn
pusha
adc
pop
dec
push
outsl
cmp
lods
cmc
pinsrw
mov
repnz
lods
test
jg
rol
mov
xchg
stos
les
xchg
adc
push
lret
outsl
xor
push
jae
lods
push
nop
fwait
jo
outsb
sbb
jne
int
int3
adc
lods
fdivr
sub
hlt
lock
adc
addl
ljmp
es
and
test
adc
add
push
sti
fwait
xor
xchg
daa
xor
pop
dec
adc
setnp
and
ds
and
sub
out
aam
inc
jl
inc
pop
inc
lret
mov
std
push
shrb
push
or
mov
orb
mov
mov
or
jb
fildll
repz
mov
xchg
mov
inc
insl
pushf
fstpl
pop
cmpsb
sti
aaa
xchg
pop
sub
addr16
sbb
pop
xor
pop
and
mov
mov
ret
clc
jbe
lods
repz
rcrb
mov
cld
mov
add
cld
pop
mov
imul
leave
and
rolb
adc
jmp
nop
imul
lea
mov
xchg
test
xor
inc
bound
push
call
xor
filds
addr16
mov
sbb
xchg
lea
movsb
fwait
fs
roll
or
mov
popa
gs
dec
fcmovb
icebp
mov
lods
int3
mov
cmp
scas
sbb
mov
xor
jo
mov
dec
push
les
fwait
or
cmpsl
pusha
add
sub
dec
or
jle
aas
xor
cmp
insl
inc
pop
mov
mov
inc
mov
or
inc
jb
cmp
in
cs
mov
inc
or
sub
packssdw
iret
adc
mov
adc
in
in
inc
ss
push
mov
out
cmp
sub
sbb
jmp
sub
dec
add
test
lret
mov
das
jb
dec
or
or
and
sub
rolb
xor
push
mov
aaa
adc
lea
jnp
and
sbb
in
mov
cwtl
and
jecxz
pushf
scas
insb
sbb
xor
ficomps
push
cld
push
and
dec
cmp
pop
xor
dec
push
lret
push
mov
dec
js
shlb
into
cmp
fists
mov
lods
sbbb
jmp
sub
fiadds
jmp
jmp
lea
clc
or
pop
lea
add
xchg
mov
sbb
lods
insb
sbb
pop
pop
loop
and
dec
jns
outsb
shll
sub
jne
inc
add
mov
loope
push
xchg
dec
enter
lret
aas
icebp
sbb
inc
popf
inc
mov
xchg
lods
mov
dec
cmc
jecxz
les
mov
lea
rol
addl
stos
push
xor
sub
xor
test
jae
ljmp
pop
enter
js
sahf
adc
xchg
xchg
xor
sbb
xor
aas
pop
test
pop
jae
pop
iret
aas
ljmp
sahf
int3
push
lcall
mov
or
push
data16
lea
icebp
mov
jne
fistpll
test
popa
dec
or
icebp
inc
lock
sub
shll
in
das
mov
adc
add
or
add
add
pop
mov
in
jnp
outsl
dec
add
std
cmp
repnz
in
clc
rol
in
cmp
and
dec
jp
lods
mov
dec
out
add
push
add
mov
movsb
out
stc
cwtl
sahf
and
bound
xor
mov
es
ljmp
paddb
sub
notl
scas
adc
mov
inc
pop
jl
cmpb
jmp
and
jge
xor
mov
cltd
cmp
pusha
pusha
cltd
in
and
dec
xchg
js
sub
insb
pop
sbb
aas
in
outsl
adc
adc
push
inc
push
pusha
push
fs
outsl
add
ret
scas
mov
cltd
mov
ret
movsb
push
gs
rcrl
or
dec
adc
es
lret
fs
inc
adc
pop
push
dec
pop
cmc
dec
jb
add
sbb
jae
movsl
enter
out
sub
sbb
es
sub
cmc
sub
add
pop
outsl
sub
inc
frstor
add
push
inc
dec
and
loopne
bound
inc
popf
add
jl
andl
test
xor
adc
scas
vxorps
xchg
push
lea
push
out
scas
cs
in
sahf
xchg
shl
adc
pop
lock
cmp
xchg
ret
in
rolb
sbb
out
xchg
clc
aam
jl
cwtl
mov
sbbl
jmp
xchg
into
xchg
lret
movsl
jnp
iret
hlt
mov
mov
pop
mov
push
inc
pop
fisubrl
stos
jge
dec
xchg
sub
adc
mov
pop
das
xor
shlb
sbb
jns
daa
inc
adc
push
lret
inc
das
mov
xchg
mov
das
lret
xor
adc
sbb
cmpsb
cmc
out
inc
neg
xor
add
mov
jbe
insb
inc
dec
ret
roll
mov
adc
adc
mov
aam
enter
cmp
jecxz
fcompl
in
jns
out
test
sbb
mov
cmp
repnz
inc
sub
fstpt
test
pusha
sbb
popf
mov
lcall
mov
push
es
and
xor
adc
and
icebp
negb
pusha
and
iret
adcb
push
stos
xchg
cmpl
arpl
aas
xchg
or
cmc
es
xchg
ja
mov
jb
dec
pop
outsl
mov
lods
movsb
popa
adc
movsb
push
xorl
sub
insl
cli
pop
inc
dec
mov
cmc
jo
mov
fidivrs
std
push
cli
test
dec
adc
sbb
push
test
test
rol
out
fs
xchg
ljmp
cmp
stc
xchg
jns
add
stc
add
mov
mov
inc
mov
in
jae
push
add
popa
cmp
or
das
aad
addr16
xor
lds
inc
pop
icebp
aam
fsubl
stc
stc
cmp
popf
ja
inc
lret
cmpsl
xlat
and
repnz
pop
sbb
jno
stc
out
jb
test
clc
gs
and
ljmp
mov
insl
jnp
xlat
cmp
sbb
loope
lock
jle
push
rolb
sub
ljmp
out
cli
js
adc
retw
aaa
imul
or
fmuls
xor
icebp
push
hlt
xor
out
clc
lret
enter
stc
or
aaa
fs
inc
aaa
das
mov
mov
fstl
push
and
call
adc
jne
mov
aam
jb
imul
xchg
fsubr
xchg
and
fadds
adcl
or
je
jp
mov
lret
stos
and
mov
lahf
push
or
int
dec
call
fistps
inc
divl
mov
pop
aad
xchg
xor
pop
xchg
xor
mov
lds
aaa
cmp
sub
pop
cld
sbbl
int
xor
xor
push
push
insl
lcall
stos
or
stos
iret
mov
popa
cmp
add
sbb
or
mov
push
or
lahf
call
xchg
repnz
pop
inc
cltd
mov
mov
sub
cmp
and
in
arpl
push
mov
aas
clc
inc
xor
mov
int
dec
mov
pop
stos
lds
leave
stc
xchg
insl
sbb
repz
cmp
xor
fildll
or
mov
lret
dec
mov
jecxz
jp
clc
jle
or
lahf
xchg
movsb
in
mov
and
mov
mov
aam
loopne
xor
imul
sete
xchg
in
stos
cltd
mov
ret
sub
push
adc
lret
movsl
and
jmp
mov
daa
jmp
in
out
xor
sub
mov
mov
mov
mov
and
inc
rcll
mov
es
mov
sub
into
jmp
mov
addr16
adc
ficomps
sbb
jmp
insb
pop
fisubl
push
movsl
fs
cs
sarb
cmp
push
enter
in
inc
inc
ret
mov
or
rorb
clc
mov
insb
repz
cmpsb
xor
pop
roll
xchg
sbb
inc
adc
rolb
or
hlt
push
push
dec
sbb
roll
xor
les
lahf
adc
outsb
subl
std
sahf
out
das
and
sbb
leave
scas
jns
or
dec
sbb
jae
clc
jbe
xchg
pop
sbbl
inc
mov
mov
call
mov
pop
pop
fwait
inc
pop
add
arpl
testl
mov
xorl
in
in
cmc
mov
clc
mov
fisttps
repz
and
push
xchg
pop
scas
pop
push
sbbl
pop
sbb
mov
jno
stc
cli
aaa
dec
lods
xchg
leave
cmpsl
lds
gs
xchg
fnstenv
pop
add
in
mov
mov
insl
xor
fstl
aas
das
or
or
add
push
or
jle
xor
sub
push
les
lock
jmp
leave
std
insb
xor
cmp
mov
dec
push
jbe
mov
jle
ds
fst
arpl
stc
mov
pop
in
adc
mov
mov
dec
xchg
fistpl
les
cs
jmp
mov
sbb
mov
insb
test
mov
dec
add
pop
test
cmpsb
mov
sub
push
stc
push
mov
sub
mov
cmpsl
sbb
sub
cwtl
xchg
and
sahf
xchg
das
js
inc
add
imul
cmp
mov
fucomp
xchg
push
push
lahf
lods
mov
jae
imul
lcall
lret
mov
jne
test
adc
loop
and
cmpsl
into
or
push
lea
enter
leave
jecxz
mov
xchg
pop
pop
dec
arpl
cwtl
or
movsl
fiaddl
fidivrs
ret
cmp
jg
mov
pop
mov
jmp
pop
or
fbstp
sub
test
or
xchg
movb
js
aad
movsl
jo
in
je
mov
sub
pop
repz
inc
xchg
cmpl
add
lea
add
into
dec
add
mov
dec
jge
jnp
pop
jo
and
jg
pop
dec
icebp
pop
push
push
or
inc
mov
jne
add
inc
rol
inc
movsl
xchg
mov
add
sub
mov
notb
test
mov
mov
xchg
mov
iret
sbb
loope
pushf
test
inc
outsb
xor
push
repz
cmc
test
jle
inc
lcall
inc
dec
nop
mov
and
push
les
cmp
lret
sub
mov
or
out
pop
add
repz
dec
pop
jl
sbb
stos
push
sub
pop
jnp
xchg
notl
ficoms
sub
jecxz
inc
ljmp
andb
fadd
popf
jg
pop
xchg
pop
mov
aas
test
cli
xor
cmp
rclb
mov
out
std
mov
mov
add
and
adc
dec
aam
pusha
stc
ficompl
dec
fwait
mov
mov
dec
push
or
aam
push
das
es
inc
fsubr
enter
xor
mov
les
lods
sbb
adc
sub
movsl
enter
test
sti
and
add
mov
insb
adc
pop
iret
push
mov
testl
repz
cmp
imul
pop
xchg
inc
mov
sti
mov
xchg
mov
cmp
lcall
or
mov
sub
cmp
jle
sub
sbb
jle
inc
shlb
jl
lods
scas
or
fst
mov
mov
cmp
xor
lret
bound
push
std
mov
jl
xchg
pop
xchg
je
in
ja
jo
imul
icebp
addr16
out
lret
scas
iret
mov
icebp
outsl
xchg
stos
fldl
or
mov
shrb
fistpll
pusha
popf
cmp
sbb
addb
movsl
mov
pop
jb
xchg
xor
lods
xchg
push
popa
rorl
ret
lcall
mov
inc
add
xor
and
repnz
test
pop
fsub
push
jns
cmpsl
clc
cs
push
push
mov
leave
lock
mov
mov
rcrl
push
sub
push
add
pop
xchg
cmp
std
xlat
sub
adc
insl
es
jne
subb
clc
cmpsl
sbb
push
lcall
xchg
sbb
lds
icebp
jae
pop
lea
mov
push
and
das
jns
pop
aam
mov
cmpsb
or
scas
mov
add
imul
in
sbb
and
scas
push
fcomps
mov
jge
or
and
cmp
push
btc
ucomiss
outsb
mov
add
ficoml
cmp
or
fists
add
loope
xchg
cmc
lret
out
lahf
dec
je
or
add
sub
xor
data16
mov
jp
gs
xchg
xchg
or
aam
test
xchg
mov
mov
andb
or
xchg
push
sahf
xor
into
mov
jge
or
xor
mov
push
lods
pop
fidivl
pop
mov
jmp
sub
in
rcl
mov
mov
mov
lods
inc
jecxz
push
or
pop
xchg
test
into
sub
stos
ret
push
cmp
sbb
stos
cld
and
cmp
xchg
cld
push
xor
xchg
lahf
scas
ja
mov
enter
in
mov
jmp
jecxz
xchg
fs
cwtl
xchg
mov
mov
mov
sub
lret
imul
sahf
les
adc
jg
aad
gs
std
loop
dec
shl
and
fcmovne
enter
push
subb
scas
pop
rolb
test
mov
add
jbe
ljmp
mov
fisubrs
adc
ret
out
inc
imul
popf
dec
mov
outsb
daa
ret
mov
dec
xchg
push
jo
sub
dec
pop
fs
and
sub
push
addr16
jmp
push
stos
push
faddl
leave
sbb
mov
rorl
daa
sub
clc
xor
das
cmpl
fsubl
mov
xchg
clc
js
shl
inc
mov
mov
pop
shll
cmpsb
pushl
loopne
sub
inc
data16
add
mov
jmp
add
out
bound
push
jnp
test
add
or
xor
in
jne
addr16
lret
push
xor
pop
stos
sarl
loopne
in
fdivp
xchg
enter
sbb
out
jp
fucomip
xlat
mov
push
jl
stc
fcomps
ds
jb
sahf
dec
xchg
mov
inc
mov
cmpsb
cmp
pop
mov
enter
dec
pop
mov
imul
jecxz
inc
out
cmc
add
adc
add
lds
inc
movsb
sbb
and
mov
xchg
dec
cmp
add
cmpl
mov
mov
pop
jae
popf
inc
test
pop
dec
sbb
cmp
sub
outsl
imul
sub
inc
popa
or
xor
jge
jl
popf
and
add
and
xchg
pop
sbb
pop
in
mov
push
repnz
repz
mov
pusha
mov
fidivl
jo
test
push
les
test
push
lret
subl
adc
add
sbb
pop
fwait
xchg
mov
push
ss
pop
enter
and
cmp
xchg
shl
ljmp
xchg
int3
sub
add
test
popa
cmc
in
cmp
mov
cli
icebp
das
adc
out
adc
inc
cwtl
mov
movsl
repnz
mov
xchg
xlat
and
mov
adc
and
dec
je
and
popa
sub
jne
inc
xor
arpl
sub
iret
rorl
or
test
imul
fcoms
popa
jno
and
fs
fnsave
xor
inc
sub
movsb
pop
mov
push
inc
stos
inc
ljmp
vmovdqa
std
cmp
sbb
out
jne
in
mov
pop
cmc
fistpl
mov
cmp
insb
mov
xchg
insl
pop
std
jbe
adc
xlat
push
mov
jp
hlt
sbb
fwait
mov
test
sbb
ss
out
leave
or
fcomps
icebp
sub
rol
pop
or
xor
fistl
icebp
pusha
inc
and
xor
xor
sti
sub
xchg
jl
jp
mov
movsl
subl
lods
inc
loopne
pop
clc
dec
dec
mov
and
pushf
and
xor
lcall
cs
dec
sti
dec
pop
shll
sub
and
dec
fisubrs
mov
mov
and
or
outsl
jmp
pop
insb
pop
or
push
add
sbb
cmp
and
je
nop
lcall
rcrl
jnp
mulb
pop
mov
test
lcall
xchg
xchg
jp
push
enter
dec
dec
dec
sub
int
lea
lcall
jno
fcompl
loope
ds
xor
ret
sub
fwait
fadd
mov
into
gs
mov
mov
bnd
mov
adcl
pushf
xor
dec
fcomi
fstpt
out
rcrl
sti
inc
fiaddl
mov
pop
jge
jbe
jecxz
iret
loope
sbb
lcall
mov
mov
cmpsl
inc
rcll
out
inc
or
mov
je
lahf
aaa
cwtl
inc
pop
rorl
mov
js
sti
andl
imul
mov
push
test
ja
sbb
int
sbbl
push
les
lds
adc
rolb
movsl
xor
int3
lret
repnz
gs
mov
or
xchg
xchg
sbb
adc
xor
fwait
inc
mov
jmp
decl
adc
or
inc
fldl
into
sub
dec
inc
cmp
or
sbb
rcrb
xchg
cmp
stc
bound
adc
out
adc
pop
mov
xor
rorb
sbb
jge
sbb
aaa
push
adc
pop
add
xchg
cmp
stos
enter
fsts
cmp
xchg
jns
adc
dec
leave
lock
lret
into
sub
js
sbb
push
and
jp
dec
arpl
std
sub
ret
imul
cmp
imul
push
push
fldl
mov
popa
pop
orl
in
shl
jae
popa
pop
aas
adc
add
divl
in
iret
sbb
into
xchg
ss
int
lock
jge
pushf
xchg
pop
aas
xchg
dec
hlt
out
and
jns
out
mov
shll
mov
ficompl
cmpsl
ja
test
aaa
xchg
repnz
and
ret
sub
lods
push
ja
int3
popf
mov
mov
push
outsl
xchg
mov
dec
inc
fidivl
fmulp
mov
pusha
push
inc
push
in
mov
arpl
pop
pop
scas
sahf
push
xor
jp
addr16
xchg
idivl
fxch
flds
mov
sub
inc
adc
mov
movsl
dec
cmp
les
and
test
sbb
sub
or
adc
clc
dec
rorb
pop
dec
or
dec
clc
daa
test
ret
cmp
sub
jg
cmp
inc
cli
or
jns
pop
jae
and
jo
fstps
push
add
sub
sub
adc
mov
and
int3
add
mov
xor
pop
test
lcall
or
cmp
sahf
mov
xchg
jg
jle
sbb
sbb
jne
mov
out
mov
scas
mov
sbb
jb
mov
hlt
mov
les
ss
pop
mov
jmp
loopne
jmp
aas
pusha
sbb
adc
sub
and
push
or
xorl
mov
imull
scas
fucomi
sub
clc
shll
xor
in
sub
pop
inc
stc
xor
xor
movsb
jo
loopne
mov
aas
inc
es
lret
repnz
mov
sbb
inc
sti
dec
mov
sarl
in
dec
mov
xorb
std
push
sti
and
pop
mov
sbb
aaa
ds
pushf
data16
scas
popa
push
ja
data16
mov
pop
and
push
repnz
mov
dec
aas
cmp
jno
aas
pop
test
lcall
lods
xchg
mov
mov
inc
jae
cvttps2pi
and
lods
das
pop
scas
scas
data16
xor
outsl
push
fwait
loop
stc
rcrl
dec
add
addr16
dec
dec
scas
popf
andl
inc
push
inc
lods
out
aam
fwait
jl
cmp
cmpsb
xchg
ds
stc
pop
lcall
mov
gs
inc
rcrl
lcall
pop
push
push
mov
sub
outsb
je
mov
adc
jecxz
pushf
xorb
ljmp
xor
out
outsl
push
fmul
ss
lods
or
cmc
lcall
and
sahf
dec
jnp
xor
push
test
mov
pop
lock
aas
test
or
dec
in
or
xchg
push
dec
adc
jl
dec
push
jg
mov
in
xchg
pop
push
pop
cli
inc
sbbl
movsl
adc
mov
sub
push
dec
mov
or
lahf
ljmp
movsl
cmp
adc
adc
negb
cmpsb
xchg
push
and
push
addr16
xor
into
test
mov
pop
push
inc
aam
rcr
pop
cmp
hlt
mov
mov
push
adc
pushf
sbb
das
inc
or
ja
cli
loope
mov
scas
jl
in
jne
fisubs
jne
cmp
shlb
adc
dec
mov
sub
roll
or
out
stc
sub
mov
inc
xchg
xchg
xor
lea
shl
xchg
push
enter
pop
aas
push
fs
mov
aas
inc
push
add
out
xchg
daa
cmp
pop
test
inc
adc
repnz
pop
cli
dec
mov
loope
xchg
mov
ljmp
out
mov
mov
jb
movsl
mov
push
sbb
sti
in
dec
popf
loope
add
adc
repz
cmp
xchg
push
jbe
mov
negl
insb
pushf
sbb
xchg
xchg
sub
daa
repz
sbb
addr16
in
fmull
ljmp
mov
pop
push
loope
dec
call
jnp
push
arpl
decb
popf
or
mov
dec
xchg
push
outsb
jmp
sahf
das
fsub
in
xlat
int
out
fists
jl
xor
inc
bound
addl
push
mov
mov
test
jne
xor
add
into
js
mov
popf
aad
sbbb
loopne
and
mov
or
rcr
call
inc
vpsubusb
insb
or
dec
push
imul
popf
rolb
iret
sbb
nop
mov
adcl
rcl
xchg
mov
xchg
popa
xchg
rorl
in
subl
lock
xor
xor
aam
pop
in
out
mov
or
int3
scas
mov
sbb
test
add
rorb
les
testl
ja
fsubl
xchg
sahf
xchg
push
stos
shrl
lahf
fdivrl
jnp
out
adc
jo
sub
inc
sub
push
inc
or
sub
mov
push
mov
inc
sbb
popa
push
aas
jge
lods
cmp
and
xlat
repz
dec
jne
jae
and
cld
push
jecxz
jno
or
arpl
int3
pop
stc
ljmp
shrl
pop
scas
xchg
int
push
addl
inc
pop
cmp
roll
call
mov
push
push
mov
and
stc
jecxz
movsb
out
mov
inc
dec
cmc
pop
jge
xor
je
mov
cmpsb
jg
lret
inc
mov
xchg
cmpl
pop
iret
push
in
lret
shrb
push
rcrb
cld
fisttpl
and
in
inc
push
or
cmp
jl
mov
loope
cmp
mov
jo
lahf
mov
ja
inc
cld
sbb
out
lret
adc
sbb
adc
cld
int3
aaa
cld
fstps
and
xchg
stc
mov
test
lods
aad
loope
rolb
jne
cmp
dec
jp
cld
cmpsb
push
aad
pop
xor
add
rol
clc
in
inc
lock
leave
fs
inc
movb
cmpsb
pop
pop
out
inc
fnstcw
addr16
orl
movsb
mov
dec
cli
adc
cmp
lds
fdivrl
int3
ljmp
dec
mov
scas
shl
fcoml
xchg
inc
cmp
adc
inc
test
cli
aas
mov
in
lret
sub
jae
jecxz
jne
mov
outsl
jmp
mov
add
enter
inc
push
aas
ret
aaa
int
fs
mov
aas
and
lret
popa
add
addr16
divl
cmp
icebp
cmc
fcmovnb
mov
push
insl
jns
add
jno
pop
push
cltd
cwtl
outsl
xor
je
fwait
test
or
jae
lods
jge
cwtl
mov
cs
xchg
test
inc
dec
dec
cmpsl
jge
xor
pop
ret
add
pushw
call
out
mov
or
mov
dec
or
pushf
inc
push
dec
push
andb
push
xchg
mov
pop
push
stos
das
insb
push
ret
je
add
int3
rorl
mov
neg
in
into
cmpsb
adc
pop
mov
repnz
mov
lea
sbb
and
fxch
into
icebp
fwait
xor
cmp
lea
aam
mov
xor
mov
shr
stc
ret
ss
sbb
sbb
adc
lock
adc
mov
stc
pop
sti
imul
aad
push
sbb
jecxz
mov
shlb
mov
add
test
xor
and
inc
pop
xchg
fcomi
bound
ret
fstpt
xor
adcl
push
sbb
aaa
push
ljmp
lock
outsl
movsl
pop
push
pop
popf
divb
lret
out
test
cs
jnp
lcall
ss
rclb
sbb
pushf
out
inc
int
scas
fwait
daa
dec
cmp
push
dec
push
lahf
jecxz
xchg
les
sbb
jle
and
sub
inc
cmp
repnz
fimuls
lods
stos
fistps
mov
cmpsb
std
jnp
sub
xor
lret
adc
test
fnstcw
pop
stos
repnz
imul
out
xchg
scas
fdivl
add
push
push
mov
nop
dec
add
or
ret
mov
repz
rorb
sbb
scas
inc
mov
jl
in
cmpsb
xchg
test
pop
cs
fldcw
out
cmc
out
pusha
push
inc
in
das
repnz
dec
cli
cmpl
out
loop
sub
jmp
aam
mov
xor
add
push
fdivrl
mov
mov
mov
or
cmpsb
fisubrl
int
jbe
inc
aad
lock
cli
lahf
jp
mov
movsl
je
xchg
pop
in
cmpsb
bound
add
arpl
pop
mov
pop
adc
pop
andl
in
shll
mov
mov
mov
push
ss
pusha
mov
data16
scas
pushf
sub
mov
xor
inc
push
fs
push
jbe
js
jns
sbb
or
fucompp
inc
in
xchg
cmp
jge
dec
adc
test
mov
out
pop
mov
pop
mov
lds
into
in
inc
fldcw
pushfw
in
or
inc
icebp
xchg
or
or
mov
test
dec
scas
out
std
pop
je
int3
add
adc
sub
stos
and
js
std
mov
add
sbb
popa
jae
shrl
sub
sbb
sbb
or
movsl
jmp
xchg
out
jl
sbb
roll
mov
ficoml
divl
aas
sti
mov
dec
and
rcrl
mov
call
popa
xor
imul
lds
and
sti
out
adcb
pop
and
adc
push
xchg
sahf
dec
jmp
fst
and
mov
outsb
mov
sub
les
sbb
and
mov
jns
loop
test
pushf
ficomps
inc
sub
or
movsl
jae
jno
xor
push
rclb
adc
jo
adc
mov
dec
lods
rorb
inc
mov
mov
andb
add
inc
sub
stos
cmpb
lret
adc
jl
movsl
imul
push
or
inc
xchg
mov
cmp
call
imul
pop
les
test
repz
in
xchg
xlat
xchg
int3
pop
jl
mov
jae
dec
inc
dec
je
jg
xor
in
sub
cmp
insb
cmp
pop
in
fnsave
scas
roll
jmp
int
jnp
pop
inc
imul
aam
sbb
mov
mov
ficompl
scas
adc
fs
xor
xchg
cwtl
pop
xchg
insl
mov
jecxz
lret
cmp
inc
sub
test
stos
sbb
imul
xchg
je
jecxz
mov
cmp
inc
mov
leave
inc
xor
dec
mov
xchg
push
lods
xor
jmp
push
or
not
std
cmpsl
push
sub
pop
das
xchg
nop
shrb
jo
arpl
hlt
lock
cmp
insl
cmpsb
or
lea
jae
insb
in
mov
push
lea
dec
push
or
lahf
mov
push
icebp
push
jne
jns
pop
aas
jle
pushf
out
je
das
push
loope
inc
jb
dec
inc
mov
push
and
sub
mov
das
push
inc
inc
inc
iret
dec
aas
jecxz
adc
enter
ja
iret
fildll
inc
jge
fdivs
sub
repnz
xchg
sub
sub
add
je
sbb
int3
dec
cmp
mov
cmp
push
jle
dec
std
rclb
sbb
sbb
adc
and
repz
inc
pop
ss
stc
jecxz
loop
mov
in
xlat
scas
mov
fidivl
dec
cs
test
in
fsubp
cli
movsb
fsubrs
inc
inc
imul
dec
daa
nop
xchg
sub
and
enter
cmp
cmp
mov
movsb
imul
iret
ljmp
inc
mov
daa
inc
in
popa
add
cmp
push
aas
mov
pop
pop
push
movsb
psraw
loope
mov
xchg
ret
ret
cmp
cwtl
jnp
in
dec
movb
sub
les
arpl
mov
stc
inc
test
in
cld
xchg
call
rolb
es
int3
xchg
and
not
mov
mov
sbb
adc
int3
ljmp
stos
call
xchg
mov
das
int
mov
adc
push
lea
lds
adc
and
rorl
pop
bound
repnz
inc
inc
mov
jp
scas
mov
jl
mov
jle
mov
in
adc
xchg
test
mov
mov
cmp
cmp
xchg
mov
lds
mov
pop
adc
mov
jmp
dec
push
test
mov
or
mov
scas
incb
cmp
shl
andl
loopne
cmp
andb
or
xor
xchg
dec
and
popf
gs
pusha
pop
xor
xchg
fsubs
sbb
es
test
rclb
test
lods
into
lret
mov
mov
fidivrs
dec
dec
outsb
xor
sub
cmp
cld
out
ret
adcl
cmp
xor
mov
idiv
ficoml
lods
clc
lret
scas
cltd
sti
or
test
mov
cltd
pop
xchg
push
out
add
mov
shll
push
cmp
test
scas
cs
int
xor
js
incb
stc
sbb
inc
and
inc
stos
lods
sub
sub
or
mov
ja
ret
and
push
push
xlat
scas
dec
out
out
mov
addb
push
fs
xor
adc
pop
fbld
mov
mov
rcll
mov
and
push
mov
ret
movsl
mov
cmp
mov
rorb
or
cld
xchg
iret
call
adc
stc
push
fsubrs
mov
xor
repnz
push
sbb
pusha
sbb
stc
aaa
adcl
push
dec
adc
inc
mov
sti
inc
or
shll
ja
loopne
fbld
sbb
cmp
sub
cmp
scas
cmp
les
add
mov
popa
cmp
test
frstor
popa
mov
fstpt
stos
push
insl
xchg
pop
jle
jo
jl
cmc
aam
loopne
lret
fstps
inc
cmp
movsb
lods
out
dec
push
push
mov
dec
cmpsb
or
pop
mov
testl
xor
jl
xchg
jecxz
sbb
xchg
mov
scas
pop
inc
sti
fsubrs
cmp
enter
push
xor
inc
pop
je,pt
cmp
xchg
shlb
push
xor
jbe
mov
insl
push
incb
inc
cltd
repnz
jp
cwtl
and
and
ja
shll
mov
idivb
cmpsb
add
cwtl
sbb
sar
jmp
jnp
dec
mov
rcrl
mov
repnz
ljmp
sbb
addb
xchg
cwtl
jo
outsb
int
push
jne
aas
in
mov
out
sub
lahf
push
mov
std
jbe
shr
or
sbb
negb
repz
out
xorb
and
cmp
xchg
test
xor
icebp
inc
push
cli
flds
dec
and
pop
xor
stos
mov
repnz
insb
lods
aad
mov
pop
cmpsb
fcomps
stos
fucomi
mov
ljmp
iret
mov
hlt
sub
fildl
scas
inc
xlat
aas
stc
pop
mov
xor
ja
mov
insl
xchg
mov
out
jl
push
ret
lcall
sub
cli
aad
xchg
jb
pop
inc
xor
loope
insb
or
mov
sbb
fdiv
not
cmpsb
or
pop
inc
lret
lock
xchg
outsl
push
dec
mov
fidivs
push
les
and
lahf
je
das
clc
sti
pop
lds
or
aaa
cmc
pop
push
xor
inc
cld
adc
test
in
scas
and
pop
aad
fs
mov
push
mov
xchg
test
mov
and
xor
sub
mov
cmp
jge
out
push
inc
fnstenv
stos
insl
sub
fs
push
inc
scas
arpl
xchg
and
cmpsb
inc
xor
mov
xchg
adc
outsl
xchg
call
aas
shll
sub
xchg
std
stc
pop
std
push
dec
inc
lods
mov
mov
ds
inc
imul
jmp
cmp
xchg
pop
fimuls
dec
lahf
fiadds
mov
add
jp
es
dec
mov
rcrl
pushf
push
jecxz
scas
jle
xor
push
incb
mov
popf
ret
add
xor
fstpt
arpl
in
fdivrl
inc
pop
inc
add
ljmp
aaa
dec
cld
repnz
push
pop
inc
fisubrl
lret
or
ror
cld
test
and
jg
arpl
mov
or
aaa
push
sbb
int
push
loope
mov
cmp
inc
inc
ret
inc
shr
orl
sbb
mov
sbb
cmp
lds
loope
jae
cli
inc
inc
nop
mov
repz
push
jns
push
int3
push
ja
pop
jmp
lods
adcl
xchg
fs
mov
andb
fs
mov
repz
jmp
inc
mov
push
sbb
xor
push
mov
cmp
adcb
enter
jno
scas
out
dec
cmc
push
push
xor
jecxz
add
xor
xor
dec
jmp
mov
xor
roll
mov
shlb
xchg
mov
cmpsb
shll
and
push
sarl
mov
xor
mov
cmc
ds
lods
add
sbb
jbe
insl
inc
lock
xchg
and
or
xchg
xchg
hlt
jecxz
roll
pop
inc
or
sbbb
xchg
test
rol
xor
dec
xchg
mov
clc
repnz
das
loope
cmp
jo
push
in
push
mov
rclb
adc
adc
mov
mov
jb
mov
xchg
jnp
xchg
popa
les
add
xchg
popf
add
dec
cwtl
aas
push
scas
push
inc
add
lods
inc
adc
adc
mov
in
xchg
dec
and
xor
mov
loope
subb
pop
sub
shl
test
outsl
xchg
test
add
mov
inc
jns
scas
adc
push
lods
jge
dec
push
ss
mov
pop
xor
std
clc
mov
jb
and
sub
aam
insl
mov
inc
cwtl
or
roll
and
in
test
sti
add
fdiv
in
arpl
or
fdivs
pop
sbb
enter
xchg
cmp
cmpsl
cwtl
data16
cmovp
mov
xchg
movsb
andb
sahf
mov
and
inc
rolb
cmp
popf
jg
mov
mov
aas
orb
roll
dec
dec
lock
pop
mov
mov
mov
xchg
loop
sub
jae
pop
je
shl
adc
aaa
push
and
adc
int
sub
sub
lds
or
xchg
mov
in
adc
xchg
stos
xor
mov
mov
pop
leave
mov
nop
shrl
and
mov
pop
repz
arpl
push
jnp
push
outsb
add
push
push
shrl
push
xchg
int
mov
mov
ficomps
int3
add
lock
loope
inc
jmp
cmpsb
or
mov
insb
or
jl
lret
adc
push
insl
in
xchg
push
add
arpl
sbb
dec
iret
mov
and
sar
cmp
add
das
les
std
mov
sub
mov
frndint
push
mov
aaa
mov
in
pop
mov
push
push
fbstp
or
push
mov
addl
cmp
cmc
pop
fiaddl
enter
shll
scas
js
xor
inc
adc
pop
roll
sub
data16
mov
std
movsl
mov
dec
jle
pop
or
push
lret
mov
sbb
aas
pop
lock
push
enter
jge
rcl
iret
xchg
fucomp
sbb
pop
push
sub
inc
sub
or
ss
js
or
les
push
inc
inc
in
aaa
lea
idivl
bound
adc
push
cld
jge,pt
push
add
aas
add
jae
sbb
dec
movl
sbb
das
push
out
push
out
xacquire
add
jl
lods
stos
in
test
add
or
mov
stc
mov
enter
or
sbb
mov
jb
xor
call
mov
mov
sbb
in
out
inc
imul
sub
int3
xor
addr16
insb
ret
mov
mov
imul
add
add
and
sub
stc
jp
lods
add
movl
flds
out
imul
pop
add
pop
mov
add
cmp
pop
in
ja
lret
mov
push
and
insb
xlat
pop
fldl
push
ffree
lea
stos
scas
addb
ret
sub
mov
pop
mov
mov
pop
sub
jae
ljmp
outsl
leave
xor
clc
cmp
or
divl
mov
scas
mov
in
mov
fs
iret
jae
orb
mov
lret
lds
mov
ret
orl
pop
mov
add
lea
aad
stc
pushf
or
out
sub
fwait
add
dec
ja
lock
add
xchg
push
arpl
push
cwtl
jg
decb
sbb
add
clc
ss
xchg
loop
bound
jge
lods
sbb
pop
je
nop
or
jmp
nop
mov
xor
jnp
xchg
mov
fsub
or
ljmp
xor
mov
push
fmull
outsl
leave
jbe
push
rorb
testb
mov
outsb
mov
in
inc
fcoml
xchg
movsl
pop
add
pop
lret
ljmp
outsb
pusha
iret
pop
or
mov
sub
pop
test
mov
aaa
inc
adc
mov
xchg
repnz
roll
mov
dec
mov
sub
sbb
push
mov
cmp
jg
test
mov
sub
ret
repnz
mov
push
xchg
sahf
stc
xor
cmp
jecxz
mov
mov
fisttpll
sub
mov
stos
insb
xchg
les
shr
mov
push
sbb
xchg
adc
loope
repnz
mov
pop
mov
es
test
pop
inc
call
pop
cmp
unpckhps
add
enter
push
es
sarl
cmp
and
pushf
mov
test
or
loopne
rcr
mov
pop
inc
pop
xchg
test
lcall
les
xor
pop
insb
ja
orl
and
jnp
rcll
push
std
push
bound
out
jmp
out
enter
test
mov
adc
int
add
push
mov
cmpsl
pop
jae
mov
ja
mov
sub
aad
push
mov
jne
nop
adc
add
sbb
pop
in
addr16
stos
sbbl
sti
sahf
mov
imul
mov
sbb
jge
cs
fs
int3
leave
xchg
mov
ret
mull
inc
stc
cli
pop
fisttpl
imul
inc
push
jmp
pop
pop
lods
shlb
ljmp
mov
xchg
sbb
scas
xchg
adc
jmp
xchg
movsb
mov
inc
sub
lods
jnp
imulb
shl
pop
sub
and
adc
cmpl
rcrl
cmp
xchg
sub
rcl
in
inc
mov
and
nop
js
xor
test
inc
xor
and
pop
inc
mov
sbb
mov
loope
mov
movsb
out
inc
adc
pop
mov
out
mov
gs
pop
jns
rclb
pop
rorl
add
icebp
cli
mov
xchg
pushf
dec
imull
pop
pop
jnp
scas
jmp
loopne
inc
shll
mov
adc
and
jge
xor
repz
mov
and
mov
outsb
and
pop
mov
shl
dec
cmc
xlat
cli
add
cmp
lea
cmpsl
testl
arpl
imul
xchg
jae
je
adc
sbb
fiadds
xor
push
dec
and
stc
cltd
lods
adc
push
outsb
cs
push
stos
imulb
pop
lods
sbb
and
pushf
xor
dec
sub
xor
xchg
push
call
inc
push
fistl
mov
jnp
xchg
mov
fnstcw
push
test
sub
mov
filds
mov
aaa
rcr
inc
cmp
int3
cmc
add
repnz
sub
clc
imull
or
inc
mov
cltd
imul
xor
frstor
movsl
mov
mov
adc
push
hlt
out
or
and
hlt
pop
pop
mul
fs
or
sbb
aaa
cmp
shl
adc
aam
ds
jecxz
out
les
ljmp
mov
sarl
dec
ret
jo
pushf
pop
cs
cmp
mov
ds
ljmp
cmpsb
dec
push
mov
in
or
push
inc
jle
ret
cs
hlt
lahf
arpl
add
pusha
test
movsb
enter
jmp
loopne
sbb
dec
jmp
adc
stos
das
cltd
pop
xchg
test
filds
adc
mov
mov
stos
aaa
outsb
lods
or
mov
aad
js
dec
pop
jb
shlb
jge
call
dec
pop
outsb
data16
lret
jmp
add
aas
or
lods
xchg
xchg
and
inc
jns
fwait
aaa
and
imull
mov
repnz
lret
mov
rorl
fsubs
sub
mov
mov
xor
mov
dec
imul
mov
mov
xor
cmp
ss
pop
xor
push
xor
dec
iret
xor
gs
jle
or
xchg
mov
nop
rcll
push
insb
inc
push
pop
inc
insb
lahf
xor
mov
add
xchg
outsl
gs
mov
sub
and
sub
mov
stos
inc
shlb
out
cmovno
loopne
or
xor
lcall
test
jno
jmp
mov
sti
repnz
out
mov
lds
or
out
pop
lret
daa
int3
les
lock
insb
cmp
test
stc
push
inc
scas
add
add
sbb
mov
jl
inc
mov
test
and
cltd
loope
aaa
call
rolb
aas
adc
mov
in
sahf
dec
shl
mov
and
loop
xchg
adc
divl
in
add
out
je
or
jbe
pop
int3
adc
in
sbb
xchg
pushl
add
mov
mov
loop
ja
sub
sahf
enter
sub
fstpl
mov
mov
xchg
outsb
frstor
loop
sub
mov
xchg
cmc
sub
dec
push
and
outsb
mov
ds
mov
sahf
xchg
pop
ds
imul
sbb
frstor
mov
inc
outsl
jle
xchg
lea
push
sbb
mov
pop
je
and
sbb
in
jl
fidivrl
movsb
aam
scas
sub
pop
inc
daa
and
sahf
stc
pop
jp
hlt
out
icebp
mov
popf
lock
cmp
mov
xlat
sbb
push
insb
mov
shrb
les
mov
adc
sti
pop
mov
xorl
dec
push
inc
enter
push
inc
out
outsb
xchg
dec
insl
fmul
lahf
das
sbb
push
or
test
scas
cmp
dec
mov
or
jbe
and
pushf
pop
push
out
imul
adc
cmc
push
xor
jno
xor
pop
sbb
cmpl
popa
mov
fwait
out
test
push
repnz
adc
push
lcall
push
mov
push
fcom
sti
cmp
add
xor
pushf
xchg
dec
ret
insb
int3
xor
les
xor
outsb
mov
pop
mov
mov
mov
push
aas
push
mov
imul
sbbl
mov
xchg
push
xor
and
test
adc
nop
cmp
cmp
das
pop
mov
push
gs
add
stc
in
insb
xchg
cmp
stos
imul
lahf
call
mov
or
lret
sahf
cld
iret
pushf
mov
into
les
cmc
mov
js
repz
cmpsl
int
sbb
lcall
popf
add
mov
mov
sbb
lods
mov
fwait
pop
test
insb
hlt
loopne
mov
test
test
fildll
sub
and
lea
testl
adc
test
rcll
mov
sub
jl
iret
cs
mov
ljmp
jns
nop
leave
mov
xor
add
fwait
push
aam
sbb
push
push
je
out
int
mov
inc
add
xchg
loop
mov
push
ss
jo
pop
gs
rorl
fcomps
enter
dec
cli
ljmp
lea
sub
outsl
jne
cmp
pop
cmp
add
mov
daa
xor
mov
mov
cmpsb
lret
pop
xor
jmp
adc
xchg
fdivl
add
adc
pop
repnz
outsl
fmuls
hlt
idiv
std
mov
into
pop
loopne
lock
and
sub
cmp
mov
test
push
movsb
icebp
fisttps
cld
leave
das
xchg
xor
into
sub
fwait
mov
pusha
ljmp
mov
out
sbb
xor
hlt
and
pop
int3
rolb
inc
lock
inc
cmc
mov
inc
xor
xchg
mov
stos
jne
cmc
add
imul
divl
push
xchg
jnp
daa
es
push
les
push
sbbb
loop
comiss
push
pop
push
or
inc
push
xchg
testl
stc
leave
mov
push
testl
jp
and
jmp
inc
pop
inc
mov
std
dec
imul
imull
xor
xchg
imul
inc
inc
je
mov
jo
addr16
sub
xor
mov
mov
or
pxor
std
sarb
add
mov
sahf
stos
sarb
jnp
xor
sub
ret
jnp
fs
cmpsb
inc
into
stc
xor
pop
fs
sub
fbstp
ds
leave
xchg
jp
pop
in
sub
sub
sbb
aas
add
int
jp
mov
jbe
jo,pt
cmpsb
or
xlat
test
xchg
mov
insb
pusha
sbb
and
lahf
into
mov
stos
dec
popf
mov
lods
inc
gs
adc
and
bound
cmp
adc
aas
stc
dec
aaa
and
repz
faddl
push
cmp
insl
mov
jl
out
sub
xchg
bound
adc
sbb
mov
mov
cld
mov
xor
fcompl
scas
movsl
mov
outsl
pop
push
sub
xor
scas
mov
cmp
jns
lcall
std
out
push
xor
es
cmc
movsl
xchg
sub
ds
out
jnp
inc
mov
dec
lock
pop
popf
inc
xchg
jle
shlb
je
mov
orps
mov
add
movsb
push
add
addr16
shl
and
in
cmpl
jno
push
out
cltd
add
inc
repnz
in
xchg
xchg
pop
notl
mov
jg
xlat
jb
adc
lds
mov
out
mov
mov
aam
inc
jecxz
xor
test
xor
frstor
pushf
shlb
rol
cwtl
xor
dec
test
xor
jp
or
cltd
xchg
sub
xorb
xor
test
xor
cli
jge
push
sub
in
adc
imul
pushf
push
scas
test
mov
out
and
adc
test
jo
addr16
outsb
in
scas
and
ret
push
jb
and
loopne
pop
lahf
es
test
outsl
sbb
jg
clc
in
jecxz
mov
pushf
bswap
inc
sbb
mov
subb
xchg
push
lock
xor
addr16
mov
pusha
push
sub
mov
mov
cwtl
adc
xchg
cli
daa
cltd
lods
in
pop
sbb
add
add
mov
jne
pop
repnz
loope
jp,pt
lret
out
test
popf
mov
push
bound
jecxz
xchg
cmp
mov
and
insb
cmp
imul
mov
add
adc
cmp
aaa
lea
and
xor
rcr
sub
call
gs
inc
push
pop
cmp
sub
xor
jo
add
cwtl
jmp
stos
notb
mov
add
sbb
bound
lds
aaa
shr
fisubs
repz
in
out
stos
imul
cltd
in
push
or
add
dec
int3
ja
mov
or
ret
sarb
addr16
xlat
xlat
iret
sbb
cwtl
clc
iret
cmc
jne
lods
int
ret
mov
daa
loopne
flds
in
aad
mov
cwtl
pusha
inc
imul
in
les
xor
ret
cmp
test
mov
hlt
jo
lcall
mov
pop
enter
out
xor
cmp
pusha
cltd
mov
add
insb
movsb
insl
lods
mov
xchg
cmpb
out
cmpsl
pop
or
hlt
add
sub
fldcw
or
adcb
push
cmc
inc
mov
xchg
pop
fcmovbe
cltd
rorl
ret
adc
or
das
lods
mov
in
push
or
mov
test
adc
rorb
icebp
scas
hlt
orb
mul
adc
insb
adc
jo
push
cmp
or
push
add
cmc
push
sub
jbe
pop
stos
shrb
lret
jnp
sub
mov
fnstenv
in
cmp
movsb
sahf
lods
out
lcall
dec
mov
xor
jg
in
jns
dec
lahf
es
popa
sub
fildll
push
into
lcall
jae
adc
movsl
aas
imul
mov
sub
inc
inc
loop
mov
push
xorb
out
mov
andb
or
jge
pop
cmp
int3
lds
cmp
sub
pcmpgtb
inc
pop
mov
push
cmp
mov
xchg
xchg
adc
jl
fs
movsl
cmp
out
cmp
ljmp
aad
or
add
xor
sub
mov
add
iret
jb
cmp
aad
xchg
pusha
adc
outsl
mov
or
mov
xchg
pop
insb
enter
inc
sbb
iret
out
lods
cltd
push
in
in
xor
adc
jg
add
out
test
loop
cmc
aaa
xchg
das
sbb
rcl
mov
sub
jmp
into
pop
and
cmp
jns
ret
shl
jb
loope
cld
xchg
test
shl
dec
jb
mov
mov
out
jno
cld
pop
inc
cmp
mov
jns
push
and
mov
ds
mull
cmpl
dec
xchg
jae
lock
xor
loopne
repz
sub
shrb
dec
fstpl
pop
mov
sub
or
jp
or
popf
jns
rcr
mov
shll
popf
sub
mov
lea
or
sarl
rolb
inc
sbb
mov
jle
daa
int3
in
sahf
jnp
jge
test
sbb
fbld
std
cld
test
test
sub
mov
cmpl
jg
movsb
jo
int3
ljmp
pop
fdivrl
js
push
fwait
add
rcll
sub
cmpsb
or
je
mov
popf
cmp
fidivs
jle
jmp
pop
out
mov
sti
push
cmp
cltd
mov
adc
rorl
mov
into
push
clc
sbb
cwtl
add
push
mov
xlat
fnstcw
and
mov
mov
clc
ret
pop
ds
sub
mov
push
pushf
popa
cli
inc
aam
pop
add
push
mov
out
push
add
mov
mov
test
leave
xchg
mov
mov
fstps
jl
cmc
pop
jp
sti
nop
outsb
pop
icebp
cld
mov
sub
repnz
in
mov
popa
lea
jecxz
sub
mov
lea
orl
dec
jo
sahf
in
jo
jb
subb
jge
xor
xor
or
decb
fisttps
ljmp
xlat
jb
ja
ret
mov
lods
aam
and
push
xchg
jmp
mov
aaa
fstp
mov
and
fldcw
xchg
mov
hlt
dec
cmp
add
outsl
xor
cmc
out
add
or
aad
imul
js
adc
cmp
seto
je
jb
push
sbb
xchg
or
dec
sub
aas
pop
sahf
push
add
test
xchg
mov
xchg
xor
ss
cmp
data16
mov
sbb
mov
call
sbb
push
adc
repz
test
in
test
cmpl
ljmp
hlt
cmp
xchg
cmp
pop
insl
jge
dec
ljmp
pop
ja
pushf
stos
stc
cs
mov
test
xor
adc
jne
pop
cli
push
mov
hlt
and
mov
rclb
call
and
push
insb
ret
fdivrs
sarb
adc
adc
stc
xchg
push
add
ljmp
pop
mov
xor
or
and
mov
popa
bound
in
popa
cs
arpl
sub
jge
leave
pop
repz
fs
lock
in
xor
das
sahf
sahf
lcall
out
inc
mov
xor
sub
xlat
aad
mov
push
stc
sbb
scas
mov
xchg
cmp
xchg
mov
mov
orl
enter
mov
test
mov
sub
lret
mov
adc
jle
pop
shrl
mov
xchg
xchg
mov
out
sub
sub
mov
mov
mov
mov
mov
add
jle
inc
data16
std
out
cmpsb
add
clc
dec
xchg
stos
leave
jp
sti
xchg
adc
rcrl
sarb
mov
mulb
dec
dec
mov
fsubr
movl
inc
inc
mov
pushf
aaa
out
sub
dec
push
fbld
xor
in
filds
dec
cwtl
sub
jae
ret
shl
jae
cmp
or
aad
aas
jbe
xlat
gs
push
xor
add
cld
les
adc
adcl
andl
sarb
outsl
inc
aad
or
fsts
push
scas
lea
mov
cs
or
cmp
sub
mov
mov
js
in
das
sbb
loope
pop
push
adc
or
test
imul
push
insl
adc
cwtl
and
pop
xchg
repnz
pop
imul
mov
aam
pop
div
mov
int3
ja
xor
popf
shl
xor
xlat
je
xchg
aas
jo
sbb
stos
push
mov
mov
lahf
cwtl
adc
cwtl
mov
xlat
or
aam
imul
and
push
in
pop
js
dec
adc
mov
inc
stc
push
jl
fldenv
sub
push
adc
jle
push
push
insl
jne
push
push
je
mov
test
mov
mov
adc
subb
into
push
daa
fcompp
pop
mov
mov
movsb
ret
gs
push
inc
xchg
xchg
or
jp
outsb
adc
sbbb
jp
popa
adc
inc
mov
in
out
jbe
in
insb
jnp
push
mov
test
xchg
aad
inc
jg
push
jge
pusha
insl
addl
test
rep
repz
fldl
test
xlat
inc
scas
cltd
int
dec
imul
push
in
adc
aad
cmp
push
xchg
xchg
gs
mov
xor
mov
mov
mov
inc
sub
xor
jmp
sbb
xchg
cli
jnp
in
cmp
push
jne
dec
pushf
or
jne
sub
mov
in
lods
mov
cmp
add
fnsave
and
cmp
test
cs
aaa
pop
outsb
push
push
and
hlt
clc
testl
adc
gs
push
mov
test
mov
lods
scas
shl
movl
out
mov
adc
xchg
fsubrs
mov
sub
stos
pop
mov
lea
les
shr
mov
jae
push
push
lods
pop
xchg
shlb
add
cwtl
cmp
adc
inc
cmc
testl
jnp
sub
add
repnz
test
aam
test
es
mov
mov
sbb
daa
and
lods
pop
test
and
jmp
fucomip
cmc
adc
jno
cmp
pop
lahf
pcmpeqw
mov
xchg
jns
pusha
push
push
xor
in
mov
mov
pop
add
inc
sub
repnz
jae
or
jne
loopne
add
aas
rcr
xchg
jg
push
inc
jo
mov
mov
data16
xor
adc
push
das
mov
in
clc
out
cmp
xchg
pop
pop
fucomp
decb
pop
cmc
add
inc
mov
movsl
popf
aam
and
jge
idiv
idiv
sub
inc
in
fdivl
cmp
sbb
cwtl
fwait
cli
dec
arpl
lret
lds
jmp
cmp
cmp
or
inc
mov
popf
std
pop
inc
cmp
repz
mov
out
mov
or
push
iret
inc
cmp
jb
adc
xchg
dec
scas
add
out
into
lods
subb
testl
in
loopne
adc
push
jbe
call
adc
leave
test
pop
int3
add
xchg
inc
cmp
xorl
es
xchg
repz
sbb
mov
jle
or
push
nop
stos
shll
adc
fisubs
cmp
in
mov
pop
xchg
stos
lock
cmp
jg
rcrb
pop
inc
js
lret
mov
int3
mov
fsubrl
mov
push
mov
mov
cmp
imul
lods
mov
sti
in
mov
mov
ja
pop
push
cli
xchg
test
push
mov
insb
cmpsb
mov
xchg
dec
lahf
sbb
rorl
mov
dec
dec
stc
pop
fisubl
test
mov
mov
lahf
jne
fdivrl
xor
sti
popa
adc
xchg
mov
cmp
xchg
pop
fcoml
cmp
dec
mov
cmpsl
pop
xchg
push
fwait
cltd
lds
jnp
push
sub
fwait
pop
push
ljmp
cmp
aad
fdivl
sbb
fdivs
xor
ss
sar
paddsb
sbb
sbb
inc
inc
clc
hlt
repnz
push
mov
and
jle
stc
pop
into
adcl
lahf
test
pushf
jnp
outsb
mov
incb
add
aad
xor
daa
mov
xor
nop
ja
cmp
clc
mov
xchg
xchg
std
jo
int
stos
push
cmpsl
cmc
mov
je
xchg
es
les
xchg
inc
mov
mov
into
loope
adc
jge
nop
cwtl
nop
jne
sti
mov
pusha
xor
add
stos
mov
mov
adc
repnz
push
lea
push
adc
mov
or
in
rclb
fidivrl
xchg
pop
std
mov
push
pop
xchg
imul
cld
xor
push
addl
enter
rol
daa
pop
movsb
cmpsl
aam
loope
fcoms
jecxz
mov
shrb
test
sub
push
push
pop
mov
pushf
aaa
mull
xor
loop
cld
jb
mov
cli
hlt
in
pushf
stc
jmp
sbb
jns
rcrb
add
lcall
xchg
fsts
add
mov
add
xor
imul
sbb
mov
mov
das
or
pop
push
cmp
mov
fwait
ja
push
adc
or
popa
sub
pushf
jne
jle
sbb
rolb
xor
sbb
xlat
and
jae
pop
lahf
pushf
jl
fildl
add
inc
and
std
pop
inc
ss
mov
adc
subl
pusha
fsubrl
mov
int3
out
add
icebp
sti
sahf
pop
sbb
push
jg
imul
dec
dec
inc
inc
pop
cmp
cltd
jo
and
lret
leave
mov
push
fs
lcall
inc
mov
fdivs
pop
dec
dec
push
sub
xorb
mov
fstp
fnstsw
push
stos
imul
mov
arpl
aad
mov
mov
jle
aam
adc
mov
pop
and
in
cmp
adcl
jecxz
dec
or
sub
out
in
mov
push
dec
mov
mul
outsl
mov
fcoms
dec
pop
ret
xor
pop
loop
sbb
jne
or
repnz
mov
ret
cmpsb
and
ret
mov
add
testb
addb
shlb
push
fisttps
mov
rcll
imul
pushw
or
fiadds
pop
mov
jle
dec
xchg
push
pop
mov
xchg
jbe
push
add
pop
dec
outsb
enter
in
inc
sub
out
les
stos
fsubr
xor
push
lods
pusha
inc
shl
mov
cmp
fdivs
xchg
sbbl
cmpb
cmp
addb
mov
add
les
sbb
pop
hlt
jge
adc
jns
cwtl
mov
sbbb
pop
dec
mov
lahf
ja
cmpsb
dec
clc
pop
cmc
arpl
jno
sub
shlb
ljmp
fidivs
dec
ss
sbb
lahf
stos
int
shlb
add
pushf
loope
cli
pop
and
out
imul
pcmpgtb
ret
inc
ret
jnp
ds
mov
movsb
jb
insb
int3
lret
cwtl
push
inc
arpl
test
mov
adc
pusha
rclb
rcrb
adc
mov
pop
cmp
loop
loopne
.byte
mov
adc
xor
sbb
icebp
jp
pop
sub
out
sbb
daa
mov
inc
adcl
das
cwtl
add
call
loop
outsl
dec
loope
mov
cmpsl
xchg
add
pop
or
push
mov
cmc
out
popa
jnp
adc
aad
inc
fmuls
outsb
jo
adcl
cmp
test
and
dec
je
cwtl
fdivrp
inc
mov
adc
dec
cltd
sbb
in
lods
add
shrl
push
adc
jp
pusha
inc
inc
add
push
data16
add
inc
xor
test
lock
ret
pop
adc
mov
loop
inc
movsb
jl
out
push
mov
xchg
xchg
shr
mov
push
gs
jbe
mov
sahf
test
call
adc
push
enter
mov
push
xstore-rng
cmpsl
xchg
test
jno
cld
jecxz
setg
ror
sahf
pop
push
xchg
and
out
daa
hlt
mov
lea
cwtl
dec
cld
xor
add
xor
push
xchg
inc
pop
xlat
rcll
int3
sti
jge
mov
jp
xor
jnp
leave
inc
sahf
or
inc
out
test
xor
aaa
dec
hlt
cmpsb
xor
and
mov
inc
addr16
cwtl
push
pushf
sub
mov
sub
fs
sub
jnp
outsb
ja
mov
push
js
in
pusha
inc
or
sub
sbb
imul
push
fdivrl
sub
adc
mov
push
cld
xor
push
fdiv
push
clc
inc
mov
je
inc
movsb
pop
fsubl
stos
sbb
iret
xor
cmc
inc
mov
data16
sbbl
int3
add
mov
loope
or
push
jecxz
fists
pushf
and
jl
fistl
sub
inc
jle
sahf
int
pop
dec
in
cld
and
rolb
mov
loope
lret
fs
push
xor
cmp
rorb
lods
les
int
jne
loope
xchg
fsub
jb
xchg
dec
loop
bound
mov
dec
adcl
jp
subb
iret
or
lods
jmp
xor
aas
rolb
popf
int3
xor
rep
scas
xchg
and
paddsw
je
add
jb
arpl
mov
sarb
insl
call
mov
repz
pxor
mov
in
out
cmpsl
in
fwait
orb
std
ret
shlb
das
push
out
addr16
mov
mov
outsb
inc
mov
mov
sub
adc
aam
push
add
ret
xor
add
add
sub
in
mov
in
ljmp
mov
mov
gs
sahf
mov
mov
sbb
mov
int
cs
and
stos
mov
mov
orb
pop
or
dec
nop
lea
fldcw
test
fs
push
xor
jmp
jle
add
push
xchg
push
xchg
jae
mov
or
aaa
bound
mov
fs
loopne
adc
in
xor
inc
inc
pop
insl
loopne
leave
es
push
add
aas
pop
inc
adc
cli
mov
cli
pop
fsubl
dec
sub
adcl
sarb
out
pop
sub
fstpt
sub
jo
jno
xchg
lret
jne
jns
push
xchg
das
repz
leave
add
push
mov
test
mov
arpl
push
lea
stos
inc
jns
push
jae
sbb
repnz
push
scas
mul
je
mov
rcll
daa
ss
sbb
push
stc
mov
mov
lcall
arpl
testl
sub
psubq
fsubr
jle
clc
lcall
xor
dec
cmpb
into
sub
fs
dec
enter
scas
cltd
sar
adc
movsb
repz
pop
ja
xor
mov
mov
sub
xor
rolb
out
xchg
xchg
insb
sub
cmp
xor
fnstcw
pop
sbb
push
daa
hlt
jnp
push
xchg
xchg
adc
push
pop
push
jg
dec
icebp
push
fidivrl
test
fwait
inc
mov
push
push
inc
or
inc
das
out
in
cmpl
adc
xchg
test
mov
sbb
mov
lcall
cmp
xchg
in
loopne
adc
sub
mov
data16
adc
fwait
adc
dec
xchg
shlb
and
mov
mov
in
xor
mov
pop
iret
inc
dec
lret
fldcw
dec
mov
stc
jne
push
dec
stos
mov
data16
pop
dec
fisubs
xchg
dec
dec
movsb
fldcw
sub
je
cmp
dec
mov
dec
mov
ss
pop
mov
and
mov
mov
push
dec
push
push
pop
test
pop
mov
xor
xor
cmpsb
fnstsw
mov
mov
fidivs
fnstsw
iret
clc
outsb
jno
bnd
mov
stos
push
pop
cmovge
enter
jp
insl
sub
xor
outsb
mov
xor
pop
repnz
mov
mov
sarb
je
or
push
push
call
cmc
in
fsub
rol
cld
stos
ja
add
sahf
sub
mov
pop
xor
imul
ljmp
fs
xchg
push
mov
cmp
fimull
xchg
or
adc
inc
aam
cmp
int3
shrb
xchg
mov
xchg
mov
mov
or
adc
sbb
inc
das
mov
push
mov
mov
shrl
test
and
adc
icebp
test
xor
lahf
pop
fdivrl
aas
loop
mov
cld
push
mov
inc
loop
dec
mov
clc
bound
mov
fmuls
bound
dec
xchg
push
insb
adc
adc
pop
xor
mov
dec
add
outsb
fs
out
add
or
sub
imul
int3
lret
test
cmp
add
lock
xor
int3
inc
or
dec
push
sbb
into
xchg
lea
dec
mov
pop
test
mov
xor
cld
jno
jp
repnz
repnz
and
bound
stos
and
in
mov
mov
jne
jbe
clc
nop
cmpsb
xchg
pop
aam
and
xor
adc
or
and
addl
jne
mov
or
nop
xchg
and
adc
pop
and
bound
hlt
rolb
sbb
cmp
cmp
imul
dec
scas
push
bound
inc
or
sub
sbb
mov
sbb
clc
cmpsb
rorl
scas
pusha
and
fstp
sarl
mov
mov
hlt
push
dec
in
das
and
lods
icebp
int
pop
stos
xchg
mov
sti
fistps
sarl
loopne
cmp
sub
call
sahf
add
divb
ds
inc
push
inc
out
adc
outsl
dec
leave
xor
lret
aad
fisubrs
sub
mov
pushf
int3
repz
ja
test
jo
dec
data16
ljmp
jmp
xor
mov
sbb
fs
sub
cmp
stc
lods
ss
push
mov
sbb
mov
frstor
test
mov
add
dec
push
add
jnp
stos
aam
lcall
sub
add
jnp
outsl
and
and
scas
adc
pop
in
cmp
xor
adcb
push
mov
outsl
dec
xor
or
xor
jnp
out
test
jo
xlat
add
insl
fsts
popf
bt
push
outsb
sbb
mov
or
sbb
and
xchg
les
movb
cli
repz
outsl
sbb
inc
add
jmp
cmp
cltd
scas
push
sbb
lret
sub
or
mov
dec
in
mov
addps
jbe
mov
jmp
inc
lret
mov
ficoml
fidivs
cmp
movsb
test
sbb
jp
movsl
into
loopne
aad
or
insb
sti
fs
pusha
push
inc
cltd
jp
pop
dec
lret
xor
rcrl
mov
mov
cmp
push
or
mov
stc
mov
dec
popf
adc
test
adc
inc
das
mov
xchg
fadds
aaa
addb
daa
xchg
mov
mov
xlat
pop
jecxz
ljmp
dec
add
push
addr16
lahf
or
enter
or
jecxz
repnz
xor
or
cmp
mov
pusha
push
in
cmp
mov
leave
inc
pop
dec
int
cmp
mov
dec
iret
lahf
xchg
pop
in
mov
popl
xchg
cmpl
jecxz
mov
dec
rep
imul
or
mov
xor
pop
adc
aaa
fs
mov
fcomps
jecxz
aas
xchg
dec
inc
adc
cmpl
in
mov
leave
sub
rorl
push
jg
notb
jmp
add
dec
push
dec
adc
push
in
enter
call
fcmovne
iret
mov
imul
mov
out
mov
add
rcll
adc
xor
cmp
or
inc
dec
out
add
loop
xchg
mov
push
sub
clc
mov
iret
xchg
lods
hlt
decl
ret
cmp
add
mov
sub
pop
scas
shrb
ret
or
or
pop
cs
inc
add
ret
mov
imul
push
ja
jae
int3
mov
push
cmc
push
cmpl
mov
xchg
in
mov
inc
sub
dec
or
or
ret
dec
cmp
add
sub
xor
cmpsl
loopne
mov
xor
xor
push
out
mov
mov
rclb
inc
hlt
fcoms
iret
ss
dec
sbb
cs
jecxz
adcb
inc
in
arpl
aas
stc
jecxz
ljmp
lock
xchg
push
and
push
pop
push
jne
jecxz
jnp
popf
and
push
pushf
mov
lcall
jle
or
dec
ds
out
jle
fcoms
cwtl
hlt
mov
sbb
pop
mov
arpl
and
xor
adc
fwait
jge
pop
inc
std
test
dec
shlb
ljmp
mov
shlb
mov
stc
inc
inc
das
inc
push
pop
scas
pop
cmp
mov
daa
je
in
or
pop
mov
pop
inc
gs
sbb
jns
lahf
pop
sub
icebp
dec
mov
ds
xchg
jge
xchg
xchg
sub
xchg
aad
dec
mov
loop
dec
push
outsl
mov
pushf
test
cmp
mov
into
jmp
mov
mov
or
popf
inc
and
into
aad
inc
pop
and
add
xchg
and
xchg
mov
aaa
xorb
and
add
xor
lods
dec
bound
push
out
aaa
xchg
cmpsb
test
popa
jb
inc
iret
gs
dec
pop
test
push
cmp
sbb
and
cs
xor
xlat
fcompl
stc
mov
mov
push
out
imul
cld
iret
xor
mov
mov
adc
fsubrs
dec
outsb
xor
cs
ljmp
popa
dec
mov
addr16
js
imul
xchg
sbb
xor
outsb
pop
cmp
cmp
es
call
push
adc
xor
jp
movsb
outsl
ds
sbb
scas
popf
xchg
cmpsb
xlat
cli
jp
or
sub
xor
pusha
push
lds
ret
loop,pt
ret
js
mov
jl
cmp
stos
in
adc
call
int
jg
push
mov
mov
mov
in
jne
dec
push
mov
cmpsb
and
aad
int3
and
and
xchg
iret
cwtl
sub
pop
iret
dec
xor
inc
lods
pushf
addr16
add
jge
out
or
jne
scas
adc
out
pop
adc
or
rolb
jg
testb
inc
sub
sahf
cmp
shrl
roll
rcrb
int3
or
fildll
jge
jb
jbe
insl
ljmp
mov
mov
inc
cwtl
cmpl
clc
cwtl
ds
lret
.byte
lods
ja
sub
sub
inc
cmp
or
or
xchg
mov
push
push
in
rcr
sub
or
pop
mov
sahf
inc
out
loope
cmp
insl
popa
push
js
or
ret
sbb
mov
dec
ljmp
aaa
mov
jmp
ss
jo
aad
mov
aas
test
add
xor
jno
xchg
xchg
pop
inc
and
cld
jmp
cltd
mov
jl
daa
gs
inc
xchg
stc
push
rclb
mov
jmp
icebp
and
imul
add
push
lods
sar
cmpsb
xchg
xor
aam
sbb
mov
out
popa
mov
das
mov
mov
mov
pop
push
push
jp
push
push
cmpsl
shll
dec
outsl
fs
adc
mov
cmpsb
and
or
push
fucomp
pop
dec
repnz
call
arpl
insl
mov
imul
xchg
xchg
out
mov
insl
mov
fsub
xchg
inc
clc
fs
push
pop
nop
xchg
mov
movl
mov
and
fcmovu
inc
sbb
mov
call
test
push
outsb
flds
lds
repz
push
popf
loope
adc
movsl
mov
mov
jnp
xchg
xchg
inc
fdivs
in
js
out
mov
fsubs
sub
push
pop
cmpsl
std
or
fbld
add
testl
jae
mov
sbb
pop
lret
int
push
aam
fcoms
fisubl
mov
loop
xor
lods
sbbb
in
push
sub
sub
rcr
sub
mov
pop
jmp
xchg
adcl
dec
pop
imul
xor
push
repnz
out
icebp
xor
movsb
mov
es
pop
adc
or
cmp
or
sub
adc
pop
pushl
mov
dec
loope
or
test
mov
xor
rolb
jmp
mov
cwtl
jp,pt
inc
dec
sysret
lret
hlt
sti
pop
stc
inc
sub
pop
and
or
adc
mov
repnz
ror
mov
mov
sub
push
rcrb
sbb
insb
sbb
mov
std
inc
aas
dec
loope
shrl
lds
ss
cld
push
push
jnp
xchg
cli
push
scas
mov
push
xchg
pop
xchg
mov
xor
jns
shrl
add
movsl
mov
add
filds
and
mov
sub
inc
fldcw
repnz
or
hlt
mov
jmp
sahf
loopne
inc
test
stos
into
std
repz
subb
daa
lods
xchg
dec
loopne
std
push
mov
xor
jno
test
xor
cmp
adc
sbb
adc
dec
adc
xchg
mov
push
inc
xor
rcr
aad
dec
aam
aas
mov
mov
lea
ret
pop
xor
jnp
pusha
iret
insl
pop
das
jl
jge
testl
jne
pop
push
cmpsl
mov
pop
push
jo
gs
test
ss
sub
enter
mov
icebp
fcomps
imul
dec
xorl
cltd
les
enter
aas
sub
jbe
cmc
shrl
in
sbb
or
adc
mov
push
shlb
adc
mov
aad
jne
mov
sbb
jb
rorl
nop
test
pop
inc
mov
lods
lret
adc
fs
add
push
sbb
std
ret
dec
stos
jno
les
out
repz
loope
gs
or
nop
andl
aaa
fisttpll
xchg
add
mov
lcall
xor
sbb
nop
or
jg
inc
stos
mov
out
daa
loopne
cmp
in
xchg
jnp
push
mov
add
imul
lods
mov
push
mov
outsb
popa
sub
stc
sbbb
pop
ficoms
dec
sti
cwtl
bound
inc
lods
jl
inc
aad
lods
cmp
sahf
xchg
mov
dec
sti
mov
xor
cmp
xchg
negb
adc
jg
cwtl
jno
adcl
dec
imul
scas
stos
fidivrl
lret
jb
mov
mov
mov
js
push
jmp
xor
pop
adc
xchg
mov
cmp
scas
fistpl
mov
incb
push
stos
ljmp
mov
and
dec
sub
jle
jg
lahf
pop
mov
jecxz
hlt
pop
stos
ret
lods
in
dec
aam
rcll
xchg
xchg
ss
jl
add
xorb
sub
lahf
into
movsl
push
xchg
clc
bound
aas
jo
hlt
mov
jnp
mov
and
inc
das
ret
int3
andb
rorl
adc
cmp
int
xor
xchg
jle
mov
jge
lods
jb
leave
cmpsb
scas
jmp
mov
dec
sbb
add
cld
hlt
aad
mov
int
aam
std
repnz
std
or
jnp
lahf
out
pop
shrb
test
adc
sbb
jo
mov
jne
jno
cmp
lods
scas
or
jns
xor
jno
add
int3
lds
add
fldcw
jbe
lret
xchg
jmp
xor
lahf
jo
fwait
dec
and
mov
cltd
add
adc
inc
add
mov
ja
jne
fwait
inc
sahf
adc
mov
and
insb
cmpb
jns
in
add
mov
daa
call
dec
loop
dec
fsubl
fistpll
mov
push
mov
xor
cli
testl
int3
shl
hlt
out
push
xor
mov
pop
arpl
push
jae
shl
in
fdivl
jae
mov
adc
adc
out
mov
mov
mov
popf
mov
dec
sub
xchg
lock
dec
in
push
pop
fidivs
shl
push
dec
jge
lea
pop
jp
jge
and
and
mov
and
loope
popa
pop
in
inc
cwtl
sub
xchg
hlt
pop
es
fwait
sub
test
test
sbb
clc
test
jp
lret
stos
ret
xchg
cmp
divb
shll
or
mov
push
dec
out
dec
stc
dec
and
lahf
nop
dec
enter
lods
testl
cmp
std
aad
rcrb
icebp
mov
js
cmpsl
enter
sti
jp
dec
out
das
out
push
dec
cltd
mov
out
mov
shrb
popa
jp
jecxz
mov
push
jo
sub
dec
arpl
aas
xor
in
cmp
xchg
lahf
lods
push
sbb
dec
mov
jge
scas
cmp
data16
ja
sub
pop
add
cltd
mov
mov
and
cli
mov
jb
nop
mov
push
cltd
dec
sti
dec
sbb
imul
movsl
nop
cmpsl
jg
push
andl
in
fcoml
add
outsl
xor
or
adc
sbb
stos
mov
push
pop
out
lds
es
subl
jns
pop
lea
pop
jbe
hlt
add
xor
dec
xchg
dec
adc
ret
pop
into
pop
pusha
sub
and
jae
mov
cmp
jb
xor
fnstcw
jno
lret
call
cmp
adc
mov
inc
aad
add
pop
dec
adc
dec
and
fcom
adc
jnp
ret
add
lock
xchg
inc
rcrb
mov
pop
in
or
fdivl
rorl
inc
int
gs
popa
dec
xor
mov
xor
mov
imul
adc
je
inc
notb
push
or
mov
push
int3
pop
cmpsb
inc
mov
lock
pop
mov
es
and
cs
aam
pop
or
mov
sub
sub
fsub
cmp
dec
ret
addb
data16
push
std
jbe
out
jae
ss
mov
mov
xchg
cli
outsb
movsl
sub
roll
or
in
push
xchg
mov
jecxz
xchg
das
jb
enter
es
xchg
scas
addl
mov
jno
stos
xor
xchg
pop
and
ss
inc
aaa
and
andb
inc
sbb
add
push
mov
fistpll
or
stc
mov
movsb
dec
pop
sub
out
push
cmp
push
mov
or
movsl
ljmp
insb
push
jnp
pusha
es
push
xlat
dec
adc
sub
pop
dec
mov
lock
imul
pop
or
adc
dec
pop
xor
lods
adc
lret
cli
test
mov
sub
xor
pop
mov
lret
add
cmp
adc
les
mov
inc
jne
xchg
insl
fimuls
aam
mov
rorb
pop
inc
push
shr
shrl
add
adc
xor
sbb
sbb
arpl
xchg
mov
mov
in
loope
test
movsb
cwtl
lahf
js
pop
mov
pop
cmp
inc
jb
xchg
xchg
std
sbb
xchg
xchg
cltd
mov
inc
outsl
cwtl
mov
fwait
cmpb
mov
js
push
mov
hlt
addr16
inc
or
lret
jle
data16
pushf
fincstp
lret
push
mov
xchg
cmp
ja
push
in
adc
out
xor
dec
in
loope
push
pop
mov
adc
sub
sti
jae
iret
xchg
lret
add
shlb
ja
cltd
mov
shr
call
int3
mov
jnp
push
push
inc
aaa
test
or
xor
inc
pop
cmp
orl
jmp
into
enter
mov
inc
push
jmp
sub
cmp
jmp
xlat
cmp
fnsave
push
std
ret
jns
movntq
jnp
mov
mov
and
xchg
or
jns
xchg
lret
lds
mov
mov
pop
jbe
inc
je
roll
in
inc
fdivs
sbb
mov
repnz
add
call
mov
xchg
mov
iret
orb
cmpsl
test
jnp
insl
cwtl
cmp
add
divb
fucomp
push
fxch
in
popa
ret
adc
xchg
adc
enter
popf
sti
adc
mov
inc
mov
loop
sti
aaa
gs
jg
mov
mov
or
int3
lods
in
imul
enter
sub
mov
sbb
and
pop
inc
das
and
das
push
in
bound
fs
cmc
in
xor
adc
outsb
sub
or
cmp
popf
dec
add
dec
aas
int
sub
rcll
imul
pop
loope
cs
inc
ret
sbb
mov
xlat
xor
mov
xchg
add
mov
daa
mov
and
mov
dec
mov
pop
fsubrs
xchg
shll
fildl
mov
mov
outsb
mov
jge
pop
pop
mov
mov
mov
inc
and
in
cmpsl
sub
cld
filds
out
pop
sbb
loopne
enter
dec
sub
sbb
dec
adc
pop
add
fidivl
loopne
pop
mov
push
push
xor
dec
sahf
es
scas
out
call
inc
mov
dec
repnz
adc
adc
mov
sbb
sbb
mov
jns
xor
in
jae
ret
lret
cmp
xor
subb
and
sbb
scas
mov
inc
push
sub
xchg
stc
or
mov
pushf
sbb
enter
ret
add
pop
inc
test
outsb
popfw
jmp
xchg
das
dec
fcoms
cmpsb
fwait
cmpsb
dec
inc
shlb
xor
push
xlat
xchg
repnz
pop
push
lock
inc
ja
or
sub
mov
imul
and
sub
js
repz
aam
sahf
mov
xchg
jno
rolb
out
shrb
add
test
pop
stos
add
xchg
xchg
popl
mov
lcall
je
cli
comiss
add
cs
xor
dec
sbb
sbbl
jns
inc
jae
fmuls
mov
mov
cmp
xor
pushf
and
leave
pop
movsl
aaa
aaa
adc
cld
call
jecxz
mov
mov
mov
loopne
xor
ja
or
mov
mov
add
xchg
jne
xchg
fadds
pop
bound
dec
mov
cmp
add
add
xchg
inc
aas
fs
cli
fyl2xp1
pop
pop
out
mov
inc
imul
movb
pop
dec
popa
mov
jnp
lahf
cld
movsb
dec
pop
repnz
insl
pop
jp
mov
or
mov
lock
fistpl
lods
xor
pop
pop
in
cmp
xor
push
popa
jmp
into
sti
movsl
imul
movsl
fdiv
imul
out
les
sbb
cmc
cli
jmp
loope
mov
or
orb
add
adc
push
bound
jp
ret
shll
and
pushl
gs
dec
cld
xchg
xchg
shrl
mov
cwtl
jge
jnp
jae
pop
jb
xchg
arpl
cmp
icebp
dec
inc
rcll
xchg
push
mov
ds
in
xor
mov
int
insb
cmp
xchg
outsl
xor
pop
cmp
xchg
andl
mov
gs
rclb
pop
jmp
adcl
dec
lods
sti
xchg
repnz
or
pushw
arpl
icebp
add
in
dec
cltd
iret
push
adc
and
test
cmp
leave
aad
inc
jge
cmpsb
shll
push
dec
pop
das
ds
movsb
mov
ficomps
pop
xor
add
or
rcrb
xor
outsl
lds
lret
sub
cmpsl
sub
jb
xor
pop
outsl
in
test
cltd
jecxz
movsl
and
push
cmc
clc
decb
repz
jp
jmp
ret
insl
jl
int
mov
fcmovb
in
push
or
inc
lods
clc
mov
pop
aad
addr16
mov
stos
mov
pushf
dec
add
repnz
jle
dec
pop
mov
jecxz
shlb
sbb
movb
adc
stos
scas
and
out
popa
sahf
loope
or
ja
data16
inc
aad
xor
adc
flds
inc
in
xchg
dec
push
test
subl
into
jb
jmp
addr16
mov
mov
mov
insb
mov
es
or
push
cs
out
add
pop
sub
mov
outsb
loop
push
add
movsl
icebp
es
push
insl
out
and
xchg
imul
mov
ret
rcrb
pop
ljmp
cmp
rol
cmpsb
cmp
push
and
mov
sbb
in
sbb
xchg
add
mov
jmp
aaa
push
and
mov
inc
sbb
mov
subl
xor
stos
xchg
push
fildll
jecxz
sti
mov
sbb
roll
jecxz
cmp
jmp
test
in
dec
stos
or
adc
jo
push
ffree
je
fwait
sbb
xchg
mov
xor
movsb
popf
nop
setne
cli
and
pop
cld
popa
or
and
das
das
scas
xchg
and
cmp
sarl
inc
dec
outsl
std
pop
ds
stos
and
push
imul
repnz
call
jbe
arpl
aas
mul
out
push
pop
loope
shr
test
push
nop
add
mov
push
cmc
adc
scas
mov
inc
xor
stos
jno
or
inc
pop
sbbl
sbb
jo
cmc
push
inc
popa
jnp
jo
inc
or
jb
ficompl
movsb
dec
pop
je
jp
sbb
jl
lods
dec
rorb
lods
orb
cmp
pop
shll
pop
cltd
lea
fisubl
call
dec
fimuls
xchg
addr16
enter
pop
mov
mov
daa
loope
lcall
les
adc
mov
sbb
popa
into
jo
adc
add
mov
ret
nop
jns
fisubrl
cwtl
jecxz
dec
popf
test
sbb
lret
pop
and
lret
fucomp
dec
imul
xchg
xchg
mov
push
sub
xor
int
jb
mov
pop
fldcw
outsl
mov
mov
mov
idivl
xorl
xchg
and
mov
mov
pop
xor
cmp
mov
xorb
cmp
inc
or
aad
add
ds
pop
cmp
movsl
dec
xbegin
ds
mov
fdivrl
movb
mov
nop
test
fs
push
sbb
sub
mov
inc
movsb
hlt
push
dec
das
pop
mov
insb
decl
dec
mov
pop
xchg
inc
xlat
test
add
fdiv
in
mov
sbb
cmp
and
loop
sbb
jb
xor
pusha
jne
incb
inc
int
in
jns
jecxz
lods
pop
dec
push
hlt
cwtl
rorb
iret
cld
xchg
mov
out
inc
jle
pushf
mov
fiaddl
sub
enter
in
cmc
daa
std
dec
dec
mov
sub
dec
out
mov
xor
inc
pop
jnp
pop
mov
shl
or
pop
jecxz
mov
mov
inc
sbb
or
cld
mov
push
imul
jo
xchg
or
mov
jne
jmp
mov
adc
aaa
jmp
scas
dec
mov
pop
ror
xor
test
push
cmp
rolb
xchg
insb
sbb
idivb
xor
xor
mov
in
scas
mov
mov
or
hlt
push
inc
lods
sbb
jbe
jne
mov
xor
pop
cld
pop
pop
xlat
rorl
dec
add
enter
scas
xor
dec
jmp
stos
stos
fld
mov
add
sbb
add
outsl
aas
or
das
icebp
xchg
enter
rcr
stos
adc
sahf
test
icebp
shrl
arpl
xchg
inc
and
bound
pop
cmp
push
push
add
lock
rclb
test
repnz
fs
or
push
cmp
add
push
lahf
jmp
bound
or
fistps
mov
xor
imul
mov
cld
inc
inc
pushf
ljmp
pop
cmp
jp
das
pop
les
cmp
loop
mull
mov
divl
add
add
loopne
fisubs
xor
or
lahf
add
push
orb
xchg
push
lock
repz
pop
mov
icebp
ss
scas
addr16
push
aas
imul
popf
mov
imul
push
lods
add
std
dec
gs
sahf
xchg
add
sbb
mov
push
lret
fidivrs
inc
add
dec
mov
jbe
and
cs
in
inc
out
leave
pop
or
stc
inc
push
cmp
mov
ss
ja
mov
mov
xchg
or
popa
inc
dec
js
test
call
pushf
and
sbb
pop
push
loopne
jno
ror
rol
sbb
pop
xor
out
cs
mov
mov
xor
pushf
jne
adc
mov
jne
enter
aas
cmpsl
addr16
add
stc
jp
mov
ljmp
xlat
jle
inc
sbb
push
jle
and
out
ja
push
sbb
cs
push
mov
aam
imul
jne
outsl
cmc
fidivl
hlt
sbbb
enter
add
data16
mov
jne
cld
push
iret
inc
cmp
sub
and
and
aad
les
xchg
clc
scas
sarl
inc
and
enter
or
cmp
stos
lds
out
mov
inc
gs
sbb
pop
cwtl
outsl
es
mov
xor
fwait
lock
pushf
mov
repnz
mov
fdivs
push
rcl
mov
sbb
inc
inc
outsl
mov
jecxz
out
out
scas
js
inc
mov
xchg
jg
lret
mov
cmp
pop
push
xor
cmp
jmp
icebp
jns
aas
cli
pop
aam
in
stos
js
pop
mov
add
sbb
add
shlb
dec
icebp
jmp
mov
and
sbb
jle
scas
dec
clc
mov
xchg
mov
shll
subl
sbb
in
shlb
xchg
mov
scas
mov
sub
jb
in
ljmp
lock
xor
or
in
push
mov
mov
jno
fwait
mov
inc
sahf
cmp
and
adc
sub
and
loope
xchg
and
nop
into
stc
mov
inc
inc
inc
sti
mov
mov
jmp
push
sbb
xor
and
mov
test
movsl
inc
mov
arpl
popf
orl
inc
lcall
sbb
pushf
jle
mov
mov
cmp
imul
push
push
push
decl
inc
push
jecxz
adc
xchg
or
data16
fstpt
jne
int
cmpb
testl
daa
aad
sub
bound
xor
cmp
test
xor
test
loop
movsb
or
mov
inc
jne
mov
outsb
in
add
dec
xchg
sub
hlt
pop
call
push
mov
std
dec
sub
mov
sbb
scas
in
shll
jl
mov
call
ret
in
and
test
pop
push
inc
cmp
leave
inc
fldcw
or
in
sub
insl
fst
test
add
inc
ljmp
or
pop
out
popa
adc
cwtl
adc
lret
sbb
and
stos
add
imul
aas
les
inc
shll
outsl
or
pop
sbb
shr
ss
jae
test
cs
xchg
ret
pop
mov
mov
out
dec
test
inc
icebp
pop
shlb
lock
stos
cld
inc
outsb
sbbl
rclb
cli
cmpsb
sub
loope
stos
insb
mov
cmp
sahf
hlt
pop
out
mov
out
mov
adc
push
sbb
xlat
imul
mov
fisttpl
adc
lret
push
cmc
out
add
lods
adc
aad
jle
mov
movsl
pop
and
out
sbb
xor
push
jmp
jp
outsl
push
gs
ljmp
add
orl
ret
or
lahf
xchg
ret
sub
not
add
pop
add
sbb
mov
jle
scas
in
push
imul
rorl
cmp
xor
pop
jae
cmc
sbb
push
subb
pop
adc
mov
fcoml
divb
clc
call
mov
lods
mov
sbb
jmp
outsb
inc
aaa
loopne
adc
mov
inc
xchg
add
sbb
lahf
addr16
lahf
dec
popa
push
pop
cmp
popf
sub
je
cld
push
in
mov
mov
enter
mov
pop
insl
pop
xchg
ret
mov
hlt
clc
ss
fldcw
rclb
sbb
inc
cmpsb
pop
in
mov
int3
jmp
loope
ljmp
xor
xor
pop
incb
xor
vmovntps
pop
mov
sub
mov
pop
fstps
jmp
push
fldlg2
sbb
mov
xor
cs
cli
jp
and
inc
and
add
inc
outsb
fnsetpm(287
call
mov
and
fwait
jge
jo
mov
jle
ds
dec
inc
clc
js
aaa
scas
jno
lahf
loop
add
das
rolb
adc
sti
sbb
xchg
adc
dec
hlt
add
cld
jnp
adc
mov
mov
mov
lods
out
fisttpll
mov
outsl
mov
ja
das
icebp
mov
push
cld
mov
jnp
and
jl
clc
cs
in
and
add
jae
inc
xor
ror
push
movsl
lock
inc
xor
ds
or
mov
cmp
cmpsb
andb
fs
popa
sbb
mov
push
mov
inc
aaa
adc
mov
jne
sti
call
mov
push
je
stos
cmp
cmp
test
push
scas
lcall
sbb
loopne
sbb
inc
sbbl
jae
adc
out
rclb
cltd
adc
jb
data16
mov
loope
bound
mov
test
add
or
push
fiaddl
inc
cwtl
hlt
cmp
dec
sub
cwtl
cli
inc
and
frstor
dec
sub
mov
ret
enter
xlat
ds
sbbl
in
push
inc
cs
adcb
mov
jge
lcall
dec
mov
int3
ljmp
shlb
aad
jo
aam
lock
dec
and
insl
sub
and
push
mov
jns
jbe
repnz
and
jae
ret
pop
ss
adc
cmp
test
mov
jle
lret
nop
lret
xchg
push
and
mov
or
test
in
jecxz
sbb
mov
xchg
jl
add
pop
and
jns
inc
out
insl
into
xchg
and
cmp
hlt
out
int
movsb
test
mov
das
jg
repnz
jbe
cltd
fwait
popa
lret
adc
popa
fldenv
cmc
into
fwait
sbb
xlat
pop
movsb
iret
lods
aaa
out
jns
mov
sbb
das
dec
out
adc
pusha
adc
cmc
scas
inc
dec
mov
lcall
fcomi
dec
jg
rorb
adc
loop
xchg
popf
push
fdivs
inc
jb
mov
je
mov
lahf
mov
loope
xlat
addr16
stos
aam
adc
jne
daa
fistpll
repz
pusha
or
inc
push
faddl
adc
dec
add
mov
mov
jnp
ds
xor
rclb
lea
insl
cmp
sbb
movsb
out
bound
fnstcw
xchg
lahf
sbb
or
xchg
cmp
cltd
dec
pop
aaa
test
imulb
out
dec
push
fnsave
mov
fwait
jge
xchg
mov
fidivrs
addr16
outsl
lods
mov
adc
xor
mov
ss
sahf
dec
jge
lods
mov
bound
stos
inc
lahf
leave
jns
push
flds
add
test
pop
push
pop
clc
aas
dec
fsubl
jnp
mov
xchg
or
frndint
jle
test
test
xor
das
sbb
xchg
flds
xchg
jg
test
inc
out
mulb
xor
mov
stos
int3
adc
mov
jo
roll
clc
in
push
inc
cmpsl
loop
sbb
mov
bound
sub
jg
iret
in
lret
xchg
sti
testb
jns
cs
pop
add
jmp
rep
push
clc
jne
mov
movsl
xlat
iret
cmp
xor
cwtl
pop
dec
addr16
ljmp
cmpsb
or
stos
jle
dec
jg
lret
lods
iret
push
or
adc
andb
mov
cmpsb
jne
add
and
testl
test
das
stos
aam
xor
sti
nop
sub
mov
xchg
andb
bound
sub
xchg
lret
in
pop
aam
add
mov
push
inc
fwait
lcall
lahf
rcrb
xlat
push
xchg
pop
out
adc
mov
ss
lcall
or
pop
push
movsl
loope
lods
lods
lahf
push
or
pop
hlt
outsl
or
mov
nop
cmp
mov
mov
adc
ret
mov
or
cwtl
xchg
pop
shl
int3
pop
insb
cmc
and
cli
pop
pop
imul
cld
xchg
mov
mov
insb
shl
ja
int3
fs
in
insl
test
mov
bound
loope
xchg
jl
mov
mov
into
sub
sub
xchg
xchg
mov
mov
inc
sbbb
aad
xor
mov
test
xor
pop
fsubp
hlt
bound
sbb
inc
in
es
imul
mov
or
mov
pop
jp
xor
inc
aas
fistpl
add
jp
test
xor
sub
mov
dec
inc
les
sbb
jb
scas
into
xchg
in
inc
sahf
push
out
adc
lret
sbb
icebp
test
gs
mov
push
adc
pushf
mov
add
mov
or
insl
cmp
fldcw
mov
jb
mov
push
xor
arpl
dec
or
es
lods
fisttps
popf
jns
mull
adc
ficoml
add
out
fdivl
in
stos
shlb
int
stc
addb
inc
and
imul
jae
sbb
test
data16
aad
cmp
add
mov
mov
into
int3
fcoml
out
lea
fistl
cli
decb
std
lea
test
sbb
pushf
sub
and
adc
dec
cwtl
push
lock
cvtpi2ps
adc
lcall
push
ljmp
adc
jl
xor
hlt
add
aaa
lea
cli
pop
xchg
cmc
push
daa
add
add
dec
cmpl
mov
ljmp
and
mov
scas
sub
xor
sti
jbe
xchg
outsb
test
jo
fsubp
fsts
sub
ror
shlb
ffreep
popf
rcrl
jecxz
lea
sub
jo
pop
cltd
adc
mov
shr
jb
dec
xor
adc
dec
jb
in
lods
pushf
orl
and
std
icebp
fstl
cmp
cmp
sahf
mov
in
cmp
mov
mov
mulb
cltd
loop
scas
cmp
sbb
dec
xchg
xchg
ds
sub
mov
lods
push
or
rclb
arpl
aad
cmpsl
fiaddl
ss
popf
sbb
lods
mov
dec
inc
mov
cmp
or
mov
cmpsl
adc
fs
sub
out
cmpsb
repz
out
cs
or
in
push
sub
push
jnp
pop
jb
arpl
lods
push
jg
push
stc
jg
add
xchg
pop
and
jo
call
lahf
je
cmp
xorb
mov
mov
test
jmp
sub
xor
mov
jecxz
fcoml
or
repnz
je
inc
cmp
ja
shrl
inc
sahf
into
mov
xor
lcall
inc
outsb
roll
mov
jb
jnp
mov
xchg
test
xchg
popf
xchg
popf
cwtl
mov
cmpl
dec
lea
test
jb
in
clc
jne
ss
mov
int
hlt
xchg
mov
mov
enter
push
hlt
cmpsl
int3
repnz
mov
jmp
cmp
lret
scas
stc
jle
out
xchg
mov
xor
push
dec
add
ljmp
pop
cmp
dec
hlt
cmpsb
xor
push
movsl
daa
pop
sbb
or
lds
scas
lods
out
cld
call
lods
out
sbb
call
cmp
nop
mov
outsb
add
and
pop
test
and
sub
xor
stos
loopne
sub
loop
inc
mov
sti
popfw
sbb
push
arpl
pop
pop
sbb
lret
gs
lds
mov
jle
aas
fmulp
dec
jle
adc
pop
les
lea
jb
cwtl
push
scas
add
dec
xchg
ficoml
push
sub
fdivs
mov
mov
and
cmc
cmpl
leave
mov
bound
nop
cli
cmp
sub
in
mov
loop
int3
inc
insl
imul
mov
xchg
leave
cmpsl
es
or
mov
cmpl
sar
ficompl
rolb
mov
jbe
int3
push
mov
lea
xor
xor
data16
bound
imul
add
cmp
sub
cltd
and
stos
addr16
out
jo
mov
xor
mov
jne
add
and
jbe
push
decl
in
add
or
shrl
mov
stos
dec
dec
movsl
movsb
rolb
push
fistpl
dec
jmp
js
in
mov
inc
add
sub
ljmp
in
je
mov
inc
and
js
shlb
dec
scas
dec
pop
dec
cwtl
pop
dec
inc
decb
je
xchg
add
ljmp
sti
sbb
push
dec
sbb
aaa
icebp
jp
push
test
dec
sbb
adc
xchg
dec
sub
push
ds
std
mov
les
push
out
push
cli
test
hlt
sbb
outsb
sub
cmc
inc
sbb
pop
jnp
sub
cmpsl
mov
divb
push
sub
mov
xchg
lock
jb
mov
xchg
movsb
fsubrl
pop
jecxz
xor
cmp
lds
sbb
int3
jae
mov
sahf
outsb
or
std
mov
icebp
imul
push
xor
ret
mov
sub
jnp
mov
xchg
stc
sarb
jno
sub
stos
test
insb
lar
xchg
cwtl
adc
in
sub
mov
xchg
add
sub
aas
cs
pop
addr16
mov
mov
xchg
in
sub
ret
pop
jne
pop
das
imulb
jecxz
mov
imul
pop
lods
shr
fwait
pop
gs
pop
ret
jnp
in
cltd
rcrb
stc
ja
mov
push
mov
cmc
dec
jns
mov
or
aad
jbe
adc
inc
mov
jae
lahf
ja
movsl
sub
xchg
push
sbb
fimull
lahf
pop
stc
mov
les
aas
or
mov
cli
int3
lods
mov
dec
leave
iret
dec
lock
std
pop
pop
jecxz
scas
mov
adc
sbb
jne
arpl
repnz
outsl
repnz
cli
js
mov
out
fnsave
into
pop
loopne
pop
jp
adc
pop
jge
jae
scas
rep
mov
mov
repz
shlb
cmp
mov
sbb
mov
pop
cld
push
pushf
pop
xlat
cs
data16
pusha
sbb
push
mov
cmp
add
mov
jmp
into
aad
or
mov
sbb
sbb
xchg
pop
push
mov
or
ret
ss
imul
xchg
lahf
testl
js
popa
or
dec
iret
push
inc
dec
adc
out
push
xor
lahf
push
mov
jp
pop
xchg
clc
xor
pop
sbb
sub
pop
push
fs
repz
push
jb
enter
mov
in
ja
adc
in
inc
hlt
js
fprem1
cli
movsb
jae
cmpsl
fildll
or
addr16
xchg
gs
xchg
in
xchg
jo
jne
inc
mov
mov
add
cltd
lds
repz
sbb
xor
cli
repz
les
.byte
push
.byte
add
add
inc
add
inc
add
add
lods
push
xor
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
clc
add
orb
add
add
orb
add
push
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
lods
push
xor
add
or
add
lock
subb
add
inc
add
orb
sbbb
sbbb
add
or
orb
add
dec
or
cmpb
add
bound
add
jb
add
jle
add
add
add
lods
push
xor
add
add
add
add
add
xor
addb
add
lods
push
xor
add
add
add
cwtl
or
orb
addb
add
lods
push
xor
add
add
pop
add
sldt
pusha
add
sub
add
js
add
nop
add
sub
add
test
add
rolb
out
sldt
fadds
xor
add
lock
xor
add
or
add
and
add
cmp
add
push
add
add
push
sldt
addb
add
sldt
mov
add
enter
cli
sldt
loopne
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
lods
push
xor
add
add
add
mov
add
mov
push
add
mov
add
add
add
add
pop
add
jg
add
push
add
call
jg
add
pop
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
lods
push
xor
add
add
add
in
add
add
add
lods
push
xor
add
add
add
add
add
nop
pop
add
add
add
lods
push
xor
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
lods
push
xor
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
rolb
add
add
add
lods
push
xor
add
add
add
add
add
loopne
add
add
add
lods
push
xor
add
add
add
add
add
lock
add
add
add
lods
push
xor
add
add
add
add
add
add
add
add
add
lods
push
xor
add
add
add
add
add
adc
add
add
add
lods
push
xor
add
add
add
add
add
and
add
add
add
lods
push
xor
add
add
add
add
add
xor
add
add
add
lods
push
xor
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
lods
push
xor
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
lods
push
xor
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
lods
push
xor
add
add
add
add
add
loopne
add
add
add
lods
push
xor
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
lods
push
xor
add
add
add
add
add
adc
add
add
add
lods
push
xor
add
add
add
add
add
and
add
add
add
lods
push
xor
add
add
add
add
add
xor
add
add
add
lods
push
xor
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
lods
push
xor
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
lods
push
xor
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
lods
push
xor
add
add
add
add
add
loopne
add
add
add
lods
push
xor
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
lods
push
xor
add
add
add
add
add
adc
add
add
add
lods
push
xor
add
add
add
add
add
and
add
add
add
lods
push
xor
add
add
add
add
add
xor
add
add
add
lods
push
xor
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
jo
add
add
add
lods
push
xor
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
lods
push
xor
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
lods
push
xor
add
add
add
add
add
loopne
add
clc
or
add
add
sub
or
xor
add
pusha
push
or
xor
add
xchg
invd
add
add
enter
xor
add
cld
adc
add
add
xor
or
xor
add
fs
add
add
add
or
in
add
sbb
or
rolb
add
call
add
add
add
add
add
add
or
rolb
add
sub
or
rolb
add
clc
and
add
add
add
and
add
add
add
add
add
mov
add
add
add
add
add
xor
add
add
jl
or
pop
add
add
xor
add
add
add
xor
add
enter
adc
add
fdivrl
add
add
add
aas
or
sub
add
in
inc
or
rolb
add
mov
add
add
inc
or
cld
add
add
or
inc
add
add
or
sbb
add
test
in
add
add
or
xor
add
mov
add
add
push
or
movsb
add
add
or
cwtl
add
add
pop
or
sbb
add
pop
or
mov
add
rcrb
add
add
add
add
mov
add
add
add
enter
mov
add
jl
or
adc
add
mov
mov
add
add
add
add
add
add
add
or
adc
add
jl
or
adc
add
nop
je
add
add
movsb
je
add
add
mov
add
add
je
add
add
loopne
or
adc
add
enter
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
sbb
mov
cltd
cwtl
add
arpl
lcall
or
int
cltd
mov
add
mov
fldenv
popa
gs
jno
add
out
ficoml
pop
imul
jae
stos
popa
popf
mov
aas
js
mov
in
xor
jmp
xchg
insb
mov
push
rcrl
orb
cmpsl
dec
leave
jg
aaa
out
sub
or
in
xchg
cld
adc
call
in
push
inc
jmp
xor
jno
cmovnp
xchg
sar
out
in
mov
aas
sub
cmc
popa
aam
test
mov
cmpb
iret
test
and
inc
dec
stos
sub
addb
pushw
icebp
popa
inc
lods
xlat
sub
or
test
mov
in
loope
pcmpgtw
push
call
dec
imul
mov
sbbb
pop
scas
iret
call
cmp
enter
out
dec
jmp
out
xchg
inc
jne
in
shl
jle
or
xor
or
clc
pop
test
and
and
repz
cmp
dec
and
xor
loope
in
and
popf
arpl
fmul
mov
fsubrl
push
sbb
pop
aaa
mov
cmc
cmp
xor
cmp
cmp
in
cmp
xor
cmp
push
jp
xor
jmp
adc
stc
lcall
or
rcrl
es
jl
mov
inc
sbb
lret
mov
pop
data16
fwait
jo
sub
xor
mov
cmp
or
sbb
gs
xchg
mov
in
pop
inc
ss
add
andb
dec
in
adcl
mov
xor
sti
jns
das
cltd
adc
out
sub
mov
incl
movsl
fidivl
test
imul
repz
dec
xchg
pop
xchg
mov
mov
or
pop
mov
or
sarl
insl
adc
stos
faddl
add
sbb
aam
sar
xchg
inc
jnp
int3
std
icebp
hlt
int
or
scas
and
lods
in
fcompl
push
xor
loopne
gs
pop
cwtl
les
add
aas
cmpsb
addl
and
cmp
adc
rcll
mov
fsts
cwtl
scas
sbb
add
mov
or
int3
and
in
mov
add
repnz
add
inc
jp
mov
push
cmp
and
sbb
pop
movsl
stos
movsl
addr16
mov
jecxz
js
pop
xor
rcrl
xchg
and
and
pop
xchg
mov
push
cmc
jp
or
fcompl
js
pop
sub
mov
stos
inc
stos
adc
cltd
sub
out
xchg
cmc
cld
add
adc
sbb
inc
test
xor
xor
jecxz
loopne
je
xor
rol
or
cmp
inc
pushf
add
testl
in
aaa
mov
insb
mov
ds
out
leave
xor
pop
test
inc
or
pop
push
cmpsl
ror
jnp
stos
faddp
movsb
xchg
inc
jae
shll
test
cmp
push
sbb
inc
out
mov
push
lea
push
pop
push
lea
std
and
popf
mov
add
les
dec
fs
xorl
cwtl
sbb
jecxz
in
push
adc
and
roll
dec
leave
pop
jne
jo
and
jo
aas
cmpsb
dec
inc
jle
addr16
icebp
jnp
lcall
ljmp
mov
testb
lcall
testl
cmp
fcom
dec
imul
pop
inc
gs
mov
enter
jbe
mov
mov
inc
mov
andb
xor
cmp
xchg
push
dec
pop
and
jmp
dec
jns
jno
loopne
or
xor
mov
xor
lahf
mov
mov
jmp
loope
adc
xchg
add
or
push
mull
jne
js
xor
mov
cmc
lahf
dec
inc
sbb
push
mov
inc
ret
dec
mov
repz
cmp
pop
je
fistl
mov
shrl
dec
into
fwait
mov
fstpl
daa
hlt
insl
sbb
cmp
or
jmp
xchg
inc
or
je
jl
add
pop
ret
lcall
pop
dec
adc
push
inc
pop
xor
mov
shll
mov
enter
add
mov
into
pop
cld
arpl
loopne
xchg
xor
fdivs
call
inc
cltd
ret
lods
pop
add
cmp
cmpsl
and
xchg
out
or
add
ja
inc
imul
jmp
pusha
neg
fsts
dec
pusha
mov
int3
cltd
mov
push
rcll
inc
aas
jns
cld
jns
outsl
mov
xor
mov
dec
test
xchg
push
lret
jbe
jg
stos
mov
adc
ret
fnstsw
int
mov
dec
shr
push
pop
sbb
aad
adc
cmp
das
fadd
push
push
insb
cmp
xchg
in
cmp
and
lcall
add
cwtl
xchg
push
cmp
and
mov
inc
scas
gs
daa
mov
pushf
test
clc
scas
xchg
xor
adc
dec
push
mov
loope
repz
std
xchg
popf
mov
add
arpl
addr16
xor
ljmp
js
add
mov
xor
pop
in
xchg
test
pop
xor
jo
pop
push
mov
inc
test
sti
ds
xor
inc
jecxz
cmp
cwtl
add
pop
inc
lret
mov
cltd
xchg
popf
daa
out
popa
je
in
arpl
in
adc
fidivs
and
aas
jmp
ss
bound
cltd
jne
or
dec
iret
fdivrs
in
mov
nop
mov
sahf
and
sub
sub
xchg
icebp
jns
out
hlt
mov
ficoml
dec
xchg
add
xchg
and
sbb
cwtl
lds
ficoms
nop
stos
xchg
or
sbb
xor
insl
mov
cmp
ljmp
rcrb
js
bound
into
loope
dec
movsb
bound
dec
addr16
mov
rolb
leave
outsb
sarl
mov
lcall
adc
add
aaa
xchg
add
insl
mov
in
cmpsb
xchg
pop
jl
push
filds
test
push
popf
xchg
mov
push
test
loopne
sbb
cmp
ljmp
mov
scas
and
xchg
inc
fcmovbe
xor
lcall
mov
xor
mov
push
js
and
or
jns
sub
movsl
dec
lret
enter
pushf
jle
add
pop
popa
inc
pop
lahf
cmp
mov
mov
rcll
imul
icebp
out
jl
aaa
ret
cmp
push
js
out
test
lds
lret
pusha
test
fldcw
adc
pop
clc
pop
or
das
mov
sbb
roll
in
sbb
insb
xchg
lret
inc
pop
icebp
in
aaa
movsl
mov
popf
rcrl
xchg
push
insl
js
je
mov
pushf
sub
pop
or
mov
xchg
adc
adcl
push
cmp
js
xor
ljmp
out
jae
pop
mov
das
out
rolb
fstpl
jg
faddl
cli
dec
add
loopne,pn
inc
cld
dec
dec
mov
dec
add
push
inc
inc
in
movsb
push
xchg
push
push
into
mov
in
mov
jbe
push
dec
sbb
push
imul
mov
cs
test
ret
repz
mov
cli
cwtl
xor
xchg
and
iret
aad
cli
orl
pusha
and
pop
out
mov
mov
jnp
insb
sub
jle
sub
dec
fdiv
dec
ss
vunpcklps
dec
data16
pop
xor
xchg
pusha
shr
adc
push
push
mov
lea
inc
mov
adc
arpl
sbb
mov
cmp
xor
or
int
in
sub
dec
pop
xchg
or
push
out
icebp
shrb
cmp
repnz
mov
shlb
adc
dec
mov
push
or
xor
xorb
mov
or
or
bound
fldcw
sub
std
ret
aas
mov
push
jns
push
cmp
add
and
shlb
fwait
xor
cli
sahf
adc
mov
pop
push
dec
dec
pop
pop
or
dec
inc
mov
imul
xchg
xchg
fnstsw
mov
xchg
mov
push
mov
subl
xchg
adc
movl
ljmp
sbb
add
pop
std
movsb
dec
fmuls
clc
pop
aam
in
cmp
mov
daa
in
repnz
jbe
scas
fs
movsb
adcl
pop
mov
mov
mov
or
xchg
outsb
aas
loopne
inc
pop
loope
fs
imull
addr16
call
hlt
dec
mov
cmc
fxch
in
icebp
mov
xor
test
cli
hlt
ret
dec
xor
sub
mov
inc
mov
daa
adc
insl
fs
jmp
cmpsl
mov
aad
or
in
sbb
in
mov
dec
rcr
leave
leave
ss
dec
mov
cmc
cltd
mov
pop
testb
push
repz
frstor
pop
roll
mov
int3
jb
inc
sub
xrelease
jle
dec
lahf
fwait
mov
inc
rorl
adc
ror
hlt
iret
cmp
imul
xlat
ret
fistl
fs
lcall
and
mov
aas
stc
loope
loop
mov
mov
addl
jle
cmp
popa
imul
test
cmp
or
das
push
xchg
je
cld
imul
pop
jp
add
cltd
mov
pop
into
mov
dec
jmp
aaa
orl
mov
or
push
mov
cs
call
out
sub
dec
movsb
sbb
dec
lock
push
inc
in
sahf
fdivrl
mov
push
mov
jp
pop
test
pop
sbb
aam
inc
loope
xchg
xor
pop
push
xor
add
movsl
cmc
xchg
sbb
mov
pusha
jb
roll
lcall
pop
cmp
fwait
pushf
ss
sub
jp
mov
mov
mov
std
mov
out
cld
cltd
mov
lods
stos
mov
fiaddl
mov
cwtl
aas
cmp
daa
fmuls
sub
mov
lahf
xorl
xchg
rcl
aam
cmp
inc
mov
pop
arpl
inc
mov
addr16
movb
pop
test
clc
out
test
ficoml
scas
cltd
aad
mov
push
sub
in
inc
add
mov
fwait
rcr
mov
jne
adc
xor
aam
jecxz
mov
xor
xor
in
push
add
data16
inc
rcl
add
fdivp
inc
jno
sti
adc
adc
push
mov
mov
jl
into
ret
data16
stc
mov
add
add
je
inc
adc
jno
or
dec
cmp
push
push
outsb
push
pop
fwait
and
add
dec
jmp
push
and
sbb
outsb
bound
xor
mov
mov
push
movsl
jns
repz
push
or
cwtl
sbb
fstpt
enter
cmpsb
cwtl
jns
inc
mov
inc
cmp
loope
mov
cld
push
mov
mov
orl
sub
hlt
adc
pop
push
outsb
sbb
lcall
adc
loop
negl
pop
cmp
xlat
arpl
mov
ret
loope
scas
lret
sub
sub
dec
out
insl
aas
or
jne
adc
addr16
imul
jle
clc
or
push
stos
jne
xchg
aas
add
dec
inc
insb
addl
pop
lea
aad
push
mov
loope
jecxz
fwait
ret
mov
or
imul
xor
push
xchg
sub
repnz
mov
sbb
lahf
pop
xchg
xor
cmp
stc
adc
repnz
adc
ja
sub
pop
adc
call
scas
dec
bound
fdivr
add
lods
fwait
lcall
or
jecxz
sahf
add
xchg
jl
daa
and
mov
adc
aad
and
sub
jnp
pop
cmpb
insb
cmp
cmp
insl
xchg
pop
cmp
sbb
and
pop
lret
jmp
push
cmp
adc
sbb
repnz
mov
mov
bound
rcll
xor
nop
dec
jnp
mov
mov
mov
outsb
mov
sar
repz
pop
add
loope
inc
std
in
mov
xor
int
movsl
xchg
lret
jne
repnz
mov
sbb
std
repz
jmp
popf
lock
pop
dec
dec
hlt
mov
and
dec
jb
fnstcw
mov
hlt
and
sub
data16
mov
dec
xor
jmp
rcl
lahf
lods
ficoml
pop
movsb
repnz
out
and
clc
outsb
fbld
test
dec
sub
mov
out
and
addr16
fwait
sub
aaa
cmp
cwtl
fxam
adc
das
mov
or
shr
jo
sub
ds
jns
ljmp
sub
jnp
add
cmp
xor
addl
or
mov
xchg
mov
lds
sub
fwait
pop
addl
jmp
rorl
fisubs
dec
cwtl
cmpsb
inc
adc
and
outsb
and
js
adcb
int3
pop
jecxz
movsl
sub
mov
shll
je
shr
enter
xor
and
adc
out
xchg
fistps
icebp
push
xchg
stos
mov
gs
dec
jbe
xchg
fldl2e
jmp
sbb
mov
dec
sub
jb
xor
dec
outsb
imul
fstpl
sti
adc
push
jmp
aaa
mov
mov
rcl
loopne
fxtract
iret
cli
ds
loope
dec
js
sbb
imul
ja
xchg
adc
ljmp
xchg
rclb
or
imul
sahf
mov
in
mov
mov
ret
dec
mov
shrb
outsl
jl
stc
fadds
add
test
out
mov
inc
lea
mov
dec
mov
dec
icebp
add
mov
pop
jp
daa
jno
sub
in
sub
mov
push
ret
adc
add
fldenv
in
dec
test
movsl
fistpll
fcomps
mov
in
icebp
mov
stos
sbb
ljmp
cwtl
add
fadd
push
push
hlt
fdiv
dec
fidivs
jmp
ja
add
fildll
into
pop
adc
rcrb
fdivrs
pusha
xchg
fwait
in
or
mov
fcoml
ds
ja
or
hlt
fdivrl
mov
xlat
jae,pn
loopne
adc
push
psubw
or
pop
or
mov
pop
sub
lock
push
test
mov
nop
test
mov
stos
shrl
rorl
rclb
mov
stos
dec
sub
fsubrl
mov
std
outsb
dec
lahf
cmp
fiadds
in
test
jecxz
mov
loopne
adc
dec
cmp
sbbl
imul
xchg
mov
jns
test
push
mov
leave
xchg
es
xchg
mov
rolb
add
mov
mov
mov
scas
add
je
sub
sub
fs
mov
cmp
fstpt
jg
repz
imul
cmpsl
xor
fidivs
jne
fs
jnp
pop
add
and
fisttps
repz
adc
in
std
ja
adc
nop
mov
or
arpl
mov
outsl
or
pop
push
xchg
inc
mov
push
les
inc
cmp
ss
jle
jg
sub
pop
neg
dec
mov
shrb
or
fcoml
aam
js
xor
addb
ja
push
cs
xor
adc
js
pop
pop
jbe
add
pop
adc
fisubs
cltd
imul
inc
movsb
fisubs
inc
incl
in
push
push
mov
jbe,pn
roll
outsl
aaa
adc
mov
jne
outsl
adc
xchg
adc
add
xor
cmpsb
xchg
sbb
lock
mov
mov
xchg
jnp
fistl
pop
repnz
lock
sarl
sbb
push
push
inc
push
leave
jbe
adc
movsb
inc
dec
clc
push
pop
sub
sbb
push
and
dec
cmp
in
push
or
call
sub
and
enter
rcrl
push
ja
pop
push
testl
push
push
jns
add
fcmove
in
shll
pop
add
out
into
sarb
adc
lahf
test
push
xchg
xor
fwait
iret
pop
cli
out
push
flds
jl
push
je
push
in
pop
xlat
dec
push
in
dec
loop
xor
into
fdivs
int3
mov
scas
or
xchg
jg
add
push
jno
mov
mov
mov
ja
mov
push
sahf
imul
int
cmc
shll
out
clc
add
push
jle
mov
in
push
pop
push
stos
outsb
jo
in
xchg
add
xor
jae
jmp
mov
mov
call
pop
mov
adc
test
mulb
jnp
mov
pop
xor
data16
or
int3
push
adc
pop
adc
je
je
aad
xor
int
push
cmp
adc
push
stc
pop
aad
divb
das
adc
hlt
pusha
ds
pusha
sbb
lret
push
push
sbb
fsubs
xchg
lcall
loope
fcoml
pop
add
xor
int
cmp
push
int3
cmpsb
jne
push
mov
sub
fcompl
cli
and
mov
sbb
daa
and
adc
loopne
clc
je
cmpsl
pusha
outsb
dec
mov
movsb
and
pushf
mov
adc
inc
xchg
int
dec
or
adc
cld
mov
aad
xor
xor
and
dec
jl
lret
jae
jl
daa
adc
xchg
pop
incb
or
mov
sub
fidivs
arpl
jns
outsl
fists
ret
sbb
lea
scas
cmpsl
js
mov
scas
push
and
adc
jecxz
pop
jnp
sub
sti
lock
jle
out
mov
es
xor
out
popf
fisubrs
ss
xor
mov
or
mov
pop
je
jne
mov
sub
cmp
adc
xchg
ret
pop
mov
mov
cmc
imul
lock
xchg
cmpsl
aad
cmpsl
out
leave
jmp
ja
push
push
cmpsl
in
sahf
cmc
lahf
in
es
pusha
js
push
in
subl
das
sub
dec
jno
pop
insl
test
int3
lea
adcb
jo
minps
int3
ret
xchg
push
movsl
or
jne
adc
stc
dec
scas
xlat
outsl
inc
add
shll
mov
cwtl
and
mov
out
fs
gs
mov
sub
xchg
fwait
push
mov
mov
xchg
bound
add
or
fwait
dec
out
cmpb
sbb
push
cmp
add
and
pop
xchg
ffreep
scas
daa
lods
fildll
xchg
jp
push
mov
scas
ret
mov
test
cmp
sub
add
mov
imul
rorl
pop
jl
jecxz
rolb
jecxz
cmp
rorl
movb
and
pop
xor
mov
lcall
pop
sub
rorl
xchg
repz
adc
xor
ljmp
shrb
jb
ret
clc
shrl
mov
fistl
bound
nop
out
aam
out
xor
push
ja
sub
xchg
cmpsl
call
fwait
mov
cmp
adc
xchg
lret
fnsave
lahf
cli
rcll
or
push
xlat
fcmovu
pop
out
pop
je
call
es
loopne
xchg
mov
add
inc
push
in
adc
popf
in
dec
and
pusha
add
xor
or
and
and
dec
cmc
xchg
sub
inc
stos
gs
jmp
sub
pop
lea
add
hlt
das
sbb
cmp
outsb
addb
mov
sahf
iret
sub
lea
mov
hlt
cmp
sbb
clc
pop
dec
and
mov
lods
sbb
xchg
test
repz
in
pop
idivl
ret
clc
in
iret
cmp
jbe
cwtl
or
mov
icebp
test
scas
aaa
mov
inc
fldcw
push
out
or
pop
mov
and
and
stc
sbb
loop
pop
stos
mov
dec
movsb
nop
mov
jge
fimull
ds
negb
jbe
mov
je
hlt
push
shll
icebp
ret
out
stos
repz
stos
divl
xchg
push
mov
cmpsb
jbe
mov
lret
inc
jno
in
mov
or
cmc
ja
out
movsb
mov
mov
gs
jmp
mov
xor
stc
in
insl
pop
dec
fwait
cs
jle
mov
fs
iret
and
mov
js
ljmp
imul
sub
pop
js
push
fisttpll
roll
addr16
or
popa
push
out
mov
and
xor
adc
mov
cmp
add
shll
and
ret
in
pop
gs
out
lock
pop
das
push
lret
mov
arpl
jns
mov
call
mov
xor
push
int
push
loope
mov
dec
fimuls
cmpsb
and
add
clc
sarb
jp
mov
mov
sahf
in
mov
fsts
pop
in
stos
mov
xor
fisubl
mov
scas
inc
in
popa
jle
scas
xchg
push
mov
xor
cmc
mov
loopne
mov
xchg
cltd
inc
cmpl
lea
das
push
popf
add
pop
mov
inc
lea
sbb
lods
jl,pt
pop
add
mov
and
leave
and
std
or
push
mov
adc
setb
pop
inc
mov
adc
pop
or
into
dec
mov
fwait
cwtl
das
adc
cmc
pushf
push
xchg
mov
mov
dec
mov
shl
push
dec
mov
add
and
in
imul
sbb
test
xchg
clc
and
das
cmp
mov
mov
mov
shrb
or
cmp
xor
es
pop
and
popa
mov
or
mov
xor
scas
jmp
dec
xor
sarb
cmp
inc
lods
mov
out
lret
ror
push
adc
pop
out
mov
sub
jns
push
ret
add
mov
inc
testb
ret
sbb
xor
mov
ja
push
fbld
out
adc
enter
xchg
jg
lahf
scas
pop
xchg
mov
int3
sahf
ljmp
movsb
ret
imul
enter
lods
push
in
xchg
in
add
call
adc
arpl
sub
icebp
imul
xchg
pop
pushf
out
lcall
out
mov
cmp
mov
sbb
jbe
arpl
sub
lcall
dec
lcall
inc
ljmp
sub
pop
bound
jbe
jno
dec
dec
cmpsl
cmp
dec
repz
jne
push
xor
cmp
mov
adc
fdivr
jae
xchg
xchg
out
ja
mov
insb
xchg
inc
adc
ret
out
jae
xchg
or
mov
jb
cmpsb
pop
aad
hlt
sub
push
outsb
mov
xlat
inc
jg
scas
mov
adc
or
aaa
xchg
inc
mov
cmp
mov
repz
push
and
cmp
push
cld
out
adc
inc
mov
icebp
fisttpl
hlt
test
adc
sbb
insb
cmp
xor
stos
and
mov
sub
out
ss
push
and
fadd
js
fs
push
inc
push
mov
inc
hlt
vcmpps
push
arpl
insb
push
cmc
rclb
or
inc
repz
movsl
jno
ret
dec
daa
and
add
ds
adc
mov
es
add
mov
dec
dec
aad
sbb
mov
jle
xchg
mov
jns
js
cwtl
mov
sbb
.byte
test
and
add
movsl
pop
test
and
outsb
sub
push
adc
imulb
jne
insb
xchg
ds
scas
inc
mov
iret
fsubrl
jg
sbb
pushf
scas
in
adc
xorl
and
xchg
addr16
mov
into
mov
adc
aas
cmp
stos
std
mov
mov
xor
xor
hlt
mov
int3
iret
mov
cld
xchg
inc
nop
adc
lock
adc
mov
test
push
cmp
adc
lea
rcl
mov
mov
pop
cmp
add
iret
iret
scas
test
mov
push
test
dec
loopne
sub
xor
mov
fsubrl
scas
outsl
jmp
add
lcall
push
jmp
cmp
mov
call
mov
inc
sub
cmp
cmp
mov
jge
jp
loopne
loop
adc
inc
fcompl
cmp
and
lods
pop
jnp
push
sub
out
cmp
scas
mov
mov
mov
int
in
sbbb
mov
fwait
sub
mov
push
xchg
xor
xchg
out
nop
arpl
pop
addl
lods
movsb
leave
and
stc
mov
push
mov
lds
add
insl
mov
inc
cmovns
testl
repz
xchg
cmp
push
popa
pushf
jge
xchg
mov
aaa
dec
xor
sbb
repnz
jbe
or
add
ret
or
and
out
sbb
sbbb
aam
push
std
mov
xchg
sti
and
arpl
pop
rcl
leave
les
stos
ret
andb
in
jno
jne
cmpsl
fisttps
shll
ss
inc
lods
cmp
dec
les
pop
push
call
add
add
add
xor
add
push
ret
repnz
sahf
fnstsw
xchg
out
xor
pop
repnz
jecxz
jmp
imul
ret
loop
mov
push
jecxz
adc
test
test
loope
mov
jle
fisubs
int
mov
xchg
pop
cwtl
mov
mov
xchg
ljmp
out
loopne
hlt
je
cmp
int3
adc
movsb
mov
scas
and
xchg
push
xchg
pushf
clc
jge
sbb
cmpsb
inc
mov
cmpsb
stos
mov
movl
mov
pop
xchg
pushf
inc
in
nop
in
mov
stos
imul
fadd
jp
add
mov
ja
es
rcrb
cwtl
cmc
loop
rorl
mov
jae
repz
mov
and
jle
mov
aaa
xchg
daa
test
push
cmp
mov
daa
xchg
push
les
cmp
rorl
scas
add
in
dec
jmp
fstpl
sbb
rcl
pop
movsb
int3
je
push
xchg
adc
imul
ret
sarl
jae
mov
sbb
jnp
popa
push
xlat
xchg
cwtl
test
pop
sub
push
pop
sub
or
xchg
aas
push
push
sbb
shl
dec
mov
cmp
icebp
popf
mov
or
rolb
inc
pop
and
sbb
dec
in
loop
pushf
add
adc
mov
fisubrl
inc
inc
inc
mov
sbb
add
jo
out
jnp
mov
test
and
ss
pop
test
xchg
push
xor
leave
xor
fistl
mov
sbb
xor
rcll
push
inc
fildll
ret
adc
add
add
push
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
xchg
ror
into
out
cld
test
pop
add
movzwl
mov
xor
mov
mov
push
push
movswl
pop
pop
sub
push
mov
pop
sub
mov
xor
mov
push
jne
popl
xor
sub
add
sub
sub
jne
push
pop
jmp
dec
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
mov
incl
jne
jnp
mov
pop
mov
xchg
mov
add
sub
mov
sar
add
outsl
jo
aad
mov
jecxz
leave
push
inc
outsb
ret
lea
pop
dec
mov
push
scas
test
frstor
nop
js
jmp
xor
or
shrb
sbb
lcall
xchg
repnz
inc
aam
inc
data16
add
mov
ret
iret
scas
leave
push
xchg
loop
mov
cmp
dec
xlat
clc
sub
int3
sarl
leave
aas
imul
gs
leave
ret
fisubrs
xchg
xlat
mov
outsb
fisubl
in
leave
scas
sbb
andl
mov
mov
push
leave
xor
mov
scas
leave
cmp
adc
xor
xchg
fsubs
sarl
roll
push
jge
sbb
pop
inc
fsubr
fdivr
dec
aad
jb
pop
frstor
js
notb
lahf
push
xor
rclb
jne
dec
data16
negl
adc
negb
fstl
loopne
fsubrp
lods
fwait
add
xchg
rclb
iret
adc
push
xor
js
notb
lahf
insb
ret
nop
scas
xlat
jbe
or
fidivrs
and
mov
fiaddl
adc
jo
notl
mov
sbb
inc
mov
and
adc
inc
rclb
lahf
pop
inc
add
or
bound
jmp
inc
leave
adc
pusha
fldl
jb
cmpsb
outsl
dec
or
mov
xor
push
shr
ja
notb
lahf
inc
ss
icebp
stc
cmp
xchg
xlat
rcrl
jmp
lahf
push
adc
dec
jns
mov
dec
notb
lahf
ret
das
imul
mov
fsts
lahf
pop
repnz
ljmp
mov
lret
loopne
mov
outsb
imul
fcoml
test
dec
jne
dec
enter
xchg
js
mov
shlb
scas
adc
lock
fisttpl
rcr
or
lods
out
fwait
adc
test
dec
sub
jno
push
xchg
xor
cmpsl
cmc
push
mov
repnz
xlat
andl
jp
outsl
push
pop
sti
push
xchg
incb
cld
in
cwtl
shrb
js
in
mov
or
dec
or
loop
aaa
mov
push
mov
jle
push
out
fwait
mov
lahf
in
push
cmc
sub
inc
cltd
leave
in
adc
mov
add
sbb
repz
lret
es
cs
cmpsl
roll
push
cmp
add
sbb
pop
xor
pop
clc
mov
and
or
je
push
push
nop
in
dec
aad
in
cltd
pop
mov
or
push
shll
loopne
mov
push
or
add
test
cmp
pop
mov
test
movsl
loope
pop
cli
inc
in
xor
pop
mov
aam
icebp
int3
fldenv
data16
pop
lds
je
cmpsl
fstpl
shrl
cmp
cld
xchg
lahf
loopne
fcomi
xchg
and
push
dec
fcompl
fs
fcmovnbe
inc
cmpsl
pop
in
lods
sbb
mov
push
push
fcompl
cmpsl
fcmovnbe
inc
cmpsl
pop
in
lods
sbb
pop
in
xor
pop
in
xor
dec
fmul
pushf
dec
loopne
inc
pop
push
push
jecxz
in
xor
enter
or
js
loope
push
push
les
in
rorl
sti
xchg
mov
mov
daa
xchg
xor
aam
fcomps
xor
subl
mov
push
ficomps
les
pop
subl
pop
in
add
xorb
pop
shll
pop
jge
enter
fcompl
jecxz
popa
punpckldq
pop
in
lret
subb
incb
inc
jl
xor
pop
repnz
jp
incb
decb
pop
in
lret
call
xor
sbb
lret
repnz
push
jl
bound
sub
jecxz
enter
sub
pop
mov
les
push
ret
xor
out
sub
insb
jmp
enter
lods
pop
pop
jmp
js
daa
pop
sahf
xchg
arpl
in
push
ficomps
add
mov
enter
rcrl
bound
sub
jecxz
ret
bound
sub
jecxz
sub
enter
mov
mov
mov
stc
xor
enter
jp
decb
ficomps
lret
call
xor
in
jecxz
shr
sub
jne
out
shll
dec
pop
in
jecxz
hlt
in
pop
rcrl
xor
in
xor
popf
in
xor
pop
in
xor
pop
rol
lds
repnz
movsl
xchg
sbb
mov
ljmp
or
js
mov
loopne
mov
lahf
ljmp
or
rcrl
enter
loop
lea
loop
outsl
sub
out
lods
sub
call
jp
lods
lahf
ljmp
or
mov
mov
je
les
sub
pop
in
sub
call
jp
lods
lahf
ljmp
or
fadd
fstl
push
pop
mov
sub
call
jp
lods
movsb
ljmp
or
fadd
hlt
call
push
jg
les
enter
cld
arpl
dec
mov
pop
in
xor
dec
outsl
sub
out
xor
call
jp
dec
inc
xchg
sub
pop
in
fdivl
pop
fstpt
test
test
enter
dec
sbb
loopne
pop
pop
inc
ret
fbld
or
fidivrs
sub
inc
into
loopne
pop
pop
inc
ret
enter
mov
push
sbb
pop
in
les
pop
push
xor
pop
in
xor
jmp
fstpl
mov
and
fmulp
mov
in
xor
insb
jmp
sub
pop
in
xor
mov
sub
add
xor
dec
repz
in
xor
gs
xor
test
in
loopne
cwtl
sub
inc
lret
in
jl
idivb
incl
pop
push
in
xor
mov
cltd
pop
push
js
icebp
loopne
push
movsl
decl
cmpl
lods
dec
fcompl
xchg
fsubl
xrelease
shl
mov
sahf
sbb
je
les
icebp
sub
bound
iret
inc
push
cmp
sahf
adc
jne
mov
sub
ljmp
enter
enter
enter
enter
enter
enter
enter
fcompl
rep
pop
xchg
insl
fistps
jno
pop
in
xor
pop
in
xor
push
in
or
sub
js
in
xor
pop
in
xor
pop
in
xor
pop
in
xor
pop
in
decb
test
aam
mov
pop
rol
out
ja
inc
call
ja
loop
ret
int
mov
das
test
jge
movsl
xchg
sub
push
and
sub
repz
xor
ret
and
in
xchg
mov
mov
dec
cmp
aam
repz
ss
sbb
mov
dec
call
fsubr
loope
fnsave
in
repnz
adc
mov
dec
mov
test
lods
ficoms
xsha1
cmpsb
lret
dec
into
or
nop
lock
pop
outsb
cmp
dec
mov
lods
je
or
movsb
clc
scas
push
xchg
stos
aad
lea
shl
sbb
stos
lret
cmp
loopne
sbb
pop
dec
sub
imul
cli
xchg
jno
shl
dec
lret
out
xor
hlt
aas
das
mov
jg,pn
lcall
ja
mov
test
dec
xor
je
xor
ficoml
sub
inc
jb
push
sub
and
ret
sub
inc
mov
test
fcmovnb
loope
push
mov
mov
in
xlat
lea
sub
adc
cli
andb
jns
lods
cmp
jmp
or
aam
aam
or
fs
bound
imul
sbb
jno
test
inc
cmc
pusha
xchg
jns
out
pop
and
ja
fmull
fwait
pop
and
jl
divb
into
mov
sub
push
mov
cmp
ficomps
bound
mov
fsts
inc
incb
scas
loop
lock
scas
mov
sbb
add
scas
rcll
push
xchg
sub
sub
inc
inc
mov
adc
or
dec
push
addr16
cwtl
sub
pop
in
xor
imul
and
leave
cmpsb
gs
dec
in
mov
enter
mov
sub
popa
pop
mov
fldcw
out
mov
int3
push
cltd
mov
xor
mov
es
js
jne
out
inc
mov
iret
mov
ds
xchg
push
ret
pop
out
sub
lea
inc
pop
data16
rcrl
cmp
jmp
push
cmp
cltd
dec
fimull
cmp
repnz
mov
in
mov
cld
in
push
xor
mov
mov
lods
cmpsl
sub
inc
sbb
xchg
pop
mov
jnp
or
mov
aad
loopne
ficomps
and
xchg
xlat
mov
mov
scas
fidivl
push
mov
add
test
fidivl
std
mov
jle
mov
add
add
add
or
add
add
add
inc
add
inc
add
lods
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
or
hlt
stos
or
in
lods
or
int
or
clc
lods
or
aad
or
add
scas
or
adc
or
sbb
or
and
or
cmc
scas
or
xor
or
cmp
or
add
add
add
or
or
add
add
or
adc
add
add
add
add
add
or
and
add
add
or
sub
add
add
scas
or
scas
or
cmp
add
add
scas
or
cmpsb
scas
or
dec
scas
or
mov
or
push
scas
or
shrb
add
gs
insb
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
jb
fs
insb
add
outsl
arpl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
xor
xor
fs
insb
add
insb
insl
outsl
outsb
cs
insb
add
imul
insb
add
outsb
imul
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
jne
or
add
add
lea
add
lahf
scas
or
add
add
scas
scas
or
add
add
mov
add
add
scas
or
add
add
out
scas
or
add
add
sti
scas
or
add
add
adc
add
and
add
xor
add
add
or
add
add
push
mov
add
add
add
or
add
add
jns
or
add
add
mov
add
mov
add
add
add
add
add
gs
insb
inc
js
arpl
gs
add
add
popa
addr16
imul
dec
arpl
push
imul
gs
gs
outsl
popa
jb
push
jns
add
add
gs
gs
jae
jb
add
add
inc
inc
insb
gs
outsb
jne
add
add
popa
jb
push
gs
imul
inc
imul
gs
add
add
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
push
inc
inc
insb
gs
outsb
jne
add
add
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
outsb
jb
popa
insb
imul
arpl
add
je
jb
gs
gs
fs
imul
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
je
push
imul
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
and
add
add
or
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
adcl
xchg
mov
add
lods
lods
add
int3
int3
add
int3
int3
add
std
std
add
incb
mov
add
pop
pop
add
data16
jbe
add
push
dec
add
leave
mov
add
lods
cltd
add
out
out
add
xor
dec
mov
fdivl
nop
add
aas
add
int
add
push
add
xor
jno
xor
mov
add
cmp
add
das
add
inc
add
insl
push
add
mov
mov
add
out
add
in
add
icebp
in
in
add
in
out
clc
repnz
test
add
push
add
xor
add
xchg
add
lea
fdivs
add
fnstenv
add
fidivl
add
add
leave
test
fstpt
add
aad
add
fidivrs
add
loopne
add
loop
add
fstpt
add
in
add
in
add
faddp
add
call
int
int3
mov
add
add
jmp
add
les
in
fildl
out
fiadds
push
loope
push
jmp
add
out
add
imul
add
icebp
call
add
cli
cmc
add
stc
hlt
add
sti
testl
in
das
add
mov
add
subl
xchg
xor
fisttpl
cmp
jne
and
lea
add
mov
test
add
scas
mov
lds
test
add
shlb
add
in
add
out
add
mov
add
into
mov
add
jmp
aam
lds
push
in
push
out
add
xchg
sub
call
mov
add
cltd
xor
in
xchg
xor
out
xor
out
lcall
hlt
mov
cmp
int
dec
add
fwait
arpl
fldcw
jge
scas
cwtl
jle
in
roll
sti
cmc
out
add
mov
add
test
in
sub
out
sub
add
cltd
xor
int3
xchg
add
sahf
xor
out
lahf
xor
add
and
jecxz
add
mov
add
les
out
jmp
add
cld
clc
add
popl
add
mov
add
xchg
daa
add
cltd
sub
in
sub
ljmp
add
mov
add
stos
ss
movsl
aaa
add
test
ds
xchg
cmp
std
mov
pop
add
repz
std
cli
add
lcall
fcoms
das
add
pushf
xor
add
mov
add
lods
dec
add
mov
ret
cmc
out
cli
lods
sub
ljmp
add
lahf
sub
jmp
xor
stc
mov
add
lods
xor
lds
add
mov
add
mov
sub
repz
add
mov
cmp
out
mov
add
mov
dec
add
lret
addr16
mov
add
mov
add
mov
pop
add
les
ffreep
xchg
sti
out
add
icebp
fiaddl
test
add
leave
inc
add
mov
jae
in
rorb
add
fisubl
add
ret
in
pop
add
fcoms
add
loop
add
sti
add
leave
pusha
add
shlb
cld
loope
add
out
add
aam
add
xlat
push
add
jmp
flds
sti
in
add
frstor
std
in
fwait
add
divb
push
test
add
mov
mov
add
cli
cli
add
cmc
cmc
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
adc
adc
adc
adc
adc
push
or
or
push
or
push
incl
add
add
add
add
jnp
push
dec
push
dec
dec
dec
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
pop
add
add
lea
lea
push
jno
jno
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
jb
inc
inc
pop
add
test
cmp
mov
mov
outsl
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
jb
add
cmp
add
adc
and
xchg
sub
inc
inc
inc
inc
inc
inc
inc
inc
pop
add
mov
add
and
push
mov
outsl
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
add
mov
mov
mov
in
fidivl
daa
jo
inc
dec
dec
dec
dec
dec
dec
pop
or
add
insl
les
mov
mov
scas
mov
daa
sbb
dec
dec
dec
dec
dec
pop
or
into
test
scas
scas
cltd
addb
scas
fdiv
out
aaa
cmp
dec
dec
dec
dec
dec
pop
push
incl
add
test
sub
xchg
int3
dec
dec
dec
dec
dec
dec
pop
ud0
add
mov
into
mov
ja
ja
xor
xor
mov
ja
ja
pop
adc
add
add
lcall
dec
dec
dec
dec
dec
dec
push
dec
dec
sub
adc
add
add
mov
rol
mov
and
and
and
and
and
and
nop
sub
push
pop
adc
add
add
mov
ror
ret
lds
cwtl
fs
mov
push
push
push
push
sbb
incl
add
insl
add
fst
lds
insl
insl
insl
insl
cltd
cltd
test
push
push
push
push
push
sbb
incl
add
shl
add
pop
push
push
push
xor
xchg
xchg
mov
push
push
push
push
sbb
incl
add
shl
loope
aad
lds
fcompl
push
test
lea
pop
pop
pop
pop
pop
sbb
incl
add
add
cmc
loope
aad
mov
lds
cmp
pop
pop
pop
pop
push
adc
add
add
shl
cmc
loope
aad
les
jp
push
jle
jle
jle
adc
add
add
add
icebp
clc
loope
f2xm1
fst
int
int
rorb
das
jg
jg
push
adc
add
add
add
shl
clc
div
stc
repz
xlat
rorb
jns
pop
pop
pop
pop
push
adc
add
add
add
add
loope
icebp
in
stc
lock
mov
outsl
jp
pop
pop
pop
pop
push
adc
add
add
add
add
sub
rcl
rcl
rcl
je
jge
xchg
inc
mov
pop
pop
pop
pop
push
adc
add
add
add
add
sub
xor
xor
push
outsl
rcl
mov
mov
pop
push
pop
pop
pop
pop
adc
add
add
add
add
sub
popa
xor
xor
xor
insl
insl
mov
xor
adc
adc
adc
add
add
add
add
add
std
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
adc
lods
ret
add
add
add
add
add
std
bound
movsb
bound
bound
bound
bound
mov
add
add
add
add
add
cld
movsb
movsb
movsb
movsb
bound
movsb
movsb
movsb
bound
add
add
add
add
add
cmp
cld
cld
cld
cld
std
std
std
sbb
sbb
add
add
add
add
add
cmp
cmp
jno
inc
inc
sub
sbb
sbb
sbb
pop
adc
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cld
add
paddb
add
cld
add
aas
cld
add
jg
add
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
xorb
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
fadds
jl
es
cmp
loop
insl
cmp
movsb
inc
dec
lea
into
and
sbb
sbbb
aam
out
xchg
jne
fwait
call
jecxz
jo
js
arpl
stc
std
es
cmp
stos
lods
jnp
cmp
enter
loop
es
push
test
fldl
leave
and
jae
add
mov
pop
push
add
test
enter
push
mov
sbb
loope
push
and
pop
cmpsb
fcompl
sbb
dec
sbb
push
xchg
in
push
sahf
pop
push
shrl
jle
cmp
push
add
or
fcmovne
fnstcw
fmull
inc
fwait
scas
pop
jns
sub
jp
pop
dec
cli
jae
ljmp
cwtl
jmp
sub
test
mov
je
mov
rcrb
clc
loope
jno
or
jns
rorl
cmpsb
and
clc
sub
mov
stc
mov
mov
icebp
icebp
xor
fldt
mov
in
neg
jns
jne
sbb
cmp
fmull
test
cltd
test
pop
test
and
pop
adc
into
imul
jmp
fistpl
pop
xchg
in
cmpb
addr16
sub
inc
push
js
in
ds
push
jmp
stos
shlb
int
in
out
or
das
jp
and
cmp
pop
and
fiaddl
push
dec
js
xchg
jmp
inc
stc
sbb
jmp
addb
sbb
cmp
and
pusha
push
data16
sbb
mull
push
sbb
ds
cmp
or
xchg
aaa
xchg
jno
fidivl
cli
jo
fiadds
lock
pop
jo
add
sub
pusha
adc
scas
fcomp
xor
adc
inc
or
icebp
dec
inc
pop
sbb
mov
push
cmp
call
lock
ret
jns
popa
aad
scas
rcll
js
add
xor
dec
push
push
add
cmp
loope
icebp
jo
mov
imul
mov
and
adc
jmp
add
sub
sub
ljmp
jbe
cwtl
sbb
out
jae
lret
std
jl
leave
rclb
adc
fs
add
leave
jns
aas
pop
imul
adc
mov
or
sub
cmp
data16
dec
mov
mov
xor
movsl
push
ja
out
inc
iret
jb
push
mov
hlt
cmp
in
pop
add
cmp
inc
add
or
mov
dec
nop
stos
dec
xor
popf
lcall
aad
ja
push
push
je
stos
cmp
dec
in
adc
arpl
inc
mov
inc
fsubr
jns
mov
adc
adc
mov
jbe
insb
mov
adc
inc
adc
inc
nop
xorb
jo
sti
imul
outsb
jle
fs
or
xchg
test
push
fsubrs
int3
jne
cmp
mov
mov
dec
lret
sbb
daa
mov
insb
add
sbb
into
sub
lret
je
or
pusha
and
push
lret
xor
int
xchg
and
push
cli
pop
mov
sbb
out
fmuls
sbb
movsb
fstp
sub
iret
jno
inc
xchg
cwtl
push
insb
xchg
or
addr16
mov
rcr
mov
dec
push
test
jle
lock
mov
add
cmp
pop
mov
cmp
xchg
inc
add
outsl
daa
dec
mov
inc
jp
lret
shll
ret
jne
cmp
in
mov
cmpsb
mov
loopne
or
mov
jecxz
xlat
movsl
sub
mov
fiaddl
clc
jnp
test
mov
fs
mov
movsl
xchg
xchg
sarl
xchg
decb
jl
mov
int
add
and
inc
lret
and
outsb
addl
or
addr16
fmuls
lret
push
pusha
pop
add
out
popa
push
test
stos
inc
arpl
lret
push
mov
and
int
mov
or
lahf
add
dec
dec
jo
cwtl
inc
insl
scas
mov
out
dec
xor
adc
xchg
jle
icebp
stos
notb
rcll
xor
movsl
pop
lods
mov
mov
mov
stos
loopne
xor
xor
scas
inc
dec
mov
in
mov
idivl
sbb
dec
and
push
int
lock
test
ss
out
rcrl
ljmp
dec
aam
icebp
or
fidivl
inc
stos
and
jo
jbe
clts
sbb
andb
dec
out
scas
stos
fcmovnb
lret
xor
stc
xlat
pop
and
pop
ss
mov
cmpsb
pop
xchg
jo
cld
pusha
push
test
cwtl
xchg
mov
inc
or
xlat
fiaddl
or
mov
pop
xchg
sub
sub
jecxz
xchg
sbb
lahf
orl
mov
adc
rcll
hlt
loopne
cmp
pop
push
dec
cmpsb
or
cmp
inc
mov
les
cmp
movsl
cs
add
push
repz
scas
repnz
les
push
jbe
pop
xorl
leave
mov
arpl
push
push
subl
jae
push
cmp
pop
loopne
push
out
jne
ss
aas
lcall
inc
roll
scas
cmc
bound
loop
pop
mov
out
popf
leave
iret
orl
adc
test
stos
lds
adc
jne
pop
inc
jne
pusha
jecxz
imul
fisttpl
loopne
out
mov
mov
in
or
lods
add
lods
xchg
sti
popa
push
dec
loope
decl
inc
adc
scas
das
dec
jns
pop
jo
stos
mov
jo
gs
xchg
out
call
dec
xor
sbb
add
xchg
push
out
mov
hlt
push
sbb
dec
cmp
movl
cmp
cmp
pop
jmp
push
add
mov
cmpl
shrb
repnz
lods
or
or
fbstp
sbb
mov
rcr
movsl
sub
add
dec
repz
jo,pt
andb
xchg
dec
stc
push
mov
mov
add
mov
lods
push
cmpsl
cltd
sub
aad
xor
in
bound
scas
fsubs
inc
stc
add
arpl
fs
lds
pop
popa
hlt
int
insl
enter
cmpsl
movsb
sub
mov
add
test
mov
lea
icebp
pusha
or
pusha
pusha
sarb
lock
clc
jg
mov
pop
push
cmp
cs
jb
mov
fwait
aam
stc
jp
or
add
sbb
mov
jbe
test
pop
adc
loope
popa
adc
out
mov
xor
xor
dec
mov
mov
icebp
inc
test
xchg
sbb
sbb
pop
pusha
push
ds
mov
loopne
mov
mov
data16
movsl
inc
int
mov
jle
cmp
push
std
mov
xor
push
popa
stos
test
leave
inc
xchg
jge
es
jp
adc
jns
xchg
pop
sbb
negb
and
loopne
pop
dec
add
push
sbb
sub
jmp
shrb
pop
dec
lds
and
mov
les
push
ds
dec
lods
outsb
jb
jb
fnstsw
push
addr16
add
inc
repnz
pop
js
inc
pop
xchg
ljmp
cmp
pop
mov
ds
in
movsl
cwtl
dec
pextrw
lret
xchg
push
das
testl
push
push
mov
xor
mov
in
push
fmulp
jmp
sarl
loop
bound
test
sub
mov
or
jo
jle
popa
in
mov
mov
bound
je
nop
cmp
vmwrite
fldenv
rcr
pop
pushf
imul
sbb
mov
jmp
pushl
lods
inc
arpl
shll
in
movsl
jae
jb
lock
and
mov
cltd
push
out
cmp
int3
js
fldcw
sbbl
inc
mov
push
in
xchg
je
shlb
xchg
add
fistps
or
cmp
pop
mov
rcrb
loope
mov
stc
pusha
xor
jae
sub
stos
jg
add
sar
adc
shll
call
mov
mov
or
int3
popa
add
xchg
jp
in
adc
sbb
pop
or
int3
cmpsl
push
inc
outsb
adc
dec
pop
push
fcomps
pop
xor
add
aam
lret
xlat
or
lds
xor
popf
les
cmp
add
fdivrl
inc
aam
hlt
pop
out
jp
daa
shll
jg
pop
or
inc
mov
ret
out
aaa
repz
add
jmp
addr16
push
xor
rcrb
ss
cmp
test
or
mov
adc
mov
xchg
mov
push
cmp
or
out
addb
dec
dec
mov
imul
push
and
ja
int3
in
push
frstor
dec
mov
jbe
cmp
dec
mov
sti
imul
lret
dec
lods
addr16
outsb
leave
push
filds
out
sub
jae
data16
push
mov
pushf
sub
push
insl
jnp
adc
and
xlat
cmpl
adc
inc
push
out
loop
out
std
cwtl
out
push
and
jae
lock
pop
pop
aad
mov
push
addr16
and
add
lret
ret
adc
in
cmpsb
bound
push
inc
or
lods
dec
or
rcl
inc
sti
jbe
fadds
sub
cmp
sti
sbb
aam
in
lock
and
sbb
idivl
cmpsl
fwait
ss
pop
ret
dec
mov
clc
rorl
scas
inc
iret
add
add
das
in
inc
inc
xchg
test
jmp
sahf
scas
int
popl
call
mov
xchg
cmp
sbb
and
xchg
in
iret
loop
adc
in
xor
dec
fisubrl
mov
clc
adc
outsb
shl
es
push
daa
adc
inc
inc
or
dec
addr16
sahf
mov
mov
lods
push
fcmovne
popa
cmp
cmp
cld
aam
mov
cmc
sub
xchg
xchg
push
sub
movsl
dec
add
mov
push
xor
popl
xchg
pusha
in
inc
or
xchg
stos
xlat
lret
jle
aad
pop
dec
mov
xor
cmp
in
and
pop
pop
sbbb
jg
sti
repnz
adc
mov
and
cmp
dec
loopne
add
push
push
fnop
stos
mov
cmc
xchg
jle
mov
pop
addr16
rolb
lcall
push
outsb
mov
pushl
sub
aaa
fiadds
or
sahf
inc
sub
aam
arpl
xchg
xor
cwtl
out
or
dec
sbbl
rcrl
icebp
lcall
or
cwtl
icebp
push
cmp
dec
mov
int3
jp
mov
rol
mov
mov
mov
shll
push
add
adc
stos
dec
xchg
imul
xchg
sbb
leave
xor
movsb
fidivl
mov
jb
stc
into
inc
cli
test
iret
sbb
fwait
stos
pop
xor
pop
add
testl
clc
adc
add
mov
mov
add
adc
and
jns
mov
add
inc
cld
int3
lret
in
jmp
inc
pop
push
sub
call
sbb
pavgw
push
in
adc
mov
pop
mov
xchg
inc
pop
xor
and
stos
lret
mov
adc
loop
pop
pop
mov
scas
lcall
inc
imul
adc
push
ss
inc
mov
xchg
imul
test
stos
shll
shl
gs
sarb
add
mov
xor
mov
push
and
mov
add
mov
hlt
outsl
dec
xchg
dec
mov
sub
or
icebp
mov
xchg
int
and
push
jnp
fldl
cltd
gs
inc
push
sbb
imul
pminub
fcomip
stc
clc
dec
cltd
icebp
push
xchg
notl
inc
dec
inc
mov
cmp
data16
dec
cmp
jp
xchg
faddp
push
mov
imull
std
add
in
add
pop
or
mov
test
insl
push
mov
test
add
shlb
xor
adc
push
fs
xchg
sub
les
rcll
cmp
or
sbb
sarl
lea
lret
lods
mov
add
mov
inc
dec
jecxz
xor
add
test
sbb
insb
shll
and
xchg
push
hlt
mov
jnp
aad
insl
sub
ss
orl
adc
or
loop
test
call
test
mov
mov
out
cmpsl
and
adc
cmc
enter
or
stos
std
lret
jae
and
jnp
ds
int3
or
or
jne
mov
test
js
jle
and
fistps
mov
fbld
hlt
ja
xlat
add
mov
mov
lock
fmull
pop
test
ret
or
xchg
cmp
adc
jg
orb
arpl
in
sub
popa
xchg
ret
pop
pop
push
es
mov
test
shr
fs
test
and
or
cli
cmp
jbe
daa
outsl
enter
outsb
pusha
pop
push
call
daa
lret
out
lods
mov
push
shr
cmp
out
push
push
and
jne
inc
rorb
and
or
adc
leave
push
ds
stos
into
add
inc
les
sti
push
sti
sbb
sbb
rclb
fstp
mov
dec
inc
cmc
pop
pushf
loop
mov
aaa
ds
insb
pop
xchg
cwtl
or
or
mov
outsb
lea
icebp
js
or
shrl
aaa
adc
int3
sub
dec
rcll
dec
xor
rorl
divl
push
lock
pop
sub
loop
ss
adc
testl
jecxz
and
sub
insb
push
addr16
xor
and
cmpsl
test
enter
pop
xor
jl
cmove
sub
cmp
out
fwait
clc
xchg
push
inc
push
cmp
mov
pop
cmpsl
data16
jbe
mov
pop
sub
aam
mov
sbb
ret
push
mov
adc
mov
mov
jns
aas
pop
dec
jmp
in
call
lods
orb
mov
dec
shlb
cmpsl
divl
dec
lock
pcmpgtd
mov
addl
jmp
call
cs
std
repnz
adc
cmp
xor
nop
mov
rclb
and
mov
imul
loopne
pop
cmpsl
jne
aaa
ret
fidivs
test
test
mov
je
xchg
in
and
loope
fisubs
loopne
sub
jmp
into
comiss
mov
ds
js
ljmp
cmpsl
insl
lret
pop
fistpll
mov
adc
mov
pop
xlat
xchg
sub
clc
pop
sbbl
cmp
or
inc
inc
nop
rcll
push
mov
cmp
sti
pushf
in
sub
dec
xor
mov
or
int
lods
test
jmp
cmp
adc
ds
in
push
inc
jge
arpl
ficoms
xchg
movsl
jge
xchg
adc
pop
mov
cwtl
sbb
and
sar
jl
mov
jg
adc
sbb
xchg
dec
jae
pushl
stos
lds
mov
ds
pop
inc
jo
fildll
out
add
inc
add
adc
clc
fs
xor
mov
or
pop
cs
insl
push
xor
mov
mov
movntps
mov
pop
add
cmpb
push
add
in
je
adc
mov
in
mov
sub
ja
ficompl
repz
or
sahf
mov
xchg
fisubs
xor
aam
jne
sahf
in
lret
filds
mov
mov
rol
jle
std
mov
or
rorl
sahf
stc
jmp
mov
jge
mov
jbe
sbb
leave
clc
or
mov
dec
dec
push
stos
iret
int3
fcompl
fbld
test
fucomi
pop
xchg
adc
cmp
inc
popf
sbb
sahf
test
or
dec
adc
mov
fidivrs
cs
outsl
jmp
mov
sbb
out
xorl
sahf
fcmovnb
pop
sbb
dec
dec
pusha
out
popf
adc
cmp
call
fwait
push
pusha
iret
inc
inc
xchg
out
stc
push
mov
int
and
adc
roll
fidivrs
mov
cmpl
inc
into
enter
or
inc
and
stc
gs
fwait
xchg
nop
sbb
idivl
inc
sbbb
out
add
lea
xchg
jbe
sbb
inc
das
dec
adc
fdivrs
scas
cltd
sub
lock
arpl
or
aaa
sbb
sbb
push
shrl
test
cmp
pop
mov
das
sbb
dec
bound
lock
jno
in
mov
mov
or
mov
cmp
sub
jne
and
and
ds
inc
stos
cmp
out
lods
lret
mov
inc
cmp
dec
mov
sar
adc
mov
lods
cmp
sti
cmp
cwtl
dec
fimuls
mov
dec
jo
inc
ja
mov
into
or
cmpsb
hlt
xor
lret
jns
shlb
inc
fimull
cmp
inc
ret
cmpsl
ljmp
cmpsb
xchg
clc
es
jle
push
filds
inc
lods
insb
jne
andb
lcall
add
sub
sarb
insb
jle
sub
mov
or
xor
jp
cld
stos
push
mov
inc
clc
ja
push
sub
test
lcall
popl
sahf
or
xor
iret
push
add
pop
cld
sbb
mov
pop
xchg
outsb
or
sbb
xor
xchg
loop
push
push
idiv
mov
shrb
mov
mov
mov
insl
add
dec
and
pop
cmp
stos
dec
rol
inc
mov
gs
rcl
cwtl
inc
adc
or
js
mov
cmp
jmp
xorl
fcompp
mov
enter
int
jecxz
arpl
cli
sub
sbb
incl
fistl
xlat
sub
inc
adc
push
test
fwait
dec
inc
aad
shl
andl
into
dec
fwait
mov
rcll
xor
inc
mov
pop
stc
and
push
rol
dec
loop
int
jns
fcompl
fscale
xor
sahf
add
xor
sub
dec
mov
dec
int
sub
and
mov
mov
mov
jge
cmp
jo
in
mov
dec
mov
xchg
insl
jg
jbe
inc
xor
hlt
imul
repz
shll
xchg
and
in
xor
add
hlt
dec
cmp
add
popf
sbb
inc
popa
mull
sbb
scas
stos
popa
sbb
mov
push
cmp
hlt
pusha
pop
lea
pop
push
out
add
xor
leave
inc
movq
mov
jnp
xchg
xchg
icebp
inc
adc
testb
mov
fxch
mov
daa
sbb
sub
cmp
dec
fstpt
lcall
jmp
data16
push
aad
jecxz
xchg
ret
cmc
call
dec
jns
iret
fs
mov
dec
ret
mov
mull
mov
aas
cmpsb
xor
pop
cmpsl
sbb
cmpsb
outsb
jb
jg
vpshuflw
dec
jecxz
leave
mov
inc
in
sar
or
cmp
aam
push
inc
repnz
das
jns
mov
in
cli
lods
les
hlt
shll
cmc
xor
sub
out
push
dec
ftst
mov
pop
xor
push
imul
sbb
and
ja
incb
inc
imul
xchg
mov
enter
les
mov
cld
xchg
mul
enter
push
movsb
mov
stos
xor
adc
test
inc
cs
movsb
pop
or
jg
mov
clc
fists
or
mov
das
xchg
sti
in
push
es
push
push
sub
push
inc
mov
cmpsl
aam
shll
int
jl
xchg
pop
lahf
fwait
movsb
pop
cmp
cmpsb
movsb
movsl
adc
lds
jle
addr16
push
jo
and
std
add
jmp
das
xchg
fs
jle
dec
arpl
dec
xchg
dec
sbb
push
sarl
jne
sub
inc
out
xchg
in
and
nop
lods
xlat
lcall
loop
mov
imul
xchg
lahf
enter
mov
xor
cmp
gs
push
cmp
ja
mov
pop
popa
cmpl
lret
pop
or
push
fadds
hlt
leave
ds
stos
loop
lahf
stos
cmp
mov
or
push
pop
lahf
or
push
call
sahf
maskmovq
notl
rorb
outsl
and
and
pop
xchg
cwtl
ljmp
addb
lock
es
pop
shlb
fwait
sub
mov
push
fsubs
fsubrp
out
pop
lcall
cmp
cld
gs
jmp
fnstcw
jmp
sbb
loop
adc
mov
xchg
idivb
in
mov
fstps
or
lcall
xchg
push
fisubl
aad
and
ljmp
mov
jns
cmp
insb
addr16
out
lds
shll
jbe
into
cmp
inc
jae
std
mov
mov
aam
mull
into
mov
leave
fimull
ljmp
and
pop
push
sbb
aas
fs
cli
dec
aam
jle
push
sub
pop
sbb
rorl
lcall
stos
xchg
loope
jb
aaa
fwait
adc
mov
or
xchg
sti
lret
sar
movsl
lods
mov
fnsave
jecxz
outsb
pop
inc
sub
or
mov
jl
adc
fisubl
mov
and
dec
scas
push
out
push
pop
mov
pop
adc
dec
imull
addl
lahf
cmpsb
lea
jo
xchg
popa
xchg
arpl
mov
mov
add
mov
sub
lret
xchg
arpl
mov
stos
push
mov
nop
mov
shr
popf
mov
addr16
sbb
cwtl
int
sbb
test
addr16
mov
ds
mov
push
lcall
clc
mov
push
add
xchg
push
lret
or
jle
addr16
adc
and
test
xchg
cmpsb
mov
out
sub
inc
mov
add
jno
loope
dec
mov
adc
out
andl
jae
jae
push
or
pop
lret
fstpt
jp
xchg
mov
mov
mov
xlat
mov
inc
sbb
mov
mov
stc
or
test
scas
nop
mov
mov
fwait
imul
xchg
xchg
jecxz
xchg
pop
sub
movsb
out
dec
out
in
mov
push
xor
dec
adc
cmp
push
rcrb
push
lds
lods
bound
rolb
and
xor
inc
jo
push
xor
aam
lret
xor
lods
mov
andb
or
dec
jle
mov
cld
or
test
data16
clc
push
add
aaa
lods
add
ret
aas
inc
jecxz
in
cltd
insl
mov
outsl
sub
lahf
cmp
dec
adc
ret
xor
fwait
jbe
mov
inc
insl
out
dec
scas
xchg
icebp
cmp
xor
lods
inc
in
mov
push
dec
mov
lods
pusha
xor
cmp
insl
and
test
in
nop
xchg
mov
loope
mov
std
mov
fbld
sbb
enter
sbb
mov
movsl
cmp
sbb
pop
cmp
inc
dec
add
shl
orb
dec
xor
xor
fwait
out
lods
imul
dec
pop
loopne
mov
shlb
mov
sbb
js
pop
dec
mov
dec
mov
push
div
ficoml
push
shlb
ljmp
sub
outsb
shl
nop
push
call
out
pop
stc
sub
pop
rol
ret
mov
mov
and
mov
gs
movsb
jnp
mov
js
push
je
pop
bound
push
push
stos
mov
ret
lods
sub
js
xor
int
scas
add
pop
sahf
js
pop
shrb
movsb
testl
test
push
pop
outsb
mov
sbb
lret
sub
jbe
sarb
loopne
mov
cmp
adc
jmp
lods
inc
lds
js
shlb
shlb
lret
cmp
xchg
sub
and
jnp
lcall
test
mov
mov
pop
fnstcw
push
lret
mov
push
push
push
js
in
test
vpshufd
popf
or
repnz
arpl
rclb
sarl
loop
clc
xchg
jb
lods
adc
mov
cmpsl
and
mov
sbb
imul
filds
lea
outsb
cmp
pop
jbe
shlb
ljmp
pop
test
lea
cmp
stos
lcall
aam
add
lret
es
pop
shlb
add
mov
push
inc
stc
inc
push
xchg
xor
lret
test
out
sbb
nop
pop
inc
mov
fldcw
mov
lret
lods
push
fimull
push
shl
pop
adc
outsl
cmp
clc
ds
add
leave
mov
jp
fs
xchg
pop
xchg
cli
data16
lahf
cmp
enter
mov
fisubrl
xchg
nop
imul
jmp
sbb
nop
lock
or
fsubr
mov
mov
push
push
xor
mov
fs
test
dec
int
faddl
lcall
jae
mull
adc
add
sti
lret
sbb
fsubs
mov
mov
insb
shll
xlat
and
mov
inc
pop
add
adc
aad
mov
add
mov
xchg
jmp
xlat
test
jnp
cmp
int
mov
pop
or
imul
ds
push
inc
cmp
ja
mov
cmpb
adc
out
enter
test
mov
mov
mov
add
xchg
and
test
adc
cmpsb
cmpb
xchg
xchg
leave
add
mov
inc
das
jno
cmp
fdivs
sub
sbb
sbb
cs
cmp
pushf
jae
aad
xchg
loopne
cwtl
mov
mov
pop
lcall
cmp
mov
sub
add
std
cli
add
fninit
push
mov
cmp
arpl
mov
sub
jle
call
pop
sbb
mov
adc
insl
cmp
mov
imul
inc
cmp
leave
arpl
fs
call
jae
mov
mov
sub
push
loopne
xchg
mov
loopne
xlat
cmp
xchg
inc
mov
cwtl
popf
or
xchg
shl
xchg
cs
mov
mov
xor
lock
mov
sbb
adcb
sbb
imul
mov
jo
vucomisd
mov
nop
pop
fwait
enter
dec
ret
or
pop
jo
sbb
xchg
hlt
mov
mov
mov
cmp
ret
loopne
mov
repz
mov
jo
pushf
push
std
sbb
cli
mov
and
addl
popa
xor
xor
clc
sti
repz
xorb
cltd
shrb
bound
fistl
cmpsl
inc
push
sbb
mov
mov
sub
rcrb
and
fisubl
inc
add
popa
inc
sub
mov
push
pop
stos
leave
mov
cmp
popa
jg
mov
ss
cmp
loop
cmc
ljmp
ljmp
repz
loopne
dec
inc
icebp
sub
ret
xor
cmp
mov
aaa
push
cmc
lea
imul
ficoms
fstpl
cs
cmpsl
ret
mov
push
pushf
and
sub
ret
pop
pop
mov
outsl
fistpll
in
mov
dec
inc
pop
enter
arpl
cmpsb
xchg
sbb
leave
stc
out
xchg
dec
loope
add
cmp
dec
xor
sub
cltd
test
pop
or
repnz
adc
into
dec
fldenv
js
in
and
mov
xchg
out
push
and
inc
cwtl
js
sub
out
cld
test
movsb
cltd
or
and
repz
fpatan
cmp
movaps
loopne
dec
mov
xor
mov
cmp
pop
dec
push
dec
scas
push
arpl
aam
outsl
daa
or
test
std
xor
or
subb
cmc
pop
mov
ds
iret
enter
int3
mov
xchg
adcb
roll
jg
rcl
xor
jg
lods
mov
jbe
out
mov
inc
xchg
or
mov
mov
sbb
sbb
je
push
cmp
cltd
mov
xlat
les
call
xor
sub
push
arpl
hlt
repz
cld
outsb
jmp
loope
push
leave
xor
pop
lret
dec
rcr
mov
sahf
lret
fsubl
sbb
repnz
push
jne
scas
push
adc
push
out
inc
addb
mov
sti
ss
enter
jl,pn
cmp
mov
mov
test
faddl
popf
lret
leave
cmpsl
dec
rcrb
aad
fwait
cli
outsl
mov
movsl
jl
sub
jae
lds
and
jle
push
rcl
aad
push
pop
or
scas
jl
dec
lods
ror
mov
cs
stc
xchg
movsb
aam
js
push
jl
xchg
ret
adc
mov
lds
stos
fstps
lret
in
jl
sbb
sbb
mov
xchg
inc
out
cs
in
in
daa
nop
popa
cmp
push
inc
mov
sbb
and
push
ljmp
andl
insb
popa
xchg
inc
or
fpatan
and
and
nopl
jge
bound
cmp
cmc
jle
or
dec
mov
mov
loope
lret
scas
out
xchg
sbb
loopne
dec
add
sbb
sti
addr16
inc
cmp
outsb
dec
inc
popf
mov
jne
push
adc
dec
stos
and
fimull
js
xchg
pop
mov
pushf
add
inc
mov
hlt
mov
mov
decb
and
mov
int
jmp
pop
mov
jne
cmc
ret
and
fsubrl
jp
dec
and
loop
gs
xor
push
bound
mov
push
sahf
or
sbb
pop
sbb
shlb
jb
bound
mov
ret
test
inc
pop
imul
bnd
cmp
test
insb
sti
repz
mov
sub
mov
push
pusha
jns
dec
leave
out
xchg
dec
shl
push
cli
push
aam
pop
lock
enter
pop
mov
adc
cld
ja
rcrb
cmp
inc
ret
or
imul
dec
mov
or
ret
xchg
stos
bound
push
repnz
xlat
push
fwait
xchg
and
xchg
mov
sub
cmpsl
cmpsb
jg
and
jge
rorl
pusha
mov
sub
lds
mov
shr
test
mov
adc
cmc
and
sub
data16
movl
test
sti
cmp
es
stc
outsl
arpl
and
int
popf
mov
das
push
les
push
jmp
imul
imul
jmp
xor
int
adc
mov
imul
sbb
pop
jge
inc
add
test
xor
insl
dec
ret
adc
aaa
and
ret
push
cmp
xor
call
cmc
shl
int
arpl
test
loopne
ss
jle
sbb
cmp
mov
adc
pop
push
mov
les
cmp
cwtl
daa
mov
testl
loopne
fidivrl
push
xor
and
xor
xchg
imul
push
lcall
mov
dec
in
and
pop
outsl
sub
pushf
mov
inc
jl
push
aad
test
dec
and
imulb
jno
inc
and
out
shlb
adc
in
stos
pop
test
iret
bound
enter
cmp
aaa
test
add
pushf
pop
fs
xchg
out
std
adcl
lea
sbb
sbb
push
mov
jno
loope
push
jb
iret
mov
mov
push
gs
xchg
pop
jae
xbegin
das
push
mov
das
in
lds
in
ret
adc
sbb
jl
cmpl
jno
adc
xor
dec
test
lret
mov
sbb
punpckhdq
xor
xchg
jp
cs
repnz
icebp
hlt
push
popa
mov
push
out
and
jnp
and
je
jg
add
or
aas
push
push
adc
mov
mov
out
push
sahf
repnz
popf
aaa
out
gs
inc
lods
pop
std
mov
movsb
xor
outsb
filds
mov
xor
mov
dec
or
mov
test
sub
lea
mov
or
cmp
add
mov
adcb
push
cwtl
ja
adc
pop
xchg
or
sbb
hlt
addr16
sbb
scas
dec
icebp
mov
sbb
outsb
mov
daa
push
jno
lahf
jmp
mov
mov
cmpsl
sub
pop
or
gs
and
ds
out
dec
cmp
add
ret
add
jge
rdmsr
push
data16
pushf
mov
ficoms
aas
pop
call
repz
jmp
scas
inc
fs
xchg
sub
test
cmpsb
pushf
sbb
lods
mov
out
jne
mov
push
dec
add
inc
or
mov
inc
sub
punpckhbw
int
rorl
mov
dec
push
and
mov
mov
fmul
insl
faddl
test
jne
jecxz
jo
mov
gs
int
repnz
in
aaa
or
hlt
push
xchg
sbb
xchg
ficompl
cmp
call
pusha
fsubs
test
push
jmp
fnstcw
or
push
lds
ds
add
popa
leave
jmp
decb
out
mov
addr16
fwait
mov
ficoml
pop
filds
pop
adc
cmp
or
sbb
dec
pop
aam
fldl
shl
repz
ljmp
in
int
fdivs
arpl
cmc
fwait
pop
mov
mov
test
mov
fcmovnu
in
scas
mov
xor
push
jno
sub
adc
xor
xchg
mov
addb
leave
and
mov
or
pop
or
rcrb
jecxz
out
not
mov
mov
sbbb
sbb
push
xchg
testb
dec
pop
test
mov
insl
mov
stos
inc
icebp
cmp
iret
pop
mov
and
jp
xchg
inc
pop
mov
cmp
pop
add
nop
sbb
mov
ja
mov
adc
jmp
insb
scas
loope
sbb
rcrb
cmp
lds
rolb
shrl
and
pop
inc
jp
pop
in
mov
sub
sbb
shrl
sub
clc
push
cmp
fidivs
lret
add
aas
es
dec
loope
inc
into
inc
and
jg
dec
popa
ret
xchg
jp
lds
mov
iret
add
pop
shll
mov
stos
lret
pusha
cmp
pop
lods
insb
inc
mov
jb
or
push
nop
xchg
pop
add
mov
movsb
adc
add
push
imul
push
and
xor
lcall
movsb
jno
lsl
mov
mov
aas
pop
popa
pop
cmp
cli
out
das
mov
scas
jae
aaa
in
shr
inc
popf
rorl
jns
mov
mov
push
incl
pop
sarl
pushf
loop
scas
mov
rcrb
arpl
leave
sub
push
inc
cmp
push
out
imul
sti
sar
fsubl
push
inc
das
int
jb
dec
push
cmp
gs
lods
sub
pop
shl
jmp
and
popf
shll
or
test
iret
mov
in
inc
out
dec
ljmp
pop
int
push
mov
mov
adc
ds
repnz
testl
sti
add
dec
bound
jne
rorl
cmp
std
enter
cmpsb
lahf
jb
jle
rcl
add
imul
sub
out
cmp
mov
mov
mov
in
cld
and
fst
and
arpl
jo
fcom
nop
ret
pop
sbb
bound
cmp
sbb
and
mov
xor
pop
push
mov
sub
enter
jno
bound
das
pop
shlb
sub
cmpsl
cli
mov
and
mov
push
jae
mov
aas
mov
and
xchg
cli
cmpsl
cmp
shll
ds
and
js
sbb
loope
fs
add
push
gs
mov
mov
test
jmp
mov
xor
test
dec
xchg
ret
jbe
sub
sbb
shll
test
jbe
in
fcoml
fs
shrl
in
mov
jp
cmpsb
sbb
mov
inc
stos
enter
adcb
push
jg
mov
inc
push
push
outsl
lea
test
clc
lods
inc
out
adcb
and
es
push
lds
test
pop
or
jb
cld
fdivs
test
popa
push
test
test
out
jno
xlat
cmc
mov
pop
mov
and
gs
sub
cmp
les
jmp
sahf
jge
andb
mov
jb
cmp
sub
xor
cmp
push
stos
push
and
lods
pop
call
aad
adc
rcrb
or
fs
les
inc
push
mov
mov
inc
das
jmp
aas
pusha
push
push
test
push
xchg
mov
sahf
or
xchg
mov
sbb
test
into
cmp
sahf
movsb
push
mov
or
and
cmpsb
dec
cli
pop
insb
sbb
sahf
add
and
into
cli
pop
jp
pop
adc
pop
xchg
in
cmp
pop
lret
inc
insb
test
adc
mov
cltd
xor
mov
movl
sub
sbb
repnz
cmc
dec
adc
js
xchg
add
inc
dec
cmp
sub
mov
xchg
adc
add
int3
fcoms
or
stos
xor
push
dec
fxtract
add
std
mov
sbb
pop
lods
in
inc
loopne
call
xor
xchg
stos
adc
fwait
mov
aaa
push
out
repz
mov
outsb
add
fidivl
leave
fucompp
xchg
mov
dec
stos
mov
push
sub
xor
or
or
mov
stc
adcl
ret
lock
ret
xor
aas
jmp
dec
imul
jle
orb
adc
fsub
cmp
push
add
push
lcall
lea
adc
fiaddl
pop
cmpsl
adc
insb
cli
fwait
andb
data16
or
lea
ljmp
paddw
insl
inc
je
scas
jge
cmovae
subb
dec
out
dec
mov
push
push
fidivrl
adc
sub
xor
sbb
push
xor
sti
adc
xchg
pop
cld
mov
sub
sub
push
test
pusha
mov
das
stc
mov
xchg
cld
cmp
mov
sahf
test
das
test
cmp
jle
cmp
nop
sub
jb
xchg
pop
jbe
and
lcall
mov
jnp
xchg
mov
dec
jns
lock
push
xor
inc
and
sub
rcr
cmp
inc
js
jo
and
loop
mov
xor
shl
xlat
jecxz
pop
arpl
mulb
sbb
adc
adc
hlt
loopne
sub
push
cmp
cs
pop
test
decb
in
mov
rorb
mov
jne
pop
pop
jno
push
mov
lea
rcrb
mov
ret
cmp
xlat
lcall
pusha
adc
ret
fwait
data16
mov
add
mov
cmp
mov
sbb
adc
mov
push
pop
pop
pop
sbb
cmp
push
aad
inc
xor
fisubrs
cmpsl
stc
or
inc
xchg
out
lods
aas
ret
mov
test
cmpsb
popa
adc
clc
es
pop
adc
pop
pop
sub
pop
xchg
pop
push
and
pushf
cld
mov
sub
testl
mov
push
outsb
xor
and
clc
lcall
loope
and
xchg
mov
mov
push
stos
jmp
lcall
fisttps
lods
lret
out
call
mov
dec
stc
xchg
stos
adc
imul
mov
fwait
mov
int3
dec
jp
and
adc
add
add
insb
mul
ljmp
jg
push
or
xchg
push
sub
lods
and
arpl
shlb
cmp
add
lods
popf
xchg
clc
push
cmp
mov
fdivl
pop
dec
in
sbb
mov
rolb
pop
flds
cmpsb
dec
jmp
shll
outsl
lret
faddl
sar
mov
and
mov
in
mov
push
test
popa
mov
and
je
ret
add
call
pop
test
call
xchg
daa
xor
pop
pop
or
cld
daa
std
loopw
adc
cmpb
adcl
xor
or
scas
mov
mov
xor
pop
stos
insl
push
and
cmp
sbb
leave
pop
push
daa
push
ret
enter
add
add
hlt
mov
adc
aas
int
or
pop
cmp
inc
mov
add
sbb
in
push
mov
and
sub
fdivs
xor
int
sbb
ds
arpl
pushw
push
addr16
and
roll
cmp
in
out
or
and
loop
pop
push
push
inc
push
mov
inc
mov
push
addr16
mov
out
cmp
add
outsb
push
cmp
nop
sub
mov
aas
inc
lods
jbe
adc
notl
sbb
stos
aas
dec
aas
fdiv
test
icebp
rolb
sbb
xorb
mul
pop
scas
stos
push
ja
jne
shrb
mov
dec
xor
add
out
mov
aas
fimull
and
inc
pop
dec
aam
cmp
jae
sbb
push
pushf
fwait
push
dec
sbb
test
xchg
xor
je
mov
or
adc
je,pn
mov
pop
addr16
nop
ljmp
mov
lret
or
incl
lea
mov
adc
xchg
sti
hlt
pop
cmpsb
xchg
imul
add
mov
jle
icebp
xchg
pop
push
rcrl
bound
notl
into
and
adc
sahf
nop
sub
xor
dec
mov
jle
sbb
dec
scas
test
imul
lock
rol
test
lea
fnclex
jno
adc
mov
push
cmpsl
inc
repnz
pushl
lcall
jg
add
mov
icebp
stos
inc
adc
or
mov
std
in
push
cs
adc
mov
hlt
mov
mov
jno
mov
mov
add
ljmp
aad
enter
cmp
decl
out
and
add
push
inc
sbb
mov
and
fists
loopne
lds
cwtl
imul
mov
scas
les
mov
test
cmc
or
push
xchg
mov
sub
lret
mov
icebp
mov
adc
jl
fisubrs
call
jle
mov
cmp
jmp
dec
push
das
jnp
lds
loop
inc
outsl
cmp
cmp
sub
cs
mov
into
ret
arpl
pop
sbb
cmp
xchg
lock
lahf
inc
cs
es
int3
or
ja
pop
pop
lret
out
sbb
inc
sub
les
push
stos
testb
or
pop
sub
push
add
sbb
sbb
popf
xor
and
push
push
jmp
stos
xchg
movsl
push
jecxz
add
stc
add
push
mov
int
inc
rcr
mov
fmull
xor
or
popw
push
or
xor
xchg
pop
cwtl
shll
push
jmp
pusha
xlat
lods
pop
stos
in
sbb
loope
test
out
cld
shlb
jbe
cmp
fwait
sbb
mov
ret
xchg
xchg
popf
bound
adc
cmp
inc
cmp
xchg
and
push
fucomi
lea
fisttpl
nop
test
xor
aam
mov
insb
lahf
push
push
cs
aam
cmc
mov
je
ss
pop
ret
push
outsb
inc
enter
pushf
rcrl
push
xlat
andl
fs
jns
xchg
jns
sbb
les
xchg
xor
pop
push
and
outsl
dec
out
repz
dec
sahf
push
testb
lcall
add
or
leave
inc
and
xor
out
popa
mov
adc
mov
pop
hlt
btc
dec
shlb
subb
outsl
orl
icebp
push
out
xor
fadds
popa
sub
push
jne
mov
cs
push
push
inc
imul
jno
in
cmpsb
outsl
jno
outsb
or
mov
jns
dec
jmp
jo
adc
fiadds
mov
jge
divl
ja
jg
xor
add
stos
and
mov
repz
xchg
fsubl
mov
das
shll
xor
shll
jl
fs
cmpsl
cmpsb
sbb
pop
sub
sub
shl
push
out
iret
insl
push
div
negl
pop
fidivs
jbe
jecxz
mov
movsb
dec
and
mov
xor
cmp
outsb
mov
cmp
nop
xchg
sub
je
int
rorb
xchg
mov
dec
ret
jb
cmp
lods
push
aas
add
and
adc
mov
adc
ds
xchg
js
or
addr16
dec
insl
and
inc
jns
cmp
insl
xchg
mov
fs
dec
or
mov
int3
repnz
imul
jle
inc
pop
mov
jo
dec
arpl
mov
cli
adc
dec
jbe
ljmp
pusha
jmp
cmp
mov
movsl
scas
roll
hlt
lret
popl
push
push
enter
push
jp
aad
subb
aas
jnp
xor
sti
xor
inc
imul
push
insl
imul
sbb
sub
movsl
dec
scas
arpl
xor
loop
and
pop
mov
mov
mov
shll
in
aaa
mov
fnstenv
fstps
or
jl
push
pop
loopne
bswap
mov
or
lcall
mov
repz
movsb
cmp
push
mov
xchg
add
es
imul
and
inc
add
enter
fbstp
pop
out
jns
icebp
mov
lock
out
and
cwtl
inc
push
push
fs
out
in
mov
mov
dec
rorb
pop
outsb
dec
cmc
in
fmulp
in
jmp
ljmp
pop
sub
test
mov
in
sub
jle
jge
jmp
aaa
mov
push
push
nop
std
adc
and
mov
pop
inc
pop
insl
mov
in
lcall
icebp
and
pushf
pop
dec
shlb
lret
adc
jb
xchg
pusha
push
sbb
push
xor
sahf
sub
cltd
push
mov
icebp
mov
sbb
dec
lret
cltd
push
pop
insl
mov
push
pop
xor
xor
fisubrl
dec
hlt
push
add
mov
lahf
in
std
into
fdivl
or
pop
and
das
mov
stos
dec
cmpsb
jb
mov
xor
js
fisttpll
loop
es
push
xor
pop
or
and
popl
into
jne
daa
repnz
xor
jge
pusha
iret
shll
loope
mov
inc
or
and
in
inc
jle
cmp
xchg
xor
adc
xchg
push
in
adc
cmp
cmpsb
iret
jl
mov
clc
adc
popf
pushf
push
mov
cmpsb
cmc
mov
fmull
pop
int3
mov
xchg
sub
fisttpll
or
xchg
and
jno
cli
adcl
fstl
dec
subb
test
insl
test
sahf
in
mov
test
push
adc
mul
gs
xor
lahf
cmp
cmp
ret
inc
and
add
mov
xchg
scas
add
pop
mov
sub
fsubs
mov
jg
test
dec
mov
and
outsb
aas
push
in
mov
subl
daa
mov
xor
add
mov
outsb
xor
cltd
and
bound
xor
pop
xchg
popf
sbb
pop
pop
jo
movsb
cld
sbb
dec
add
adc
mov
add
xchg
mov
mov
iret
mov
scas
xchg
jae
mov
mov
lret
in
int3
arpl
mov
jmp
push
add
add
inc
imul
mov
ficoml
movsl
notl
xchg
push
or
jp
stos
adc
inc
cmpl
pusha
pop
gs
push
pop
mov
insl
lods
movups
lea
jmp
hlt
test
insl
dec
fs
test
in
mov
sahf
stc
fldcw
movsl
fistps
mov
out
out
push
mov
inc
out
aam
push
pop
jbe
dec
ljmp
leave
adc
cltd
das
inc
cmp
adc
sbb
addr16
inc
inc
lock
bound
lds
mov
fs
scas
sbb
xchg
cmp
shll
sbb
rorl
or
movsb
sub
mov
mov
sub
mov
test
mov
mov
mov
push
inc
mov
mov
lock
cmp
xchg
push
push
pushl
sub
adc
xor
insl
outsb
mov
and
out
js
pushf
mov
jo
jno
sub
sbb
mov
in
sbb
es
xchg
dec
loope
loope
xchg
sub
popa
jl
push
sahf
push
cwtl
imul
cli
iret
cmc
cld
xor
popa
fwait
es
mov
inc
mov
jge
sub
test
mov
add
or
sbb
bound
pop
in
xor
jo
insb
xchg
push
xchg
stos
xchg
jne
xorb
inc
mov
and
mov
inc
add
mov
mov
cld
das
imul
andl
mov
pop
lahf
mov
push
lods
sbb
outsl
mov
sbb
cld
cmpsl
pop
rorl
jecxz
pop
das
jmp
hlt
int3
pop
mov
adc
cmp
mov
js
repz
pop
out
sbb
sbb
mov
orl
jo
inc
imul
sbb
xor
aam
fcom
icebp
lods
jns
int
and
gs
xchg
pushl
inc
aaa
in
je
arpl
clc
xchg
fistpll
xor
or
adc
decb
push
fidivs
add
les
or
repnz
inc
in
inc
fisttpll
xchg
mov
shrb
ds
clc
data16
shlb
sbb
pop
pop
rcr
enter
jb
xchg
aaa
mov
inc
das
pop
or
mulb
lock
or
dec
add
stos
mov
dec
mov
cmpsl
push
dec
mov
sub
lcall
lret
cltd
sub
and
mov
pushl
popl
mov
ja
fcompl
movsl
bound
add
cld
sub
pop
jle
push
xchg
push
mov
pop
jmp
xchg
mov
ja
sbb
into
test
add
jnp
mov
inc
pop
shll
cmpsb
mov
mov
rorb
je
cmpsb
add
pop
repz
in
push
mov
lea
filds
xchg
mov
pop
dec
push
dec
jb
roll
adc
test
cmp
mov
rclb
ret
pop
mov
mov
mov
jl
inc
sub
dec
push
and
xchg
ljmp
mov
cmp
out
push
mov
inc
add
mov
push
xor
lret
inc
out
repnz
xchg
rdtsc
ds
ljmp
add
xchg
mov
sti
xor
mov
or
cli
push
or
sub
hlt
add
mov
push
push
jle
mov
sbb
scas
jge
lcall
and
sarb
lock
test
ljmp
out
sbb
mov
sbb
push
loop
imul
ret
test
clc
dec
sub
jecxz
dec
scas
push
xchg
jo
pop
xor
pop
jecxz
jbe
cmpl
jnp
push
push
xlat
xor
test
andb
call
sub
and
jo
sub
pop
sub
fnstenv
out
and
lea
fdivl
jle
ds
push
data16
jae
or
imull
mov
xor
mov
dec
jge
dec
pop
cmp
dec
add
dec
push
pop
add
mov
ret
divl
dec
or
pop
imul
imul
aad
es
mov
jno
or
into
sbb
cld
mov
dec
sub
sbbl
mov
jge
mov
insl
pop
aas
mov
fwait
mov
cmp
cmp
stc
movsl
inc
imul
fcomps
das
mov
jp
jo
push
xchg
ret
shrb
mov
xchg
jae
pop
adc
sysret
call
mov
mov
mov
cmp
cmpsl
out
fwait
mov
add
repz
or
movsb
das
fimuls
loope
js
add
pop
nop
mov
and
dec
dec
push
push
dec
fadds
ljmp
inc
cmc
shlb
movsl
add
test
lret
fwait
cmp
ja
sbb
and
xchg
out
mov
dec
xor
adc
pop
or
sbb
decl
cmp
mov
cmp
push
sbb
in
ret
scas
sbb
lret
rcll
int
xchg
fdivr
xchg
or
es
jns
mov
loop
movsb
add
out
jno
cs
lds
push
outsb
ja
sub
add
rep
leave
xor
mov
mov
sub
xor
xchg
xor
mov
jno
mov
inc
jle
mov
add
lcall
mov
or
loope
insb
stc
and
dec
dec
jno
fwait
sub
inc
jle
in
jo
mov
mov
inc
inc
pushf
push
rcrl
int
push
jno
les
mov
mov
in
jle
mov
inc
xorl
xor
mov
jmp
cld
mov
cld
daa
jb
mov
mov
out
dec
jg
push
jnp
lds
int
dec
or
stc
mov
sub
stos
inc
stos
mov
jg
pop
push
push
jecxz
cmp
dec
push
mov
mov
xchg
jnp
es
cmp
sbb
push
or
sbb
jg
cmp
imul
push
push
or
jge
jecxz
push
push
jge
push
scas
test
addr16
pop
rorl
rcl
addr16
aaa
outsl
in
dec
pop
inc
pop
lds
scas
mov
out
scas
adc
mov
fwait
and
outsb
and
pop
xor
dec
js
loop
outsl
push
jb
fists
pop
mov
xor
adc
andb
sub
int3
stc
jge
xchg
inc
aas
xor
inc
sahf
cmp
adc
push
jno
out
xor
aam
rcll
movsl
shl
jne
jge
pushf
daa
add
pop
push
push
inc
pop
out
imul
fcmovnu
insl
inc
dec
mov
cmpsl
push
rclb
xor
jbe
data16
gs
lds
es
jne
mov
xchg
loopne
push
stc
bound
jmp
sahf
sub
xchg
ss
and
push
mov
cltd
mov
out
outsl
or
scas
jo
and
fsubr
and
lahf
xor
daa
push
test
xchg
dec
fwait
inc
dec
rolb
dec
movsb
add
mov
or
mov
out
xor
or
and
sahf
cltd
jo
xorl
sti
jns
mov
inc
mov
xchg
mov
cld
fs
cwtl
fiaddl
hlt
add
cltd
adc
lods
pop
push
jmp
cmp
shl
mov
dec
rolb
push
clc
int
jmp
push
gs
push
jne
std
outsb
outsb
adc
testb
call
fwait
push
pop
stc
xor
push
and
or
cmpsb
or
inc
lods
test
cmp
jnp
push
loop
in
je
push
stos
mov
mov
adc
cmp
mov
ds
dec
mov
mov
call
les
aad
add
push
es
adc
into
or
push
and
mov
or
jo
and
aaa
cltd
mov
lds
cmpb
icebp
xchg
incl
mov
rcl
sub
lds
jns
les
jecxz,pn
addr16
and
adc
scas
scas
fisttps
pop
cs
call
repz
dec
in
sbb
gs
aad
mov
pop
enter
dec
pushf
mov
roll
and
push
dec
jg
popa
xchg
mov
in
xchg
lods
enter
inc
inc
adc
push
mov
lods
ljmp
ja
and
and
ret
mov
aad
push
fsts
push
enter
push
mov
mov
add
mov
xchg
adc
add
pop
scas
jmp
cmp
fabs
pop
push
pusha
enter
inc
popa
push
pop
jp
leave
fnstcw
pop
xchg
mov
mov
je
arpl
jbe
jb
sub
bound
xor
leave
mov
bswap
imul
inc
mov
das
push
mov
clc
pop
and
fs
test
popa
add
or
hlt
loop
stos
out
jl
fimuls
push
les
outsl
call
add
dec
xchg
jns
sub
sub
popf
test
setno
mov
push
fs
xchg
jmp
inc
mov
aad
hlt
je
push
and
test
scas
or
xchg
or
fwait
mov
cld
pop
aaa
add
push
mov
xchg
adc
call
dec
jne
jle
cmp
pop
loope
lret
nop
sahf
imul
mov
mov
dec
xlat
xchg
xchg
in
cmpsl
in
insl
xor
mov
sub
and
cmovo
jmp
jg
insb
out
mov
mov
lret
cmpsb
pop
sub
sbb
ljmp
aam
fildll
scas
leave
dec
sub
fwait
push
loop
adc
jns
sbbb
sbb
and
stc
sub
mov
movb
stc
out
push
dec
andl
mov
outsl
andl
int
std
adc
insl
lock
push
into
mov
das
repz
cmp
ds
loopne
pop
fwait
or
test
push
jmp
jge
insb
jne
setno
dec
xchg
pavgb
int3
push
cs
xchg
dec
jns
das
jo
jmp
or
vandnpd
pushf
sarl
mov
int
xchg
jmp
imul
data16
pop
in
mov
cmp
das
pop
cmp
jo
sub
xor
pop
ja
and
jl
or
mov
xor
lods
dec
std
ljmp
inc
sub
insl
mov
fs
test
push
stos
sub
xchg
cmp
pop
fldenv
mov
nop
je
jnp
push
push
jge
and
mov
lret
mov
push
jecxz
xor
xchg
lcall
ficompl
jl
pop
pop
sub
mov
adc
lods
iret
test
cmc
dec
xchg
push
fwait
adc
or
lea
adc
sarb
mov
push
dec
insb
jnp
jecxz
or
dec
stos
pop
ja
or
in
pop
cwtl
jb
adc
pop
push
jp
sbb
aad
shrl
xor
sub
dec
daa
addr16
fcoml
xchg
mov
adc
pop
lret
sub
dec
imul
pop
add
sub
jg
icebp
mov
mov
push
push
mov
lods
fs
and
dec
pop
cmc
push
dec
jp
aaa
sbb
cmpsb
lcall
insb
xchg
fstps
adc
jg
jg
jo
nop
mov
out
inc
es
push
jb
mov
push
sbb
outsb
jmp
inc
mov
stos
enter
pop
and
ds
pushl
and
mov
sbb
in
push
jle
jle
into
ja
sahf
jge
test
inc
mov
fprem1
xchg
pop
imul
popa
je
jle
scas
lock
adc
xchg
mov
imul
add
jb
cmp
xchg
dec
out
cmp
arpl
pop
adc
retw
xchg
fdiv
loopne
movsb
xchg
mov
loope
adc
icebp
jno
xor
xchg
das
dec
stos
adc
xchg
outsl
imull
arpl
sub
sub
inc
jns
cld
mov
cmc
je
lock
dec
out
out
add
dec
sbb
jbe
cmc
rcll
xor
mov
or
outsb
repz
mov
mov
fsubrs
adc
mov
daa
push
or
pop
leave
es
push
adc
pop
push
sub
mov
xchg
xchg
push
and
add
add
push
dec
fisttps
data16
inc
mov
stos
sub
lret
shll
popf
out
adc
jns
repz
lcall
lret
pop
cmp
mov
cmp
out
into
jns
cmc
xor
and
adc
lods
stc
andb
mov
test
aaa
xchg
or
clc
hlt
push
shl
xchg
xor
jg
loope
lret
adc
outsb
test
add
icebp
pop
mov
add
or
mov
xor
add
test
inc
addr16
loope
sbb
xchg
pop
sbb
cli
cmp
fisttpl
lods
mov
inc
jle
and
lea
addr16
xorl
pop
out
cmp
mov
inc
adc
les
dec
mov
xor
mov
call
mov
and
pop
imul
ljmp
and
mov
sbb
adcl
in
call
pop
test
xchg
push
or
sbb
test
push
pusha
sub
out
and
fldcw
cmp
jbe
lock
movsl
push
xor
fsubl
mov
pop
ss
or
pop
fxch
out
loope
mov
pop
ror
out
jl
test
jo
je
dec
lret
jle
push
ret
and
mov
jl
int3
adc
data16
xor
popf
movsb
dec
cmp
mov
je
mul
andb
push
fisttpl
call
mov
dec
add
ror
lods
push
into
push
fdivl
ss
sbb
jmp
mov
push
or
sbb
mov
jae
stos
pop
das
out
nop
jnp
xchg
out
push
les
and
add
adc
mov
cmp
ja
add
ss
sbb
or
pop
out
and
mov
insb
cmp
stos
pop
cmp
rclb
xor
ss
xchg
dec
xlat
sti
push
push
mov
jno
jnp
mov
xlat
in
insb
into
pop
jecxz
inc
aas
xchg
mov
loopne
inc
stos
jnp
mov
cmp
iret
ret
clc
sti
call
inc
adc
xor
mov
pop
jg
sub
in
jb
cwtl
movsb
adc
fdivrs
adc
dec
and
sub
in
int3
sub
xchg
mov
jo
sarb
sbb
xchg
movsb
fsts
xchg
clc
das
xor
add
push
inc
scas
and
adc
outsb
ret
insb
stos
sbb
jmp
dec
jl
pushf
pop
adc
bswap
or
mov
jp
push
sbb
sub
aaa
pop
fsubrp
sahf
mov
mov
xor
mov
in
mov
scas
xchg
sub
and
jmp
sbb
xchg
cmpsb
dec
mov
in
out
stos
mov
xor
jg
enter
mov
popf
insl
adc
mov
imul
mov
cld
xor
pop
into
pop
sub
mov
xor
pop
pusha
lea
rcrb
hlt
dec
jno
pop
push
push
push
jb
mov
adcb
mov
jns
push
sub
cmc
push
in
dec
dec
aad
loope
cmpsl
pop
bound
adc
vcomiss
scas
out
jnp
pop
es
iret
mov
or
jno
and
xor
cltd
imul
sahf
sbbb
mov
xchg
divps
jge
mov
sbb
lret
and
add
adc
xor
sub
std
sbb
scas
xor
xchg
cmp
fimull
cmp
mov
add
loope
mov
or
push
repnz
out
aaa
cmp
cwtl
lcall
lret
jge
jmp
and
mov
pop
inc
mov
and
push
inc
mov
fcoml
imul
xchg
je
sub
in
sbb
sub
fldl
xor
in
faddp
push
cmp
stos
dec
test
adc
ret
mov
lahf
xchg
push
add
push
cmp
jmp
xchg
ja
clc
cmc
ret
int3
dec
popf
or
xchg
adc
push
fwait
cmp
push
dec
iret
pop
mov
mov
push
mov
sub
ljmp
xchg
sti
out
push
js
mull
lods
out
hlt
insb
add
or
loopne
mov
inc
or
mov
ret
loopne
dec
sub
lcall
inc
mov
jnp
sub
dec
and
mov
mov
adc
insb
loopne,pt
out
inc
stc
xor
dec
cmp
cmc
das
pop
xor
mov
jns
imul
xchg
not
jge
sub
iret
leave
mov
mov
or
sub
dec
xor
jbe
xchg
lock
sbb
call
push
bound
jmp
push
cld
xor
adc
int
and
call
test
push
mov
jmp
jae
cmp
dec
aam
jnp
mov
jo
loope
cltd
addr16
mov
jg
dec
jmp
jb
adc
nop
stc
mov
lds
sub
add
dec
mov
repz
inc
arpl
add
lret
in
cwtl
cmp
cmp
lahf
or
sti
dec
scas
es
roll
rcr
push
cmovnp
inc
leave
pop
fdivp
fsqrt
pop
add
xchg
lret
jmp
jb
or
xchg
mov
jae
mov
lea
add
aas
push
adc
les
lods
xchg
ds
jl
cmp
mov
fadds
pop
mov
jno
jb
out
xchg
loopne
mov
mov
jp
inc
inc
and
sbb
aaa
in
add
push
sbb
push
push
or
ss
cmp
and
add
cmpsb
nop
cmp
lret
hlt
pop
sub
sarb
subl
pushf
arpl
test
loope
mov
ds
pop
packsswb
push
xchg
adc
loope
cmp
jns
ds
fbld
inc
xlat
add
xor
xchg
or
testb
mov
sbb
mov
dec
pop
dec
data16
js
sub
lcall
push
call
mov
sahf
inc
dec
jmp
jle
dec
dec
iret
sbb
mov
and
popf
or
dec
add
cmp
and
pusha
movl
mov
inc
pushf
lock
dec
and
push
std
push
and
insb
mov
xor
mov
mov
out
call
lock
shll
add
pop
push
adc
sub
mov
jmp
insl
xor
shrb
push
les
stos
cmpsl
rep
mov
lods
inc
sub
into
cmp
jg
cmc
icebp
cld
fildl
repnz
lret
mov
loopne
sbb
sbb
ds
mov
je
and
sti
test
adc
adc
leave
pop
and
pop
push
push
or
mov
sti
jecxz
sub
cmp
outsl
sub
ficompl
pop
sub
sbbb
cmp
sub
je
push
negl
mov
add
out
add
lds
push
jno
push
imul
and
dec
push
and
pop
scas
cwtl
lods
ret
pop
popa
fnstcw
mulb
jg
jg
dec
push
sub
sti
adc
outsl
imul
mov
xchg
xor
pop
sub
mov
iret
push
repz
and
mov
inc
out
fs
insb
stos
cmp
jnp
jns
mov
arpl
pop
bound
imul
rorl
sbb
jmp
pusha
in
jnp
cmp
and
sub
mov
rcrb
ds
jmp
nop
clc
jnp
jo
inc
lods
lods
add
out
out
mov
test
ret
or
sbb
jge
adc
mov
xor
test
push
mov
pop
cmpsl
push
fnstenv
das
call
stos
test
pop
scas
pop
inc
dec
test
and
dec
aaa
into
out
inc
pop
mov
cmp
aas
mov
lahf
mov
inc
jno
stc
cmpsb
and
mov
xchg
dec
pop
cmp
mov
mov
rorl
dec
cs
push
push
jns
or
or
sbb
and
mov
dec
cmp
inc
mov
mov
jmp
nop
popa
jp
in
dec
jno
leave
pushf
xor
cmp
ret
sbb
sar
add
mov
decl
negl
stos
inc
inc
cmpb
xchg
in
dec
mov
or
sar
jno
and
add
rcr
cli
stos
loope
fsub
test
rcll
sbb
adc
je
push
adc
push
rorb
push
cmc
mov
xchg
clc
add
gs
bound
dec
fwait
jnp
mov
xchg
push
insb
daa
into
push
cwtl
and
in
inc
dec
fbstp
fildll
lea
das
add
int3
in
sbb
push
sbb
sbb
in
push
add
dec
mov
pop
push
rcll
mov
pop
sub
push
negl
and
sub
icebp
testb
adc
cmp
pop
and
or
cmp
bound
sub
inc
push
mov
mov
or
push
insl
jp
movsl
lds
pusha
dec
mov
xor
aad
jno
in
adc
pop
mov
stos
sub
jge
frstor
in
cs
cmp
lea
int
jnp
test
sub
jecxz
jmp
or
lods
call
push
sbb
pop
xchg
dec
pop
mov
cwtl
call
out
dec
repnz
add
gs
lcall
ret
sub
dec
in
insb
jge
fwait
loope
in
clc
and
aad
mov
pop
std
cli
adc
xor
and
adc
out
test
ret
inc
test
pop
push
pop
and
sub
loopne
or
push
inc
in
lahf
mov
sub
push
adc
adc
out
call
enter
xor
insb
push
adc
inc
nop
addr16
js
xchg
mov
std
adc
xchg
mov
mov
add
adc
mov
mov
and
xor
pop
add
mov
ret
jnp
cmpsb
mov
cltd
mov
push
cmp
mov
gs
sti
dec
mov
ret
jnp
loopne
inc
add
in
das
xchg
mov
aad
cmp
lods
cmpsl
mov
mov
add
push
sub
test
pop
fwait
jge
fldl
sbb
imul
xchg
loopne
sti
mov
out
in
xor
xchg
dec
push
scas
dec
popf
cmc
ret
lea
push
cmp
loope
addr16
mov
add
sub
adc
pop
ja
and
in
call
imul
or
add
push
sarl
rorl
loope
push
lods
cmpsb
ret
daa
std
incb
sub
sub
jle
xor
scas
xchg
jae
push
push
push
mov
dec
or
xchg
outsl
xchg
push
push
mov
aaa
sub
stos
aad
test
adc
aad
shlb
xor
je
jo
adc
lcall
arpl
jmp
das
push
insb
int3
shr
sbb
dec
push
loope
fcmovne
xlat
xchg
jge
lsl
loop
repz
add
sti
xorb
and
insl
add
pusha
shlb
aad
lock
mov
cmp
hlt
popa
sbb
xchg
inc
jmp
jge
hlt
sbb
push
stos
imul
out
cmp
clc
xchg
hlt
int
pop
xor
mov
xor
jecxz
sar
mov
xchg
cmc
lods
call
mov
adc
outsb
jp
in
pop
push
aas
jl
pop
lods
nop
leave
mov
mov
in
insb
lret
into
push
imulb
push
rcrb
rolb
mov
sbb
jp
push
in
xchg
divb
out
addr16
int
fmulp
cwtl
dec
ds
ret
shr
mov
dec
jae
cmc
adc
mov
dec
mov
inc
sbb
mov
aam
in
int3
lret
pop
cli
ljmp
add
test
cmpsb
loopne
cwtl
push
sbb
xor
xor
mov
mov
adc
xor
mov
mov
loopne
je
mov
push
inc
cmp
dec
ss
dec
add
jp
sbb
loop
add
andb
sbb
cltd
cmp
sub
shlb
xor
pop
and
cmc
ja
xchg
fstpl
cli
hlt
out
push
adc
mov
mov
xchg
push
ljmp
lods
pop
add
das
cmp
repz
adc
shlb
and
mov
inc
xor
stc
stos
jl
in
test
addr16
imul
xor
cmp
sti
into
push
dec
mov
scas
hlt
popa
sub
stos
xor
pop
and
mov
leave
cmpsb
cmpsl
adc
jmp
enter
sbb
xor
je,pn
lds
or
jp
sbb
dec
and
fcoms
cmp
test
cmc
ss
xchg
cmp
movsl
mov
pop
add
icebp
mov
pop
xchg
cmp
test
cmp
or
xor
xchg
nop
fildll
jne
add
lods
xchg
adc
lret
xchg
mov
sbb
mov
ljmp
loopne
std
or
sub
inc
jno
data16
mov
pop
adc
sub
xor
stos
cmpsb
or
cmp
inc
repnz
add
push
loopne
xchg
insb
cli
cmp
xor
lahf
push
rclb
jmp
dec
outsb
cmp
pushf
sbb
mov
movsl
jmp
push
mov
jl
outsb
arpl
xchg
adc
xchg
call
mov
adc
ss
push
and
lods
cmpsl
dec
mov
call
jno
xchg
notb
or
fnstsw
cld
dec
jo
xor
inc
fiadds
add
sahf
adc
add
pop
out
push
or
sbbb
mov
xchg
pop
inc
mov
enter
aad
jae
ret
and
aad
leave
leave
jb
sahf
lods
push
out
xchg
xchg
xor
xor
imul
cmp
sub
pop
lods
lock
call
or
jmp
into
pushf
mov
mov
inc
sbb
adc
addr16
dec
jnp
mov
or
out
jp
hlt
jns
or
jl
push
adc
push
xchg
iret
inc
sbb
mov
inc
jne
ss
push
xlat
mov
jno
into
inc
addl
popf
es
jno
or
cmp
pop
stos
sub
rorb
inc
or
jae,pn
cmpsl
popf
push
int
inc
stc
cmpl
test
mov
or
add
ja
pop
imul
mov
xchg
insb
xchg
js
pushf
cmpsb
cltd
sub
repnz
or
jl
jbe
enter
test
adc
loop
mov
dec
out
arpl
xlat
cmp
stos
jno
fisttpll
adc
nop
ror
adc
sub
xchg
out
gs
cld
add
xor
jo
xor
xor
lock
mov
orl
insb
repz
jg
inc
pop
mov
jge
divb
fildll
mov
stos
mov
push
mov
cltd
mov
dec
lahf
mov
es
push
in
mov
push
shlb
rcrb
test
ficoms
test
mov
inc
popf
pop
xlat
push
mov
cs
mov
std
jae
mov
pop
outsb
repnz
inc
pushf
cmp
daa
repz
divb
push
adcb
movsb
mov
mov
cltd
mov
sub
enter
loopne
loop
in
cmc
sub
hlt
pop
cmpsb
scas
int
cmp
fucom
rorb
cmpsb
stc
gs
mov
loop
cmp
in
xor
and
cmpsb
mov
adc
arpl
lods
xor
addl
mov
inc
movsl
sub
negl
xchg
mov
xchg
xchg
hlt
sub
adc
pusha
ficomps
insl
inc
repnz
cmpb
jns
adc
or
pop
pop
sub
sub
lret
push
into
and
fsts
insl
and
filds
sti
dec
inc
add
dec
xchg
ret
ret
out
dec
adc
pop
pop
mov
jne
cs
sbb
repnz
sub
pop
jle
int3
adc
insl
mov
cli
mov
or
mov
in
ror
inc
xchg
cmp
pop
and
outsb
mov
mov
or
xor
jns
repz
sti
mov
mov
jle
.byte
