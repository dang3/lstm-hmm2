inc
je
inc
push
push
jo
xor
bound
add
add
add
in
push
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
movb
mov
pop
pop
ret
mov
push
mov
add
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
push
mov
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
movl
mov
push
call
test
jne
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
push
mov
push
mov
push
call
test
je
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
mov
movl
lea
push
mov
push
call
test
je
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
movw
movw
test
je
movl
and
and
mov
mov
push
mov
push
mov
push
call
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
push
mov
push
mov
push
call
test
jne
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
movl
mov
push
call
test
je
call
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
call
movl
mov
push
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
push
mov
push
mov
push
call
test
je
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
call
mov
push
mov
push
mov
push
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
and
mov
test
jne
mov
mov
and
mov
mov
movl
lea
push
mov
push
call
test
je
and
mov
test
jne
mov
mov
and
call
mov
push
mov
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
push
mov
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
mov
mov
mov
mov
mov
movl
mov
push
call
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
movl
mov
push
call
test
jne
mov
movw
movw
test
je
movl
and
and
mov
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
push
mov
push
mov
push
call
test
je
and
mov
test
jne
mov
mov
and
call
and
mov
test
jne
mov
mov
and
mov
mov
movl
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
call
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
call
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
push
mov
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
mov
pop
ret
mov
push
mov
add
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
call
mov
push
mov
push
mov
push
call
test
jne
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
call
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
mov
movl
lea
push
mov
push
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
call
mov
mov
movl
lea
push
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
test
jne
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
push
mov
push
mov
push
call
test
je
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
mov
mov
movl
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
movl
mov
push
call
test
je
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
movl
mov
push
call
test
jne
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
call
movl
mov
push
call
test
je
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
movl
mov
push
call
test
jne
and
mov
test
jne
mov
mov
and
mov
push
mov
push
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
mov
push
mov
push
mov
push
call
test
jne
mov
movw
movw
test
je
movl
and
and
mov
mov
push
mov
push
mov
push
call
test
je
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
mov
movl
lea
push
mov
push
call
test
jne
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
movl
mov
push
call
and
mov
test
jne
mov
mov
and
call
mov
mov
movl
lea
push
mov
push
call
test
je
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
mov
movl
lea
push
mov
push
call
test
je
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
mov
movl
lea
push
mov
push
call
test
mov
pop
ret
lea
push
mov
add
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
push
mov
push
mov
push
call
test
jne
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
mov
movl
lea
push
mov
push
call
test
jne
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
push
mov
push
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
mov
movl
lea
push
mov
push
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
movl
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
push
mov
push
mov
push
call
test
je
mov
movw
movw
test
je
movl
and
and
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
movl
mov
push
call
test
jne
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
movl
lea
push
mov
push
call
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
call
movl
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
mov
movl
lea
push
mov
push
call
mov
mov
mov
mov
mov
movl
mov
push
call
test
je
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
movl
mov
push
call
test
je
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
mov
movl
lea
push
mov
push
call
test
jne
call
call
movw
xchg
and
cmp
je
mov
mov
call
mov
movw
lea
movl
mov
sub
movl
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
cmp
jl
mov
jmp
mov
movb
mov
movb
xchg
movl
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
push
mov
push
mov
push
call
test
jne
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
mov
movl
lea
push
mov
push
call
test
jne
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
push
mov
push
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
mov
movl
lea
push
mov
push
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
movl
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
push
mov
push
mov
push
call
test
je
mov
movw
movw
test
je
movl
and
and
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
movl
mov
push
call
test
jne
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
movl
lea
push
mov
push
call
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
call
movl
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
mov
movl
lea
push
mov
push
call
mov
mov
mov
mov
mov
movl
mov
push
call
test
je
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
movl
mov
push
call
test
je
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
mov
movl
lea
push
mov
push
call
test
jne
call
call
lea
movl
mov
mov
mov
mov
mov
pop
ret
add
add
jae
fs
cs
insb
add
in
add
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
call
call
movb
mov
pop
pop
pop
ret
nop
push
mov
add
mov
mov
mov
movw
xchg
and
cmp
je
mov
mov
call
mov
movw
lea
movl
mov
sub
mov
cmp
je
jmp
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
lea
movl
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
add
call
movb
mov
mov
pop
ret
mov
push
mov
add
mov
mov
movl
add
mov
push
lea
push
lea
push
lea
push
call
mov
cmp
je
jmp
mov
mov
lea
movl
mov
movb
mov
xor
divl
test
jne
movl
mov
push
push
call
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
mov
mov
pop
ret
lea
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
and
mov
test
jne
mov
mov
and
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
call
ret
mov
push
mov
add
mov
mov
movl
mov
push
push
call
mov
mov
mov
mov
and
mov
test
jne
mov
mov
and
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jl
mov
jmp
mov
movb
mov
movb
xchg
movl
mov
mov
movl
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
lea
movl
mov
movb
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
movl
add
mov
push
lea
push
lea
push
lea
push
call
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
call
push
push
push
mov
call
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
movl
mov
push
push
call
mov
mov
mov
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ret
lea
adc
aas
jbe
gs
push
dec
sbb
xchg
ljmp
pop
jne
int
insl
imul
jmp
loope
movsb
call
mov
scas
nop
lods
mov
popf
lods
movsl
call
sahf
cmpsl
xchg
mov
mov
or
bound
jle
jne
push
outsb
cmpl
pop
pusha
dec
jne
push
dec
push
mov
jp
aaa
xor
cmp
dec
xor
cmp
sbb
push
sbb
jl
addb
mov
xchg
notl
mov
ret
stos
fsubrs
mov
loopne
loop
fidivrs
mov
mov
mov
xchg
mov
xchg
lea
movsb
sahf
js
insb
jbe
push
sbb
dec
mov
mov
mov
inc
inc
mov
lret
jo
out
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
shrb
fsts
mov
outsb
inc
add
sbb
outsb
inc
add
das
cmpsb
cltd
cmp
add
xor
outsb
inc
add
inc
mov
inc
add
aaa
fsubrs
add
fbstp
lds
outsb
inc
add
pavgb
add
negl
rcrl
outsb
inc
add
pop
pop
mov
add
inc
cmp
add
arpl
daa
sub
imul
ss
sbb
adc
add
cs
pop
clc
lahf
outsl
ljmp
cmp
loop
test
rcl
out
push
push
pop
rcrl
mov
mov
das
lret
xchg
sub
out
aas
stos
add
jl
inc
mov
aam
sbb
dec
mov
out
xchg
pop
mov
mov
ficompl
push
aam
repz
repz
mov
jns
cmc
mov
sahf
xchg
test
sub
pop
adc
dec
out
pop
adc
jno
jecxz
arpl
lds
inc
test
sbb
les
loopne
blci
add
xchg
adc
cmp
hlt
enter
cld
fadds
in
xor
es
inc
cmp
mov
xchg
xlat
dec
mov
lahf
and
stos
mov
jns
pusha
pop
enter
add
or
push
xchg
push
mov
fwait
arpl
mov
dec
subb
mov
dec
dec
dec
jecxz
mov
sub
stc
sub
sub
cmp
mov
or
adc
data16
add
daa
out
and
movsb
cmp
and
clc
mov
inc
sti
push
push
neg
inc
or
dec
cmp
fmuls
jp
mov
jne
fs
ljmp
aam
add
sar
andb
test
xor
imul
xchg
add
push
xlat
pop
ret
sbb
sbb
insl
xor
fdivr
sbb
je
iret
push
sbb
pushf
or
push
and
jle
leave
push
gs
testl
dec
pop
jbe
add
aam
push
daa
loopne
cmpsl
push
popa
ljmp
pcmpgtb
incb
test
pushf
or
ficompl
testb
icebp
push
push
mov
aam
sub
inc
mov
dec
cmp
int
mov
pop
pop
sbb
das
mov
xor
sbb
inc
mov
xlat
jp
aad
and
sbb
cmpsl
out
push
aaa
in
jl
out
das
jp
add
inc
aam
push
xchg
and
aam
cmp
cmpsl
inc
cwtl
pop
scas
push
ret
ret
inc
cmp
loope
leave
and
pop
ljmp
pop
out
loop
push
mov
insl
mov
jno
leave
inc
ret
xor
lret
or
fnsave
sub
xor
mov
push
insb
jp
add
xchg
popl
inc
je
sarb
fbstp
fnsave
es
idivl
add
cmp
or
in
xchg
dec
mov
pop
movsl
sbb
insw
mov
jno
push
mov
xchg
push
sarl
xchg
sbb
xchg
test
cmp
cmpsb
loope
fs
cmp
inc
inc
pop
inc
roll
mov
mov
sub
in
sub
cs
push
cli
xchg
mov
mov
mov
mov
imul
add
jge
add
idivl
pop
ljmp
cmp
pop
in
sbb
in
mov
sub
das
adc
repnz
dec
hlt
arpl
adc
cmp
push
pop
mov
cld
pop
sub
sub
lock
jmp
bnd
and
push
pop
pop
lds
sbb
xchg
test
sub
cwtl
jb
cmpsb
addb
decl
mov
stos
jmp
and
movsl
jle
sub
popa
cmp
sbb
int
call
out
sub
daa
cmp
sbb
aas
mov
cltd
push
adc
div
repz
xor
clc
lcall
bnd
out
add
nop
mov
ror
mov
inc
add
or
data16
and
out
cmp
repnz
inc
add
adcl
pushf
and
jbe
inc
insl
imul
in
pop
cmp
enter
sar
adc
xchg
inc
gs
xor
call
shrl
js
pop
sbb
pop
push
mov
inc
push
pop
jge
fcoms
sbb
pop
mull
out
insl
fidivs
divb
adc
mov
aam
push
or
gs
mov
movsb
jns
testb
ljmp
mov
test
inc
nop
mov
or
or
inc
add
fbstp
bound
jmp
cmp
addb
stc
popa
cmp
push
ror
cmp
or
dec
sub
mov
or
sub
lock
or
pop
or
mov
or
jp
addb
into
xor
or
mov
stos
mov
pushf
imul
addb
mov
addb
add
inc
or
or
inc
add
add
jae
aam
or
inc
add
inc
add
fimull
inc
add
ljmp
clc
fimull
inc
add
push
movsl
jb
jbe
xor
inc
xchg
add
or
inc
add
adcb
jp
rcrl
sbb
pop
aaa
cmc
push
add
push
push
inc
add
test
sub
add
scas
or
add
lock
xor
push
inc
add
jmp
push
inc
add
jmp
push
inc
add
and
add
mov
inc
add
pop
add
inc
add
andl
or
add
or
sbb
sub
in
outsb
inc
add
lods
sbb
push
inc
add
clts
push
inc
add
add
pop
lret
pop
mov
out
mov
inc
test
inc
add
aaa
cmpsb
icebp
xor
mov
incb
cmc
in
or
stos
pushl
push
das
js
sbb
mov
into
pop
mov
inc
push
std
and
add
pop
jmp
push
inc
add
add
lods
jne
add
add
adc
add
sub
add
es
inc
add
sbb
add
add
add
inc
inc
add
add
push
push
inc
add
jl
inc
xor
push
inc
add
add
add
add
add
aas
sub
add
mov
sbb
sbb
call
sub
inc
add
jnp
push
inc
add
mov
add
mov
test
inc
add
xlat
sbbb
pop
outsb
stos
cmpl
lods
or
add
outsl
hlt
movsb
xor
add
negb
push
inc
add
call
inc
add
loopne
add
sbb
pop
push
inc
add
scas
or
inc
fidivl
sub
add
or
repz
add
add
stc
orl
rorb
adc
lea
push
push
inc
add
add
add
sub
lods
xor
sub
in
rcl
sarl
dec
pop
push
inc
add
dec
int
adc
inc
add
fists
push
inc
add
jb
jo
cmpsl
add
pop
jne
push
inc
add
mov
test
inc
add
iret
mov
mov
inc
add
pop
xchg
mov
inc
add
add
adc
add
mov
inc
add
mov
mov
mov
movsl
stos
adc
add
push
push
inc
add
lret
and
dec
add
push
inc
add
add
add
adc
add
fstl
fldcw
sub
out
and
jg
cli
cld
subl
aas
and
add
lea
adc
xchg
inc
or
inc
add
inc
add
outsl
adc
and
mov
adc
add
add
add
xor
dec
cmp
and
add
ja
roll
add
xchg
stos
cmpsl
lret
push
inc
add
push
jg
push
push
inc
add
jns
push
inc
add
pop
push
push
inc
add
popa
push
push
inc
add
jge
push
inc
add
movsl
pop
sbb
mov
push
inc
add
adc
ret
movsb
and
js
and
mov
js
mov
inc
add
inc
dec
mov
dec
pop
inc
sub
jns
ljmp
add
test
sbb
sub
and
sub
sbb
scas
outsl
movl
sub
add
dec
je
jecxz
push
push
inc
add
sub
add
sub
jae
xor
jl
cmp
iret
jle
shr
outsb
mov
jns
daa
fldl
cld
cmp
mov
cmc
dec
or
mov
xchg
nop
pop
xchg
es
loop
pop
mov
ja
adc
repnz
xchg
adc
push
ficoms
cmp
jae
lahf
outsl
shlb
into
lds
hlt
lret
lds
pop
mov
and
xchg
cmc
inc
js
inc
stos
popf
fwait
add
push
mov
adc
insb
adc
xchg
fnsave
ljmp
nop
mov
pop
jbe
add
aam
xchg
ss
addr16
imul
test
jnp
sahf
xchg
push
cli
adc
popa
aam
pop
push
push
inc
add
inc
add
cmp
push
inc
add
dec
sti
inc
or
sub
sub
add
and
add
dec
and
add
pop
ret
in
adc
in
sub
stc
jl
addb
stos
sti
xchg
fstpt
rcrb
and
es
push
xor
jo
mov
mov
add
push
dec
dec
push
xchg
sub
fcoms
movsl
inc
arpl
ja
xorb
loope
sub
xchg
loop
leave
sbb
inc
cltd
dec
clc
xchg
adc
movsl
imul
add
fsub
jecxz
jns
mov
cli
jmp
mov
mov
sub
out
movsl
pusha
ret
movsl
mov
aas
mov
cwtl
fadd
sbb
js
xchg
sbb
mov
arpl
jp
std
push
push
xor
mov
fidivs
cmp
cmp
sub
enter
adc
add
add
hlt
andl
xchg
or
pop
sbb
inc
add
es
daa
add
add
add
daa
push
push
inc
add
xor
dec
lods
insb
push
aam
adc
push
inc
add
inc
and
add
dec
sbb
add
dec
adc
add
pop
sub
inc
add
dec
or
add
jae
push
inc
add
daa
scas
loope
nop
outsb
inc
add
ds
sahf
icebp
test
inc
stos
test
fisttpl
pushf
sahf
jne
scas
cmpsb
test
lods
loop
imul
mov
mov
add
lret
shlb
outsb
inc
add
cld
xlat
fcomip
outsb
inc
add
xchg
pop
cltd
xor
out
sub
pop
push
inc
add
jno
adc
inc
add
stos
or
push
inc
add
or
adc
icebp
or
jmp
sbb
fwait
adc
push
inc
add
inc
add
imul
into
xchg
inc
inc
add
into
push
inc
adc
add
shlb
and
popa
push
pusha
bound
loope
push
push
inc
add
adc
add
ja
push
inc
add
add
inc
add
insl
add
add
push
adc
add
adc
xchg
pop
inc
inc
add
xchg
cmpsb
and
push
push
imul
inc
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
lea
movl
mov
mov
mov
mov
mov
push
mov
push
call
mov
movl
mov
push
push
call
mov
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
mov
mov
sub
jb
inc
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
mov
movl
lea
push
mov
push
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
push
mov
push
mov
push
call
test
je
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
and
mov
test
jne
mov
mov
and
movl
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
push
mov
push
mov
push
call
test
je
mov
movw
movw
test
je
movl
and
and
mov
call
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
push
mov
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
movl
mov
push
call
test
jne
and
mov
test
jne
mov
mov
and
mov
push
mov
push
mov
push
call
and
mov
test
jne
mov
mov
and
call
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
push
mov
push
mov
push
call
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
push
mov
push
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
movl
lea
push
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
test
jne
mov
movw
movw
test
je
movl
and
and
mov
call
and
mov
test
jne
mov
mov
and
mov
push
mov
push
mov
push
call
test
je
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
call
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
mov
movw
movw
test
je
movl
and
and
mov
call
mov
push
mov
push
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
movl
mov
push
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
push
mov
push
mov
push
call
test
je
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
mov
mov
mov
mov
mov
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
movl
mov
push
call
test
jne
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
mov
push
mov
push
mov
push
call
test
je
call
mov
pop
ret
mov
push
mov
add
mov
movl
add
mov
push
lea
push
lea
push
lea
push
call
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
lea
movl
mov
movb
mov
mov
call
mov
mov
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
jmp
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
mov
mov
dec
cmp
jae
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
mov
pop
ret
lea
push
mov
add
mov
mov
movw
xchg
and
cmp
je
mov
mov
call
mov
movw
lea
movl
mov
sub
mov
push
mov
push
call
mov
mov
cmp
jl
mov
jmp
mov
movb
mov
movb
xchg
movl
mov
mov
pop
ret
push
mov
add
mov
movb
mov
mov
cmpl
je
mov
mov
mov
cmp
jb
mov
mov
cmpl
je
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
cmp
jne
movb
mov
mov
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
push
call
mov
lea
mov
subl
movb
movb
movb
movb
movb
movb
sub
lea
movl
mov
mov
mov
mov
mov
mov
call
mov
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
mov
mov
call
mov
lea
mov
subl
mov
mov
add
mov
call
mov
cmpl
je
movl
mov
push
push
call
mov
mov
mov
mov
add
mov
call
mov
cmpl
je
movw
xchg
and
cmp
je
mov
mov
call
mov
movw
lea
movl
mov
sub
lea
push
push
mov
sub
push
mov
push
call
movl
xor
mov
movl
add
mov
push
lea
push
lea
push
lea
push
call
addl
mov
cmp
je
call
mov
call
test
je
addl
addl
jmp
mov
movw
movw
test
je
movl
and
and
mov
mov
addb
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
and
test
jne
incl
mov
mov
mov
mov
mov
mov
dec
mov
inc
xor
and
mov
test
jne
mov
mov
and
incl
incl
incl
mov
cmp
jne
movw
xchg
and
cmp
je
mov
mov
call
mov
movw
lea
movl
mov
sub
mov
call
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
mov
push
mov
push
call
cmpl
je
mov
mov
lea
movl
mov
movb
movl
add
mov
push
lea
push
lea
push
lea
push
call
movl
mov
push
push
call
mov
mov
pushl
mov
pushl
add
push
jmp
mov
test
je
mov
movl
call
and
jmp
and
mov
xchg
movl
mov
pop
ret
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
mov
add
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
call
and
mov
test
jne
mov
mov
and
and
mov
test
jne
mov
mov
and
mov
mov
movl
lea
push
mov
push
call
mov
movw
movw
test
je
movl
and
and
mov
movl
mov
push
call
test
je
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
push
mov
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
and
mov
test
jne
mov
mov
and
movl
mov
push
call
mov
mov
mov
mov
mov
call
call
and
mov
test
jne
mov
mov
and
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
mov
movl
lea
push
mov
push
call
mov
mov
mov
mov
mov
movl
mov
push
call
test
jne
and
mov
test
jne
mov
mov
and
mov
push
mov
push
mov
push
call
test
je
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
call
movl
mov
push
call
test
je
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
call
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
mov
mov
movl
lea
push
mov
push
call
test
jne
movw
mov
cmp
jle
lea
movl
jmp
sub
xchg
mov
mov
movl
mov
push
call
movw
test
je
lea
movl
jmp
mov
and
mov
movb
mov
mov
mov
sub
movl
mov
push
call
test
je
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
mov
mov
movl
lea
push
mov
push
call
test
jne
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
call
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
movl
lea
push
mov
push
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
movl
mov
push
call
test
jne
mov
mov
mov
mov
mov
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
mov
mov
movl
lea
push
mov
push
call
mov
pop
ret
lea
push
mov
add
mov
mov
lea
movl
mov
movb
movl
add
mov
push
lea
push
lea
push
lea
push
call
movb
mov
and
mov
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
lea
movl
mov
mov
mov
mov
mov
mov
mov
mov
inc
xor
add
dec
cmp
jne
pushl
push
call
mov
add
dec
cmp
jne
lea
movl
mov
mov
mov
mov
cmpb
jne
mov
cmpb
jle
mov
mov
add
jmp
mov
mov
movl
cmp
jne
mov
mov
lea
mov
jmp
sub
mov
mov
mov
xchg
movb
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
push
push
push
call
mov
mov
mov
mov
mov
lea
movl
mov
movb
jmp
mov
cmp
jl
mov
jmp
mov
movb
mov
movb
xchg
movl
movb
movl
mov
push
push
call
mov
mov
mov
mov
pop
ret
add
jae
fs
cs
insb
and
add
add
in
add
mov
movw
test
je
lea
movl
mov
movl
and
mov
movw
mov
movl
mov
push
call
call
cmpl
jle
sub
mov
mov
mov
mov
sub
movw
call
test
jne
call
jmp
movl
mov
push
push
call
mov
mov
movw
lea
movl
mov
mov
mov
mov
call
mov
pop
ret
cmpl
jne
mov
movw
movw
test
je
movl
and
and
mov
mov
mov
test
je
mov
mov
mov
movb
cmp
jg
mov
movl
mov
jmp
mov
sub
movb
cmpb
jle
mov
movb
mov
mov
mov
mov
lea
mov
call
mov
mov
xchg
cmpw
jge
mov
mov
mov
mov
movb
add
ret
nop
add
pop
xor
adc
fidivl
sahf
mov
mov
nop
pusha
xchg
mov
or
clc
pop
push
inc
or
ss
push
or
roll
push
mov
ss
mov
dec
add
mov
add
cmpsl
mov
mov
push
cltd
sbb
pushf
add
add
mov
cmp
fnsave
adc
adc
mov
pop
into
add
test
inc
or
jge
cmp
jnp
jne
imul
or
jg
insl
add
xlat
fsubrl
fistl
xor
test
test
cmp
cmp
xchg
adcb
adcl
mov
aas
push
orl
fwait
cmpsb
add
mov
inc
cmp
jae
mov
cli
pop
sub
jle
adcb
push
jo
stos
add
push
add
pop
sti
enter
push
add
leave
int
movsb
inc
sbb
leave
dec
out
dec
jns
cmp
test
mov
cwtl
scas
aam
repnz
inc
push
loope
lock
xchg
lret
aas
imul
pop
pop
sbb
mov
mov
arpl
repz
sahf
ljmp
jne
pop
scas
loopne
add
sbb
lds
aas
adc
or
add
scas
push
leave
and
and
add
mov
sub
jl
mov
add
addr16
add
inc
mov
je
jne
sbb
scas
add
add
add
add
inc
imul
jl
push
hlt
lret
mov
lret
sbb
add
push
xchg
or
add
mov
sbbl
dec
movsl
loope
js
add
dec
aaa
and
add
aaa
lcall
imulb
and
sbb
mov
add
and
pop
add
mov
lods
xchg
mov
xor
jmp
rorb
sbb
mov
mov
cmp
xchg
jg
push
sar
sbb
jge
fidivrs
xchg
add
push
filds
pop
and
movsb
mov
sti
add
mov
cmp
les
jns
dec
xor
dec
or
addl
out
lods
mov
popf
add
not
adc
jg
pusha
mov
add
inc
push
add
add
and
jnp
fucom
stos
mov
filds
adc
je
and
mov
xchg
inc
imul
in
jne
add
bound
jge
push
stc
and
add
add
negb
jge
ja
inc
mov
rol
inc
xor
les
xchg
xchg
add
in
add
outsl
add
jl
iret
addl
add
add
pop
idivb
or
xchg
fwait
adc
or
idivl
xchg
add
dec
ret
add
aad
arpl
leave
outsl
add
add
add
data16
add
stc
inc
loopne
stos
loopne
jo
add
cmp
cmp
sub
push
jne
test
sbb
xor
sarl
add
stos
adc
pop
fmulp
add
pop
in
ficomps
pop
js
aas
add
pushf
movsl
aas
adc
inc
or
rolb
push
movb
xlat
cmpl
add
popf
mov
std
pop
or
xor
adc
rolb
add
adc
mov
hlt
add
imul
in
add
push
repz
xchg
cmpsl
andb
sub
jecxz
fidivrs
add
or
mov
sti
xchg
sbb
stos
and
add
mov
adcl
xchg
add
leave
add
cs
jl
xchg
enter
push
xchg
inc
xor
imul
add
cwtl
fs
imul
fildl
mov
xchg
mov
add
cld
stc
mov
cmp
mov
lret
pusha
dec
jg
and
and
je
add
popf
xchg
mov
push
rcll
inc
test
mov
aas
popf
add
stos
sahf
add
push
aad
add
add
and
lods
mov
cmp
enter
add
dec
jmp
adc
loopne
sahf
jmp
xchg
sbbl
xor
jnp
add
fcoml
pop
les
add
les
add
xchg
aam
adc
in
sub
gs
mov
adc
xchg
mov
ret
ret
add
sub
sub
loopne
cmp
mov
jmp
insb
cmp
cmpsb
icebp
jge
add
cld
bound
gs
outsb
add
das
pushf
mov
cmp
pop
add
les
repnz
mov
pop
rolb
add
stc
test
sbb
xchg
addb
or
add
negb
inc
into
int3
or
mov
movb
mov
xchg
add
xor
into
mov
lods
xlat
or
aaa
push
arpl
pop
mov
repnz
hlt
xor
rcrb
adc
lods
add
mov
add
xchg
shr
mov
jge
add
aad
pop
repnz
sbb
inc
sbb
sbb
lret
arpl
or
fimuls
lds
push
lock
adc
lret
imul
testl
sub
ret
add
scas
aas
iret
fwait
in
mov
add
mov
lds
and
ret
scas
out
movsb
fstpt
or
dec
int3
add
les
aas
add
pop
adc
hlt
jo
mov
out
adc
loope
add
lcall
push
add
mov
andl
and
mov
mov
lret
fs
orps
ljmp
add
roll
hlt
and
inc
add
add
imul
loopne
sbb
add
adc
in
sub
mov
jmp
mov
xchg
xchg
mov
das
mov
lret
xchg
rolb
xchg
add
add
das
test
mov
pop
add
mov
sarl
mov
cwtl
add
stos
ret
xor
xchg
jbe
pop
xor
stc
lods
dec
or
add
add
mov
fsts
add
aam
lods
jmp
add
repnz
lods
xor
mov
add
add
cmpsb
mov
add
das
fimuls
jb,pn
push
pop
scas
add
ds
stc
jle
add
sbb
jl
jle
jecxz
repz
adc
and
cld
mov
lock
inc
add
dec
add
fiadds
rolb
mov
pop
mov
mov
dec
decb
inc
jb
sbb
adc
xchg
insb
mov
addr16
rcll
jnp
add
sar
dec
add
xchg
fstl
sti
mov
sti
dec
add
setl
pop
fldenv
insl
aam
in
fdivp
ret
gs
pusha
sub
cmp
neg
dec
jnp
add
xlat
movsl
mov
sub
jl
in
cmp
dec
xor
xor
pop
out
xchg
adc
dec
bound
push
push
adc
sti
pop
cmp
xchg
add
js
jg
movhps
jp
and
mov
dec
dec
jg
or
push
out
pop
ret
mov
in
push
out
das
rcr
push
mov
arpl
add
cmp
sub
rorl
push
ret
add
pushf
and
pop
movsl
sbb
nop
xlat
push
mov
push
loopne
add
lret
mov
jbe
xor
or
and
lret
inc
sbb
aad
pop
fidivrs
pusha
fiadds
imul
pushf
push
icebp
and
xor
sbb
ss
pushf
add
add
in
push
lret
out
hlt
ficoml
add
jbe
xor
ss
pop
imul
jae
aaa
clc
xorb
add
mov
dec
sti
in
jns
inc
sbb
lcall
test
add
xchg
shll
add
and
fldl
pusha
add
cld
mov
arpl
push
dec
xor
add
xchg
sbb
inc
ud1
mov
test
out
aad
sub
fildl
mov
movsl
test
loop
xchg
fmull
lret
dec
in
mov
add
mov
loop
push
movsl
sahf
sub
repz
pop
pop
je
scas
xor
imul
in
or
sti
int3
jae
lods
add
in
jg
add
add
jle
cmpsl
add
dec
call
or
jno
icebp
movsl
cmp
sbb
lahf
mov
push
push
xchg
loopne
jb
in
dec
out
neg
or
jg
mov
dec
dec
push
pusha
inc
or
sbb
push
lea
jbe
lret
lock
sub
insb
sahf
enter
popa
adc
inc
cli
jl
sub
pushf
add
add
faddl
add
add
stc
popa
outsb
adc
mov
xchg
jae
add
sbb
add
add
cwtl
lret
xor
pop
data16
jo
xchg
and
cmp
cmpsl
enter
add
cmp
mov
cmpsl
jo
or
add
add
icebp
cmpsl
push
inc
push
xorb
cmp
dec
jno
push
mov
gs
imul
andb
mov
inc
xor
add
fmul
daa
movsl
mov
mov
pop
push
je
leave
add
out
mov
add
pop
imul
pop
stos
inc
pop
es
divl
ja
add
mov
mov
or
or
scas
movsl
jns
pop
out
int
lock
dec
outsl
xchg
adc
dec
mov
xchg
add
sbb
cmpsb
dec
fs
xchg
aaa
mov
test
add
test
xor
mov
inc
and
inc
jp
dec
test
adc
addr16
mov
ds
add
add
int
lock
add
add
and
cli
and
add
xchg
sbb
aad
filds
inc
or
lods
xchg
sub
jg
lods
daa
sbb
pop
jne
cmp
aad
add
lcall
pop
add
cmp
pop
add
fprem1
add
cltd
inc
adc
loop
jle
roll
aaa
cmp
lds
test
test
je
lahf
inc
scas
add
aam
mov
mov
sbb
movsl
mov
rorb
pop
cmp
xor
sub
add
jae
push
unpcklps
insb
mov
push
mov
add
xor
ds
inc
lahf
lods
call
pop
adc
lea
and
jl
sub
inc
pop
scas
xor
xor
jne
sahf
addb
push
jnp
push
adc
test
add
add
fwait
lock
decl
jne
jns
fs
and
mov
iret
in
adc
jmp
adc
fcoml
ljmp
add
add
cmpsb
ret
repnz
add
sbb
mov
adcb
leave
les
push
pusha
mov
aas
push
bound
sbb
xchg
add
lret
cs
push
repz
mov
push
or
ss
sub
sub
xchg
pop
dec
jae
fnstcw
xor
cltd
mov
inc
xlat
add
xchg
xchg
fucomip
ja
and
mov
sub
pop
jae
imulb
add
jge
test
das
mov
fcompl
imul
dec
fucom
fildl
or
std
mov
dec
ds
jns
mov
jb
ja
add
imul
call
add
movsl
xchg
pop
stos
push
add
adc
xchg
out
das
fcoms
mov
xchg
push
rcrb
mov
xor
in
add
mov
mov
cmp
ds
in
sub
sub
adc
add
add
pop
out
mov
loop
add
mov
cltd
jb
clc
pop
sub
stc
in
mov
pop
add
xlat
and
jb
dec
cmp
push
cmpsb
arpl
adc
add
and
push
mov
push
pop
mov
xchg
ljmp
or
add
dec
and
loopne
mov
sahf
xchg
add
dec
or
in
jne
call
cmc
outsl
or
xor
je
add
mov
xlat
movsl
bound
xchg
sti
add
in
insb
add
repnz
ljmp
pop
add
pop
add
cltd
dec
xor
dec
xor
dec
add
test
lret
add
aas
cmp
call
cs
lea
xor
inc
push
adc
ret
inc
add
lods
add
mov
xor
adcb
into
aaa
add
aam
add
xchg
or
and
add
imul
insb
cltd
in
std
pushf
testl
ljmp
adc
jae
pop
push
loopne
jns
frstpm(287
sar
daa
mov
inc
jbe
ds
int
shll
push
aad
arpl
jb
pop
add
loope
aam
push
sbb
pushf
jae
int
jecxz
cld
adc
mov
fisubrs
aas
repnz
fwait
adc
and
dec
xchg
mov
lret
je
loopne
jg
rorb
aam
add
push
add
cmp
aad
fcompl
fstpl
loop
fisttpl
add
sub
sbb
enter
dec
ja
fldcw
xor
inc
lods
nop
outsb
sub
pop
cli
add
mov
lcall
shrb
lods
mov
pop
sbb
xor
xor
pop
push
pop
int
loopne
inc
jl
and
pop
pop
fsubrs
add
pop
add
shr
neg
insb
pop
scas
rcrl
and
pop
jecxz
add
xchg
rolb
jo
push
outsb
dec
pop
mov
repnz
std
repz
out
aam
into
sub
add
add
inc
jae
add
lock
adc
pop
push
cmp
dec
insl
ljmp
add
sub
xor
addr16
mov
mov
mov
lods
les
in
xchg
sti
lcall
mov
push
pop
inc
add
fcomps
mov
imul
aas
leave
mov
test
mov
add
pop
sbb
push
vmulss
xor
testb
out
xor
fsts
imul
xor
out
mov
add
int3
add
cmp
mov
push
test
add
adc
add
jp
jae
add
jle
pop
or
arpl
sbb
sub
or
std
movsbl
adc
sahf
adc
pop
fucomp
pop
add
rcrb
add
clc
sub
test
fwait
dec
xchg
mov
fsubrl
add
mov
add
xchg
mov
xchg
pop
pop
loopne
std
add
push
das
mov
sub
push
pop
cmp
jbe
sub
add
adc
insl
push
test
js
stos
add
div
mov
jecxz
inc
mov
enter
dec
daa
out
cmp
sub
lea
bound
cmc
out
mov
insl
daa
add
aam
mov
cmp
sub
xchg
add
cs
sbb
cmp
add
cmp
gs
fwait
inc
insl
mov
push
cmc
xchg
sub
loop
insb
dec
push
cwtl
mov
adc
adc
inc
dec
ret
lcall
jb
add
sbb
xchg
in
push
sub
jl
add
xchg
fisubrs
xchg
fbstp
outsb
and
mov
imul
push
jmp
les
sbb
sub
sub
add
sub
fs
dec
cli
or
cmc
jo
movl
xchg
add
jl
int3
add
add
dec
add
clc
std
fmul
add
repnz
sub
dec
stos
mov
mov
add
cmpsl
cmp
ss
cltd
cmp
push
push
pop
data16
adc
out
int3
mov
sbb
push
call
mov
sti
xor
subb
jbe
test
rol
add
push
insl
sub
cwtl
inc
shrl
xor
add
in
adc
inc
adc
scas
ja
add
push
push
jae
xlat
sub
punpcklbw
cmpb
mov
mov
adc
mov
jno
psubusw
test
addb
pop
add
mov
ds
pop
fisttpll
sub
dec
jnp
repz
bound
add
fwait
ret
pop
arpl
add
adc
xchg
adc
cmpsl
xchg
inc
cld
xchg
add
int
lock
fcmovb
adc
xchg
jb
aad
xchg
add
data16
xchg
fmulp
push
adc
test
cltd
jo
or
and
and
mov
dec
dec
and
or
add
push
lretw
xor
add
data16
add
cmp
out
test
mov
loop
add
cmp
lret
lcall
imul
sahf
push
ds
add
imul
mov
pop
xchg
test
pop
loopne
insb
arpl
push
movsl
mov
add
sbb
loopne
lock
mov
enter
outsl
sti
out
push
shl
cmp
rolb
mov
mov
fnstsw
out
lods
add
jle
cwtl
push
cmp
pop
sbb
jl
inc
push
xor
enter
jno
mov
fnstsw
lret
pop
add
sbb
add
out
movsb
sub
add
push
popa
push
ret
in
add
add
push
add
add
mov
mov
popl
sub
or
mov
push
add
lods
xchg
nop
loope
div
add
addr16
mov
bound
adc
lds
jnp
hlt
roll
in
inc
in
aaa
push
inc
mov
les
scas
pop
pop
int
add
ja
pop
test
shll
repnz
or
data16
mov
imul
in
add
movups
aaa
add
add
fs
dec
repz
data16
movb
add
cmp
add
imul
mov
and
add
out
aad
lods
or
add
jge
add
or
sub
cmp
adc
hlt
push
aam
ja
xor
add
out
push
pop
daa
add
push
cli
adcl
add
mov
add
lret
or
stos
imul
clc
cld
add
aaa
mov
loope
or
jnp
mov
pop
or
test
faddl
add
add
or
imul
mov
sbb
sub
cmc
adc
sub
test
ljmp
cmp
cmpsb
sub
pop
ret
add
add
mov
sub
adc
dec
jg
cmpsb
aam
test
xor
or
mov
inc
inc
pop
xor
or
pop
add
add
roll
popf
add
add
ja
shl
add
push
add
pop
ficomps
into
mov
lahf
out
and
fisttpl
sar
cli
add
cmp
lods
rcll
stos
mov
jp
dec
test
add
add
add
call
mov
mov
xchg
xchg
stos
mov
add
sub
or
insl
aas
sub
testb
cmp
and
push
stos
adc
add
leave
mov
jl
lcall
sbbl
outsl
jge
add
mov
lcall
pop
jnp
insl
mov
cmpsl
xchg
push
add
add
xchg
cmp
mov
add
jno
ret
das
add
or
std
jns
ss
jecxz
add
adc
adc
shll
fisubs
lcall
test
xor
movsl
mov
sbb
xchg
bound
jno
loope
sub
js
xchg
fcmovnb
ret
inc
fiadds
cmp
jo
sahf
inc
leave
mov
add
repnz
add
sub
mov
add
icebp
sbb
inc
insb
or
aas
add
jb
cmpl
mov
or
xchg
xchg
inc
orl
lcall
inc
mov
mov
cmp
test
divl
gs
dec
call
add
pop
jmp
inc
lods
add
lret
in
fs
nop
ficoml
ret
cmp
cmp
xchg
cld
std
pop
jl
jg
sbb
mov
into
sar
cmpsl
xabort
push
cmp
mov
xchg
add
cmc
or
inc
inc
rcrb
jecxz
push
pop
mov
fimuls
pop
mov
aaa
mov
pop
add
rcl
adc
and
xor
hlt
mov
add
jle
dec
imul
out
sar
jmp
jae
add
add
add
cld
and
jl
in
insb
out
arpl
divb
bswap
cmp
cmc
stos
add
cltd
cltd
iret
inc
mov
add
sti
mov
fwait
movsl
std
or
adc
sbb
jns
icebp
inc
scas
push
jecxz
dec
stos
fwait
scas
insb
subl
add
sti
adc
add
rolb
es
dec
push
data16
mov
add
out
sub
jnp
add
add
or
aas
mov
pop
ljmp
xchg
scas
sbb
cs
xchg
repz
xor
cmpsb
ja
jns
sub
xchg
into
jns
push
jnp
inc
cwtl
repnz
sub
popf
add
in
negb
pop
cmp
push
jo
jns
dec
lds
lds
scas
movsb
xchg
add
pushf
dec
mov
testb
daa
xor
pop
add
cwtl
xchg
xchg
add
outsl
pop
lods
mov
cltd
add
add
shlb
rolb
je
jbe
add
cld
sbb
lds
cltd
enter
fidivrl
ds
ja
mov
xchg
idiv
add
jp
add
out
cmp
insl
arpl
lea
mov
int
les
mov
add
mov
adc
cmp
imul
add
cmpsl
into
icebp
xchg
add
sbb
orb
call
adc
aad
push
loop
add
stos
flds
stos
sbb
mov
push
repnz
sbb
sub
sti
js
push
add
lcall
xchg
add
and
je
data16
add
loopne
popf
sub
pusha
lret
lds
lods
mov
add
ficomps
sub
rcpps
push
pop
out
movsl
cmp
mov
jecxz
ds
and
cmc
add
cld
mov
call
inc
mov
xchg
push
pop
add
mov
add
ja
dec
dec
enter
add
scas
mov
ljmp
outsl
lea
test
sbbl
mov
xlat
or
ret
cmpsb
mov
shll
insb
repz
in
mov
push
xchg
add
xor
rcrb
scas
and
popf
add
addl
mov
lret
add
xor
cmp
xor
xor
jmp
clc
pop
add
push
sub
lcall
add
pop
or
push
cmp
mov
mov
xor
out
out
cwtl
ret
and
cmc
inc
imul
pop
std
mov
jnp
add
sub
mov
dec
xchg
das
stc
pusha
std
addr16
scas
flds
adc
sbb
add
repz
je
iret
xor
aam
aas
mov
push
xor
jl
add
mov
rolb
cwtl
and
add
rolb
pushf
dec
iret
cmp
roll
sbbb
xchg
pushf
mov
pop
add
mov
fistps
jbe
mov
push
push
insl
add
dec
ds
mov
addr16
push
and
out
add
add
cs
sldt
and
add
add
test
add
sbb
dec
add
cmp
cmp
inc
inc
sub
das
bound
and
mov
inc
shrl
jecxz
xor
loop
mov
or
add
pop
int3
add
fdivs
ja
out
xchg
cli
xrelease
out
add
cmpb
sub
ljmp
stos
add
push
add
adc
fwait
push
add
sbb
out
adc
lcall
aam
and
xor
add
cmp
add
out
pop
pop
sub
roll
out
dec
sbb
outsb
movsl
jmp
ret
mov
mov
andb
xor
add
mov
sub
lcall
cltd
dec
push
out
xlat
sbbl
pop
mov
repz
ja
pusha
add
in
and
xor
ss
add
ret
add
inc
add
aam
jg
xor
jb
pusha
and
adc
inc
repnz
subl
fwait
xor
mov
adc
jo
icebp
dec
in
rcrl
stos
dec
cmc
xchg
and
test
mov
shl
inc
sbb
sbb
dec
cld
add
dec
lods
add
dec
add
jb
xchg
sbb
push
pop
insl
mov
push
add
jne
xor
add
mov
testl
adc
jle
lahf
repnz
bound
lods
leave
data16
add
dec
cld
push
xchg
or
add
clc
insl
bnd
cmp
cltd
ret
test
push
dec
std
movsb
incl
out
and
or
in
pop
or
xchg
jle
shlb
js
and
xor
divl
add
add
mov
rolb
mov
fmul
ss
sarl
mov
les
add
in
jl
lods
push
rorl
mov
sub
add
fs
sbb
je
in
add
out
clc
dec
pop
mov
dec
inc
jnp
and
inc
add
les
inc
add
das
jne
lds
js
xor
lods
add
pop
dec
xchg
leave
dec
cmp
dec
xchg
ret
cmp
pop
std
cmp
jmp
jge
faddp
mov
ds
adc
mov
shl
push
negb
push
das
sub
jb
xchg
dec
cmp
es
mov
mov
and
bound
jmp
fs
cwtl
iret
repnz
xchg
adc
jo
test
das
int
add
add
add
jb
xchg
lret
dec
lret
outsl
mov
cmc
lret
popa
jmp
fucomp
int3
pop
leave
xor
out
sbb
push
jg
jb
and
imul
add
mov
icebp
xor
xchg
sub
add
loopne
ret
clc
testl
out
pop
sarb
xor
sub
in
fidivrs
jle
fstl
xor
add
rcrb
jo
aaa
fs
iret
jo
pop
adc
dec
orb
add
lock
push
bound
add
sbb
sub
pop
add
ret
scas
repz
loop
xlat
add
pop
inc
iret
push
push
js
mov
test
iret
jle
inc
adc
addl
add
sub
ret
jle
adc
inc
dec
inc
add
xchg
fisttpl
cmp
or
jecxz
inc
sahf
adc
mov
ds
pop
sar
nop
inc
nop
pushf
fidivrl
aas
sbb
daa
dec
icebp
fsts
leave
push
and
ret
xchg
sbb
add
sarl
or
xor
add
in
loope
xchg
push
lret
jnp
inc
ljmp
clc
call
rolb
jle
mov
int
fldl
pop
adc
ja
std
xchg
add
popa
shrb
mov
shrl
mov
icebp
addr16
mov
ss
add
aaa
cltd
fs
sbb
shlb
enter
push
lcall
dec
js
add
fsubrl
add
mov
aam
dec
adc
sub
in
jmp
cmp
mov
add
lods
cwtl
pop
stc
xchg
sbb
hlt
movsl
mov
in
mov
lahf
jg
ja
pop
pop
mov
div
push
inc
or
jne
int3
add
testb
pop
sub
add
add
mov
pop
xor
movb
add
test
xchg
cmp
add
lret
inc
push
add
faddp
pushf
jmp
add
sub
in
push
adc
sub
pop
or
add
jbe
push
inc
repz
push
jne
lahf
jnp
add
outsb
lods
aaa
cmpsb
hlt
mov
adc
test
jne
nop
inc
imul
outsb
in
and
orl
ret
rcrb
jle
popa
add
jb
jmp
jg
mov
fwait
adc
add
cld
push
sub
jp
pop
movsl
push
add
sbb
rolb
bound
dec
iret
push
mov
add
lock
push
add
insl
or
sub
cmp
push
add
xchg
addl
push
inc
add
sbb
add
retw
lea
ljmp
mov
and
mov
sub
sti
nop
icebp
repz
mov
repz
mov
dec
cmp
iret
loopne
inc
adc
add
xchg
inc
add
or
fistps
aas
insb
add
orb
cmc
shlb
je
popf
add
psrlw
outsl
jmp
sub
les
cmp
ret
add
add
add
mov
je
sub
sbb
or
xchg
pop
popf
mov
or
add
test
push
jne
movsl
dec
call
push
jae
js
sbb
arpl
fwait
sbb
mov
jl
mov
div
mov
inc
adc
mov
push
inc
push
ret
pop
pushf
jmp
sub
jns
dec
pop
xchg
push
mov
dec
jne
es
and
inc
lahf
lds
lret
add
jp
and
inc
enter
dec
fcomps
xchg
negb
add
add
add
popa
jnp
add
lods
cmpsb
sbb
add
push
int3
jo
pop
dec
add
add
shll
stos
add
adc
data16
jne
add
arpl
push
pop
movsb
push
les
pop
je
aaa
mov
fcmovbe
push
jecxz
xchg
adc
mov
mov
jmp
enter
icebp
add
or
jo
add
movsl
add
inc
outsb
dec
xor
xchg
mov
jl
or
and
inc
dec
out
add
fildl
fmull
mov
pop
xchg
xchg
lock
mov
push
and
repnz
push
ficoms
mov
or
std
mov
lret
add
mov
ret
adc
enter
test
fadds
rclb
sub
jp
jno
jae
pushf
popa
enter
xchg
jb
imull
iret
lds
stos
scas
loop
flds
pop
int3
imul
movsb
insb
xor
cli
bound
add
or
mov
cmp
mov
push
pusha
fldenv
xor
lea
into
mov
and
pop
mov
outsl
lock
and
add
mov
pushf
add
into
roll
aad
lret
xchg
mov
dec
shr
or
cmp
and
pop
in
dec
push
scas
sti
out
pushf
mov
popf
add
stc
sub
and
add
and
add
fcmovne
xchg
jp
xchg
mov
ja
mov
out
add
ror
adcb
outsb
int3
or
push
xchg
pushf
xchg
push
cmp
insl
pop
lretw
sbb
jg
les
jbe
add
popf
ds
stos
je
jb
xchg
movsl
adc
add
imul
inc
ror
insl
sub
dec
jnp
ss
aaa
pop
add
push
xchg
repnz
mov
pop
mov
mov
jl
push
insb
mov
jnp
addb
fstps
add
mov
push
xor
arpl
sub
es
add
shll
aaa
xchg
daa
out
loopne
push
xor
or
lods
or
xor
add
xchg
add
add
jecxz
lods
add
mov
mov
push
es
xchg
inc
adc
inc
sub
or
push
lret
sub
add
xchg
mov
in
outsb
call
daa
push
mov
outsb
add
and
adc
data16
repz
add
mov
sbb
push
sbb
inc
push
popl
fldl
mov
xor
dec
out
inc
lods
sub
mov
call
lods
outsb
jp
and
push
or
pusha
push
mov
shrb
lret
dec
stos
fnstsw
add
pop
movsl
push
sbbl
mov
mov
push
std
add
or
add
and
jp
pop
mov
xchg
div
fisubl
jg
hlt
cmc
aaa
xchg
enter
dec
push
mov
dec
add
pop
mov
daa
in
add
inc
adc
fs
dec
sbb
mov
sub
jnp
adc
and
mov
clc
add
cmp
push
dec
cmc
xor
incl
faddl
or
mov
ret
into
cld
lock
pop
mov
add
jbe
dec
xchg
mov
rolb
ds
mov
cmpsb
add
subb
in
addr16
push
jge
inc
add
aad
push
aas
jle
nop
and
fisubl
shll
out
sarb
add
dec
add
mov
lods
mov
inc
dec
insl
inc
rcll
jnp
std
dec
jb
ficompl
addr16
inc
push
int3
add
xor
fs
push
fcomip
cs
add
fcmovbe
push
jns
add
movsb
loop
cmp
mov
bound
add
daa
jmp
popa
addr16
imul
subb
les
in
add
bound
xchg
add
out
cs
orb
fsts
dec
cltd
mov
ljmp
mov
out
add
mov
fs
cmp
mov
add
popf
add
add
xor
lret
enter
add
xchg
je
addb
xchg
jns
shrb
cmpb
filds
add
inc
add
add
xor
mov
imul
add
jae
lods
fdivl
xor
mov
inc
push
hlt
mov
sub
and
mov
cmp
mov
pop
xor
lods
je
mov
jnp
lret
adc
lods
dec
ja
adc
mov
dec
add
subl
data16
inc
mov
movsb
cmovl
jecxz
call
les
dec
lock
pop
pushf
insl
push
mov
mov
adc
jb
outsl
outsb
jmp
dec
add
push
pop
cld
stc
add
mov
jmp
movsl
popf
cmp
shlb
xchg
jle
subl
add
jl
fdivrs
les
mov
push
fxtract
jle
add
xchg
add
sbbb
pop
incl
inc
nop
lcall
and
xchg
xor
xchg
aas
dec
adc
push
aam
nop
loop
or
mov
sub
dec
add
aaa
jmp
sahf
push
add
data16
push
lret
push
add
rolb
adc
xchg
push
lcall
push
fldcw
mov
adc
aam
cmp
sbb
or
inc
xlat
xor
scas
mov
inc
cwtl
mov
push
test
test
xor
pushf
fs
js
add
aad
gs
add
lahf
lret
push
adc
clc
push
add
add
test
mov
dec
inc
adc
adc
xchg
add
shrl
lods
sub
addl
add
lcall
and
cmp
cli
xor
out
jecxz
call
or
int
or
sahf
nop
pop
adc
fbld
sub
psubsw
lcall
sub
adc
test
clc
mov
std
aaa
shrb
mov
sbb
scas
scas
inc
in
cmpsl
les
add
popf
cli
xlat
out
lret
hlt
xchg
cli
sbb
or
loopne
addr16
adc
loop
and
repnz
lea
ds
sub
js
out
sti
mov
cltd
adcl
add
inc
sub
cltd
dec
imul
repnz
les
in
lret
lret
scas
mov
movsb
nop
outsb
aaa
pop
sub
xor
dec
jecxz
ret
mov
sub
icebp
add
add
mov
aam
int3
lahf
pop
add
mov
scas
sbb
loop
add
hlt
hlt
into
xchg
or
adc
data16
call
mov
rclb
adc
add
mov
jle
loop
jnp,pn
aam
repnz
add
std
hlt
mov
push
movsb
stc
add
jo
cmp
shlb
in
fldcw
loope
sahf
scas
inc
rcr
scas
cmpsl
aad
inc
movsb
cmp
outsb
lds
mov
add
shl
jnp
mov
push
dec
cmc
pushf
sqrtps
test
pop
mov
xor
stos
jp
aam
pop
add
lret
pop
add
stc
sbbb
mov
xchg
cmpsl
insl
pop
xchg
insb
jmp
lds
xchg
adc
mov
push
lea
or
fadds
cmp
add
lret
orb
and
fwait
cmp
xchg
leave
enter
pop
add
add
add
and
scas
mov
add
and
add
lcall
ljmp
adc
add
testb
lock
insb
push
add
stc
test
jb
add
stos
jmp
push
lahf
mov
popf
mov
ret
adc
into
mov
je
add
add
xor
stc
add
mov
or
sbbl
dec
popa
sahf
mov
je
movsb
cmp
adc
xor
scas
les
jmp
sbb
add
pop
add
add
ss
sub
shl
add
add
push
orl
xor
fdivrl
pop
and
insb
cmpsl
add
dec
add
xor
adc
aaa
adc
and
roll
adc
out
out
hlt
fsubr
es
add
mov
mov
cmc
movsb
aaa
mov
xor
add
add
lahf
cs
mov
cs
add
add
add
nop
in
push
vmread
mov
arpl
sbb
add
push
xor
inc
xor
dec
add
cmpsb
scas
jmp
adc
je
lcall
xchg
int
fiaddl
fs
adc
mov
cmp
sub
sub
dec
mov
lea
jbe
in
les
outsb
mov
push
cmpsl
daa
mov
push
cmp
xor
xchg
add
xchg
mov
xor
mov
pushf
mov
faddl
cli
fcompl
scas
cltd
add
sub
pop
add
insl
movb
jne
bound
cld
iret
sbb
out
insl
push
push
mov
das
adc
mov
push
jmp
imul
stos
repz
add
lret
insb
pop
sbb
inc
jne
std
sbb
inc
mov
cmp
stos
cmp
in
or
inc
lea
xor
cmpl
add
mov
add
dec
in
add
inc
push
jl
add
add
lea
pop
stc
fsubr
out
add
pop
adc
cli
fwait
pop
leave
mov
jmp
adc
pop
outsl
inc
bound
in
mov
dec
pop
push
cmc
outsb
mov
filds
add
pop
popf
bound
add
pop
and
push
jmp
incb
inc
fwait
add
or
loopne
lret
sub
sahf
scas
mov
sbb
jae
mov
mov
mov
dec
insb
scas
fcomps
jp
lods
sub
sarb
add
loop
sbbl
add
add
bound
pusha
addr16
fistpll
cmp
fidivrl
mov
xor
orl
mov
pop
movsl
cmpsb
fwait
cs
mov
add
jle
cmp
xor
xchg
sbb
mov
xchg
push
sarl
mov
push
test
xorl
lret
bound
add
or
popa
add
dec
decb
push
lcall
add
ret
dec
xchg
popl
push
inc
add
and
and
lcall
mov
movsl
cld
movsb
insl
inc
data16
es
pop
cmp
push
lods
outsb
pop
push
cld
sub
shrl
xchg
xor
push
fidivs
fldt
jmp
rorb
cmpl
fwait
test
lret
dec
cli
push
jno
add
xchg
in
xor
mov
imulb
sub
add
inc
xchg
pop
fdivrl
cmpb
or
and
mov
xchg
pop
xchg
mov
add
ja
rolb
push
and
pusha
jns
xchg
mov
add
inc
aas
or
fxch
fisubrl
and
pop
add
xor
pop
adc
mov
pushw
aam
mov
aas
sarb
add
add
add
mov
mov
test
add
xchg
out
ds
add
add
test
inc
mov
jecxz
xlat
popf
xlat
add
out
dec
std
pop
jp
adc
inc
rolb
test
add
push
dec
adcb
clc
add
sahf
add
test
jne
fcomp
dec
add
mov
fs
ret
sub
dec
cmp
adc
add
cmp
mov
fisubs
and
add
mov
jo
inc
loop
pop
lcall
fildl
aaa
mov
add
push
stos
imul
push
int
dec
in
das
mov
add
or
rcll
gs
cli
cltd
fistpl
pop
insb
jae
push
out
add
scas
xchg
in
insb
decb
rorl
xchg
xor
sbb
and
sub
add
fcoms
or
lahf
sbb
add
sub
adc
add
jp
push
popf
xchg
add
add
mov
stos
add
lea
lea
pop
mov
push
mov
push
mov
addr16
aam
test
lods
mov
ljmp
or
repz
out
mov
insb
fstps
arpl
add
xchg
mov
hlt
in
mov
add
mov
pusha
out
faddl
jg
push
fcmovne
inc
imul
push
in
test
gs
loop
pushf
shlb
in
aad
mov
lods
idivl
add
pop
mov
ret
into
add
insl
push
or
jg
or
repz
outsl
testb
jo
and
add
popl
jnp
mov
jmp
das
in
mov
fs
test
sbb
int
call
rorl
cld
or
mov
fisubrs
movsb
add
mov
adc
stos
clc
sbb
jmp
arpl
sbb
add
pop
xchg
inc
pop
pop
gs
js
stc
ret
add
jae
add
punpcklwd
popf
lret
lods
in
push
insl
xchg
jl
mov
xor
addr16
sub
icebp
std
add
inc
pop
push
or
xlat
mov
pop
add
imul
ja
pop
inc
push
in
imul
loope
inc
cmp
xorb
cmpsl
lahf
add
leave
mov
jecxz
mov
out
push
add
sbb
mov
push
insl
popf
push
jbe
mov
push
das
push
push
cltd
mov
insb
add
xchg
and
loop
popa
cmp
sub
mov
jno
movsb
add
jnp
jmp
add
mov
pop
pop
shlb
roll
fnstsw
add
xor
arpl
add
mov
inc
add
lods
sub
jno
add
add
and
outsb
jle
jecxz
stc
lods
pop
add
ret
cs
orl
lods
nop
sub
mov
adc
and
jecxz
bound
push
jbe
dec
addb
add
sub
pop
aad
insb
pminsw
push
or
xlat
in
fisubs
jmp
pop
pusha
xchg
or
rolb
xchg
sbb
cmp
pushl
in
test
in
sub
inc
std
inc
adc
and
andb
jle
sbb
addl
and
mov
lret
sub
add
cmpsb
add
and
out
popl
push
aad
add
add
andl
mov
les
or
sahf
add
or
out
fbstp
sbb
mov
xchg
pop
mov
add
insl
repnz
xor
xchg
inc
movq
in
pop
xchg
dec
notb
add
add
insl
xchg
pop
sub
dec
or
push
shr
mov
lcall
cmp
add
jns
xor
add
in
pop
add
mov
add
add
rolb
xchg
pushf
push
pop
imul
jl
add
fstpl
stc
mov
and
mov
outsb
insb
clc
dec
add
sub
rolb
add
mov
mov
sub
inc
jno
pop
and
nop
int3
push
push
mov
xchg
and
aam
adc
or
and
add
lcall
aas
sbb
in
mov
inc
js
mov
btc
sbb
xlat
adc
daa
xor
jne
lods
dec
add
mov
cmp
outsb
jae
shr
ffreep
les
cmp
or
jecxz
enter
test
andb
adc
stc
cmc
iret
sub
shrl
pop
sub
mov
add
xor
aam
cltd
push
sbb
sub
push
add
jp
imul
aad
jecxz
dec
or
sarb
repz
dec
cwtl
xchg
add
stc
rcll
mov
cmc
movsb
bound
rolb
sub
ljmp
sbb
xchg
outsb
and
mov
add
hlt
hlt
lods
stos
sub
cmpsb
add
add
xchg
imull
jmp
jno
test
in
testb
or
shlb
inc
ret
jle
fsubrl
out
repnz
mov
fisttpl
test
xor
pop
add
xchg
inc
mov
sbb
add
adc
repz
into
ds
out
xchg
add
xor
into
cmp
mov
ficomps
add
add
mov
mov
add
incb
std
clc
test
shll
and
lods
cwtl
add
add
outsb
out
inc
add
add
int
sti
icebp
mov
add
inc
push
fld
adc
insb
add
bound
and
in
in
sbb
mov
add
movups
jp
scas
push
xchg
xor
aam
les
mov
sti
adc
adcb
lock
cmp
and
sbb
jg
cld
jle
and
jmp
or
popa
dec
lods
add
push
fimuls
rcl
clc
out
mov
add
icebp
pop
arpl
rcll
out
sti
mov
test
call
neg
mov
inc
add
sti
xor
aas
inc
xchg
add
xor
in
xchg
add
fcmovnb
pop
xor
movsl
cmp
add
jno
add
jno
ret
movsb
clc
fldl
or
pop
inc
add
ret
les
mov
outsl
add
xorl
and
mov
add
in
inc
jecxz
notb
jecxz
lcall
and
mov
add
jae
pop
mov
add
and
sahf
xchg
fxch
sbb
out
mov
xchg
add
pop
cmpsl
add
add
xchg
rolb
insl
in
mov
add
loopne
add
dec
xchg
xor
imul
add
xor
es
enter
lret
dec
add
mov
out
sahf
and
sbb
xor
fwait
sbb
js
add
sub
cmp
cmp
and
cs
int
cmp
repz
pop
dec
add
jb
push
mov
cmpsb
pop
jns
div
mov
cltd
fnstcw
pop
push
test
sbb
into
inc
jmp
enter
jae
fdivr
dec
pop
add
imul
lahf
and
or
push
pushf
dec
mov
scas
add
xchg
mov
pop
and
push
or
test
enter
repnz
mov
pushf
sub
dec
mov
mov
add
sbb
iret
sbb
add
or
mov
xchg
pop
test
xchg
aaa
hlt
imul
ret
xor
add
jb
faddl
mov
mov
adc
lret
xchg
aas
xchg
jne
inc
sarl
or
pop
insl
aad
xchg
fdivr
std
push
ja
add
xchg
insl
es
popf
popa
pop
mov
and
inc
dec
or
adc
dec
pop
mov
gs
add
pop
pop
sub
test
push
xchg
ja
pop
push
add
in
add
push
push
mov
popa
fidivs
in
repnz
ja
repz
push
jb
stos
loope
add
lahf
or
loopne
add
dec
mov
pusha
inc
add
pop
add
lds
lahf
dec
enter
scas
outsb
xor
add
imul
inc
mov
add
xchg
int
jne
mov
jno
inc
and
pop
repz
jecxz
fldenv
and
add
cmpsl
xchg
xchg
sbb
shlb
fwait
xor
add
aaa
sarb
add
pop
add
dec
lea
mov
fmull
mov
ljmp
jo
arpl
jbe
add
add
pop
adc
lock
xor
mov
inc
cmpsl
enter
cmc
add
movsl
aas
mov
loopne
add
xor
test
sbb
jmp
js
insb
fdivs
xchg
and
arpl
add
xchg
int3
mov
add
cmp
add
cli
add
ficoms
popa
or
dec
add
std
dec
scas
mov
stos
xchg
imul
jbe
dec
inc
js
fwait
in
add
popa
jbe
rcl
loop
add
xchg
push
mov
xchg
xchg
aad
inc
mov
icebp
fiaddl
in
test
sub
inc
add
jg
insl
dec
cld
mov
dec
fwait
rolb
icebp
add
and
nop
xor
loope
lcall
outsl
mov
add
push
mov
xchg
cmpsl
add
ss
mov
out
cwtl
xchg
and
iret
test
loop
sbb
dec
cmpsl
add
mov
mov
mov
add
and
mov
add
mov
ljmp
mov
inc
jg
mov
idivl
jl
xchg
aad
cmp
cmp
mov
daa
shl
cmp
ret
sahf
push
dec
lods
jge
and
push
xchg
pop
add
push
or
sub
dec
sti
add
in
enter
add
add
pop
adcl
sub
loope
dec
inc
cmp
xor
cmpsl
pusha
or
push
lahf
xlat
cmp
sbb
push
inc
lcall
adcb
shr
add
int3
xchg
xchg
add
mov
adcb
xchg
xchg
mov
jle
add
add
xorl
out
xor
sub
sbb
add
popf
jl
inc
lds
inc
addl
mov
xcrypt-cbc
cmpsl
push
mov
and
in
xorl
mov
ss
jp
je
mov
stos
mov
dec
roll
rcrl
xchg
fmuls
mov
push
test
fcompl
inc
shl
sub
cwtl
mov
arpl
mov
push
xchg
dec
and
leave
xor
sub
shr
das
notb
jg
int3
jl
or
add
mov
push
dec
call
cmp
in
enter
leave
insb
cwtl
notl
xor
adc
sbb
or
iret
add
ljmp
xor
push
imul
add
inc
sbb
xchg
mov
cmp
leave
int3
add
cmpsl
scas
ret
fnstcw
inc
scas
out
jae
mov
mov
add
movsb
testb
add
add
sti
and
imul
cmp
ffreep
sbb
mov
lock
xchg
add
add
push
insb
add
roll
add
xorb
and
std
mov
out
mov
nop
outsl
xchg
jne
fmuls
sahf
and
cmp
movsb
and
add
sbb
mulb
xor
adc
scas
mov
fs
fbstp
or
adcb
add
mov
pop
mov
add
add
sub
jno
jmp
xor
lret
pusha
add
mov
cmp
out
loop
jp
sub
sbb
imul
cmpsb
inc
add
std
bound
mov
jp
das
or
stc
fldl2e
inc
aam
in
lea
jl
jp
and
adc
inc
add
jmp
cmp
add
or
or
sbb
xchg
out
fildl
leave
clc
jb
daa
cmpb
mov
or
xor
jl
dec
mov
in
add
jno
outsl
add
lcall
add
or
movsl
add
insb
loop
in
push
add
add
cmp
add
pop
push
add
aad
scas
lea
lods
outsl
mov
mov
enter
cmpsl
add
jmp
sub
xchg
push
mov
lcall
cmpsl
andb
dec
mov
cli
movsb
mov
mov
push
xchg
mov
add
dec
add
mov
sbb
rcl
test
hlt
outsl
or
add
inc
add
jmp
add
add
ja
mov
repnz
add
and
pop
add
pop
stos
sbb
repz
add
jae
mov
inc
lea
add
popa
sbb
jno
nop
iret
mov
add
cltd
stos
leave
mov
or
shrb
sbb
movl
inc
sahf
mov
adc
push
xchg
push
pop
test
xchg
dec
pop
mov
cltd
pop
pop
pop
mov
je
pushf
stc
mov
inc
add
add
movb
jb
push
mov
add
cs
push
aas
dec
or
adc
sbb
out
cwtl
sub
dec
push
mov
rorl
add
insb
mov
inc
jl
dec
push
pop
jp
sub
repz
scas
dec
loopne
and
inc
sbb
ret
xchg
add
mov
pushf
es
mov
cltd
into
jb
outsb
outsb
scas
out
adc
daa
jmp
movsl
pop
add
adc
xor
fdecstp
pop
popa
cli
outsl
sub
xchg
add
das
add
dec
ds
xor
add
pop
sbb
lret
xchg
mul
xchg
dec
rcr
add
add
fidivrl
dec
and
jg
cmpsl
sbb
in
adc
es
add
cmpl
mov
inc
faddl
dec
sti
popa
and
bound
popf
add
stos
add
sbbl
out
loope
js
sarl
push
out
add
adc
jnp
cmc
or
add
lcall
dec
xchg
add
sbb
jl
lods
data16
shlb
and
lahf
ds
add
add
mov
adc
test
addl
adc
pop
test
mov
adc
in
jno,pn
cmp
loop
add
shlb
add
add
add
fdivr
imul
mov
jmp
add
scas
test
xchg
dec
in
jle
cmp
xrelease
and
push
loope
cs
cmp
pop
and
clc
scas
shrb
pop
sub
stos
cmp
add
popf
xchg
scas
jae
xchg
adc
lcall
xchg
sti
sub
ljmp
iret
inc
pop
and
xchg
add
push
lcall
or
js
lcall
iret
adc
add
mov
add
fiadds
mov
mov
mov
mov
add
lcall
jecxz
insb
iret
jns
pop
pushf
xchg
xchg
lcall
int3
and
mov
sub
sar
add
xchg
in
sbb
ror
pop
jno
xchg
push
mov
sbb
mov
pop
mov
rcrl
insl
cmp
mov
jle
mov
es
sti
lods
pop
inc
ss
shl
jnp
cmpsb
call
rolb
cmpsl
das
add
add
inc
insb
add
arpl
add
std
loop
mov
push
mov
aas
dec
aam
ret
add
dec
pop
stos
insb
cmp
faddl
fsubp
add
sub
jbe
xchg
add
rcr
lcall
xchg
jnp
sbb
push
or
mov
lahf
stos
mov
mov
push
imul
pop
pop
xchg
in
mov
js
xchg
loope
dec
add
sub
bound
int3
adc
sbb
scas
ss
pop
push
inc
pop
add
movd
add
jae
add
adc
leave
push
scas
adc
add
ror
dec
js
inc
mov
rcr
mov
xchg
lahf
stos
pop
test
ja
insb
add
sub
bound
ja
add
je
outsb
pop
daa
sub
jno
cmp
xlat
and
add
add
adc
notb
or
imul
pop
and
mov
add
mov
nop
adc
sbb
int
jb
js
rcrl
ljmp
pushf
sbb
mov
fwait
jo
inc
add
push
clc
inc
dec
loope
jbe
mov
bound
lods
add
mov
adc
test
fnstsw
into
mov
adc
jl
movsb
popf
or
pop
outsb
and
cmp
cmp
lods
add
xchg
add
ja
add
scas
clc
gs
fdivrl
or
push
and
incb
icebp
or
sbb
test
imul
inc
je
add
cmpsl
in
test
inc
test
xor
sbb
in
add
jg
ss
adc
mov
add
xor
or
xchg
loopne
lcall
imul
dec
push
adc
add
mov
jle
dec
add
xchg
clc
xchg
sub
cmp
sub
dec
push
add
jle
fildl
dec
out
lret
push
cmp
lods
cld
or
subb
dec
jl
add
mov
shll
pop
icebp
das
jge
lcall
into
pop
bound
push
pop
xchg
jp
popl
jne
or
inc
pop
insl
pop
or
das
sbb
sbb
dec
in
and
add
add
shlb
pop
inc
jnp
psubw
aam
popf
rcll
lods
cmp
int
and
flds
pop
movsl
in
push
inc
sub
cmp
jbe
xor
add
lods
data16
inc
pop
push
xchg
pop
test
insb
or
mov
fildll
pop
nop
cmp
and
xlat
xor
cmpb
std
mov
push
mov
inc
adc
js
jns
mov
inc
push
add
jb
or
iret
mov
jbe
xor
inc
mov
rcpps
push
and
dec
cmp
fdivr
add
and
add
movsb
dec
je
jmp
iret
ljmp
push
add
les
sbb
push
pop
add
sbb
rorl
add
mov
mov
xor
or
shlb
xchg
cmp
dec
insl
fdivrl
insb
inc
jae
pop
pop
jo
inc
pop
mov
mov
push
xchg
xor
pop
push
addl
cwtd
add
sarl
sbb
les
jmp
cmpsl
addb
cltd
and
add
fs
add
add
and
rcll
jo
inc
sar
test
stc
faddl
push
and
data16
add
mov
jns
icebp
dec
int
test
loope
rclb
and
popf
mov
int
aam
cmpsb
add
jmp
testl
scas
cld
cltd
out
push
add
imul
add
aas
test
dec
jnp
add
arpl
js
jmp
mov
jmp
add
pop
jl
lods
xor
add
jo
add
add
add
nop
jge
in
enter
lock
cmp
ds
push
icebp
je
lods
fbld
dec
xchg
add
inc
out
aas
repz
mov
xorb
mov
pop
jg
pusha
add
shrl
or
iret
bound
add
out
or
inc
in
add
fwait
mov
dec
lret
bound
pop
add
inc
add
stc
ljmp
jg
inc
xor
and
addb
add
cli
xchg
dec
scas
pop
je
imul
cltd
movsb
sub
add
sbb
inc
add
clc
imull
int
fnsave
jns
push
and
js
dec
jle,pn
mov
inc
mov
inc
stos
cmpsl
test
cld
jne
xor
je
fmuls
mov
jl
repnz
sbb
stos
add
jp
jge
fs
mov
mov
cltd
jge
mov
int
add
jo
inc
sti
nop
xchg
sub
scas
jnp
loope
push
jnp
mov
aad
push
dec
mov
fs
stc
xor
adc
jnp
cmp
stc
arpl
mov
xlat
add
adc
add
add
adc
sbb
mov
xlat
mov
add
add
dec
scas
sti
add
sbb
add
pop
xchg
shrl
add
jmp
push
or
inc
cmc
pop
mov
xchg
jp
ret
add
inc
cmp
mov
aad
push
bound
stos
push
or
jnp
add
push
ss
nop
in
inc
cld
fdivs
cmc
add
and
iret
jno
enter
cmp
push
fsubl
sar
sti
sbbl
sbb
mov
sbbb
cmovle
mov
dec
ds
mov
add
and
test
add
dec
ret
sbb
lods
xchg
pop
jno
or
adc
shufps
ret
mov
aad
test
repnz
cmp
mov
jle
es
add
and
lret
inc
cmpsb
cltd
lods
sbb
push
inc
xchg
xchg
jecxz
xchg
push
jne
cwtl
and
cwtl
in
cmp
sbb
and
aas
add
imul
mov
add
mov
jge
fwait
pop
or
mov
dec
push
lods
pop
xor
add
sub
push
subb
std
mov
inc
movb
outsl
fcomp
data16
xor
inc
ficompl
jo
pop
or
cmc
add
lret
sti
xor
leave
es
dec
push
sub
add
rolb
mov
into
mov
cli
enter
or
or
rol
push
cmp
mov
shll
pop
add
je
add
xor
stc
jmp
cmp
push
inc
pop
and
push
dec
sahf
or
fnsave
mov
loop
add
stc
pop
pop
mov
and
xchg
cmpsb
andb
sbb
mov
push
add
leave
popa
fldenv
mov
mov
pushf
add
cld
sbb
fisttpll
and
imul
cld
loopne
mov
add
add
push
jne
inc
push
jg
pusha
xchg
enter
mov
subb
popf
incl
inc
mov
mov
mov
pop
movsb
jg
add
dec
mov
movsl
jne
sub
add
jae
ret
in
mov
jg
lods
inc
mov
lret
mov
cmp
cmp
pop
movsl
or
outsl
jno
lea
call
push
jmp
sbb
adc
add
adc
fimull
pop
outsl
inc
sbb
lds
insb
add
scas
test
pop
imul
xchg
add
test
hlt
push
rcrl
add
outsb
add
mov
aad
jecxz
pushf
lock
add
cmpsl
xorl
xor
icebp
xchg
cwtl
or
jl
jb
inc
sahf
adc
in
ljmp
inc
and
pop
stos
clc
jmp
sub
ss
mov
xor
nop
xchg
sbb
fs
mov
add
adcl
xorl
mov
mov
daa
add
xchg
cld
xor
add
loope
push
xchg
and
add
scas
push
lds
loop
jge
add
inc
pop
push
stos
loopne
ds
jb
inc
test
push
add
imul
test
mov
mov
sbb
mov
add
outsb
pop
fisubrl
xchg
jecxz
add
ljmp
xchg
cmp
movl
movb
fbld
mov
imul
lcall
or
movsl
faddl
sub
enter
stos
cmp
lcall
inc
pop
mov
ret
int3
imulb
fldl
clc
push
bnd
pop
lahf
ds
pop
sub
sbb
add
cs
pop
jmp
add
in
in
sub
cmpsl
or
lods
aad
add
push
insb
repz
mov
loop
adc
add
lock
rolb
outsl
add
xchg
jo
scas
jl
shl
ret
cmp
stos
test
out
or
aad
aaa
ret
out
xlat
sbb
loope
out
test
fwait
xor
insl
fucomi
or
pop
rcrl
add
lret
jbe
or
dec
mov
in
mov
into
or
movsb
daa
add
cli
push
xchg
aas
add
mov
imulb
repnz
add
pop
enter
iret
testl
adc
adc
int3
xchg
and
movsb
stos
add
stc
dec
pop
scas
mov
dec
add
dec
test
fsub
fwait
jmp
cltd
popa
pop
add
rclb
bound
add
and
add
add
push
cmp
pop
dec
xchg
in
sub
adc
add
jge
loope
fistl
add
add
test
sbb
psubsb
movsb
aaa
cmp
or
or
sub
pop
jle
pop
stos
notw
sub
adcb
aaa
and
notl
sbb
ud2
push
add
mov
mov
or
and
add
pop
movsb
pop
ljmp
nop
lea
repnz
aas
xchg
lea
int
jno
jnp
pop
adc
rdpmc
aas
lcall
add
xor
cwtl
ss
or
ja
xor
add
cwtl
icebp
in
add
add
cmpsb
fnsave
adc
mov
mov
mov
stc
add
mov
cmp
gs
aad
mov
in
mov
mov
sbb
jne
jmp
add
mov
mov
and
push
aam
add
stc
gs
insb
xchg
lock
push
mov
stos
xor
inc
add
pop
xchg
push
push
xor
cmp
sub
push
mov
bound
sub
loop
ret
xchg
add
adc
and
add
in
inc
mov
aam
xchg
sub
jg
jns
jnp
cmpsl
xlat
clc
les
push
mov
add
dec
imul
test
fs
cli
push
pop
cmp
sub
mov
jo
cmp
je
mov
out
adc
rolb
ret
sbb
jbe
sbb
xor
fs
and
pop
in
cli
mov
ja
pop
test
popf
out
xchg
add
xor
and
mov
add
inc
in
sub
jae
or
es
cld
mov
lea
mov
imul
add
adc
loopne
mov
or
loope
or
jecxz
inc
adc
sbbl
addl
jmp
ljmp
fwait
call
add
add
test
mov
add
pop
xchg
int
lcall
add
push
repnz
add
call
xchg
repnz
sub
mov
add
movsb
addl
push
cmc
pop
push
pop
add
in
push
popa
lods
add
out
lret
pop
popf
mov
cs
out
enter
cmpsb
nop
mov
fwait
mov
mov
outsb
jb
jle
pop
hlt
and
lret
inc
das
leave
pop
add
mov
out
filds
inc
inc
int
mov
mov
add
xchg
mov
xlat
mov
clc
out
xor
mov
scas
inc
mov
leave
sahf
cmp
add
push
pop
cld
jnp
or
push
cmp
aaa
cwtl
inc
inc
push
cmp
inc
mov
push
sub
inc
sbb
push
xchg
shr
int3
xchg
mov
or
pop
out
aam
cld
pop
jbe
add
pusha
mov
pop
mov
xor
fildll
add
and
pop
sahf
rol
fnstsw
sub
push
out
push
hlt
nop
jnp
xchg
insl
imul
xchg
cli
outsl
jle
xchg
sub
fdivl
push
jl
mov
mov
cmp
dec
test
ds
sub
sbb
clc
loopne
cli
hlt
sbb
sbb
mov
cmc
add
xor
and
movsb
pop
xor
into
test
and
test
add
test
adc
cwtl
data16
in
mov
call
jbe
mov
xorb
mov
mov
sub
jb
add
sbb
popa
movsb
sbbb
inc
jmp
in
mov
push
push
jl
dec
push
insl
cmpsb
mov
sbb
jns
pop
fwait
and
daa
lcall
mov
lahf
push
cltd
scas
cs
enter
pushf
jle
mov
out
mov
iret
mov
lcall
xlat
arpl
lods
add
les
loope
mov
test
stos
arpl
xchg
jg
bswap
or
mov
movsb
add
sub
add
fwait
lcall
cmpsl
pop
inc
or
cmp
push
out
jmp
mov
inc
repnz
add
or
or
decl
jle
mov
mov
push
xchg
inc
dec
adc
push
and
xor
lea
jmp
ret
jo
jl
clc
xchg
jno
add
add
cmp
cs
push
lret
incb
aas
add
xchg
add
mov
sub
ja
add
out
pop
js
and
in
and
or
add
sbb
jns
into
cmp
scas
and
lret
pop
pusha
xchg
adc
dec
mov
clc
mov
push
aas
out
pop
mov
cmpsl
sub
mov
shrl
movsb
js
test
lret
push
pushf
sbb
test
enter
sub
repz
test
sub
repz
add
cmp
cmp
mov
add
jo
mov
push
sub
mov
int
fiaddl
xor
lret
push
and
mov
sbb
rcll
add
orb
pop
and
add
movl
nop
adc
nop
dec
add
xchg
add
xchg
or
xchg
inc
mov
lds
push
add
cmp
mov
add
mov
inc
pop
lock
out
add
faddl
jae
add
into
dec
add
call
mov
mov
dec
mov
inc
jge
in
lret
push
loop
jno
add
cmpl
out
jl
popf
inc
push
xor
add
mov
push
adc
add
cmpsl
test
pop
loopne
in
add
mov
or
cmp
nop
pop
add
sub
pusha
xchg
mov
cmpsb
js
mov
xchg
add
hlt
dec
lods
sub
ljmp
inc
inc
ret
ret
adc
imul
jmp
ss
xchg
xchg
loop
scas
jo
cmc
push
nop
dec
scas
test
sbb
add
jl
repnz
scas
mov
pop
sbb
xor
xlat
add
jg
mov
decl
dec
fisubrl
fists
fucompp
cmp
push
add
add
clc
lds
lret
and
notb
negb
add
loop
add
aam
leave
add
mov
dec
mov
out
fcomi
cwtl
mov
aas
js
and
mov
cmp
lock
test
mov
mov
sbb
popf
add
lods
pop
and
mov
out
je
jle
inc
sub
test
jecxz
aas
add
mov
push
add
fst
mov
xor
add
add
dec
pop
cmp
add
push
pop
in
add
adc
std
repnz
push
add
cmc
add
add
add
push
out
add
insl
xchg
sbb
inc
push
negl
pusha
es
or
lods
add
cmc
cltd
sub
movsb
cwtl
mov
add
inc
stos
jp
stc
flds
mov
add
or
or
push
clc
cmp
jl
test
mov
addb
iret
mov
inc
add
sbb
or
das
insl
les
loop
add
rcll
adc
lock
cs
add
dec
les
add
stc
add
aas
mov
pop
je
mov
fs
aam
lret
push
faddl
or
cli
or
stos
cmpsb
sub
adc
stos
push
out
cmp
cmp
mov
add
repnz
test
add
ret
mov
hlt
xor
sbb
repnz
je
or
cmp
push
mov
mov
outsb
iret
data16
add
pop
sub
lea
cli
sbb
mov
dec
xor
scas
jmp
pop
or
mov
add
pop
push
add
sub
sahf
push
mov
movsb
push
inc
jae
insb
shl
xchg
cmp
cmp
mov
daa
test
movsl
cld
add
add
aam
cmpsb
leave
lahf
sbb
pop
add
add
cmp
leave
hlt
test
std
or
add
xchg
rorb
cld
dec
xchg
data16
xchg
repz
mov
add
pop
or
dec
repnz
test
or
push
rclb
mov
adcb
mov
pushf
pop
add
das
add
mov
inc
add
mov
insb
lahf
sti
dec
push
add
rorb
jecxz
ret
mov
stc
adc
mov
ds
pop
sbb
lods
add
cwtl
add
fsubl
jo
mov
pop
xchg
repnz
or
add
mov
lods
push
test
add
mov
pop
fadds
in
scas
add
adc
sub
mov
fsubl
inc
pop
push
inc
out
add
sbbl
popf
fcomip
or
xor
and
mov
and
add
add
add
mov
lods
mov
push
adc
jp
add
mov
add
add
jle
in
cmc
sbb
adc
push
aas
shll
lret
loop
mov
mov
cmp
and
fwait
mov
je
cmp
mov
out
push
mul
jg
push
ror
jg
rolb
cmp
add
push
add
cs
test
mov
roll
mov
mov
mov
xlat
daa
add
push
add
add
stos
mov
add
popf
gs
jb
loop
cwtl
pop
jl
testl
test
lods
xchg
and
sbb
mov
mov
add
cmp
jb
sti
mov
mov
xchg
xchg
add
jecxz
pushf
adcl
lea
cmp
fs
mov
jo
insl
std
push
jg
xlat
insb
shrl
flds
roll
pushf
add
daa
dec
nop
sbb
push
jg
mov
xor
inc
cmpsb
out
mov
fwait
shr
andl
sub
dec
mov
repz
or
dec
mov
lahf
mov
out
pop
xor
adc
pop
sbb
jb
jnp
inc
or
dec
fsubrp
mov
mov
pushf
add
jle
xor
cmp
into
negb
lock
mov
insl
je
call
faddp
add
pop
es
data16
inc
lock
dec
adc
push
cwtl
sbb
push
lock
adcl
and
push
jge
outsl
push
push
sbb
xchg
les
add
mov
in
add
mov
cmpsb
add
outsb
add
dec
mov
out
cmpsb
adc
lds
mov
add
and
pop
jmp
sbb
lock
mov
ds
cltd
mov
iret
mov
sbb
ret
push
add
inc
or
jnp
mov
xchg
mov
dec
cmp
inc
dec
add
jl
and
add
xchg
dec
add
lret
cmp
imul
lods
std
add
daa
add
mov
mov
aad
push
pushf
shll
cmpsb
je,pn
dec
pop
jmp
popa
add
dec
pop
or
add
add
cs
or
int3
mov
lcall
cmp
jae
dec
gs
cld
stc
dec
popa
in
in
mov
push
add
jo
in
inc
add
fldpi
leave
jb
add
add
adc
fnsave
movsb
dec
inc
cld
movsl
out
fldenv
cmpsb
dec
jmp
in
mov
add
enter
out
js
add
mov
adc
out
pop
in
rorb
xchg
test
call
push
mov
add
mov
shlb
mov
iret
add
and
ds
push
js
xor
xchg
and
outsb
sbb
mov
mov
lcall
outsb
xchg
sbb
add
push
inc
inc
mov
mov
and
mov
cmp
and
dec
pop
leave
add
mov
pop
les
movsb
add
into
sbb
and
fsubs
outsb
add
dec
add
aaa
add
xor
leave
mov
add
fs
sbb
mov
add
pop
xlat
stc
sbb
jne
add
mov
and
inc
xchg
add
mov
push
popa
sub
add
inc
pop
mov
dec
int3
add
ljmp
in
add
lahf
dec
insb
add
call
outsb
call
or
gs
add
dec
repz
aaa
je
lret
add
adc
incl
add
test
adc
hlt
add
mov
hlt
sbb
xchg
xchg
add
jp
jne
fldt
icebp
clc
mov
mov
inc
xlat
std
push
repz
movsl
and
je
xchg
cmp
sbb
int
add
gs
sub
pushf
mov
xor
das
ljmp
jnp
adc
mov
aas
push
jne
stos
and
test
add
cmc
mov
mov
or
or
inc
jae
jg
fiadds
rcr
mov
and
std
add
add
ret
out
in
mov
add
popf
fwait
insb
jo
repz
pop
out
adc
pop
inc
add
lods
mov
inc
add
add
xchg
aam
clc
or
addr16
inc
test
test
jb
add
ss
outsb
add
inc
mov
jbe
int
mov
cmc
add
aaa
leave
add
push
sub
test
add
mov
hlt
push
das
negl
test
pusha
push
jbe
out
and
aaa
mov
push
lcall
das
jb
mov
das
mov
cmp
add
adc
add
jae
sub
xchg
test
mov
jle
js
dec
cmp
mov
mov
lea
add
scas
test
repz
and
mov
cmp
add
dec
inc
in
mov
inc
xchg
and
arpl
mov
nop
out
xchg
jae
dec
lcall
stc
jne
sbb
out
imul
mov
aad
mov
cmpsl
pop
lret
xor
cmp
pusha
sub
lock
add
shrb
cmp
add
test
mov
testl
movsl
xchg
sub
inc
iret
add
test
add
arpl
add
cmpsl
stos
mov
adc
test
ja
mov
pop
iret
jmp
adc
xchg
add
jl
add
inc
add
cmp
adc
jmp
enter
mov
cmp
aaa
sub
sti
iret
inc
xchg
les
mov
iret
inc
pop
movsb
int3
add
mov
cmp
punpcklbw
roll
repz
inc
sbb
fistpl
cltd
imul
mov
jns
cmp
add
lret
dec
leave
add
add
nop
mov
cmp
fadd
imulb
inc
iret
add
inc
mov
add
xchg
add
mov
mov
aas
lcall
sbb
dec
xchg
arpl
mov
daa
add
mov
jae
mov
daa
fucomp
sbb
mov
add
jmp
dec
inc
mov
xor
adc
test
test
mov
into
add
add
cmp
add
arpl
stos
xchg
pop
ljmp
cmc
inc
jmp
cmp
gs
into
add
ss
ljmp
es
add
lods
movsb
lock
mov
push
mov
nop
xor
inc
dec
cmpsb
imul
adc
fnsave
dec
lods
enter
js
or
sub
cmpl
adc
daa
jg
sbb
xor
sar
jg
mov
xchg
mov
enter
and
add
xor
inc
add
pop
inc
push
insl
mov
fwait
add
add
cmp
out
sbb
mov
cmp
outsl
aam
add
mov
lcall
pusha
and
sbb
test
mov
add
add
aad
in
iret
aaa
test
ljmp
mov
fistpll
lcall
addb
out
xchg
andl
sub
add
and
lret
and
pop
and
add
sbb
imul
xchg
imul
call
add
outsb
ror
stc
inc
leave
mov
cmp
cmc
scas
and
in
imul
xchg
dec
add
mov
shrl
test
pop
add
lds
xchg
xchg
add
sbb
subl
add
fidivl
ljmp
lods
mov
popf
pusha
mov
jecxz
add
das
push
popf
xor
insb
add
cld
int
ja
mov
fwait
jae
fadds
add
add
xor
or
add
pop
aaa
sbb
xchg
imulb
in
int
add
fcoml
adc
dec
ret
mov
jnp
add
mov
push
scas
add
or
ja
xlat
inc
jle
testl
push
inc
jo
pop
movsl
add
fldt
roll
jecxz
push
and
add
add
push
inc
dec
in
mov
mov
xor
xor
push
cmc
push
clc
jne
push
inc
pop
xchg
mov
add
mov
mov
jmp
sar
push
jge
repnz
push
add
xor
aaa
add
jno
fisubs
in
lret
imul
jno
jno
mov
test
call
insb
inc
push
jle
cmp
inc
lret
jl
push
cmp
add
sbb
lods
jg
sbb
xor
fnstenv
and
cmpsl
or
lock
inc
mov
inc
add
xor
inc
sbb
push
mov
dec
mov
rep
add
dec
add
ja
add
shrl
fldcw
mov
gs
cmpsl
test
push
in
pop
jge
shll
or
es
and
xor
add
push
je
or
sub
pop
mov
popl
arpl
cwtl
add
js
xchg
daa
push
rcll
dec
add
push
stc
inc
imul
nop
int3
add
add
pop
fisttpll
pop
push
xchg
rolb
ds
push
ret
dec
insl
stc
popf
add
sbb
out
dec
outsb
stos
in
add
and
in
lcall
xor
adc
push
xor
or
mov
out
jbe
fcomps
jb
fmuls
adc
aaa
or
repz
lahf
jmp
add
xchg
js
test
inc
inc
add
or
add
sbb
push
cwtl
push
mov
sti
sub
add
in
in
adc
jmp
popf
mov
lea
mov
or
and
add
ja
jge
xor
xor
into
cwtl
sbb
push
addr16
cli
out
add
mov
xchg
add
push
testb
xchg
add
mov
shl
fnstsw
ja
ud0
rcrl
push
insl
pushf
ret
push
dec
cmp
add
add
aad
out
incb
and
jg
sub
adcl
xchg
repz
inc
dec
sbb
add
mov
test
push
add
jmp
sbb
flds
mov
jae
add
mov
sub
jb
stos
pop
pop
push
xchg
lods
outsl
mov
insl
add
dec
and
xchg
mov
sub
jge
add
jb
push
sti
jg
add
dec
lds
hlt
shrl
pop
mov
icebp
hlt
add
pop
jg
test
push
aam
lods
add
shrb
aaa
movl
mov
xchg
add
dec
lcall
jmp
test
and
jo
jg
repnz
pusha
flds
lret
fcmove
mov
sub
lea
add
mov
dec
add
rcll
and
mov
add
xor
insl
cltd
dec
rolb
into
cli
add
add
dec
fdivrs
push
sbb
inc
pop
lahf
dec
jno
pusha
leave
fnstcw
aaa
lods
sbb
xor
mov
push
nop
ja
arpl
dec
ficoml
cli
lret
aam
lret
enter
mov
and
add
repz
lock
add
pop
ret
add
cmp
inc
inc
cmp
andl
lcall
xchg
loope
sahf
add
cmp
xchg
popf
adc
mov
pop
fs
add
inc
fwait
lret
inc
loope
movsl
or
cs
call
repnz
add
adc
lock
sbb
add
movsb
add
push
andl
or
scas
xlat
sbb
push
add
add
mov
add
add
ss
stos
arpl
enter
jne
in
test
lret
test
and
out
enter
add
sub
sub
inc
mov
pop
je
add
xchg
insb
into
add
add
rolb
sub
enter
or
or
jo
test
push
test
out
jg
xor
sbb
mov
cmp
int
xor
add
add
test
xor
add
les
inc
jl
les
mov
mov
loopne
pushf
cwtl
out
addb
aad
xchg
test
dec
movsl
pop
mov
lds
scas
leave
stos
int3
pop
pusha
repz
add
mov
pusha
pop
add
ds
outsl
xor
add
movsl
ja
push
repz
cmc
out
add
xor
cmc
jbe
shrl
dec
mov
out
add
and
push
lret
sub
mov
imul
jecxz
fs
add
jmp
push
inc
ss
adc
pop
sbb
inc
lret
enter
dec
ljmp
mov
adc
fwait
loop
das
sub
movsb
clc
pop
or
or
add
mov
mov
dec
add
jmp
xchg
push
cs
das
setp
lahf
add
push
sti
fadds
cmp
add
and
jecxz
mov
mov
iret
add
sbb
xlat
cmp
test
outsl
add
mov
or
push
sbb
sahf
xor
into
mov
mov
das
cmp
popf
fcoms
xchg
outsl
nop
push
xor
lcall
mov
cli
popf
push
jne
sbb
dec
sbb
ss
add
or
cld
inc
dec
xchg
repz
cmpsb
jnp
in
add
movsl
push
sub
inc
push
add
int3
testl
mov
iret
sbb
cmc
mov
xor
lods
int
aad
daa
jmp
daa
add
pop
inc
leave
scas
cmp
movb
fs
jne
cld
push
cmp
xchg
aaa
add
sub
pop
dec
rcrl
mov
adc
or
xchg
fstl
sub
add
hlt
mov
xchg
xchg
jge
cmp
pop
scas
xchg
pusha
es
xchg
mov
sbb
jle
pop
mov
and
sbb
insl
popf
out
sbb
sbb
repz
sbb
loop
adc
inc
cmp
imul
gs
mov
mov
add
sub
addr16
add
test
and
popa
mov
test
add
or
or
loopne
dec
jb
stos
add
jl
and
dec
lods
mov
stos
sub
mov
mov
flds
pop
adcl
add
push
rclb
inc
in
aam
je
es
add
add
add
inc
add
loopne
scas
jno
pop
jmp
inc
cld
cmp
jmp
push
and
mov
inc
inc
divb
add
mov
adc
not
js
sbb
jge
and
jecxz
je
out
mov
mov
add
inc
add
jg
ljmp
test
sub
out
and
repnz
ds
insb
add
jo
xchg
mov
add
push
test
fsub
leave
test
dec
sub
stos
push
add
rcrl
scas
mov
add
xchg
or
push
sub
add
addr16
or
es
jmp
rclb
add
pop
bound
and
or
jl
add
inc
sbb
push
lea
dec
mov
jmp
add
cs
jg
cli
imul
jns
fs
addl
cmp
xlat
into
lret
sbb
loop
add
and
inc
add
lods
add
call
push
cmp
pushf
iret
adc
pop
cli
imul
das
pop
lds
lock
sub
ja
shll
jo
push
imul
lock
aam
fldl
ljmp
xlat
add
scas
sbbb
jo
pop
jp
pop
sti
or
add
bound
add
add
aam
sbbb
add
pop
addr16
mov
lcall
sbb
mov
mov
xchg
xor
add
add
mov
jg
and
roll
int3
leave
sub
or
stos
pop
stc
jecxz
pushf
test
jns
rolb
pop
xor
shll
xchg
jbe
and
and
loope
inc
inc
add
inc
lret
add
repz
sub
flds
jp
inc
fabs
loop
rep
call
xor
test
stos
add
mov
jae
fcomps
adc
sub
mov
cli
sub
and
pop
add
pop
aas
sub
testl
minps
mov
add
sub
pusha
sahf
mov
fiadds
je
mov
mov
stc
popl
mov
movsb
rorb
mov
ret
stos
out
jg
je
les
lods
inc
dec
add
scas
lret
dec
cmp
and
add
lea
out
and
add
add
das
dec
xlat
and
dec
add
inc
int
lret
mov
testb
inc
out
sub
or
add
mov
test
add
leave
push
jecxz
mov
push
repnz
xchg
es
fs
mov
add
lock
adc
cmpl
pusha
cmc
jbe
testl
inc
add
loope
push
mov
add
jl
es
cld
adc
rol
xchg
mov
sbb
push
add
cwtl
ds
pop
jb
ja
add
adc
stos
xchg
sbb
xor
mov
mov
adc
sbb
add
lcall
push
sbb
daa
mov
add
xchg
in
cmp
pop
add
xchg
xchg
push
insb
pop
lods
add
insl
xchg
adc
jmp
jnp
stos
mov
loopne
testb
xchg
adc
popf
ret
fwait
add
cwtl
pop
inc
fs
shrl
rol
sub
or
or
adc
test
pop
pop
add
addl
xor
loop
sbb
out
add
aaa
add
sarb
outsl
mov
cmpsb
add
dec
add
mov
pop
pop
lcall
enter
fiaddl
ja
sbb
add
into
xor
mov
pop
lret
xlat
sbbl
pop
inc
pop
outsl
std
mov
xchg
jne
cli
add
pop
mov
cwtl
add
add
add
lret
xchg
mov
fimuls
pusha
add
leave
sbb
push
add
aaa
jle
lret
das
ljmp
cmp
jnp
je
adc
movsb
jne
dec
sub
or
incb
add
into
out
sahf
jl
sbb
dec
sub
sub
mov
mov
or
dec
cmpb
shll
add
lods
add
mov
push
je
pop
xchg
aad
mov
mov
push
call
arpl
inc
cmp
fistpll
mov
xor
cmp
and
and
into
stos
pop
sbb
add
pop
gs
rorl
push
aas
out
into
add
mov
or
jns
pop
pop
add
daa
push
xchg
mov
push
or
mov
icebp
arpl
adc
js
out
es
ffree
cwtl
pushfw
jmp
mov
lahf
add
sarl
or
clc
rorl
loopne
mov
ljmp
in
add
rclb
pop
repz
popf
push
push
lods
add
ret
xlat
mov
repz
rorl
sahf
in
into
out
push
mov
mov
shll
mov
mov
mov
std
xchg
cmp
pop
xchg
dec
lret
mov
fldl
adc
stc
add
call
lret
sbb
mov
sub
mov
lods
add
ret
filds
mov
xor
xchg
pop
mov
aad
popf
push
mov
or
jmp
mov
rol
add
inc
sbb
or
jbe
and
add
sbb
sub
pop
xor
xchg
xor
sbb
icebp
mov
testb
xchg
pop
popf
cmpb
shrb
mov
gs
add
and
or
fidivrs
sub
xor
jp
add
mov
xchg
pop
test
add
jle
sub
js
scas
shl
inc
cmp
mov
sbb
je
cli
jmp
daa
lods
sub
gs
cli
cmpsl
xchg
sbb
fists
pop
aad
inc
sub
push
arpl
sbbb
add
add
lds
mov
adc
add
bound
pop
or
andl
add
dec
add
lods
ljmp
shrl
stc
push
or
inc
mov
or
fmul
add
or
add
ret
fidivs
fsubrl
add
inc
sub
xchg
ljmp
mov
fwait
out
pusha
std
xchg
mov
jnp
mov
divb
add
dec
cmp
mov
inc
test
jecxz
push
pop
add
mov
adc
add
push
mov
rorb
aas
add
cmp
add
outsb
adc
loopne
jg
fiaddl
xor
add
out
mov
adc
add
leave
mov
icebp
std
dec
fadds
add
test
addl
add
mov
add
cmc
jae
and
sets
movsl
arpl
xchg
xchg
cmp
add
and
sub
adc
stos
mov
xchg
addb
cmp
fstps
out
inc
sub
out
cmp
add
jnp
lods
add
jnp
mov
mov
outsb
fiaddl
sbb
adc
push
xchg
jnp
out
or
rcr
mov
cld
jno
in
popl
movsl
xor
sub
add
mov
stc
or
insl
add
imul
jo
jo
outsb
add
loopne
inc
lea
mov
jne
sti
addb
xor
add
xor
adc
insb
sub
mov
data16
jno
faddl
jo
out
add
rcl
sbb
push
add
add
in
add
and
enter
inc
add
les
sbb
mov
mov
aad
push
lds
sub
pusha
sbb
fistpl
lods
cmp
xlat
daa
fwait
push
sbb
call
pop
out
mov
jo
inc
pop
pop
cmp
rolb
nop
add
sbb
cwtl
insl
cmp
mov
leave
jle
insl
mov
sbb
sbb
push
push
add
add
push
jmp
dec
sub
sahf
add
enter
mov
mov
lret
dec
sub
movsb
xchg
rclb
inc
add
call
iret
or
cld
jmp
in
out
add
push
nop
push
lea
pop
add
add
push
cmp
sub
outsl
mov
cmpb
lods
jbe
add
pop
sub
iret
jl
shrl
das
jle
popf
mov
adc
clc
pop
dec
push
xchg
test
sub
mov
mov
and
test
repnz
mov
adc
xor
add
xchg
jno
ret
xor
add
insb
cmp
jb
popf
mov
and
xor
push
jno
out
in
das
mov
cmpsb
dec
stos
xor
jns
jae
add
out
je
movsb
push
sbb
insl
jno
dec
ret
mov
orb
add
sbb
mov
pop
lret
xor
aam
insb
mov
or
leave
pop
fisttpl
out
test
popf
lret
loop
pop
ficoms
or
in
stos
insl
loopne
imul
mov
or
lcall
add
rcrb
aas
dec
add
es
sbb
add
push
popf
lcall
cmp
pop
js
pop
mov
insl
cltd
add
shrb
push
add
push
je
sbb
mov
sub
bound
pop
mov
scas
add
test
push
xor
fcmovu
add
cmp
sub
mov
add
pop
insl
pop
xor
in
mov
sbb
add
jae
mov
and
jae
or
add
xor
stc
sub
cltd
sub
cmpsb
insb
add
xor
jle
add
inc
mov
mov
add
adc
sub
leave
add
popa
lods
repz
loopne
dec
xor
hlt
pop
stc
adc
arpl
inc
test
test
fists
std
rep
fs
inc
add
sbb
lcall
test
cmpsb
xchg
add
push
sbb
je
mov
sub
jbe
jmp
and
ror
cmpsb
push
repz
ror
movsb
add
or
sub
inc
rcrb
dec
mov
mov
add
js
fs
pusha
dec
in
add
pop
mov
jo
add
insl
insl
xchg
aam
and
lea
sub
jecxz
add
or
rorl
ds
lahf
aad
pop
xchg
lahf
cli
xor
dec
icebp
mov
inc
inc
or
loop
add
add
mov
shlb
js
loop
xchg
xor
dec
add
add
dec
jbe
dec
inc
dec
push
push
aam
mov
scas
in
push
or
and
shl
arpl
sub
mov
xchg
and
add
xchg
test
out
jge
add
testl
fmull
mov
subps
fiadds
adc
dec
lods
fs
push
out
add
dec
add
lret
into
fdivrp
jp
int3
mov
mov
rol
mov
ficoms
xlat
jnp
jb
dec
movsb
nop
cmc
push
outsb
fucomp
popa
jb
stc
mov
out
test
icebp
mov
mov
cltd
mov
push
mov
jg
lret
xchg
add
sub
inc
jp
cltd
add
push
loop
pop
adc
cli
mov
fildl
mov
add
fstl
or
outsl
add
add
inc
push
add
inc
dec
sbb
pop
jge
mov
jnp
push
faddl
pop
add
ja
jge
ret
scas
cs
sub
and
push
xchg
jl
add
add
inc
add
shl
movsb
dec
pop
push
movl
imul
and
movsl
xchg
imulb
sbb
pop
outsb
xchg
xchg
add
sarl
fcmove
jle
dec
add
and
xchg
mov
cltd
add
arpl
push
xor
mov
push
mov
push
sahf
xchg
mov
fs
sub
mov
sahf
xor
lahf
push
xor
add
addl
js
adc
mov
mov
fistl
movsl
std
push
sbb
or
add
je
outsb
inc
sbb
fsubrp
add
sbb
add
jg
aad
xor
add
mov
push
add
add
add
dec
int3
dec
subl
or
dec
xchg
jns
pop
sub
in
inc
fstp
shr
aam
and
add
adc
add
pop
add
out
lret
leave
dec
sbb
jl
out
xor
fstps
push
call
mov
outsb
xor
in
xor
dec
add
sbb
add
add
repnz
add
out
std
pusha
or
xlat
rcrb
fists
stc
lods
add
xor
cmpb
fldl
icebp
mov
add
bound
imul
push
std
fnstcw
pop
mov
dec
or
leave
fcompl
dec
push
pusha
add
rcl
fdivrs
or
push
add
in
sub
push
add
mov
mov
scas
stos
inc
das
push
popf
dec
push
sbb
cld
jp
xchg
pop
push
xchg
das
lahf
add
test
incb
add
cltd
mov
sub
pop
lock
mov
xchg
cld
mov
shl
inc
lret
xor
sub
pop
add
loope
xor
push
cmp
sahf
xchg
pop
cli
add
add
ret
cli
sub
adc
add
mov
adc
add
adc
popl
js
pop
push
loop
fists
inc
lds
out
mov
cmp
mov
pusha
xchg
pop
leave
in
pop
pushf
outsl
inc
movsl
mov
jae
push
add
call
mov
add
inc
sub
icebp
dec
bound
inc
inc
and
jns
and
ljmp
test
cltd
push
icebp
xor
and
pop
hlt
add
adc
adc
pop
aaa
imul
mov
clc
or
inc
xor
xchg
push
adc
pop
test
add
adc
add
mov
lea
and
add
mov
jecxz
sbb
imul
int
sub
pop
outsl
xor
add
aas
outsb
mov
pop
push
dec
mov
int
ret
test
xor
pop
jne
hlt
add
mov
dec
insb
push
es
jbe
fisubl
sbb
mov
test
pop
add
loope
incb
add
movsl
idivl
in
dec
add
mov
and
or
loop
mov
sbb
scas
jmp
adc
out
aad
jne
je
jge
jmp
push
mov
shll
add
movsl
ds
sub
es
clc
sbb
add
sti
movsb
push
arpl
arpl
sti
filds
aas
test
or
jl
scas
and
arpl
xchg
xchg
mov
cwtl
das
mov
adc
and
adc
jno
pop
add
adc
sbb
xchg
cmpsl
mov
cltd
xor
fbld
push
add
fldl2e
movsb
add
ss
pop
dec
int3
xor
test
mov
sub
xchg
push
or
mov
inc
sahf
add
mov
addr16
movsb
and
clc
mov
pop
adc
fsubr
inc
fists
xchg
sti
cmp
cmp
xchg
sub
fldcw
add
rcrl
mov
add
push
mov
pop
aam
insb
mul
out
fsubr
ds
xchg
out
popa
mov
jge
pop
in
rcll
xor
push
jae
out
pop
push
xchg
mov
outsl
pop
mov
cmp
or
fst
sbb
cmpsb
or
inc
mov
les
mov
lds
ljmp
xchg
pop
xchg
dec
add
xor
add
jecxz
add
stc
roll
xchg
lahf
nop
aam
dec
inc
lret
jns
stos
jns
loop
imul
push
adc
fadds
test
in
add
sub
bound
jae
test
cmpb
shrb
scas
inc
jnp
mov
pop
addr16
add
stos
lods
dec
pushw
insb
add
sub
arpl
frstor
lret
sub
push
sub
sbb
fiadds
xchg
int
icebp
mov
push
fwait
xchg
inc
adc
daa
adc
jle
int3
ljmp
push
add
adc
pop
aaa
inc
xchg
add
arpl
jns
imul
sub
or
cmp
outsl
add
sub
jne
sbb
mov
adc
dec
pop
lret
ja
pop
jae
lods
gs
adc
es
test
sub
and
jmp
sti
push
jno
or
adc
cmp
andb
int
sub
fwait
sub
adc
mov
pusha
cld
and
popw
pop
and
outsl
jg
add
cmp
sub
fisubrl
adcl
inc
movsl
cmpsl
rol
lods
subps
add
jge
add
stos
inc
pop
xor
adc
pusha
add
sub
add
mov
push
add
arpl
or
jns
insl
das
sub
or
jb
jge
xor
iret
mov
sbbl
add
jne
inc
in
hlt
xor
push
xchg
dec
lods
xchg
jge
and
xchg
mov
iret
and
push
fsubrl
in
and
or
pop
pop
and
and
add
stc
or
mov
pop
add
pop
cmc
add
pop
xchg
ja
fbstp
or
popa
jle
lahf
xchg
je
jns
movsl
adc
sub
push
and
add
fs
add
mov
aaa
and
sub
jbe
pop
pop
pop
or
lahf
incl
gs
mov
jb
shll
add
push
enter
aaa
add
adc
inc
xor
add
mov
pop
push
imul
stc
fistl
mov
lds
add
sahf
arpl
jle
push
ja
daa
popf
add
data16
mov
pop
mov
mov
data16
inc
addl
shll
fildl
insl
push
nop
std
jmp
add
add
ljmp
pop
incl
push
cmp
xchg
add
mov
mov
dec
sbb
cmp
mov
incl
sbb
sbb
push
xor
or
shll
clc
pushf
mov
inc
cmp
fbld
jge
mov
cld
outsl
out
into
xor
loopne
pop
movsb
out
or
pop
mov
mov
sbb
add
jae
inc
jne
pop
mov
shrl
sbb
mov
mov
aam
push
sarb
add
adc
pop
add
push
fistpl
mov
dec
mov
repz
add
jg
scas
mov
inc
lcall
imul
aad
iret
outsl
ret
dec
pop
add
add
adc
pushf
arpl
lret
push
rorl
push
sbb
call
xchg
sbb
into
repnz
mov
add
push
mov
pop
jbe
mov
inc
mov
xor
pop
add
xchg
jb
xor
ljmp
out
fwait
sub
enter
mov
setle
dec
adc
dec
loopne
sahf
pop
jnp
mov
shlb
icebp
xchg
fsubrl
mov
iret
mov
pop
add
popf
jns
cmp
movsb
push
add
cmp
nop
int3
in
out
repnz
aad
add
pop
add
sbb
mov
add
loop
jae
cli
mov
leave
clc
push
or
mov
inc
das
lea
pop
stc
loopne
pop
inc
iret
pop
cmc
ret
add
enter
out
dec
add
inc
sbb
in
daa
cmp
iret
and
cmpsb
fucompp
lahf
in
and
add
rorl
mov
xchg
lods
bound
rcl
mov
push
add
jle
scas
insb
enter
out
fsubl
js
xchg
enter
repnz
out
add
mov
mov
repz
add
testl
jae
daa
and
cmp
hlt
and
sub
mov
pop
xchg
mov
push
cli
adc
add
test
or
test
dec
push
mov
mov
jne,pt
adc
lret
cmc
int3
push
and
mov
arpl
push
push
imul
push
test
rclb
xchg
mov
jg
aas
cwtl
lret
jp
add
mov
push
data16
fidivs
jmp
insb
add
adc
dec
mov
out
add
xchg
in
jns
sub
push
pop
mov
pop
rorb
mov
sbb
push
dec
sub
fcomps
or
out
pop
mov
push
outsb
add
push
movsl
pop
push
fcmovbe
xchg
pusha
sbb
nop
and
ljmp
add
mov
mov
adc
jno
lock
pop
fwait
dec
jmp
cmp
cs
and
test
icebp
lods
fs
shll
jl
repz
repnz
sbb
mov
mov
pop
push
sub
push
aas
fwait
sub
lahf
in
sub
daa
in
push
aam
mov
add
xchg
dec
sub
test
add
je
insl
das
inc
cmc
and
pusha
cwtl
sbb
add
movsb
enter
jecxz
data16
leave
pushf
in
popf
insl
jb
push
test
es
add
popf
pop
and
jne
nop
xchg
mov
mov
aad
pop
add
pop
mov
jnp
loop
and
mov
add
aam
insb
sub
or
mov
int3
fmull
imul
ja
je
loop
pop
inc
mov
add
lret
out
jmp
add
cltd
adc
out
push
add
out
push
adc
push
xor
sub
cmp
test
negb
lods
imul
mov
and
add
or
adc
cltd
movb
jp
lcall
xlat
arpl
push
adc
sbb
jne
or
xchg
or
incl
stc
fs
std
xchg
ljmp
add
or
popa
test
jmp
adc
xor
add
pop
loopne
pop
mov
movsb
hlt
sbb
and
add
xchg
je
add
bound
movsb
inc
push
daa
mov
add
cmpsb
add
xchg
mov
nop
fcoms
call
add
mov
arpl
fdivrl
cmp
and
es
adc
ret
outsl
add
xchg
push
or
lcall
sub
xchg
add
hlt
push
sub
insl
push
add
adc
ret
push
fsts
sbb
scas
int3
js
add
add
repnz
inc
xchg
add
mov
loop
fiaddl
pop
sbbl
imul
inc
lds
cmp
sub
rolb
fisubrl
mov
add
outsl
add
in
out
rcll
xor
jp
jb
mov
lods
int3
icebp
xchg
add
jbe
mov
add
sub
sub
push
sti
imul
add
inc
inc
inc
mov
sub
das
icebp
ja
test
mov
or
push
add
ss
mov
lret
dec
dec
mov
xchg
jns
insb
loopne
ja
sbb
xorl
adc
pop
add
jno
pop
add
add
cmp
jbe
out
pop
jg
ret
sbb
xchg
int
arpl
int3
pop
mov
sbb
push
shr
push
and
hlt
or
fldl
mov
jns
stos
add
xchg
dec
lret
jp
add
shrb
push
testl
enter
and
push
inc
pcmpeqw
jle
push
or
dec
scas
test
mov
add
enter
enter
add
dec
add
sub
and
into
pop
repnz
sbb
inc
dec
test
add
push
xchg
fcom
lret
out
lock
cld
inc
mov
adc
jb
mov
js
xchg
add
dec
stos
add
in
aas
rolb
dec
push
scas
add
mov
aad
divl
pushf
add
xorb
sahf
in
inc
shl
xor
xor
add
inc
jne
stc
movsl
cmpsl
mov
invd
lods
inc
pop
pop
clc
jo
std
push
add
test
push
jo
mov
jbe
or
stc
dec
adc
and
stc
addr16
add
inc
jl
add
insb
pushf
add
scas
mov
clc
ja
int
imul
out
xchg
nop
int
bound
sbb
pop
movsl
in
enter
push
sub
xchg
repz
mov
mov
xchg
leave
ljmp
inc
out
int
into
cmc
jbe
scas
add
push
movb
add
add
mov
cltd
hlt
mov
jg
leave
aam
xchg
mov
rorl
add
adc
test
bound
stc
mov
mov
mov
add
and
add
popl
inc
repz
scas
add
hlt
scas
jecxz
testl
dec
add
scas
jmp
dec
and
sti
sub
cmp
ds
add
push
ja
and
jecxz
cmpb
pop
inc
and
add
sub
imul
pop
xorl
outsl
insl
icebp
xchg
and
mov
push
ds
push
scas
pop
cmp
xor
mull
out
loopne
cmp
jb
xor
add
jb
adc
into
add
movsb
inc
mov
jne
pushf
cltd
add
sbb
xchg
xor
pop
xor
sub
scas
add
fwait
dec
xor
icebp
dec
cmc
push
cmp
in
push
push
popf
add
arpl
lock
or
pop
add
push
roll
imul
iret
add
filds
rolb
aaa
xchg
in
adc
push
into
add
push
rolb
push
jne
rorl
sbb
ficoms
ficomps
lods
dec
arpl
pop
pop
dec
sarl
cmp
mov
dec
add
sbbl
add
add
daa
cmp
imul
ror
xor
mov
ljmp
stos
pop
test
xchg
sub
mov
int
push
sub
aad
and
sarb
addr16
jb
xchg
sub
cwtl
dec
add
pop
dec
push
call
add
jae
mov
aad
add
mov
test
clc
fnstcw
arpl
mov
push
sub
or
pop
fdivp
ficoml
in
jge
push
das
mov
hlt
or
pushf
or
or
mov
data16
pop
mov
add
add
add
inc
mov
lea
xor
scas
iret
dec
in
mov
sub
mov
mov
outsb
fadd
cmp
insb
shrb
aaa
add
in
inc
sub
jecxz
stc
cmp
lea
cmp
xlat
addb
repz
test
jmp
push
mov
fistl
es
scas
jmp
pop
mov
add
rorb
dec
hlt
mov
popa
mov
add
lea
faddl
pop
ljmp
pop
add
jecxz
push
ss
repz
movsl
xchg
inc
arpl
repz
cwtl
leave
addb
push
adc
push
sub
sub
sbb
xor
daa
cmp
add
mov
outsl
call
add
mov
mov
add
in
insl
inc
xor
sbb
fxam
or
inc
shr
enter
push
je
fidivrl
sbb
dec
fucom
mov
push
aas
push
add
adc
movb
and
cwtl
lahf
inc
or
cs
push
stos
or
imulb
add
lahf
pop
test
movsb
or
jbe
xchg
xlat
dec
mov
push
push
push
sub
cltd
hlt
add
test
icebp
cltd
in
lret
or
adcl
xor
lods
iret
dec
add
ret
aas
outsb
jno
call
xchg
xchg
sub
rorb
mov
cmp
es
adc
jge
push
prefetchnta
test
rorl
push
out
outsb
add
mov
fidivs
mov
xchg
xor
sbb
arpl
enter
ret
inc
out
lods
add
adc
and
xchg
pop
aam
faddl
dec
adc
aas
xor
repz
iret
add
lods
jbe
cmp
out
add
mov
arpl
mov
mov
push
sbb
int
push
jecxz
jnp
fildl
decb
pop
and
sbb
xchg
dec
add
sti
jge
jge
in
pop
imul
add
xchg
lock
fucomp
lock
mov
add
lock
mov
out
jae
jbe
in
add
add
lcall
xor
loop
add
lahf
push
stos
aad
pop
sub
add
and
sbb
mov
or
sbb
inc
aad
add
add
aad
add
test
test
add
sub
dec
xchg
gs
lcall
adc
mov
loope
in
loope
int
adc
push
stc
addr16
fxch
in
push
lahf
mov
sti
fwait
mov
pop
add
aaa
xchg
sub
inc
jno
incb
rorl
pop
stos
add
cwtl
push
adc
iret
dec
ja
sub
xchg
sub
xchg
or
int
mov
test
aad
push
cmpsl
adc
add
xor
test
cmp
fwait
out
xlat
clc
test
stos
out
pop
rcl
sbb
mov
mov
call
test
jo
add
popa
aas
add
xor
mov
add
fdivr
add
jns
push
mov
add
push
add
and
push
ja
and
mov
xchg
push
or
insb
or
add
imul
add
pusha
and
ret
inc
xor
push
add
mov
lret
add
dec
loope
testb
jae
add
ret
add
outsb
add
lds
call
fisttpl
addb
int3
pop
scas
hlt
pop
push
add
loop
mov
add
add
cltd
mov
sbb
or
pop
add
fimuls
fs
js
mov
lds
mulb
movsb
and
and
lods
fiaddl
pop
xchg
xorb
adc
in
add
dec
inc
inc
lds
pop
jp
pop
pop
in
inc
repnz
fldt
sti
pop
add
and
push
add
ret
imul
std
cmpsb
jae
incb
push
sbb
xchg
mov
pop
das
imul
movsl
or
mov
adc
mov
les
iret
add
dec
cltd
test
repnz
add
sbb
jmp
add
lods
cmp
mov
adc
push
inc
jae
divl
sub
mov
add
add
mov
cwtl
push
sbb
adc
into
in
xor
inc
add
daa
divl
or
sub
or
repz
loopne
dec
and
aad
mov
push
hlt
sub
sub
push
cld
add
das
mov
cmp
fbld
cli
add
push
cmp
push
sub
push
sub
gs
shrl
cld
inc
cmpsb
push
rcll
xchg
mov
fiadds
hlt
dec
out
rol
push
insb
out
mov
movsl
scas
add
in
lock
pop
ret
sahf
ljmp
shlb
inc
mov
xchg
mov
ret
sbb
push
add
mov
add
out
fldl
dec
test
add
ret
daa
fs
shll
add
in
adc
sbb
mov
add
push
cltd
popf
inc
test
aad
sbbl
loopne
or
mov
mov
dec
test
dec
push
mov
pop
cmp
test
inc
add
add
inc
add
cmp
push
dec
arpl
pop
lea
aam
inc
std
xchg
pop
cmp
cltd
lahf
add
adc
and
out
mov
cli
cmp
add
mov
ss
sub
add
lods
push
mov
dec
fcoms
jmp
stos
xchg
xchg
cltd
push
aaa
xorb
dec
movsb
add
addr16
pop
ljmp
insb
addb
pop
add
pop
insl
sub
mov
or
or
inc
out
add
das
pop
mov
test
leave
and
lahf
shlw
add
cmp
mov
sbb
les
sbb
jle,pt
jl
in
pusha
inc
cwtl
add
and
jmp
sbb
rcll
or
ss
shl
add
fcompl
into
add
inc
add
add
pop
leave
push
inc
fiadds
test
add
jb
lret
sub
popa
add
add
orb
push
pop
add
add
cmc
push
adc
add
pop
mov
or
movsb
push
add
sbb
pop
xchg
dec
adc
fildll
push
inc
aam
test
fdiv
int
shll
lods
push
fsubrl
pop
outsb
dec
mov
add
movl
mov
add
test
jl
cwtl
inc
xor
stc
add
jb
push
mov
jb
add
into
dec
cmpsl
mov
jecxz
adc
and
sbb
mov
add
gs
xor
push
fs
sahf
pop
loop
adc
insb
and
add
dec
add
test
jcxz
xor
sti
xchg
pop
add
or
lahf
push
adc
stos
sub
add
or
daa
scas
aam
xchg
shll
or
subl
mov
stos
push
cmc
in
sbb
pop
fs
dec
and
sbb
lock
dec
daa
add
jbe
imul
ss
xor
movsb
hlt
inc
add
sbb
add
fiadds
out
adc
cmp
add
cmpsl
adc
inc
test
pusha
jae
lcall
add
out
add
or
push
lock
loopne
jno
fistps
insb
in
sarl
add
pop
add
and
inc
lahf
pushf
cmpsb
out
dec
add
fdiv
cmp
roll
lock
imul
add
add
push
sti
fwait
mov
jle
icebp
mov
daa
sldt
mov
popa
int
dec
pop
mov
add
stos
stos
add
mov
dec
mov
arpl
ljmp
xchg
inc
sbb
loop
jecxz
xchg
fldl
mov
add
or
and
dec
lea
imul
addr16
inc
scas
jne
leave
add
jo
cli
loop
jp
and
pop
inc
add
push
fs
lea
test
xor
mov
add
rcll
push
mov
in
push
sbbb
push
cmpsb
std
rclb
add
push
sub
cld
inc
test
jo
sbb
inc
sub
int3
loop
test
sarl
cmp
pop
outsl
lret
add
adc
pop
sub
add
mov
cmp
lret
and
mov
cmp
outsb
fwait
jp
mov
cmc
repnz
add
add
add
gs
sbb
adc
lahf
push
loop
jecxz
sub
add
xchg
ja
stos
stos
add
testb
popf
xchg
mov
add
inc
ss
adc
xchg
sbb
cltd
rcl
jge
hlt
sar
mov
xchg
in
add
adc
ljmp
adc
ja
leave
dec
add
mov
repnz
repz
mov
fisttpll
push
aam
xchg
shlb
rorl
sub
xor
push
xor
dec
xchg
lret
fstl
inc
add
leave
sarb
dec
add
add
stos
shll
jmp
mov
test
daa
fistl
sub
out
sub
addr16
rorl
lods
popa
cmp
sub
mov
jb
add
sub
jg
out
sub
sbb
jle
jae
or
clc
cmp
dec
mov
xor
lahf
sub
sbbl
add
add
xor
loope
or
mov
add
addb
jecxz
mov
out
push
fwait
ret
inc
add
mov
or
aas
push
cli
push
lock
ret
xchg
mov
fsubr
xchg
filds
add
test
ds
add
stc
shrl
push
jg
mov
mov
mov
je
movsl
xchg
xor
and
mov
cli
jge
adc
add
mov
roll
adc
dec
mov
add
mov
mov
xor
test
out
sub
pop
ds
lods
push
sbb
add
ss
cmp
push
inc
push
adc
test
add
adc
xor
inc
pop
add
addr16
xor
adc
popf
fistps
ret
testl
movb
inc
test
scas
and
sub
test
ja
idivb
adcb
jp
add
push
add
pop
push
push
decl
jbe
repnz
pusha
aad
mov
aam
shll
pop
mov
mov
insl
push
cltd
add
push
add
inc
sbb
mov
xor
ss
inc
outsb
jp
mov
jp
bound
cs
aam
stos
enter
mov
sub
inc
xor
daa
mov
mov
leave
add
mov
cmc
push
add
inc
mov
adc
add
popf
mov
adc
or
lret
int
cmp
popa
mov
push
mov
clc
es
js
ss
add
add
add
mov
mov
das
xor
stc
das
dec
imul
fimull
or
movsb
les
sub
adc
sub
or
jbe
mov
iret
out
jle
test
pop
and
rolb
jae
faddl
ss
adc
gs
ret
loop
mov
flds
cwtl
lea
sbb
jecxz
add
jno
adc
dec
add
stos
or
add
sarb
add
out
xchg
scas
pop
pushf
pop
xlat
out
and
sbb
mov
lods
aam
xor
ds
push
sub
cltd
mov
testl
outsl
repz
add
add
add
and
jl
ret
in
inc
sub
xchg
into
sbb
aaa
cltd
adc
pop
repnz
and
add
js
xchg
mov
rolb
jae
jl
add
mov
add
xchg
mov
andb
pop
jle
push
add
push
pop
add
nop
aad
sbb
add
xor
add
inc
fldl
out
add
adc
ror
push
cmc
jb
fwait
add
mov
add
les
add
insb
add
mov
aam
and
ss
jl
cli
dec
jbe
add
inc
jle
fistpll
out
mov
iret
mov
cld
push
adc
push
out
mov
xlat
xor
scas
jns
add
arpl
movsb
roll
arpl
mov
lret
xor
sub
imul
mov
fwait
adc
cmpsl
ret
jnp
les
ja
cld
mov
sub
lret
add
cmpsl
add
pop
ja
mov
cmp
xchg
or
add
nop
test
xor
cmp
add
enter
pop
pop
sub
xchg
add
js
lcall
or
icebp
xor
add
dec
stc
jl
add
pop
outsl
icebp
sub
add
dec
in
sbb
dec
add
scas
cmp
mov
fistl
pusha
bound
add
and
xchg
add
mov
add
scas
cltd
loope
mov
sti
in
xor
cmp
xor
add
test
add
jb
loop
pop
test
adc
add
int
dec
xor
add
adc
in
aaa
inc
lds
in
add
jae
es
inc
cmp
mov
mov
add
aas
pop
inc
add
divl
popa
sbb
sbb
push
add
jle
sub
je
pop
data16
add
add
xchg
and
je
mov
mov
dec
add
inc
xor
inc
inc
clc
addr16
add
mov
add
sbb
adc
mov
lahf
add
xchg
dec
insb
std
leave
xchg
push
out
out
js
add
add
xchg
mov
cmpsl
mov
inc
add
or
dec
and
mov
int
aad
jle
and
xor
add
loop
mov
lds
and
add
int
fmulp
sbb
rcll
mov
mov
inc
js
sbb
stos
mov
scas
push
popl
inc
fsub
add
movsb
sarb
push
push
inc
jle
and
ds
pusha
lods
xor
add
out
cltd
addr16
out
xchg
lret
add
and
add
or
pop
dec
inc
adc
add
sahf
add
lret
inc
add
gs
jg
das
add
cmp
mulb
add
xlat
out
mov
mov
adc
cmp
xor
ret
add
ss
mov
inc
mov
out
test
fimull
add
xor
pop
cli
jg
out
rolb
nop
flds
fldenv
push
add
jle
sbb
in
mov
dec
add
popf
mov
mov
daa
push
jb
sbb
adc
or
dec
call
shrb
add
adc
sarl
ja
out
jmp
add
dec
imul
mull
sub
mov
int
cmp
fisubs
roll
add
negl
add
testl
mov
mov
sbb
insb
stc
add
cmpsb
dec
mov
add
stc
xchg
jmp
mov
sub
mov
mov
pop
popa
imul
add
shlb
pop
sub
xchg
add
adc
movsb
rorb
ja
movsl
xchg
in
adc
sbb
mov
add
lcall
ret
lods
add
xchg
mov
pop
int3
cmc
ltr
cmc
mov
xchg
jnp
add
leave
push
add
xor
mov
add
push
push
mov
ret
ret
aaa
add
add
fldt
or
imul
pusha
out
mov
mov
movsb
aas
push
mov
mov
xchg
pop
xlat
insb
dec
adc
mov
xor
insl
or
mov
or
jmp
lock
outsl
pop
loope
ds
adc
je
cwtl
clc
lcall
sbb
cmpsb
lods
and
pop
in
push
fwait
aam
cmp
push
pushf
pop
adc
ljmp
jnp
jb
rolb
mov
cld
es
jo
std
daa
lcall
or
or
lcall
mov
cli
hlt
xchg
fisubrs
pop
add
and
xchg
push
scas
aam
cmpsl
cmpsl
shr
mov
std
hlt
ror
icebp
sbb
and
aad
add
lret
test
cs
add
in
or
adc
add
pop
mov
outsl
pop
out
cmp
test
adc
add
aaa
insl
sbb
push
adc
scas
sahf
push
adc
movsb
mov
mov
ljmp
jns
leave
jle
daa
add
nop
push
sub
mov
sbb
add
pop
cmp
lcall
stos
scas
das
out
nop
stc
add
jbe
add
mov
jle
pop
std
jne
lock
cmpsl
add
inc
js
fidivrl
shlb
or
stos
pop
in
mov
out
out
shrl
iret
popa
lea
cmp
sti
cli
and
push
scas
cld
js
and
add
and
mov
fs
xchg
mov
push
add
push
pop
add
cs
cmp
mov
pop
mov
in
sbb
xor
add
mov
adc
lcall
ret
and
jo
mov
xor
ficompl
insl
ja
fs
lahf
mov
aad
cwtl
or
adc
sbb
adc
jne
std
xor
jle
into
inc
add
push
incb
mov
add
mov
xchg
mov
ja
pop
add
mov
xchg
js
mov
sbb
arpl
lret
inc
dec
shll
add
add
and
xlat
pusha
sub
xor
add
loop
add
cs
lret
cld
xor
add
add
ret
filds
and
lds
dec
xlat
add
jbe
stos
outsb
add
pop
push
popa
pop
addl
xor
mov
adc
dec
call
add
fsubr
push
pop
cli
add
add
jle
push
sub
adc
mov
inc
pop
ljmp
push
sti
mov
aas
add
fbld
test
jge
outsb
loop
andl
das
sub
cs
push
and
mov
add
xchg
add
lcall
or
fiaddl
push
cmp
fwait
pop
rcrl
sbb
pop
lea
mov
add
hlt
dec
sub
mov
add
jno
shl
add
inc
inc
pop
dec
in
mov
mov
xor
jb
aaa
add
sbb
inc
ja
fisubl
push
dec
loope
decl
cmp
inc
cs
cmc
mov
add
in
out
add
add
cld
dec
movsl
add
dec
or
dec
ds
and
add
push
testb
pop
pop
push
pop
inc
add
imul
add
cmpsb
jmp
jmp
ret
test
mov
inc
adc
cmp
cmp
mov
push
jge
imul
mov
sbb
jle
movb
lahf
xlat
loop
das
iret
cmp
push
or
add
pop
sbb
gs
jo
add
mov
cmpsb
add
xchg
in
lds
dec
add
add
pusha
mov
pop
push
adc
mov
mov
mov
xchg
fnstsw
xchg
pop
add
lcall
fs
daa
push
add
or
jb
and
rorl
test
test
aam
push
dec
adc
sub
add
popf
mov
bound
xchg
mov
or
and
adc
pop
gs
pop
jnp
and
jb
icebp
inc
out
loope
fnstenv
add
or
mov
adc
pop
push
movsl
or
std
jae
sbbl
inc
xchg
ror
int
mov
insb
insl
jns
test
aam
mov
lea
loopne
icebp
lea
test
mov
and
pop
push
pop
adc
sub
mov
out
adc
inc
nop
push
add
dec
cmp
addr16
add
or
xchg
jl
sbb
inc
mov
pusha
scas
mov
lods
lds
mov
xor
es
xchg
cmp
cmp
enter
out
add
popf
add
add
frstor
out
es
pop
pop
mov
les
fnstsw
pop
or
cltd
addb
scas
enter
subb
add
add
je
or
lods
arpl
cld
xchg
lock
lock
and
fmuls
add
addl
inc
mov
jnp
cmp
mov
cmp
cs
xor
shlb
dec
add
aas
jbe
jne
call
lea
cld
pop
cmp
mov
add
hlt
jns
cmc
pop
cs
add
adc
xlat
fistps
sub
and
dec
idivl
xchg
ss
push
add
mov
xor
popa
add
add
lahf
addr16
mov
mov
or
stc
leave
mov
dec
add
ret
xor
ficompl
xor
in
mov
fisttpll
jne
fbstp
cs
xchg
cmp
add
adc
xor
popa
jmp
out
negl
mov
cmpsb
pop
add
pop
addl
subb
addl
pop
inc
add
loope
cmp
fmuls
sub
adc
test
pusha
fwait
push
inc
mov
sbb
push
inc
test
pop
sahf
add
add
std
mov
inc
add
xchg
int3
jns
push
add
mov
inc
cmp
xchg
jb
outsl
mov
ret
aaa
cld
clc
jb
fiadds
xchg
add
xchg
ds
or
outsb
movsl
je
cli
rolb
cmovne
lods
not
daa
pop
scas
add
inc
jnp
pop
or
push
jbe
cmp
ljmp
xor
xor
jne
push
add
adc
inc
in
shll
add
incb
and
mov
xchg
pop
mov
sahf
add
aam
add
fistl
cli
sbb
push
mov
push
ret
cmpsl
mov
inc
out
fistps
fidivl
mov
pop
test
out
sub
repz
adc
loop
jbe
addr16
ja
mov
adc
and
add
add
lret
jmp
or
add
jl
mov
xor
loope
push
push
pop
jle
adc
into
jecxz
xor
dec
xchg
dec
add
imul
push
push
and
add
add
sbb
and
outsl
fldcw
rolb
inc
sbb
int
jmp
add
add
jnp
mov
xor
fists
fisttpl
pop
add
addr16
xchg
and
lcall
cltd
sub
dec
fstpl
inc
mov
add
loop
and
adc
in
nop
dec
fistpll
or
add
lods
loopne
xor
push
mov
mov
add
std
jbe
lcall
scas
add
add
popf
aad
gs
xor
and
cld
and
xchg
mov
adc
and
out
das
dec
rclb
icebp
cmp
jno
stc
jle
cld
addl
dec
push
sbb
pop
or
pusha
and
xchg
jns
adc
loope
outsb
add
sub
dec
adc
jle
mov
inc
mov
call
mov
sti
or
jle
adc
xorb
cld
shl
dec
in
lock
add
push
das
ret
sbb
fnstcw
xchg
fmul
add
add
xor
add
push
and
or
outsb
pushf
int
mov
sub
push
or
add
add
push
mov
add
jp
mov
int
cmp
adc
pop
push
dec
dec
loopne
into
sbb
push
mov
mov
aaa
add
jge
movsb
iret
jno
push
add
mul
jns
or
jne
push
and
add
int3
imul
outsl
add
sahf
cli
adc
insl
out
or
dec
std
popl
xor
inc
in
fwait
xchg
fcomps
orl
add
bound
dec
sub
add
push
test
jp
pop
push
sbb
std
inc
cmc
mov
enter
gs
nop
das
sbb
mov
fcmovb
xchg
add
add
pushf
cmpsb
in
jp
add
add
add
fisubl
and
loop
sub
add
mov
mov
jo
pop
mov
pop
xchg
arpl
mov
mov
enter
pop
add
jb
or
sbb
scas
les
pop
sbb
lds
sbb
stc
mov
loopne
pop
push
cmp
sbbl
add
stos
add
add
stos
pusha
in
dec
inc
ret
jp
andb
lea
adcl
imul
stc
outsl
xor
inc
sahf
add
clc
jb
xlat
add
jnp
pop
aaa
enter
stos
popa
xchg
add
and
es
mov
fs
subb
and
pop
pop
xchg
and
mov
mov
add
add
adc
jmp
add
cmc
lret
dec
inc
jecxz
pop
paddb
push
js
insb
lods
add
inc
add
bound
pushl
jle
mov
add
mov
cmp
cmp
add
sbb
mov
out
push
fidivs
ja
push
jno
sbb
pop
jcxz
pop
push
push
add
out
dec
sbb
pop
cltd
mov
lea
jge
test
dec
fistpll
gs
jbe
jmp
jnp
lret
aas
sbb
jns
sub
in
cld
pop
jg
les
stos
push
mov
dec
mov
shrl
orl
add
sarb
sbb
mov
aad
enter
fldenv
mov
repz
sldt
call
xchg
push
enter
cld
and
xchg
fmull
cltd
leave
add
lock
add
imul
lcall
fwait
xabort
xchg
andl
and
jp
add
repz
lock
xor
outsl
stos
inc
add
cmp
lret
mov
pushfw
dec
and
inc
loope
ficoml
mov
add
into
mov
mov
push
mov
in
xchg
add
sysret
lahf
ja
mov
and
mov
out
adc
push
cmp
dec
jle
popf
mov
pushf
test
test
movsb
add
cld
mov
negl
lock
ret
in
cmp
dec
add
sbb
add
ds
add
js
add
in
and
mov
add
adc
mov
add
cmp
imul
add
or
scas
mov
adc
stos
add
nop
push
jmp
sbb
iret
fwait
and
addr16
outsl
out
mov
gs
hlt
xor
mov
imul
cmp
sbb
add
or
inc
nop
clc
adc
push
jae
jno
or
imulb
adc
out
inc
and
iret
icebp
add
ret
dec
lods
add
filds
ss
cld
bswap
add
dec
jb
push
xor
dec
mov
dec
dec
jnp
dec
lea
repnz
jno
adc
rcll
and
add
bound
add
push
inc
jae
and
add
fsubrs
roll
fs
inc
push
fdivl
and
xchg
add
cmp
pop
inc
add
aas
lock
jbe
bound
sti
jg
mov
cmp
xchg
fsubrp
mov
and
es
sbb
jl
add
jno
jmp
mov
out
add
test
dec
add
inc
push
aas
mov
scas
xchg
add
aaa
push
xor
or
ds
call
add
xchg
adc
repz
add
insb
shll
cmc
add
ja
dec
es
mov
les
mov
adc
fimuls
fadds
leave
adc
scas
arpl
jecxz
mov
nop
out
push
cli
mov
es
cmp
outsb
push
or
js
repz
iret
push
add
pushf
and
popf
push
push
inc
xorb
test
fcmovnbe
mov
or
add
xchg
andb
or
adc
xorb
xor
add
pusha
inc
add
mov
add
stos
das
arpl
cmp
sbb
inc
aas
or
pusha
mov
movsl
into
mov
pushf
test
out
jae
insb
outsl
pop
test
vcvttsd2si
insb
push
sub
add
mov
xor
fdivrs
mov
aam
cwtl
xchg
js
adc
insl
mov
inc
psadbw
cmpb
cmp
mov
in
ret
icebp
xchg
movsb
push
jbe
pop
mov
lds
push
mov
lahf
data16
test
sahf
mov
push
lods
pop
mov
leave
adc
loop
add
insl
aam
shl
add
sub
repnz
leave
pextrw
add
cwtl
inc
or
inc
sbb
in
add
add
pop
insl
mov
jge
jb
push
movhlps
aas
repz
cltd
dec
ss
leave
andl
pop
lea
add
leave
xchg
lods
inc
add
adc
inc
loopne
add
int3
mov
sbb
jbe
mov
scas
daa
cmc
insl
add
rcrb
test
filds
or
pop
adc
add
mov
add
xchg
add
sbb
or
daa
aas
add
mov
aaa
jge
ds
push
sbb
push
pop
imul
dec
push
jmp
push
push
pop
adc
push
int3
mov
int3
int
faddl
out
aas
cwtl
add
add
pop
xor
fistpll
pop
clc
add
loope
repz
add
xlat
inc
les
cs
and
sbb
add
push
push
orb
and
sbb
add
or
dec
cmc
mov
rorl
mov
sub
mov
add
or
cwtl
in
mov
add
shl
add
aas
push
movsl
pushf
jnp
add
pop
test
adc
add
pop
lods
test
inc
mov
movsb
jge
insb
and
add
sbb
xchg
fiadds
stc
or
pop
nop
sub
mov
adc
dec
pop
and
loope
je
insl
aam
dec
verw
in
xor
xchg
arpl
fldenv
cld
hlt
out
mov
push
stos
sbb
dec
pop
push
hlt
sbb
hlt
or
xor
stc
jb
sbb
inc
add
push
in
mov
cwtl
ds
push
xchg
mov
xchg
jns
push
pop
push
dec
aas
add
add
adc
adc
jno
mov
adc
sbb
jae
jl
fcmove
add
fistps
jae
or
sub
pop
inc
insl
pop
inc
jge
fcmovb
repz
ja
jns
mov
pop
add
sbb
xchg
xorb
roll
fbld
cmp
mov
sbb
mov
xor
stos
jb
jbe
test
cmp
pop
mov
jbe
cmp
mov
fldl2t
das
add
or
sbb
shrb
das
scas
pop
add
insb
popl
inc
std
jmp
mov
pusha
dec
add
dec
je
mov
loopne
mov
xor
ds
sub
ror
or
loope
push
jnp
xchg
cli
add
lret
add
push
mov
adc
fwait
repnz
aas
mov
add
cmp
add
mov
rolb
xor
sbb
add
out
daa
sub
xchg
add
add
jne
push
cmp
inc
aaa
pop
and
int
lock
add
or
inc
xchg
repz
repnz
push
mov
pusha
jecxz
or
add
cmpl
jmp
iret
cmp
inc
mov
arpl
add
push
mov
fnsave
fsubs
and
sar
pop
imul
insb
add
and
pop
inc
mov
pusha
aam
test
fwait
ret
or
jne,pn
jge
stos
push
inc
cli
fstp
cmp
mov
push
mov
and
xor
sub
stc
mov
ret
cmc
rolb
and
pop
lret
or
jae
rolb
fdivrp
xor
add
mov
movsb
add
cli
dec
aam
jb
mov
in
incb
cld
out
fldcw
ss
sahf
cmp
das
syscall
sub
sti
add
add
addb
lock
cmp
inc
inc
cli
sub
xor
xchg
arpl
roll
mov
pop
movsl
pop
popa
aad
or
roll
mov
sbb
sub
adc
dec
inc
add
les
mov
adc
or
add
xor
xor
mov
mov
push
int3
and
in
nop
mov
sti
or
bound
mov
cmc
insb
mov
xor
rcll
scas
in
dec
iret
daa
xor
mov
sbb
inc
jecxz
xchg
icebp
jecxz
inc
xlat
movsl
fimull
into
add
fs
cmp
xlat
popa
aaa
cmp
pop
push
mov
adc
jecxz
jp
and
pusha
push
xor
jne
jl
add
ds
in
jecxz
lcall
mov
sbb
popf
mov
cld
imul
data16
inc
inc
repz
cmp
das
dec
rcl
mov
sbb
lds
js
add
cmp
push
shrb
xchg
or
lcall
fdivp
sbb
add
dec
dec
shlb
mov
mov
push
xor
scas
fstl
stos
lods
clc
movsl
insl
push
pop
jnp
lods
add
cmp
daa
fs
arpl
pop
add
addl
and
sub
xchg
jmp
bound
jp
push
fisttpll
jns
or
pushf
fcomip
ljmp
pop
daa
add
add
aaa
jge
add
insb
les
insb
in
daa
adc
frstor
adc
mov
shl
mov
sub
mov
mov
add
cmp
lcall
add
sub
add
add
jmp
jo
push
les
dec
cwtl
scas
fildl
mov
xor
adc
xchg
arpl
aaa
das
sbb
jmp
jbe
add
xchg
pop
add
adc
sub
mov
movntps
xchg
rclb
imul
jmp
pop
cmpb
jnp
add
mov
aaa
and
fucomip
push
scas
cwtl
fmul
repz
sar
add
call
or
scas
movsl
cmpsl
mov
sbb
mov
fists
adc
mov
mov
ds
add
fdivr
adc
fs
jmp
dec
push
imull
dec
incl
sahf
jl
addl
add
mov
inc
pop
lret
icebp
loopne
dec
sbbb
sbb
mov
mov
loope
imul
cwtl
jmp
mov
add
sti
pop
lcall
cmp
mov
cwtl
scas
mov
lea
stc
sbb
xchg
outsl
jmp
add
ret
testb
and
mov
movl
clc
ret
lds
sub
leave
add
push
sub
test
sub
adc
leavew
movb
arpl
xor
insl
xor
fsubrs
adc
sbb
addr16
mov
dec
lds
loopne
push
fadds
add
lahf
add
mov
insl
adc
add
insb
adc
mov
pop
add
cmp
enter
cmp
leave
xor
sub
xchg
in
in
fwait
mov
xor
inc
jo
fnstcw
in
cmc
pop
adc
and
add
arpl
mov
pop
icebp
jecxz
out
adc
xchg
and
cmp
sub
jno
jnp
je
push
in
add
ja
jae
push
testb
pop
enter
push
pop
jo
adc
in
add
jno
or
push
hlt
inc
push
stos
cmpl
push
add
es
pop
fisubrl
adc
out
mov
inc
icebp
adc
outsl
add
mov
push
mov
jbe
lcall
push
mov
lret
add
add
cmp
mov
xor
mov
add
jnp
gs
data16
add
push
dec
ljmp
sar
pop
or
out
jbe
test
xchg
and
xchg
pop
add
dec
add
clc
cmp
add
mov
add
ja
mov
push
push
fdivr
mov
movsb
mov
aaa
pop
cmp
jno
pop
cmp
pop
test
pop
aas
pop
add
dec
hlt
test
push
out
pusha
jb
add
addr16
dec
ret
fcomip
rorl
fsubs
xor
push
fiaddl
clc
add
ret
mov
inc
mov
in
mov
cmp
lret
aad
add
cmp
dec
xor
mov
adc
loopne
or
loop
push
dec
es
imul
fiadds
xchg
pop
stos
int
mov
insl
jno
push
fwait
mov
aas
add
and
xor
dec
ljmp
dec
fwait
sbb
add
adc
ret
pop
push
daa
sbb
jb
aad
or
sub
adc
dec
nop
add
add
add
cwtl
leave
sub
push
sbb
stos
pop
xlat
in
lcall
push
lods
lock
xlat
adc
add
add
xchg
add
add
add
pop
and
push
data16
pop
dec
or
ret
out
ltr
fstpl
adc
jno
sldt
dec
inc
test
int
sub
call
cs
inc
popa
call
stc
leave
add
in
mov
inc
loopne
mov
add
pop
ret
call
jae
xchg
inc
or
sbb
xchg
adc
push
add
cvtps2pi
lods
addb
add
int
addb
mov
add
xor
or
into
fildl
xlat
cli
mov
call
add
push
push
add
aaa
das
inc
xor
add
into
ret
xchg
icebp
and
icebp
add
jge
mov
add
stos
mov
mov
pop
les
or
dec
mov
and
adc
cld
ljmp
pop
push
fwait
insb
enter
add
cmp
stos
add
or
mov
popa
test
cmp
mov
lods
sub
lds
xchg
xor
mov
or
lret
jg
inc
daa
xchg
notb
scas
or
mov
mov
in
hlt
jbe
ret
or
repz
lods
add
sti
test
xchg
add
add
mov
loope
dec
and
mov
insl
push
sarb
add
fisubrl
iret
xchg
jle
inc
int
clc
dec
lret
cmp
sbb
add
push
push
xlat
inc
cmc
and
lods
xchg
test
dec
mov
add
jb
xor
push
or
xor
loopne
movb
xchg
int
insl
insb
mov
imulb
inc
in
cli
sub
mov
adc
int
inc
mov
pop
or
mov
sbb
rclb
jmp
sub
out
bound
aad
shrb
loope
jae
stos
or
cltd
sar
pop
out
jbe
fwait
addr16
stos
dec
dec
lahf
adc
nop
movsl
adc
call
add
xchg
in
add
xchg
cmpsb
xlat
cmp
dec
jae,pn
rolb
cmp
xchg
stc
fs
add
mov
ja
loope
adc
bound
or
mov
cmpsl
pop
mov
add
add
rol
push
fisubl
imul
mov
pop
repnz
fnstcw
dec
shlb
inc
fcoms
or
fisubl
sub
jns
add
addr16
sahf
scas
add
inc
mov
sbb
insl
out
add
sbb
mov
adc
add
add
outsb
mov
xchg
jge
mov
movsb
cld
cmp
scas
dec
add
cwtl
mov
xchg
xchg
test
ret
push
add
daa
add
add
add
pop
add
mov
lock
rclb
lods
push
sbb
mov
or
adc
mov
or
cmpsb
mov
test
or
add
add
dec
rcrb
add
movsl
mov
add
shl
lods
mov
add
popl
push
jecxz
aas
jo
imul
mov
lds
jae
push
lods
imul
cmpsb
cmp
add
mov
rolb
inc
aas
imul
cmp
pop
or
mov
inc
add
add
inc
add
add
stc
adc
pop
jbe
add
mov
xor
jae
nop
movsb
mov
mov
add
xor
movsb
lcall
add
xlat
sub
sti
sub
and
add
stos
in
xchg
add
je
loope
cltd
div
xchg
and
test
add
loop
shll
push
and
add
fiadds
std
add
pop
int
adc
and
or
fnsave
mov
add
cmp
fwait
add
dec
dec
js
mov
shr
fadd
movl
sub
ret
add
add
push
fwait
aaa
jae
lahf
cmpsb
in
mov
xchg
in
nop
mov
add
sahf
jns
push
xchg
test
mov
adc
in
push
inc
xor
xchg
cmpsb
test
mov
ret
lret
sub
pop
jo
fs
loope
inc
les
lods
arpl
lahf
fcompl
fsubp
aam
add
pop
xor
les
lahf
notb
and
incb
add
mov
stos
das
cli
cld
add
mov
jnp
imul
scas
xchg
in
aad
add
mov
pop
mov
mov
lret
shll
inc
and
cltd
mov
fildl
mov
insl
sub
into
add
mov
add
mov
fdivl
int3
dec
adc
test
sbb
xchg
shrb
or
add
mov
mov
js
in
add
jae
adcl
movsb
cmp
mov
add
mov
inc
fisubrl
fiadds
xchg
sub
hlt
push
gs
ljmp
outsb
sub
adc
xchg
or
test
in
push
leave
popa
and
fdivs
pop
fs
push
mov
outsl
xchg
add
add
add
mov
mov
mov
and
out
mov
adc
cmpsb
int
mov
les
jbe
pop
push
mov
and
mov
lods
mov
adc
cmp
sub
add
icebp
xchg
push
mov
lds
stos
add
or
cmp
cmp
or
ljmp
lods
add
add
fdivrs
jnp
add
dec
test
cwtl
test
cmp
or
inc
aas
xor
add
icebp
mov
sbb
fcoms
inc
inc
addl
lock
dec
cld
mov
cmp
mov
es
loop
push
sub
push
out
push
jbe
xor
outsl
mov
hlt
adc
push
in
les
loope,pt
add
sbb
and
addb
adc
mov
imul
xchg
mov
nop
jns
push
movsl
mov
dec
mov
mov
add
incb
scas
das
popf
cmp
lds
dec
stos
lahf
sbb
jle
mov
xor
xchg
jle
jo
mov
icebp
out
pop
mov
cmp
pop
insl
add
add
pop
lahf
jge
or
cmp
mov
rolb
adc
add
jns
add
lret
imul
imul
jno
dec
push
movlhps
sub
cli
arpl
cltd
mov
jecxz
xchg
int
dec
xlat
insl
mov
pop
fsubs
pop
arpl
and
or
mov
add
aam
jo
fwait
das
add
mov
std
daa
test
cmp
cmp
int
sbb
mov
cmp
subb
and
lds
mov
jmp
iret
or
incl
mov
add
dec
lcall
and
clc
push
sbb
idivl
ss
mov
lcall
jb
pusha
add
jg
push
or
sbb
add
xor
out
pop
push
outsl
xchg
mov
sub
jg
lea
mov
adc
pause
fidivs
xchg
test
push
gs
out
add
adc
stc
add
dec
das
mov
addb
pusha
daa
cld
xorl
clc
mov
add
sbb
add
icebp
cmp
insl
or
adc
jnp
ret
fcomps
ds
pop
out
repz
clc
or
xor
mov
push
adc
cltd
addl
sub
ret
jno
mov
pusha
add
mov
out
in
in
cwtl
int3
jl
stos
fsubrl
xchg
scas
pop
ds
xchg
mov
cmpsl
iret
mov
dec
mov
jp
add
js
leave
rolb
hlt
je
add
mov
cmp
repnz
mov
arpl
mov
mov
or
adc
pop
jnp
int
bound
fistps
add
pop
cmp
jle
enter
push
add
add
cwtl
cmp
jmp
jo
andb
pusha
sbb
sub
inc
aad
dec
mov
mov
add
push
lahf
push
lock
xchg
add
out
add
das
je
lcall
mov
sti
and
imul
iret
movsl
push
adc
pop
jbe
or
jbe
add
add
add
inc
lock
pop
add
insl
jmp
xchg
sub
loopne
lds
jns
or
jecxz
cmc
lcall
scas
push
xchg
movsb
xchg
mov
sub
pop
inc
gs
sbb
cmpsb
cmp
nop
xor
dec
outsb
in
std
jne
movsb
inc
push
push
std
pop
movsl
xor
lret
add
fldz
adc
je
stc
dec
lods
cmp
add
add
lea
push
mov
data16
jbe
and
dec
data16
lret
add
cltd
and
jb
loop
push
cmp
mov
sbb
test
jb
aad
popa
or
pop
imul
adc
mov
dec
inc
jae
jmp
stos
out
cli
mov
fisubl
hlt
ror
jb
mov
enter
sub
scas
idivl
push
test
xor
cltd
push
repz
mov
lcall
inc
aas
out
es
cmp
sub
pop
jbe
add
std
outsl
adc
jnp
or
ret
mov
mov
and
fs
add
sub
adc
push
xchg
inc
push
movsb
mov
lock
mov
mov
mov
sbb
jae
inc
stc
jne
add
bndldx
add
iret
lret
mov
test
test
lea
jmp
xchg
or
sarb
fwait
add
test
add
aam
cs
and
add
add
test
test
push
aad
push
outsl
sub
sti
mov
sbb
cmp
sti
add
shlb
adc
and
cli
add
add
insb
or
add
out
cwtl
out
stos
ret
scas
add
loop
add
sub
mov
adc
stos
stos
pop
stos
cmp
and
movsb
fidivl
bnd
decb
scas
outsl
push
pop
jmp
ja
mov
pop
in
into
scas
cwtl
psadbw
add
dec
cmp
pop
xor
add
cwtl
imul
in
jmp
sub
push
mov
add
or
aad
rcrb
loope
lods
nop
mov
cmpsb
or
push
sbb
daa
add
cmp
ficoml
ret
dec
fisubrs
and
pusha
lret
push
push
lds
cwtl
das
adc
adc
outsl
jg
add
xor
movsl
jnp
add
add
pop
dec
push
add
add
int
add
xor
in
adc
cmp
xor
add
mov
mov
add
out
shlb
nop
not
and
insl
gs
add
imul
inc
mov
stc
repnz
dec
orl
ret
xchg
idivb
xchg
cmp
xchg
mov
jge
mov
mov
rorb
mov
pop
inc
mov
in
scas
cmp
outsb
xchg
jg
add
cltd
mov
cmp
inc
enter
repnz
addb
mov
inc
push
lods
mov
adc
mov
test
dec
roll
inc
add
lret
scas
incl
aaa
fwait
jg
pop
inc
popf
add
scas
out
jmp
inc
mov
movsl
sbb
mov
and
lea
cld
mov
shr
mov
add
rcr
scas
push
add
push
sahf
or
add
rcrb
mov
stos
mov
and
lret
mov
jbe
test
rolb
adc
cmpsb
lods
jg
cmpsb
add
mov
pushf
hlt
cmp
push
outsl
hlt
add
sub
dec
mov
jno
add
and
testb
mov
dec
sbb
add
add
mov
pop
xor
rcrl
adc
aas
push
test
jp
repnz
js
push
nop
jbe
test
les
fwait
lods
xchg
sbb
add
shll
int
xor
cmp
cmpsl
movsl
add
sbb
fs
jb
jg
insl
dec
fwait
sub
add
test
or
fiadds
js
dec
loope
cmp
mov
sub
xchg
adc
cmp
ds
mov
adc
enter
mov
add
test
cmp
add
imul
lret
cmpsb
fucomip
jecxz
sub
inc
sbb
test
jg
mul
mov
or
repz
push
jnp
add
aam
add
popa
rcrb
add
add
cmp
shrb
fidivs
add
xor
inc
mov
cld
sbb
addr16
add
pushf
jno
jbe
inc
adc
insl
or
pop
movsb
mov
sub
test
dec
push
lods
int3
test
add
add
sbb
add
xchg
add
add
popf
inc
add
pop
jno
bnd
jmp
inc
add
sub
xchg
aas
mov
cmp
sarl
jbe
or
pop
inc
adc
jmp
sub
imul
ja
in
pop
mov
xchg
add
popf
xchg
add
mov
dec
std
sbb
addb
dec
fcom
lcall
mov
scas
xor
xchg
mov
shrl
aas
or
cmp
arpl
push
pop
sbb
mov
das
add
pop
mov
xor
dec
mov
pop
aas
aad
cvttps2pi
push
gs
and
sbb
inc
jne
cmc
shrb
cmp
push
les
mov
ljmp
jle
dec
fistpl
xlat
or
inc
and
ret
xor
imul
loopne
fadds
add
stc
mov
sub
sub
rclb
add
add
mov
cltd
add
or
jle
sti
mov
incl
add
or
jns
mov
adc
dec
aad
scas
cld
push
sbb
add
add
in
sub
mov
cltd
sbb
add
jmp
mov
mov
jnp
mov
in
xchg
test
sbb
insl
adc
in
popa
mov
mov
or
into
jae
jno
pop
push
add
fistl
in
or
jmp
xchg
jecxz
xchg
add
add
push
popl
mov
cltd
mull
popa
mov
or
lds
adc
cld
cmc
push
push
pop
mov
aam
call
fsub
push
ss
and
in
mov
mov
pop
dec
xor
jno
sbb
insl
fcoml
mov
repnz
add
jmp
mov
inc
pop
add
add
ds
adc
rol
testb
movsb
mov
mov
imul
outsl
into
call
dec
jmp
sbb
pop
fadds
add
in
push
mov
jle
pushl
out
jp
add
fsubl
test
and
out
pop
xor
mov
mov
mov
jg
push
cmp
cmc
mov
add
lret
inc
jbe
loopne
in
outsb
push
jae
adc
jmp
imul
add
adc
jbe
imul
mov
xor
call
dec
or
aad
imul
or
lock
fsubrl
xor
in
sbb
add
cmp
add
shlb
sub
jno
cmp
add
mov
mov
or
idiv
add
insb
jae
pop
add
adc
push
cwtl
push
aad
add
xor
sti
sti
mov
fldl
mov
cmc
inc
test
outsb
stc
mov
push
pushf
int3
add
mov
les
jmp
cld
shufps
aam
add
adc
add
popa
out
dec
int
sbb
push
jnp
mov
mov
xor
inc
roll
ret
mov
inc
add
mov
mov
pop
fs
add
push
sahf
mov
jbe
pushf
sub
ret
adc
iret
test
fdiv
mov
jbe
add
lock
aaa
loopne
dec
pop
stos
je
mov
add
cmp
lods
push
in
add
insb
out
push
adc
pushf
sbb
push
or
or
pop
jnp
outsl
mov
incl
jl
push
push
aaa
add
jae
cmp
adc
vpshlw
add
loop
and
jno
out
xor
ljmp
js
cmpsl
mov
add
add
cmpsl
push
imul
or
push
add
mov
lds
adc
testl
cmpsb
mov
pop
ja
add
sub
or
repz
ja
mov
push
cld
jp
add
cld
cmc
addr16
xchg
add
insl
add
mov
dec
mov
shl
mov
push
out
ss
inc
cmp
and
xlat
adc
sahf
and
sub
inc
add
xlat
add
push
lcall
add
sbb
out
xchg
add
jge
add
das
jle
or
adc
in
jae
push
enter
xor
push
push
ds
pop
add
add
aad
add
add
lcall
les
or
add
xchg
pop
adc
mov
inc
jg
pop
repz
cmpsl
pop
gs
sahf
inc
movsl
repnz
iret
mov
mov
add
pusha
push
in
xchg
pushf
jnp
jnp
mov
mov
dec
aad
movsl
orl
cltd
lods
cmc
push
add
add
add
loop
js
and
test
add
pop
cmpsl
add
adc
sub
ja
es
stos
add
imul
add
and
jns
ljmp
mov
add
popl
push
das
imul
je
xor
pop
cmp
xchg
ljmp
ret
mov
add
movsb
mov
ljmp
sahf
jae
add
adc
push
xchg
cmpl
insl
cmpl
lahf
xchg
mov
adc
push
add
ss
add
add
mov
pop
mov
push
jecxz
dec
add
add
add
outsl
out
fisttpll
push
scas
xor
in
loope
aaa
je
aad
rclb
lcall
fwait
push
push
popa
pop
lret
mov
std
std
adc
test
ret
add
add
jne
sub
gs
dec
and
xor
or
xor
ljmp
lods
ret
jp
pop
outsl
addb
cmpsb
shll
fildl
hlt
rcrl
dec
dec
add
add
pushf
sbb
lock
fmul
and
xor
jp
in
insl
jle
js
and
jmp
pop
out
or
mov
in
add
xchg
int
cmpsl
daa
xor
push
mov
lahf
inc
outsb
gs
sub
add
int3
or
add
js
inc
out
jb
ret
ret
inc
loope
jns
add
cltd
fmull
adc
cwtl
cmc
adcb
ret
cltd
pushf
pop
inc
add
lret
mov
and
roll
add
add
add
cwtl
jecxz
cmp
aas
int3
jle
adc
cmp
out
outsb
jbe
lret
xlat
mov
cmp
push
daa
mov
popa
aas
dec
sub
add
sbb
xor
mov
sub
movsb
outsb
add
insb
mov
xor
cmp
ss
adc
xor
insb
jne
lods
in
ja,pt
mov
and
mov
add
in
fldl
test
xlat
cmp
mov
mov
ret
movsl
add
add
mov
pop
inc
je
loopne
jecxz
lock
loopne
js
add
pop
nop
mov
jg
cltd
lret
lods
lret
stos
scas
add
sub
jl
aad
pop
call
gs
add
add
aam
loopne
enter
add
mov
add
in
leave
add
sbb
mov
add
xchg
cmp
add
cmp
xor
ret
push
inc
hlt
pop
push
dec
aam
add
add
and
inc
add
add
push
scas
jo
ficomps
movsl
ja
xchg
pop
das
fwait
adc
add
daa
mov
mov
add
int3
icebp
cmp
pop
add
add
ds
mov
mov
xchg
mov
cmp
pop
sbb
add
pusha
xor
mov
xor
pop
pop
xchg
movsl
lret
mov
mov
cmp
rcrb
les
scas
sbb
insl
or
adc
scas
in
jp
mov
sbb
add
lret
add
add
fsubrl
add
insl
loope
jns
xor
push
ds
pop
or
fcmovnu
jne
add
xchg
test
mul
lock
adc
rcl
jp
subb
addr16
sub
cltd
dec
push
or
mov
push
add
shrl
add
and
repz
mov
sqrtps
pop
call
out
push
xchg
add
push
jecxz
jb
sbb
jns
dec
sbb
es
data16
in
popa
jp
scas
mov
mov
loop
pop
push
xchg
popf
add
jp
mov
rorl
pop
nop
fwait
daa
negb
mov
add
mov
add
adc
fldenv
mov
lret
adc
add
roll
test
add
or
cli
ja
rorb
hlt
add
jp
cmc
jns
jle
add
add
sub
in
mov
add
add
aad
ret
xchg
std
cmc
pusha
mov
inc
test
push
sub
movsb
sub
imulb
mov
pop
add
ret
pop
imul
cs
push
xor
xor
jp
imul
add
xchg
add
adc
xchg
add
dec
cmp
cld
lds
pop
cmc
jno
add
into
cltd
mov
lret
inc
into
xor
daa
daa
popa
roll
jp
sbb
and
or
pusha
aam
mov
xchg
sbb
cmp
mov
jnp
mov
mov
jle
push
aad
mov
or
dec
mov
pusha
aas
or
xchg
add
xlat
add
add
out
or
pop
mov
loopne
jne
jmp
xor
push
add
fsubr
aad
pop
pop
or
in
adc
add
pushf
add
inc
ljmp
loope
rclb
pushf
andb
sbb
in
sub
stc
mov
pop
scas
loop
jbe
adc
aad
sbb
xor
fs
out
flds
inc
fistpl
pop
or
xchg
sbb
sub
cmp
mov
insb
add
arpl
push
add
cmp
dec
inc
les
and
and
std
fstl
loope
xlat
imul
mov
out
fwait
aas
and
jbe
jae
jecxz
shlb
imul
out
dec
adc
mov
std
add
iret
movsb
sti
sub
mov
mov
lcall
bound
jmp
jg
xor
cmp
mov
sub
xchg
mov
or
inc
mov
mov
aad
adcl
stc
shlb
xlat
and
call
mov
and
xchg
clc
stos
std
dec
cmp
repnz
std
mov
mov
add
add
xor
cmp
xlat
ja
mov
insb
mov
inc
cmpsb
adc
lret
xor
mov
add
and
dec
jne
arpl
push
push
pop
inc
add
addr16
cwtl
int3
movsb
out
addr16
mov
scas
add
repz
pusha
add
inc
fstpt
jnp
pop
lock
rcrb
add
fdiv
inc
jmp
outsb
sub
add
iret
inc
pop
mov
rcr
insl
add
inc
mov
add
arpl
jmp
push
out
add
ret
add
movsl
rcr
in
sbb
stos
add
mov
add
and
push
dec
ret
and
add
loopne
mov
std
nop
pop
scas
mov
or
lcall
cmp
call
adc
pop
sbb
mov
js
jb
mov
stc
add
xchg
jnp
fidivl
rcr
or
scas
jne
pop
je
mov
pop
mov
pop
add
mov
lret
sbb
push
insl
pop
adc
out
outsl
mov
test
scas
or
mov
rcl
jnp
add
add
arpl
inc
mov
add
mov
mov
xor
add
sarb
sbb
sub
xchg
repz
push
cs
add
dec
add
int
pusha
and
movl
loop
or
and
jae
rcl
sti
mov
cmp
add
jmp
paddsb
mov
xor
lds
cmp
adcl
clc
fadds
mov
jno
hlt
jae
jnp
xor
lods
add
stos
and
out
imul
imul
shrb
jp
test
mov
and
inc
add
gs
add
je
sbb
xchg
test
frstor
dec
dec
pop
add
clc
sub
scas
js
add
or
mov
jne
add
stos
mov
mov
add
mov
sbb
sub
add
orb
aam
mov
call
adc
imul
add
pop
pop
scas
xchg
das
lods
mov
xchg
add
cmc
rorb
test
fiadds
xchg
add
mov
add
add
sub
call
add
popa
cltd
fs
add
mov
aad
add
bound
add
add
xor
mov
and
or
adc
or
inc
rcll
aad
call
jbe
and
xor
clc
or
or
xchg
je
adc
add
adc
cwtl
or
loopne
sub
out
add
out
stc
add
push
in
pop
inc
test
add
leave
cmp
mov
je
xor
mov
addl
loop
jbe
stos
mov
mov
lcall
loope
add
cmp
mov
push
push
pop
xchg
jb
daa
xchg
popa
add
jae
insb
lcall
fisttpll
sbb
lds
lds
inc
sbb
mov
pop
add
add
hlt
dec
dec
nop
and
pcmpgtw
xor
lds
mov
add
outsb
xchg
or
sbb
push
lahf
mov
add
divl
fcoms
mov
imul
daa
scas
lret
add
out
dec
mov
pusha
add
imul
sbb
inc
test
mov
or
lcall
pop
push
mov
sub
clc
mov
insl
popa
rcrb
outsl
add
sub
call
add
push
aad
inc
add
gs
pop
dec
dec
xor
add
jp
xlat
sbb
xlat
mov
add
mov
outsb
jnp
stos
sbb
aaa
movsb
mov
incb
cmpsl
adc
sbb
mov
mov
add
add
clc
outsl
add
loopne
adc
mov
or
xor
xchg
stos
push
fwait
push
ljmp
inc
add
mov
js
aam
inc
pop
pop
add
mov
lcall
push
pushf
add
xor
out
sub
push
dec
sub
add
sbb
cmpl
or
add
insl
add
xchg
out
or
inc
loope
cmp
cmp
pushf
cli
out
push
add
repnz
dec
cld
push
addl
xor
or
mov
xchg
scas
mov
inc
mov
add
push
cmp
sbb
jo
lds
jecxz
cmpl
in
xor
xchg
mov
jp
xchg
add
mov
je
mov
lds
int
flds
mov
rcl
cli
inc
popa
adc
dec
out
xchg
ds
mov
jmp
in
sbb
shlb
add
hlt
movsl
ljmp
movl
push
jmp
loopne
fistps
ficompl
test
loop
xchg
add
push
fst
push
jecxz
xchg
push
dec
mov
aam
ss
out
fdivs
loop
adc
add
in
divb
add
pop
jge
adc
dec
cmpsl
add
int3
sbb
out
xor
cmpsb
rol
or
jmp
pushf
or
cwtl
xor
xchg
les
loop
ds
inc
lock
testl
dec
ds
insl
je
stc
pop
imul
shrl
out
pop
sbb
add
or
andb
aaa
je
add
jp
xor
mov
add
mov
popa
aaa
mov
add
cmp
mov
add
dec
mov
xorl
aas
jmp
jb
movl
sarb
jno
gs
clc
enter
pop
pusha
inc
sahf
pop
cmp
adc
mov
jns
in
push
xor
out
xchg
ret
add
jb
cmpsb
sub
cmc
scas
jne
lahf
stos
inc
negl
rorl
fdivrs
mov
mov
adc
xor
ss
mov
push
pop
jae
fdivrs
jo,pt
sahf
add
jo
xchg
dec
jmp
xor
push
jae
add
cmp
je
iret
test
pusha
cmpsl
stc
mov
push
dec
sbb
add
data16
dec
mov
ds
cmc
add
add
sahf
pop
add
testb
shll
ret
add
or
and
mov
jae
inc
mov
push
mov
test
sahf
inc
add
add
aaa
or
leave
add
fiadds
int
out
push
pop
mov
jbe
xlat
sbb
or
lds
add
and
cld
sub
rol
adc
push
arpl
xchg
je
ficoml
xor
imul
iret
sbbb
and
daa
xor
add
fstp
test
int3
sbb
jbe
cmp
insl
dec
add
push
inc
in
stc
fwait
push
fbld
loop
dec
jb
dec
add
data16
fiadds
add
xchg
mov
in
inc
inc
xchg
cmp
lods
mov
nop
adc
ds
mov
xor
push
xor
sbb
roll
add
jle
add
cmp
add
push
lret
dec
outsl
fsubs
aaa
sub
data16
lock
pop
mov
jno
data16
ja
mov
incl
add
outsl
aad
ss
out
mov
jno
and
pop
ret
sub
or
fcmove
add
mov
push
mov
test
fnstenv
or
mov
test
daa
push
stc
cmp
or
adc
and
divb
sarl
fisttpll
repz
xchg
dec
add
sahf
cltd
clc
xchg
jbe
lahf
mov
push
cmp
aas
ljmp
jmp
lahf
ffreep
cmp
sbb
testb
jae
aad
sbb
sub
cli
aas
leave
int3
shrl
add
into
add
mov
mov
fcmovne
fildll
pusha
adc
mov
adc
xor
aad
jb
or
mov
loop
or
push
xchg
cmp
stos
aas
or
arpl
or
adc
sbb
mov
mov
pop
add
mov
add
loope
aas
xor
add
add
push
dec
xlat
pop
mov
bound
call
mov
adc
adc
sub
ret
add
fdivr
xchg
add
inc
add
popf
repz
mov
insl
add
add
xor
add
insb
out
das
xchg
mov
push
push
in
cwtl
imul
mov
sbb
cltd
adc
push
loop
aas
cmp
add
shrl
cltd
and
xlat
dec
xchg
mov
add
mov
inc
aas
pusha
es
inc
loopne
or
xor
shl
add
mov
lahf
and
add
rolb
fsts
jo
ret
pop
add
or
sub
mov
adc
addr16
jp
cmp
sub
insl
and
add
xlat
cmpb
cmp
add
ds
imul
cmp
add
insb
add
add
jmp
loopne
setle
jnp
repz
add
cli
inc
ss
insl
mov
int3
add
cmp
xchg
adc
scas
stos
in
lds
add
testl
lcall
xchg
add
push
add
add
fwait
shll
pop
mov
or
shrl
xchg
add
add
push
into
xor
add
ficoms
pop
stos
rclb
push
push
add
shll
add
xorb
fnstcw
dec
call
push
movsb
fiadds
add
add
cld
scas
inc
add
xchg
xor
add
or
daa
popa
cmp
add
pop
adc
add
push
add
orl
inc
mov
nop
loop
icebp
in
push
mov
xor
scas
xchg
mov
push
mov
ja
pop
push
lea
xor
ja
int3
daa
inc
sti
cltd
inc
in
mov
add
andb
cld
and
adc
insb
aad
add
xor
jne
sbb
add
add
xchg
pop
mov
cmp
test
and
or
mov
inc
imulb
aas
dec
jge
mov
add
jmp
dec
into
mov
add
lcall
push
xchg
mov
add
insb
jl
roll
inc
or
pop
add
add
sbb
in
aas
ja
dec
add
popf
add
add
lds
mov
pop
repz
mov
add
cmpsb
bnd
xchg
das
popa
mov
loopne
mov
push
adc
mov
ja
xchg
and
into
mov
jl
sub
or
pop
xor
nop
push
inc
xchg
fmul
jmp
cmp
mov
and
sub
sub
add
pop
add
mov
push
mov
sub
test
fidivl
stos
mov
xchg
int3
push
add
lcall
xor
and
mov
mov
sar
push
fistpll
clc
pop
in
loopne
in
push
xchg
push
mov
popl
adcl
jmp
jae
test
sbb
mov
pop
imulb
mov
arpl
mov
jno
gs
jns
sub
inc
mov
inc
popa
fiadds
mov
fwait
inc
and
scas
xor
inc
lods
adc
out
adc
aaa
jb
mov
sub
pop
add
push
fdivs
jnp
add
dec
xchg
ret
cmp
jp
mov
ljmp
fwait
mov
jg
and
adc
push
adc
pop
push
rcl
jo
lahf
add
sub
scas
adc
xlat
dec
xchg
cmpsb
cmpsb
add
cwtl
add
addl
push
cmpsb
mov
ret
or
dec
inc
icebp
clc
xchg
adc
fs
add
lret
add
mov
cltd
add
add
cmp
insl
push
dec
add
cld
je
in
or
add
outsb
xor
add
mov
xor
jmp
xchg
xchg
add
cs
add
incl
xorl
arpl
mov
imul
in
outsl
js
into
add
mov
cmpsl
add
cmp
mov
jg
sub
js
xor
xchg
cmpsb
adc
jmp
mov
bound
rorl
pop
lds
add
xor
data16
xchg
cmc
daa
shlb
mov
sub
dec
fwait
popa
push
inc
push
or
int3
xor
imul
dec
fldl
or
pop
add
sar
add
and
addr16
scas
or
add
mov
dec
push
xchg
loop
dec
dec
iret
add
out
add
lret
mov
mov
mov
push
ss
out
movsl
in
rcrb
add
adc
adc
xchg
inc
mov
mov
ds
xchg
mov
and
xor
test
dec
sub
mulb
mov
jb
arpl
fidivrl
push
dec
adc
sbb
xchg
dec
mov
add
std
fcmove
add
pop
inc
pop
sbb
ljmp
mov
add
lret
add
or
loop
and
shlb
pop
scas
imul
pushf
icebp
push
or
xor
add
xor
andps
mov
cmp
sub
js
inc
and
and
fistl
jge
jbe
mov
je
es
out
add
repnz
push
sub
incl
ss
add
mov
add
add
dec
popa
xlat
es
sub
in
jo
push
fwait
mov
mov
add
adc
push
xchg
add
cwtl
mov
sti
lods
mov
stc
add
inc
jl
mov
lcall
sti
out
push
pop
mov
movsl
cltd
sub
aam
movsl
in
push
scas
into
xchg
push
stos
andb
push
repnz
adc
inc
dec
lret
mov
aad
xor
ljmp
sub
addr16
dec
adc
inc
cs
pop
push
xlat
cmpsl
arpl
jp
push
sbb
jl
lods
fld
sub
add
or
addr16
enter
mov
out
repz
add
xor
push
jmp
and
add
add
sub
jmp
mov
mov
or
adc
inc
fs
mov
xor
aad
jg
dec
add
lock
enter
fs
add
push
cmp
popa
or
outsl
mov
jecxz
add
mov
mov
mov
enter
je
sbb
mov
sub
mov
adc
and
les
cmp
imul
xor
in
adc
add
loope
pusha
das
in
cmp
cltd
in
cs
lret
mov
dec
dec
aaa
test
jle
sbb
inc
addb
lock
push
call
add
sub
fs
add
mov
add
add
add
mov
repnz
cli
sub
inc
ret
mov
out
xchg
push
test
lods
jbe
pop
or
pop
fsubl
add
adc
add
jp
xchg
and
rorb
sbb
insb
add
fdiv
jo
movl
sbb
or
xor
push
insl
in
cmp
push
movl
cmp
cld
mov
add
and
shl
xchg
push
add
add
cmp
add
sub
daa
or
addr16
push
mov
add
add
sbbb
leave
cmp
push
les
push
sti
movl
xor
in
push
sti
sbb
xchg
data16
enter
lea
popa
aad
push
sbb
movsb
loopne
pop
inc
rcl
out
lahf
mov
sbb
jno
mov
push
rorb
adc
sbb
ljmp
jns
jge
sti
sub
test
test
push
adc
movsb
sub
call
into
mov
subb
fwait
inc
int
test
jno
add
das
lea
add
pop
add
mov
dec
lods
push
shlb
outsl
lret
xchg
push
add
add
adc
outsl
aaa
aaa
xorl
sub
add
cmpsl
cmp
adc
jne
insl
in
hlt
adc
sub
out
bound
push
cmpsb
inc
adc
pop
xchg
outsb
mov
dec
mov
and
push
push
dec
test
arpl
xchg
dec
addr16
fnsave
jae
jns
mov
add
inc
pushf
imul
outsb
icebp
or
pop
xor
negl
subl
into
add
push
inc
xor
mov
cmp
scas
xor
add
js
add
cmpb
xchg
cmpsb
add
mov
inc
or
xchg
test
adc
in
add
inc
sub
add
test
pop
add
call
enter
mov
ljmp
dec
xor
push
popf
out
test
roll
xchg
add
pop
and
xor
pushf
frstor
out
je
sub
add
pop
inc
jp
int3
lods
out
cmc
pop
add
lea
lret
pop
sbb
repz
movl
add
into
loop
mov
xchg
je
es
dec
jbe
mov
sbb
and
fistl
sub
mov
mov
add
enter
das
or
js
pop
xchg
dec
xchg
pop
add
out
mov
add
imul
mov
or
or
insb
or
dec
push
popf
dec
pop
mov
add
in
fistl
adc
mov
sbb
xchg
scas
jecxz
bound
scas
data16
mov
inc
and
or
lcall
rorl
push
sar
inc
rcrb
jl
add
cwtl
flds
mov
mov
add
lock
mov
add
fnstsw
fstl
popa
lock
xor
mov
and
lcall
and
sahf
push
loopne
mov
pop
adc
or
add
mov
and
or
cmpsl
lock
sbb
add
ds
sbb
xchg
xor
push
repz
hlt
adc
jne
sub
das
insl
roll
cmp
mov
jl
xchg
inc
push
out
push
lret
add
je
rorb
push
or
jns
add
mov
mov
ds
aas
dec
cmc
lds
jno
pop
stos
divl
enter
jecxz
and
insl
pop
ja
gs
mov
inc
mov
push
stos
sub
add
add
mov
push
add
xchg
imul
scas
mov
jecxz
add
add
in
jl
adc
add
mov
lret
xor
xor
dec
xor
leave
add
add
out
popa
add
or
mov
or
test
add
cmpsb
push
aad
jmp
inc
mov
cmp
aad
xor
addl
xor
stos
sbb
cs
add
jae
stos
dec
fbld
or
out
add
push
push
xor
or
and
xor
insl
pop
add
or
pop
add
adc
lret
pusha
out
xchg
mov
sub
outsb
in
dec
jne
jbe
cmpsb
add
mov
mov
or
cld
lahf
mov
aad
test
inc
add
cmpsb
or
mov
push
add
pop
push
insb
mov
fsts
jae
mov
fstps
add
dec
push
add
lods
jge
lcall
test
repz
call
iret
add
insl
lea
aad
and
xchg
daa
or
loopne
mov
fs
add
cmp
imul
xchg
add
cmpsb
sub
pop
stos
outsl
push
dec
sbb
sub
mov
add
cmpsb
rorl
lds
or
dec
test
test
adc
hlt
loope
add
repz
data16
jae
fisttps
push
pop
add
add
dec
addl
or
xor
pop
dec
mov
push
add
adc
mov
xor
cmp
pop
and
mov
add
mov
mov
add
cltd
dec
fcomip
or
xor
mov
mov
pop
ss
mov
pop
add
mov
xchg
cmp
je
xlat
add
outsl
add
mov
inc
stc
lds
cld
lea
in
arpl
add
outsb
push
xchg
add
sbb
nop
sbb
leave
jl
sahf
or
test
rol
sub
pop
add
inc
es
mov
adc
and
je
xorb
push
or
xor
sub
add
data16
add
int3
shll
iret
xchg
xor
and
fmuls
lods
cld
shrl
add
xor
sbb
add
xchg
xchg
fisubs
add
push
add
lret
push
fsubrl
jo
test
xchg
hlt
add
mov
pop
mov
pushf
pop
xor
sub
into
pusha
fistl
fs
fwait
jb
in
rol
sub
outsb
enter
push
ss
mov
add
mov
dec
mov
insl
int
test
and
bound
pusha
sub
mov
xchg
fwait
imul
xchg
mov
push
mov
repnz
jp
notl
leave
loop
inc
cli
push
xor
add
add
shrb
stc
adc
push
xchg
nop
lds
es
xchg
push
mov
add
pop
cmpsb
dec
jmp
outsl
push
push
add
mov
lods
mov
sbb
add
test
cmp
jge
push
sub
out
fnstsw
push
sbb
ret
jno
bound
popa
xchg
arpl
loope
cmp
subl
inc
add
pusha
cmp
sbb
or
imul
mov
bound
into
out
xchg
and
jo
cmp
faddl
lods
in
and
inc
push
scas
add
dec
cs
add
sub
push
jo
xor
cmp
add
mov
fiaddl
ret
mov
or
sub
data16
add
je
jbe
pushl
in
jl
testb
jl
push
xchg
lds
sub
ds
js
jns
xor
or
sub
ss
add
add
daa
imul
icebp
faddl
mov
sbb
icebp
mov
add
push
add
cmc
xchg
jne
ljmp
pop
mov
sbb
call
dec
mov
jmp
or
jne
cs
sahf
ja
xchg
lock
sbb
push
aad
add
and
sub
mov
cmp
sti
pop
pushf
sbb
and
sbb
add
add
imul
scas
push
sbb
repnz
or
push
xchg
fs
in
mov
xchg
test
jg
add
sub
pusha
lret
mov
pop
int
aas
test
sub
shlb
pop
rcrl
mov
mov
add
add
ljmp
add
insb
nop
ljmp
faddl
std
sarb
add
xor
xchg
cmp
xor
out
jne
das
dec
sti
push
add
mov
jmp
xchg
add
or
fistl
xlat
fistpll
lds
inc
xchg
push
add
mov
aam
xchg
adc
pop
pushf
aad
pop
in
out
js
jmp
xlat
ret
fiadds
push
sub
insl
std
les
lea
add
adc
cmp
pop
add
add
push
add
add
in
xor
mov
adc
bound
pop
xor
push
xchg
xchg
mov
add
adc
and
loop
notb
add
add
sti
faddl
pop
sub
adc
push
cmp
push
enter
jecxz
fsubl
stos
adc
xor
xchg
test
fsubr
add
cmp
add
bnd
out
and
cmp
std
mov
pop
mul
or
aad
jl
cld
pusha
mov
add
cmpsb
ljmp
stc
adc
addr16
rcrl
lret
add
bswap
adc
and
pop
adc
push
in
add
data16
dec
notl
mov
stos
lock
push
or
pushf
xor
pop
xor
pop
add
sbb
add
data16
aad
shrb
fldl
or
add
pop
pop
xchg
jg
mov
insb
testl
add
ds
leave
add
inc
xlat
and
push
and
movsl
jbe
add
mov
lcall
cmp
lahf
imul
cmp
or
add
lret
xchg
movsl
mov
pop
mov
sbb
and
out
cmp
loop
mov
adc
mov
push
int3
xor
mov
add
mov
in
and
or
inc
mov
xchg
sbb
jmp
pusha
testl
jecxz
bound
subb
sahf
push
push
push
fists
mov
je
adc
push
adc
dec
jecxz
add
mov
jge
mov
leave
and
popf
pop
or
xchg
add
xor
add
insl
stos
add
add
xor
jns
fistps
popa
bound
add
int3
scas
jmp
xchg
add
mov
ja
jb
lret
inc
pop
xor
mov
mov
add
js
push
in
mov
add
adc
pushl
loopne
and
mov
mov
add
shll
jne
shrb
push
inc
mov
add
dec
xchg
add
jp
pop
add
add
stos
in
add
loopne
add
add
cmp
cld
mov
incb
in
add
rol
mov
insb
lahf
pop
xor
dec
cmp
shll
ds
mov
cmpl
sahf
or
add
lods
push
pop
xor
xor
std
add
jmp
xchg
add
lret
add
dec
sbb
cmp
sarl
mov
fcmovnu
stos
push
stos
mov
push
cmp
in
adc
imul
or
mov
add
das
xor
sub
lods
add
add
add
cmp
mov
ret
int3
mov
xchg
mov
or
mov
sbb
icebp
fisubrs
and
pop
test
mov
push
divl
notb
jo
add
pminsw
gs
imul
cmpsb
add
sub
push
incl
dec
aaa
mov
ficoms
mov
add
pop
cmp
or
arpl
ja
xchg
mov
sbb
in
push
or
push
add
add
ljmp
mov
call
bound
sti
add
popa
mov
xorb
add
add
add
push
test
add
add
sbb
in
lods
sbb
add
pop
or
ja
inc
fcmovne
fxam
mov
inc
cltd
adc
pop
imul
push
sub
add
add
inc
inc
jp
dec
cmp
mov
into
nop
xor
add
add
add
stc
dec
shll
and
sahf
outsl
addr16
lock
out
add
das
sbb
add
or
lahf
clc
jp
cmp
test
scas
loope
fisttpll
push
or
adc
roll
popf
and
sarl
test
add
and
add
pushf
adc
mov
adc
fnstenv
into
push
in
mov
pusha
add
out
xchg
pusha
mov
add
jae
push
dec
insl
sub
dec
movsl
aad
pop
xchg
mov
add
push
dec
int3
add
xchg
call
cwtl
aas
fcmove
adc
insl
xchg
mov
adc
sub
xchg
mov
pop
lds
jl
add
push
add
into
int3
or
cmp
decb
pop
cmp
xor
into
jp
test
dec
bound
shll
testb
add
sub
sbb
add
xor
add
push
xorb
aaa
add
cltd
shrb
sbb
dec
loop
sub
add
sub
jne
jge
lahf
sub
cmp
add
cmp
adcl
add
in
push
add
add
add
sbb
pop
testb
ret
in
inc
mov
inc
jmp
add
add
xor
xchg
rolb
lea
push
push
mov
push
shll
push
dec
and
push
movsl
loopne
cmpb
mov
pop
jp
xchg
jb
add
movsb
shr
pop
rolb
lret
push
xchg
sbb
jge
add
pop
add
and
mov
or
into
cmp
xor
push
add
push
outsl
out
push
mov
add
xor
std
dec
mov
cmp
pop
jo
cmp
sbb
mov
sbb
add
add
fdivrl
mov
addl
add
lahf
lcall
into
add
outsl
sahf
loope
pop
sub
cmp
cmp
jbe
aad
inc
dec
adc
add
inc
mov
js,pt
jnp
lcall
inc
add
outsl
or
mov
dec
pop
mov
jmp
pop
popa
mov
loop
push
mov
ljmp
mov
cld
fsubl
xchg
and
jne
add
nop
out
repz
fwait
call
push
adc
sbb
add
std
mov
loopne
les
push
pop
mov
aaa
dec
push
fldl
sbb
dec
sub
add
pop
daa
pop
sub
ljmp
ss
dec
ficoms
mov
adc
fistpll
les
mov
clc
int3
push
shrl
out
rcrb
popf
sbb
xchg
mov
add
movsl
cs
add
jne
mov
add
ss
add
jae
imul
es
data16
outsl
dec
mov
in
add
shlb
add
inc
cmc
sub
and
or
testl
loope
testl
push
add
adc
jnp
addr16
dec
clc
stos
add
lahf
add
outsl
pop
iret
pop
aas
lock
lds
add
iret
add
mov
mov
add
inc
add
loop
lret
cbtw
xchg
mov
call
jmp
into
test
aad
add
arpl
sbb
mull
dec
daa
sarl
dec
cmp
lahf
mov
push
popf
fwait
push
sub
push
inc
jl
lea
addr16
mov
sbb
add
movsl
cmc
mov
and
add
inc
imul
lret
or
jle
mov
add
pop
pop
push
fsubrl
lock
jp
adc
movb
repnz
sub
add
jae
inc
pop
jne
repnz
add
xchg
fstpl
lods
add
and
inc
imul
jmp
addb
pop
xchg
movl
std
jecxz
insb
int3
adc
inc
xchg
add
cmpsl
add
pop
rcl
jo
xchg
pop
mov
add
call
add
mov
mov
ret
pop
inc
lahf
jbe
add
mov
outsb
inc
mov
lods
das
add
cld
adc
sbb
add
test
jl
dec
sbb
jbe
jbe
mov
xlat
jp
pop
add
scas
push
jo
gs
popa
adc
add
add
stos
adc
rcr
mov
insb
dec
mov
sbb
hlt
inc
dec
cwtl
inc
mov
add
fsubr
js
lock
pop
add
fnsetpm(287
mov
lcall
ret
sub
into
mov
cs
cmp
fidivrs
test
cmpsb
add
arpl
rol
or
push
add
xchg
sbb
and
cmc
inc
in
jmp
inc
cmp
es
lds
and
in
add
pop
movb
sarl
mov
dec
clc
inc
jo
push
lret
mov
xchg
push
cltd
in
pusha
inc
cmp
in
mov
pusha
test
fnstcw
icebp
inc
xor
aaa
push
and
mov
push
fldenv
leave
fisttpl
xor
std
sbbl
push
pop
iret
and
sub
and
or
sbb
add
push
mov
stc
add
mov
add
es
pop
pop
pop
movsl
enter
in
nop
fstpt
scas
bound
sub
lahf
inc
adc
mov
dec
inc
les
xlat
insb
dec
pop
mov
inc
pop
add
dec
fmull
pushf
arpl
mov
pop
or
loopne
add
nop
fcmovnu
mov
pop
add
jg
mov
inc
sbb
jnp
mov
jmp
adc
cmp
add
not
rcll
add
adc
pop
cmpsl
add
pop
cmp
add
clc
mov
xor
cmp
sub
add
push
lahf
insb
add
xlat
cs
mov
test
out
cmp
jp
push
inc
clc
dec
icebp
mov
xchg
xlat
pop
mov
xor
add
adc
mov
pop
stos
mov
add
xor
add
outsl
mov
add
fnstsw
inc
jnp
inc
daa
out
mov
sub
push
int3
add
lret
lahf
mov
shll
aaa
movsl
or
xchg
cmp
add
scas
jmp
mov
jb
and
testb
push
das
add
bound
sbb
jmp
add
dec
dec
outsb
mov
add
test
xchg
test
loope
test
push
pop
add
jl
jne
jne
out
inc
jg
and
inc
dec
pop
in
sbb
test
push
sub
xchg
mov
es
fcoms
lret
mov
call
add
rcrb
neg
xchg
inc
mov
mov
cltd
dec
mov
sahf
ds
add
push
popf
pop
ss
insl
ret
xchg
mov
repz
gs
jecxz
or
push
dec
push
les
aad
mov
repnz
add
and
repz
fs
ret
lods
push
dec
cmpsb
add
bound
inc
std
into
enter
push
dec
nop
xor
sbb
movsl
out
subl
negl
add
ret
scas
inc
repz
ja
xchg
rclb
xchg
lret
les
push
pop
es
or
jecxz
inc
push
add
and
mov
jnp
sub
add
mov
dec
pop
mov
mov
js
mov
cmp
inc
inc
dec
aam
jbe
repz
mov
cmp
fs
test
push
push
mov
ffreep
pop
jecxz
addl
enter
scas
xchg
pop
out
loop
xchg
push
xchg
faddl
push
sub
xchg
jmp
popf
jns
insl
push
mov
adc
mov
push
push
jae
lret
pushf
inc
xor
add
dec
popa
pop
xchg
test
dec
pop
mov
jmp
pop
cmp
mov
iret
jns
aam
sbb
mov
je
dec
mov
out
add
rcll
into
push
stos
ja
rorl
pop
push
and
jmp
mov
ss
push
adc
xchg
or
in
pop
inc
lret
add
lgs
add
scas
add
xor
add
xchg
cmp
aam
ror
add
imul
scas
lcall
mov
jge
loopne
je
repz
push
jle
mov
fildll
popa
hlt
ret
mul
ret
lret
xchg
dec
add
inc
add
lock
les
pop
ja
test
in
cmp
add
cmp
xor
adc
out
cltd
jg
push
add
push
or
daa
lods
push
mov
add
lods
mov
aas
mov
mul
mov
aas
push
sub
in
add
or
mov
xchg
xchg
mov
push
test
ljmp
lods
xchg
or
mov
inc
rorl
mov
or
out
pop
repz
adc
stos
add
loopne
dec
push
sbb
cmp
and
jo
mov
add
dec
add
flds
xor
aas
add
jp
jb
in
jl
xor
decl
mov
test
xchg
mov
push
aad
test
mov
call
out
sub
ret
add
das
lock
jl
xor
pop
mov
repnz
bound
mov
repnz
frstor
imul
inc
test
jp
aad
sub
add
js
cmp
and
sbb
or
mov
cmp
add
mov
xchg
pusha
movb
add
push
mov
adc
lock
pop
pop
fiadds
idivl
repnz
jge
xor
out
data16
aaa
add
das
js
dec
inc
inc
jne
add
fsts
pushf
push
je
jmp
jne
add
jb
add
ret
pop
shr
movb
add
add
add
leave
mov
sahf
sahf
ja
pushfw
cmp
jne
inc
pop
fisttpll
ljmp
add
add
add
into
add
std
mov
push
jg
mov
add
dec
sbb
mov
mov
cmpsl
fistpll
add
pop
int3
les
mov
ds
ds
mov
add
popf
cmp
or
add
add
add
add
mov
adc
push
jne
das
and
gs
mov
add
test
xor
add
sbbl
ret
fdivrl
xchg
cmp
lds
push
leave
xchg
jge
rcrb
aam
repnz
add
stos
shll
and
cltd
sub
test
nop
add
lretw
xor
push
dec
push
adc
xchg
add
test
xchg
pop
addr16
push
push
jnp
rorb
repz
outsl
push
add
sub
mov
addb
add
pop
mov
or
pop
pop
fcomip
repz
add
movsb
push
je
cmpb
xor
dec
or
fidivs
jbe
xchg
xchg
dec
add
cmc
mov
leave
jno
repnz
out
push
sbb
es
fisttps
mov
mov
add
push
add
add
ret
cli
addr16
fabs
add
mov
add
scas
outsl
shlb
lcall
mov
adc
jecxz
push
mov
into
mov
fistpl
out
add
push
add
adc
popa
add
add
mov
or
xchg
aaa
and
mov
inc
fiaddl
pop
imull
ret
mov
xor
add
pop
je
sub
push
mov
jl
inc
jne
jno
mov
or
scas
leave
push
mov
into
xor
shl
add
mov
lret
leave
std
mov
and
push
dec
mov
inc
add
movsb
add
push
or
into
sti
jbe
fidivs
insl
mov
cld
fistl
push
adc
sbb
out
loop
cs
add
fdivrs
add
inc
push
enter
mov
pop
push
in
push
push
std
xor
sahf
add
shrb
mov
jb
shl
sbb
pop
dec
std
dec
sbb
xor
jecxz
cmp
xchg
pop
sbb
negl
js
add
stos
data16
shlb
or
mov
cld
push
js
mov
sbb
add
lret
pop
xor
dec
or
mov
mov
fs
dec
insl
xchg
push
stos
push
int3
sldt
adc
add
and
lcall
add
stc
aam
jecxz
jg
add
ss
mov
rcrl
loop
pop
pop
mov
xor
in
or
ds
xchg
inc
mov
add
nop
mov
jne
cltd
cmp
outsl
xor
rcrb
xchg
es
sbb
cmp
add
jb
mov
fwait
or
dec
sbb
fidivl
lods
arpl
push
cmpsb
repnz
jbe
lret
je
negb
cli
push
loope
stos
lret
xchg
inc
add
xchg
stc
add
dec
add
sbb
inc
sub
out
pop
mov
push
xchg
das
mov
jmp
sub
popf
add
xor
je
mov
fimull
sbb
add
fiaddl
add
sbb
jmp
xor
loope
add
add
jno
daa
ficoms
dec
pop
add
cwtl
and
add
fimuls
jmp
fldenv
repz
xchg
mov
inc
add
push
hlt
mov
mov
popa
xchg
lods
mov
jp
addb
ficomps
add
cmp
add
lret
pop
push
data16
sbbb
add
xor
aam
sbb
or
addl
push
fildl
movsl
mov
jp
add
add
add
add
fisubrs
sbb
xor
xor
add
les
ja
iret
add
mov
lahf
popf
fcoms
add
lea
inc
jnp
cmp
xchg
add
dec
push
mov
add
roll
or
stos
jno
and
pop
dec
add
ret
jle
subl
and
arpl
std
and
sbb
xor
mov
sahf
test
shll
sbb
out
push
add
inc
push
aaa
jp
inc
cmp
in
insl
jo
mov
xor
pop
inc
mov
inc
mov
xor
andl
and
jo
aaa
incb
cs
xor
loope
jl
pop
in
lret
add
cmpsl
cmp
mov
mov
add
xchg
popf
fldt
add
jb
ja
mov
lahf
stos
mov
add
cmp
insb
fsubl
lods
sbb
adc
je
clc
add
xor
jae
sti
add
fsubrs
popa
lods
dec
dec
mov
sub
lods
pusha
scas
and
push
xor
mov
dec
cmp
add
cltd
dec
ficomps
ljmp
outsl
adc
add
add
rcrl
fwait
mov
aaa
mov
ljmp
jl
fs
push
pusha
xchg
loope
addr16
gs
push
rcl
push
adc
mov
push
out
sbb
jge
lcall
rorb
shlb
xchg
mov
test
cmpsl
adcl
pop
mov
insb
stos
mov
xor
clc
test
cmp
pop
add
jle
jmp
lahf
add
ficoms
cmp
mov
mov
sbb
cli
xor
xchg
xor
lods
add
or
cmp
into
lcall
aam
lock
add
pop
sbb
ficoms
gs
jl
bound
mov
mov
add
add
cmp
in
dec
dec
and
std
ljmp
dec
sub
ss
pop
or
dec
adc
push
jmp
mov
sub
sbb
jp
xchg
xor
add
adc
sub
lock
cmp
jae
jb
leave
and
add
inc
inc
fisttpl
lock
dec
popa
fsubl
add
cld
enter
pusha
pop
jnp
popf
mov
sub
xchg
add
jecxz
add
add
and
out
test
aas
xchg
mov
or
imul
pop
pop
add
xor
shrb
test
stos
add
in
repnz
cmp
aad
out
cs
mov
int
mov
iret
jb
outsb
jmp
jl
push
push
add
out
add
xlat
arpl
ret
dec
outsb
repz
add
in
aaa
pop
je
fnstsw
fcomps
mov
xchg
add
add
add
aam
repz
xchg
jg
adc
and
cld
fisttpl
cmp
add
mov
push
repz
cmc
mov
aad
fnstcw
add
insb
mov
lods
mov
faddl
movsl
jnp
add
and
pop
je
push
xchg
cmp
and
das
jne
xchg
lahf
dec
push
add
or
dec
repnz
mov
inc
stos
into
add
mov
adc
out
cmpsb
imul
subl
sbb
inc
sbb
test
lods
fists
divl
lahf
inc
mov
adc
rol
sub
jne
pop
fiadds
lcall
jecxz
pop
aas
fsubrs
pop
sbb
and
movsb
pop
mov
lcall
and
add
out
jns
scas
sahf
add
cwtl
lods
cmpsb
mov
sbb
pop
pop
add
mov
mov
loopne
add
movl
inc
jbe
pop
ja
jg
add
add
push
test
mov
int
adc
les
add
outsb
lahf
pop
out
or
xchg
add
adc
mov
lods
inc
ret
loope
mov
sbb
loope
testl
incl
add
das
or
or
add
pop
cmpsl
pop
les
fwait
jb
sbb
or
loop
add
jnp
movsb
je
or
pop
sbb
add
icebp
jo
pushf
hlt
inc
jb
push
and
daa
sbb
mov
or
fcmovnb
mov
jno
in
or
jnp
or
je
mov
mov
fnsave
and
or
pop
add
add
in
test
orb
pop
outsb
insl
xchg
jae
jnp
push
insb
cmpsl
push
jb
add
fsubrs
aas
xchg
mov
aam
pop
mov
add
xor
cmc
adc
fiaddl
mov
scas
xor
iret
push
dec
add
dec
pushf
jmp
and
mov
sarw
jle
insb
and
add
and
dec
jecxz
scas
xchg
int
dec
sbb
sbb
test
push
xor
inc
mov
jle
dec
call
add
mov
push
rorb
jno
jmp
add
cmp
sub
nop
mov
mov
pop
pusha
and
roll
add
sub
add
cmc
rcll
mov
add
add
sbb
mov
mov
insb
movsb
mov
and
fisubs
icebp
xor
cltd
jg
in
inc
pop
lods
outsb
add
dec
std
fldl
stos
cwtl
push
lods
cs
xchg
xchg
inc
movsb
jp
add
fildl
xorb
stc
hlt
push
add
add
scas
cs
enter
dec
test
and
inc
out
int3
add
or
adc
add
xor
lea
mov
int
add
sbb
xor
loope
sbb
addr16
pinsrw
sbb
rcr
mov
and
roll
mov
add
mov
sub
add
nop
cmp
cmp
add
inc
dec
push
leave
add
add
cmp
cmp
mov
icebp
mov
mov
icebp
push
insl
sub
jle
mov
jg
test
in
jmp
in
sbb
jge
add
mov
mov
push
arpl
pop
inc
stos
or
loope
add
test
mov
pop
or
add
mov
or
psubd
mov
lcall
leave
jnp
popa
sub
ret
lahf
add
pop
add
pushf
out
in
push
movsb
filds
mov
sbb
outsl
mov
add
mov
jo
fdivrs
xor
pushf
pop
aas
loopew
add
mov
mov
pop
jns
add
mull
add
add
rorb
pop
xor
dec
push
add
pop
ljmp
fimull
jbe
push
cmp
js
jno
aam
mov
aam
add
es
add
mov
add
scas
mov
sub
add
js
jge
xor
scas
testb
loop
fmull
shl
add
mov
cmpb
popa
int3
sbb
dec
cmp
jge
add
add
arpl
inc
aas
add
das
add
or
mov
daa
idivl
cmp
stos
jle
dec
jno
ret
aad
xchg
es
xchg
ds
imul
push
sbb
cmp
int3
push
add
lcall
add
add
jo
inc
dec
sub
fwait
mov
sub
xor
aad
fs
add
enter
add
pusha
push
je
push
add
sub
out
pop
inc
sbb
and
xchg
nop
jmp
hlt
sbb
out
scas
add
sbb
fldt
add
cli
add
push
add
xor
enter
repz
aam
mov
lahf
pop
jmp
add
pop
add
pop
mov
cli
or
enter
or
jo
test
add
adc
mov
jno
push
sbb
insb
testb
pop
xlat
data16
in
jbe
outsb
movsl
imul
and
cmpsb
les
mov
imul
repz
mov
mov
push
sub
pop
or
inc
add
add
icebp
add
cmpsb
out
mov
mov
xlat
roll
lcall
add
fldl
pusha
ss
pop
test
push
das
rcll
mov
fwait
rolb
add
cmp
enter
add
sub
push
and
add
repz
cs
hlt
outsl
mov
bound
cmp
inc
pop
add
inc
cmp
out
inc
mov
rorl
iret
add
enter
aad
cmp
xchg
ja
fidivl
push
sub
rcr
dec
add
mov
lods
add
push
mov
jmp
mov
scas
xchg
add
jns
cmp
add
mov
loope
mov
jg
adc
push
roll
add
mov
lret
add
lods
add
ficoms
mov
or
mov
add
lods
lahf
jnp
xchg
or
fisubrs
xor
fdiv
mov
add
inc
and
cmp
sahf
add
sbb
xor
out
push
imul
and
xchg
mov
lahf
cmp
inc
enter
push
jmp
out
in
fadds
dec
fs
mov
or
iret
mov
cwtl
pop
add
lret
ret
lahf
dec
mov
or
cli
add
xlat
int
fiaddl
jne
push
add
test
into
mov
loope
xor
lods
mov
add
add
mov
fwait
jmp
push
add
aas
push
fisttps
ja
aas
cwtl
push
sub
ljmp
add
scas
rcr
xor
mov
hlt
jge
add
sbb
add
and
push
in
dec
add
pop
lret
or
es
xor
lret
clc
cltd
cmp
mov
cmp
mov
pop
insb
push
popf
das
sub
xor
popf
jnp
enter
add
xor
data16
stc
and
icebp
aas
add
mov
sbb
repnz
out
sar
sarl
jnp
pushf
add
jb
sub
sahf
add
sbb
adc
outsb
add
js
cmp
mov
mov
or
int
xchg
add
ret
test
cwtl
add
sahf
adc
ss
cli
fisubrs
add
insb
add
les
mov
rorl
add
push
popa
add
xchg
and
test
in
add
bound
add
jo
mov
ror
inc
sbb
cmp
arpl
int
add
je
je
or
fs
add
mov
or
add
orl
popl
push
outsb
cmp
add
add
cli
push
sub
add
jecxz
icebp
mov
cld
inc
pop
sub
sbb
dec
sub
outsl
jp
cmpsl
pop
mov
jo
repz
cmp
mov
xchg
sbb
add
minps
dec
xor
push
arpl
pop
shl
adcl
lock
mov
add
into
jge
ret
aas
in
cmc
inc
lods
and
js
inc
aam
cmp
fiadds
dec
adc
rcll
fstpt
add
add
mov
mov
xchg
add
jge
movb
scas
mov
repz
bound
sub
jns
fldt
xlat
mov
in
repz
aam
xchg
jo
xchg
add
cltd
mov
xchg
stc
adcb
adc
add
jb
push
add
repz
or
iret
testb
xchg
push
push
out
adc
ljmp
xchg
sbb
les
sub
push
mov
loope
call
lcall
pop
xor
sarb
add
outsb
pusha
jge
cwtl
sbb
and
push
push
push
jb
mov
add
add
adc
aad
and
in
jns
out
adc
testb
or
ficomps
xchg
or
sbbb
jb
sbb
fisttps
cmp
and
xchg
dec
incl
push
xlat
add
xor
mov
push
jb
insl
mov
add
adc
out
cld
xor
push
xchg
cmp
faddl
das
pop
adc
sub
lock
mov
add
es
shll
fcoms
repz
add
xor
clc
iret
pop
incl
jg
rcrb
mov
jo
xchg
push
ljmp
jl
jo
hlt
pop
fdivrs
sbbb
sub
xchg
popl
lds
inc
mov
out
stos
pop
xchg
mov
daa
add
add
add
and
or
jno
pop
add
sahf
inc
sbb
xchg
mov
insl
rcl
jg
add
or
push
cli
adc
les
stos
jb,pt
add
daa
add
mov
push
jb
xchg
add
str
cli
add
insb
or
jae
pop
add
lcall
sub
arpl
sti
dec
or
mov
mov
add
std
add
out
add
add
push
shrl
jg
and
into
dec
je
in
fsubp
and
mov
add
and
push
cwtl
inc
and
mov
mov
add
mov
jno
clc
jl
xchg
xchg
add
add
out
add
in
add
call
push
add
roll
mov
test
push
in
insb
inc
add
inc
test
enter
inc
jg
mov
fs
pop
stos
add
and
xchg
lods
icebp
andb
cwtl
loop
sbb
mov
rcrl
or
arpl
lods
aas
mov
mov
out
mov
rcrb
outsb
cwtl
leave
or
enter
test
xor
push
jmp
push
pusha
ret
mov
xor
and
into
int3
mov
js
clc
add
mov
xor
nop
arpl
or
insb
int3
push
ljmp
xlat
add
popf
jo
dec
ds
and
push
mov
je
sub
scas
lds
jno
add
adc
shr
mov
std
sbb
add
ljmp
test
imul
imul
and
popa
sbbb
push
lret
xor
pop
dec
cmpsb
mov
jo
add
add
or
sbb
mov
outsb
add
repz
loope
push
adc
adc
cwtl
jnp
jnp
pop
jno
xor
aad
dec
add
test
and
shrb
pop
xor
sub
dec
aad
ss
sub
mov
fiaddl
jmp
push
pop
add
cmp
add
pop
das
fwait
add
mov
mov
in
popa
add
mov
add
stos
add
outsb
in
mov
add
outsb
inc
push
jns
and
lods
add
add
mov
add
mov
add
inc
add
xor
fmul
add
inc
add
xchg
add
and
cmp
pop
cmp
lods
scas
mov
leave
dec
add
fadds
out
adc
les
mov
xor
sbb
loop
movsb
jmp
gs
add
popa
addb
inc
out
stc
pusha
lock
add
lods
std
xchg
sahf
pushf
add
jbe
sub
mov
xor
fnstenv
fs
push
add
adc
push
jle
and
icebp
das
jnp
cmp
movsb
mov
sub
push
push
cs
jl
lock
jecxz
add
mov
cltd
mov
add
push
jne
aad
add
dec
and
push
sti
in
fstl
sbb
push
fs
sub
jg
add
in
pusha
inc
je
add
push
adc
xor
mov
adc
pop
sub
jns
pop
mov
jge
das
pop
lock
mov
pop
add
xchg
xchg
in
pop
popf
mov
add
iret
xchg
inc
movsb
test
mov
xchg
push
cltd
inc
cmp
sub
pop
add
adc
std
mov
and
sub
jbe
or
ret
add
ret
les
jae
imul
lahf
lods
add
push
adc
add
cmpsb
in
jmp
xchg
add
movb
mov
icebp
add
or
mov
mov
add
jle
in
je
mov
adc
addr16
push
and
xchg
add
mov
pop
mov
aad
add
mov
js
or
push
dec
arpl
xor
aas
lret
dec
jae
adc
aaa
pop
movb
pusha
movsl
shl
jle
or
cmp
or
jmp
sbb
jg
lock
mov
repz
mov
xchg
mov
pop
in
in
add
jmp
push
add
movsb
movsb
xlat
xchg
aam
and
mov
add
cmp
dec
add
lock
test
test
xlat
or
dec
push
mov
leave
add
pop
xor
lcall
dec
add
test
inc
out
jo
insb
add
inc
pop
push
xchg
ja
or
adc
sbb
add
sub
lahf
faddl
imul
jle
add
lds
inc
dec
int
aaa
jne
adc
sbb
add
mov
ret
insl
sbb
cli
scas
push
aad
xlat
inc
add
xchg
or
add
fwait
lret
pmulhuw
add
push
dec
push
add
xlat
inc
and
add
in
pop
ljmp
mov
adc
fistl
dec
iret
lods
mov
loop
loop
add
and
fistps
sarb
inc
rcl
scas
add
insl
jns
inc
fnstenv
dec
add
sahf
cmp
sbb
out
notl
ret
and
sbb
mov
ja
adc
shlb
mov
mov
sbb
jb
pop
mov
cmp
fisubrs
adc
mov
faddl
xor
inc
mov
outsb
add
outsl
imul
mov
mov
add
into
xchg
and
jmp
add
mov
add
mov
sub
jp
dec
adc
push
test
add
add
test
jo
popl
sbb
adc
popl
lock
xor
dec
cmp
shll
dec
sahf
das
repz
mov
test
jb
cwtl
xor
add
lock
cmc
aas
in
add
push
cmp
gs
inc
mov
add
push
add
mov
sti
leave
xchg
lcall
pop
ljmp
in
lods
call
add
clc
loop
inc
add
out
fnsave
or
sarb
or
adc
or
sbb
mov
adc
add
fwait
or
cmpsl
repnz
shlb
xor
loopne
aad
insl
add
add
iret
scas
sti
subb
sbb
xlat
int3
pop
faddl
mov
ljmp
jge
adc
mov
ficoms
pop
movl
cli
mov
or
pusha
sbb
xchg
inc
jmp
or
pop
hlt
adc
sti
adc
mov
cld
pop
add
or
pop
add
in
xchg
lcall
test
push
add
adc
repnz
xchg
notl
or
cmp
lods
xchg
insb
add
test
incl
or
cmp
fnsave
stos
icebp
sahf
sbb
push
dec
pop
sahf
add
dec
push
cli
mov
sbb
pop
ja
cltd
add
out
loopne
loop
cmp
in
push
jo
add
fadds
mov
cli
je
mov
sbb
ss
arpl
jmp
mov
add
mov
push
cmpsb
lea
inc
inc
or
std
loop
push
fildl
cld
ss
call
pop
repnz
and
hlt
popf
popf
adc
mov
inc
jnp
cmc
add
inc
jecxz
xchg
pop
jns
mov
sub
mov
add
inc
and
cmpb
insl
add
sbb
push
stc
loope
in
call
cmp
popf
cld
add
cmp
add
fs
out
pop
and
add
or
ss
push
push
add
cltd
fstps
dec
repz
cmpsb
add
push
mov
loop
push
jmp
sub
pop
pop
lea
sbb
cmp
imul
push
std
int
sbb
jns
leave
sub
daa
pop
lock
clc
jno
sub
notl
add
outsl
outsl
inc
sub
sub
lods
hlt
add
add
sbb
nop
add
jmp
aaa
scas
loopne
add
mov
jns
call
sahf
dec
fdivr
les
subb
add
mov
add
pusha
sub
jl
push
mov
testl
in
jnp
outsb
test
daa
popf
repnz
mov
leave
loopne
or
add
add
lcall
inc
insl
or
and
add
push
fdivp
lods
sub
in
lea
hlt
dec
loopne
faddl
lret
sbb
sub
sbb
xor
push
cld
shlb
jl
or
push
add
sub
or
stos
mov
mov
add
neg
xor
adc
ret
inc
xchg
inc
jae
std
arpl
mov
insl
add
add
add
push
sub
sbb
push
lret
stos
add
push
cmpsb
nop
shr
add
jae
sub
loopne
mov
add
push
and
add
add
xchg
rcrb
stos
insb
add
sbb
mov
sti
jb
mov
add
add
or
inc
add
aam
jge
jnp
push
mov
adc
sqrtps
add
xor
add
inc
pop
sarl
adc
int
jbe
xchg
rcll
sbb
gs
mov
xchg
in
jb
xchg
gs
cmp
add
mov
loop
scas
scas
daa
lods
in
add
shrl
dec
popf
xor
sahf
sahf
addl
pushf
adc
jge
rcrl
icebp
and
enter
lret
lcall
scas
fsubrs
push
mov
out
pop
stos
cmp
hlt
mull
mov
repnz
add
outsl
adc
cmp
mov
lcall
and
add
add
add
fwait
push
mov
mov
lea
add
inc
xchg
stc
sub
test
mov
inc
sti
xchg
sarl
subb
ljmp
pop
add
inc
call
ds
mov
pop
mov
jle
pop
add
jnp
xchg
dec
pop
movmskps
aas
stc
push
cmp
call
cmp
add
xor
mov
add
je
ret
and
add
add
add
add
jle
sti
add
xor
cmp
in
bsr
jo
add
mov
mov
aam
lods
lock
stc
aad
stos
jno
xchg
add
push
inc
insl
ja
mov
jo
add
insb
push
iret
iret
movsb
add
xor
push
fnstenv
bound
fldl
inc
pop
scas
sbb
repz
or
jnp
rolb
daa
xor
add
lds
mov
add
das
add
das
lock
xor
pop
add
sub
shrl
mul
mov
add
sbb
sbb
pop
scas
cmpsl
aas
xchg
cmpsl
add
jns
out
mov
outsl
sub
jo
insb
fistpll
xor
jno
stc
stc
dec
pop
and
sbb
les
inc
dec
js
insb
add
xlat
jecxz
mov
xchg
add
xor
add
ja
fiaddl
dec
jbe
insb
popa
fsubl
adc
add
or
out
cmp
add
inc
std
test
movsb
push
aad
cmp
out
cmp
dec
sbb
cltd
mov
push
aam
and
aas
jle
insl
out
cmc
test
cmpsb
add
rcll
fsts
add
sarb
push
add
negl
mov
cmc
flds
or
add
xlat
lock
push
rcrl
movsl
imul
mov
and
xor
mov
lcall
add
pop
mov
dec
mov
mov
iret
adc
test
fldpi
push
scas
fs
ret
inc
jae
mov
xchg
cmpsl
mov
out
adc
mov
loopne
mov
dec
jmp
ss
imul
push
sbb
xor
add
add
pop
add
sbb
add
cli
gs
in
out
adc
fnstcw
and
add
frstor
mov
mov
xchg
shlb
setbe
xor
faddl
pop
test
out
popf
add
mov
add
adc
ret
pop
incl
add
sbb
jb
sbb
xchg
cmp
mov
rolb
dec
js
mov
push
mov
test
mov
aas
pop
pop
adcb
pop
popf
cmp
stc
inc
inc
jb
pop
mov
dec
test
mov
fptan
add
mov
loop
int
addr16
or
mov
add
jns
and
arpl
in
in
das
std
and
jl
loopne
outsl
mov
add
mov
jne
call
push
adc
mov
mov
icebp
test
sub
push
inc
jmp
rcr
es
xchg
sbbl
mov
add
xor
das
and
add
cmc
add
add
insb
inc
add
pop
add
aaa
dec
notl
cwtl
sbb
mov
add
jne,pn
mov
mov
out
pop
fs
push
xchg
sub
outsl
les
add
test
std
mov
jmp
ds
nop
add
gs
add
lods
iret
nop
outsb
add
add
popl
mov
iret
mov
add
adc
mov
shlb
sbb
fcompl
notb
add
mov
xchg
jo
mov
hlt
imul
ds
cmp
mov
pop
inc
pop
add
lods
insb
add
fsubrl
jne
cmp
frstor
cmc
pop
add
sti
mov
xor
nop
imul
cmpsb
dec
les
sub
sub
push
or
add
dec
dec
ret
pop
push
push
xor
lret
fs
xlat
add
mov
loopne
mov
xor
popa
mov
out
adc
lds
add
ljmp
mov
pop
iret
add
cltd
stc
shll
pop
jmp
in
mov
add
lret
xchg
loopne
add
sub
sti
imul
add
add
bound
cmc
cs
add
and
stc
rcl
cmpsl
sbb
mov
sbb
addb
mov
mov
sbb
add
out
jae
les
jae
ret
or
jno
cmp
icebp
icebp
ss
add
sysexit
or
add
gs
and
mov
cmpsl
cmp
aam
or
add
xor
lock
add
pop
sub
pusha
aas
je
ljmp
fs
ljmp
mov
push
add
add
mov
mov
pop
fdivrs
xor
push
cltd
sbb
sti
xchg
fisttpll
jbe
repz
lds
sbbl
cld
fdivs
sub
movsl
mov
aaa
cs
inc
out
add
add
mov
inc
xor
mov
add
push
inc
movsb
rcll
add
or
xchg
xor
repz
jle
and
out
add
xchg
repz
adc
pusha
cltd
pop
fcompp
roll
sub
fidivs
jmp
rolb
add
ror
adc
imul
je
add
add
ljmp
cmpsl
add
into
and
arpl
add
cmpsb
hlt
cmp
pusha
and
add
test
add
dec
add
sbb
pusha
mov
mov
mov
push
add
dec
mov
jmp
clc
mov
imul
ja
shlb
out
cwtl
vmread
cld
cmp
imul
je
pushf
pop
xor
add
faddp
add
add
ja
add
test
jo
lds
push
jno
mov
cmp
cmp
add
add
jg
xor
mov
jp
pop
sbb
popf
jb
add
xor
popl
and
lret
fisttpl
xchg
add
add
sbb
fstpl
and
add
xor
sbb
add
mov
add
fldcw
mov
mov
pop
add
add
sub
sar
nop
shlb
push
sbb
adc
push
int3
test
cmpsl
rorb
mov
add
add
cmc
into
je
jmp
xor
mov
sub
ja
dec
dec
push
add
in
xchg
xchg
xchg
xlat
in
in
add
inc
pop
jl
xlat
and
fnstsw
lea
cmp
out
mov
fdivp
lret
jmp
iret
add
dec
add
mov
fildl
mov
loope
mov
pop
dec
ss
mov
data16
sub
fisubs
daa
mov
pop
add
pop
pushf
stos
fcomip
jp
sbb
dec
scas
sbbl
inc
mov
jmp
pop
push
mov
add
cmp
sub
imul
jns
xchg
insb
and
mov
stos
rcr
popf
test
loopne
cmp
add
sub
sub
xchg
add
add
fldl
adc
add
xlat
pop
add
cwtl
inc
ja
push
mov
add
or
movsb
sbb
add
xchg
fcoms
inc
bnd
add
xchg
dec
mov
sbb
adc
add
movsl
testl
addr16
jmp
cltd
in
xor
mov
add
jns
dec
add
pop
sbb
mov
leave
fsubrs
add
add
jae
add
add
loopne
test
das
and
add
mov
mov
add
outsl
setbe
lcall
dec
push
test
lea
adc
add
fcmovnu
xchg
popf
mov
sahf
enter
and
adc
cli
xor
add
add
sbb
les
ja
add
add
or
jmp
mov
mov
clc
test
testb
lock
repnz
add
or
popa
loop
rcrl
pop
add
mov
or
push
fucomip
es
flds
sub
add
and
mov
add
add
mov
outsl
imul
add
repz
ret
shrd
mov
mov
fcmovnb
into
das
arpl
out
mov
adc
and
dec
cmp
lea
push
sub
mov
popw
test
fwait
movsb
fsubl
add
dec
mov
daa
ja
jb
rcl
mov
add
push
mov
int
lcall
pop
int3
popf
add
add
mov
lret
aad
add
sub
enter
mov
add
jecxz
arpl
sbb
ficoms
in
insl
jp
enter
xchg
mov
orl
add
shrl
les
sbb
cli
fs
pop
jae
add
hlt
mov
lidtl
add
inc
insl
fdivr
xlat
fistps
sahf
sbb
aaa
add
inc
xchg
loopne
sbb
cs
xchg
add
aas
and
sbb
sub
jne
add
adc
nop
insl
or
sar
mov
add
test
repz
clc
insb
sub
iret
js
es
sub
cwtl
pusha
push
and
out
mov
push
repnz
jns
out
out
hlt
push
add
scas
pop
add
jmp
imul
sti
loopne
push
or
inc
push
adc
add
mov
jmp
push
jl
mov
xchg
stos
bound
pop
lcall
jnp
xchg
dec
out
adc
aam
mov
mov
add
in
cmp
cltd
ja
in
xchg
mov
xor
aad
iret
push
repz
enter
daa
dec
dec
mov
sahf
movsl
call
jne
mov
mov
cmp
aam
fcomip
fstpl
addb
mov
sbb
sub
in
in
pusha
jae
fstps
or
movsb
in
cmp
aaa
adc
xor
daa
imulb
and
adc
lods
shlb
pushf
cmpsb
dec
mov
add
cmp
imul
adc
les
call
lcall
stc
sub
fsubl
jecxz
pop
jae
adc
add
xor
adc
pop
sub
mov
cwtl
test
sub
out
scas
push
jnp
or
jle
out
dec
add
pop
mov
stos
jle
outsl
mov
shll
mov
add
add
outsl
pop
mov
ljmp
add
fwait
roll
xchg
push
add
mov
pop
xchg
xor
add
add
popl
pop
rclb
push
and
or
cmp
add
sbb
mov
cmpsl
mov
cmp
stc
add
inc
push
pop
mov
pop
roll
adc
xchg
pop
repnz
dec
fnsave
adc
dec
cltd
hlt
add
pop
ds
add
aaa
cmpsb
pop
fistpl
movsl
call
adc
inc
jae
add
xor
fwait
repz
outsb
or
and
mov
arpl
arpl
aaa
sbb
test
add
dec
sbb
lcall
outsb
aad
mov
add
fldenv
add
sub
dec
out
adc
aam
mov
xchg
jg
imul
inc
dec
push
add
lret
sbb
jmp
mov
jge
add
mov
add
push
out
inc
pop
xchg
cmp
jp
jmp
add
mov
add
mov
in
lret
jle
inc
adc
xor
ret
ds
push
mov
lods
jle
adc
lcall
sub
inc
or
adc
lcall
repz
shrl
mov
add
in
push
and
jle
repnz
or
or
rorb
xchg
jbe
xor
pusha
scas
rorb
in
cwtl
in
ss
decb
add
jbe
xor
mov
cmpsl
xchg
dec
mov
nop
jp
and
sub
repz
je
ljmp
les
xor
popa
mov
lcall
jp
ljmp
addr16
imul
push
adc
sbb
xlat
xlat
paddw
in
adc
lcall
add
ds
add
dec
add
push
xor
outsl
rcl
inc
mov
push
in
in
mov
cltd
xchg
bound
xor
cli
fs
add
push
ret
and
add
add
jecxz
sti
add
mov
sar
sbb
add
sub
adc
xchg
add
insb
movsl
arpl
add
add
xor
ficompl
ja
pop
xchg
adc
int3
jne
sahf
adc
mov
int3
lods
dec
dec
mov
push
xchg
or
sbb
mov
cmp
test
sti
es
and
repz
xchg
add
aad
seto
dec
out
add
lahf
js
sbb
roll
sbb
add
xor
rcl
out
into
arpl
ljmp
pop
push
aaa
sbb
bound
andl
jbe
test
adc
cltd
cld
ror
mov
jg
scas
sbb
push
add
out
ffreep
mov
jecxz
hlt
mov
jns
add
cmp
inc
lds
xchg
jl
jbe
testl
dec
in
insb
push
gs
psubb
add
and
inc
and
int3
cmp
jno
and
sbb
sub
mov
push
mov
dec
call
das
mov
fldl
mov
out
aas
repnz
xchg
cltd
movl
push
ficoml
lret
inc
aaa
popa
mov
mov
shl
xlat
add
adc
add
das
in
xor
adc
or
dec
push
mov
gs
jb
mov
mov
loopne
ja
int3
mov
push
insb
add
xchg
push
add
je
add
mov
movsl
xorl
adc
mov
pop
and
aas
sub
cmpsl
iret
iret
jb
sbbl
shll
pop
stc
xchg
mov
mov
rolb
xchg
and
and
mov
aaa
movsl
adc
inc
add
outsl
ret
dec
fildll
dec
jle
aad
add
mov
cmp
enter
clc
rcrb
and
cmpsl
js
leave
push
rolb
dec
lods
dec
mov
fsubl
sbb
lods
mov
imul
and
push
popf
lret
add
add
jmp
push
jo
sub
pop
jns
sarl
add
or
rcrb
pushf
mov
mov
ss
and
xchg
xchg
enter
mov
popa
stc
cltd
fcoml
push
std
scas
in
sbb
or
js
add
sub
std
adc
add
add
mov
add
xor
add
xchg
add
ds
adc
popf
lods
sar
das
fldl
ret
stos
add
lods
adc
jnp
rcrb
mov
push
hlt
add
lret
jle
xchg
mov
and
outsb
add
addr16
fs
jmp
out
or
xor
adc
sub
sbb
inc
in
push
cld
rclb
pop
jle
loop
sub
sahf
add
pop
jp
pop
add
cs
clc
fldl
mov
mov
daa
lret
add
pop
stos
sbb
sarb
ret
and
add
add
push
jle
add
cmp
adc
inc
dec
add
mov
jmp
js
das
outsl
fldl
mov
cmpsb
dec
dec
add
fistps
int3
clc
add
and
scas
fadds
sti
add
sahf
mov
pusha
mov
xor
ljmp
ds
mov
punpckhbw
sub
jnp
hlt
or
push
mov
dec
rcr
scas
add
add
add
mov
dec
mov
adc
mov
push
bound
adc
aam
mov
pop
jp
pop
adc
lods
add
mov
add
add
mov
adc
mov
dec
mov
scas
or
mov
jle
add
and
in
outsl
sbb
pop
xchg
dec
jecxz
cmpsl
sub
insl
mov
sub
scas
lods
ficompl
faddl
mov
mov
jmp
add
rclb
out
and
push
lods
mov
mov
test
mov
pop
les
out
inc
fidivl
add
adc
sbb
push
xor
movswl
add
pop
add
push
outsb
mov
mov
sub
add
out
bound
ret
jns
add
addb
popa
mov
stos
andl
jg
add
es
dec
add
jg
pop
es
mov
add
add
jae
stc
and
jns
pop
aad
roll
std
je
add
lods
in
lds
test
mov
mov
pushf
gs
or
insb
inc
call
add
dec
mov
cmpsl
into
daa
dec
ss
add
dec
clc
add
dec
outsl
pop
push
add
or
sarl
add
jecxz
xor
adc
in
add
fiaddl
fucomip
int
or
xchg
add
cmova
out
lods
add
lods
fstpl
add
test
adc
push
add
add
test
cmp
mov
mov
push
pop
mov
mov
jo
xor
push
add
mov
mov
fdivl
scas
cltd
add
insb
jmp
xchg
lock
add
insl
mov
pop
jbe
mov
out
jnp
jno
stc
jmp
movsl
add
test
jno
or
pop
jmp
add
adc
std
adc
repnz
sub
ds
adc
add
pop
and
inc
fs
outsl
nop
jne
add
mov
push
xor
add
out
jb
dec
jle
push
mov
mov
sub
dec
pop
pavgb
add
inc
add
sbb
add
je
jecxz
add
movsb
test
fldl
es
cmp
loop
cmp
ret
dec
pop
add
cmc
xchg
aas
inc
mov
shr
mov
hlt
add
xchg
or
pop
add
arpl
add
mov
cmp
enter
test
lea
mov
test
shufps
ficoms
add
addl
mov
rolb
add
adc
add
in
out
mov
divb
mov
enter
push
call
add
cmpsl
mov
cmpsb
mov
add
inc
push
inc
mov
mov
xor
mov
mov
push
into
mov
out
sbb
cmpsb
mov
mov
add
dec
hlt
add
or
mov
add
pop
cmp
cmp
sub
pop
mov
add
nop
loopne
jg
add
sahf
in
bound
insb
das
pop
mov
cmp
bound
lahf
xchg
cwtl
dec
nop
push
cld
dec
cmp
scas
dec
mov
pop
sbb
aam
sbb
bound
mov
cmpsl
negb
fadds
add
pop
sbb
aaa
inc
rcr
inc
lret
add
jp
lds
movsb
or
jmp
out
inc
xchg
into
mov
aaa
js
sbb
in
mov
rcrl
xor
add
xlat
add
add
sub
outsl
pusha
add
or
jbe
jno
das
iret
fistps
add
push
mov
sbb
pop
repnz
mov
ljmp
xchg
lds
fmuls
out
fstl
lret
mov
push
add
jae
xchg
xchg
dec
lods
mulb
fsubrl
sbb
fidivrl
add
sub
test
push
mov
push
cmc
dec
outsl
pop
inc
out
subps
movsb
sbb
push
jns
add
fnstcw
subl
pop
loope
pop
sub
add
mov
out
je
dec
inc
push
shlb
scas
pop
neg
xchg
xchg
addl
add
mov
push
insl
add
out
adc
add
xchg
in
push
cmp
and
gs
add
out
mov
mov
add
mov
pop
jae
sbb
in
add
mov
fnsave
icebp
pop
jae
mov
inc
xor
sub
sbb
xchg
std
add
mov
jne
pop
xor
and
cwtl
stos
add
mov
notl
dec
iret
fs
pop
mov
inc
dec
clc
cld
stc
cmp
xchg
xchg
push
ret
mov
push
add
xor
xchg
cmpsb
jae
and
test
sbb
lea
insb
adc
out
and
mov
add
stc
add
mov
loop
dec
popf
pop
jge
shrb
pop
mov
scas
xor
and
sbb
rcrl
ficoms
push
adcb
ret
imul
sbb
xchg
mov
fistps
add
and
sti
aam
fdivl
mov
inc
xchg
inc
add
jecxz
add
aad
popf
fs
movb
shlb
jnp
mov
movsl
add
arpl
xchg
add
stos
sub
out
sub
sub
add
cmp
add
loope
inc
xchg
cltd
adc
rol
cmp
or
cmp
out
mov
adc
cwtl
testb
sbb
sub
pusha
les
add
outsl
xor
ja
xchg
out
xchg
mov
cmpsb
adc
out
add
ljmp
adc
fildl
outsb
lret
roll
pop
imul
inc
outsb
jb
sbb
fistpl
or
cmp
xor
xchg
push
daa
or
and
xlat
aam
loopne
enter
insb
inc
mov
fldenv
add
push
xor
lret
inc
dec
xor
rcrl
out
add
jle
mov
mov
xchg
pushf
inc
or
adc
ss
int
in
xor
testb
add
inc
sub
int
imul
add
pop
mov
add
pop
clc
add
filds
movsb
push
pop
jp
jl
or
test
xchg
std
addr16
push
dec
test
in
test
mov
mov
popa
fs
mov
add
std
push
daa
enter
out
cli
add
in
jae
es
subl
mov
adc
xchg
gs
cmp
jno
mov
lods
cmp
mov
rorl
call
add
dec
daa
imul
xor
add
iret
mov
test
adc
sub
loope
iret
inc
test
and
add
cmp
out
bndstx
jnp
adc
pop
ret
add
xor
xor
addr16
cmp
fbstp
nop
fadds
test
test
lds
and
mov
arpl
scas
loopne
lea
in
and
jbe
xchg
push
jmp
push
scas
add
dec
add
push
add
repz
dec
pop
fs
cld
inc
call
sub
push
enter
mov
outsb
xlat
ret
rolb
adc
and
seto
in
mov
fldl
and
push
add
add
add
add
stos
push
ret
xchg
mov
inc
push
add
cmp
dec
leave
in
cmc
mov
or
add
inc
pop
aam
movsb
xor
xlat
ret
add
icebp
mov
add
je
repnz
adc
rolb
mov
add
je
sub
jle
test
test
and
pusha
add
jmp
jns
pushf
outsl
pop
loop
add
and
pop
xchg
in
adc
xlat
idivb
add
add
aas
aam
jbe
inc
pushf
scas
loope
push
in
stc
loop
add
loopne
cmp
push
push
pop
add
neg
cmp
jecxz
jl
push
xchg
xor
rolb
jae
fdivrp
push
push
mov
loop
adc
add
mov
lahf
adc
mov
mov
and
pusha
scas
add
not
jge
repnz
shll
mov
add
cmp
shll
xor
jle
repz
add
in
enter
add
add
inc
enter
cmc
add
popl
out
sbb
add
push
jmp
sti
aaa
je
fisubrl
dec
cmp
add
add
insb
add
rcl
push
mov
lock
jnp
add
adc
add
add
add
jb
roll
xor
std
sbb
xor
mov
movsl
rdtsc
add
ljmp
sbb
dec
cmp
jns
dec
add
stos
mov
mov
jle
andb
mov
aad
stos
xchg
dec
adc
add
adc
add
popa
sti
movsb
addb
push
int
mov
push
inc
add
and
push
stos
stos
roll
cmpsl
add
xchg
filds
xor
pop
mov
ljmp
les
or
imul
add
add
das
push
mov
xor
mov
mov
or
mov
add
add
push
out
inc
insl
push
fwait
cmp
out
cmp
push
pop
leave
ja
xor
pop
jne
movsb
pop
aaa
add
sub
mov
sbb
xor
xor
jp
imul
into
jg
adc
xlat
sbb
lret
add
push
sbb
dec
mov
lock
mov
jnp
add
out
roll
xor
adc
rclb
add
dec
call
movsl
add
push
lock
insl
jle
pop
push
sbb
ret
cmp
and
or
jmp
push
repz
add
sub
jecxz
pop
xor
mov
pop
addb
xlat
ret
stc
add
rcll
dec
jle
rol
mov
das
xor
xlat
lock
adc
rcrl
mov
mov
fsubrs
addr16
xor
push
cmp
push
cmpsl
in
xor
mov
xor
iret
lea
fs
pop
shll
in
inc
cmp
loopne
cmp
cltd
lret
into
dec
add
pop
mov
jnp
sahf
cltd
das
mov
or
add
xchg
mov
ret
or
dec
and
adc
movl
mov
add
dec
fsubrl
push
lcall
js
daa
jnp
lods
lret
cmp
jmp
int3
or
add
jp
xchg
pop
mov
pusha
dec
fiaddl
xor
inc
add
shll
roll
mov
out
xchg
dec
add
lock
mov
out
sub
add
or
mov
adc
in
mov
pusha
ds
sahf
stc
notl
or
out
in
je
daa
mov
lahf
daa
inc
mov
mov
pop
pop
pusha
sub
jnp
out
fadds
pop
dec
cmp
dec
btrl
int3
int
outsb
sarb
xlat
or
cmp
add
lods
sbb
gs
xchg
movsb
jns
inc
pop
add
je
testb
add
aaa
inc
xchg
pusha
outsb
mov
push
add
mov
incb
orb
push
xchg
mov
add
mov
inc
add
ss
adc
iret
add
pop
outsb
jno
mov
xlat
ret
arpl
pop
add
push
mov
lahf
lahf
add
sar
inc
xchg
bound
bnd
sbb
ja
les
out
or
add
jmp
out
add
pop
lret
mov
loope
faddl
imul
popa
clc
add
mov
xor
shlb
aas
aam
scas
jae
cwtl
jge
jo
lds
xor
ds
movsb
xchg
add
cltd
or
es
mov
ss
add
mov
inc
xchg
test
fwait
jecxz
dec
leave
jnp
cmp
jecxz
cmpsl
pop
jge
jbe
fildl
fwait
push
rolb
add
in
stos
loope
outsl
ja
test
mov
test
add
and
inc
xchg
add
mov
mov
std
and
sub
mov
add
add
push
das
add
out
roll
sbb
decl
imulb
xchg
hlt
sub
pop
xor
aad
jb
fcompl
lahf
icebp
iret
mov
movl
outsl
imul
mov
mov
or
insb
inc
aam
jp
xchg
popl
push
lret
jb
add
add
mov
lea
sbb
push
inc
inc
add
adc
shlb
out
add
inc
add
into
mov
ljmp
sub
icebp
sbb
or
dec
repz
orb
inc
add
jo
jmp
cmpsl
dec
mov
lcall
jl
xor
sbb
mov
push
adc
jg
or
out
mov
mov
mov
add
imul
fnstsw
add
shrb
or
std
sti
fildll
ficompl
add
fmuls
push
add
pop
mov
sub
lds
push
mov
and
xchg
sbb
pop
jp
cmp
xchg
jl
add
loopne
dec
add
mov
testl
xchg
add
pop
inc
rcll
inc
pop
add
pop
adc
inc
andb
cld
out
lds
mov
les
xor
and
mov
xchg
subl
sub
inc
stc
in
sub
je
add
mov
inc
sbb
push
in
add
into
cltd
cltd
sarl
andb
dec
inc
push
cmpsl
call
adc
js
call
or
add
push
pop
push
jae
cmpsb
lret
fs
and
add
jae
add
jns
jb
mov
test
subb
add
shrb
push
les
aad
sub
pop
xor
add
out
jo
mov
mov
mov
nop
mov
pop
add
jnp
add
xchg
inc
out
test
cltd
add
add
out
out
add
add
fsubp
mov
adc
out
add
and
call
loop
cltd
add
lret
xor
add
jnp
stos
mov
idivb
push
mov
cmp
add
adc
add
xchg
sub
pop
inc
cmpsb
inc
add
outsl
add
mov
add
inc
int3
xor
and
push
cmp
jne
sbb
jae
add
push
fsubr
cmp
mov
stos
xor
bound
call
imul
mov
call
push
jge
test
xchg
inc
add
push
bound
sub
adc
cmp
add
adc
pusha
adc
test
sub
pop
mov
cmp
out
cmp
aas
mov
xchg
lret
fldl
enter
aad
xchg
mov
mov
fwait
pop
lret
pop
mov
insb
aam
jg
dec
js
data16
ljmp
loope
fcmovne
jecxz
inc
pop
test
adc
adc
inc
mov
enter
mov
test
cmpsl
pop
jg
inc
sti
cmp
or
add
or
and
push
add
add
lods
xor
aas
push
loop
inc
xchg
into
cmp
add
jbe
add
ss
xlat
jg
cmp
xchg
add
or
add
fadds
daa
in
imul
jge
inc
aaa
ss
add
push
xchg
shlb
ss
sbb
adc
pop
add
movsb
into
cs
add
sub
call
out
pop
push
je
mov
pop
pop
mov
call
mov
pop
rcll
roll
loopne
aad
daa
sbb
jno
les
lcall
into
xor
push
pop
pop
add
adc
add
xor
jb
leave
add
cmp
jl
add
mov
mov
sbb
repnz
sahf
dec
add
xchg
iret
or
test
or
popa
lret
clc
add
fs
push
shrb
sbb
pop
mov
iret
mov
push
and
fcomp
add
jmp
popl
jb
jl
dec
add
daa
mov
inc
cmp
adc
mulb
mov
xchg
mov
sbb
push
push
push
ljmp
fstpl
pop
or
mov
addb
push
and
lret
mov
lods
jno
test
mov
insb
cmp
dec
cld
and
or
and
add
lret
add
arpl
sbbl
bound
push
idiv
cmc
inc
add
jp
in
pushf
cld
or
pop
je
add
push
rcrl
add
push
add
jge
cmp
maxps
push
jg
mov
cwtl
lock
mov
add
mov
add
or
stos
test
test
dec
dec
push
shlb
sub
outsl
roll
neg
add
adc
cmc
sbb
push
nop
push
add
adc
lods
lret
inc
ret
mov
rcl
sbb
mov
inc
cwtl
imul
pop
or
add
xor
add
xor
or
inc
mov
mov
test
adc
jmp
lea
insl
in
lea
xchg
popf
xchg
xor
mov
jno
adc
add
lret
xchg
add
sbb
out
or
add
and
sti
add
fmuls
pop
mov
es
mov
outsb
add
lret
add
addl
adc
add
add
mov
add
cmp
adc
dec
mov
mov
push
ds
xor
ljmp
xor
outsb
adc
cmp
mov
cld
mov
push
adc
jae
add
mov
mov
inc
addr16
hlt
sbb
imul
add
xor
sarb
add
subb
icebp
jae
sub
inc
push
add
pop
xchg
sbb
cmp
sbb
cmc
pop
mov
lods
mov
loop
mov
repnz
arpl
dec
iret
push
pop
insl
fiadds
mov
outsl
or
pop
adc
lds
call
xchg
inc
test
pop
ret
add
repnz
add
testl
or
mov
fmuls
add
push
add
mov
fidivrl
test
movsl
and
add
dec
inc
imul
jmp
out
cmp
push
mov
jo
xchg
xor
sbb
daa
int3
add
adc
push
sub
cli
fldl2e
cmc
clc
adc
pop
xchg
js
rorb
hlt
loopne
dec
out
fs
sub
shlb
add
push
jl
idiv
repnz
icebp
jmp
mov
or
add
add
cwtl
cli
insb
add
cmpsb
roll
mov
mov
xchg
pop
repz
stc
das
add
rorb
out
pop
ffree
push
cmp
cmpsb
cwtl
lds
add
andb
inc
mov
addr16
ja
stc
imul
ljmp
cmp
loop
pop
in
scas
or
pop
sub
aas
add
test
sbb
jmp
imul
dec
add
jb
lods
enter
fistpl
push
test
sub
test
aaa
popa
cmc
sbb
sub
inc
add
mov
add
jnp
jle
nop
adc
lcall
test
inc
mov
mov
divb
scas
aaa
adc
bound
add
adc
scas
lret
xchg
push
mov
add
js
bound
mov
add
add
lock
push
add
cwtl
pusha
inc
lock
adc
pop
push
loopne
sahf
mov
cmp
add
sbb
mov
add
shll
scas
add
stc
outsb
pushl
aaa
pop
loopne
sub
pop
add
pop
mov
jnp
xor
add
stos
cmc
sbb
aas
repnz
mov
or
jbe
mov
enter
or
cmp
insb
pop
xchg
dec
add
and
lret
xchg
add
push
imul
mov
jno
inc
push
sub
sbb
xor
mov
cld
out
add
add
sahf
cmp
xor
add
ljmp
aaa
or
mov
sbb
aas
add
inc
loope
add
xor
inc
xchg
add
popf
inc
xor
cmpsb
xchg
icebp
shll
xchg
int3
add
leave
repnz
or
into
push
adc
sbbb
add
jo
xchg
mov
aaa
dec
scas
add
ds
cwtl
cmp
cwtl
in
add
pop
mov
movsb
movb
fs
add
mov
push
subb
repnz
and
icebp
push
jo
imul
inc
dec
inc
hlt
je
insb
cmp
out
outsb
or
rorl
cmpsb
call
bound
xchg
mov
jb
jle
imul
jbe
xchg
lods
inc
inc
lret
adc
jns
add
xor
incb
lods
adc
movsb
clc
into
or
enter
pop
and
sbb
or
leave
pushf
test
or
in
push
loope
mov
jecxz
cmpsb
test
cmpsb
out
les
pop
and
mov
pop
xchg
or
call
out
adc
and
imul
mov
lahf
sub
xchg
add
cmpl
mov
dec
in
lea
rorl
mov
xorb
add
sbb
add
es
push
mov
cmp
fstps
inc
add
and
jg
or
lea
pop
cmpsl
scas
cmc
fsubrp
in
mov
pop
loop
pop
push
ret
adc
inc
pop
xor
mov
add
ret
xor
add
aaa
js
mov
imul
xor
ja
stc
adcb
cmp
jmp
adc
addl
dec
jbe
pop
pusha
jg
sub
fcompp
and
mov
pop
int3
jo
push
test
push
mov
push
int
outsl
cmp
cltd
add
adc
imul
xlat
int3
or
int3
xlat
cmp
sub
xchg
sub
add
nop
roll
outsl
push
xor
pop
call
push
shlb
pop
pop
push
add
popa
int
dec
in
mov
cmpb
add
rcr
sbb
sub
arpl
sub
ret
sbb
movsb
mov
cmpsb
add
pushf
mov
add
add
idiv
cmp
sbb
cmpsl
mov
sbb
imul
jecxz
sbb
add
add
loop
rolb
inc
fstp
add
adc
inc
add
add
push
scas
cli
inc
stos
pop
sbb
pop
sub
mov
adc
lock
add
in
adc
inc
and
add
mov
jmp
loope
rcrb
pop
cmp
jae
lahf
shl
lods
sti
add
movsl
add
mov
jge
dec
inc
ss
shrl
sti
jns
add
add
adc
mov
cmp
or
lods
add
mov
cmp
sbbb
and
adc
pop
dec
loope
ret
dec
mov
xor
add
mov
or
sub
test
jae
add
add
cs
push
add
icebp
add
mov
add
push
add
mov
add
xor
pushw
test
and
std
push
push
jge
iret
add
iret
jo
mov
popa
xor
test
sbb
pop
lcall
jne
mov
outsb
clc
sbb
xlat
clc
jmp
or
add
enter
shrb
icebp
out
cmp
arpl
xchg
shll
jno
loopne
sti
xchg
push
and
cmp
jae
push
and
dec
outsl
push
inc
and
sub
pop
mov
dec
out
or
jmp
sub
es
stos
dec
xchg
mov
xchg
inc
lcall
icebp
inc
roll
adc
cs
xor
js
and
repz
fldl
lock
pop
clc
shr
js
xchg
jnp
jl
ljmp
inc
arpl
les
xor
in
repnz
lock
les
push
mov
popl
and
scas
mov
loope
flds
sbb
add
or
add
jp
into
in
in
sbb
cmpsl
add
xchg
or
xchg
add
es
add
pop
xorb
push
fistpl
stos
add
push
popa
lret
popf
add
sbb
dec
mov
shll
add
les
mov
addr16
add
add
jns
mov
lock
addl
mov
mov
ficompl
add
push
aas
xchg
and
add
aam
adc
bound
add
dec
jge
aam
out
stos
rolb
fnstcw
and
ror
hlt
xchg
gs
imul
out
cmp
mov
das
add
jb
pop
add
pop
cld
and
pop
rol
cwtl
inc
mov
sbb
add
adc
add
adc
ljmp
adc
cli
fwait
inc
adc
or
cwtl
into
jns
iret
pop
fs
hlt
add
push
push
add
lock
pop
aad
add
and
fsubrp
add
enter
repz
or
add
xor
add
push
push
and
add
cmp
fildll
sub
inc
add
add
inc
add
movsl
mov
adc
in
sub
ja
cltd
pop
fidivrl
mov
pop
popw
push
push
repz
mov
add
int3
add
mov
mov
lahf
jbe
mov
addr16
jnp
add
xor
sbb
loope
adc
and
add
jle
es
xor
sbb
cmp
jecxz
pop
pop
and
sbb
das
les
and
div
mov
fcompl
pop
clc
sub
dec
add
inc
push
add
fdivrs
es
das
mov
movsb
xchg
jo
into
dec
mov
add
rcl
test
pop
dec
mov
sub
sub
loopne
dec
or
addr16
imul
push
outsl
mov
imul
lock
mov
insb
add
jbe
lods
add
add
fisubl
ja
sahf
push
daa
test
repz
mov
js
jno
dec
jne
loop
add
pop
shlb
add
mov
cmpsb
mov
xchg
adc
dec
pop
les
pop
fdiv
cmp
rcl
mov
sub
lds
xchg
fcompl
sahf
or
jnp
inc
push
mov
sub
add
xchg
int3
mov
movsb
jge
pop
pop
add
fldl
daa
push
popa
push
test
sbb
bound
mov
push
inc
mov
add
inc
in
arpl
notl
cmpsl
fists
xchg
and
cs
xchg
mov
push
mov
movsb
sub
arpl
sbb
sub
cmp
aam
sti
sbb
cltd
add
mov
loop
sub
test
hlt
scas
dec
faddl
jge
arpl
cwtl
scas
in
jp
add
loopne
lret
mov
das
mov
push
add
add
fiaddl
adc
insb
add
and
data16
mov
enter
aam
ror
push
mov
pop
js
pop
add
or
out
and
repz
fsubr
roll
pop
lock
daa
dec
add
cmp
and
inc
jns
es
aad
insb
jo
sub
cld
add
dec
in
mov
add
add
test
addb
cli
sbb
js
push
pop
imul
repz
loopne
jp
stos
negl
add
icebp
jl
jmp
add
or
in
dec
cli
scas
out
add
xchg
cmp
fisubl
add
in
sub
xchg
movsl
cltd
test
pushf
rolb
sub
mov
insl
cld
mov
pop
adc
mov
pop
dec
sub
add
jl
push
add
push
xlat
fldl
add
push
push
mov
inc
add
pop
int
loop
add
sub
xlat
pop
fcoms
push
mov
insl
lods
push
fnstcw
add
mov
adc
cmp
lcall
pop
add
add
js
adc
xchg
push
add
aad
jg
popf
jno
add
cmp
mov
or
pop
inc
fmul
fdivs
push
add
out
dec
xor
add
sub
std
adc
cmpsb
aad
bound
lret
ja
pop
in
ficomps
push
repz
mov
jne
shl
mul
jle
add
jb
inc
fbstp
pop
add
roll
imul
dec
je
repz
add
add
fsubrl
add
fcoml
ficomps
fidivs
in
mov
hlt
xchg
xor
mov
add
or
gs
and
fdivr
loopne
jle
jmp
pop
repnz
xor
fdivrl
cmpsl
jg
sbb
sbb
dec
mov
xchg
pop
outsb
mov
dec
pop
test
imul
add
repz
inc
add
dec
dec
scas
sub
and
add
test
scas
mov
add
add
in
adc
pop
pop
add
mov
fwait
nop
xchg
jo
mov
andl
loope
add
imul
ja
adc
sahf
add
lock
lea
mov
fwait
mov
popa
stos
xchg
push
jecxz
add
adc
popf
cmp
stos
les
add
ffree
stc
mov
ja
ja
sbb
movb
mov
ss
inc
cmpsl
adc
sbb
out
lret
add
pop
sbb
jmp
mov
adc
mov
and
pop
int
push
inc
pop
daa
fs
push
stos
imul
iret
inc
subb
cld
ret
pop
or
rcrl
inc
and
push
shlb
iret
lret
jns
in
push
mov
lock
xor
push
cs
cmc
inc
dec
cwtl
jbe
dec
add
push
mov
inc
push
fdivl
or
pop
and
add
call
xor
add
addr16
sbb
insb
stos
leave
adc
sbb
adc
inc
add
pop
add
sahf
adcl
jbe
std
sbb
shrl
add
mov
inc
loop
cmp
movsl
jmp
shlb
pop
or
mov
rcrb
imul
xor
rorb
mov
imul
add
pushf
loopne
push
add
test
lock
add
insb
adc
stos
add
mov
rclb
stos
sub
notl
push
ret
es
data16
add
xor
rol
add
out
not
or
and
addr16
and
dec
adc
ds
pop
js
test
adc
pop
insb
test
repz
add
xchg
leave
outsl
out
pop
call
outsb
enter
fsubp
add
dec
mov
xchg
dec
inc
adc
adc
add
imul
add
add
push
mov
xchg
out
popa
cmpsl
sub
add
dec
mov
push
xchg
add
mov
add
inc
add
adc
mov
fsubrl
lcall
xor
mov
add
push
dec
adc
jne
mov
lea
cmp
xor
sbb
push
xor
roll
inc
or
add
add
insb
or
adc
pop
ret
popa
adc
pop
inc
popa
mov
aaa
dec
fcomps
push
dec
add
ljmp
jne
fld
fiadds
lret
lret
mov
cli
jl
cs
fxch
mov
cmpl
test
scas
dec
xchg
jae
daa
jp
sbb
fwait
lret
add
mov
fwait
cs
scas
fisubrl
shlb
xlat
cmp
pop
adc
pusha
or
cmp
cmp
xchg
and
ljmp
ret
inc
hlt
mov
fsubp
cmp
das
aam
je
push
or
mov
add
popf
call
pop
pop
add
movl
push
mov
pop
adc
dec
inc
in
mov
push
add
mov
clc
cmpsb
loopne
ss
stos
xchg
sbb
insb
dec
sarb
mov
fisttpl
pop
bound
add
add
jge
cwtl
cmp
add
bound
mov
pop
pop
mov
into
sti
add
cmc
push
add
fmul
sub
int
add
pop
mov
stos
pusha
jl
adcb
sub
lods
sbb
aad
lds
sbb
loope
mov
push
das
and
mov
and
cs
addps
inc
xor
adc
xchg
jb
push
cmpsl
xchg
mov
call
enter
adc
das
add
pop
pop
and
add
mov
arpl
addr16
stos
add
jle
test
mov
insb
movlps
mov
pushf
aad
negb
inc
adc
daa
jl
ds
subb
inc
add
push
jbe
xor
inc
sahf
loop
xlat
pop
pop
pop
pushf
in
daa
dec
int
cmp
add
ljmp
jnp
xlat
cs
cmpsb
and
data16
frstor
mov
mov
jae
add
pop
cli
insl
add
jae
xchg
pop
arpl
or
dec
icebp
mov
stos
sub
add
fwait
loope
push
shrb
or
sub
add
test
dec
or
add
add
in
xlat
sbb
je
aad
add
stos
lock
decb
in
add
pop
cmp
scas
roll
cld
xchg
int3
mov
pop
add
stos
arpl
into
add
cmp
add
pop
jae
pop
add
aaa
hlt
add
je
lods
fdivrs
iret
xchg
rol
ffreep
jo
insb
add
push
lcall
add
jne
adc
dec
cmp
sbb
add
inc
lret
add
and
or
jle
nop
outsb
xchg
movsb
mov
add
les
dec
add
outsb
arpl
or
pop
inc
faddl
jl
and
bound
inc
stc
add
dec
addr16
scas
das
push
xchg
divb
enter
xor
push
ja
sub
mov
sbb
mov
push
cmp
mov
adc
les
lret
cld
jbe
test
xchg
push
add
add
and
sub
int
dec
sub
add
add
jbe
scas
pusha
jl
fisttpl
add
xor
inc
and
int
sub
out
sub
inc
movsl
out
mov
push
hlt
jne,pn
add
add
repnz
pop
jmp
xor
sbb
nop
cmp
addb
jge
into
lret
add
inc
push
inc
js
cmp
loop
jge
shrl
loop
mov
inc
outsb
inc
inc
add
or
jecxz
nop
xor
shlb
cmp
push
mov
or
jmp
and
add
jg
sahf
push
push
xchg
add
push
aam
adc
js
push
subl
add
sub
sub
ret
xor
add
push
mov
out
mov
add
jle
adc
imul
add
sahf
add
jg
sbb
loop
sub
out
nop
enter
pop
fucom
adc
cwtl
clc
imul
ja
stos
ficomps
fdivs
mov
jecxz
fwait
aas
fcmove
push
out
sahf
adc
mov
test
push
dec
in
repz
stos
stos
clc
xor
mov
jmp
pop
in
xchg
mov
lea
dec
lahf
sbb
clc
add
fiadds
inc
roll
xor
pusha
mov
dec
add
cld
xor
scas
pop
add
dec
out
popl
ret
or
stc
pop
out
je
add
add
mov
inc
pop
mov
xchg
jg
lock
shlb
xchg
jnp
xchg
add
jl
lods
sub
cli
add
mov
pop
mov
popf
sbb
call
mov
addr16
xchg
insb
add
test
call
pop
call
and
and
insb
mov
insl
pop
add
add
repnz
and
add
or
hlt
fists
mov
fmull
lahf
jge
xchg
add
dec
xchg
repz
lock
add
pop
pop
mov
fs
sub
mov
xlat
jno
or
sarl
in
pop
sbb
xlat
mov
testb
push
xchg
xchg
jl
jnp
out
add
mov
repnz
jae
lock
hlt
adc
call
dec
cmp
mov
mov
adc
add
xchg
rolb
test
mov
dec
fsubrl
in
xchg
add
jp
add
rcrb
in
mov
imul
pop
xchg
mov
jp
bound
leave
data16
xchg
add
adc
jbe
or
scas
add
mov
adc
clc
sbb
sbb
jl
push
fwait
mov
les
jecxz
test
test
subb
jno
mov
add
adc
dec
and
mov
mov
mov
cmpsb
pop
jge
dec
push
lock
add
rclb
add
insl
dec
rcl
add
push
push
push
push
lret
roll
sbb
sti
mov
mov
mov
add
daa
add
test
leave
add
shlb
jl
inc
hlt
imul
jbe
je
add
mov
push
popf
int
mov
ljmp
sbb
add
lds
adc
pop
sub
add
add
or
jg
ret
and
xor
inc
pop
adcb
lock
or
scas
push
push
in
mov
add
arpl
stos
fisubrl
xchg
mov
push
add
mov
rolb
insb
sbb
mov
add
add
push
add
jmp
ret
aaa
mov
movsl
add
add
add
addr16
xchg
cwtl
mov
xchg
testb
mov
cmp
loopne
dec
mov
adc
faddl
or
sbb
add
mov
add
jae
dec
cmpsb
outsb
filds
pop
xor
jae
jmp
repnz
lahf
repz
shlb
add
fwait
aad
add
fwait
addb
add
lea
xor
add
repz
clc
add
movsb
sti
sbbl
frstor
push
aam
sbb
sbb
add
cwtl
cmpl
xor
aas
movsl
add
add
fs
add
and
add
or
int
xchg
inc
dec
mov
add
mov
jae
xor
call
xchg
pop
adc
lock
add
pop
shr
lahf
jbe
fcos
add
cmp
popf
out
repz
mov
push
movsl
dec
cwtl
lods
pop
mov
sbb
sbb
loopne
fmull
sub
imul
js
or
xor
add
subl
ss
ret
fsubrl
add
insl
cltd
push
imul
adc
sbb
adc
xor
and
iret
fld
in
test
adc
popa
insl
inc
add
pop
repz
es
mov
adc
mulb
xchg
pop
xchg
addl
gs
add
jmp
and
pop
inc
add
mov
js
mov
add
push
dec
adc
ret
add
test
jg
and
xor
stc
ljmp
xchg
data16
loop
mov
jg
test
mov
cmpsb
pop
dec
jno
imulb
mov
mov
out
bound
sbb
insb
pop
mov
push
scas
xchg
xor
popa
movsb
das
test
jmp
adc
jge
inc
or
aas
jmp
xchg
mov
int
je
aad
adc
add
in
imul
cs
xor
xlat
sub
push
push
or
add
mov
int
lods
and
or
xchg
mov
shrb
add
cli
dec
xchg
lret
add
add
movsb
add
mov
cwtl
jne
xchg
cmp
cltd
sarb
xchg
or
fwait
test
lret
inc
mov
add
or
pushf
add
adc
dec
push
or
xor
fisttpll
add
xchg
cmp
jno
jmp
call
test
or
repnz
dec
add
sub
push
push
xchg
bound
or
lock
add
add
je
mov
jle
sbb
add
pop
arpl
js
add
or
adc
nop
add
das
movb
jmp
icebp
insl
adc
dec
add
mov
cmp
add
popf
xor
pop
rcl
add
cmp
add
lods
and
xor
dec
mov
js
xor
add
add
fs
shr
stc
in
ret
add
and
pop
dec
add
sub
cmp
and
mov
jae
jne
in
add
dec
add
cli
and
add
insl
xor
push
lock
dec
scas
add
add
xor
push
js
dec
sbb
pop
adc
loopne
push
cmpsl
push
dec
cld
ds
sbb
push
addl
mov
add
jno
subl
shrb
and
or
jmp
add
mov
rcll
xchg
loop
das
mov
leave
jo
test
mov
mov
adc
cmp
add
push
pop
mov
js
test
or
push
mov
push
int
mov
adc
xchg
xor
add
add
xchg
xor
in
or
fldenv
fmul
mov
outsb
push
icebp
out
mov
push
mov
jp
ficompl
xchg
inc
fcoms
add
add
pushf
add
dec
xlat
xchg
adc
lods
xchg
nop
cmc
or
pop
pop
imul
pushl
lock
shlb
sbb
rolb
mov
jl
call
jns
mov
fwait
push
inc
adc
paddsw
inc
adc
add
addr16
jno
push
inc
sub
shrl
cmp
test
rcll
test
test
jmp
popa
add
or
int
add
cmp
in
inc
or
adcb
loope
jnp
push
and
add
shrl
sub
repnz
insb
xchg
shlb
mov
scas
leave
mov
sub
outsb
pop
bound
adc
hlt
xchg
fdivp
add
add
jmp
fsubs
notb
mov
lock
mov
daa
cld
mov
test
mov
mov
call
std
call
test
or
test
jmp
mov
add
shrl
sbb
lret
imul
add
add
mov
jmp
rol
mov
and
cmp
xchg
loope
leave
mov
add
adcb
push
add
dec
mov
js
adc
push
push
lock
push
xor
mov
add
push
and
sub
jnp
iret
jl
add
xor
inc
sub
mov
roll
mov
mov
sahf
sbb
cmp
cmp
addr16
sti
dec
sub
insb
xor
and
clflush
pusha
insb
xchg
setl
pop
cltd
stos
xor
jecxz
mov
or
pop
dec
ss
jo
mov
addr16
into
daa
into
adc
aaa
add
and
mov
push
xor
mov
push
iret
xor
add
xor
call
js
xlat
cmp
inc
lahf
call
imul
mov
inc
sahf
sahf
das
jae
mov
daa
push
jl
inc
idiv
and
mov
bound
pop
pop
add
mov
cmp
or
sti
icebp
sbb
push
cmpsl
add
xlat
sub
pop
pop
imul
fwait
mov
in
push
mov
mov
test
dec
add
sbb
sbb
inc
in
gs
mov
dec
xor
rcr
sbb
pop
jg
lds
jg
aam
add
in
adc
outsl
enter
pushf
mov
sub
jae
ss
call
adc
add
stos
mov
sub
jmp
add
inc
loopne
mov
inc
pop
sarl
adc
ret
add
scas
in
in
cmpsl
out
add
mov
repnz
adc
add
mov
out
dec
popa
shrb
mov
imul
lea
cmp
sbbl
xlat
jo
out
sbb
bound
cmp
adc
or
xchg
xchg
out
pop
gs
sbb
xchg
inc
loop
aaa
incb
push
mov
cwtl
adc
or
pop
movsb
mov
mov
adc
sub
push
frstor
insb
or
cli
lods
add
ja
adc
sub
add
xchg
mov
and
mov
js
fs
add
add
lahf
pop
add
lds
push
pop
test
movsb
cmpsb
ja
mov
decl
roll
dec
pusha
jno
dec
fmull
sub
push
and
sub
jbe
dec
leave
fmull
pusha
fimull
mov
inc
pop
xlat
lret
inc
xor
filds
mov
in
sbb
ret
arpl
cmpsl
push
lods
or
mov
movsb
dec
mov
mov
rcrb
cli
dec
push
pusha
jno
decb
mov
addb
jnp
or
push
je
pop
fs
add
sub
and
sub
xchg
ret
pop
fdivrs
mov
mov
test
subb
and
add
aaa
lds
push
xor
xchg
sub
add
push
adc
movsl
add
popa
inc
int3
cmp
push
orb
mov
add
fisubl
dec
out
pop
mov
inc
mov
mov
push
cs
call
lret
fisubrl
cli
fisubl
sub
idiv
pop
dec
cwtl
les
loop
cli
add
and
out
call
sahf
paddd
xchg
in
jbe
cmp
jg
push
cmc
addb
add
mov
mov
cmp
sub
rorl
ret
sbb
add
test
or
mov
mov
jle
lods
movsb
add
mov
lds
pavgw
add
clc
inc
adcb
mov
outsl
add
sahf
in
stos
pop
arpl
sbb
or
push
add
sahf
sarb
loopne
leave
push
fiadds
jns
ret
add
mov
and
lds
popa
push
add
in
cli
and
pop
push
jb
add
push
icebp
loopne
cmp
push
jb
cli
add
cmpl
add
xchg
jnp
push
out
pop
fistpll
mov
loope
inc
push
dec
xor
ds
test
add
lcall
add
fsubp
sbb
pushf
xchg
and
and
add
add
out
add
add
inc
xor
jecxz
mov
iret
push
shr
stc
dec
lret
mov
stc
adcb
xchg
lea
mov
das
ds
xchg
add
lods
iret
ficoms
clc
add
push
add
cmp
jp
loopne
sbb
mov
jge
lcall
fcmovnb
shll
xchg
in
adc
or
sub
sbbb
aaa
inc
inc
addl
int3
aad
adcl
inc
sbb
popf
mov
jne
add
add
pop
inc
xchg
imul
les
mov
cld
loop
inc
add
mov
fyl2xp1
xchg
adcl
jbe
fs
mov
cltd
adc
pusha
pop
xchg
pop
das
xor
rorl
cmp
mov
loop
leave
pop
scas
jge
mov
jp
add
mov
into
inc
add
lods
dec
add
or
add
xor
mov
movsl
std
fsubs
add
je
add
insb
cmp
nop
add
add
add
dec
mov
mov
or
sti
xor
pop
xchg
out
mov
cmp
ljmp
push
sub
aas
addl
hlt
imul
mov
add
add
cli
xor
push
inc
ja
mov
pop
dec
add
imul
add
add
add
and
lods
arpl
cmp
bound
das
add
dec
pushf
addr16
aad
sahf
cmpsl
push
add
ss
xchg
paddsb
add
inc
mov
rcrb
sbb
or
out
mov
loopne
inc
xchg
testb
popf
inc
add
push
ret
push
test
mov
push
inc
and
sub
mov
stos
dec
and
and
int
cmpsl
push
add
mov
adc
in
xor
jmp
push
mov
xchg
movl
jbe
jne
aaa
add
jmp
jns
jge
inc
pop
movsl
xor
push
push
in
imul
jge
sarl
cmp
push
add
incl
jle
in
inc
add
add
fldt
movb
mov
mov
sahf
xor
lret
add
imul
mov
into
push
xor
pop
pop
push
loope
cltd
ja
das
cmc
xchg
divb
pop
notl
jns
xchg
add
enter
insl
push
add
mov
fiaddl
in
sbb
addr16
pop
adc
pop
fwait
popa
mov
out
adc
jg
pusha
mov
pop
pop
jle
and
dec
mov
sub
push
adc
lret
mov
adc
inc
pop
stos
pop
scas
push
xchg
add
cmpsb
movsb
sti
cmp
clc
dec
mov
adcb
dec
mov
push
jne
lods
cmp
test
adc
pop
push
data16
jp
test
or
inc
inc
jg
add
add
cmpsl
inc
or
scas
sub
dec
jnp
jo
test
xchg
cwtl
je
add
add
mov
hlt
mov
pusha
sbb
std
push
notb
arpl
or
cwtl
adc
das
mov
mov
adc
sub
and
and
mov
add
mov
pop
mov
xchg
add
les
or
popf
add
flds
cmp
add
lahf
inc
adc
out
add
jge
test
pop
dec
jo
or
and
sub
rcll
pop
incb
inc
pop
add
popf
or
mov
push
cmpsl
add
jne
call
add
pop
mov
adc
stos
shll
fsubrl
jno
add
out
ficomps
jle
mov
insl
or
push
inc
test
rolb
mov
dec
pop
push
sbb
outsb
jo
in
test
clc
popf
pop
xchg
rcl
add
cmp
notl
js
ss
xor
loope
add
adc
xor
add
jae
out
jecxz
push
inc
push
dec
scas
xlat
loop
out
movsb
mov
mov
fcomps
mov
icebp
movsl
add
pusha
push
push
and
clc
jae
or
mov
xchg
cmp
dec
into
rol
fdiv
rcr
add
add
and
test
mov
and
cmp
call
add
jle
add
ss
xor
sbb
dec
enter
rclb
pop
negl
jle
lret
scas
push
jns
das
add
mov
xchg
arpl
out
shlb
test
xchg
cli
mov
lods
and
movsl
jnp
sbb
inc
add
mov
aaa
lods
add
add
mov
fcoml
add
dec
pop
or
push
mov
or
jne
add
add
jge
inc
add
js
fldenv
adc
push
scas
jl
xchg
addb
push
add
inc
dec
add
mov
or
ret
mov
lds
dec
push
jle
lea
push
xor
sbb
dec
dec
aaa
or
mov
push
add
sub
sbb
lret
xchg
xor
pop
xchg
ljmp
xchg
mov
nop
mov
sti
pop
shl
icebp
daa
shrb
add
add
in
int3
pop
ljmp
out
sbb
mov
clc
sti
push
loopne
add
les
pop
pop
mov
sbb
jo
add
mov
sbb
sbb
repnz
add
add
xchg
je
aas
call
inc
popf
mov
adc
add
add
push
sub
call
jg
out
pop
add
cmp
dec
cmp
cmp
pop
pop
push
ficompl
sbb
es
dec
push
and
rcll
sti
adc
add
jl
out
cmp
aas
adc
fucomp
fiaddl
or
in
add
push
cli
adcl
sbb
pop
fs
mov
enter
xchg
not
push
add
scas
mov
add
push
loopne
out
mov
js
in
sub
add
lret
imul
fs
lcall
test
repz
mov
sbb
mov
lahf
adc
arpl
mov
fnsave
cld
sti
and
scas
ret
in
mov
imulb
add
adc
loopne
lds
pop
add
mov
dec
pop
jae
cmp
jmp
aaa
add
sti
sub
mov
lea
fs
and
mov
inc
or
leave
mov
cmp
mov
pop
pop
add
add
pop
add
add
jmp
sub
imul
add
in
iret
add
fsts
sahf
add
in
rclb
jb
pop
xchg
or
lds
ds
mov
bound
add
push
cld
cmpsb
hlt
lret
xchg
cmpsb
in
in
sub
lcall
mov
jle
mov
jl
repnz
fptan
mov
sub
addr16
in
lret
fstpl
inc
ret
imul
add
in
xchg
mov
sub
dec
clc
std
pop
mov
lret
cmpsl
es
push
out
pop
mov
jecxz
orb
pushf
push
js
mov
std
or
mov
add
std
add
popf
sub
add
in
loope
int
sub
inc
add
mov
xor
scas
stos
lock
pop
mov
add
add
jle
clc
add
sub
loop
bound
aam
mov
mov
pop
add
jg
or
in
jnp
aas
fisttpll
fnstenv
stos
jl
inc
das
shrb
mov
add
je
xor
jbe
push
add
fiaddl
or
in
add
mov
sub
and
sbbl
aam
adc
aad
aad
sub
negl
repnz
sbb
push
dec
jbe
or
push
cmpsl
popa
icebp
popa
mov
and
xorb
loop
stc
add
and
cs
jmp
mov
ds
add
in
fcoms
dec
rorb
mov
add
pop
loope
ds
cmp
mov
inc
and
pop
inc
push
and
add
popf
sub
pop
inc
xchg
pop
pop
sbb
pop
xor
push
int
mov
add
mov
push
les
xchg
test
jg
fisubl
xchg
js
xchg
adc
add
mov
stc
mov
add
pop
in
insl
dec
add
add
mov
arpl
dec
mov
cmp
mov
shll
fld
lods
jge
add
inc
lret
scas
icebp
sub
add
sarl
sbb
pop
cmp
xchg
pop
mov
pushl
mov
add
push
or
popa
xor
add
xchg
dec
pop
fadds
mov
add
lea
cmp
pusha
xchg
lahf
xchg
lods
or
cwtl
fcompl
gs
pop
cmp
ficoms
add
add
inc
xor
cmp
cmp
nop
dec
cld
lock
pop
pop
inc
int3
push
mov
xor
sub
cmp
xchg
mov
mov
cmc
add
jl
xchg
aaa
aas
or
fstpt
mov
rclb
ds
subb
jbe
mov
mov
pop
push
ljmp
mov
jb
jnp
iret
repnz
add
adcb
cmc
jle
sahf
clc
mov
lods
pop
shlb
pop
push
add
dec
jecxz
addb
xchg
sbb
stc
dec
jmp
mov
push
pop
push
add
jl
push
stc
int
add
loope
ja
pop
test
push
cmpsl
add
int3
mov
int
hlt
mov
pop
pop
dec
push
popa
mov
xchg
out
cli
test
xchg
les
push
jecxz
add
and
les
sub
and
mov
pop
add
adc
jb
or
or
xor
fiadds
jno
test
and
nop
lahf
mov
je
add
jnp
push
add
inc
xchg
insl
dec
and
xor
repnz
int
cli
mov
pop
dec
or
fdivrs
or
xor
xor
int3
dec
push
mov
inc
xchg
dec
inc
sbb
mov
dec
ja
out
jb
pop
cmp
outsl
and
loop
outsb
and
cs
mov
adc
add
jg
adc
in
xor
mov
xor
push
or
fstps
repnz
inc
adc
rcl
sub
sbb
fists
gs
add
roll
inc
add
popa
movl
push
add
insb
repnz
and
mov
add
add
pop
push
aas
pushf
cltd
adc
lahf
jmp
outsl
jns
xchg
cld
add
imul
sbb
das
mov
add
xor
sbb
testl
jns
mov
movsb
xchg
js
or
lret
dec
data16
mov
cli
xor
repnz
pop
cmpsl
nop
cmp
or
cld
pop
decb
inc
add
inc
ret
fs
pop
daa
shrb
sbb
sar
inc
inc
add
mov
add
aad
aam
lods
push
add
out
into
add
leave
mov
fisttps
inc
cmc
xchg
cld
sbb
sbb
inc
jge
loope
add
inc
out
add
pop
bound
jge
pop
ss
andb
dec
or
add
sbb
adc
popf
inc
ja
lea
cmp
out
mov
push
loopne
sbb
aam
cmc
faddl
xor
add
pop
xchg
testb
test
pop
cmp
push
cmp
cli
ja
dec
fcmovnu
shlb
es
xor
mov
add
jg
add
jmp
add
les
add
into
cmc
loopne
ljmp
sub
sarb
pop
push
inc
mov
out
add
mov
add
int3
out
pop
push
or
lret
lods
aam
mov
add
movb
dec
shll
push
ret
cld
mov
mov
adc
jg
pop
decb
jl
add
or
cld
sub
add
mov
insb
or
xor
dec
add
pop
fistps
xchg
aas
jns
enter
aaa
shlb
jae
add
push
test
test
popl
adc
in
loop
push
inc
stos
mov
add
test
stos
test
sbb
dec
or
pop
cmp
jmp
add
int3
repz
test
int3
test
add
sub
or
dec
mov
mov
add
loop
insb
pusha
push
gs
and
inc
mov
adc
cmp
shrb
out
or
inc
add
sti
add
add
pop
xchg
mov
push
movl
loope
or
mov
mov
sbb
addr16
xchg
out
cmp
xor
jg
jg
sarl
hlt
push
push
or
add
add
imul
add
mov
rcrb
mov
test
call
bnd
pusha
lret
jb
movsl
inc
mov
lret
ljmp
icebp
pop
or
js
dec
add
xor
aas
scas
std
scas
fcomps
dec
in
adc
lods
mov
mov
jo
and
adc
cld
cmp
loopne
adc
push
push
push
je
mov
ret
dec
add
sub
addl
nop
xchg
pop
xor
adc
push
adc
add
push
hlt
add
mov
outsb
sub
cmp
adc
xchg
xchg
shll
xchg
loope
clc
sbb
adcb
inc
mov
mov
pop
movsb
add
xor
push
add
dec
lcall
sahf
add
mov
js
stos
xchg
inc
es
mov
xchg
mov
out
movsb
or
jno
sub
add
cmpsb
enter
push
add
push
sarl
lods
add
aad
popf
leave
mov
lcall
sbb
add
pop
mov
add
lea
bound
lods
jbe
and
imul
scas
sub
out
mov
mov
cmp
lahf
lcall
jecxz
add
repnz
and
nop
sub
rcrb
imul
xchg
dec
add
and
aaa
mov
pop
pop
mov
repnz
iret
int3
shl
or
push
dec
mov
je
sub
add
add
dec
sarl
iret
pop
ljmp
jmp
scas
mov
xchg
test
outsb
fadds
add
xchg
cli
data16
imul
cs
pop
xchg
mov
das
pop
mov
add
add
add
jnp
mov
test
jbe
test
xchg
out
lds
outsl
das
add
sbb
mov
push
xchg
add
popa
lods
add
mov
rorb
push
scas
cltd
add
adc
push
int3
imul
sbb
pop
fbld
push
loope
imulb
add
les
adc
insb
or
jne
mov
pop
or
inc
cmc
mov
es
add
add
add
adc
xor
adc
pop
and
lahf
in
repnz
test
pop
and
dec
jle
push
sub
test
push
aam
sub
fcmovne
jno
and
in
je
xchg
ret
mov
or
lcall
push
add
mov
pop
ja
movsb
add
add
push
test
mov
stc
popa
pop
xor
adc
xor
rorb
in
test
je
scas
imul
js
decl
sbb
cwtl
and
and
mov
pop
jbe
add
out
add
inc
ja
data16
repnz
imul
jae
xchg
jo
dec
shlb
js,pn
cld
add
sar
jl
cmpsb
lret
scas
or
daa
pop
add
es
mov
push
add
lods
nop
add
add
pop
cmp
hlt
mov
jne
in
test
push
adc
jmp
pop
stos
dec
add
sbb
add
out
loopne
sarb
lahf
jne
jns
mov
add
pop
or
test
add
add
add
imul
lea
sbb
aaa
std
adc
nop
add
cmp
pop
push
fdivr
mov
js
mov
repz
sub
adc
pop
add
xor
add
add
ret
shrb
outsl
test
cmp
sub
jae
in
dec
mov
push
cmp
lret
add
add
mov
fmull
push
sbb
jb
xor
orb
add
out
add
test
add
das
add
aam
mov
in
ret
aas
jecxz
sub
popa
or
add
filds
cmp
add
add
sti
sbb
lahf
jp
xor
xorb
insl
pop
ret
fmul
push
inc
roll
rcll
push
add
jecxz
dec
mov
imul
fbstp
fsts
shrl
dec
xchg
bound
pusha
call
mov
shl
inc
add
mov
negb
push
aaa
movsl
fsubs
jmp
add
jge
sbb
add
out
sti
call
add
add
cmpsb
lret
inc
jb
leave
lahf
mov
arpl
jg
xor
xorb
mov
in
add
pcmpgtw
cs
imul
mov
push
add
and
insb
aas
add
jmp
add
cmp
inc
sub
js
xchg
jno
adc
mov
sbb
pop
add
adc
inc
sub
mov
scas
add
jns
ds
add
fdivrl
out
adc
enter
mov
dec
mov
mov
cltd
lock
ret
sysret
fwait
je
dec
iret
and
jnp
insl
jle
popa
notl
sbb
imul
add
repz
add
ret
sub
iret
nop
add
aam
js
push
push
insb
scas
add
mov
xchg
ret
xor
lcall
xor
add
cmp
in
mov
rep
out
jmp
push
es
xchg
fiadds
cmp
jns
add
das
fisubl
loopne
add
pop
jns
sbb
cmpsl
push
add
loope
mov
fdivr
cltd
fiadds
aam
loopne
adc
je
ds
add
xlat
xorb
sbb
xor
mov
push
mov
in
clc
inc
repz
mov
and
inc
lds
leave
xor
aaa
in
add
mov
lods
lcall
inc
pusha
js
add
inc
lahf
add
gs
sti
xor
add
jb
cli
sub
push
into
fcom
mov
inc
lcall
add
das
push
lahf
lret
mov
addl
fwait
xor
xchg
dec
cwtl
inc
adc
into
add
or
out
addl
pushf
sub
add
mov
add
fldcw
jmp
popf
test
in
ss
clc
push
jno
fildll
lret
add
ds
cmp
fsubl
xor
fstpt
pop
dec
cltd
xor
push
insb
insl
sti
push
or
dec
sar
sbb
mov
xchg
rcrb
add
mov
xor
fadds
cmp
add
sar
les
rclb
jbe
sub
fstl
popa
mov
fsubr
faddl
mov
add
int
and
imul
movsl
mov
mov
orb
push
outsl
xor
add
loope
mov
add
cmp
addb
pop
jmp
sbb
mov
les
jnp
js
adc
mov
inc
adc
flds
cmp
mov
rcll
jp
js
mov
push
movsb
icebp
xchg
push
xchg
mov
add
das
cmp
or
mov
xchg
and
mov
jb
add
mov
push
jecxz
or
aad
int3
adcb
and
fnstenv
adc
stos
loope
mov
add
sub
pop
lds
add
lods
inc
mov
xor
es
fisttpl
std
xor
std
mov
lea
mov
mov
es
xchg
mov
push
push
jg
and
push
push
xchg
lcall
out
or
filds
push
push
jl
js
int
dec
jp
add
iret
add
or
popf
test
mov
add
jbe
or
int
add
out
icebp
adc
jge
icebp
push
dec
add
pop
out
xchg
scas
xchg
jmp
cmc
arpl
xor
je
sub
repz
and
imul
add
xchg
out
sub
xchg
dec
xor
adc
clc
rcrl
fistpl
xor
popa
ret
roll
addl
xchg
testb
fsubrl
cmp
mov
mov
mov
sbb
add
aaa
push
popf
push
clc
stos
cmp
push
aam
pop
add
in
je
stos
stc
rorb
mov
rcr
jg
sub
out
jbe
stos
add
adc
cmp
pop
push
sbb
and
add
xor
xchg
pop
pushf
ret
rorl
fidivrl
mov
push
cmpsl
sub
loopne
adc
fildl
xchg
into
push
fistps
add
adc
add
rcr
mov
andl
sub
dec
xchg
mov
aam
sub
sbb
int3
imul
xchg
sub
jmp
les
not
xor
les
and
push
mov
add
add
mov
xor
mov
sahf
lods
and
push
es
dec
cs
sub
daa
das
dec
push
insb
xor
adc
lea
js
add
lcall
dec
add
inc
or
push
imul
stos
fstpt
cwtl
add
push
sub
jmp
xchg
dec
xor
lock
dec
dec
out
rolb
scas
fstps
lock
dec
fst
add
xchg
aad
inc
push
adc
sub
cmp
pop
jno
cltd
test
mov
sti
xchg
add
mov
neg
lods
sahf
pop
pop
stos
mov
lods
mov
cmpsl
or
aam
scas
add
popf
cmp
add
test
addr16
repz
add
xchg
push
jae
sbb
push
add
add
mov
test
or
cmp
xor
loope
loopne
add
ret
lahf
sbb
push
push
in
xor
bound
dec
jge
arpl
dec
inc
mov
mov
xor
hlt
add
out
add
es
rcrl
aas
call
pop
mov
mov
outsb
push
xchg
inc
in
dec
cmp
sbb
addl
scas
inc
jnp
mov
add
in
jg
jg
out
push
imul
imul
add
shll
push
adc
jb
test
lret
sub
pop
add
add
sbb
loope
add
das
sbb
inc
sti
fadds
dec
add
add
push
push
sarl
sarb
sub
inc
cmp
popf
jae
pop
mov
xor
add
aad
les
pop
push
add
hlt
sti
pop
xor
mov
add
dec
or
fs
gs
popa
dec
lahf
enter
jns
out
daa
stos
mov
dec
shll
add
ret
cltd
or
pushf
inc
rolb
pusha
or
add
fists
test
adc
mov
lds
jge
add
sarb
cli
mov
sbb
mov
add
push
sub
sbb
vfrczsd
rorb
xchg
add
sahf
inc
and
xchg
xchg
add
and
bound
fsubrs
adcl
inc
dec
mov
shrb
mov
mov
xlat
repnz
add
std
push
mov
repz
add
test
orl
adc
ficomps
mov
mov
sub
add
xor
push
test
jp
aaa
ss
stc
int3
and
add
add
lock
push
mov
cmpsb
mov
push
sub
dec
add
popf
in
sbb
jl
jle
xchg
or
dec
pop
xor
mov
iret
adc
cwtl
inc
shlb
mov
out
mov
movsb
inc
fdivrl
aas
pop
popf
js
mov
xlat
in
loop
aam
add
mov
mov
xor
pop
std
cmc
push
sub
mov
call
add
push
in
cmp
cmp
xchg
xchg
orl
add
aaa
jae
push
outsw
jno
add
sbb
jecxz
cmpsl
sbb
lock
in
stos
mov
in
add
adc
add
pushf
js
sbb
inc
xor
add
and
add
add
cmp
lahf
jl
jae
add
verr
dec
mov
rolb
sub
js
add
dec
lock
test
popa
add
arpl
mov
in
stos
in
adc
mov
xor
mov
test
push
out
sbb
stc
rcll
pusha
cmp
lock
add
add
shrb
add
pop
pop
jbe
dec
jbe
sub
inc
jo
stos
add
int
add
aam
add
aaa
sbbb
xor
jge
mov
mov
add
loopne
imul
and
cwtl
mov
aas
xchg
dec
cmp
jecxz
adc
ret
mov
xor
insb
je
rorb
add
jns
insl
inc
and
fwait
nop
aas
clc
add
add
ss
inc
xlat
jg
dec
mov
or
mov
xor
mov
xchg
mov
and
jae
add
outsb
ljmp
add
jns
in
je
jbe
stos
mov
push
add
mov
xchg
jo
add
cmp
ljmp
jge
jg
fiaddl
jl
sbb
add
pop
cmpsl
mov
rolb
xor
cli
push
jg
imul
jb
lret
hlt
in
add
push
gs
add
or
xlat
imul
icebp
jmp
jb
in
int3
jo
add
mov
sub
rcr
add
cltd
add
rcll
mov
push
sub
insl
imul
scas
add
stos
int
add
sub
push
add
das
incl
inc
aad
aaa
jl
stos
add
testl
add
test
cmp
lret
dec
or
rcll
cmp
jnp
das
mov
pusha
rcrl
in
sub
sbb
into
mov
addb
roll
sub
nop
in
mov
mov
add
xchg
add
adc
lds
mov
mulb
nopl
or
out
testl
add
xchg
out
add
cmp
inc
sbb
mov
sbb
add
push
test
sub
int3
cltd
test
fsts
add
jne
testb
inc
xor
sbb
add
sub
add
add
pop
cmp
xchg
ficompl
loope
add
xchg
std
lret
cmpsb
insb
adc
or
lock
push
or
mov
mov
mov
push
mov
inc
add
insb
pop
je
jge
jp
push
dec
add
inc
push
add
push
sbb
adc
pusha
adc
clc
mov
test
ds
add
add
inc
add
out
xchg
pop
fs
jg
aaa
add
xor
out
or
sub
addl
xlat
dec
mov
mov
daa
jb
mov
and
add
popf
stos
fsubl
fldl
or
xchg
shlb
lods
sbb
mov
shll
fs
call
mov
add
add
add
cmc
jno
stc
pop
ret
push
fmuls
pop
lret
in
cmp
sub
inc
leave
pop
add
lods
xor
and
cmp
cltd
addb
and
mov
fwait
add
xor
add
push
dec
ds
icebp
inc
ds
cmp
mov
push
jecxz
push
or
aas
fsubrl
xor
fstpt
pushf
mov
icebp
sbb
loopne
add
call
loope
fnsave
sbb
mov
movl
cld
add
push
movsb
das
repnz
pop
sub
fwait
jge
pop
add
dec
icebp
add
test
mov
cmc
xor
sub
lock
xor
fdivrl
pop
or
mov
lock
sbb
popa
push
sar
xchg
sub
sub
adc
pop
mov
out
or
and
mov
mov
subl
mov
int
imul
add
jbe
adc
push
adc
or
jg
cmp
add
add
jno
popa
or
mov
pop
add
imul
in
adc
xor
pusha
mov
or
sti
pop
adc
ljmp
aam
pop
cmc
push
aas
add
dec
in
mov
dec
add
pusha
inc
scas
jl
mov
out
int
jae
test
add
and
movsb
jg
inc
cmp
cli
jl
leave
ja
inc
cmpb
cwtl
cs
test
loop
pushf
cld
call
add
lret
cmpsl
mov
outsl
or
dec
and
inc
mov
ret
jno
sbb
and
jae
popf
mov
inc
add
jmp
lods
pop
int3
push
dec
dec
xor
repnz
pop
mov
leave
mov
dec
cwtl
adc
sbb
into
add
mov
sub
inc
add
dec
es
jnp
pop
fsubrs
xor
repnz
push
or
pop
push
cmpsb
jl
cmpsb
jmp
les
cmc
gs
add
dec
add
mulb
idivl
add
xchg
xor
push
jns
mov
add
out
adc
iret
push
add
xchg
xchg
add
sti
cmp
pop
aas
add
add
xchg
pop
mov
sbb
fadds
jg
fisubrl
add
divl
cs
sbb
or
xchg
add
sub
pop
les
es
les
insl
test
call
mov
aas
pop
add
push
mov
rcrb
inc
sub
pop
mov
or
mov
add
add
ret
lods
fisubrs
sub
jl
clc
or
mov
mov
bnd
lock
jle
subl
inc
test
inc
mov
loop
mov
or
lds
cmp
test
ja
arpl
call
xchg
arpl
sbb
cmp
rorb
dec
inc
add
dec
lock
test
stos
xchg
jno
adc
mov
mov
mov
aaa
std
mov
add
leave
rclb
clc
rcll
mov
add
je
cmp
je
add
mov
testl
mov
mov
fnstsw
add
dec
mov
test
mov
push
addb
add
push
test
and
xlat
roll
pop
stos
call
push
inc
out
pusha
repnz
mov
push
ud2
in
icebp
cmp
inc
add
push
jae
iret
lods
rcrb
sub
add
add
in
mov
fdivr
sbb
jge
add
add
iret
sub
jecxz
dec
dec
fs
or
xchg
sub
outsl
stos
sbb
jp
cld
mov
add
jbe
data16
test
push
add
jno
xor
add
repz
pop
xchg
cmpl
mov
push
xchg
fsubl
jne
jbe
ljmp
mov
push
push
lods
xor
dec
outsl
and
lret
scas
std
adc
mov
imul
dec
mov
adc
xchg
loope
insb
sahf
cmp
xchg
mov
and
in
daa
add
xchg
test
jns
decb
sub
pop
mov
lahf
ja
sbb
mov
add
aaa
es
insl
xchg
ret
dec
dec
pop
jp
mov
pop
mov
add
mov
cmp
test
loope
mov
add
loopne
jle
cmp
jp
xchg
in
fisubl
gs
dec
daa
fcmovnu
inc
cmp
add
pop
push
lods
mov
mov
adc
insb
data16
add
incl
add
jl
andb
and
repz
add
cmpsb
dec
add
add
addr16
and
fs
ljmp
dec
add
push
pop
add
add
add
add
cs
mov
insl
add
pusha
add
jbe
cmp
or
pop
hlt
sub
push
out
adc
daa
add
iret
cmp
jno
cmp
mov
jle
push
mov
dec
mov
xor
outsl
add
xor
aas
add
add
out
enter
mov
inc
xchg
push
mov
cmp
in
xchg
jns
xor
xchg
ljmp
lret
add
ljmp
jb
add
sbb
jne
pop
cmp
add
pop
xchg
shl
or
mov
adc
mov
xchg
xchg
pop
popf
loop
int
cmc
mov
mov
push
stos
add
lock
leave
daa
cltd
outsl
popf
jo
test
gs
pop
sub
cmc
mov
add
and
adc
xchg
pushf
cltd
lea
pop
xchg
add
or
cld
pushf
jge
call
mov
outsb
push
jo
pop
outsl
dec
loop
jge
cltd
push
popf
jg
scas
adc
add
add
mov
test
lods
jo
scas
fs
xchg
add
xor
inc
dec
push
negl
cld
mov
push
inc
movaps
pop
sub
mov
ja
dec
aam
stos
leave
popl
adc
xor
daa
in
sub
dec
int
lret
leave
mov
lcall
movsb
jne
ret
add
mov
fwait
neg
jne
pop
and
insb
mov
adc
add
or
daa
lcall
mov
adc
xor
and
add
or
negb
movsl
repnz
jmp
leave
add
add
xchg
mov
inc
cmp
shll
ds
clc
add
add
scas
out
out
int
dec
mov
mov
enter
jecxz
dec
mov
addl
pushf
add
shlb
mov
aas
push
adc
cmp
setns
pop
adc
push
push
or
cld
orl
push
gs
bound
in
dec
add
mov
inc
dec
mov
cmc
jne
iret
jecxz
cli
add
inc
add
add
jae
rcrl
icebp
incl
push
add
pop
add
daa
mov
js
sbb
inc
push
fcompl
add
addr16
xlat
daa
sti
jecxz
fimull
mov
xchg
add
or
fisubs
inc
sub
loope
sub
push
mov
dec
cmp
add
xchg
add
sbb
push
push
add
xor
es
int
pop
xor
mov
mov
mov
xor
bound
mov
iret
or
sbb
pop
cmpsb
sti
dec
mov
add
out
dec
mov
cwtl
popf
add
pop
nop
push
les
test
push
testb
jbe
in
test
add
subl
and
pop
mov
fimull
mov
xlat
cmc
pushf
adc
icebp
lcall
cmp
daa
pushf
scas
paddusb
add
imull
or
divl
sbb
push
invd
ret
jno
jmp
pop
imul
addb
int
icebp
dec
jge
add
mov
push
xchg
adc
add
xor
adc
sub
icebp
repnz
push
mov
negb
js
ljmp
xchg
and
xchg
jle
mov
enter
lret
imul
add
aas
mov
adc
sub
push
xchg
add
cmc
add
xchg
repz
add
cmp
dec
movsl
add
pop
rcrl
mov
push
inc
or
sbb
xor
lret
push
mov
lea
jle
out
push
movsl
rcrb
add
or
or
in
sbb
pop
into
scas
sbb
dec
cld
pop
iret
push
outsl
fidivl
iret
mov
mov
sub
lods
add
stc
adc
frstpm(287
and
enter
and
lahf
jno
cli
in
add
rcrl
ret
mov
insb
add
sti
subl
cmpsl
pop
fdivrl
mov
dec
andb
jp
mov
inc
adc
mov
mov
push
sub
cli
cmpb
aad
cwtl
xor
or
lahf
mov
add
sbb
sahf
push
scas
mov
cmpsb
ja
xchg
adc
lods
pushf
lods
cmp
aam
add
mov
mov
sbb
aaa
dec
add
pop
mov
jl
stos
push
out
ret
sbb
push
pop
aam
sahf
pop
fidivrs
std
pop
add
shr
out
sbb
pop
das
jne
out
add
pop
lock
ficompl
pop
add
mov
imul
add
ret
int3
add
xchg
div
sbb
xor
add
scas
add
aam
add
add
add
xchg
adc
sbb
imull
data16
jb
mov
xchg
shll
cmp
mov
add
ret
aam
add
add
add
and
lret
test
stos
inc
cmp
add
sbb
lret
xchg
mov
xchg
cmp
sub
push
or
cmp
mov
add
add
sbb
mov
push
push
aad
pop
push
add
add
mov
loopne
cmp
das
cmp
mov
je
and
add
dec
mov
stc
lds
outsb
cli
test
pop
jne
xlat
mov
aam
xchg
mov
dec
add
iret
or
xchg
or
mov
sti
arpl
jne
or
push
dec
sub
ljmp
xor
xorl
in
aaa
lds
xor
pusha
push
lds
pop
sub
add
mov
insb
jb
jmp
xor
cs
or
fstpt
add
add
cli
adc
lock
std
push
push
mov
jp
add
stos
lahf
xchg
add
out
dec
sbb
pop
cmp
inc
mov
push
add
das
mov
add
mov
dec
and
sti
jb
ds
lds
inc
and
push
jecxz
jge
std
adc
sbb
sarb
cmpl
add
xchg
fld
add
cmp
add
jl
imul
add
add
jmp
add
add
mov
scas
sub
adc
imull
fmuls
cmpsl
sbb
cmp
add
adc
cwtl
add
in
pop
lahf
cmpsb
movsb
mov
mov
sub
imul
jl
jge
add
or
in
cmp
cmove
pusha
cmp
inc
cmp
add
push
xchg
add
scas
movsb
push
mov
pop
mov
mov
dec
cmp
dec
dec
or
loop
add
cli
icebp
stos
and
fcoms
xchg
out
dec
push
stos
add
imull
ss
xor
pop
loop
push
pop
add
int
addl
adc
mov
fsubrl
lret
dec
dec
pop
jg
notl
rolb
sti
mov
dec
add
insb
pop
jp
jne
inc
loope
leave
arpl
dec
iret
cmp
xchg
lahf
jge
jo
dec
dec
pop
add
adc
add
push
adc
hlt
sub
subl
mov
xchg
daa
or
sbb
add
xlat
inc
add
test
adc
adc
xor
xor
pop
xchg
pusha
stos
movsl
inc
and
jb
inc
cmp
lea
jge
cmp
add
testl
add
pop
es
lea
addb
cltd
xrelease
add
je
rorl
push
push
leave
mov
ja
sbb
shrb
pop
test
sub
add
movsb
jae
add
push
mov
es
adc
mov
xchg
sahf
push
pop
mov
add
dec
mov
ret
add
ret
add
mov
xchg
outsb
cmpsl
shll
sub
jnp
sub
pop
mov
add
ret
int3
inc
outsl
add
ret
ljmp
insb
push
sbb
cmp
add
ret
sahf
add
adc
outsl
pop
idiv
xor
insb
cmp
mov
popf
orb
add
mov
sahf
add
loope
sahf
jae
add
pushf
add
lahf
daa
add
sub
aad
sbb
cld
add
lds
add
pop
mov
jo
call
in
pop
std
lret
add
push
jge
add
leave
insl
add
push
incl
insb
and
pop
pop
cmp
sbb
sbb
rorb
mov
dec
and
test
pushf
xchg
add
adc
mov
add
das
leave
fisubl
aam
loop
mov
xlat
dec
out
adc
pop
popf
sbb
mov
insb
or
js
pushf
jne
inc
mov
fstps
inc
add
mov
add
pop
bnd
xchg
sub
and
hlt
pop
mov
or
mov
push
jno
add
add
dec
dec
push
aas
adc
pop
cld
leave
roll
lea
add
mov
enter
add
test
jo
add
jmp
sub
jg
repz
lock
or
xchg
shlb
out
mov
test
mov
fwait
pop
jmp
pop
xor
leave
in
add
data16
roll
cltd
ds
mov
sub
mov
iret
jnp
iret
add
add
sarb
cvtdq2ps
add
add
sbb
sbb
sarl
sbb
jns
call
aaa
mov
jns
je
xchg
add
and
rcrl
out
stos
sub
loopne
sbb
xor
inc
add
push
cmpb
inc
or
nop
stos
sbb
xor
dec
daa
adc
movb
imul
push
mov
hlt
and
cld
gs
add
mov
xchg
mov
fstpt
es
push
jo
mov
push
adc
jl
aad
add
jmp
adc
add
or
add
push
pop
imul
fdivrs
mov
arpl
push
insb
cld
add
rcrb
mov
fldl
dec
mov
lahf
xor
sbb
pusha
xchg
add
aaa
mov
push
add
fstpl
mov
pop
and
les
push
es
test
cmp
adc
inc
mov
add
or
mov
scas
add
jno
inc
add
cmp
pop
ret
xor
mov
repnz
pop
add
push
scas
xor
push
loopne
aaa
xchg
icebp
cmc
jnp
mov
orl
das
mov
inc
cvtpi2ps
adc
pop
pop
jno
shrl
test
add
jb
int3
inc
or
aas
add
or
insb
push
sbb
shl
add
rcrb
add
loopne
mov
insb
mov
out
or
mov
addr16
int3
add
xor
add
xchg
xchg
out
push
cld
addl
add
mov
roll
in
xor
push
mov
cmp
push
add
mov
ja
notb
add
xchg
inc
cmp
stos
mov
imul
fwait
and
add
mov
mov
ficomps
fwait
lods
lret
pushf
adc
inc
jbe
cmpsl
in
gs
mov
stos
rolb
cltd
fmull
add
add
add
sub
addb
scas
push
jge
aam
add
fdiv
add
xchg
xlat
jg
sub
iret
and
pop
fst
add
mov
push
cld
mov
jno
bound
daa
sub
jne
outsl
and
rolb
lds
nop
hlt
ficompl
adc
movsb
in
pushf
jmp
push
jp
in
mov
adc
add
in
add
jl
jbe
xor
jb
push
mov
and
xchg
lods
cmp
insb
add
add
sub
jno
fnstcw
add
and
into
pusha
xor
and
out
les
jae
lret
sub
icebp
add
dec
add
out
dec
cltd
and
or
jae
bnd
hlt
mov
jo
inc
hlt
or
movl
add
in
add
sub
or
adc
inc
ja
out
aaa
mov
daa
cmp
stos
and
pop
jmp
xchg
add
hlt
insl
push
inc
xchg
push
xor
mov
add
xor
outsl
add
mov
mov
ss
fcmovnb
add
or
flds
lret
xchg
and
cmpsb
add
sub
add
add
mov
dec
cmp
add
mov
in
faddl
fsubrl
add
out
cmp
add
test
fs
or
dec
iret
push
add
ss
adc
add
dec
insl
out
das
out
inc
inc
fiadds
cmp
rorb
mov
mov
scas
shlb
popa
lods
or
mov
adc
adc
mov
in
movsl
add
in
stc
add
gs
std
pop
adc
xchg
lds
cmp
testl
jne
sbb
push
xchg
pop
rolb
test
sti
stos
out
ret
repz
add
jb
push
lea
fnsave
or
mov
xor
cltd
jg
cmp
or
fbstp
test
jmp
or
sbb
sub
cwtl
push
add
loope
cmp
cmp
adc
jno
add
adc
addl
data16
daa
popa
jae
xchg
jns
inc
or
mov
lock
and
xor
cs
cs
pop
xchg
mov
inc
adc
addr16
shlb
pop
outsb
gs
xchg
cmp
add
outsb
sldt
sbb
xchg
mov
add
cmp
addr16
and
add
push
or
dec
mov
and
adc
arpl
push
mov
loop
call
add
loop
ret
add
and
mov
jle
xor
add
xor
and
fiaddl
xchg
sbb
shrl
add
fcoml
mov
insb
add
std
jne
js
xchg
add
mov
xor
push
fs
cli
sub
mov
and
inc
dec
and
es
dec
fcomps
xor
aaa
data16
adc
outsb
pop
pushf
je
add
add
fldl
jmp
and
sub
push
int
xchg
mov
jns
adc
dec
imul
int
pop
sub
push
mov
repz
add
add
jmp
loopne
pop
not
sbb
sti
sub
add
push
pop
movsb
push
jo
xchg
inc
movsl
mov
dec
jmp
outsl
push
lock
mov
xchg
push
xlat
imul
je
ljmp
mov
outsl
and
repz
add
cltd
nop
pop
cmp
pop
pop
jne
pop
std
sub
int
push
sub
add
gs
sub
mov
add
add
and
cmp
push
sub
add
and
arpl
add
mov
push
xor
push
mov
mov
xor
lods
push
adc
mov
hlt
insl
insl
int3
cld
jmp
add
mov
insl
fcompl
fildl
adc
and
int
push
jo
mov
es
or
cmpsb
add
pop
rcrl
mov
movsb
add
push
into
xchg
add
out
push
add
popa
pop
loop
mov
add
fsubrs
jae
je
pop
push
js
hlt
sub
and
aaa
push
xchg
mov
dec
pop
cmpsb
sti
or
lret
add
add
insl
jae
imul
push
jns
push
fwait
stos
adc
cltd
inc
arpl
fdivs
mov
push
add
and
daa
dec
jg
xlat
add
push
add
inc
add
add
mov
outsl
fucomip
adc
das
outsl
sub
rolb
scas
or
in
data16
xor
addb
push
add
push
test
add
add
movb
push
inc
test
clc
nop
mov
add
mov
dec
outsl
xlat
std
outsl
daa
cmp
and
adc
roll
push
cmp
inc
stos
pop
and
fcoml
or
and
subb
je
xor
add
jae
push
inc
and
mov
adc
push
xor
add
loope
xchg
insl
dec
ljmp
inc
incl
fnstcw
sbb
mov
fs
sti
cmc
fimuls
imul
add
mov
push
loopne
lea
loope
scas
and
lret
fmul
cmp
add
cmp
sahf
call
xchg
enter
mov
xchg
cltd
push
xchg
add
add
add
adc
push
push
mov
sub
ffreep
mov
sarl
inc
or
lret
xchg
cmpsl
xchg
ret
das
mov
movsl
int
pop
push
les
jns
add
data16
sub
imul
int
mov
add
fldt
sarb
arpl
aad
fdivrl
cmc
iret
outsl
shrb
add
pop
insl
cli
mov
jno
aam
dec
jp
xchg
add
pop
add
iret
push
jle
push
xchg
or
jecxz
test
inc
xchg
stc
mov
mov
mov
pusha
fiadds
and
add
shrl
xor
mov
movb
out
add
or
idiv
dec
add
addr16
mov
enter
lahf
test
sarl
je
add
int3
ja
mov
stos
xor
lcall
cwtl
cmp
add
push
and
cwtl
add
imul
or
add
jnp
pop
cli
test
pop
push
sbbb
repz
add
pop
adc
mov
sbb
addl
sahf
enter
mov
xchg
fwait
push
mov
fwait
xchg
sub
incb
adcl
pop
outsb
inc
mov
add
mov
add
decb
stos
popa
add
add
jns,pn
add
add
fwait
rolb
ficomps
and
mov
mov
xlat
pop
cmpb
xor
push
inc
in
xor
push
jo
lods
mov
ljmp
out
aad
rcl
out
push
ljmp
push
xchg
push
in
jnp
daa
arpl
inc
dec
jl
es
test
add
mov
pop
pop
addb
add
imul
test
cmpsl
mov
iret
dec
cmc
aam
shlb
imul
notb
pop
jl
push
xor
fwait
dec
push
sbb
in
pusha
cmc
inc
add
sub
jmp
cmp
enter
jbe
fidivrs
sub
add
xchg
jnp
fdivp
add
add
adc
ret
cmp
add
jne
cwtl
loope
xlat
and
mov
inc
inc
popa
push
and
add
xchg
shl
shll
add
add
jnp
jecxz
push
and
add
jb
or
xchg
lods
jno
add
xor
in
push
mov
andb
es
mov
roll
and
add
or
or
sbb
popa
push
scas
xor
inc
scas
andb
sahf
aaa
sbb
jge
cmpsl
lods
cmp
mov
jmp
add
shl
push
dec
add
mov
xchg
mov
fstpl
xchg
mov
pop
aad
pop
rclb
rorb
add
add
jbe
mov
xchg
ja
stc
add
cli
add
add
xchg
lret
hlt
cld
dec
xchg
add
sub
xor
in
adc
outsb
les
rclb
mov
add
add
stos
sti
inc
stc
daa
and
push
add
add
cmc
lret
es
outsb
lret
es
clc
pop
or
xchg
adc
cmpsb
pop
xor
add
xchg
add
mov
xor
push
push
shrb
add
nop
fsubrl
xchg
es
out
pop
out
or
sub
xor
pop
mov
ss
add
aas
in
add
gs
sbb
cwtl
and
lahf
sub
adc
adc
pop
or
movsb
sub
popl
lods
mov
pop
stc
out
bound
add
jge
add
pop
mov
xor
mov
shll
mov
faddl
inc
je
jno
dec
sbb
and
push
dec
cld
mov
sbb
stc
cmp
cli
add
incb
and
cmp
mov
mov
arpl
dec
insl
add
lret
dec
pop
int3
rorl
xor
sbb
cmp
cmpsb
mov
push
xor
cmpsl
lcall
daa
xchg
mov
pop
addr16
insl
fiaddl
sub
jmp
inc
aaa
mov
mov
add
fadds
test
adc
or
out
ror
sbb
add
and
subl
popa
bound
mov
das
test
imul
push
bound
cmp
nop
sbb
push
add
loopne
cmpl
fsubp
iret
mov
sub
cmp
fidivs
in
dec
aas
push
sub
sub
cld
inc
add
mov
xchg
mov
xor
mov
loop
cli
cmpsb
iret
adc
add
push
xchg
and
stos
adcl
and
fdivs
mov
nop
pmovmskb
push
xor
mov
xchg
fdivs
cs
inc
inc
add
add
movsl
std
into
and
sbb
not
jo
je
hlt
aas
mov
repz
mov
mov
push
add
cmp
jnp
sub
stos
mov
add
lret
sahf
xchg
pop
lahf
add
sbb
dec
int3
scas
dec
ja
pop
add
fs
fidivl
mov
roll
insl
orl
nop
cmp
pop
inc
aas
xor
movb
ficompl
iret
xchg
pop
xchg
sbb
ret
sub
imul
jno
add
cmp
sub
jge
add
das
cmpb
add
add
add
mov
add
and
jns
and
sbb
sbb
das
in
add
daa
sbb
lret
mov
stc
add
xor
push
xchg
sbb
dec
cmp
mov
jl
dec
pop
sbb
fists
sahf
insb
rorb
shll
ljmp
outsl
mov
adc
sub
ljmp
adc
jmp
push
enter
mov
loopne
icebp
xor
and
push
xchg
or
jb
mov
or
mov
fstpl
icebp
adc
adc
or
mov
pop
add
inc
sbb
outsb
test
jb
and
sbb
inc
xor
push
mov
add
mov
dec
or
lahf
das
xor
add
clc
cmp
add
lahf
pop
in
jne
out
add
or
add
pop
xchg
mov
mov
xchg
pushf
imul
call
and
xor
push
loop
pop
mov
adc
mov
push
xchg
add
dec
sbb
push
add
add
jp
rcrb
pushf
into
push
and
cmp
push
leave
bound
add
je
sub
divb
cltd
add
add
add
lahf
inc
adc
shlb
nop
imull
and
out
sbb
out
and
mull
inc
iret
xchg
inc
mov
das
pop
or
cmc
out
jp
jo
add
into
out
xchg
in
in
stos
je
add
ljmp
mov
xchg
pop
add
pop
cli
add
mov
push
mov
add
add
add
dec
filds
cmpsl
dec
cmc
jge
push
add
mov
push
jo
jl
jo
dec
jle
sbb
dec
add
inc
push
out
push
mov
push
sbb
pop
sub
roll
popf
mov
sbb
push
push
cmp
or
sub
mov
add
repz
dec
cmpsl
push
cmp
add
fmul
add
push
jl
lock
sti
jle
ljmp
loope
push
mov
jl
mov
addr16
push
and
mov
push
mov
mov
cld
icebp
out
xor
inc
iret
inc
shlb
sub
cmp
push
stc
and
in
add
mov
mov
stos
andb
xchg
adc
fildl
jb
nop
lahf
aam
push
lods
mov
out
outsl
mov
data16
pop
sbb
sub
push
inc
mov
adc
es
cmp
add
ja
test
cmp
mov
xlat
sbb
xor
jp
sbb
sbbl
loope
push
mov
adc
clc
cmpsl
inc
xor
add
outsb
add
stos
aad
insb
add
sar
call
or
cltd
test
les
clc
xchg
jecxz
cmpsl
add
clc
pop
push
out
insb
add
push
or
cmpsl
xor
das
mov
inc
sahf
or
jg
jne
jbe
push
add
xor
push
add
add
sbb
dec
add
pusha
xor
inc
inc
sub
add
sbb
sahf
push
in
jae
fsubs
pop
mov
addl
pop
jns
jp
mov
in
popa
mov
addr16
add
push
jg
shrl
cltd
lods
xchg
ds
mov
add
es
jge
adc
cltd
push
dec
add
rcrb
lret
jl
shll
dec
shld
loop
enter
push
out
add
ret
testb
cmp
inc
stos
or
pop
cltd
mov
add
dec
jbe
sbb
aam
jnp
insl
mov
xor
cmp
xchg
rcll
movb
xchg
movsl
xor
mov
cmp
inc
mov
add
add
jns
fucom
pop
cmpsb
push
pop
add
mov
cli
mov
dec
xchg
lahf
in
in
add
aas
pop
or
sbb
movsl
add
xchg
xor
and
fiadds
inc
hlt
shr
cmp
add
mov
mov
push
sahf
popa
sub
lea
jno
call
jo
inc
jnp
fwait
add
stos
aad
lcall
aas
add
xchg
push
sbb
xor
adc
sub
jnp
bound
sahf
sbb
test
in
pop
test
jbe
add
sbb
cmp
call
jbe
aas
pop
add
add
xchg
stos
ret
mov
mul
pop
cmp
repz
sub
sbb
mov
cltd
stos
add
mov
xchg
arpl
push
jle
or
pop
roll
sbb
aam
add
and
imul
call
sbb
inc
dec
jne
lods
mov
sub
je
lret
mov
xchg
mov
adc
add
jecxz
in
mov
jge
bound
iret
ret
fwait
sbb
mov
xchg
in
mov
or
inc
test
pop
or
push
jge
and
popl
rorl
inc
xor
mov
cmp
adc
movsb
xorb
mov
or
lds
xchg
add
sub
sahf
dec
popa
inc
dec
inc
clc
push
push
xchg
ja
pop
or
out
add
stc
or
ja
add
pop
pop
std
sbb
and
cmp
and
push
mov
mov
lcall
or
xlat
sub
add
int3
mov
call
pop
add
cmpsb
cltd
mov
test
and
dec
dec
int
jle
sti
roll
add
or
cmpsl
loope
inc
inc
mov
sub
adcb
mov
inc
mov
cmpsl
sub
test
repz
out
stos
and
fnstcw
lcall
fadds
setb
sub
out
mov
mov
dec
daa
add
mov
push
add
test
jne
out
insb
add
add
add
cld
aaa
in
push
jo
xchg
call
int
test
mov
push
adc
dec
xchg
jb
sub
dec
imul
xor
inc
jmp
iret
sub
adc
pop
sbb
fisttps
dec
js
push
pop
aad
test
add
adc
sbb
iret
xor
mov
xor
add
int3
cmp
dec
aad
pop
insl
and
add
push
cs
fdivrl
adc
xor
add
xchg
add
add
add
popa
jmp
pop
shlb
fsubs
pop
adc
lods
push
xchg
and
mov
aam
mov
test
sahf
xor
sub
jmp
push
stos
adc
add
test
xchg
mov
add
add
lock
mov
inc
or
sub
mov
lret
into
lods
int
mov
add
nop
add
gs
into
add
mov
push
hlt
push
xor
in
adc
sarb
js
push
push
inc
movsl
aas
out
add
or
adc
test
dec
dec
pop
lea
sti
push
popf
out
andb
stos
adc
test
jl
inc
xchg
inc
rorb
and
std
push
cmpsl
mov
in
mov
add
add
push
jmp
cli
or
imul
sahf
cwtl
add
sbb
sbb
jbe
xchg
inc
mov
add
in
aaa
lods
lahf
dec
sub
xchg
rolb
dec
sub
sbb
adc
inc
dec
and
data16
int3
outsl
xor
jmp
pop
jae
mov
xchg
ds
add
sbb
outsl
and
sub
fmull
test
push
cld
enter
pop
and
sub
add
repnz
cmp
or
mov
sbb
xlat
ds
dec
scas
std
dec
push
out
add
adc
or
cmp
sub
add
lods
add
mov
cmc
add
shll
or
jl
lret
inc
leave
mov
sub
xlat
add
sub
fwait
mov
jg
inc
mov
or
xor
inc
insl
add
fldl
add
std
mov
adc
pusha
jmp
push
ljmp
insl
sbb
jmp
and
xor
mov
enter
ss
xchg
pop
dec
ficompl
imul
cltd
popa
mov
xchg
cmp
je
aad
testl
ja
in
sub
mov
mov
add
xlat
cmpl
lret
xor
and
add
push
sub
jl
scas
sub
pop
and
xor
push
add
std
add
movsb
or
push
jecxz
sahf
addr16
pop
push
add
ja
add
add
add
enter
cmp
call
jmp
or
xchg
rolb
cli
add
ret
mov
out
xor
std
scas
test
dec
faddl
cmpsl
push
adc
fisttpll
test
add
lds
or
lret
jle
stc
xchg
xchg
dec
ret
inc
jg
mov
and
dec
sbb
sub
sub
pop
cmp
jno
mov
sbb
in
xor
add
cmp
jmp
mov
add
nop
adc
or
mov
dec
push
add
add
xor
push
pop
push
and
arpl
gs
dec
jecxz
add
cmp
ds
add
aad
mov
sub
pop
lods
sub
js
pop
ja
dec
aas
jmp
incb
add
gs
andl
sbb
les
push
pusha
lods
test
xor
and
out
fistpll
test
rcll
adc
fwait
mov
adc
int
add
jae
mov
mov
das
lds
popa
inc
outsl
pop
pop
add
add
pop
jne
daa
cmp
inc
mov
loop
xchg
arpl
lods
add
rclb
les
xchg
jb
adc
stc
sub
imul
xchg
test
jne
loope
mov
mov
out
xchg
push
cmp
add
xlat
loope
mov
dec
cmp
push
xchg
add
icebp
inc
mov
add
mov
inc
push
int
sub
add
scas
sbb
stc
xchg
pusha
lcall
movsb
push
add
jl
in
add
jp
add
ja
cmc
xchg
insb
std
sbb
add
jmp
sahf
adc
sahf
jns
add
and
cltd
sbb
xor
mov
jb
mov
sub
inc
outsl
cmp
mov
mov
xchg
ja
inc
inc
sahf
push
icebp
add
das
jg
or
jae
pushf
and
add
xchg
add
dec
push
and
cwtl
jo
cmp
or
sahf
cmc
dec
jns
mov
pop
xor
adc
push
add
pop
xchg
mov
push
aas
xchg
cmp
call
ret
inc
dec
popl
pop
fldl
push
popf
mov
jmp
add
push
xor
je
add
imul
jb
add
xchg
pop
push
add
inc
jl
dec
andb
inc
test
data16
jecxz
pop
out
out
orl
pop
and
xchg
sahf
aam
pmuludq
sbb
rcl
xchg
stos
pop
xlat
rolb
mov
mov
arpl
xchg
add
xchg
adc
inc
push
addr16
xchg
cs
add
mull
fmulp
popl
add
scas
cwtl
add
cmp
add
jo
mov
repz
xrelease
call
je
sub
jns
daa
cmp
sub
loope
add
fsubrl
addr16
add
add
and
inc
sub
mov
lret
or
jg
imull
inc
sti
inc
lret
mov
dec
cmpsb
add
add
std
mov
add
scas
cmp
add
cltd
stos
scas
add
mov
stos
out
add
ljmp
pop
pop
sbbl
sub
hlt
adc
mov
insl
and
fldl
test
add
add
jecxz
stc
fsubs
jns
xor
divl
cmc
mov
jnp
scas
add
fdivl
jbe
cmp
and
xor
std
or
or
lock
mov
mov
ljmp
flds
loope
mov
mov
add
lea
adc
sarl
or
add
add
dec
hlt
jp
and
cmpsl
pushf
sub
mov
cmpl
cs
scas
bound
outsb
out
ss
add
shll
mov
sarl
mov
andb
aad
nop
pop
add
cmpsl
movsl
jae
sub
jae
mov
adc
addb
jbe
dec
mov
movsl
dec
cmpsb
add
pop
icebp
pop
mov
mov
xor
ret
roll
xchg
sbb
lds
icebp
fwait
mov
andb
or
mov
int
js
pop
adc
adc
in
jp
rolb
dec
mov
mov
dec
push
xchg
xor
push
jnp
push
mov
sbb
mov
adc
cmpsl
outsb
mov
or
iret
aam
loop
iret
shl
sbb
add
and
mov
jecxz
pop
add
add
mov
clc
lahf
cmp
adc
mov
aam
add
mov
jl
cmpsl
add
nopl
pop
mov
nop
fbld
pop
into
mov
jg
inc
fwait
sub
add
and
scas
jge
ljmp
aaa
or
add
sbb
push
inc
adc
repz
call
in
into
dec
sbb
lea
mov
xor
push
add
add
fstpt
pop
mov
sahf
out
pop
pop
decb
xor
pop
sub
jo
outsl
lods
leave
add
add
test
sbbb
lods
std
inc
mov
adc
cwtl
xor
inc
shlb
add
mov
fucomip
push
fiaddl
pop
cmpsl
nop
mov
arpl
fimuls
loope
aaa
add
xor
mov
bound
inc
xchg
dec
loopne
xlat
dec
pop
push
jo
sub
inc
rol
pop
and
add
stc
xchg
add
les
add
mov
xchg
ljmp
aam
add
push
clc
daa
xchg
add
loopne
arpl
sbb
mov
add
iret
cwtl
push
add
push
xor
adc
lcall
push
adc
stos
inc
pop
mov
addl
movsl
sub
dec
and
xchg
je
add
push
pop
add
out
add
ret
outsl
shrl
nop
push
enter
jle
inc
out
and
push
mov
dec
jg
leave
add
loopne
std
pop
ficoms
adc
sar
mov
jne
insb
outsb
adc
jecxz
mov
neg
add
enter
jnp
lahf
push
repz
pop
add
loop
pushf
daa
xor
add
sbb
add
lock
lea
push
adcb
mov
jmp
loopne
and
imul
cmp
add
add
loope
movsb
xchg
insb
int3
sarb
dec
jmp
xor
nop
add
or
sub
add
stos
xor
lret
fwait
mov
scas
cs
xchg
mov
push
mov
nop
and
fs
icebp
sbb
cmp
les
in
call
out
jo
add
adc
add
loop
and
adc
sahf
adc
loop
jmp
jbe
ret
cs
aaa
push
jmp
cmpsb
enter
cmp
inc
loopne
test
pushf
mov
xor
loop
add
push
dec
xchg
inc
cmp
pop
insb
stos
jle
loopne
add
add
jno
sub
push
mov
lds
clc
cld
add
add
xchg
add
xchg
add
sbb
aad
xlat
ltr
ljmp
call
or
pop
jno
add
xchg
in
cmp
daa
popa
sub
push
push
loopne
aaa
insl
mov
lock
jns
aas
pop
add
ss
cmpsb
adc
mov
testl
sbb
mov
xor
out
mov
mov
cld
sbb
and
push
mov
xor
idivb
add
xchg
jmp
cltd
in
les
xor
fsts
cs
in
mov
bound
or
arpl
mov
sub
in
in
mov
mov
daa
sbb
pop
movsl
and
imul
arpl
add
add
add
pop
rolb
ret
lea
add
ljmp
test
das
push
push
mov
add
xchg
test
lods
sahf
sti
xor
add
or
pop
imul
mov
xchg
jg
pop
cwtl
cmp
ja
mov
les
push
jmp
pop
into
fstl
je
push
test
js
cmp
lret
push
stc
and
mov
aam
and
mov
lret
fisubl
shrb
andb
sbbl
shr
add
add
mov
pop
pop
fs
pop
mov
stos
cmp
add
aas
aaa
sbb
repnz
dec
dec
push
cmp
jl
leave
and
or
in
loopne
jb
or
jg
fisubrl
push
xchg
mov
xchg
ja
out
cmpsb
inc
scas
or
sub
aam
mov
addr16
add
inc
add
add
ret
pop
mov
fstl
arpl
push
cmpsb
mov
push
jmp
lock
aaa
pop
inc
data16
pop
pushf
xchg
sbb
push
cs
add
cmp
add
adc
push
out
dec
mov
jmp
push
lahf
add
add
call
sbb
add
or
adc
or
adc
xor
fiaddl
scas
xchg
sahf
inc
add
xchg
add
or
das
std
inc
jge
sbb
sub
xchg
inc
fs
push
lcall
add
repz
fdivrl
jns
or
daa
sahf
xchg
fwait
push
pop
sti
js
jl
jae
xchg
packssdw
aam
scas
iret
add
clc
ss
pop
lret
jbe
xchg
and
xchg
pop
add
out
jp
or
xchg
sahf
sbb
enter
mov
sbb
ss
cmp
and
mov
mov
adc
ja
add
pusha
int
xchg
or
aaa
je
or
jmp
fidivrs
arpl
test
push
add
add
rorl
add
fnstsw
add
dec
ljmp
inc
lock
add
lods
xor
add
add
int3
add
shrl
sub
add
xor
loopne
adc
add
mov
mov
mov
add
cmp
jecxz
sub
mov
cmp
add
faddl
leave
mov
ret
push
test
es
cmp
movsl
add
inc
or
pop
dec
jg
jae
ja
lods
lret
pop
loop
add
push
inc
push
in
add
ret
adc
in
out
xor
dec
call
adc
pop
sub
hlt
add
imulb
addr16
in
addb
push
shll
or
fwait
or
add
push
cld
add
leave
push
push
pop
in
add
xchg
ret
stos
dec
fdivs
mov
xor
adc
pushf
xor
add
push
mov
dec
data16
shrl
fldl
dec
pop
add
sarl
mov
or
jb
or
cmp
add
jbe
jmp
pop
and
sbb
cmp
insb
subl
add
jbe
je
pop
pop
rolb
sub
mov
adc
mov
std
mov
ja
insb
mov
adc
dec
cmpsl
outsl
mov
add
pop
cmovbe
rclb
add
add
mov
cmp
inc
enter
jecxz
jl
imul
popl
in
inc
and
jno
jl
add
and
shrl
xbegin
add
pop
xorb
jmp
pop
pop
jp
lret
rcrb
xchg
and
pshufw
jl
add
pop
mov
jae
inc
call
pop
jg
add
add
popa
frstor
add
incb
mov
loope
arpl
in
add
push
add
sub
mov
mov
jb
xchg
mov
ja
mov
pusha
add
inc
add
dec
inc
jbe
adc
jecxz
cmc
inc
jl
mov
cwtl
sub
divl
cmc
add
push
loop
add
dec
call
sub
xor
add
shll
or
cmpl
test
or
dec
inc
sub
fdivs
xchg
xchg
pop
adc
cmp
pop
pop
imul
mov
or
lret
pop
xlat
xchg
dec
lret
das
sub
aaa
dec
and
sbb
fwait
cmp
dec
add
test
popf
test
sub
mov
add
dec
xchg
add
loopne
inc
mov
jmp
daa
sub
or
mov
nop
push
jle
sbb
arpl
lea
jp
mov
es
in
push
add
sti
xchg
add
mov
add
scas
add
out
fldcw
pop
stos
int3
add
imul
push
sub
adc
cmp
mov
push
pop
outsl
pop
jmp
add
adc
adc
jle
dec
sub
loope
jmp
sbb
sbb
lods
out
sub
xchg
dec
push
jecxz
mov
rcl
jl
roll
rcrb
mov
and
pop
add
insb
mov
rcr
popf
add
push
adc
ret
mov
lahf
cli
pusha
xor
or
jge
add
imul
mov
mov
js
loope
inc
ret
add
add
je
fwait
rclb
push
shrl
lret
and
add
sbb
nop
mov
and
incb
xchg
mov
test
mov
sarb
scas
fldenv
jge,pt
in
sub
add
pop
xchg
jns
imul
outsl
mov
or
sahf
out
aas
add
int
loope
dec
adc
mov
add
push
hlt
mov
orl
repnz
add
add
mov
je
jb
in
dec
pop
xor
mov
mov
lret
ss
add
pop
arpl
dec
outsl
fwait
insl
arpl
mov
pop
test
fnstcw
sub
add
push
jb
add
add
pushf
aaa
sbb
adc
sub
mov
pop
in
shr
mov
pusha
pop
in
push
sti
lds
pushf
xor
push
test
aam
dec
pop
hlt
add
add
add
or
add
mov
add
xchg
adc
or
pop
stos
add
jecxz
int3
ret
scas
fwait
cmp
adc
jb
sti
verr
xor
cmpsb
xchg
imul
dec
xchg
xor
repnz
jecxz
lret
inc
push
scas
jmp
pop
nop
mov
add
pop
add
push
loope
xor
xchg
cmp
fiaddl
mov
orl
mov
nop
mov
fwait
lcall
add
dec
gs
jb
dec
jo
mov
or
int
jns
int3
cmp
pop
subb
or
add
add
testb
sub
popa
mov
mov
push
add
jecxz
dec
inc
scas
outsl
test
test
stos
test
push
iret
daa
gs
daa
lret
roll
add
aaa
cmp
jns
mov
mov
out
add
inc
push
sbb
pop
add
mov
sub
xor
add
push
lcall
add
and
dec
imul
test
pop
add
addb
insb
ljmp
xor
inc
cmpsb
sub
inc
pop
xor
lds
jae
mov
jge
cmpb
adc
or
js
rol
popf
mov
test
add
loopne
push
xor
inc
jbe
mov
add
xor
int
cwtl
mov
int
setnp
xor
adc
int
pop
fsubrl
data16
imul
into
jo
add
inc
and
inc
add
push
and
popa
ret
sti
out
dec
dec
fadds
fstps
gs
dec
sbb
outsb
push
add
lahf
xchg
pop
sahf
add
fwait
xlat
add
sahf
mov
testl
imul
inc
add
and
test
add
mov
lock
es
rcrb
les
aas
xchg
inc
or
pop
jmp
ja
inc
es
ret
insl
xchg
add
add
gs
lea
jno,pn
test
push
imull
add
xor
push
ficompl
cmc
pushf
popf
push
pop
in
stc
add
mov
cmp
or
dec
jmp
sub
sbb
shr
repnz
xchg
cli
add
in
rorb
fldl
cmpsb
jns
in
add
aaa
sub
add
notb
sub
arpl
and
and
and
faddl
leave
fbstp
push
sub
adc
adc
sbb
add
flds
stc
into
dec
jae
pop
lock
add
jno
inc
xchg
and
lcall
push
add
dec
add
ffree
cmp
js
inc
mov
xor
add
add
xorl
lret
bswap
or
in
cmp
push
mov
fcompl
int3
pusha
dec
cmp
jecxz
fcom
popa
add
stos
shrb
pop
adc
maxps
adc
rcrl
faddl
xor
push
add
ja
insb
lds
in
add
out
add
repnz
outsb
cmp
data16
shrl
adc
test
inc
add
icebp
in
cmpsb
xchg
shl
sub
ss
cmpsl
add
add
dec
jl
repz
mov
or
arpl
xor
into
shll
mov
fdivrl
leave
int
mov
repnz
jl
jg
pop
fwait
jb
lret
leave
aaa
xchg
fldt
push
pop
add
pusha
stos
mov
fnstsw
imul
and
xor
out
mov
inc
pop
shl
pop
aas
push
aam
imul
movl
in
push
and
xchg
aam
jg
cmp
adc
int
mov
mov
js
int
push
loope
jae
popf
daa
add
test
xor
cmp
and
in
dec
fidivl
inc
fs
arpl
repz
outsb
pop
jle
mov
add
mov
das
add
dec
pop
push
and
sub
mov
and
add
xchg
add
push
adc
add
std
std
out
add
mov
cmp
or
mov
aas
push
call
jp
sbb
and
add
ret
dec
cmp
in
sub
sldt
out
add
clc
bound
mov
pop
and
pusha
jl
fidivs
aad
add
es
inc
add
movsb
imul
gs
mov
gs
adc
cmc
xchg
in
add
aas
push
push
add
test
loop
inc
fildll
into
outsl
cmpsb
rcrl
push
or
sub
add
lea
cld
mulb
sbb
fs
push
into
and
xchg
mov
stc
or
cmp
add
loop
jae
stc
add
add
dec
out
mov
pop
arpl
ja
in
sub
adc
orl
lods
adc
pop
inc
sub
add
ret
movsl
mov
aad
pop
lods
add
lret
inc
sub
jecxz
and
xor
jmp
inc
add
mov
add
loop
cmpsl
fnstenv
test
scas
add
imul
dec
lcall
sbb
add
add
adc
jg
pushf
fs
dec
daa
iret
inc
cmp
iret
repz
movsb
incb
lock
into
addb
dec
cmp
add
adc
xor
cmpl
cmc
cmp
fucomip
cwtl
out
dec
add
outsb
push
clc
fdiv
loop
imul
jo
xchg
sub
ljmp
clc
sbb
or
roll
xchg
enter
mov
xchg
bound
add
outsb
add
ds
add
lahf
add
or
add
add
jmp
mov
pop
filds
push
add
enter
je
test
add
xor
faddl
jae
sub
out
mov
cmpl
rolb
sar
mov
fimuls
sahf
jg
icebp
lret
enter
add
mov
push
int3
fdivl
rcrb
add
inc
ret
xor
ret
imul
pusha
xchg
push
or
sub
daa
ss
jo
ss
in
andb
jbe
pushf
scas
sub
cmp
adc
add
jae
outsl
and
xchg
add
jp
aad
cmp
add
sub
mov
xlat
add
in
fwait
sub
test
cmpsb
cmp
popf
xor
daa
test
repz
mov
pop
sarb
xchg
adc
mov
and
inc
data16
mov
sahf
xchg
repz
in
rcrl
or
pop
loopne
out
imul
aam
xchg
in
inc
test
mov
adc
and
lock
inc
jo
stc
fcmovb
pop
js
in
mov
adc
jae
push
sbb
mov
dec
push
mov
push
add
pop
arpl
add
int
add
test
fwait
iret
mov
shl
das
test
lret
cs
in
adc
push
jb
push
add
pop
jne
addr16
fcom
inc
xchg
outsb
jnp
pop
dec
push
rcl
mov
sub
add
add
add
sub
pop
push
mov
add
add
out
das
cld
jge
jne
jmp
jp
out
add
mov
insb
add
arpl
xchg
ret
jne
xchg
in
adc
xchg
in
push
jo
add
out
push
aas
ds
inc
mov
and
cmp
loopne
ret
mov
pop
ret
enter
xchg
add
sub
xor
xchg
push
roll
cmp
bound
cs
out
aaa
mov
adc
lods
push
add
test
mov
test
push
loop
test
ljmp
cmp
pop
mov
xor
dec
insl
cmovnp
lret
loopne
out
inc
fcmovbe
lcall
test
stos
sbb
shrl
adc
add
pop
mov
jle
mov
iret
xor
cwtl
add
mov
and
jne
sub
mov
gs
and
arpl
sbb
add
pop
inc
test
sub
mov
pushf
out
add
jp
cmp
xchg
cmc
add
xchg
lds
or
in
test
test
dec
loope
and
repnz
lock
push
add
mov
repz
jnp
push
jne
sbb
pusha
test
mov
push
dec
add
js
shll
hlt
push
add
fldenv
aaa
add
mov
add
je
out
jmp
add
pop
mov
subl
cmp
cs
scas
add
rol
test
pop
lcall
rolb
sahf
rcrb
or
cs
and
out
pop
lods
add
add
aad
cmpsb
add
je
cmpsb
cmpsl
rcll
mov
and
lret
jl
cmpsb
pop
dec
jg
pop
dec
mov
xchg
in
scas
adc
inc
jo,pn
add
mov
test
jns
or
mov
xchg
in
inc
jo
xor
mov
and
add
shll
hlt
sarl
sub
pusha
iret
mov
mov
inc
mov
mov
adc
xchg
or
push
insl
test
rcll
pop
out
add
cmp
test
mov
xchg
outsb
popf
add
xchg
bound
roll
add
mov
jl
xchg
add
or
loop
stos
mov
inc
and
subb
bound
and
scas
enter
shlb
andb
add
loope
pop
add
lods
jle
ret
fisttpll
mov
inc
sbb
in
hlt
mov
lods
pop
btl
xor
jno
jge
and
cmpsb
pop
enter
movsb
add
inc
add
add
sbb
xor
xchg
add
mov
inc
nop
test
pop
imul
out
cld
das
imul
mov
add
lret
dec
int
adc
mov
inc
inc
shl
adc
stc
mov
pop
push
add
lahf
outsb
jmp
jecxz
inc
andl
movsl
fwait
cmc
and
hlt
cld
dec
mov
test
sbb
ds
add
clc
dec
xchg
or
xor
shrl
pop
or
jb
btc
jo
and
add
jno
inc
incl
dec
inc
cmc
add
push
jle
mov
faddl
push
loopne
popl
das
cwtl
dec
testl
add
std
cmp
mov
add
sti
std
or
imul
lock
jecxz
out
cltd
pop
mov
adc
pop
cmc
add
lahf
dec
js
pop
add
lret
gs
push
cli
into
push
add
test
sahf
push
pop
fcmove
mov
xor
and
mov
dec
sbb
aam
mov
push
jle
fs
mov
sbb
push
push
adc
add
inc
and
addb
add
xchg
pushf
pop
add
mov
jno
adc
mov
cmp
fcomps
xlat
jns
test
push
cmp
ret
add
xlat
int3
mov
mov
es
push
popl
fiadds
cmp
aaa
mov
adc
mov
add
xchg
add
pushaw
inc
notl
loop
bound
jp
insb
push
cmpsb
stc
sub
cmpsl
aad
cmp
pop
dec
mov
rolb
fldl
xor
add
jmp
dec
or
lahf
or
es
enter
pusha
xlat
arpl
add
gs
and
out
or
out
xchg
cltd
out
jl
add
add
add
add
lock
add
add
xchg
sub
addr16
add
sub
xchg
xchg
gs
and
add
xor
or
jp
rcr
out
adc
push
xchg
das
orb
and
adc
add
subl
sbb
pop
cmp
adc
xor
push
mov
fisubs
add
sbb
cmp
push
lds
pop
movsl
aaa
cli
imul
mov
pop
cltd
imul
adc
cmpsb
das
and
mov
inc
add
rcr
push
jno
and
pop
inc
mov
jge
or
aad
in
add
mov
adc
cmp
xchg
add
in
dec
xlat
stos
outsb
dec
data16
pop
add
and
and
divb
adc
push
clc
cs
add
adc
pop
pop
sub
add
jo
pop
movsb
mov
dec
repnz
outsl
inc
aas
sub
xor
subl
inc
idivl
jle
dec
add
aas
xor
sbb
inc
xor
fs
cmp
and
je
or
pusha
adc
fdivl
jno
jle
repz
add
push
rcrb
push
test
push
add
adc
pop
jp
add
loop
push
add
xor
mov
ss
jns
dec
fadds
xor
inc
iret
lcall
lock
add
push
sbb
or
push
xchg
repnz
js
sbb
xchg
mulb
addr16
jmp
sub
sub
inc
jecxz
add
push
test
inc
movsl
outsb
in
lods
rcll
lods
cmp
inc
pop
gs
inc
call
or
js
nop
add
push
addb
stos
sbb
sbb
js
push
stos
popf
add
add
pop
add
pop
test
pop
xor
inc
clc
into
push
aad
arpl
out
mov
add
inc
imul
test
push
xchg
jl
in
in
lds
daa
rorb
fimuls
mov
jno
add
jecxz
xchg
enter
call
cmpsl
xlat
push
imulb
mov
push
lret
lret
xchg
insb
adc
inc
mov
sub
mov
orb
add
dec
add
aas
push
shlb
push
push
dec
xchg
sub
add
and
adc
icebp
pop
inc
scas
pusha
sub
push
dec
add
or
push
mov
data16
adc
cmp
mov
pop
mov
or
jb
inc
add
inc
pushf
inc
fiaddl
mov
add
inc
sti
fimull
inc
daa
pushf
add
or
scas
add
lahf
mov
pop
cmp
add
lcall
jl
scas
add
mov
pop
add
push
jno
ret
inc
dec
int
lahf
lahf
lahf
sbb
add
jp
xchg
testb
sub
sbb
fldcw
xor
jno
loopne
lds
add
clc
outsl
adc
enter
dec
add
stc
sbb
add
cmp
ljmp
add
pop
repnz
scas
add
mov
push
mov
imul
lret
xchg
outsb
xor
data16
sbb
nop
ret
into
push
and
add
push
andb
dec
repnz
cld
and
repz
sub
adc
loop
mov
imul
out
call
cmp
daa
daa
fdivr
iret
add
and
cmp
clc
mov
lret
sub
jg
leave
mov
inc
add
add
sbb
jne
add
add
gs
add
int
mov
xor
add
call
test
dec
addb
test
dec
movsl
or
mov
xlat
add
sbb
add
je
loopne
mov
xor
in
ljmp
inc
jmp
ret
mov
in
push
jg
mov
dec
push
and
mov
dec
xchg
push
adc
add
inc
ja
or
adc
into
adc
in
xlat
adc
push
fidivl
or
pop
pop
or
dec
xlat
jb
lods
rcll
frstor
mov
testl
fmul
push
mov
jecxz
pusha
testb
fs
lret
adc
pop
add
sub
mov
add
push
and
mov
adc
mov
les
jbe
stos
fldpi
cmp
push
loopne
out
and
int
pusha
add
daa
fldl
cmp
add
or
popa
in
fiadds
add
shlb
xchg
addl
enter
mov
pop
aaa
add
xlat
bound
add
scas
push
orl
add
jno
add
movb
scas
pushf
jbe
ds
xor
push
pop
iret
dec
add
mov
jnp
cmp
jns
fsubl
xor
fs
add
cmpsl
sub
add
iret
xchg
xchg
push
or
pushf
adc
out
mov
stos
pusha
mov
incl
cmp
ds
inc
movsl
pop
mov
adc
cmpsb
int3
cwtl
inc
add
cmp
or
add
movl
inc
add
imul
lahf
pop
jge
rcl
push
cltd
fs
cmc
add
ja
lret
iret
ret
mov
mov
and
ret
cmpsb
add
imul
xlat
out
add
loope
lods
pop
into
xchg
fsubl
mov
jmp
xor
mov
adc
cltd
add
sub
andl
rclb
mov
dec
stc
popf
and
cmp
sub
dec
add
mov
inc
jg
hlt
cmp
in
and
pop
call
pusha
pop
imull
fildl
sahf
insl
fwait
jbe
and
ljmp
jmp
mov
xchg
xchg
iret
xor
mov
add
dec
add
movsb
loopne
fisubl
mov
clc
lea
gs
fs
add
fs
rcrl
add
sbbl
outsb
ds
add
adc
or
inc
xchg
xor
aas
mov
push
cmp
push
mov
sbb
loop
mov
add
fisttpll
hlt
mov
in
sub
pop
mov
add
fiaddl
add
sar
add
sbb
push
clc
sub
add
push
fiaddl
in
fs
dec
lret
or
es
mov
cmp
popa
push
dec
pop
pop
xchg
inc
dec
add
je
or
call
add
aas
movsl
repnz
fists
or
xchg
fwait
xlat
mov
push
nop
and
data16
or
lock
mov
cmpb
mov
ja
pop
pusha
subl
popa
testl
subb
xor
mov
rclb
mov
inc
mov
lock
xor
add
pop
inc
mov
sub
dec
shlb
fdivs
into
into
mov
int
jge
outsb
int3
fisttps
xor
add
pop
xchg
add
hlt
push
fidivrl
mov
ret
das
xor
lahf
out
adc
roll
pop
lcall
add
stos
pop
scas
loop
imul
cmpsb
int
nop
mov
push
mov
xor
add
mov
add
aam
cwtl
push
cmpsl
pop
xorl
adc
add
add
push
jmp
push
mov
mov
and
fdivrl
rolb
addb
cmp
ljmp
mov
cmpb
adc
xchg
js
mov
fnsave
mov
std
inc
aas
xchg
cmp
es
pop
xchg
add
mov
add
or
cmp
or
add
sbb
sahf
outsl
cltd
jecxz
loope
out
jl
mov
ret
dec
es
rcll
cs
add
add
lods
addr16
dec
je
add
fiadds
add
xchg
outsb
fs
insb
inc
xchg
add
xchg
sbb
les
add
aas
add
aas
jp
ret
clc
add
add
add
outsl
pop
xchg
std
loope
je
pop
cmc
lods
jne
inc
cmp
mov
arpl
add
lret
and
and
sub
sub
enter
int3
inc
push
sbb
fcoml
xor
repz
cmp
movb
mov
mov
mov
mov
xchg
xchg
mov
stc
push
dec
jb
shlb
mov
out
aas
pop
inc
test
cmp
int
inc
pusha
testl
dec
add
movsb
dec
push
add
sbb
add
sub
subl
add
js
insb
addb
out
push
shlb
cs
aas
xchg
insl
cmp
daa
sub
jge
jp
push
sub
dec
int
push
popa
or
jbe
andl
ljmp
popa
sub
xor
addl
mov
inc
scas
test
dec
test
sbb
push
mov
fnsave
dec
stos
mov
fmul
fucom
popf
aas
pop
mov
sbb
dec
int
mov
mov
add
pop
push
lods
jecxz
test
xor
and
push
sbb
mov
out
jle
scas
xor
ljmp
add
popf
call
inc
add
push
xor
add
mov
std
sub
mov
jne
add
bound
fwait
das
mov
push
inc
add
pop
jbe
sbb
cmpsl
mov
mov
popa
add
jo
negl
lret
addr16
add
clc
inc
mov
cmpsl
add
imul
movsl
lea
jbe
gs
and
xchg
add
add
jnp
scas
and
shl
xor
dec
in
popa
aaa
popa
dec
ror
loopne
pop
lret
das
aam
add
stos
push
inc
dec
add
fwait
add
ret
cwtl
xchg
add
and
sub
push
dec
jge
ss
add
stos
add
xor
data16
mov
stos
xchg
add
mov
cmp
scas
lret
push
cmpsl
add
and
jno
pop
shrl
cld
aas
cmp
push
insb
je
xchg
push
call
in
test
dec
cmpsb
ret
add
xor
push
mov
push
cmp
test
jnp
flds
popa
jne
add
iret
mov
mov
dec
incl
and
iret
fnstsw
or
insb
jo
and
pusha
sbb
ljmp
cwtl
xor
out
sbb
add
add
add
popa
in
xchg
add
out
jp
mov
inc
lcall
ja
add
add
adc
jmp
jge
into
mov
xchg
add
adcb
fadds
scas
and
mov
or
cmpsb
and
add
sahf
pop
ljmp
vmwrite
movsb
add
cmpsl
add
sbb
push
inc
sub
cmp
push
sbb
pop
jle
add
out
pop
adc
mov
fucomp
jge
add
add
sub
cmc
or
adc
daa
loope
repnz
repz
into
call
clc
fildl
adc
dec
dec
fbstp
add
xchg
popa
xor
xchg
mov
inc
add
aad
mov
loope
mov
mov
sub
and
cmp
nop
dec
push
pop
or
xor
add
outsl
aad
out
sub
ljmpw
adc
clc
popf
int
lock
loopne
rcrl
add
jns
add
xlat
inc
push
cmpsl
add
cmp
add
adc
and
sbb
enter
cmp
repnz
xor
jbe
xor
or
in
push
adc
adc
sbb
cmp
mov
mov
inc
pop
add
add
scas
sbb
push
in
add
mov
cmp
pop
xor
sbb
push
loope
jp
push
lock
movsl
ret
add
jo
push
cwtl
insl
repnz
fwait
sbb
add
lret
push
xchg
add
subl
imul
int3
mov
retw
int
inc
data16
into
pop
lods
push
add
aad
add
cmp
stos
inc
xorl
add
inc
pop
insb
mov
add
lret
jb
and
or
cmc
sub
add
or
test
loopne
rolb
jnp
mov
jecxz
repnz
imul
dec
arpl
fnsave
fiadds
inc
add
pushl
in
mov
dec
add
sub
jb
insl
add
clc
sub
mov
xchg
add
add
dec
sub
mov
add
sbb
pushf
sbb
xchg
lea
pop
insb
adc
jne
cmp
mov
xor
xor
jl
adc
add
in
mov
push
ja
sub
xchg
add
data16
or
cmpsb
add
repz
push
sub
lret
xchg
aam
scas
repnz
pop
fdivrs
pop
add
mov
add
push
add
dec
add
jno
sub
insl
lcall
jnp
cmp
cld
and
test
push
add
cwtl
call
sub
decl
sbb
xchg
gs
jnp
dec
sub
lcall
jbe
ds
add
enter
and
ret
mov
out
movsb
jae
popa
call
xchg
fucomp
cmp
mov
lods
outsl
mov
sarl
nop
out
xchg
ret
add
sbb
mov
xchg
adc
cld
bnd
movsl
dec
sbb
cld
dec
add
pop
imul
xor
push
push
and
mov
add
push
ret
mov
push
testb
xorl
mov
in
lock
test
lret
xchg
iret
add
icebp
rcrl
cmc
adc
inc
sbb
mov
iret
xor
add
push
xlat
add
imul
addb
mov
mov
fsubrs
sbb
xor
ds
inc
inc
add
xor
out
mov
add
rclb
int
test
inc
sbb
loopne
mov
add
repz
add
or
push
cmp
addr16
sbb
shrl
cs
inc
imul
jne
data16
insl
xor
stos
dec
mov
add
sahf
into
mull
xchg
dec
fsubl
xchg
sub
roll
enter
xlat
fimuls
sbb
rolb
mov
rol
inc
mull
loope
lds
or
push
add
mov
sti
int3
scas
push
insb
mov
xlat
out
sarl
mov
int3
adc
pop
stos
dec
xchg
add
fldl
cmp
mov
into
movsl
xchg
pushf
jnp
mov
add
mov
aad
in
pop
call
int
mov
add
mov
add
xchg
and
cmpsb
lcall
nop
inc
pushf
das
stc
icebp
inc
jmp
dec
push
xchg
add
and
out
fiadds
cmpsl
add
fadd
jmp
cmp
mov
mov
sbb
out
sbb
enter
nop
sbb
in
lea
and
push
add
data16
imul
dec
push
jo
sbb
rorb
or
pop
fidivrs
pusha
rcr
jmp
lods
cmc
je
in
jb
push
adc
pushf
sbb
add
mov
sbb
loope
arpl
js
jns
cmp
pop
mov
notl
outsl
stc
aam
cmc
add
mov
cwtl
movsl
xor
mov
ja
fsts
inc
sub
or
mov
cli
xchg
sbb
add
jae
es
cwtl
add
sbb
xchg
add
addb
fwait
imul
xchg
push
hlt
add
dec
pusha
xchg
add
pop
cmpsl
add
addb
jmp
add
add
test
add
roll
push
test
sub
jge
mov
out
mov
add
loop
lcall
mov
js
mov
lahf
mov
inc
lcall
scas
lods
cmp
faddl
push
add
test
dec
out
add
pop
bound
jl
jl
and
out
sub
aas
dec
loop
push
add
test
add
stos
add
mov
add
arpl
xchg
add
cmp
arpl
pop
inc
mov
aas
insl
push
loopne
repnz
cli
dec
pop
sub
outsb
pop
xor
and
push
fisttps
add
cmpsb
shll
hlt
leave
lahf
addr16
cmp
add
addl
and
mov
mov
hlt
sub
testl
sarl
add
dec
push
mov
insl
fiaddl
and
je
orb
mov
cli
push
sbb
test
mul
sub
lret
mov
xchg
add
leave
ja
push
fiaddl
jle
add
add
add
jl
add
insb
icebp
xchg
add
push
jle
hlt
sub
ret
xchg
rcrl
push
dec
xchg
add
mov
pop
loopne
cs
aas
popf
add
pop
scas
lock
add
test
aad
add
lldt
cmc
add
and
pop
cwtl
adc
filds
iret
cmpl
sbb
xor
cmc
inc
insl
add
add
adc
aas
fwait
jb
fdivrs
cwtl
add
inc
movl
sbb
aaa
outsl
pop
sbb
cs
mov
stc
push
cmp
jns
inc
ja
add
add
dec
add
inc
push
pop
pop
je
xchg
mov
push
ss
gs
ss
movl
and
push
stos
jbe
add
arpl
ljmp
and
aam
lret
jg
fisttpl
push
sub
add
inc
lcall
into
dec
mov
mov
sub
dec
and
and
jns
add
in
sahf
push
add
rcr
mov
ljmp
push
pop
jmp
or
xchg
fisttpl
xlat
aaa
add
jne
jecxz
popa
or
test
xor
mov
cmp
sbb
popa
imul
push
outsb
and
and
pop
mov
jbe
add
xchg
add
sbb
mov
lods
out
test
lods
xchg
add
sub
imul
imul
add
xchg
cmp
add
fbstp
sarl
add
and
sbb
push
pop
test
mov
sub
pushl
add
int
push
cwtl
add
push
and
add
mov
movsl
push
lret
lock
xchg
push
mov
lret
ja
add
faddl
inc
pop
daa
add
add
cmpsl
repz
iret
adc
mov
loopne
daa
ss
adc
and
aas
push
outsb
add
sbb
insb
xlat
pushw
dec
inc
cmp
add
pop
or
sbb
hlt
hlt
pop
add
mov
mov
or
dec
push
in
pop
mov
lahf
test
jge
shlb
les
inc
lods
pop
je
sub
into
pusha
orb
cmpsl
aas
movsl
add
shlb
jecxz
and
iret
add
and
insb
clc
jns
sub
xlat
adc
push
fs
mov
and
xor
add
testb
std
jl
mov
nop
jge
in
mov
mov
jge
jg
add
add
add
fcoms
pushf
pop
call
mov
adcl
mov
fsubrs
test
in
adc
xchg
add
daa
dec
imul
xchg
jno
pop
mov
popa
push
imul
out
ret
call
leave
in
add
xlat
mov
mov
add
and
test
repz
mov
push
add
mov
mov
enter
or
adc
or
inc
out
insl
es
add
dec
jnp
insl
rclb
int
add
addr16
dec
sbb
mov
xchg
add
addr16
negl
inc
pop
and
lahf
repz
rcl
dec
or
mov
xchg
repnz
ljmp
pop
xlat
push
mov
adc
xchg
mov
outsb
sbb
pop
outsb
es
movsl
mov
lahf
aaa
rolb
jb
andl
add
xchg
add
fldl
ds
mov
add
stc
adc
adc
add
mov
cli
sbb
add
xchg
mov
add
and
xchg
stc
lret
aaa
ret
mov
sahf
add
insb
pop
pusha
hlt
test
lock
fadds
lock
sbb
fnsave
call
mov
gs
inc
adc
movsb
std
inc
cmp
xor
inc
xchg
aad
dec
rcr
xchg
xchg
xor
mov
jne
arpl
and
add
sub
mov
les
mov
add
mov
add
out
je
xchg
push
jge
addb
add
mov
or
pop
fcom
adcb
shl
shlb
rcll
dec
cmpsl
jno
int
mov
cmpb
scas
add
xchg
sbb
add
testb
cmp
fdivr
test
add
sar
cmp
and
decl
inc
jle
add
imul
add
test
aaa
lods
rcll
outsb
add
pop
aaa
mov
or
push
add
lret
lock
xor
andl
add
and
pop
xor
add
push
movsl
dec
fistl
sub
cmc
jbe
nop
xchg
cmc
mov
fiadds
dec
adc
add
xchg
dec
cmp
rcrl
mov
adc
rcrl
cmpb
sti
xchg
and
stos
push
inc
mov
mov
xchg
sub
imul
rclb
psraw
out
lret
jp
pop
es
xor
cmp
add
and
arpl
add
imul
dec
cmp
cmp
scas
sarl
daa
xchg
filds
dec
mov
jmp
or
js
jp
dec
sbb
lcall
add
loope
repz
mov
les
add
es
and
inc
mov
adc
sti
push
js
add
repz
xchg
jno
jl
add
sub
add
fldcw
cmp
push
dec
pop
inc
in
jge
in
xchg
cmp
push
lods
push
mov
mov
movsl
add
add
int
push
insl
es
adc
add
loopne
add
adc
xchg
add
and
fsubr
shll
cmp
sub
dec
ds
push
inc
out
inc
adc
mov
xchg
adc
adc
inc
mov
inc
pop
stc
add
jp
cmp
pop
mov
iret
cld
xchg
flds
js
add
in
pop
pop
pop
in
fisubrs
add
jb
aad
mov
in
push
xchg
testl
adc
xchg
push
and
xchg
mov
pusha
sbb
rcll
adc
aaa
shll
mov
sub
add
fdivp
mov
stos
sarb
pop
aam
add
inc
es
sahf
repz
inc
icebp
lcall
rcll
dec
daa
cmp
and
aaa
add
test
add
cmpsl
jmp
stc
test
in
push
add
pushf
adcb
xor
sub
mov
mov
cmp
jbe
syscall
movntps
add
xchg
xlat
out
jge
add
flds
aam
scas
add
pop
add
push
idivl
pop
inc
fldcw
pop
sub
out
incl
rol
pop
hlt
int
cmp
lret
cld
add
gs
jnp
aas
icebp
sbb
arpl
dec
clc
dec
dec
repnz
test
lret
pushf
jmp
stos
insb
mov
pushf
add
fldl
add
add
mov
ret
ret
mov
