push
call
add
mov
and
inc
mov
mov
call
jb
scas
or
sbb
aaa
popf
das
cmp
jle
jmp
mov
xlat
mov
mov
inc
int
loop
test
cltd
enter
test
pop
cmp
ficomps
add
in
pop
mov
testb
jg
xchg
pop
push
sti
jbe
je
jae,pn
jg
jo
rorl
jnp
sbb
mov
dec
xchg
sbb
jecxz
jmp
inc
lcall
aas
add
push
jno
or
push
daa
mov
xchg
out
adc
ret
push
divps
dec
mov
jg
fs
add
movsb
pop
pop
add
push
dec
jmp
jne
cmp
jge
out
inc
in
ljmp
in
jp
faddl
pop
cli
loop
add
sbb
mov
cmp
pushf
inc
xchg
sbb
push
in
mov
jnp
push
ret
mov
xchg
mov
hlt
jmp
movsb
gs
cltd
and
arpl
inc
sub
icebp
outsb
in
outsb
push
lock
imul
push
adc
daa
sahf
std
mov
adc
jmp
sbb
mov
pop
cwtl
cmovb
mov
fdiv
mov
insl
lds
cmp
leave
or
xchg
push
sbb
sub
in
mov
or
xor
or
cld
cli
sbb
pop
inc
mov
dec
jg
cs
mov
mov
inc
fcmove
mov
sub
pop
jbe
cmc
ss
cld
add
adc
sub
mov
movsb
add
ja
adcl
mov
mov
div
cmp
pop
mov
jecxz
xor
icebp
pushf
xor
repz
sahf
inc
adcb
shll
loope
add
xchg
mov
mov
mov
adc
sub
pop
xlat
shr
test
ret
aam
pop
loope
in
pop
inc
inc
push
push
mov
rorb
mov
push
pop
ret
dec
lcall
dec
insl
pusha
stos
and
add
push
mov
jns
mov
xchg
shrl
push
addr16
dec
incb
out
pop
imul
mov
cmpsb
cmp
test
dec
scas
and
fdivs
popa
mov
mov
je
cmpsb
lods
stos
mov
je
mov
push
into
lods
jno
and
mov
xchg
xor
mov
in
mov
repz
subl
mov
cmp
movsl
imul
sub
mov
xor
outsb
push
mov
in
rorb
inc
pop
mov
xchg
cs
jp
push
rcl
int
stos
xor
mov
xchg
dec
outsb
rorb
xchg
orb
sub
adc
mov
aam
sarb
sbb
les
ret
lea
push
cmc
and
add
cs
jnp
andl
test
adc
and
sbb
xchg
adc
dec
lods
addb
mov
push
add
mov
pop
lods
jo
popf
out
push
ljmp
dec
in
xor
xchg
jae
repz
dec
gs
data16
push
ljmp
inc
mov
stos
add
nop
sub
mov
pop
sub
mov
or
sbb
mov
inc
shl
jl
nop
imul
xor
test
popf
or
inc
pop
aam
insl
sbb
call
push
imul
and
cltd
sub
int
cmp
or
int3
clc
shrl
ds
test
or
xor
or
xchg
sub
inc
pop
cmp
mov
insl
mov
jle
mov
push
mov
insb
mov
jnp
pop
pop
push
loope
or
jns
push
mov
fimull
mov
mov
loop
cmp
aam
xor
scas
xchg
leave
push
into
push
jg
aas
add
pop
push
aad
mull
or
add
jns
inc
call
insl
stc
roll
jo
mov
pop
lcall
scas
mov
scas
inc
cli
cmpsl
jns
lds
roll
movsl
inc
inc
lcall
pop
or
mov
lods
push
and
fwait
adc
and
cld
pop
or
hlt
adcl
into
or
out
mov
ss
jge
imul
or
add
adc
sbb
xor
push
mov
cmp
out
mov
stc
pop
push
shl
xchg
aad
jb
in
lret
xor
or
mov
lcall
clc
adc
push
pop
push
xor
jmp
sub
pusha
test
jae
lea
mov
inc
sahf
add
jecxz
xor
movsl
repnz
call
jmp
xor
jnp
les
aad
adcl
lods
xchg
xor
mov
mov
outsb
mov
mov
daa
movsb
int
or
mov
in
or
lea
jg
push
lahf
pop
imul
jmp
dec
add
movsl
inc
shlb
das
xchg
xor
and
data16
mov
add
inc
outsl
cltd
push
push
pop
or
mov
jne
sub
cmp
fwait
mov
jle
jecxz
mov
mov
pop
popa
in
fiaddl
stos
es
cli
adc
jle
xchg
insl
pop
inc
sub
mov
push
jle
xor
inc
andb
mov
push
inc
xchg
lods
jge
dec
jecxz
loope
bound
push
cwtl
sub
mov
and
jmp
jno
xchg
std
add
aas
in
dec
and
dec
sbb
out
jg
and
push
pop
mov
js
adcb
xor
or
mov
inc
hlt
mov
xchg
popl
mov
in
inc
jg
pop
mov
xchg
or
sbbb
mov
push
cmpsl
lret
push
out
xchg
pop
data16
arpl
adcl
rorl
inc
sbb
aaa
dec
push
inc
es
pop
xchg
fnstsw
push
repz
jmp
out
cmp
xchg
test
xchg
inc
mov
push
add
push
sbb
xor
adc
outsb
mov
sub
mov
and
jno
xor
xlat
mov
push
xchg
cmp
adc
sahf
fadd
cmp
loop
repz
mov
movsb
adc
repz
fisubrl
in
dec
mov
lret
mov
xor
mov
sbbl
push
pop
jge
adc
test
xorb
jmp
mov
jae
lds
movsb
xlat
sub
and
jbe
popf
pusha
pop
and
loopne
mov
inc
shl
pop
push
out
sub
or
add
and
push
mov
mov
sub
aas
sbb
je
inc
clc
stc
test
nop
push
lret
mov
into
xchg
lock
.byte
cmp
add
add
add
push
add
add
add
add
mov
add
add
add
rolb
or
add
add
add
xchg
or
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
push
add
addb
add
js
add
add
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
enter
sub
or
xor
add
in
add
add
add
add
add
add
add
lock
add
or
xor
add
in
add
add
add
add
add
add
add
sbb
add
xchg
mov
add
in
add
add
add
add
add
add
add
inc
add
add
mov
add
in
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
add
add
rorl
xor
add
in
add
add
add
or
add
or
add
inc
add
orb
je
add
scas
add
cmpb
add
sbb
add
push
add
andb
orb
add
lret
xor
add
es
addb
addb
inc
add
inc
add
dec
add
push
add
add
add
add
add
add
xor
add
fs
rolb
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
in
add
in
add
add
add
or
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
sahf
add
add
or
rolb
add
in
add
add
add
pop
add
inc
add
dec
add
push
add
add
add
add
add
add
add
add
add
or
rolb
add
in
add
add
add
push
add
inc
add
inc
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
js
add
pop
int
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
stos
add
add
iret
or
rolb
add
in
add
add
add
pop
add
inc
add
inc
add
add
add
add
add
add
add
add
loop
add
clc
rorb
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
rorb
add
add
add
add
add
add
add
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
addb
cwtl
add
orb
inc
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
adc
add
add
in
add
add
add
add
adc
lock
pop
add
add
addb
add
sldt
rolb
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
jo
add
aam
or
dec
add
add
add
add
add
add
add
add
add
cwtl
add
or
in
add
add
add
add
add
add
add
add
add
rolb
add
add
in
add
add
add
add
add
add
add
call
fisttpl
add
add
add
add
add
add
add
add
add
adc
add
fisttpll
add
add
in
add
add
add
add
add
add
add
cmp
add
cmp
or
call
add
add
add
add
add
add
add
pusha
push
add
and
or
push
add
add
add
add
add
add
add
add
add
mov
add
js
or
cwtl
add
add
add
add
add
add
add
add
add
mov
add
adc
or
mov
add
in
add
add
add
add
add
add
add
fadds
add
cwtl
jmp
add
in
add
add
add
add
add
add
add
add
add
sub
or
sub
add
in
add
add
add
add
add
add
add
sub
add
push
icebp
or
cmp
add
in
add
add
add
add
add
add
add
push
pop
add
mov
or
in
add
add
add
add
add
add
add
add
add
js
add
js
or
sub
add
in
add
add
add
add
add
add
add
mov
cmc
or
mov
add
add
add
add
add
add
add
enter
pop
stc
or
mov
add
in
add
add
add
add
add
add
add
lock
add
in
or
les
add
in
add
add
add
add
add
and
add
push
or
subb
addb
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
xchg
add
mov
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
push
or
cmp
add
or
cmp
add
push
or
cmp
add
jle
add
cmpsb
or
cmp
add
into
or
addb
add
add
add
add
add
add
add
add
add
testb
add
add
add
in
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
inc
or
add
add
in
add
add
add
add
add
add
add
outsb
or
add
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
add
in
add
add
add
add
add
add
add
mov
add
add
add
in
add
add
add
add
add
add
add
out
add
in
add
add
add
in
add
push
sbb
add
or
sub
mov
sub
mov
pop
pop
dec
mov
sbb
adc
jl
add
xor
mov
inc
iret
test
pop
rol
add
stos
pop
js
mov
int3
mov
je
lret
and
add
aad
dec
repnz
jbe
mov
ret
push
je
mov
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
pop
insb
lods
push
or
sahf
xor
dec
xchg
dec
loopne
je
mov
inc
stos
ss
mov
adc
aas
shrl
sub
xchg
sub
add
push
incb
arpl
mull
jnp
inc
push
ret
fcmovnb
and
in
das
aam
mov
inc
shlb
cmpsb
ret
imul
ret
inc
jle
insl
xchg
sti
mov
mov
imul
push
push
dec
mov
push
xor
mov
jns
and
jns
in
xor
cmpsb
xor
cmpsb
mov
inc
push
and
adc
test
xchg
scas
inc
sub
sti
sarl
inc
sbb
dec
sbb
sbb
outsl
scas
push
mov
cld
cmp
cmp
inc
addb
mov
mov
cs
fadd
popf
shlb
inc
pop
xchg
sub
pop
jge
jmp
or
xor
mov
mov
xor
test
adc
lds
cmp
andl
fs
or
add
shrl
lods
pushf
jns
sbb
pop
cld
add
cmc
sti
add
repz
scas
mov
adc
adc
and
pop
stos
es
test
pop
and
pop
fcompl
outsb
xchg
ret
rolb
clc
loopne
push
mov
jmp
mov
popa
lahf
cmpsb
push
hlt
cmpsb
out
enter
xchg
scas
sbb
movsb
inc
fs
in
hlt
mov
es
cltd
out
and
xor
adc
sub
stc
ja
imul
push
prefetcht2
dec
mov
ret
xor
int
push
add
mov
adc
xor
dec
mov
orb
add
notb
sahf
pop
in
jae
sub
jno
hlt
notb
inc
push
sub
loop
mov
xchg
int3
lds
push
mov
ds
cs
xchg
cmpb
xor
sbb
repnz
arpl
mov
inc
ret
stc
insl
cmpsl
dec
hlt
inc
int
sub
pushf
int
stos
xchg
xor
cmp
sbb
add
aaa
jg
mov
mov
inc
scas
popa
das
fmull
aas
push
jae
sbb
or
mov
bound
cmp
jecxz
outsl
cmp
cli
cmp
mov
jo
cmp
test
out
push
test
les
cmpsl
sbb
sub
imul
cmpsl
inc
stos
mov
imul
aas
pop
mov
sub
sbb
bound
and
cmc
popa
fsubrl
in
jne
nop
ffreep
dec
es
das
icebp
sbb
lock
aas
lods
je
pop
cmp
adc
dec
inc
cmp
and
imul
rorl
xchg
cmpsl
or
jns
scas
bound
fisttpl
cmpsb
lahf
in
iret
dec
mov
dec
sub
push
into
mov
pop
mov
sti
cmc
js
xchg
sbb
icebp
add
movsl
jl
std
mov
sub
xchg
mov
jle
xor
pop
sti
push
add
jge
aam
insl
pop
int3
popf
mov
cmp
in
stos
push
cmpsl
sub
int
arpl
lret
jl
sub
xor
xlat
pop
imul
leave
and
and
push
in
inc
outsl
xchg
and
into
lods
xchg
fistpl
xor
or
in
sbb
cli
cltd
pop
aas
imul
mov
inc
push
clc
mov
mov
or
mov
pop
in
adc
dec
or
xor
mov
push
jecxz
jge
inc
insb
jmp
int3
lods
filds
test
cmp
mov
push
xchg
xor
and
mov
mulb
aas
mov
xchg
mov
push
jo
push
int
cli
sbb
aas
mov
iret
arpl
add
sahf
or
enter
jmp
ljmp
mov
jmp
xchg
cmp
inc
pop
in
ret
or
sub
lods
push
lods
sub
rcl
lods
inc
push
je
mov
repz
hlt
push
test
cmp
sbbb
xchg
hlt
dec
jl
push
lret
xchg
lods
ficoms
mov
insl
jp
push
repz
push
fbstp
mov
out
test
sub
sbb
add
cwtl
bound
sbb
rcr
mov
rorl
inc
pop
arpl
mov
pusha
roll
rcr
jne
dec
aas
ss
lcall
cmp
inc
lahf
pop
xor
pop
stos
test
add
scas
es
pop
mov
push
sbb
push
notl
xor
sub
xchg
push
sbb
jo
push
sub
pop
cmp
lods
mov
sub
xchg
int3
icebp
push
repz
dec
shrl
mov
ret
leave
cmc
fwait
dec
mov
sub
ss
out
sbb
lods
xchg
nop
jbe
roll
push
add
int
push
fs
hlt
push
ss
cmp
gs
xchg
sub
fimull
or
mov
pushf
loop
bnd
mov
add
fidivrs
add
adc
dec
mov
lea
xchg
xor
aas
xlat
pop
ljmp
jno
ds
scas
dec
xor
cmpsl
cmp
jae
adcl
cmp
shll
subl
xor
into
dec
iret
rolb
xlat
popa
loopne
or
mov
gs
cwtl
and
icebp
es
xchg
pop
aad
push
enter
pop
cmpsb
cmc
das
repz
bound
lods
inc
jnp
es
std
mov
insb
and
cmp
sbb
sub
in
pusha
je
ljmp
adc
lea
out
pop
fsubrs
jae
fcom
in
test
cld
ljmp
ljmp
mov
add
sbb
cmp
mov
jno
and
imul
clc
mov
push
sbb
and
mov
fnstsw
or
les
aad
mov
je
mov
bound
outsl
call
ret
rorl
int
or
shlb
test
mov
sahf
cwtl
subl
push
lcall
xor
dec
xchg
add
pop
repnz
fidivrl
lahf
mov
push
scas
nop
inc
ss
push
push
leave
mov
or
or
test
inc
push
add
mov
dec
cmpsl
dec
sbb
or
stos
es
pop
push
sub
pop
push
outsl
pop
xchg
test
ret
scas
dec
push
lds
pop
pop
rcll
pop
je
rol
jnp
outsl
pop
push
ljmp
div
out
mov
mov
fsubl
cwtl
scas
sub
mov
icebp
cmp
inc
or
add
nop
mov
xchg
fidivrl
mov
push
inc
jg
sub
mov
inc
mov
jg
push
rsm
sub
call
shl
dec
jae
fisttpll
pop
mov
fcoms
or
inc
pop
les
std
aam
xchg
sbb
cld
sub
sbb
outsl
lret
xor
cltd
andb
dec
in
mov
jns
stc
inc
xchg
mov
pop
adc
aam
loop
lock
xor
les
pop
test
insl
add
lret
add
icebp
ret
cmp
ds
sub
addr16
sub
lahf
push
adc
fcom
outsb
pop
push
shll
cli
xorl
idiv
inc
mov
in
clc
bnd
adc
jle
dec
push
out
js
outsb
push
outsb
or
je
mov
in
and
adc
adc
jecxz
js
mov
lea
out
fsubp
xchg
mov
popf
jno
call
cli
loope
and
add
out
jb
xor
int3
pop
pop
xor
xor
and
adc
dec
lret
add
inc
cmp
cld
inc
lods
and
mov
cmp
jae
orb
and
and
inc
xor
outsb
push
push
push
mov
mov
mov
xorl
loopne
outsl
mov
call
aaa
xor
pop
fdivrs
pop
xchg
jp,pn
xchg
pop
ret
shlb
sti
cmc
sbb
icebp
pushf
lods
das
dec
jo
gs
cmp
jg
add
fcoml
pop
out
out
mov
popf
or
mov
lahf
mov
add
jl
fwait
iret
fldcw
addr16
mov
xlat
adc
adc
loop
mov
and
sbb
dec
imul
mov
xchg
leave
fnstsw
loop
test
test
addr16
popf
js
xchg
sarb
addr16
lcall
ss
in
xchg
xchg
hlt
repnz
repnz
mov
mov
cmc
mov
adc
loope
test
insl
jle
xor
push
mov
sub
push
jns
popf
sbb
sbb
pop
dec
jno
aaa
sbb
lds
outsl
cmp
repz
inc
and
leave
test
pop
stos
jbe
add
xchg
push
push
push
or
movsl
push
adc
jge
pop
decl
ds
test
mov
mov
ficoms
mov
fldl
in
aas
xor
out
mov
push
inc
mov
popf
lret
xlat
outsl
dec
dec
cltd
sbb
loopne
stos
sar
sbb
imulb
mov
aam
sub
leave
popa
push
jl
inc
daa
or
repz
xchg
cltd
cmp
cmp
mov
dec
in
div
xor
aam
std
mov
shrw
stos
add
push
fwait
shll
jmp
jg
imul
xlat
ja
cmp
inc
call
push
fwait
das
test
cmp
mov
nop
ljmp
enter
cmp
push
rcrl
clc
sarl
inc
cmpsb
and
mov
push
or
xor
and
test
xor
pop
jl
shrl
das
inc
cmp
fs
xchg
lds
ds
rol
fistps
in
jp
xchg
push
cmp
sbb
outsb
jmp
add
adc
xchg
imul
int3
cmpsl
stos
aad
imul
pushf
lcall
pop
cmp
jl
fldenv
xchg
dec
int3
mov
cmc
mov
test
mov
into
cs
mov
inc
leave
add
inc
ret
push
xor
mov
repz
loop
lret
adcl
jle
out
sub
push
cmpb
call
dec
jno
sbb
push
mov
popf
jno
int
mov
adc
out
xchg
jl
mov
lret
xchg
inc
sbbb
out
pusha
adc
inc
dec
lcall
and
push
fsubrp
pushf
bswap
sarb
clc
ljmp
jns
popf
adc
mov
cltd
xlat
rclb
repz
out
outsl
stos
lcall
pop
mov
or
testl
jns
jb
clc
mov
pop
xlat
pop
decb
js
xor
arpl
lea
daa
lcall
loopne
ret
pop
jo
sub
outsb
outsb
out
xchg
push
mov
mov
mov
iret
inc
dec
in
movsb
xchg
mov
cli
jbe
sub
push
pop
sub
icebp
xor
xor
xlat
je
push
test
lcall
shll
xchg
sub
rol
fildll
pushf
and
enter
hlt
fisttpl
push
dec
in
enter
push
aam
fidivs
out
xlat
push
lods
sbb
popf
stos
xchg
push
push
lods
mov
enter
es
cli
jns
test
pop
xor
push
inc
push
mov
outsb
jae
xor
lcall
xchg
aaa
popl
mov
fidivrs
pop
pop
or
mov
test
out
jp
ja
test
dec
int
int3
mov
mov
cmp
in
xchg
ret
jmp
nop
daa
or
leave
sbb
pusha
sub
push
push
push
mov
jmp
aaa
test
inc
pop
imull
pop
push
fisttpl
insb
enter
xor
insb
mov
outsb
dec
jo
ret
jle
je
aam
mov
mov
ss
into
insl
sbb
push
repz
jmp
mov
aaa
push
orb
cmpsb
or
mov
and
or
outsl
ficomps
dec
pushf
mov
stos
cmp
lret
xchg
stos
inc
mov
into
xor
out
and
mov
cltd
xchg
mov
aas
push
fmuls
xchg
adc
mov
fmuls
sub
cwtl
int
out
push
es
or
call
jns
or
ret
stos
sub
mov
adc
push
ret
les
push
dec
mov
xor
ret
jle
jl
out
movsl
stc
pop
cwtl
mov
daa
mov
cwtl
imul
test
inc
or
loope
jmp
cmc
shrd
es
or
or
inc
or
sub
xor
cs
mov
add
push
and
and
mov
mov
das
lcall
movl
jbe
stos
inc
add
fisubl
scas
inc
mov
pop
sbb
fisubrl
iret
push
adc
popf
push
movsl
fwait
jmp
movsb
dec
xchg
stos
cmp
lea
cmp
lea
mov
sbb
mov
stos
dec
in
dec
out
jbe
popa
in
repnz
mov
rcll
xchg
inc
push
pop
jl
test
sub
inc
jae
lods
inc
jmp
rcrl
data16
inc
leave
or
inc
mov
adc
xor
iret
iret
out
loope
jae
in
push
scas
xchg
cmc
sub
pop
pop
xchg
enter
out
loopne
imul
lds
push
cltd
sbb
or
or
mov
cltd
cmpsl
or
mov
fnstenv
mov
unpcklps
mov
dec
lcall
xchg
mov
je
cmp
or
ds
xchg
roll
xor
push
mov
adc
insb
xlat
or
aaa
sbb
sti
hlt
addr16
jno
mov
dec
mov
insb
mov
mov
nop
in
pop
or
enter
pushl
stc
aas
pop
sarb
movaps
xchg
cli
not
lret
xor
mov
fcom
pop
outsl
ret
sub
pushf
popa
scas
push
fisttpl
das
imulb
dec
push
ss
mov
stos
outsb
imul
test
push
sub
aad
lret
arpl
add
sti
pop
lahf
cmpsl
das
fdivs
pop
fs
mov
jge
fiadds
ja
shll
pop
mov
in
outsb
mov
sub
shlb
fidivrl
and
sahf
jp
ret
add
repnz
sarb
push
inc
jle
xor
movsl
int3
and
sbb
cmpsl
inc
jmp
cmp
and
and
inc
imul
jle
pop
sub
jb
cld
mov
adc
ffree
movsl
push
fldcw
sub
add
mov
ss
outsl
notb
iret
faddl
mov
sahf
adc
outsl
lods
jl
mov
pop
xor
ljmp
jp
cmp
mov
ljmp
ljmp
jnp
push
ret
push
cs
cli
outsb
mov
and
test
aad
push
push
fdivrp
jmp
lcall
adc
sbb
xchg
in
and
mov
adc
pop
inc
xchg
cmp
cmp
repz
xor
pop
das
xor
add
aad
cmp
out
repnz
shl
mov
repz
jbe
xor
fisubs
stos
xor
es
and
stos
mov
push
push
repz
into
psraw
or
mov
jmp
and
and
aad
shll
shlb
pop
out
lcall
mov
xchg
lcall
xor
push
add
inc
xchg
jbe
loop
pop
popf
mov
arpl
mov
loop
push
mov
push
aas
inc
cltd
add
lcall
cmp
lds
xchg
or
cli
or
subb
jae
mov
mov
stc
pop
push
out
lds
ret
or
sar
mov
out
mov
mov
inc
imul
js
push
dec
jb
pop
push
inc
push
sbb
add
jno
xor
outsb
adc
mov
mov
mov
nop
pop
jns
xlat
jae
mov
mov
subb
xchg
jl
mull
mov
ror
imul
scas
outsb
cwtl
push
pop
ljmp
out
cmpsl
loopne
pop
movsl
stc
mov
leave
adc
rcrb
insb
lock
into
add
test
add
fildl
push
int
cmp
cmp
andl
stos
mov
aas
sub
pop
jmp
divb
cmp
sarb
or
adc
test
mov
sub
pop
mov
int3
test
imul
nop
cmpsl
adc
pop
mov
xchg
cmp
dec
add
xchg
xlat
push
adc
in
push
or
pushl
mov
inc
adc
sbb
sbb
divl
adc
xchg
lahf
jg
jl
mov
lret
inc
fisubs
fstpt
mov
pop
cld
inc
ret
lock
rcrb
cmpl
rcr
adc
popf
or
mov
cltd
inc
mov
mov
add
pop
mov
mov
fistpl
bound
fisttpll
sub
andb
mov
sbb
dec
or
cld
inc
mov
or
jno
and
lahf
mov
ds
and
subl
or
push
push
mov
xchg
movsl
or
je
push
inc
xchg
mov
negb
popa
pop
cltd
in
add
orb
mov
inc
jae
fwait
pop
lea
lgs
cmova
mov
in
notb
adc
adc
push
xor
inc
dec
mov
sahf
xor
pop
cmp
adcb
lods
xchg
ret
or
das
mov
mov
sbb
and
nop
addl
sub
stc
loopne
mov
test
nop
nop
decl
repnz
push
out
sti
fists
add
xorl
clc
adc
mov
scas
lds
ror
add
fdivl
dec
ljmp
popf
sarb
or
inc
cmpsb
std
fcompl
sahf
cltd
xchg
sub
fnstenv
add
mov
mov
sti
mov
je
aam
add
cmp
xchg
xchg
jnp
fdivs
test
jecxz
nop
das
paddd
xchg
mov
call
mov
push
push
xor
jno
nop
mov
mov
sahf
and
aas
dec
cmp
xor
cs
push
or
push
sbb
and
in
in
mov
or
sbbl
aam
push
rcll
and
shrl
gs
push
sbb
adc
mulb
sub
lcall
mov
xor
shll
out
orb
fnstcw
mov
scas
push
jg
xor
inc
inc
rolb
and
pop
jae
pop
outsb
push
cs
imul
ss
xor
les
bswap
jle
mov
jge
pop
pop
aas
inc
cmpb
cmp
xlat
sub
adc
sub
mov
cld
aaa
jp
jns
in
or
daa
inc
jmp
pop
mov
sarl
mov
push
out
xchg
or
bound
scas
lds
pop
scas
outsb
shll
add
fstpt
leave
mov
jo
pop
cmp
push
jp
fsts
inc
repz
xor
jb
add
sbb
stos
outsl
xchg
mov
sbb
icebp
ds
out
adc
aad
sub
sbb
es
cmp
jb
fbstp
out
test
fsts
sar
repz
arpl
test
iret
sub
test
test
mulb
outsl
lods
ret
lahf
imul
and
imull
sbb
addr16
aaa
bound
mov
xlat
shll
sbb
xchg
in
leave
outsb
fwait
bound
adc
std
mov
xchg
pop
add
or
adc
fs
mov
and
in
lret
mov
fidivrs
iret
rorb
aaa
mov
pop
cltd
pop
or
out
sti
dec
arpl
inc
cld
and
sub
jbe
mov
out
int
push
push
push
or
lods
adc
or
addr16
pop
int
aas
sub
mov
inc
outsb
and
ficompl
lret
xchg
outsb
std
not
sbb
sbb
mov
out
jne
jne
adc
clc
pushf
add
out
jns
stos
pushf
mov
push
stc
outsl
inc
sbb
pop
dec
icebp
push
jl
xor
and
aas
mov
mov
sbb
sbb
in
fxch
dec
inc
incb
fsubrl
aam
jmp
fisubrl
into
fnstcw
pop
add
shrl
ficomps
scas
xchg
jmp
mov
dec
mov
sbb
sbb
popa
mov
inc
xchg
mov
pop
arpl
push
xor
nop
xchg
push
push
test
std
aad
mov
jecxz
arpl
das
subb
jae
fsubr
vpcmpeqw
and
je
mov
es
or
jp
pop
or
insl
shlb
les
lahf
lea
jmp
pop
mov
sti
shl
mov
xchg
mov
bound
push
cld
or
or
aas
xchg
ds
popf
fisubrl
sbb
outsb
out
add
cld
add
add
call
sbb
insb
xchg
jae
jmp
out
push
pop
insb
jns
daa
shrb
cmp
outsl
jo
pop
aad
sub
jle
loope
jb
lret
ss
adc
inc
std
cltd
sub
test
sbb
test
test
in
pusha
push
inc
lret
adc
cmpb
lods
or
sbbb
push
and
xchg
in
cmpsl
or
mov
out
mov
and
lock
mov
loope
mov
xchg
stos
mov
hlt
mov
jae
or
push
mov
add
vmovupd
iret
aaa
xor
xchg
mov
push
out
mov
lods
ret
mov
cli
dec
notl
imul
fbstp
test
dec
sub
inc
cmpsl
cwtl
push
mov
mov
push
inc
jge
or
mov
jns
inc
mov
outsb
adc
insl
into
lds
push
aad
fldenv
push
fadds
movsb
out
add
loopne
jno
xchg
jecxz
enter
jnp
jbe
jnp
push
lods
xchg
cmpsb
popf
and
pusha
mov
lret
icebp
mov
movq
dec
cmp
fiaddl
jnp
mov
jg
pop
popa
es
or
dec
jmp
loope
xchg
and
movsb
mov
ret
loope
mov
inc
sub
lahf
xor
aam
cmpsl
cmpsl
imulb
inc
sbb
mov
add
mov
sub
jbe
popf
inc
popl
pop
lret
adc
mov
notl
xor
push
inc
inc
inc
sub
xor
pop
cmc
movsl
add
test
cmp
popa
out
aam
stc
dec
or
and
xlat
fdivrs
mov
call
nop
mov
add
ljmp
into
filds
mov
inc
push
fimuls
cwtl
pop
push
inc
and
scas
cld
mov
dec
inc
jl
popa
int
jnp
mov
mov
sarb
mov
inc
adc
cltd
test
jae
add
imul
mov
das
std
mov
xor
add
sbb
jge
jecxz
inc
push
jp
add
mov
std
and
or
push
jo
out
out
mov
rcrl
add
jg
fucomp
and
jno
fucom
and
ret
jae
movsb
cmp
add
subl
mov
lds
xchg
sub
xchg
inc
mov
mov
xchg
ds
push
lds
mulps
fwait
cmp
lds
fs
enter
push
out
pop
xchg
xchg
repnz
or
inc
fcompl
add
push
jp
les
pop
andb
cwtl
inc
aas
lcall
and
shrb
pop
lcall
ret
sti
xor
adc
push
ljmp
cmp
arpl
adc
into
daa
add
or
or
inc
mov
lods
jmp
push
mov
jne
xor
int
idivl
fimuls
pop
and
mov
and
das
and
adc
faddl
mov
xor
in
push
dec
mov
cmp
mov
adc
lods
rcrb
jmp
sub
mov
jne
pusha
fimuls
fcomps
add
repnz
adc
xchg
lcall
xorb
outsl
jl
arpl
pop
jne
and
add
pop
inc
push
sbb
test
cmc
popf
sbb
outsl
shl
es
loope
inc
jmp
arpl
aas
or
sub
pop
and
push
pop
pop
repnz
sti
jb
pop
inc
fwait
pop
es
outsb
mov
pop
js
jge
fwait
jp
pushf
fwait
push
adcl
inc
add
sbb
push
adc
es
inc
pop
ret
ret
xchg
mov
jecxz
fmuls
pop
dec
jle
fisubrl
xlat
or
loop
xor
aad
xor
add
push
jecxz
les
sbb
fs
and
fimuls
js
mov
sbb
in
and
push
and
jae
lods
xor
neg
ret
cs
icebp
les
and
js
mov
repz
test
xchg
and
ja
dec
mov
lret
inc
out
mov
jns
mov
dec
push
and
repnz
aad
gs
inc
mov
fimuls
or
fisubs
addr16
or
pop
push
inc
int3
sbb
in
push
fisubrs
xor
adc
test
mov
leave
test
stos
insb
test
or
add
icebp
dec
ret
daa
adc
pop
sti
or
jns
dec
mov
mov
adc
xchg
push
xchg
xchg
or
repz
pop
and
mov
insb
or
mov
lcall
dec
popf
sti
fadd
jae
jmp
rcr
arpl
or
sbb
pop
cld
dec
aad
pop
lds
pop
jb
push
sti
std
negl
mov
fists
cltd
xchg
lret
sbb
movsl
mov
cmpb
dec
test
jo
std
aaa
jle
sbb
jecxz
int3
cmc
shrl
sti
mov
sbb
cmp
jge
sbb
scas
lds
iret
pop
sar
adc
enter
cmp
aaa
dec
sbb
movsb
ljmp
and
pop
xor
test
cmp
test
inc
in
dec
dec
adc
lea
push
mov
lea
movsb
pop
das
out
push
dec
push
xchg
adc
ljmp
sub
dec
sub
and
std
pop
mov
sub
sub
dec
jle
jne
adc
add
cmp
rol
testb
mov
stos
or
push
cmp
jle
cli
add
in
inc
loope
dec
xor
mov
xchg
in
stc
push
mov
mov
mov
xor
push
sahf
test
test
and
int
mov
sub
xor
mov
jl
scas
test
in
xchg
sahf
add
fldcw
aad
ljmp
mov
fadd
pop
repz
in
scas
sbb
mov
bnd
mov
cmp
outsl
bound
and
call
inc
cmc
and
leave
lods
fsubrp
lods
and
and
mov
add
pop
outsb
mov
jecxz
jne
int
sbb
pop
dec
cwtl
mov
inc
out
ja
les
fimuls
dec
shl
dec
cmp
sti
dec
lret
adc
jg
sub
sub
ljmp
jo
pop
scas
cmp
xchg
fdivs
mov
and
jae
repz
adc
xlat
out
sbb
or
pop
add
adc
testl
es
adc
scas
cmp
sub
insb
dec
pop
stos
das
or
pop
lret
sub
out
mov
in
in
inc
mov
mov
adc
fpatan
daa
inc
fcoml
lods
xor
lret
fstl
sub
add
mulb
daa
xchg
or
adc
dec
pop
sub
adc
into
or
lret
into
ficoms
xchg
shrb
jbe
mov
mov
jmp
pop
rorl
je
loop
sbb
fisttpll
mov
rorl
popf
fadd
jne
rorb
in
movsb
xor
or
andb
and
pop
inc
mov
fucomi
dec
call
test
inc
leave
sbb
inc
sub
sbb
daa
cld
repnz
dec
jnp
insb
xor
lret
mov
rclb
dec
cmp
out
inc
scas
xlat
push
aad
xchg
decl
push
push
aam
xchg
lahf
scas
cwtl
test
stc
mov
sti
in
xchg
sub
int3
add
xchg
add
xchg
addr16
mov
sysenter
pop
mov
out
data16
dec
rcl
inc
iret
and
outsb
sub
cmp
into
test
add
jae
sbb
pop
xor
cmp
and
lock
pop
pop
add
mov
pop
mov
xchg
xchg
adc
pushf
fldenv
mov
inc
xor
rorl
xlat
gs
mov
mov
jb
shll
test
pop
and
js
loopne
mov
call
cmpsl
pop
jne
mov
call
nop
xchg
popa
jl
in
out
mov
pop
rcr
pop
mov
push
out
mov
push
xchg
lds
aas
adc
lock
inc
sub
add
mov
rcrl
jnp
mov
das
xchg
mov
and
into
xchg
inc
ficoms
adc
aam
lods
test
jl
out
movsb
push
out
xlat
adc
ret
adc
xchg
repnz
push
inc
fdivrl
data16
sarb
add
ljmp
push
xchg
dec
je
in
inc
mov
ja
push
sbb
push
cmp
loopne
add
sbb
pop
and
xor
mov
fs
jae
out
jle
mov
frstor
inc
stos
out
pop
icebp
adc
xor
shlb
pop
xrelease
repnz
pusha
into
sbb
or
loopne
in
outsb
subl
mov
loopne
push
xchg
adc
aaa
out
cmc
stos
cmp
or
lret
ss
int3
mov
repz
daa
dec
pop
bound
jmp
insl
out
insb
xchg
push
insl
dec
mov
cs
cmp
lock
sti
sahf
inc
pop
jg
loopne
mov
ljmp
pop
js
xchg
sbb
or
roll
inc
hlt
cmp
mov
jae
jb
jne,pn
cwtl
xor
jns
mov
mov
and
push
xchg
jle
sub
jecxz
in
lods
xchg
sbb
repz
lret
out
repz
xchg
adc
iret
push
adc
imul
push
or
fucomip
js
std
stos
inc
daa
inc
sarb
movsl
dec
sti
sub
pop
xchg
and
add
in
jmp
and
sbb
ss
mov
ds
popa
pop
dec
push
popa
inc
aam
push
xor
enter
mov
inc
test
xchg
adc
sbb
mov
dec
pusha
cs
andl
xchg
loopne
psrld
fs
add
daa
push
aad
cmpsl
iret
subb
pop
je
je
pop
push
je
xchg
push
int
dec
sahf
jbe
and
bound
test
gs
cmp
pop
shll
inc
jmp
pop
mov
enter
shll
aaa
rorb
inc
add
xchg
ret
ffree
cwtl
jecxz
loope
fwait
call
fs
imul
dec
mov
mov
das
flds
popa
inc
ds
nop
fistpl
xchg
out
in
mov
pop
mov
jne
mov
cltd
jmp
ret
cs
ss
test
test
and
std
or
jnp
jb
fwait
outsb
cmc
ds
sbb
lret
add
cmc
outsl
cmp
and
shlb
push
xor
lahf
mov
xchg
call
imul
roll
aam
stos
icebp
adc
inc
dec
lods
in
push
xchg
out
orb
movb
mov
fwait
dec
clc
cmpsl
mov
jecxz
or
xchg
jbe
sahf
pop
arpl
mov
enter
adc
fnstsw
mov
xor
cs
fwait
or
or
jns
lock
pop
rol
mov
ret
and
cmp
mov
sub
lret
mov
dec
mov
and
pop
fs
lock
clc
into
add
lods
jl
fistpll
lods
and
ficomps
xchg
cld
inc
insl
or
mov
js
mov
mov
push
inc
pop
movsl
mov
xor
movsb
test
push
iret
cmp
mov
add
cld
xchg
lcall
xor
cmc
push
adcl
imul
cmpsb
aam
fiadds
cmp
sub
push
fs
push
fbstp
xor
idivb
jecxz
xlat
test
scas
cltd
lods
adcb
xor
mov
mov
in
cmpb
pop
mov
rclb
leave
dec
push
int
pop
cwtl
jne
popa
or
movsb
mov
adc
fmul
in
xor
shll
and
xor
cwtl
enter
rcrl
pop
cltd
xorb
aaa
arpl
insb
add
xchg
outsb
ljmp
jge
std
out
sahf
ss
mov
mov
movsl
out
mov
jecxz
fsts
mov
push
xchg
add
mov
dec
mov
lods
aaa
or
mov
icebp
testl
faddl
xor
cmp
mov
addr16
mov
es
addl
lahf
sub
cmc
daa
lea
lods
pop
push
in
or
inc
aas
jbe
xor
in
cmp
js
popf
arpl
movsl
dec
and
jne
fldl
es
stc
xchg
pop
scas
xor
add
pop
out
push
mov
cld
cmpsb
xlat
cmp
mov
mov
xchg
mov
cli
mov
adc
std
add
cmp
fnstcw
ss
cmpsl
pop
icebp
stos
xchg
xchg
push
add
add
ja
sub
add
popa
adc
lods
sahf
mov
push
mov
aas
lahf
jo
ret
mov
dec
inc
mov
fldln2
mov
das
dec
mov
mov
loopne
negl
push
and
mov
push
ret
sbb
mov
push
jg
sbb
ret
dec
xor
mov
mov
add
mov
sub
xorl
lret
test
cwtl
push
push
sub
push
nop
mov
fwait
mov
addr16
add
ffreep
dec
sarl
add
and
jnp
sub
and
inc
xor
cltd
aaa
xor
mov
sub
call
inc
jae
out
push
js
mov
fldt
test
xchg
leave
scas
jmp
fimuls
lods
std
bswap
arpl
cltd
ss
outsl
out
push
out
pop
lea
push
cmp
cs
addb
rclb
cmp
ja
inc
fs
test
xchg
mov
dec
aam
or
imul
mov
mov
inc
dec
stos
aaa
mov
call
push
outsl
movsl
jae
cmpsb
jnp
or
je
sbb
add
mov
mov
pop
test
idiv
jmp
and
fst
inc
loopne
jg
mov
or
mov
ret
dec
test
push
pop
clc
xchg
xor
fistps
push
popf
xorl
mov
pusha
mov
inc
pop
stc
es
fnsave
testb
jge
push
in
mov
aaa
jl
jecxz
dec
inc
jb
dec
fnsave
dec
ljmp
lahf
mov
adc
jl
fidivs
sub
pushf
mov
dec
sub
mov
push
sub
leave
orb
inc
insl
jmp
xor
jnp
bswap
mov
test
insl
adc
or
jle
push
adc
sbb
jecxz
call
repnz
loopne
stos
add
mov
sbb
dec
sahf
mov
sub
sbb
aad
xorl
into
jb
sahf
addr16
dec
dec
out
pushl
add
sbbb
mov
xlat
push
push
dec
clc
push
add
addr16
push
stos
or
roll
lret
aaa
pop
out
cmp
imul
and
add
enter
in
inc
ret
add
push
jae
addl
adc
stos
mull
xchg
push
and
jne
pop
and
push
adc
xchg
aas
push
sub
leave
in
sbb
cwtl
ja
loop
cmp
repz
mov
loopne
add
ja
xor
sbb
sub
loope
mov
jno
push
jbe
inc
or
cmp
jle
js
pop
hlt
cli
sub
xchg
cwtl
out
mov
lahf
sbb
clc
test
dec
addl
add
sbb
pop
cmpsl
inc
cwtl
cmp
pop
sub
xor
inc
cmovne
fnstsw
andl
das
cmp
cmpsl
inc
nop
leave
icebp
jae
push
shl
testb
push
clc
adcl
mov
add
fstps
es
pop
in
cmpsl
loop
mov
xchg
jne
sar
ret
xchg
icebp
dec
xor
and
jg
push
pushf
icebp
xchg
clc
xchg
jge
out
adc
inc
lret
jns
xchg
insl
addr16
jno
popf
fstl
mov
leave
aad
popf
cltd
push
mov
inc
cli
inc
psadbw
add
mov
push
mov
iret
loop
bnd
fcomps
jge
sub
and
pop
pop
and
addr16
imul
jno
jns
and
xor
out
js
popf
shll
stos
addr16
dec
sub
call
jl
pop
mov
in
jns
popf
mov
popf
cli
sbbl
mov
jp
inc
sbb
jb
rorb
pushw
push
lea
pop
push
push
push
and
inc
adc
xor
jns
addr16
std
loop
add
mov
mov
dec
in
add
mov
test
mov
mov
enter
jo
fwait
test
xchg
sbb
mov
push
shll
dec
popw
lcall
sahf
xchg
mov
sahf
lret
sbb
jbe
int
cli
iret
leave
add
rcl
xchg
dec
adc
fwait
pop
dec
test
mov
xor
jns
add
out
xchg
mov
sbb
aad
loopne
add
and
das
into
cmp
fisttpl
adc
inc
push
lods
xor
inc
adcb
inc
gs
cs
and
loop
int
dec
pop
xchg
mov
inc
cmc
push
in
mov
push
rcl
insl
in
out
sub
shll
fstpl
push
dec
stos
imul
repz
clc
fsubl
pop
cmpl
add
xchg
movsl
xor
lret
push
pop
inc
add
mov
jae
jb
and
mov
adc
or
out
add
aaa
je
xor
and
pop
adc
jge
lds
aam
jp
fadds
pop
dec
inc
cmpsl
and
xchg
and
sub
cmp
lods
gs
add
xchg
dec
lods
xchg
jne
iret
subb
mov
jno
mov
cmp
mov
movl
sbb
cltd
xchg
leave
jecxz
push
dec
inc
or
push
sbb
dec
push
ss
lret
inc
or
ret
adc
xchg
push
fwait
mov
adc
sub
into
les
bound
fcmovne
push
mov
in
out
cmp
dec
adc
lods
insb
xor
jb
ds
loopne
xchg
fnstenv
fs
pop
test
cmp
call
stos
call
imul
add
dec
xchg
outsb
cmp
sub
adc
pop
add
mov
adc
lcall
pop
stc
in
push
sub
sub
or
int3
sub
ret
gs
cmc
push
in
dec
inc
aam
scas
stos
mov
outsl
fisttpll
int
pop
inc
stos
jno
mull
push
dec
test
cmpsb
mov
dec
mov
daa
fnstenv
adc
and
fsubs
imull
xchg
gs
pop
xchg
jg
jne
xchg
add
and
adc
leave
sub
sub
dec
push
bound
mov
mov
and
mov
cmp
pop
jecxz
fldl2e
inc
addr16
cwtl
mov
cwtl
add
pop
xor
fistpl
bound
ret
sub
push
clc
jb
sbb
or
inc
sbbl
dec
mov
mov
popa
jns
inc
pusha
push
pop
mov
jecxz
push
mov
jmp
jg
mov
xor
pop
test
mov
fbld
negb
pusha
insl
cmp
iret
sbb
mov
mov
inc
js
rorb
enter
popl
decl
pop
cmp
mov
jge
bound
test
mov
add
ja
lock
aaa
add
fnsave
loop
mov
stos
rcrl
and
jno
test
hlt
or
pop
outsb
sub
mov
jae
push
out
or
inc
fnsave
rolb
insb
jg
jns
outsl
jecxz
xchg
lock
arpl
pop
jne
jecxz
pop
pop
or
push
daa
out
ja
and
push
out
mov
jbe
mov
shrb
inc
sub
leave
call
sbb
pop
mov
mov
pushf
sub
fmul
xchg
pop
cmpsb
inc
ja
ret
pop
fisubrs
fdivs
xchg
in
ret
inc
popa
cmpsl
aaa
mov
xchg
jmp
inc
sarb
mov
pop
xor
mov
jae
mov
arpl
fisttpll
dec
into
inc
push
popf
jnp
sub
es
out
fmull
es
mov
test
testb
pusha
pop
enter
ret
aaa
xchg
dec
pop
or
push
imul
lret
dec
psraw
aam
or
cwtl
popf
packsswb
jne
jp
shlb
push
pop
jo
mov
negb
lods
aas
add
test
jle
stos
out
mov
fs
xchg
xor
fs
push
push
ds
int
cmp
sub
mov
mov
adc
adc
je
int3
push
popf
sbb
imul
mov
loope
les
xor
mov
jp
aam
xchg
jl
scas
cmp
fwait
cmpsb
push
lods
es
xor
cmc
inc
mov
cmpl
sub
lods
mov
cs
das
mov
add
mov
xor
cs
subl
mov
mov
insl
in
pop
push
ret
jb
mov
mov
imul
lods
fs
sarl
push
inc
or
sub
cltd
in
in
clc
pop
mov
xor
dec
jnp
testl
xchg
outsb
or
jo
xor
add
int
jge
mov
test
call
cmp
sbb
xor
jo
popf
pop
or
sub
push
pop
push
ret
mov
rcr
cltd
cwtl
add
inc
sbb
sbb
cmpsl
push
adc
mov
inc
pop
pop
mov
popa
ljmp
mov
dec
mov
pop
xor
push
xchg
fsubrs
adc
lret
addl
ja
mov
out
add
lods
and
jmp
lods
xor
mov
cmp
js
pop
lea
int
and
aam
setg
or
sub
ret
jl
xchg
insb
insl
push
inc
movsl
or
add
push
fs
mov
or
jae
cmp
mov
add
jb
repnz
lock
xchg
pop
pop
pop
sub
js
adc
mulb
jp
out
sub
xor
bound
out
push
je,pt
xor
jl
gs
mov
insb
xchg
test
inc
add
insb
pop
lcall
ljmp
pop
and
push
out
mov
pop
mov
ds
sub
and
xor
cmp
xor
fdivs
mov
mov
mov
mov
shlb
out
not
mov
test
fs
mov
xor
in
jg
out
icebp
xchg
mov
and
xor
jmp
mov
jg
subl
or
das
pop
jg
sub
stos
hlt
lea
pop
rolb
cmp
inc
xchg
add
push
and
lahf
in
ja
xor
inc
push
mov
dec
xchg
loope
fsub
adc
popf
sub
xchg
fld
pop
add
cmp
pop
roll
sub
add
sbb
movsl
lret
in
or
sbb
ret
jmp
iret
jmp
cmpsb
movsb
int
pop
mov
adc
cmc
jl
repnz
idivl
mov
enter
adc
loope
cmp
das
add
mov
or
cmp
sub
roll
mov
cmp
pushl
loope
jno
rcrb
dec
loop
out
lods
mov
or
push
lea
outsl
adc
std
sahf
daa
lret
mov
jne
cmp
add
out
jo
lds
sti
into
pop
inc
rcrl
aad
js
out
cmpsl
scas
and
scas
test
fnsave
cld
arpl
adc
ss
xor
add
xchg
cmpsb
xchg
mov
fsubrl
sub
stc
add
icebp
xchg
adc
and
xor
pushf
and
xor
or
lock
roll
mov
inc
and
cmpsb
cmp
scas
aaa
arpl
cmp
aas
xchg
adc
or
dec
dec
outsb
dec
ljmp
dec
ret
shrl
dec
insb
mov
pusha
dec
push
sbbb
mov
dec
dec
or
repz
fcmovb
xchg
fbstp
nop
pop
icebp
hlt
add
movsl
inc
mov
pop
fdiv
mov
pushf
les
imul
or
push
sub
push
repz
leave
jle
xor
fnstcw
push
std
insl
sbb
insl
jnp
popf
lea
rclb
cmp
outsb
out
inc
into
subl
pop
jle
dec
sbb
inc
dec
adc
daa
dec
xchg
or
jb
jp
lret
aam
push
lock
dec
jo
clc
jmp
sbb
filds
jp
pop
ljmp
mov
push
mov
xorb
aaa
and
test
ljmp
lahf
pop
xchg
sub
xchg
ljmp
mov
xchg
push
sub
out
pop
pop
inc
fcomi
and
lcall
mov
dec
or
pop
data16
push
or
psubw
adc
lret
mov
inc
lret
dec
out
loope
push
adc
test
jle
jbe
icebp
pop
iret
sub
out
repz
gs
push
sub
loopne
lea
vorps
popaw
dec
sbb
mov
enter
push
mov
pop
push
pusha
mov
inc
add
pop
ficoml
xor
inc
xchg
loope
dec
push
push
xor
sarl
rcrl
addr16
mov
addl
adc
bound
stos
pusha
jmp
pop
xchg
pop
cwtl
sub
imul
adc
les
sbb
xchg
in
inc
notb
pop
mov
arpl
sti
les
xor
hlt
lcall
pop
idivl
xor
into
ja
xchg
mov
popa
or
nop
test
pop
mov
and
repz
inc
daa
outsl
movsb
cli
movsl
cli
sbb
cmp
enter
testl
loopne
and
rcr
pusha
mov
cmp
fcmovnbe
inc
mov
fildl
sbb
loopne
mov
pop
pop
sti
movsl
ud1
arpl
shr
fidivs
int3
cmp
cmp
leave
jne
enter
clc
in
nop
pop
and
add
pusha
mov
ja
and
and
std
std
lret
dec
stos
push
mov
xor
ficompl
ret
inc
push
ds
stc
sahf
test
jl
dec
stos
push
mov
xor
pop
ds
lock
push
ja
outsl
mov
loope
jle
lods
or
dec
cmp
push
pop
add
js
sbb
sbb
jb
pop
rorl
lea
sbb
in
in
in
fwait
aaa
jmp
lds
pop
cmp
ss
test
lret
and
stc
cmp
jp
mov
mov
sub
xchg
sbb
xchg
push
in
test
mov
sbb
or
sub
ss
mov
jecxz
adc
into
decb
cltd
movsl
in
and
pop
push
mov
push
or
cmp
lss
mov
or
xchg
std
mov
aam
mov
cli
xchg
pushl
loopne,pn
push
dec
negl
or
lcall
jno
jge
pop
rorb
ret
xlat
mov
push
xchg
lret
push
sub
dec
negl
jne
add
mov
js
pop
mov
xchg
xchg
or
hlt
mov
xchg
push
cmp
fisttpl
call
xor
pop
cld
push
imul
sub
nop
and
in
fcmovu
addr16
lock
jmp
mov
repz
and
xor
lret
mov
repnz
xchg
std
mov
cmp
cwtl
jp
and
push
test
push
sub
ror
fistps
inc
xchg
dec
pop
sub
mov
dec
adc
imul
mov
andb
jmp
sub
outsl
arpl
cmc
mov
and
push
pop
das
cmpl
inc
scas
inc
out
inc
jmp
jecxz
mov
xchg
push
jns
lret
imulb
add
sbb
fisubrl
push
cmp
mov
mov
jno
mov
mov
xor
mov
jmp
dec
ds
lea
xchg
cmp
xchg
int
popa
push
sbb
loopne
sbb
sar
jge
stc
repz
jmp
add
xor
fsubr
lcall
and
or
out
adc
jo
fsts
inc
pop
int
sub
xor
call
ss
rclb
adc
push
enter
mov
xchg
insb
dec
nopl
iret
xchg
test
test
cmpb
pop
fcomps
jae
insl
out
outsl
sbb
dec
and
adc
movsl
inc
and
xlat
mov
cmp
xor
enter
dec
out
ret
adcb
add
sub
or
leave
and
mov
adc
out
jae
call
pop
daa
and
or
rorl
mov
xorl
loop
inc
sbb
jno
push
or
jmp
xor
or
mov
addl
addl
xchg
dec
pop
add
mov
and
jmp
push
in
mov
pusha
sub
jecxz
add
adc
xchg
sub
mov
out
inc
insl
dec
in
fldt
xchg
xchg
push
inc
out
cmpl
mov
sub
cmp
push
divl
rcl
int
icebp
lods
lsl
dec
movsl
mov
pushf
jno
adc
icebp
push
jo
adc
push
lea
mov
pushf
mov
push
pushf
mov
idivl
jl
mov
out
mov
mov
es
xor
sbbl
hlt
jg
dec
bound
dec
mov
jle
xor
cmc
aam
sub
jb
xchg
xchg
sub
pop
sbb
pop
inc
and
das
stos
push
inc
stc
push
inc
cmp
lcall
jb
fs
or
mov
lock
sar
mov
add
call
testb
push
push
mov
sub
aas
sti
or
fadds
dec
and
mov
and
add
mov
jns
out
xor
jb
aas
aas
movsb
fcoml
popf
and
inc
test
test
adc
sub
mov
icebp
cmp
cltd
jbe
clc
jno
sub
or
mov
cmp
aas
dec
jge
cmpsl
leave
push
movsb
pop
in
arpl
fwait
adc
mov
or
popa
imul
test
lock
mov
js
dec
es
xchg
jbe
test
cwtl
stos
mov
loop
popl
or
ljmp
sbb
pop
add
ds
mov
test
fwait
cmp
scas
cs
pop
or
out
or
and
fbstp
fwait
push
mov
mov
add
loope
dec
div
mov
jl
lahf
das
cmp
ds
call
outsl
dec
dec
push
cmp
aam
lods
xchg
lret
mov
popf
pop
cltd
cmp
dec
cld
jecxz
jmp
sub
imul
cmp
sub
jmp
xchg
xchg
je
movsb
and
xchg
sbb
sub
jl
mov
pusha
jne
dec
scas
int
mov
sbb
add
jmp
cmpsb
jne
push
insb
insb
daa
xchg
je
dec
sub
lods
pop
outsl
xor
mov
shl
push
nop
xchg
jb
iret
jns
sub
test
sub
push
inc
popa
rclb
adc
jp
push
daa
shll
xor
bound
inc
push
push
push
mov
outsb
push
xor
xor
sub
aam
stc
cmp
add
movsb
aad
sbb
shll
fbld
subl
jne
xchg
test
ja
fstps
cmpsl
pop
in
push
stc
lahf
mul
test
ds
sbb
cmpsl
mov
fldl2e
scas
pop
xchg
pop
test
inc
dec
cmp
and
xor
push
ljmp
pop
adc
cltd
call
je
and
loop
jo
push
inc
cmpsl
sub
jns
stos
pop
mov
fidivrs
mov
xchg
xor
arpl
mov
or
lret
add
addr16
and
mov
xchg
lds
leave
pop
dec
movsl
sbb
jne
sbb
xor
push
paddusb
push
xchg
pusha
adc
les
jno
push
push
test
push
inc
xchg
and
stc
push
pop
add
jns
fistps
test
jl
fcoml
clc
pop
cmpsl
outsl
mov
push
dec
ja
lock
leave
add
mov
xchg
push
inc
out
lahf
leave
mov
pop
or
lods
lret
sub
push
mov
sbb
ja
scas
add
xchg
adc
imul
mov
push
gs
or
ja
gs
mov
push
cmp
lods
fidivl
lods
repz
adc
notb
lods
push
sbb
lret
or
lods
idivl
fcmove
test
lea
pop
fsubrs
xchg
jbe
mov
add
push
lea
loopne
sub
inc
inc
nop
sahf
lods
divb
dec
xchg
cwtl
mov
dec
std
dec
imul
addl
ja
mov
cwtl
sub
leave
jge
sahf
lock
xor
data16
addl
sarb
lods
cwtl
xchg
std
out
aam
mov
mov
fidivrs
mov
lahf
cmpsl
popf
neg
shrl
sub
lret
adc
pop
jb
lret
out
mov
subb
ror
xchg
sahf
fwait
test
arpl
cwtl
int
xor
cmpsl
add
cmpsl
inc
hlt
dec
adc
loopne
addr16
dec
fisttpll
xor
out
mov
sbb
test
and
sub
fs
ret
scas
notb
lods
dec
xor
aad
bound
xlat
loope
dec
int3
dec
cwtl
lods
xor
mov
add
int3
iret
test
sbb
fsub
mov
inc
or
shlb
stos
repz
divb
push
mov
adc
arpl
lods
scas
test
rorb
adc
push
cmpsb
pushf
mov
sub
ss
subb
bound
pop
cmc
rol
push
xor
es
push
push
cli
sbb
popf
in
cmp
sahf
fldl2t
jo
xor
add
cmp
push
inc
test
gs
lods
add
and
jae
add
push
test
mov
arpl
insl
popf
fcoml
sub
mov
push
push
cmc
sub
adc
aad
fcoms
dec
or
ficoml
and
cmp
scas
mov
stc
sub
mov
imul
int3
mov
arpl
add
jecxz
jg
push
inc
movsl
out
out
or
lcall
cmp
mov
jae
filds
repz
jp
jp
jo
sbb
xorl
jp
popa
xor
bound
les
mov
imul
jecxz
pop
repnz
inc
es
mov
push
iret
or
xor
enter
pop
cmc
sbb
mov
pop
pop
out
nop
mov
mov
inc
sbb
mov
cmp
mov
into
sub
insl
sarb
arpl
movsb
push
dec
xor
ret
xlat
push
insb
jno
outsb
sbb
mov
push
xor
sub
pop
fldenv
jne
mov
sub
inc
dec
mov
sbb
out
stc
sbb
and
jecxz
loope
inc
pop
dec
inc
and
lods
add
or
cmp
pop
dec
and
or
mov
ret
loopne
mov
iret
cs
inc
rorl
ljmp
faddl
and
pop
pop
or
aam
in
fldt
add
bound
sub
jae
push
pop
dec
fdivrs
push
mov
inc
in
test
hlt
test
mov
push
or
subb
mov
jo
add
push
ret
jo
push
cmpsl
pop
cmpsb
add
push
sarb
cwtd
sahf
or
push
cmpsb
int
test
imul
fbstp
and
test
mov
icebp
dec
mov
mov
xor
or
xor
shl
cmpl
inc
sbb
mov
fdivrl
cli
sub
test
jae
dec
fisttpl
sbb
push
lods
int3
fistpll
and
push
stc
popf
xchg
mov
or
cmc
add
movsb
inc
pop
xor
outsb
jb
inc
mov
jl
jmp
adc
xchg
mov
popa
pop
lahf
fs
xor
push
xor
sub
jecxz
scas
adc
insb
push
cmpsb
ficoms
xchg
xchg
andb
jbe
popa
in
aaa
dec
ret
jmp
arpl
rclb
jbe
push
outsl
insb
test
cmp
fsubrl
mov
inc
fnsave
cltd
repz
imul
enter
ror
cmpsb
mov
rolb
xlat
js
xchg
dec
fisubl
cmp
mov
sub
xor
movsb
fsubs
daa
daa
arpl
lahf
xchg
out
jae
sbb
push
in
mov
clc
mov
cld
xchg
cs
pop
sahf
mov
mov
fidivrs
rol
incb
jns
or
dec
sti
sub
fwait
cmp
xor
lock
jp
imul
inc
pusha
cmc
xchg
pop
addb
enter
push
daa
outsl
sub
push
test
pop
aaa
sti
stos
or
adc
jns
lea
loopne
ret
or
xor
shl
xchg
adc
leave
scas
pop
pusha
add
add
aas
loopne
insb
jp
jg
xchg
mov
loop
out
lds
insl
and
cmp
sarb
jo
cmpsb
inc
or
push
fldcw
mov
cmp
push
sbb
adc
stc
ja
inc
or
adc
daa
lods
mov
imul
mov
repnz
dec
ss
mov
add
cmpsb
push
push
dec
jb
orl
mov
sbb
jle
inc
sbb
aad
inc
xchg
out
add
jecxz
pop
in
fidivrl
loop
loopne
mov
insl
pop
inc
out
cli
mov
adc
out
cltd
sub
rol
daa
adc
lock
push
imul
add
mov
xchg
mov
int3
inc
sbb
stc
or
inc
xor
jge
mov
aad
add
mov
lds
inc
lret
fildll
outsl
nop
ret
jae
popf
sahf
adc
out
mov
ja
gs
in
mov
add
push
mov
mov
or
in
lahf
sbb
pop
mov
stc
sbb
shlb
sbb
data16
cltd
adc
jge
cmp
decl
jbe
dec
shr
xchg
jo
dec
sti
sbb
xchg
cmc
push
addr16
xor
mov
and
cmpsl
dec
sbb
rcll
sub
mov
bound
sbb
test
cmpsb
cmpsl
outsl
insb
adc
dec
outsb
ss
sbb
jo
lahf
or
jb
nop
xor
mov
movl
add
lds
loope
lret
push
xor
jns
ficoml
mov
rorl
mov
es
stc
pop
mov
pop
sti
push
mov
pop
mov
in
add
cwtl
and
and
jmp
ret
outsb
xor
mov
std
clc
push
cltd
testl
repz
cmp
and
jne
xor
outsb
adc
inc
sti
adc
push
mov
jae
cmp
aaa
mov
mov
sbb
xchg
rcl
or
mov
ss
mov
push
sti
push
fs
aaa
sub
sub
or
es
sbb
outsb
or
jg
dec
mov
gs
lcall
pcmpgtd
inc
ret
loop
arpl
dec
sti
je
inc
inc
aam
roll
repz
dec
xchg
sarb
push
xchg
push
or
scas
cltd
sbb
insb
mov
sbbl
lret
lock
fidivs
pop
xchg
jnp
pop
mov
inc
lret
outsb
dec
cmpl
xchg
cltd
pop
out
mov
out
or
insl
and
pop
fcomi
fcmovnbe
stc
scas
push
cli
dec
sub
push
xorl
push
fwait
mov
and
pop
and
dec
jl
jno
pop
mov
and
jmp
jle
gs
add
add
sbb
xchg
mov
ret
pusha
pushf
adc
jo
adc
lret
aas
cmp
jne
adc
cmp
enter
xchg
adc
adc
ret
add
lahf
mov
push
cli
xchg
cmp
add
lcall
mov
fwait
enter
cs
xor
pop
mov
xor
ja
dec
fiadds
jb
or
cmc
and
pushf
sbb
mov
and
jp
scas
clc
add
sub
push
jg
arpl
dec
mov
sbb
pop
adc
xchg
repz
movsb
dec
int3
xchg
addr16
pop
mov
cmp
inc
cmp
mov
stos
mov
out
mov
add
push
dec
vpandn
lcall
and
sbb
mov
jb
mov
pop
cmp
add
fists
ret
mov
xor
movsl
cltd
pusha
out
jae
stc
std
fwait
stc
xchg
mov
add
adc
pop
shlb
dec
mov
inc
jne
pop
mov
or
mov
xchg
xor
pusha
push
mov
sti
mov
cld
and
lods
mov
call
movlhps
mov
sarl
mov
or
int
push
sub
sbb
jmp
jmp
call
rorb
push
cli
arpl
add
add
rcl
cmpsl
js
in
jne
push
and
mov
mov
add
xlat
push
ret
pusha
js
adc
cltd
icebp
bound
xlat
jg
pushf
fnstenv
sbb
mov
pop
sbb
repz
aas
jl
movsb
push
dec
adcb
pop
pushf
sti
xchg
mov
bound
inc
jmp
fmul
dec
xchg
xchg
jne
movsb
xchg
fimull
jg
daa
sub
pushf
int
adc
xor
stos
or
push
dec
cmp
mov
or
sub
shl
scas
sbb
test
adc
mov
ljmp
cmpsb
lret
stos
mov
xchg
jl
shlb
dec
sub
clc
sbb
out
lahf
xchg
shrb
adc
mov
les
orl
enter
pop
sub
xor
mov
out
ret
shl
push
mov
movb
push
mov
cmc
negl
scas
stc
popf
adc
mov
add
in
xor
mov
lds
sub
shll
rol
mov
mov
es
jns
jle
mov
scas
pop
andl
hlt
ds
mov
jecxz
mov
out
mov
xchg
insb
cmc
ss
pop
sub
pop
xchg
push
mov
test
sbb
je
ja
jns
lret
mov
mov
scas
fs
rolb
daa
mov
cmp
sub
arpl
outsl
sub
mov
iret
and
push
pop
outsl
push
xchg
jg
and
int3
sbb
insb
fidivs
repz
xlat
out
sahf
in
inc
mov
repz
out
outsl
lret
in
pop
xchg
movsb
mov
pcmpgtw
clc
pop
lods
stos
cmpsb
sub
cmpsb
sbb
mov
call
lods
pop
dec
popa
sub
stos
imul
int3
mov
add
inc
sub
mov
cmp
divl
mov
fbld
les
insb
dec
push
popa
lahf
sbb
mov
test
push
cltd
sub
inc
int
int3
out
nop
adc
inc
adc
in
imul
push
jbe
cmp
mov
mov
adc
or
pop
pop
adc
cltd
add
arpl
xor
into
cmp
mov
jo
mov
js
jle
and
xchg
aas
and
mov
leave
push
stos
icebp
inc
test
fwait
repz
into
pop
cmp
cmp
lret
mov
jmp
sbb
sbb
ljmp
cmpsb
cltd
cltd
and
jno
cli
sbb
adc
mov
cmp
pop
jecxz
das
aas
push
and
jg
sbb
mov
fs
xchg
adc
pop
leave
cwtl
pushl
cmp
cmp
mov
sbb
adc
fldcw
scas
or
add
rorl
pop
or
dec
into
adc
shrl
mov
xor
cmp
pop
int
cmp
call
xor
popf
aad
jp
xor
out
xchg
sbb
and
dec
das
jns
hlt
mov
popa
mov
inc
mov
pop
sti
mov
mov
xchg
das
jecxz
mov
mov
adc
or
in
mov
cwtl
xchg
xchg
pusha
loop
ret
pop
sbb
lea
and
inc
dec
dec
adc
cs
push
pop
adc
ret
push
jle
jnp
loop
in
stos
or
stos
xor
cmpsl
jg
mov
into
inc
adc
dec
push
xchg
xor
cltd
xchg
inc
push
dec
sti
or
jne
mov
imul
or
pop
jno
pop
sub
and
aas
ja
inc
fidivrs
sbb
xchg
pop
pop
mov
enter
shlb
mov
lret
fsubrl
int3
dec
or
shrb
stos
push
push
dec
outsb
popa
clc
mov
xor
jne
lods
in
xor
push
stos
dec
mov
push
fld
andb
cmp
mov
inc
adc
xor
jg
vpunpckhwd
loop
sub
jg
adc
inc
mov
jl
or
pop
xorb
mov
push
jnp
mov
jge
adc
xchg
xor
adc
add
aaa
and
inc
movsl
jne
mov
jmp
jmp
int3
mov
pop
or
sbb
test
jae
inc
sbb
sti
mov
jns
xor
push
shlb
jmp
mov
outsl
and
shlb
or
and
je
jge
mov
in
mov
out
test
push
cli
dec
adc
xor
mov
xor
fnsave
push
jbe
push
pushf
and
inc
aam
and
daa
mov
test
mov
inc
dec
js
in
test
cmp
insl
xor
push
xchg
sbb
sub
push
inc
sar
mov
ret
fdivrs
cwtl
cmp
inc
push
test
inc
add
xor
inc
sbb
imul
pusha
pop
jecxz
mov
out
inc
das
pop
gs
pop
imul
xor
ss
cmp
pop
sub
imul
xchg
adc
push
movsb
aaa
test
mov
into
in
inc
or
sbb
dec
iret
ficomps
sbb
adc
imul
data16
repnz
ljmp
xchg
inc
lods
inc
popa
outsb
lret
xchg
mov
or
mov
jge
jle
test
jmp
std
scas
mov
fdivrs
mov
mov
or
jb
inc
add
dec
adc
icebp
aam
inc
jle
or
hlt
inc
and
cmp
sub
sbb
inc
pop
mov
ficompl
jge
cmpsl
mov
adc
pop
inc
fisttpll
movsb
mov
daa
mov
aam
xchg
lahf
mov
cmpsb
cld
shrb
lcall
add
xor
cmp
or
push
push
mov
mov
pop
cmp
mov
mov
out
in
loope
sub
or
or
repz
shrb
jnp
dec
inc
insb
push
mov
cmp
push
cmp
icebp
loope
lcall
sub
fdivrs
int3
inc
pop
dec
mov
xor
js
scas
test
xchg
daa
fsubs
or
sahf
idivl
xchg
add
pop
stos
repnz
rclb
dec
xor
out
hlt
shrl
mov
pop
out
sbb
dec
mov
pop
push
xchg
lret
push
push
mov
popa
push
or
push
pop
pusha
push
dec
loop
adc
cld
sti
xor
lea
in
mov
test
mov
dec
push
inc
lcall
xor
pop
repnz
pushf
sahf
daa
xchg
pop
cmp
sahf
cld
xchg
push
push
jg
push
inc
pop
rcll
rorb
inc
es
clc
sbbl
pop
sbb
or
cmpsb
mov
cmc
outsb
test
sub
inc
xor
rcrb
xchg
mov
inc
inc
jl
stos
loopne
das
sarl
mov
mov
and
and
xchg
loop
je
test
popf
cwtl
xchg
mov
xchg
in
cmc
insb
ja
jne
mov
push
cmc
ss
popf
stos
insl
clc
fidivl
dec
inc
cmpsb
icebp
push
pop
lods
push
leave
pop
adc
mov
sbb
aam
sbb
mov
xchg
sub
sbb
jmp
jae
test
loop
pop
push
test
xchg
fldl
sbb
adc
notb
jge,pt
sbb
cmc
jne
popf
and
pop
aas
scas
cmp
test
xchg
adc
jle
adc
out
cwtl
shll
push
xchg
rorl
sub
imul
sbb
aas
mov
or
mov
shll
inc
mov
lods
mov
inc
jg
rcrb
cmpsb
ljmp
pop
loopne
int
js
repz
lock
adc
or
gs
lea
fptan
jg
push
packsswb
lret
cmp
into
outsl
jo
ss
rol
xor
jge,pn
xor
xchg
lds
inc
ja
jg
cli
cmpsb
inc
adc
cmp
cs
into
add
push
xor
mov
pop
jne
push
dec
pop
scas
out
call
or
mov
pop
gs
or
std
jge
add
cs
dec
mov
jecxz
jp
mov
jae
ror
call
cwtl
pop
mov
jno
cmp
sbb
test
xchg
aaa
push
test
push
mov
daa
jmp
add
mov
xor
nop
dec
mov
scas
pop
sub
sub
push
je
int
mov
mov
ds
xlat
push
sbb
sub
pop
call
and
and
sbb
pop
cli
push
lds
mov
sbb
cmp
mov
test
pop
add
sbb
adc
int
scas
aam
adc
jns
cwtl
mov
inc
inc
popa
in
pop
xchg
shll
lods
cld
and
ljmp
jg
jns
lret
cmp
adc
pop
mov
rcrl
ror
push
inc
pushf
mov
and
int3
fsubp
and
inc
add
fs
dec
pop
fwait
mov
jge
fisubl
int
shrb
outsb
call
es
xor
jge
test
inc
hlt
inc
xchg
and
mov
pop
lea
adc
jge
push
push
aas
add
push
ret
push
in
adc
fwait
xchg
cmp
add
push
cmp
getsec
jns
adc
rolb
pusha
sti
xchg
scas
inc
movsl
jge
lcall
sub
mov
add
fsubrl
icebp
addr16
lea
gs
lret
inc
lods
adc
mov
inc
adc
sti
mov
or
mov
cld
pop
mov
arpl
neg
nop
pop
and
repz
nop
rcrb
lods
int
xor
or
push
hlt
sub
xchg
test
dec
int
rcrb
sub
xor
add
xlat
or
ret
aas
gs
sub
add
js
outsb
fdivrl
push
lcall
pop
mov
fisttps
push
lods
lods
stos
mov
push
in
push
pop
or
xor
add
or
sub
repnz
das
into
in
sbb
dec
push
push
pusha
test
aad
xchg
pop
sbb
lahf
fbld
arpl
ljmp
daa
inc
cmpl
dec
jae
mov
arpl
insb
mov
pop
push
imul
into
or
inc
adc
aad
pushl
mov
nop
scas
mov
int
out
lock
sub
cmpsl
sahf
xor
add
or
les
mov
movsb
lcall
xchg
aam
or
jle
lods
test
and
movb
notb
nop
icebp
sub
mov
cmc
popf
pop
movsb
mov
inc
or
and
notl
cld
loope
rcr
mov
loopne
sbb
or
fcoml
loop
fwait
bsr
std
mov
ja
enter
push
dec
rdpmc
aam
mov
js
sarl
cmp
ljmp
pop
outsb
rolb
test
inc
in
nop
dec
jmp
adc
int
mov
mov
add
or
cwtl
rorl
pop
or
push
jecxz
cld
fdivrl
push
cmp
mov
inc
and
add
mov
and
ret
pusha
sub
sbb
call
lds
mov
ss
js
add
lret
stos
je
imul
xchg
mov
imul
mov
vsqrtpd
or
xchg
jl
shlb
or
lahf
daa
lds
stos
xchg
ficomps
sbb
dec
dec
pop
add
pop
inc
xchg
adc
repnz
pushf
aam
mov
jo
call
aam
out
mov
dec
out
mov
insb
dec
popl
ret
int3
into
and
mov
bound
jl
adc
int
mov
daa
or
sbb
ja
add
adcl
loopne
pushf
rcl
into
pop
mov
addl
ss
and
adc
addr16
int
jne
rcrl
inc
mov
loope
hlt
cwtl
lret
incb
mov
push
scas
mov
cmpsl
je
out
imul
pushf
mov
dec
push
inc
jecxz
fwait
add
inc
out
mov
mov
cmp
loopne
xor
pop
mov
xor
push
cmp
mov
in
push
aam
mov
pop
sbb
fwait
cld
sub
adc
inc
dec
notb
jl
and
pop
push
jo
push
js
jp
mov
push
adc
xchg
and
or
xchg
pop
sub
les
sti
stc
pop
add
stc
in
movsb
repz
mov
call
out
cmp
rorb
hlt
int
mov
rcl
xchg
jl
fistpl
iret
cs
jbe
adc
push
stos
xchg
jecxz
psllq
cmpsl
subb
adc
scas
and
mov
lea
sub
and
cmp
aas
leave
out
ficoms
arpl
ror
push
out
ds
fildll
clc
les
fldt
into
adc
fdivr
sbb
sbb
das
std
mov
and
adc
xchg
stos
jno
ljmp
mov
int3
jp
scas
inc
adc
int3
and
jbe
pop
out
cmpb
or
push
sbb
jo
push
lret
push
sub
mov
in
add
fidivs
xchg
fldt
lret
sbb
movsb
js
jae
mov
fs
decb
mov
xor
xchg
push
rcrb
pop
outsl
ffreep
in
push
repz
gs
xchg
lret
outsb
movsb
jmp
ret
mov
jb
outsl
xchg
xor
xchg
stos
lods
loop
stos
xchg
jp
sbb
mov
add
push
sbb
dec
dec
mov
js
sbb
shlb
jl
mov
and
in
mov
push
orl
pop
cmp
in
and
xor
mov
mov
inc
adc
jmp
arpl
cli
out
cmpsb
dec
jmp
jle
jge
xchg
cld
add
push
mov
insl
cmc
les
andb
jne
imul
fs
jno
movsl
jne
shl
mov
cwtl
push
sbb
jnp
xor
jnp
out
test
adc
mov
mov
addr16
enter
add
sbb
fcomip
xchg
popa
sahf
push
push
mov
jl
leave
pop
jge
fisubrs
xor
pop
add
sbb
lret
pop
jecxz
adc
or
mov
pop
insl
ss
clc
cwtl
out
ljmp
jo
dec
loop
fldl
jecxz
mov
jp
sarb
ficoml
push
dec
test
out
addr16
mov
mov
lock
dec
inc
out
mov
adcl
pop
mov
inc
dec
sbb
cmpsb
jo
add
or
popa
rcll
xlat
sahf
das
mov
mov
sub
cmp
mov
cmpb
jnp
xor
pushf
push
loopne
mov
mov
stc
and
dec
mov
aas
mov
sbb
adc
pop
int
aaa
cltd
xchg
nop
push
rorb
jb
mov
or
mov
aaa
push
pop
jecxz
inc
test
mov
push
movsl
push
add
stc
loope
sbb
loope
into
ljmp
push
sti
adc
mov
sahf
mulb
lods
sub
adc
or
xchg
xor
std
fadd
stos
ss
fs
out
push
jo
sarb
cmp
dec
test
add
add
pop
mov
popf
or
mov
adc
mov
loope
int
sbb
adc
mov
cltd
pop
pusha
inc
fwait
inc
les
xchg
adc
pop
shrb
dec
popl
psrlw
cltd
push
jns
jno
xchg
or
and
rorb
movsl
daa
lods
pop
xchg
pusha
loopne
mulb
adc
addr16
dec
outsl
stos
push
add
fdivrs
popf
lahf
sub
iret
dec
dec
scas
aam
aas
xchg
or
aas
push
loope
loop
xchg
mov
cmpsb
add
sub
jno
lds
mov
mov
notl
inc
in
xchg
mov
lea
or
cli
pop
aad
adc
shl
sub
movsb
scas
mov
jnp
int
xor
repnz
sub
aam
dec
jge
imul
fldenv
enter
add
inc
sbb
dec
sar
lods
aam
scas
jmp
pusha
das
pop
in
dec
shll
std
push
out
sbb
pop
push
cmp
sti
xor
ss
mov
jae
mov
pop
testb
repnz
lock
pop
cmp
xchg
iret
xor
cltd
lods
out
add
arpl
xor
inc
mov
xor
ja
mov
push
push
sbb
test
pop
sbb
fcmove
loopne
mov
mov
pusha
xchg
pop
and
out
add
jno
loop
repz
shr
inc
pop
mov
or
aam
lea
push
push
mov
bnd
sbb
xor
xchg
fimuls
inc
imul
dec
xlat
flds
into
addr16
ret
les
cmpsl
or
lods
es
inc
outsb
les
pusha
fstpt
mov
rcll
adc
data16
fadds
aam
in
inc
jg
push
hlt
lods
add
in
mov
popa
adc
mov
call
cmp
cld
xor
gs
ds
dec
call
lods
mov
inc
mov
sbb
imul
mov
pop
xor
fistl
das
int3
stos
clc
hlt
fildl
shrl
rcr
cli
mov
idivb
sti
rclb
push
sbb
push
jae
sub
adc
xor
jecxz
in
push
lods
jge
lea
adc
pop
test
aam
jge
push
fs
pop
sub
sbb
aam
ds
xchg
rcrl
or
xchg
xor
jp
mov
outsb
in
mov
mov
das
xchg
mov
aaa
xor
ja
mov
push
add
push
stos
ss
pop
movsl
test
movsl
mov
push
iret
xor
stos
pop
shll
push
fisubl
lods
outsl
mov
lock
inc
and
push
add
out
popa
mov
mov
pusha
pushf
imulb
adc
mov
xchg
cmpl
cmp
mov
jno
xchg
mov
pop
add
pop
pushf
jp
mov
fs
movsb
pushf
nop
cwtl
pop
aam
mulb
in
test
scas
lds
dec
xor
ss
mov
fs
ret
pop
cmp
pop
xchg
push
in
lret
jb
jae
bnd
mov
negl
aaa
adc
xchg
dec
xchg
out
cmp
inc
fwait
sbbb
mov
subb
jecxz
pop
xchg
xchg
mov
push
cwtl
push
cmpsl
jne
and
sub
iret
mov
mov
lock
pushl
mov
adc
inc
out
repnz
lahf
jns
add
loope
xchg
push
clc
add
xchg
pop
rcll
outsl
js
pop
ljmp
out
dec
cwtl
jno
cmp
or
int3
or
mov
arpl
in
enter
mov
xor
mov
ficoms
adc
dec
pop
sbb
or
inc
pop
push
mov
push
mov
adc
out
shrb
adc
nop
pop
xchg
xor
repz
rclb
xor
push
dec
mov
enter
in
scas
mov
dec
scas
repnz
adc
mov
orl
and
scas
into
adcb
dec
repnz
mov
test
pop
pop
mov
push
iret
or
cbtw
out
mov
adc
popa
mov
sahf
sub
sub
outsb
lea
jnp
data16
shrl
cmp
inc
aaa
cmp
test
stos
sbb
jae
roll
xchg
xchg
pop
pop
jns
adc
loop
imul
mov
xchg
insw
sbb
int
addl
pop
ljmp
lock
fsubrl
pop
pusha
lret
int
pop
push
sub
lods
xchg
popa
xchg
lods
fsubr
cltd
jbe
add
out
mov
scas
imul
int3
xchg
paddq
pop
cvtpi2ps
cltd
mov
lea
and
xchg
adc
adc
test
dec
adc
movsl
xchg
int
je
sbb
xor
sahf
sahf
sbb
test
jmp
into
and
pop
sub
scas
fcoms
xor
test
mov
ds
push
or
enter
les
fs
cmp
mov
push
and
inc
jb
inc
sti
cmpsl
sub
dec
adc
je
add
cmpsl
popa
fmulp
xor
sub
out
pusha
test
negb
rorl
sbb
add
pop
lret
xor
ljmp
jae
setbe
sub
and
or
fs
sub
push
scas
lcall
pop
push
mov
mov
or
pop
mov
jle
pop
int
mov
je
mov
sbbb
loopne
in
or
repnz
dec
dec
out
out
cmp
ret
adc
test
stos
xor
pop
inc
insl
pop
mov
bound
xchg
repz
enter
lahf
jmp
add
add
dec
mov
mov
hlt
push
mov
jno
jnp
aas
lret
dec
scas
sub
fwait
imul
pop
lahf
mov
andb
add
xchg
hlt
cmp
cld
repnz
or
push
jl
mov
in
mov
mov
into
xor
cmp
stos
push
adcl
pop
and
icebp
xchg
cmp
inc
repnz
jg
push
inc
and
test
nop
imul
pop
lds
xchg
xchg
sbb
icebp
or
jp
std
sbb
pop
ja
in
cld
cmpsl
mov
jmp
repz
int3
shlb
test
mov
sbb
dec
pusha
cmp
stc
sub
mov
push
imul
je
call
dec
adc
push
push
push
sub
or
outsb
mov
ja
mov
push
sub
jge
mov
pop
adc
cmp
push
jo
push
jp
cmp
xor
mov
mov
fdivs
xor
mov
adc
int
pop
add
scas
dec
jp
std
adc
iret
cmp
xor
jne
cmpsb
xchg
or
mov
dec
inc
sbb
repz
scas
sub
in
pop
test
add
or
jo
data16
cld
dec
sbb
push
mov
push
inc
jnp
xor
add
mov
cmp
xchg
rcl
into
push
or
rclb
pusha
shlb
add
push
pop
iret
push
pusha
jno
into
enter
and
adc
addb
pop
xchg
xchg
or
xor
xchg
out
push
js
std
add
sti
mov
repz
inc
pop
imul
in
hlt
lea
sbbb
and
sbb
mov
mov
sahf
sahf
jns
fisttpll
jb
shrl
fyl2x
cmp
xchg
cmpl
add
inc
into
test
mov
cmp
fs
xchg
xor
in
ret
jnp
and
scas
repz
call
lea
sub
nop
cwtl
inc
mov
fbstp
xchg
fldl
jae
or
les
dec
mov
lds
outsl
push
pop
loope
or
ss
inc
repz
clc
push
scas
or
aas
sub
rcrb
jl
jmp
lock
int3
lock
mov
push
fimull
jo
mov
idivb
sub
sub
pusha
fwait
push
es
lds
mov
fldl2e
xchg
loop
repz
push
and
jp
sahf
sbb
ss
std
xchg
stos
in
fwait
cmp
cmp
adc
mov
or
nop
jmp
mov
call
and
mov
jne
ljmp
cld
jno
scas
and
dec
and
inc
pop
repnz
cmpsb
movsl
cmp
or
add
dec
cmpsl
inc
mov
and
mov
fildll
adcl
test
dec
std
bnd
pop
sbb
inc
mov
xchg
aam
fsubl
mov
int3
mov
pop
popa
mov
stos
lahf
mov
testb
sbb
mov
in
push
movsl
add
cmp
inc
addl
repz
in
imulb
mov
add
cmp
jecxz
pop
mov
int3
cmpsl
mov
mov
mov
bound
xchg
mov
loope
cmp
pop
adc
push
pop
stos
sub
mov
lahf
mov
dec
pop
addr16
jnp
cmp
lcall
sti
sub
mov
push
sarl
fstps
add
mov
jle
mov
sbb
pop
jo
pop
mov
jge
addl
sbb
bound
enter
jbe
push
adc
stos
jmp
es
iret
lahf
outsl
jne
sub
xor
and
fisubrl
and
rorb
jne
jmp
pop
mov
ficompl
xor
jle
cli
fisubs
sbb
jge
hlt
sti
cwtl
repz
ret
pop
and
jmp
aam
arpl
jp
lock
daa
cmpsl
or
call
je
insb
jb
lret
mov
dec
xor
adc
sti
ds
xchg
es
xor
xchg
insl
outsb
xor
mov
dec
xchg
scas
daa
push
cmp
into
mov
add
nop
dec
imul
xchg
fildl
push
push
clc
xchg
push
mov
xor
jne
rclb
mov
jae
mov
add
xor
loopne
and
xor
daa
xchg
lea
and
sbb
shlb
test
outsb
push
out
test
and
insb
adc
popa
mov
pop
add
dec
jno
pop
scas
int
and
mov
fs
in
in
dec
scas
mov
cmp
jo
test
mov
xor
psubsb
add
inc
mov
cwtl
cmp
push
imul
movsl
movsl
sub
stos
push
mov
mov
int
sbb
and
sbb
jnp,pn
outsb
inc
insl
cmp
mov
pop
mov
cmp
aas
pop
lret
or
out
icebp
pop
das
mov
cmpsl
lcall
sti
and
mov
cmp
xlat
mov
std
jno
pop
add
aaa
xor
mov
cmp
jb
arpl
xor
cmpsb
out
aaa
jo
nop
xchg
das
or
lods
imull
pusha
push
mov
sti
adc
or
cwtl
xlat
mov
lods
jp
sub
add
jo
adcl
push
push
mov
xlat
cmp
hlt
cmc
mov
repz
loopne
sub
addb
popaw
or
mov
lcall
jle
mov
sbb
aam
mov
in
sbb
repz
in
aas
mov
sbb
push
insl
jns
daa
xor
jl
adcb
pusha
add
imul
inc
int3
lret
fisubs
mov
sub
loope
daa
cwtl
inc
xor
dec
adc
push
repz
fisubl
jnp
ss
pop
pop
arpl
and
add
popf
jl
cmp
jb
mov
loope
out
int
push
mov
xor
cltd
je
add
stos
out
test
xchg
sahf
rcl
insb
aas
dec
lret
loope
movsb
xchg
cmpsl
pop
push
loopne
cli
or
ljmp
outsl
add
add
test
and
dec
insl
mov
xchg
mov
push
fcoms
push
rorb
iret
inc
mov
das
test
fadds
into
push
out
mov
call
in
in
or
adc
pop
je
rcr
das
cmp
bnd
push
adcb
stc
jge
insb
stos
inc
loop
sub
adc
jp
addl
dec
daa
sub
adc
sbb
push
outsl
xchg
mov
jno,pn
fcmovne
in
jg
adc
mov
popf
inc
mov
or
mov
hlt
in
ret
adc
pop
cs
icebp
mov
jge
or
push
sbb
pop
jb
insb
scas
mov
fldl
loope
stos
fists
inc
xchg
insl
pop
mov
out
das
or
pusha
leave
mov
xor
js
dec
imul
sub
data16
adc
mov
punpckhwd
add
cwtl
sbb
in
mov
lcall
pusha
fwait
pop
int
pop
or
daa
sti
sub
clc
pop
mov
cli
jp
or
add
add
lods
std
xor
sets
cli
fmul
xchg
sahf
sub
lahf
or
stos
or
xlat
add
add
jae
add
imul
stc
jae
xchg
iret
ljmp
loop
in
push
and
jae
jno
lcall
hlt
in
jbe
imul
xor
push
mov
lret
add
and
outsl
jge
test
test
dec
rclb
test
pop
int
jl
adc
or
sbb
jb
push
xor
adc
mov
lods
add
cmp
mov
inc
cwtl
movaps
sti
loope
inc
mov
leave
jl
cs
in
mov
out
cmp
loope
addw
jno
cs
lret
mov
mov
mov
sarb
pop
mov
test
xchg
les
rcrl
inc
sahf
pop
movsb
test
scas
add
jl
sbb
rclb
and
dec
or
loope
add
mov
xlat
add
adc
insl
jmp
inc
aad
in
scas
ret
xor
mov
test
push
mov
inc
push
cltd
sub
addr16
aas
stos
xchg
test
hlt
lock
ljmp
les
pop
or
mov
fwait
std
sub
insb
movsb
jl
cmp
fs
stos
jb
pop
mov
lds
icebp
xlat
scas
insl
xor
add
test
add
cmp
jg
sub
inc
loop
mov
test
lods
and
mov
sti
nop
inc
aas
fwait
ret
push
mov
push
jmp
fimull
ljmp
stos
push
mov
jne
jns
movsl
xchg
pop
cmp
in
xchg
mov
sahf
xchg
and
imul
jecxz
add
cmp
cmp
data16
add
ret
scas
popf
mov
jl
dec
das
call
sbb
pop
xchg
idivb
cld
mov
inc
addr16
mov
dec
cmp
mov
cmpsl
or
mov
mov
jp
cmpsb
ja
movsl
das
mov
insb
ret
lret
lahf
pop
cmp
adcl
and
dec
push
xlat
mov
add
mov
mov
insl
sbb
mov
out
loopne
sub
mov
mov
insb
ds
jge
push
xchg
imul
gs
push
loop
sub
cmp
shll
mov
loop
or
les
pusha
sahf
outsl
lock
cmp
jmp
mov
pop
fwait
orb
mov
cmp
push
inc
das
icebp
dec
pop
pop
jmp
push
out
lods
stos
addr16
mov
js
and
sti
outsl
inc
pop
and
stos
hlt
rorl
insb
jae
adc
sbb
pop
jae
das
jae
in
in
or
jmp
div
ss
sub
mov
dec
stc
sub
sarb
loopne
jmp
js
lahf
cld
mov
sbb
adc
push
mov
ret
clc
mov
sbb
adc
xchg
mov
mov
je
sbb
mov
movsl
mov
loope
pop
nop
mov
mov
inc
add
test
ss
dec
pop
stc
sbb
cmc
jge
push
pop
out
xchg
cmp
pop
mov
mov
leave
sub
dec
xchg
inc
lods
hlt
adc
sub
adc
arpl
hlt
test
cltd
mov
pop
sbb
insl
push
sbb
mov
xchg
jge
pop
ljmp
cmp
rclb
cmp
or
adc
and
dec
lods
ds
xchg
mov
fisttps
ljmp
lea
pop
cmp
add
jle
inc
xchg
add
or
scas
lea
rorl
sub
outsl
jmp
flds
push
repnz
lret
call
mov
lret
incl
daa
ljmp
scas
cltd
inc
aas
mov
fs
outsb
cmp
dec
or
inc
inc
cld
xchg
cwtl
xor
in
sbb
push
cmp
push
nop
xor
xor
icebp
inc
push
ds
std
pop
testl
lods
out
fmul
int3
inc
sbb
mov
jo
sbb
test
sbb
aam
mov
add
mov
add
fs
sahf
mov
icebp
mov
xchg
out
loopne
stos
xchg
lods
icebp
es
mov
mov
fwait
inc
addr16
push
push
stos
cmp
shrb
sub
divl
mov
lock
add
pushf
push
jbe
push
cld
rcl
xor
inc
loope
arpl
mov
scas
or
xchg
shlb
icebp
xchg
push
mov
test
popa
iret
mov
pop
cmc
cmp
leave
stc
mov
fisttpll
ljmp
sbb
cli
pusha
mov
mov
pop
stos
in
jnp
loope
jp
inc
in
out
jne
sbb
rcrb
movsb
iret
pop
xor
outsl
loope
pop
fs
and
inc
jp
push
insl
xor
push
sahf
mov
andb
push
mov
pop
call
and
clc
cltd
fs
or
pushf
mov
lret
pop
mov
and
mov
mov
insb
dec
jp
or
or
and
push
or
or
imul
push
adc
in
mov
pop
js
push
dec
lret
or
xlat
mov
dec
or
jp
insl
jecxz
aam
inc
fists
imull
mov
outsl
clc
rclb
fdivs
or
add
scas
in
mov
push
insl
xchg
jb
outsl
mov
nop
jae
push
imul
lods
push
adc
cltd
data16
dec
push
mov
out
pushf
cmpsl
scas
mov
pop
leave
pop
push
scas
sbb
cmp
mov
mov
shlb
adcb
mov
test
jg
por
mov
xchg
fsubl
inc
sbb
mov
pusha
dec
shl
loop
mov
inc
out
push
and
mov
dec
xor
imul
loopne
mov
sbb
xor
cmp
pop
aaa
jg
out
push
pop
adc
rcl
add
orb
xchg
and
ret
and
mov
dec
add
and
nop
cmp
mov
mov
mov
sti
movsl
scas
data16
and
mov
pusha
xchg
inc
jne
sbb
scas
test
js
push
leave
sar
pop
mov
cwtl
inc
adc
jp
fadd
test
adc
pop
fcomps
xor
test
hlt
fmul
sbb
jmp
jne
call
leave
inc
repnz
fsubs
stc
xlat
dec
dec
mov
or
cmc
pop
xor
mov
dec
inc
add
movsl
dec
inc
ficomps
cmp
pop
lcall
stos
shrl
int3
adcb
jb
sbb
es
nop
in
mov
mov
xor
xchg
lds
lods
outsb
cmp
into
and
inc
jae
xor
test
sub
dec
push
dec
fidivrs
in
das
outsl
rcrl
pop
pop
sub
rcrb
les
imul
add
or
xchg
inc
lods
jecxz
xor
insb
push
lea
mov
idivb
and
jmp
inc
mov
sbb
xor
or
mov
dec
add
fwait
xchg
lret
cmpsb
xchg
cltd
mov
mov
pop
jbe
pop
clc
cmpsl
dec
or
mov
leave
sarb
pop
inc
or
mov
cltd
and
jnp
and
dec
xchg
rclb
and
dec
mov
inc
stos
fldenv
dec
call
jae
out
nop
mov
mov
fsts
jmp
jnp
mov
fildl
jnp
jnp
sbb
inc
in
das
imul
cli
inc
push
jbe
hlt
mov
xchg
push
xchg
push
or
add
xchg
push
iret
popf
lret
cmp
insw
push
fldcw
mov
push
int
jge
cmpsb
mov
mov
inc
gs
inc
pop
xor
xchg
xor
pop
sahf
ret
mov
pop
gs
or
pop
xlat
test
movsb
in
into
ror
xchg
mov
inc
cmc
jnp
mov
aam
mov
hlt
cmp
sub
mov
jl
push
xor
out
jnp
dec
adc
scas
das
xor
push
call
shrb
into
jno
cli
test
sub
mov
ret
sub
in
mov
lds
pop
mov
aas
mov
ds
and
xchg
push
mov
adc
inc
popa
adc
and
mov
jb
mov
mov
lock
jmp
leave
sarb
ds
inc
inc
sbb
pop
jecxz
outsb
repnz
sbb
cmp
jbe
scas
sub
push
pop
sub
cmp
test
push
adcl
push
xchg
mov
imul
dec
mov
pop
sti
mov
out
jecxz
dec
xchg
and
mov
test
out
std
ds
xor
rcrl
shll
and
roll
fsubs
adc
mov
cli
lods
addr16
sarb
xchg
loop
pop
xor
or
sti
fdivl
sub
jae
and
sbb
shl
pop
push
add
into
adc
jo
jl
jbe
mov
pop
cs
lahf
lcall
sbb
ret
or
xchg
shll
hlt
sub
adc
jl
dec
cmp
pop
mov
movhlps
jl
loop
ret
push
js
jne
push
sub
xchg
int3
lea
add
je
outsl
fistpl
mov
or
movsb
icebp
rcll
pusha
lock
out
xchg
into
sbb
lret
sub
inc
jne
notb
sbb
dec
rcrb
fs
xchg
lahf
and
jo
xchg
adc
push
popa
or
push
movsl
insl
mov
inc
outsb
inc
or
stos
jl
sti
lods
push
popa
xchg
divl
sbb
pop
xlat
movsl
ljmp
out
dec
lods
cmp
mov
pop
andb
pop
mov
andl
call
std
xchg
jmp
cs
in
push
loop
xchg
insl
scas
mov
test
mov
dec
jge
push
push
adc
xchg
int3
popa
out
aam
pusha
stc
mov
cmpsl
cmp
and
outsl
add
ljmp
push
lcall
in
jno
cmp
sub
jle
xchg
ret
xchg
in
jp
add
jl
cli
stos
add
repz
out
mov
dec
scas
mov
adc
dec
addr16
ja
filds
add
flds
cs
pop
loope
cmc
xor
cs
notb
ljmp
es
stc
ror
mov
repz
loope
sub
push
dec
sbbl
xchg
xchg
or
test
add
rorb
or
or
out
dec
sbb
mov
xchg
cli
xor
add
mov
les
js
adc
mull
pop
movsb
std
add
orb
rcrb
std
enter
push
cs
insb
jecxz
mov
mov
sub
subl
xchg
sub
jae
out
lods
fisubl
jmp
out
adc
stc
xor
test
cmp
fucomp
jns
into
pop
cmp
mov
mov
shrb
cli
je
imul
scas
and
mov
in
icebp
jae
xor
jmp
out
pop
adc
xchg
dec
out
push
mov
mov
ror
iret
repnz
in
lods
fs
mov
sbb
lea
push
push
in
xor
leave
inc
dec
nop
insl
test
dec
pop
fnstcw
adc
jge
fldln2
dec
push
in
mov
sub
sub
cwtl
pop
in
cwtl
outsb
or
rorb
iret
daa
jae
push
mov
ret
stos
mov
lock
iret
ljmp
sahf
int3
lahf
nop
je
jbe
bnd
add
xlat
ds
cltd
movsl
cli
int3
fistpl
dec
roll
fstl
lods
std
stos
fcmovnbe
pop
mov
xor
sbb
mov
int
sub
inc
and
mov
mov
std
arpl
adcl
andb
xchg
xchg
int
shl
fwait
sub
fistl
mov
daa
push
push
mov
adc
adc
fs
loope
mov
outsb
cld
decl
pop
xchg
cmc
cmp
cld
in
aas
xlat
lods
cld
or
arpl
shr
aas
dec
sub
hlt
mov
cmp
mov
gs
pop
mov
jle
clc
dec
mov
pop
sbb
dec
test
std
pop
fwait
lods
cmpsl
pushf
or
fwait
adc
xor
lret
ja
push
insl
dec
pop
jnp
mov
jg
or
aad
mov
push
jb
sbb
or
push
in
mov
inc
roll
bound
and
dec
popf
mov
dec
xor
dec
add
das
fstl
jbe
add
mov
hlt
divb
add
lahf
pop
lahf
or
mov
outsl
jbe
xchg
sbb
hlt
and
addb
lret
sti
or
in
add
xlat
sbb
loop
cmpsl
and
scas
or
mov
test
fwait
mov
test
and
jbe
loop
cmp
repnz
jmp
adc
stos
test
jp
pop
dec
lahf
jecxz
dec
and
pop
lcall
out
data16
imul
push
dec
outsb
xor
add
rcrl
cmp
or
test
lods
aas
repz
js
mov
adc
mov
fsubr
and
sub
test
insb
je,pn
mov
lock
dec
gs
jge
push
shl
addr16
insl
insb
mov
inc
pop
int
repnz
mov
testl
movsb
cmpb
inc
sbbb
out
pusha
aam
int
mov
push
and
xchg
cwtl
arpl
in
adc
sub
sub
outsl
testb
fwait
pop
sbb
cmp
mov
cwtl
sbb
jg
jnp
loope
mov
pop
push
xchg
push
sub
stos
and
shl
mov
xor
out
les
mov
bound
in
cwtl
cmp
shrl
arpl
add
inc
ds
jl
stos
mov
aaa
lret
jp
fildll
or
pop
mov
mov
enter
insl
mov
mov
addr16
sub
mov
rcl
orl
pop
dec
or
sarb
nop
rol
lcall
fnsave
jp
sub
sub
test
cmp
and
in
hlt
add
jne
flds
jl
xchg
movsl
xchg
movsb
sbb
push
and
stos
aam
daa
mov
fidivl
or
out
les
xorb
test
xchg
push
push
in
mov
pop
sub
mov
push
inc
ret
xchg
cmp
jge
je
inc
popa
mov
push
jnp
mov
scas
imul
orl
sub
fs
cmpsb
fsin
pushf
inc
push
lcall
cwtl
adc
sarl
popa
xchg
xor
pextrw
add
lea
pop
cld
push
enter
pop
int
xchg
stos
ljmp
pushl
icebp
lods
test
out
mov
sbb
sbb
in
je
js
ds
je
inc
cmp
je
sarl
mov
sub
rol
sub
push
pop
mov
inc
mov
mov
movsl
ja
imul
and
xor
imul
lea
xchg
subb
xchg
rol
cmpsl
hlt
xchg
shll
adc
jnp
sub
in
adc
test
cmpsl
cmp
rclb
sbb
repz
testb
sbb
out
xchg
xor
daa
mov
into
pop
lods
adc
mov
push
mov
and
es
es
and
shll
mov
pop
mov
jle
inc
cmpsb
mov
fstl
in
pop
addb
add
cld
xor
in
mov
mov
notl
pop
mov
imul
adc
pop
icebp
sub
jle
enter
std
icebp
movsb
pop
mov
add
ret
jo
test
dec
imul
pop
add
repnz
or
mov
or
rolb
push
scas
inc
iret
mov
jle
jne
adc
cwtl
cmp
cmpsb
adc
fcoms
not
push
jecxz
sahf
and
xchg
mov
fwait
inc
insl
imul
js
mov
mov
imul
test
addr16
inc
push
and
ljmp
inc
insl
add
in
insl
std
or
cmp
cmpsl
push
insb
add
ljmp
inc
push
xor
jae
add
pop
or
dec
aam
pop
pop
rcl
out
or
push
outsl
rorl
jmp
push
loopne
xchg
mov
mov
sub
xor
push
hlt
dec
jae
xchg
lahf
jne
sub
xchg
in
cltd
fstpt
jge
in
inc
jo
mov
les
rorb
and
xor
in
push
mov
cmp
or
icebp
adc
dec
adc
ja
test
or
mov
lods
jl
sub
mov
icebp
mov
mov
jge
int3
inc
mov
test
inc
jp
stos
insb
clc
sbb
xorb
mov
dec
adc
xor
push
andl
push
aas
xchg
pop
cmp
js
mov
outsl
xchg
ljmp
in
sbb
lods
addl
jp
adc
out
fldt
les
push
jmp
out
xchg
enter
jns
dec
imul
add
adc
int3
jns
sub
test
adcl
rcrb
push
fildl
ss
adc
cmp
jno
jecxz
cltd
pushf
sub
pusha
nop
sub
adc
mov
rclb
sub
mov
fdivrl
sub
xchg
cmpsl
leave
cmp
mov
imul
and
push
dec
pusha
hlt
jle
sti
cmp
or
shll
adc
mov
lcall
mulb
and
adc
sub
sbb
push
cltd
pusha
pusha
fdivp
sbb
ret
add
outsl
ds
xchg
ret
into
cmp
pop
sahf
stos
test
xor
and
push
psubsb
xor
ljmp
mov
cmp
ja
mov
xor
fnsave
notb
filds
mov
pmaddwd
gs
fcmove
xchg
mov
mov
inc
mov
cmp
and
popa
std
loopne
pop
xor
test
aam
mov
aaa
add
jmp
cli
cmp
test
loopne
sbb
and
push
xchg
movsl
push
adc
je
mov
mov
lods
mov
dec
sbb
loope
ss
dec
lret
sub
xor
cmp
in
std
mov
or
sbb
mov
adc
xchg
icebp
xchg
imul
fstpt
ret
or
xchg
int3
mov
fidivs
dec
subps
stc
popa
bound
dec
dec
out
mov
repnz
repz
mov
xacquire
mov
mov
jns
pop
loope
sub
sbb
xchg
dec
lahf
inc
jg
fs
outsl
das
xorb
dec
push
rorl
and
leave
popf
dec
jae
jnp
stc
xchg
stos
add
loopne
pop
fidivs
and
into
cmpsl
sub
in
arpl
jl
dec
add
fldcw
cmpsl
es
xor
dec
testl
punpckhbw
enter
jbe
jge
pop
outsl
pop
push
and
insb
sahf
idiv
int3
xchg
cmp
in
pop
mov
jg
mov
mov
test
andb
insl
shrl
jle
les
adc
shll
cmpsl
jne
and
mov
mov
push
insl
pop
xchg
in
cmp
cli
stc
mov
sti
dec
mov
xchg
xchg
aas
ss
imulb
cltd
mov
mov
jecxz
pop
mov
mov
fdivrl
cltd
pop
out
pop
jmp
inc
daa
sub
aad
inc
pop
pop
push
dec
sub
out
lahf
push
lock
sahf
cltd
fndisi(8087
fdivrs
sbbb
gs
int
bound
cwtl
add
sub
jae
jge
mov
gs
sbb
inc
mov
mov
in
pop
stos
clc
ja
xor
cmpsl
stos
stc
mov
sbb
pop
cmp
sidtl
mov
and
mov
in
mov
or
subl
xlat
clc
inc
or
add
mov
dec
and
fdivr
stos
mov
xchg
mov
test
data16
loope
icebp
in
sub
sub
cmc
push
pop
popf
lock
leave
es
pop
xor
adcb
mov
roll
lods
dec
jmp
adc
popa
nop
scas
and
scas
iret
mov
and
pop
lret
mulb
mov
leave
in
mov
stos
cmp
stos
pop
nop
gs
ret
and
or
jno
pop
inc
mov
ret
add
sub
cmp
and
sahf
jg
orb
mov
xchg
or
shrl
inc
mov
xchg
aaa
cli
and
jmp
sub
adc
mov
sahf
movsb
mov
into
lahf
push
mov
loopne
pop
xor
mov
pop
popa
push
repz
cmp
and
je
lret
test
xchg
inc
std
movb
xchg
pop
cli
push
data16
jg
pop
jbe
es
fadds
xlat
lahf
outsl
fdivl
jl
mov
shrl
adc
dec
les
sbb
mov
cltd
leave
outsb
mov
idivb
jno
popf
mov
ror
in
bound
arpl
lahf
add
setl
push
mov
out
loopne
jmp
jo
push
dec
inc
es
in
insb
outsl
pop
jne
pop
ret
jmp
cmp
mov
jbe
icebp
pop
das
and
jo
sahf
testb
jb
jo
jne
ret
add
mov
pop
sbb
xchg
mov
xor
push
in
pop
jno
stos
sub
in
mov
inc
push
pop
inc
jno
push
aaa
xor
jmp
xchg
repnz
pop
add
rolb
popf
mull
fistps
mov
fidivrs
xchg
and
in
sti
mov
inc
and
push
iret
shr
rol
inc
je
neg
ret
out
dec
roll
and
dec
loope
jnp
fisubrs
int3
cmp
inc
sub
enter
or
sarb
sti
jecxz
cmp
inc
inc
fwait
out
sub
insb
and
ret
test
lret
cmp
adc
cli
int3
lcall
dec
dec
mov
ficoms
sub
cmp
sahf
testl
cli
arpl
fidivrs
sti
xchg
int
mov
or
jns
mov
test
lret
mov
lods
jne
mov
xchg
ss
mov
adc
es
in
adc
jb
lea
shr
push
cmpsb
xor
push
inc
mov
xlat
dec
orb
jne
pop
pop
jne
lods
push
jne
outsb
negb
cmpsl
fisttpl
sbb
mov
loopne
xor
sbb
cmp
shrl
test
aaa
jp
inc
fdivl
es
push
or
add
mov
xchg
sbb
and
insb
add
xor
push
pop
jp
mull
sbb
jg
push
in
and
adc
or
xor
push
outsb
xor
bound
mov
lds
outsb
fiaddl
adc
cmp
add
movsb
add
cwtl
xor
insl
xchg
push
fisttpll
test
fs
inc
inc
add
notl
das
cwtl
out
loopne
adc
test
cld
gs
std
push
scas
js
mov
mov
test
shl
mov
jo
repz
and
shrb
sub
mov
mov
mov
pop
dec
xlat
adc
loopne
shrl
addb
lahf
repnz
mov
out
pop
mov
xor
out
and
xor
jns
test
int
cvtdq2ps
arpl
xchg
call
push
jmp
and
sarb
jo
inc
cli
mov
or
xlat
jae
test
dec
shll
out
insl
mov
xchg
sbbb
xor
sarl
xor
lret
adc
stc
or
inc
sub
cltd
lds
rclb
mov
jb
xlat
or
pop
jecxz
push
mov
pop
and
gs
enter
rclb
mov
xchg
into
jb
dec
push
ds
repnz
test
xlat
pop
push
mov
clc
stc
aaa
imul
adc
sub
xchg
cmp
cld
and
fisttps
pop
add
lods
rolb
in
std
xchg
mov
shr
lcall
mov
dec
pop
push
stos
push
hlt
and
jp
push
addb
mov
daa
jg
sub
minps
cld
les
loope
jns
pop
imul
ror
movsl
inc
lret
sbb
pop
das
pop
mov
inc
aam
pop
cs
pop
arpl
add
pop
inc
push
xchg
loop
negl
je
jnp
sbb
lcall
add
xor
mov
ja
out
in
ss
roll
push
shll
insb
xlat
jp
xchg
cltd
cmpsl
loop
iret
cmp
pop
cmp
mov
in
imul
adc
call
add
xor
and
stos
lods
sub
lods
sbbb
loope
adc
inc
adc
jge
mov
add
mov
sbb
sub
dec
jg
pop
jecxz
or
rolb
mov
movsb
push
xlat
repnz
pop
mov
push
inc
outsl
sub
call
pop
and
or
outsl
mov
sahf
mov
dec
adc
inc
or
sub
fsubl
lret
dec
inc
sub
and
or
or
xchg
dec
adcb
inc
test
fcomps
addr16
adc
inc
imul
popa
and
pop
out
xchg
cs
xchg
or
mov
shl
jb
std
pop
or
into
jne
add
adc
jbe
rcll
shr
repz
push
mov
add
mov
cli
ret
mov
movsl
jmp
jnp
xchg
cmpsb
lahf
pop
ret
hlt
push
sarb
mov
xchg
xchg
imul
push
repnz
std
lods
pop
lret
jl
sbb
daa
int
sub
mov
push
rcr
mov
push
xchg
icebp
stos
and
dec
loop
push
push
sbbb
scas
add
push
fsts
dec
sbb
fcmovne
rcrb
sbb
dec
ret
mov
in
sbb
insl
jne
cwtl
aam
push
lret
int3
mov
mov
scas
sub
mov
push
js
es
jle
mov
pop
stos
clc
xchg
xchg
out
enter
aaa
xchg
test
adc
jecxz
je
test
in
addl
aam
loop
pop
gs
pop
adc
shll
dec
inc
inc
rolb
icebp
mov
outsl
shrb
in
xorl
xchg
sub
xchg
fs
add
lods
rcr
popa
std
xor
inc
or
sbb
mov
push
sub
loopne
ds
push
in
xor
jnp
sbb
aaa
dec
nop
jno
aad
jb
jno
pop
jge
test
adc
outsl
mov
into
or
dec
outsl
push
test
mov
fistps
add
daa
ja
out
pop
stos
dec
push
push
rcrb
add
cmp
mov
sbb
pop
cmp
mov
cli
ljmp
ret
jb
sbb
adc
sarb
stos
mov
inc
cmp
je
divl
shlb
out
inc
sub
mov
jle
lods
in
fs
and
or
jmp
cltd
out
add
dec
js
sti
jmp
bound
rorb
pop
mov
idivl
jecxz
xor
adc
loop
lret
imul
stos
pop
shll
scas
and
frstor
sbb
lods
sub
push
ja
sub
and
jnp
out
and
xor
sub
xchg
fadds
popf
mov
jmp
cmpl
es
pop
add
test
cmp
leave
xchg
adc
mov
loop
jb
addb
mov
cs
test
and
xchg
loop
push
and
jle
sahf
mov
mov
cmpsb
adc
in
leave
mov
push
fadds
ret
addr16
sbb
stc
call
lods
lea
push
lods
cmp
jg
rol
jae
fistpll
sarb
insl
fsubl
mov
ljmp
or
outsl
sarl
xlat
mov
jne
pop
jo
sub
sub
dec
rcr
pop
outsb
scas
repnz
pop
jmp
mov
inc
pusha
mov
lret
lock
sarl
mov
mov
xchg
testb
jno
mov
xchg
jle
or
xchg
loop
add
adc
jecxz
int3
idivl
add
movsl
xor
push
sbb
imul
inc
movsl
cmp
lods
mov
mov
or
lret
ja
pop
dec
sub
orb
mov
xor
xchg
insb
fldenv
sarl
cld
dec
xor
mov
scas
mov
sub
cmp
pop
jl
into
fldt
pop
lods
cmp
arpl
cld
sbb
fidivl
popa
fiadds
xchg
xor
pushl
xor
dec
mov
or
push
mov
cmp
enter
sub
mov
mov
mov
push
fldcw
dec
lcall
ret
mov
aaa
xor
jmp
pop
inc
outsl
dec
add
ds
movsl
fucomip
iret
aam
mov
and
sahf
push
inc
lcall
mov
add
movsb
fnstcw
xchg
bound
push
xchg
jne
jne
jmp
scas
fs
fistl
push
xor
test
pop
lds
push
cltd
jg
stc
or
neg
inc
push
scas
mov
push
mov
dec
pop
call
fistl
jecxz
es
inc
lret
int
out
xor
add
cmp
push
pop
dec
jmp
xorl
scas
mov
xchg
xchg
pop
pop
mov
jmp
push
xor
stos
pop
sbb
jl
icebp
or
xor
mov
mov
aas
nop
popa
lahf
repz
push
pop
daa
sbb
and
cmc
cmc
inc
mov
mov
js
loop
call
aam
aad
sarl
xchg
xchg
movsl
mov
pop
and
xor
arpl
js
daa
jecxz
add
and
pusha
cmp
bound
lods
loop
jge
inc
push
add
pop
inc
lcall
push
rcr
inc
hlt
stc
xchg
push
mov
sub
enter
outsb
pop
mov
mov
ud2
push
cwtl
add
out
fldenv
adc
jns
mov
popa
jnp
add
xchg
mov
popf
aas
scas
idivl
jle
test
into
pushf
outsb
adc
or
fidivs
adc
adcl
mov
fs
xorl
mov
popa
push
in
mov
ds
jl
xor
cmpsb
cmp
les
xlat
mov
inc
imul
jae
mov
dec
call
pop
lods
sahf
mov
outsl
xchg
cmpsb
outsb
cmpsl
dec
mov
xor
mov
jmp
outsb
in
dec
inc
fldt
xchg
rcrb
insl
sub
arpl
mov
rorb
imul
or
xchg
push
test
xchg
das
mov
xor
cmpsb
mov
loope
xchg
outsl
add
dec
pop
aam
mov
mov
movhps
in
sbb
pop
or
mov
cld
nop
cmp
push
adc
lock
js,pt
lds
xor
std
or
sub
iret
dec
call
adc
cmp
dec
daa
xor
mov
cwtl
and
mov
fdivrs
cld
or
and
or
dec
lcall
mov
repz
enter
lods
adc
mov
fstp
push
mov
lcall
mov
rcrl
dec
ret
xchg
in
or
icebp
out
ret
loope
xlat
mov
pop
orb
push
push
loope
dec
push
andl
add
mov
and
xchg
sbb
push
pop
insl
dec
add
imul
xchg
dec
mov
jmp
insl
cmpsl
inc
push
insb
push
mov
lcall
sbb
jl
pop
dec
test
ja
fstpl
daa
scas
xchg
push
add
mov
jnp
jp
adc
and
int3
imul
dec
xor
fs
pop
out
mov
ljmp
push
inc
and
inc
xchg
cmp
pop
jle
xor
mov
jge
loope
mov
imul
pop
mov
ficoms
or
mov
les
popf
add
push
enter
or
leave
push
jge
popf
xchg
sbb
inc
mov
test
js
scas
sahf
fsts
xchg
sbb
or
fdivs
std
sbb
dec
mov
pop
outsl
scas
scas
in
repnz
or
xlat
and
loopne
sbb
or
push
pop
shll
pop
inc
and
aas
lcall
nop
inc
sub
mov
adc
movsb
test
cmpsl
xchg
shl
xchg
sub
fldcw
push
outsl
mov
ficoms
mov
cmpsl
dec
stc
jl
mov
jecxz
jns
loope
mov
pop
sub
push
xor
mov
movsb
sbb
pusha
in
dec
cmp
idiv
mov
cld
push
stc
mov
add
iret
mov
add
jmp
sarl
stos
enter
push
std
or
dec
icebp
fidivs
std
jae
xor
xchg
outsl
sub
shrb
xlat
int
daa
cmp
int3
push
push
jb
mov
cmp
cli
mull
mov
ja
mov
fists
fdivrs
rcl
out
or
xchg
or
into
push
inc
mov
jecxz
stc
mov
lods
shlb
xchg
test
sbb
inc
leave
daa
repnz
mov
into
dec
xchg
xor
jne
mov
or
fbstp
adc
sbb
inc
jb
push
loopne
test
adc
daa
pop
pop
repz
test
aas
nop
add
jge
scas
in
mov
sahf
and
sub
mov
lret
mov
aas
mov
out
js
je
or
clc
arpl
lea
dec
dec
das
mov
mov
js
ljmp
pop
or
sti
fcmovnb
fldl
inc
stc
pop
push
hlt
enter
pop
data16
incl
insb
pop
pop
dec
jne
push
inc
ja
insl
cmp
mov
out
int3
jmp
sub
mov
pop
push
lods
das
nop
push
rcll
push
cmp
jecxz
and
sub
sbb
and
mov
dec
lahf
push
lea
out
cltd
jnp
cmp
mulb
dec
leave
aas
inc
xor
jmp
pop
mov
mov
jge
fcoms
or
lea
jge
cmp
sub
in
cmp
sahf
pop
pop
dec
int3
in
mov
or
pop
jne
mov
popf
mov
into
jns
je
mov
shlb
inc
xchg
in
sub
dec
push
pop
scas
fcomi
pop
inc
es
add
adc
xchg
aam
push
es
into
jnp
popf
sub
mov
ret
rorb
mov
cmc
sbb
add
lock
imul
aam
in
fdivrl
aas
fwait
mov
lret
mov
sahf
xlat
pop
ljmp
ja
loope
jle
shrl
xchg
std
push
or
jns
inc
lods
jmp
cmp
push
rcrl
jmp
sbb
xchg
adc
data16
in
fsubs
adc
cmp
out
jno
jg
stos
ss
rorl
pop
icebp
cld
stos
fildl
sub
dec
out
xchg
sub
xchg
jge
pop
imul
outsl
xchg
inc
popf
gs
mov
loop
movsl
mov
ret
cmc
fiaddl
xchg
mov
decl
push
dec
jnp
call
jno
push
cmp
ret
mov
cmp
insl
pop
mov
js
lds
or
adc
repz
gs
adc
test
imul
cli
cmp
jae
adc
or
push
xlat
pop
mov
pop
and
mov
ret
ret
cmpsl
or
das
sub
mov
xor
jo
push
int
sbb
xchg
out
pop
sbb
stos
push
dec
cld
push
call
addb
mov
ds
test
jae
les
cmp
popa
sub
push
aad
repnz
mov
jmp
jno
dec
mov
xchg
pminub
hlt
mov
add
and
icebp
repz
call
mov
pusha
add
adc
arpl
sti
lds
push
lcall
popa
cs
push
pop
fiadds
jbe
nop
loope
mov
jmp
pop
xchg
jle
add
xchg
repnz
xor
and
popf
mov
pushf
fwait
clc
mov
adc
es
push
jae
xlat
stos
xchg
push
mov
lret
std
add
pop
and
inc
add
testl
imull
xchg
lds
fstl
jp
ficoml
jecxz
mov
out
stos
cmp
rcl
inc
pusha
data16
shrl
icebp
test
mov
dec
adc
out
rcr
cld
xchg
xchg
dec
add
jb
jne
rcrl
lea
repz
mov
enter
popf
push
aad
add
mov
das
test
test
and
add
ret
pop
xchg
leave
pop
mov
cltd
cmp
das
cld
jo
xchg
push
fs
cli
iret
pop
mov
clc
jecxz
outsl
inc
pop
cmp
mov
cmc
cld
push
fbld
inc
jg
mov
mov
nop
int
adc
fdivl
stos
mov
ret
mov
scas
inc
out
jp
fstpt
mov
test
mov
inc
mov
pop
aaa
xor
push
cmp
xchg
adc
dec
rcll
bound
inc
in
int3
pop
out
test
les
inc
leave
cmpsl
jl
out
xor
xlat
cmp
pop
loope
sub
dec
cmp
or
js
lret
in
cmp
cld
xchg
adc
lret
xor
add
es
or
lock
sub
fstpt
dec
and
mov
and
punpckhbw
sbb
inc
xor
add
mov
in
jge
push
xchg
jns
mov
xor
js
js
imulb
ja
jo
push
sub
inc
sub
out
movsl
movsb
push
je
and
push
xor
cli
sub
inc
roll
in
ffree
insb
and
shl
daa
subb
xor
pop
lea
jmp
gs
hlt
fsincos
lahf
inc
add
lds
xchg
cmp
cwtl
pop
jb
dec
rep
adc
cld
cmc
lods
clc
clc
lret
mov
inc
fs
call
xbegin
cmpsl
xchg
xchg
push
sub
lret
ds
dec
adcw
stos
shlb
sub
xchg
jecxz
jae,pt
jb
cmpsl
jle
pop
xor
cmpsl
sbb
pop
fwait
stos
sbb
xchg
mov
sbb
mov
bound
and
lcall
xor
stos
das
jbe
aas
adc
sysret
pop
notb
ficoml
ret
and
add
dec
push
arpl
and
popf
sub
popf
jae
lcall
fcomip
lods
push
int3
pushf
lods
movsb
mov
lock
das
pop
jae
cmp
pop
jnp
imul
cmp
imul
and
push
fstl
popa
mov
lcall
shll
lcall
aas
sqrtps
add
mov
adc
adc
jge
push
xchg
jl
aad
insl
mov
and
mov
fldt
jno,pn
sbb
adc
adc
ss
movsb
push
arpl
decl
fs
fiadds
and
mov
or
push
aaa
cmp
mov
shlb
insl
fdivrl
or
in
cmp
mov
imul
test
sbb
adc
imul
add
or
mov
add
mov
pusha
aad
sar
jne
das
jp
mov
insl
jecxz
xor
gs
push
imul
pop
pop
mov
dec
push
fbld
adc
jae
ret
mov
int
dec
aad
test
aam
popa
ja
jne
lock
test
sub
lret
sub
sub
repnz
cld
movb
push
rolb
dec
jae
clc
xchg
movsl
clc
xchg
mov
push
pop
add
adc
aas
xchg
test
adc
pop
enter
jnp
lcall
mov
cmc
sub
xor
jns
xor
es
decl
mov
aaa
mov
xor
sbb
adc
mov
pop
cli
nop
mov
or
je
mov
inc
in
sub
sub
push
jnp
int3
push
out
cld
cmp
sbb
sarb
fldl
nop
ret
cs
push
cmpxchg
push
repz
or
mov
jne
insl
pop
add
loop
enter
sbb
hlt
ss
sub
inc
and
out
out
jmp
lds
inc
inc
aam
int3
orl
and
push
pop
lods
dec
xchg
push
jl
push
xchg
cwtl
and
sahf
rcll
push
add
sbb
repnz
test
inc
insb
rcr
aas
mov
mov
xchg
addr16
and
imull
aaa
jb
in
outsb
lret
add
xchg
out
xorl
test
mov
jl
popf
loopne
aaa
out
loopne
add
push
outsb
fwait
push
lcall
call
mov
cmp
sarl
push
jb
shlb
mov
xlat
jne
mov
mov
data16
repnz
lret
popa
xchg
sub
je
mov
or
outsl
push
cmp
pop
pop
push
repnz
test
mov
mov
cmp
dec
inc
sbb
test
mov
cmpl
cmp
sub
add
xlat
jecxz
jmp
inc
xchg
je
dec
xor
xor
test
pushf
cmpb
cmp
push
mov
cwtl
jae
cmpb
popf
ss
lahf
mov
mov
out
outsl
mov
bound
fildll
sbb
loop
repz
mov
jmp
xchg
dec
jmp
test
jne
jge,pt
addb
jle
loopne
aam
adc
popl
xor
repz
outsl
pop
push
gs
pop
cmpsl
or
mov
lret
pop
out
jo
jecxz
or
mov
inc
mov
negl
insb
stos
add
gs
insb
test
inc
mov
inc
in
pop
rcll
out
fldenv
jp
mov
dec
rolb
jmp
jg
shl
mov
jo
leave
cs
std
xchg
add
loope
mov
xchg
add
dec
and
aaa
sub
inc
in
jno
test
notb
sarb
add
mov
rcll
add
lds
shlb
mov
dec
cmp
mov
test
repnz
mov
int3
xchg
mov
jb
cmpsl
jg
lea
xchg
leave
outsb
sub
mov
popa
fnstsw
dec
test
mov
cmp
out
cmp
cmp
in
or
cwtl
jmp
fistps
shlb
xlat
and
mov
faddl
imul
sub
xchg
out
inc
out
add
outsl
jmp
dec
orb
fsubr
das
adc
dec
sub
sub
cmp
inc
jae
mov
push
push
addb
xor
adc
test
add
inc
pop
mov
neg
cmp
out
xorl
jmpw
clc
push
fcmovne
xchg
int3
shll
xor
fildll
add
mov
jmp
add
es
adc
js
out
sbb
mov
inc
sub
sbb
and
int
cmpl
push
leave
das
push
daa
mov
mov
cmp
fcmovu
push
push
outsb
jp
push
gs
cli
aad
loop
sbb
adc
into
xor
mov
int3
repnz
jp
jl
and
dec
mov
scas
inc
pushf
push
xor
cmp
cmpsl
out
mov
xor
aad
adc
gs
ja
popa
pop
repz
or
jne
dec
test
imul
push
mov
lods
pushf
dec
js
pop
xor
loop
mov
cmpsl
pop
push
mov
imul
lods
mov
dec
xor
fildll
mov
jp
mov
in
sub
inc
jb
jle
ds
stos
xchg
icebp
dec
mov
jg
int3
notb
push
pop
and
lods
sti
pop
mov
mov
arpl
push
mov
inc
daa
addr16
lods
or
gs
jbe
dec
cwtl
mov
aam
daa
int3
jno
stc
scas
mov
adc
inc
adc
lock
mov
inc
adc
and
fidivrs
mov
stc
fwait
jb
dec
test
psubsw
cltd
push
sub
loop
sub
or
xor
push
ret
clc
ret
movsb
das
inc
pop
and
inc
ja
cmp
mov
icebp
je
and
and
rcrl
cmp
xchg
and
mov
jo
lods
add
add
jl
push
push
xchg
jg
cmp
mov
andl
cli
jns
dec
in
out
push
jle
fcoms
push
xor
ror
sub
push
je
cmpsl
push
pop
pop
daa
out
test
movsb
std
mov
xchg
test
sub
xchg
cmp
js
insb
fsts
les
shrb
adc
mov
clc
inc
jl
fnsave
in
dec
or
ds
jnp,pn
jne
and
test
push
lcall
pop
sub
adcb
adc
xchg
sbb
adc
test
jg
or
xchg
mov
xorb
sbb
into
cmc
popf
test
mov
xor
fadd
pop
cmpsb
mov
sbb
scas
xchg
cmp
outsb
jbe
jae
lret
std
adc
in
mulb
push
in
pushf
daa
xchg
lcall
inc
stos
jl
mov
ds
dec
push
jle,pn
mov
imul
loop
ljmp
mov
lcall
cld
jne
ss
fsubs
xor
shll
mov
inc
popa
xor
shrd
adc
into
adcb
xchg
cmpsb
loop
cmpsl
dec
xchg
cmp
sbb
int
xchg
push
fucom
sbb
cmpsl
fidivrl
aas
push
sub
mov
mov
add
mov
or
xchg
je
pop
pop
cmp
xchg
pusha
scas
jg
popa
jbe
and
in
lods
sub
fcomps
inc
mov
and
adc
mov
cmc
fisubs
dec
dec
aad
incl
sub
test
push
lcall
pop
mov
xor
ret
push
loop
call
popa
add
adc
out
pop
movsl
sub
mov
sahf
lret
test
push
or
or
ror
mov
xchg
sub
iret
rol
xchg
pop
mov
and
call
sub
outsl
aam
mov
ljmp
es
xorl
iret
inc
rorl
cltd
push
cmp
in
jmp
cs
cmpsb
fwait
mov
mov
movsl
pop
sbb
mov
rcll
mov
push
fnop
and
jle
aas
lock
xlat
js
repz
inc
std
sbb
mov
outsb
sub
addr16
pop
xchg
push
cmc
mov
add
mov
pop
lcall
int
icebp
sbb
std
data16
aaa
xor
or
pop
aas
push
sub
jl
rcrb
rol
ds
mov
movsb
sti
aas
pop
daa
jg
loope
xor
shr
outsl
dec
jne
inc
sbb
roll
stos
mov
pop
pop
addr16
or
sbb
sbb
loope
sbb
fsts
aas
or
ficoms
sarb
adc
insb
push
or
aaa
add
push
lret
cwtl
lret
aad
pushf
fwait
push
out
xchg
push
jmp
pop
cld
add
mov
adc
push
and
and
add
pushf
sbb
sarb
push
pop
in
jle
scas
jbe
adc
shll
movsb
lcall
cli
cwtl
mov
push
sub
and
cmp
lcall
add
movsl
push
xor
or
lock
loop
je
je
cs
adc
pop
ret
xlat
inc
xlat
push
shll
or
pop
scas
pushf
movsl
jns
xlat
into
pusha
sahf
fists
pop
jmp
jbe
cmp
lret
inc
mov
add
or
push
mov
add
jnp
cmp
mov
lods
ror
jnp
cmp
adc
pop
dec
or
and
call
cld
mov
ret
mov
and
push
xor
outsl
mov
ja
aas
rorl
inc
fucom
xchg
ror
test
jl,pt
in
or
ret
arpl
das
dec
xor
pushl
lea
xchg
jle
test
mov
aam
es
and
xchg
sbb
cmc
mov
or
sub
dec
jbe
pop
xor
movzwl
mov
scas
frstor
negb
xor
dec
scas
ret
mov
jb
mov
push
adc
stc
cwtl
or
xchg
lock
aas
cmp
cmpsw
pop
mov
out
dec
mov
jmp
rorl
mov
mov
dec
mov
sbb
push
jle
out
daa
push
adc
or
mov
pop
test
scas
int
cmp
ret
sbb
jne
pop
push
dec
xlat
in
not
mov
push
faddp
jmp
xchg
xchg
cwtl
dec
cli
push
movsl
repnz
aaa
push
lfs
pop
or
sahf
sahf
mov
and
inc
xlat
xor
int
stc
jp
icebp
movsbl
push
shrb
ss
xor
dec
cld
sbb
imul
stc
outsl
mov
sti
inc
xchg
cmpsb
aam
xor
pmaxub
insl
add
jg
lds
dec
aam
cmp
fwait
push
shrl
aaa
xor
hlt
jae
std
pop
jmp
push
ljmp
repnz
fwait
push
jmp
sbb
adc
jnp
jecxz
stc
xor
nop
outsb
mov
adc
dec
or
mov
xchg
push
lcall
loop
ret
pop
add
cld
dec
loop
add
xchg
out
push
int
out
bound
mov
or
push
int
push
xchg
jbe
popa
sarl
fstl
aad
aam
dec
push
fisttpl
adc
cmp
jne
xchg
out
cmp
mov
mov
mov
or
hlt
out
jge
mov
and
ja
cwtl
cmp
lods
popf
incb
xchg
and
jae
push
subl
or
rolb
adcl
mov
into
xor
pop
ja
out
test
dec
int3
xor
das
out
roll
xchg
or
stc
ret
dec
adcl
jge
scas
jae
shrb
movsl
outsl
mov
mov
sbb
mov
aas
call
scas
xor
lret
push
jl
lcall
xchg
mov
cli
jecxz
mov
or
push
std
sbb
xchg
mov
inc
cmp
lods
sub
pop
lods
xchg
mov
cmp
loope
jo
out
inc
fwait
fs
adc
fwait
xchg
cs
in
mov
fs
lret
out
cmpsb
fcompl
push
in
cmpb
sbbl
fs
dec
xchg
sbb
fisttpl
sbb
es
mov
xchg
imul
add
dec
pop
sbb
xchg
ja
sub
sbb
add
mov
ret
push
cmpsl
test
mov
pop
orl
or
jns
data16
push
shll
int3
mov
inc
sub
sbbl
fadds
cltd
xchg
push
test
xchg
outsl
int
xchg
xchg
shlb
or
inc
fwait
in
idiv
mov
ss
sahf
les
lods
xor
test
shll
clc
loopne
and
insl
fwait
sti
loopne
add
add
pop
test
test
imul
dec
je
push
jecxz
inc
push
mov
std
sahf
outsl
es
jns
lcall
dec
pusha
mov
push
inc
add
inc
jp
repz
push
test
pop
negl
cmp
rcrb
mov
push
pandn
bound
dec
insl
leave
ret
loopne
movsl
pop
in
add
aam
adc
push
jecxz
push
icebp
push
lock
cmp
int
dec
lock
shll
and
mov
jmp
cli
jb
movb
xchg
pushf
in
stos
pop
andl
ds
adc
and
stos
pop
inc
in
cli
and
out
lds
adc
aaa
in
fdivrl
aaa
out
addb
fisttpll
lahf
adc
add
xchg
test
leave
pop
test
mov
inc
mov
clc
outsb
clc
repnz
and
ret
mov
inc
mov
push
mov
mov
loopne
out
ficompl
pop
dec
int3
lock
cwtl
xchg
addr16
mov
ja
inc
sbb
mov
dec
loope
sub
xchg
sbb
cld
sarb
test
xchg
jne
mov
lock
bound
pop
push
ret
rorl
out
mov
cmpb
rorb
sub
flds
ror
xchg
lret
jmp
aad
mov
repnz
mov
mul
cmp
sbb
and
mov
inc
mov
cmpsl
std
pop
pop
push
jae
nop
mov
loop
adc
xchg
inc
push
int3
sbb
mov
pusha
stos
sub
sub
push
mov
mov
dec
es
dec
dec
ljmp
icebp
inc
push
sbb
adc
fwait
pop
dec
popf
popf
mov
insl
shll
inc
lods
stc
test
dec
sbb
mov
pop
cmp
aaa
cmc
dec
mov
push
adc
clc
out
fsubl
out
mulb
xor
loope
adc
and
jns
lock
outsb
inc
aas
push
outsl
fs
or
or
push
xchg
stos
dec
cmp
or
jmp
out
and
sub
xor
js
jno
mov
dec
shrl
jo
cmpsl
mov
in
xor
pop
jnp
xor
jb
shrb
sbb
fdiv
xchg
sub
jb
xchg
mov
sarb
push
jb
fs
inc
movsl
cwtl
loop
lds
add
imul
push
clc
and
inc
adc
cmp
cmp
jp
inc
jnp
cmpsl
or
test
sub
mov
out
mov
push
push
lock
sti
arpl
push
lods
mov
das
push
xor
jle,pt
inc
fnstcw
les
call
aas
loopne
or
lcall
dec
mov
cli
nop
push
ret
dec
mov
daa
push
xchg
sbb
outsl
jne
cmp
add
dec
sti
jae
insl
cmovp
cmp
lods
icebp
enter
loop
pop
cwtl
in
and
or
pop
addr16
jecxz
mov
ljmp
xor
cmp
insb
and
add
das
mov
xchg
inc
dec
jmp
call
int3
adc
out
and
jnp
xchg
mov
andl
push
pop
sbb
mov
mov
int3
jp
jns
jne
push
int
inc
sbb
stos
jb
sub
sahf
fstps
jbe
fstpl
or
pop
cmp
inc
push
sub
mov
push
nop
fdivl
jmp
dec
clc
aad
or
fdivrs
rol
rcll
js
stc
adc
sub
jmp
jmp
xor
ficoms
or
shlb
in
add
jo
push
sub
and
mov
pusha
xlat
nop
push
inc
adc
out
xchg
sbb
push
imul
pop
fwait
je
das
add
das
ret
mov
push
rcrb
iret
div
inc
push
jecxz
pop
pop
ljmp
adc
repz
cmp
adc
idivb
jp
sbb
outsl
ss
lea
sbb
cmp
mov
sub
mov
rcr
insl
mov
sub
mov
sub
jns
fs
push
hlt
inc
inc
mov
sbb
stos
add
xor
dec
sbb
hlt
inc
dec
lret
loopne
mov
jae
xchg
dec
mov
and
push
std
aaa
jmp
lods
int
sub
movsl
mov
mov
std
cltd
mov
iret
repz
cwtl
and
aad
aas
dec
das
incl
push
sbb
jo
ds
fcmovbe
incb
aas
ds
add
and
arpl
loopne
sar
jecxz
and
in
pop
notl
mov
cs
aad
inc
dec
icebp
insl
repz
add
jns
aad
add
lods
sbb
and
mov
jbe
jns
xchg
out
fnstcw
std
mov
pop
jmp
int3
push
jmp
stos
testl
iret
add
cmp
outsl
scas
rolb
mov
dec
popa
pop
mov
hlt
jns
enter
push
push
shr
jle
xchg
mov
or
sbb
std
push
fwait
addr16
jl
int3
inc
sub
sbb
lahf
push
inc
or
fldl
ret
pusha
lds
inc
cs
cmpsb
test
adc
push
dec
rorl
cmp
add
lods
mov
inc
push
ret
xor
jns
and
dec
sub
inc
lods
fcomps
jecxz
shl
mov
jnp
dec
lock
shl
repnz
in
in
mov
jbe
and
fyl2xp1
push
ja
inc
cmpsl
lods
sub
aas
pop
and
mov
push
sub
sbb
push
insb
js
cmp
push
es
out
ja
mov
lahf
loopne
pop
push
fmul
add
test
xchg
and
mov
push
aas
js
bound
int
push
out
movsl
es
into
mov
dec
rcrl
inc
jb
push
test
rcrb
xchg
iret
jo
insl
or
lcall
bound
mov
cwtl
gs
pop
jle
fnstcw
gs
cs
xchg
in
mov
mov
sahf
push
enter
push
add
stos
sahf
rorb
add
and
cmpsl
fnstenv
push
add
add
push
mov
lcall
mov
icebp
adc
ja
sub
stc
or
repz
inc
cmp
mov
mov
subl
xor
push
inc
fdivrp
outsl
in
dec
pop
dec
or
cld
data16
mov
imul
xor
call
lods
xlat
ljmp
push
sub
rcr
int
push
or
jmp
neg
imul
ss
add
adc
mov
shrb
ret
sub
int3
inc
adc
aam
bnd
push
test
fnstenv
mov
inc
fs
ljmp
mov
or
inc
shrl
or
dec
stos
dec
cmp
inc
lds
lock
test
add
movsb
jo
incb
loopne
inc
fadds
insb
cltd
jo
jmp
jbe
js
sbb
xchg
loopne
out
fld
fnstenv
jmp
pop
inc
mov
xchg
stos
jae
dec
adc
push
xor
push
into
scas
jmp
pop
aad
mov
ret
lea
outsb
notb
loop
pop
jl
dec
aaa
fimull
xchg
push
cmp
cmpsl
cltd
in
xchg
in
dec
push
stc
test
ds
enter
aam
jge
and
aam
mov
inc
sub
outsl
sbb
pop
fisubrs
push
or
stos
pop
pop
enter
dec
mov
sub
icebp
insb
adc
int3
push
inc
lcall
xchg
imul
cld
mov
andl
push
adc
push
inc
xor
jmp
ljmp
ret
insl
adc
adc
subl
movb
xor
jmp
push
popa
sub
lods
cli
enter
daa
pop
push
jle
mov
les
and
ficompl
jo
fld
mov
loope
dec
mov
std
sub
test
sahf
or
mov
pop
dec
dec
push
in
mov
imul
popa
mov
rcll
aaa
mov
pop
mov
pushf
call
test
shr
sbb
add
arpl
in
sub
aam
dec
fdivs
movsb
shr
add
or
scas
inc
sahf
ret
dec
shlb
add
mov
lds
jns
push
or
mov
int3
cld
pop
mov
js
xor
mov
mov
test
and
aaa
xor
cld
imul
inc
xor
idivb
push
xchg
xchg
or
sub
fsubrp
jb
ret
out
push
mov
repnz
xor
cmpb
mov
xchg
jo
add
test
arpl
test
insl
push
push
aam
xchg
fs
cmpb
andl
in
push
cmp
cmc
in
icebp
sbb
andl
xchg
mov
inc
sbb
imul
mov
jp
mov
jbe
or
xchg
repnz
push
cli
mov
xor
jo
sahf
pop
and
outsl
neg
daa
jmp
dec
inc
xlat
xlat
mov
imul
mov
pop
push
ja
in
aaa
js
mov
mov
aam
stc
mov
pop
or
aas
push
pushf
push
mov
mov
mov
ret
shlb
popa
in
mov
mov
test
lret
jp
jns
pop
inc
lods
cmp
addr16
xor
xor
mov
jbe
leave
sti
inc
xchg
mov
aas
jo
pop
cli
jns
cmp
adc
cmp
add
imul
cli
cmp
movsb
adc
xor
fildl
imul
call
gs
in
aas
in
pop
sub
jae
push
and
enter
adc
std
xor
jl
sbb
scas
push
cmp
adc
cmpsl
inc
cmp
inc
lahf
inc
add
mov
cmp
lods
aad
adc
dec
and
inc
dec
xor
hlt
push
lret
in
rcrl
cmp
push
out
stc
push
in
addr16
inc
dec
and
sub
insl
lret
add
cmp
movsb
scas
lock
in
ficomps
addr16
mov
ja
cmp
cmc
push
shlb
mov
add
mov
pop
loop
jle
lds
mov
add
sbb
ret
std
loop
adc
mov
es
push
push
insl
out
clc
cltd
pusha
push
js
push
adc
mov
lcall
inc
sbbl
jg
xchg
fs
test
lahf
jne
or
dec
les
movsb
cmp
and
pop
fcomip
nop
and
jno
jno
movb
scas
shll
mov
jge
bnd
xor
adc
and
sahf
mov
insl
fisttps
mov
adc
xchg
inc
mov
cmpsl
or
shl
insl
jns
cs
ret
mov
sub
mov
mov
sbb
mov
jo
and
xor
negb
aas
or
inc
mov
js
jmp
mov
repnz
xlat
addl
enter
sbbl
test
aad
cwtl
repnz
scas
jp
sti
loope
mov
push
push
repz
jmp
rol
shr
or
ljmp
push
or
notl
push
push
adc
hlt
mov
dec
adc
sbb
movsb
cmc
fistpl
mov
add
xchg
cmp
and
push
popa
xchg
jp
and
mov
or
sbbb
nop
cld
mov
sub
jge
fwait
pop
and
ljmp
jnp
push
xchg
inc
sbb
jbe
add
test
jne
cli
xor
xchg
push
cs
inc
pop
xchg
les
inc
sti
pop
dec
in
or
jns
insl
add
rcr
ja
lret
xor
cltd
pop
pop
fptan
out
popa
out
jno
mov
ret
inc
imul
xor
daa
fwait
psadbw
idiv
xchg
sbb
jl
and
jns
fwait
sbb
ljmp
ja
into
scas
das
pop
in
cld
ret
push
into
pop
bound
enter
mov
mov
aaa
fimull
jl
pop
mov
jecxz
ljmp
add
aam
pop
jo
push
out
iret
mov
push
mov
repz
fdivp
clc
add
xchg
adc
mov
jne
sbb
pop
push
cmpl
test
in
dec
xor
mov
addr16
divl
pop
cmp
xor
mov
in
daa
pusha
sbbl
idiv
adc
ret
aaa
mov
add
lret
and
in
push
pop
inc
stc
jmp
xor
and
insb
mov
or
lahf
int
rcl
sbb
pop
fdivl
pop
xchg
or
leave
xchg
push
out
jg
clc
push
test
sub
mov
sub
mov
loopne
cs
incb
into
loopne
jl
shrb
xor
xorl
sbb
sub
pop
mov
push
rorb
sahf
or
repz
data16
stos
sahf
stc
push
aaa
sub
jbe
je
rcl
lods
xchg
add
dec
or
je
lcall
and
sub
lret
jae
lret
push
xchg
data16
sub
mov
les
int
aas
jbe
mov
enter
int3
xchg
test
pusha
inc
lret
jno
outsl
iret
and
mov
fadds
jno
lret
sub
loopne
das
jnp
inc
shl
add
and
popa
jb
adc
sub
aas
push
mov
leave
imulb
popf
aad
push
aam
jmp
mov
mov
pop
pop
repz
or
sbb
ficoml
mov
shrl
mov
andl
into
push
loopne
push
push
add
xlat
xchg
ss
das
enter
mov
or
sbb
push
clc
mov
adc
cmp
push
clc
imul
mov
and
cmp
mov
pop
xchg
mov
xchg
adcl
cwtl
push
stos
out
pop
mov
outsb
mov
cmpsb
scas
jmp
fs
fnsave
mov
xorb
in
lock
jp
shrb
int3
sub
sahf
mov
andl
scas
cs
jo
rcr
cmpsl
xor
push
imul
test
clc
cld
mov
sbb
mov
mov
jl
test
shlb
out
cmp
retw
test
mov
inc
fstpl
bnd
xchg
push
mov
jbe
into
lret
jg
shrl
sub
adc
inc
dec
xor
jnp
ss
cmp
das
sub
test
lds
data16
inc
das
gs
test
add
mov
cmp
pop
mov
shlb
sub
push
sub
push
cmp
mov
and
and
je
xchg
lret
dec
add
hlt
in
sub
stos
pop
inc
pop
enter
scas
lods
ja
mov
ret
add
ljmp
les
mov
dec
push
inc
sbb
movb
mov
scas
ret
xchg
add
jg
xchg
inc
inc
decl
jae
out
cwtl
pusha
push
xchg
inc
mov
imul
lds
sub
xor
loope
pop
and
dec
pop
cmpsl
pop
lret
sarl
xlat
hlt
fstpl
jg
pop
sbb
repnz
mov
insl
and
imul
adc
inc
addr16
push
sub
ret
lret
mov
mov
pusha
decb
mov
js
aaa
xchg
or
out
dec
pop
jmp
in
dec
pushf
fidivrl
push
xlat
mov
mov
fbstp
xchg
jle
mov
xor
or
add
mov
pop
push
inc
mov
push
push
adc
push
cli
xchg
pop
shlb
pop
repnz
rcr
jnp
and
xchg
call
je
xchg
xchg
mov
push
mov
loop
inc
add
int3
insl
rorb
fwait
jecxz
xchg
dec
adc
adc
add
sarl
rcrb
push
ret
stc
nop
xor
inc
inc
jge
and
cltd
inc
cmp
aam
fwait
mov
flds
fdivr
call
mov
enter
hlt
mov
push
cmp
pop
mov
xorl
xchg
mov
loopne
pop
daa
not
lret
movsl
jae
insb
xchg
sub
or
repnz
cli
ja
lret
test
pop
mov
sub
mov
hlt
add
sbb
enter
fimuls
push
rorl
fidivrs
add
or
mov
mov
test
mov
imul
enter
mov
and
fmul
mov
add
popf
leave
stos
fidivs
iret
cltd
repz
jecxz
cmp
dec
je
subl
out
sbb
mov
test
and
or
sbb
sub
jo
pop
xor
jnp
mov
bnd
out
mov
xor
push
adc
sub
insb
jmp
inc
jne
mov
push
leave
outsl
stc
mov
repz
sbb
push
add
push
stc
test
outsl
and
pop
mov
lcall
mov
inc
jecxz
jmp
stc
aaa
sahf
add
mov
fisttpl
sub
sar
sbb
mov
mov
hlt
pop
mov
call
repnz
idivb
repz
mov
stos
lret
jl
dec
add
or
inc
leave
inc
and
add
icebp
mov
adc
ret
pop
loope
inc
stos
in
jmp
pushf
adc
cmp
jge
inc
push
movsb
andl
sub
sbb
mov
pop
mov
cld
gs
pusha
inc
inc
or
lret
push
shl
cmp
stos
imul
insl
sub
xor
outsl
shrb
outsb
fistpl
pop
dec
jp
dec
sbb
call
ret
adc
jl
rcrb
mov
outsb
imul
pop
in
dec
ret
into
jmp
pop
cmpsl
repnz
mov
lret
stos
mov
repz
xchg
sbb
ret
lfs
sarl
ja
inc
lea
je
out
test
add
andl
adc
hlt
dec
rorl
js
jp
mov
mov
call
cli
dec
and
lahf
mov
rorb
jae
cmp
shl
cmp
rcll
or
cmc
jno
pop
mov
adc
xor
mov
add
scas
mov
lret
and
jo
pop
cmp
jmp
sub
fdivrs
push
enter
jg
xchg
gs
push
out
mov
inc
imul
cli
mov
xchg
sub
mov
icebp
sbb
jno
dec
pop
or
daa
in
or
shl
mull
movsl
leave
nop
rcr
xor
repz
je
adc
sbb
pop
adc
inc
mov
xor
add
push
dec
xorl
xchg
push
data16
fcoms
mov
mov
jmp
adc
repz
add
or
mov
pop
or
sub
or
push
cmc
jp
xchg
jecxz
out
and
pop
fisttpll
push
divb
jle
jo
inc
or
fsubrs
adc
dec
xor
outsl
jns
fisubs
ret
js
outsl
mov
inc
pop
iret
mov
jae
test
inc
cmp
cmpsl
xchg
popf
or
cld
sti
lea
xor
fbstp
outsl
cmp
sbb
loop
aam
add
iret
xchg
dec
dec
les
ja
lea
std
ret
out
repz
pop
dec
mov
xlat
scas
add
jp
movsb
and
cmc
insb
push
dec
mov
and
jge
or
outsl
mov
test
mov
push
mov
fisubrl
jecxz
add
orl
lea
mov
out
decl
mov
in
shr
loope
pop
pop
cwtl
les
mov
inc
dec
fwait
vpcmpeqw
push
hlt
mov
push
mov
fs
roll
pop
pop
mov
sub
xlat
test
adc
and
xor
sbb
push
jns
ja
popf
in
mov
jno
dec
mov
xlat
shlb
fdivr
sti
add
jg
ret
xchg
rolb
xor
pop
sahf
sub
and
and
outsl
add
add
sub
mov
jne
das
sbb
cwtl
add
push
in
push
or
incb
sub
mov
adc
sub
cmp
pop
pop
xchg
dec
out
repz
nop
and
out
xor
mov
shl
in
jae
xor
pop
sub
xor
mov
pop
mov
in
push
aas
sub
stos
mov
pushf
mov
xor
mov
jo
cmp
dec
xchg
cmpsb
mov
xlat
xchg
xchg
inc
mov
fdivs
loop
mov
lods
dec
cs
adc
inc
or
and
push
mov
mov
and
into
mov
sbb
jb
lods
insl
push
push
push
or
mov
dec
pop
adc
and
sub
push
in
je
mov
notl
pusha
ror
sbb
or
inc
or
pop
fwait
insl
jne
mov
adc
in
sbb
call
xchg
push
xlat
rcll
jb
inc
mov
in
pop
lret
mov
lea
rol
jo
pop
push
dec
leave
lahf
cmpb
mov
jge
dec
or
stos
das
cld
stos
enter
mov
out
outsb
and
lea
cltd
sbb
fildl
mov
jns
push
mov
adcl
push
cmp
pop
or
jmp
ljmp
es
push
je
sbb
sub
gs
out
or
aad
stos
lock
jbe
pop
lods
dec
out
js
sbb
xchg
jno
mov
loope
mov
adc
inc
jmp
add
lods
sub
pop
sub
shlb
pop
add
adc
mov
ds
idiv
add
outsb
shrb
xchg
ret
dec
adc
mov
test
jnp
jne
pop
mov
negl
inc
or
mov
into
scas
in
add
movsb
fwait
mov
jae
subl
lock
jae
push
daa
cmp
pushf
cmp
mov
or
cmp
jp
pop
push
cmp
sub
adc
loopne
adc
add
je
fisttpll
mov
jg
xchg
pop
in
bnd
imul
rcr
int
push
es
mov
rcrb
pop
test
inc
mov
int3
cmp
scas
push
in
rorl
arpl
pop
int
inc
jns
xchg
jae
sbb
dec
jo
xchg
mov
cmpsb
cmp
fidivrl
lock
mov
cmpl
jo
aad
and
adc
stc
mov
movsb
idiv
jb
push
cmpsb
mov
ds
dec
cmp
sub
fsubr
or
mov
cmp
push
xchg
or
jg
fisubl
mov
mov
inc
pop
dec
fstpt
test
adcl
cmpb
adc
cltd
mov
mov
dec
call
imul
aam
cltd
mov
lret
or
pop
bound
daa
lcall
ljmp
out
cld
std
adc
sbb
cli
mov
ficompl
mov
xor
sub
ret
jno
enter
add
out
lahf
mov
mov
push
mov
shl
rcl
jp
stos
lcall
rcl
xchg
inc
scas
xchg
dec
xor
std
xchg
rolb
or
mov
fcmove
cld
cld
das
outsl
sub
shrb
fistl
rcl
jns
nop
dec
daa
cmc
sbb
xchg
ret
lahf
mov
lods
adc
mov
cmp
aaa
je
lahf
cmpsl
adc
jne
xor
aas
icebp
xchg
pop
jecxz
mov
pop
pusha
sub
sbb
xchg
xchg
mov
dec
jno
cmp
jb
push
mov
mov
xchg
mov
sti
test
and
lods
sub
or
mov
test
mov
push
add
sub
rcrl
mov
mov
pusha
pop
fildl
mov
iret
lret
xor
pop
push
jno
stos
js
and
adc
pop
add
cmp
subb
inc
pop
je
in
inc
adc
mov
test
movsb
dec
cmp
dec
clc
outsb
cmp
pop
lahf
fdivl
dec
sbb
mov
int3
mov
fistl
fst
dec
dec
push
cmp
mov
inc
mov
sbb
adc
push
add
stos
mov
xor
out
add
inc
mov
fcomip
das
add
push
push
adc
xor
in
xchg
push
push
jbe
mov
jnp
mov
xor
jno
or
fucomi
and
sarb
cmc
add
das
arpl
push
adc
add
mov
test
int3
jle
orl
test
dec
pop
mov
mov
cmc
or
fsubl
andl
loop
mov
cmp
pop
stos
or
in
lock
add
lret
pop
and
push
jbe
out
lret
cld
cmpsb
add
xchg
mov
dec
push
cmp
adc
rcl
shr
xchg
js
fwait
push
cmp
cwtl
adc
inc
cwtl
sti
fs
add
stc
addr16
or
adc
rclb
jo
mov
cmp
loope
into
ljmp
mov
fdivp
push
loop
movhps
aam
stos
xor
push
pop
and
add
mov
pop
scas
pop
adc
mov
aam
dec
inc
ret
cmp
out
movsb
xor
jbe
leave
xchg
rorb
fnstenv
and
iret
xor
push
xor
clc
std
call
inc
pop
jno
cmpsl
inc
mov
xor
mov
mov
leave
sbb
mov
jbe
adc
dec
lret
cmpsb
cli
adc
int
lods
jecxz
dec
jns
repz
loop
sarl
fstpt
stos
sbb
int
add
mov
in
dec
inc
mov
pusha
fsubrs
sub
test
lcall
mov
inc
add
inc
xor
or
clc
pop
outsl
xor
int3
loop
sub
mov
testl
nop
sub
or
push
pop
adc
push
or
inc
xchg
and
das
ret
punpckhbw
ljmp
pop
inc
cmp
mov
outsb
sub
imul
lea
push
xor
addr16
lahf
fdivrl
xchg
icebp
adc
xchg
push
dec
rcrl
aas
xchg
inc
xor
mulb
sub
pop
or
sbb
cli
adc
rclb
and
xchg
inc
mov
outsb
push
sti
sub
jle
loop
mov
sarb
data16
sbb
adc
jl
popa
leave
cmpsl
cmpsl
std
mov
lea
movsl
movsb
xor
sub
daa
inc
xchg
mov
cltd
jecxz
dec
adc
in
inc
ret
push
cli
adc
icebp
cmp
and
xchg
jmp
stc
enter
cmp
jnp
adc
sti
pop
mov
inc
add
fsubrs
scas
dec
in
daa
fstps
or
mov
pop
pop
subl
enter
cmpsl
inc
xchg
mov
cmp
add
int3
or
fidivs
jmp
iret
cld
xchg
pop
aas
mov
or
jecxz
mulps
xchg
fs
mov
rolb
adc
clc
push
aas
in
lcall
mov
push
sahf
xchg
xchg
dec
sbb
mov
adc
mov
daa
pop
ficoms
jbe
mov
popa
fcmovnbe
test
xor
mov
adc
dec
sub
inc
jb
xchg
mov
sbb
loopne
aad
test
mov
sbb
iret
imul
mov
pop
aad
and
sarl
push
loope
push
dec
sbb
cmc
js
arpl
je
enter
xchg
sbb
dec
cmp
lcall
inc
js
dec
outsl
and
or
movnti
insl
sahf
push
out
fcmovnu
mov
xor
push
add
jp
xchg
test
es
dec
test
jge
cli
insb
fisubl
and
and
push
pop
inc
inc
inc
ljmp
mov
aas
aas
fildl
fistl
das
jg
lcall
lahf
fwait
aad
mov
loope
jno
int
mov
inc
inc
fcoml
js
ret
rclb
nop
pop
out
loop
fcompp
notl
fsubr
arpl
daa
add
mov
pop
lods
ret
daa
cmpb
cmc
ljmp
les
xor
test
cltd
xor
ds
xor
sbb
fwait
addr16
dec
popf
pusha
call
sbb
mov
adcb
add
pusha
movsl
cmp
cmp
pop
xor
sbb
cld
mov
sub
dec
nop
sbb
xchg
sub
repz
sub
shlb
je
fcmovb
sbb
xchg
test
imul
or
sbb
hlt
mov
cld
lret
fisttpl
xchg
cld
lods
xor
or
mov
test
ss
int
inc
pusha
mov
add
out
lcallw
shll
das
dec
jmp
sub
and
cwtl
and
mov
imull
push
push
add
cmc
hlt
lret
out
cmp
pop
outsl
outsb
js
call
cwtl
out
ret
paddusb
push
clc
js
testb
lods
dec
addr16
inc
std
cmc
jge
out
jmp
mov
mov
pushf
inc
inc
out
inc
aad
cs
stos
out
and
adc
sar
dec
mov
add
cli
and
sbb
test
pop
inc
push
sbb
mov
mov
addr16
adc
inc
jl
jo
jne
pop
push
rolb
out
dec
imul
test
xchg
mov
sti
pop
mov
rol
lods
inc
stc
mov
std
pop
repz
mov
loop
inc
mov
outsl
mov
and
xchg
add
xor
orb
lods
xchg
and
call
fisubrl
ja
hlt
movsl
push
mov
sbb
inc
xchg
testb
enter
cmp
jp
lods
movsl
int
in
sub
adc
mov
pop
mov
fdivrs
dec
and
sbb
sbb
mov
pop
inc
cltd
ds
push
lods
and
mov
push
adc
push
dec
iret
push
iret
js
lods
addr16
fcmovnb
rclb
inc
test
mov
mov
into
gs
stc
aam
out
aad
dec
dec
or
mov
lret
mov
repnz
adc
push
sub
in
mov
popf
test
push
jmp
pop
in
lret
mov
pop
andb
push
test
jmp
testb
sbbl
js
mov
scas
sbb
push
xchg
inc
sub
pop
dec
sbb
mov
loopne
xorb
cmpsb
arpl
fadds
clc
lods
shll
test
and
mov
fisttpl
nop
and
jb
sub
lret
shl
push
js
adcb
mov
imul
jbe
loop
inc
adc
in
ja
mov
call
mov
or
rep
outsb
push
or
mov
lret
nop
loope
lods
xor
pop
scas
or
test
add
xor
xor
lret
xchg
mov
lock
sbbl
jb
cs
hlt
push
loop
loope
pop
fwait
cwtl
pop
leave
lahf
or
xor
inc
cmp
adc
jecxz
lahf
xchg
lea
jns
sub
pop
pop
mov
pop
push
sub
fcmovne
les
sub
std
pop
xchg
mov
loopne
mov
sub
mov
push
mov
sub
arpl
outsl
jle
call
inc
stc
xor
mov
cmp
jne
add
push
or
nop
push
dec
aas
jnp
pop
hlt
mov
insl
testl
cmp
push
and
pop
or
adc
push
jmp
lea
mov
jge
out
fisubl
mov
ljmp
sub
or
jne
pop
add
out
push
xchg
fstps
or
popa
push
ds
fldl
incb
ficoms
pop
mov
lock
add
arpl
xor
jne
shlb
popa
int3
popf
xlat
sub
push
in
inc
lea
sbb
stos
sbb
mov
push
faddl
cmpsl
jle
sar
iret
sub
out
jecxz
lahf
lret
sar
jo
pop
adc
dec
ror
popf
and
inc
les
ret
adcl
sub
xchg
xor
sbb
lods
mov
sub
loopne
std
inc
ds
mov
and
sarb
mov
clc
push
pop
jg
push
sbb
std
nop
loope
push
sub
loop
mov
sub
sar
inc
cmpl
repnz
push
fsubs
mov
aaa
lods
dec
test
xor
add
cmp
movsl
imul
aaa
mov
lods
js
notb
dec
bound
out
inc
das
add
dec
xchg
pop
mov
loope
ds
jecxz
adc
push
outsb
pop
cltd
pop
cmp
stos
fwait
inc
pushf
cs
out
imul
mov
test
sbb
mov
test
add
in
pop
int
add
aad
add
in
ja
xchg
jo
ja
add
loop
xchg
outsb
dec
xchg
cmp
jo
test
pop
push
jp
add
cmp
mov
mov
lods
jp
mov
mov
mov
dec
dec
jo
jno
inc
push
nop
jb
cld
or
icebp
sub
loopne
stos
lret
push
loop
or
fwait
mov
xchg
add
or
sbb
or
subb
push
aas
jecxz
mov
in
xchg
add
sbb
add
xchg
cmp
sbb
in
out
xchg
mov
loop
scas
ja
dec
and
in
pop
out
mov
push
insl
cmp
xchg
jmp
jg
push
pusha
test
xchg
xor
mov
sti
xchg
scas
sbb
xchg
dec
cs
push
cmpb
jle
cmc
jae
or
and
sub
je
bound
xor
pop
repnz
in
push
add
mov
mov
and
lret
xchg
sub
mov
out
sub
mov
insl
pusha
data16
mov
sbb
mov
inc
sti
mov
fdiv
negl
jmp
push
frstor
xor
cmp
aad
jne
pop
arpl
pop
fldt
enter
adc
fdivl
test
mov
jno
pop
inc
dec
cmpsb
xchg
pushf
and
add
js
lods
gs
out
ret
inc
dec
push
inc
inc
push
js
mov
je
sahf
lcall
jecxz
jo
stc
aam
push
in
cmp
jecxz
cmp
sub
scas
push
das
inc
pop
test
into
or
sub
xchg
test
pop
std
and
data16
mov
test
xchg
lcall
add
insb
ss
shlb
cld
aaa
out
dec
popa
gs
stos
jge
cmp
mov
pop
mov
inc
xchg
stc
mov
addr16
pop
cmc
adc
sbb
mov
add
mov
mov
mov
push
arpl
push
lock
sbb
dec
jns
out
in
mov
ljmp
in
xchg
shlb
pop
xchg
pop
cli
popf
shl
das
adc
ds
mov
xlat
add
stos
call
sub
outsl
fadd
rol
insl
insl
jo
rcr
add
ljmp
dec
addl
mov
popf
mov
mov
xchg
mov
pop
fcmovnu
mov
xlat
xchg
mov
sbb
mov
pop
enter
lcall
push
mov
push
test
mov
cmp
setno
jle
shl
inc
jp
inc
cld
mov
push
cmc
push
lret
test
or
jmp
push
div
imul
and
xchg
sub
xlat
adc
pop
push
mov
ret
inc
daa
pop
enter
test
out
clc
bound
sbb
outsl
js
loope
shl
jne
icebp
cld
icebp
mov
jge
pop
les
arpl
xor
jecxz
mov
out
lret
rcrl
mov
test
lret
dec
jnp
mov
pop
push
popf
jl
mov
nop
jmp
ja
movsl
jle
not
aaa
sbb
subl
mov
inc
fwait
pop
enter
popf
test
jecxz
fisttpll
lock
std
leave
cmp
nop
xor
bound
test
push
int3
push
pop
mov
shrb
cmc
pop
push
cmp
cmp
movb
cli
pop
daa
pop
shlb
push
xlat
xor
sbb
adc
adc
test
daa
add
pusha
cmp
mov
push
sahf
xchg
dec
iret
mov
jle
mov
pushf
sahf
xor
popf
ss
lods
aaa
or
pop
dec
push
adc
in
push
mov
xchg
inc
inc
mov
cli
push
xchg
js
xor
cmp
jnp
cmp
xchg
ds
mov
adc
mov
and
inc
xchg
fwait
es
push
lcall
scas
popa
dec
mov
jmp
pop
cmp
or
or
cmpl
jl
xchg
lds
add
jge
mov
mov
mov
push
mov
daa
lcall
or
cmp
adc
lret
xor
stc
or
test
dec
jp
xor
inc
in
and
sti
loop
out
pop
add
in
ljmp
movsl
scas
pop
loop
dec
lahf
mov
fldenv
xchg
out
popf
insl
adcl
jo
xchg
rclb
sub
or
xor
mov
cmc
add
addb
rclb
fnstcw
int3
aad
mov
repz
add
sub
gs
and
rolb
mov
movsl
cli
aad
jnp
lods
out
je
cmpsb
adc
xchg
sbb
cld
ret
out
mov
test
cld
sub
bound
adc
xor
xlat
cwtl
nop
xor
jo
add
in
adc
mov
adc
cmp
mov
clc
pop
imul
call
mov
xor
jno
fldcw
shlb
adc
mov
push
out
xchg
test
sub
movsb
push
xchg
mov
mov
enter
ds
dec
jle
lret
aam
and
push
repnz
jb
aam
mov
imul
xor
xchg
loopne
cltd
ja
in
out
rcll
push
mov
xor
jnp
and
push
xchg
push
xchg
xor
inc
je
lcall
cmp
sub
jno
sub
fs
std
push
lods
sbb
les
mull
sar
xchg
das
inc
push
xor
xchg
cwtl
fcmovne
ljmp
icebp
popf
cmp
jo
cmp
sbb
mov
gs
les
jo
sbb
jns
fstl
sub
mov
jp
mov
mov
lret
push
mov
push
repz
test
sbbb
mov
das
or
xchg
push
aad
insb
jle
aas
xorl
add
pushf
clc
lods
popa
add
sahf
and
out
aaa
xor
jae
mov
inc
mov
mov
ficompl
icebp
mov
cmp
add
lock
shll
push
ret
lahf
sbb
dec
pop
in
movsl
push
adc
mov
xor
fistl
push
ret
jg
xchg
add
mov
fmull
stc
dec
inc
in
xor
outsb
mov
faddl
push
les
mov
sub
ljmp
adc
ljmp
mov
mov
lds
xchg
inc
xor
and
lock
xor
aas
xor
shl
loope
mov
adc
pop
ds
ja
push
pop
mov
fucomip
adc
fiadds
fsubr
notl
insl
xchg
xor
sub
push
inc
jnp
cmp
andb
loopne
add
inc
cld
adc
fwait
cmpsl
mov
adc
jg
or
and
enter
arpl
cld
jp
cmp
jge
sub
cmc
jns
push
add
cmp
add
imul
imul
out
pop
inc
in
mov
nop
inc
stc
jp
inc
insl
sbb
sbbl
adc
add
mov
xchg
jmp
hlt
add
orl
sbb
adc
je
push
ret
dec
pop
call
rorl
mov
mov
and
push
pushf
jo
pusha
mov
call
xchg
mov
push
std
dec
ljmp
rol
mov
add
pop
mov
jmp
test
mov
dec
dec
sub
dec
insb
xor
xchg
into
inc
repz
dec
mov
arpl
or
jle
les
lret
movsl
prefetchnta
or
xchg
xor
pop
pop
mov
pop
sub
enter
clc
jmp
add
jp
lods
scas
adc
std
roll
xor
stc
scas
jle
jecxz
mov
stos
pop
push
inc
mov
inc
inc
cmp
jmp
in
mov
repz
aam
inc
and
ret
sbb
repz
jo
pushl
out
lods
adc
dec
xor
jne
dec
pop
cwtl
sub
mov
clc
stos
xchg
mov
xchg
jbe
lods
mov
repz
in
fcoml
clc
pop
test
cwtl
dec
dec
inc
pop
sbb
aad
dec
mov
cld
and
cli
push
leave
loope
mov
xchg
arpl
outsb
mov
int
mov
arpl
mov
xchg
pop
fdivrs
mov
stos
lock
jge
orps
jecxz
movsb
inc
xor
adc
ljmp
cs
xor
mov
and
scas
clc
mov
push
adc
jb
and
clts
into
add
fcoms
xchg
mov
pop
dec
pop
ficoms
mov
das
repnz
aam
arpl
loop
mov
movsl
imull
aas
mov
add
adc
sbb
mov
arpl
stos
cmp
outsb
mov
lahf
and
aas
jno
xor
xchg
push
mov
bound
cwtl
enter
xorb
mov
dec
sub
in
or
arpl
in
sbb
fidivl
xor
shll
fadds
dec
or
mov
mov
dec
mov
daa
adc
dec
jmp
sbb
pop
les
sub
mov
aam
fwait
jg
push
sub
sub
aaa
subl
inc
stc
cmp
ficoml
sahf
in
dec
loopne
adc
xchg
ffreep
add
push
or
mov
xchg
push
lods
cs
ja
fstps
addb
add
pop
fdivs
shl
cli
std
add
icebp
dec
fidivrs
dec
mov
pop
and
cmp
lods
leave
cmp
push
xor
dec
jg
popa
jmp
cmp
push
xor
test
adc
push
jnp
fcompl
xchg
xorl
jge
sub
adc
or
mov
mov
int
hlt
jns
fcoms
mov
adc
mov
inc
orl
xorl
mov
in
xchg
lods
mov
pop
mov
cmp
dec
mov
scas
cs
pop
push
xchg
sbb
cmc
cmc
xchg
xchg
leave
adc
add
xor
cltd
or
dec
out
mov
sti
push
leave
sbb
int
movsl
dec
vandnpd
addr16
ss
inc
fucomi
xor
add
sub
dec
into
adc
enter
push
lock
imul
push
pop
mov
or
hlt
cwtl
loope
lcall
dec
fdivrl
pushl
and
jl
call
mov
mov
inc
test
xchg
sub
sti
and
lret
add
int3
icebp
in
pop
push
pushf
jmp
pop
and
mov
cmpsb
dec
lock
jge
mov
pop
pop
pusha
add
push
sbb
mov
mov
incb
int
notb
xchg
push
pop
ficoml
xlat
ss
insl
mov
int3
dec
les
sarl
xchg
push
shl
jmp
cmpsl
pushf
add
sahf
ljmp
popf
jns
fcmove
das
and
sub
fxam
pop
sbb
and
arpl
aam
mov
inc
imul
repnz
sub
inc
cmc
inc
and
fs
pusha
frstor
jno
mov
pop
push
test
leave
insl
repnz
cli
add
push
push
clc
test
jae
arpl
test
ja
ss
push
dec
mov
inc
sbb
xor
mov
fldcw
shl
gs
cmp
pop
lods
jg
imul
rcrb
mov
dec
add
or
data16
cmp
mov
arpl
cmp
pop
jae
jecxz
cld
inc
je
inc
adc
ja
mov
jecxz
outsl
sbb
aas
cli
inc
stos
add
ret
inc
std
cmpsl
nop
pop
dec
cmp
mov
dec
sti
dec
sbb
pop
clc
inc
pop
sbb
push
dec
push
rclb
addr16
sbb
mov
int
xchg
push
or
cmp
jae
xchg
mov
mov
sbb
lea
push
xor
bnd
mov
xor
movhps
mov
add
inc
icebp
cmpl
jl
mov
fdivrs
daa
and
mov
popf
negl
orb
and
arpl
xor
jmp
into
movsl
int3
and
xchg
mov
int3
hlt
outsl
and
lcall
loope
inc
sub
adc
shll
stc
lret
inc
mulb
movsb
cltd
leave
sti
dec
mov
lds
push
adc
fld
push
out
inc
pop
pop
sub
and
sahf
loopne
cmp
jmp
sbb
dec
arpl
or
pop
inc
push
or
xchg
xchg
ret
add
inc
outsb
sub
xchg
xchg
pop
cmp
cwtl
and
jp
lock
loop
pusha
pop
and
adc
xlat
xor
mov
enter
add
in
mov
mov
push
cld
jno
and
in
daa
and
out
pushf
mov
insb
fsubrp
and
lds
xchg
cmpsl
loope
push
in
mov
adc
and
aad
xor
fbstp
test
shl
jno
cmp
sbb
push
arpl
inc
andl
imul
inc
xchg
jae
push
mov
push
data16
jle
add
inc
mov
xchg
aam
jmp
adc
jae
sub
enter
push
inc
xchg
sbb
push
jl
jg
xchg
mov
mov
adc
divb
imul
jo
jo
sub
and
out
cmp
xchg
test
rol
adc
scas
std
sub
mov
lret
xor
add
in
incb
inc
lret
outsl
shlb
scas
pusha
inc
jle
adc
push
sarb
in
rol
popf
sarl
mov
mov
cld
fdivs
and
push
fsubr
shrl
call
gs
es
cmp
gs
cltd
xor
movsl
cltd
xor
leave
jbe
mov
pop
cmp
add
mov
popa
jle
repz
mov
int3
popf
fnsave
lods
jge
test
dec
in
stc
in
lcall
jnp
bound
mov
test
mov
xchg
xchg
sub
inc
mov
js
outsl
and
testb
je
add
xchg
aad
jae
xor
pop
ret
into
out
in
and
pop
scas
js
lcall
jmp
add
clc
and
jg
shrb
mov
xchg
pop
rcrl
out
shrb
dec
sub
lahf
xor
and
imul
inc
xor
sub
shlb
xlat
or
outsl
arpl
dec
dec
lcall
lret
mov
push
add
xchg
pop
std
inc
shrl
mov
xchg
pop
cmpsb
loopne
roll
je
insb
hlt
cld
cld
push
into
push
mov
in
mov
jns
dec
daa
cmp
mov
jmp
pop
aaa
out
fs
pop
fimull
call
int
ss
out
int
mov
xor
int
pop
movsl
outsl
into
das
jg
sti
imul
fstp
push
mov
shll
pop
add
lock
lods
ljmp
xor
xor
sbb
and
int
adc
sti
fpatan
loop
test
mov
push
xchg
aad
mov
xchg
insl
test
mov
inc
jb
rorl
test
mov
push
cld
dec
or
lock
pusha
jle
clc
pusha
hlt
push
jle
wrmsr
push
jl
hlt
dec
jmp
frstor
shll
cmp
enter
fcompl
nop
and
cmp
inc
and
sbb
nop
xchg
jge
stos
adc
movsb
cmp
in
mov
fidivl
xchg
adc
popf
pop
mov
test
inc
adc
mov
loopne
xchg
jne
sub
in
dec
enter
jnp
add
out
aaa
add
fwait
clc
outsl
adc
mov
mov
add
movq
inc
pop
bound
leave
popf
test
and
fwait
les
inc
in
adc
ja
and
xchg
or
mov
icebp
rcrb
and
mov
iret
adc
mov
inc
test
jmp
in
les
fstpl
xor
and
add
mov
adc
mulb
cmp
leave
test
mov
sbb
pop
les
sbb
dec
push
sub
add
push
fbstp
sub
jl
test
xor
cmp
in
xchg
dec
bound
sarb
and
and
out
jo
mov
mov
or
mov
rclb
fs
test
mov
insl
and
mov
cmp
jbe
push
or
adcl
daa
push
into
popa
nop
mov
pop
outsl
nop
aam
es
insb
xchg
lods
popa
popf
outsl
and
iret
xchg
outsb
pushf
fsubrs
pop
sarb
and
pop
push
cld
ljmp
cltd
ret
mov
push
dec
mov
cmp
mov
subl
mov
mov
push
cmp
shl
ja
addl
popf
in
xchg
popf
out
pop
daa
xchg
sahf
int
pop
iret
les
cmp
push
pop
les
sub
inc
inc
inc
sbb
push
and
cld
mov
int
pop
mov
dec
pop
outsb
sbb
ret
testb
repz
dec
xchg
jl
int
jae
or
cli
xor
mov
stos
xor
ret
mov
gs
test
rcll
repz
aad
dec
test
pop
faddl
clc
lea
js
adc
add
fs
test
push
push
cmp
inc
lcall
or
jae
sub
pop
jae
mov
mov
arpl
sub
inc
inc
int3
mov
scas
lret
and
lcall
push
mov
cmp
xchg
bnd
adc
pop
insb
nop
in
loope
pushf
dec
push
sarl
dec
cmp
and
std
jmp
shrl
sub
sub
cmp
bound
daa
xchg
cwtl
flds
jp
test
mov
pop
mov
in
lret
pop
mov
mov
xchg
fisubs
repnz
mov
push
fucom
add
fistps
xchg
push
ds
ficompl
add
mov
aam
insl
push
rclb
or
shll
call
mov
mov
fisubl
jne,pn
mov
or
out
add
push
push
lahf
adc
stos
aas
hlt
adc
and
sti
mov
adc
inc
inc
mov
pop
aam
jg
mov
rcll
pusha
fiadds
jp
ss
test
sub
jp
inc
fcmovb
leave
dec
movsb
rorl
out
xchg
push
dec
sub
loope
push
adc
hlt
xchg
pop
dec
sbb
and
jmp
mov
sub
out
sub
inc
push
push
or
test
pop
fwait
sarb
sbbb
mov
test
inc
or
inc
data16
bound
out
inc
lock
xchg
xchg
adc
dec
xchg
xchg
sub
imul
push
xor
mov
mov
add
repz
test
out
iret
fldl
and
loop
xlat
jae
xchg
xchg
leave
dec
ret
repz
dec
mov
stos
cmp
fidivrs
lods
push
popf
movsb
sbb
mov
mov
pusha
cwtl
int3
out
rorb
sub
mov
mov
call
mov
pop
nop
data16
and
mov
push
cmpsl
xlat
js
push
push
adc
int
jecxz
mov
test
xor
sub
rorl
mov
fstpl
pop
cs
lods
lods
dec
in
insl
sbb
inc
mov
aam
jbe
mov
jmp
pop
or
adc
cmp
push
mov
fsubrl
xorl
jl
add
mov
cld
xlat
mov
or
ljmp
and
push
sbb
or
dec
inc
or
mov
int
xchg
xchg
std
jmp
mov
jb
pop
add
jo
push
adc
xchg
pop
ljmp
lret
pusha
neg
sub
inc
js
dec
lahf
xlat
cmp
push
out
mov
ja
cmp
mov
popa
adc
mov
xchg
out
stc
add
sub
mov
enter
adc
cmp
fnstenv
ss
in
lcall
loope
push
js
adc
sbb
add
loop
popa
dec
repz
or
in
xchg
in
mull
dec
push
lock
mov
loopne
arpl
mov
in
and
xor
pop
adc
and
fcomps
push
and
mov
popl
xchg
cmp
jo
push
add
rcll
outsl
dec
cmp
add
mov
popa
out
insl
cli
and
ljmp
add
mov
mov
mov
mov
xlat
push
jne
jecxz
jns
insb
in
or
in
faddp
sub
adc
mov
push
adc
cltd
mov
push
push
clc
push
sti
sbb
mov
add
popf
mov
mov
xchg
mov
insl
or
cli
sbb
xor
xor
lods
out
clc
stc
mov
jl
sbb
add
idivb
add
cld
mov
sbb
popf
sbb
fisttps
hlt
aas
jb,pt
test
pusha
push
dec
adc
mov
mov
mov
xor
divl
mov
fcmovnu
add
insl
pop
testl
sahf
rclb
enter
xchg
in
int3
imul
push
pop
inc
push
xor
push
jmp
adc
es
push
push
pop
cmp
pusha
sub
outsb
add
sbb
lret
fldl
cmp
sbb
fsubr
fwait
scas
rorl
cmpsl
aad
shrl
adc
xchg
pushl
fwait
jns
dec
cmpsl
rcrl
mov
push
xchg
pop
add
insl
ja
ljmp
xor
pop
cli
loopne
or
dec
out
outsb
dec
cmp
push
pop
leave
pop
jg
out
popf
into
test
xchg
lahf
jns
je
mov
and
sub
pop
out
out
lahf
filds
or
in
cs
ret
imul
subps
and
jo
xchg
fdivs
adc
mov
cld
jno
and
int
jge
data16
jae
xor
mov
xor
test
das
inc
cmpb
mov
sti
mov
sti
pop
js
adc
mov
aaa
rolb
std
mov
rorl
xchg
out
mov
fimuls
mov
push
adc
fdivrs
lods
mov
jge
inc
stos
shrl
add
mov
pop
push
outsl
pop
roll
sbb
out
sub
fnsave
mov
fsubl
in
xchg
imul
cmp
or
mov
jbe
test
mov
aam
imulb
daa
cmp
mov
xor
or
and
pop
popf
pop
sub
sbb
mov
cmpsb
pop
add
test
adc
jle
and
and
mov
call
jb
jecxz
loopne
jge
mov
sbb
jbe
stos
jbe
loopne
scas
loope
xor
sub
das
pop
push
push
dec
or
pop
xor
mul
or
and
ret
jnp
in
xchg
push
and
xor
dec
sahf
add
push
jne
test
sarb
call
aas
xlat
or
jnp
insb
gs
jbe
adc
push
xlat
aam
jns
mov
dec
push
loope
pop
stc
mov
mov
test
je
lahf
and
dec
pop
mov
gs
addr16
add
je
jecxz
addr16
outsb
push
es
push
pop
dec
xor
imul
jmp
add
repnz
mov
pop
stc
int
lds
fists
add
loope
xor
cwtl
pop
cmp
xor
pop
fdivrs
or
cmpsb
aas
pop
cmp
mov
in
and
int3
jmp
jno
pop
mov
cltd
dec
push
jmp
add
les
das
push
aam
mov
mov
fwait
sub
outsl
shll
lods
shlb
lcall
out
cwtl
insb
xchg
mov
hlt
cmpsl
pop
aam
sub
popf
pusha
push
fisttpl
xlat
out
addb
movsl
xlat
pop
pop
and
cwtl
mov
mov
sbb
repz
dec
loopne
or
loop
std
sbb
addr16
push
adc
outsb
mov
mov
jns
rcr
bound
and
sub
push
sbb
insl
xchg
popa
or
popf
clc
inc
lret
jmp
mov
xchg
mov
mov
data16
push
rol
mov
pusha
or
inc
js
sub
add
adc
hlt
pop
ss
xor
in
mov
pop
jmp
movsb
subl
pusha
sbb
shl
push
mov
out
xor
stos
sub
sbb
out
cmpb
jo
das
aas
stos
adc
in
stos
cmp
or
ja
insl
fidivl
xor
xchg
fstpl
or
cltd
fdivl
push
cmp
mull
xor
mov
ficomps
inc
insl
mov
cmp
loopne
sub
insb
mov
je
inc
mov
xor
divl
xchg
stos
sbb
ss
mov
test
sbb
jne
std
or
or
pop
stos
out
jg
push
cld
fisttpl
push
jp
mov
shrb
out
cmp
cwtl
test
call
out
movsb
insb
and
mov
lock
out
jp
repz
or
xchg
xchg
or
jmp
sbb
movsl
fiadds
cmpsb
pop
test
call
insb
inc
inc
fsubs
stc
fwait
repz
push
jmp
ret
adc
add
sti
dec
xchg
jnp
cmc
dec
pop
or
test
ss
lock
xor
gs
fcmovne
sub
mov
cmpsb
loopne
dec
or
inc
and
push
out
sbb
cmp
xchg
sub
adc
mov
repz
and
jnp
pop
das
cmp
push
fists
lock
insb
jns
imul
fsub
cmp
jne
sub
push
push
lea
inc
sbb
lret
pop
jbe
push
in
ljmp
imul
pop
or
jmp
adc
xchg
pop
movsb
cmpb
push
es
push
rorb
scas
adc
pop
cmp
sub
fs
lahf
or
andl
jno
scas
shl
dec
fwait
cli
adc
xor
hlt
add
add
fisubrl
jp
leave
sub
jmp
ss
mov
repz
mov
mov
movsb
sub
mov
mov
cld
pop
arpl
ja
mov
fwait
cmp
cmpsl
or
cltd
xor
iret
lds
lock
cmp
aad
shl
daa
adc
inc
cmpsl
pop
mov
das
icebp
not
inc
dec
push
sub
mov
or
fisubrl
jnp
stos
inc
cs
out
sub
rcl
aad
lret
xchg
pusha
pusha
mov
jae
js
cwtl
sti
mov
jno
movb
xor
push
in
or
loopne
into
inc
sbb
pop
jo
and
push
shlb
int
cmpl
fstl
pop
stos
movsb
push
xchg
xor
daa
adc
clc
je
ret
imul
pop
sub
push
jnp
lcall
mov
xchg
stc
fisubrl
loop
lods
popf
es
and
inc
and
gs
shll
xchg
fstps
jns
cmp
ror
inc
inc
loopne
xor
or
pop
in
and
ljmp
leave
test
addl
xchg
xchg
repz
xor
jno
int
push
dec
push
adcl
jle
das
dec
daa
push
movsb
jmp
pop
pushl
add
imul
adc
or
sub
cld
lahf
xchg
sahf
pop
fsubl
sbb
addr16
into
xchg
jl
jmp
repnz
inc
inc
jne
scas
push
push
fldt
or
aas
movsl
fwait
mov
rorb
add
data16
fs
js
cmp
pop
icebp
mov
lods
xchg
xlat
inc
push
mov
or
mov
cmp
stos
add
cmc
mov
cmp
sub
mov
jno
lret
jmp
push
xor
sti
cli
xor
or
insl
jns
out
fcmovb
insl
out
sbb
mov
jo
inc
dec
adc
cli
ret
shlb
pop
fldcw
out
scas
inc
addr16
cmp
into
push
loope
xchg
iret
push
sub
hlt
call
hlt
push
mov
lahf
outsl
shl
cltd
xor
inc
cmp
arpl
aaa
ja
adc
stc
pop
enter
int
pop
jge
ljmp
loopne
ss
xchg
pop
cmc
sbb
adc
gs
pop
adc
mov
div
dec
hlt
jmp
mov
out
push
incb
pop
xor
mov
cs
push
adc
pop
push
lock
arpl
push
cld
cmp
mov
dec
mov
jno
cmp
outsl
lea
sahf
fldcw
insb
ficoms
pop
sub
into
ret
clc
mov
gs
jmp
in
aaa
xchg
jnp
stc
or
pop
js
xlat
sub
in
mov
push
add
push
cld
test
lds
push
sub
sub
sub
xor
scas
sbb
repz
mov
and
add
dec
aam
cmpsl
pop
mov
add
call
fisttpll
mov
in
out
fistl
jbe
popf
pop
popa
mov
sub
test
bound
in
add
insl
sub
dec
cmp
adc
pop
mov
ret
enter
adc
enter
fisttps
inc
mov
lea
fdivs
cltd
and
ja
pop
sbb
sub
jmp
push
add
pop
cmpsl
fdiv
pusha
and
test
xchg
push
inc
sbb
decl
adc
cmp
push
data16
pop
repnz
mov
mov
and
cmp
jae
inc
bound
and
sbb
dec
std
cwtl
xor
inc
adc
pop
sub
add
mov
cmc
idivl
jnp
fcmovnbe
sub
mov
fimuls
dec
sub
std
dec
push
inc
lahf
sub
xchg
mov
add
add
xor
or
adc
repz
insl
sbb
lret
sbb
popa
mov
sub
movsb
mov
cmp
fsts
xor
add
mov
insl
stc
imul
add
data16
insb
push
inc
sbb
inc
mov
das
sbbb
jle
orb
sbb
inc
jno
xchg
fists
xor
pop
mov
stos
aaa
iret
lret
mov
loop
daa
popa
dec
pop
fildl
lahf
mov
lea
push
jge
int
jmp
aaa
aam
xor
loopne
rcl
int3
jle
pop
adc
mov
out
popa
ljmp
dec
repz
test
lea
xor
pushf
outsl
adc
call
scas
sti
mov
dec
stc
mov
cmpsl
xchg
iret
jnp
mov
xchg
aad
sbb
enter
cld
jnp
repnz
cld
in
add
aaa
add
lea
add
movsb
imul
jmp
sub
mov
hlt
xor
pop
das
imul
sbb
test
or
insb
sbb
jb
mov
and
frstor
mov
jb
cmc
pop
lea
std
sub
aas
dec
fnsave
or
std
negb
mov
bnd
pop
or
outsb
jae
adc
scas
dec
lret
push
out
dec
inc
adc
adc
inc
test
xchg
daa
rcr
dec
movsl
clc
push
movl
fistpl
mov
notl
add
ss
sub
jae
adc
inc
stos
pop
sar
sub
sub
mov
xchg
aas
sub
pop
xchg
rcl
push
cmp
add
mov
and
dec
cmp
xor
jno
fcomi
repnz
adcl
pop
push
pop
movsl
or
cmp
cwtl
data16
in
stc
loop
insl
mov
sbb
adc
data16
and
test
fists
movsl
jns
cwtl
jae
fsubrl
outsb
insb
add
push
adcb
imul
or
insb
mov
pop
pop
cltd
add
xor
xchg
jle
cmp
xor
gs
push
repnz
and
movsb
mov
cmp
les
je
std
push
mov
mov
hlt
xchg
xlat
mov
xchg
inc
fs
sub
sub
cmc
pop
mov
xchg
push
jp
inc
pop
imul
fldt
fs
pop
sub
jae
push
adc
xor
mov
aam
add
mov
jecxz
icebp
inc
daa
inc
les
jnp
and
movl
sbb
je
fsub
dec
inc
and
sub
inc
ret
mov
adc
enter
jmp
sub
fists
jae
dec
iret
cmp
xor
out
andb
pop
popa
cmc
push
das
insl
mov
adc
cli
in
adc
sub
mov
rol
shrl
xchg
mov
push
mov
sar
mov
popa
fidivrs
add
push
xor
out
imul
lahf
sbb
sub
or
cmp
add
inc
pop
inc
mov
inc
and
enter
mov
mov
imul
gs
mov
or
inc
leave
mov
sbb
sub
mov
icebp
test
dec
pushf
aam
push
inc
or
dec
fmuls
aas
es
pop
mov
aam
xchg
jle
xchg
adc
or
outsb
aad
xchg
shll
pusha
mov
xor
push
sbb
mov
inc
nop
mov
adc
std
dec
xchg
test
sub
xchg
out
mov
std
pop
ds
in
sbb
cmpsl
insl
in
stc
inc
add
or
imul
pop
or
cld
sti
sub
ror
test
decl
jno
and
jle
add
dec
add
fidivrs
adc
ds
fcoms
and
xor
pop
adc
mov
rclb
mov
adc
mov
mov
clc
push
cltd
test
ffree
xor
lahf
xor
stc
pop
push
mov
negl
pop
jns
or
sbb
xchg
xor
sub
test
and
stos
shr
stc
push
hlt
aam
cmp
sub
sti
adcb
addr16
mov
mov
xchg
out
adc
cwtl
minps
push
sub
mov
clc
inc
adc
xor
in
and
mov
movsl
xchg
mov
push
jno
int
decb
xchg
inc
aad
addb
mov
pusha
fwait
addr16
pop
mov
outsb
inc
jnp
jge
jno
ja
enter
out
iret
mov
ss
jo
fprem
jns
jmp
push
aaa
jns
lea
cmp
jbe
mov
jmp
in
mov
js
scas
push
frstor
insl
lcall
outsl
and
jl
ret
push
and
adc
add
and
outsb
js
decb
mov
sub
and
fsubl
test
jno
inc
xor
pop
mov
imul
fbstp
cmpsb
pop
gs
xchg
jg
push
push
push
adc
shlb
inc
imulb
pop
fstps
mov
dec
mov
pusha
mov
jl
push
popa
push
or
shrl
inc
mov
push
jecxz
int
mov
pop
inc
inc
pop
jl
aaa
mov
std
rcll
scas
mov
add
repz
jo
push
movsl
testb
mov
ficoms
out
sbb
icebp
adc
cmp
ficoms
push
sarl
xchg
lahf
xlat
mov
mov
mov
mov
test
out
adc
mov
insl
or
lret
sub
and
loopne
xchg
sbb
pop
daa
adc
jo
mov
inc
push
pop
push
movsl
cmp
sahf
mov
ret
jp
stos
ficomps
fs
pcmpeqd
mov
sub
lret
ror
fwait
jno
enter
mov
cli
mov
mov
in
inc
out
pop
lds
lock
pop
insb
shlb
inc
sahf
and
xor
cwtl
jp
ficoml
push
or
scas
cltd
cld
dec
cmp
inc
lods
push
mov
dec
xor
sub
stc
ljmp
cmpsb
adc
pushf
loop
leave
adc
sub
lcall
sahf
pop
jno
or
nop
test
adc
nop
inc
jne
in
ds
mov
push
jp
js
mov
into
sub
aad
jp
movsl
cmp
cltd
into
addr16
push
imull
sub
fisubrs
scas
sahf
mov
out
int
in
xchg
fcmovnb
mov
add
and
xorl
aaa
fwait
into
dec
movsb
push
push
push
lret
cmp
jb
es
cmp
ret
shrl
and
pop
jg
in
push
pop
cli
cld
out
lcall
loope
sbb
fwait
add
jecxz
push
loop
mov
imul
cmpsb
push
imull
rclb
xor
mov
cmp
imul
add
addr16
shlb
adc
push
pop
outsl
cmp
push
sti
sub
inc
leave
and
sahf
testb
jg
scas
sub
aaa
sar
xor
lds
pop
sub
add
inc
inc
sub
inc
js
push
loopne
push
xchg
ljmp
push
lcall
xorl
divl
fdiv
mov
shrb
shr
push
movsl
imul
ja
enter
or
xor
mov
lret
push
sub
fisttpll
out
adc
inc
dec
and
adc
iret
mov
cmp
dec
jb
and
dec
adc
loop
cwtl
movsl
push
hlt
pop
addr16
outsb
inc
stos
jecxz
push
mov
or
test
insl
je
or
lcall
rcr
pop
lret
mov
mov
out
and
push
loopne
jb
pop
cwtl
or
fldt
add
shll
mov
mov
or
pop
xchg
cmc
repnz
jge
fldt
leave
shlb
adc
pop
scas
clc
push
xorl
sbb
sar
pop
sahf
push
int3
pop
test
xor
int
ret
or
nop
enter
loop
stos
call
cmp
aas
xor
pusha
fdivrs
mov
push
dec
gs
fildll
sub
cli
ret
add
jnp
sbb
pop
das
adc
sbb
cmp
stc
sub
jae
das
int3
dec
adc
push
push
push
push
pop
pusha
jle
jbe
dec
and
or
add
mov
mov
add
jno
in
inc
mov
push
jge
inc
sti
fwait
pop
pop
cmp
pop
and
cmp
leave
cmp
sub
fnstcw
out
jae
jmp
sub
add
pusha
es
cwtl
lret
push
xchg
imul
fisubrl
fsubrp
adc
inc
andb
push
add
and
scas
into
mov
test
push
mov
in
xor
jno
popa
push
and
scas
clc
cltd
sahf
or
push
mov
es
xor
push
insl
popa
out
pushf
mov
arpl
sub
ffreep
cmpsl
mov
out
addr16
mov
or
push
addr16
je
sbb
inc
cmc
cmc
clc
inc
push
hlt
popf
add
or
mov
bound
sarb
push
xchg
dec
mov
mov
fcmovu
lret
lds
in
stc
outsb
loopne
es
cmpsl
and
scas
adc
or
mov
or
orb
jae
add
loopne
mov
stc
inc
xchg
xchg
and
sbb
insb
int
fmul
dec
adc
es
xchg
sbb
in
in
mov
jbe
stc
mov
pop
xchg
int
adc
adc
sarb
push
xchg
hlt
loopne
movsl
ret
into
scas
negb
cmp
xor
fisubrs
roll
mov
inc
test
fwait
pop
mov
mov
jo
daa
je
or
xchg
pushf
mov
jp
push
insb
test
inc
pop
xor
xor
jle
and
clc
mov
fwait
hlt
notb
jmp
jg
pop
push
pusha
mov
xchg
icebp
fsubrs
add
pop
shrl
mov
test
cmpsb
or
push
add
popf
in
inc
push
dec
jbe
jae
and
push
popl
ficoml
sub
mov
or
test
dec
jg
sub
lods
imul
stos
test
mov
xor
testb
jno
fs
mov
and
lret
cmp
addr16
mov
rcrl
mov
jo
xor
jnp
mov
cmp
in
jb
pop
popf
jno
jg
lock
gs
mov
dec
inc
in
jmp
mov
popf
add
mov
fcompl
fsub
dec
outsb
adc
outsl
sahf
cmp
aam
cwtl
loopne
jns
leave
movsb
addr16
add
xor
mov
cwtl
dec
cmp
sbb
mov
mov
add
xor
cltd
js
ret
pop
mov
aad
mov
sbb
in
or
fdiv
jle
in
pop
xor
dec
pop
xor
lods
cmpsb
pop
movsl
sti
sub
nop
out
imul
cmpsl
ret
xor
cmc
mov
cld
pop
stc
pop
scas
jae
shrb
pop
or
fildll
mov
push
aam
hlt
mov
mov
jp
test
xor
push
or
clc
sub
repnz
jp
cmpsb
in
in
ret
cltd
jge
xchg
adc
jo
jge
je
int3
cmp
push
push
xor
shlb
xchg
sahf
jnp
int
test
pop
add
in
out
lds
xorb
pop
pop
pop
lret
test
shlb
pop
jle
mov
fstl
inc
cmp
mov
not
cmc
stos
mov
movsl
or
cld
xchg
xchg
test
lcall
mov
xor
lcall
dec
or
cmpsl
or
shr
mov
imul
fdivs
int3
sub
mov
cwtl
in
or
pusha
dec
and
or
ljmp
jns
out
cmp
add
inc
stc
jmp
clc
or
cmp
sub
ds
andl
jo
popf
and
mov
aam
push
and
loop
xchg
pop
jmp
and
test
push
inc
xchg
mov
out
jecxz
cmp
pop
sub
test
iret
scas
push
or
sub
push
aad
inc
lahf
idivl
add
mov
lods
sbb
lods
addr16
lea
mov
mov
pop
lods
or
pop
mov
imul
scas
mov
out
inc
pop
cwtl
cwtl
inc
add
dec
loop
or
cmp
les
pop
std
pop
aad
loope
add
mov
adc
leave
adc
sti
mov
pop
sbb
test
jno
sti
pop
addr16
ds
loope
scas
imul
pop
shlb
mov
cmp
test
rcrb
mov
xor
xchg
sub
adc
pop
lods
inc
push
cwtl
push
and
out
std
lods
push
pop
or
stos
mov
mov
fisttpl
dec
jae
jmp
addr16
cmp
sub
mov
mov
mov
sbb
cld
mov
xchg
js
pop
push
or
xor
mov
jg
or
bnd
in
xchg
mov
in
pop
adc
mov
sub
cmp
cld
pop
cmc
xchg
dec
push
jbe
cmp
mov
pop
fs
push
stos
jae
sbb
xor
sbb
sub
add
sbb
adc
leave
sub
outsl
shl
inc
and
mov
adc
pop
test
adc
sub
push
cwtl
jb
push
bound
adcl
cmpsb
fnsetpm(287
add
mov
mov
push
repz
fnsave
in
fmul
jae
xor
repnz
adc
insb
cmc
mov
add
leave
out
loope
fisttpll
ds
nop
sarb
pop
mov
xchg
in
xchg
sub
adc
ljmp
fwait
jl
cmpsl
mov
adc
inc
jmp
cs
and
pandn
jnp
dec
mov
jns
pop
ret
mov
adc
mov
adc
jo
ds
pusha
bnd
inc
ja
ljmp
ret
inc
mov
out
mov
sbb
adc
mov
mov
mov
out
push
fdivrs
sbb
test
lea
xchg
mov
das
rcrb
mov
jg
jg
fsubrp
test
sub
inc
xor
out
jo
sub
xchg
daa
das
jns
jns
data16
dec
fwait
imul
test
addl
dec
pop
jne
ja
inc
bound
xor
ret
popa
clc
xchg
jmp
sub
mov
mov
hlt
shrb
jl
inc
pushf
cmc
xchg
or
jecxz
mov
adc
push
or
inc
sbb
cmp
popa
pop
mov
lods
add
sub
dec
orb
mov
and
lock
shlb
dec
aas
fs
arpl
lods
cmpsl
add
fbstp
xchg
addb
jo
mov
mov
or
add
shlb
cmpxchg
in
push
movsl
pop
into
es
insb
orb
in
ja
jecxz
mov
mov
sub
daa
arpl
cltd
cwtl
cld
adc
sub
mov
xchg
sbb
jne
in
or
mov
roll
fistpll
lahf
cld
inc
inc
lock
fiaddl
out
sar
fcmovu
shlb
out
jne
dec
pop
lock
mov
bnd
ds
adc
shll
sub
fldcw
roll
testb
ss
jmp
mov
push
mov
fidivl
push
pusha
pop
dec
xor
push
sub
dec
scas
jge
add
imul
mov
push
in
out
cmp
scas
pop
rcll
jle
dec
shlb
push
orl
ret
hlt
pop
scas
mov
shrl
out
pusha
push
dec
out
inc
sbb
jp
mov
shrb
mov
stc
lcall
popa
mov
push
js
test
xchg
sub
sbb
jle
jno
lds
into
dec
rolb
xor
mov
add
ret
cltd
movsl
ficomps
add
test
insb
inc
sarl
jno
out
or
hlt
cmp
in
sub
aad
imul
mov
cmp
rcrl
xchg
jg
mov
cmp
cltd
inc
jo
int
sti
adc
dec
data16
and
add
xchg
jae
aad
jmp
in
sbbb
jge
push
pop
jmp
or
imul
out
sub
mov
mov
jmp
dec
cwtl
lea
adc
or
addr16
rorb
test
mov
pop
call
sub
xchg
cmpsb
fcos
fs
loope
adc
cmp
lock
dec
and
sbb
xor
loope
outsl
les
inc
stos
repz
bnd
rcl
sub
shlb
cld
repz
and
inc
pop
sbb
xor
hlt
mov
dec
jecxz
and
dec
push
insb
or
xor
xchg
ds
fsubp
sahf
fcompl
fdivrl
ror
mov
sub
jg
mov
aas
fs
inc
jbe
xchg
fwait
or
or
imul
lock
mov
mov
add
mov
rclb
add
sti
repz
rorl
insl
push
mov
pusha
shrl
sbb
lock
ret
push
push
dec
stos
and
xchg
sbb
jecxz
add
mov
jg
sub
aaa
mov
imul
jo
sbb
int
loope
insl
fs
add
leave
xchg
mov
movsb
orl
mov
fs
clc
ja
bound
arpl
or
nop
std
imul
adc
imul
gs
xor
test
pop
jnp
sub
fisubrs
sub
jns
pop
xchg
fwait
mov
fsubrp
mov
test
jnp
pop
and
popa
loope
pop
dec
mov
scas
lds
icebp
or
inc
jb
cmp
rorl
mov
and
or
addr16
dec
mov
dec
nop
and
mov
and
hlt
ja
jo
outsb
test
mov
enter
and
cmp
popa
sbb
add
push
pop
xor
push
fcomi
mov
fwait
mov
add
cmp
repz
pop
pushf
rcrb
cmp
aaa
mov
int3
xchg
xchg
je
push
nop
xchg
jmp
subl
mov
mov
mov
inc
sub
out
sub
and
mov
push
sub
adc
ret
sbb
fs
repz
and
adc
pushl
arpl
mov
adc
andb
out
orb
cmp
dec
adc
movb
sbb
mov
mov
out
arpl
cmp
push
ret
xchg
fs
repnz
dec
inc
fmull
inc
lock
pusha
stos
scas
mov
mov
andl
jno
stc
in
jno
out
cwtl
fisubrl
popf
out
fisttpll
repnz
pop
sti
fwait
aaa
imul
icebp
xor
xor
imul
adc
xor
lds
rcll
out
xor
rolb
ja
xchg
je
add
pop
mov
mov
mov
ret
and
test
cs
xor
mov
testl
fs
jno
mov
dec
std
push
enter
dec
pop
shlb
shl
or
jp
scas
or
movsb
je
popf
dec
insb
push
aas
sbb
mov
sub
lcall
bound
xchg
aam
sub
dec
mov
pop
mov
sbb
ret
scas
sbb
shlb
in
sub
pop
rolb
lret
lock
jmp
cmp
enter
push
lret
rorl
repnz
scas
push
lret
leave
adc
pushf
fwait
rorl
in
pop
mov
jbe
mov
mov
out
pop
dec
mov
shrb
js
fsts
enter
mov
imul
mov
test
cmp
jl
cmc
inc
repnz
mov
add
ljmp
xor
push
pop
adc
test
test
push
inc
test
sbb
scas
pop
inc
mov
dec
fwait
mov
sbbb
jbe
mov
fucomip
sub
push
lods
cmp
sbb
daa
inc
in
lds
push
adc
movsb
lods
inc
or
and
jecxz
push
add
xchg
add
fs
test
pop
test
cmp
cmp
and
xor
rclb
in
mov
stc
sbb
mov
sarb
or
enter
jnp
cmc
xchg
xchg
xchg
adcl
mov
mov
push
adc
sub
les
adc
and
mov
pop
repz
mov
lods
add
or
mov
push
fdivrs
add
sub
sbb
mov
adc
orb
stos
or
and
fwait
scas
mov
adc
xor
pop
fildll
inc
andb
test
mov
shll
xor
mov
repnz
mov
mov
jle
lcall
sbb
daa
inc
xlat
pop
sub
inc
js
mov
in
xchg
pop
div
scas
inc
enter
sub
dec
fists
insl
out
or
cmpsl
sarb
out
test
add
dec
stos
and
fptan
mov
mov
outsb
adc
stos
int3
pop
add
mov
jnp
orb
and
jo
iret
cmpsb
pop
or
mov
insl
into
inc
pusha
cmpsb
cmp
insl
and
xchg
aaa
dec
or
and
jnp
inc
sbb
pop
lods
cwtl
icebp
jecxz
pop
adc
pop
rcl
lret
mov
insb
push
add
fstpt
fcoms
ja
push
and
out
fstps
pop
and
cmpb
sub
push
jg
jnp
pushf
jge
into
fmull
sbb
int
add
adc
xorb
or
cmp
clc
out
xchg
pop
roll
xor
inc
jecxz
or
out
nop
lods
and
lock
sbbl
sub
sub
or
cld
imul
iret
xchg
pushf
pop
sbb
xchg
aad
jne
xchg
imul
mov
jmp
mov
shlb
cmc
hlt
sbb
shll
fs
dec
pop
in
or
jp
sub
and
xchg
aas
cltd
das
xlat
clc
addr16
inc
jmp
cmp
fstps
fdivl
fiadds
pop
lds
dec
outsb
outsb
cmp
or
inc
lret
ret
rclb
mov
aas
sahf
lcall
leave
inc
out
fdivl
call
fadds
mov
inc
out
fwait
xchg
shll
xchg
adc
sbb
rcll
push
jbe
jmp
push
add
stc
push
ljmp
push
jle
jns
scas
in
pop
icebp
jmp
cmpsb
fisubrs
sub
das
mov
pop
dec
jecxz
shrb
sti
lock
pop
mul
pop
gs
pop
mov
pop
add
mov
jmp
cmc
cmp
lret
or
lahf
xchg
mulb
jecxz
cmp
jle
jnp
nop
pushf
in
mov
xchg
scas
and
ds
mov
jl
sub
sbb
jl
sbb
out
push
sub
push
and
out
js
mov
inc
sub
push
add
sti
jb
mov
iret
dec
cld
aas
inc
mov
xchg
mov
imul
dec
hlt
and
fdivl
or
push
iret
sub
xchg
mov
inc
sarb
rcrl
orl
xor
jns
scas
movsb
sarb
daa
jge
repz
lcall
xchg
in
inc
push
xor
push
scas
xchg
out
out
icebp
add
cs
cmp
insb
cmp
jp
outsb
push
adc
inc
aad
xchg
test
jbe
add
in
pop
js
sahf
jl
xchg
fisubrs
or
std
dec
shl
fcomip
sbb
xor
mov
inc
cmpsl
dec
lea
add
dec
movsb
pusha
je
add
xor
call
out
cmp
enter
jae
je
ds
mov
adc
push
jmp
mov
inc
mov
fidivrs
sarb
and
jle
scas
adc
out
jp
fwait
inc
lock
inc
adc
and
add
lret
loopne
popa
sub
test
cltd
sti
xchg
hlt
loope
dec
das
imul
inc
in
xchg
push
sub
cltd
enter
cld
stos
add
cmovle
or
xchg
sub
mov
loopne
enter
xchg
mov
repnz
inc
mov
push
cmp
mov
lret
mov
mov
dec
in
ds
inc
out
mov
mov
xor
jb
mov
icebp
ficoms
daa
adc
adc
xchg
add
loope
nop
rcl
scas
mov
out
fcom
daa
hlt
rcrl
pop
popf
loopne
imul
and
sub
faddp
fs
aaa
xchg
push
in
or
lds
push
pushf
mov
ja
dec
mov
mov
xlat
hlt
jecxz
cmp
hlt
cmp
inc
movsl
inc
out
loopne
or
pop
or
das
jmp
enter
scas
sub
xchg
std
sti
call
pushf
push
lods
or
jp
sbb
push
and
rcr
adc
mov
sti
mov
pop
fsubr
data16
push
mov
pop
inc
outsl
subb
xchg
jno
cmpsb
push
sub
mov
fisttpl
jb
push
mov
xor
js
insl
push
jbe
cmc
xor
data16
jp
scas
mov
sbb
mov
aad
pop
jmp
sbb
mov
pop
loope
loop
test
jge
ret
inc
xchg
cmp
or
cltd
dec
sub
sbb
dec
cmpsb
cltd
lahf
pusha
leave
decl
test
mov
xor
xchg
sbbl
rol
ss
lcall
std
lret
divb
sub
push
sbb
dec
and
loopne
mov
in
in
cmpsb
dec
push
inc
sarl
jb
jl
adcb
pop
in
push
enter
iret
sti
jl
adc
mov
cmpsb
clc
mov
xor
int3
test
cmc
mov
test
ret
cmp
pop
xchg
adc
and
pop
add
jmp
jne
into
cmp
xchg
jecxz
mov
and
test
pop
mov
mov
or
gs
inc
mov
pop
pop
test
outsb
insb
xor
stos
iret
cs
inc
xor
mov
inc
mov
fdivl
and
inc
dec
push
or
inc
es
arpl
inc
lcall
fucom
jno
lahf
das
add
mov
or
popf
repz
xchg
repnz
push
sarb
cmp
or
jo
lcall
cltd
popf
push
sbb
jle
add
lahf
out
negl
aam
xor
cmp
sarl
jne
imul
icebp
out
cmpsb
adc
repnz
ret
and
aam
cmpb
adc
into
sub
fsub
ja
jecxz
fsubp
cs
jns
cmp
dec
mov
inc
sub
jmp
add
jns
pop
adc
scas
gs
loope
icebp
pusha
fwait
ds
jle
xchg
fwait
sbb
jb
fisubrl
cmp
push
jno
inc
dec
pop
xor
dec
and
mov
or
cmp
xlat
xor
pop
pop
pop
pop
mov
out
insb
adc
lods
push
mov
sbb
and
cli
xor
mov
xchg
sbb
jo
xchg
lcall
int
push
cmp
pop
dec
mov
sbb
mov
in
scas
mov
cmp
popa
out
push
mov
fwait
adc
fadds
xor
dec
xor
mov
mov
stos
jl
ror
je
lret
in
lock
adc
cmpsb
mov
xchg
xor
sbb
pushf
and
push
stc
lods
jbe
sahf
lods
loope
xchg
lret
arpl
add
sbb
jae
ret
insl
std
jbe
insl
enter
pop
loop
cmp
es
mov
loope
mov
out
aaa
sbb
lds
xchg
adc
pop
imul
mov
movsb
hlt
push
pop
xor
mov
mov
inc
mov
icebp
shlb
leave
fists
iret
push
xor
push
movsl
int
loop
ss
lcall
das
aas
cmp
dec
cmpsb
decl
mov
nop
push
gs
hlt
fcomps
in
mov
pop
jp
mov
test
test
mov
fwait
cmp
movsb
in
xchg
test
mov
dec
push
lods
jb
cmp
shrl
cmp
dec
push
mov
jl
sbb
pushf
fninit
loop
mov
adcl
mov
push
mov
xchg
or
lds
scas
in
mov
mov
fstpt
dec
jb
aaa
orl
out
or
test
mov
movsl
mov
je
addb
sub
sub
push
lcall
add
fstpl
popl
int3
ljmp
je
xor
arpl
push
test
sub
lcall
cwtl
hlt
inc
pop
xchg
in
inc
fcmovnb
sbb
xchg
ss
sbb
sub
test
cmpsl
pop
iret
popa
xor
ss
cltd
nop
sbb
jno
scas
test
int
or
cmc
dec
xor
arpl
mov
aam
movsb
sbb
repz
loope
cmp
xchg
in
push
lret
inc
inc
bound
xchg
repnz
test
aad
cltd
ficoms
pop
inc
popf
push
xor
mov
leave
or
daa
push
and
fdivl
and
push
push
lea
jne
pop
jns,pt
and
cmp
cwtl
push
adc
jnp
xor
inc
inc
gs
repnz
movb
mov
xchg
gs
popa
pop
xchg
dec
loopne
xchg
mov
mov
outsl
in
or
pop
mov
sahf
adc
sbb
mov
adc
pusha
xchg
sub
pop
push
xor
sahf
mov
mov
shrb
fnstenv
jbe
insb
pop
mov
int3
jne
lret
dec
popf
ss
mov
mov
sub
sbb
inc
bound
xor
nop
xchg
leave
mov
mov
lret
repnz
mov
out
or
clc
test
xor
cmpsl
pop
decb
mov
xorl
fsts
frstor
movsb
xchg
mov
mov
imul
test
sub
icebp
call
movsl
popa
aaa
inc
mov
or
cmpsb
int
fcoms
and
test
push
or
xor
jbe
cmpsl
mov
sti
inc
jp
nop
insl
dec
push
test
gs
mov
push
les
out
movsl
test
xlat
test
pop
pop
psubd
push
stos
jle
std
xor
inc
sbb
call
and
mov
decl
push
jl
int
fnstenv
pop
sbb
popf
js
and
loopne
push
dec
insb
add
aad
in
mov
fadds
sahf
jae
cmpsl
sbb
pop
add
int
jl
fnsave
pop
push
outsl
jmp
xchg
jl
adc
clc
dec
mov
xchg
pop
push
daa
fcoms
mov
mov
repz
pop
mov
xchg
mov
push
inc
pop
mov
in
test
cmp
and
or
adc
mov
sub
testb
sbb
push
sbb
lret
sbb
in
sbb
enter
je
outsl
lret
cmp
add
and
mov
or
stos
mov
ljmp
cli
inc
sbb
das
push
scas
shl
test
push
mov
call
outsb
je
adc
xchg
push
mov
jge
mov
add
hlt
add
mov
divb
test
loopne
mov
push
add
xlat
outsb
pop
insl
in
mov
in
dec
and
inc
stos
stos
pop
ret
movsl
push
adc
xor
xor
xchg
jecxz
xchg
dec
jecxz
lds
out
adc
mov
imull
xchg
sub
mov
xchg
add
cmpsb
adc
cs
sub
xchg
xor
jge
fisttps
aas
add
mov
fimuls
push
roll
sub
mov
lahf
add
bound
inc
xchg
sarb
pop
jnp
shrl
scas
jns
or
ljmp
push
test
xchg
insb
push
mov
push
mov
fwait
and
sbb
shlb
call
pop
ds
orb
add
repz
ljmp
imul
es
call
sbb
mov
xchg
inc
xor
push
mov
and
and
pop
mov
jnp
xchg
adc
sahf
sbb
inc
add
mov
das
arpl
jge
and
add
cmpsb
mov
psrld
xor
mov
add
pop
gs
mov
mov
push
cltd
sahf
cmpsb
insl
sti
add
movsb
roll
shll
ficomps
rclb
scas
cmc
xor
and
insb
push
mov
idiv
lret
sbb
add
call
arpl
push
cmpsl
jns
idivl
jg
lods
and
callw
and
stos
jp
idivl
mov
or
stc
xchg
lea
mov
adc
insl
js
out
pop
mov
rcrb
fildl
add
mov
mov
lods
push
loopne
cld
es
inc
movsl
mov
in
jge
ja
subb
sub
dec
stos
ret
mov
add
in
or
cmp
adc
ss
fcoms
adc
sti
dec
jns
mov
pop
pop
mov
jno
xchg
enter
movsb
sub
es
mov
mov
push
jbe
jns
in
xchg
shll
rclb
add
sub
xchg
mov
sbb
jecxz
pop
ret
je
arpl
add
adc
push
outsb
shl
adc
mov
outsl
jbe
dec
inc
rorl
fwait
addr16
je
sbb
xchg
imul
aaa
pop
sarb
fsubp
sbb
mov
in
jp
cmp
and
sub
dec
imul
jb
insb
stc
adc
dec
testl
arpl
mov
cs
sbb
pop
push
leave
dec
fs
pop
and
jbe
ret
cmc
test
sbb
outsl
cmp
xor
popa
or
add
cmp
xor
sbb
pop
in
stos
out
sar
idivb
sbbb
pop
push
xlat
orl
sbb
xchg
mov
pop
lahf
subl
pop
out
pushf
jmp
sbb
add
int
insl
mov
mov
les
test
ret
inc
push
or
cmp
jg
dec
jg
and
push
jmp
idivl
pop
ljmp
imul
loop
fistpll
pop
add
jle
mul
dec
sub
cld
lock
divl
loop
mov
sub
testl
ds
orb
lahf
sbbl
mov
daa
nop
or
ffreep
cwtl
mov
pop
imul
sbb
rcrb
scas
add
sbb
out
into
rolb
adc
sub
call
add
push
mov
cmp
mov
ret
pop
cmp
jae
rcl
dec
xor
ss
scas
dec
mov
add
jae
mov
or
push
push
dec
and
lds
fwait
dec
fidivrl
mov
or
int3
in
out
or
mov
loopne
mov
cwtl
enter
dec
cmp
or
mov
adc
jge
or
lds
pusha
sub
mov
les
int
adc
jecxz
xchg
sbb
dec
addr16
sbb
das
xor
cmp
fidivrl
add
or
or
inc
aam
xor
xchg
push
or
arpl
das
mov
into
mov
cmp
xchg
add
das
sub
stc
fisttpl
ficompl
addr16
lret
shll
mov
inc
das
mov
shll
adc
sbb
popa
hlt
into
es
jecxz
sbb
xchg
mov
repz
or
cs
cwtl
fnsave
mov
ja,pn
fnsave
sahf
icebp
push
ds
rolb
in
add
add
ja
into
pusha
lods
push
sbbb
nop
push
pop
xor
incl
mov
test
incl
mov
pop
add
data16
ljmp
inc
ret
push
imul
mov
mov
cmpsl
int3
loop
mov
pop
cmpsl
clc
adc
jle
ffree
jno
inc
dec
or
add
add
hlt
test
xlat
pop
fdivrl
addr16
xchg
dec
sub
pop
stc
xchg
imulb
dec
mov
std
mov
subb
pop
aas
imull
add
leave
or
pop
jae
insl
cmp
aas
js
out
mov
fcoml
push
sbb
push
sbb
call
and
hlt
xor
movsl
jmp
cmp
ss
add
insb
add
push
xchg
imul
and
or
sbb
decb
movsb
pop
repz
ret
or
jecxz
stc
rcr
mov
cmpsl
fwait
shrb
lahf
cwtl
mov
mov
xor
sub
loop
add
pusha
sub
loop
cmpsl
push
mov
loope
sub
cli
xchg
inc
xchg
jbe
xchg
ljmp
sbb
sbb
jo
stos
insl
cmp
leave
mov
movhps
mov
mov
imul
mov
add
fimull
fidivrs
cmp
push
mov
fidivrl
ss
mov
enter
nop
fimull
and
mov
mov
es
fsubs
push
cwtl
testb
aas
lock
or
stos
int3
movsl
adc
stos
es
cmp
jmp
clc
sbb
nop
lcall
test
cmpsb
push
adc
loope
sti
mov
xor
xor
enter
scas
and
xchg
jl
loop
dec
in
popf
jmp
lds
popf
xchg
fsubs
push
imul
pop
ja
les
or
cmp
enter
in
xor
cmpb
test
push
xor
adc
cltd
stc
cmp
imul
inc
shl
fldcw
pop
stos
ret
push
enter
inc
rorl
out
es
sub
sub
cwtl
mov
xchg
stc
push
xlat
test
jnp
push
mov
shrl
inc
jecxz
pop
sub
test
mov
ret
cmp
scas
adc
mov
fmuls
repnz
xlat
pop
mov
pop
xor
aam
ds
mov
push
or
ret
addb
inc
xorb
cmpsl
enter
cltd
jbe
jmp
or
or
ret
or
pop
mov
jno
adc
sub
out
scas
dec
cmpb
push
and
inc
ret
repnz
fwait
xor
fbld
das
repnz
outsb
and
repnz
pop
jl
xchg
fs
in
dec
mov
divb
cmp
cmp
fs
or
inc
in
cmpsl
xchg
lods
loope
xor
call
test
in
fldl
mov
jle
mulb
xchg
fwait
pusha
push
jae
adc
jp
xor
xlat
xor
pusha
pop
cmp
adc
jmp
push
pusha
jnp
movsl
inc
nop
gs
jne
es
shlb
pop
out
xor
push
arpl
xor
pop
push
cmp
mov
mov
cmpsl
ljmp
jl
clc
adc
loopne
mov
outsl
in
xor
or
aam
jno
pop
add
mov
into
xchg
cwtl
ret
das
rorb
cwtl
mov
in
jno
dec
pop
call
adc
mov
inc
rorl
fbstp
outsl
push
outsb
dec
sub
xchg
sub
aaa
xor
adc
cld
fwait
je
popa
jp
cmp
mov
pop
incl
cwtl
xor
xchg
std
or
gs
dec
mov
test
rsm
pop
pop
or
fcmovnu
jmp
shl
mov
mov
stos
jae
repnz
sub
outsl
sub
test
mov
jecxz
jmp
sbb
orl
jle
push
push
iret
out
fcomi
loopne
out
xchg
lea
insl
insl
mov
push
add
fs
push
stos
idiv
pop
mov
pop
cmc
push
shr
enter
shlb
es
mov
rcll
add
xchg
hlt
add
lds
mov
sub
pop
enter
mov
sbb
xchg
or
push
mov
loop
xor
ljmp
aaa
cmp
mov
pushf
mov
lcall
mull
js
addr16
mov
xchg
test
inc
adc
out
ljmp
out
pusha
mov
hlt
ja
loopne
adc
rcll
jp
sbb
aaa
mov
mov
xchg
fsts
fmull
jge
add
subb
jge
aaa
pop
mov
push
push
in
xchg
sbbb
xor
repnz
add
andnps
rorl
dec
outsb
ret
stos
lds
int3
pusha
add
cmpsl
jno
gs
sbb
push
arpl
xchg
fidivrs
xor
sub
int3
dec
lods
rol
inc
cmpsb
and
fistps
nop
loopne
lahf
js
cmp
mov
xchg
mov
mov
sub
stos
fbld
dec
cli
xor
aaa
xchg
jo
jecxz
loopne
pop
stos
stos
adc
push
inc
aas
test
data16
adc
or
push
aad
cmp
out
mov
orb
lods
lcall
or
icebp
or
imul
inc
cmp
jne
xadd
xchg
pop
or
shlb
ds
insb
rcll
xchg
les
jno
jmp
mov
push
test
dec
shlb
or
popf
cs
test
sahf
mov
push
fists
popf
addr16
inc
mov
rcl
jns
pop
xchg
xor
icebp
arpl
in
sub
inc
xlat
jg
loope
jnp
sub
sub
dec
mov
inc
push
in
push
jno
fucomi
dec
pop
in
js
es
fs
dec
arpl
add
pop
into
jbe
cmpl
or
xor
imul
mov
aam
dec
add
push
daa
jae
ja
xor
jno
inc
sbb
mov
mov
in
or
out
inc
fsubs
jge
pusha
inc
rolb
std
sub
jnp
mov
sub
push
out
push
pop
adc
bound
cli
mov
adc
xor
in
mov
loope
sahf
stos
mov
in
lods
ja
std
push
jmp
hlt
xlat
xor
cmp
fs
inc
lahf
out
and
cmp
rcrl
mov
repz
xor
stos
aas
iret
push
lcall
ds
in
mov
mov
mov
andb
int3
jle
aam
mov
cmp
xchg
outsl
mov
dec
xchg
adc
movsl
mov
mov
add
int
cltd
dec
arpl
inc
jbe
out
repz
add
out
pop
stos
mov
out
lahf
stos
or
xchg
cli
loope
lea
xchg
push
adc
cs
divb
clc
sarb
rcll
mov
scas
jge
pop
lods
cli
jmp
dec
fldcw
jnp
mov
cmp
in
and
pop
cltd
jle
ljmp
pop
pop
out
pushf
shll
or
arpl
loopne
xchg
xchg
out
ror
repz
test
push
frstor
jns
mov
gs
bound
pop
pushf
and
push
inc
fsubl
add
push
sbb
je
cmp
mov
pop
test
mov
call
sbb
lret
xchg
decl
popf
jg
xchg
add
mov
ss
fldcw
enter
ja
aam
xchg
add
or
pop
in
jbe,pt
lea
dec
lea
xchg
push
xchg
adc
sub
insb
add
cwtl
ljmp
or
xchg
xlat
pop
int
dec
inc
into
xor
adc
jp
push
pop
adc
or
push
mov
pop
imul
dec
and
mov
jns
pusha
rclb
push
repz
push
cmp
incb
sar
push
lock
push
test
mov
mov
das
cs
pop
lret
adc
cmpl
jno
sbb
mov
lds
mov
fldenv
aaa
cmp
ret
bound
and
adcl
and
fcoms
adc
popf
lret
add
outsb
sahf
xor
popf
jmp
lret
and
or
gs
pop
andb
fisttps
xorb
add
push
cmp
inc
cmp
lret
jg
gs
imul
out
push
dec
sbb
and
push
dec
push
inc
fnstcw
out
adc
test
xor
xorl
outsl
pushf
add
xchg
add
cltd
jmp
lods
cmpsl
cmp
dec
mov
aam
insb
and
js
or
test
mov
xchg
push
or
fsubrl
mov
mov
out
and
mov
inc
movsl
iret
fstpt
inc
pop
fsubrl
sub
dec
rol
dec
mov
jns
and
push
pop
mov
leave
sub
test
js,pn
aaa
fidivl
pop
test
scas
movsb
mov
mov
mov
mov
incl
outsb
and
mov
nop
and
push
push
aam
push
fwait
mov
inc
xchg
out
in
push
mov
cmp
and
inc
pop
fwait
dec
cmc
adc
test
bound
imul
es
jne
adc
xchg
enter
mov
movl
lret
adc
jbe
pop
hlt
movsl
jmp
lods
fisttpll
sahf
jbe
lahf
push
inc
movsl
enter
mov
into
test
sarl
lods
adcl
loop
adc
jl
mov
ds
and
lahf
insl
repnz
xchg
sub
and
or
fs
rclb
cli
jecxz
cli
out
call
add
xchg
repnz
mull
movsb
sarb
mov
push
dec
cmpsb
aas
mov
rol
fs
xor
fs
xchg
fwait
pop
mov
cs
xor
inc
aad
cmp
xchg
repz
loope
xchg
or
nop
cmp
pop
or
ret
cwtl
xor
push
jp
movsb
jb
adc
push
pop
adc
out
push
mov
mov
fimuls
enter
fdivl
dec
jge
mov
mov
pop
aam
leave
into
add
lods
sub
push
xor
cs
xchg
lahf
loopne
adc
imul
icebp
cmp
test
mov
cmpsl
push
out
push
loop
bound
leave
sti
lcall
lods
push
fst
dec
repz
sti
ret
movsl
xchg
dec
imul
in
xchg
sub
lds
adc
pop
mov
xorl
inc
xor
js
test
mov
ret
adc
cmpsb
js
daa
outsl
push
lret
orl
insl
pop
inc
sbb
pop
mov
leave
xchg
pop
lods
call
arpl
dec
loopne
lods
push
jnp
push
adc
cmpsl
dec
lds
push
sbb
insl
mov
aaa
pop
cmp
sub
cmpsb
movsl
lahf
call
int
movsb
es
push
or
movsl
std
aaa
dec
mov
negl
enter
arpl
fdivrl
ret
ss
or
mov
call
es
pop
add
cmp
dec
dec
out
testl
fdiv
sub
mov
xchg
lock
dec
xchg
dec
mov
es
jg
pop
repnz
push
jp
jb
jp
shrl
jbe
popl
mov
xchg
push
sub
in
std
push
and
dec
mov
iret
jo
push
sub
mov
rcrl
clc
out
pop
orl
add
call
movsb
xchg
movsb
push
mov
rcrl
and
nop
jmp
cmp
sar
cmc
jmp
pop
aam
add
fwait
insb
mov
inc
xor
int3
or
and
jo
loopne
rcll
cwtl
xor
jp
stc
arpl
xor
add
dec
and
jnp
test
and
jne
xchg
mov
push
pop
ficompl
je
mov
push
ss
cs
jmp
xchg
mov
fdivs
or
rorl
pop
daa
mov
mov
js
popa
fs
adc
icebp
jbe
test
pmullw
sub
sbb
dec
scas
icebp
add
nop
pop
add
jnp
sub
mov
mov
pop
aad
inc
pop
or
cld
add
xor
mov
mov
adc
inc
mov
and
inc
cmpsl
mov
and
mov
dec
out
cli
std
rorb
sub
fs
add
cli
test
mov
mov
mov
push
outsl
mov
in
je
icebp
mulb
xor
scas
inc
out
jl
add
xor
jecxz
inc
lcall
clc
mov
lea
repnz
adc
es
test
ja
adc
add
xor
sub
pushf
pop
mov
lock
mov
jno
out
jp
and
cmp
cmpsb
js
or
mov
dec
stc
les
jnp
cs
sbb
jbe
outsb
loop
fsubrl
and
mov
mov
mov
mov
inc
pop
or
inc
int3
ss
inc
sarl
sbb
lcall
es
or
push
add
inc
jns
cwtl
xchg
subb
lcall
xchg
mov
mov
sbb
in
movsl
mov
xor
add
sbb
mov
dec
push
jne
fidivrs
dec
xor
les
movsl
out
sub
sub
add
popf
mov
shlb
cltd
and
xor
and
shrb
outsb
in
mov
stos
shr
add
shrb
cmp
jg
int
pop
push
sbb
pushf
scas
addb
mov
fwait
in
mov
aaa
add
pop
rcll
sub
adc
push
push
das
mov
pushf
xor
or
xor
mov
test
scas
outsb
xchg
adc
mov
shl
or
imul
dec
imul
inc
addb
cwtl
sbb
add
rorb
and
mov
push
cmp
cwtl
xchg
iret
inc
inc
dec
mov
hlt
adc
inc
push
jbe
and
dec
aad
addl
jo
and
fldcw
popa
xchg
das
or
sbb
fcomps
cmp
jmp
jge
hlt
scas
mov
subb
mov
imul
add
faddl
subb
jb
xlat
cwtl
fucom
push
mov
sbbb
add
mov
or
push
inc
or
pushf
cltd
rclb
cmp
shr
add
negb
jno
fmull
fidivs
lods
adc
enter
jae
push
sub
or
in
mov
add
adc
mov
push
repnz
mov
es
ret
cld
lret
jns
adc
ret
insl
push
and
jecxz
pop
imul
sub
or
sahf
xchg
pusha
push
and
xchg
inc
aam
jnp
cli
jo
sub
mov
push
mov
popf
lods
shlb
mov
dec
outsl
arpl
lret
cmc
mov
cltd
cld
xchg
mull
mov
pusha
dec
dec
cld
and
xor
scas
pop
test
cmc
mov
xchg
cwtl
insl
aam
push
ret
ds
cmp
cmpsb
icebp
in
ss
xchg
jge
xor
in
sub
pop
sahf
in
pop
repnz
push
test
sti
push
js
jae
out
mov
popf
rorl
mov
in
sub
imul
adc
outsb
mov
repnz
jp
mov
dec
cltd
ds
xchg
jbe
std
es
mov
pop
daa
adc
sti
insl
mov
xchg
pop
sbb
aaa
adc
iret
scas
enter
inc
movsl
je
push
aam
sbb
mov
mov
lcall
pop
shlb
dec
inc
cmp
divb
jg
iret
lahf
out
andb
inc
add
lahf
fstl
lret
xor
scas
rcrl
push
loope
rclb
bound
xchg
dec
xchg
test
push
push
pusha
ljmp
mov
ja
std
ljmp
pop
sbb
das
sub
cwtl
xor
pop
push
pop
mov
stos
dec
fimuls
jbe
sbb
jnp
das
leave
jne
add
xor
ds
addr16
mov
ret
cld
movsl
add
fsubs
loope
and
pop
je
mov
push
xchg
jae
mov
mov
xlat
push
iret
loop
lea
lret
sarl
jnp
daa
xor
cmp
cmc
mov
or
fldcw
fcompl
in
mov
in
mov
mov
or
push
or
mov
mov
push
add
je
xchg
xchg
adc
or
les
xchg
inc
push
outsb
pop
and
push
mov
je
dec
pushf
jg
lock
xchg
and
les
adc
push
mov
xor
orl
cmpsl
lcall
andl
movb
mov
ret
fstl
nop
shlb
mov
roll
push
stc
das
sub
in
push
and
cmpsb
push
push
pop
arpl
cli
ja
fldcw
cmp
std
das
lods
lods
push
adc
mov
dec
lods
and
mov
dec
in
loopne
inc
fnsave
cwtl
fisttps
jle
shrb
cmp
push
lret
movsb
stc
bnd
inc
mov
and
stc
or
xor
rol
mov
sbb
loope
rclb
jmp
test
sbb
push
es
push
jg
out
push
lods
inc
rcr
js
add
push
xor
xchg
xchg
or
inc
cltd
ja
sbb
ds
in
cmc
icebp
repz
aad
push
xchg
shlb
xchg
dec
data16
lods
lahf
push
les
addl
jo
sbb
jb
outsl
loop
loop
mov
imul
cs
movsb
stos
xor
push
insb
mov
pop
ja
cmp
xchg
cmp
dec
xchg
dec
dec
push
fs
loope
cmp
fists
mov
je
icebp
dec
clc
mov
cmp
add
scas
dec
icebp
jg
in
push
in
roll
out
sub
mov
fsubr
push
lahf
negb
mov
xor
xor
or
pop
iret
xor
pop
in
add
jmp
cmp
pop
push
mov
ficoml
cmc
and
and
orb
sahf
data16
jb
inc
push
iret
push
add
adc
icebp
test
rcll
test
mov
outsb
or
lea
negl
call
stos
jl
not
lock
andb
push
and
roll
gs
jl
and
jnp
aad
lret
outsb
xchg
push
sbb
add
xchg
aas
dec
fisubrs
xchg
cmp
or
inc
fs
push
jne
mov
daa
inc
mov
sti
sub
bound
mov
out
jbe
shll
mov
mov
mov
fbstp
rcrl
pop
xlat
xor
fisubs
sub
sbbb
sub
xchg
xchg
xor
cli
xor
jge
add
shld
cwtl
push
lahf
add
shl
mov
shll
lea
divl
pop
sbb
add
ja
xchg
fdivrs
mov
pusha
ja
dec
dec
fcompl
hlt
rcl
jmp
dec
cmp
mov
cltd
lock
sub
inc
mov
int3
mov
in
add
mov
push
adc
push
push
mov
xor
test
into
cli
add
cld
jecxz
lret
lahf
arpl
sbb
into
test
jmp
xchg
sub
mov
out
aas
enter
stos
pop
shrb
mov
cli
icebp
inc
sub
cmpb
sbbb
pop
shll
loope
adc
mov
pop
fs
or
aad
das
ja
mov
add
sbbb
dec
mov
dec
test
js
lods
dec
fnstenv
outsl
imul
pop
imul
dec
sbb
outsl
sbb
xlat
dec
aam
pop
add
inc
fs
inc
aas
xchg
icebp
inc
push
sub
out
test
sbb
arpl
mov
fsubrs
in
iret
repz
sarl
ds
fsubl
dec
test
fcoml
push
inc
xor
cli
or
xor
fdivrs
jmp
xchg
adc
mov
and
jge
mov
fnstcw
mov
movsb
sbb
inc
test
data16
push
and
pop
mov
and
jmp
test
xor
repz
pop
adc
dec
cmc
sub
and
orb
inc
pop
mov
inc
lock
xchg
out
xor
cmp
pop
sub
xlat
fsubrl
add
add
pop
scas
cmp
jp
and
je
ret
push
sub
into
pop
cmp
addr16
aas
push
shl
popa
mov
cwtl
mov
push
and
sbb
xchg
adc
sbbl
test
incl
xchg
inc
push
mov
pushf
inc
jge
xchg
xchg
jnp
cmp
cmp
pusha
sub
les
sbb
push
add
lods
out
xor
dec
daa
mov
mov
mov
pop
add
mov
aam
cmpsl
push
and
je
stc
cli
out
xchg
fildll
movsl
or
or
jg
inc
mov
loopne
jbe
mov
or
add
insl
sub
push
jbe
pop
insl
adcb
pop
ljmp
sub
xor
scas
dec
pop
mov
pop
jl
push
pop
mov
xchg
inc
jmp
fisubl
arpl
pushf
cmp
add
das
sub
hlt
in
jp
or
dec
and
xchg
xchg
int
rorb
xchg
inc
lret
mov
and
cmp
je
lcall
enter
or
dec
cmpsl
popf
inc
popa
xor
nop
jbe
xchg
je
lea
loope
scas
icebp
aam
stos
pop
add
lea
mov
mov
xor
pop
pop
add
and
fwait
mov
pop
or
out
int3
xchg
out
xchg
xchg
or
mov
xorl
or
lock
iret
sub
sub
adc
in
movl
pop
ret
inc
repz
into
sbb
pop
xor
fldl
orl
lds
adc
out
cmpsl
rolb
jecxz
lods
sbb
jmp
xchg
adcl
inc
add
addr16
and
addb
xchg
jb
inc
cmpb
xlat
das
pop
cmc
jns
out
sub
les
sub
in
arpl
clc
xlat
pop
pusha
push
arpl
jns
arpl
das
fwait
addr16
pop
pop
rolb
inc
mov
add
mov
repnz
in
dec
cmp
dec
xor
ffreep
mov
movsl
aad
jecxz
mov
sbb
dec
lss
inc
jbe
sbb
cmpb
lock
ljmp
inc
jecxz
ds
sahf
sbb
pop
iret
ret
and
out
pop
addr16
je
sbb
pop
insl
sub
pop
ds
in
push
pop
jb
fchs
pusha
test
ljmp
decl
jp
fwait
mov
es
fnstcw
ret
adcl
push
out
lret
add
jmp
vhaddpd
nop
fs
xchg
fsubrl
xor
clc
into
inc
pushf
inc
sub
arpl
adc
ds
cmp
xchg
movsb
ja
es
adc
add
mov
pop
gs
out
es
sbbl
push
xor
sbb
xor
cmp
stos
stc
and
sub
fildll
cmc
mov
xlat
mov
mov
xchg
inc
aas
mov
arpl
push
mov
mov
lods
ds
test
stos
ret
fdiv
sub
movsb
push
sti
les
and
lcall
addr16
clc
and
or
inc
aaa
cwtl
push
mov
ss
xchg
push
pop
jnp
mov
leave
adc
ja
ss
mov
test
insb
sar
push
jnp
inc
jecxz
or
dec
jge
shll
mov
inc
jb
xor
ljmp
enter
test
mov
mov
aam
shl
xchg
jmp
loope
insl
fimull
sub
pop
movsl
mov
xor
mov
xlat
faddl
shr
insb
inc
mov
inc
mov
lcall
pop
mov
fwait
add
sar
sbb
pop
popf
sbb
and
cmp
es
pop
aad
jl
fdivrs
subl
je
fmul
xchg
xor
add
add
xchg
arpl
or
test
jle
ret
inc
popa
popa
push
dec
xchg
stos
outsl
adc
inc
call
adc
rorb
sub
dec
inc
or
dec
xor
xor
insl
mov
rorb
cmp
push
xlat
cmp
inc
sbb
dec
jge
lods
aas
popf
jecxz
push
xchg
adc
std
dec
mov
sbb
rolb
jle
lret
add
cmp
iret
fists
mov
pusha
testb
mov
out
in
mov
lods
out
sub
ljmp
lods
inc
jmp
sbb
testl
iret
sub
push
and
insb
ss
dec
and
adc
xor
jnp
in
mov
xchg
movsb
je
dec
cmpsb
pop
sub
fbstp
add
into
loop
out
inc
daa
dec
add
ljmp
mov
subl
mov
outsb
incl
push
mov
mov
imul
push
or
pop
test
cld
sbb
pop
adcl
mov
mov
aad
inc
jg
adc
jae
sbb
mov
pop
cmp
bnd
pop
pop
dec
cmp
add
inc
and
and
clc
and
cmp
scas
stos
int3
pop
cmp
ret
adc
dec
adc
mov
pop
pop
movsl
fstp
outsb
dec
add
adc
pop
fnstsw
pop
pop
test
add
mov
jle
push
mov
cmp
mov
cmp
out
dec
and
lret
and
mov
jmp
cmp
fsub
and
pushf
call
jmp
pushf
pop
mov
int3
sar
and
rcrb
pop
dec
lcall
pop
out
add
adc
lods
adc
dec
je
xchg
je
mov
and
mov
add
xchg
adc
insl
test
mov
imull
add
pusha
push
xchg
fisubrl
outsb
push
inc
mov
pop
adc
pop
xchg
enter
rolb
pop
icebp
pop
sub
lds
sarl
sub
pop
cld
adc
into
fs
jg
dec
rclb
pop
pop
aas
sahf
pop
icebp
fmuls
dec
push
mov
lock
in
and
fcomps
or
shll
mov
mov
in
and
xchg
and
icebp
filds
aad
xor
adc
pop
sbbl
pop
in
sub
out
aaa
mov
mov
std
add
lcall
nop
jmp
fstpt
les
repnz
xchg
jecxz
inc
addb
les
mov
out
test
jo
jg
jo
jg
lods
xorl
xor
xchg
mov
jecxz
mov
xchg
sbb
mov
pop
mov
inc
negl
push
or
int
adc
loop
jb
stos
sbb
xchg
inc
inc
inc
jmp
jno
jae
mov
mov
and
or
fcomip
jge
xchg
xchg
sub
push
adcb
dec
pushf
push
shlb
int3
pusha
add
imul
fstl
push
lock
idivl
lock
lret
insb
notb
mov
jmp
cwtl
and
imul
sub
add
iret
xor
in
jp
mov
or
sub
mov
cmp
sbb
pop
js
xchg
and
cmp
fists
test
xor
jne
cmp
jnp
pop
sub
out
cmpsb
clc
jecxz
jmp
lea
add
mov
lods
mov
out
popa
dec
fsubs
mov
stc
test
jmp
push
into
xor
pop
or
xchg
push
or
xor
fcmovu
sub
lret
hlt
rcrl
shl
dec
pop
xchg
popa
pop
push
dec
add
mov
test
dec
mov
gs
sahf
jnp
out
dec
data16
int
test
cli
mov
int3
popa
sarl
sub
mov
add
pop
mov
jg
notb
jecxz
pop
mov
or
xchg
dec
nop
xor
adc
jo
or
adc
pushf
in
jg
mov
xchg
sbb
mov
adc
arpl
cltd
std
stos
push
mov
in
pop
repz
pop
adcb
xor
xor
sub
lods
dec
pop
mov
lock
dec
mov
into
jnp
pop
jns
xchg
pushf
pop
sti
mov
fistpl
xlat
lds
emms
xor
les
push
ds
and
ss
fimull
dec
push
push
arpl
or
popf
pop
loope
jg
aaa
xchg
mov
xor
test
dec
ljmp
mov
dec
int
sti
xor
dec
roll
enter
inc
push
clc
push
mov
call
mov
movsl
add
sbb
jno
fs
or
add
pushf
enter
out
jae
add
gs
ficompl
test
xor
dec
dec
xchg
loopne
pop
xchg
lahf
fildl
jbe
das
fucomip
push
inc
jle
mov
and
gs
jl
lea
scas
mov
lea
adc
and
mov
sub
inc
inc
jae
pop
ss
lods
add
push
pushf
int
repz
shll
es
lahf
mov
xchg
subl
cmp
cli
cmp
sub
fistl
dec
mov
out
pop
faddp
jp
popf
mov
adc
push
adc
sub
test
movsl
je
cmp
addr16
fcomip
jo
xor
cmp
test
lcall
push
cwtl
add
ds
std
and
sub
mov
push
xor
bound
jae
sub
xor
add
sub
jnp
or
dec
cmpsl
pop
jbe
push
ds
aam
mov
cmp
dec
bound
gs
in
repz
jne
mov
fdivl
dec
and
frndint
sub
cmp
jns
inc
mov
js
adc
inc
cmpsl
in
mov
dec
fisttpl
xor
xchg
mov
hlt
jnp
js
int
imul
sti
cmpsl
icebp
ret
cmp
or
adc
pop
std
aam
jbe
je
mov
out
mov
adc
push
adc
mov
add
repnz
xchg
clc
hlt
je
adc
in
ret
jo
jae
cmp
inc
idivl
in
scas
mov
dec
sahf
lret
call
stos
push
push
fwait
inc
mov
repz
fs
jne
pop
movsl
mov
add
mov
xor
xor
push
mov
dec
lds
sbb
loopne
or
jae
pop
pop
lahf
xchg
xchg
iret
jbe
jge
int3
lods
xor
div
push
sti
testb
ret
or
test
mov
adc
jmp
and
dec
pop
mov
adc
adc
push
mov
pop
repz
outsb
in
mov
push
push
sbb
and
inc
and
leave
xlat
stos
add
les
sbb
mov
push
mov
pop
jno
std
stc
out
and
add
push
leave
mov
jle
sbb
add
ljmp
dec
in
ret
sub
cmp
jle
jle
iret
je
cmp
cmpsl
ljmp
rolb
insb
push
add
int3
cmp
pop
cld
or
xor
aaa
push
lods
cmpsb
jnp
les
icebp
cmp
mov
enter
add
cmp
adc
cmp
xor
jns
loope
mov
xchg
lock
jmp
iret
sub
push
das
ret
jp
pop
mov
push
inc
mov
or
sub
or
outsb
adc
jle
mov
pop
cmp
jecxz
pop
dec
push
mov
mov
xor
adc
movsb
push
sub
sbb
ja
enter
stos
jp
lcall
jge
or
or
inc
sbbl
inc
rcll
mov
and
in
outsl
and
shll
adc
xchg
sbb
pop
inc
shll
lret
icebp
jne
adc
lret
jecxz
in
sbb
outsl
add
adc
lods
add
sti
and
pop
lcall
push
lcall
call
inc
jl
lcall
out
and
push
jnp
enter
mov
add
fbld
dec
outsl
push
aas
shlb
or
mov
lock
mov
test
jp
cld
xchg
pop
fidivs
mov
cmpsl
jne
enter
adc
mov
inc
shl
jecxz
iret
aam
push
nop
cli
lods
add
iret
lcall
mov
or
sub
fcom
jb
pop
loop
jnp
sub
mov
push
mov
mov
ds
cld
popa
jns
sbb
mov
cmc
out
ljmp
cltd
jns
inc
push
pusha
imul
and
cmp
jecxz
fnstenv
adc
fwait
scas
mov
addr16
push
cwtl
negl
insb
call
and
xchg
pop
mov
add
mov
movsl
mov
adc
jns
dec
ret
pop
sbb
mov
rcll
add
cli
jge
rcl
lret
inc
push
stos
loop
dec
in
dec
inc
lea
int
pop
mov
sbb
stos
pop
add
inc
outsb
dec
mov
ret
xchg
outsl
movsl
daa
mov
pop
loopne
cmp
add
mov
sub
mov
cmp
fs
jg
out
test
cmp
mov
xchg
outsl
ficompl
popf
loope
and
push
jecxz
add
int
push
xchg
ljmp
push
jb
push
mov
lea
fcomi
sahf
xor
xor
jecxz
inc
push
jae
cs
cltd
xor
or
add
nop
testb
inc
aam
xor
loopne
or
fnstenv
mov
mov
pop
mov
and
lahf
imul
cmp
sbb
or
sub
cli
or
mov
call
int
stc
stos
pop
jnp
dec
or
cli
sbb
lds
xor
rol
pop
cmp
jp
cmpb
dec
mov
daa
sahf
movl
sbb
push
sub
and
fdivrl
shlb
lock
push
aad
ret
ljmp
and
in
cmp
or
xchg
jno
lea
ds
and
imul
push
cmp
fs
push
mov
jb
dec
xor
jno
outsb
jmp
or
or
jmp
mov
cmc
cmp
pusha
xor
lds
fmuls
sub
and
add
insl
lods
arpl
testl
xchg
cli
or
sbb
ret
sub
sub
xor
mov
or
lods
cwtl
jl
push
dec
mov
pushf
and
data16
cli
icebp
sahf
jo
or
fwait
cmp
call
ret
sbb
and
xor
pextrw
mov
out
push
mov
inc
push
pop
and
out
repnz
sub
xchg
stos
xor
fnstenv
push
loope
inc
pop
sbb
es
in
push
daa
jae
out
push
scas
scas
sti
out
sub
mov
dec
xor
pushl
adc
addb
and
xorl
lret
or
mov
std
addr16
arpl
jnp
sbb
add
mov
mov
pop
push
addl
fistl
jp
sub
in
mov
je
mov
icebp
nop
push
subl
cmp
into
sbb
stos
scas
mov
imul
inc
out
or
lcall
mov
ja
push
fwait
psrlw
sbb
ret
mov
sbb
mov
imul
pop
std
cld
dec
inc
push
out
cmp
out
fldl
mull
das
fistpl
sbb
mov
mov
jg
mov
jmp
ja
scas
fisubrs
shrb
hlt
mov
or
imul
or
aad
dec
xchg
mulb
popa
pop
pop
inc
outsb
lds
mov
lahf
outsl
test
iret
xchg
pop
mov
and
ja
sbb
mov
mov
mov
xor
xchg
sub
inc
cmp
mov
cs
lea
fs
out
out
xor
xlat
xchg
fnstsw
dec
out
jne
nop
out
mov
fistps
fisubl
jbe
fcompl
xor
or
jle
lcall
jnp
cld
out
add
jg
mov
int3
sbb
sbb
loop
popa
repnz
xchg
inc
pop
or
xchg
inc
push
or
test
ljmp
cmp
mov
pop
sub
pop
mov
sub
xor
pop
fwait
adc
or
loope
popf
cmp
sbb
jecxz
jne
xchg
test
ret
lret
ds
add
inc
sti
lahf
daa
movsb
xchg
gs
inc
jle
mov
mov
mov
pop
inc
inc
inc
mov
mov
add
outsl
loope
pop
shll
push
es
pop
mov
aaa
fmuls
mov
das
pop
hlt
xchg
flds
xchg
jno
cwtl
jl
xor
mov
pop
pop
jae
test
sbb
mov
add
repnz
dec
mov
das
clc
mul
data16
lods
lahf
ja
cli
scas
frstor
loop
mov
dec
mov
mov
push
or
shrl
mov
mov
mov
in
inc
aas
les
push
mov
dec
adc
add
ja
ret
stc
addb
test
xor
cwtl
mov
adc
or
xor
iret
cmp
test
jae
push
or
popf
xor
in
int3
xor
repnz
insl
into
lds
lea
clc
dec
jbe
mov
mov
leave
in
mov
cld
mov
aad
cmp
cmpsb
insl
out
add
lock
test
xor
outsl
adc
dec
rol
adc
repz
es
insl
dec
sbb
xchg
sarl
mov
push
lret
cmpsl
cmpsl
in
push
incl
dec
stos
xchg
inc
outsb
pop
fsubrs
xor
cmp
mov
jbe
int
jbe
jne
inc
jmp
xlat
and
rclb
mov
imul
aas
sub
push
aas
lret
mov
and
xor
mov
lods
or
inc
ret
sahf
inc
test
dec
or
test
sub
mov
push
js
nop
addl
ss
negl
xor
lret
rcrb
cmp
scas
dec
cmpsb
xchg
jns
in
add
dec
je
pop
xor
or
mov
cld
adc
push
mov
test
loope
mov
pop
jae
in
sub
mov
mov
das
leave
add
shl
cs
subb
repnz
push
push
es
mov
sub
cmc
fimuls
push
jb
mov
and
mov
mov
in
ds
lret
js
js
mov
mov
cmpsl
add
adc
outsb
adc
repz
sbb
push
repnz
fwait
add
fildll
and
xchg
pop
repnz
ss
sbb
mov
mov
scas
xor
stos
pop
fdivp
or
mov
pop
insl
das
jg
imul
and
fiadds
stos
idivb
fnstsw
pop
stc
dec
lods
enter
xor
push
movsb
test
sub
mov
les
inc
xor
addl
lods
add
mov
mov
add
or
mov
sahf
dec
or
fistps
scas
inc
push
add
pop
mov
arpl
xchg
cmpsb
cld
adc
test
inc
jmp
rorl
std
popf
mov
popf
test
mov
push
xchg
or
fidivrs
movb
leave
js
jecxz
popa
xchg
fsubrs
in
add
mov
dec
lea
push
adc
cmpsb
mov
decb
push
xchg
imul
jb
je
jo
cwtl
sub
xchg
xor
test
pop
cmp
cmp
leave
ss
jmp
test
pusha
jne
movsb
js
inc
sbb
mov
cmp
fbstp
ss
ficoml
lds
mov
stc
lods
and
subl
ficoml
hlt
adc
stos
mov
movl
push
out
lds
xchg
test
shlb
cmp
mov
mov
inc
xor
xchg
std
ss
sub
call
xor
aas
sti
imul
jae
mov
ss
mov
dec
adcb
hlt
aas
mov
in
mov
cmc
dec
mov
pop
sbb
fldl
jl
pop
dec
adc
jmp
mov
dec
jg
cmp
jne
gs
out
inc
mov
outsl
aam
inc
inc
pop
out
jno
push
mov
adc
stos
and
and
mov
flds
bound
ds
outsb
cltd
cmp
xchg
add
addr16
rolb
lea
cli
rorl
imulb
inc
mov
or
in
push
xor
ret
sub
add
ja
push
or
int
push
shrl
xor
and
adc
dec
in
adc
dec
dec
data16
jg
pop
add
repnz
out
or
add
push
dec
nop
ret
test
and
iret
mov
popf
or
call
push
movb
mov
or
dec
testb
loopne
cmpsb
in
xor
inc
pop
mov
sub
pop
or
in
hlt
mov
lods
or
fsubs
mov
fdivl
adc
add
adc
outsb
mov
add
push
pop
push
popa
mov
inc
call
mov
dec
sbb
jg
push
loope
mov
mov
aas
test
dec
icebp
push
loopne
mov
mov
mov
js
jg
out
cmpsl
ret
int3
cmp
pop
je
adc
mov
jbe
fs
lahf
xchg
shr
pop
dec
loope
popf
in
sub
aad
jecxz
xor
lea
push
mov
ljmp
dec
sub
lods
xchg
repnz
out
jo
in
arpl
cmp
sub
stc
fildll
ret
rcll
fcmovnb
notb
jns
mov
imul
xor
insb
jne
mov
adc
sbb
or
xchg
xchg
push
xor
xor
jb
scas
aaa
sbb
in
inc
mov
push
fbld
mov
aad
lods
cmp
inc
icebp
sbb
nop
adc
pop
dec
dec
insl
adc
mov
cmpb
shrb
loope
pop
inc
mov
clc
mov
shrb
fwait
or
pop
xchg
push
sub
or
pushf
rorl
and
dec
sbbl
xchg
sub
cmp
loope
fmuls
push
iret
cmp
jb
xchg
pop
leave
adc
and
lret
and
mov
mov
inc
push
pop
flds
mov
movsl
mov
cs
cwtl
mov
xlat
pop
cmp
cmp
push
adc
xchg
jg
xor
daa
iret
xchg
stos
xchg
insl
xlat
iret
dec
arpl
fwait
bound
push
das
loope
push
adc
mov
adc
movsb
test
cmp
int3
push
cwtl
out
adc
push
add
stc
loop
jmp
fldt
sar
jae
test
pop
xchg
fwait
je
cmp
mov
xchg
add
insb
arpl
cmp
and
mov
daa
subb
mov
xchg
fdiv
shlb
pop
jmp
les
aam
scas
dec
push
clc
cmp
fdivr
je
fistl
push
cli
mov
dec
push
inc
mov
or
lods
xor
and
sti
cs
inc
push
pop
lret
and
rclb
sub
arpl
repz
pop
inc
lcall
or
add
add
xor
push
sub
sbb
cmp
ss
iret
test
xlat
xchg
aas
and
gs
decl
mov
orl
mov
outsl
cli
or
pop
daa
je
inc
add
ljmp
push
or
lret
lds
add
shl
pop
mov
add
mov
lods
jecxz
xchg
ss
bound
rol
into
sti
dec
jge
sarb
lock
adc
dec
jle
mov
push
cltd
fcoml
lcall
sahf
sub
xor
pop
sub
sub
sti
push
adc
xor
dec
pop
mov
jns
or
out
aad
or
dec
xlat
subb
pop
inc
sahf
jmp
cltd
loop
test
adc
add
les
inc
mov
xor
jmp
icebp
fwait
cld
hlt
pop
fcompl
test
int3
push
out
jo
neg
std
sbb
dec
adc
push
cltd
addr16
repnz
sbb
pop
push
mov
and
je
pop
fimull
and
and
pusha
pushf
rcrb
mov
cwtl
sti
jns
call
cld
xor
pop
xor
out
push
add
inc
addr16
adc
das
xchg
adc
adc
fadds
adc
or
fdivl
pop
cmp
rcrl
sahf
repnz
dec
fs
loope
mov
roll
aaa
push
pop
adc
xlat
bound
mov
cmp
add
pusha
outsb
inc
ljmp
mov
sub
adc
sub
push
dec
xchg
out
repnz
push
jp
fisubs
mov
pop
fildll
push
hlt
loopne
add
xor
pop
sarb
xlat
jge
out
push
pushf
in
nop
dec
jle
mov
bnd
xor
and
and
les
add
push
stos
mov
jb
stc
popf
mov
mov
mov
fcompl
frstor
cmp
xor
pop
ss
jmp
pop
cmpsl
fs
jbe
ds
cmpsb
out
ret
imul
sahf
cli
arpl
sahf
push
jbe
inc
jle
std
lahf
and
push
scas
cmpsl
mov
fcomip
or
sub
push
push
clc
andb
nop
test
xor
imul
fcoms
sbb
mov
cs
je
mov
ret
divl
outsb
pushf
cmpsb
inc
dec
mov
push
iret
aas
mov
out
mov
and
mov
pop
fdivr
push
fisttpl
cmp
aam
lret
out
or
sbb
clc
sbb
cltd
sub
inc
mov
push
or
scas
shlb
and
cli
mov
inc
testb
ljmp
aam
xor
mov
aad
xor
xchg
test
mov
mov
jecxz
jae
ss
into
jle
sub
xchg
ret
aas
test
lahf
in
cmp
addr16
mov
sbbb
sub
push
mov
out
push
mov
test
push
jb
cmp
repz
pop
mov
loopne
div
push
shlb
pop
shr
mov
dec
out
das
enter
sub
adc
pusha
mov
mov
and
cmpsl
cmp
stos
test
mov
sub
push
lret
sub
adc
jl
push
mov
loop
lods
mov
out
mov
in
cltd
ja
popf
sub
test
inc
jno
pop
aas
mov
stos
lea
xchg
arpl
jo
fdivrs
push
stc
push
into
aad
stos
fidivrs
fiaddl
ret
cli
dec
mov
repz
mov
lahf
inc
hlt
push
dec
pop
xchg
dec
clc
fldl
jo
jno
std
adc
loop
insl
mov
pop
dec
shr
cmpsl
xor
cmp
xor
loop
lret
loopne
fstpl
arpl
pop
icebp
ljmp
loope
insb
popf
bound
dec
push
in
xor
add
dec
or
add
or
popaw
cmp
dec
and
je
jmp
mov
xchg
or
jmp
loope
fildll
test
pop
pop
cld
outsl
in
inc
pop
addr16
gs
sub
sbb
or
push
push
mov
cmp
stos
cwtl
inc
mov
insl
sub
or
or
pusha
sub
hlt
ficoms
sub
xor
jg
jmp
mov
mov
add
mov
fsub
add
jg
icebp
nop
dec
dec
pushl
cmp
loop
idiv
addr16
aam
push
or
enter
jp
push
ret
popa
stos
shrb
xor
insl
int3
incb
popf
xchg
outsb
xchg
jbe
push
adc
xchg
or
daa
insb
mov
jo
push
mov
jb,pt
inc
pop
sbb
popa
xor
lods
sbb
cmp
inc
mov
sub
pop
dec
scas
aad
add
es
sbb
mov
enter
push
gs
adc
xchg
or
lret
mov
gs
or
aad
mov
jns
mov
jle
add
cmp
lods
inc
enter
cmpb
orb
popa
push
int3
cli
dec
enter
test
mov
jbe
pop
lret
rcrb
jp
aad
stos
xchg
andl
inc
je
addl
xor
cmc
pop
mov
loope
lret
outsb
sbb
inc
into
and
leave
gs
jb
xchg
sub
xor
test
movsl
xchg
test
or
js
in
pusha
inc
add
pop
fistl
lods
adc
mov
sub
and
test
mov
shl
xchg
jo
jnp,pt
mov
testl
xor
sti
sub
and
sbb
je
mov
pusha
insl
mov
or
aaa
xor
pop
push
mov
mov
movsb
iret
sarb
in
outsb
cmp
xchg
fwait
mov
lret
or
fists
mov
call
push
mov
lret
ficoml
add
repnz
lret
xchg
repnz
xor
cmp
popa
push
lods
inc
aas
or
sbb
mov
shrl
and
push
mov
pop
mov
scas
in
push
jo
jg
adc
push
dec
std
pop
movsb
pop
lret
pop
adc
add
adc
loope
lds
pop
sarl
lret
mov
add
pop
mov
mov
clc
cs
icebp
adc
js
cld
fcoms
ds
mov
cld
pop
jle
adc
rolb
scas
ds
gs
stos
jae
jg
or
outsl
cmpsb
xlat
xchg
adc
mov
cmpsl
pop
daa
cmc
arpl
sbb
insl
mov
cmpsl
into
dec
je
mov
rorl
mov
std
sbb
int
ret
pop
stos
xor
outsb
mov
cli
jno
adc
jmp
addr16
sbb
push
fnop
scas
add
xchg
inc
pop
xchg
aas
out
push
cmp
cwtl
aas
enter
mov
das
jp
mov
sub
mov
sbb
mov
push
int
inc
adc
push
rcll
idivb
lahf
test
adc
push
sub
mov
or
inc
pusha
mov
int3
out
inc
jae
test
mov
or
dec
adc
push
data16
add
daa
fs
es
test
stos
jo
sub
cmp
add
repnz
pushf
xlat
or
sub
jno
mov
js
dec
lret
bound
scas
dec
pop
popl
sub
leave
mov
jb
mov
inc
jmp
shlb
jbe
js
mov
add
xor
inc
sbb
push
mov
and
dec
xorb
xchg
test
or
inc
cli
repnz
rcr
enter
out
adc
mov
es
sub
jno
xorb
scas
pop
mov
xchg
fcmovnbe
cltd
add
inc
ficoml
fbld
stos
fdivrl
sahf
jb
icebp
jne
fisttps
ljmp
mov
lea
ljmp
lods
dec
popa
ja
push
or
lods
jo
add
scas
pop
jb
scas
pop
imul
out
sub
fcmovnb
je
fbld
mov
xchg
pusha
cmp
mov
pop
and
fcomi
mov
outsb
leave
push
push
je
lds
mov
pushf
rcrb
xor
mov
pop
cli
mov
lea
cmp
sbb
into
adc
mov
fwait
aad
lret
fnstcw
mov
popf
cmpsb
inc
adc
icebp
insl
jae
in
mov
push
pop
mov
in
jle
or
fnstenv
or
aam
ja
xor
bnd
into
iret
jne
mov
mov
mov
stos
jecxz
adcb
mov
inc
pusha
xor
je
sbb
movsl
sbb
lahf
clc
lock
add
sbb
mov
push
sti
clc
inc
fbstp
pop
mov
in
dec
push
push
sarb
ffreep
dec
fldt
cmp
movsl
hlt
clc
jno
cmp
mov
pop
jo
sub
cltd
pop
cmpsl
jmp
stos
inc
nop
jne
in
adc
rorb
out
cmc
pop
jcxz
pop
test
clc
inc
hlt
ret
mov
sahf
in
push
jne
mov
and
inc
sbb
xchg
pop
movsb
jg
xchg
repnz
aam
xor
xchg
mov
mov
xchg
enter
inc
out
xchg
arpl
push
push
jl
imul
xlat
mov
cmpsb
push
das
lds
in
xor
outsl
or
xchg
popa
xchg
aaa
scas
fisubrl
pop
loope
and
insb
mov
inc
xor
push
add
ret
cmc
sbb
rcr
jl
lods
leave
scas
cmpsb
push
mov
or
neg
mov
push
je
adc
jo
fs
xor
mov
or
add
es
int3
or
lret
mov
sbb
jno
mov
vmwrite
cmpsb
arpl
inc
adc
jp
cltd
inc
call
push
lds
jo
pop
pop
cmp
iret
aad
mov
mov
mov
gs
push
flds
clc
push
pop
fstpt
sahf
jb
sbb
inc
mov
mov
mov
je
add
xor
in
push
out
mov
xchg
jg
mov
pop
dec
lcall
mov
pushf
rcrb
mov
adc
cmp
dec
jmp
aaa
js
lahf
cmp
pop
hlt
ljmp
cmp
data16
cmp
adc
jne
cmp
sbb
not
cwtl
sbb
cmpsl
mov
icebp
sahf
outsb
xchg
scas
xchg
fnstenv
mov
mov
icebp
out
call
filds
out
insb
push
xor
vpminsw
sub
fistpll
int
xchg
test
xor
add
and
fisubrl
push
xchg
sbb
jb
cmp
xlat
xor
cmc
les
push
fnstcw
das
daa
fldz
adc
xorl
stos
dec
mov
pushf
into
loop
mov
push
mov
repnz
xchg
dec
add
js
dec
jp
pushf
adc
dec
mov
lods
cmp
pushf
fsubs
push
xchg
inc
add
mov
aas
mov
add
sub
cmp
adc
xor
loope
mov
out
dec
push
lret
iret
sbb
pop
adc
jge
push
mov
push
arpl
ja
mov
dec
pushf
jno
push
repz
out
mov
int
notb
jmp
mov
or
pop
dec
or
add
pop
fwait
aaa
ret
out
repnz
push
cmp
xchg
in
orb
xchg
pushf
fs
sbb
cmp
mov
xchg
adc
mov
push
inc
mov
jmp
roll
pop
cld
sbbb
mov
subl
loopne
orb
sbb
hlt
push
xchg
dec
dec
xchg
cmc
and
test
inc
sbb
pop
scas
adc
mov
pop
inc
sti
hlt
cmpsb
cld
or
mov
jo
inc
bound
repnz
and
pop
rorl
leave
loop
jno
mov
nop
push
xchg
fisttpl
pop
jb
add
xor
cmp
push
idivl
inc
or
std
xchg
mov
add
out
ret
test
xor
sub
mov
dec
push
mov
popf
push
xor
lea
movsl
aad
ja
push
cmp
ljmp
inc
adc
jle,pn
pop
imul
or
gs
fs
dec
cld
fwait
mov
divl
pop
aam
es
mov
or
lret
loop
mov
mov
aad
fadd
push
imul
mov
sbb
fwait
idivl
jecxz
xchg
adc
mov
xor
xchg
pusha
sbb
add
and
test
ss
cmp
inc
les
mov
jns
ret
js
cli
push
push
push
xchg
mov
push
inc
lods
push
stc
xchg
daa
xchg
and
cmp
lret
jb
stos
cmp
or
adc
jmp
arpl
and
add
mov
jg
sbb
rcll
mov
popa
or
mov
aaa
icebp
aam
jno
insl
cmpsb
out
push
aam
push
fistl
popa
mov
mov
pop
dec
scas
mov
gs
cmp
out
stos
into
mov
add
push
add
xchg
inc
cmpl
inc
arpl
arpl
jmp
cmc
cwtl
cmpb
out
mov
sahf
adc
mov
mov
jns
mov
ret
int3
mov
jg
insb
inc
pop
aaa
les
paddq
movsl
sub
out
aas
idivl
fdiv
insl
xlat
inc
movsl
jo
sbbl
push
jg
mov
jle
cld
incl
loop
sbb
decl
and
mov
test
pusha
xor
and
js
stos
pop
aaa
cmp
popa
sbb
clc
insb
ja
push
cmp
mov
arpl
xchg
fnstsw
lret
and
movsl
shl
xor
fs
movsl
int
js
adc
cmc
test
add
pushf
xchg
inc
lret
pop
icebp
sub
ficompl
adc
adcl
ficomps
adc
sbb
adc
lret
loope
pushf
pop
lcall
bound
insb
xor
pop
adc
mov
xchg
ror
add
cwtl
ds
push
aad
jge
fistps
push
push
push
ja
add
psadbw
jb
cmp
insb
shll
test
xchg
imul
or
ret
xchg
jl
mov
xlat
int3
jecxz
repz
xor
movl
mov
ret
sbb
push
shrb
mov
jmp
mov
adc
cmp
mov
sahf
inc
lds
movsb
sub
sub
add
lret
push
divl
push
ffree
jnp
push
mov
lods
and
pusha
incl
or
xor
testl
imul
xorb
clc
sarl
rcrb
xchg
je
lock
movsl
mov
das
pusha
fisubl
add
dec
stos
inc
popf
fwait
mov
jae
dec
leave
js
inc
xor
sbb
shlb
lods
cmpb
sbb
into
adc
loopne
jge
neg
repnz
xorb
add
jbe
pop
popf
xchg
test
xor
sbb
lret
movsb
mov
pop
push
test
data16
lret
jbe
jl
pop
xchg
cs
mov
loop
dec
icebp
ja
nop
and
mov
lahf
and
mov
jns
or
dec
bound
flds
adc
repz
sbb
sub
popf
pop
fstl
icebp
insb
sub
jp
mov
sbb
dec
sub
loopne
jae
ss
pop
adc
mov
lret
jge
mov
lahf
dec
xchg
cmp
orb
lret
repnz
nop
sub
das
xchg
pushf
push
push
arpl
pop
add
mov
mov
inc
push
mov
test
lcall
popf
xor
xor
xor
push
pop
idivb
sub
mov
into
cmp
in
lods
jne
jecxz
insl
push
nop
xor
mov
mov
mov
sbb
mov
jle
jp
or
sbb
divl
xlat
cmp
jns,pn
sub
push
cltd
mov
or
push
cmp
outsb
cltd
movsb
icebp
shll
ja
inc
jb
icebp
repnz
popf
adc
push
push
push
inc
es
adc
icebp
pushf
push
punpckhdq
add
dec
ljmp
cmpsb
and
imul
xor
loopne
lret
scas
in
jp
add
test
sti
repz
mov
or
mov
fdivrp
movsb
mov
rclb
leave
jl
pop
lods
pop
mov
jbe
mov
pop
dec
dec
pop
push
cmpb
ja
jns
xchg
out
add
scas
out
push
cmp
cmp
pop
and
mov
mov
mov
adc
adc
cli
cld
loopne
and
adc
mov
cld
inc
lock
mov
dec
pop
push
enter
xchg
fsubp
mov
mov
mov
pushf
mov
pusha
mov
inc
mov
push
rcrb
fiadds
and
or
cmpsb
ljmp
push
add
xchg
inc
into
add
ja
push
aam
fcmovbe
pop
outsl
push
lret
cmc
icebp
adc
add
scas
push
loopne
dec
ja
or
xchg
push
int3
mov
pop
cmp
leave
pop
bndldx
sbb
fnsave
cmpl
xor
sbb
pop
or
cmp
inc
insb
xor
sub
pop
jo
dec
jle
sahf
lcall
xchg
mov
inc
mov
int
jo
repnz
mov
in
daa
push
call
jne
xor
sub
out
push
test
popf
scas
fnsave
or
push
popa
sti
loope
jb
cmp
out
and
sub
sbb
pushf
mov
lods
dec
fistpl
shrb
mov
and
pop
es
scas
add
xor
pop
and
mov
aas
mov
jge
and
fdivr
cli
out
in
inc
jecxz,pn
jnp
loope
lret
aaa
loope
xchg
test
xor
sub
mov
pandn
mov
imul
das
pop
icebp
adc
jno
jae
mov
inc
pop
pop
push
pop
cmc
or
sbb
push
call
loope
mov
fsts
andl
mov
xchg
or
lds
add
mov
xchg
xchg
popf
repz
imulb
mov
push
clc
loopne
ja
adc
loope
repnz
in
insl
mov
lcall
inc
jns
mov
das
inc
cwtl
cmp
or
pop
pop
loop
fstl
call
xor
push
xchg
pop
dec
mov
rorb
mov
dec
in
loop
or
push
lcall
cs
outsl
jo
ljmp
mov
push
addb
cmpsl
ljmpw
idivl
fmul
or
ret
sbb
cmp
push
sbb
jecxz
daa
inc
and
cmpsl
adc
lret
cmpsl
arpl
outsb
mull
lret
xor
test
mov
mov
dec
loope
mov
cmpsb
jp
jp
sti
test
loopne
ret
aam
cwtl
fadds
ljmp
dec
test
ret
xor
inc
push
sub
sbb
sti
mov
roll
push
fsubs
sbb
push
jg
test
ficompl
cld
mov
pop
dec
mov
js
mov
cltd
mov
sub
paddd
out
mov
and
xchg
pop
adc
or
jns
cmpsb
std
addr16
push
sbb
in
xor
das
js
jno,pt
ds
push
jmp
adc
shlb
rolb
pop
add
xor
push
out
sarb
cmp
sarl
loopne
mov
pop
mov
into
xchg
dec
adc
dec
cld
inc
test
ret
divb
test
adc
ja
clc
scas
icebp
cmpsl
mov
ss
insb
nop
rcrl
lcall
jge
dec
shll
sbb
xchg
jecxz
nop
jns
pop
rorb
cli
lock
sub
out
stos
out
loope
jl
mov
push
testl
addr16
and
adc
mov
pusha
fstsw
addr16
in
ljmp
cltd
cmc
or
mov
jl
pop
dec
pop
test
leave
pop
test
aam
sar
movsl
mov
das
test
es
mov
cmc
add
push
jnp
mov
mov
or
bnd
xchg
fucomi
cmc
xor
out
andl
mov
mov
jmp
cmpsb
std
mov
dec
out
push
loopne
mov
into
aas
movsl
jne
ret
cmp
cmp
icebp
int
lret
out
stc
out
gs
jmp
kmovw
mov
mov
add
sbb
push
mov
cmc
movsb
push
mov
aad
xchg
lcall
sub
jne
pop
out
mov
sub
mov
fstl
shll
mov
orl
iret
add
mov
jecxz
dec
pop
iret
cmp
sahf
mov
std
xor
std
iret
insb
jnp
mov
out
xchg
ficomps
jge
push
cmovbe
aaa
aad
mov
out
jg
std
lret
fwait
lahf
out
push
fnstenv
add
push
push
in
dec
or
mov
pop
xor
fwait
das
sbb
cwtl
and
lds
ror
sahf
hlt
jb
xchg
pop
inc
aaa
outsl
inc
inc
cltd
mov
insb
lea
push
mov
repnz
jbe
xchg
stc
pop
xor
repz
into
push
adc
insl
call
xor
rorb
mov
enter
cmp
sbb
mov
xchg
in
rolb
cmpsb
in
xor
sub
cmp
mov
jmp
cmp
sub
cmc
cmpsl
jp
lods
jbe
or
orb
push
or
insb
test
fidivrs
pop
xchg
sbbb
cli
push
arpl
jle
add
add
mov
arpl
test
cli
sub
aam
push
push
icebp
dec
fadds
jl
ret
xchg
mov
cmpsl
cmc
orl
push
imul
addr16
and
test
dec
stc
jb
in
aaa
and
or
sarb
dec
mov
dec
jl
pop
xor
mov
scas
lea
aaa
data16
daa
cld
gs
cltd
imul
or
xchg
or
push
xchg
inc
sti
imul
stos
ret
jl
push
aas
xchg
jmp
filds
add
pop
jl
inc
lods
sub
lret
not
jnp
jp
jo
xor
adc
fwait
or
repz
pop
cwtl
dec
imul
jecxz
int
call
add
push
mov
xor
adc
lds
sub
dec
icebp
mov
inc
and
xchg
daa
lods
pop
jne
fdivr
cwtl
dec
scas
cli
xchg
push
fadd
std
mov
scas
sbb
shrb
fidivl
sarb
push
in
jbe
adc
xor
add
iret
icebp
neg
sbb
call
gs
sub
jg
and
dec
or
lret
sbb
jnp
cli
aad
fstps
push
mov
in
mov
mov
in
xacquire
mov
push
xlat
bound
inc
push
stos
test
push
scas
xorb
ljmp
loop
leave
mov
js
xchg
into
jl
add
push
sub
jo
mov
mov
nop
cld
call
popa
mov
fisttpll
movsl
dec
xchg
cmp
mov
dec
shrl
sbb
fimull
mov
sbb
lods
mov
addr16
xor
mov
dec
std
movsl
sbb
xchg
enter
jnp
and
jge
add
mov
or
test
push
pushf
stc
mov
xchg
ret
and
xor
add
int
inc
xchg
push
cwtl
outsb
pusha
in
dec
mov
icebp
dec
inc
mov
xchg
pop
or
inc
dec
imul
pop
xor
and
stos
mov
scas
outsb
fdivrl
mov
xor
insb
cmp
mov
pop
mov
cmovs
arpl
pop
mov
mov
mov
ds
repz
xor
push
push
imul
enter
movsl
xchg
inc
ds
idivb
adc
andl
lods
adc
dec
dec
mov
add
sub
cmp
testb
std
mov
gs
xor
inc
adc
cltd
cmp
in
dec
add
dec
fisubl
cmp
andl
mov
add
mov
aaa
xor
movsl
dec
sbb
leave
int3
sub
iret
adc
int
mov
push
pusha
into
rclb
mov
sub
sar
cmpl
cmp
cmp
mov
clc
dec
out
pop
jmp
add
push
out
pop
ss
push
mull
into
ds
xchg
fimuls
iret
filds
jbe
jbe
bswap
xor
dec
and
mov
cmp
jb
scas
dec
aaa
loopne
push
dec
and
jo
aad
jmp
in
ljmp
xchg
jmp
adc
sarl
shrl
mov
inc
outsb
shl
mov
jbe
jnp
ja
add
push
mov
mov
push
mov
mov
mov
int
pusha
out
jle
sbbl
xchg
mov
inc
push
mov
fstps
jg
mov
sub
lea
or
clc
add
orb
lret
xchg
sub
push
das
xor
int3
add
into
clc
adc
enter
std
je
pop
out
mov
flds
jnp
fdivrp
js
xor
int3
in
or
add
in
mov
xchg
in
andb
lret
inc
cmc
popa
push
sub
sti
push
pop
arpl
hlt
idivb
xor
xchg
jge
ss
pop
cmpsb
push
pop
dec
sbb
nop
adc
xchg
pop
aas
lock
test
lahf
enter
test
test
push
test
leave
and
lods
jb
addr16
pop
adc
jb
imul
rsm
pop
and
gs
inc
aaa
lds
inc
jne
in
jbe
or
shrb
test
lock
stc
daa
rolb
sahf
xlat
daa
loopne
imul
sub
or
push
std
sub
flds
mov
fistps
jle
cmpsb
mov
cmp
dec
pop
dec
sbb
daa
popf
xchg
fcoms
scas
sahf
mov
xchg
sbb
inc
mov
cmpsl
push
ret
mov
inc
lret
jg
shrl
mov
sbb
fdivl
adc
divl
testl
push
test
sti
movsl
stos
mov
xlat
lcall
hlt
outsb
inc
mov
xlat
dec
xlat
and
jno
fwait
pop
test
popf
jmp
inc
outsb
into
icebp
pop
push
pop
out
and
into
cmpsl
jmp
leave
mov
fcom
xchg
inc
aad
shr
scas
and
repnz
and
test
in
push
movb
test
lock
movsl
jno
cs
mov
add
mov
xchg
push
movsb
inc
imul
cltd
cld
jbe
mov
mov
pop
in
lahf
push
lcall
es
lret
jae
incl
mov
cli
push
add
ja
or
leave
mov
stos
xchg
adc
pop
add
mov
jmp
jmp
push
outsl
inc
lods
jb
das
mov
enter
dec
sub
call
adc
je
push
push
pop
xchg
cmp
in
mov
push
or
jae
dec
mov
mov
daa
xor
or
adc
push
sbb
push
out
xchg
fucomp
cmp
mov
cld
mov
daa
sti
or
call
inc
imul
xchg
sbb
rcll
daa
clc
cmp
aam
mov
add
add
dec
test
jb
adc
or
xor
pop
stos
adc
and
sub
add
cmc
pusha
arpl
xchg
ds
adc
jo
mov
sub
jno
mov
test
dec
scas
and
out
dec
out
cli
mov
jb
sbb
sub
jo
push
cli
js
stos
mov
push
imul
int
cmp
sub
aas
jns
push
stos
scas
sbb
inc
mov
movsl
test
lods
jne
push
or
inc
daa
jge
inc
jnp
adc
adc
dec
mov
mov
aad
jmp
lcall
ljmp
cmp
das
jecxz
aaa
lret
push
movsb
ss
fisttps
iret
mov
and
imul
fldcw
ja
xchg
and
sub
mov
ret
jno
out
jno
loope
mov
mov
icebp
sub
testl
cmpl
add
int3
bound
test
decb
shr
rcll
fistps
or
cli
xor
xchg
and
dec
xchg
mov
lret
push
pop
and
cmp
cli
lahf
dec
mov
clc
mov
lods
out
pop
ficoms
push
pop
jle
xor
ss
push
or
ss
sub
fistpll
or
push
clc
lea
lea
jge
dec
dec
sub
rcrl
jmp
jo
ror
pop
scas
jp
mul
insl
sub
push
pop
cmp
inc
push
sbb
pop
arpl
add
insl
pushf
inc
int
and
or
inc
adc
inc
int
cld
lahf
std
xor
mov
mov
jle
out
adc
xor
sbb
jns
cs
mov
std
fstp
inc
adc
pop
sub
fildl
mov
sbb
push
add
push
ret
lock
sbb
adc
pop
pop
push
fscale
out
mov
pop
add
cmp
loopne
or
cmpsl
ret
clc
add
jb
sub
mov
push
dec
fildl
pop
pop
adc
mov
adc
push
push
dec
into
push
cltd
fwait
sbb
repnz
push
xor
push
mov
mov
test
lea
negl
push
arpl
sbbb
and
fildll
inc
test
test
cmp
stc
stc
iret
das
push
pop
jl
pop
fldl
movsb
add
lcall
popf
jecxz
mov
pop
sar
test
adc
rcll
jg
xchg
mov
cli
icebp
sub
cmpsb
mov
pop
movsb
jns
add
mov
push
gs
push
outsl
xchg
ds
stc
xchg
xor
jne
dec
roll
sub
jns
dec
push
filds
lods
fs
or
ja
or
push
xor
adc
pop
test
mov
inc
adc
cld
cs
fwait
sbb
insl
mov
in
iret
mov
lea
femms
rep
mov
and
xor
cmp
int3
lods
adc
push
movsb
inc
movsl
lret
lret
stc
mov
push
ret
jmp
pushf
mov
mov
and
inc
repnz
arpl
pushf
pop
lret
int3
push
les
adc
aam
push
add
inc
sub
mov
mov
mov
sbb
les
add
dec
aaa
mov
enter
int
cmp
xorl
xchg
dec
lahf
mov
stos
mov
cmpsb
mov
imul
push
push
cmpl
add
daa
gs
imul
std
and
xchg
mov
mov
mov
inc
test
sbb
push
cld
or
dec
fwait
jnp
subb
inc
jno
and
jmp
test
dec
push
roll
lock
repz
fidivs
sub
sub
mov
in
cmp
pop
mov
xchg
or
inc
mov
jle
jl
loopne
lcall
xorl
push
xchg
sbb
mov
pop
sub
push
and
pop
clc
sub
xor
or
test
daa
sahf
shl
push
jle
out
sbb
xor
adc
lcall
add
and
cmp
cltd
mov
mov
mov
mov
inc
outsb
pop
iret
dec
lea
inc
mov
inc
push
shrl
push
pop
out
icebp
mov
add
sub
mov
push
scas
and
dec
xor
xor
lea
xchg
dec
cmp
xchg
mov
cmc
dec
call
push
dec
xor
and
sub
in
mov
and
idivb
push
inc
bound
fwait
xchg
stos
iret
add
nop
or
xchg
in
sub
push
outsb
inc
jle
push
sub
inc
ret
mov
xor
and
add
js
js
jmp
loope
arpl
inc
mov
push
int
add
inc
xchg
mov
or
data16
xchg
and
popf
sbb
adc
icebp
adc
jbe
fmuls
stos
xchg
shr
sub
nop
andl
jp
mov
push
add
mov
jmp
or
or
out
pop
fwait
out
movl
mov
call
shl
xchg
cmovbe
or
mov
inc
inc
cwtl
into
inc
jbe
jb
in
push
cmc
cmp
ss
jge
jnp
xor
lods
test
push
dec
int
inc
xchg
mov
test
lea
or
lods
lahf
lock
sbb
xchg
stos
repnz
lods
adc
subl
jae
imul
pop
movsb
lea
mov
cmp
xor
push
lcall
and
roll
jg
ljmp
lahf
pop
fiaddl
cmp
rorl
sub
xchg
push
lret
sbb
addl
push
aas
fcoms
aaa
scas
hlt
xor
out
xor
dec
cmc
xor
lock
iret
xlat
pusha
fdivrs
fdivrl
mov
dec
sub
stos
adc
int3
dec
in
rolb
jno
push
mov
adc
mov
xchg
mov
add
aas
movsl
push
out
stc
ret
sti
repz
add
dec
aad
push
out
fs
jge
sub
jo
outsl
sub
mov
sbb
outsl
je
mov
out
repnz
jo
cmp
stos
or
cli
xor
std
xor
cmpsb
std
rolb
rcr
jmp
lock
je
sbb
fildll
mov
and
les
scas
test
cmp
mov
pop
popf
ljmp
inc
test
icebp
daa
add
sub
aad
mov
xor
sbb
add
mov
dec
test
jae
ret
cs
xchg
je
nop
or
add
das
adc
mov
xlat
scas
push
jmp
outsb
les
aam
dec
mov
push
jne
inc
rcrl
mov
sbb
push
add
mov
jb
in
out
sub
mov
adc
js
push
mov
xor
mov
cmp
push
cwtl
add
dec
je
loope
or
popf
mov
push
mov
rclb
inc
sbb
insl
cld
pop
lock
icebp
adc
or
and
loopne
aad
test
xchg
sbb
xchg
cmp
push
or
add
outsl
mov
cwtl
sub
insl
jle
cmp
in
jb
push
sbb
lcall
mov
mov
push
jae
loop
pushf
xor
jmp
cmpsb
jmp
pop
lahf
cltd
xchg
imul
loope
std
in
negb
mov
outsl
mov
inc
inc
ljmp
fbld
sbb
dec
bound
pop
loope
sbb
stos
in
sub
ss
mov
jecxz
sbb
imul
loop
add
jecxz
add
inc
adc
mov
jmp
mov
dec
sbb
inc
les
inc
sub
fildll
lods
enter
push
in
test
cld
xchg
shlb
and
test
jno
arpl
mov
fldcw
inc
mov
and
dec
jmp
rclb
sbb
in
insb
push
xchg
sahf
gs
mov
aad
pop
in
mov
shll
push
xchg
hlt
aaa
stos
lods
mov
pushf
pusha
jo
xchg
test
mov
aas
fcmovbe
sub
cmp
xchg
cwtl
mov
sub
or
xor
lret
dec
dec
dec
adc
push
rolb
pop
fs
xchg
cwtl
cmc
mov
stc
mov
adc
sub
jg
push
inc
stos
sbb
xadd
push
xchg
loop
stos
mov
aaa
outsb
loopne
fstp
clc
icebp
in
or
cmc
add
fnstcw
xchg
mov
mov
fwait
sbb
pop
fcoms
movsb
adc
sub
xchg
sub
sub
mov
xchg
sub
mov
sbbl
sbb
mov
pop
jp
jmp
insb
add
in
lods
cmpsl
sub
pop
sbb
arpl
jecxz
adc
or
int
mov
lods
mov
pop
std
popa
push
mov
push
push
leave
call
test
and
ret
sub
cmpsb
pop
push
mov
xchg
add
inc
jbe,pt
shll
fwait
sbb
mov
ja
out
sbb
push
xchg
orl
rcll
cmpsl
ret
push
xlat
test
in
xchg
into
and
out
fwait
outsb
adc
shl
pop
jo
iret
xor
cmp
cld
cli
sarl
xchg
mov
dec
in
cmp
mov
int3
inc
adc
lahf
sub
and
in
rcrl
je
jp
lcall
add
add
mov
or
push
out
mov
lea
pop
scas
dec
add
aaa
outsl
in
ss
mov
insl
aad
dec
in
loopne
scas
cmc
fldpi
jmp
adc
xor
gs
jge
or
hlt
jl
fdiv
mov
pop
add
xor
sub
loope
sbb
xor
inc
lahf
sbb
pop
push
cld
cmp
mov
dec
add
add
arpl
ret
push
movsb
fdivrl
addl
fists
cmp
jno
push
leave
xor
sahf
movsl
sub
adc
xor
mov
inc
cli
inc
mov
add
jg
pop
or
lret
sbb
pop
insb
xor
in
jge
lret
rorb
mov
adcl
icebp
scas
mov
sahf
mov
mov
jl
inc
mov
call
mov
inc
loopne
ror
stos
pusha
popa
pop
pextrw
aaa
mov
ss
adc
pop
mov
jnp
stos
pop
mov
repz
outsb
cmp
aaa
in
pop
xchg
ret
mov
pushf
adc
ljmp
jb
add
push
loop
hlt
arpl
cltd
jge
leave
mov
test
std
sbb
aad
dec
lock
enter
addl
div
sub
xlat
jge
shlb
outsb
rcrl
jmp
jae
add
pop
jb
cmp
in
dec
dec
std
cmc
lret
imul
push
je
pushf
pop
and
in
cmp
push
pop
pusha
push
or
pop
cwtl
jo
shlb
ja
sub
push
adc
fwait
inc
sbb
mov
mov
inc
mov
and
mov
add
pusha
iret
shrl
mov
add
lret
mov
cmpsl
mov
pop
xchg
insb
std
xchg
in
xchg
icebp
adc
mov
cmp
mov
push
add
mov
sti
push
std
aas
mov
cmpsb
dec
pop
add
imul
pop
lret
mov
jbe
cmp
es
sbb
daa
fistl
fidivl
mov
scas
lods
fdivrl
lret
jp
cli
xor
ret
aas
into
push
dec
pop
adcb
dec
sti
push
movsb
dec
stos
inc
ret
ret
rclb
push
pop
dec
adc
int3
mov
or
sbb
shll
jge
adc
outsb
out
stc
inc
jge
popa
push
es
std
push
push
add
je
xchg
sbb
js
dec
adc
into
or
loopne
mov
sub
rcrl
lahf
cmp
out
inc
and
xor
in
rolb
repz
dec
sbbb
jno
insb
pop
ret
rolb
in
push
pop
int3
sub
jns
jne
jge
stos
cld
inc
nop
mov
dec
sbb
and
xchg
in
in
pop
pop
push
pop
jge
aad
imul
lods
adc
idivl
xor
sbb
cmc
xor
mov
or
stc
xchg
sbb
jae
pop
fidivrl
push
pop
xchg
sub
sbb
faddl
shll
inc
and
inc
push
mov
das
mov
inc
out
dec
arpl
add
sbb
and
shll
loopne
jp
ljmp
jns
cwtl
xchg
dec
mov
mov
jae
and
xchg
pop
imul
xchg
lods
fistpll
or
test
popf
sti
clc
dec
push
data16
out
pop
in
jp
sbbb
xchg
out
movsb
pop
mov
dec
sbb
in
mov
movsl
into
dec
cltd
out
ror
jle
sbb
mov
cmpsb
ret
in
push
or
and
rorb
pop
inc
fidivrl
jl
mov
insb
dec
out
sbb
push
mov
add
xchg
in
xor
cld
out
cli
cmc
push
add
mov
data16
out
es
add
stos
inc
dec
shlb
mov
or
je
movsb
pusha
shrl
or
je
scas
sbb
adc
pop
fcompl
sub
scas
test
adc
bound
pop
xchg
and
jl
xchg
mov
ss
mov
mov
sub
test
outsl
pop
movsb
loopne
mov
sbb
sub
icebp
addl
int
mov
and
scas
out
imul
ret
mov
sub
xlat
pop
mov
adcb
pop
int
mov
lret
mov
dec
in
sub
pop
add
scas
xchg
mov
sbb
int3
inc
lock
ds
inc
jle,pt
mov
pop
jg
xor
add
dec
inc
inc
mov
inc
or
sbb
addl
cmc
add
lock
jle
scas
sub
jno
push
xchg
mov
out
popf
sbb
ret
jecxz
nop
stc
or
and
jnp
cmp
xor
ret
mov
repz
inc
pusha
test
ss
dec
mov
out
rcl
imul
xchg
inc
es
fisubl
sub
mov
data16
adc
xchg
and
cmp
pop
arpl
jge
aad
bound
lcall
mov
sti
xor
inc
jecxz
add
and
cmp
sub
xor
jl
and
repnz
xchg
mov
loop
xor
fistl
je
outsb
xor
jecxz
cmpsb
and
arpl
gs
pop
mov
pusha
sub
dec
xabort
ja
in
movsb
xchg
xorl
repz
das
push
xor
lret
in
lcall
mov
out
pushf
cmp
movsl
outsb
dec
out
bound
arpl
cwtl
fsubs
xor
fwait
lcall
sbb
pop
sti
add
cld
test
out
and
jno
aaa
pop
lret
outsb
inc
arpl
sbb
inc
nop
or
cmpb
and
loop
std
nop
imul
mov
push
incl
mov
jecxz
in
push
in
mov
movl
leave
cmc
cmpsb
jle
push
dec
dec
adc
dec
sbb
test
hlt
jns
vpshaw
sub
test
mov
psrlw
xor
xor
ljmp
cli
dec
jae
jmp
xchg
xchg
lods
jge
sbb
add
addb
pop
scas
fucomip
pushf
fs
dec
mov
mov
pop
test
adc
push
stos
pop
sub
mov
lret
inc
incb
mov
push
imul
rorl
out
or
adc
mov
xor
pusha
int3
in
in
push
out
ja
push
gs
adc
xchg
jg
jg
add
ljmp
inc
inc
int3
in
in
xor
add
imul
stos
jg
pop
aad
xor
daa
push
inc
pop
sub
or
mov
pop
dec
xor
fnstcw
repz
loopne
stos
push
loop
ficomps
js
sti
add
cmpsl
repz
cmp
movsb
xchg
cmp
dec
divb
ss
mov
ja
cmp
xor
sbb
or
jmp
jmp
mov
gs
cltd
lods
aas
lret
jmp
inc
mov
cli
outsl
sbb
and
test
mov
lea
dec
adc
subb
cmp
inc
cli
mov
and
fisubs
pusha
adc
icebp
mov
add
out
ds
imul
test
mov
mov
inc
mov
dec
jmp
call
aas
in
inc
pop
in
and
mov
mov
push
inc
mov
inc
and
mov
js
jl
movsl
xor
inc
and
out
mov
mov
cld
and
inc
lahf
inc
dec
inc
nop
ret
leave
loope
les
cwtl
aas
outsb
and
push
into
inc
mov
daa
adc
xor
push
xchg
mov
rcrb
sti
or
xor
add
add
jns
stos
sbb
mov
ljmp
subb
pop
lock
dec
stos
ret
jl
aaa
in
lret
negl
out
bt
movsb
inc
nop
xchg
mov
fstp
or
jecxz
jbe
adc
outsb
inc
in
push
jecxz
rcrl
push
mov
insl
jo
jle
cmp
add
jmp
inc
adc
cwtl
std
clc
or
fimuls
int
movlps
jne
xchg
test
adc
das
lahf
push
mov
sub
mov
repnz
adc
lahf
or
bnd
test
xchg
sti
lcall
xchg
aam
insl
sbb
sahf
or
nop
addr16
scas
lahf
cmp
jg
xchg
sub
sub
mov
rolb
mov
sbb
andb
mov
mulb
ds
sbb
jge
adc
push
fadds
or
push
divl
gs
adc
dec
repnz
rol
and
shlb
movsl
jge
push
lea
insb
sbb
loopne
fdivrp
add
mov
pop
push
or
repnz
std
lahf
pop
and
or
stos
pop
inc
mov
test
pcmpgtw
mov
shll
or
push
imul
mov
gs
cmpsl
or
lret
and
jns
fcoms
cs
cmp
xor
mov
mov
or
mov
shrb
hlt
aam
shl
dec
std
fwait
in
xor
jae
rclb
cmp
dec
fwait
mov
and
sbb
cwtl
pushf
xor
movsl
xchg
unpcklps
ret
sbb
test
mov
pop
fdivrs
ret
mov
cli
mov
jb
cmpsb
cmp
pop
lods
aaa
and
jns
scas
ljmp
into
push
inc
out
stos
mov
mov
jno
enter
push
imul
sub
test
bound
push
fnstenv
fists
fidivrs
pop
fcmovb
jle
xchg
mov
enter
loop
outsl
sti
sub
icebp
push
outsl
xor
fildll
jno
fcompl
pop
mov
cmp
shl
mov
adc
iret
push
pusha
pop
cmp
cmp
mulb
ja
dec
lds
es
push
pop
or
push
mov
ja
mov
push
cmp
cmp
ja
jns
mov
and
xchg
adc
daa
fimuls
cmp
test
jg
hlt
dec
add
adc
out
jae
mov
cmp
push
mov
incl
or
dec
mov
daa
ljmp
leave
lods
in
add
and
data16
hlt
popf
cmp
dec
enter
aad
cmp
fidivl
pop
cmc
sub
sub
arpl
shll
pop
inc
jo
cmpsb
movsl
inc
xchg
in
and
inc
adc
or
sbb
stos
movsl
mov
inc
stos
mov
rolb
int3
cmp
idivl
sub
int
sub
or
mov
xchg
push
ja
mov
aaa
hlt
das
pusha
pop
loope
xchg
xor
in
pop
repnz
lcall
incl
xchg
push
sub
inc
mov
push
pop
cli
jl
mov
push
int
aaa
cmpsb
iret
add
sub
push
xchg
cmp
xor
mov
jns
fwait
std
fcompl
and
jg
push
je
lret
out
jbe
popl
bound
push
popf
repnz
scas
imul
shr
sbb
mov
mov
cmc
pop
das
out
lods
inc
test
in
es
cmp
mov
mov
xor
sahf
cld
xor
aas
lods
es
sti
mov
dec
cmp
fstpt
imul
les
or
std
mov
push
arpl
xchg
mov
and
jae
std
xor
ds
pop
adc
cmpsb
lods
adc
mov
cltd
fidivl
mov
mov
inc
es
je
dec
lret
loopne
xchg
pop
jb
lahf
cmpl
sti
inc
js
cltd
movsl
sub
imul
imul
lods
jmp
add
mov
rcrb
shlb
ret
out
adc
push
call
pop
stos
jp
adc
mov
sbb
add
pop
shlb
loop
mov
xchg
mov
addl
mov
pop
sub
xor
xlat
pop
test
mov
cmp
xchg
dec
adc
gs
adc
dec
lahf
clc
xchg
dec
frstor
mov
jge
ljmp
add
pop
cmc
test
icebp
sub
test
sub
dec
mov
push
pop
sarb
js
fwait
adc
or
jecxz
pushf
enter
in
lahf
push
mov
inc
out
clc
sbb
pop
cltd
or
negb
cmp
insl
icebp
adc
jmp
xor
jp
sub
sbb
inc
aas
jo
out
sub
xchg
iret
out
mov
push
movsl
outsb
jae
mov
sarl
gs
mov
jmp
mov
icebp
iret
pop
push
int
cmp
std
lods
or
mov
testb
adc
testb
leave
int
add
adc
push
das
call
icebp
jb
adc
imul
push
lods
test
push
dec
add
xchg
or
cltd
mov
pop
push
jmp
pop
test
pop
aad
xchg
mov
pop
sub
jno
cmpsl
cli
push
rorb
pop
flds
bound
or
inc
mov
aad
ja,pt
sti
pop
xor
cli
add
test
xchg
jb
outsb
dec
mov
arpl
xor
dec
sub
xlat
mov
cmp
test
pop
sub
mov
sub
push
cmc
mov
and
sub
push
push
dec
ret
pop
xor
rclb
mov
sub
lret
sbb
adc
mov
in
push
mov
mov
sub
cmpsl
call
inc
cmc
mov
js
ss
lcall
fimuls
mov
cmp
orl
inc
test
push
das
cmp
xchg
fdivrp
sub
lret
push
jb
aas
imul
aad
cmpsb
push
inc
jle
scas
test
pop
outsb
pop
xor
ss
dec
pop
lods
adcb
pop
mov
fs
push
jbe
in
pop
lock
add
add
push
js
fadd
enter
and
xor
insb
dec
je
push
into
pop
dec
jmp
ljmp
in
cwtl
xor
test
lcall
js
loop
lret
bound
ret
cmpl
sbb
lods
push
push
in
jb
fsubl
mov
enter
and
cmp
inc
push
xor
add
and
in
dec
outsb
and
cmp
es
sarb
pop
xor
sahf
enter
mov
pop
and
rclb
cmp
add
push
xchg
xchg
add
negb
mov
in
call
lahf
dec
popa
sbb
xchg
fs
nop
cmp
fsubs
neg
mov
mov
sbb
ds
jmp
sbb
cld
pop
jnp
insb
negb
xchg
jmp
aam
rclb
jp,pt
xchg
test
call
sub
xchg
and
orl
xor
sub
jecxz
shlb
fmull
outsb
bound
sub
cmp
mov
cmp
jmp
ljmp
dec
dec
dec
xor
jecxz
out
sarl
mov
fcomp
inc
notl
or
repnz
cli
sub
sub
mov
adc
inc
push
mov
jl
mov
xchg
pop
jno
add
rorb
mov
jnp
jmp
ss
cli
je
pop
adc
les
mov
pop
or
das
cmpsl
mov
lcall
pop
jl
sub
xchg
ljmp
jle
pop
mov
leave
out
sub
lock
xchg
cmpsb
popf
mov
rorb
push
or
in
jmp
xchg
jb
dec
xchg
push
shll
push
xchg
arpl
inc
aam
pop
outsl
je
mov
or
jne
frstor
shrl
sub
cmpsb
sbb
or
es
dec
in
mov
cmp
sub
inc
popa
and
or
add
pop
mov
mov
btr
sub
jge
mov
mov
in
adc
movsb
xor
outsb
dec
stos
cs
hlt
iret
or
idivl
icebp
cs
xor
jne
mov
repnz
loope
cmp
jl
mov
int
sub
lret
add
pop
andb
sbb
inc
push
add
ret
into
mov
sbb
pop
jbe
jle
mov
dec
sti
pop
xchg
jns
ficompl
xchg
xor
bound
scas
das
xor
push
fildl
mov
inc
dec
xchg
lcall
mov
outsb
mov
inc
jge
stos
dec
push
push
nop
out
mov
cmp
sbb
jg
cmp
mov
xchg
aas
xchg
shll
jg
fldcw
stos
and
and
or
lret
jecxz
imulb
xchg
movsb
mov
mov
pop
repz
xor
push
stos
out
sbb
and
clc
cmp
pop
in
fidivrl
dec
dec
insl
push
pop
xchg
adc
mov
cmp
fisubrs
adc
pop
xchg
inc
loop
xor
push
lahf
icebp
pop
pop
nop
add
inc
nop
mov
sub
addr16
sti
and
scas
jmp
or
jp
lret
mov
push
sbb
pop
mov
cmp
pop
das
cmc
mov
in
and
repnz
popf
ja
subl
ret
and
loope
jmp
js
mov
addl
aaa
maskmovq
notl
aam
ret
lods
or
jecxz
int
inc
je
sub
inc
inc
es
xor
loope
jecxz
xchg
and
jp
inc
imul
push
cmp
test
jle
iret
mov
xor
repz
inc
sbb
mov
xor
aaa
jno
in
lea
jbe
xchg
call
push
jle
ljmp
adc
sub
aad
dec
pushf
add
repz
or
mov
xchg
in
inc
bound
mov
push
lock
adc
xor
xchg
and
mov
xchg
in
xor
pop
aam
adc
mov
dec
lock
lcall
int3
stos
dec
ss
pusha
cmpsl
inc
or
or
loope
int
icebp
fwait
lods
shrl
push
popa
inc
repz
rol
nop
adc
xchg
xchg
lock
ss
cwtl
or
push
pop
mov
lds
mov
or
data16
jg
push
aaa
repz
fiadds
jg
mov
insl
xchg
and
dec
test
push
lock
addr16
bnd
push
movsl
add
insb
mov
cmp
daa
cmp
movsl
sub
jp
ret
dec
dec
korw
mov
cltd
cmp
xor
pop
pop
sbb
dec
mov
shll
loop
jbe
lea
out
sbb
dec
or
and
push
pushf
scas
jecxz
mov
jo
adc
sub
jmp
jecxz
inc
jb
cli
movsl
xchg
pushf
mulb
pusha
jmp
fidivrl
lock
aaa
movsl
ja
push
insb
xchg
filds
adc
mov
xor
stos
cld
jb
shrl
fsubrs
inc
xlat
je
in
aaa
clc
cmp
ficoml
outsb
out
mov
pop
mov
sbb
dec
dec
fsubs
insb
push
in
mov
mov
test
xchg
mov
aad
scas
sub
sub
mov
or
les
xor
sbb
in
xor
mov
mov
fistpll
adcl
adc
fbstp
push
ret
adc
in
sbb
pushf
fsub
cltd
mov
sub
sub
rol
mov
jp
dec
mov
xor
cltd
addb
xor
push
or
js
jbe
push
cli
jnp
cli
js
cmp
cld
xor
pop
push
cmpsb
mov
inc
test
mov
ljmp
mov
stos
or
cmpsb
rcrb
aad
add
or
in
cmpsl
push
imul
aas
pusha
mov
mov
ja
inc
sbb
pop
daa
into
cmpsb
mov
std
pextrw
mov
insb
mov
and
insb
or
jae
daa
daa
jmp
inc
cmp
fisubrs
insl
mov
paddusb
lods
mov
fdivl
ja
imul
and
test
sbb
inc
jnp
add
jne
flds
mov
leave
out
pop
mov
fists
movsl
loop
xor
and
and
pushf
leave
retw
sbb
icebp
int
cmpsl
iret
and
negl
jmp
mov
lahf
xchg
imul
push
jp
push
xchg
lret
jo
inc
cmpl
mov
out
bound
xchg
mov
xchg
cmpsb
fmuls
jnp
lock
or
dec
jnp
and
mov
mov
sub
xchg
xor
enter
hlt
mov
inc
jo
sbb
leave
add
mov
mov
hlt
sub
call
sub
dec
mov
sbb
and
push
sbb
xor
pop
mov
ret
cmp
push
stos
push
cmpsb
sahf
stos
and
imul
test
xchg
ss
mov
push
cs
adc
add
outsl
jg
or
or
mov
pop
inc
lret
jno
or
pusha
jle
push
in
pop
ds
pop
push
fstpt
mov
sar
and
insl
adc
lock
popa
sahf
pusha
push
dec
gs
lcall
xchg
jns
mov
fdivr
fdivrp
lods
shl
jg
aad
jae
test
mov
xchg
jae
out
push
imul
js
fxam
pop
jle
mov
stc
add
push
shlb
rcrb
pop
inc
dec
jb
and
nop
sbb
mov
sub
ljmp
ja
push
mov
das
outsl
xchg
mul
dec
aas
xchg
movsb
ja
jge
dec
out
add
aam
lret
int3
sar
ret
imul
jae
cwtl
push
jns
nop
in
repnz
dec
xchg
mov
cmpsb
mov
cmpsb
pop
nop
push
cmc
pop
mov
inc
or
pop
lea
jecxz
ss
sub
arpl
test
xchg
popf
push
pop
push
sub
pop
cltd
add
sar
push
sbbb
popa
cwtl
bound
lds
pop
and
push
ficompl
cs
push
dec
jmp
out
shr
mov
add
test
mov
out
mov
xor
bound
popf
cmpsl
lds
gs
xchg
je
sbb
mov
xchg
aas
adc
insb
addr16
adc
fdivl
sub
inc
or
mov
out
cmp
xor
mov
cmpsb
mov
fdivrl
cmpl
or
sub
js
mov
pop
mov
dec
outsb
in
dec
push
push
mov
loope
data16
xor
add
push
sub
outsl
fwait
inc
and
aam
rorb
leave
movb
bsr
lcall
mov
dec
gs
nop
mov
sbbb
rcll
es
jmp
enter
cltd
adc
mov
pop
out
jae
push
push
and
fcom
incb
inc
mov
lret
aas
daa
push
xchg
and
mov
addr16
mov
in
test
iret
push
push
or
stos
add
push
mov
pop
ss
insb
push
jg
xor
fnstsw
push
xchg
out
adc
push
in
xorb
jae
add
in
sbb
sub
dec
mov
aam
mov
cmp
jae
jecxz
pop
nop
push
adc
sbb
or
or
mov
popa
std
mov
inc
jns
scas
int3
push
fstpt
mov
imul
cmp
sbb
mov
xchg
adc
int
and
arpl
sub
insb
xor
out
jecxz
scas
pop
fbld
push
aas
insl
mov
decl
popf
push
sub
iret
push
dec
push
insl
push
int
inc
ss
mov
mov
aad
clc
insl
mov
jbe
dec
jns
mull
and
movsb
push
add
ficomps
inc
inc
jns
ja
stc
shlb
lret
sub
xor
sti
flds
jns
js
cmc
inc
xchg
adc
into
andb
ljmp
mov
testl
movsl
rcrl
std
mov
jne
cli
jmp
cmp
popa
fucom
in
adc
dec
jbe
mov
ds
mov
xchg
push
mov
leave
xor
sub
test
pop
cltd
mov
and
outsl
ja,pn
lds
pop
xor
imul
dec
movsl
jns
mov
in
sub
lods
sarb
adc
pop
mov
pop
je
jmp
daa
popf
push
push
mov
sbbl
or
cmc
sub
sbb
loopne
mov
out
iret
mov
fstpt
jmp
cwtl
je
cmpsl
pop
add
mov
fldl
mov
pop
push
loope
jno
sbb
push
inc
adc
push
mov
int
mov
lahf
push
dec
ja
jb
lods
mov
cli
lock
aad
jo,pn
mov
iret
push
and
xorl
sub
pop
imul
mov
hlt
lcall
sbb
in
sub
pop
gs
pop
mov
stos
popa
sub
pop
jle
push
push
dec
imul
cs
fistpll
lock
gs
popf
iret
in
mov
xchg
mov
dec
lods
xchg
sbb
cmp
sub
xor
loope
add
lahf
stc
pop
icebp
push
out
mov
push
out
mov
xor
fnstenv
mov
adc
mov
and
push
pushf
aam
inc
cs
cmpsb
adc
inc
jb
add
add
call
pop
insb
inc
jnp
into
clc
lods
mov
push
cltd
into
mov
scas
insl
sub
pop
xchg
adc
xlat
mov
push
js
test
popf
icebp
aas
sti
xchg
mov
or
cmp
scas
add
fdivs
sbb
divl
lea
mov
xor
ja
push
push
les
ret
and
add
push
aad
ficompl
sti
xor
pusha
out
push
pop
inc
adc
cltd
jle
and
and
insb
push
mov
push
xchg
sahf
jbe
test
out
into
lcall
insl
test
out
loopne
sbb
lods
sbb
pop
jmp
mov
jo
leave
push
mov
mov
or
sbb
push
cld
scas
ss
pop
mov
adc
jno
test
in
and
mov
popf
movl
jae
aas
sbb
pop
fidivrs
movsb
dec
dec
ljmp
hlt
add
sbb
dec
lds
aad
mov
pop
inc
fisubrl
sub
mov
dec
pop
outsl
mov
fstp
lahf
stc
int3
adc
in
pusha
stos
mov
or
sti
and
out
mov
jns
mov
rcr
mov
mov
jmp
inc
movsb
sbb
xchg
add
push
pushf
mov
enter
aad
dec
inc
jg
mov
orb
xchg
js
cmp
adc
sbb
je
mov
loop
ret
loope
js
pop
nopl
test
mov
sbb
jno
orb
jb
les
inc
addr16
in
xchg
out
sarb
stos
ret
jecxz
test
add
fldenv
push
lcall
push
push
clc
es
mov
inc
sub
lret
xor
scas
xchg
jb
pop
fcompl
daa
cli
mov
sahf
mull
push
jne
sarl
fnstcw
xchg
push
neg
jge
add
fwait
je
sti
cmc
and
adc
push
arpl
add
jne
int
xchg
pop
mov
in
adc
dec
inc
pusha
mov
jge
scas
test
mov
dec
ret
pop
icebp
into
inc
sub
mov
shlb
jg
pop
imul
ds
int3
sti
mov
mov
adc
xchg
leave
fdivp
fsubr
xor
mov
add
scas
cltd
sti
popa
fidivl
push
fst
imul
add
into
and
bound
mov
sub
sbb
cs
pop
out
insl
cmp
rol
aam
idiv
mov
scas
inc
adc
cmp
add
mov
cmp
lret
popa
insl
jl
mov
cmp
rorl
shrl
xchg
loope
rclb
mov
test
adc
xchg
gs
andb
mov
mov
mov
jae
add
filds
insb
xchg
xorl
fidivs
adc
xor
hlt
mov
sub
stc
decb
les
data16
shll
pop
xchg
cmp
mov
movsl
mov
clc
ljmp
mov
rorb
repz
fiadds
outsl
xchg
hlt
add
test
mov
hlt
lahf
jp
rorb
add
mov
adc
int
je
xor
cmp
movsl
rorb
jbe
add
pop
adc
shll
jo
cmp
mov
lds
dec
lcall
ja
cmp
mov
test
dec
sbb
aam
bound
xor
leave
stos
lret
lret
or
dec
sub
lcall
ret
and
xor
lret
or
or
stos
xchg
sub
mov
cmc
xchg
mov
adc
pop
into
cmp
xlat
xorl
icebp
xchg
pop
ljmp
jae
jmp
jb
add
jle
fildl
push
aaa
pop
adc
cltd
dec
cmpsb
insb
test
adc
test
or
out
scas
mov
xor
dec
inc
lock
std
lds
imul
incb
cwtl
fwait
pop
cmp
jp
js
lcall
add
into
cmpsb
js
stos
sarl
arpl
addl
daa
or
mov
sub
mov
dec
nop
jl
and
ret
movl
mov
out
inc
jecxz
cmpsl
stc
repz
mov
push
insl
mov
lock
insl
mov
mov
push
adc
cld
mov
push
cmp
bound
dec
xor
imul
or
pushf
mov
inc
cli
imul
mov
inc
xor
cmp
fadd
xor
test
adc
jne
jb
insb
les
push
les
inc
shll
out
and
pop
and
in
out
mov
mov
add
out
sub
inc
or
jle
mov
insb
clc
xor
jecxz
jo
fadd
js
add
in
je
adc
sti
xchg
stos
and
ljmp
jmp
mov
cmp
xor
add
ret
aaa
stc
dec
jg
sub
mov
inc
jnp
xor
in
popl
in
shl
or
pop
adc
inc
dec
andl
xor
fs
inc
iret
arpl
mov
push
sahf
mov
fwait
xchg
pop
fdivl
pop
or
pop
out
imul
roll
cmp
cmp
mov
sbb
pop
mov
mov
ss
andl
ror
cmp
cli
idivl
or
dec
lret
xchg
cld
or
movsb
cmp
sarb
rol
pop
insb
push
mov
push
mov
iret
stc
sub
and
jmp
pop
push
jne
pop
inc
xchg
hlt
mov
pop
mov
sbb
ljmp
movsb
add
negb
sub
add
add
mulb
cld
mov
inc
mov
add
sbb
mov
out
in
je
sub
inc
inc
sub
es
das
in
shl
jl
repnz
pop
outsb
xchg
inc
sbb
or
or
lahf
sbb
dec
mov
mov
cmp
jl
arpl
mov
sub
pavgb
lcall
pusha
jns
cmp
jl
xchg
inc
sti
jl
sbb
popf
lret
push
jbe
jae
fs
movsb
mov
fsubrp
arpl
dec
dec
sti
mov
sbb
lods
mov
mov
sbb
pop
repz
mov
xor
orl
fs
xor
fcoms
pop
pop
cmc
mov
jo
mov
aaa
inc
pop
xchg
adc
cmpsb
dec
xchg
lods
fstpl
sub
into
sbb
pop
cmpsl
jno
push
outsb
inc
and
idivl
pop
call
mov
mov
enter
int
adc
mov
xor
popa
imul
lcall
or
cmc
mov
and
movsb
imul
mov
mov
iret
inc
cmp
jbe
pop
mov
je
jns
mov
scas
lcall
mov
test
mov
xor
push
dec
dec
mov
pop
mov
and
sub
adc
dec
mov
xchg
pop
scas
popf
sbb
add
stos
mov
mov
xchg
push
inc
nop
jg
scas
jge
fistpll
rcrb
js
lcall
int
add
pop
stos
add
push
in
xchg
pushf
xchg
adc
imul
mov
scas
imul
and
sbb
fdivl
add
and
add
sbb
scas
mov
add
cltd
lods
mov
jmp
push
jb
adc
inc
adc
sbb
and
das
mov
loop
cmp
cmp
scas
test
push
inc
sahf
lret
imul
jg
movl
fwait
and
ret
and
pop
jmp
or
mov
je
cmp
out
insl
and
leave
leave
jmp
cmp
push
mov
sti
pop
adc
sub
mov
sbb
data16
push
aaa
dec
mov
fcomi
lret
es
call
jmp
push
out
cmpsb
insl
mov
cmc
sbb
sbb
add
jne
xor
cwtl
inc
xchg
xchg
and
je
xor
test
lods
jbe
imull
mov
mov
xor
cli
lock
mov
ljmp
pop
pop
pop
ljmp
scas
fnstcw
sbb
jb
scas
mov
icebp
mov
sub
int3
xor
mov
jno
fwait
clc
fisubl
jle
cs
fdivrs
dec
ret
xchg
lret
add
lock
cmc
lds
out
pop
push
mov
pop
ret
lock
scas
enter
xor
xlat
add
sbb
inc
fidivrs
push
and
cmp
cmp
mov
or
and
loopne
xchg
or
sub
cld
mov
out
and
lahf
icebp
adc
ret
mov
mov
push
jle
inc
adc
xlat
adc
xor
cli
inc
mov
jo
mov
inc
push
test
xchg
sbb
mov
adcl
pusha
jmp
sub
pop
mov
std
ds
outsb
jbe
pop
xlat
in
jecxz
mov
hlt
int3
inc
cltd
xlat
in
mov
leave
pop
pop
xor
popa
test
jb
nop
mov
bound
mov
arpl
repz
or
stos
sub
lea
lcall
jbe
pusha
lahf
jecxz
xor
lds
ljmp
adc
leave
lock
mov
cmp
mov
loopne
lea
cmpsl
testl
push
jae
mov
push
push
movsb
cmp
add
push
int
pop
imul
jno
clc
movsl
cltd
cmp
test
insl
pusha
adc
xor
out
into
inc
push
jl
std
push
in
cltd
pop
fbstp
fstps
cmc
xchg
push
jl
adc
mov
push
push
cmp
sti
or
out
scas
fidivrl
ret
pop
hlt
lds
sub
frstor
mov
dec
pushf
xchg
lcall
popf
pop
inc
dec
nop
xchg
mov
aaa
mov
hlt
fwait
aad
cs
pop
mov
xor
pushf
or
push
lahf
mov
xor
push
fwait
loop
mov
inc
sub
or
dec
dec
mov
iret
adc
inc
jle
pop
insb
lret
std
iret
fcoms
pop
add
push
pop
cld
inc
pop
fs
cmpsb
sub
xchg
movsl
into
inc
call
or
subl
mov
mov
or
hlt
inc
xchg
cmp
imul
popa
or
call
add
es
mov
popa
inc
adc
pop
push
pop
mov
adc
xchg
pop
test
fildll
add
dec
mov
xchg
shlb
pop
and
sub
mov
aam
inc
mov
sbb
rcrl
push
or
je
mov
push
fisubs
icebp
add
adc
dec
jne
mov
and
push
adc
pop
jae
mov
xor
sub
lock
or
or
repnz
mov
or
and
subb
js
jmp
push
stc
gs
mov
or
movsl
push
cwtl
cmpsb
fmul
mov
dec
cld
xor
jmp
jno
xlat
or
xchg
jl
stos
cmc
mov
lahf
out
imul
insb
sub
sahf
loopne
and
cmc
pusha
xchg
mov
ljmp
fdivl
jl
adc
ret
mov
cmpsb
ljmp
jb
jnp
loopne
lods
js
rolb
dec
cmp
fwait
mov
sub
clc
and
dec
in
sub
sahf
xorb
les
mov
sbbb
cmpb
cmp
das
icebp
out
repz
out
pop
lret
enter
gs
jns
push
adc
pop
lods
or
dec
dec
push
and
or
and
sub
shrl
insl
scas
mull
pop
les
into
xchg
fdivs
fdivl
in
incl
sub
ret
pop
cmpsl
mov
leave
dec
enter
jp
cmc
aaa
cwtl
jae
mov
dec
or
insb
in
push
pushf
fildl
in
in
inc
mov
mov
sti
test
out
movsb
sub
sti
xchg
inc
in
hlt
add
sub
and
in
es
push
and
dec
sub
pop
jae
mov
ret
sbb
adc
cwtl
cmp
loopne
push
adc
sbb
mov
pop
loope
sbbb
addl
mov
pushf
aad
jecxz,pn
jle
push
shr
mov
jl
insl
mov
add
or
push
out
imull
pop
xchg
pop
inc
stos
ds
add
cld
inc
jo
sub
cmp
loope,pt
mov
js
sbb
pop
fs
sti
repnz
cmp
xchg
stc
mov
xchg
xor
lahf
adc
xchg
xchg
icebp
stos
add
dec
movsl
pop
out
std
sbb
or
and
ret
cmpsl
test
stc
xor
jp
divl
sbb
mov
and
repz
xchg
mov
inc
push
mov
and
lea
and
in
xor
outsb
jle
adcl
je
out
dec
xor
mov
out
pop
jb
out
cmpsl
jne
lret
out
pusha
sbb
gs
icebp
test
mov
dec
or
clc
dec
stos
std
mov
jb
pop
jmp
pop
jne
fsubrs
out
aas
cmpsl
push
inc
adc
inc
lret
into
mov
pop
addb
shl
or
repnz
pop
ret
roll
aaa
push
cld
pop
mov
shll
mov
sub
or
cmpsl
rclb
jmp
mov
mov
mov
or
jl
jnp
jmp
or
pop
mov
lea
mov
or
dec
mov
xchg
add
and
push
jle
xchg
stc
jmp
leave
push
and
push
pop
mov
add
mov
arpl
pop
jns
xor
push
jl
stos
pop
push
fcoml
sti
pop
dec
xlat
and
add
jne
sbbw
in
cs
sub
push
or
out
sti
das
jle
dec
or
and
fsubl
scas
sbb
adc
sbb
xchg
pop
movsl
inc
outsb
mov
decb
jnp
in
inc
hlt
fisubs
jge
jb
push
dec
xor
daa
mov
iret
jle
mov
movsb
in
jo
sbb
popa
js
paddd
push
sbb
insb
stos
lods
or
or
into
fidivrl
dec
mov
add
lods
int3
jb
sarl
int
stos
movsb
dec
ss
jno
movsl
cmpsl
or
ss
adc
iret
cltd
push
es
sub
cmp
sti
cld
add
mov
sbb
mov
mov
mov
rclb
xchg
repz
push
ss
sbb
jmp
xor
cmp
or
pushf
mov
add
push
cmc
pop
add
imul
push
push
js
std
jge
fidivl
ss
and
and
jnp
mov
call
mov
dec
insb
inc
push
cmp
fbld
add
daa
ss
dec
insb
cwtl
test
cld
repz
call
cli
jg
pop
or
int
daa
push
aam
mov
icebp
int
sub
and
add
xor
xor
sbb
fnstenv
popl
pushfw
sbb
jnp
and
cmpl
push
mov
dec
shl
jle
movsl
loopne
mov
out
jns
dec
cli
dec
push
xorl
jns
mov
or
adc
mov
jno
pop
lcall
mov
or
push
movsb
lcall
sbb
xchg
cld
cmp
xchg
inc
aaa
or
cmc
lcall
vpmacssdd
xor
leave
repnz
mov
pusha
clc
daa
xchg
sub
in
inc
mov
mov
leave
daa
out
jl
or
es
inc
mov
repz
repz
arpl
jae
sbb
cs
sub
and
mov
mov
pop
mov
jge
sub
sub
mov
addb
xchg
mov
cli
jb
xor
sarb
sbb
fstpl
iret
daa
sbbb
mov
movsb
lods
mov
iret
and
xor
pop
rcr
mov
dec
mov
ja
in
mov
add
xlat
jnp
loop
js
les
mov
ljmp
enter
lock
adc
mov
jae
dec
fs
into
pop
sbb
test
test
inc
mov
cmp
insb
repnz
movsb
mov
lds
dec
andl
sub
fildll
mov
mov
adc
mov
push
sbbl
cmp
cmpsl
xor
mov
lock
push
pop
sub
jno
es
rolb
mov
or
inc
xchg
cmc
sub
cs
jno
leave
test
int3
mov
fiadds
mov
sub
adc
xlat
pop
ljmp
jecxz
adc
lea
call
sbbl
dec
leave
std
jge
dec
imul
lods
ret
xchg
inc
push
jg
pop
subb
stc
sti
hlt
cmp
jno
dec
testb
jmp
or
ja
adc
mov
stc
push
mov
dec
lock
movsb
xor
jb
adc
inc
add
popa
gs
mov
bound
es
fistpll
call
push
and
adc
jne
add
lcall
mov
idivb
das
and
pop
mov
add
movsl
jbe
pop
repz
cmpsb
mov
inc
mov
add
xchg
movsb
jge
or
movsbl
rorl
lods
dec
shlb
frstor
jns
mov
les
pop
cld
fnop
test
mov
jmp
pop
sbb
pop
jge
mov
pop
pushf
sub
jge
test
jne
cld
popa
mov
sahf
sbb
jb
dec
sub
pop
mov
jnp
aam
pop
rolb
inc
dec
lahf
and
jle
sti
pusha
or
pop
jo
in
adc
cmc
cld
and
cltd
mov
lds
insb
cmc
jmp
ds
loope
xchg
jnp
repz
sbb
cld
sbb
pop
popf
push
mov
dec
jns
std
out
int
insb
stos
lret
fwait
loop
inc
mov
push
mov
or
sti
test
cli
dec
mov
mov
loopne
fisubrl
xchg
mov
rcrb
xchg
aad
adc
jb
fbld
and
xchg
cmpsb
mull
outsb
imulb
lret
stc
push
rcrl
mov
lret
lahf
js
sub
add
mov
mov
test
add
mov
pop
sub
test
jg
inc
push
xchg
adc
testl
adc
pushf
mov
mov
ja
xor
lock
jmp
lock
int
aam
js
movsb
ds
int3
int
imul
sbb
pusha
xchg
in
lods
adc
and
fwait
aaa
cmp
fs
and
sub
imul
adc
fmuls
sub
inc
sbb
cmpsb
pop
divb
adc
aaa
sahf
ljmp
jnp
push
aad
jae,pn
inc
add
jno
sbb
xchg
gs
repnz
loope
test
fidivrl
mov
test
push
dec
jno
movsb
jb
and
adc
loope
lret
and
dec
and
in
jp
test
cmp
and
out
jge
mov
adc
inc
mov
cs
pop
pusha
mov
mov
mov
fmull
inc
popa
insb
push
mov
lods
push
mov
into
push
adc
in
and
mov
orl
mov
sarl
jbe
sbb
lds
cli
jns
push
sbb
inc
or
imul
add
sbb
lods
or
orl
adc
enter
bound
cmp
fwait
xor
aaa
and
out
cmpsl
int
mov
jae
mov
rol
and
adc
repz
cmp
jne
arpl
jne
jl
xlat
add
lahf
push
inc
inc
mov
lret
sub
loopne
dec
jbe
jmp
stos
jp
jae
xchg
or
es
cmpsb
add
sub
sub
out
ss
push
cmp
addr16
cmp
jg
dec
xchg
jnp
jne
pop
lcall
data16
xlat
or
out
lods
dec
pop
sub
xchg
mov
out
ret
rclb
mov
mov
push
jmp
sahf
das
mov
movsl
rorl
movsl
pusha
push
dec
mov
xor
ss
mov
hlt
push
sbb
pop
shl
ffree
ljmp
mov
lret
dec
dec
out
mov
iret
fcmovne
jne
mov
sarl
mov
fadds
pop
ret
inc
sbb
out
jl
dec
cmpsl
dec
cwtl
mov
mov
push
push
pop
enter
fdivrs
pop
lods
mov
add
xorl
mov
andl
fiadds
add
lock
in
pop
scas
outsl
pushf
push
cmp
ret
fsubp
dec
scas
add
mov
lcall
pop
mov
xchg
or
add
inc
clc
test
add
cwtl
jae
add
inc
pop
adc
lret
in
mov
mov
scas
adcb
bound
inc
sbb
shrb
scas
into
insl
cmp
in
mov
add
ja
rorl
nop
ljmp
out
push
inc
mov
add
shrb
cld
popa
inc
scas
aam
incl
mov
adc
dec
xor
adc
fildll
push
imulb
in
pop
jecxz
outsl
subb
ret
stc
and
push
mov
pop
and
in
dec
and
xchg
mov
adc
mov
inc
add
imul
rol
lock
jecxz
pop
fs
sbbb
push
or
icebp
mov
in
mov
adc
fcmovnbe
ret
dec
cmpsl
dec
adc
or
inc
ljmp
xchg
hlt
inc
lahf
lretw
fmuls
cmpsl
sbb
lods
rcl
out
pop
int3
jmp
mov
adc
and
xor
jmp
out
mov
fs
adc
mov
push
lahf
test
mov
sub
adc
mov
popa
enter
jb
mov
lahf
inc
pushf
je
xchg
jo
dec
jb
ss
sbb
xchg
js
push
fsubs
icebp
rorl
int
pop
outsl
cli
test
push
mov
jae
jne
pop
inc
xor
add
mov
sub
int
aad
dec
and
testl
mov
aad
imul
mov
push
sqrtps
imul
cwtl
stos
rdmsr
push
cld
xchg
popa
insl
sbb
lods
mov
xor
aam
pop
mov
imul
dec
xor
xor
jno
nop
jae
or
jnp
mov
adc
add
icebp
movsb
jb
dec
pop
lods
lret
lcall
aad
pushf
lret
ljmp
sti
adcl
inc
imul
xor
pop
mov
mov
mov
pop
repnz
std
mov
fldcw
cli
test
data16
push
dec
fdiv
cli
pop
sbb
sbb
divb
xchg
pop
xchg
mov
xor
enter
xchg
mov
pop
or
mov
add
fnstcw
stos
in
mov
out
cmpsl
push
subb
add
add
push
pop
daa
rcrl
gs
or
fs
sbb
jne
std
aam
jnp
mov
fisttpll
mov
insl
jecxz
int3
jmp
dec
fsubl
pop
xchg
xor
or
mov
enter
dec
mov
push
std
ljmp
or
cmc
insb
cmp
jle
test
add
adc
push
imul
in
mov
sub
into
jbe
sub
jae
add
and
pop
imul
gs
cmp
xchg
push
push
fsubrs
mov
or
sub
iret
in
pop
add
leave
jae
jl
jnp
hlt
xchg
sub
mov
inc
xor
cmp
xchg
and
adc
outsb
mov
mov
inc
xchg
fbstp
cmp
cwtl
cmp
mov
push
jecxz
adc
adc
ds
pop
nop
notl
sbb
in
aad
mov
mov
sbb
pop
out
mov
in
stos
rcll
stos
cmp
mov
mov
xor
stos
repz
push
pushf
leave
arpl
js
cmp
lods
jge
push
xor
cwtl
pop
cmp
jmp
dec
push
xor
ret
adc
or
les
xor
push
xor
sbb
jne
mov
icebp
bound
mov
decl
sbb
addr16
pop
xor
add
mov
test
movsb
jnp
shll
jmp
in
fisttpl
ret
cs
sub
xor
or
cmc
cld
cmp
cmp
xchg
dec
sti
aam
clc
rcl
cwtl
pusha
mov
ss
and
pop
sub
movsl
sbb
xor
test
aaa
imul
sbb
in
jae
mov
adc
rcrl
dec
push
cltd
xor
inc
mov
jo
popl
mov
jl
in
dec
xor
xor
xchg
push
jb
jge
loope
je
mov
in
jmp
ror
mov
stos
ficoml
fdivrl
add
lock
cli
cmp
and
fbstp
dec
icebp
scas
aad
std
loopne
xlat
and
in
cli
test
je
pop
dec
ficompl
add
sub
test
and
mov
pop
sbb
bound
insl
mov
dec
ret
adc
sub
rol
imul
xor
pushf
jge
mov
in
cmc
pop
call
lret
fimuls
xchg
mov
pop
xor
movsb
jbe
aaa
jnp
lods
mov
sbb
inc
movsl
sub
ficoml
lock
arpl
insl
cmp
or
and
ret
aam
insl
mov
cmpsb
cmp
ret
xchg
inc
ds
push
mov
pop
and
stos
cltd
pop
pop
push
les
stos
pusha
stos
xchg
fimuls
call
mov
pusha
mov
pop
mov
jge
mov
sti
into
dec
iret
lea
mov
cmc
mov
mov
ret
push
shll
xor
xchg
repnz
push
add
int3
pop
mov
mov
lahf
scas
fisubl
jmp
xchg
popa
ficomps
pop
adc
push
jp
xchg
push
add
push
dec
jb
aaa
sub
fucom
lcall
repnz
call
fwait
dec
cli
jnp
lods
add
sub
int3
add
pushf
sub
jae
fwait
imul
jnp
and
repnz
shr
sub
mov
mov
lret
sbb
jo
sti
dec
stc
jl
xchg
repnz
outsl
mov
mov
pop
and
lret
jl
imul
jge
bound
inc
inc
fadd
out
xor
ret
setnp
cmc
or
in
decb
push
cmpsl
iret
ret
lds
mov
test
out
add
stos
push
mov
and
push
nop
pop
adc
lcall
jecxz
mov
outsl
fstpt
fidivl
mov
inc
lcall
fcmovnbe
nop
cld
aam
lret
add
mov
or
xchg
adc
xlat
mov
jmp
fsubr
scas
cmpsl
pop
mov
xor
outsl
jl
andl
adcl
lea
sbb
inc
repnz
dec
pop
inc
sub
test
push
pop
cmp
aas
jge
mov
lods
dec
in
sbb
cmp
cmpsb
jmp
cmp
dec
xchg
mov
jb
rorb
sbb
js
lret
dec
xchg
or
daa
lods
lea
test
adc
sub
test
cmp
test
dec
popa
lods
test
lods
sbb
cmp
push
mov
sbb
xchg
stc
les
mov
imul
ror
mov
loop
lds
xchg
mov
push
mov
out
pop
repz
adc
in
sbb
dec
jno
lret
mov
imul
lods
test
addr16
lahf
xor
push
idivb
divb
cld
jbe
aam
mov
rcrb
mov
fidivrl
inc
shll
sub
push
shlb
stos
push
sub
adc
jecxz
inc
push
push
ds
fsubr
mov
dec
cld
pop
into
mov
inc
xchg
sub
adc
stos
int
cmp
dec
jecxz
lea
mov
inc
fistps
and
cs
cmp
jo
and
std
decb
jge
inc
cmp
jl
fnsaves
cmp
push
jecxz
xchg
sbb
psllw
fs
lcall
rolb
fstps
fwait
shlb
lea
leave
push
inc
add
hlt
xchg
xchg
clc
xchg
lret
insb
lods
mov
das
lock
scas
cmp
mov
pop
push
int3
mov
mov
add
shl
add
outsl
jp
inc
add
aaa
js
pusha
out
or
fbld
jns
iret
aad
scas
dec
mov
sbb
cmp
sub
add
jle
push
pop
icebp
add
out
pop
add
xor
repnz
rcl
int3
jmp
pop
add
dec
mov
jle
pop
xchg
nop
adc
es
pusha
loop
cmp
popf
push
jnp
es
cmp
les
aam
and
cmc
mov
lods
ja
mov
lods
xchg
xor
in
inc
scas
xchg
cwtl
mov
jmp
jb
xchg
lea
xchg
gs
int
mov
stc
dec
pop
xchg
addr16
lret
sahf
mov
xor
inc
pop
outsl
test
jno
call
sbb
fldln2
lahf
ja
iret
push
subb
push
into
clc
test
rclb
xorb
nop
arpl
leave
add
pop
fisubrs
add
push
stos
adc
push
dec
aas
addr16
fcompl
jae
sub
sahf
push
daa
mov
out
and
mov
inc
cmpsl
mov
les
push
inc
leave
xor
addr16
negl
out
ret
fcoms
pop
xchg
adc
cmp
cmc
push
out
cmc
push
clc
mov
sti
dec
fnstenv
pop
jmp
mulb
iret
arpl
jle
cmpsl
push
int
fimull
repz
inc
adc
loopne
int
mov
or
fildl
mov
xlat
les
inc
inc
cmpsb
sbb
jecxz
lds
hlt
test
movsb
push
icebp
ficoms
lock
aad
out
push
clc
adc
inc
lahf
inc
popf
mov
inc
or
popa
mov
jp
or
jle
jg
bound
adc
add
cmp
ret
adc
cmp
mov
push
mov
iret
jp
and
jge
mov
adc
sub
in
mov
ja
pop
sahf
lret
fucomi
lods
outsb
jo
xchg
lret
lea
in
push
mov
ret
dec
adc
cltd
stos
mov
sbb
xchg
dec
jg
xorb
leave
cmpsb
xor
ret
mov
sbb
enter
imul
out
push
loopne
push
cli
cltd
push
loop
cli
push
mov
cmp
adc
jp
mov
sub
xchg
in
dec
bound
icebp
dec
xor
leave
outsb
popf
push
clc
lock
push
or
and
gs
js
sbb
in
inc
ss
and
clc
sbb
js
xchg
pop
imul
jno
add
adc
mov
inc
xchg
loopne
push
sub
xchg
repnz
xchg
stos
adc
pop
push
mulb
nop
jo
jmp
popf
xchg
dec
in
and
loopne
dec
ret
mov
outsl
leave
cwtl
adc
mov
push
dec
fidivrl
mov
sbb
jg
jmp
cmp
mov
adc
xor
and
cmp
dec
popf
popa
fdivrs
pushf
inc
pusha
fsubr
out
lcall
ret
mov
cmp
ret
aad
cmp
lcall
inc
pop
pop
push
cmp
push
dec
push
fimuls
pop
repz
add
jns
out
dec
xchg
test
test
push
xchg
sahf
cld
add
or
mov
cmp
mov
mov
lret
mov
mov
ss
movb
mov
push
in
in
in
test
cmp
xor
sub
pop
add
mov
jmp
aas
lods
adc
and
or
lcall
sti
insl
mov
mov
jb
mov
and
popa
sarl
push
mov
fiaddl
xchg
imul
inc
cmp
lahf
xor
in
mov
clc
mov
insb
xor
pusha
movl
test
out
jb
lret
rcrl
in
sarl
sub
jmp
into
fdiv
aam
cmp
xor
xchg
xlat
popa
imul
or
inc
sbb
or
or
xor
movsb
ret
mov
ret
les
in
push
xchg
movsb
sub
inc
push
aas
out
adc
sarb
adc
ds
mov
out
inc
add
cltd
xchg
or
pop
mov
ret
ss
repz
dec
and
std
incb
xor
daa
jp
gs
mov
adc
nop
pop
mov
cmc
pop
mov
mov
bound
mov
pushf
sub
xchg
pushf
dec
sbb
mov
pop
ret
sahf
aaa
add
out
dec
daa
test
jo
push
sti
push
adc
or
jbe
inc
sbb
push
lahf
inc
bound
push
jo
in
add
ret
xchg
out
mov
ret
punpckldq
mov
arpl
out
mov
xchg
add
icebp
arpl
sub
shrb
insl
or
pusha
int3
div
ja
jnp
cmp
cmp
xor
sbb
mov
sbb
imul
mov
out
sbb
ds
inc
addr16
je
ss
sbb
xor
test
and
pop
push
pop
adcb
or
cltd
ret
sub
fucomp
adc
pop
dec
and
or
mov
fwait
hlt
int3
or
inc
fsubp
cmpsl
xchg
jnp
dec
bound
jo
xor
inc
fcomps
adc
push
cmp
movsl
inc
xor
xlat
and
push
outsb
cmp
adc
dec
or
dec
xchg
add
and
enter
adc
inc
ret
fstl
lret
cwtl
push
mov
mov
lods
mov
aam
divl
push
adc
ret
nop
imul
lcall
sub
out
sahf
mov
push
lsl
mov
pusha
xor
ja
mov
add
jae
or
mov
insb
add
mov
jg
les
mov
cmp
lcall
push
addb
das
ret
mov
add
out
idivl
call
xor
mov
addl
dec
cmp
daa
push
sbbl
std
add
sbb
cmp
test
cmp
sbb
cmp
clc
sub
lcall
leavew
mov
adc
xor
imul
stc
sbb
and
int3
pusha
adc
iret
daa
cmp
or
pmaddwd
lock
mov
in
push
xchg
add
fdivs
loop
add
adc
ds
push
out
jae
and
lret
popa
inc
or
les
fs
in
cmp
pop
stos
call
test
pop
xor
jl
mov
xchg
idivl
shl
into
rcrl
mov
push
shl
jbe
fimull
cmp
push
xchg
dec
cli
movsb
sub
enter
fidivrs
xor
push
js
int3
or
loope
decl
jmp
mov
xor
out
imul
pop
push
push
or
mov
ret
mov
lds
sti
pop
mov
movsb
daa
jne
cmp
cltd
mov
pusha
adc
ret
loop
nop
mulb
clc
fdivp
xor
scas
mov
xor
loopne
add
jmp
icebp
pushf
inc
jge
popa
xchg
mov
movsl
cmp
icebp
pop
mov
pop
xor
push
decl
adcb
cwtl
jae
out
lret
adc
sub
pop
dec
add
mov
movsl
dec
pusha
push
and
das
cli
and
flds
aas
add
jno
jne
mov
hlt
cmp
stc
sbb
push
hlt
jbe
jns
push
insb
es
sbb
jg
mov
les
insl
cs
sbb
imulb
xor
mov
lahf
repz
movsb
addr16
sbb
mov
sub
xchg
add
xchg
pop
cmpsl
aam
jg
subb
add
lret
rcrl
mov
sub
and
push
arpl
adc
push
sub
mov
out
outsl
dec
adc
inc
cwtl
rcll
push
jle
clc
or
outsl
push
jne
mov
into
cmpl
enter
es
add
das
aaa
add
mov
mov
dec
cmp
dec
jecxz
push
and
inc
in
xchg
int3
mov
jae
or
push
adc
cmp
cmp
or
pop
mov
testb
xchg
mov
lods
add
cmc
inc
jns
pop
es
cmpsl
out
int3
mov
lcall
inc
pushf
push
jbe
cmpsl
or
popa
xor
mov
stc
cltd
sti
pusha
pop
and
sub
and
cmp
xchg
push
fs
lods
cli
jo
lds
repz
jmp
aam
sarl
into
jecxz
inc
adcb
sub
icebp
cmpsb
xchg
into
lea
neg
jae
jns
stos
out
in
rorl
mov
loope
jg
hlt
jnp
and
out
push
sbb
mov
dec
sub
mov
int3
je
jo
das
dec
roll
cmp
mov
subl
das
fmul
pop
shlb
loopne
scas
xchg
and
push
aas
cmp
mov
mov
push
out
in
int3
cmp
mov
push
stc
test
loopne
int3
mov
cmp
adc
pop
or
lock
adc
sub
shrb
jle
ret
imul
lock
ret
push
mov
js
xchg
cmc
test
popf
roll
aas
jl
sti
iret
rorb
test
jbe
cs
mov
incb
pop
imul
or
mov
sbb
fnstsw
mov
ljmp
lock
or
fnsave
lret
mov
repnz
push
sub
mov
js
or
cmp
in
imul
stos
or
negb
jmp
cs
in
jno
daa
mov
xchg
loopne
popf
jmp
cmpsb
fistps
lods
loope
jp
fwait
je
mov
rcl
test
frstor
cmp
push
repnz
addr16
pop
adc
mov
repz
shrb
out
stos
jne
loopne
push
fucomp
and
mov
xchg
iret
sbb
leave
into
clc
loope
fstps
in
lahf
into
mov
push
push
fcmovu
pop
fnsave
popa
dec
ja
js
push
mov
pop
clc
push
or
jo
iret
clc
mov
mov
mov
sub
push
sbb
ret
addr16
mov
xor
aas
xchg
add
bound
or
je
push
mov
and
fnstenv
adc
in
add
mov
sub
mov
out
into
cld
in
rcll
enter
sbb
pop
mov
inc
pop
sub
jp
ja
mov
aaa
int3
push
jecxz
xchg
adc
dec
dec
mov
mov
in
cmp
add
cmp
jp
stos
cmp
mov
aad
sti
lods
jne
icebp
shl
int
sbb
scas
pop
mov
sarb
nop
push
jnp
cmp
test
inc
sub
and
or
cwtl
aam
adc
push
mov
push
scas
push
jmp
inc
ficomps
loope
pop
or
or
insl
push
adc
push
pop
pop
push
push
xor
daa
or
push
cld
jnp
mov
lret
cmpsb
stos
fwait
sbb
push
inc
std
dec
cli
fsubp
push
into
aaa
gs
adc
xchg
aas
and
enter
jecxz
push
sbb
aam
pop
pop
testb
jmp
in
jo
pop
jle
imul
push
and
ljmp
insl
inc
scas
cli
cmp
icebp
sub
ljmp
iret
in
movsl
sbb
std
and
stos
mov
pop
fistl
int3
mov
sbb
movsl
hlt
mov
inc
sets
mov
mov
test
dec
dec
enter
in
xor
jecxz
mov
sub
out
adc
and
lock
idivl
fwait
inc
int3
bound
stos
xor
jb
push
mov
jb
sbb
push
shl
sbb
and
and
test
movsl
dec
jmp
jecxz
fsubrl
fadds
shll
hlt
das
stos
fsubr
ss
mov
jno
xchg
jl
daa
xor
push
leave
mov
test
mov
adc
mov
loope
inc
dec
gs
sub
sti
sub
cmp
outsb
mov
pop
ss
idivl
scas
mov
icebp
inc
in
leave
cltd
cmp
mov
push
push
mov
mov
mov
pusha
insl
out
lds
lahf
repz
clc
sbb
push
hlt
movsl
adc
pop
adc
push
insl
xchg
fwait
daa
cmp
sub
les
fs
jg
dec
test
lahf
pop
in
out
aas
xor
je
test
shll
fdivr
push
ret
leave
in
mov
pop
cmpl
cmp
xchg
and
xchg
imul
data16
adc
repnz
lcall
add
inc
sub
xorb
das
nop
repz
roll
push
or
pop
mov
fcomps
int3
dec
data16
pop
andl
fimull
ja
inc
jle
addl
mov
ja
sbb
jno
add
sub
cmp
jb
add
sbb
inc
xchg
movsb
cmpsl
gs
ret
movsl
push
add
clc
mov
outsb
mov
leave
movsb
mov
push
lret
xchg
out
xor
mov
gs
xchg
dec
sub
jmp
jae
lret
xchg
add
sbb
dec
stc
pop
dec
insl
aaa
jmp
insb
notb
test
pop
add
cmp
jmp
ljmp
outsb
xchg
dec
inc
pop
push
rorl
dec
ret
push
rcl
push
xchg
or
mov
in
push
in
mov
popa
sub
push
and
pop
jae
sbb
cmp
push
dec
sbb
jnp
fcmovu
loope
imul
enter
jmp
inc
enter
lods
sub
repz
idivl
cmp
test
lods
int
mov
sub
or
mov
gs
and
mov
mov
mov
mov
imul
in
in
dec
jmp
stos
shll
fadds
aas
movsl
xor
iret
mov
add
imul
lea
subl
clc
daa
pop
aam
or
mov
pop
xchg
loop
mov
inc
mov
cmp
pop
ss
leave
enter
dec
pop
mov
xchg
mov
adc
jae
fcomip
sbb
in
test
adc
mov
out
cmp
adc
sub
lock
addb
push
mov
sbb
and
inc
fisubrs
rclb
aaa
mov
xchg
lahf
test
jae
repnz
scas
stos
in
cmpsb
pushl
mov
bound
imul
and
nop
hlt
add
outsl
popw
mov
je
clc
mov
xchg
out
scas
rorl
inc
push
jo
fwait
add
gs
addr16
xor
out
inc
sahf
push
inc
test
xchg
outsl
sub
cmp
sbb
and
inc
mov
push
mov
filds
and
cld
and
loope
shrl
pop
or
jl
add
repnz
jns
jnp
xor
rorb
ljmp
cmp
iret
mov
push
sbb
push
fistl
lcall
mov
aam
imul
std
sub
dec
jno
xchg
cmp
add
fst
jl
pusha
ficoml
jp
mov
or
test
test
inc
into
or
cwtl
xchg
sub
dec
ret
lods
push
sarb
pop
xor
cwtl
inc
pop
dec
je
jnp
cmp
insl
pop
add
add
pop
adc
aam
jns
cld
inc
mov
mov
lods
test
pop
pop
mov
sub
pop
sbb
mov
int
add
mov
stos
outsl
cmp
cwtl
jo
mov
sub
inc
pop
iret
les
test
inc
mov
sti
enter
mov
shll
add
cmp
dec
in
xchg
push
scas
adc
sahf
movsb
inc
addr16
cli
popa
lret
push
lahf
or
sarl
sub
xlat
leave
lods
xchg
fcomi
ljmp
repz
jo
ljmp
popaw
lea
in
pop
pop
pop
ret
insb
dec
jnp
jge
shrl
jge
jo
inc
push
frstor
orb
push
sti
fdivl
jb
js
dec
hlt
xor
or
and
and
scas
push
or
int3
jle
xor
repnz
loopne
fdivr
shll
lahf
and
jae
cmpl
jp
inc
rcrl
push
jp
mov
add
and
adc
aaa
pop
enter
and
or
movsb
inc
insl
push
xchg
test
mov
push
cmp
stos
scas
mov
cmc
sbb
pop
jbe
inc
cwtl
imul
jp
inc
jo
cwtl
cltd
hlt
xchg
lret
je
and
xor
pop
jnp
inc
fstpl
aas
jmp
xlat
repnz
mov
ret
and
inc
or
jecxz
mov
adc
ret
pushf
push
test
or
stos
pusha
cmp
adc
push
mov
add
aas
in
mov
smsw
out
je
cld
in
cltd
dec
jae
out
push
shll
sahf
lret
aad
popa
xor
adc
mov
mov
or
aam
mov
dec
repz
push
in
cwtl
inc
lock
sub
sbb
enter
push
shll
fcmovnbe
push
jl
inc
fwait
adc
pop
jecxz
pop
or
pop
xchg
push
fsubl
int3
in
cli
pop
fsubl
stc
adc
lcall
pop
inc
pusha
out
fidivs
es
adc
jp
mov
ds
sbb
sub
ljmp
aaa
push
jle
mov
fsubrs
pushf
outsb
sbb
dec
pextrw
mov
xchg
rcrl
nop
arpl
cmove
push
test
arpl
hlt
mov
add
fcomip
lahf
pop
xchg
xor
outsb
jae
cmp
fdivrs
xchg
loop
mov
sub
inc
dec
jle
aaa
movsl
push
sub
je
pop
ret
inc
dec
aaa
lea
pop
push
dec
out
cmp
cmp
jl
mov
or
test
stc
xchg
les
push
jns
mov
inc
sbb
cmp
mov
pop
push
jecxz
mov
pop
mov
cmp
sub
xor
cmp
sbb
pushf
xor
xchg
shlb
test
xchg
cmp
sti
xor
or
jbe
mov
mov
inc
ret
fcomps
je
xchg
mov
dec
cmp
xor
add
rorl
push
daa
and
mov
add
shll
adc
xorb
xchg
xor
rclb
mov
neg
test
adc
push
jo
and
and
jge
enter
sub
fimull
mov
iret
call
jne
jne
dec
jp
lret
xchg
and
std
add
adc
icebp
dec
sub
mov
sbb
adc
bt
adc
data16
mov
pop
cld
fs
fwait
xchg
lock
or
xor
mov
inc
push
add
mov
fcom
cltd
imul
popf
dec
movsb
and
mov
adcb
les
je
and
push
mov
pushl
jge
adc
cld
pop
out
test
dec
fld1
dec
inc
outsl
pop
cld
dec
sahf
lret
pop
cwtl
adc
inc
mov
sbb
les
inc
pop
divb
jle
inc
mov
mov
fstpt
xchg
addb
movsb
adc
and
push
out
sbb
inc
data16
and
and
arpl
mov
jne
add
sbb
into
mov
hlt
cld
mov
sub
mov
sbb
push
sub
push
cmp
fwait
aam
mov
gs
and
negb
and
mov
and
imul
cmovno
into
out
sbb
mov
loopne
cmp
scas
adc
xlat
test
pop
dec
roll
cmp
mov
popa
test
ljmp
call
mov
popf
out
cmp
sub
mov
push
xchg
cmp
sbbb
popa
adc
stc
xor
jg
insb
lods
mov
mov
adc
icebp
sarb
or
hlt
push
cmovae
jno
orl
mov
fcoml
mov
push
sbb
fildll
push
pop
mov
and
fwait
pushf
mov
and
andb
call
cs
inc
dec
push
mov
push
xchg
and
inc
mov
pop
jle
rclb
mov
stc
icebp
and
test
cmpsl
dec
gs
mov
add
jb
cltd
mov
and
lea
cs
fdivrl
aam
pop
xchg
pop
jle
mov
jle
xor
fisubrs
jns
mov
sub
lea
addr16
pop
xor
pop
das
call
enter
pop
sbb
mov
cmp
lret
in
xor
cmp
testb
decl
mov
stos
xor
sahf
inc
pop
sub
xchg
push
adc
jb
mov
mov
mov
inc
jmp
cwtl
sbb
frndint
jb
out
inc
imul
inc
mov
or
mov
mov
jle
cmp
add
cmp
int3
outsb
or
mov
mov
imul
popa
sahf
fidivs
aad
add
push
in
adc
jp
cmp
adc
insb
stos
or
fwait
xor
fistl
lock
mov
dec
ljmp
aam
adc
leave
add
mov
sti
repnz
ret
sahf
jp
outsl
pop
lods
out
lret
sar
in
dec
inc
fistpl
cld
aaa
mov
clc
into
mov
insl
mov
rcrl
mov
sbb
xchg
or
repnz
inc
push
mov
ret
and
xor
pop
xlat
pop
in
mov
sahf
lods
mov
or
mov
mov
ret
cmp
add
and
adc
or
mov
dec
jecxz
jl
repz
inc
fisubl
dec
pushw
xor
in
out
shll
jp
fistl
cmp
mov
and
jge
cld
imul
dec
cmc
test
mov
sbb
push
xchg
jle
cld
add
pop
sar
and
mov
pop
pop
mov
or
xchg
mov
pop
scas
aam
mov
imul
xchg
or
inc
shl
fistpl
jmp
ss
ds
mov
mov
fimuls
mov
scas
mov
leave
jbe
or
jne
lret
leave
mov
nop
movsb
nop
sti
pop
aas
xchg
add
shlb
test
pop
ss
lret
or
lds
xchg
mov
xchg
daa
jmp
nop
stos
or
add
pop
in
sti
xor
jle
orl
jmp
loopne
mov
fnstcw
mov
cmp
push
mov
xchg
dec
sbb
mov
add
popa
dec
clc
cld
mov
cwtl
add
dec
outsb
cmpl
leave
pop
cwtl
pop
pop
fadds
push
fdivrl
js
call
lds
dec
jge
rorl
pusha
push
std
mov
adc
xchg
mov
xor
push
sub
fstpl
and
sub
popf
inc
loop
inc
pop
or
cli
iret
push
inc
push
imul
lret
pop
xchg
inc
jecxz
fldt
mov
xchg
mov
out
movb
das
push
push
pop
scas
shll
iret
cld
lods
add
sti
arpl
or
cmpsb
lods
out
mull
ret
andl
rcrb
loop
clc
dec
fisubs
setbe
jp
mov
decl
dec
repz
sbb
jecxz
mov
push
jbe
and
xor
mov
push
ret
fimull
test
lods
push
jns
adc
and
or
enter
and
cmp
inc
mov
aaa
ljmp
pop
pop
int
mov
jge
jmp
mov
ret
bound
xor
into
push
movsl
jle
out
arpl
ds
scas
xchg
dec
mov
cld
add
fmull
pop
test
in
adc
sub
pop
lret
loope,pt
cld
jo
mov
pusha
mov
bound
and
xorb
mov
and
mov
and
lret
push
jg
and
mov
add
dec
mulb
call
mov
imul
xchg
xchg
jo
pop
and
out
mov
es
xor
loope
stos
jb
cmp
and
pop
inc
mov
ds
ret
and
outsl
add
lods
shl
dec
xor
lods
sub
js
xchg
push
test
mov
mov
lret
xchg
enter
cwtl
or
mov
cmp
ss
push
mov
loopne
mov
sub
inc
jmp
jle
push
xor
out
pusha
dec
cs
push
jo
fsts
daa
pop
aad
inc
mov
sbb
adc
inc
jbe
cmp
in
jno
inc
jl
test
ljmp
xchg
xor
jbe
loop
mov
xchg
rorl
fisubs
scas
and
shr
sti
les
pop
jb
ds
xlat
adc
ljmp
adc
icebp
pop
divl
jnp
fadd
loope
cli
pop
ror
sub
jns
or
sahf
mov
aaa
divl
ljmp
test
fcmovb
ret
inc
adc
repnz
clc
mov
cld
data16
aad
int
out
xchg
push
dec
int
stos
imul
jbe
and
enter
rcrb
mov
stos
cmp
inc
or
push
adc
mov
popf
gs
push
cmc
lret
sub
mov
jmp
test
adcb
mov
scas
dec
fiadds
inc
popa
or
dec
xchg
fstps
dec
and
imul
mov
and
ret
cmp
mov
jle
xchg
xchg
mov
sub
sub
jp
push
scas
mov
loope
dec
lcall
or
mov
push
into
push
lahf
xor
or
xor
pop
xchg
pop
lds
out
inc
push
and
pop
add
cmpsl
mov
ss
dec
scas
decl
stos
dec
pop
scas
dec
scas
test
push
cs
aad
cmp
shrl
mov
lods
fcom
mov
ret
dec
and
cmpsb
jo
test
mov
popf
lods
lret
leave
and
mov
in
inc
cmp
jns
xlat
adc
repz
enter
fs
mov
dec
and
nop
ss
cwtl
aaa
in
popa
stos
out
popf
mov
jo
fisttpll
outsb
data16
data16
jmp
xor
dec
or
pop
leave
insl
je
cmpsb
pop
pop
jmp
and
fdivrs
push
imul
mov
pop
pop
enter
je
scas
xchg
xchg
insb
mov
fcoml
push
xor
and
dec
orb
jno
cld
push
pop
ret
adc
push
and
sub
imul
dec
push
cltd
jge
bnd
sub
mov
dec
rolb
insl
cmp
mov
sub
mov
jmp
jecxz
push
mov
mov
arpl
leave
adc
xor
cmp
pop
inc
dec
or
and
pusha
and
shrl
push
sub
int
clc
cmpsb
ljmp
in
pop
dec
rcr
xorb
adc
inc
push
adc
sbb
jge
xchg
ds
repnz
add
or
shrb
jo
aam
fists
mov
mov
imul
mov
das
pop
jmp
add
stos
stc
cmp
sahf
jb
stos
dec
push
inc
adc
xchg
mov
inc
das
and
incb
pop
rolb
add
xchg
gs
arpl
xchg
daa
mov
xchg
gs
xchg
pop
and
popa
or
movsl
ret
cmpsl
loopne
in
cld
mov
js
mov
cmc
add
aas
lock
mov
js
dec
dec
xchg
subl
push
adc
sub
movups
mov
lret
mov
dec
sub
imulb
icebp
push
xchg
scas
pop
and
push
add
push
movswl
lcall
jle
in
sbb
xor
lea
icebp
xchg
sbb
test
xor
insb
or
ret
movsl
mov
sub
clc
insb
pushf
and
mov
push
loopne
rcrl
mov
pushf
xlat
stos
mov
jecxz
aad
add
jle
lds
add
mov
mov
mov
jmp
push
jae
sbb
mov
push
lahf
outsb
shrb
and
sub
jae
pop
fdivrl
mov
loopne
lods
cmpsl
sub
popf
xchg
and
std
ja
add
push
in
push
xchg
xchg
clc
jae
push
imul
inc
cmp
rcrl
in
push
push
rclb
pop
cltd
jo
xor
mov
test
sub
movsl
push
mov
xchg
insb
cmp
pop
jge
jmp
mov
push
in
mov
mov
pop
sub
pop
lock
jp
push
in
adc
push
cld
sbb
and
stos
mov
decl
mov
mov
shrb
shrl
enter
out
rorb
pop
mov
mov
aas
mov
rolb
push
push
jp
mov
inc
cltd
rcll
clc
inc
sarl
int
stos
aad
mov
xor
adc
lock
add
iret
test
daa
jge
lods
aas
jg
cmp
pop
xorb
mov
or
mov
pop
jne
jb
xor
mov
stos
sbb
aas
mov
repz
jbe
leave
inc
gs
push
hlt
jo
fnstcw
leave
mov
test
cmpsl
je
inc
adc
jl
das
mov
mov
xor
mov
int
mov
in
add
incl
daa
insl
inc
inc
shl
lret
nop
mov
shl
cmp
adc
idivl
xchg
ljmp
and
lods
mov
loopne
jbe
adc
mov
dec
mov
mov
pop
mov
and
mov
fwait
xorb
or
cltd
pusha
aad
cmp
lods
inc
jno
and
lret
pop
mov
add
xchg
push
or
aaa
leave
xor
mov
add
pushf
jle
mov
and
cs
stos
loope
sbb
push
dec
and
nop
lahf
mov
push
rclb
rol
dec
or
test
out
pop
hlt
mov
cmpsl
adc
mov
into
stc
adc
test
jmp
or
cmp
sbb
push
test
sbb
stos
or
mov
lea
int3
or
bound
pop
in
inc
and
insb
fadds
lods
call
loope
sub
ja
ja
mov
dec
lock
icebp
ds
sbb
lret
dec
mov
orl
gs
jmp
inc
cvtps2pd
loope
gs
in
push
mov
cmc
jbe
cpuid
cmpsb
adc
and
sahf
in
inc
fimuls
mov
test
and
cmc
adcb
ss
and
inc
int
iret
push
xchg
jl
jns
jo
outsb
mov
push
gs
cmp
mov
mov
inc
inc
mov
cs
imull
lea
bound
hlt
leave
push
jecxz
test
dec
fstpt
popf
pop
shll
or
out
or
lods
popf
aam
nop
imul
mov
pop
int3
arpl
rolb
mov
or
sub
push
hlt
shrb
mov
test
jmp
ret
inc
pop
out
cwtl
mov
dec
cs
call
push
pop
cmp
jbe
and
pcmpgtd
or
stos
sub
sbb
pop
stos
bound
les
xchg
imul
mov
ja
aad
inc
jb
push
repz
mov
inc
pusha
arpl
mov
cs
pop
idivl
mov
add
ret
addb
or
ljmp
or
pop
xchg
je
jne
xchg
stos
fisttpl
lods
out
jmp
int
and
lods
mov
shll
jmp
stc
jnp
leave
push
aam
stos
fcompl
push
xor
out
enter
mov
lret
xchg
inc
rolb
lret
rorb
xchg
and
add
pop
ljmp
sahf
dec
mov
mov
hlt
bound
repz
sarl
ret
or
dec
add
mov
pushf
inc
add
mov
aaa
xchg
xchg
pop
mov
mov
out
mov
movsl
aas
xor
jb
jmp
and
add
sub
add
add
dec
cmp
push
shrl
jne
rcrb
sub
pop
or
or
add
leave
outsl
fs
clc
cmp
je
popa
jbe
jp
sbb
cmp
in
xchg
xchg
fsubrs
movsb
jmp
mov
insl
jmp
inc
addr16
in
jbe
push
xor
mov
jae
push
sub
lods
xchg
loop
fs
xor
sub
enter
jl
xlat
inc
aas
add
rcl
pop
sub
fwait
mov
cmpsl
pop
push
jmp
push
pop
mov
jb
popa
mov
cmp
pop
cmc
rcll
xchg
push
or
pop
push
xchg
pop
ja
push
or
stos
js
dec
push
mov
sub
push
jno
xchg
in
inc
mov
push
push
mov
cmpsl
sarl
cld
sub
add
and
movsb
or
mov
fcompl
and
pop
test
push
test
push
pop
insb
pop
int3
jae
ja
mov
es
ret
pop
inc
xor
andb
cmc
test
xchg
shrl
lods
mov
pop
push
aas
cmpsb
leave
les
outsb
aad
adc
mov
mov
mov
test
sti
out
rolb
ret
xchg
push
push
ret
sarb
outsb
cmp
pop
pop
outsb
call
mov
push
xchg
aaa
fs
cmpsb
stos
xor
mov
mov
pop
outsl
cmpsb
das
sbb
imul
in
push
dec
or
mov
popa
cmpsb
sbb
fwait
pop
cmove
nop
aas
scas
or
dec
adcl
out
mov
inc
lret
movsb
push
fldl2e
dec
sbb
into
test
orl
xor
add
movb
and
hlt
jmp
fmul
xor
jae
push
push
int3
mov
inc
sbb
outsl
jecxz
test
dec
out
dec
adc
xchg
jecxz
repz
shr
mov
dec
jo
in
insb
adc
sbb
sbb
mov
repz
mulb
repz
aas
sbb
insb
movsl
and
pusha
pushw
sub
jge
lds
xchg
xor
adc
cmc
stos
jp
je
sub
in
push
mov
adc
mov
cmc
je
dec
jnp,pn
sub
jl
lock
sub
ss
sbbl
and
add
fcmovne
fbstp
test
fidivrl
mov
call
add
push
mov
jmp
jp
nop
or
testb
jbe
jnp
shlb
add
mov
call
push
or
out
jae
aad
add
pop
mov
dec
loopne
in
fmul
jl
int3
mov
mov
sahf
or
mov
out
aam
scas
pop
rorb
mov
repz
mov
scas
ftst
jb
mov
sbb
ds
fs
add
xor
dec
inc
ds
or
xchg
subl
and
cmp
push
add
add
jns
in
pusha
dec
pusha
cmp
out
xchg
jo
add
cmovnp
xor
sub
mov
mov
inc
push
mov
push
pop
bound
stos
insb
adc
jmp
xor
jno
mov
ja
aas
aaa
xor
xchg
out
dec
push
call
mov
jecxz
add
jne
add
aaa
cmp
pop
xor
inc
icebp
loope
mov
subl
adc
int
in
mov
inc
leave
pop
int3
sbb
les
pop
jo
cmp
xor
repz
imul
and
adc
gs
add
movsl
xor
inc
and
mov
mov
xchg
inc
fstpl
repnz
cwtl
xlat
jge
xor
outsl
or
pop
push
sbbl
mov
or
out
int
xchg
adc
test
imulb
adc
dec
sub
daa
lods
mov
sbb
ret
jae
icebp
mov
pop
cltd
repz
sahf
arpl
hlt
pop
ja
dec
cld
data16
add
push
data16
daa
dec
inc
std
mov
mov
cmp
loope
inc
inc
repz
jo
add
ret
cmp
ljmp
rorb
lock
lahf
ja
rcl
mov
int3
mov
enter
xchg
mov
push
test
jns
std
add
xchg
call
dec
sbb
aad
push
test
sarl
pop
xor
mov
popa
int3
adc
lahf
loopne
cmpsb
sub
push
cmp
outsb
inc
pop
inc
sarb
cltd
jg
inc
dec
fldl
cs
sub
fsubrl
mov
add
sub
sub
lock
dec
popa
out
insb
fcompl
and
mov
mov
cmpsl
mov
sti
cltd
sub
mov
cmp
pop
into
mov
outsl
xchg
pushf
ds
push
add
adc
sub
mov
push
adc
mov
mov
fistpll
into
ds
xchg
daa
lods
push
out
sub
mov
adc
add
rcll
dec
mov
test
cmp
gs
imul
sbb
xchg
imul
lds
or
mov
insb
enter
cmp
cmc
push
fsubrs
mov
inc
cmp
aam
jnp
sub
mov
push
xor
jne
sarb
stos
mov
xor
xchg
sbb
mov
popa
push
sbb
sbb
pushl
stos
inc
daa
sar
jno
xlat
sbb
jg
push
stc
push
mov
dec
out
sbb
das
ja
ja
pop
mov
je
int3
repnz
jg
add
lods
sbb
jl
outsb
stos
inc
and
sub
jo
das
stos
push
mov
shll
ja
pop
jb
negl
in
aaa
mull
pop
fistps
scas
xor
dec
push
xchg
les
test
fldln2
in
daa
mov
dec
xchg
fistpl
jns
in
jmp
inc
push
add
popf
je
sbb
cmc
xchg
in
sub
dec
jl
out
div
mov
xchg
inc
pusha
jg
leave
int
movsl
test
sbb
jle
cli
out
popf
ja
lods
ss
jbe
stos
cmc
cmp
sbb
fisubrs
lahf
insl
push
mov
adc
sub
imul
cli
fwait
scas
ficoml
fs
lcall
cmp
popa
sar
dec
scas
inc
xor
pop
add
mov
int3
jbe
inc
in
sbb
sarl
leave
sbb
shr
inc
test
mov
std
mov
inc
sub
in
or
das
fcoml
idivl
or
repz
filds
or
loop
fildl
add
add
inc
mov
cltd
iret
xor
xlat
adc
xor
or
pop
fsubrl
mov
adc
daa
aas
xchg
or
push
and
mov
jmp
mov
rcrl
mov
sbb
mov
jecxz
push
shll
mov
xchg
in
xchg
dec
loope
sub
je
cwtl
pushf
adc
xchg
add
mov
fdivrs
mov
and
xchg
jbe
and
stos
mov
test
xor
fiadds
adc
popf
lcall
mov
push
jns
cwtl
and
pop
mov
jl
int3
dec
ja
lods
sbb
insb
lods
out
or
cmp
pusha
mov
fadds
xor
jle
xor
sahf
clc
dec
divl
or
or
das
cld
loop
das
jnp
xchg
sti
iret
test
jl
or
fcmove
fdivl
mov
sbbl
jo
jne
dec
sbb
lcall
mov
dec
in
push
out
iret
mov
adc
shr
pop
cld
sbb
mov
mov
and
mov
inc
sbb
xor
pusha
pusha
add
inc
inc
rorb
outsl
cltd
xchg
sbb
js
fisubrs
jp
lds
cvtpi2ps
inc
mov
int3
clc
movb
lods
push
fstl
or
leave
dec
pop
pop
mov
repnz
test
pop
xchg
aam
xchg
add
add
mov
fidivl
js
pushf
cmp
in
into
movsl
xchg
push
enter
jmp
js
xchg
pmaxub
dec
xor
ror
jle
insl
mov
enter
and
les
aas
dec
pop
inc
hlt
xor
imul
cwtl
sahf
sub
add
repz
test
sbb
insl
jl
inc
xor
stc
test
mov
mov
mov
sarl
adc
shr
hlt
cmpsl
mov
int
test
cld
insl
and
imull
xchg
sti
mov
lcall
mov
and
mov
xorb
je
sub
adc
cmp
lahf
mov
in
pop
scas
fiaddl
addr16
cmp
je
test
pop
in
subl
jmp
cmc
pop
popf
push
cli
jbe
das
add
push
leave
in
outsb
cs
pop
xchg
or
aas
mov
fcomps
or
sahf
movsl
aaa
int
sar
scas
out
das
and
ret
add
pop
inc
mov
clc
rcrb
in
mulb
xlat
inc
xlat
inc
mov
inc
jbe
xchg
cwtl
cld
adc
dec
mov
mull
cmpb
stos
std
out
jns
test
inc
cld
push
mov
fwait
popl
in
mov
es
popa
xchg
inc
mov
test
lahf
cs
add
out
add
inc
sahf
insl
mov
sub
jno
ds
cli
jp
jae
pop
cltd
jp
out
cmp
mov
xchg
mov
scas
pop
insl
outsl
add
mov
dec
sub
rolb
xchg
outsb
sub
mov
inc
out
or
adc
lahf
pop
mov
or
cmp
mov
cmp
push
sbb
push
adc
mov
add
imul
fstpl
dec
popf
or
hlt
cmp
cmp
inc
stos
repnz
fisubrl
mov
sarl
out
pop
test
cmp
je
je
loopne
dec
xor
bound
cwtl
add
mov
sbb
orb
cmp
fldt
inc
pop
mov
inc
mov
fstpt
lret
cmp
mov
mov
xchg
jecxz
nop
xchg
dec
ret
or
cmp
ret
imul
and
push
xchg
rorb
sub
rcrb
push
xor
cmp
iret
mov
adc
lods
cld
jb
and
xchg
sub
xor
cltd
repz
aas
pusha
ja
bound
pop
mov
icebp
inc
push
xor
jae
xchg
push
jl
cld
mov
xchg
mov
dec
xor
fsts
cmp
inc
loopne
outsl
bound
rcrb
stc
aaa
xor
xor
pusha
adc
jg
ss
repz
xchg
inc
push
ret
and
aaa
test
hlt
pop
and
cmp
lret
jp
ret
insl
dec
in
xchg
les
into
or
jne
movsb
xchg
cmp
out
add
arpl
xlat
int
mov
fnstsw
jg
xchg
or
xor
inc
outsb
push
mov
bound
mov
xor
fstpt
cmp
inc
repz
xor
cmp
orl
rol
inc
cld
stos
clc
fdiv
jle
loope
iret
rcrb
sub
imul
push
jmp
mov
mov
push
wrmsr
cltd
sbb
call
xor
ljmp
inc
mov
mov
xchg
xchg
clc
or
loop
clc
xchg
jbe
out
pusha
sub
mov
cli
jmp
jne
cwtl
mov
xchg
mulb
imul
imul
sbb
outsl
inc
or
outsb
loope
adc
aam
in
pop
cmc
sbb
fildl
xchg
imull
clc
out
ljmp
xchg
xchg
leave
lods
sbb
stos
les
jne
in
incl
ds
icebp
iret
dec
fcomps
mov
add
adc
sbb
cmp
lods
cmc
mov
je
cmp
sub
aaa
in
movswl
std
je
add
imul
jbe
sub
add
jmp
push
mov
jp
popa
in
mov
sti
andl
rclb
outsb
jmp
lock
stos
dec
aam
pop
adc
mov
mov
cwtl
jg
imul
in
cmp
test
sub
mov
push
inc
mov
dec
mov
mov
imul
sahf
lret
xor
fwait
mov
sahf
test
in
jno
add
and
rcrl
imul
sbb
sbb
sub
enter
divb
jg
in
in
fs
or
pusha
push
push
or
xor
aad
ds
fcos
cmc
imul
ss
jne
rorl
int
icebp
rcrb
jae
repz
cmp
mov
rcrl
xchg
mov
dec
flds
push
test
pop
add
push
std
sbb
xchg
outsb
sti
push
mov
add
call
ret
pop
fists
in
stos
push
icebp
repz
sub
test
pop
xchg
dec
leave
rolb
popf
sbb
and
aam
adc
add
dec
movsb
popf
arpl
or
aam
int
mov
lds
pop
gs
test
repz
mov
jge
jnp
mov
adc
loop
aam
hlt
xchg
lahf
rorb
pop
inc
jl
cmp
cmpsl
lret
add
je
std
cli
jnp
cltd
jmp
movsl
xorl
lret
sbb
loop
orl
aad
xchg
jp,pn
push
and
mov
js
lods
outsb
sub
jecxz
add
mov
push
pop
or
idiv
sbb
shll
rcll
cli
or
fnstsw
arpl
pop
arpl
inc
test
aaa
sub
sbbb
xor
ds
and
lock
out
xchg
mov
ret
in
mov
add
jo
roll
push
lds
xchg
sbb
mov
movsl
bnd
movsl
cmc
push
and
outsl
mov
cs
xchg
xchg
mov
ficomps
lret
div
cltd
fwait
shlb
mov
dec
je
cmp
inc
xchg
jle
ret
jp
mov
lods
subb
cmpsl
pop
dec
fcompl
cmp
jp
mov
and
and
inc
aad
lods
mov
test
jg
xor
adc
clc
cmpsl
iret
xchg
push
jl
addl
test
pushf
imul
mov
in
or
sti
repnz
sub
xchg
idivb
mov
mov
or
xor
pop
mov
add
aaa
jo
pop
call
movsl
addr16
notl
dec
jno
fisttpll
or
mov
outsb
push
xchg
jne
pop
jmp
je
push
out
test
idiv
xor
xchg
lock
sti
xchg
adc
sbb
or
pop
or
cmp
mov
movsl
divb
sub
shlb
rolb
and
je
add
ja
insl
sub
pop
xor
xchg
add
add
and
pop
rorl
push
mov
aam
or
stos
jno
insb
sub
shll
lds
out
sgdtl
mov
pushf
js
cmp
push
or
cld
jbe
cld
jge
les
lods
dec
jl
aam
dec
aam
in
clc
mov
pop
push
jle
rorb
jmp
push
ss
dec
add
cmp
mov
mov
pushf
sahf
xchg
das
push
add
call
sarl
jb
idivl
inc
leave
outsb
xchg
pop
rcr
and
insl
aas
gs
inc
pop
mov
push
pop
push
shlb
pop
outsl
repz
cltd
inc
pop
movsl
xchg
adc
insb
js
jecxz
loop
mov
lock
mov
icebp
pop
pop
aaa
mov
sub
icebp
sbb
pop
cmpsb
jmp
pop
jb
cltd
mov
negb
mov
pop
inc
icebp
cmp
mov
add
mov
in
leave
rcll
jne
subb
dec
sbb
negb
mov
in
daa
and
aas
sbb
xchg
add
dec
pushf
inc
mov
out
mov
mov
pop
ret
loop
jle
and
pop
dec
jnp
je
xor
std
rcl
cmpsl
add
fidivl
addb
in
mov
loopne
in
pop
pushf
inc
mov
push
or
imul
aaa
punpckhwd
filds
pop
pop
enter
push
or
sub
andl
push
xlat
sbb
aad
mov
xor
into
movsl
loop
pushf
scas
cmp
repnz
sbb
fsubr
stos
jle
in
fisttps
mov
jno
lock
or
push
push
mov
mov
fwait
push
cmpsb
les
decl
add
push
popa
popa
jg
clc
mov
sub
loope
aaa
xor
dec
shll
ficomps
sti
sub
js
sbb
push
mov
mov
repnz
or
push
shll
mov
rcrb
mov
mov
aad
xchg
push
repnz
clc
push
cld
inc
jne
stos
lret
imulb
je
lock
adc
jae
xchg
pushf
dec
fdivs
inc
rol
mov
pop
add
ljmp
shll
lds
lods
bound
and
sahf
jbe
gs
sbbl
or
fsubl
imul
sub
adc
fdivr
mov
pop
leave
or
inc
push
test
clc
daa
mov
mov
sbb
xor
fildll
mov
aad
rcl
add
jne
xor
pop
loopne
jnp
push
xchg
sarb
repnz
mov
pop
scas
mov
dec
mov
in
push
rcll
mov
push
add
add
and
rclb
ljmp
test
in
adc
cmp
push
addr16
sbb
inc
cmp
inc
xor
mov
jmp
sub
ds
sbb
daa
xchg
mov
insb
xor
aas
cmpsl
pop
loope
nop
pop
add
and
xchg
cmp
imulb
lret
ljmp
movsb
pop
or
jae
mov
inc
add
adc
js
vpaddd
mov
add
leave
aam
orl
pushf
test
test
inc
sub
ljmp
aas
mov
mov
pmovmskb
cltd
arpl
ja
adcb
push
add
adc
cmp
push
xor
sarb
incb
stos
jb
loope
inc
xor
out
push
repnz
mov
rcr
scas
out
imul
jmp
lret
jae
sub
jno
fwait
imul
dec
loope
push
xor
inc
mov
cmpsl
loope
cmp
or
fisubrs
js
inc
fs
or
in
jge
out
xchg
aam
jb
cmp
inc
ret
push
xchg
pusha
xorb
rorb
jns
rcll
xchg
jl
push
fsubrl
xchg
dec
pop
push
test
mov
dec
jmp
arpl
inc
inc
or
fmull
xor
movsl
sub
pop
sbb
inc
loopne
mov
aaa
dec
pop
dec
cmp
add
ss
fistpl
stos
and
push
ja
scas
ljmp
pop
push
das
jecxz
mov
scas
and
mov
add
stc
pushf
dec
cmpsb
xchg
cmp
dec
in
loope
mov
fisttps
add
and
out
cmp
adcl
jp
icebp
push
movsb
dec
pop
lret
jns
xchg
mov
adc
iret
ret
jb
les
gs
xchg
jmp
adc
dec
mov
fadds
shr
mov
cmpsl
out
aad
adc
mov
inc
jae
xor
pop
gs
xchg
imul
add
aad
test
mov
add
lahf
xor
rcll
call
mov
cmc
aaa
mov
adc
ds
movsl
stc
test
jge
jge
inc
push
loopne
mov
inc
cs
lea
test
pop
adc
push
mov
int3
sbb
out
add
inc
andb
rclb
cs
mov
stos
stc
iret
push
dec
push
pusha
subl
xchg
sbb
dec
jbe
lock
xor
or
stos
cmp
inc
jecxz
mov
cmp
aaa
adc
jnp
ret
xor
pop
sub
ds
xchg
cmp
jae
jp
call
mov
data16
icebp
sbbb
imul
out
or
shlb
lahf
sub
popa
dec
lret
or
lahf
lret
cmp
jbe
sbb
mov
orl
movsb
and
fcmovne
lds
push
mov
xchg
addr16
push
ret
lods
mov
jne
fstpl
inc
adc
test
push
and
pop
cmp
push
ret
popf
lods
movsb
cmpsb
sarl
sbb
and
cmp
divl
popl
into
dec
imul
xlat
jl
fwait
jg
aaa
lods
lea
outsb
mov
sbb
outsl
mov
or
pop
loopne
xchg
fistpll
jmp
pusha
mov
pop
shl
and
push
mov
add
and
xor
call
scas
mov
pmulhuw
mov
jp
lods
push
int
outsb
jg
es
mov
jae,pt
mov
pushf
mov
push
imul
push
inc
cmp
in
mov
test
clc
imul
gs
cmpsb
addr16
dec
rorl
dec
or
pop
sub
sahf
inc
in
mov
call
cmp
mov
add
adc
fwait
mov
xchg
shl
stos
push
test
cld
dec
jl
ror
out
jle
rcll
dec
mov
and
popf
inc
ss
add
fisttpl
push
and
cmp
sub
sub
push
add
arpl
and
pop
add
popa
adc
dec
cwtl
xchg
insb
clc
cs
mov
cmp
in
mov
das
xor
stos
cmp
cmovno
js
push
shl
das
aas
std
adc
add
ja
pop
adc
mov
cld
mov
sub
rcrb
fwait
mov
sub
test
mov
and
adc
jecxz
push
jo
xchg
jno
mov
fs
or
movsb
test
push
ret
ret
jae
loopne
fisttpl
icebp
cmp
call
test
mov
addb
pop
stc
jns
adc
test
mov
adc
mov
inc
movsb
lods
shrb
sub
fstps
add
jmp
adc
mov
lds
pop
gs
pushf
nop
leave
leave
repnz
inc
je
sahf
test
loop
adc
and
fwait
cmpsl
lret
lods
push
jl
jae
call
call
jge
gs
ficoms
adc
int3
adc
por
fistps
push
and
adc
or
sbb
mov
stc
insl
push
xchg
int3
pop
cmc
push
pop
jae
incb
mov
sbb
sub
lea
pop
adc
jne
imul
mov
xor
cli
aas
mov
push
lock
jmp
fidivrs
stos
and
ja
cmc
in
mov
mov
movsl
and
adc
pop
incb
xlat
cmp
test
add
imull
test
testb
cmc
fisubs
lock
mov
sub
jecxz
nop
fimuls
jp
into
mov
dec
in
lret
pop
lcall
fdivr
loopne
test
mov
sbb
pop
jecxz
push
imul
aas
notb
iret
jo
inc
sbb
jbe
lret
mov
insb
jp
xchg
jge
ljmp
pop
rcr
mov
inc
dec
adc
divl
xchg
push
and
test
dec
fcoms
pusha
dec
add
mov
gs
and
mov
fwait
pop
nop
cmp
sahf
fistl
mov
pop
mov
cmp
subl
and
pop
or
mov
dec
lea
jle
outsb
push
push
pop
gs
fiadds
push
dec
fisubl
or
sarb
xchg
sub
sahf
jmp
shr
insl
xlat
inc
push
mov
scas
out
jg
lret
lret
in
rclb
lcall
inc
mov
push
push
and
insb
push
enter
ds
ljmp
jae
sbb
pushf
pushf
pushl
lods
cmp
repz
inc
sbb
clc
pushf
cmp
fwait
mov
lock
in
cmc
push
mov
mov
out
pop
pop
jecxz
frstor
cld
ficompl
les
adc
adc
or
aaa
pop
pop
mov
cli
loop
jbe
cmp
cmp
jae
push
jmp
pop
out
popf
adc
adc
sarb
lea
inc
add
sbb
cs
inc
sub
sbb
leave
inc
pop
or
fimuls
lods
inc
mov
les
cmpsl
insl
addl
dec
push
and
push
cmp
jbe
sub
sub
cmp
dec
jnp
pushf
in
lret
jg
mov
mov
add
pop
push
aad
int3
or
imul
xchg
fsubrs
rcll
jo
repnz
mov
pop
mov
xor
pop
jae
bound
gs
popf
jg
icebp
mov
test
aas
inc
in
and
ja
les
cmp
mov
mov
nop
xor
pushf
dec
add
mov
xchg
mov
pop
dec
mov
fwait
mov
jno
xchg
dec
xchg
aad
test
xlat
dec
in
stc
xor
gs
stos
add
fcmovnu
pop
in
outsl
test
xor
sbb
jl
test
jns
sbb
insb
divb
repz
inc
in
pusha
ljmp
lret
mov
stos
mov
xchg
repnz
and
sub
pop
std
std
ret
into
cmp
sbb
jge
and
adc
inc
divb
lods
cmp
cld
inc
adc
mov
flds
in
repnz
pop
sti
in
pop
lods
dec
mov
xchg
jmp
insl
popa
push
fbstp
dec
xchg
cmp
mov
ja
cwtl
je
loopne
xlat
cmp
ficoms
bound
dec
inc
push
out
push
sarb
and
xor
sub
aas
pop
push
movb
xchg
add
test
mov
and
xchg
dec
adc
stos
inc
sub
push
outsb
jp
in
dec
adc
xor
or
mov
cmp
and
shl
push
lock
movsb
add
sub
mov
inc
inc
push
or
mov
aas
repz
sbb
ret
stc
mov
xchg
cmp
pop
jle
add
cli
cmp
adc
sti
xchg
daa
jmp
iret
jecxz
insl
push
dec
jmp
ljmp
cmpsb
mov
inc
popf
sbb
jnp
xor
lods
lret
bound
xchg
test
lret
lods
nop
inc
ss
lods
cmp
or
mov
imul
repnz
mov
lcall
aas
inc
adc
lods
shrl
xor
ficomps
push
lret
lret
inc
sti
ss
and
push
stos
shlb
inc
and
add
ret
mov
test
dec
stc
push
inc
in
pop
mov
dec
pop
imul
lahf
sub
jns
jo
push
lods
fmuls
mov
shll
inc
cmpsl
inc
mov
les
mov
or
adc
lret
test
aad
jo
cmc
in
arpl
cmp
xor
hlt
dec
cmc
cmpsb
scas
add
jb
shll
mov
sub
jnp
movsl
in
fbld
test
mov
xlat
add
hlt
mov
popa
or
cs
dec
scas
xchg
filds
outsb
inc
shr
inc
mov
rcl
fcmovnb
mov
rorb
out
jns
repnz
sub
cmp
jp
lds
xchg
test
movsb
loope
arpl
add
sub
and
movsb
fisubl
ret
jecxz
stc
pop
inc
imul
test
mulb
std
push
scas
pop
and
push
cmp
dec
mov
mull
xchg
out
pusha
mov
mov
bound
test
cmp
enter
test
adc
push
dec
sarl
je
stos
xchg
mov
push
cmp
or
andl
imul
lret
mov
fidivl
or
dec
aam
lds
aaa
sbb
scas
insb
sub
push
xchg
movsl
cs
fwait
in
out
mov
cmp
and
dec
adc
mov
mov
cmp
arpl
roll
dec
loopne
call
dec
shlb
imul
mov
sahf
mov
jnp
pop
jle
xor
shlb
mov
int
adc
insl
arpl
mov
mov
jns
or
mov
lds
into
stos
ds
dec
int3
cs
dec
mov
sub
xor
jl
bound
sbb
sbb
andb
jg
and
add
shll
call
or
inc
scas
cwtl
push
sub
scas
xchg
mov
inc
jp
lahf
pop
lahf
add
mov
dec
test
lea
xchg
popf
sarl
xlat
jge
popf
fadds
xor
mov
rcrb
push
cmp
les
pop
gs
test
cmp
ja
sub
cmc
imul
pusha
andb
lret
cwtl
push
loopne
aam
ljmp
jbe
add
adc
push
sbb
movsb
lret
aad
je
fs
adc
in
rclb
ja
rorb
adc
sub
pop
imul
push
push
test
data16
cmp
add
clc
nop
push
mov
mov
rol
sahf
xchg
xchg
std
inc
out
clc
in
xchg
sub
lahf
lock
adc
ficoml
fmuls
fidivl
out
cld
les
and
cwtl
lock
add
jnp
xchg
mov
mov
sahf
lea
test
cli
dec
inc
nop
inc
cmp
mov
cmp
nop
dec
pop
ds
push
lds
sub
sti
ja
cmp
xchg
or
mov
mov
mov
mov
mov
lods
cld
push
jmp
push
xchg
bound
jb
pusha
xlat
mov
mov
mov
pop
stc
test
mov
sub
mov
call
add
and
mov
mov
in
popf
xor
fcom
lcall
insb
mov
dec
cmpsb
add
jmp
jae
jecxz
test
pop
out
xchg
lea
mov
insl
in
test
mov
or
fdivl
jnp
pop
add
shll
push
stos
call
add
rcrb
cmp
xchg
movb
sub
out
cmpsl
aad
jecxz
sbb
rcl
mov
mov
fildl
pop
out
xchg
cmp
ret
scas
sub
and
dec
lcall
shll
lods
and
xchg
inc
or
fcompl
push
frstor
xchg
dec
mov
inc
dec
mov
add
into
jle
mov
jp
mov
stos
into
movsb
decl
imul
add
or
aaa
sub
or
sti
fdiv
dec
mov
add
je
pop
lods
popf
pushf
cmp
inc
or
sahf
test
ret
sbb
lods
icebp
push
sti
gs
in
addr16
mov
fisttps
fnsetpm(287
add
insl
pop
mov
imul
inc
cmp
fnstenv
cs
xchg
clc
nop
sbb
mov
loop
sub
mov
rcrl
sub
insb
out
adc
mov
push
rol
test
int
cwtl
jb
pusha
jge
push
sti
iret
xchg
gs
ja
xchg
adc
add
orl
xor
cmp
xor
lock
dec
imul
std
nop
negw
jg
ja
xor
cmp
pop
adc
data16
and
sub
push
call
mov
cmp
push
int3
dec
pop
scas
push
push
cmp
cmp
insb
lock
push
popa
fimull
xchg
mov
sbb
arpl
jle
imul
leave
ret
ret
iret
xchg
or
lods
js
loopne
dec
xchg
movsl
jns
repnz
mov
aas
pop
inc
fcomip
or
push
mov
pop
sub
dec
adc
sub
mov
jo
mov
xlat
pop
push
mov
or
sub
pushf
pop
sbb
iret
fldcw
leave
jbe
cmpsb
ffree
sub
pushf
jne
in
je
push
pop
shll
jl
fucomp
mov
mov
xchg
clc
cs
xchg
int3
or
adc
lahf
jmp
jmp
jno
ror
cmp
call
popa
nop
movsl
lock
push
dec
and
cmpsl
cmpsl
and
xor
sub
mov
ljmp
add
fucomp
or
fldt
test
mov
inc
mov
inc
dec
inc
outsl
stos
data16
mov
xor
insb
out
popa
dec
xor
int3
cwtl
aaa
mulb
bound
fdivs
add
inc
out
inc
and
faddl
add
sahf
lds
sti
xchg
mov
pop
imul
btcl
mov
add
enter
mov
push
in
mov
and
or
xor
gs
pop
push
xchg
or
mov
or
call
out
or
mov
imul
fisttpl
insb
fs
mov
jecxz
rcrb
xor
imul
jns
cmp
outsb
mov
xchg
adc
mov
mov
int
xchg
test
shlb
imul
xchg
arpl
add
ja
sub
aaa
lods
loopne
or
mov
repnz
iret
scas
cmc
stos
ret
jg
jnp
inc
mov
mov
repz
inc
in
jp
hlt
sbb
les
loop
cmp
test
sbb
je
pop
int3
call
lahf
js
dec
add
test
cli
mov
xchg
lods
xchg
mov
daa
repnz
xor
xchg
cmp
jge
sbb
mov
adc
dec
pop
adc
jmp
ljmp
push
push
xor
faddl
mul
cmc
and
cmp
dec
add
stc
xor
inc
mov
xchg
mov
jmp
jb
xchg
jmp
js
push
imul
inc
mov
das
jmp
push
mov
imul
lea
sbb
sub
neg
xchg
ficomps
xor
or
bound
sub
dec
insl
and
inc
inc
in
fwait
jmp
push
fwait
daa
imul
and
orb
xor
lods
scas
xor
push
adc
popf
lods
ret
in
push
vminsd
adc
leave
adc
je
cwtl
pop
and
add
cmp
mov
add
xchg
xchg
leave
sbb
mov
push
hlt
filds
arpl
mov
into
and
out
pop
jmp
outsb
jmp
int3
int
mov
pop
jecxz
push
test
jns
popf
sbb
adc
cs
fs
sbb
push
fistl
push
xlat
lahf
enter
jo
fcoml
sub
out
xchg
and
ret
dec
mov
in
enter
xchg
inc
dec
pusha
mov
dec
inc
xchg
outsl
jb
mov
scas
orl
cmpsl
test
pop
rcrl
mov
sub
xlat
jl
jl
cmp
insb
jnp
add
xchg
jae
outsl
mov
iret
or
repnz
lods
fs
cmp
push
cmp
mov
xor
xchg
out
lahf
mov
and
nop
sbb
jl
lods
jno
pop
cli
arpl
push
dec
or
or
je
mov
stc
push
out
inc
jne
xchg
call
ret
lahf
orb
pusha
jo
mov
sbb
mov
ja
push
ds
mov
xchg
insl
xor
or
sub
cmp
scas
push
je
jp
imul
sbb
cld
popf
lock
aam
gs
in
mov
fisubs
sub
testb
xchg
imul
lods
out
shll
and
pop
fisubl
rolb
hlt
sbb
pop
push
mov
xlat
in
cli
fbstp
push
dec
jmp
mov
pop
hlt
jnp
pop
lods
inc
hlt
jl
xor
xor
pop
mov
pop
jg
mov
add
js
cltd
mov
pop
cs
popf
add
int
or
pop
arpl
dec
sbb
repnz
mov
add
adc
icebp
das
in
aam
dec
mov
push
pop
popa
cmp
fdivp
mov
iret
cltd
cmpsb
jae
jle
sub
outsb
lret
mov
xor
outsb
lret
mov
mov
dec
xchg
fidivs
jecxz
rolb
shll
adc
push
mov
enter
fsubl
jmp
stc
xchg
jle
loope
pop
dec
push
inc
fs
cs
je
stc
ret
gs
clc
cmp
jnp
bnd
int3
test
test
or
addl
or
jbe
loope
xchg
mov
cmp
add
push
add
pop
push
push
xchg
pop
mov
pop
adc
push
mov
cs
icebp
js
jne
insb
xchg
in
push
sahf
mov
ret
xor
in
xchg
sbb
movsb
outsl
sahf
jbe
shll
aad
xor
std
orl
or
fdivp
loop
arpl
push
xchg
adc
lods
push
dec
add
add
sahf
repnz
stos
cmc
sbb
fbld
movb
adc
add
push
cli
add
cltd
hlt
push
outsb
xorl
mov
fnclex
aad
xchg
sbb
out
ljmp
or
jns
inc
movsb
adc
in
negb
outsl
js
cmp
rcl
inc
lods
aas
jg
pop
scas
mov
mov
mov
push
xchg
sbb
imul
hlt
test
ljmp
ja
andl
subl
push
push
inc
push
mov
pop
clc
push
sbb
clc
in
mov
add
xchg
fucom
fisubs
out
fwait
xchg
jns
bound
rclb
jp
inc
test
popa
int3
insl
mov
inc
cmp
inc
mov
lods
mov
dec
xacquire
repz
mov
mov
push
lock
mov
leave
movsl
popf
test
xor
mov
bnd
push
sbb
add
and
icebp
jne
cli
fs
push
xor
mov
loopne
lods
hlt
cmp
sub
push
sbb
scas
lahf
mov
cmp
mov
fcompl
into
jge
les
fistpll
pop
je
pop
adc
xor
jg
dec
adc
mov
addr16
xchg
xor
in
jp
jae
add
outsl
jmp
mov
rorb
jnp
loop
mov
add
std
jp
pop
pop
in
xchg
sarl
jge
jle
roll
or
cwtl
test
cmc
into
das
xchg
popa
sbb
add
xor
int3
shll
or
xchg
pop
mov
mov
lea
mov
out
dec
sub
lods
iret
push
push
leave
cmc
stos
xor
jne
jns
stc
sbb
or
shrb
add
dec
int
mov
xchg
jo
cmpsl
test
js
add
jbe
pop
or
or
cmp
enter
mov
jecxz
adc
arpl
jle
adc
jl
in
addl
or
sbb
xchg
ljmp
repz
cmp
rcrl
jb
mov
mov
int
rorb
test
xchg
aas
xor
lcall
inc
int
pusha
or
mov
ret
xlat
jmp
or
icebp
mov
adc
stos
iret
pop
or
mov
mov
insl
cld
enter
andnps
mov
jno
dec
lret
lock
jnp
aas
out
mov
mov
fsubrs
sub
rcrb
repz
pop
sub
cld
pop
int
push
stos
ljmp
sub
or
outsl
orb
sub
test
shr
mov
icebp
loop
ret
mov
lahf
mov
cmp
test
aad
sub
jae
push
inc
mov
inc
scas
jbe
arpl
mov
sbb
mov
adc
add
es
sub
mov
sbb
xor
cld
jbe
xchg
pop
repz
lock
mov
lcall
lds
push
xchg
mov
arpl
out
stos
mov
js
dec
lock
aaa
or
xchg
sbb
xchg
ret
sbb
les
mov
ljmp
rolb
test
cmpb
in
adc
fisttpll
seta
pop
jmp
mov
mov
ficomps
push
movsl
mov
jge
lock
cmp
xchg
dec
int3
je
push
ret
pop
dec
ret
mov
jmp
and
dec
cltd
in
mov
test
mov
jo
mov
jb
js
fdivrl
shlb
push
les
mov
sub
xor
jecxz
repz
dec
int3
sarb
add
jp
adc
aaa
daa
push
repz
popf
sbb
jecxz
xchg
or
lock
pop
and
or
sbb
and
enter
mov
mov
fnstsw
jge
clc
push
jmp
mov
and
jge
sbb
sti
add
fildl
stc
popaw
pop
out
sbb
call
and
ret
aad
mov
enter
std
and
cmp
and
pop
xchg
aas
int
adc
jae
out
dec
iret
pop
mov
push
ret
in
cwtl
pop
mov
imul
inc
sbb
sub
bound
lea
les
fisubs
mov
adc
xor
mov
popf
pop
sbb
addps
mov
xchg
cmp
push
mov
inc
push
mov
outsl
add
repz
sbb
xor
fwait
cmp
jne
xor
and
pop
xchg
jno
mov
add
cli
into
adc
lock
in
mov
lcall
sbb
lea
sub
inc
jmp
out
xor
pop
adc
aaa
add
or
aaa
fdivl
push
sbb
sbb
stos
pop
mov
std
cmp
dec
stos
into
das
sub
mov
testl
sbb
push
lods
inc
push
ss
cmp
orb
push
hlt
dec
add
jl
loopne,pn
sbb
sahf
add
test
mov
into
xchg
add
gs
mov
out
xchg
jbe
dec
pop
adc
pop
aas
daa
pusha
mov
cli
inc
fimuls
and
faddl
or
pop
mov
ret
xlat
in
adcb
test
mov
adc
pop
fistps
mov
xchg
jge
sub
imul
xlat
cltd
xor
sbb
rcl
cmp
xlat
jle
pop
cmp
scas
mov
fdivs
adc
sbb
and
fsubrs
mov
call
xchg
dec
std
sub
dec
es
mov
in
adc
subb
dec
pop
aad
add
rcll
scas
adc
mov
repnz
je
pop
enter
xor
mov
and
stos
lret
cmp
and
inc
cmp
loope
dec
mov
out
fimuls
flds
xor
cmp
sahf
lret
xor
fxtract
and
or
lahf
rcrl
loope
push
pop
push
in
stos
lock
scas
inc
mov
sbb
fs
or
ret
inc
push
lcall
sahf
data16
cmpsl
imul
add
mov
ror
xor
jae
jg
xchg
mov
dec
pop
lret
cmpsl
mov
enter
pop
sbb
jp
sbb
add
daa
aad
testb
arpl
out
stc
loop
jg
lds
mov
imul
or
js
sub
sbb
mov
mov
push
out
into
push
data16
mov
and
into
test
jns
mov
cmp
jmp
lahf
test
ret
in
mov
orl
xchg
lds
push
add
pushf
outsb
jle
jae
mov
mov
iret
scas
pop
jecxz
ja
mov
jo
sub
dec
push
repnz
dec
inc
dec
mov
test
push
jo
rcrl
into
dec
stos
inc
dec
gs
pop
ss
and
mov
add
push
aas
sub
cwtl
rorb
frstor
mov
hlt
push
and
in
bound
add
inc
adc
outsl
add
jns
repnz
inc
mov
pop
dec
loopne
arpl
jmp
adc
leave
add
out
popa
fsubrp
int3
push
dec
lahf
mov
movsl
clc
scas
dec
les
cmp
mov
fwait
cltd
cmpsl
and
data16
cmp
dec
pushf
es
and
inc
xor
pop
and
mov
fistps
orl
adc
pop
xor
fistps
mov
sti
sbb
jbe
pop
adc
int
dec
inc
addl
enter
test
sbb
shll
push
mov
or
pop
or
inc
jo
popa
mov
sbb
push
mov
sub
jb
push
cmp
pop
xor
xor
pop
mov
mov
dec
test
test
sahf
push
neg
jecxz
mov
add
mov
adc
adc
and
dec
or
sbb
out
subb
mov
sub
mov
hlt
ret
pop
loope
leave
inc
sub
and
sub
pop
mov
jp
sub
arpl
in
adc
jge
out
pop
cwtl
fdivl
sub
sub
js
mov
add
pop
pop
jecxz
mov
and
mov
jno,pn
jno
mov
sbb
mov
xor
push
cmpsl
ds
dec
pop
and
xor
mov
pop
sbb
fiaddl
mov
pop
jl
jb
aam
testl
gs
stos
mov
xor
inc
scas
xor
in
and
sbbl
ret
icebp
or
fldt
sarb
cmpsb
adc
std
out
mov
pop
xor
xchg
sub
jg
out
cmp
jecxz
outsl
int
syscall
cli
out
inc
jae
mov
inc
push
sbb
out
pop
mov
push
add
scas
dec
mov
mov
xlat
mov
jbe
xchg
cmpsl
arpl
out
bound
add
arpl
pop
arpl
or
scas
xchg
mov
mov
and
pushl
hlt
fwait
push
sbb
xorl
bound
cmp
mov
mov
cltd
xchg
mov
xor
inc
fildll
or
clc
xlat
insb
outsl
shl
push
shll
imull
xchg
jmp
shlb
sbb
ja
lret
outsl
cld
fstpt
icebp
in
xor
dec
popa
stos
dec
mov
pop
cmpl
mov
mov
xor
mov
aaa
jle
adcl
dec
mov
addr16
jno
int
adc
dec
mov
push
inc
dec
jb
int
incb
sti
imul
insb
adc
push
imul
scas
sbb
in
testb
insb
out
cmc
mov
cld
cmp
outsl
icebp
jnp
ljmp
lret
and
jae
pop
outsb
fimuls
out
repz
xchg
add
xor
addl
lahf
dec
mov
xor
clc
sbb
mov
repnz
sbb
fimull
push
adc
push
add
sbb
cmp
xchg
pop
inc
add
mov
je
cmp
xor
and
cmp
jne
jmp
mov
enter
cmpsb
adcb
push
punpckhwd
xor
xor
dec
out
cmpsb
add
xlat
sarl
aaa
mov
mov
aas
imulb
sbb
cwtl
lret
inc
adc
add
and
push
lods
repz
dec
xor
or
lcall
in
xchg
insb
lahf
scas
lods
loope
in
push
dec
nop
mov
lods
dec
fwait
dec
lahf
aam
test
push
and
jle
sub
push
rorb
lea
ljmp
adc
in
pop
mov
xor
outsb
push
push
mov
pop
pop
inc
sahf
shrb
aad
push
pop
mov
loopne
xchg
shlb
daa
xchg
mov
and
leave
jle
push
jg
in
mov
ret
dec
pop
lret
in
pop
scas
loop
mov
clc
int3
inc
xchg
test
scas
out
inc
adc
fdivl
es
repnz
mov
outsl
cs
dec
jl
xchg
inc
fs
lods
sbb
stos
loop
enter
push
daa
xor
int3
pop
push
jno
leave
movups
xor
dec
xchg
loope
test
cmpsl
xchg
push
dec
test
xor
sbb
pop
mov
into
cld
jge
mov
out
or
lock
cmp
push
push
dec
cltd
sbb
pop
adc
push
cld
hlt
jle
call
cs
fucomp
adc
nop
sbb
enter
into
pop
lock
outsl
pop
in
xor
jmp
pusha
into
stc
push
sbb
mov
dec
cmp
cmp
insb
mov
jo
frstor
cli
cli
in
mov
jmp
fwait
add
test
std
stos
outsb
loopne
sarb
data16
ljmp
in
out
stos
lods
test
sahf
imul
or
add
push
gs
mov
inc
out
jb
pop
pop
imul
dec
rcll
xor
sti
mov
mov
rcrl
js
adc
loop
scas
pop
push
insb
popa
hlt
lret
fiadds
dec
dec
je
cs
lea
jle
call
add
mov
and
inc
sarb
cmp
mov
and
cmp
sub
movsl
jl
or
lods
and
mov
xchg
mov
out
mov
xchg
mov
inc
sbb
jae
and
pop
inc
jle
or
mov
inc
cmp
scas
add
mov
push
andl
loopne
cmp
std
dec
pop
or
sar
int3
pusha
aad
pop
daa
mov
mov
dec
pusha
mov
or
xor
or
jo
inc
mov
xchg
lea
mov
mov
lods
cmp
jno
push
or
mov
mov
dec
jo
popf
sbbb
into
test
inc
inc
dec
loopew
add
ficompl
scas
iret
or
or
mov
stos
popf
sbb
pop
cmc
adc
out
jl
dec
outsb
loopne
push
sbb
jecxz
stos
ret
jae
push
cmp
out
sbb
dec
rcl
inc
mov
data16
dec
sbb
and
xchg
daa
inc
pop
pop
das
jge
push
fidivrs
xchg
jae
repnz
aaa
sbb
dec
pop
or
mov
push
inc
and
or
xor
pop
inc
jne
mov
push
sub
jg
cmp
out
xchg
cmpb
fisubl
or
ss
push
jb
mov
xor
out
mov
sbb
aam
adc
fcomps
into
pusha
dec
scas
and
pop
push
les
sbb
ret
xor
ja
xor
cmp
xchg
mov
ja
pop
insl
inc
xchg
push
mov
or
jp
push
or
inc
loop
cmpsb
jmp
je
incb
les
adc
in
xchg
outsb
out
negl
lret
xchg
sar
arpl
bound
ret
mov
cld
mov
push
cwtl
test
out
cmp
adc
out
movsl
xlat
nop
jo
fldl
shrl
addb
add
mov
pop
lidtl
lret
sbb
xor
lret
outsb
arpl
jae
mov
rcl
pop
inc
test
xchg
mov
dec
hlt
inc
pop
or
rorb
xchg
sub
jl
push
cmpsb
push
fsubrl
hlt
js
mov
in
cs
cmp
xor
ds
push
sub
inc
push
mov
stos
mov
push
rclb
das
jno
push
das
mov
mov
in
es
jae
and
mov
add
jle
rorb
dec
jmp
mov
sbb
mov
pop
or
adc
roll
lea
inc
dec
lds
popa
xchg
mov
ja
cmp
inc
push
push
sbb
push
mov
leave
pop
out
fimull
ror
stc
popl
cltd
cmp
out
mov
idivl
or
insl
fistps
adc
inc
mov
adc
adcl
ret
cmpsl
fistl
xchg
ds
les
mov
push
push
mov
cmp
imul
fbstp
inc
xchg
add
aam
and
js
xlat
sbb
push
mov
ret
jecxz
lcall
das
xor
sub
frstor
cld
test
mov
imul
mov
add
lods
cltd
jl
xchg
lret
cmpl
into
scas
cmp
jae
add
cmp
shlb
cmpsb
lea
shrb
addb
aaa
outsl
mov
daa
mov
dec
jecxz
mov
mov
ss
daa
sub
lret
sti
push
sbb
sbbb
leave
mov
test
xchg
sub
leave
rclb
push
cwtl
mov
cltd
cmpsb
idiv
mov
daa
push
pop
xor
xor
mov
mov
cmp
fcmovb
lea
xor
xchg
shlb
rorb
add
push
pop
push
jbe
xchg
sahf
push
mov
cld
dec
imul
jae
arpl
jno,pn
push
cmp
outsl
std
xchg
dec
pop
jmp
addl
xchg
jle
in
xchg
das
int
mov
push
sarb
aaa
add
cmp
and
mov
xorb
das
jg
cmpb
shr
in
xchg
xchg
in
popf
or
pop
cmc
sub
inc
xor
stos
mov
jno
mov
es
xchg
divb
xchg
dec
jne
and
cmp
adc
sbb
pop
fisttpll
add
enter
lret
cld
add
mov
sub
ljmp
mov
loopne
or
lret
adc
jb
stos
pop
out
mov
fstpl
mov
dec
dec
jne
imull
and
pop
aam
cmp
inc
jecxz
or
popf
lds
daa
pop
shlb
xchg
dec
test
stos
lods
out
cmp
out
ficoms
mov
stos
lods
out
mov
mov
in
push
cli
mov
test
ret
xor
into
jmp
insb
sbb
daa
dec
in
mov
adc
adc
inc
dec
add
dec
mov
mov
rclb
mov
jecxz
jp
jo
pop
out
push
mov
fistps
cmp
cmp
mov
mov
add
jns
std
xor
lcall
fisubrs
and
xor
inc
mov
test
jb
jle
lds
dec
andl
sub
mov
sbb
gs
cmp
movsl
jno
and
call
sub
idiv
pop
pop
test
popa
bound
bound
mov
xchg
clc
lock
xchg
dec
out
or
dec
xor
jp
call
sbb
and
addr16
movb
lahf
mov
popa
cmpsb
imul
dec
ror
pop
pop
out
xchg
cmpb
in
sbb
lcall
mov
into
push
pop
ss
cmpsb
hlt
mov
adc
fsts
pushf
bswap
aad
pop
cmpsl
xchg
jl
out
imul
fdiv
in
pop
xorl
sub
nop
lret
and
sbb
test
arpl
out
push
scas
add
add
ffree
jg
shrl
test
xchg
dec
xchg
rcrl
pop
pop
mov
loope
mov
clc
xchg
dec
sub
and
shl
mov
pop
pop
shll
js
jg
xor
jns
dec
xor
loopne
pop
pusha
xchg
and
fwait
insb
roll
fisubrl
into
xor
push
pop
xor
shrb
adc
cmpb
jl
adc
add
mov
outsl
mov
cmp
enter
pop
iret
fwait
pop
nop
mov
push
movsb
inc
xor
pop
jmp
mov
mov
mull
inc
dec
mov
mov
cmp
sub
lods
add
pop
jbe
mov
or
cmp
add
push
jnp
mov
movsb
pop
in
mov
aam
sub
push
push
xchg
pop
mov
sbb
daa
in
jmp
call
imul
jno
fwait
cmp
pop
std
mov
ret
hlt
dec
jmp
movsb
outsb
mov
addb
sub
push
and
mov
jb
mov
dec
adcb
fs
mov
sub
es
jbe
sub
inc
or
imul
in
xchg
in
mov
xchg
sbb
popa
std
mov
mov
call
pop
xorb
xchg
pop
pop
call
sub
xchg
jl
nop
cmp
mov
xchg
xor
jbe
movsb
mov
or
mov
andl
xchg
in
addr16
fiaddl
inc
loopne
jae
fs
movsb
jno
fwait
arpl
jo
mov
test
jmp
jbe
mov
mov
mov
push
xlat
cmpsl
mov
inc
mov
in
outsb
dec
fcomi
sti
mov
popa
jbe
xchg
mov
ret
ret
xchg
test
push
sbb
inc
cwtl
aam
jbe
sub
xor
pop
fs
push
dec
mov
or
lods
mov
mov
pmulhw
sbb
mov
sbb
popf
rorb
dec
dec
out
popa
repnz
adc
popa
xchg
cmp
das
data16
adc
imul
lds
xchg
mov
ss
and
add
and
adc
sub
sbb
and
jp
test
test
inc
aad
jecxz
sbb
dec
icebp
jecxz
xor
sbb
push
push
xor
mov
je
mov
jns
popa
sbb
fldcw
sbb
sub
cmp
ljmp
xchg
jg
mov
in
xchg
dec
sbb
or
lods
aad
shll
push
or
ds
mov
sub
or
flds
and
jle
insl
mov
mov
sub
xchg
and
push
sbb
adc
test
add
mov
mov
or
gs
mov
jne
xchg
decl
sub
mov
xor
clc
jp
xlat
mov
and
fcmovu
lods
add
jp
inc
cmp
insl
xor
faddl
adc
xchg
test
add
mov
add
mov
jbe
add
lea
pop
sbb
icebp
rcl
adc
xchg
movsb
xchg
xchg
dec
or
sti
jo
pop
or
cmp
insl
xlat
adc
daa
xor
jno
es
sbb
jno
fwait
cmc
sbb
stc
fildll
mov
ror
std
inc
or
dec
mov
mov
into
push
jmp
dec
or
fbld
pop
aas
push
cli
test
lret
add
loopne
rclb
mov
push
mov
mov
jmp
xchg
fsts
mov
mov
jg
lds
test
inc
mov
rcr
sbb
and
aam
cmp
add
ss
jae
mov
aaa
arpl
in
in
mov
mov
mov
clc
jg
push
insb
xor
dec
and
jb
loope
stos
loop
mov
bswap
cmp
xchg
xchg
sahf
cmc
in
pop
lret
adc
popa
mov
push
push
outsl
icebp
pop
mov
test
aas
sbb
mov
int3
outsb
aam
jl
fidivl
sub
arpl
cmp
dec
shl
cmp
clc
cmpsb
test
push
jno
adc
sbb
bound
shlb
test
in
stos
push
insb
adc
out
loopne
cmp
shlb
sbb
test
mov
and
inc
xchg
hlt
inc
bnd
std
push
jbe
data16
push
jl
std
xor
jg
pop
lcall
push
insb
mov
mov
adc
dec
jbe
mov
fisubl
std
xchg
add
push
cmc
popa
mov
mov
mov
mov
push
and
test
dec
sub
jb
jnp
push
es
cltd
imul
cmp
xchg
mov
pusha
mov
sarl
aad
xchg
add
andps
push
out
sbb
xchg
scas
or
dec
dec
fwait
sub
cmp
jno
sub
dec
cmp
sbbl
jp
aam
inc
xchg
movsl
dec
jns
sbb
imulb
dec
std
pop
test
pop
iret
and
in
and
repnz
fldcw
pop
mov
addr16
jnp
shll
in
ror
sbb
lock
test
ss
mov
nop
lret
xchg
aaa
xchg
repz
and
int
std
xor
jns
arpl
iret
xor
inc
pop
sub
push
lahf
push
push
xor
push
repnz
xor
jl
dec
inc
mov
dec
pop
sbb
mov
sbbb
jl
dec
xlat
fidivrl
add
mov
push
jle
xor
aaa
push
sub
cmc
inc
push
sbb
sbb
mov
mov
jb
pop
fisubs
xchg
movsl
out
aad
fisttps
inc
sbb
xchg
je
fwait
or
inc
push
scas
popaw
pop
xor
dec
je
pop
or
lds
mov
stos
int3
cwtl
push
or
adc
fsubs
jg
arpl
or
jg
sti
bound
dec
es
inc
and
das
adc
lods
sbb
sbbl
xchg
pop
mov
jns
push
loopne
ret
sub
inc
dec
cs
xchg
add
push
sbbb
fwait
mov
mov
test
inc
sub
xor
je
add
cmpsl
icebp
test
mov
in
mov
inc
mov
sub
cmp
shl
and
mov
mul
gs
mov
dec
jle
shrb
mov
sub
xchg
or
test
pop
adc
test
cmc
sbb
cli
mov
or
imul
pop
lods
fwait
sub
cmpb
xor
adc
xchg
adc
lods
into
in
xchg
add
push
inc
jno
orb
xor
sub
jl
mov
js
xchg
scas
cld
aaa
fistpll
xchg
paddsw
xchg
cmp
pop
mov
push
ret
push
loop
add
lcall
mov
sarb
and
xor
adc
jp
push
sub
aaa
pop
mov
lahf
adc
fidivrs
xor
inc
cmp
inc
lods
or
sub
inc
push
loope
arpl
push
out
push
out
icebp
aas
inc
int
repnz
xor
push
cmp
das
xchg
xor
mov
out
push
mov
push
and
mov
fisttps
add
xchg
movsb
in
sbb
xlat
aad
pushf
data16
and
jmp
push
push
mov
aam
push
jg
stc
inc
add
insl
fmul
jecxz
mov
pop
or
sub
adc
mov
jle
sbb
aam
lods
or
mov
scas
and
scas
xor
mov
outsb
jb
out
sbbl
aas
push
mov
into
in
mov
inc
jnp
adc
shlb
shrb
mov
iret
add
js
inc
je
pop
ret
or
shll
cmp
mov
ret
jbe
lcall
mov
ret
gs
shr
lret
rol
mov
rcr
mov
dec
dec
pop
insl
lret
fadds
sbb
sub
int
or
out
pop
push
aaa
pusha
lods
out
mov
adc
push
push
push
cmp
sbbb
lret
sbb
je
cltd
pop
mov
pop
hlt
mov
lcall
mov
adc
fcmovbe
cmp
int
jmp
jae
xor
ds
jns
icebp
add
faddl
jge
add
lea
cs
cmp
scas
add
mov
out
mov
nop
insl
mov
subb
mov
out
cmp
cwtl
sub
popf
mov
sub
movsb
and
cli
push
jge
lock
icebp
imull
mov
inc
mov
mov
jge
inc
dec
xchg
dec
sti
cmc
pop
dec
daa
pop
xchg
outsl
sub
jns
divl
cmc
repz
in
les
imul
ret
rclb
add
les
hlt
adc
adc
mov
mov
add
inc
cmp
mov
mov
aaa
xchg
lret
dec
inc
lret
mov
fimuls
dec
dec
pusha
mov
sti
hlt
sbb
loopne
xchg
adc
cmp
jbe
icebp
mov
mov
repnz
pop
cmp
dec
pop
push
lds
daa
inc
fistpl
xchg
aam
inc
add
xor
pop
aad
movsb
test
mov
xor
mov
xor
arpl
fldenv
pushf
je
cmpsb
les
inc
add
and
fdivl
int3
scas
pop
add
adc
jo
lods
pusha
ret
dec
add
dec
dec
push
outsl
sub
scas
mov
insb
lret
outsb
lahf
mov
ret
stos
pusha
jle
xchg
fnstenv
and
fdivl
and
test
pop
test
lahf
inc
and
mov
push
adc
es
hlt
jle
std
mov
push
arpl
push
fdivl
shrl
negl
je
stos
inc
repz
xchg
mov
sub
xor
bound
dec
ds
aad
sbb
cmp
pop
sbb
mov
fldl
push
sub
adc
jl
lret
sub
lock
xor
fcoms
add
scas
mov
xlat
fsubs
arpl
inc
cmc
call
add
sbb
cmp
lea
jge
icebp
ds
ljmp
push
sub
sub
jmp
jge
jo
jp
jecxz
pop
xchg
mov
jno
cmp
call
out
daa
or
pop
push
jmp
inc
popa
dec
rcll
mov
xor
pop
and
loopne
fcmovnu
test
push
xchg
lahf
test
pop
xchg
pop
xchg
push
scas
pushf
ret
loopne
mov
inc
mov
scas
lcall
jbe
jae
xchg
and
notl
or
int3
mov
into
cmpsl
mov
scas
sub
std
aaa
popf
cld
rcrl
ficompl
xor
dec
sbb
lds
xor
inc
je
clc
push
jge
adcl
gs
data16
lods
in
mov
jle
arpl
xchg
mov
inc
in
fstl
sub
mov
ficompl
push
add
xor
mov
xlat
fcmovnu
inc
cmpsb
sbbb
lret
mov
sbb
popa
sbbb
push
movsl
addr16
pop
pushf
scas
cltd
stos
adc
repz
je
jmp
xchg
mov
add
ss
clc
and
pop
sub
out
cmp
cli
out
inc
icebp
pop
dec
push
dec
push
jge
and
mov
inc
cmp
jae
dec
mov
bnd
dec
mov
stos
aas
out
fstl
hlt
dec
test
int
xor
xchg
pusha
mov
aaa
inc
rcll
es
aam
pop
shlb
mov
cmp
iret
jne
daa
lcall
sahf
sbb
add
adc
dec
sbb
insb
lods
ror
test
and
clc
or
fwait
pop
cwtl
or
add
out
add
pop
mov
sub
lods
test
sahf
fimull
ds
in
cmp
mov
push
shll
jp
push
mov
roll
push
xchg
xchg
jo
pop
adc
or
jae
cmpsb
daa
push
adc
ja
dec
xchg
jg
xor
je
push
mov
xor
push
in
pop
cs
mov
cmp
sti
mov
cs
sbb
iret
or
inc
daa
xlat
push
addr16
lret
lods
pop
xchg
shr
xsavec
xor
in
xor
in
or
fiadds
inc
add
std
int3
mov
adc
mov
sarb
mov
bound
mov
stos
aad
jp
inc
out
push
mov
or
pop
aad
loop
test
fildl
or
sub
and
mov
inc
sahf
dec
xchg
add
sbb
mov
inc
decl
scas
and
dec
add
mov
adc
es
dec
sbb
xchg
sbb
cmp
test
inc
aam
xor
xor
test
das
ret
push
cld
mov
push
test
pop
shrb
mov
sub
idiv
pop
and
lahf
sub
push
jb
xchg
mov
inc
fnstenv
loop
dec
in
mov
js
mov
jne,pn
cwtl
call
xor
sub
ficoml
or
orl
xchg
xor
push
mov
mov
xchg
push
push
mov
loop
cmpb
outsb
xchg
jbe
test
outsb
cmp
imul
lods
xchg
push
inc
aas
adc
imul
int
pop
inc
aad
jae
inc
hlt
in
pop
dec
xor
jl
mov
jb
dec
mov
xor
inc
ret
xchg
adc
mov
stos
mov
cmp
bnd
repnz
lahf
fildll
jp
pop
dec
add
ljmp
jnp
mov
adc
sbb
sbb
cli
mov
out
pop
pcmpgtb
pop
mov
jno
ds
sbb
pop
cmp
in
push
inc
inc
sti
cmp
mov
mov
gs
add
jmp
lret
xchg
arpl
lret
mov
in
jns
add
xor
fidivrs
cmp
je
adc
into
ljmp
jo
xlat
xorb
int
and
shll
adc
mov
enter
or
or
sahf
push
jbe
iret
loop
mov
mov
imulb
sbb
mov
popf
sub
mov
xchg
lret
fimull
mov
xor
push
in
pop
cli
faddl
or
sbb
arpl
inc
xchg
lds
jo
shlb
lea
mov
fwait
mov
cltd
lods
mov
pushf
jmp
je
lcall
or
sub
ret
mov
call
jo
adc
les
xorl
xchg
in
jge
sub
lock
jl
xor
test
inc
mov
out
rol
sbb
icebp
clc
outsl
test
shrl
add
in
scas
jns
cmp
pop
insb
add
pop
and
in
movsl
nop
adc
and
aaa
test
sbb
pop
cld
sbb
adc
addb
or
fcompp
fnsave
cmp
sbb
outsb
popf
pop
jne
dec
stos
rcr
cmp
cmpsb
je
js
mov
test
push
fistpl
lret
xor
jecxz
ret
or
jne
xchg
ja
out
roll
in
rcr
pushf
test
mov
pop
cmpsl
out
dec
xchg
in
je
cmp
cmp
rcrl
mov
sarl
cmp
push
push
mov
xchg
andb
ss
jl
and
ljmp
out
mov
jae
adc
or
jl
push
sbb
xchg
jle
outsl
or
dec
push
xchg
nop
mov
xor
jbe
adcl
ror
cmp
loop
rcll
daa
cltd
cs
inc
pop
rorb
push
xchg
lahf
push
sahf
xchg
mov
adc
add
cmc
cmpsb
mov
lret
jne
daa
lock
into
pop
hlt
negl
sti
scas
jo
xor
outsb
sub
cmp
cs
mov
dec
es
test
in
je
inc
mov
aam
inc
movsb
pop
sbb
sub
pop
add
shll
mov
or
addr16
scas
mov
xchg
rcl
shll
data16
jnp
cwtl
lods
ret
jns
push
loop
iret
ficoml
mov
dec
ret
xlat
test
lds
nop
xchg
fsub
sbb
mov
mov
orb
mov
inc
lods
in
dec
in
mov
or
sub
inc
pop
inc
mov
mov
pushf
sbb
in
push
lahf
sub
jb
fistpll
push
jp
mov
test
xor
fnsave
clc
jbe
fsubr
cmp
inc
push
xchg
mov
cli
xchg
sti
and
cmpsb
and
insb
fst
mov
sub
xchg
int3
cmp
int
shrb
es
pop
dec
jle
sbb
add
jmp
and
fisubs
adc
gs
movsb
jo
rcrb
jp
pop
cltd
ja
push
fistpl
popf
jmp
mov
adc
jmp
cmp
subb
mov
inc
dec
add
outsl
cs
aas
call
popl
divps
pop
push
adc
movsl
jns
mov
fdivs
mov
addr16
jl
add
and
mov
dec
nop
mov
jl
sub
push
inc
dec
insl
fsubrs
cmp
inc
jl
pop
cltd
shufps
insl
lds
xor
or
test
cltd
xor
add
jg
mov
lods
inc
and
aas
xchg
clc
std
insl
int3
cmp
aas
pop
push
aaa
hlt
push
pop
and
mov
xchg
fistl
jle
cmp
mov
dec
dec
or
clc
sub
hlt
dec
pop
jno
adc
push
xlat
jecxz
xor
in
push
xor
andl
mov
mov
jno
cmp
fs
cmp
mov
test
pop
mov
adc
lds
fsubp
test
cmp
clc
jge
xchg
jge
std
inc
int
je
ret
inc
jbe
and
cmp
add
add
or
jp
mov
into
stc
jmp
xor
fdiv
sbb
jp
lret
ja
cmc
sub
jb
lds
push
fcmove
in
push
loopne
jbe
mov
sub
inc
xchg
pushw
rol
dec
jno
xor
stos
mov
cltd
jae
xchg
repz
mov
xor
sbb
and
and
pop
mov
cmp
jae
les
jge,pn
pushf
outsl
aad
inc
dec
jb
cmp
in
mov
fstl
icebp
push
test
push
ds
mov
inc
cmpl
ret
stos
jns
dec
inc
stos
cmpsl
inc
sbb
in
pop
int
dec
pop
xchg
stos
pop
fbstp
test
rolb
push
fistps
loop
loopne
cmp
pop
fidivrs
sub
dec
or
or
icebp
sti
adc
add
jg
iret
dec
push
cmc
roll
icebp
aad
ljmp
movsb
es
sub
adc
pop
das
and
ja
jnp
pop
adc
dec
xor
mov
sbb
dec
ja
jge
lea
aad
jl
mov
sub
add
sbbb
sub
jge
cmp
push
cld
test
push
mov
daa
sti
mov
test
repz
push
cmpsb
mov
xchg
or
jae
jns
pusha
mov
push
ljmp
out
lret
mov
loopne
pop
mov
mov
pop
das
cmp
xchg
repz
mov
jbe
movsl
push
roll
xor
sbb
lods
cmp
stos
mov
fdivs
nop
mov
aad
cltd
dec
lods
jl
mov
cmpsb
cmc
fiadds
xor
movsb
test
sub
sahf
push
scas
arpl
fsubr
and
repnz
xchg
push
int
das
pop
or
mov
cld
rorb
clc
stos
mov
stos
and
scas
andb
fdivs
sti
sub
add
dec
or
outsb
hlt
insl
pop
out
imul
mov
into
sub
push
mov
sahf
mov
xchg
xor
xchg
stos
mov
xchg
je
in
mov
dec
xchg
fstl
stos
cli
sub
ret
jl
xor
std
sub
jmp
mov
test
jne
lahf
sbb
test
out
or
add
leave
sbb
lods
mov
and
cmp
xor
ds
mov
rcrb
cmp
push
mov
fsubl
cmp
call
inc
in
cmc
adc
rol
mov
mov
rep
fsts
sub
sar
sbb
or
fucomp
and
mov
mov
push
ret
subb
aaa
inc
dec
cmpsl
push
mov
jg
enter
fstps
dec
lahf
xor
pushf
adc
cmpb
jmp
cmp
mov
enter
mov
mov
fsubrp
lahf
pop
xor
push
add
xor
pop
or
aad
or
mov
sub
addr16
adc
scas
cmp
test
mov
push
jmp
in
int
popf
out
loope
fnsave
add
mov
mov
ljmp
imul
sti
cmc
gs
pop
clc
lret
inc
adc
push
ret
lahf
push
inc
add
pop
pop
mov
inc
outsl
pop
popa
gs
xchg
sti
jb
lods
loopne
jb
jnp
dec
int
or
mov
sbb
lret
adc
add
sub
xor
hlt
jns
push
ss
outsl
jl
repz
stc
daa
cmpsl
into
add
ljmp
mov
aad
std
lahf
ds
repz
ds
lret
btl
movsl
pop
shll
in
subb
fmulp
xchg
sub
pop
rcrb
dec
sbb
mov
add
into
int
sarl
fldenv
mov
cmp
cmp
cmpsb
in
lock
aaa
loope
out
out
pop
popf
dec
fidivl
lods
or
call
scas
or
jecxz
jb
sbb
lods
aad
test
push
ret
push
jo
mov
xor
cmp
ljmp
mov
sbb
mov
jle
and
or
fdivr
shr
xchg
enter
push
jl
ret
and
dec
sbb
sbbl
jnp
test
in
adc
sbb
mov
xor
dec
pushf
push
fmuls
dec
nop
pushf
jle
test
mov
sub
sti
cmp
lds
lods
cltd
cmp
imul
outsl
int3
adcl
iret
mov
movsb
xor
pop
enter
mov
inc
and
leave
jb
and
xor
lods
add
outsl
hlt
mov
lret
add
push
sbb
mov
flds
test
adc
mov
adc
out
test
jb
jecxz
jmp
sahf
adcb
sbb
or
call
fistl
add
mov
in
ror
in
loop
xor
adc
xor
dec
inc
popf
jle
sbb
pop
int
sbb
push
pushf
rcrl
mov
mov
pushf
mov
mov
ret
jecxz
fdivp
shr
mov
mov
mov
adc
pop
mov
lods
xor
lcall
outsl
add
cmp
imul
inc
mov
fiadds
ds
bound
push
push
inc
xor
aam
mov
xorl
xor
fs
dec
out
ljmp
outsl
dec
push
lds
push
mov
jbe
shr
push
andl
sahf
pop
xchg
pushf
inc
movsl
fstpt
xlat
add
loop
jecxz
pusha
mov
sub
or
dec
decl
mov
push
hlt
lret
add
ja
shll
fistl
or
std
lahf
sub
or
jl
lahf
ficoms
cmp
sti
pop
jbe
xor
out
sub
push
nop
xchg
push
hlt
xor
arpl
and
add
sub
imul
dec
daa
iret
xorl
push
inc
and
dec
jl
mov
in
and
popf
call
mov
dec
jg
sbbl
sbb
mov
scas
inc
jecxz
mov
cmp
into
subl
mov
popf
cmp
aas
mov
mov
xor
pop
in
lcall
fnstsw
ret
fstp
pop
lock
lods
aaa
mov
jae
hlt
mov
mov
fdivl
pop
lret
adc
mov
pop
mov
dec
sub
mov
push
dec
cmp
mov
stos
mov
mov
or
fdivs
pop
jo
push
loop
loop
lahf
lret
shr
xchg
pop
cmp
adc
std
or
jo
add
and
or
xchg
addr16
stc
pop
jl
scas
loope
es
frstor
stc
lock
popa
inc
fwait
xchg
add
adc
push
jle
push
daa
push
push
lds
or
fists
popa
push
cmp
movsb
sbb
fisubrl
pop
xchg
jg
lock
add
pop
insl
xlat
movsb
xor
ret
push
mulb
mov
and
lahf
in
push
lret
or
jmp
mov
or
aaa
jecxz
adc
daa
or
and
mov
cwtl
notl
aas
mov
out
push
repnz
mov
stc
jae
cmpb
jae
xor
pop
adc
or
jae
rorl
push
sti
jns
int3
sub
fdivrs
subb
pop
fwait
cmpsl
addb
fstp
stc
cmpsb
out
mov
jne
xchg
int
les
sbb
sub
sub
fcompl
shlb
dec
xchg
mov
loop
lods
dec
aad
idiv
push
mov
push
jg
inc
repz
insb
jne
repnz
adc
push
cmp
push
add
imul
shrb
add
and
sub
lods
test
sub
divl
decl
mov
push
insl
ss
rorl
xor
and
push
data16
clc
mov
mov
jno
lret
insb
data16
lods
mov
lods
jl
xchg
aas
sbb
cmp
mov
stos
ja
mov
and
sbb
sub
adcl
add
xor
inc
movlps
stos
test
sbb
mov
shlb
mov
sub
or
inc
adc
push
mov
loopne
sti
in
in
into
int
rcrb
cmp
jge
iret
std
and
sbb
jnp
mov
lcall
mov
lcall
in
insb
mov
and
push
xor
jo
lret
mov
dec
cs
repnz
subb
push
jle
lahf
mov
and
test
lea
stc
mov
xchg
push
addr16
sbb
sarb
jns
insb
cwtl
add
dec
pop
dec
pushf
push
cli
xchg
mov
fnstenv
adc
movsb
lea
ficoml
cmp
sbbl
inc
add
pop
in
lret
xchg
rcrl
inc
jno
movl
rcrb
cmpb
rolb
repnz
aam
add
je
mov
xor
mov
mov
ficompl
mov
leave
push
adc
fsubs
cmp
loop
andl
ljmp
jmp
imul
addr16
inc
adc
cmp
daa
mov
idivl
or
sub
pop
pop
in
jae
dec
outsl
cwtl
adc
clc
ljmp
cwtl
imulb
push
test
into
ret
sbb
repz
push
lock
push
jne
push
fwait
xor
in
mov
xchg
ss
sti
sbb
jl
inc
mov
and
sbbl
mov
test
sub
es
jg
loopne
popa
stos
and
wrmsr
in
xchg
mov
addr16
push
rorl
and
sahf
lods
out
xchg
lea
add
xor
and
xlat
imul
xchg
pop
iret
jge
jle
jne
test
int
ret
or
leave
addr16
imul
loop
insb
das
or
mov
xchg
sub
add
adc
cli
fbstp
add
mov
iret
out
flds
je
cmp
mov
pop
or
cs
ret
inc
sbb
mov
push
or
jp
das
adc
and
hlt
sub
pop
push
ret
adc
cmpsl
jb
dec
jns
imul
sub
pop
sub
dec
fsubs
repnz
sub
gs
cmp
in
push
test
testl
es
xor
dec
shl
scas
addr16
and
sub
jne
lret
xchg
push
or
or
mov
cmp
cmc
sub
test
test
in
notl
dec
movsl
sbb
inc
aad
repz
lcall
scas
xchg
jg
in
jmp
sbb
cld
movsl
pop
mov
hlt
push
orb
icebp
rcr
fwait
les
mov
cli
mov
push
test
cmpsl
jns
or
je
std
push
pop
rol
or
shll
in
imul
pop
adcl
pop
mov
mov
push
xchg
mov
or
sub
pop
push
fcoms
les
sbb
push
adc
shrl
lods
mov
pop
popa
jl
and
out
or
imul
xchg
lock
dec
ja
cmpsb
xorb
sub
xor
lahf
cmp
icebp
scas
idiv
jge
adc
les
movsb
out
inc
fs
cmp
adc
repnz
pop
mov
sbbl
fstl
xchg
ret
cwtl
pop
icebp
xor
arpl
jmp
fiaddl
mov
mov
fs
cld
inc
xlat
and
dec
aaa
js
pop
std
and
rcll
into
inc
cmc
enter
xchg
out
or
sub
pop
mov
pop
aad
sar
decb
or
cmpl
sahf
iret
aaa
adc
mov
rol
fidivrs
sub
insb
mull
sub
icebp
mov
pushf
inc
push
roll
jnp
ret
inc
cld
push
rcr
inc
push
add
jp
inc
test
ror
sti
xor
pop
fs
int
hlt
cmp
ret
lcall
loop
data16
jo
mov
jmp
lds
dec
xlat
je
xor
loop
or
int
pushf
inc
lret
xchg
adc
sbb
fucomp
data16
add
gs
xor
xor
sbb
inc
add
bound
sub
or
mov
or
xor
push
call
movsb
inc
dec
cmp
outsb
dec
hlt
out
fadd
pop
subl
jno
mov
shll
clc
fdivrs
mov
adc
mov
push
pushf
fcompl
rclb
xchg
lods
popa
push
rclb
imul
xchg
lret
sbb
jne
push
jmp
jb
pop
mov
pause
ficoml
inc
insb
adc
shrl
es
cld
mov
rcr
adc
and
shlb
rcll
push
out
or
loop
cmp
pop
addr16
in
sbb
ficoms
gs
shll
pop
into
in
mov
into
cmpsb
mov
sbb
dec
push
pop
sti
add
mov
jl
sub
insl
sbb
pushf
subl
aam
mov
xchg
sbb
add
mov
roll
inc
xchg
xacquire
fbld
pop
dec
add
or
out
imul
je
movsb
aam
push
pop
repz
insl
ss
add
xchg
ror
mov
adc
sbb
scas
push
cmp
sbb
mov
xchg
and
push
cmp
lods
inc
enter
or
dec
mov
adc
fwait
dec
inc
mov
in
mov
dec
sub
in
adc
add
js
bound
lret
xor
insb
lret
shrb
add
jae
xor
ja
lock
inc
mov
add
dec
inc
in
stc
jnp
stc
sub
cmc
inc
jne
and
testl
dec
rcrb
jg
jmp
into
push
mov
mov
jg
cli
adc
insl
xchg
inc
bswap
push
in
and
cwtl
out
sti
push
mov
sbb
sbb
lcall
sub
and
test
xor
cli
imul
or
xchg
loope
mov
and
sbb
push
adc
inc
inc
sbb
cmpb
push
cmp
sbb
icebp
nop
cmp
fstl
pop
stos
mov
cmp
jns
push
adc
cmp
xor
pop
jmp
mov
xchg
fwait
xor
shr
std
rorb
inc
add
push
dec
mov
std
push
aaa
sub
adc
mov
add
sub
sbb
or
mov
nop
xchg
mov
push
pop
scas
add
outsl
rcrl
out
dec
and
enter
stc
mov
push
inc
cmp
pop
mov
sub
repz
jno
cmpsb
and
push
ds
movsb
mov
repz
push
insb
nop
loope
inc
movsl
cmp
jecxz
fld
pminsw
ja
mov
mov
jl
test
les
lcall
cmpsb
xchg
jne
es
mov
es
mov
inc
dec
xor
ret
ljmp
and
ffree
pop
shl
fmull
push
jne
dec
int
fsubrl
in
sbb
cmp
mov
dec
les
aad
in
adc
cmpsl
dec
pop
sub
iret
or
cmp
in
je
shll
popa
xlat
push
insb
mov
lahf
scas
jp
xor
sbb
aad
push
cmp
aas
mov
pop
inc
aas
in
sub
fsubp
push
shll
test
daa
jp
into
fucomi
jae
add
cmp
testb
push
cwtl
cmp
push
sarb
addb
loop
cmp
and
lret
mov
and
pop
test
sub
or
or
push
sub
leave
mov
jmp
es
jne
add
ret
ret
or
sub
jle
addb
ja
cmp
mov
cmc
aam
xlat
push
sbb
das
sbb
xchg
sarb
fdivl
movsl
xor
lea
xchg
add
jge
jnp
add
dec
add
int3
mov
and
xchg
aad
dec
mov
pop
test
popa
sbb
dec
in
out
jb
hlt
dec
mov
push
dec
sbbl
push
jle
cmp
adc
sbb
cwtl
push
xchg
pop
frstor
adc
pop
gs
scas
adc
dec
fwait
imul
xchg
pop
aam
mov
imul
mov
call
je
pop
inc
xorb
rcll
mov
push
adc
daa
mov
pop
sarb
pop
leave
sub
jno
mov
faddl
insb
xor
out
mov
jo
xchg
jo
fisttpl
sub
in
mov
fists
outsl
fldl
jne
cli
ds
test
or
shl
push
xor
xchg
mov
adc
xor
mov
mov
cmpsb
jle
lock
dec
leave
mov
inc
stos
mov
dec
or
int3
repnz
aas
cltd
adc
pop
fwait
push
and
jmp
add
mov
out
aad
mov
and
xor
out
push
xchg
adc
mov
sbb
xor
sub
ja
in
sub
pop
inc
dec
mov
enter
add
xor
adc
xor
xchg
mov
enter
arpl
mov
mov
int
je
in
scas
push
jecxz
jns
loopne
mov
xchg
cmpsb
pushf
nop
dec
inc
and
stos
sahf
xchg
mov
cmp
test
ret
push
cwtl
push
dec
dec
pusha
ss
mov
loopne
icebp
and
popf
pop
imul
mov
int
dec
repz
add
xchg
enter
and
fstpt
fsts
add
mov
push
mov
fsubl
stc
mov
xor
sub
sub
test
into
pop
pushf
mov
or
inc
cwtl
daa
sbb
mov
addr16
scas
cltd
add
leave
or
xor
dec
cwtl
mov
out
push
pop
lret
adc
xchg
imul
add
in
sbb
outsb
mov
pushf
mov
sbb
xchg
addr16
ss
mov
test
inc
ja
jp
jle
xchg
lret
clc
dec
cmp
add
dec
push
jae
cmp
scas
sbb
das
adc
inc
aaa
jnp
test
inc
mov
sbb
or
xor
mov
add
ret
push
push
inc
test
out
mov
adc
pop
xchg
gs
clc
xor
js
push
addr16
cli
dec
dec
dec
jns
inc
sbb
dec
call
jae
adc
popa
and
mov
jnp
jb
test
push
repnz
shlb
cmp
cmpsb
es
mov
jbe
lret
ja
aas
push
push
stos
xor
pop
data16
push
sbb
ljmp
add
adc
xchg
lods
sbb
push
inc
pop
popa
mov
test
xchg
cmc
sbb
inc
mov
mov
addl
jmp
negb
aad
int
mov
mov
add
sbb
into
mov
rorl
jae
mov
push
out
push
arpl
movsl
xchg
je
bnd
shll
lret
or
pop
xor
cld
test
xor
jns
xchg
test
push
aam
into
or
pop
xchg
push
std
pop
ja
sub
pop
push
inc
rcl
int3
add
inc
pop
pop
lea
push
in
sub
xor
and
sub
push
and
fcmovnb
bound
data16
sub
mov
mov
mov
inc
pop
pop
push
cmp
xor
jnp
aas
fs
or
jle
imul
push
mov
xor
jl
mov
test
xchg
jb
stos
push
into
mov
sbb
sahf
jns
sub
mov
jmp
and
sbb
int3
std
rcrl
mov
gs
lods
or
push
fistps
aad
aad
loope
aam
dec
add
xchg
divb
push
fistpl
int
xor
aas
shll
subb
xor
mov
push
aad
mov
inc
outsl
js
test
and
adc
inc
xchg
fsubrs
and
push
cwtl
mov
adc
xchg
inc
mov
js
xchg
sub
dec
jmp
xor
cmp
or
add
jl
cmp
adc
mov
inc
add
iret
iret
and
or
push
xlat
iret
fstl
cli
xchg
in
push
outsl
daa
ja
mov
sub
adc
adc
xchg
ret
insl
fldcw
push
jo
aaa
lods
repz
repnz
int
pushf
mov
or
cwtl
hlt
push
pop
lret
mov
sub
xchg
and
out
mov
icebp
les
or
dec
aam
sti
sbb
dec
ret
push
sub
pop
stos
std
inc
cmp
adc
mov
shlb
sub
jb
push
or
mov
fnsave
sub
pop
imul
rolb
insb
icebp
fnstsw
adc
xchg
adc
cmp
add
mov
push
xchg
sbb
mov
test
dec
pop
add
xlat
stos
jo
aas
lret
pop
inc
mov
cmp
or
arpl
push
dec
dec
aaa
xchg
mov
inc
sub
insl
push
xor
cmp
fimuls
pop
or
iret
call
mov
scas
sti
mov
dec
mov
jge
addr16
mov
cld
pop
or
mov
pop
mov
sbb
shlb
mov
pop
dec
xchg
add
test
jo
mov
addb
pop
xchg
mov
mov
cmp
mov
cvtpi2ps
lret
inc
mov
leavew
xchg
inc
pop
lret
push
aaa
insl
imul
pop
icebp
insl
xor
jnp
xchg
ret
sub
and
xchg
into
scas
mov
mov
fildll
inc
cli
sbb
pop
addr16
push
push
lea
sub
push
orb
and
addl
into
aam
pop
lock
arpl
daa
sbb
xchg
mov
lock
scas
movsl
sti
sahf
sahf
add
add
ror
xor
dec
xchg
jmp
jp
pop
ds
mov
jbe
add
ficompl
or
mov
cld
jmp
sbb
popf
mulb
dec
jg
icebp
mov
in
sub
shlb
xchg
adc
cmp
jge
push
aas
xchg
or
pop
xchg
mov
pop
dec
int
bound
cmpsl
roll
rcrl
frstor
jmp
jmp
shr
data16
rcrb
push
into
cmc
nop
mov
add
jo
cmc
push
das
jmp
lret
xor
pusha
ret
sbb
pusha
jns
pop
or
jb
repnz
mov
loope
mov
call
lret
scas
pop
push
jle
rorl
aam
addr16
push
ljmp
stc
inc
je
cmp
stos
xlat
popf
addr16
jmp
hlt
arpl
inc
jo
arpl
dec
scas
leave
mov
sub
aaa
mov
mov
ds
addr16
fisubrl
jg
xor
stos
cmp
negb
fisubl
bound
inc
in
jmp
pop
and
ja
inc
inc
cs
lcall
mov
sub
adc
iret
test
out
loopne
jbe
lahf
xor
adc
enter
test
fbstp
xchg
inc
lret
lock
into
push
cwtl
push
stos
sysret
stos
std
jnp
ss
adc
or
dec
scas
lea
lea
cltd
mov
jae
add
dec
lods
push
out
xchg
mov
sbb
xchg
in
add
jecxz
xchg
sub
enter
ljmp
adc
sub
pop
or
movsl
pop
inc
sub
in
lds
sahf
daa
jmp
cmp
pop
fwait
sbb
jne
aam
inc
popf
or
push
test
lock
les
or
sub
addr16
popf
outsl
shll
loopne,pn
fiadds
dec
jmp
cld
stos
and
and
movsl
pop
shrl
push
int
lret
push
movsl
pop
imul
test
loop
mov
mov
loop
mov
jp
aaa
mov
call
sahf
mov
data16
mov
inc
push
jae
jo
faddl
into
call
dec
cmp
xchg
mov
add
sub
adc
sbb
bound
jge
shlb
xchg
imul
cmc
cmp
aam
fdivrl
dec
sarb
xor
aam
mov
mov
sub
push
flds
cld
idiv
movsl
popa
dec
pop
mov
pop
pop
xchg
decl
arpl
aam
into
push
mov
inc
popf
loope
add
cmp
sti
pop
outsb
addr16
enter
movsb
fs
inc
push
cmp
lods
mov
push
roll
loopne
aam
jnp
push
out
or
pop
mov
add
pop
mov
neg
pop
fnstsw
cmpsb
xchg
mov
sub
and
cmp
ljmp
inc
repnz
mov
and
xchg
lcall
cmc
or
aam
xlat
push
outsb
stos
or
pop
xor
cwtl
mov
sub
mov
pop
mov
mov
add
cmp
outsb
mov
icebp
shll
adc
stc
mov
mov
mov
insb
cld
dec
in
jb
adc
cmp
sub
sub
pop
xchg
push
cwtl
pop
mov
sti
push
xor
loope
add
xlat
mov
mov
mov
out
pop
xchg
mov
push
and
aad
call
stos
inc
int
sbb
movsl
jmp
bound
aad
stos
inc
loopne
ja
jle
sbbb
ret
dec
stc
mov
sub
fiaddl
divb
lret
or
adc
data16
aaa
push
sarb
mov
add
ret
mov
add
les
aad
ror
shll
inc
xor
outsl
and
hlt
ret
xchg
inc
sub
xor
scas
add
loope
jb
leave
jne
xor
movsb
rolb
sub
sub
les
mov
in
inc
test
adc
aaa
sub
push
push
stos
xchg
aaa
jne
aam
mov
mov
or
add
iret
and
ja
push
xor
jmp
sahf
out
fs
sbb
cwtl
jp
in
push
xchg
fs
lock
shll
inc
addl
push
stos
jp
push
xchg
xlat
mov
cmpsl
fdivr
pop
enter
inc
xchg
or
and
xor
lds
insb
push
cmpsl
xor
or
das
shrl
or
repz
cmp
xor
nop
cmp
pushf
lods
and
iret
mov
or
lods
push
inc
push
dec
in
push
aas
popf
sub
push
imul
inc
mov
icebp
jne
mov
orb
gs
gs
jle
push
mulb
aas
test
mov
insl
sbb
and
in
pop
or
or
jo
loopne
mov
aas
dec
add
js
sub
loope
clc
sbb
jae
dec
sti
xchg
xchg
mov
jmp
icebp
cmp
inc
dec
xlat
repz
pop
dec
inc
and
xor
pop
movsl
inc
mov
inc
inc
mov
inc
mov
push
icebp
jno
inc
sub
sub
jae
add
mov
mov
jl
xchg
sbb
xchg
push
repnz
cmp
mov
sub
scas
dec
push
mov
sub
mov
jnp
shlb
dec
pop
mov
cld
sahf
pop
mov
pop
test
lahf
adc
push
dec
int3
xor
lock
stos
sub
call
adc
cmp
lret
or
sbb
pop
daa
xor
fs
testb
fildll
or
pop
rclb
sbb
sub
and
sbb
int
fcomps
xchg
sbb
dec
pop
or
inc
dec
push
cs
cs
lcall
mov
movsb
sbb
notl
sbb
jbe
ja
sbb
pop
fcomi
pop
and
fstp
pop
arpl
ss
cmpsl
addr16
dec
fucomp
aam
cwtl
lods
rolb
push
ret
or
in
scas
in
pop
scas
lret
push
or
cmp
push
cmp
mov
push
add
movsb
ds
add
push
lret
sbb
or
mov
adc
and
leave
in
test
les
mov
insl
add
push
pop
pop
cmpsb
out
dec
xchg
jl
out
outsl
push
cmpsb
pop
stos
lods
repnz
mov
adc
jle
xchg
push
inc
hlt
fisttpl
jb
mov
cwtl
push
jns
cvtps2pd
int3
pop
int
int
or
sbb
push
es
test
mov
jge
dec
std
stos
sti
pop
add
repz
fdivrs
in
push
mov
mov
bound
pushl
aas
push
mov
mov
and
cmp
bsf
add
fimull
mov
loopne
stos
imul
scas
sarb
inc
out
scas
pop
fadds
or
pop
test
adc
add
inc
inc
mov
repz
mov
test
push
adc
and
push
or
int
add
mov
mov
cld
stos
xor
mov
mov
out
xchg
push
mov
mov
mov
popf
mov
jb
jg
xor
out
push
rcrb
inc
xchg
icebp
push
out
fidivs
xchg
cmc
xor
ret
and
adc
jae
xchg
mov
push
mov
push
out
mov
jae
lods
ficompl
test
cmp
jb
pop
bound
ss
ds
mov
adc
xor
nop
mov
add
aad
cwtl
and
cmp
jmp
add
filds
in
cmp
loopne
jbe
daa
or
sub
lock
mov
mov
jne
sub
stos
jp
fdivr
inc
xchg
push
js
subb
dec
hlt
mov
pop
cmp
dec
mov
addr16
mov
cmp
subb
out
cld
xchg
sbb
jg
adc
jb
xchg
cld
jp
xchg
and
push
mov
mov
dec
xchg
lcall
out
int
xchg
sub
outsb
out
shrb
es
or
addl
xchg
les
jo
xchg
adc
adc
loopne
mov
dec
fs
sub
fwait
daa
sub
in
jns
rolb
repz
into
jne
sahf
rolb
xor
mov
aaa
push
sbb
decb
cltd
out
cmpsl
adc
mov
orb
dec
pop
xchg
jno
cwtl
stos
mov
ljmp
jbe
push
in
mov
popf
insl
push
loope
mov
push
fs
rorl
push
and
mov
jno
mov
xor
sub
fisttps
imul
or
xor
hlt
dec
cli
clc
insl
out
sbb
mov
in
ljmp
cmpsb
xchg
xor
test
scas
aam
lea
push
xchg
or
jp
insl
jnp
call
subb
rol
cltd
sbb
push
push
jmp
fst
movsl
jl
addl
mov
dec
arpl
leave
sub
in
lea
push
iret
mov
sti
cmpsl
sub
cltd
leave
ds
dec
lret
xchg
add
or
push
addr16
pop
fwait
scas
nop
lock
sub
in
dec
aam
mov
icebp
fdivs
cmp
dec
icebp
popa
repnz
adc
jmp
mov
jae
cmp
cli
pop
cwtl
std
imul
cmpl
out
cmpl
add
out
sahf
pop
mov
pusha
jmp
pop
fiaddl
push
mov
jb
mov
insl
sbb
push
dec
push
push
fidivrs
mov
dec
push
sbb
or
ret
push
int3
aas
hlt
fcomp
mov
fs
mov
jge
arpl
jno
icebp
push
dec
dec
fildl
dec
outsb
loope
jmp
ret
andnps
jp
fildl
pop
cmp
insb
hlt
cli
mov
scas
aam
inc
test
mov
lret
xor
mov
lea
test
push
push
mov
shlb
cli
lret
stos
inc
sub
nop
lahf
push
adc
mov
dec
add
repnz
shll
arpl
bound
mov
cmp
ret
jnp
push
daa
bound
enter
mov
or
bound
sbb
inc
in
mov
out
cmp
push
movb
incb
aaa
xchg
ljmp
cmp
cld
jb
jge
xchg
out
and
push
push
jle,pt
pop
cmp
addr16
jnp
insb
dec
jl
lret
inc
jae
lods
daa
hlt
mov
test
jno
mov
cli
shll
test
dec
jmp
or
cmpsl
iret
out
into
push
jbe
sub
mov
push
jae
xor
push
xchg
sbb
popf
pop
inc
std
inc
cmpsl
lahf
clc
call
xchg
or
ja
inc
jbe
dec
into
push
hlt
add
inc
jns
jne
pop
sar
jae
addr16
or
shlb
adc
fisubrs
mov
mov
sub
push
test
pop
enter
sub
rcrl
dec
addb
rclb
adc
add
push
shlb
or
das
test
push
int3
outsl
out
cltd
pop
out
shl
sub
daa
fistps
jle
mov
imul
jns
aam
mulb
ficompl
xlat
idivl
push
hlt
outsl
cmovle
pop
daa
andl
pop
sahf
xchg
mov
and
cmpsl
movsb
scas
mov
scas
inc
dec
aaa
xchg
pop
loope
rcl
dec
mov
in
std
cmpsl
imul
sbb
data16
enter
xlat
outsl
push
push
cmpsb
ja
mov
jp
mov
lahf
pusha
sub
pop
mov
adc
hlt
in
in
pop
mov
mov
out
sub
and
in
mov
add
pop
pop
ret
nop
addl
adc
and
and
les
sub
ja
inc
or
xchg
mov
mov
shlb
mov
and
rclb
xchg
sbb
ss
icebp
jo
add
mov
movsl
push
mov
ljmp
pop
lcall
adc
clc
mov
inc
insb
inc
or
lcall
mov
cmc
fldcw
cmp
test
enter
cli
adc
cmp
mov
in
popf
or
mov
inc
loope
js
pushf
add
mov
in
xor
cmp
out
fsubrl
stc
decb
jne
fsubrs
mov
cmc
into
mov
scas
clc
sub
scas
cwtl
pop
xlat
scas
into
or
add
fildl
adc
jns
insl
mov
test
imul
push
pop
push
lcall
inc
adc
sub
repz
sbb
cs
jbe
add
int
repz
jg
sti
dec
out
mov
pushf
in
xchg
cmp
sub
clc
sti
aaa
or
add
add
iret
pop
adc
pop
dec
and
jnp
dec
inc
xor
test
ljmp
pop
add
andl
out
fbstp
mov
pop
imul
inc
pop
mov
cltd
add
pop
sahf
out
repz
push
push
stc
jle
lret
rcrb
inc
iret
or
das
mov
jnp
dec
out
test
das
jns
cltd
push
cmp
sbb
jno
and
xor
xchg
pop
addl
fcmovnb
scas
bound
mov
les
inc
sahf
mov
mov
mov
pop
dec
call
icebp
arpl
lret
lret
int3
es
or
scas
cmp
cmpb
jle
xor
mov
dec
out
test
ret
push
gs
imull
cwtl
shl
add
sysexit
fistpll
dec
in
arpl
insl
add
mov
sbb
lahf
outsl
mov
data16
js
push
repnz
push
push
mov
mov
rolb
and
cmp
pop
dec
out
dec
inc
fnsave
and
sbb
cmp
flds
lds
pop
scas
sub
sub
mov
dec
jp
sbb
xchg
xor
push
outsl
loopne
sub
sbb
mov
sub
dec
icebp
sbb
aad
andb
adc
mov
inc
lahf
inc
insb
sahf
cmp
aad
loope
xor
repnz
cmc
mov
test
mov
and
rolb
das
mov
ss
mov
ljmp
test
fisubrl
mov
pop
dec
and
adcl
adc
stos
dec
stos
cmpsb
pop
hlt
fmull
and
aaa
xchg
lcall
call
ficomps
jp
xchg
or
and
jp
push
je
repz
ja
ds
sbb
aad
xor
addl
dec
aam
popa
cmp
jo
rcl
in
xor
loope
mov
mov
inc
fsts
arpl
mov
lret
pop
in
sub
test
xorb
lcall
call
and
push
jge
mov
or
jo
fwait
divb
adc
rorb
arpl
dec
mov
mov
addr16
and
mov
dec
jbe
mull
dec
mov
inc
sub
and
xor
into
add
scas
mov
js
sbb
adc
cmp
test
ds
sahf
aad
lahf
inc
and
pusha
jae
ds
inc
mov
xchg
jo
mov
mov
fs
jae
push
cmpsl
fidivl
fsubs
ljmp
sbb
addr16
fcomi
bound
adc
xor
lahf
js
xchg
shll
sti
pop
jg
rclb
mov
cmpsb
lds
lock
mov
ret
dec
mov
inc
out
repz
gs
pusha
scas
movsl
cs
sub
inc
sbb
xchg
xchg
push
push
out
divl
pusha
insl
push
addr16
in
xor
mov
jbe
adc
push
jmp
jae
or
and
xor
cmc
mov
dec
mov
jecxz
cmp
mov
fbstp
push
sbb
outsb
mov
outsb
mov
dec
pop
movsl
cli
int3
dec
inc
fisubs
dec
add
int3
add
sbb
push
pop
fs
in
cltd
movsl
adc
int
and
mov
test
mov
xor
aas
scas
and
pop
ficoms
adc
xor
loop
and
or
xor
inc
movl
add
addr16
rcl
leave
lock
cmp
bound
sbb
cmc
sub
push
adc
or
cld
mov
or
stos
pop
add
mov
pop
ret
cs
inc
fistpl
inc
stos
orl
cmp
xor
inc
pop
xor
xchg
popf
leave
push
mov
lret
add
pop
push
adc
shlb
shlb
cmpsl
div
xchg
stos
repnz
dec
in
cltd
adc
out
push
in
fimuls
inc
notl
cs
jl
cmp
cld
jnp
ret
sub
push
aad
sbbb
mov
rorl
das
pop
mov
add
and
mov
add
xor
cltd
cmp
mov
push
lds
icebp
insb
mov
rcll
fistpll
xlat
mov
lods
mov
dec
inc
lcall
data16
cmp
jp
push
lcall
xchg
mov
jo
hlt
mov
aad
jae
mov
xchg
std
insl
call
mov
pop
and
shr
cmc
or
push
vpmacssdql
andl
jmp
test
rclb
jle
hlt
popf
retw
dec
xor
adc
xchg
adc
sub
lahf
mov
in
add
jbe
dec
ret
sub
adc
out
insb
jne
stc
cmp
push
fwait
sub
jg
gs
addr16
mov
lret
jmp
test
repnz
sub
mul
out
dec
out
mov
stos
cmpsb
data16
leave
and
idivl
pop
jns
stc
push
gs
fnsave
clc
mov
jno
push
dec
push
pop
push
or
xchg
mov
push
fdivl
aas
movb
insb
xor
shrl
dec
push
jp
adc
push
xor
adc
pop
jne
pop
sbb
aam
popf
outsl
mov
xchg
das
in
xor
fcoml
ss
xor
sbb
dec
ja
shll
xchg
mov
cmp
cmp
cmp
icebp
or
cwtl
lret
notb
scas
jp
outsl
mov
xchg
jnp
sub
push
jae
dec
pop
arpl
mov
mov
outsl
fcmove
mov
test
or
aas
xor
cwtl
jle
inc
dec
inc
dec
sub
adc
lods
out
lods
in
and
pop
nop
mov
out
push
xor
cmp
mov
and
inc
dec
test
stos
cmp
shrl
fnclex
xor
mov
mov
xchg
loope
sbb
je
pop
push
jo
lods
aas
lret
arpl
test
repnz
add
mov
in
push
xchg
fdivs
and
mov
in
int3
pop
jo
xchg
rorl
and
or
jb
aas
aam
nop
loopne
lret
lods
mov
inc
lea
mov
addr16
ljmp
lahf
lea
shlb
adc
xchg
addr16
stos
xor
mov
nop
cmc
push
add
xchg
test
leave
jo
push
in
scas
in
scas
dec
sti
xchg
addr16
stos
pop
cmp
sbb
cwtl
fbstp
inc
and
test
repnz
addr16
xchg
nop
add
jns
push
add
sti
or
outsb
fstp
cmpsb
fwait
lds
aaa
xor
sub
jno
les
in
inc
aad
popa
pop
pop
hlt
sbb
add
into
mov
adc
cmp
sbb
lods
jmp
push
push
fldenv
adc
and
int
out
xchg
dec
cmp
pop
testb
pop
shr
adc
int
sub
xor
adc
xchg
xchg
fwait
dec
and
dec
or
xor
bound
cmpsl
aaa
out
push
inc
xor
cltd
dec
jl
xlat
fs
xchg
sub
bound
test
test
push
cmpsb
iret
sbb
mov
or
mov
jl
or
lret
sub
and
ja
fidivl
push
repnz
push
jae
xchg
ds
popf
stos
mov
inc
mov
sub
fdivp
sbb
pop
addr16
insb
sub
push
mov
mov
out
xor
loopne
pusha
mov
lods
and
push
and
or
and
rorl
fadds
pop
push
ss
insl
lock
leave
sub
or
fisubl
int
sub
hlt
mov
and
adc
sub
outsl
lea
xlat
mov
jl
test
imul
inc
xchg
sbb
call
xchg
pop
jmp
xchg
xor
xchg
cld
mov
ret
jle
adc
mov
inc
andl
push
dec
mov
imul
rol
test
lahf
aas
xchg
pop
xchg
or
sahf
aaa
xchg
popa
leave
xor
imul
push
cs
jne
mov
dec
or
xchg
push
ljmp
stos
pop
cwtl
jbe
dec
pop
inc
cmc
push
jp
add
cmp
movsb
fmul
and
test
ja
inc
leave
push
mov
orb
adc
or
or
sbb
cmc
xchg
into
mov
mov
pop
imul
xchg
cmp
insb
shlb
pop
lods
xchg
dec
jno
adc
dec
xchg
xchg
pop
jns
sbb
inc
xchg
inc
mov
mov
push
std
lcall
pop
jg
lahf
popf
sti
ret
scas
push
jns
xor
pushf
sub
sub
pop
adc
jmp
add
xor
and
xchg
ret
mov
lods
jp
cmc
mov
pop
pusha
dec
inc
dec
cmpb
inc
ret
sbb
int3
fsubp
and
out
mov
xor
movsl
add
es
fwait
imul
xchg
dec
sbbb
jp
add
lods
mov
outsb
inc
push
mov
repnz
inc
xchg
lock
pop
jmp
cmp
mov
pop
jl,pn
xchg
aam
jmp
popl
ja
mov
fwait
pushf
jp
cltd
and
inc
dec
push
mov
gs
mov
and
test
mov
stc
jl
mov
aad
nop
dec
in
or
xor
push
mov
mov
mov
dec
loope
inc
dec
leave
lahf
mov
dec
mov
mov
mov
testb
cli
repnz
ss
lahf
pop
dec
stc
xchg
in
sbb
xor
adc
jb
xchg
pop
sbb
das
aad
popf
imul
push
cmp
in
imul
lret
das
inc
divb
pop
inc
fstpt
push
dec
sub
mov
std
bnd
add
push
imul
mov
pop
xor
and
fdivrl
sbb
and
add
imul
loop
je
out
cmp
jbe
loope
bound
rolb
push
pusha
jmp
adc
inc
add
xor
outsl
aas
repnz
jb
sarl
xor
jb
int3
clc
xchg
maxps
leave
sbb
pop
cmpsb
loop
push
aaa
sahf
or
mov
push
push
mov
int
mov
and
andl
mov
cld
mov
jg
or
jbe
aaa
mov
xchg
adc
dec
scas
rcr
data16
fs
dec
mov
ss
subl
call
bound
jle
xor
xor
push
insb
inc
xchg
das
jne
movsb
cld
cltd
jg
adc
or
movsb
push
mov
movsl
push
push
sbb
orl
test
push
push
inc
inc
jnp
stos
add
push
xor
mov
and
push
xchg
dec
cs
xchg
xchg
fcmovnbe
and
cmp
into
sarl
add
cmp
pop
popf
sub
jo
outsl
push
loope
cmp
sbb
pop
cmpb
jb
jno
jmp
ljmp
add
pusha
jge
fiaddl
fwait
jae
pop
cmp
add
jecxz
or
cmp
outsb
out
scas
aas
sub
aam
cmp
xor
sahf
jae
leave
sub
cmpsb
pop
test
dec
fldl
sub
sub
and
add
fimuls
push
sub
jno
jae
rorb
adc
test
scas
add
repnz
sti
inc
mov
js
lahf
jl
mov
jle,pt
je
insb
dec
adc
and
push
movlps
xor
pop
das
out
into
mov
out
emms
xchg
adc
mov
orl
lock
cltd
mov
sub
rcll
sub
mov
cli
fs
pop
dec
xor
jmp
loope
lods
or
fisttpll
lret
xchg
fsubs
out
ret
aaa
sub
ret
pop
mov
movq
into
push
bnd
xchg
addb
add
xchg
fs
subl
inc
int
cmpsb
in
xchg
ja
icebp
outsb
inc
xchg
lea
cmp
fdivs
xor
or
cli
lods
adc
movsl
sub
and
lahf
adc
movsl
adc
andl
jmp
aas
jg
cmp
sbb
jmp
pop
mov
sbb
int
out
aad
popf
inc
lods
sbb
xchg
leave
arpl
and
scas
dec
fs
fs
insb
push
test
pop
cmp
loop
aad
jl
scas
jmp
ljmp
lods
shr
fcmovb
dec
pop
xorl
enter
hlt
inc
loop
inc
mov
incl
in
loop
and
popa
sbb
xchg
add
mov
addl
dec
pop
lea
inc
mov
repz
pop
cmpsb
xchg
es
scas
and
stos
bndstx
or
rcl
inc
mov
or
sub
add
in
rolb
add
mov
ja
mov
cmp
add
jbe
inc
sbb
mov
enter
jb
mov
rcr
call
cmp
aam
dec
popa
movsl
cmp
sub
sbb
mov
pop
xorb
push
rcrb
testl
int3
dec
add
xchg
jecxz
sti
cmc
das
in
mov
pop
shlb
adc
dec
pop
aam
dec
sub
test
andb
and
pop
mov
sub
mov
lea
das
mov
into
aam
stos
incl
add
sub
cs
cmp
dec
loop
mov
stc
ss
test
nop
imul
sub
xor
insl
aas
mov
out
mov
jno
rcrb
lock
add
fs
xor
dec
ss
test
scas
cmpsl
mov
jecxz
movsb
ds
cmp
aas
outsl
mov
stos
fldt
hlt
leave
enter
jmp
mov
in
cmp
xor
cs
adc
in
in
jmp
mov
adc
push
insb
dec
add
clc
xor
mov
push
lahf
out
pop
inc
sbb
bound
push
repz
sti
adc
ja
clc
pop
sbb
rclb
cmp
call
test
loope
cs
inc
mov
inc
pop
jp
xor
rorb
cmpsl
pop
mov
mov
fwait
stos
jno
int
addb
push
jns
mov
in
js
cld
xchg
push
inc
loope
mov
fcmove
shll
add
xchg
and
lods
roll
pop
adc
pushf
sbb
mov
push
xor
jp
mov
out
in
scas
icebp
pop
jo
jecxz
shr
mov
add
movsl
mov
adc
sub
dec
cmc
int
push
sub
cs
ss
pop
xor
in
pop
lock
iret
fwait
popf
push
add
push
dec
ret
movsl
hlt
push
add
repz
add
bnd
add
data16
testb
xchg
movsb
enter
shlb
jns
cs
or
sbb
bound
cli
jp
sbb
jbe
jo
or
pushf
push
aam
cwtl
mov
sti
dec
mov
cmp
dec
push
fcompl
cmpsl
rorb
js
inc
data16
pop
inc
dec
sub
das
cmp
mov
pop
aam
fdivrs
fistps
cmpsl
cld
xchg
addr16
mov
lret
add
xchg
nop
lret
insb
sbb
sub
test
iret
add
dec
arpl
mov
orb
inc
in
adc
fs
inc
popa
pop
mov
nop
push
push
and
mov
cld
mov
cmp
gs
rclb
enter
aam
sti
out
int3
and
sub
cmp
test
shr
push
pop
pop
addr16
das
enter
mov
pop
push
and
jle
inc
sbb
pop
cmpsl
cmp
insb
aad
fisttpl
jbe
push
cmp
mov
cmp
rolb
or
decl
adc
std
mov
imul
mov
push
inc
pop
push
aad
cmp
jbe
ds
add
cmp
push
cld
xchg
test
andps
pop
pop
cmpb
icebp
pop
xchg
das
rcrl
into
lahf
or
test
push
fisubrs
mov
sbb
out
mov
push
push
and
and
icebp
aam
inc
js
cmc
xchg
add
mov
jo
dec
cmpsb
adc
bound
nop
mov
pop
insl
cltd
mov
or
mov
loop
cltd
in
out
pop
lahf
test
sub
enter
sbb
mov
je
idivb
in
lea
jge
dec
xor
push
mov
into
xor
sbb
xchg
push
bound
scas
test
jecxz
ss
ja
jge
leave
xchg
push
or
xor
sub
pop
inc
out
rcll
jp
mov
xchg
push
into
xchg
dec
adc
and
pop
inc
fistps
loop
sbb
pop
scas
push
in
cmpb
jo
stos
adc
loopne
dec
fstp
lea
sub
and
jno
aaa
xchg
or
or
movsb
push
imul
repnz
sbb
push
jecxz
push
cmp
pop
push
xor
cwtl
inc
cs
and
imul
lcall
pop
outsl
lahf
cs
lds
mov
inc
sbb
popa
jo
mov
fbstp
sub
add
nop
insb
push
pop
or
cmpsb
pushf
mov
xchg
decb
push
movl
xchg
popa
inc
sbb
test
jne
mov
and
ja
and
sahf
add
shll
imul
inc
pusha
outsl
mov
pop
outsb
pop
stos
mov
xor
aam
push
int
inc
fdiv
clc
pop
sbb
loopne
ss
fcmovnb
fimuls
mov
cmp
mov
add
mov
in
sbb
and
mov
inc
adc
xchg
or
push
fisttpl
xchg
add
pop
mov
repnz
xchg
mov
xchg
add
cmp
ret
inc
and
push
pextrw
add
mov
les
cmpsl
lret
sti
fs
xchg
sbb
pop
test
sub
mov
pop
add
loop
sub
cmp
pop
rolb
mov
addr16
inc
dec
add
or
sbb
inc
xchg
adc
pop
jp
add
mov
sbb
out
jmp
insl
add
inc
sub
ljmp
inc
sbb
andb
sub
fisttpl
mov
fcmovnu
ret
push
xor
xchg
xchg
jp
mov
shrl
rorl
addr16
jne
rclb
ljmp
cld
xchg
mov
movsb
xchg
cmpsl
imul
je
sub
addr16
out
cs
jnp
pop
mov
and
pop
or
xchg
out
stos
shlb
cmp
js,pt
dec
xchg
inc
aaa
loopne
mov
push
xlat
imul
jne
cwtl
test
push
sbb
sub
push
mov
xor
add
mov
popl
add
icebp
inc
faddl
out
jno
mov
fisubs
sub
test
hlt
add
fldcw
xabort
pop
sub
cmpsb
sti
add
jno
or
sub
jns
push
dec
gs
dec
je
xchg
push
pushf
addb
push
shr
adc
outsl
subl
dec
push
push
dec
add
adc
test
lea
or
xchg
daa
js
mov
rcrl
jl
movsl
lcall
scas
sub
incb
pushf
rcr
xor
lret
stos
or
int
nop
xchg
out
lahf
xlat
and
leave
sbb
or
xorb
jle
jno
dec
aam
cwtl
sbb
inc
int3
ret
bound
push
push
int3
inc
inc
lods
out
inc
lahf
and
clc
cld
test
aam
push
mov
je
movsl
mov
sahf
fsub
es
adc
mov
mov
add
pusha
sti
sub
pop
push
aad
mov
and
mov
ret
add
sbb
out
outsl
inc
shrl
push
jmp
jmp
lahf
mov
test
lret
je
mov
imul
out
mov
jge
sbb
jns,pt
xchg
push
scas
sub
push
addl
xchg
sub
xor
cmp
ret
mov
lods
lock
push
je
pop
cltd
movsl
mov
adc
sbb
shrb
jl
jge
cltd
sahf
dec
jae
xchg
aam
inc
push
jb
push
mov
in
adc
push
sub
fidivrs
movl
rolb
or
or
call
stos
adc
xor
cmpsb
cld
sub
pop
cmpsb
mov
movsl
test
test
jmp
aas
xlat
sbb
sub
out
push
cmp
sub
mov
mov
adc
call
xchg
jne
mov
fwait
ljmp
hlt
cmpl
dec
push
nop
cwtl
jb
cli
cmpsl
add
adc
pop
out
dec
sbb
push
cld
push
push
jae
sbb
icebp
sarb
int
movsb
rorb
cmpsb
nop
out
dec
lret
fidivl
cltd
cmp
or
mov
popf
int3
adc
fldl2e
jg
test
xor
ficomps
stos
notb
loope
and
jne
mov
mov
fsubr
xchg
iret
inc
data16
cli
adc
andb
xor
aaa
cwtl
add
cwtl
sub
xor
inc
mov
dec
aas
mov
rolb
in
and
shlb
outsb
adc
lods
xchg
dec
movl
mov
sbb
shll
idivb
lea
ret
imul
out
add
iret
addr16
push
pop
and
mov
jmp
clc
int
add
pop
fisubrl
jae
cmp
jmp
push
jmp
lcall
sar
jl
dec
pop
adc
or
mov
gs
jp
push
fs
je
shlb
test
mov
mov
push
mov
aaa
and
sbb
dec
dec
loop
and
fmull
enter
mov
out
sbb
mov
aad
cmpsl
push
cmp
add
xchg
pop
dec
and
pop
ja
xor
and
mov
je
aam
movsl
xchg
aaa
adc
cmp
pop
gs
das
out
loopne,pn
pop
jle
push
mov
test
sbb
js
xor
mov
and
mov
sub
out
cmp
push
ja
out
int3
repnz
stc
mov
mov
sbb
pop
es
in
inc
repz
or
aaa
std
sub
mov
inc
out
dec
push
pop
jmp
mov
xchg
adc
push
call
xor
into
jb
stc
push
pop
xlat
mov
push
gs
xor
lock
aad
or
cmp
jmp
leave
adc
pop
aad
dec
lods
aam
or
xchg
out
aam
loopne
and
mov
adc
fadds
xor
pop
sbb
jae
mov
rcrb
fimuls
xor
imull
mov
push
leave
fs
inc
addb
sbb
pusha
cmpb
push
hlt
pusha
test
dec
inc
mov
ret
jno
inc
pop
inc
outsl
add
enter
lock
not
adc
test
pop
xchg
mov
dec
add
and
iret
or
jno
gs
popa
test
push
pop
mov
push
xchg
xchg
ja
xor
fsts
insb
xchg
adcl
sbb
pop
sub
lcall
sub
dec
mov
xor
or
pop
mov
pop
push
ret
neg
xorl
scas
jae
fisubl
jo
lods
stos
enter
ds
enter
mov
imul
jno
inc
cmpsb
lcall
frstor
je
rorb
push
cld
into
lret
and
cmp
shlb
jge
dec
hlt
imul
xorl
mov
shlb
jmp
lods
repz
push
xchg
xchg
stos
push
mov
les
or
int3
in
pop
lahf
add
mov
int3
cld
or
dec
push
mov
call
ret
or
mov
lods
mov
xor
cli
push
inc
mov
mov
push
push
adc
sub
ljmp
mov
or
shlb
dec
test
stos
adc
bound
inc
jae
data16
cli
sbb
cmc
ficompl
pop
add
cmp
mov
adc
inc
dec
sub
xchg
test
mov
adc
cmpsb
mov
add
xor
or
mov
data16
mov
push
inc
daa
mov
out
add
xchg
jbe
sahf
cmp
sub
jne
sbb
scas
xchg
push
test
aas
test
jno
jmp
cld
les
ja
xchg
xor
xchg
movsb
repnz
ret
popa
xchg
insl
je
lcall
aaa
cmp
iret
add
and
dec
into
sbb
dec
ss
mov
sbb
gs
fdivl
pop
loopne
inc
xlat
pop
dec
adc
rorb
mov
jns
outsl
lods
xchg
std
xchg
sar
sub
flds
dec
out
imul
shrl
mov
aas
jl
lret
push
out
out
adc
cld
fcompl
push
cltd
addb
push
loop
cwtl
pop
in
sub
sbb
sbb
pop
ret
and
xor
push
sarl
mov
or
adc
arpl
mov
add
out
mov
hlt
cmp
xor
xlat
mov
out
xor
std
add
pop
cmp
mov
mov
repnz
pop
cli
imul
roll
sub
push
jb
ja
xchg
pushf
fstps
scas
fnstenv
iret
mov
xchg
xchg
insb
cmp
pop
lcall
dec
add
add
stc
fwait
shlb
adc
pop
movsb
pop
test
loopne
cmp
fs
inc
popf
xor
pusha
fwait
cmp
ret
pusha
jae
sti
popf
test
xchg
xchg
rolb
test
test
cwtl
dec
sarb
xor
inc
pop
aad
shl
add
lock
xlat
cmp
arpl
dec
out
pop
dec
je
daa
je
sub
adc
xchg
push
cmpsl
cmp
jne
mov
stos
cltd
adc
cmpl
cs
dec
pop
cmc
stos
pop
and
mov
mov
call
or
jb
lret
add
or
xchg
pop
dec
mov
in
xchg
sub
test
into
mov
imul
lea
loope
ret
mov
xor
add
cltd
add
call
and
in
scas
fwait
and
lods
add
cmp
aam
and
cwtl
push
and
jns
fidivrl
jmp
and
outsb
dec
repnz
scas
fldln2
in
decl
mov
pop
ja
subl
mov
xchg
dec
mov
inc
and
or
fadd
push
mov
cmp
xchg
pop
addr16
mov
adc
add
pop
push
out
push
add
jae
push
test
lret
idivb
jle
jae
popf
fsubrs
addl
imul
xchg
fcom
mov
nop
fmul
stos
pop
cmc
arpl
sbb
dec
adcb
cmp
mov
cmp
add
jae
jns
mov
mov
sbbb
pop
test
push
nop
mov
leave
pop
stos
mov
add
mov
xchg
xchg
int
or
cmp
or
mov
ds
add
push
outsb
loope
xlat
ss
sub
fisubrl
inc
fisttps
mov
fsubs
pop
xor
and
jae
lods
sbb
cmp
inc
lahf
in
cmp
jmp
mov
mov
inc
xchg
fiaddl
adc
dec
mov
gs
sbb
jno
sub
pop
stc
jb
in
and
or
add
mov
jbe
mov
arpl
fs
inc
inc
fistl
dec
cmc
push
sub
int3
or
and
out
daa
cwtl
cwtl
mov
jbe
pop
dec
into
loopne
xchg
pop
loop
ss
inc
ja
and
push
bound
add
fists
sub
push
mov
xlat
fucomp
push
idivb
mov
ficomps
xchg
cltd
aas
cmp
push
inc
jle
aam
rclb
int3
xlat
and
out
xchg
push
jl
mov
ss
lods
dec
add
aas
fcoms
andb
dec
repnz
sahf
mov
out
ret
mov
sub
jae
inc
inc
jle
add
pop
add
mov
aad
dec
and
sbb
aam
push
adc
and
lods
xchg
and
push
jbe
jle
testb
jne
sti
jno
xor
repz
mov
cltd
inc
shl
and
mov
xor
insl
inc
push
or
jl
les
in
ja
fldenv
xlat
sub
cld
push
pop
xlat
sbb
mov
sbb
push
jg
sub
hlt
daa
sets
ss
fists
inc
jp
lret
loop
sahf
xor
or
repnz
jne
xchg
loopne
fnop
rol
push
in
cs
lss
ds
inc
mov
mov
pshufw
xor
add
xor
mov
mov
jb
adc
cmpsl
sbb
inc
or
sbb
les
adc
sti
jmp
stc
xor
outsb
mov
call
rcrl
xchg
icebp
adc
shrl
mov
mov
stc
xor
mov
or
movsb
repnz
dec
dec
scas
sub
nop
test
idivb
in
insb
inc
lods
mov
andl
sti
fcmovb
push
and
jne
mov
pop
nop
vsubss
adc
int
es
sti
dec
enter
mov
lcall
cmp
ret
sub
sub
insb
inc
jp
sub
mov
mov
sti
int3
movsb
cmpsl
pusha
stos
jg
enter
mov
xor
rcrb
test
sbb
rcll
xchg
repz
mov
in
mov
sub
mov
mov
push
jle
outsb
pop
or
push
mov
inc
popa
enter
movsb
or
or
out
rol
xor
mov
fwait
mov
mov
push
lret
in
xchg
jl
pop
jecxz
dec
nop
lods
sub
xchg
mov
js
fldenv
sbb
dec
daa
movsb
enter
jmp
pop
pop
int
fdiv
pop
mov
jo
inc
jge
or
daa
sti
xor
push
add
pop
les
push
mov
mov
lcall
popa
jns
jl
add
mov
sbb
sbb
xlat
cmp
mov
pop
xchg
lds
or
loop
sbb
stos
out
xchg
dec
pxor
pop
sbb
pop
jns
cs
mov
sub
mov
xlat
div
dec
ret
jno
dec
xlat
dec
or
lcall
dec
pop
sub
push
ja
lret
pop
dec
sub
cmp
and
add
jns
push
dec
movsl
fldl
xchg
lret
and
xor
incb
mov
fmuls
pusha
inc
jl
loop
jecxz
xchg
fstps
dec
fistl
aad
sbb
push
cmp
les
ds
lret
daa
clc
imul
or
lret
rcr
clc
aam
pop
push
jo
imul
je
push
sbb
mov
fidivl
mull
xchg
and
mov
call
xor
push
jmp
fnsave
stc
jno
jp
push
aam
addr16
push
or
call
mov
out
push
jmp
out
cmc
jge
pushf
mov
inc
and
and
add
xchg
jg
inc
sbb
push
xchg
sub
xchg
stos
pop
cmpsb
jle
test
push
in
push
in
adc
lock
and
sbb
xchg
popf
or
jmp
mov
adc
jbe
pop
mov
dec
sbb
out
roll
jbe
inc
jnp
int3
pop
mov
mov
cmc
cmc
xor
nop
inc
mov
es
fistpl
pusha
jl
dec
in
stos
or
add
xchg
mov
add
xlat
mov
inc
adc
shr
fidivs
xchg
icebp
int
add
sbb
int
add
rcl
mov
ds
push
lret
push
test
dec
popf
std
ljmp
mov
aam
jl
ret
or
fdivr
scas
out
cmp
andl
fcmovb
xor
mov
rcll
int3
mov
arpl
lods
loop
jp
jmp
test
jle
outsl
sbb
pop
lcall
es
ret
lds
adc
scas
out
or
cmp
arpl
pop
out
cmp
adc
mov
pop
sub
cli
clc
pop
sub
insb
fsubp
pop
ret
movsb
sub
jl
movsl
sub
sub
idivl
xchg
negb
in
test
test
daa
stc
cmp
mov
jbe
push
shlb
test
cmp
jae
leave
insl
cmc
or
movsl
icebp
mov
jp
ficoms
mov
jle
cs
fdiv
sbb
jecxz
shrb
test
int3
dec
dec
pop
dec
lds
jnp
faddl
jae
popf
push
stos
push
mov
je
clc
rcll
test
inc
push
xor
jns
es
lds
xchg
pushf
xchg
loop
xlat
adc
popa
hlt
hlt
subl
movsl
jbe
sbb
or
repnz
sbb
sbb
mov
mov
xor
cltd
sbb
pop
stos
inc
sbb
mov
sbb
push
adc
inc
or
test
fwait
or
stc
cmpsl
jl
andps
jbe
cmpsl
xchg
cmc
add
mov
ret
stos
mov
and
and
mov
add
or
loopne
xchg
out
lock
loop,pt
mov
or
js
cmc
popa
cwtl
push
xor
fmull
sub
mov
lods
or
in
push
rcrb
xor
popl
jne
repz
jp
and
in
popf
mov
les
mov
mov
int
mov
or
dec
mov
xor
lret
jae
adc
jbe
sahf
mov
stos
push
into
adc
repz
cmpb
sub
fbstp
adc
aam
add
push
add
out
pushf
rcrb
xor
jmp
push
jecxz
leave
cli
and
lods
pop
adc
add
jbe
icebp
aas
inc
iret
arpl
pop
sub
push
sub
insb
movsl
mov
in
nop
call
test
stc
fdivs
jbe
xchg
inc
cmpsb
inc
movsl
pop
dec
test
cmp
sahf
hlt
jl
cltd
sbb
xchg
in
lods
dec
sub
sub
adcb
mov
push
out
dec
pop
mov
hlt
mov
leave
and
inc
mov
mov
xor
mov
outsl
push
or
nop
mov
test
push
xchg
pop
mov
in
pop
mov
cs
in
jg
push
push
xlat
and
and
loop
jo
jge
sbbb
orb
cmp
imul
scas
shrb
pop
add
sub
jecxz
adc
outsl
and
xor
repnz
pop
out
rcll
ret
sub
inc
xchg
lret
and
ja
jp
jp
pop
or
dec
loope
repz
mov
or
les
fnstsw
mov
add
jge
inc
stc
int
sti
push
aas
or
or
jl
jmp
or
or
jns
mov
dec
imul
jb
mov
add
cmp
inc
jae
rep
insb
push
mov
mov
ss
loope
das
icebp
mov
fs
in
mov
leave
fildl
ds
mov
notb
mov
test
lock
mov
adc
pop
adc
sbb
dec
aaa
jl
sub
push
and
cmp
push
test
popf
movsb
movsl
xchg
mov
add
cmpsb
xchg
mov
daa
jne
fwait
lret
fwait
jb
mov
cmpsl
ds
stos
std
and
clc
clc
or
clc
sbb
sub
or
pop
push
and
out
mov
out
bound
sbb
mov
mov
inc
mov
mov
xor
fldz
dec
sbb
mov
xlat
pusha
aaa
jmp
bound
rolb
jecxz
push
jns
push
and
repz
aam
mov
outsb
sbb
stc
sahf
xor
into
pop
mov
aam
sub
xchg
pop
push
daa
int3
addl
and
pop
outsl
imul
loop
xchg
and
fucomip
xchg
es
cmpb
push
fstpt
jmp
das
push
leave
sbb
shlb
cwtl
sahf
inc
dec
lret
pop
xchg
filds
xchg
call
imul
and
xchg
or
inc
insb
insb
sahf
mov
call
mov
movsb
fsubrs
loopne
xchg
sbb
mov
insb
pop
loope
inc
xor
dec
shlb
xor
xor
mov
stos
jg
sub
or
jl
scas
mov
and
bound
adc
push
cmp
or
imul
test
add
jp
sub
ret
rcrb
push
xchg
fwait
neg
rolb
cmp
push
mov
adc
push
fisttpl
mov
and
loop
loopne
imul
push
jmp
lods
push
fstpt
cmp
jo
sub
sub
outsl
jbe
fwait
pusha
ljmp
push
movsb
pop
mov
xor
push
pop
mov
aam
adc
xlat
pop
pop
nop
je
into
inc
mov
pop
sub
xor
ret
mov
add
xor
sub
rcrl
mull
inc
stos
inc
out
add
ljmp
mov
xlat
sbbb
out
movsl
lock
ret
mov
jno
cli
mov
jmp
decl
dec
loopne
sub
dec
call
scas
mov
cmp
lcall
ficoms
sbb
loopne
fs
mov
jg
loop
inc
lret
pop
mov
cmp
stc
cmp
cmpsb
fsubrl
fdiv
arpl
out
xchg
or
xor
adc
dec
mov
add
mov
das
sbb
in
add
sbb
das
es
addr16
jecxz
int
mov
mov
cmpsb
mov
jno
xor
xor
lret
mov
movsl
xor
push
push
cli
pop
cltd
cmc
sbb
sbb
pop
cmpsl
jo
mov
out
inc
clc
cli
test
inc
dec
pop
out
cmp
aaa
scas
arpl
xchg
fwait
adc
adc
jns
fnstenv
sbbl
inc
test
jge
inc
mov
test
xor
xor
sbb
popf
mov
cmpsl
leave
mov
in
pop
lods
rcrl
pop
inc
jl
mov
jp,pt
or
mov
push
mov
and
jo
mov
xchg
or
add
icebp
fldcw
mov
lods
pop
dec
fldenv
mov
mov
push
cmp
fdivs
push
sti
mov
add
lea
imul
jb
push
sub
aam
jo
mov
jnp
adc
xor
pop
dec
ds
cmp
cmp
js
dec
ss
push
dec
andb
insl
jl
mov
jne
cmp
insl
imul
insb
push
jmp
jns
fs
cwtl
in
mov
jnp
out
lods
mov
mov
and
lods
rclb
es
iret
cld
jno
scas
jmp
jbe,pt
fisubl
test
jae
sub
fildl
js
pmulhuw
mov
mov
mov
dec
adc
cli
dec
xchg
xor
notl
sub
pusha
xchg
loope
call
sbb
lds
pop
inc
mov
mov
leave
xor
mov
or
fwait
dec
dec
in
xchg
jno
sub
mov
inc
fprem1
push
push
cmpl
test
cmp
rcr
mov
divb
pop
sbb
mov
cmpsl
out
ja
jp
stc
push
fnstsw
push
fsubl
dec
add
sub
bound
and
ja
xlat
push
xchg
enter
xchg
scas
aad
les
mov
add
stos
test
mov
mov
inc
or
loopne
or
push
popf
add
popf
jbe
fsubl
inc
sub
mov
movsl
ret
xchg
jmp
test
aaa
xor
mov
cmpsl
mov
or
mov
inc
jmp
aam
nop
sti
shr
outsb
pusha
lcall
addr16
push
out
jmp
hlt
xchg
inc
and
cs
push
fiadds
xchg
xor
ja
dec
enter
in
clc
stos
or
stos
rcrb
mov
nop
out
incb
push
dec
xorb
mov
xor
push
push
jle
aaa
cmp
cwtl
cmp
cs
jbe
test
cld
push
pop
xchg
pop
iret
stos
imul
scas
xchg
pop
pop
out
cmp
imul
or
repz
xchg
dec
inc
pusha
adc
stc
test
clc
out
fistpl
movsl
dec
push
jnp
xor
leave
ja
or
pop
sbb
adc
lds
xchg
lahf
cld
stos
add
and
mov
push
mov
int
lock
jbe
push
adc
ds
cmp
xchg
cmp
inc
cmc
das
inc
fbstp
cli
cmpsb
gs
adc
ljmp
push
shlb
cmc
mov
je
mov
mov
test
or
les
test
add
cmp
test
jl
fimuls
rcll
xlat
insb
jbe
xlat
rolb
mov
in
dec
icebp
pop
insb
sbb
adc
inc
push
dec
je
sub
shr
push
insl
xor
out
loop
jp
test
adcl
xor
push
mov
cld
inc
sbb
pushf
insl
in
mov
mov
movsl
pushf
xor
push
imul
jmp
popa
inc
stos
hlt
or
pop
or
xchg
out
cmp
shrb
outsl
mov
outsb
pop
lds
sub
pusha
loopne
scas
loopne
jmp
out
sbb
jmp
pushf
xchg
or
rcr
mov
xchg
in
jb
push
int
hlt
sbbl
std
je
mov
push
inc
or
xor
pop
stos
push
mov
xchg
inc
or
mov
flds
imul
add
stos
addr16
cld
sbb
or
or
dec
lret
xchg
loope
movsl
inc
lds
xor
es
iret
stos
push
int
inc
insb
sahf
out
cwtl
pop
jmp
call
and
ret
mov
aad
jmp
jo
cmp
mov
cmpsl
dec
pop
je
cmp
movntps
inc
orl
scas
int
push
das
push
imul
mov
inc
jae
popf
and
push
push
jnp
sub
outsb
xor
popa
shl
into
int
lea
fidivrl
mov
jbe
sbb
call
push
xchg
inc
out
dec
jmp
fidivl
push
pop
out
xchg
mov
cli
pop
inc
mov
les
add
test
push
stos
stos
aad
push
sub
rep
cmp
jb
ds
scas
pop
xchg
imul
mov
cs
rclb
mov
or
add
lods
adc
xor
repz
ljmp
mov
jnp
xchg
rorb
xchg
inc
fstpl
mov
and
and
sub
push
mov
push
fwait
in
xor
mov
fcomps
pop
lcall
test
dec
clc
push
add
cwtl
dec
in
sub
rorl
xchg
inc
cmpsl
and
fisttpll
test
lds
xor
and
outsl
ds
in
loop
outsl
jns
add
divb
roll
and
sub
xchg
lock
lret
cmc
outsb
pop
repz
mov
cs
data16
add
int
xor
mov
cmp
sbb
rorb
dec
jno
insl
push
bound
add
xchg
mov
push
cmp
pop
repz
out
lock
dec
fwait
std
push
test
std
ja
lds
jg
test
jle
test
hlt
xor
rolb
ret
popf
cs
shr
mov
inc
mov
gs
mov
fldcw
inc
fistpll
inc
fwait
pusha
sub
imul
mov
fisubs
mov
nop
cs
mov
mov
lret
pop
aas
mov
scas
lods
hlt
pop
sub
push
outsl
add
or
js
jbe
add
hlt
sbbb
xchg
push
xor
aad
add
les
or
mov
ret
cmp
mov
sub
out
popf
cmpsl
push
mov
xlat
push
scas
rcrl
aam
mov
push
aam
pop
jg
sbb
pop
jns
outsb
iret
addr16
add
fcoms
fsub
sub
ljmp
add
mov
adc
mov
mov
xchg
cmc
sub
adc
pop
sub
fnsave
mov
jo
repz
adc
pushl
push
pop
mov
adc
push
jns
mov
lret
jmp
sarl
fmull
pusha
and
enter
sbb
scas
add
xchg
lods
cmovle
add
inc
jg
push
jnp
and
lret
call
xorb
cmp
jge
cmpsb
insl
daa
cmpsb
rolb
mov
out
push
adc
inc
repnz
loop
dec
adc
lods
adcb
je
push
adc
mov
jno
repz
push
arpl
adc
cmc
pop
add
push
cmp
lods
push
insb
sti
mov
arpl
int
jae
mov
test
jns
cld
ds
pushf
mov
std
push
movsl
iret
push
push
and
imul
fimuls
push
cwtl
test
xchg
push
sub
jge
jle
test
fildl
mov
mov
mov
ficompl
and
xchg
dec
sub
mov
mov
scas
push
jno
lahf
mov
dec
jbe
add
or
lret
add
inc
call
cs
jecxz
adc
ja
cmp
cmp
int3
test
inc
sarl
sahf
pop
repnz
int
repz
push
lods
aad
xchg
cli
ss
mov
popf
pop
push
fidivl
aad
push
mov
cli
sahf
out
call
inc
add
inc
cld
cmp
mov
cmpsb
xchg
fcoms
push
jecxz
sub
repnz
stc
fldcw
adc
pop
mov
in
in
loop
scas
mov
add
push
dec
sbb
dec
fbstp
je
mov
xor
daa
and
shl
xchg
adc
jo
jbe
rol
push
ficoml
iret
mov
adc
pop
mov
mov
shll
cmc
mov
mov
mov
cmpsb
cmc
int
pushf
mov
adc
sbb
dec
xchg
push
and
dec
xor
pop
int
mov
in
mov
or
cwtl
sahf
rcrb
xor
sub
mov
pop
push
jmp
push
cmpb
sbb
addr16
pop
mov
inc
sbb
incb
ja
test
adc
adc
mov
and
mov
add
das
nop
sbb
shll
fstpt
in
ss
ficoml
icebp
adc
js
xlat
dec
push
lock
inc
or
out
sbb
jp
push
pop
adc
mov
iret
cmpsb
mov
cwtl
sbb
adc
cmpsb
insb
lds
rorl
repz
test
loope
aam
sar
mov
fisttps
add
shrb
in
mov
or
xor
daa
je
mov
sbb
leave
jb
loop
repnz
mov
mov
sti
adcl
mov
xchg
and
ss
dec
inc
ret
out
call
insb
insl
orb
into
xor
jp
sub
mov
jae
jg
mov
in
cs
int3
jg
clc
or
inc
jecxz
in
stc
into
add
outsl
pop
mov
cmpsl
push
inc
mov
xchg
xchg
sub
inc
jnp
ljmp
bound
sbb
and
jle
push
clc
lea
add
sub
mov
sub
sbb
test
adcb
sbb
sbb
leave
inc
mov
in
and
mov
adc
mov
cmp
pushf
scas
stos
mov
mov
pop
into
add
lret
sub
enter
cltd
test
fisttps
jg
xor
pop
loopne
sub
decl
leave
or
idivl
ffree
mov
stos
daa
inc
dec
pop
pop
pop
jge
mov
cmpsl
data16
into
btc
es
mov
or
add
test
and
repnz
es
push
bnd
xor
cmp
mov
fs
sar
lock
inc
fs
jno
inc
div
xor
loop
mov
cmp
or
xchg
sub
push
push
jne
pushl
shll
sub
jb
lea
fs
mov
push
xchg
ss
nop
jb
pop
push
or
in
popa
cmp
scas
rcll
outsl
adc
push
push
pop
cmpsl
inc
xchg
adc
mov
mov
xchg
xlat
lahf
or
cmp
push
mov
add
xchg
outsb
push
pop
jne
out
or
fdivl
ret
call
fists
xor
outsl
push
add
xor
mov
add
lods
cld
pop
sub
fdivs
pop
lahf
mov
lea
push
daa
loopne
movsl
sbb
adc
std
in
lods
mov
jns
ja
xor
push
adc
insb
pushf
enter
xchg
jecxz
repz
mov
shll
into
inc
jecxz
ljmp
pop
sub
xor
and
xchg
add
aad
lcall
fs
test
or
xchg
and
inc
push
mulb
push
out
push
insl
push
ja
or
and
andb
xor
jae
loop
je
std
pop
cmc
jge
into
daa
icebp
lcall
xchg
inc
xor
dec
scas
sub
push
fs
dec
cwtl
mov
xor
push
push
icebp
pop
add
addr16
mov
push
xchg
mov
jae
xor
jne
insb
sbb
mov
ret
pushf
jns
xlat
xchg
fndisi(8087
lock
sti
push
lahf
int
mov
mov
jae
out
mov
movsl
ja
insl
jno
xchg
ficomps
jns
cmpsb
mov
xchg
out
or
ljmp
outsl
fsubr
fwait
cs
fsubl
mov
lea
push
imul
and
jne
jg
call
pop
inc
mov
cwtl
fstps
or
aaa
push
call
pop
or
jne
adc
cmc
imul
out
rcll
in
xchg
data16
std
or
xor
mov
dec
sub
fwait
loop
mov
pop
mov
iret
dec
or
clts
jns
mov
lock
push
pop
pop
je
xchg
jno
and
and
inc
push
xchg
jl
jmp
gs
les
push
jmp
stc
je
imul
out
js
and
sub
lret
inc
loop
leave
cmp
call
jno
data16
push
mov
ds
sbb
dec
jge
push
int3
lock
xchg
into
fnstcw
cltd
addr16
aad
jmp
jns
adc
imul
sbb
sbb
mov
icebp
scas
push
lahf
jle
inc
inc
iret
ja
add
call
repz
gs
loop
adc
in
pop
dec
decl
out
enter
and
mov
mov
push
jnp
lods
xchg
and
popa
push
and
and
sub
pop
fisubl
ret
clc
add
sbb
mov
mov
mov
xchg
cmc
or
mov
pop
sarb
pop
fwait
dec
lock
icebp
xor
jae
hlt
shlb
orb
int
adc
inc
fisubs
gs
pop
repz
fldl
push
pop
rcll
mov
pusha
xchg
testb
xor
sbb
test
cmp
movsb
or
xchg
or
lds
mov
sbb
icebp
jo
push
jecxz
xchg
adc
jge
fnsave
loopne
imull
sub
mov
leave
inc
dec
xchg
mov
les
pop
and
out
or
sbb
fdivrs
jmp
jp
sarl
adc
stos
pop
stos
pop
outsb
in
or
sub
mov
mov
jmp
sbb
xlat
ficoms
mov
dec
outsl
lret
sub
daa
dec
aam
dec
hlt
scas
int3
imul
jg
cmp
cmp
hlt
sub
or
push
sbb
push
pop
mov
out
mov
or
outsb
out
loop
sbb
jae
jecxz
xor
nop
jo
js
loopne
sbb
fsubl
enter
pop
xchg
or
arpl
sti
into
stos
fs
imul
adc
cmp
in
and
pop
aaa
jle
push
ss
cmp
arpl
mov
pop
shlb
or
imul
mov
add
mov
or
lcall
push
push
aaa
xor
je
or
repnz
xchg
pusha
sbb
xchg
and
popf
cmp
or
in
popf
cmpl
scas
mov
lea
add
sub
mov
scas
mov
test
stc
jmp
lods
out
fisttps
push
js
cmp
daa
rcll
pop
es
pushf
lea
in
mov
aam
mov
xchg
jns
fsqrt
clc
imul
pop
mull
sub
popf
jg
jge
pop
sbb
leave
incl
dec
pminub
cmp
fstps
ss
mov
cmc
leave
inc
jo
and
xor
mov
mov
filds
mov
iret
repz
adc
jne
sti
repnz
inc
cwtl
and
push
stos
lret
jmp
shll
add
or
pop
sbb
mov
movl
mov
cli
outsl
mov
jmp
xor
inc
mov
sbb
pop
enter
test
jle
filds
dec
aaa
lds
fidivrs
clc
frstor
jne
push
cmp
mov
lcall
outsl
sub
jmp
gs
scas
insb
fbstp
cmc
jo
andl
cmp
or
das
aad
aam
add
sub
xor
stc
jecxz
jnp
fs
jecxz
sbb
bound
pop
mov
lods
fidivl
mov
cmc
cmp
movl
jl
into
retw
movsl
mov
push
outsl
fninit
jle
xchg
add
shl
test
mov
or
scas
out
in
ret
fwait
insl
icebp
sub
push
cmpsb
sahf
repz
pop
dec
add
mov
push
sbbb
pop
push
dec
xchg
sub
xchg
inc
ds
xchg
push
mov
xchg
jnp
jno
jp
insb
mov
jae
rcrb
cmp
les
hlt
xor
xchg
cwtl
xchg
ja
das
push
dec
int3
dec
mov
cltd
inc
scas
xchg
ss
loop
je
bound
sub
in
push
scas
fwait
out
fildll
jb
mov
ret
jb
inc
in
cltd
dec
ljmp
dec
dec
gs
cmp
sahf
add
inc
adc
rorl
mov
out
out
mov
push
jl
inc
lret
movsb
movsb
cmc
pop
or
mov
xor
xchg
mov
dec
pop
pop
jl
pushf
mov
stc
jecxz
test
jl
jp
fisubs
insb
cld
xchg
icebp
sahf
pop
inc
outsl
inc
xchg
je
fdivs
push
push
ds
push
dec
pop
xchg
rorl
or
into
les
mov
dec
jl
mov
testb
jl
adc
pop
pop
popf
lods
sahf
mov
inc
stc
int3
popa
mov
loop
inc
das
and
filds
rclb
popa
jno
aam
sub
or
mov
push
xchg
das
xor
sub
push
movsl
scas
sbb
aas
roll
call
xor
xor
mov
leave
xchg
loop
cmpsl
cmp
sub
test
cmp
cmc
adc
lock
repz
clc
cs
mov
dec
push
ljmp
hlt
adc
xor
cld
call
push
int
jbe
xor
jae
xor
cwtl
add
rorb
cmp
xor
sbb
mov
js
insb
jns
out
std
jne
pop
cmp
imul
jmp
or
dec
bound
repnz
sbb
dec
sub
xchg
ljmp
nop
jecxz
mov
jo
scas
jecxz
in
mov
mov
arpl
or
mov
cltd
dec
out
inc
movsl
push
pop
ljmp
mov
int
repnz
repz
mov
lock
push
sub
xor
hlt
pop
jne
and
outsl
sub
mov
xchg
loope
pop
mov
mov
mov
fcmovnu
je
sbb
xor
fdivrs
and
shlb
sub
gs
inc
xchg
inc
mov
push
insl
rorl
jae
aad
pmuludq
mov
mov
repz
jle
fidivrl
dec
loope
dec
pop
int3
hlt
sbb
out
mov
jle
inc
arpl
xchg
in
shl
jnp
out
dec
mov
pop
xor
push
add
mov
cmpsb
lret
push
xlat
mov
popf
bswap
insl
and
add
jno
inc
jg
mov
cmpsb
loop
sbb
jle
jns
fimull
cmp
jns
inc
mov
shlb
sbb
mov
jge
outsl
dec
add
test
outsl
cmp
lods
push
jmp
std
xchg
jae
lea
adc
push
repnz
inc
xchg
xor
gs
mov
jbe
xchg
loope
sub
jecxz
aas
dec
inc
jnp
xchg
jecxz
loop
cs
pop
mov
fnstsw
lret
xchg
sbb
jno
and
mov
fisttpll
mov
dec
xor
inc
and
test
adc
dec
mov
mov
scas
dec
or
flds
mov
rclb
je
inc
lret
cmp
cmp
mov
adc
inc
sahf
xchg
test
lcall
test
pop
inc
inc
adc
pop
mov
data16
push
mov
out
loopne
sbb
mov
loop
mov
jo
push
inc
enter
xchg
int3
mov
stos
aaa
dec
dec
shr
jmp
inc
adc
or
in
jge
sub
sbb
pop
and
cld
inc
jae
mov
int3
mov
movsl
xor
and
lret
mov
cltd
aam
lods
xchg
in
xor
sub
outsb
lods
and
mov
mov
icebp
sbb
movsl
int
inc
std
cltd
lods
pop
in
or
jnp
subl
push
sub
in
xchg
sbbb
inc
int3
pop
mov
cmp
and
mov
lret
hlt
aaa
divl
sub
insl
or
std
lods
test
es
sbb
test
sahf
mov
sbbb
mov
loopne
out
shrb
mov
dec
roll
push
out
xor
and
shlb
in
int
adc
clc
in
in
mov
js
adc
imul
fucomip
pop
pop
test
data16
stos
lret
fdivrs
call
out
sub
jb
push
adc
mov
cwtl
cmp
mov
fstpt
adc
dec
xor
pop
and
imul
cmpsb
mov
jecxz
jmp
sub
or
sbb
cwtl
mov
movsb
mov
scas
enter
cmp
dec
mov
jecxz
mov
lods
test
lret
adc
mov
das
mull
cmpsb
nop
jno
inc
and
out
sbb
pop
loopne
ficompl
loop
pop
rclb
ret
jmp
test
pop
xlat
xchg
in
push
repnz
bound
imul
xor
push
jne
and
loop
jns
mov
fdiv
into
in
xor
cmpsb
imul
push
stos
dec
js
aaa
pop
lcall
nopl
push
and
ljmp
lods
and
mov
xor
mov
lock
fldt
jno
xor
clc
adc
inc
push
ljmp
and
or
bound
mov
and
dec
mov
mov
push
test
fdivs
lods
lds
jg
xchg
repnz
clc
enter
mov
sub
push
and
sahf
mov
or
out
push
mov
enter
icebp
icebp
sahf
jg
inc
adc
aaa
add
sub
pop
ret
lret
lea
pop
mov
adc
mov
repnz
stos
mov
cmc
and
xor
std
cwtl
xchg
and
out
jecxz
or
test
loop
xchg
sub
in
jle
push
mov
loope
mov
pop
add
cmp
jae
adc
pushaw
inc
data16
sarl
jns
cmova
mov
or
mov
push
pop
jmp
fists
fidivrl
sub
mov
js
push
pop
inc
push
movl
bound
lcall
inc
rcr
sub
xor
cmc
pop
imul
pop
out
outsb
sbb
push
pushf
icebp
cld
cwtl
push
cwtl
sub
jl
js
jl
xchg
jb
push
cld
icebp
shlb
sub
cmp
cmp
sbb
iret
pop
mov
pushf
das
divl
mov
icebp
cmp
aas
dec
out
cwtl
stos
adc
or
outsb
jno
inc
mov
inc
xor
mov
imul
jge
lds
and
mov
clc
idiv
leave
mov
pop
adc
mov
sti
or
mov
ljmp
inc
dec
divl
leave
or
lahf
aad
push
mov
xor
fwait
rclb
jecxz
data16
sti
outsl
mov
add
out
mov
mov
pop
stos
jb
push
testb
adc
std
je
stc
aas
andl
adc
into
inc
aaa
out
push
lret
daa
push
mov
xchg
mov
fcomip
call
outsb
cmp
mov
test
dec
pop
test
push
dec
in
mov
call
les
jnp
sbb
push
dec
aam
adc
adc
repz
outsb
xchg
mov
jle
adc
and
bound
inc
cmp
in
fmul
jle
int
test
shrl
inc
sub
jbe
sub
mov
nop
sub
cmp
mov
dec
ret
daa
inc
imul
out
sbb
cmp
xchg
lcall
jae
arpl
dec
mov
or
scas
push
xchg
xor
leave
mov
jns
xchg
imul
insb
push
fstps
ljmp
pop
sahf
cwtl
sbb
mov
push
cmp
xor
lret
adc
in
mov
addr16
lds
xchg
outsl
pop
ds
or
push
xor
insl
not
mov
jg
jae
out
test
loop
stos
aaa
scas
sub
inc
cmc
pop
push
push
pop
mov
fmull
nop
add
push
daa
push
pop
xor
div
mov
pushf
mov
pop
push
shll
fwait
xor
leave
mov
and
and
mov
dec
jo
jecxz
sub
add
xor
xchg
in
stc
orb
ret
jmp
daa
and
repnz
push
popf
jb
pop
ja
push
dec
lcall
jnp
je
pop
out
bound
sub
sub
fnsave
and
cmp
cmpsb
and
push
cmp
pushf
pop
loop
pop
or
push
cltd
shll
cmp
xor
insb
pushl
xchg
cmp
add
pop
jl
mov
cmp
jnp
rclb
fsubrl
and
pop
mov
and
and
ljmp
jmp
movsb
cmp
xchg
inc
cmc
lods
mov
scas
xchg
push
imul
mov
aad
sbb
hlt
insl
lcall
jne
sbb
sahf
inc
and
imul
xchg
ret
pop
add
mov
xchg
mov
mov
push
push
mov
jns
jnp
xor
cmc
lods
and
jle
ret
stos
add
test
adc
or
adc
rcrl
mov
jno
mov
stc
scas
adcl
jl
in
fmul
push
mov
mov
inc
adc
and
mov
jne
sub
pop
add
inc
into
and
test
adc
mov
and
out
sbb
and
inc
jns
jecxz
cmc
repz
push
ffree
jp
rol
loop
enter
cmpsl
je
lock
cmpb
jmp
sti
out
ljmp
xchg
mov
mov
ficoms
push
cwtl
mov
es
out
scas
sub
sbb
cmpb
mov
scas
pop
shl
ja
inc
xchg
enter
or
lods
addr16
mov
hlt
adc
lcall
pcmpgtd
loopne
fsubl
loop
push
notb
sti
add
test
push
pop
test
enter
sub
fs
mov
mov
jae
popa
das
cmp
in
mov
pop
pop
fcoms
xlat
sub
cs
arpl
movsb
inc
test
movsl
inc
mov
push
jbe
push
cmp
movsl
push
jle,pn
push
add
xchg
sub
or
jo
jmp
hlt
mov
jae
xchg
add
dec
push
adc
and
stos
xchg
stos
fs
jns
pop
xor
add
jecxz
ret
mov
or
jnp
int
xchg
add
popa
ljmp
sub
cld
mov
out
arpl
repz
stos
scas
sarb
stc
rclb
add
lock
iret
sahf
cmpsl
insl
jg
lahf
mov
sti
add
xchg
push
push
push
xchg
cmp
xchg
mov
repz
lret
in
cmc
call
xchg
lods
insl
mov
popf
adc
jmp
or
ss
lret
mov
lods
out
push
in
cmpsl
dec
jle
pop
jecxz
sub
pop
loope
in
jmp
das
push
add
xlat
mov
sbb
and
jecxz
insl
icebp
cmp
lea
int3
int
flds
jbe
in
push
ja
jns
popf
xchg
data16
sub
sahf
in
test
les
mov
push
sbb
adc
call
loope
pop
repz
fs
inc
shll
cli
insl
mov
iret
loop
in
lcall
mov
or
lods
les
jno
loopne
lock
adc
insl
ss
fsubrp
xchg
loope
ljmp
xchg
xor
sbb
pop
scas
in
and
add
or
shr
xchg
in
roll
sub
inc
push
jbe
pushf
shrl
pop
inc
call
cmpsl
adc
insl
int3
mov
clc
lcall
je
arpl
arpl
jo
outsb
iret
shr
sub
in
das
xchg
inc
push
in
enter
or
mov
lcall
cmp
shlb
loop
scas
sub
arpl
pop
inc
cld
add
mov
mov
xor
jp
jns
jo
push
lcall
push
xor
mov
and
xorb
fiadds
jbe
shll
dec
int3
inc
sbb
add
imul
jb
inc
xchg
lcall
arpl
cmp
xor
jge
in
iret
test
jno
test
aam
pop
stos
push
insb
mov
mov
xor
push
push
aad
sbb
les
add
dec
and
out
les
ret
and
pop
inc
data16
sub
sub
inc
xchg
xchg
xchg
add
ror
movsb
pop
or
push
repnz
popa
cld
lds
leave
pop
pop
les
ds
push
int
push
push
jge
int
mov
xor
mov
xor
xchg
xchg
push
mov
iret
mov
js
xor
xor
stos
in
and
test
mov
pop
ds
inc
cs
cs
in
insb
add
and
push
lea
das
xor
imul
imul
test
cmc
ds
mov
jg
testl
loop
je
push
jbe
adc
repz
push
dec
fwait
incl
pushf
push
lcall
mov
mov
push
mov
repz
jp
xchg
inc
test
jbe
test
pop
inc
lock
icebp
inc
or
mov
xchg
pop
xchg
dec
gs
adc
jmp
jbe
or
lock
int
lret
jno
ljmp
pop
mov
mov
stos
mov
adc
outsb
jne
scas
ds
data16
sub
jle
lret
push
mov
or
sub
jge
inc
mov
jo
mov
ffree
adc
xchg
jns
dec
jb
dec
sub
pusha
xor
in
subw
adc
pop
pop
sub
pusha
jae
movsb
aad
subl
inc
loopne
mov
loope
sub
rorl
repnz
stos
call
loopne
adc
in
nop
mov
mov
push
das
rorl
mov
mov
imul
ds
or
movsl
leave
lret
push
xor
mov
mov
dec
lahf
inc
lahf
mov
fstl
dec
out
add
adc
adc
testb
repz
in
popf
and
mov
push
jge
mov
mov
jle
call
sbb
addr16
hlt
call
in
pcmpeqd
test
pop
cmc
cmp
sbb
cltd
scas
popf
enter
popa
or
and
adc
mov
lret
pop
add
lock
jne
ret
int3
push
fmull
je
cmp
ficomps
push
rcl
cwtl
out
loopne
movsb
data16
sarl
addl
imul
aas
adc
mov
shrl
js
scas
mov
in
push
push
jmp
jp
into
stc
pushl
or
lret
xor
stos
push
or
dec
shll
pop
mov
mov
nop
xor
mov
and
lret
add
xor
adc
mov
jns
add
loopne
fisubrl
in
outsb
jno
lea
mul
rcr
in
pop
fs
jo
popa
pop
aam
jge
jp
pop
dec
sahf
sbb
xchg
fwait
add
xchg
jmp
dec
pop
mov
dec
aaa
mov
and
loopne
xchg
pop
and
inc
loope
hlt
inc
hlt
sub
insl
nop
aam
mull
xor
dec
jmp
mov
mov
mov
push
xchg
movb
loopne
outsb
cmp
mov
mov
into
inc
lret
in
sbb
sbb
cmp
jecxz
mov
pop
sti
xchg
clc
and
leave
roll
clc
xor
pushf
popa
or
mov
jo
xor
cmp
jmp
insb
sub
dec
jg
dec
cmp
nop
dec
push
or
xlat
test
mov
sbb
nop
rorb
add
repnz
outsl
ja
jle
push
mov
lock
mov
and
sub
push
dec
inc
scas
enter
dec
push
into
add
pop
adc
cmp
scas
add
aam
std
insl
in
fstps
jle
rolb
mov
mov
add
fsubs
and
ds
out
xchg
jle
icebp
and
cmp
scas
cmp
cltd
mov
dec
mov
xor
enter
xchg
xor
mov
ret
push
lock
icebp
fs
cmc
cmp
les
xchg
adc
cmp
push
inc
fistps
outsl
addr16
das
ret
or
js
scas
dec
xchg
jnp
movsl
jb
jmp
add
inc
les
mov
dec
or
push
sub
xchg
lock
jecxz
mov
mov
adc
adc
les
insl
or
test
or
jne
cmpsl
out
ret
mov
jp
xor
lahf
jmp
hlt
or
je
scas
jb
push
imull
cltd
jmp
fwait
mov
xchg
call
mov
and
and
inc
cmpsb
and
push
imul
dec
cmpsb
mov
mov
jne
mov
xchg
aaa
dec
fsubrl
mov
add
jle
push
cs
or
sbb
sbb
sti
bound
cmp
jecxz
mov
xor
push
add
mov
jns
lahf
mov
adc
mov
sub
inc
je
lahf
xchg
ret
pop
pop
mov
rcrl
dec
stc
jno
jle
cmp
jge
jg
mul
and
loopne
dec
addr16
mov
pop
jne
test
insb
leave
out
cmp
add
mov
mov
jecxz
out
cmp
or
push
imul
fdivr
pop
fidivrl
cmc
fcmovbe
adc
rcll
dec
xchg
sub
inc
or
and
sub
jb
loop
ret
repz
fs
mov
jecxz
mov
lret
xchg
push
mov
pop
mov
fs
leave
mov
push
inc
ss
rolb
fcomps
into
or
push
or
xor
add
add
lock
jmp
or
icebp
lret
push
mov
mov
mov
hlt
jb
mov
mov
cmp
mov
insb
jns
adc
shrb
adc
or
jne
repz
adc
inc
mov
inc
jle
sbb
sub
mov
daa
imull
xchg
mov
loop
inc
iret
sbb
out
loope
sbb
sbb
adc
lret
fiadds
fcmovb
incl
push
fisubrs
push
jno
mov
imul
jle
adc
add
pop
jge
scas
movsl
cld
cli
pop
out
xchg
inc
jge
jle
cltd
pop
outsl
xchg
mov
rcl
cmp
jecxz
xchg
in
je
push
push
in
cmp
pop
xchg
push
outsb
mov
ret
dec
mov
cmp
sub
fnstenv
jl
pusha
dec
push
out
dec
pop
ja
or
push
aas
jb
or
dec
push
sbb
fcmovnbe
les
sahf
mov
sbb
fwait
lret
pop
int
ds
ja
popl
mov
nop
idivl
cwtl
rcrl
out
scas
and
mov
mov
imul
stc
jecxz
or
mov
mov
adc
jne
loope
sarb
data16
jns
mov
dec
jbe
clc
rcll
jl
sahf
mov
mulb
xorb
jge,pt
aaa
scas
mov
jp
mov
pop
shll
inc
test
xchg
dec
lods
push
test
divl
jp
in
xchg
pop
mov
icebp
call
dec
int
push
cmp
aam
pop
nop
mov
sub
cmpsl
or
add
stos
add
stos
cmp
loopne
repnz
ja
xchg
adc
adc
cmp
gs
pusha
outsb
xor
xchg
sti
and
rclb
jo
dec
sub
in
sbb
pop
call
jge
push
lret
jge
rclb
and
rclb
popa
pop
dec
xor
push
xchg
test
scas
arpl
insb
cwtl
divl
push
mov
mov
shl
xlat
das
push
mov
dec
mov
icebp
sub
in
iret
sub
iret
fadds
add
call
insb
inc
adc
dec
cmp
imul
mov
push
into
lret
sub
xchg
mov
inc
cmp
ret
push
push
dec
lock
daa
in
stos
test
cltd
mov
mov
push
xor
xor
lahf
dec
mov
pop
test
pop
cwtl
cmp
mov
push
aaa
pop
pop
fdivs
mov
or
sub
stc
in
aaa
je
daa
sbb
arpl
mov
pop
xchg
cmpsl
rcll
ja
dec
or
xor
outsl
add
jnp
push
dec
mov
mov
outsl
leave
adc
xchg
mov
scas
inc
mov
push
jge
inc
adc
movsb
push
push
xor
imul
jno
push
mov
repz
es
pusha
xchg
cmp
stos
test
jp
jle
scas
ret
stos
or
daa
sub
push
addr16
enter
cmp
dec
inc
pop
and
xor
divb
sbb
xor
mov
in
adc
jbe
push
outsl
adc
mov
fwait
loop
test
or
dec
mov
lods
rcrl
loop
and
xlat
fs
adc
xchg
pop
bnd
nop
mov
into
ret
cmp
and
mov
aas
fcomps
inc
push
push
xchg
sarl
dec
scas
cli
cmpsl
mov
xchg
aas
cmc
jne
jne
mov
push
xor
push
popf
sub
xchg
insb
lahf
movsl
cmp
push
push
sub
push
rorb
push
mov
sar
push
js
lods
lods
xor
mov
push
pop
iret
arpl
fwait
lahf
idivl
and
cmp
push
push
mov
insb
jg
outsb
xorb
imul
addb
loope
xchg
inc
dec
mov
xorb
or
ss
lods
clc
sbb
add
hlt
shrl
cmpsb
mov
mov
shlb
sbb
mov
stos
or
std
lods
test
fidivrs
lods
push
ss
mov
add
xor
or
jmp
sti
and
push
test
push
mov
adc
inc
inc
push
inc
scas
call
mov
xor
lods
sub
in
dec
shlb
enter
loope
mov
xchg
pusha
pop
and
cld
mov
push
xor
fs
into
lods
add
out
pop
and
mov
jmp
fldl
outsl
and
sahf
scas
and
jbe
push
or
pop
cli
scas
les
stc
lret
dec
xor
hlt
test
ljmp
aad
cmp
test
fincstp
aas
daa
test
out
mov
sbb
imul
pop
dec
loope
inc
adc
pop
in
lcall
jg
loope
cmpl
movl
dec
insb
bound
roll
jnp
movb
sub
ud2
or
aas
pushw
push
mov
idivb
pop
and
popf
xchg
mov
fdivr
jg
dec
shll
sbb
repnz
xor
rclb
xor
scas
hlt
inc
jae
addr16
inc
or
inc
stc
sbb
xlat
sbb
jle
or
ja
imul
or
add
dec
or
dec
pop
add
scas
aam
jae
scas
fs
ss
sub
fsubs
mov
test
shrb
lret
mov
mov
repz
jle
xor
add
jno
addl
or
push
mov
add
hlt
fs
aas
rcrb
and
lret
jp
insb
test
int
pop
lcall
mov
xchg
xchg
out
pop
mov
add
cltd
sub
push
mov
outsb
sub
sbb
rcrl
jecxz
xchg
aad
jno
and
dec
ror
add
insb
inc
shlb
push
insb
stos
les
lret
fdivrp
out
hlt
icebp
mov
cmp
push
sub
mov
jecxz
jae
lcall
xchg
mov
push
int
jle
dec
sbb
mov
sbb
mull
add
and
lret
dec
sbb
xor
and
gs
aaa
pushl
add
shr
movsb
mov
into
sarb
mov
test
scas
jp
push
rcr
outsb
mov
jle
dec
cs
test
pop
ja
data16
or
icebp
repz
dec
mov
adc
sbb
adc
push
dec
xor
pop
adc
pop
mov
lds
sbbl
xor
push
decb
pop
pop
inc
jmp
repnz
xchg
sbb
mov
cmc
cld
adc
sbb
pop
dec
out
ret
fcmovnbe
and
frstor
out
and
xor
das
es
je
cwtl
fs
mov
or
push
xor
mov
sarl
mov
inc
insb
stos
cmc
add
out
inc
jecxz
mov
mov
sbb
dec
stc
movsb
push
imul
icebp
mov
lret
bound
dec
and
cmp
lcall
out
sub
addr16
dec
dec
jp
or
aam
repnz
outsl
mov
mov
mov
in
mov
out
stc
mov
rolb
rol
sarb
cmpsl
or
mov
mov
mov
movsl
out
imul
mov
inc
xor
sub
xlat
push
aas
cwtl
lret
cmpl
loope
xchg
fucomi
xorb
movsb
ss
xchg
and
cld
cld
lods
repz
inc
aas
sbb
push
dec
out
popa
pop
push
sub
dec
scas
test
or
fwait
push
dec
pop
pusha
lods
jle
sbb
insb
stos
add
inc
jae,pn
sub
push
das
shll
push
outsb
pushf
aas
sti
sub
test
pop
cltd
aam
data16
and
std
adc
sbb
mov
dec
imul
js
cmpb
pop
test
jae
inc
into
bound
xor
and
insl
add
outsl
cwtl
cmp
mov
xchg
xchg
adc
mov
stos
sti
push
xor
dec
data16
push
xor
mov
lret
lock
and
mov
xor
inc
rorb
rorb
jne
dec
push
repnz
shl
pop
data16
pop
sbb
mov
add
bound
push
add
aaa
push
test
or
sbb
shrl
xor
lcall
add
cmp
aam
mov
inc
pusha
adc
imul
cmpl
dec
sarl
fmul
js
shll
dec
test
xchg
inc
dec
stc
call
lods
dec
xchg
mov
lods
cmpsl
movsl
jmp
mov
ret
loop
cmp
xchg
sbb
push
jo
pop
jp
mov
test
dec
xor
sbb
push
pop
stos
leave
aam
mov
xchg
and
clc
cmp
into
pop
jns
ss
cmp
and
and
mov
loopne
or
and
xchg
mov
movsl
mov
dec
lods
or
ror
push
mov
jp
out
fstl
xchg
jnp
les
shlb
lock
mov
int
adc
adc
mov
adc
pusha
sub
mov
cltd
or
add
lea
imul
mov
jo
or
lahf
cmp
xchg
pop
dec
ret
push
js
adc
xlat
push
out
test
rcrb
pop
dec
cs
fsubs
mov
adc
aas
mov
inc
shlb
into
loop
xchg
xchg
repz
or
sbb
int
xor
jbe
xor
pushf
adc
jo
pushf
int
sti
and
sti
sub
mov
js
movsl
adc
loope
movsl
xchg
data16
fisubrs
cmpsl
sbb
inc
scas
dec
xchg
pop
repnz
mov
cmp
or
es
cmpb
popl
mov
imul
mov
fcom
lea
xlat
stc
push
sbb
enter
mov
in
and
imul
je
xchg
mov
mov
jge
and
mov
cmp
jp
push
or
add
cmp
cltd
flds
xchg
and
shll
stos
test
pop
pushf
lock
dec
movsb
insl
xchg
xchg
cli
push
and
arpl
adc
sbb
loope
fadds
cmp
les
mov
mov
add
sub
filds
sahf
push
mov
sbb
push
fdivrs
ja
imul
cmp
push
cwtl
pop
sub
dec
push
fisubrl
mov
or
push
loopne
cmc
pop
dec
fisubl
xchg
leave
mov
leave
inc
jmp
pushf
pusha
and
inc
push
push
test
arpl
lret
fwait
pop
leave
inc
jg
push
push
or
jb
or
xchg
jnp
inc
dec
das
pop
es
lea
ret
add
rorb
add
inc
cmpsl
add
pop
addr16
mov
sahf
mov
aad
push
es
cmp
mov
cwtl
pushf
or
xchg
jno
adc
rcrl
jns
and
out
pop
fldt
outsl
leave
hlt
imul
ret
out
out
test
add
and
mov
int
outsl
imul
mov
jge
dec
sub
imul
mov
insb
or
push
pop
dec
dec
fsts
jl
loopne
fdivrp
push
push
sub
push
call
loop
push
inc
js
pop
xchg
daa
push
pop
jle
inc
adc
jo
repz
pop
pusha
sbb
xor
xchg
jb
fistl
test
add
mov
jge
xchg
xor
test
iret
sbb
mov
mov
cmpw
xor
dec
ss
fs
out
mov
mov
jp
mov
or
iret
xchg
adc
ljmp
out
fidivs
lcall
test
in
dec
xor
gs
push
fstcw
movl
xor
jae
mov
cmc
sahf
jns
or
sarb
test
xor
les
xlat
sbb
push
inc
dec
ljmp
in
push
inc
xor
mov
shll
pushw
or
adc
xchg
mov
jne
add
fidivl
cmpsb
mov
gs
lcall
lret
ss
pop
sub
pusha
leave
inc
mov
fcomip
cmp
adc
fisttpll
xor
fs
add
out
pushf
lock
xchg
out
push
ds
mov
stos
sbb
mov
iret
or
sbb
movb
add
cli
enter
pop
outsb
inc
sub
sahf
lahf
ljmp
mov
adcb
adc
xchg
add
popa
jmp
aaa
push
nop
jne
into
xchg
les
imul
xchg
adc
in
ljmp
mov
and
mov
sub
mov
sub
in
inc
cmp
push
jecxz
mov
js
mov
or
mov
int
sarb
cmp
iret
ds
int
pop
shlb
push
pop
sbbb
daa
jg
jge
ret
pop
mov
xor
push
add
ret
pop
xchg
ret
ss
aas
fucom
sbb
cmp
movsl
popa
cmp
imul
je
pop
js
les
push
sti
pop
ret
push
mov
mov
out
jo
hlt
daa
pop
jp
adc
mov
cld
xchg
js
push
sub
leave
sahf
popf
ds
movsl
out
loope
fnsave
lods
mov
pusha
call
pop
out
movsb
dec
fldt
insl
loopne
sbb
movsl
sub
sub
jl
mov
mov
lock
out
call
cmp
mov
mov
push
lods
pushl
inc
jp
jb
scas
mov
sti
mov
mov
in
inc
push
clc
or
mov
inc
jo
pop
cs
sub
add
fwait
and
jmp
xchg
jle
cmpb
sti
xchg
jae
mov
cmpl
adc
sbb
je
nop
jmp
jge
push
mov
test
lret
cmpsb
fistps
mov
and
enter
add
popa
or
dec
fwait
icebp
int3
push
dec
daa
mov
test
ljmp
test
fs
xor
pop
pusha
push
movsl
pusha
sahf
std
pusha
dec
into
and
clc
into
in
jmp
push
mov
insb
cmp
or
jp
or
jbe
xor
cmovne
ret
in
cmpsb
cmpsb
lret
aaa
popf
popa
push
push
sbb
inc
jge
mov
jae
dec
xor
adc
push
into
or
cmc
inc
mov
cld
xchg
jg
ret
push
enter
jmp
push
out
xchg
push
mov
adc
lea
iret
xor
daa
or
pop
scas
sbb
in
fidivl
push
std
mov
in
es
inc
not
push
xchg
add
out
jo
add
je
pop
incl
xlat
xor
xchg
dec
ljmp
ror
ss
fsubr
sub
loope
add
xchg
in
and
sub
cld
dec
mov
adc
shlb
icebp
or
mov
fwait
pop
xchg
mov
fwait
ja
idiv
adc
mov
leave
or
popa
xor
mov
je
lods
mov
jp
scas
shll
xlat
cs
mov
or
leave
mov
cwtl
in
stc
push
insb
in
dec
xlat
xchg
lcall
scas
push
xor
mov
out
loope
sti
or
ror
xor
outsb
aaa
fs
repnz
cs
sbb
mov
cmp
addr16
xor
jg
cs
xchg
or
sub
jae
fwait
inc
sub
roll
mov
aaa
cld
scas
scas
dec
pusha
cwtl
pop
mov
shl
rcrl
in
sub
jp
mov
pop
out
nop
add
jnp
inc
push
jns
jbe
imul
jnp
xchg
iret
fimuls
insb
scas
mov
popa
cli
lret
jmp
call
mov
jnp
insl
fnstcw
aad
mov
xor
sub
inc
gs
dec
lods
cwtl
adc
mov
loop
adc
sub
xchg
adc
pop
loopne
pop
dec
sub
sbb
pop
push
test
adc
clc
push
imul
fcoms
mov
repnz
pop
lahf
cmp
ja
xor
test
hlt
push
cs
std
cld
pop
push
pop
pushf
mov
push
fmul
mov
push
lds
cli
iret
xlat
fdivl
dec
adc
imul
mov
aaa
push
enter
adc
ret
test
sahf
loope
inc
lcall
fsubs
adc
sbb
stos
xchg
cmp
out
mov
adc
mov
sbb
pop
std
jecxz
jo
mov
lods
fsubrl
mov
and
addr16
cmpsb
push
xchg
out
int3
jo
dec
dec
orl
cmp
mov
jbe
cmpsl
dec
fwait
inc
lret
mov
jb
mov
stos
aad
cmpps
into
jl
pop
cmp
imul
test
leave
sub
enter
mov
cmc
xor
lcall
xor
int
mov
cmc
fildl
sbb
enter
adc
out
push
jp
insb
insb
addr16
jle
sbb
movsl
iret
call
pop
out
jmp
ret
xchg
imul
fdivl
or
add
imul
push
rcll
lahf
cmp
or
es
push
xor
add
mov
loop
xor
test
out
mov
int
cwtl
fs
push
cmp
sbb
es
aam
push
cmp
out
pop
lods
stc
cmp
mov
jne
cli
sub
jmp
js
pop
cmp
pop
rcll
cmp
mov
adc
sub
sti
out
dec
sub
push
orb
sub
and
mov
jb
mov
adc
lret
dec
lods
push
mov
mov
outsl
arpl
mov
mov
inc
and
andl
cmp
in
and
push
fisubl
xor
xor
dec
push
inc
mov
cwtl
testl
adc
jno
subl
and
mov
mov
lods
mov
jmp
aad
mov
pop
and
jns
mov
ret
loop
push
sbb
mov
andl
imul
push
dec
dec
sub
add
cmp
push
cltd
and
push
mov
cld
add
movsb
xor
iret
sbb
mov
xchg
scas
adc
add
nop
nop
rol
xor
or
aaa
aad
pop
push
daa
sahf
sub
pop
pop
loope
push
repz
inc
push
negl
sub
or
popf
fnstenv
sbb
xor
loop
ja
scas
ret
std
in
stos
insl
testl
nop
cmp
push
popf
cltd
push
test
or
call
push
ja
xlat
jns
and
xor
adc
pop
pushl
jb
add
mov
fscale
lret
sbb
pop
mov
mov
pop
inc
in
xchg
jmp
fstl
mov
xchg
mov
lret
in
pause
insb
pop
leave
push
mov
push
shrl
jb
enter
out
pop
jnp
and
sahf
xor
cmp
and
inc
mov
mov
cmp
cs
cmpsl
in
push
out
das
mov
rclb
pushf
adc
dec
nop
and
adc
test
sbb
push
arpl
repnz
arpl
mov
loop
in
mov
xor
xchg
in
aam
dec
xchg
sbbb
and
incb
sbb
dec
mov
int
jb
inc
inc
adc
cmp
sbb
lock
sub
push
add
xchg
mov
fidivl
add
push
fdivrl
fucomip
mov
inc
jb
bound
pop
jp
pop
mov
mov
jb
fidivrs
aam
int3
test
pushf
jae
pop
pushf
pusha
stc
xchg
out
sbb
xchg
adc
ss
pop
xchg
add
pop
cmp
push
lea
inc
ss
and
pop
add
pop
jmp
ds
into
jg
std
jbe
mov
push
cmpsl
inc
rolb
hlt
aaa
cmpsl
int3
leave
sti
flds
inc
push
sbb
inc
jge
arpl
sti
sbb
outsl
jle
xchg
mov
cmp
aas
mov
addb
dec
in
pop
dec
adc
dec
sub
lret
mov
cmpsl
push
lret
push
pop
dec
mov
adc
jmp
subb
lcall
mov
lock
pop
inc
std
rclb
and
int
jne
or
test
and
cli
jmp
jmp
push
shll
cmp
and
mov
jnp
cmpsl
push
inc
dec
loopne
push
mov
fidivrs
xor
test
sub
push
sbb
stos
or
sbb
rol
push
mov
cmp
loopne
andl
fimull
cwtl
push
dec
inc
xchg
push
popa
popf
outsl
stos
insl
adcb
jecxz
dec
xchg
cli
add
sbb
ss
adc
mov
loope
adc
leave
xchg
hlt
sub
ret
out
pop
push
jae
lea
sub
loopne
es
and
push
mov
xchg
mov
push
mov
mov
je
imul
adc
cmp
adc
and
fdivl
jmp
nop
int
aas
pop
mov
push
add
pop
mov
pop
andl
movsl
dec
mov
sbb
sbb
or
pop
pop
icebp
push
cmp
sarl
xor
push
xchg
cmp
push
ds
pop
adc
jb
adc
xor
cwtl
jnp
pop
jl
push
and
add
dec
mov
int3
lock
and
fstp
cmp
sbb
pop
or
xor
xchg
icebp
pop
inc
in
adc
xchg
cmpsb
cmpsb
xorb
jmp
jmp
jg
inc
lea
sbb
jne
fldenv
outsl
add
sahf
ss
fidivl
stos
js
sub
sub
sbb
aas
push
mov
xor
les
test
sub
fisubl
mov
push
insb
cmp
or
js
xor
fcmove
cmp
pusha
xorl
lar
and
loop
lock
mov
scas
loope
outsb
pop
and
jle
mov
ja
les
adc
fwait
loop
adc
in
push
sbb
adc
inc
jno
repnz
dec
xchg
pop
dec
std
push
roll
inc
push
fdivr
shll
lret
mov
shlb
frstor
jg
ljmp
sbb
pop
shr
in
pop
hlt
in
mov
pop
mov
adcb
xchg
jp
aas
pushf
mov
push
sti
dec
shlb
adc
rcl
gs
xchg
cmp
xor
jnp
or
daa
xchg
pop
sub
scas
or
and
push
add
mov
mov
std
ja
pop
lret
ja
jle
push
jge
std
push
xchg
adc
push
mov
inc
lock
mov
scas
xchg
pop
outsb
mov
jae
loopne
clc
push
add
scas
les
das
movsb
mov
mov
inc
stc
cmp
pop
inc
sbb
mov
movsb
cmp
mov
inc
arpl
jg
jl
sub
mov
push
pop
push
dec
fbld
fldl
rcrb
adc
jl
mov
mov
mov
xchg
mov
dec
hlt
addr16
fbstp
xchg
cli
mov
push
fistpl
cli
cli
mov
fucompp
sub
dec
pushf
cltd
cmp
clc
fiadds
movsb
cmp
fisubrl
fsts
out
in
aas
movsb
cmc
fldcw
xchg
push
jmp
jecxz
push
mov
std
js
mov
jge
xor
or
adc
ds
adc
repnz
std
cmpb
dec
subb
pop
mov
imul
icebp
fdivrs
loope
mov
jne
js
insl
jmp
dec
xchg
clc
add
std
lret
sub
dec
imul
sbb
add
xor
mov
push
mov
jae
js
inc
jbe
mov
mov
fsubrs
cmp
sub
add
jno
jb
ja
cmp
daa
and
add
stos
push
mov
scas
xchg
test
mov
sbb
jne
subb
aam
movsl
aad
xchg
das
push
inc
inc
scas
jnp
jnp
adc
movsl
pop
ljmp
add
in
push
push
adc
and
mov
sbb
imull
jo
sub
das
adcb
fwait
mov
pop
flds
dec
sar
pushf
mov
add
mulb
mov
xor
dec
sub
rcrl
xchg
push
repz
sub
stc
in
xchg
fwait
in
pop
fmuls
or
xchg
mov
dec
sbb
fisubrl
cwtl
fsubl
movsl
cmpsl
test
mov
jecxz
fs
mov
pusha
test
fimuls
iret
or
mov
idivl
test
outsl
imul
mov
stos
cmp
pop
mov
xchg
mov
sbb
add
add
add
push
adc
test
lret
xor
xchg
mov
push
cmp
scas
push
push
mov
stc
push
mov
mov
testb
and
stos
mov
adc
dec
orb
add
out
mov
cmpb
mov
lds
mov
xor
jle
dec
sub
cmp
xchg
in
push
xor
movsl
pop
fst
jg
jnp
cmp
mov
jb
nop
mov
sbb
rol
idivb
sbb
clc
loope
shll
xchg
sbb
ja
popa
mov
xchg
mov
mov
push
mov
cmp
call
mov
xor
in
xchg
dec
xchg
loop
inc
movl
std
setne
or
icebp
lcall
adc
lock
cmovl
pop
hlt
aad
jns
test
mov
sti
aam
test
add
push
loope
or
cs
mov
inc
mov
test
fisttps
inc
mov
mov
inc
outsl
add
rcrb
cmp
or
mov
stos
sub
movsb
sbb
icebp
cmpsl
je
jne
arpl
push
mov
imul
fidivs
mov
cmp
icebp
in
data16
xlat
xchg
inc
lods
push
or
xchg
dec
aam
xor
jp
pop
pop
adc
push
push
push
outsl
rol
out
movsl
sbbl
mov
mov
cld
scas
add
pop
sahf
ja
xchg
mov
sti
fadds
fisubrs
inc
fs
mov
add
scas
jnp
in
icebp
mov
pop
push
aas
and
test
es
xchg
jbe
popf
rcl
addb
cmp
addr16
es
and
out
stos
in
xchg
loope
push
cltd
mov
outsl
xchg
call
int3
jmp
mov
push
aam
dec
sub
stos
mov
sbb
mov
mov
insb
push
mov
test
cmp
dec
push
lock
mov
xor
pop
daa
xor
imul
add
inc
or
aaa
int
ds
int3
add
test
pop
or
xchg
or
or
scas
push
jecxz
xor
mov
out
int
decl
xor
push
push
xor
push
mov
rcrb
icebp
or
push
ljmp
mov
cld
or
mov
fisubrl
loop
cmp
jns
mov
push
sub
ret
cltd
cmp
and
test
jl
imul
mov
mov
jb
xor
xchg
js
inc
in
repz
cmp
lret
jbe
pop
xor
testb
pop
in
adc
mov
ljmp
rol
loope
jne
pop
js
sbb
out
insb
rorl
sbb
mov
jg
imul
sub
pop
shl
cmpsl
add
push
add
loope
test
fsub
popa
add
mov
lock
push
jmp
lock
add
cmpsb
add
pop
fucomp
les
xchg
sbb
mov
cmc
insb
pop
imul
fwait
les
add
pop
mov
loop
mov
imul
shlb
clc
dec
inc
pop
lret
addr16
xchg
push
mov
leave
pop
adc
and
sub
mov
cmp
pop
test
js
mov
pop
iret
mov
sub
divb
dec
out
fimuls
lods
lea
xor
test
mov
jmp
mov
lods
in
rcrb
lock
in
icebp
jle
jns
cmp
dec
lret
shll
cmpsb
xchg
push
filds
rclb
jg
in
subb
mov
xchg
and
flds
cmp
std
xchg
negl
add
push
loopne
push
aad
sub
xor
mov
test
push
addr16
es
neg
jns
cmp
jle
mov
lret
lahf
aaa
into
lds
rcr
cs
iret
aaa
pop
stos
lock
aad
lahf
pop
arpl
push
lds
cmpsl
sbb
in
das
adc
push
inc
insl
push
cltd
cmp
mov
jge
data16
cmp
xchg
test
and
mov
pop
clc
pop
mov
clc
loop
rclb
fsubs
fmuls
adc
imul
mov
dec
imul
mov
sbb
dec
dec
aam
jp
pop
sbb
pop
mov
xchg
shll
mov
lea
popa
arpl
jl
jae
lock
cmp
xor
ret
mov
incl
dec
shl
add
inc
orl
icebp
xchg
int
jae
xchg
loope
mov
adc
and
cmc
loope
or
aaa
xor
jg
mov
call
ret
lods
popa
call
xor
ds
mov
xchg
shrb
stos
incl
lret
or
in
jo
jns
pop
mov
addr16
add
mov
frstor
and
cmp
mov
jbe
sub
sub
jno
cld
mov
sbb
andb
sub
push
mov
arpl
cld
lret
sub
sub
and
pop
daa
or
stos
popf
hlt
lea
sub
ljmp
sti
roll
mov
out
insb
jno
inc
xchg
test
rcrb
pop
imul
ljmp
adc
or
arpl
sbb
in
push
roll
jg
cli
js
or
lea
mov
pop
sbb
push
loope
gs
xlat
mov
popa
test
sub
or
daa
lods
dec
jp
rorb
mov
popa
pushw
xor
pop
subl
ret
add
push
adc
sbb
jle
cmp
mov
in
testl
out
mov
jle
inc
add
orb
dec
add
dec
nop
in
ds
hlt
lret
pop
ret
jmp
push
dec
pop
and
adc
jl
xor
pusha
test
jns
mov
arpl
dec
inc
loopne
sub
mov
addr16
lods
shlb
add
lods
enter
cmp
pop
or
push
mov
cmp
inc
fsubrs
cmp
cmc
add
daa
ret
and
cmp
mov
imul
mov
out
mov
mov
add
push
xor
or
test
xchg
movb
or
mov
iret
cld
movsl
push
je
push
mov
push
fsubrs
xor
and
jae
jo
and
lods
cmpb
sbb
and
xlat
inc
dec
sbbb
and
leave
rorl
add
pop
dec
adc
test
fbstp
popf
xlat
fsub
jnp
xchg
pop
push
pusha
push
add
mov
leave
cmp
pop
adc
loop
aad
xchg
in
adc
sahf
sub
sbb
inc
sahf
push
cmpsl
mov
inc
jge
add
mov
lcall
add
inc
aad
in
xor
fcompl
adc
out
push
mov
sbb
in
jns
pop
into
sub
cmp
out
adc
dec
adc
lods
xor
mov
xor
aaa
mov
push
inc
gs
fistps
dec
call
xchg
in
pop
push
enter
xchg
mov
bound
dec
aaa
mov
push
mov
push
in
and
sub
ror
dec
loopne
add
fmull
mov
pop
inc
push
test
insb
sbb
cmove
sbb
aas
cmp
dec
pop
cmp
test
fs
mov
cmpsb
mov
pop
jbe
xor
mov
xor
popf
push
pop
into
stc
cmpsl
icebp
adc
and
sub
adc
bound
mov
icebp
adcb
mov
cltd
inc
pop
sub
bnd
jl
mov
loop
fiadds
jb
pop
mov
adc
repz
ret
push
jo
sti
mov
pusha
mov
dec
jns
pop
fmuls
mov
mov
push
push
imul
cmpsl
push
add
ret
cmc
mulb
mov
jg
push
and
int
add
xlat
xchg
mov
ljmp
mov
mov
sub
dec
stc
cltd
cmpsl
mov
mov
lds
loopne
hlt
and
add
pop
xor
ljmp
or
shrb
loope
out
fildl
movsl
adc
arpl
mov
out
inc
cmp
and
pop
inc
insb
or
lods
push
cmp
int3
movsl
int3
pop
mul
cmpsb
and
in
imul
pop
mov
aaa
cmpsb
lret
aad
scas
cmp
and
test
push
jnp
lea
sbb
cld
fnstcw
leave
popa
out
lea
pop
loop
mov
cmp
pop
push
repz
inc
mov
dec
jb
lea
mov
dec
jbe
int
fbld
sbb
out
repnz
dec
mov
test
and
outsb
lods
fstp
imul
and
cld
add
push
jg
sub
fnstcw
mov
data16
and
inc
xchg
loope
lahf
dec
add
adc
test
sub
pusha
xor
mov
das
jg
xor
rcrl
gs
lea
sbb
mov
pop
enter
jo
lea
pop
pop
pushf
xchg
xor
out
pop
cld
pop
bound
insl
clc
je
and
jecxz
mov
add
bound
inc
data16
mov
add
mov
cmp
ja
test
lock
sar
mov
loopne
arpl
inc
insb
mov
fmuls
loope
das
sbb
add
out
ss
add
mov
ja
out
out
push
inc
aaa
pop
cmp
mov
dec
add
dec
scas
sahf
add
pop
outsl
xchg
outsl
lods
add
and
add
pop
dec
mov
fwait
adc
pop
imul
in
loopne
jne
sub
mov
add
imul
inc
iret
daa
es
xchg
stos
loopne
clc
sbb
ljmp
inc
movsl
sub
inc
repz
outsl
ss
icebp
sub
pop
popa
in
aas
js
fisubl
jo
and
push
bnd
sbb
je
xor
movsb
add
mov
cmpsb
or
pop
jns
in
inc
cmpb
inc
in
jle
xchg
push
stc
mov
int3
sub
and
fsubrs
cmp
push
cli
sub
mov
xchg
pusha
adc
mov
cmp
fistpll
mov
inc
jns
mov
incb
and
push
mov
out
neg
jge
sti
es
xchg
cmc
xchg
mov
sub
mov
and
pinsrw
mov
push
sti
xorb
test
mov
inc
pop
ljmp
jl
dec
dec
fs
and
cmp
fs
fwait
cs
daa
or
cmp
cmp
inc
cpuid
push
out
sub
pushf
push
add
imul
in
xchg
loopne
push
jp
pop
cmpl
int3
jo
sub
cs
mov
and
inc
repnz
clc
mov
mov
push
cmc
sub
std
cmp
insl
faddp
sub
xor
cltd
ss
iret
out
stos
cmpsb
dec
test
dec
push
ds
jecxz
jge
loope
sbb
cmp
mov
or
into
dec
adc
out
or
ljmp
test
cmpb
pop
xchg
sub
and
mov
pushl
pop
leave
pop
pop
dec
aaa
jmp
jp
cmpsl
sbb
jmp
jle
ljmp
mov
xchg
stos
addb
xchg
sub
insb
loopne
jecxz
insb
call
mov
notb
insb
nop
or
lret
fsubrl
mov
popf
inc
sub
dec
pop
lods
add
xchg
jno
jae
sbb
shlb
stc
dec
xlat
pop
and
fsubp
mov
or
pop
es
mov
push
les
push
mov
jp
dec
pop
jne
cltd
sub
or
bnd
pop
mov
lret
add
inc
or
outsl
cld
icebp
xchg
aas
lds
outsl
inc
xor
inc
sub
mov
pop
cmp
arpl
pop
xchg
repz
adc
xchg
icebp
movsb
lret
xorl
xor
dec
aaa
sub
fstpl
cmp
lods
gs
pop
fsubs
cmp
adcl
sub
daa
sub
jmp
or
or
dec
mov
xchg
dec
fistps
fcompl
stos
out
sub
push
pop
out
out
jno
in
push
mov
jno
pop
dec
icebp
sub
das
cli
fcomp
dec
gs
xor
mov
es
xchg
pop
ds
or
dec
push
stos
inc
popf
ja
cld
xor
mov
sub
jbe
dec
sub
les
fmull
scas
push
ror
rclb
in
rol
mov
in
inc
cltd
dec
in
sub
les
roll
bound
mov
aaa
iret
fs
sbb
cmc
stos
sub
ficomps
scas
mov
xchg
mov
sub
jae
xchg
pop
jo
insb
push
fidivl
fsubrs
xchg
hlt
shll
push
push
xor
ficompl
mov
sbb
leave
call
push
test
or
xchg
lret
jmp
add
add
cltd
push
adc
adc
insb
mov
xchg
mov
in
inc
inc
repz
push
sub
loope
shll
adc
and
pop
js
pop
frstor
mov
jl
sbb
mov
arpl
pop
pop
xchg
or
dec
mov
inc
andb
mov
leave
out
leave
mov
mov
push
mov
sub
mov
stos
jl
sub
icebp
adc
dec
cld
or
xorb
adc
nop
xchg
enter
fstp
mov
mov
iret
and
jle
xor
lock
movsl
mov
mov
cmp
jne
lret
movsb
insb
aam
add
imul
pop
stos
xchg
orb
cld
sbbb
test
xchg
add
xchg
call
dec
inc
xchg
arpl
mov
or
jle
or
jo
push
cltd
jp
jo
mov
and
hlt
cmp
ficoms
js,pt
push
cmp
jae
sub
cmp
jo
movl
arpl
and
add
das
cmp
xor
loope
vmulps
mov
hlt
shlb
stos
jb
addr16
lods
call
cmovs
out
dec
mov
push
test
jo
cmp
inc
xchg
mov
rcrl
ljmp
jg
lahf
jle
xchg
pop
mov
ds
shrb
into
mov
mov
mov
mov
jle
clc
mov
push
mov
dec
xor
ficompl
movsl
icebp
iret
lea
jae
pusha
loopne
xchg
sti
pop
inc
and
xchg
repz
dec
popf
push
clc
xchg
repnz
and
popf
clc
in
jbe
sub
sbb
jmp
repnz
divl
dec
mov
cmp
xchg
or
sub
leave
push
fbld
fadd
push
movsb
push
cmp
ja
fwait
lods
mov
mov
mov
lret
mov
add
ds
nop
imul
mov
iret
add
mov
fsts
xchg
and
stos
dec
push
daa
mov
sub
xchg
or
pop
xor
or
jno
pop
lea
pop
adc
int
call
sbb
xchg
push
mov
and
aaa
add
jp
mov
sub
xor
jl
in
es
pop
mov
dec
out
std
cmp
cmp
pop
js
iret
repnz
and
push
int
pop
inc
adc
arpl
pause
pinsrw
push
sbb
stos
inc
sbb
pop
lret
mov
mov
push
or
mov
xlat
aas
mov
enter
repnz
and
push
lock
outsl
pop
push
cs
subb
and
dec
aam
imul
add
mov
pop
add
add
cmp
lahf
jno
int3
addr16
inc
push
push
test
hlt
mov
push
mov
jne
xor
int3
in
jb
fs
jp
aas
rcrl
inc
mov
arpl
shll
cmp
inc
jno
dec
lea
add
imul
stos
lods
sub
mov
mov
dec
lods
in
inc
or
nop
cwtl
insl
stc
pop
mov
lock
xchg
rcll
cmovge
ret
mov
call
ljmp
mov
sub
or
scas
mov
nop
popa
nop
jo
mov
sbb
aam
ljmp
fistpll
inc
in
mov
sbb
pop
in
sbbb
jns
adc
sbb
aas
iret
xlat
int3
sbb
daa
add
sub
sbb
or
inc
in
cld
inc
xchg
cmpsl
sbb
repnz
jmp
fiadds
out
in
fsubs
mov
shll
mov
sub
push
dec
xor
popl
mov
lret
push
popa
push
xor
rcl
push
or
xchg
out
xchg
pop
pop
andl
rcpps
aam
lock
ror
scas
daa
xor
js
jmp
push
sub
cwtl
adc
lods
and
push
fadds
movsb
fstl
call
pop
add
mov
or
jle
popf
pop
add
xorl
cmc
fisttpl
mov
enter
jp
bound
lahf
ljmp
sub
or
add
jo
mov
jne
notb
mov
sbb
pop
ficoml
mov
js
cmp
iret
das
mov
test
dec
jno
jge
cmpsb
sti
enter
ret
hlt
mov
aaa
test
mov
sbb
mov
xor
lahf
aaa
pusha
rolb
jns
sbb
pusha
movsb
dec
xorl
jbe
popa
mov
sbb
pop
push
movsl
daa
add
aad
push
loope
pop
ret
pop
jl
daa
je
shll
jmp
push
orb
clc
cmpb
pop
mov
inc
ja
lods
out
push
shll
movsb
mov
int
rcrl
test
pop
fucomi
or
icebp
mov
rsqrtps
pop
xchg
xlat
xor
add
jle
dec
call
push
add
cmp
pop
mov
inc
add
ja
push
aas
push
or
adc
loopne
leave
push
idivl
arpl
adc
push
mov
pushf
xor
xor
jnp
pop
pop
inc
xlat
mov
and
xchg
hlt
sub
push
cmpsb
dec
dec
cmp
stos
iret
js
mov
sbb
pop
jge
fcmovnb
lods
sub
jno
call
nop
ljmp
mov
in
cmp
les
cmp
jge
xor
repz
stos
pop
pop
xorl
mov
aaa
leave
cmp
mov
pop
xor
mul
in
mov
int
mov
or
pop
sbb
dec
mov
daa
lods
push
push
cmp
push
ds
jg
xchg
es
inc
xorb
movsl
aad
pop
leave
fxam
xor
out
mov
enter
push
daa
fildll
inc
mov
sub
mov
xchg
cmp
lods
xor
xchg
in
inc
pop
pop
or
push
push
mov
inc
mov
sbb
sbb
sti
movsb
ss
jecxz
loop
ljmp
or
xor
sub
mov
stc
inc
or
push
inc
fimuls
adc
adc
cmc
nop
xchg
lods
decl
and
adc
mov
adc
nop
xchg
xor
dec
loope
test
cmpsb
popf
dec
adc
inc
icebp
push
add
pop
cmp
mov
and
cmpsl
mov
mov
lret
and
lret
inc
lcall
addr16
cld
popf
lods
sar
cmp
js
mov
cmp
mov
test
test
pop
push
pop
iret
out
adc
xlat
xchg
and
dec
loop
pushf
sbb
insl
icebp
stc
jno
push
test
dec
cmc
pop
lcall
pop
inc
dec
mov
lahf
fcoml
test
imul
cli
sbb
pop
sbb
push
jmp
cmp
out
jae
adc
test
test
push
xor
ljmp
pusha
push
lods
fiadds
add
xor
int3
inc
je
jp
aas
cmp
pop
mov
mov
fmulp
jge
push
stos
cmc
pop
sub
std
push
mov
test
mov
ljmp
and
in
aam
pop
fs
popf
jecxz
clc
xor
rclb
push
or
icebp
cltd
adc
fdivrl
rclb
adc
mov
repnz
xor
jnp
cld
and
pop
insb
das
mov
fists
jns
stos
fnsave
fs
and
mov
jecxz
cmp
and
pop
cmp
adc
lea
and
adc
mov
loope
sahf
xor
cltd
lock
loopne
fdivr
xchg
daa
gs
aam
test
fiaddl
mov
hlt
xchg
add
and
push
xchg
daa
jge
xchg
and
cmp
daa
lea
mov
sbb
pop
inc
ja
mov
xor
sub
call
mov
lahf
divb
inc
add
push
push
out
fidivl
arpl
outsb
adc
je
imul
lret
or
cmp
pop
inc
pushf
stc
inc
shl
aad
std
pop
xor
dec
add
pop
sbb
sbb
loopne
pushf
mov
inc
int3
push
test
mov
pmullw
and
mov
push
adc
sbb
cli
and
gs
jb
add
cwtl
sub
mov
xlat
fs
cmp
pop
sub
inc
mov
jle
or
mov
roll
and
out
or
pop
push
xchg
scas
xchg
sbb
xchg
mov
cmp
jne
ja
add
aaa
lret
cltd
cmp
pop
mov
sub
push
sub
fsubl
sub
rorl
arpl
roll
add
mov
out
clc
xchg
xchg
dec
push
call
je
aam
movsb
mov
adcl
idivb
sub
mov
mov
out
dec
mov
pusha
push
scas
mov
push
xchg
pop
arpl
cmpsl
xchg
cmp
sahf
jge
pop
ss
add
ret
lcall
out
fidivrs
iret
bound
push
and
shrl
insb
pop
sub
jo
popf
loope
fcmovu
push
push
call
jmp
sub
pop
adc
add
loope
pop
dec
es
xchg
dec
mov
jno
test
repz
in
out
xor
jecxz
inc
inc
jne
aam
sub
in
mov
scas
cmpsb
loope
dec
xor
stos
insl
imul
jecxz
push
cmp
mov
les
or
aas
sbb
movsl
jae
dec
ljmp
fwait
inc
jb
or
and
inc
jl
pop
wbinvd
movsb
push
xor
mov
xlat
push
jne
cld
mov
or
and
or
popf
in
aam
aam
jge
mov
shr
nop
push
jae
hlt
repz
movsb
mov
push
jecxz
sub
hlt
std
cmp
xchg
inc
or
sub
test
popa
pop
xor
int
ds
testl
sbb
mov
xor
lea
cmp
rcll
add
outsl
jnp
lahf
ficomps
pop
rcrl
mov
and
jle
pop
or
or
inc
std
xchg
push
js
nop
or
push
insl
mov
mov
stos
lea
and
xor
sbb
sub
push
sbb
jmp
icebp
ret
and
add
push
js
ds
inc
loopne
inc
fiaddl
mov
jnp
dec
movsl
lcall
add
call
lahf
imul
and
scas
inc
add
adcb
mov
out
cli
jmp
vmread
jg
test
push
push
inc
push
sbb
inc
mov
std
jle
mov
inc
dec
loopne
std
push
inc
dec
push
inc
pushf
es
push
inc
xchg
xchg
sub
js
mov
in
jne
ret
xchg
lock
subb
mov
dec
dec
insb
mov
std
xchg
pushf
jnp
data16
pop
cmp
pop
stos
xchg
mov
nop
mov
or
or
pop
pop
inc
dec
sub
and
pop
clc
ret
iret
in
repz
hlt
mov
fstpt
sub
ljmp
pop
mov
pop
mov
inc
out
fucomip
xor
pop
rolb
lods
mov
leave
out
dec
insl
lret
adc
jns
add
and
dec
xchg
rol
popl
mov
mov
ljmp
insb
jmp
jno
xlat
push
pop
je
outsb
mov
inc
lcall
fs
test
mov
les
fs
mov
mov
cltd
scas
repnz
je
call
or
ds
push
insl
mov
inc
sahf
mov
clc
les
arpl
xchg
stos
push
popa
imul
xor
aas
or
ljmp
mov
daa
inc
stc
sbb
inc
mov
xchg
test
mov
pop
bound
inc
cltd
cmpsb
into
xor
sbb
mov
and
adc
call
shll
xor
xor
scas
xchg
mov
test
pop
cmp
pop
or
imul
and
subl
push
or
sub
aam
sbb
mov
fadds
push
enter
mov
pop
stc
sub
cmp
insb
mov
xor
mov
jae
cli
cmc
sti
test
mov
stc
mov
xlat
mov
aas
adc
test
outsl
mov
sbb
push
scas
jne
add
push
sub
xchg
dec
inc
adc
and
sub
pop
ljmp
dec
or
shll
cmpsb
fwait
pop
xchg
sbb
sbbb
cmc
dec
outsb
pusha
jne
cmp
xor
mov
pop
insl
sahf
sub
clc
ja
fisubrs
lock
sti
lods
xchg
add
jne
in
push
adc
sbb
ja
mov
cmp
daa
xor
jp
insl
fsubs
cli
call
vmovaps
mov
xchg
cs
pushf
scas
dec
sub
or
xor
xchg
xlat
xorb
inc
cltd
mov
xor
test
mov
mov
jge
testl
push
pop
inc
ljmp
cmp
and
jecxz
sbb
and
dec
add
add
ret
daa
mov
sbb
jp
ret
cmp
mov
and
xor
push
pop
dec
dec
mov
jne
add
sub
mov
sahf
cld
push
xlat
xor
mov
add
je
sbb
inc
scas
and
cmp
sahf
mov
and
mov
test
inc
pop
rclb
in
adc
das
std
xchg
je
mov
cmpb
mov
mov
js
cmc
hlt
out
mov
popf
ja
out
sbb
push
cwtl
add
ret
adc
cmp
cmp
andb
push
das
add
jg
mov
pop
cmp
scas
jno
movsl
ficomps
pop
movsb
ss
ja
das
adc
jns
pop
hlt
shlb
jo
cmpsb
jmp
rcrl
pop
mov
push
loopne
cmp
rorb
pop
out
ljmp
inc
xchg
and
or
jg
lods
out
cmc
xor
pop
xor
pushw
dec
mov
mov
pop
mov
sbb
pop
dec
out
sti
mov
aam
xchg
pop
les
inc
not
ret
arpl
repz
lods
mov
and
and
cmp
stos
nop
cld
test
rcrb
lods
leave
add
mov
rcrl
ja
test
addl
ret
out
cmpb
mov
inc
add
inc
sub
inc
mov
mov
adc
xchg
ds
adc
push
movsl
mov
cmp
xor
flds
movlps
rorb
je
lock
jp
push
insl
push
push
sbb
gs
loope
icebp
xorb
dec
pop
pop
and
sbb
inc
in
aam
xor
add
lret
push
loope
mov
repnz
cmp
inc
or
or
int
negl
scas
loopne
sub
sub
scas
jne
xchg
fs
repnz
inc
les
clc
adc
out
out
pop
insl
mov
sub
std
push
adc
jnp
fisttps
cmc
fcmovb
push
call
mov
dec
ljmp
sti
inc
lret
sub
sahf
xor
call
push
shlb
cmp
mov
inc
arpl
inc
cwtl
jno
sarb
jns
test
repnz
aas
lods
iret
bnd
fimuls
out
lock
cwtl
test
add
xor
arpl
xchg
outsb
daa
shl
push
dec
fidivrl
xchg
gs
fcompl
int
dec
and
fdivrp
ja
or
out
mov
test
sub
mov
jne
add
lret
int3
inc
std
scas
lods
mov
mov
and
int
loopne
adc
jle
and
cmp
push
add
dec
test
in
gs
inc
ja
xchg
in
es
sub
loopne
and
mov
and
pusha
xor
cmp
mov
add
push
push
xor
xlat
mov
je
movsl
cli
fldcw
icebp
dec
ret
ret
adc
mov
mov
lds
adc
lea
aaa
stos
push
and
popf
outsb
dec
push
fwait
sbb
nop
aad
je
je
cltd
aad
call
cli
jae
dec
add
dec
mov
mov
cmp
jb
dec
movsb
xor
in
aam
dec
fs
das
mov
inc
gs
push
sbb
mov
and
xor
cmp
in
mov
or
test
jno
outsb
outsl
rolb
jl
add
mov
icebp
adc
ret
xchg
ja
stc
sbb
push
ss
daa
int3
push
ficoml
addr16
jge
pop
imul
dec
mov
mov
inc
mov
dec
out
mov
mov
and
lock
jb
mov
xor
mov
sarl
loopne
or
insb
dec
mov
cld
ret
lods
fisttps
adc
fsub
or
jmp
lcall
add
mov
sbb
scas
jecxz
or
mov
pop
jo
insb
test
repnz
popf
fucomi
mov
mov
lods
sbb
xor
sub
fadds
push
push
pop
int3
xor
jno
jno
mov
mov
push
and
sbb
mov
mov
dec
fisubl
call
ds
inc
scas
adc
pop
jg
cli
clc
adc
or
cli
das
mov
cmp
sbb
fwait
aaa
cwtl
addl
rcrb
xor
pop
scas
lock
jp
inc
jae
adc
in
cmpsb
xchg
aam
aad
aas
mov
fildl
add
sbb
hlt
pop
jno
ja
clc
add
lock
cmpsb
push
fldt
mov
or
lock
addr16
in
clc
cwtl
inc
or
std
xchg
stos
test
cmp
das
daa
push
repnz
les
jmp
std
or
ret
movsl
ja
adc
rcr
inc
ja
inc
and
les
lds
hlt
push
ds
shrl
jae
aad
imul
cmp
jge
cmc
xorb
dec
stos
ss
cmp
push
add
dec
fs
cmpsb
bound
sub
mov
pop
and
ss
sbb
jo
icebp
mov
lret
test
mov
adc
pop
jg
int3
and
outsl
cmp
cwtl
or
pushf
add
mov
mov
mov
hlt
sbb
lock
test
je
dec
sbb
jge
jno
pop
push
cld
mov
pushf
jmp
push
cmc
in
ficomps
lock
fwait
sbb
sbb
xchg
cmp
cmc
inc
cmpsb
std
andl
mov
movsl
aam
mov
lods
or
dec
mov
and
and
stc
or
cld
sub
jg
or
inc
push
sbb
outsb
test
test
mov
jo
xchg
inc
sbb
jns
outsl
mov
call
and
sbb
shlb
sbb
push
test
notl
xorb
sbbl
dec
mov
fnstsw
xor
shll
or
fldl
jns
xchg
add
adc
mov
sbb
rcrl
shlb
subb
sub
mov
leave
and
shlb
mov
push
cmpsb
dec
cmp
ds
call
test
pushf
ss
add
jae
and
inc
mov
lods
out
jno
add
addr16
push
imul
jns
push
jmp
hlt
and
shrb
das
aaa
push
mov
es
and
mov
movl
or
mov
mov
jmp
lcall
add
sub
cld
or
pop
ret
pop
popa
pop
mov
inc
gs
mov
push
mov
jne,pn
daa
lret
pusha
shrl
ja
add
ljmp
or
sti
sarb
lahf
sub
into
leave
jl
cmp
mov
inc
sub
pop
movsl
xchg
xchg
dec
jge
loope
ja
or
dec
popf
dec
pop
or
xor
fadd
pop
pop
sbb
addr16
fldt
mov
cmp
pop
jbe
sub
icebp
cmp
cmp
jp
inc
mov
divl
push
stos
into
ret
sbb
sbbb
test
push
mov
rcl
movsb
cmpsl
ds
xor
int3
push
hlt
cmp
mov
sbb
dec
sub
out
inc
adc
mov
mov
push
push
jge
fsubs
shl
imull
mov
mov
inc
push
pop
outsb
out
out
fwait
out
rolb
inc
mov
mov
mov
mov
xchg
push
shlb
jno
cmp
scas
pop
testl
psubb
jg
or
cwtd
or
sbb
sub
pushf
cli
call
fbstp
loop
stos
rolb
scas
into
xor
aam
sub
movsb
cmpsl
lret
mov
adc
js
pop
add
sub
xchg
cmp
in
stos
push
mov
sbb
sbb
imulb
bound
push
jnp
mulb
xor
lods
mov
pop
fldenv
and
mov
cmpsl
lahf
inc
fcmovnb
loopne
jle
mov
mov
stos
pop
gs
iret
push
mov
fwait
xchg
adc
je
adc
sbbl
push
insb
loop
adc
jb
push
push
ficompl
xchg
mov
lods
jg
imul
stos
inc
clc
stc
ds
icebp
sbb
adc
add
fs
ret
sbb
retw
cmp
mov
in
cmc
loop
daa
imul
mov
adc
clc
sahf
cmp
sub
cs
mov
shrb
xor
mov
sbb
cmp
cwtl
push
mov
loopne
fsubr
jge
call
sbb
imul
pusha
lods
add
fnstsw
data16
jecxz
fwait
jge
mov
xchg
sarb
in
repz
sbb
xor
popa
in
cld
cltd
xchg
leave
sahf
notb
lock
inc
inc
cmp
add
mov
and
dec
jns
ret
jnp
es
aam
mov
inc
lods
cmp
or
push
lds
cmc
mov
inc
aad
loop
cli
pop
lcall
xor
ret
jae
subl
inc
cmp
test
inc
stos
jb
mov
mov
push
push
and
cmc
inc
icebp
roll
jns
mov
shll
cs
repnz
in
cwtl
dec
sub
inc
aam
arpl
xor
daa
lahf
push
and
stc
sbb
jne
and
jno
mov
mov
int3
outsb
mov
or
dec
seta
mov
cmp
ljmp
jmp
and
aam
jne
das
aas
inc
movsl
jo
push
lds
sbb
inc
into
imul
test
sub
pop
movsb
outsl
stos
push
sub
mov
loop
sti
push
ss
daa
imul
fimuls
mov
and
in
andl
xchg
and
mov
imulb
and
xorl
lret
cltd
jb
cmp
in
aas
cmp
fisttps
push
xor
pop
repnz
mov
mov
xchg
or
movsb
cmpsl
pushf
and
mov
xor
jmp
pushf
iret
ret
dec
add
inc
mov
pushf
aam
jle
movsb
add
iret
jg
push
jle
cmpb
lret
xchg
idiv
xchg
add
dec
lds
scas
jb
jmp
push
cmp
inc
dec
lock
sub
mov
jle
cmpsl
sbb
ret
dec
imul
push
xlat
sub
cld
dec
cmpsb
fildll
lret
outsb
mov
pop
adc
iret
and
dec
adc
popa
and
dec
shl
arpl
test
int
dec
pop
pop
pop
jns
int3
mov
and
mov
movb
inc
or
rcrb
sbb
subb
push
mov
inc
into
push
jle
pop
icebp
xchg
fldenv
into
out
in
ljmp
sbb
dec
xchg
xor
xor
clc
dec
pop
nop
add
jmp
add
push
jle
mov
push
add
jno
push
xchg
pushf
jmp
adc
or
mov
pop
mov
ja
xlat
xchg
cmp
mov
cmp
test
jmp
sub
rorl
shll
iret
mov
loope
jne
sub
sbb
int
adc
call
adc
aam
in
loope
cwtl
pop
sarl
int
imul
fstps
idivl
enter
jl
es
jno
test
dec
data16
aad
dec
les
inc
loop
xor
cmp
mov
aam
lcall
sbb
icebp
xor
mov
push
lods
scas
es
cmp
xor
fists
or
out
les
cmp
sbb
pop
ret
fisttpl
fsubp
push
out
xchg
movsl
je
mov
mov
hlt
mov
icebp
jb,pn
fsubl
xlat
adc
sub
push
data16
lods
dec
mov
enter
aaa
jo
xchg
inc
lahf
out
test
lods
pop
cltd
xchg
xchg
jb
lea
aad
shlb
loop
idivb
add
jne
mov
movsl
jge
cwtl
ret
xor
test
mov
repz
adc
test
cli
loope
and
shr
fsubl
pop
out
jecxz
mov
mov
and
and
and
xchg
jae
sbb
push
ss
jne
or
push
push
roll
mov
mov
pop
inc
fmulp
dec
mov
addb
addr16
xor
clc
jbe
scas
ss
int3
push
adc
xchg
icebp
dec
push
lods
sub
das
enter
sbb
incb
or
sahf
lret
mov
jg
mov
xchg
movsb
gs
mov
std
test
push
xchg
movsb
ret
mov
jns
icebp
xchg
adc
mov
test
out
imul
pop
lcall
jb
pop
inc
push
sbb
cli
pushf
xchg
mov
pop
mov
nop
mov
call
and
aam
andl
notb
cwtl
mov
mov
outsb
lds
jmp
xor
mov
lds
in
dec
addb
pop
fsubl
inc
mov
jle
int3
xor
push
push
stos
out
add
out
aad
icebp
imul
push
pop
in
daa
fnstcw
clc
xor
dec
std
and
cvttps2pi
sahf
ja
mov
adc
sarl
push
aam
fisttpl
mov
push
dec
bnd
mov
pop
dec
cmp
inc
mov
shll
mov
mov
loope
addl
push
mov
push
dec
cmpsl
mov
ds
xchg
jmp
pop
and
cmp
inc
mov
ljmp
jne
push
ficoml
mov
in
lahf
imul
mov
scas
inc
push
add
lods
xor
in
pop
imul
gs
mov
mov
xor
sbb
call
stos
add
sub
mov
jno
xor
add
js
push
and
mov
imul
jae
mov
cmp
or
dec
addr16
dec
mov
or
insb
aam
fwait
cmp
jo
loope
mov
mov
fsubl
xchg
fwait
imul
sbb
cmp
or
je
insb
pushf
out
pop
jmp
std
rcrb
cmpsl
push
sbb
inc
and
sbb
cwtl
adc
out
pop
in
jo
sub
mov
mov
mov
push
in
fcompl
sub
fsubrs
stos
in
sub
idivb
xor
sti
push
lcall
push
insl
add
lock
sub
dec
out
jnp
jae
std
aam
jg
mov
popf
int
shrl
ret
lahf
add
pop
out
xchg
inc
sahf
lret
push
xchg
sub
xor
pushf
imulb
sti
fwait
xchg
add
into
mov
js
or
add
sbb
fldenv
cmp
dec
sub
movsb
into
aam
gs
int3
pop
mov
mov
in
and
xor
hlt
add
stos
add
xchg
mov
cmp
cmpsb
int
aad
pop
lret
cmp
ljmp
out
jb
scas
pusha
xchg
and
xchg
push
push
enter
fsts
lea
mulps
sub
out
or
pop
iret
xlat
movsl
xchg
inc
pop
mov
or
jno
pusha
push
jge
jecxz
daa
xor
rcrl
sbb
js
test
test
jbe
les
add
xchg
scas
mov
getsec
pop
in
test
int3
pusha
mov
adc
in
sub
and
sbb
cmc
pop
mov
pop
sub
jge
inc
ret
mov
add
xchg
loopne
push
mov
cmpl
pop
stos
xchg
iret
push
popf
icebp
loop
jle
jp
pop
lret
mov
mov
adc
orb
push
stc
or
jno
inc
mov
fdivrl
ja
int
mov
mov
lock
pop
pop
add
rcrb
faddl
call
cmp
jae
xor
dec
push
cmpsb
mov
push
fisubrs
les
je
notl
test
scas
pop
in
stos
jmp
ds
bound
jb
bound
aas
ljmp
pop
mov
movsl
cltd
jecxz
loope
and
dec
iret
movsb
repnz
pop
popa
sbb
mov
into
in
cmp
jmp
or
xchg
lcall
mov
iret
fwait
rcl
mov
cmpsl
push
inc
dec
icebp
xor
fstps
sub
test
jp
inc
subl
xor
or
pop
pop
mov
dec
in
je
ljmp
cltd
pop
enter
popf
jnp
js
dec
cmp
stc
push
flds
adc
rolb
sub
imul
mov
lods
mov
pop
jp
xor
jnp
sarl
mov
mov
inc
jecxz
mov
dec
mov
nop
daa
push
scas
jle
fucomip
jo
fs
xchg
insb
xor
loop
outsl
fcoml
es
xor
out
mov
test
cmpl
lahf
fstps
inc
out
sahf
addr16
fldcw
test
push
pop
or
jl
ret
hlt
fwait
fwait
pop
mov
inc
loopne
hlt
xor
add
mov
shrl
pop
iret
jnp
ljmp
jb
hlt
leave
cmpsb
xchg
jp
mov
xchg
das
fnstenv
hlt
gs
sbb
test
insl
lods
imul
cmpsb
dec
cmpsb
pop
add
mov
mov
jno
lret
or
shll
mov
xor
jns
pushf
push
stos
pop
mov
out
in
ljmp
repnz
pop
idivb
adc
in
push
cli
pop
dec
mov
divb
rcrl
sbb
popf
pop
mov
cmc
jle
in
sub
jno
and
aas
scas
xchg
into
repz
add
mov
and
pop
sti
out
hlt
push
insb
and
or
sti
sbb
mov
pop
out
dec
mov
xlat
jp
mov
rorl
jge
ret
inc
sbb
cld
pop
add
pop
in
mov
daa
mov
xor
imul
leave
xchg
lea
out
jo
pop
and
imul
and
lcall
lock
and
sbb
sbb
cltd
inc
xchg
jb
inc
sub
les
mov
das
mov
cmp
push
jns
dec
push
pop
fdivrs
cmpsl
xchg
push
inc
popf
fldenv
movsb
jl
movsb
add
pop
hlt
xor
sti
in
pushf
addb
inc
outsl
xchg
ret
aam
hlt
fistpl
fidivrs
sar
repz
repnz
ret
push
std
pop
and
mov
fs
fldcw
in
push
ljmp
cmc
mov
cltd
bound
sarb
jbe
add
push
repnz
sub
les
sbb
scas
aas
mov
sarb
lock
dec
xchg
mov
adc
nop
mov
cmpsb
xlat
and
xchg
mov
ss
std
into
repnz
pop
jle
jecxz
mov
ret
mov
ja
ret
xchg
testb
dec
xchg
mov
mov
into
out
je
sub
test
adc
jmp
push
roll
test
adc
sub
mov
sub
push
or
sub
push
mov
cmp
fldl
aaa
addr16
fmull
out
sub
jo
jecxz
jnp
pop
ss
inc
xor
ljmp
cmp
orl
sti
xor
addr16
dec
adc
cld
stos
mov
cli
mov
sub
inc
xorb
in
jg
mov
insl
into
xchg
das
cmp
add
pop
cli
out
addb
ja
test
clc
jo
sub
lds
rorb
pop
inc
jns
hlt
add
mov
popa
pop
cmc
fdivp
pushf
data16
std
insb
mov
lcall
mov
or
dec
mov
lahf
sbb
jae
or
cld
sub
adc
dec
add
setbe
dec
add
and
inc
pop
bnd
stos
aam
jnp
inc
pushf
xor
push
scas
mov
cld
pop
std
outsb
dec
cli
mov
aam
mov
repz
adc
pop
mov
movsb
mov
in
pop
mov
test
je
stos
push
rcll
xor
sub
xchg
lods
jl
dec
aaa
mov
outsl
sbbb
lcall
sub
sub
mov
into
test
add
fstp
mov
fwait
xor
or
dec
dec
dec
out
cmp
arpl
imul
adc
insl
insl
fldcw
sbb
xorb
test
int3
mov
mov
sti
xchg
mov
insb
jecxz
xor
lahf
inc
jne
jp
mov
cs
cmp
fists
lea
aam
mov
dec
sbb
out
push
add
pop
mov
ret
aaa
push
inc
pop
pop
aas
jb
pop
mov
push
pop
or
sbb
ja
or
lea
jl
call
mov
add
lods
nop
push
cmpsb
testl
insb
test
les
ret
sahf
inc
add
xlat
sub
add
pop
scas
mov
pop
and
push
ficomps
mov
leave
fcmovbe
popf
je
popa
clc
ss
dec
test
stc
sub
imul
outsb
push
rcll
mov
jb
stos
add
and
mov
rorb
cld
shrb
cmp
cwtl
inc
scas
jmp
jnp
adc
scas
je
jp
sbb
mov
mov
gs
lock
mov
adc
mov
and
loopne
lcall
scas
aam
testl
jbe
dec
dec
mov
dec
add
jbe
out
js
pop
arpl
sub
leave
cld
xchg
adc
out
mov
sbb
insl
pop
xor
aas
mov
adc
mov
andb
dec
jge
xor
dec
ds
sahf
or
pop
repz
push
dec
dec
pop
fisubs
in
sbbb
inc
or
lcall
out
xchg
jo
ljmp
push
cld
in
push
or
into
scas
adc
test
lds
sbb
std
add
mov
xchg
xor
popa
leave
mov
lret
inc
mov
cmp
scas
xchg
repnz
aaa
xchg
fisubs
cwtl
test
sub
fbld
inc
gs
push
stc
or
insb
stos
lahf
cmpsb
add
out
ljmp
mov
dec
notl
outsb
xor
cmp
inc
arpl
pop
insl
sti
test
add
pop
leave
and
push
les
cwtl
scas
dec
jp
imul
ret
outsb
mov
out
enter
jne
test
pop
add
or
repz
and
mov
ret
add
mov
sub
jb
mov
mov
mov
pop
add
aaa
in
pop
outsl
out
loope
stos
roll
jecxz
mov
orl
cmpsl
push
aaa
mov
inc
xchg
rorl
sub
mov
stos
test
jl
add
adc
pop
adc
mov
xchg
adc
push
mov
sbb
repz
or
inc
insl
cmp
mov
sub
mov
jb
jnp
cmp
inc
lret
stos
inc
cmpsl
ficompl
test
mov
test
add
jno
sbb
or
cld
ret
pushf
or
push
sub
xlat
cmp
xor
dec
test
add
in
xor
jno
call
enter
in
pop
hlt
or
negb
add
push
mov
add
inc
push
dec
xor
mov
fildl
int
ss
ja
pop
cmp
xor
or
testl
lret
repnz
sub
les
pop
call
xchg
js
dec
fsubrs
imul
shl
add
mov
jecxz
mov
loopne
fst
jmp
dec
mov
insb
rcrb
movsb
leave
jecxz
bound
or
in
and
insb
ljmp
mov
mov
xor
add
leave
ja
adc
and
xor
mov
xor
jae
sbb
orl
push
repz
jp
cs
aam
cmp
test
ret
outsb
pop
leave
test
sbb
ffreep
in
jo
pop
and
push
sarl
test
cli
adc
sub
dec
insl
in
sti
push
cmp
inc
mov
or
push
jnp
push
or
xor
adc
xchg
cmpsb
sub
sahf
xor
and
push
shll
sbb
xor
mov
mov
rcrb
add
repnz
daa
sub
jecxz
sbb
add
and
les
pop
sub
fucomi
sbb
js
fs
arpl
xchg
movsl
and
fsubrl
push
inc
aad
mov
sbb
lret
cmp
aaa
out
xchg
ljmp
int3
jo
in
inc
cs
mov
mov
dec
sarb
mov
test
fisttpll
sub
hlt
lahf
mov
jp
nop
dec
leave
cmp
push
adc
jb
vmovntpd
arpl
fisubl
adc
push
push
xor
pop
dec
mov
xchg
shrb
mov
push
adc
sub
or
xorb
cs
leave
iret
jns
sbb
jo
in
mov
jmp
bnd
add
addr16
pop
lods
mov
sbb
stos
cmp
jns
jne
mov
aas
inc
shlb
call
sub
fadd
dec
mov
fwait
inc
stos
push
fldl
repz
inc
jecxz
sbb
mov
int3
mov
neg
or
mov
add
cs
fwait
mov
imul
jae
shll
jmp
fdivrs
mov
scas
lods
mov
es
in
fstps
jnp
fstpt
mov
ficompl
push
xchg
test
or
lods
fmuls
mov
rcr
arpl
cmp
movsb
in
sbb
cmp
push
je
popa
loopne
xlat
fdivrl
loopne
or
scas
or
jbe
loopne
xchg
rorl
popa
or
push
jmp
fcmove
xchg
subb
outsl
btc
cmpsl
push
ficoms
out
xchg
inc
xor
adc
cltd
cmp
inc
icebp
cmp
push
adc
sbb
jne
sub
rcll
popf
mov
dec
call
pop
jg
shlb
mov
jecxz
xchg
push
out
sub
cmp
int
xor
ljmp
mov
out
fcomp
shlb
xor
mov
jns
cwtl
test
ja
out
xor
aas
mov
sbb
xchg
nop
mul
adc
data16
ss
push
push
xor
lods
or
jb
sub
sbb
xchg
sbbb
daa
fldt
xchg
subl
mov
repz
mov
mov
mul
imul
sti
sub
pop
out
aas
jno
test
popf
js
test
fiaddl
repnz
cmp
cld
popf
arpl
cmpsl
mov
int
jo
xchg
adc
pop
cli
lret
jle
in
subl
cli
mov
ja
adc
outsl
arpl
les
imul
push
mov
pop
xor
jbe
push
jmp
bound
push
xor
cli
xor
xor
jmp
cmpsb
push
add
inc
push
push
lds
xchg
out
jle
call
push
lock
cltd
shrb
arpl
test
lret
xchg
out
rcr
pop
adc
fcoms
jb
sub
jle
or
push
outsb
es
rclb
popf
out
loope
enter
out
or
fcmovbe
call
or
in
scas
push
rcll
xchg
jle
inc
xchg
aas
insl
out
aas
cltd
pop
sbb
clc
push
das
pop
int3
mov
filds
outsb
popf
fwait
cmp
dec
iret
mov
xor
in
test
not
add
push
daa
xor
outsl
and
ret
xchg
andl
das
jecxz
sbb
clc
dec
negl
cmpb
das
enter
leave
dec
jle
push
loopne
icebp
call
push
and
test
js
pop
adc
rcrb
inc
nop
or
xor
test
sub
xchg
pusha
lcall
dec
dec
mov
test
sti
sbb
sub
push
mov
sbb
pop
lcall
mov
sub
ljmp
neg
mul
sahf
jp
les
imul
mov
mov
mov
pushf
xor
lretw
loop
cvtps2pd
cmpsl
lret
push
shrb
pop
push
push
cmpl
movsb
xor
jne
int
mov
jo
xor
dec
aam
decb
jecxz
cmpb
xlat
xchg
adc
xchg
pop
aad
cmpsb
pop
pushf
xchg
mov
mov
inc
sub
push
in
es
xor
xchg
push
jp
adc
push
test
clc
rorl
pop
rcrb
mov
arpl
ljmp
or
in
inc
ret
cmp
sbb
or
sbb
mov
xchg
loop
aam
call
mov
clc
js
mov
pop
push
pop
pop
stos
into
loopne
shll
push
out
insb
ret
push
xchg
outsb
push
adc
ja
push
adc
xor
add
mov
test
mov
data16
repnz
mov
mov
sub
imul
push
inc
push
adc
xor
cmpsb
scas
push
je
mov
cmp
mov
insb
dec
sti
sub
jno
add
das
adc
daa
popf
mov
jmp
sub
into
xor
aaa
cmp
mov
xchg
addl
aad
xor
scas
inc
pop
xor
lret
inc
into
add
xchg
test
lret
sbb
stc
rorl
sarb
shlb
xchg
js
fcompl
pop
sti
ljmp
pop
imul
add
push
add
ljmp
popf
xchg
push
jg
out
add
scas
fadd
fs
nop
clc
outsb
arpl
aaa
pop
mov
arpl
ret
lret
mov
fidivl
ja
insb
inc
ja
out
inc
cwtl
jle
sbb
pop
jnp
jne
adc
leave
sub
push
orl
jecxz
inc
or
jb
dec
or
inc
loopne
imul
cmpsb
insl
sbb
add
out
cmp
fcmovu
pop
xchg
icebp
mov
mov
in
into
mov
iret
sub
dec
and
pop
add
mull
popa
xorb
in
outsw
fstpl
push
stos
pop
ljmp
out
and
jmp
stc
pusha
aad
aad
push
jbe
cmp
sub
pusha
sbb
mov
dec
mov
je
jmp
jbe
push
sbb
pop
es
imul
mov
shll
mov
cmp
push
ret
in
rcll
outsl
mov
or
pop
mov
pop
lea
jns
or
cmp
jmp
test
inc
pop
adcb
xchg
xlat
push
cmp
xchg
scas
cmp
mov
mov
mov
xchg
pop
pop
and
add
dec
mov
sbb
cli
ljmp
popa
vpsubusw
clc
iret
out
imul
add
xchg
sbb
pop
es
or
xor
scas
imul
ret
mov
dec
adc
repz
lahf
mov
pop
add
xor
push
outsl
mov
jo
test
xchg
and
push
lcall
jge
outsl
mov
sub
into
jnp
push
adc
insl
inc
repz
addb
ja
lods
les
and
lret
icebp
push
test
pop
pop
testl
sar
popf
sbb
je
inc
in
out
or
push
xor
pop
dec
popa
mov
loope
je
idivb
mov
js
xor
loopne
daa
mov
sub
fs
div
rdpmc
xchg
sbb
lds
out
sbb
cwtl
cmp
les
int3
js
imul
ljmp
movsl
fbld
pop
cmc
push
cmpsb
or
aaa
push
andb
ljmp
ss
jmp
imul
bound
in
call
dec
jmp
lds
out
pop
mov
xor
mov
mov
shll
in
ficoml
in
pop
pushf
and
bound
jne
mov
push
mov
jmp
ljmp
or
fisttpl
mov
lds
bound
cmc
adc
jge
pop
jl
sbb
arpl
dec
cmp
inc
jno
out
mov
stos
icebp
cvtdq2ps
xor
imul
stos
jl
xor
sub
pusha
scas
push
jp
int3
stos
fldl
std
repz
mov
insl
inc
mov
or
aas
aam
setp
xchg
sub
jmp
lcall
xor
xchg
jmp
cli
inc
in
mov
cmp
test
jbe
cmpb
pushf
arpl
fwait
daa
xchg
test
gs
sbb
ret
pop
push
insb
add
fdivr
mov
xchg
ret
mov
sbb
daa
xor
aam
xor
mov
imull
out
add
dec
cmp
or
imul
mov
scas
xlat
sbb
xor
cmp
dec
mov
push
push
es
ljmp
mov
jns
repz
pop
dec
shll
and
jns
xchg
xor
ret
cltd
dec
imul
mov
aas
mov
in
frstor
xchg
arpl
pop
cmpsl
pop
test
or
pop
ja
xchg
in
pop
std
iret
test
fnsave
mov
mov
notl
test
notb
lea
add
mov
cmp
movsb
psadbw
cmc
sbb
iret
jne
adc
push
jno
sub
lret
out
shl
or
dec
fdivrs
dec
lcall
xor
push
or
aaa
shlb
inc
fwait
clc
das
mov
xor
lea
cmp
cli
cli
hlt
cmp
pop
enter
xlat
jmp
xchg
fbstp
inc
pop
or
push
aas
test
orl
mov
mov
mov
push
jle
addr16
sbb
pushf
ss
cmp
ret
jg
int3
loope
into
cld
sti
mov
push
mov
sub
scas
sbb
cmpsb
jmp
jecxz
mov
add
movsl
stos
ret
mov
in
cltd
or
sub
add
mov
testb
and
and
movsb
call
pop
shlb
shll
leave
xchg
pop
outsb
into
fistps
jno
xlat
icebp
test
and
or
dec
rorb
push
cmpsb
icebp
adc
sub
in
mov
sub
mov
inc
and
pop
insl
sub
sub
push
adc
xchg
xlat
xor
mov
out
addr16
ret
gs
lods
mov
mov
sti
inc
sub
or
fisubl
jns
mov
in
mov
out
nop
iret
add
lock
in
mov
sub
imul
arpl
cld
xor
adc
inc
xor
xor
std
mov
or
insl
xlat
scas
xchg
cmp
lret
outsb
popa
jns
cld
mov
lea
sub
std
out
sbb
out
rclb
xor
mov
movsb
sbb
inc
sub
sbb
sub
dec
fwait
adc
in
mov
imul
sbb
mov
or
dec
lods
cmp
xchg
pushf
repnz
xchg
adc
stos
pop
push
or
mulps
cmp
mov
sbb
jns
aaa
sub
movsl
jno
dec
in
sbb
jns
lret
inc
mov
dec
clc
sahf
xchg
and
aas
int3
mov
das
or
or
lds
outsb
mov
push
dec
sub
iret
ja
outsl
mov
push
or
jne
mov
and
lods
data16
paddd
pop
jns
shlb
mov
jnp
and
es
sarb
push
into
stos
adc
inc
sub
test
lea
aad
outsl
in
push
or
repnz
xor
or
ja
lret
mov
ficoml
psllq
enter
jae
inc
jno
adc
loopne
mov
ja
cmp
shl
cmp
dec
add
xlat
inc
push
sub
fisubrl
inc
aad
adc
adc
jns
por
sbb
call
div
xor
mov
dec
fldcw
mov
push
sbb
cs
xor
fistpl
or
mov
cmp
femms
and
insl
jge
pop
loope
daa
sarl
xor
test
sub
jge
push
mov
nop
cli
jp
leave
add
or
mov
jb
jbe
dec
sbb
fucomp
pushf
push
insb
arpl
sub
mov
sub
mov
in
insl
sbb
sub
mov
sub
fcmovu
dec
sub
and
ss
ljmp
jg
imul
lods
rol
rcrb
xor
add
fidivl
mov
fimull
mov
add
xchg
ds
cs
in
mov
add
in
nop
je
imul
mov
out
mov
mov
sbb
sub
fs
lret
fsub
push
lock
stos
fwait
test
mov
sbb
push
ja
cmp
pop
mov
or
je
pop
bound
jge
xchg
inc
cmp
mov
stos
pop
ja
std
push
pop
jl
lret
jns
inc
jmp
jo
mov
rorb
jb
xchg
out
inc
orb
xchg
cli
or
sahf
stc
scas
sub
ds
push
dec
sub
pop
cmp
sub
dec
sub
lcall
jmp
outsl
out
fistpl
subb
jg
loopne
mov
inc
stos
mov
mov
pop
frstor
xchg
pop
pusha
je
pop
stc
xlat
inc
sarb
in
add
jns
test
xchg
cltd
lret
clc
jg
sbb
xchg
jns
int
rclb
orb
or
fdivl
or
out
and
movsb
dec
add
jmp
cs
xchg
ljmp
add
lahf
add
icebp
cltd
add
insl
jg
xor
sbb
add
int
cmp
push
aaa
fldenv
inc
lods
jns
jge
mov
inc
outsl
mov
clc
fildll
fistpl
add
in
sbb
xlat
in
sahf
xchg
pusha
add
popf
jno
inc
mov
inc
sbb
into
mov
lock
jno
dec
ljmp
nop
test
or
sub
testb
cmp
sti
pusha
movsb
fldcw
pop
xor
pop
push
cmp
sbb
mov
sbb
or
inc
lds
jmp
fwait
cwtl
and
decb
push
cmp
xchg
mov
mov
mov
bound
mov
dec
insl
gs
add
ss
rcr
pop
add
fcmovnb
imul
fwait
lea
and
dec
and
mov
js
dec
push
mov
in
push
dec
out
push
sub
pop
pusha
popa
push
pop
jmp
pop
in
xchg
int
sbb
push
sub
sbb
cmc
xor
lret
notl
jnp
xchg
mov
xchg
shlb
cmp
dec
rcrb
add
adc
icebp
sbb
dec
outsl
push
pop
add
or
adc
or
pushf
pusha
pop
adc
and
adc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
shlb
int3
adc
div
fs
xchg
jo
mov
pop
call
cmp
jle
sub
mov
pop
jg
jge
push
pop
add
push
and
pop
push
add
pop
sbb
mov
jno
mov
sub
push
or
pop
sub
jl
mov
sub
jle
add
mov
add
sbb
sub
jmp
push
and
fstps
fwait
cmp
jbe
in
add
add
push
or
pop
cmp
jne
and
jmp
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
fs
adc
add
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
cmp
pop
jmp
sub
daa
aam
jb
inc
jns
pop
insb
xor
fcomip
lds
lret
aas
rcll
jnp
repz
cltd
xchg
sbb
leave
repnz
mov
adc
cmp
cmc
and
jmp
je
xchg
mov
lods
lret
es
cmp
fwait
pop
out
pop
push
and
insb
adc
out
sbb
and
daa
and
in
adc
out
pop
jbe
inc
dec
sub
sbb
inc
and
jae
es
imul
loop
and
jle
sub
jnp
mov
mov
pop
or
push
mov
repnz
mov
or
mov
test
test
or
pop
sbb
or
jmp
repnz
dec
adc
jo
push
call
push
jmp
cmp
daa
fistpl
jne
andl
dec
out
push
scas
insb
dec
dec
gs
pop
loop
test
pop
jmp
pop
push
sbb
leave
loop
push
movsb
mov
mov
push
or
rcrl
mov
inc
pop
std
push
jmp
rorl
xor
jle
jns
lcall
mov
or
pop
xor
jno
ror
mov
js
stos
mov
adc
fsubl
or
shl
cmp
cmp
jnp
add
mov
insb
push
cwtl
cmpsl
in
and
movsb
jns
outsb
pusha
cmp
inc
gs
push
xor
pop
imul
xchg
cmp
mov
xchg
jbe
dec
data16
jecxz
in
mov
jae
inc
cmp
xor
jp
and
cmpsl
mov
fwait
and
push
push
adc
xor
rcll
call
push
xlat
into
add
dec
popf
out
test
ljmp
clc
ljmp
dec
popl
pop
cmp
cmpsb
and
daa
jp
pop
and
or
push
lock
mov
xchg
cwtl
cmp
out
fs
les
cmpsb
push
jp
jno
ljmp
int3
loope
push
jo
mov
inc
lahf
fsubrl
test
mov
int3
add
cmpsb
xor
and
mov
and
shll
movsl
mov
fbld
jp
cmp
pushf
std
xchg
popa
nop
shll
int3
push
xchg
jp
sarb
dec
rol
inc
add
sti
add
pusha
sbb
scas
jmp
push
lret
daa
jnp
in
jle
bound
adc
sahf
mov
sub
push
mov
mov
ret
jle
mov
div
sti
idivb
push
mov
sub
cld
sti
jle
addb
in
or
out
cwtl
jge
jne
idiv
jle
rorb
or
cli
sti
jle
mov
sbb
xchg
sti
jle
std
daa
or
cli
sti
jle
mov
sti
jle
idiv
jle
imull
or
daa
repz
out
or
cli
xchg
cmc
sti
jle
xorl
out
mov
arpl
je
cli
idiv
jnp
popf
or
clc
or
jo
fldl
push
mov
jle
sbb
cld
jle
imul
mov
mov
call
insl
push
sti
push
testl
jle
inc
mov
hlt
cmp
cli
dec
cli
idiv
sbb
sti
sti
jle
clc
cli
cmp
sti
sti
jle
jnp
push
testl
cli
jle
mov
idiv
rol
int3
test
dec
idiv
jle
testb
jae
push
shll
push
jle
jl
cli
jno
add
jne
push
jle
jle
dec
insl
jnp
push
testl
jecxz
sti
jle
je
push
in
lock
pusha
insl
inc
adc
in
mov
lret
mov
testl
jnp
jne
mov
dec
mov
lods
idiv
jle
jl
sbb
jae
push
and
jnp
push
testl
hlt
jl
jno
idiv
aad
add
mov
mov
xchg
cld
idiv
rol
int3
test
inc
idiv
jle
ss
sar
add
jle
inc
and
push
clc
sbb
addr16
nop
push
pop
stc
ja
jle
clc
push
sbbb
push
jle
pop
cli
jle
test
jle
idiv
stc
jae
sbb
jae
add
pop
add
cmp
or
dec
sub
aam
cmp
mov
jge
movb
mov
aam
cmp
mov
cli
div
sbb
sti
jge
movb
fdiv
jge
test
cmc
lds
imul
mov
aam
cmp
xchg
mov
xchg
adcb
pop
inc
cld
idiv
jle
lds
imul
mov
aam
cmp
gs
xchg
sub
inc
cld
idiv
jle
lds
imul
mov
aam
cmp
gs
push
aam
jecxz
pop
pop
adc
xchg
mov
cmp
jle
cmc
jge
test
cmc
lds
imul
sar
cli
jle
mov
div
sti
cld
jle
pop
aam
jecxz
pop
pop
adc
ljmp
cmc
clc
jae
out
outsb
out
sbb
lock
jle
cli
inc
mov
pushw
xchg
test
sbb
lock
jle
fdivrl
jae
lods
mov
idiv
jle
cmp
lret
sti
jg
stc
sti
jle
div
jle
idiv
or
dec
movsl
lods
sbb
jne
push
jle
jl
rolb
cmp
sti
iret
xor
std
add
jle
sbbb
idiv
rcrl
jl
aad
je
jle
lahf
push
jg
imull
mov
sub
jg
sti
jle
cmp
jmp
in
sahf
ljmp
jmp
ret
inc
sub
or
cmp
movsb
push
fdivr
adc
imul
icebp
hlt
mov
lods
mov
in
pop
xor
mov
mov
dec
sahf
ss
xchg
mov
adc
add
fidivrl
push
aas
imul
js
inc
jg
idiv
jle
idiv
jle
idiv
jle
idiv
jle
idiv
jle
idiv
jle
idiv
jle
cmc
sti
jb
add
mov
idiv
jle
sti
sti
jle
idiv
jle
idiv
dec
cli
idiv
jle
idiv
jle
idiv
jle
lea
cli
idiv
jle
idiv
jle
idiv
jle
idiv
jle
andw
shrl
mov
sti
lods
scas
mov
pop
and
xchg
cmc
cwtl
sti
adc
sub
adc
cld
jmp
je
movsb
xchg
pop
cmp
clc
and
and
sub
jge
inc
adc
inc
int
movsl
xor
in
lock
insl
movsl
dec
mov
or
arpl
imul
pop
jmp
jne
nop
ret
insb
sti
pop
std
mov
cmp
or
pop
leave
bound
pop
das
dec
aam
xchg
xchg
aam
sub
data16
outsl
std
pop
test
mov
fsubs
es
push
out
ss
outsl
lock
shr
lret
or
stos
mov
push
ret
orb
imul
repnz
dec
scas
push
mov
rolb
or
addr16
vmovsldup
jl
adc
ss
jno
pop
mov
mov
mov
adc
mov
mov
cmp
dec
cmp
mov
sub
push
mov
cmc
cld
loope
leave
jecxz
xchg
sbb
daa
sbb
and
ljmp
dec
pushf
lret
inc
pop
sbb
je
mov
mov
jns
addr16
jecxz
ja
test
push
idivl
inc
push
adc
stos
aas
out
shrl
xor
sub
vpermi2pd
in
sub
into
mov
dec
out
dec
xchg
jl
repnz
scas
mov
pop
cmp
sub
or
pusha
out
test
mov
shl
call
popf
bound
pushf
sbb
mov
pop
orl
jle
mov
jle
jmp
sbb
lret
pop
dec
mov
aas
outsl
pop
push
cli
stc
sti
jle
aam
imul
ss
mov
dec
cli
ret
push
mov
je
test
sub
push
sub
and
push
lea
movsb
rdtsc
dec
jnp
jmp
orl
push
insl
pop
test
xor
jbe
or
out
fists
jnp
mov
jb
dec
adcl
cmp
or
sti
adc
inc
add
jne
adc
jecxz
add
adc
fisttps
pop
pop
hlt
addr16
outsl
cwtl
push
cmp
cmpsl
out
jb
xlat
jmp
cmovle
push
push
mov
jbe
icebp
call
ret
rcrl
pop
rolb
dec
pop
xchg
jl
pop
sub
push
mov
imul
into
in
push
mov
inc
out
cmc
fwait
div
push
popa
bound
pop
sub
adc
xor
and
add
add
add
adc
adc
or
pushf
pusha
pop
adc
and
adc
add
add
add
add
dec
or
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
or
hlt
dec
or
cwtl
dec
or
mov
or
movsl
dec
or
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
dec
or
add
add
fmuls
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
inc
and
add
add
inc
repnz
adc
bound
mov
and
cmp
fs
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
sar
push
sub
pop
pop
mov
push
push
es
cmpsl
or
int3
rcrl
jmp
mov
pop
cmpsl
mov
dec
out
jl
shll
mov
movsb
idiv
add
pop
mov
mov
mov
ret
sub
arpl
xorl
leave
or
jmp
lea
pop
in
and
jle
call
xchg
pop
cmp
lds
adc
or
push
dec
mov
pop
sbb
movsl
push
pop
jecxz
clc
imul
ljmp
ljmp
enter
jmp
lock
and
jmp
mov
loop
sbb
jne
scas
lds
cmp
push
sbb
out
mov
lea
addb
aam
setb
push
in
sbb
lahf
pop
enter
je
jb
shr
sub
inc
andb
pop
outsb
mov
mov
jge
jns
nop
push
fwait
test
lea
xor
call
cmp
nop
dec
cli
mov
push
xor
dec
inc
jmp
dec
insl
sub
ss
test
pop
sbb
sar
cs
clc
lock
fs
into
mov
lods
shll
sbb
adc
mov
aad
mov
xchg
xchg
pop
mov
push
sbb
mulb
pop
das
inc
and
stc
sub
inc
sub
hlt
mov
repnz
sarb
pusha
xchg
pop
inc
add
jnp
jbe
repnz
pop
mov
cmpsl
lods
in
and
mov
or
push
mov
fstps
and
adc
sti
add
jl
mov
or
push
pop
jns
mov
cmpsl
loopne
mov
ret
lea
add
bnd
ret
and
sbb
mov
cli
arpl
mov
test
adc
sub
sbb
and
jnp
adc
push
or
les
cmpsb
pop
inc
mov
xchg
test
clc
xor
cmp
out
inc
push
popf
xchg
add
maskmovq
negl
push
insl
xchg
pop
mov
push
sbb
fwait
out
pop
mov
xchg
jo
jns,pn
ja
cmpsb
xor
clc
sbb
dec
je
cmpl
sbb
dec
mov
mov
out
shlb
in
sbb
or
shlb
push
xchg
pushf
cli
call
push
daa
pop
outsb
push
add
das
add
rclb
adc
loopne
push
cmpsl
bound
sub
leave
pop
xlat
xor
decl
mov
icebp
insl
jge
lret
xor
dec
pop
loop
mov
jge
push
cmpb
push
add
or
mov
cmpsb
fs
pop
push
test
stos
pop
rcrb
push
fwait
adc
and
or
movsb
popa
and
lea
insb
scas
loop
mov
adc
stos
pushf
jae
ret
push
adc
pop
jg
cmpsl
movsb
mov
add
xchg
mov
popa
and
lcall
cli
aam
rcll
loope
mov
test
arpl
mov
imul
in
imul
sbb
pop
push
insb
sahf
cmp
test
dec
push
loop
xchg
cmpsb
outsb
and
inc
inc
mov
mov
and
leave
fisubrl
dec
or
cmp
repz
jb
push
sub
pop
inc
adc
push
imul
xchg
fmull
repnz
push
and
test
dec
sbb
push
inc
cmp
scas
mov
fwait
adc
in
fs
in
mov
sub
aas
mov
popa
clc
sahf
lret
cmp
outsl
sub
rcrl
nop
adc
jo
push
push
das
mov
pop
fidivrl
mov
cmp
test
jne
ret
jmp
sti
imul
fnsave
hlt
addl
imul
popf
sbb
lret
or
popa
pop
jns
cs
mov
or
lahf
sub
sti
mov
inc
mov
ret
or
mov
jae
add
repnz
js
jns
stc
and
pop
xor
xchg
push
cmp
leave
pop
jno
ret
arpl
sub
dec
sub
icebp
inc
inc
and
mov
ss
adc
sahf
or
iret
enter
sub
xor
test
pop
outsl
rcr
pop
rcll
push
push
repz
xchg
mov
test
sbb
notl
and
movsb
xchg
aaa
and
paddw
arpl
push
xchg
sbb
outsb
cwtl
imul
mov
stos
rorb
mov
sbb
mov
jmp
or
and
xor
ljmp
neg
fidivs
add
or
jle
shll
pop
and
jnp
pop
dec
adc
cwtl
imul
lods
sub
rolb
scas
repz
scas
in
popf
sub
jg
arpl
or
or
inc
in
stos
les
mov
push
leave
lcall
and
and
add
add
mov
inc
cwtl
xlat
pop
push
pusha
lock
mov
in
jp
xchg
enter
xchg
imul
cmp
jge
mov
adc
lcall
cmpb
lret
fcomps
pop
aaa
call
jl
inc
repnz
dec
cltd
iret
pop
notl
mov
jp
pop
cmp
mov
daa
mov
and
insb
jmp
sub
xor
or
lods
shrb
push
jbe
mov
xchg
movsb
jge
gs
cmp
push
pop
insb
sub
popf
aaa
mov
negl
ljmp
push
jecxz
push
shr
call
mov
add
movq
bound
mov
add
dec
inc
fwait
inc
mov
sbb
daa
mov
pusha
and
xor
into
mov
mov
cli
dec
jne
mov
fsub
jns
adc
jg
sub
sbb
pop
sbb
mov
cmp
push
cmp
inc
lret
sbb
ljmp
rcr
dec
jmp
sarb
mov
xchg
popf
test
cmp
mov
inc
sub
mov
dec
push
mov
test
cmp
cmp
jmp
fstl
test
xor
inc
imul
sbb
and
cmp
por
mov
adc
bound
out
arpl
mov
test
imul
mov
mov
ret
cld
fcoms
rorb
xlat
jmp
cmpsl
adc
xchg
jmp
push
call
fcmovnbe
sub
pop
int3
cmp
inc
xchg
inc
arpl
aaa
stc
fwait
scas
xchg
shl
jae
fidivrs
adc
stc
in
mov
jnp
or
xchg
adc
sbb
and
push
jl
cwtl
sub
idivl
aad
sbb
and
jp
push
insb
xchg
mov
xor
in
stos
add
push
push
add
out
lret
push
out
push
xchg
arpl
and
pop
out
mov
jmp
pop
push
mov
jge
mov
int
in
cmpsl
or
fmuls
xchg
add
sub
xor
int3
je
mov
test
xor
push
movsl
insl
outsb
rol
dec
cltd
pop
xchg
push
out
dec
lds
shrl
icebp
mov
sarb
movsl
outsl
pop
ljmp
pop
loopne
leave
sub
ficomps
popf
mov
stos
sbb
mul
push
ficoms
pop
xchg
mov
mov
jmp
lcall
test
inc
in
call
push
cmpsb
sbb
or
xchg
mov
rcrl
mov
ljmp
xchg
fsubr
push
enter
jns
jecxz
imul
mov
stos
ljmp
xor
mov
mov
flds
cmp
pop
mov
pop
xchg
or
xchg
and
mov
and
push
arpl
cwtl
lea
inc
popf
sahf
inc
mov
and
or
inc
jo
mov
mov
jmp
xchg
in
cmovl
mov
repz
and
dec
mov
add
pop
loop
push
inc
mov
cmpsb
or
lods
movsb
lret
sbb
outsb
xchg
xor
pop
cli
shll
xor
sahf
fcoms
mov
adc
lret
mov
inc
rcll
shlb
dec
pop
dec
cmpsb
lahf
je
pop
dec
push
ljmp
or
pop
xchg
push
dec
pop
sbb
mov
pop
divl
mov
jnp
aas
imul
pushf
xchg
xchg
shrb
sahf
push
fistl
lcall
data16
std
movsl
adc
jbe
xchg
or
in
xchg
sbb
inc
imull
jmp
mov
sbbl
and
mov
addr16
hlt
mov
adc
test
mov
ja
sbb
sahf
dec
and
push
fldt
push
loop
insl
push
mov
js
fnstsw
and
cwtl
mov
adc
cmpl
lods
scas
pop
aad
jle
pushf
cmp
das
or
loop
std
jle
aas
xchg
inc
jo
rcl
enter
adc
inc
jg
js
xor
lea
andl
mov
and
mov
mov
mov
fcmovnb
popa
mov
mov
inc
stos
cmp
cltd
sub
add
jno
mov
shlb
jae
xor
mov
jle
test
xor
or
lahf
mov
pop
stos
je
push
test
xor
jge
adc
dec
repnz
sbb
xchg
dec
mov
outsl
and
push
mov
mov
mov
loope
cld
inc
push
inc
arpl
sub
lahf
iret
push
hlt
jl
inc
fwait
cmp
mov
aaa
lock
cld
cld
int
movsl
arpl
jne
out
andb
int3
sub
push
dec
cs
stos
xor
cmp
jmp
popa
jo
into
mov
sbb
js
jmp
and
jns
sub
cltd
nop
nop
pop
stos
lods
std
repnz
mull
sbb
ja
aas
mov
cmpsb
inc
in
jo
out
out
repnz
mov
addr16
pop
mov
mov
push
sti
aaa
loopne
es
clc
ret
frstor
xor
mov
mov
in
pushf
subb
jecxz
add
mov
xor
fstpt
or
dec
xchg
mov
fidivrs
and
jo
icebp
movsb
xor
call
dec
rclb
sbb
pop
pusha
call
popf
outsl
jnp
mov
lods
cltd
out
shrb
aaa
sub
cmpsb
insb
hlt
mov
lret
sbb
jp
sub
data16
mov
in
shlb
gs
lods
or
call
shl
cmp
xchg
adc
inc
sub
outsl
in
xchg
or
ret
out
cmp
xor
decl
cmpsl
pop
lods
pop
popw
faddl
jne
shrb
mov
jns
outsb
ljmpw
sbb
push
sub
aam
je
xor
push
cwtl
stos
sub
push
shll
add
stos
jecxz
scas
dec
and
loopne
lods
testb
pop
push
mov
xchg
jmp
jae
push
push
cmp
xchg
mov
rclb
and
push
push
and
imul
popf
std
sbb
mov
stc
push
push
jne
test
test
sti
xor
cmp
cltd
lock
jnp
sub
clc
fisubrl
adc
movhps
sub
xor
sub
mov
xchg
psubw
xchg
aad
lods
push
mov
daa
or
mov
sbb
mov
sbb
movsl
lock
inc
ret
ds
or
jne
dec
inc
movq
sbbl
pop
imul
adc
in
ja
jb
fcomip
mov
dec
repz
sahf
fidivl
aaa
inc
sub
pop
jno
std
fwait
jle
push
inc
pop
lahf
test
push
testl
mov
inc
adc
mov
mov
imul
mov
mov
sbb
sub
pop
and
mov
mov
sti
test
inc
or
mov
jge
adcb
mov
lret
sub
mov
cmpsl
bound
push
arpl
stc
dec
mov
imul
sub
jp
xor
or
inc
jg
test
jmp
mov
sub
hlt
and
push
dec
cmpb
push
push
xchg
out
pop
cmp
shlb
loope
nop
sbbb
arpl
jae
xchg
inc
insb
inc
aas
ret
and
sarl
fcomps
cwtl
inc
fistps
cmp
lock
dec
test
sbb
jne
xlat
mov
add
in
icebp
mov
pop
inc
mov
lods
addr16
out
cmp
out
ljmp
push
adc
xor
xor
pop
push
adc
ljmp
cmp
lret
icebp
and
push
jg
dec
daa
iret
jae
mov
ror
xchg
pop
sub
sahf
movsl
push
sbb
in
movsb
imul
add
jle
dec
out
add
add
lock
sahf
inc
push
sbb
sbb
mov
mov
dec
mov
hlt
mov
in
mov
cmpsl
xchg
xlat
jecxz
adc
and
sahf
sarb
xchg
add
cmpsb
outsl
pop
jmp
pop
inc
mov
xor
mov
data16
adc
call
cltd
jnp
xlat
push
lret
in
xchg
push
xchg
dec
sbb
and
daa
ljmp
imul
cs
or
ror
mov
clc
shl
add
dec
and
imul
lahf
pop
push
mov
mov
mov
lods
daa
es
test
mov
or
ret
sub
insl
fidivs
mull
rorb
cmp
imul
mov
fcmovnbe
jns
bound
mov
sub
pushf
and
xor
scas
mov
std
adc
add
cmpsl
sbb
xchg
mov
jl
ret
cmp
fldcw
popa
or
cld
ja
fidivs
xchg
ljmp
sbb
rcr
les
jecxz
lret
pop
jmp
je
cmp
add
xchg
mov
clc
fwait
dec
add
addr16
inc
leave
sub
xor
cmpsl
xor
loopne
movl
sub
sarl
xor
adc
roll
call
mov
xor
xor
in
sub
inc
adcb
add
inc
jle
cmp
stos
pop
call
shll
pop
or
jp
sbb
mov
popf
and
faddl
nop
pop
pop
pop
mov
js
testw
mov
iret
mov
repz
sti
pop
outsb
mov
jmp
iret
jne
sahf
mov
add
pmuludq
adc
mov
jns
sub
fmulp
aad
imul
js
pop
std
xlat
xor
aad
xchg
xor
add
jbe
xchg
jle
popa
sbb
sbb
ss
xor
sbbl
inc
push
lret
mov
push
es
xchg
mov
shr
test
mov
clc
push
jbe
roll
dec
fidivl
movsb
lahf
or
push
testl
rcrb
cmp
pop
dec
call
leave
add
xor
jo
push
orb
adc
scas
in
ja
mov
sub
adc
mov
cmp
and
ja
loop
into
aaa
jl
arpl
xor
push
push
rolb
cltd
jge
mov
int3
mov
jmp
push
addr16
and
std
scas
push
popf
dec
mov
pop
aad
adc
out
into
push
shlb
sbb
mov
add
mov
push
and
cmp
xor
sti
sbb
mov
mov
add
stos
jg
rorl
ret
out
punpckhdq
arpl
push
movsl
or
ds
lret
pop
test
lret
and
mov
pop
mov
or
push
cld
push
jmp
fmuls
pop
mov
sbb
push
add
stos
cmp
aam
ret
lds
scas
mov
and
cmp
pusha
or
dec
lods
and
mov
lods
mov
rcrb
das
leave
sub
ffreep
insb
call
sub
pusha
mov
stos
hlt
mov
pop
inc
fsubp
mov
jnp
xchg
fdivs
pop
filds
gs
mov
pop
addl
xchg
mov
outsb
jnp
xchg
into
outsb
repz
inc
push
add
loope
add
sbb
sub
xor
jae
add
out
jg
jbe
push
iret
sbb
dec
xor
rolb
pop
test
pop
lret
adc
cmp
mov
arpl
mov
jb
mov
push
add
cld
fcompl
sbb
xchg
mov
out
stos
xchg
es
mov
jne
cmc
and
sub
xchg
out
xchg
data16
faddl
jae
test
sbb
iret
int
cs
xor
mov
push
mov
scas
xchg
mov
inc
shll
call
cmc
dec
scas
mov
daa
das
out
pop
inc
add
add
push
in
in
push
pop
jle
pop
loop
pushl
jnp
outsl
mov
push
pusha
data16
pop
movsl
jecxz
out
mov
iret
call
sahf
in
loope
gs
sbb
sbb
ljmp
popa
std
sarb
stos
out
outsb
test
mov
loop
inc
dec
shll
cld
push
push
shrb
sbb
ja
loopne
movsb
inc
fwait
dec
cld
pop
pop
adc
or
outsb
pushf
push
pop
jne
or
pop
push
cmpsb
je
push
mov
jae
int3
dec
sbb
fidivrs
fucom
test
or
jae
aaa
ret
jmp
repnz
xchg
jl
xchg
lods
jbe
xorl
ss
pop
insl
imul
cmp
stos
ret
cmc
loopne
stos
xchg
pop
mov
cmp
add
arpl
rclb
fstpt
dec
aaa
mov
in
adc
adc
xchg
and
aad
dec
push
adc
adc
cmp
cltd
fs
les
inc
xor
fistpll
mov
test
in
xor
aas
nop
pop
ret
sbb
sbbb
mov
dec
pop
ja
adc
das
outsl
idivb
shlb
into
movsl
int3
push
mov
cmpsl
in
cmp
les
cmp
pop
sbb
movsb
or
popf
dec
cmp
mov
sahf
dec
lock
push
sub
jmp
jns
push
mov
jg
push
and
mov
lcall
loope
adc
jns
xor
das
int3
mov
iret
cli
insl
mov
add
adc
pushf
cmp
mov
outsb
iret
inc
sub
adc
incl
xchg
adc
add
enter
push
fisttpl
mov
icebp
dec
xchg
ljmp
je
push
sub
or
and
fstpt
dec
mov
mov
imul
aad
movsb
leave
cmp
dec
lods
jae
adc
mov
cmp
adc
movsb
lahf
sbb
insl
mov
mov
lcall
inc
mov
iret
mov
mov
mov
data16
or
cld
jae
sbb
popf
dec
pop
psubusb
and
sti
mov
rolb
into
into
arpl
jne
scas
inc
xor
mov
push
mov
fdivl
pusha
ret
movsl
ret
cmc
test
push
sub
cld
enter
mov
mov
je
xor
repnz
sub
jb
or
inc
and
js
lcall
add
jle
mov
mov
or
cltd
sbb
ret
aad
das
xchg
inc
mov
sahf
data16
push
pop
mov
cltd
ss
fstpl
inc
dec
and
jecxz
insl
or
mov
push
mov
dec
out
xor
leave
test
stos
out
pop
dec
andb
into
repnz
and
into
xchg
lcall
andb
jge
inc
lods
jns
les
jo
push
rcl
das
in
inc
mov
aas
xchg
es
out
cmp
orl
dec
pop
movsb
mov
adcb
xchg
iret
jns
mov
sahf
jb
sbb
jge
cltd
addl
mov
imul
sahf
mov
adc
pop
je
sarl
je
cmp
push
dec
in
mov
sub
aad
dec
ficoms
iret
mov
inc
and
xchg
dec
mov
inc
jo
push
pop
or
jmp
test
mov
xchg
inc
add
ficoms
pop
sar
pop
jmp
shll
xchg
cltd
dec
jo
mov
repz
add
jno
mov
sbb
xor
movsb
rorl
jb
hlt
or
and
mov
dec
rep
adc
pusha
incl
mov
dec
jg
jae
nop
clc
ja
xor
dec
xchg
fwait
shr
xchg
out
into
adc
xor
xchg
out
je
sbb
add
push
pop
hlt
lret
mov
add
and
xorl
shlb
mov
stos
loopne
and
arpl
daa
rclb
mov
fs
mov
push
lea
cmp
icebp
std
mov
xor
pop
orl
fldenv
negl
outsb
xlat
fmull
add
out
push
rolb
dec
or
repnz
fcomi
notb
fistl
jnp
sub
xchg
xchg
pop
xchg
test
test
cmp
mov
ja
iret
jge
or
insl
mov
adc
addr16
cmp
ror
mov
inc
repnz
jle
insb
lret
sbbl
mov
fcompl
and
sub
daa
shl
leave
hlt
out
mov
sbb
jno
add
xchg
push
iret
in
test
cmp
je
inc
aaa
pushf
popf
cmpsl
add
idivb
dec
call
in
test
dec
adc
jg
jmp
scas
mov
push
xor
in
adc
sbb
jecxz
jg
cmp
mov
testl
cmp
arpl
icebp
loopne
iret
std
adc
xor
pop
cwtl
sti
maskmovq
divl
popa
stos
in
lea
inc
sub
subb
and
xchg
je
jmp
pop
sahf
bound
mov
out
call
push
fdivl
es
sbb
push
mov
push
test
lahf
jg
mov
aaa
call
ja
cwtl
push
cmp
dec
jmp
das
jnp
mov
mov
pop
inc
rorl
add
mov
cmpsb
imul
xor
in
xor
add
jge
add
fsubr
aas
mov
pop
test
out
aas
bound
adc
sub
jl
mov
xorb
out
mov
push
lret
lahf
outsb
movsb
test
daa
pop
cmp
loope
push
xchg
mov
sub
movsl
xchg
shlb
imul
shl
pop
inc
fsubrs
sub
pop
fadd
fsubrp
mov
hlt
pop
jo
lock
lret
clc
fiaddl
in
insl
in
mov
sahf
test
outsb
sbb
mov
int3
aaa
fldenv
jnp
pop
adc
add
sub
popf
push
push
mov
arpl
dec
sbb
mov
cli
fwait
jne
dec
mov
xlat
add
sbb
push
jne
jl
and
mov
add
cmpsl
and
fildl
fdivrl
frstor
fisubrl
test
sbb
decb
aas
outsb
mov
ss
pop
enter
or
cmp
cmp
push
sbb
shl
pop
push
lock
in
xor
jmp
add
mov
inc
fwait
cmpsb
imul
mov
sub
xorl
bound
push
adc
mov
push
lds
dec
gs
push
in
cwtl
jo
mov
scas
xchg
jbe
in
pop
jmp
pop
cli
push
xchg
daa
fdivrp
popf
mov
cmp
push
call
sub
mov
sbb
popa
xor
clc
mov
mov
adc
jg
rorl
lea
inc
sub
jnp
push
pop
mov
shll
dec
data16
loope
xorb
mov
lea
sbb
mov
lret
cmp
dec
stc
cmpsb
mov
enter
mov
aad
inc
xor
pop
sar
or
lea
mov
cld
add
daa
pop
cmp
das
aaa
int
nop
movsl
dec
ret
subb
xchg
inc
jns
out
inc
push
jno
xchg
and
inc
outsl
mov
and
in
sahf
lret
dec
dec
sbb
pop
sbb
cli
dec
jp
dec
inc
mov
enter
sub
movsl
mov
lret
sub
or
or
mov
push
rorb
aam
scas
ret
add
out
adc
addb
arpl
xchg
adc
popf
repz
inc
fdivrp
flds
test
dec
pop
rcrl
cmp
mov
fidivrs
adc
lahf
mov
xchg
jb
incb
rclb
daa
in
add
add
cmpsb
sahf
cltd
dec
fbld
jmp
fdivrs
push
imul
mov
sub
add
loop
mov
popf
xor
scas
mov
mov
pop
mov
loope
les
stc
push
sbb
or
inc
add
mov
roll
lea
adc
or
add
cmp
adc
xlat
cwtl
fld
or
dec
test
or
add
add
gs
lock
jb
test
js
popa
out
sbb
ss
ja
push
sbb
movl
mov
call
fiadds
scas
in
mov
jecxz
rol
fiadds
sbb
mov
aaa
aad
stos
xchg
sub
xchg
jmp
arpl
push
cwtl
cmpsb
ss
xor
push
icebp
xchg
fistpl
xor
mov
mov
mov
aas
test
shrb
sti
mov
and
addl
in
lcall
scas
pop
out
cld
daa
outsl
jb
and
call
and
subl
add
cltd
movsb
xchg
inc
jnp
jno
or
outsl
loop
push
push
bound
cld
fstpt
iret
data16
dec
mov
sub
sbb
mov
loop
sub
sub
push
out
or
jnp
mov
lret
nop
xor
xchg
shrl
cmp
test
inc
lahf
and
jp
lea
js
xchg
enter
sub
jbe
push
add
adc
dec
and
dec
dec
fwait
mov
or
ficoml
xlat
mov
or
lods
les
dec
adc
popf
and
out
jl
lods
jo
adc
repz
imull
lods
stos
push
xor
xor
or
nop
adc
mov
data16
movsl
jecxz
mov
mov
jl
adc
mov
sub
mov
test
inc
mov
popa
sbb
ljmp
adc
mov
and
outsl
cmp
adc
into
test
sbb
scas
cmp
sub
ja
mov
xor
push
inc
and
test
xchg
and
and
jg
lcall
inc
pop
popf
mov
mov
xlat
loop
mov
push
jae
iret
mov
inc
lock
pop
pusha
testb
mov
es
push
inc
cmpsb
or
and
add
pop
adc
imul
xchg
inc
pop
jecxz
adc
adcb
xchg
clc
jecxz
mov
cwtl
pop
imul
sub
pushf
cmp
inc
stc
jo
adc
es
das
flds
dec
roll
into
cmp
ds
in
cs
push
dec
loope
cmpsb
rcrb
imul
mov
lret
mov
sar
and
mov
inc
cmp
cli
stos
dec
int
xor
dec
xor
xchg
cmc
decb
int
fistpll
adc
push
pop
imul
rorb
add
fxch
fstl
pop
dec
test
sbb
jle
xchg
aaa
fsubl
pop
push
cmpsl
jbe
pop
xchg
jae
jno
cmp
mov
lock
arpl
and
adc
add
xchg
push
shlb
outsb
mov
mov
push
das
stos
xchg
xchg
mov
or
inc
cmpsb
or
cmpsb
ds
bound
js
sbb
lods
xchg
jmp
dec
adc
push
cmp
add
jl
push
adc
or
scas
and
lds
sarb
js
or
cmp
push
mov
andl
jecxz
adc
arpl
pop
stc
jb
pushf
loopne
imul
cmpb
fidivrs
das
mov
xor
into
cmp
mov
and
popa
cmp
push
lcall
test
jle
nop
dec
hlt
add
and
mov
sbb
jae
test
movsb
mov
pop
sti
aas
mov
sub
mov
das
int3
in
mov
adc
or
icebp
xlat
pop
jp,pn
pop
xchg
xchg
mov
dec
jno
or
add
iret
cmp
pop
pop
jnp
lea
lret
in
xchg
lods
movsl
loop
and
mov
mov
cmpsb
xchg
mov
scas
push
repz
push
aas
mov
pop
sbb
pop
stos
les
mov
insb
arpl
jg
push
shlb
push
gs
inc
or
les
mov
insb
lds
pop
jnp
daa
cli
xor
pop
shrl
xchg
out
ficoms
arpl
push
mov
jo
xchg
xlat
in
sbb
mov
mov
mov
leave
lahf
mov
gs
jecxz
mov
jbe
int
scas
mov
aad
aad
jae
pop
ret
cmpsb
sub
mov
mov
jae
pop
adc
aaa
inc
sti
lds
rclb
xlat
jnp
add
push
push
sarl
jne
push
bound
push
cltd
inc
cmp
int
and
fcomps
pop
inc
jecxz
xor
sbb
pop
jne
sbb
sbb
xor
outsl
jo
jp
cmc
xor
scas
lahf
push
shll
xor
cmp
push
js
mov
push
lret
in
jle
inc
push
sbb
cmp
jl
in
sarb
ds
xchg
mov
xor
mov
sahf
movsl
imull
xchg
mov
leave
movsb
testl
pop
insb
inc
cmpsl
jb
fists
mov
jb
sub
lret
pop
iret
das
imul
lds
enter
leave
sbb
out
xchg
inc
std
fcoms
loopne
roll
rorl
repnz
push
pavgw
dec
fisttpll
or
push
lods
and
loopne
mov
insl
gs
xchg
rorb
jmp
adc
jae
xlat
sbb
mov
rcrb
sbb
dec
pop
xchg
fdivs
hlt
jg
xchg
insl
aaa
add
add
movsb
mov
dec
test
daa
je
fimuls
je
cmpsb
and
ljmp
or
adc
out
loope
mov
ret
mov
inc
mov
pop
icebp
mov
jno
push
mov
jae
jnp
movsb
lea
mov
jl
jbe
insl
frstor
add
cld
fistpl
mov
jae
pop
in
inc
repz
mov
adc
movsl
mov
into
pop
sub
xor
xor
loop
or
sbb
cmpsw
addl
notl
inc
pop
cmpsl
sbb
rorl
jo
add
mov
mov
and
fadds
mov
xchg
jmp
test
dec
je
jo
and
cs
enter
and
and
scas
pop
cltd
ret
gs
vcvttss2si
push
sub
dec
das
shll
jnp
test
mov
mov
mov
xor
pop
loop
scas
xchg
and
out
out
sub
or
subl
sub
xchg
es
loope
incl
jg
xor
push
and
adc
pop
push
addr16
scas
les
loopne
mov
call
and
test
xchg
dec
sahf
jo
lods
scas
aad
and
xchg
mov
mov
dec
ss
imul
jle
sbb
xor
aaa
jmp
pop
pxor
xor
lcall
int3
shll
inc
in
mov
ja
fsubrl
push
and
lret
lahf
out
popa
mov
in
push
aad
ds
mov
mov
loop
js
add
jno
jo
rcrl
shlb
inc
popl
push
rcl
pop
data16
aas
and
add
idivl
bound
out
cmp
add
loop
scas
adc
fsubs
enter
jecxz
mov
pop
mov
jl
adc
jge
imul
fwait
mov
stos
loopne
pop
push
mov
cmp
jbe
popa
inc
out
ss
add
inc
sarb
lds
call
dec
mov
dec
popa
and
dec
lods
jl
call
repz
shll
jne
and
jmp
jns
add
mov
and
push
lods
hlt
mov
and
and
out
ds
pusha
jnp
push
and
jg
pop
jmp
mov
pop
push
aaa
shll
fwait
nop
imul
sbb
das
je
mov
jb
out
stos
in
das
sbb
test
cmp
out
adc
addr16
lock
mov
pop
push
xor
dec
fisttpl
cmc
std
mov
arpl
lods
mov
mov
mov
pusha
jge
push
sbb
and
lret
and
bound
lods
adc
gs
or
das
push
xchg
in
or
xchg
sbb
scas
sub
testb
jns
jnp
or
mov
pop
cmp
rol
fbstp
dec
test
mov
outsl
xchg
pop
push
ljmp
les
mov
fldl2e
xor
push
movsb
sar
scas
dec
xchg
rcrl
pop
movl
rcl
jg
enter
mov
xchg
lods
push
lcall
pop
pop
nop
mov
push
sbb
inc
mov
out
fiaddl
stos
je
lret
movsb
inc
das
mov
mov
rclb
fimull
daa
shr
push
pop
pop
gs
clc
fstp
out
sbb
sbb
ss
push
sti
or
dec
xlat
fnstcw
and
mov
rorl
bound
sub
mov
out
mov
andl
mov
dec
inc
adc
jnp
scas
icebp
xor
mov
into
sub
call
dec
pop
mov
mov
in
push
pop
or
mov
cmp
subl
repz
adc
cmp
mov
push
imul
pop
shll
add
je
or
stos
jmp
jo
inc
sbb
jno
mov
lea
ret
gs
push
clc
jmp
pop
repz
test
divb
rdtsc
push
in
gs
mov
mov
out
sbb
dec
aad
out
insl
dec
icebp
popa
mov
insl
jo
mov
fdivs
imul
jp
push
push
jecxz
ret
pop
iret
push
mov
push
mov
push
push
jo
lcall
cmc
mov
pop
testl
mov
shlb
xchg
ja
inc
mov
pop
stos
lahf
clc
pushf
out
cli
dec
iret
ds
cmp
and
stos
sub
fcmovnbe
stos
pop
jb
les
shll
cli
outsb
mov
mov
xor
and
call
add
sub
mov
mov
imul
loope
popa
sub
sbb
sub
jp
jo
stc
pop
push
cmpsl
push
sub
inc
iret
mov
sarl
pop
les
repz
push
test
jge
dec
leave
daa
and
add
in
out
movsb
repz
aad
mov
lea
xchg
sub
repz
dec
popl
cmp
fs
mov
daa
sub
aad
jo
fcompl
push
adc
lret
jnp
mov
cltd
div
leave
push
hlt
mov
adc
stos
jnp
data16
xchg
mov
call
xor
and
sub
inc
mov
je
std
jecxz
dec
scas
push
insb
ret
out
pmaddwd
mov
dec
sbb
mov
testb
jae
and
pop
xchg
dec
mov
int
outsb
daa
and
add
clc
shlb
sahf
enter
dec
pop
xchg
mov
add
jno
jbe
insb
rcrl
or
cwtl
add
and
cmp
loope
mov
dec
sahf
mov
inc
sub
xor
fimuls
outsb
xor
jg
ret
repz
jp
jl
pop
cwtl
cmp
movsl
adc
call
mov
imul
sbb
iret
mov
dec
cmc
sbb
int
mov
xor
lods
mov
outsb
rcll
mov
sub
int
popf
aam
sarl
ss
mov
ficomps
push
inc
push
clc
cli
and
outsb
rorl
add
pop
push
or
push
jl
ret
jae
loope
and
adc
sub
jns
xchg
push
push
insl
or
xchg
pop
sub
pop
push
inc
mov
data16
movsl
cmc
xlat
das
filds
mov
adc
rorb
arpl
in
pop
in
cld
int3
push
push
or
repz
ss
movsl
jbe
push
jg
sbb
adc
xor
and
mov
xchg
sub
mov
iret
lds
inc
jecxz
or
fdivrl
or
nop
push
stc
pop
add
jns
push
xchg
arpl
jp
jae
out
out
xor
fildl
imul
add
fs
pop
xchg
sub
cmp
in
int
addr16
sbb
lods
cmp
dec
push
jecxz
push
mov
orb
scas
out
cmp
lahf
push
sbb
sub
aas
js
int3
scas
mov
scas
stc
mov
or
xorl
push
add
push
loop
sbb
pop
mov
dec
pop
xlat
sti
out
ljmp
pop
dec
repz
call
mov
dec
pusha
push
nop
test
jge
mov
jl
cmp
stos
addr16
jne
add
out
inc
mov
int
fdivrl
out
jecxz
ss
cmp
jp
mov
pop
jmp
jecxz
mov
push
mov
xchg
aas
or
imul
push
adc
xor
out
sub
std
mov
push
mov
daa
pushf
jb
stos
push
dec
push
lret
cmp
data16
out
out
push
dec
pop
and
icebp
mov
sbb
je
out
pop
bound
jecxz
push
negb
enter
or
sbb
cmp
mov
pop
not
es
pushf
sbb
push
lret
sti
push
push
sbb
jg
sarb
or
pop
cld
pop
mull
inc
lods
ret
daa
mov
adc
dec
dec
inc
or
es
mov
push
adc
cltd
das
jae
in
icebp
pop
arpl
das
sbb
cs
mov
add
add
push
add
int3
aad
sbb
cs
insl
sti
and
dec
outsb
mov
in
in
add
cwtl
or
ja
adc
adc
cmp
repz
insl
jns
addr16
sub
das
cld
daa
loope
xchg
cmp
dec
mov
dec
call
mov
dec
xor
out
jbe
pop
jmp
ljmp
xor
into
mov
les
add
xchg
movb
cmpsb
sbb
jge
repz
aam
inc
xchg
xlat
cld
js
test
mov
push
sub
jno
lods
and
and
dec
sbb
jno
rclb
inc
xchg
repnz
xor
rcl
cmpsl
jns
push
mov
fwait
dec
std
roll
adc
aad
push
icebp
clc
jnp
movsb
cmp
arpl
aam
fsubrl
add
add
dec
fcompl
pop
pop
gs
sbb
jns
ds
out
out
xor
aam
dec
xchg
aad
xor
jno
int
jge
add
lret
in
into
aam
into
mov
cli
jg
popf
dec
add
shlb
add
imul
cmpsl
mov
xor
xchg
add
fwait
mov
or
mov
lret
aam
jmp
dec
lea
inc
xor
inc
and
mov
xor
jmp
xor
setp
unpcklps
dec
push
orb
jg
adc
or
inc
loope
ret
add
aas
add
add
fsubl
mov
fs
dec
cmp
mov
push
cmp
sahf
dec
xor
mov
push
data16
aaa
pop
adc
pushl
jns
sbb
ret
mov
xor
and
xor
hlt
stc
pop
inc
pop
inc
mov
hlt
push
ret
inc
xchg
xor
jbe
cltd
jg
pop
xchg
jmp
cwtl
inc
jl
aam
sbb
outsb
xchg
xor
push
bound
mov
scas
dec
xchg
jg
and
dec
jp
stos
xchg
cmc
jmp
push
out
stc
testb
gs
lods
sbb
cmp
mov
idivb
pusha
or
xlat
jo
and
pusha
js
add
dec
outsl
and
and
sbb
sbb
mov
add
repz
dec
jae
and
sarb
in
clc
or
dec
popf
andl
aaa
fwait
pop
sarl
int
push
push
mov
popa
icebp
mov
lods
and
repnz
les
xchg
inc
adc
xchg
dec
dec
add
pop
cld
sahf
add
ds
scas
aaa
xchg
dec
lahf
in
rcll
and
and
fprem
repnz
cmpsl
inc
cmp
or
mov
cmpsl
dec
xchg
cmp
test
out
pop
sub
mov
mov
stos
push
call
pushf
cmp
jne
push
out
clc
cmp
repz
jecxz
test
std
pop
mov
xor
std
fimuls
or
inc
and
fsubl
xor
mov
sub
or
negl
aam
jno
cld
jg
fs
sbbb
sub
add
hlt
sub
fisttps
mov
jbe
sarb
mov
jp
pop
int3
jl
arpl
jecxz
add
test
imul
add
arpl
sbb
mov
or
arpl
fisubrs
das
sbb
out
mov
fisubs
popf
pushf
test
push
pop
test
fucom
push
mov
ja
or
insb
and
push
pop
scas
fcomip
jnp,pn
xorb
popf
pop
mov
dec
fidivrs
mov
out
rcll
inc
repz
pop
test
popa
pusha
jl
push
insl
sub
insb
xor
dec
adc
mov
cmp
adc
fwait
dec
jb
jbe
sub
xor
lea
xrelease
sbb
clc
add
mov
pop
xor
cld
or
vmaxpd
loop
lods
js
or
mov
sub
fmuls
jmp
in
subl
fnstsw
gs
dec
xor
popa
and
or
imul
stos
sbb
mov
pop
out
mov
ret
xlat
pop
dec
pop
lods
ja
mov
sbb
call
idivb
or
in
cmp
test
mov
cld
xchg
or
scas
sub
add
dec
push
push
jns
mov
xchg
mov
adc
xchg
push
pop
and
adc
xchg
sbb
nop
push
mul
sarl
loopne
test
pop
inc
xchg
mov
jp
sahf
inc
jns
and
adc
dec
push
ret
test
sub
es
into
sti
test
push
std
incb
stc
ror
popf
sub
xchg
aam
movsl
xchg
inc
xchg
adc
cmp
test
push
add
sahf
test
and
jl
inc
gs
rorb
out
nop
decb
jmp
add
call
xor
cmpsb
jne
aam
out
aas
and
pop
push
adc
dec
imulb
addr16
adc
test
pop
js
pop
lahf
enter
push
scas
in
xor
fisttpll
je
lret
loop
mov
cli
jle
out
scas
iret
ja
fbld
cmpl
push
repnz
jo
jmp
repnz
mov
in
add
fsubl
push
sar
cmpl
popf
adc
cmc
mov
push
scas
jmp
aad
iret
dec
mov
cmp
xor
xlat
xchg
and
xchg
push
out
xchg
pop
push
fs
fidivl
pop
cwtl
sti
mov
add
adc
cmp
stos
addr16
lahf
xor
mov
push
adc
lcall
add
std
mov
sub
int
in
cmpsl
rolb
mov
cmpsb
daa
xchg
ror
or
call
repz
sub
cld
test
xchg
jmp
ds
test
inc
inc
xchg
xchg
pop
loope
nop
jmp
int3
out
dec
sub
ja
jbe
mov
lods
mov
aam
out
jmp
jl
stos
flds
or
arpl
push
daa
dec
mov
outsl
mov
jo
inc
lods
fistpl
or
dec
ret
rorl
lret
jg
add
lret
leave
inc
mov
lods
sub
mov
mov
adc
outsb
or
into
dec
xor
push
insb
ljmp
aad
cmp
pop
rcll
ret
repz
in
mov
sbb
sub
test
xchg
nop
xchg
imul
sbb
out
pop
in
call
aam
mov
pop
push
xor
and
dec
dec
jnp
mov
adc
stc
fildll
jl
imul
sbb
data16
insb
sbb
inc
sahf
mov
rolb
jg
gs
push
add
inc
leave
mov
jp
jle
mov
dec
push
test
in
pop
mov
pop
and
jmp
clc
divl
jp
xor
aaa
lret
mov
cltd
iret
shlb
dec
popf
xchg
shrb
push
addr16
shrb
mov
inc
and
cmp
scas
loope
clc
fiaddl
mov
test
inc
xor
ja
cmpsb
insl
rolb
jecxz
andb
sub
or
ds
add
test
scas
lock
cmpb
jmp
inc
lods
sahf
add
xchg
ss
orl
sbb
and
out
push
mov
dec
movsb
add
pop
sti
mov
sbb
xor
and
push
push
cmp
repnz
repnz
push
cmpsb
pop
xor
jbe
cmp
mov
push
inc
jecxz
std
js
pop
and
pop
mov
ret
movsb
jl
jmp
or
jbe
pop
mov
jno
out
outsl
push
dec
mov
pop
mov
ret
push
jo
push
mov
in
sbbl
into
push
cmp
and
mov
sarb
imul
mov
pop
std
das
and
dec
and
je
lea
sbb
mov
popf
mov
pusha
xchg
pop
outsl
loop
test
cmp
push
mov
sbb
mov
out
cmp
or
sbb
lcall
push
or
xchg
insb
inc
mov
in
test
jne
in
pop
mov
lahf
mov
out
lcall
jg
xchg
dec
mov
mov
mov
call
call
mov
push
in
adc
cmp
fdivrl
mov
lds
cmpsl
mov
fidivrl
push
mov
mov
test
sbb
js
clc
fidivrl
imul
testl
push
out
sub
jo
mov
ljmp
iret
mov
stos
sahf
and
or
das
cmp
pop
lods
sub
push
sarb
or
mov
and
mov
mov
mov
js
fwait
pop
push
cs
lcall
xor
sbb
inc
push
jo
or
mov
and
xchg
sbb
loop
adc
jp
jecxz
dec
xchg
aad
sahf
and
mov
fwait
testb
xlat
aad
mov
mov
mov
lods
jle
aad
hlt
xor
adc
or
mov
pop
sub
inc
jne
xchg
adc
xchg
mov
popa
fmull
cli
insb
mov
cmp
jg
lea
inc
in
js
push
cmp
xchg
lds
xor
pop
pop
mov
leave
or
leave
sub
or
mov
sahf
pop
mov
loop
xchg
sub
cmp
js
sub
inc
mov
in
mov
mov
iret
xchg
ret
and
nop
outsb
aad
jne
stos
sahf
andb
inc
loop
pop
movsl
xchg
pusha
in
mov
out
cmp
push
sahf
adc
test
jae
enter
add
mov
cmc
mov
shr
or
sbb
aas
jbe
pop
call
cli
das
inc
mov
jle
push
sub
sarl
cmp
iret
cmp
xor
push
nop
scas
sub
xchg
sbb
rcr
cli
dec
dec
dec
cmpsl
cltd
aas
jnp
insl
in
ljmp
testl
fcomi
jle
jmp
imul
xchg
aad
fsubrs
inc
pop
es
cmp
mov
push
into
mov
and
inc
sti
out
cmp
inc
inc
iret
push
mov
pop
into
ds
nop
jg
adc
xor
ret
xchg
sbb
inc
dec
sbb
and
cmc
lcall
jge
fs
add
dec
adc
jb
shl
mov
cmp
jb
mov
dec
subb
loop
add
and
push
mov
roll
ret
addl
push
shl
pop
xor
mov
lahf
insb
adc
add
pop
push
xchg
and
sar
sbb
and
push
shlb
jno
adc
sub
adc
sarl
push
sub
pop
or
xchg
jp
pushf
dec
psadbw
aam
adc
divl
mov
inc
mov
cmp
je
repz
mov
jle
jg
sbb
aaa
divb
inc
mov
loope
mov
test
sbb
negb
sub
sbb
pop
rorb
mov
stc
push
mov
jae
ret
fldenv
xor
add
add
inc
test
out
cmp
out
ja
cltd
fstl
in
add
inc
ret
inc
flds
mov
mov
add
xchg
cmp
test
shrb
sub
clc
les
and
fs
dec
inc
mov
sbb
xor
mov
sub
outsb
jbe
clc
je
mov
dec
ja
mov
outsl
jp
neg
lcall
pop
rorl
fadd
dec
addr16
dec
cli
test
in
js
xor
xchg
and
icebp
sub
cmp
push
test
stos
repz
sahf
aaa
and
adc
lods
andl
jne
arpl
push
sti
lods
mov
adc
into
iret
nop
mov
jne
cwtl
addb
mov
je
loopne
in
or
xchg
adc
inc
mov
push
imul
aaa
fldenv
inc
mov
adc
int3
mov
adc
ds
or
xchg
inc
cmp
inc
movsb
ja
int
or
in
rcrb
jl
outsb
push
lahf
test
ret
and
push
xor
aam
clc
lock
nop
sub
std
repz
and
cli
outsb
test
or
lock
mov
jae
mov
mov
in
xchg
xor
loope
push
cmpsl
sarl
push
les
xor
dec
or
aad
xor
push
inc
dec
sbb
xchg
add
xlat
pusha
es
cmp
dec
jne
jbe
mov
adc
pop
popa
out
pop
jne
fisttpl
mov
popa
test
aas
out
dec
sub
push
sbb
mov
mov
fstpt
xchg
cmpsl
add
aad
jecxz
sub
iret
sahf
ja
jae
sbb
adc
mov
pusha
dec
adc
sub
rcl
push
cltd
push
dec
in
hlt
push
int
pop
es
out
cmp
sub
mov
addr16
and
iret
mov
xchg
push
mov
jle
addr16
cld
mov
adc
pop
cmc
xorl
enter
sub
lret
ljmp
cmp
in
aam
arpl
cwtl
jo
in
or
pcmpgtb
fisubrs
lds
test
mov
dec
lcall
lds
shrl
pop
jnp
out
sbb
scas
or
push
test
pushf
adc
dec
xchg
aaa
and
or
sub
xchg
jmp
push
inc
xor
lret
adc
outsl
ror
add
add
pop
lds
sub
xchg
push
int3
dec
mov
add
aaa
faddl
fdivl
sbb
sub
add
xchg
sbb
sub
push
cmp
pushf
jo
mov
jp
jbe
sub
divl
mov
scas
sub
addr16
or
dec
stc
xchg
repnz
or
cmc
cs
dec
mov
sub
rorl
outsl
mov
sbb
jne
loope
and
inc
out
or
cmp
mov
mov
stos
cli
mov
inc
xor
dec
pop
adc
dec
jge
dec
dec
icebp
cmc
sti
aad
mov
add
and
movsl
fists
add
and
sbb
adc
xchg
out
dec
jge
dec
push
nop
add
int
and
inc
cmc
add
cmp
addr16
test
mov
sbb
lods
mov
mov
aas
orl
xor
shll
xchg
lds
fwait
lret
sahf
aas
inc
insb
sahf
ja
mov
call
loop
ss
dec
mov
pushf
pop
dec
jnp
dec
arpl
xchg
mov
pop
and
or
lret
cmp
clc
sub
dec
rcl
mov
js
lret
aad
dec
inc
dec
or
mov
dec
xchg
mov
pop
cld
int
fisubl
cmp
push
mov
xchg
iret
add
call
and
call
stc
inc
or
stos
dec
int
sub
push
btc
push
jmp
jno
fidivs
out
out
mov
sbb
roll
insl
pop
xor
mov
cmp
push
mov
mov
nop
mov
dec
fisttpll
inc
dec
pop
sti
jmp
cltd
push
je
outsl
out
pop
lret
jl
adc
dec
mov
pop
arpl
imul
aaa
ss
pop
jl
mov
outsb
inc
scas
cmpl
jnp
cld
negl
dec
or
iret
arpl
mov
adc
jns
jp
in
jp
mov
xor
fstps
pop
fistps
lds
lea
pushf
xor
jg
pushf
mov
xchg
stos
les
push
bnd
fsubl
add
call
dec
xor
mov
addl
andl
cmpsb
cwtl
outsl
xchg
call
inc
lahf
pop
in
xor
push
push
fistpl
push
aaa
movsb
mov
lods
popa
out
das
fiadds
ds
dec
mov
xchg
sub
and
dec
mov
insb
xor
inc
mov
or
dec
jge
xchg
xchg
push
scas
in
es
dec
and
fdivrs
in
adc
nop
mov
mov
lcall
or
mov
lods
pop
inc
dec
and
fisubrl
mov
je
push
rcl
jbe
out
push
popl
push
pop
jns
sbb
andl
and
xor
pop
or
es
inc
insl
int3
cmovp
stos
adcl
add
mov
xchg
mov
out
sub
jmp
insb
aaa
cltd
fsubrl
adc
sub
sub
arpl
xor
js
adc
adc
push
lea
mov
inc
xor
nop
gs
mov
pop
out
stc
cli
sub
sub
movsl
push
xchg
push
mov
nop
mov
nop
push
daa
push
fildll
adc
add
inc
fsubs
sub
add
jo
mov
out
xchg
jae
xchg
aas
enter
and
add
mov
sbb
ja
into
cwtl
mov
inc
mov
rcl
sub
push
push
shrl
inc
mov
jecxz
pop
cmp
inc
rorb
cli
sbb
imul
jmp
mov
stc
shl
or
int
and
sub
gs
pop
pop
mov
cli
xchg
sub
cmp
add
test
std
cld
repnz
std
nop
insb
mov
call
out
daa
addr16
mov
mov
scas
adc
cs
push
loop
lods
jge
and
lahf
lret
int3
jmp
outsl
pop
lock
stos
cmp
sbb
std
xchg
xchg
xchg
movsl
dec
jl
scas
decb
gs
sbbb
incl
xchg
out
pop
xchg
pop
mov
in
pop
les
add
jbe
popa
mov
add
pop
outsb
add
inc
xor
pushf
scas
movsb
loope
repnz
adc
gs
into
pop
enter
mov
popa
ret
jg
mov
ret
inc
pop
jg
xlat
add
jl
jb
sahf
xlat
xchg
nop
les
add
sub
cmp
fisubl
or
ret
mov
sub
xor
mov
push
shlb
loop
outsl
add
push
and
insl
stos
movsl
aaa
adc
pop
dec
mov
mov
rcl
es
stc
push
in
pop
jp
loopne
xchg
arpl
xor
lock
popf
mov
xchg
or
fwait
push
xchg
notl
repnz
int
out
aas
test
icebp
loopne
and
mov
mov
adc
jle
imul
stos
push
lock
and
cmp
out
stos
sub
cmpl
sarl
lods
pop
xor
pop
pop
push
leave
dec
sub
test
sbb
aad
in
and
adc
cmp
xchg
cwtl
mov
dec
push
dec
stos
push
push
loop
out
xor
sbb
inc
sub
mov
push
mov
mov
into
insb
sub
iret
push
xchg
add
pop
cli
push
shl
aaa
int
aas
hlt
call
inc
push
fdivl
fwait
sbb
lret
push
cmc
jmp
icebp
inc
xchg
lahf
enter
pop
sub
mov
lahf
pop
xor
in
mov
adc
xor
lds
mov
setns
test
fsubs
add
sub
out
push
stos
das
call
or
and
out
hlt
ficoms
lret
inc
push
add
cmpsl
sbb
or
sbb
inc
mov
jns
pop
lods
xor
dec
mov
xchg
lret
pop
sub
push
or
xchg
sahf
jl
test
leave
imulb
mov
xchg
inc
ds
pop
jge
gs
sub
cmp
prefetcht0
in
into
push
fwait
je
mov
pop
adc
add
aad
stos
nop
faddl
inc
cmp
lea
in
mov
outsl
mov
out
rorb
or
mov
fiadds
fwait
movsl
push
dec
bound
cmp
jle,pt
cmpsb
loop
sub
ficoms
xor
fs
pop
lods
enter
mov
sub
xor
subl
insb
mov
lock
pop
insb
mov
loope
loopne
inc
mov
mul
js
sbb
jmp
clc
fcoml
loop
sbb
out
dec
or
lods
cmp
ds
mov
xchg
pop
fdivs
mov
shl
mov
stos
xor
das
sbbl
xchg
or
and
or
mov
cmp
sub
dec
icebp
out
or
out
xor
sub
mov
ss
xor
jmp
xlat
cmp
dec
ds
test
pusha
lock
mov
dec
inc
loopne
je
mov
aad
fs
mov
outsl
jb
fs
fsub
dec
or
aam
mov
adc
scas
mov
push
jo
pop
mov
xchg
push
test
das
in
out
and
test
mov
cmpsl
pop
stos
loopne
pop
sbb
inc
sarb
jl,pt
int3
xor
jmp
aad
pop
xchg
fsubs
push
and
lock
iret
test
mov
and
cwtl
xor
dec
and
pushf
mov
push
xchg
inc
frstor
add
push
jl
aam
dec
outsb
nop
sbb
push
lds
bound
adc
aad
insl
repz
mov
push
xchg
je
in
mov
mov
cmp
mov
and
popl
fcoml
xor
xchg
ds
or
mov
pop
mov
je,pt
shll
aaa
xor
xchg
xor
stos
push
into
push
pusha
mov
movsl
xchg
adc
jb
and
fisubrs
sub
ret
inc
inc
pusha
pop
and
outsb
addb
stc
cmp
jl
test
lds
ficomps
movb
repz
hlt
stos
mov
out
movsb
lahf
je
push
pop
data16
or
adc
mov
mov
fcmove
out
push
loop
fildl
mov
lcall
pop
in
add
sbbl
nop
movsb
out
pop
inc
addb
stos
inc
mov
push
mov
addl
cmpsl
or
ja
push
dec
dec
jo
push
das
jns
fstps
shll
pushf
inc
pop
mov
lock
aas
movsl
rclb
xor
in
lods
insb
sbb
fstpl
mov
outsb
xlat
test
pop
je
inc
repnz
sub
rcll
sub
mov
stos
pop
popa
jns
push
push
cmp
mov
outsl
iret
xchg
lock
sbbb
sub
push
pop
clc
movsb
pop
pop
adc
orl
ret
out
fidivrl
pop
out
mov
fdivl
lock
jne
pxor
shrb
dec
jbe
imul
jecxz
sub
filds
add
sbb
sti
inc
adc
jno
aas
adc
ret
xor
stos
sbb
roll
inc
pop
lea
xor
loope
rcll
sahf
mov
in
cmpsb
shlb
push
dec
jmp
mov
movsb
insb
sbb
jp
sahf
dec
cs
popf
add
cmp
inc
ret
push
cmp
popf
push
push
rorl
pop
sub
inc
shl
sti
sub
xor
adc
sub
sub
mov
clc
mov
and
fisubs
and
xor
jo
jmp
fcoml
icebp
out
repnz
fucomi
or
scas
rorl
jmp
and
int3
imul
xorb
iret
fwait
pop
js
jmp
xchg
mov
push
mov
sahf
test
into
fst
std
int
jg
xor
push
jae
movsl
lahf
and
rcrb
inc
out
sti
lret
or
adc
jns
or
lea
inc
fdivrl
mov
mov
adcb
inc
mov
cmp
cld
test
idivb
sub
mov
aaa
in
and
in
addl
mov
ret
mov
aaa
jmp
adc
mov
lcall
out
insb
test
dec
pusha
mov
mov
cmpsl
adc
mov
fsts
std
cmp
in
fdivrl
jge
mov
subb
mov
decl
mov
and
cld
sarb
push
add
out
pop
pop
sahf
xlat
and
jbe
in
push
pop
mov
pop
ror
jg
popa
sub
add
je
aaa
in
dec
adc
add
lahf
fistps
add
push
push
mov
andl
popa
mov
lods
cmc
and
sbbb
push
fnstsw
xchg
sbb
fdivrs
xor
jbe
fsubp
aad
popf
stc
inc
sub
mov
ljmp
loope
pop
adc
xchg
inc
push
mov
xor
rorl
dec
xchg
sarb
jmp
nop
mov
std
jns
pop
or
insl
jns
add
ljmp
dec
ficoms
in
dec
cltd
push
mov
sbb
and
push
and
test
imul
imul
cli
je
outsb
mov
rolb
cmp
leave
lcall
mov
jg
inc
add
adc
mov
das
inc
mov
cld
inc
jnp
mov
sbb
xor
pop
fsts
push
and
or
push
pop
lods
and
lret
insl
inc
lods
enter
adc
cmp
aam
ss
jg
aas
aam
push
pop
insl
sbb
outsb
cmp
sbb
loopne
xchg
inc
lea
mov
push
jecxz,pn
mov
out
ret
pop
mov
push
xor
add
pop
sbb
ja
sbb
mov
pusha
dec
std
movsl
adc
jg
dec
mov
das
scas
sbb
mov
push
mov
lea
push
inc
fs
add
pop
addr16
outsb
xchg
sub
sarl
mov
out
xchg
fsts
test
shll
pop
call
mov
pop
or
mov
pop
shl
lods
inc
xchg
dec
cld
mov
ror
jae
sti
mov
mov
mov
sbb
cltd
rorb
pop
and
xor
sbb
push
mov
lcall
in
icebp
mov
mov
xchg
fdivr
fiadds
jp
pop
sub
add
and
ficomps
xor
push
add
xchg
fists
pusha
mov
and
outsl
ja
fucom
xor
mov
pushf
sub
inc
aam
scas
ljmp
push
adcb
insb
mov
pop
push
inc
xchg
in
addr16
push
sbb
mov
lock
mov
scas
lds
decl
lret
stos
mov
push
lods
xchg
adc
ljmp
sbb
add
ffreep
jmp
arpl
sahf
in
pop
lahf
es
jg
and
dec
lahf
ret
js
popa
decb
fwait
lret
das
popf
xlat
in
fs
adc
jo
xchg
popf
inc
lret
mov
xlat
sub
ret
ret
mov
hlt
int
cmc
js
mov
mov
mov
fcoml
add
call
dec
jg
stos
xor
lahf
xchg
incl
icebp
fdivrl
hlt
and
xchg
sbb
insl
repz
nop
lcall
xchg
xor
push
pop
pop
data16
jmp
pop
jns
mov
fisubl
inc
hlt
std
insb
adc
mov
loopne
sub
in
stc
adc
addb
ret
imul
mov
mov
jmp
scas
shlb
dec
iret
call
sarb
lcall
fnstenv
dec
rol
or
and
lahf
push
or
imul
bound
sbb
mov
add
loopne
or
push
push
adc
push
pop
xor
loop
xor
push
daa
lret
movb
loope
cmp
movsl
push
ficompl
clc
insb
sbb
mov
int3
push
sets
and
pop
xor
adcl
mov
addr16
push
test
fs
stos
xor
cwtl
ret
jg
ds
mov
or
mov
jb
rcrl
iret
and
dec
rcrl
pusha
xor
ficoml
and
adc
ljmp
jg
loope
add
iret
sbb
and
stos
xchg
faddl
scas
inc
sbb
fldenv
mov
mov
adc
insb
imul
scas
outsb
cmp
es
fwait
dec
aam
or
sub
or
out
sti
mov
add
arpl
mov
cmpsl
out
jmp
xchg
xchg
std
mov
and
lea
lock
dec
pop
fstpl
add
mov
jle
sub
outsb
shl
dec
mov
inc
movsl
dec
jp
inc
mov
data16
sub
jbe
inc
cmc
into
xor
xchg
mov
push
fidivs
sub
outsl
iret
addr16
sub
loope
fnsave
lods
icebp
xor
jl
mov
iret
outsb
addl
cmpsb
mov
stos
pop
sti
nop
movsb
dec
xor
orl
or
adc
and
sbb
lds
and
ss
insl
out
sub
push
mov
jle
stc
mov
ja
xchg
pusha
loop
push
sub
jge
les
in
dec
xor
xchg
movsb
ja
add
dec
daa
sbb
xor
les
bound
push
dec
inc
fsubl
out
mov
sbb
repz
push
push
fimull
call
mov
nop
jnp
or
js
sub
data16
sbb
jne
jns
add
sbbb
es
clc
push
gs
mov
sti
int3
push
aaa
lcall
or
movsl
or
mov
fsubr
sbb
or
jne
addr16
push
or
push
fimuls
or
insb
jnp
and
int3
test
ficoms
icebp
addr16
cmp
mov
movsb
add
pusha
dec
push
int
addl
jno
cld
lods
push
push
popf
sbb
stc
sbb
jb
xlat
lods
stos
mulb
push
inc
mov
jmp
push
pop
xchg
imul
inc
inc
xchg
cmp
in
movsl
iret
add
jmp
imull
or
test
test
ret
jl
pushf
in
sbb
push
xchg
sbb
rol
push
cs
out
ret
mov
inc
sbb
adc
and
xlat
mulb
sub
xor
div
adc
xor
lcall
xchg
jo
mov
call
jmp
sub
jne
mov
out
in
movsl
popa
jmp
incl
inc
sub
mov
inc
sub
mov
push
fs
negb
cmp
repz
jo
ljmp
xor
sbb
push
ret
fnstenv
lret
mov
sbb
cmpsl
js
lods
pop
dec
jl
inc
jp
jb
pop
xchg
dec
mov
xor
adc
iret
xor
xchg
adc
cmp
and
push
ja
xchg
test
aad
mov
inc
sub
xor
sub
dec
scas
pop
sbb
cltd
inc
pusha
out
dec
and
dec
mov
addb
mov
inc
fcmovnbe
push
lods
jmp
mov
mov
popf
jae
addr16
in
fisubs
mov
mov
clc
or
pop
das
lret
cld
mov
mov
sbb
stos
push
xchg
test
pusha
push
push
pushf
jg
inc
ljmp
arpl
insl
xchg
inc
add
sub
mov
xchg
loop
pop
sbb
lret
mov
dec
cld
mov
xorl
int3
lods
inc
push
fsubp
pop
jmp
mov
cmp
mov
sti
arpl
sbb
sub
sbb
gs
aas
xchg
adc
xchg
stc
mov
push
ja
imul
gs
lock
push
add
stos
xor
mov
fisttpll
sbb
dec
push
jbe
ds
rclb
push
adc
xchg
mov
in
ljmp
pop
fwait
xor
aas
inc
std
adc
or
push
dec
xchg
popf
ficoms
ret
sbbl
decl
and
mov
lods
mov
xlat
sub
sti
jmp
or
jns
jg
call
ljmp
flds
mov
daa
icebp
xor
daa
jl
fildl
adc
test
xor
push
inc
out
cmp
pusha
lcall
sbb
jl
mov
imul
pop
iret
cmc
jge
ror
or
or
stos
dec
mov
xor
and
rcrl
daa
mov
lcall
dec
pop
out
mov
dec
sub
mov
mov
gs
push
pop
ja
mov
lods
daa
push
cmovae
enter
push
adc
loopnew
mov
loop
nop
sub
jns
mov
out
mov
rcrb
out
mov
aam
push
xor
addb
out
add
nop
shlb
dec
push
icebp
jne
push
pop
xchg
cmp
push
cmp
cld
aaa
js
inc
xor
and
in
idivl
pop
mov
push
sarb
xchg
push
in
js
popl
push
xor
je
push
out
pop
rcr
sbb
mov
movsb
repnz
add
sub
popf
mov
jl
pop
lods
pop
mov
sbb
inc
jns
mov
xchg
insl
jge
push
jg
mov
push
or
push
repnz
add
call
add
jg
mov
add
pusha
fiaddl
lahf
push
rcr
push
mov
mov
or
xchg
mov
scas
mov
int
mov
call
in
aaa
xor
lods
and
das
mov
or
push
inc
sub
or
mov
cmp
std
in
jg
sti
xchg
idivl
adc
sahf
add
or
stc
jns
jbe
cld
cmp
lret
adc
push
jl
pop
dec
clc
or
jbe
in
lods
or
daa
mov
dec
lods
rcrb
mov
pop
ficoms
mov
push
xchg
div
test
or
es
mov
das
test
clc
inc
push
fistpl
lret
mov
cltd
inc
and
jmp
pop
xlat
cmp
fs
push
repz
les
sub
fbld
xor
cmp
enter
xchg
xchg
mov
pop
movsl
outsl
xchg
mov
fisttpl
fstl
mov
mov
cmpsl
dec
mov
and
jno
xor
test
mov
add
imul
or
sub
pop
cmpsb
sbb
pusha
popa
push
dec
inc
call
sbb
dec
dec
xchg
cmpsb
inc
fstps
dec
iret
pusha
cmpsl
iret
rorb
fs
jge
test
mov
xchg
jbe
cmp
cwtl
xchg
xor
xchg
push
fsubrl
xchg
mov
bound
ja
daa
data16
sti
iret
ss
je
mov
jp
or
jne
xor
scas
fwait
jg
pop
pop
cwtl
pop
jb
sbb
cmpsl
sub
and
jle
push
xchg
mov
negb
jle
ret
in
enter
shrb
mov
xchg
ret
dec
cli
in
outsb
out
push
notl
das
lods
mov
dec
fwait
add
imul
jo
shr
jnp
lahf
dec
shll
negl
popf
dec
add
sub
stc
je
test
repz
jmp
in
inc
add
aad
add
push
adc
cmp
loope
add
in
sub
aas
in
out
ljmp
mov
mov
insb
movsl
pop
push
inc
jno
insb
int3
xchg
ret
mov
and
push
in
arpl
jg
push
inc
and
fsts
sar
ficomps
rorb
loopne
ss
add
mov
mov
and
jno
mov
mov
ja
sub
es
in
add
scas
ficoms
mov
test
daa
jg
sbb
and
jmp
push
jle
shlb
rorb
iret
int
je
sub
xchg
pop
jnp
jae
pop
jns
aaa
jmp
inc
out
mov
sub
mov
add
push
decl
lods
cmp
xor
test
and
or
mov
addr16
mov
add
js
fsubrl
in
jp
cmp
icebp
mov
xor
into
push
add
push
aam
scas
xor
xchg
scas
fdivrs
cmp
mov
jg
js
push
add
mov
mov
cmpb
jge
xchg
orb
jl
pop
test
iret
test
outsb
jns
insl
or
ss
or
out
int
dec
lods
cmp
enter
jle
mov
or
xchg
sbb
leave
adc
int
add
cli
xchg
adcb
xchg
daa
mov
lret
fmuls
dec
outsb
das
xchg
lea
pop
stos
dec
icebp
mov
or
push
outsl
add
adc
mov
repz
aad
inc
pop
push
les
dec
lods
push
icebp
xchg
hlt
mov
jp
mov
mov
insb
aas
inc
jno
mov
jecxz
sub
cmc
cli
push
fstpl
gs
push
cmp
mov
ss
aam
mov
clc
jecxz
cmpsl
call
add
flds
repz
repz
push
push
cmp
cmp
daa
push
push
test
xchg
jle
dec
push
les
int3
push
subl
loop
push
xor
mov
jae
scas
loop
xchg
sbb
test
push
daa
dec
lcall
jns
mov
daa
cli
lock
cmp
test
test
ss
sahf
adc
mov
mov
pop
mov
or
mov
in
jae
pop
jb
xor
push
or
pop
in
pop
inc
in
pop
jae
adc
outsb
push
xchg
cli
pushf
jmp
insb
xor
fimull
xchg
fnsave
sti
leave
sub
fisubl
or
dec
lret
mov
push
sahf
ss
sub
push
cltd
xor
pusha
in
pop
pop
test
xor
xor
mov
lds
pop
fbld
mov
cmp
pop
cmp
push
rorb
arpl
popa
jp
lock
nop
cmpsl
pusha
repnz
sub
mov
leave
jne
pop
icebp
cld
sbb
or
movsb
push
pushf
imul
adc
push
adc
xchg
cltd
mov
mov
xchg
xchg
test
jbe
adc
lock
add
mov
insl
aas
mulb
mov
test
aas
mov
movsl
cmpl
lret
push
aas
inc
test
leave
rolb
mov
xor
outsl
testb
loope
rorb
xchg
inc
xchg
test
ja
mov
aam
inc
jmp
test
add
je
scas
repz
adc
sbb
cmp
gs
dec
jnp
jle
call
push
xchg
dec
sub
mov
mov
cmp
lods
inc
fildl
add
andl
repz
cmpsl
or
xlat
xchg
cmp
cltd
icebp
jae
pop
push
add
sbb
cwtl
inc
lock
cltd
mov
and
popl
pusha
int3
pop
jo
push
jo
mov
cmpsl
jo
dec
ljmp
je
in
push
cmp
jge
cmp
pop
imul
les
add
jns
cmp
rcll
add
test
cmc
sbb
ss
lcall
lahf
ss
scas
arpl
pop
pop
mov
mov
jb
shr
xor
shlb
sbb
adc
lods
lret
push
stc
xchg
adc
jmp
in
and
jg
dec
in
sti
data16
aad
ret
mov
xor
int
pop
dec
sahf
lea
fcomps
dec
inc
lret
in
push
mov
and
inc
mov
lea
cli
pushf
pop
xchg
or
adc
cwtl
mov
mov
sub
xchg
adcb
mov
or
shlb
sub
jo
movl
mov
insw
xor
push
dec
lock
test
arpl
adc
iret
imul
cmpsb
or
sbb
fimull
fists
push
pop
sbb
mov
fidivrl
xchg
stos
repnz
add
mov
sub
cmp
iret
dec
mov
lods
test
pop
cmp
inc
xchg
push
hlt
xchg
mov
lock
xor
jge
dec
push
loope
and
icebp
dec
mov
mov
pusha
mov
in
fcompl
aaa
pushf
sub
pop
mov
test
dec
pop
mov
jecxz
push
daa
aas
add
cltd
jns
cmp
mov
es
sbb
scas
popf
xor
sub
out
out
leave
aaa
mov
mov
ds
sbb
mov
pushf
add
push
cmpsl
stos
cmp
pop
mov
inc
lret
cmp
loop
mov
sbb
add
negb
adc
ja
or
jbe
hlt
cmc
out
sti
shrb
mov
push
jnp
stos
or
nop
loopne
rorl
idivl
push
pop
inc
and
jle
cmp
and
test
enter
pusha
into
push
mov
inc
mov
or
cmp
add
mov
fidivs
jno
or
jns
pushf
data16
mov
sub
pop
lods
xor
inc
push
dec
lret
nop
inc
pop
lock
cli
add
sahf
je
sub
lds
push
loope
mov
xchg
in
inc
popa
mov
aaa
sti
je
sub
xchg
dec
stos
xor
test
sub
cmpsl
xchg
popa
sub
sti
lock
inc
ds
pushf
idivb
xchg
mov
cmp
clc
xor
jns
mov
mov
test
sbb
and
pop
loope
xchg
xchg
mov
repnz
mov
push
inc
xchg
cmp
or
inc
jge
add
inc
jno
movsl
dec
sub
jns
add
adc
test
push
stos
lods
imul
je
rclb
aad
dec
dec
lret
push
bound
in
test
lods
jmp
enter
imul
and
fcmovnb
addr16
negl
pop
sahf
sbb
mov
fstp
mov
and
mov
stc
mov
aas
inc
arpl
scas
pop
and
addl
repz
ficomps
inc
call
xor
out
jecxz
push
inc
xor
cmp
int3
sub
ss
popf
outsb
sub
imul
rolb
arpl
out
xchg
popf
xor
mov
xchg
inc
iret
xchg
add
cmpsl
insl
mov
cltd
in
aas
add
ret
mov
push
popl
fisubrl
imulb
push
add
ds
cmp
or
aas
test
mov
test
jp
cwtl
test
ficompl
popa
lret
out
lds
mov
lock
loopne
mov
push
scas
xor
mov
mov
jb
adc
adc
xor
dec
sub
jmp
dec
test
imul
shlb
aas
shlb
popf
lds
out
out
leave
dec
js
push
dec
sbbb
adcb
js
push
iret
lret
lea
adc
pop
iret
xchg
inc
xor
jns
dec
popf
cmp
add
loopne
push
jmp
xor
xor
mov
aam
scas
fwait
outsb
mov
mov
xchg
push
test
ud2
inc
push
into
fldenv
mov
int3
or
sti
add
pop
push
lret
and
shl
inc
call
pop
pop
pop
jecxz
adc
add
xor
scas
sub
add
leave
shrl
cltd
fidivs
cmp
jmp
cmpb
les
mov
pusha
inc
jl
dec
fidivl
jae
lock
lret
cltd
fsubrl
pop
xchg
mov
pop
lret
jecxz
jno
xlat
or
shlb
cs
fildll
jo
cs
imul
aam
jae
inc
aas
mov
jmp
rol
icebp
dec
jnp
adc
sbb
sti
mov
xchg
sub
pop
dec
dec
mov
dec
out
jle
sbb
sbb
iret
or
in
jge,pt
push
jle
jecxz
gs
mov
outsl
jecxz
adc
xor
mov
lods
sub
pushf
jmp
xchg
or
jns
and
sub
sbb
iret
sub
lods
sub
and
dec
lret
cltd
aas
loope
mov
jmp
cltd
sarl
mov
push
lret
pusha
nop
jb
int3
jl
int
sbb
je
or
inc
sub
xchg
mov
ret
fcom
data16
and
gs
lret
push
adc
adc
jb
ret
mov
jecxz
adc
add
inc
lods
xchg
cli
aas
pusha
xlat
and
fidivrs
popa
xchg
xor
pushf
shl
addr16
sub
lea
or
cmp
in
pop
lds
jne
lahf
mov
xchg
cmc
ljmp
mov
jmp
add
insb
out
push
sti
cmp
imul
sub
shll
cs
dec
or
insl
mov
in
call
pop
mov
aas
xchg
mov
xchg
lret
add
insl
jecxz,pn
and
sbb
xchg
jns
pushl
pop
sbb
jecxz
sbb
xor
or
ror
inc
int3
cwtl
hlt
dec
int
lea
adc
cmpsb
inc
fucomp
sbb
arpl
ja
push
add
or
pop
dec
int3
leave
repnz
stc
sbb
xchg
inc
rcrl
inc
and
and
and
and
or
sbb
bound
fwait
xchg
or
mov
dec
hlt
pop
mov
lea
fstpl
push
stc
dec
lods
cmp
icebp
shll
and
sbb
into
pop
addr16
clc
mov
std
cmp
in
pushf
mov
jbe
outsl
outsb
imul
xchg
mov
mov
stos
sti
out
aam
cmpsb
or
mov
into
inc
lret
adc
sti
dec
sub
ficompl
jno
sbb
hlt
cmp
or
sub
ja
sbb
decl
icebp
mov
xchg
shrl
popa
mov
insb
adc
add
mov
imul
arpl
rclb
mov
pop
out
fs
sbb
daa
mov
mov
or
mov
pop
pop
std
push
add
mov
outsb
out
cs
xor
inc
mov
incl
mov
add
pushf
in
mov
pop
xchg
outsl
add
xchg
inc
or
das
jl
fstps
inc
lods
add
dec
adc
xchg
or
sti
xchg
mov
imulb
mov
xchg
sbb
jb
jne
pop
lahf
mov
test
pop
in
and
push
sub
mov
xchg
xchg
xor
inc
aaa
cmpsl
mov
ljmp
es
push
mov
or
sbb
cli
dec
mov
mov
popf
sbbl
dec
and
push
jg
int
jne
cmc
sbb
xor
xchg
mov
mov
sbb
sar
addr16
jnp
lods
sbb
jp
imul
rol
cmp
in
in
xchg
fimuls
aam
outsb
and
setnp
cmp
fbld
lret
dec
sub
scas
adc
pusha
jmp
popf
out
xchg
ret
test
cmc
lock
jno
mov
popf
test
sbb
adc
ss
popf
jmp
lahf
mov
inc
test
mov
cmp
sub
jne
out
shl
push
mov
push
aam
push
int
fisttpl
mov
push
mov
jg
cld
loope
pop
scas
jp
xchg
push
xor
es
mov
jp
adc
mov
ret
mov
jl
jge
mov
daa
xor
mov
lcall
into
ds
sarl
push
pop
insl
clc
inc
out
xchg
sbb
mov
dec
ja
xchg
adc
or
add
pop
mov
jbe
repz
jl
mov
or
fmull
add
in
mov
push
xor
inc
shrl
fs
lods
cmp
inc
fsts
and
or
subb
mov
add
adc
jp
adc
cs
int3
push
or
int
imul
sti
pop
adcl
add
insb
dec
adc
insl
inc
mov
outsb
or
pop
stos
push
mov
and
jmp
insb
shr
clc
mov
movsl
cmpsl
lcall
les
inc
sbb
pop
loopne
jbe
loopne
cwtl
sub
std
imull
dec
add
cmpsl
dec
push
cmp
int3
sarb
mov
leave
xor
jns
adc
mov
cmc
mov
daa
scas
std
stos
test
and
out
mov
test
push
mov
jae
or
stc
pop
add
pop
stc
push
in
cmp
pop
mov
cmp
adc
push
fadds
jb
adc
xor
dec
sbb
fistpll
sub
testb
add
rcrl
pop
scas
dec
cs
xlat
aam
xchg
fidivl
aaa
push
mov
sub
add
pop
xchg
out
popf
out
dec
jb
push
icebp
push
xchg
mov
mov
cs
sahf
and
cmpb
rcpps
in
fcoml
push
sbb
mov
dec
les
cmp
fwait
ljmp
scas
jge
movsb
std
lahf
mov
ljmp
imul
mov
aaa
cmc
leave
dec
xor
iret
stos
sbb
out
mov
push
subl
xchg
jecxz
dec
mov
xchg
sarl
cmpsl
adc
sarl
adc
scas
leave
test
sub
aam
jnp
add
adc
xchg
mov
mov
xchg
sub
xchg
fldt
fmulp
adc
std
ret
mov
ret
into
dec
and
jmp
popf
pop
imul
mov
fisubrs
movsb
leave
jecxz
jnp
jbe
cs
cmc
std
adc
xchg
xor
je
aaa
daa
loopne
arpl
fdivrl
loop
andb
out
xchg
lea
jae
out
jle
xor
dec
out
mov
fimuls
fldenv
dec
mov
imul
fisubrl
sub
nop
jne
xchg
sbb
fiaddl
cmp
lock
pop
lahf
int3
in
dec
inc
xchg
jns
cmpsl
mov
sub
mov
jp
xlat
jne
ret
xchg
mov
xor
sbb
pusha
or
repnz
cwtl
test
sbb
orb
xchg
cs
adc
push
jle
sub
mov
cmp
fdivr
add
xchg
cmp
insl
in
xchg
or
fcoms
xchg
adc
mov
or
cmc
mov
or
or
sbb
jo
bound
mov
test
stc
push
pop
sahf
mov
sub
adc
cmpsl
xchg
add
pop
enter
add
aaa
div
cld
pushf
ss
push
dec
sub
sar
pop
inc
fldz
and
cmpsl
jno
or
lea
sub
cli
cmpsl
in
movsl
stos
pop
cs
xchg
negb
adc
cmp
dec
mov
rorl
mov
xor
mulb
lret
sbb
bound
push
loop
mov
mov
cmc
repz
dec
add
sub
pop
sbb
leave
in
cs
xchg
sbb
xchg
push
pop
or
or
into
fcomi
xchg
push
shlb
dec
dec
aam
repz
fidivl
sub
and
push
xorb
shll
pushf
clc
sbb
cmp
mov
in
daa
jne
cs
aas
cwtl
aam
andl
popa
lahf
mov
push
test
insb
cmp
adc
cmp
push
mov
insl
mull
xchg
or
mov
pop
insl
mov
inc
inc
jnp
aad
dec
pop
stos
ja
outsl
mov
stos
ss
mov
lret
ljmp
aad
sub
inc
pop
aas
lcall
and
int
xor
sbb
cmp
cmpsb
sbb
dec
not
push
cmpsl
cmpsl
aam
dec
mov
packsswb
out
rolb
add
fdivl
dec
xchg
sbb
push
mov
into
fwait
pop
lcall
mov
pop
test
or
scas
or
dec
mov
movsl
data16
sub
pop
mov
shlb
mov
cmp
push
fdiv
insb
mov
jnp
rcl
sysexit
sarl
dec
push
and
add
pushf
xor
xchg
daa
test
add
mov
mov
add
sbb
xchg
sub
xchg
inc
lods
and
mov
mov
mov
in
or
idivb
xchg
les
push
in
mov
dec
aad
in
mov
addr16
repnz
sti
test
xchg
adc
clc
icebp
push
out
adcl
adc
cld
mov
xchg
dec
daa
sbbb
jle
and
cmp
mov
add
lahf
push
lock
aad
lret
repz
aaa
loopne
sti
das
jp
xchg
test
mov
jae
or
ja
inc
add
add
inc
hlt
ret
xchg
push
mov
mov
stos
test
ljmp
enter
movsl
inc
repz
daa
dec
rclb
std
sub
ja
jge
or
sub
add
inc
and
lret
add
mov
out
cmpsb
insb
mov
push
pop
and
pop
data16
add
dec
jp
int
lods
cld
mov
data16
lret
gs
mov
fs
inc
ret
mov
call
insb
cs
ss
scas
fsubrp
rcr
out
sub
pop
pop
xor
out
fidivs
xchg
lret
call
pushf
insb
push
callw
jne
jae
cld
icebp
loope
jbe
adc
cmpsb
cmc
insb
in
dec
pop
in
mov
icebp
lretw
or
aam
and
jne
int3
or
sub
icebp
sub
xchg
les
repnz
adc
and
cmc
mov
dec
xor
adc
jbe
test
cmp
repnz
cmp
out
sbb
and
push
lock
ja
pusha
or
std
fwait
dec
sub
adc
call
lret
popf
repnz
lahf
negb
cmp
inc
fistl
mov
into
lret
repz
mov
or
ljmp
push
xor
cmp
fisubl
aas
test
pushf
out
inc
shrb
jg
cmp
cmpsl
adc
mov
sbb
lahf
sbb
mov
repz
and
rcl
or
add
push
sahf
jo
addr16
je
jns
push
ret
jbe
jl
or
pop
aaa
add
dec
mov
es
or
dec
mov
pushl
test
sti
jnp
popa
adc
add
scas
outsb
movsb
pop
int
into
jae
cs
ficoms
notl
lcall
ret
stc
mov
fisttpl
mov
mov
sti
loopne
sbb
movsl
push
test
ret
mov
jecxz
call
test
xor
roll
jle
inc
pusha
loope
push
lret
add
jbe
out
xchg
push
pusha
lcall
lods
adc
cmp
int3
jne
add
addr16
xchg
pop
mov
testl
shll
mov
add
jb
pop
sti
repz
adc
ror
fisubrs
push
pop
cli
int
sub
push
fimuls
sub
orb
jle
loop
push
dec
lock
inc
or
iret
repnz
cmpsl
notb
jns,pt
int3
scas
cmp
push
and
xchg
icebp
or
cmp
xchg
incb
inc
xchg
das
jl
sbb
xchg
inc
sti
and
stos
adc
inc
andl
xchg
imul
stc
bound
int3
shrb
hlt
or
call
sub
aas
mov
mov
test
test
dec
dec
ror
int3
mov
mov
jmp
sub
xor
inc
and
and
adc
fdivrs
daa
lcall
movsb
shll
je
movsb
mov
icebp
jmp
scas
inc
jg
gs
in
cmpsl
fsub
mov
dec
push
push
icebp
sub
and
outsl
pop
dec
cmp
xlat
mov
imull
ret
push
andl
add
movsl
ljmp
rorl
pushf
into
cmp
fxch
bound
mov
jb
cmp
xchg
sub
sub
sbb
xchg
enter
in
repnz
dec
dec
jne
push
or
mov
pop
dec
jmp
mov
out
mov
mov
mov
sbb
sarl
mov
repz
mov
xchg
icebp
sub
jmp
rolb
mov
cmp
stc
mov
push
and
xchg
xor
ja
xchg
gs
lock
cli
mov
mov
ret
lods
add
push
lods
scas
mov
fdivl
push
dec
push
mov
xor
push
das
inc
mov
lret
aad
sub
pop
dec
cwtl
jp
pop
data16
mov
jb,pt
xlat
push
pusha
xor
or
iret
push
push
mov
jl
fisttpl
incl
fldl
jg
xchg
add
cmp
pop
push
outsb
repz
loopne
jno
cltd
dec
fisubl
sub
jne
sbb
inc
icebp
cld
popf
outsl
aad
stos
lcall
inc
sar
int3
adc
xchg
cmp
test
and
test
and
repnz
shll
xor
dec
mov
cmpsl
sbb
cltd
adc
mov
fistpll
cmp
lock
aas
mov
xchg
fldt
sub
rolb
adc
mov
pop
push
ret
sarl
sbb
test
movsb
bound
mov
movsl
push
pop
cmp
sti
inc
fadds
iret
call
add
xor
loop
loope
loop
je
cmp
rcll
pop
cmp
add
lods
push
cli
pop
cmpsb
popa
jl
jecxz
loop
fisttps
dec
pop
aam
cmp
pop
or
mov
xor
inc
adc
scas
xlat
or
sahf
outsl
sub
and
cltd
and
insl
lods
cld
mov
stos
add
or
jmp
in
out
xchg
repnz
fsubrl
xor
sti
jmp
mov
cmpsl
adc
push
rcr
nop
push
sub
jns
scas
xchg
jp
push
dec
cmp
cmc
adc
loop
addr16
cmp
shrb
mov
inc
xchg
inc
add
push
cmp
lea
loope
xor
sub
cmp
or
sbb
add
test
dec
lret
lret
push
dec
popf
sbb
cld
movsb
sti
add
notl
imul
mov
mov
fwait
adc
sub
pop
push
call
jne
and
enter
pop
jecxz
inc
adc
cli
daa
inc
insb
out
jne
inc
out
ficoml
cmp
mov
cs
lods
subl
mov
rcll
jnp
cmc
mov
push
dec
or
mov
loop
rclb
out
cmp
mov
rcl
add
push
fbstp
or
pop
cld
dec
ficomps
daa
int
jecxz
inc
jmp
mov
popl
rorl
or
adc
mov
into
daa
rcl
dec
ret
or
inc
push
js
shrl
or
jno
out
cmp
lea
mov
jmp
in
pop
cltd
movsl
pop
mov
push
jmp
fs
push
and
repnz
fisttpll
out
jecxz,pn
cmc
loop
fsubrs
mov
or
les
je
test
pop
cmp
sub
ds
xor
cwtl
clc
frstor
cmpsl
insl
stos
push
movsb
fbstp
pop
and
mov
xor
push
jnp
sub
mov
inc
inc
cli
fcoms
rcr
push
jne
xor
shl
aaa
jo
jg
jmp
dec
dec
cmp
bound
lahf
icebp
push
fwait
mov
shll
sub
fimull
jg
mov
lret
test
mov
repz
rcrb
sbb
out
fcmovbe
mov
mov
sub
jno
js
xor
out
and
int3
pop
aad
pop
je
inc
shlb
mov
arpl
mov
mov
sub
xor
cmp
sbb
in
push
add
mov
outsl
cmp
lods
sub
dec
pop
sbb
sub
mov
dec
icebp
cwtl
out
test
aam
fs
add
dec
enter
add
push
cmc
inc
out
add
adcl
les
dec
loop
dec
mov
xchg
mov
dec
cmc
jb
dec
mov
pop
mov
jle
out
cmp
sahf
jnp
shlb
data16
jmp
aaa
sbb
or
mov
cmp
adc
je
rclb
mov
out
jmp
je
vsubpd
inc
inc
and
push
push
cmp
add
iret
add
inc
pop
xchg
pop
les
movsl
mov
clc
scas
popf
pop
cltd
cmpsb
ret
xchg
dec
movsl
mov
sti
testl
lcall
jo
cld
jp
pop
cwtl
jb
enter
xchg
or
insb
cmpsb
xor
arpl
push
in
or
scas
mov
xchg
pop
jmp
js
out
xchg
jg
cmp
pusha
inc
pop
pop
adc
jae
call
int
cmp
dec
and
fdivp
dec
sbb
pop
sbb
dec
mov
sarb
or
pop
cmp
jo
sub
push
aaa
imul
mov
add
pushl
out
into
cmp
mov
test
nop
dec
and
mov
into
adc
push
cmp
push
jb
int3
cmp
loope
adc
lods
mov
out
or
cli
sbb
clc
jns
adc
stc
nop
sbb
xorb
mov
ja
cli
or
jb
leave
jbe
nop
out
mov
cmp
push
sub
add
mov
mov
jmp
sub
xchg
xor
xchg
or
aaa
push
push
out
mov
xchg
pop
push
dec
xchg
and
bound
cmp
gs
std
or
ss
xchg
cwtl
pop
out
push
push
and
mov
jmp
add
fistl
movb
aaa
mov
or
or
or
adc
push
inc
pop
jecxz
dec
xchg
dec
mov
ds
imul
sub
jne
dec
je
sti
or
adc
lock
xor
pushf
adc
imull
pushf
jge
jmp
push
aad
ret
pop
out
dec
mov
and
push
dec
xchg
in
pop
popa
cmp
sti
cmpsb
mov
dec
and
jg
inc
fsubl
mov
push
push
repz
mov
mov
jae
andl
push
xchg
sbb
sub
push
shll
nop
sub
mov
jae
xchg
cmp
dec
push
cltd
xchg
pop
jge
inc
pop
lea
sbb
loop
adc
loopne
lahf
xor
mov
insl
xchg
ds
push
jecxz
xor
je
or
push
aam
cli
sub
in
adc
jno
and
mov
or
cs
pop
int3
push
out
pop
cmpsl
pop
pop
dec
mov
mov
and
mov
xchg
jl
sub
psubq
jae
sahf
or
sbb
nop
xchg
ds
pop
xor
jbe
or
shll
inc
xchg
das
scas
pop
mov
lcall
nop
or
sub
movsb
mov
xchg
test
add
xchg
clc
inc
js
cli
lahf
jl
push
jno
push
outsb
xchg
rcrb
in
add
divl
movsb
repnz
inc
mov
aad
xchg
fadds
iret
add
xchg
neg
repz
mov
dec
cmpsb
ret
fsubrp
push
xchg
cltd
in
sbb
dec
int3
push
in
jnp
dec
fldt
call
out
mov
and
popa
js
sub
xchg
stos
sahf
sbb
or
mov
add
les
cmpsl
pushf
nop
push
cmp
mov
ljmp
inc
mov
nop
out
xor
arpl
repnz
mov
popf
dec
sbb
jbe
pop
pop
sub
sbbl
xor
xchg
sbb
int3
or
scas
sub
sub
in
outsb
inc
push
sbb
fcmovnu
mov
popa
or
jno
out
cmp
lcall
enter
cwtl
push
into
insl
cmp
and
mov
loopne
mov
jb
imul
jp
cmp
add
mov
xor
cmp
inc
call
cmpl
repz
les
addr16
jge
cmp
lcall
imul
data16
pop
and
pop
ret
xchg
in
aam
adc
jnp
push
or
cmp
mov
idivl
xchg
dec
enter
fimull
stos
jns
shlb
fwait
cmpsl
sbb
push
out
sub
push
mov
cmpsl
mov
push
or
push
push
in
xor
ja
insl
es
sbb
andb
inc
ja
out
adc
sub
mov
jno
aaa
mov
iret
xchg
jns
aam
in
aam
lea
push
pop
aaa
or
clc
loop
xor
jmp
adc
mov
and
push
push
or
pusha
and
mov
ret
aas
test
cld
cmp
mov
pop
fadd
push
icebp
pop
pop
mov
data16
push
xchg
adc
dec
les
xchg
lods
mov
sets
cwtl
sub
out
push
stos
js
push
jb
sbb
mov
xchg
mov
sub
adcb
and
cmp
sub
fstpt
gs
pop
sti
and
mov
xor
jecxz
adc
outsb
adcl
add
jne
fisttpll
das
cltd
cltd
push
inc
push
int3
data16
xchg
cmp
pop
xchg
stos
leave
hlt
stos
clc
xchg
sub
enter
cmpsb
sub
mov
mov
cmp
popf
es
daa
clc
fsubrl
or
jne
test
pop
xchg
jge
shl
mov
sbb
pop
fidivl
xchg
inc
sub
adc
dec
cmp
adc
movb
dec
shll
pop
mov
mov
jecxz
rorl
xchg
loop
out
xchg
gs
leave
dec
aaa
hlt
outsb
scas
in
mov
push
pop
sub
xor
out
bound
xchg
adc
pop
cmp
or
inc
sub
test
aaa
movsb
loope
mov
xchg
cmp
mov
popf
and
rdmsr
inc
dec
imul
movsb
movsb
decl
mov
das
inc
cmp
enter
mov
in
pop
rcl
add
pop
xchg
stc
and
imul
mov
out
mov
mov
dec
shll
xchg
add
jo
les
lret
mov
testb
push
or
xchg
ljmp
mov
je
rol
movsb
jnp
mov
popf
cmp
push
pusha
and
add
and
push
or
mov
nop
pop
jmp
xchg
je
movb
xchg
rorl
dec
dec
and
fistpl
loop
sbb
ja
lods
int3
jecxz
lahf
jmp
imul
fsubr
dec
imul
or
push
in
inc
and
sbb
pusha
mov
imull
sar
adc
ret
adc
xchg
movsb
stos
ss
fnstcw
das
dec
or
jbe
push
add
pop
loope
addr16
add
mov
es
leave
pop
xchg
xor
mov
cltd
mov
add
ja
inc
sbb
lock
lea
mov
in
push
pop
jbe
mov
ss
into
cmpsb
fsubrl
jle
push
pushf
jne
mov
and
dec
pop
adc
pop
xor
mov
pop
std
lock
ljmp
mov
cmpsl
in
mov
mov
dec
pop
imul
push
mov
sbb
jecxz
push
fcomi
or
insl
fisubs
rcr
push
mov
add
dec
mov
sbb
xchg
and
int
xorb
and
roll
popa
push
jo
lret
bound
ja
loope
push
ficoms
pop
movsl
stos
mov
dec
jl
mov
and
rcll
push
lret
xchg
xchg
lock
mov
sub
xchg
nop
fs
inc
ret
xchg
mov
ss
xor
adc
mov
and
inc
xchg
xchg
mov
or
push
pushf
ret
out
lds
cld
xor
sub
pusha
call
in
lcall
add
pop
loope
lock
xor
jbe
mov
sub
push
out
lret
sub
sbb
push
das
add
inc
dec
cmp
test
or
xlat
mov
mov
out
push
mov
mov
es
in
lock
push
add
add
pop
inc
stos
add
lret
add
insb
lock
adc
orb
inc
mov
push
aas
jb
fld
sub
or
pushf
lahf
bound
xor
adc
mov
add
iret
fcoml
cmp
cmp
pop
mov
lahf
jl
sbb
fucomp
mov
ret
outsb
mov
mov
fwait
out
ret
jns
aam
aaa
fs
fisubl
sarb
jbe
cld
rolb
fiadds
ljmp
ss
cmpsb
inc
pop
mov
aaa
push
xchg
mov
scas
fwait
and
scas
mov
out
call
cltd
cmpsl
pusha
inc
aam
data16
xor
mov
les
dec
mov
dec
push
cmp
ss
mov
pusha
lods
adc
dec
pop
or
mov
pop
data16
and
pop
into
sti
fnsave
cmp
sti
fwait
or
sub
aam
and
xor
test
xlat
sub
jle
pop
outsb
mov
fs
sarb
mov
jno
inc
cwtl
cmpl
add
mov
out
xchg
faddp
push
jnp
jmp
mov
adc
cmpl
stc
or
leave
inc
push
icebp
insl
pop
mov
in
mov
stos
sbb
cltd
sbb
dec
cmp
ss
hlt
jp
or
pop
dec
movsl
adc
and
cmpsl
lahf
dec
mov
xchg
imul
les
adc
fsubrs
pop
sar
in
dec
push
mov
lods
jae
aam
sbb
fs
push
in
push
test
lock
loopne
cmp
push
jbe
fwait
add
fdivrl
inc
cltd
imul
sbb
push
test
es
and
xor
clc
mov
cmc
cmp
in
sub
jno
push
adc
in
dec
xchg
mov
pop
scas
push
enter
imul
imul
test
pop
inc
jecxz
jbe
or
ja
jmp
lods
faddp
mov
mulb
js
jns
inc
loop
sub
idivb
call
int
std
or
loop
or
scas
fisttps
fs
push
iret
push
andl
sbb
or
jno
sub
ret
jnp
out
push
or
cld
push
leave
xor
push
jns
insl
mov
movsb
jns
movsb
pushf
das
jmp
movsb
scas
add
hlt
ja
mov
insb
popf
rcrb
test
dec
sahf
and
dec
lods
loope
jp
jle
cmp
xorl
xlat
stc
ds
out
mov
icebp
test
ja
mov
je
sbb
mov
repnz
pushf
sti
cld
cmpsb
or
xor
adc
roll
cmpb
adc
jnp
test
test
ss
dec
and
adc
aaa
inc
cmpsb
mov
xchg
addr16
sub
les
pop
cmpl
xor
ficompl
fcmove
fcomps
lds
loopne
out
mov
orl
rcll
mov
and
int3
jbe
stos
adcb
test
mov
fwait
xchg
int
inc
push
mov
xor
xchg
jmp
cs
xchg
pop
fbstp
xchg
negl
ja
pop
ret
int3
fstpt
inc
push
cmc
sbb
and
sub
pop
fwait
jp
aam
xor
cltd
mulb
addr16
int3
xchg
xor
jmp
and
inc
jecxz
jne
insb
in
cmpsl
jae
push
iret
js
sar
cmp
push
xchg
loope
scas
sti
es
test
push
ficomps
jns
insl
pop
arpl
popf
je
lret
mov
xor
leave
in
aaa
mov
scas
or
fdivp
in
inc
push
movb
push
icebp
xchg
movsl
pop
out
jb
xchg
scas
jne
test
stc
loopne
leave
adc
mov
mov
in
arpl
test
and
push
in
int3
jl
loope
mov
pushf
rorl
add
loopne
cs
sahf
jbe
inc
dec
dec
lods
testl
jle
dec
xor
add
arpl
aad
lret
int
leave
cmpsb
dec
int3
in
sbb
mov
xor
pop
test
sarl
cmp
test
imul
mov
mov
mov
add
add
scas
push
xchg
jbe
stc
insl
in
sti
mov
adc
dec
mov
stc
xchg
xlat
lds
scas
fists
rcl
cld
mulb
inc
out
sub
sbb
push
add
cwtl
mov
mov
ljmp
sub
xor
cmp
movsb
or
daa
stc
push
cmp
sahf
mov
sub
call
fsubrl
addb
movsb
jmp
sub
lock
sub
test
pop
inc
push
or
sbbl
mov
cs
jg
mov
in
pop
cmpsl
lods
or
sbb
or
and
icebp
dec
lcall
pop
rcl
mov
cmp
xor
push
push
repz
outsb
add
and
clc
and
scas
jns
add
test
xor
pop
fsubrs
sbb
test
cli
cmc
hlt
adc
fs
shrb
push
je
mov
jmp
and
gs
pop
inc
or
aad
jo
mov
sbbl
stc
inc
adc
dec
mov
cmpsb
or
rcll
fnsave
subl
addr16
stos
jp
dec
jnp
ret
inc
out
pop
adc
mov
cltd
and
fucom
dec
mov
cmp
push
in
xor
sbb
movsl
mov
les
lods
adc
dec
pop
jbe
icebp
insb
jmp
insb
jnp
sbb
pop
ret
les
scas
mov
jno
lock
sbb
sbbb
pop
add
pop
pushf
sub
js
inc
xlat
sub
dec
xchg
sbb
es
idiv
cs
jo
lds
hlt
adc
mov
shlb
ret
adc
or
lds
test
out
dec
push
xchg
inc
cmp
dec
push
sbbl
mov
pop
mov
cmpsl
shlb
aad
sbb
cmc
and
add
int3
test
and
daa
or
imul
or
ja
sbb
iret
mov
ds
jbe
imul
iret
mov
push
fdivrs
add
cmp
sbb
outsl
inc
int3
mov
daa
push
out
lea
insb
or
mov
mov
xor
in
into
cmp
inc
shl
aas
dec
fnsave
pop
cmp
pop
iret
sub
scas
mov
lret
dec
xchg
mov
add
cmp
fs
jecxz
mov
dec
and
sub
cmp
lret
pushf
add
outsl
in
push
xor
out
sbb
or
cmp
dec
mov
test
repnz
inc
xor
test
ja
test
jb
push
shll
loopne
jns
xchg
adc
lods
xchg
mov
adc
sub
fwait
xchg
faddl
stos
jge
jns
mov
fcompl
and
push
iret
test
mov
loope
je
jmp
je
icebp
pop
in
lods
push
rcll
out
and
andb
cld
cmp
mov
repnz
sbb
push
into
jo
les
adc
sbb
pop
mov
xor
std
stos
in
ret
sbb
cmpsl
leave
or
out
jp
lea
aam
sbb
mov
push
mov
ror
sub
call
ljmp
dec
out
pop
jmp
in
xor
out
mov
mov
lds
and
icebp
in
stc
xor
aas
xor
push
ret
call
int
mov
out
xchg
add
cmp
out
inc
cmp
stos
hlt
cmp
and
cmp
pop
mov
add
adc
insl
xchg
fwait
mov
lock
loopne
xchg
ds
inc
mov
fs
fsubrl
or
rcr
add
mov
cs
sbb
imul
dec
xchg
div
icebp
dec
push
cltd
sub
mov
mov
cmp
test
sub
adc
xor
ljmp
and
mov
jmp
int3
push
movsb
das
je
cmpb
xchg
mov
and
bound
sbb
xchg
xchg
dec
xchg
push
sbbb
mov
ds
stos
xchg
enter
sbbb
mov
mov
cmc
lret
lods
test
lcall
arpl
and
cmpsl
stos
mulb
out
inc
loopne
cld
and
mov
addr16
push
mov
dec
outsb
sbb
jg,pn
repnz
enter
sub
enter
push
jbe
push
xchg
lret
pusha
clc
sahf
bound
mov
imul
test
add
movsb
fcmovbe
jbe
sub
pop
push
out
cmpb
imul
push
add
pop
lods
ret
lods
iret
cmovnp
das
pop
dec
fisttpll
mulb
dec
xchg
xchg
push
sbb
leave
sarl
mov
imul
fcmovne
inc
adc
inc
aam
jno
into
lcall
cwtl
xchg
clc
push
daa
xchg
sbb
fs
insb
loop
out
mov
cli
into
mov
sti
repnz
popl
xor
call
ret
je
add
comiss
fdivrl
lret
push
dec
xchg
aas
movsb
test
fildll
sub
adc
aad
mov
in
xchg
outsl
ret
scas
mov
jl
mov
cmp
jp
fwait
test
fucomp
add
repnz
popa
adc
xchg
xchg
or
movsl
and
mov
push
es
scas
add
mov
xchg
movsl
sub
pop
xchg
sahf
xchg
cmp
mov
aaa
pop
out
pushf
es
push
or
mov
into
and
push
lret
out
add
fisubs
jns
pop
jo
add
stos
mull
imul
inc
lret
inc
xchg
ja
call
stos
and
pop
sub
push
ret
idiv
ret
ja
shl
cs
fwait
cli
push
lds
pop
stc
mov
loopne
sahf
les
or
adc
jge
cmp
pop
or
pop
out
ficoml
push
into
and
mov
iret
orl
jmp
jo
aaa
out
lret
xor
testb
addr16
popa
loope
mov
fwait
out
pxor
mov
push
lods
push
call
mov
repz
sbb
fsubrs
sub
mov
sub
scas
das
jne
fsubl
xchg
loop
lds
and
add
out
cld
ss
xor
lahf
lock
mov
je
push
adc
add
loope
popa
sbb
andps
stos
call
xor
cli
out
js
or
push
push
or
popa
xor
cld
cmp
jno
std
std
fcoms
jmp
jnp
jecxz
mov
xchg
sti
jmp
psrlq
test
clc
ljmp
dec
cmp
cmpsl
jl
jg
cwtl
les
test
inc
rol
movsb
push
push
and
mov
mov
ret
lods
ret
mov
lods
dec
pusha
mov
mov
fs
xchg
loope
sub
push
pop
in
neg
inc
lock
nop
push
imul
pop
cmpw
xchg
in
push
add
adc
pop
xchg
xlat
dec
test
mov
jmp
mov
inc
adc
pop
push
int3
sbb
pushf
sbb
enter
push
mov
push
daa
xchg
cmp
inc
and
jo
add
inc
push
adc
push
or
adc
in
push
add
dec
jecxz
mov
cltd
xlat
adc
xchg
stc
lret
mov
ja
ret
xabort
sub
bound
test
push
dec
cmp
jge
dec
pop
iret
sbb
mov
push
pop
ss
ficompl
push
dec
inc
mov
xchg
jne
mov
adc
lcall
push
push
mov
nop
test
add
in
js
repz
cmp
sti
in
loope
xchg
out
ficompl
stos
ret
in
and
xor
add
icebp
sub
dec
add
dec
pop
shlb
mov
push
sahf
xor
inc
fdecstp
lock
jmp
imul
sub
ljmp
out
sbb
cli
cmp
ret
dec
and
push
fs
stos
cwtl
lcall
int
cs
push
lret
lahf
push
jecxz
pop
cmp
mov
sbbl
inc
call
jl
rcll
push
cmp
dec
jmp
bound
xchg
pop
jecxz
pop
aad
andl
out
adc
mov
sub
or
sbb
test
xor
fildl
jge
mov
jg
adc
lds
mov
adc
fimull
fnstcw
push
repnz
inc
dec
cltd
jbe
cmp
into
pushl
lret
mov
mov
sbb
cld
push
fsts
push
xchg
inc
incb
dec
call
ds
pop
inc
sbb
mov
adc
sub
out
dec
leave
push
fmul
hlt
mov
lahf
cmpsl
aaa
push
jmp
out
outsb
shlb
aad
fs
adc
int3
jmp
pop
sarl
pop
je
int
test
movsb
dec
je
xor
jle
inc
ret
lds
mov
adc
sbb
pop
loope
cmp
ficoms
cmp
jae
sbb
scas
shl
and
mov
mov
push
xor
add
es
jno
sub
jae
icebp
pusha
fwait
and
jnp
fnstenv
jmp
cli
xchg
jo
jb
and
or
ficomps
sar
mov
mov
and
jp
aad
pop
in
aad
sbb
push
shrb
daa
add
ret
andl
stos
mov
leave
pop
adc
pushf
ret
lods
cmp
sub
push
divb
insl
out
or
in
dec
outsb
in
and
inc
int
add
xchg
inc
mov
lods
data16
add
cld
xchg
mov
jp
pop
push
insb
out
repnz
inc
lcall
outsb
adc
mov
jae
pop
out
mov
faddl
push
mov
lods
cli
ja
sub
rcrl
ljmp
pop
pop
pop
mov
lret
fildl
pusha
pop
mov
add
pop
loopne
sub
outsl
shl
mov
and
aad
jecxz
dec
shll
inc
xor
mov
jmp
pop
lret
leave
mov
int
xchg
orl
mov
test
das
dec
dec
into
pushf
int
cli
cmp
movsb
aaa
repz
dec
les
mov
jo
sbb
inc
cmp
lods
movsl
movsl
mov
jge
mov
ljmp
stos
sbb
fidivrs
xchg
sub
insb
faddl
popf
mov
push
in
jle
in
daa
xchg
scas
sarl
cwtl
jae
pop
mov
cmp
dec
mov
ja
push
outsl
adc
xchg
mov
jns
fwait
and
or
shll
mov
insb
movntps
mov
aaa
push
cmp
sbb
pop
cmpsb
sbb
jmp
or
inc
mov
push
pop
out
popl
ret
push
pop
std
xor
add
xchg
push
push
out
push
adcb
xorl
ds
lea
roll
cmp
lds
jmp
xchg
pop
pusha
lods
les
cmp
stos
dec
hlt
sahf
clc
test
loopne,pn
arpl
shlb
adc
inc
iret
lods
and
icebp
mov
or
push
pop
pop
stos
movsb
in
fs
or
mov
add
imul
lea
and
out
js
push
jno
shll
add
rcrl
movsl
pop
jb
lods
mov
sub
andnps
lret
inc
sbb
lret
cs
jmp
mov
mov
xor
daa
or
fimull
mov
mov
or
mov
scas
mov
rorb
cli
popa
cmp
icebp
mov
xchg
adc
mov
push
pop
test
movl
inc
push
and
pop
cs
mov
mov
out
repnz
movl
jmp
push
inc
pop
sub
iret
add
lods
mov
mov
xchg
stos
inc
push
repnz
pushf
mov
bound
mov
dec
mov
aam
inc
pushf
mov
mov
mov
imul
and
push
xchg
inc
inc
dec
orl
fisttpl
mov
pop
loopne
mov
outsb
lahf
dec
lock
outsl
sbb
inc
xor
lcall
out
hlt
cmp
outsb
push
sbb
sbb
inc
xor
sarb
jg
cwtl
push
xor
or
std
and
mov
pop
out
test
mov
ja
lret
sbbb
mov
lods
mov
rol
addb
and
cmp
xor
inc
mov
adc
inc
sti
cmp
and
sbbl
scas
jae
jle
jmp
into
mov
clc
scas
cmp
movsb
add
daa
pop
je,pt
cmp
call
sub
adc
into
dec
pop
leave
rorl
mov
mov
pop
pop
push
add
jo
push
cmp
dec
mov
js
pop
push
insl
testl
mov
pop
xor
sahf
jle
minps
popf
add
loope
ljmp
sub
adcl
scas
lret
push
mov
and
push
add
pop
mov
icebp
pop
ja
mov
aaa
gs
into
fsubrl
or
mov
outsb
stos
push
jns
inc
jns
mov
push
sbb
test
sarb
stc
xchg
es
jmp
mov
leave
fstp
enter
orb
lcall
sub
enter
mov
lea
jns
mov
sbb
arpl
ss
data16
arpl
xchg
test
mov
into
rcll
lret
pop
arpl
inc
pop
jns
fcmovb
inc
fdivrp
xor
mov
pop
das
mov
test
cli
mov
aas
mov
out
inc
ds
pmulhuw
mov
lahf
push
adc
outsb
mov
xchg
loope
mov
sbb
sarl
jbe
fildl
or
lods
jle
bound
shrb
and
pop
adc
repz
jmp
cltd
mov
fs
sti
sbb
or
push
mov
pop
loop
or
sbb
sbb
inc
mov
sbb
sbb
and
sbb
les
add
jne
mov
push
push
cmpsb
pop
cmc
ror
popa
mov
adc
ds
sti
sbb
ja
lods
mov
xlat
add
inc
in
lea
pusha
jg
and
add
mov
mov
sahf
push
xchg
sub
jl,pt
xchg
cmpsl
mov
lock
xchg
mov
pop
or
incl
movsl
jnp
or
xchg
xlat
loop
fwait
push
mov
add
jecxz
aas
shl
cmp
push
add
inc
bnd
shlb
dec
and
jne
mov
jnp
fists
add
mov
sub
and
pop
adc
jge
ja
xchg
jne
mov
popf
lret
incb
shll
jp
xchg
xor
cli
xor
repnz
jns
aas
imul
out
in
lret
mov
push
aas
dec
stos
dec
jbe
or
adc
push
daa
adc
aas
lret
or
push
dec
insb
movsb
sahf
xchg
or
push
dec
sub
jae
push
stos
sub
push
mov
lcall
aam
or
out
push
dec
in
sbb
pop
jg
cmc
int
bound
stos
xor
pop
push
setae
or
push
xchg
stos
mov
lret
push
lock
pop
std
add
jne
fstpl
mov
addr16
scas
mov
gs
loope
and
inc
adc
fwait
push
jge
mov
push
and
loopne
scas
and
xlat
inc
fdivrs
xchg
mov
out
or
test
or
xchg
lcall
faddl
es
sarb
inc
push
out
es
sahf
push
les
jmp
imul
cmp
mov
push
imul
xor
dec
lret
xor
mov
outsl
xor
pop
pop
test
inc
and
stos
sbb
sbb
cwtl
lock
adc
mov
inc
sub
out
lods
sahf
sbbl
orb
jmp
push
dec
sub
pop
imul
push
sub
cmc
leave
je
or
push
xchg
movsl
sbb
cwtl
insb
push
lods
sbb
add
jge
loop
mov
scas
test
out
fildl
lret
pusha
inc
push
adc
mov
push
int3
dec
outsb
mov
and
addl
ds
mov
pop
adc
sbb
lock
scas
dec
int3
lods
sbb
ds
aas
in
pop
icebp
sbb
mov
test
rorb
popa
out
in
mov
popf
ficoml
pextrw
dec
sbb
cwtl
ljmp
push
mov
and
dec
xchg
outsl
test
call
fs
aaa
mov
andb
dec
xlat
or
fcoms
mov
xor
push
xlat
test
cmp
push
sti
clc
push
out
jb
push
mov
daa
jge
inc
xor
std
push
imul
jns
cmp
in
jmpw
ds
sti
sarb
pop
dec
push
sub
push
lds
push
or
dec
into
or
pusha
sbbb
dec
xchg
test
rclb
add
std
fiadds
insl
bound
addb
sub
dec
sbb
push
push
mov
cmpsl
outsb
cmp
fisubs
icebp
rorb
adc
mov
mov
or
sub
aas
subl
leave
int
insl
mov
sbb
test
add
inc
mov
jb
or
cmpsl
orb
xor
sbbb
loop
mov
popf
sbb
inc
mov
inc
insl
xchg
push
in
xor
jg
dec
fs
mov
cmp
lcall
dec
les
push
aas
in
dec
dec
and
xor
imulb
dec
fisttpll
and
loopne
mov
mov
movsb
sti
mov
add
mov
shlb
out
lahf
dec
arpl
and
mov
ret
pop
push
dec
sub
sub
enter
xor
sbb
fwait
cld
jecxz
and
cs
sbb
pushf
sub
push
out
pop
push
fdivrs
sti
sahf
inc
or
jle
int
roll
out
shll
divb
sub
jle
mov
arpl
cmc
mov
subl
push
ja
jp
fs
mov
imul
das
jg
icebp
xchg
xor
in
pop
outsl
pop
icebp
aaa
mov
movsl
int
sbb
cmp
sbb
pop
jb
push
xchg
adc
mov
xlat
imul
pusha
and
inc
cmp
adc
fnstsw
shrl
fiaddl
outsl
mov
xchg
sbb
xchg
xlat
cmpsl
mov
xchg
xchg
push
inc
sub
mov
jo
sbb
aas
sbb
push
and
jp
adcb
sbb
adc
or
shl
adc
repz
or
cld
push
insb
shl
xor
dec
popf
inc
and
dec
sbb
lcall
xchg
bound
jmp
cld
adc
mov
mov
cmpl
jmp
out
xor
popa
push
out
sti
sub
mov
cmp
xchg
add
out
mov
jbe
adcb
cld
mov
lds
sub
push
mov
les
dec
or
scas
sub
jb
mov
scas
mov
push
jbe
repnz
adc
icebp
xor
mov
outsb
push
dec
mov
aas
xlat
xor
pop
adc
pop
lea
and
lahf
popf
sub
cmpsb
xchg
test
jge
leave
mov
add
int
rcll
dec
out
inc
add
fldcw
filds
mov
stc
cmpsl
sbb
in
sub
sti
ja
insb
xor
sti
jmp
and
cld
sub
xor
xchg
add
bound
imul
shrl
sbb
inc
lods
jg
push
mov
aam
mov
adc
jp
push
dec
jecxz
in
xor
fcmovnb
sar
inc
dec
fadd
adc
cmp
pushf
push
sbb
push
adc
lret
push
lods
scas
sbb
jnp
jb
ret
add
aaa
rcr
mov
or
stos
mov
repz
jo
add
lods
xchg
leave
stos
xchg
xor
inc
or
cli
fsubrl
inc
insl
fs
add
adc
add
or
aam
and
mov
lods
test
outsl
inc
lahf
scas
add
add
adcb
sub
cld
inc
push
push
xchg
add
inc
xchg
mov
xchg
mov
mov
sub
out
mov
xlat
sub
jmp
out
sub
push
add
divps
xchg
xchg
xor
roll
inc
out
stc
dec
mov
call
shrl
push
int3
xor
in
call
and
add
xorb
mov
xor
lcall
mov
jecxz
mov
mov
das
or
sbb
fldcw
loope
cmp
jmp
lods
sbb
in
lret
test
fwait
in
ja
js
mov
add
ret
or
or
addl
fs
jmp
mov
popf
jp
xchg
dec
xor
dec
out
push
int3
sbb
ficoms
fistpll
mov
or
push
and
je
daa
or
mov
insb
xor
cmp
aaa
xorb
dec
std
mov
pushf
and
nop
cmpsl
je
mov
mov
bound
inc
rorl
push
inc
sbb
sbb
dec
lods
icebp
mov
xchg
cli
aam
pusha
loope
test
movsl
adc
mov
call
xchg
lret
or
sub
insb
sub
cmp
repz
or
loope
sbb
insb
dec
and
sbb
jno
popf
sar
mov
mov
ljmp
adc
xchg
das
scas
xor
out
jg
add
sub
sub
insb
mov
fmuls
insl
jb
pop
add
cwtl
insb
ret
jo
jbe
lods
jmp
mov
int
jl
cmp
mov
loope
mov
xchg
or
jle
daa
lcall
xchg
adc
aas
or
ja
mov
xchg
or
adc
dec
push
cmpsb
subb
pop
cli
inc
or
aas
add
outsb
jp
out
push
pop
fisttps
cmova
aas
jl
or
outsl
inc
sti
cld
inc
aad
lock
jecxz
test
cmp
cmp
mov
out
push
jne
add
call
jecxz
cmp
sub
sbb
pop
mov
mov
scas
sub
add
pop
mov
adc
jle
xchg
jmp
insl
ds
pop
inc
mov
scas
pop
and
pop
fwait
sbb
mov
enter
push
add
mov
mov
xor
outsl
pop
mov
fxch
dec
push
and
jne
mov
inc
lods
popf
dec
rcl
add
inc
xor
pusha
dec
and
and
push
adc
arpl
movsb
xor
clc
repz
adc
mov
loope
mov
or
fcoms
xchg
xorl
jae
xor
sbb
loope
and
inc
mov
add
leave
cmpsb
jo
int
inc
and
shrl
push
jge
xor
insl
arpl
mov
push
cmp
add
in
sub
pushf
and
mov
mov
mov
addb
rol
mov
xor
or
xor
movsb
rclb
mov
xor
sbb
ret
xchg
dec
jle
lea
je
push
xor
pop
cmpsb
jne
push
aas
pop
dec
iret
ucomiss
jp
adc
fildll
test
or
aas
in
ret
lea
enter
test
mov
in
testl
or
ret
xchg
mov
xor
mov
jecxz
lcall
lods
mov
sbb
lcall
ret
popf
mov
insb
ljmp
fnstcw
or
mov
mov
ret
xchg
sub
repz
cmp
adc
mov
or
mov
dec
mov
leave
sbb
sub
adcb
inc
sub
sahf
lahf
push
shrb
lods
mov
cmc
push
enter
push
pop
test
mov
xchg
inc
jle
xchg
jb
mov
lock
adc
mov
test
push
jl
sub
mov
pop
adc
mov
cli
dec
push
xchg
add
xchg
cmpsl
xorb
fdivl
aad
mov
lea
mov
cmp
jp
gs
sbb
mov
xor
add
inc
test
xchg
ficomps
jmp
jo
adc
scas
push
dec
or
or
push
lcall
pop
adc
mov
xor
inc
inc
repz
fdivl
sub
xor
mov
les
loop
jmp
xchg
cmpsb
mov
rcrl
dec
push
mov
add
xchg
xchg
pop
push
test
mov
aam
dec
out
aam
adc
movsl
negb
pop
lods
mov
or
sarb
lods
jmp
movsl
aaa
add
xor
pop
movsl
jmp
and
movsb
jle
push
xchg
pop
add
lcall
fwait
pxor
inc
divl
rorb
push
in
test
push
cmp
sti
repnz
addr16
stos
shrb
call
test
fisubrl
scas
push
push
adc
xchg
ror
fcoml
aad
cltd
loopne
lea
pop
dec
fldcw
sbb
jns
movl
mov
mov
inc
mov
mov
fmuls
les
push
xor
inc
mov
push
inc
mov
adc
cmp
scas
lcall
xchg
mov
push
inc
ret
cli
cmp
outsb
sub
mov
lret
insl
mov
popf
ljmp
leave
int
into
packssdw
pop
push
pop
push
les
cmc
sub
push
flds
fstpt
push
in
inc
xchg
test
add
repz
fucomip
xchg
cmpsl
sbb
int3
test
rorb
cs
pop
xor
scas
lods
jmp
pop
jo
fcmovbe
fcompl
add
jno
sbb
or
xor
lods
xor
xchg
hlt
bound
sub
push
clc
or
ss
or
in
daa
push
and
push
pop
or
mov
xor
xchg
dec
jecxz
aaa
xchg
sub
nop
in
and
xchg
cs
mov
leave
xchg
dec
fidivrl
out
push
in
movsb
lcall
mov
inc
cmp
xchg
jp
repnz
ret
or
cld
popa
mov
stos
sbb
mov
push
mov
mov
and
mov
iret
cs
and
push
dec
mov
xor
dec
add
das
int3
imul
add
inc
notb
push
out
sub
or
test
cs
mov
popa
aad
stos
dec
or
les
cmpsb
add
into
lahf
or
call
bound
leave
xchg
cmpsl
mov
xchg
shlb
and
je
pop
push
xorl
mov
mov
xor
cmpsl
addr16
shrb
mov
aas
insb
cmp
stos
repnz
sbb
sbb
imull
xchg
cli
fistpll
push
repz
sbb
pop
cmp
in
sbb
xchg
loop
dec
outsb
movsl
mov
xchg
fs
push
add
cmpsl
jecxz
fistl
inc
std
vmwrite
dec
arpl
shll
inc
ficomps
sub
mov
ja
pop
cmpsl
mov
jl
sub
jbe
jo
aad
inc
push
loopne
xchg
data16
inc
sbb
mov
pushw
roll
enter
xor
add
js
addr16
cli
sbb
js
aas
in
aaa
daa
xlat
mov
push
divb
push
clc
rorb
ds
sub
notl
or
sub
stos
cmp
out
loop
dec
push
or
jmp
cwtl
jp
dec
stos
jmp
jge
arpl
pop
shrd
and
jmp
test
mov
cmpsl
inc
imul
popa
and
pop
xchg
adc
les
lcall
push
out
xchg
xchg
lock
inc
mov
enter
mov
xor
pop
loope
sub
push
mov
push
jle
dec
stos
push
xor
lret
adc
fbld
adcl
xchg
dec
sar
xor
ljmp
add
push
add
cmpsw
psrlw
imul
sub
pushf
lret
out
sti
or
cwtl
dec
inc
and
adc
jae
jne
not
or
push
loope
push
test
add
push
lcall
std
call
mov
cli
adc
cmpsb
stos
loope
xor
les
enter
and
popa
cmp
jmp
pop
sbb
dec
sbb
cmp
lcall
popf
inc
add
in
je
filds
jo
cmp
xchg
cmpsb
pop
ret
ljmp
imul
arpl
push
jns
jb
inc
in
popa
mov
cmp
fisttpll
outsl
imul
jge
add
pop
cmp
cmc
int3
lea
mull
mov
insl
adc
mov
or
sub
ss
gs
fisttpll
in
fwait
nop
mov
mov
pop
sbb
pop
and
inc
repz
daa
fstl
dec
nop
and
flds
pop
push
stos
sbb
gs
shrb
test
jecxz
jl
notb
mov
sub
out
insb
jle
dec
lahf
imul
cmp
stos
push
out
test
ret
jo
jnp
push
pop
push
add
xlat
fisttpl
je
shr
mov
cwtl
lock
cmp
pop
xchg
adc
cmp
inc
xchg
fldt
movsl
pop
ja
insb
ret
pop
in
ljmp
icebp
mov
pop
jmp
pusha
ja
jp
push
inc
js
and
jne
or
lock
xchg
push
fsubs
aad
cmp
inc
outsb
or
pop
or
mov
pop
jle
inc
cmpsb
imul
mov
xlat
jmp
pop
sub
push
out
movsl
push
test
inc
les
das
aas
lret
pop
mov
pop
dec
add
outsb
testl
jno
mov
sub
stos
test
jb
leave
dec
fldcw
mov
pop
popa
cmp
mov
stos
mov
inc
cmp
pop
add
stos
sub
dec
lock
push
add
sahf
jp
aam
or
rol
xchg
imul
inc
addb
push
mov
add
mov
sub
repnz
xor
cmovge
mov
ss
stos
and
xchg
lods
pop
fisttpll
xchg
mov
imul
insb
adcb
cmpsb
mov
call
cs
cwtl
sti
sbb
or
sti
xchg
inc
loopne
test
scas
dec
clc
sub
into
int
pop
jp
fistps
xchg
addr16
mov
jns
adc
repz
mov
push
call
jl
mov
aas
ret
lret
mov
fldcw
or
es
cmp
push
rorb
in
jnp
cmpsl
jl
dec
sbb
out
fs
mov
bndldx
int
lret
pop
mov
mov
lahf
shll
mov
fwait
jno
xor
dec
lahf
in
sub
cltd
dec
mov
insb
add
cltd
ret
and
mov
mov
sbb
es
cwtl
cmc
test
dec
add
inc
fmuls
leave
dec
push
jne
aaa
cmp
mov
inc
sub
les
sub
repz
mov
mov
addr16
stc
add
shl
rorl
inc
adc
jbe
fistpll
mov
lahf
shrb
mov
pop
add
mov
xchg
mov
cwtl
fiadds
mov
repz
pause
sub
je,pt
adc
popa
testl
inc
stos
mov
and
add
test
xchg
stos
adc
arpl
sar
mov
or
in
pop
mov
cli
sbb
popa
mov
cmp
dec
push
in
out
pop
addr16
cs
std
mov
scas
std
push
push
xor
add
sbb
xor
hlt
mov
adc
loopne
mov
add
pop
jb
add
out
pop
cwtl
adc
jg
jnp
jne
into
test
cmp
jmp
mov
lret
cmp
sub
das
add
xor
outsb
or
mov
mov
clc
movsl
js
sub
std
shl
jbe
inc
push
and
xlat
leave
mov
push
lock
cli
inc
pop
or
decb
add
pop
scas
jmp
xor
fstps
in
test
xchg
xchg
movl
loope
mov
fcompl
push
js
test
out
sbb
scas
sti
jae
jae
sub
jne
and
jmp
add
xchg
mov
or
test
xchg
cld
adc
push
mov
jecxz
inc
push
mov
je
jle
xor
cmp
jle
dec
xchg
test
pop
lret
int3
cmpb
push
sbb
pop
add
and
ljmp
pushf
roll
mul
cmpsl
jo
fiadds
mov
dec
outsl
mov
clc
scas
sub
dec
mov
jno
sbbl
jp
jbe
mov
dec
outsl
mov
jecxz
lock
xor
mov
pop
mov
jg
mov
sbb
sbb
sub
pop
and
pop
mulb
hlt
enter
adc
add
dec
pop
push
xor
inc
or
dec
xchg
mov
sbb
push
ret
jnp
roll
adc
dec
sub
dec
bound
jecxz
cmpsl
mov
orl
inc
or
inc
mov
pop
add
sub
mov
mov
cwtl
out
mov
aas
mov
outsb
fldt
popa
adc
dec
cmp
fs
sbb
xlat
nop
mov
pop
adc
push
adc
jmp
mov
mov
pop
jne
pushf
fisubl
inc
mov
daa
mov
es
fsts
ret
adc
outsb
iret
ret
mov
jnp
and
insl
stc
xchg
push
pop
mov
push
cmpsb
iret
mov
dec
ret
sbb
push
and
xchg
pop
add
xor
rcrb
add
iret
mov
fcmovu
fistps
stos
fscale
rcrb
jbe
add
outsl
add
mov
fs
or
movsb
loop
test
stos
daa
scas
sbb
mov
aaa
scas
xchg
or
ss
cld
push
mov
lahf
sbb
sar
cmp
rcrl
adc
addl
pop
cltd
dec
ror
pop
fdivrl
testb
add
cmp
decl
cld
outsl
aad
hlt
sbb
cli
dec
inc
rcll
jp
test
or
dec
les
cli
imulb
std
dec
jecxz
or
cltd
push
mov
mov
cli
aad
hlt
sbb
icebp
jl
cmp
inc
push
cmp
shll
bound
push
jne
mov
mov
lods
fwait
dec
iret
ja
enter
fistpl
jle
fldcw
and
mov
jne
ljmp
shll
call
mov
cwtl
aas
jle
pop
lea
dec
mov
stos
shrl
jl
pop
push
in
pop
xor
jae
lret
adc
jns
adc
sbb
mov
jp
inc
mov
pop
repz
sbb
mov
cmp
out
adc
push
or
out
in
sub
pop
int3
das
and
jl
data16
xor
loope
add
push
mov
jbe
adcb
mov
inc
aam
into
dec
sbbl
pop
int
stos
sub
stos
and
lods
into
fldl
inc
mov
jle
mov
jb
ret
imul
hlt
mov
addr16
or
ret
cltd
iret
xchg
adc
pop
pop
ror
out
dec
cmc
cmc
dec
or
sbb
jle
mov
dec
dec
adc
push
push
mov
sbb
jp
inc
mov
push
or
bound
jmp
xchg
jl
pop
test
clc
pop
out
inc
fldcw
lcall
out
test
gs
jg
lcall
cmpb
sub
xor
ss
fistpl
insb
pop
mov
les
pop
adc
gs
xchg
push
cmp
std
outsb
mov
sti
mov
jg
or
xchg
push
in
out
dec
std
insl
mov
xorps
or
mov
cmp
fldcw
sub
std
insl
int3
rcrb
sahf
mov
cmp
jl
pop
cmp
pop
mov
addl
out
pop
scas
lahf
roll
sub
sbb
mov
movsb
adc
cmp
outsb
xor
push
jno
jns
push
mov
lret
mov
cmp
in
mov
jge
add
sub
push
adc
add
inc
jmp
lds
lods
mov
cmp
imul
enter
cmp
xchg
addl
into
mov
int
mov
xor
mov
outsl
push
cmp
add
nop
pop
and
ret
pop
xor
cltd
testb
sub
push
adc
and
cmp
push
sbb
pop
fists
add
daa
dec
jbe
xor
orb
test
and
mov
push
mov
stos
roll
jnp
mov
in
es
add
iret
adc
ljmp
mov
fwait
mov
test
lret
ss
test
sub
imul
lret
je
jae
popf
add
xor
mov
jbe
dec
cmc
mov
rclb
jmp
out
das
add
adc
push
or
sbb
push
xchg
mov
push
pop
jge
pop
and
jge
dec
add
sbb
xlat
sub
adc
not
xchg
das
das
sbb
jns
mov
aam
sub
into
popa
xor
lods
inc
pop
repnz
mov
jmp
std
mov
std
out
push
hlt
vpshufhw
movsb
test
jp
int
pop
pop
and
inc
mov
sub
fsubs
sub
ret
subb
ret
fidivs
cmp
movsb
into
push
aad
in
mov
or
inc
in
aam
xchg
add
repz
out
cmp
sub
decb
lods
mov
mov
subl
add
mov
daa
push
rcrb
sbb
cld
enter
mov
int
pop
jl
add
inc
imul
pop
adc
xor
ret
mov
int
movsb
sub
or
jno
cwtl
mov
ljmp
dec
mov
fistps
lds
sub
xchg
lahf
mov
pop
fs
pop
adc
nop
sbb
aas
outsl
jle
hlt
inc
mov
daa
adc
call
jbe
mov
stos
xchg
test
iret
mov
daa
dec
mov
inc
sbbl
xchg
jp
fcmovu
sahf
and
out
or
js
or
mov
gs
pop
mov
ffree
pusha
lods
push
mov
push
cmp
leave
xchg
movsb
enter
xor
dec
stos
and
faddl
adc
aaa
out
orl
add
jo
pop
xchg
out
push
push
jae
addl
add
stc
aas
push
rcr
jnp
ja
pop
sub
les
ror
pop
les
mov
pop
mov
jne
fcmovb
or
in
jno
lret
mov
jecxz
pop
je
xor
movsb
test
sbb
pushf
das
sbb
daa
ret
leave
cmpsl
add
out
flds
fiaddl
mov
cmp
icebp
shrb
lods
lods
pop
addl
cmpsb
push
dec
sbb
addr16
sti
pop
xchg
xlat
cmp
in
push
mov
pushf
sbb
ja
jmp
mov
or
mov
in
xchg
in
mov
sub
out
call
and
fisubrs
lods
loope
add
imul
scas
int
andl
test
pop
mov
imul
shlb
xor
lret
jp
mov
test
out
fsubrs
hlt
or
stos
and
cmp
xchg
adc
cli
mov
jecxz
jmp
data16
add
mov
dec
push
xchg
je
lret
andb
repz
jle
cmpsb
lret
jp
cli
inc
daa
nop
xchg
sbb
sbb
mov
add
lea
or
ja
inc
cli
pushf
insb
push
and
adc
cs
dec
dec
lds
mov
sub
aam
shl
push
jle
imul
push
pop
sub
xlat
dec
xchg
jb
push
xchg
std
mov
cmpsb
mov
adc
xlat
fwait
push
stos
test
sbb
gs
push
jne
andb
sbb
lret
cs
lret
adc
jp
dec
inc
fcoms
lcall
dec
out
push
cmp
cmp
mov
pop
shrb
int
sub
sbb
and
sahf
daa
inc
xchg
pop
rcrb
fmuls
pop
xlat
mov
cmp
andb
test
jmp
push
sub
jp
cli
jle
sbb
enter
lea
cmpsb
movl
xchg
or
mov
in
push
jge
cmp
outsb
jl
cli
stos
push
sub
stos
inc
fwait
imul
sbb
xchg
jmp
aad
pop
ljmp
in
mov
add
data16
inc
add
and
mov
xchg
and
lahf
ret
mov
or
pop
leave
or
addl
rcll
xchg
xchg
arpl
mov
xor
popa
roll
push
mull
icebp
mov
xchg
sbb
enter
rcl
aam
push
xchg
in
and
iret
adc
mov
lcall
fisubl
arpl
mov
repnz
push
inc
adc
adc
repz
mov
out
pushf
ret
or
nop
cli
lock
sub
fwait
std
mov
xchg
or
inc
cmc
std
mov
pushf
xchg
imul
je
xor
cltd
out
jge
stos
dec
arpl
sub
shll
jnp
mov
push
je
sbb
in
push
push
sbb
pop
mov
out
fs
out
mov
ret
movsl
repnz
mov
cmc
mov
clc
sbb
jns
fcoms
stc
repz
cmp
aad
mov
adc
fcmovu
sub
mov
mov
dec
xor
jmp
cmp
ret
rclb
mov
das
pop
inc
cmp
sub
mov
jno
adc
xchg
jecxz
xchg
dec
movsl
sbb
inc
jae
xchg
clc
fsubrl
dec
test
loop
nop
pushf
jle
scas
push
loopne
mov
fsubs
push
mov
jle
push
daa
movsb
push
xchg
outsb
jae
or
adc
or
jp
mov
add
push
jb
xorb
iret
rclb
adcb
mov
jns
addr16
jge
in
cmovp
mov
test
and
inc
loop
mov
or
in
mov
fwait
and
call
push
cld
rolb
jecxz
and
or
lret
adc
mov
push
dec
and
jae
xlat
push
mov
mov
loop
int
mov
add
out
lcall
int
or
lret
sbb
sahf
xchg
in
cmp
sbb
adc
cmp
and
fsts
or
mov
push
inc
mov
faddl
xchg
sbb
mov
sbb
push
xor
cmp
lret
mov
push
lahf
hlt
sti
and
adc
les
mov
xor
sqrtps
dec
mov
pushf
fistps
or
mov
jo
mov
xlat
idiv
and
ds
in
push
cmc
push
fcmovnbe
inc
cmpb
fcmovnu
cmp
stc
sub
mov
adc
hlt
movsl
mov
pushf
xor
jmp
shll
cmp
cmc
popw
imul
xchg
lods
or
push
mov
push
mov
fs
shll
pop
std
adc
in
call
mov
fadds
mov
jmp
jecxz
loope
inc
xchg
icebp
data16
ja
addr16
pop
or
xor
cli
pop
mov
mov
push
mov
cmp
cmp
mov
adc
inc
orl
jae
dec
push
and
adc
jle
das
decl
push
mov
cmp
imul
mov
pop
iret
and
sub
ljmp
rsm
arpl
xchg
jns
adc
push
arpl
xchg
cmp
repnz
xchg
mov
cmpsb
jbe
mov
mov
push
repz
cmpsb
dec
push
cld
pop
cs
push
mov
dec
inc
imul
and
sbb
sbb
or
fsubl
das
and
shll
push
cltd
pop
inc
mov
pop
dec
dec
push
nop
jmp
xchg
jo
cwtl
aas
add
test
outsl
push
sbb
icebp
jae
jns
call
xor
xchg
adc
pop
jecxz
xor
dec
lock
dec
mov
mov
in
dec
xor
xchg
adc
and
pop
das
aaa
mov
sar
or
sahf
jg
jne
clc
push
push
stos
xchg
ja
push
lahf
aad
dec
mov
xchg
inc
jp
xchg
cmp
mov
in
dec
loope
stos
dec
push
cmp
or
jnp
lahf
push
or
int3
and
pop
sbb
dec
xchg
add
popf
cmp
ret
jbe
xor
sbb
adc
jnp
push
push
mov
inc
jns
in
cmc
inc
sbb
and
movsb
das
shrl
out
jp
push
sub
scas
xlat
push
mov
adc
push
lods
in
adc
gs
or
sti
out
push
sbb
popf
sahf
push
mov
jo
pop
in
imul
adc
out
lods
mov
fimull
pop
ret
pop
fdivp
add
test
jo
xchg
shrl
lcall
sbb
adc
aas
xchg
mov
cmpl
dec
dec
pop
mov
xor
jmp
xchg
insb
das
shll
out
call
ljmp
push
adc
and
xchg
mov
jns
out
dec
inc
xor
out
mov
outsl
cmp
sti
push
repnz
inc
pop
les
out
push
icebp
rcl
negb
insb
dec
and
out
or
sbb
add
stc
lret
nop
pop
xor
fldt
loopne
xor
inc
dec
push
fdivr
bnd
stc
leave
push
add
dec
mov
in
jmp
jb
cld
pop
xchg
inc
stc
int3
sbb
sbb
frstor
fiadds
xor
fucomp
jle
cld
lret
orl
xor
mov
aaa
bound
ret
inc
ss
test
test
add
gs
ror
push
cmp
cmpsl
mov
or
les
inc
jl
test
cmp
sub
cld
add
loope
sbb
popa
divb
int3
aam
scas
cmpsb
xlat
cmp
mov
dec
adc
insl
pop
rolb
fdivrs
jmp
call
dec
cmpsb
arpl
sub
ja
shll
enter
nop
dec
lret
cld
pusha
sbb
mov
inc
pop
mov
mov
idivl
outsl
mov
clc
inc
push
imul
pop
adc
push
pop
in
pusha
jle
xor
pop
cmp
popf
icebp
jae
add
inc
sub
xchg
repnz
adc
push
ds
iret
mov
xor
test
push
xor
lea
bound
inc
jo
lea
ljmp
or
mov
cmp
pop
jnp
jecxz
test
mov
cltd
push
cmp
sub
ss
push
push
mov
addr16
push
adc
cwtl
add
ss
mov
pop
lea
hlt
push
incl
and
je,pn
mov
int
dec
repz
jae
lret
xor
in
sub
inc
xchg
daa
filds
add
add
jb
xchg
xor
mov
jne
or
into
ss
xor
xor
pop
mov
adc
mov
cmp
sbb
pop
rcll
push
rcll
out
repnz
xchg
and
es
and
imul
ja
lea
insb
add
repz
dec
and
fiaddl
jl
mov
push
es
adc
scas
push
stos
outsl
repnz
cmpsb
es
adc
imul
mov
cmp
mov
iret
idiv
loop
cmc
into
fwait
pop
repz
jle
mov
sub
xchg
fistps
into
sbb
fiaddl
xchg
pushf
cltd
lds
jae
jp
in
lods
ljmp
mov
ds
ror
pusha
or
dec
and
mov
xlat
and
sti
pusha
or
movsl
fisubrs
into
mov
testb
lods
mov
nop
xchg
mov
push
movsb
jbe
xchg
push
mov
cmp
push
aad
jbe
xor
imull
add
adc
mov
mov
mov
push
dec
inc
rcll
inc
scas
sti
push
mov
popf
or
aas
mov
adc
jno
movsl
js
nop
pusha
add
push
pusha
inc
cli
call
cmp
sbb
cs
cmp
aam
popa
imul
icebp
sbb
jbe
leave
mov
xchg
lea
pop
or
or
movsl
xor
lret
sbbl
jl
and
test
aam
adc
mov
lahf
sbb
push
sub
add
adc
aas
in
mov
mov
mov
ret
in
cli
inc
mov
xor
imul
insl
and
cmp
or
ret
daa
sbb
or
mov
fidivrl
inc
imul
or
lock
jae
mov
inc
mov
stos
push
adc
sbb
data16
mov
imulb
or
xor
and
sbb
jl
pop
push
cmp
jb
clc
dec
jmp
fwait
lods
in
cmp
in
adc
cmpb
mov
push
prefetch
dec
mov
aas
sub
push
mov
jle
loop
pop
enter
jmp
cld
inc
lods
xchg
arpl
sub
das
inc
inc
mov
or
add
cmp
pop
jo
aad
cs
push
xor
push
inc
or
cmp
repnz
aam
jns
dec
mov
mov
imul
test
add
jno
loop
mov
jo
les
jg
ljmp
push
inc
decb
sbb
mov
out
xchg
xor
mov
xlat
adc
outsl
aaa
mov
jno
cmp
fsubrs
mov
mov
xor
sub
insb
sti
push
stos
mov
sub
shrd
out
dec
stc
sbb
cltd
push
push
cs
ljmp
shll
je
xor
es
nop
movsb
xor
int
adc
dec
mov
dec
fcmovnb
or
push
int
hlt
add
mov
fsub
call
jg
jle
xchg
mov
lods
xor
pop
add
cmpsb
sbb
movsl
dec
sti
xchg
std
ja
mov
scas
shll
cmp
loope
push
mov
mov
cltd
dec
xor
and
jg
xor
mov
fldcw
sbb
sub
mov
mov
or
push
test
shl
pcmpeqw
jl
pop
adc
pop
imul
inc
rcll
pop
jno
xchg
test
fwait
sbb
mov
jp
in
ljmp
fcomps
mov
stos
xorb
push
cli
roll
or
push
adcl
pop
or
lea
xchg
xchg
es
daa
sbb
adc
lret
pop
jmp
and
repnz
xor
sbb
mov
inc
xlat
pop
jae
add
jmp
jecxz
aam
lods
pop
sbb
js
xchg
push
int
iret
aam
and
xchg
push
in
push
in
jb
idivb
ds
cmp
mov
movsb
daa
cwtl
jbe
mov
ret
jbe
dec
shrl
pop
pop
jmp
push
mov
sbb
nop
jae
sahf
jl
pop
rcrb
mov
xor
fcoms
mov
insb
pop
call
or
loope
jp
test
pop
mov
and
and
popf
subb
mov
dec
inc
mov
add
stos
ss
outsb
sub
xchg
push
xorb
sub
dec
xchg
test
iret
mov
sahf
fcmovnu
xchg
dec
or
mov
pop
call
sahf
fs
or
jno
mov
or
sbbb
in
int
imulb
mov
mov
in
sbbb
sbb
stos
mull
hlt
rcr
inc
or
dec
mov
cld
pop
push
enter
testb
mov
std
mov
dec
mov
pop
repz
push
out
test
or
adc
scas
and
pop
xor
cld
push
orb
jmp
jge
stos
int3
mov
cmp
add
jns
or
jmp
cmp
add
add
pop
push
sub
test
xchg
sub
insb
jmp
movsb
jp
mov
sbb
or
popa
xchg
mov
mov
andl
xchg
clc
mov
xchg
fnstenv
xor
xchg
or
jge
frstor
xlat
lods
pusha
in
mov
loopne
dec
inc
add
lcall
sub
rolb
shlb
lret
or
sbb
pusha
xchg
pop
in
arpl
fisttpl
mov
add
fcoms
rcrl
mov
jg
or
mov
jae
movntps
add
dec
fwait
mov
sub
mov
dec
adc
cwtl
pusha
dec
sub
bswap
xlat
test
ja
xchg
dec
cmp
adc
aad
and
jmp
mov
or
pop
dec
imul
pop
cmp
cmp
data16
std
cld
loope
push
movsb
xor
jns
arpl
add
call
int
mov
xchg
jae
hlt
mov
js
xchg
pop
xor
mov
out
xor
ret
xchg
aas
arpl
das
stos
inc
pop
in
dec
adc
jno
pop
mov
in
xchg
push
and
sarl
aad
or
iret
add
mov
test
cmpsb
in
cmp
ljmp
add
sbbb
pop
push
sbb
loopne
add
mov
pop
inc
mov
cmp
sahf
repz
jae
and
xlat
jle
out
or
cmc
fisubrl
mov
xchg
xor
push
iret
jl
dec
les
je
jnp
test
xchg
add
das
ret
xor
es
imul
inc
xor
mov
dec
ret
js
repnz
mov
mov
and
mov
sub
cltd
xchg
add
jnp
pop
sbb
mov
dec
fcmovb
into
lahf
mov
loop
out
test
sbb
popa
mov
xor
xor
inc
xor
lahf
sub
or
or
mov
pop
jbe
jbe
shr
test
loop
rcl
dec
dec
adc
sbb
mov
iret
mov
jnp
lcall
in
sbb
pop
repnz
sbb
adc
inc
insb
push
incl
cmpsb
enter
pushf
add
mov
pop
cmp
pusha
cmpsb
cmp
mov
leave
leave
add
sub
test
pop
mov
mov
cs
adc
pop
pop
sub
adc
cmpsl
lret
add
cmpsl
mov
addr16
sbb
mov
mov
xchg
mov
mov
jb
pop
sti
lods
mov
mov
andb
and
stos
das
jg
jo
out
push
aaa
aad
jo
and
into
mov
roll
push
fs
mull
je
xchg
insl
push
loope
or
cs
pop
add
sahf
andl
inc
push
and
push
mov
lahf
ret
mov
pop
shr
xor
xchg
out
cwtl
adc
lock
inc
lock
pop
idivl
pop
testb
add
pop
fsubrl
incb
cmp
jle
push
imul
into
call
pop
xchg
push
push
popa
or
add
dec
mov
out
hlt
mov
imul
mov
scas
cmp
jae
pop
insl
push
adc
insl
test
sub
xchg
stc
pop
lret
movsl
pusha
pop
leave
out
mov
in
rcr
cmp
sbbb
xchg
cmp
cmp
jb
and
int3
call
push
adc
push
clc
inc
mov
xor
fiadds
dec
stc
arpl
in
dec
imul
rclb
daa
loopne
aad
aas
pop
dec
cmp
rol
jno
pop
pop
test
stos
out
sbb
adc
ja
shll
jae
ss
jp
xor
xchg
bound
mov
aas
mov
mov
nop
sub
pop
imull
xchg
and
mov
adc
movsl
mov
mov
push
jnp
inc
dec
pop
scas
xchg
lcall
inc
stc
push
call
fwait
rcll
push
stc
add
mov
adc
cli
jmp
aas
mov
jecxz
dec
pop
mov
jle
inc
dec
pop
repnz
mov
movsb
ss
pop
rcll
popa
cmc
sbb
test
loopne
iret
add
rorl
inc
xchg
mov
in
shll
negl
add
ficompl
mov
add
stos
jno
sahf
out
into
shl
rcr
fbstp
shll
xchg
sbb
cmpsb
pop
xor
lock
test
roll
push
repnz
test
lods
lret
pop
fcmovnb
sbb
adc
popa
ds
adc
inc
mov
mov
int3
sub
out
xacquire
or
push
adc
inc
stos
or
es
mov
les
mov
or
scas
dec
sti
out
cmpb
xorl
pop
popf
lahf
sti
push
xchg
loop
sub
push
orb
sahf
outsl
shr
cmp
mov
out
jge
jnp
pop
mov
dec
int
push
decl
jmp
lahf
cmp
mov
jb
insl
sbb
in
fwait
push
sub
movb
lock
jne
iret
imul
mov
rcrl
and
fnsave
mov
inc
in
cmp
aaa
ljmp
repnz
iret
xor
push
push
cmp
adc
imul
das
scas
mov
xor
fsubs
lea
xchg
addb
std
sub
dec
push
xchg
adc
addl
mov
inc
dec
lods
and
add
pop
xchg
out
arpl
pop
sub
mov
push
pop
out
push
lcall
and
cli
cltd
rcrl
inc
cmp
es
lds
jnp
test
push
cmp
rorl
clc
pop
mov
rol
testb
insl
in
push
adc
leave
jg
and
push
pop
cli
clc
lret
mov
scas
stc
loop
cmp
push
lret
outsl
xchg
in
adc
xchg
fdecstp
mov
sti
pop
mov
icebp
add
push
dec
jl
out
mov
xchg
pop
icebp
shrl
sub
jno
test
jno
ret
mov
jge
mov
pop
push
xor
decb
data16
jge
dec
in
or
ficompl
stos
les
sub
into
aaa
mov
fsubrs
adc
cmp
xchg
imul
mov
mov
adc
pop
xchg
in
jg
jns
test
add
jmp
cli
out
or
sti
popa
jecxz
mov
xchg
and
mov
addr16
dec
cmp
push
je
in
das
sub
imul
mov
push
and
lds
sub
lret
lret
xchg
cmpsb
scas
rcll
inc
std
rcrl
pop
pop
imul
and
stos
pop
and
int
addr16
push
or
sbb
fistpll
stos
mov
xchg
mov
push
mov
and
jns
lret
push
xchg
mov
scas
jg
fwait
sub
and
mov
imul
cwtl
adc
in
mov
sbb
xchg
sbb
sete
mov
pop
ljmp
stc
arpl
pop
lods
and
and
jge
jns
cmp
jbe
clc
aam
jbe
push
or
cwtl
inc
inc
rcll
push
xchg
mov
in
nop
and
imul
add
cwtl
xor
in
fcompl
push
divb
es
lret
lds
mov
shld
cmpsl
xchg
mov
movsl
movsl
les
cmp
loopne
orb
jmp
or
leave
cmpsb
push
pop
sub
aaa
add
push
add
pop
mov
shrb
sub
aam
and
shl
aam
pop
mov
jg
adc
aaa
cmc
push
scas
enter
jns
jno
mov
or
mov
data16
sub
mov
xchg
or
add
cli
mov
gs
push
adc
xchg
test
xchg
add
adc
jb
popa
rcl
jl
out
xchg
pushl
jp
rol
sub
sub
mov
icebp
push
mov
outsl
sub
inc
inc
movsb
pop
xchg
inc
pop
xchg
mov
xchg
push
fisttpll
fnstenv
lea
in
dec
ret
dec
sbb
and
mov
xchg
push
test
in
lock
mov
fimull
test
add
adc
icebp
in
and
dec
xchg
idiv
xchg
push
loope
sti
ja
sbb
mov
sti
add
into
push
pushf
je
inc
jo
inc
fs
xchg
xlat
mov
cs
inc
cmc
nop
mov
insb
mov
pop
mov
jmp
jmp
push
add
loopne
inc
cmc
fwait
icebp
aad
outsl
push
test
push
decb
mov
pop
cmpsb
scas
cld
jecxz
jbe
outsl
loopne
ds
loop
mov
in
cld
pusha
into
and
insl
push
add
fmuls
cmc
adc
mov
addr16
popf
cmp
adc
pop
mov
mov
mov
dec
cmc
lods
dec
mov
mov
dec
lods
fistpll
fbstp
popa
sbb
cmp
daa
clc
sbb
shlb
mov
mov
mov
imul
xor
inc
pop
jne
jns
lcall
inc
ror
data16
repnz
mov
iret
or
aaa
mov
dec
mov
inc
mov
movl
jnp
and
test
lock
fnsave
lea
shll
xor
int
push
repnz
pop
mov
cs
mov
scas
sub
pop
js
jae
outsb
sbb
dec
pop
lahf
inc
mov
popf
clc
lea
ror
jae
sbb
mov
imul
or
adc
pop
and
dec
mov
dec
arpl
jl
xor
xchg
adcb
loopne
imul
jmp
vcvtps2dq
or
xor
aas
cmp
lahf
mov
and
mov
mov
adc
mov
and
mov
lahf
fbld
les
loop
dec
call
xchg
cmc
mov
add
das
cmp
adc
enter
add
leave
mov
or
arpl
lods
ds
jle
add
fidivs
adc
push
add
shlb
andl
xor
test
popf
pop
lods
push
mov
xchg
cli
jo
adc
leave
jnp
jnp
out
adc
rorl
sbb
sub
and
pop
pop
xor
adc
mov
rcr
scas
mov
fnstsw
or
stos
mov
icebp
popa
popl
iret
data16
js
movl
or
stos
lock
push
push
pop
sub
adc
mov
dec
fbld
sahf
or
adc
xchg
adc
jmp
mov
fcomp
int3
das
fnstenv
lods
paddusb
adc
cmp
lret
cmp
pop
negl
push
std
aam
xchg
push
enter
push
jns
aas
lret
xchg
push
dec
xlat
jle
scas
dec
xchg
add
mov
xchg
mov
icebp
out
mov
movsl
mov
repz
inc
out
loope
xchg
popa
xor
inc
arpl
stc
cmp
cmp
lds
test
xor
imul
test
inc
mov
or
stos
adc
jns
fidivl
mull
lods
cmpsb
mov
fstl
pusha
mov
mov
push
insl
inc
push
mov
pop
or
rorl
ret
mov
ret
imul
scas
test
aaa
push
push
stc
in
ja
and
push
pop
das
jno
repnz
in
push
int3
pushf
jmp
push
mov
shlb
out
inc
push
jg
cmc
outsb
sbb
sbb
cli
aas
sahf
in
cld
xor
shrl
imul
es
mov
push
and
mov
xchg
adc
inc
mov
iret
cld
popf
inc
cmp
in
xchg
adc
scas
insl
lahf
jo
pop
inc
shll
push
stos
mov
mull
pop
cmp
mov
add
mov
repnz
xchg
dec
and
imul
inc
adc
sbb
insb
pop
jle
loop
in
call
and
xchg
outsb
mov
imulb
loopne
das
inc
jecxz
add
dec
in
enter
mov
out
jecxz
out
daa
or
insb
lret
sub
nop
adc
test
adc
std
stc
out
sbb
xchg
lds
push
insl
or
jge
pushf
js
lea
adc
in
int3
or
mov
js
and
fs
stos
dec
jns
iret
out
mov
sahf
add
cmp
shll
dec
cmp
bound
aas
inc
fldl
mov
sub
fcomip
mov
pop
leave
dec
cmp
xor
jg
adc
xchg
leave
test
sbb
pop
inc
add
adcb
lds
adc
shl
mov
mov
mov
mov
pop
cltd
or
xor
jmp
ss
xchg
outsb
jge
pushf
repz
sub
push
cmpsb
cltd
or
mov
sbb
cmpsb
mov
dec
repnz
mov
mov
adc
es
inc
xchg
sub
mov
xchg
dec
sub
mov
hlt
adc
or
pop
loope
or
lea
adc
and
sbb
xor
fwait
xchg
mov
imul
jae
add
sub
and
out
xchg
cmp
mov
pop
push
push
sbb
mov
cmpsl
or
iret
xchg
jae
mov
cmp
sbb
les
or
sub
xor
xor
jmp
cmp
xchg
rcrb
nop
push
lea
jmp
and
mov
mov
call
inc
cmpsb
cmc
xchg
enter
cmpsb
push
mov
adc
clc
inc
sbb
fwait
mov
cs
xchg
push
mov
and
pop
mov
shll
fwait
hlt
mov
pushw
ja
lods
dec
mov
ss
pusha
shr
ss
add
cmp
adc
mov
mov
out
push
adc
in
xor
hlt
add
lock
mov
incb
push
xchg
xlat
enter
imul
mov
pop
xor
sub
adc
adc
rcrl
cwtl
and
pushf
mov
repnz
cmc
jno
repz
jbe
sub
mov
repnz
adc
jg
lret
fwait
mov
repnz
and
sub
mov
dec
rcll
in
push
xorb
pop
mov
inc
jbe
mov
push
hlt
int3
mov
sub
mov
sub
mov
dec
jge
leave
xchg
call
loop
cmpsb
les
pop
xchg
pop
or
and
mov
push
inc
dec
imul
push
or
aaa
jecxz
sub
xor
add
scas
inc
and
shlb
icebp
loope
or
ja
adc
jl
bound
mov
adc
inc
or
fwait
into
out
rcl
ret
cs
mov
cmpsb
ret
call
cmc
out
jmp
adc
xchg
cmp
imul
std
stos
dec
jl
sbb
pop
pop
and
out
mov
dec
shll
push
gs
inc
movsl
cmp
lret
stc
adc
xchg
xor
or
rorb
mov
bound
dec
adc
sbb
int3
faddl
mov
push
cltd
mov
xor
dec
stos
sub
clc
xor
rcr
lret
push
dec
aam
cmp
js
fisubs
add
subb
add
sub
iret
sub
ret
cmp
testl
jge
std
decl
leave
inc
mov
dec
mov
or
adc
dec
xor
addr16
rol
hlt
mov
not
mov
rcrb
into
iret
int
push
inc
aaa
push
sub
mov
mov
mov
xchg
sub
fdivrl
add
in
push
out
incb
test
jns
sub
inc
xor
fbstp
sbb
jb
cmp
andb
push
push
scas
cmpsl
sti
cs
sahf
dec
loop
fs
xchg
jno
movsl
notl
and
and
jle
or
mov
mov
dec
add
mov
mov
outsb
and
clc
xor
shl
lods
adc
addr16
and
mov
fs
stos
xchg
lds
mov
mov
icebp
and
adc
sub
jecxz
mov
das
int
std
add
in
ret
push
shll
test
sbb
push
cld
pusha
sub
je
stos
inc
inc
outsb
or
mov
scas
je
fisubrl
add
cmp
mov
sub
iret
test
mov
mov
rcl
test
sub
dec
pop
arpl
sbb
lcall
inc
pop
jae
nop
fwait
lcall
xor
or
stos
fst
mov
das
testb
cmpsl
out
push
aaa
out
loopne
add
mov
sub
jge
frstor
hlt
addb
pop
add
rcll
sbb
add
fwait
adcb
cmp
fsubs
and
jg
push
sbb
and
iret
jge
fisttpll
xchg
enter
mov
and
jns
xor
movl
jl
in
fcmovb
mov
rorl
ja
cmpsl
pop
sub
dec
movsb
or
lods
shrl
jnp
int3
jbe
out
leave
xchg
add
xchg
jg
shl
cmp
orl
push
pop
or
cmp
mov
cmpsb
fdivrs
in
lea
std
jg
add
andl
mov
mov
mov
push
mov
mov
mov
loop
mov
scas
xchg
lcall
ret
insb
cld
ret
lret
and
jecxz
cmp
roll
cmpsl
mov
movsl
pop
pop
pop
clc
sbb
lahf
insb
push
je
popf
mov
adc
stc
dec
sub
popf
push
push
insb
in
jns
outsl
sub
aad
push
rdtsc
xchg
call
cmp
shl
adc
mov
pop
sbb
hlt
pop
jmp
inc
iret
dec
jmp
rcrb
xor
ljmp
hlt
mov
sbb
daa
and
ficoml
out
dec
ja
enter
ds
arpl
sub
fsubs
cmp
gs
push
dec
leave
pop
xchg
push
push
cli
int
test
push
arpl
xor
bound
insl
lods
push
mov
jb
push
dec
sbb
or
ror
or
mov
pop
pop
scas
xchg
inc
cmpsb
cli
ja
pop
cmp
scas
movsb
cld
jg
nop
sbb
and
push
mov
pop
jl
add
in
in
jg
outsl
test
ds
mov
lcallw
inc
mov
push
inc
mov
or
push
push
cmovg
sbb
mov
mov
into
fsubl
fisttpll
lcall
and
movsl
mov
nop
movsl
in
daa
popf
imul
mov
pop
bound
sub
cs
pushf
cmp
push
push
add
pop
sbb
jecxz
insb
pushf
aaa
sbb
repz
ret
jae
adc
and
fnstcw
push
xchg
insl
push
or
enter
fsub
lock
addr16
mov
shrl
in
rep
push
bound
push
mov
mov
ret
int3
mov
arpl
or
out
push
loope
insl
push
or
lock
iret
cmpsb
pop
dec
jbe
paddw
add
je
lahf
sbb
or
mov
mov
mov
cld
ljmp
clc
push
mov
push
xchg
fsubp
or
sbb
mov
mov
insb
data16
pop
aam
lock
jno
movsl
mov
cmpsb
in
scas
pop
lahf
mov
mov
pop
cltd
cmp
ja
pop
das
arpl
fidivrl
mov
or
push
push
mov
pop
pop
jns
cmpsl
adc
mov
sub
insb
enter
cmp
ds
fs
push
aas
cs
sub
mov
sbb
cli
mov
addr16
out
pop
pop
jecxz
push
push
cli
cmp
outsl
add
cmp
repz
push
std
or
faddl
cld
and
jl
pushf
negb
adc
cwtl
inc
mov
popf
push
jae
int3
sub
sbb
scas
popf
push
push
hlt
rclb
test
rcl
rorb
pop
xor
fucomip
jbe
jbe
in
jmp
jmp
cli
divl
clc
and
push
xchg
xor
mov
mov
in
inc
ss
ficomps
in
sub
cmp
mov
dec
cmc
in
xor
cmp
sbb
js
out
mov
sbb
cld
jnp
cld
or
cmp
jl
inc
adcb
inc
jp
and
push
push
inc
or
clc
jmp
inc
int3
add
popa
shlb
js
cmp
cmc
icebp
out
or
adc
shrb
adcb
fcoml
adc
xor
cmpsl
ljmp
dec
adc
sbb
int3
dec
pop
leave
push
jg
pop
into
dec
ret
add
mov
gs
jmp
push
cld
das
jbe
xchg
setno
popf
mov
repnz
push
imul
std
add
sarb
out
imul
stos
rorl
shl
or
subl
xlat
inc
mov
fnstenv
mov
inc
fnsave
imul
xchg
stos
pop
loopne
mov
add
hlt
call
and
pusha
ja
loope
or
out
inc
lods
jbe
pop
loopne
dec
je
jecxz
insl
xchg
out
inc
pop
add
push
test
sub
mull
popf
or
mov
outsb
inc
movsl
popf
mov
cmp
fwait
cmp
or
add
in
dec
fsts
cli
jbe
inc
clc
push
outsb
loope
mov
rclb
xor
mov
xchg
push
mov
imul
add
dec
je
sub
sbb
push
adc
cmp
sub
cltd
adc
xor
stos
daa
mov
pop
add
add
rcll
loopne
mov
mov
fisttpll
je
das
sbbb
dec
adc
inc
adc
xor
test
pop
cmp
ljmp
jp
repz
and
add
and
mov
jmp
jno
fistpll
adc
ret
adc
push
jb
aas
loopne
xchg
cs
fistl
div
movsb
test
insl
cmc
sub
jb
jnp
lret
test
hlt
out
jno
clc
dec
jb
hlt
mov
fs
mov
jno
out
and
fdivr
js
test
jle
jne
cli
jge
addr16
pusha
js
popf
xchg
cmp
xchg
aam
mull
adc
jecxz
test
mov
push
mov
cmpsb
das
rcr
aaa
loopne
dec
das
and
aam
fsubs
and
mov
aas
scas
sbb
mov
xchg
or
sbbb
ficoml
dec
sub
fistps
add
outsl
sbb
xchg
jmp
loopne
xor
inc
dec
lea
aaa
cld
sub
in
mov
dec
cmp
mov
add
stos
jecxz
dec
push
pop
push
bound
sti
dec
call
adc
aam
sub
mov
xchg
mov
clc
out
cli
int
lret
push
adc
dec
outsb
mov
inc
xchg
cmp
mov
add
sub
shlb
orl
les
xchg
imul
rolb
mov
sbb
inc
bound
insl
push
jmp
or
hlt
pop
sub
inc
gs
push
in
lods
mov
sbb
add
aam
lods
lret
push
notl
je
int
push
or
lahf
hlt
mov
test
cli
mov
clc
stos
push
xor
movsb
lcall
iret
sub
mov
add
pop
jg
out
xor
mov
pop
and
mov
cmp
dec
frstor
dec
add
call
xchg
lret
data16
inc
imul
es
mov
out
xor
pop
repz
setb
mov
aas
repnz
in
mov
sbbb
call
insl
inc
psllq
stc
fidivs
addr16
push
arpl
cmp
es
test
push
jp
add
pop
pop
inc
sti
jnp
mov
mov
push
adc
sub
mov
fs
add
test
push
jbe
test
in
outsl
push
and
adc
pop
xchg
inc
xchg
rol
cmc
cmp
pushf
jno
mov
xor
mov
out
ss
dec
jmp
icebp
aam
sarb
imul
push
out
mov
roll
clc
cwtl
imulb
xchg
xor
pushf
fdivrl
in
xchg
inc
into
ret
mov
test
flds
cltd
movsl
popa
ja
xchg
pop
loope
push
and
cmpsl
stos
push
into
into
inc
push
in
test
pop
push
or
cli
imul
fisubs
repz
mov
cmc
adc
mov
test
adc
dec
mov
dec
mov
jecxz
or
add
addl
outsb
cmp
pop
jl
stos
es
ljmp
xchg
das
ljmp
push
lds
mov
out
mov
and
xor
jle
xlat
dec
int
xor
xchg
stos
push
sub
and
rcll
test
pop
testb
jge
xor
add
aaa
ljmp
pop
push
mov
sbb
inc
shll
add
rcrl
cmc
jg
lods
scas
cmp
adc
mov
adc
mov
or
sahf
push
dec
sub
xor
stos
hlt
pop
mov
ljmp
jno
fcmovnu
stos
jae
mov
shrb
or
inc
inc
testb
push
xor
je
cltd
cmp
push
sub
mov
test
aaa
mov
dec
push
sbbb
imul
xchg
movsb
or
fcmovnbe
dec
and
and
mov
testl
aad
cmp
push
push
jp
rcl
adc
cltd
dec
fwait
mov
orb
xchg
nop
adc
hlt
cmp
pop
sub
push
fdiv
mov
test
pop
das
pop
js
pop
push
pop
lods
jbe
in
push
iret
cltd
fs
xorb
shl
lret
dec
lock
dec
pop
and
mov
movsl
sahf
lods
mov
inc
sbb
dec
push
cli
lods
out
mov
fidivl
inc
shr
lds
mov
and
insb
clc
sub
sbb
cmp
push
lret
pop
inc
es
idivb
inc
lcall
lods
adc
cmp
testb
popa
mov
in
inc
or
jae
sbb
repnz
pushf
mov
shrl
stos
das
jb
mov
adc
fstpl
out
rol
or
movsb
mov
cli
jb
jb
mov
add
sbb
loopne
aaa
jmp
push
dec
mov
js
xor
push
je
int3
push
mov
adc
imul
or
jae
xor
mov
mov
push
mov
or
jge
push
movsb
in
fwait
xchg
push
ss
insl
sub
stos
leave
icebp
in
dec
fidivrl
push
mov
ffreep
push
and
sub
enter
scas
mulb
and
mov
lea
dec
add
pop
inc
dec
ljmp
xchg
add
hlt
icebp
stos
outsl
inc
xor
inc
pop
test
jno
movsb
push
jb
mov
mov
lret
popf
popf
and
push
test
in
inc
imul
inc
test
lds
sub
in
or
icebp
insl
pop
insl
xor
inc
por
pop
stos
or
pop
jae
mov
pop
push
lahf
mov
insb
push
pop
sub
mov
in
adc
aad
or
cltd
loopne
in
aaa
cmpsl
movsb
mov
popf
add
sbb
sub
mov
pop
leave
das
jno
mov
jbe
pop
fsts
cmp
aaa
stos
rolb
pushaw
insb
outsl
mov
mov
ja
out
push
push
fcom
int3
gs
push
dec
fisubs
jge
repnz
inc
stc
adc
push
cmp
mov
jb
jb
dec
and
int3
iret
jmp
shll
sub
and
ljmp
and
cmpsb
imul
dec
pop
movsb
adc
stos
sub
adc
push
test
sti
lods
sbb
dec
popf
call
popf
in
lods
dec
insb
aam
mov
je
loope
jns
aad
mov
or
notb
lock
pop
xchg
stos
jmp
imul
pop
hlt
les
pop
ds
sbb
loopne
aaa
adc
adc
mov
cli
mov
cmp
dec
xor
push
dec
lods
enter
lods
sbb
adc
gs
popf
xlat
fistps
int
inc
xor
repz
sti
and
fisttpl
inc
pop
int3
rclb
out
jne
and
outsl
inc
xor
subl
pushf
outsb
push
dec
inc
imul
push
push
jmp
sub
cmpsl
dec
cltd
mov
aaa
aaa
cli
decl
in
push
int3
in
ret
out
and
rol
cmpsl
mov
pop
stc
or
jb
and
ficoms
in
pop
sahf
test
filds
aad
iret
jns
stos
sbb
xchg
mov
xchg
xor
dec
imul
je
cltd
or
leave
and
sbbl
shll
sub
and
movb
stc
adc
xchg
adc
ja
inc
testl
xchg
adc
cmpsb
loopne
and
mov
aam
sti
sbb
in
data16
sbb
cmc
pop
lds
dec
popa
test
jp
sahf
push
xchg
mov
xor
scas
add
stc
jle,pn
pop
outsl
stos
sub
ds
mov
adc
test
movsb
movsl
pop
mov
loop
adc
jbe
pop
mov
lods
lret
pop
mov
jp,pn
lods
int3
add
cmp
xor
cmp
sbb
pop
ja
clc
ret
adc
xchg
cwtl
adc
pop
inc
inc
popa
xchg
popa
jmp
leave
shrl
jmp
mov
cli
xchg
insl
subl
enter
xchg
iret
fbld
movsb
shrl
test
lock
sbb
add
scas
sub
clc
rclb
xorb
pushf
js
rcl
out
ror
mov
push
loope
push
icebp
or
shll
jb
jl
inc
in
push
mov
insl
pop
push
and
and
cwtl
pop
cmp
std
stc
dec
loope
cmpl
neg
dec
cmc
pop
push
mov
mov
negl
and
or
clc
cmc
mov
adc
cli
orl
mov
and
hlt
dec
mov
mov
mov
imul
mov
sahf
aad
add
mov
stos
mov
mov
out
js
inc
add
add
mov
aad
or
fcomi
adc
dec
inc
negb
xorb
and
push
sarl
daa
add
imul
pop
leave
pop
scas
loope
push
push
rorl
jle
dec
pop
fs
int
mov
xor
xchg
hlt
mov
mov
jbe
sbb
call
lret
mov
insb
mov
in
xor
cmp
imul
sbb
pop
cmp
sbb
and
mov
fimull
xchg
dec
or
mov
xchg
dec
xor
cmp
pop
lds
sub
fidivs
cmpsb
in
push
hlt
pop
add
mov
and
rclb
insb
lcall
push
jmp
arpl
push
xor
cld
or
dec
cltd
pop
jnp
ss
inc
mov
test
xchg
int
pop
mov
mov
dec
mov
sub
mov
jnp
aas
loop
cmp
repnz
popf
and
add
inc
ja
aam
xlat
jae
jg
xor
dec
aam
cltd
xchg
and
fwait
pushl
cmpsb
lret
xor
xor
out
or
ja
push
xchg
and
push
xor
jno
mov
cld
jmp
stc
inc
inc
rolb
push
add
mov
ds
mov
inc
and
sahf
rep
mov
xchg
add
sbb
mov
aam
mov
inc
and
insb
icebp
js
loope
test
ds
push
sbb
js
adc
int3
lods
jns
fcmovbe
jb
xchg
or
dec
push
sbb
pop
enter
dec
cmpsb
sbb
mov
popa
jne
and
movsl
test
fs
jns
and
popf
push
repz
dec
icebp
leave
mov
jmp
repz
pop
xchg
xor
cmp
fwait
punpckhbw
andb
fimull
push
adc
pop
xchg
imul
xor
js
scas
xchg
clc
scas
aas
bound
push
fisubl
mov
pop
inc
mov
fsubl
in
fmuls
push
lret
inc
adc
scas
pop
xchg
sbb
lds
pop
xchg
adc
mov
xchg
mov
inc
inc
mov
dec
mov
lret
mov
scas
mov
loop
out
sbb
xor
les
les
cmp
mov
jl
or
pop
hlt
add
add
in
add
dec
loop
insb
jmp
add
call
pop
jns
enter
popa
jmp
xor
iret
sub
addr16
sarl
xchg
inc
mov
sahf
or
inc
inc
pop
pop
sti
xchg
addr16
xor
mov
adc
jne
arpl
cmp
pushf
dec
sbbb
inc
dec
rorb
hlt
mov
fs
xchg
adc
xor
inc
sbbl
mov
jne
not
pop
gs
mov
push
shlb
xchg
sub
ret
mov
xor
out
cmpsb
movsl
sbb
jns
add
add
push
mov
jno
inc
repnz
xchg
in
jns
dec
xchg
jle
sbb
adc
xor
and
mov
insl
mov
jns
bound
push
arpl
lret
fwait
xchg
enter
xchg
iret
mov
dec
lcall
ret
xchg
fdivl
jne
pop
clc
loopne
adc
mov
cmp
cwtl
inc
pop
repnz
sub
or
cmpsb
add
xchg
sar
add
lds
cli
push
sar
ret
shlb
fadd
shl
div
xchg
sub
cmc
das
mov
adc
xchg
jnp
daa
mov
mov
daa
jns
push
cltd
shl
pop
out
repnz
sub
test
and
sub
jmp
mov
adc
sbb
cmp
rolb
mov
mov
je
or
bound
mov
scas
daa
dec
sbb
push
imul
mov
sub
push
out
cmovb
fwait
nop
push
push
in
mov
xchg
jl
aad
mov
mov
jbe
mov
mov
pop
int3
sub
pop
data16
shlb
push
inc
clc
sbb
push
pslld
cmp
sbb
addr16
sbb
call
lods
fidivl
push
mov
cmp
out
mov
sbb
inc
adc
mov
jp
mov
fadd
add
lcall
cmp
sub
fucomi
popf
stc
xchg
sub
ja
rorb
pop
xor
dec
aam
js
ss
jg
int
jnp
leave
fwait
movsb
shll
lea
push
pop
push
mov
cmp
inc
mov
or
in
inc
dec
mov
test
and
sbb
stos
lahf
pop
pop
cld
inc
subl
xor
mov
sub
or
mov
das
fs
mov
shll
rcrl
adc
addr16
mov
ret
sbbb
into
outsb
mov
adc
xchg
movsb
adcl
dec
je
clc
fimuls
pop
push
dec
push
mov
fnstcw
xchg
push
jnp
or
rorl
ds
sbbl
mov
pop
dec
outsl
arpl
rorl
mov
inc
sub
inc
or
sahf
sub
aam
and
xchg
mov
inc
js
mov
shrb
rorl
add
pop
popa
push
outsb
mov
pop
push
test
test
xlat
scas
cmpsb
sbb
lock
int
repnz
sahf
cmpsl
adc
sbb
xchg
lret
loop
mov
shl
imull
xor
pop
add
mov
push
icebp
push
mov
cltd
jge
xor
lds
cli
jae
mov
mov
out
nop
test
lret
shrl
dec
xor
testl
clc
add
push
pop
jl
lcall
popf
jno
rolb
xor
or
mov
lods
jecxz
pop
mov
mov
mov
push
inc
mov
int
enter
enter
dec
ret
iret
insl
daa
pop
std
out
jae
push
xchg
insl
sub
mov
repnz
cwtl
sub
in
fnstsw
sbb
loop
mov
sub
mov
jnp
add
xor
mov
pop
cmp
add
out
pop
xor
push
das
jl
push
mov
in
sti
push
outsl
push
outsb
test
xchg
mov
and
lods
and
sarl
pop
add
sti
jo
inc
push
loopne
fs
add
mov
add
sbb
pop
mov
aad
cld
jae
ds
int3
push
or
sub
das
mov
jp
mov
sbb
addl
imul
adc
mov
push
sbb
sbb
pushf
push
jmp
or
mov
push
fdivs
ret
mov
or
mov
roll
sub
je
cs
inc
andb
out
cltd
mov
sub
xlat
jg
adc
add
bound
test
out
in
test
dec
pop
push
add
cmpsl
jmp
and
or
aaa
filds
ds
mov
xchg
inc
cmpsl
add
dec
mov
popa
in
xor
fucomip
dec
loope
inc
xor
loopne
stc
mov
mov
mov
rcrb
mov
jns
lcall
repnz
popf
stos
gs
in
cs
shrb
idivb
inc
ds
cwtl
xlat
pop
out
push
jecxz
push
and
pop
mov
lret
data16
sub
mov
repnz
rcrl
or
push
pushf
movsl
out
mov
adcl
xchg
xor
xchg
push
sbb
cs
testb
lods
jbe
mov
stc
in
xchg
mov
pop
mov
sub
jns
push
or
adc
popa
sbbb
push
or
subb
icebp
push
movb
add
add
int3
ret
aad
push
cwtl
rorl
pushf
outsb
mov
and
scas
xchg
jmp
jmp
orps
hlt
ret
cltd
inc
in
jb
mov
loope
loopne
das
mov
adc
add
vphaddbq
xor
xchg
ljmp
mov
dec
divb
xchg
pusha
iret
adc
push
sbb
xor
cmp
ret
inc
jl
add
mov
into
inc
cmp
push
gs
dec
mov
das
cmpb
lcall
sti
cmp
loope
loop
push
fldenv
sub
les
adc
mov
movsb
cwtl
stos
and
fbld
lret
aam
jne
or
je
cs
lcall
adcl
into
lea
and
adc
call
push
insl
mov
mov
int3
push
repnz
jmp
add
out
pop
popf
movsl
push
popa
test
cmp
arpl
mov
out
xchg
or
in
push
sbb
push
test
inc
loope
loopne
das
js
pop
in
adc
push
out
adc
jecxz
or
jecxz
inc
mov
push
pop
cs
or
cs
jbe
push
push
push
mov
jg
jg
dec
mov
lahf
inc
arpl
push
cwtl
lock
inc
or
sti
or
stc
jae
mov
test
aad
js
adc
or
pop
lret
imul
test
pusha
sbb
add
xchg
mov
dec
imul
xchg
jle
dec
adc
dec
fidivl
or
or
pusha
out
es
adc
adc
inc
aaa
fwait
cld
int
mov
jno
dec
jmp
push
arpl
dec
adc
fstp
movsb
fldenv
fisubrs
xchg
inc
mov
daa
jno
mov
xchg
gs
lret
ret
cmp
adc
notl
hlt
push
mov
sbb
mov
xor
gs
testl
cli
mov
or
or
jge
int
mov
hlt
xchg
and
ljmp
hlt
dec
test
in
mov
arpl
cwtl
je
addr16
pop
fs
fidivl
addl
in
pop
rcrl
xchg
push
lret
lahf
lcall
nop
sub
stos
mov
add
dec
add
inc
fadd
inc
push
out
xor
pop
inc
rcrl
fwait
repnz
shll
inc
dec
imul
mov
jae
xor
jmp
adc
pop
shlb
lods
push
mov
lea
sbb
push
in
movlps
sbb
outsl
in
jle
mov
aam
mov
xor
neg
addr16
aam
fstps
in
es
js
mov
adc
dec
int
jge
pop
pop
sub
aas
lret
jnp
sbb
bound
stos
movsb
mov
mov
and
scas
cmp
inc
pusha
es
aas
fsubs
stc
in
ficompl
mov
fsubp
sti
ds
lods
lods
fiadds
cmc
cmpsl
xchg
pop
push
aas
gs
jbe
jae
loop
inc
add
xchg
lock
mov
in
inc
wrmsr
mov
pop
aas
arpl
dec
insl
cmp
pop
xchg
lcall
test
xor
push
lret
test
push
pop
je
inc
mov
xlat
push
in
imul
mov
inc
movsb
sub
jl
fdivrs
scas
cmp
xlat
jbe
cltd
mov
jae
lods
aam
movsl
xor
mov
iret
pop
stc
mov
mov
cmc
inc
sahf
xchg
pop
out
and
shll
movsb
dec
mov
in
cmp
inc
fisubrs
rorb
stos
mov
or
xchg
push
shll
push
pushf
stos
std
dec
sbb
loop
jnp
dec
adc
push
xor
cmp
out
or
jle
stos
xor
cmp
pop
jae
xor
xor
push
fcoml
adc
inc
inc
fwait
jae
xchg
xchg
pop
lret
cmc
jge
inc
cmp
dec
dec
movsb
mov
out
aam
cmp
dec
and
xor
jno
stc
rcr
pop
sbb
push
xchg
push
sbb
call
xor
xor
std
xchg
mov
cltd
loope
jle
loop
mov
out
jge
xorb
out
std
add
lcall
mov
inc
jbe
icebp
adc
xchg
cld
mov
xchg
cmpsb
cmp
sub
ss
push
cmpsl
icebp
subb
int
loope
mov
push
popa
js
or
movsl
dec
and
cmp
hlt
sahf
dec
and
push
mov
ret
imul
stos
mov
dec
popf
das
std
rclb
aas
jge
pop
sahf
add
js
xlat
test
jo
add
xchg
xchg
push
push
cmp
cmp
mov
int3
mov
mov
adc
mov
inc
stos
jns
enter
das
test
testl
jo
hlt
enter
fildl
ficomps
fstpl
push
imul
dec
sub
cmp
icebp
mov
ljmp
daa
lret
loop
ficoml
add
mov
loop
add
push
imul
xchg
shll
mov
jnp
daa
xor
or
adc
in
out
pop
mov
cwtl
and
in
adc
or
inc
push
add
popf
mov
pop
dec
xor
mov
and
cmc
aam
jecxz
int3
lcall
lret
ljmp
rcll
jo
mov
fimuls
dec
movsl
test
imul
imul
test
pop
sub
cli
pop
push
xor
outsl
jnp
lock
xchg
aam
add
out
push
xlat
scas
jp
cwtl
pop
fidivl
pop
push
leave
cmc
cmp
jns
push
icebp
dec
test
insl
js
into
repnz
lods
xor
xchg
sbb
dec
xor
or
sbb
and
jnp
add
inc
int3
jne
aaa
std
popf
mov
into
xchg
sahf
mov
fwait
sti
pop
mov
mov
sub
in
dec
mov
dec
jmp
push
std
jl
push
cmp
jne
push
sbb
lret
sbb
stos
cmp
jmp
mov
jp
cmc
adc
nop
std
icebp
icebp
pusha
out
decb
adc
or
pop
cltd
pop
out
jb
sbb
mov
sbb
adc
jl
arpl
repnz
test
and
push
push
js
in
popf
and
xchg
jg
jl
aam
pop
jmp
jo
or
adc
push
pusha
cmp
push
dec
pop
out
sub
add
enter
add
add
sub
insb
cs
mov
jb
cmpsl
xchg
add
adc
mov
adcl
data16
rorb
mov
cmp
jl
popf
sub
out
aam
add
dec
adc
pushf
dec
or
mov
push
stos
mov
inc
test
xor
imul
sub
lds
jno
in
lea
sbb
xor
fildl
ret
aad
and
insl
push
repz
sub
or
adc
xchg
pop
xor
sbb
sti
out
decb
mov
insl
push
or
test
lds
mov
xchg
pop
and
adc
mov
sbb
or
leave
mov
cmp
xchg
jb
in
pop
repnz
in
popf
and
dec
les
dec
xlat
pushf
xchg
and
sub
test
lret
sub
lea
mov
pop
popa
arpl
pop
lret
cs
or
mov
xchg
roll
mov
or
pop
xchg
mov
faddp
in
int3
iret
push
push
mov
push
sub
pop
lret
aas
xchg
push
adc
and
push
add
int
sarb
cltd
test
add
std
fwait
divps
add
push
or
fwait
repz
sbb
je
push
mov
push
inc
push
in
fdivs
add
rcll
xchg
or
inc
test
jno
cmpsb
push
or
sti
cmp
inc
sbb
xor
add
dec
inc
in
or
iret
adc
or
push
out
nop
mov
push
rclb
mov
imul
jg
jmp
rcrl
inc
aad
sbb
or
fistps
subb
xchg
sub
loope
cwtl
xor
nop
mov
stos
pusha
jp
enter
pusha
or
test
ds
repnz
jl
and
ljmp
mov
fucomip
aam
lds
sahf
xchg
push
rcrb
xor
xor
sbb
or
insl
repnz
pop
outsb
lds
rcrl
lock
outsl
push
clc
inc
outsw
ds
in
cmp
test
hlt
xor
out
sti
stc
mov
mov
popf
and
xor
pop
add
roll
ss
fs
pop
insl
add
cmp
jmp
repz
mov
bound
sub
cmpsl
shrb
repnz
mov
clc
xchg
out
dec
mov
shlb
daa
mov
dec
fisubrl
sbb
ss
sbb
push
data16
push
je
fwait
aam
lret
js,pn
adc
decl
pop
and
mov
test
mov
icebp
mov
pop
int
into
out
jg
int
cmpsl
or
or
cwtl
xor
push
dec
clc
and
jae
fwait
dec
fisttpll
push
pop
test
pop
xlat
mov
lret
nop
rclb
das
call
fsqrt
clc
int3
push
test
add
bound
fwait
test
pop
ss
sarl
and
mul
adc
jne
xchg
mov
in
add
sbb
xchg
push
subb
fdivs
outsl
cmp
lea
testb
mov
xor
sub
sub
mov
popf
push
iret
mov
out
lahf
or
xchg
stos
sarl
mov
loopne
mov
insl
lret
inc
mov
cli
ficoml
xor
mov
mov
iret
cmp
or
xor
cmpl
mov
mov
into
mov
sysexit
sbbl
push
sub
leave
leave
scas
mov
pop
sarl
pop
bound
mov
adc
lods
add
imul
lret
insb
mov
or
and
xorb
sbb
movsl
jns
loope
adc
repz
dec
mov
test
mov
das
jns
mov
stc
sub
lods
push
sbb
lods
daa
xchg
test
adc
cmp
and
iret
add
pusha
shll
fnstenv
xorb
xchg
mov
xor
sbbb
cmpsl
push
loop
pandn
sub
in
push
sub
push
xchg
pop
add
sti
or
pop
repnz
jecxz
and
sahf
or
xlat
sbb
xor
push
jnp
in
iret
movsl
outsb
dec
or
scas
int3
xchg
pushf
sub
sub
in
sbb
aad
mov
sub
stos
sbb
aam
ss
xor
addr16
sbb
leave
sub
ret
jg
pusha
aam
fimuls
push
fs
adc
sub
mov
jne
addr16
clc
loop
push
fnop
adc
sbb
loopne
dec
sub
mov
inc
xchg
lods
jg
cmp
popa
jbe
outsl
jb
xor
add
jp
dec
sbb
mov
pop
mov
cmpsl
jns
popf
in
push
ss
ss
add
cmp
dec
cmp
dec
scas
jae
sub
mov
cltd
sbb
add
or
enter
xor
jle
dec
jb
daa
jnp
pop
test
dec
cmpsl
rcll
or
test
mov
jge
inc
xchg
pop
iret
hlt
sub
xchg
movzbl
adc
leave
dec
mov
jo,pn
jo
addr16
iret
mov
mov
jle
jecxz
push
xchg
sub
xor
iret
cs
imul
js
sti
dec
adc
movsb
xor
push
add
arpl
cmp
inc
or
les
mov
adc
into
or
pop
ja
sbb
js
cld
mov
scas
lds
mov
mov
imul
inc
jnp
adc
fs
fisubl
pushf
pop
sub
jp
push
mov
pushf
aam
pop
sub
inc
sarb
repz
push
cltd
mov
and
pop
lret
in
adc
repnz
test
mov
sub
stos
es
imul
enter
pop
push
roll
out
xor
sbb
inc
cmp
mov
sbbb
pop
mov
into
inc
iret
push
stc
loop
push
cld
xchg
mov
push
in
sub
fucomp
test
into
xlat
mov
inc
xchg
enter
loop
inc
jmp
in
daa
rol
xchg
loope
iret
and
inc
sbb
or
insb
mov
dec
xchg
mov
pusha
jge
fildll
pop
jecxz
call
lahf
negl
sbb
jle
ret
inc
cmpsb
js
cmc
sahf
clc
rolb
scas
fs
adc
enter
pop
push
addl
xor
inc
lock
js
loope
add
lcall
mov
adc
xchg
and
subb
insb
push
mov
sbb
das
xor
shrd
cmp
jno
repnz
out
jge
and
insb
stos
in
in
xlat
mov
push
xchg
popa
inc
pop
pop
popf
in
inc
cmc
adc
mov
fisubrl
sbb
enter
xlat
jge
xchg
sbb
cmpsb
movsb
dec
push
push
inc
shl
push
jnp
ljmp
pop
jl
aas
mov
cmpsb
mov
push
jae
flds
mov
imul
adc
xor
arpl
roll
lahf
lcall
jecxz
aas
cld
jp
mov
mov
js
cltd
ljmp
add
or
fucomip
xchg
icebp
mov
leave
dec
callw
out
inc
je
nop
sub
stos
sub
push
add
pop
pop
or
mov
das
pop
xor
xchg
cltd
xchg
sahf
aas
test
rdmsr
pop
adc
jo
push
fs
mov
jmp
bound
lret
mov
inc
addr16
sbb
dec
pop
leave
or
mov
into
fldcw
sbb
pop
lea
mov
jae
mov
jle
pinsrw
sub
aad
fimuls
cmp
in
orl
xchg
jnp
add
cmp
popa
popf
or
pop
aad
mov
notl
cli
jo
mov
mov
fwait
adcl
jne
push
call
std
mov
inc
mov
jno
sar
mul
pop
inc
xor
imul
not
fidivrs
jmp
insl
stos
cltd
push
mov
fs
into
add
fidivs
xchg
jmp
int3
cmc
mov
ret
push
pop
and
add
cmp
push
sahf
std
jo
insl
cmc
mov
lcall
sbb
add
out
lea
or
pushf
lahf
inc
dec
or
pop
jp
sub
dec
mov
fimuls
divb
test
scas
ja
sbb
ljmp
adc
sahf
loop
cmc
cmp
mov
imul
mov
inc
adc
scas
inc
fnstsw
sub
arpl
fstpt
mov
pop
out
lods
cmc
jge
cs
sub
notb
dec
popa
add
dec
pushf
or
int3
mov
mov
mov
or
xor
ljmp
xor
jl
dec
cmp
imul
jbe
icebp
inc
movsb
mov
sbb
fwait
jb
shll
jnp
subb
or
shll
dec
adcl
gs
jge
jg
inc
sub
pop
jns
fcmovnbe
or
jo
sbb
es
jmp
or
and
or
sub
mov
mov
arpl
nop
pop
dec
ds
or
into
lds
fdivs
bound
clc
in
push
xor
stos
pop
insl
adc
das
sub
int
in
rolb
sbb
mov
cmp
outsl
lcall
scas
cli
pop
dec
into
enter
sbb
stc
add
mov
in
movsb
mov
xlat
data16
push
jbe
dec
jnp
cmp
dec
xchg
pop
nop
call
scas
mov
incl
dec
adc
nop
loopne
sbb
stos
jae
adc
aad
cmp
jge
dec
stc
pusha
sub
int3
fstps
insb
das
aad
pushf
cmp
outsl
push
cltd
fidivrl
test
clc
cli
jno
dec
jnp
js
push
jo
inc
inc
fnstenv
add
adc
in
push
pop
ljmp
cli
pop
pop
into
dec
test
jle
push
pop
not
bound
ret
lret
pop
lock
insl
cmp
sub
pop
shl
test
add
push
js
xor
push
stc
das
test
popf
inc
push
fstpl
cs
sti
pop
cmp
mov
repnz
cmp
mov
push
clc
pop
jns
pushf
ret
dec
cmpsl
addr16
mov
mov
jae
xchg
movsb
cltd
and
lods
icebp
mov
sub
das
mov
pop
xor
add
push
int
iret
and
xor
shlb
push
cmp
mov
mov
cmp
push
sub
stc
mov
add
adc
add
into
ret
in
fisttpll
adc
push
icebp
test
fildll
movb
into
test
arpl
jle
movsl
bound
fcom
pop
enter
and
fdivs
aad
mov
jl
test
cmp
dec
test
mov
cmp
xlat
dec
adc
pop
out
insl
test
jo
fisubs
insb
lods
jo
stos
icebp
rcll
dec
push
ret
not
fsubrp
pop
pushf
xor
mull
and
jg
and
cs
inc
sahf
ljmp
or
bound
mov
arpl
ss
add
rcr
jb
scas
lcall
xchg
mov
out
and
xor
cmpb
imul
aam
cmpl
imul
icebp
fstps
out
xlat
jmp
ret
fimuls
mov
ljmp
xchg
arpl
cwtl
aaa
das
jmp
fdivrl
xchg
inc
nop
ss
jns
xlat
out
xchg
pusha
cmp
mov
cmp
pop
mov
cmp
bound
lret
imul
or
xchg
cmp
pop
movsl
push
mov
xlat
call
loopne
mov
aad
hlt
addr16
adc
mov
out
cmpb
inc
outsb
push
lcall
push
sbb
inc
sub
adc
cmpsb
push
pop
in
mov
jbe
rclb
or
inc
shlb
fucomi
inc
cli
je
push
xchg
pop
xchg
int3
xchg
cmp
or
cmp
jne
testl
test
iret
cmp
sti
pop
call
jbe
sbb
idivb
push
hlt
push
jg
add
xor
clc
repz
mov
cwtl
mov
jo
in
mov
lds
add
lds
dec
and
fdivl
xlat
xlat
cmp
int3
inc
adcl
fimull
sub
cld
mov
push
mov
rol
pop
dec
out
aam
pop
sub
sub
aas
mov
ficomps
mov
std
pop
stc
xchg
push
scas
fcomps
adc
bound
hlt
cmpsb
mov
shlb
cmp
add
inc
jb
mov
pop
push
imul
xchg
mov
ja
sub
sub
jnp
mov
pop
adc
in
sub
aam
lock
and
mov
scas
shll
ret
xchg
bound
stos
jl
mov
adc
mov
lods
subb
dec
nop
push
cmpsl
xor
lret
ds
lret
out
sub
les
popf
mov
push
sub
in
cmpsl
sub
stc
loope
lcall
movsl
divb
mov
push
repz
fadd
xchg
andl
add
mov
xor
dec
dec
xor
outsb
icebp
push
push
xchg
cmpsl
mov
pusha
arpl
cmpsl
sbb
push
rcll
xchg
loopne
fsub
les
icebp
fistpl
cmp
push
xchg
fdivrp
enter
and
push
mov
bound
call
notb
and
test
shll
rolb
cltd
mov
adc
or
ret
fwait
sbb
decb
xchg
xor
notb
xchg
std
pop
out
cmp
jnp
jle
clc
sub
sbb
inc
stos
inc
lods
outsl
mov
iret
mov
mov
aas
mov
stos
insb
in
or
stos
jno
and
aas
pop
pop
imul
fcomip
mov
into
int
xchg
cmpsb
shlb
xor
lods
mov
test
lea
pop
mov
ds
mov
stos
mov
mov
lods
test
pop
push
or
xor
xorl
decb
cmp
mov
jne
dec
jno
aas
xchg
arpl
cld
fists
jo
leave
pop
push
adc
das
test
ds
jnp
lahf
adcl
push
xchg
xor
scas
rcrb
repz
fimuls
sub
fs
cmc
sub
lock
adc
data16
notl
mov
ss
dec
ljmp
and
sbb
cmp
mov
and
pop
adc
in
and
repz
dec
ret
scas
sub
ss
aas
repnz
dec
incl
dec
pop
dec
push
xchg
inc
cmp
int
dec
aam
cltd
int3
leave
mov
dec
adc
jmp
pop
add
pop
mov
push
test
xor
sbb
xchg
inc
mov
pop
jno
fimull
fldt
fidivl
xchg
push
cld
fildll
jns
mov
xor
jge
push
adc
and
sub
mov
mov
lret
xchg
stos
movsb
lds
inc
dec
imul
ja
into
fwait
inc
repz
mov
jle
imul
sbb
mov
inc
ds
cmp
inc
pop
movsl
into
mov
mov
fidivl
pop
pop
mov
sbb
mov
adc
mov
xchg
lods
loope
cmp
cmpsb
xchg
rcll
imul
add
xchg
sub
adc
mov
shrl
mov
xchg
mov
aam
int3
dec
push
mov
pop
xchg
cmp
sub
std
mov
andb
out
cmc
sti
cmpsl
jp
ja
cmp
pop
xchg
xchg
adc
sub
cwtl
mov
xchg
mov
dec
mov
or
adc
xor
outsl
pop
push
sti
js
add
push
addr16
ss
push
fcomps
push
daa
call
sbb
mov
sti
movsl
pop
xchg
xor
xchg
fldt
mov
dec
test
inc
scas
sub
sub
pop
call
sub
clc
mov
fldt
aam
push
imul
mov
dec
mov
inc
dec
pop
mov
cmc
dec
lods
inc
jns
insl
pop
into
ret
or
test
cwtl
sub
ljmp
insb
mov
add
jg
imul
add
mov
or
mov
negl
loop
cmp
sub
pop
mov
stos
in
lods
lods
lret
or
xchg
shl
ljmp
xor
adc
or
pop
inc
rolb
push
jg
cmc
leave
call
push
fistl
add
sti
cmp
dec
cmpl
adc
xchg
add
lahf
out
and
mov
loope
sub
and
fbld
fcomps
call
push
mov
jmp
es
aaa
mov
loopne
jle
xorb
and
ficomps
jae
push
dec
out
out
pusha
or
mov
pop
pusha
xchg
arpl
fisubl
pop
pop
pop
pusha
cs
push
mov
loop
pop
out
arpl
orb
insl
sbb
and
mov
and
int3
es
jno
ja
aam
dec
adc
cmp
popf
lret
or
mov
sub
add
mov
fcmovu
shrb
movsl
pop
dec
add
mov
into
mov
loope
pop
jge
cmc
and
out
cmpsl
rorb
pop
add
cs
int
xor
push
or
mov
imul
dec
add
aas
push
xchg
sarb
arpl
xchg
push
call
fmuls
jecxz
outsl
in
test
adc
lcall
and
mov
test
nop
jae
in
ja
push
mov
adc
ds
aam
mov
or
sub
xchg
jp
inc
jo
movsl
movsl
cmp
shlb
cmp
popf
lds
inc
cmp
xchg
add
adc
cmp
cmpsb
cmp
lcall
jno
push
push
xchg
ss
dec
pusha
gs
jmp
xchg
imul
mov
sarl
cmpb
repnz
cli
fcomps
lds
lret
fidivl
xor
adc
sti
inc
in
cltd
in
dec
lea
inc
out
sbb
xor
shr
mov
inc
add
loop
cmpl
push
cmpl
imul
adc
out
je
sub
push
inc
cld
lods
cmpsl
outsb
or
rorl
arpl
cld
data16
movsb
dec
and
xchg
inc
mov
pop
ljmp
data16
pop
iret
mov
mov
movsb
int3
cltd
mov
adc
stc
lods
ljmp
or
cltd
mov
fisttps
ds
pop
int3
stc
mov
push
outsb
ror
in
es
adc
add
clc
xchg
mov
jp
arpl
pop
inc
int3
xor
adc
pushf
add
pushf
lahf
lahf
push
lcall
movsl
lods
sahf
mov
mov
sbb
cltd
es
mov
adc
adc
pop
jmp
cmp
rcll
dec
xor
add
jb
dec
sahf
push
arpl
aam
sarb
xor
sahf
call
mov
outsl
mov
push
in
add
ja
aam
xor
popf
pop
mov
jbe
repz
cltd
clc
push
in
js
add
fistpl
fcompl
jo
or
mov
or
or
mov
xor
jecxz
repz
sti
pop
dec
insb
loope
dec
pop
loope
inc
aad
ljmp
sbb
mov
dec
mov
nop
repz
fcmovnu
inc
in
sub
insb
daa
add
stos
add
and
dec
mov
push
pop
test
andl
and
jne
rcl
jbe
add
pop
insb
mov
insl
test
ficomps
insl
cli
fwait
out
mov
mov
xor
movsb
aam
test
xchg
pop
call
inc
or
or
shll
sbb
push
sbb
insb
mov
sub
and
xor
or
adc
dec
rorl
push
sub
sbb
sbb
fcoml
push
add
ds
call
imul
pop
lahf
xor
test
pop
and
mov
hlt
and
xchg
shlb
add
call
mov
shlb
cli
rcrl
andb
inc
push
pinsrw
in
fisttps
js
jle
mov
pop
stos
adc
add
int
dec
rolb
stc
push
je
imul
jbe
in
sub
dec
sbb
cmp
les
jmp
shl
fcmovnb
add
dec
js
rclb
dec
aad
mov
jnp
push
mov
push
imul
jecxz
pop
loop
outsb
cmp
add
divl
movsb
clc
pop
inc
mov
sbb
out
or
pop
xchg
pushl
hlt
mov
imul
cmp
sbbl
xor
cld
and
jmp
test
pmulhuw
ljmp
sbb
cs
ja
dec
or
mov
js
dec
push
lea
std
ja
adc
adc
scas
dec
popa
mov
add
add
popf
xor
push
test
push
cltd
pop
and
outsl
stos
decl
lods
dec
int
jne
sub
ficoml
jae
pop
push
cltd
dec
xchg
lods
adc
sbb
int3
lods
dec
ss
fsubs
mov
mov
dec
pop
jmp
shrb
or
ds
xchg
test
lea
shld
test
faddl
and
pop
xor
jne
or
sbb
movsb
push
push
adc
or
or
sbb
nop
push
mov
lahf
mov
dec
jne
enter
push
xor
jb
mov
and
push
or
mov
testb
push
mov
adc
mov
shll
shr
fildl
bound
sub
pop
add
pop
dec
xchg
into
loopne
mov
mov
jae
push
mov
and
mov
push
stc
in
mov
sub
xchg
and
cmc
mov
out
inc
hlt
cmpsb
push
jne
cmp
int3
mov
jp
jae
ds
andl
mov
test
bound
cwtl
push
adc
stos
ss
pop
mov
xlat
inc
mov
aas
mov
and
mov
pop
cmp
push
into
enter
sbb
cli
jle
jmp
xchg
dec
jge
mov
push
out
je
adc
ds
fsubs
mov
xchg
js
sahf
add
jbe
inc
push
das
stos
out
mov
lea
shlb
adc
jno
sbb
jno
push
mov
dec
mov
ret
out
jo
cmp
cmc
lret
xchg
scas
aad
aam
and
pop
outsb
push
inc
loopne
js
int
cmp
push
jl
jp
test
adc
add
jp
xor
mov
and
sub
popa
inc
nop
adc
inc
xchg
into
repnz
adc
mov
push
mov
jp
sbb
call
ret
dec
push
push
nop
cs
jns
or
out
mov
fwait
aaa
add
push
mov
pop
ret
and
add
push
pusha
ljmp
idivl
push
inc
clc
cmc
xchg
and
push
fimull
mov
mov
out
dec
mov
jno
mov
popf
push
sbb
push
in
je
xor
dec
ret
inc
sub
idivl
dec
icebp
pop
mov
in
push
ds
sahf
idivb
pop
cmp
ja
icebp
jae
loop
js
out
hlt
mov
stos
hlt
lock
outsl
mov
addb
nop
mov
out
sub
or
popa
imulb
cwtl
dec
push
mov
xlat
push
sarl
xchg
jl
cs
in
mov
fwait
repnz
shrl
shrl
xchg
adc
and
add
mov
lcall
sti
pop
inc
push
jbe
pop
mov
push
iret
test
jnp
mov
dec
sbb
bound
in
pop
je
loopne
mov
adcb
insb
adc
ret
cmp
mov
jmp
hlt
sub
fs
add
and
adc
lret
stos
mov
cmp
cld
pushf
mov
cmp
dec
out
mov
push
and
bound
outsl
daa
xchg
xchg
sub
hlt
sti
aad
jno
xchg
xchg
je
test
adc
mov
sub
jg
cs
idiv
jmp
imul
pop
pop
mov
xchg
xorl
xchg
mov
adc
and
sahf
test
jge
adc
out
scas
sub
dec
outsb
sahf
xchg
enter
movlps
inc
das
pop
cs
xchg
push
and
sub
insb
or
push
bound
sbb
hlt
mov
fwait
pop
aam
jle
inc
or
rclb
mul
inc
inc
out
addr16
sarb
movsb
loopne
leave
mov
sub
adc
mov
inc
mov
in
dec
lahf
int
sti
sub
jbe
sbb
in
jge
sub
in
cld
jmp
jg
or
inc
add
fwait
in
sub
jmp
fnstcw
jl
xor
out
lahf
mov
inc
xor
adc
jmp
loope
imul
mov
push
add
lcall
test
movsl
ja
sbb
jns
mov
addl
or
push
lahf
leave
insb
mov
dec
pop
jg
push
xchg
sub
push
pop
xchg
mov
jp
ds
xchg
push
stos
mov
out
cmp
dec
and
inc
fsubrs
pop
cmpsb
xchg
dec
mov
jb
pop
mov
mov
clc
popa
mov
cmp
pop
nop
cmp
xlat
sarl
xor
mov
in
bound
pop
push
mov
scas
dec
pop
mov
fld
clc
xor
out
out
adc
jnp
das
mov
and
cmp
pushf
add
mov
js
repnz
ljmp
stos
jne
or
cltd
jle
adc
pop
sbb
mov
dec
stc
cld
mov
lock
roll
les
adc
or
roll
loopne
fwait
repz
xlat
jge
push
in
gs
and
mov
je
sub
clc
cs
push
addr16
pop
shrb
xor
or
ss
sub
aas
mov
xor
jmp
popa
std
sub
fmull
fisubl
or
sahf
add
scas
aam
mov
dec
or
fidivrs
es
cmc
push
mov
inc
pop
lcall
or
dec
mov
mov
aam
fidivs
into
mov
xor
sbb
xorl
adc
les
lret
pop
cmp
icebp
dec
adc
lret
xchg
cmp
movsl
pushl
call
mov
je
test
jb
push
jae
ss
sbb
mov
loopne
push
and
ja
jmp
mov
popf
cmp
sub
mov
dec
scas
insl
fnsave
adc
mov
cmp
mov
jo
mov
in
lds
aad
mov
push
int3
sbb
jecxz
dec
pop
sarb
andb
aaa
push
popa
mov
mov
push
imul
inc
out
dec
pop
lods
and
pop
shrb
xor
aaa
mov
mov
pop
sbb
aad
add
sub
movsl
push
icebp
push
push
mov
add
stos
xor
aad
xlat
jecxz
or
insb
leave
in
xchg
fsts
jnp
cmp
jb
scas
or
mov
jbe
repnz
cmp
dec
mov
andl
push
ror
call
call
xchg
jecxz
fwait
add
push
mov
jmp
xlat
jns
jmp
xchg
out
pop
jno
mov
xchg
and
es
ret
leave
jmp
xor
insb
scas
ja
sub
call
cli
sahf
xchg
pop
call
or
add
mov
ss
adc
insl
std
bound
jp
xor
cmp
daa
mov
sub
out
lock
sub
lcall
pop
leave
sub
cmp
sahf
adc
sahf
loope
mov
push
inc
jmp
adc
repz
cmp
popa
mov
cmp
dec
cltd
push
push
xchg
push
aaa
or
inc
push
imull
jp
int
xchg
mov
movsb
mov
sub
xchg
adc
scas
clc
es
test
mov
adc
das
jns
stos
dec
repz
stos
inc
and
mov
push
test
ljmp
mov
mov
insb
push
insb
nop
test
add
cmp
sbb
or
mov
sbb
adc
mov
sarb
cmp
push
das
out
xor
fldl
enter
in
outsb
mov
xchg
je
mov
and
sbb
xchg
fs
dec
aas
mov
add
adc
jbe
cmp
std
or
pusha
jmp
les
imul
jmp
shl
push
into
dec
imul
lea
shl
pop
mov
insl
test
in
add
mov
mov
fwait
jl
push
mov
pop
dec
xchg
push
dec
out
decl
les
call
ss
sub
gs
mov
push
fcoml
psubw
cmpsb
fbstp
ret
dec
mov
das
addr16
in
jg
sub
out
fcom
jbe
sahf
rcll
mov
push
sbb
mov
mov
rcll
inc
jnp
scas
mov
fcoms
fstpt
repnz
pop
lods
push
in
xor
mov
pop
in
jecxz
xchg
xchg
aaa
jle
pop
xchg
movsb
fbld
js
add
rdtsc
sub
cmp
cli
inc
mov
sbb
mov
mov
lock
cmp
inc
psubusw
pop
add
add
mov
ret
mov
cltd
bound
xchg
mov
mov
sarl
adc
stc
mov
imul
pop
sbb
sets
dec
mov
push
insl
add
gs
test
inc
mov
mov
inc
or
xor
sbb
addr16
clc
sub
mov
jne
subb
into
mov
push
in
cld
xorb
xor
xor
lods
lret
daa
in
insb
stc
lret
pop
out
sti
jg
sbb
jp
push
jl
mov
nop
adcb
mov
pop
ljmp
or
jo
out
sbb
mov
insb
sahf
dec
cli
test
jnp
xchg
cwtl
lcall
add
hlt
jle
mov
cmp
shll
mov
inc
push
pop
mov
jge
jle
pop
xlat
pop
mov
mov
std
fadd
sub
cmpl
dec
jp
xor
inc
and
cs
fistl
pop
cltd
push
push
mov
inc
add
xchg
in
adc
repnz
cmp
stc
dec
mov
mov
jo
test
add
dec
xor
jmp
lock
mov
mov
mov
js
mov
inc
pop
decl
in
in
repnz
xchg
scas
int3
arpl
sub
out
fstps
mov
cmpsl
fcoml
mov
and
jne
insb
clc
pop
jle
mov
dec
jecxz
das
xchg
sbb
jo
mov
mov
fstpt
addr16
inc
lods
inc
adc
pop
cmpsl
adc
ja
in
dec
add
in
jne
adc
notl
mov
inc
inc
jmp
add
orl
hlt
pop
sbb
dec
addr16
mov
push
loope
pop
sub
xor
mov
inc
jbe
pop
repnz
in
movsl
popf
dec
dec
mov
or
pop
or
fs
jnp
mov
adc
mov
mov
rclb
add
pop
ficoml
rolb
cmp
mov
lahf
and
jbe
xor
jge
jnp
xchg
add
cmpsl
sub
lea
add
pop
sahf
out
psubusb
popl
das
bound
mov
daa
in
mov
jmp
fiadds
adc
pop
xor
jo
jge
int3
sbb
orb
and
les
imul
add
fnsave
gs
jnp
xchg
push
mov
clc
inc
push
jbe
int
loop
lods
dec
sbb
aaa
mov
mov
mov
sbb
fnstenv
dec
adc
ljmp
sub
popa
clc
mov
rolb
cmpsb
fbld
jp
adc
bnd
xor
cltd
addb
adc
jp
mov
sub
enter
pushf
js
repz
inc
fwait
sub
aas
sahf
mov
jp
sub
jge
ja
ret
scas
ret
fadd
fs
arpl
das
pop
push
out
and
in
inc
pop
movsb
enter
pop
push
pop
lds
inc
and
inc
ja
loop
int
or
jo
mov
push
pop
outsl
repz
lock
adc
out
sti
xor
je
ret
or
cmpsl
imul
pop
loope
pop
xor
testb
fsubrp
cltd
adc
jnp
fisttps
push
mov
cmp
sub
add
xchg
xor
fwait
xchg
stos
xchg
test
loope
je
mov
cmp
inc
es
and
mov
push
in
adcb
movsl
jecxz
mov
adcb
sub
aad
lods
mov
push
insb
test
and
jp
lds
testb
lods
inc
iret
mov
pop
ret
dec
or
in
mov
lret
roll
in
adc
xlat
in
sbb
cltd
lret
jbe
or
sbbl
rcrb
pop
leave
std
daa
mov
cmp
pop
mov
push
jecxz
into
or
inc
loop
lods
ljmp
or
jmp
std
jg
shll
testb
mov
xlat
addr16
pusha
push
xor
cmp
mov
ja
inc
out
pop
out
xchg
mov
loope
push
cmp
lea
lahf
mov
adc
fmulp
cmp
inc
in
clc
or
lcall
shrb
fcoms
sbb
mov
enter
out
addb
int
or
adc
inc
cmp
push
pusha
pop
cli
dec
mov
subl
ljmp
cli
and
stc
lcall
xor
pusha
cmp
mov
or
std
gs
outsb
mov
dec
or
fsubs
pop
bound
xchg
notb
stos
test
mov
arpl
sub
aaa
pop
scas
mov
push
sahf
cmp
add
mov
lret
je
fwait
pop
clc
dec
lock
cmp
daa
pop
jae
pusha
cmc
dec
xlat
mov
mov
adc
fnstcw
jg
in
adc
jge
fnstsw
iret
or
or
cmp
mov
hlt
out
out
pushf
inc
jl
inc
pop
sub
fldcw
xchg
dec
cld
cli
ficompl
mov
sub
xchg
sti
dec
push
fwait
dec
and
xor
popf
sub
and
xor
fdivs
lea
in
mov
xchg
call
aaa
fadds
into
out
pop
cmp
mov
fs
inc
lods
stos
int3
push
or
push
imul
xorl
mov
or
pop
test
daa
pop
aas
clc
shrb
inc
jge
mov
and
fidivl
insb
mov
jl
das
fcmovbe
cmp
jmp
rcrl
iret
cs
roll
dec
sbb
dec
imul
shrb
xchg
callw
cmpsl
insb
call
lret
push
jae
mov
cmp
mov
mov
jae
aaa
mulb
mov
mov
xor
sub
mov
insl
mov
mov
ds
sahf
daa
sbb
sub
and
adc
cmp
mov
push
test
pop
sub
je
fsub
movsl
ds
cmpsb
dec
shlb
mov
repz
in
gs
ss
filds
ds
rcrl
pop
movsl
scas
pop
cmp
ss
push
fmuls
or
ret
nop
jnp
push
sbb
out
stos
jo
pop
and
clc
sbb
cs
cmpb
repnz
and
and
inc
pop
dec
sbb
xchg
push
pusha
xchg
ret
jg
in
test
mov
mov
push
scas
push
mov
fisubrl
mov
stos
xor
push
push
xor
in
cmp
loope
mov
xchg
aaa
inc
push
add
cli
and
popf
dec
mov
xchg
stos
les
lock
xor
pop
cmp
stc
or
loope
cs
xor
mov
mov
jae
push
jo
push
fistpll
fdivs
aam
lock
push
filds
sub
dec
cmc
mov
pop
sub
inc
lods
repz
jl
repz
adc
or
and
sbb
dec
sub
ljmp
add
test
repz
sbb
mov
fxch
dec
repnz
push
dec
lcall
sub
push
aad
ljmp
shll
test
dec
push
je
ljmp
push
jo
in
aaa
daa
push
test
mov
js
and
mov
pusha
xchg
jle
in
filds
add
sub
cld
mov
test
sbbb
mov
mov
or
xor
ret
mov
sbb
and
cmp
push
jcxz
mov
int
jo
enter
ret
sbb
push
and
hlt
adc
sbb
lods
fidivrs
sub
mov
push
test
cmc
push
jle
cli
mov
lret
or
dec
sub
sub
cmp
and
sub
sub
arpl
dec
das
daa
pushf
sti
mov
mov
or
and
or
dec
and
xchg
movsb
mov
fstps
das
adc
sbbb
adc
or
lret
cmp
sbb
dec
ss
popa
sub
xchg
lret
and
repnz
pop
lock
ret
leave
add
aam
pop
pop
lds
pop
sti
adc
andl
in
sbb
insl
adc
pop
lods
fcoms
outsl
mov
sbb
icebp
dec
aam
jns
hlt
in
pop
negb
xchg
stos
xlat
push
jl
adc
lret
test
cmp
sbb
outsb
sbb
aam
inc
jmp
gs
add
cmc
shlb
lret
shl
jmp
inc
scas
inc
and
mov
push
scas
ret
jno
pop
lret
daa
loop,pn
cld
or
xchg
into
pop
and
arpl
fdivrs
jb
xchg
adcb
mov
pop
shll
adc
mov
add
into
testb
imul
mov
sti
rcrb
cmc
pop
xor
scas
inc
in
mov
xchg
mov
out
pop
in
cmp
mov
lret
outsl
das
adc
leave
cmc
movsl
adc
pop
xchg
dec
gs
cmp
xor
mov
inc
mov
and
imul
xchg
xor
mov
movsl
and
xor
adc
dec
in
push
adc
mov
fmul
mull
in
hlt
jecxz
jbe
leave
xchg
filds
sub
outsb
xchg
mov
cmp
fs
out
addr16
rcr
pop
jae
int
jb
fdivrl
mov
pop
dec
int3
xchg
inc
jns
movsb
xchg
lods
pop
loopne
movsb
add
pusha
sbb
pop
div
dec
and
jbe
sub
jmp
mov
push
ds
rolb
or
jmp
movsl
xchg
mov
mov
call
inc
test
mov
sub
pop
push
or
mov
sbb
cwtl
adc
cmc
aam
in
aad
jl
push
dec
mov
pop
pop
test
shlb
pop
jne
xchg
enter
ret
dec
stc
nop
add
lea
and
mov
dec
pop
mov
outsb
dec
sbb
xchg
andl
mov
lret
sub
rcpps
sub
xchg
imul
stos
inc
cli
pop
std
subl
add
add
cmpsb
sub
jmp
out
fisttps
dec
push
clc
icebp
xchg
and
andl
cmc
mov
mov
or
pop
movsb
push
stos
sahf
in
fs
test
add
push
ss
ljmp
pushf
enter
xchg
sub
fbstp
aas
loop
dec
jnp
es
push
push
addb
lds
andl
or
jno
lds
sub
push
jnp
lea
or
stc
mov
aaa
daa
xchg
cmp
push
mov
repz
sub
cmp
jp
dec
mov
scas
in
test
leave
jecxz
mov
lea
cld
repnz
push
hlt
pop
out
cli
inc
hlt
rcll
shlb
inc
adc
lret
aas
pop
sbb
scas
jne
ret
ja
clc
mov
mov
adc
mov
iret
push
out
rol
mov
in
popa
mov
je
mov
inc
jmp
push
mull
std
addl
push
cmpb
xchg
push
fmulp
sbb
xor
fldcw
adc
and
aas
cmp
ret
ror
rolb
jbe
mov
daa
outsl
xor
loope
mov
divl
int3
inc
cwtl
popa
aad
out
cmp
mulb
xchg
adc
in
ficompl
jbe
dec
mov
xchg
loop
and
insb
in
adc
push
jo
and
pop
mov
movsb
mov
sub
js
fwait
repz
sub
ss
lea
push
or
xor
pop
aam
and
adc
sub
mov
test
mov
pop
hlt
ss
out
les
insl
sbb
lret
pop
aas
lcall
ss
pop
dec
sbb
mov
cltd
add
subps
xchg
cli
mov
ret
ss
xor
cwtl
push
dec
sbb
dec
pop
call
jo
jae
fsubl
push
stos
push
jp
movsl
add
xor
push
jae
sbb
cmpsl
repz
in
xchg
dec
popf
pop
add
inc
lcall
and
sbb
and
and
push
push
or
jmp
sbb
pushf
test
xchg
or
test
jp
sbb
leave
dec
cs
mov
sbb
fldcw
lods
scas
mov
cld
adc
out
push
in
cwtl
lods
push
dec
mov
ficomps
in
jo
dec
mov
mov
dec
push
mov
push
mov
insb
jae
repnz
lret
mov
inc
leave
imul
iret
fmull
mov
je
fchs
jle
adc
push
jl
cmp
fistpll
xchg
pop
inc
jno
push
rcll
pop
push
lock
xchg
xchg
inc
xchg
lds
mov
jge
ds
mov
inc
pop
mov
call
mov
xchg
sub
cmp
and
out
imul
adc
or
sbb
jo
lcall
push
pop
sub
pop
mov
pop
adcl
cmc
out
sbb
adc
mov
pop
shll
out
clc
or
xchg
imul
or
aad
movsl
out
ja
mov
mov
mov
mov
pop
iret
adc
jle
pop
push
add
dec
inc
push
sub
cmovnp
inc
cmc
repz
call
pop
icebp
cmpsl
lods
lock
insb
mov
scas
xchg
push
sbb
jmp
cmp
call
push
adc
jnp
push
mov
arpl
loope
jmp
or
mov
js
pop
test
or
push
ret
sub
adc
gs
adc
and
and
mov
test
jge
mov
lock
adc
scas
in
movsl
push
mov
leave
cwtl
pop
clc
daa
mov
cmp
add
mov
test
and
mov
dec
fnstenv
jbe
adc
mov
pop
push
icebp
cwtl
aaa
lods
or
call
cltd
out
cmpsl
lcall
std
push
add
leave
cmp
in
fdivs
fisubs
pop
pop
lock
arpl
mov
mov
scas
sbb
cmp
dec
mov
mov
arpl
testb
mov
repnz
mov
clc
pusha
fistpl
cmp
loop
repnz
int3
fwait
movsb
shlb
add
and
frstor
popf
and
ret
pop
fwait
mov
push
mov
mov
lret
dec
sub
and
cmpsb
in
subb
movsl
fsubr
sub
inc
ret
stos
mov
lcall
sbb
jle
dec
mov
inc
lret
inc
and
scas
fidivrs
push
cmp
pushf
iret
or
fisubs
mov
cli
sbb
rcrb
jns
jmp
mov
mov
popa
push
imull
sti
ret
lret
mov
lahf
inc
cmpsb
add
mov
mov
xor
sbb
vmovaps
scas
mov
icebp
in
sbb
adc
mov
mov
mov
mov
pop
cs
fsubr
xlat
adc
inc
orb
pop
sbb
sti
dec
inc
gs
test
mov
or
inc
adcl
cmp
xor
jns
test
sahf
adc
out
add
js
into
leave
add
dec
cmp
mov
adc
pop
lds
dec
jl
jle
outsb
lahf
sti
add
xchg
cmp
aas
pop
cmpl
pop
rcl
xchg
add
pop
movsb
clc
cltd
adc
xchg
pop
out
enter
mov
aam
push
subl
and
movsl
fimull
dec
and
addr16
and
fstl
xchg
daa
mov
repnz
mov
lahf
add
jns
popa
fsts
mov
add
sbb
pop
cltd
xor
sub
sbb
lds
movsl
pop
rcrl
nop
ljmp
mov
pop
insb
dec
xchg
adc
jno
add
pop
outsb
inc
and
pushf
jge
neg
ja
cli
test
cld
xorb
push
out
pop
mov
xor
pop
loopne
mov
sbb
scas
mov
push
xchg
mov
mov
lcall
or
cmp
das
jae
jo
lcall
ss
xchg
pop
mov
sbb
ss
jecxz
popa
push
inc
movnti
jne
fidivs
inc
out
pop
or
cltd
pop
mov
xorl
add
lock
jecxz
mov
mov
add
es
shrb
xlat
push
cltd
mov
push
xor
mov
dec
xor
js
inc
das
push
test
add
popa
leave
mov
in
push
rolb
add
in
fistps
cltd
xor
dec
mov
ret
push
jge
inc
fcmove
pop
ljmp
sbb
mov
and
mov
repnz
cmc
mov
sbb
mov
dec
xor
mov
ret
sti
add
xchg
xor
adcl
das
test
xchg
je
or
jmp
je
inc
mov
dec
pop
mov
mov
mov
add
sub
mov
das
int
xlat
inc
pop
in
imulb
mov
shll
aam
add
std
sbb
lock
repz
movsb
mov
and
out
mov
out
cmp
xor
sub
mov
inc
xor
movsl
adc
mov
pop
outsb
jge
arpl
sbb
int
pop
xchg
or
xor
popa
fwait
push
push
or
ljmp
cmpsl
scas
sub
sbb
push
mov
adc
enter
lods
lahf
mov
in
inc
out
clc
xorl
dec
jmp
cmpsb
add
jg
mov
and
and
sub
mov
int3
adc
mov
and
out
int3
mov
add
cmp
repz
sbb
int3
or
mov
nop
mov
cmp
add
ja
dec
pop
lahf
cmp
mov
adc
pop
jno
cltd
push
sti
jl
sub
lock
sbb
pop
fwait
lods
inc
data16
loopne
push
push
mov
std
xor
jb
iret
test
jo
incl
add
jne
xchg
or
roll
sbb
jo
dec
outsl
push
ficompl
dec
and
cmp
xlat
aaa
add
mov
push
push
ja
push
xchg
aam
clc
or
mov
pop
cmp
lds
lods
jbe
jns
call
jnp
mov
in
repnz
jg
jb
into
jmp
lock
outsl
imul
int
pop
dec
mov
lahf
jg
mov
out
adc
pop
and
imul
test
mov
fstpl
sub
mov
pusha
jl
mov
pop
ficomps
xchg
and
cltd
add
jecxz
mov
push
test
mov
push
mov
jmp
xor
or
inc
aas
sub
or
lods
mov
push
popf
das
sbb
sbbl
ficompl
jo
in
jle
sub
lahf
xchg
pop
jg
sbb
sub
adc
push
pop
ljmp
push
xor
out
dec
hlt
das
lret
sbb
addr16
lret
sub
add
int3
push
scas
xchg
test
dec
int
inc
sbb
icebp
mov
jp
push
sub
std
mov
addr16
insl
movsl
mov
jge
gs
int
add
addl
aad
rcll
dec
xchg
sub
push
hlt
mov
into
xchg
jns
insl
lret
jb
push
shrl
inc
in
ss
aad
or
push
inc
imul
or
sbb
or
clc
jns
je
and
sub
dec
push
inc
ret
and
ja
sti
popa
adc
sbb
push
pop
xchg
mov
push
in
push
push
add
and
das
addr16
addr16
add
push
lahf
adc
pushw
out
cmc
mov
mov
inc
or
sbb
in
pushl
scas
movb
cmp
adc
xorl
inc
cmpsl
cmp
mov
xor
add
mov
mov
push
iret
sub
pop
add
imul
rcl
or
inc
jns
mov
rol
add
stc
or
nop
push
jle
and
xchg
xor
arpl
push
loop
sbb
xchg
pop
cmp
adc
int3
or
pop
pop
lods
or
loopne,pn
das
and
and
or
leave
pop
dec
fimull
int3
xchg
lock
jl
lds
add
aaa
xor
mov
orl
mov
mov
inc
or
push
xchg
sub
mov
xor
xlat
ljmp
or
sbb
aaa
pop
mov
jmp
pop
faddl
jle
arpl
lods
lcall
gs
pop
stos
outsl
cwtl
leave
jge
xor
push
repnz
sub
and
sub
push
and
or
sbb
xchg
negl
dec
es
std
cmp
lods
sahf
mov
insl
fnstsw
mov
mov
xchg
popa
pop
add
lds
sarl
adc
xchg
lahf
pushf
push
jp
pop
inc
or
inc
cli
es
daa
inc
pop
mov
pop
mov
mov
add
sti
jns
fnstcw
into
cmp
push
out
mov
aas
xor
jge
shlb
mov
aam
or
and
das
out
xchg
cmp
xchg
movsl
cmp
sbb
jl
mov
stc
mov
es
or
xchg
into
xchg
mov
add
sub
andl
imul
stc
aam
rolb
or
sub
scas
jecxz
pop
sti
imul
fistps
sub
insl
inc
xchg
and
lock
aad
ficoms
sbb
jns
icebp
dec
scas
mov
xchg
into
xor
test
jb
mov
in
or
push
les
scas
call
ds
out
mov
mov
jg
inc
nop
sub
lock
cmpl
cmpsb
js
add
inc
and
inc
lret
sbb
mov
lretw
rol
and
arpl
adc
scas
sbb
daa
mov
sbb
push
adcl
pop
jnp
mov
lods
xchg
outsb
imul
cmpsl
mov
sti
seta
insb
inc
outsb
dec
in
pop
push
cmc
push
mov
ret
jg
ja
dec
push
stc
xor
in
add
mov
dec
xor
pop
xlat
out
xchg
pop
sub
repnz
jae
data16
xor
add
push
sbb
out
mov
gs
sahf
xchg
cmp
mull
lock
jae
xor
movsb
cmp
fiadds
sub
adc
ss
jae
xchg
pop
int
pop
pop
lcallw
daa
dec
popf
xchg
cwtl
cmc
adc
adc
dec
mov
fcomip
fs
xchg
or
sub
shrl
mov
push
cmpsl
mov
inc
adc
jmp
inc
xchg
mov
xor
mov
and
ds
push
xchg
fimull
jb
jns
sub
test
fwait
ds
mov
fcmovnbe
sub
adc
leave
dec
push
decl
call
fwait
sub
out
mov
sbb
inc
pop
lea
jnp
adcb
sbb
mov
sub
mov
arpl
stos
inc
int
sahf
mov
outsb
dec
loopne
cs
movsl
sbb
stc
cwtl
xchg
or
outsb
das
rolb
addb
out
out
iret
push
sbb
fisubrl
stc
push
cmpb
lea
add
inc
or
je
std
add
jmp
lcall
push
out
hlt
inc
sti
or
push
pop
push
sub
shll
jne
cvtps2pd
lret
xchg
ret
cmpsb
adc
mov
dec
iret
pop
mov
inc
pushf
and
icebp
adc
push
jnp
xor
ja
aad
mov
and
lods
ret
xor
inc
fcmovb
fldt
pop
xor
mov
xlat
out
rcll
mov
ret
aas
lahf
int
std
in
je
cmp
loop
ss
xchg
mov
fld
pop
adc
fistl
or
jmp
dec
das
dec
mov
fsts
cmp
inc
loop
pop
shll
xchg
rcrl
outsl
sub
stos
xor
js
out
mov
push
test
push
push
sbb
pop
stc
mov
lahf
repz
push
aaa
pusha
fnstcw
repnz
and
dec
cmp
mov
push
loopne
adc
lcall
add
cmp
push
mov
and
aad
mov
push
shll
inc
lret
jle
cmp
mov
hlt
ljmp
xor
push
in
mov
inc
scas
push
loope
inc
or
rorl
add
ljmp
stos
add
inc
je
aad
loop
negb
mov
jecxz
out
in
sbb
iret
icebp
in
jns
xchg
nop
and
in
inc
and
xor
add
sti
jmp
add
ds
jb
xor
stos
xchg
fidivs
inc
xchg
movsl
mov
je
lods
or
and
fsubrl
fdecstp
hlt
adc
push
iret
xchg
xchg
sub
ss
into
inc
inc
cmp
pushf
ror
lret
fisubl
jbe
addl
enter
ja
test
add
push
add
and
inc
adc
imul
roll
std
cltd
test
or
jg
sub
mov
pop
andb
add
pop
xor
xchg
ret
stc
and
mov
stos
shlb
test
inc
add
sti
sahf
jge
sbb
rcrl
sbb
dec
nop
shlb
stc
mov
push
adc
sub
xchg
out
cmp
inc
xchg
cmp
jge
adc
inc
inc
push
out
daa
fdivs
inc
inc
out
inc
insl
pop
stc
push
sbb
sbb
or
mov
shrb
mov
mov
and
dec
jne
jg
mov
pop
stos
mov
mov
or
sbb
cwtl
cs
clc
jg
testb
cmp
xor
and
nop
xchg
mov
je
xchg
fwait
movsb
xchg
pop
add
xchg
or
xchg
xchg
movsl
add
sub
jg
cmp
ss
sbb
inc
mov
cli
out
push
jae
mov
mov
data16
or
push
push
add
imul
push
xchg
fmuls
jne
out
cmp
fnstenv
or
es
lods
loope
xor
mov
std
pop
sub
test
icebp
mov
sti
ljmp
and
ljmp
sub
xor
mov
data16
mov
mov
scas
cmpsb
sub
cmp
sub
dec
fistpll
popa
ss
mov
and
add
xor
in
dec
fidivrs
cmc
shlb
lods
inc
adc
out
in
pop
fwait
xor
cld
lret
in
daa
or
sbb
cmpsb
jnp
ret
or
add
sub
mov
pop
mov
gs
das
lods
push
daa
push
push
pusha
xor
mov
ret
or
out
xchg
sub
pop
lea
sti
sahf
in
push
insb
cltd
in
cmpsl
dec
lods
xlat
mov
into
mov
rcr
mov
fcomip
fisubrs
push
cmp
mov
jno
mov
arpl
add
pop
sbb
sbb
sub
ret
jns
out
test
es
sbb
or
and
sub
repz
je
and
xor
andb
push
push
out
das
xchg
mov
aad
pusha
jb
fldcw
xchg
and
mov
jle
test
xor
jae
mov
inc
gs
cmp
jns
outsl
push
push
out
stc
insl
sub
mov
adc
cmp
jno
mov
xchg
js
movsl
sub
jg
sahf
mov
xchg
sbb
mov
scas
aaa
rcll
icebp
fcomps
xor
dec
std
pop
add
jp
adc
push
cmp
push
pop
fs
mov
call
int3
imul
xchg
ficoms
gs
lcall
sahf
push
test
data16
cmp
xorb
fidivl
pop
sarb
adc
lcall
push
pop
cmp
dec
in
cmp
adc
sahf
mov
imul
or
xchg
xacquire
repz
push
mov
mov
add
and
adc
arpl
icebp
cmp
pop
xchg
bound
mov
sub
cmpsb
or
divl
shr
mov
popf
loop
cmovno
imul
add
fiaddl
pop
fnstenv
push
sub
je
loopne
das
push
jo
subb
inc
push
xlat
out
in
cmp
mov
and
ljmp
divl
lock
xchg
pop
adc
filds
adc
push
mov
pop
mov
mov
ja
lret
ja
lret
xor
sub
cmp
lods
aad
movsl
repz
jp
ja
xor
jo
mov
icebp
adc
xor
pop
jbe
mov
xchg
loop
push
loope
ljmp
xchg
test
cli
mov
outsl
push
imul
cmp
or
xchg
insl
push
push
jge
gs
std
jbe
test
cs
pop
xchg
loope
nop
inc
jns
mov
jecxz
push
xorl
cmp
mov
stos
out
adc
roll
mov
frstor
fistpll
jo
cs
loope
jmp
mov
ret
bound
ret
pop
mov
adc
shlb
loop
lret
jg
mov
bound
push
adc
adc
aas
jg
xor
dec
pushf
icebp
popa
jle
or
arpl
into
xchg
cmp
mov
ja
mov
lods
and
pop
pop
sub
push
lods
sub
dec
and
ja
cmp
pop
test
pop
mov
sub
add
lods
mov
cmp
push
sbb
mov
enter
arpl
and
inc
inc
adc
push
mov
into
scas
stc
cmp
hlt
mov
clc
ret
mov
out
lret
cmpl
cmp
movsb
mov
jecxz
icebp
xorb
les
pop
rcrb
push
std
mov
and
xchg
rclb
popa
movsl
es
in
aam
inc
lret
out
jno
lret
lea
int
inc
adc
jns
lea
aad
cmpl
mov
xor
setg
xchg
dec
push
sub
xor
loope
in
je
rcrl
enter
stos
sbb
jnp
and
push
sub
mov
adc
sub
inc
pop
test
dec
dec
jmp
mov
jne
and
push
add
push
fmull
mov
repnz
push
mov
mov
cmp
xchg
dec
fistpll
jnp
test
xor
jmp
sbb
jp
insb
cmp
xor
imul
jo
aad
and
or
lods
mov
inc
mov
xchg
dec
ret
or
pusha
fcoml
scas
out
cmp
xchg
mov
lcall
pop
imul
lods
inc
dec
push
inc
push
mov
insl
adcb
lcall
int
dec
sahf
inc
enter
lock
fildl
xchg
adc
dec
jp
in
lret
in
and
in
aam
xchg
adc
lods
sbb
sahf
aaa
aaa
scas
xor
lods
lahf
push
cmp
popa
mov
test
and
push
inc
dec
and
jmp
lcall
cmpb
dec
iret
jp
push
add
inc
jne
xor
das
mov
mov
lahf
push
ss
dec
pusha
lcall
in
xlat
and
inc
clc
and
or
sub
mov
inc
sahf
cli
pop
jp
outsl
lods
jl
mov
adc
xchg
mov
push
pop
xchg
aaa
data16
cmp
call
or
dec
testb
fs
jbe
fimull
scas
cli
and
dec
adcl
js
int
shll
and
mov
inc
sbb
nop
pop
mov
inc
in
out
inc
daa
imul
insl
lahf
jno
fyl2x
cld
add
pop
push
add
xor
push
cwtl
notb
aaa
push
add
subb
xor
lret
add
add
xor
lea
and
push
lods
push
dec
mov
xor
imul
mov
and
xor
cli
mov
xchg
xchg
pop
enter
sub
in
adc
mov
mov
and
imul
mov
cmp
xor
push
int3
xchg
jmp
movsb
scas
push
stos
xchg
mov
fsubs
sbb
push
pop
insb
xor
fwait
add
push
call
sbb
stos
ret
xchg
into
int3
mov
push
or
call
loopne
cs
push
pop
dec
dec
fisubrl
leave
mov
in
mov
xchg
or
cwtl
cld
mov
push
ds
ja
cltd
inc
jnp
ret
adc
shlb
out
hlt
pop
lds
mov
xbegin
fadds
movlps
ficoml
mov
jp
jnp
xchg
pop
dec
stos
xchg
dec
addr16
filds
orl
std
adc
sub
clc
push
dec
pop
fwait
test
fstl
sub
mov
xor
xchg
mov
packuswb
dec
dec
test
sbb
sub
das
cltd
inc
icebp
push
subb
lods
clc
setle
outsb
insb
sbb
dec
in
outsb
inc
loopne
movsb
test
pop
mov
lcall
out
stos
jl
test
cltd
arpl
lahf
xchg
add
rorl
xchg
jg
jns
pop
sbb
lods
sar
mov
adc
ficoms
cs
and
add
cmp
rcll
sahf
xchg
cmp
out
pop
push
pop
adcb
std
addb
clc
add
enter
rcll
and
imul
push
je
testb
adc
sti
jo
pop
aas
cmp
inc
push
jo
test
inc
pusha
addr16
adc
cmp
and
jo
stos
cmpsl
addl
std
dec
adc
push
test
das
into
es
std
addb
cmp
xchg
sti
loopne
ficoms
push
xor
in
mov
cli
mov
xchg
mov
pop
sub
cmpsl
mov
stos
xor
dec
movsb
cli
cmp
js
shl
in
movsl
test
roll
ljmp
xchg
lret
pop
push
addr16
lahf
frstor
ljmp
pushf
sti
lcall
pop
mov
or
mov
into
jb
or
and
mov
int
jne
xchg
cmpsb
gs
popa
xchg
notl
fcomps
push
sbb
in
cmc
xchg
loope
push
jmp
scas
mov
push
frstor
adc
rcrl
push
mov
and
sub
lret
inc
jno
es
or
mov
shrl
dec
xor
push
push
inc
jne
jge
movsl
fsub
pusha
sbb
insb
jmp
and
movsb
lret
into
outsl
out
mov
push
sub
test
cmpsl
jl
ds
jb
nop
sub
cmp
and
ja
pop
cmp
jmp
ja
inc
testl
pop
inc
fcoms
ds
sbb
jmp
in
sbb
lea
shlb
jne
dec
add
xor
or
mov
push
mov
movb
pusha
adc
stc
sahf
cwtl
outsb
inc
mov
add
push
push
inc
sahf
jnp
mov
xor
call
xlat
pop
jl
dec
fldcw
jne
sarb
arpl
push
mov
push
and
loopne
dec
dec
cltd
daa
shll
arpl
push
pop
shll
daa
popf
inc
cwtl
mov
iret
xor
mov
lahf
mov
or
xor
test
mov
inc
dec
in
fwait
cmp
stos
jo
sbb
push
popa
pop
mov
lret
aad
fistl
hlt
sbb
in
fwait
iret
sbb
outsl
or
je
mov
xlat
sbb
das
adc
popa
jbe
lods
mov
xorl
mov
adc
pop
out
sbb
inc
mov
movsb
int
add
or
or
push
adc
loopne
xor
push
dec
adc
bound
lahf
mov
xchg
sbb
sub
sub
loope
aad
stos
insl
cli
pop
aas
dec
adc
cwtl
xchg
lea
jbe
xor
adc
xchg
lahf
jbe
xor
cmp
jl
dec
lds
mov
sbb
xor
xor
pop
arpl
pop
mov
mov
cli
lret
pop
hlt
push
hlt
xrelease
gs
cwtl
fistl
jl
xchg
pop
sub
jbe
pop
sahf
mov
movsb
mov
loopne
inc
mov
mov
mov
xchg
ret
jno
xchg
mov
int3
lea
add
aad
das
or
fidivs
dec
jmp
dec
add
mov
into
call
jbe
into
lahf
adc
sbb
pop
mov
mov
add
push
ret
inc
imul
sub
dec
push
xor
xchg
gs
jb
sub
inc
movsl
insl
inc
mov
pop
and
xchg
inc
mov
sub
dec
lods
or
test
fldl
mov
lods
add
push
ret
aas
dec
pop
in
call
scas
xor
in
clc
ja
cmc
rorb
fcmovnbe
les
je
mov
loopne
pop
imul
sbb
add
jnp
fsubrl
jg
popf
adc
insb
sbb
stos
movsb
outsl
sbb
shlb
xorb
popf
xor
int3
xor
loop
mov
xchg
jae
cmpb
arpl
fsts
sbb
mov
cmp
paddusb
mov
fstps
jb
cmpb
push
dec
addr16
aaa
mov
mov
xor
data16
loop
adc
fildl
scas
dec
aaa
and
stos
jns
stc
inc
or
fmul
imul
cld
mov
icebp
hlt
mov
inc
sbb
pop
popa
jnp
jnp
fisubrs
mov
sub
cs
dec
insl
ja
cltd
sti
cli
out
adc
and
mov
mov
ja
add
mov
mov
loopne,pn
push
fcomip
jp
sbbb
mov
xchg
xchg
cmp
arpl
repnz
cltd
addr16
adc
mov
inc
cld
or
dec
and
hlt
inc
inc
repnz
lcall
dec
nop
icebp
mov
cltd
mov
pop
xor
sub
jae
ds
adc
lods
lret
in
or
and
rcr
xor
mov
jle
add
mov
scas
pop
sbb
jne
jg
insl
xchg
das
xor
mov
sbb
out
mov
push
jnp
jno
cmp
mov
push
test
lcall
inc
and
jns
in
ret
in
push
adc
repz
inc
inc
ror
jle
inc
imul
imul
jno
jle
das
pop
fcomps
sub
mov
push
xor
test
cmp
xchg
mov
movsb
mov
pop
and
ljmp
xchg
sti
insl
dec
adc
scas
lods
sahf
es
test
sbb
xchg
in
push
cs
scas
imul
adc
lods
imul
loopne
sbb
pop
imul
jne
xchg
lcall
fldenv
js
push
popf
je
daa
aaa
aas
inc
sub
stc
ss
icebp
mov
cmp
fdivl
shrl
cmp
imul
test
adc
out
add
xchg
sbb
jp
iret
xchg
cmpsb
insl
mov
pop
push
xchg
jge
mov
jl
add
xor
ss
push
dec
test
adc
add
mov
pushf
jo
jbe
push
inc
add
addr16
inc
add
dec
mov
or
or
ss
ds
loop
adc
cmpb
call
cmp
sahf
jne
aaa
fildl
pop
inc
mov
mov
jne
rorb
sbb
adc
repnz
imul
mov
sub
pop
les
dec
shll
mov
dec
mov
cli
push
and
mov
ret
pop
dec
mov
lea
addr16
mov
lcall
jmp
test
xchg
pop
sub
mov
add
xchg
leave
dec
and
mov
mov
or
add
mov
push
pop
adc
imul
sub
imul
jecxz
mov
pop
inc
repnz
loopne
mov
mov
mov
rol
hlt
pushf
adc
pusha
dec
jno
add
clc
push
cltd
jle
test
std
test
out
push
jle
pop
in
fwait
sbb
sbb
les
insb
mov
mov
pop
lcall
lcall
xor
cmp
mov
loope
loope
or
rorb
jo
mov
pusha
sub
inc
popf
dec
inc
int
cmp
dec
xchg
cmc
dec
xor
aam
xchg
cmc
ja
jmp
pop
mov
lock
loopne
pop
dec
xchg
inc
sbb
cmpsb
or
fwait
das
xor
and
jno
mov
mov
cltd
cmp
outsb
test
cmp
sub
hlt
mov
sub
mov
std
jns
scas
in
dec
outsb
ljmp
pop
shll
pop
das
adc
and
nop
fnstsw
or
aaa
jb
mov
sbb
cs
mov
cwtl
leave
ret
stc
movsl
addr16
cmp
cmpsl
daa
and
cmp
mov
ror
mov
pop
rcrb
shll
mov
xorl
push
jle
xchg
mov
xchg
xor
push
or
rep
or
add
dec
dec
dec
insl
arpl
fisubs
jae
data16
outsb
jnp
cld
xchg
sahf
fwait
adc
movsl
aad
cli
push
mov
mov
sub
dec
pushf
cmpsl
notb
pop
xchg
outsl
movsl
rorb
out
icebp
push
dec
fdivrl
ljmp
sub
sbb
roll
xchg
dec
mov
pop
add
stos
ret
or
dec
add
sbb
shrb
movsl
dec
gs
xchg
ja
mov
push
pop
shl
jecxz
mov
add
hlt
xchg
jnp
cmpsl
or
mov
clc
xchg
or
iret
mov
xchg
and
in
sbb
inc
lods
std
xchg
lock
sbb
stos
xor
fs
push
loopne
or
ljmp
xchg
ljmp
jne
push
and
push
pop
test
push
lods
xor
popa
xchg
sbb
fdivs
or
pop
loop
gs
fidivs
out
sbb
mov
inc
sti
icebp
iret
push
dec
cli
loop
dec
xchg
dec
push
xchg
cmp
lock
fwait
jnp
or
out
test
pop
in
add
cmc
dec
sti
mov
xor
lret
inc
xlat
test
add
xchg
sub
pushf
pop
or
insb
or
adc
add
or
pop
mov
inc
shrb
in
scas
out
mov
add
sarb
sbb
movsl
popa
fs
or
aas
mov
shlb
add
push
cmp
jb
das
stos
movsl
mov
adc
fcoms
out
aad
jp
mov
sub
cmp
pushf
je
cmp
xchg
das
rcll
lock
adc
add
pusha
movsb
sbb
sbb
mov
mov
pop
cmp
inc
js
out
cld
dec
jae
xor
leave
xor
inc
fucomi
push
fnsave
dec
mov
mov
mov
lods
sub
fldt
dec
loop
xlat
add
enter
hlt
xchg
push
daa
repz
mov
cmp
mov
jl
pop
sub
fwait
sbbb
mov
xor
lcall
pop
mov
sub
add
out
sbb
add
movsb
lods
pop
div
stos
repz
jnp
stc
lcall
andb
pop
lcall
push
scas
dec
xor
popf
lods
xchg
std
lods
mov
dec
jae
cmp
mov
mov
xchg
or
mov
fnsave
bsr
cli
cmp
pop
addr16
adc
or
jge
dec
repnz
xor
nop
arpl
lds
sahf
push
sub
pop
dec
xor
mov
adc
xchg
mov
xor
and
iret
adc
ret
cmpb
jns
movsl
js
pandn
ret
fs
push
sub
mov
mov
pop
lahf
mov
add
leave
inc
test
jg
sar
mov
jmp
xchg
lahf
dec
imul
dec
inc
add
hlt
fbld
mov
push
sub
xchg
in
popf
fsubrl
ss
test
stos
xchg
sbb
mov
sbb
mov
or
incl
out
xchg
loop
test
popf
in
repnz
testb
fistpl
daa
nop
adcb
push
jnp
xor
int
punpcklbw
les
xor
mov
inc
out
inc
negl
lahf
cmpsl
imul
fwait
mov
negl
stos
and
or
add
mov
lcall
sub
psubusb
jne
inc
push
fidivrs
add
ss
cmc
xor
cmp
xchg
insb
mov
ja
cltd
std
sub
add
sbb
mov
xor
mov
jle
jecxz
mov
mov
enter
hlt
adc
adc
jns
inc
sbb
addl
lock
test
push
nop
mov
adc
shlb
sarl
mov
jnp,pt
mov
orl
and
inc
movsl
repz
add
inc
sbb
add
lret
sbb
add
jmp
push
push
imul
sti
es
movsb
jb
pop
add
sbb
xchg
dec
and
stos
int
lret
mov
push
inc
in
dec
pop
addl
sub
cmp
lea
sbbl
pop
pop
cmp
or
ljmp
mov
stc
out
and
mov
mov
icebp
pop
shlb
fstpl
ljmpw
xor
inc
mov
xchg
mov
addl
jb
pop
add
cmp
push
sub
dec
iret
adc
lret
in
out
cli
push
pop
scas
jg
repnz
xor
pop
inc
sti
sbb
fldenv
or
scas
popf
ds
fnstcw
mov
pushf
sbb
in
pop
jb
jp
adc
lock
jecxz
xor
dec
pop
cmp
sbb
leave
jo
and
push
in
xchg
ljmp
xchg
adc
pop
enter
lock
loopne
loopne
inc
or
xchg
fstpt
inc
sub
add
xchg
inc
or
dec
roll
cmovnp
xchg
aas
in
dec
in
mov
pop
pop
mov
mov
inc
es
pop
jno
rcr
add
out
int
aam
outsl
lahf
lcall
pusha
movsl
setg
add
mov
mov
xchg
aad
orl
fsubl
bound
adc
xor
adc
ret
pop
or
sbb
adc
cmp
jmp
pop
pushf
jecxz
bound
lahf
ret
pusha
dec
fstl
mov
mov
mov
inc
xchg
mov
adc
scas
stos
mov
dec
cltd
adc
cmp
lock
mov
push
neg
cmpsb
sub
fcomip
push
mov
sbb
out
mov
stos
cwtl
sti
dec
in
dec
sub
mov
cmp
cmpsb
pop
adc
popf
or
movsl
add
cmp
sub
inc
je
mov
aam
pop
ss
push
push
cmpsb
lock
add
les
pop
pop
push
or
ja
sub
inc
or
xchg
negl
gs
pop
jne
loope
int
mov
sahf
lea
pusha
lcall
xchg
pop
cmp
jmp
add
mov
in
cmpb
push
cmp
push
jl
jbe
jge
scas
push
ret
add
xchg
push
das
lahf
fmuls
int
ret
sbb
add
ja
fisubrs
inc
int3
push
and
cltd
ja
rdpmc
stc
push
push
testl
mov
roll
das
xchg
in
xchg
push
jo
jge
movsb
jns
mov
mov
mov
lods
lret
mov
mov
scas
mov
dec
inc
leave
lret
push
fnsave
pop
cmpsl
leave
aad
mov
loope
mov
inc
jnp
mov
cmc
sbb
dec
jae
pop
int3
repnz
push
xor
jae
outsl
cmc
mov
int3
pop
cwtl
sbb
nop
fnsave
mov
adc
mov
pop
jne
jle
ds
or
movsl
xor
rcl
ss
jne
dec
push
inc
cmp
mov
cmpsb
enter
out
ss
lret
push
sbb
and
and
mov
xlat
pop
xor
push
push
dec
mov
push
aaa
adc
hlt
lret
push
mov
mov
pusha
or
out
sub
in
int
lea
sub
or
push
push
lods
push
pop
mov
inc
rol
mov
movsl
repz
loop
or
popf
test
mov
cld
mov
mov
je
pop
push
lcall
fs
mov
mov
cmpsb
adc
cmc
mov
aas
sub
cmp
outsl
ja
in
push
push
mov
add
push
out
and
xchg
push
xor
call
pop
pop
imul
adc
pop
mov
mov
cmp
js
lret
jo
push
adc
inc
sbb
cmpl
pop
cli
popf
jle
mov
cmp
cmpsb
cld
sub
jns
fdivrp
out
push
movsl
test
shll
repnz
out
stos
repz
cli
in
in
jae
pop
inc
stos
es
and
xor
ror
xchg
push
into
mov
mov
cld
xchg
or
mov
xchg
cmpsb
lock
xor
fsts
sbb
fnstenv
push
xor
mov
cmpsb
cmp
gs
jnp
mov
add
inc
rcr
jmp
loop
cltd
cmp
sbb
popa
sahf
stos
es
fwait
test
mov
push
xorb
pop
pop
fisubrs
add
push
stos
jecxz
ja
push
sarb
mov
fnstcw
bound
mov
mov
arpl
pop
sub
mov
popf
popa
scas
enter
push
std
rcr
ret
mov
mov
add
mov
xchg
xorl
jns
mov
popa
jo
mov
out
add
fcoms
loope
mov
cmpsl
cmp
sub
and
addb
push
lahf
fsubrs
movb
pop
sahf
sarl
xor
or
scas
inc
cmpsl
and
cmpsb
insb
jae
js
lods
shr
aam
push
movsb
xlat
mov
fstl
fbstp
hlt
mov
mov
push
adc
sahf
sub
hlt
pushf
or
mov
scas
mov
adcb
mov
ret
lods
jae
or
addr16
test
adcb
sti
cwtl
call
or
idiv
cmc
cmp
fwait
jbe
push
cmp
or
mov
pop
imul
jbe
adc
sbbb
test
add
les
cmpl
adc
pop
sub
divl
shlb
lret
inc
pop
mulb
lock
xor
add
int
fisttpll
das
add
out
cwtl
adc
out
hlt
adc
lahf
lret
pop
repz
mov
addr16
cltd
push
movsl
cltd
lahf
push
lods
lods
mov
or
in
xchg
stc
inc
shrb
cmp
sub
ja
xor
call
dec
fwait
pop
and
jo,pt
imul
sbb
push
lret
pushf
xchg
add
rorb
popa
mov
sub
or
inc
stos
scas
and
sbb
dec
inc
mov
xchg
fs
dec
xchg
mov
adc
bound
push
add
nop
outsl
inc
adc
fisubrs
orb
sbbl
fiadds
push
movsb
or
lock
sbb
call
loopne
cmp
orb
cmp
into
jo
adc
repnz
insl
or
mov
mov
jecxz
dec
mov
fisubrs
add
push
test
testb
sbb
push
test
pop
xor
int3
sbb
and
add
cmp
mov
adc
mov
loope
inc
inc
mov
xchg
dec
sub
xorl
mov
dec
and
test
pop
mov
imul
hlt
sub
xor
adc
aad
mov
mov
ljmp
dec
dec
lahf
paddsw
xchg
les
or
inc
fcmovnbe
jp
push
dec
and
mov
shl
lods
pop
or
xchg
popa
xchg
jae
pushf
clc
orl
add
int3
jno
mov
mov
inc
xor
sub
push
mov
push
mov
std
sbb
jb
jg
and
icebp
orb
das
pop
repz
nop
adc
xchg
pop
aam
mov
push
pushf
aaa
mov
lret
int3
sbb
cmp
ret
or
ljmp
jno
xor
adc
inc
push
push
out
popa
cmp
es
lret
pop
jne
xor
stc
ja
loope
xor
popa
movsb
lods
sbb
sub
or
gs
lret
jp
and
test
and
lcall
fcoms
push
pusha
xor
mov
test
mov
dec
mov
je
sub
mov
jns
test
out
dec
add
push
xchg
add
mov
pop
sbb
xchg
xor
insl
jecxz
loope
cmpsb
cmpsb
or
call
inc
push
cmp
mov
std
fmuls
scas
hlt
int3
daa
ret
dec
je
and
push
ds
inc
mov
add
mov
fwait
xor
repnz
out
adc
mulb
lods
jb
fwait
fadds
cmp
sbb
mov
push
loopne
xor
push
pop
mov
int
mov
outsb
xchg
pop
jp
sbb
outsb
push
aas
fistps
notb
pop
aam
push
push
ret
adc
inc
xchg
mov
xor
je
ret
hlt
mov
push
push
push
inc
rcll
orb
mov
test
pop
sbb
push
jg
and
mov
xlat
enter
jp
scas
enter
xor
lods
iret
scas
push
pop
loope
inc
div
mov
leave
pusha
ret
int3
sbb
outsb
aad
outsl
icebp
xchg
sbb
jg
imul
je
in
dec
mov
out
sbb
bound
pop
loopne
inc
in
sub
mov
pop
jo
aas
sub
rcrb
xchg
cmp
rcrb
pop
pusha
jmp
dec
xchg
xchg
les
ljmp
pop
fwait
jnp
into
scas
xor
jne
mov
stos
gs
hlt
mov
jnp
mov
push
xor
push
cmpsb
xor
ljmp
idivb
mov
jge
repnz
jle
mov
push
adc
mov
push
pop
mov
mov
imul
mov
orb
mov
clc
in
xchg
lcall
sbb
dec
jae
mov
add
movsl
lcall
xchg
sub
xchg
cmp
or
outsl
and
std
inc
int3
jae
movsl
mov
fsubr
andl
inc
push
leave
ss
call
fdivrs
push
jae
mov
xchg
xchg
push
sub
test
pop
pop
or
lret
inc
icebp
jae
mov
pop
mov
fwait
dec
les
je,pn
sti
cmp
mov
inc
adc
in
lret
cmp
mov
cs
or
xchg
lods
adc
ljmp
mov
push
pop
popf
es
mov
mov
aad
scas
fistl
call
xchg
stc
mov
cmp
loop
pop
sub
jno
jp
loopne
outsb
in
add
mov
jp
mov
fwait
data16
pop
xor
les
into
mov
pop
ret
flds
js
mov
lods
out
mov
and
jp
lahf
in
ja
mov
or
test
sub
or
lock
movsb
sarb
sub
jo
push
pop
je
push
pop
clc
pcmpgtd
pop
scas
jg
jmp
lret
shlb
nop
sub
xor
inc
mov
inc
cmp
mov
mov
cld
sbb
pop
cmpsl
pop
inc
push
mov
dec
pop
je
mov
xchg
mov
es
xor
xor
dec
mov
int
fimuls
ja
inc
lock
xorl
cmp
xchg
xor
sub
pushfw
push
xor
sub
lea
xchg
jo
rorb
lahf
pop
and
sbb
sub
das
shlb
ret
fsubl
mov
faddp
mov
flds
rcll
jmp
loopne
cli
dec
sbb
std
test
mov
jae
testl
insl
aaa
jp
stos
xlat
xor
mov
cmc
inc
pop
ja
dec
test
ljmp
int3
stc
mov
pop
icebp
sbb
jecxz
mov
popa
fiadds
sti
xchg
loope
inc
je
adc
aam
cmp
js
mov
mov
xorb
fwait
push
cmp
push
fistl
arpl
cmpl
sub
es
jecxz
mov
rcll
sbb
inc
ja
fistpll
sbb
imul
jg
daa
mov
mov
cmpsl
aad
fldl
mov
push
inc
imul
add
repz
jno
sbb
shll
jae
push
push
jl
stc
jo
sar
pop
call
mov
mov
les
mov
cmp
mov
andb
dec
shll
pop
pop
xor
fldl
sbb
loopne
les
add
mov
pop
into
lret
mov
je
js
jae
sub
and
jmp
aad
or
xchg
adc
jg
in
dec
stos
adc
add
sbb
inc
insb
dec
push
stc
in
add
loopne
inc
inc
jecxz
push
int3
mov
xchg
fisttps
mov
test
push
ret
fsts
repz
cwtl
popa
adc
mov
jecxz,pt
mov
call
pop
mov
daa
stos
pop
pop
lods
inc
not
mov
test
or
sbb
dec
sti
mov
sub
pushf
add
jns
lock
adc
out
in
jo
mov
push
xchg
pop
sub
jns
and
pushf
mov
sbb
test
repz
push
mov
xor
insb
movsb
jge
xchg
ja
mov
ror
xchg
pop
xorb
movsb
pop
insb
sub
scas
xchg
sub
fisubrl
push
ljmp
cmp
xchg
dec
or
shr
sub
pop
lret
fmul
sub
jecxz
or
adc
sub
mov
arpl
fsubs
shll
xor
and
mov
stos
mov
adc
hlt
pusha
mov
imul
pushf
mov
jo
sahf
pop
repz
insb
enter
stos
pop
fcmovb
cmc
in
pop
cmp
dec
pop
mov
fnstsw
cli
lea
pop
cmp
lds
xlat
dec
cwtl
stc
fmull
jbe
ret
scas
sub
mov
mov
mov
jns
in
jnp
ret
in
sbb
inc
inc
inc
xchg
cmp
and
push
cld
inc
aaa
repz
icebp
lret
push
push
xor
xchg
scas
arpl
mov
mov
xchg
adc
cmp
xchg
js
jno
sbb
loope
repz
mov
push
xor
xor
repnz
call
push
pop
insl
in
sub
scas
int
fwait
pop
pop
jbe
ret
jne
fisubl
movsb
pop
flds
cmpsb
xchg
or
aas
rorl
inc
cmp
and
mov
xor
fisttpl
popfw
push
decb
sarl
sub
scas
sar
jb
loopne
divb
out
mov
mov
mov
push
addl
fwait
cmp
adc
test
into
cmpsb
in
sti
pop
or
fs
movsb
jae
xor
cmc
inc
shrb
push
adc
out
adc
cs
fists
dec
inc
xchg
popf
xor
push
std
pop
dec
jno
stos
push
sub
adc
test
dec
lds
or
inc
push
jo
pop
adc
outsl
das
mov
fists
add
insl
cmc
in
push
fisttps
adc
shl
lret
jbe
int3
or
adc
inc
repnz
outsl
cld
lods
test
dec
mov
fidivrl
sbb
mov
in
jnp
lret
adcb
mov
cltd
mov
aad
jl
scas
shrb
jnp
cmc
xchg
scas
fildl
ss
rcl
imul
flds
push
push
jb
outsb
add
dec
mov
popa
ss
hlt
xor
push
fistps
andb
pop
dec
adc
pop
orb
scas
mov
sarb
cld
push
jb
jne
jo
mov
dec
and
push
xchg
sbb
shlb
jnp
adc
push
pop
xchg
push
xor
pushf
sbb
nop
mov
mov
xchg
sbb
add
fistpl
popa
cmp
das
rcll
dec
adc
mov
sub
push
push
fucomp
outsl
push
xlat
loop
push
jl
pop
dec
sbb
std
fadds
jp
sbb
outsb
and
out
xchg
xor
lcall
in
ret
pop
adc
inc
jnp
and
int
push
dec
pusha
fcoml
test
stc
dec
stc
cmpsl
cli
stos
imul
sub
xchg
int3
mov
mov
andb
pop
stos
sarb
insb
iret
sbb
jno
cmc
scas
rorb
out
mov
out
push
cmc
lds
cmovl
imul
mul
inc
and
out
xchg
jmp
jle
rclb
pop
fnstsw
dec
popf
notl
pop
mov
insb
and
jle
arpl
out
movsl
fistps
enter
loope
aaa
xchg
loop
lods
and
lret
in
pusha
cli
ret
pop
inc
and
fwait
push
es
dec
dec
daa
sbb
dec
xchg
call
or
xor
push
cmpsb
daa
outsb
sub
mov
push
popa
mov
aam
lret
and
loop
pop
pop
mov
popf
inc
test
jnp
scas
jne
addr16
add
hlt
adc
aad
rdpmc
pop
sti
adc
dec
bound
mov
ds
mov
dec
mov
in
push
test
mov
sbb
out
sbb
loopne
push
lds
mov
adc
rclb
sarb
jns
xchg
dec
cltd
sub
rolb
ss
insb
leave
mov
daa
or
cmp
shl
outsb
insl
addb
mov
in
xchg
sbb
sub
loop
push
jnp
fisttpll
negl
sbb
jno
xchg
push
and
add
int3
dec
jge
fnstsw
dec
mov
into
sub
mov
cmp
pushf
fdivs
and
push
mov
outsb
push
push
mov
mov
jne
mov
pop
pop
mov
dec
xor
jg
or
xchg
cmp
sahf
push
lods
cmp
jns
std
mov
jnp
add
orb
push
pop
pop
filds
pop
sti
xchg
sbb
hlt
rclb
xor
cmpsb
push
push
dec
xor
cmp
cld
xchg
popa
xchg
jmp
icebp
call
mov
notl
stc
mov
jle
or
mov
cmpsb
int3
push
adc
mov
inc
outsl
ss
call
movsl
dec
outsb
pop
pop
ljmp
jne
js
add
dec
mov
ret
lret
sub
add
pop
out
cmc
mov
insb
adc
jmp
addr16
stc
aad
data16
xchg
loop
sbb
sub
cltd
lds
test
repz
stos
hlt
sti
push
imul
inc
fs
pop
gs
mov
mov
ret
mov
inc
pop
and
add
out
je
jmp
fwait
repz
aam
push
sub
pushf
loop
ss
mov
cli
aas
mov
sbb
jns
inc
jg
inc
sbb
and
sub
xchg
or
jge
aas
movsb
inc
xchg
sub
dec
div
stc
adc
xor
inc
into
xchg
xchg
outsb
or
dec
adc
stos
cmp
ret
dec
sbb
in
mov
repz
fcomps
loopne
ffreep
cmp
add
sub
sub
and
ror
pop
xor
inc
repz
shll
ljmp
cmpsl
scas
test
outsl
bound
jns
idivb
fbstp
xor
outsb
andl
push
xchg
shlb
cmpb
aas
in
clc
movsb
xchg
or
lods
cmp
enter
imul
mov
fmull
fldcw
lret
xor
stos
int3
and
std
test
jo
xor
mov
dec
add
xchg
or
and
lcall
lcall
cmpsb
stos
pop
sbb
bound
arpl
mov
push
jnp
xchg
pusha
push
or
les
add
mov
fstps
sub
sbb
mov
pop
jmp
xchg
sbb
aas
adc
in
pop
and
cmp
sub
lds
jp
test
pop
push
xor
arpl
pop
xlat
adc
test
int
leave
sbbl
dec
loop
mov
je
xlat
add
shll
pop
mov
push
dec
aad
lds
pusha
loop
mov
sbb
cmpsl
adc
sbb
out
xchg
cmp
arpl
out
and
jbe
mov
cmp
mov
cwtl
inc
xchg
test
dec
cmc
adcl
mov
enter
mov
std
ffree
sahf
fstps
movsl
pop
in
pop
iret
jo
mov
data16
movb
xchg
mov
jg
ja
stc
jmp
lods
stos
sbb
sub
mov
sub
pop
add
mov
or
enter
addb
and
pop
sbb
das
push
jecxz
add
push
fs
mov
mov
mov
xchg
add
or
push
test
dec
push
scas
jmp
mov
cmp
lock
data16
sti
stc
rorl
sub
xchg
sub
dec
inc
add
dec
pop
push
dec
jo
xchg
or
xor
pop
inc
data16
cmp
clc
push
cli
decb
fwait
subl
out
jbe
jmp
push
repz
dec
and
out
dec
loop
mov
ret
rclb
xlat
jae,pt
lods
stos
cmp
mov
iret
pusha
mov
inc
sete
or
fucomip
push
scas
xchg
add
gs
pop
adc
inc
in
fadds
mov
lcall
dec
arpl
imul
ficoms
jno
jecxz
in
push
out
clc
xchg
mov
sub
aam
aas
shll
pop
lods
out
bound
xor
repz
xlat
cwtl
inc
add
mov
outsb
sti
icebp
and
and
inc
das
jmp
xor
push
pop
pop
out
jne
jns
mov
js
inc
mov
ljmp
fs
xor
push
shlb
xchg
jnp
sar
dec
xchg
shll
mov
inc
test
mov
sbb
pop
adc
loop
jbe
fwait
movb
andl
jg
mov
xlat
insl
cmp
fwait
push
fistpl
sbb
mov
pop
inc
cwtl
or
aaa
push
sti
mov
jne
fisttps
dec
mov
leave
push
push
adc
add
dec
icebp
cmp
xchg
or
js
mov
and
and
cltd
outsb
or
ret
xor
test
lret
rorb
sbb
push
dec
cld
jnp
push
mov
and
mov
pusha
xor
push
sbb
mov
insb
xor
push
out
notl
inc
inc
inc
push
push
dec
and
jb
cmpsl
out
xor
xchg
push
mov
dec
movsb
inc
jae
hlt
push
mov
pop
mov
sti
mov
jge
das
adc
mov
dec
pop
iret
xor
out
push
dec
movsl
loop
pop
sub
xchg
pop
jae
xor
jp
stc
int
sbb
inc
mov
push
sbb
lret
mov
sub
shlb
xchg
push
cmp
push
adc
cmp
dec
dec
mov
xchg
cmp
vpacksswb
xor
cmpb
cmp
aaa
push
dec
clc
scas
push
loopne
movsb
je
push
jns
sub
outsb
mov
sbb
xchg
pop
sub
dec
aam
and
sbb
lods
clc
cmp
xor
aad
jle
jge
shll
arpl
mov
pusha
mov
int3
or
ret
jle
in
lods
dec
cs
pop
or
pop
adc
imul
dec
fnsave
pop
pusha
mov
xlat
sub
lret
mov
test
call
and
push
push
push
ds
jle
das
pop
sbb
lock
std
loope
push
sub
into
fs
jg
loop
mov
mov
sbb
mov
sub
test
pop
shll
in
lcall
iret
enter
insb
jno,pt
xor
addl
ret
sbbl
adc
movsl
repz
xchg
loope
or
int3
pop
add
jl
ret
sub
cmp
inc
out
test
jb
dec
mov
xchg
sub
sub
pusha
out
inc
mov
out
jge
adc
call
pushf
loope
imul
mov
inc
push
cmp
xor
xor
into
nop
jns
or
mov
cmp
jge
mov
ja
cmp
mov
into
pusha
fs
xor
lds
push
add
call
sarl
lods
inc
mov
pop
je
fidivs
icebp
fcmovbe
mov
xor
mov
ja
xchg
jne
dec
xchg
dec
sub
dec
fadds
and
dec
sbb
fcmovu
jne
inc
mov
xchg
stos
mov
repz
and
ret
fildll
enter
or
pushf
addr16
xchg
iret
cmpsb
out
rcrb
push
loopne
sub
xchg
lea
ljmp
cmp
adc
sti
adc
mov
push
sti
pop
mov
inc
push
push
sbb
lret
push
fists
lret
lret
imul
push
jmp
outsb
xchg
inc
push
pop
inc
jo
popf
adc
je
jno
fs
imul
jle
cmpsb
xchg
out
mov
push
dec
push
sub
out
push
pop
aaa
push
pusha
leave
mov
xor
sbb
outsb
outsl
pop
sahf
mov
jns
or
mov
mov
ljmp
pop
and
subb
lods
sub
dec
jge
sub
das
sbb
adc
add
rcrb
bound
dec
in
dec
pop
or
addb
icebp
mov
push
addr16
mov
jns
xchg
daa
mov
and
fimuls
vxorpd
or
and
inc
xorb
push
jecxz
lcall
rclb
xchg
outsl
das
jbe
push
adc
push
push
inc
lods
pop
gs
push
jecxz
test
jmp
jne
enter
xchg
in
mov
loopne
idivl
in
sub
push
mov
mov
mov
push
clc
dec
repnz
jo
ljmp
inc
imul
iret
loope
sub
adc
test
add
addl
mov
jns
repnz
mov
pop
insb
or
cs
aad
fs
rcll
in
cmpsl
jecxz
aam
sub
xchg
decb
cmp
shr
loope
or
lods
cmpsl
sub
jge
xchg
das
enter
repnz
cli
icebp
shrl
add
add
sbb
in
fnsave
push
dec
xchg
jne
sub
xchg
aaa
fsts
out
dec
push
mov
cmc
rcrb
xchg
pop
add
mov
sbb
sbb
cs
psubsw
in
daa
mov
pop
push
inc
jbe
xor
lahf
dec
pop
dec
xchg
lds
mov
cmp
cmpsb
pop
jae
lcall
mov
les
mov
enter
andl
in
jno
andl
and
fwait
pop
mov
dec
lret
or
loop
popa
push
sti
inc
inc
and
or
sub
std
leave
fwait
imul
xor
sbb
push
enter
mov
fildl
pushf
pushf
or
cmp
jb
test
mov
cmp
imul
nop
fisubrs
mov
mov
pop
push
rcll
decl
imul
cmpb
inc
cs
xorb
xor
divl
push
add
push
xor
mov
cmpsb
roll
cmp
sarb
cmp
aaa
leave
xor
test
jge
or
cmp
pop
xor
lock
pop
fmuls
fwait
test
rorl
aam
dec
sub
ds
add
test
cmpsb
mull
cmp
nop
test
xor
shlb
pushf
adc
jnp
ja
jge
add
dec
subl
cmp
mov
add
pop
add
jae
insl
xchg
ljmp
aam
jnp
ss
ja
lods
test
cmp
dec
pop
and
scas
pop
xor
daa
sbb
scas
lock
pop
ljmp
pop
in
jne
into
sbbb
jns
mov
push
cmp
adc
aad
stc
lock
or
push
sbb
imul
ds
popf
pusha
daa
outsl
cltd
mulb
cwtl
loop
fistpll
lds
push
subl
inc
lods
dec
in
loop
mov
and
xchg
mov
cld
pop
aad
les
push
xchg
dec
xchg
mov
in
in
test
mov
xchg
aad
in
push
arpl
das
and
cmp
pop
lods
lret
cmc
out
pop
ds
out
mov
push
rolb
cmp
pop
sbb
lods
ds
cmp
inc
jecxz
dec
arpl
sti
add
cmp
xor
sbbl
insl
ret
xchg
aam
movsl
jge
add
cmpsl
xor
bound
aaa
stc
cmp
repz
sbb
sti
lret
lahf
fidivrs
push
cmp
inc
push
adc
xor
pop
jge
iret
fadd
ja
inc
mov
cmp
in
sbb
add
popa
mov
stc
add
add
jno
jne
mov
lods
xor
shrl
pop
mov
lcall
dec
xchg
push
push
mov
add
int3
mov
mov
clts
add
shll
dec
jo
mov
pop
adc
jo
jno
and
cmp
es
mov
or
stos
sub
sub
xchg
fiaddl
sahf
cmp
xchg
adc
jl
fsubp
stos
push
out
lahf
out
sub
ds
fcmovu
clc
cmp
xor
pop
nop
test
ja
add
push
cmp
shlb
repz
dec
pop
lds
xchg
in
fs
pop
jp
jns
aas
pop
mov
clc
xlat
out
cmp
loope
mov
inc
sbb
jno
or
lcall
add
mov
loope
jge
out
pop
shll
cmp
inc
xchg
pop
test
pop
push
cmp
pop
aam
xchg
je
mov
out
in
push
dec
test
fdiv
pop
adc
shl
xor
jmp
xchg
or
popa
pop
in
sbb
out
push
mov
and
cld
xor
adcl
leave
bound
add
ja
aam
jb
je
and
out
inc
and
pushf
iret
or
sub
xchg
loop
rsqrtps
pop
hlt
push
popa
xor
xor
push
lods
xor
movsb
ss
fistpl
insl
dec
mov
scas
mov
imul
jle
shll
cmp
jnp
fisubs
gs
xchg
int
outsb
sar
mov
inc
out
ret
dec
ret
mov
xor
add
repz
add
mov
or
adc
mov
shl
xchg
pop
inc
xchg
mov
fcmovnb
leave
inc
xor
xchg
mov
xchg
lcall
pop
mov
or
loope
ljmp
pusha
ljmp
push
jnp
sub
sub
inc
stos
xchg
aaa
xor
fwait
and
cmp
dec
outsl
pop
pop
gs
mov
nop
xorl
daa
outsb
out
loop
cmpb
xchg
inc
and
pop
mov
cmp
dec
js
ja
andb
ds
pop
jnp
sub
fmuls
ret
lock
or
loopne
adc
pop
rclb
iret
bound
sbb
pop
mov
dec
movsl
mov
fsubrl
add
mov
in
icebp
shl
je
sbb
aaa
jge
mov
stos
xchg
aaa
movsb
outsb
fldcw
and
in
jle
xlat
jne
jbe
or
jg
mov
mov
mov
mov
inc
mov
jge
rolb
mov
mov
jg
mov
push
shrb
repz
xchg
mov
sti
imul
mov
sbb
and
movsl
adc
or
pop
fsubrs
pusha
repnz
test
aas
gs
lds
jns
pushf
addb
mov
mov
popf
mov
pop
push
xchg
add
jp
stc
das
mov
push
daa
out
cmpb
js
adc
es
jmp
xchg
int
adcb
and
or
loopne
scas
sub
mov
adc
inc
aaa
gs
push
outsl
xor
mov
fcomps
pushf
std
lods
jg
sti
sbb
and
pop
mov
cmp
outsl
mov
lock
enter
mov
xor
data16
xor
mov
shlb
ljmp
out
call
push
dec
in
fidivl
or
bound
fisttpll
cmpb
cmp
not
add
xor
inc
mov
lock
add
xchg
outsb
sahf
adc
pop
sti
nop
dec
adc
rorl
cmpsb
lods
outsl
loopne
push
xchg
fnstcw
arpl
icebp
mov
ja
mov
test
arpl
icebp
mov
sbbl
rorl
sbb
sti
adc
inc
in
mov
lock
test
jns
inc
cmpsb
cmp
pop
xchg
fdivl
movsl
xchg
and
imull
mov
lcall
loop
test
jge
jmp
jae
repnz
test
pop
xchg
loop
ljmp
mov
xchg
popf
xor
leave
sbb
fdivl
jp
stc
or
cmp
or
push
adc
scas
es
movsl
out
adc
clc
popf
mov
push
stc
insb
call
rorl
push
dec
push
jne
into
cwtl
ljmp
jb
cmp
andb
mov
xchg
cmc
or
les
adc
or
test
test
jno
ss
cmp
cmp
or
insb
shrb
dec
and
xchg
popf
push
and
fs
push
imul
mov
mov
jns
in
push
cltd
inc
jecxz
sub
xlat
addr16
sub
rorb
lods
repnz
xchg
xchg
mov
dec
in
fs
std
pusha
call
loope
push
rcl
int
adc
ret
int3
adc
repz
stos
pop
outsl
mov
aaa
je
leave
addr16
push
daa
adc
jae
add
sbb
pop
or
pop
xchg
lods
outsb
lea
ret
outsl
out
xchg
push
cltd
bound
pushf
push
ds
mov
shlb
imul
stc
mov
sub
hlt
pop
scas
jno
mov
outsl
push
dec
sahf
ds
sub
push
pop
xchg
mov
mov
fsts
cltd
jg
inc
hlt
pop
scas
xchg
subb
int3
pop
mov
jge
outsb
pop
outsl
xor
xchg
stos
out
in
je
mov
jbe
pop
jmp
jmp
std
scas
or
cmpsb
test
mov
out
sti
popf
mov
out
pusha
lea
aas
lret
scas
pop
lock
add
xor
mov
out
and
imul
pop
es
stos
movsl
aad
jne
lea
xchg
and
push
pop
jle
adc
clc
lods
pop
and
ss
mov
jns
adc
aad
insb
pop
adc
sbb
and
lea
adc
lods
add
test
les
rclb
lods
sub
ljmp
notl
inc
xchg
xchg
and
xchg
inc
data16
mov
jne
jb
xlat
xchg
and
ja
inc
pop
sub
push
sbb
loop
xchg
and
mov
loop
cmc
adc
xchg
aas
idivb
add
pop
ret
test
mov
cmpsl
add
jne
or
iret
lahf
clc
mov
sub
cmpsl
or
adc
or
mov
xchg
fwait
scas
mov
xor
and
xchg
xchg
push
ja
lcall
cmpsb
mov
insl
add
movsb
inc
divl
mov
das
dec
pop
pop
mov
mov
sahf
jge
inc
cmp
out
mov
sub
dec
lcall
aad
pop
subl
lods
mov
outsl
insl
js
sahf
xchg
test
mov
cs
dec
bound
push
mov
loopne
sbb
inc
cmc
xor
ret
add
jl
sbb
lea
outsl
mov
mov
and
inc
sub
aas
nop
push
out
mov
fidivs
sbb
pop
into
stos
sub
push
xor
fcmovnb
xchg
mov
shrl
jl
aas
and
add
movsb
inc
jns
in
mov
push
cmp
and
imul
imul
mov
lods
fisubs
jecxz
sbb
push
sbb
add
mov
mov
and
mov
cmpsl
jne
fnsave
xchg
mov
jo
and
inc
jp
sti
or
sbb
aad
sarl
pop
or
push
mov
sahf
sub
rcl
fdivl
scas
ds
movsb
xor
push
fs
push
lret
or
pop
dec
push
dec
pop
gs
push
pushf
pop
pusha
es
movsl
fmuls
and
jbe
arpl
jg
loope
sarb
mov
cmp
push
nop
lds
or
mov
out
rolb
les
mov
dec
nop
jne
das
gs
lret
icebp
call
or
jp
ja
cmpsb
ret
xchg
sahf
mov
sbb
push
outsb
test
test
loope
or
mov
sarb
push
sub
add
jmp
pop
clc
cmpsb
jge
clc
mov
xchg
inc
mov
jbe
xchg
test
stos
addr16
add
in
dec
data16
inc
push
mov
data16
push
xchg
nop
sub
aas
pop
inc
push
inc
sbb
mov
push
jno
push
and
orl
outsl
sti
inc
inc
mov
add
mov
mov
or
sub
test
stos
pop
or
mov
or
inc
jl
push
cmpsb
cmp
lret
test
dec
mov
mov
or
in
xchg
mov
mov
xchg
fwait
loope
subb
xchg
mov
xlat
in
clc
inc
or
mov
insb
mov
insl
xchg
lahf
xor
or
into
pop
les
cwtl
inc
dec
rcrl
or
mov
mov
test
and
cmc
dec
cmp
mov
inc
mov
cltd
xor
jo
fs
pusha
mov
clc
inc
fistpll
fstps
in
aas
lea
mov
mov
adc
outsl
push
pop
xor
daa
and
cmc
mov
mov
out
sbb
movsl
xchg
popa
jbe
popa
cmpsl
leave
mov
sbb
ret
jnp
pusha
xchg
shlb
xchg
inc
arpl
cmp
push
push
arpl
stc
in
and
sub
aad
out
pop
nop
int3
sub
push
int3
insl
sub
mov
divb
imull
divl
sbb
std
in
sbb
fs
lret
dec
jle
pop
lahf
mov
jle
mov
mov
push
lods
push
outsl
adc
inc
jb
cmpsl
fimull
push
push
jns
in
dec
pop
dec
sahf
sbb
imul
cltd
fwait
movsl
mov
pushf
xchg
xor
inc
std
xchg
mov
mov
mov
js
test
mov
test
add
xchg
cmpsl
cwtl
jg
sahf
jecxz
pop
xor
push
mov
gs
mov
inc
mov
pop
addl
movsb
and
ficoms
mov
adc
push
cmpl
jecxz
xor
sahf
call
jb
mov
adc
xchg
fnstsw
xor
cmpsl
adc
loopne
dec
jnp
cmpl
sbb
push
or
orb
cli
sub
xor
cwtl
mov
daa
ja
aaa
mov
sub
std
dec
cmp
fcoms
xchg
lock
mov
push
dec
outsl
insl
leave
jge
xchg
or
aaa
adc
mov
ljmp
pop
sub
in
inc
adc
xchg
in
cmp
pusha
pop
in
loopne
testb
int
sbb
fdivl
dec
xchg
xor
and
int
add
mov
stos
fsubr
push
mov
jne
xor
stos
xchg
fisttpl
lret
fstpl
adc
adc
lods
mov
and
mov
test
and
lret
test
faddl
xchg
pop
push
cltd
sub
leave
lods
xor
je
mov
inc
mov
test
mov
sub
cwtl
je
dec
lods
sbb
sar
add
jnp
aas
sbb
push
iret
repz
inc
test
xchg
dec
sbb
mov
sub
ds
int
cmp
loope
iret
arpl
popf
or
xchg
das
sbb
inc
mov
or
sub
sbb
shl
push
les
daa
sbb
in
push
push
sub
sbb
inc
arpl
out
pop
fmuls
outsb
push
sub
loop
cmpsb
ja
xor
subl
mov
mov
cld
fcomps
push
mov
outsb
mov
dec
mov
sub
and
icebp
in
rcr
test
test
sub
mov
mov
inc
push
data16
xor
pop
ja
pop
in
lahf
inc
mov
sub
movb
jo
test
ret
mov
fstps
add
inc
xchg
mov
outsl
std
getsec
icebp
scas
or
xor
mov
add
ds
add
fnstcw
jle
inc
sub
stos
xchg
xor
movsb
hlt
imul
xchg
mov
jne
aaa
inc
push
pushf
dec
or
popf
push
loope
xchg
xchg
pop
stc
push
mov
mov
or
add
rclb
mov
adc
inc
cld
inc
mov
jl
xchg
shll
mov
jo
jae
rcll
add
xchg
sbb
mov
fbld
addr16
jg
pop
pop
inc
outsb
or
pop
sub
shlb
sbbb
aas
adc
dec
je
inc
scas
mov
push
mov
outsl
shll
add
mov
aaa
xchg
cmpsl
fidivrs
or
mov
jo
sti
jecxz
imul
adc
fsts
addr16
sbb
aam
rcrl
imul
outsl
jns
sub
in
outsb
inc
cmp
hlt
mov
stos
lret
call
and
cmpsb
push
int3
mov
pop
jnp
mov
pop
adcb
cmp
out
imul
int
adc
add
je
jmp
mov
repnz
xchg
jnp
mov
inc
cmpsl
push
es
pop
lcall
in
ds
pop
mov
mov
addr16
mov
cltd
loop
dec
xor
push
sti
iret
enter
push
sahf
bound
popa
push
lock
sarb
int3
lahf
push
mov
leave
int
sbb
jle
lods
or
pushl
out
into
adc
stos
add
push
jge
xor
sub
cmp
sbb
iret
call
repz
jns
dec
fistps
test
loope
leave
and
sub
repnz
push
adc
sbb
wrmsr
inc
dec
into
xor
rcll
in
outsb
cmp
aas
adc
dec
push
or
incl
jle
ret
xchg
ljmp
xchg
in
ficoml
inc
loop
pop
movsl
filds
loope
stc
cmp
ss
dec
or
push
movb
inc
out
mov
dec
push
mov
xchg
ficomps
popf
inc
mov
fcomp
cmp
popa
mov
in
dec
lahf
mov
aaa
jb
into
push
cmpsl
movsb
cmp
push
sti
test
nop
add
shll
jp
repnz
icebp
and
xor
mov
into
cmpsb
lea
xorl
adc
mov
stos
cmpsl
cmpsb
jge
cltd
pop
inc
negl
sbb
mov
push
je
xchg
xchg
sbb
mov
push
jmp
xlat
mov
out
inc
call
xlat
pop
dec
daa
ret
cwtl
dec
movsb
sub
mov
fcmovu
xlat
js
or
rorb
insl
cmpsb
imul
test
jle
xchg
ret
cmpsl
ss
mov
imul
insl
lcall
cmp
mov
jne
xor
lret
add
mov
lock
push
mov
jno
dec
cmpsl
add
jp
rcll
in
pop
movsl
aam
in
movsl
xchg
ja
mov
out
cmc
sub
lods
out
or
ja
out
popf
es
out
xchg
sub
sbb
out
fists
std
xchg
test
int
dec
fmul
cs
negl
loopne
adc
jo
out
mov
imul
mov
fmull
xor
mov
push
adc
leave
out
arpl
fimuls
js
xchg
rclb
sub
mov
je
xor
adc
dec
push
jo
loop
mov
cmp
jnp
xchg
dec
out
movb
jl
dec
sbb
cmc
pusha
push
mov
dec
xor
xchg
int
sub
add
xor
idivb
in
in
lret
adc
jmp
sbb
aad
mov
xor
mov
cs
repnz
mov
push
lahf
bound
add
xchg
or
pop
mov
test
sub
cmpsb
sbb
lahf
int
stos
sbb
subb
mov
xchg
add
mov
jbe
dec
push
dec
fildll
push
and
mov
push
popf
or
mov
cmpsb
or
mov
outsb
outsl
mov
push
inc
mov
xor
cmpsb
fucomip
std
out
push
imul
in
xchg
sub
popa
test
sahf
jp
mov
xor
jl
adcl
inc
dec
ret
aas
mov
sarb
lret
insl
mov
inc
pop
sahf
pop
cmp
inc
aas
push
mov
stc
insl
fnstcw
sbb
or
daa
mov
nop
cmp
ds
inc
dec
jle
xchg
xor
dec
or
adc
roll
adc
in
fidivrs
xchg
push
sahf
je
iret
arpl
test
and
cmpsl
mov
push
dec
xchg
std
shrl
mull
xchg
outsl
inc
mov
cs
lret
les
in
imul
ss
pop
push
add
pop
lods
inc
cwtl
fimuls
sub
mov
add
aad
fs
mov
push
xchg
cwtl
add
sbb
mov
loop
loopne
testb
stos
add
out
xchg
cltd
inc
sub
movsb
xor
int
ljmp
cltd
sarl
cmp
xchg
cmp
pop
add
negl
inc
ljmp
loope
push
mov
cwtl
add
insb
xchg
punpckhdq
pusha
in
sub
ja
sub
fmuls
sbb
jne
add
in
repz
and
inc
fdivl
pop
aam
imul
inc
fildll
ffree
mov
lea
and
pop
imul
xchg
xchg
inc
fmuls
inc
sub
jp
js
ja
or
xchg
outsb
mov
inc
aam
mov
mov
pop
mov
adc
imul
push
imul
daa
out
loope
lds
xor
inc
fidivl
test
and
adc
arpl
or
xor
in
cs
inc
aaa
push
cmp
push
loope
imul
jb
xor
loopne
cld
or
int
repz
mov
subl
sbb
add
mov
pop
add
mov
jp
mov
cmpl
jmp
or
icebp
aam
ret
xchg
mov
push
fsubr
add
in
sbb
pop
nop
mov
mov
jb
jp
inc
xchg
inc
rcll
jl
sub
ret
push
and
sub
clc
mov
push
test
cmc
pop
ss
lret
mov
xchg
insb
xchg
or
jnp
dec
dec
mov
cmpl
sbb
data16
subl
das
popf
pusha
repz
add
xorb
jge
addb
dec
decb
repz
adc
pop
mulb
test
bound
push
mov
enter
pop
rorb
mov
xchg
xchg
imul
in
scas
js
adc
and
out
adc
stos
loope
test
cmp
xchg
xchg
into
sti
jo
in
ds
jb
pusha
leave
in
jo
sbb
sub
ss
dec
les
cmp
fs
jmp
lcall
mov
sbbl
sbb
dec
movsl
rorl
iret
lcall
movsl
inc
dec
scas
jecxz
into
push
cmp
pop
push
mov
movsb
fwait
push
es
in
push
inc
cmp
cmp
testl
inc
lock
push
sbb
je
scas
adc
and
jmp
loopne
inc
mov
push
add
pop
dec
inc
pop
fs
scas
push
lcall
jge
subl
cmc
notb
cmp
jne
shrb
pop
lods
cmc
testb
sbb
ja
fwait
cltd
mov
xlat
shl
jb
mov
sti
mov
xchg
sahf
pop
loopne
xchg
xlat
pop
mov
mov
into
in
iret
and
arpl
int3
lock
sbb
gs
stos
insb
or
fdivs
xchg
inc
divb
pop
outsl
adc
out
aad
adc
xchg
into
shlb
pop
cmp
add
or
stc
xor
sbb
sub
pop
rol
cmpsl
ror
aaa
es
jns
call
cmpb
jmp
sbb
pop
push
roll
and
mov
scas
push
or
into
inc
popa
fwait
mov
mov
fcoml
xor
mov
shlb
mov
movsb
push
jb
out
mov
fldl
ret
popa
jno
iret
xchg
clc
aaa
add
sub
mov
xchg
ret
push
pop
mov
push
push
popa
inc
inc
sub
enter
addl
pop
insb
in
lds
push
out
sbb
cs
loopne
fmull
adc
ljmp
push
jle,pn
cli
fbld
fidivrs
ss
adc
loope
and
cmp
out
aaa
xchg
cld
sub
jnp
mov
add
mov
dec
jo
jmp
or
in
fsubr
mov
clc
ja
leave
pop
adc
xor
jg
xchg
mov
hlt
lods
stos
sub
push
inc
pop
sub
and
int
and
dec
pop
or
inc
fldl
enter
xor
movsb
jle
sub
pop
mov
orl
lds
sbb
cmp
add
dec
mov
dec
and
xlat
ja
cmp
pop
dec
scas
cmp
pop
push
js
sub
sub
inc
outsl
xor
call
clc
js
jmp
and
ss
stos
xor
insb
ja
inc
xchg
lods
mov
add
ljmp
iret
mull
jo
push
adc
add
sbb
call
in
movd
cmp
jg
inc
pop
fwait
pop
insl
mov
fdivs
ficompl
mov
rcl
push
js
nop
and
pop
mov
out
pop
fidivl
hlt
xor
or
push
mov
and
push
xchg
test
dec
repnz
fldcw
pop
mov
int3
subb
sti
imul
fwait
repnz
sub
pop
lcall
cmp
imull
or
repz
and
frstor
dec
stc
adcb
xor
dec
dec
shrb
adc
dec
out
cmpsl
jmp
je
frstor
sub
sbbb
mov
into
stos
adc
popf
cmpl
lods
cmp
insl
test
mov
ljmp
lods
sub
lods
pop
insl
lahf
movb
out
lcall
mov
cmpsl
call
loop
and
ret
mov
mov
fidivs
mov
xlat
jbe
lcall
cmp
xchg
jnp
adc
in
sbb
jmp
push
fcmovnb
enter
mov
xchg
stos
mov
dec
in
dec
inc
in
gs
mov
lcall
xchg
push
mov
arpl
fsubrs
inc
cs
pop
rol
sbb
inc
in
lea
shrb
push
stc
add
xchg
outsl
or
aam
push
hlt
jg
mov
out
mov
dec
dec
icebp
inc
popa
mov
cmp
stos
jbe
mov
dec
or
mov
jmp
pop
sub
push
fstpt
das
addr16
xchg
sbb
ret
xor
cmp
cmp
mov
xor
cmp
fdivl
mov
test
xchg
loop
xor
clc
cmp
stos
out
flds
outsl
in
je
rcrl
mov
jnp
in
ret
lds
jae
js
sub
inc
push
testl
mov
int
test
mov
inc
test
jmp
out
mov
loope
mov
popa
inc
ljmp
mov
test
xor
mov
nop
stos
and
aaa
jae
push
jl
and
pop
inc
rcrb
mov
mov
clc
enter
ljmp
leave
lods
or
popa
cltd
les
ret
xchg
and
daa
cmp
sub
mov
and
mov
punpckhbw
sub
shlb
cltd
or
hlt
sub
jae
shlb
shrb
mov
adc
mov
cmp
add
sbb
sbb
pushf
xlat
pop
mov
outsb
call
inc
bound
leave
xchg
mov
cmpsl
xor
jns
push
mov
dec
int
inc
int3
out
je
es
mov
mov
push
in
mov
sub
cmpsl
mov
or
std
or
dec
addr16
rcl
dec
idiv
jnp
and
aad
ret
push
sbb
int3
test
pop
jne
aaa
aad
insb
mov
insl
outsl
out
scas
loop
mov
adcb
mov
pop
orb
sbb
ficoms
inc
sbb
mov
cmc
mov
bound
repz
mov
cltd
rorb
dec
aas
loopne
mulb
inc
push
jne
adc
mov
inc
push
stc
and
add
test
sarb
loop
shrb
les
clc
inc
and
pop
addr16
nop
les
cmp
inc
and
sub
in
mov
shl
and
lahf
pop
and
jne
or
sub
cmpsb
push
adcb
mov
cmp
xchg
xlat
divl
out
mov
outsb
cmp
js
mov
mov
adc
jecxz
pop
fsubp
adc
fnsave
sub
mov
and
or
dec
iret
or
rcll
js
jg
je
fwait
inc
ret
cmpsb
stc
lret
gs
pop
aaa
mov
pusha
inc
aad
scas
imul
cli
daa
popa
cmp
mov
mov
lcall
test
enter
cmp
enter
jnp
cwtl
inc
xchg
inc
jns
test
jle
cmpsl
or
cmp
aad
cmpsl
ret
mov
test
xchg
and
fstp
mov
lea
xchg
inc
and
xor
inc
pushf
and
xor
dec
testl
stos
cli
sub
pop
aas
cmp
push
sbbb
mov
stos
pop
gs
cmc
lret
call
es
enter
and
push
xor
jno,pn
pop
and
add
popf
push
mov
lcall
pop
ret
lods
jns
push
add
mov
movsl
jae
in
sub
xchg
and
popf
xlat
xchg
test
xchg
ds
movsb
pop
mov
iret
insl
sbb
inc
insl
mov
icebp
dec
gs
and
bound
cmc
jge
roll
jecxz
inc
pop
ret
push
cwtl
mov
mov
clc
cmp
popa
push
sbb
xchg
mov
mov
adc
movsl
push
outsl
mull
jecxz
fistpll
jecxz
dec
sbb
insl
lret
and
cmc
xor
push
jo
stos
and
roll
xchg
push
jbe
into
test
lea
test
ljmp
or
popl
sbb
add
adc
xchg
fildl
imul
ss
notb
sub
in
push
bsr
iret
mov
daa
sarl
jg
lcall
fs
adc
or
and
or
sarb
mov
addb
shrl
jo
jns
inc
xor
sbb
xchg
sbb
ret
imul
stos
and
xchg
cld
pop
sbb
inc
jo
push
aaa
pushf
and
xchg
fiaddl
nop
push
pop
aam
clc
ss
cmp
sub
out
ss
push
mov
and
fnstsw
cmc
repz
cmpsl
add
push
iret
ds
popa
or
mov
aas
xchg
mov
push
inc
ja
push
sbb
xchg
sbb
push
js
loope
outsl
adc
mov
mov
sub
fwait
out
shrl
mov
mov
push
and
mov
mov
mov
cld
jmp
int
dec
hlt
cmp
or
in
mov
pop
xchg
inc
aam
fs
movsb
icebp
xchg
test
test
push
pop
scas
movsb
xor
pop
repz
sub
cs
push
pop
adc
inc
pop
aad
dec
sbb
xor
xor
lock
stc
mov
lods
push
jmp
mov
stos
test
dec
subl
imul
mov
cltd
sub
icebp
pop
and
xchg
in
add
or
ret
cli
mov
cmpsl
xor
test
dec
mov
ret
cmpsl
lods
jo
mov
call
aaa
adc
fcomp
rcrb
lods
into
pop
xlat
lods
xor
adc
jg
sahf
sbb
jne
pop
subl
mov
sbb
mov
cltd
int
pop
dec
push
pushl
push
es
outsl
popa
sti
int3
xchg
cltd
adc
jecxz
or
fs
ds
jns
sub
add
testb
jle
push
mov
jo
jbe
jns
jno
inc
inc
mov
es
int
push
fwait
in
cltd
dec
jle
jge
out
insb
jecxz
xchg
sbb
fst
xchg
adc
sub
int
xor
outsl
fadds
dec
mov
das
fisttpl
nop
sub
sbb
cmp
testl
ret
inc
test
inc
pop
fisubrs
movl
pop
fimull
mov
fsubr
adc
push
call
sahf
fwait
loope
or
pop
shlb
cwtl
push
adc
es
xchg
cmpsb
adc
shll
jge
jno
dec
mov
and
sub
popf
sahf
sbb
movsb
lret
or
and
adc
inc
xchg
and
cmp
lock
int
add
sti
and
cmp
scas
or
push
dec
lds
pusha
outsb
xchg
rolb
ficompl
add
cmp
sub
dec
das
sti
or
mov
xchg
imul
out
add
inc
sub
loopne
mov
sub
fs
inc
mov
cmpsl
icebp
aaa
adc
dec
xor
cmp
cltd
pop
lret
mov
ds
jecxz
in
sub
loop
sub
or
and
loop
lret
incb
lea
mov
in
outsl
xchg
sti
xchg
shrb
push
mov
mov
ljmp
xchg
inc
fildll
les
sub
adc
rcr
fstpl
adcb
push
add
mov
add
in
mov
adc
push
repnz
dec
adc
pop
add
test
ret
inc
push
inc
push
mov
outsl
push
frstor
jnp
lret
mov
mov
sub
out
inc
sbb
mov
add
push
xchg
push
mov
aaa
mov
leave
sti
mov
mov
mov
dec
jo
ljmp
pop
je
addl
adc
cli
push
pusha
stos
mov
jno
push
mov
sub
imul
or
and
aas
sbb
fisttpl
pop
xchg
xchg
ret
xor
and
push
mov
mov
stos
inc
jns
mov
sbb
test
xor
pop
sbb
cmp
rolb
pop
sbb
xor
repnz
iret
ss
clc
mov
clc
mov
popf
sahf
mov
mov
inc
mov
fstpl
add
or
lods
mov
aaa
mov
jmp
inc
fcoml
and
jne
ja
mov
sub
test
repnz
adcl
sbb
jmp
sbb
mov
add
cmpl
xor
lret
dec
dec
lods
sbb
mov
dec
lcall
pushf
int
adc
jecxz
mov
sbb
sub
scas
xor
pop
xor
mov
shl
sbb
lds
or
ja
mov
mov
adc
or
sbbb
sub
test
cltd
cmc
adc
call
popf
cmpsb
subb
popa
gs
jmp
mov
fsts
notb
push
pop
nop
dec
mov
in
mov
imul
cwtl
sbb
push
pop
fs
mov
mov
cmp
imul
adc
stos
inc
ret
out
nop
sub
xchg
ljmp
movsb
outsb
mov
stos
pop
cmp
pop
insb
movsb
outsb
ret
in
adc
xchg
sti
xlat
xor
out
pusha
sub
jmp
add
movsl
mov
clc
scas
xchg
cmp
jg
loope
imul
sbb
xor
in
rcrb
and
push
icebp
sar
outsb
int
add
loope
mov
xchg
pop
or
fidivrs
in
out
es
hlt
mov
mov
xchg
push
rcrl
xchg
add
jp
in
call
pop
xchg
and
out
ss
mov
fildl
jae
rcrb
mov
into
daa
mov
mov
xlat
xchg
push
pop
push
rorb
clc
jmp
or
daa
cmpsb
sti
and
inc
cmp
repnz
jp
sbb
aad
sbb
ds
clc
push
xorl
mov
pop
xor
sbbb
add
in
and
mov
mov
xor
add
and
mov
jl
jge
mov
xor
lock
fnstcw
sti
and
xchg
cltd
in
inc
mov
out
push
shll
push
jmp
out
imul
mov
add
or
jne
rcr
loope
mov
cmpb
inc
daa
jge
es
or
mov
sub
inc
mov
mov
sub
js
insl
gs
scas
or
dec
mov
pushf
lods
mov
nop
or
cmp
rcll
mov
pusha
stos
pop
mov
repnz
inc
inc
daa
xchg
dec
adc
xchg
rcll
jns
in
inc
into
sbb
lods
decl
ss
sub
add
mov
pop
lods
mov
jb
inc
push
adc
mov
add
add
xchg
or
imul
cmp
lret
xchg
and
lcall
pop
fisttps
mov
push
jp
inc
push
adc
add
dec
in
adc
mov
inc
cltd
xor
mov
cmp
mov
cmpsl
jns
adc
arpl
cld
pop
popf
and
sub
aam
mov
enter
jle
push
cli
idivb
xchg
mov
hlt
lahf
cmp
out
mov
test
ret
loopne
push
mov
sahf
clc
roll
pop
dec
or
xchg
xor
aad
hlt
ljmp
mov
iret
js
cmp
cwtl
mov
in
cmp
sbb
sti
jb
xchg
push
xor
ret
mov
adc
imul
js
mov
xchg
mov
out
mov
out
divb
inc
lahf
loope
or
into
in
push
inc
push
add
pop
ret
insb
mov
mov
stos
imul
xchg
sub
ret
lock
mov
pusha
cs
mov
xor
xor
in
imull
aam
push
mov
cmp
fs
pop
add
pop
adc
sbb
loope
sahf
add
icebp
push
xor
sahf
sahf
xchg
dec
cmp
das
fsubl
fistl
xor
enter
in
mov
mov
dec
mov
jecxz
dec
lea
mov
ret
inc
adc
gs
xor
jno
loop
mov
aas
lcall
jg
ror
aam
jg
or
jge
pop
loopne
mov
popa
adc
adc
call
lahf
sbb
lods
sbb
sbb
xchg
adc
push
lcall
jae
popa
sbb
or
data16
das
jle
mov
roll
cmpl
cmp
xchg
mov
or
es
or
fdivr
cmp
xchg
inc
rcrl
jl
je
mov
add
inc
dec
das
call
dec
lods
jno
xchg
outsl
fdivl
dec
push
pop
xor
mov
sbb
lcall
jo
and
cli
add
cmp
push
cmpsl
in
xchg
imul
mov
aas
out
jmp
outsl
sbb
dec
popf
jne
xchg
rorb
fidivrs
mov
popf
test
jmp
imul
stc
sbb
push
xchg
js
insb
add
xchg
repnz
jns
sarb
push
ret
xchg
jg
daa
cmp
cmpsl
add
lock
std
pusha
popa
cmpsl
loope
xchg
ljmp
es
jge
sbbb
or
push
lret
push
or
pop
xchg
add
inc
into
repz
gs
inc
pusha
and
out
negl
jl
jg
adc
mov
mov
nop
mov
push
jnp
pop
jnp
add
loop
hlt
lea
aaa
inc
sbb
add
cmp
cmp
or
pushf
out
test
xor
xorl
push
js
pop
sbb
jno
xor
dec
dec
dec
pusha
adc
push
popf
cmp
or
cmpsl
pop
mov
gs
mov
into
les
dec
push
scas
imul
and
xchg
scas
or
pop
jb
pop
or
rcll
mov
ret
fsts
xchg
lea
cmp
in
cs
fs
or
xchg
fstpt
enter
js
dec
or
pop
and
push
xchg
or
push
int3
pop
mov
sub
mov
sbb
std
xchg
pusha
mov
xchg
or
push
inc
dec
ja
adc
adc
push
dec
test
mov
dec
inc
mov
pop
stos
jmp
xor
shll
dec
jge
sbb
xor
rclb
or
cmpsl
cmp
push
cmp
loop
lret
mov
in
push
cmpsl
sbb
icebp
xchg
inc
dec
pop
jb
xor
or
xlat
and
cmp
push
add
sub
or
dec
stos
out
sti
pop
icebp
pop
icebp
xchg
addr16
and
and
ljmp
add
jne
ss
xor
inc
testl
mov
enter
push
repz
imul
jns
jg
rcrb
into
fdivs
mov
pop
jo
unpcklps
sti
cwtl
sub
mov
jge
scas
rcrb
daa
insb
cwtl
cmp
scas
push
mov
jbe
mov
jae
cld
and
adc
ds
les
and
aad
lret
lods
aam
scas
sub
xor
add
loope
xchg
or
inc
push
pop
sub
pop
aad
pop
test
xor
cltd
pushf
inc
xchg
outsb
fsubr
adc
movsl
mov
mov
fadds
jl
addr16
clc
inc
fisubl
ljmp
repnz
sub
sub
or
fidivrs
mov
idiv
mov
stos
sub
out
pop
in
roll
enter
in
pop
shrl
leave
mov
jbe
icebp
pop
dec
push
in
adc
mov
aaa
shl
cs
add
push
xchg
and
mov
sti
incl
out
add
movsb
cmp
xchg
js
and
add
jle
mov
fwait
pop
adc
mull
sbb
add
enter
cltd
in
cmc
or
push
out
lret
push
pop
push
mov
aad
test
xchg
fcoml
push
addb
mov
inc
add
loop
aad
xchg
push
and
dec
aam
mov
sub
mov
popf
adc
push
ss
xor
add
inc
and
cltd
in
mov
xchg
mov
fdivl
out
cmp
push
adc
mov
fmull
sahf
outsl
cli
outsb
int
stos
push
and
testl
aaa
inc
sbb
popf
cmpb
ljmp
mov
mov
mov
dec
lea
arpl
jmp
test
adc
fisttpl
insb
cmc
pop
aad
cltd
fwait
int3
movsb
mov
roll
rol
inc
mov
or
cmp
mov
loope
pop
jmp
insl
cmp
lret
pop
xabort
fbld
push
pop
das
ret
lcall
lock
mov
xor
dec
and
ljmp
push
pcmpeqb
inc
mov
fs
sbbl
cmp
mov
push
pusha
rorb
aaa
lea
mov
inc
ja
and
mov
data16
mov
mov
cmp
cmpsb
dec
dec
xchg
or
push
add
push
or
pop
das
adc
dec
jae
push
push
ja
sahf
jnp
add
pusha
dec
adc
mov
stos
mov
or
jle
jp
mov
xchg
sub
lock
shl
shlb
mov
mov
mov
jno
push
loop
cs
cmpl
xor
mov
adc
push
cmp
pushf
mov
adc
divl
int
sti
jmp
addr16
pop
insb
xchg
out
into
scas
and
cmp
and
mov
mov
negl
fstpl
dec
les
pop
fwait
rolb
ljmp
scas
stos
fadd
adc
aas
popf
mov
rorl
pop
outsb
in
test
popf
push
sub
subb
sub
push
das
dec
mov
stos
imull
add
xor
incb
outsl
mov
fwait
ret
fs
jo
sbb
jo
aad
addb
and
jns
sbbb
idivl
fcomip
out
inc
xchg
cmp
xchg
mov
mov
cmp
adc
add
mov
jecxz
ds
mov
ja
fimull
push
mov
mov
fdivr
dec
mov
pop
in
aas
fcomp
xchg
push
rol
push
out
loopne
jmp
xchg
fcoml
movsl
mov
push
ds
sub
xor
lcall
stos
lcall
les
dec
fwait
and
sub
cltd
out
stos
rcl
out
pusha
adc
ljmp
fidivrs
mov
cld
push
sbb
cmp
mov
test
loope
add
jo
sbbb
stos
inc
jae
mov
or
out
mov
xchg
aas
dec
add
push
xchg
es
xchg
leave
inc
dec
xchg
xchg
in
add
roll
nop
sbb
imul
xlat
in
xchg
or
test
popf
int
imul
cld
sbb
push
rcr
xchg
fsubrs
jp
les
int3
jno
insl
mov
std
dec
fdivr
add
pushf
adc
sahf
or
pop
in
cmp
jle
cmp
mov
mov
sarb
xor
push
and
inc
fmull
pop
aaa
hlt
test
or
jns
pop
jle
jmp
adc
sahf
repnz
js
dec
push
xchg
and
pop
xor
cmpsb
or
in
outsb
ds
xchg
mov
jg
jne
lret
xor
les
cs
jg
jecxz
sub
cmp
dec
xchg
inc
in
push
add
sub
jle
jg
in
cmpsb
stos
in
cmc
sub
xor
push
add
mov
sbb
loope
pop
xchg
pop
or
test
mov
out
cmp
sub
mov
and
lret
dec
jns
fwait
mov
jnp
shll
push
stos
jecxz
inc
mov
or
mov
enter
pop
jp
mov
stos
aas
in
push
stos
fisubrl
ds
rclb
mov
add
sbb
and
mov
cltd
and
mov
and
add
andl
mov
loopne
pop
dec
xor
xor
or
imul
sub
mov
out
sbb
push
xchg
pop
cli
adc
out
push
jge
pop
add
fnsave
inc
aam
mov
jle
imul
xchg
or
mov
jnp
mov
inc
xchg
testb
aad
ret
dec
aad
adc
dec
into
repz
out
hlt
xor
xchg
inc
push
ret
pop
sbb
or
mov
push
rcll
mov
xchg
dec
cmc
lods
mov
jo
andb
iret
add
fs
jp
aad
pop
sub
pop
push
lods
jne
insb
sub
sub
mov
pushf
add
hlt
xor
adcl
push
inc
mov
jno
cltd
pop
cmp
cmp
ljmp
push
stc
icebp
aas
jo
jl
or
mov
in
or
cmp
inc
not
jae
mov
aad
popa
lock
shlb
adc
mov
sub
lock
ja
loope
leave
xchg
mov
jbe
mov
cmp
in
adc
mov
sub
mov
sbb
addr16
int
pop
mov
movsb
fsub
mov
dec
sub
test
dec
pop
popa
sub
std
bound
sub
adc
sbb
insb
add
fwait
sub
or
xor
pop
adc
lods
stc
cld
sbb
pop
or
and
bound
dec
in
stos
xor
shll
pop
daa
and
or
in
mov
jne
or
pop
lods
es
test
add
dec
nop
mov
cld
lahf
mov
cld
mov
mov
aaa
push
out
stc
sbb
pop
sub
mov
cmp
mov
rolb
push
pushf
cwtl
mov
and
adc
sbb
loope
cmpsl
or
dec
bnd
jo
pop
insb
sarb
lods
repz
iret
or
push
int3
cmp
lcall
jl
lcall
jne
es
add
mov
xchg
jg
scas
adc
ljmp
xchg
jb
shlb
mov
sub
jb
in
xor
sub
ret
movb
fistpl
mov
jno
cmp
dec
mov
pop
mov
not
push
int
out
xchg
aas
add
mov
push
mov
add
mov
push
movsl
mov
xchg
sahf
jge
mov
sub
nop
or
cwtl
jbe
les
pop
ret
lahf
lods
test
mov
mov
jmp
mov
incl
movsb
mov
xor
stc
ret
shr
and
mov
lods
add
adc
inc
mov
xor
movsb
lcall
jbe
addb
js
popa
ficoml
mov
rcrb
ja
out
pop
add
rclb
pop
daa
xor
test
fadd
mov
sbbb
cmp
stc
enter
jecxz
lret
cmc
lret
es
int3
mov
enter
sub
test
mov
cmc
repz
xor
mov
dec
test
add
jo
xchg
aaa
outsb
sti
mov
and
testl
sub
inc
daa
fistpll
mov
xchg
shr
mov
stc
cmp
popa
aad
lahf
push
sbb
cmp
pop
add
outsb
daa
fwait
shl
aas
add
push
out
out
int3
movsb
ss
fmull
cmp
jns
mov
xor
jp
pop
push
aas
notb
push
sbb
xor
ds
push
pop
fistpl
cmp
sbb
mov
push
pop
mov
fwait
out
mov
cmp
ret
mov
mov
push
test
ss
dec
jmp
imul
pop
aam
sbb
sbb
ja
out
mov
push
jecxz
or
xor
add
in
in
xchg
or
aam
sub
mov
sbb
cmp
cmpsb
aad
lods
mov
lret
xor
xchg
mov
mov
cmp
repnz
stos
mov
or
repnz
xchg
jmp
imul
sbb
pop
mov
adc
mov
sbb
lahf
lahf
cld
or
mov
push
pop
mov
ror
add
sub
clc
lret
lods
xor
adc
int3
movsb
mov
cltd
add
test
xchg
xchg
fwait
test
sub
nop
loope
inc
inc
cmp
sub
popa
mov
js
int
inc
lock
sbb
or
inc
pushf
test
test
xorl
pop
lock
dec
imul
push
shlb
xchg
cwtl
inc
sub
inc
sbb
dec
hlt
pop
int3
dec
movsl
insl
movsb
jbe
mov
push
or
movsl
pop
notb
push
cmp
dec
mov
icebp
xor
fistps
sbb
pop
or
jp
mov
push
or
xchg
shl
sbb
aas
in
loope
xchg
mov
repnz
xchg
cs
sub
inc
and
mov
out
lods
adc
push
subl
cmpsb
out
cmc
addr16
jns,pn
std
xchg
mov
inc
sub
adc
scas
out
outsl
rcl
mov
stos
rcrb
mov
push
xor
xlat
lahf
fmulp
add
push
add
scas
pop
add
and
lahf
shr
push
lods
jnp
lar
hlt
in
mov
jne
add
and
jae
daa
push
out
xchg
outsb
dec
out
pop
inc
pop
dec
stos
daa
mov
dec
add
out
sub
lret
les
rcrl
fs
xchg
dec
push
ds
mov
cmp
ds
nop
jle
shrb
mov
lahf
loopne
cmp
dec
mov
add
push
and
and
scas
out
add
mov
xchg
cmc
aam
and
icebp
inc
jne
push
add
leave
lret
in
xor
pop
insb
imul
fstl
enter
add
xchg
push
mov
jne
pop
jb
inc
jg
adc
dec
in
jbe
mov
mov
cmpsl
mov
pushf
popf
mov
pop
jp
arpl
js
lret
pop
cwtl
rorl
pop
xchg
mov
dec
add
mov
jl
je
aas
inc
adc
cmp
mov
mov
mov
pop
cmp
or
mov
push
adc
pop
jp
lcall
out
dec
add
add
les
cmp
aaa
push
ss
lock
adc
add
jae
push
orl
outsl
mov
sbb
pop
int3
pop
xor
rcl
mov
addr16
popa
xchg
jle
mov
shll
je
das
xor
sub
shll
cmp
add
mov
mov
pop
dec
pop
mov
xchg
fiadds
sbb
sub
andl
xchg
sub
int3
jecxz
mov
pop
aam
mov
xor
dec
push
and
lods
test
popa
cwtl
mov
pop
pop
push
xchg
mov
clc
xor
dec
xchg
lret
outsb
cmp
and
les
and
mov
pop
paddb
sbb
aam
in
dec
test
push
jl
test
push
add
mov
xor
bound
mov
jp
test
xor
pusha
jp
cmp
out
out
cmp
xchg
inc
or
mov
sbbb
pop
mov
sbb
fisubrl
pop
out
pop
bound
pop
push
push
push
add
jp
mov
fcomip
stos
outsb
lret
xchg
sub
stos
mov
jmp
xorl
xor
and
clc
mov
dec
sbb
lret
mov
mov
ljmp
das
and
push
or
pop
mov
inc
mov
outsl
add
js
pop
mov
adc
cwtl
or
aas
mov
in
adc
test
js
add
shlb
dec
aad
cmp
sbb
jno
mov
pusha
imul
mov
xor
push
arpl
push
clc
ja
cli
loope
fiaddl
cmp
cmp
or
popf
push
iret
push
iret
fsubr
mov
icebp
nop
insl
inc
cli
jecxz
pop
mov
adcb
pop
mov
dec
clc
push
inc
inc
cwtl
stc
scas
js
or
shlb
arpl
paddb
and
push
lret
pusha
dec
xchg
cmpsb
push
sbb
gs
add
sub
and
mov
lret
shll
adc
and
push
rolb
es
aam
inc
xor
sub
in
jo
mov
nop
dec
out
xorb
fimull
in
inc
ds
lahf
test
or
push
cmp
lahf
imul
and
add
push
xchg
or
into
and
in
repz
xor
dec
jns
mov
cmp
pusha
sub
jg
sub
loopne
jns
sbb
test
pop
addr16
fucom
sbb
addl
cmp
cli
mov
push
scas
push
xchg
lcall
pusha
mov
in
inc
push
adc
mov
addr16
add
sbb
addr16
sub
mov
add
and
push
lds
daa
xchg
std
jne
dec
and
notb
adc
push
lds
adc
das
loope
jp
inc
inc
aas
andb
xor
popa
daa
cmp
xchg
add
mov
mov
pop
shl
pop
movsb
push
xchg
jnp
popl
sahf
and
idiv
cmpsl
cmc
adc
popa
xor
daa
mov
xor
push
mov
add
or
or
inc
or
insl
mov
add
sahf
pop
cld
dec
orb
fwait
mov
jnp
or
mov
nop
inc
test
lret
sahf
data16
gs
xchg
out
bound
mov
xchg
aas
in
stos
xor
shl
mov
dec
int3
xor
lock
ds
cmp
jns
mov
pushf
adc
mov
inc
cmp
xchg
push
fcoms
movsl
out
push
pop
xchg
inc
mov
add
repz
push
mov
cmp
push
mov
test
adc
xlat
or
mov
call
cmp
aas
stos
push
cld
adc
push
push
or
and
jns
lods
cmp
adc
jno
pop
push
punpckhwd
mov
sbb
mov
or
adc
les
pop
dec
sbb
sub
xlat
loopne
pop
rcll
fsubp
inc
jp
and
push
xchg
fsubr
in
ljmp
lea
mov
mov
push
xchg
mulb
xor
cmp
leave
sti
add
xchg
push
sbb
in
or
in
leave
fisttpll
rcrl
xor
mov
adc
outsl
add
sub
push
mov
jns
pop
add
ss
sbb
lods
and
call
shlb
aam
add
fcmovne
cmpsb
je
lret
and
divb
movsl
add
outsb
dec
xchg
dec
pop
add
and
jmp
addr16
test
loopne
loopne
in
dec
or
aas
push
pop
mov
loopne
aam
pop
fnstcw
fmuls
or
shll
pop
jo
pop
loopne
dec
or
fucomp
jb
insb
mov
fisubl
adc
shl
nop
roll
pop
xorb
pop
enter
fstpt
hlt
mov
fucomp
insb
mov
test
imul
lds
lret
cmp
sub
movsb
push
inc
ror
pop
iret
out
mov
int3
jmp
pop
pusha
out
aam
mov
fs
and
jnp
mov
xchg
cwtl
pushf
aas
outsl
or
inc
jns
outsl
or
les
shll
cmp
mov
xchg
ljmp
orl
stos
hlt
inc
mov
test
movsl
dec
dec
call
lock
mov
push
pop
cmpsl
xor
fsts
or
fildll
xor
imul
or
jl
inc
sub
jno
movsb
orl
push
jae
and
inc
mov
push
adc
cmpsb
cwtl
cli
xchg
lea
add
xor
imul
int3
inc
cmp
outsb
mov
pop
int3
sbb
adc
jp
sbb
insb
out
cmp
sbb
pop
pop
mov
aam
pop
adc
sbb
mov
and
xor
pushf
xlat
sbb
xchg
and
xchg
rol
addr16
loopne
sbb
imul
ret
pushf
cmp
mov
daa
std
mov
jle
adc
les
out
fnstenv
and
inc
stos
xchg
inc
fildll
push
cli
rorl
inc
lret
dec
sub
push
cmpsb
add
push
sub
mov
je
xor
cmp
inc
sbb
adc
enter
rolb
pop
lock
xchg
lds
add
xchg
sbb
inc
xor
and
mov
xor
loopne
pop
imul
mov
mov
int
dec
rolb
sarb
repnz
pop
fst
mov
fcomp
mov
aad
int3
xor
xchg
add
ret
cwtl
mov
std
ja
xchg
fmull
arpl
pop
add
std
shrb
mov
int
data16
inc
mov
pop
sbb
loope
mov
jae
jnp
sbb
imul
dec
lcall
xchg
jl
je
lret
jge
nop
in
movsb
dec
fnstenv
add
daa
fisubrs
or
mov
cmp
mov
sahf
jge
enter
mov
lds
aas
adc
mov
cwtl
scas
sbb
stc
add
adc
sarl
insl
loope
xor
out
add
xchg
int
dec
fbstp
mov
aas
add
inc
insl
ja
hlt
leave
in
rcll
cmp
and
jl
pusha
rcll
cld
jmp
mov
data16
fdivr
call
xchg
mov
pop
mov
testl
pop
push
add
popf
inc
inc
cmp
pop
repz
and
ror
rcrl
sub
repnz
xchg
dec
sbb
das
sbb
cmp
and
push
rorb
jecxz
inc
jns
and
mov
xor
inc
outsl
xchg
xchg
jbe
mov
push
cmp
mov
pop
adc
jmp
jecxz
and
jmp
mov
cmp
mov
inc
xchg
mov
jno
arpl
stos
enter
or
lret
dec
cmpsl
dec
ret
xchg
adc
das
inc
out
and
cmpsl
or
fistpll
test
es
icebp
xchg
xchg
mov
and
xchg
imul
dec
das
sub
lods
inc
adc
lods
mov
data16
outsl
push
mov
mov
addsubps
cmpsl
loope
stos
sub
orl
lcall
pop
imul
cwtl
mov
sbb
inc
and
stos
arpl
push
add
cmovns
sarl
jg
xchg
pop
scas
xchg
or
and
or
inc
push
pop
push
mov
addr16
mov
iret
rcl
cmp
mov
or
mov
mov
fstps
int3
call
je
dec
cwtl
sbb
aas
cwtl
pop
fistps
mov
push
push
inc
mov
out
mov
loope
push
push
leavew
or
sub
pop
inc
mov
stc
inc
imul
ret
les
adc
sbb
xchg
pusha
fdivr
inc
mov
in
xchg
es
mov
dec
test
cmp
negb
sub
cld
inc
push
cwtl
lock
fstpl
mov
in
fistpll
jne
loope
aad
fldcw
adc
fstpt
jp
sti
mov
mov
test
pop
ret
cld
and
adc
jle
pop
bnd
inc
and
mov
stc
fsubrl
popf
xchg
testb
and
aad
fcompl
sarb
int
lock
cs
push
orl
dec
into
fstpt
xchg
mov
das
sbb
dec
mov
fcoms
loop
fwait
push
or
mov
or
inc
ret
xlat
lods
data16
dec
cmp
inc
fcomps
adc
or
test
dec
mov
popf
ret
inc
xor
sub
xor
iret
rclb
add
adc
sbb
in
pop
mov
bound
jne
bound
cld
lock
pusha
fsubs
sarb
bound
std
imul
jno
dec
ficomps
dec
dec
std
mov
fmull
test
les
test
in
nop
loopne
cmp
adc
and
or
and
in
sub
xor
mov
and
mov
addr16
cld
dec
mov
xchg
cmpsl
cld
pop
je
mov
mov
sub
fwait
lahf
jl
and
cld
push
xchg
cmp
mov
pop
pop
mov
insl
lds
aam
mov
out
lods
jp
call
push
movsb
adc
jns
pop
adc
adc
sbb
jl
imul
mov
and
jp
add
push
pop
dec
jg
push
push
inc
xor
add
cmp
bnd
mov
mov
push
nop
xchg
out
cmp
aaa
lret
sub
in
rclb
dec
or
jns
loopne
test
sub
shl
nop
xor
cwtl
and
mov
ja
in
out
insl
push
imul
xor
movl
ss
in
pop
adc
cmpsb
xchg
push
mov
mov
mov
adc
ret
popf
mov
inc
ror
into
adc
mov
in
dec
dec
push
sub
push
repnz
in
ljmp
push
ljmp
and
outsl
jge
and
or
xchg
sti
ret
jno
aam
pushl
adc
fstl
cmp
add
test
lods
stos
push
movsl
inc
sbb
mov
push
leave
sbb
enter
mov
arpl
mov
xchg
and
mov
dec
pop
jns
inc
push
mov
fbld
rcrb
sbb
or
popf
lock
leave
imul
fisttps
cli
hlt
or
mov
push
fisttpll
sub
xchg
adc
in
test
add
stos
je
push
cmp
and
fstpt
dec
push
hlt
lea
outsb
dec
cmp
xor
jnp
fwait
push
jno
lods
lods
stc
or
orb
into
xor
mul
xlat
mov
je
ja
dec
fstl
shr
notl
jnp
dec
mov
lods
cld
out
push
les
nop
adc
loope
imul
jp
inc
ja
loopne
xor
arpl
mov
add
push
movsb
sub
push
or
lret
xchg
jns
movsb
sub
aaa
inc
test
sahf
movsl
rorl
insb
push
repnz
or
add
enter
movsb
sub
fadds
xor
scas
adc
ljmp
fwait
js
popa
sbb
mov
in
sbb
pop
mov
mov
or
es
pop
imul
push
push
mov
ljmp
dec
scas
enter
jo
ljmp
fdivp
cs
and
xor
or
clc
push
iret
push
std
mov
jnp
pop
cmp
mov
lahf
mov
js
jb
cmp
adc
je
scas
push
daa
outsb
sbb
pushf
mov
or
into
les
xor
bound
icebp
sbb
inc
sub
xchg
rcll
jmp
stos
adcb
dec
sub
std
mov
ja
jnp
cmpsl
fcoms
fcmovbe
cmp
sbb
dec
mov
dec
lcall
xor
lret
mov
cs
aas
das
mov
mov
nop
std
push
fstl
or
or
inc
add
and
adc
in
orl
cmp
das
outsb
xchg
ret
sub
jmp
or
dec
adc
cld
push
xchg
mov
out
inc
lds
adc
into
pop
int3
daa
inc
and
roll
lods
mov
mov
repz
sbb
xchg
mov
negl
pop
lea
push
jnp
xchg
notb
or
test
test
mov
and
cmp
in
or
sti
js
lds
mov
pop
ret
ja
lock
mov
pop
test
jns
pop
sbb
sbb
adc
sub
into
jne
loop
mov
add
jle
pop
mov
push
decb
pusha
and
mov
rcrb
aaa
mov
adc
bound
movsb
dec
daa
cmp
inc
imulb
mov
jge
add
cltd
jae
cmc
movq
pop
stos
cmp
cld
add
movl
call
jb
divb
mov
or
or
std
adc
push
addl
adc
xchg
inc
dec
sub
xchg
dec
stc
sbbl
lahf
push
sbb
je
jecxz
pop
cltd
out
and
pop
xchg
xchg
je
or
js
inc
cmpxchg
out
dec
mov
js
pop
xchg
mov
xor
cmpsb
inc
ret
ds
sti
jne
mov
add
dec
ss
into
inc
in
and
adc
mov
cmp
pusha
fstpt
aam
rolb
push
mov
bound
cmpsl
jb
sbb
pushw
jmp
dec
push
jns
aam
jae
and
clc
test
mov
push
popf
jns
dec
sti
push
scas
out
pop
mov
sbb
rcrb
das
mov
push
mov
sub
xchg
ss
mov
pop
push
inc
out
outsl
ret
popf
pop
in
add
dec
and
and
insb
pushf
addr16
dec
mov
jnp
xchg
sbb
popa
fstps
inc
mov
testb
outsb
outsl
mov
jp
push
popa
sub
shr
imul
mov
in
sarb
aaa
std
lahf
lds
xchg
into
lods
push
jns
in
mov
ljmp
insl
arpl
movsb
cld
cmp
sub
sbb
sub
cwtl
pop
scas
pop
mov
push
jle
add
xchg
mov
pop
push
adc
push
fsubp
outsl
arpl
sbb
stos
out
adc
xor
or
adc
cmp
dec
jae
or
mov
mov
arpl
lea
daa
es
cwtl
mov
test
dec
push
sbb
loop
mov
jbe
mov
xchg
lods
lds
scas
xlat
lods
dec
int3
adc
jnp
dec
ss
iret
fisttpll
adc
jbe
xorl
cld
add
out
or
addr16
push
xchg
mov
cmc
sub
fsubr
dec
and
das
ds
fistps
mov
cmp
adc
adc
push
lods
cmc
push
push
add
lret
ret
inc
test
lahf
lods
lods
pop
jmp
xchg
test
jo
adc
mov
lahf
ss
push
shlb
mov
gs
push
fsubl
xchg
dec
xchg
shll
inc
xor
adc
movd
push
sub
adcl
mov
test
int
push
dec
cmpsl
hlt
or
test
jg
stc
fsubrl
lods
stos
cmc
jp
insl
mov
hlt
les
xchg
push
test
push
jbe
xor
and
test
jp
mov
popa
inc
xor
pop
adc
shrb
push
inc
add
inc
sbbl
sbb
mov
mov
pop
cltd
mov
dec
push
sub
gs
lods
xchg
inc
lret
push
adc
dec
mov
fsubr
xchg
push
idivl
pushf
movb
inc
cmp
pop
cmpl
mov
sbb
mov
lds
sbb
js
push
inc
pop
xchg
in
fidivrl
into
add
mov
ss
xchg
sbb
shrb
leave
push
mov
stos
cmp
dec
fistps
nop
push
jp
pop
cmp
dec
sbb
dec
cmp
fidivl
outsl
mov
sbb
call
push
clc
insb
aad
fistps
sub
inc
ss
inc
jp
scas
loop
pushf
sbb
xor
jg
xchg
mov
pop
sub
inc
clc
xor
push
xchg
cwtl
cmc
aad
or
sbb
loope
cltd
decb
dec
icebp
testl
js
rcl
ja
iret
pop
pop
sub
je
inc
mov
loop
push
adc
mov
jbe
movsl
cmc
flds
xor
mov
sub
out
cli
pop
leave
cwtl
bound
push
popf
pop
jbe
loopne
cld
pop
mov
cvttss2si
daa
inc
inc
lahf
dec
nop
ret
leave
jp
je
lahf
or
dec
daa
incb
xchg
sub
ljmp
in
arpl
adcl
out
mov
ret
add
fcmovbe
aaa
adc
push
sbb
mov
aaa
shlb
rclb
dec
jb
xchg
sbb
in
loopne
out
frstpm(287
negl
or
push
dec
insl
lods
push
fwait
sbb
mov
jnp
cmp
stc
mov
ss
adc
inc
mov
scas
iret
mov
add
mov
push
push
add
out
mov
je
jl
push
sbb
inc
push
jmp
jecxz
cmp
dec
imul
mov
push
sub
imul
jle
leave
cmpsl
insl
ds
movsl
imul
les
out
add
lods
add
cmp
pusha
jne
lds
subb
sar
push
ret
and
inc
imul
mov
push
cli
or
sbb
int
and
mov
out
adc
sahf
mov
xchg
xchg
cmpsl
lcall
sub
dec
jb
inc
and
cmpsl
mov
sub
aaa
jg
cmp
nop
mov
jno
outsl
sub
push
insl
cmpsl
lret
inc
stc
icebp
sbb
xchg
pop
add
add
ds
xchg
push
mov
pop
adc
enter
fwait
pop
push
leave
repz
out
and
dec
je
fmulp
push
jbe
imul
outsb
pop
mov
xor
movsl
xchg
mov
lahf
sbb
mov
std
fimull
jecxz
mov
sbb
popf
adc
fwait
fs
jg
xlat
adc
js
ljmp
inc
and
out
push
cmp
pushf
jnp
pushf
or
mov
or
cmp
rorb
jg
stos
ljmp
stos
push
xchg
cmp
vsubps
jmp
inc
ret
lahf
sub
enter
xchg
iret
push
negl
mov
fisubrl
xor
lods
lods
aaa
int3
pushf
lds
add
add
jmp
fstpt
cmp
lret
mov
xchg
cli
cmc
xor
xchg
mov
movsl
repnz
jnp
mov
xchg
inc
xchg
cmc
std
mov
rolb
xchg
mov
addb
mov
mov
fiadds
sbb
mov
fisubrl
stos
pusha
xor
adc
jl
sbb
stc
cmp
xchg
ss
mov
sbb
loopne
sub
jg
es
mov
mov
jb
lea
aad
ret
shll
jb
add
jmp
xor
ja
jg
mov
jo
sahf
mov
or
push
inc
add
push
sub
pop
stos
int3
popl
mov
push
pop
adc
mov
xchg
sub
jno
cmp
cmp
jns
pop
push
xchg
enter
lcall
insl
mov
into
testl
sar
dec
adc
pop
scas
mov
ss
jge
sub
mov
sbb
outsl
adc
dec
adc
je
xor
out
arpl
ret
mov
pop
cli
or
inc
sti
rolb
js
enter
push
mov
pop
js
je
or
lahf
out
or
push
leave
push
fldt
rcrl
mov
sub
stos
lds
mov
jns
xchg
sbb
outsl
push
fists
inc
jae
xor
repnz
mov
dec
sbb
insl
cmp
out
adcl
fbstp
int
or
test
mov
stos
xchg
or
xor
push
inc
aas
dec
icebp
adc
iret
or
stos
adc
dec
enter
inc
dec
ss
adc
cmpsb
sti
pushf
rdmsr
das
mov
cld
jg
xchg
fs
jecxz
xchg
pop
pop
push
pop
or
sbb
dec
scas
add
jns
sbb
push
stc
lock
pop
mov
xor
add
mov
cmp
pusha
or
sti
xchg
mov
sbb
add
and
mov
aaa
pop
dec
fsubrs
mov
and
outsb
xchg
xchg
test
outsl
push
jp
xlat
imul
dec
cmp
adc
and
rcrl
flds
cmpsb
mov
arpl
xor
loop
pop
addr16
lods
cmovge
mov
adc
ljmp
mov
aam
into
mov
mov
mov
sarb
testl
dec
std
cmp
push
push
sbb
out
push
dec
popf
ret
sub
mov
adcl
cli
ss
xlat
jbe
sub
cs
bnd
pushf
mov
push
into
add
pop
jle,pn
in
or
pop
adc
mov
pop
jno
mov
mov
es
int
movsb
xchg
xor
push
imul
dec
jns
inc
mov
and
pop
jle
adc
into
lcall
lds
lahf
lods
mov
ficoms
aaa
aaa
stc
stos
push
jnp
push
lea
inc
jns
ljmp
lea
mov
stos
dec
mov
ret
icebp
repz
pop
lahf
lret
mov
daa
xor
sysexit
jp
cmp
xchg
mov
shll
in
icebp
dec
inc
cmp
test
cmpl
ret
ds
cmp
sub
fcoml
std
mov
movsl
xchg
lods
lds
mov
adc
pop
inc
test
loope
les
adc
add
mov
sbb
pusha
jl
dec
inc
xor
mov
roll
inc
repnz
sbb
push
pop
pop
or
mov
movsl
cmpsl
xor
jo
or
mov
aad
addr16
dec
mov
filds
mov
jne
data16
cmpsb
and
xchg
imul
adc
inc
jae
lods
fisubl
loope
lods
jno
mov
inc
mov
sbb
pop
leave
aaa
push
cmp
in
mov
notl
leave
sbb
movsb
xchg
or
push
dec
pop
pop
lods
push
andb
aad
xchg
add
ret
lods
mov
mov
mov
fwait
ds
jbe
cs
mov
test
xor
sbb
stc
scas
sub
sbb
cld
cmp
insl
jo
outsl
negl
repz
scas
das
stc
js
mov
mov
cmp
insl
sbb
pop
and
sub
sbbl
xchg
imul
jo
in
arpl
lods
fdivp
mov
inc
and
in
jnp
gs
adc
movsb
cltd
inc
xchg
out
in
fnstenv
js
or
aaa
inc
mov
int3
fdivp
aas
js
mov
std
xchg
aas
cli
lahf
addr16
push
cmp
mov
nop
movsb
mov
cmp
mov
out
repnz
imul
outsl
xor
xchg
add
mov
dec
je
or
in
sbb
into
add
std
and
rcrl
xor
shrb
dec
into
lods
xchg
sahf
fdivr
outsb
push
inc
push
xor
adc
imul
cmp
clc
sbb
mov
push
test
test
xor
cltd
iret
ret
mov
mov
jl
and
enter
out
popf
loop
cmc
dec
mov
popf
enter
xchg
mov
and
cmpsb
fnstenv
imul
dec
push
xchg
jbe
shl
push
in
pop
test
jae
hlt
xchg
and
stos
add
mov
inc
mov
dec
aaa
testl
jnp
ja
shll
mov
xor
ficomps
leave
insl
jmp
xor
inc
jmp
cmpsb
push
sbb
xor
adc
push
pop
cwtl
xchg
add
pop
dec
lcall
cmp
aad
lahf
cli
data16
or
in
lods
mov
icebp
in
mov
in
test
addb
pop
xor
push
shll
or
xor
in
push
cmp
or
pushf
jae
into
stos
out
jb
push
stos
shlb
mov
mov
mov
or
rcrb
sar
add
popl
xchg
fisttps
jmp
jnp
push
fstpl
test
mov
dec
cmp
jnp
dec
test
out
fdivr
int
incb
xor
inc
testl
outsl
repz
and
push
out
je
push
inc
inc
or
je
xor
sub
jecxz
cmp
and
cs
das
pop
filds
dec
cmp
push
insl
pop
xor
in
loopne
xchg
andl
jp
jae
repnz
adc
iret
inc
pop
negb
leave
jb
xchg
push
int3
loopne
xlat
sub
and
shll
mov
cwtl
mov
jno
icebp
mov
aad
pop
addb
ficompl
and
int3
sti
mov
out
cmpsb
adc
sub
dec
mov
mov
andl
outsb
insl
mov
outsl
inc
loopne
push
shll
in
loopne
out
loop
jle
loope
fwait
push
enter
out
std
xlat
jecxz
sbbl
ds
mov
bound
fwait
jecxz
xchg
jbe
movsl
mov
or
add
fs
lret
inc
mov
pop
les
insl
dec
dec
js
xor
xchg
pop
mov
xorl
lret
hlt
jnp
xchg
fsubp
xor
push
mov
js
inc
inc
cmp
repz
leave
dec
rcrb
cltd
out
imul
out
pushf
sbb
add
test
mov
gs
adc
push
mov
sub
push
dec
inc
out
js
xchg
je
int3
enter
scas
icebp
aam
shrb
xchg
addr16
or
push
shl
fisubrs
loopne
flds
pushf
rclb
or
sbb
in
fcoms
cmp
dec
pop
add
cmc
dec
push
mov
roll
inc
jge
sbb
outsl
lods
mov
pop
lea
push
mov
sbb
aad
push
rolb
pop
pop
testl
mov
loopne
jmp
pop
or
loope
test
mov
fwait
adc
xchg
push
shlb
out
mov
xchg
adc
add
shr
dec
or
mov
push
jg
push
dec
ret
cltd
jne
outsb
cltd
lahf
push
mov
inc
cmp
xor
sbbl
icebp
xor
test
andl
push
sub
xchg
xchg
mov
add
add
and
push
push
or
idivb
mov
shrl
pop
nop
jecxz
aad
pushf
loop
mov
out
loop
and
ds
lret
xchg
mov
lods
push
cli
sbb
push
sbb
or
push
pop
adc
adc
scas
push
or
mov
jno
jb
mov
mov
bound
enter
cltd
pop
cmp
in
test
or
rorl
push
or
pop
dec
ss
mov
int
ss
into
and
push
pmaxub
or
add
adc
pop
xchg
push
adc
mov
lods
lods
cmp
sbb
push
clc
dec
test
arpl
xor
mov
jp
or
and
into
lods
mov
xchg
hlt
or
jge
sbb
or
arpl
stc
adc
int
stos
frstor
mov
inc
mov
sbb
cmp
jae,pn
xchg
sbb
xor
pop
lods
lea
inc
mov
leave
imul
das
rorl
sarl
adc
push
divb
sarb
dec
repnz
push
jnp
mov
std
jb
jb
fsubrp
cmpsb
or
imul
rcrl
orl
jb
sahf
cmpsl
cmc
or
push
clc
sbb
lahf
fs
mov
pushl
mov
lea
int
fldl
das
scas
into
mov
mov
stc
stos
popf
mov
mov
jb
mov
xor
adc
call
in
mov
xor
syscall
bound
arpl
xor
push
iret
mov
orl
cmpsb
inc
adc
or
jl
jns
mov
mov
sbb
ljmp
mov
loop
jne
cmc
imul
and
or
mov
jecxz
cmp
pop
adc
mov
xor
int
ds
je
pop
int3
test
mov
jg
out
ja
or
sarb
subl
xchg
fldl
scas
popf
stos
add
adcb
cld
sub
xor
pop
jns
lcall
fwait
xchg
add
adc
push
xchg
shlb
rcll
lahf
push
and
js
push
ret
jmp
ret
movsb
or
push
cmp
xchg
mov
loopne
pusha
enter
repz
cmp
ret
loopne
fsubs
xchg
sbb
xchg
idiv
jl
bound
lcall
pop
pop
xor
insl
lret
inc
inc
andl
pop
push
test
add
das
dec
shll
sti
push
xchg
push
jae
mov
je
push
add
scas
icebp
pop
test
sub
pop
and
aad
cmp
mov
std
stos
push
fists
adc
xchg
lods
movsb
test
sbb
pusha
push
inc
xor
stc
idivl
xor
cmp
insb
ljmp
fstpt
pop
push
mov
cld
fdivs
dec
lds
inc
and
out
pxor
sbb
out
aam
rorb
xor
subl
shlb
add
mov
and
sbb
pushf
push
mov
fabs
lret
cli
cmpb
fdivr
fnstsw
xor
add
sbb
inc
add
pop
lds
mov
loopne
in
out
push
fdiv
lods
pop
repnz
inc
or
push
push
outsb
divb
adc
pop
and
mov
cmp
aas
add
add
fisttps
mov
imul
movsb
loopne
pop
pop
leave
cmp
push
mov
or
jl
adc
cmp
jb
push
test
pop
scas
jmp
add
inc
cmp
cmpsl
mov
cmp
shlb
cmpsb
popa
repz
aad
repnz
add
insb
jecxz
sbb
jns
dec
pop
mulb
test
adc
fnstsw
fidivl
sti
inc
dec
xchg
cmp
jge
fsubrl
adc
std
pop
cmpsl
subb
adc
movsb
lret
add
cmp
pop
or
cmpsl
iret
mov
js
cwtl
pop
test
push
cmp
popf
sbbb
sub
imulb
sahf
xor
and
dec
push
cmp
and
mov
cmp
mov
and
mov
icebp
js
push
lods
lret
in
dec
push
jg
inc
lock
scas
mov
faddl
or
add
clc
movsb
out
scas
add
mov
aam
sahf
lds
out
inc
sti
jae
cld
imul
addr16
mov
mov
arpl
jge
push
jo
repz
or
add
dec
subl
popf
inc
repnz
ljmp
daa
push
sbb
sti
out
sbb
push
jne
outsb
shr
ja
nop
fstps
insl
cmpsl
clc
scas
dec
mov
sub
mov
mov
and
pushf
xchg
sub
out
pop
or
push
sub
sbb
push
loopne
adc
push
and
insb
mov
arpl
mov
add
or
push
pop
or
push
mov
adcb
push
sbb
lret
add
adc
cmpsb
mov
mov
add
inc
jb
push
in
jmp
inc
fcmovne
nop
dec
cmp
ljmp
cmp
ss
jns
clc
incl
nop
adc
inc
enter
mov
mov
iret
sbb
dec
in
subb
mov
inc
fldl
scas
cmpsl
xchg
popf
xchg
sbb
cmp
sarl
cmp
add
insl
repz
or
dec
insl
or
sahf
xchg
jo
xchg
push
add
push
shll
inc
testl
into
mov
cmpsb
popa
cmp
push
cwtl
push
loop
lahf
adc
adc
stos
enter
jl
and
ret
mov
je
inc
and
xchg
bound
jnp
mov
push
cmpsl
dec
repz
pusha
cmpsb
in
dec
addr16
cmp
ficomps
fsts
mov
divb
xchg
ficompl
inc
sbb
sbb
mov
pop
fists
lret
jmp
adc
xchg
pop
outsl
repnz
roll
mov
loope
xor
rclb
stc
inc
mov
lock
test
rcrb
outsb
aaa
pop
xor
push
cmp
sbbb
sbb
and
addb
insb
in
repz
pushf
dec
fmull
loop
stc
or
test
out
daa
mov
jecxz
repnz
leave
dec
add
sahf
push
scas
xchg
and
adcb
imul
sbb
test
imul
rorl
movsl
xchg
stc
adc
adc
test
test
add
mov
push
movsb
popf
xor
testl
pop
out
jnp
pcmpeqd
aaa
adc
in
lods
push
mov
in
mov
jecxz
rcrb
hlt
mov
pop
jb
in
roll
xchg
inc
ss
jl
testl
xlat
shl
test
ljmp
and
xor
test
in
xor
hlt
in
mov
sub
and
cmpsb
sbb
movb
and
or
fnstsw
fnsave
mov
add
cmp
rorl
in
xchg
fistpll
ljmp
sbb
push
sbb
xor
in
mov
or
sub
les
or
movsl
pop
jl
cli
adc
jmp
in
mov
dec
aas
aaa
mov
call
xchg
outsb
fsubs
cmp
cmc
in
adc
leave
les
andb
and
aad
push
xlat
jne
add
xchg
invd
incb
mov
cli
adc
mov
jle
jne
out
pop
sub
mov
sub
stc
jo
enter
adc
mov
les
lods
sbb
bound
xchg
insl
or
sub
into
jmp
in
mov
shrb
jmp
xlat
sbb
pop
pop
cmpsb
pop
pop
pop
dec
in
jge
and
in
sbb
out
arpl
jp
scas
jnp
xor
cmpsb
testl
push
scas
es
sbb
sub
sub
js
lret
daa
fwait
jle
jge
idiv
mul
rcrb
sbb
inc
xchg
or
fs
cmc
mov
lds
add
cld
scas
aas
dec
pop
pusha
addb
orl
xor
adc
mov
or
jl
or
push
sub
gs
rcrl
stos
js
push
add
lret
dec
jmp
add
movsl
outsb
pushf
bound
int3
xchg
and
mov
jo
loop
xor
sahf
pop
mov
add
push
stos
xor
push
mov
lods
cli
sub
sbb
aam
sbb
lcall
in
mov
xchg
jecxz
sub
into
popf
xchg
and
dec
das
or
push
mov
push
jp
ret
pop
mov
insl
adc
int3
rcrl
in
xor
cmp
fsincos
mov
mov
jecxz
add
nop
and
adc
fsts
mov
xor
imul
test
stos
gs
or
and
mov
mov
rorl
pop
push
xchg
stc
cmpsb
jecxz
mov
add
icebp
movsb
mov
cli
jbe
dec
xchg
xchg
push
repnz
daa
fstps
xlat
mov
pop
dec
inc
mov
adc
inc
jnp
mov
loop
add
aad
aaa
out
add
cmpsl
cs
lds
out
mov
std
push
mov
inc
pop
stc
pushf
ss
loope
imul
repnz
aaa
test
dec
cld
mov
push
mov
andb
xchg
test
pusha
adc
arpl
lods
add
out
xchg
rorb
push
outsl
cmpsb
pop
iret
cmp
xchg
test
shrl
pop
push
pop
sub
loope
push
out
jmp
pop
dec
mov
and
push
sub
repnz
pop
gs
jne
mov
inc
sub
mov
div
or
mov
fdivrl
add
xor
xor
outsl
inc
add
mov
frstor
jp
jno
dec
add
pop
add
xor
lahf
int
stos
cli
fisttpl
sub
xor
sub
mov
lret
stos
repnz
mov
dec
or
or
cmp
inc
xchg
mov
cmp
cmp
arpl
rcrb
jmp
aad
xchg
fadd
inc
test
sarb
testl
add
div
arpl
cmpl
and
xor
adc
lcall
ret
push
cmp
in
test
mov
dec
int
or
out
pop
push
mov
popa
mov
rcll
pop
scas
sahf
sub
scas
imul
lea
xor
fnstsw
jg
sbb
add
lcall
lock
cmpsb
in
in
ret
or
cmc
cli
cmp
loop
adcb
fsubl
mov
add
es
addr16
inc
xchg
movl
int3
mov
lea
cmp
push
xor
sub
push
add
mov
xor
nop
jnp
nop
scas
mov
out
mov
add
js
loopne
adc
cli
adc
cwtl
daa
xchg
jbe
inc
daa
xchg
cmp
xchg
fmuls
push
in
xor
sbb
pop
xor
mov
xchg
cmp
jmp
sbb
xchg
outsb
adc
jle
lcall
addb
lcall
sbb
cmpsb
or
stos
sbb
jle
jae
fnstenv
mov
xchg
add
cmp
push
loopne
add
ss
mov
loop
mov
popf
repz
sbb
movb
insl
ja
cmp
sbb
dec
imul
mov
jb
sub
or
push
movsb
std
mov
cs
add
lret
dec
es
jg
roll
jne
lock
les
int
icebp
repz
js
and
ds
jp
outsl
out
je
and
outsb
popa
xchg
push
int
xor
push
push
jmp
shlb
scas
sub
and
fnsave
das
pop
sbb
push
xor
pop
push
or
lret
jp
stos
mov
aam
jecxz
adc
subb
cmp
or
xchg
mov
ret
mov
enter
test
inc
iret
or
or
nop
xchg
mov
pop
jp
fnstsw
mov
pop
jmp
adc
cmc
mov
cmc
push
inc
cmp
paddusw
dec
mov
ljmp
shll
mov
aad
into
lods
adc
nop
xor
rolb
int3
pop
faddp
add
mov
cmp
fsub
lds
push
mov
xchg
test
push
dec
lods
rcll
mov
or
push
xor
pusha
pop
mov
in
mov
shrb
scas
pop
jmp
fisubs
pop
into
add
in
add
int
lret
divl
xchg
pop
pusha
repnz
xchg
and
mov
sahf
fidivs
push
aam
xlat
fwait
mov
mov
cmp
popw
lret
dec
dec
mov
fdivr
mov
enter
sub
sahf
sbb
and
jg
jge
mov
pop
pop
aam
imul
js
enter
andl
fadds
out
adc
call
and
out
xchg
das
out
daa
xor
in
xchg
adc
mov
mov
xor
test
outsb
andb
cmc
enter
or
pop
xor
jnp
xor
inc
add
jnp,pn
xorl
jae
cld
leave
andb
orb
jnp
cmpsb
cmc
pop
jo
or
jecxz
sbb
test
push
ja
loop
dec
movsb
xor
sti
adc
sbb
scas
and
xchg
sub
popf
mov
sub
addl
sahf
sbb
in
inc
mov
cmpb
mov
push
mov
jnp
movsb
or
xchg
or
out
mov
push
cmp
mov
or
pop
arpl
mov
cmp
pop
pop
test
cltd
out
dec
xor
popf
pop
inc
cli
das
or
and
repnz
mov
cltd
or
les
test
sbb
shr
dec
iret
lcall
daa
in
addr16
shl
sbb
lock
push
movsl
lock
jp
sbb
fsubl
xchg
push
mov
pushf
jle
adc
stos
xchg
xchg
adc
pusha
out
test
ds
inc
and
adc
inc
sub
pop
mov
sarb
cmp
lahf
mov
data16
aad
scas
adc
dec
cmc
movl
lret
mov
lds
repz
stos
mov
pop
das
insl
inc
xchg
add
leave
jecxz
inc
fucomi
hlt
sub
es
push
push
or
or
and
std
ja
fldenv
test
and
jecxz
mov
popa
pop
inc
push
jecxz
jp
popf
icebp
popf
aam
rcrl
leave
or
push
mov
test
dec
sahf
lea
mov
test
es
out
push
gs
insl
mov
xchg
inc
jno
pop
lea
pusha
ds
jmp
flds
pushf
push
fdiv
pop
pop
test
pusha
xor
push
testl
shll
insl
xchg
fadds
repz
add
das
jmp
xor
mov
mov
lret
and
mov
mov
arpl
subl
or
push
ret
lcall
pop
lret
repz
sbb
xor
add
or
pop
xor
cli
daa
push
movsb
and
cld
add
mov
mov
stos
int3
mov
stos
dec
jg
insb
aas
in
stos
outsb
outsb
xor
mov
push
scas
cli
lock
shlb
fldenv
stc
sub
popa
lret
mov
mov
dec
jmp
movsb
sub
pop
imul
in
out
push
jle
loope
bound
lock
inc
pop
aas
mov
loope
add
arpl
lods
aad
cmpsl
sub
das
add
es
jmp
cmpsb
adc
ds
mov
and
sbb
add
push
loop
xor
dec
dec
xor
cmpsl
push
cmp
push
js
ret
mov
or
xor
adc
pop
das
ret
sbb
push
pop
mov
adc
aam
outsl
xchg
and
test
sub
xchg
push
rcrb
popa
pop
push
scas
movsb
mov
add
icebp
mov
dec
jmp
nop
insb
fstl
insb
inc
dec
mov
adc
push
in
test
push
aaa
cli
dec
loop
test
fldlg2
cs
clc
jae
adc
cltd
and
xlat
jb
fidivs
sbb
push
dec
clc
cmp
jle
pop
lds
mov
add
or
icebp
adcl
push
lahf
dec
das
ds
cs
ret
mov
call
sar
sbb
and
fiadds
inc
es
cltd
adc
mov
jnp
repz
xor
repz
pop
pop
aam
jbe
daa
mov
mov
pop
cmp
dec
add
jmp
add
insb
movl
pop
xor
hlt
xchg
dec
testl
sbb
cmp
lret
jmp
push
testl
xchg
stos
inc
decb
cs
push
lds
test
pop
push
mov
addl
fwait
sar
cs
mov
add
sbb
mov
cmp
or
pop
jg
int3
lcall
in
pop
lahf
lcall
push
xor
pop
fnstcw
mov
lcall
jle
sbb
pusha
push
lahf
push
sub
adc
inc
or
in
jg
cmpsl
lea
in
push
rorl
pop
fildl
xchg
mov
mov
or
cltd
mov
test
and
nop
rcll
or
popf
push
call
or
xor
mov
clc
out
andb
jo
mov
xchg
cmc
mov
ret
push
pusha
cli
int
clc
jmp
imul
adcb
sub
pop
out
mov
mov
or
cmp
insb
push
test
xor
add
repz
fs
inc
fstl
jo
sar
inc
mov
orb
add
jl
daa
mov
push
ljmp
sub
xchg
aaa
sub
add
test
in
mov
pop
in
rcrl
int3
push
clc
lret
loopne
rcr
inc
lock
jno
jmp
aas
adc
jbe
xor
jp
andl
cmp
in
int3
or
ret
or
adc
pop
xchg
movsb
insl
push
iret
sbb
repnz
pop
xor
jge
imul
mov
or
cltd
jle
adc
pop
xchg
lcall
je
les
dec
fdivrl
bound
dec
out
jl
arpl
and
fwait
imul
inc
xchg
stc
mov
fists
aad
add
in
aaa
shlb
ret
inc
sti
es
cmp
in
shl
repnz
pop
inc
aam
outsb
imul
data16
pop
rolb
aam
push
cmc
add
cmp
out
dec
mov
dec
shrb
pop
es
dec
leave
jne
sahf
in
xor
mov
enter
or
sti
addr16
ss
jmp
ja
iret
adcl
adc
mov
lahf
dec
xchg
cs
test
and
jno
lds
inc
sti
out
inc
lret
mov
pop
fstpl
test
adc
lock
pop
test
cmp
in
fucomp
jg
add
leave
cmp
imul
cli
and
cmc
es
mov
mov
xchg
push
cmc
lcall
js
sarl
into
jns
pop
ret
aas
push
sbb
adcl
add
shll
mov
decl
dec
orb
sub
or
cltd
pop
in
fucomip
push
mulb
push
cmpb
inc
or
mov
add
pushl
xchg
clc
mov
rcl
cwtl
les
mov
jp
add
xchg
adc
and
lcall
lret
dec
dec
lock
cltd
or
jp
xor
jbe
jo
test
xchg
lods
jbe
inc
hlt
imul
push
pop
lods
adc
ss
jo
xor
and
mov
addb
sub
sbb
addr16
lcall
repz
fists
movsl
outsb
mov
jbe
pop
xor
xchg
mov
inc
adc
jge
insl
scas
into
sbb
clc
xchg
addb
popa
inc
jns
inc
andb
dec
pop
aaa
jnp
fwait
jae
cmp
mov
dec
je
js
add
dec
adc
mov
jns
rolb
xchg
pop
mov
dec
test
or
cmp
mov
ljmp
dec
mov
stos
or
lods
sub
push
jno
pusha
cmp
jne
cmp
adc
out
cmp
imul
jo
pop
nop
jae
inc
mov
jp
fdivp
dec
dec
dec
punpckhwd
mov
jmp
xor
loope
mov
mov
jae
xchg
fsubrs
dec
fiadds
aaa
sbb
cmp
dec
lds
add
push
ds
jg
xlat
jle
repnz
arpl
sub
cmpsl
and
sub
xchg
mov
xchg
repnz
cmp
enter
or
into
jle
pop
push
or
bound
adc
cmpsb
mov
ja
xchg
cmp
xchg
dec
int3
sbbl
jl
push
push
ret
push
push
xlat
cmc
notl
push
subl
inc
add
gs
outsb
mov
xlat
cli
pusha
push
mov
sbb
xchg
sarb
or
roll
into
or
xchg
sub
movsb
fiadds
out
shll
scas
cmp
je
es
lret
pop
fisubl
push
pop
push
popf
sbb
jmp
sbb
imul
ljmp
push
sbb
andb
ss
sbb
jnp
lret
add
fsubp
popf
lcall
inc
push
mov
jnp
call
repz
xchg
xchg
jge
and
cli
in
adc
and
lret
pop
inc
jmp
jb
leave
pop
mov
call
add
in
lahf
or
std
sbb
pop
pusha
andl
mov
sbb
bound
aaa
or
xchg
pop
xchg
inc
cmp
gs
xor
nop
xlat
mov
ret
int3
and
mov
ficompl
xlat
inc
enter
or
add
jg
cld
mov
rcr
xchg
push
std
and
inc
cli
movsb
test
jmp
and
xor
dec
sbb
xchg
push
insb
mov
and
je
outsb
aas
insl
fwait
movsb
cmp
mov
iret
mov
mov
mov
cmp
cmp
lods
jbe
add
add
test
aam
jo
mov
mov
dec
add
lcall
sbb
adc
push
scas
fidivrs
cmp
mov
mov
roll
mov
insl
mov
loop
aas
daa
test
pop
gs
xor
sbb
pop
test
xlat
dec
xchg
fidivl
or
loope
mov
jmp
and
mov
sbb
pop
xorb
xchg
fwait
jecxz
sub
mov
fwait
mov
in
sub
push
or
ret
xor
movsb
in
cmpsl
in
push
fisubl
jg
sbb
nop
fwait
sti
test
ror
mov
hlt
add
nop
es
sbb
fwait
stos
or
shll
scas
leave
mov
test
nop
aam
ja
adc
subb
cmp
int
jnp
rcl
mov
imul
leave
leave
std
lea
jge
aad
add
mov
push
sub
idivb
pushl
cmp
rep
iret
sub
dec
mov
insl
ret
mov
loop
repnz
loope
cmp
test
mov
cmpsl
jo
insb
test
and
mov
dec
pop
mov
fiaddl
push
jno
lahf
inc
fwait
out
pushf
xor
notb
dec
xor
cmp
mov
adc
jnp
push
dec
pop
push
cmpsl
lea
mov
ret
pop
pop
test
aad
jne
or
call
lret
lock
loopne
flds
xor
mov
add
pop
cmp
jp
and
subb
jno
pop
dec
or
es
xor
bound
addr16
jp
mov
test
jne
push
bound
fiaddl
xor
popf
push
xor
and
cld
sarb
push
inc
sub
lods
icebp
insb
push
pop
cmpsl
xlat
roll
pop
out
jb
test
repz
ret
lods
adc
mov
inc
xchg
aas
jns
mov
push
lock
test
add
mov
jae
out
lret
fisubl
mov
jl
xchg
jmp
jbe
popa
inc
mov
cmp
out
sub
sub
bnd
dec
shrl
inc
ja
and
lret
stc
mov
in
call
or
insb
rol
or
lods
pop
mov
in
mov
push
pop
xchg
xchg
add
test
int3
filds
in
pusha
icebp
mov
or
add
and
mov
in
or
or
push
mov
xor
clc
adc
jns
jns
ret
aas
sbb
scas
in
test
xor
sahf
pop
cwtl
push
out
loop
fistl
pop
and
enter
stos
push
jno
sti
adc
or
inc
test
test
aad
and
sub
icebp
mov
push
add
fwait
outsb
jo
add
fcompl
jns
jl
fldcw
cmpsl
or
fs
pop
mov
jae
mov
sbb
inc
in
xor
and
push
jbe
sbb
punpckhdq
sub
dec
jne
hlt
push
fnstsw
inc
fisttpl
xor
fsub
jg
push
ror
mov
dec
lret
stos
jmp
pop
and
lods
jg
push
repnz
xor
scas
push
pop
cs
pusha
loope
cli
mov
and
and
movsb
xchg
es
and
or
fdivrl
pop
pushf
push
pop
pop
dec
imul
pop
push
mov
cmp
sub
scas
int
test
push
sub
adc
mov
inc
push
iret
add
lahf
mov
xor
xchg
sti
or
add
inc
insb
gs
add
ja
or
sbb
cmp
mov
adc
add
lods
pop
jmp
les
repnz
inc
shlb
inc
sub
xor
in
sub
pop
and
fcomp
das
gs
sub
adc
add
and
nop
jno
add
leave
mov
shll
mov
pushw
push
popa
xor
and
mov
or
imul
adc
jle
push
xchg
mov
push
popf
aam
mov
test
imul
popa
testl
mov
mov
popf
cmp
adc
push
sbb
push
je
push
fcomi
test
fwait
inc
push
fadds
out
test
mov
xchg
fdivrs
into
rcrb
mov
outsl
xor
insl
mov
pop
stos
pop
or
pop
sub
fwait
dec
cmp
inc
popf
lock
pop
xchg
subb
mov
xchg
stos
xor
sbb
fstpl
inc
pop
pushf
mov
bnd
sbb
loop
mov
rcrl
popl
mov
mov
and
pop
nop
jg
cs
cmp
ret
push
jl
xchg
jmp
cwtl
sbb
mov
movsb
loop
scas
add
mov
inc
test
bound
sbb
mov
call
incl
dec
pop
call
mov
pusha
cmp
push
jbe
pushf
rclb
std
mov
inc
add
sub
lcall
test
mov
arpl
adc
sub
pop
lahf
int
pop
sahf
jae
nop
es
in
hlt
out
sub
js
into
testl
std
pushf
pop
repnz
adc
dec
test
inc
fsubs
pop
in
sub
add
mov
cmp
testb
out
bswap
pop
rcll
aaa
mov
and
in
jp
xor
mov
cmp
jb
into
mov
loopne
or
in
cs
sub
iret
negb
xlat
and
dec
and
sbb
mov
cs
mov
cmp
or
lock
mov
mov
lcall
loope
std
std
dec
cmp
ljmp
mov
orl
popf
xchg
jae
inc
mov
aam
adc
dec
outsl
and
insb
and
xchg
xchg
add
iret
xlat
push
out
addr16
mov
pop
shrb
mov
push
das
daa
rcl
inc
movsb
and
jo
push
out
add
loop
into
jno
popl
cwtl
ret
mov
imul
test
inc
mov
lods
orb
jo
enter
lds
xchg
imul
aad
addr16
test
bound
lea
pop
sti
mov
movsl
dec
mov
into
jns
add
aad
popf
aam
cltd
jl
lret
jg
dec
enter
adc
adc
loop
push
test
test
dec
add
jne
lcall
arpl
push
es
adc
pop
adc
sub
sbb
jnp
ret
jl
dec
std
out
jb
test
orl
in
jns
mov
ds
mov
push
es
dec
mov
xor
pushf
hlt
cltd
cmp
or
clc
adc
pop
xor
xchg
test
aas
and
inc
mov
popf
mov
dec
mov
cltd
hlt
addr16
jo
movsb
aaa
ljmp
mov
cs
mov
je
xchg
leave
mov
scas
icebp
idivb
rolb
gs
xor
or
in
adc
adc
push
lods
std
dec
mov
sbb
sbb
pop
daa
movsb
call
push
shr
push
testl
movsb
and
stos
jmp
fwait
cltd
popa
frstor
mov
adc
icebp
and
scas
dec
rcl
add
pusha
stos
movsb
push
mov
inc
sbb
inc
xor
jno
mov
jle
cmp
scas
jg
xlat
enter
shrl
cmp
jno
mov
stos
enter
mov
lret
shlb
sbb
pop
arpl
outsl
in
mov
mov
sub
adc
pop
je
inc
and
loop
mov
mov
sbb
repnz
sub
xchg
mov
sub
popa
imul
bts
push
push
insb
xor
in
sbb
jecxz
cs
sub
sbbl
xor
dec
jno
cwtl
nop
adc
push
dec
lcall
xchg
shlb
pop
push
mov
sub
ret
in
cld
push
xor
and
xchg
bound
adc
int3
cld
mov
mov
out
fists
pushf
popa
leave
fmul
mov
daa
ss
or
data16
sub
js
add
movsb
mov
shll
lods
dec
sub
cli
scas
aaa
sub
out
lock
push
addb
ljmp
pushf
mov
or
movups
jecxz,pt
bound
or
dec
cs
subb
js
pop
xor
sub
xlat
repnz
popa
ds
push
cmpsb
xchg
js
xchg
cmp
std
pop
xchg
ds
loope
out
je
xchg
and
mov
xchg
xchg
ja
movsb
cmp
add
shrb
repnz
fidivs
das
mov
lret
int3
js
or
fstpl
jns
jno
dec
fisubrs
pop
sbb
sbb
scas
and
insb
dec
std
mov
xor
shr
bnd
in
mov
sahf
pop
out
xchg
sub
lcall
arpl
xlat
movsb
and
or
inc
add
outsb
mov
fadds
or
inc
dec
jg
enter
test
mov
sarb
inc
jecxz
push
in
ljmp
xchg
aad
push
out
ja
mov
dec
sbb
pusha
filds
ljmp
xchg
mov
pop
xchg
xchg
pop
adc
pop
pop
xor
in
sub
dec
jb
dec
fcoml
sub
jno
pop
mov
push
ret
mov
inc
lock
cli
sub
jmp
in
mov
test
jbe
sub
sbb
jl
adc
jmp
rclb
inc
pop
jl
jne
xchg
cltd
out
test
movsl
or
inc
fnstenv
adc
mov
call
and
inc
pop
mov
xchg
inc
les
ljmp
sbb
mov
clc
iret
inc
cmpsb
lcall
cs
loope
loopne
or
or
adc
aam
rcrb
hlt
notb
inc
iret
shl
cld
mov
fistps
push
push
fcmovne
shr
lock
push
mov
ss
mov
xor
mov
mov
call
push
inc
clc
xor
and
xchg
bound
mov
lock
inc
sarb
lret
mov
stos
testb
push
dec
movsb
movsb
xor
lahf
in
fdivrl
push
mov
popa
fadds
ja
stos
mov
bt
ret
rolb
dec
adc
fldt
arpl
jge
ljmp
pop
les
cmp
fistl
shrb
xchg
cld
or
jno
mov
and
jno
fisubrs
pushf
dec
mov
or
cmp
pop
std
out
jne
xor
mov
mov
or
pop
cwtl
jns
pop
rcl
lcall
adc
imul
mov
xor
or
frstor
cltd
idivl
push
mov
lea
xchg
jl
push
inc
adc
test
nop
out
es
orb
xchg
or
inc
and
enter
fistpl
pop
adc
sbb
std
shll
sar
dec
pushl
xchg
sub
xor
adc
sbb
int
outsl
mov
mov
mov
gs
cld
enter
sbb
xchg
jle
xor
fs
rcll
cmp
movsb
sub
int3
inc
dec
sub
inc
in
jns
iret
push
roll
inc
jns
loopne
jb
xor
pop
out
into
dec
push
adc
sub
nop
rcll
dec
mov
cmp
pop
inc
sbb
rcrl
jmp
std
mov
mov
xchg
fisubl
xchg
push
ficomps
adc
inc
mov
cltd
mov
sbb
jl
into
idivl
mov
iret
sbb
in
pop
add
mov
cmc
mov
cmp
xor
push
sub
rcrb
cmp
bound
sarb
and
aas
lret
dec
out
cmpl
sub
sarb
es
jo
add
loopne
sbb
fidivs
lcall
jmp
and
inc
add
out
mov
mov
jp
outsb
movsl
jo
mov
adc
int
sarl
sbb
loope
rcll
or
mov
mov
xchg
jns
pop
fdivp
cmp
adc
ja
mov
subb
test
sbb
negb
and
insl
jp
jno
aas
hlt
mov
ret
fnstenv
pop
mov
addl
xlat
bnd
pop
and
jo
bnd
add
mov
xor
adc
fs
lahf
inc
mov
mov
hlt
xor
mov
testb
push
shlb
push
jecxz
dec
scas
ret
jbe
sub
popa
mov
lock
test
sahf
mov
pop
call
inc
adc
cmp
icebp
in
stos
loopne
inc
push
in
aad
dec
jae
push
in
out
popa
test
pop
pop
jg
stos
aaa
xor
les
ret
cmp
dec
xor
xlat
sub
notb
jle
jne
xor
xor
arpl
cmp
sbb
mov
jbe
test
cmp
xor
ds
out
push
andb
or
test
jmp
mov
push
mov
pop
mov
pop
mov
js
test
mov
sbb
and
jnp
clc
adc
mov
addr16
xor
in
adc
mov
aad
sub
ret
pop
nop
ja
cmpsb
fs
nop
mov
arpl
xor
lret
lcall
cld
imul
lods
jbe
pop
je
push
fsts
loopne
xor
mov
shlb
rcrb
or
int
fs
outsl
hlt
mov
mov
fcompl
cmpsl
outsl
mov
xchg
fldt
xchg
in
pop
rol
sub
jo
cltd
jne
and
and
insb
or
ror
mov
je
dec
xor
cmp
call
pop
or
push
ljmp
inc
fdivl
xor
mov
lcall
and
push
sbb
xor
and
xchg
es
and
and
adc
fisubrs
dec
xchg
jo
jl
test
jno
jle
mov
shll
sub
and
or
outsl
jp
inc
jo
lds
rolb
idivl
mov
xlat
lea
loope
fstl
jmp
mov
xchg
and
jnp
test
in
push
std
clc
mov
sarl
jmp
fcmovbe
and
lea
jg
jg
out
imul
fisubl
xor
push
push
lret
pop
lret
call
and
mov
push
sbb
sarb
sti
rcrb
xchg
ret
cmp
rcrb
daa
rcr
inc
lcall
mov
cmp
jp
push
clc
rclb
sub
push
iret
rorl
daa
stc
call
sub
in
mov
fsubr
ret
hlt
mov
in
loope
xor
test
xchg
jnp
loop
clc
int
jb
enter
cltd
xlat
jo
inc
pop
jbe
pop
mov
mov
fcomps
adc
dec
jns
mov
inc
push
mov
xchg
or
in
idivb
or
fnstenv
mov
sub
mov
cmp
popf
pop
fnstcw
jmp
pop
mov
movsb
outsb
shrb
sbb
cmp
hlt
jno
int
or
xor
dec
xchg
scas
add
lcall
mov
mov
addr16
mov
cmpsb
inc
inc
jecxz
in
fcompl
adc
push
jno
int3
mov
jp
xchg
loopne
jecxz
clc
and
inc
subl
int3
int3
dec
std
and
pusha
sbb
mov
pop
repnz
scas
fsubl
je
add
or
push
xchg
lods
cmpsb
shll
add
lcall
or
sbb
xor
movsl
lds
push
ret
sub
xor
inc
dec
sbb
or
mov
popa
and
nop
xlat
inc
sbb
aas
pushf
sub
cmp
push
add
dec
mov
in
cmp
or
cli
cmp
jmp
jb
rolb
jns
push
rcll
dec
sub
das
js
pop
jmp
test
xchg
outsb
out
fnstcw
add
push
pusha
loope,pn
inc
int
sub
cmp
inc
lcall
sbb
cmp
in
lods
rolb
adc
insb
add
out
pop
lret
or
fdivp
cmpsl
repnz
popf
out
mov
sbb
ds
xchg
and
lods
sahf
lret
xor
jb
pop
clc
scas
adc
xor
pusha
in
jne
jb
notl
or
ljmp
xor
pop
fldt
cli
mov
rcrl
sti
js
shl
jmp
push
cmp
adc
mov
loop
jns
pushf
out
xchg
push
scas
mov
xor
cmp
imul
xlat
insb
mov
test
dec
shll
icebp
mov
scas
mov
mov
or
data16
jbe
fidivl
roll
lea
shll
mov
sbb
and
mov
or
mov
mov
adc
and
push
sarl
mov
mov
cmp
jns
ss
aas
hlt
adc
hlt
inc
fwait
insl
repz
test
shlb
les
push
push
add
push
sub
ljmp
fisttps
xchg
in
push
inc
push
sbb
fadds
xchg
add
fwait
add
push
pop
pop
pop
loopne
enter
jecxz
mov
sbb
subl
push
jne
and
xor
jne
mov
jbe
call
jae
test
jge
mov
out
movsb
cli
mov
xor
sbb
or
outsb
std
in
out
push
arpl
imull
popa
aad
cmp
jbe
repz
das
xchg
and
pop
outsb
pop
es
mov
sub
jg
sbb
xor
mov
jbe
pop
lret
test
push
rcrb
cmpsl
int
pusha
and
shll
sahf
aam
divl
inc
mov
pop
or
scas
push
or
adc
xchg
clc
sbb
iret
mov
push
mov
and
call
push
ds
hlt
fs
jnp
inc
lcall
fldcw
push
test
in
dec
push
mov
mov
rolb
mov
dec
gs
mov
cmp
cld
cmpsb
jnp
shl
jno,pt
ret
jl,pt
pop
jge
cmp
movsb
push
hlt
or
or
shrb
hlt
test
xchg
inc
stc
ret
and
scas
pop
ss
cmpsb
cmp
or
push
nop
dec
int
fxch
mov
xchg
adc
xor
dec
lcall
mov
call
mov
inc
or
scas
mov
lret
dec
in
push
cli
pusha
and
nop
fcomps
int3
into
sti
push
mov
mov
into
mov
arpl
arpl
stc
push
sub
pop
and
popa
adc
mov
mov
loopne
addl
mov
stos
frstor
adc
mov
xor
movsl
or
pop
pushf
test
xchg
lret
mov
jno
add
idivl
jg
outsl
pop
mov
mov
pop
mov
xor
xchg
xchg
cmc
cld
ret
sahf
fwait
or
call
push
jmp
mov
xchg
call
scas
arpl
sub
pop
lods
adc
mov
push
mov
inc
add
pop
sbb
fcoml
out
inc
dec
in
popa
je
cmpb
int
movsl
mov
mov
insb
pop
or
test
lea
push
pop
inc
push
fstl
mov
insb
xor
rcrl
daa
loop
mov
mov
out
pop
sbb
xchg
cmp
cld
mov
ss
fidivs
mov
sub
test
fildll
shlb
iret
and
je
imulb
push
test
push
enter
divl
outsl
or
out
test
or
push
sbb
arpl
dec
popf
dec
mov
jmp
lock
pop
test
imull
neg
push
bound
inc
out
roll
scas
frstor
or
jle
outsb
inc
xchg
fsubrs
aam
fs
mov
lahf
std
incb
inc
jnp
test
inc
psubb
jno
int3
shrb
das
push
sbb
or
mov
adc
leave
cltd
cmp
cmp
mov
dec
das
loop
insb
push
outsb
cli
fstpl
dec
xchg
data16
out
icebp
in
dec
pop
jno
sbb
sub
loope
mov
adc
mov
cmpl
sbb
int3
jp
ss
jnp
sbbb
repz
dec
or
stos
xchg
mov
push
pop
jb
xchg
mov
add
test
out
subb
add
aas
test
arpl
add
or
xor
ljmp
repnz
addr16
loope
jl
stc
adc
mov
fisubl
sarl
fs
movsb
add
leave
push
sarl
mov
int
cmp
fdivrs
test
add
add
insl
sub
push
test
adc
xlat
push
xchg
idivl
insl
loopne
lahf
dec
sub
xor
sahf
cli
aam
outsl
pop
and
mov
push
subb
rep
adc
aam
pop
clc
jnp
jp
lcall
js
add
bound
les
dec
mov
fnstsw
jb
inc
mov
test
sub
fdivrl
adc
shll
in
imul
test
lret
or
jae
in
sbb
out
das
pop
adc
jae
movsb
sbb
and
push
lds
pushf
mull
in
xor
push
dec
ljmp
mov
jmp
pop
mov
add
lret
mov
mov
mov
sub
push
repz
and
lods
lcall
xor
ds
inc
dec
xlat
es
mov
ja
sub
dec
sbb
push
iret
lods
lret
lcall
dec
inc
push
lcall
xchg
push
scas
insl
in
lea
or
mov
xlat
lcall
lods
xlat
inc
push
inc
fisubl
pop
push
inc
outsl
jbe
movsb
insl
cmp
lahf
daa
test
cmp
cmpsb
lret
into
xor
faddl
icebp
xchg
mov
jbe
jecxz
div
mov
mov
inc
fwait
sub
push
adc
sbb
mov
dec
fisubl
inc
mov
xlat
rolb
repnz
inc
mov
mov
test
outsl
sbb
jg
push
jp
or
lods
repnz
xor
rcll
and
jp
adc
and
cmp
int
lea
inc
enter
mov
cli
aas
sub
inc
je
adc
or
pop
and
in
dec
test
adc
mov
pop
dec
dec
sbb
mov
mov
loop
std
xrelease
call
jb
inc
pop
jb
dec
push
mov
xchg
std
fidivrs
fcompp
and
int3
xchg
dec
call
xchg
out
mov
dec
gs
sub
sbb
decl
inc
pop
mov
push
int
jle
cmp
jmp
out
je
jle
rcrl
cmp
movsb
xchg
dec
repz
sti
dec
rcrb
in
adc
idivb
adc
ljmp
mov
test
addb
sbb
cmp
aad
in
scas
call
push
xchg
push
sub
mov
sbb
cli
cmc
adc
fs
or
pushf
pusha
mov
push
xchg
shr
imul
pop
imul
mov
sbb
pop
xchg
sbb
repnz
popf
adcb
or
and
cmpsb
xchg
lret
mov
inc
jns
or
test
mov
mov
adc
add
push
mov
dec
ret
dec
gs
data16
mov
pop
xchg
aas
lret
out
rorb
cmpsb
jmp
stos
testb
mov
adc
loopne
push
jmp
out
out
sarl
test
fucom
lret
adc
nop
push
cmp
lock
mov
push
jne
xchg
sbb
lods
jmp
aas
mov
xchg
push
inc
mov
inc
jbe
mov
or
xor
push
sub
fdivrl
mov
loop
inc
cli
xchg
cmpsb
jb
stc
xchg
add
sub
cmp
aas
dec
jle
aas
inc
inc
cmp
cmc
cmp
lea
sbb
add
sub
mov
outsb
xchg
push
sub
mov
mov
cmpsb
fimull
lods
or
pop
mov
mov
push
push
cmpsb
mov
mov
std
xlat
sub
mov
jl
mov
mov
call
rcr
push
or
ret
enter
xchg
adc
add
sub
mov
cwtl
pop
aas
mov
bound
popl
pushf
fwait
push
jns
aam
clc
iret
gs
push
push
mov
inc
out
mov
stos
xor
scas
dec
mov
jp
leave
in
in
mov
rclb
and
loop
and
or
or
or
out
roll
jb
mov
or
xor
mov
jg
jbe
dec
cmc
mov
hlt
dec
cmp
mov
jge
pop
xor
add
dec
or
push
cmp
inc
fdivp
pusha
aad
or
xor
pop
ja
das
ljmp
or
xor
and
pop
xor
cld
jns
aas
pop
push
adc
outsb
push
jbe
lods
mov
std
cmove
arpl
push
xchg
adc
and
cmp
lods
push
imul
add
sarb
lods
push
inc
cltd
les
lcall
jp
jae
push
cmc
xor
sbb
push
call
xor
aas
push
mov
outsb
xor
les
je
shll
loopne
cmp
xor
push
shlb
mov
fsubr
xlat
ds
xchg
mov
movsl
pusha
pop
out
stc
mov
xchg
adc
adc
in
in
and
sbb
lods
rcrl
dec
test
pop
fdivl
setno
ds
jnp
out
mov
bound
xchg
sbb
mov
outsb
cmp
jl
gs
fsub
and
push
push
mov
mov
mov
test
sbb
xor
dec
arpl
ret
stos
sbb
gs
fnsave
and
imul
inc
mov
testl
jg
and
cmpsb
enter
and
scas
fs
repnz
push
cltd
jmp
lcall
rorb
mov
sbb
addl
addr16
sbbb
mov
popf
pop
pop
inc
xchg
mov
push
std
out
scas
push
and
das
and
repz
js
and
xchg
sbb
incl
pop
arpl
clc
jg
rolb
sub
jge
sub
push
out
and
inc
sub
scas
add
lret
push
rorl
and
sbb
lods
lea
in
mov
push
xchg
test
mov
pop
paddsb
lea
lea
aaa
mov
lock
fwait
enter
jns
cmc
mov
pop
insl
xchg
lret
cmp
int3
test
dec
daa
cwtl
dec
mov
cmp
pop
sub
out
stos
push
dec
sub
push
dec
inc
das
mov
sbb
std
mov
adc
sub
mov
out
xlat
mov
mov
movsb
push
pop
fidivrl
push
sti
jg
rcrb
jp
imul
xchg
pusha
mov
jle
cmp
push
pop
gs
jp
addb
mov
bound
repz
movsl
mov
mov
lock
inc
cli
in
adc
sbb
mov
sbb
pop
xchg
into
jmp
hlt
sarl
cmpb
aam
mov
popa
gs
xor
xlat
mov
gs
aaa
xchg
mov
sub
mov
pop
mov
int
xchg
lds
test
xor
inc
push
jno
xchg
mov
push
pop
cmpsb
inc
lods
nop
sub
shrl
lds
enter
ss
adc
inc
push
fsts
gs
mov
out
popf
add
mov
jmp
scas
push
cmpsl
test
movsl
test
andl
xor
jg
mov
jo
aam
xchg
rorb
pop
sbb
dec
mov
mov
test
jno
pop
ja
adc
movsb
mov
loopne
xor
in
rcrl
ljmp
add
push
cmpsb
movsl
pop
inc
popf
sub
movsb
cld
mov
sbb
ret
es
mov
jbe
idivl
xchg
mov
pop
sub
test
ljmp
or
arpl
rcrb
sub
mov
div
shl
lock
ret
cmpsb
or
push
mov
mov
je
jl
sar
xchg
pushf
fistl
test
cmp
or
hlt
cmp
aam
call
pushf
push
inc
fstl
sub
jge
jecxz
movsb
adc
mov
cmp
or
mov
cmpsb
into
pop
sahf
stos
dec
loopne
add
and
dec
push
fwait
push
js
xchg
in
or
pop
in
mov
push
rorb
cmp
fldl
icebp
jmp
or
inc
rolb
jle
pop
mov
xchg
or
scas
xchg
inc
mov
push
push
fildll
out
gs
push
int
jnp
leave
aad
jmp
inc
outsb
imul
fs
sbbl
mov
decl
rorl
push
popa
jne
pop
or
add
enter
push
in
pop
pop
xor
pop
aas
xor
cmp
loopew
or
and
loopne
in
mov
ret
push
aaa
push
cmp
aaa
and
int3
mov
mov
jmp
dec
repz
scas
dec
or
push
enter
fldenv
pop
xchg
xchg
lds
jecxz
stos
in
sbb
and
lahf
sub
and
cmp
jge
jo
rcrl
cli
add
test
aas
jle
leave
lcall
push
mov
pop
out
jle
xorl
pop
mov
push
push
mov
test
mov
pop
out
inc
cmp
loop
mov
test
inc
jp
mov
pop
push
push
sub
xchg
fcom
movl
sbb
pop
shll
roll
fmull
insb
inc
insl
mov
addr16
out
push
mov
pop
scas
xor
test
je
mov
jmp
sub
aas
adc
ja
and
jp
cmpsb
mov
aam
sbb
mov
mov
cwtl
sahf
xor
in
jp
or
nop
push
lahf
gs
xor
pusha
loopne
ret
dec
jl
in
ja
inc
out
and
pop
xchg
daa
adc
inc
shr
aaa
jae
gs
fs
jp
inc
jbe
mov
lods
shl
aam
fisubrs
insb
push
movsb
lret
sahf
add
jecxz
fldt
mov
ja
adc
loopne
inc
pop
inc
xchg
add
es
jge
es
add
jl
inc
mov
jae
inc
nop
jl
repnz
stos
cmp
mov
fcompl
inc
fs
cld
sar
aaa
in
out
jle
fdiv
sbb
sub
arpl
push
or
cwtl
aad
loopne
dec
gs
sbb
xlat
mov
test
out
scas
add
jl
mov
xchg
inc
pop
or
das
jle
pushf
std
and
lock
test
call
popf
mov
jg
and
xor
xchg
pop
stos
adcl
scas
aas
push
push
add
sub
cmp
ret
mov
clc
scas
mov
dec
das
das
test
jmp
test
fidivs
loop
and
push
ret
xchg
push
pop
cmp
shlb
daa
cld
sbb
add
imul
xchg
and
mov
in
jecxz
in
jnp
mov
xchg
sbb
sbb
cld
cli
lret
xor
dec
push
add
pop
or
add
fists
mov
lods
mov
xchg
push
mov
inc
mov
cmp
and
jae
pop
sbb
xchg
fnstcw
scas
jl
adc
mov
or
jb
xchg
dec
and
inc
and
mov
adc
cmp
add
subb
add
int
sbb
into
cld
shl
outsl
adc
mov
sub
and
xor
jb
and
sahf
adcb
outsb
mov
ja
int
in
dec
xchg
rcrl
and
xor
push
jne
out
lea
xchg
pop
lea
rcr
icebp
es
inc
sub
das
push
push
xor
jbe
in
cltd
fisttps
sbb
je
xchg
or
cmp
push
xor
pushf
xor
fidivl
idivl
xor
mov
loop
stos
out
fstl
dec
sahf
decb
pop
xor
imul
fildll
inc
inc
out
stos
add
ss
sbb
and
add
adc
dec
mov
dec
movsl
lret
rol
scas
addr16
cmc
dec
je
adc
cmpsl
add
mov
mov
cmpsb
cmp
xor
mov
push
pop
push
mov
dec
cmp
add
jbe
pop
push
xchg
insb
and
add
push
es
cwtl
repnz
sub
pop
inc
cs
adc
xor
std
call
int
add
add
sub
cmp
mov
sahf
sbb
in
cmp
add
mov
xor
mov
cld
sbbl
sub
mov
push
stc
jae
inc
push
lods
adc
mov
jle
insb
lret
pop
or
test
decb
insl
stos
inc
sub
mov
pop
lods
mov
hlt
push
inc
cmp
leave
dec
cmp
mov
jbe
mov
fstl
dec
mov
jge
in
repz
xchg
jns
popa
dec
cwtl
mov
pop
in
jge
in
test
addr16
mov
add
mov
push
aad
jmp
movsb
mov
mov
jle
dec
cli
hlt
inc
mov
mov
inc
aad
and
aaa
fwait
jp
popf
lock
sahf
ret
jae
and
jae
or
adc
push
push
in
imul
mov
sub
or
cmp
shrb
into
incl
pop
shll
pop
add
mov
std
push
xchg
cmp
mov
mov
nop
in
jmp
aam
mulb
inc
jns
ljmp
loope
inc
rolb
stos
sbb
push
fsubl
cmp
xchg
rcll
rorb
movsl
adc
cmpsl
icebp
jo
in
std
pop
xchg
aad
mov
mov
cmp
add
and
std
popl
xorl
scas
fs
fs
js
cld
push
jbe
clc
rcrl
jg
rcl
mov
in
cwtl
push
bound
es
std
daa
cmp
or
lods
push
sbb
sub
xorb
test
sar
jne
fisubrs
jle
imul
dec
jle
and
xchg
insb
shlb
mov
mov
lret
test
cltd
pop
sti
cmp
lods
push
mov
mov
scas
cltd
add
mov
scas
pusha
inc
sub
in
inc
or
cmp
and
jns
adc
mov
lret
mov
fimuls
loopne
xchg
mov
clc
arpl
scas
jno
or
into
fstps
dec
lret
sub
inc
mov
rcll
lret
inc
push
and
ds
jp
js
mov
scas
orl
lcall
stc
dec
stos
movl
ret
mov
cmpsb
push
mov
fnstenv
repnz
xchg
jno
xchg
dec
cmp
popl
call
cld
xchg
push
xchg
insl
xlat
cltd
aaa
ja
mov
add
sub
adc
aaa
data16
decl
xor
movsb
add
shl
jb
lret
testb
lahf
dec
dec
xorb
popa
mov
and
aaa
lahf
adc
dec
pop
push
mov
clc
mov
add
push
cmp
cmpsl
jnp
cmpsl
inc
mov
mov
stos
insl
inc
sahf
loopne
xor
push
fsts
sbb
add
loopne
idiv
nop
jae
pop
rcll
fldenv
outsb
cltd
icebp
or
jmp
xchg
pop
jge
lahf
sbb
loop
sub
xchg
pop
movsl
clc
dec
mov
mov
mov
es
pop
mov
jno
mov
icebp
add
sbb
xchg
push
faddl
pop
cmp
repz
stos
dec
mov
ljmp
mov
xor
sub
jbe
aad
pushf
in
push
flds
mul
addr16
cmp
dec
fcomps
fwait
les
repnz
push
pop
repz
arpl
mov
cmp
loopne
div
mov
jno
popa
enter
jnp
fsubrl
inc
js
lcall
cmc
arpl
xchg
pop
push
pop
cmp
loopne
push
cmpsl
mov
imul
lock
in
into
loopne
std
daa
sbb
mov
mov
mov
dec
add
loope
je
stos
fucomp
lea
fdivrs
call
clc
imul
sbb
cmp
inc
lret
mov
and
aad
dec
pop
mov
xchg
decl
add
sub
fisttpl
pop
add
movsb
out
cmc
insl
adc
xor
dec
pop
aam
jb
dec
inc
mov
js
pushf
sub
push
sub
clc
enter
push
add
shrl
outsl
les
popa
lret
insb
mov
dec
fstpl
or
dec
adc
jmp
call
fidivl
subl
gs
add
add
rclb
pop
pushf
loope
adc
sarl
leave
nop
sbb
inc
dec
xchg
scas
sub
iret
mov
inc
push
ja
xchg
pop
push
xchg
test
nop
imul
mov
push
enter
mov
fcom
mov
sub
push
addl
sub
addr16
std
sbb
aad
testl
xchg
xchg
jne
bound
jb
adc
insl
and
push
mov
ss
pop
or
pop
cs
sub
xchg
pop
push
in
ret
mov
fs
shrb
and
mov
mov
adc
out
clc
inc
add
std
insb
outsl
mov
pop
jno
subb
xchg
int3
pushf
push
pop
loopne
xor
sbb
inc
add
test
imul
dec
mov
aaa
sar
add
mov
cwtl
sar
icebp
dec
cmc
adc
mov
inc
dec
push
test
jg
cltd
jl
in
jo
in
cmp
xor
int
cmp
pop
out
jne
dec
add
xor
sub
shlb
jg
jp
jo
cli
jns
into
std
testl
xchg
test
push
scas
sbb
and
xlat
lods
dec
lds
dec
adc
popa
sub
pop
sti
enter
adc
call
das
sbb
iret
push
shl
popl
insl
popa
popl
cmp
lds
sbb
fildll
push
inc
js
cmp
iret
mov
fs
pop
and
dec
cld
mov
or
mov
mov
push
loopne
loop
xchg
lret
cs
icebp
js
and
ret
lock
mov
mov
pop
out
leave
dec
icebp
icebp
testl
xchg
jno
push
and
pop
inc
mov
es
inc
mov
xchg
sarl
xchg
cmc
jp
aaa
data16
xchg
xor
mov
cmp
aaa
mov
pop
std
cmc
add
sub
arpl
iret
xchg
sbb
int3
mov
mov
stos
cmpsb
sub
mov
sub
adc
lret
gs
dec
mov
push
xor
xor
mov
repnz
mov
pop
hlt
mov
jne
xlat
xchg
addr16
pop
fnsave
mov
movsl
popa
xchg
add
mov
xchg
outsl
fs
jbe
push
sarl
cs
addr16
jns
popf
mov
sbb
or
dec
adc
repz
es
cmp
or
cmp
bound
sar
push
jp
outsl
jmp
prefetcht2
jns
inc
outsl
inc
ds
push
xchg
xor
push
xlat
leave
fmull
insb
jno
mov
in
sub
fbld
dec
ror
daa
mulb
adc
adc
xchg
sub
fwait
cli
pop
mov
add
mov
dec
mov
cmp
ss
push
enter
adcl
mov
stc
outsl
movsb
enter
adc
mov
test
js
sarl
insl
ljmp
popl
pop
addr16
and
test
fsubrl
mov
mov
add
arpl
cmpsb
aaa
inc
or
adc
or
js
mulb
nop
add
xor
xlat
mov
mov
or
pop
aas
cmp
negb
dec
fsubr
cmpsb
sub
gs
xchg
xor
ret
xor
data16
jno
dec
dec
mov
int
jmp
sub
push
leave
push
js
scas
mov
das
movsb
xchg
push
cmpsb
jae
xor
mov
pusha
lcall
mov
out
mov
or
xor
out
arpl
sub
js
in
mov
adc
jns
loope
cmp
adc
cmc
or
cmp
imul
mov
cmp
lea
lret
sbb
dec
xchg
dec
in
ret
lods
ljmp
inc
out
insl
mov
jnp
lds
cltd
pop
roll
dec
cltd
out
aaa
adcl
in
jecxz
jecxz
pop
sbb
pop
cmp
xchg
mov
adc
push
popa
dec
insb
mov
sbb
mov
cmp
outsl
repnz
dec
arpl
inc
xchg
cmp
dec
stos
and
push
push
test
and
xchg
clc
push
cmp
xchg
cltd
in
and
inc
outsb
rorl
popf
enter
ss
inc
iret
inc
mov
aas
jno
outsl
icebp
adc
mov
or
fcoml
pop
xor
cmp
pop
mov
decl
fisttpll
int3
mov
clc
mov
fstl
and
sbb
mov
int
leave
add
push
adc
and
sub
mov
mov
xchg
sbb
and
adc
dec
not
orb
jns
arpl
and
sub
iret
and
adc
shl
xlat
orb
sahf
pop
gs
adc
jno
mov
aam
js
mov
test
add
inc
or
stos
dec
cmpsl
mov
ja
jl
mov
mov
or
xchg
adc
rorb
popf
mov
loop
dec
mov
movzwl
pop
repnz
sub
bound
fucomp
imul
xor
ret
lcall
push
push
xchg
pop
jmp
fnstenv
mov
filds
aam
ret
jg
push
lock
pop
ret
dec
aad
nop
call
adc
test
sarl
xchg
es
xorl
aaa
adc
sub
dec
push
cld
inc
mov
mov
daa
dec
or
ljmp
clc
movsb
mov
imul
pop
adc
mov
sub
and
outsb
mov
mov
inc
pop
pop
loope
out
enter
adc
fimull
fldlg2
in
jl
sbb
adc
fbstp
inc
xchg
inc
nop
rcrb
sub
sahf
test
icebp
jg
adcl
jl
mov
push
stc
push
icebp
jecxz
mov
pop
dec
mov
insl
es
or
popf
shll
loope
ljmp
xor
shll
mov
rcll
xchg
inc
jb
leave
adc
push
jne
adc
jg
lds
push
movsb
or
push
pop
std
loope
loopne
dec
fnsave
mov
enter
ret
jo
sub
push
mov
lahf
pop
cmp
mov
pop
add
push
cli
sub
and
or
sub
adc
scas
fisubrs
or
imul
adc
jb
enter
scas
push
xchg
rorl
inc
je
fprem1
pushf
std
stos
lods
leave
stc
pop
fidivs
and
inc
call
push
addr16
mov
sar
cmp
pop
test
sti
into
into
or
test
ret
jmp
insl
dec
xchg
add
jl
cld
jl
pusha
jle
mov
pop
out
cwtl
lret
add
sub
push
pop
lods
pop
xchg
push
mov
or
pop
dec
sti
sbb
pop
inc
xchg
lock
mov
insl
adc
or
mov
pop
xchg
push
lock
and
movsl
adc
inc
aas
xorb
add
cld
das
sarl
js
push
jg
insb
sub
rcl
push
data16
rcll
imul
xor
imul
mov
pop
loop
sub
sbb
mov
jg
divb
or
push
icebp
sub
stos
aas
lods
in
outsb
mov
por
xchg
aaa
push
pusha
ret
cmpb
fdivs
jne
lahf
loop
or
rol
xchg
pop
shll
inc
movsl
xchg
xchg
mov
jbe
mov
push
mov
scas
or
push
fwait
mov
jmp
pop
lret
addr16
add
pusha
aaa
dec
xacquire
fmuls
imul
gs
icebp
std
mov
mov
stos
lods
push
sub
push
mov
mov
das
mov
int
ja,pt
popf
pop
movsb
jb
mov
lods
mov
mov
les
cld
mov
insl
fadd
cmp
xor
or
out
mov
lret
mov
mov
out
call
lahf
rcrb
add
or
cmovbe
inc
rclb
or
js
rorl
test
push
inc
adc
inc
arpl
out
cs
jmp
lahf
jbe
sub
bound
shrb
xlat
dec
aad
dec
dec
loope
pusha
pop
mov
ljmp
orb
or
fmulp
ds
jl
add
leave
lock
insb
jl
cmpsl
pop
loope
ret
fisttps
jp
loop
popf
ja
lock
xor
and
stos
push
dec
prefetchnta
mov
out
arpl
arpl
in
push
and
sbb
mov
lods
sti
nop
icebp
or
mov
out
iret
mov
mov
xor
mov
icebp
movsl
pop
hlt
xor
insb
data16
std
hlt
fxch
dec
mov
cs
daa
loopne
aam
hlt
popf
xor
mov
lahf
push
psrlq
cld
sarb
xlat
xlat
leave
jl
loop
dec
fmull
pop
mov
aam
and
jecxz
imul
les
push
inc
loop
cmc
movsb
adc
pop
cmp
mov
jp
add
loope
rcr
dec
xchg
push
icebp
xchg
ds
subl
fadds
mov
outsb
jp
cmp
xor
out
mov
cltd
jmp
sub
mov
cmc
pop
push
pop
inc
mov
add
add
sbb
push
push
sbb
mov
mov
scas
fwait
sub
es
and
scas
push
add
icebp
jmp
mov
mov
and
icebp
iret
ret
lock
cltd
lret
aad
fsubs
push
out
jns
jnp
stc
out
icebp
stos
push
pop
fimuls
lahf
in
mov
lods
mov
aas
bound
gs
mov
lock
jg
xchg
adc
lret
incb
mov
jno
lcall
fbld
bound
shrb
sarb
pop
pop
popa
push
fidivrl
fisubl
mov
or
inc
je
sbb
aaa
jge
pusha
mov
shrb
cmpsl
sub
inc
scas
pop
cltd
addr16
inc
xor
push
pop
sbb
dec
xor
stc
or
inc
xchg
mov
jb
int
cmp
xchg
pop
jbe
inc
lcall
jnp
imul
sti
push
out
dec
out
and
mov
mov
push
mov
push
stos
pop
add
dec
int3
dec
fwait
mov
adc
stos
sbb
cmp
jmp
fadd
lods
jecxz
sub
xchg
xchg
rol
lock
xchg
fwait
ret
xor
sbb
stos
push
push
xchg
xor
sbb
les
xor
movsb
das
sbb
fs
sub
adc
js
lods
pop
es
sub
sarl
mov
dec
xchg
or
shrb
lahf
fidivrl
xor
inc
lock
xor
pushf
pop
sbb
lahf
je
jne
inc
call
pop
cwtl
cwtl
xor
xor
mov
aam
jae
jbe
push
mov
push
fs
fsubl
clc
stc
xchg
add
cltd
mov
and
xor
ret
aam
cmp
xchg
or
pop
lret
rcr
lahf
sbb
xchg
xor
les
or
inc
test
jae
mov
push
pushf
shlb
and
xchg
push
jbe
xchg
mov
xchg
sub
ds
pop
push
mov
addr16
pop
dec
add
push
js
and
xor
mov
mov
pop
stc
or
xchg
mov
mov
jb
scas
and
add
pop
das
adc
loop
xor
xchg
rol
mov
fcmovb
push
aaa
imul
aaa
lods
xchg
test
mov
sbb
ficoml
sub
mov
mov
sbb
sbb
or
aam
shlb
cld
xor
dec
push
sbb
push
or
pop
js
ja
repz
adc
bound
inc
pop
pushf
sub
movsb
les
nop
les
mov
sbb
mov
sarl
fcmovnb
xor
pop
jno
push
addl
dec
push
push
mov
pop
jnp
enter
push
pop
mov
cli
cmp
mov
lahf
push
outsl
jp
out
xor
mov
lret
lock
push
lods
adc
jmp
pop
cli
push
pop
ss
mov
lahf
sub
xor
jns
sbb
lret
clc
mov
push
xor
mov
repz
mov
adcl
or
repz
mov
rolb
and
popf
imul
cmpb
mov
out
jge
aas
jle
sub
call
inc
sbb
loope
ret
xor
imul
test
jge,pt
xor
imul
mov
jo
aad
imul
scas
inc
jns
out
sub
xor
cmp
mov
icebp
jno
mov
icebp
sub
loopne
ds
js
adc
cli
cmp
shrb
sti
fisttpl
sbb
lret
test
xlat
je
dec
lock
sarb
int3
mov
loope
cmp
sub
push
cmp
lcall
out
adc
inc
and
mov
das
in
ja
incb
push
or
xor
push
push
and
jmp
cmp
js
cmp
lahf
and
jle
aam
cmpsb
popf
ret
pop
or
cmp
sub
mov
xor
outsb
sub
fs
cmp
popf
or
or
aad
repnz
int
sub
push
orb
pop
shl
pop
js
or
gs
aad
xchg
shl
outsb
mov
mulb
xlat
ds
stc
dec
push
lods
pop
int
add
cmp
mov
add
xchg
into
inc
add
push
cmp
and
clc
push
or
mov
cmp
ss
stos
inc
stos
pop
iret
jbe
out
add
dec
jmp
mov
and
imul
lret
push
shll
int
mov
fisubs
int
lcall
stos
mov
lahf
data16
or
std
dec
or
pop
gs
test
pop
add
mov
lret
repz
rorb
daa
loop
fistps
popa
jae
cmpl
push
push
push
repz
jmp
sahf
push
mov
or
dec
stos
in
jne
andb
and
jno
movsl
push
leave
adc
sarb
jne
mov
xor
and
add
jnp
adc
cwtl
xor
ja
dec
mov
cmpl
dec
jnp
sub
iret
fs
mov
mov
rorl
or
push
sub
mov
and
mov
push
movsl
imul
pop
je
outsl
hlt
je
sub
stos
adc
mov
mov
fsub
gs
mov
in
jne
call
ficoml
pop
test
leave
xchg
and
loopne
xchg
dec
or
in
lret
popa
push
loopne
imul
adc
push
ret
int3
mov
cwtl
bound
and
adc
dec
sahf
cmp
cs
mov
loop
push
call
decl
sub
or
mov
data16
imul
inc
mov
pop
sbb
repz
iret
jb
lods
mov
subl
or
neg
add
sbb
loope
push
cmp
push
arpl
add
mov
test
iret
fists
ljmp
enter
jl,pn
add
hlt
xchg
mov
enter
subl
test
lock
pop
dec
mov
stc
ret
or
inc
pushf
mov
insl
jne
xchg
jge
jb
in
xor
sub
push
mov
xlat
push
jmp
or
inc
adc
mov
dec
push
inc
pop
cmc
xorb
inc
pop
addr16
sarl
scas
pop
jmp
movsl
scas
in
std
fs
mov
sub
push
mov
mov
ds
filds
inc
mov
inc
mov
movsl
mov
dec
je
leave
push
inc
push
aam
and
adc
lock
nop
jmp
mov
sbbb
xchg
cmp
bnd
and
rorb
cld
in
cmp
lds
stos
mov
out
jmp
add
bound
aas
mov
scas
cmpb
ja
lea
pop
cmc
mov
jno
or
dec
cltd
and
push
adc
stos
fsubr
push
imul
je
pop
ljmp
push
fadd
mov
xor
add
pop
imulb
je
mov
pop
mov
push
xor
and
mov
cmp
lea
mov
cmp
mov
aad
or
scas
sbb
call
sbb
ja
iret
stos
mov
xchg
add
sub
cld
or
xchg
push
xor
push
and
dec
cmp
pusha
push
outsl
xlat
nop
add
add
inc
push
inc
add
movsl
mov
cmp
jnp
pop
jecxz
imul
push
inc
les
sbb
mov
cmp
mov
fs
rcrb
mov
inc
dec
xchg
and
ret
sbb
mov
das
mov
add
adc
lcall
push
insl
xor
pop
clc
daa
mov
push
cli
mov
jns
xchg
and
mov
fstps
daa
repnz
xchg
jb
jo
test
dec
aam
int
jno
ja
adc
pop
add
repz
mov
dec
or
out
cmc
dec
jp
and
cltd
xor
pusha
xor
insl
mov
leave
sub
xchg
aad
dec
int3
pop
stc
add
push
inc
ret
sti
mov
fwait
xchg
jns
ja
jno
xor
mov
jecxz
fidivrs
xchg
push
add
cmpsb
imul
add
mov
push
aas
pusha
and
dec
push
stos
jmp
xchg
imul
out
lcall
inc
scas
aad
add
dec
xchg
test
xlat
out
gs
or
pop
les
fisubrl
scas
mov
push
das
sub
adcl
mov
ret
std
imul
out
cli
scas
out
out
loope
sbb
and
adc
ljmp
les
mov
xchg
cmp
adc
rol
xor
les
mov
cmp
fbstp
cmpsl
sbb
mov
out
leave
and
aaa
cld
test
icebp
es
or
push
in
scas
mov
sub
sub
xchg
gs
mov
stos
mov
arpl
add
jl
jg
jne
adc
push
mov
dec
adc
enter
xchg
jb
push
pop
or
imul
popa
sbb
imul
daa
ljmp
push
mov
mov
stos
jae
aas
sahf
aad
push
cwtl
mov
or
lods
test
xor
xor
lcall
shll
dec
fnstsw
pop
repz
mov
sahf
push
jae
pop
movsb
cs
push
xor
fsubrp
in
cltd
out
jecxz
pop
cmp
pop
int3
and
in
pop
or
pop
jno
xchg
ret
pop
fsubrs
ret
jp
mov
out
inc
jnp
and
xchg
popl
sbb
lret
dec
dec
loop
into
and
es
xor
lock
mov
nop
or
fimull
mov
xchg
pop
mov
imul
cld
fsubrp
ret
sbb
outsl
jmp
mov
jbe
jg
mov
pop
dec
cld
xchg
mov
incl
aad
mov
mov
cltd
pop
lods
jbe
inc
mov
add
aas
cmpsl
pop
repz
jbe
movsl
aam
fcom
sub
inc
pusha
push
cmpsb
in
aaa
sub
lock
push
pop
adc
push
xchg
ds
xchg
js
popf
mov
cli
or
ja
add
ss
test
sti
imul
movaps
sub
repnz
adc
cwtl
int3
and
and
les
mov
inc
xchg
push
or
dec
stc
or
cmc
out
push
jno
je
and
add
aaa
addr16
packssdw
xor
fs
jns
ljmp
push
lds
jns
shrb
xchg
add
adcl
jne
int3
xor
hlt
out
aam
mov
sub
mov
stos
add
jbe
push
sbb
repnz
cwtl
ja
push
push
adc
push
pop
jg
loop
jae
add
xchg
iret
push
js
xchg
or
sbb
hlt
cltd
cltd
or
ja
testb
xlat
jmp
fadds
jg
sarb
pop
mov
adc
mov
inc
jecxz
jecxz
movsb
test
in
jge
shll
xor
push
sarb
lret
mov
jp
repz
stos
bound
js
outsl
lret
sub
sti
mov
or
leave
std
iret
cmp
cmc
jg
mov
pop
or
inc
test
xchg
or
roll
loop
stc
adc
dec
cld
gs
push
in
add
repz
push
mov
push
mov
push
std
inc
lods
out
pop
int
sub
adcl
push
push
push
pop
add
mov
cmp
adc
cmp
mov
push
xor
jbe
mov
aad
jge
dec
ja
pop
pop
mov
or
cmp
nop
fwait
mov
test
and
xchg
mov
cmp
gs
testl
movsb
jb
lahf
ret
pusha
jecxz
imul
xchg
lcall
or
pop
in
in
pop
cltd
lahf
mov
negb
or
xlat
sub
push
imul
out
xorb
cmc
movb
cmp
ja
or
and
pop
outsl
aas
add
sub
dec
insb
ja
dec
stos
xchg
aaa
das
stos
jmp
xchg
jl
and
pop
xchg
ss
jmp
inc
insb
std
sarb
out
and
cli
push
imul
push
inc
mov
cwtl
jno
jp
inc
pop
jnp
push
into
ja
cwtl
jmp
ds
mov
inc
push
jb
sbb
mov
inc
cmc
lret
pop
aam
mov
mov
mov
sbb
xorb
divb
pop
call
jo
mov
ret
popa
xor
lds
dec
mov
repnz
nop
scas
mov
std
fiadds
sbb
test
sbb
data16
aad
int3
jl
push
ja
xchg
loope
pop
jns
pop
jbe
div
mov
xlat
push
outsb
int3
dec
sahf
dec
sub
adc
arpl
dec
fsubrs
cmpsl
les
call
xor
dec
ret
jae
gs
xchg
jbe
cltd
push
mov
pop
stc
or
pop
jecxz
push
dec
cld
or
jmp
or
scas
imul
jno
in
add
lret
cmp
add
push
movsb
jbe
arpl
push
sub
sahf
pop
mov
enter
and
add
int
inc
gs
and
test
pop
or
dec
xchg
mov
mov
fldcw
imul
push
mov
ds
sub
push
enter
mov
xchg
sbb
addr16
pop
or
cmp
inc
pop
push
cwtl
fisubrs
shrb
or
loop
pop
lret
xorl
or
adc
push
aaa
add
imul
pop
mov
iret
ja
adc
cmp
je
insl
and
inc
stos
scas
and
add
mov
outsl
mov
psubsb
fstps
push
xchg
ret
jmp
ljmp
ja
mov
out
std
lcall
sahf
xor
daa
les
movsb
adc
or
pop
xchg
negl
test
push
jnp
hlt
xchg
xchg
mov
in
mov
movsb
and
jo
push
lcall
ret
or
gs
xor
in
mov
imul
and
in
inc
or
adcb
arpl
subb
setg
insb
xchg
or
or
das
cwtl
es
sbbb
cmpsl
imul
frstor
std
out
push
stc
imul
pushf
xor
add
enter
insl
fndisi(8087
add
jge
xor
and
aaa
movsb
xchg
jns
jp
roll
ds
adc
shlb
repnz
popa
push
push
mov
and
inc
jne
adc
mov
push
adc
popf
jg
dec
aas
andl
data16
aaa
in
pop
or
xchg
arpl
sbb
cmp
popa
loopne
arpl
jb
lods
dec
icebp
hlt
mov
rorl
and
mov
je
ret
in
shll
aaa
test
call
insl
mov
sarl
cmp
adc
dec
sub
push
mov
mov
daa
adc
jnp
jno
sub
popa
lea
insl
repz
sub
add
cmpsb
cmp
inc
lcall
in
mov
push
adc
push
sti
mov
fadds
test
jmp
sub
insl
sti
addr16
dec
shl
aaa
mov
lds
outsb
jle
pusha
jne
pop
push
inc
lcall
ficomps
rorb
push
nop
sub
gs
or
dec
xchg
sbb
fisttpl
inc
push
lcall
sbb
jne
in
movsl
lahf
mov
mov
loope
ja
lods
or
xlat
stc
dec
movsb
mov
sub
xor
push
lds
or
idivl
push
xor
out
and
sbb
sbb
arpl
sbb
shll
push
lock
jae
enter
jnp
adc
jne
push
sbbb
pop
stos
mov
dec
and
xchg
xor
inc
mov
bound
fstpl
popa
add
mov
es
repz
or
xorl
ds
int3
pop
and
add
jae
rolb
cmp
insl
popf
js
lret
push
ret
lods
push
or
fstps
jge
mov
or
xchg
xchg
scas
unpcklps
decb
fcmovbe
fucomp
clc
pop
test
ret
lret
repz
imul
mov
and
dec
pop
sbb
mov
jnp
inc
mov
loopne
ret
inc
push
jp
xchg
es
dec
mov
sbb
mov
pop
mov
pop
jge
and
or
in
ss
popa
testb
cmp
inc
popf
mov
inc
subl
pop
jmp
sti
jecxz
sub
dec
mov
sub
or
push
inc
push
stos
movq
xchg
ret
rcr
sar
andps
lcall
sbb
pop
cwtl
mov
sbb
sti
popf
mov
cli
sub
push
or
and
mov
inc
je
das
test
icebp
test
xor
sub
cmpsb
and
pop
xor
mov
pop
lea
dec
ds
sub
cmp
dec
adc
scas
addb
and
pop
lock
dec
push
in
rcll
ror
scas
or
xchg
xchg
or
add
test
into
inc
dec
iret
xchg
inc
icebp
or
mov
adc
insb
cld
xchg
loope
pop
lret
lret
push
addr16
xchg
push
stos
add
cmpsb
and
bound
in
adc
mov
lret
popa
test
cmp
mov
shr
sub
fdivp
pop
dec
push
rol
aas
fs
lods
hlt
ss
daa
das
pop
push
jle
xor
mulb
jg
push
jg
pop
pmullw
cli
leave
js
shrl
mov
fwait
ss
shr
lods
mov
roll
push
or
nop
lahf
imul
fldenv
imul
sbb
cwtl
into
pop
sbb
stos
push
adc
inc
mov
stos
mov
push
lret
cmpsl
sarb
scas
jno
or
xchg
daa
jo
mov
js
xchg
sbb
enter
lea
xor
xor
xor
dec
in
push
mov
mov
je
sub
xor
or
data16
xchg
mov
mov
in
mov
repnz
mov
xchg
jbe
ja
mov
sub
test
cmp
jnp
adc
and
stc
inc
jb
pop
sub
inc
jb
rorb
xlat
jo
or
cmp
shll
ret
xchg
dec
mov
adc
or
mov
data16
insl
mov
cltd
adc
inc
aaa
bound
mov
jns
inc
roll
cmp
iret
xchg
stc
cld
fbld
jnp
add
pop
pop
inc
inc
movsl
ficompl
std
mov
fcomip
pop
fcompl
hlt
test
push
sbb
dec
aam
mov
dec
ret
ret
xor
pop
mov
sbb
push
sbb
ljmp
or
pusha
pop
jg
cmpl
inc
or
loop,pt
insl
and
sbb
int
mov
sbb
mov
inc
fidivs
mov
sub
sbb
mov
ret
aas
sub
mov
mov
sahf
pushf
push
lcall
dec
mov
test
enter
stos
movsb
or
inc
sbb
mov
mov
mov
mov
and
and
std
popf
xor
mov
sbb
cmc
sub
loop
sbb
add
stc
lea
cmp
or
add
mov
ss
cmpsl
leave
xor
jnp
mov
insl
inc
dec
movsl
and
cld
je
cmpsl
cs
scas
and
jne
push
daa
andb
push
pop
sub
insb
push
push
dec
lret
nop
xor
bound
pop
ljmp
lcall
cmp
xchg
lods
sbb
scas
rclb
daa
sub
leave
fstcw
clc
repnz
sbb
and
xor
loop
daa
gs
push
mov
clc
lock
adc
dec
test
hlt
sub
sahf
sub
mov
pop
adc
lret
andb
inc
test
cmpsb
popf
hlt
das
adc
mov
push
sarl
mov
mov
jl
and
pop
inc
js
xchg
out
fcmovnu
in
and
or
lcall
mov
jecxz
mov
jo
outsb
xor
or
movsl
nop
mov
test
out
stos
jae
ljmp
rcrl
into
adc
pop
cld
dec
lds
bound
rorb
sbb
sti
std
mov
jbe
sti
lea
cs
xchg
jb
push
mov
sub
jns
pop
and
jl
add
jo
lods
jo
fidivrl
repz
in
loopne
rcr
les
pop
add
inc
int3
inc
or
incl
cmpsb
xchg
mov
test
cmpsl
lret
xor
int3
or
xchg
aaa
adc
mov
adc
mov
stos
cmpl
cmp
into
sub
push
dec
cmpsb
mov
add
movsl
jo
ja
lret
ss
inc
jae
in
xlat
jae
adc
jns
cmp
ljmp
push
sub
xchg
mov
orb
and
aas
dec
lea
mov
pop
mov
adc
lahf
cli
popf
adc
xlat
inc
push
xor
xchg
mov
mov
mov
iret
push
jne
and
jns
in
xchg
cmpsb
cmpsb
mov
jno
jae
fidivs
loopne
fistpll
aas
fdivr
aaa
stc
aas
pop
jmp
push
cwtl
adc
dec
mov
cmpsb
fdivr
cmp
jg
nop
daa
rcrl
lds
xchg
loope
add
ds
or
sbb
mov
mov
sbbl
jecxz
adc
xor
out
outsb
cmp
outsb
aas
jmp
cmp
popa
add
push
cmp
lcall
inc
add
in
add
xlat
pop
insb
push
inc
ja
xor
mov
and
sub
sub
ror
cmp
int3
jne
adc
xchg
pop
data16
loopne
push
iret
add
out
push
mov
or
or
test
and
mov
pop
fninit
inc
sub
pop
pop
lcall
sub
or
movsl
sbb
add
shl
xchg
stc
inc
add
std
pop
jb
fmul
sub
test
dec
mov
inc
cmc
xor
inc
xchg
popf
pop
xor
xchg
out
or
mov
sahf
stos
out
cli
add
das
jg,pn
mov
push
pop
or
fdivrs
stc
push
iret
mov
xchg
mov
cltd
pop
fmuls
lahf
cmp
clc
push
rorb
js
ja
mov
leave
mov
jae
enter
mov
shl
dec
repnz
vpunpcklwd
push
rorl
pop
dec
movsb
or
mov
mov
pop
dec
jmp
pop
inc
lahf
or
frstor
data16
movsb
xchg
jle
daa
xchg
rorl
or
push
xor
xchg
pop
pop
lods
adc
mov
out
push
mov
sub
das
and
imul
cmp
push
test
fildll
insl
mov
lcall
jl
mov
es
jb
mov
fcompp
xor
enter
or
jb
leave
js
push
mov
jns
push
xchg
loop
pop
sub
icebp
xchg
insl
dec
jmp
leave
cs
lods
in
in
mov
adcl
or
movsl
out
stos
xchg
ret
nop
loopne
adc
lret
cmpsb
fidivs
pop
fnsave
cmp
and
lea
cmpsl
iret
adc
lds
cmp
fcompl
and
scas
push
sbb
jbe
push
cltd
dec
arpl
popf
aam
xchg
mov
popa
and
sarb
loopne
mov
icebp
hlt
imul
xor
mov
cmp
dec
rolb
ss
adc
testb
pop
and
inc
xchg
test
mov
pop
adc
push
scas
daa
mov
mov
daa
xchg
fimull
out
stc
scas
lcall
insb
hlt
pop
or
insb
sti
mov
scas
hlt
arpl
push
test
pop
adc
cs
xchg
lcall
std
or
andb
fs
insl
icebp
jo
icebp
jbe
aam
aad
in
sub
jb
cs
add
pop
push
sbb
cmp
xchg
ss
lahf
mov
stos
add
cmovns
js
pop
lds
seta
pushf
jae
adc
or
das
jmp
xor
test
rcll
lock
push
ja
mov
and
dec
inc
clc
lods
jmp
test
scas
fcoml
fdivrs
aas
mov
rolb
jb
mov
inc
rolb
out
int
mov
dec
cs
mov
outsl
out
mov
cmp
inc
aas
out
das
lcall
mov
mov
ffreep
and
xchg
leave
pop
mov
les
leave
pop
push
xor
sbb
in
movl
jl
stc
add
int3
xorl
adc
test
jl
in
lahf
cltd
and
xchg
out
scas
adc
gs
pop
xchg
mov
and
xlat
xchg
les
mov
xor
dec
aaa
imul
insl
dec
cmp
lcall
pop
popa
in
dec
lds
jmp
cld
cmc
mov
pop
xchg
mov
mov
sbb
aaa
addr16
push
imul
sti
dec
or
mov
dec
push
adc
dec
mov
lods
das
subl
imul
jo
jge
push
or
js
test
fcomp
stos
in
pop
enter
cmp
repnz
inc
nopl
cmpb
dec
int
mov
and
cmp
push
into
push
es
fimull
pop
scas
out
and
mov
and
mov
bound
add
stc
adc
aaa
sub
dec
mov
mov
cli
mov
cmc
repz
fmull
sub
cmpsl
call
pop
and
insb
pop
out
push
push
push
mov
insb
mov
mull
mov
and
dec
jecxz
lcall
lea
testl
bswap
fistpll
mov
jg
add
mov
int3
dec
test
or
xor
ss
loope
push
sub
clc
out
adc
jb
fsubp
mov
push
aas
rcrl
jmp
test
js
fnstenv
pop
aas
popa
lcall
adc
lods
pop
push
sbb
lret
xor
sub
mov
push
movsl
or
mov
xor
mov
mov
push
lcall
mov
sub
push
arpl
dec
jmp
inc
xlat
jmp
sub
cmp
shl
inc
jmp
pop
and
dec
jg
mov
push
cmp
and
sbbl
adc
jb
or
in
or
jae
xchg
ljmp
call
fs
xor
adc
cli
adc
scas
jb
add
into
shl
cmp
push
ret
mov
call
loope
mov
add
leave
mov
mov
mov
ret
push
stc
test
cld
out
mov
push
adc
and
mov
repnz
sbb
xchg
mov
lds
sarb
insl
jb
pop
mov
xor
adc
and
out
sbb
fstl
xchg
into
xchg
subb
aam
rep
popa
addr16
ss
sahf
xor
in
mov
push
add
mov
leave
jg
jp
mov
aad
mov
out
roll
or
inc
adc
cmp
shll
iret
shlb
fld
test
loope
in
mov
sub
outsl
fwait
or
dec
xlat
jae
rcr
add
xchg
ds
scas
inc
xchg
lds
inc
cmp
fcoms
xor
jp
inc
ret
sbb
shrb
inc
addl
sbb
sbb
xchg
insl
outsb
cmpsb
dec
xchg
cmp
cmpsl
sbb
cmp
popf
push
push
xchg
movsl
out
mov
sahf
xlat
inc
inc
ret
in
testb
enter
push
mov
or
stc
dec
sub
or
and
sub
jnp
xor
sbb
rol
inc
sub
and
push
inc
sbb
scas
pop
lock
push
lahf
lods
mov
dec
mov
loopne
pusha
clc
push
mov
dec
xor
mov
push
fiaddl
add
in
pop
loope
movsb
jae
cmp
cltd
fldenv
insl
and
pop
pop
cli
movsl
fnstenv
jnp
sbb
hlt
adc
cmp
xlat
mov
lahf
dec
or
mov
adc
adc
pusha
leave
cmp
xor
aas
mov
push
mov
push
mov
xchg
sub
repz
cwtl
loop
fidivs
insb
inc
out
push
xchg
enter
dec
inc
popf
imul
and
outsb
push
sub
fsubs
cmp
stc
xchg
lds
addr16
mov
je
aam
cmpsl
arpl
inc
push
cmp
inc
lret
iret
lahf
jge
mov
hlt
imul
jp
cltd
add
imul
pop
jne
or
or
aad
js
std
not
mov
and
xchg
es
out
add
jecxz
mov
test
xchg
push
or
sub
mov
iret
mov
jbe
imul
mov
test
stos
mov
mov
xor
mov
xchg
mov
mov
test
aam
lock
fwait
aaa
push
mov
fldln2
and
aad
and
scas
ss
jmp
jmp
add
jae
xchg
add
push
push
xor
xchg
stc
arpl
mov
xor
jecxz
popa
clc
jno
xor
jmp
mov
lcall
sbb
loope
enter
mov
xchg
stos
data16
pop
nop
add
xchg
add
jle
sub
fidivs
pop
push
push
loope
fwait
insb
int3
adc
inc
lahf
pusha
and
sub
xchg
mov
in
outsl
cmpsl
stos
cmp
nop
dec
push
sub
imul
xchg
rcrb
push
adc
loopne
rorb
xor
jb
arpl
stos
pop
sbb
inc
mov
jmp
jmp
cmp
and
dec
sbb
ret
push
int
mov
push
mov
in
jmp
sbb
mov
mov
scas
mov
cmpsb
inc
maxps
mov
popf
mov
pop
ficoms
push
imul
and
adc
repnz
sbb
pushf
cltd
xchg
insb
dec
jo
int3
ds
data16
in
adcl
stos
cmpsl
sbb
adc
jbe
movsl
mov
xchg
mov
push
jle
push
sub
and
js
fwait
or
mov
test
mov
mov
sub
adc
mov
inc
shl
adc
inc
mov
repnz
jns
xchg
push
xchg
ret
xchg
mov
es
adc
cmpsl
pop
int
add
icebp
inc
push
loopne
ss
leave
adc
xchg
dec
sbb
cmovb
fdivrl
jo
dec
pop
stos
xchg
inc
mov
lret
or
cmpsl
inc
in
jp
mov
or
fcmovu
pop
pushf
pop
sub
sti
cltd
push
jae
inc
inc
dec
mov
sbb
add
out
and
pop
xor
xor
jmp
repnz
rcrb
fidivl
adc
jae
add
push
sarb
push
jg
fcmovnu
lds
int
cmp
fs
mov
push
mov
xor
ror
xor
out
xchg
pop
sbb
out
sbb
pushf
xor
dec
inc
repnz
inc
lea
sub
arpl
mov
or
je
jns
fldcw
jle
mov
sbb
fistl
mov
cmp
inc
in
lahf
leave
mov
fs
fcoms
or
dec
jmp
lahf
fsubl
lock
mov
xchg
pop
jb
mov
gs
xlat
icebp
not
adc
cmp
mov
inc
aam
loopne
and
cld
mov
cmp
mov
std
test
scas
cmc
leave
ret
and
ja
lahf
js
lcall
xchg
cmpsb
shl
je
xchg
cmp
xchg
outsb
outsb
data16
cli
stos
fs
aam
jb
jmp
das
movsl
pop
cld
cltd
jae
cmp
arpl
sbb
add
xchg
add
jb
inc
push
push
jb
jg
cmc
jo
xor
cs
mov
repnz
jge
fld1
shlb
fidivl
add
mov
xor
mov
dec
mov
xchg
xchg
mov
mov
les
push
sub
adc
add
movsl
push
dec
stos
mov
aam
cltd
inc
mov
or
aas
xor
adc
push
dec
push
fsin
and
imul
arpl
xor
divl
sti
leave
and
bt
sbb
cld
cmpsl
push
cmc
out
fcoms
jle
mov
push
aas
cmp
ret
sub
jp
movsl
pop
add
scas
fbld
test
sub
rdmsr
ret
repz
add
push
movsb
inc
test
jne
lret
cmp
into
dec
aas
test
sub
pop
fnstcw
mov
in
jae
cli
sarl
and
popa
pushf
sbb
andl
lcall
pop
push
imul
pop
nop
jmp
imul
sbb
sub
or
sti
mov
mov
dec
adc
xchg
mov
fs
xchg
fisttps
push
sbb
lcall
inc
dec
pop
inc
popf
xlat
adc
gs
sbb
jl
out
add
jp
xor
cmp
fsts
mov
mov
imul
and
les
or
into
std
std
lock
jb
jb
jae
or
out
inc
xchg
cmc
add
push
mov
call
lret
inc
imulb
test
ret
rorl
mov
mov
xor
jp
add
outsb
mov
sarb
rcrb
adc
push
pop
outsl
ljmp
pop
jo
pop
sbb
or
xlat
arpl
add
cmc
sbb
jmp
pop
nop
cmp
mov
pop
push
dec
jns
mov
btr
loop
cmpsl
mov
repz
cltd
push
mov
pop
ficoms
ss
mov
jle
cmp
and
xor
cmp
fistpll
xchg
jbe
lods
daa
xchg
sub
out
dec
and
mov
dec
or
lahf
out
push
pop
out
fwait
xor
sub
je
ja
pop
jb
stc
xchg
sbb
pop
and
or
sub
outsl
lahf
pop
pop
add
int3
pusha
jnp
int3
xchg
jmp
repz
loop
ret
and
lods
ret
or
int3
mov
ret
daa
je
add
aad
fsts
andl
roll
or
push
test
cwtl
adc
mov
mov
add
out
ljmp
fstps
ds
popa
in
mov
mov
jmp
xchg
xchg
cmp
fwait
mov
and
stos
out
gs
jmp
decl
fists
mov
pop
cwtl
ds
dec
rcrl
cmp
arpl
lcall
shlb
mov
rclb
shrl
fisttps
pop
sub
adc
mov
ret
in
or
pop
mov
add
out
sub
pop
inc
sub
xor
outsl
xchg
pop
jnp
mov
cwtl
pop
movb
push
js
sub
lret
and
rcl
jmp
add
shrl
cmpsb
loopne
push
sbb
push
neg
jae
lret
cmp
mov
lahf
in
dec
std
or
mov
cmp
sub
out
les
jb
sbb
mov
cmc
add
cmp
sub
lahf
fnstcw
add
imul
test
jnp
cs
je
push
mov
adc
std
dec
mov
std
cli
xchg
adc
adcl
and
mov
pop
loopne
xchg
fnstenv
scas
das
mov
bound
sysexit
fs
dec
fdivl
adc
mov
jge
push
sbb
popa
lahf
fstpt
fptan
das
mov
loopne
dec
mov
mov
xlat
insl
jg
jge
lock
ret
sahf
shll
inc
outsb
pop
in
mov
jmpw
cwtl
xchg
int
scas
pusha
xchg
cmpb
ds
cld
pop
xchg
xlat
fcom
or
and
push
dec
cmp
ljmp
xlat
in
shlb
js
mov
dec
mov
cwtl
jno
jp
xor
pop
and
fbld
xlat
sbb
dec
sbb
pop
pusha
and
mov
xchg
push
orb
xor
mov
lods
cmp
pop
inc
cmp
jle
add
sbb
in
dec
inc
int
andb
mov
lods
cmp
sub
and
jns
push
push
scas
ret
adc
addr16
mov
push
and
aam
fildl
dec
decl
mov
fstl
daa
enter
push
cwtl
cmp
and
push
push
inc
mov
mov
stos
xor
imul
push
movsl
outsl
test
aam
je
jae
push
inc
mov
add
and
pop
adc
push
cmovne
mov
and
or
dec
mov
call
add
mov
test
pusha
lods
sbb
stos
push
cmp
sub
out
repz
repz
ljmp
pop
dec
cmc
pop
mov
cmpl
add
inc
mov
lods
push
inc
push
jns
mov
es
shlb
adc
xchg
je
repz
xchg
push
jp
fcoms
fucomi
dec
addr16
cld
fcmovne
addl
xchg
adc
jo
jne
movsl
fadd
dec
lock
jns
repz
addr16
pop
mov
addl
int
mov
cmpsl
loopne
mov
ss
adc
imulb
and
cmc
inc
cwtl
pop
cmp
lcall
int
mov
sub
jns
inc
ljmp
xor
pushf
add
sar
adc
sub
enter
jle
rcll
and
mov
fwait
sbb
mov
sbb
mov
push
push
inc
adc
xor
jbe
jmp
xchg
mov
push
cs
xchg
fs
out
fldt
jl
cmp
call
outsb
sahf
push
or
sbb
pop
mov
test
mov
lahf
jae
repnz
jne
pusha
in
push
icebp
mov
int3
add
or
jecxz
subb
inc
std
les
lret
sahf
push
dec
or
push
sub
inc
jno
les
and
jg
xchg
js
mov
scas
popf
movsl
add
cmp
push
inc
gs
stos
popf
push
fsub
movsb
push
mov
mov
xor
xor
adc
js
push
sbb
adc
jp
bsf
or
loopne
out
jg
xchg
cmp
xor
sti
add
xchg
mov
dec
test
aas
xchg
push
xor
xchg
in
mov
mov
jl
in
mov
in
jmp
mov
sbb
or
ss
mov
sbbl
sub
xchg
mov
pop
ds
mov
enter
fcomi
mov
push
or
inc
or
xchg
sbb
int3
push
and
loop
fisttpll
leave
mov
aaa
add
mov
int3
imul
add
xor
imul
jp
xchg
test
js
mov
out
and
xchg
xchg
mov
cmp
push
subl
rcrb
out
stos
pop
pop
fcomps
ljmp
jl
ficomps
test
arpl
test
push
scas
cwtl
jmp
loope
inc
xchg
push
adc
cmpsb
xor
jne
and
push
xor
pop
mov
sahf
jle
xchg
lret
push
cli
jae
lods
jns
test
insb
data16
add
push
sbb
fwait
dec
dec
pop
aad
std
sub
inc
adcb
rol
es
enter
sbb
inc
nop
add
iret
pop
nop
adc
pop
stos
subb
sub
test
mov
je
sub
inc
bound
scas
in
xchg
fistpll
xchg
mov
shrl
mov
in
enter
inc
cmpsb
fsubrs
adc
nop
dec
xchg
insb
mov
lret
push
and
mov
std
mov
push
test
lea
data16
sbb
call
in
xchg
xor
je
filds
shl
repz
js
jmp
cmp
lds
pop
jns
mov
lea
scas
insl
jg
xchg
fcmove
cmp
jle
cmpsb
and
sub
mov
mov
push
lea
jbe
jns
adc
push
lret
mov
data16
sub
sahf
xchg
stc
xchg
insb
sub
pop
repnz
mov
and
push
lret
outsb
sarl
sahf
cmova
stos
add
and
movsl
and
pop
stos
fbstp
cli
fstp
adc
jmp
and
add
inc
cmp
pushf
addl
mov
adc
push
pushf
cmp
orl
movsb
xor
xor
mulb
ds
cmp
cmp
sub
pop
push
push
shl
lods
cmp
ljmp
rorl
sbb
jg
in
cld
mov
mov
es
push
das
popf
pop
data16
shrb
fisubrs
pop
sahf
inc
nop
js
lcall
cmc
das
cmp
cwtl
call
mov
lods
imul
outsl
imul
mov
xor
xor
push
or
pop
cltd
pop
xchg
cmp
ljmp
fdivrp
sahf
insl
and
sbb
mov
adc
or
jbe
cmc
sub
or
jb
rcl
repnz
jecxz
or
dec
push
mov
jmp
test
xor
push
sbb
adc
xchg
je
int
int3
cltd
xor
sub
pop
cmc
fbld
push
cmp
out
subl
jno
xchg
fisttpl
cmp
push
imul
icebp
lea
pusha
dec
test
lea
addl
fisttpl
gs
cmp
inc
sub
aad
mov
fnstcw
or
add
xchg
push
mov
aad
push
adc
imul
sbb
xchg
cld
sub
inc
stos
lods
dec
xor
loopne
pop
adc
sub
jmp
or
sbb
add
dec
out
pop
stos
leave
cwtl
and
pop
inc
push
repz
cmp
dec
adc
push
call
aaa
push
cmpsb
fcoms
push
popa
cmp
mov
push
push
pusha
mov
in
movsb
or
daa
sub
sub
mov
xchg
jle
jo
pop
lods
fstl
pop
and
cmp
xor
cmc
inc
inc
ret
adc
nop
out
divl
push
ja
lahf
sub
fadds
add
cmpsl
lods
shlb
xchg
mov
repnz
int3
push
and
test
pop
dec
in
mov
pop
je
out
test
shrl
nop
inc
push
pop
inc
push
hlt
lods
xor
fcompl
leave
jecxz
dec
aad
sub
adc
repz
mov
ja
arpl
bound
stc
jnp
pop
mov
ljmp
and
test
nop
pop
mov
out
sub
sub
test
xor
xchg
dec
mov
pop
fs
xorb
adc
push
icebp
adc
inc
enter
std
outsl
rorl
in
call
mov
mov
roll
fistpl
rolb
cmpsb
fnstsw
hlt
jno
jl
mov
insb
test
xlat
dec
jg
and
and
sub
inc
das
repz
aad
sbb
sub
fnstsw
int
shrb
jne
fbstp
clc
or
lds
in
sbb
jno
inc
inc
mov
add
sub
dec
popf
sub
daa
aaa
sarl
push
je
mov
or
int3
leave
insb
lods
in
mov
mov
adc
mov
pop
outsb
push
jg
dec
cli
fs
fbstp
rol
lock
pop
movsb
push
test
push
xor
inc
lcall
out
jl
sub
lcall
jno
dec
push
cwtl
inc
daa
lret
aad
insl
sti
inc
mov
xlat
push
popa
xchg
or
mov
iret
cmp
push
lahf
stc
mov
bound
and
lea
fcomps
mov
cmpsb
or
mov
mov
jo
inc
jp
and
clc
xor
lret
stos
fbstp
sub
push
xchg
fisttps
aad
and
pop
xor
pop
lods
fistl
mov
push
or
mov
cmp
div
fcoms
sub
fnstsw
pushf
movl
int
dec
rorl
clc
push
icebp
mov
scas
adc
fidivs
mov
ror
stos
ds
jae
sbb
lret
hlt
rorl
clc
and
inc
mov
enter
sub
xchg
inc
inc
lods
jns
insb
add
pop
stos
les
or
sub
pop
xchg
sbb
movsb
je
mov
dec
xchg
int
imull
int3
clc
mov
in
ss
sub
sub
orl
ficomps
sahf
mov
xchg
dec
sbb
arpl
incb
dec
repnz
aad
push
dec
dec
cmpsb
jne
out
movsl
and
mov
push
cmp
cmp
mov
lcall
mov
pop
sub
mov
scas
push
push
sub
sti
push
clc
movsb
clc
fstl
jae
cltd
xchg
mov
mov
push
or
jl
enter
fldenv
mov
incb
lock
fs
mov
out
sub
pop
cmp
cmp
pop
test
int
push
ss
xchg
dec
inc
adc
jg
inc
ljmp
icebp
in
dec
into
push
mov
and
shll
aas
jbe
call
or
mov
cmp
jmp
out
repnz
js
fsub
faddl
or
aam
sbb
jne
int3
dec
outsl
cmp
fstps
cmpsl
test
cmp
push
xorb
mov
outsl
cmpsb
inc
push
outsl
jmp
leave
pop
jbe
or
and
lret
test
inc
pop
in
inc
mov
lods
outsb
jne
js
bound
mov
add
enter
stos
pop
pop
pop
popa
and
mov
loop
addr16
or
into
std
dec
int3
mov
xchg
rcr
xchg
pop
out
mov
cmp
insl
faddl
dec
jl
adc
jno
and
mov
subb
mov
rcr
shlb
xor
add
add
mov
jo
sbb
loopne
in
cmpsl
add
fsubs
mov
incb
loope
inc
out
xchg
mov
in
dec
das
daa
pop
inc
lock
dec
push
jge
sti
mov
movsb
nop
das
ret
mov
insl
stc
jo
ss
mov
aaa
cwtl
sbb
insl
mov
paddsb
flds
adc
push
xchg
xchg
jle
cli
repz
cmp
lret
mov
call
aad
jmp
mov
adc
mov
mov
jl
iret
subl
test
test
clc
movsl
test
adc
add
mov
shll
dec
fcoml
jne
xor
mov
stc
sub
jg
adc
icebp
cld
and
sbb
call
jg
flds
mov
push
fdivl
aaa
fiadds
stos
outsl
mov
mov
jp
jmp
mov
je
mov
int
movl
mov
movsb
jnp
adc
inc
lods
cmp
out
push
in
mov
mov
pop
sbb
jl
stos
test
fstps
fidivl
test
add
mov
movq
mov
jnp
bound
ss
adc
aas
mov
das
movsl
mov
mov
lds
pop
stos
mov
mov
adc
ret
push
push
rcpps
aaa
test
sbb
test
pop
inc
add
stos
mov
xor
mov
xchg
jp
and
fs
adc
lcall
jl
sub
rcr
inc
icebp
inc
mov
add
rorb
dec
xchg
xchg
imul
fstpt
int
shll
fistps
insb
aad
mov
or
dec
test
xor
xchg
jno
mov
add
push
jg
mov
pop
stc
mov
mov
jb
gs
sub
push
int
lret
adcb
jg
jp
ds
popf
jecxz
cmp
dec
adc
mov
daa
dec
inc
mov
jo
mov
pop
imul
add
movsb
cmpsb
jbe
int
add
stc
cmpsb
ss
sbbl
lret
call
jle
cmp
addr16
out
test
pop
cmp
or
and
and
push
mov
ja
xchg
cli
or
xchg
dec
lcall
ljmp
nop
idivb
aaa
insb
jmp
lods
mov
in
adc
repnz
mov
and
fisubl
sub
push
push
sub
aam
les
xchg
pop
pmaddwd
fsubrs
mov
cmpsl
xor
fsubrl
stos
rorb
repnz
pusha
mov
jmp
push
xchg
and
iret
imul
dec
push
push
js
loopne
loopne
or
ss
xchg
daa
mov
rolb
testl
pop
mov
addl
test
jnp
aaa
je
ja
pop
cmc
xor
dec
cmp
mov
or
test
ljmp
sub
and
jnp
jo
push
adc
shrl
fwait
in
sbb
pop
inc
mov
mov
loopne
mov
in
sub
fistpl
dec
push
loopne
mov
bound
lea
xor
inc
rcr
pop
cmp
mov
or
sbb
clc
push
pop
or
xchg
sbb
lock
push
mov
xor
add
mov
call
mov
push
mov
cmp
fidivrl
cs
push
js
fstps
ret
and
aam
and
rcl
in
xchg
outsb
call
out
shlb
jmp
cmc
and
adc
cld
jb
popa
int
lahf
leave
xor
mov
aaa
out
xchg
jne
lds
std
mov
cmp
data16
in
sbb
pusha
adc
jne
movsl
inc
mov
add
cmp
in
cmp
push
stc
cmp
cmpsb
je
je
pop
add
inc
subb
iret
mov
loop
aam
jl
mov
xor
inc
xlat
pop
mov
push
nop
pop
jecxz
test
inc
sbb
push
xor
fiadds
inc
lcall
jle
xor
xor
enter
outsb
xchg
ss
mov
out
sub
imul
mov
test
mov
lods
and
pop
lea
dec
sub
scas
orb
mov
push
jo
int
xor
jne
fmull
inc
push
sbb
insl
jle
imul
rorl
out
dec
std
paddd
ljmp
sub
cmp
cmp
mov
xlat
pop
nop
out
cmp
add
lret
and
jecxz
cmp
dec
inc
stos
xchg
fdivrl
popf
inc
jl
sbb
shlb
cmpl
mov
push
lods
adc
cmpsb
pop
bound
push
mov
ret
sub
jns
and
loope
movsb
jge
xor
mov
jge
mov
jnp
mov
xchg
inc
pop
jge
push
js
daa
and
fists
and
gs
push
mov
pop
jmp
loop
lahf
cmp
cmp
outsb
fbstp
imul
mov
cmc
mov
mov
outsb
daa
and
pop
jae
stos
ret
aaa
scas
xor
push
adc
aad
dec
jmp
stc
sbb
cwtl
mov
fstcw
scas
inc
mov
adc
out
pushf
stos
mov
xchg
push
mov
loope
add
into
pop
mov
test
aad
mov
dec
shrb
and
xchg
pop
sub
jmp
push
mov
sbb
rclb
jp
in
js
addr16
jae
jp
sbb
lahf
xor
addr16
inc
fwait
mov
xor
dec
out
add
sub
mov
inc
imul
lret
out
add
mov
rcrl
out
jbe
and
jns
sub
leave
push
push
lock
imul
movsl
cmpsl
hlt
add
mov
add
ss
sbb
pop
imul
test
ja
add
sub
int3
les
lcall
jno
mov
mov
cmovge
mov
xchg
xchg
daa
sbb
negb
mov
xor
loope
clc
mov
sub
or
into
jge
and
cli
pop
or
mov
cs
gs
test
xchg
shll
or
pop
mov
push
cli
or
lcall
push
push
jo
js
call
lret
mov
mov
subl
imul
arpl
cmp
mov
dec
js
mov
push
pop
es
ljmp
mov
call
xchg
mov
outsb
jne
in
pop
cmp
rolb
push
in
dec
xchg
xor
pop
sub
jle
pop
or
addr16
jne
fcmovne
cmp
adc
cmp
flds
mulb
pop
sbb
test
jge
sbb
sahf
mov
and
aaa
and
repnz
ss
mov
and
loopne
mov
insl
out
or
cmpsl
leave
fdivl
ss
int
movsl
jno
push
mov
daa
dec
inc
aad
mov
testb
lcall
jg
test
or
mov
sub
push
xor
and
rcl
push
ret
rolb
lods
mov
aam
test
or
xchg
movsb
cld
icebp
pop
pop
stc
test
insl
fimull
sub
or
lahf
loop
pop
testl
addr16
and
lcall
lret
mov
stc
mov
loopne
sub
cmp
mov
leave
addr16
mov
call
jg
mov
mov
jns
iret
adc
push
sub
or
inc
push
mov
aas
sbb
es
or
adc
test
cmp
and
outsb
jge
mov
sbb
lret
test
sbb
insb
test
incb
add
xchg
imul
sahf
mov
daa
dec
xor
pop
inc
jg
add
in
pop
outsb
dec
adc
or
dec
cmpsb
aas
jb
jae
jb
inc
push
in
xor
sahf
dec
sti
fwait
add
sub
loope
in
enter
and
mov
psrlw
popa
xchg
pop
xchg
subl
lret
cmp
in
cmpl
ss
push
push
cs
xchg
dec
aaa
mov
and
je
stos
push
mov
pop
jecxz
loop
inc
push
es
push
pslld
adc
fmul
pop
fidivs
repz
int3
sbb
rcpps
mov
imul
test
add
or
mov
xchg
dec
in
pop
call
subb
sub
in
mov
aaa
aad
sub
sub
inc
jg
push
mov
pop
in
sub
jno
pop
jno
jo
lret
imul
push
movsl
jle
lds
pop
or
pop
mov
repz
mov
sub
cmp
sahf
in
rclb
insl
fildll
inc
mov
rclb
mov
lcall
test
push
enter
mov
dec
jno
movsb
iret
fdivl
nop
mov
imul
jecxz
std
es
pop
shrb
jmp
movsb
iret
aaa
and
in
shrl
xchg
jge
pop
or
divl
nop
pop
into
xchg
sti
xor
out
jge
cmp
test
fsubs
insl
mov
pop
repz
imul
inc
popf
das
cmpsl
mov
adc
inc
dec
fnstsw
fstpl
inc
pop
stc
std
dec
enter
xor
push
iret
cwtl
xchg
pop
sbb
jnp
lock
push
xor
push
std
push
mov
ds
mov
add
outsl
pop
jge
sub
stc
nop
sub
jp
ja
cs
and
mov
jg
aas
and
jmp
mov
test
cmp
call
sbb
imull
pop
mov
mov
cmp
sub
ljmp
insl
ds
fwait
mov
mov
add
insb
pop
sbb
loope
xor
inc
mov
xchg
popf
jo
mov
adc
pop
dec
loop
mov
or
shrl
cmp
mov
push
jmp
add
clc
aas
rclb
rcr
cli
push
inc
ficoml
scas
lods
jecxz
mov
mov
js
mov
mov
lahf
out
pop
xchg
cwtl
ja
pop
mov
test
mov
push
out
test
dec
mov
dec
lret
mov
ffree
dec
inc
inc
push
jne
insb
iret
call
ret
push
adc
inc
pop
pop
popf
xchg
aas
xchg
mov
jno
hlt
cmp
fistpl
mov
lea
add
hlt
push
je
add
mov
xchg
adc
aad
cmpsl
ret
jmp
dec
shrl
mov
and
and
and
out
shl
push
jmp
lahf
jbe
and
nop
mov
adc
jle
pop
xchg
outsl
test
nop
into
pop
sub
push
jecxz
aam
and
testl
cli
inc
mov
repnz
lcall
dec
imul
pop
andl
clc
hlt
pop
ljmp
jge
xor
bound
cmpsl
or
jecxz
loope
cmp
repz
push
cmpsl
dec
ja
test
incb
ja
push
je
scas
pop
adc
clc
cmc
pusha
insb
mov
popf
insl
inc
add
sbb
pop
sahf
mov
out
cmp
data16
das
mov
enter
jmp
ss
mov
addb
sub
mov
mov
test
icebp
dec
mov
gs
pop
repz
jb
inc
stos
imul
add
std
adc
stos
xchg
cmp
pop
insb
pop
push
enter
pop
cwtl
pushf
mov
dec
or
fisttpll
dec
and
and
ret
lcall
adc
pop
cli
dec
into
mov
inc
and
mov
enter
sub
popf
fidivrl
lea
dec
nop
cmp
jne
jb
pop
test
lea
push
adc
mov
jns
adc
repnz
mov
add
std
or
dec
fadds
aaa
cmp
push
leave
xor
ret
sub
bound
negb
ss
xchg
addr16
cmp
mov
repz
subps
sahf
movl
loop
jae
push
or
cmp
hlt
stc
sbb
and
adc
aaa
das
and
test
mov
sbb
icebp
push
or
ja
addr16
mov
in
and
jmp
fnstenv
sub
movsl
bound
hlt
sbb
sbb
mov
dec
cs
inc
and
pop
cmc
xor
out
push
pop
inc
ds
fisubs
push
mov
and
push
negl
mov
arpl
xchg
mov
cld
push
mov
and
fsts
cmp
mov
outsl
lret
out
add
sarl
or
mov
cld
es
inc
inc
jnp
mov
or
add
inc
pop
mov
mov
xor
out
pop
xor
push
bound
xor
push
arpl
in
dec
jne
jae
not
push
fucomip
sbb
inc
test
imul
jno
out
mov
xchg
fbld
cmp
cltd
imul
adc
pusha
xor
fdivr
jb
pop
mov
das
mov
out
sbb
cmp
std
xor
ds
call
icebp
sti
sub
and
leave
stos
fimull
test
pop
mov
test
out
popf
adc
xchg
mov
add
mov
cmp
sbbl
mov
jbe
movsl
or
daa
divl
push
sub
fadd
xor
pop
jb
sub
jl
sbb
mov
dec
popf
sbb
xorl
stos
fsubs
xchg
lock
sbb
xchg
or
cs
aad
lods
inc
mov
pop
jge
jo
inc
fisttps
addl
sarl
cmc
enter
movsb
push
pushf
pop
jnp
jnp
xchg
scas
leave
test
add
sbbb
ds
pop
inc
cmc
dec
lock
jb
xchg
cwtl
mov
dec
dec
inc
add
ja
call
subl
mov
lods
push
sub
xor
sbb
lods
dec
arpl
imul
scas
idiv
and
loope
cld
or
xchg
in
bound
shl
je
inc
xchg
test
mov
cmp
movsb
movsb
xchg
imul
popf
outsl
fcompl
pop
pop
repz
add
cmp
scas
pop
nop
or
xchg
negl
add
inc
mov
repnz
fstpt
test
ret
push
jmp
test
aad
jbe
sti
cmp
ss
push
jecxz
ljmp
mov
cmp
test
dec
cwtl
mov
and
xor
mov
test
xchg
bound
jle
jne
jno
adc
insb
dec
out
push
movsb
or
jl
sbb
pop
int
mov
add
ret
xchg
dec
aam
aad
add
scas
mov
mov
imul
inc
mov
dec
out
cmp
and
push
pop
lds
add
push
push
adc
clc
stos
gs
mov
bound
jle
cmp
mov
test
and
jmp
lea
mov
pop
add
mov
push
out
adc
mov
mov
lock
daa
push
lcall
jge
sbb
xchg
sub
fwait
add
cmp
adc
stos
fdivrp
add
loope
and
fbstp
adc
add
adc
mov
outsb
pop
mov
aaa
sbb
pop
adc
movsl
leave
jmp
mov
jne
std
jge
and
insl
ss
mov
jo
dec
adc
mov
or
inc
scas
jmp
and
or
dec
pop
sub
loop
pop
daa
dec
jnp
jae
cmpb
xchg
dec
mov
xchg
xor
inc
mov
push
mov
cmpsl
xor
jge
mov
inc
lcall
or
mulb
pop
icebp
xor
mov
incb
int
sahf
pop
aam
into
add
ss
jmp
aad
push
shlb
icebp
push
fidivs
sbb
jbe
push
mov
sbb
test
imulb
aad
outsb
push
lods
xchg
inc
out
inc
mov
inc
and
jmp
xor
mov
cmp
sub
int3
push
adc
push
out
jmp
lea
jno
xor
fdiv
pushl
pop
mov
test
ja
push
subl
mov
daa
mov
loopne
daa
shrb
pusha
pop
mov
dec
ret
scas
adc
mov
xchg
nop
fsubrp
addr16
cmp
stos
dec
jo
or
movsb
push
and
pop
test
inc
adc
cmp
je
jp
mov
mov
pushf
loope
mov
jnp
hlt
lds
test
fucom
mov
mov
ret
and
mov
xchg
call
jl
mov
add
mov
cwtl
mov
popa
sbb
xchg
push
xchg
in
aaa
leave
push
cmp
sbb
cmc
pop
mov
out
lcall
popf
mov
dec
xor
cmp
pop
mov
jle
adc
cmpsb
outsl
jbe
jmp
lahf
jmp
insb
pop
mov
ja
idiv
inc
mov
pop
xchg
push
push
sbb
enter
inc
sti
sbb
lods
xchg
cmp
push
sub
lcall
sahf
cmc
test
dec
add
jno
sbb
arpl
mov
push
inc
sti
imul
mov
mov
dec
push
daa
ja
mov
mov
outsb
xor
sti
adc
and
ret
jno
mov
std
dec
ljmp
add
inc
mov
test
mov
in
in
popf
mov
push
lock
sub
pop
leave
and
adc
notb
xor
leave
dec
push
iret
ret
aad
fldenv
fildll
scas
cld
add
cmp
into
pushf
xor
jmp
xor
cmp
pop
dec
jmp
mov
fldl
popa
popa
fadds
fwait
lea
adc
jns
test
cmc
jne
push
push
inc
call
movsb
mov
stos
jmp
gs
mov
dec
stc
pop
stc
adc
daa
sar
sbb
into
dec
aad
and
and
movsb
push
cwtl
push
push
fistps
jmp
adc
lods
leave
mov
jmp
mov
mov
push
addl
popa
daa
bound
or
hlt
aad
stos
and
jmp
or
fbstp
or
xchg
mov
add
adc
dec
out
int3
repnz
cmp
jne
push
add
scas
or
ret
mov
xor
jnp
pop
ss
mov
mov
movsb
pop
call
jno
xchg
pop
or
add
aas
pop
mov
mov
push
lahf
adc
je
ss
and
roll
dec
add
popf
cli
or
out
inc
mov
mov
pusha
jle
leave
nop
mov
mov
sub
pop
sbb
imul
cmp
mov
mov
test
scas
sbb
and
lods
int3
mov
dec
or
or
sbb
push
iret
shlb
push
mov
arpl
and
insl
sbb
aas
dec
out
jle
bound
bound
sub
jns
and
xor
jmp
pop
fldenv
pop
popa
aas
shl
lret
leave
jmp
mov
out
jo
xor
and
pop
ss
fimuls
rorb
pusha
ja
pushw
daa
mov
ljmp
jo
adc
inc
add
adc
sub
enter
fucomi
movsb
sbb
add
mov
xchg
mov
mov
int3
inc
jp
inc
inc
cmp
cld
pop
arpl
and
mov
test
cmp
movntq
pop
cmpsl
je
shrl
mov
pop
xchg
xchg
lahf
mov
insb
cmp
andl
cmpxchg
movsl
imul
sahf
mulb
rclb
ret
inc
adc
push
dec
jmp
setbe
in
pushf
push
add
push
push
les
sub
xchg
or
cmc
add
xor
sar
mov
cmp
sub
mov
shlb
cltd
jns
aam
sarb
jbe
pop
and
cmp
not
sub
fistpll
jnp
in
push
testl
mov
xor
call
sub
in
mov
push
xchg
inc
inc
mov
push
jl
je
andb
pop
ljmp
int3
xor
or
or
aam
sbb
std
push
pusha
push
sbb
ficompl
ret
shll
aad
adc
lcall
pop
push
out
popaw
and
mov
push
and
fstl
dec
xchg
lret
loop
sub
pop
dec
push
or
cld
das
clc
orb
pop
scas
stos
lea
xchg
loop
xor
loop
cmp
add
mov
rcll
roll
mov
dec
cwtl
fldt
sbb
sbb
lret
repnz
push
mov
sbb
aaa
shll
outsl
icebp
cmp
nop
outsb
ret
inc
stc
orl
roll
pop
aaa
divps
movsl
ljmp
daa
or
jne
cmp
cmc
inc
in
lods
mov
mov
popa
dec
clc
outsb
adc
leave
pop
mov
sbb
fisttps
add
stos
rclb
in
insl
aas
adc
inc
sbb
pop
lahf
popa
jnp
jno
aad
cltd
sub
mov
fldcw
pop
cmpsb
jl
subl
and
pop
mov
mov
add
lds
pushf
leave
fwait
sbb
sbb
and
xor
mov
ss
push
leave
stc
mov
loopne
sbb
fbstp
mov
test
pop
les
jnp
xlat
call
mov
jne
xchg
push
cwtl
inc
dec
xor
pop
test
bswap
sbb
nop
mov
clc
jns
xlat
pushf
scas
and
cmp
and
imul
mov
inc
pop
pop
outsb
nop
push
add
xor
xchg
bnd
movl
sub
add
in
mov
test
add
lods
jp
test
xor
inc
test
or
sub
icebp
xor
cmp
mov
xchg
in
shl
mov
jnp
aaa
andb
jae
in
fcom
lret
add
and
lds
insb
aam
mov
cmp
xlat
mov
or
xchg
ds
sti
negb
push
mov
inc
xor
adc
push
fists
addl
idivl
mov
js
mov
pop
xlat
adc
push
pop
add
andb
cmp
nop
mov
xor
sbb
repz
dec
or
movsb
daa
jne
xchg
jno
stc
xor
sub
fs
lock
cs
cmpl
cmc
mov
scas
shll
stos
jecxz
xchg
dec
mov
xchg
inc
mov
outsb
mov
shll
mov
mov
push
movsb
repnz
les
jg
mov
jnp
ss
faddl
mov
pop
dec
dec
aas
dec
repz
mov
sub
daa
hlt
shlb
nop
jb
repz
das
pop
andb
xor
xorl
or
roll
add
insl
add
add
fidivrl
lcall
or
or
sbb
xchg
push
xor
shl
mov
mov
fs
rcrl
cmp
jecxz
lods
or
lock
mov
pop
push
jne
xor
scas
inc
or
dec
std
sbb
xchg
inc
jno
icebp
les
int
mov
mov
or
mov
into
cld
xor
div
pop
cmp
fldl
popa
in
fldt
leave
rolb
mov
ret
mov
mov
test
shlb
sahf
adc
mov
shll
or
js
jmp
in
mov
fdivrs
jo
mov
cmp
aas
int
pop
fucomi
in
ficoms
xor
xor
lahf
in
lock
push
pop
pop
jmp
sbb
insl
push
cmp
pop
xchg
sbb
frstor
jmp
stos
inc
stos
loopne
repnz
adc
fadd
pop
cs
sub
xchg
or
jo
int3
inc
add
addb
shrb
add
and
rorl
or
push
and
aam
je
sarl
addr16
xchg
in
add
adc
int3
sub
xor
stos
cmp
outsl
loopne
inc
cmp
mov
rcrb
adc
les
fisubs
mov
aam
clc
fdivl
xchg
mov
arpl
leave
push
add
psubsb
push
xchg
popa
daa
sbb
dec
xchg
movsl
addb
mov
ret
pop
push
xchg
xor
xor
sbb
mov
jb
das
mov
fcmovb
dec
mov
pushf
les
and
mov
xchg
and
inc
scas
push
or
ret
cmp
pop
push
mov
lret
fmuls
push
pop
scas
test
xchg
push
in
cmp
sahf
xchg
data16
mov
bound
and
pop
mov
int3
pop
outsl
shl
inc
movsb
jp
cmp
je
push
mov
add
stc
cmp
pop
push
mov
dec
mov
lock
push
dec
or
mov
dec
adcb
shrl
pop
sub
arpl
xchg
movsl
cmpw
fldenv
ljmp
nop
out
xchg
jbe
movsl
adc
es
fdivrp
imul
loope
hlt
mov
es
xchg
js
pushf
xor
jp
push
or
cltd
and
aam
sbb
mov
aaa
inc
lock
push
movsl
pop
call
cmp
add
mov
aad
sub
ja
mov
push
push
sbb
pop
scas
mov
and
jg
or
mov
rolb
gs
addr16
gs
cmp
das
nop
mov
mov
cmp
lods
ds
imul
insb
pop
out
pushl
cltd
in
ja
jae
fwait
mov
and
mov
loope
sbb
sbb
mov
sahf
jge
pop
in
movsl
cli
in
cmp
rep
xor
mov
add
das
jo
lds
xchg
or
xchg
xor
push
stos
xor
mov
jne
je
push
and
sub
pop
stc
xor
loope
nop
imul
xor
or
call
pop
inc
sbbl
mov
dec
inc
adc
popf
cli
mov
sub
enter
lret
mov
loopne
mov
push
jmp
stos
mov
or
xor
adc
cmp
insl
lret
jmp
adc
cmp
inc
or
cld
test
cmp
lock
mov
mov
mov
jmp
push
pop
in
dec
pop
push
pop
push
mov
pop
lods
int
dec
adc
sbb
adc
adc
je
out
cwtl
stos
inc
insb
mov
xchg
xchg
cmp
cwtl
ret
pop
call
fcmovu
mov
std
loop
into
add
pop
fdivrl
aaa
pop
pop
icebp
imul
cmp
dec
leave
mov
out
test
scas
ljmp
mov
xlat
mov
cmp
shrb
push
mov
mov
daa
mov
rorb
mov
jne
fwait
push
leave
stos
cmpsl
adc
adc
xor
stos
dec
nop
inc
mov
xorb
mov
mov
sbb
mov
add
js
xchg
enter
and
pushf
inc
and
push
ficoml
popa
sarl
dec
sbb
enter
push
shl
loope
mov
in
mov
mov
pop
jp
in
pop
lea
adcl
das
adc
pop
movsl
push
pop
cmp
push
out
aam
lret
push
dec
enter
fwait
cli
lods
sub
out
inc
ljmp
dec
aad
add
scas
mov
popa
andl
inc
push
cmpb
pop
bound
mov
aad
stos
addb
sub
xchg
inc
outsl
xor
pop
fcompp
sbb
sub
cli
lret
or
std
sub
add
enter
or
xor
and
dec
pusha
popa
fs
mov
jecxz
fstps
lret
dec
stos
mov
sbb
lods
addr16
outsb
add
in
inc
and
rcrb
cli
icebp
cmpsb
jo
inc
and
movsl
gs
outsl
aas
adc
ja
mov
or
insl
xchg
adc
push
or
xchg
in
aas
aaa
fiaddl
aaa
sub
mov
in
xchg
bound
rorl
js
aas
jne
fwait
in
xchg
test
dec
lods
adc
cwtl
dec
mov
pop
pusha
loope
lock
js
push
add
imul
mov
xor
pop
and
scas
js
adc
add
dec
xor
cmp
add
pusha
xchg
gs
push
in
lods
mov
cmpsb
jbe
jmp
dec
jmp
cmp
and
clc
push
or
dec
xchg
mov
nop
pop
jmp
pop
shlb
in
enter
das
rcl
fdivrl
das
in
dec
repnz
in
adc
imulb
add
mov
fcomps
insb
mov
mov
inc
mov
dec
xchg
inc
mov
xchg
arpl
std
iret
sub
mov
loopne
insb
mov
lcall
pushf
ret
mov
dec
fistpl
xchg
jmp
dec
into
js
cld
xor
pop
scas
mov
arpl
aas
lcall
dec
mov
sub
out
or
popf
sub
loop
mov
pop
sti
imul
add
sbb
mov
dec
and
mov
jl
push
daa
leave
std
push
movb
cltd
popa
sarb
test
ss
lock
and
and
mov
test
xchg
test
adc
aad
sub
sti
sbb
dec
leave
lds
cltd
popf
cwtl
sub
frstor
pop
sbb
lret
fs
and
mov
sbb
pop
cmp
and
popa
sub
inc
add
dec
stos
ficoms
lods
mov
into
gs
mov
clc
jne
clc
push
jno
xor
inc
icebp
enter
sahf
stos
sub
ret
jb
lods
jg
inc
pop
popa
mov
push
cmp
push
popf
iret
xchg
cli
adc
mov
and
jbe
sbb
jmp
and
fldt
xchg
or
xor
push
sub
sbb
mov
loopne
sti
mov
loope
xchg
popa
xchg
mov
dec
inc
pop
fnsave
jmp
xchg
ret
adc
inc
test
jmp
add
sub
jle
adc
cltd
pop
cs
mov
rcll
repnz
mov
aam
fisttpll
outsb
sub
negb
add
mov
and
insb
push
in
adcb
out
faddl
jae
jp
xor
pop
add
jne
sbb
mov
lret
ds
xor
imul
cltd
loop
add
cmp
xchg
aas
cmp
jp
fcomps
fcmovnb
outsl
jge
clc
jno
pop
inc
mov
sbb
or
into
out
movsb
and
inc
adc
popf
insb
jnp
in
arpl
jmp
cltd
in
enter
pop
mov
mov
mov
daa
mov
lcall
imul
out
iret
aas
xchg
es
repnz
sbb
inc
xchg
cmc
aad
jno
stos
jge
add
pop
or
outsl
jge
ltr
jb
pop
rcrl
xchg
jmp
ret
cmpsb
insb
mov
add
mov
fs
jle
pusha
out
xor
sub
xchg
or
cmpsl
fsubrl
popf
mov
pop
xchg
mov
gs
xchg
mov
das
sub
jge
in
xchg
lods
lock
xor
mov
mov
negb
stos
faddp
jns
leave
out
stos
bound
sti
stc
sbb
sub
stc
hlt
mov
xor
sbb
or
test
mov
add
pop
imul
xchg
nop
movsb
mov
mov
pop
lahf
xchg
fstl
iret
dec
inc
aas
imul
jle
cld
scas
fs
das
mov
cmc
test
jp
neg
jb
mov
push
insl
mov
dec
hlt
test
loop
mov
mov
and
jne
test
hlt
imul
add
push
and
push
ret
push
cmpsb
sub
pusha
adc
movsb
xor
dec
fldt
or
dec
mov
out
ss
inc
in
adc
out
push
cs
hlt
mov
jecxz
loop
xorb
addr16
cwtl
dec
push
xchg
cmp
das
mov
sahf
arpl
sub
add
add
jne
out
jecxz
divl
cwtl
push
or
inc
cmp
loopne
push
out
sub
fdivr
push
mov
inc
jmp
shlb
push
mov
add
xchg
pop
mov
xor
and
arpl
xor
popl
sbb
jle
cli
sahf
pop
jae
or
outsb
es
adc
pop
adc
mov
imul
lods
fnstenv
or
imul
jb
bound
xor
push
arpl
das
cs
mov
xor
sar
mov
pushf
xchg
movsb
sbb
icebp
pop
notb
lods
lods
add
jg
lods
lret
popf
push
mov
mov
sahf
inc
push
jns
gs
xor
dec
cmp
jae
in
adc
adc
out
mov
and
pop
mov
jb
cmc
call
sub
cmp
mov
int
lahf
adc
stc
insl
jo
gs
mov
pop
pop
insl
and
repnz
hlt
fidivl
fwait
stos
and
add
iret
scas
xlat
pop
hlt
call
pop
nop
pop
lds
mov
lds
xchg
mov
push
fistpll
add
jno
jbe
sub
jbe
push
xor
and
in
loop
mov
loopne
mov
and
fwait
rcll
hlt
aam
pop
ret
test
mov
xchg
xlat
mov
push
cwtl
daa
stc
subb
lock
add
sar
aaa
cli
stos
mov
repz
adc
pop
cmp
push
xor
nop
cmp
jle
push
mov
mov
mov
inc
test
and
inc
movsl
xchg
push
mov
testl
rcr
xor
sarb
xlat
adc
out
lock
ret
jns
xorb
ret
nop
bswap
push
cmp
dec
cli
push
jns
mov
sub
fcomp
out
bound
xor
mov
ss
rcrb
push
mov
and
imul
pop
pop
dec
outsb
jne
and
or
fisubrl
int3
jg
xchg
mov
testb
int3
imul
sub
into
or
clc
mov
sti
and
adc
idivl
lock
mov
jle
in
ljmp
mov
cmpsl
mov
fmull
push
jp
test
jg
loop
push
push
or
rcr
leave
cwtl
mov
mov
pop
hlt
sbb
xchg
aam
out
scas
rcrb
lcall
mov
mov
cmpsb
cmpsb
mov
stos
call
inc
mov
aad
insb
cmc
or
rclb
dec
xor
lahf
mov
daa
rcl
mov
in
aam
push
jmp
lcall
lods
sbb
or
mov
mov
inc
add
mov
imul
xchg
xor
mov
fidivrl
dec
push
add
xor
lahf
and
jge
imulb
and
outsl
xor
mov
or
inc
testb
fnstcw
xchg
aam
cmpl
xchg
adc
mov
jl
fadds
rolb
mov
mov
dec
push
jne
fcomip
cmp
mov
out
add
jge
das
or
adc
mov
push
clc
lcall
xchg
iretw
ds
in
adc
pop
adc
in
rcrl
dec
pusha
sbb
stos
sub
sub
das
roll
dec
cmpsl
mov
add
push
in
xchg
es
xchg
push
cmp
pop
push
loope
sbb
hlt
xchg
jbe
into
jmp
aad
push
loope
push
out
or
outsl
add
jge
std
jg
aad
mov
scas
idiv
flds
adc
xchg
jno
aas
push
clc
cmp
call
mov
xor
nop
mov
ss
ja
jle
xchg
inc
dec
cmpb
stc
in
test
or
shll
arpl
lcall
test
mov
inc
sbbl
out
stc
lret
xor
lcall
xchg
push
dec
les
add
xchg
add
xor
sub
sub
xor
outsl
dec
int3
jmp
pop
pushf
lahf
fdivr
sub
adc
fs
emms
cld
repz
lods
adc
fmull
and
xchg
or
xor
mov
movsb
mov
cmp
sbb
inc
and
mov
scas
ret
dec
ljmp
aam
fmulp
fcomps
cmpsl
push
popa
add
mov
pusha
lock
sbbb
cmp
addl
mov
cmc
mov
loopne
mov
inc
jae
mov
mov
pop
lret
xor
dec
fisubl
cmp
jne
mov
bound
inc
pop
daa
inc
inc
sub
movl
add
int
cmp
fldl
aam
fs
or
and
movsl
or
in
inc
enter
fs
pop
call
xor
loope
pop
push
dec
cmp
dec
adc
xor
sbb
ret
repnz
jge
xchg
and
push
pop
adc
test
popa
sub
mov
xor
outsb
mov
imul
dec
or
in
add
jns
in
or
mov
sbb
xchg
xor
sti
bnd
lea
iret
cmp
dec
fwait
sub
or
xchg
adc
jno
cmp
lret
inc
xor
ja
aam
jp
cwtl
aas
add
aad
cs
data16
xchg
imul
outsb
xchg
adc
xor
aaa
sbb
jnp
inc
cmp
and
cmp
jg
call
pop
adc
add
xchg
lea
mov
jb
gs
scas
aad
jmp
inc
xchg
movsl
dec
xchg
mov
gs
je
imul
sar
jno
inc
mov
shlb
or
mov
jns
shll
mov
add
test
adcb
mov
sub
jp
mov
push
cwtl
test
xor
inc
push
push
repz
jecxz
outsl
add
stc
lcall
inc
lock
xchg
mov
jecxz
pop
xchg
and
jp
xchg
push
cli
in
push
js
xchg
mov
mov
dec
enter
jp
loop
jno
scas
lret
icebp
or
push
inc
and
xor
pop
lahf
sbb
push
pop
pop
or
xchg
test
cmpsl
cmpsl
sub
fs
and
or
ret
js
iret
nop
and
in
test
or
fdivrs
xchg
push
or
jecxz
lds
xor
sub
add
and
iret
pop
mov
push
mov
ss
push
push
ret
loop
imul
xor
cmp
sti
movsl
xor
dec
push
jge
les
pop
dec
cmp
sbb
push
call
push
icebp
outsb
inc
pop
push
jp
mov
xor
sub
sbb
xchg
fwait
mov
outsl
cmp
jle
lahf
shr
sbb
shrl
dec
rcrl
adc
inc
push
push
scas
call
imul
mov
iretw
sbb
loope
mov
pop
addr16
xor
jp
mov
in
int3
xchg
xchg
pusha
mov
inc
cmp
jg
lahf
and
das
arpl
sahf
mov
aas
rcrb
pusha
ss
hlt
cmc
xchg
loop
cmpsl
je
fcom
dec
pop
lods
out
ret
dec
push
sbb
call
or
cmp
int
into
cmp
xchg
or
lods
sti
xor
sbb
lret
aas
xchg
push
popf
push
out
movsl
lds
xor
sbb
movsl
sbb
sbb
xorl
int
movb
pushl
dec
ljmp
arpl
cmp
mov
out
stos
arpl
in
adc
lock
and
fcompl
loopne
iret
xor
subl
and
xor
dec
inc
push
enter
adc
mov
jae
adc
jnp
pushf
adc
pusha
xchg
dec
inc
sub
jmp
dec
cld
das
dec
pop
dec
int
jge
movsb
shlb
xor
fs
mov
outsb
shll
movsb
mull
fwait
loop
and
mov
js
cmpsb
xor
push
test
stos
inc
sbb
std
iret
hlt
inc
pop
aad
pop
jnp
cmp
adc
jl
outsb
adc
aaa
and
sbb
dec
cmpsb
push
pop
dec
test
nop
fwait
shlb
cltd
int3
ja
stos
push
cs
jge
push
mov
jg
lea
push
int3
xchg
push
fcmovu
xchg
notl
mov
dec
js
pop
data16
stos
cmp
dec
mov
pusha
or
inc
jo
push
xor
ja
jle
and
cmp
movsl
sub
ret
pop
jle
lret
cmp
sub
pop
das
ficoms
fwait
or
out
cli
lcall
enter
lock
negl
scas
fmuls
xchg
cmp
loope
outsb
xchg
or
and
push
jg
movsb
leave
ja
push
cmpl
orb
aam
scas
in
push
xchg
pop
sarb
prefetch
lahf
xor
int3
jae
xor
jg
pusha
sub
push
push
neg
push
test
movsb
pop
fisttpll
out
popf
dec
inc
stc
xchg
loopne
rorw
das
pop
xchg
out
flds
push
add
aaa
negl
fdivrl
sbb
cltd
xchg
mov
aaa
fnstcw
add
shl
mov
decb
int3
jae
scas
insb
adc
cmpsl
in
mov
mov
push
bound
and
int
cmp
cmovne
jb
sbb
pavgb
int
jmp
inc
lea
or
jbe
or
xchg
mov
jg
imul
les
mov
ss
out
and
mov
mov
push
jmp
fwait
jns
jno
jmp
dec
cwtl
lea
or
push
aaa
inc
fwait
enter
sbb
fisttpl
movsl
in
shll
sbb
repnz
mov
cmp
xchg
fists
ss
ror
xchg
sub
sbb
out
mov
sub
mov
mov
push
add
xchg
cmp
jno
mov
inc
mov
push
lahf
lods
popa
jmp
fisubrs
jnp,pt
mov
icebp
adc
push
pop
orl
cltd
nop
jo
dec
cmp
ss
shlb
int
xor
push
add
in
popf
inc
subb
cmp
inc
sub
mov
mov
and
loop
mov
sete
pop
xchg
adc
or
fs
out
adc
inc
sub
inc
shll
cmp
push
testb
imull
aam
dec
adc
dec
push
push
sub
lahf
mov
jno
sahf
mov
inc
das
add
jge
pusha
push
sbb
shl
and
jmp
mov
cmpsl
icebp
ja
rorb
ret
xchg
sti
push
jo
cwtl
jb
fs
loopne
aas
jo
add
mov
shlb
scas
in
icebp
dec
and
push
push
scas
xlat
sub
flds
adc
dec
test
jecxz
inc
rsqrtps
bound
loope
mov
lods
subb
dec
enter
pop
repz
loopne
aaa
mov
add
je
fadds
loop
inc
test
testl
bnd
mov
out
insl
and
ret
or
pusha
bound
mov
outsb
pop
int
add
xor
adc
loope
xchg
fnsetpm(287
mov
sbb
ret
mov
loopne
jbe
or
rcr
mov
xchg
jno
es
ljmp
fldenv
mov
stos
mov
lahf
cmp
jge
js
mov
in
cli
sbb
inc
and
dec
out
xchg
popf
add
inc
sbb
pop
fisttps
movsb
xchg
icebp
bound
cltd
mull
je
xor
pop
xor
mov
ja
cwtl
into
popf
cmp
hlt
stc
repnz
fisttpll
jmp
xor
add
jecxz
test
fs
inc
ret
gs
movsl
loopne
fidivrl
scas
dec
mov
nop
xlat
or
fwait
outsb
cmp
nop
xchg
inc
mov
mov
insl
test
inc
sbb
rcrb
nop
in
push
divl
iret
xor
pusha
mov
cltd
aaa
adc
ljmp
mov
push
sets
sbb
jle
xchg
fstps
xlat
push
stc
push
jecxz
clc
cmp
lcall
add
pop
popf
adc
imul
mov
ds
not
cmc
mov
lcall
dec
popf
arpl
stos
int
or
lods
mov
aaa
sbb
daa
in
test
fisubrl
stos
jecxz
pusha
dec
negb
xlat
sub
loop
inc
ret
leave
icebp
test
fs
ret
icebp
mov
and
jmp
dec
cmc
or
lret
pop
je
pop
shlb
pop
push
dec
mov
jmp
movsl
enter
pop
or
test
pop
in
and
std
repnz
aaa
push
sbb
fs
out
or
or
or
pop
icebp
mov
inc
xor
movsb
add
inc
pusha
jle
cld
js
push
or
mov
xchg
mov
xor
in
out
jae
in
popa
push
cmp
fnstcw
dec
movsb
add
cmp
fstpl
cwtl
daa
test
cmpsl
aaa
add
lds
push
sbb
sub
sub
mov
or
clc
mov
inc
sahf
addr16
dec
negb
jo
sbb
jo
cmp
int
inc
lds
movsl
fildll
and
jp
pop
jmp
int
jo
arpl
jne
outsl
subl
push
int3
xor
stc
cmp
xchg
aam
call
in
mov
aam
clc
sub
sub
jp
pop
gs
cltd
sbb
jne
shll
nop
xor
bound
jns
aam
xor
ds
xchg
cmpsl
sbb
pop
imul
or
adc
fs
jae
jmp
lods
jno
ja
jo
pusha
xchg
fldt
pop
out
in
jmp
icebp
pop
fmulp
imul
bound
add
jle
sub
mov
push
push
jmp
push
sub
add
stos
lea
xchg
push
nop
in
leave
mov
pushf
cltd
cli
mov
dec
push
sbb
pushl
push
jmp
mov
push
jmp
mov
cmpsl
push
sbb
adc
idivl
fcmovu
or
test
lods
inc
nop
enter
fstl
push
cli
imul
xchg
jbe
lea
mov
mov
sti
pop
xchg
int
addr16
cmp
cmp
jge
add
stos
jbe
lcall
dec
cmpsl
ljmp
addr16
cmc
cmp
mov
lock
int3
cmp
sub
sub
push
test
aam
fistpl
mov
js
or
bnd
icebp
les
push
es
inc
mov
inc
push
jg
inc
jae
arpl
dec
fucomp
mov
in
data16
into
mov
inc
push
aad
jecxz
mov
push
push
push
test
cmp
call
rorb
jecxz
ss
add
lock
cltd
adc
out
es
movsl
mov
pop
ret
sbb
das
outsb
adc
mov
pop
mov
inc
xor
cmpsl
push
movhps
jecxz
sahf
or
movsb
sub
out
jmp
push
jae
xor
jmp
lcall
adc
xchg
and
xchg
mov
xorl
xchg
mov
out
leave
adc
hlt
shrl
adc
mov
ret
xor
sbb
cld
mov
jp
pop
pop
pop
pop
stos
and
mov
lds
ds
mov
sub
or
pop
jns
loop
jno
adc
push
orl
test
rcr
sbb
es
dec
outsl
xor
je
clc
sub
pop
insl
in
cmp
jo
fcoml
cltd
adc
js
fsubs
sub
jns
shll
adc
sub
into
nop
or
or
sbb
push
filds
out
mov
addr16
sbb
sti
push
repnz
test
sub
push
aas
int3
int
popf
fwait
lock
lcall
ds
push
pop
add
cmp
xchg
ret
cmp
pop
sub
ret
jo
and
adc
fstl
mov
stos
cwtl
out
push
dec
lods
out
xchg
in
and
in
movl
sbbb
sti
inc
aas
daa
xchg
and
fidivs
imul
aaa
push
push
adc
arpl
cltd
sub
xlat
cmp
xchg
and
jae
outsb
push
fildll
push
xor
inc
enter
clc
dec
insl
cmp
ret
push
sahf
mov
cld
js
insb
xchg
outsl
and
jecxz
cmp
push
gs
sti
dec
cmp
fisubrl
jecxz
jns
negl
and
inc
pusha
js
outsl
addb
pop
mov
popf
insl
cltd
scas
jns
jp
imul
popf
int
cmpsl
ficompl
icebp
sbb
sahf
mov
imull
mov
mov
pop
inc
mov
das
inc
repz
sbb
xlat
mov
in
into
outsl
xchg
xchg
gs
aas
int
mov
leave
xchg
jb
cltd
dec
xchg
aaa
leave
hlt
cmp
dec
repz
lea
fidivrs
pop
das
bound
adc
xchg
ds
outsl
adc
jle
loop
add
mov
out
fs
mov
adc
mov
push
imul
jbe
adcl
push
push
cs
jmp
dec
pop
mov
lea
lcall
sub
sbb
test
cmpsb
sbb
mov
adc
jp
mov
push
sbb
pop
out
xchg
gs
ds
jns
xchg
adc
fldcw
xchg
mov
lods
cmp
mov
inc
cmp
pop
pop
ja
jmp
cmp
js
test
sub
repz
icebp
mov
stos
leave
mov
ret
cld
loope
leave
in
addr16
test
add
aam
jbe
sarl
aas
popa
sub
dec
out
sbb
je
or
pop
cmp
lods
insl
addr16
jo
mov
testb
dec
mov
data16
not
add
fxam
insb
xchg
inc
int
imul
enter
je
sbb
cmp
cmpsl
mov
movsl
sbb
loop
sbb
fimuls
addr16
or
sub
ljmp
int
cs
mov
rolb
mov
dec
sub
add
cltd
mov
dec
pop
hlt
cmp
outsl
xor
adc
mov
les
push
popf
jle
das
mov
and
push
mov
xchg
xor
gs
pop
fwait
aas
adc
or
aad
sub
call
pushf
jl
fdivrl
xlat
outsb
mov
dec
adc
dec
add
sub
sbb
inc
jmp
mov
xlat
dec
mov
inc
dec
rcll
jb
mov
inc
ja
jge
sbb
fsub
mov
sub
mov
sbb
in
fcoml
sub
inc
push
in
add
adc
cmp
adc
adc
mov
jnp
std
lods
test
lds
add
mov
dec
in
push
das
inc
push
test
insb
pop
data16
jnp
and
leave
imul
push
jg
popa
dec
loop
rol
mov
sbb
aad
scas
xchg
or
in
aaa
jo
fstl
xchg
or
lods
fbld
or
mov
adc
aaa
adc
js
xchg
mov
fisttpl
dec
stc
ljmp
add
cmp
lea
sbb
pop
cmc
xor
mov
mov
jns
inc
cmp
push
out
push
out
shrb
ficomps
in
lods
cmc
mov
cmp
movsb
gs
sarl
test
mov
mov
pop
mov
xchg
dec
push
jo
push
xchg
adc
cmp
das
push
arpl
sti
and
cmpsb
repnz
mov
and
xchg
add
cmp
add
xchg
mov
sahf
lock
sbb
add
mov
mov
call
mov
ds
std
jb
inc
aad
mov
loope
pop
fldl
dec
inc
icebp
fwait
and
insl
dec
inc
lea
test
adc
add
xchg
lea
fisubrl
lea
int3
adc
xchg
daa
mull
pop
outsl
rcl
xchg
add
mov
ss
data16
outsb
xor
mov
scas
test
inc
push
mov
pop
in
xor
arpl
pop
xchg
pop
loope
adc
sbb
cltd
scas
pop
subb
inc
mov
xor
adc
xor
sub
pop
or
fisubrs
scas
mov
jg
lods
popf
in
cmp
sbb
xchg
repnz
adc
stos
addr16
popa
mov
cmc
leave
shlb
add
outsb
mov
leave
xchg
add
aam
ficoms
cmp
stos
ret
lods
arpl
pusha
inc
lods
rorl
jle
add
pop
cmp
pop
aaa
sbb
stc
mov
in
test
mov
xor
push
test
pop
sub
xchg
rcrl
outsb
movsb
das
dec
popf
fildll
insl
rorb
dec
mov
outsb
popf
cld
jae
push
jnp
scas
in
sarb
pop
fldl
fimuls
data16
aam
push
rorl
or
fistpll
mov
mov
adc
repz
pop
mov
inc
inc
in
orb
int
int
cmp
loopne
pusha
jns
cmp
fsts
xchg
sarl
mov
adc
xor
cltd
or
dec
decb
cmp
loope
out
int3
lret
push
mov
push
fnstcw
or
ret
nop
movd
das
jns
rolb
or
jge
jp
cmc
pop
data16
loope
lock
xchg
pop
xchg
adc
cwtl
mov
jns
sti
push
sbb
lds
dec
jmp
or
push
loope
jae
rolb
xchg
fadd
shrl
dec
dec
sbb
aaa
xlat
dec
nop
cmp
xchg
adc
bnd
adc
inc
sbb
xchg
aas
les
add
mov
sbb
push
out
sbb
add
adc
mov
movsl
jp
or
test
repz
adcl
dec
sub
cltd
outsl
iret
cmpsl
push
lods
inc
lcall
nop
xor
movsl
adc
pop
int
mov
repnz
fucomp
data16
test
aad
out
lock
ffreep
or
roll
outsb
loope
jge,pt
and
sbb
mov
int
or
insb
mov
or
pop
repnz
rcrl
jp
jmp
and
gs
push
mov
adc
rcr
push
mov
xor
add
jns
stos
and
icebp
cli
mov
iret
xor
out
push
out
loop
adc
mov
pushw
or
xchg
cmp
mov
popf
mov
mov
mov
mov
push
bound
jg
pop
lods
mov
leave
mov
fisubrs
cmp
ret
jo
jns
dec
push
mov
and
cltd
xlat
loop
sarl
xor
or
adc
scas
ja
iret
sbb
scas
nop
jns
pusha
lea
mov
mov
js
push
jb
cmp
cs
pop
je
hlt
in
mov
mov
fisubl
sbb
cmpsl
push
cmc
js
popf
ret
or
cwtl
in
pop
mov
rcl
push
xor
sbb
cmc
dec
scas
inc
xlat
sub
mov
fistpl
inc
fcomps
cli
push
loopew
cmpsl
add
popf
imul
mov
hlt
xchg
stos
imul
enter
test
inc
push
pushf
rcrb
sub
and
pop
icebp
stc
and
lock
fists
stos
sub
dec
mov
scas
and
and
mov
jmp
dec
push
movsb
mov
nop
loope
pop
movsb
push
jns
test
xchg
cli
dec
mov
dec
jl
jge
mov
push
.byte
aas
.byte
mov
mov
add
mov
jmp
and
mov
sub
mov
jmp
mov
mov
mov
jmp
mov
sub
mov
jmp
and
mov
add
mov
jmp
movzbl
sub
sub
mov
jmp
mov
inc
cbtw
cwtl
sub
mov
jmp
mov
mov
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
inc
jmp
mov
sub
add
pushf
popl
jmp
mov
add
pushf
popl
jmp
movzbl
mov
sub
mov
sub
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
movzww
cwtl
lea
sub
mov
jmp
mov
jmp
mov
mov
not
not
and
mov
pushf
popl
jmp
mov
add
mov
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
pop
pop
pop
pop
pop
pop
pop
popf
pop
pop
ret
mov
mov
add
mov
jmp
mov
mov
mov
add
shld
mov
pushf
popl
jmp
adc
adc
inc
adc
push
inc
adc
push
inc
adc
adc
adc
inc
adc
lods
inc
adc
jo
adc
adc
adc
inc
adc
cmp
adc
inc
adc
lods
inc
adc
xchg
inc
adc
and
adc
inc
adc
xchg
inc
adc
lods
inc
adc
fiadds
adc
inc
adc
jmp
inc
adc
lods
inc
adc
adc
adc
adc
pop
inc
adc
lret
adc
inc
adc
push
inc
adc
sti
inc
adc
lea
adc
inc
adc
jae
adc
roll
adc
inc
adc
adc
adc
inc
adc
push
inc
adc
fiadds
adc
inc
adc
das
inc
adc
push
inc
adc
dec
inc
adc
adc
adc
inc
adc
xor
adc
inc
adc
pop
inc
adc
sti
inc
adc
sti
inc
adc
adc
adc
adc
jmp
inc
adc
adc
adc
adc
jmp
inc
adc
adc
adc
adc
das
inc
adc
lret
adc
adc
dec
inc
adc
sub
adc
inc
adc
cmp
adc
add
adc
adc
xor
adc
adc
pop
inc
adc
les
adc
adc
cmp
adc
and
adc
inc
adc
cmp
adc
and
adc
inc
adc
insl
inc
adc
cmp
adc
jae
adc
push
inc
adc
inc
inc
adc
cmp
adc
das
inc
adc
sub
adc
inc
adc
cmp
adc
lret
adc
adc
lods
inc
adc
cmp
adc
addb
lret
adc
inc
adc
cmp
adc
lahf
inc
adc
insl
inc
adc
pop
inc
adc
cmp
adc
xchg
inc
adc
lods
inc
adc
sti
inc
adc
cmp
adc
dec
inc
adc
dec
inc
adc
xchg
inc
adc
cmp
adc
repnz
adc
push
inc
adc
fiadds
adc
adc
xchg
inc
adc
and
adc
inc
adc
cmp
adc
fiadds
adc
inc
adc
cmp
adc
jae
adc
cmp
adc
adc
and
adc
inc
adc
xor
adc
inc
adc
xor
adc
adc
add
adc
adc
add
adc
inc
adc
push
inc
adc
das
inc
adc
lods
inc
adc
roll
adc
inc
adc
lret
adc
inc
adc
sub
adc
adc
add
adc
inc
adc
filds
adc
adc
dec
inc
adc
lods
inc
adc
and
adc
inc
adc
xor
adc
inc
adc
lods
inc
adc
sti
inc
adc
cmp
adc
inc
adc
add
adc
inc
adc
push
inc
adc
mov
adc
add
adc
inc
adc
sub
adc
inc
adc
les
adc
inc
adc
dec
inc
adc
insl
inc
adc
addl
adc
inc
adc
les
adc
adc
push
inc
adc
push
inc
adc
mov
adc
dec
inc
adc
das
inc
adc
sti
inc
adc
xor
adc
adc
lea
adc
adc
dec
inc
adc
jge
adc
addl
adc
inc
adc
pop
inc
adc
jae
adc
jge
adc
add
inc
adc
dec
inc
adc
insl
inc
adc
roll
adc
inc
adc
xor
adc
adc
mov
adc
les
adc
inc
adc
pop
inc
adc
dec
inc
adc
sub
adc
inc
adc
and
adc
inc
adc
mov
adc
sub
adc
inc
adc
cmp
adc
adc
add
inc
adc
addl
adc
inc
adc
addb
xchg
inc
adc
repnz
adc
mov
adc
jmp
inc
adc
cmp
adc
inc
adc
jmp
inc
adc
pop
inc
adc
add
adc
adc
add
adc
inc
adc
jo
adc
add
inc
adc
jge
adc
fiadds
adc
inc
adc
jo
adc
mov
mov
not
not
sub
and
mov
pushf
popl
jmp
movzbl
mov
add
mov
add
jmp
mov
add
mov
mov
jmp
lea
cmp
ja
mov
lea
sub
lea
sub
mov
pushf
push
mov
lea
push
mov
cld
rep
pop
pop
popf
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
add
jmp
mov
sub
mov
lea
jmp
push
push
pushf
push
push
push
push
push
push
push
mov
mov
sub
mov
add
mov
sub
movzbl
jmp
mov
sub
lea
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
mov
sub
mov
lea
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
jmp
mov
mov
mov
add
shrd
mov
pushf
popl
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
sub
mov
jmp
notl
mov
sub
and
pushf
popl
jmp
mov
sub
add
pushf
popl
jmp
push
call
incl
push
jo
push
pusha
insb
je
pop
js
ds
js
jbe
pop
push
stos
lahf
xchg
sub
push
test
dec
pop
jl
and
mov
lret
cmp
jae
loopne
out
out
push
arpl
popa
ficomps
fadds
dec
inc
sub
js
adc
or
sub
adc
xor
and
or
push
jo
pusha
dec
pop
dec
and
add
push
gs
fisubrl
or
cmp
cmp
cmp
cmp
or
rcrb
pop
push
sbb
cmp
js
push
sbb
mov
js
fdivrs
mov
cmp
fmuls
dec
and
push
adc
or
and
int
lcall
or
js
cmp
or
dec
sbb
or
or
or
xor
and
sub
sub
add
or
inc
pop
push
push
push
push
add
adc
addl
or
add
and
jl
add
sub
add
sub
sbb
dec
pusha
push
fs
add
cmp
and
sbb
.byte
