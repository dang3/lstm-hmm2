adc
addr16
xor
cmp
xor
add
stos
out
xor
lcall
inc
cmp
sub
and
std
mov
and
lahf
and
adc
loopne
add
sbb
and
fnstsw
dec
pop
inc
inc
pop
fisttpl
xor
popa
stos
mov
aas
xlat
loope
push
jbe
jmp
push
lods
cltd
je
pop
fisubrs
aad
jne
jle
lods
sub
push
filds
nop
das
mov
sti
lret
cmp
push
xchg
andb
and
push
adc
push
bound
sub
in
fildl
mov
xor
mov
xchg
repz
cmpsb
aad
add
inc
ljmp
fmull
cmpb
fdivrs
lods
fimuls
push
inc
jno
jp
add
pop
push
imul
add
arpl
scas
and
mov
mov
mov
dec
push
call
jno
and
mov
test
test
inc
mov
mov
fdivrs
int
cmp
lret
lcall
jb
icebp
jae
bsr
adc
mov
loope
xlat
fidivrs
std
xor
ja
sbb
sub
mov
jl
inc
lahf
rol
test
movsb
jp
out
std
jmp
popf
inc
into
mov
addl
gs
jbe
movsb
dec
pop
addb
leave
cli
gs
das
shll
dec
cmp
mov
leave
icebp
xchg
cmp
and
stos
jno
in
add
cltd
push
fwait
lret
mov
lcall
arpl
icebp
scas
int
and
fstpl
mov
dec
inc
mov
jmp
in
aam
stos
jp
lock
push
mov
stos
or
xorb
enter
xor
sti
adc
imul
mov
sbb
dec
out
out
shlb
push
pop
cltd
mov
sub
shll
out
xor
mov
mov
cmp
je
in
xchg
xlat
out
cmpsl
jmp
and
inc
fnsave
jp
fiaddl
xor
xlat
shll
lods
js
xchg
lahf
iret
xchg
rolb
je
sbb
lcall
xchg
gs
hlt
xor
sub
mov
push
mov
cmc
daa
cmpsl
xor
dec
das
rorb
push
icebp
adc
jecxz
sbb
repnz
fdivs
inc
xchg
clc
fs
fsubrs
pop
cmpsl
xchg
fadds
jo
inc
and
rcrb
inc
jnp
lahf
jg
push
enter
cmp
xchg
jae
movsl
xchg
lret
add
ret
inc
mov
in
or
and
hlt
iret
pusha
cmp
sarl
cli
test
push
popf
imul
mov
xor
adc
inc
jle
mov
pusha
shl
mov
add
xor
and
js
mov
nop
les
adc
sub
lret
outsl
push
loope
lret
jnp
sarl
add
stos
adc
jns
add
mov
jns
inc
ficomps
popf
nop
adc
aad
loop
pop
xor
repnz
xchg
inc
hlt
int
sar
jb
xchg
std
pop
je
push
into
jne
mov
daa
inc
test
test
scas
fadd
out
xchg
adc
and
jno
sub
outsl
jno
test
adc
jae
jb
xor
cmp
test
pop
imul
stos
push
dec
fldl2t
fwait
test
pop
test
sub
cli
shlb
mov
jge
xor
jno
add
xchg
dec
cli
sub
mov
inc
mov
jp
pop
xchg
jmp
sub
cmpsb
or
dec
ss
enter
sub
mov
out
mov
scas
nop
ret
jmp
xchg
add
mov
stos
aam
jmp
aam
cmp
stos
sahf
xchg
jb
push
mov
xchg
arpl
mov
xchg
xchg
fdivl
lcall
dec
push
in
sarl
jge
nop
lcall
sub
jge
dec
mov
inc
arpl
adcb
sbb
rclb
movsl
inc
les
scas
shl
pop
fldcw
imul
fs
xchg
dec
inc
mov
fstpt
mov
nop
sub
js
in
je
hlt
xlat
ret
mov
and
sbb
cmpsb
test
hlt
mov
and
mov
frstor
push
lret
pusha
xchg
es
js
test
or
repz
jo
xchg
mov
mov
cmp
xor
rolb
lcall
adc
jl
sub
ror
xchg
dec
andl
bound
mov
in
fists
sbb
jo
ret
sbb
pushf
mov
cs
add
xchg
cmp
das
sub
cwtl
xchg
fs
jmp
sti
and
js
push
in
cld
pushl
scas
lods
mov
pushw
pop
sbb
dec
mov
es
insl
shrl
cmp
jbe
rclb
in
jl
loopne
inc
sub
pop
mov
jo
roll
dec
ja
xor
mov
pushf
popa
outsb
xchg
xchg
test
in
fwait
les
sbb
out
sbb
call
lret
dec
mov
in
mov
mov
fsubl
imul
push
aas
cmp
call
sahf
mov
jl
sub
aam
adc
or
add
inc
add
jb
xor
xor
das
xchg
ss
into
xorb
ds
mov
mov
stc
push
pushf
mov
loop
insl
pop
mov
test
cmp
aas
pop
pop
mov
dec
cs
aaa
lea
inc
fildl
mov
shlb
or
push
rorb
incb
push
pop
adc
cmc
and
push
shrb
push
and
ds
pop
clc
popa
incl
push
dec
ds
adc
leave
add
cmp
and
jp
inc
data16
inc
fs
mov
outsb
mov
xchg
daa
inc
mov
adc
xor
subb
std
mov
sub
push
out
repnz
push
insb
andb
ds
nop
cmpb
jno
push
jmp
jl
inc
xlat
mov
push
sub
lcall
clc
push
pop
js
sub
sub
inc
cmp
dec
fiadds
fisttpl
pop
ljmp
jno
push
lea
sbb
mov
out
adc
add
aam
lea
push
inc
cmp
jnp
scas
dec
in
pop
outsl
movaps
or
add
in
fwait
add
icebp
cmp
inc
mov
mov
sub
vmulps
jo
cmp
add
or
jo
mov
int
or
aam
and
rolb
add
loopne
ud2
movnti
sbb
test
rcrl
lds
cli
mov
jno
nop
xlat
into
in
jno
outsl
stos
pop
cmp
outsb
and
popa
fnsave
add
mov
iret
je
sbb
add
enter
mov
notb
inc
mov
imul
in
fcoms
movsl
fistpll
push
or
pop
gs
mov
das
jmp
call
bsr
mov
mov
mov
cmp
push
mov
sbb
pop
ret
arpl
dec
jbe
mov
sarl
mov
mov
mov
and
out
repz
and
push
jnp
mov
xor
in
mov
mov
pop
jp
sbb
lret
fmuls
jne
push
rcrb
xchg
sbb
loop
loope
push
mov
jnp
jne
imul
in
ficoml
lods
mov
std
scas
mov
cmp
das
jno
jecxz
push
add
and
call
xchg
out
sbb
mov
push
or
or
pushl
sbb
mov
and
jl
mov
and
inc
pop
ds
cmp
movsl
data16
or
jb
xchg
icebp
out
repnz
imul
jae
dec
pop
adc
xchg
icebp
jbe
imul
mov
mov
mov
mov
loop
fsubr
add
fdivrl
sbb
xlat
lret
add
out
xchg
int
xor
inc
mov
rcrl
fwait
ljmp
dec
xor
iret
outsb
pop
dec
out
leave
xchg
cmp
or
decl
push
jb
mov
test
sub
inc
rolb
cld
xchg
sbb
pop
push
cltd
in
and
pop
cmp
fwait
inc
ret
xor
inc
jle
movsl
mov
xchg
sahf
mov
jo
jae
sti
out
inc
mov
js
inc
ljmp
lret
mov
stc
ficoml
adc
into
movsb
mov
and
jge
mov
mov
cmp
fidivrs
sub
inc
cmp
ljmp
pop
nop
push
sti
cmc
in
lods
mov
cmc
fs
add
pop
inc
cmp
nop
lds
cmp
pop
push
cmp
pop
scas
dec
xor
mov
sub
and
and
push
nop
js
cmp
call
pop
incb
ds
push
jno
dec
sub
cs
pop
popa
in
and
xor
mov
cwtl
sahf
mov
or
push
and
movsb
inc
insl
add
and
cwtl
in
push
loop
xor
mov
enter
pop
mov
xchg
jno
sti
movsb
clc
push
mov
xorb
or
pusha
xlat
sbb
imulb
push
fwait
sub
push
cmpsl
add
cmp
pop
pop
push
push
test
inc
xor
loopne
loopne
int
xchg
idivb
xchg
xor
lods
addl
dec
sahf
fistpl
xchg
cld
xlat
mov
dec
add
sbb
stos
daa
notl
cli
rclb
lcall
addb
xchg
les
adc
fsubrp
mov
mov
setno
fsubrs
sti
adc
sub
out
mov
aam
sahf
rorl
out
stc
je,pt
fwait
into
fistl
mov
inc
repz
jbe
lret
cli
bound
popa
fcmovnbe
int
dec
mov
lcall
jmp
std
pop
data16
cmp
sub
cmc
mov
daa
test
xor
pushf
arpl
nop
cs
adc
out
ljmp
sbb
sub
add
dec
or
dec
cmp
pop
into
scas
add
pusha
int3
aas
xchg
addr16
push
mov
in
lock
inc
or
insb
push
data16
pop
dec
mov
sarl
sub
jp
enter
fimull
adc
pushf
jg
pop
jo
jns
divl
insl
stos
mov
std
add
je
mov
sbbb
fidivl
and
call
inc
push
jns
notb
daa
mov
fimuls
cli
scas
push
jbe
nop
xor
mov
popa
je
add
test
push
dec
pop
adc
adc
and
in
xor
mov
push
cmp
iret
add
fcompl
clc
adc
pop
mov
sbb
cmp
xchg
mov
inc
pushf
sar
test
sahf
std
addb
mov
adc
mov
imul
sub
imul
stos
cli
imul
stos
mov
lock
jp
repnz
in
ret
cwtl
dec
test
lret
pop
xchg
sbbl
mov
cwtl
push
in
sbb
mov
popa
dec
inc
and
movsl
push
push
push
push
inc
pop
jmp
bound
sbb
sbb
or
iret
add
arpl
mov
sbb
push
mov
cmpl
or
js
xor
repz
loopne
mov
or
imulb
dec
dec
push
mov
scas
inc
jbe
mov
lds
repnz
in
cmc
mov
lret
dec
fstpt
dec
jge
lea
fistpll
aaa
sub
mov
sbb
jge
fwait
cld
mov
dec
clc
xchg
sahf
inc
cli
jnp
sub
leave
sti
aad
push
mov
xor
out
fwait
inc
fcompl
pop
icebp
xchg
lahf
ss
aam
mov
inc
lods
jecxz
pop
sub
pop
lock
dec
out
and
mov
movb
xchg
adc
cmp
jecxz
int
mov
imul
int3
movsl
cmpl
shl
rorb
push
sub
inc
mov
ja
sbb
enter
jbe
loop
popa
popa
mov
inc
in
insl
movsl
dec
test
push
sbb
cmp
imul
jb
leave
adc
xor
add
push
shl
imul
xchg
dec
dec
ret
shrb
enter
shrb
mov
push
pop
mov
mov
popa
out
popf
icebp
and
mov
call
mull
stos
xor
push
jbe
outsb
jmp
inc
xchg
scas
data16
push
loop
mov
lods
add
xchg
add
rorl
test
add
xchg
sbb
mov
cmpsb
pop
or
aas
mov
inc
jmp
pop
sar
insl
cmp
xorl
xchg
test
jne
jp
pop
test
das
jl
or
cmpsl
xchg
std
rorl
sahf
sbb
lods
or
sbb
adcl
mov
pop
push
incl
lock
outsb
adc
jo
hlt
sub
inc
out
icebp
or
aas
mov
mov
lret
ds
pop
mov
add
out
fsubp
fisttps
into
cmp
decb
jnp
in
push
mov
sub
lcall
jge
jecxz
jl
cmp
pop
sbb
stc
int3
lock
mov
cs
cmp
nop
movsl
inc
or
add
push
jo
clc
jne
shlb
and
add
outsb
or
outsl
xchg
cmp
mov
pop
dec
shlb
add
add
xor
adc
inc
mov
mov
sbb
add
xchg
mov
mov
test
lods
xchg
mov
jno
pop
ret
test
iret
lret
inc
xor
pushl
pop
loopew
in
movsb
mov
dec
xor
xchg
mov
fnstenv
int
cmc
mov
push
cmpl
pop
sti
outsb
adc
xchg
cs
pop
insl
dec
lods
adc
dec
fwait
push
mov
loop
xlat
leave
xchg
inc
mov
jno
mov
repnz
sub
push
lods
mov
rcrb
imul
nop
xor
jo
rcrb
sbb
insb
stos
leave
cli
xor
jp
mov
xchg
mov
add
jle
mov
leave
sbb
push
and
and
ja
pushf
jbe
mov
pop
mov
aad
clc
test
flds
xchg
pop
or
cmc
scas
mov
loop
or
push
mov
addr16
sub
ror
scas
cs
jl
cmc
cmp
push
sbb
sub
jae
enter
mov
jne
icebp
mov
push
insl
iret
sbb
repz
and
daa
pop
lods
imul
mov
iret
iret
loop
or
cmp
loope
jle
ret
aas
data16
jb
sub
inc
ja
std
xchg
inc
out
cmp
lods
loopne
jae
gs
aam
sarl
mov
pop
das
dec
or
and
mov
mov
push
rclb
dec
sbb
fistpl
adc
in
daa
insl
and
icebp
or
outsb
and
mov
jmp
xor
add
lds
push
inc
mov
mov
mov
cmpsb
imul
in
pop
jp
and
lahf
mov
es
or
pusha
xor
sbb
paddsw
in
mov
jb
jns
adc
fmuls
inc
inc
inc
xor
repnz
mov
cmp
push
repnz
push
cmp
into
imul
negl
sbb
pop
xor
fisubl
hlt
outsl
mov
pusha
add
push
loop
stc
test
es
les
repnz
push
mov
pop
test
xor
push
fwait
pop
in
adc
xchg
xchg
cmp
mov
pop
xor
leave
les
dec
add
rorl
jmp
loopne
nop
push
shlb
stos
or
push
cli
pop
inc
lock
shlb
out
jge
pop
loop
cltd
jmp
or
pop
cwtl
add
mov
movsb
bound
testb
in
rorl
lock
dec
jns
cmp
stos
xchg
jb
imul
dec
mov
mov
jle
les
pushf
adc
mov
das
bound
fdivr
pop
jmp
mov
pop
or
push
daa
cmp
cmp
imul
fwait
mov
ret
jle
fbld
dec
lods
in
mov
and
icebp
add
ret
int
xchg
out
mov
inc
fs
cmc
inc
or
adc
data16
lahf
inc
dec
sbb
mov
ljmp
jg
push
add
orb
jg
dec
movsl
push
mov
mov
sub
dec
lods
push
adc
fcompl
call
in
jmp
cmp
add
mov
pop
enter
xchg
mov
mov
sbb
hlt
xor
dec
inc
mov
movsb
and
push
aas
add
and
cmp
mov
rcll
jmp
xor
shl
and
mov
sbb
idivl
imul
pop
nop
stos
xchg
in
outsl
xchg
repz
out
lahf
cltd
xorl
add
xchg
and
lahf
ret
sub
mov
or
in
fisubrl
int
sbbb
test
mulb
lahf
gs
fs
and
js
mov
pop
xchg
sbb
mov
insb
sub
shrb
or
ja
push
push
fwait
push
adc
and
cmp
test
test
dec
push
fnstsw
push
or
pop
fwait
fwait
and
lock
sbb
jo
sub
jmp
and
mov
arpl
add
cmc
adc
in
ja
leave
fstp
xor
enter
jnp
xor
fprem
mov
inc
repz
inc
add
cmp
push
out
cmc
push
jecxz
imul
lock
mov
scas
call
lods
mov
or
or
pop
push
mov
inc
sarb
mov
mov
xchg
std
shlb
sub
test
pop
and
add
sub
test
adc
pop
pop
adc
pop
dec
add
dec
fsubp
sbb
jge
mov
inc
aaa
jne
fdivl
xor
mov
inc
int3
add
sub
or
add
push
lods
push
pop
jle
cmp
cmp
xchg
lods
test
int
pop
lods
roll
shll
mov
clc
cmp
add
jnp
inc
pusha
push
or
data16
ss
lahf
adc
jecxz
push
loope
push
call
and
inc
push
pop
scas
jmp
scas
fcmove
aaa
mov
mov
mov
xchg
pop
in
js
ret
outsb
nop
jecxz
xchg
fwait
mov
dec
icebp
inc
hlt
xchg
jbe
enter
mov
mov
cld
xor
in
mov
jecxz
dec
call
stos
cld
iret
jmp
js
mov
xor
outsb
add
aad
add
call
mov
inc
sahf
add
rorl
pop
mov
popf
int
popl
mov
pop
adcl
mov
lods
aad
out
pushf
sub
or
insl
cmpsb
sarl
inc
sahf
out
pop
aad
jmp
aad
adc
repnz
jmp
sbb
mov
push
dec
rorl
lret
loop
xchg
stc
xchg
xor
adc
or
jmp
mov
mov
lret
xor
les
dec
add
adc
cmp
ror
mov
lods
or
sub
xlat
adc
scas
es
call
out
lds
pushf
sahf
and
inc
inc
mov
adc
in
push
push
dec
scas
mov
fistl
mov
pop
sub
xchg
shrl
push
jmp
negl
cwtl
inc
imull
dec
xchg
mov
push
es
xchg
int3
jbe
cmp
rolb
outsl
cmp
int
insl
xlat
divb
loope
jae
xchg
mov
add
js
in
add
mov
jne
pop
cmpb
push
or
sti
pop
inc
xchg
in
aad
lahf
cli
pop
repz
sbb
das
dec
adc
out
clc
inc
dec
or
mov
pop
sub
and
jne
movsb
pop
adc
jp,pt
push
sbb
arpl
xchg
cmpsb
inc
push
nop
pop
mov
movsl
ffree
jae
push
jecxz
or
mov
push
add
stos
data16
lea
data16
mov
pop
shl
mull
dec
or
or
aam
adc
mov
std
push
push
dec
jb
test
push
xchg
add
lods
jne
negb
insl
mov
roll
mov
cmpsb
sub
mov
push
and
push
jne
out
repz
adc
or
xchg
ret
sti
and
xchg
push
filds
xor
add
cmc
daa
scas
xchg
pop
imul
int3
cmovp
jnp
ret
shl
pop
pop
aad
jl
xlat
mov
xor
inc
inc
mov
fsub
in
mov
or
lret
dec
sbb
or
mov
add
mov
cmpsb
into
cmp
ucomiss
stc
scas
adc
mov
lcall
cmpsb
movsb
sub
pop
mov
divb
test
std
xchg
mov
add
cmp
xchg
mov
ret
cmp
jno
es
mov
xchg
test
adc
dec
fs
mov
enter
xchg
in
push
pop
add
adc
sub
xchg
inc
mov
dec
mov
inc
adc
mov
fisubl
stos
sub
xor
dec
mov
in
inc
jg
aad
or
stc
lcall
mov
mov
ja
fwait
in
test
decl
loopne
ljmp
pop
inc
ljmp
mov
mov
xchg
mov
push
mov
jnp
fdivr
lods
cs
jge
and
cs
pushf
mov
test
loopne
aaa
cmp
std
arpl
test
loope
mov
iret
fildl
jne
out
stc
jb
out
notb
and
mov
cmp
cmp
inc
pop
sbb
mov
les
cs
add
push
jecxz
pop
inc
mov
loop
mov
leave
jbe
es
or
add
pop
mov
sbb
pop
adc
andl
push
js
arpl
test
push
testl
call
mov
icebp
inc
and
call
xchg
out
adc
daa
dec
fdivp
iret
das
das
ret
cmp
aaa
repz
std
aam
imull
fwait
xor
adc
loop
aaa
mov
leave
rolb
ret
pop
in
stc
lret
push
imul
sub
and
adc
es
inc
nop
fstps
pop
bound
or
cwtl
cmc
ret
fadd
push
xchg
mov
loope
jle
in
flds
adc
mov
cld
fists
lea
mov
xchg
out
dec
into
jecxz
mov
push
push
cmp
insb
js
mov
inc
data16
pop
int3
mov
push
cmp
fldl
flds
cs
stc
cmpsl
push
imul
jne
dec
in
mov
pop
push
call
scas
insb
fsubrs
lock
mov
mov
test
insl
or
cmc
enter
outsb
sahf
imul
xor
outsb
jl
cli
push
and
jl
xchg
je
or
fcomps
mov
mov
out
and
jmp
std
push
jmp
inc
enter
sbb
mov
ljmp
push
xor
out
xor
add
stc
cmpsb
dec
mov
push
cmp
fstl
pop
add
push
mov
pop
mov
stos
pop
mov
andl
push
inc
xor
jne
cmpsb
xchg
ficomps
test
add
and
cs
jae
lcall
les
cmp
mov
push
xchg
lods
pop
clc
lcall
add
lret
pushf
mov
inc
lods
push
adc
xor
cmc
mov
sarl
lea
mov
into
rorb
pop
setns
sub
jle
sbb
sbb
push
cmpb
sbbb
inc
fnstenv
cmp
mov
dec
inc
pushf
and
and
cmp
repz
lods
mov
xchg
fidivrs
pop
arpl
xor
jge
or
std
enter
sbb
orb
sbb
ja
loop
into
jge
sub
call
test
pop
loopne
test
imulb
lock
ljmp
jmp
pop
mov
por
and
inc
cmp
cmp
jbe
fdivl
shrb
mov
cmp
jns
pusha
jbe
inc
stos
loopne
arpl
sti
mov
push
sub
push
mov
imul
test
sbb
or
adc
pop
int
mov
and
sub
repz
or
xor
lods
sub
ja
jno
mov
repz
ret
rcrl
pusha
fistps
call
into
xorb
sub
mov
divb
mov
imul
cmpsl
pushf
dec
cmp
call
add
xlat
jne
repz
rcll
shr
loopne
xlat
sub
or
nop
xchg
or
sub
jno
jns
enter
pop
outsl
xor
psubb
cmpsl
mov
ds
arpl
repnz
pop
jecxz
push
stc
bound
fadd
dec
call
lods
dec
in
jae
xchg
pusha
jecxz
leave
test
sub
jg
push
lcall
ljmp
lret
movsb
inc
adc
push
stos
in
jbe
aad
imul
cmpsb
leave
scas
xchg
inc
mov
mov
scas
outsl
bound
movsl
test
adc
lods
cs
jge
rorb
inc
mov
cmpsl
or
inc
push
lds
push
in
xor
push
rorl
push
adc
fnsave
imul
jle
xor
cli
insl
mov
mov
ret
mov
xor
enter
inc
mov
push
jge
xor
mov
lods
add
test
fimuls
lret
icebp
pop
test
pop
jnp
push
mov
fs
or
mov
js
das
sub
popa
fcomps
test
sar
push
adcl
aaa
sub
push
mov
stos
xchg
lret
push
fsubrp
pop
xchg
ja
shll
mov
mov
mov
in
mov
mov
add
mov
pop
movsb
mov
enter
dec
fcmovb
cli
les
xchg
xor
push
inc
pop
or
js
mov
inc
xchg
subb
mov
aaa
sbb
inc
xorl
push
sbb
add
lock
xor
rolb
mov
mov
sub
adc
enter
and
and
das
pop
daa
lretw
sub
iret
or
std
mov
xor
xchg
pop
jne
add
imul
dec
mov
rol
mov
mov
in
mov
subb
mov
mov
cltd
ds
addr16
addr16
xchg
xchg
mov
cmp
sub
shrb
je
add
jbe
mov
call
mov
lods
mov
imulb
inc
dec
and
or
mov
xor
pop
mov
pop
add
stc
jg
mov
lahf
add
scas
dec
shr
pop
sti
or
push
imul
mov
mov
xor
xchg
enter
mov
sub
into
lock
adc
in
lock
and
jne
outsb
lahf
les
pop
add
cmp
xchg
fisubs
sub
dec
out
mov
jbe
mov
popf
dec
dec
js
fadd
adc
rolb
mov
test
adc
fnstcw
jge
test
add
sub
xchg
bound
xor
clc
sbb
adc
xchg
sub
inc
pop
aaa
mov
jl
fcmovbe
inc
add
testl
push
rol
jns
fucom
bound
shr
xchg
pop
in
inc
mov
mov
sarb
ljmp
addr16
movb
outsl
or
push
in
ja
popf
fwait
stos
bound
xchg
and
lret
cmpsl
jl
das
fidivl
mov
mov
shll
scas
push
xorl
test
pushf
add
add
popa
mov
add
das
sbb
or
ret
sub
movsb
movsl
adcb
jg
xchg
sbb
adc
pop
subl
dec
and
scas
pop
or
ss
mov
adc
jmp
xor
mov
inc
mov
jae
shll
jns
repnz
imul
cmpsl
cmpsl
cmp
jae
pop
notw
arpl
mov
int3
ds
scas
in
lcall
jns
stc
xlat
inc
jb
push
dec
insl
cmp
add
clc
scas
xor
inc
int
cs
iret
scas
jmp
test
inc
mov
cmp
int
imul
lds
movsb
xor
xor
aad
xchg
adc
pop
loop
mov
inc
inc
pop
add
loopne
nop
gs
adc
push
lahf
mov
sarl
pushf
jp
ror
mov
xchg
dec
nop
lret
add
mov
inc
in
push
mov
jge
aaa
push
psubw
and
jmp
cmp
aaa
ret
pop
insl
fmuls
lds
mov
dec
outsb
xchg
dec
out
pop
sub
mov
ss
ret
mov
sub
testb
mov
lret
mov
fldl
push
int
jb
mov
outsl
lods
movsb
idiv
lock
mov
imul
in
pop
in
lcall
lahf
and
push
xor
rcll
lret
jns
daa
dec
insb
mov
add
jmp
xor
sub
daa
sahf
pop
loop
and
sahf
bound
or
int
jmp
scas
cltd
sbbl
sti
add
loope
cmc
jge
dec
dec
sub
inc
ja
std
ds
out
inc
and
aam
out
aaa
jbe
dec
arpl
aaa
sbb
inc
sbbl
sub
xchg
jns
sub
dec
add
mov
xchg
mov
ja
pop
cmpsl
aad
mov
ds
movsb
inc
mov
ret
pushf
dec
push
push
mov
mov
sbb
xor
jb
loop
fimuls
pop
xchg
mov
mov
hlt
in
loop
lock
sub
mov
mov
pop
jns
push
cmp
mov
mov
jno
push
stos
push
sbb
cmp
and
fldcw
mov
mov
push
ja
mov
xchg
jae
jmp
sbb
shrl
and
mov
xlat
inc
cmpsl
movsb
nop
mov
pop
xor
cmpsb
and
inc
xchg
xlat
jecxz
andb
loopne
call
loopne
in
prefetch
jl
mov
sub
inc
push
jb
or
inc
pop
cmp
gs
xchg
xor
adcl
loop
ja
adc
movl
hlt
jns
rolb
dec
xchg
imul
popf
outsb
xchg
out
cs
cmpb
lahf
mov
mov
aas
xlat
mov
pop
or
imul
mov
push
lds
sbb
mov
mov
addr16
push
cmc
cwtl
xor
add
leave
and
ja
cmpb
dec
add
push
repz
rclb
mov
dec
cmpsl
loopne
jge
add
loop
dec
fwait
mov
lahf
push
push
mov
shrl
roll
inc
loopne
test
popa
xor
pop
jae
into
mov
mov
push
push
inc
ds
rorb
mov
jge
cmpsl
gs
into
shll
aas
mov
mov
sbb
mov
jecxz
pop
cmpsl
pop
mov
xor
mov
adc
imul
mov
popa
cmp
cli
adc
cmp
adcl
daa
mov
add
sbb
jnp
fldl
mov
mov
mov
test
or
cmp
ret
jmp
add
pop
adc
pop
test
inc
adc
pop
leave
push
iret
sub
cli
call
daa
jne
stos
sbb
mov
inc
test
rorl
rcrl
mov
fcom
mov
xor
xchg
sub
in
push
cs
scas
iret
xchg
xchg
cmp
lock
cs
xchg
inc
adc
or
in
test
loop
decl
test
mov
mov
jl
repz
mov
xlat
lock
push
imul
add
xor
sbbb
and
in
and
pop
inc
call
cmp
add
in
testb
test
sbb
ljmp
aaa
cli
gs
jl
or
jb
mov
adc
ret
xlat
dec
mov
mov
lds
les
adc
imul
cli
mov
sarb
out
mov
cmp
push
movsb
lds
cmp
enter
cmp
das
mov
or
ret
ljmp
mov
sbb
or
mov
rcrb
sahf
pop
push
ret
mov
in
flds
jmp
pop
stos
xor
rolb
add
iret
or
loope
les
jg
cli
clc
dec
xor
hlt
cld
xlat
mov
fsubrs
adc
fcoms
jne
cmp
cmp
js
movsb
mov
sub
popf
xor
dec
int
loopne
shrl
imul
sahf
fdivr
mov
inc
imull
sahf
xchg
inc
fwait
mov
movsl
sahf
push
lret
das
iret
xor
mov
pop
ret
insl
repz
or
push
adc
jg
stc
dec
scas
push
sub
add
rep
dec
xchg
sub
adc
mov
insl
leave
lcall
rcr
jno
jbe
orb
or
aam
and
mov
cmp
lea
inc
pop
mov
orl
lds
mov
movsl
insl
pop
cmp
sbb
mov
aas
jle
inc
aaa
movsl
cmc
dec
and
adc
ret
mov
or
and
jp
sbb
leave
iret
andb
jne
repz
jnp
hlt
clc
mov
lock
daa
jp
loope
fwait
rcrb
aad
into
mov
and
or
int3
je
mov
jp
adc
xchg
cmp
jb
subl
cld
stos
in
jmp
inc
mov
idivb
adc
jbe
mov
insb
mov
fwait
pusha
mov
xor
or
sbb
test
scas
push
movsb
adc
popf
and
outsl
or
in
rol
loop
jbe
test
pop
mov
icebp
jle
dec
sub
insb
cmpsb
cmp
pop
cmpsl
shll
sarl
dec
jne
lahf
mov
clc
clc
scas
pop
xor
add
and
xor
inc
mov
jle
pop
push
sbb
ss
test
rcrb
xor
fmuls
push
add
aas
repnz
rep
mov
andl
mov
decb
daa
dec
add
lock
rolb
xchg
fsubr
movsl
and
js
xchg
int
add
les
ret
js
popf
dec
aam
scas
pop
loop
xchg
dec
mov
mov
mov
orl
pop
dec
xor
test
test
cmp
mov
and
outsb
adc
shl
sbb
cmc
fsubs
jl
sarb
jle
in
lock
cwtl
xchg
or
lods
shl
pop
xchg
es
fldl
mov
mov
nop
pop
loopne
out
dec
cli
aaa
xor
loop
jae
jp
enter
lds
xchg
out
push
xor
bound
mov
xchg
cmp
stos
ret
cmp
adc
fiadds
leave
stc
mov
sub
cmp
fistps
pop
sub
les
cmp
mov
je
push
adc
test
fidivl
push
sbb
mov
push
or
jne
call
pop
das
pop
aaa
ss
mov
test
mov
mov
lret
xor
sti
mov
or
push
xor
insb
cmc
insl
icebp
mov
adc
fs
inc
add
lret
dec
aam
mov
jle
pop
sub
fldenv
mov
je
add
mov
lea
mov
es
push
addr16
jae
pop
jne
jno
dec
lods
or
aam
mov
dec
popf
fistl
cltd
cmp
dec
nop
add
repz
push
push
push
mov
lods
inc
mov
shll
jp
pop
ret
scas
imul
or
imul
setge
mov
cwtl
inc
mov
repnz
popf
cmp
and
stc
mov
sarl
pop
cmp
call
inc
or
jge
mov
adc
sub
mov
or
in
inc
sbb
adc
jp
mov
pop
pop
dec
adc
push
sbb
fisttps
jo
pop
shlb
cmpsl
jle
and
pop
push
sub
pxor
xchg
xor
std
cmp
icebp
xchg
stos
inc
adc
dec
adc
fidivl
int3
dec
sti
fsubrs
insl
inc
add
dec
rcll
divb
clc
addr16
or
cmp
push
nop
movsb
cmpsl
popf
enter
add
je
lahf
aaa
mov
into
addr16
or
sbb
jno
push
leave
adc
and
std
pop
cwtl
mov
mov
orl
dec
arpl
mov
or
insl
mov
in
mov
add
std
or
mov
cmc
and
jo
mov
adc
test
cmp
cmp
or
jecxz
inc
cmpsb
push
mov
sbb
adcl
ds
dec
mov
pop
sub
stos
les
insb
test
push
rcll
stos
aam
iret
rol
cs
cmc
add
xorb
dec
inc
sub
push
ds
scas
aam
and
inc
jnp
nop
jle
jg
nop
inc
cld
or
movsl
mov
xor
mov
push
stos
or
test
fists
jg
pop
mov
or
push
push
in
mul
xor
mov
fistpll
aas
mov
cmp
scas
mov
jp
push
mov
ja
leave
cmp
sti
mov
push
aam
or
cltd
out
adc
sub
or
dec
shlb
push
cltd
cmp
xchg
adc
and
and
add
filds
out
incb
cmpsb
loope
mov
pop
sbb
sbb
push
rolb
or
pop
mov
inc
xorb
leave
mov
jne
or
adc
neg
lock
cltd
sbbl
cld
bound
cmp
add
in
fcom
lock
imul
cmpsl
popf
imul
subb
das
inc
push
mov
xchg
lds
push
fisttpll
or
or
dec
mov
stc
cmp
and
out
cli
xchg
dec
pusha
inc
inc
sbbl
sub
scas
loope
aaa
lods
icebp
mov
fidivrs
sub
loop,pn
lock
imul
ret
sbbb
mov
clc
jl
sbb
sarb
cmc
jp
fldt
aam
mov
and
shl
addr16
pop
aaa
roll
push
and
sahf
mov
imull
mov
or
xchg
mov
aam
jle
mov
shrb
adc
or
inc
dec
out
fcomp
mov
cmp
mov
adc
and
and
pop
pop
xchg
cmpsb
and
xchg
imul
jnp
mov
mov
rorb
mov
fnstsw
add
or
sbb
nop
inc
jo
inc
clc
sbb
inc
xchg
insl
xchg
out
daa
mov
pop
inc
xchg
shlb
daa
faddp
cmc
inc
adc
sub
sub
mov
mov
add
int3
subb
ret
pop
rcrl
or
inc
cld
lret
lds
and
mov
loopne
add
lock
inc
loop
mov
rclb
push
mov
aad
shlb
mov
adc
es
jno
dec
enter
call
xlat
jae
stos
repnz
cmp
in
push
cs
out
add
in
mov
data16
cli
xchg
xor
lods
stos
test
icebp
aam
flds
add
pop
lock
inc
mov
push
dec
std
add
cmc
ds
sub
arpl
icebp
jl
jl
inc
stos
xchg
mov
mov
or
sbb
mov
lret
jne
lret
jbe
push
sub
outsl
in
fimuls
lock
adc
fcompl
fisubrs
out
push
jge
dec
inc
lods
jge
add
mov
inc
inc
clc
test
push
push
xlat
icebp
enter
mov
sbb
loope
into
pop
mov
adc
dec
push
mov
jae
cmp
int3
push
pop
dec
push
cmp
or
jno
add
aas
inc
sub
xor
jg
cmovb
rorb
das
test
mov
sbb
mov
fninit
jb
pop
mov
xchg
and
movsl
popf
and
data16
xchg
and
add
or
push
push
lods
pusha
mov
xor
push
sbb
scas
call
ret
es
sub
mov
inc
imul
pushf
adc
and
dec
jae
sub
jne
add
popf
loope
or
add
add
cwtl
sti
or
pop
shrl
push
sbb
jae
stos
out
xor
inc
xor
repz
test
pushf
sub
jge
sub
test
and
adc
mov
fmul
inc
mov
mov
xchg
push
inc
leave
movsb
jmp
or
fsub
loop
pop
mov
addl
notb
test
scas
xor
dec
fistl
and
xor
dec
xchg
xor
ja
dec
mov
mov
cmpl
stos
call
inc
fisubs
sub
inc
jns
ret
mov
pop
sub
cmp
adc
dec
movsl
loop
cmpsl
push
imul
pop
or
jbe
add
pop
cmp
test
add
inc
aam
pushf
sub
push
xor
xorb
add
jge
jne
pop
sub
mov
dec
cs
adc
xchg
push
xchg
int3
inc
inc
dec
or
jl
icebp
repz
inc
ret
sub
push
call
int
stos
cltd
cli
sar
aas
jae
xor
cwtl
mov
sub
push
mov
lret
pop
inc
xor
js
sub
imull
push
cltd
mov
mov
lods
ds
cmpsl
inc
add
lret
push
aam
mov
aaa
aam
mov
inc
jb
orb
int
xchg
or
adc
loope
pop
pop
sub
xor
in
adc
lock
xchg
xor
pop
sbb
push
inc
jo
clc
cmp
push
fs
push
divl
or
popf
mov
icebp
pop
je
sti
dec
pop
jnp
adc
xchg
je
out
xchg
mov
jb
fs
subl
mov
scas
push
ficomps
or
int
icebp
jne
mov
lds
dec
int
dec
insl
pusha
test
lret
mov
push
lret
pop
mov
jecxz
and
dec
loope
je
daa
fidivs
sub
add
ljmp
jns
lea
adc
jo
adc
jmp
test
xor
sti
cld
adc
jl
push
push
or
xor
push
push
popf
dec
jbe
jo
gs
xchg
bound
xchg
jb
add
dec
dec
mov
pop
insb
cpuid
inc
or
inc
or
push
jns
lret
decl
inc
pop
idiv
scas
fsubs
add
stos
mov
ds
push
mov
rcrb
rcrl
movsl
pop
arpl
cmp
mov
push
scas
subb
jp
xchg
push
icebp
dec
pop
xchg
enter
pop
push
xchg
dec
inc
jl
ret
int
mov
les
inc
out
xchg
leave
push
fwait
add
xchg
xor
mov
aas
and
xor
outsb
rorl
sub
and
add
scas
sbb
test
int
xor
div
add
insl
nop
cmp
sbb
mov
dec
sahf
xor
aad
out
jmp
cmp
test
out
add
pop
cmp
das
mov
shrl
add
inc
fdivrl
pop
adcl
sub
jmp
and
push
push
inc
pushw
jle
test
jo
cwtl
orl
out
bnd
sub
pusha
adc
outsb
test
jne
jnp
push
jl
rep
mov
sbb
hlt
mov
mov
fists
add
sbb
aam
jmp
inc
in
test
push
add
jnp
mov
dec
add
rcrl
cltd
mov
mov
adc
insb
lea
sbb
pop
aaa
add
add
movsl
and
testb
in
sbb
mov
arpl
add
lcall
mov
jno
or
xor
lahf
test
push
add
sti
aam
push
push
fwait
les
clc
lahf
cmp
sbb
and
sbbb
aaa
jne
mov
add
ja
and
test
in
pop
sub
loopne
dec
push
mov
push
cmp
stos
push
or
cs
pop
mov
jle
and
stc
out
cmp
or
ja
push
icebp
pop
arpl
and
lret
push
subb
lahf
std
or
xchg
cld
fiaddl
hlt
sahf
add
flds
inc
out
icebp
xor
jmp
adc
in
sub
lock
enter
aaa
das
mov
pop
pop
xchg
inc
adc
add
aad
js
addr16
out
imul
push
data16
lock
cmp
sbb
and
test
mov
maxps
outsl
dec
out
in
aad
jne
or
adc
jae
sub
dec
fucom
enter
push
xchg
popa
mov
adc
push
inc
and
mov
or
call
fldenv
cmpsl
popa
cwtl
nop
add
outsl
leave
cmpsl
adc
fimull
cmp
orb
out
jns
xchg
or
scas
rorl
push
xor
sub
test
shrb
test
test
push
adc
dec
jge
cmp
movsl
mov
and
test
cld
js
sahf
in
sbb
and
nop
aam
pop
inc
js
outsl
pop
or
fwait
mov
inc
js
fs
and
push
js
outsl
mov
insb
lret
js
test
mov
repnz
pop
addr16
fstps
xor
ss
jbe
loopne
sbb
cmp
test
jecxz
cmp
mov
dec
dec
bound
test
scas
mov
call
in
aaa
cmpb
mov
or
roll
aaa
mov
cmp
out
stos
and
cmp
jbe
xchg
aas
hlt
mov
jo
mov
ret
in
mov
loope
out
movsb
mov
push
push
fwait
lahf
jbe
popa
pushw
add
jo
in
ljmp
aaa
cmp
aam
pushl
push
sbb
inc
and
xor
sti
adc
addb
sahf
dec
ret
clc
aas
int3
add
adc
pop
data16
cwtl
cmpsb
xchg
mov
sub
fnstenv
sbbl
call
in
imul
mov
mov
mov
push
or
or
sub
stos
into
xchg
jae
adc
sub
xchg
imul
push
sahf
adc
inc
xchg
pop
mov
ret
test
in
and
pop
cmpsb
lahf
ja
xchg
adc
stos
lock
xchg
add
and
shl
push
hlt
roll
call
stos
jno
add
adc
pop
aam
int
and
xchg
aam
mov
sbb
cmp
xor
movsb
sub
lcall
pop
mov
out
mov
jns
xor
inc
jl
lods
js
mov
mov
mov
push
adc
mov
out
mov
imul
jbe
das
or
jne
movl
xlat
test
ja
adc
push
inc
xlat
push
pop
shrl
xor
andb
fisubrl
pop
mov
sub
in
div
test
js
adc
stos
jp
ljmp
je
jle
xchg
sbb
xor
mov
xchg
xchg
mov
dec
sub
insb
popa
test
jl
adc
movsl
fnstsw
or
jnp
movsb
in
mov
jl
mov
cmpb
scas
xchg
adc
sbbb
sbb
lcall
push
dec
cmc
jecxz
icebp
xlat
push
je
mov
cmc
je
in
mov
xlat
or
cmp
test
andl
mov
gs
pop
jnp
loopne
and
sub
inc
lds
adc
mov
fmuls
lcall
gs
add
cmc
stc
stos
in
jb
xchg
mov
sbb
and
ret
mov
pop
mov
rcl
loopne
mov
adc
ficoml
xchg
or
dec
adc
xchg
dec
bound
sub
pop
pop
push
mov
std
pop
pop
inc
xchg
lock
or
push
cli
inc
cmp
or
cmp
cs
and
fimull
add
jmp
jae
rcl
scas
lock
lock
cwtl
mov
sub
dec
cmc
inc
pop
push
adc
pushf
fsubrs
inc
ja
push
out
pop
iret
arpl
mov
sub
movl
scas
imul
int3
and
or
cmc
aas
jl
pop
ds
or
sarb
test
sbbb
test
xor
outsl
lcall
lock
adc
sbb
jmp
mov
popa
mov
rcrb
aam
xchg
std
mov
push
xorl
mov
aas
mov
mov
xchg
mov
xchg
dec
cld
arpl
mov
add
jmp
push
bswap
imul
mov
push
adc
dec
mov
jl
test
test
pop
popa
out
inc
push
ss
lea
call
scas
cmp
dec
and
and
inc
mov
dec
pusha
in
xlat
and
stos
push
cltd
neg
loopne
mov
mov
int3
and
loop
cs
imul
mov
loopne
pop
push
dec
sub
pop
aaa
add
mov
mov
orb
sbb
cmpl
test
jno
in
inc
jl
pop
sub
adc
in
cmp
addb
pop
aad
shrl
enter
push
sub
add
add
jp
out
aad
mov
jnp
loopne
daa
ret
cli
mov
jecxz
leave
adc
stc
repz
lea
scas
aas
popa
push
mov
fwait
mov
jmp
dec
jnp
into
push
jb
fisubrs
dec
iret
movsl
arpl
push
faddl
inc
mov
sbb
sub
push
cs
arpl
cmp
dec
mov
jnp
pop
cmp
adc
ret
pop
dec
jle
cld
mov
sar
cmpsl
mov
jbe
fidivs
jge
jge
and
pop
enter
movsl
in
jbe
mov
or
and
xor
ret
addr16
mov
pop
xchg
jbe
in
dec
pop
outsl
jno
jnp
jmp
pop
movsl
daa
xor
jl
xor
sub
push
ficomps
cld
pop
cli
shlb
divb
dec
inc
pop
jno
std
lahf
and
xor
xchg
pop
and
lret
or
pop
push
mov
sub
test
enter
sub
mov
mov
bound
inc
sahf
or
jge
movsl
push
rorl
dec
sub
sbb
cmp
and
filds
into
icebp
ds
in
popa
xchg
mov
xorl
or
jmp
ss
inc
rorb
insl
call
mov
dec
hlt
lfs
push
sbb
aam
clc
jae
lods
scas
xor
jmp
fs
push
std
and
popa
inc
mov
mov
in
cmp
fldenv
test
or
jne
mov
mov
arpl
mov
les
cmpsl
jmp
mov
int3
sbb
lods
sbb
or
mov
int
loopne
xor
in
sbb
pop
enter
mov
xchg
mov
sbb
xor
sub
sub
inc
dec
popf
cmp
jl
fildl
in
dec
mov
shr
add
popa
out
push
popa
cs
pop
hlt
pusha
lret
pushf
mov
pushf
repz
xchg
mov
sub
cld
jb
sub
cmp
in
or
jge
repnz
pusha
je
cmc
rcll
cmp
imul
iret
aaa
in
aaa
xor
out
in
daa
sarl
mov
jno
xor
mov
call
jle
lods
out
pushw
ret
mov
cmpsb
jp
sbb
ret
inc
imul
jmp
repz
test
fidivrl
xlat
or
mov
es
push
inc
push
jae
ret
mov
lock
xor
aaa
push
lods
jg
imul
and
in
mov
sub
sub
mov
mov
pop
mov
iret
sbb
push
mov
ja
jbe
fwait
popa
mov
in
push
ljmp
or
loop
fnstenv
movsb
sub
in
jge
stos
scas
sub
mov
sbb
in
inc
scas
js
cld
repnz
les
or
jnp
js
imul
lods
dec
xor
mov
xchg
cmpsl
adc
lock
adc
xchg
add
call
mov
dec
enter
cmpsl
inc
int
pusha
ljmp
add
aad
and
pop
jmp
push
xchg
mov
hlt
adc
repnz
xchg
insl
dec
test
mov
sub
inc
jns
mov
and
test
cmpsb
and
bound
fwait
mov
xchg
add
cmp
sub
int
or
pop
jo
movsl
sub
dec
xor
mov
adc
add
leave
xchg
cmp
test
fsubrs
mov
fidivs
fbld
pop
add
test
xchg
sbb
test
mov
xchg
adc
mov
mov
mov
jl
cmpsb
data16
jnp
adc
les
decl
mov
sub
push
mov
cs
pop
sub
andb
push
fdiv
mov
nop
mov
test
or
mov
scas
mov
lahf
es
shlb
das
and
and
enter
bnd
and
adc
jbe
js
cmpl
cld
into
pop
das
and
cltd
imul
jge
in
test
pop
mov
inc
jns
xchg
sbb
jmp
inc
jns
scas
fsubs
stos
xchg
test
add
jmp
nop
mov
pusha
push
mov
loop
pusha
call
aam
add
push
pusha
mov
add
je
pop
jne
xchg
mov
insl
arpl
das
xor
mov
xchg
adc
pop
lahf
std
sbbl
pop
call
dec
loopne,pn
rorl
cmp
mov
cmp
mov
out
adc
pop
dec
inc
mov
fisttpl
lock
lds
sti
icebp
xor
popa
jae
movsl
pop
outsb
aaa
push
imul
sbb
ds
in
jno
sbb
pushf
inc
cmp
into
and
lcall
unpckhps
jge
xchg
ja
shrl
movsb
rclb
sbb
icebp
in
dec
mov
or
scas
and
push
lock
jmp
dec
aam
jnp
or
jecxz
push
je
inc
jge
sbb
mov
adc
ss
out
inc
or
xchg
sarl
mov
sub
dec
stos
and
rcrb
das
outsl
outsb
fsubl
mov
xchg
and
scas
mov
mov
lock
sbb
in
cmp
cmp
nop
fnsave
out
inc
mov
mov
xor
imul
lock
adc
incl
mov
inc
jns
sarl
int3
mov
jae
scas
pop
pop
mov
pop
stos
sbb
pop
dec
and
out
add
out
and
cltd
mul
sarl
xor
imul
insl
ds
and
ja
jg
clc
test
movsb
loope
adc
movl
int3
cwtl
sahf
mov
inc
xchg
js
mov
pop
xor
fwait
imul
pop
push
dec
sbb
adc
mov
mov
sbb
cmp
jb
mov
push
inc
inc
lods
jle
mov
pop
out
mov
add
jmp
mov
cmp
nop
push
pop
in
jecxz
fisubs
dec
pusha
xor
loop
lcall
adc
add
xorl
fldl
pop
cmp
mov
fdivs
xor
mov
lock
lret
sbb
in
or
dec
dec
in
inc
fistps
and
loope
loop
inc
aas
mov
cmpsb
sbb
jo
loopnew
lods
lahf
test
mov
std
or
add
lret
imul
test
jg
dec
pop
jle
pop
push
pop
jmp
outsb
addl
jns
sti
lahf
es
ret
lahf
and
lret
cmp
jg
fwait
pop
push
std
pusha
je
xchg
xchg
mov
gs
adc
cmpsb
push
in
lock
pop
jbe
fsub
xor
inc
movsb
in
ja
mov
jle
cmp
mov
adc
pop
out
adc
out
sbb
xor
add
jnp
or
cs
cmp
xor
ja
movsl
stos
testl
pop
repnz
inc
enter
or
mov
pop
out
xchg
orl
mov
sbb
sbb
add
outsb
fwait
dec
repz
lods
mov
data16
push
sbb
and
pop
test
cmp
fnsave
sbb
jl
mov
std
cltd
jb
and
pushf
mov
dec
lret
icebp
leave
sub
adc
data16
adcl
into
dec
mov
mov
sbb
ds
test
inc
stos
rcrl
mov
or
or
fdivrp
out
sarl
add
js
fcomi
push
and
xchg
xchg
and
ja
xchg
mov
pop
fwait
sarb
stc
jae
lcall
and
pusha
lea
out
xchg
adc
inc
stos
and
fsubl
fcom
sti
add
leave
imul
popa
xor
aad
xor
add
mov
xchg
gs
mov
insl
mov
test
mov
out
mov
jmp
int
or
mov
dec
mov
das
arpl
aam
rcll
xchg
xor
addb
and
movsl
loopne
push
scas
in
dec
push
lock
xor
or
enter
adc
movsb
cli
ret
pop
insl
adc
or
jge
xchg
xor
jecxz
into
lahf
xor
sbb
clc
add
mov
sarl
mov
pop
xchg
sub
cwtl
movsb
lahf
xor
stc
cltd
add
mov
out
dec
mov
loope
out
in
rcr
jns
xchg
cmp
mov
inc
cmp
sub
test
ucomiss
outsl
out
or
adc
cld
loop
clc
push
popl
adc
inc
jnp
xor
leave
fldl
mov
add
mov
popf
rcrl
rorl
test
pop
call
xchg
adc
aaa
push
pushf
scas
cli
inc
clc
jp
cld
fildl
push
fwait
sbb
call
bound
lock
or
sub
adc
test
les
sbb
in
test
mov
imul
daa
stos
add
push
mov
pop
iret
repnz
out
out
mov
ja
cmc
add
popf
addr16
cmpsb
jne
sarl
xchg
pop
scas
mov
xchg
iret
imul
testb
mov
mov
adc
inc
or
out
push
pop
iret
and
test
xor
out
sbb
mov
in
andb
lds
pusha
inc
out
xor
jns
lods
xchg
xor
das
adc
jne
orl
add
jle
add
addr16
stos
cmpsb
xchg
addr16
xchg
push
sarb
popf
outsb
jg
loope
mull
fstpt
es
fs
jne
scas
mov
scas
sbb
xor
xor
cmpsb
out
into
fmull
sbb
lods
push
fadds
push
bound
sbb
ret
pop
test
inc
xchg
jecxz
notl
push
and
or
hlt
and
subb
mov
mov
fisttps
cwtl
les
mov
test
cwtl
nop
mov
sub
hlt
mov
fucomp
xor
cltd
lret
fstp
rcrb
shlb
shl
pop
les
imul
jmp
imul
mov
test
test
pop
es
ret
mov
lahf
or
fdivl
mov
addl
outsl
pop
mov
dec
icebp
mov
add
jmp
jns
pop
leave
xchg
les
push
pop
incl
xchg
sti
stos
dec
cmp
mov
adc
lea
lock
mov
inc
xchg
nop
jb
mov
sbb
jl
ja
icebp
addb
aad
movsb
mov
jg
push
or
push
movsl
decb
rorl
out
push
mov
jb
cmp
dec
lock
pop
and
in
mov
mov
pushf
cmpsb
push
inc
ror
fidivrs
psadbw
cmc
push
fnsave
push
pop
popa
pop
mov
cli
mov
adc
test
hlt
test
dec
js
add
mov
adc
sub
hlt
sbb
mov
sbb
push
jmp
cli
mov
pusha
pop
hlt
fs
pand
jle
mov
adc
xchg
xchg
pop
lea
mov
sbb
cmp
cmp
stos
push
loope
inc
push
mov
enter
mov
mov
out
push
xchg
lcall
lea
inc
xor
and
add
subl
inc
rcrb
adc
pushl
pushf
cli
or
xor
jnp
fdivrs
dec
enter
adc
add
cmp
and
jne
stc
shll
sbb
push
cs
bound
les
das
cmp
fwait
jp
sarb
jbe
mov
aaa
xor
add
sbb
pop
cmpsl
bound
mov
jno
out
shlb
test
ficomps
inc
adc
xchg
cmp
pop
call
push
mov
or
push
test
cs
sbb
ret
inc
mov
sub
insl
iret
jl
aaa
pop
cmp
push
mov
fadds
out
test
jecxz
add
dec
daa
enter
and
inc
mov
out
sub
out
pop
arpl
sbb
xor
mov
and
mov
stos
cmpsl
xor
xor
pusha
sub
add
sub
shll
xor
aaa
and
out
mov
popa
jmp
push
std
repz
test
insb
mov
xor
lods
jne
mov
adc
lret
inc
inc
sbb
pop
mov
mov
outsb
sub
jne
mov
jae
cmp
and
xor
cmp
mov
out
imul
mov
in
sbb
movsb
jl
cmp
cs
adcl
aas
aad
rorl
ds
repz
lods
sbbb
xorb
xor
jge
test
xchg
leave
add
cmp
xchg
and
and
test
sbb
pusha
dec
dec
hlt
sbb
mov
orl
jb
mov
clc
sbb
stc
add
push
and
jo
repz
addr16
popf
cwtl
xor
pop
mov
pop
adc
jbe
xor
adc
mov
mov
push
push
in
push
call
lods
imul
in
fprem
mov
cmp
inc
mov
out
or
dec
fsubs
push
sbb
sub
das
rol
fwait
cwtl
cmpsb
shrl
int3
lods
fldcw
or
daa
and
arpl
xor
scas
push
ficomps
std
push
or
fwait
mov
test
or
fstps
fwait
std
orb
xchg
in
sub
gs
jl
add
add
addl
cli
lods
xor
inc
into
jg
sbb
icebp
cmc
pop
in
imul
arpl
movsb
sbbb
aaa
jle,pn
cld
mov
in
push
mov
add
test
pop
pcmpgtb
adc
fstps
lock
push
and
mov
jb
into
arpl
inc
pop
push
add
sub
dec
dec
inc
and
cmp
mov
sub
sbb
stos
imul
push
dec
in
dec
lret
mov
mov
rcrb
xor
pop
dec
fnsave
in
jae
push
lahf
aaa
dec
inc
int3
gs
mov
xchg
mov
lahf
jne
dec
adc
dec
xor
fdivs
sbb
xchg
cmc
jbe
das
add
dec
nop
sub
xchg
test
push
les
adc
inc
cmp
mov
xor
sbb
push
movl
jnp
cmp
jp
cs
incb
in
fcmovu
jmp
mov
daa
jns
mov
push
aam
das
sub
cmp
test
add
in
sbb
dec
mov
jl
add
xor
cli
xor
test
mov
cmp
jmp
dec
and
fdivrl
jbe
xorb
pop
xchg
push
xor
xor
mov
pop
test
xchg
inc
push
adc
rol
js
push
jg
imul
jmp
sbb
or
lods
mov
loop
enter
add
or
or
mov
sub
popa
pop
mov
std
dec
cmp
sub
sbb
nop
rcrb
mov
or
dec
popa
mov
adc
je
test
fs
out
ds
sub
xor
push
add
add
scas
jb
push
jmp
loope
mov
hlt
mov
jns
outsl
popf
int3
push
pop
adc
iret
notb
xchg
call
or
mov
push
lahf
out
clc
scas
jbe
push
ret
mov
cmp
or
stos
movsb
mull
xchg
mov
shlb
and
mov
mov
iret
loop
jle
push
and
cmc
aas
add
lods
aad
add
jge
inc
xchg
je
and
stos
add
hlt
sbb
xor
mov
imul
dec
scas
dec
cmp
lods
dec
cmc
mov
jae
push
jge
imul
por
lcall
shll
or
pop
pop
sub
lods
sub
ljmp
and
xchg
pusha
test
and
into
dec
sub
into
push
divl
jno
bswap
cmp
jg
lcall
jg
or
test
mov
mov
scas
jns
push
pusha
mov
mov
clc
pop
jns
cmp
adc
das
test
pop
pushf
push
insb
orl
loop
sbb
push
and
mov
out
fninit
cmpsb
scas
cmp
push
add
ret
nop
mov
add
hlt
loopne
and
adc
sub
lods
movsl
sbb
sbb
negl
sub
out
xor
mov
insb
pop
ds
mov
mov
scas
cmpsb
add
xchg
sub
clc
dec
mov
ja
xchg
fisttpl
jb
push
mov
jp
sub
stos
and
jg
mov
jbe
mov
xchg
cmp
mov
stos
loopne
push
ja
dec
sub
sti
aas
leave
mov
or
out
loopne
mov
not
or
mov
xorl
aam
cmp
mov
sbb
sbb
add
pop
dec
sbb
movsl
jne
inc
ror
mov
xor
fnsave
dec
or
lods
cmp
xchg
js
xchg
jns
and
jno
loope
cmp
data16
daa
shl
repnz
fmuls
add
mov
xchg
mov
in
jmp
out
xchg
mov
jno
sbb
shrb
push
ljmp
hlt
add
mov
mul
mov
jns
sbb
int
loope
cmpsb
clc
add
pusha
dec
sbb
and
xchg
fcmovbe
sub
cmp
or
mov
add
push
dec
xor
adc
sub
ljmp
xor
test
or
ficomps
xor
bound
jecxz
loope
jae
adc
mov
les
adc
not
or
stos
mov
add
testb
mov
shlb
mov
xor
push
cmp
cmp
fiaddl
es
loop
or
ljmp
ficoms
stos
ja
imul
mov
pusha
fisubs
into
scas
push
les
dec
mov
dec
ss
dec
maxps
push
xchg
insb
and
sub
push
test
gs
mov
nop
inc
cs
mov
addr16
into
xor
fnsave
mov
lock
ljmp
xchg
hlt
fisubrl
lock
testb
jp
movsl
pop
int3
xchg
sub
push
xchg
dec
leave
xchg
outsb
jo
sbb
fnstcw
inc
mov
cltd
test
in
jge
pop
mov
inc
repnz
jno
insb
data16
dec
jmp
adc
jecxz
jmp
xor
bound
les
jle
std
rol
pop
sbb
xchg
outsb
jl
jae
sub
push
dec
aad
push
push
in
lcall
repz
sub
mov
inc
insb
xor
hlt
mov
movsb
and
js
add
fiadds
psraw
fsts
rclb
xchg
aas
test
nop
into
lds
cmp
jno
add
inc
aas
push
sbb
js
rcll
push
or
std
cld
imul
or
imul
outsb
jno
daa
fildll
mov
sti
out
loop
ret
xor
push
rcrb
push
cs
mov
fisttps
fcompl
stc
fisubl
int
and
mov
pop
bound
cmpsl
xchg
jae
jo
jge
out
lahf
in
or
jbe
xor
xor
pushf
cmp
sbb
rorl
add
scas
pop
stos
sbb
mov
shr
sbb
lahf
pop
testb
hlt
mov
mov
adc
clc
jo
xlat
adc
push
jns
aad
leave
jge
push
sbb
in
les
dec
imul
jg
sti
lret
mov
insb
repz
xchg
dec
sub
in
hlt
sbb
fwait
enter
scas
cwtl
fxsave
inc
push
mov
xor
cltd
std
jp
fwait
je
mov
ret
lock
mov
jecxz
mov
mov
xor
dec
inc
push
or
add
bound
push
or
push
or
outsl
sbb
outsb
xor
ljmp
ret
daa
or
lods
adc
inc
mov
jg
dec
mov
loopne
and
out
loope
or
mov
xor
notb
cmpsl
and
xlat
mov
mov
mov
pop
or
adc
scas
mov
std
clc
outsb
xchg
adc
cmp
cmp
imul
jo
push
inc
xchg
cmp
clc
cli
pop
or
scas
adc
gs
pop
and
daa
sub
cmpsl
gs
push
fsub
jbe
lcall
sbb
pop
into
mov
aad
stos
incb
add
jp
in
push
push
inc
sub
pushl
pop
mov
jp
inc
nop
xchg
fldl2t
call
outsb
mov
jo
je
insl
mov
outsb
mov
and
lcall
pushf
not
and
or
sahf
pop
sub
test
mov
aad
mov
fistpll
and
jno
dec
or
push
mov
fcmovnbe
int
pop
push
ds
sub
sub
fstl
sbb
add
lock
cmpsl
pop
sti
xor
jg
mov
pop
incl
sub
cmp
mov
das
cmp
push
test
xchg
std
in
ja
jns
jae
cmp
lret
mov
or
jle
xchg
jns
mov
push
test
dec
sub
add
lock
rcrb
fcompl
add
sbb
sti
add
jle
aad
bound
enter
cmpsb
add
loop
mov
xorl
test
jo
or
movsl
fsubrl
daa
sbb
dec
stos
mov
mov
xchg
mov
push
fdiv
push
leave
mov
mov
jp
rcll
arpl
mov
and
xchg
daa
std
sub
dec
lcall
enter
dec
inc
mov
outsl
call
stos
mov
dec
mov
pop
dec
imul
stc
fs
negl
add
sub
mulb
or
pushf
leave
inc
mov
push
xor
mov
adc
jmp
movsb
lods
int
sub
mov
pushf
pushf
mov
dec
pop
jl
insl
or
and
sbb
adc
jno
sub
in
jno
bound
popa
mov
xlat
js
in
push
mov
or
push
out
xchg
aad
mov
inc
clc
adc
add
mov
cmpsb
inc
add
pushf
loopne
sti
insb
lock
dec
xor
popf
jo
mov
mov
fcmovnbe
and
pop
or
dec
dec
fs
lcall
dec
mov
stos
mov
dec
dec
imul
mov
jnp
add
mov
cmp
and
mov
jge
fcoml
in
cmp
fwait
push
stos
and
jp
pop
fadd
outsl
push
pop
mov
jl
mov
push
loop
adcl
mov
call
push
ficomps
push
imul
inc
push
mov
sub
jne
dec
shl
scas
movsl
adc
jle
cmc
pop
ds
outsl
mov
sub
and
and
vmread
mov
std
cli
jb
xor
rol
sar
leave
push
jge
mov
enter
cmp
sbb
xchg
pop
mov
js
outsb
pop
cmp
test
jae
sbb
mov
scas
cmp
add
and
and
push
movsb
xor
xor
sahf
test
jp
cmp
mov
dec
jns
rolb
pop
mov
xchg
inc
pop
dec
xor
call
in
sbb
and
mov
and
loop
stc
and
push
es
sbb
cmovle
mov
lcall
int3
aad
push
out
mov
fistpll
xchg
sarl
mov
mov
push
sub
dec
subb
xor
or
pop
jae
cmp
aaa
mov
jb
clc
pushf
inc
popa
adc
pop
fstps
jmp
sarl
inc
aaa
loopne
sbb
pop
cmp
and
dec
mov
dec
fldl
pop
cs
pop
stos
fbstp
xor
inc
gs
cmp
xchg
movsl
inc
xchg
mov
sbb
imul
pop
enter
mov
push
adc
imul
cmp
mov
mov
es
out
and
mov
gs
fs
int
mov
dec
jl
hlt
xchg
lahf
cli
mov
js
in
outsl
fstpl
push
add
jno
addr16
sahf
das
mov
inc
adc
fs
fiadds
imul
xchg
cmp
loopne
push
sbb
das
xorb
and
sub
pop
xorl
xchg
add
cmpsl
cmpsb
push
mov
xor
lahf
in
dec
das
nop
in
ret
mov
sahf
push
iret
cmp
popf
sbb
fwait
push
dec
mov
dec
push
and
sbb
das
push
add
imull
mov
fwait
mov
or
movsb
in
fbld
pop
inc
mov
and
xor
lcall
or
sbb
popa
xchg
sub
ficomps
push
ficomps
push
in
mov
hlt
cwtl
icebp
sbb
push
cmc
mov
rol
lods
and
and
push
pusha
loope
lods
inc
push
cmc
fldenv
xchg
xchg
in
cmp
xor
xchg
dec
cld
xor
mov
mov
test
es
push
divl
es
lods
jo
jbe
push
cmc
xor
fnstenv
cmp
mov
sbbb
and
lahf
mov
popa
icebp
popa
jl
xor
and
pop
rclb
mov
xchg
push
push
lds
inc
or
jo
pop
insl
mov
push
add
dec
mov
xchg
pop
sbb
movsb
jmp
adc
jg
push
sti
sbb
or
jbe
pop
enter
sub
sub
push
shlb
mov
or
inc
hlt
and
mov
pop
ljmp
mov
cli
or
fcoms
lock
pop
dec
cwtl
cmp
notb
or
mov
ret
xchg
or
clc
pop
and
mov
movsb
push
mov
dec
cwtl
ret
ljmp
inc
add
push
add
and
mov
dec
ficoml
loopne
jae
xchg
ljmp
cltd
cli
mov
dec
jne
push
xor
test
cld
push
fmul
xchg
shrl
push
push
ljmp
lock
psadbw
xor
mov
sub
jmp
mov
outsb
pop
rorb
dec
aaa
xchg
xor
std
sub
imul
jb
and
mov
clc
nop
daa
pop
fbld
sub
cmp
lea
sbb
out
cli
push
pop
push
dec
test
or
pop
add
int3
sub
sub
loopne
test
imul
gs
movd
cmp
repnz
xchg
mov
sub
das
test
mov
jne
mov
sbb
lea
adcl
push
dec
mov
jmp
cmc
mov
hlt
cmp
push
cmp
std
jnp
sbb
mov
push
pop
sbb
ret
push
xchg
cmp
psrlw
dec
ficomps
subb
adc
mov
pushf
ret
and
and
in
sub
mov
mov
test
cmpl
arpl
movsl
stos
pop
into
xchg
mov
cs
xor
lahf
lea
jge
ffreep
lea
cmp
mov
push
adc
xchg
rcr
jge
inc
mov
jno
jg
cmp
movsl
lea
cmp
dec
sub
movsl
push
addr16
or
adc
xchg
mov
xchg
sti
pop
mov
imul
cmpsb
icebp
push
in
jno
push
out
fs
inc
lret
sbb
and
or
dec
das
or
add
sbb
jg
jecxz
incl
aam
mov
ljmp
jb
push
pusha
pop
jb
mov
add
popa
scas
jg
clc
fisubs
cmp
pop
test
mov
fistps
add
stc
sbb
xor
mov
sbb
jne
orl
pop
sbb
mov
jo
push
das
ror
fldenv
xor
out
inc
outsl
jle
in
jle
popa
push
jge
mov
and
test
icebp
iret
adc
les
popl
data16
xor
popf
int
test
movsb
lret
cmpsb
daa
inc
cs
xchg
imul
or
les
jb
xchg
cmpsl
jge
int3
inc
enter
xchg
shll
inc
enter
add
sti
adc
adc
jge
fsubrl
outsb
dec
cmpsb
test
cmp
pushf
movsb
push
aas
or
negb
adc
bound
mov
lcall
cltd
pop
mov
cld
loop
sarb
pop
xchg
jle
imulb
sahf
outsb
push
adc
sub
rcr
ret
in
push
je
outsb
sub
sub
rcrb
cs
adcb
dec
mov
mov
push
sbb
pop
movsb
mov
rolb
movsb
or
in
les
ds
aaa
ficoml
and
push
clc
jmp
insl
push
test
out
jle
sbb
rclb
or
and
outsb
gs
les
xchg
scas
or
ficompl
mov
mov
add
out
fcmove
fisubl
sbb
aam
shlb
stc
mov
sbb
mov
sti
dec
fiadds
push
std
push
jl
in
das
pop
mov
rcl
jb
xchg
ss
push
cmp
insl
and
push
or
mov
cmc
xor
inc
inc
pop
lret
fsubrl
adc
push
repnz
in
sti
xor
cmc
outsb
ss
cmp
fs
je
mov
out
mov
push
xchg
push
add
fwait
shlb
push
jecxz
inc
mov
cmp
fsubp
popf
adc
sbb
data16
mov
adc
cmpl
mov
cmp
add
mov
in
push
cltd
jge
cmp
in
mov
or
out
and
and
mov
daa
jp
lret
outsb
jmp
rcr
adc
push
es
fimuls
aaa
pop
fs
push
imul
lret
push
mov
push
adc
adc
popf
pop
pushl
push
inc
mov
push
ret
sub
inc
je
imul
in
cmp
jge
adc
aaa
shr
mov
shlb
jp
mov
mov
call
bound
sahf
jno
stos
lret
sbbb
pop
pop
mov
jo
push
and
jl
repnz
jl
push
push
lds
xchg
int
rcl
add
out
mov
movsl
lcall
out
cli
inc
push
ror
sub
sti
fsubrl
in
push
fbld
pop
dec
lret
push
pop
in
imul
adc
mov
in
repz
mov
xor
or
mov
scas
shr
test
sarl
add
xchg
or
leave
cmp
pusha
popa
lods
aas
add
ja
cmp
xchg
xlat
mov
lea
int
dec
enter
and
sbbl
mov
iret
and
inc
shlb
mov
pop
flds
popf
movsb
xor
inc
pop
inc
mov
idivb
aad
scas
fldcw
mov
stos
mov
inc
rclb
movsb
add
out
popa
adc
push
lret
xchg
jnp
pop
jb
xor
cmpsl
mov
and
push
fsts
push
xor
pop
mov
scas
hlt
cmp
repnz
xor
pop
push
dec
mov
push
cmp
pushf
icebp
pop
push
bound
add
mov
fwait
inc
jge
mov
jbe
cwtl
jmp
call
sub
std
fmul
je
xor
mov
xchg
xchg
out
xchg
shl
mov
or
xchg
sbb
dec
aad
pop
jbe
xchg
mov
popf
in
int
sub
push
pop
aad
cld
add
js
sub
pop
cmp
ds
sub
data16
xchg
mov
fwait
xchg
push
fs
ds
sbb
add
mov
mov
fwait
pop
cwtl
sub
out
insb
sbb
cmp
jae
shl
mov
xchg
dec
jno
fisttpll
movsb
rclb
add
mov
out
mov
int
inc
pop
mov
insl
jbe
sbb
pusha
lahf
xchg
lock
fisubl
dec
int3
or
nop
inc
adc
sub
pusha
and
cmpsb
sub
pcmpgtw
push
mov
pop
pusha
fcomi
xor
ror
mov
mov
cli
mov
cltd
jg
pop
mov
cs
push
inc
sub
sub
insb
out
or
dec
push
add
push
lret
insb
data16
mov
int3
cmp
out
lock
xchg
mov
lahf
push
out
jmp
and
pop
ret
mov
adc
mov
lods
adc
mov
ja
rolb
fdivl
addr16
jnp
inc
xorb
cltd
rclb
mov
sub
sub
divl
daa
jp
xchg
int3
inc
and
divb
pop
into
cmp
mov
loop
jnp
jge
mov
cmpsl
jg
aas
mov
and
sti
arpl
mov
cmp
sub
sahf
into
push
cli
pop
dec
and
popf
je
movsl
push
out
add
jmp
inc
sbb
popa
scas
sbb
int3
inc
test
cs
sahf
nop
fptan
test
xor
call
mov
in
pop
test
pop
xor
mov
adc
push
or
ljmp
lret
es
orl
cmc
pop
clc
inc
and
dec
sarl
popf
sbb
fnstcw
mov
movsb
stos
or
xchg
push
dec
xor
loope
pop
mov
rcll
pop
sub
cs
dec
loop
in
or
mov
cmp
les
lret
mov
js
xchg
xor
pop
out
cs
push
xchg
vpand
fadds
pushf
mov
sbb
mov
push
inc
xchg
mov
xor
in
cmpsb
push
sub
xlat
mov
mov
lret
mov
sub
aam
cmp
push
or
adc
aas
jecxz
ss
sbb
mov
push
test
aad
push
xor
ds
cmp
clc
xchg
push
push
mov
mov
test
sbb
push
mov
mov
xchg
aaa
lea
int3
insl
cmpb
push
movsl
jo
pusha
in
mov
pop
lock
sub
adc
pop
enter
lea
xor
jg
inc
jl
cmp
push
dec
dec
and
inc
xchg
push
sti
fbld
repnz
icebp
mov
fadd
mov
loope
popa
pop
sbb
dec
scas
scas
dec
push
dec
xchg
cmp
jle
jns
xlat
leave
clc
adc
sbb
nop
pop
into
mov
outsb
jge
push
dec
jge
sbb
data16
hlt
fnstenv
out
add
jl
and
mov
jmp
push
mov
pop
stos
add
sub
push
sbb
add
mov
dec
or
into
push
enter
lcall
or
inc
test
aas
dec
ret
shlb
nop
dec
shl
les
push
stos
dec
cmp
cmp
mov
mov
out
dec
inc
mov
push
test
jb
mov
push
loopne,pt
mov
xor
pop
adc
add
insl
pop
push
sbb
cltd
sub
jno
out
out
mov
popa
andl
shlb
jb
mov
xlat
cmp
cmp
pushf
repnz
pmaddwd
dec
ljmp
outsb
test
adc
setp
stos
cltd
jmp
outsb
insl
mov
or
shrl
xor
je
stc
or
aaa
jle
in
jg
push
decl
das
and
call
popa
jnp
into
cmp
inc
push
popf
or
arpl
stc
mov
std
jne
nop
sti
mov
roll
cwtl
out
sbb
cs
mov
jl
jecxz
inc
dec
or
aaa
ret
aad
mov
movsb
sbb
sbb
cmp
outsb
jp
sbb
pop
dec
mov
in
ret
mov
or
stos
call
aad
or
fbld
push
notl
xor
dec
and
fucomi
adc
ljmp
mov
lcall
xchg
dec
rclb
notl
xor
push
movsb
outsb
lret
enter
pushf
push
mov
xorb
xchg
push
or
sub
or
daa
xorb
outsl
fistl
scas
xor
dec
or
cmp
pop
ret
in
test
movsl
inc
stos
es
int3
cmp
xor
xchg
inc
lock
in
movsl
jo
jle
xor
mov
imul
sbb
pusha
add
lds
addr16
jb
mov
mov
dec
mov
mov
mov
stc
mov
insl
xor
jb
outsl
loopne
int
push
cli
fcmovu
ficomps
cld
outsl
mov
xchg
jecxz
sub
sub
mov
mov
enterw
xor
pusha
jbe
inc
push
sub
in
out
xchg
cmp
call
decb
fwait
cld
sbb
loope
sub
or
loope
insb
je
and
xchg
adc
jo
mov
adc
jmp
jnp
leave
bnd
scas
mov
xor
pop
jmp
push
mov
into
sbb
inc
dec
push
outsl
xchg
repnz
fildl
xchg
jno
mov
dec
rol
fldl
pop
mov
adc
jge
push
test
mov
sahf
leave
hlt
sub
jge
adc
push
jge
xchg
repnz
inc
pop
mov
and
sbb
popf
cmpsl
pusha
loope
push
mov
mov
fwait
stc
pop
notl
mov
ja
mov
out
xor
push
lods
push
pop
push
lret
rcll
aad
sbb
loop
stos
sub
sarl
jno
mov
icebp
push
and
jnp
xchg
mov
jnp
xchg
mov
mov
and
arpl
aad
in
mov
push
pop
jecxz
mov
jge
mov
pop
in
sub
cli
push
xor
testl
push
js
pop
repz
cld
sahf
mov
dec
fadds
stos
mov
jle
aam
mov
fidivrl
cmp
and
lods
dec
and
test
int3
test
xlat
mov
mov
and
in
mov
leave
fdiv
and
cli
das
cli
test
and
cmp
out
into
imul
adc
mov
mov
bound
in
xor
xor
cmp
and
sub
loope
xor
sbb
push
test
dec
sbb
pop
dec
cmc
outsl
sub
push
clc
cmp
int
push
sbb
outsb
add
add
add
push
jnp
sub
std
insl
lret
ja
fdivp
je
les
jp
mov
sub
clc
and
dec
hlt
scas
add
das
mov
jle
push
sahf
push
jp
cltd
fwait
or
mov
call
sub
adc
lret
mov
add
jbe
aas
push
movsb
add
fsub
mov
movsl
int
in
in
adc
insb
add
daa
imul
mov
cmp
repnz
mov
inc
mov
cli
div
test
lcall
insl
mov
dec
push
jmp
jmp
pop
adc
aaa
pop
cli
and
xor
push
scas
jbe
xor
cmp
std
inc
push
int3
push
fs
add
pop
dec
inc
push
negl
aaa
movsl
dec
xchg
mov
rcrl
fldenv
jno
je
cmp
mov
jge,pt
std
pop
lcall
outsb
dec
dec
lret
movsb
cmp
jne
dec
inc
fisubrl
les
dec
std
stos
sub
stos
xor
jecxz
pop
cmp
cmpsl
pop
pop
sahf
cmc
dec
xchg
push
ss
cli
in
leave
in
jns
cli
jb
xchg
cmc
movsb
pop
fisttps
idiv
scas
and
add
lods
xchg
sbb
in
mov
lret
mov
and
sub
jle
xchg
roll
jp
xchg
in
mov
sti
cmpsl
xchg
xchg
sbb
push
sti
jae
cwtl
shrl
jo
ss
aad
add
jnp
scas
stos
xor
sti
add
insl
xor
cmpsb
jne
mov
jb
in
push
sbb
dec
or
push
arpl
or
sbb
mov
les
test
call
sbb
xchg
lods
adc
cmpsl
pusha
out
xchg
loope
aad
inc
lret
loopne
mov
xchg
lcall
rcrb
insl
and
pop
fsubl
aaa
mov
mov
enter
pop
pop
cmc
xor
dec
jl
aas
inc
push
dec
mov
add
shrl
mov
pop
jbe
daa
rclb
cmc
inc
sub
sbb
push
xor
jbe
out
lcall
push
and
cmp
xor
imulb
bound
inc
pop
lret
jg
pop
mov
inc
cmp
loop
mov
fwait
sbb
iret
pop
push
pushf
dec
add
addr16
hlt
xor
xor
adc
insl
and
or
stos
and
loope
pop
mov
mov
sbb
cmp
sub
add
pop
loope
push
jecxz
daa
push
rorb
jae
shr
add
mov
pop
xor
stos
dec
sbb
movsb
mov
mov
sarl
mov
cwtl
inc
pop
loop
and
loop
sahf
fs
push
stos
mov
mov
ss
or
imul
out
mov
pop
mov
push
xlat
test
das
loopne
cmp
in
pop
enter
scas
pop
mov
xor
inc
add
mov
icebp
jae
daa
mov
sti
lahf
pop
push
add
fldenv
cwtl
jmp
test
fmuls
nop
mov
gs
mov
xchg
or
lahf
sub
pop
mov
mov
shrb
repnz
push
mov
push
js
inc
push
or
loopne
dec
add
insl
clc
imul
push
add
push
xchg
dec
jno
nop
and
into
adc
ret
aas
rcll
mov
mov
call
fsubs
lds
movl
cmpsl
cmp
jmp
mov
and
cmpsl
add
pushf
cmp
mov
cmpsb
ret
inc
pop
dec
add
popa
loope
cmp
imul
jecxz
push
xchg
bound
decl
insl
imul
sarb
sub
idivl
int
jl
pop
testb
adcb
in
into
iret
sqrtps
mov
mov
mov
sub
sbb
arpl
call
jmp
rcr
pop
dec
fimuls
data16
mov
pop
int
mov
dec
add
mov
xchg
fcmovne
mov
push
gs
jbe
int3
push
pop
std
lds
clc
xor
mov
or
sub
loop
adc
mov
cmp
neg
sbb
xchg
inc
js,pt
pslld
dec
aam
dec
dec
and
test
jge
cmp
dec
jo
sub
jne
je
mov
loop
jmp
adc
mov
dec
or
sub
adc
mov
cld
in
dec
test
jmp
aas
mov
and
repnz
xor
xor
jg
sbb
adc
mov
sub
into
pusha
test
jnp
sbb
int
inc
loope
pop
leave
dec
or
or
adc
lret
sub
sbb
loop
cmc
rep
js
pop
call
inc
test
outsb
mov
cmp
xor
sbb
out
pop
inc
xor
cmp
push
imul
adc
cwtl
out
xchg
jne
or
enter
loop
sbb
sbb
sarl
bound
lea
imul
sbb
aaa
mov
enter
scas
jl
shll
xor
enter
xor
xchg
xor
mov
data16
mov
pop
inc
push
pop
and
lods
lods
loope
push
mov
inc
shrl
fcomp
aas
adc
jnp
fstpt
bound
les
out
mov
ds
mov
mov
fwait
movsl
push
insb
add
xor
push
es
lods
lods
stos
repz
xor
add
jmp
mov
pop
xor
sti
andl
shlb
sar
pusha
sbb
dec
mov
push
mov
cmp
mov
and
mov
divb
hlt
push
sbb
pusha
mov
push
mov
push
jne
in
lcall
aam
into
jmp
sbbb
ja
xor
mov
jg
xchg
fcmovnbe
xor
js
pop
outsb
sbb
sub
inc
mov
mov
mov
shl
out
clc
inc
adc
inc
adc
pop
aas
mov
inc
lock
ret
or
xchg
les
jns
ror
andb
or
dec
push
fistps
es
leave
leave
int
xor
in
in
sbb
arpl
cmp
arpl
sbb
add
cmpsl
adc
outsl
sahf
jle
mov
adc
inc
mov
loope
mov
clc
out
add
mov
and
xchg
sub
lcall
cmp
and
lret
mov
sub
dec
push
dec
data16
loop
add
test
test
test
sub
popf
push
mov
insl
insl
xor
mov
pushl
aam
js
and
repz
push
jne
jmp
cmp
test
jg
movsl
in
rorl
inc
int
or
inc
adc
sbb
sub
pushf
add
mov
adc
rcrl
xchg
add
xor
enter
loop
ret
mov
sbb
xchg
sub
subl
dec
ljmp
je
out
xchg
outsb
frstor
repz
xchg
les
es
test
jmp
mov
jno
pop
icebp
call
cmp
jns
mov
icebp
test
inc
sarl
jle
call
mov
dec
mov
lods
xchg
sbb
loop
adc
sahf
push
movsb
pop
jmp
popa
movsl
enter
push
test
js
leave
rorb
pop
sbb
or
adc
rclb
push
ds
gs
dec
aad
sub
adc
ret
fs
add
lock
aam
call
xor
das
jne
shrl
lock
repnz
cli
xchg
stos
negb
cli
mov
insb
aam
bnd
dec
mov
xchg
jb
mov
mov
or
mov
imulb
in
mov
xchg
sti
imul
mov
insb
ja
sub
shlb
jns
int3
mov
fs
jne
xlat
aam
sbb
push
divb
sub
loope
push
sub
int3
sbb
add
mov
or
out
sub
push
outsb
loope
js
pop
and
int
test
fcmovnb
xchg
mov
mov
or
mov
lcall
inc
add
loopne
pop
mov
lock
fcompl
pop
ljmp
dec
stos
mov
sub
pop
mov
int3
insb
and
addr16
xchg
in
sbb
addr16
push
sbb
out
imul
jo
or
cmc
cmp
addb
xchg
push
jle
test
movsb
je
dec
cli
cmp
push
mov
cmp
sarb
inc
mov
add
je
hlt
movsl
pushf
test
cld
nop
fsubp
out
xchg
and
je
fbld
xor
test
mov
test
dec
mov
rol
gs
cwtl
cmp
mov
sbb
ret
or
loopne
jbe
and
mov
sub
sbbl
dec
cltd
push
call
add
std
leave
sbb
inc
xchg
sub
sahf
jp
xor
nop
cmp
lahf
fnsave
mov
mov
mov
inc
ret
imul
push
mov
mov
xchg
popa
adc
and
jbe
inc
ljmp
loop
fsts
lahf
in
mov
inc
push
jl
sar
int3
js
pop
inc
xchg
ja
push
inc
bound
pop
stc
dec
cwtl
dec
mov
mov
pop
cmpb
lret
mov
xor
loopne
inc
push
and
mov
add
push
lea
and
imul
fnsave
dec
mov
mov
iret
inc
lahf
sub
ss
adc
cltd
shrl
mov
sbb
mov
stc
int3
pushf
sub
cwtl
scas
clc
fildll
push
imul
in
imul
leave
gs
dec
mov
or
mov
mov
lret
mov
arpl
js
test
mov
xchg
dec
add
inc
pop
fiadds
jmp
call
sub
or
xorb
or
in
push
xor
fwait
scas
out
lea
dec
pop
adc
lock
lods
jnp
adc
mov
imul
into
dec
ljmp
mov
insb
xchg
jb
add
mov
rolb
and
les
enter
in
mov
mov
xor
cmp
mulb
shll
outsb
adc
xor
push
pop
fldenv
or
stos
sbb
jmp
cmp
pushf
outsl
cs
stc
xchg
inc
mov
jne
in
cmp
sahf
stos
fs
js
daa
sbb
repnz
nop
xor
outsb
sti
aam
and
jl
push
cmp
das
cld
cmpl
ret
sub
xchg
mov
stos
sub
cmpsb
mov
dec
add
and
jp
dec
adc
sub
mov
inc
in
adc
xor
ds
add
adc
cmpsl
mov
mov
mov
popf
or
mov
repnz
loopne
popf
movsb
add
mov
ret
xchg
sbb
xchg
push
cmp
cmp
icebp
jg
xchg
imul
test
ljmp
lods
mov
cwtl
rcll
test
sbb
int
add
mov
and
ss
mov
jge
fs
fstp
test
pusha
push
cmp
mov
loope
ficomps
out
mov
push
movsb
adc
fstpt
xor
fstps
cmc
jmp
jg
mov
or
enter
xchg
movl
cs
std
lahf
jg
mov
es
int
pushf
xlat
sub
sub
loopne
inc
xor
mov
cmp
sbb
aas
pop
inc
aas
dec
xchg
lahf
dec
cmp
pop
fcmovnu
lret
pop
jo
shlb
pop
out
adc
xor
push
adc
xchg
ficompl
mov
or
sti
mov
clc
lods
mov
hlt
jge
lea
insl
sub
pushf
mov
inc
mov
cmp
lea
fisubrs
jle
ret
out
pop
and
loop
mov
mov
lds
negl
and
popf
fcoms
inc
cmp
shlb
pop
push
fcoml
rcrb
call
xor
adc
inc
add
dec
test
inc
jl
xlat
shl
dec
fucomip
push
sub
push
push
sub
or
lods
mov
mov
cmpsl
imul
movq
mov
xchg
icebp
mov
adc
btr
test
test
negl
add
or
jnp
mov
stos
xor
mov
mov
outsl
ss
jo
ss
sub
stos
mov
lret
xlat
inc
mov
jmp
jg
out
mul
sub
in
push
fs
push
add
lcall
xor
inc
lcall
dec
int
sbb
pop
mov
je
xlat
fdivl
push
test
in
sahf
rcrl
jl
cmp
lret
mov
or
cli
fcoms
js
movsb
lea
inc
xor
or
mov
lret
push
inc
sbb
sbb
sbb
into
inc
dec
sub
adc
dec
mov
fdivr
inc
popa
js
shll
test
jnp
dec
mov
cmp
lret
mov
add
fisttpll
and
call
lock
mov
jmp
out
dec
sub
push
inc
push
test
lahf
mov
fldl
ds
dec
loop
out
xlat
aaa
push
cmp
add
add
scas
cwtl
push
loop
push
enter
push
fucom
inc
rorb
jnp
push
lock
or
call
jo
push
lods
in
sub
mov
mov
mov
rclb
jns
jmp
leave
hlt
lcall
sub
jns
insl
mov
pushf
dec
adc
cld
push
add
cmpsl
fiaddl
jne
loop
sti
lcall
inc
loop
fimuls
add
and
fcmovnbe
sub
aas
nop
inc
repnz
mov
sarl
cld
repz
hlt
cs
mov
iret
pop
sub
mov
aad
or
dec
outsb
xor
fstpt
sbb
mov
loop
adc
inc
mov
add
mov
das
jl
stos
stos
cmpsl
test
mov
jae
xchg
sbbl
jne
rorl
insb
xlat
cmpsb
jecxz
movsl
jg,pt
dec
jne
pop
cmp
shlb
inc
or
dec
outsb
aam
sahf
bound
add
xchg
lods
ljmp
mov
sbb
cmp
movsl
stos
inc
ret
stos
popa
adc
mov
pushf
sub
mov
cld
lret
fidivrl
mov
js
hlt
cltd
pop
jecxz
notb
aam
jg
mov
stos
mov
cmp
gs
sub
dec
xchg
xchg
and
jg
xor
dec
xchg
jae
jp
lret
dec
mov
jae
sbbb
test
mov
dec
mov
or
movsb
ret
xchg
ja
rcll
sarl
flds
and
jnp
adc
adc
mov
loop
or
popf
xor
outsb
lock
inc
rcll
mov
jg
pusha
stos
pop
pop
in
push
stos
addr16
jle
or
xchg
adc
cli
sbb
cld
dec
int3
or
in
mov
xor
xchg
sbb
or
shll
int3
inc
int3
xchg
pop
xor
mov
push
cld
test
aas
test
cmpsl
jns
dec
psrld
dec
cli
shlb
aaa
aad
inc
shr
lret
out
test
bound
outsb
lods
xchg
xchg
in
ret
lods
cwtl
mov
sub
sub
xchg
adc
popa
popf
cli
sub
mov
dec
aad
movsb
cli
xchg
inc
push
clc
push
mov
rcrl
pop
inc
xchg
xchg
rcll
lock
leave
scas
mov
shrb
repnz
xor
inc
push
cmc
and
shrl
or
cs
or
dec
loopne
mov
ficompl
xchg
xor
mov
ljmp
and
dec
fildl
lcall
lret
xchg
push
imul
in
mov
js
dec
mov
out
xor
push
adc
sbb
xchg
int
and
das
clc
dec
cwtl
mov
and
out
xchg
dec
xchg
lcall
dec
or
mov
lret
mov
cmc
arpl
pop
repz
or
repnz
int
sub
int3
xlat
lds
lds
in
cmc
js
jecxz
rclb
lock
test
sbb
dec
rorl
jne
pop
jl
jbe
test
cmp
rorl
lea
mov
or
dec
xor
pop
loop
xchg
push
pop
ja
out
mov
dec
pop
pop
jo
mov
fwait
std
fisttps
lds
jg
dec
data16
xor
mov
out
jb
jns
push
pushf
movsb
adc
mov
test
or
loope
pop
inc
addb
adc
sahf
push
inc
shll
cmp
mov
sbb
adcl
testb
mov
lcall
pop
cmp
push
jne
insl
repnz
mov
pop
loope
lods
inc
xlat
scas
cmp
xchg
xor
dec
addr16
push
jb
ret
cmpsb
xor
mov
cmp
mov
mov
fwait
sub
jcxz
adc
out
mov
jecxz
arpl
int3
bound
cmp
arpl
mov
subl
push
mov
psrlq
adc
xchg
cs
gs
mov
adc
pop
adc
pop
mov
dec
outsl
into
maskmovq
xchg
mov
clc
push
cwtl
lods
inc
jns
xchg
ret
movsl
in
add
jns
push
in
push
mov
sub
jne
repnz
mov
in
jg
xchg
jle
nop
pop
out
push
mov
cmp
faddl
mov
and
test
test
repz
pop
mov
test
mov
sbb
jp
mul
inc
dec
jge
sbbl
pop
push
in
js
cmpsl
decl
jecxz
push
add
dec
leave
lret
ret
je
lock
cmp
sti
in
rcrl
sub
insl
cmc
xchg
push
add
push
out
dec
imul
imul
cli
push
nop
cltd
xchg
mov
mov
dec
fs
daa
sarl
ljmp
lods
subl
push
test
les
mov
mov
js
loopne
push
lret
pop
push
scas
imul
pushf
adc
jae
jnp
sti
add
daa
jae
std
ret
jle
aad
insb
test
inc
push
sbb
or
pop
push
jmp
scas
adc
scas
bound
shll
das
fsubrs
fucomi
insl
inc
addr16
mov
cwtl
shlb
insl
or
xchg
push
add
scas
daa
sbb
xchg
mov
out
and
sarl
or
popa
adc
hlt
shrl
cltd
out
or
cmp
mov
add
fisubl
xchg
loope
sub
or
xchg
ljmp
cmp
das
mov
dec
stos
mov
out
ss
int
hlt
sarl
cs
mov
mov
iret
addl
ja
std
sbb
lcall
inc
inc
add
sbb
jae
fcoml
mov
pop
or
arpl
scas
int3
stos
js
cltd
test
scas
js
pop
mov
and
mov
jno
out
mov
push
adc
add
ss
lcall
push
mov
add
cmc
jecxz
mov
aam
inc
mov
mov
out
sub
out
sbb
xchg
jl
fsubp
aad
or
sbb
or
data16
adc
xlat
sarb
jo,pt
xor
cmp
xchg
adc
jns
push
mov
add
or
mov
xor
ljmp
push
xor
push
fwait
mov
inc
or
shll
push
mov
cmpsl
or
dec
xchg
mov
inc
int
leave
movsl
pop
mov
xor
fidivl
fnsave
mov
xchg
in
mov
out
addr16
ljmp
stc
sbb
mov
out
lcall
mov
or
sub
bound
mov
dec
and
and
test
cmp
in
loopne
lods
arpl
inc
cmp
out
rcll
mov
push
ja
or
int
data16
je
lea
push
ret
sbb
pop
repnz
inc
xor
std
sbb
cmpsb
xchg
data16
mov
mov
popa
jns
adc
sarb
out
pop
jb
sahf
push
in
sbb
xor
or
lsl
cmpxchg
lods
pop
adcb
cmp
push
lock
in
mov
inc
bound
push
cmpsl
pop
push
bound
pop
rcll
xchg
mov
arpl
aad
jg
repnz
insl
and
orb
mov
dec
mov
mov
xor
jne
cmp
and
dec
pop
sti
xchg
mov
and
les
or
leave
aas
and
enter
testb
loope
xchg
push
push
mov
mov
sub
jmp
les
adc
adcl
jb
hlt
ret
fnstsw
lods
xchg
leave
cmp
adc
dec
out
enter
pop
jl
add
push
in
in
push
cmpsl
inc
jle
in
mov
das
aaa
sbb
xchg
cmpsb
cld
sub
xor
and
aad
jae
push
lahf
arpl
mov
add
ds
jle
outsl
mov
xchg
and
js
push
lods
push
fwait
andps
rorb
cltd
jns
inc
imul
fs
imul
xlat
inc
adc
testb
adc
jbe
rorb
mov
faddl
jbe
adc
in
xor
push
inc
es
mov
inc
pop
jle
sbbb
lret
mov
pop
bound
insb
sahf
push
sbb
fistps
out
and
sahf
cmp
inc
mov
xor
pop
lret
mov
enter
dec
scas
xchg
iret
shll
pop
dec
in
cmpsl
rorl
rcrl
repz
subb
ret
cld
inc
jo
es
test
inc
leave
in
pop
ja
stc
or
and
and
pop
adc
sub
mov
sub
adc
shl
mov
adc
lods
cmpl
dec
jecxz
test
pop
xchg
in
test
sbb
cmp
jge
sti
cmpsl
inc
sub
icebp
sysexit
mov
mov
jp
les
clc
mov
jle
negl
nop
push
inc
sarl
popf
sub
andl
jns
mov
sub
cmp
lods
jne
cltd
dec
leave
movsl
and
and
subb
iret
jl
mov
out
adc
xchg
pop
gs
xor
enter
sub
mulb
outsb
sbb
imul
cmpsb
stos
iret
lcall
and
mov
xchg
lods
mov
stos
jb
icebp
hlt
ja
push
mov
sarb
addr16
inc
cmpsb
and
cmp
popf
mov
jno
testl
adc
jns
mov
jns
cltd
pop
inc
xor
pop
mov
je
lea
sbb
icebp
adc
dec
loope
add
mov
shl
push
inc
addl
adcl
jnp
mov
xor
leave
out
pop
and
lea
jle
shll
popf
add
add
repnz
cmp
xor
and
xchg
stos
or
sbb
jb
adc
mov
jmp
or
mov
push
dec
sarb
sbb
or
add
out
jge
add
push
scas
mov
mov
jo
xchg
orl
enter
adc
andl
movl
jle
add
xor
dec
ja
sub
scas
orl
sarb
shrl
scas
lds
push
xchg
mov
mov
mov
test
lahf
xor
mov
mov
jno
xor
shrl
nop
sbb
add
loope
mov
mov
sarb
inc
repz
mov
fucomp
mov
aaa
mov
leave
or
pop
dec
sbb
cmpb
push
pop
sub
out
test
xor
pop
sbb
sbb
cwtl
inc
sub
sub
js
stos
pusha
jne
fdivp
repz
xchg
into
hlt
bound
jae
sbb
fnstsw
pop
push
jno
mov
or
int
mov
xchg
in
dec
dec
cmp
pop
mov
push
pop
dec
enter
jl
jae
rep
cmp
mov
dec
fbld
pop
push
jnp
pop
je
inc
aas
movsb
mov
and
push
ds
call
add
sbb
js
mov
sbb
or
lahf
mov
jo
test
les
je
jmp
pop
arpl
popa
repnz
ja
sub
push
push
inc
insl
jg
adc
mov
insl
xor
jmp
pop
xchg
mov
stc
adc
cmp
xchg
mov
sub
fwait
jns
mov
xor
pop
jg
push
outsb
sbb
cmp
nop
jmp
mov
lea
cli
mov
inc
push
test
mov
add
inc
inc
fwait
ret
clc
pop
cmp
fsubrl
nop
fst
js
stos
add
ret
mov
push
sub
inc
add
or
jns
sub
push
sub
in
jp
xchg
stos
arpl
repnz
lret
and
cli
fisubrl
mov
pop
loop
sub
es
stc
cmp
fistps
daa
scas
push
mov
mov
mov
pop
sahf
inc
loop
xor
movsb
add
push
pop
fadds
jge
loope
fs
inc
cmp
cmp
mov
adc
push
or
int3
adc
out
mov
sub
ss
adc
push
jle
dec
out
fldcw
xor
fdivr
add
dec
cs
stos
jmp
xor
cmp
sub
nop
rclb
jns
imul
call
mov
popa
movsl
fnsave
ss
call
jecxz
dec
add
mov
and
xchg
inc
jae
outsl
inc
test
pop
sbb
cli
sarl
mov
add
or
push
jp
shlb
hlt
add
xchg
popa
pusha
push
pop
mov
mov
adc
push
or
jle
rclb
pop
xor
inc
loopne
xchg
out
pop
xor
jo
mov
fs
fsts
idivl
lods
testl
or
sbb
fstpt
insl
and
dec
inc
pop
into
or
data16
jne
push
mov
unpckhps
test
adc
mov
jmp
js
jnp
mov
fimull
pop
insb
into
xchg
or
xor
push
outsb
imul
enter
mov
and
lret
daa
les
mov
xchg
pop
jmp
je
add
mov
ss
mov
out
and
xchg
pop
sarl
xchg
and
jb
pop
or
xchg
mov
lds
lret
out
cmc
mov
shrl
cmp
xchg
push
testl
test
cs
dec
push
cwtl
insl
inc
xchg
inc
add
aaa
fnstcw
imul
push
jecxz
push
sub
sub
push
add
mov
pusha
sub
push
sahf
sbb
mov
jp
sbb
scas
jge
ss
xchg
pop
inc
insl
fadds
push
xchg
repnz
ret
sarl
jo
loope
push
fs
test
nop
out
lods
mov
andl
sbb
mov
mov
cmpl
ret
pop
imul
mov
leave
mov
lcall
fidivrl
incb
push
cmc
clc
imul
pop
mov
and
sbbb
lock
stos
fisubrl
xor
negb
imul
in
jg
es
pop
pop
lea
inc
int3
inc
mov
rcrb
lcall
push
xchg
cmp
ds
sbb
roll
icebp
js
sbb
dec
pop
jg
das
adc
dec
mov
ret
xor
fadds
inc
sahf
jg
lcall
cmpb
mov
stos
xor
mov
dec
cld
sub
stos
pushl
fs
mov
lea
xor
adc
mov
mov
push
mov
add
leave
iret
fwait
lea
sbb
imul
mov
sbb
cmp
jb
push
sub
or
sbb
in
or
adc
mov
mov
xchg
iret
dec
aas
mov
test
mov
jp
pop
out
out
xchg
mov
mov
leave
jbe
xor
jne
dec
test
jne
lcall
jno
cmpsl
imul
addr16
push
push
add
mov
test
xor
push
and
mov
add
and
mov
pop
shll
addl
in
out
fldl
push
mov
std
movsb
jl
lahf
or
mov
and
mov
mov
setno
push
inc
cmpsl
xor
adc
jo
int3
xchg
fcoms
nop
je
push
in
mov
push
dec
and
jle
adc
cmp
inc
xchg
dec
pop
call
xor
or
or
inc
push
inc
rcrl
push
fnstsw
sbb
jno
cmp
in
hlt
xor
and
fwait
jp
rcrl
sbb
sub
int3
negl
fsubl
clc
push
pop
pop
xchg
popa
mov
xchg
lock
jo
jle
in
inc
mov
mov
xchg
jo
lods
mov
dec
lods
push
fidivl
mov
inc
mov
or
ljmp
ja
fdivl
mov
cltd
shll
fsubr
jnp
xchg
and
lods
push
or
out
pushf
pusha
inc
incb
lods
push
cmp
out
ret
dec
adc
adc
lea
jno
adcb
fimull
mov
jne
sbb
aaa
cmc
pop
aaa
repnz
jbe
xor
cwtl
fst
or
pop
push
iret
bswap
add
ret
inc
clc
xchg
cs
repnz
add
daa
mov
mov
imul
lds
push
faddp
test
xchg
add
dec
sbb
sti
sti
jg
andl
imul
xchg
test
andl
inc
lahf
sub
ret
xor
setno
xor
xor
adc
mov
pop
lcall
cmc
pop
cmp
sub
cmp
fidivs
mov
arpl
dec
pop
xchg
inc
into
sbb
sbb
xchg
bound
and
push
or
hlt
dec
jmp
addr16
push
mov
cmp
shll
idivl
scas
sub
add
sbb
bound
sub
mov
dec
fsubl
pusha
dec
push
in
cmpsb
xchg
mov
pop
and
cmpsb
xorb
iret
add
xor
scas
inc
dec
or
dec
test
rcl
stos
out
pushf
ret
dec
arpl
imul
mov
repnz
xor
cmp
inc
and
or
imul
daa
fisttpl
scas
scas
imul
dec
in
and
xchg
loope
or
nop
add
iret
mov
rcrl
rclb
jno
in
mov
or
ret
fmul
ret
leave
inc
test
add
pop
inc
dec
seto
test
xchg
test
inc
js
clc
in
mov
out
cld
fisubrs
push
in
jne
out
mov
cmc
std
mov
jae
cmc
or
stc
sbb
imul
push
jg
adc
ss
dec
fnstcw
scas
inc
sti
in
js
stos
les
dec
cmp
jmp
mov
and
sarb
pop
pop
lcall
sbb
push
add
jmp
mov
scas
mov
movl
inc
daa
arpl
sub
xor
std
mov
xorb
ret
inc
aas
clc
or
lods
dec
je
cmpsl
ret
dec
mov
imul
cltd
fxch
cmc
sub
dec
add
and
adc
addr16
int3
mov
push
iret
repnz
pop
jno
sub
in
jge
les
aad
rol
and
testl
into
push
test
popa
mov
sub
or
out
sub
sahf
push
sbb
fisubl
incl
aad
aam
mov
or
pop
sbb
jae
xchg
jg
and
xor
shlb
daa
push
xchg
repnz
bnd
loope
mov
inc
sbb
cmpsb
xchg
cmp
or
sub
icebp
fstl
cmc
loopne
pop
outsb
sbb
mov
mov
out
jmp
out
cmpsb
movsl
lods
repnz
pop
ds
add
add
adc
popa
sbb
ljmp
push
xchg
dec
std
pusha
orb
add
ja
mov
movsb
test
shr
push
mov
insl
sub
into
test
out
mov
scas
js
inc
dec
jl
add
mov
int3
pop
adc
sub
sbb
mov
dec
adcb
ss
pop
sti
stos
xor
jmp
popf
iret
insl
ds
pop
push
adc
cmp
push
aaa
leave
jp
mov
xchg
fisttpll
and
mov
mov
in
mov
cli
xor
or
in
cmp
jg
pop
std
in
enter
mov
out
repz
shll
xor
mov
fstpt
in
lahf
les
daa
pop
mov
loope
xchg
sbb
sub
mov
aam
pop
mov
cld
add
outsb
mov
pop
pop
mull
pop
cmp
sbb
ss
ljmp
and
xchg
loope
es
lds
xor
sarb
jmp
test
les
jle
and
mov
int3
xor
movsb
test
fadd
outsb
mov
pop
mov
xor
cmc
sub
push
in
inc
xchg
aad
xchg
and
jecxz
mov
repz
rcr
cwtl
outsl
xor
jo
call
out
mov
jmp
or
pop
imull
cs
dec
push
and
pop
imul
cmc
inc
ficompl
add
xchg
cmp
sub
in
rcll
and
mov
push
lret
daa
subl
fisubrl
hlt
ss
sbb
push
ja
je
sahf
jge
shlb
out
aas
rol
and
adc
cs
cmpsl
dec
jno
push
adc
mov
test
xor
pop
add
xchg
add
mov
mov
jp
lret
push
test
and
insb
adc
ds
or
sub
test
lcall
insb
in
lea
test
cmp
xor
pop
dec
cmpsb
enter
mov
ficomps
mov
add
jecxz
xchg
mov
ss
stos
rorl
cmp
stc
add
cmp
out
cmc
imul
ds
jae
int3
cmp
jnp
push
into
push
fdivl
jns
mov
cld
add
in
add
ss
hlt
roll
sbb
mov
inc
jns
xchg
xchg
jmp
adc
ret
movsb
jbe
sbb
sti
ja
mov
lcall
pop
out
in
ss
outsl
xor
mov
lcall
add
or
adc
leave
cltd
mov
cli
imul
or
es
xor
andl
repz
gs
add
es
shrb
sub
lcall
mov
or
pop
daa
pop
mov
jge
push
or
adc
mov
cld
out
mul
int
dec
xor
xchg
enter
xchg
fisttps
cmp
je
mov
lds
sbb
xor
lret
push
sub
subl
ret
mov
hlt
lret
lods
jns
dec
or
sub
ret
fsubl
es
inc
lods
mov
pop
cwtl
mov
jne
push
sti
adc
cmp
sti
add
pop
orl
scas
jb
sbb
notl
js
sub
mov
xor
jl
cmp
test
xor
insl
out
iret
lods
imulb
into
inc
sbb
xchg
lret
sbb
inc
xor
mov
mov
insb
das
xor
rorb
in
xor
cli
pop
inc
dec
bound
lcall
jle
add
push
xor
xchg
jl
sbb
or
push
add
arpl
xchg
and
cltd
sbb
dec
aas
fiaddl
fdiv
xor
cmp
outsl
stc
mov
sti
jmp
mov
and
and
mov
cltd
xchg
js
int3
data16
cmp
and
xor
fdivs
arpl
dec
sub
adc
xchg
push
push
pop
gs
shll
cmpsl
add
push
cmp
std
xor
incl
popa
add
daa
pop
xor
pop
add
lock
loop
push
sub
dec
insb
xchg
outsl
sahf
je
or
sbb
rorl
sub
pop
dec
push
lret
mov
mov
xchg
out
icebp
in
int3
lods
add
and
mov
test
push
mov
mov
loop
das
push
insl
mov
clc
sub
xor
popa
stos
lods
and
jae
sbb
stos
test
add
jecxz
mov
xchg
int3
mov
cmp
out
fildll
cmp
cld
add
outsl
lret
stc
add
hlt
sub
outsb
xchg
mov
mov
in
xor
mov
pop
in
pop
dec
xchg
ret
mov
push
sub
cmpsl
pop
mov
rorl
shll
jb
out
ret
jg
sbb
sbb
fldl
mov
mov
adc
cmp
cld
adc
aas
decb
shlb
xlat
xor
rclb
pusha
jp
mov
pop
or
into
push
and
add
inc
loope
xlat
scas
cmpsl
out
cld
ljmp
pop
sarl
mov
mov
clc
jbe
fsubl
pusha
cmp
scas
int3
jo
push
aam
vcmpps
or
sub
bound
into
aaa
adc
adc
adc
sahf
jmp
dec
mov
sub
add
mulb
imul
jo
hlt
out
pop
sub
add
in
cld
and
jne
jg
int
sbb
add
xor
divb
in
addl
jmp
aaa
into
xchg
or
dec
shr
jp
sbb
scas
loope
pusha
lcall
cltd
or
hlt
jge
adc
cmp
iret
loope
clc
jo
push
mov
bound
mov
out
mov
push
sti
test
inc
ret
call
pop
ds
addr16
fildl
fcomps
mov
inc
std
pushw
and
in
pop
fbstp
xor
inc
mov
xchg
jno
and
jg
out
ds
adc
inc
dec
fs
inc
jb
inc
mov
mov
negb
es
mov
pop
sbb
add
fs
adc
les
cmp
imul
popa
in
push
inc
push
cmpsb
in
cli
or
and
pop
push
sarl
add
sbb
lods
pusha
xchg
xchg
cmpsb
push
pop
fldl
in
and
lcall
lods
insl
dec
aaa
insl
cmp
loope
sub
daa
testl
ds
out
and
rcr
jmp
xchg
sbb
popf
sub
inc
in
jae
sti
dec
inc
jne
lods
pop
shl
jecxz
lret
cwtl
or
push
hlt
popa
cmpsl
cmp
cs
xchg
cs
lods
sbb
add
mov
cli
and
mov
faddl
les
adc
dec
dec
in
or
imul
shrl
xor
movzbl
icebp
cmp
test
add
ja
negb
xchg
imul
arpl
shll
inc
test
repz
mov
pop
jns
addb
mov
push
pop
jb
pop
sbb
mov
push
push
pusha
jp
mov
pop
add
cmp
cltd
test
loop
aad
loopne
jmp
fists
jp
or
inc
cmp
and
xchg
jae
nop
inc
movsb
push
cld
lahf
enter
dec
jecxz
xor
in
xchg
mov
mov
addr16
lahf
test
push
in
clc
dec
mov
hlt
mov
cltd
or
rorl
mov
data16
aad
xor
xchg
subl
dec
arpl
repz
push
jle
pop
xchg
imul
push
push
mov
pop
push
jns
stos
rcrl
mov
mov
mov
xchg
xchg
pop
add
xlat
popf
mov
adc
adc
add
mov
mov
sbb
adc
push
pushw
or
out
adc
int
cmp
push
sahf
es
dec
pop
or
test
and
add
add
mov
jae
fcmovnb
fsubl
jbe
jge
sbb
xlat
and
mov
add
mov
jg
stc
cmc
repz
sub
outsl
pop
mov
lret
sub
sub
xchg
call
mov
mov
into
ds
sub
fiaddl
pop
jge
adc
jb
andb
inc
add
daa
add
xchg
inc
rorl
xlat
psubb
jle
sbb
icebp
cltd
xchg
mov
cs
aas
jmp
stos
xor
shlb
leave
mov
push
jnp
adc
dec
mov
mov
push
xchg
sbb
adc
mov
xchg
in
jbe
sub
test
fisubrl
or
push
or
test
lret
pop
rol
inc
outsl
fmull
nop
mov
add
scas
pop
and
lods
cltd
pop
in
jnp
dec
cmp
xchg
ffree
int3
stc
dec
sbb
bnd
jno
aam
mov
inc
push
and
dec
insl
add
mov
das
jno
dec
shr
and
ror
or
sbb
mov
xchg
call
int
fmul
jno
iret
jbe
push
xlat
xor
mov
scas
push
daa
jg
push
call
les
sbb
sahf
mov
jl
cmpsl
pop
mov
adc
int3
mov
cs
cmp
jns
outsb
test
in
popa
push
inc
arpl
sti
and
cmp
mov
stos
lret
or
ret
sbb
cmpsb
aam
sti
push
mov
mov
das
sub
movsl
fdivl
sub
shlb
cld
cmc
push
fnstcw
rolb
minps
cmp
mov
lea
xchg
jle
cmpb
imul
enter
mov
pop
cmp
int
insb
fmull
push
call
push
sbb
dec
imul
data16
push
jbe
pushf
bound
pop
xor
sbb
inc
leave
jecxz
add
mov
add
lcall
mov
cltd
push
or
in
movb
cmp
mov
repnz
mov
jmp
fidivrs
subl
dec
sbb
adc
insb
hlt
mov
xchg
fs
adc
loopne
ds
sub
sbb
in
int
push
push
and
lcall
mov
inc
test
mov
jle
int3
xorb
lret
adc
sbbb
cld
mov
unpckhpd
mov
and
push
cmp
jp
add
ja
xor
lock
mov
sbb
sbb
outsb
outsl
dec
adc
inc
xchg
arpl
xchg
test
xchg
cmp
cmp
or
shr
mov
jmp
test
xchg
fnstcw
int
jne
icebp
push
fildll
xchg
inc
xor
cmp
sub
adc
clc
in
cs
jecxz
add
xchg
adc
call
dec
sbb
push
in
shl
inc
cmp
lahf
xchg
test
fildll
push
jl
sub
add
jle
jle
mov
outsl
adc
jp
int
adc
inc
addr16
in
xchg
jno
test
xor
movsb
lret
sbb
add
dec
xchg
xor
dec
outsb
arpl
or
pop
lea
repnz
in
pushf
fiaddl
sub
cmp
stos
out
pop
in
and
pop
movsb
outsl
and
mov
les
or
cmp
inc
pop
jle
cmp
sbb
andb
in
sbb
adc
in
jge
or
mov
xor
sub
mov
sub
fmuls
out
ds
out
popa
pop
fsubrs
or
sub
mov
jge
out
mov
mov
push
jne
stos
jle
stc
xor
in
roll
pop
dec
inc
icebp
mov
sub
test
popa
cmpb
rolb
imul
mov
fisubl
sbb
out
add
xchg
xchg
xchg
mov
push
push
daa
lods
lea
and
dec
repz
notb
add
mov
in
mov
jecxz
lret
sbb
scas
stos
xlat
push
addr16
dec
lea
stc
daa
mov
adc
dec
nop
cmp
cmp
sbb
xor
maskmovq
notl
pop
push
lahf
mov
lea
xchg
or
and
push
cmp
add
jbe
mov
push
mov
mov
sub
mov
in
hlt
dec
aaa
mov
js
std
sub
movl
leave
arpl
sub
addr16
lds
pop
or
leave
dec
push
aad
repz
adc
jp
fnstenv
sahf
dec
sbb
jp
out
jg
addb
mov
xor
mov
add
jbe
cmp
pop
cmp
mov
test
shll
and
adc
filds
jne
mov
and
mov
push
mov
cmc
fidivs
inc
adc
ljmp
cmpsb
ja
pop
mov
xchg
movsl
mov
fcoms
movsb
mov
sub
je
xchg
sbb
adc
push
call
es
mov
bound
push
xchg
pusha
sub
push
dec
and
mov
out
rol
xor
xchg
lret
adc
pop
int
inc
push
push
inc
dec
subb
sub
fidivs
or
insb
cmpsl
jb
out
mov
and
cmp
das
loop
mov
hlt
and
jmp
and
add
xor
xchg
mov
push
mov
mov
pop
addr16
xchg
and
popf
mov
imul
xchg
pop
in
xor
jmp
imul
subl
outsb
sub
leave
cwtl
rcll
jnp
insl
sahf
xor
loopne
sahf
rol
stos
punpckhbw
pop
cmp
inc
pusha
in
sbb
push
inc
testl
es
movsl
loop
xchg
pop
xchg
jmp
adc
arpl
in
jg
sub
lahf
call
sub
ds
sti
mov
mov
cmc
hlt
test
jg
mov
add
xchg
xchg
xchg
mov
add
divb
push
mov
repz
out
jecxz
dec
add
inc
jge
fwait
stc
add
sbb
mov
xor
mov
shlb
jb
mov
xchg
cmpsl
sbb
mov
mov
mov
mov
sub
mov
repz
frstor
push
sub
aas
mov
shll
push
add
addr16
test
push
lock
and
sbbl
add
bound
jnp
inc
cltd
hlt
mov
pop
xor
inc
xchg
sahf
xor
dec
mov
add
pop
xlat
aad
cs
or
std
int3
mov
push
cmp
push
jg
bnd
inc
cmp
sbb
das
mov
outsl
cmp
xchg
test
mov
loop
dec
rcrl
popa
sahf
adc
pop
dec
orl
mov
in
push
mov
mov
rol
mov
fistl
aaa
xchg
ret
sbb
push
cli
sti
and
jmp
bound
in
mov
mov
aam
aas
mov
shl
adc
popl
mov
mov
rcll
inc
mov
bound
dec
adc
int
and
adc
aas
and
mov
push
and
xchg
cmp
and
jmp
pusha
and
xorl
repz
adc
mov
cmp
fisttpll
cmp
lods
stc
jns
in
int3
imul
inc
mov
cmpsl
inc
pop
loope
test
push
cmp
xor
jmp
jl
jae
mov
pop
icebp
xchg
arpl
jnp
pop
pop
addr16
jmp
scas
pop
dec
dec
arpl
ds
fst
aam
dec
sbb
pop
mov
popa
adc
mov
ret
adc
push
lcall
or
mov
push
push
cmc
jl
out
arpl
inc
enter
clc
pusha
sbb
lcall
mov
dec
push
inc
test
cmp
jne
push
xchg
call
mov
jno
inc
rcrb
sbb
mov
push
pop
cmp
or
dec
jbe
mov
jecxz
lods
adc
pop
cmc
push
fsubrs
cmc
adc
add
pushf
cmp
ja
cmp
push
in
cltd
bound
mov
sbb
sub
movsl
scas
arpl
add
pop
data16
xor
pop
addr16
add
cmp
mov
scas
lea
dec
add
pusha
movsb
mov
hlt
shll
aas
clc
shrb
repnz
outsb
nop
loopne
arpl
inc
scas
push
inc
hlt
inc
or
push
sti
sub
xchg
rcrb
cmpsb
jo
ljmp
mov
push
lcall
es
xor
add
cmpsb
loope
inc
lahf
in
outsl
fisttpll
mov
cli
push
loop
adcb
push
fidivrs
and
imul
push
addr16
pop
jbe
lcall
leave
cmp
pop
xor
cli
cmp
stos
imul
mov
iret
xchg
inc
fldenv
or
cwtl
je
data16
cmpsl
inc
or
cmc
adc
mov
js
aam
mov
cmp
shrl
mov
movsl
adc
std
je
xchg
push
shrl
add
inc
mov
jmp
cmp
mov
daa
aam
inc
jno
stc
lds
sbb
fsts
fsts
cmp
xor
cltd
adc
loope
push
pop
lahf
mov
xchg
xor
sub
jle
jmp
lcall
div
stos
filds
pushf
pop
addb
push
clc
cmp
mov
fnstsw
sbb
std
addr16
sbb
push
aad
scas
pop
les
inc
ret
push
test
push
cli
pushf
ss
rol
or
cmp
xor
jl
shlb
mov
mov
xchg
gs
pop
sbb
cltd
dec
pop
fwait
xchg
and
incl
mov
cmp
leave
xlat
and
push
cs
xchg
and
xchg
test
push
mov
dec
ljmp
movsb
out
add
and
xor
test
fidivrs
and
jmp
jnp
push
push
lods
arpl
inc
cld
dec
ret
pusha
leave
ficomps
inc
je
pop
xchg
lods
sarb
xchg
jnp
dec
decl
insb
ret
add
pop
ljmp
mov
repnz
mov
addl
out
inc
cmp
sbb
insl
cmp
or
imul
push
xchg
add
jle
clc
mov
sub
jns
xlat
mov
add
ja
nop
add
mov
mov
dec
xor
inc
xchg
xchg
inc
and
int3
adc
sub
jns
idivb
or
jle
in
in
xchg
or
and
shl
icebp
xchg
inc
jle
pop
popa
lahf
dec
pop
in
stos
mov
jg
cmc
push
cmp
jle
xor
in
mov
test
sub
and
or
mov
out
cwtl
cmp
daa
sbb
insl
mov
roll
xchg
or
shrb
mov
loopne
jo
inc
mov
ljmp
push
pop
iret
mov
hlt
adc
mov
dec
pmuludq
pop
or
inc
add
jecxz,pt
jns
pop
pop
cmp
push
sub
andb
jge
loopne
mov
cmp
sbb
lahf
std
sub
jnp
and
add
mov
aas
mov
fsubrs
lahf
inc
imul
push
xchg
clc
dec
das
int
inc
cwtl
mov
push
mov
sbb
test
icebp
mov
dec
inc
rorl
or
xchg
jl
addr16
jnp
je
fwait
sub
pusha
andb
fisttpll
fsubrl
pop
or
jge
fadd
shll
clc
sbb
jb
pop
sbb
cmp
stc
pushf
sbb
leave
outsb
push
in
fcoms
loope
js,pn
adc
mov
shr
and
xchg
xor
sbb
lret
fsubl
daa
cli
sarl
push
lea
lcall
popa
lock
sub
shrl
enter
dec
shlb
push
mov
sbb
jge
pop
loope
push
or
cmpsl
inc
or
ljmp
fbld
pop
loopne
scas
das
das
ljmp
popa
repz
mov
aad
lret
xchg
lds
jl
mov
ja
cmp
sahf
and
add
lock
mov
stos
inc
mov
aas
stos
xchg
mov
mov
xchg
sub
shl
outsl
cmpsl
mov
mov
stos
popf
sbb
enter
daa
jns
sub
lret
pop
js
xor
xchg
mov
cmp
int3
sbb
lahf
mov
dec
and
add
sub
gs
repnz
xor
leave
outsb
ret
jb
mov
fsub
mov
add
and
inc
aaa
jl
cld
rolb
mov
xor
daa
dec
push
or
mov
loope
add
mov
imul
sbb
adc
mov
aam
xchg
aas
adc
mov
mov
in
pusha
push
jl
das
fldcw
sahf
xor
insb
pop
or
xchg
xchg
adcb
jnp
inc
out
cmc
mov
add
mov
xor
pop
sub
test
dec
mov
test
test
mov
and
adc
inc
addl
movsl
dec
adc
xchg
push
mov
pop
inc
jno
and
cmp
sbb
jnp
test
leave
ficoms
dec
dec
mov
imul
sbb
lds
clc
pop
orb
ficoms
popa
call
xchg
pop
xor
push
jge
mov
int3
arpl
inc
cmpsb
outsb
out
popa
mov
fdiv
fcomi
daa
inc
xchg
adc
ljmp
int
push
std
pop
mov
out
sub
outsl
mov
mov
mov
bound
mov
sbb
add
ja
cmp
cmpsb
imul
fldenv
in
and
rclb
addb
aad
pop
cmp
pop
notb
jge
imul
ficompl
inc
sarl
int3
loopne
lods
mov
les
cmp
lret
lret
mov
lods
out
or
jno
add
ljmp
dec
xchg
in
jmp
inc
push
jle
or
pop
or
xchg
cli
or
adc
dec
mov
cwtl
lret
lock
adc
push
push
ja
and
adc
xchg
ret
or
xor
test
sbb
scas
and
mov
ret
xchg
lods
pop
cwtl
jne
out
enter
xor
xchg
xchg
jge
cmp
jno
xchg
push
xor
adc
xchg
loope
mov
mov
dec
mov
mov
sbb
in
jle
inc
ja
cmp
insl
addb
stc
shrb
ljmp
loope
rol
flds
sub
mov
sti
mov
loope
add
push
xchg
dec
xchg
insb
cmp
add
mov
mov
in
je
je
cwtl
push
mov
inc
faddl
bound
adc
sub
mov
add
sti
and
pop
stos
xor
ljmp
mov
loope
jns
add
sub
xchg
das
push
cmp
jge
inc
mov
xor
cwtl
mov
outsb
jb
cmp
inc
cli
jmp
inc
xchg
pop
dec
loopne,pn
in
dec
push
cmpl
sbb
enter
lds
pop
cmp
mov
fwait
mov
imul
lock
push
pop
outsb
repz
and
mov
pop
test
xchg
cmp
test
scas
std
mov
pop
cmp
mov
ljmp
rolb
xchg
push
mov
scas
int
mov
mov
sarl
add
cmc
jno
sahf
push
and
adc
clc
jne
cld
lods
add
outsl
xlat
or
mov
dec
push
movsl
mov
inc
sbb
xchg
movsb
mov
pushf
int
je
daa
push
mov
std
cmpsl
jle
ret
jo
cwtl
pop
cmpsl
cmp
hlt
pop
jnp
push
lods
insl
call
mov
ss
xchg
mov
loope
loopne
nop
cs
in
pushf
xchg
add
insb
int3
out
push
out
mov
aad
sub
nop
jns
sub
mov
push
cltd
adc
lock
xor
xchg
and
mov
xchg
and
pop
jge
popa
mov
xchg
mov
mov
or
lods
in
int
out
xor
icebp
mov
push
mov
out
add
mov
mov
arpl
dec
clc
call
cmp
mov
insl
pop
pop
ljmp
mov
fs
cmp
lret
repnz
jl
pop
out
mov
push
ret
test
mov
adc
dec
push
fstps
insl
push
fst
popa
mov
lret
fcmovu
dec
fistps
ret
dec
sub
imul
daa
cmp
push
mov
loope
scas
fs
mul
in
push
cmp
mov
push
aam
xchg
daa
adc
mov
mov
and
lock
push
inc
mov
xor
icebp
jnp
shrb
movsb
jbe
jp
inc
xchg
sbb
stos
outsl
mov
jne
rcrl
or
ja
and
out
popf
mov
push
mov
sahf
add
clc
jmp
inc
lock
mov
dec
int
aas
shlb
cmp
in
mov
push
push
aaa
repnz
adc
jge
stc
cmp
negb
sub
dec
out
or
fistpll
jbe
jge
pop
inc
movsb
mov
pop
inc
js
jno
sub
mov
push
mov
jb
or
jl
pop
inc
lret
sub
xchg
gs
je
icebp
mov
push
popf
jne
inc
adc
mov
inc
jb
xor
mov
les
imul
mov
mov
loope
aad
cmpsl
and
insb
mov
push
sbbl
scas
pop
test
sbb
push
loop
sarl
loope
inc
movsb
and
pop
xchg
hlt
dec
push
je
ljmp
add
mov
pop
add
addr16
fisttps
fiaddl
xchg
lret
es
xchg
pop
outsl
daa
outsb
cli
push
sahf
popf
frstor
xor
or
xchg
inc
xlat
loopne
cld
lea
inc
inc
push
test
xchg
xchg
sahf
sbb
cmpsb
dec
fcomps
dec
jg
sti
jecxz
lods
fcomps
cmc
or
rolb
mov
hlt
and
jns
sarl
sub
xchg
movsl
fcom
aam
scas
sbb
xchg
sahf
mov
xor
flds
xor
add
jnp
sbb
out
cs
cmpsl
pop
je
adc
sahf
xchg
mov
leave
gs
add
cmpsl
ljmp
js
cmpsl
ljmp
cmp
cmp
mov
xchg
add
or
out
xchg
mov
lock
aaa
loopne
and
test
in
testb
fadds
cmpsl
add
mov
mov
out
imul
sbb
test
jmp
mov
push
mov
or
add
sbb
cmp
and
loope
jp
stos
mov
aad
push
movsb
xchg
sbb
es
outsb
das
dec
ss
push
aam
lock
fisttps
faddl
bswap
add
vmptrld
pop
lcall
in
or
data16
and
dec
call
cli
sbbb
add
push
ret
insl
lcall
fcmove
repnz
pop
add
stc
pop
xor
les
pop
fcompl
outsb
mov
enter
inc
out
mov
mov
fnstenv
xor
ret
push
mov
pusha
test
and
add
ret
daa
cmp
inc
icebp
pop
and
inc
adc
shl
cmp
mov
xchg
iret
test
mov
cltd
imul
arpl
int
sbb
xor
push
testb
dec
loopne
fstpt
fsubs
mov
pusha
test
aam
pop
sahf
out
mov
scas
sbb
push
mov
mov
mov
cmp
test
test
fs
push
xchg
sub
pop
adc
xlat
jns
lods
add
or
mov
mov
aad
psubw
js
loopne
cmp
lret
adc
lret
dec
mov
shl
imul
dec
dec
xlat
add
xchg
pop
jle
ds
sti
lods
pop
dec
dec
std
shrb
xchg
ja
js
mov
int3
push
push
dec
cwtl
xchg
mov
sbb
and
jb
notb
jbe
cmpsb
pop
insb
or
sarb
mov
xchg
sahf
adc
mov
push
stos
das
dec
out
pop
jge
mov
mov
mov
fcompl
fdivl
in
insb
mov
cmp
lret
sbb
movsb
shr
add
cmp
fwait
inc
cmc
mov
xor
inc
and
jns
mov
stc
inc
lahf
and
lds
lret
dec
xor
sbb
fsubr
lds
mov
add
je
push
xchg
sub
cmpsb
pop
push
ljmp
mov
jp
mov
movsl
or
std
or
cld
out
mov
or
scas
ds
add
and
rcll
loope
xchg
enter
cmp
insl
cmp
idivb
addb
mov
int3
inc
push
gs
or
pop
push
aad
xlat
arpl
xchg
push
cmp
outsl
lcall
adc
das
xchg
inc
mov
push
cmp
and
stos
cmc
or
add
nop
sbb
and
in
cmp
js
mov
mov
lds
int3
int
les
and
xchg
push
movsb
std
jecxz
cmc
cwtl
sbb
addb
insb
push
mov
aad
out
out
imul
xorw
fsubl
jg
ret
xchg
pop
push
jl
lea
sarb
xlat
adc
sbb
sub
add
mov
out
mov
arpl
pop
mov
adc
mov
xor
jp
mov
mov
lods
jne
dec
test
mov
pop
xchg
lret
push
sbb
int
into
fsubl
inc
ds
mov
cmp
loopne
cmpsb
divl
rorl
sbb
or
pop
jbe
leave
xchg
adc
lret
add
fidivrs
mov
push
les
ret
test
pop
inc
xor
loop
hlt
cld
mov
jns
jmp
jge
mov
pop
maxps
movsl
cmp
dec
jb
fsubr
mov
jo
in
cmp
cmpsb
setnp
pushf
jge
sbb
and
call
div
incl
nop
add
pop
repnz
je
test
fdivr
neg
fldl
popa
das
aaa
mov
pop
jb
push
fwait
jnp
andb
adc
loopne
lret
inc
or
jo
ficompl
adc
xchg
lahf
mov
movsb
fwait
repz
mov
mov
stos
out
push
pusha
ja
loop
out
mov
mov
xchg
adcb
dec
push
mov
push
dec
push
cmovno
iret
lret
notl
cmp
mov
mov
pop
loope
in
sbb
xchg
sub
fstpl
rcl
add
movsl
push
push
jns
daa
bound
inc
fisttps
push
cmpsb
mov
adc
cltd
insl
repnz
lret
push
jle
push
adc
iret
push
andb
adcl
xchg
mov
aam
cmp
jmp
addl
jbe
add
sub
aaa
jmp
into
cld
mov
movl
mov
and
and
jo
ljmp
xor
jno
mov
add
hlt
out
sbb
out
jge
mov
mov
les
jae
inc
jb
popa
dec
inc
sbb
mov
pop
jne
mov
sub
and
cmp
cmp
xor
mov
mov
dec
pop
push
sub
jle
mov
rclw
orb
pushl
cmpsb
mov
or
lcall
adc
or
push
or
les
rorb
out
mov
aam
mov
cs
jl
mov
pop
popf
inc
adcb
adc
fistps
lret
inc
aam
mov
insl
mov
into
dec
std
adc
mov
mov
push
push
mov
cmpl
mov
test
std
adc
or
mov
and
xchg
push
ss
shll
shll
mov
idiv
add
sahf
and
adc
inc
inc
mov
push
adc
ja
fsubr
mov
or
sbb
mov
fwait
js
dec
jmp
or
aas
adc
cmp
dec
js
xor
adc
outsl
fisttpl
ds
add
sbb
ficomps
pop
and
adc
cmp
adc
lcall
pop
jg
divl
das
cmp
scas
mov
cmp
pop
stc
cwtl
mov
xor
nop
sbb
adc
fdivs
in
int3
or
jecxz
lcall
icebp
orl
ljmp
sub
push
sahf
data16
dec
leave
jns
adc
icebp
adc
xor
clc
add
lods
jo
icebp
popa
cld
fdivs
sbb
dec
nop
in
iret
lret
push
jo
and
aam
outsb
sbb
movb
jno
and
rorl
add
shl
iret
imul
inc
aam
jne
xchg
lods
jnp
outsl
push
pop
ljmp
add
cld
xor
pop
and
cmpsb
lods
daa
movsb
mov
in
mov
aas
ret
mov
cli
mov
pop
pop
xor
repz
xchg
xchg
add
outsl
stos
xchg
jnp
mov
lea
xchg
cld
insb
aam
mov
jns
and
push
stos
imul
inc
add
fcmove
mov
cmp
scas
mov
adc
daa
dec
movsl
aas
jb
repnz
bound
mov
xor
test
cmp
sti
jno
sti
push
ljmp
pop
test
dec
mov
aas
mov
movsl
outsb
or
inc
movsb
dec
cld
mov
dec
lea
xchg
add
and
ret
aam
mov
push
sti
jg
add
adc
or
mov
fldcw
out
je
inc
js
push
icebp
testl
pusha
std
xchg
loop
xchg
jg
or
inc
xchg
mov
cmp
mov
push
pop
es
mov
add
adc
xor
push
cld
fldlg2
push
mov
mov
jno
xlat
sbbl
bound
lock
pop
pop
dec
mov
dec
inc
jb
dec
adc
xor
mov
cmp
fsubs
cmp
stc
xor
cmp
movsb
mov
inc
ret
cmpl
daa
cmp
hlt
arpl
das
mov
pop
jb
sbb
jne
push
push
mov
mov
mul
in
xor
lret
ja
scas
iret
jmp
dec
push
lcall
cmp
add
out
scas
push
xor
sbb
inc
xor
in
or
adc
in
and
inc
clc
mov
jo,pn
out
mov
and
jecxz
test
sti
sbb
fisttpl
mov
insl
insl
mov
xchg
pop
inc
out
lahf
jno
pop
andb
stos
stc
std
int
xor
mov
mov
call
ja
addr16
xchg
lds
lods
hlt
jb
rorb
xor
les
pop
aas
sti
pop
and
mov
dec
lock
mov
xor
push
push
mov
out
xchg
stc
test
popa
insl
jbe
inc
int
rorl
adc
dec
out
dec
ja
xchg
adc
dec
loope
jp
sbb
cmp
lods
sub
out
stos
pop
lds
in
lret
sbb
pushf
enter
rcr
pop
xchg
dec
mov
imul
fsub
cmp
lret
in
lret
jnp
mov
popf
iret
sbb
movsl
inc
int3
shl
scas
iret
test
cmp
xchg
sub
imul
jnp
iret
out
sbb
daa
enter
and
dec
jp
aam
call
repz
mov
sub
xor
mov
sar
pop
mov
ret
data16
rclb
jns
sub
inc
adc
addr16
mov
inc
push
dec
add
in
popa
dec
inc
fcomps
jbe
fs
mov
fs
cmpb
pop
fidivs
fdivr
add
cltd
jle
fistpll
mov
add
adc
insl
and
aad
cmp
test
mov
mov
sbb
adc
popf
fdivrl
pop
cmpsl
test
test
test
pop
out
pop
shl
xorb
cmp
lods
jge
iret
jbe
lock
xchg
es
aad
fstpt
push
ret
lret
and
mov
or
add
cmp
sub
mov
fisubs
xor
ja
cmp
sbb
stc
xchg
pop
cmc
mov
inc
jb
int3
mov
xchg
xor
jle
iret
lock
sub
out
inc
lds
enter
scas
test
test
mov
mov
jg
test
negb
fiadds
call
mov
cmp
pop
pop
mov
xchg
lcall
adc
fimuls
loopne
sbb
mov
lret
icebp
fbstp
add
adc
jmp
inc
mov
lock
xchg
sub
pusha
mov
movsb
test
test
lock
fcom
xchg
lret
adc
dec
jae
push
std
cmp
int3
cmp
loop
ljmp
fsubrl
sub
aaa
cld
sub
ja
mov
dec
jl
xchg
fidivrs
fs
cs
mov
jg
outsl
pushf
jbe
xchg
stc
pop
jl
jbe
stos
lea
out
push
cld
out
lods
jmp
scas
dec
mov
jl
fldl
sahf
lock
push
or
jbe
lds
lock
insl
push
dec
fisubl
inc
lock
add
sti
jne
jcxz
xchg
push
dec
out
pop
or
scas
cld
mov
icebp
das
jge
test
xchg
sbb
sub
and
xor
jmp
inc
sbb
pop
insl
mov
lock
dec
fldl
test
mov
aam
xor
and
sarb
out
scas
imul
pop
js
scas
shrl
je
lret
out
cmp
fbstp
mov
mov
fsubrs
fisubrs
dec
pop
lock
popf
imul
not
cwtl
xlat
add
lret
mov
jg
xor
mov
loopne
mov
xchg
movsl
sub
jle
pop
and
jge
xor
inc
inc
adc
add
cmp
push
mov
sahf
addr16
call
pusha
fsts
add
xor
inc
xchg
in
mov
push
mov
inc
sysret
addr16
add
or
repnz
aaa
xor
mov
or
insl
repnz
imul
mov
xchg
mov
dec
les
inc
mov
xchg
cmp
out
and
hlt
mov
or
das
push
ja
lcall
pop
jmp
adc
xchg
mov
scas
imul
mov
cmpl
inc
insb
imul
mov
pop
rcll
jmp
loop
mov
xlat
add
lds
cs
sbb
addr16
dec
sbb
adc
ret
outsb
mov
fadds
call
loopne
mov
and
arpl
int
test
and
mov
fwait
decl
push
xlat
in
aam
mov
add
inc
inc
rorb
add
inc
inc
pop
pop
pop
dec
and
xchg
addr16
jmp
testb
sbb
adc
movsl
and
inc
jae
mov
push
sub
push
pop
inc
mov
gs
and
fnstenv
dec
push
aam
insl
jecxz
sbb
xor
xchg
xchg
pop
shlb
scas
sbb
xor
sub
mov
sbb
aam
sbb
and
ljmp
mov
jge
icebp
mov
sti
sub
enter
xor
pop
in
xlat
jp
jle
push
and
xor
cmp
jb
pop
push
test
mov
inc
popf
cmp
dec
ret
adc
xor
mov
jmp
jne
push
inc
and
pop
pop
and
or
decl
sub
jnp
sti
jns
mov
stos
inc
shlb
sub
fadds
mov
daa
js
adc
jne
push
jnp
xchg
xor
or
arpl
sub
mov
jae
negl
dec
js
xchg
adc
dec
cli
add
dec
add
daa
mov
xor
ds
dec
xchg
cmp
mov
adc
jecxz
cmp
pop
inc
outsb
mov
repz
mov
jle
mov
in
movsl
pop
movsl
ret
mov
mov
in
call
xchg
mov
test
iret
imull
add
out
mov
cltd
jle
dec
inc
orb
xor
mov
scas
and
orl
lcall
sbb
dec
imul
or
stos
sarl
lods
xor
mov
mov
add
shl
outsl
lahf
fldenv
push
in
inc
jle
dec
loopne
push
in
fstps
mov
fisttpl
lret
adc
roll
jl
inc
dec
adc
aaa
jae
aas
sbb
je
jb
add
mov
and
inc
mov
pushf
xor
stos
sbb
push
dec
in
sbb
lea
xchg
cmp
push
xchg
mov
mov
ffreep
sub
int
gs
out
repnz
add
sub
sub
adc
push
scas
in
sub
cwtl
ljmp
mov
xlat
add
fmul
dec
or
xchg
arpl
aad
arpl
cmp
mov
push
movsb
imul
mov
cmp
sub
cli
mov
aad
mov
mov
flds
fdivp
or
fs
cmp
push
or
das
xchg
out
fiaddl
cmp
lods
sahf
sbb
push
stos
push
add
jge
daa
dec
mov
addr16
add
push
pop
jle
xor
xchg
and
push
sub
jg
mov
jecxz
xchg
lods
clc
sbb
popa
inc
pop
push
adc
xchg
pop
or
je
mov
pop
jge
sbb
xor
in
pop
xor
in
int
rol
sbb
sub
adc
fucomip
jg
sbb
and
into
daa
dec
lret
call
js
jecxz
cmp
and
jno
lea
andl
incl
push
push
jge
fists
mov
add
test
aaa
insl
jns
nop
inc
neg
pop
bnd
add
or
insl
lods
lea
loop
and
out
dec
das
punpckldq
xor
jl
stos
ror
dec
in
sbb
sub
xor
add
outsl
and
cs
mov
out
cwtl
js
mov
push
mov
or
inc
add
in
xchg
xchg
sbb
xor
cmp
pusha
faddp
incl
or
inc
dec
lret
mov
jp
out
cmp
pushf
cmp
ficompl
mov
test
fldt
cwtl
mov
cs
or
insl
add
mov
add
lea
lret
int
bound
aaa
inc
pop
add
inc
arpl
data16
nop
in
and
inc
mov
loopne
and
es
bound
mov
xor
cmp
mov
push
sbb
or
mov
sub
pop
arpl
add
jmp
sub
inc
enter
lock
jae
jg
and
cli
xor
orl
xchg
xor
pop
mov
pop
into
test
mov
inc
sbb
and
ret
in
jb
lret
imul
pushf
cmp
jmp
jmp
xchg
sub
and
inc
sub
fistpl
aad
or
rorb
sub
pop
filds
jg
out
mov
pusha
bound
pop
cld
add
es
mov
sbb
aaa
addr16
enter
repz
mov
fwait
push
mov
xchg
in
test
cmc
sub
dec
mov
imul
inc
pop
stos
rorl
add
mov
nop
push
mov
push
and
out
pop
pop
fsubp
test
mov
test
repz
dec
out
shll
imul
cmpl
mov
xchg
inc
cmp
stc
test
xor
cmc
inc
dec
mov
xchg
push
mov
mov
mov
ja
lock
test
lods
stos
or
ret
cmc
push
and
xchg
jge
fnstenv
cmpl
enter
adc
add
mov
xchg
adc
data16
xchg
inc
pop
pop
stc
call
xchg
stos
loope
and
test
cmp
mov
xchg
mov
lods
dec
pop
xchg
xchg
rolb
xor
dec
adc
sbb
mov
cli
imul
push
push
push
inc
jl
jmp
cmp
jecxz
js
sbb
in
push
push
iret
aas
mov
inc
sbb
mov
pop
pop
daa
sbb
out
xchg
push
push
arpl
cmpsb
bound
and
inc
testl
sub
xlat
xchg
dec
lock
cltd
sub
pop
or
imul
mov
lcall
and
adc
push
push
inc
mov
rcl
push
fcomps
inc
jle
sub
dec
sbb
in
aam
in
add
xor
sub
dec
pop
jbe
mov
in
mov
xor
inc
gs
adc
push
enter
test
outsb
add
cmpsb
pop
xchg
mov
ds
sbb
cmp
push
adc
orl
jnp
ss
shl
xchg
daa
daa
push
data16
mov
adc
xchg
out
sbb
xchg
cli
shl
and
or
popa
aam
scas
lret
ljmp
jno
js
pop
das
lret
xchg
or
push
dec
sarb
es
jmp
inc
mov
mov
jae
mov
je
pop
std
cs
xor
sub
ss
shl
popf
sub
call
cmp
dec
in
das
shll
cmp
jge
jns
mov
aas
dec
std
popf
mov
leave
cmp
nop
jnp
mov
je
into
cli
rolb
sbb
insb
adc
lret
aas
imul
inc
mov
icebp
xor
pop
ljmp
sub
and
add
adc
adc
mov
aad
sub
jae
mov
gs
movsb
xor
les
stc
cmp
pop
cltd
pop
insb
sub
addr16
mov
xchg
rclb
jp
push
in
push
cwtl
xchg
adc
in
shll
inc
xchg
into
mov
mov
push
mov
outsl
sub
push
stos
adc
sub
pop
xchg
adc
pusha
adc
sbb
clc
jb
std
movsl
dec
or
test
or
jp
or
jno
popf
mov
mov
xchg
repnz
xor
push
push
push
clc
xor
fidivrl
clc
pop
sbb
or
inc
cmpsl
cld
hlt
aaa
arpl
into
mov
loop
fucomp
xor
cmc
nop
enter
lods
push
ds
jns
push
cltd
repnz
push
dec
cmp
pop
or
or
stos
outsb
jbe
mov
fiaddl
cmpsl
scas
sti
scas
popf
xlat
inc
out
fimull
adcl
push
cs
xor
test
rcrl
mov
cmp
sbbb
pop
adc
inc
pop
push
mov
sub
sahf
pop
int
xchg
mov
into
push
jle
add
flds
xchg
mov
dec
jae
aad
lock
inc
xor
mov
sub
out
mov
jp
pop
cltd
push
daa
repnz
pop
jge
arpl
shll
and
mov
inc
pop
scas
sub
mov
sbb
mov
dec
ljmp
pop
subl
sbb
or
or
xchg
add
add
mov
jg
ljmp
fldcw
jle
sbb
repz
rcrb
fistps
rcl
mov
push
and
jns
cmc
xchg
cmpsb
jnp
xor
inc
pushf
mov
mov
aad
adc
enter
ja
cmp
push
mov
jno
loopne
pushf
or
repz
loope
sub
insb
dec
pop
js
test
inc
inc
mov
add
ljmp
fcmovu
repz
ret
xor
lret
imul
adc
and
sbb
and
mov
aad
sbb
adc
mov
jne
push
out
mov
insl
xlat
std
leave
outsl
add
in
jl
js
pop
cwtl
imull
out
mov
xchg
pop
and
ljmp
pop
hlt
push
pushf
xor
mov
rcll
stc
xor
ret
push
adc
fisubs
notb
sbb
xor
daa
lahf
mov
movsb
nop
notb
mov
sbb
mov
jnp
pop
test
push
mov
ja
push
cwtl
outsb
sub
mov
int
jbe
cmp
jo
sub
jbe
cltd
jge
and
pusha
jbe
outsb
adc
sub
mov
push
adc
jne
xor
mov
xchg
fcoms
mov
aas
hlt
insl
add
inc
ror
jle
sbb
aas
adc
popa
cmp
ret
adc
scas
cmpsl
stc
mov
push
mov
mov
mov
or
jb
sub
pushf
mov
aas
dec
fsubl
into
gs
cmp
xor
xor
inc
sbb
mov
pop
aad
insb
cmp
popf
mov
jns
and
mov
fsubs
jo
cmpsl
and
fldcw
in
std
test
xor
cmp
cmp
push
xchg
mov
jnp
push
das
pop
pop
sahf
arpl
sbb
es
movsl
cmp
adc
js
stos
inc
ficompl
daa
out
inc
imul
and
rorb
test
fiaddl
idivl
pop
push
sbb
and
nop
push
pushl
dec
cmp
dec
ja
out
xor
jp
cmp
repz
mov
movb
push
fidivrs
out
mov
hlt
dec
add
inc
pushf
stos
xchg
dec
mov
pop
cli
test
jno
repnz
sub
insl
in
imul
enter
jbe
test
or
out
in
sbb
lret
shl
xchg
dec
mov
pop
add
mov
inc
mov
jb
inc
or
mov
in
xchg
and
cs
xor
adc
push
pop
shr
or
cli
or
sbb
in
out
mov
mov
out
imul
test
pop
sti
aaa
dec
ljmp
cwtl
shl
mov
test
inc
push
mov
sbb
arpl
ss
dec
lahf
aas
push
add
test
in
adcl
ret
lret
insl
ss
adc
and
jle
bound
push
mov
push
sbb
adcl
leave
xor
adc
outsb
int
daa
sub
mov
cwtl
mov
mov
mov
push
jecxz
mov
inc
dec
mov
jno
mov
out
loop
xchg
in
ljmp
popf
cli
inc
push
jle
fdivrs
and
lods
xchg
jecxz
sahf
stos
sbb
inc
inc
xlat
daa
push
cmp
sub
daa
xor
mov
fmuls
cwtl
pop
jae
inc
push
aas
mov
sbb
jecxz
push
jmp
or
loopne
push
mov
in
dec
rcll
rorl
xor
adc
jl
xor
das
pop
xchg
cmp
cmp
cmp
test
push
push
jl
int
push
inc
imul
test
dec
sub
flds
and
scas
stos
or
push
inc
dec
jmp
xchg
loopne
insl
clc
rolb
ret
gs
lret
aad
xchg
jb
mov
int3
inc
fs
aaa
xchg
mov
adc
pop
movsb
cli
sbb
mov
ret
pop
inc
idiv
and
mov
out
push
pusha
sub
in
outsb
mov
sub
sbb
lret
icebp
mov
imulb
xchg
inc
xor
push
jbe
push
push
nop
mov
jno
leave
fisttpll
lahf
outsl
adc
jae
bound
out
lock
pop
fwait
das
stos
jo
mov
gs
cmp
mov
or
pop
pop
sub
or
popa
pop
ds
loopne
xchg
and
adcl
jl
out
repnz
nop
mov
lock
addr16
cmp
sub
test
xchg
ljmp
mov
pop
push
pop
rcrl
bound
js
cmp
fdivl
leave
bound
fbstp
sbb
fdivrs
and
add
mov
or
push
aam
hlt
mov
pop
adc
add
daa
les
out
inc
jb
sub
mov
int
lds
mov
mov
out
sub
sbb
adc
aad
aaa
jecxz
lds
arpl
xor
inc
push
dec
xor
lods
hlt
cltd
repz
cltd
popa
ds
stos
in
repnz
xor
insl
mov
jecxz
sbb
dec
xchg
sub
and
jno
das
sub
imul
mov
cmp
fwait
and
lahf
xlat
out
xchg
icebp
mov
das
aad
sub
gs
aas
out
out
les
stc
dec
and
xchg
insl
push
mov
mov
cmp
lcall
sub
scas
lret
add
fadd
jg
sbb
xchg
jl
movsb
lea
and
xor
jne
ret
sbb
mov
sti
mov
aaa
cmp
or
add
mov
scas
xor
inc
pop
test
push
or
push
setae
jmp
adc
cmp
adc
mov
popf
lods
iret
aam
or
shrd
mov
xor
ret
pop
push
repz
add
fimull
and
cmp
xor
ficomps
pop
shl
sbb
or
add
fisttpl
adc
into
inc
pusha
notl
cmp
or
ljmp
sbb
dec
pushw
xor
ret
gs
mov
pop
and
cmp
xor
pusha
xlat
rcr
jno
int3
data16
hlt
sub
imul
pop
imul
adc
xchg
add
mov
repz
pop
rolb
pop
inc
call
test
sbb
scas
or
mov
mov
aam
push
out
mov
mov
sbb
les
add
sub
mov
ds
loop
mov
ja
icebp
in
inc
inc
pop
and
aam
pop
movsl
loop
sbb
iret
mov
fsubl
seta
mov
adc
jmp
add
and
pop
and
and
ret
clc
dec
ret
xchg
sub
dec
data16
movsbl
rolb
push
jmp
fmuls
add
inc
into
insb
aad
jecxz
push
jb
scas
cmpsl
push
stos
std
xor
xchg
sbb
repnz
andb
xchg
adc
dec
adc
out
push
mov
insb
arpl
dec
dec
enter
icebp
jl
xchg
push
cltd
dec
and
push
in
fsubrl
pushf
int3
lea
clc
leave
iret
cmp
sbb
dec
insb
pop
xor
aad
loopne
loopne
outsl
cmp
mov
shr
ret
cmpb
jle
out
cmpl
dec
xor
mov
or
loop
mov
cmp
aas
adc
lahf
inc
push
and
jo
loope
fidivl
mov
sbb
mov
sub
dec
shlb
xchg
lahf
push
fsubs
mov
push
push
cmp
cmc
adc
pop
xchg
loopne
sbb
or
mov
lret
xor
lock
leave
into
xchg
test
pop
or
mov
pop
ret
xchg
ret
mov
dec
inc
sbb
or
popa
add
inc
aas
or
push
shrl
arpl
jb
subl
pop
xorl
and
cmpl
insl
adc
in
and
pop
and
fsubrs
bound
les
and
test
out
pop
mov
jge
inc
fdivrl
loope
push
inc
cwtl
std
ss
int
aas
xchg
lock
jae
aad
cmc
adcb
push
xchg
add
lods
jae
adc
cmpsl
mov
add
popf
iret
call
dec
add
repnz
stos
push
inc
push
pop
add
or
in
imul
jl
aam
sahf
dec
out
sbb
and
jmp
xchg
pushf
js
outsl
fildll
pop
jp
fsts
sub
jnp
dec
loop
hlt
xor
and
inc
cmp
ljmp
sub
fadds
outsb
inc
mov
push
pop
loopne
add
xchg
push
cltd
cmp
mov
loopne
dec
sub
sbb
mov
xor
mov
or
test
dec
cld
roll
cmp
add
adc
mov
xchg
or
mov
push
into
push
xchg
push
aam
cmp
dec
xor
jmp
or
adc
icebp
leave
push
sbb
vaddps
xorl
dec
ja,pn
repz
vmovss
adc
mov
les
cmp
cli
xchg
out
pushf
xor
add
xchg
movsl
test
iret
mov
and
lock
inc
inc
rorl
pop
ret
pop
dec
fsubrs
pop
mov
jle
scas
jno
gs
lret
pusha
gs
lea
push
and
clc
adc
mov
adcl
mov
das
push
lret
xchg
pop
xor
mov
lods
xchg
pop
xchg
or
lds
lods
and
and
cmpl
aaa
xor
pop
repz
mov
push
in
and
in
sub
addr16
loopne
insl
std
xchg
out
jg
adc
dec
inc
push
lret
xchg
scas
cmp
xor
imulb
std
pushf
and
sub
push
lods
aas
in
fstps
mov
loop
or
mov
out
sub
or
repz
popf
add
fsts
dec
les
insl
lahf
cmp
cmpsb
and
cmp
jno
mov
in
test
test
mov
adc
aad
lods
js
dec
mov
imul
mov
in
repnz
test
rcrb
fisttpl
mov
and
pop
cmp
ret
xlat
out
mov
js
mov
ss
inc
or
scas
adc
into
movsb
cmc
xchg
fnstcw
subl
push
hlt
pop
std
add
inc
mov
xor
xor
jbe
aas
lods
cmp
fisttpll
jmp
pop
aas
cmpl
xor
les
into
test
sbb
nop
cmp
out
or
cmpsb
cmp
fst
cmp
dec
leave
pusha
imul
or
mov
adc
popl
xorb
cmc
data16
in
divb
and
test
es
into
jge
enter
adc
mov
xchg
pop
lret
aaa
shrb
push
or
dec
mov
arpl
and
jg
mov
pop
clc
mov
sahf
jno
mov
test
sub
mov
lock
mov
and
xchg
mov
push
cmp
into
sub
mov
lret
and
xchg
dec
sahf
sbb
pop
adc
enter
xchg
scas
ja
push
jb
insl
xor
call
ja
test
aad
call
popf
ficompl
jno
lock
cli
add
test
jns
imul
hlt
and
pop
push
adc
addr16
int
pop
sub
jp
xorl
les
dec
arpl
mov
push
pop
xor
loopne
ljmp
int
fidivrs
inc
shrb
dec
jmp
ret
bound
mov
mov
cmp
in
and
mov
jne
pop
mov
mov
repz
cwtl
test
xchg
jle
incb
aam
push
jns
xor
push
xor
mov
aad
imul
inc
cld
adc
fimuls
pop
rcll
lods
lods
jno
movsb
repnz
incb
mov
or
or
mov
or
adc
inc
fidivrl
ret
cmp
loope
scas
cmovl
xchg
fs
jnp
cmp
clc
addb
adc
sub
aaa
adc
xorl
inc
lods
shr
mov
ret
jns
in
push
jp
xchg
out
lds
jl
stos
insb
gs
push
sub
movsl
cmp
adc
xor
xlat
into
inc
sbb
xchg
or
cld
movsb
sbb
ret
cwtl
int3
int
xchg
mov
xor
inc
std
leave
pop
pop
xor
call
xlat
dec
out
aad
shrb
and
and
jg
test
stos
mov
decb
pusha
sbb
jle
rcrb
fldcw
imul
push
push
xchg
aaa
mov
movsl
mov
testb
shlb
jp
sbb
cli
lods
popa
pop
addl
repz
push
push
xchg
movsb
mov
out
sarl
add
xchg
mov
mov
inc
adc
cmp
push
ds
test
dec
shlb
idivl
fisubrl
and
mov
es
repnz
je
mov
pop
add
xchg
push
enter
and
xor
mov
add
rorb
sbb
call
sbb
aas
imul
insb
insl
xchg
dec
jnp
xchg
cmp
test
mov
and
ret
aas
or
cmpb
cmp
mov
mov
hlt
das
mov
push
xchg
cwtl
mov
push
adc
jnp
test
iret
xchg
nop
mov
nop
daa
sub
adc
inc
rcrl
incl
push
es
out
push
lret
push
ficoml
mov
inc
cwtl
lods
mov
lds
movsl
xor
mov
aaa
push
lahf
lea
ret
xor
js
mov
cwtl
sub
data16
addr16
rorb
pusha
aaa
daa
ss
mov
dec
mov
out
rol
adc
daa
mov
aas
pusha
adc
lret
insl
fs
dec
dec
gs
xor
xchg
jge
mov
shll
js
xor
repz
mov
shll
out
mov
mov
cmp
popf
sbb
xor
mov
popf
lods
cltd
jl
das
jp
scas
adc
bound
clc
scas
ds
notb
fstl
sub
cld
movsl
lods
fidivrs
popa
or
scas
icebp
sbb
sub
jne
jo
push
fs
jb
in
popf
in
add
icebp
mov
xor
mov
push
mov
and
cmp
mov
sbb
mov
sbb
jecxz
fstps
inc
addl
sub
mov
popa
jle
jecxz
cmp
pop
push
cmp
dec
mov
lret
aam
pop
pusha
sti
int3
movsb
dec
adc
enter
mov
cwtl
push
jmp
nop
out
xchg
lcall
clc
and
mov
mov
test
jecxz
push
jb
jns
push
add
push
mov
insb
out
daa
in
data16
into
mov
push
loope
xchg
test
fadds
out
rcl
mov
jb
inc
fdivs
test
xorb
sarl
fldcw
call
cmc
dec
xchg
test
jb
test
out
xchg
lock
movsb
mov
iret
fstps
and
xor
ljmp
enterw
xor
movsl
cld
pop
jne
jge
push
loope
lods
add
fiadds
out
mov
sti
movsb
sub
sbb
or
stc
mov
shlb
clc
pop
outsb
mov
mov
cs
loope
jnp
mov
and
xchg
sub
addr16
xor
xor
sahf
or
dec
leave
stos
inc
mov
adc
xchg
adc
mov
mov
mov
push
cmpsb
cltd
sbb
lret
faddl
and
stos
and
iret
sub
jg
xchg
data16
xor
or
cmc
push
movsl
dec
aas
mov
add
loope
xchg
shlb
stc
gs
jmp
add
fmull
lahf
dec
inc
sub
inc
jp
adc
dec
test
daa
dec
dec
addr16
lea
sarb
stc
ja
cld
cmpsb
lcall
out
mov
je
fmulp
jp
mov
aaa
in
jl
fidivl
cld
push
testb
mov
jmp
insl
and
or
repnz
or
mov
stos
loope
pop
inc
and
fadds
cltd
and
adc
mov
std
leave
or
dec
out
push
mov
repnz
je
out
add
mov
push
sbb
jns
push
push
std
ret
mov
scas
mull
adc
push
mov
dec
and
xchg
cmp
scas
jp
fwait
or
jl
call
dec
dec
ret
loopne
jne
inc
sub
and
jb
bsr
xor
pop
push
sarl
es
jl
es
mov
xor
pop
clc
pop
mov
decb
pop
gs
mov
push
rcr
or
pop
imul
cmp
sbbl
pop
testl
das
cmp
mov
push
sbb
add
pop
pop
loopne
mov
sbb
subl
shrb
dec
das
sub
data16
cmpsl
push
inc
hlt
mov
idivl
cmpsl
and
xor
adc
inc
mull
fcoms
leave
sbb
rorl
push
mov
je
outsb
in
ror
repz
or
or
push
mov
push
xlat
in
mov
push
add
testb
out
jmp
adc
jnp
jp
cmp
into
push
das
cmp
jnp
xchg
arpl
or
ds
nop
inc
or
cmp
pusha
stos
push
rorl
stos
lahf
in
outsl
sbb
mov
cmp
shlb
cld
cmp
nop
push
repnz
sbb
xchg
movsl
call
inc
les
flds
stc
add
xor
ljmp
pop
jno
mov
push
add
hlt
push
pop
adc
push
xlat
cmpsl
dec
fisttpl
loopne
jecxz
subl
jle
mov
movsb
ja
xor
in
xlat
cmp
jge
mov
cmp
lcall
in
aas
mov
in
xlat
insl
ficoms
mov
bound
cmp
test
lea
xor
add
gs
leave
out
in
mov
insb
fidivrs
ss
mov
sub
ljmp
push
and
ja
stc
jp
mov
push
cltd
lea
cwtl
int
pushf
cld
xchg
or
lock
mov
push
fs
in
add
jnp
das
leave
scas
test
lods
or
adc
xchg
cmp
add
xchg
pop
outsb
shrb
jbe,pn
xchg
cltd
mov
jge
imul
lock
adc
std
mov
sbb
inc
bound
push
or
mov
mov
lret
xor
push
out
push
arpl
arpl
mov
mov
mov
out
dec
insb
mov
adc
enter
mull
cltd
outsb
pop
xor
fs
and
lods
or
outsb
bound
ret
ja
aam
xchg
loopne
lahf
pop
mov
cs
pop
sbb
cmpsb
sbb
and
shlb
cmpsb
sub
push
jge
mov
mov
jl
push
imul
mov
push
mov
inc
pop
repz
push
cmp
sbb
fdivp
mov
or
icebp
into
or
xor
ret
aaa
xor
int3
and
ret
jae
repz
cwtl
in
outsb
mov
dec
icebp
add
pushl
aas
xor
push
pop
fstpl
adc
cmc
mov
pop
xchg
push
and
mov
jle
add
jno
jecxz
or
dec
loop
add
stc
js
inc
das
sub
pop
jp
sbb
inc
mov
ret
sbb
mov
adc
dec
sbb
xchg
dec
sbb
pop
mov
jl
test
hlt
shll
insb
pop
test
sbb
xor
mov
mov
mov
pop
jl
out
in
dec
mov
mov
cmp
insb
and
cmp
jnp
loope
push
mov
jle
xor
mov
push
test
repnz
add
pop
mov
jae
cmp
jo
in
push
adc
jge
mov
mov
ja
sbb
adc
xor
gs
sub
or
pop
and
jecxz
lret
xlat
mov
mov
repz
adc
daa
cltd
stc
arpl
sub
pop
push
cli
cmpsb
fdivs
xor
mov
mov
mov
lret
adc
roll
stos
xor
push
dec
jmp
sbb
mov
dec
adc
jno
pop
and
ret
movsl
xchg
sbb
push
sub
adc
gs
jno
cmp
jb
cmp
imul
push
aaa
sahf
pop
mov
fs
and
sbb
pusha
cmova
xchg
inc
dec
in
sub
cmpsb
cmp
xorb
xchg
jne
sub
push
lcall
xchg
sub
outsb
imul
mov
js
rorb
inc
pusha
jge
xlat
and
fiadds
gs
xchg
sbb
pop
xor
mov
fwait
sub
pop
sbb
mov
and
xchg
sbb
stos
cltd
pop
lret
lahf
div
in
addr16
add
sar
cmp
or
xlat
in
sarl
stc
sub
sbbb
push
mov
inc
xchg
or
sbb
add
inc
push
add
push
dec
aad
pop
jl
test
roll
push
fwait
or
adc
dec
add
lret
xchg
andb
cwtl
lock
hlt
mov
popa
fstpt
das
aaa
push
sub
sbb
mov
jb
mov
cmpsb
enter
stos
lret
push
sub
movsb
sub
js
fnsave
mov
mov
cmp
adc
mov
xchg
adc
nop
mov
cmp
mov
lods
ds
sub
aaa
mov
and
xchg
mov
ret
and
je
pop
jnp
mov
jl
sub
scas
sub
int3
or
mov
jo
loopne
loope
sbb
test
into
pushf
pop
pop
mov
int
jbe
pop
cwtl
pusha
xchg
adc
push
andb
loop
loop
cmp
jp
mov
adc
add
adc
in
lahf
lcall
loopne
xchg
shll
dec
loopne
loope
cld
adc
mov
int3
xor
mov
shrl
inc
sbb
jp
dec
loop
sqrtps
aas
daa
push
pop
jg
test
out
mov
jae
ret
xchg
enter
fisubrl
adc
inc
sti
clc
jnp
cmp
sbb
or
inc
xchg
test
mov
mov
cmpsl
ss
xchg
leave
inc
dec
push
jle
inc
inc
mov
cmp
rcrl
push
data16
outsl
insb
mov
adc
add
and
incl
push
sbb
xchg
popa
mov
loopne
loope
or
jns
mov
outsb
sbb
daa
cmpsb
fwait
lea
mov
cmp
loopne
sbb
test
add
jo
insl
xor
lods
leave
mov
aas
mov
outsb
shlb
fcompl
pop
mov
lea
xchg
movsl
mov
jbe
dec
sbb
adc
cmpsb
dec
cld
test
sarl
push
xorb
cmp
xchg
mov
mov
push
sub
adc
nop
jbe
jg
jne
aam
test
inc
fwait
or
mov
mov
add
ss
jae
cmp
dec
sti
mov
xchg
aam
stc
out
adc
sbb
add
stos
push
test
sbb
inc
cmp
or
jb
lods
inc
aam
or
and
jge
and
pop
sbb
arpl
jmp
adc
stos
mov
sbb
shlb
dec
inc
ret
jp
sub
mov
jp
and
test
inc
mov
std
dec
xor
roll
adc
dec
push
and
push
cmp
aad
cmc
push
mov
cmc
rolb
scas
inc
push
je
adc
cmc
lods
mov
lret
mov
sahf
fst
arpl
mov
xor
das
out
add
scas
shll
scas
adc
arpl
jg
pop
out
jae
stos
pop
xchg
sub
or
add
jecxz
mov
fidivl
jg
xchg
into
ret
ljmp
mov
ficompl
cli
mov
ss
push
jp
push
dec
add
divb
xchg
pop
xor
sbbb
cmovg
add
into
call
imul
mov
pop
mov
jae
xchg
inc
mov
mov
test
int3
in
test
add
pushf
imul
in
cmp
sub
fwait
and
addr16
cmpsb
aad
sbb
adcb
popf
out
sbbb
lds
add
imul
mov
sbb
in
test
cmp
inc
xor
push
and
enter
mov
push
icebp
inc
test
shll
jne
ljmp
mov
mov
mov
pop
mov
adc
iret
or
mov
scas
stc
lods
xchg
pushf
sub
dec
jp
mov
mov
lcall
in
pop
std
gs
cs
ss
jnp
int3
sbb
into
nop
xchg
push
aam
in
jecxz
icebp
add
sbb
mov
add
call
inc
sti
mov
fisttps
inc
mov
jmp
pop
mov
ja
cmpsb
mov
jnp
jbe
push
push
pop
mov
xor
movsb
mov
ss
lock
and
sbb
mov
push
hlt
add
or
hlt
cmp
shrb
sub
aam
push
adc
testb
inc
nop
or
roll
push
adc
xchg
nop
sub
jmp
push
insb
cmpsb
inc
dec
inc
das
pushf
xchg
nop
aam
jl
dec
push
xlat
cmp
inc
and
push
sti
dec
mov
xor
xchg
pushf
js
stos
fistl
scas
rcrb
adc
add
jl
cmp
jnp
push
and
mov
cltd
hlt
adcl
and
call
enter
sbb
xor
je
mov
popa
insl
adc
inc
pop
or
lods
fdivs
xlat
aaa
push
cmp
inc
jmp
stos
ret
add
sub
imul
hlt
movsl
pop
cmc
adc
lds
fnsave
shl
scas
pop
test
add
jne
repz
pop
pop
jmp
jae
push
ljmp
jns
jno
clc
into
pop
cmp
out
xchg
aas
in
sub
lds
add
fdivrs
mov
pop
ret
in
and
dec
jmp
xor
mov
lods
push
dec
xchg
cmp
sahf
dec
movsb
xlat
add
xchg
xor
pop
mov
mov
notl
mov
setl
mov
xor
rcl
sbb
cltd
aam
inc
push
add
mov
mov
xchg
imul
inc
jb
arpl
cmpsb
jbe
add
xor
dec
les
xor
fmuls
out
sbb
daa
add
mov
sbb
push
jmp
and
and
clc
mov
jb
sbb
mov
stos
pop
sub
decl
sbb
rol
in
movsb
sub
add
mov
push
mov
lret
imul
out
call
xor
inc
aaa
leave
imul
loope
mov
or
add
shl
mov
in
or
addr16
jle
insb
adc
jg
inc
sbb
and
xor
mov
call
subb
sub
sbb
mov
in
inc
mov
adc
mov
rorl
icebp
mov
imulb
lods
dec
ficoml
jbe
ret
stos
dec
xor
jae
std
xchg
mov
adcl
sub
lret
std
fildll
inc
dec
or
adc
rcr
outsl
shrb
popf
data16
push
jg
imul
mov
xchg
in
imul
cmp
xchg
mov
xchg
and
repnz
ja
or
rclb
aad
pop
xor
into
adc
xor
and
daa
scas
add
add
fldcw
cmp
lods
xchg
add
idiv
insb
rol
mov
jecxz
cli
fnsave
inc
jg
xchg
repnz
cmpsl
xlat
in
add
dec
ss
inc
or
in
mov
lods
test
jae
jp
ret
loopne
jg
scas
out
movsb
int3
scas
jbe
push
mov
cltd
sbbl
mov
nop
add
xor
xlat
out
push
dec
pop
addb
addr16
adc
test
shrb
lcall
adc
fimull
jle
loop
fdivrl
sarl
mov
adc
rol
pop
das
clc
push
mov
cmpsb
loop
pop
jns
ja
or
pop
dec
push
ficomps
cmpsl
inc
inc
xorl
dec
outsl
aad
es
cmp
orb
pop
mov
or
insb
fwait
cmpsl
push
icebp
sbb
add
in
iret
pop
push
add
xor
je
pop
insb
cld
in
inc
xchg
adc
imul
stos
bound
cmp
dec
push
cmpsb
xlat
sub
std
sub
jbe
pop
outsb
and
sbb
lea
sbb
add
add
xor
in
outsl
lods
push
push
andl
mov
pop
push
fldcw
cwtl
cmc
mov
jle
iret
pusha
add
ja
adc
sub
lahf
pop
cwtl
sub
mov
mov
xlat
aad
lock
or
xchg
mov
inc
jl
lcall
adc
out
xchg
out
and
jo
stos
or
cmp
sub
call
push
out
imul
mov
mov
cmpsl
jge
push
js
and
push
imul
fildll
adc
xor
in
lret
add
addr16
sbb
pushf
inc
repz
mov
inc
push
mov
test
rcll
movhps
ja
sub
fstps
inc
inc
or
mov
inc
xor
int
jl
test
xlat
cmp
mov
mov
dec
sub
ja
fisttpll
and
push
pop
imul
iret
inc
jns
outsl
les
mov
ret
pushl
xchg
loopne
sbb
jl
cli
dec
sbb
fdivr
loope
fsts
cmovo
aaa
shll
lods
mov
mov
jmp
push
adc
cltd
xchg
jge
inc
rorl
fidivl
jo
cwtl
push
jne
dec
cwtl
scas
aad
mov
sbbl
ret
inc
dec
lds
lock
fwait
push
mov
orl
icebp
pop
adcb
push
jmp
jb
xchg
pop
fwait
mov
je
push
rcrl
imull
fwait
cmpsl
pop
les
ret
pop
das
and
push
int
clc
cmp
leave
xchg
push
push
sub
sbb
in
xor
dec
xor
cmp
shll
mov
pop
imul
daa
push
push
aaa
and
sbb
adc
bound
icebp
addr16
imul
popf
outsb
sbb
lret
int3
in
in
jae
out
pop
fcmovb
rol
mov
xor
xor
fidivrl
mov
xchg
lahf
decl
imul
or
loopne
push
mov
icebp
out
mov
incl
inc
mov
dec
adc
mov
ss
jo
mov
push
cwtl
mov
pop
loop
sub
xor
pop
imul
xchg
mov
movsl
fisubl
fadd
cmc
pop
scas
icebp
mov
xlat
add
data16
in
repz
jge
sar
bound
in
ds
inc
cs
lret
cmp
inc
adc
add
mov
out
dec
fwait
pusha
push
in
push
mov
cmp
and
and
fsubs
adc
mov
push
push
xlat
es
xchg
stc
pusha
scas
out
bound
icebp
jo
mull
jmp
out
cmc
sbb
ds
xor
inc
outsl
xchg
sti
jle
jne
and
lret
push
bound
cmp
jle
cwtl
rcrl
xor
mov
mov
xor
aaa
xlat
push
xor
test
imulb
adc
imul
movsb
repz
inc
movsl
sbb
dec
and
inc
xchg
arpl
push
xor
inc
mov
aaa
mov
or
test
inc
xor
test
mov
mov
scas
jl
sub
int3
sbb
addl
push
or
xlat
cmp
cmp
shlb
add
sarl
or
ds
fs
cmp
pop
fcmovnb
pop
inc
in
jb
insl
xlat
fiadds
orl
sbb
int3
pop
and
cmpsl
sbbb
xor
sbb
in
repz
ljmp
lret
pop
loop
arpl
aam
fs
push
inc
pop
rcrl
jns
int
mov
xchg
inc
add
data16
out
mov
jg
sbb
popf
and
jl
jge
jmp
lods
test
rcll
and
aad
stc
scas
in
mov
push
rcrl
sbb
mov
inc
push
test
movsl
hlt
cmp
iret
pop
test
mov
out
sti
addr16
jle
aaa
les
in
fcomp
loopne
sbb
and
xchg
mov
andb
pop
std
push
lret
mov
xchg
cmp
rorl
lock
mov
es
into
stc
call
inc
ljmp
push
and
bound
add
test
daa
clc
inc
push
loope
adc
call
ret
mov
xor
lods
fcoml
das
gs
aad
loop
pop
xchg
leave
outsl
cmp
sub
or
pop
cmp
stc
fldenv
sbb
adc
jl
mov
mov
out
in
or
dec
adcl
lret
mov
mov
xor
jecxz
shlb
or
add
cmc
adc
and
push
out
sub
and
test
mov
pop
sub
pavgb
loopne
es
jecxz
dec
mov
gs
imul
mov
lods
xorb
pop
push
mov
cltd
ja
pushl
push
ja
xchg
jo
aad
std
aad
mov
mov
jae
add
mov
movsb
mov
xchg
or
jp
jno
movsl
nop
push
add
lods
inc
movsb
scas
scas
sahf
jmp
sub
or
lret
sbb
push
out
pop
in
fists
or
xchg
addl
cmpb
xchg
stos
jnp
mov
mov
les
andl
insl
faddp
inc
decl
dec
dec
shrb
shl
mov
jp
jmp
and
in
arpl
xchg
xchg
fwait
iret
xor
mov
xor
loop
adc
sysenter
add
jo
scas
int
pop
sar
cmp
or
out
cld
sarl
loopne
test
and
cmp
mov
mov
push
jle
das
mov
sbb
lahf
mov
and
insb
outsl
push
jge
xor
jo
hlt
xchg
rolb
leave
sbb
in
pop
dec
add
dec
cmp
fsts
adc
adc
pop
pop
pop
xor
jno
shll
fcoml
cmc
outsl
inc
sub
cmpsl
adc
jp
or
lahf
mov
adc
xchg
mov
push
lret
shll
mov
ds
insb
or
inc
mov
aad
movl
loopne
push
mov
in
data16
dec
pusha
dec
jne
pop
sahf
std
leave
xor
adc
xor
clc
dec
push
shrl
sahf
xchg
cmpl
dec
mov
mov
cmp
div
popa
inc
cmp
push
in
jle
ljmp
sub
repnz
sbb
mov
cli
cmpsl
xorl
clc
test
pop
into
aam
sub
or
push
sbb
mov
ret
stc
inc
adc
rclb
or
gs
das
fcoms
xor
and
test
dec
mov
xor
pop
xchg
dec
dec
sbb
ja
lret
mov
pop
cmpsb
jmp
scas
cmp
shrb
push
insb
mov
lret
xchg
lock
cwtl
push
and
pop
xor
dec
push
push
jne
jecxz
and
ljmp
inc
dec
lock
scas
sbb
dec
sahf
test
enter
pusha
sub
int
mov
add
dec
push
lds
xchg
and
adc
xor
pop
mov
stc
pop
dec
aam
in
xor
xor
jge
fistl
adc
flds
icebp
insb
mov
or
icebp
xor
add
add
cmpsb
scas
test
int3
fsubl
ret
inc
in
mov
sub
mov
les
iret
movsl
mov
gs
loop
mov
ficompl
jns
sbb
gs
pushf
icebp
add
xchg
push
test
hlt
pop
xor
sub
inc
or
enter
mov
jbe
jp
xor
add
repz
sub
jb
cs
sbb
and
dec
lret
arpl
adc
or
pop
mov
lock
push
test
fbstp
fs
add
sub
dec
test
push
ret
shll
jle
inc
insl
xor
mov
orb
not
xchg
pop
iret
outsb
cmpsb
sbb
dec
in
jg
in
cmc
push
cmc
jge
imul
fnstcw
adc
cli
mov
and
nop
divl
xchg
xchg
aam
cmp
mov
scas
adc
aad
sub
or
scas
ret
push
imul
fcompl
gs
ret
cmp
cmpsb
push
fldt
int
sbb
test
leave
xor
and
ds
dec
stos
sub
jecxz
aas
sub
mov
jmp
call
shlb
pop
sub
jne
cmp
test
add
int
jmp
aad
jbe
pop
fidivrl
lds
outsl
sarl
ds
push
mov
or
lds
leave
ss
mov
ljmp
test
in
jns
inc
dec
and
or
sbb
add
pusha
sbb
lahf
enter
add
insb
mov
xchg
xchg
je
loopne
cmp
lret
push
idivl
dec
in
aas
mov
leave
sbb
jns
cmp
scas
in
xchg
add
dec
pushf
clc
jmp
pop
adc
jl
mov
push
mov
jo
adc
mov
inc
and
push
andl
lret
xchg
cmp
xor
mov
dec
dec
lock
dec
xor
fistps
xchg
jg
cmpb
jmp
test
xlat
fdivr
adc
ret
adc
nop
jp
dec
adc
test
orl
testb
push
jmp
test
loop
mov
or
sahf
aam
push
mov
cmp
pop
rorl
decb
xchg
or
push
lret
cli
sub
push
femms
fcomps
pop
or
add
pop
mov
daa
shrb
mov
push
int
cwtl
shll
pop
cmp
dec
mov
lea
or
add
add
jbe
loop
and
pop
gs
push
ret
sbb
shlb
int3
cli
das
mov
adc
mov
and
pop
and
adc
fdivrs
int
in
push
cmp
push
rsm
push
and
cmc
lea
addr16
ret
jecxz
xchg
and
pop
outsb
push
sub
test
mov
nop
shll
add
pop
xchg
fsts
mov
nop
pop
fisttpl
adc
aas
sub
cmc
out
lret
imull
or
imul
jbe
xor
adc
jo
dec
out
andb
cmp
leave
shll
ljmp
pop
out
clc
adc
cmp
out
xor
mov
ljmp
sahf
je
call
dec
pop
inc
inc
loope
orb
lret
xor
jecxz
inc
push
lcall
or
fisubrl
jae
fadd
data16
notb
fstpl
aaa
data16
xchg
mov
cmp
xchg
fs
mov
inc
xchg
outsb
loope
push
cmpsb
or
jae
adc
mov
pop
xchg
xchg
push
mov
jnp
popa
movsb
jnp
je
xchg
lret
cmp
sbb
push
es
je
jns
and
and
adc
pop
sbb
or
ror
adc
and
cmp
lahf
jns
push
adc
inc
mov
or
sub
push
cmpsb
movsb
mov
cwtl
mov
xchg
out
dec
ljmp
ljmp
xor
mov
mov
loope
hlt
add
add
and
stos
jp
mov
not
cltd
iret
notl
jb
sahf
adc
dec
dec
inc
or
pop
xor
push
dec
lods
inc
aas
repnz
push
mulb
loop
sbb
dec
pop
xchg
test
popa
add
pcmpgtb
popf
mov
add
ret
mov
jle
aaa
mov
or
daa
mov
imul
xor
test
mov
xchg
xor
mov
testl
mov
mov
cmpsl
jne,pt
sub
cmp
push
pop
insl
xchg
pop
push
mov
mov
out
mov
je
adc
sub
pushf
sarb
and
push
jns
push
lret
cld
fisttps
pop
imul
insb
and
jbe
inc
inc
loop
pop
mov
lcall
jb
rcr
sub
in
pop
rol
stos
mov
sbb
add
adcl
lock
insl
sbb
ficomps
andl
hlt
ds
das
and
pop
push
shr
adc
xchg
enter
and
adc
lock
insb
adc
ror
pop
lcall
inc
mov
adc
push
rolb
mov
add
mov
jp
fldcw
arpl
lods
or
sbbb
pop
rcl
pop
movsl
filds
adc
adc
clc
mov
out
movsl
js
mov
xchg
test
and
jl
fiaddl
dec
aaa
inc
mov
mov
jo
fsubrl
popa
fldl
push
cmp
inc
ret
in
jo
xor
movsb
mov
scas
adc
fisttpll
in
and
nop
mov
adc
call
loope
stc
jns
insl
or
lret
clc
and
or
or
jge
mov
pop
fisttpl
cmp
les
adc
lahf
jns
inc
out
insl
push
fistps
or
add
inc
aad
mov
scas
jno
jae
jb
mov
mov
xor
dec
xorb
or
jle
ljmp
ljmp
sbb
mov
xor
add
jmp
jmp
xor
adc
dec
pop
inc
out
call
in
or
xchg
in
fcomps
popa
push
mov
pop
dec
mov
add
lret
sti
add
out
xlat
out
pusha
fnstsw
int
ret
sub
call
xchg
stos
mov
add
mov
out
sbb
cmpsl
inc
add
and
in
std
rcl
xchg
orl
movsb
xchg
or
lahf
in
in
pusha
mov
clc
fadds
cmp
mov
rol
loopne
cmpsl
sbb
pop
lahf
and
mov
pushl
or
sarl
inc
notb
int3
addr16
cmp
out
add
stos
jmp
adc
cmc
flds
mov
and
ds
cmpsl
jle
call
aad
stos
cwtl
jmp
es
bound
adc
aas
cmc
roll
scas
sbb
cmp
mov
les
cmpb
xor
arpl
ljmp
mov
lret
call
mov
add
shl
std
je
movntq
xor
insl
pop
sub
push
movsb
ljmp
add
mov
and
imul
inc
insl
scas
hlt
or
das
fiaddl
xor
cmpsl
pop
incb
mov
aaa
std
cwtl
sub
mov
cmpl
les
aad
aad
mov
es
insb
sbb
and
dec
aas
cmpsl
test
push
fsubl
clc
inc
and
mov
cs
pop
lcall
sub
fstl
negb
pop
mov
xchg
add
and
or
mov
add
cmp
ljmp
pop
mov
insb
ljmp
cmpsb
mov
cs
fadds
add
les
inc
push
test
mov
inc
mov
mov
mov
dec
push
dec
cltd
pop
into
xchg
bound
pop
outsb
sbb
jge
sub
cmp
movsl
sbb
inc
push
roll
cmp
xlat
daa
and
ret
xlat
test
xchg
pop
js
imul
cwtl
inc
clc
sbb
out
arpl
xchg
cli
add
inc
dec
or
mov
sub
xlat
sbb
ljmp
sahf
movsb
subl
mov
push
jae
out
cmp
test
inc
lds
jo
pop
je
adc
scas
out
xor
in
xor
and
push
es
cmp
int
cmc
adc
aas
mov
ficoms
imul
shrb
outsl
xrelease
stos
xor
add
inc
pushf
imul
fcompl
rcr
and
dec
mov
mov
add
aam
out
or
sbb
sub
fs
aaa
test
mov
pop
inc
aam
jmp
pop
das
and
xor
mov
push
andl
loopne
cmp
cmp
out
pop
jbe
fstp
popl
and
push
leave
imul
sub
imul
imul
scas
loop
xchg
lcall
cmp
inc
mov
jle
push
scas
stos
fildl
cmpsb
fimull
cmp
repz
jl
dec
imul
jb
fdivs
adc
mov
cmp
frstor
push
pop
call
fcomps
sbb
fs
sbb
clc
pop
mov
cltd
int3
cmp
pop
pop
dec
dec
jb
inc
xchg
test
mov
push
clc
pusha
fs
and
cli
mov
pop
incb
push
add
push
inc
bound
xor
out
jecxz
cmp
mov
add
inc
dec
jns
jg
dec
loope
inc
out
mov
lret
shl
cmp
shrl
push
daa
xor
dec
mov
repz
adc
xchg
mov
add
test
clc
cvtps2pi
xchg
ja
int
lahf
into
scas
xchg
jg
mov
xchg
push
pop
icebp
inc
cmp
mov
xchg
bound
les
xor
loop
mov
xadd
fdivrl
sbb
mov
repnz
cmp
jge
bound
push
icebp
or
mov
lret
dec
inc
pop
mov
xchg
les
mov
xor
lods
cmp
out
adc
jo
jge
cmp
and
jne
int
lret
sub
lahf
shll
sbb
jg
or
aas
pushf
enter
es
dec
adc
jns
push
dec
pop
jge
xor
je
mov
in
fisubrl
idivl
pop
xchg
es
test
lea
and
cld
mov
push
jg
mov
lock
out
stc
cwtl
adc
add
adc
scas
mov
popf
xor
stc
or
adcl
sti
push
testb
sbb
popf
je
aaa
shll
inc
pushl
je
clc
mov
loope
add
in
add
mov
out
mov
or
lahf
out
fsubp
test
cmp
insb
and
divb
mov
cltd
rcrl
insb
sbbb
pop
jl
xchg
dec
hlt
xor
push
sbb
inc
or
pop
and
lcall
cmp
sbb
push
or
or
jne
jl
adcb
scas
sarb
push
ja
mov
adc
push
inc
pop
pop
push
xor
testb
aad
fdiv
mov
or
or
inc
imul
xor
dec
aaa
lds
shlb
addl
add
mov
gs
pop
int
mov
pushf
scas
fidivs
cmpsb
aam
mov
out
cmpsl
push
aam
test
aad
push
out
repnz
pop
iret
or
inc
and
ja
movsb
out
add
addl
jo
sbb
vpunpckhbw
or
test
imul
cmpsl
xchg
sub
stos
cmp
sub
sbb
aad
mov
cld
push
pop
and
fstp
jo
jb
es
aam
inc
inc
push
mov
pop
outsb
adc
mov
mov
adc
mov
xchg
inc
leave
or
xchg
inc
jne
sbb
stos
or
fmulp
out
aad
xor
cmpb
addr16
lret
push
cltd
fs
test
nop
dec
pop
test
arpl
arpl
cltd
pop
out
dec
fdivs
pop
mov
push
mov
xor
inc
add
mov
pop
jle
test
in
xor
dec
pop
test
add
cmpsb
push
shlb
and
sti
or
pop
pop
push
mov
addr16
jbe
ret
mov
aad
pop
roll
mov
mov
sbb
or
mov
mov
mov
or
mov
cmp
pop
fistpll
outsb
lods
scas
inc
cmp
cmpsl
add
jnp
mov
xchg
push
stc
push
cs
jmp
adc
inc
ja
stos
adcl
aaa
xchg
ficoms
mov
rolb
sub
ljmp
in
je
mov
and
push
pop
adc
pop
sub
lds
rol
data16
push
jne
and
jmp
sub
divb
adc
imul
addl
mov
mov
das
lret
gs
subl
adcb
test
pop
int3
jbe
add
ja
testb
imul
mov
sahf
lods
mov
xchg
mov
push
xchg
out
inc
sub
div
cmp
jp
push
inc
imul
mov
dec
mov
mov
stos
and
cmp
xchg
loopne
dec
ret
sbb
xor
and
aas
xor
cmpsl
mov
and
or
shlb
or
repz
fs
mov
sbb
cmp
adc
push
add
push
mov
and
daa
xchg
mov
test
icebp
cmpsl
lret
inc
gs
clc
cs
xlat
mov
inc
pop
sbb
verw
add
jbe
in
push
popf
test
stc
mov
pusha
addb
xor
and
scas
adc
inc
mov
in
mov
fimuls
pushf
test
out
jnp
mov
cmc
hlt
cmpsl
lret
push
lret
push
mov
xchg
add
lds
inc
and
fs
sbb
cmp
push
test
mov
pop
mov
ds
jnp
cmpsl
std
pop
arpl
push
ficomps
test
sarb
pop
and
mov
mul
dec
sbbl
mov
xchg
leave
xor
divl
push
mov
mov
insb
mov
arpl
inc
popf
lcall
inc
addr16
mov
xchg
jo
imul
pop
adc
iret
stc
mov
repnz
test
es
mov
xor
in
out
cmp
into
ret
push
inc
cmp
jns
movsl
shll
fcomps
mov
jns
and
ret
enter
sbb
and
pop
adc
xlat
dec
xchg
int
into
xchg
mov
repz
mov
int
mov
imul
xchg
negl
adc
test
inc
je
xor
enter
out
xchg
mov
orl
ljmp
je
loope
aam
adc
arpl
fnclex
ss
mov
add
leave
repnz
add
not
sub
jmp
subb
in
dec
mov
or
jl
xor
mov
add
xchg
ret
lcall
int
arpl
loope
scas
out
mov
and
call
mov
mov
dec
push
test
inc
or
pop
fnstsw
mov
lret
mov
add
push
or
mov
lret
mov
xor
rolb
sti
lahf
push
adc
mov
cld
sbb
mov
or
and
jns
mov
xchg
jg
push
scas
add
pop
nop
xor
dec
and
pop
adc
sub
jnp
xor
cmpsl
push
rcrb
mov
push
cltd
mov
aad
mov
stc
jns
call
addr16
adc
jo
jl
jo
jl
stos
loop
loopne
stc
and
ficoms
pop
rcrb
cld
cli
test
dec
dec
push
inc
stos
mov
fs
loope
pop
loop
cmp
jae
xchg
and
lods
hlt
mov
fildll
dec
inc
jbe
mov
pop
out
sti
je
lds
inc
lahf
fwait
stos
mov
stos
iret
push
loopne
nop
paddq
int
inc
adc
xchg
pop
lret
mov
fstl
rorb
inc
xchg
mov
subl
repz
jl
fwait
dec
leave
pop
sbb
scas
into
pop
dec
push
pop
ret
lahf
ret
dec
mov
and
xchg
or
push
adc
out
sbb
mov
mov
or
daa
icebp
testl
enter
cmpsl
jns
test
jno
popf
adc
sub
faddl
mov
popa
inc
cmp
mov
jg
lcall
rol
movsl
pop
dec
mov
adc
imul
cmpsl
call
in
sbb
mov
sub
and
into
push
imul
sub
push
testb
jbe
clc
aaa
jne
lret
mov
aad
int3
inc
daa
dec
xchg
rorl
imulb
jle
xorb
jae
movsb
mov
jbe
add
ja
xchg
pop
and
lret
and
in
lcall
adc
push
es
fwait
sub
xlat
cs
pop
icebp
jl
cmp
add
stos
pop
jecxz
std
je
clc
mov
mov
ss
out
cmp
mov
dec
insb
and
cmp
xor
je
jbe
cli
push
cmpsl
sub
bound
in
fadds
dec
xchg
fdiv
sub
dec
inc
ss
inc
mov
rcr
dec
data16
rorb
inc
dec
mov
or
push
mov
or
add
test
dec
mov
inc
inc
cmp
loope
jbe
rclb
fistl
pop
cs
faddl
pop
repnz
and
pop
cmp
mov
pop
aad
dec
aas
sbb
and
jae
or
xchg
jmp
mov
lret
hlt
int3
mov
jmp
mov
add
or
add
pop
ja
jp
and
push
xchg
xchg
adc
push
pop
mov
sbbb
in
fsubr
sbb
stos
push
xor
inc
mov
push
jmp
adc
mov
adc
sub
pop
sub
cmp
dec
push
inc
popf
and
add
dec
pop
cmp
adc
dec
ret
out
jmp
jno
jecxz
add
push
into
lods
fcoms
inc
xor
sbb
iret
test
adc
add
out
and
je
sbb
inc
inc
push
insl
orb
int
and
dec
jno
inc
mov
fucomip
loopne
push
xorl
push
int3
and
and
lret
push
mov
xor
movsl
sahf
aad
loopne,pt
clc
cmp
fldt
jg
divl
inc
loope
push
mov
lds
ds
push
cmp
inc
or
adc
jecxz
pop
imull
dec
rcrb
push
les
cmpsb
jge
addr16
mov
push
stc
imul
lods
or
movsb
std
push
cmpsl
mov
dec
daa
mov
pop
out
das
cmpw
out
pusha
bound
pop
cmpb
cld
dec
into
sbb
mov
sti
push
fcmovnb
and
fwait
inc
pop
pusha
lahf
gs
add
mov
arpl
fsubs
cmp
jbe
pop
sbb
ss
pusha
inc
inc
sti
or
shll
shll
shlb
loopne
fdivrl
frstor
cmp
stos
das
out
xchg
loop
imul
add
dec
adc
popa
mov
loope
andb
push
cmp
jg
or
sub
mov
fnstsw
rcrl
push
sub
aad
cmpsl
push
xchg
xchg
rclb
lret
or
or
loope
add
rcr
mov
int
xchg
pop
xchg
pop
adc
in
and
in
push
adc
clc
adc
cld
rcrb
mov
lds
sbb
nop
popa
mov
mov
sahf
xor
mov
xlat
stc
int
adc
mov
div
stos
push
xlat
add
mov
mov
imul
enter
jb
mov
fwait
mov
push
fwait
addr16
movsb
adc
ljmp
scas
ss
push
pop
jnp
jns
popa
and
cltd
jnp
sub
repz
hlt
cmp
insb
lods
pop
faddp
lods
and
mov
repnz
push
cmpsb
cltd
pushf
fs
arpl
cmp
mov
cmp
mov
xchg
push
lret
mov
rclb
rol
sbb
mov
into
add
test
jg
xchg
enter
mov
leave
mov
lret
cmp
pop
inc
bound
mov
xchg
mov
repz
in
add
xor
clc
rolb
cmp
out
cwtl
mov
xor
mov
test
cmp
fwait
outsb
lds
insb
sti
test
mov
or
pop
inc
repnz
and
fsub
jo
fisubs
mov
and
push
mov
add
sub
mov
push
fsubrs
dec
sbb
xor
push
push
shrb
adc
mov
movsl
or
divb
mov
mov
sub
jle
mov
dec
xchg
test
xchg
mov
or
pop
jmp
jbe
xor
in
jmp
jns
ret
jnp
loope
push
sub
cli
outsb
and
mov
inc
leave
adc
scas
jecxz
xchg
shlb
fidivs
sbb
iret
roll
notl
mov
jl
into
cmp
jo
mov
add
dec
pushf
add
sbb
loopne
cmc
pushf
mov
xchg
xor
mov
jecxz
push
stos
jge
pushw
aam
out
out
lea
mov
dec
add
mov
adc
adc
test
push
hlt
lods
pop
mov
aas
push
jnp
aam
dec
icebp
sub
cmp
pop
pop
sti
cmp
fldl
xchg
xor
mov
sbb
in
int3
aas
mov
inc
adc
or
cmp
aaa
xor
adcl
mov
in
mov
cmpsl
int3
and
cmpsl
pop
rcrl
mov
ret
push
xchg
inc
xor
test
imul
les
cmp
jb
mov
xchg
clc
cmpl
stc
push
ds
and
ficompl
push
push
mov
and
loope
nop
bound
mov
jb
je
xor
mov
daa
scas
inc
add
jle
cmp
sbb
fbstp
lock
ds
aad
mov
roll
stc
jle
nop
rcl
out
hlt
adc
jne
insl
mov
and
jne
pusha
neg
movsl
sub
jg
dec
imull
inc
repnz
pop
cld
ds
xlat
add
scas
push
push
lcall
xchg
mov
and
xor
add
fucomi
mov
push
daa
cld
mov
cmpsb
adc
pop
add
add
int
xor
out
dec
pop
and
mov
push
add
mov
xchg
cmpsl
sahf
mov
jle
jmp
sarl
or
lahf
test
inc
cltd
outsl
lret
scas
shrb
rorl
mov
dec
sub
jnp
cmpsl
in
push
inc
ljmp
scas
ret
out
loopne
xor
inc
push
xor
push
sbb
orl
and
ficompl
mov
ds
and
out
mov
lods
xchg
xor
sbb
sbbl
pop
sti
rcll
addb
out
mov
sbb
pusha
xor
jmp
mov
jl
cmp
int
or
xor
lret
pushf
and
push
adc
in
aad
push
stc
pop
dec
jp
xor
fldenv
mov
lahf
test
stos
add
leave
pop
push
lea
and
fisttpll
pop
pop
stos
sub
jb
sub
cs
frstor
push
cmp
adcb
add
pop
and
cmpl
clc
dec
xchg
sbb
in
mov
lret
add
push
inc
xor
xor
int
xor
rep
insb
sbb
xchg
rorl
or
or
out
jb
mov
push
cld
add
movsl
add
mov
mov
pop
jae
inc
outsl
outsb
bound
xchg
shrb
jo
sahf
xlat
js
xchg
sbb
inc
xor
mov
ljmp
stos
in
call
cmp
in
ret
pop
push
or
icebp
cmpsl
scas
loopne
scas
imul
lods
ja
out
test
fbstp
jmp
jle
fwait
jmp
jle
leave
cltd
rcl
mov
imul
push
dec
ret
gs
pop
push
dec
jno
xor
aas
mov
hlt
or
rcll
xchg
mov
repnz
pop
push
adc
insb
cwtl
js
adc
lret
imul
jbe
push
adc
or
stc
cmc
xchg
push
push
test
mov
pavgw
adc
cmpsb
scas
mov
arpl
mov
mov
mov
adc
xorb
xor
mov
roll
pusha
fstpt
pop
cmpsb
fs
mov
or
fmuls
or
out
cmpsl
lock
cld
inc
dec
cwtl
testb
fwait
pop
xchg
sub
fcompl
push
jnp
pop
nop
lea
inc
mov
xchg
push
jb
xor
mov
dec
mov
mov
jo
add
jmp
sbb
xchg
adc
dec
aas
cmp
inc
cld
jecxz
xchg
mov
inc
es
mov
lock
ror
fisttpll
shlb
mov
mov
mov
popa
call
push
daa
cmp
lcall
stos
ljmp
or
addr16
leave
les
lcall
leave
je
cld
outsb
rcll
cmp
ret
pop
pop
rcrl
mov
xchg
loopne
push
lds
pop
outsl
mov
jb
imul
cmp
lcall
fldcw
rclb
outsb
add
lcall
fistpll
cmp
mov
push
outsl
inc
sub
aad
loopne
fildll
addl
sbb
sbb
movsb
push
or
push
xchg
or
sbbl
imul
ja
lret
lods
and
push
inc
add
rol
mov
lea
test
arpl
incl
stc
mov
xchg
cmpl
jl
imul
loopne
mov
repz
adc
pop
mov
mov
jle
and
push
rclb
out
add
pop
lds
xchg
sahf
sub
and
cmp
mov
adc
into
xor
stos
lahf
jecxz
xchg
dec
dec
jp
sub
movsb
cmc
pop
aad
call
data16
mov
jns
iret
iret
sbb
scas
xchg
aaa
clc
jmp
jbe
adc
leave
mov
stos
sbb
mov
mov
ret
cmpsl
pop
mov
ljmp
mulb
push
dec
shlb
int3
pop
inc
imull
jmp
jb
push
mov
dec
shlb
jnp
add
test
push
shl
ficoml
inc
leave
dec
or
and
outsb
xchg
push
push
lods
popa
xlat
sbb
lahf
data16
es
into
gs
pop
mov
dec
xlat
mov
enter
cmp
adc
sbb
or
nop
adc
or
in
lea
mov
xor
add
xor
das
mov
cmc
mov
imul
and
fisubrl
outsb
fwait
lahf
ss
push
daa
mov
and
popf
pusha
or
insb
sub
fldenv
mov
push
push
add
das
push
insl
mov
shrb
mov
push
pop
jmp
aad
xlat
jne
mov
xor
push
xchg
loope
jae
andb
mov
jp
call
sbbb
cmp
inc
sbb
out
xchg
sub
arpl
inc
mov
xchg
lock
jnp
rolb
inc
test
pusha
jb
jmp
jb
pop
popf
inc
and
and
dec
mov
lock
aaa
decl
mov
in
lods
lods
insl
flds
mov
sub
fsts
loopne
popf
out
add
je
movsl
pop
jg
rolb
xchg
push
push
fwait
sbb
sub
and
lret
push
or
mov
negl
adcl
lods
jbe
or
sbb
xchg
push
ret
into
sbb
movsb
or
test
adc
push
in
dec
dec
icebp
jb
imul
push
cmpsb
mov
ficomps
pop
lret
test
xchg
mov
cmp
jne
das
std
push
sub
cltd
xlat
lcall
daa
ss
push
dec
pop
add
lret
jno
nop
or
out
pusha
xchg
xor
sbb
ljmp
mov
bound
pop
add
iret
add
pop
push
ja
mov
and
dec
leave
or
lock
inc
dec
loope
xchg
or
pop
cwtl
loop
xchg
push
hlt
dec
dec
pop
int
popa
outsb
and
sti
outsb
roll
jno
shlb
arpl
push
loop
imulb
out
adc
mov
rorb
in
pop
xchg
fisttpll
aaa
push
sbb
cmpsl
xor
or
stos
cmc
lock
iret
sbb
xchg
dec
sbb
ss
sbb
lret
mov
xor
cwtl
push
pop
push
cmp
mov
xor
test
dec
adc
stc
mov
add
adc
sbb
push
sub
fldl
jg
int3
sbb
rcrb
enter
inc
sbbl
inc
or
scas
xchg
add
hlt
arpl
xor
mov
xchg
bnd
jno
fldt
cli
sub
dec
pop
test
sbb
enter
dec
out
push
cmp
push
mov
and
pushf
fsts
mov
sbb
aam
jmp
aas
push
or
cmpsl
cld
aaa
mov
sbb
sbb
out
cmpsl
or
adc
push
hlt
jno
call
cs
xchg
mov
xchg
rcrl
jae
fisubl
movsb
rorl
js
xor
add
jne
dec
or
pushf
cmp
sti
xor
addr16
cmp
lahf
pop
stc
and
cmp
call
mov
cmp
loope
cmp
movsb
lret
aas
mov
lds
in
push
fmuls
outsb
dec
xchg
aam
xorb
xchg
mov
fdivrl
std
mov
ljmp
jg
jl
mov
popf
test
mov
xchg
or
and
xlat
push
cmc
aam
sbb
fldt
cmp
das
fwait
rcrb
push
cmpl
das
ret
dec
push
fwait
or
xor
fmull
xchg
jecxz
outsb
subl
mov
scas
gs
jl
ficomps
mov
int3
add
iret
shrb
push
jmp
and
mov
insb
les
sbb
jmp
jecxz
nop
lds
fnstcw
fsubrs
loope
mov
jg
mov
jbe
mov
dec
xor
stos
fimuls
dec
std
sahf
jg
cmpsl
lcall
xchg
lds
out
loop
in
rolb
lret
les
cmpl
mov
mov
imul
dec
and
jne
sub
xor
loop
fld
push
xorl
cmpsb
sub
andb
xchg
mov
addl
jp
lret
sub
out
adc
jg
xchg
ja
outsb
sti
mov
and
aaa
mov
mov
outsb
cmp
or
int3
in
xchg
gs
push
sbb
outsb
mov
in
sbb
sub
pop
insb
push
or
fwait
repz
pop
fldenv
repz
jb
push
cltd
imul
push
push
sub
pushf
xchg
cli
int
leave
lret
mov
xlat
add
loop
or
push
pop
xchg
push
js
xor
subl
test
out
imulb
dec
movsl
nop
arpl
fimuls
fs
nop
and
inc
sbb
sbb
stos
jl
cltd
cmp
or
insl
xchg
insb
pop
jne
sbb
pop
ret
pop
imul
and
mov
test
cltd
aad
mov
xchg
pop
js
into
or
sbb
iret
dec
cld
fwait
cmpsb
repz
cltd
int
mov
xor
nop
bound
mov
fistl
inc
sbb
dec
scas
xor
outsb
mov
rcl
cmp
es
icebp
lret
mov
pop
repnz
fs
dec
xor
cmp
mov
adc
clc
dec
faddl
push
movsb
pop
dec
jne
adc
cmp
pop
iret
jecxz
jecxz
inc
adc
and
in
xchg
test
repz
lock
cmpsl
in
cli
and
xor
mov
xchg
ljmp
je
arpl
les
mov
inc
ds
sahf
out
push
xchg
dec
icebp
add
xchg
int3
sahf
dec
adc
in
cmpsl
dec
pushf
inc
dec
pusha
push
jbe
push
xchg
push
out
fs
nop
imul
push
xchg
mov
jmp
clc
mov
jle
lcall
int
int3
xlat
rorl
push
lret
loopne
pop
lods
jbe
pop
jmp
push
mov
xor
pop
sbb
orb
fstps
or
out
pop
jnp
flds
push
ljmp
mov
les
in
call
das
in
repz
jae
movsb
imul
pop
mov
dec
in
jo
fnstsw
push
pop
addb
pop
daa
lcall
insl
jne
mov
mov
inc
shlb
add
jbe
jne
sub
mov
and
js
jns
sarl
in
fwait
cs
sbb
sbb
sub
out
outsb
subb
xchg
insl
lret
call
into
je
daa
cmp
pop
lcall
sub
xlat
fstl
add
rcl
int
cmp
push
rorb
in
xorl
and
or
ljmp
mov
lea
mov
mov
cli
xlat
push
je
out
enter
jle
fistpll
add
mov
mov
mov
sbb
ret
mov
or
lock
decb
sbb
sub
repnz
mov
stc
mov
daa
and
push
rcrb
lcall
xchg
nop
xchg
mov
mov
xor
or
jnp
das
icebp
dec
lds
inc
xchg
dec
in
daa
or
xor
or
add
test
dec
nop
mov
fdivl
ss
adc
sbb
ds
lds
or
pop
sbb
test
lds
mov
cmp
mov
xrelease
cmp
push
enter
cmpsb
cs
mov
or
cwtl
cwtl
pop
xchg
int3
rcll
cld
push
push
xor
gs
call
push
iret
mov
pop
jl
xchg
stc
push
dec
or
aas
test
out
test
pop
out
dec
cli
test
fdiv
shrb
xor
push
subl
xchg
cmp
loope
adc
nop
rcr
mov
loop
dec
fildll
roll
call
inc
hlt
mov
mov
shll
mov
insl
xchg
scas
stos
xor
rorb
lret
rorb
out
icebp
and
icebp
cwtl
test
jle
sbb
fiaddl
mov
fisubrl
das
daa
pop
mov
inc
cmp
stc
insb
cmp
mov
pop
test
gs
mov
pop
in
mov
testl
pop
enter
movsb
xchg
mov
cmpl
push
loop
stos
lods
loope
mov
push
loopne
ret
mov
add
add
in
push
sub
outsl
xchg
je
push
call
movsl
mov
nop
test
cmpsb
xor
int3
mov
sbb
sbb
addb
mov
enter
adc
fldcw
dec
and
int3
dec
call
loope
sub
fbld
mov
cmp
mov
xor
mov
xor
sarb
sub
sti
mov
call
dec
movsb
jmp
shl
push
lcall
mov
push
push
outsb
cmp
inc
push
mov
pop
push
xor
push
mov
jo
xchg
push
lock
cwtl
and
sub
addl
dec
dec
cmp
xor
enter
push
pushf
xchg
out
and
flds
aam
repz
sub
sub
adc
mov
cmp
xchg
sti
mov
mov
xor
cltd
xor
inc
jle
cmp
out
lcall
negb
or
call
mov
mov
into
enter
dec
lock
fisubl
jnp
xor
push
pop
xor
or
sahf
adc
int3
in
pop
fbstp
adc
inc
das
mov
es
test
sbb
inc
vcvttss2si
int3
push
inc
or
mov
lods
or
dec
imul
mov
pop
lahf
das
sub
push
jne
jnp
add
jl
aas
lock
test
lret
mov
sbb
mov
fadd
xchg
cwtl
call
flds
xor
jae
xchg
lret
out
cmp
push
icebp
xor
xchg
jge
inc
push
mov
je
adc
mov
xor
jg
adc
dec
mov
mov
or
adc
je
add
ss
cmp
out
js
adc
dec
repnz
dec
mov
adc
cmpb
cmp
hlt
outsb
je
cmp
sub
add
stos
or
int3
jnp
lds
bswap
es
andb
add
movsl
cmp
mov
mov
mov
loope
mov
cmc
rorl
jl
in
lret
or
inc
shll
and
mov
adc
add
mov
test
sbb
fadds
jl
or
mov
jnp
in
sub
or
adc
mov
in
xchg
and
or
cmp
adc
cmp
lea
inc
cmpsl
and
std
inc
fiadds
inc
sub
stos
mov
push
int
cmp
and
idivb
push
pop
inc
inc
jle
mov
out
mov
xchg
mov
push
loop
rcll
aam
aam
cmovl
fisubl
mov
cmpsl
sub
sub
or
bsr
pop
jb
xor
int3
testl
jp
push
decb
inc
pusha
jo
push
add
push
mov
mov
pop
pop
iret
lcall
jo
out
inc
mov
push
xor
or
pop
and
iret
or
std
outsb
addr16
pop
mov
repnz
lahf
mov
fcompl
lods
xchg
add
fcmovnu
inc
cmp
mov
mov
out
dec
dec
pop
into
cli
mov
pop
jno
shr
loope
lock
jecxz
int
std
xchg
imul
sub
jg
pop
sbb
lods
iret
mov
mov
inc
jge
mov
enter
loopne
notb
movsb
cltd
pop
fldenv
icebp
jg
nop
fs
jle
sbb
pop
popf
push
push
xchg
ds
js
jne
push
push
pop
mov
and
mov
mov
or
stos
and
out
push
jno
pop
dec
push
push
jle
inc
sbb
pop
stc
mov
jl
jbe
flds
int
sub
insl
or
sbbb
mov
xor
pusha
iret
jg
push
bound
imul
fnstsw
xorl
push
sti
aaa
lahf
jmp
pop
or
hlt
xorb
mov
nop
xor
add
pop
mov
and
fs
in
jno
jle
lds
js
push
dec
popf
mov
insl
pop
mov
pop
outsl
in
jno
sbb
bound
push
jg,pn
repnz
push
sbb
cmpsl
arpl
idiv
sbb
insl
pusha
enter
sub
jl
jecxz
jns
mov
popa
xchg
iret
dec
mov
nop
add
dec
mov
pop
test
and
std
jae
sub
repz
add
les
cmpsl
cwtl
xor
fstl
test
push
and
aam
subl
inc
sbb
in
push
test
imul
xor
sti
dec
mov
lahf
sbb
push
test
pop
mov
loopne
push
mov
lds
xchg
adcl
cltd
mov
aas
inc
xchg
pop
sti
in
jl
dec
mov
lods
jge
test
mov
mov
rclb
jae
adc
or
pop
mov
fsubs
pop
call
pop
cltd
ljmp
out
or
or
dec
hlt
es
inc
or
push
dec
loopne
pop
push
fcoms
roll
add
xchg
out
in
mov
mov
xor
cmp
or
das
or
enter
push
dec
cli
enter
and
push
jo
xor
mov
fsts
xchg
js
movsl
enter
fcoms
sub
inc
call
cltd
stc
add
pop
mov
and
cmpsb
je
daa
sarb
jb
mov
jmp
cld
xchg
dec
inc
xor
pop
add
sub
aas
sub
idivl
or
fdivrl
lods
insl
xor
fstpl
jb
int
mov
icebp
xlat
cld
fwait
imul
sbb
sbb
push
sub
repz
jge
pushf
cltd
sub
inc
pop
es
xchg
sub
movsb
jb
xorb
shl
mov
push
out
shr
pop
sub
mov
test
pop
insl
and
out
shrl
or
mov
add
xlat
imul
insb
dec
jmp
testb
inc
jae
sub
gs
lods
jb
pop
shrb
ret
pop
fsubrl
aas
inc
pop
fnclex
in
dec
dec
jo
push
test
cld
lods
pop
aam
jge
int
decb
fsub
and
ss
pusha
or
sub
test
nop
sbb
or
cmpsb
mov
ficoml
pop
fidivs
mov
mov
movsl
inc
pop
mov
lock
movsl
add
lahf
dec
shll
dec
into
int
sub
insb
out
mov
inc
fldcw
cmp
ret
loope
ret
out
add
mov
mov
cmc
addl
pop
mov
add
ja
fbld
push
aad
dec
rcrb
cmpsb
gs
push
pop
out
div
aas
cmc
das
and
mov
or
xor
fs
pop
ja
jne
pop
nop
addr16
mov
inc
jmp
pop
jo
mov
pushl
push
aad
les
std
test
ret
or
xor
lods
sub
sbb
mov
insl
andb
int
adcl
out
in
out
outsb
xor
sub
lods
sbb
mov
dec
cmp
cli
cmp
sbb
jp
stc
dec
iret
dec
add
adcl
out
add
out
lret
out
leave
lret
jbe
cmp
adc
js
or
test
addr16
daa
adc
movsb
xor
lods
clc
jnp
jb
aaa
in
into
or
rcll
out
push
scas
jnp
cwtl
adc
ss
outsb
pushf
push
in
shll
aam
test
add
inc
push
mov
and
sub
loop
pop
mov
pop
pop
mov
push
hlt
sbb
pop
mov
and
js
push
pop
pop
xchg
push
xor
xor
push
and
sbb
lea
sbb
ss
mov
sbb
mov
add
mov
and
frstor
addr16
mov
xchg
mov
cltd
imul
movswl
int3
insl
loopne
sub
push
cmp
loopne
push
adc
fldt
sbb
push
movsb
sub
inc
sub
lds
mov
stos
into
leave
insl
sbb
mov
fistps
xor
stos
xor
icebp
out
aam
mov
adc
sbb
push
pushf
les
mov
js
bound
popf
inc
popf
popf
mov
movsb
xchg
push
cmpsl
js
cmp
jg
enter
jne
sarb
je
nop
jmp
xlat
push
and
mov
and
sbb
adc
or
xchg
pop
in
movsb
mov
mov
adc
mov
shrl
pop
mov
scas
loope
pop
push
jmp
orb
sub
mov
pop
push
aaa
mov
inc
movsb
sub
lret
icebp
pop
add
movsl
cmc
in
xor
sbb
test
repz
shll
repz
lods
mov
lret
or
outsl
mov
dec
repnz
push
dec
repz
iret
or
mov
das
sbb
lret
mov
add
clc
xchg
sarl
pusha
sub
cmp
stos
fdivl
jno
enter
add
rorl
adc
dec
xchg
out
cs
sti
mov
testb
jp
xchg
or
lock
rcrb
xchg
into
dec
testb
mov
sub
test
rcrb
inc
push
pop
out
dec
cmp
jecxz
sub
add
popf
cmpsb
dec
push
ss
lea
imul
lds
or
test
sbb
lock
pop
dec
lcall
add
sti
push
sbb
leave
fisubs
les
pusha
push
decl
sbb
cmp
cmp
pop
aad
lock
fwait
jl
pop
out
daa
rcr
inc
adc
movsb
sbb
mov
in
jmp
hlt
aad
xchg
mov
dec
mov
push
aaa
pop
nop
cmpsl
lcall
aam
push
mov
xchg
inc
jno
mov
jbe
push
jae
cmp
les
call
mov
sbb
and
fs
mov
arpl
cmp
repnz
or
and
icebp
push
stos
outsb
cmpsl
and
add
icebp
orb
call
shrl
inc
shll
jns
loopne
cmp
ret
push
mov
sub
and
cmp
mov
mov
cmp
push
jecxz
sbb
imul
ss
inc
scas
mov
xor
mov
test
add
rorb
out
iret
dec
xchg
les
pop
scas
cwtl
add
pop
adc
into
movsl
adc
imul
dec
lret
dec
andb
jmp
mov
call
jp,pn
mov
out
and
mov
sub
cmpl
and
stc
movsb
imul
cmp
push
movsl
les
lahf
js
xchg
dec
inc
push
arpl
fdiv
xchg
xlat
aad
push
push
outsl
test
and
je
jae
in
lahf
or
xor
pushf
adc
test
popa
cmp
cmp
test
adc
cmp
enter
and
lea
dec
dec
sahf
sub
pushf
pop
mov
cmp
cli
sarl
lock
leave
adc
jecxz
call
push
inc
std
push
mov
setno
call
fisubl
sbb
fwait
je
int3
jge
jno
cld
lods
fs
jle
dec
mov
lods
mov
fcoms
outsb
ds
mov
cltd
icebp
and
sbb
or
jle
adc
jle
cmp
or
mov
mov
jb
ds
pop
out
mov
fld
fwait
int
adc
push
or
add
ret
sbb
pop
cmp
stos
xchg
incb
jge
out
lahf
cmpsb
xchg
popa
lods
lods
xor
fmuls
std
loopne
ss
es
xchg
sbb
out
decb
mov
lods
mov
jl
adc
stc
loope
pop
pop
lret
xor
in
imul
add
std
clc
orb
push
mov
pop
cmp
push
inc
cmpsl
push
dec
sbb
imul
add
sub
leave
pop
push
lcall
fadds
rol
xchg
imul
sub
inc
jae
pop
mov
mov
pushf
adc
stc
into
fdivs
mov
arpl
push
xchg
in
andl
cld
xchg
xchg
inc
pop
sub
xor
into
mov
sbb
cmp
and
inc
insb
ret
mov
mov
lods
stc
xchg
add
divb
pop
imul
xor
dec
jl
sub
mov
sbb
pop
jae
xchg
clc
data16
push
xor
iret
add
and
cmc
sub
mov
mov
jno
test
jnp
xchg
fwait
ljmp
cwtl
or
icebp
pusha
icebp
lds
test
je
mov
loope
nop
sbb
mov
xrelease
cli
jl
sbbl
addr16
and
stos
dec
jae
fcmovb
sbb
jp
xchg
jno
jmp
pop
daa
cli
and
in
in
push
mov
jge
xor
pop
pop
aas
pop
sub
rcr
adc
inc
mov
dec
int3
loope
scas
ret
loop
in
lahf
sarl
adc
xor
aam
notb
push
fdiv
xor
stos
jmp
popf
idivl
mov
dec
test
cmp
push
mov
je
jne
xchg
mov
adc
popa
jbe
das
aas
jbe
xor
jno
fimull
pop
pop
das
and
dec
sahf
mov
mov
push
out
notb
mov
xchg
push
shl
scas
or
sub
push
mov
push
adc
ret
sbb
ficoms
jbe
adc
mov
rcl
lods
loop
pusha
stos
arpl
jnp
adc
cltd
push
mov
and
insb
cld
inc
bnd
imul
call
sarb
or
lret
push
jp
ljmp
testl
dec
orb
and
aaa
push
pop
insb
xchg
or
mov
shll
sub
cmc
pop
or
subb
mov
cmc
sbb
scas
add
orb
cwtl
jge
sbb
jo
popf
rol
inc
out
pop
push
imul
bswap
or
and
jns
dec
inc
adc
cmp
jp
inc
xchg
andb
jbe
in
push
rclb
cwtl
bound
outsl
aam
pop
in
rcll
mov
orl
mov
mov
pop
out
outsb
mov
out
fmuls
jb
mov
mov
and
push
rorb
inc
es
push
aam
sbb
sbb
out
pop
pop
mov
ret
sti
pop
sbb
stos
scas
adc
es
pushf
sub
enter
cmp
shrl
xlat
mov
sahf
orb
or
xchg
in
sub
mov
or
andb
mov
xor
call
dec
jbe
add
lret
out
jns
mov
imul
ret
cmp
cmc
popf
mov
pop
mov
adcb
cmp
and
nop
and
lock
stc
xor
loope
mov
and
js
add
stc
ret
adc
and
dec
push
push
mov
nop
in
mov
movsl
pop
sti
and
scas
out
or
mov
aam
pop
loopne
pop
jmp
xlat
or
int
or
stos
aam
push
clc
out
xchg
sarl
push
iret
outsb
aaa
in
daa
fists
gs
imulb
ljmp
cmp
mov
pop
pop
movsb
sub
xor
scas
mov
popf
addr16
pop
fstl
cmpsb
fucomp
push
adc
adc
aaa
cld
adc
roll
scas
fidivrs
jecxz
mov
mov
test
filds
movsb
jb
cld
push
sbb
popa
xchg
mov
cmpsb
pop
mov
aam
sti
js,pt
sub
adc
mov
mov
push
adc
in
outsl
push
loop
bextr
test
jmp
test
xor
hlt
out
mov
xchg
int
cmpsl
test
fsubr
push
imul
sti
pop
jmp
or
sbb
out
out
popa
ja
pop
push
sbb
and
xchg
fiaddl
sub
int3
jno
xchg
xor
dec
repnz
sti
mov
out
jle
sub
mov
xor
and
pop
mov
dec
aam
lahf
sti
mov
and
adc
ss
fs
xchg
xchg
fcoml
leave
data16
adc
aam
jl
or
loopne
jae
ds
mov
add
bound
lds
loopne
jle
dec
cmpsb
jno
xchg
test
pop
ds
sbb
and
std
pop
push
push
ds
cmc
popf
adc
pop
fisttpll
fidivs
insl
rol
cmovae
mov
inc
movsb
icebp
insb
dec
mov
ds
pop
das
rorl
sub
std
mov
ds
ret
mov
xchg
mov
movsb
jg
mov
jge
insb
repnz
test
or
lea
imul
lods
dec
and
in
loop
mov
jnp
repnz
scas
std
mov
mov
mov
or
sbb
lret
aam
fsubrl
into
push
mov
mov
jns
add
es
jbe
jo
xchg
pushf
adc
in
vpmacsswd
in
fcompl
cli
dec
fidivl
lea
ret
or
pop
inc
sbb
sub
test
push
jb
push
and
iret
xchg
mov
xor
xchg
fwait
aaa
jge
and
ret
or
test
fistpl
mov
incl
xor
xchg
push
push
and
repz
mov
insb
pop
test
dec
lar
mov
xor
hlt
lea
push
js
es
jnp
gs
push
xchg
popa
push
outsb
mov
push
dec
js
je
lahf
inc
xchg
loop
pop
nopl
lock
adc
jle
dec
sub
scas
pop
cld
fidivrl
imul
test
cmp
js
es
and
aaa
cmp
pushl
push
in
in
mov
std
cmp
jle
inc
ret
lahf
mov
or
in
imul
add
jne
cmc
outsb
xchg
cmp
test
or
ret
push
mov
xor
jl
inc
inc
es
adc
mov
ss
fincstp
pop
jae
movsl
aas
ja
cwtl
inc
fwait
cltd
inc
mov
rorb
roll
cmp
mov
xor
test
dec
out
xchg
and
popa
shll
rolb
aaa
das
jb
add
sbb
out
push
xchg
insb
test
popf
lret
adc
andl
or
dec
add
xor
xor
mov
or
pushf
and
jnp
.byte
je
xor
not
lea
je
lea
lea
xor
xor
and
sub
push
call
lea
add
sub
sub
push
call
jmp
nop
sub
lea
call
inc
xor
xor
add
cmp
jne
mov
push
ficomps
and
fmulp
fidivrs
adc
add
add
cmp
push
call
and
lea
add
add
push
call
jmp
and
and
cmp
mov
lea
add
push
push
call
xor
dec
mov
lea
ret
lea
lea
lea
push
mov
sub
call
add
and
mov
jmp
lea
lea
cmp
sub
mov
sub
cmp
push
call
and
sub
cmp
push
call
add
inc
mov
movl
cmp
mov
mov
sub
push
call
add
and
and
je
call
mov
push
call
lea
cmp
and
lea
lea
sub
sub
sub
lea
push
call
xor
dec
xor
call
sub
lea
mov
mov
push
push
call
pop
inc
cmp
jne
nop
neg
inc
xor
lea
push
call
call
mov
mov
lea
mov
call
mov
call
xor
nop
nop
add
inc
lea
call
lea
xor
mov
call
mov
sub
lea
cmp
or
lea
mov
and
push
push
call
mov
push
add
xor
sub
lea
pop
call
mov
nop
mov
mov
mov
mov
mov
mov
or
lea
call
lea
xor
lea
cmp
mov
push
call
mov
xor
inc
add
mov
xor
push
jle
add
lea
add
pop
call
jmp
inc
and
xor
pusha
mov
mov
sub
cmp
mov
lea
mov
and
lea
xor
lea
dec
lea
sub
xor
call
dec
nop
sub
mov
sub
mov
cmp
lea
dec
sub
and
sub
xor
mov
mov
mov
xor
cmp
lea
mov
mov
sub
lea
and
popa
cmp
jne
lea
or
call
add
lea
xor
cmp
mov
add
pop
pop
xchg
push
insl
das
leave
popf
adc
or
dec
pop
sbb
mov
int3
jnp
sub
sbb
inc
lds
xor
daa
push
je
shr
ret
mov
nop
adc
inc
jp
fs
jle
sub
jl
dec
dec
into
xchg
push
bound
aam
push
pop
pop
pop
fidivrl
add
dec
xchg
in
sarb
insl
out
pop
mov
pop
lea
idivl
sub
jg
ja
add
xchg
mov
insl
xchg
icebp
xlat
xchg
clc
adc
jle
add
mov
xchg
pusha
xchg
dec
cwtl
jns
pop
and
scas
dec
testl
clc
cli
roll
cltd
mov
mov
test
enter
es
sarb
mov
and
xor
sbb
call
aam
fidivs
lock
adc
jae
mov
mov
inc
add
jae
orb
out
mov
add
cwtl
imul
sbb
mov
out
popa
and
mov
das
xor
xor
xchg
mov
insb
cmp
mov
je
adc
int
adc
mov
les
mov
mov
add
cltd
inc
test
pop
pusha
popa
insl
aam
arpl
adc
outsb
outsl
popl
mov
cmc
jbe
js
dec
jnp
jge
jg
addl
je
push
les
imul
lcall
pusha
adc
xchg
pusha
xchg
dec
stos
push
jecxz
jns
cmp
loope
mov
mov
xor
lods
mov
aas
mov
inc
xor
xchg
int
iret
add
sbb
out
xlat
lods
ficompl
dec
mov
loop
insl
daa
dec
bound
popf
lret
or
or
icebp
sti
mov
lods
scas
push
xchg
jno
add
rcll
iret
sbb
mov
sbb
loop
adc
push
pop
and
sub
adc
push
mov
cmp
inc
aaa
aas
inc
cs
push
leave
ss
inc
xor
mov
gs
cmp
push
ja
pop
mov
pop
inc
pop
xchg
pcmpgtw
loope
or
adc
sbb
and
out
jp
jns
jnp
jge
adc
decb
loop
mov
xchg
xchg
xchg
ret
push
std
xchg
cltd
lcall
mov
push
arpl
lods
lods
or
mov
xor
test
pop
out
and
int
punpcklbw
das
jns
lods
sub
jmp
movaps
mov
add
out
lods
in
in
outsb
scas
loope
repz
lock
mov
mov
pop
adc
mov
test
lcall
cwtl
jecxz
sbb
inc
loope
jmp
int3
stos
cmp
adc
ret
sbb
ret
inc
or
jge
enter
add
mov
dec
dec
sbb
into
adc
push
push
push
or
pop
add
add
stc
cmp
fidivs
jns
imul
xor
jno
ljmp
and
fists
xchg
mov
inc
dec
mov
mov
xchg
movsb
pusha
push
popa
cwtl
jns
insb
sub
cs
cld
and
mov
xchg
jl
mov
sti
mov
sarb
das
cmpsb
test
movb
adc
daa
int3
ds
aam
pop
add
inc
pop
fmul
mov
stos
xor
jmp
sbb
out
fucomi
mov
lods
out
mov
or
repz
clc
sbb
xor
xlat
xor
iret
sysenter
mov
inc
or
cmp
sub
pop
pop
dec
adc
jmp
cs
scas
mov
and
iret
dec
ljmp
mov
aaa
mov
xor
jmp
xorl
movsb
mov
xchg
lds
inc
adc
and
test
pop
pop
fs
push
xchg
jmp
in
mov
mov
jo
push
testb
jb
popa
and
mov
pop
cmpsb
incb
lcall
mov
lcall
xchg
dec
lock
mov
pushf
jne
pusha
pop
pop
sbb
lds
mov
pop
inc
dec
dec
dec
adc
nop
fwait
nop
ret
int
out
mov
push
push
add
adc
mov
sub
and
xor
add
sub
call
and
not
add
sub
cmp
sub
cmp
call
mov
lea
cmp
cmp
mov
xor
lea
push
pop
mov
ret
lea
add
push
mov
sub
xor
and
or
xor
lea
add
push
call
sub
xor
cmp
lea
jo
cmp
sub
add
lea
lea
mov
mov
mov
push
pop
mov
leave
ret
mov
sub
mov
mov
lea
push
mov
sub
mov
mov
add
nop
sub
xor
not
neg
cmp
jne
leave
ret
neg
lea
and
push
mov
sub
cmp
jne
js
push
stos
mov
adc
inc
add
add
sub
mov
not
neg
cmp
xor
sub
nop
add
cmp
jne
leave
ret
mov
lea
mov
xor
push
mov
sub
mov
sub
je
inc
cmp
cmp
push
pop
mov
inc
cmp
je
xor
cmp
not
neg
cmp
jne
leave
ret
mov
add
lea
and
add
lea
pusha
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
add
gs
add
gs
add
gs
add
gs
add
inc
add
fs
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
fs
add
inc
add
add
add
inc
add
add
bound
call
bound
add
add
inc
add
add
add
ljmp
add
jle
add
and
add
xor
add
mov
add
add
add
lcall
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
inc
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
sbb
add
arpl
add
add
inc
arpl
add
add
add
outsb
arpl
add
add
mov
add
add
mov
add
add
arpl
add
arpl
add
add
inc
arpl
add
add
add
outsb
arpl
add
add
mov
add
add
mov
add
add
add
imul
add
add
inc
insb
outsl
arpl
outsb
jo
je
add
add
imul
arpl
outsb
add
add
inc
insb
imul
jb
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
gs
outsl
jo
imul
add
dec
jae
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
je
popa
jb
je
outsl
jae
add
push
ja
je
push
je
jo
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
jl
add
mov
xchg
add
mov
add
enter
fisubs
out
add
add
add
add
xor
add
add
push
add
fs
jb
add
test
add
add
scas
add
mov
add
add
add
add
mov
add
enter
fisubs
out
add
add
add
add
xor
add
add
push
add
fs
jb
add
test
add
add
scas
add
mov
add
add
add
outsl
jae
dec
popa
outsb
fs
add
add
outsb
fs
je
insl
inc
add
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
imul
je
add
add
je
gs
imul
inc
insb
outsl
bound
dec
outsl
arpl
add
add
inc
bound
addr16
jb
jae
outsb
je
add
dec
outsl
popa
fs
imul
add
add
push
gs
jb
push
inc
add
add
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
outsb
inc
add
out
add
add
add
adc
add
and
add
add
add
out
add
add
add
adc
add
and
add
add
add
add
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
scas
add
shlb
into
add
fisubs
add
add
add
add
add
add
add
add
mov
add
add
shlb
into
add
fisubs
add
add
add
add
add
add
add
add
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
gs
gs
arpl
imul
addr16
outsl
popa
fs
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jb
push
outsl
push
gs
data16
sub
add
cmp
mov
lea
push
push
call
cmp
sub
push
push
call
xor
and
add
call
jo
cmp
cmp
sub
cmp
and
add
add
lea
lea
ret
