add
sub
xlat
inc
xchg
lock
frstor
mov
add
mov
jl
mov
outsb
adc
sarl
jnp
sub
sub
adcb
loop
cmp
xorl
loope
mov
or
pop
in
scas
pushf
je
pop
mov
jle
mov
sbb
fcompl
out
mov
lds
ds
mov
pop
lock
push
dec
je
xchg
stos
jo
and
xchg
fildll
jl
std
scas
cmp
mov
xor
cmp
cwtl
ret
decl
mov
dec
lods
xor
push
push
inc
add
xchg
cmpsb
nop
mov
aaa
dec
add
divl
lcall
rol
movsb
inc
fsubr
jo
lods
jl
out
mov
sbb
clc
rolb
cmpsl
or
leave
mov
mov
inc
fwait
xchg
mov
into
in
mov
sarb
bound
cmp
addl
xchg
call
sub
cld
jge
xchg
iret
hlt
xchg
data16
int
hlt
sub
inc
push
push
inc
test
in
rcrb
scas
pusha
xchg
test
adc
mov
xor
push
rolw
mov
fldenv
jb
dec
push
daa
inc
in
imul
mov
ror
repnz
out
mov
jle
cmp
push
bound
add
or
call
add
pop
mov
xor
inc
cmp
fsts
lcall
adc
in
iret
jg
mov
adc
rolb
rcrb
add
push
in
lcall
sub
push
mov
cmp
ficompl
jl
jecxz
cmp
mov
push
pop
mov
les
insl
sub
pop
mov
outsl
dec
enter
inc
pop
push
dec
fst
pop
and
or
fucomi
es
sbb
scas
and
idivl
mov
and
in
sti
scas
inc
and
mov
pop
dec
lods
stos
pop
outsl
rorl
jmpw
pop
icebp
ret
push
xchg
push
and
jge
fsubrs
or
daa
xchg
push
sahf
inc
jne
sub
ds
and
lock
pop
call
pop
sahf
scas
repz
sbb
mov
jnp
mov
dec
fimull
out
sub
int3
and
arpl
in
ror
data16
scas
fdivr
negl
inc
jecxz
ficoms
sarb
mov
fimull
sub
lea
scas
push
dec
outsl
sti
mov
mov
xchg
push
cmp
cwtl
cmp
mov
sahf
mov
pinsrw
decl
xchg
xchg
lahf
in
lds
jbe
cmp
cmp
xor
shrl
or
push
int3
ljmp
pop
pop
inc
or
or
sbb
jecxz
sbb
mov
movsl
xorb
das
push
incb
xchg
js
aaa
insb
mov
xchg
sbb
testb
movsb
je
pop
and
push
std
negb
fimull
enter
cmp
es
loop
jnp
jb
into
test
jo
out
aam
mov
test
shlb
xor
xchg
pop
mov
shll
sbb
xchg
jmp
cltd
jb,pt
xchg
push
fimuls
and
xor
xor
cmpsl
adc
mov
mov
jmp
jg
int
mov
cmp
mov
mov
dec
adc
jnp
adc
adc
dec
out
xor
or
cmp
xchg
pop
push
mov
dec
jg
test
and
push
in
out
mov
sar
clc
lret
sarb
mov
aaa
pop
div
les
jbe
push
into
mov
mov
push
xchg
xor
or
outsl
sub
cld
mov
nop
test
inc
lea
lahf
sbb
adc
lock
add
shl
or
stos
jmp
sti
cs
out
mov
fdivs
pop
or
push
cli
pop
mov
xchg
xor
std
mov
cmp
mov
lock
dec
scas
mov
sahf
adcl
cmp
mov
outsb
cmp
cmc
loopne
leave
jae
scas
mov
push
out
pop
movl
adc
cmp
js
mov
stc
xchg
leave
imul
xchg
or
pop
mov
lret
xor
dec
push
mov
adc
jecxz
testb
ljmp
scas
or
xchg
push
pop
mov
imul
mov
xor
ss
fs
mov
adc
add
dec
popf
sti
pop
bnd
cmp
cmp
into
rolb
repnz
rorl
sbbl
mov
xchg
jl
mov
inc
push
hlt
out
cmp
orl
int
cmpsl
fdivl
pop
es
push
mov
jp
push
andps
add
insb
mov
push
xor
data16
jae
pop
mov
rorb
in
and
fmull
jns
jl
xor
daa
add
loope
aam
test
in
jnp
inc
stos
mov
sbbb
xor
cmpb
dec
shr
int
or
pop
gs
dec
xchg
mov
movsb
or
stc
iret
loope
jns
rolb
hlt
stos
shlb
sub
xor
nop
mov
push
push
and
dec
js
cltd
mov
imul
call
sarl
dec
ret
pop
pop
mov
mov
cmp
or
test
add
lret
leave
sbb
mov
bound
testl
dec
sbb
mov
xlat
out
jecxz
mov
cmp
movswl
bnd
mov
dec
notl
outsb
inc
fwait
adc
test
sbb
jb
std
mov
adc
cmpsl
mov
dec
mov
scas
outsb
insb
sbb
daa
cmpsb
pop
sbb
data16
decl
sar
ljmp
pop
scas
mov
popf
inc
incl
repz
xchg
enter
aad
inc
xor
into
dec
pushf
leave
sti
or
fucomi
jl
ljmp
inc
jnp
mov
push
hlt
sbb
mov
or
test
add
clc
push
xchg
jl
inc
add
adc
jle
leave
iret
shlb
int3
aad
and
sbb
mov
dec
in
sahf
enter
loopne,pt
sub
popa
sbb
cltd
or
inc
fildl
cmp
sbb
lods
sbb
or
mov
sub
aaa
jecxz
fwait
out
lcall
or
cmp
aaa
test
sbb
mov
inc
sbb
lea
and
mov
and
mov
test
or
lds
mov
std
sbb
aad
fldt
fbld
pusha
and
sbb
mov
inc
std
inc
pop
jo
insb
je
mov
xchg
loop
outsl
fists
inc
ret
xchg
fdivs
add
add
fldcw
ss
add
enter
fwait
push
dec
mov
jg
orb
fisttps
inc
push
fwait
das
mov
add
cld
push
xor
in
pop
popa
cmc
cld
aad
mov
pushl
xchg
ret
lods
rolb
imul
adcl
aaa
inc
mov
pop
ud2
mov
jo
jb
adc
lods
in
cmpsb
cmp
jo
cmp
jge
cs
bound
mov
xlat
cmc
movsb
fwait
js
cmp
out
mov
adc
mov
adc
paddq
rcrb
add
movsb
std
add
push
mov
enter
push
adc
mov
in
lret
jecxz
sub
dec
pop
pushf
aad
sbb
cmpsl
fstps
and
shr
xchg
aam
ds
divb
ljmp
bound
ret
add
insb
mov
stos
xchg
stos
scas
push
in
inc
movsb
xchg
mov
and
inc
je
fcmovnu
dec
popf
push
add
fsubl
inc
mov
popa
shll
push
sbb
ficompl
and
pushf
jnp
mov
nop
xchg
pop
push
push
in
sub
xor
pop
xlat
addr16
test
clc
popa
pop
cmpsl
mov
adc
sub
out
jne
inc
pushf
pop
mov
jae
fucomi
mulb
and
ds
shl
mov
or
xor
xchg
scas
push
add
das
jns
mov
push
jge
jmp
jns
shlb
cltd
ficomps
enter
mov
mov
iret
ss
dec
sub
or
xchg
stos
push
icebp
pop
push
inc
dec
loop
xchg
push
mov
aam
mov
pop
pop
push
fcompl
mov
test
ja
ds
cmp
jne
movsl
add
movlps
cmpsl
push
adc
or
cmc
dec
jno
iret
inc
inc
aas
outsl
add
dec
cmp
out
or
js
testl
push
aam
jl
mov
int
push
out
outsb
dec
mov
pop
out
pop
mov
adc
scas
movsb
aaa
in
jns,pn
jle
add
fdivs
jns
loop
fcomip
shlb
dec
mov
div
or
or
mov
rcll
push
out
push
cmp
fs
sub
fistps
dec
pop
jle
mov
sub
in
int
xchg
mov
imul
cmpsl
leave
or
and
lret
in
push
sti
sti
dec
or
inc
cmp
push
dec
cwtl
and
xchg
mov
cmovae
pop
push
or
push
mov
aas
out
jno
push
cmp
push
jne
fisttpl
ret
aam
or
mov
imul
mov
or
nop
mov
movaps
fmuls
or
adc
in
or
aad
xchg
lods
sbb
fbstp
sarb
out
rcr
mov
outsb
mov
mov
stc
add
fmul
mov
xor
mov
cmp
inc
lea
pop
test
mov
movsl
popf
dec
xor
adc
mov
sub
out
mov
div
inc
clc
xchg
std
cmp
sub
add
into
sub
xchg
scas
jle
xchg
pop
mov
jg
stc
sbb
sub
enter
scas
dec
outsl
outsl
data16
xchg
call
dec
lds
mov
jecxz
mov
mov
scas
pop
mov
lods
and
bound
adc
addr16
mov
outsl
in
popf
xor
or
xor
es
in
sbb
out
gs
mov
leave
push
mov
mov
and
jp
popa
mov
mov
or
or
mov
mov
pop
out
mov
sbb
daa
ret
fcmovnbe
scas
lea
int
push
nop
dec
and
mov
pusha
and
mov
stc
scas
lods
in
ss
inc
shrd
jnp
add
sti
pop
push
cltd
outsb
add
mov
dec
les
ret
adc
in
stos
sub
inc
jno
mov
adc
inc
inc
lahf
push
int3
insl
xchg
xchg
add
arpl
int3
ret
xchg
and
nop
out
arpl
iret
pop
jl
stc
push
loop
mov
adc
repnz
jb
xchg
lahf
mov
iret
adc
adc
cwtl
dec
mov
add
stc
mov
pop
sub
cltd
outsb
inc
cmp
test
cmp
lds
out
fildl
hlt
sub
adc
jmp
sub
shr
aaa
out
fdivrp
decl
es
lds
mov
rclb
jmp
iret
mov
xchg
mov
sub
push
pop
fdivrl
icebp
sbb
stos
sub
in
cmp
je
adc
pop
push
sub
jno
ret
dec
mov
ljmp
jmp
inc
push
cmpsl
cmpsl
xchg
and
inc
sti
sub
jb
add
mov
mov
pop
and
outsb
loope
adc
sub
shlb
xor
ss
cmp
aam
or
pusha
push
stc
lcall
cmp
mov
insl
dec
addr16
jno
stc
clc
stos
push
fdivrl
mov
aad
xor
cmp
mov
and
mov
loop
dec
dec
or
mov
repnz
cmp
adc
les
iret
pop
jbe
scas
jge
mov
pop
adc
sarl
shlb
push
in
jmp
out
fidivl
xchg
js
ljmp
andb
jb
lods
dec
push
jno
scas
lods
xchg
cld
out
mov
mov
mov
subl
out
data16
xchg
data16
loopne
or
rcrb
lea
dec
xchg
mov
and
pop
aad
nop
xchg
push
pop
push
xor
jmp
adc
mov
mov
mov
add
jne
push
mov
cmpsl
mov
jbe
lods
cs
xor
out
or
mov
push
loopw
cwtl
fcoml
inc
sub
scas
out
fwait
lret
sbb
or
jo
insl
ljmp
jo
lods
push
dec
push
imul
jg
out
ficomps
imul
mov
dec
insl
jb
addl
and
jae
das
movups
xor
and
lmsw
or
xor
add
xchg
jb
or
orb
adc
or
adc
popf
roll
test
push
adc
jno
pop
adc
aad
lds
ja
or
mov
adc
cli
push
dec
push
mov
rcr
push
rclb
pop
ret
sbb
nop
push
stos
cltd
mov
mov
push
and
push
cmovns
push
pusha
not
and
xchg
ret
pop
dec
sub
pushl
lods
jge
mov
adc
jae
sub
cs
scas
mov
movsl
lods
push
mov
mov
and
leave
lahf
xchg
adc
shlb
or
addr16
jb
mov
xchg
out
mov
data16
xor
xchg
pop
pop
sbb
jnp
fstpt
mov
das
insb
adc
cli
or
test
divl
out
sub
addr16
push
sub
add
sub
loopne
and
sbb
lret
pop
hlt
lods
mov
iret
or
cmc
xor
pop
xchg
scas
imul
xchg
fnstenv
lahf
sub
dec
lahf
jle
or
pop
iret
adc
cwtl
push
add
je
xor
add
pop
test
push
mov
sar
push
rolb
test
aaa
xor
xchg
push
sbbl
mov
xchg
out
mov
or
das
into
sbb
or
loopne
addr16
adc
aaa
jb
adc
fisttpll
and
dec
shlb
ror
add
cmp
adc
mov
adc
es
les
pop
add
sbb
in
sti
push
and
es
mov
mov
jo
in
daa
loopne
bound
add
mov
mov
mov
sti
call
jg
popf
inc
scas
dec
push
ret
jo
shr
jecxz
stc
sub
push
jnp
mov
into
daa
jmp
sub
mov
cmp
incl
adc
rep
int
inc
stc
adc
inc
outsl
pop
cltd
mov
cmp
pop
rcr
inc
icebp
hlt
jmp
mov
or
rcll
inc
push
arpl
js
aad
icebp
sbb
fcmovnbe
jecxz
pop
orb
pop
or
add
inc
adc
movl
xorb
mov
mov
arpl
mov
int3
fsubrl
xchg
sub
fisttps
movsl
call
push
mov
lock
jl
cmc
js
push
inc
xor
in
sub
mov
xor
cmpsl
xor
aaa
mov
jne
out
push
fstpl
inc
sti
inc
lds
mov
mov
add
lahf
aam
imul
cs
pusha
clc
cmp
mov
stos
loope
or
jbe
cwtl
pop
insl
jl
int3
nop
mov
push
cwtl
xchg
fwait
scas
lcall
test
and
mov
cwtl
mov
scas
or
xchg
mov
lock
sbb
sarb
aas
push
cmp
imul
pop
sub
push
add
pop
cmp
stc
popa
sbb
push
xor
popf
jge,pt
or
bound
xchg
loope
pop
mov
inc
dec
adc
addl
cmp
int
test
scas
test
fstpl
sbb
sbb
pavgb
mov
dec
cwtl
sub
lret
jns
pusha
cs
test
insl
push
pop
out
or
push
inc
aas
dec
icebp
jge
mov
dec
jae
gs
sub
mov
out
jmp
jmp
mov
sbb
sub
push
mov
in
xchg
data16
inc
divl
push
inc
mov
in
fstpt
repz
dec
xor
stos
repnz
ja
mov
jne
sub
xlat
xchg
fcmovnu
fsubp
and
cmp
dec
jne
bound
xorl
push
and
ja
pop
sub
into
push
jne
ds
pop
icebp
push
mov
repnz
call
and
out
pop
push
nop
adc
jne
or
mov
or
inc
pusha
add
and
clc
mov
int3
jmp
mov
fidivl
mov
js
xor
sub
mov
cmp
mov
in
sbb
orl
fs
inc
xchg
push
ror
xchg
push
imul
in
sub
mov
aad
aad
add
movsl
shl
xor
into
stos
xor
ljmp
fdivrs
movsb
cmp
mov
add
adc
push
ss
sahf
lret
lcall
pop
dec
jns
adc
mov
cli
push
xchg
xor
cmp
jb
out
cmpsl
nop
or
testl
or
shrl
sahf
insl
lret
imul
aad
fdivl
jl
and
and
mov
xor
push
jb
inc
aad
xchg
inc
pop
ret
leave
fidivrs
or
bound
stos
jb
add
adc
lret
lret
iret
ds
xchg
fwait
add
fidivrs
dec
ret
push
nop
dec
cwtl
cmpsb
add
xchg
sbb
test
sub
lret
orb
pop
repnz
stos
add
aam
stc
mov
or
pop
dec
cltd
push
mov
int
sbb
and
je
pop
nop
das
je
ret
test
or
jne
xchg
mov
sbb
xchg
and
mov
sbb
or
xchg
jle
or
pop
xor
in
jne
jp
daa
clc
mov
mov
dec
dec
mov
inc
movsl
fwait
xchg
fidivl
jp
inc
mov
lret
sub
imul
xor
lret
jl
sbb
dec
mov
xor
mov
push
adc
fdiv
jne
xchg
push
testl
jbe
xor
cmp
sti
cmp
insb
adc
push
in
xor
pop
insl
ss
lods
aad
jno
fwait
pop
lods
or
mov
push
lock
xchg
and
out
cltd
sbb
lret
repnz
imul
outsl
call
das
je
or
xor
or
jno
sbb
sahf
icebp
adc
lret
sub
aas
mov
sbb
mov
jns
cmpsb
mov
jnp
and
and
inc
xor
pop
jmp
push
rclb
xchg
scas
mov
push
sbb
push
ss
shlb
pop
inc
adc
xchg
pop
push
movsb
add
outsl
pop
pop
or
nop
jle
jbe
aas
mov
hlt
jne
inc
aaa
push
data16
xlat
add
push
cltd
mov
jae
das
mov
jecxz
subl
test
jo
pop
xor
mov
pop
stc
sub
push
aaa
push
inc
movsb
out
mov
sbb
cmpsb
into
scas
dec
outsb
xchg
push
loopne
adc
imul
push
sti
scas
lock
cmpsl
ret
notb
fcomp
cmp
fistps
inc
jle
adcl
in
icebp
push
mov
xchg
mov
or
dec
in
lds
gs
cli
scas
test
scas
lock
subl
fisubs
in
jns
inc
divb
movsl
arpl
push
add
jnp
dec
lret
mov
pop
push
arpl
push
xor
fsub
inc
or
cmp
sbb
pushf
xchg
pop
imul
mov
stos
jno
ljmp
add
rcr
addr16
jecxz
add
inc
out
xchg
out
fninit
cwtl
leave
inc
or
test
daa
pop
divl
jge
fcmovu
out
loopne
fwait
lock
movsl
adc
pop
das
in
sbbl
push
push
in
fsts
cmpsl
mov
loopne
xchg
cmp
mov
inc
adc
addr16
daa
out
into
ret
mov
add
adcl
pop
lods
shrb
sub
and
jb
int3
das
sub
loop
in
dec
mov
int
test
pop
or
mov
mov
jnp
cld
aas
dec
mov
add
dec
or
outsl
mov
sbb
call
inc
stc
mov
push
das
or
cmpsb
and
cmp
lcall
push
mov
push
xor
pop
test
or
fwait
mov
xor
add
test
dec
pop
scas
pop
push
mov
out
xlat
pop
rolb
mov
fistl
push
inc
push
mov
xor
mov
ror
imul
out
cmp
sbb
or
es
ds
bound
adc
jne
cld
out
fadd
fnstenv
push
xor
mov
pop
loope
jp
xlat
movsl
xor
popa
inc
test
cmpsl
adc
jl
mov
lods
mov
arpl
leave
mov
adc
cli
sbb
mov
and
sbb
jns
adc
sub
cmp
sub
popf
aaa
mov
out
sbbl
fldl
mov
xchg
gs
stc
xchg
ret
adc
cmpsl
mov
ljmp
jno
xchg
pop
adc
inc
cmp
aaa
ret
mov
mov
jge
and
in
movsl
jp
bound
jb
fs
add
sub
dec
xchg
sbb
pop
add
and
jge
std
popa
sbb
and
shr
inc
add
ss
movsl
pop
mov
fs
jo
mov
xor
jle
lods
outsb
jo
mov
insl
clc
inc
adc
add
push
aaa
cld
inc
mov
pop
push
subb
popa
pop
sti
cld
ja
dec
cmpsl
outsb
rcr
inc
sbb
pop
xor
inc
push
xchg
popa
cmp
inc
or
mov
xchg
gs
loopne
mov
std
inc
jecxz
mov
adc
cwtl
adc
pop
add
sub
dec
cmpl
movsl
lods
gs
adc
pop
jb
or
and
jg
daa
test
mov
push
pop
pop
out
mov
xchg
sub
sahf
xor
adc
push
mov
lds
cld
jno
adc
dec
mov
jo
sub
or
dec
sbb
xor
xor
or
pop
rolb
jns
adc
jp
cmp
outsb
rcll
out
xorb
mov
sbbb
fisubrs
popa
popa
add
js
or
into
xchg
sbb
test
xor
sub
dec
orb
xchg
sbb
push
stos
cmc
nop
sbb
inc
inc
imul
fisttpl
xlat
jns
mull
mov
lds
mov
push
pop
movsl
in
mov
push
movsb
scas
jmp
sub
add
cmp
sti
mov
mov
mov
add
mov
pop
out
add
add
or
sbb
test
int
lea
test
scas
mov
push
rorb
mov
dec
xchg
or
inc
dec
stos
je
or
mov
jge
lea
xchg
loope
addb
add
lcall
mov
nop
decl
cltd
push
jae
mov
add
jmp
out
push
outsb
inc
dec
push
inc
adc
fprem
daa
sbb
sahf
dec
jmp
int
arpl
arpl
jg
push
xor
iret
in
insl
sbb
push
rcrb
mov
mov
pop
outsb
sbb
or
test
dec
jg
or
data16
and
loop
clc
jnp
mov
add
cwtl
and
xchg
mov
inc
repz
cmp
inc
adc
sub
insl
icebp
inc
sbb
je
xlat
lods
fimull
or
cs
cmpsl
fmul
fiadds
lods
jle
lea
dec
int3
pushf
out
mov
xchg
sub
add
cmp
sahf
or
imul
mov
ljmp
stos
dec
inc
cmp
push
in
dec
test
stc
push
arpl
imul
mov
push
jnp
insb
fs
popf
loopne
cs
mov
ss
repz
mov
cmp
outsl
sbb
push
mov
stos
push
ss
fsubl
ss
cld
pop
sub
pop
add
push
stos
dec
sub
pushf
test
lret
cmp
ljmp
jo
cli
adc
jae
add
cwtl
pushf
inc
xor
test
jl
inc
adc
mov
out
xchg
xor
add
push
out
out
mull
dec
mov
xchg
sub
sahf
or
mov
sbb
xor
or
pop
jmp
and
fists
cwtl
daa
pop
jle
mov
dec
in
dec
imull
sbb
incb
mov
stc
inc
shrl
stos
add
sbb
push
in
and
ljmp
addr16
cmp
mov
cmc
xor
pop
mov
push
add
jnp
adc
test
andl
scas
xchg
cmp
les
test
jo
adc
std
sbb
sarl
inc
jmp
pop
mov
mov
imul
daa
fwait
sbb
push
add
js
push
add
cmp
add
ficoms
and
daa
jge
dec
dec
dec
jl
ret
lahf
mov
mov
fwait
pusha
dec
jbe
cmc
xor
lds
push
stc
stos
and
and
cltd
mov
notb
iret
rolb
negl
in
hlt
js
movsl
sarb
pop
outsl
hlt
lret
sub
dec
sub
sbb
scas
ds
push
mov
imul
cmp
or
cmp
jg
dec
repz
popa
fcmovnu
inc
loope
lret
gs
call
xor
mov
xor
jp
sub
shrl
imul
mov
push
jno,pn
bound
jecxz
fbld
add
lahf
cmp
sub
insb
lds
xchg
add
test
into
stc
fistpll
rcrl
jns
dec
hlt
pop
mov
jmp
out
sti
in
rolb
pop
sub
rcll
and
xchg
rorb
outsb
push
jne
add
xor
push
movsb
pop
out
insl
xor
xor
cmp
add
shrb
adc
das
test
sub
adc
leave
mov
pop
xor
or
mov
int
push
pop
jg
int
aam
ljmp
mov
mov
mov
outsl
shlb
dec
sbb
xlat
aaa
add
lret
or
jo
ret
mov
push
push
stos
mov
add
push
mov
aaa
mov
insl
mov
andb
or
and
mov
xchg
pop
mov
adc
xor
xor
pop
call
aad
in
data16
in
fbstp
cltd
dec
sub
dec
test
inc
inc
xchg
insl
mov
sahf
or
push
out
mov
push
jnp
mulb
xchg
testb
jb
je
lret
in
in
adc
stos
das
fisttps
inc
add
cmp
out
push
inc
int
xlat
push
movaps
inc
sub
cmpsl
xor
decl
imul
inc
jo
add
arpl
push
fs
daa
add
jge
xchg
in
or
std
inc
ja
mov
andl
outsl
daa
fadds
push
call
adc
mov
push
xor
mov
inc
jbe
icebp
cmp
insl
or
jnp
sbb
das
ret
inc
out
or
push
sbb
addl
call
fs
gs
inc
push
out
jb
ret
rol
or
and
out
out
sar
movsb
cld
sbb
pop
icebp
ss
cmp
dec
push
cwtl
iret
add
cmp
sbb
ror
add
or
cmp
ret
fnsave
cmpb
in
pop
idivb
imul
jno
movsb
pause
hlt
jg
ror
out
jne
inc
add
or
psubsw
mov
daa
mov
add
or
and
mov
icebp
pop
jmp
frstor
roll
mov
xor
pop
push
pushf
lds
dec
adc
xchg
xchg
das
pop
and
inc
push
iret
hlt
enter
cmp
loopne
in
scas
outsb
rcrb
orb
std
out
addl
sub
rcl
push
roll
add
xor
xchg
scas
stos
cmc
mov
mov
inc
dec
imul
cwtl
aam
cmpsb
jo
cmp
ljmp
outsl
pop
and
sub
lcall
imul
sbb
dec
mov
scas
push
enter
mov
fsubs
pop
cmpsb
push
mov
stos
sub
jecxz
orb
xchg
scas
mov
jmp
aaa
scas
fs
push
dec
add
inc
ds
dec
daa
adc
jp
xchg
mov
imul
shl
stos
cld
loope
sub
out
ljmp
and
xchg
lret
jle
sti
pop
loop,pn
mov
popf
es
fnstcw
sub
mov
cwtl
addb
pop
inc
add
xor
cmc
push
lret
arpl
je
sub
xchg
stos
xchg
jge
push
dec
js
leave
or
xor
cltd
lcall
sbb
movsl
fidivrs
in
mov
dec
test
pop
bound
and
inc
lret
loopne
mov
leave
les
cltd
jae
xor
scas
int
sub
insl
loopne
pop
mov
sbb
or
sub
and
xor
mov
fstpt
enter
mov
adc
ret
test
std
aaa
insb
jge
sub
icebp
add
push
ds
arpl
sbb
inc
mov
push
andb
dec
cwtl
addl
mov
jns
xor
xor
test
mov
test
xchg
movl
loopne
pop
jns
lahf
push
jmp
addr16
loope
push
inc
lds
sbb
aam
and
and
lcall
mov
xchg
mov
sub
push
xchg
jle
fs
adc
cmpsl
imull
mov
mov
push
mov
push
stos
and
push
cmp
xchg
pop
hlt
cmpsb
repnz
iret
loope
and
xchg
lcall
cmc
cmp
dec
rclb
daa
xchg
or
imul
jae
jns
push
fimull
movsb
push
cmp
dec
imulb
sti
add
jno,pt
lcall
ss
pop
xor
enter
pop
decb
xchg
sahf
xor
push
mov
inc
aam
roll
aam
orb
aaa
jbe
leave
gs
and
cs
and
popf
dec
pop
mov
int3
leave
mov
xchg
lret
fcomps
aam
dec
xor
xor
push
lods
out
sbb
lret
mov
fs
pop
movsl
lods
fnop
out
scas
dec
sbb
push
imul
push
outsl
int
ljmp
je
pop
sbb
nop
cmp
int
dec
or
ss
adc
mov
dec
sub
dec
adc
ret
sbb
jl
pop
jle
in
mov
xor
in
inc
cmp
push
ja
movl
adc
iret
or
mov
xchg
mov
jo
fcoms
cwtl
inc
push
xchg
icebp
rol
sbbl
xchg
fiaddl
out
shrl
int
sti
shlb
ljmp
mov
sbb
lea
das
push
inc
fildl
pop
inc
xorl
enter
mov
sbb
cmp
cltd
inc
imul
sbb
dec
xchg
xor
mov
mov
push
sub
fnstenv
test
push
cmp
jg
bound
mov
xchg
dec
jmp
mov
and
inc
or
enter
pop
mov
inc
adc
jns
xchg
in
add
sub
insl
pop
outsl
xor
loopne
icebp
cli
and
into
scas
out
cmp
jp
and
pop
lret
or
xchg
daa
fdivrp
mov
jg
cmpsb
insl
int3
stos
cmp
jecxz
popa
and
mov
cmc
mov
pop
push
lret
mov
mov
or
pop
mov
loopne
cmc
fs
xor
mov
sbb
je
lds
pop
xor
pop
mov
xchg
lods
jle
ret
ja
sbb
cmp
incl
xchg
sbb
js
cmp
and
or
lds
push
pop
jg
test
sub
es
sub
jo
xchg
cmp
aaa
jecxz
mov
push
cmc
inc
push
adc
jae
loope
nop
pushf
jne
nop
and
cmove
xor
push
test
push
cmp
cwtl
mov
stc
notl
or
xor
ss
adc
lahf
adc
jg
mov
xchg
test
mov
xor
loope
dec
mov
fcompl
imull
xchg
sub
jo
inc
jae
pop
pop
sub
pop
pop
stos
xor
bound
sarb
insb
or
lods
clc
nop
lods
adc
jae
jge
mov
cmpsl
and
pop
jp
divl
inc
ja
mov
jecxz
and
adc
jl
pop
or
mov
sub
lea
or
movsb
mov
fnstcw
push
and
jle
sti
push
cmp
inc
dec
fsubp
inc
sbb
lock
cmpsl
ss
cmpsl
push
insb
pop
dec
mov
sti
sub
xor
dec
add
cmp
pop
mov
lret
push
and
pop
inc
mov
mov
ds
movsb
fisubrl
mov
js
lahf
lods
inc
fisubrs
lock
pop
stos
lock
sub
andl
sbb
shll
or
lret
pop
xchg
pop
out
pop
push
jb
fimuls
mov
call
xchg
sbb
shlb
out
ja
sbb
pop
hlt
mov
mov
movsl
aas
decb
adc
out
or
movsb
jle
dec
fnstsw
pop
lods
test
rorb
enter
inc
push
mov
push
lods
insb
lcall
mov
mov
fstl
fdivr
daa
popa
jne
test
pop
jns
xor
mov
mov
inc
fstps
mov
pop
mov
mov
movsb
in
jo
mov
jl
xor
aam
jo
mov
sbb
pop
add
inc
iret
push
ficomps
mov
sub
in
jno
hlt
xchg
movsb
inc
in
scas
sub
mov
jle
pop
test
jle
dec
jl
cmp
inc
jb
outsl
and
je
mov
shlb
dec
xlat
xor
inc
mov
lcall
dec
and
mov
imul
push
inc
insl
loope
loope
std
push
orb
push
xchg
inc
test
nop
push
pop
mov
sbb
stos
rolb
or
and
sub
jge
add
adc
and
sarb
xor
cmp
or
cld
jmp
testl
fadds
insb
xor
sub
les
stos
push
push
or
ficomps
mov
sub
add
dec
mov
push
mov
mov
push
xchg
push
xchg
fldenv
xlat
adc
add
jle
fsubr
sti
dec
sbb
jmp
sarb
repnz
sub
rol
stos
into
decb
mov
mov
seta
lret
push
popf
sbb
adc
cltd
bound
and
add
jp
xchg
fcoml
and
pusha
insb
pop
lock
enter
or
fnstsw
pop
jg
xor
ss
stos
push
cmp
push
sbb
xor
std
cli
or
sbb
push
out
lret
dec
mov
cwtl
enter
push
inc
enter
add
and
or
cwtl
dec
lock
fwait
pop
stos
cmpsb
ss
xchg
dec
xchg
and
pusha
pop
jbe
add
xchg
adc
fsubrs
inc
test
cmp
int
mov
testb
mov
jb
mov
mov
data16
pop
sub
jo
cli
out
adc
sbb
and
sbb
dec
aas
jb
push
loopne
xchg
pop
mov
sarb
fcmovnbe
dec
shlb
and
inc
adc
popf
jmp
xchg
test
and
mov
in
xor
arpl
sub
push
mov
out
add
sbb
pop
push
insb
jecxz
ljmp
and
mov
and
mov
andb
pop
out
xchg
jle
mov
xchg
aad
rcrb
add
popa
dec
cmp
clc
in
lock
jecxz
popf
jae
push
add
in
jle
jbe
outsb
cmp
pop
js
mov
inc
shll
xchg
sub
sub
mov
iret
mov
mov
sarb
or
cmc
daa
push
imul
mov
pop
adc
out
pop
xor
lock
and
dec
add
pop
mov
out
dec
xchg
or
loopne
sub
stos
mov
add
mov
mov
outsb
jbe
and
push
pop
aas
shl
dec
sarb
out
sarb
in
out
aad
pusha
stos
add
dec
jecxz
and
or
sti
scas
mov
mov
test
jl
or
insl
sbb
aas
out
mov
sbb
xchg
jmp
xchg
lods
leave
cmp
in
jbe
pop
mov
add
rcrl
add
repnz
gs
cmc
movsb
mov
push
mov
or
scas
push
cmp
sub
add
add
pop
or
loopne
fiaddl
pop
push
jmp
dec
jae
and
mov
pushf
push
mulb
jl
mov
or
adc
sub
jae
leave
popf
mov
test
sub
shrl
sub
sarb
pop
sub
adc
xchg
mov
popa
mov
pushf
xchg
lahf
add
inc
in
jnp
jo
inc
pop
subb
dec
addr16
mov
hlt
sbb
outsl
sub
es
adc
mov
mov
and
jl
sub
and
mov
push
push
mov
lds
outsb
inc
mov
lea
decl
stc
orb
repnz
xor
sub
xor
stc
mov
hlt
nop
mov
inc
ja
fldcw
ja
add
ret
mov
ja
and
xor
repz
xor
or
aad
cmp
into
xor
mov
push
push
mov
sub
xchg
in
out
xchg
scas
and
or
and
xchg
jne
les
insl
xorl
in
mov
cwtl
lahf
outsl
enter
out
or
scas
inc
push
push
inc
or
sarl
pop
aaa
pop
loope
and
jl
loopne
adc
xor
jge
dec
ss
cmp
dec
int
cli
js
jbe
push
call
lock
and
jmp
mov
xchg
ficoms
cmp
data16
inc
mov
lea
into
add
ljmp
test
lock
pusha
xchg
pop
push
cmp
inc
leave
push
js
pusha
push
sbb
pusha
insb
stc
sbb
stc
mov
push
xor
ljmp
xchg
pop
jmp
loope
or
push
icebp
jb
out
adc
stc
pop
test
pop
loope
pop
jle
inc
sbb
ljmp
xor
push
add
nop
xor
stos
in
out
int
mov
insl
xor
mov
sub
adc
popf
lods
imul
sbb
pusha
pop
aas
adc
mov
jp
and
mov
outsl
inc
cmp
and
xor
aaa
pop
dec
add
mov
add
push
lock
jg
stos
addr16
aaa
fcmovu
aam
jmp
test
loop
mov
xchg
adc
addr16
lods
pop
or
test
xor
dec
push
xchg
and
xchg
cltd
inc
in
xchg
sbb
fimuls
fdiv
out
mov
xlat
cwtl
cltd
testb
sub
sti
push
lods
int3
stc
sub
jg
pop
pushw
or
in
mov
xchg
jo
sub
cmp
mov
iret
and
pop
sub
or
loope
std
stos
out
loopne
sub
out
cs
ss
lahf
jne
push
fs
loopne
or
gs
mov
and
add
mov
push
sbb
adc
scas
xor
jmp
mov
fstl
push
jl
mov
fidivl
lds
jae
jp
pop
sbb
dec
mov
xor
nop
cmp
fdivrs
xchg
jge
mov
xchg
mov
cmp
inc
inc
daa
jns
fwait
mov
inc
pop
adc
sub
add
jmp
outsl
roll
add
loopne
push
cwtl
loop
fadds
int3
jo
xchg
sbb
fisubrs
test
cmp
aas
xchg
or
lret
mov
stos
mov
and
or
jg
dec
shlb
push
in
cld
fnstsw
cmpsl
cmp
lret
lret
ljmp
cmc
add
xchg
cld
sbb
jmp
add
fnstsw
push
mov
and
pop
cmpb
or
or
or
mov
fiaddl
mov
std
inc
xor
cmp
dec
inc
jmp
mov
into
add
outsl
pop
jno
or
mov
rcrl
mov
jae
insb
outsb
cld
mov
sbb
mov
jl
nop
popa
push
lret
adc
mov
cld
orl
insl
flds
add
out
jecxz
test
cli
sub
and
add
clc
mov
outsl
out
in
pop
pop
sbb
or
sar
dec
mov
and
or
mov
insl
lahf
orb
xchg
xorb
outsb
or
add
pop
pop
lret
inc
aas
imul
xchg
popf
addr16
push
leave
cmp
fs
fwait
ljmp
lcall
jmp
xchg
add
or
jb
jg
inc
xchg
or
pop
je
mov
push
cmpsl
fisubs
nop
xor
addr16
dec
in
cmp
xor
jns
and
jnp
push
push
inc
lahf
sub
call
ficoml
minps
dec
cld
jge
jae
sar
pop
cmpsb
aam
cmp
cmpsb
cld
cmp
inc
shll
sbb
les
mov
sub
push
out
add
push
lcall
mov
add
sbb
add
sbb
or
jle
enter
xchg
xor
mov
dec
inc
jmp
inc
arpl
mov
aas
add
and
xchg
andb
add
xlat
insb
fisubs
xchg
jne
iret
xlat
adc
jne
in
sub
fdivrs
mov
out
test
bound
or
add
sub
mov
sbb
xchg
fs
mov
pop
adc
sbb
pop
stos
mov
enter
stos
cmp
dec
lods
push
add
stc
mov
inc
fidivrs
std
dec
inc
and
mov
adc
daa
adc
mov
outsl
jnp
nop
shrl
pop
aaa
mov
xor
pop
pop
xchg
jne
adc
xchg
sbb
pushf
adc
pop
sub
sahf
sub
adc
test
stc
or
fs
fldl
jg
and
push
test
test
lahf
mov
mov
ss
dec
mov
outsb
in
push
scas
sarl
dec
cmc
testl
loope
inc
sub
sbb
lea
xor
mov
add
and
aam
test
hlt
enter
jbe
frstor
test
sbb
test
int
pop
jae
ret
and
scas
cmp
lret
aas
dec
and
xor
call
out
sub
mov
mov
cwtl
std
loop
insl
aas
shlb
mov
fists
adc
lret
call
jb
or
push
sub
nop
lret
stos
lods
jbe
inc
aaa
cld
adc
icebp
cmp
xchg
clc
cmp
subb
xchg
bound
inc
fs
jbe
pop
inc
or
shrl
nop
sti
mov
sarb
stos
out
rol
pop
gs
shlb
inc
in
inc
out
jne
xchg
stc
std
in
ljmp
jno
xchg
jnp
xlat
fcmovnu
inc
and
imul
adc
fsts
outsl
daa
int3
adc
loopne
lcall
mov
mov
shlb
dec
fimull
and
sbb
jbe
in
inc
push
cmp
shl
repnz
pop
in
test
int
pop
mov
in
and
iret
dec
ficoms
js
xor
loope
aas
scas
mov
ljmp
lods
cmc
sbb
sarb
mov
aad
push
mov
push
inc
and
sbb
adc
xchg
jo
push
cmp
cmp
xrelease
ret
dec
pop
inc
testl
push
ficomps
adc
movb
xchg
jno
movsl
mov
lcall
test
repz
hlt
in
or
sub
xchg
movsb
mov
sub
movsl
aaa
fistpll
jge
fwait
xchg
push
lret
sarb
pop
mov
pusha
les
push
outsl
jg
sahf
jno
push
and
lock
sbb
push
call
dec
loope
ret
into
sub
in
xor
repnz
mov
test
mov
fs
push
adc
and
out
sbb
xchg
aad
pop
pop
mov
daa
arpl
shlb
es
cs
sbb
iret
aas
pop
jb
and
xchg
inc
loope
out
sub
out
iret
adc
clc
adcl
xchg
or
push
xchg
ds
movsl
out
sbb
popf
push
fidivl
pop
loopne
imul
in
push
and
movsl
in
and
sbb
mov
push
stos
gs
pop
test
sub
cmpsl
push
mov
push
or
xlat
mov
sti
int3
mov
xchg
jmp
or
icebp
adc
test
dec
mov
mov
cmp
out
mov
lea
mov
sbb
movsl
mov
cmp
arpl
inc
ljmp
mov
movsb
sbb
or
cli
imulb
ds
cld
frstor
add
js
es
and
mov
sahf
out
adc
pusha
lea
cmpsb
mov
into
mov
pop
add
call
mov
push
mov
inc
inc
or
push
push
enter
js
or
das
test
je
aaa
sub
mov
and
jge
icebp
popa
mov
aaa
aaa
fs
inc
cmp
pop
lea
aad
jmp
add
jae
pop
out
xchg
push
aas
loopne
or
mov
inc
je
jo
pop
pop
pop
mov
or
mov
cli
cmp
xor
jne
mov
pop
mov
fimuls
fmuls
push
jmp
insb
aas
shll
incb
or
in
cmp
cmc
cmp
stc
cmp
and
popf
mov
and
lcall
push
mov
inc
mul
mov
push
xchg
test
test
cwtl
fnstenv
fsubl
xor
add
sub
test
dec
mov
xor
cmpsl
xor
xor
sub
int
shrd
leave
stc
lock
xchg
sbb
popf
pop
dec
pop
fwait
jl
shr
mov
cmpsb
test
out
sti
js
orb
mov
out
arpl
das
sbb
std
loopne
or
testl
or
loopne
jge
xor
not
cmpsl
outsb
inc
push
jecxz
and
loope
cmp
jmp
mov
jbe
lods
data16
sti
lods
sub
neg
pop
push
jge
scas
inc
gs
mov
out
sbb
ds
mov
fldl
imul
push
ja
fstpl
push
jbe
adc
jp
out
cltd
movsb
fwait
pop
test
push
stos
jbe
gs
mov
fimull
lahf
push
in
xchg
xor
sub
int3
pop
mov
pop
xchg
mov
mov
pop
xchg
jl
shrb
adc
or
ror
bound
pop
push
add
mov
xchg
test
neg
fisttpll
ds
rcrl
cmp
in
adc
lret
loopne
or
mov
inc
cltd
paddw
sbb
xchg
out
repz
inc
dec
cld
loop
add
mov
and
xchg
add
lods
cmp
gs
lods
add
and
jl
movsb
dec
ret
cmp
pop
rcl
mov
add
aaa
pop
jno
sbb
fcmovnu
es
add
dec
ret
sbb
sahf
inc
scas
dec
nop
add
pop
mov
int3
push
push
adc
jge
je
in
fcoml
push
lock
add
cmp
mov
or
mov
mov
mov
mov
imul
aas
xchg
pop
vmwrite
sbb
int3
jnp
cmpsb
jnp
pop
mov
mov
pop
inc
aaa
lods
xchg
sub
sahf
adc
dec
adc
cmpsl
pushw
jge
xchg
jge
sub
fwait
mov
xor
push
out
popa
dec
adc
call
or
inc
stc
mov
imul
pop
inc
movsl
arpl
mov
or
fistpl
shll
unpckhps
repz
xchg
mov
insb
and
jno
add
push
fsub
adc
test
jnp
jmp
xchg
stos
lret
xor
sbb
cltd
add
jp
cld
jp
or
jno
out
rcll
jle
dec
lret
add
jp
popa
leave
xchg
pop
rorb
xor
fldt
rcr
xor
jb
and
mov
jo
lret
push
push
mov
pop
icebp
dec
ror
das
or
push
out
sbb
xor
test
adc
leave
xor
add
cmp
mov
clc
jne
loopne
rclb
movsb
mov
dec
leave
cmc
daa
in
xchg
sbb
xor
jo
jecxz
sub
lods
rcr
imul
add
mov
xorb
xchg
inc
cmp
inc
gs
add
adc
sub
cmp
cmp
pop
push
adc
adc
sub
and
lcall
mov
xchg
es
add
outsl
ljmp
dec
test
pop
and
movsl
sub
inc
imul
push
xchg
push
ljmp
push
pop
sbb
es
add
jbe
jp
mov
repz
hlt
fsubrs
mov
ror
xchg
mov
push
or
jmp
shll
cmovb
and
sbb
push
add
sub
mov
add
repz
fsubl
out
fucomp
scas
pushf
fwait
stc
sbb
mov
pushf
shl
add
dec
mov
jp
fiaddl
mov
cmpsb
mov
es
xor
clc
popf
jbe
add
pop
addl
repz
push
js
imul
lret
fadds
or
out
data16
xor
adc
push
addr16
cmp
mov
and
mov
pop
outsl
or
pop
sub
add
cld
push
xorl
enter
pop
bound
mov
adc
mov
push
mov
pop
pop
push
mov
ja
pop
push
xchg
cmp
jg
adc
sarb
arpl
lds
out
arpl
enter
popa
xsaveopt
fbstp
movl
testl
shlb
inc
notb
xchg
adc
adc
add
jl
sub
inc
leave
stos
movsb
pop
loope
pop
fisttpl
orl
js
sti
cwtl
test
pop
mov
sbb
xchg
rol
mov
push
scas
mov
scas
dec
cmpsb
fidivs
jo
sub
inc
and
fs
inc
cmp
pop
jmp
dec
hlt
xor
cwtl
ret
sbb
cmp
movl
sarl
loopne
adc
inc
das
and
xchg
pop
lds
lcall
adc
ret
cwtl
mov
xchg
ja
lods
mov
stos
inc
xor
imul
add
mov
ret
push
pop
call
push
pop
push
int3
xor
ficompl
inc
mul
in
or
mov
mov
lret
xchg
jg
call
jb
insl
push
hlt
mov
inc
ss
mov
xchg
ss
push
inc
cltd
inc
or
lods
cmp
jns
out
stc
or
popa
iret
xchg
mov
aaa
lds
pushf
and
notl
daa
adc
ja
ljmp
lcall
xlat
push
roll
scas
ja
xchg
dec
push
cs
push
aas
lods
out
sub
mov
test
push
in
mulb
cmp
pop
pop
and
dec
pop
bound
gs
or
xchg
addb
testb
pop
icebp
inc
add
enter
test
jl
bswap
lahf
les
pop
test
test
mov
fdivs
mov
test
dec
sub
xchg
dec
xlat
jbe
sub
pop
mov
or
lcall
fimull
cmp
test
jne
stc
aaa
in
jmp
jne
jns
xor
outsb
pop
add
loop
jp
cs
sti
cmp
test
cmovbe
cmp
jns
dec
jbe
movsb
xor
adc
and
xchg
mov
or
or
xchg
mov
push
cmc
jo
sub
jo
pop
pop
or
stc
inc
mov
xchg
dec
out
lock
add
push
fwait
or
mov
dec
cwtl
sbb
daa
push
mov
vandnps
int3
mull
aad
adc
ficoms
dec
rorl
push
jnp
lahf
xchg
loopne
or
orl
sbb
into
push
push
dec
or
adc
sub
cmp
test
movl
mov
rorl
add
test
push
cmp
xchg
sbb
int3
pop
lahf
inc
fadd
pushf
push
mov
ljmp
mov
push
mov
push
out
gs
jle
cli
loope
add
dec
inc
mov
test
pop
sub
dec
mov
xor
or
inc
sub
xchg
lcall
inc
add
jne
mov
adc
and
insl
mov
ret
pop
ficoml
inc
gs
and
push
lods
pushf
pop
test
pop
or
push
jg
pop
or
dec
lods
push
pop
jl
sarb
stos
mov
xchg
clc
pop
lret
mov
lock
in
pop
stos
lds
pop
mov
popf
jp
jle
jnp
adc
pop
mov
in
je
int
lcall
arpl
cmp
scas
jmp
cmp
xor
mov
mov
push
call
fdivs
jne
jp
lahf
mov
shl
popa
imul
xchg
gs
fwait
or
sbb
icebp
or
std
stos
negb
out
ret
aam
inc
pusha
jmp
bound
push
add
test
or
into
pop
add
pop
and
popf
sbb
lods
into
sub
or
aas
cltd
cmc
icebp
xchg
or
xor
sub
adc
dec
mov
loop
cwtl
out
adcb
push
pop
clc
daa
dec
test
mov
cwtl
cmpsb
mov
ds
adc
rolb
inc
adc
popa
cmp
cmp
or
mov
sbb
test
mov
cmpsb
mov
imul
cmpsl
sbb
repz
pusha
call
xor
add
cmc
xor
inc
ret
fisubl
cmp
mov
inc
and
fldpi
sarl
cmpsl
pusha
cmp
out
xlat
aas
lds
add
fwait
lret
andl
popf
xchg
pop
mov
scas
push
dec
cmpsb
cmp
loopne
mov
lds
jle
cmp
xor
lods
or
das
imul
push
sahf
out
adc
subl
dec
data16
lock
and
push
xchg
stc
inc
dec
jl
add
cmp
inc
addr16
jb
bound
call
clc
sub
mov
sti
rorl
cmp
dec
jle
out
std
push
mov
daa
pop
outsl
daa
cmc
mov
lock
mov
das
ss
sub
loop
fsts
mov
scas
inc
and
mov
lods
and
dec
mov
xor
aam
ret
ffreep
xor
inc
movsl
addb
ds
outsl
jb,pt
shlb
pop
je
mov
or
or
push
mov
cmp
lahf
cmp
lods
xchg
push
mov
sub
or
mov
xchg
cmpsb
sbb
xor
sbb
xorl
cli
pop
lahf
pop
mov
mov
sub
repnz
jo
hlt
sti
mov
push
xchg
cmp
jmp
push
add
jle
and
xchg
add
adc
jnp
fldl
out
out
add
and
xchg
js
je
iret
dec
int3
push
stc
lea
inc
cmp
hlt
xor
mov
push
cmc
lods
shll
lds
lea
xor
push
inc
push
or
ret
lret
add
lock
jge
sahf
rclb
aaa
pop
sub
orb
mov
mov
adc
ss
mov
bound
fnstenv
pop
lods
and
mov
jge
mov
rorl
sbb
mov
xchg
out
mov
ja
adc
xchg
jle
push
int3
imul
inc
enter
or
fnstenv
loop
popa
das
cld
popf
cli
dec
jecxz
fistl
movl
leave
das
data16
inc
and
mov
adcb
pop
sbb
aad
pop
mov
lds
xor
minps
jle
xchg
mov
mov
xchg
fnsave
mov
lret
fnstenv
cs
xor
or
jnp
out
jge
mov
mov
fisttpll
add
nop
xchg
sbb
outsb
or
push
add
fucom
or
jb
incl
push
mov
sub
out
xor
cmp
stc
ljmp
mov
dec
cmp
mov
jnp
sub
mov
sahf
dec
scas
jae
mov
in
testb
push
mov
lock
pop
pop
shr
ja
xchg
lds
aaa
dec
cmpsl
insb
inc
jmp
add
jp
adc
mov
mov
decb
mov
lock
rorl
xchg
dec
lcall
jmp
shlb
pop
and
mov
clc
mov
xchg
in
mov
mov
insl
pop
addr16
out
dec
lea
out
jmp
test
in
lret
lea
addr16
push
xchg
pop
dec
sub
stos
mov
xchg
push
sbb
sub
je
gs
insb
arpl
aad
into
outsl
pop
jp
sub
or
xchg
shll
adc
inc
add
push
adc
jno
dec
loop
lret
icebp
rcrb
xchg
testl
popf
mov
or
icebp
mov
movsb
xor
orl
jp
lock
push
sub
jo
shlb
lret
sub
movsl
dec
mov
test
mov
xchg
sub
sbb
mov
mov
jno
cmp
adc
pop
push
mov
or
shrb
insb
test
sbb
xchg
mov
xor
mov
jge
mov
mov
cltd
nop
int3
cmp
dec
dec
lock
rcrb
test
popa
sbb
mov
mov
rorb
push
insl
repnz
js,pt
out
xor
xchg
mov
push
shlb
loopne
clc
xchg
mov
mov
jecxz
xor
jns
xor
mov
andb
dec
movsb
repnz
repnz
in
mov
mov
sub
push
lcall
std
mov
jbe
push
andl
fmul
xor
scas
std
pop
lock
dec
pop
cmc
in
scas
popf
jbe
and
sub
nop
mov
shrb
or
int3
movl
inc
sub
inc
lods
add
loopne
ds
mov
sbb
ds
cmc
inc
int
add
pop
cmc
jns
push
inc
jae
dec
lods
inc
sbb
loopne
jge
pop
fidivrs
ds
sub
out
xor
int3
pop
repnz
lret
xchg
into
dec
shl
mov
mov
mov
add
les
pusha
out
xchg
jne
pop
cwtl
imul
daa
int3
mov
cmpsb
and
outsb
incl
fistpl
push
sub
jb
divl
pop
sbb
mov
aam
mov
mov
je
jns
mov
orb
cmp
mov
cs
xor
jo
outsb
fs
mov
bnd
push
stos
dec
call
fwait
sahf
lcall
xchg
inc
cmpl
dec
insl
js
sbb
sarl
xchg
push
sub
adc
enter
and
stos
add
lock
pop
push
scas
jle
mov
outsb
mov
add
mov
rolb
mov
mov
xchg
mov
mov
push
mov
pop
movsl
jnp
aad
xchg
inc
sbb
push
addb
and
sub
fwait
ret
fisubrl
push
fs
add
pop
mov
gs
addr16
sub
mov
and
push
out
mov
movb
arpl
cmp
xor
mov
shl
es
dec
les
and
dec
or
es
xchg
pusha
dec
push
and
add
mov
fists
push
cmp
jae
aad
stc
pop
and
mov
push
rolb
ja
out
and
imul
cmpl
xor
inc
negl
push
inc
jp
and
inc
pop
inc
mov
xchg
sbb
fldcw
int
nop
fs
mov
cmp
push
jb
inc
inc
jle
cwtl
movb
sbb
lahf
mov
dec
data16
dec
fstpt
ret
mov
mov
push
jmp
ret
ficomps
stos
repnz
dec
pop
scas
jb
add
in
push
mov
imul
lods
cmp
cwtl
lds
cmp
addl
add
outsl
dec
ja
fst
add
test
push
addr16
inc
lcall
push
out
aam
ljmp
xchg
mov
mov
cwtl
lds
or
bound
ja
sub
test
ret
sarl
sub
jecxz
and
inc
cmpsl
sub
outsl
cmpsb
cmp
sbb
adc
sbb
mov
lcall
cld
popa
or
sbb
call
pusha
in
nop
adc
push
mov
jmp
mov
icebp
addl
jnp
lcall
mov
scas
and
xor
sub
lahf
in
add
mov
jns
fimuls
pop
sbb
sbb
mov
mov
cli
icebp
int3
test
xchg
push
jmp
xchg
push
and
test
mov
sbb
movsl
jo
xchg
xor
icebp
clc
sub
push
call
les
jmp
inc
inc
out
pop
dec
iret
ret
xor
mov
fld
fistps
loope
mov
sub
xlat
int3
jp
pop
cmp
loope
push
dec
fsubrl
xor
lret
scas
xor
into
dec
loope
push
inc
out
in
jno
and
popf
test
subl
ror
test
mov
and
sbb
mov
shrb
pusha
mov
rolb
stos
lods
jno
push
sbb
push
fbstp
sbb
inc
std
push
sbb
ss
sbb
lahf
add
subb
mov
jg
loop
shlb
jmp
adc
xlat
lret
cmc
pop
ret
shrl
mov
mov
pop
outsl
je,pn
jae
xor
push
test
mov
inc
pop
jae
jns
outsb
fdivs
pop
shlb
push
inc
movsb
inc
cmp
fmul
push
scas
movl
or
xor
cltd
rolb
cmp
lds
leave
mov
call
push
adc
imul
inc
aad
jno
data16
mov
dec
aad
or
mov
push
add
mov
sub
ret
stos
sti
lods
add
add
inc
hlt
xlat
jp
filds
cmp
daa
test
clc
call
xor
cmp
inc
xchg
and
or
rol
pop
lcall
lahf
push
lock
xchg
cmp
push
int
fnstenv
lea
inc
outsl
dec
xlat
sub
rcrb
xor
pop
pop
mov
adc
mov
bound
insl
or
scas
jmp
jne
inc
pop
xor
imul
inc
ds
sub
nop
inc
rorl
std
dec
jo
xchg
movsb
aas
lock
pop
mov
and
or
testb
or
xchg
adcb
push
add
notb
mov
in
sbb
fsts
add
rorb
push
xor
sub
xchg
lret
decb
cld
outsb
loop
and
cwtl
stos
jo
mov
out
mov
lods
inc
jle
xorl
mov
es
bound
add
icebp
out
fistps
jmp
mov
loope
cmp
ja
mov
push
or
sub
xchg
repz
hlt
push
jns
fidivrs
pop
cmc
add
adc
int3
out
add
inc
cwtl
stos
outsb
pop
xchg
stos
iret
xchg
push
jae
pop
adc
insl
sub
adc
jne
jmp
mov
pusha
xchg
dec
outsb
sbb
mov
xor
nop
fs
aam
leave
xchg
arpl
adc
mov
shr
dec
and
sbb
rorb
jo
iret
or
xchg
push
sub
mov
push
mov
mov
xchg
fyl2xp1
insb
mov
mov
or
aaa
enter
and
nop
jae
jmp
std
pop
mov
mov
adc
sub
les
arpl
mov
or
jno
push
in
inc
out
dec
and
pushf
dec
dec
pop
push
xor
or
or
ds
lea
xor
and
lods
arpl
daa
jae
add
sub
mov
push
sub
xor
ror
in
sub
xor
iret
dec
mov
cmpsl
in
xor
or
repz
ret
add
fisubrl
ljmp
mov
scas
pusha
int3
imul
test
sbb
jle
and
dec
mov
pop
mov
pop
add
into
repz
mov
push
jno
idiv
sar
unpckhps
cmpl
dec
lea
sbb
stos
push
scas
xchg
les
adc
inc
ljmp
daa
outsb
or
addr16
std
or
test
dec
shl
fsubl
push
loop
mov
out
or
cs
mov
into
sbb
sub
ret
leave
mov
jne
cmp
sbb
inc
call
cmpsl
ror
outsl
jo
aam
xor
mov
or
pop
enter
jns
mov
popa
mov
pop
ljmp
inc
xchg
push
mov
fisttpll
iret
stos
add
push
aas
imul
inc
pop
and
xchg
movsb
mov
dec
mov
cmp
in
mov
out
lds
insl
loop
sbb
fs
inc
and
loopne
xor
jno
cwtl
lahf
lret
pop
sub
xor
in
call
sbb
ret
dec
dec
aam
mov
jecxz
add
sti
add
mov
jns
mov
sub
fsubl
loope
jge
sub
mov
sbb
rcl
pop
pop
push
fsubp
xchg
in
sbb
sub
push
sub
push
ret
dec
cmp
or
outsb
fwait
out
hlt
inc
or
div
bound
repnz
inc
and
sub
cld
lock
xor
subb
sbb
xor
repnz
clc
cmp
wbinvd
jbe
adc
stos
cmp
movsb
jo
push
movsb
fcompl
xchg
add
enter
aaa
sub
pop
jecxz
pop
insl
cmpl
jle
fcoms
pop
stos
add
or
test
jecxz
push
jne
int3
jl
icebp
mov
scas
or
cltd
sbb
mov
daa
pop
inc
cmp
sub
pusha
popa
push
or
add
pop
fsubp
mov
stos
xchg
dec
stos
lret
fistpl
mov
es
mov
mulb
dec
fwait
lods
aaa
adc
cld
sub
jns
or
es
xchg
cmpl
jb,pn
outsl
ljmp
dec
sbb
bnd
dec
movsl
dec
pop
xchg
fsubl
mov
adc
ss
mov
inc
push
push
icebp
cwtl
sarl
sub
inc
cltd
ja
add
mov
xchg
push
jae
aam
dec
lret
addr16
xorb
movsl
inc
fisttpll
test
inc
ficomps
ljmp
mov
inc
movsb
sahf
inc
into
pop
repnz
dec
mov
cltd
lods
jne
imul
push
lods
inc
add
test
mov
lds
rcrl
dec
pop
mov
mov
push
lret
subl
pop
into
sub
out
loopne
fwait
out
jl
lods
cmp
lahf
call
into
dec
adc
and
aaa
ljmp
loopne
test
leave
cmp
repz
push
test
mov
mov
jns
loopne
adc
scas
or
in
push
test
lret
push
inc
in
inc
inc
repnz
rol
sub
mov
mov
sub
mov
movsb
inc
pop
hlt
imul
xlat
out
arpl
int
xchg
icebp
cmp
addr16
test
pop
pusha
mov
mov
pop
pop
dec
mov
jb
adc
addr16
movsb
fnstenv
andl
lahf
push
test
jle
bound
cli
repnz
mov
cmp
stc
sub
das
and
test
dec
inc
and
sub
and
cltd
xchg
add
xchg
ret
scas
repz
sbb
xor
adc
stc
jle
jmp
xor
sub
cmpsl
push
pop
mov
in
ret
in
xchg
rcl
iret
leave
jmp
xlat
push
lock
rcr
je
jns
sub
and
aas
lahf
cmp
ret
cmp
movsb
or
int3
push
xchg
iret
xor
sbb
cmp
dec
jb
shll
ss
arpl
mov
push
add
or
int
nop
sub
jle
into
jbe
shrb
xchg
stc
adc
mov
or
jae
lcall
call
clc
fisubrl
cmp
or
mov
test
mov
scas
movsl
fildl
sub
or
jae
jle
jb
dec
push
mov
lahf
pop
pop
and
aaa
movsb
inc
xchg
xchg
cmpsl
gs
inc
sahf
xor
push
in
mov
xchg
mov
push
inc
mov
call
push
imul
pop
loop
sbb
aam
mov
add
or
shlb
fidivs
cmpsb
ljmp
iret
jmp
dec
fst
jns
sbb
pop
test
sub
add
addr16
inc
jge
pop
ss
inc
dec
sbb
push
or
stos
add
xor
pushf
lcall
mov
or
xor
pop
push
jnp
push
inc
aas
xchg
xchg
xor
adc
mov
push
push
pop
adcl
rcll
dec
cmp
addl
gs
push
lea
sbb
out
cmp
and
and
mov
dec
mov
jo
inc
ljmp
es
shlb
sub
add
adc
leave
sub
enterw
jne
movsl
js
xchg
xchg
cwtl
dec
scas
mov
sbb
lods
in
mov
rclb
mov
int
and
sbb
sbb
dec
jno
gs
mov
mov
rorl
cmc
rcrl
inc
or
jmp
jge
and
cmpsb
cmpsb
adc
sub
mov
mov
cmpl
ficomps
inc
sbb
clc
xchg
push
or
fsubrl
test
dec
cmp
xor
push
decb
pushf
dec
cltd
aad
es
cld
xor
cs
je
test
xor
test
sub
xor
xchg
xchg
sti
mov
mov
into
add
lds
or
dec
adc
enter
or
mov
fimuls
scas
subb
sbb
push
sub
imul
inc
push
test
push
shlb
stc
ret
into
jmp
cli
adc
scas
in
or
call
jg
das
and
xor
pop
enter
rclb
fdivl
sti
daa
sub
dec
or
jp
shll
sbb
jle
mov
pop
dec
push
nop
popf
inc
jo
mov
dec
push
sbb
add
jg
jle
sub
stos
popf
outsl
mov
adc
movsb
mov
jmp
sbb
sti
dec
pop
rcll
sbb
cmp
pop
adc
push
xlat
cwtl
jg
cmp
arpl
mov
pop
icebp
fs
in
movsl
dec
push
cmpsl
pop
sbb
out
aad
adc
xor
push
adc
or
inc
ret
pop
add
xchg
dec
push
mov
ja
push
xchg
xor
stos
push
aad
cmp
jmp
imul
mov
pop
lret
push
pop
pop
or
test
sbb
mov
mov
push
jmp
mov
insl
jns
pop
aad
or
mov
jmp
adc
in
xor
xor
test
jp
das
mov
je
mov
sub
rorb
rcrl
les
xor
push
xchg
dec
stos
scas
js
jmp
sub
lret
ds
test
daa
push
es
add
js
xchg
aaa
add
sahf
push
stos
je
fcmovne
mov
rolb
iret
lods
push
lods
rcrb
pop
mov
jnp
lahf
dec
and
outsb
fdivrl
add
add
jae
ret
stos
in
lahf
pop
mov
test
mov
fsubl
add
mov
jb
sbb
cmpsb
push
and
jae
mov
mov
inc
outsl
mov
inc
icebp
ljmp
outsb
mov
out
data16
stos
ffreep
mov
pop
inc
mov
inc
xchg
es
mov
mov
rcr
test
inc
mov
and
inc
lcall
inc
imul
jp
pop
jle
hlt
repz
push
mov
add
mov
shrl
adc
shrb
pop
inc
nop
test
mov
mov
cmp
outsb
lahf
call
filds
jb
push
es
out
pop
testl
stc
popaw
and
shl
fdivs
cmp
scas
mov
xchg
sub
sbb
ljmp
mov
dec
jecxz
mov
jns
push
mov
fisubrl
xor
cmp
sub
insl
inc
icebp
xor
adc
out
lea
lcall
mov
xchg
adc
mov
scas
inc
int3
pop
aad
in
shrl
loop
inc
jnp
cmp
dec
pushl
lock
or
int
or
enter
stc
and
adc
rorl
popf
shlb
pushf
out
mov
ss
cmp
dec
sti
or
push
pushf
hlt
cmpsl
stc
fdivs
outsl
rolb
fs
fwait
test
push
out
jbe
fisttpl
in
ljmp
mov
pushf
scas
dec
mov
pop
mov
lods
push
and
sbb
inc
pop
xchg
push
xchg
xor
cld
dec
test
and
aas
pop
mov
popa
repz
icebp
dec
push
mov
test
arpl
pop
fadds
pop
mov
icebp
mov
mov
push
roll
mov
int3
test
in
shrl
inc
inc
int
dec
ffree
xchg
insb
adc
lret
xchg
and
faddp
ret
cmp
movsl
fabs
andb
jo
push
int
pop
call
dec
or
cmc
jl
push
dec
scas
imul
adc
push
mov
movsl
loope
add
mov
jbe
dec
popf
pop
aaa
and
ficompl
adc
cmp
mov
lret
xor
jnp
int3
push
or
push
adc
subl
nop
mov
sub
stc
xlat
in
movsb
xor
in
mov
lret
aad
xchg
sbb
inc
add
fldenv
lahf
push
inc
mov
jo
jnp
aad
notb
daa
xlat
cmpl
aaa
jne
mov
xchg
sbbb
cli
sti
adc
xchg
cmpsb
shrl
in
and
cmp
sbb
or
rcl
mov
push
mov
add
push
cmpsb
adc
ret
push
xchg
add
imul
push
mov
add
je
aaa
imul
inc
lods
and
mov
sbb
mov
ds
adc
lods
rolb
cmc
add
enter
push
add
fwait
cs
inc
test
xchg
push
mov
push
andb
popa
repnz
xchg
sub
jecxz
or
jo
imul
or
push
adc
pop
mov
fidivs
sbb
jge
jmp
pushf
or
fistl
lahf
mov
dec
cmp
xor
addb
sub
fwait
mov
sbb
sub
xchg
mov
mov
sbb
pop
das
sahf
std
jne
pusha
fwait
jl
pop
dec
cmpsb
leave
faddl
popa
ret
ret
inc
scas
or
adcl
stc
mov
fwait
popa
sub
sub
add
in
out
dec
push
dec
sti
jo
add
ljmp
inc
mov
ljmp
out
adc
sbb
lret
push
insb
push
xor
repnz
sahf
xor
ret
sbb
test
div
inc
rcrl
outsb
jg
add
xor
es
test
stc
popa
pop
mov
and
rorb
test
cli
imul
lahf
pop
mov
mov
xchg
out
and
or
leave
inc
cmpb
aam
lcall
sub
jg
and
sub
cs
adc
dec
dec
mov
ret
mov
mov
shlb
lret
jns
or
int
pop
mov
mov
sbbl
rcr
inc
lea
loope
pop
mov
fisubs
jns
pop
and
xchg
push
or
xchg
push
pushl
xchg
cmp
sbb
js
xchg
lock
adc
cmp
clc
mov
add
sub
outsb
lock
lret
dec
int
ja
lock
xchg
sbb
cmpsl
aad
pop
push
cmc
movsb
js
dec
mov
fadds
test
jp
mov
inc
jl
cmc
pusha
negl
sub
idivl
pop
lock
push
cmp
xor
loop
lret
jg
xlat
adc
jecxz
sbb
sub
sbb
sbb
jno
mov
or
in
adc
push
outsb
or
xor
pop
push
push
notb
iret
in
incl
mov
jne
call
push
pop
clc
sub
ss
adc
test
mov
ljmp
dec
sti
push
lods
mov
jl
xor
cli
js
je
xor
or
stos
xchg
mov
mov
popf
lock
insl
and
scas
jno
jnp
stos
sub
sub
int
or
shrb
or
jo
lea
pop
clc
xor
inc
pop
and
and
adc
sub
andl
push
xchg
les
jnp
pop
fbld
xor
jnp
rol
mov
add
in
push
jae
out
xchg
inc
je
or
sbb
fisttpll
call
add
lahf
repz
cmp
sarl
mov
inc
sub
cwtl
cmpsl
lcall
dec
inc
cmp
sub
jne
int3
inc
cmp
inc
pop
push
dec
or
mov
in
roll
dec
jg
cs
imul
inc
int
into
cmpsb
mov
jno
andb
jbe
test
jle
repnz
xchg
fs
sub
and
pop
stos
lcall
cli
ljmp
jbe
dec
xor
sub
cmp
inc
dec
mov
ds
or
xchg
cli
jl
xchg
rolb
fldt
cwtl
pop
add
dec
int3
fidivrl
mov
outsl
inc
mov
lea
mov
cmp
adc
ss
jmp
pop
lret
pushl
pop
sub
das
adc
xor
int
xor
cmp
jnp
push
inc
fmul
push
insl
add
xor
cmp
popf
mov
push
xchg
adc
sub
mov
repz
outsl
push
test
cmp
sub
xor
mov
test
and
jbe
cli
pop
lret
arpl
rcrb
fcomip
repz
imul
jns
cwtl
xor
sbb
xchg
xchg
rol
rorb
xor
jnp
inc
pop
lods
push
stos
jbe
ret
add
dec
xchg
shlw
inc
out
test
jno
lock
loope
adc
mov
shll
xchg
repz
mov
pop
mov
push
jl
daa
pop
cmp
lods
gs
adc
in
hlt
imul
fsubr
movsl
mov
ror
jp
movl
aaa
jge
sbb
out
xchg
loopne
pop
push
call
testb
js
mov
mov
stos
adc
lret
ja
scas
scas
push
push
lret
pop
loop
jmp
jge
and
mov
test
xchg
mov
or
test
pusha
pop
pop
sbb
mov
std
outsb
lcall
stc
fisttpll
jg
xchg
mov
mov
dec
mov
jmp
pushf
clc
push
xchg
xlat
mov
mov
inc
jno
jno
mov
lahf
xor
sbb
mov
mov
push
sar
loop
jecxz
ja
cs
push
mov
jl
leave
fdivr
sbb
mov
out
aad
ja
inc
hlt
test
ret
mulb
addr16
imul
jmp
xchg
insb
fldl
pop
in
pop
sbb
bound
movsl
bsf
cmp
ljmp
jnp
inc
rep
and
mov
sbb
add
and
push
cmp
mov
and
add
jecxz
loopne
rorl
popa
push
sub
push
xchg
pop
inc
push
jmp
inc
addb
mov
mov
mov
or
stc
fildll
jae
mov
in
cmp
push
fisttps
pop
pop
mov
loopne
sbb
add
cmp
mov
int
cs
push
ljmp
inc
popf
dec
inc
jp
mov
push
push
outsb
int3
dec
push
jge
icebp
stos
cmpb
jnp
fdivrs
jge
mov
cmp
addb
mov
shlb
sti
xchg
ss
or
mov
popa
cwtl
mov
enter
test
dec
mov
xor
lods
push
adc
rolb
fists
adc
xchg
cwtl
xchg
inc
jb
mov
or
enter
pop
nop
rol
mov
loope
inc
ja
xchg
inc
mov
xchg
push
adc
movsb
and
xchg
dec
mov
jnp
aas
je
les
jne
shl
fidivrl
xchg
mov
inc
pop
jg
pop
jne
out
imulb
jge
or
test
mov
das
lahf
sbb
cmp
shrl
dec
mov
in
push
orl
push
mov
fs
dec
fldcw
add
fcmovne
shlb
imul
mov
pop
dec
pop
andl
push
sub
cs
test
test
mov
inc
or
cmp
inc
inc
out
call
fistps
jnp
fdivs
adc
sub
and
loope
das
test
out
or
cwtl
out
xchg
sti
fnstenv
clc
mov
push
xchg
insl
sbb
push
push
iret
fidivrl
or
ss
adc
out
mov
xchg
aaa
xchg
nop
mov
mov
scas
mov
jecxz
cld
es
jb
xor
cmp
jno
cmpsl
mov
push
ss
ds
pop
fs
fdivl
loope
push
sbb
loope
gs
cli
in
add
int
jbe
cltd
mov
cltd
loop
or
aas
inc
in
jp
mov
add
idiv
repz
pop
jmp
mov
rorl
stc
sub
cld
xchg
or
adc
xor
lahf
bound
ficoms
in
pop
das
sbb
inc
daa
pushf
xor
sbb
xchg
pop
jns
in
xor
repz
inc
bound
es
iret
cmp
jnp
adc
sbb
xchg
jae
stos
call
jbe
adc
cmc
xchg
adc
daa
add
pop
or
ret
jge
jge
dec
xorb
xchg
call
mov
test
or
stos
out
arpl
mov
out
frstor
popf
sub
sbb
mov
jne
and
mov
out
popa
adc
jecxz
mov
aam
shll
lcall
jle
add
imul
lds
sarl
dec
cmpsl
mov
lock
ficoml
out
popf
scas
pop
add
add
xchg
mov
sbb
lods
cld
idivl
mov
stos
int3
fs
add
sbb
lret
lods
push
test
out
push
je
ret
roll
mov
loope
jl
lahf
push
adcb
pop
inc
shlb
cmp
je
cmp
sub
jmp
in
add
ljmp
outsb
or
inc
scas
aas
jb
int3
jle
inc
flds
xlat
push
adc
adc
popf
ret
xor
cmp
pop
fidivrl
push
dec
pop
dec
add
cld
push
popa
pop
dec
popa
pop
pop
ja
scas
fcmovb
rorl
movsb
mov
xor
xor
xchg
enter
test
out
mov
stos
mov
pop
jle
jno
test
xor
add
sti
jle
cmp
in
es
cmpsb
dec
push
push
inc
stos
scas
or
mov
jle
std
fstl
inc
inc
dec
mov
mov
mov
jge
lds
inc
cmp
iret
dec
in
cli
mov
sub
pop
mov
arpl
xor
sarb
push
jb
push
add
jb
subb
mov
pop
inc
mov
cli
pop
inc
ficomps
clc
in
pop
insl
and
subb
xchg
addl
clc
jo
loop
negb
xchg
sbb
cltd
push
es
enter
pop
sub
mov
pop
dec
sub
sub
rcl
inc
outsb
ret
push
loope
imul
in
cmpsb
xchg
or
cltd
mov
clc
andl
int
mov
cmc
pop
and
mov
ljmp
adc
cmp
mov
push
js
mov
sub
pushl
xchg
jo
pop
inc
outsb
add
ljmp
mov
sub
mull
orl
cmp
loope
mov
push
fwait
xchg
add
push
push
out
inc
mov
mov
inc
stc
or
xchg
bound
test
mov
imul
out
push
add
andb
xlat
dec
lcall
xchg
cmp
rcrl
adc
sub
test
hlt
dec
jle
xor
sbb
mov
repz
xchg
xchg
mov
mov
cmp
xlat
push
jno
push
pop
sahf
pop
jo
and
mov
lods
hlt
es
push
lods
sahf
dec
js
icebp
fistl
outsl
inc
jg
rol
shr
pop
jbe
mov
fildll
and
and
sbb
clc
out
das
aaa
mov
pop
cmp
cmp
xchg
movsb
jbe
inc
pop
jmp
xor
add
lret
and
push
lea
pop
jbe
inc
ja
sub
jb
jp
xor
xchg
repz
xchg
mov
xchg
es
dec
test
xchg
loope
cmc
mov
inc
adc
stc
mov
xchg
jo
adc
cmc
mov
add
jae
outsb
push
xor
mov
aaa
cwtl
jl
xchg
sub
inc
adc
or
ja
mov
test
mov
jne
push
mov
in
insb
addr16
sub
cmp
sub
pop
push
cmc
sub
xor
mov
mov
dec
and
add
and
pusha
pop
mov
push
shlb
and
dec
fs
ret
xlat
movsb
xor
bound
arpl
fwait
aas
clc
dec
xorb
inc
rcl
fwait
mov
mov
scas
movsw
lret
fs
popa
fcoms
out
out
jbe
mov
addr16
mov
mov
sub
jl
cmpsl
fs
out
inc
sbb
out
and
mov
setno
shl
lods
les
push
adc
and
out
arpl
add
inc
test
adc
cmp
test
jecxz
pushf
push
mov
jbe
std
lcall
test
and
add
stos
out
sbb
sbb
outsb
cwtl
in
adc
mov
jge
inc
cltd
cmc
jg
xor
cmpsl
mov
fistpl
mov
xor
jl
dec
inc
cwtl
jl
bound
lret
repnz
repz
arpl
fists
sub
retw
pop
or
xchg
sbb
jbe
mov
add
out
push
lods
out
rclb
push
orl
jno
jl
cmc
pop
xor
jl
fs
loop
adc
adc
or
aad
fcoml
sbb
mov
cli
adc
adc
js
inc
mov
stc
dec
lea
sub
imul
mov
popf
adc
add
sahf
xchg
test
jnp
mov
mov
cmp
sub
inc
aas
or
and
ss
scas
adc
jb
xor
imul
scas
inc
scas
mov
ds
sub
pushf
cmpsl
or
dec
mov
bound
inc
std
and
mov
adc
pop
sbb
shll
fstpl
fdivs
lcall
inc
push
and
test
xchg
lcall
aaa
adc
stos
xor
ljmp
jne
ss
mov
jo
in
cld
addl
fstps
jle
push
jae
ljmp
fs
jmp
mov
std
lods
fldcw
jae
dec
cmp
ret
popa
sub
push
faddp
mov
mov
push
icebp
std
cs
aam
movsb
push
orl
inc
cs
mov
cmp
in
cmpb
popf
out
minps
sub
push
es
sub
mov
dec
in
mov
inc
jne
adc
ror
mov
and
outsl
lods
push
lods
cmp
out
mov
xchg
pop
add
xchg
sbb
adc
sbb
imul
sbb
or
add
jbe
mov
add
mov
lea
enter
sub
out
test
shrb
or
mov
and
push
aas
add
fcompl
inc
dec
adc
cmpsb
dec
sbb
mov
sub
jmp
xor
fwait
cwtl
pop
inc
ret
cld
xchg
xchg
fdivrs
fsubl
hlt
mov
pop
push
int3
clc
addl
or
jmp
pop
mov
outsb
mov
daa
push
xor
int3
sahf
xor
cmp
fiadds
fs
sahf
neg
jle
repnz
push
lea
mov
and
mov
mov
lahf
cs
xor
pop
cs
mov
test
dec
add
fistpll
xlat
sahf
xchg
cmp
xchg
mov
fldcw
outsb
data16
mov
fmulp
inc
or
inc
int
jbe
pop
repz
je
movsb
aaa
lods
adc
repz
mov
shlb
and
push
gs
jae
cltd
aam
pop
add
shrb
lcall
jne
loopne
xor
pop
pop
fisubs
and
mov
push
push
push
lret
sahf
add
add
fs
lods
fstpt
es
jmp
pop
js
push
pop
in
in
sub
adc
xor
cmp
int3
push
ror
int
sub
mov
loope
mov
jecxz
dec
lret
lock
sbb
mov
sbb
pop
out
sub
ja
test
leave
sub
movsb
add
adc
cmp
jecxz
add
ret
stc
pop
xchg
jno
hlt
xor
pop
xchg
inc
icebp
push
xorb
aas
add
jae
pop
sti
sbb
iret
cmp
push
jno
insb
add
cmpsb
mov
pop
push
data16
mov
jmp
rorb
ljmp
call
jle
movsl
jno
jecxz,pt
shrl
dec
fcoms
mov
sbb
rcrl
pop
sub
nop
aad
add
aam
lods
mov
inc
jns
jae
into
out
xor
mov
inc
adc
inc
je
std
xchg
cmp
cmp
mov
add
adc
sub
jmp
pop
xchg
stos
pusha
out
pop
mov
in
lds
in
jnp
rorb
les
shr
pop
xor
stc
sub
cmpb
jae
push
cltd
ds
pop
sub
mov
ffree
jbe
inc
or
imul
out
loope
pop
mov
mov
scas
test
cmp
sub
mov
insb
jmp
push
add
aas
xor
and
push
testb
stc
cmpsb
xor
xor
fldt
mov
arpl
push
jmp
cwtl
sub
xor
icebp
pop
xchg
mov
push
jecxz
insl
imul
jp
ljmp
mov
cli
cltd
jae
loop
sub
rorb
adc
pop
arpl
inc
mull
rcl
out
inc
call
xchg
or
imul
stc
push
pop
fucom
xor
jle
jno
dec
xor
pop
clc
mov
mov
es
test
sbb
xchg
sbb
mov
negl
repnz
je
icebp
cld
movsb
dec
xchg
jno
xchg
and
push
inc
arpl
and
and
mov
mov
push
cmp
test
mov
push
pop
jne
adc
and
in
adc
lret
pop
jns
test
xor
jne
lret
idivb
dec
xor
xor
insb
ss
mov
int3
fcmovne
sbb
aad
jb
std
pop
sarl
and
mov
jg
inc
pop
push
fisttpl
or
push
lcall
mov
or
mov
mov
pop
pop
pop
mov
xchg
aas
jnp
insl
jbe
cld
bound
imul
les
pop
push
push
sub
inc
jg
sbb
jmp
dec
xchg
push
adcb
jae
enter
test
into
push
ja
lock
ret
jbe
cmp
subb
and
andl
std
xor
jno
andb
cmp
das
ljmp
xchg
movsb
pusha
adc
mov
mov
scas
mov
test
add
or
repz
push
sarl
icebp
mov
xchg
add
sub
jge
add
and
movsb
das
lods
sbb
je
mov
imul
xchg
add
cmpsl
inc
add
rcrl
es
scas
or
popa
pushl
add
sti
lar
jns
stc
jno
adc
fldcw
je
sbb
and
inc
stos
and
fsts
test
sbb
mov
insl
push
cmp
aaa
pop
jnp
or
xchg
stc
adc
xor
mov
add
xchg
jnp
lods
sub
shlb
or
popf
pop
movsb
sbb
test
sub
lcall
loope
ljmp
js
sbb
int3
iret
insb
jo
stos
jnp
mov
ret
mov
push
outsl
ss
idiv
lods
push
fnstenv
add
adcb
cmc
adc
in
push
outsl
dec
xchg
cltd
in
data16
scas
mov
inc
mov
and
test
sbbl
mov
xorb
insl
pop
repz
sub
adc
fstl
push
xchg
dec
dec
jg
fiadds
stos
adc
mov
cmpsb
lods
mov
test
jb
mov
inc
popf
or
jnp
jne
pop
popa
adc
cltd
sbb
pop
mov
mov
cmc
push
push
cli
cmc
inc
lds
jmp
push
int3
shlb
cmp
sub
pusha
repnz
ret
jge
lret
inc
es
testl
lret
mov
rorb
sub
or
jge
in
cmpsb
add
iret
test
loope
mov
fsubs
xor
shr
jge
sub
inc
stos
aas
scas
mov
jb
sarb
rorl
loope
jecxz
sbb
out
in
jb
andb
mov
or
mov
adc
jge
jge
pop
cmp
mov
adc
vmovdqu64
pop
mov
push
nop
jb
fdivrl
into
adc
loope
lods
mov
jno
sti
mov
adc
jmp
je
or
popf
cwtl
daa
push
inc
fs
lods
cwtl
cli
in
jp
popa
add
adc
cli
cld
dec
in
xchg
sub
mov
adc
out
bound
imulb
rolb
fcmove
jbe
push
add
nop
pop
cltd
mov
out
popa
mov
mov
adc
jl
mov
jb
push
xchg
lcall
cmp
jno
int
rolb
in
insl
dec
inc
cmc
push
test
mov
mov
insb
add
jno
pop
or
insb
xchg
sub
mov
icebp
jecxz
jp
in
lret
dec
in
mov
and
rcrl
loope
in
dec
pop
std
testb
or
iret
cmp
shlb
xchg
daa
mov
adc
push
addr16
out
shll
xchg
cs
cli
mov
adc
cwtl
insb
pop
je
cmp
pusha
dec
out
xor
gs
sahf
sbb
cwtl
jmp
fistps
push
pop
das
outsb
repz
rcrl
and
pop
fwait
sub
sbb
lds
push
sub
cmp
outsl
sub
dec
xor
stc
je
push
sahf
test
jns
outsb
and
xlat
dec
mov
fcoml
int
lret
loope
test
stc
pop
sbb
inc
sbb
cmp
push
adcb
shlb
adc
jo
fwait
mov
mov
fs
vpcomd
arpl
ds
mov
push
gs
mov
push
push
or
stc
orl
jecxz
fildll
lea
das
and
lcall
add
inc
inc
or
push
jge
or
mov
cmpsb
dec
loopne
repz
mov
push
cmp
mov
xor
dec
pusha
das
mov
lds
push
add
mov
shll
mov
inc
popf
cmp
dec
inc
or
enter
in
scas
inc
pop
negb
sub
imul
push
adc
add
shlb
daa
outsb
es
les
sti
add
push
push
pop
push
inc
mov
mov
fidivrl
icebp
dec
mov
add
add
shll
dec
cwtl
jmp
jle
std
aas
push
test
int
adc
js
cmp
aam
loop
jl
mull
cmp
push
cmp
fsubl
shl
movsb
dec
jmp
aam
xor
xlat
add
dec
inc
lret
sub
fwait
xor
push
fisttpll
and
arpl
cwtl
scas
lret
xor
push
pop
lods
xor
push
inc
lret
andb
fistpl
jecxz
dec
out
dec
jnp
cwtl
mov
test
aaa
push
or
sub
jne
shll
dec
mov
adc
adc
jg
jns
pop
pushf
ds
jmp
lea
repnz
loope
test
adc
mov
jg
sahf
into
pop
push
or
rol
cmpsl
leave
mov
inc
cwtl
repz
mov
mov
push
adc
or
pop
fucomip
jp
in
pop
mov
adc
mov
mov
into
mov
cmp
lret
into
jl
cmp
push
inc
data16
cmpsb
jl
es
pop
cmp
fcmovnb
lahf
scas
insb
or
push
push
push
subl
lcall
lret
mov
test
mov
mov
jo
sbb
mov
pushf
or
loop
cmpsl
cmpsl
xchg
psubusw
inc
mov
mov
insl
es
rorl
pop
sbb
sub
and
aas
aad
inc
mov
or
or
push
push
cmp
pop
xor
jmp
icebp
xor
xor
outsb
mov
mov
mov
rclb
adc
test
int
hlt
sub
ds
add
adc
sub
inc
ret
or
in
xchg
test
mov
xchg
ficomps
jns
jge
stos
mov
push
imul
mov
fidivs
jns
cmp
sub
shll
jae
mov
ljmp
aam
cmc
imulb
or
mov
adc
dec
repz
sbb
jo
xchg
filds
mov
aam
push
xchg
mov
fwait
xchg
ror
stos
adc
cmp
xchg
cs
mov
cmp
inc
lods
cmp
xor
mov
in
jecxz
mov
jmp
js
lods
fldcw
addr16
imul
pop
pusha
test
inc
and
out
insb
inc
fwait
leave
nop
jmp
mov
lahf
int3
lock
int
aas
sub
les
lock
sarb
stos
repnz
mov
jno
mov
mov
das
or
loope
imul
std
push
pop
inc
and
repnz
fdivl
xchg
adc
cmpsb
push
sahf
inc
sub
inc
pop
loopne
scas
jno
or
clc
xlat
xchg
dec
in
pop
hlt
push
cmp
popf
xchg
adc
sbb
insb
pop
jle
jecxz
pop
cmp
fistps
pop
mulb
push
pop
push
mov
and
and
andl
or
js
scas
jle
dec
jnp
dec
mov
outsl
mov
ljmp
std
movb
addb
sarl
pop
imul
cmp
dec
xchg
sbb
xchg
insb
mov
mov
inc
xchg
mov
loop
jmp
adc
and
enter
push
pushf
enter
mov
adc
push
or
adc
fstpl
repz
xor
xor
not
out
popf
or
fimull
incb
ljmp
out
andb
repnz
ss
lods
outsl
jl
xchg
int
or
cli
leave
mov
lods
jo
into
mov
gs
xchg
lret
push
mov
jb
ja
les
sbb
jg
mov
or
ret
cs
push
inc
gs
add
insb
arpl
sbb
adc
push
leave
and
pop
rcl
daa
lds
sub
sarl
lock
mov
sti
or
jo
pop
scas
mov
inc
shrl
ret
xor
pop
in
add
xchg
xchg
add
jb
xchg
sub
icebp
mov
sub
adc
pop
dec
jo
repz
xor
imul
mov
adc
sub
cmp
popf
adc
inc
jl
adc
or
push
inc
test
push
xor
idivb
or
movntq
loopne
in
adc
bound
fmuls
int
mov
gs
call
sbb
push
ss
clc
and
iret
scas
ret
mov
in
cmp
inc
loopne
out
jle
or
xchg
fcoml
cmp
fisttpll
lret
mov
ret
loopne
outsb
mov
repz
dec
push
push
sbb
in
push
movsl
bound
dec
xchg
cmp
lods
jl
movsb
cmp
jp
mov
insb
icebp
sub
lods
xorb
adc
outsb
subb
daa
cmpsl
cmp
in
in
fldl
xchg
andl
inc
repz
cs
cmpsl
bound
or
mov
sbb
pop
push
lret
arpl
mov
aam
push
dec
retw
sbb
scas
or
stos
xchg
jg
adcb
ss
adc
stos
and
lock
push
cmc
pop
push
dec
sbb
cmpsb
jbe
xchg
cwtl
out
lret
mov
add
sbb
fidivs
sub
xor
inc
popf
cmp
outsb
outsl
int3
pop
sub
repz
std
push
mov
jnp
jne
mov
or
sub
mov
pop
or
ja
fwait
sub
shll
xor
sub
jbe
lock
pop
push
xchg
cmp
mov
popf
pop
ss
jmp
enter
cltd
shr
add
xchg
and
ja
fidivs
ret
mov
pop
jnp
cmp
add
popl
lods
movsb
ret
mov
mov
ficoml
mov
imul
mov
bnd
jns
mov
scas
shll
sub
sub
mov
add
mov
mov
dec
xor
out
aam
cwtl
mov
adc
adc
out
jl
in
imul
jnp
pop
loop
dec
mov
pop
insl
je
lods
sbb
lret
sbb
push
fistps
cmpsb
scas
iret
sub
mov
sub
jbe
jno
jbe
or
lahf
sub
sbb
fs
js
pop
jns
cld
cld
pushf
mov
mov
sbb
and
pop
mov
mov
xor
dec
mov
adcb
sti
dec
fldcw
push
fstps
mov
inc
ret
es
decl
imul
shll
mov
inc
inc
mov
mov
popf
rol
jnp
pop
cmp
xlat
or
into
lcall
fstl
or
cmp
pop
mov
xor
cwtl
push
jae
js
mov
sbb
mov
data16
imul
fsubrs
sub
or
cmp
pop
jns
cwtl
push
sub
adc
je
cmpsb
mov
push
lret
lret
call
inc
outsl
stc
mov
clflush
call
repnz
jno
dec
mov
pop
sub
loop
das
pop
jge
mov
pushf
or
pop
dec
inc
push
dec
pop
sbb
mov
and
and
repnz
and
lret
icebp
in
add
das
sbb
jae
cmc
outsl
sub
js
jb
stc
js
negb
add
repz
aas
mov
int
xor
inc
mov
stc
out
jl
lret
mov
xor
inc
loop
pusha
dec
loope
inc
mov
outsb
std
repnz
jb
and
testb
inc
insl
push
or
push
test
or
inc
adc
xchg
xor
add
in
rorb
add
add
sahf
lahf
xor
rcrl
dec
mov
fs
or
mov
dec
hlt
cmp
popa
enter
ret
cmc
cmp
ja
sbb
xchg
hlt
sub
ljmp
fsubrs
sub
add
lcall
cmp
imul
sbb
les
xchg
mov
push
push
dec
cmp
aaa
and
mov
je
insb
je
pop
pop
pop
adc
shrl
mov
xor
mov
je
cmp
gs
pop
int3
in
mov
xchg
dec
add
fs
xor
add
xorb
inc
cmp
sahf
std
push
xlat
adc
pop
cld
add
loop
mov
mov
out
es
loopne
jmp
and
nop
pop
dec
sbb
or
mov
lcall
jge
jl
je
out
adc
dec
add
mov
cli
mov
fadd
outsb
imul
jp
add
lds
mov
pushf
sub
hlt
mov
sub
loopne
push
xor
xor
in
ds
repz
fld
cmp
stos
push
inc
fdiv
cs
and
xor
jl
stos
mov
mov
data16
adc
sti
mov
int3
arpl
scas
jnp
push
shr
xchg
leave
xchg
fucomip
out
repnz
sub
mov
jb
mov
movsb
inc
jae
gs
aas
jp
xlat
mov
xor
cltd
mov
gs
mull
rcrb
test
add
out
sbb
hlt
pushf
xchg
add
mov
xor
stos
push
ret
repnz
mov
fsts
add
mov
xchg
in
jle
inc
add
adc
inc
lret
jl
fnstenv
push
sub
filds
lret
or
lds
into
dec
adc
jmp
ljmp
or
cltd
xor
adc
mov
jl
adc
pop
das
into
lret
pop
fcoml
inc
and
xor
test
inc
xor
mov
fldt
out
jb
pop
add
jle
rolb
test
mov
xchg
scas
jp
dec
aas
ljmp
sub
adc
push
icebp
push
cmp
ret
push
xchg
les
outsl
push
mov
xchg
loope
sub
movsb
cwtl
icebp
fisubs
mov
push
mov
std
mov
xchg
imul
mov
push
sub
stos
hlt
insb
mov
clc
cmpsl
lea
addl
fadd
mov
sbb
pop
or
jo
lret
out
xchg
cmp
sub
or
push
and
daa
mov
aam
lds
push
test
in
pop
shlb
sub
mov
xchg
cbtw
mov
scas
inc
sarb
imul
ss
lret
in
imul
pop
jmp
lret
dec
jnp
pop
stos
xchg
mov
mov
pusha
lds
dec
leave
pop
xchg
cmp
xchg
mov
aas
aaa
leave
out
or
fcoms
sbb
or
add
in
shlb
jae
repz
or
push
jle
add
clc
iret
test
std
outsb
lea
jp
lret
pop
or
in
xor
stos
add
lods
insl
push
pop
push
mov
daa
iret
xchg
sahf
call
sbb
aas
add
in
or
ljmp
mov
dec
xor
mov
stos
int3
sub
ds
inc
lods
jl
xchg
aad
fisubs
or
movl
aam
cmp
inc
xor
push
insl
dec
dec
aam
pop
rcrl
aaa
js
pop
pop
pop
sbb
test
sbbl
xchg
into
and
or
xor
jns
adc
pop
loop
jb
lret
xor
call
lret
dec
daa
xor
xchg
inc
outsb
popf
daa
jbe
fs
and
xor
loopne
mov
add
pop
xchg
xchg
jnp
test
dec
scas
insl
adc
or
lods
dec
lods
pop
jge,pt
add
jno
loope
mov
mov
sbb
out
push
mov
inc
or
mov
popf
and
loopne
cmp
cmpsb
mov
fsubrs
jae
test
xchg
idivl
pop
xchg
cmp
inc
inc
lods
cltd
add
add
pop
pop
ds
nop
aam
jmp
pop
add
mov
cwtl
mov
testb
lock
and
stos
dec
test
jae
aam
adc
es
lock
lods
xchg
or
div
pop
out
imul
sbb
fldcw
popf
imul
inc
shr
mov
subb
or
notl
xchg
xchg
jecxz
pusha
and
adc
inc
jge
mov
xor
xchg
inc
xchg
and
push
xor
xor
sbb
and
cbtw
push
cli
sub
mov
jmp
cmp
fisttpll
add
mov
push
data16
repz
xor
call
add
popa
push
xchg
cmp
inc
mov
mov
or
and
lret
sti
pop
cmp
lcall
inc
inc
cmpsb
test
stos
stc
xor
pop
inc
adcb
add
test
push
shrl
scas
aaa
push
bound
aad
movsb
inc
xchg
arpl
cmc
icebp
mov
sbb
test
pop
insw
inc
sub
cs
mov
inc
and
push
outsb
inc
ja
xor
push
and
and
out
jmp
or
jg
adc
mov
dec
xchg
or
call
popf
in
imul
xchg
dec
dec
xchg
cmp
cs
xor
xchg
lea
test
adc
ja
mov
rcrb
shrl
cmp
fiaddl
pop
scas
stos
jmp
pop
jl
pop
xor
cli
and
adc
int
sub
subl
out
dec
rcll
cmp
lods
push
lock
cmp
mov
mov
out
pop
rcrb
add
mov
call
add
idiv
or
xchg
mov
sub
clc
add
pop
dec
sbb
sbb
movsb
or
mov
fnstcw
loope
pusha
lret
pop
daa
pop
gs
xchg
pop
mov
clc
sbb
jecxz
jecxz
add
push
fsubs
push
mov
psrad
xchg
cmp
push
adc
test
push
adcl
or
adc
pop
loope
and
mov
loopne
and
repz
xor
push
xor
xchg
xchg
mov
pushf
pop
adc
xor
sbb
mov
mov
pop
push
clc
out
xchg
insl
fldt
iret
cmp
popa
jo
std
sub
sub
cli
loope
add
xchg
mov
pop
mov
push
adc
or
mov
test
enter
ds
lahf
sahf
xchg
mov
test
jne
ret
jl
mov
sbb
int
cmpsb
mov
ljmp
clc
ret
popf
pop
cmp
or
pop
gs
nop
dec
es
xchg
pop
repnz
addl
add
push
pop
lcall
sbb
divb
cmpsb
fucomip
mov
dec
push
cmp
pop
hlt
xchg
mov
addb
xchg
test
in
mov
lahf
adc
je
xchg
cmp
inc
jg
imul
pop
sbb
add
divl
pusha
pop
push
shrb
or
sarl
repz
pop
dec
aaa
jp
out
dec
test
inc
sbb
outsl
imul
add
adc
hlt
cmpsb
xor
mov
fs
cmp
out
shrl
xorb
xor
repz
icebp
int3
jne
fwait
mov
pop
mov
and
int
pop
cli
jmp
test
imul
stos
test
call
sub
lahf
out
or
dec
or
incb
adc
xchg
xchg
sahf
pop
lahf
inc
dec
and
adc
xor
jl
xchg
call
mov
out
clc
push
dec
or
mov
or
fwait
mov
fxtract
add
adc
lahf
sti
mov
scas
mov
xchg
sub
mov
cs
je
or
and
sahf
cmpsb
out
cmp
scas
ficoms
sbb
ljmp
fucom
pop
imulb
and
fsubrl
jo
push
sti
inc
mov
imul
xor
arpl
ret
mov
dec
lret
aam
mov
or
mov
aas
cld
mov
sahf
push
lods
cld
in
je
xor
xor
pop
or
cmp
cmc
fbld
insl
sub
xor
mov
roll
nop
mov
add
data16
ja
movsl
cmp
adc
dec
in
cmc
loopne
mov
or
add
and
cmpsb
sbb
aas
mov
sti
mov
cmp
pop
cmpsb
jnp
lock
push
and
lcall
mov
sti
pop
or
cmpsl
pop
in
mov
sub
in
and
aam
xor
push
or
je
mov
negb
push
outsb
call
xor
frstor
sub
xchg
mov
dec
sub
cmp
fwait
dec
add
sbb
cmp
mov
jecxz
inc
stos
popa
pop
in
sub
push
dec
mov
mov
lds
rcr
in
repz
push
pandn
inc
addr16
sbb
mov
ds
ljmp
jmp
out
add
or
sar
push
popf
stc
rcrl
or
cmp
dec
insb
lcall
xchg
xlat
lcall
mov
fisttpl
pop
repz
fdivrp
fadd
fistpll
arpl
es
sub
js
mov
loop
sub
mov
shlb
ficompl
dec
das
mov
pop
push
loop
pmulhw
xor
and
mov
jo
sbb
xchg
pushf
jno
mov
nop
push
xchg
and
gs
push
cmpsb
xchg
lcall
mov
aaa
push
cmp
in
add
popa
ret
ja
fildl
cli
repnz
test
jle
mov
frstor
push
nop
sbb
lcall
push
pop
adc
xlat
and
mov
icebp
pusha
xchg
or
sbb
xchg
or
outsb
xchg
loopne
jo
sub
out
cmp
out
mov
aas
leave
dec
inc
imul
into
jo
dec
cmc
lods
subb
iret
mov
cltd
in
fs
inc
jo
aaa
popa
scas
xor
dec
ljmp
nop
xchg
ljmp
call
lret
jo
pop
mov
dec
cmpsl
cmp
mov
cmpb
cmp
pop
lahf
xchg
xchg
aad
or
cmp
arpl
add
gs
in
sbb
push
pushf
jge
mov
call
sub
shlb
lock
int
rcrb
int3
cmpsb
push
imul
push
add
xchg
xor
loop
jbe
test
mov
int
pop
sub
andps
shr
cwtl
dec
cmc
sbb
push
add
add
or
ss
jb
dec
mov
xor
aad
mov
adc
dec
push
mov
mov
xlat
mov
push
das
jb
xchg
jl
pop
fs
mov
xchg
xor
xor
sbb
scas
int
jno
out
sbb
or
out
sbb
lea
lock
pop
sbb
mov
je
aad
scas
out
mov
fidivs
jno
jmp
add
popa
cmp
movsl
pop
push
mov
lret
push
mov
ret
icebp
popf
push
loop
push
jmp
leave
mov
rcll
shl
jne
stos
adc
js
inc
sbb
imul
jnp
stos
xchg
insb
xchg
sti
leave
jp
test
out
loopne
clc
pop
xchg
mov
pop
jecxz
cmc
sub
jg
jne
sti
enter
jae
in
movsb
and
push
mov
dec
pop
cmp
shll
cmpb
pop
cmp
sub
dec
jbe
cmp
mov
cmp
ljmp
mov
jno
jle
fidivs
mov
add
sbb
sbb
pop
sub
push
mov
inc
pop
sahf
jp
shlb
imul
nop
sbb
js
push
cmp
scas
iret
add
out
mov
inc
dec
jo
push
add
dec
push
mov
cmc
dec
and
das
aas
mov
hlt
out
and
out
mov
fidivl
je
push
xlat
adc
and
xchg
add
jne
jecxz
add
push
cmp
leave
xor
sub
mov
bnd
repz
test
dec
sbb
mov
push
adc
xor
xor
nop
negb
mov
fstpl
fcoms
xchg
sub
or
jne
jg
loop
jp
aam
jmp
cmp
std
loop
or
jns
int3
dec
push
mov
sub
lds
jo
out
jmp
iret
mov
dec
faddp
mov
movsb
shlb
pusha
mov
xor
or
icebp
cwtl
and
rolb
xchg
inc
jbe
out
cmp
jb
lods
arpl
mov
insb
add
lds
mov
push
sbb
cwtl
mov
ss
jb
test
orl
mov
add
adcl
adc
push
popl
pop
out
cs
adc
xor
outsl
push
dec
das
fisubl
stos
cli
jns
test
loope
pusha
add
aas
sub
add
orb
inc
mov
cmp
xchg
cmp
xlat
push
call
push
inc
and
sbb
push
clc
enter
fwait
push
pusha
jbe
pop
outsb
sarl
sbb
leave
sbb
cmp
ret
and
adc
fwait
nop
je
xchg
adc
scas
pop
mov
xor
test
shr
xor
fxch
out
cwtl
pop
repnz
mov
sub
lock
test
divl
rcr
sub
jbe
lock
pop
xchg
cmp
jno
mov
ret
dec
pop
adc
out
dec
movsb
jl
mov
push
jl
jmp
pop
mov
dec
filds
push
mov
pushf
enter
es
mov
jno
jmp
mov
and
cmc
mov
mov
ja
fwait
lods
outsl
cli
cli
and
push
xchg
cmpsl
inc
xor
cltd
pop
shll
test
pop
andb
pop
push
jb
cwtl
pop
sbb
sub
mov
pop
sub
and
inc
call
test
inc
cmpb
adc
and
pop
cli
addb
cmpsl
sub
test
shrb
push
mov
sub
cwtl
cmp
cmc
mov
movsb
dec
loop
mov
loope
scas
pop
pop
in
add
cmpsb
push
daa
mov
jo
rcrb
daa
adcb
fucom
mov
insb
xbegin
pop
push
cmp
mov
fcmovnb
nop
push
jmp
popa
pop
dec
or
ficoms
cld
pop
sbb
inc
stc
jbe
cmp
leave
push
aam
enter
push
scas
sahf
adc
fsts
filds
sub
into
call
ja
aaa
fucomp
push
mov
dec
mov
test
push
dec
xchg
jg
aaa
scas
stos
push
and
inc
lahf
popf
jo
fidivl
jge
xchg
pop
add
adc
jo
test
mov
out
ds
cli
add
jl
stos
rcrb
xor
scas
aas
wbinvd
dec
jmp
jae
cld
jbe
sub
add
ret
cmp
push
add
and
out
mov
xor
mov
das
xchg
xchg
mov
sub
ret
aad
mov
out
cwtl
shrl
test
inc
dec
sub
mov
rorb
sub
mov
cltd
fistpl
popf
loopne
sti
dec
loop
das
fnstenv
adc
mov
sub
pop
maskmovq
and
int
sbb
cmpb
bound
cmpsb
and
imul
out
lock
into
xchg
cmp
scas
xchg
call
cmpsb
mov
lds
mov
decb
scas
sbb
and
push
ror
push
stos
add
shrb
mov
jl
pop
mov
leave
mov
das
dec
cltd
inc
pop
pop
aam
lcall
mov
dec
add
inc
lods
sub
sub
inc
push
xchg
fbstp
aam
adcl
decl
mov
push
lods
xlat
lret
in
mov
xchg
cs
nop
cmpb
xchg
loope
lods
add
dec
jb
mov
and
jbe
xchg
stos
adc
fildll
fcomi
sahf
lcall
imul
pop
sarl
ret
ja
dec
movsb
add
test
movups
subl
push
mov
or
test
dec
mov
cltd
les
rolb
jns
sub
stos
ret
loop
push
jl
out
inc
mov
negl
xchg
call
scas
scas
loop
scas
mov
lock
mov
jp
push
lcall
lahf
xchg
add
push
cld
popa
mov
jg
and
data16
aam
cwtl
pusha
es
sahf
xchg
mov
fisttps
dec
xor
lret
push
and
fdecstp
pop
orb
xor
stos
es
setns
mov
aas
je
in
sbb
push
ret
mov
mov
push
ret
fstpl
mov
iret
test
cmpsb
mov
add
in
inc
movsl
nop
out
xchg
notb
movsl
cmpsb
xor
cs
mov
fbstp
into
xlat
test
ds
pop
imul
push
push
loop
pop
lods
and
mov
into
insb
lret
cmpsl
clc
stos
scas
ja
inc
adc
aaa
aam
or
add
gs
sub
shll
gs
insb
enter
sahf
aas
nop
mov
out
inc
js
mov
mov
xchg
jecxz
cwtl
je
lods
mov
lret
bound
mov
push
aad
in
push
mov
mov
in
sbb
adc
lock
cmpsb
or
jecxz
dec
aad
cmp
scas
in
jl
sti
and
bound
inc
data16
sub
or
cld
cmp
rorb
inc
jbe
or
adc
cmpsb
test
add
nop
inc
int3
sbb
enter
aas
test
sar
jmp
xor
stos
add
push
pusha
jl
jp
mov
add
fs
push
iret
cmp
mov
clc
mov
cmpsb
xor
mov
imul
fcoms
jmp
ja
ljmp
xchg
and
shrl
stc
xor
daa
aas
dec
fucom
mov
sub
mov
add
test
sub
sbb
xchg
es
pop
lret
pop
pop
jmp
mov
shlb
mov
das
mov
mov
movsl
or
lods
and
or
lods
lret
cmp
jb
or
addr16
jo
xrelease
inc
imul
test
test
lret
sub
pusha
leave
bnd
adc
bound
mov
fwait
lret
add
leave
arpl
out
dec
push
pusha
mov
adc
loope
movsb
add
mov
mov
pop
fcom
pop
popa
subb
shll
cmp
xor
lods
cli
mov
clc
jge
cmp
dec
cmp
mov
test
push
stc
cld
add
call
xchg
jg
cmpsl
pop
les
movsb
fdivrl
dec
sbb
mov
or
rolb
popa
mov
mov
jg
inc
adc
xchg
fnstsw
mov
daa
xchg
gs
mov
addl
jne
cmc
pop
sub
push
lcall
leave
cmpsl
stos
mov
ljmp
cmp
push
mov
leave
lods
stos
rcll
add
cmp
js
jle
sbb
adc
sbb
push
and
adc
fwait
cmp
cmpb
cmp
jb
cmp
in
dec
jmp
rclb
mov
sub
xor
or
sbb
push
jmp
add
dec
pop
adc
adc
xchg
int3
jnp
mov
lea
imul
xchg
pop
xchg
jecxz
call
mov
pop
jnp
xchg
in
in
adc
std
ret
and
jno
mov
insb
push
cmc
mov
xchg
shll
fwait
out
daa
insl
ds
adc
jno
push
ja
fldt
cmp
add
ret
popf
sti
jb
sbb
arpl
inc
push
dec
aad
xchg
xchg
mov
mov
mov
test
xchg
hlt
xchg
test
cld
push
sbb
out
mov
in
negb
fwait
sbb
push
push
loopne
fmulp
add
ss
movsl
xchg
xor
mov
pop
jp
jg
jle
mov
push
lock
enter
push
pop
aam
rcr
mov
ljmp
lea
mov
popf
sub
mov
jp
out
je
out
inc
insb
aas
ds
or
pop
xchg
jns
cmp
outsb
loope
mov
daa
jmp
xchg
fistpl
fcomps
test
or
mov
xchg
stos
add
mov
sbb
mov
loope
xor
cmp
ds
data16
lcall
leave
mov
fcmove
sbb
push
sbb
testl
stos
lahf
add
and
in
cmpl
jae
loop
adc
adc
insb
insl
mov
pop
dec
push
or
loopne
or
push
pop
adc
jmp
pop
sbb
int
dec
call
or
push
clc
icebp
push
dec
cmpsl
mov
sbb
fcoml
push
jo
jae
jl
cmp
xor
adc
popa
or
cmp
ret
movsl
andps
mov
sbb
bound
and
xorb
push
fwait
jb
daa
mov
and
repnz
sub
rcll
mov
fcomps
ret
nop
daa
pop
xchg
hlt
mov
or
mov
out
sub
jle
xor
stc
push
gs
ljmp
push
mov
adc
cmc
aam
mov
and
jg
jmp
daa
and
test
call
push
dec
mov
sahf
dec
and
aaa
fcomip
mov
lods
dec
sti
cmp
dec
cmc
xor
sbb
sbb
outsl
sub
lea
clc
mov
rclb
fistpl
aad
sbb
push
jecxz
inc
add
cmp
test
add
sub
popl
stc
or
sbb
fcomps
cli
enter
mov
push
xor
scas
int3
mov
icebp
aam
jo
sbb
push
andb
add
cmp
jae
mov
pop
icebp
dec
add
imulb
repz
ss
cli
adc
cmp
fisttpl
xor
pop
mov
inc
jmp
ret
push
out
sti
sbb
push
fldenv
mov
or
xlat
xchg
pop
and
or
int
flds
mov
sahf
dec
dec
pushf
mov
mov
loop
xchg
adc
addr16
inc
lods
shll
cmp
fisubs
movsl
sub
push
sub
push
and
rcll
pop
sbb
mov
jl
popa
push
and
dec
push
mov
stos
test
clc
into
mov
int
sbb
add
mov
sahf
xchg
fs
fistpl
lock
call
mov
jno
adc
lret
jbe
in
je
jb
nop
xlat
adc
sahf
and
adc
ss
imulb
idiv
sahf
jne
pop
scas
mov
sbbb
out
mov
jmp
mov
cmp
popa
mov
mov
sahf
icebp
mov
add
cs
inc
ljmp
dec
pop
xor
mov
int3
scas
mov
lea
mov
xchg
lret
push
adc
xchg
loopne
shl
bound
ret
cmp
lcall
pop
sub
shlb
xor
faddl
sbb
pop
movsl
mov
xchg
lods
fidivrs
idivb
and
clc
push
rcrb
sub
popf
test
mov
jle
loop
mov
inc
das
shld
out
and
or
outsb
jge
xchg
test
lahf
popf
push
xchg
xor
mov
dec
pop
pop
test
adcb
stos
arpl
rorb
int3
xchg
xor
or
or
sub
mov
xchg
inc
mov
jne
pusha
jb
and
rcrl
ja
leave
movsl
bound
sub
xchg
mov
xor
mov
std
mov
shlb
adc
lds
inc
pop
out
dec
jl
loopne
inc
lea
xchg
or
and
test
sub
les
lds
sbb
adc
mov
add
mov
push
jecxz
int
je
lret
icebp
mov
in
mov
or
and
xor
sbb
push
jns
lds
lds
pop
out
mov
adc
jo
cltd
out
jo
pop
pushw
add
mov
push
mov
mov
andb
out
xchg
cmpsb
pop
jo
testb
sbb
mov
cltd
dec
lret
push
or
cltd
je
lcall
dec
jbe
fisttps
or
fnstcw
pushw
pop
or
out
repnz
cltd
clc
sub
mov
cmp
orl
sbb
lock
jnp
mov
fidivl
out
imul
dec
ss
lds
add
cmpsb
int3
arpl
xorl
push
push
cli
pop
lds
cmc
push
rcrb
xor
decb
mov
cli
jo
repz
shrl
mov
or
push
pop
incb
int
jmp
mov
cs
jnp
lods
add
aaa
sahf
xchg
dec
lea
push
sub
or
ja
out
pop
in
add
pop
sbb
mov
push
outsb
ss
xchg
mov
xor
xchg
dec
repz
dec
aas
jge
lcall
or
dec
out
push
jg
test
mov
fdivrl
mov
push
nop
cmp
sbb
add
cmpb
dec
setno
adcb
std
rep
jl
xlat
std
mov
bound
push
or
imul
jb
pusha
aas
inc
addl
or
imul
stc
cmpsl
mov
sub
push
inc
ss
or
scas
jnp
cltd
aam
jle
pop
cmp
jg
cmp
bound
adc
test
and
mov
pusha
mov
scas
aad
cmp
fwait
ja
imul
xor
xor
mov
outsb
pop
mov
sbb
in
or
rcll
daa
bound
push
push
lods
rclb
lods
roll
sahf
or
mov
sti
in
pop
in
jo
xchg
jmp
daa
lcall
repnz
xor
or
jmp
cmp
out
push
add
insb
fistpll
int3
lret
cli
cmp
loope
xchg
mov
sub
mov
push
sub
arpl
mov
xor
orb
jno
mov
jne
fnstsw
sbb
out
es
inc
xor
cmp
dec
pop
adc
scas
mov
push
loopne
lret
sbb
or
push
ds
hlt
call
imul
add
xor
mov
enter
mov
nop
jp
movsl
mov
jl
js
and
icebp
pop
sti
dec
push
in
stos
divb
jle
sbb
cmc
push
dec
mov
mov
fdivp
adc
jno
sub
cli
rcll
mov
outsl
xchg
push
push
sti
loope
adc
xchg
inc
scas
es
inc
fmull
push
fs
inc
sahf
adc
jnp
dec
test
xor
mov
repz
adc
push
loop
in
xlat
xor
adcb
push
push
sbb
outsl
into
jp
push
loop
dec
cs
fists
sbbb
fstl
add
into
gs
xor
xor
and
xor
popa
pop
add
xor
ret
push
mov
xchg
and
jmp
shr
xor
mov
pusha
or
in
ret
add
or
aas
das
mov
dec
daa
cmp
into
mov
stos
or
sub
addr16
cmpsl
push
rcr
fsubrl
call
dec
sbb
insb
int3
sub
test
sti
popa
xor
into
inc
cmp
aas
xlat
push
in
sahf
fmul
in
pop
jo
mov
incl
jae
xorl
testb
mov
inc
lcall
rep
inc
sub
ljmp
pop
pop
inc
cmpsl
mov
add
notl
scas
xlat
pop
push
rclb
or
mov
popf
pop
outsl
shrb
dec
cld
movl
roll
pop
out
test
ds
loop
stc
shlb
sbb
sbb
push
adcl
cmp
sahf
insb
loopne
and
xchg
clc
scas
popa
push
shlb
fisubrs
ret
test
mov
sbb
test
test
dec
jg
push
mov
cmp
adcl
add
bts
mov
sti
and
es
pop
lahf
clc
mov
mov
aaa
aad
push
inc
xchg
mov
int3
in
nop
lret
push
enter
and
js
cmpsl
cmp
addl
sub
mov
mov
loopne
or
stos
popa
sbb
lods
std
into
adc
fistps
lahf
jno
xlat
xchg
shr
xchg
pop
mov
enter
fdivs
sti
loopne
fiadds
pop
mov
xchg
pop
pusha
add
addr16
sbb
and
lock
sub
aas
or
enter
cmp
mov
xchg
cmp
mulb
inc
mov
adcl
mov
sub
pusha
inc
add
out
mov
loop
push
push
ficoms
jne
push
fisubs
cmp
out
mov
es
fwait
jecxz
xorb
dec
mov
out
lods
loop
out
lods
loope
pop
adc
sahf
les
popa
fsubrs
mov
jns
movsb
icebp
rorl
repz
negb
jae
pop
add
fs
insl
push
inc
insb
lcall
dec
push
loop
loopne
stos
lock
dec
jmp
jo
lret
bound
and
mov
or
cmp
outsl
jp
cwtl
out
pop
inc
movsl
call
adc
jecxz
test
mov
lret
insb
dec
nop
popa
pop
addb
jne
adc
fcoml
add
xbegin
pop
rclb
call
xor
xchg
shlb
nop
lds
mov
dec
push
jnp
pop
cmc
test
mov
mov
ja
js
cmp
cld
adc
outsb
jmp
sti
cs
xchg
and
das
adcb
jae
mov
cmp
out
inc
sub
rorb
in
cltd
fdivrl
or
dec
inc
fs
or
pop
in
pop
add
inc
mov
jno
pusha
into
pop
jg
sub
roll
shrb
sub
or
popa
add
and
insb
gs
shlb
and
leave
lret
or
and
jle
xor
push
jne
sub
mov
iret
cmp
jo
pop
mov
ja
cmp
cwtd
pop
mov
sbb
scas
gs
dec
shrl
xchg
xchg
rorb
jg
add
mov
into
sbb
out
jp
inc
jb
insl
int
insl
cmp
subl
mov
cmpsb
push
xor
or
mov
pop
iret
inc
stc
sub
rclb
add
decb
fnstsw
mov
mov
xchg
std
dec
cmp
fimull
cmp
mov
test
pop
in
xchg
xor
icebp
inc
xlat
xchg
aas
in
movsb
pop
adc
pop
mov
les
pop
shrd
or
ljmp
or
push
lods
pop
std
loopne
ljmp
mov
mov
sbb
inc
test
mov
aaa
lock
popa
fs
lock
jmp
add
adc
xchg
psubusb
in
stc
mov
jg
jle
sub
lahf
xor
jecxz
add
mov
jae
push
cmp
sbb
std
xlat
and
or
outsl
cmp
mov
scas
mov
fsubr
test
mov
xor
xchg
popf
int
mov
addl
inc
lcall
ljmp
loopne
fwait
clc
sti
js
adc
out
daa
ja
aaa
fildll
mov
pop
lcall
pop
imul
cmc
movsb
filds
subb
faddl
in
mov
pop
mov
xchg
xchg
ficoms
clc
imul
push
pop
scas
sbb
hlt
negl
cld
dec
addl
scas
jno
fdivrs
mov
sahf
inc
dec
lcall
mov
xchg
pushf
ja
push
stos
mov
push
pop
das
jp
mov
sbb
imull
dec
cmpl
and
add
repz
aaa
mov
sub
std
dec
aad
cmp
pop
cmp
stos
jle
push
xor
push
pop
push
push
test
test
gs
dec
out
data16
pop
push
sub
mov
movsb
mov
bound
xor
jle
loopne
sub
jae
sbbl
imul
xchg
js
jne
dec
addl
dec
lahf
sub
sub
femms
rcrb
rcll
push
inc
jmp
jmp
add
test
push
sahf
dec
cmpsb
xor
in
fs
adc
testb
push
jb
or
movsb
std
pop
sbb
fldt
dec
shr
push
stc
sbbb
push
imul
addr16
inc
sbb
inc
stos
pop
call
gs
lds
dec
lret
repnz
stos
and
jo
mov
and
adc
xor
jmp
add
xchg
enter
adc
jb
dec
cld
mov
leave
push
in
mov
sub
subl
mov
jne
sbb
in
sbb
aas
sarl
into
leave
fstl
fistpl
imul
stos
add
inc
je
and
adc
sahf
cmp
dec
adc
lcall
push
inc
mov
idiv
pop
mov
insb
stos
xchg
mov
mov
test
shll
push
fldz
es
sbb
js
mov
jp
js
mov
lret
push
and
push
outsb
std
adc
sahf
add
icebp
jo
dec
inc
clc
jnp
mov
andb
lret
int
lods
inc
xor
xchg
lahf
loope
mov
dec
fisubrl
xor
clc
lret
adc
aam
out
inc
int3
xor
jmp
outsl
mov
cmp
mov
int3
mov
sbb
push
pop
bound
mov
xchg
cs
fwait
or
cltd
mov
pop
ret
in
bound
cwtl
mov
pop
stos
insl
add
and
push
addr16
imul
je
cmpl
and
pushf
fnsave
xor
mov
repz
aas
sbb
repnz
mov
clc
xor
aad
sub
sbb
sub
mov
int
jae
xchg
bound
dec
pop
xchg
pushf
jno
out
and
and
int
jle
and
push
adc
dec
mov
cs
sbb
sbb
mov
fs
fidivl
mov
imul
dec
and
jl
repnz
push
pushf
or
bound
mov
pop
movsb
inc
into
int
and
fidivrs
and
jns
icebp
and
dec
cmp
pop
test
adc
push
jp
dec
out
imulb
and
int3
inc
frstor
push
cs
ljmp
sub
sub
leave
cs
push
jp
nop
and
mov
fnstcw
test
xchg
mov
push
push
mov
jg
and
jb
push
lds
xchg
in
cwtl
fldt
xchg
mov
scas
xchg
push
test
ljmp
xchg
jae
push
jb
scas
lcall
mov
hlt
pop
movsb
and
loopne
in
sbb
inc
insb
das
int3
stos
movsb
mov
iret
std
in
stos
iret
setg
scas
aam
dec
repnz
test
jbe
nop
and
lods
out
repnz
pop
outsb
mov
je
cwtl
into
gs
daa
and
call
test
xchg
dec
int
subl
out
in
loop
sbb
dec
testb
notb
dec
pop
mov
cmp
in
pop
stos
mov
lods
sbb
hlt
dec
xor
repz
add
mov
test
in
cmpsb
sub
mov
mov
mov
rolb
adc
jmp
push
pop
jmp
je
add
mov
out
stos
pushf
fs
out
test
xchg
inc
mov
push
int
or
imul
adc
adc
cmp
dec
push
mov
inc
testl
int3
lock
dec
or
inc
sub
cmpsb
xorl
rcll
cmp
jns
push
add
repz
sbbl
push
sbb
cmpsb
gs
push
jmp
fstps
add
loop
arpl
shll
mov
dec
divl
xchg
pusha
push
jecxz
in
xchg
adc
mov
jns
add
insb
mov
in
bound
ss
ss
or
xchg
mov
mov
push
cld
decl
bound
test
popl
sbb
mov
out
mov
mov
shl
rcrb
js
and
enter
data16
out
test
add
xchg
inc
imul
adc
xchg
mov
pushf
jno
xchg
test
shll
je
push
stc
sbb
cltd
loopne
add
mov
push
sbb
or
jl
pop
cli
testb
adc
test
stos
int3
or
dec
jno
xchg
xor
test
jo
mov
fnstcw
jns
pop
sbb
in
icebp
cmpl
add
push
in
stc
add
push
dec
or
jp
mov
jmp
dec
push
or
fcomps
dec
inc
push
fwait
cmp
std
pushf
push
pop
test
loop
lret
popf
jge
in
and
scas
nop
mov
das
fstl
fs
xchg
nop
push
movsl
andl
loopne
in
jecxz
adc
jmp
xor
cli
mov
addr16
push
fcoml
ljmp
fadds
add
aad
in
jne
xchg
jno
cltd
mov
and
popa
sbb
cmp
sub
mov
mov
enter
shl
xor
flds
fwait
push
pop
xor
jmp
push
dec
adc
push
jp
mov
lock
faddl
mov
ret
xchg
add
stos
and
mov
mov
dec
sbb
and
mov
and
adc
dec
push
dec
pop
and
scas
push
add
jo
out
out
jae
ss
ss
jl
cmc
test
lret
cmc
repz
mov
mov
hlt
std
dec
sarl
pop
pop
push
in
add
ftst
insb
xor
in
mov
cmovl
loop
mov
clc
enter
mov
fcoml
xor
push
xchg
cmpl
icebp
cmp
adcl
sub
mov
adc
popa
add
into
imul
xor
push
ljmp
rorl
std
jb
inc
subl
fldlg2
scas
fs
sub
shll
ja
addr16
pop
push
or
mov
lea
cmp
lret
cwtl
int
fstl
jecxz
lock
jl
mov
pushf
pusha
xor
mov
jg
jl
enter
aaa
mov
push
je
add
aaa
in
sti
xor
std
insl
and
dec
arpl
mov
sbb
loopne
push
negb
out
xor
test
hlt
xchg
cmp
mov
clc
sub
addr16
add
pop
stos
ret
jp
lea
imulb
dec
inc
cs
getsec
or
sahf
fmull
stos
test
dec
sub
jg
cmpsb
mov
cmp
push
mov
mov
mov
cmp
and
and
jl
push
fistpll
push
es
cmpsb
js
bound
mov
mov
cwtl
shrl
mov
and
popf
pop
lods
lock
mov
and
push
xchg
in
notl
add
mov
or
jl
lret
aad
cltd
add
mov
push
xor
sbb
scas
push
or
popa
mov
jge
in
popf
cld
mov
fbstp
sahf
push
fnstsw
mov
int3
sti
jns
aam
and
xor
iret
xchg
xchg
xchg
loopne
movsb
out
out
xchg
push
je
xchg
fisubl
or
push
cmc
or
lea
call
cltd
les
cmp
inc
mov
rcll
cs
sahf
iret
cmp
cmp
xor
sub
inc
pop
std
mov
push
into
mov
jg
and
std
mov
jmp
rclb
sub
nop
dec
daa
or
test
add
push
mov
stc
or
inc
dec
mov
fldcw
or
test
adc
icebp
jnp
sbb
mov
pusha
dec
sarb
aas
lret
popa
scas
mov
xchg
aam
icebp
fbld
aam
fwait
mov
adc
arpl
jl
xchg
cmp
push
or
repnz
aas
pop
push
jo
je
pop
mov
sub
mov
mov
mov
xchg
jg
out
jmp
jp
and
out
pop
popa
icebp
xchg
dec
pop
sub
aas
lods
sti
pop
sub
jge
les
add
fsubrs
add
mov
in
je
sub
jp
xchg
push
cld
jo
rorl
sub
pop
mov
fdivs
add
loope
sbb
repnz
dec
xor
or
or
push
add
mov
and
xchg
in
sbb
mov
xor
sub
mov
stos
jge
adc
xchg
push
jmp
out
inc
cmpl
mov
js,pn
mov
fistpll
push
or
aam
push
sbb
mov
pusha
call
mov
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
