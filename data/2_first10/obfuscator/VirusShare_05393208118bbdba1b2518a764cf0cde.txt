decl
out
mov
cmpsl
jge
gs
or
les
and
adc
and
and
or
mov
aaa
adc
nop
adc
and
or
or
insl
mov
or
test
mov
mov
adc
adc
or
mov
push
and
or
and
fcmovne
xchg
inc
or
arpl
add
mov
xor
sbb
fucomi
in
lods
mov
nop
inc
nop
inc
orps
out
jnp
nop
or
push
and
test
inc
dec
popf
mov
mov
outsb
and
arpl
cmp
outsb
int
rcrb
and
rolb
mov
ds
mov
nop
xlat
xor
and
lods
insl
int
or
or
lcall
test
and
or
xchg
out
fwait
or
push
addr16
mov
leave
xor
mov
mov
sahf
mov
or
pushf
and
and
mov
lcall
inc
add
dec
idivb
inc
mov
pop
pop
leave
ret
in
insl
loope
in
pop
pop
add
les
sete
insl
pop
outsb
test
pop
adc
adc
mov
pop
pop
pop
ret
rcrl
mov
neg
adc
and
fldl
sub
loopne
in
not
adc
inc
dec
inc
neg
jmp
or
mov
stos
or
shrb
in
mov
add
aaa
pushl
lahf
add
add
adc
or
and
aas
mov
sbb
popa
cmp
add
pop
adc
sub
iret
mov
out
inc
add
fdivrl
and
inc
and
jle
jmp
jp
add
add
sbb
add
add
cmpsb
add
lcall
clc
mov
dec
or
add
and
mov
idivl
incl
addl
nop
add
jne
jp
aaa
incl
push
mov
fistl
iret
aas
cmp
icebp
inc
leave
jae
mov
out
sub
orb
pop
xor
cmp
ja
in
pushl
add
add
arpl
test
js
adc
jg
pop
icebp
sub
and
daa
pop
cwtl
call
jo
pop
add
setg
decl
je
xchg
add
inc
mov
mov
or
mov
fildll
mov
cmp
sub
add
out
std
fdivr
test
or
pushf
das
or
or
fistps
loope
mov
iret
add
push
xchg
fwait
ret
mov
std
cmp
add
mov
shlb
xchg
popf
iret
fstpt
movsl
stc
sbb
out
movb
iret
add
dec
adc
push
clc
pushl
into
mov
shr
scas
jecxz
fdivrl
xchg
mov
cmp
jo
mov
xchg
mov
sti
jg
mov
xchg
inc
pop
sbb
loop
scas
xchg
cld
lcall
adc
fadd
mov
add
stc
xchg
add
ljmp
adc
addr16
out
or
pop
add
in
into
lcall
pushl
fcmovnb
add
xchg
sbb
addl
inc
sbb
and
pop
dec
pushf
inc
rcll
data16
loope
testb
movsl
ja
push
ret
inc
movsl
test
in
cmp
fucom
inc
lea
mov
sbb
mov
push
dec
add
aas
lcall
out
idivl
loop
pop
or
cmp
mov
add
cli
cmpb
mov
pop
mov
addl
repz
testb
jg
cltd
add
and
xchg
mov
test
pop
xchg
jno
aaa
xor
add
sub
lcall
xlat
dec
sub
sub
dec
push
leave
dec
mov
std
cs
fnstcw
mov
add
adc
js
andb
std
mov
incl
bound
jecxz
lahf
cmc
out
xor
jg
stc
adc
clc
push
loope
cwtl
add
cwtl
pop
pop
push
jp
or
add
mov
cwtl
xor
jo
push
in
add
pop
sub
cmp
xchg
inc
push
jne
jns
mov
das
inc
jns
cld
or
add
sbb
inc
test
in
mov
loope
cli
pushl
or
test
mov
cmpb
pop
orb
test
or
sbb
aas
mov
jmp
pushl
jg
pop
out
jnp
aas
jbe
cmc
in
fwait
sub
ja
dec
push
out
sahf
xor
pushl
decl
rolb
leave
cmp
loopne
dec
add
mov
call
cmp
pusha
pop
addr16
inc
pop
lock
ret
and
cmp
sub
dec
iret
add
sub
ljmp
sbb
add
jge
movsb
mov
xor
das
aaa
add
add
sbb
dec
mov
add
xor
mov
neg
xor
inc
int
mov
icebp
push
mov
push
inc
sub
in
das
fstpt
xor
cli
adc
popl
mov
add
std
mov
mov
push
sub
outsb
loop
mov
sbb
imul
xchg
xor
cwtl
fisubrs
out
bound
inc
dec
mov
xor
dec
dec
imul
pop
ss
add
sub
test
rorl
mov
out
ret
cmc
cmpsb
lock
es
movsl
inc
xor
jecxz
pusha
mov
push
jmp
lcall
inc
dec
cld
and
outsb
mov
add
popf
mov
idivb
rolb
inc
push
orb
imul
fildll
sub
inc
inc
xor
bound
pushl
sbb
addl
sbb
jge
shl
dec
stos
stos
sub
jmp
dec
inc
mov
nop
dec
jp
jbe
add
popf
jnp
pop
movsl
insb
incb
ret
dec
fistpl
add
dec
cwtl
nop
push
outsb
imul
add
lods
xchg
xlat
or
mov
xchg
xchg
pop
sbb
and
adc
fistl
hlt
mull
lret
xchg
arpl
xchg
out
outsl
ljmp
and
out
inc
push
push
fildl
es
inc
out
add
dec
and
sbb
pusha
inc
sub
jle
outsl
loop
ja
pop
jl
repz
movsb
lcall
add
mov
mov
adcb
xor
inc
dec
fisubs
push
insb
jb
pop
jecxz
jge
ds
or
ljmp
in
outsb
in
add
adc
dec
adc
repz
jmp
cld
mov
ficoml
ss
decl
mov
mov
mov
lds
adc
mov
sti
in
out
or
out
adc
xor
fiaddl
add
sbb
pop
shll
cmp
mov
fisubs
std
inc
cmp
ret
js
lcall
mov
push
add
mov
shlb
inc
xchg
divb
add
pop
jg
mov
sub
dec
test
sbb
in
pop
int3
mov
mov
inc
sahf
push
cmp
decb
popf
sbb
adc
neg
adc
mov
aaa
push
inc
dec
jbe
loop
cwtl
sti
pop
push
mov
movl
lods
adc
or
xchg
subl
jge
sub
sub
dec
mov
out
ds
add
jne
fmull
sub
mov
xor
icebp
ljmp
adc
add
fistl
ss
inc
ficoml
mov
sub
negl
dec
or
in
sti
pop
jnp
adc
inc
dec
and
inc
outsl
icebp
fwait
paddb
add
faddl
mov
test
scas
sbb
cmp
fimull
iret
mov
inc
cld
not
cmp
icebp
push
data16
int3
or
cmc
in
ret
fdivl
sarl
cld
inc
jecxz
and
in
dec
mov
adc
add
lods
std
pop
jp
xlat
fwait
shlb
jae
ret
sbb
and
icebp
push
loope
in
and
mov
sbb
gs
pop
sti
data16
sub
push
pop
mov
fcompl
filds
mov
add
add
imul
mov
and
test
pop
test
add
in
sahf
lcall
hlt
sarl
jae
fdiv
fwait
das
sub
sbb
adc
sbb
addr16
in
sbb
cmp
sbb
test
lock
out
pop
in
xlat
das
in
sbb
adcb
xor
fsub
xor
sbb
jo
es
xchg
pop
f2xm1
add
hlt
dec
aam
movsl
movsl
shufps
mov
popa
dec
adc
stos
mov
adc
mov
test
hlt
sub
mov
scas
mov
fidivrl
jo
imul
in
scas
push
fildl
dec
pop
xor
jl
js
idivb
scas
push
or
aas
int
dec
insl
push
sub
enter
inc
mov
incl
jecxz
jl
mov
dec
bound
add
jbe
adc
lret
popf
fnsave
lods
dec
push
sti
mull
rolb
jae
jecxz
push
push
sbb
jo
jg
or
in
jle
lock
popf
pop
out
add
or
mov
xchg
mov
lock
dec
push
lock
jmp
adc
dec
ljmp
fimull
push
lcall
bound
je
ja
pop
cmp
fsubrs
repnz
jge
in
xlat
jne
sub
in
cmp
jnp
sti
out
mov
mov
loop
mov
iret
rcrb
fwait
inc
jecxz
or
test
pop
dec
negl
push
aam
lock
add
iret
adc
fistps
and
adc
out
mov
mov
iret
pop
or
push
xchg
jge
jmp
adc
hlt
push
movsb
cmp
jne
pushl
cld
sub
insl
mov
jo
inc
mov
mov
xor
and
inc
lods
je
dec
scas
add
ret
in
sti
cmpl
fcmovu
jno
and
popf
inc
fwait
popa
outsb
sub
xor
cwtl
xor
mov
or
roll
scas
jbe
icebp
pop
pop
in
movl
mov
adc
add
aaa
jne
sbb
je
hlt
mov
mov
and
inc
inc
xchg
dec
pop
push
dec
adc
add
jg
aaa
or
push
test
push
std
lea
push
lea
or
call
je
addl
iret
adc
fcompl
cmp
in
sub
addb
aas
clc
scas
fwait
jno
mov
and
in
lret
mov
or
and
ljmp
adc
aaa
mov
inc
inc
mov
lods
test
jo
and
mov
movsl
cld
lods
out
out
adc
or
ret
jp
fcompl
sub
pop
out
aam
sub
push
adc
gs
sbb
pusha
pop
std
stos
push
inc
pop
rclb
lds
ret
ljmp
add
mov
sub
mov
aas
mov
sub
or
inc
add
mov
mov
pop
and
mov
hlt
pop
ret
divl
sub
clc
data16
cmp
fildl
add
or
mov
inc
dec
ficoms
jne
mov
in
cli
out
call
inc
nop
loope
mov
jb
leave
in
popa
mov
jae
in
lcall
push
sub
inc
pop
pop
call
add
pop
xchg
adc
dec
mov
and
movsl
jo
fwait
dec
xor
mov
mov
movsb
xor
add
add
jg
ds
pushf
les
pop
mov
lahf
loope
sub
test
xchg
mov
or
nop
add
gs
add
movb
inc
movsb
mov
pop
loope
xchg
sar
add
add
iret
pop
and
mov
inc
mov
or
adcl
mov
mov
xor
ret
lock
push
jne
mov
xchg
je
stos
push
xchg
sahf
cmp
test
xchg
xor
in
mov
sub
in
mov
jb
xchg
subl
jecxz
incl
and
cli
jb
adc
jns
pop
popa
test
pop
mov
jge
mov
mov
mov
out
inc
imul
inc
push
mov
into
mov
fwait
js
iret
push
pusha
loop
daa
inc
push
repz
pop
add
mov
jg
sbb
jne
inc
out
xchg
jno
je
loop
xor
add
mov
decl
enter
push
xor
adc
jecxz
rol
mov
testl
xchg
and
add
adc
fdivl
xchg
adc
test
incb
aas
sub
and
cltd
aam
xchg
jnp
in
jg
decl
and
je
pop
push
ds
pop
je
in
add
jg
decl
jne
add
test
es
mov
jl
cld
ss
movb
push
jne
pop
out
pop
and
clc
ret
mov
mov
mov
outsl
dec
push
loopne
pop
push
sub
out
mov
sbb
fldenv
lea
stos
test
mov
clc
aas
aas
scas
dec
or
lods
dec
sbb
sub
xchg
and
jmp
pop
stc
cmp
cs
into
sbb
dec
dec
js
jecxz
cwtl
pop
dec
dec
scas
lock
das
adc
mov
add
push
inc
jne
popa
aam
pop
gs
pop
add
int3
xlat
jl
aas
ret
test
sub
incl
mov
inc
mov
aam
addl
xchg
xchg
sar
sar
sbb
sbb
cmp
cmp
out
add
into
or
lahf
push
pop
dec
xor
cmp
imul
pop
andl
sub
cli
lods
sbb
pop
outsb
add
mov
aas
std
pcmpgtd
xchg
lcall
sub
cmp
subb
jg
in
mov
cmp
out
and
inc
adc
in
cs
sbbb
jecxz
cmp
loope
inc
push
jg
adc
loope
cmpsl
lret
push
mov
pop
pop
mov
imull
xchg
int
or
aas
fdivr
inc
cwtl
mov
add
nop
mov
inc
aam
jmp
call
mov
add
pushf
jae
cltd
xor
mov
sub
std
outsl
shl
cmp
loope
adc
and
pop
shlb
jg
add
mov
adc
add
add
xor
fwait
add
aas
movsb
filds
mov
decl
mov
pop
decl
call
movsb
push
mov
push
adc
cmpsb
out
notb
mov
fld
loope
lods
fs
lret
pop
fisubrl
lods
add
push
jle
incl
sub
dec
sub
mov
mov
add
mov
jmp
or
adc
push
inc
or
es
out
sub
push
arpl
pop
jp
add
sub
push
push
or
orl
dec
dec
push
decl
ss
movsl
int
in
xchg
scas
xor
mov
pop
dec
lock
in
add
or
movsb
and
popf
xchg
jne
jle
mov
or
inc
aas
push
mov
fisubs
ljmp
xchg
xor
cmc
add
int3
std
nop
xchg
jmp
std
fwait
mov
or
arpl
xor
push
adc
jno
aas
push
sahf
stos
xor
insb
sbb
jg
fstpt
mov
jle
ljmp
stc
jb
pop
pop
es
ss
push
lods
mov
mov
push
cs
jnp
aas
ficoms
incl
xor
jb
mov
aad
mov
adc
mov
jne
fsubr
jg
sbb
inc
xchg
mov
mov
loopne
adc
ret
pop
fidivrl
hlt
xor
sub
sub
test
mov
pop
dec
inc
push
dec
mov
js
add
add
rcr
incb
pusha
mov
inc
aas
push
lret
sbb
out
lea
mov
xchg
pop
add
mov
push
ljmp
jmp
add
fldenv
pop
inc
push
jns
test
and
sub
stos
add
ret
sub
jg
ljmp
jp
std
inc
xor
jle
inc
in
add
add
add
or
sarb
test
mov
fdivrp
leave
call
mov
stc
es
adc
mov
xorl
dec
ljmp
add
insl
inc
mov
cld
mov
rorl
lret
cmpsb
enter
out
jo
in
xchg
cmp
cli
shrb
jo
aaa
add
pop
dec
mov
les
cld
pop
shlb
out
cmp
incl
or
inc
dec
dec
rolb
add
stos
push
xlat
sti
mov
adc
xchg
call
daa
xchg
clc
scas
mov
dec
push
xor
mov
sub
ljmp
je
pop
fnstenv
lock
filds
jp
jne
adc
js
jg
ja
xchg
clc
shrb
or
inc
outsb
pop
push
fsubl
cld
lods
mov
daa
add
or
dec
fstps
mov
ds
mov
lods
mov
pop
mov
mov
jmp
outsl
mov
bound
mov
lea
cmp
jle
aaa
aas
xchg
test
mov
pop
into
push
adc
mov
js
sub
ljmp
jp
movsb
mov
dec
sbb
ret
mov
adc
fwait
mov
mov
insl
jmp
fisubs
adc
mov
leave
and
lcall
divb
add
cmp
gs
mov
push
push
filds
mov
jbe
adc
sbb
lea
lds
rcrl
sbb
lea
icebp
aaa
add
cmp
movsb
std
push
cld
sbbl
imul
cmc
mov
or
jecxz
inc
mov
scas
sub
dec
std
add
shrl
call
mov
pop
cmpsb
aam
or
push
jb
lods
push
lcall
loop
mov
dec
mov
pushf
adc
dec
movsb
ss
aaa
xlat
out
mov
inc
pop
movsb
adc
ja
inc
mov
jge
mov
hlt
push
in
jg
ljmp
into
repnz
addr16
and
test
and
and
jg
pop
shll
icebp
repz
daa
sbb
jne
inc
inc
je
adc
mov
mov
sarb
inc
notb
or
mov
bound
nop
pushl
inc
mov
push
ds
out
enter
pop
aas
jns
stc
mov
jmp
pop
xor
loopne
out
inc
sbb
push
sbb
add
bound
stos
xchg
adc
jbe
daa
mov
xorl
sti
inc
mov
add
orl
leave
test
inc
xor
add
and
lcall
add
out
popf
loopne
and
rcrb
sbbb
sub
jb
incb
sub
pop
test
shlb
aad
stc
cmp
test
push
out
popa
or
mov
mov
xchg
pop
xlat
xchg
and
outsb
inc
ds
or
rcrl
inc
mov
inc
add
mov
lods
mov
call
mov
cld
call
xchg
push
add
inc
lahf
rorl
pushf
add
sbb
rclb
mov
sbb
int3
std
fwait
jne
out
sub
jb
stc
adc
shr
std
mov
or
mov
jns
dec
mov
arpl
push
push
pop
xchg
xchg
mov
bnd
out
pop
xchg
lods
aas
adcl
shr
xchg
sbb
pop
mov
lahf
sub
or
popa
xor
ret
lea
inc
call
sahf
clc
xchg
into
dec
icebp
sbb
int
clc
cmp
add
jecxz
add
int
sti
sbb
jmp
mov
cmp
in
scas
popf
inc
push
idivl
and
icebp
bound
in
cmp
rolb
sub
pop
mov
in
fimull
int3
adcl
nop
fs
cmp
into
mov
pop
loop
pop
mov
rorl
and
jne
inc
lcall
pop
xor
push
ret
adc
inc
cmp
jbe
imull
or
push
ret
push
pop
roll
mov
inc
loopne
push
inc
cld
andb
insl
sbb
sar
adc
push
insl
push
insb
ja
xlat
adc
cmpl
clc
add
add
insl
rcll
adc
add
add
pop
loop
imul
push
add
decb
sti
repnz
and
pop
fdivrp
not
inc
mov
lock
xor
xor
call
cmp
add
fistl
adc
insb
stc
xlat
in
sbb
aam
rcl
aas
sub
pusha
in
push
stos
add
dec
inc
movsb
push
into
adc
call
sahf
in
and
in
inc
push
scas
jne
sub
adc
xlat
leave
rcrb
lcall
ss
mov
es
push
mov
xchg
jg
cmp
out
or
xor
mov
int3
lret
or
pop
jno
arpl
mov
leave
mov
ss
xor
push
leave
pop
lret
call
dec
iret
xchg
mov
neg
mov
mov
jae
loopne
arpl
push
outsl
loope
adc
inc
fcompl
fdivrs
rorb
adc
adcb
ret
mov
test
mov
lret
cmp
loop
loope
mov
dec
icebp
add
dec
mov
mov
in
sub
or
sar
mov
jge
mov
jge
mov
in
int3
addb
rolb
andb
filds
and
data16
or
pop
adc
jno
push
mov
popa
cmp
ret
pop
mov
int3
insl
aam
sub
aam
negl
mov
fwait
mov
push
rcr
jp
add
cmp
fnstcw
aad
mov
ja
int3
faddl
cld
xlat
pop
rorb
popa
cmp
mov
mov
push
mulb
out
ljmp
pop
xchg
fsubl
ja
mov
fildl
jle
mov
xor
jmp
aam
or
dec
or
int3
add
fildll
dec
add
jp
push
cwtl
lods
push
rcrl
fsub
fidivs
andl
cmpsb
clc
adc
orb
jg
das
pop
mov
lret
out
pop
xchg
sub
lea
std
aaa
mov
push
push
push
call
fiadds
sbb
imul
jnp
in
jbe
leave
or
mov
iret
inc
in
imul
lret
add
fbld
aam
sub
lea
cli
inc
jmp
mov
dec
mov
aaa
loop
aas
loope
aad
xor
add
je
test
add
insl
es
jns
test
push
out
xorb
mov
inc
ret
mov
inc
in
cmp
adc
push
testl
push
fldt
movl
fwait
aam
dec
push
dec
sbb
sbb
sub
xchg
mov
roll
mov
add
sub
jecxz
inc
adc
fwait
pop
test
or
dec
loope
cmc
and
dec
call
or
xlat
les
cmp
jne
sbb
fistpll
roll
adcl
ficoml
or
jmp
xchg
mov
push
jb
in
fidivrl
in
sti
adc
push
add
push
pop
mov
add
outsb
stos
xchg
pop
cs
mov
int
add
push
ret
pop
sbb
jl
cld
sub
sbb
xchg
jb
sbbb
repz
shrb
data16
adc
mov
js
fistpll
jno
sub
sbb
mov
cltd
fisubrl
sub
jne
mov
push
sub
lea
inc
inc
add
lret
or
les
add
and
push
adc
inc
mov
xor
dec
dec
inc
pop
jb
aam
cwtl
jo
mov
sub
xor
pop
movsb
mov
pop
popf
lcall
ljmp
jae
ret
xor
or
repnz
mov
inc
jge
jg
out
repz
pop
inc
fistl
push
aas
xor
lea
push
push
add
push
add
push
sbb
stos
sbb
or
adc
lcall
add
add
stc
rcrb
and
push
fsubr
aaa
stos
sbb
cmp
mov
mov
xchg
dec
and
scas
repz
cmp
roll
data16
mov
cmp
jnp
jp
add
or
bound
icebp
lds
xchg
pop
test
pop
lea
fisttpll
testb
inc
mov
fs
das
adc
adc
das
mov
arpl
loop
out
add
dec
jg
dec
mov
push
lea
cmpsl
inc
out
out
shlb
sub
ret
jns
or
xchg
mov
sbb
push
sti
in
incl
pushf
push
push
mov
popl
mov
rcrl
mov
std
mov
sub
repnz
push
nop
and
sbb
fcomp
cs
and
add
adc
push
adc
mov
pop
mov
aam
testl
insl
mov
add
test
jp
in
aas
jo
shll
popw
add
dec
inc
mov
clc
loopne
shrl
or
jmp
mov
lods
rorl
fwait
lods
stos
inc
in
popf
pop
dec
data16
scas
shl
xor
pop
and
and
push
push
mov
jge
pop
rorb
fnsave
sub
sbb
or
sbb
xor
dec
xor
call
fs
mov
mov
mov
pop
stos
stos
adc
adcb
mov
mov
xchg
mov
add
jbe
sbb
mov
aaa
xorb
pop
nop
inc
sub
xchg
loopne
mov
fadds
in
lret
dec
pop
mov
pop
int
jo
cmpsl
and
add
cld
xor
jmp
test
pushf
push
and
and
in
mov
jg
sbb
leave
lods
add
lret
add
and
inc
jecxz
lods
jp
incl
jle
add
cli
add
xchg
loopne
iret
arpl
call
push
lretw
test
stos
pop
repz
dec
hlt
fwait
loopne
sbb
cmp
and
mov
inc
push
adc
in
sti
mov
jo
or
or
cmpsb
xchg
je
add
sbb
in
mov
out
sub
add
insl
xor
out
inc
add
repz
xchg
hlt
fistpll
add
lock
or
fmuls
hlt
inc
inc
ljmp
pusha
outsl
cmpsl
add
iret
test
add
mov
jbe
and
dec
icebp
mov
add
add
js
xor
mov
push
cli
jg
sub
cltd
leave
fstl
and
loop
call
leave
scas
push
adc
sub
mov
inc
pop
add
pushl
icebp
sbbb
cli
and
loopne
add
lcall
xorl
sti
add
inc
mov
cmc
jg
sub
mov
xorl
sub
and
jp
push
cmc
clc
test
outsl
or
inc
mov
cmp
mov
ja
fistpll
cmp
mov
push
sbb
pop
sub
mov
hlt
leave
mov
mov
pusha
aaa
das
shrl
lock
inc
or
das
jle
xchg
adc
lahf
cld
inc
mov
cmp
nop
xorb
add
cld
xchg
rolb
daa
pop
jbe
mov
ret
jae
and
jl
pusha
cmp
enter
shrb
mov
nop
xchg
xor
loop
std
pop
lahf
mov
dec
pop
inc
cmc
and
in
scas
incb
sti
adc
sub
jg
and
or
jmp
jl
ret
fstps
push
rorb
dec
jge
mov
outsl
pop
inc
push
mov
inc
dec
enter
cmp
stc
inc
jg
cmp
push
sub
push
dec
jle
sbb
aaa
ds
jle
adc
jle
movsl
inc
loopne
mov
pop
fdiv
scas
clc
mov
clc
xor
pop
pop
les
ljmp
xchg
jl
dec
sub
mov
add
loope
lret
int3
cmpsb
pop
ja
pop
add
jg
repz
jne
dec
jmp
mov
jns
add
add
in
add
push
sub
inc
ss
insb
mov
mov
ja
mov
xchg
pop
sti
xchg
incl
jge
push
cld
rcr
inc
jns
xchg
dec
mov
lcall
sub
fimuls
test
jae
idivb
xchg
dec
jb
loop
mov
push
mov
out
pop
cli
ss
movsl
jg
dec
dec
packuswb
call
add
xchg
pop
mov
jnp
add
decl
cld
jg
pusha
addr16
inc
jp
add
pop
outsl
inc
seta
fidivl
inc
std
or
dec
jno
movsb
imul
pop
jmp
es
pop
mov
imul
dec
outsb
lahf
pop
ljmp
test
mov
in
scas
imul
addr16
test
call
push
arpl
lahf
or
jne
pop
push
fsubs
outsl
jecxz
adc
shlb
imul
out
inc
mov
cwtl
mov
shlb
daa
push
mov
sbb
push
and
aam
imulb
jg
ja
xchg
and
lds
mov
in
jbe
repz
adc
mov
adc
cmp
inc
outsl
lods
pop
gs
into
insb
enter
cmp
push
push
sub
mov
cmp
or
lea
and
xchg
fldenv
movsl
incl
aaa
or
add
add
fcmovne
cs
bound
mov
sbb
mov
out
xor
mov
jg
mov
jmp
test
and
cmovle
aas
xchg
outsb
push
xor
pop
test
shrl
popf
pop
xchg
sti
call
fmulp
in
adc
ss
shrb
push
push
pop
sbb
mov
push
loopne
je,pt
add
or
mov
int3
sub
lock
incl
xchg
lcall
aaa
jno
add
add
dec
aaa
add
and
in
insb
inc
sbb
fsubr
sub
mov
lods
loopne
or
push
icebp
and
mov
incl
pop
arpl
pop
movsl
lods
xchg
adc
sub
fildl
pop
inc
add
ljmp
mov
push
push
or
inc
das
adc
mov
in
gs
int3
es
std
ja
push
dec
xchg
mov
jno
sahf
push
add
dec
in
sub
pop
mov
leave
sbb
int3
or
movsl
add
repnz
xor
cmpsl
iret
call
push
lret
sbb
xor
cld
dec
xor
xor
push
adc
jb
stos
pop
add
lds
aam
mov
push
pop
add
adc
and
add
addr16
sub
sbb
mov
lods
jge
lock
pop
jne
testl
mov
int3
outsb
inc
sarb
inc
mov
and
or
xchg
xor
xor
pusha
add
mov
lds
jb
cs
add
fsubs
push
fadds
dec
rorb
push
fdivrs
jne
xor
jbe
pusha
dec
lods
pop
mov
push
mov
pop
or
xor
lock
loopne
pop
mov
es
and
sbb
insb
repnz
xorb
mov
mov
icebp
hlt
sub
xlat
dec
mov
mulb
xor
dec
hlt
add
mov
sbb
mov
test
test
mov
sbb
ljmp
test
cmc
jo
add
mov
add
add
or
loope
sbb
or
jo
std
dec
dec
stos
ss
outsl
icebp
sbb
jmp
div
test
add
xchg
shll
aam
or
movsb
xchg
sub
cld
fmuls
mov
clc
add
aam
scas
dec
jle
mov
jnp
ror
incl
sub
addl
cmpsl
xchg
sbb
fadd
adc
mov
jl
cwtl
dec
mov
cmp
test
outsl
adc
jmp
mov
in
pop
test
xor
lea
add
dec
lock
hlt
dec
or
inc
mov
shld
push
cmpsl
in
or
popa
cmp
fistpll
push
lcall
dec
fsub
mov
cmp
dec
in
xchg
aaa
mov
outsb
mov
cmp
bound
push
dec
pop
popf
sbb
add
negb
mov
mov
sbb
mov
lds
pop
jle
add
ffree
cmp
data16
and
mov
or
add
xor
sub
cmp
bound
or
rcr
adc
cmpsb
and
out
xor
pop
inc
xor
addb
adc
cli
in
mov
mov
mov
fwait
repnz
jne
imul
jecxz
mov
mov
hlt
and
pop
decl
or
xchg
cmp
pusha
jp
int3
add
rolb
fwait
movsl
out
addr16
cld
ljmp
insb
sbb
and
lock
mov
xchg
jae
pusha
mov
mov
lods
push
mov
jne
mov
mov
xchg
movsb
jmp
imul
sahf
add
sub
inc
and
inc
movsl
adcb
in
xchg
decl
jg
mov
push
addb
sbbl
mov
lcall
push
rcl
adc
jns
dec
add
mov
sbb
jo
leave
ds
dec
add
pop
clc
pushl
bound
jb
movsb
or
jl
jns
scas
ljmp
mov
ret
cmpsl
mov
cmp
loopne
mov
inc
loop
cld
rolb
xor
sbb
icebp
cmpsb
popw
decb
mov
loopne
mov
mov
adc
fwait
adcl
add
jae
popa
or
popa
or
add
xor
add
in
pushl
icebp
and
add
pushl
movsb
movsb
je
mov
into
inc
addr16
cmp
or
cmp
shlb
aad
dec
add
xor
fucomip
or
movsb
dec
jecxz
stc
loope
incl
dec
pop
inc
push
ret
sbb
out
aam
mov
out
decl
dec
iret
sub
sahf
adc
xchg
or
stos
xor
sub
cmpsb
mov
push
adc
gs
mov
jp
daa
sbb
jmp
dec
jp
pop
adc
insl
nopl
add
outsb
jns
int
ljmp
dec
mov
push
enter
mov
addl
jg
sub
xchg
jb
loop
insl
incb
pop
adcb
addr16
mov
jbe
xor
decl
in
pop
xor
ret
mov
movsl
pop
push
fcmovne
sbb
aad
out
addr16
mov
fld
subl
mov
clc
or
and
faddl
dec
cmp
cmpsb
xchg
pop
stos
fs
ljmp
inc
sub
and
fbstp
pop
push
inc
lcall
aad
mov
pop
insl
cld
ljmp
movsl
xor
dec
xor
add
dec
inc
cli
jg
outsl
subb
pcmpgtb
pop
pusha
cmp
sbb
adc
hlt
pop
outsb
mov
xlat
test
stos
xchg
icebp
jmp
nop
pop
jle
rolb
dec
push
iret
mov
dec
and
add
inc
or
xchg
jbe
lcall
pusha
or
into
push
movsl
dec
out
test
nop
push
dec
aaa
inc
push
lods
pop
push
cmp
scas
xor
decl
mov
jecxz
aas
mov
xchg
add
flds
or
dec
pop
adc
mov
cltd
jg
out
aaa
and
lret
test
dec
pop
sub
mov
push
pop
cld
les
aad
xor
das
ljmp
testl
sbb
xchg
cmp
pop
loope
pusha
sub
adc
out
fcom
adc
test
shrb
movsl
pushl
stos
jle
dec
xchg
xor
lahf
xor
mov
mov
fsub
xor
inc
div
addb
and
outsl
pusha
jecxz
test
mov
aaa
adc
loop
xor
aaa
lds
mov
add
fsub
les
rol
icebp
outsl
add
loope
inc
mov
xorl
jne
cmpl
cmc
mov
ljmp
jbe
sub
test
sub
push
outsl
outsl
push
dec
enter
cltd
and
xor
cmp
fcos
pop
je
inc
outsb
and
adc
jae
call
inc
mov
cld
stos
aas
dec
cmp
outsb
mov
loope
mov
push
call
lods
xlat
sbb
int3
ret
mov
cmp
cld
mov
xor
xchg
mov
sbb
mov
decb
leave
mov
filds
cltd
pop
adc
mov
sbb
lcall
rcll
adc
repnz
lea
xchg
inc
loop
bound
arpl
jl
inc
dec
clc
add
add
decl
enter
loope
adc
pop
inc
lcall
add
testl
je
mov
adc
decl
data16
popa
add
gs
add
pop
xlat
hlt
fucomip
add
sbb
xor
mov
arpl
push
push
pushl
test
popa
push
or
mov
push
mov
call
xchg
xchg
movsb
mov
or
push
movsb
sbb
and
jecxz
mov
nop
dec
pop
bound
jmp
inc
lcall
sub
mov
xchg
mov
scas
js
pop
jno
insb
mov
rcrb
inc
divl
sar
xor
add
mov
imul
mov
push
das
shl
lods
pop
js
and
pop
loopne
xor
dec
mov
test
lcall
mov
cltd
aas
int3
dec
adc
push
fcmovnu
dec
shll
fiaddl
inc
jg
push
incl
fstl
cmpb
imul
pop
aas
insb
push
aaa
mov
icebp
sahf
loop
xchg
inc
neg
dec
outsl
incl
loopne
loopne
pop
decl
jne
ret
pusha
rcr
in
push
ficomps
push
mov
clc
decl
out
clc
mov
lea
subb
ror
in
push
jmp
pop
mov
adc
or
push
and
scas
stos
adc
push
imul
push
std
jg
pop
mov
mov
jl
cmpsl
pop
or
add
sub
xchg
pusha
stos
pop
push
push
jecxz
scas
inc
dec
mov
stos
cmc
dec
mov
fldenv
pushf
pop
and
inc
sub
mov
xchg
nop
mov
scas
scas
pop
jne
mov
js
mov
mov
mov
inc
push
bound
pop
pop
in
rcll
or
les
test
add
nop
cld
inc
movsb
mov
cld
and
cli
xor
push
sub
push
mov
icebp
jl
pop
std
adc
insb
test
pop
mov
stos
add
int3
sbb
scas
bound
cmp
aas
insb
inc
or
lea
add
cmp
xchg
call
idivb
enter
mov
lcall
mov
insb
mov
and
clc
incl
js
mov
xchg
int
xor
popa
cwtl
int3
addr16
mov
test
sub
jno
out
mov
mov
je
rcll
pop
out
call
lahf
mov
sub
cmp
push
xor
aad
pop
out
xor
xor
outsl
add
jnp
add
push
inc
pop
pop
sbb
call
pop
push
pop
jo
inc
mov
movsl
push
mov
sub
and
mov
daa
sti
test
imul
xchg
jle
cld
xchg
mov
adc
mov
add
add
js
repnz
mov
std
leave
inc
gs
aam
and
cld
movb
out
pusha
adc
mov
stc
sarl
pop
clc
sbb
dec
aas
pushf
inc
mov
enter
cs
lcall
in
mov
int
enter
pop
add
aam
shl
xchg
data16
lea
mov
adc
jl
and
dec
leave
int3
add
daa
inc
and
rcrl
filds
push
int3
push
xchg
in
sbb
movl
adc
lods
mov
or
mov
jno
mov
sub
cmc
iret
mov
and
xchg
ret
subb
mulb
sbb
push
mov
pop
xor
aad
lret
dec
fcmovne
mov
xor
xor
inc
shl
in
mov
cld
mov
lock
jmp
mov
dec
xchg
lds
xlat
js
jbe
psubusw
out
add
jmp
movsl
jmp
sbb
cmpsb
push
pushl
enter
add
fcoml
repnz
jo
inc
mov
leave
idivb
aas
pop
les
stos
xchg
inc
dec
outsb
mov
in
sbbb
mov
mov
pop
cli
nop
cmpsl
pop
inc
loope
outsb
ret
fs
mov
addr16
cmp
mov
inc
or
push
sub
scas
jnp
aad
add
mov
aas
andb
mov
fsts
mov
inc
outsb
pop
jno
and
clc
lcall
sub
int
inc
and
stos
sbb
add
sbb
jbe
push
out
xor
jle
pop
sub
decl
mov
or
mov
jl
fstps
nop
filds
aas
jmp
andl
scas
popl
or
push
orb
stos
cmp
sti
scas
aam
xchg
and
dec
sbb
mov
xchg
lods
add
ljmp
add
decl
cmpsb
and
mov
ficomps
inc
push
bound
cmp
bound
xchg
das
inc
mov
xor
das
out
je
test
adc
xchg
push
xchg
lcall
cmp
test
call
mull
dec
cli
sbb
fwait
ljmp
lcall
lock
jmp
mov
or
add
and
test
aaa
pop
leave
jbe
adc
xchg
cmp
dec
loope
das
icebp
mov
cli
fcomp
lock
mov
dec
cld
call
int3
test
rcl
bound
fcmovnu
clc
add
pop
test
popa
out
lret
jo
xor
pop
xchg
mov
mov
sub
test
jmp
popf
mov
jle
pop
add
test
pusha
fadds
xchg
pop
pop
xor
adc
sbb
das
jmp
pop
insb
cli
js
cld
jmp
jg
aaa
mov
xor
jnp
pusha
stc
orl
cld
sbb
pushf
mov
rolb
pop
push
out
shll
jle
mov
cwtl
jg
ss
inc
xrelease
outsl
mov
mov
cmpsl
or
notl
test
push
subb
es
cli
jg
mov
sbb
les
fists
xchg
insb
and
into
filds
mov
sub
mov
into
inc
loopne
sbbb
mov
sub
xchg
mov
or
sti
call
les
cs
mov
std
jns
xchg
shld
arpl
push
imul
xchg
jle
cmp
adc
rcll
cld
inc
pop
push
ss
push
and
insb
add
pop
xor
enter
int
pop
and
mov
lods
into
test
fsubrl
sbb
cmp
test
sub
inc
scas
pushf
mov
xor
cmp
inc
lret
add
adc
cld
es
fs
iret
pop
loop
inc
or
shl
or
icebp
add
mov
adc
aaa
or
sar
jle
gs
movsl
mov
mov
jecxz
push
cmp
lret
fs
pop
lret
pop
or
or
or
or
das
sub
jns
stos
push
xor
das
sub
push
bound
jg
jg
out
inc
cmp
enter
test
loopne
mov
pop
rorb
ret
je
cmp
jno
or
ret
inc
popf
movsb
dec
test
stos
jg
jmp
testb
mov
scas
mov
incl
push
nop
popa
addl
push
lock
cmpb
mov
cmp
rolb
fists
call
in
psrlq
mov
sub
hlt
ljmp
or
test
xchg
imul
inc
je
andb
mov
adc
inc
xor
push
xor
sbb
stos
aas
cmp
aad
ja
daa
lods
ljmp
decl
and
fistpll
pop
inc
add
mov
push
and
inc
pop
test
pop
xchg
repnz
pushf
clc
daa
push
or
push
outsl
sub
cwtl
mov
and
movq
and
sbb
in
mov
fnstsw
add
mov
test
rcrl
lea
stos
or
add
fnstcw
sbb
push
lcall
xchg
stos
xor
inc
in
and
cmp
or
aaa
hlt
into
gs
sbb
les
aad
negl
ja
push
sub
and
mov
lds
mov
pop
jmp
loopne
sbb
pop
sar
test
pop
cmpsb
mov
mov
lock
cmpl
insb
sbb
mov
das
cltd
cmpsb
or
sbb
mov
mov
fwait
cmc
xchg
mov
loope
cld
sub
aas
stc
lock
movsb
sarb
inc
lods
add
ja
test
pushf
loop
imul
sub
add
loope
cmp
xchg
and
hlt
cs
mov
mov
in
int3
mov
adc
mov
mov
lds
push
aam
or
cmp
pop
push
jnp
inc
test
popa
lret
pop
mov
add
sahf
arpl
sbb
outsb
loopne
sub
add
adc
out
add
add
xor
mov
imul
or
adcb
mov
ss
mov
imul
xor
mov
sbb
adc
test
or
out
or
cmp
cwtl
iret
pop
inc
jb
test
xor
enter
movsb
clc
lret
inc
jmp
std
pop
fwait
adc
and
jl
lds
outsl
outsl
dec
test
sub
dec
jg
mov
pop
ficoms
pusha
cld
fsub
add
dec
push
int3
sub
in
inc
fnstsw
idivl
rol
mov
pusha
add
inc
mov
fmuls
dec
in
fisubrs
mov
pusha
push
in
das
add
push
das
pop
addb
loope
push
or
shll
push
insl
add
sub
stos
dec
and
or
inc
cmp
xor
dec
stos
lds
dec
pop
rolb
add
add
decb
or
insl
mov
push
loopne
push
push
adcl
dec
stc
pop
or
mov
sub
shl
sbb
ds
imul
or
jp
push
push
ficoms
out
lcall
cli
adc
shlb
fidivrl
mov
sub
add
sbb
mov
pop
jae
mull
push
push
orb
inc
rolb
dec
lock
gs
or
pop
dec
add
adc
lcall
cld
test
mov
pusha
andb
jecxz
and
inc
frstor
fdivrs
cmpsb
jg
cmp
dec
div
and
push
push
push
push
mov
fsubrs
jae
jge
jmp
sar
rclb
jmp
adc
xor
dec
incl
lcall
add
jo
inc
pushf
xchg
xchg
ds
xor
push
push
fwait
and
filds
jns
sub
dec
xor
inc
pop
jp
jne
adc
jmp
icebp
mov
push
sub
mov
aad
pop
loopne
hlt
in
mov
sub
in
and
adc
push
mov
fwait
or
bound
inc
movb
sub
outsl
rcrl
xchg
push
sub
ja
adc
sahf
xor
incl
push
test
pusha
sbb
adc
sub
lods
outsb
xchg
sar
dec
or
and
es
ljmp
mov
xor
mov
inc
mov
or
popf
filds
sbb
mulb
mov
dec
stc
mov
cli
pushl
add
mov
repz
hlt
mov
xor
das
jo
or
fxch
dec
xor
decl
sbb
adc
dec
popf
xchg
andl
cmp
xchg
jno
inc
ret
pop
lods
push
lods
and
decl
daa
and
sub
out
repz
lret
add
lcall
ss
popa
adc
daa
fwait
rolb
aam
xor
jno
pop
loop
push
cmp
mov
cltd
pop
bound
or
mov
mov
dec
and
cmp
fwait
xchg
sub
push
lahf
cmp
jg
pop
add
into
xchg
aaa
sub
and
jle
and
fucomip
shll
cli
dec
push
movb
imul
mov
adc
add
loop
pop
icebp
add
dec
bound
test
cmp
stos
push
push
xchg
int
idivl
cld
and
sti
inc
push
xchg
call
xchg
clc
adc
pusha
jle
addr16
push
cwtl
flds
das
inc
out
cmp
adc
ljmp
add
push
subl
test
int3
xchg
lcall
push
add
outsb
xchg
cmp
dec
in
or
sbb
dec
and
clc
pop
cld
sub
xchg
inc
clc
stos
and
bound
cmpsl
and
dec
cmp
xchg
cli
incl
lret
mov
or
push
fldt
mov
sub
pop
ret
gs
icebp
or
push
mov
or
and
out
stos
scas
add
mov
or
xchg
into
cmpb
mov
or
mov
cli
pop
mov
shrb
inc
cmpsb
pop
fs
xchg
xchg
push
and
adc
pop
sub
xor
mov
push
pop
ret
pushl
lods
xor
in
jno
subb
mov
pushf
ret
aam
imul
add
mov
cmc
jns
xchg
testb
outsl
scas
nop
rclb
sub
jg
xchg
in
xchg
popa
and
push
pop
push
push
cld
dec
add
fistl
es
mov
push
jl
jmp
dec
and
imul
hlt
mov
dec
sbb
in
mov
xor
sub
jecxz
daa
add
mov
add
mov
inc
xchg
lock
push
divb
adc
and
lcall
mov
push
and
ficompl
sbb
data16
loope
push
repnz
imul
dec
std
mov
int3
and
lods
in
mov
mov
js
flds
jnp
lods
loopne
sbb
sub
in
push
mov
sub
sti
mov
in
mov
outsl
test
lods
lea
jnp
jae
enter
xchg
cmc
inc
filds
lock
pop
mov
xor
lcallw
dec
ret
ljmp
pushf
js
pop
sbb
aad
lcall
jmp
hlt
adc
andb
cmpsl
or
fwait
enter
push
sbb
mov
sub
fmull
mov
or
and
dec
sahf
sub
cmp
rolb
arpl
loopne
and
imul
enter
sub
mov
xchg
dec
mov
xchg
mov
jl
sub
aaa
out
jle
call
cmp
push
ja
pop
jmp
scas
cmp
iret
pop
loopne
add
test
sub
lds
cmovns
jmp
mov
jecxz
jae
loope
fsubs
insb
out
aad
out
out
or
jg
test
and
inc
sahf
das
les
cli
ljmp
nop
mov
shlb
xor
or
mov
lret
jo
jne
pop
push
cmp
xor
jle
mov
pushf
mov
andl
fdivrs
adc
xchg
jmp
mov
inc
icebp
push
jg
inc
je
insl
sub
push
loopne
or
ljmp
cli
lea
push
sbb
in
pop
clc
xchg
jns
inc
orb
add
xchg
pop
scas
sar
lods
lods
outsb
mov
and
insb
add
cli
jg
mov
mov
xchg
add
hlt
fs
pusha
ljmp
mov
sub
cs
pop
push
and
lods
shlb
clc
jg
add
cmp
and
lea
jl
or
push
imul
sub
mov
cli
and
xchg
cld
bound
push
mov
lods
ljmp
sbb
subb
stc
xchg
dec
out
hlt
mov
jmp
adc
or
lods
pop
mov
lahf
cld
inc
daa
cmp
in
dec
or
xor
fcomps
inc
nop
sbb
dec
inc
mov
cld
xchg
addb
xchg
inc
cmpl
rcl
pop
cltd
mov
fimull
push
mov
inc
lret
dec
mov
bound
sub
cs
add
xlat
lock
imul
adc
cmpsb
mov
mov
and
xor
insb
mov
sbb
pop
cmp
inc
adcl
sbb
fucomip
in
fdivrl
mov
icebp
test
cmp
add
in
dec
pop
mov
js
sti
cmpsb
push
and
or
mov
xlat
jo
dec
lds
xchg
and
movsb
mov
pop
mov
push
xchg
rcr
xchg
test
out
and
call
inc
pushf
decb
sbb
add
mov
mov
or
lret
xor
xor
cmp
and
roll
adc
stc
ret
sbb
lock
jo
insb
sub
cmp
js
push
mov
mov
dec
add
push
push
add
ret
loope
rcll
sbb
or
push
pop
xchg
or
mov
les
addr16
test
mov
arpl
cmp
sbbl
mov
dec
cmp
cmp
dec
push
cmp
daa
ds
pop
call
outsl
ljmp
push
jns
and
mov
inc
push
jecxz
jne
testl
lods
add
leave
mov
sbb
xor
sahf
add
stos
lock
mov
mov
hlt
int
sbb
je
cmc
pop
lds
inc
and
loopne
inc
mov
sbb
insl
mov
push
repz
cli
das
sbb
xor
orw
jo
dec
mov
rolb
call
lock
xchg
add
jl
jbe
pop
negl
and
adc
mov
jb
ret
adc
sub
and
int
push
call
inc
shlb
xor
push
dec
orb
fidivrs
push
mov
xor
adc
inc
pop
push
xor
rcrb
fcoml
mov
popf
sub
cld
push
adc
mov
repnz
mov
and
sbb
jne
mov
aas
add
dec
mov
scas
aaa
sbb
pop
or
fimuls
mov
push
xchg
and
stos
sub
mov
jl
push
push
lods
ss
in
push
push
cmp
hlt
in
int3
std
mov
or
push
sti
xchg
xchg
add
pop
inc
lahf
add
mov
add
fsubr
leave
push
jo
aaa
jb
or
ds
sbb
fcoms
addb
pop
push
js
loopne
imull
add
flds
or
fadds
data16
inc
sub
jmp
popa
clc
xchg
clc
dec
push
cltd
cmp
dec
mov
dec
xchg
inc
or
jno
iret
add
fsubl
add
push
hlt
and
pusha
ror
add
add
clc
mov
dec
dec
and
aam
ror
or
jge
pop
in
jge
adc
sub
jae
adc
add
in
add
je
aaa
mov
enter
push
mov
mull
je
or
fadd
clc
es
test
outsb
mov
and
sub
sahf
sbb
rorl
testb
aam
cltd
mov
cmp
loope
inc
pop
adc
fdivrl
cwtl
add
loopne
push
fcompl
icebp
mov
loope
pop
cwtl
xor
adc
dec
scas
xor
cwtl
ljmp
pop
or
ret
or
dec
rorb
mov
and
mov
out
xor
loopne
push
push
repz
arpl
ret
out
jmp
fnstcw
pusha
jp
insb
mov
addr16
mul
pop
movsl
pop
add
or
jnp
cli
and
pop
dec
cmpsb
sub
cmp
negb
stc
and
xchg
movb
aam
or
inc
sub
int
fldt
addr16
push
push
xor
xchg
mov
ss
add
push
or
push
out
push
scas
dec
or
adc
xchg
lods
push
stos
mov
scas
fidivrl
or
call
push
sbb
loopne
pop
test
cmpsl
pop
lret
mov
add
cmpl
and
add
insl
mov
xor
push
pushl
jb
les
dec
mov
push
ljmp
insb
pusha
cli
iret
bnd
int
mov
dec
mov
dec
xor
inc
mov
sub
decl
sbb
xchg
in
aas
int
push
dec
xchg
jbe
call
mov
push
or
mov
jo
test
cmp
into
insb
dec
repz
das
push
lcall
daa
arpl
rclb
push
cmpsl
lods
loop
in
mov
call
xchg
cmp
and
mov
push
mov
in
das
aad
add
or
and
push
or
dec
inc
and
aad
jnp
dec
push
inc
jg
sbb
pushf
lock
or
push
or
adc
fs
add
int
mov
xlat
pusha
loope
inc
jnp
sub
adc
fadds
jnp,pt
xchg
test
or
sbb
push
add
add
jnp
daa
cmp
jmp
in
shlb
add
roll
sub
std
filds
push
aaa
mov
ljmp
add
sub
ljmp
sub
lods
mov
adc
adc
pop
in
jp
int3
sbbl
or
ss
fisttpl
cmpb
mov
loope
test
dec
sbb
push
cmp
or
inc
cld
iret
ret
jnp
clc
mov
cmp
andb
lea
cmp
stos
jg
xchg
xchg
sbb
es
adc
mov
cmpsb
xor
pop
mov
and
iret
xor
mov
mov
pop
in
or
mov
sbb
mov
call
bound
clc
je
add
clc
and
mov
imul
loop
testb
rolb
inc
insl
push
or
loop
and
inc
addr16
fucomip
jg
pop
loopne
fs
sarb
mov
mov
movb
std
incl
inc
lods
lret
cmpsl
mov
cmpsb
xor
inc
inc
inc
sub
loopne
cld
and
inc
xchg
call
or
xor
dec
sbb
cmpsl
loopne
lahf
fstpl
outsl
cld
mov
mov
inc
sub
lods
cmc
inc
xor
call
sub
insl
outsb
mov
pop
inc
in
and
sub
mov
push
push
xor
add
icebp
int3
mov
call
dec
dec
in
pop
or
ljmp
inc
inc
subl
lahf
inc
push
out
stos
test
stos
mov
insb
sti
add
outsl
ljmp
test
pop
dec
insb
sbb
inc
inc
pop
add
cld
inc
hlt
mov
add
inc
outsl
incl
fcomps
inc
ret
mov
mov
xchg
push
sbb
mov
push
ret
adc
insl
fistpll
mov
std
jmp
bound
adc
sub
cwtl
or
inc
leave
add
cli
xchg
pop
xor
lahf
ret
push
rorl
adc
or
ret
sub
or
dec
sub
lret
imulb
sub
add
mov
add
insl
sbb
ljmp
add
stos
cltd
or
mov
pop
inc
rcrb
mov
push
mov
jl
outsl
rcrl
insb
outsb
fstl
jmp
xor
incl
loop
mov
je
mov
mov
decl
dec
inc
inc
mov
push
insb
incl
ss
push
ds
add
cmp
and
cmpb
in
add
call
cmc
cs
sub
sub
xor
rcrl
sar
decl
movb
movsb
ret
and
cmp
mov
pushl
lahf
jne
rcrl
inc
aam
and
lods
loopne
add
lahf
pop
addb
inc
inc
movsb
out
pop
roll
sti
mov
mov
mov
inc
jmp
or
add
test
loop
dec
int3
sub
in
mov
js
jo
lcall
andb
mov
stos
sbb
or
cmpsl
mov
push
in
jbe
sub
jg
jnp
xchg
std
test
sbb
xorb
add
std
cwtl
xchg
sarb
test
aaa
sub
pop
inc
cld
or
mov
cmpw
rorb
nop
aas
pop
push
cmp
jle
xor
cmp
jnp
mov
sub
xchg
or
bound
icebp
mov
add
inc
addr16
or
rclb
sahf
and
call
and
add
in
scas
sbb
jecxz
fidivl
sub
mov
shr
pop
cmp
mov
adc
cmpl
ds
fisttpll
mov
sub
mov
std
insb
cmp
lds
push
outsb
cmp
iret
xchg
xchg
imul
and
inc
pusha
add
and
test
push
mov
mov
shll
push
in
adc
into
dec
push
add
add
xor
rorb
sbbl
inc
popf
jae
inc
cmc
push
scas
hlt
jg
scas
add
jmp
loop
inc
stos
pop
test
xchg
adc
dec
je
imul
aaa
inc
mov
cmpsb
cmpsl
stos
jnp
cmpb
xor
jnp
jp
sub
jge
adc
lock
sbb
mov
xchg
cmp
mov
push
loop
adc
in
clc
cmp
jecxz
dec
mov
xor
mov
mov
decl
subb
pop
inc
mov
out
cs
inc
jno
sub
decl
jg
add
sbb
push
les
stc
out
mov
push
push
or
xor
jno
jbe
jg
pop
stos
jecxz
jle
out
add
xchg
mov
shl
add
inc
ljmp
dec
jge
xchg
fstp
add
jnp
dec
call
jg
mov
movsb
ja
mov
adc
lret
add
inc
jno
add
jb
mov
aas
les
mov
inc
enter
add
mov
sbb
jbe
mov
cmp
faddl
cld
imulb
cmp
sbb
cmp
enter
outsl
push
dec
repnz
sbb
adc
cmpl
pop
mov
inc
fsub
mov
ljmp
or
fcoms
mov
insb
push
and
dec
xchg
pop
divb
popa
cmp
mov
sbb
dec
daa
pusha
xchg
div
cmp
add
dec
jecxz
lock
add
lods
mov
pop
xor
sarl
mov
mov
dec
negl
lds
mov
daa
adc
or
mov
aas
shll
ret
mov
hlt
push
into
sub
add
imul
repnz
stos
push
lods
xor
lock
std
out
aaa
std
or
sub
fildl
ljmp
xchg
call
repz
xlat
mov
mov
mov
rcrb
les
mov
stos
aaa
jmp
inc
and
incl
mov
and
mov
push
mov
adc
js
inc
sbb
inc
dec
mov
jmp
test
adc
lods
ret
nop
hlt
clc
ret
roll
jmp
mov
or
cmp
arpl
xchg
xor
orb
add
pop
fistl
cmpsb
test
jno
add
push
in
mov
cmpsb
lret
out
mov
decb
imul
mov
xor
inc
and
js
jne
mov
mov
cwtl
mov
cmp
sub
push
jle
mov
aad
and
js
std
pop
pop
pop
adc
pop
lret
add
inc
loopne
sub
pop
fwait
push
fidivrs
clc
push
add
or
push
cmp
inc
add
call
std
and
ljmp
jae
add
sub
daa
stos
push
mov
fcomps
cmp
es
lcall
decl
push
mov
sbb
adc
pop
cld
call
jne
stos
mov
or
xchg
push
xchg
add
sub
dec
sub
call
das
dec
imul
add
fdivrs
or
sbb
mov
sub
repz
mulb
fs
sub
adc
dec
outsl
mov
add
clc
ja
jmp
add
xor
dec
lds
mov
mov
jo
push
xchg
xor
imul
cld
jo
repz
mov
out
inc
and
cwtl
adc
mov
lret
jge
out
pop
insb
filds
mov
push
xor
push
pop
xor
nop
or
add
sahf
clc
sarb
inc
addl
int
idiv
jae
cmp
sub
fs
add
std
xchg
sbb
mov
cld
decl
adcb
adc
mov
out
mov
lahf
adc
roll
push
pushf
addb
icebp
push
add
jle
sbb
repz
scas
es
push
call
out
mov
outsl
in
xchg
mov
js
inc
sbb
lock
pop
add
dec
arpl
jg
in
icebp
shlb
add
fcomps
dec
pop
add
pop
xchg
xchg
sub
in
sbb
jg
and
xchg
adc
ljmp
mov
bound
add
dec
out
push
adc
mov
icebp
jge
cmp
xor
fmuls
add
mov
arpl
jns
cwtl
and
push
add
lcall
and
pop
scas
sub
decl
push
pushf
addr16
cld
inc
mov
mov
add
std
sbbl
adc
int
jl
test
loopne
inc
pusha
cmp
mov
add
loopne
mov
outsl
cld
ljmp
inc
test
push
mov
ja
and
lahf
add
xchg
nop
ret
ss
ret
xor
or
xchg
push
dec
xorb
leave
jbe
pop
cld
xchg
test
arpl
cwtl
pop
sub
dec
in
cmpsl
ret
movsl
xchg
mov
mov
pop
xchg
pop
cld
add
jmp
push
das
jnp
mov
decl
push
xor
cli
push
movsb
cmp
lods
lret
mov
jle
call
imul
sbb
and
stc
shrb
cld
and
cld
add
cmpsb
jl
data16
cs
inc
sub
cmp
ret
mov
jle
adc
pushf
std
fsubs
cmp
outsl
jbe
in
add
xchg
lcall
je
add
sub
imul
loop
fs
or
add
jecxz
test
inc
std
orl
lods
subb
scas
mov
dec
into
in
inc
aad
pop
or
aad
fimuls
or
mov
cmp
call
jg
bound
or
xchg
push
push
bound
dec
in
inc
call
mov
pop
push
add
out
les
test
sbb
adc
test
mov
xor
flds
sbb
mov
loopne,pn
lock
les
lcall
adc
stc
and
jmp
aad
iret
mov
jle
and
jl
add
das
push
clc
pushf
or
mov
inc
sbb
sbb
adc
scas
mov
or
ljmp
outsb
pop
dec
loopne
sub
jecxz
lret
xchg
push
cmp
adc
jp,pn
xchg
push
insl
push
push
dec
and
ja
das
mov
scas
nop
and
add
leave
mov
push
mov
lahf
mov
in
xor
loope
push
mov
inc
pop
jecxz
push
insb
loopne
pop
arpl
jp
repz
subl
cld
sub
and
ds
clc
aas
incl
sbb
xchg
out
subb
xor
mov
sbb
push
je
lods
je
xchg
push
adc
insb
icebp
aaa
dec
mov
pop
lods
pop
mov
or
sub
out
jmp
jb
or
outsl
jg
push
cmp
jmp
jl
test
xchg
sbb
test
adcl
enter
add
sub
add
loop
pop
add
incl
xor
neg
lcall
dec
adc
pop
mov
fimull
mov
jne
dec
out
pop
xor
pop
or
sub
add
or
fildl
sub
cmpsl
or
jmp
add
sbb
sub
addr16
mov
push
repz
ror
mov
add
incl
and
dec
adc
jmp
dec
pop
dec
mov
adc
dec
mov
mov
test
pop
xor
or
add
push
xchg
adc
mov
mov
ss
out
jae
lahf
dec
mov
movsb
decb
mov
pop
push
mov
imul
bound
xor
mov
rolb
add
and
push
in
lds
repnz
repz
sarb
ss
pop
rolb
shlb
mov
mov
adc
jbe
add
fdivrp
addr16
out
popf
sbb
mov
shlb
xorl
sub
mov
pop
rcr
inc
les
mov
rolb
add
popf
bound
adc
fstpl
aas
xor
pop
int3
xchg
inc
xor
repz
add
int3
lea
push
push
and
xor
cmpsb
jecxz
andb
shrl
adc
sub
mov
leave
mov
dec
and
inc
in
adc
and
mov
mov
lock
adc
add
mov
dec
lods
cmc
cmp
sub
jle
and
and
es
js
test
enter
daa
sar
ret
js
add
and
inc
dec
inc
xor
test
ljmp
sbbb
ss
ret
addr16
std
xchg
push
daa
mov
or
shlb
ss
push
mov
es
cmp
fnstenv
int
mov
shlb
pop
cli
xchg
mov
fadds
dec
xchg
jo
js
push
mov
push
ffreep
sub
adc
adc
movsl
jns
call
lcall
jno
int3
sub
outsl
movsl
decb
add
gs
jg
pop
push
iret
rcll
xorb
mov
jg
fwait
jg
push
add
sub
outsb
or
scas
cwtl
mov
jle
sarb
dec
mov
push
and
loopne
mov
xor
mov
call
and
aad
clc
mov
subl
mov
stc
dec
std
cmp
cmp
les
addr16
add
loop
das
dec
adc
out
sbb
les
sbb
rcll
mov
and
jp
scas
std
call
outsl
adc
add
ficompl
or
aas
inc
icebp
outsl
add
mov
shr
mov
ds
push
rcrb
rcrl
xchg
mov
aad
insb
or
paddd
dec
inc
lcall
sub
icebp
push
sub
add
or
inc
adc
xor
jg
pop
inc
sti
fisubrs
sbb
inc
inc
sarl
fcmovnb
lret
pusha
mov
or
lock
mov
test
jg
aad
stos
push
cmp
push
outsb
dec
and
fnstcw
movsl
or
lcall
or
fucomip
fistpl
sub
adc
into
aaa
pop
loop
dec
or
push
inc
inc
clc
and
test
pop
jg
jb
aas
out
pop
orb
mov
xor
xchg
mov
aaa
pusha
gs
or
incl
pop
orl
aas
cli
adc
subl
test
adcl
loop
dec
add
addl
aas
inc
dec
das
std
out
les
add
nop
pusha
mov
lcall
pop
xor
xchg
mov
cs
push
test
das
push
jle
or
test
push
dec
ret
pusha
clc
add
sbb
jg
mov
and
cmp
lds
inc
loop
cmp
ss
loopne
add
int3
sub
test
add
push
adc
xchg
or
stos
stc
cli
in
gs
rorl
mov
xor
sub
in
repnz
adc
sub
pop
push
push
cld
mov
sub
adc
adc
repz
jns
mov
push
jb
fcmovu
push
fnstcw
movsl
and
inc
and
jmp
sbb
repnz
dec
jl
sbb
pop
cld
ja
lsl
mov
out
adc
mov
outsl
ret
scas
test
add
cmpsb
push
xor
or
iret
insw
cmc
in
shll
push
ss
lcall
decl
adc
jo
xor
fildll
inc
mov
pop
mov
inc
shrb
adc
lret
sub
pop
fs
movsl
hlt
pop
icebp
jg
sbb
outsb
mov
int3
les
mov
push
jmp
xchg
movl
mov
xor
pop
stc
lret
scas
sub
and
test
xchg
push
cmpsb
or
cmc
aas
sub
out
mov
mov
ljmp
int
inc
ret
add
jne
jl
fistps
inc
mov
loopne
mov
jl
clc
fwait
push
out
dec
cvtps2pd
aaa
rclb
lea
push
jg
push
cltd
pusha
push
push
inc
xchg
pop
cmp
cld
call
lret
cmp
push
xchg
jl
mov
mov
push
or
jecxz
rolb
mov
das
mov
add
inc
pop
into
lret
mov
sbb
mov
scas
gs
cmp
lret
mov
pushf
push
mov
and
add
push
imul
or
add
call
lcall
xchg
cli
lret
in
addr16
jb
mov
loop
jle
dec
sti
sbb
das
or
xchg
or
and
ljmp
cld
stc
stos
inc
lods
dec
pop
aaa
outsb
sub
mov
imul
and
push
and
and
sbb
xchg
cmp
and
lret
jg
std
cmpsl
sar
dec
sbb
push
sbb
or
and
xchg
in
lds
mov
rorb
sti
and
sbb
lea
mov
cmp
mov
test
sbb
and
adc
outsl
cltd
fwait
ja
push
mov
mulb
sbbl
sar
dec
lock
xchg
and
mov
lock
fildll
inc
je
aam
sar
icebp
xlat
inc
lds
pop
xchg
pop
sub
xor
dec
dec
mov
push
mov
mov
fistl
and
xchg
jl
pop
or
divb
mov
add
cld
adcl
dec
dec
and
lret
popa
add
icebp
push
clc
fcomip
sbb
jns
lret
push
inc
xor
push
sahf
mov
outsl
fstpt
push
xor
ds
push
arpl
dec
leave
nop
cmp
add
cmp
or
sbb
test
shlb
xchg
push
or
dec
pop
shrl
mov
pushf
movsb
and
and
dec
sar
shrb
push
cmp
inc
push
js
mov
jg
int3
pop
push
dec
enter
sub
cld
cmp
inc
andb
cmp
incl
inc
lret
pop
xor
mov
add
mov
and
int
push
add
pop
sub
rcrb
paddsb
push
stos
inc
call
sahf
fldl
loopne
xor
js
movsl
mov
add
fnstenv
stc
in
dec
movsl
int
movsl
loop
test
jge
push
pop
shlb
mov
push
mov
ljmp
mov
movsb
and
adc
sbbb
mov
or
mov
iret
fdivl
adc
loopne
das
mov
adc
adc
and
cwtl
inc
out
sbb
adc
mov
fmul
mov
mov
mov
mov
sub
or
push
stos
inc
std
cmpsb
fdivs
das
cmc
filds
lds
xchg
sub
cmpb
add
mov
fnstcw
add
fistps
add
daa
inc
shlb
sub
les
mov
pusha
pop
or
push
sub
add
fsts
ljmp
test
int3
push
cmp
xchg
xchg
insl
incb
pop
cwtl
push
push
jp
mov
push
ret
adc
add
and
or
push
add
mov
out
add
jecxz
or
adc
imul
int
xlat
pop
push
mov
sahf
mul
orb
cmp
add
pop
mov
cld
sbb
sbb
inc
popf
or
mov
cmp
add
pop
xlat
rcrb
cmp
frstor
add
sub
sbb
or
add
pop
adc
divl
mov
call
imul
rclb
push
pop
pop
xchg
mov
pop
lea
pop
roll
filds
or
xchg
neg
xor
gs
pop
pop
jo
out
lret
add
filds
push
push
dec
cmpsb
ret
popa
fsubr
pop
insl
lcall
cmpsl
in
movsb
data16
push
adc
imul
stos
cli
inc
lea
sbb
add
push
loopne
fisttpl
test
jmp
dec
sbb
and
adc
pop
sar
dec
add
stos
and
sub
mov
cmp
int
sub
sub
pop
ss
xabort
cltd
cld
call
call
or
int
pushf
stos
aam
roll
sub
fisubrl
out
or
adc
xchg
pop
inc
sbb
and
jae
sub
call
incl
dec
push
push
inc
jl
sbb
add
inc
aas
and
pop
movsb
sbb
das
jns
pop
in
aaa
push
cltd
pop
push
adc
push
mov
pop
out
mov
mov
push
sub
jne
pop
push
jecxz
jg
lcall
push
arpl
dec
sub
and
pop
je
mov
cmp
fbstp
pop
ljmp
bound
sar
jg
xor
sbb
add
js
adc
int3
std
adc
orb
push
les
mov
xchg
inc
cld
ljmp
xchg
lretw
cwtl
push
pop
jae
sbb
jno
mov
xchg
test
mov
mov
and
or
pop
dec
add
add
les
sub
fs
bound
sub
adcb
pop
and
xchg
cli
mov
adc
mov
sahf
in
xchg
movsl
test
adc
mov
pop
addl
les
ret
jg
jl
out
cltd
sbb
roll
or
and
jmp
mov
mov
pop
pminub
push
xor
sbb
cmp
pop
pop
xor
mov
loope
aam
das
mov
dec
push
sub
and
xchg
mov
jecxz
mov
add
adc
jl
push
mov
xchg
or
jg
fiaddl
xchg
cltd
jo
stc
xor
lahf
inc
js
clc
jg
bound
test
stos
add
mov
add
std
xchg
aas
mov
jmp
inc
push
out
lea
add
je
mov
cmp
je
sbb
push
xorl
xchg
xchg
push
jbe
orl
sub
adc
mov
imul
daa
mov
loope
mov
orl
mov
sub
mov
mov
push
sub
loopnew
pop
in
outsl
mov
call
sub
icebp
ljmp
pop
pop
or
out
shlb
sahf
ja
fsubr
or
loop
test
lods
lahf
sqrtps
lahf
inc
rcll
mov
mov
icebp
lea
push
sub
cli
jns
jecxz
inc
sahf
mov
sub
pop
fstl
sbb
shrl
data16
xchg
jg
pop
mov
js
addl
jle
xlat
outsb
and
call
pop
cli
jbe
sahf
sbb
dec
sti
pop
add
or
or
or
adc
test
add
arpl
in
outsl
clc
mov
mov
icebp
loope
jg
addr16
ja
mov
jmp
inc
test
out
mov
mov
inc
fdivr
push
rcr
out
sbbl
out
xchg
fildl
push
mov
in
aas
leave
mov
add
clc
daa
or
xor
or
aaa
hlt
popa
adc
loop
cwtl
int3
cmp
mov
dec
shl
xchg
int3
fistl
dec
push
push
push
sar
mov
xchg
stos
aas
mov
jge
ret
mov
cmpsl
icebp
jg
lea
iret
nop
lret
dec
pop
std
dec
popa
mov
loopne
int
and
enter
jb
ja
mov
sub
pop
out
sub
pop
xchg
xchg
shl
jg
adc
sub
loopne
loope
shlb
mov
sbb
cld
and
pop
out
sti
decl
mov
add
out
push
test
addr16
dec
jg
pop
jns
dec
cwtl
lods
rclb
std
xchg
jle
adc
cld
es
das
std
mov
add
push
push
and
sub
cmpb
popf
push
fcmove
aas
jmp
jmp
jns
dec
inc
mov
mov
pushf
cmp
mov
test
loop
popa
pop
cmpl
xorb
dec
std
ljmp
cwtl
mov
dec
dec
lret
inc
inc
incl
call
xor
out
mov
decl
std
addl
add
mov
add
ret
movsl
mov
add
adc
clc
lcall
sti
fbstp
call
lahf
jg
orl
and
and
repnz
in
mov
subl
cmp
jmp
in
mov
xor
jb
push
adc
or
mov
jge
stos
jne
pop
call
push
jecxz
cmp
inc
xor
lret
lock
pop
xor
mov
or
stos
fistpll
std
jl
aam
xchg
jecxz
and
call
or
mov
jae
xchg
filds
mov
adc
pop
sbb
lcall
jmp
pop
ret
or
addr16
and
fs
pmuludq
push
incl
sbb
jmp
pop
add
sub
cmpsl
sbb
mov
mov
sti
or
clc
pusha
call
shufps
xor
scas
loopne
push
inc
sar
sub
setl
xor
push
and
dec
insl
cld
out
cmc
sbb
or
cli
jp
in
sub
lea
mov
pop
outsb
cltd
lcall
jno
add
iret
ja
inc
inc
mov
fcmovb
inc
xorb
adcb
test
mov
lods
mov
pop
push
xchg
daa
inc
jae
inc
mov
repz
add
icebp
aaa
fstps
sub
jne
mov
and
lret
aam
inc
mov
in
incl
rclb
mov
imul
flds
inc
loop
xor
int
daa
clc
inc
xor
mov
sbb
call
lret
ljmp
aaa
xchg
popa
pop
add
iret
cli
xchg
push
dec
push
sub
test
incl
ljmp
adc
movsb
xchg
xor
add
or
or
das
hlt
jg
adc
dec
movsb
lods
xchg
pop
insb
dec
add
pop
mov
jle
and
push
jp
fwait
xchg
jns
pop
decl
mov
or
sar
mov
ljmp
or
xchg
dec
and
mov
inc
and
push
clc
mov
stc
sub
xchg
push
incb
in
std
in
das
push
sbb
cmp
push
movsb
and
aad
pop
push
ss
push
push
push
add
or
cs
out
mov
jmp
sub
sarb
and
pushl
scas
adc
loopne
or
sub
loop
pushf
dec
mov
sti
or
test
inc
dec
mulb
jno
inc
movsl
call
mov
loope
dec
hlt
in
jmp
test
mov
pop
push
and
je
decl
push
lret
jns
frstor
out
daa
and
jge
add
ss
decl
cmp
std
lea
sbb
push
xchg
push
or
inc
pop
cmp
sub
pop
xchg
mov
fdivrs
or
ljmp
add
movsl
inc
jne
ds
push
jecxz
pop
inc
mov
or
incl
lods
xor
lods
pushf
mov
inc
cmpb
sarb
or
xchg
loopne
call
call
sbb
xchg
sub
addr16
stos
dec
insl
pop
fisubl
adc
hlt
out
and
mov
arpl
ss
xchg
lock
inc
pop
jle
loopne
xchg
aam
shlb
sbb
decl
adc
ret
add
sbb
orb
pop
adc
inc
pushl
mov
in
jecxz
stc
inc
lahf
daa
xor
and
jg
mov
and
rcll
nop
mov
aas
andl
push
xor
inc
dec
jg
push
push
add
movsb
pop
cmp
jae
or
test
mov
and
mov
add
pop
leave
pusha
jg
push
rolb
sbb
stc
pop
or
mov
xchg
and
imul
sub
lret
aam
pop
jb
adc
es
jne
mov
sti
mov
dec
mov
sbb
xorb
loopne
hlt
sti
xlat
lods
movsl
add
aas
or
xchg
int3
into
test
test
call
inc
lods
test
stc
inc
xor
and
test
data16
scas
les
inc
lods
call
cmpsb
push
adc
xchg
pop
mov
mov
in
call
mov
sub
rcl
movsb
mov
mov
mov
pusha
test
jae
push
jmp
in
mov
push
divl
sbb
fldt
push
icebp
mov
and
pop
aaa
dec
mov
inc
adc
and
clc
out
clc
jmp
les
incl
movl
sub
fldl2e
sbb
push
xor
cltd
push
lock
mov
dec
cltd
fisubrs
jp
mov
jo
or
pop
and
mov
lods
pop
jnp
or
add
dec
inc
lret
movsl
pop
rcrl
icebp
xchg
fisttpll
orl
sbbb
jne
xor
mov
cmp
add
shrb
or
sub
aam
adc
push
mov
sbb
lds
add
sbb
cld
sbb
shr
aad
sbb
inc
cmp
cmp
loopne
pop
adc
mov
arpl
mov
popa
stc
sbb
sub
cli
in
fwait
cmp
sti
add
mov
imul
inc
push
pop
hlt
xor
push
test
inc
add
fldlg2
mov
adc
pop
xor
in
add
gs
add
sbb
and
pop
insl
jae
jnp
or
fs
into
push
xor
out
js
or
dec
aam
xchg
add
icebp
mov
and
sbb
add
and
add
cmc
or
inc
fists
cmp
mov
int
mov
dec
cmp
jmp
inc
push
outsl
pop
pop
and
sub
lods
push
jbe
mov
mov
inc
int
cmp
cmp
fdivrp
add
rclb
dec
cld
call
and
cmp
mov
ljmp
repz
jae
in
mov
and
fcoms
mov
push
hlt
jg
cwtl
xchg
inc
dec
add
lock
inc
sbb
mov
call
or
je
fsubrs
pop
add
sub
add
dec
movsl
push
pushf
xchg
or
imul
sbb
movsl
ljmp
jne
xchg
aas
sub
mov
fisttpll
push
inc
cmp
sbb
vmptrst
mov
fildl
cmc
aaa
sub
scas
mov
out
arpl
ret
insb
test
pop
mov
cmp
ffreep
dec
iret
add
add
xor
jne
ljmp
sbb
jp
stc
sub
lock
add
int3
scas
or
mov
sbb
add
rorl
lods
lods
jg
mov
insl
cli
imul
and
sbb
pop
fwait
jg
cmp
out
ljmp
pop
xor
mov
dec
arpl
cmp
mov
shr
and
std
ss
push
scas
mov
add
ljmp
lcall
inc
add
jo
sbb
in
les
mov
xchg
adc
imul
cwtl
push
jnp
inc
outsl
cmc
pop
cli
add
mov
aad
jle
aas
cld
ror
jbe
sarb
xor
js
sub
das
inc
call
ret
pop
call
mov
out
lcall
mov
outsl
add
fwait
jne
daa
jecxz
xchg
or
in
jg
or
loope
decl
lcall
push
inc
insb
loop
cmp
loopne
iret
sub
out
sbb
jo
sbb
out
ret
cmp
and
mov
inc
jno
call
mov
and
dec
add
sbb
roll
cmp
inc
pop
xchg
sub
daa
orl
push
loopne
mov
in
mov
clc
mov
es
xor
cli
in
out
lods
add
test
add
mov
push
std
shrl
scas
and
inc
pop
xor
fsubr
cmp
jl
sub
sbb
call
jg
xor
and
add
out
jno
jno
arpl
cmp
adc
in
incb
daa
push
inc
inc
mov
hlt
daa
jg
inc
mov
ds
or
and
xchg
mov
jmp
xchg
repnz
adc
jb
pop
cmc
dec
imul
clc
outsl
cmp
loop
lods
inc
mov
cmp
pushf
and
cmp
cld
aaa
jp
mov
cmp
std
inc
mov
mov
aas
and
js
hlt
push
stos
mov
sbb
lods
subl
jle
adc
push
outsb
sarb
or
icebp
incl
dec
gs
mulb
les
mov
imul
gs
decl
jae
aaa
das
ds
add
je
movsb
cmpsb
outsb
cmp
adc
adc
jno
lahf
push
call
sbb
in
bound
push
mov
or
mov
pusha
dec
cmp
or
fiaddl
cmpl
sti
lods
mov
lcall
cmpsb
push
popf
je
clc
jg
cmpsl
mov
aas
inc
mov
cld
outsl
mov
stc
mov
pushf
into
orl
stos
and
lcall
lcall
mov
cli
and
xor
xchg
ja
xchg
clc
negb
adc
sbb
stc
cli
xchg
lea
sti
jne
gs
pop
call
stc
inc
add
cmp
leave
adc
bound
ds
scas
add
jo
add
add
sub
rorl
in
dec
insb
xchg
or
je
adc
loope
xchg
adc
jb
lods
scas
pusha
push
sbb
cmpsl
sbb
outsl
js
mov
in
in
std
orl
add
jmp
mov
jmp
notl
cwtl
and
cmp
xchg
add
mov
sahf
neg
mov
xchg
lock
jp
cmp
lods
js
call
pop
aad
push
adc
inc
icebp
or
inc
jne
ja
mov
inc
enter
test
out
jb
dec
or
add
sti
mov
and
sbb
fdiv
call
cld
stos
push
add
inc
pop
or
clc
mov
add
aam
jl
in
xor
jg
xor
mov
push
dec
subb
sub
add
cmp
mov
mov
or
clc
cmp
or
test
cmpsb
js
pop
mov
inc
mov
add
push
lods
push
cmp
or
gs
fs
mov
xor
loopne
mov
sub
sbb
push
cs
add
bound
fisubs
repz
jno
push
or
sbb
arpl
add
xchg
pop
lds
dec
out
adc
dec
test
sbb
repz
push
and
ds
rorb
mov
into
mov
mov
subl
lahf
insl
jmp
or
sbb
loopne
xchg
cwtl
inc
mov
pop
adc
lock
out
fwait
dec
add
pop
lock
out
ds
stos
push
push
test
mov
ret
mov
mov
xchg
roll
inc
mov
loopne
test
cs
icebp
add
aad
and
inc
mov
out
sbb
sub
push
push
and
movsb
push
dec
out
jge
aas
inc
push
aaa
mov
clc
mov
insb
std
aas
adc
cs
inc
repz
pop
inc
leave
test
dec
mov
js
and
xchg
adc
cmpsb
sub
addr16
mov
clc
lods
or
or
mov
lock
lock
mov
movsb
mov
jle
cld
pop
and
inc
or
daa
sbb
gs
mov
mov
or
pop
jecxz
les
ret
sub
ret
sub
jle
dec
sub
test
orb
xor
ss
push
data16
xor
call
cmpb
leave
and
sub
and
add
jmp
push
pop
mov
fisubl
add
cmpsb
sub
pop
fimuls
or
xor
pop
leave
jp
sarl
jp
fs
filds
iret
jmp
and
lea
mov
adc
xchg
mov
clc
or
inc
pop
imul
or
out
lods
adc
jnp
stos
push
sbb
pop
fldcw
inc
cld
jo
movsb
dec
push
imul
xor
pushf
pop
idiv
pop
cmp
xlat
sbb
pop
cmpb
adc
das
push
sbb
clc
aaa
pop
orl
push
lea
cltd
inc
call
rclb
mov
mov
inc
add
icebp
lds
inc
testb
adc
xor
sbb
daa
call
inc
xor
scas
mov
add
call
mov
lret
dec
and
adc
fiadds
daa
cmpsb
movsl
cmpsl
or
and
cmpsl
ret
pop
lock
jb
cmp
sbb
xor
rcr
adc
or
subl
cmc
cwtl
add
xchg
cmp
xor
pop
jl
js
mov
es
loope
jp
and
arpl
or
sub
add
cmpl
mov
add
rorl
dec
adc
push
vandps
shrb
dec
and
mov
inc
mov
sub
insl
bnd
dec
lds
dec
inc
sub
inc
aaa
and
andl
lret
lahf
lea
es
jl
jmp
stos
cli
dec
ret
sbb
pusha
sti
ljmp
mulb
mov
pop
cs
testl
xor
lock
icebp
jne
and
fsubl
stos
or
enter
xor
scas
push
inc
stos
inc
clc
sub
fistps
push
sub
lret
dec
leave
and
jo
mov
sbb
lock
jmp
inc
fucomp
adc
mov
jae
add
ret
addb
xchg
jae
sub
add
stos
dec
mov
dec
aad
add
xchg
push
test
cld
mov
aad
mull
mov
rcll
jg
or
dec
add
xchg
scas
mov
cmp
test
inc
xchg
pop
add
or
inc
sub
adc
into
test
imulb
dec
pop
ret
ds
pusha
cmp
xor
sahf
and
mov
or
int
rcr
lock
cmpsb
ror
pop
or
fcomi
incl
icebp
outsb
jl
add
xor
insb
or
fmull
push
cmp
add
xlat
roll
or
inc
or
outsb
addr16
or
and
imul
shll
jb
sub
test
adc
push
dec
sbb
add
mov
mov
adc
enter
lock
loopne
mov
mov
int
jb
mov
push
pop
aaa
inc
cmp
jp
jmp
cli
scas
cmpsl
hlt
pusha
and
inc
add
outsb
inc
outsb
in
loop
push
or
aas
popf
xor
mov
sub
add
lods
and
mov
subb
or
or
addr16
shll
and
mov
rcl
xchg
hlt
dec
xchg
aas
cmp
test
fistl
sbb
sub
add
inc
add
or
sbb
mov
pop
sub
sbb
mov
pushf
cmp
nop
or
pop
ret
ss
call
aam
mov
push
clc
jmp
add
ja
mov
jmp
icebp
ret
adc
test
jae
addr16
mov
sub
push
push
or
mov
fcoms
aam
push
cmpsl
aam
movsl
push
std
cmp
jb
push
orb
imull
mov
sbb
rol
aad
mov
pushf
sub
ret
mov
pusha
inc
inc
mov
push
clc
clc
pop
inc
cmp
data16
adc
sbb
clc
sbb
adc
add
adc
mov
sarb
leave
mov
jl
fdivs
cmc
rclb
dec
in
sbb
adc
addr16
dec
sub
mov
or
int3
je
sbb
fs
mov
test
adc
enter
add
addl
or
lret
dec
inc
inc
jb
mov
pop
int3
mov
and
enter
rcrl
mov
xchg
lea
pushf
call
pop
add
dec
dec
shrb
mov
pop
mov
mov
pop
jnp
idivl
cmpl
add
push
movsb
add
outsb
dec
add
add
daa
cmpsb
dec
add
shl
sbb
pop
lods
fcmovbe
ror
fsubrl
es
loopne
add
inc
dec
negb
cmpsl
rclb
mov
loop
add
dec
xchg
pop
loopne
push
sbb
sub
aam
jbe
pop
jae
adc
cld
test
sbb
int3
rol
add
jl
fistps
mov
xor
mov
out
cmpb
sbb
aas
ds
lea
push
sbb
cli
pop
icebp
out
xchg
nop
inc
sbb
add
jmp
and
ja
jns
pop
push
pushf
pop
jns
sarl
xchg
jae
jle
dec
push
xor
jb
xchg
es
jmp
or
mov
iret
add
xchg
jle
mov
mov
jle
in
lock
js
jg
pop
mov
mov
sbb
xor
cmp
std
outsl
dec
stos
mov
test
aad
in
xchg
stos
or
ret
fcoml
pushf
fs
out
dec
lock
test
inc
sbb
ret
clc
or
mov
and
test
lods
xchg
idivl
jg
addr16
gs
jae
mov
push
es
test
rorb
mov
lods
daa
iret
pushf
inc
lock
cmp
inc
int3
pushf
sahf
and
and
sub
std
jo
pop
jb
mov
ret
cmp
and
loop
fldcw
or
dec
cmp
test
neg
lock
push
addr16
cli
adc
cwtl
add
lret
cs
daa
mov
adc
enter
ror
mov
lret
and
mov
pop
cmpsb
ljmp
mov
sbb
imul
das
icebp
xchg
cltd
xchg
inc
push
mov
icebp
bound
add
or
dec
add
cmpsb
jmp
dec
sbb
xchg
clc
call
mov
and
adc
std
mov
fstpl
popf
add
mov
add
pop
adc
into
cmp
pop
ret
ljmp
add
andb
adc
jge
pop
xor
pusha
jno
or
cmpsb
sahf
cmp
outsl
mov
int
fs
lcall
pop
jbe
pop
sbb
icebp
sti
mov
xchg
pushf
sub
dec
mov
inc
jg
add
xchg
pushf
ret
add
roll
aam
std
aas
push
inc
xor
dec
push
ds
mov
shrl
loope
add
mov
lods
sbb
cwtl
daa
sti
decl
inc
mov
cmp
pop
adc
sbb
inc
decb
inc
add
lret
add
jecxz
shl
mov
xchg
push
or
add
pusha
fwait
or
mov
cmp
xchg
invd
push
mov
xchg
clc
lahf
jl
in
movsb
mov
inc
and
testb
nop
mov
repz
cmp
sub
push
lcall
fsubrs
add
call
and
adcb
out
jmp
dec
leave
mov
fdiv
nop
jge
mov
rorl
xchg
in
outsl
cmc
sbb
out
and
repz
and
cmp
lret
push
lock
scas
cli
es
in
fisubrs
xor
mov
add
and
sbb
sbb
mov
pop
xor
les
sbb
mov
int3
add
pop
or
notl
mov
test
mov
data16
test
mov
aas
xor
sbbl
loopne
sub
pop
nop
fldt
jmp
repz
dec
inc
jg
adcl
insl
cmp
pop
rorl
push
rolb
ret
int
sbb
das
pop
dec
xlat
nop
and
fisubrs
je
mov
fbld
sbb
mov
mov
inc
data16
push
in
fsts
cmp
popf
inc
sbb
and
pop
lock
movsl
mov
pop
mov
mov
or
xchg
loopne
loope
adc
xchg
out
and
xor
ljmp
in
mov
push
lds
enter
add
adc
xor
stos
aam
push
enter
jle
outsb
test
je
std
push
nop
inc
bound
test
int3
mov
ret
push
les
gs
inc
jae
and
cmp
jmp
sub
leave
lds
aaa
stc
in
xor
jmp
inc
js
cmp
rorl
mov
aam
mov
inc
dec
rcl
sbb
push
mov
es
fadds
mov
mov
inc
movsb
or
push
pop
pop
movsb
xchg
enter
and
inc
imull
les
ljmp
add
icebp
pop
orl
and
inc
out
scas
mov
cmp
pusha
push
mov
or
dec
xorb
or
xor
pop
or
xor
push
mov
push
xor
sbb
cmc
mov
pop
loope
cltd
mov
popl
fpatan
mov
add
call
test
jmp
adc
push
jl
pop
arpl
dec
jne
mov
dec
data16
mov
pop
inc
dec
addr16
and
lods
and
mov
mov
out
test
push
popf
mov
mov
adc
iret
lret
jmp
xchg
inc
lock
xor
dec
std
pop
js
lds
jg
pop
push
dec
les
ljmp
mov
adc
andb
xchg
xchg
mov
movsl
stos
adcl
loopne
or
mov
fdivs
loopne
jb
sub
sbb
mov
and
repz
js
popa
push
mov
cmc
into
dec
push
mov
popa
or
in
sub
popa
lods
inc
or
inc
mov
mov
push
out
jbe
fsubrl
aaa
testb
and
pop
insb
loop
sub
ficompl
push
adc
push
in
popf
push
fidivl
sti
and
or
jno
js
aam
test
xchg
xchg
and
xor
fadds
dec
andb
ror
adc
and
lcall
mov
pop
in
iret
inc
or
xlat
rorl
stos
lods
add
sub
mov
mov
sbbb
adcl
int
xchg
inc
add
into
push
cmpsb
pop
cmp
shrl
ror
xchg
sarl
shl
mov
sub
aad
mov
ret
inc
fwait
ljmp
sbb
ret
push
iret
adc
sbb
sbb
mov
cli
xchg
add
mov
ret
mov
add
xchg
clc
dec
loope
jp
inc
mov
add
pop
sub
xchg
repnz
test
adc
rcrl
insb
inc
mov
pop
jnp
icebp
jne
add
pusha
cbtw
xor
adc
rorl
fsubp
adc
inc
add
scas
jge
ljmp
add
push
pushf
imul
mov
adc
arpl
in
pop
add
or
rclb
dec
aaa
mov
push
ljmp
inc
mov
fadds
inc
or
or
addb
sbbl
mov
sti
mov
sbb
sahf
or
test
call
jno
fwait
out
and
cmp
loop
fnsave
hlt
shrl
dec
and
inc
jge
movsb
pop
adc
and
pop
dec
or
mov
mov
inc
fists
sbb
stos
or
jmp
scas
fldl
hlt
add
jnp
cmc
or
push
push
dec
sahf
xor
ljmp
add
pop
xchg
jl
xor
and
sub
test
test
inc
ret
clc
jge
fdivr
andl
mov
mov
adc
lds
add
ret
loop
mov
cmp
stos
and
out
sbb
mov
lahf
lahf
dec
gs
out
push
pop
lods
push
xchg
add
sub
add
mov
cltd
adc
lret
enter
das
cmc
add
clc
sub
pop
jle
scas
ljmp
rcll
fstl
sahf
add
jge
dec
stos
xor
pusha
mov
popl
jg
xchg
xchg
in
rorl
incl
mov
push
mov
filds
and
pop
in
fdivrl
dec
scas
int
out
push
sarl
push
in
lcall
and
lock
add
icebp
xchg
pop
cmpsb
lcall
mov
add
sub
xchg
shrl
push
pop
sar
inc
push
insb
add
add
roll
push
in
dec
pop
inc
sub
lret
pop
mov
stos
decl
clc
stc
test
loop
lock
scas
pushf
mov
leave
sub
arpl
adc
scas
arpl
mov
jmp
jo
xchg
or
and
das
shll
dec
mov
and
in
cmp
inc
xor
and
ljmp
rolb
xor
data16
leave
adc
sbb
mov
sub
jg
mov
adc
xlat
sbb
jle
pop
ljmp
inc
push
jl
xchg
add
xlat
sub
mov
in
outsl
jne
stos
mov
jl
dec
imul
mov
xor
xlat
sub
mov
inc
sbb
aas
push
adc
subb
inc
mov
mov
loop
push
shr
push
mov
out
xchg
jle
pop
cli
jg
mov
int3
fs
mov
mov
mov
aam
add
pop
cmp
mov
xor
outsb
imul
add
js
sbb
pop
loopne
cld
cmp
pop
pop
clc
outsl
or
sub
and
add
jle
dec
pop
inc
xchg
movsb
cmp
xor
cli
pop
lods
ljmp
and
lahf
subl
sarb
cmpb
or
mov
test
and
aam
mov
sub
mov
daa
xor
xor
stos
scas
aam
aaa
inc
jo
cmp
lods
mov
mov
je
popa
jae
data16
aad
jns
sbb
sub
frstor
add
mov
cmp
lcall
clc
and
inc
jecxz
loope
loopne
add
popa
inc
mov
push
in
jl
inc
inc
iret
jmp
add
mov
push
inc
adc
das
jl
xchg
xor
mov
rorb
cmc
testl
data16
fsubr
addb
pop
shlb
sahf
push
sub
and
sub
incl
addr16
fisttps
pop
orb
mov
push
inc
cmpb
mov
cld
lea
and
loopne
or
js
add
notb
into
insb
js
cmp
mov
cwtl
cmp
test
dec
cmp
lea
mov
scas
lret
xchg
loop
je
cmpsb
and
cmp
add
mov
stos
adc
push
imul
out
cmpsb
test
xchg
cmp
sbb
cmpsb
add
adc
dec
cs
lahf
sbb
and
cld
testb
daa
push
xchg
dec
or
sub
push
pop
fdivrs
xchg
mov
loop
sub
push
sub
add
pop
adc
aam
add
pusha
inc
mov
fiadds
icebp
sub
mov
dec
cmpsl
loope
mov
inc
or
in
inc
es
popf
xchg
jo
add
mov
sub
and
hlt
fbstp
cmp
and
insl
and
pop
add
daa
push
inc
cs
stos
out
add
push
pop
sub
or
daa
or
mov
add
daa
arpl
loop
or
mov
call
add
push
adc
enter
dec
and
sub
dec
dec
xor
jne
mov
xchg
push
adc
ds
cmp
mov
pop
xchg
and
xchg
mov
pusha
add
push
adc
mov
fsubrp
testl
and
push
jo
ss
or
divl
int
cmc
pop
lret
and
mov
movsb
hlt
dec
subb
mov
cmp
or
sbb
cmpsl
fisttpl
adc
or
inc
dec
mov
fsubl
arpl
push
mov
mov
dec
fidivrl
sub
fcoml
add
scas
and
lock
push
push
mov
mov
or
cwtl
or
jb
fiadds
and
push
pop
sub
lock
or
mov
fdivp
push
push
add
in
and
ds
dec
sub
adc
aaa
cmp
arpl
jb
rolb
sbb
add
out
fisubl
lock
jb
leave
sub
mov
mov
fidivrl
mov
fsub
xchg
jg
pop
ss
xchg
adc
or
mov
xchg
mov
stc
arpl
fs
xor
adc
dec
addb
inc
xor
rorl
test
call
loopne
adc
stos
popf
insl
sbb
negb
sbb
stos
ds
cmpb
inc
and
inc
push
cli
mov
and
fistl
sbbb
push
mov
fiadds
push
nop
lret
mov
lods
fidivs
fmuls
rclb
mov
cld
pop
mov
mov
in
sub
flds
push
les
cmp
or
push
outsl
mov
cmpsl
sub
gs
les
pop
test
mov
sbb
adc
lods
orl
shl
push
shrl
lret
ds
cmp
jge
push
jne
and
xor
gs
popf
das
xor
adc
jp
rcrb
jle
les
shrb
push
push
add
outsl
inc
iret
add
or
adc
stc
loopne
loopne
ret
push
out
rcrl
sbb
mov
and
in
xchg
cmpb
test
imul
xorl
jnp
fildll
dec
and
sub
into
stos
loopne
mov
mov
xchg
addl
mov
icebp
cmove
clc
and
shll
inc
mov
fcoms
lock
mov
xchg
xchg
les
push
pop
dec
popf
push
jmp
and
xchg
lcall
mov
xor
push
adc
mov
arpl
loop
add
mov
add
sbb
xchg
mov
stc
mov
call
add
mov
addr16
insl
mov
insw
mov
dec
push
mov
jge
jmp
sbb
outsl
outsl
push
inc
cwtl
add
sbb
pop
pcmpeqw
rcrb
scas
pop
mov
mov
aas
cmp
and
shr
jb
fwait
das
lahf
or
and
add
mov
or
sahf
xor
and
lret
or
cli
icebp
icebp
js
fdiv
out
shr
imulb
lret
scas
nop
sahf
and
xchg
int
xor
ficoms
int
sbb
xor
test
mov
popf
or
ret
out
push
aaa
lock
mov
out
mov
jae
inc
incl
add
jmp
stc
xchg
adc
pop
scas
in
push
cmp
inc
out
les
out
test
rorl
and
incl
mov
sti
jg
mov
inc
jns
pop
fstl
add
dec
jne
dec
ficoml
sbb
pop
and
xor
adcb
imul
mov
in
rclb
push
cld
jns
pop
jle
call
add
xchg
mov
cld
iret
cs
in
pop
jle
addl
cltd
sbb
mov
add
add
jb
roll
cmp
ljmp
js
cmpsl
adc
addr16
push
jmp
pop
movsl
loop
inc
icebp
jg
icebp
stc
cmp
shll
push
adc
sbb
out
sti
adcl
ljmp
add
test
xchg
decb
adc
sti
popf
in
sub
mov
fsubr
repnz
mov
mov
pop
mov
stos
inc
sub
call
cmovb
daa
adcl
jbe
sub
push
test
clc
jmp
or
xor
sar
outsl
ljmp
idivl
mov
test
daa
repnz
jg
movlhps
xchg
ficompl
jecxz
pushl
push
gs
sub
mov
mov
dec
dec
hlt
mov
inc
pusha
jo
inc
inc
lock
in
jmp
cmp
push
mov
cmp
dec
loopne
xor
mov
inc
aaa
and
leave
pop
aam
or
sbb
incl
push
sub
repnz
add
rorb
mov
xor
cmp
dec
cmp
mov
push
loopne
inc
push
pushf
mov
cmp
pop
cld
mov
cmp
mov
sub
ljmp
ljmp
xchg
out
fs
jg
mov
mov
cs
xor
mov
aas
push
mov
rorb
cmp
repz
xchg
xchg
imul
adcl
lock
adc
std
decl
outsl
movsl
pop
sarl
push
and
lea
decl
test
repnz
push
mov
test
es
add
fistpl
mov
cmp
push
mov
lock
aas
push
imul
inc
and
loopne
lea
fwait
outsl
pushl
or
enter
inc
aad
and
scas
jle
push
mov
xlat
xor
les
inc
jecxz
add
mov
inc
push
pusha
push
pop
aad
pop
add
cwtl
or
or
inc
jbe
adc
dec
ja
fidivrl
mov
jo
dec
mov
inc
sbb
rcrb
pop
test
inc
movsl
add
adc
jbe
and
hlt
and
and
les
push
xchg
mov
cmp
daa
xor
or
hlt
push
mov
stos
inc
loopne
dec
test
push
daa
jae
lock
iret
jl
inc
stos
push
imul
add
dec
push
lcall
fldl
call
clc
sub
loopne
jb
fidivl
mov
mov
mov
push
push
iret
mov
les
sbb
ss
inc
or
dec
cmp
loop
ljmp
dec
push
add
pop
les
pop
les
fidivrl
and
push
cmp
sbb
add
adc
add
add
loopne
adc
adc
xor
sub
push
xorb
ljmp
fsts
cmp
or
mov
hlt
cmp
xor
nop
dec
lret
mov
mov
sub
sbb
fwait
push
or
add
fidivl
neg
jno
ret
or
les
cmp
les
mov
xlat
xchg
repz
btc
cmpb
pop
mov
jb
pop
ficoml
cmp
loop
repnz
sbb
in
inc
out
mov
jge
adc
test
loopne
int
ja
test
cmp
loope
sarb
add
inc
lret
inc
add
sbbb
sti
das
pop
negl
cmpsb
out
sub
lds
out
loope
or
cs
dec
ret
adc
inc
gs
or
jb
cli
jae
jmp
and
mov
jge
add
pop
xchg
or
adc
inc
cmp
or
roll
loopne
xor
push
fiaddl
bound
mov
sbb
dec
mov
xor
dec
add
pushf
nop
xor
push
push
push
push
mov
out
mov
imul
aas
dec
pop
xor
fldl
repz
aas
shll
stos
add
stc
jno
loope
leave
adc
add
js
test
mov
or
iret
test
imul
mov
mov
fimull
sar
adc
sbb
aas
cmp
or
adc
xchg
mov
cld
sub
xacquire
sbb
xchg
and
out
ss
adc
pusha
mov
add
ja
or
cmc
aad
sub
inc
rcr
enter
push
mov
scas
jae
rorb
jp
fimuls
mov
xchg
mov
iret
loope
aas
filds
push
sbb
aas
lods
inc
sbb
and
aam
lds
movsb
pop
push
cmpsb
decl
fstps
pop
cwtl
or
jge
test
inc
popa
pop
aaa
ficoms
mov
inc
xchg
out
sbb
mov
or
cmp
ds
mov
mov
pop
pushf
push
test
jp
sbb
loopne
jb
aaa
popf
xchg
add
int3
and
dec
push
fistpll
mov
in
xchg
cld
fisttpll
dec
out
bound
fistps
icebp
cli
xchg
js
jmp
dec
bound
lahf
test
fsubrs
insl
inc
sbb
in
or
mov
data16
sub
inc
pop
cld
test
xchg
int3
les
enter
les
jno
xor
test
mov
mov
inc
push
sbb
gs
push
filds
scas
les
add
pop
js
sbb
stc
lret
pop
lods
push
popf
cmpsl
inc
pop
arpl
or
jg
outsb
pop
push
xor
aas
and
pop
out
es
and
incl
xor
sahf
xchg
mov
mov
inc
adc
lcall
test
mov
xor
insl
inc
adc
mov
mov
cmc
mov
pop
jg
pop
xchg
icebp
in
das
shlb
shll
pop
pop
mov
sbb
sub
dec
call
dec
mov
and
mov
xchg
mov
lock
mov
rcrl
and
pop
or
add
pop
inc
mov
mov
shll
lret
sbb
pop
out
gs
pop
push
cmp
shlb
daa
push
int3
in
repz
popf
add
and
xor
ljmp
scas
bound
fiaddl
or
ljmp
and
mov
stc
add
add
add
scas
or
adc
inc
pop
clc
sbb
shlb
dec
loop
adc
fadd
mov
in
dec
aad
mov
sub
ds
adc
sbb
cmp
mov
adcb
rclb
rep
ja
addr16
mov
out
inc
aas
jmp
adc
call
jg
add
dec
sahf
dec
fbld
inc
push
hlt
mov
push
data16
pusha
mov
or
sar
or
fwait
add
mov
lods
lret
mov
mov
cmp
orb
and
jecxz
push
sbb
add
xlat
mov
aaa
xor
dec
test
jae
and
sahf
push
add
add
add
lods
fldt
iret
sub
cmp
cmpb
or
js
stos
jle
cld
mov
int3
add
and
sbb
or
jo
fisubs
sub
stos
mov
sub
adc
call
sbb
mov
adc
aas
int3
add
dec
push
in
std
data16
adc
jmp
jecxz
lock
filds
pop
loopne
das
or
sarb
push
icebp
inc
mov
push
mov
or
push
movsl
aam
cmp
pop
inc
and
dec
cltd
clc
scas
jmp
jmp
dec
movsl
not
cmc
pop
jl
pop
sub
sti
scas
clc
pushl
adc
xor
cld
and
icebp
fisttps
gs
sbb
xchg
xlat
outsl
in
mov
and
nopl
inc
sbb
push
mov
mov
mul
aam
adc
sub
sti
adc
out
jp
pop
icebp
pop
or
popf
mov
loopne
lods
stc
cmpsb
dec
arpl
mov
and
aas
dec
daa
dec
or
dec
mov
call
push
add
sti
cltd
pusha
and
xchg
lahf
loop
cs
iret
xor
inc
mov
fwait
les
lahf
std
push
push
jns
iret
insb
sub
or
mov
cmpl
push
jg
out
sub
mov
mov
sbb
gs
xchg
scas
pop
outsl
push
pop
add
nop
inc
xor
xchg
cmpl
sarb
xchg
xor
sub
xlat
lods
sbb
fisubrl
lret
call
jns
xchg
xor
adc
push
nop
insb
test
add
jl
jmp
rcrl
mov
jg
nop
xchg
pop
loop
inc
into
adc
add
jg
shrb
fsubp
in
les
adc
mov
mov
aad
cmpsl
add
nop
pop
inc
out
mov
fsubrs
decl
test
js
jne
fdivr
or
adc
xchg
pop
mov
mov
ja
xor
cli
mov
jge
ret
js
push
dec
adc
push
insl
decl
shl
adc
arpl
dec
and
loop
add
mov
adc
mov
xchg
xchg
cmc
fs
sbb
mov
inc
push
movsl
insl
ds
inc
push
int
fs
daa
repnz
testb
inc
inc
pushf
mov
dec
iret
ja
sbb
xor
jne
cmc
sbb
jnp
sub
mov
cs
pushf
and
cmp
fisubrl
xor
or
add
inc
cli
arpl
inc
sbb
push
std
int
imul
mov
inc
repnz
mov
pop
bnd
mov
sub
cmp
lret
pop
add
mov
stc
pop
je
mov
nop
or
xor
sbbl
xchg
add
adc
cmp
adc
addr16
adc
cmp
xor
mov
push
outsb
push
mov
cmp
mov
sbb
cli
jle
inc
jne
outsl
icebp
test
int3
sbbl
subb
mov
add
inc
xor
xchg
lock
std
outsl
and
jmp
jmp
xchg
xchg
jl
mov
std
lret
mov
inc
es
mov
push
inc
lret
aam
or
test
push
add
and
into
xor
scas
xchg
inc
jecxz
dec
test
rol
xchg
filds
in
inc
loope
xchg
sbb
sub
call
shlb
cmp
lods
jnp
mov
aam
mov
insl
inc
nop
nop
sub
pushl
sub
or
jge
xor
sub
pop
adc
cmpps
pop
std
fildll
adc
sub
sub
push
xlat
stc
hlt
cld
and
or
and
cwtl
push
pushf
lods
nop
pushl
jne
push
cmc
fwait
and
push
cmpsl
xchg
sbb
mov
mov
xchg
in
push
and
jecxz
sub
add
pop
mov
rcrb
repnz
sti
shrd
inc
stos
addb
sbb
xorb
and
jl
mov
imull
dec
pop
adcb
mov
and
fs
mov
pop
jg
cmp
cmpsl
pop
and
push
xchg
in
lcall
and
sub
push
stc
jge
sar
jle
dec
sbb
jecxz
mov
repnz
je
ljmp
mov
insb
mov
pop
mov
mov
mov
mov
sahf
fisubrs
add
push
icebp
push
dec
dec
inc
outsb
lahf
ret
fucomip
sbb
push
orb
pusha
inc
lods
or
icebp
outsl
incl
cmp
inc
ficoml
incb
lds
test
jbe
mov
int
iret
sub
push
mov
cmp
pop
js
rol
cmp
push
xor
rcrl
insb
stc
sti
nop
mov
mov
jb
or
xchg
cltd
in
fisubs
pop
ds
mov
xchg
int
jl
repz
add
xchg
out
and
adc
add
hlt
lahf
pop
incl
sub
mov
fists
ljmp
xor
nop
aas
sbb
and
mov
pusha
add
orl
inc
sbb
lods
pop
pop
ja
cmpl
add
in
fwait
bound
ds
cli
insb
inc
scas
loope
pop
xorb
daa
sub
arpl
xor
mov
mov
roll
jbe
sub
dec
mov
inc
mov
cmp
ret
jge
negl
dec
sub
pop
call
inc
jmp
add
dec
xor
xchg
imul
test
incl
sub
rcl
inc
cwtl
mov
and
adc
shlb
or
xchg
adc
add
sbbl
insl
in
gs
cwtl
lods
push
call
push
mov
add
and
mov
dec
test
add
add
test
cmc
mov
mov
pop
roll
popl
pop
push
xchg
mov
clc
incl
lcall
cmc
fildll
ss
push
cvtps2pi
pop
push
adc
int3
sub
ret
test
inc
pop
scas
jmp
mov
nop
lret
or
and
adc
jg
rorb
out
and
xchg
int
pushl
lret
dec
mov
imul
inc
dec
mov
sbb
iret
stos
test
mov
push
sbb
add
sarb
xchg
fcmovnbe
fstpt
outsb
roll
scas
dec
inc
xor
pusha
bound
ljmp
inc
adcb
stos
jmp
in
pop
test
divl
push
jbe
loopne
mov
push
data16
cmp
dec
or
xor
pop
and
pop
je
xor
mov
xchg
in
sub
dec
shl
xchg
sti
and
scas
push
sub
pop
mov
ja
push
adc
mov
dec
push
scas
cli
sub
cmp
out
jle
xchg
jmp
lock
jbe
mov
psubsb
jmp
add
adc
shll
movsl
outsl
fdivr
mov
push
sbb
cmp
mov
xchg
mov
add
mov
jnp
cli
movsl
push
decl
lods
cmpsl
mov
sbb
add
sub
jne
cmp
mov
jle
lea
movsl
jbe
jmp
pop
or
push
sahf
sbb
outsl
mov
mov
dec
inc
mov
cmp
testl
cmp
adc
sbbb
ret
stos
in
outsb
cltd
aam
stc
mov
ret
push
in
pushf
sub
cmc
aaa
push
or
inc
js
mov
push
popa
clc
notb
mov
ljmp
ljmp
inc
scas
cmp
jb
int3
push
mov
cwtl
fstps
lds
test
std
push
insl
pusha
push
and
xor
stc
add
add
inc
clc
xchg
imull
push
sbb
incl
adc
movsl
imul
fwait
xchg
incl
dec
lcall
push
pop
fdivrs
or
imul
pop
stos
cmp
adc
cmp
xchg
out
neg
jmp
clc
dec
or
add
nop
shll
lods
lea
xchg
ja
out
fistps
dec
pop
nop
cld
into
cmp
jecxz
cmp
decl
pop
ret
dec
push
mov
addl
lahf
in
cmp
and
jl
out
decb
mov
sbbb
mov
xlat
adc
fildll
mov
jecxz
add
enter
xlat
cmp
testb
and
push
pop
jle
inc
mov
inc
jmp
push
sub
jae
pop
stos
mov
xor
stos
cs
lahf
push
inc
in
jne,pn
xchg
fsubs
sbb
mov
xor
ds
adcl
sbb
sbb
fldt
jp
and
dec
mov
outsl
mov
out
inc
ret
and
int3
dec
add
and
push
mov
aad
imul
push
dec
shr
mov
mov
clc
xchg
xor
ljmp
sbb
mov
lds
mov
mov
xor
loopne
roll
add
mov
xlat
and
lret
es
or
add
inc
aad
mulb
hlt
mov
loopew
stos
mov
jmp
in
mov
sub
ljmp
or
ret
push
rcll
or
and
call
rclb
sbb
mov
fwait
adc
push
mov
inc
xchg
bound
push
inc
cwtl
mov
pop
and
cmc
dec
popf
sub
addl
inc
xor
lock
stos
bound
mov
out
loop
jnp
push
decb
add
mov
flds
cmp
insl
in
testl
push
mov
clc
sub
push
dec
sarl
mov
sub
hlt
cs
clc
jmp
xchg
clc
mov
or
cli
adc
test
in
mov
and
dec
cmc
insb
mov
rcrb
clc
add
mov
mov
lock
and
xor
inc
xor
sbb
push
fistps
in
cli
pop
xor
shll
push
cli
cmpsb
out
ja
lret
push
repnz
jp
adc
inc
xor
sbb
add
push
ficoms
sub
in
and
cmp
adc
dec
dec
xor
dec
jno
jl
test
xor
or
jns
xchg
add
sub
add
jl
or
pushl
add
and
rolb
lds
mov
or
dec
popa
push
push
xor
sbb
test
and
xor
mov
inc
jae
adc
and
imul
cmp
xchg
adc
sub
xor
mov
cld
arpl
add
hlt
clc
das
cltd
adc
icebp
outsb
or
test
stc
xor
cwtl
lods
loop
xor
arpl
inc
xchg
clc
and
sbb
cmp
lea
sub
clc
out
jl
adc
out
pop
add
ds
add
push
dec
mov
mov
and
es
pop
jbe
js
adc
sub
les
cmc
out
xchg
add
data16
dec
or
xchg
xchg
push
and
xor
mov
inc
cmp
mov
mov
dec
inc
sub
dec
adc
pop
cs
ficoms
push
fisttps
xor
jl
aas
ss
icebp
pop
enter
sub
int3
mov
mov
inc
push
xchg
cld
addr16
jo
push
mov
loope
test
lcall
test
dec
and
cmp
add
add
lret
cmp
hlt
int3
lods
mov
mov
jp
popf
stos
sub
faddl
test
jmp
jmp
fs
leave
lcall
xchg
or
adc
sub
lods
mov
dec
push
pop
and
dec
pop
and
pop
mov
and
negl
in
push
mov
mov
mov
pop
dec
roll
fcmovnu
inc
aam
and
adc
and
add
push
add
xor
inc
cmp
enter
xchg
jmp
sbb
rolb
inc
add
leave
popf
mov
add
lcall
cltd
addr16
jle
call
dec
mov
push
lahf
dec
xchg
fucomip
jg
jmp
shll
inc
jmp
inc
mov
sub
xchg
addl
jg
dec
or
and
sbbb
sub
inc
pfmax
inc
add
mov
jecxz
jb
pop
adc
xor
cmp
push
sub
fistpll
fsubs
inc
dec
in
xchg
das
jne
pop
hlt
dec
and
addr16
mov
aam
in
inc
loop
add
lea
out
xchg
scas
pop
std
add
xchg
xor
inc
lock
aas
dec
xor
xor
inc
push
cmp
jmp
mov
mov
out
push
xor
sbb
hlt
loop
sbb
in
mov
test
mov
xor
test
mov
inc
lods
adc
xor
aaa
test
mov
inc
sbb
mov
push
xchg
nop
inc
mov
adc
clc
jg
add
cli
dec
into
out
xchg
cmp
call
mov
addr16
rclb
mov
push
shr
daa
and
ljmp
add
mov
mov
std
outsl
pop
ljmp
ffree
push
movsb
test
lahf
inc
mov
ds
sahf
les
mov
cli
int3
inc
stc
jge
fdivr
sbb
jg
dec
and
inc
rclb
imul
out
add
mov
jl
rol
mov
adc
test
stos
jge
lods
or
or
inc
dec
data16
xchg
adc
into
cmpsb
or
icebp
sub
cli
jg
insb
dec
xchg
iret
sbb
push
mov
push
incl
rcrb
test
fsubs
and
cltd
dec
adc
add
roll
add
push
mov
dec
dec
stos
cmp
shrb
lret
out
push
aam
loop
dec
sub
cs
or
mov
add
jbe
add
leave
dec
int3
xor
sub
add
cs
je
mov
cmc
test
push
pop
not
loop
adc
dec
int3
and
cmp
ficompl
add
jbe
sub
xchg
es
inc
mov
mov
jmp
pop
cmp
movsb
mov
mov
repz
stos
adc
cmp
pop
movsl
jg
lds
cmovp
insl
push
lds
ljmp
cli
sbb
mov
inc
and
sarb
xchg
inc
outsb
ja
add
out
inc
pop
hlt
and
pop
push
loopne
mov
inc
imul
add
pushf
fldl
dec
dec
repnz
mov
fcmovnb
neg
fstps
fiaddl
mov
mov
xchg
sbb
stos
xchg
mov
hlt
insb
adc
mov
int3
pop
mov
push
adc
mov
mov
add
sbb
and
mov
or
mov
add
mov
mov
push
add
xchg
test
mov
add
inc
lcallw
and
xchg
sub
push
shrb
es
mov
jae
mov
les
stc
jbe
fldt
popa
adc
sub
inc
xor
adc
in
scas
call
popa
into
out
xchg
or
jne
out
dec
lods
cmp
loop
out
and
dec
iret
push
sub
cld
int3
add
in
sbb
mov
cli
aas
outsl
andl
adc
push
test
hlt
mov
push
nop
fistl
adc
push
sbb
jns
dec
pushf
les
mov
adc
loopne
push
movsl
and
adc
pushf
test
mov
mov
pusha
movsl
outsl
imul
sbb
sbb
arpl
shlb
pop
push
or
insb
jb
xchg
sub
loope
es
mov
cmp
pushw
es
out
jne
dec
daa
mov
cmp
loop
mov
test
arpl
lret
test
push
xor
add
fisttps
pop
mov
push
ljmp
in
sbb
shlb
pushf
cmp
dec
dec
ret
cld
sbb
mov
inc
lea
rorl
jl
add
aam
adc
mov
cmp
daa
mov
xchg
xlat
jecxz
jle
aad
adc
pop
aam
pop
xor
cld
ret
and
adc
adc
jge
push
xor
outsb
shrb
push
push
mov
jg
jns
jl
lcall
aam
xor
or
rolb
jecxz
push
push
roll
xor
cwtl
or
and
mov
andnps
sbb
loopne
pop
inc
xor
ss
addr16
jo
sbb
incl
cmp
inc
inc
mov
and
or
fwait
push
movsb
or
push
push
iret
or
lret
adc
dec
pushf
cmp
sbb
sti
jg
outsb
xchg
aam
and
ljmp
jl
add
mov
and
insb
stc
jg
add
ret
mov
nop
shrl
roll
jg
das
mov
push
repnz
cld
popw
stos
push
dec
push
das
inc
dec
hlt
and
enter
ljmp
outsl
sub
out
pop
dec
pop
xchg
lods
mov
out
xchg
mov
ret
test
ljmp
iret
push
stc
mov
xor
movl
shll
xchg
fistps
xor
rcrb
popa
sub
fisubrl
and
shrl
fdivs
push
test
jo
repnz
jmp
inc
jl
adc
inc
notb
add
lock
js
mov
xchg
mov
xor
aas
inc
add
xchg
dec
jmp
xor
sti
pop
adc
mov
je
sub
addr16
dec
jns
insl
or
jo
sbb
stos
lcall
adc
dec
cmp
mov
out
imul
hlt
loope
das
loopne
mov
test
xchg
cmpsb
nop
lods
fidivs
addb
out
push
mov
sbb
movsb
sub
cld
fiadds
sub
outsl
mov
inc
ret
jg
popf
imul
add
outsl
outsl
popl
incb
xor
xor
test
xchg
ja
out
notl
nop
int3
into
cmp
cld
push
push
sahf
stos
sahf
fstpt
or
inc
and
mov
cmp
add
add
stc
add
das
push
xchg
sub
add
pop
pop
dec
cmpsb
dec
add
pop
jno
mov
adc
inc
lahf
push
push
inc
jbe
movsl
dec
push
std
fdivs
mov
sub
and
jl
push
adc
outsl
aaa
es
repnz
mov
jg
cwtl
sbb
fisubrl
push
mov
fbstp
xchg
xor
mov
cld
int3
push
sarb
fbld
cmpsb
add
movsl
aaa
fcoms
xor
incl
mov
xchg
daa
orb
outsl
xor
dec
test
popf
in
lods
or
mov
mov
xor
arpl
inc
les
cmp
insb
add
push
dec
cltd
ljmp
inc
fldcw
mov
jbe
aaa
pop
push
js
dec
pop
pop
or
mov
aam
repnz
mov
or
sub
jp
xchg
cmp
jmp
xor
aad
loopne
add
xchg
xchg
cltd
pop
cmpsl
fwait
stos
add
inc
ljmp
push
inc
jmp
xchg
xchg
mov
sub
mov
insb
sub
pop
xor
test
jmp
and
loop
ljmp
in
dec
add
and
lds
arpl
ljmp
dec
lahf
popf
pusha
dec
jo
inc
inc
lea
cmpsl
jne
sar
fistpll
int
fs
pop
push
adc
loope
rclb
dec
jbe
and
mov
push
mov
fs
aam
mov
or
push
test
sub
push
inc
push
lea
push
dec
or
push
cmc
aaa
xchg
add
repz
mov
xor
in
enter
dec
add
pop
xor
stos
jbe
mov
xchg
fwait
adc
iret
sub
loop,pn
xor
aam
mov
rep
iret
or
stc
pop
dec
pop
mov
jb
lods
and
adc
and
enter
subl
xchg
ss
lcall
push
mov
inc
or
mov
loope
jg
add
imull
repnz
ljmp
mov
int3
add
push
push
inc
sbb
sub
sub
sub
scas
push
add
xor
mov
pop
orps
loop
out
or
and
insl
push
adc
aas
sbb
insl
std
mov
add
dec
imul
xchg
inc
or
hlt
mov
sbb
jl
popa
dec
add
nop
xor
mov
imul
mov
mov
and
jmp
adc
fwait
xlat
dec
jl
and
xchg
inc
xor
clc
pop
jp
inc
push
sbb
rorb
adc
rcll
or
inc
mov
inc
lret
xor
ret
rcll
pop
push
movsl
pop
or
mov
cmp
dec
add
xor
cld
lret
xchg
cmp
dec
cmp
or
pushf
add
fistl
outsl
lds
push
mov
dec
int3
mov
sub
or
std
in
push
pop
jmp
jecxz
or
addb
sub
pop
nop
lods
and
jae
mov
rcrb
add
inc
fcomps
adcl
add
xchg
lcall
cmp
adc
xchg
cld
add
sbb
jecxz
fdivrs
push
icebp
cmp
cmp
adcb
jnp
dec
lahf
xor
pop
scas
fwait
dec
cmpsb
mov
loop
div
add
dec
mov
xor
jne
sub
adc
sbb
pop
pop
sbb
sub
rorb
inc
sub
fiadds
insb
mov
inc
mov
add
and
mov
rcl
stos
addb
inc
push
adc
sub
jmp
lods
repnz
or
cwtl
push
mov
cmp
daa
mov
xchg
adc
fisubl
push
pop
fadds
push
jno
inc
cmp
push
add
jne
pavgb
dec
mov
lods
push
sub
std
dec
push
sub
push
xor
les
clc
int3
cmp
ficoms
lret
dec
into
cld
bnd
sbb
jmp
in
repnz
jnp
lods
ss
sbb
add
sbbb
iret
add
sarl
inc
lret
cmp
subb
frstor
lcall
popf
and
inc
add
xchg
mov
and
scas
stc
in
xor
dec
push
lahf
inc
and
addr16
add
popf
mov
into
inc
int
sbb
aad
pop
lds
dec
pop
jle
add
push
xchg
rolb
pushf
test
movsb
xchg
sbb
cmp
lds
mov
shrb
je
push
sub
mov
pop
lahf
in
jns
aam
push
push
add
leave
mov
jne
mov
mov
ljmp
mov
mov
dec
inc
fwait
hlt
xchg
sub
xor
sahf
push
mov
dec
je
fdivs
add
sub
xor
sbb
test
pop
adc
cld
and
shrl
jo
or
xor
xchg
jnp
iret
or
xor
sub
mov
inc
xor
sub
das
push
jns
stos
mov
ss
push
mov
int3
movsl
cmp
lahf
cmp
lahf
aaa
fisubrs
fnstsw
inc
or
and
or
fwait
loopne
dec
and
loop
out
sti
or
add
loop
or
clc
sub
mov
es
imul
inc
pop
jbe
daa
add
imul
xor
iret
movsl
push
and
flds
sbb
mov
sar
jne
sub
adc
push
cs
and
movl
or
cmc
push
sbb
int
adc
sbb
mov
mov
or
in
jge
xor
and
adc
sbb
outsl
or
push
and
dec
imul
add
adc
les
dec
test
sub
jne
add
adc
cmp
and
sar
lea
push
lret
sbb
lea
stos
fs
mov
dec
cmc
or
add
ljmp
clc
cmp
int
add
add
sub
out
sbb
and
pop
add
out
fidivl
sbb
mov
lret
inc
adc
outsl
push
push
inc
rorb
out
mov
cwtl
or
xor
dec
loop
or
add
loope
addr16
dec
add
xchg
jl
cmp
xchg
imul
test
and
les
sahf
mov
ret
jl
jmp
dec
mov
pop
sbb
sub
call
scas
aad
outsl
sub
xchg
js
sbbb
ss
jnp
pop
lds
sbb
fadds
aad
sar
nop
adc
iret
hlt
ds
gs
mov
cwtl
lock
add
pushf
mov
test
lahf
dec
and
mov
adc
test
iret
cmp
insb
fildl
cmp
out
loopne
pop
push
cs
add
outsl
or
inc
insl
pop
aaa
xor
mov
or
mov
das
test
jo
clc
outsb
or
cmp
imul
into
sbbb
cmp
je
inc
push
lods
jno
xchg
xlat
add
clc
sbb
ret
lock
test
add
push
pop
adc
pop
jbe
or
xchg
loop
cmpsl
adc
dec
sub
xor
sahf
orl
addl
es
xor
push
push
mov
ror
pop
stos
inc
test
lds
arpl
sarl
shrl
mov
pop
lods
lret
sbb
mov
pusha
dec
lahf
shll
incl
pop
insb
adc
pushaw
pop
cmp
push
mov
lods
mov
rol
stos
mov
lahf
shrb
mov
test
pop
data16
hlt
jo
push
adc
inc
pop
mov
incl
sar
xor
mov
push
cld
daa
and
pop
sarb
clc
add
dec
sti
fld
inc
dec
dec
aad
movl
dec
push
out
aas
push
mov
add
stc
pop
xor
push
pop
push
push
and
loopne
xchg
xor
leave
add
lea
std
jg
insb
mov
cwtl
cmp
fildl
inc
adc
mov
pop
icebp
mov
fidivs
pop
inc
clc
lahf
or
or
mov
std
outsl
adc
sbb
jne
and
call
or
mov
mov
orl
negb
pop
and
and
add
outsb
and
cmpsb
pop
mov
enter
test
in
imul
push
incl
xor
lock
add
arpl
dec
inc
fwait
xchg
cmp
cld
imul
orb
mov
xchg
xchg
outsl
decl
pusha
jmp
insl
lods
push
and
clc
pop
shlb
jno
and
lock
mov
sub
mov
push
sbb
into
insl
mov
icebp
mov
xchg
sub
popf
movsb
iret
es
ss
push
mov
mov
add
mov
sti
pop
in
movsb
add
es
aam
dec
in
or
mov
mov
addr16
inc
add
shll
push
or
mov
pop
hlt
or
xchg
mov
pop
jge
lods
add
xchg
and
or
lcall
repz
push
andl
adc
push
adc
mov
xchg
jb
enter
adc
xorb
fnstsw
call
movsl
jmp
es
inc
push
sbb
fdiv
fxch
jns
xor
outsl
call
push
test
or
rclb
stc
inc
in
stos
inc
xchg
call
test
int3
push
pop
orb
mov
outsl
insb
jns
xchg
xor
roll
test
in
imul
ss
cmp
pop
stos
cmpsl
add
test
lea
sub
xor
adc
ret
gs
xchg
test
mov
mov
and
ss
jmp
das
aas
add
daa
movsb
dec
push
xchg
push
out
add
jne
adc
aaa
inc
adc
mov
pop
sub
aaa
xchg
cmp
mov
or
xchg
arpl
cmp
out
arpl
not
repz
test
dec
xchg
add
add
sahf
jecxz
and
popf
and
rcll
cmp
ljmp
clc
cli
imul
xchg
loopne
movd
pop
inc
sub
cli
or
and
adc
das
pop
mov
aas
push
push
rcrl
arpl
std
popf
dec
inc
mov
dec
pushf
push
mul
call
cli
sbb
insl
push
cmp
in
mov
icebp
xchg
sbb
adc
loop
jg
out
nop
push
pop
cmp
das
jne
xchg
enter
push
ja
add
data16
in
jg
clc
xchg
xor
icebp
adc
adc
sbb
inc
mov
ljmp
mov
xchg
or
add
mov
outsl
cld
aas
adcl
icebp
mov
ljmp
subb
in
out
mov
mov
xchg
das
aad
out
jg
scas
rorb
dec
xor
dec
inc
inc
loop
dec
xor
mov
pop
fsts
or
std
dec
cmp
incb
push
xchg
dec
and
add
lods
or
mov
jmp
loopne
incl
and
roll
cwtl
mov
jns
cmpsl
pop
icebp
idiv
imulb
push
imul
mov
jecxz
fsub
cwtl
lcall
mov
inc
xor
fdivp
jg
mov
bnd
inc
pop
es
add
xor
clc
pop
sub
sbb
call
cmpsl
lea
cmp
jmp
xor
in
mov
test
pop
inc
mov
mov
adcl
in
inc
pop
es
repnz
mov
out
ret
and
and
pop
xchg
add
call
in
cli
and
add
js
decl
pop
cli
inc
pop
mov
in
outsb
and
adc
inc
pop
mov
outsb
adc
xchg
push
sbb
cmp
pop
cltd
pop
movsl
movsl
in
inc
paddsb
fcmovne
std
jg
fdivr
add
inc
icebp
or
add
sub
mov
pop
out
adc
push
pop
mov
and
testb
jg
push
or
or
pushl
imul
mov
or
add
fisubrl
inc
and
xor
shlb
sahf
sub
cmc
aas
jle
stos
jg
pushl
fimull
sub
jge
add
test
in
xor
fbld
icebp
aas
mov
call
aas
push
push
mov
lcall
xchg
test
push
rclb
push
sub
inc
pop
rcrl
dec
jmp
fs
std
pop
lcall
mov
mov
stos
adc
dec
cmp
and
cmp
sbb
cmp
inc
xchg
add
stos
sbb
ds
inc
inc
out
clc
out
lods
inc
mov
or
dec
and
xor
sub
sbb
sub
stos
mov
add
mov
xchg
jp
fcom
mov
jo
sbb
int
jecxz
inc
sti
jbe
mov
xor
out
insl
cltd
fdivl
push
pushf
push
adc
sbb
outsl
adc
into
xor
js
add
pop
xor
or
sbb
cmp
inc
add
jb
sti
popf
jecxz
clc
push
pop
test
icebp
sbbb
pop
cld
sbb
jmp
sbb
dec
xchg
repz
mov
fcomp
push
dec
addl
push
out
or
add
sub
pop
aaa
addb
rcrl
xchg
jmp
mov
mov
pop
xor
addr16
incl
rcrl
fistpl
sbb
add
aaa
inc
mov
popa
mov
stc
pusha
jge
jnp
fdivrs
incl
or
sub
out
lock
push
pop
pop
sub
lds
mov
xor
mov
pop
mov
mov
pop
add
mov
test
pop
mov
mov
xchg
pop
js
std
mov
xor
in
mov
mov
mov
or
add
es
dec
lret
cs
mov
cmc
adc
lcall
push
hlt
xchg
decl
mov
pop
mov
mov
insl
out
mov
sub
inc
test
call
sub
clc
fistl
jne
addr16
add
popa
and
decl
xchg
jb
fcmovne
leavew
push
pusha
fcoml
test
hlt
push
push
incl
sbb
xchg
xchg
sti
subb
and
inc
fcompl
sub
adc
test
test
bound
dec
sub
xor
mov
mov
inc
aaa
aad
dec
add
and
cs
or
icebp
or
add
bound
pop
mov
test
bound
in
sbb
sub
testb
pop
or
sbb
rolb
dec
mov
lods
push
jge
cli
dec
imul
xchg
into
aaa
push
out
or
ud0
ljmp
sub
sbb
sar
insl
sbb
jl
sub
sub
fnstenv
sub
lret
jb
enter
or
xchg
push
imul
pcmpeqb
jge
mov
insb
std
xchg
fiaddl
or
sbb
iret
sbbl
inc
jne
pop
pusha
call
add
push
add
les
imull
rorl
cmp
mov
icebp
pop
daa
adc
mov
xchg
jmp
jg
push
sbb
rcrb
decl
mov
jae
mov
pop
aas
incl
dec
add
and
dec
jle
jp
loopne
popa
adc
fmull
jae
xor
cmp
test
ficoms
lea
test
cmp
shll
jb
lock
sarb
fwait
and
sbb
push
mov
sbb
cmp
sbb
xchg
inc
mov
movsb
mov
and
push
or
mov
sub
pushf
adc
mov
pusha
fbstp
sub
pop
clc
andb
std
pushl
out
mov
shll
loopne
cwtl
popa
lock
fisttps
leave
decb
mov
mov
mov
and
cmpsl
sub
in
xor
adc
xor
inc
mov
out
clc
shl
fsubl
push
nopl
repnz
lret
rorb
xchg
xchg
add
test
sub
xor
dec
fwait
or
mov
gs
rol
loopne
fstpl
ss
xor
fildll
mov
loop
adc
mov
inc
out
in
in
mov
fdivrp
push
lcall
arpl
xchg
ret
pusha
jmp
rorl
es
push
adc
push
loop
and
or
pop
lods
pop
andb
mov
lahf
shlb
fnstsw
pushl
pop
jp
pop
ja
mov
fcmove
hlt
sbb
push
and
jbe
xchg
mov
roll
pop
sbb
push
sbb
insb
add
xlat
in
inc
pop
out
rcrl
mov
lock
into
std
pop
mov
clc
or
decl
dec
js
push
add
pop
or
decl
add
and
sub
cmc
add
lock
pushf
adc
sbb
cmp
mov
es
test
inc
or
lret
add
sbb
inc
je
adc
pop
in
stos
xor
xchg
inc
xor
rorl
sub
outsl
xchg
or
jmp
sbb
xor
addb
decl
mov
cvttps2pi
sub
dec
out
jg
dec
jae
cmp
sub
insl
test
xchg
in
into
out
sbbb
enter
data16
add
insl
bound
pusha
add
out
sub
dec
orl
loopne
add
rcrb
jecxz
push
rcll
pop
das
filds
and
dec
push
or
mov
push
jo
orps
xchg
dec
jg
push
les
mov
shll
dec
aad
into
rol
scas
je
pop
out
mull
pop
clc
jg
xchg
shlb
imul
cmc
clc
scas
dec
pushf
add
or
aas
decl
adc
push
sub
das
sbb
and
fdivl
js
dec
pusha
and
dec
cld
call
je
rolb
cmc
and
and
sarb
data16
cli
mov
loop
mov
sbb
and
push
inc
jg
fsubrs
pop
and
jg
or
xor
cwtl
xchg
mov
lcall
icebp
sahf
xor
test
jmp
std
call
adc
pushf
les
mov
mov
mov
clc
dec
cmp
test
in
insb
lock
testb
mov
fdivr
pop
xchg
ficomps
xor
or
pop
xor
shlb
mov
ret
bound
movsb
inc
cmp
xchg
lcall
lods
and
pop
cld
jg
stos
icebp
jle
push
xlat
movsb
and
sbb
sub
mov
mov
sahf
insl
std
ret
mov
lcall
je
mov
sub
aaa
data16
test
pusha
lds
or
inc
cld
adc
andl
popa
and
inc
stos
roll
xor
dec
xchg
sub
inc
or
pusha
push
pop
out
call
arpl
inc
add
dec
cli
cli
es
jmp
push
shlb
in
cwtl
orb
gs
xor
fdivrl
mov
mov
jne
mov
repz
sub
outsl
aam
fdivrs
jbe
lcall
mov
add
or
les
cmp
mov
pusha
and
ljmp
insb
mov
addl
sbb
adc
ds
pop
hlt
inc
dec
fists
or
mov
mov
int
sbbb
and
xor
std
fistpll
mov
loopne
notl
rcl
out
ljmp
aas
jb
pop
js
bound
mov
add
fs
outsb
adc
hlt
xchg
mov
je
mov
sti
mov
mov
testb
xchg
incb
movsb
and
sbb
push
and
xchg
pusha
aas
push
mov
mov
mov
add
push
push
pop
adc
xchg
jbe
ljmp
cld
push
repnz
into
repz
incb
fistpll
jns
divb
jo
push
test
clc
push
lret
add
jmp
push
and
lcall
sbb
xchg
xchg
out
sub
sbb
dec
cld
xor
sub
jmp
xchg
jg
pushf
add
orb
cmp
cmp
rolb
mov
jg
mov
repnz
in
stos
insl
out
das
in
jg
mov
adcb
les
cmc
dec
outsl
fdivr
int
lcall
inc
outsl
cmp
or
push
sub
iret
dec
dec
dec
dec
sbb
xor
adc
xor
mov
jecxz
in
xor
jmp
jg
pop
ret
mov
inc
es
dec
std
imul
add
cmc
ret
jmp
das
lock
push
ds
icebp
pop
test
out
inc
adc
fdivrp
shl
mov
ficoms
sub
mov
jl
call
and
sbb
shrl
idiv
sbb
and
mov
cs
sbb
ss
jb
push
outsl
cld
jg
or
add
xor
and
pop
pop
clc
push
and
inc
movsb
mov
cmp
jg
fstpt
or
aad
mov
xor
loop
inc
mov
fistpll
dec
push
lock
mov
push
xor
add
mov
out
hlt
repz
adc
into
sbb
andl
stos
rorl
mov
rorb
push
aad
std
iret
cmp
orb
jnp
sti
incl
or
adc
lahf
mov
cmp
test
lea
jg
xchg
popf
jl
push
repnz
scas
rol
std
out
loopne
rolb
out
lds
pop
test
mov
es
push
mov
push
adc
mov
aaa
hlt
div
xorb
stos
das
sti
and
mov
jecxz
sub
pop
pushf
adc
push
cwtl
clc
cmpsl
icebp
das
cld
sbb
stos
mov
inc
inc
sub
je
sub
or
mov
add
sahf
pushl
and
adc
dec
xor
popf
lods
dec
fwait
jmp
adc
adc
iret
loop
mov
inc
leave
adc
cwtl
out
or
int3
aad
push
sub
mov
fistl
jnp
pop
push
mov
cs
cmp
subps
jns
out
lods
or
mov
int3
test
sbb
sti
xchg
xchg
out
stos
pusha
sbb
aas
stc
push
ffreep
jb
sub
dec
imul
hlt
add
lea
neg
test
jmp
mov
mov
pusha
fwait
push
jle
xor
fwait
or
push
add
sahf
mov
mov
std
mov
add
push
and
test
xchg
iret
mov
je
lcall
mov
aaa
inc
stos
popf
int
mov
lahf
dec
lods
inc
mov
addr16
movb
daa
in
leave
popa
lea
adc
cmp
mov
jae
loopne
testl
pop
sub
lahf
out
add
cs
jg
ret
inc
call
xchg
mov
sbb
or
pushf
jge
roll
dec
ja
mov
sarl
jo
je
outsl
mov
push
popf
jns
pop
inc
sti
cli
mov
in
in
pop
scas
xchg
fildl
push
or
clc
xlat
add
bndstx
or
dec
fldt
pop
jmp
or
bound
out
ss
mov
push
mov
sarb
fstpt
cmp
pop
sbb
movsl
sbb
scas
xor
clc
xchg
push
mov
jbe
inc
jmp
rorl
mulb
xchg
cmp
xor
lds
aad
fadds
jmp
push
mov
dec
outsb
jne
pop
xchg
jecxz
pop
sar
dec
incl
orb
pushf
enter
mov
or
lock
mov
dec
jl
mov
inc
je
sub
add
test
fwait
icebp
sahf
jmp
fs
mov
mov
xor
imul
adc
lods
cmp
xchg
rorl
repz
sbb
stc
leave
push
das
std
movl
popa
cmp
and
imul
lods
mov
andl
mov
gs
adc
dec
test
sub
aad
lahf
scas
std
aad
and
decl
or
addl
lds
add
jmp
rolb
mov
adc
je
andb
shll
mov
xor
sbb
popa
test
test
jg
clc
test
test
push
mov
incb
imul
cs
movsl
outsl
lds
js
imul
jg
std
pop
loope
or
inc
les
push
adc
dec
adc
add
insb
sub
out
enter
mov
leave
fadd
jg
lock
cwtl
inc
decb
mov
mov
sub
dec
lds
mov
cwtl
push
hlt
decb
nop
andb
xor
cmp
addl
cld
loopne
loop
pop
les
mov
xchg
ret
add
lret
icebp
movsl
lods
dec
les
icebp
movb
rorl
das
mov
and
push
cmp
pop
push
and
test
jo
adc
mov
adc
andb
daa
push
push
cmp
ret
or
fdivl
loope
mov
rolb
or
cld
mov
fwait
mov
push
shll
mov
divb
adc
and
lret
push
add
sbb
jl
outsb
add
inc
cmp
aam
fldcw
pusha
sub
cwtl
inc
ljmp
sti
mov
xlat
insl
jbe
add
xor
adc
sub
lret
cmpsb
stos
xchg
les
pop
dec
in
test
adc
loop
add
mov
push
cld
inc
dec
sub
mov
add
dec
mov
nopl
ljmp
js
jne
xchg
jno
push
mov
adc
add
push
sbb
sbb
dec
cli
dec
push
fcoms
ja
mov
jno
mov
adc
inc
jnp
mov
mov
mov
add
ret
push
verw
int
ljmp
jp
or
sbb
out
shrb
shll
shlb
iret
scas
jge
xor
or
cmp
lods
in
inc
faddl
aaa
jge
std
or
push
cld
push
cld
jno
dec
mov
out
adc
pop
data16
loop
stos
lds
stos
xlat
movl
add
or
dec
in
out
xor
or
push
jnp
test
in
fwait
mov
and
daa
ljmp
ret
roll
sub
mov
iret
out
or
inc
sbb
mov
dec
push
sbb
out
in
jo
imul
sub
or
inc
and
cmpsb
orl
popf
and
fsts
push
xchg
jne
ja
mov
jge
sbb
ret
je
arpl
mov
dec
clc
pop
std
xlat
or
mov
shrb
enter
mov
sub
jnp
enter
jmp
pop
lds
mov
sub
dec
pop
rcrl
sbb
add
add
jne
pop
loope
insl
lcall
pop
pusha
imul
out
inc
pop
cld
jg
add
jle
ret
loopne
xchg
xchg
rcrb
fs
call
jmp
add
jo
into
sarl
test
lock
jg
mov
std
and
lahf
push
ret
inc
lods
xor
mov
cmp
pop
stos
sbb
xor
jl
icebp
incl
shll
xchg
xchg
sbb
and
mov
ljmp
pop
pop
icebp
inc
incl
mov
orb
adc
call
ret
jg
repnz
not
inc
and
push
sub
nop
test
das
push
push
ret
iret
adc
mov
mov
loopne
adc
clc
popf
bound
hlt
mov
pop
lock
call
fstpl
stc
icebp
fdiv
lahf
insb
test
mov
add
pushl
mov
test
sbb
ljmpw
mov
call
adc
xchg
punpcklwd
lea
rolb
ret
jmp
cmp
pop
lock
icebp
lock
pusha
jmp
mov
cs
aas
clc
or
mov
ret
xlat
pop
xor
sub
mov
or
cmp
mov
push
push
pusha
and
or
loop
sub
jno
mov
hlt
fs
inc
cs
cmpsb
push
adc
cltd
test
ds
incb
call
or
int
add
popf
mov
add
lea
clc
aad
jecxz
push
pop
mov
sar
sub
cmp
dec
jb
aam
sbb
outsl
add
push
mov
iret
xlat
out
xorb
adc
subb
outsb
cmp
pop
jno
test
fnstsw
je
test
ja
mov
jmp
add
add
mov
cli
adc
sbb
icebp
icebp
sbb
das
mov
mov
divl
cwtl
sbbb
inc
mov
push
inc
and
mov
test
and
aam
fdivrs
fadds
mov
mov
imul
mov
call
push
inc
cld
sbb
clc
jmp
or
and
test
or
push
xor
xor
jae
sbb
and
shrl
data16
xor
sbb
js
xchg
call
push
adc
adc
inc
std
ljmp
pop
push
sub
and
adc
jb
jae
fdivl
lea
aam
leave
pop
xchg
dec
shrl
xor
insb
xor
lock
pop
mov
inc
inc
stos
pop
rorb
sub
gs
mov
ret
outsb
mov
cmpsl
lods
sar
arpl
out
push
adc
add
xchg
loop
mov
pop
test
icebp
popf
mull
stc
int
popa
adc
sub
push
lcall
cwtl
cmpsb
add
fucomip
mov
and
leave
dec
mov
mov
lret
push
inc
xor
dec
adc
lahf
call
and
in
push
mov
jecxz
push
test
push
test
push
mov
ret
int
add
scas
or
popa
cmp
or
mov
inc
les
aam
xor
pop
push
out
mov
push
pushl
pop
cs
dec
inc
and
mov
cmp
sahf
and
pop
icebp
jg
mov
xchg
and
arpl
pop
pop
rcr
sahf
and
test
movsl
jg
cmp
mov
cmp
loop
imul
mov
push
bound
add
inc
xchg
je
dec
adc
loop
sbb
loopne
lcall
test
out
and
imul
pusha
and
ret
inc
add
loopne
sarl
jae
xor
dec
pop
xor
jns
pop
bound
insb
add
add
push
int3
mov
aaa
movsb
push
loopne
je
fdiv
or
iret
subb
arpl
inc
mov
ljmp
xor
and
sub
mulb
pop
in
mov
call
rclb
ret
pop
fucomip
arpl
lock
dec
aaa
inc
ret
cmp
cmp
jecxz
nop
ret
mov
decl
loopne
into
add
mov
dec
sbb
rcl
mov
leave
in
and
sub
dec
subb
sub
push
pop
ret
xchg
jnp
inc
clc
popf
lock
imul
add
icebp
sbb
add
push
add
hlt
fsubs
xchg
jo
cmc
lahf
xor
sub
cmp
and
cmp
jg
pushl
iret
ss
xchg
and
or
pop
pushf
jmp
jle
mov
frstor
ljmp
int
iret
mov
out
jp
and
loopne
jg
call
mov
jne
pop
mov
data16
rcrb
or
xchg
or
xchg
jae
incl
xadd
sbb
or
cmp
push
jle
aam
insb
and
push
hlt
sahf
outsb
idiv
xor
pcmpeqd
or
push
xor
jmp
lahf
test
xor
insb
arpl
lds
or
pop
clc
push
dec
data16
imul
inc
ljmp
rorb
adc
outsl
push
cli
inc
daa
lock
jno
xchg
test
jmp
xchg
xchg
mov
sub
aaa
inc
mov
ds
and
fiadds
lret
or
and
jl
stos
dec
sarl
std
xchg
loopne
dec
push
rorb
jns
mov
incl
add
jmp
mov
call
mov
cli
test
inc
in
cmp
out
or
orl
cs
scas
jno
out
sub
jg
xchg
pushf
fiadds
test
xchg
dec
nop
stos
cwtl
sti
outsb
dec
or
icebp
dec
call
add
scas
push
lock
pushl
in
jns
stos
jns
nop
cmp
mov
aam
pop
jg
mov
mov
stc
stos
adc
add
addb
inc
dec
add
dec
test
push
mov
fsub
mov
push
inc
int
loop
pop
pop
push
push
dec
pop
pusha
addr16
mov
jne
or
push
imul
hlt
pop
pop
or
sub
adc
dec
outsb
mov
inc
pop
outsl
cld
lahf
lock
jge
enter
fistpl
mov
inc
call
mov
shl
push
xchg
movsb
cmp
shlb
add
lret
cwtl
xchg
pop
dec
int
daa
push
sbb
in
ljmp
push
nop
xor
sbb
jno
lods
jp
xchg
jo
rep
dec
ret
xchg
adc
ljmp
sarl
test
push
dec
fwait
mov
pop
out
and
add
inc
add
cwtl
aam
sar
ljmp
and
push
mov
pop
ds
or
xor
pop
inc
mov
shrl
imul
aad
xlat
pushl
idivb
mov
fwait
inc
xchg
mov
idiv
mov
push
in
cli
xchg
mov
inc
in
std
xchg
dec
or
pop
loope
jmp
int
or
pop
fisubl
inc
xor
shl
mov
mov
add
scas
sbb
sub
mov
push
lock
insb
dec
clc
insl
push
jmp
inc
pop
aas
test
les
fmuls
adc
sbb
movsb
mov
repz
jmp
addr16
inc
je
push
mov
add
and
test
sahf
in
pop
aaa
xchg
add
push
mov
notl
pop
mov
jns
and
sbb
std
jg
jg
adc
inc
hlt
mov
inc
cld
add
sub
add
xchg
cmpb
rcll
dec
adc
inc
insl
rorl
add
cmp
cmp
movsl
mov
sbb
dec
inc
mov
sub
mov
or
push
jge
and
ja
fsubrs
in
mov
push
and
pop
inc
pushl
push
subb
xchg
xor
or
flds
sbb
sbb
and
lcall
mov
js
sbb
xchg
jl
inc
jg
jle
add
cmc
jno
jnp
movsl
sub
sbb
outsl
sub
xlat
fwait
sahf
popa
xchg
push
sbb
std
lcall
mov
and
into
pusha
decb
inc
jbe
and
out
mov
cmp
or
and
decl
ret
push
int3
stos
add
xchg
in
inc
and
cld
sbb
enter
pop
leave
xor
pop
clc
mov
sti
cmc
pop
fdivs
dec
push
mov
xorl
loopne
icebp
jle
cmp
xor
jmp
hlt
cwtl
lea
mov
cmp
std
dec
mov
adc
mov
rclb
rolb
mov
mov
mov
sbbl
testb
lea
jno
jns
cmp
test
jo
xor
xor
xchg
adc
enter
aaa
insb
add
xchg
mov
push
cmp
dec
outsl
push
cwtl
dec
push
shll
popf
call
pop
add
jmp
dec
les
stc
out
inc
or
mov
mov
or
cmc
scas
adc
push
outsl
jo
sbb
fcmovb
inc
push
cli
xor
es
inc
in
fcoml
fbld
xor
mov
call
incl
sbb
shlb
mov
cli
les
adc
in
test
pop
push
jne
imul
and
ja
call
or
cmp
xor
clc
in
jmp
clc
and
mov
stos
add
cltd
loopne
aam
shrb
cld
mov
push
mov
mov
in
xorl
int3
pop
scas
adc
pop
mov
jbe
or
int
aas
sbb
xchg
cmc
cli
add
mov
ljmp
xchg
inc
push
sub
adc
fcom
aaa
clc
incl
outsl
sub
and
dec
push
testb
mov
enter
adc
cld
pop
js
adc
sbb
repnz
sbb
clc
xadd
loope
pop
jb
and
or
mov
jmp
push
dec
adc
pop
repnz
repz
fsubr
pop
mov
repz
pop
lds
inc
push
ljmp
aaa
jmp
popf
rorl
aas
outsb
mov
jl
jl
push
hlt
out
mov
decl
test
popf
push
or
mov
xchg
xor
jge
inc
and
iret
incl
adc
add
sub
or
mov
inc
xchg
popa
call
pop
or
mov
or
mov
cld
dec
push
cld
loopne
sub
orl
add
loop
aaa
mov
sbb
sub
adc
jbe
repz
dec
fmuls
lret
cmp
sub
ret
mov
das
xor
mov
iret
jb
xor
dec
out
sti
mov
cld
mov
repnz
add
mov
cltd
mov
dec
neg
jo
add
inc
je
add
cwtl
repz
out
add
loop
pop
push
add
or
mov
aaa
cmp
stos
or
cmpsl
cmpsl
xor
fidivrs
inc
add
fidivl
add
scas
jge
dec
add
add
sbb
mov
lahf
mov
or
mov
outsb
out
rcrb
mov
test
pop
and
add
jo
pop
push
and
into
repnz
xlat
hlt
cld
lcall
loopne
arpl
rclb
repnz
add
jmp
clc
das
add
ret
or
xor
sbb
clc
xchg
sbb
adc
daa
aas
rcr
loop
leave
jae
int3
subb
sub
les
in
aad
add
pusha
test
fldt
js
sub
mov
rcll
cmpb
lea
xor
add
sahf
test
or
clc
mul
cmp
xor
cs
es
xor
push
mov
lods
jo
cmp
leave
sbb
fcmovb
inc
aam
into
jg
outsl
loope
ds
lods
or
xlat
popf
sub
fcmovnb
out
inc
je
jmp
mov
mov
mov
cmpsb
adc
or
rclb
mov
sbb
and
pop
negb
inc
mov
mov
and
cld
imulb
addl
int3
pop
daa
cld
add
push
repnz
sbb
lods
ja
jl
aas
add
insb
pop
mov
mov
cld
out
sar
xor
fadd
andb
mov
negb
lret
fs
pushf
inc
mov
out
test
dec
mov
punpckhdq
decl
loopne
decl
and
rcl
or
push
or
adc
test
es
iret
push
call
jbe
dec
bound
cwtl
lock
sbb
lea
fsts
cmpsb
inc
ret
or
adc
dec
inc
mov
fwait
test
out
clc
lcall
loope
push
shlb
sbb
repz
popf
je
add
mov
stos
xchg
and
mov
adc
or
cmpl
mov
inc
lock
jns
add
ljmp
jb
icebp
pop
or
fadds
mov
test
sbb
dec
jg
pop
adc
dec
mov
aam
iret
cmc
add
nop
decl
xchg
insl
aas
aad
mov
mov
mov
sub
pushl
jno
push
xor
dec
sbb
cmp
sbb
lods
mov
cld
jbe
lret
and
cli
in
inc
call
out
stc
imul
mov
mov
or
enter
jg
and
pop
nop
mov
adc
mov
pop
enter
pop
sbb
js
adc
call
push
xchg
add
inc
repz
lea
pop
lahf
popa
out
lods
and
inc
and
popa
sub
cmp
lds
std
das
rcll
psraw
dec
call
ljmp
into
ja
pusha
mov
insl
push
pop
sarb
add
mov
lods
mov
adc
or
jp
inc
pop
enter
std
incl
inc
push
and
repz
js
test
lea
fistpll
icebp
jg
fwait
add
xor
lea
jmp
add
lahf
or
push
push
int
cld
lahf
dec
mov
shrl
movsl
hlt
aad
fs
lcall
test
add
push
insb
and
mov
nop
inc
aas
fdivrp
jmp
inc
mov
outsl
adc
addr16
stc
ja
pop
lcall
testb
addr16
inc
je
hlt
jmp
jno
push
add
clc
ret
fisubrs
xchg
fnstcw
sub
inc
push
inc
jne
push
cmpsb
fs
inc
or
jne
pop
jg
xor
and
xchg
repnz
outsl
lock
mov
cmp
mov
pop
xchg
daa
push
cld
push
push
pop
nop
cwtl
fcom
add
and
xchg
add
gs
or
adc
add
out
push
mov
jp
pop
xchg
adc
or
mov
sub
sahf
sub
or
mov
sbb
add
adc
and
or
pop
rcr
or
mov
or
push
test
fsubl
sbb
jge
cltd
mov
xor
xchg
sbb
sarl
add
xor
add
pop
pop
insl
dec
dec
lahf
add
jg
or
inc
xor
sbb
sbb
jo
xchg
push
add
lea
and
cmpsb
cmp
pop
shl
add
xchg
in
lcall
adc
cli
mov
test
mov
cmpsl
push
inc
or
loope
inc
leave
inc
xor
mov
xchg
adc
fmuls
iret
add
dec
inc
das
add
into
sbb
cmp
inc
xor
out
sbb
stc
jae
fwait
cltd
call
imul
mov
mov
lcall
xor
lret
daa
mov
adc
adc
cmp
pop
icebp
jae
pop
rorb
outsb
dec
inc
pop
test
adc
xor
stos
sbb
mov
mov
adc
test
loope
inc
inc
divb
aas
sbb
out
and
sbb
push
mov
flds
and
push
frstor
arpl
or
inc
scas
fstpl
add
sbb
or
inc
adcb
das
or
push
in
mov
pop
shll
adc
pop
push
xchg
jmp
mov
add
jmp
inc
lret
pusha
inc
ret
mov
incl
aad
mov
sarb
jne
shlb
jo
pushf
mov
insb
push
xor
push
les
pop
xor
mov
adc
adc
jbe
sarl
int
xor
or
ret
push
cmpsl
aam
xorl
add
adc
out
icebp
push
outsl
sbb
sbb
xor
add
lods
pushf
xor
push
das
mov
xor
inc
jge
xor
repz
and
inc
aas
mov
js
js
sbbb
push
push
sbb
dec
sbb
dec
std
lcall
lret
cwtl
insb
mov
fwait
stc
js
in
cltd
jns
dec
xor
inc
cmp
loop
sbb
jecxz
es
cld
shrl
xchg
jmp
dec
popa
inc
cltd
lea
mov
sbb
mov
adc
or
fsubrl
sar
cld
pop
xchg
lahf
arpl
fildl
jbe
std
aaa
ljmp
cltd
fndisi(8087
cltd
inc
lock
xchg
cli
mov
push
jmp
pop
fistps
push
sub
data16
jg
xor
sub
lods
jns
jns
int3
jne
aaa
add
pop
dec
into
cmpsb
test
sub
ljmp
dec
repz
call
sbb
lock
push
stos
jl
adc
test
inc
icebp
jg
adc
add
sub
dec
adc
push
sahf
sbb
subb
cli
add
sub
push
xchg
pop
fdivrp
ljmp
sub
int3
pushf
pop
cs
add
inc
ds
insb
testl
test
cs
push
pop
dec
xchg
pop
bound
mov
mov
les
clc
lcall
bound
lahf
cmc
mov
sti
jg
je
xchg
push
cmpsb
cltd
mov
dec
pop
add
lock
loop
or
adc
xlat
push
mov
arpl
xchg
negb
cld
push
sbb
jge
aam
lret
adc
dec
or
ja
mov
and
push
stc
push
lds
add
jge
in
add
in
rolb
or
popf
or
jb
out
repz
pushl
or
mov
mov
shll
add
shll
push
aad
mov
filds
mov
xor
adc
mov
adc
stos
cmc
fcompl
adc
test
xchg
pop
into
nop
data16
test
mov
inc
inc
imul
loop
cmp
jecxz
loope
push
leave
xor
xchg
mov
push
or
adcb
stc
popf
enter
shrl
ret
xorb
scas
add
fmull
inc
push
xor
cmp
mov
movl
rcl
fstpt
rorl
and
dec
inc
adc
push
outsl
sub
cmp
inc
in
pop
in
sub
add
adc
popf
add
fildll
add
mov
dec
in
adc
sub
dec
in
push
push
les
mov
jo
xor
push
inc
rolb
inc
mov
jb
push
adc
test
jecxz
cmp
adc
pop
add
dec
nop
out
call
movsl
inc
inc
dec
cltd
test
negb
lcall
loopne
imul
push
adc
lcall
imul
aad
popf
in
repz
adcb
or
in
insl
mov
and
bound
mov
push
fcmovnu
add
addr16
jg
or
add
mov
pusha
pusha
adc
push
subb
push
or
xor
dec
loop
rcrl
pushf
or
cmp
sarb
movsl
adc
movsb
out
ljmp
adc
int3
mov
inc
sarl
aam
sub
jmp
pusha
xchg
add
adc
call
xchg
dec
das
and
call
sbb
ret
gs
add
flds
or
cltd
sbb
out
jge
insl
out
adc
and
inc
in
push
andb
lock
std
std
stos
jle
mov
lock
jne
nop
xchg
mov
inc
and
mov
and
pusha
outsl
adc
xchg
pop
data16
fs
fldcw
test
sarb
lahf
pop
and
loope
lock
xchg
jno
arpl
outsl
adc
je
dec
mov
jnp
mov
lret
pop
ds
jne,pn
xchg
mov
push
pop
pop
mov
bound
mov
sub
add
pop
ljmp
fcomps
pop
lods
push
jns
arpl
jecxz
pop
rorl
cmpsl
push
scas
dec
jmp
xchg
or
ficomps
inc
leave
push
mov
inc
lods
imul
and
out
into
pusha
std
cmpxchg
dec
shll
mov
push
je
cmc
cwtl
sti
pusha
jle
outsl
mov
shll
push
and
leave
in
inc
inc
ljmp
loop
sub
push
outsl
lcall
clc
in
daa
push
test
loop
scas
pop
icebp
aaa
xchg
call
dec
hlt
imul
dec
add
and
add
mov
ds
insb
xchg
hlt
adc
sub
xchg
mov
cmp
cmp
hlt
and
movsb
or
push
cmc
cmp
and
push
das
add
addb
les
iret
add
add
add
hlt
and
clc
popl
jmp
andl
jge
add
add
inc
and
add
data16
lcall
push
dec
dec
das
out
shrl
xchg
pop
stos
mov
in
sub
mov
cmp
mov
lods
mov
jne
cmc
mov
cli
int3
inc
and
lret
add
push
or
cmp
add
scas
pop
mov
add
std
mov
arpl
or
mov
inc
sbb
inc
test
shrl
pop
push
dec
pop
pop
xchg
push
sbb
subb
push
subb
cmp
jns
addb
adc
es
out
mov
sbb
in
lock
sbb
add
pop
mov
adc
push
xchg
aam
add
xorb
pop
cld
mov
push
inc
pop
jae
sub
xchg
imul
test
push
mov
pop
pop
cmpl
pop
push
add
and
hlt
xchg
test
testb
out
xor
add
cmp
outsl
pusha
pop
sbb
fiaddl
cli
sbb
adc
iret
lea
int3
pop
roll
aam
shlb
push
jnp
pop
pop
push
mov
pop
push
jns
jb
push
mov
jp
mov
mov
push
cmp
push
xor
jmp
sub
cltd
popa
adc
or
mov
jnp
mov
pop
push
call
xchg
pop
and
test
sub
add
mov
shr
push
rorb
test
and
stos
pop
push
push
jae
jg
lock
xor
scas
ret
call
pusha
clc
mov
arpl
mov
jbe
sbb
inc
nop
mov
mov
jecxz
cmpb
push
std
sub
je
adc
xchg
les
mov
add
aam
in
add
and
adc
inc
dec
xor
aam
das
jbe
sbb
rolb
adc
mov
mov
add
cmpb
movsl
mov
movsb
dec
lret
sbb
incl
mov
pop
push
hlt
mov
inc
jne
ds
incl
cmp
call
sub
std
pop
cli
mov
cmp
sub
pop
mov
mov
movl
sbb
call
push
movl
sti
sbb
lds
or
lock
movsl
push
adc
inc
pusha
add
fsub
incl
sti
xchg
lret
pop
dec
rclb
mov
clc
jg
das
enter
icebp
sbb
aas
mov
sub
subb
lret
aaa
sub
mov
push
push
xor
stos
xchg
cmp
adc
mov
cld
jmp
add
nop
mov
lock
mov
in
pop
rcrb
sbb
sub
loope
mov
add
jecxz
lret
inc
add
lds
cli
adc
mov
pushf
adc
jg
sarb
adc
out
sub
sar
lods
decb
int
rclb
mov
insl
ret
clc
and
mov
dec
xchg
jg
cmc
mov
les
lahf
jl
pop
popf
shll
fbstp
push
bound
xor
adc
pop
push
add
cmp
or
test
mull
add
push
decl
sub
mov
jge
or
jo
mov
ja
test
inc
jae
sub
fimuls
sahf
add
loope
sbb
and
repnz
dec
js
dec
cld
jg
add
rorl
push
mov
movsb
movsb
mov
lret
cmp
jb
add
icebp
stos
push
mov
push
and
incl
pop
mov
cmpsl
shlb
loop
mov
adc
dec
mov
add
xlat
dec
lcall
inc
pop
nop
nop
sub
aas
push
ficoms
mov
subl
je
scas
inc
jmp
pushl
out
ficoml
mov
loope
loopne
mov
ja
decl
rolb
mov
jecxz
lea
addr16
inc
mov
or
jae
xchg
and
ljmp
push
mov
mov
out
cli
jg
rolb
iret
decb
scas
and
jecxz
jns
loope
and
lods
scas
or
ret
mov
add
dec
mov
pop
mov
xchg
ret
add
mov
test
xchg
cmc
or
pop
lea
dec
scas
add
clc
cmp
push
cmp
and
mov
stos
lock
lea
xchg
fdivrs
popf
notl
xchg
xor
pop
adc
cmp
jg
shlb
mov
loope
ds
clc
dec
push
test
test
clc
inc
daa
jl
stos
filds
stos
add
push
jb
adc
ret
mov
jp
jl
sub
je
cltd
idiv
jbe
mov
pmaxub
sub
pop
fldt
decl
mov
and
lock
dec
mov
into
test
fcoml
and
mov
push
lock
test
xchg
insl
stos
lcall
mov
fimull
lods
push
jp
roll
jmp
and
pop
out
aam
jle
js
pop
and
mov
pushl
mov
and
sar
in
aas
sbb
es
ret
js
and
mov
incl
cmpsl
jecxz
jle
out
shll
sub
and
jmp
sbb
adc
lcall
aaa
or
push
es
pop
sti
out
adc
xor
das
movsb
xor
pusha
xchg
inc
aaa
xchg
push
lds
jg
or
sbb
lret
mov
ret
int3
fcomip
in
pop
inc
add
cmp
cmp
call
or
cli
dec
imul
sti
pushl
or
xorb
mov
ljmp
xor
xor
idiv
cld
mov
test
pop
pop
and
mov
add
pop
mov
xor
mov
ret
xchg
rcrl
jmp
adc
push
loop
aam
sub
sbb
mov
jp
loopne
cld
push
or
sbb
insb
mov
std
push
mov
xchg
mov
sbb
add
fdivrs
imul
idiv
inc
pop
and
lret
mov
push
xor
mov
xchg
mov
lods
mov
add
pop
stos
inc
sar
aas
ljmp
das
sahf
add
sbb
repnz
ss
outsl
dec
mov
movsb
loopne
and
lods
orl
data16
outsl
inc
or
test
jns
das
insb
add
lret
lds
pop
dec
test
xchg
push
sub
lret
enter
jmp
stc
mov
push
sti
sub
or
or
mov
clc
mov
add
inc
mov
cld
hlt
sar
ret
mov
imul
push
ja
jno
cmp
jae
xorb
pop
add
sbb
in
mov
add
lahf
cmp
pushl
clc
aas
aad
or
pop
stc
and
fsubp
pusha
sahf
jg
jmp
das
mov
cmp
es
repz
subl
lahf
out
ja
jg
mov
xor
out
nop
fs
inc
push
loope
setne
push
pushl
nop
cli
pop
sbb
jl
add
push
mov
in
shr
cmp
push
shll
addl
mov
pop
lds
cmpsb
add
lcall
jmp
jno
in
shrl
mov
cmp
je
clc
or
sar
ljmp
out
mov
imul
mov
js
jbe
icebp
jle
pop
loope
add
add
jb
imul
cld
mov
cmp
xorl
adc
test
fiaddl
push
pop
mov
adc
repz
ja
and
sbb
push
mov
ret
cmpsl
or
aas
xchg
and
ret
decl
push
lcall
insl
cwtl
dec
sub
in
push
jg
cmp
outsb
add
xchg
mov
pop
js
ret
fdiv
mov
outsl
and
push
das
ror
dec
outsb
and
hlt
imul
mov
or
sbb
stos
mov
mov
sub
jg
inc
sub
cmp
out
filds
mov
mov
nop
pop
inc
fcomps
std
cmp
mov
sub
scas
rclb
shl
mov
pop
add
inc
jb
fnstsw
and
dec
mov
mov
jne
jmp
das
js
push
add
js
sbb
inc
mov
dec
mov
clc
push
jg
jns
orb
data16
dec
cli
hlt
fisttps
into
pop
lods
arpl
adc
push
cmpl
icebp
leave
adc
addb
sbb
push
lahf
add
jno
adc
ret
int
rolb
fidivs
push
outsb
in
lds
in
jns
dec
repz
mov
and
xchg
inc
test
xchg
call
outsb
decl
mov
mov
out
aam
test
ljmp
xchg
adc
xchg
fwait
loopne
cli
xorb
fnsave
test
inc
hlt
incl
inc
and
shlb
or
jge
or
das
adcb
mov
push
mov
mov
fwait
push
inc
das
mov
inc
ja
subb
fildll
mov
stos
gs
adc
enter
addr16
cli
lods
inc
clc
cld
outsb
dec
mov
je
sti
push
clc
mov
mov
push
icebp
mov
and
dec
xor
jae
jo
jb
mov
jmp
add
js
lock
xlat
inc
add
arpl
lahf
in
andl
push
adc
adc
cwtl
sbb
jne
addr16
imulb
testb
enter
test
push
or
nop
ror
loopne
cmpsb
test
or
stos
ret
icebp
sbb
es
sub
mov
filds
jp
jg
daa
cmp
push
shll
mov
sbb
cmp
out
inc
pop
or
cld
or
pop
int
mov
add
add
cmp
pcmpgtb
mov
mov
jo
rorl
and
jmp
add
andb
mov
incl
add
mov
sti
lret
mov
push
add
inc
lcall
mov
push
mov
xor
loop
xlat
jmp
pushf
xchg
dec
pop
test
lcall
adc
clc
push
rolb
popa
int3
push
or
rcl
and
mov
mov
add
outsb
imul
int
add
fists
xor
cmp
fadds
push
mov
push
mov
xor
lea
sub
call
mov
leave
addl
repz
xor
outsl
in
pop
jns
xchg
mov
lods
pop
jl
repnz
sbb
mov
push
cmp
adc
js
bound
jge
or
mov
cmp
add
xchg
or
es
push
sti
xchg
mov
adc
mov
pop
fildl
sahf
cld
addl
std
out
push
pushf
inc
xlat
lock
cmpsb
push
incl
mov
push
repnz
jl
push
xor
inc
lret
ret
mov
sub
bound
clc
pop
mov
ljmp
adc
dec
dec
inc
cld
loope
jecxz
push
xchg
enter
cmpl
loope
nop
or
xchg
out
pop
pop
sub
or
es
aaa
iret
mov
test
mov
lcall
and
cmc
add
push
cwtl
shr
decb
sbb
cld
dec
fisttpl
pop
cmpb
loop
jbe
addr16
dec
adc
addr16
pop
push
iret
mov
shll
cmp
xor
scas
mov
test
push
mov
or
push
addl
mov
outsl
outsb
push
lds
rcrl
es
adc
outsl
shrl
loopne
inc
and
aaa
mov
xor
sub
mov
into
cmp
cld
push
roll
mov
rorb
add
call
incl
lcall
dec
jae
and
sub
ret
adc
mov
das
mov
clc
in
xor
lock
fcomip
addr16
loope
push
aad
push
add
pop
sbb
sbb
insb
addr16
pop
cmp
test
loopne
inc
lock
imul
fistpl
sub
push
dec
icebp
sub
cwtl
jns
and
out
cli
inc
dec
ss
dec
mov
out
cmc
movsl
movsb
cwtl
inc
mov
push
fdivrs
xor
stos
es
cmp
aad
ficompl
jne
and
inc
insl
or
xchg
mov
fisubrs
inc
out
ror
cld
push
or
pmaxsw
add
or
dec
aas
pop
and
cwtl
or
xor
ja
fisubs
aad
jne
add
xorl
sbb
mov
cmp
sbb
jae
jl
sub
popl
jle
mov
fcomps
mov
mov
jecxz
aam
outsb
pop
std
rorl
pop
adcb
cli
repz
sub
jmp
faddl
adc
jo
push
sbb
add
fcoml
idivb
call
mov
jecxz
mov
int
inc
push
pop
jns
jmp
int
mov
pop
jecxz
cmpsl
mov
rol
and
in
sar
aas
push
adc
subl
pushaw
cmp
insl
loop
pop
xchg
decl
sbb
fsubrp
sub
xchg
push
es
dec
inc
jg
push
mov
lods
sti
sub
orb
cld
fstpl
fs
mov
lret
rcrl
cld
cmpb
das
pusha
aas
insb
cmp
incl
mov
dec
adc
jo
or
cmpsl
or
mov
push
in
mov
jns
clc
das
inc
sub
bound
mov
iret
dec
movl
out
aas
cmp
andl
cmp
jecxz
xchg
fwait
lcall
lret
pop
js
adcb
call
pop
js
mov
rcll
adc
js
decl
jnp
or
jbe
push
call
in
or
xchg
decl
lods
inc
pop
mov
sbb
mov
adc
dec
or
bound
cld
outsb
out
and
leave
sbb
cmc
iret
sbb
in
loope
enter
ficompl
and
pop
cltd
jmp
jg
sahf
test
pop
or
adcb
roll
pusha
and
out
sub
push
mov
scas
fcomps
repz
inc
jbe
in
call
mov
mov
sbb
int
inc
negb
mov
mov
sub
nop
push
test
jecxz
add
notb
or
xor
xorb
int
shlb
cltd
sbb
into
push
insl
addr16
sbb
pop
ret
shlb
or
lret
xor
cmp
dec
idivl
cmp
or
lcall
push
mov
sbbb
sahf
and
xor
dec
loopne
int3
add
test
adc
adc
leave
mov
push
call
jae
call
out
or
sbb
es
adc
mov
iret
mov
and
scas
or
cmp
insl
daa
sarb
iret
ja
icebp
xchg
mov
cmpsb
loope
pusha
aam
jo
xor
pop
sbb
jl
push
or
add
push
push
shl
es
mov
add
sahf
loope
inc
cld
outsl
loopne
out
fstpt
sbb
sub
js
inc
and
and
xchg
add
pop
mov
xlat
sbb
es
aad
jg
mov
mov
imul
sbb
xchg
xchg
and
daa
jb
les
push
iret
push
add
aas
mov
cmp
sbb
ss
sbb
sub
notl
pusha
xchg
inc
sahf
out
sarb
jne
adc
push
inc
or
test
adc
call
push
cmp
pop
adc
in
rolb
lock
adc
add
mov
inc
add
in
loop
sarb
or
dec
adc
jl
pushf
xchg
or
shrl
out
adc
cs
ss
sub
add
inc
ret
push
imul
lock
dec
mov
adc
add
cli
cmp
jmp
mov
pop
pop
mov
push
nop
xor
rorb
xchg
mov
in
cmp
xchg
add
inc
add
pop
sbb
fbld
xchg
cld
pop
aas
mov
sbb
add
push
rolb
mov
cmp
dec
sub
pop
sti
sub
pusha
add
and
aam
and
cmc
aam
.byte
.byte
.byte
decl
out
mov
cmpsl
jge
gs
or
les
and
adc
and
and
or
mov
aaa
adc
nop
adc
and
or
or
insl
mov
or
test
mov
mov
adc
adc
or
mov
push
and
or
and
fcmovne
xchg
inc
or
arpl
add
mov
xor
sbb
fucomi
in
lods
mov
nop
inc
nop
inc
orps
out
jnp
nop
or
push
and
test
inc
dec
popf
mov
mov
outsb
and
arpl
cmp
outsb
int
rcrb
and
rolb
mov
ds
mov
nop
xlat
xor
and
lods
insl
int
or
or
lcall
test
and
or
xchg
out
fwait
or
push
addr16
mov
leave
xor
mov
mov
sahf
mov
or
pushf
and
and
mov
lcall
inc
add
dec
idivb
inc
mov
pop
pop
leave
ret
in
insl
loope
in
pop
pop
add
les
sete
insl
pop
outsb
test
pop
adc
adc
mov
pop
pop
pop
ret
rcrl
mov
neg
adc
and
fldl
sub
loopne
in
not
adc
inc
dec
inc
neg
jmp
or
mov
stos
or
shrb
in
mov
add
aaa
pushl
lahf
add
add
adc
or
and
aas
mov
sbb
popa
cmp
add
pop
adc
sub
iret
mov
out
inc
add
fdivrl
and
inc
and
jle
jmp
jp
add
add
sbb
add
add
cmpsb
add
lcall
clc
mov
dec
or
add
and
mov
idivl
incl
addl
nop
add
jne
jp
aaa
incl
push
mov
fistl
iret
aas
cmp
icebp
inc
leave
jae
mov
out
sub
orb
pop
xor
cmp
ja
in
pushl
add
add
arpl
test
js
adc
jg
pop
icebp
sub
and
daa
pop
cwtl
call
jo
pop
add
setg
decl
je
xchg
add
inc
mov
mov
or
mov
fildll
mov
cmp
sub
add
out
std
fdivr
test
or
pushf
das
or
or
fistps
loope
mov
iret
add
push
xchg
fwait
ret
mov
std
cmp
add
mov
shlb
xchg
popf
iret
fstpt
movsl
stc
sbb
out
movb
iret
add
dec
adc
push
clc
pushl
into
mov
shr
scas
jecxz
fdivrl
xchg
mov
cmp
jo
mov
xchg
mov
sti
jg
mov
xchg
inc
pop
sbb
loop
scas
xchg
cld
lcall
adc
fadd
mov
add
stc
xchg
add
ljmp
adc
addr16
out
or
pop
add
in
into
lcall
pushl
fcmovnb
add
xchg
sbb
addl
inc
sbb
and
pop
dec
pushf
inc
rcll
data16
loope
testb
movsl
ja
push
ret
inc
movsl
test
in
cmp
fucom
inc
lea
mov
sbb
mov
push
dec
add
aas
lcall
out
idivl
loop
pop
or
cmp
mov
add
cli
cmpb
mov
pop
mov
addl
repz
testb
jg
cltd
add
and
xchg
mov
test
pop
xchg
jno
aaa
xor
add
sub
lcall
xlat
dec
sub
sub
dec
push
leave
dec
mov
std
cs
fnstcw
mov
add
adc
js
andb
std
mov
incl
bound
jecxz
lahf
cmc
out
xor
jg
stc
adc
clc
push
loope
cwtl
add
cwtl
pop
pop
push
jp
or
add
mov
cwtl
xor
jo
push
in
add
pop
sub
cmp
xchg
inc
push
jne
jns
mov
das
inc
jns
cld
or
add
sbb
inc
test
in
mov
loope
cli
pushl
or
test
mov
cmpb
pop
orb
test
or
sbb
aas
mov
jmp
pushl
jg
pop
out
jnp
aas
jbe
cmc
in
fwait
sub
ja
dec
push
out
sahf
xor
pushl
decl
rolb
leave
cmp
loopne
dec
add
mov
call
cmp
pusha
pop
addr16
inc
pop
lock
ret
and
cmp
sub
dec
iret
add
sub
ljmp
sbb
add
jge
movsb
mov
xor
das
aaa
add
add
sbb
dec
mov
add
xor
mov
neg
xor
inc
int
mov
icebp
push
mov
push
inc
sub
in
das
fstpt
xor
cli
adc
popl
mov
add
std
mov
mov
push
sub
outsb
loop
mov
sbb
imul
xchg
xor
cwtl
fisubrs
out
bound
inc
dec
mov
xor
dec
dec
imul
pop
ss
add
sub
test
rorl
mov
out
ret
cmc
cmpsb
lock
es
movsl
inc
xor
jecxz
pusha
mov
push
jmp
lcall
inc
dec
cld
and
outsb
mov
add
popf
mov
idivb
rolb
inc
push
orb
imul
fildll
sub
inc
inc
xor
bound
pushl
sbb
addl
sbb
jge
shl
dec
stos
stos
sub
jmp
dec
inc
mov
nop
dec
jp
jbe
add
popf
jnp
pop
movsl
insb
incb
ret
dec
fistpl
add
dec
cwtl
nop
push
outsb
imul
add
lods
xchg
xlat
or
mov
xchg
xchg
pop
sbb
and
adc
fistl
hlt
mull
lret
xchg
arpl
xchg
out
outsl
ljmp
and
out
inc
push
push
fildl
es
inc
out
add
dec
and
sbb
pusha
inc
sub
jle
outsl
loop
ja
pop
jl
repz
movsb
lcall
add
mov
mov
adcb
xor
inc
dec
fisubs
push
insb
jb
pop
jecxz
jge
ds
or
ljmp
in
outsb
in
add
adc
dec
adc
repz
jmp
cld
mov
ficoml
ss
decl
mov
mov
mov
lds
adc
mov
sti
in
out
or
out
adc
xor
fiaddl
add
sbb
pop
shll
cmp
mov
fisubs
std
inc
cmp
ret
js
lcall
mov
push
add
mov
shlb
inc
xchg
divb
add
pop
jg
mov
sub
dec
test
sbb
in
pop
int3
mov
mov
inc
sahf
push
cmp
decb
popf
sbb
adc
neg
adc
mov
aaa
push
inc
dec
jbe
loop
cwtl
sti
pop
push
mov
movl
lods
adc
or
xchg
subl
jge
sub
sub
dec
mov
out
ds
add
jne
fmull
sub
mov
xor
icebp
ljmp
adc
add
fistl
ss
inc
ficoml
mov
sub
negl
dec
or
in
sti
pop
jnp
adc
inc
dec
and
inc
outsl
icebp
fwait
paddb
add
faddl
mov
test
scas
sbb
cmp
fimull
iret
mov
inc
cld
not
cmp
icebp
push
data16
int3
or
cmc
in
ret
fdivl
sarl
cld
inc
jecxz
and
in
dec
mov
adc
add
lods
std
pop
jp
xlat
fwait
shlb
jae
ret
sbb
and
icebp
push
loope
in
and
mov
sbb
gs
pop
sti
data16
sub
push
pop
mov
fcompl
filds
mov
add
add
imul
mov
and
test
pop
test
add
in
sahf
lcall
hlt
sarl
jae
fdiv
fwait
das
sub
sbb
adc
sbb
addr16
in
sbb
cmp
sbb
test
lock
out
pop
in
xlat
das
in
sbb
adcb
xor
fsub
xor
sbb
jo
es
xchg
pop
f2xm1
add
hlt
dec
aam
movsl
movsl
shufps
mov
popa
dec
adc
stos
mov
adc
mov
test
hlt
sub
mov
scas
mov
fidivrl
jo
imul
in
scas
push
fildl
dec
pop
xor
jl
js
idivb
scas
push
or
aas
int
dec
insl
push
sub
enter
inc
mov
incl
jecxz
jl
mov
dec
bound
add
jbe
adc
lret
popf
fnsave
lods
dec
push
sti
mull
rolb
jae
jecxz
push
push
sbb
jo
jg
or
in
jle
lock
popf
pop
out
add
or
mov
xchg
mov
lock
dec
push
lock
jmp
adc
dec
ljmp
fimull
push
lcall
bound
je
ja
pop
cmp
fsubrs
repnz
jge
in
xlat
jne
sub
in
cmp
jnp
sti
out
mov
mov
loop
mov
iret
rcrb
fwait
inc
jecxz
or
test
pop
dec
negl
push
aam
lock
add
iret
adc
fistps
and
adc
out
mov
mov
iret
pop
or
push
xchg
jge
jmp
adc
hlt
push
movsb
cmp
jne
pushl
cld
sub
insl
mov
jo
inc
mov
mov
xor
and
inc
lods
je
dec
scas
add
ret
in
sti
cmpl
fcmovu
jno
and
popf
inc
fwait
popa
outsb
sub
xor
cwtl
xor
mov
or
roll
scas
jbe
icebp
pop
pop
in
movl
mov
adc
add
aaa
jne
sbb
je
hlt
mov
mov
and
inc
inc
xchg
dec
pop
push
dec
adc
add
jg
aaa
or
push
test
push
std
lea
push
lea
or
call
je
addl
iret
adc
fcompl
cmp
in
sub
addb
aas
clc
scas
fwait
jno
mov
and
in
lret
mov
or
and
ljmp
adc
aaa
mov
inc
inc
mov
lods
test
jo
and
mov
movsl
cld
lods
out
out
adc
or
ret
jp
fcompl
sub
pop
out
aam
sub
push
adc
gs
sbb
pusha
pop
std
stos
push
inc
pop
rclb
lds
ret
ljmp
add
mov
sub
mov
aas
mov
sub
or
inc
add
mov
mov
pop
and
mov
hlt
pop
ret
divl
sub
clc
data16
cmp
fildl
add
or
mov
inc
dec
ficoms
jne
mov
in
cli
out
call
inc
nop
loope
mov
jb
leave
in
popa
mov
jae
in
lcall
push
sub
inc
pop
pop
call
add
pop
xchg
adc
dec
mov
and
movsl
jo
fwait
dec
xor
mov
mov
movsb
xor
add
add
jg
ds
pushf
les
pop
mov
lahf
loope
sub
test
xchg
mov
or
nop
add
gs
add
movb
inc
movsb
mov
pop
loope
xchg
sar
add
add
iret
pop
and
mov
inc
mov
or
adcl
mov
mov
xor
ret
lock
push
jne
mov
xchg
je
stos
push
xchg
sahf
cmp
test
xchg
xor
in
mov
sub
in
mov
jb
xchg
subl
jecxz
incl
and
cli
jb
adc
jns
pop
popa
test
pop
mov
jge
mov
mov
mov
out
inc
imul
inc
push
mov
into
mov
fwait
js
iret
push
pusha
loop
daa
inc
push
repz
pop
add
mov
jg
sbb
jne
inc
out
xchg
jno
je
loop
xor
add
mov
decl
enter
push
xor
adc
jecxz
rol
mov
testl
xchg
and
add
adc
fdivl
xchg
adc
test
incb
aas
sub
and
cltd
aam
xchg
jnp
in
jg
decl
and
je
pop
push
ds
pop
je
in
add
jg
decl
jne
add
test
es
mov
jl
cld
ss
movb
push
jne
pop
out
pop
and
clc
ret
mov
mov
mov
outsl
dec
push
loopne
pop
push
sub
out
mov
sbb
fldenv
lea
stos
test
mov
clc
aas
aas
scas
dec
or
lods
dec
sbb
sub
xchg
and
jmp
pop
stc
cmp
cs
into
sbb
dec
dec
js
jecxz
cwtl
pop
dec
dec
scas
lock
das
adc
mov
add
push
inc
jne
popa
aam
pop
gs
pop
add
int3
xlat
jl
aas
ret
test
sub
incl
mov
inc
mov
aam
addl
xchg
xchg
sar
sar
sbb
sbb
cmp
cmp
out
add
into
or
lahf
push
pop
dec
xor
cmp
imul
pop
andl
sub
cli
lods
sbb
pop
outsb
add
mov
aas
std
pcmpgtd
xchg
lcall
sub
cmp
subb
jg
in
mov
cmp
out
and
inc
adc
in
cs
sbbb
jecxz
cmp
loope
inc
push
jg
adc
loope
cmpsl
lret
push
mov
pop
pop
mov
imull
xchg
int
or
aas
fdivr
inc
cwtl
mov
add
nop
mov
inc
aam
jmp
call
mov
add
pushf
jae
cltd
xor
mov
sub
std
outsl
shl
cmp
loope
adc
and
pop
shlb
jg
add
mov
adc
add
add
xor
fwait
add
aas
movsb
filds
mov
decl
mov
pop
decl
call
movsb
push
mov
push
adc
cmpsb
out
notb
mov
fld
loope
lods
fs
lret
pop
fisubrl
lods
add
push
jle
incl
sub
dec
sub
mov
mov
add
mov
jmp
or
adc
push
inc
or
es
out
sub
push
arpl
pop
jp
add
sub
push
push
or
orl
dec
dec
push
decl
ss
movsl
int
in
xchg
scas
xor
mov
pop
dec
lock
in
add
or
movsb
and
popf
xchg
jne
jle
mov
or
inc
aas
push
mov
fisubs
ljmp
xchg
xor
cmc
add
int3
std
nop
xchg
jmp
std
fwait
mov
or
arpl
xor
push
adc
jno
aas
push
sahf
stos
xor
insb
sbb
jg
fstpt
mov
jle
ljmp
stc
jb
pop
pop
es
ss
push
lods
mov
mov
push
cs
jnp
aas
ficoms
incl
xor
jb
mov
aad
mov
adc
mov
jne
fsubr
jg
sbb
inc
xchg
mov
mov
loopne
adc
ret
pop
fidivrl
hlt
xor
sub
sub
test
mov
pop
dec
inc
push
dec
mov
js
add
add
rcr
incb
pusha
mov
inc
aas
push
lret
sbb
out
lea
mov
xchg
pop
add
mov
push
ljmp
jmp
add
fldenv
pop
inc
push
jns
test
and
sub
stos
add
ret
sub
jg
ljmp
jp
std
inc
xor
jle
inc
in
add
add
add
or
sarb
test
mov
fdivrp
leave
call
mov
stc
es
adc
mov
xorl
dec
ljmp
add
insl
inc
mov
cld
mov
rorl
lret
cmpsb
enter
out
jo
in
xchg
cmp
cli
shrb
jo
aaa
add
pop
dec
mov
les
cld
pop
shlb
out
cmp
incl
or
inc
dec
dec
rolb
add
stos
push
xlat
sti
mov
adc
xchg
call
daa
xchg
clc
scas
mov
dec
push
xor
mov
sub
ljmp
je
pop
fnstenv
lock
filds
jp
jne
adc
js
jg
ja
xchg
clc
shrb
or
inc
outsb
pop
push
fsubl
cld
lods
mov
daa
add
or
dec
fstps
mov
ds
mov
lods
mov
pop
mov
mov
jmp
outsl
mov
bound
mov
lea
cmp
jle
aaa
aas
xchg
test
mov
pop
into
push
adc
mov
js
sub
ljmp
jp
movsb
mov
dec
sbb
ret
mov
adc
fwait
mov
mov
insl
jmp
fisubs
adc
mov
leave
and
lcall
divb
add
cmp
gs
mov
push
push
filds
mov
jbe
adc
sbb
lea
lds
rcrl
sbb
lea
icebp
aaa
add
cmp
movsb
std
push
cld
sbbl
imul
cmc
mov
or
jecxz
inc
mov
scas
sub
dec
std
add
shrl
call
mov
pop
cmpsb
aam
or
push
jb
lods
push
lcall
loop
mov
dec
mov
pushf
adc
dec
movsb
ss
aaa
xlat
out
mov
inc
pop
movsb
adc
ja
inc
mov
jge
mov
hlt
push
in
jg
ljmp
into
repnz
addr16
and
test
and
and
jg
pop
shll
icebp
repz
daa
sbb
jne
inc
inc
je
adc
mov
mov
sarb
inc
notb
or
mov
bound
nop
pushl
inc
mov
push
ds
out
enter
pop
aas
jns
stc
mov
jmp
pop
xor
loopne
out
inc
sbb
push
sbb
add
bound
stos
xchg
adc
jbe
daa
mov
xorl
sti
inc
mov
add
orl
leave
test
inc
xor
add
and
lcall
add
out
popf
loopne
and
rcrb
sbbb
sub
jb
incb
sub
pop
test
shlb
aad
stc
cmp
test
push
out
popa
or
mov
mov
xchg
pop
xlat
xchg
and
outsb
inc
ds
or
rcrl
inc
mov
inc
add
mov
lods
mov
call
mov
cld
call
xchg
push
add
inc
lahf
rorl
pushf
add
sbb
rclb
mov
sbb
int3
std
fwait
jne
out
sub
jb
stc
adc
shr
std
mov
or
mov
jns
dec
mov
arpl
push
push
pop
xchg
xchg
mov
bnd
out
pop
xchg
lods
aas
adcl
shr
xchg
sbb
pop
mov
lahf
sub
or
popa
xor
ret
lea
inc
call
sahf
clc
xchg
into
dec
icebp
sbb
int
clc
cmp
add
jecxz
add
int
sti
sbb
jmp
mov
cmp
in
scas
popf
inc
push
idivl
and
icebp
bound
in
cmp
rolb
sub
pop
mov
in
fimull
int3
adcl
nop
fs
cmp
into
mov
pop
loop
pop
mov
rorl
and
jne
inc
lcall
pop
xor
push
ret
adc
inc
cmp
jbe
imull
or
push
ret
push
pop
roll
mov
inc
loopne
push
inc
cld
andb
insl
sbb
sar
adc
push
insl
push
insb
ja
xlat
adc
cmpl
clc
add
add
insl
rcll
adc
add
add
pop
loop
imul
push
add
decb
sti
repnz
and
pop
fdivrp
not
inc
mov
lock
xor
xor
call
cmp
add
fistl
adc
insb
stc
xlat
in
sbb
aam
rcl
aas
sub
pusha
in
push
stos
add
dec
inc
movsb
push
into
adc
call
sahf
in
and
in
inc
push
scas
jne
sub
adc
xlat
leave
rcrb
lcall
ss
mov
es
push
mov
xchg
jg
cmp
out
or
xor
mov
int3
lret
or
pop
jno
arpl
mov
leave
mov
ss
xor
push
leave
pop
lret
call
dec
iret
xchg
mov
neg
mov
mov
jae
loopne
arpl
push
outsl
loope
adc
inc
fcompl
fdivrs
rorb
adc
adcb
ret
mov
test
mov
lret
cmp
loop
loope
mov
dec
icebp
add
dec
mov
mov
in
sub
or
sar
mov
jge
mov
jge
mov
in
int3
addb
rolb
andb
filds
and
data16
or
pop
adc
jno
push
mov
popa
cmp
ret
pop
mov
int3
insl
aam
sub
aam
negl
mov
fwait
mov
push
rcr
jp
add
cmp
fnstcw
aad
mov
ja
int3
faddl
cld
xlat
pop
rorb
popa
cmp
mov
mov
push
mulb
out
ljmp
pop
xchg
fsubl
ja
mov
fildl
jle
mov
xor
jmp
aam
or
dec
or
int3
add
fildll
dec
add
jp
push
cwtl
lods
push
rcrl
fsub
fidivs
andl
cmpsb
clc
adc
orb
jg
das
pop
mov
lret
out
pop
xchg
sub
lea
std
aaa
mov
push
push
push
call
fiadds
sbb
imul
jnp
in
jbe
leave
or
mov
iret
inc
in
imul
lret
add
fbld
aam
sub
lea
cli
inc
jmp
mov
dec
mov
aaa
loop
aas
loope
aad
xor
add
je
test
add
insl
es
jns
test
push
out
xorb
mov
inc
ret
mov
inc
in
cmp
adc
push
testl
push
fldt
movl
fwait
aam
dec
push
dec
sbb
sbb
sub
xchg
mov
roll
mov
add
sub
jecxz
inc
adc
fwait
pop
test
or
dec
loope
cmc
and
dec
call
or
xlat
les
cmp
jne
sbb
fistpll
roll
adcl
ficoml
or
jmp
xchg
mov
push
jb
in
fidivrl
in
sti
adc
push
add
push
pop
mov
add
outsb
stos
xchg
pop
cs
mov
int
add
push
ret
pop
sbb
jl
cld
sub
sbb
xchg
jb
sbbb
repz
shrb
data16
adc
mov
js
fistpll
jno
sub
sbb
mov
cltd
fisubrl
sub
jne
mov
push
sub
lea
inc
inc
add
lret
or
les
add
and
push
adc
inc
mov
xor
dec
dec
inc
pop
jb
aam
cwtl
jo
mov
sub
xor
pop
movsb
mov
pop
popf
lcall
ljmp
jae
ret
xor
or
repnz
mov
inc
jge
jg
out
repz
pop
inc
fistl
push
aas
xor
lea
push
push
add
push
add
push
sbb
stos
sbb
or
adc
lcall
add
add
stc
rcrb
and
push
fsubr
aaa
stos
sbb
cmp
mov
mov
xchg
dec
and
scas
repz
cmp
roll
data16
mov
cmp
jnp
jp
add
or
bound
icebp
lds
xchg
pop
test
pop
lea
fisttpll
testb
inc
mov
fs
das
adc
adc
das
mov
arpl
loop
out
add
dec
jg
dec
mov
push
lea
cmpsl
inc
out
out
shlb
sub
ret
jns
or
xchg
mov
sbb
push
sti
in
incl
pushf
push
push
mov
popl
mov
rcrl
mov
std
mov
sub
repnz
push
nop
and
sbb
fcomp
cs
and
add
adc
push
adc
mov
pop
mov
aam
testl
insl
mov
add
test
jp
in
aas
jo
shll
popw
add
dec
inc
mov
clc
loopne
shrl
or
jmp
mov
lods
rorl
fwait
lods
stos
inc
in
popf
pop
dec
data16
scas
shl
xor
pop
and
and
push
push
mov
jge
pop
rorb
fnsave
sub
sbb
or
sbb
xor
dec
xor
call
fs
mov
mov
mov
pop
stos
stos
adc
adcb
mov
mov
xchg
mov
add
jbe
sbb
mov
aaa
xorb
pop
nop
inc
sub
xchg
loopne
mov
fadds
in
lret
dec
pop
mov
pop
int
jo
cmpsl
and
add
cld
xor
jmp
test
pushf
push
and
and
in
mov
jg
sbb
leave
lods
add
lret
add
and
inc
jecxz
lods
jp
incl
jle
add
cli
add
xchg
loopne
iret
arpl
call
push
lretw
test
stos
pop
repz
dec
hlt
fwait
loopne
sbb
cmp
and
mov
inc
push
adc
in
sti
mov
jo
or
or
cmpsb
xchg
je
add
sbb
in
mov
out
sub
add
insl
xor
out
inc
add
repz
xchg
hlt
fistpll
add
lock
or
fmuls
hlt
inc
inc
ljmp
pusha
outsl
cmpsl
add
iret
test
add
mov
jbe
and
dec
icebp
mov
add
add
js
xor
mov
push
cli
jg
sub
cltd
leave
fstl
and
loop
call
leave
scas
push
adc
sub
mov
inc
pop
add
pushl
icebp
sbbb
cli
and
loopne
add
lcall
xorl
sti
add
inc
mov
cmc
jg
sub
mov
xorl
sub
and
jp
push
cmc
clc
test
outsl
or
inc
mov
cmp
mov
ja
fistpll
cmp
mov
push
sbb
pop
sub
mov
hlt
leave
mov
mov
pusha
aaa
das
shrl
lock
inc
or
das
jle
xchg
adc
lahf
cld
inc
mov
cmp
nop
xorb
add
cld
xchg
rolb
daa
pop
jbe
mov
ret
jae
and
jl
pusha
cmp
enter
shrb
mov
nop
xchg
xor
loop
std
pop
lahf
mov
dec
pop
inc
cmc
and
in
scas
incb
sti
adc
sub
jg
and
or
jmp
jl
ret
fstps
push
rorb
dec
jge
mov
outsl
pop
inc
push
mov
inc
dec
enter
cmp
stc
inc
jg
cmp
push
sub
push
dec
jle
sbb
aaa
ds
jle
adc
jle
movsl
inc
loopne
mov
pop
fdiv
scas
clc
mov
clc
xor
pop
pop
les
ljmp
xchg
jl
dec
sub
mov
add
loope
lret
int3
cmpsb
pop
ja
pop
add
jg
repz
jne
dec
jmp
mov
jns
add
add
in
add
push
sub
inc
ss
insb
mov
mov
ja
mov
xchg
pop
sti
xchg
incl
jge
push
cld
rcr
inc
jns
xchg
dec
mov
lcall
sub
fimuls
test
jae
idivb
xchg
dec
jb
loop
mov
push
mov
out
pop
cli
ss
movsl
jg
dec
dec
packuswb
call
add
xchg
pop
mov
jnp
add
decl
cld
jg
pusha
addr16
inc
jp
add
pop
outsl
inc
seta
fidivl
inc
std
or
dec
jno
movsb
imul
pop
jmp
es
pop
mov
imul
dec
outsb
lahf
pop
ljmp
test
mov
in
scas
imul
addr16
test
call
push
arpl
lahf
or
jne
pop
push
fsubs
outsl
jecxz
adc
shlb
imul
out
inc
mov
cwtl
mov
shlb
daa
push
mov
sbb
push
and
aam
imulb
jg
ja
xchg
and
lds
mov
in
jbe
repz
adc
mov
adc
cmp
inc
outsl
lods
pop
gs
into
insb
enter
cmp
push
push
sub
mov
cmp
or
lea
and
xchg
fldenv
movsl
incl
aaa
or
add
add
fcmovne
cs
bound
mov
sbb
mov
out
xor
mov
jg
mov
jmp
test
and
cmovle
aas
xchg
outsb
push
xor
pop
test
shrl
popf
pop
xchg
sti
call
fmulp
in
adc
ss
shrb
push
push
pop
sbb
mov
push
loopne
je,pt
add
or
mov
int3
sub
lock
incl
xchg
lcall
aaa
jno
add
add
dec
aaa
add
and
in
insb
inc
sbb
fsubr
sub
mov
lods
loopne
or
push
icebp
and
mov
incl
pop
arpl
pop
movsl
lods
xchg
adc
sub
fildl
pop
inc
add
ljmp
mov
push
push
or
inc
das
adc
mov
in
gs
int3
es
std
ja
push
dec
xchg
mov
jno
sahf
push
add
dec
in
sub
pop
mov
leave
sbb
int3
or
movsl
add
repnz
xor
cmpsl
iret
call
push
lret
sbb
xor
cld
dec
xor
xor
push
adc
jb
stos
pop
add
lds
aam
mov
push
pop
add
adc
and
add
addr16
sub
sbb
mov
lods
jge
lock
pop
jne
testl
mov
int3
outsb
inc
sarb
inc
mov
and
or
xchg
xor
xor
pusha
add
mov
lds
jb
cs
add
fsubs
push
fadds
dec
rorb
push
fdivrs
jne
xor
jbe
pusha
dec
lods
pop
mov
push
mov
pop
or
xor
lock
loopne
pop
mov
es
and
sbb
insb
repnz
xorb
mov
mov
icebp
hlt
sub
xlat
dec
mov
mulb
xor
dec
hlt
add
mov
sbb
mov
test
test
mov
sbb
ljmp
test
cmc
jo
add
mov
add
add
or
loope
sbb
or
jo
std
dec
dec
stos
ss
outsl
icebp
sbb
jmp
div
test
add
xchg
shll
aam
or
movsb
xchg
sub
cld
fmuls
mov
clc
add
aam
scas
dec
jle
mov
jnp
ror
incl
sub
addl
cmpsl
xchg
sbb
fadd
adc
mov
jl
cwtl
dec
mov
cmp
test
outsl
adc
jmp
mov
in
pop
test
xor
lea
add
dec
lock
hlt
dec
or
inc
mov
shld
push
cmpsl
in
or
popa
cmp
fistpll
push
lcall
dec
fsub
mov
cmp
dec
in
xchg
aaa
mov
outsb
mov
cmp
bound
push
dec
pop
popf
sbb
add
negb
mov
mov
sbb
mov
lds
pop
jle
add
ffree
cmp
data16
and
mov
or
add
xor
sub
cmp
bound
or
rcr
adc
cmpsb
and
out
xor
pop
inc
xor
addb
adc
cli
in
mov
mov
mov
fwait
repnz
jne
imul
jecxz
mov
mov
hlt
and
pop
decl
or
xchg
cmp
pusha
jp
int3
add
rolb
fwait
movsl
out
addr16
cld
ljmp
insb
sbb
and
lock
mov
xchg
jae
pusha
mov
mov
lods
push
mov
jne
mov
mov
xchg
movsb
jmp
imul
sahf
add
sub
inc
and
inc
movsl
adcb
in
xchg
decl
jg
mov
push
addb
sbbl
mov
lcall
push
rcl
adc
jns
dec
add
mov
sbb
jo
leave
ds
dec
add
pop
clc
pushl
bound
jb
movsb
or
jl
jns
scas
ljmp
mov
ret
cmpsl
mov
cmp
loopne
mov
inc
loop
cld
rolb
xor
sbb
icebp
cmpsb
popw
decb
mov
loopne
mov
mov
adc
fwait
adcl
add
jae
popa
or
popa
or
add
xor
add
in
pushl
icebp
and
add
pushl
movsb
movsb
je
mov
into
inc
addr16
cmp
or
cmp
shlb
aad
dec
add
xor
fucomip
or
movsb
dec
jecxz
stc
loope
incl
dec
pop
inc
push
ret
sbb
out
aam
mov
out
decl
dec
iret
sub
sahf
adc
xchg
or
stos
xor
sub
cmpsb
mov
push
adc
gs
mov
jp
daa
sbb
jmp
dec
jp
pop
adc
insl
nopl
add
outsb
jns
int
ljmp
dec
mov
push
enter
mov
addl
jg
sub
xchg
jb
loop
insl
incb
pop
adcb
addr16
mov
jbe
xor
decl
in
pop
xor
ret
mov
movsl
pop
push
fcmovne
sbb
aad
out
addr16
mov
fld
subl
mov
clc
or
and
faddl
dec
cmp
cmpsb
xchg
pop
stos
fs
ljmp
inc
sub
and
fbstp
pop
push
inc
lcall
aad
mov
pop
insl
cld
ljmp
movsl
xor
dec
xor
add
dec
inc
cli
jg
outsl
subb
pcmpgtb
pop
pusha
cmp
sbb
adc
hlt
pop
outsb
mov
xlat
test
stos
xchg
icebp
jmp
nop
pop
jle
rolb
dec
push
iret
mov
dec
and
add
inc
or
xchg
jbe
lcall
pusha
or
into
push
movsl
dec
out
test
nop
push
dec
aaa
inc
push
lods
pop
push
cmp
scas
xor
decl
mov
jecxz
aas
mov
xchg
add
flds
or
dec
pop
adc
mov
cltd
jg
out
aaa
and
lret
test
dec
pop
sub
mov
push
pop
cld
les
aad
xor
das
ljmp
testl
sbb
xchg
cmp
pop
loope
pusha
sub
adc
out
fcom
adc
test
shrb
movsl
pushl
stos
jle
dec
xchg
xor
lahf
xor
mov
mov
fsub
xor
inc
div
addb
and
outsl
pusha
jecxz
test
mov
aaa
adc
loop
xor
aaa
lds
mov
add
fsub
les
rol
icebp
outsl
add
loope
inc
mov
xorl
jne
cmpl
cmc
mov
ljmp
jbe
sub
test
sub
push
outsl
outsl
push
dec
enter
cltd
and
xor
cmp
fcos
pop
je
inc
outsb
and
adc
jae
call
inc
mov
cld
stos
aas
dec
cmp
outsb
mov
loope
mov
push
call
lods
xlat
sbb
int3
ret
mov
cmp
cld
mov
xor
xchg
mov
sbb
mov
decb
leave
mov
filds
cltd
pop
adc
mov
sbb
lcall
rcll
adc
repnz
lea
xchg
inc
loop
bound
arpl
jl
inc
dec
clc
add
add
decl
enter
loope
adc
pop
inc
lcall
add
testl
je
mov
adc
decl
data16
popa
add
gs
add
pop
xlat
hlt
fucomip
add
sbb
xor
mov
arpl
push
push
pushl
test
popa
push
or
mov
push
mov
call
xchg
xchg
movsb
mov
or
push
movsb
sbb
and
jecxz
mov
nop
dec
pop
bound
jmp
inc
lcall
sub
mov
xchg
mov
scas
js
pop
jno
insb
mov
rcrb
inc
divl
sar
xor
add
mov
imul
mov
push
das
shl
lods
pop
js
and
pop
loopne
xor
dec
mov
test
lcall
mov
cltd
aas
int3
dec
adc
push
fcmovnu
dec
shll
fiaddl
inc
jg
push
incl
fstl
cmpb
imul
pop
aas
insb
push
aaa
mov
icebp
sahf
loop
xchg
inc
neg
dec
outsl
incl
loopne
loopne
pop
decl
jne
ret
pusha
rcr
in
push
ficomps
push
mov
clc
decl
out
clc
mov
lea
subb
ror
in
push
jmp
pop
mov
adc
or
push
and
scas
stos
adc
push
imul
push
std
jg
pop
mov
mov
jl
cmpsl
pop
or
add
sub
xchg
pusha
stos
pop
push
push
jecxz
scas
inc
dec
mov
stos
cmc
dec
mov
fldenv
pushf
pop
and
inc
sub
mov
xchg
nop
mov
scas
scas
pop
jne
mov
js
mov
mov
mov
inc
push
bound
pop
pop
in
rcll
or
les
test
add
nop
cld
inc
movsb
mov
cld
and
cli
xor
push
sub
push
mov
icebp
jl
pop
std
adc
insb
test
pop
mov
stos
add
int3
sbb
scas
bound
cmp
aas
insb
inc
or
lea
add
cmp
xchg
call
idivb
enter
mov
lcall
mov
insb
mov
and
clc
incl
js
mov
xchg
int
xor
popa
cwtl
int3
addr16
mov
test
sub
jno
out
mov
mov
je
rcll
pop
out
call
lahf
mov
sub
cmp
push
xor
aad
pop
out
xor
xor
outsl
add
jnp
add
push
inc
pop
pop
sbb
call
pop
push
pop
jo
inc
mov
movsl
push
mov
sub
and
mov
daa
sti
test
imul
xchg
jle
cld
xchg
mov
adc
mov
add
add
js
repnz
mov
std
leave
inc
gs
aam
and
cld
movb
out
pusha
adc
mov
stc
sarl
pop
clc
sbb
dec
aas
pushf
inc
mov
enter
cs
lcall
in
mov
int
enter
pop
add
aam
shl
xchg
data16
lea
mov
adc
jl
and
dec
leave
int3
add
daa
inc
and
rcrl
filds
push
int3
push
xchg
in
sbb
movl
adc
lods
mov
or
mov
jno
mov
sub
cmc
iret
mov
and
xchg
ret
subb
mulb
sbb
push
mov
pop
xor
aad
lret
dec
fcmovne
mov
xor
xor
inc
shl
in
mov
cld
mov
lock
jmp
mov
dec
xchg
lds
xlat
js
jbe
psubusw
out
add
jmp
movsl
jmp
sbb
cmpsb
push
pushl
enter
add
fcoml
repnz
jo
inc
mov
leave
idivb
aas
pop
les
stos
xchg
inc
dec
outsb
mov
in
sbbb
mov
mov
pop
cli
nop
cmpsl
pop
inc
loope
outsb
ret
fs
mov
addr16
cmp
mov
inc
or
push
sub
scas
jnp
aad
add
mov
aas
andb
mov
fsts
mov
inc
outsb
pop
jno
and
clc
lcall
sub
int
inc
and
stos
sbb
add
sbb
jbe
push
out
xor
jle
pop
sub
decl
mov
or
mov
jl
fstps
nop
filds
aas
jmp
andl
scas
popl
or
push
orb
stos
cmp
sti
scas
aam
xchg
and
dec
sbb
mov
xchg
lods
add
ljmp
add
decl
cmpsb
and
mov
ficomps
inc
push
bound
cmp
bound
xchg
das
inc
mov
xor
das
out
je
test
adc
xchg
push
xchg
lcall
cmp
test
call
mull
dec
cli
sbb
fwait
ljmp
lcall
lock
jmp
mov
or
add
and
test
aaa
pop
leave
jbe
adc
xchg
cmp
dec
loope
das
icebp
mov
cli
fcomp
lock
mov
dec
cld
call
int3
test
rcl
bound
fcmovnu
clc
add
pop
test
popa
out
lret
jo
xor
pop
xchg
mov
mov
sub
test
jmp
popf
mov
jle
pop
add
test
pusha
fadds
xchg
pop
pop
xor
adc
sbb
das
jmp
pop
insb
cli
js
cld
jmp
jg
aaa
mov
xor
jnp
pusha
stc
orl
cld
sbb
pushf
mov
rolb
pop
push
out
shll
jle
mov
cwtl
jg
ss
inc
xrelease
outsl
mov
mov
cmpsl
or
notl
test
push
subb
es
cli
jg
mov
sbb
les
fists
xchg
insb
and
into
filds
mov
sub
mov
into
inc
loopne
sbbb
mov
sub
xchg
mov
or
sti
call
les
cs
mov
std
jns
xchg
shld
arpl
push
imul
xchg
jle
cmp
adc
rcll
cld
inc
pop
push
ss
push
and
insb
add
pop
xor
enter
int
pop
and
mov
lods
into
test
fsubrl
sbb
cmp
test
sub
inc
scas
pushf
mov
xor
cmp
inc
lret
add
adc
cld
es
fs
iret
pop
loop
inc
or
shl
or
icebp
add
mov
adc
aaa
or
sar
jle
gs
movsl
mov
mov
jecxz
push
cmp
lret
fs
pop
lret
pop
or
or
or
or
das
sub
jns
stos
push
xor
das
sub
push
bound
jg
jg
out
inc
cmp
enter
test
loopne
mov
pop
rorb
ret
je
cmp
jno
or
ret
inc
popf
movsb
dec
test
stos
jg
jmp
testb
mov
scas
mov
incl
push
nop
popa
addl
push
lock
cmpb
mov
cmp
rolb
fists
call
in
psrlq
mov
sub
hlt
ljmp
or
test
xchg
imul
inc
je
andb
mov
adc
inc
xor
push
xor
sbb
stos
aas
cmp
aad
ja
daa
lods
ljmp
decl
and
fistpll
pop
inc
add
mov
push
and
inc
pop
test
pop
xchg
repnz
pushf
clc
daa
push
or
push
outsl
sub
cwtl
mov
and
movq
and
sbb
in
mov
fnstsw
add
mov
test
rcrl
lea
stos
or
add
fnstcw
sbb
push
lcall
xchg
stos
xor
inc
in
and
cmp
or
aaa
hlt
into
gs
sbb
les
aad
negl
ja
push
sub
and
mov
lds
mov
pop
jmp
loopne
sbb
pop
sar
test
pop
cmpsb
mov
mov
lock
cmpl
insb
sbb
mov
das
cltd
cmpsb
or
sbb
mov
mov
fwait
cmc
xchg
mov
loope
cld
sub
aas
stc
lock
movsb
sarb
inc
lods
add
ja
test
pushf
loop
imul
sub
add
loope
cmp
xchg
and
hlt
cs
mov
mov
in
int3
mov
adc
mov
mov
lds
push
aam
or
cmp
pop
push
jnp
inc
test
popa
lret
pop
mov
add
sahf
arpl
sbb
outsb
loopne
sub
add
adc
out
add
add
xor
mov
imul
or
adcb
mov
ss
mov
imul
xor
mov
sbb
adc
test
or
out
or
cmp
cwtl
iret
pop
inc
jb
test
xor
enter
movsb
clc
lret
inc
jmp
std
pop
fwait
adc
and
jl
lds
outsl
outsl
dec
test
sub
dec
jg
mov
pop
ficoms
pusha
cld
fsub
add
dec
push
int3
sub
in
inc
fnstsw
idivl
rol
mov
pusha
add
inc
mov
fmuls
dec
in
fisubrs
mov
pusha
push
in
das
add
push
das
pop
addb
loope
push
or
shll
push
insl
add
sub
stos
dec
and
or
inc
cmp
xor
dec
stos
lds
dec
pop
rolb
add
add
decb
or
insl
mov
push
loopne
push
push
adcl
dec
stc
pop
or
mov
sub
shl
sbb
ds
imul
or
jp
push
push
ficoms
out
lcall
cli
adc
shlb
fidivrl
mov
sub
add
sbb
mov
pop
jae
mull
push
push
orb
inc
rolb
dec
lock
gs
or
pop
dec
add
adc
lcall
cld
test
mov
pusha
andb
jecxz
and
inc
frstor
fdivrs
cmpsb
jg
cmp
dec
div
and
push
push
push
push
mov
fsubrs
jae
jge
jmp
sar
rclb
jmp
adc
xor
dec
incl
lcall
add
jo
inc
pushf
xchg
xchg
ds
xor
push
push
fwait
and
filds
jns
sub
dec
xor
inc
pop
jp
jne
adc
jmp
icebp
mov
push
sub
mov
aad
pop
loopne
hlt
in
mov
sub
in
and
adc
push
mov
fwait
or
bound
inc
movb
sub
outsl
rcrl
xchg
push
sub
ja
adc
sahf
xor
incl
push
test
pusha
sbb
adc
sub
lods
outsb
xchg
sar
dec
or
and
es
ljmp
mov
xor
mov
inc
mov
or
popf
filds
sbb
mulb
mov
dec
stc
mov
cli
pushl
add
mov
repz
hlt
mov
xor
das
jo
or
fxch
dec
xor
decl
sbb
adc
dec
popf
xchg
andl
cmp
xchg
jno
inc
ret
pop
lods
push
lods
and
decl
daa
and
sub
out
repz
lret
add
lcall
ss
popa
adc
daa
fwait
rolb
aam
xor
jno
pop
loop
push
cmp
mov
cltd
pop
bound
or
mov
mov
dec
and
cmp
fwait
xchg
sub
push
lahf
cmp
jg
pop
add
into
xchg
aaa
sub
and
jle
and
fucomip
shll
cli
dec
push
movb
imul
mov
adc
add
loop
pop
icebp
add
dec
bound
test
cmp
stos
push
push
xchg
int
idivl
cld
and
sti
inc
push
xchg
call
xchg
clc
adc
pusha
jle
addr16
push
cwtl
flds
das
inc
out
cmp
adc
ljmp
add
push
subl
test
int3
xchg
lcall
push
add
outsb
xchg
cmp
dec
in
or
sbb
dec
and
clc
pop
cld
sub
xchg
inc
clc
stos
and
bound
cmpsl
and
dec
cmp
xchg
cli
incl
lret
mov
or
push
fldt
mov
sub
pop
ret
gs
icebp
or
push
mov
or
and
out
stos
scas
add
mov
or
xchg
into
cmpb
mov
or
mov
cli
pop
mov
shrb
inc
cmpsb
pop
fs
xchg
xchg
push
and
adc
pop
sub
xor
mov
push
pop
ret
pushl
lods
xor
in
jno
subb
mov
pushf
ret
aam
imul
add
mov
cmc
jns
xchg
testb
outsl
scas
nop
rclb
sub
jg
xchg
in
xchg
popa
and
push
pop
push
push
cld
dec
add
fistl
es
mov
push
jl
jmp
dec
and
imul
hlt
mov
dec
sbb
in
mov
xor
sub
jecxz
daa
add
mov
add
mov
inc
xchg
lock
push
divb
adc
and
lcall
mov
push
and
ficompl
sbb
data16
loope
push
repnz
imul
dec
std
mov
int3
and
lods
in
mov
mov
js
flds
jnp
lods
loopne
sbb
sub
in
push
mov
sub
sti
mov
in
mov
outsl
test
lods
lea
jnp
jae
enter
xchg
cmc
inc
filds
lock
pop
mov
xor
lcallw
dec
ret
ljmp
pushf
js
pop
sbb
aad
lcall
jmp
hlt
adc
andb
cmpsl
or
fwait
enter
push
sbb
mov
sub
fmull
mov
or
and
dec
sahf
sub
cmp
rolb
arpl
loopne
and
imul
enter
sub
mov
xchg
dec
mov
xchg
mov
jl
sub
aaa
out
jle
call
cmp
push
ja
pop
jmp
scas
cmp
iret
pop
loopne
add
test
sub
lds
cmovns
jmp
mov
jecxz
jae
loope
fsubs
insb
out
aad
out
out
or
jg
test
and
inc
sahf
das
les
cli
ljmp
nop
mov
shlb
xor
or
mov
lret
jo
jne
pop
push
cmp
xor
jle
mov
pushf
mov
andl
fdivrs
adc
xchg
jmp
mov
inc
icebp
push
jg
inc
je
insl
sub
push
loopne
or
ljmp
cli
lea
push
sbb
in
pop
clc
xchg
jns
inc
orb
add
xchg
pop
scas
sar
lods
lods
outsb
mov
and
insb
add
cli
jg
mov
mov
xchg
add
hlt
fs
pusha
ljmp
mov
sub
cs
pop
push
and
lods
shlb
clc
jg
add
cmp
and
lea
jl
or
push
imul
sub
mov
cli
and
xchg
cld
bound
push
mov
lods
ljmp
sbb
subb
stc
xchg
dec
out
hlt
mov
jmp
adc
or
lods
pop
mov
lahf
cld
inc
daa
cmp
in
dec
or
xor
fcomps
inc
nop
sbb
dec
inc
mov
cld
xchg
addb
xchg
inc
cmpl
rcl
pop
cltd
mov
fimull
push
mov
inc
lret
dec
mov
bound
sub
cs
add
xlat
lock
imul
adc
cmpsb
mov
mov
and
xor
insb
mov
sbb
pop
cmp
inc
adcl
sbb
fucomip
in
fdivrl
mov
icebp
test
cmp
add
in
dec
pop
mov
js
sti
cmpsb
push
and
or
mov
xlat
jo
dec
lds
xchg
and
movsb
mov
pop
mov
push
xchg
rcr
xchg
test
out
and
call
inc
pushf
decb
sbb
add
mov
mov
or
lret
xor
xor
cmp
and
roll
adc
stc
ret
sbb
lock
jo
insb
sub
cmp
js
push
mov
mov
dec
add
push
push
add
ret
loope
rcll
sbb
or
push
pop
xchg
or
mov
les
addr16
test
mov
arpl
cmp
sbbl
mov
dec
cmp
cmp
dec
push
cmp
daa
ds
pop
call
outsl
ljmp
push
jns
and
mov
inc
push
jecxz
jne
testl
lods
add
leave
mov
sbb
xor
sahf
add
stos
lock
mov
mov
hlt
int
sbb
je
cmc
pop
lds
inc
and
loopne
inc
mov
sbb
insl
mov
push
repz
cli
das
sbb
xor
orw
jo
dec
mov
rolb
call
lock
xchg
add
jl
jbe
pop
negl
and
adc
mov
jb
ret
adc
sub
and
int
push
call
inc
shlb
xor
push
dec
orb
fidivrs
push
mov
xor
adc
inc
pop
push
xor
rcrb
fcoml
mov
popf
sub
cld
push
adc
mov
repnz
mov
and
sbb
jne
mov
aas
add
dec
mov
scas
aaa
sbb
pop
or
fimuls
mov
push
xchg
and
stos
sub
mov
jl
push
push
lods
ss
in
push
push
cmp
hlt
in
int3
std
mov
or
push
sti
xchg
xchg
add
pop
inc
lahf
add
mov
add
fsubr
leave
push
jo
aaa
jb
or
ds
sbb
fcoms
addb
pop
push
js
loopne
imull
add
flds
or
fadds
data16
inc
sub
jmp
popa
clc
xchg
clc
dec
push
cltd
cmp
dec
mov
dec
xchg
inc
or
jno
iret
add
fsubl
add
push
hlt
and
pusha
ror
add
add
clc
mov
dec
dec
and
aam
ror
or
jge
pop
in
jge
adc
sub
jae
adc
add
in
add
je
aaa
mov
enter
push
mov
mull
je
or
fadd
clc
es
test
outsb
mov
and
sub
sahf
sbb
rorl
testb
aam
cltd
mov
cmp
loope
inc
pop
adc
fdivrl
cwtl
add
loopne
push
fcompl
icebp
mov
loope
pop
cwtl
xor
adc
dec
scas
xor
cwtl
ljmp
pop
or
ret
or
dec
rorb
mov
and
mov
out
xor
loopne
push
push
repz
arpl
ret
out
jmp
fnstcw
pusha
jp
insb
mov
addr16
mul
pop
movsl
pop
add
or
jnp
cli
and
pop
dec
cmpsb
sub
cmp
negb
stc
and
xchg
movb
aam
or
inc
sub
int
fldt
addr16
push
push
xor
xchg
mov
ss
add
push
or
push
out
push
scas
dec
or
adc
xchg
lods
push
stos
mov
scas
fidivrl
or
call
push
sbb
loopne
pop
test
cmpsl
pop
lret
mov
add
cmpl
and
add
insl
mov
xor
push
pushl
jb
les
dec
mov
push
ljmp
insb
pusha
cli
iret
bnd
int
mov
dec
mov
dec
xor
inc
mov
sub
decl
sbb
xchg
in
aas
int
push
dec
xchg
jbe
call
mov
push
or
mov
jo
test
cmp
into
insb
dec
repz
das
push
lcall
daa
arpl
rclb
push
cmpsl
lods
loop
in
mov
call
xchg
cmp
and
mov
push
mov
in
das
aad
add
or
and
push
or
dec
inc
and
aad
jnp
dec
push
inc
jg
sbb
pushf
lock
or
push
or
adc
fs
add
int
mov
xlat
pusha
loope
inc
jnp
sub
adc
fadds
jnp,pt
xchg
test
or
sbb
push
add
add
jnp
daa
cmp
jmp
in
shlb
add
roll
sub
std
filds
push
aaa
mov
ljmp
add
sub
ljmp
sub
lods
mov
adc
adc
pop
in
jp
int3
sbbl
or
ss
fisttpl
cmpb
mov
loope
test
dec
sbb
push
cmp
or
inc
cld
iret
ret
jnp
clc
mov
cmp
andb
lea
cmp
stos
jg
xchg
xchg
sbb
es
adc
mov
cmpsb
xor
pop
mov
and
iret
xor
mov
mov
pop
in
or
mov
sbb
mov
call
bound
clc
je
add
clc
and
mov
imul
loop
testb
rolb
inc
insl
push
or
loop
and
inc
addr16
fucomip
jg
pop
loopne
fs
sarb
mov
mov
movb
std
incl
inc
lods
lret
cmpsl
mov
cmpsb
xor
inc
inc
inc
sub
loopne
cld
and
inc
xchg
call
or
xor
dec
sbb
cmpsl
loopne
lahf
fstpl
outsl
cld
mov
mov
inc
sub
lods
cmc
inc
xor
call
sub
insl
outsb
mov
pop
inc
in
and
sub
mov
push
push
xor
add
icebp
int3
mov
call
dec
dec
in
pop
or
ljmp
inc
inc
subl
lahf
inc
push
out
stos
test
stos
mov
insb
sti
add
outsl
ljmp
test
pop
dec
insb
sbb
inc
inc
pop
add
cld
inc
hlt
mov
add
inc
outsl
incl
fcomps
inc
ret
mov
mov
xchg
push
sbb
mov
push
ret
adc
insl
fistpll
mov
std
jmp
bound
adc
sub
cwtl
or
inc
leave
add
cli
xchg
pop
xor
lahf
ret
push
rorl
adc
or
ret
sub
or
dec
sub
lret
imulb
sub
add
mov
add
insl
sbb
ljmp
add
stos
cltd
or
mov
pop
inc
rcrb
mov
push
mov
jl
outsl
rcrl
insb
outsb
fstl
jmp
xor
incl
loop
mov
je
mov
mov
decl
dec
inc
inc
mov
push
insb
incl
ss
push
ds
add
cmp
and
cmpb
in
add
call
cmc
cs
sub
sub
xor
rcrl
sar
decl
movb
movsb
ret
and
cmp
mov
pushl
lahf
jne
rcrl
inc
aam
and
lods
loopne
add
lahf
pop
addb
inc
inc
movsb
out
pop
roll
sti
mov
mov
mov
inc
jmp
or
add
test
loop
dec
int3
sub
in
mov
js
jo
lcall
andb
mov
stos
sbb
or
cmpsl
mov
push
in
jbe
sub
jg
jnp
xchg
std
test
sbb
xorb
add
std
cwtl
xchg
sarb
test
aaa
sub
pop
inc
cld
or
mov
cmpw
rorb
nop
aas
pop
push
cmp
jle
xor
cmp
jnp
mov
sub
xchg
or
bound
icebp
mov
add
inc
addr16
or
rclb
sahf
and
call
and
add
in
scas
sbb
jecxz
fidivl
sub
mov
shr
pop
cmp
mov
adc
cmpl
ds
fisttpll
mov
sub
mov
std
insb
cmp
lds
push
outsb
cmp
iret
xchg
xchg
imul
and
inc
pusha
add
and
test
push
mov
mov
shll
push
in
adc
into
dec
push
add
add
xor
rorb
sbbl
inc
popf
jae
inc
cmc
push
scas
hlt
jg
scas
add
jmp
loop
inc
stos
pop
test
xchg
adc
dec
je
imul
aaa
inc
mov
cmpsb
cmpsl
stos
jnp
cmpb
xor
jnp
jp
sub
jge
adc
lock
sbb
mov
xchg
cmp
mov
push
loop
adc
in
clc
cmp
jecxz
dec
mov
xor
mov
mov
decl
subb
pop
inc
mov
out
cs
inc
jno
sub
decl
jg
add
sbb
push
les
stc
out
mov
push
push
or
xor
jno
jbe
jg
pop
stos
jecxz
jle
out
add
xchg
mov
shl
add
inc
ljmp
dec
jge
xchg
fstp
add
jnp
dec
call
jg
mov
movsb
ja
mov
adc
lret
add
inc
jno
add
jb
mov
aas
les
mov
inc
enter
add
mov
sbb
jbe
mov
cmp
faddl
cld
imulb
cmp
sbb
cmp
enter
outsl
push
dec
repnz
sbb
adc
cmpl
pop
mov
inc
fsub
mov
ljmp
or
fcoms
mov
insb
push
and
dec
xchg
pop
divb
popa
cmp
mov
sbb
dec
daa
pusha
xchg
div
cmp
add
dec
jecxz
lock
add
lods
mov
pop
xor
sarl
mov
mov
dec
negl
lds
mov
daa
adc
or
mov
aas
shll
ret
mov
hlt
push
into
sub
add
imul
repnz
stos
push
lods
xor
lock
std
out
aaa
std
or
sub
fildl
ljmp
xchg
call
repz
xlat
mov
mov
mov
rcrb
les
mov
stos
aaa
jmp
inc
and
incl
mov
and
mov
push
mov
adc
js
inc
sbb
inc
dec
mov
jmp
test
adc
lods
ret
nop
hlt
clc
ret
roll
jmp
mov
or
cmp
arpl
xchg
xor
orb
add
pop
fistl
cmpsb
test
jno
add
push
in
mov
cmpsb
lret
out
mov
decb
imul
mov
xor
inc
and
js
jne
mov
mov
cwtl
mov
cmp
sub
push
jle
mov
aad
and
js
std
pop
pop
pop
adc
pop
lret
add
inc
loopne
sub
pop
fwait
push
fidivrs
clc
push
add
or
push
cmp
inc
add
call
std
and
ljmp
jae
add
sub
daa
stos
push
mov
fcomps
cmp
es
lcall
decl
push
mov
sbb
adc
pop
cld
call
jne
stos
mov
or
xchg
push
xchg
add
sub
dec
sub
call
das
dec
imul
add
fdivrs
or
sbb
mov
sub
repz
mulb
fs
sub
adc
dec
outsl
mov
add
clc
ja
jmp
add
xor
dec
lds
mov
mov
jo
push
xchg
xor
imul
cld
jo
repz
mov
out
inc
and
cwtl
adc
mov
lret
jge
out
pop
insb
filds
mov
push
xor
push
pop
xor
nop
or
add
sahf
clc
sarb
inc
addl
int
idiv
jae
cmp
sub
fs
add
std
xchg
sbb
mov
cld
decl
adcb
adc
mov
out
mov
lahf
adc
roll
push
pushf
addb
icebp
push
add
jle
sbb
repz
scas
es
push
call
out
mov
outsl
in
xchg
mov
js
inc
sbb
lock
pop
add
dec
arpl
jg
in
icebp
shlb
add
fcomps
dec
pop
add
pop
xchg
xchg
sub
in
sbb
jg
and
xchg
adc
ljmp
mov
bound
add
dec
out
push
adc
mov
icebp
jge
cmp
xor
fmuls
add
mov
arpl
jns
cwtl
and
push
add
lcall
and
pop
scas
sub
decl
push
pushf
addr16
cld
inc
mov
mov
add
std
sbbl
adc
int
jl
test
loopne
inc
pusha
cmp
mov
add
loopne
mov
outsl
cld
ljmp
inc
test
push
mov
ja
and
lahf
add
xchg
nop
ret
ss
ret
xor
or
xchg
push
dec
xorb
leave
jbe
pop
cld
xchg
test
arpl
cwtl
pop
sub
dec
in
cmpsl
ret
movsl
xchg
mov
mov
pop
xchg
pop
cld
add
jmp
push
das
jnp
mov
decl
push
xor
cli
push
movsb
cmp
lods
lret
mov
jle
call
imul
sbb
and
stc
shrb
cld
and
cld
add
cmpsb
jl
data16
cs
inc
sub
cmp
ret
mov
jle
adc
pushf
std
fsubs
cmp
outsl
jbe
in
add
xchg
lcall
je
add
sub
imul
loop
fs
or
add
jecxz
test
inc
std
orl
lods
subb
scas
mov
dec
into
in
inc
aad
pop
or
aad
fimuls
or
mov
cmp
call
jg
bound
or
xchg
push
push
bound
dec
in
inc
call
mov
pop
push
add
out
les
test
sbb
adc
test
mov
xor
flds
sbb
mov
loopne,pn
lock
les
lcall
adc
stc
and
jmp
aad
iret
mov
jle
and
jl
add
das
push
clc
pushf
or
mov
inc
sbb
sbb
adc
scas
mov
or
ljmp
outsb
pop
dec
loopne
sub
jecxz
lret
xchg
push
cmp
adc
jp,pn
xchg
push
insl
push
push
dec
and
ja
das
mov
scas
nop
and
add
leave
mov
push
mov
lahf
mov
in
xor
loope
push
mov
inc
pop
jecxz
push
insb
loopne
pop
arpl
jp
repz
subl
cld
sub
and
ds
clc
aas
incl
sbb
xchg
out
subb
xor
mov
sbb
push
je
lods
je
xchg
push
adc
insb
icebp
aaa
dec
mov
pop
lods
pop
mov
or
sub
out
jmp
jb
or
outsl
jg
push
cmp
jmp
jl
test
xchg
sbb
test
adcl
enter
add
sub
add
loop
pop
add
incl
xor
neg
lcall
dec
adc
pop
mov
fimull
mov
jne
dec
out
pop
xor
pop
or
sub
add
or
fildl
sub
cmpsl
or
jmp
add
sbb
sub
addr16
mov
push
repz
ror
mov
add
incl
and
dec
adc
jmp
dec
pop
dec
mov
adc
dec
mov
mov
test
pop
xor
or
add
push
xchg
adc
mov
mov
ss
out
jae
lahf
dec
mov
movsb
decb
mov
pop
push
mov
imul
bound
xor
mov
rolb
add
and
push
in
lds
repnz
repz
sarb
ss
pop
rolb
shlb
mov
mov
adc
jbe
add
fdivrp
addr16
out
popf
sbb
mov
shlb
xorl
sub
mov
pop
rcr
inc
les
mov
rolb
add
popf
bound
adc
fstpl
aas
xor
pop
int3
xchg
inc
xor
repz
add
int3
lea
push
push
and
xor
cmpsb
jecxz
andb
shrl
adc
sub
mov
leave
mov
dec
and
inc
in
adc
and
mov
mov
lock
adc
add
mov
dec
lods
cmc
cmp
sub
jle
and
and
es
js
test
enter
daa
sar
ret
js
add
and
inc
dec
inc
xor
test
ljmp
sbbb
ss
ret
addr16
std
xchg
push
daa
mov
or
shlb
ss
push
mov
es
cmp
fnstenv
int
mov
shlb
pop
cli
xchg
mov
fadds
dec
xchg
jo
js
push
mov
push
ffreep
sub
adc
adc
movsl
jns
call
lcall
jno
int3
sub
outsl
movsl
decb
add
gs
jg
pop
push
iret
rcll
xorb
mov
jg
fwait
jg
push
add
sub
outsb
or
scas
cwtl
mov
jle
sarb
dec
mov
push
and
loopne
mov
xor
mov
call
and
aad
clc
mov
subl
mov
stc
dec
std
cmp
cmp
les
addr16
add
loop
das
dec
adc
out
sbb
les
sbb
rcll
mov
and
jp
scas
std
call
outsl
adc
add
ficompl
or
aas
inc
icebp
outsl
add
mov
shr
mov
ds
push
rcrb
rcrl
xchg
mov
aad
insb
or
paddd
dec
inc
lcall
sub
icebp
push
sub
add
or
inc
adc
xor
jg
pop
inc
sti
fisubrs
sbb
inc
inc
sarl
fcmovnb
lret
pusha
mov
or
lock
mov
test
jg
aad
stos
push
cmp
push
outsb
dec
and
fnstcw
movsl
or
lcall
or
fucomip
fistpl
sub
adc
into
aaa
pop
loop
dec
or
push
inc
inc
clc
and
test
pop
jg
jb
aas
out
pop
orb
mov
xor
xchg
mov
aaa
pusha
gs
or
incl
pop
orl
aas
cli
adc
subl
test
adcl
loop
dec
add
addl
aas
inc
dec
das
std
out
les
add
nop
pusha
mov
lcall
pop
xor
xchg
mov
cs
push
test
das
push
jle
or
test
push
dec
ret
pusha
clc
add
sbb
jg
mov
and
cmp
lds
inc
loop
cmp
ss
loopne
add
int3
sub
test
add
push
adc
xchg
or
stos
stc
cli
in
gs
rorl
mov
xor
sub
in
repnz
adc
sub
pop
push
push
cld
mov
sub
adc
adc
repz
jns
mov
push
jb
fcmovu
push
fnstcw
movsl
and
inc
and
jmp
sbb
repnz
dec
jl
sbb
pop
cld
ja
lsl
mov
out
adc
mov
outsl
ret
scas
test
add
cmpsb
push
xor
or
iret
insw
cmc
in
shll
push
ss
lcall
decl
adc
jo
xor
fildll
inc
mov
pop
mov
inc
shrb
adc
lret
sub
pop
fs
movsl
hlt
pop
icebp
jg
sbb
outsb
mov
int3
les
mov
push
jmp
xchg
movl
mov
xor
pop
stc
lret
scas
sub
and
test
xchg
push
cmpsb
or
cmc
aas
sub
out
mov
mov
ljmp
int
inc
ret
add
jne
jl
fistps
inc
mov
loopne
mov
jl
clc
fwait
push
out
dec
cvtps2pd
aaa
rclb
lea
push
jg
push
cltd
pusha
push
push
inc
xchg
pop
cmp
cld
call
lret
cmp
push
xchg
jl
mov
mov
push
or
jecxz
rolb
mov
das
mov
add
inc
pop
into
lret
mov
sbb
mov
scas
gs
cmp
lret
mov
pushf
push
mov
and
add
push
imul
or
add
call
lcall
xchg
cli
lret
in
addr16
jb
mov
loop
jle
dec
sti
sbb
das
or
xchg
or
and
ljmp
cld
stc
stos
inc
lods
dec
pop
aaa
outsb
sub
mov
imul
and
push
and
and
sbb
xchg
cmp
and
lret
jg
std
cmpsl
sar
dec
sbb
push
sbb
or
and
xchg
in
lds
mov
rorb
sti
and
sbb
lea
mov
cmp
mov
test
sbb
and
adc
outsl
cltd
fwait
ja
push
mov
mulb
sbbl
sar
dec
lock
xchg
and
mov
lock
fildll
inc
je
aam
sar
icebp
xlat
inc
lds
pop
xchg
pop
sub
xor
dec
dec
mov
push
mov
mov
fistl
and
xchg
jl
pop
or
divb
mov
add
cld
adcl
dec
dec
and
lret
popa
add
icebp
push
clc
fcomip
sbb
jns
lret
push
inc
xor
push
sahf
mov
outsl
fstpt
push
xor
ds
push
arpl
dec
leave
nop
cmp
add
cmp
or
sbb
test
shlb
xchg
push
or
dec
pop
shrl
mov
pushf
movsb
and
and
dec
sar
shrb
push
cmp
inc
push
js
mov
jg
int3
pop
push
dec
enter
sub
cld
cmp
inc
andb
cmp
incl
inc
lret
pop
xor
mov
add
mov
and
int
push
add
pop
sub
rcrb
paddsb
push
stos
inc
call
sahf
fldl
loopne
xor
js
movsl
mov
add
fnstenv
stc
in
dec
movsl
int
movsl
loop
test
jge
push
pop
shlb
mov
push
mov
ljmp
mov
movsb
and
adc
sbbb
mov
or
mov
iret
fdivl
adc
loopne
das
mov
adc
adc
and
cwtl
inc
out
sbb
adc
mov
fmul
mov
mov
mov
mov
sub
or
push
stos
inc
std
cmpsb
fdivs
das
cmc
filds
lds
xchg
sub
cmpb
add
mov
fnstcw
add
fistps
add
daa
inc
shlb
sub
les
mov
pusha
pop
or
push
sub
add
fsts
ljmp
test
int3
push
cmp
xchg
xchg
insl
incb
pop
cwtl
push
push
jp
mov
push
ret
adc
add
and
or
push
add
mov
out
add
jecxz
or
adc
imul
int
xlat
pop
push
mov
sahf
mul
orb
cmp
add
pop
mov
cld
sbb
sbb
inc
popf
or
mov
cmp
add
pop
xlat
rcrb
cmp
frstor
add
sub
sbb
or
add
pop
adc
divl
mov
call
imul
rclb
push
pop
pop
xchg
mov
pop
lea
pop
roll
filds
or
xchg
neg
xor
gs
pop
pop
jo
out
lret
add
filds
push
push
dec
cmpsb
ret
popa
fsubr
pop
insl
lcall
cmpsl
in
movsb
data16
push
adc
imul
stos
cli
inc
lea
sbb
add
push
loopne
fisttpl
test
jmp
dec
sbb
and
adc
pop
sar
dec
add
stos
and
sub
mov
cmp
int
sub
sub
pop
ss
xabort
cltd
cld
call
call
or
int
pushf
stos
aam
roll
sub
fisubrl
out
or
adc
xchg
pop
inc
sbb
and
jae
sub
call
incl
dec
push
push
inc
jl
sbb
add
inc
aas
and
pop
movsb
sbb
das
jns
pop
in
aaa
push
cltd
pop
push
adc
push
mov
pop
out
mov
mov
push
sub
jne
pop
push
jecxz
jg
lcall
push
arpl
dec
sub
and
pop
je
mov
cmp
fbstp
pop
ljmp
bound
sar
jg
xor
sbb
add
js
adc
int3
std
adc
orb
push
les
mov
xchg
inc
cld
ljmp
xchg
lretw
cwtl
push
pop
jae
sbb
jno
mov
xchg
test
mov
mov
and
or
pop
dec
add
add
les
sub
fs
bound
sub
adcb
pop
and
xchg
cli
mov
adc
mov
sahf
in
xchg
movsl
test
adc
mov
pop
addl
les
ret
jg
jl
out
cltd
sbb
roll
or
and
jmp
mov
mov
pop
pminub
push
xor
sbb
cmp
pop
pop
xor
mov
loope
aam
das
mov
dec
push
sub
and
xchg
mov
jecxz
mov
add
adc
jl
push
mov
xchg
or
jg
fiaddl
xchg
cltd
jo
stc
xor
lahf
inc
js
clc
jg
bound
test
stos
add
mov
add
std
xchg
aas
mov
jmp
inc
push
out
lea
add
je
mov
cmp
je
sbb
push
xorl
xchg
xchg
push
jbe
orl
sub
adc
mov
imul
daa
mov
loope
mov
orl
mov
sub
mov
mov
push
sub
loopnew
pop
in
outsl
mov
call
sub
icebp
ljmp
pop
pop
or
out
shlb
sahf
ja
fsubr
or
loop
test
lods
lahf
sqrtps
lahf
inc
rcll
mov
mov
icebp
lea
push
sub
cli
jns
jecxz
inc
sahf
mov
sub
pop
fstl
sbb
shrl
data16
xchg
jg
pop
mov
js
addl
jle
xlat
outsb
and
call
pop
cli
jbe
sahf
sbb
dec
sti
pop
add
or
or
or
adc
test
add
arpl
in
outsl
clc
mov
mov
icebp
loope
jg
addr16
ja
mov
jmp
inc
test
out
mov
mov
inc
fdivr
push
rcr
out
sbbl
out
xchg
fildl
push
mov
in
aas
leave
mov
add
clc
daa
or
xor
or
aaa
hlt
popa
adc
loop
cwtl
int3
cmp
mov
dec
shl
xchg
int3
fistl
dec
push
push
push
sar
mov
xchg
stos
aas
mov
jge
ret
mov
cmpsl
icebp
jg
lea
iret
nop
lret
dec
pop
std
dec
popa
mov
loopne
int
and
enter
jb
ja
mov
sub
pop
out
sub
pop
xchg
xchg
shl
jg
adc
sub
loopne
loope
shlb
mov
sbb
cld
and
pop
out
sti
decl
mov
add
out
push
test
addr16
dec
jg
pop
jns
dec
cwtl
lods
rclb
std
xchg
jle
adc
cld
es
das
std
mov
add
push
push
and
sub
cmpb
popf
push
fcmove
aas
jmp
jmp
jns
dec
inc
mov
mov
pushf
cmp
mov
test
loop
popa
pop
cmpl
xorb
dec
std
ljmp
cwtl
mov
dec
dec
lret
inc
inc
incl
call
xor
out
mov
decl
std
addl
add
mov
add
ret
movsl
mov
add
adc
clc
lcall
sti
fbstp
call
lahf
jg
orl
and
and
repnz
in
mov
subl
cmp
jmp
in
mov
xor
jb
push
adc
or
mov
jge
stos
jne
pop
call
push
jecxz
cmp
inc
xor
lret
lock
pop
xor
mov
or
stos
fistpll
std
jl
aam
xchg
jecxz
and
call
or
mov
jae
xchg
filds
mov
adc
pop
sbb
lcall
jmp
pop
ret
or
addr16
and
fs
pmuludq
push
incl
sbb
jmp
pop
add
sub
cmpsl
sbb
mov
mov
sti
or
clc
pusha
call
shufps
xor
scas
loopne
push
inc
sar
sub
setl
xor
push
and
dec
insl
cld
out
cmc
sbb
or
cli
jp
in
sub
lea
mov
pop
outsb
cltd
lcall
jno
add
iret
ja
inc
inc
mov
fcmovb
inc
xorb
adcb
test
mov
lods
mov
pop
push
xchg
daa
inc
jae
inc
mov
repz
add
icebp
aaa
fstps
sub
jne
mov
and
lret
aam
inc
mov
in
incl
rclb
mov
imul
flds
inc
loop
xor
int
daa
clc
inc
xor
mov
sbb
call
lret
ljmp
aaa
xchg
popa
pop
add
iret
cli
xchg
push
dec
push
sub
test
incl
ljmp
adc
movsb
xchg
xor
add
or
or
das
hlt
jg
adc
dec
movsb
lods
xchg
pop
insb
dec
add
pop
mov
jle
and
push
jp
fwait
xchg
jns
pop
decl
mov
or
sar
mov
ljmp
or
xchg
dec
and
mov
inc
and
push
clc
mov
stc
sub
xchg
push
incb
in
std
in
das
push
sbb
cmp
push
movsb
and
aad
pop
push
ss
push
push
push
add
or
cs
out
mov
jmp
sub
sarb
and
pushl
scas
adc
loopne
or
sub
loop
pushf
dec
mov
sti
or
test
inc
dec
mulb
jno
inc
movsl
call
mov
loope
dec
hlt
in
jmp
test
mov
pop
push
and
je
decl
push
lret
jns
frstor
out
daa
and
jge
add
ss
decl
cmp
std
lea
sbb
push
xchg
push
or
inc
pop
cmp
sub
pop
xchg
mov
fdivrs
or
ljmp
add
movsl
inc
jne
ds
push
jecxz
pop
inc
mov
or
incl
lods
xor
lods
pushf
mov
inc
cmpb
sarb
or
xchg
loopne
call
call
sbb
xchg
sub
addr16
stos
dec
insl
pop
fisubl
adc
hlt
out
and
mov
arpl
ss
xchg
lock
inc
pop
jle
loopne
xchg
aam
shlb
sbb
decl
adc
ret
add
sbb
orb
pop
adc
inc
pushl
mov
in
jecxz
stc
inc
lahf
daa
xor
and
jg
mov
and
rcll
nop
mov
aas
andl
push
xor
inc
dec
jg
push
push
add
movsb
pop
cmp
jae
or
test
mov
and
mov
add
pop
leave
pusha
jg
push
rolb
sbb
stc
pop
or
mov
xchg
and
imul
sub
lret
aam
pop
jb
adc
es
jne
mov
sti
mov
dec
mov
sbb
xorb
loopne
hlt
sti
xlat
lods
movsl
add
aas
or
xchg
int3
into
test
test
call
inc
lods
test
stc
inc
xor
and
test
data16
scas
les
inc
lods
call
cmpsb
push
adc
xchg
pop
mov
mov
in
call
mov
sub
rcl
movsb
mov
mov
mov
pusha
test
jae
push
jmp
in
mov
push
divl
sbb
fldt
push
icebp
mov
and
pop
aaa
dec
mov
inc
adc
and
clc
out
clc
jmp
les
incl
movl
sub
fldl2e
sbb
push
xor
cltd
push
lock
mov
dec
cltd
fisubrs
jp
mov
jo
or
pop
and
mov
lods
pop
jnp
or
add
dec
inc
lret
movsl
pop
rcrl
icebp
xchg
fisttpll
orl
sbbb
jne
xor
mov
cmp
add
shrb
or
sub
aam
adc
push
mov
sbb
lds
add
sbb
cld
sbb
shr
aad
sbb
inc
cmp
cmp
loopne
pop
adc
mov
arpl
mov
popa
stc
sbb
sub
cli
in
fwait
cmp
sti
add
mov
imul
inc
push
pop
hlt
xor
push
test
inc
add
fldlg2
mov
adc
pop
xor
in
add
gs
add
sbb
and
pop
insl
jae
jnp
or
fs
into
push
xor
out
js
or
dec
aam
xchg
add
icebp
mov
and
sbb
add
and
add
cmc
or
inc
fists
cmp
mov
int
mov
dec
cmp
jmp
inc
push
outsl
pop
pop
and
sub
lods
push
jbe
mov
mov
inc
int
cmp
cmp
fdivrp
add
rclb
dec
cld
call
and
cmp
mov
ljmp
repz
jae
in
mov
and
fcoms
mov
push
hlt
jg
cwtl
xchg
inc
dec
add
lock
inc
sbb
mov
call
or
je
fsubrs
pop
add
sub
add
dec
movsl
push
pushf
xchg
or
imul
sbb
movsl
ljmp
jne
xchg
aas
sub
mov
fisttpll
push
inc
cmp
sbb
vmptrst
mov
fildl
cmc
aaa
sub
scas
mov
out
arpl
ret
insb
test
pop
mov
cmp
ffreep
dec
iret
add
add
xor
jne
ljmp
sbb
jp
stc
sub
lock
add
int3
scas
or
mov
sbb
add
rorl
lods
lods
jg
mov
insl
cli
imul
and
sbb
pop
fwait
jg
cmp
out
ljmp
pop
xor
mov
dec
arpl
cmp
mov
shr
and
std
ss
push
scas
mov
add
ljmp
lcall
inc
add
jo
sbb
in
les
mov
xchg
adc
imul
cwtl
push
jnp
inc
outsl
cmc
pop
cli
add
mov
aad
jle
aas
cld
ror
jbe
sarb
xor
js
sub
das
inc
call
ret
pop
call
mov
out
lcall
mov
outsl
add
fwait
jne
daa
jecxz
xchg
or
in
jg
or
loope
decl
lcall
push
inc
insb
loop
cmp
loopne
iret
sub
out
sbb
jo
sbb
out
ret
cmp
and
mov
inc
jno
call
mov
and
dec
add
sbb
roll
cmp
inc
pop
xchg
sub
daa
orl
push
loopne
mov
in
mov
clc
mov
es
xor
cli
in
out
lods
add
test
add
mov
push
std
shrl
scas
and
inc
pop
xor
fsubr
cmp
jl
sub
sbb
call
jg
xor
and
add
out
jno
jno
arpl
cmp
adc
in
incb
daa
push
inc
inc
mov
hlt
daa
jg
inc
mov
ds
or
and
xchg
mov
jmp
xchg
repnz
adc
jb
pop
cmc
dec
imul
clc
outsl
cmp
loop
lods
inc
mov
cmp
pushf
and
cmp
cld
aaa
jp
mov
cmp
std
inc
mov
mov
aas
and
js
hlt
push
stos
mov
sbb
lods
subl
jle
adc
push
outsb
sarb
or
icebp
incl
dec
gs
mulb
les
mov
imul
gs
decl
jae
aaa
das
ds
add
je
movsb
cmpsb
outsb
cmp
adc
adc
jno
lahf
push
call
sbb
in
bound
push
mov
or
mov
pusha
dec
cmp
or
fiaddl
cmpl
sti
lods
mov
lcall
cmpsb
push
popf
je
clc
jg
cmpsl
mov
aas
inc
mov
cld
outsl
mov
stc
mov
pushf
into
orl
stos
and
lcall
lcall
mov
cli
and
xor
xchg
ja
xchg
clc
negb
adc
sbb
stc
cli
xchg
lea
sti
jne
gs
pop
call
stc
inc
add
cmp
leave
adc
bound
ds
scas
add
jo
add
add
sub
rorl
in
dec
insb
xchg
or
je
adc
loope
xchg
adc
jb
lods
scas
pusha
push
sbb
cmpsl
sbb
outsl
js
mov
in
in
std
orl
add
jmp
mov
jmp
notl
cwtl
and
cmp
xchg
add
mov
sahf
neg
mov
xchg
lock
jp
cmp
lods
js
call
pop
aad
push
adc
inc
icebp
or
inc
jne
ja
mov
inc
enter
test
out
jb
dec
or
add
sti
mov
and
sbb
fdiv
call
cld
stos
push
add
inc
pop
or
clc
mov
add
aam
jl
in
xor
jg
xor
mov
push
dec
subb
sub
add
cmp
mov
mov
or
clc
cmp
or
test
cmpsb
js
pop
mov
inc
mov
add
push
lods
push
cmp
or
gs
fs
mov
xor
loopne
mov
sub
sbb
push
cs
add
bound
fisubs
repz
jno
push
or
sbb
arpl
add
xchg
pop
lds
dec
out
adc
dec
test
sbb
repz
push
and
ds
rorb
mov
into
mov
mov
subl
lahf
insl
jmp
or
sbb
loopne
xchg
cwtl
inc
mov
pop
adc
lock
out
fwait
dec
add
pop
lock
out
ds
stos
push
push
test
mov
ret
mov
mov
xchg
roll
inc
mov
loopne
test
cs
icebp
add
aad
and
inc
mov
out
sbb
sub
push
push
and
movsb
push
dec
out
jge
aas
inc
push
aaa
mov
clc
mov
insb
std
aas
adc
cs
inc
repz
pop
inc
leave
test
dec
mov
js
and
xchg
adc
cmpsb
sub
addr16
mov
clc
lods
or
or
mov
lock
lock
mov
movsb
mov
jle
cld
pop
and
inc
or
daa
sbb
gs
mov
mov
or
pop
jecxz
les
ret
sub
ret
sub
jle
dec
sub
test
orb
xor
ss
push
data16
xor
call
cmpb
leave
and
sub
and
add
jmp
push
pop
mov
fisubl
add
cmpsb
sub
pop
fimuls
or
xor
pop
leave
jp
sarl
jp
fs
filds
iret
jmp
and
lea
mov
adc
xchg
mov
clc
or
inc
pop
imul
or
out
lods
adc
jnp
stos
push
sbb
pop
fldcw
inc
cld
jo
movsb
dec
push
imul
xor
pushf
pop
idiv
pop
cmp
xlat
sbb
pop
cmpb
adc
das
push
sbb
clc
aaa
pop
orl
push
lea
cltd
inc
call
rclb
mov
mov
inc
add
icebp
lds
inc
testb
adc
xor
sbb
daa
call
inc
xor
scas
mov
add
call
mov
lret
dec
and
adc
fiadds
daa
cmpsb
movsl
cmpsl
or
and
cmpsl
ret
pop
lock
jb
cmp
sbb
xor
rcr
adc
or
subl
cmc
cwtl
add
xchg
cmp
xor
pop
jl
js
mov
es
loope
jp
and
arpl
or
sub
add
cmpl
mov
add
rorl
dec
adc
push
vandps
shrb
dec
and
mov
inc
mov
sub
insl
bnd
dec
lds
dec
inc
sub
inc
aaa
and
andl
lret
lahf
lea
es
jl
jmp
stos
cli
dec
ret
sbb
pusha
sti
ljmp
mulb
mov
pop
cs
testl
xor
lock
icebp
jne
and
fsubl
stos
or
enter
xor
scas
push
inc
stos
inc
clc
sub
fistps
push
sub
lret
dec
leave
and
jo
mov
sbb
lock
jmp
inc
fucomp
adc
mov
jae
add
ret
addb
xchg
jae
sub
add
stos
dec
mov
dec
aad
add
xchg
push
test
cld
mov
aad
mull
mov
rcll
jg
or
dec
add
xchg
scas
mov
cmp
test
inc
xchg
pop
add
or
inc
sub
adc
into
test
imulb
dec
pop
ret
ds
pusha
cmp
xor
sahf
and
mov
or
int
rcr
lock
cmpsb
ror
pop
or
fcomi
incl
icebp
outsb
jl
add
xor
insb
or
fmull
push
cmp
add
xlat
roll
or
inc
or
outsb
addr16
or
and
imul
shll
jb
sub
test
adc
push
dec
sbb
add
mov
mov
adc
enter
lock
loopne
mov
mov
int
jb
mov
push
pop
aaa
inc
cmp
jp
jmp
cli
scas
cmpsl
hlt
pusha
and
inc
add
outsb
inc
outsb
in
loop
push
or
aas
popf
xor
mov
sub
add
lods
and
mov
subb
or
or
addr16
shll
and
mov
rcl
xchg
hlt
dec
xchg
aas
cmp
test
fistl
sbb
sub
add
inc
add
or
sbb
mov
pop
sub
sbb
mov
pushf
cmp
nop
or
pop
ret
ss
call
aam
mov
push
clc
jmp
add
ja
mov
jmp
icebp
ret
adc
test
jae
addr16
mov
sub
push
push
or
mov
fcoms
aam
push
cmpsl
aam
movsl
push
std
cmp
jb
push
orb
imull
mov
sbb
rol
aad
mov
pushf
sub
ret
mov
pusha
inc
inc
mov
push
clc
clc
pop
inc
cmp
data16
adc
sbb
clc
sbb
adc
add
adc
mov
sarb
leave
mov
jl
fdivs
cmc
rclb
dec
in
sbb
adc
addr16
dec
sub
mov
or
int3
je
sbb
fs
mov
test
adc
enter
add
addl
or
lret
dec
inc
inc
jb
mov
pop
int3
mov
and
enter
rcrl
mov
xchg
lea
pushf
call
pop
add
dec
dec
shrb
mov
pop
mov
mov
pop
jnp
idivl
cmpl
add
push
movsb
add
outsb
dec
add
add
daa
cmpsb
dec
add
shl
sbb
pop
lods
fcmovbe
ror
fsubrl
es
loopne
add
inc
dec
negb
cmpsl
rclb
mov
loop
add
dec
xchg
pop
loopne
push
sbb
sub
aam
jbe
pop
jae
adc
cld
test
sbb
int3
rol
add
jl
fistps
mov
xor
mov
out
cmpb
sbb
aas
ds
lea
push
sbb
cli
pop
icebp
out
xchg
nop
inc
sbb
add
jmp
and
ja
jns
pop
push
pushf
pop
jns
sarl
xchg
jae
jle
dec
push
xor
jb
xchg
es
jmp
or
mov
iret
add
xchg
jle
mov
mov
jle
in
lock
js
jg
pop
mov
mov
sbb
xor
cmp
std
outsl
dec
stos
mov
test
aad
in
xchg
stos
or
ret
fcoml
pushf
fs
out
dec
lock
test
inc
sbb
ret
clc
or
mov
and
test
lods
xchg
idivl
jg
addr16
gs
jae
mov
push
es
test
rorb
mov
lods
daa
iret
pushf
inc
lock
cmp
inc
int3
pushf
sahf
and
and
sub
std
jo
pop
jb
mov
ret
cmp
and
loop
fldcw
or
dec
cmp
test
neg
lock
push
addr16
cli
adc
cwtl
add
lret
cs
daa
mov
adc
enter
ror
mov
lret
and
mov
pop
cmpsb
ljmp
mov
sbb
imul
das
icebp
xchg
cltd
xchg
inc
push
mov
icebp
bound
add
or
dec
add
cmpsb
jmp
dec
sbb
xchg
clc
call
mov
and
adc
std
mov
fstpl
popf
add
mov
add
pop
adc
into
cmp
pop
ret
ljmp
add
andb
adc
jge
pop
xor
pusha
jno
or
cmpsb
sahf
cmp
outsl
mov
int
fs
lcall
pop
jbe
pop
sbb
icebp
sti
mov
xchg
pushf
sub
dec
mov
inc
jg
add
xchg
pushf
ret
add
roll
aam
std
aas
push
inc
xor
dec
push
ds
mov
shrl
loope
add
mov
lods
sbb
cwtl
daa
sti
decl
inc
mov
cmp
pop
adc
sbb
inc
decb
inc
add
lret
add
jecxz
shl
mov
xchg
push
or
add
pusha
fwait
or
mov
cmp
xchg
invd
push
mov
xchg
clc
lahf
jl
in
movsb
mov
inc
and
testb
nop
mov
repz
cmp
sub
push
lcall
fsubrs
add
call
and
adcb
out
jmp
dec
leave
mov
fdiv
nop
jge
mov
rorl
xchg
in
outsl
cmc
sbb
out
and
repz
and
cmp
lret
push
lock
scas
cli
es
in
fisubrs
xor
mov
add
and
sbb
sbb
mov
pop
xor
les
sbb
mov
int3
add
pop
or
notl
mov
test
mov
data16
test
mov
aas
xor
sbbl
loopne
sub
pop
nop
fldt
jmp
repz
dec
inc
jg
adcl
insl
cmp
pop
rorl
push
rolb
ret
int
sbb
das
pop
dec
xlat
nop
and
fisubrs
je
mov
fbld
sbb
mov
mov
inc
data16
push
in
fsts
cmp
popf
inc
sbb
and
pop
lock
movsl
mov
pop
mov
mov
or
xchg
loopne
loope
adc
xchg
out
and
xor
ljmp
in
mov
push
lds
enter
add
adc
xor
stos
aam
push
enter
jle
outsb
test
je
std
push
nop
inc
bound
test
int3
mov
ret
push
les
gs
inc
jae
and
cmp
jmp
sub
leave
lds
aaa
stc
in
xor
jmp
inc
js
cmp
rorl
mov
aam
mov
inc
dec
rcl
sbb
push
mov
es
fadds
mov
mov
inc
movsb
or
push
pop
pop
movsb
xchg
enter
and
inc
imull
les
ljmp
add
icebp
pop
orl
and
inc
out
scas
mov
cmp
pusha
push
mov
or
dec
xorb
or
xor
pop
or
xor
push
mov
push
xor
sbb
cmc
mov
pop
loope
cltd
mov
popl
fpatan
mov
add
call
test
jmp
adc
push
jl
pop
arpl
dec
jne
mov
dec
data16
mov
pop
inc
dec
addr16
and
lods
and
mov
mov
out
test
push
popf
mov
mov
adc
iret
lret
jmp
xchg
inc
lock
xor
dec
std
pop
js
lds
jg
pop
push
dec
les
ljmp
mov
adc
andb
xchg
xchg
mov
movsl
stos
adcl
loopne
or
mov
fdivs
loopne
jb
sub
sbb
mov
and
repz
js
popa
push
mov
cmc
into
dec
push
mov
popa
or
in
sub
popa
lods
inc
or
inc
mov
mov
push
out
jbe
fsubrl
aaa
testb
and
pop
insb
loop
sub
ficompl
push
adc
push
in
popf
push
fidivl
sti
and
or
jno
js
aam
test
xchg
xchg
and
xor
fadds
dec
andb
ror
adc
and
lcall
mov
pop
in
iret
inc
or
xlat
rorl
stos
lods
add
sub
mov
mov
sbbb
adcl
int
xchg
inc
add
into
push
cmpsb
pop
cmp
shrl
ror
xchg
sarl
shl
mov
sub
aad
mov
ret
inc
fwait
ljmp
sbb
ret
push
iret
adc
sbb
sbb
mov
cli
xchg
add
mov
ret
mov
add
xchg
clc
dec
loope
jp
inc
mov
add
pop
sub
xchg
repnz
test
adc
rcrl
insb
inc
mov
pop
jnp
icebp
jne
add
pusha
cbtw
xor
adc
rorl
fsubp
adc
inc
add
scas
jge
ljmp
add
push
pushf
imul
mov
adc
arpl
in
pop
add
or
rclb
dec
aaa
mov
push
ljmp
inc
mov
fadds
inc
or
or
addb
sbbl
mov
sti
mov
sbb
sahf
or
test
call
jno
fwait
out
and
cmp
loop
fnsave
hlt
shrl
dec
and
inc
jge
movsb
pop
adc
and
pop
dec
or
mov
mov
inc
fists
sbb
stos
or
jmp
scas
fldl
hlt
add
jnp
cmc
or
push
push
dec
sahf
xor
ljmp
add
pop
xchg
jl
xor
and
sub
test
test
inc
ret
clc
jge
fdivr
andl
mov
mov
adc
lds
add
ret
loop
mov
cmp
stos
and
out
sbb
mov
lahf
lahf
dec
gs
out
push
pop
lods
push
xchg
add
sub
add
mov
cltd
adc
lret
enter
das
cmc
add
clc
sub
pop
jle
scas
ljmp
rcll
fstl
sahf
add
jge
dec
stos
xor
pusha
mov
popl
jg
xchg
xchg
in
rorl
incl
mov
push
mov
filds
and
pop
in
fdivrl
dec
scas
int
out
push
sarl
push
in
lcall
and
lock
add
icebp
xchg
pop
cmpsb
lcall
mov
add
sub
xchg
shrl
push
pop
sar
inc
push
insb
add
add
roll
push
in
dec
pop
inc
sub
lret
pop
mov
stos
decl
clc
stc
test
loop
lock
scas
pushf
mov
leave
sub
arpl
adc
scas
arpl
mov
jmp
jo
xchg
or
and
das
shll
dec
mov
and
in
cmp
inc
xor
and
ljmp
rolb
xor
data16
leave
adc
sbb
mov
sub
jg
mov
adc
xlat
sbb
jle
pop
ljmp
inc
push
jl
xchg
add
xlat
sub
mov
in
outsl
jne
stos
mov
jl
dec
imul
mov
xor
xlat
sub
mov
inc
sbb
aas
push
adc
subb
inc
mov
mov
loop
push
shr
push
mov
out
xchg
jle
pop
cli
jg
mov
int3
fs
mov
mov
mov
aam
add
pop
cmp
mov
xor
outsb
imul
add
js
sbb
pop
loopne
cld
cmp
pop
pop
clc
outsl
or
sub
and
add
jle
dec
pop
inc
xchg
movsb
cmp
xor
cli
pop
lods
ljmp
and
lahf
subl
sarb
cmpb
or
mov
test
and
aam
mov
sub
mov
daa
xor
xor
stos
scas
aam
aaa
inc
jo
cmp
lods
mov
mov
je
popa
jae
data16
aad
jns
sbb
sub
frstor
add
mov
cmp
lcall
clc
and
inc
jecxz
loope
loopne
add
popa
inc
mov
push
in
jl
inc
inc
iret
jmp
add
mov
push
inc
adc
das
jl
xchg
xor
mov
rorb
cmc
testl
data16
fsubr
addb
pop
shlb
sahf
push
sub
and
sub
incl
addr16
fisttps
pop
orb
mov
push
inc
cmpb
mov
cld
lea
and
loopne
or
js
add
notb
into
insb
js
cmp
mov
cwtl
cmp
test
dec
cmp
lea
mov
scas
lret
xchg
loop
je
cmpsb
and
cmp
add
mov
stos
adc
push
imul
out
cmpsb
test
xchg
cmp
sbb
cmpsb
add
adc
dec
cs
lahf
sbb
and
cld
testb
daa
push
xchg
dec
or
sub
push
pop
fdivrs
xchg
mov
loop
sub
push
sub
add
pop
adc
aam
add
pusha
inc
mov
fiadds
icebp
sub
mov
dec
cmpsl
loope
mov
inc
or
in
inc
es
popf
xchg
jo
add
mov
sub
and
hlt
fbstp
cmp
and
insl
and
pop
add
daa
push
inc
cs
stos
out
add
push
pop
sub
or
daa
or
mov
add
daa
arpl
loop
or
mov
call
add
push
adc
enter
dec
and
sub
dec
dec
xor
jne
mov
xchg
push
adc
ds
cmp
mov
pop
xchg
and
xchg
mov
pusha
add
push
adc
mov
fsubrp
testl
and
push
jo
ss
or
divl
int
cmc
pop
lret
and
mov
movsb
hlt
dec
subb
mov
cmp
or
sbb
cmpsl
fisttpl
adc
or
inc
dec
mov
fsubl
arpl
push
mov
mov
dec
fidivrl
sub
fcoml
add
scas
and
lock
push
push
mov
mov
or
cwtl
or
jb
fiadds
and
push
pop
sub
lock
or
mov
fdivp
push
push
add
in
and
ds
dec
sub
adc
aaa
cmp
arpl
jb
rolb
sbb
add
out
fisubl
lock
jb
leave
sub
mov
mov
fidivrl
mov
fsub
xchg
jg
pop
ss
xchg
adc
or
mov
xchg
mov
stc
arpl
fs
xor
adc
dec
addb
inc
xor
rorl
test
call
loopne
adc
stos
popf
insl
sbb
negb
sbb
stos
ds
cmpb
inc
and
inc
push
cli
mov
and
fistl
sbbb
push
mov
fiadds
push
nop
lret
mov
lods
fidivs
fmuls
rclb
mov
cld
pop
mov
mov
in
sub
flds
push
les
cmp
or
push
outsl
mov
cmpsl
sub
gs
les
pop
test
mov
sbb
adc
lods
orl
shl
push
shrl
lret
ds
cmp
jge
push
jne
and
xor
gs
popf
das
xor
adc
jp
rcrb
jle
les
shrb
push
push
add
outsl
inc
iret
add
or
adc
stc
loopne
loopne
ret
push
out
rcrl
sbb
mov
and
in
xchg
cmpb
test
imul
xorl
jnp
fildll
dec
and
sub
into
stos
loopne
mov
mov
xchg
addl
mov
icebp
cmove
clc
and
shll
inc
mov
fcoms
lock
mov
xchg
xchg
les
push
pop
dec
popf
push
jmp
and
xchg
lcall
mov
xor
push
adc
mov
arpl
loop
add
mov
add
sbb
xchg
mov
stc
mov
call
add
mov
addr16
insl
mov
insw
mov
dec
push
mov
jge
jmp
sbb
outsl
outsl
push
inc
cwtl
add
sbb
pop
pcmpeqw
rcrb
scas
pop
mov
mov
aas
cmp
and
shr
jb
fwait
das
lahf
or
and
add
mov
or
sahf
xor
and
lret
or
cli
icebp
icebp
js
fdiv
out
shr
imulb
lret
scas
nop
sahf
and
xchg
int
xor
ficoms
int
sbb
xor
test
mov
popf
or
ret
out
push
aaa
lock
mov
out
mov
jae
inc
incl
add
jmp
stc
xchg
adc
pop
scas
in
push
cmp
inc
out
les
out
test
rorl
and
incl
mov
sti
jg
mov
inc
jns
pop
fstl
add
dec
jne
dec
ficoml
sbb
pop
and
xor
adcb
imul
mov
in
rclb
push
cld
jns
pop
jle
call
add
xchg
mov
cld
iret
cs
in
pop
jle
addl
cltd
sbb
mov
add
add
jb
roll
cmp
ljmp
js
cmpsl
adc
addr16
push
jmp
pop
movsl
loop
inc
icebp
jg
icebp
stc
cmp
shll
push
adc
sbb
out
sti
adcl
ljmp
add
test
xchg
decb
adc
sti
popf
in
sub
mov
fsubr
repnz
mov
mov
pop
mov
stos
inc
sub
call
cmovb
daa
adcl
jbe
sub
push
test
clc
jmp
or
xor
sar
outsl
ljmp
idivl
mov
test
daa
repnz
jg
movlhps
xchg
ficompl
jecxz
pushl
push
gs
sub
mov
mov
dec
dec
hlt
mov
inc
pusha
jo
inc
inc
lock
in
jmp
cmp
push
mov
cmp
dec
loopne
xor
mov
inc
aaa
and
leave
pop
aam
or
sbb
incl
push
sub
repnz
add
rorb
mov
xor
cmp
dec
cmp
mov
push
loopne
inc
push
pushf
mov
cmp
pop
cld
mov
cmp
mov
sub
ljmp
ljmp
xchg
out
fs
jg
mov
mov
cs
xor
mov
aas
push
mov
rorb
cmp
repz
xchg
xchg
imul
adcl
lock
adc
std
decl
outsl
movsl
pop
sarl
push
and
lea
decl
test
repnz
push
mov
test
es
add
fistpl
mov
cmp
push
mov
lock
aas
push
imul
inc
and
loopne
lea
fwait
outsl
pushl
or
enter
inc
aad
and
scas
jle
push
mov
xlat
xor
les
inc
jecxz
add
mov
inc
push
pusha
push
pop
aad
pop
add
cwtl
or
or
inc
jbe
adc
dec
ja
fidivrl
mov
jo
dec
mov
inc
sbb
rcrb
pop
test
inc
movsl
add
adc
jbe
and
hlt
and
and
les
push
xchg
mov
cmp
daa
xor
or
hlt
push
mov
stos
inc
loopne
dec
test
push
daa
jae
lock
iret
jl
inc
stos
push
imul
add
dec
push
lcall
fldl
call
clc
sub
loopne
jb
fidivl
mov
mov
mov
push
push
iret
mov
les
sbb
ss
inc
or
dec
cmp
loop
ljmp
dec
push
add
pop
les
pop
les
fidivrl
and
push
cmp
sbb
add
adc
add
add
loopne
adc
adc
xor
sub
push
xorb
ljmp
fsts
cmp
or
mov
hlt
cmp
xor
nop
dec
lret
mov
mov
sub
sbb
fwait
push
or
add
fidivl
neg
jno
ret
or
les
cmp
les
mov
xlat
xchg
repz
btc
cmpb
pop
mov
jb
pop
ficoml
cmp
loop
repnz
sbb
in
inc
out
mov
jge
adc
test
loopne
int
ja
test
cmp
loope
sarb
add
inc
lret
inc
add
sbbb
sti
das
pop
negl
cmpsb
out
sub
lds
out
loope
or
cs
dec
ret
adc
inc
gs
or
jb
cli
jae
jmp
and
mov
jge
add
pop
xchg
or
adc
inc
cmp
or
roll
loopne
xor
push
fiaddl
bound
mov
sbb
dec
mov
xor
dec
add
pushf
nop
xor
push
push
push
push
mov
out
mov
imul
aas
dec
pop
xor
fldl
repz
aas
shll
stos
add
stc
jno
loope
leave
adc
add
js
test
mov
or
iret
test
imul
mov
mov
fimull
sar
adc
sbb
aas
cmp
or
adc
xchg
mov
cld
sub
xacquire
sbb
xchg
and
out
ss
adc
pusha
mov
add
ja
or
cmc
aad
sub
inc
rcr
enter
push
mov
scas
jae
rorb
jp
fimuls
mov
xchg
mov
iret
loope
aas
filds
push
sbb
aas
lods
inc
sbb
and
aam
lds
movsb
pop
push
cmpsb
decl
fstps
pop
cwtl
or
jge
test
inc
popa
pop
aaa
ficoms
mov
inc
xchg
out
sbb
mov
or
cmp
ds
mov
mov
pop
pushf
push
test
jp
sbb
loopne
jb
aaa
popf
xchg
add
int3
and
dec
push
fistpll
mov
in
xchg
cld
fisttpll
dec
out
bound
fistps
icebp
cli
xchg
js
jmp
dec
bound
lahf
test
fsubrs
insl
inc
sbb
in
or
mov
data16
sub
inc
pop
cld
test
xchg
int3
les
enter
les
jno
xor
test
mov
mov
inc
push
sbb
gs
push
filds
scas
les
add
pop
js
sbb
stc
lret
pop
lods
push
popf
cmpsl
inc
pop
arpl
or
jg
outsb
pop
push
xor
aas
and
pop
out
es
and
incl
xor
sahf
xchg
mov
mov
inc
adc
lcall
test
mov
xor
insl
inc
adc
mov
mov
cmc
mov
pop
jg
pop
xchg
icebp
in
das
shlb
shll
pop
pop
mov
sbb
sub
dec
call
dec
mov
and
mov
xchg
mov
lock
mov
rcrl
and
pop
or
add
pop
inc
mov
mov
shll
lret
sbb
pop
out
gs
pop
push
cmp
shlb
daa
push
int3
in
repz
popf
add
and
xor
ljmp
scas
bound
fiaddl
or
ljmp
and
mov
stc
add
add
add
scas
or
adc
inc
pop
clc
sbb
shlb
dec
loop
adc
fadd
mov
in
dec
aad
mov
sub
ds
adc
sbb
cmp
mov
adcb
rclb
rep
ja
addr16
mov
out
inc
aas
jmp
adc
call
jg
add
dec
sahf
dec
fbld
inc
push
hlt
mov
push
data16
pusha
mov
or
sar
or
fwait
add
mov
lods
lret
mov
mov
cmp
orb
and
jecxz
push
sbb
add
xlat
mov
aaa
xor
dec
test
jae
and
sahf
push
add
add
add
lods
fldt
iret
sub
cmp
cmpb
or
js
stos
jle
cld
mov
int3
add
and
sbb
or
jo
fisubs
sub
stos
mov
sub
adc
call
sbb
mov
adc
aas
int3
add
dec
push
in
std
data16
adc
jmp
jecxz
lock
filds
pop
loopne
das
or
sarb
push
icebp
inc
mov
push
mov
or
push
movsl
aam
cmp
pop
inc
and
dec
cltd
clc
scas
jmp
jmp
dec
movsl
not
cmc
pop
jl
pop
sub
sti
scas
clc
pushl
adc
xor
cld
and
icebp
fisttps
gs
sbb
xchg
xlat
outsl
in
mov
and
nopl
inc
sbb
push
mov
mov
mul
aam
adc
sub
sti
adc
out
jp
pop
icebp
pop
or
popf
mov
loopne
lods
stc
cmpsb
dec
arpl
mov
and
aas
dec
daa
dec
or
dec
mov
call
push
add
sti
cltd
pusha
and
xchg
lahf
loop
cs
iret
xor
inc
mov
fwait
les
lahf
std
push
push
jns
iret
insb
sub
or
mov
cmpl
push
jg
out
sub
mov
mov
sbb
gs
xchg
scas
pop
outsl
push
pop
add
nop
inc
xor
xchg
cmpl
sarb
xchg
xor
sub
xlat
lods
sbb
fisubrl
lret
call
jns
xchg
xor
adc
push
nop
insb
test
add
jl
jmp
rcrl
mov
jg
nop
xchg
pop
loop
inc
into
adc
add
jg
shrb
fsubp
in
les
adc
mov
mov
aad
cmpsl
add
nop
pop
inc
out
mov
fsubrs
decl
test
js
jne
fdivr
or
adc
xchg
pop
mov
mov
ja
xor
cli
mov
jge
ret
js
push
dec
adc
push
insl
decl
shl
adc
arpl
dec
and
loop
add
mov
adc
mov
xchg
xchg
cmc
fs
sbb
mov
inc
push
movsl
insl
ds
inc
push
int
fs
daa
repnz
testb
inc
inc
pushf
mov
dec
iret
ja
sbb
xor
jne
cmc
sbb
jnp
sub
mov
cs
pushf
and
cmp
fisubrl
xor
or
add
inc
cli
arpl
inc
sbb
push
std
int
imul
mov
inc
repnz
mov
pop
bnd
mov
sub
cmp
lret
pop
add
mov
stc
pop
je
mov
nop
or
xor
sbbl
xchg
add
adc
cmp
adc
addr16
adc
cmp
xor
mov
push
outsb
push
mov
cmp
mov
sbb
cli
jle
inc
jne
outsl
icebp
test
int3
sbbl
subb
mov
add
inc
xor
xchg
lock
std
outsl
and
jmp
jmp
xchg
xchg
jl
mov
std
lret
mov
inc
es
mov
push
inc
lret
aam
or
test
push
add
and
into
xor
scas
xchg
inc
jecxz
dec
test
rol
xchg
filds
in
inc
loope
xchg
sbb
sub
call
shlb
cmp
lods
jnp
mov
aam
mov
insl
inc
nop
nop
sub
pushl
sub
or
jge
xor
sub
pop
adc
cmpps
pop
std
fildll
adc
sub
sub
push
xlat
stc
hlt
cld
and
or
and
cwtl
push
pushf
lods
nop
pushl
jne
push
cmc
fwait
and
push
cmpsl
xchg
sbb
mov
mov
xchg
in
push
and
jecxz
sub
add
pop
mov
rcrb
repnz
sti
shrd
inc
stos
addb
sbb
xorb
and
jl
mov
imull
dec
pop
adcb
mov
and
fs
mov
pop
jg
cmp
cmpsl
pop
and
push
xchg
in
lcall
and
sub
push
stc
jge
sar
jle
dec
sbb
jecxz
mov
repnz
je
ljmp
mov
insb
mov
pop
mov
mov
mov
mov
sahf
fisubrs
add
push
icebp
push
dec
dec
inc
outsb
lahf
ret
fucomip
sbb
push
orb
pusha
inc
lods
or
icebp
outsl
incl
cmp
inc
ficoml
incb
lds
test
jbe
mov
int
iret
sub
push
mov
cmp
pop
js
rol
cmp
push
xor
rcrl
insb
stc
sti
nop
mov
mov
jb
or
xchg
cltd
in
fisubs
pop
ds
mov
xchg
int
jl
repz
add
xchg
out
and
adc
add
hlt
lahf
pop
incl
sub
mov
fists
ljmp
xor
nop
aas
sbb
and
mov
pusha
add
orl
inc
sbb
lods
pop
pop
ja
cmpl
add
in
fwait
bound
ds
cli
insb
inc
scas
loope
pop
xorb
daa
sub
arpl
xor
mov
mov
roll
jbe
sub
dec
mov
inc
mov
cmp
ret
jge
negl
dec
sub
pop
call
inc
jmp
add
dec
xor
xchg
imul
test
incl
sub
rcl
inc
cwtl
mov
and
adc
shlb
or
xchg
adc
add
sbbl
insl
in
gs
cwtl
lods
push
call
push
mov
add
and
mov
dec
test
add
add
test
cmc
mov
mov
pop
roll
popl
pop
push
xchg
mov
clc
incl
lcall
cmc
fildll
ss
push
cvtps2pi
pop
push
adc
int3
sub
ret
test
inc
pop
scas
jmp
mov
nop
lret
or
and
adc
jg
rorb
out
and
xchg
int
pushl
lret
dec
mov
imul
inc
dec
mov
sbb
iret
stos
test
mov
push
sbb
add
sarb
xchg
fcmovnbe
fstpt
outsb
roll
scas
dec
inc
xor
pusha
bound
ljmp
inc
adcb
stos
jmp
in
pop
test
divl
push
jbe
loopne
mov
push
data16
cmp
dec
or
xor
pop
and
pop
je
xor
mov
xchg
in
sub
dec
shl
xchg
sti
and
scas
push
sub
pop
mov
ja
push
adc
mov
dec
push
scas
cli
sub
cmp
out
jle
xchg
jmp
lock
jbe
mov
psubsb
jmp
add
adc
shll
movsl
outsl
fdivr
mov
push
sbb
cmp
mov
xchg
mov
add
mov
jnp
cli
movsl
push
decl
lods
cmpsl
mov
sbb
add
sub
jne
cmp
mov
jle
lea
movsl
jbe
jmp
pop
or
push
sahf
sbb
outsl
mov
mov
dec
inc
mov
cmp
testl
cmp
adc
sbbb
ret
stos
in
outsb
cltd
aam
stc
mov
ret
push
in
pushf
sub
cmc
aaa
push
or
inc
js
mov
push
popa
clc
notb
mov
ljmp
ljmp
inc
scas
cmp
jb
int3
push
mov
cwtl
fstps
lds
test
std
push
insl
pusha
push
and
xor
stc
add
add
inc
clc
xchg
imull
push
sbb
incl
adc
movsl
imul
fwait
xchg
incl
dec
lcall
push
pop
fdivrs
or
imul
pop
stos
cmp
adc
cmp
xchg
out
neg
jmp
clc
dec
or
add
nop
shll
lods
lea
xchg
ja
out
fistps
dec
pop
nop
cld
into
cmp
jecxz
cmp
decl
pop
ret
dec
push
mov
addl
lahf
in
cmp
and
jl
out
decb
mov
sbbb
mov
xlat
adc
fildll
mov
jecxz
add
enter
xlat
cmp
testb
and
push
pop
jle
inc
mov
inc
jmp
push
sub
jae
pop
stos
mov
xor
stos
cs
lahf
push
inc
in
jne,pn
xchg
fsubs
sbb
mov
xor
ds
adcl
sbb
sbb
fldt
jp
and
dec
mov
outsl
mov
out
inc
ret
and
int3
dec
add
and
push
mov
aad
imul
push
dec
shr
mov
mov
clc
xchg
xor
ljmp
sbb
mov
lds
mov
mov
xor
loopne
roll
add
mov
xlat
and
lret
es
or
add
inc
aad
mulb
hlt
mov
loopew
stos
mov
jmp
in
mov
sub
ljmp
or
ret
push
rcll
or
and
call
rclb
sbb
mov
fwait
adc
push
mov
inc
xchg
bound
push
inc
cwtl
mov
pop
and
cmc
dec
popf
sub
addl
inc
xor
lock
stos
bound
mov
out
loop
jnp
push
decb
add
mov
flds
cmp
insl
in
testl
push
mov
clc
sub
push
dec
sarl
mov
sub
hlt
cs
clc
jmp
xchg
clc
mov
or
cli
adc
test
in
mov
and
dec
cmc
insb
mov
rcrb
clc
add
mov
mov
lock
and
xor
inc
xor
sbb
push
fistps
in
cli
pop
xor
shll
push
cli
cmpsb
out
ja
lret
push
repnz
jp
adc
inc
xor
sbb
add
push
ficoms
sub
in
and
cmp
adc
dec
dec
xor
dec
jno
jl
test
xor
or
jns
xchg
add
sub
add
jl
or
pushl
add
and
rolb
lds
mov
or
dec
popa
push
push
xor
sbb
test
and
xor
mov
inc
jae
adc
and
imul
cmp
xchg
adc
sub
xor
mov
cld
arpl
add
hlt
clc
das
cltd
adc
icebp
outsb
or
test
stc
xor
cwtl
lods
loop
xor
arpl
inc
xchg
clc
and
sbb
cmp
lea
sub
clc
out
jl
adc
out
pop
add
ds
add
push
dec
mov
mov
and
es
pop
jbe
js
adc
sub
les
cmc
out
xchg
add
data16
dec
or
xchg
xchg
push
and
xor
mov
inc
cmp
mov
mov
dec
inc
sub
dec
adc
pop
cs
ficoms
push
fisttps
xor
jl
aas
ss
icebp
pop
enter
sub
int3
mov
mov
inc
push
xchg
cld
addr16
jo
push
mov
loope
test
lcall
test
dec
and
cmp
add
add
lret
cmp
hlt
int3
lods
mov
mov
jp
popf
stos
sub
faddl
test
jmp
jmp
fs
leave
lcall
xchg
or
adc
sub
lods
mov
dec
push
pop
and
dec
pop
and
pop
mov
and
negl
in
push
mov
mov
mov
pop
dec
roll
fcmovnu
inc
aam
and
adc
and
add
push
add
xor
inc
cmp
enter
xchg
jmp
sbb
rolb
inc
add
leave
popf
mov
add
lcall
cltd
addr16
jle
call
dec
mov
push
lahf
dec
xchg
fucomip
jg
jmp
shll
inc
jmp
inc
mov
sub
xchg
addl
jg
dec
or
and
sbbb
sub
inc
pfmax
inc
add
mov
jecxz
jb
pop
adc
xor
cmp
push
sub
fistpll
fsubs
inc
dec
in
xchg
das
jne
pop
hlt
dec
and
addr16
mov
aam
in
inc
loop
add
lea
out
xchg
scas
pop
std
add
xchg
xor
inc
lock
aas
dec
xor
xor
inc
push
cmp
jmp
mov
mov
out
push
xor
sbb
hlt
loop
sbb
in
mov
test
mov
xor
test
mov
inc
lods
adc
xor
aaa
test
mov
inc
sbb
mov
push
xchg
nop
inc
mov
adc
clc
jg
add
cli
dec
into
out
xchg
cmp
call
mov
addr16
rclb
mov
push
shr
daa
and
ljmp
add
mov
mov
std
outsl
pop
ljmp
ffree
push
movsb
test
lahf
inc
mov
ds
sahf
les
mov
cli
int3
inc
stc
jge
fdivr
sbb
jg
dec
and
inc
rclb
imul
out
add
mov
jl
rol
mov
adc
test
stos
jge
lods
or
or
inc
dec
data16
xchg
adc
into
cmpsb
or
icebp
sub
cli
jg
insb
dec
xchg
iret
sbb
push
mov
push
incl
rcrb
test
fsubs
and
cltd
dec
adc
add
roll
add
push
mov
dec
dec
stos
cmp
shrb
lret
out
push
aam
loop
dec
sub
cs
or
mov
add
jbe
add
leave
dec
int3
xor
sub
add
cs
je
mov
cmc
test
push
pop
not
loop
adc
dec
int3
and
cmp
ficompl
add
jbe
sub
xchg
es
inc
mov
mov
jmp
pop
cmp
movsb
mov
mov
repz
stos
adc
cmp
pop
movsl
jg
lds
cmovp
insl
push
lds
ljmp
cli
sbb
mov
inc
and
sarb
xchg
inc
outsb
ja
add
out
inc
pop
hlt
and
pop
push
loopne
mov
inc
imul
add
pushf
fldl
dec
dec
repnz
mov
fcmovnb
neg
fstps
fiaddl
mov
mov
xchg
sbb
stos
xchg
mov
hlt
insb
adc
mov
int3
pop
mov
push
adc
mov
mov
add
sbb
and
mov
or
mov
add
mov
mov
push
add
xchg
test
mov
add
inc
lcallw
and
xchg
sub
push
shrb
es
mov
jae
mov
les
stc
jbe
fldt
popa
adc
sub
inc
xor
adc
in
scas
call
popa
into
out
xchg
or
jne
out
dec
lods
cmp
loop
out
and
dec
iret
push
sub
cld
int3
add
in
sbb
mov
cli
aas
outsl
andl
adc
push
test
hlt
mov
push
nop
fistl
adc
push
sbb
jns
dec
pushf
les
mov
adc
loopne
push
movsl
and
adc
pushf
test
mov
mov
pusha
movsl
outsl
imul
sbb
sbb
arpl
shlb
pop
push
or
insb
jb
xchg
sub
loope
es
mov
cmp
pushw
es
out
jne
dec
daa
mov
cmp
loop
mov
test
arpl
lret
test
push
xor
add
fisttps
pop
mov
push
ljmp
in
sbb
shlb
pushf
cmp
dec
dec
ret
cld
sbb
mov
inc
lea
rorl
jl
add
aam
adc
mov
cmp
daa
mov
xchg
xlat
jecxz
jle
aad
adc
pop
aam
pop
xor
cld
ret
and
adc
adc
jge
push
xor
outsb
shrb
push
push
mov
jg
jns
jl
lcall
aam
xor
or
rolb
jecxz
push
push
roll
xor
cwtl
or
and
mov
andnps
sbb
loopne
pop
inc
xor
ss
addr16
jo
sbb
incl
cmp
inc
inc
mov
and
or
fwait
push
movsb
or
push
push
iret
or
lret
adc
dec
pushf
cmp
sbb
sti
jg
outsb
xchg
aam
and
ljmp
jl
add
mov
and
insb
stc
jg
add
ret
mov
nop
shrl
roll
jg
das
mov
push
repnz
cld
popw
stos
push
dec
push
das
inc
dec
hlt
and
enter
ljmp
outsl
sub
out
pop
dec
pop
xchg
lods
mov
out
xchg
mov
ret
test
ljmp
iret
push
stc
mov
xor
movl
shll
xchg
fistps
xor
rcrb
popa
sub
fisubrl
and
shrl
fdivs
push
test
jo
repnz
jmp
inc
jl
adc
inc
notb
add
lock
js
mov
xchg
mov
xor
aas
inc
add
xchg
dec
jmp
xor
sti
pop
adc
mov
je
sub
addr16
dec
jns
insl
or
jo
sbb
stos
lcall
adc
dec
cmp
mov
out
imul
hlt
loope
das
loopne
mov
test
xchg
cmpsb
nop
lods
fidivs
addb
out
push
mov
sbb
movsb
sub
cld
fiadds
sub
outsl
mov
inc
ret
jg
popf
imul
add
outsl
outsl
popl
incb
xor
xor
test
xchg
ja
out
notl
nop
int3
into
cmp
cld
push
push
sahf
stos
sahf
fstpt
or
inc
and
mov
cmp
add
add
stc
add
das
push
xchg
sub
add
pop
pop
dec
cmpsb
dec
add
pop
jno
mov
adc
inc
lahf
push
push
inc
jbe
movsl
dec
push
std
fdivs
mov
sub
and
jl
push
adc
outsl
aaa
es
repnz
mov
jg
cwtl
sbb
fisubrl
push
mov
fbstp
xchg
xor
mov
cld
int3
push
sarb
fbld
cmpsb
add
movsl
aaa
fcoms
xor
incl
mov
xchg
daa
orb
outsl
xor
dec
test
popf
in
lods
or
mov
mov
xor
arpl
inc
les
cmp
insb
add
push
dec
cltd
ljmp
inc
fldcw
mov
jbe
aaa
pop
push
js
dec
pop
pop
or
mov
aam
repnz
mov
or
sub
jp
xchg
cmp
jmp
xor
aad
loopne
add
xchg
xchg
cltd
pop
cmpsl
fwait
stos
add
inc
ljmp
push
inc
jmp
xchg
xchg
mov
sub
mov
insb
sub
pop
xor
test
jmp
and
loop
ljmp
in
dec
add
and
lds
arpl
ljmp
dec
lahf
popf
pusha
dec
jo
inc
inc
lea
cmpsl
jne
sar
fistpll
int
fs
pop
push
adc
loope
rclb
dec
jbe
and
mov
push
mov
fs
aam
mov
or
push
test
sub
push
inc
push
lea
push
dec
or
push
cmc
aaa
xchg
add
repz
mov
xor
in
enter
dec
add
pop
xor
stos
jbe
mov
xchg
fwait
adc
iret
sub
loop,pn
xor
aam
mov
rep
iret
or
stc
pop
dec
pop
mov
jb
lods
and
adc
and
enter
subl
xchg
ss
lcall
push
mov
inc
or
mov
loope
jg
add
imull
repnz
ljmp
mov
int3
add
push
push
inc
sbb
sub
sub
sub
scas
push
add
xor
mov
pop
orps
loop
out
or
and
insl
push
adc
aas
sbb
insl
std
mov
add
dec
imul
xchg
inc
or
hlt
mov
sbb
jl
popa
dec
add
nop
xor
mov
imul
mov
mov
and
jmp
adc
fwait
xlat
dec
jl
and
xchg
inc
xor
clc
pop
jp
inc
push
sbb
rorb
adc
rcll
or
inc
mov
inc
lret
xor
ret
rcll
pop
push
movsl
pop
or
mov
cmp
dec
add
xor
cld
lret
xchg
cmp
dec
cmp
or
pushf
add
fistl
outsl
lds
push
mov
dec
int3
mov
sub
or
std
in
push
pop
jmp
jecxz
or
addb
sub
pop
nop
lods
and
jae
mov
rcrb
add
inc
fcomps
adcl
add
xchg
lcall
cmp
adc
xchg
cld
add
sbb
jecxz
fdivrs
push
icebp
cmp
cmp
adcb
jnp
dec
lahf
xor
pop
scas
fwait
dec
cmpsb
mov
loop
div
add
dec
mov
xor
jne
sub
adc
sbb
pop
pop
sbb
sub
rorb
inc
sub
fiadds
insb
mov
inc
mov
add
and
mov
rcl
stos
addb
inc
push
adc
sub
jmp
lods
repnz
or
cwtl
push
mov
cmp
daa
mov
xchg
adc
fisubl
push
pop
fadds
push
jno
inc
cmp
push
add
jne
pavgb
dec
mov
lods
push
sub
std
dec
push
sub
push
xor
les
clc
int3
cmp
ficoms
lret
dec
into
cld
bnd
sbb
jmp
in
repnz
jnp
lods
ss
sbb
add
sbbb
iret
add
sarl
inc
lret
cmp
subb
frstor
lcall
popf
and
inc
add
xchg
mov
and
scas
stc
in
xor
dec
push
lahf
inc
and
addr16
add
popf
mov
into
inc
int
sbb
aad
pop
lds
dec
pop
jle
add
push
xchg
rolb
pushf
test
movsb
xchg
sbb
cmp
lds
mov
shrb
je
push
sub
mov
pop
lahf
in
jns
aam
push
push
add
leave
mov
jne
mov
mov
ljmp
mov
mov
dec
inc
fwait
hlt
xchg
sub
xor
sahf
push
mov
dec
je
fdivs
add
sub
xor
sbb
test
pop
adc
cld
and
shrl
jo
or
xor
xchg
jnp
iret
or
xor
sub
mov
inc
xor
sub
das
push
jns
stos
mov
ss
push
mov
int3
movsl
cmp
lahf
cmp
lahf
aaa
fisubrs
fnstsw
inc
or
and
or
fwait
loopne
dec
and
loop
out
sti
or
add
loop
or
clc
sub
mov
es
imul
inc
pop
jbe
daa
add
imul
xor
iret
movsl
push
and
flds
sbb
mov
sar
jne
sub
adc
push
cs
and
movl
or
cmc
push
sbb
int
adc
sbb
mov
mov
or
in
jge
xor
and
adc
sbb
outsl
or
push
and
dec
imul
add
adc
les
dec
test
sub
jne
add
adc
cmp
and
sar
lea
push
lret
sbb
lea
stos
fs
mov
dec
cmc
or
add
ljmp
clc
cmp
int
add
add
sub
out
sbb
and
pop
add
out
fidivl
sbb
mov
lret
inc
adc
outsl
push
push
inc
rorb
out
mov
cwtl
or
xor
dec
loop
or
add
loope
addr16
dec
add
xchg
jl
cmp
xchg
imul
test
and
les
sahf
mov
ret
jl
jmp
dec
mov
pop
sbb
sub
call
scas
aad
outsl
sub
xchg
js
sbbb
ss
jnp
pop
lds
sbb
fadds
aad
sar
nop
adc
iret
hlt
ds
gs
mov
cwtl
lock
add
pushf
mov
test
lahf
dec
and
mov
adc
test
iret
cmp
insb
fildl
cmp
out
loopne
pop
push
cs
add
outsl
or
inc
insl
pop
aaa
xor
mov
or
mov
das
test
jo
clc
outsb
or
cmp
imul
into
sbbb
cmp
je
inc
push
lods
jno
xchg
xlat
add
clc
sbb
ret
lock
test
add
push
pop
adc
pop
jbe
or
xchg
loop
cmpsl
adc
dec
sub
xor
sahf
orl
addl
es
xor
push
push
mov
ror
pop
stos
inc
test
lds
arpl
sarl
shrl
mov
pop
lods
lret
sbb
mov
pusha
dec
lahf
shll
incl
pop
insb
adc
pushaw
pop
cmp
push
mov
lods
mov
rol
stos
mov
lahf
shrb
mov
test
pop
data16
hlt
jo
push
adc
inc
pop
mov
incl
sar
xor
mov
push
cld
daa
and
pop
sarb
clc
add
dec
sti
fld
inc
dec
dec
aad
movl
dec
push
out
aas
push
mov
add
stc
pop
xor
push
pop
push
push
and
loopne
xchg
xor
leave
add
lea
std
jg
insb
mov
cwtl
cmp
fildl
inc
adc
mov
pop
icebp
mov
fidivs
pop
inc
clc
lahf
or
or
mov
std
outsl
adc
sbb
jne
and
call
or
mov
mov
orl
negb
pop
and
and
add
outsb
and
cmpsb
pop
mov
enter
test
in
imul
push
incl
xor
lock
add
arpl
dec
inc
fwait
xchg
cmp
cld
imul
orb
mov
xchg
xchg
outsl
decl
pusha
jmp
insl
lods
push
and
clc
pop
shlb
jno
and
lock
mov
sub
mov
push
sbb
into
insl
mov
icebp
mov
xchg
sub
popf
movsb
iret
es
ss
push
mov
mov
add
mov
sti
pop
in
movsb
add
es
aam
dec
in
or
mov
mov
addr16
inc
add
shll
push
or
mov
pop
hlt
or
xchg
mov
pop
jge
lods
add
xchg
and
or
lcall
repz
push
andl
adc
push
adc
mov
xchg
jb
enter
adc
xorb
fnstsw
call
movsl
jmp
es
inc
push
sbb
fdiv
fxch
jns
xor
outsl
call
push
test
or
rclb
stc
inc
in
stos
inc
xchg
call
test
int3
push
pop
orb
mov
outsl
insb
jns
xchg
xor
roll
test
in
imul
ss
cmp
pop
stos
cmpsl
add
test
lea
sub
xor
adc
ret
gs
xchg
test
mov
mov
and
ss
jmp
das
aas
add
daa
movsb
dec
push
xchg
push
out
add
jne
adc
aaa
inc
adc
mov
pop
sub
aaa
xchg
cmp
mov
or
xchg
arpl
cmp
out
arpl
not
repz
test
dec
xchg
add
add
sahf
jecxz
and
popf
and
rcll
cmp
ljmp
clc
cli
imul
xchg
loopne
movd
pop
inc
sub
cli
or
and
adc
das
pop
mov
aas
push
push
rcrl
arpl
std
popf
dec
inc
mov
dec
pushf
push
mul
call
cli
sbb
insl
push
cmp
in
mov
icebp
xchg
sbb
adc
loop
jg
out
nop
push
pop
cmp
das
jne
xchg
enter
push
ja
add
data16
in
jg
clc
xchg
xor
icebp
adc
adc
sbb
inc
mov
ljmp
mov
xchg
or
add
mov
outsl
cld
aas
adcl
icebp
mov
ljmp
subb
in
out
mov
mov
xchg
das
aad
out
jg
scas
rorb
dec
xor
dec
inc
inc
loop
dec
xor
mov
pop
fsts
or
std
dec
cmp
incb
push
xchg
dec
and
add
lods
or
mov
jmp
loopne
incl
and
roll
cwtl
mov
jns
cmpsl
pop
icebp
idiv
imulb
push
imul
mov
jecxz
fsub
cwtl
lcall
mov
inc
xor
fdivp
jg
mov
bnd
inc
pop
es
add
xor
clc
pop
sub
sbb
call
cmpsl
lea
cmp
jmp
xor
in
mov
test
pop
inc
mov
mov
adcl
in
inc
pop
es
repnz
mov
out
ret
and
and
pop
xchg
add
call
in
cli
and
add
js
decl
pop
cli
inc
pop
mov
in
outsb
and
adc
inc
pop
mov
outsb
adc
xchg
push
sbb
cmp
pop
cltd
pop
movsl
movsl
in
inc
paddsb
fcmovne
std
jg
fdivr
add
inc
icebp
or
add
sub
mov
pop
out
adc
push
pop
mov
and
testb
jg
push
or
or
pushl
imul
mov
or
add
fisubrl
inc
and
xor
shlb
sahf
sub
cmc
aas
jle
stos
jg
pushl
fimull
sub
jge
add
test
in
xor
fbld
icebp
aas
mov
call
aas
push
push
mov
lcall
xchg
test
push
rclb
push
sub
inc
pop
rcrl
dec
jmp
fs
std
pop
lcall
mov
mov
stos
adc
dec
cmp
and
cmp
sbb
cmp
inc
xchg
add
stos
sbb
ds
inc
inc
out
clc
out
lods
inc
mov
or
dec
and
xor
sub
sbb
sub
stos
mov
add
mov
xchg
jp
fcom
mov
jo
sbb
int
jecxz
inc
sti
jbe
mov
xor
out
insl
cltd
fdivl
push
pushf
push
adc
sbb
outsl
adc
into
xor
js
add
pop
xor
or
sbb
cmp
inc
add
jb
sti
popf
jecxz
clc
push
pop
test
icebp
sbbb
pop
cld
sbb
jmp
sbb
dec
xchg
repz
mov
fcomp
push
dec
addl
push
out
or
add
sub
pop
aaa
addb
rcrl
xchg
jmp
mov
mov
pop
xor
addr16
incl
rcrl
fistpl
sbb
add
aaa
inc
mov
popa
mov
stc
pusha
jge
jnp
fdivrs
incl
or
sub
out
lock
push
pop
pop
sub
lds
mov
xor
mov
pop
mov
mov
pop
add
mov
test
pop
mov
mov
xchg
pop
js
std
mov
xor
in
mov
mov
mov
or
add
es
dec
lret
cs
mov
cmc
adc
lcall
push
hlt
xchg
decl
mov
pop
mov
mov
insl
out
mov
sub
inc
test
call
sub
clc
fistl
jne
addr16
add
popa
and
decl
xchg
jb
fcmovne
leavew
push
pusha
fcoml
test
hlt
push
push
incl
sbb
xchg
xchg
sti
subb
and
inc
fcompl
sub
adc
test
test
bound
dec
sub
xor
mov
mov
inc
aaa
aad
dec
add
and
cs
or
icebp
or
add
bound
pop
mov
test
bound
in
sbb
sub
testb
pop
or
sbb
rolb
dec
mov
lods
push
jge
cli
dec
imul
xchg
into
aaa
push
out
or
ud0
ljmp
sub
sbb
sar
insl
sbb
jl
sub
sub
fnstenv
sub
lret
jb
enter
or
xchg
push
imul
pcmpeqb
jge
mov
insb
std
xchg
fiaddl
or
sbb
iret
sbbl
inc
jne
pop
pusha
call
add
push
add
les
imull
rorl
cmp
mov
icebp
pop
daa
adc
mov
xchg
jmp
jg
push
sbb
rcrb
decl
mov
jae
mov
pop
aas
incl
dec
add
and
dec
jle
jp
loopne
popa
adc
fmull
jae
xor
cmp
test
ficoms
lea
test
cmp
shll
jb
lock
sarb
fwait
and
sbb
push
mov
sbb
cmp
sbb
xchg
inc
mov
movsb
mov
and
push
or
mov
sub
pushf
adc
mov
pusha
fbstp
sub
pop
clc
andb
std
pushl
out
mov
shll
loopne
cwtl
popa
lock
fisttps
leave
decb
mov
mov
mov
and
cmpsl
sub
in
xor
adc
xor
inc
mov
out
clc
shl
fsubl
push
nopl
repnz
lret
rorb
xchg
xchg
add
test
sub
xor
dec
fwait
or
mov
gs
rol
loopne
fstpl
ss
xor
fildll
mov
loop
adc
mov
inc
out
in
in
mov
fdivrp
push
lcall
arpl
xchg
ret
pusha
jmp
rorl
es
push
adc
push
loop
and
or
pop
lods
pop
andb
mov
lahf
shlb
fnstsw
pushl
pop
jp
pop
ja
mov
fcmove
hlt
sbb
push
and
jbe
xchg
mov
roll
pop
sbb
push
sbb
insb
add
xlat
in
inc
pop
out
rcrl
mov
lock
into
std
pop
mov
clc
or
decl
dec
js
push
add
pop
or
decl
add
and
sub
cmc
add
lock
pushf
adc
sbb
cmp
mov
es
test
inc
or
lret
add
sbb
inc
je
adc
pop
in
stos
xor
xchg
inc
xor
rorl
sub
outsl
xchg
or
jmp
sbb
xor
addb
decl
mov
cvttps2pi
sub
dec
out
jg
dec
jae
cmp
sub
insl
test
xchg
in
into
out
sbbb
enter
data16
add
insl
bound
pusha
add
out
sub
dec
orl
loopne
add
rcrb
jecxz
push
rcll
pop
das
filds
and
dec
push
or
mov
push
jo
orps
xchg
dec
jg
push
les
mov
shll
dec
aad
into
rol
scas
je
pop
out
mull
pop
clc
jg
xchg
shlb
imul
cmc
clc
scas
dec
pushf
add
or
aas
decl
adc
push
sub
das
sbb
and
fdivl
js
dec
pusha
and
dec
cld
call
je
rolb
cmc
and
and
sarb
data16
cli
mov
loop
mov
sbb
and
push
inc
jg
fsubrs
pop
and
jg
or
xor
cwtl
xchg
mov
lcall
icebp
sahf
xor
test
jmp
std
call
adc
pushf
les
mov
mov
mov
clc
dec
cmp
test
in
insb
lock
testb
mov
fdivr
pop
xchg
ficomps
xor
or
pop
xor
shlb
mov
ret
bound
movsb
inc
cmp
xchg
lcall
lods
and
pop
cld
jg
stos
icebp
jle
push
xlat
movsb
and
sbb
sub
mov
mov
sahf
insl
std
ret
mov
lcall
je
mov
sub
aaa
data16
test
pusha
lds
or
inc
cld
adc
andl
popa
and
inc
stos
roll
xor
dec
xchg
sub
inc
or
pusha
push
pop
out
call
arpl
inc
add
dec
cli
cli
es
jmp
push
shlb
in
cwtl
orb
gs
xor
fdivrl
mov
mov
jne
mov
repz
sub
outsl
aam
fdivrs
jbe
lcall
mov
add
or
les
cmp
mov
pusha
and
ljmp
insb
mov
addl
sbb
adc
ds
pop
hlt
inc
dec
fists
or
mov
mov
int
sbbb
and
xor
std
fistpll
mov
loopne
notl
rcl
out
ljmp
aas
jb
pop
js
bound
mov
add
fs
outsb
adc
hlt
xchg
mov
je
mov
sti
mov
mov
testb
xchg
incb
movsb
and
sbb
push
and
xchg
pusha
aas
push
mov
mov
mov
add
push
push
pop
adc
xchg
jbe
ljmp
cld
push
repnz
into
repz
incb
fistpll
jns
divb
jo
push
test
clc
push
lret
add
jmp
push
and
lcall
sbb
xchg
xchg
out
sub
sbb
dec
cld
xor
sub
jmp
xchg
jg
pushf
add
orb
cmp
cmp
rolb
mov
jg
mov
repnz
in
stos
insl
out
das
in
jg
mov
adcb
les
cmc
dec
outsl
fdivr
int
lcall
inc
outsl
cmp
or
push
sub
iret
dec
dec
dec
dec
sbb
xor
adc
xor
mov
jecxz
in
xor
jmp
jg
pop
ret
mov
inc
es
dec
std
imul
add
cmc
ret
jmp
das
lock
push
ds
icebp
pop
test
out
inc
adc
fdivrp
shl
mov
ficoms
sub
mov
jl
call
and
sbb
shrl
idiv
sbb
and
mov
cs
sbb
ss
jb
push
outsl
cld
jg
or
add
xor
and
pop
pop
clc
push
and
inc
movsb
mov
cmp
jg
fstpt
or
aad
mov
xor
loop
inc
mov
fistpll
dec
push
lock
mov
push
xor
add
mov
out
hlt
repz
adc
into
sbb
andl
stos
rorl
mov
rorb
push
aad
std
iret
cmp
orb
jnp
sti
incl
or
adc
lahf
mov
cmp
test
lea
jg
xchg
popf
jl
push
repnz
scas
rol
std
out
loopne
rolb
out
lds
pop
test
mov
es
push
mov
push
adc
mov
aaa
hlt
div
xorb
stos
das
sti
and
mov
jecxz
sub
pop
pushf
adc
push
cwtl
clc
cmpsl
icebp
das
cld
sbb
stos
mov
inc
inc
sub
je
sub
or
mov
add
sahf
pushl
and
adc
dec
xor
popf
lods
dec
fwait
jmp
adc
adc
iret
loop
mov
inc
leave
adc
cwtl
out
or
int3
aad
push
sub
mov
fistl
jnp
pop
push
mov
cs
cmp
subps
jns
out
lods
or
mov
int3
test
sbb
sti
xchg
xchg
out
stos
pusha
sbb
aas
stc
push
ffreep
jb
sub
dec
imul
hlt
add
lea
neg
test
jmp
mov
mov
pusha
fwait
push
jle
xor
fwait
or
push
add
sahf
mov
mov
std
mov
add
push
and
test
xchg
iret
mov
je
lcall
mov
aaa
inc
stos
popf
int
mov
lahf
dec
lods
inc
mov
addr16
movb
daa
in
leave
popa
lea
adc
cmp
mov
jae
loopne
testl
pop
sub
lahf
out
add
cs
jg
ret
inc
call
xchg
mov
sbb
or
pushf
jge
roll
dec
ja
mov
sarl
jo
je
outsl
mov
push
popf
jns
pop
inc
sti
cli
mov
in
in
pop
scas
xchg
fildl
push
or
clc
xlat
add
bndstx
or
dec
fldt
pop
jmp
or
bound
out
ss
mov
push
mov
sarb
fstpt
cmp
pop
sbb
movsl
sbb
scas
xor
clc
xchg
push
mov
jbe
inc
jmp
rorl
mulb
xchg
cmp
xor
lds
aad
fadds
jmp
push
mov
dec
outsb
jne
pop
xchg
jecxz
pop
sar
dec
incl
orb
pushf
enter
mov
or
lock
mov
dec
jl
mov
inc
je
sub
add
test
fwait
icebp
sahf
jmp
fs
mov
mov
xor
imul
adc
lods
cmp
xchg
rorl
repz
sbb
stc
leave
push
das
std
movl
popa
cmp
and
imul
lods
mov
andl
mov
gs
adc
dec
test
sub
aad
lahf
scas
std
aad
and
decl
or
addl
lds
add
jmp
rolb
mov
adc
je
andb
shll
mov
xor
sbb
popa
test
test
jg
clc
test
test
push
mov
incb
imul
cs
movsl
outsl
lds
js
imul
jg
std
pop
loope
or
inc
les
push
adc
dec
adc
add
insb
sub
out
enter
mov
leave
fadd
jg
lock
cwtl
inc
decb
mov
mov
sub
dec
lds
mov
cwtl
push
hlt
decb
nop
andb
xor
cmp
addl
cld
loopne
loop
pop
les
mov
xchg
ret
add
lret
icebp
movsl
lods
dec
les
icebp
movb
rorl
das
mov
and
push
cmp
pop
push
and
test
jo
adc
mov
adc
andb
daa
push
push
cmp
ret
or
fdivl
loope
mov
rolb
or
cld
mov
fwait
mov
push
shll
mov
divb
adc
and
lret
push
add
sbb
jl
outsb
add
inc
cmp
aam
fldcw
pusha
sub
cwtl
inc
ljmp
sti
mov
xlat
insl
jbe
add
xor
adc
sub
lret
cmpsb
stos
xchg
les
pop
dec
in
test
adc
loop
add
mov
push
cld
inc
dec
sub
mov
add
dec
mov
nopl
ljmp
js
jne
xchg
jno
push
mov
adc
add
push
sbb
sbb
dec
cli
dec
push
fcoms
ja
mov
jno
mov
adc
inc
jnp
mov
mov
mov
add
ret
push
verw
int
ljmp
jp
or
sbb
out
shrb
shll
shlb
iret
scas
jge
xor
or
cmp
lods
in
inc
faddl
aaa
jge
std
or
push
cld
push
cld
jno
dec
mov
out
adc
pop
data16
loop
stos
lds
stos
xlat
movl
add
or
dec
in
out
xor
or
push
jnp
test
in
fwait
mov
and
daa
ljmp
ret
roll
sub
mov
iret
out
or
inc
sbb
mov
dec
push
sbb
out
in
jo
imul
sub
or
inc
and
cmpsb
orl
popf
and
fsts
push
xchg
jne
ja
mov
jge
sbb
ret
je
arpl
mov
dec
clc
pop
std
xlat
or
mov
shrb
enter
mov
sub
jnp
enter
jmp
pop
lds
mov
sub
dec
pop
rcrl
sbb
add
add
jne
pop
loope
insl
lcall
pop
pusha
imul
out
inc
pop
cld
jg
add
jle
ret
loopne
xchg
xchg
rcrb
fs
call
jmp
add
jo
into
sarl
test
lock
jg
mov
std
and
lahf
push
ret
inc
lods
xor
mov
cmp
pop
stos
sbb
xor
jl
icebp
incl
shll
xchg
xchg
sbb
and
mov
ljmp
pop
pop
icebp
inc
incl
mov
orb
adc
call
ret
jg
repnz
not
inc
and
push
sub
nop
test
das
push
push
ret
iret
adc
mov
mov
loopne
adc
clc
popf
bound
hlt
mov
pop
lock
call
fstpl
stc
icebp
fdiv
lahf
insb
test
mov
add
pushl
mov
test
sbb
ljmpw
mov
call
adc
xchg
punpcklwd
lea
rolb
ret
jmp
cmp
pop
lock
icebp
lock
pusha
jmp
mov
cs
aas
clc
or
mov
ret
xlat
pop
xor
sub
mov
or
cmp
mov
push
push
pusha
and
or
loop
sub
jno
mov
hlt
fs
inc
cs
cmpsb
push
adc
cltd
test
ds
incb
call
or
int
add
popf
mov
add
lea
clc
aad
jecxz
push
pop
mov
sar
sub
cmp
dec
jb
aam
sbb
outsl
add
push
mov
iret
xlat
out
xorb
adc
subb
outsb
cmp
pop
jno
test
fnstsw
je
test
ja
mov
jmp
add
add
mov
cli
adc
sbb
icebp
icebp
sbb
das
mov
mov
divl
cwtl
sbbb
inc
mov
push
inc
and
mov
test
and
aam
fdivrs
fadds
mov
mov
imul
mov
call
push
inc
cld
sbb
clc
jmp
or
and
test
or
push
xor
xor
jae
sbb
and
shrl
data16
xor
sbb
js
xchg
call
push
adc
adc
inc
std
ljmp
pop
push
sub
and
adc
jb
jae
fdivl
lea
aam
leave
pop
xchg
dec
shrl
xor
insb
xor
lock
pop
mov
inc
inc
stos
pop
rorb
sub
gs
mov
ret
outsb
mov
cmpsl
lods
sar
arpl
out
push
adc
add
xchg
loop
mov
pop
test
icebp
popf
mull
stc
int
popa
adc
sub
push
lcall
cwtl
cmpsb
add
fucomip
mov
and
leave
dec
mov
mov
lret
push
inc
xor
dec
adc
lahf
call
and
in
push
mov
jecxz
push
test
push
test
push
mov
ret
int
add
scas
or
popa
cmp
or
mov
inc
les
aam
xor
pop
push
out
mov
push
pushl
pop
cs
dec
inc
and
mov
cmp
sahf
and
pop
icebp
jg
mov
xchg
and
arpl
pop
pop
rcr
sahf
and
test
movsl
jg
cmp
mov
cmp
loop
imul
mov
push
bound
add
inc
xchg
je
dec
adc
loop
sbb
loopne
lcall
test
out
and
imul
pusha
and
ret
inc
add
loopne
sarl
jae
xor
dec
pop
xor
jns
pop
bound
insb
add
add
push
int3
mov
aaa
movsb
push
loopne
je
fdiv
or
iret
subb
arpl
inc
mov
ljmp
xor
and
sub
mulb
pop
in
mov
call
rclb
ret
pop
fucomip
arpl
lock
dec
aaa
inc
ret
cmp
cmp
jecxz
nop
ret
mov
decl
loopne
into
add
mov
dec
sbb
rcl
mov
leave
in
and
sub
dec
subb
sub
push
pop
ret
xchg
jnp
inc
clc
popf
lock
imul
add
icebp
sbb
add
push
add
hlt
fsubs
xchg
jo
cmc
lahf
xor
sub
cmp
and
cmp
jg
pushl
iret
ss
xchg
and
or
pop
pushf
jmp
jle
mov
frstor
ljmp
int
iret
mov
out
jp
and
loopne
jg
call
mov
jne
pop
mov
data16
rcrb
or
xchg
or
xchg
jae
incl
xadd
sbb
or
cmp
push
jle
aam
insb
and
push
hlt
sahf
outsb
idiv
xor
pcmpeqd
or
push
xor
jmp
lahf
test
xor
insb
arpl
lds
or
pop
clc
push
dec
data16
imul
inc
ljmp
rorb
adc
outsl
push
cli
inc
daa
lock
jno
xchg
test
jmp
xchg
xchg
mov
sub
aaa
inc
mov
ds
and
fiadds
lret
or
and
jl
stos
dec
sarl
std
xchg
loopne
dec
push
rorb
jns
mov
incl
add
jmp
mov
call
mov
cli
test
inc
in
cmp
out
or
orl
cs
scas
jno
out
sub
jg
xchg
pushf
fiadds
test
xchg
dec
nop
stos
cwtl
sti
outsb
dec
or
icebp
dec
call
add
scas
push
lock
pushl
in
jns
stos
jns
nop
cmp
mov
aam
pop
jg
mov
mov
stc
stos
adc
add
addb
inc
dec
add
dec
test
push
mov
fsub
mov
push
inc
int
loop
pop
pop
push
push
dec
pop
pusha
addr16
mov
jne
or
push
imul
hlt
pop
pop
or
sub
adc
dec
outsb
mov
inc
pop
outsl
cld
lahf
lock
jge
enter
fistpl
mov
inc
call
mov
shl
push
xchg
movsb
cmp
shlb
add
lret
cwtl
xchg
pop
dec
int
daa
push
sbb
in
ljmp
push
nop
xor
sbb
jno
lods
jp
xchg
jo
rep
dec
ret
xchg
adc
ljmp
sarl
test
push
dec
fwait
mov
pop
out
and
add
inc
add
cwtl
aam
sar
ljmp
and
push
mov
pop
ds
or
xor
pop
inc
mov
shrl
imul
aad
xlat
pushl
idivb
mov
fwait
inc
xchg
mov
idiv
mov
push
in
cli
xchg
mov
inc
in
std
xchg
dec
or
pop
loope
jmp
int
or
pop
fisubl
inc
xor
shl
mov
mov
add
scas
sbb
sub
mov
push
lock
insb
dec
clc
insl
push
jmp
inc
pop
aas
test
les
fmuls
adc
sbb
movsb
mov
repz
jmp
addr16
inc
je
push
mov
add
and
test
sahf
in
pop
aaa
xchg
add
push
mov
notl
pop
mov
jns
and
sbb
std
jg
jg
adc
inc
hlt
mov
inc
cld
add
sub
add
xchg
cmpb
rcll
dec
adc
inc
insl
rorl
add
cmp
cmp
movsl
mov
sbb
dec
inc
mov
sub
mov
or
push
jge
and
ja
fsubrs
in
mov
push
and
pop
inc
pushl
push
subb
xchg
xor
or
flds
sbb
sbb
and
lcall
mov
js
sbb
xchg
jl
inc
jg
jle
add
cmc
jno
jnp
movsl
sub
sbb
outsl
sub
xlat
fwait
sahf
popa
xchg
push
sbb
std
lcall
mov
and
into
pusha
decb
inc
jbe
and
out
mov
cmp
or
and
decl
ret
push
int3
stos
add
xchg
in
inc
and
cld
sbb
enter
pop
leave
xor
pop
clc
mov
sti
cmc
pop
fdivs
dec
push
mov
xorl
loopne
icebp
jle
cmp
xor
jmp
hlt
cwtl
lea
mov
cmp
std
dec
mov
adc
mov
rclb
rolb
mov
mov
mov
sbbl
testb
lea
jno
jns
cmp
test
jo
xor
xor
xchg
adc
enter
aaa
insb
add
xchg
mov
push
cmp
dec
outsl
push
cwtl
dec
push
shll
popf
call
pop
add
jmp
dec
les
stc
out
inc
or
mov
mov
or
cmc
scas
adc
push
outsl
jo
sbb
fcmovb
inc
push
cli
xor
es
inc
in
fcoml
fbld
xor
mov
call
incl
sbb
shlb
mov
cli
les
adc
in
test
pop
push
jne
imul
and
ja
call
or
cmp
xor
clc
in
jmp
clc
and
mov
stos
add
cltd
loopne
aam
shrb
cld
mov
push
mov
mov
in
xorl
int3
pop
scas
adc
pop
mov
jbe
or
int
aas
sbb
xchg
cmc
cli
add
mov
ljmp
xchg
inc
push
sub
adc
fcom
aaa
clc
incl
outsl
sub
and
dec
push
testb
mov
enter
adc
cld
pop
js
adc
sbb
repnz
sbb
clc
xadd
loope
pop
jb
and
or
mov
jmp
push
dec
adc
pop
repnz
repz
fsubr
pop
mov
repz
pop
lds
inc
push
ljmp
aaa
jmp
popf
rorl
aas
outsb
mov
jl
jl
push
hlt
out
mov
decl
test
popf
push
or
mov
xchg
xor
jge
inc
and
iret
incl
adc
add
sub
or
mov
inc
xchg
popa
call
pop
or
mov
or
mov
cld
dec
push
cld
loopne
sub
orl
add
loop
aaa
mov
sbb
sub
adc
jbe
repz
dec
fmuls
lret
cmp
sub
ret
mov
das
xor
mov
iret
jb
xor
dec
out
sti
mov
cld
mov
repnz
add
mov
cltd
mov
dec
neg
jo
add
inc
je
add
cwtl
repz
out
add
loop
pop
push
add
or
mov
aaa
cmp
stos
or
cmpsl
cmpsl
xor
fidivrs
inc
add
fidivl
add
scas
jge
dec
add
add
sbb
mov
lahf
mov
or
mov
outsb
out
rcrb
mov
test
pop
and
add
jo
pop
push
and
into
repnz
xlat
hlt
cld
lcall
loopne
arpl
rclb
repnz
add
jmp
clc
das
add
ret
or
xor
sbb
clc
xchg
sbb
adc
daa
aas
rcr
loop
leave
jae
int3
subb
sub
les
in
aad
add
pusha
test
fldt
js
sub
mov
rcll
cmpb
lea
xor
add
sahf
test
or
clc
mul
cmp
xor
cs
es
xor
push
mov
lods
jo
cmp
leave
sbb
fcmovb
inc
aam
into
jg
outsl
loope
ds
lods
or
xlat
popf
sub
fcmovnb
out
inc
je
jmp
mov
mov
mov
cmpsb
adc
or
rclb
mov
sbb
and
pop
negb
inc
mov
mov
and
cld
imulb
addl
int3
pop
daa
cld
add
push
repnz
sbb
lods
ja
jl
aas
add
insb
pop
mov
mov
cld
out
sar
xor
fadd
andb
mov
negb
lret
fs
pushf
inc
mov
out
test
dec
mov
punpckhdq
decl
loopne
decl
and
rcl
or
push
or
adc
test
es
iret
push
call
jbe
dec
bound
cwtl
lock
sbb
lea
fsts
cmpsb
inc
ret
or
adc
dec
inc
mov
fwait
test
out
clc
lcall
loope
push
shlb
sbb
repz
popf
je
add
mov
stos
xchg
and
mov
adc
or
cmpl
mov
inc
lock
jns
add
ljmp
jb
icebp
pop
or
fadds
mov
test
sbb
dec
jg
pop
adc
dec
mov
aam
iret
cmc
add
nop
decl
xchg
insl
aas
aad
mov
mov
mov
sub
pushl
jno
push
xor
dec
sbb
cmp
sbb
lods
mov
cld
jbe
lret
and
cli
in
inc
call
out
stc
imul
mov
mov
or
enter
jg
and
pop
nop
mov
adc
mov
pop
enter
pop
sbb
js
adc
call
push
xchg
add
inc
repz
lea
pop
lahf
popa
out
lods
and
inc
and
popa
sub
cmp
lds
std
das
rcll
psraw
dec
call
ljmp
into
ja
pusha
mov
insl
push
pop
sarb
add
mov
lods
mov
adc
or
jp
inc
pop
enter
std
incl
inc
push
and
repz
js
test
lea
fistpll
icebp
jg
fwait
add
xor
lea
jmp
add
lahf
or
push
push
int
cld
lahf
dec
mov
shrl
movsl
hlt
aad
fs
lcall
test
add
push
insb
and
mov
nop
inc
aas
fdivrp
jmp
inc
mov
outsl
adc
addr16
stc
ja
pop
lcall
testb
addr16
inc
je
hlt
jmp
jno
push
add
clc
ret
fisubrs
xchg
fnstcw
sub
inc
push
inc
jne
push
cmpsb
fs
inc
or
jne
pop
jg
xor
and
xchg
repnz
outsl
lock
mov
cmp
mov
pop
xchg
daa
push
cld
push
push
pop
nop
cwtl
fcom
add
and
xchg
add
gs
or
adc
add
out
push
mov
jp
pop
xchg
adc
or
mov
sub
sahf
sub
or
mov
sbb
add
adc
and
or
pop
rcr
or
mov
or
push
test
fsubl
sbb
jge
cltd
mov
xor
xchg
sbb
sarl
add
xor
add
pop
pop
insl
dec
dec
lahf
add
jg
or
inc
xor
sbb
sbb
jo
xchg
push
add
lea
and
cmpsb
cmp
pop
shl
add
xchg
in
lcall
adc
cli
mov
test
mov
cmpsl
push
inc
or
loope
inc
leave
inc
xor
mov
xchg
adc
fmuls
iret
add
dec
inc
das
add
into
sbb
cmp
inc
xor
out
sbb
stc
jae
fwait
cltd
call
imul
mov
mov
lcall
xor
lret
daa
mov
adc
adc
cmp
pop
icebp
jae
pop
rorb
outsb
dec
inc
pop
test
adc
xor
stos
sbb
mov
mov
adc
test
loope
inc
inc
divb
aas
sbb
out
and
sbb
push
mov
flds
and
push
frstor
arpl
or
inc
scas
fstpl
add
sbb
or
inc
adcb
das
or
push
in
mov
pop
shll
adc
pop
push
xchg
jmp
mov
add
jmp
inc
lret
pusha
inc
ret
mov
incl
aad
mov
sarb
jne
shlb
jo
pushf
mov
insb
push
xor
push
les
pop
xor
mov
adc
adc
jbe
sarl
int
xor
or
ret
push
cmpsl
aam
xorl
add
adc
out
icebp
push
outsl
sbb
sbb
xor
add
lods
pushf
xor
push
das
mov
xor
inc
jge
xor
repz
and
inc
aas
mov
js
js
sbbb
push
push
sbb
dec
sbb
dec
std
lcall
lret
cwtl
insb
mov
fwait
stc
js
in
cltd
jns
dec
xor
inc
cmp
loop
sbb
jecxz
es
cld
shrl
xchg
jmp
dec
popa
inc
cltd
lea
mov
sbb
mov
adc
or
fsubrl
sar
cld
pop
xchg
lahf
arpl
fildl
jbe
std
aaa
ljmp
cltd
fndisi(8087
cltd
inc
lock
xchg
cli
mov
push
jmp
pop
fistps
push
sub
data16
jg
xor
sub
lods
jns
jns
int3
jne
aaa
add
pop
dec
into
cmpsb
test
sub
ljmp
dec
repz
call
sbb
lock
push
stos
jl
adc
test
inc
icebp
jg
adc
add
sub
dec
adc
push
sahf
sbb
subb
cli
add
sub
push
xchg
pop
fdivrp
ljmp
sub
int3
pushf
pop
cs
add
inc
ds
insb
testl
test
cs
push
pop
dec
xchg
pop
bound
mov
mov
les
clc
lcall
bound
lahf
cmc
mov
sti
jg
je
xchg
push
cmpsb
cltd
mov
dec
pop
add
lock
loop
or
adc
xlat
push
mov
arpl
xchg
negb
cld
push
sbb
jge
aam
lret
adc
dec
or
ja
mov
and
push
stc
push
lds
add
jge
in
add
in
rolb
or
popf
or
jb
out
repz
pushl
or
mov
mov
shll
add
shll
push
aad
mov
filds
mov
xor
adc
mov
adc
stos
cmc
fcompl
adc
test
xchg
pop
into
nop
data16
test
mov
inc
inc
imul
loop
cmp
jecxz
loope
push
leave
xor
xchg
mov
push
or
adcb
stc
popf
enter
shrl
ret
xorb
scas
add
fmull
inc
push
xor
cmp
mov
movl
rcl
fstpt
rorl
and
dec
inc
adc
push
outsl
sub
cmp
inc
in
pop
in
sub
add
adc
popf
add
fildll
add
mov
dec
in
adc
sub
dec
in
push
push
les
mov
jo
xor
push
inc
rolb
inc
mov
jb
push
adc
test
jecxz
cmp
adc
pop
add
dec
nop
out
call
movsl
inc
inc
dec
cltd
test
negb
lcall
loopne
imul
push
adc
lcall
imul
aad
popf
in
repz
adcb
or
in
insl
mov
and
bound
mov
push
fcmovnu
add
addr16
jg
or
add
mov
pusha
pusha
adc
push
subb
push
or
xor
dec
loop
rcrl
pushf
or
cmp
sarb
movsl
adc
movsb
out
ljmp
adc
int3
mov
inc
sarl
aam
sub
jmp
pusha
xchg
add
adc
call
xchg
dec
das
and
call
sbb
ret
gs
add
flds
or
cltd
sbb
out
jge
insl
out
adc
and
inc
in
push
andb
lock
std
std
stos
jle
mov
lock
jne
nop
xchg
mov
inc
and
mov
and
pusha
outsl
adc
xchg
pop
data16
fs
fldcw
test
sarb
lahf
pop
and
loope
lock
xchg
jno
arpl
outsl
adc
je
dec
mov
jnp
mov
lret
pop
ds
jne,pn
xchg
mov
push
pop
pop
mov
bound
mov
sub
add
pop
ljmp
fcomps
pop
lods
push
jns
arpl
jecxz
pop
rorl
cmpsl
push
scas
dec
jmp
xchg
or
ficomps
inc
leave
push
mov
inc
lods
imul
and
out
into
pusha
std
cmpxchg
dec
shll
mov
push
je
cmc
cwtl
sti
pusha
jle
outsl
mov
shll
push
and
leave
in
inc
inc
ljmp
loop
sub
push
outsl
lcall
clc
in
daa
push
test
loop
scas
pop
icebp
aaa
xchg
call
dec
hlt
imul
dec
add
and
add
mov
ds
insb
xchg
hlt
adc
sub
xchg
mov
cmp
cmp
hlt
and
movsb
or
push
cmc
cmp
and
push
das
add
addb
les
iret
add
add
add
hlt
and
clc
popl
jmp
andl
jge
add
add
inc
and
add
data16
lcall
push
dec
dec
das
out
shrl
xchg
pop
stos
mov
in
sub
mov
cmp
mov
lods
mov
jne
cmc
mov
cli
int3
inc
and
lret
add
push
or
cmp
add
scas
pop
mov
add
std
mov
arpl
or
mov
inc
sbb
inc
test
shrl
pop
push
dec
pop
pop
xchg
push
sbb
subb
push
subb
cmp
jns
addb
adc
es
out
mov
sbb
in
lock
sbb
add
pop
mov
adc
push
xchg
aam
add
xorb
pop
cld
mov
push
inc
pop
jae
sub
xchg
imul
test
push
mov
pop
pop
cmpl
pop
push
add
and
hlt
xchg
test
testb
out
xor
add
cmp
outsl
pusha
pop
sbb
fiaddl
cli
sbb
adc
iret
lea
int3
pop
roll
aam
shlb
push
jnp
pop
pop
push
mov
pop
push
jns
jb
push
mov
jp
mov
mov
push
cmp
push
xor
jmp
sub
cltd
popa
adc
or
mov
jnp
mov
pop
push
call
xchg
pop
and
test
sub
add
mov
shr
push
rorb
test
and
stos
pop
push
push
jae
jg
lock
xor
scas
ret
call
pusha
clc
mov
arpl
mov
jbe
sbb
inc
nop
mov
mov
jecxz
cmpb
push
std
sub
je
adc
xchg
les
mov
add
aam
in
add
and
adc
inc
dec
xor
aam
das
jbe
sbb
rolb
adc
mov
mov
add
cmpb
movsl
mov
movsb
dec
lret
sbb
incl
mov
pop
push
hlt
mov
inc
jne
ds
incl
cmp
call
sub
std
pop
cli
mov
cmp
sub
pop
mov
mov
movl
sbb
call
push
movl
sti
sbb
lds
or
lock
movsl
push
adc
inc
pusha
add
fsub
incl
sti
xchg
lret
pop
dec
rclb
mov
clc
jg
das
enter
icebp
sbb
aas
mov
sub
subb
lret
aaa
sub
mov
push
push
xor
stos
xchg
cmp
adc
mov
cld
jmp
add
nop
mov
lock
mov
in
pop
rcrb
sbb
sub
loope
mov
add
jecxz
lret
inc
add
lds
cli
adc
mov
pushf
adc
jg
sarb
adc
out
sub
sar
lods
decb
int
rclb
mov
insl
ret
clc
and
mov
dec
xchg
jg
cmc
mov
les
lahf
jl
pop
popf
shll
fbstp
push
bound
xor
adc
pop
push
add
cmp
or
test
mull
add
push
decl
sub
mov
jge
or
jo
mov
ja
test
inc
jae
sub
fimuls
sahf
add
loope
sbb
and
repnz
dec
js
dec
cld
jg
add
rorl
push
mov
movsb
movsb
mov
lret
cmp
jb
add
icebp
stos
push
mov
push
and
incl
pop
mov
cmpsl
shlb
loop
mov
adc
dec
mov
add
xlat
dec
lcall
inc
pop
nop
nop
sub
aas
push
ficoms
mov
subl
je
scas
inc
jmp
pushl
out
ficoml
mov
loope
loopne
mov
ja
decl
rolb
mov
jecxz
lea
addr16
inc
mov
or
jae
xchg
and
ljmp
push
mov
mov
out
cli
jg
rolb
iret
decb
scas
and
jecxz
jns
loope
and
lods
scas
or
ret
mov
add
dec
mov
pop
mov
xchg
ret
add
mov
test
xchg
cmc
or
pop
lea
dec
scas
add
clc
cmp
push
cmp
and
mov
stos
lock
lea
xchg
fdivrs
popf
notl
xchg
xor
pop
adc
cmp
jg
shlb
mov
loope
ds
clc
dec
push
test
test
clc
inc
daa
jl
stos
filds
stos
add
push
jb
adc
ret
mov
jp
jl
sub
je
cltd
idiv
jbe
mov
pmaxub
sub
pop
fldt
decl
mov
and
lock
dec
mov
into
test
fcoml
and
mov
push
lock
test
xchg
insl
stos
lcall
mov
fimull
lods
push
jp
roll
jmp
and
pop
out
aam
jle
js
pop
and
mov
pushl
mov
and
sar
in
aas
sbb
es
ret
js
and
mov
incl
cmpsl
jecxz
jle
out
shll
sub
and
jmp
sbb
adc
lcall
aaa
or
push
es
pop
sti
out
adc
xor
das
movsb
xor
pusha
xchg
inc
aaa
xchg
push
lds
jg
or
sbb
lret
mov
ret
int3
fcomip
in
pop
inc
add
cmp
cmp
call
or
cli
dec
imul
sti
pushl
or
xorb
mov
ljmp
xor
xor
idiv
cld
mov
test
pop
pop
and
mov
add
pop
mov
xor
mov
ret
xchg
rcrl
jmp
adc
push
loop
aam
sub
sbb
mov
jp
loopne
cld
push
or
sbb
insb
mov
std
push
mov
xchg
mov
sbb
add
fdivrs
imul
idiv
inc
pop
and
lret
mov
push
xor
mov
xchg
mov
lods
mov
add
pop
stos
inc
sar
aas
ljmp
das
sahf
add
sbb
repnz
ss
outsl
dec
mov
movsb
loopne
and
lods
orl
data16
outsl
inc
or
test
jns
das
insb
add
lret
lds
pop
dec
test
xchg
push
sub
lret
enter
jmp
stc
mov
push
sti
sub
or
or
mov
clc
mov
add
inc
mov
cld
hlt
sar
ret
mov
imul
push
ja
jno
cmp
jae
xorb
pop
add
sbb
in
mov
add
lahf
cmp
pushl
clc
aas
aad
or
pop
stc
and
fsubp
pusha
sahf
jg
jmp
das
mov
cmp
es
repz
subl
lahf
out
ja
jg
mov
xor
out
nop
fs
inc
push
loope
setne
push
pushl
nop
cli
pop
sbb
jl
add
push
mov
in
shr
cmp
push
shll
addl
mov
pop
lds
cmpsb
add
lcall
jmp
jno
in
shrl
mov
cmp
je
clc
or
sar
ljmp
out
mov
imul
mov
js
jbe
icebp
jle
pop
loope
add
add
jb
imul
cld
mov
cmp
xorl
adc
test
fiaddl
push
pop
mov
adc
repz
ja
and
sbb
push
mov
ret
cmpsl
or
aas
xchg
and
ret
decl
push
lcall
insl
cwtl
dec
sub
in
push
jg
cmp
outsb
add
xchg
mov
pop
js
ret
fdiv
mov
outsl
and
push
das
ror
dec
outsb
and
hlt
imul
mov
or
sbb
stos
mov
mov
sub
jg
inc
sub
cmp
out
filds
mov
mov
nop
pop
inc
fcomps
std
cmp
mov
sub
scas
rclb
shl
mov
pop
add
inc
jb
fnstsw
and
dec
mov
mov
jne
jmp
das
js
push
add
js
sbb
inc
mov
dec
mov
clc
push
jg
jns
orb
data16
dec
cli
hlt
fisttps
into
pop
lods
arpl
adc
push
cmpl
icebp
leave
adc
addb
sbb
push
lahf
add
jno
adc
ret
int
rolb
fidivs
push
outsb
in
lds
in
jns
dec
repz
mov
and
xchg
inc
test
xchg
call
outsb
decl
mov
mov
out
aam
test
ljmp
xchg
adc
xchg
fwait
loopne
cli
xorb
fnsave
test
inc
hlt
incl
inc
and
shlb
or
jge
or
das
adcb
mov
push
mov
mov
fwait
push
inc
das
mov
inc
ja
subb
fildll
mov
stos
gs
adc
enter
addr16
cli
lods
inc
clc
cld
outsb
dec
mov
je
sti
push
clc
mov
mov
push
icebp
mov
and
dec
xor
jae
jo
jb
mov
jmp
add
js
lock
xlat
inc
add
arpl
lahf
in
andl
push
adc
adc
cwtl
sbb
jne
addr16
imulb
testb
enter
test
push
or
nop
ror
loopne
cmpsb
test
or
stos
ret
icebp
sbb
es
sub
mov
filds
jp
jg
daa
cmp
push
shll
mov
sbb
cmp
out
inc
pop
or
cld
or
pop
int
mov
add
add
cmp
pcmpgtb
mov
mov
jo
rorl
and
jmp
add
andb
mov
incl
add
mov
sti
lret
mov
push
add
inc
lcall
mov
push
mov
xor
loop
xlat
jmp
pushf
xchg
dec
pop
test
lcall
adc
clc
push
rolb
popa
int3
push
or
rcl
and
mov
mov
add
outsb
imul
int
add
fists
xor
cmp
fadds
push
mov
push
mov
xor
lea
sub
call
mov
leave
addl
repz
xor
outsl
in
pop
jns
xchg
mov
lods
pop
jl
repnz
sbb
mov
push
cmp
adc
js
bound
jge
or
mov
cmp
add
xchg
or
es
push
sti
xchg
mov
adc
mov
pop
fildl
sahf
cld
addl
std
out
push
pushf
inc
xlat
lock
cmpsb
push
incl
mov
push
repnz
jl
push
xor
inc
lret
ret
mov
sub
bound
clc
pop
mov
ljmp
adc
dec
dec
inc
cld
loope
jecxz
push
xchg
enter
cmpl
loope
nop
or
xchg
out
pop
pop
sub
or
es
aaa
iret
mov
test
mov
lcall
and
cmc
add
push
cwtl
shr
decb
sbb
cld
dec
fisttpl
pop
cmpb
loop
jbe
addr16
dec
adc
addr16
pop
push
iret
mov
shll
cmp
xor
scas
mov
test
push
mov
or
push
addl
mov
outsl
outsb
push
lds
rcrl
es
adc
outsl
shrl
loopne
inc
and
aaa
mov
xor
sub
mov
into
cmp
cld
push
roll
mov
rorb
add
call
incl
lcall
dec
jae
and
sub
ret
adc
mov
das
mov
clc
in
xor
lock
fcomip
addr16
loope
push
aad
push
add
pop
sbb
sbb
insb
addr16
pop
cmp
test
loopne
inc
lock
imul
fistpl
sub
push
dec
icebp
sub
cwtl
jns
and
out
cli
inc
dec
ss
dec
mov
out
cmc
movsl
movsb
cwtl
inc
mov
push
fdivrs
xor
stos
es
cmp
aad
ficompl
jne
and
inc
insl
or
xchg
mov
fisubrs
inc
out
ror
cld
push
or
pmaxsw
add
or
dec
aas
pop
and
cwtl
or
xor
ja
fisubs
aad
jne
add
xorl
sbb
mov
cmp
sbb
jae
jl
sub
popl
jle
mov
fcomps
mov
mov
jecxz
aam
outsb
pop
std
rorl
pop
adcb
cli
repz
sub
jmp
faddl
adc
jo
push
sbb
add
fcoml
idivb
call
mov
jecxz
mov
int
inc
push
pop
jns
jmp
int
mov
pop
jecxz
cmpsl
mov
rol
and
in
sar
aas
push
adc
subl
pushaw
cmp
insl
loop
pop
xchg
decl
sbb
fsubrp
sub
xchg
push
es
dec
inc
jg
push
mov
lods
sti
sub
orb
cld
fstpl
fs
mov
lret
rcrl
cld
cmpb
das
pusha
aas
insb
cmp
incl
mov
dec
adc
jo
or
cmpsl
or
mov
push
in
mov
jns
clc
das
inc
sub
bound
mov
iret
dec
movl
out
aas
cmp
andl
cmp
jecxz
xchg
fwait
lcall
lret
pop
js
adcb
call
pop
js
mov
rcll
adc
js
decl
jnp
or
jbe
push
call
in
or
xchg
decl
lods
inc
pop
mov
sbb
mov
adc
dec
or
bound
cld
outsb
out
and
leave
sbb
cmc
iret
sbb
in
loope
enter
ficompl
and
pop
cltd
jmp
jg
sahf
test
pop
or
adcb
roll
pusha
and
out
sub
push
mov
scas
fcomps
repz
inc
jbe
in
call
mov
mov
sbb
int
inc
negb
mov
mov
sub
nop
push
test
jecxz
add
notb
or
xor
xorb
int
shlb
cltd
sbb
into
push
insl
addr16
sbb
pop
ret
shlb
or
lret
xor
cmp
dec
idivl
cmp
or
lcall
push
mov
sbbb
sahf
and
xor
dec
loopne
int3
add
test
adc
adc
leave
mov
push
call
jae
call
out
or
sbb
es
adc
mov
iret
mov
and
scas
or
cmp
insl
daa
sarb
iret
ja
icebp
xchg
mov
cmpsb
loope
pusha
aam
jo
xor
pop
sbb
jl
push
or
add
push
push
shl
es
mov
add
sahf
loope
inc
cld
outsl
loopne
out
fstpt
sbb
sub
js
inc
and
and
xchg
add
pop
mov
xlat
sbb
es
aad
jg
mov
mov
imul
sbb
xchg
xchg
and
daa
jb
les
push
iret
push
add
aas
mov
cmp
sbb
ss
sbb
sub
notl
pusha
xchg
inc
sahf
out
sarb
jne
adc
push
inc
or
test
adc
call
push
cmp
pop
adc
in
rolb
lock
adc
add
mov
inc
add
in
loop
sarb
or
dec
adc
jl
pushf
xchg
or
shrl
out
adc
cs
ss
sub
add
inc
ret
push
imul
lock
dec
mov
adc
add
cli
cmp
jmp
mov
pop
pop
mov
push
nop
xor
rorb
xchg
mov
in
cmp
xchg
add
inc
add
pop
sbb
fbld
xchg
cld
pop
aas
mov
sbb
add
push
rolb
mov
cmp
dec
sub
pop
sti
sub
pusha
add
and
aam
and
cmc
aam
sbb
popf
mov
cmp
sbb
icebp
add
stos
lea
inc
add
xchg
pusha
in
lods
les
inc
pop
jb
inc
jns
mov
mov
adc
push
aam
les
pop
inc
add
imul
stc
xchg
add
sbb
daa
jmp
pop
aam
and
mov
xchg
add
adc
lods
in
add
in
jb
sub
push
sub
out
jmp
sub
dec
aas
dec
scas
lret
rorb
sub
dec
pop
push
inc
adcb
push
ja
inc
mov
scas
add
push
add
loopne
stos
mov
pop
mov
les
pop
xor
daa
les
bound
in
jno
pop
cmp
stos
or
mov
add
cmpsl
add
out
push
lock
xchg
mov
cli
mov
and
inc
sbb
data16
mov
addr16
imul
and
jo
lret
mov
xor
adc
or
andl
lock
fists
fidivs
add
adc
inc
mov
aam
or
and
jne
or
pmaxub
pop
xchg
cmc
jp
jnp
mov
repnz
jns
dec
mov
test
dec
pusha
pop
xchg
or
iret
mov
or
jo
xchg
movsl
sub
call
adc
or
mov
xchg
mov
or
lea
test
cltd
adcb
xchg
test
dec
in
cmc
es
and
xor
es
xor
xor
and
lods
popa
add
sbb
fistl
lods
dec
xchg
fcoml
push
rcr
xchg
daa
add
int3
or
subb
test
xchg
aad
adcl
pop
add
es
arpl
daa
push
rorl
repz
push
cmpsl
xor
pop
call
sub
dec
icebp
cmp
pop
sub
out
adc
add
mov
fwait
lds
or
add
call
rcl
cmp
movsb
lods
iret
cmpl
enter
loope
fstp
int3
or
push
and
and
inc
je
dec
xchg
mov
and
gs
cmp
pushf
jae
add
lcall
push
ret
add
push
jne
mov
aam
pop
jmp
cmp
jmp
sub
repnz
ret
test
jae
sub
lcall
cmp
fstpt
popa
mov
inc
add
rcl
push
mov
out
xor
in
push
push
imull
add
push
test
je
cld
sub
dec
loope
jmp
pop
xlat
ss
sub
dec
add
jecxz
inc
sub
pushf
repnz
aaa
loope
and
cmpb
int3
pop
pop
mov
mov
pusha
loop
mov
dec
adc
jle
cmpsl
leave
jbe
sub
scas
out
fwait
int3
adc
sub
xor
mov
es
je
and
add
mov
xorl
jecxz
inc
sbb
inc
repnz
and
xor
ret
fstps
jne
mov
dec
inc
pop
xor
mov
and
pop
xor
add
and
cs
lret
loopne
fwait
int
fimuls
push
sbb
adc
mov
push
push
mov
jo
sub
fldenv
fildll
inc
loope
sub
adc
jmp
in
inc
add
lret
je
loopne
sub
sub
outsb
jmp
pop
mov
in
push
xor
and
add
pop
enter
fwait
pop
lahf
cmp
lcall
sahf
sbb
adcl
sub
ret
in
mov
push
les
mov
mov
inc
lock
icebp
push
lock
fcmovne
xchg
lods
lock
xor
add
or
xchg
push
cli
push
int
pop
xchg
cmp
stc
les
into
pusha
inc
adc
flds
fmuls
int3
inc
outsl
shlb
xor
add
jne
dec
out
in
mov
out
lcall
sbb
lds
out
dec
inc
or
test
pop
leave
scas
repnz
xor
jbe
sti
popf
and
add
je
mov
cmp
mov
xchg
fmull
ds
cmp
bound
pop
outsb
mov
rcrb
cld
jb
inc
dec
rcrb
das
mov
popf
push
ficoms
add
add
xor
jl
push
xchg
mov
icebp
sbb
dec
pop
cmp
movsl
loopne
mov
stc
cmp
xchg
and
lret
sahf
xor
jb
rcll
adc
sarb
hlt
cmp
add
sahf
jne
test
aam
sbb
sbb
repz
jo
add
loop
pop
mov
lahf
xor
dec
pop
mov
ret
sbb
add
add
hlt
jns
dec
call
jno
subl
jecxz
aam
sub
test
xor
jb
adc
mov
sbb
xor
test
std
push
xor
xor
inc
xor
pop
jns
sub
dec
imul
pop
push
ret
xor
push
pop
mov
jp
call
cmpsb
pushf
sbb
mov
dec
shrb
xor
adcb
mov
or
mov
inc
xchg
sbb
xor
jmp
call
jp
clc
dec
add
xchg
add
push
aas
pop
jb
sbb
jnp
test
jae
sarl
jne
or
and
cmpsb
insb
push
or
movsb
cmpsb
sbb
adc
and
or
or
mov
lds
dec
add
pop
adc
adc
inc
mov
sub
xor
in
sarb
std
inc
pop
outsl
test
cmpsl
out
aaa
jbe
aas
cwtl
loopne
inc
into
adc
sahf
push
adc
out
and
jmp
fcmovbe
inc
add
sbb
cmp
adcb
inc
lcall
adc
xorl
inc
mov
dec
dec
adc
mov
fidivs
test
repnz
or
aad
rcrl
dec
sbb
mov
rol
push
mov
cwtl
int
lds
mov
mov
add
xor
frstor
push
add
repnz
fdivl
xchg
inc
subb
pop
xchg
ror
cmp
cwtl
cltd
jb,pt
movb
ss
imul
push
out
adc
iret
pop
pop
test
and
pusha
imulb
fwait
lea
sub
xor
or
xchg
in
jbe
jp
cmp
jae
push
and
xchg
shrl
adc
add
push
or
dec
jecxz
add
inc
das
jbe
sub
fdivs
cltd
loopne
jo
stc
pop
inc
adc
orb
inc
iret
xlat
jmp
pop
test
add
fdivs
dec
jle
xchg
leave
aas
cmp
jb
cmpsb
call
mov
rcrb
add
xor
insl
mov
add
sub
shlb
pusha
dec
xor
jmp
shl
repz
or
cmpsl
in
shr
les
and
add
decb
push
hlt
data16
les
jo
ficoms
fs
rol
mov
fs
and
cmpsl
ljmp
call
ljmp
shr
es
xor
outsl
lret
and
mov
jae
push
orl
mov
loopne
adc
paddb
inc
mov
xchg
dec
mov
pusha
jb
fdivrl
dec
scas
out
movsb
cmp
mov
ljmp
lret
push
xor
arpl
push
pop
es
clc
push
xchg
jle
add
popa
cmp
hlt
cmp
jmp
clc
lret
outsl
push
xchg
push
incb
clc
xor
nop
inc
inc
and
push
and
cmpsl
roll
ss
pusha
jnp
shll
sbb
sub
jo
in
and
add
adc
mov
cld
xchg
lds
jg
dec
scas
or
xor
sub
fnstcw
jb
add
cmp
fistpll
loopne
mov
jo
jl
cli
xchg
test
popf
jno
loopne
das
lock
and
dec
inc
pop
mov
notb
scas
xor
inc
bnd
xchg
sub
push
sbb
test
les
mov
aaa
sub
das
pop
repz
orl
mov
sbb
adc
inc
out
sbb
xor
xchg
adc
jno
pop
rcrb
mov
shr
les
adc
icebp
addr16
adc
and
xor
bnd
inc
dec
mov
dec
mov
inc
lret
orb
out
inc
jl
fcmovnu
aad
sub
or
lods
and
and
jns
jne
sub
pop
in
sub
xor
lea
inc
out
ljmp
fcoms
sbb
loopne
inc
aas
les
ret
jbe
fwait
incb
jmp
sbb
pusha
scas
adc
dec
in
jns
xor
pop
sar
xorb
sbb
inc
inc
sub
pop
xor
hlt
adc
mov
adcb
adc
mov
and
add
stos
pop
mov
adc
jmp
add
test
sbb
mov
sbb
cwtl
outsb
icebp
ljmp
push
mov
sbb
inc
inc
lcall
adcl
sub
sub
push
sub
inc
call
nop
shrl
pslld
mov
scas
adc
jge
add
or
cltd
pop
inc
jo
in
add
mov
in
fbstp
in
xchg
push
adc
xlat
pop
call
cmp
add
loope
push
aam
aam
mov
outsl
sbb
lods
jo
xor
fiaddl
cwtl
add
sub
cld
jle
bound
mov
xor
inc
pop
mov
rcll
push
mull
orb
cmp
inc
das
xchg
fld1
repz
mov
xor
stc
inc
aad
hlt
data16
cmp
push
bound
jmp
lahf
retw
insb
and
mov
aaa
loop
xor
push
adc
or
mov
sub
adc
cmp
pop
add
mov
sahf
sahf
xor
xor
pop
nop
dec
mov
adc
inc
push
mov
out
lea
loopne
cmpsb
fldenv
xchg
adcb
or
mov
xchg
push
movb
mov
add
mov
pushf
push
pop
jge
aaa
mov
rcll
dec
into
arpl
lahf
add
loop
push
loope
in
cli
jo
mov
insl
int3
insb
sarl
pandn
cmovno
inc
adc
nop
pop
mov
xlat
xchg
insl
adc
inc
jl
fbld
pop
daa
loopne
xor
sub
add
rol
jp
in
or
repz
or
jo
inc
mov
icebp
mov
xor
sarb
push
hlt
mov
push
pop
fcmovnb
test
nop
mov
inc
cmp
cmp
ljmp
repnz
inc
rorl
xchg
aam
add
sbb
dec
inc
mov
cmp
arpl
push
faddp
je
lcall
out
js
outsl
popa
pop
jecxz
adc
cmp
int
fidivl
dec
icebp
xor
mov
adc
jecxz
rolb
test
enter
rcll
dec
je
jae
pop
adc
sub
fcom
pop
mov
inc
xchg
mov
or
xor
cli
in
dec
mov
pop
cmpsb
nop
fldl
push
add
iret
stos
sti
xor
pop
cmp
ss
cld
movsb
jo
mov
cmc
leave
sub
push
pop
lcall
pop
data16
jb
mov
pop
or
out
shlb
add
adc
mov
xor
idivl
xorb
cmp
push
adc
mov
testl
cmp
test
cwtl
mov
sub
sub
add
mov
popf
pop
pop
filds
and
shrb
out
fcompl
dec
adc
test
das
push
mov
inc
pushf
cmp
loope
cli
or
ss
test
jb
sbb
push
adc
inc
fidivs
cltd
aam
popl
jge
std
out
inc
inc
shl
or
adc
push
and
pop
std
aaa
and
xor
push
or
push
mov
pop
data16
and
xchg
lods
pop
div
cmp
jns
repnz
fsubrl
cmc
enter
mov
mov
mov
les
mov
sub
orb
push
pop
jnp
leave
sbb
sub
rcrl
fmull
cmpb
fwait
dec
add
pop
sbb
lcall
add
sub
call
inc
cltd
lea
push
add
push
das
dec
jg
or
rclb
pop
xor
jns
or
push
push
call
jbe
mov
dec
push
adc
in
add
add
shlb
jbe
mulb
cmp
lea
nop
fcmove
add
ljmp
mov
cmp
sub
and
dec
inc
jmp
mov
mov
mov
fwait
loopne
and
add
add
loope
mov
hlt
pop
and
dec
in
sub
xchg
fwait
outsl
push
xchg
shrb
daa
fbstp
inc
dec
js
test
loope
push
test
lret
out
divl
stos
ret
fidivrl
cmp
mov
or
cmp
push
cli
mov
je
cmp
cli
aaa
push
inc
xor
dec
sbb
sub
mov
mov
sbb
push
cmp
je
roll
sub
inc
test
jle
xchg
mov
push
pusha
loopne
sub
inc
rcr
les
rolb
xorb
dec
lods
xchg
inc
inc
adc
xchg
cmp
sub
adcb
xchg
dec
in
les
mov
sbb
mov
cwtl
les
daa
dec
shlb
or
arpl
add
push
push
jnp
and
jecxz
mov
stos
negl
rclb
inc
es
adc
add
fidivrl
test
negb
roll
sub
jmp
test
cmp
inc
xor
outsb
xchg
or
or
movsl
clc
ljmp
push
stos
cmp
adc
pop
jmp
hlt
inc
pop
sub
loope
push
dec
mov
lahf
rcl
andl
movsb
inc
loop
pop
cmc
shl
push
dec
push
int
and
es
push
or
push
mov
inc
lret
rcrl
dec
rolb
sbb
sub
add
data16
jo
repnz
cmc
das
mov
dec
shr
pop
aad
xor
clc
jb
mov
mov
add
cmpsb
outsl
ja
dec
insl
clc
cmp
popa
sbb
add
mov
stos
or
test
aam
mov
mov
push
mov
inc
jae
cmpsb
lcall
or
out
mov
fst
pop
push
add
dec
and
loopne
imul
std
add
add
jecxz
sbb
and
out
call
hlt
aaa
insb
mov
fadd
mov
lret
add
lcall
cmp
mov
adc
or
or
push
sbb
adc
aam
xor
jns
aaa
dec
adc
mov
adc
mov
and
lahf
push
pop
ja
lahf
cmp
lcall
jae
or
push
mov
aaa
push
add
mov
aas
movb
sub
sub
fs
pop
push
test
aas
inc
icebp
adc
lret
sub
fisubl
stos
sbb
add
notb
mov
mov
mov
shlb
pusha
repnz
and
jno
in
outsb
outsl
pop
cli
clc
aas
adc
popf
inc
xchg
fcom
inc
mov
movups
aad
or
ljmp
cmp
mov
test
or
add
jno
faddl
add
call
add
ret
sub
insl
add
call
adc
test
xor
jle
clc
jmp
dec
fisttpl
add
incl
popa
and
mov
or
cmp
mov
or
decl
mov
aaa
popa
lahf
shll
add
inc
xor
insl
push
mov
push
hlt
mov
and
inc
push
jecxz
outsl
fsubs
dec
std
jl
xchg
lret
pusha
shll
subl
and
dec
jbe
mov
fcoms
pop
mov
inc
pop
add
imulb
bound
and
pushl
mov
xchg
and
test
inc
mov
popf
dec
out
dec
and
add
dec
sar
mov
clc
and
gs
add
or
dec
push
std
add
inc
pop
push
repnz
movl
pop
std
push
sub
dec
mov
and
cmp
in
add
insl
lea
push
fiaddl
adc
adc
or
inc
xchg
add
inc
rolb
dec
add
xchg
ljmp
adc
dec
inc
mov
les
xor
inc
adcb
push
sbb
push
add
mov
std
adc
pop
ret
movsb
movsl
xchg
xchg
mov
add
mov
push
jne
jno
jo
orl
sub
inc
mov
adc
outsl
push
mov
inc
sbb
orb
push
lds
int
or
xor
cmp
and
push
pop
fcoml
adc
fucom
inc
mov
inc
test
repnz
mov
sbbb
out
in
dec
add
inc
ficoms
mov
or
lret
or
andnps
add
lahf
loopne
sub
and
test
test
cmpsl
push
insl
mov
add
iret
jns
shrb
mov
jo
sbb
hlt
fsubrs
pop
jecxz
xchg
dec
add
push
jg
jno
rcr
add
lahf
out
inc
inc
mov
cmp
andb
pop
mov
std
das
cwtl
aaa
movsl
fs
out
cmpsb
mov
dec
adc
pop
sti
push
mov
inc
sub
out
xor
es
sbbl
aaa
aas
test
rcr
int3
jmp
mov
fwait
dec
and
or
mov
movsl
and
mov
jmp
mov
sbb
in
add
test
push
pop
xor
push
adc
or
mov
shrl
jle
inc
enter
xor
adc
bound
jno
or
sub
dec
aaa
js
adc
sbb
xor
sbb
jae
push
movsb
pushf
cmpsb
scas
mov
dec
lods
push
cs
lcall
add
test
mov
cmp
or
or
xchg
cmpb
in
cmp
push
pop
cmp
add
daa
push
push
adc
pop
push
add
sbb
push
add
dec
and
jns
add
xor
ja
mov
cmp
out
mov
sti
pop
xor
pop
das
scas
std
repnz
fnsave
inc
insb
sbb
aas
cmp
xorb
lcall
sar
pusha
test
pop
push
ljmp
adc
aaa
inc
rcll
fstpt
adc
loop
mov
out
cmp
mov
ja
imul
cmp
sub
push
fs
inc
sub
mov
sbb
dec
or
lock
scas
ljmp
movups
sarb
ja
adc
pusha
push
in
nop
jae,pn
mov
lahf
das
pusha
pop
add
mov
push
sahf
faddl
jnp
das
lock
or
push
push
stos
sbb
pop
add
fstps
pop
push
cmp
xor
call
push
add
add
hlt
aas
sbb
xor
push
add
ljmp
and
int3
int3
in
fwait
pushl
cwtl
sbbl
mov
lea
mov
mov
sahf
add
jle
lcall
xorb
popa
cmc
adc
test
loope
lahf
test
sub
out
cltd
mov
aad
test
add
decb
adc
and
outsl
pop
clc
popa
dec
addr16
pop
push
insl
pop
sbb
bound
and
mov
incl
clc
enter
push
push
xor
cld
outsl
jmp
adc
push
repnz
pop
repnz
cmpsl
dec
aas
sahf
scas
pusha
lock
adc
imul
roll
call
jge,pt
adc
cmpsl
pop
jmp
xchg
std
movsl
push
das
imul
mov
mov
cld
xchg
lods
or
mov
addr16
addb
jp
in
pusha
mov
push
mov
or
adc
or
lahf
out
loopne
mov
mov
and
out
fsubl
sbb
xchg
xor
popa
mov
rol
movsb
mov
mov
icebp
xor
pop
or
movsb
pop
lret
repnz
xchg
and
leave
push
push
std
repnz
adc
inc
jl
mov
test
das
outsl
sub
out
mov
pop
aaa
decl
push
in
addb
inc
sbb
jp
loope
aam
pusha
xchg
test
jmp
enter
stc
outsb
pop
cli
sbb
test
dec
adc
popa
ss
mov
mov
adc
xor
push
pop
cmc
movsl
and
mov
testl
addl
fistpll
pop
sub
ret
adc
xor
popa
xchg
sbb
fstpl
adcb
dec
sub
stos
out
clc
decl
cmp
jno
aas
iret
xchg
repz
das
lock
sbbb
lods
inc
ret
insb
mov
lret
ret
es
jg
call
imul
mov
pusha
adc
loop
push
dec
call
jb
push
pop
xor
lahf
inc
cmp
or
dec
push
rorl
testb
fsts
mov
fld
aaa
fcoms
fisubs
xchg
or
enter
and
sbbb
fwait
pop
outsb
sbb
cmpsl
xlat
pop
inc
call
mov
inc
dec
pop
add
mov
sub
add
jecxz
sbb
mov
push
or
decl
cmpsb
pop
adc
incl
lret
add
mov
ds
mov
mov
jns
fwait
loopne
hlt
shlb
movsl
cmpsl
or
mov
test
or
jge
mov
or
arpl
icebp
fsubs
inc
sbb
dec
xchg
aad
je
incl
sub
sub
jg
hlt
outsl
incb
xor
popa
pop
dec
mov
xchg
mov
es
jne
and
hlt
out
jg
clc
sub
pushf
mov
cmp
sti
in
das
cld
arpl
add
lret
sarb
fists
push
dec
inc
lea
roll
pop
imul
jmp
cwtl
lret
xor
incl
mov
sbb
add
data16
test
and
and
push
call
fiadds
lods
sub
int3
add
lock
enter
mov
mov
mov
add
xchg
rcll
sbb
aam
enter
and
mov
push
cwtl
adc
mov
push
jl
inc
ljmp
fwait
mov
into
leave
push
fnstsw
and
fsubl
enter
mov
cmp
xor
cmp
lea
push
cmp
rolb
ja
adc
aaa
or
dec
pop
lock
push
idivl
aaa
pusha
inc
in
addr16
push
notb
nop
iret
loopne
loope
int3
jne
lea
loopne
cwtl
add
popa
std
bound
pushf
fbld
mov
repz
test
adc
jne
adc
arpl
into
add
divb
fs
adc
decb
xor
or
jmp
or
aam
imul
inc
outsb
addr16
sbb
mov
and
test
jg
jne
imul
std
xor
sbb
hlt
rorb
and
cld
loope
push
pop
sahf
lret
or
jg
or
nop
mov
mov
int
loopne
clc
out
and
xorb
push
sti
test
shll
sub
mov
call
pop
jp
mov
mov
lahf
mov
dec
or
sbb
mov
iret
mov
fldl
or
je
sub
mov
cmc
fwait
mov
es
lcall
frstor
push
xchg
or
sar
scas
xor
sub
xor
insl
adc
cmpsl
in
and
sti
sti
mov
movsl
incl
mov
add
in
cmc
pop
jmp
push
jmp
ljmp
stos
lcall
js
jbe
mov
mov
popa
mov
rcrb
mov
mov
sti
or
mov
into
std
xchg
mov
incl
cmc
jmp
popf
in
daa
dec
mov
or
push
es
inc
push
fbstp
mov
cmp
mov
mov
gs
outsl
aam
adc
loope
cmpsl
xor
jecxz
sbb
test
pushl
push
add
je
int3
jb
stc
pop
cmpsb
incl
leave
dec
out
xchg
mov
or
ds
pop
inc
and
xor
orl
xor
jo
inc
imul
dec
push
fld
and
sub
push
fldl
lods
or
sahf
cld
xor
in
int
lahf
test
stos
mov
push
inc
test
xlat
inc
sub
cmp
cmp
cmp
and
inc
sti
mov
clc
jmp
gs
mov
ljmp
jnp
sub
lcall
or
cmpb
mov
mov
mov
stc
out
mov
lea
mov
add
sbb
mov
add
rcrb
xor
and
pop
scas
insb
pop
adcl
sbb
xor
in
bound
xchg
nop
popa
sti
repnz
fimull
sbb
cmp
dec
rorb
adc
ret
andb
jecxz
cmp
pop
sbb
mov
xor
ds
fistl
add
lea
insl
mov
mov
ds
or
movsb
sub
dec
in
sarb
fsts
push
jl
dec
sub
push
push
rorl
sbb
jl
xchg
hlt
pop
mov
cmp
test
call
mov
movb
inc
notl
adc
dec
add
mov
xor
add
addb
dec
xchg
ss
aaa
cwtl
je
jbe
mov
cld
outsl
stos
repnz
cld
mov
cmp
bound
jno
jmp
test
jmp
mov
push
test
or
movsl
jg
sbb
mov
pop
pop
nop
sbb
and
xor
mov
out
mov
ficompl
inc
int3
cmc
inc
adc
adc
mov
mov
loopne
xchg
add
in
sbb
stos
pop
xor
and
pusha
push
outsb
fs
inc
data16
in
push
int3
jo
or
or
push
adc
mov
inc
call
icebp
add
adc
arpl
mov
fldt
repnz
or
cs
add
inc
push
fstpl
inc
dec
aam
xor
shl
ret
adc
inc
mov
roll
outsl
mov
add
shrl
ja
aad
sbb
sbb
inc
inc
fadds
cmp
and
add
mov
mov
or
lret
and
add
mov
inc
adc
xchg
clc
adc
push
pop
sbb
cwtl
les
or
mov
fldenv
inc
std
and
adc
add
dec
add
add
adc
push
adc
dec
in
je
dec
and
decb
aad
pop
inc
iret
call
dec
mov
and
sbbl
inc
sbb
into
or
loop
or
xor
push
pop
jae
sub
or
movsb
jbe
and
adc
clc
dec
jne
repz
out
cmp
bound
pop
add
sbb
jno
pusha
hlt
mov
push
hlt
fsubr
rorb
ljmp
adcb
fcoms
jae
lea
sbb
aaa
adc
inc
sbb
iret
mov
adc
ret
dec
andb
push
andl
and
or
int3
inc
xor
fidivl
push
adc
push
sbb
add
mov
cmp
bound
out
daa
mov
fcmovnb
je
incb
fcomi
mov
lds
out
mov
pop
inc
and
pop
insb
insb
sub
js
add
add
orb
mov
mulb
adc
adc
dec
pusha
jo
xorb
pop
rol
shl
pushf
adc
sbb
popa
inc
adc
mov
int3
or
xchg
adc
cli
adc
cmp
inc
fstpt
cld
jecxz
and
cmp
iret
scas
jecxz
add
and
loopne
lods
add
popa
ds
in
dec
inc
cmp
das
inc
fsubs
xor
sbb
das
lock
incl
dec
nop
jecxz
xor
sbb
orb
xchg
xorb
aas
fldenv
test
and
dec
mov
decl
lock
and
jb
fwait
push
add
inc
push
clc
out
loopne
stc
mov
ss
dec
cmp
stos
pushl
xchg
add
xor
mov
push
jnp
mov
les
incl
sbb
push
imull
xchg
xor
jmp
loop
pop
mov
jno
push
and
lret
sbb
push
sub
adc
or
adc
fistpl
jle
jge
xchg
mov
loopne
or
fucomip
adcb
mov
cld
pop
add
addr16
pop
bound
cmc
pusha
popf
fmul
int
mov
aam
push
pop
xor
pushl
mov
mov
xor
sub
xor
cmp
xor
adc
pop
movsb
stos
and
sub
mov
jle
cmp
add
add
xchg
or
jg
cmp
insl
rcrl
shrb
dec
fisttps
dec
inc
xchg
es
dec
sbbl
movsl
call
cli
pop
aam
out
pop
fs
decb
add
popf
xchg
incl
cmp
mov
pop
push
das
popa
mov
clc
add
cmp
mov
clc
imul
push
or
jp
xchg
fsts
aaa
inc
mov
add
imul
mov
mov
xor
fistpll
sub
ret
pushf
ja
push
xor
xor
mov
inc
sub
add
jecxz
mov
imul
cmc
pop
iret
add
cwtl
mov
cmp
mov
pop
into
and
mov
inc
mov
xor
cmpsl
mov
sbb
cld
mov
inc
sarb
notl
inc
cmc
mov
and
orb
js
xchg
stos
shrl
cld
adcb
add
jne
dec
out
call
adcb
jns
mov
adc
es
jge
sbb
adc
psubb
adc
jp
cmpb
cmc
call
ret
loopne
aam
shr
mov
rolb
int3
mov
mov
enter
dec
lea
and
fdivl
clc
cmpsl
or
frstor
js
jno
jne
pop
insl
cmpb
xchg
cs
aam
jo
add
ljmp
add
sub
xor
cmc
pop
add
mov
add
cld
xor
xor
sub
sbb
pop
movsb
pop
out
adc
inc
fs
mov
mov
cmpsl
jne
cli
pop
add
pop
push
gs
sbb
push
dec
aam
jo
xlat
cmp
inc
dec
aad
xor
call
lock
xor
dec
mov
loopne
and
arpl
mov
mov
pop
addr16
jge
inc
aad
and
push
sub
loop
and
add
add
push
xchg
push
add
push
pop
cmpb
cwtl
andb
dec
scas
lods
js
pop
ret
add
mov
mov
in
leave
cs
fwait
jge
outsl
lock
push
push
call
xchg
call
and
aad
shrl
and
in
or
fs
xchg
mov
and
jle
add
stos
push
jmp
mov
sub
add
mov
dec
mov
cmc
sbb
int
jge
bound
push
mov
test
add
xlat
call
in
into
dec
rcl
adc
das
mov
ja
pop
or
xchg
mov
xchg
adc
test
out
push
ror
cmc
loop
jg
test
inc
sbb
push
mov
adc
jle
add
inc
aam
movsl
push
out
out
jmp
mov
mov
std
mov
sbb
dec
mov
pop
ljmp
xchg
push
sub
stos
es
xchg
mov
mov
push
mov
push
inc
mov
inc
aaa
and
pop
cli
nop
xchg
mov
sub
or
or
sub
in
ret
xchg
rcrl
leave
add
or
in
add
es
push
push
jmp
aad
dec
and
mov
push
adc
push
or
xor
lcall
push
or
imul
jmp
inc
sub
out
shrl
push
jg
ljmp
mov
pop
stos
push
mov
es
rolb
jl
mov
in
jg
clc
out
push
ss
data16
popf
cmc
cli
stos
pop
jle
jecxz
sbb
pop
cli
push
add
dec
xchg
inc
and
jmp
cld
or
inc
cmp
adc
aaa
mov
inc
aaa
pop
inc
sti
jg
pushl
xchg
push
or
js
push
mov
fs
jg
cld
and
arpl
addr16
fcoms
push
lods
or
mov
mov
stc
outsl
or
scas
or
fistl
iret
sub
xchg
fwait
adc
insl
inc
jns
cmc
mov
decl
std
sub
inc
sub
scas
loopne
out
dec
data16
aad
loop
loopne
nop
xchg
push
mov
lahf
clc
sar
push
jp
xor
xchg
cmp
cmp
ljmp
mov
and
enter
add
pop
int3
adc
dec
popf
repnz
je
pop
adc
pop
mov
daa
mov
aaa
cld
cmp
or
xchg
mov
dec
xor
and
cld
push
aaa
mov
stc
xor
pop
js
aam
pop
scas
sarl
pop
push
je
xchg
pop
mov
and
lahf
lods
mov
daa
add
arpl
cmp
adc
test
and
sub
std
fildll
imul
inc
rorl
rcll
test
testl
je
int
pop
mov
mov
lret
and
pusha
add
idivb
out
pusha
xor
pop
loopne
push
addr16
mov
jecxz
lds
mov
mov
and
pop
or
imul
stos
pop
mov
push
lock
ret
sbbb
gs
push
aaa
addb
scas
andl
and
insb
xor
in
and
push
pop
sub
adcb
lods
lcall
cmp
add
or
adc
add
sbb
ret
stos
and
pop
rolb
packssdw
cmp
es
xor
sbb
adc
pusha
mov
in
fs
add
movsl
nop
shrl
lcall
or
clc
negb
orl
xchg
mov
push
inc
aas
push
nop
push
or
cli
repnz
sbb
lock
mov
and
xlat
out
mov
pop
aas
call
jne
adc
xor
push
pop
fisttpl
aad
pop
inc
mov
xchg
lods
push
add
add
add
push
int3
xchg
into
or
call
test
stos
mov
sub
js
popa
xchg
and
push
das
push
mov
jnp
loope
sbbb
and
cld
add
jge
add
push
push
call
out
inc
adc
sbb
mov
mov
cmp
push
repnz
mov
xchg
mov
shlb
pop
and
out
jg
fidivs
dec
inc
clc
daa
sahf
lret
cmp
sahf
inc
add
inc
cmp
dec
cwtl
lds
icebp
out
cmp
testl
dec
inc
and
lock
jle
inc
and
add
push
add
add
insl
mov
hlt
sar
jns
push
pop
add
cmp
fcomp
jge
or
in
les
or
mov
cmp
cmpsb
add
repnz
cltd
cmp
mov
les
adc
xchg
in
fldenv
jo
and
pop
xlat
pop
and
add
push
xor
add
ss
movsb
mov
add
or
push
cmove
push
jp
mul
jecxz
out
leave
pop
jge
xchg
xor
gs
fsubrs
mov
or
sarb
xchg
out
or
and
mov
lds
or
cmp
das
addb
mov
adc
insb
push
in
gs
or
add
pushfw
mov
push
xor
dec
in
cmp
sbbl
dec
aam
dec
enter
je
loopne
mov
mov
aad
sub
repnz
pop
sub
cs
testb
inc
push
sub
xor
add
adc
sbb
push
aad
fisubs
lahf
mov
enter
sbb
dec
inc
stos
and
mov
test
mov
xchg
add
ds
dec
inc
cltd
stos
inc
pop
jne
andb
hlt
loope
sub
add
xor
inc
and
lock
push
ds
das
les
hlt
add
aam
mov
and
mov
cmpsl
ljmp
sbb
mov
jnp
jp
add
outsb
sub
mov
and
xlat
or
inc
loopne
jnp
add
jl
stos
pusha
rorb
push
ljmp
jmp
movsb
inc
xchg
jae
jecxz
inc
out
fisubs
or
stc
rep
rcrl
xchg
xorb
jecxz
shlb
jp
mov
lock
les
pop
push
pop
or
mov
test
lods
pop
inc
fsubs
es
scas
in
inc
and
cwtl
jo
pop
inc
pop
push
xchg
mov
mov
loopne
mov
mov
fidivrl
push
std
arpl
xchg
leave
cltd
xor
insb
mov
add
push
test
sbb
aam
mov
jbe
mov
or
fstpt
pop
or
jle
shr
fcom
or
xlat
pop
lods
adc
cltd
sbb
mov
sbbl
in
popf
fdivp
mov
fwait
aad
hlt
pop
inc
pushf
subb
mov
das
pop
call
js
push
test
fistps
add
rorb
add
push
xor
mov
adc
mov
and
adc
add
pop
or
mov
or
or
ret
adc
adc
or
push
mov
fsubrs
pusha
inc
mov
lcall
mov
sub
push
and
orb
push
push
mov
sub
cmp
call
jb
bound
shll
add
mov
out
es
xor
fadd
mov
push
jg
lds
mov
add
test
lea
add
aaa
cli
lcall
xor
and
mov
cmp
pop
insb
out
push
or
mov
pushl
stos
mov
jecxz
mov
ljmp
push
jbe
mov
mov
stos
push
popf
in
cmp
sub
aam
adc
addr16
cmc
sti
stos
out
jge
and
or
cmc
or
adc
and
and
add
test
jge
jmp
dec
out
inc
sarl
pop
rcll
inc
push
mov
pop
push
cmp
push
mov
cld
or
aas
and
and
test
idivl
leave
xor
lods
adc
mov
xor
ja
pushf
dec
dec
xchg
mov
loope
xchg
push
jecxz
xor
test
pop
jno
inc
pushl
sbb
mov
lcall
lahf
shlb
stos
xor
mov
inc
bound
rol
imull
xchg
inc
insb
jo
sub
cs
or
sbb
lret
call
push
adc
or
mov
test
scas
loopne
mov
and
xor
add
jmp
das
cltd
adc
bound
test
daa
cmc
dec
fnstsw
test
pop
add
or
inc
adc
pop
lret
cli
lcall
test
mov
inc
or
out
incl
inc
into
lds
decl
inc
out
add
aas
add
fadd
sub
add
popa
andb
outsb
push
les
ljmp
xor
jae
loopne
sub
lret
test
fists
ret
xor
daa
into
dec
rolb
outsl
in
lods
xchg
repz
push
repz
movlps
sbb
icebp
jae
mov
adcb
jl
fidivl
bound
adc
sbb
lret
mov
test
jp
sbb
ret
inc
mov
flds
andb
mov
or
xor
scas
lods
mov
and
mov
add
out
inc
xor
arpl
mov
mov
sti
clc
and
push
adc
insl
dec
adc
in
popf
add
xchg
fisttpl
lods
sub
add
cmp
repnz
sbb
loop
test
and
cld
ja
mov
out
les
std
ret
sub
add
mov
mov
inc
xor
adc
icebp
gs
out
out
pop
arpl
add
fstps
inc
mov
dec
sub
mov
je,pt
and
faddp
nop
sbb
push
dec
lods
cmp
pop
adc
pop
cmp
pop
pop
lock
inc
mov
nop
cmp
cmp
sbb
and
mov
mov
xlat
lods
fcmovne
xor
jmp
lret
js
or
pop
jl
inc
jge
push
nop
push
out
cmp
fadd
cmp
jae
adc
arpl
and
add
push
xchg
xor
bound
mov
jg
dec
xor
xlat
loope
ret
cld
adcb
pusha
add
push
int
xor
sarb
xchg
sub
testb
mov
dec
cmp
fsubrs
cmc
xchg
ret
in
dec
nop
mov
outsl
inc
xor
cmp
dec
add
loop
fdivs
push
sarb
mov
jecxz
add
and
mov
test
ret
and
jne
js
and
les
les
mov
or
xor
out
mov
notb
xor
xor
mov
mov
fsubl
repnz
pop
sbb
add
or
pusha
pop
bound
adc
and
arpl
mov
adc
push
push
inc
mov
addr16
add
xchg
and
or
hlt
mov
xchg
clc
pop
clc
mov
or
mov
jg
sub
fisttpl
dec
scas
rep
sarl
mov
or
jbe
lret
jge
cltd
adc
or
shlb
sub
cmpsb
cwtl
xor
notb
ret
bound
sbb
cwtl
jl
pop
add
push
rolb
leave
lea
push
scas
fiadds
cmp
sbbl
add
xchg
jecxz
les
outsb
loop
ret
and
adc
add
shlb
stos
mov
add
push
mov
adcb
or
xor
aaa
test
mov
xlat
lahf
and
int3
push
outsl
add
fs
xor
sub
push
add
jp
outsb
or
and
fcoms
int
mov
nop
loope
lahf
push
push
adc
aas
adc
adc
add
add
xchg
push
pop
imul
inc
cmp
and
jno
or
pop
rcr
out
mov
dec
mov
push
lock
dec
add
mov
mov
shlb
ja
cli
scas
adc
int
xchg
addb
inc
add
push
xchg
mov
adc
push
mov
shrb
inc
aam
and
arpl
mov
out
rolb
mov
inc
sbb
adc
jbe
je
push
xchg
push
mov
loop
testl
push
and
push
in
in
in
and
jg
hlt
xor
popa
inc
cmp
cwtl
and
orl
mov
dec
inc
adc
xchg
test
jbe
inc
xor
test
push
testl
push
and
mov
sub
outsl
inc
push
iret
adc
shll
add
mov
or
xchg
leave
imul
ret
mov
pusha
push
xor
dec
add
mov
mov
sub
adc
pop
cltd
sbb
test
aad
iret
in
and
sahf
fcoms
add
mov
mov
or
push
mov
pop
mov
div
clc
sub
jo
xorl
lcall
xor
cmpsb
filds
add
in
xchg
es
shl
dec
sub
sub
jno
push
mov
fimull
push
cli
dec
addl
jmp
insb
jne
sbb
call
jge
adc
or
cmp
jg
or
mov
imul
sti
adc
aad
mov
jg
cld
outsl
pop
push
push
xor
sbb
enter
loopne
mov
ret
test
xchg
inc
xor
and
add
and
inc
rorb
jno
mov
lea
or
mov
inc
mov
outsl
cmc
pop
pop
adc
or
add
sti
repnz
jo
jmp
mov
mov
or
fsts
std
jp
jo
pop
xor
ljmp
mov
mov
repnz
mov
mov
cli
lods
or
sbb
or
mov
pop
lret
adc
inc
xchg
and
lock
pop
mov
add
stc
dec
push
mov
jmp
fs
cli
adc
mov
push
icebp
arpl
xor
jg
jle
add
stc
add
mov
jmp
aad
stos
fimuls
shl
inc
push
ds
outsl
lcall
jae
adc
aam
add
outsb
lret
pop
and
movsl
ja
push
jp
es
ljmp
mov
sbb
and
cwtl
xchg
mov
and
ret
ss
pop
xchg
clc
sub
incl
fs
mov
xchg
es
mov
and
insb
ja
fs
add
mov
jg
dec
sarl
jge
cmpsl
dec
xor
dec
dec
loopne
adc
loope
mov
jg
mov
inc
sti
xchg
sub
mov
popa
or
mov
mov
dec
outsl
xchg
cmp
mov
mov
aad
mov
addl
cmp
mov
ret
jle
repnz
cld
sbb
loop
fadd
jecxz
push
ret
mov
cmpsb
pop
cwtl
jecxz
imul
adc
loopne
mov
lret
pop
iret
cwtl
clc
jmp
popa
push
int
add
or
std
mov
dec
and
xchg
push
sub
fcomp
pop
dec
lock
push
push
out
push
inc
jmp
sbb
aaa
outsb
hlt
xchg
sbb
inc
shrl
shll
fistl
xlat
push
loope
fcom
jbe
sbb
xchg
and
adc
pop
sub
dec
lds
stos
pop
pop
mov
add
inc
inc
and
and
or
sub
fcomps
mov
out
loopne
insb
das
lcall
negb
inc
mov
xchg
test
dec
subb
push
adc
mov
enter
push
jbe
sub
enter
or
rclb
inc
fwait
cli
aad
and
xor
adc
dec
daa
cmp
das
sub
out
aas
cmc
xor
mov
sti
popa
lds
mov
push
sbbb
xlat
add
push
lock
mov
mov
xor
sub
cmp
mov
jne
mov
fs
mov
shrl
mull
clc
insl
sub
enter
ficompl
call
jnp
loopne
inc
insb
and
add
inc
push
cmp
fcoml
pop
mov
enter
fdivrl
mov
adc
mov
enter
xchg
test
pop
add
sub
xlat
xchg
ret
jp
insl
ljmpw
and
mov
faddl
xor
out
inc
adc
arpl
and
xor
data16
sub
adc
nop
inc
push
hlt
pop
adc
and
addr16
pushl
or
inc
sub
mov
jle
push
inc
das
cwtl
mov
sub
roll
pop
mov
fiaddl
in
mov
loopne
lret
push
mov
mov
xchg
jp
call
rorl
pop
cmpsb
pop
inc
lock
cmp
or
cmp
inc
testl
mov
adc
loope
insb
lock
add
enter
scas
pop
xchg
jl
enter
mov
mov
pop
fdiv
add
xor
mov
xor
mov
xchg
cmp
movsb
cmpsb
fidivs
rolb
push
push
int3
cmp
sahf
mov
std
orb
rcrl
add
icebp
inc
add
adc
andb
push
mov
rclb
or
adc
or
cmp
push
inc
std
stos
es
jo
fwait
ds
mov
cld
out
test
add
out
lock
mov
loopne
push
push
jle
sub
inc
xchg
pop
push
mov
inc
iret
mov
mov
xor
xchg
lret
xor
jecxz
mov
push
mov
push
lods
sbb
pusha
testb
or
lock
add
cmpsl
stc
fnstcw
rcr
mov
sar
sbb
mov
repz
daa
das
imul
cmpsb
imul
call
ljmp
pop
push
mov
es
fnclex
movsb
and
rol
or
cld
enter
mov
repnz
clc
xor
test
add
jg
cmp
adc
mov
lea
rcrb
jmp
add
sbbb
test
jg
pushl
add
dec
xor
push
xchg
dec
sub
cmc
loopne
and
mov
xchg
pushl
push
lcall
mov
icebp
outsb
pop
and
and
dec
cld
inc
and
adc
add
jg
out
jmp
or
and
sbb
sbb
loop
repnz
xchg
js
and
jmp
cli
mov
iret
lea
xor
out
out
imul
popf
jno
cld
mov
das
insb
call
es
aaa
int
rolb
cmpsb
ret
mov
pop
adc
dec
test
cmp
add
pop
push
mov
out
mov
jmp
sub
insl
xor
repnz
mov
push
dec
inc
movb
icebp
jg
frstor
or
fmull
push
sbbb
imul
cwtl
inc
andb
mov
jnp
inc
adc
movsb
je
ret
rorb
aaa
pop
stos
mov
imul
push
ds
and
inc
mov
mov
sbb
add
sbbl
dec
ja
addr16
mov
shrw
jmp
inc
cmpl
dec
mov
enter
lock
insb
daa
jnp
stos
add
sbb
loopne
hlt
adc
mov
mov
or
sbb
inc
push
and
or
adc
mov
adc
stos
fs
adc
sbb
or
imulb
rcll
mov
mov
or
shll
adc
xlat
mov
sub
je
dec
mov
roll
push
dec
sarb
call
jmp
add
mov
xor
lret
cld
rorl
add
mov
xor
cmp
and
cmp
add
popf
and
or
and
cld
lret
jae
lahf
xor
push
aaa
mov
or
es
jl
test
add
cmp
sub
shl
sbb
dec
out
jo
adc
imul
push
aam
add
xchg
xlat
inc
mov
jp
sub
int
add
push
cmc
and
push
mov
test
xlat
cltd
sub
test
lods
bound
jae
inc
or
es
imull
cmp
dec
pop
aam
repnz
imul
cmp
imul
add
xor
xchg
sub
sbb
or
xor
inc
adcl
xchg
cltd
ret
test
enter
ret
and
out
dec
inc
cmp
loopne
xor
mov
sahf
and
stc
or
fadds
jle
rorb
jge
loope
rolb
xlat
xor
dec
add
fsubl
xchg
loopne
das
push
dec
nop
inc
ficoml
cli
or
mov
inc
add
mov
repz
mov
sbb
xchg
mov
test
or
pop
add
mov
inc
or
adc
mov
push
sbb
popf
lahf
testl
xor
sbb
loopne
gs
pop
lock
bound
rolb
add
mov
loop
and
xchg
adc
jnp
aad
lea
cwtl
arpl
addl
mov
fcom
es
aaa
xchg
clc
mov
sub
inc
cld
test
or
pop
out
cld
sub
mov
fldt
sbbb
jl
mov
pop
sbb
bound
sbb
lock
ljmp
ficompl
xchg
sub
pusha
mov
aam
sub
adc
sub
mov
push
mov
xor
pop
adc
lock
ljmp
and
int3
jp
sub
mov
addr16
sub
jb
dec
xchg
ret
xor
inc
inc
or
ja
orb
mov
popa
stos
jmp
sbb
or
adc
movhps
jnp
and
mull
add
mov
icebp
movsl
pop
jae
pop
cmp
push
xchg
in
movsb
ljmp
jne
inc
adc
dec
add
orb
mov
mov
cmp
push
popf
xchg
in
lahf
sbb
sub
xlat
aas
inc
adc
pop
push
lds
mov
push
or
or
add
jb
pop
test
leave
cwtl
push
ds
xlat
mov
or
call
shlb
addb
mov
sbb
add
and
mov
clc
jae
inc
pop
push
push
scas
mov
push
push
add
lock
or
xchg
cmpsl
int3
pop
jp
out
test
call
ror
add
ja
arpl
and
xor
int3
inc
orb
cmp
stos
ljmp
sbb
add
sub
add
leave
out
push
icebp
mov
jo
push
push
push
stos
cs
push
inc
xchg
lock
dec
mov
push
mov
mov
imul
pop
cmp
pop
or
push
les
add
xor
or
jl
mov
pop
inc
lahf
ljmp
mov
push
dec
push
enter
rorb
or
cwtl
cmc
andl
lret
push
adc
dec
in
cmpsl
sub
cwtl
push
mov
movsb
fwait
cmp
or
and
ja,pn
or
loop
sub
inc
out
lock
mull
mov
dec
xor
add
sti
fsubrs
or
pop
adc
mov
sbb
insb
xlat
lods
arpl
pop
aaa
popf
cs
sbb
fcompl
xor
data16
inc
sahf
mov
mov
call
sub
or
sbb
dec
push
and
cwtl
or
repnz
push
pop
cwtl
pop
mov
inc
add
jo
and
mov
mov
int3
pop
mov
mov
outsl
jb
jbe
push
cmp
jne
in
xchg
or
xchg
into
into
lock
js
push
pushf
adc
dec
mov
cld
inc
cld
cmp
test
xor
lcall
cltd
pushf
imul
dec
pushf
bound
loop
orl
addr16
out
fs
adc
lock
repz
aam
mov
int3
popa
adc
inc
adc
mov
or
sbb
inc
fs
fisttpl
push
je
jmp
into
in
fwait
lock
das
les
and
xor
gs
adc
outsb
inc
xchg
nop
std
or
mov
lea
and
aas
mov
push
add
adc
sub
add
test
inc
xor
pusha
push
adc
adc
or
ret
mov
jb
push
les
mov
test
mov
cmc
int3
dec
dec
test
js
in
push
lods
pop
sub
out
sbb
mov
mov
xchg
and
jno
cltd
and
xor
cli
icebp
mov
or
lret
sbb
mov
mov
rcrl
push
loop
icebp
or
pop
sar
jp
data16
inc
mov
push
sub
jae
mov
push
xchg
test
jge
adc
adc
std
lods
ficoms
cmp
and
xor
dec
fildll
mov
fstpl
icebp
leave
andb
idivb
jnp
jp
push
fsubrs
or
mov
push
cmc
xor
mov
test
xchg
das
mov
and
rorl
in
mov
xor
lds
test
adc
lods
xchg
bound
popa
push
jp
fs
xor
pushl
ljmp
add
stos
aam
mulb
xchg
lea
pop
mov
and
icebp
test
test
mov
test
fldcw
mov
mov
cmp
incl
fdivl
add
sub
adc
test
sahf
cmc
dec
adc
aaa
inc
icebp
pop
lahf
xlat
rcrb
stc
add
sub
ja
mov
repnz
cmp
adc
in
pushl
add
insl
inc
int3
mov
jb
std
mov
or
jno
sub
pop
inc
adc
jp
inc
repz
aad
ds
xor
in
cmc
insl
sub
mov
pop
data16
and
add
sbb
loop
add
es
mov
adc
fnstsw
adc
bswap
in
jl
dec
dec
add
lahf
adc
xchg
push
jmp
mov
call
push
int
or
adc
popa
adc
mov
push
pop
icebp
ljmp
mov
rolb
mov
shrl
adcl
dec
pop
cmp
mov
mov
das
fstl
shll
xchg
lea
add
mov
in
ds
inc
pushf
iret
ret
in
add
push
inc
mov
lcall
add
iret
adcb
jp
rcll
or
pop
ljmp
ret
adc
push
adc
sarb
xor
pop
subl
shlb
icebp
mov
push
mov
adc
mov
mov
add
sub
jp
and
pop
xchg
loopne
aam
loope
inc
add
cmpb
mov
add
into
pop
stos
jp
dec
int3
aad
or
ljmp
test
icebp
dec
cltd
mov
pusha
andl
push
add
add
push
jo
add
and
imul
and
or
loop
call
repnz
and
movsb
fimull
xchg
or
scas
dec
xor
cmp
mov
jp
mov
lds
js
out
pusha
jno
jge
ljmp
sbb
and
rcr
xchg
jmp
and
sbb
inc
int
ljmp
sbb
xor
xchg
or
mov
ds
xchg
pop
adc
cmp
xlat
stc
scas
sahf
and
mov
ljmp
or
jnp
xchg
mov
push
sub
outsl
add
arpl
ret
scas
sarb
cmp
outsl
sbb
shlb
xor
test
jb
rolb
mov
xor
mov
sub
insl
dec
jecxz
sbb
jmp
inc
dec
xor
cmp
adc
cmp
sub
adc
or
push
lcall
sbb
loope
jmp
adc
and
push
push
cmp
and
insb
enter
adc
sahf
arpl
adc
stos
scas
pushf
test
pusha
add
jecxz
dec
call
jmp
inc
roll
call
outsb
add
std
icebp
test
add
out
add
dec
int
or
sub
xor
or
outsl
jnp
adc
or
mov
stos
xor
enter
into
addb
lock
loopne
push
and
incl
sbb
jmp
add
push
hlt
out
cmp
jp
push
ret
ja
dec
lcall
push
mov
mov
addr16
scas
inc
xchg
sbb
out
or
mov
xchg
movlps
imul
xchg
insb
mov
stos
bound
xor
js
adc
rolb
std
mov
in
or
mov
mov
rclb
test
cmp
enter
sub
or
scas
push
jbe
inc
outsb
inc
lock
xlat
sub
pop
fiaddl
icebp
pop
and
mov
jbe
add
jmp
or
out
adc
inc
arpl
add
sbb
es
or
sub
add
mov
sbb
and
adc
cltd
mov
mov
jp
data16
out
fbstp
ds
js
rcr
pop
and
lret
jmp
lods
lcall
cmc
sbb
dec
loop
mov
pop
jle
hlt
push
inc
pop
inc
rdpmc
mov
mov
and
push
mov
std
mov
mov
and
sbb
addb
fstpt
jecxz
ffree
sub
inc
mov
dec
ficoms
cmpl
pop
cld
add
lahf
pushf
push
or
iret
push
fcomps
jmp
cld
pushf
ljmp
or
jae
dec
out
aam
sbb
outsb
lds
shll
mov
mov
add
jne
sub
jg
scas
xor
arpl
pop
movsl
mov
imul
or
push
adcl
mov
std
out
jg
dec
cltd
jl
pop
sub
sti
jl
jmp
inc
cs
insb
ret
cmp
sub
ds
pop
ljmp
imul
and
push
pop
loopne
movsl
out
jne
lods
jne
xor
add
fldt
and
in
add
xchg
cmpl
pushf
jg
mov
shlb
stos
adc
jg
repz
jb
inc
add
mov
insb
sbb
sbb
fwait
jb
xor
sbb
adc
cmpsl
and
push
pop
dec
jl
jg
cli
pop
sub
lock
mov
xor
push
jmp
inc
fwait
aad
dec
mov
leave
mov
sarl
jecxz
jecxz
mov
fs
stc
jge
call
mov
add
mov
arpl
mov
outsb
cmp
pop
fwait
mov
stos
ret
pushl
pop
inc
jge
js
sub
jo
jo
adc
incl
inc
js
add
mov
pop
dec
je,pn
fs
out
fsts
outsl
pop
xchg
xchg
shlb
out
iret
pop
and
jge
mov
pusha
xchg
jmp
push
fiadds
shlb
fisttps
loop
mov
xchg
dec
mov
mov
js
adc
pop
roll
fldt
pop
add
lcall
jmp
stc
les
sbb
dec
adc
lcall
xor
nop
test
lods
dec
pop
call
aad
push
sahf
add
jne
mov
mov
stc
mov
push
cli
data16
and
das
icebp
mov
cmpxchg
dec
ds
outsl
xor
and
std
addr16
jl
and
push
push
les
call
pop
fdivrs
push
sub
std
push
or
cmp
cmp
sub
pusha
rclb
sbb
popf
stos
ss
adc
dec
daa
ljmp
std
or
test
and
enter
jnp
dec
adc
mov
js
sbb
popa
sub
rclb
or
aaa
inc
test
sub
cmp
sbb
fistpl
mov
dec
jne
jmp
jecxz
mov
dec
shll
cld
mov
xor
call
hlt
popf
sub
inc
pusha
push
mov
mov
cli
loop
pusha
adc
dec
lahf
or
stos
dec
bound
xor
cli
dec
sub
cmp
xchg
lock
jg
sbb
jmp
aad
fisttpl
repz
add
sub
xor
cli
lcall
cli
mov
push
out
daa
jg,pt
xchg
clc
dec
push
orl
outsb
inc
mov
movsb
bound
std
popf
inc
out
lcall
loope
ret
decl
addr16
popa
jnp
inc
push
push
xchg
mov
xor
and
sahf
add
pop
mov
aam
adc
and
cmp
aad
ret
aad
stos
mov
lcall
fisubrl
xchg
mov
mov
das
mov
fildll
stc
aaa
push
add
enter
jo
xchg
mov
and
lds
inc
cld
mov
pop
xchg
leave
les
push
dec
mov
xchg
arpl
push
add
add
mov
ljmp
xlat
ss
sub
cmc
or
mov
or
dec
xor
pop
pop
adc
jnp
insl
push
lods
mov
aas
les
mov
mov
cs
mov
in
js
std
mov
aas
pop
aad
fstpl
sub
icebp
call
movsl
mov
push
sub
mov
inc
jnp
jp
jg
jne
mov
sbb
sbb
add
xchg
mov
negb
inc
xchg
sbb
or
sbb
inc
scas
pop
nop
jle
push
pop
mov
ljmp
jecxz
das
lds
xorl
decl
lcall
push
dec
inc
insl
lret
sbb
xlat
cltd
push
xchg
and
xchg
add
ljmp
or
jl
aad
ror
lcall
movsl
jle
data16
shrl
popa
xor
test
ret
and
arpl
in
jle
mov
cmp
scas
mov
push
push
jecxz
flds
jge
and
rcll
les
aas
xor
or
mov
aaa
cld
sbb
iret
icebp
xor
push
push
gs
imul
or
into
mov
push
inc
and
dec
cld
push
and
out
loopne
adc
inc
push
jo
jnp
fnsave
daa
mov
outsl
xchg
xor
push
loopne
negb
jns
out
int
and
clc
inc
pop
lods
jle
jecxz
mov
add
xor
sbb
adc
and
push
xor
mov
jne
cmp
std
xchg
cmp
add
inc
repz
test
insb
sarb
int
jmp
fstps
or
push
stos
insl
enter
fdivl
mov
arpl
inc
enter
cli
sbb
xor
das
arpl
push
fstps
ffreep
shrl
pop
gs
sub
call
adc
inc
mov
cmp
push
jno
fildl
fucomip
sbb
add
xchg
xor
inc
inc
popa
and
pop
fdivl
ss
lahf
sbb
sbb
cmp
xor
mov
jne
sarb
call
mov
pop
lds
or
mov
pop
loopne
loopne
push
repz
inc
les
dec
std
fistpll
mov
mov
imul
rolb
pop
add
and
and
add
and
incl
and
add
enter
clc
lahf
pusha
test
or
cld
or
fimull
dec
jle
arpl
ret
jno
andb
inc
sti
and
mov
es
mov
test
sarl
cld
fbld
or
jb
sbb
pop
inc
push
nop
cld
incl
das
addb
xlat
pop
ljmp
into
jo
in
jb
jl
jne
fstl
xchg
add
clc
js
xchg
insl
xor
jp
mov
lahf
add
jecxz
push
xchg
cmp
sbb
lock
repz
sahf
fdivr
aas
lock
cmpsl
xchg
cmc
jl
call
addb
add
aaa
incb
pop
mov
es
shl
aas
or
jae
das
cmp
lock
sub
adc
sub
lds
imul
cmp
sarb
or
mov
mov
lcall
in
sbb
bound
nop
cltd
mov
sbb
jg
fcomi
mov
popa
mov
pop
xchg
aas
cmp
and
aam
cmpsl
mov
inc
stos
xor
hlt
mov
xchg
cld
cwtl
jge
xor
fisttpl
aas
cmp
sub
ret
fldt
jle
lds
mov
fbstp
add
mov
push
decb
adc
push
mov
rorl
cli
test
shll
cltd
ret
xchg
cld
mov
and
push
decl
das
adcl
les
mov
shlb
mov
pop
loopne
into
mov
pop
and
int3
pop
or
ficompl
insb
cmp
or
add
into
sbb
xchg
hlt
add
insb
scas
cmp
test
aas
inc
pop
popf
lcall
mov
ficompl
dec
jmp
pop
push
push
pusha
mov
mov
repnz
rorl
cmovb
js
cmp
js
loope
jle
inc
mov
mov
pop
int3
aad
xchg
das
call
gs
sbb
mov
subl
decl
mov
cmp
xchg
mov
xchg
fwait
push
fistpll
push
push
mov
sub
inc
mov
clc
sub
mov
clc
daa
js
inc
cwtl
cmp
decb
mov
shrl
cmpsb
push
xlat
sahf
fs
lea
xor
adc
mov
mov
imul
jecxz
xor
dec
cmp
mov
loop
repz
stos
cmpl
adc
pop
test
fisubrs
or
inc
addr16
in
sbb
xorl
inc
imul
pop
mov
xchg
sub
test
aas
loopne
pop
ljmp
cmpsl
leave
push
call
pop
sbbl
decl
inc
test
pop
fwait
push
test
outsl
int3
dec
lret
insl
xor
ds
push
dec
dec
cmp
sub
lret
cli
jle
in
xchg
int
insl
xchg
mov
das
std
fsubrs
sub
cmp
and
hlt
fisttps
leave
push
and
adc
mov
lcall
mov
push
leave
shrl
dec
or
inc
mov
mov
lret
sub
xor
inc
aam
aas
cmpb
neg
xor
loopne
inc
aas
xor
pushl
push
push
and
add
mov
pop
or
or
inc
adc
shrl
push
adc
popf
jg
out
or
push
add
jnp
or
orb
push
mov
imul
pop
xor
sub
out
add
jns
jg
xor
push
test
bound
adc
or
addb
jne
adc
movsl
js
mov
sbb
add
out
lock
out
bound
into
sub
pushl
adc
and
pushf
es
xchg
testl
dec
out
pop
shrb
std
inc
pop
jae
dec
jae
push
mov
mov
mov
add
andb
sub
mov
mov
sbb
test
mov
push
push
sbb
push
loopne
sub
ja
insb
outsb
sub
sub
stos
dec
rcll
or
push
fcoms
inc
lock
xchg
bound
lret
subb
das
and
insl
push
dec
cmp
arpl
cmpb
push
add
testb
in
dec
sub
xchg
jle
cmp
mov
sti
cmp
aas
adc
dec
xlat
mov
cmp
lock
cmc
in
popl
adc
incl
cmp
popa
stc
dec
mov
pop
test
negl
test
xchg
aam
mov
sbb
dec
dec
fistpll
sbb
or
test
push
popa
pop
or
popf
popf
sbb
icebp
fucomip
pushl
lock
enter
xchg
add
das
mov
sub
dec
cs
adc
das
xchg
push
fisubl
sub
xchg
pusha
andl
fs
sub
mov
das
sub
testb
inc
fwait
repz
sub
subw
or
insb
mov
jmp
lea
fstpt
repnz
push
jge
dec
subb
pop
rol
sbb
cmp
adc
xlat
jne
stc
shlb
js
lds
lods
dec
xchg
shrl
push
sti
aaa
mov
daa
sub
pop
sub
shrl
pop
pop
cmpsl
loop
icebp
pop
icebp
sbb
mov
xor
mov
mov
out
mov
cli
mulb
sub
sub
fisttpl
cld
mov
mov
ss
jo
jb
icebp
sar
add
lods
mov
loope
or
fidivrs
pop
mov
push
dec
pop
xlat
sbb
arpl
sub
filds
ja
add
sub
mov
js
movsl
or
adc
dec
imul
xchg
stos
loop
stc
sbb
popa
addr16
test
rolb
and
push
fdivrl
addr16
cli
aaa
fiadds
stos
or
enter
mov
mov
test
mov
dec
je
xchg
mov
xchg
cmp
outsb
xchg
adc
mov
mov
lcall
lods
xor
int
sbb
mov
jl
jmp
sbb
jg
in
repz
lds
std
movb
loopne
test
xchg
lcall
movl
insl
jp
es
icebp
incl
sti
stos
push
or
mov
push
sahf
hlt
insl
cmc
inc
test
lock
xchg
xchg
push
xor
push
in
mov
andb
or
in
mov
jno
xchg
xor
pop
jmp
xchg
mov
fcompl
ljmp
movsb
sahf
sti
mov
jo
mov
push
pusha
in
ret
idiv
lods
push
jmp
push
mov
xor
lret
rcr
xchg
rorl
add
mov
push
mov
in
rcrb
testb
xor
leave
mov
clc
mov
xchg
sub
pop
call
mov
pop
pop
xchg
les
mov
jl
push
lahf
in
out
adc
fucom
add
jg
jmp
cmpb
in
mov
jo
jno
push
add
shl
pop
lahf
fisttps
mov
nop
jne
repz
stos
pop
loope
loope
pushl
or
cmpsb
ficompl
bound
pmuludq
pop
jnp
cmc
jo
enter
adc
in
adc
sub
pop
test
aaa
adcb
ret
adc
and
and
clc
mov
dec
das
lcall
lods
sarb
pop
adc
mov
out
out
push
cld
cld
jp
in
xchg
xchg
jle
and
adc
test
sbb
sub
cmp
mov
push
or
roll
inc
cmp
jg
jno
mov
jbe
mov
push
loope
out
pop
fimull
clc
pop
cmc
xchg
das
icebp
pop
jmp
sub
decl
icebp
insl
adc
mov
je
mov
sub
sti
sbb
sub
mov
cmc
mov
cmp
adc
lock
mov
jb
fsubrl
or
rolb
lock
cmpl
stos
out
fisubrl
and
sbb
mov
outsb
push
push
sub
pop
sbb
adc
mov
pop
mov
and
pop
pop
pop
hlt
inc
aam
lods
cmc
and
bound
or
xor
adc
stos
test
push
dec
sbb
das
daa
aaa
push
rolb
fsubs
ficomps
sbbl
pop
xchg
je
cwtl
inc
imul
pop
inc
mov
out
dec
sub
mov
cmp
cmp
pop
jmp
int
dec
or
sbb
add
push
push
loopne
idivl
clc
push
outsl
out
aam
jge
repz
mov
push
mov
adc
cmpsl
cmp
call
mov
xor
pop
and
fsubrl
adc
in
sbb
lret
fidivrs
outsl
popf
adc
or
add
loopne
leave
arpl
pop
lods
jo
mov
lahf
aam
inc
scas
push
repz
ss
sbb
or
jmp
xor
mov
jmp
repz
adc
add
popf
push
loop
es
add
orb
lock
add
mov
lock
sbb
loopne
adc
sbb
sub
out
or
cld
sub
lcall
mov
xchg
faddl
sub
cmp
or
popf
pop
sbb
nop
ljmp
jmp
cs
cmp
push
iret
mov
pop
xchg
icebp
adc
and
pop
inc
jge
add
adc
inc
idivl
sar
int
jo
out
mov
mov
add
out
xchg
clc
movsl
jle
add
sahf
dec
orl
pushf
xor
repz
jecxz
aas
mov
add
push
mov
sbb
inc
std
lret
popf
jl
aas
dec
outsb
and
add
sbb
sbb
mov
call
pop
jg
scas
xor
xor
daa
mov
lret
leave
bound
or
incb
je
add
mov
out
mov
lods
hlt
and
sbb
or
cmpsl
sbb
pmaddwd
popf
addr16
test
jg
shlb
add
adc
ds
and
icebp
mov
add
out
imul
insb
xchg
in
lock
cld
dec
or
pop
cltd
xchg
push
les
ljmp
rol
stos
xor
xor
enter
jg
xor
out
mov
out
out
dec
das
inc
rol
pop
int
jecxz
mov
jae
aad
sti
les
pusha
xchg
push
ljmp
cmp
sub
mov
pop
or
lea
mov
repnz
outsl
movsl
cmp
mov
or
cld
outsl
sub
or
cmp
push
jae
popa
imul
call
jmp
sti
std
lahf
loopne
xor
mov
js
icebp
fldt
add
lahf
dec
mov
in
es
or
testb
xchg
fiadds
cmpsl
or
xchg
addr16
test
cli
add
jmp
or
out
mov
shl
in
mov
pop
jecxz
sahf
jg
or
push
xchg
mov
hlt
adc
popl
jge
arpl
sbb
dec
dec
push
lret
jmp
das
push
inc
sar
adc
and
add
inc
dec
sbb
or
cmp
xor
inc
pop
out
cmp
mov
or
fisubl
xor
mov
fildll
push
push
popl
xchg
adc
ss
xor
push
cwtl
xor
femms
jbe
sub
xor
repz
xor
jnp
stc
cmpsb
out
repz
mov
scas
pop
shrl
cli
sbb
fwait
ss
xchg
inc
mov
adc
leave
or
inc
lds
ljmp
leave
scas
add
ret
mov
pusha
jb
mov
imul
das
add
pop
jbe
inc
sub
outsl
jmp
fyl2x
psrld
out
inc
xchg
pop
ljmp
cmp
outsl
call
add
or
cli
outsl
test
iret
dec
cmc
xchg
push
and
aaa
test
sub
faddp
es
aaa
les
ror
jge
dec
add
scas
inc
call
aas
icebp
lea
mov
sub
xchg
mov
push
sub
ja
sbb
test
rclb
ljmp
xor
mov
push
xor
sbb
lahf
xchg
add
fistps
push
rorl
mov
icebp
add
dec
dec
icebp
imulb
popa
mov
xchg
aas
inc
mov
mov
lret
sbb
outsl
inc
add
shlb
mov
fwait
mov
adc
fs
add
push
cwtl
mov
mov
outsl
call
mov
das
sub
pop
mov
lret
pushl
cmp
inc
pop
lahf
lds
push
js
jne
cld
sub
and
mov
and
jecxz
sub
test
addl
mov
jl
out
adc
sub
add
repnz
sbb
pop
inc
mov
into
adc
out
or
jl
push
jmp
sub
daa
jg
sub
pop
dec
insb
shlb
adc
mov
sbb
ret
jl
pop
test
stc
pop
int3
lods
jne
mov
insb
sub
movsb
mov
cld
jg
sub
loope
push
ret
loopne
pop
and
mov
out
sub
jp
adc
adc
xchg
stos
and
aaa
sub
xor
jecxz
lods
mov
mov
xchg
mov
xchg
setge
in
sub
mov
add
cs
or
out
jl
dec
push
mov
xchg
and
cmp
fiaddl
jo
es
aas
shl
jne
mov
incl
mov
inc
popf
cmpsb
pop
cwtl
mov
in
jmp
imul
xchg
subl
cmp
aad
sub
xchg
lea
jae
aaa
jle
sub
test
dec
mov
pop
sub
adc
pop
mov
pushf
push
mov
or
sbb
shrb
cmc
roll
and
dec
aad
jg
mov
fwait
and
xchg
pop
sbb
or
jo
push
and
mov
sub
orb
dec
xchg
fwait
mov
push
cli
mov
call
data16
call
ret
inc
mov
dec
test
adc
xor
mov
aas
lock
jne
pusha
push
inc
mov
and
fsubrs
call
and
test
inc
mov
test
push
pop
in
lcall
cltd
jge
jp
push
insl
out
xchg
das
add
int
enter
mov
mov
pushl
xchg
xor
test
in
pop
cmpsl
mov
mov
les
stc
scas
outsb
int
je
xchg
xchg
stc
test
dec
xlat
and
mov
sub
pop
clc
sub
out
pop
xchg
stc
xchg
jns
inc
adc
sbb
jg
and
in
jecxz
cmp
xchg
pop
shll
and
mov
outsl
icebp
pop
aam
xchg
push
and
jnp
lea
sbb
mov
push
cmpsl
out
es
mov
sub
les
hlt
fimull
mov
cld
lods
push
add
addr16
mov
dec
mov
pop
je
shll
push
ljmp
mov
mov
test
sbb
in
inc
flds
xchg
ds
jmp
loope
xor
loop
xchg
xchg
cmp
jecxz
js
fimull
jg
lds
or
sar
insb
mov
rcrb
iret
mov
sbb
das
dec
jmp
loopne
jp
loopne
imul
cmp
pop
notb
pop
and
mov
in
jge
sub
mov
pop
jbe
fbstp
cld
or
inc
cmp
sub
fdiv
mov
popa
daa
shlb
ss
xor
aad
test
ja
dec
addr16
pop
rclb
pop
repnz
cmpsb
decb
pop
cli
or
dec
into
add
mov
add
orl
inc
icebp
movsl
and
es
adc
clc
xchg
push
pop
insb
push
sub
sahf
sub
fdivrs
xlat
pop
cld
popa
cld
cltd
lret
inc
mov
push
vshufps
and
call
sbb
sub
popa
rcll
lahf
push
cmp
jne
jg
mov
cmp
dec
mov
shll
sbb
inc
or
jbe
mov
test
insb
add
jnp
mov
xchg
clc
rolb
fwait
orb
rcrl
fdivl
mov
mov
cmc
mov
xor
sbb
xor
into
cli
xchg
clc
or
repz
xchg
scas
sbb
repz
jmp
call
rcl
scas
mov
test
xchg
stos
loopne
push
lods
clc
mov
stos
push
add
mov
pop
loopne
push
test
mov
ficoms
pusha
aad
jo
rolb
or
jne
adc
xlat
jbe
sar
pop
es
inc
rorl
inc
je
dec
jl
mov
jg
mov
cmp
int
inc
mov
hlt
icebp
test
pop
mov
mov
mull
pop
sub
frstor
sbb
inc
push
aas
loop
and
xor
sbb
inc
enter
fbld
jecxz
decl
sub
or
dec
outsb
xlat
hlt
inc
clc
jns
or
fbld
mov
popf
xchg
xor
insb
jg
xchg
ja
pushf
add
xchg
push
es
sbb
jno
sbb
loopew
addr16
cmc
adc
aaa
shll
sbb
sahf
out
xchg
decl
sbb
jno
cli
daa
push
xor
aaa
clc
mov
test
push
les
mov
or
xchg
and
std
adc
jb
push
mov
outsl
aam
ljmp
mov
test
out
mov
lahf
mov
sbb
int
cltd
shl
xchg
jb
push
cmp
loopne
enter
test
clc
out
aad
xchg
fldl
jno
aad
stc
lret
sbb
or
sub
adc
ja
xchg
jb
lcall
sbb
sahf
xor
push
sub
stos
dec
jmp
mov
addr16
mov
dec
xchg
dec
insl
mov
popa
sbb
xchg
mov
adcb
jo
xor
sbb
in
xor
test
repz
cli
fucomip
aas
stos
and
add
lcall
out
nop
test
push
sbb
mov
les
pop
xchg
sbb
jp
sbb
jbe
or
mov
aam
xchg
adc
call
and
sbb
pop
int
les
push
and
test
cmp
cmpl
into
and
sub
inc
or
sub
xchg
test
dec
hlt
mov
and
pop
cmp
fisttps
adc
sub
fiadds
mov
fcoml
and
push
fsubl
mov
arpl
xchg
into
dec
inc
and
dec
push
subb
stos
adc
or
add
fldt
pop
loope
aaa
mov
xor
xor
out
jp
push
pushf
dec
add
or
add
mov
in
add
mov
cmp
or
ret
inc
inc
test
js
data16
sbb
arpl
inc
jno
dec
sub
add
inc
cmp
fdivrs
jg
inc
cmc
orb
pop
daa
div
mov
adc
in
push
adc
pop
std
mov
loopne
shrl
imulb
test
sbb
nop
push
cmc
add
in
je
jp
sbb
lods
dec
jo
pusha
pop
les
lods
add
mov
sbb
jg
cs
jge
xchg
mov
xlat
addb
call
hlt
and
sbb
stc
mov
add
or
xor
mov
cmp
push
push
lahf
fisubs
add
xchg
xor
repz
fimuls
mull
stos
gs
add
fsin
mov
cltd
mov
adc
inc
sbb
inc
dec
fdiv
das
shl
aam
pop
xchg
adc
adc
into
dec
inc
sub
pop
mov
mov
push
and
xor
inc
jmp
add
ret
inc
mov
adc
sub
insb
enter
pop
inc
inc
rolb
js
push
rolb
mov
dec
sbb
dec
push
ficoml
test
xor
inc
mov
andb
pop
inc
push
inc
mov
or
dec
sarb
add
fnstenv
sbb
add
sub
add
sbb
fldl
xchg
adc
add
adcb
pop
add
adc
lock
adc
add
cmp
jbe
or
mov
push
adc
hlt
test
dec
inc
psrlw
not
ss
leave
fwait
push
xor
mov
adc
push
pusha
mov
cmpsl
mov
mov
pop
mov
push
out
xor
movsl
ret
into
add
adc
into
cmc
xchg
call
mov
jne
into
mov
and
popa
mov
add
xor
mov
sbb
inc
and
adc
inc
sbb
out
pop
xor
push
hlt
dec
and
test
pushf
fs
xor
sahf
or
and
dec
push
inc
test
push
xchg
push
sbb
aaa
mov
pop
sti
jmp
xrelease
fdivrs
fisubs
dec
or
test
adc
or
pop
lds
add
sub
popf
aas
ret
insl
mov
mov
outsl
or
popf
adc
mov
out
mov
push
sub
loopne
mov
push
rcl
add
jbe
mov
test
dec
aam
add
or
test
cld
int
test
cmp
cbtw
inc
push
loopne
pop
mov
push
cwtl
mov
mov
add
cli
jge
jae
dec
mov
dec
adc
daa
inc
les
test
out
mov
sub
mov
cmp
iret
push
lea
mov
sbb
xor
mov
add
scas
out
jo
andb
pushl
adc
std
add
cld
push
push
or
add
sub
sub
xchg
cltd
inc
cs
imul
pop
mov
mov
cmc
clc
rorb
pop
inc
popl
or
popa
xchg
mov
pop
adc
mov
xchg
jne
ret
add
mov
add
adc
movsl
dec
adc
pop
inc
ror
inc
jo
mov
loop
insl
jp
sbb
lods
push
cmpb
in
mov
mov
das
les
mov
xchg
call
inc
movsb
cltd
cmpsb
mov
mov
jecxz
ss
mov
clc
lret
adc
ljmp
sub
lds
sub
mov
pop
sub
xor
sub
outsl
shl
pop
push
arpl
repnz
insb
push
into
in
and
hlt
lods
push
mov
imul
mov
jge
sbb
cs
push
sti
inc
ret
adc
lret
fneni(8087
mov
mov
shll
push
sbb
cs
and
xor
jae
lcall
out
push
jg
xlat
fdivr
clc
and
cs
loopne
xchg
cmc
xor
imul
pop
adc
incl
cmp
sbb
pushl
rclb
hlt
lds
repnz
xchg
xor
push
rorb
ret
das
inc
fimull
lods
jns
into
stos
push
cmp
push
cmp
cwtl
outsl
dec
imul
and
jbe
in
incl
outsl
or
gs
push
fisubl
xchg
dec
pop
mov
cmp
add
jmp
hlt
shrb
rolb
enter
sub
dec
fistl
enter
hlt
iret
addb
add
in
mov
push
mov
inc
add
rorb
push
sbb
mov
push
sub
enter
lock
mov
stc
push
repz
or
clc
push
shll
fiaddl
push
and
jg
call
add
sahf
xor
pop
mov
ljmp
add
push
fs
jg
jno
fsubp
mov
and
and
add
fildll
adc
jmp
decl
test
ja
popa
sub
add
push
push
sub
rol
inc
into
in
jle
test
scas
dec
int
sbb
pop
add
jl
mov
sbb
and
int
cli
pop
fildl
sub
sbb
and
xchg
and
pop
adc
pop
pop
adc
mov
std
cmpsb
mov
sbb
movsl
ret
inc
xor
into
pusha
sbb
push
mov
cmpsb
add
mov
cli
mov
xor
incb
xchg
adc
sbb
ds
out
fwait
in
mov
leave
add
mov
jg
aam
repz
pop
adc
sbb
in
jge
cli
add
sbb
outsl
inc
insb
imul
ljmp
push
or
xchg
cs
mov
lret
addr16
push
mov
inc
cmp
pushf
les
inc
mov
int
adc
adc
mov
push
xchg
xor
out
movsb
cmp
push
lds
jns
xor
push
call
in
inc
nop
js
clc
push
push
adc
and
in
repnz
adc
xchg
add
stos
stos
addb
xchg
mov
mov
jae
rolb
push
mov
push
xchg
adc
push
add
cmc
mov
shl
or
outsl
fdivs
sarl
sub
or
add
in
cmp
repnz
jnp
aad
adc
fsubl
subl
or
pop
dec
or
lds
mov
pop
mov
stos
cmp
jl
pop
adc
xorb
call
jp
jg
sbb
imul
push
dec
or
xchg
aad
push
sub
dec
or
sub
adc
sbb
cmp
mov
and
rclb
xor
fidivrs
cmpb
sub
shll
les
ljmp
movsl
rorb
lock
add
loop
out
imul
iret
xor
inc
testl
loopne
sbbb
cli
cmp
push
fcom
inc
mov
insb
loopne
xor
in
push
pop
push
ja
jg
cmc
cmp
js
imul
outsl
insl
dec
mov
xadd
jbe
or
notb
adc
mov
push
mov
shrl
and
popa
pop
xchg
adc
aas
and
pop
add
test
mov
cmc
aaa
adc
push
push
xchg
jmp
and
fisttpl
add
mov
adc
add
je
add
ljmp
lret
cwtl
inc
and
pop
leave
ss
mov
and
lret
jecxz
cmp
icebp
incl
sub
push
add
sub
lds
jo
aas
sbb
int
xor
xchg
sub
call
js
pushf
call
xor
cmp
or
cmpsl
push
cld
lods
jmp
add
test
clc
push
mov
mov
cmp
aad
dec
inc
dec
sub
sub
jp
icebp
movsb
xor
es
out
and
dec
mov
jg
push
incl
sub
pop
sub
sub
pop
pop
fs
stos
arpl
icebp
outsb
repnz
sub
test
add
push
adc
mov
sbb
test
pushl
or
cmpsb
add
cmp
dec
into
insb
jg
and
jle
add
inc
in
mov
bound
sub
ja
push
mov
add
mov
scas
mov
xchg
clc
in
add
pavgw
aaa
push
jae
mov
xchg
sub
cmp
sbb
je
sub
and
mov
aam
inc
jae
stc
jl
roll
mov
aaa
jmp
dec
adc
je
mov
add
adc
inc
pop
xor
inc
ljmp
ljmp
aas
inc
adc
mov
jp
ret
mov
inc
rep
flds
ds
aas
xor
jmp
hlt
sbb
inc
rcrl
loope
jg
mov
adc
mov
pop
movsl
imul
test
mov
lret
dec
sub
push
mov
lret
sbb
stc
vsqrtsd
add
inc
add
into
test
std
mov
fistps
and
xchg
loope
jmp
sub
mov
mov
sub
inc
aas
outsl
fsubl
test
pextrw
outsl
sub
sahf
fldt
xor
movsb
adc
push
pusha
jae
jg
add
jecxz
xchg
add
daa
loope
mov
xchg
mov
je
sbb
lcall
pop
jl
mov
in
jge
inc
outsb
jl
mov
or
or
dec
shlb
xchg
pop
jl
jne
mov
cld
incl
adc
mov
es
jmp
cmp
js
mov
pop
adc
daa
jns
add
inc
mov
jbe
or
test
dec
das
std
mov
push
pop
inc
add
pop
xchg
mov
imul
std
call
enter
mov
testl
lret
ss
int
data16
sahf
rorl
mov
xchg
lret
les
adc
xor
lret
mov
add
pushf
add
mov
inc
ret
add
sahf
and
and
or
push
sub
pop
pusha
mov
inc
mov
sub
arpl
sar
dec
inc
std
in
rorl
add
outsl
cld
fnstsw
inc
xor
inc
adc
repz
jno
adc
add
push
xor
inc
icebp
dec
daa
cmc
popa
cltd
mov
test
dec
clc
sbb
loopne
dec
push
dec
scas
mov
jle
fdivl
sbb
call
fsubr
popa
and
in
adc
pop
jl
sbb
arpl
js
std
cs
mov
sbb
faddl
rcrl
and
sub
mov
jle
in
add
movsl
lret
pop
mov
push
or
shlb
ret
sub
xor
cmp
mov
jg
les
xchg
stc
jnp
cltd
adc
lcall
mov
sub
pop
mov
xchg
mov
arpl
dec
or
fs
push
mov
mov
inc
clc
cmp
xor
pushf
pop
jmp
data16
inc
idiv
jmp
je
mov
lret
rolb
rolb
inc
mov
test
jg
in
add
dec
sarl
xor
int
shll
aaa
or
clc
iret
xlat
es
enter
mov
pop
mov
or
addr16
jl
push
xchg
in
dec
lea
cmp
jg
xchg
mov
mov
cmc
sbb
xchg
jno
inc
mov
roll
out
add
rcrb
out
or
xor
pop
mov
xchg
lods
inc
lock
sbb
xchg
lahf
or
idivb
jne
in
mov
xorl
cwtl
adc
push
mov
xchg
or
movsb
icebp
gs
mov
fcoml
mov
xor
sub
mov
fdivrl
and
clc
jbe
adc
xor
xor
or
repz
or
mov
mov
loopne
test
rcr
stos
mov
cld
lcall
add
leave
aad
xor
mov
cmp
pushl
inc
ret
adc
jecxz
js
gs
sub
or
call
icebp
inc
loop
repz
icebp
repz
inc
addr16
lods
add
ficompl
decl
jmp
loope
aam
test
mov
mov
sbb
push
and
jmp
cmc
test
inc
jae
xchg
adc
sbb
push
mov
jmp
in
stc
stc
sub
xchg
decb
imul
leave
loopne
pinsrw
je
mov
or
adc
mov
cwtl
cmp
mov
out
add
aaa
pop
inc
sbb
sbb
je
outsl
inc
or
cmovno
js
jecxz
inc
ja
jp
or
dec
fldl
push
pop
clc
jg
and
xchg
movsl
sar
sub
cmp
push
or
mov
loop
mov
push
mov
push
outsl
ja
pop
adc
xor
cmp
lret
adc
in
push
or
xor
das
adc
cmp
fwait
sub
jo
xchg
cmc
incl
popa
mov
mov
fadds
cmpsb
and
add
movsb
hlt
pop
add
inc
mov
jmp
movsb
mov
adc
hlt
mov
popa
push
mov
enter
fdivr
sub
mov
or
push
clc
jg
push
mov
mov
cmp
adc
lcall
shl
ret
dec
imul
adc
adc
inc
loopne
sbb
addr16
stc
push
fisttpl
aas
clc
incl
sub
out
push
xor
pop
cmp
imul
mov
inc
aas
dec
cmp
shll
pusha
call
jg
loope
push
push
test
mov
push
js
push
andb
nop
push
inc
flds
rorb
mov
add
xor
dec
add
ja
xor
add
cli
fbstp
jnp
dec
dec
ljmp
lcall
xor
and
add
int
dec
pop
cli
es
mov
or
popf
in
in
fldl
roll
sar
ret
sub
xor
push
aaa
or
xchg
dec
adc
sbb
sbb
incl
mov
pop
xor
mov
mov
or
adc
dec
and
cmp
scas
pop
xor
push
stc
inc
or
xchg
xor
sbb
dec
enter
pop
pop
jle
sub
out
cld
xchg
jmp
test
lcall
xor
sub
rcl
push
ficoml
xlat
stos
bound
xchg
jbe
pop
clc
test
and
test
inc
and
sub
mov
xchg
mov
sbb
stc
adc
lods
vpsubb
pop
mov
pusha
and
shll
sbb
inc
std
jg
xchg
rcrl
mov
daa
nop
xlat
insb
addr16
and
inc
mov
mov
rol
xchg
int3
loope
sbb
loopne
jg
incb
ss
mulb
add
lea
outsb
jmp
ret
adc
cmpb
ret
add
cmpsl
movsb
sub
call
mov
mov
data16
dec
sbb
xchg
and
loop
orl
jmp
stc
inc
mov
jbe
push
adc
add
lret
push
xchg
repz
xlat
hlt
jg
mov
mov
xchg
jo
andl
sahf
mov
js
aas
cs
outsb
push
push
add
mov
rcrb
fbld
ror
mov
stc
or
mov
fldcw
pushl
and
rolb
stos
fcompl
cmpsl
js
cltd
lret
std
pop
and
push
xchg
push
aas
mov
lahf
pop
jno
pop
or
pop
add
xor
sub
sbb
faddl
jbe
adc
sub
aad
add
mov
mov
adc
dec
loop
push
outsl
add
push
fidivl
pop
cltd
fcoms
call
int3
and
adc
pop
stos
mov
sbb
jmp
cli
pop
mov
xchg
sbb
pop
pop
dec
inc
loope
call
adc
adc
nop
shrl
test
pop
stc
fs
dec
mov
mov
clc
adc
or
cmpsb
cltd
xor
add
aas
stc
add
enter
shlb
mov
jg
decl
enter
inc
leave
pop
or
cwtl
testb
push
shr
data16
sahf
mov
fimull
add
xor
mov
or
lahf
in
sbb
popa
xor
xor
sub
shl
std
movsl
push
jg
sti
mov
arpl
shll
popf
adc
and
out
pusha
push
cltd
inc
xchg
pop
sbb
imul
out
jmp
loop
push
flds
test
sub
push
sbb
lahf
jge
clc
out
orb
mov
arpl
inc
call
and
int
outsl
inc
clc
mov
clc
mov
pop
orb
sub
fisubs
shll
je
incl
push
jns
xchg
jp
and
mov
lcall
lds
shll
add
adc
fisubrs
enter
adc
sbb
rorl
les
sub
sbbb
lock
add
sub
or
mov
adc
and
mov
js
or
pop
xor
or
insl
inc
aas
shlb
cmc
dec
mov
mov
add
imul
ret
pop
adc
inc
and
dec
int
mov
sbb
loop
into
adc
adc
jle
or
inc
mov
pop
sub
push
js
cmp
inc
rolb
pop
mov
lcall
dec
shlb
cld
xlat
jnp
mov
mov
neg
insl
je
adc
pop
pop
insl
outsb
xor
dec
adc
in
inc
mov
ja
adc
loopne
add
je
jno
popf
or
lret
push
loope
pop
jnp
std
or
aam
pop
lds
stos
push
mov
leave
and
sub
dec
loopne
fmuls
fs
fildl
mov
add
rorb
pushf
addr16
and
jnp
and
stos
aam
andl
cmp
jns
vmread
or
or
push
test
and
fwait
ss
pop
jmp
dec
adc
mov
push
into
add
add
insl
mov
push
dec
jle
stos
mov
and
xchg
mov
out
cmpb
int3
movsl
or
adc
pusha
lods
icebp
out
push
add
or
sarl
push
shr
ffree
ret
pop
add
dec
mov
inc
call
mov
mov
cmp
add
add
int3
icebp
adc
rcrl
add
adc
cmp
cmp
adc
mov
test
add
mov
loopne
add
mov
lret
add
cmc
push
shlb
add
or
mov
xchg
push
outsl
pusha
pop
stos
iret
popa
gs
or
and
les
dec
mov
pushf
lds
mov
adc
xor
add
and
lahf
mov
xor
ficoml
add
inc
sub
test
adc
pop
sarb
pop
popa
fldcw
jmp
inc
pop
pushf
lods
pop
mov
cmp
xor
mov
rcrb
pop
jmp
cs
aaa
mov
and
test
mov
das
addl
pop
fst
call
pop
xchg
sbbb
frstor
call
sbb
sub
fwait
addb
or
xchg
xor
add
ljmp
sub
add
adc
adc
and
lods
dec
cmpb
mov
sub
data16
mov
adc
imul
mov
and
adcb
cmc
xor
or
and
mov
mov
adc
adc
adc
bound
js
dec
mov
xchg
pop
mov
enter
sarb
ret
adc
add
pop
inc
jo
mov
dec
js
lret
sti
cmp
ret
push
je
gs
out
sub
or
jg
mov
sbb
daa
and
mov
mov
popa
loopne
mov
cmp
fldt
adc
jmp
testb
xchg
jp
rclb
insb
bnd
and
incl
adc
mov
mov
fwait
jl
sub
mov
xchg
mov
xor
add
mov
jb
cmp
fbld
or
lret
int
call
dec
fbld
dec
stos
or
jo
popa
sub
or
rolb
sub
mov
jmp
sti
add
and
mov
mov
rolb
loop
in
test
mov
or
adc
loop
adc
jmp
sbb
inc
xor
xorb
pop
mov
inc
xchg
sarb
scas
mov
or
and
ds
mov
push
psllq
ja
jle
or
rorb
push
movsl
mov
das
pop
lret
push
mov
ds
pop
mov
outsl
lret
jns
mov
sti
mov
inc
loope
clc
xlat
dec
mov
push
fstl
and
nop
pop
ret
fildll
mov
mov
mov
jnp
mov
insb
icebp
cmpsl
pop
mov
call
fimull
es
sbb
loopne
add
push
lahf
xor
clc
ljmp
std
test
mov
addl
sub
daa
pop
nop
xor
inc
stos
int3
and
ljmp
mov
adc
push
inc
jno
lock
scas
xchg
sub
push
mov
sub
mov
mov
shl
sub
add
ret
mov
xchg
rol
and
inc
or
das
test
and
dec
push
fcomip
test
xor
test
inc
or
push
add
push
jle
inc
mov
je
call
ret
dec
andb
adc
out
imul
mov
hlt
ret
jge
and
push
adc
jg
adc
adc
fs
mov
std
nop
push
pop
pusha
pop
pop
in
xchg
outsl
mov
or
lret
push
mov
sbb
cmp
cld
inc
pop
ja
and
dec
xchg
cld
xchg
sbb
push
xchg
inc
mov
pop
inc
and
cwtl
adc
sub
mov
pushl
pop
cmp
mov
push
and
outsl
add
xor
scas
mov
jg
or
lret
inc
xor
sbb
mov
and
add
loop
or
mov
push
adc
in
xor
jl
insl
das
hlt
mov
sar
into
add
mov
cli
mov
dec
mov
mov
fs
mov
fwait
cmpl
jg
icebp
xchg
dec
push
mov
cmp
dec
fwait
ror
popf
inc
or
pop
ds
or
loope
or
mov
lret
cmp
cmp
sbb
mov
test
sbbl
adc
mov
wbinvd
faddl
lods
pop
mov
push
jmp
mov
mov
fbld
push
mov
adc
hlt
push
gs
stos
fs
push
dec
mov
adc
ljmp
jne
ja
ret
sub
xchg
adc
lahf
nop
mull
idiv
dec
adcb
in
std
ljmp
lock
dec
mov
addr16
add
jmp
xor
jg
mov
lahf
lods
or
adc
or
lods
mov
inc
arpl
mov
leave
int
fldl
inc
and
push
push
or
mov
fistl
or
and
mov
imul
loope
mov
addr16
or
add
cs
sub
mov
add
aas
cmp
test
ljmp
sbb
out
xchg
lea
adc
fs
jne
ljmp
adc
out
scas
jo
add
jnp
jmp
cltd
pop
adc
add
jb
pop
in
sbbl
xchg
fadd
mov
notb
mov
xor
in
pop
sti
scas
gs
push
aad
cs
int
ja
pop
jge
jmp
rcrb
je
imul
mov
add
xchg
cmpsb
jmp
lock
subb
jg
xchg
pop
xor
jb
clc
add
dec
fdivr
cld
ja
das
cmc
xor
fistpll
sahf
pop
cmpl
das
es
mov
inc
cmc
jns
loopne
ret
clc
lahf
pushl
in
jbe
sti
outsb
and
push
enter
adc
mov
or
fiadds
and
mov
lret
adc
jmp
lret
pushf
fstl
sub
clc
jle
movsl
scas
jae
and
std
sti
int
xor
lret
sub
mov
call
mov
jl
adc
pop
iret
movsb
cmpsb
push
test
xchg
inc
rcrl
pop
call
mov
jmp
sbb
dec
call
sub
cmpsb
or
mov
idivl
es
jb
jns
hlt
push
clc
ss
add
cld
cmp
pop
pavgw
and
cmp
lds
rcrb
add
cmp
xchg
or
mov
pop
dec
push
ljmp
xchg
arpl
pop
xchg
es
mov
mov
xor
cwtl
out
aaa
pop
out
and
mov
imul
aaa
iret
sub
dec
xchg
fs
aam
and
push
sbbl
stos
xlat
xchg
or
push
gs
in
fwait
pop
cmpl
in
lret
std
xchg
inc
lahf
cld
mov
addr16
outsl
movsl
mov
inc
xchg
add
decl
cmp
hlt
fdivs
inc
frstor
sub
mov
pop
loope
addl
inc
push
pop
cltd
xchg
lods
subl
leave
mov
add
inc
in
mov
and
loopne
ljmp
addb
mov
dec
decl
sbb
mov
push
add
jns
pop
xor
push
pop
cmpsb
push
or
mov
pop
sub
sub
xchg
filds
push
test
or
shrb
pop
out
mov
xchg
movsb
loopne
adc
pop
adc
loop
push
pusha
inc
ret
sahf
adc
sahf
or
sub
cmp
aaa
dec
mov
loopne
dec
xor
aaa
inc
add
hlt
pushf
stos
rolb
pop
mov
xchg
mov
jp
jp
addl
adc
call
xor
sub
mov
jae
imul
imul
pop
push
rorl
add
orb
imul
push
or
mov
or
hlt
dec
lds
cmp
icebp
iret
add
xchg
inc
adc
jnp
out
loope
push
add
lock
outsb
out
pop
inc
hlt
iret
pop
adc
pop
adc
and
add
push
hlt
ja
sarb
inc
test
add
add
push
mov
iret
in
mov
repz
adc
fidivs
loopne
mov
dec
sbb
cli
pop
adc
imul
addb
test
sbb
imul
add
jne
aam
push
aam
and
xchg
or
aad
and
inc
hlt
push
loopne
fdivs
nop
sub
ficoml
inc
js
mulb
jo
outsb
fmulp
push
xor
add
jecxz
push
popa
ret
dec
adc
cwtl
adc
or
sub
mov
ss
orl
mov
xchg
xor
pop
aam
cltd
xor
loopne
mov
outsb
mov
cmp
mov
test
incl
mov
sub
pop
js
pusha
sbb
inc
push
jmp
mov
out
aad
addr16
ret
aas
sbb
ret
pop
aam
inc
insb
push
xchg
mov
mov
mov
jo
sarb
stos
repnz
sbb
mov
test
sub
aam
jnp
lock
nop
movsb
or
fwait
sbb
sbb
mov
lds
sahf
fwait
adc
and
mov
cmp
pop
adc
test
push
xor
imull
pop
addb
push
or
mov
test
sub
bound
mov
cli
cld
cmp
popf
fbstp
mov
or
inc
pop
cwtl
lods
movsl
ret
fists
dec
push
mov
jl
cld
mov
jb
outsl
mov
mov
sbb
aad
ret
mov
fcoms
add
imul
out
pop
out
imul
jmp
inc
mov
shrl
push
push
les
sbb
cmp
xchg
in
imull
sbb
daa
decl
push
xchg
sbb
push
stc
mov
adc
loopne
adc
mov
mov
add
in
pop
and
icebp
movsb
mov
bound
shlb
mov
icebp
mov
push
sbb
inc
mov
inc
dec
pop
push
add
cmp
adc
cld
fwait
lods
mov
jne
loop
xor
sub
inc
adc
out
jg
add
sub
jno
dec
mov
dec
cmp
sbb
adc
mov
xor
sbb
incl
xor
inc
xor
stc
cmc
mov
test
outsl
add
mov
mov
incb
icebp
or
jle
lcall
mov
loope
sbb
sub
stos
arpl
pop
inc
jb
xchg
sbb
adc
add
add
pusha
lahf
and
out
sbb
mov
stos
insb
adc
lar
pop
hlt
das
hlt
mov
pop
xor
cmp
and
jne
mov
cmp
hlt
lods
jbe
call
in
imul
cwtl
xchg
ret
xchg
lock
cmp
push
jmp
stos
or
inc
sub
cli
fistps
jmp
sbb
adc
push
enter
inc
jge
xchg
sub
push
jmp
sti
es
jle
and
in
lcall
aas
add
jp
jg
adc
movb
add
ss
and
mov
incb
out
sub
maxps
data16
inc
pusha
inc
and
rorb
mov
rorb
shl
mov
xchg
and
sbb
mov
cmp
adc
in
xor
hlt
adc
dec
sbbb
ret
les
mov
movsb
xchg
sub
cld
or
out
into
mov
daa
enter
test
inc
out
pop
xchg
push
lods
sub
or
loopne
sti
push
push
sub
clc
mov
sbb
sbb
aad
jnp
loop
jg
mov
pop
cmp
enter
nop
sbb
addb
sbb
stos
and
ja,pt
pop
mov
test
add
mov
xchg
dec
adc
pop
mov
aam
xabort
sub
pushf
adc
or
adc
xchg
pop
adc
xorl
sbb
iret
jne
aaa
dec
push
inc
jl
mov
mov
mov
xor
and
daa
xchg
pop
cmp
shll
mov
adc
or
add
and
pop
popa
push
rorb
add
es
mov
out
stos
rorl
movsl
jns
icebp
lds
adc
movsl
sbb
ja
xor
out
and
mov
leave
pop
insb
xor
add
shll
inc
mov
shll
aad
stos
mov
es
rep
xorl
iret
mov
push
iret
mov
sub
adc
push
rcll
fs
fistpll
push
mov
sbbb
addb
test
int3
lcall
adc
popf
dec
jo
stos
dec
push
cmp
aaa
mov
add
or
mov
into
pop
jnp
stc
in
adc
sub
and
cmp
enter
lea
int3
shr
sbb
fisubrs
jp
or
or
stos
jle
js
aam
sbb
push
popa
sub
sub
add
and
fildl
test
pop
jae
mov
loop
jb
and
dec
adc
dec
mov
push
pop
dec
iret
sbb
mov
cmp
pusha
push
adc
mov
inc
int3
xchg
mov
mov
add
je
ret
leave
sub
in
xor
push
inc
jecxz
nop
fwait
push
xor
push
and
sbb
or
cli
xor
mov
pop
mov
jo
pop
mov
rorl
adc
mov
cmp
adc
mov
pop
data16
mov
clc
fcmove
lahf
xor
enter
sbb
mov
das
adc
jmp
iret
push
cmp
xor
sbb
and
nop
cmpsb
push
rcl
dec
jne
fiadds
pusha
cwtl
shlb
roll
addr16
repz
jns
or
xor
imul
or
clc
mov
lds
dec
cvtdq2ps
and
shlb
inc
stos
enter
sbb
enter
mov
das
fistps
pop
sahf
and
mov
test
nop
je
ffreep
dec
add
aas
bound
subb
cli
xor
insb
xchg
mov
test
mov
mov
notl
add
inc
jnp
cmpsb
add
pop
xchg
loope
dec
mov
jmp
test
jb
add
push
hlt
or
jmp
push
stc
or
mov
add
pop
jne
cltd
incl
or
pop
xor
adc
orb
aas
push
mov
imulb
jo
push
les
or
sarb
mov
inc
adc
es
mov
or
push
stc
scas
and
or
mov
loopne
xor
cmc
ret
mov
mov
sbb
and
inc
push
add
test
jge
cmp
ja
pop
inc
sbb
js
add
mov
add
movsl
mov
or
push
mov
cmpsl
sub
outsl
ds
xchg
xchg
pop
xor
sbb
shll
sbb
es
cmp
mov
and
sbb
push
jg
call
xor
push
lcall
adc
xor
adc
sub
out
mov
gs
dec
or
xchg
mov
enter
push
push
mov
setb
fnstsw
xorb
dec
push
dec
add
fcomps
dec
or
movsb
ss
ret
psrlq
jb
and
mov
clc
dec
rcrl
outsb
dec
sbb
stos
mov
mov
clc
or
jae
aad
xchg
and
cmp
or
jne
mov
andl
xor
ret
hlt
shl
pop
rorb
repz
xchg
ljmp
and
push
inc
lret
push
popf
xor
lcall
mov
pushf
lods
in
cmp
iret
xor
insb
sub
rorl
int3
cmpsl
aaa
shll
cmp
fldt
cmp
mov
push
add
and
inc
loop
and
shlb
addr16
js
subb
mov
push
ljmp
or
inc
enter
push
cld
fildl
insb
pop
stos
cs
fldenv
mov
sti
shl
sub
loope
mov
rcr
jecxz
orl
cmc
cmp
add
cmp
push
mov
dec
js
iret
lds
in
adc
loope
sub
mov
int3
add
daa
cwtl
stos
dec
lret
fistps
ljmp
cmp
jae
or
pop
jbe
xchg
cli
fwait
les
xor
loopne
addr16
hlt
and
outsl
pusha
rcll
pop
mov
xor
sub
mov
mov
mov
mov
jle
add
mov
inc
sbb
andb
sub
add
push
or
loope
dec
mov
pop
adc
add
daa
sbb
xor
and
and
push
xor
jl
and
add
sub
andl
push
divb
cmp
sub
add
lret
orb
or
adc
rorl
xor
aas
jp
negl
sahf
jmp
push
mov
or
es
prefetchw
or
adc
lahf
add
cwtl
js
mov
sahf
jnp
outsb
push
mov
adc
xchg
pushl
xchg
mov
in
pop
es
ja
mov
sbb
adc
mov
or
dec
icebp
es
and
data16
movsl
dec
add
sub
inc
sbb
push
pushf
and
adc
inc
pop
cwtl
push
push
jge
js
mov
test
cmp
adc
and
pop
xor
fwait
xor
addb
mov
in
push
dec
push
insb
ljmp
cmp
cmp
mov
lods
or
sub
pop
lock
sbb
mov
loope
out
lock
cld
push
sub
adc
add
aaa
pop
dec
ret
jp
push
adc
inc
add
xorb
bound
aaa
xchg
xor
sbb
imul
js
sbb
in
andb
daa
out
add
fstpt
movsb
add
insb
xchg
inc
cmc
int
xor
pop
lahf
xorl
hlt
cmpsl
pop
ffreep
imul
movsl
divl
inc
dec
push
push
fcomps
pusha
sahf
mov
pop
loopne
mov
sub
and
shrb
std
push
adc
int3
clc
xchg
jge
jo
mov
ret
lock
adc
sbb
and
pop
loope
push
adc
cli
sub
cwtl
sbb
sub
add
xchg
add
loopne
clc
das
int3
sbb
jmp
iret
data16
add
mov
movsl
inc
mov
pop
sbb
sbb
sbb
mov
in
nop
dec
adc
dec
les
push
stos
sub
scas
mov
mov
add
jl
pop
mov
or
popa
shll
jne
test
add
sbb
pusha
subb
pop
push
insl
dec
pop
aam
push
and
popf
mov
inc
aaa
sbb
pusha
fdivs
arpl
shrl
add
mov
repz
inc
loopne
adc
testl
pop
loopne
insl
sbb
lods
fldcw
shl
push
fstpt
mov
mov
and
daa
mov
sbb
and
xor
mov
or
and
add
push
out
inc
stos
and
push
popf
out
mov
dec
divl
add
mov
shl
je
mov
mov
icebp
jnp
pop
lds
arpl
pop
mov
out
mov
clc
inc
or
xchg
in
sbb
adc
clc
inc
std
incl
xchg
mov
add
loopne
push
mov
push
add
jmp
pop
fwait
sbb
cltd
add
shl
pop
inc
add
sbb
inc
lods
sti
das
and
aaa
and
add
movsb
lahf
sub
int
or
int
jns
and
and
outsb
jo
sub
xchg
ss
push
sti
pushl
xchg
push
and
xchg
push
lcall
fsubs
pop
cld
xchg
cmp
cmpsb
adc
pop
add
dec
fwait
and
sbb
adc
les
push
sbb
and
xchg
in
push
pop
push
mov
sti
mov
mov
lret
cmpsl
xor
loope
fdivrs
int3
or
pop
cmc
fisttpll
cmpb
mov
add
outsl
pop
push
popf
cmp
sub
cli
test
mov
push
negb
inc
out
jmp
sbb
incb
pop
cmp
mov
stos
sbb
inc
pop
jl
ret
push
ljmp
push
mov
das
aad
push
mov
lock
xchg
add
ret
jae
cmp
sub
aam
scas
popl
repnz
out
xchg
mov
aaa
or
mov
lea
sub
lea
push
sub
cltd
and
movsb
mov
push
fwait
sub
in
shll
outsl
cmc
and
bound
xchg
in
rclb
cmpb
sbb
cld
sbb
cwtl
lock
jb
stos
fistl
daa
cmp
mov
fs
jo
stos
push
mov
xchg
enter
pop
push
mov
inc
and
fistpll
push
jge
imul
dec
inc
add
out
lahf
push
leave
andl
sub
and
adc
xchg
cmpsb
stos
call
insb
aam
or
outsb
insb
mov
stos
ljmp
and
and
inc
push
aaa
test
ds
int3
jns
mov
inc
je
fildl
sbb
bound
push
push
cld
clc
push
je
rcrl
gs
lods
pop
lds
push
pop
aad
adc
xchg
lret
sbb
or
mov
call
stos
push
jecxz
jle
mov
jmp
pop
push
xor
mov
add
test
out
push
sbbb
aaa
sbbb
mov
xchg
sub
clc
xchg
mov
xchg
pop
add
outsb
push
xor
inc
dec
cmp
add
push
add
and
fldl
ljmp
push
xor
clc
jg
jae
sbb
ret
test
cltd
mov
ret
jno
les
lods
push
popf
add
int
xchg
in
or
std
repz
fistps
repnz
xchg
mov
lods
and
adc
fdivr
das
sbb
xchg
sub
adc
fcomip
or
add
xor
imul
sarb
int
outsb
popf
pop
lcall
pop
add
mov
jp
lea
pop
pop
add
pop
fdivr
mov
or
not
ret
dec
sub
test
add
incl
popf
enter
sub
sar
push
mov
mov
loope
sbb
scas
out
call
fstpt
les
inc
push
push
and
xchg
push
xchg
mov
out
fcomps
pusha
xor
fs
jl
fbstp
in
std
ror
fwait
fs
mov
inc
xchg
mov
mov
add
or
pop
popa
and
jmp
stc
leave
mov
or
std
dec
fcom
or
mov
loop
sahf
xchg
push
in
dec
add
call
adcl
inc
lcall
xchg
movl
pop
testb
push
and
js
sbb
outsl
aaa
add
pusha
outsb
data16
andb
push
add
add
jns
cmpsb
jmp
ljmp
icebp
aad
inc
fwait
push
lcall
mov
pop
adc
fldcw
test
cli
pop
roll
std
or
xor
cmp
test
ljmp
mov
jns
dec
inc
jle
pop
lcall
enter
or
mov
pop
int
adc
xchg
pusha
cmpb
sub
daa
sar
jg
lea
mov
dec
loop
dec
gs
jle
adc
in
sub
adc
or
mov
and
push
sbb
sarb
mov
ljmp
mov
cmp
cld
dec
xor
fistps
xor
aad
aaa
pop
ljmp
mov
loop
jae
enter
mov
adc
into
jno
arpl
add
dec
mov
daa
adc
call
fs
jno
cmpsb
daa
les
inc
and
mov
outsl
movsl
pushl
daa
xchg
mov
xchg
add
rcl
pop
adc
ja
sbb
aad
xor
jge
call
jecxz
movsb
jmp
dec
jecxz
jb
mov
add
adcb
je
pop
dec
into
fwait
add
pop
pushf
jmp
xchg
pop
mov
scas
dec
pusha
or
ljmp
ret
loop
fdivr
xor
mov
shll
and
push
jnp
jae
out
arpl
cwtl
add
lods
aas
push
loope
sub
mov
and
sbb
pop
sarl
inc
movsb
cmpsb
jge
int3
push
sbb
pop
push
jmp
sub
push
adc
mov
mov
mov
push
cli
movsl
mov
add
aam
add
int
jnp
cmp
push
arpl
dec
or
xor
push
imul
and
fisttpl
add
in
mov
decl
pushf
mov
test
pusha
mov
dec
push
daa
nop
arpl
lock
popa
xchg
xchg
cli
call
subb
stc
ret
inc
in
pop
gs
jecxz
das
jp
iret
jnp
mov
jle
jmp
xchg
fwait
incb
data16
lcall
lods
mov
and
push
add
test
lods
lods
dec
les
cmpsl
mov
jecxz
xchg
shrl
mov
xchg
mov
cmp
pop
mov
mov
cmp
in
jmp
pushl
inc
dec
sub
pop
cmp
ljmp
pop
test
fwait
sub
test
push
and
dec
mov
imul
bound
shll
int
and
and
movsl
cmp
sar
jmp
fstps
add
fxch
sbb
push
mov
mov
mov
jle
sub
cmc
out
jg
or
and
push
mov
out
adc
add
sbb
push
xchg
enter
imul
inc
int
ja
rorl
inc
adc
cmp
jno
ficoml
push
mov
jge
add
frstor
ss
push
push
sarb
sub
or
or
xchg
or
lcall
stc
aas
adc
add
adc
mov
in
scas
mov
pop
aad
xchg
sub
push
sbb
or
sbb
add
mov
add
lds
andl
mov
cld
add
adc
push
push
jle
or
adc
pop
sbb
adc
ljmp
dec
and
dec
adc
lcall
call
mov
xor
add
bound
repnz
rclb
pop
jns
sub
add
push
sbb
addl
leave
adc
inc
mov
ret
and
add
xchg
and
loopne
adc
or
repz
push
cmp
xchg
sbb
jl
xchg
sbb
inc
daa
dec
inc
popf
sub
jge
dec
sbb
clc
test
fistpll
mov
cmp
lahf
sbb
leave
ret
fcomip
push
inc
rolb
pushl
hlt
cmp
pop
cld
inc
gs
sub
leave
loope
aam
add
mov
or
lcall
xchg
loopne
or
insl
and
jnp
sub
mov
mov
cwtl
add
mov
in
out
test
lcall
aaa
mov
inc
cmp
repz
pushl
ja
and
call
or
inc
add
jae
imul
adc
inc
and
rol
xor
mov
out
jp
push
add
movsb
mov
adc
push
cwtl
pusha
adc
dec
aad
or
pop
test
inc
mov
movsl
aaa
sbb
out
pop
vpshufhw
xchg
cmp
fmuls
nop
roll
inc
adc
jp
add
mov
jno
sub
ja
and
push
repnz
sbb
dec
lcall
decl
add
sub
popf
and
mov
xchg
xlat
mov
jae
stc
sbb
add
psubq
inc
jnp
or
sub
ss
pop
xlat
test
cmp
sub
lcall
add
fnstsw
lret
dec
out
mov
sbbl
inc
pushf
or
add
sbbl
and
inc
out
dec
fiaddl
add
or
push
xchg
test
aam
add
fsubl
push
cmp
fcoml
cs
daa
in
cmp
das
das
je
push
lock
insl
mov
inc
pushl
loope
test
xlat
subl
push
push
out
shlb
daa
roll
xor
adcl
jne
mov
or
cmpb
das
mov
jg
int3
dec
mov
adc
and
ljmp
pop
leave
or
pop
popf
cld
inc
fistpl
pop
add
add
dec
hlt
lcall
push
adc
jae
add
mov
mov
and
or
outsb
mov
call
inc
je
or
popa
pop
and
inc
sbb
flds
adc
jns
xor
sbb
pop
cmc
pop
push
lret
dec
fiaddl
arpl
sub
in
clc
je
push
dec
jbe
pop
push
rorb
shll
push
add
daa
xchg
clc
mov
test
jb
adc
mov
pop
push
imul
xchg
push
dec
adc
mov
xor
inc
loopne
push
jno
in
or
mov
xchg
sbb
aam
fisubrl
push
inc
fsts
add
mov
push
in
dec
mov
iret
lcall
or
es
adc
aaa
fisttpll
add
test
cmp
sub
dec
add
push
push
cwtl
in
mov
mov
stos
adc
lods
mov
or
sqrtps
push
mov
and
xor
pop
andl
cmp
mov
xchg
daa
cmp
xor
ljmp
adc
inc
mov
jg
clc
fs
les
pop
sub
xchg
imul
add
cmp
rorl
aam
dec
decb
mov
sbb
xchg
div
mov
cmc
and
mov
arpl
fld
dec
jle
xlat
adc
and
inc
icebp
ds
add
add
jmp
adc
test
rclb
mov
pop
loopne
fstpt
sub
jo
ret
bound
aas
and
nop
jg
loop
and
stos
mov
push
jno
adc
lods
jmp
hlt
push
add
add
clc
pop
inc
mov
ret
imul
clc
fldcw
sub
int3
sub
pop
add
adc
dec
mov
daa
cmp
jb
inc
add
cmp
sbb
push
addr16
stc
and
inc
add
rolb
pop
frstor
adc
mov
or
and
cwtl
fsubrs
fdiv
add
sub
xchg
push
pop
rcrl
hlt
dec
aaa
mov
pop
push
and
mov
inc
ret
or
xchg
push
mov
test
pushf
and
dec
mov
ret
cmp
xchg
or
sub
sahf
adcb
jecxz
pop
push
sbb
and
add
icebp
out
leave
cltd
adc
das
pop
test
push
test
inc
add
int3
or
xor
repz
add
inc
sbb
pusha
stos
stc
sarb
adc
xchg
fdivs
add
and
or
outsb
add
scas
push
and
xchg
lcall
mov
sbb
rorb
shrl
mov
sbb
loopne
adc
dec
or
cmp
or
push
mov
xchg
push
add
daa
pop
adc
add
mov
aad
in
push
test
test
sbb
mov
loopne
lods
rep
sbb
lock
pusha
push
inc
push
jl
pop
push
call
dec
mov
pop
aad
push
enter
cmp
clc
push
push
int3
dec
xchg
jo
adc
dec
add
sti
test
dec
and
xor
xor
enter
loopne
pop
inc
lds
add
lcall
cmp
in
pop
arpl
add
cmc
add
or
inc
pop
insb
mov
xor
cmp
pop
jmp
push
movsb
pop
imul
mov
jp
mov
outsl
pushf
xchg
shll
cmp
jge
xchg
jno
inc
xor
mov
push
pop
rorb
jne
outsb
mov
pop
jmp
add
mov
and
push
adc
jb
aad
mov
enter
in
inc
dec
inc
jmp
into
shrl
insl
adc
fiaddl
cmc
pop
mov
insb
sahf
shll
cwtl
cmp
xor
adc
add
inc
cmp
cmpsl
in
push
push
adc
and
inc
rorb
sbb
inc
adc
ret
inc
adc
bound
push
test
lods
loop
in
or
xorb
pop
leave
lahf
adc
aam
inc
jo
push
dec
cld
int3
and
loopne
or
repz
inc
mov
fsubrl
pop
push
scas
xchg
stos
jmp
aad
or
cmp
loop
sbbl
adc
jmp
loopne
cmp
filds
inc
inc
aas
mov
add
sarb
fs
mov
and
sahf
or
adc
bndldx
aaa
cli
lea
test
jo
add
xor
fs
jo
pop
adc
fsts
dec
daa
ljmp
shl
inc
lret
sbb
push
jl
add
xorb
push
jle
addr16
sbb
test
aam
aam
pusha
mov
mov
mov
add
xor
xchg
into
or
jecxz
clc
rcr
add
outsl
mov
repnz
clc
add
or
ljmp
pushl
fwait
pop
push
jl
insb
push
inc
and
test
push
mov
js,pn
cld
mov
mov
inc
sub
lret
fbstp
pop
add
mov
or
mov
mov
and
sbb
cmc
decl
mov
xchg
roll
cmp
add
outsl
rcll
adc
aad
pop
pop
sbb
mov
loop
dec
jno
pop
je
xor
test
test
repz
jle
jl
clc
xchg
jl
sub
test
loopne
push
mov
jecxz
sbb
clc
hlt
jl
xor
xchg
add
frndint
das
cld
dec
xchg
push
mulb
jns
pop
xchg
cmp
pop
mov
fists
cltd
add
xchg
loopne
adc
mov
add
imul
xor
mov
ds
xchg
ds
jecxz
daa
lock
fisttps
movsl
sub
xchg
fistpll
psraw
adc
jl
jl
xchg
mov
cltd
xchg
jge
lret
inc
jae
mov
sbb
sub
sbb
popf
scas
dec
icebp
bnd
cmp
das
std
pop
ret
xor
rcll
and
shr
test
push
add
testl
mov
and
outsl
fildl
sub
in
cld
dec
dec
test
clc
mov
jg
nop
xor
sub
push
push
adc
lods
pop
idiv
sub
fisttps
call
sub
and
movsb
mov
jbe
jecxz
mov
fistps
push
xor
mov
cli
cmp
dec
outsb
stos
scas
movsb
adcb
or
mov
push
testl
nop
dec
leave
add
jl
mov
clc
mov
sbb
push
dec
test
decl
or
rorb
jg
popf
sbb
and
loopne
dec
add
fisubrl
add
jg
adc
and
int3
jmp
test
cli
ret
mov
test
nop
xor
arpl
and
push
addl
xchg
xchg
clc
pop
dec
sub
rolb
sub
add
jb
inc
push
std
push
lea
xor
xor
mov
rcr
pop
in
loopne
ljmp
pop
and
mov
push
cltd
pop
lret
add
adc
and
cld
lahf
in
xor
mov
xchg
scas
dec
dec
andb
lcall
push
imul
lods
fisubrl
ljmp
xor
jle
or
pop
pop
gs
sbb
add
sub
pop
fs
shrl
mov
test
push
mov
mov
add
fsubp
loop
in
mov
clc
incl
mov
inc
jmp
out
jp
jecxz
outsl
mov
nop
sub
outsl
xchg
adc
xchg
lods
cmc
jmp
out
es
add
mov
jmp
aaa
sub
inc
incl
fildl
add
mov
and
or
or
cld
ja
mov
and
add
and
pop
sub
add
nop
and
mov
push
fstpt
and
verr
mov
jnp
add
dec
and
inc
test
adc
pop
imul
add
inc
add
or
inc
inc
fdivl
insl
add
or
add
and
sti
add
and
or
adc
nop
fidivl
adc
test
xchg
imul
xchg
jl
outsb
outsl
pop
sahf
and
test
cmp
add
pop
fistpl
inc
and
mov
adc
sbb
adc
and
ss
test
mov
adc
fildl
push
or
adcb
mov
xchg
push
inc
fs
imul
push
sub
pop
jne
adc
mov
imulb
mov
nop
inc
popf
imul
xor
fistpl
fisttpl
or
xchg
cmp
mov
push
push
and
and
and
insl
and
and
and
and
pop
sti
cmp
imul
push
insl
mov
and
mov
sbb
rcrl
movsb
outsb
in
or
and
or
sub
and
jecxz
jl
mov
pop
adc
fcoms
pop
or
ficoml
jnp
sbb
mov
pop
add
gs
imul
add
int
inc
sbb
fsts
imul
mov
pop
jae
ret
dec
ds
int
pushf
mov
fwait
loope
inc
mov
and
scas
rorb
pop
mov
mov
lods
mov
cmp
add
insb
pop
fldt
inc
inc
adc
outsl
and
lock
orb
adc
sbb
pop
test
sbb
xorb
js
pop
adc
inc
mov
out
sub
lcall
and
adc
inc
icebp
xlat
ss
daa
or
pop
sub
push
mov
pop
out
fiaddl
nop
adc
push
push
scas
adc
xchg
inc
int3
and
mov
flds
enter
retw
sub
lcall
sub
and
js
sub
sbb
addb
pop
test
mov
mov
inc
divl
push
push
adc
callw
jle
pop
fadds
fmull
repnz
fldenv
and
adc
add
loopne
je
add
mov
add
pop
mov
addb
sti
adc
inc
popa
xchg
in
fmuls
xchg
adc
sub
mov
xorb
outsl
inc
mov
push
jp
es
add
sbb
outsl
inc
pop
pop
int3
daa
xchg
mov
add
repnz
inc
sti
xchg
push
gs
arpl
mov
call
jmp
add
mov
xor
jle
std
jg
icebp
adc
mov
adc
ds
jp
stos
add
add
jnp
mov
outsb
sbb
xchg
sbb
jmp
fisubs
xor
dec
adc
lret
mov
fwait
repz
aaa
insb
sbb
cmpsb
add
hlt
inc
xchg
cmpsl
push
in
aam
icebp
fdivrl
enter
pushl
rolb
inc
jle
mov
data16
push
inc
dec
inc
cli
dec
movsl
nop
jne
decl
cwtl
xlat
stc
add
insb
inc
sbb
dec
pop
adc
je
iret
icebp
stos
inc
out
enterw
test
test
cmp
inc
pushl
dec
add
xor
test
out
pushl
pop
xor
nop
ror
pop
shrl
fwait
pushf
pop
bound
fcoml
ret
mov
push
adc
iret
out
fisubs
mov
adc
mov
test
add
aam
ljmp
jbe
pop
scas
cmp
rcrb
rcl
pop
nop
or
xchg
or
ja
sti
out
stc
mov
add
lods
pop
lods
leave
lret
sub
je
stos
decb
mov
and
pushf
rolb
mov
std
dec
ret
mov
js
sbb
and
adc
int
inc
les
mov
frstor
inc
mov
movsl
nop
roll
and
adc
xor
sarl
in
xchg
xor
rcll
adc
mov
lcall
add
xchg
inc
inc
movsl
outsl
lcall
pop
add
dec
xor
pop
sub
inc
and
add
cli
jmp
int3
add
rcrl
movsb
jo
jo
pop
call
or
inc
testl
movsb
outsb
add
jg
cmc
jmp
sgdtl
sbb
mov
jl
clc
incl
cmp
popa
cld
add
ret
xchg
add
mov
sub
mov
in
imul
add
sub
sbb
hlt
cmp
xor
lock
jg
mov
mov
in
dec
movsl
dec
push
add
xchg
mov
in
mov
cmp
xchg
add
lock
mov
incl
xchg
aad
sbb
das
dec
cmp
shl
mov
cmp
inc
iret
scas
dec
sahf
jne
sbb
sbb
lods
test
or
iret
pusha
hlt
cld
jmp
add
sub
pop
add
bound
enter
iret
sbb
imul
cld
mov
pop
popa
jae
and
add
mov
clc
mov
cmpsl
jge
dec
adc
fbld
sarb
xchg
and
sar
aaa
mov
dec
and
popa
sub
test
iret
push
rcrb
loope
sar
push
mov
and
dec
pushf
adc
jg
call
notl
sub
cmpsl
adc
mov
cwtl
insb
and
test
ljmp
xor
into
bound
call
cli
inc
mov
ds
cmp
ljmp
sti
mov
loopne
pop
xor
repnz
lock
dec
sub
call
stos
add
inc
dec
adc
cmpl
mov
or
and
nop
bound
decl
dec
mov
and
imul
add
adc
addr16
xlat
jge
aad
mov
xor
js
int
stc
lock
lods
mov
incl
add
dec
push
aam
jb
mov
shrb
jmp
into
dec
or
xor
inc
jmp
das
or
stos
pop
mov
mov
pop
jle
mov
loop
cmpsl
pop
shll
mov
add
cmpb
fdivrp
scas
inc
insl
lret
jb
enter
int
lret
sbbl
dec
mov
mov
add
decb
call
and
jne
push
jp
dec
lcall
and
in
inc
add
or
mov
adc
test
ret
daa
fldl
add
testb
aaa
cld
and
and
outsl
xor
outsl
insl
imul
test
sbb
adc
mov
cmp
sbb
arpl
xchg
and
push
dec
shrb
int3
fxtract
jp
xor
cld
std
icebp
pop
xchg
aas
jo
btc
mov
pop
shlb
and
xchg
lock
fistpl
out
mov
sub
fmull
jg
adc
push
add
and
jle
std
shll
xor
cmpsb
xor
in
adc
mov
incb
pop
stos
xor
inc
sarb
in
adc
incl
in
jno
mov
fs
aas
push
cmpsb
inc
lods
arpl
ja
ret
repz
xchg
jg
lock
out
push
cmpsb
inc
pop
call
bound
pop
pop
lcall
adcb
jmp
fcompl
lds
repz
jnp
push
pop
fnstsw
or
cmp
pop
sub
rcrl
clc
pop
adc
jo
fstps
sbb
cmp
repz
xor
push
cltd
dec
cmpsl
and
daa
cltd
fs
ljmp
rorb
fcompl
sub
pop
add
insl
xchg
std
sbb
or
ljmp
pop
or
cmp
cwtl
inc
jg
fs
iret
push
jno
cli
inc
call
sbb
mov
mov
and
iret
fisubrl
clc
mov
add
dec
sub
test
or
sbb
insb
cld
cmpsb
hlt
mov
and
int
push
sub
jne
inc
dec
add
jg
and
loope
add
les
adc
or
stc
xor
lea
add
fs
add
mov
fdivs
fs
mov
and
cmc
loope
std
jg
cld
stos
adc
sub
or
mov
enter
mov
xchg
mull
pop
rcll
pusha
mov
cli
fistpll
add
rolb
mov
out
les
insl
out
xor
sarl
push
into
cs
dec
jmp
fdivs
loope
xor
pop
int
adc
pop
push
push
int3
repnz
push
mov
std
loope
or
pop
cli
jg
mov
jmp
push
or
lock
pop
sti
mov
inc
mov
or
add
in
pop
and
pop
hlt
mov
lock
sub
xor
lret
pushf
mov
ljmp
lds
daa
sbb
aam
and
sub
pop
outsb
insb
nop
mov
xor
mov
pop
out
push
mov
rcll
testb
testb
roll
mov
lahf
rcrl
cmp
inc
cmp
jmp
mov
sub
push
jp
push
mov
stc
movsb
dec
cld
pop
mov
std
mov
mov
dec
enter
adc
jg
das
call
lods
mov
mov
aas
ret
xor
pop
mov
adc
es
sbb
data16
pop
fimuls
cs
aad
movsl
js
sub
in
cmpsb
sbb
mov
and
nop
repnz
sbb
mov
in
cli
cwtl
and
sub
jnp
xchg
loopne
incl
scas
jge
inc
pop
add
push
inc
sbb
cmove
mov
lea
pop
outsb
fdivr
rcll
lcall
push
jno
or
jge
lock
sub
mov
jg
sub
push
stc
imul
mov
mov
jb
aad
push
adc
ret
mov
push
adc
xchg
mov
mov
jbe
mov
cmp
jg
mov
jb
jnp
pop
clc
imul
rcr
push
sbb
repnz
aaa
aam
test
adc
push
pop
imul
test
clc
idivb
orl
gs
inc
xor
scas
andb
pushl
shl
mov
or
fwait
push
ss
in
cmpsl
mov
jecxz
in
pushl
das
sbb
sub
int
rcll
push
lds
subl
inc
mov
adc
ja
mov
pop
and
mov
fisubrl
inc
pusha
sub
sbb
or
sub
das
insl
mov
scas
pushf
pop
jmp
inc
movsl
pop
mov
das
cld
sbb
and
xor
repnz
and
out
cmp
decl
insb
xor
and
or
aas
or
mov
sbb
add
jg
scas
fs
jge
push
inc
jge
sub
incb
or
dec
insl
int3
lock
xor
pop
mov
push
mov
aaa
movsl
incl
mov
and
and
inc
push
mov
aam
test
fists
insb
cmp
addr16
sar
in
test
daa
mov
int
sub
lret
lcall
add
cmp
push
add
sub
mov
mov
call
rclb
jnp
and
sti
and
sbb
popa
push
test
add
js
mov
mov
mov
in
jg
jp
cwtl
add
cltd
sarb
stc
jl
xor
lds
pop
sti
fildll
cmp
stos
push
add
jns
sbb
xchg
ljmp
xor
pop
push
mov
mov
ret
sbb
movsb
jmp
cltd
mov
sub
orb
pop
push
iret
pop
jae
into
add
aam
mov
xchg
pusha
mov
xchg
or
sbb
out
fistpl
xor
adc
sub
push
and
mov
pop
pop
or
popa
dec
scas
adc
aaa
ficoml
int
jge
pop
outsl
push
lods
push
adc
cld
iret
mov
sub
ljmp
mov
shl
rorb
xor
mov
mov
push
fcompl
das
mov
push
movl
adc
lcall
cmp
sbb
lods
mul
mov
in
aaa
pop
xchg
icebp
adc
ret
arpl
in
and
jl
jle
loopne
push
sarb
jg
cmc
movsb
pop
or
mov
lret
inc
dec
inc
das
dec
popa
push
addr16
loope
mov
ljmp
lret
sbb
jno
push
jle
pop
mov
sbb
push
mov
add
pop
add
mov
sub
sbb
pop
mov
push
jge
jecxz
sub
ret
ljmp
inc
inc
stos
jp
outsb
jmp
inc
nop
cmpsb
push
sbb
dec
dec
ja
xchg
idivl
and
aaa
xor
and
pusha
xchg
cld
test
inc
mov
call
sub
mov
lahf
inc
sti
subb
fcmovnu
and
sahf
data16
ds
sbb
iret
and
incl
in
mov
xchg
jbe
insb
dec
push
outsl
out
loop
add
test
les
sbb
mov
jg
decl
aas
sahf
add
push
out
pop
cmp
mov
negl
popa
jmp
arpl
repnz
adcb
adc
inc
add
pop
bound
stc
movsl
mov
mov
scas
mov
jg
xor
adc
mov
orb
jge
ljmp
lcall
orl
and
int
lret
mov
cmp
scas
mov
pop
sbb
adc
cli
out
ja
push
rorl
or
ret
inc
sbbb
fstpt
xchg
sub
xchg
pop
inc
lret
adc
or
mov
xchg
mov
pop
sub
gs
jg
fs
mov
xor
rcrb
inc
sbb
push
arpl
and
incl
and
jae
and
std
or
stos
ss
outsb
mov
push
or
dec
nop
out
inc
push
and
jle
xor
dec
aaa
mov
lock
daa
fcmovnb
push
cli
outsl
sahf
adc
rol
sbb
fcompl
clc
dec
aad
mov
push
pop
sarb
movsl
add
mov
pop
sti
decl
fldl
pop
dec
or
mov
inc
inc
inc
adc
mov
mov
xchg
aam
jns
mov
ja
mov
ret
popa
push
cmp
dec
xor
jne
push
call
leave
out
gs
xor
add
outsl
jmp
pop
mov
ret
loope
adc
not
dec
lret
fwait
hlt
adc
mov
fidivrs
inc
or
sbb
jl
ljmp
pop
out
xchg
je
pop
xorb
loopne
movsl
mov
xchg
mov
and
leave
mov
push
inc
or
mov
jecxz
call
cmp
cmpsb
and
rorl
sub
xchg
pop
iret
add
ret
dec
fadd
xchg
add
inc
add
sub
pop
cltd
adc
push
mov
test
filds
jno
sbb
and
sbb
pop
cmc
fistl
lahf
dec
jl
inc
nop
adc
mov
mov
icebp
mov
mov
push
std
mov
jp
test
push
out
lock
and
add
mov
lods
sub
dec
leave
dec
daa
daa
push
rorb
jge
sub
sbb
lods
cs
jg
pop
mov
add
jae
sub
mov
clc
dec
aas
lahf
or
dec
cmp
roll
push
and
repnz
mov
mov
inc
mov
jmp
out
push
addb
imul
inc
add
leave
repz
pop
cs
sbb
add
fiadds
jg
je
sbb
dec
push
andl
call
ljmp
adc
add
and
sbb
stos
gs
cmp
out
clc
adc
pop
loopne
ss
int3
fistpl
rcr
or
mul
jge
lret
into
sbb
sti
sarb
rclb
imul
out
xchg
jecxz
xor
dec
jns
in
outsl
lret
mov
test
mov
fcompl
into
sarb
icebp
repnz
jo
loop
jbe
pusha
lods
nop
repnz
cli
sub
rcrb
cli
mov
mov
inc
mov
adc
inc
lock
dec
jl
lcall
or
repz
pop
sti
or
mov
mov
mov
rol
push
sub
movsl
and
in
loop
fcomip
incl
pushf
inc
jae
xchg
jle
fstp
std
iret
fstpl
sub
in
dec
adc
test
mov
test
and
lock
lods
aad
or
mov
das
push
push
cmc
and
and
fdivrs
popf
testb
sarl
xlat
push
mov
int
aad
sub
add
insl
cmpsb
pushl
sti
or
adc
cwtl
xor
loop
int3
inc
mov
lea
std
outsl
xchg
xchg
loop
and
pop
xor
test
jno
fldenv
or
jmp
lods
sar
mov
adc
jmp
test
xor
enter
adc
inc
mov
add
sahf
cmp
cmc
lea
adc
add
cmp
das
inc
jg
lahf
lahf
xchg
jbe
jg
sarl
ret
fdivs
scas
mov
movsl
call
pop
inc
int3
scas
lock
dec
xchg
push
mov
repz
jbe
ret
add
js,pn
popf
inc
js
mov
mov
ljmp
inc
es
push
push
arpl
stos
xor
je
idiv
add
stos
loop
push
add
addr16
or
and
lcall
push
push
clc
lock
mov
mov
dec
or
pop
lret
push
inc
call
xchg
jecxz
pushf
cmp
inc
jg
test
mov
daa
and
adc
mov
incl
decb
fmuls
sbb
rclb
pop
jbe
outsl
shlb
xchg
push
ret
jno
ljmp
xor
pop
push
sbb
inc
inc
imul
repnz
in
mov
or
jl
sbb
mov
arpl
xor
push
cmc
call
lahf
mov
mov
ret
xchg
mov
test
sub
or
jmp
aam
popf
and
mov
imul
popl
loopne
dec
bound
mov
mov
adc
dec
dec
xchg
divl
andl
pop
adc
jbe
push
out
dec
cld
mov
faddl
and
pop
mov
pop
inc
nop
fs
aaa
loop
mov
sub
sbb
add
popf
inc
sub
xor
jmp
fbld
hlt
and
mov
test
outsl
add
lods
mov
arpl
aad
rcrl
fcoms
dec
mov
mov
adc
xchg
push
test
rclb
xor
push
push
xchg
sbb
add
push
and
and
sub
xchg
xchg
pop
cli
jg
pop
bound
adc
int
andb
add
int3
in
mov
lahf
icebp
push
in
xor
pusha
out
incb
jbe
or
and
cmp
jbe
cmp
pop
shl
sub
daa
mov
add
pop
push
ds
cmp
in
je
add
pop
filds
xchg
cmp
xchg
sub
loopne
inc
rcrb
mov
das
outsl
adc
mov
mov
outsb
or
bound
imul
xor
mov
pop
xchg
adc
psadbw
add
sti
xor
loop
ret
popa
icebp
push
lock
adc
popa
js
add
shll
and
lds
xor
sub
pushf
or
xchg
ljmp
xor
les
jl
xchg
call
cltd
rcrl
mov
inc
fs
nop
mov
mov
xor
inc
cmc
pop
adc
pop
pop
fldcw
stos
xchg
pushl
or
sbb
mov
xchg
fadd
lcall
into
mov
sub
rcl
and
cmc
subl
mov
jb
inc
and
adc
cli
pop
sti
pop
scas
cmp
or
dec
js
jecxz
add
and
mov
or
cmp
jg
test
test
push
and
sbbl
push
inc
mov
jmp
ret
out
cmc
mov
les
outsl
adc
jle
adc
stc
pop
hlt
call
jl
dec
inc
pop
and
inc
loope
jae
push
sbb
mov
xchg
and
cs
inc
mov
out
pop
insl
add
pop
mov
les
pop
mov
pop
mov
adc
mov
mov
ljmp
hlt
xchg
pop
add
fdiv
mov
adc
stos
inc
js
loopne
or
idivl
jns
stos
ljmp
sbb
mov
cmpsl
mov
cmp
clc
in
test
adc
fstpl
sub
and
mov
int
das
cld
icebp
and
lcall
sbb
rcrb
test
lea
xchg
lea
andb
icebp
add
fdivs
cs
icebp
cli
mov
push
push
mov
cld
mov
cld
sbb
and
lea
imul
push
mov
xor
sbb
shrl
sub
pop
mov
or
mov
arpl
and
aam
inc
enter
popa
scas
clc
push
popa
dec
iret
dec
add
pop
mov
ljmp
in
dec
inc
inc
pop
or
dec
iret
in
les
cmp
es
mov
push
push
sub
mov
cmpsl
pop
adc
jmp
outsl
pusha
jo
xor
ds
inc
jg
or
cmp
ja
sub
fnstcw
adc
mov
sub
dec
lds
int
faddl
movsl
jle
or
pusha
jnp
mov
in
cwtl
xor
mov
and
cli
pop
mov
rorl
out
fcoms
pop
jmp
ljmp
xor
out
or
and
pop
iret
stos
stos
push
pop
dec
jmp
cmp
dec
mov
xchg
and
inc
or
adc
nop
dec
clc
dec
pop
clc
mov
sbb
xchg
push
wrmsr
jo
mov
pop
imul
frstor
fstpt
xchg
cli
shrb
sbb
test
jbe
lret
ret
fnstenv
incl
dec
aam
mov
xchg
jne
js
xchg
and
sbb
test
add
bnd
aaa
bswap
ljmp
movsl
or
push
jae
mov
arpl
adc
loop
aaa
sbb
fistpl
inc
mov
jo
cmpsl
sbb
inc
pushf
push
repnz
incl
repz
xchg
adc
inc
add
mov
inc
pop
mov
sub
inc
aaa
test
jg
mov
cwtl
and
jae
pop
pop
mov
mov
aas
jmp
sbb
aam
cltd
test
xchg
jb
push
je
fisttps
adc
jmp
repnz
mov
rorl
je
clc
aam
push
dec
fwait
dec
shrb
or
xor
daa
sbb
adc
lcall
xchg
inc
mov
push
pop
pushf
push
cmpb
shrl
scas
and
es
mov
pushf
sbb
inc
mov
aas
pop
popf
dec
jp
mov
fcoms
lahf
repnz
xchg
cltd
sub
add
cmpsl
xchg
fwait
pop
cmpsl
cwtl
int
sti
mov
adc
decl
cld
adc
pop
inc
dec
movsb
arpl
mov
adc
or
mov
test
or
mov
call
fdivl
cmp
push
iret
xchg
cmp
pop
push
popa
cs
hlt
cs
push
addr16
push
xor
fstl
outsl
rcrb
push
and
cmp
outsl
inc
cmp
dec
cmpsl
data16
adc
shll
inc
sbb
js
mov
adc
pop
adc
data16
jg
repnz
pop
mov
add
nop
mov
cmp
push
clc
jg
aas
jge
push
push
clc
rorl
xorb
inc
mov
and
mov
icebp
pop
adc
ja
push
jae
pushl
loop
dec
xchg
xchg
mov
sub
outsb
and
cwtl
xchg
add
inc
inc
inc
adc
push
imull
pop
jg
pop
out
pop
xchg
cmpsb
lods
and
fs
loopne,pt
shlb
jnp
dec
pop
xor
in
jg
or
sbb
fadd
cld
adc
aaa
and
xchg
mov
std
call
in
xchg
cwtl
fwait
xchg
in
sbb
dec
and
inc
dec
mov
pushf
add
in
mov
mov
and
or
movsb
mov
popl
or
xchg
dec
pop
gs
adc
cs
cmc
cmp
jmp
inc
jecxz
pop
je
js
cld
ss
pop
push
popa
cmp
inc
cmpsb
fwait
push
adc
jp
in
push
hlt
mov
fbstp
std
lret
sbb
jle
inc
or
imul
insb
jl
mov
jg
or
mov
add
ds
inc
cld
xor
adc
pushl
cmp
add
sub
icebp
pop
mov
jnp
fsts
sbbb
lret
ja
jecxz
outsb
sub
movsl
xor
sub
loop
mov
out
xchg
loope
ret
or
xlat
inc
dec
scas
adc
ss
cld
in
add
aas
pop
lods
jl
pop
test
ja
sti
xor
rcrl
cmp
sarb
test
cmp
aaa
ljmp
jno
out
outsl
loop
pop
rolb
fcomi
mov
ds
mov
out
lods
add
aad
adcb
xchg
jnp
cmp
xchg
dec
mov
test
test
dec
or
pop
or
ss
mov
ljmp
push
mov
test
lods
ds
pop
test
mov
add
test
fwait
mov
ljmp
sub
fwait
loopne
dec
in
imul
ja
inc
outsb
mov
mov
jg
lock
loope
outsl
or
incl
clc
test
fcomps
sub
ds
jg
pop
fs
lcall
and
lods
std
aas
icebp
mov
cld
or
call
jl
mov
dec
mov
rcll
pusha
dec
dec
mov
int3
in
loopne
mov
andl
loopne
rorl
cmpsb
mov
xlat
fs
mov
xchg
mov
push
shl
pop
lcall
jno
and
sahf
jnp
outsb
jmp
inc
repz
xchg
pop
js
or
jge
pop
xchg
test
inc
fs
mov
xor
xlat
xchg
push
loopne
fidivs
lock
mov
push
repnz
movsb
ret
jmp
aaa
and
movsb
inc
ljmp
mov
pop
aam
push
xchg
daa
jle
push
ljmp
or
xor
jmp
fiadds
leave
clc
mov
stc
sahf
shrl
ja
fistl
cmp
cmp
cmp
lods
fldl
shll
std
mov
sbb
ljmp
popf
es
out
test
xor
incl
stc
inc
mov
sbb
dec
sar
cltd
cmp
adc
int
inc
jo
ss
in
dec
js
mov
ucomiss
sbb
test
mov
dec
shl
or
sub
and
aas
shl
jl
cld
in
jo
fsts
into
call
push
test
sub
imul
fists
jbe
aam
ret
xchg
popa
loope
cltd
mov
push
mov
clc
arpl
lcall
adc
imul
in
loopne
xor
mov
dec
ss
repnz
test
jle,pn
stos
adc
push
dec
fcompl
pop
mov
jecxz
mov
inc
fistl
add
stos
outsb
out
lret
movsb
mov
sbb
and
js
mov
loope
data16
cmp
in
mov
loopne
inc
add
jnp
int
mov
cmc
mov
xchg
sub
ljmp
mov
fwait
insb
mov
shll
fwait
test
adc
mov
out
hlt
dec
stos
daa
shrl
pop
pop
mov
jne
inc
subl
mov
icebp
pop
jnp
pop
mov
dec
adc
jle
andb
add
jmp
fidivrs
push
xchg
mov
out
push
shlb
cmp
je
mov
call
jns
add
leave
daa
mov
les
add
jecxz
sbb
mov
xor
cli
dec
int3
xor
pop
out
sarl
fidivrs
adc
push
pop
les
pop
nop
xchg
jg
dec
add
test
gs
negl
enter
sbb
add
arpl
adc
cmpsb
jg
mov
add
mov
loope
and
mov
ljmp
jecxz
mov
out
std
inc
cs
jmp
pusha
sbb
stos
jne
jge
push
jmp
out
shll
call
dec
cld
add
push
aaa
repz
mov
dec
cmpb
push
sub
stos
jns
imul
out
mov
dec
push
jg
sbb
call
js
push
popf
adc
cli
scas
mov
fnsave
xchg
clc
sub
out
mov
clc
fsubrl
pusha
insb
push
push
pop
cld
pop
cmc
inc
outsl
xchg
and
sub
jmp
ljmp
add
add
sub
cmp
dec
xor
test
sarb
and
or
lea
pop
mov
scas
sbb
or
outsl
and
inc
and
mov
mov
dec
sti
out
push
or
movsl
in
dec
stos
js
push
mov
movq
repz
cld
cmp
and
sbb
leave
lcall
cli
call
cmp
dec
mov
or
lret
scas
sbb
ljmp
sub
orb
cmpsl
jb
mov
mov
int3
icebp
jo
push
aad
jo
loopne
jl
push
fs
xchg
rclb
pop
enter
mov
push
adc
iret
nop
and
fiaddl
adc
cmp
sahf
cmp
test
pop
and
mov
or
xor
ret
repnz
scas
ss
pop
pop
xor
mov
jmp
test
int3
fistl
cmp
fsts
mov
sub
push
cli
sbb
leave
or
pop
das
pushf
stos
xor
stos
mov
insl
xchg
hlt
mov
pop
gs
loope
xchg
adc
cmpsl
mov
xchg
iret
mov
xor
loope
jl
push
or
lcall
adc
xor
or
roll
adc
movsl
lcall
push
push
cmpsb
push
push
dec
testb
jg
add
test
add
insb
ja
jecxz
mov
pop
outsb
lods
mov
push
xchg
sbb
dec
push
icebp
cmp
in
lds
test
sub
pop
jge
sbb
andl
pop
incb
divl
push
cwtl
mov
dec
cld
das
les
cwtl
jo
lea
lcall
jmp
mov
out
or
loope
icebp
aaa
cli
movsl
stc
imul
mov
pop
jne
int3
and
mov
xlat
ret
incl
addl
inc
lock
pop
sub
shl
mov
push
jecxz
ds
scas
push
lret
shrl
push
ja
ret
enter
lods
sub
sub
pop
jne
leave
jecxz
fimuls
adc
pop
lret
inc
sti
xor
shll
into
mov
call
out
mov
push
out
jb
int3
addr16
ret
lcall
jb
cmp
int3
insb
popa
dec
in
std
insb
enter
mov
inc
push
add
mov
cmp
inc
sti
ljmp
popa
or
inc
or
lock
mov
ret
mov
in
jns
push
mov
pop
sub
sti
leave
decl
test
repz
adc
scas
mov
cli
adc
xor
mov
and
stos
mov
sub
cli
outsl
xchg
pop
jl
jl
pop
or
lahf
sahf
push
arpl
imul
das
xor
adc
ds
clc
sbb
xchg
mov
in
mov
daa
jmp
lahf
sbb
cli
fs
scas
lds
idiv
jl
repz
jl
and
mov
mov
xor
push
decl
in
bound
push
mov
mov
decl
jecxz
or
aas
out
call
ret
xchg
jp
mov
mov
dec
dec
adc
or
cmpsl
inc
nop
in
jl
add
inc
fs
xchg
jg
cli
test
subb
nop
jb
dec
in
xchg
sub
adcb
aas
cwtl
fs
mov
xor
mov
and
adc
or
sbb
in
sti
and
call
or
inc
fcmove
rolb
out
test
lret
or
xor
mov
mov
cmpsb
pop
sub
nop
cmp
and
lcall
jnp
aad
mov
push
sub
sbb
pop
clc
jg
mov
and
mov
sub
popa
ret
sahf
fdivs
aaa
sub
and
mov
lea
js
fs
test
cli
push
lahf
cmp
lea
popa
fwait
inc
outsb
cli
shll
cmpsb
cmc
mov
sub
cld
aas
insl
cld
das
les
js
nop
sub
pushl
mov
xlat
push
push
das
in
fdivr
je
add
push
sbb
les
ljmp
mov
lret
mov
insb
mov
xchg
push
add
stc
mov
or
cwtl
push
loope
leave
sub
loope
lods
push
dec
pop
scas
std
shl
pop
push
jbe
add
add
inc
cmp
mov
sub
adc
inc
xchg
dec
mov
std
mov
je
cs
xor
add
pop
sbb
int3
insl
or
lret
pop
stos
es
and
movsl
mov
push
xor
or
decl
inc
popa
pop
lcall
stos
cs
lret
pop
jle
add
pushl
inc
and
mov
addb
sbb
and
push
inc
popa
loop
outsb
test
mov
test
or
push
fiaddl
scas
jg
inc
loopne
add
sub
mov
add
fsubl
ret
mov
sarb
jae
jae
arpl
mov
fstpt
out
clc
xchg
inc
adc
iret
into
mov
test
lea
mov
in
shl
popl
adc
loop
stc
adc
ret
rcr
push
aaa
scas
mov
test
add
mov
lods
fmuls
adc
mov
sbb
jle
sar
xchg
cmp
outsl
sub
inc
stc
mov
add
jg
fisttpl
mov
add
sbb
sar
scas
frstor
je
xor
dec
mov
mov
scas
mov
mov
xchg
jnp
inc
jno
add
jae
incl
jmp
icebp
jmp
fistpl
xchg
dec
dec
lahf
push
mov
rcl
xchg
dec
into
push
cmpsl
lods
and
ror
ret
push
test
mov
push
loopne
push
mov
addb
test
lcall
mov
inc
sbb
dec
lods
inc
ficoml
mov
push
lds
test
jl
xchg
enter
decb
arpl
push
mov
or
lea
sbb
popa
mov
push
dec
add
insl
mov
jmp
mov
ljmp
in
add
and
push
sbb
mov
sub
cmpsb
cwtl
xor
push
sub
mov
dec
push
test
xor
or
inc
jmp
lds
and
cmpsl
push
lods
incb
paddd
adc
outsl
fisubrs
pop
or
sbb
insb
popf
js
call
popf
inc
bound
pop
sbb
testl
jmp
and
loop
cmc
mov
scas
add
push
inc
dec
xchg
jp
mov
insb
jg
xchg
and
jmp
mov
cmp
cmp
push
or
add
js
pop
loop
pop
call
xchg
jge
nop
shlb
test
cmp
mov
pop
cld
or
and
xorb
test
popf
mov
lea
mov
out
enter
fidivrs
dec
adc
aas
aad
ror
xchg
std
push
rcrb
mov
ret
jg
xchg
aaa
loop
mov
inc
call
add
in
xchg
sbb
nop
addr16
jecxz
sbb
outsl
or
in
gs
ret
xor
pop
cli
aaa
incb
nop
ret
aad
fadds
mov
cld
fwait
pop
jb
arpl
js
xchg
xor
mov
and
mov
sub
mov
stc
mov
inc
fcomps
pop
repz
mov
add
adc
cld
adc
or
das
push
std
or
pusha
aaa
aas
sbb
pop
aas
dec
xchg
pop
mov
data16
arpl
adc
cmp
push
mov
loopne
out
sarb
sbb
jno
daa
rcll
fs
add
incb
aam
xchg
aaa
mov
popa
push
sahf
in
das
jl
mov
push
dec
push
mov
xchg
aad
and
xchg
cmp
cmp
push
xlat
fnstsw
cmp
repnz
or
addb
das
out
adcl
mov
pushf
inc
data16
aam
stos
push
xadd
mov
mov
mov
cmp
dec
fnsave
out
int
loopne
mov
lods
les
cli
jg
push
dec
pop
adcl
andb
sbb
je
incl
std
test
orb
mov
jecxz
movsb
outsb
and
imul
cwtl
fiadds
icebp
lods
mov
or
add
cmc
incb
out
std
add
sti
iret
jb
add
or
orl
fst
aas
out
lds
cmp
aaa
pushl
outsl
mov
fs
out
mov
push
mov
scas
inc
xchg
push
sti
push
ret
mov
add
fcmove
xlat
cmp
das
mov
mov
subps
loopne
dec
mov
loope
call
inc
std
jge
and
xor
decl
cli
sub
adcb
sub
sahf
jg
pop
push
push
jne
mov
inc
xor
outsl
nop
jmp
sub
call
inc
adc
popf
rcr
mov
int
lods
push
les
psadbw
loop
dec
rorl
adc
fdivl
mov
pop
bound
or
gs
sarb
fwait
rorb
inc
incl
ds
arpl
add
lahf
imul
ffreep
sbb
inc
fdivrs
test
inc
inc
jle
les
pop
rep
xchg
dec
out
jbe
sti
fistl
cmp
div
js
xorl
xor
jmp
sub
inc
mov
in
push
xchg
sbbl
out
mov
cmp
cli
pop
fbstp
xchg
repz
jmp
ret
imul
enter
sti
mov
leave
incl
arpl
arpl
clc
into
bnd
out
xchg
cwtl
bound
aaa
inc
popf
add
addr16
dec
pop
pop
pop
mov
mov
or
jo
in
lret
mov
and
out
xor
mov
je
jge
sbb
sub
in
mov
insb
lret
outsl
ret
dec
jl
push
incb
push
dec
mov
pop
fldt
add
popf
mov
lock
adc
jbe
pop
mov
push
pop
call
add
push
ds
pushf
int3
pop
fldt
mov
inc
xchg
adc
popf
mov
lcall
leave
ljmp
push
push
scas
fdivr
mov
cli
lret
xor
mov
std
and
mov
jne
shlb
mov
push
lret
rcl
aam
test
outsl
mov
inc
add
push
in
mov
mov
stc
xor
hlt
push
scas
call
sub
ljmp
lcall
fsub
mov
fsubrp
add
rclb
mov
pop
cli
lea
mov
jbe,pn
into
mov
and
push
xchg
sub
or
dec
xor
adc
fsubrp
and
jbe
push
into
mov
jg
dec
cld
int
bnd
sti
mov
jp
cmp
cmp
in
mov
xorb
loopne
test
aas
fpatan
or
jle
nop
jl
fwait
cmpsb
fwait
gs
and
loope
outsb
jae
test
mov
push
incb
mov
xor
lret
repnz
pop
ljmp
iret
mov
lret
das
or
add
outsl
dec
cmc
movsb
add
cmc
dec
add
call
lcall
ja
add
jge
repz
fucomi
xchg
icebp
ja
pop
loopne
inc
std
rclb
sub
xchg
push
push
shrl
ds
aam
cmp
adc
and
xchg
sbb
lret
cmp
push
mov
icebp
add
push
outsb
iret
outsb
push
inc
cwtl
jb
and
cmp
rolb
popa
sub
fs
imul
fs
sbb
icebp
xlat
clc
ret
icebp
mov
sub
sbb
mov
adc
ds
cmp
jmp
push
out
aam
dec
std
or
mov
add
pop
loope
xor
push
pop
inc
pop
mov
popa
mov
aad
jle
inc
push
pop
data16
out
popf
stos
push
cmc
aaa
test
fwait
dec
aam
out
inc
ljmp
adc
shlb
inc
into
sarl
sbb
push
stos
arpl
push
push
hlt
popa
pusha
or
outsl
cld
aam
sbb
andl
cwtl
lcall
imul
mov
test
rclb
cltd
xor
leave
push
std
lods
mov
add
xchg
lcall
push
sarl
mov
fbstp
movsb
jle
jmp
jecxz
rclb
stc
lock
pop
test
loopne
jg
ja
jae
pop
jb
xchg
pop
adc
xor
xchg
mov
mov
ja
insl
sub
mov
testl
orl
or
add
pop
or
dec
mov
push
inc
adc
sbb
xchg
loopne
or
lcall
jp
outsl
mov
fsub
lahf
and
xchg
mov
mov
lgs
cld
rcr
es
insb
push
xchg
adc
decl
in
insl
xchg
xchg
fimuls
or
adc
dec
jg
mov
and
and
clc
mov
shrl
mov
xchg
push
repnz
pop
cmp
mov
adc
cld
sbb
std
pop
shrb
fcmovu
lds
test
mov
cmc
ficompl
sbb
push
insb
shl
pop
xchg
aas
jp
movb
popf
xlat
and
add
or
or
mov
mov
adc
nop
cmpsl
arpl
fucomip
mov
flds
and
push
sub
sbb
xchg
shr
jae
out
mov
push
lcall
cmp
add
sar
aas
int
sub
mov
insl
pop
fdivrs
and
mov
sub
imull
xor
lret
fdiv
jl
test
ljmp
std
add
dec
dec
fildl
loope
fwait
lods
lret
mov
mov
sbb
or
pop
cli
cmpsb
mov
mov
inc
popf
test
hlt
aam
xor
jb
add
or
inc
decl
out
scas
divb
fidivl
scas
sub
test
mov
mov
test
adc
xchg
mov
dec
cmp
loop
and
mov
push
add
js
clc
test
push
mov
shrb
add
movsb
add
cmp
fistpll
pop
xchg
adc
xor
adc
pop
push
insl
sub
push
rorb
test
orl
lahf
xor
int
in
cmp
mov
sarl
pop
mov
sub
push
mov
and
mov
add
mov
orb
push
adc
jge
lret
cwtl
pop
pop
sub
push
call
adc
jbe
addr16
ror
loope
adc
adc
ficoms
aaa
mov
xorl
loopne
sub
pop
daa
lcall
inc
mov
out
mov
xchg
xchg
addr16
mov
enter
nop
loopne
jg
push
lods
fcmove
lods
stos
nop
cmp
mov
sar
cld
push
push
cld
adc
inc
and
inc
aaa
or
or
loopne
lahf
xchg
outsb
and
decl
inc
aas
pop
outsl
ljmp
push
lcall
cli
lcall
sbb
das
or
sbb
fs
lcall
push
stos
fists
cmpsb
add
imul
popf
stos
loopne
aas
js
out
dec
iret
insl
pop
cmp
rolb
les
js
cmp
inc
fistpll
mov
test
adc
pop
loope
incb
sub
aaa
rorl
ja
pop
lock
dec
test
jne
rcll
inc
rcrb
and
dec
pushl
clc
push
sub
data16
mov
push
xor
das
mov
fs
mov
mov
pop
and
jle
loope
std
decl
cmp
mov
icebp
mov
fwait
iret
mov
fists
fcomps
xchg
inc
scas
inc
xor
decl
mov
arpl
xor
outsl
vsubsd
inc
in
inc
es
adcl
push
mov
rorl
in
mov
push
pop
stc
cli
xchg
scas
mov
pop
dec
repnz
test
lcall
or
roll
jno
pop
cmp
dec
jne
clc
xadd
and
mov
incl
fimull
push
sbb
pop
jb
sub
rolb
add
and
lahf
bound
aaa
push
loopne
add
call
sub
movb
int
mov
shl
ret
add
ja
mov
xchg
ret
nop
add
and
mov
lods
lock
inc
cmc
mov
std
stos
cmp
inc
mov
loop
cmp
lret
push
jns
xchg
add
sbb
push
test
lcall
mov
jl
add
aad
sub
loopne
testl
lock
add
and
and
mov
dec
add
push
xorb
pop
mov
and
jecxz
stos
clc
sar
xchg
mov
incl
call
xchg
in
xorl
iret
xor
decl
ss
jg
jg
cmp
rolb
scas
movsb
decb
and
pop
push
xor
incl
clc
ret
bound
ljmp
push
cmp
pop
jmp
mov
nop
jmp
cld
repz
icebp
outsl
push
imul
inc
jae
xorl
push
inc
cwtl
cmp
mov
cwtl
mov
inc
pushf
fdivs
sar
mov
lret
or
xor
sub
inc
ds
incl
icebp
cmp
mov
repnz
jg
test
xchg
pop
push
sub
cmp
dec
roll
sub
sbb
insb
addr16
sbbb
and
xor
pushl
sti
sahf
stos
lock
jle
push
cmp
xchg
inc
fcomps
fbld
fistpll
data16
leave
mov
ffree
test
lcall
pop
scas
dec
or
sbb
cs
adc
xchg
mov
inc
test
pop
std
jecxz
loope
xor
fiadds
subl
addb
ljmp
push
inc
cmp
jnp
pop
enter
inc
mov
stc
add
push
lea
dec
mov
pop
aas
cmp
lcall
dec
cmpb
cmp
in
cmpsl
and
and
add
scas
push
icebp
xor
or
lods
fisttpl
test
movsl
pusha
les
inc
lock
jbe
out
adc
pushf
clc
das
mov
hlt
outsb
or
js
movb
insl
cld
adc
sub
or
pop
cmc
mov
jmp
jle
mov
ljmp
das
mov
xchg
xchg
add
clc
add
add
push
pop
fdivr
mov
add
test
sbb
insl
inc
cld
fmulp
fcoms
stc
sbb
mov
or
lahf
xchg
mov
or
xchg
mov
mov
adc
sbb
orl
jo
test
xchg
cmp
je
aaa
loope
sbb
and
dec
jge
or
push
repnz
add
sub
pop
mov
lock
mov
daa
rcrb
sti
lret
mov
pop
lret
shlb
mov
test
fisubrs
loopne
outsl
jg
cmc
shrb
data16
adc
xchg
mov
inc
stos
lock
mov
jo
rolb
cmpsl
sub
pushf
cld
sub
ret
sar
fldt
dec
movsb
xchg
xchg
movsb
jns
popa
mov
jns
cwtl
aam
mov
dec
inc
mov
pop
mov
xor
or
cmpsb
mov
inc
loopne
popf
jmp
jecxz
jbe
sub
bound
es
test
dec
ds
mov
loopne
pop
loopne
and
adc
xchg
aaa
or
pusha
sbb
lea
inc
jo
push
add
mov
loopne
aam
jne
mov
movsb
incb
push
icebp
mov
mov
sub
scas
push
add
or
push
ss
adc
sbb
outsl
cmc
mov
xor
add
sub
rcrb
push
jbe
jg
sti
lret
pop
or
scas
js
xchg
or
cld
call
xor
mov
enter
push
mov
mov
rol
xlat
push
leave
push
add
aad
int3
inc
xorb
loop
fnstcw
inc
daa
out
and
push
aas
hlt
stos
or
aad
xor
call
movsl
jns
scas
in
mov
call
cs
jo
dec
mov
adc
jns
arpl
incl
or
mov
sbb
xlat
ret
xor
negb
add
outsl
pop
mov
fwait
xchg
stos
dec
lcall
out
iret
jle
mov
push
adc
icebp
loope
add
xchg
jecxz
es
inc
stos
pop
aam
sarb
pushl
and
mov
pop
inc
outsb
jg
or
das
cld
mov
scas
add
or
rorb
sbb
xchg
and
outsb
repz
dec
shl
jg
mov
pop
popa
dec
movsb
xor
lret
shr
jecxz
inc
rcrb
or
sub
inc
cmp
std
fistpll
ss
enter
enter
and
jg
jg
adc
imul
cmp
dec
fbstp
and
dec
lods
outsl
push
cmp
jne
shlb
clc
mov
mov
jge
pop
jp
xlat
mov
dec
and
sub
cmp
mov
pop
add
mov
lcall
sub
sub
jns
fcmovu
fiadds
inc
out
add
mov
enter
pop
hlt
test
inc
inc
add
push
das
andb
mov
and
cmp
pop
sbb
xorb
in
or
xor
cmp
push
jmp
movsl
xorb
rorl
jg
jg
add
int3
dec
jle
pushf
push
mov
dec
xchg
jo
out
incl
or
cmp
insl
popa
cld
or
test
subl
fistpll
loop
mov
jbe
sarb
pop
popf
push
xchg
pusha
mov
movnti
fwait
arpl
lcall
repz
test
sbb
or
in
cmp
lcall
or
ja
pop
or
push
int3
aam
filds
dec
push
jne
push
int
andb
jmp
xor
fwait
mov
icebp
ja
mov
add
roll
movsl
fildll
adc
or
insb
stos
mov
push
movsl
push
add
jb
push
loopne
ljmp
lods
sub
adc
cld
cli
mov
insb
cmp
sub
pop
imul
dec
and
push
call
adc
aas
jmp
push
xlat
xor
sub
adc
add
pop
push
jge
in
movl
ss
cli
jg
fists
adc
adc
fs
aaa
aad
stos
sbb
xchg
adc
insb
xor
add
faddp
jns
out
mov
pop
pop
xchg
lret
jle
ja
push
and
pop
std
inc
mulb
inc
or
rorl
xchg
scas
xlat
push
push
dec
filds
pop
ret
push
mov
adc
pop
ljmp
push
enter
push
dec
loopne
and
rcl
call
xchg
aas
ret
lea
jl
or
fistps
adc
dec
jg
or
cmp
out
xchg
aaa
sub
loopne
sub
and
popf
test
cs
ljmp
sbb
or
pusha
inc
pusha
enter
lret
jb
clc
push
sub
mov
int3
and
cmpl
xchg
adc
int
cmpb
cmp
cmpsl
xor
or
cmp
push
lods
inc
mov
jno
movsl
fsubrs
out
ds
mov
fimull
inc
clc
push
cmc
rcl
div
pop
lcall
loopne
push
fiadds
or
push
stos
gs
and
jo
adc
dec
je
push
lret
mov
sbb
test
loope
mov
lcall
test
sarb
inc
and
and
or
dec
dec
mov
test
inc
les
lods
xchg
ljmp
adc
adc
call
int3
fmuls
mov
dec
js
push
bound
cmp
jne
and
lods
push
cli
dec
orl
icebp
incl
mov
gs
xchg
js
das
mov
mov
mov
jecxz
mov
pushf
dec
movsl
push
cmp
push
xor
mov
jg
xlat
stc
or
adc
icebp
fildll
sar
add
outsb
sbb
sti
mov
jecxz
and
in
popf
gs
dec
pop
lret
push
sub
decl
adc
cmpl
xor
cld
scas
xor
pop
outsb
sbb
inc
sbb
loopne
sarb
mov
jg
ljmp
or
inc
clc
fwait
jae
mov
ret
mov
jns
add
pop
push
aam
and
pop
out
orb
popa
test
xor
xchg
pushf
mov
pushf
xor
js
in
das
cltd
inc
incl
cs
in
add
push
inc
cmpsb
hlt
aas
adc
cwtl
in
cli
int3
dec
leave
lods
movsb
and
xor
ret
dec
push
and
push
in
loop
lea
dec
leave
push
cmp
ret
ret
loope
jne
dec
dec
mov
push
fisubrl
and
lcall
inc
push
mov
cmpsb
jg
dec
jmp
outsl
iret
iret
iret
scas
jg
dec
hlt
mov
add
sub
ret
stos
das
push
inc
jmp
rorl
mov
mov
imul
pop
movsb
call
mov
jg
jbe
cmp
cli
movsb
dec
add
repz
jmp
decl
mov
mov
jns
jbe
push
sub
ret
icebp
mov
mov
mov
shrb
pop
cli
push
and
add
dec
data16
add
jge
les
push
test
pushf
xchg
loope
repnz
or
jle
or
and
dec
into
pop
clc
das
adc
pop
xchg
ret
mov
out
sub
and
test
mov
lret
mov
cmp
and
xor
js
icebp
mov
jo
mov
cli
sbb
jg
popa
aad
mov
in
mov
cwtl
and
repnz
into
sbb
nop
mov
or
push
xchg
cmpsb
mov
push
push
aaa
movsb
dec
push
adc
fucomip
aad
and
mov
xchg
ret
xchg
test
and
and
aaa
add
adc
inc
mov
and
aam
daa
stos
pop
xchg
subb
inc
sbb
mov
sbb
pop
pop
clc
xchg
std
imul
jnp
jb
push
jmp
outsl
std
out
imul
or
cmp
xor
dec
fwait
pushf
xchg
mov
es
negb
add
jo
sbb
sbb
pop
mov
ljmpw
cld
aas
pop
inc
movl
loopne
or
jp
dec
dec
int
dec
ret
outsb
cli
das
hlt
shrb
sub
push
lock
cld
jmp
add
pop
loopne
pop
cmp
cmpl
out
push
lahf
cmp
mov
daa
cs
jbe
mov
add
int
fistps
cld
pop
ds
jg
mov
scas
push
inc
push
mov
outsb
and
cwtl
push
dec
and
add
xchg
cmc
mov
mov
push
lods
mov
cli
add
push
dec
jne
decb
pop
out
mov
adc
out
outsl
mov
loope
jnp
mov
imul
pop
mov
aas
jb
dec
push
dec
add
stos
sbb
mov
xor
mov
daa
dec
dec
lods
add
or
lods
jns
add
dec
add
orl
jo
cld
aas
ret
and
xor
cmpl
and
cli
mov
jnp
inc
sub
push
filds
pop
inc
imul
cmp
mov
push
call
rorb
les
and
pop
push
test
test
push
jmp
loop
imulb
andb
cmc
lods
loop
sub
out
mov
loope
mov
push
or
fs
stos
inc
adc
outsl
push
mov
sbb
jecxz
inc
arpl
je
sub
push
stos
shrl
mov
mov
in
and
repnz
fistpl
pop
jnp
fldl
fildll
mov
mul
orb
or
pop
test
lds
incb
push
mov
movsb
inc
daa
cmpsb
les
call
mov
sahf
pop
bound
lds
push
dec
jp
adc
dec
cli
out
jle
xor
push
mov
adc
adc
and
and
shll
js
jns
add
add
xchg
xchg
repz
test
push
into
outsl
adc
aaa
push
aam
testb
and
push
mov
fcoms
inc
out
push
mov
daa
jp
add
js
inc
mov
and
in
insl
lock
pop
xchg
and
je
rorl
stc
movsb
lret
pop
cmc
cmp
xor
sbb
add
test
sbb
cwtl
mov
xchg
stc
cmp
ss
dec
xchg
xchg
cwtl
int
test
lahf
push
lods
or
rorl
cs
in
and
push
xchg
test
jle
lods
jmp
mov
xchg
cli
aad
popa
shll
loope
int3
lret
inc
sub
xchg
clc
mov
outsb
fwait
subl
cmp
sub
jecxz
cmp
mov
dec
mov
rcll
fcompl
or
push
cld
xor
mov
jmp
cmp
jmp
in
loop
push
xchg
outsb
xchg
mov
pop
shll
pop
dec
mov
adc
inc
das
push
decl
mov
mov
lods
addr16
cmp
std
cmpsl
andl
into
gs
adc
xchg
dec
jne
shlb
std
outsl
mov
scas
pop
ja
push
gs
fyl2xp1
mov
push
mov
lret
inc
imul
test
loopne
call
dec
rorl
add
std
mov
ficoms
xchg
add
inc
lea
sub
jg
fisubrs
fidivs
add
das
adc
add
out
rcl
sbb
jl
sbb
jb
jne
sub
mov
mov
andb
mov
lsl
les
push
test
icebp
cmp
mov
lcall
or
dec
rcll
mov
aas
jge
mov
ja
nop
loope
mov
pop
outsb
sbb
lcall
outsb
shl
add
mov
insb
data16
mov
test
push
decb
pop
in
mov
aas
mov
andb
loopne
popf
fsubs
mov
jg
pop
fadds
sub
pop
imul
ficompl
test
xchg
iret
pop
cmovne
xor
decl
iret
icebp
scas
xchg
mov
inc
lahf
inc
mov
pslld
add
jl
mov
sub
out
and
push
dec
add
fidivs
mulb
mov
nop
lret
in
negl
mov
fdivr
scas
es
jecxz
std
mov
in
outsl
jge
lret
or
add
popf
loopne
lret
mov
iret
ficoms
jno
cmpsb
imul
push
scas
dec
and
cmpsl
sahf
ljmp
push
or
out
fbstp
mov
mov
movsb
lea
enter
xor
and
cmp
sub
push
incl
cmp
mov
or
jecxz
mov
shlb
in
pop
or
add
jp
data16
mov
jg
push
in
push
jl
subb
fneni(8087
in
es
jmp
sar
bound
push
rclb
test
aas
mov
icebp
jg
mov
std
mov
dec
inc
mov
and
lock
lcall
sarl
mov
push
les
and
cs
mulb
or
pop
or
push
xlat
lret
push
jmp
sbb
pop
data16
or
adc
jg
cld
add
out
or
xor
stos
mov
rcll
sub
lret
cwtl
mov
aad
aaa
sub
rep
mov
dec
mov
mov
lock
and
les
or
sbb
xchg
and
cmp
decl
scas
add
iret
push
into
jle
pop
inc
lret
cld
pushl
inc
push
ljmp
mov
xor
outsl
sub
or
movsb
popa
dec
je
jne
incl
jo
pop
icebp
in
test
mov
and
pusha
dec
jne
push
ljmp
aad
stos
gs
cwtl
xchg
dec
sbbl
xor
sarb
inc
sbb
mov
ret
push
inc
fistpll
dec
std
push
sahf
jl
pusha
imul
adc
out
cmc
lock
push
adc
xor
dec
mov
enter
data16
xchg
mov
add
das
dec
insb
adc
add
inc
xchg
les
jns
cwtl
shlb
pop
mov
imul
ret
out
cmp
stc
dec
repnz
out
pop
push
jecxz
cmc
aas
add
movsb
cwtl
lret
inc
mov
inc
pop
std
and
repnz
pushf
jno
jp
jnp
pop
mov
clc
sub
insl
daa
sub
adc
cmpsb
cmp
dec
push
fsubl
scas
frndint
enter
stos
and
and
mov
dec
ljmp
incl
loopne
jne
shlb
adc
insb
push
outsl
movsb
mov
ret
loopne
push
dec
or
mov
mov
dec
lret
scas
jo
pusha
iret
mov
mov
fildl
in
outsl
mov
and
rcrb
or
xchg
inc
cmp
mov
mov
mov
xchg
mov
inc
lods
add
pop
cli
push
outsl
xchg
rclb
mov
push
add
mov
test
cmpsb
dec
lods
in
adc
fistpll
jo
outsl
stos
test
cmp
xchg
dec
sbb
fistps
cld
sbb
jecxz
icebp
xchg
or
imul
or
div
add
arpl
mov
and
hlt
or
push
popf
sarl
mov
cmc
lods
cmpl
xchg
jp
idivb
inc
clc
movsl
sbb
nop
add
aas
push
mov
add
aaa
clc
dec
and
cmp
mov
sbb
push
pop
stos
incl
imul
int3
data16
cmp
xchg
mov
sti
test
and
pop
js
or
hlt
add
loopne
push
mov
add
or
fdivl
in
ljmp
cmc
pop
daa
fsts
ret
inc
stos
adc
mov
push
push
pop
inc
sahf
das
inc
sub
xchg
lahf
jl
inc
dec
jg
mov
sbb
jae
out
inc
mov
aaa
jp
and
lret
cmpsl
sbb
sub
dec
dec
push
clc
pop
jo
popa
test
mov
dec
sub
dec
cli
fnstcw
cli
pop
sbb
aaa
mov
jg
adc
xrelease
inc
stos
adc
int3
cmc
or
cli
daa
mov
xchg
in
dec
xchg
pop
and
lahf
push
add
ljmp
lods
cmp
dec
je
pop
jmp
inc
xchg
sub
cld
lahf
cltd
cmpsl
pop
cli
outsl
decl
cmpsb
mov
orl
fwait
xchg
jl
js
es
lods
sti
pop
and
loope
mov
and
adc
cltd
push
movsb
loop
shlb
pop
jmp
in
loop
ljmp
xor
loop
orl
inc
fsubp
mov
inc
push
and
or
inc
cmp
insl
ret
call
mov
insl
andb
adc
or
aad
inc
aam
mov
and
pop
mov
sub
enter
mov
int3
ljmp
push
lods
fcomps
xor
jge
mov
mov
xchg
fs
add
mov
cmp
fwait
std
ret
and
shll
ss
in
jb
or
je
nop
in
xchg
xchg
mov
pop
mov
pop
in
jno
adc
lods
jo
cmpsb
and
sub
cmp
imul
rsm
aaa
call
inc
out
je
sar
and
stos
sbb
mov
roll
mov
sbbl
sub
push
adc
popf
xor
fisttpl
aad
xor
or
xchg
data16
xor
sub
push
test
fistps
mov
repz
das
sub
paddb
test
in
jmp
xlat
and
push
cmp
inc
adc
ljmp
stos
test
fildl
cmp
mov
imul
outsb
out
mov
jg
mov
inc
std
fs
lcall
fdivrl
and
or
and
or
mov
jmp
call
and
mov
jg
rorl
int3
add
mov
scas
js
pop
std
jbe
mov
fs
xchg
xor
inc
sub
int
cmp
call
insl
call
sub
dec
cmp
xor
sarb
ret
push
pop
je
cli
sub
cmpsb
inc
leave
mov
mov
mov
test
cmp
xchg
mov
push
aad
divb
lods
outsl
cmc
push
add
mov
push
adc
push
dec
mov
pop
mov
js
test
jge
push
cld
lcall
lea
loop
inc
icebp
adc
inc
in
cmc
mov
leave
jns
jae
fnop
and
int
sbb
in
daa
xchg
addr16
pop
mov
and
cwtl
mov
add
dec
and
inc
sub
pop
xlat
ljmp
gs
lea
mov
cmp
xchg
add
push
cld
lcall
push
inc
and
pop
jae
add
js
inc
rclb
dec
jge
sub
push
mov
mov
std
adc
and
cltd
cwtl
imul
nop
fs
add
cmp
lret
and
rcll
push
icebp
test
push
xchg
out
mov
dec
repnz
clc
decl
pop
jle
cmpb
repz
cmc
pop
loopne
gs
xchg
in
push
stos
test
mov
jo
call
dec
cli
sub
dec
out
and
lahf
inc
or
pop
mov
inc
jmp
mov
nop
mov
cmp
mov
mov
or
push
es
jbe
call
repnz
add
jecxz
or
jg
push
xchg
cmp
in
mov
or
mov
repz
adc
lea
sub
ret
loop
cmpsb
push
mov
jmp
add
sbb
and
repnz
or
and
ljmp
pusha
imul
stos
sbb
enter
mov
or
and
adc
add
pushl
lods
sbb
push
pop
fsubrs
jp
inc
lcall
sahf
ljmp
outsl
xor
mov
xor
mov
sub
pop
mov
pop
sbb
das
cmc
scas
mov
cmp
scas
outsl
push
in
mov
dec
roll
bound
mov
inc
xchg
push
mov
gs
ficompl
add
bound
inc
xor
hlt
jg
jo
adc
cmp
lods
mov
xchg
decl
jae
or
aas
lock
or
movsb
sub
test
mov
sti
cltd
push
adc
sahf
and
jb
mov
dec
outsl
sbb
or
push
xor
cmp
mov
sbb
cli
cmp
mov
xchg
sti
enter
enter
pop
in
bnd
hlt
cmp
adc
sbb
gs
loop
decl
imul
fcmovne
mov
jno
mov
dec
dec
push
pusha
push
inc
test
and
xor
sar
mov
mov
mov
icebp
and
adc
jmp
icebp
sahf
xor
cli
pop
dec
sbb
scas
stos
js
lds
ljmp
mov
in
adc
clc
jp
adc
add
mov
cmpb
fwait
pushf
push
cld
cmp
or
pop
daa
push
stc
jp
add
pop
pop
sti
aaa
xchg
and
aam
push
pop
jo
call
int
je
movsl
inc
sbb
fdivrp
int3
aaa
ret
push
pop
pop
lods
decb
ljmp
push
push
addr16
mov
cmp
pop
int3
adc
push
pop
lret
movsb
jb
outsl
lock
jnp
mov
les
sarl
mov
push
incl
sbb
scas
dec
push
cmpsb
mov
pop
adc
insl
inc
adc
sti
or
mov
adc
add
add
adc
outsb
cmp
or
test
add
mov
mov
addr16
hlt
add
add
or
lahf
rorl
xchg
test
movsb
cmp
ret
lea
sub
fisttpl
nop
pop
xchg
jle
push
add
or
jle
jo
cwtl
pop
mov
sbbb
inc
push
mov
mov
nop
cli
fsubl
inc
and
movsb
add
js
inc
stos
pop
incl
jo
ds
adc
mov
loopne
push
pmullw
jle
push
mov
rcl
imul
and
xlat
das
cld
pop
cli
aaa
lods
out
mov
jo
xchg
pop
dec
ret
js
or
imul
filds
pop
cmp
lret
push
xor
cmpsl
mov
cld
div
dec
or
cwtl
add
jg
jg
outsl
dec
subb
pop
pusha
pop
mov
inc
pop
sbb
fdivrl
pop
in
les
inc
mov
or
and
rcrl
add
cmp
mov
cmpsb
or
lock
imul
adc
or
sbb
xlat
cmpsb
insl
mul
inc
pop
adc
je
push
xor
and
pop
les
push
leave
inc
pop
mov
cltd
ret
inc
push
cmp
jg
jp
movsl
inc
push
por
ret
aaa
movl
negl
lcall
add
mov
jle
cmpsl
xchg
ljmp
movl
loop
dec
test
mov
clc
adc
std
xor
repz
push
sbb
sbb
aas
sahf
jle
out
mov
aaa
sbb
in
jbe
in
sub
jmp
xchg
adc
adcl
pop
int
outsl
loop
shr
sbb
mov
int3
jbe
sbb
decb
test
and
lret
pop
stc
fisttpll
idivb
cld
dec
cmpsb
sbb
cmpsl
in
or
cmp
inc
or
xchg
jae
repnz
outsb
insl
je
int
add
and
pushf
mov
and
sub
inc
xchg
push
and
addb
test
filds
dec
mov
into
popa
mov
fsubrl
jg
repnz
mov
incb
loopne
add
int3
mov
and
fwait
mov
mov
hlt
das
and
xchg
jo
push
and
add
pusha
ret
inc
push
or
mov
jecxz
jp
jne
jle
pop
add
jns
adc
test
or
or
out
jmp
mov
adc
test
push
mov
mov
cs
outsb
push
xchg
pop
mov
adc
xchg
gs
jl
in
and
dec
sbb
add
xor
sbb
pop
push
push
jbe
bound
mov
clc
inc
and
idivb
add
or
adc
and
out
lea
loopne
push
push
push
pop
popa
lds
fsubrs
inc
mov
and
pop
sub
ja
sbb
pop
aas
test
push
imul
aam
adc
frstor
push
call
mov
jno
in
pop
push
cmp
outsl
cld
and
cmpsb
or
or
mov
jg
push
aam
pop
aad
jae
imul
and
and
dec
pop
push
jae
movsl
add
ficomps
mov
xchg
clc
loop
lret
clc
lea
jg
lret
outsl
push
sbb
jg
pop
scas
or
mov
fwait
ljmp
roll
cld
cmp
pop
arpl
jne
mov
mov
and
imul
std
hlt
pop
push
faddp
sub
inc
sbb
idiv
pop
fs
sub
gs
fucomip
incl
push
push
rclb
lods
outsl
push
mov
les
rcll
rclb
loope
push
push
push
jecxz
test
std
sub
dec
jge
stos
sub
mov
sub
mov
push
cli
and
mov
ret
shlb
nop
imul
loopne
xor
pop
xchg
jae
hlt
mov
stos
jle
sub
mov
call
mov
pop
adc
repz
or
fldenv
out
ljmp
cld
and
outsb
xor
pop
test
aaa
xchg
outsl
push
or
sub
fisttpll
push
mov
imul
in
fwait
js
and
mov
push
adc
rol
mov
std
mov
fbstp
xor
xor
repz
mov
dec
dec
popf
mov
mov
pop
xlat
push
cli
daa
mov
mov
push
call
lods
dec
mov
pop
fwait
ljmp
add
inc
mov
and
popa
clc
das
ret
xor
mov
loopne
jle
pusha
or
xchg
inc
std
aaa
hlt
inc
sbb
hlt
add
cmp
dec
sub
push
fistps
dec
push
sbb
cmc
push
sahf
aas
lock
sahf
imul
je
push
add
int
sti
js
lcall
cmp
or
mov
add
scas
pop
xchg
jae
lods
pop
loopne
lahf
sub
and
hlt
push
repnz
mov
subl
mov
cmp
popf
jg
out
cmpsb
mov
loopne
mov
mov
push
dec
stos
inc
popa
mov
test
ss
or
std
outsl
add
subb
sbb
sbb
in
sbb
add
mov
push
and
test
add
outsb
and
sti
hlt
imul
push
mov
jg
sbb
in
pop
push
jmp
pusha
rclb
lods
lcall
add
in
xchg
xchg
sub
dec
loopne
call
inc
out
sbb
xor
rorl
out
adc
orl
or
ficomps
fidivl
icebp
ds
shrb
cmp
lcall
cli
sub
popf
addb
push
pop
fdivrl
rolb
aas
pop
rorb
push
and
pushl
sbb
pop
sbbb
out
iret
add
dec
inc
rcrb
mov
cmpsb
outsl
icebp
pop
xchg
cmp
or
mov
jo
fwait
mov
jg
or
insl
daa
sbb
sub
push
shll
pop
cs
pop
and
mov
jnp
cmpsl
sahf
add
rorb
xchg
dec
std
aas
scas
outsl
lret
xor
inc
push
stos
js
addb
sbb
arpl
stc
push
nop
inc
adc
fmul
xor
push
jne
mov
xchg
addr16
mov
pushl
xchg
out
add
sbb
xor
std
or
ret
xchg
xlat
inc
xchg
mov
and
leave
aad
or
iret
cltd
adc
add
dec
std
dec
sbb
sub
stc
xchg
xor
aam
lock
jo
sbb
adc
int
sub
xchg
push
push
dec
shl
pop
dec
movsl
mov
insl
jl
loope
pop
push
inc
cld
decl
adc
cmp
and
mov
lcall
pop
lcall
icebp
sub
jg
addb
call
jmp
push
sbb
popa
cwtl
popa
cmp
rol
testb
xchg
sbb
cltd
sub
cmc
pop
andl
pushf
in
lods
cld
gs
test
sahf
ret
mov
inc
decb
cld
pushl
aad
loopne
inc
inc
roll
inc
lcall
sub
jecxz
xor
cltd
cmp
mov
ja
movsb
push
ss
and
mov
fimull
dec
cs
cli
fbld
push
imul
cmp
xor
mov
sar
inc
and
sbb
addr16
adcl
call
in
mov
mov
lea
test
mov
mov
push
int3
jl
shrl
and
pop
and
mov
mov
xor
es
pop
mov
mov
mov
jle
call
cltd
aas
loopne
jg
scas
lods
loopne
dec
mov
add
xchg
add
mov
adc
dec
and
ret
xchg
ss
jg
xor
lods
mov
pop
pop
popa
loope
sbb
scas
xchg
mov
inc
push
call
stc
aaa
lock
mov
and
ja
push
in
xchg
or
add
pop
and
daa
fistps
xchg
ljmp
sbb
cmpsb
into
inc
test
aam
dec
cltd
add
popf
fs
xchg
popa
shrl
lds
jmp
lcall
pop
add
sbb
pop
or
adc
mov
ljmp
mov
stos
and
sub
jae,pt
adc
sub
ds
push
xor
fs
dec
frstor
sbb
out
dec
cltd
cmp
push
repnz
pop
jle
insl
js
bound
in
lahf
push
and
dec
movsb
aas
sub
pop
fwait
nop
stos
sahf
cmpsl
movsb
test
divb
cwtl
jle
lock
pop
jecxz
cli
pop
or
inc
in
push
pop
aaa
movsb
outsb
inc
cwtl
xchg
nop
es
incl
sub
or
or
frstor
in
lcall
cmpsb
xchg
adc
enter
jmp
jecxz
gs
mov
das
pop
jnp
gs
xchg
lea
add
mov
sub
lahf
clc
out
fs
and
and
in
lock
fisttpl
fucomip
adcl
loopne
shll
mov
pop
ret
xchg
mov
daa
test
stos
insl
and
add
xchg
cmp
icebp
test
mov
sub
push
mov
sti
xchg
call
rcrb
cmpsb
in
lock
or
imul
xchg
lcall
call
push
inc
jmp
or
xorb
fistps
loope
mov
push
in
jbe
sahf
push
test
lods
arpl
fistpl
sarl
mov
mov
cmp
jns
cmc
sbb
mov
cmp
or
push
jmp
xchg
cmp
pop
push
mulb
and
repz
fsubs
or
repz
xor
scas
fs
add
sbb
and
mov
jae
sub
out
sbb
add
mov
ds
fs
cli
call
fs
pusha
pop
xor
lods
push
data16
aaa
xor
xchg
push
cltd
movsl
dec
xchg
loop
outsb
lahf
jmp
adc
pop
jg
sahf
daa
xchg
lods
arpl
mov
mov
cmp
sbb
incl
mov
inc
loopne
sub
mov
or
popf
stc
data16
mov
mov
rcrl
mov
mov
xchg
int3
cmp
ja
test
inc
mov
mov
sub
and
test
and
lds
jl
pop
mov
xlat
imul
rclb
mov
ja
lea
aas
mov
xchg
repnz
mov
test
xor
add
pop
inc
mov
mov
lret
mov
xchg
test
xchg
aam
add
jecxz
mov
mov
test
sbb
test
push
stos
sbb
cmp
call
push
cld
xchg
inc
or
pop
mov
lret
cld
cmpl
push
roll
jecxz
sahf
push
dec
clc
decl
shll
xchg
leave
lcall
out
inc
pop
inc
incl
inc
iret
or
sub
int3
inc
mov
cmp
cmp
inc
popa
lock
cmc
inc
aad
rorl
dec
rorb
inc
cld
call
nop
inc
pop
or
movsb
jnp
pop
ljmp
jecxz
adc
outsl
std
push
hlt
dec
pop
add
lea
pop
cld
js
stos
jo
dec
xorb
repnz
jne
pushf
xchg
xor
and
inc
cmp
xchg
ds
std
lret
cmp
sub
mov
test
stos
aam
and
inc
leave
xchg
push
jg
cmp
mov
cmpsb
pop
sub
lahf
mov
aad
jl
imul
repnz
ficoms
cmc
outsl
rcr
and
mov
lock
and
and
or
sub
ljmp
inc
repz
xchg
inc
fucomp
cmpb
xor
lock
lret
dec
push
out
xor
jmp
jne
clc
lahf
mov
inc
rcr
and
punpckhbw
mov
adc
loopne
sar
shlb
xor
dec
pop
loopne
lahf
movsl
jg
out
add
outsl
clc
flds
nop
rol
xor
push
loopne
pop
cmp
addr16
dec
dec
inc
into
cmpsl
mov
cltd
or
mov
clc
sub
insl
adc
push
mov
repz
cmp
push
rcrl
dec
mov
jle
test
lds
jecxz
fisubs
pop
clc
aaa
push
hlt
and
push
and
adc
xor
fs
dec
sub
dec
adc
das
mov
jnp
mov
dec
sbb
add
outsl
jno
pop
cs
or
js
mov
jge
pushl
xchg
mov
inc
xor
push
sub
outsl
mov
sub
xor
add
das
jecxz
addl
mov
pop
adc
jg
push
pop
jne
sbb
adc
mov
test
jle
mov
push
xor
dec
push
xor
push
nop
jle
xor
cli
jg
mov
aas
mov
aas
push
nop
clc
inc
loopne
mov
lods
inc
dec
mov
bound
push
sti
test
xor
stos
mov
push
std
out
inc
xor
fcoml
dec
sub
xchg
and
loopne
mov
mov
mov
sub
mov
cli
jmp
xchg
std
cld
ffreep
sarb
hlt
pop
push
adc
scas
shll
cmp
cmp
cli
or
aam
xlat
iret
pushf
fdivrp
paddw
sub
mov
dec
ficoms
cmp
aaa
lcall
jo
inc
testb
pushl
outsb
les
sahf
xor
mov
ret
sub
lock
shrb
cs
inc
loop
incl
push
loop
inc
xchg
xchg
push
fnstcw
push
sub
mov
outsb
adc
mov
dec
mov
clc
mov
call
add
or
mov
or
and
fistpll
cwtl
int
scas
xor
pop
or
das
and
cli
daa
lds
xchg
int
loopne
xor
mov
mov
push
adc
push
cli
in
mov
and
out
sti
dec
sub
mov
jno
int3
add
cmp
and
rclb
add
scas
jecxz
movl
mov
adc
pop
lods
cmc
pop
mov
push
and
mov
orb
fbld
ret
xor
data16
sbb
mov
mov
pushf
sub
ss
jbe
dec
pop
aas
imul
cwtl
sbb
ss
push
sub
outsl
xchg
ljmp
aaa
adc
pop
shll
and
sahf
call
xchg
jbe
pushl
jl
pusha
stc
or
add
push
pushf
inc
lret
pusha
icebp
fiaddl
xorl
xchg
mov
sbb
decl
xchg
inc
pop
mov
shlb
dec
mov
dec
das
and
xchg
add
mov
and
xchg
out
mov
jnp
sub
lcall
sahf
lods
test
fnstcw
insb
jge
mov
push
fdivr
ss
push
lret
hlt
call
sbb
pop
pop
push
and
mov
mov
into
in
mov
sahf
adc
sbb
out
and
xchg
in
push
loopne
push
xchg
xorl
sar
and
sbb
mov
fdiv
jo
jmp
mov
ds
test
fistpl
lds
pop
cmc
mov
xor
mov
mov
dec
pushf
mov
pop
or
daa
cwtl
dec
cld
int3
and
aas
xchg
cli
setg
cmp
repz
hlt
decl
decb
xchg
stos
subl
cwtl
cli
push
jle
inc
mov
mov
mov
sbb
adc
les
pop
data16
shlb
ret
add
fdivrs
inc
jg
rclb
mov
xor
sub
jge
mov
lods
xchg
push
ret
and
mov
movsl
fcmovnu
clc
add
push
shr
add
lret
stos
or
adc
fstl
cmp
dec
pop
outsb
aam
push
inc
pop
sub
mov
fsubrp
ljmp
sub
ficoml
mov
xor
xchg
lods
or
mov
ret
clc
mov
aas
stos
jne
xchg
pop
push
xor
fsubrs
test
mov
pop
fisttpl
inc
push
into
xchg
mov
js
dec
jge
in
paddb
or
das
mov
aaa
popa
mov
ja
pop
mov
jge
decl
jmp
nop
int3
jecxz
jns
scas
xchg
outsl
call
lcall
mov
inc
inc
in
ficomps
in
shl
imul
aam
rorb
es
dec
hlt
lds
jle
les
lock
outsb
pop
mov
xchg
jecxz
js
mov
pop
clc
call
and
fsubs
aad
lods
mov
aam
jae
mov
inc
sub
mov
inc
xchg
sub
xchg
fisubrs
movl
pop
pop
mov
sub
pop
push
mov
rolb
inc
ffreep
andl
cmc
sbb
inc
bound
inc
inc
dec
sarb
push
or
adc
mov
nop
leave
js
push
jns
adc
mov
in
jne
rcr
pcmpgtb
aas
or
shr
movsb
adc
inc
jp
push
push
inc
xor
push
jp
mov
xor
mov
sbbb
movl
mov
test
dec
jg
mov
stos
xor
stos
cld
and
ret
nop
pusha
fmul
rolb
inc
clc
sub
jmp
xchg
insb
nop
call
or
jg
cld
aas
mov
xor
push
das
jo
mov
loope,pn
andl
xchg
dec
pusha
or
push
divb
mov
ljmp
fwait
cwtl
push
and
fwait
mov
push
sbb
call
insb
push
fiaddl
xor
adc
mov
mov
cmp
in
sub
jle
pop
ret
sub
push
or
andb
cmp
ret
rcrb
aam
ss
or
jne
jmp
std
pop
adc
push
and
jmp
inc
cli
push
dec
les
jge
sub
mov
decl
popf
add
push
lahf
dec
loope
in
mov
push
js
mov
push
cmpsb
lds
mov
out
ret
adc
loope
sbb
cmpsb
mov
in
xor
int3
out
test
je
mov
or
xor
mov
test
rorl
inc
pop
jge
stos
add
test
into
adc
dec
popf
push
shll
or
ret
dec
dec
cmp
mov
inc
pop
inc
dec
ds
lea
std
aaa
inc
adc
inc
neg
arpl
inc
hlt
sbb
adc
je
lds
jl
inc
test
je
and
xor
out
nop
xchg
std
pop
ret
sti
stos
mov
adc
pop
sti
fists
push
loopne
mov
push
inc
ret
lcall
mov
leave
adc
pop
shlb
and
outsb
sub
xchg
test
lret
push
ficomps
cmp
ja
mov
jmp
xchg
loop
xchg
fists
std
sbb
pusha
xorb
sub
pop
push
mov
sbb
sti
jg
scas
sub
adc
pop
in
mov
rolb
dec
pop
ficoml
push
inc
push
sub
rol
and
cmp
xor
pop
mov
orl
cmp
sbb
gs
test
and
ja
idivl
and
scas
shrl
pop
popf
jno
jbe
mov
pushf
adc
shll
std
jmpw
mov
xchg
jb
icebp
adc
inc
push
sbb
mov
nop
into
push
mov
and
sub
push
nop
addb
cld
js
sahf
jg
sbb
decb
fcomps
roll
sub
sub
pushf
ja
cmp
pop
lret
rcll
xor
lret
mov
icebp
mov
jle
cmp
add
sub
addb
pop
jg
clc
push
mov
mov
sarb
shll
push
dec
iret
ds
cs
aaa
pop
iret
inc
cwtl
and
roll
test
fists
jl
inc
inc
add
gs
sub
cmp
decb
lahf
xchg
cmp
mov
rorb
inc
add
aad
add
push
cmpsb
mov
fistpll
or
jns
mov
addl
hlt
push
cmp
xor
and
dec
or
or
clc
xchg
add
adc
cltd
pop
add
fdivrl
mov
ljmp
xor
mov
push
pop
dec
sahf
and
data16
call
push
inc
mov
sub
decl
in
lret
outsl
and
sub
es
add
jo
and
loope
cmp
fistl
jmp
mov
pop
mov
xor
rolb
dec
cmpsl
adc
add
incl
movb
push
ljmp
ja
jo
rorb
cli
inc
mov
push
pushf
fwait
adcl
lods
xlat
pop
cli
pop
jl
mov
adc
cmp
add
lods
sarl
testb
clc
mov
addr16
mov
fsubrl
and
dec
neg
jae
pusha
movl
dec
adc
lahf
sbb
add
sar
add
decb
sub
or
lock
jmp
sub
stos
push
xchg
aas
pop
shll
test
xlat
sar
mov
dec
mov
mov
mov
sub
jge
adc
pop
dec
add
xor
stos
int
add
outsl
and
dec
fadds
xchg
ficomps
xchg
sbb
jle
aas
add
je
xchg
stos
jns
mov
sub
incl
mov
jecxz
cltd
pop
stos
test
mov
inc
fistl
cmpb
lock
out
and
in
lods
jmp
cld
and
hlt
jmp
xor
inc
xchg
cmp
pusha
cli
mov
push
push
xchg
mov
xchg
stos
sbb
and
and
in
incb
ror
pop
cmpsb
adcl
mov
cmp
lock
pop
sbb
add
jno
jmp
ss
jl
push
gs
lock
std
pop
pop
pop
call
add
repz
xor
mov
call
roll
outsl
icebp
inc
inc
movsl
jae
inc
testl
out
mov
dec
sub
and
fmuls
jbe
push
push
dec
rcll
pop
mov
ljmp
cmpsl
nop
xlat
ss
cmpsl
mov
jle
pop
dec
xlat
lods
jmp
pusha
add
mov
mov
push
add
sar
jo
call
jmp
inc
and
mov
enter
dec
push
enter
xchg
dec
pop
cli
jmp
add
cmp
sub
pop
int3
dec
mov
ret
add
pop
mov
es
cltd
add
cli
dec
mov
xchg
pop
add
sbb
xor
xor
ljmp
rclb
decl
popa
cld
and
inc
sub
insl
jl
xchg
xlat
loop
aas
iret
movsb
incl
leave
dec
in
push
iret
mov
inc
jnp
and
mov
lcall
cmp
add
xor
iret
pop
jmp
dec
lock
jmp
xlat
add
lcall
pop
imul
cs
sahf
xchg
adc
std
mov
pop
std
ljmp
icebp
jno
std
xor
push
cwtl
jbe
repnz
xlat
aam
fmuls
lcall
adc
pop
or
loope
test
mov
or
jg
es
leave
sahf
jmp
mov
jg
push
mov
jb
in
hlt
adc
gs
decl
mov
cltd
movsl
xchg
mov
jnp
mov
sub
fisttps
jg
dec
ljmp
adc
fdivrl
clc
test
dec
int3
push
push
pop
lret
push
pop
push
mov
sub
call
movb
imulb
arpl
adc
data16
cwtl
ss
aas
dec
ljmp
dec
insb
cltd
js
scas
lret
outsl
mov
loopne
mov
dec
sti
incl
popl
stc
push
adc
adc
aam
and
mov
jg
push
test
inc
repnz
mov
jo
insl
mov
cmc
sub
jne
outsl
icebp
decl
push
pop
cwtl
daa
ror
je
ret
push
mov
jl
xor
fnsave
mov
sbbb
aaa
sbb
fisubl
hlt
jnp
add
mov
mov
idiv
lcall
dec
movsb
cs
adc
insl
push
xchg
xchg
pop
imull
imul
cmpsb
mov
mov
jle
mov
jmp
xor
and
mov
push
jno
jbe
shll
inc
loope
daa
enter
adc
arpl
fldt
call
stos
pop
push
mov
cltd
fs
nop
pop
lret
inc
pop
push
in
insl
popa
push
adc
data16
jecxz
incl
sbb
cmp
ds
cld
cld
push
inc
aas
decl
jle
push
test
mov
adc
into
ljmp
jno
push
mov
push
ljmp
filds
mov
clc
ljmp
jno
sbb
xchg
hlt
jbe
push
je
cmp
jmp
adc
cmp
xor
dec
push
inc
dec
adc
ja
pop
xchg
popf
imul
add
cld
xor
dec
cmp
sub
addr16
aam
arpl
mov
lret
lods
ljmp
sbbb
shrl
jmp
insb
xchg
push
xchg
sub
call
push
arpl
je
pusha
mov
adc
jmp
pop
in
repnz
pushl
push
scas
push
lods
movsl
dec
cwtl
int3
lea
xchg
cmp
xchg
icebp
jg
mov
ds
xor
imul
lcall
add
jbe
cmp
jg
mov
pop
xchg
pop
loopne
call
pop
out
mov
sub
cmp
mov
jecxz
scas
lods
adc
ljmp
into
sbb
or
test
inc
es
sub
jns
bound
push
insb
clc
jmp
or
ja
mov
pop
add
cmpsl
mov
inc
xor
rorl
adc
xchg
cmc
or
sbb
mov
bound
sbb
std
ljmp
xchg
imul
cwtl
pop
push
or
das
iret
adc
notb
cmpsl
std
shlb
sub
ljmp
fnstsw
sbb
sbb
inc
les
jg
repz
push
xchg
mov
adc
incl
mov
jno
pop
jl
xor
andb
adc
adc
loope
sar
incl
pop
js
and
mov
mov
jmp
pop
inc
lcall
mov
push
sub
cmc
enter
insb
addr16
lcall
fsubr
cmp
inc
in
ds
std
mov
sbb
lods
out
push
cmpsb
push
dec
ljmp
inc
dec
daa
and
mov
jae
inc
and
push
and
cli
or
nop
outsl
pop
mov
mov
cmpsb
es
mov
and
sub
push
cmp
add
call
jnp
mov
cmp
and
fsubrs
movsl
cmc
decl
jp
pop
xchg
xor
cmpsb
mov
cmp
cld
jae
sbb
call
jno
and
ljmp
arpl
ljmp
jmp
mov
rcl
icebp
mov
cld
jnp
pop
xchg
addr16
inc
dec
fsubp
add
lods
jecxz
cmc
fcmovbe
sbbl
lods
movl
xchg
or
movsl
or
nop
mov
mov
cld
data16
xorb
test
stos
xchg
cmc
dec
call
enter
enter
xor
cltd
rcr
decl
push
mov
js
add
sub
sbb
inc
sub
enter
incl
ja
dec
xchg
les
andb
push
inc
aad
add
in
push
pop
mov
jmp
clc
pop
test
mov
add
pusha
lods
and
cld
add
aad
mov
jmp
out
fldenv
xchg
add
inc
dec
inc
mov
lcall
mov
and
cwtl
jg
sub
inc
sbb
xor
jb
lock
xor
decl
pop
mov
xchg
push
lock
jl
cmc
mov
shrl
cs
lcall
add
mov
mov
cmpsb
push
xorl
push
push
sbb
push
incl
cld
iret
jb
xchg
shll
pop
cs
stc
cltd
negl
jno
lcall
js
jle
xor
cltd
test
push
adcl
out
inc
push
inc
aaa
mov
ljmp
xor
cmp
jno
aas
gs
pushf
lcall
rcll
mov
mov
jnp
jo
std
fiaddl
jge
into
push
adc
xchg
jecxz
decl
frstor
daa
outsl
lahf
inc
into
pop
sub
enter
and
aas
les
dec
andb
ss
hlt
rolb
cmc
sahf
jecxz
movsb
sub
inc
outsb
pop
add
test
pop
or
call
cli
or
js
add
test
loopne
stos
loopne
jge
movsb
mov
cld
lcall
stos
inc
xor
sub
mov
daa
dec
or
clc
clc
in
add
faddp
in
lcall
lock
cmp
ljmp
push
scas
aam
mov
mov
int3
dec
pop
outsb
pop
jae
jmp
sub
xchg
mov
seto
cld
jg
pop
shlb
dec
adc
int3
or
lcall
push
xor
in
inc
sbb
nop
inc
mov
mov
or
fwait
shlb
out
enter
test
or
hlt
mov
call
std
shrl
shlb
lock
dec
mov
movsl
inc
push
ss
mov
call
jno
data16
mov
dec
repz
fldenv
xor
and
les
js
and
in
insb
loope
inc
lcall
gs
rcl
cmp
push
push
push
int3
testl
daa
bound
out
lcall
pushl
out
xchg
int3
scas
imul
outsb
mov
mov
or
cmp
test
mov
fisubrl
bound
mov
mov
sar
push
mov
or
xchg
std
outsb
jb
lock
lock
iret
ret
xchg
ret
lcall
shll
pop
dec
loop
shlb
pop
sti
dec
popa
stc
pop
clc
sub
adc
dec
and
xchg
jo
lods
sub
sub
xchg
dec
loop
clc
aas
int3
call
or
xorb
nop
push
adc
bound
std
cmp
popa
movl
sbb
sbb
popa
call
xor
out
jg
cs
div
jo
jae
popa
out
push
sbb
jg
xor
loop
xor
mul
adc
mov
pop
inc
dec
inc
fsts
movsl
call
fs
arpl
rorb
jl
shll
ret
movb
jg
call
arpl
js
xchg
dec
fbstp
outsl
mov
mov
mov
or
mov
mov
fsub
jns
sahf
cmp
aam
add
shl
das
std
decl
nop
mov
ret
and
xor
push
pushf
sbb
out
cmp
inc
mov
jne
dec
jge
pop
push
into
inc
xor
xor
in
sub
nop
sbb
add
outsl
push
sahf
mov
adc
xlat
in
gs
sub
addb
lret
sbb
inc
cltd
inc
mov
cmp
mov
das
xchg
xchg
jle
das
adcl
sbb
pop
shlb
std
mov
pop
inc
ss
sbb
inc
or
flds
fidivrs
decl
push
fwait
pop
hlt
pop
pop
push
mov
dec
js
adc
jo
loopne
lock
mov
outsl
incl
lds
and
fldcw
out
jb
idiv
add
popl
pop
stos
mov
pop
jno
aas
push
lahf
lahf
jmp
decl
daa
les
inc
dec
xchg
iret
push
imul
or
ds
adc
jg
sbb
es
mov
lods
add
mov
or
ret
jmp
push
test
inc
adc
inc
es
add
test
lea
sub
cmpsb
xor
push
shll
stos
test
xor
push
sub
jmp
ret
mov
fsubr
icebp
repnz
je
test
lea
jg
icebp
iret
lods
xchg
ljmp
in
subl
add
or
adc
mov
mov
mov
mov
insb
test
adc
fldenv
jnp
xchg
xor
push
pop
pushl
push
inc
js
pop
mov
mov
loopne
testl
lcall
xchg
mov
mov
ret
notl
testl
jnp
in
lret
ds
jne
push
sub
fwait
lcall
pop
inc
xor
test
mov
jno
mov
clc
mov
popa
mov
aaa
adc
cmpsl
lea
iret
out
and
sub
cmc
lcall
imul
enter
pop
pop
jg
inc
ss
push
mov
ljmp
je
and
cmpsl
lea
das
hlt
in
xchg
call
cwtl
pop
or
shld
lods
aaa
clc
mov
jbe
fidivl
adc
inc
mov
sbb
mov
loope
movsb
adc
stos
mov
idiv
stos
rorb
mov
sub
mov
push
adc
mov
sub
or
dec
js
ret
inc
and
jle
jmp
icebp
test
push
lods
rcll
outsl
lret
lods
iret
andl
cltd
add
jle
addr16
mov
cmp
cmp
xor
ret
jecxz
cmp
sbb
call
call
xchg
dec
adc
mov
pop
mov
jecxz
cmp
sub
adc
ljmp
inc
jg
pop
stc
les
dec
jge
pop
insb
push
lcall
loopne
or
mov
scas
loope
pop
xchg
shlb
xchg
mov
sbb
mov
mov
lock
pop
xchg
outsl
or
lea
aam
ljmp
sbb
inc
and
fstp
icebp
das
subl
mov
and
push
lcall
xchg
adc
inc
mov
dec
dec
imull
ljmp
cld
dec
dec
cld
fidivrs
je
mov
sahf
jg
insb
inc
mov
mov
mov
aaa
mov
mov
movsl
push
mov
cmpsl
fmulp
iret
jge
incl
movsl
ja
aaa
xor
push
and
and
cmc
stos
lock
cli
fsubs
out
jmp
sub
lods
incl
sub
rclb
dec
aad
cmp
mov
ljmp
imul
push
mov
pop
inc
ja
pushf
cli
dec
lahf
and
scas
ja
mov
lea
cmp
or
or
cld
mov
pop
aas
fbstp
out
mov
push
data16
inc
shll
shll
idiv
jmp
xlat
inc
adc
into
ljmp
cli
ficoms
and
inc
mov
clc
pushl
mov
nop
mov
fildl
into
xor
imul
gs
test
ficoms
mov
sub
pushf
mov
jecxz
outsl
fbstp
xchg
in
dec
adc
loop
cmp
jle
in
lcall
ljmp
add
xor
lahf
sbb
ljmp
loopne
or
test
cmpsb
sub
inc
mov
lcall
ret
xchg
adc
sbb
xor
inc
inc
lock
sbb
mov
lcall
jae
or
in
lock
sti
push
cld
cmp
xchg
xchg
pop
dec
cmp
loop
fistpll
lods
cmpl
mov
mov
sub
in
adc
bound
or
mov
icebp
mov
pop
jno
int
or
or
fbstp
push
jne
mov
inc
lcall
jg
mov
add
push
xor
mov
ficoms
call
jmp
pop
mov
out
mov
inc
pusha
movsb
mov
mov
outsl
lock
push
inc
in
jmp
cli
jmp
sub
iret
test
mov
cmc
inc
add
cmp
pop
sbb
jmp
inc
rcrb
or
ffreep
or
fistpll
pop
dec
fnstcw
and
dec
xchg
xchg
ljmp
push
lock
mov
push
fisubs
and
inc
lea
inc
push
stc
ljmp
push
lcall
lds
mov
push
xor
jo
inc
push
lret
ss
ret
andb
inc
xchg
pusha
adc
loopne
mov
mov
jmp
frstor
mov
test
mov
xchg
sub
decl
xor
xrelease
loop
mov
sub
add
repnz
and
lods
pop
cld
mov
imul
fs
pop
or
jg
mov
cmp
pop
inc
xchg
inc
jecxz
scas
test
daa
das
add
ljmp
aam
sbb
xlat
and
shlb
nop
dec
or
jb
movsb
enter
push
inc
aad
mov
enter
lods
add
lret
decl
loop
mov
hlt
pop
mul
sbb
cld
push
xor
dec
roll
xchg
das
cld
call
ret
sti
out
sbb
divb
and
mov
fidivl
push
std
ljmp
dec
movsb
push
in
rclb
call
dec
pop
sbb
aam
inc
jecxz
movl
mov
pop
mov
aam
in
fldcw
lds
mov
xor
pop
cld
call
fsubs
ror
roll
insl
orl
jp
jmp
lret
cmpsb
jbe
mov
xchg
stos
cltd
or
mov
loopne
jg
inc
scas
test
mov
sbb
aad
mov
test
daa
jg
iret
scas
pop
sti
aaa
incl
addb
shlb
lcall
incl
incl
xchg
xor
addr16
push
movsl
mov
inc
decb
lcall
test
iret
push
out
cmpsl
xorb
cmpsl
call
out
out
mov
or
cli
cli
mov
out
leave
xchg
xchg
add
loop
and
push
call
orb
dec
mov
pop
xor
jg
incl
lds
add
shr
dec
jbe
sbb
lcall
sbbl
cmc
adc
leave
or
xor
incl
or
pop
sub
in
outsl
out
cwtl
xor
sbb
dec
adc
jmp
mov
std
in
repz
and
loopne
cmp
sub
adc
incl
mov
xchg
adc
int
inc
mov
leave
rcll
je
popa
lock
shll
mov
loope
insb
stc
mov
lods
pop
jmp
sub
or
sbb
inc
les
mov
pop
ss
xor
imul
push
idivl
adc
int3
imul
dec
xchg
mov
cltd
cmp
les
cmp
xchg
mov
mov
hlt
jmp
fldcw
lea
cli
movsl
xchg
ss
test
fucomp
sbb
shl
mov
xor
adc
mov
nop
cmc
sub
cli
jns
ja
ljmp
aaa
add
xor
js
or
mov
jg
cli
xchg
mov
subl
aas
mov
ret
or
cmp
ljmp
pusha
loopne
shl
pop
push
fdivrs
sub
ds
jl
pushf
mov
pushl
aas
in
pushf
ret
clc
inc
sbb
andb
lock
mov
xor
lds
push
test
sbb
jae
and
lods
adc
dec
int
icebp
outsb
jp
inc
cmp
or
jmp
or
idivl
cmp
aad
sbb
inc
add
adc
repz
lds
fisubrl
or
cmp
push
inc
adc
jnp
sub
call
outsl
jl
lret
jl
pop
mov
inc
mov
idiv
and
mov
sub
pop
std
test
in
inc
pop
add
xchg
addl
test
jecxz
ljmp
mov
nop
ficomps
gs
in
push
cmp
fidivs
in
repz
push
cltd
decl
das
and
push
mov
adc
icebp
xchg
inc
call
clc
or
sub
mov
xchg
cmp
std
insb
leave
hlt
pop
mov
pop
lcall
cli
inc
inc
fistl
cmpsl
popa
xchg
subl
inc
cltd
int
or
jg
in
inc
sbb
mov
dec
movsl
mov
or
add
xor
test
cmp
fdivrs
pop
stc
jne
xchg
loop
pop
ret
insl
int
push
popf
add
insb
jmp
sub
xor
push
jmp
jecxz
mov
sub
aad
test
push
mov
xchg
les
add
arpl
decl
jmp
inc
lea
arpl
bound
ret
outsb
mov
icebp
inc
bound
xor
adc
pop
and
dec
test
call
dec
sbb
fs
dec
bound
and
loop
pop
imul
pop
cmc
das
fbld
jmp
mov
mov
lahf
arpl
addl
xor
mov
shr
xor
rorl
pop
imul
jp
push
ret
out
lock
ljmp
mov
fcoms
js
ret
fdivr
sti
sbb
sbb
cmp
inc
insl
xor
pop
cmp
adc
mov
rcr
mov
fwait
aam
lods
dec
mov
dec
and
inc
pop
or
nop
or
scas
call
mov
pop
push
pushf
outsl
in
movsl
mov
inc
jmp
xchg
push
pop
nop
test
or
xchg
mov
shl
arpl
call
mov
xor
out
push
inc
in
ljmp
pop
inc
mov
xchg
addb
stos
sti
add
in
mov
push
xchg
cmp
xor
stos
mov
into
xchg
dec
sub
scas
roll
add
fcos
incl
inc
adc
fidivs
push
fisttpl
fsts
pusha
sub
ljmp
adc
insb
sbb
pusha
mov
jecxz
aaa
push
mov
inc
or
xchg
push
pop
mov
pop
mov
or
repz
loope
fstpt
mov
xchg
mov
jl
dec
mov
ret
lcall
fnstsw
jbe
push
xor
sarl
jecxz
sub
cltd
gs
inc
sub
ljmp
lock
div
out
xlat
and
cs
in
mov
test
call
clc
mov
xlat
push
mov
sbb
jmp
fldcw
push
aam
imul
lahf
mov
fistl
dec
ljmp
popf
pushl
xor
scas
loopne
hlt
test
es
lds
lods
fildll
pushl
jge
imul
ss
mov
out
or
push
mov
lcall
mov
repz
mov
fs
dec
inc
xchg
adc
mov
in
pop
push
mov
call
sbbb
mov
into
loopne
xchg
std
gs
fwait
incl
ljmp
and
mov
xor
dec
pop
ficoms
fildl
pop
in
out
mov
sub
jne
push
add
aaa
cmpsb
lds
jno
push
pop
repnz
call
cltd
outsl
ret
popf
sub
mov
mov
test
cmp
jmp
ds
jno
scas
and
mov
ret
inc
out
inc
xchg
fbstp
pop
pushl
push
scas
push
xor
fnstenv
mul
pop
cmp
icebp
test
mov
mov
imul
mov
jbe
jl
call
je
xchg
cwtl
jle
cpuid
repz
xor
pushl
pop
sbb
push
movsb
mov
mov
dec
mov
popa
das
pop
lods
fmull
cmp
popa
decb
adc
xchg
aas
test
outsb
hlt
mov
divl
es
lret
fadds
out
jl
scas
jmp
arpl
insb
dec
movsb
into
jns
aam
icebp
push
sub
call
xchg
call
sti
inc
inc
push
subb
jg
and
and
fsubrs
or
or
jl
insl
dec
jae
inc
inc
aad
icebp
xchg
inc
data16
rolb
ljmp
lret
mov
or
aam
out
call
lahf
lcall
pop
clc
scas
dec
cld
xchg
jge
jnp
pushf
testl
mov
mov
pushl
push
mov
data16
jns
outsb
pushf
hlt
add
out
mov
mov
incl
or
jo
adc
cmp
jmp
xchg
lcall
mov
inc
lds
pop
jae
lahf
das
das
or
sbb
ljmp
lcall
std
mov
ret
add
fcmovnu
add
jnp
mov
fistl
push
sub
pushl
cli
sbb
adc
enter
dec
or
movl
jns
sarb
dec
sbb
jne
or
push
jge
shll
decl
pop
push
push
cwtl
std
and
pushf
std
xor
mov
in
int
shll
bound
add
jg
mov
stos
movsb
das
dec
pop
rcl
pop
dec
sahf
jmp
jg
out
lea
add
mov
enter
mov
mov
dec
call
outsl
pop
pop
push
in
or
sub
icebp
inc
mov
in
lods
out
shlb
movsl
shlb
cmp
jbe
cmp
jae
shl
xchg
cli
gs
decl
stos
mov
inc
inc
je
enter
fistl
pop
mov
das
pop
dec
fucompp
out
push
scas
scas
push
movsl
dec
repz
inc
push
dec
mov
lcall
sub
shlb
add
lds
adc
cmp
cmpsl
jl
std
mov
test
sbb
dec
mov
aad
push
int
pop
mov
lcall
jbe
inc
push
push
push
adc
shrb
fnstcw
lgs
mov
scas
add
imul
cld
push
arpl
inc
cmp
lods
loope
std
push
xchg
mov
dec
mov
sub
sbb
cwtl
into
sbb
imul
notb
in
or
mov
or
xchg
mov
mov
or
dec
ds
decl
out
mov
test
stos
and
mov
jne
insl
lcall
push
cld
push
stc
stos
xchg
cwtl
push
and
adc
inc
gs
ljmp
push
add
jge
add
xor
jne
aaa
push
lea
push
push
incl
pop
gs
inc
sbb
add
and
lea
aas
rcrl
inc
ja
stos
mov
decl
das
stos
inc
outsl
sub
inc
pop
xor
and
jae
scas
lock
mov
out
or
cli
mov
ljmp
push
popa
lods
in
mov
cmp
in
rcrb
jle
ds
mov
mov
lcall
push
fbstp
push
inc
outsb
mov
and
xchg
repz
or
loope
push
or
mov
movsl
shll
int
push
pop
sub
mov
and
or
std
daa
scas
jmp
push
jl
fdivl
xchg
jmp
loope
jmp
pop
imul
shlb
sub
loopne
add
pop
pop
lcall
adc
cwtl
xchg
fldenv
mov
movsb
cmp
mov
push
cmp
sub
fmuls
jbe
dec
cmp
shrb
mov
xor
aaa
jmp
add
pushl
fdivrl
jae
in
mov
jbe
mov
ljmp
xchg
mov
mov
outsl
cmc
in
push
adc
adc
push
scas
cmp
dec
adc
call
or
sub
mov
roll
cmpsl
sub
out
fildll
mov
add
adc
mov
out
xor
fstpt
cwtl
filds
aaa
clc
mov
pushf
leave
roll
andb
push
icebp
jecxz
std
pop
push
cmp
lods
lcall
test
ljmp
push
test
mov
and
int
mov
xchg
aam
addr16
call
je
shlb
dec
imul
jne
xchg
push
fistl
pushl
push
push
jecxz
push
sub
into
xor
cmpsb
push
loope
fistpll
mov
dec
aas
test
call
and
bound
stc
adc
xchg
sub
pushl
sti
fsubrl
jmp
fcmovne
jecxz
repz
call
mov
mov
aaa
fisttpll
fidivs
and
pushf
sbb
pop
je
add
shll
fbld
outsb
xor
pushl
js
repnz
rolb
pop
or
xor
clc
ljmp
xchg
pop
jmp
stc
adc
xchg
pop
js
mov
pop
jb
push
imul
mov
adc
mov
daa
stos
adc
andb
sbb
or
push
jg
xor
push
mov
mov
xlat
enter
in
ljmp
sahf
stc
idivb
add
js
loope
bound
sbb
outsl
cld
mov
stos
fs
jmp
pushf
or
pushl
das
imul
es
insb
mov
into
loope
out
scas
pop
xor
dec
dec
sub
jmp
mov
call
shlb
int
jg
or
out
cs
cwtl
and
mov
shll
jnp
lret
push
rcl
sub
test
jnp
out
cmpsb
cmp
and
in
adc
sbb
push
cmp
incl
pop
in
lret
sub
mov
subl
inc
or
incl
xchg
pop
jbe
pop
cmp
push
push
out
insl
ds
pop
fildl
xchg
mov
mov
xchg
dec
ret
mov
loopne
incl
mov
push
push
into
pop
std
adc
leave
pushf
fists
or
test
mov
std
cmp
ds
insl
mov
pushl
clc
das
icebp
ljmp
mov
stc
out
xor
pushl
jns
mov
adc
lret
imul
ret
icebp
mov
mov
or
lcall
clc
repnz
mov
pop
mov
xchg
xchg
push
mov
fidivl
sahf
int3
clc
dec
test
xchg
aad
pop
loopne
mov
sub
ljmp
jecxz
xor
js
mov
pop
pop
cmpsb
push
int
mov
sahf
adc
xchg
jbe
aaa
aam
fists
adc
repz
cs
push
cmpsb
movsl
shlb
xor
cmp
sahf
mov
int
fistpll
dec
ljmp
mov
jmp
dec
xor
inc
in
fcmove
movsb
loopne
sub
clc
cli
pop
std
test
data16
cli
jg
popf
nop
fldcw
xor
xchg
or
lods
bound
mov
testl
cmpsb
in
dec
call
adc
inc
push
fdivrl
in
push
ljmp
test
push
mov
fildll
aam
sub
in
push
clc
ljmp
fwait
gs
loopne
loopne
sahf
addr16
in
mov
fstl
out
lods
cmp
pop
push
jge
lcall
jle
scas
pop
lret
xchg
or
test
fcompl
loop
cmpsl
adc
shl
dec
les
aaa
and
push
addl
mov
lahf
sub
adc
xor
sub
icebp
sbb
cmp
fistpll
mov
dec
sub
inc
jns
and
mov
clc
xchg
mov
imul
xchg
out
sub
mov
cli
fists
gs
sahf
mov
test
add
dec
sub
lea
cmpsl
sbb
xchg
push
std
mov
js
idiv
incl
inc
or
in
mov
push
enter
lods
xor
int3
out
jg
or
xor
xor
je
pop
lcall
call
stc
das
ds
or
outsb
dec
idivb
jo
xchg
mov
shrl
das
lock
inc
stos
pop
push
xchg
sbb
sbb
dec
fisubs
lcall
bound
push
aad
aad
ficompl
jmp
mov
push
push
jp
cmp
lcall
push
push
push
sti
sub
inc
aaa
pop
repnz
push
adc
cmc
and
xchg
adc
adc
cmp
push
jb
dec
jnp
adc
arpl
lcall
sub
pop
mov
pushl
test
xor
call
pusha
sbb
icebp
pop
jne
pop
mov
shrl
or
les
adc
cmp
ljmp
xor
dec
pop
mov
pop
push
lcall
mov
test
pop
call
pushl
mov
les
int3
ds
cmp
lret
imul
jl
lcall
je
das
cmc
jmp
stc
nop
popf
xchg
decl
dec
cld
push
mov
cmp
into
mov
fdivl
outsb
test
inc
incl
aad
jg
int
xor
ds
jmp
push
test
xor
ljmp
cmc
jl
fistps
in
mov
cmc
pop
stos
out
insl
sarl
pop
pop
rcrb
or
outsl
sbb
adc
mov
sbb
pop
xchg
ja
sbb
std
pushl
call
inc
movsl
dec
xchg
xchg
in
mov
cli
push
add
fdivs
jg
daa
fists
fwait
lahf
scas
cmpsl
int
add
repz
jecxz
mov
decl
jne
and
mov
pop
pop
mov
xor
pop
gs
mov
incl
sbb
je
pop
jg
in
mov
fs
push
dec
mov
ss
mov
decl
lea
jg
dec
dec
mov
into
mov
mov
js
cltd
lods
mov
mov
pushl
mov
stos
and
xor
arpl
adc
cmc
mov
les
popf
add
add
lock
lret
jbe
and
cld
decl
out
xor
xchg
push
jns
xor
jl,pt
xlat
cmp
into
outsl
adc
in
jmp
scas
pop
aas
cs
repnz
out
lcall
inc
pop
gs
pop
xchg
int
cmp
adc
adc
cmpsb
add
push
or
xchg
rolb
jmp
push
cmpsl
or
or
shlb
push
or
cmp
lret
outsl
cmp
mov
pop
loop
cmpsl
mov
dec
inc
push
loop
fdivrs
aas
cmc
jmp
add
movb
xchg
push
mov
out
add
mov
stos
iret
mov
dec
imul
stos
push
jmp
mov
fs
inc
leave
mov
das
jnp
movsl
mov
loopne
movsl
xor
out
dec
sbb
dec
dec
cld
mov
fstpl
jnp
xchg
inc
mov
mov
mov
add
adc
mov
repnz
iret
xor
mov
out
addr16
mov
pop
loopne
xchg
inc
mov
or
out
inc
mov
jge
or
jbe
or
iret
mov
xor
nop
sti
jmp
mov
fistps
incl
add
shl
daa
xor
roll
xchg
fidivl
call
ljmp
pop
bound
cli
add
mov
test
or
loopne
mov
push
mov
fdivrs
sbb
and
repnz
scas
push
lock
jno
mov
incl
mov
loop
clc
movsl
pop
dec
mov
mov
xchg
pushw
xchg
pop
ljmp
push
add
shll
call
jge
mov
jae
out
jle
loop
mov
cmp
lcall
pushf
jl
mov
pop
in
adc
push
inc
scas
nop
popa
out
inc
cmp
out
popl
pop
shll
xor
out
jl
mov
dec
push
scas
mov
cmp
pushf
push
inc
test
lods
lods
movsb
xchg
call
push
pop
incl
mov
cmp
inc
xchg
ret
push
and
xchg
and
adc
xchg
loope
lods
lcall
push
pop
out
cmpsb
lret
jo
sti
call
sti
or
cmc
push
inc
or
sub
pushl
hlt
sub
aam
pop
lcall
xor
rcrl
jge
ljmp
xor
sub
divb
lahf
call
ret
scas
hlt
cmc
pop
push
insl
adc
fs
js
pop
shll
mov
push
and
xor
stos
inc
inc
add
xor
adc
scas
enter
push
jg
lcall
or
in
movb
nop
push
push
xchg
psubsw
scas
ljmp
sub
lretw
testb
lret
and
mov
and
add
jmp
push
imul
xchg
jbe
test
je
sub
or
xchg
decl
int
mov
mov
movsl
test
and
outsl
pop
or
call
int
mov
sbb
test
push
lret
and
xor
cmpsb
sub
out
decl
sti
mov
inc
fiadds
icebp
scas
int3
jnp
add
push
shll
jmp
icebp
jmp
jbe
jns
jns
rcll
cmpsl
xor
ror
aaa
jg
sbb
mov
es
ret
mov
out
bound
stos
bound
incl
fwait
mov
inc
mov
sbb
cmpsb
adc
out
jl
shll
out
call
jnp
pop
iret
arpl
fidivrl
xor
mov
push
mov
dec
test
xor
fwait
jge
cmp
fdivs
ret
je
pop
and
push
int3
pop
loopne
ret
xlat
ljmp
cmc
mov
push
stos
fnstsw
pop
push
xlat
rorl
lcall
incb
mov
les
es
sbb
out
or
ljmp
pop
lds
loop
cmp
sbb
dec
daa
insl
adcl
int3
lods
mov
pop
sbb
mov
out
inc
jno
out
xchg
sub
addr16
jg
test
sub
addr16
push
push
mov
inc
mov
jmp
iret
es
int3
int
mov
adc
nop
repz
jbe
sbb
lcall
call
cmpl
pop
jbe
cmpsb
push
stos
hlt
fucomip
jmp
jns
mov
xchg
jge
lahf
out
rol
ljmp
push
ret
or
out
ja
dec
inc
ret
xchg
mov
jmp
mov
inc
addr16
orb
sub
call
stc
out
jmp
inc
add
xor
jl
jnp
mov
xchg
xor
jo
cmp
mov
fstpt
nop
xchg
push
lea
add
fisubrs
decl
xor
cmpb
call
inc
xor
mov
ds
in
pushl
out
lcall
popa
dec
in
fsubp
push
inc
or
sbb
decl
mov
mov
mov
insl
push
xchg
int
jecxz
mov
adc
lcall
pop
mov
xchg
adc
test
mov
adc
call
pop
adc
cmp
mov
jg
and
sahf
add
sub
idiv
outsl
cld
incl
cli
iret
aam
testb
dec
lock
mov
mov
jg
in
mov
sahf
inc
mov
mov
cmp
pop
leave
jle
scas
pop
int3
mov
push
in
sbb
jbe
jno
xorl
adc
cltd
mov
outsl
cld
test
mov
pop
jae
xor
jno
xor
inc
in
xor
mov
push
nop
adc
lods
leave
or
gs
out
or
mov
jecxz
les
jo
cmp
pop
ljmp
dec
cmp
adc
mov
test
in
sti
cmp
lea
jmp
inc
aam
mov
add
inc
sub
mov
scas
add
call
mov
sub
pop
out
pop
popf
dec
hlt
dec
mov
jmp
ljmp
out
cltd
aaa
cmp
add
xchg
jmp
test
mov
sbb
push
dec
or
ret
in
imul
testb
popa
int3
cli
pop
call
lcall
xchg
idivl
imul
sbb
rclb
fstl
test
incl
dec
movsb
dec
mov
mov
xchg
incl
dec
xchg
das
daa
dec
cmc
pop
xchg
sbb
inc
or
mov
adc
xchg
inc
mov
mov
push
cmp
dec
in
adc
repnz
andl
cmp
jg
ds
mov
aaa
xor
and
push
aam
jmp
or
xchg
xchg
xor
rorb
mov
loop
movsl
decl
data16
subb
dec
xor
pop
mov
mov
roll
addr16
imul
push
dec
push
and
push
push
pushl
mov
stc
push
jp
and
insl
iret
addb
sub
jne
rorb
pop
fwait
mov
call
loop
cmc
shrb
fwait
fs
enter
cmpsl
inc
je
jmp
popf
out
pcmpgtw
cmp
or
mov
dec
rorb
pushf
xor
mov
or
ljmp
in
in
mov
mov
pop
sub
jmp
xchg
sub
std
xchg
jbe
lods
mov
cltd
cltd
and
jmp
mov
fidivs
mov
int
std
xor
aas
in
sub
push
imul
push
mov
mov
add
mov
into
or
jg
pop
lock
xchg
icebp
fcomip
rolb
repz
xchg
addr16
repnz
ret
jp
xor
push
call
test
jbe
sub
nop
inc
aam
scas
xchg
lcall
sbb
pusha
cmp
ljmp
sbb
mov
add
sbb
lret
pop
xor
filds
in
sub
cmp
inc
std
incl
xchg
xor
and
outsl
dec
jge
pusha
sub
add
inc
cli
jnp
xchg
xchg
shlb
addr16
jmp
or
mov
cmpsb
lds
cmp
jmp
inc
out
clc
push
mov
shlb
jns
ficoms
outsl
ljmp
jno
adc
mov
enter
jb
insb
subl
das
cld
daa
bound
rorb
cmpsb
jg
adc
repz
xrelease
cli
das
hlt
lcall
sbb
mov
mov
scas
iret
scas
sub
inc
sar
jg
ds
lahf
sub
or
jo
fs
cmp
inc
pop
xor
mov
sub
mov
mov
mov
enter
mov
cld
lea
testb
loopne
dec
xor
push
pop
xor
fwait
xor
stos
fstpl
mov
pop
aas
mov
inc
mov
mov
in
cmpsl
or
jno
int3
mov
insl
stc
mov
call
je
adc
mov
mov
xchg
in
cmp
call
into
push
sbbb
test
in
leave
push
insb
mov
add
xor
test
test
es
call
or
adc
data16
dec
push
cmp
pop
cli
incl
inc
sub
add
push
add
push
inc
cmc
call
cwtl
cmp
loope
mov
push
and
ljmp
sub
xor
loop
jns
pop
sbb
cmp
push
popa
cmp
aam
jo
rorb
xchg
ret
es
pop
loop
ljmp
sbb
cltd
rorl
pop
mov
loope
sub
jecxz,pn
hlt
adc
pop
sub
add
fdivrl
mov
mov
pushl
add
mov
inc
fnstsw
call
stc
in
mov
hlt
jge
mov
in
dec
pop
sbb
jno
xor
outsl
addb
adc
adc
gs
sti
mov
mov
mov
std
dec
dec
push
cmp
inc
test
ds
mov
dec
dec
or
loopne
popf
lcall
push
lea
push
push
fwait
int3
or
notl
pushf
rorl
pop
jmp
or
js
lret
popa
mov
sub
push
pop
pop
add
and
sub
xchg
xor
rcrb
test
push
dec
mov
jmp
add
pop
fwait
cmpl
mov
lods
or
cmc
call
cltd
mov
adc
sub
mov
push
xor
pushl
sti
sbb
insb
push
arpl
cmpsl
push
cmp
mov
fistl
jns
ret
call
shrb
mov
bound
and
mov
cmp
jg
jmp
or
rcll
test
xchg
adc
arpl
aaa
sub
cmc
push
sub
push
incl
ljmp
rcrl
push
hlt
xchg
push
sahf
sbb
outsl
shr
testb
pop
cmp
inc
idivb
mov
cmp
scas
in
test
or
pusha
xchg
mov
shll
jg
and
cmpsl
mov
pop
jecxz
addr16
xchg
in
and
loop
mov
pusha
outsb
sub
inc
scas
or
aad
lock
insb
fwait
inc
enter
cmp
ljmp
mov
out
test
mov
mov
sub
aam
or
test
insb
insb
xchg
mov
xchg
jge
xor
push
cmp
lcall
sahf
adc
jp
sbb
scas
adc
popa
push
or
jg
call
jge
or
prefetcht2
and
scas
cmp
loop
cmc
lcall
cmp
xchg
ja
shlb
jae
mov
sbb
sbb
jg
nop
stos
push
xchg
sub
ret
xchg
test
adc
aam
shr
or
jmp
bound
jne
fdivs
sahf
test
daa
shr
push
mov
shr
push
mov
xchg
movsl
mov
nop
incl
mov
sbb
rcl
mov
and
enter
mov
xor
mov
jmp
adc
pop
jno
inc
iret
sahf
sbb
jno
fwait
mov
push
lret
push
sub
ret
or
dec
sbb
lcall
dec
mov
js
lret
and
sub
out
test
xchg
pop
xchg
js
xor
movsb
cmp
xchg
jno
mov
ret
mov
dec
xor
shll
aad
jb
add
jae
fidivs
fcmovnu
or
fildl
into
test
mov
sub
and
fisubrs
cld
mov
xor
loopne
sub
jg
xchg
ret
das
mov
hlt
and
fcomps
jg
mov
mov
cli
test
and
mov
mov
aad
mov
fdivl
pop
ljmp
shrb
mov
in
jmp
sahf
mov
mov
lcall
mov
sbb
xchg
sub
lret
jb
ljmp
mov
insl
mov
dec
and
rclb
or
scas
data16
push
jle
lcall
mov
inc
int
inc
mov
dec
pop
mov
pushl
mov
sub
pop
mov
or
lcall
int
sub
or
pop
loop
mov
or
ljmp
lods
daa
inc
inc
jae
aas
test
jg
mov
inc
int
jae
aad
pop
loope
and
mov
flds
xchg
mov
adcl
movsb
scas
inc
and
xor
dec
lcall
stos
mov
xchg
xor
ret
sub
adc
jae
ret
adc
in
incl
cwtl
inc
cwtl
xchg
mov
push
sub
or
add
sub
sub
inc
repnz
rcr
push
pop
sahf
mov
pop
pop
and
jg
cmp
mov
insb
or
inc
jbe
gs
lahf
loopne
inc
and
pop
and
aaa
icebp
dec
pusha
aad
and
cmc
call
lahf
enter
cmpsl
movsb
orb
xchg
jb
insl
mov
xchg
int
mov
mov
jg
dec
gs
ret
idiv
jg
push
stos
testl
shr
pushf
test
mov
sti
les
iret
mov
adc
lret
or
jge
ja
mov
fcom
xchg
or
add
in
push
fcmovnb
iret
or
sbb
and
mov
subb
xor
test
pop
cmpl
sbb
sarl
inc
shll
xor
or
sbb
call
mov
jae
dec
fwait
imul
pop
cmp
add
test
sub
mov
mov
or
or
pop
jno
sub
pop
adc
inc
ret
pop
andps
jnp
sub
cli
ficomps
cmp
sahf
stos
sbb
gs
jns
out
fidivs
ljmp
push
shl
les
cmp
dec
inc
bound
mov
push
in
cmpsl
pop
rcl
jge
shrb
fucomp
adc
dec
data16
movsl
adc
bound
add
pop
cld
sbb
jp
inc
or
sub
cmc
inc
test
or
mov
mov
loop
mov
aas
cltd
dec
jns
lea
imul
lcall
xorb
lods
cltd
add
js
and
xor
das
inc
aad
in
and
cs
je
add
xchg
add
decl
bound
jbe
dec
int
cwtl
cmp
xchg
outsl
in
jae
cli
cli
into
inc
cli
mov
xchg
cmp
jmp
pop
cld
cmc
lret
test
ficoms
jp
mov
cmp
inc
pop
pop
popa
repz
or
movsl
pop
inc
jbe
cwtl
mov
adc
xor
ret
test
in
mov
push
xor
incl
cld
inc
add
mov
gs
inc
sub
sbbb
aas
dec
xor
xchg
or
jnp
pop
or
or
lods
incl
mov
loopne
in
push
adc
into
lret
sti
in
out
mov
pusha
clc
iret
jmp
stos
iret
add
aaa
lcall
dec
dec
adc
test
call
fistpll
js
adc
jmp
jbe
cmpsl
rorw
jl
xchg
mov
rcrb
mov
dec
xor
aam
call
push
outsl
popl
xchg
clc
mov
and
rorb
in
sarb
adc
sub
dec
dec
pop
dec
pop
cmc
or
pop
ror
in
dec
dec
shll
jl
sub
incl
adc
mov
enter
and
shlb
push
out
mov
aam
inc
incl
call
in
sbb
sub
inc
scas
jmp
addr16
std
inc
pushl
ljmp
mov
mov
mov
pushf
popf
or
mov
add
lcall
test
adc
imul
addps
push
addl
das
lea
call
mov
and
add
pop
push
lcall
and
or
and
mov
adc
rorb
add
mov
mov
push
fs
int3
insl
sbb
mov
add
pusha
stc
fildl
push
addr16
out
push
xchg
push
divl
add
idiv
movsb
cmpl
scas
adc
sub
rcll
or
pop
pop
push
adc
clc
mov
add
sbb
pop
mov
outsl
clc
xchg
jbe
jge
mov
test
sbb
push
and
enter
ljmp
adc
inc
xchg
or
decl
aad
daa
scas
xchg
jae
ret
pop
in
psubw
jle
push
enter
add
int
add
push
aaa
adc
je
xchg
lods
stos
push
cwtl
sbb
jnp
lahf
sbb
cwtl
push
mov
les
nop
movsb
es
jge
mov
or
ds
push
stos
call
enter
push
outsl
add
xlat
lahf
mov
push
cwtl
or
mulb
sahf
xor
push
jae
pop
sbb
enter
pop
nop
mov
test
push
or
movsl
xchg
ficompl
and
icebp
xchg
jmp
cmpsb
mov
andl
and
pop
aam
xorb
test
add
aam
mov
js
add
js
test
movl
sub
insb
std
pop
shrl
pop
adc
loope
add
xor
movsl
ljmp
dec
mov
xor
or
inc
notl
sar
mov
test
fisttps
repnz
shll
add
enter
outsb
pop
sub
xlat
rclb
cltd
flds
and
push
sbbb
add
jp
mov
imulb
mov
lret
xorb
jno
xchg
adc
jbe
xor
inc
pop
fidivs
mov
js
or
fistpl
lock
xor
dec
add
pop
cmc
decl
fmuls
xor
push
fidivl
dec
incl
scas
or
adc
scas
popa
push
inc
std
idiv
lcall
pusha
test
movsb
nop
dec
push
pop
add
test
pop
jo
push
imul
int3
arpl
mov
jbe
andb
inc
pop
inc
je
xchg
jns
js
ja
lock
pop
push
jg
divb
and
cmp
add
push
pop
inc
jl
arpl
sbb
hlt
push
aad
stc
in
incl
insl
sub
mov
ja
outsb
push
out
sbb
pushl
add
sub
loop
sbbb
ljmp
jecxz
std
fisttps
push
stos
outsl
xor
adc
push
ret
push
in
xor
loop
out
cltd
add
das
mov
movsl
cwtl
bound
pushf
or
mov
movsl
mov
and
sbb
or
jp
inc
mov
lea
pop
mov
and
push
jg
sbb
sub
cli
ror
mov
sbb
pop
scas
xchg
mov
jae
sbb
jle
pop
sti
fstpt
cmpsl
mov
add
leave
xor
seto
incl
xchg
loop
cmp
mov
mov
sbb
jmp
lret
add
cmpl
mov
adc
cmp
stc
lods
lret
sti
aas
jne
add
das
lock
dec
cli
push
mov
sub
incl
sub
and
sub
loopne
push
inc
rcrb
dec
pop
sub
stos
xchg
ljmp
cld
mov
jns
sub
cmpb
sbb
clc
outsl
outsl
mov
std
cmpsb
add
or
in
jg
push
aaa
mov
in
sahf
iret
jb
adc
add
test
cmpsb
scas
dec
fsubrp
or
jae
sub
dec
lahf
xor
cwtl
mov
and
aaa
sbb
js
dec
mov
fadds
ja
xchg
jp
popa
lods
gs
mov
or
jle
lcall
mov
add
push
inc
cmpsl
add
rolb
mov
inc
in
sbb
pop
loopne
mov
rcll
sbb
push
dec
fstpt
aaa
clc
xchg
and
lret
into
mov
insb
repnz
dec
ret
js
add
scas
aaa
pop
cmp
arpl
xchg
aas
nop
mov
xor
clc
fisttpll
or
add
addb
fists
movl
or
and
ljmp
por
mov
jne
dec
iret
mov
bound
in
pop
jecxz
mov
sbb
inc
jo
in
incb
clc
cld
fwait
rcrb
jns
lahf
pushf
jle
decl
out
jb
fmulp
jo
and
lods
mov
mov
jo
cwtl
push
or
ret
pop
outsb
mov
aam
jo
inc
sbb
inc
ret
push
stc
loope
xchg
je
orl
push
push
mov
dec
test
fwait
pushl
outsb
push
sarl
cmc
mov
mov
rorb
cmp
jl
ja
push
jae
shll
lods
and
add
ljmp
inc
pusha
pop
jne
test
mov
mov
and
jl
add
mov
pushf
inc
mov
sub
inc
notl
push
push
shll
sbbl
js
insb
loope
nop
call
enter
xorb
and
decl
incl
ljmp
sub
xchg
insb
sub
xor
sbb
ficoml
shl
pop
and
mov
push
xlat
add
or
mov
or
aas
jno
ret
outsb
jle
sbbl
push
roll
jno
pushl
and
mov
push
dec
fists
jb
cmp
jae
xchg
add
inc
sbb
and
and
add
push
and
mov
and
test
sbb
and
test
sub
cmp
inc
ja
mov
mov
dec
mov
xchg
insl
mov
mov
cmpsb
add
pop
ljmp
pop
sbb
add
adc
ss
fs
and
pusha
call
ljmp
add
rcrb
shll
stos
fists
or
xor
insl
xchg
stos
jmp
fbstp
rcll
xchg
mov
add
stos
mov
mov
fistpl
or
xor
movsl
andb
pop
inc
mov
ja
pushl
dec
mov
or
xor
jecxz
popf
add
mov
xlat
push
cmp
or
mov
call
pop
push
jnp
cli
cwtl
cmp
jg
dec
cld
inc
mov
dec
jecxz
fwait
xor
push
inc
movsb
inc
out
or
enter
add
negl
push
add
out
ja
or
xchg
jno
or
mov
inc
or
push
aam
dec
in
lret
sbb
loop
cmpb
fmull
icebp
pop
leave
inc
hlt
xlat
sub
inc
cmp
loopne
xchg
and
and
pop
mov
or
fbld
nop
adc
fcomi
stc
lds
rcrb
mov
cli
ret
mov
cmp
sub
ljmp
shll
psubsw
jmp
xchg
sub
xchg
sbb
mov
mov
jo
mov
stos
icebp
add
das
fisubrl
and
dec
add
sbb
add
push
mov
inc
aad
enter
pop
fcmovnu
js
xor
and
pop
inc
and
pop
sub
jg
xor
repnz
arpl
jb
sti
push
xchg
pop
fisubrl
cmpsl
aaa
add
mov
cmp
or
rorl
or
lock
pop
sub
or
lds
sub
dec
mov
adc
ds
jg
mov
fidivrs
call
fstpt
mov
lds
jmp
lret
call
inc
xor
jp
iret
inc
aam
stos
add
pop
in
clc
pop
sbb
rolb
push
das
mov
pusha
lret
pop
pop
jmp
add
inc
stos
jnp
xchg
aad
mov
testl
loop
mov
out
sbb
inc
push
dec
call
jmp
and
fbstp
jno
jbe
cmc
jb
or
std
lds
pop
adc
sbb
or
inc
and
jae
jge
in
mov
xchg
negl
sahf
ja
sbb
int
add
inc
add
lea
stos
repnz
fcmovnb
add
mov
dec
out
stos
leave
and
std
lcall
add
mov
test
icebp
mov
xor
loopne
enter
lret
aas
inc
sar
std
sub
stc
cs
push
or
in
mov
add
cli
pop
inc
pop
test
out
sbb
mov
inc
outsb
outsl
jle
and
cltd
pop
sbb
add
or
jmp
test
scas
enter
and
and
mov
mov
aaa
xchg
or
les
ds
clc
pop
add
cmp
jo
xor
add
test
jg
mov
adc
repnz
rclb
je
orb
mov
lock
or
into
pop
xchg
imul
outsb
cmc
int
add
arpl
xor
inc
sar
add
loopne
dec
mov
incl
sbb
push
lock
outsl
mov
popf
push
icebp
or
scas
mov
aaa
inc
and
das
mov
mov
test
jle
pop
cmp
mov
outsl
cmpsl
popf
enter
fistps
pop
xor
jl
push
std
jg
aas
xchg
bound
mov
fstpt
cwtd
gs
sub
pop
rcrl
push
ficoml
cmp
sub
hlt
mov
jne
jbe
cmc
xor
popf
fildll
sbb
addr16
push
xor
inc
mov
sub
jge
dec
scas
idiv
add
test
sbb
lock
iret
inc
call
pop
mov
dec
sub
lock
or
pusha
fldl
push
stos
cmp
sub
push
fcomps
ljmp
mov
mov
aas
add
mov
push
and
lcall
nop
and
cld
xor
jmp
add
push
test
inc
push
xchg
in
test
clc
adc
and
cli
lods
pop
push
adc
in
inc
and
rcrb
xchg
jne
mov
adcb
mov
lea
sarb
inc
sti
push
mov
adc
les
and
dec
xor
sarl
addl
lods
pusha
pop
lahf
cmp
lret
jmp
es
jge
push
xchg
xchg
cmp
push
mov
ja
lds
test
subl
add
sub
lret
incb
or
push
addr16
adc
or
jmp
push
mov
popf
pushf
mov
fistpl
cmpsl
pusha
pop
mov
loop
loope
or
jae
clc
mov
test
sbb
mov
subb
cmc
shll
lcall
mov
pop
sub
lret
movl
inc
adcb
les
mov
jle
mov
imul
sti
push
inc
inc
mov
push
nop
cs
outsl
jnp
push
xchg
loop
pop
arpl
xor
pop
cld
or
mov
adc
lods
mov
icebp
in
pop
stos
clc
aad
fwait
call
sbb
xchg
xor
int
mov
push
aad
call
pop
je
rorl
icebp
sar
push
test
pop
inc
popaw
add
idiv
inc
inc
and
xor
sbb
sbb
pusha
scas
sbb
jecxz
fstpt
xchg
sub
shlb
mov
pop
mov
push
lret
add
outsl
mov
loope
xchg
dec
xchg
shrb
mov
in
decl
lret
mov
inc
dec
stos
clc
aas
fdivrs
int3
pop
pushf
and
popa
inc
filds
cmc
je
jb
xor
les
xchg
mov
xor
or
xor
ljmp
fildll
lods
into
fimuls
mov
xchg
dec
and
rcll
and
ret
mov
ja
inc
lcall
jg
rorl
lahf
jmp
jns
sub
xlat
repnz
mov
int
popf
dec
aas
or
push
sbb
lahf
and
sbbb
xchg
addr16
jp
xor
xchg
rcll
add
aam
scas
and
out
mov
pop
cmpsb
push
clc
xchg
xchg
aam
mov
inc
divb
mov
inc
xchg
cmp
add
outsb
adc
mov
and
jmp
push
sbb
sbb
push
repnz
xor
jns
push
inc
clc
icebp
shlb
push
aas
xchg
adc
adc
pop
mov
mov
test
pop
or
pop
incl
push
jmp
cmp
cmp
xchg
push
add
test
dec
jl
sub
jbe
in
ds
js
inc
pop
jp
jnp
adc
fs
inc
inc
inc
lock
pop
mov
xlat
neg
pop
call
push
pop
add
add
jmp
pop
or
mov
add
fdivrp
int
mov
cmp
mov
pushf
shrb
or
fisubl
xchg
or
or
out
incl
loope
xlat
loopne
bound
inc
jns
inc
push
sti
pop
xchg
comiss
rcrb
ljmp
dec
pusha
xor
xchg
mov
push
cltd
sub
dec
or
dec
mov
mov
stc
in
repz
fiadds
sbb
call
or
adc
xlat
ret
addb
mov
pop
icebp
sub
sbb
outsl
cltd
add
mov
sub
movsl
decl
outsb
mov
adc
xor
shlb
jl
xchg
test
insb
xlat
ljmp
decl
fisttps
mov
dec
mov
and
pop
incl
mov
rolb
lods
xor
and
aad
imul
sbb
jbe
dec
adc
loope
mov
pop
aaa
or
out
xor
inc
cli
add
clc
pop
sti
js
in
inc
sarl
clc
mov
mov
sahf
fidivrs
push
fucomip
ret
push
out
addb
jo
adcl
dec
sub
je
xor
push
add
sar
cmc
dec
lret
mov
adc
in
mov
add
int
add
pop
sub
pusha
inc
and
jge
inc
push
in
mov
jge
lcall
xlat
sbb
mov
test
or
outsl
mov
cld
pusha
adc
shlb
or
pusha
inc
lret
ret
inc
pop
inc
xchg
aas
add
xchg
lret
iret
loope
mov
mov
mov
push
push
pop
mov
cmpsb
lock
pusha
inc
mov
cmp
sbb
ficomps
mov
out
and
and
shlb
cmp
sti
add
cmp
cld
mov
shlb
addl
xorl
aad
ss
and
out
sub
js
mov
fwait
inc
pop
xchg
std
push
xchg
mov
or
jbe
mov
xchg
fdivrp
mov
push
int
pushf
and
pop
mov
pmaddwd
xchg
lock
jg
pusha
push
inc
ljmp
xorb
add
push
int
clc
cmc
test
idivb
stc
sbb
outsl
cld
lods
mov
xchg
cli
inc
pop
or
ror
mov
push
mov
jns
mov
rorb
add
pop
pop
dec
fisubs
insb
shrd
mov
add
jmp
mov
inc
std
clc
mov
cmpsb
cs
dec
sub
or
push
lea
cli
jmp
cmp
popf
push
shr
out
mov
test
fistps
jne
stc
sub
inc
and
or
icebp
roll
shrl
lret
incl
jnp
addr16
xor
pop
ret
dec
mov
pop
loop
sbb
jle
insl
adc
jg
cld
pop
push
inc
mov
or
mov
das
mov
imul
clc
sbbb
cltd
decl
pop
mov
sub
mov
push
and
dec
or
cmpsb
lods
sub
xchg
xorl
mov
arpl
ja
imul
fidivs
insl
jecxz
ret
out
mov
and
sub
push
shl
sar
jg
push
jmp
rcrl
push
bound
pusha
add
pop
cmp
cs
or
out
aad
push
xor
imul
pop
mov
push
inc
movl
mov
lods
fcmove
js
fisubs
mov
inc
mov
cs
jg
sub
ret
into
dec
add
sar
sarl
lods
lods
sub
xor
cmc
aas
mov
fstps
xchg
inc
sub
shll
cld
lret
ljmp
lods
adc
inc
leave
into
mov
decb
jecxz
cwtl
mov
jns
and
adc
cmp
xchg
sbb
mov
jle
sbb
jmp
jg
icebp
inc
mov
push
test
cs
movsb
cmp
lea
xchg
or
push
jae
xchg
adc
pop
or
fdivl
xchg
and
sbb
clc
xor
movsb
push
cld
rorl
cmp
aam
xchg
icebp
mov
jecxz
int
rorl
pushl
cltd
es
rcll
fucomp
pushl
clc
inc
or
sub
jl
test
and
xchg
cmp
fists
shlb
cwtl
mov
push
sub
inc
xor
std
pop
mov
xchg
mov
ret
or
cmp
or
xor
loop
mov
cmp
adc
roll
flds
clc
add
out
mov
and
and
cs
lahf
add
nop
pop
sbb
shlb
sub
pop
mov
xor
pop
dec
stc
push
cli
pushl
in
sub
lret
mov
enter
jg
outsl
pop
das
or
test
stc
mov
sbb
jmp
popa
ljmp
inc
dec
lods
sub
ja
xor
imul
mov
ds
mov
sbb
sahf
xchg
xchg
pusha
mov
loopne
lahf
pop
imulb
cld
mov
push
aas
test
sub
cmp
ret
testb
mov
jg
jl
filds
inc
fbstp
push
loope
ret
mov
mov
scas
xor
adc
adc
sbb
xor
js
imul
jle
fisubl
rcll
adc
jnp
mov
dec
addl
xlat
sub
sub
ljmp
xchg
in
nop
push
cmpb
in
dec
std
daa
cwtl
subl
fdivl
push
pop
jp
fdivl
cmpsb
inc
jb
fisttpl
sub
mov
aaa
push
idivb
jbe
ja
rorb
or
pop
decl
dec
jno
and
push
xorl
add
jg
xor
mov
push
xor
pop
mov
lcall
addl
pop
xor
mov
jae
popa
mov
jle
adc
inc
nop
mov
jmp
cmp
pop
jmp
mov
cli
pop
andb
int
int3
rcll
mov
mov
mov
and
movsb
aas
sub
pop
sbb
outsl
sbb
pinsrw
jne
loope
jno
jbe
call
and
sub
inc
add
pusha
add
negl
das
push
cli
sub
adc
lcall
ffreep
rcll
lcall
mov
lea
jns
shl
fbstp
aam
add
add
ss
cld
aad
movsb
ror
movsl
es
lcall
lods
mov
imul
nop
and
and
dec
push
sub
push
jns
jmp
inc
mov
insb
aad
mov
stos
jg
dec
jns
cmp
out
lret
push
aas
cmpsl
mov
das
cmpsl
leave
fsubrs
add
and
js
cmp
jmp
rolb
test
cwtl
outsl
fucomi
mov
add
fadds
mul
adc
pop
cli
pop
pop
mov
xchg
call
push
jge
pop
xchg
mov
mov
mov
sbb
mov
push
push
cmp
xchg
mov
loop
ja
stos
mov
or
xor
push
jnp
and
lret
cmc
outsl
in
cmp
or
mov
shlb
add
hlt
stc
jb
cli
add
fucomip
adc
bound
and
and
fs
mov
xchg
pop
adc
sti
push
pop
xor
mov
sbbl
xor
sbb
test
andl
jg
sbb
fwait
mov
lret
dec
ljmp
xor
inc
std
cld
jp
adc
test
push
and
movsl
or
mov
adc
sbb
lock
mov
sysret
andl
cmp
xor
dec
dec
xor
lea
outsb
jb
or
pop
add
ljmp
shll
xchg
or
push
lods
adc
push
cmpsb
cld
ljmp
pop
aad
mov
pop
mov
mov
repz
sbb
or
cmp
jmp
loope
in
push
inc
xchg
in
dec
push
cli
in
xor
inc
sub
push
push
mov
and
stos
xchg
adc
sub
mov
sub
cmpsb
pop
sbb
pop
dec
rolb
bound
or
push
xor
sbb
aaa
add
ljmp
inc
pop
js
mov
popl
idiv
cmp
lahf
pop
pop
andl
adc
xor
pop
ret
icebp
out
jecxz
lret
xorb
test
mov
in
xchg
sub
scas
add
idivb
ja
push
cmp
add
call
daa
xor
mov
pop
insl
inc
pop
push
mov
jl
push
repnz
aad
test
inc
arpl
cwtl
insb
sbb
push
orb
movsl
faddl
and
pop
clc
mov
dec
dec
pop
aas
mov
out
les
xchg
mov
mov
add
sarb
add
cld
std
aaa
aam
cmp
mov
loopne
hlt
xchg
push
inc
hlt
hlt
add
inc
test
lods
xor
cwtl
bswap
inc
ja
daa
loopne
inc
aas
lcall
mov
push
pop
inc
xchg
leave
xorb
bound
pop
clc
insl
push
lret
adc
out
loope
sub
icebp
idivb
pop
in
pop
xchg
pop
or
sbb
xor
sub
adc
cmp
cmp
push
negb
xchg
lock
gs
and
adc
cmpsl
or
add
add
cwtl
pusha
sbb
orl
adc
adc
addb
nop
das
lock
test
jne
fcmovnbe
cld
add
xchg
dec
imul
outsl
pop
clc
mov
push
insl
add
cld
pop
dec
outsl
mov
jle
popf
aas
push
shl
stos
sbb
pop
mov
adc
pusha
sbb
mov
and
popf
and
sbb
mov
daa
sub
mov
pop
mov
xchg
icebp
xchg
jle
and
arpl
ja
in
cmp
sub
xor
pop
imul
les
fstpl
das
rol
xor
sbb
push
data16
sbb
inc
inc
aam
mov
fldt
add
dec
lea
add
jl
jle
sbb
mov
enter
xchg
lahf
sbb
mov
outsl
hlt
lea
dec
les
subl
loopne
cmp
lcall
inc
add
enter
mov
bsr
mov
imul
mov
mov
jg
fsubrs
jmp
fs
sub
push
pop
movsl
das
lahf
mov
or
and
adc
std
jg
cltd
lret
rorb
addb
lcall
adc
jg
cli
ja
add
xor
addb
test
stos
and
push
jecxz
outsb
xor
loopne
mov
jno
stc
mov
pop
add
ljmp
test
in
inc
mov
cwtl
xchg
and
inc
lds
adc
pop
jae
cmpsb
xor
push
shl
das
das
sub
cmp
push
ja
cmpsb
pushf
imul
incl
jno
inc
push
mov
cmovs
or
pop
jge
lods
cmpsl
xor
lods
xor
mov
lea
nop
xor
nop
enter
fisttps
js
xchg
fistps
out
stos
shll
cmp
xchg
inc
jmp
inc
out
jle
xchg
jo
sti
mov
test
dec
sbb
xor
adc
aaa
and
jg
aas
mov
and
jns
cwtl
mov
aad
loop
nop
dec
mov
mov
test
push
or
sbb
cwtl
pop
or
jns
xor
jg
or
fucomp
mov
cwtl
mov
and
cltd
mov
test
fdivs
mov
scas
scas
jo
jne
jmp
hlt
sbb
loopne
push
xor
movsl
mov
fmuls
pop
aaa
rcrl
adc
sti
out
push
out
lahf
loope
popa
or
pop
outsb
or
push
inc
inc
div
mov
inc
lock
les
mov
pop
ret
and
cmpb
mov
mov
icebp
adc
fwait
clc
gs
adc
mov
in
iret
jno
fdivrp
dec
aaa
jno
inc
xor
mov
jg
in
mov
lahf
std
fsubs
insl
prefetch
or
jb
dec
mov
call
or
cmp
lret
pop
enter
lcall
or
cmpl
add
mov
and
add
cmpsl
jp
call
lods
ud1
cwtl
add
nop
lea
or
test
mov
loop
push
aaa
lcall
ss
outsl
add
out
scas
addr16
insl
hlt
mov
cmc
incl
xchg
push
es
js
xor
je
sbb
xor
mov
aad
xchg
in
mov
mov
lods
xchg
aas
aaa
inc
lods
ljmp
mov
cld
and
or
push
cs
std
jg
movsb
push
add
push
dec
mov
in
and
lcall
push
fldt
stos
outsb
fdivr
rorb
cltd
push
jg
mov
in
inc
or
decl
jle
inc
jl
dec
add
add
jmp
les
adc
jecxz
inc
bound
cmp
in
sub
inc
and
ret
pop
rolb
stos
sbb
cld
or
and
xchg
adc
enter
sbb
out
push
test
int3
and
jp
push
or
outsl
mov
aam
jne
cld
adc
std
shrl
fistl
loope
adc
add
push
cmp
xchg
mov
pop
jmp
in
pop
fwait
jecxz
pop
ljmp
js
push
imul
cli
ja
jge
push
ret
push
cmp
fwait
add
adc
pop
add
icebp
jg
add
les
rcr
and
or
mov
fbld
in
mov
lret
inc
mov
and
lret
jbe
sarb
andb
add
aam
cs
call
sub
inc
ret
lcall
lods
xor
jmp
xchg
jnp
iret
mov
cs
andb
ret
and
or
js
adc
rcll
and
loopne
mov
inc
ss
dec
inc
call
cmc
data16
lcall
adc
sub
xchg
xchg
imull
xchg
enter
jl
incl
sbb
enter
lock
clc
outsl
xor
inc
pop
adc
lock
inc
add
jns
loopne
aas
imul
mov
test
sbb
test
js
cmp
andl
mov
ss
das
add
sbb
inc
cmpsb
clc
jmp
lcall
ds
popf
mov
fldl
pop
push
ss
mov
icebp
decl
cmp
rcrl
or
adc
add
lret
decl
jbe
sbb
mov
outsl
push
decb
bound
xchg
pop
cmc
push
jmp
mov
or
loope
sbb
add
fwait
decb
push
mov
or
jo
dec
push
arpl
dec
insb
inc
jecxz
inc
cmp
jne
lods
loopne
push
add
cltd
dec
sbb
lahf
cli
icebp
dec
add
call
inc
das
push
add
jecxz
push
dec
push
and
mov
jmp
stos
movb
lret
adc
std
mov
orl
test
mov
dec
rol
out
mov
adc
mov
xor
sub
hlt
leave
mov
cld
imul
xor
adc
adc
xor
shl
adc
cld
insl
lods
aam
and
mov
call
or
sub
mov
negl
pop
mov
cmpsl
rclb
adc
adcb
outsl
pusha
je
mov
sub
add
add
xor
jg
sbb
add
lahf
mov
pop
icebp
adcb
pop
jmp
stos
mov
icebp
pusha
jae,pn
pop
sbb
cmpsl
pop
inc
pop
cld
lods
pop
pusha
add
in
push
adc
insl
mov
je
mov
dec
imul
jmp
popa
outsl
jl
test
lcall
jo
loopne
jl
rorb
jle
add
popa
add
cmp
and
or
adc
xchg
lds
push
push
dec
das
xor
ljmp
jae
push
test
or
loop
xor
in
decl
push
mov
adc
int3
testl
mov
cmpsb
aas
jnp
nop
jo
xlat
sbb
out
jg
or
filds
push
mov
ret
adcl
mov
and
add
imul
jg
add
sbb
out
push
cmp
call
and
add
mov
rcll
jg
and
idivl
mov
xor
andl
mov
xor
and
cld
push
pop
jle
and
cmc
xchg
inc
push
adc
xor
push
lret
inc
dec
or
cmp
xchg
and
sbb
clc
push
dec
inc
data16
jge
inc
fcmovnb
cmp
or
mov
mov
cmp
push
or
in
mov
jg
fucomp
mov
sub
test
mov
jg
jb
mov
and
test
cld
fwait
aaa
jbe
cmpsl
jmp
mov
adc
and
inc
sahf
xchg
loop
push
xor
jmp
pop
xchg
lods
iret
pop
or
icebp
lcall
mov
mov
mov
dec
in
pusha
xchg
push
decl
pop
iret
pop
aad
jns
je
pop
cmp
adc
mov
pop
ds
hlt
movsl
fwait
fwait
mov
lock
dec
pop
cmpsb
lcall
xlat
fsts
push
popf
out
mov
stc
nop
rcrl
incl
gs
orb
pop
sarb
mov
aas
lds
cmp
outsb
fcompl
fimull
sub
mov
sub
jno
outsl
loopne
rcr
nop
mov
icebp
pop
add
mov
jl
enter
sub
add
rcl
and
lods
push
push
test
dec
stos
pushf
mov
mov
adc
ds
icebp
js
int3
mov
ds
cmp
cmpl
inc
bound
jb
fmull
sbb
popf
sar
aas
sbb
das
insb
je
cli
mov
adc
xor
xlat
pop
add
push
sbb
pop
mov
xor
push
jecxz
xchg
xor
imul
fdivl
xchg
icebp
fistpll
pop
push
add
ss
pop
cmp
jl
dec
pop
add
push
push
mov
imul
incb
jae
lock
push
mov
mov
movsb
jle
jae
sbb
mov
out
decb
loope
jbe
push
push
imul
inc
push
stc
shlb
std
sbb
js
clc
sbb
les
in
std
and
fucomip
sub
out
loopne
jmp
mov
mov
ljmp
ss
jb
sti
ret
inc
hlt
jp
outsl
mov
mov
jg
daa
lcall
popa
push
mov
mov
mov
pop
xchg
pop
clc
lea
jns
test
jmp
xchg
inc
push
icebp
pop
pusha
mov
pusha
dec
pop
fidivrl
mov
push
jg
test
cmp
mull
and
mov
lods
or
movsl
loopne
andb
lahf
mov
lss
jno
xor
xchg
shl
cmc
jne
pop
call
pop
sbb
outsl
mov
int
test
cmp
mov
popf
lcall
adc
movsb
in
das
inc
sub
scas
mov
sbb
popf
xchg
sbb
dec
seta
shll
mov
jmp
outsl
std
mov
push
xlat
dec
sbb
push
push
and
loop
pop
roll
cli
ret
jno
sbb
mov
in
lcall
rorl
nop
mov
loope
mov
loopne
xor
enter
mov
ja
mov
mov
dec
outsb
fisttps
pop
cld
fistps
xchg
adc
insl
mov
jnp
and
lahf
dec
lea
test
addb
inc
cmp
jmp
ljmp
les
divb
ficoms
mov
inc
mov
xchg
pop
ljmp
mov
or
outsl
std
lret
repz
mov
cltd
jo
inc
xor
sub
jbe
pop
sub
movsb
cmp
mov
pop
ss
outsl
icebp
pop
sub
push
push
mov
pop
pop
mov
adc
sbb
aam
cmp
or
filds
mov
stos
jecxz
ljmp
adc
inc
addr16
xor
repz
inc
push
mov
shl
rcll
sbb
sbb
gs
pushf
pop
jne
mov
pop
jg
aaa
add
test
mov
insl
adc
fdivrs
mov
pushl
jp
sub
add
add
push
aad
shlb
sub
ja
outsb
rolb
lods
jl
sar
dec
in
inc
imul
xor
push
ljmp
mov
fists
cmp
or
std
xor
pop
xchg
sub
test
iret
stos
pop
loop
push
out
mov
sbb
outsl
cld
pop
inc
out
int3
fcmovbe
sub
mov
and
mov
cli
sbb
jecxz
push
or
adc
fs
inc
movsl
idivl
out
es
sub
arpl
cmp
pop
daa
dec
test
shlb
mov
xor
jle
adc
lods
mov
movb
idiv
sub
xchg
inc
into
fwait
loope
jmp
dec
cmc
xor
cmp
inc
sub
xor
js
outsb
cs
mov
push
mov
cld
xchg
sub
scas
mov
in
test
add
sub
push
jle
jg
push
sbb
addb
stos
les
lahf
mov
in
pop
je
stos
sbb
jbe
clc
pop
clc
in
jge
popa
cmp
mov
and
adc
or
dec
addr16
inc
or
and
mov
or
mov
cmp
incl
mov
mov
sbb
cmpsb
jbe
mov
fnstenv
andb
ljmp
fcoms
jns
popf
lret
cmp
lahf
push
dec
das
pop
andb
daa
jb
xchg
sbb
nop
inc
or
repnz
les
sbb
cli
decl
pop
or
data16
movaps
mov
mov
add
inc
mov
test
add
leave
sbb
hlt
int3
mov
sbb
mov
add
imul
shrb
add
cld
bound
xchg
in
inc
and
cli
mov
and
jo
clc
in
pop
push
jmp
and
nop
popf
mov
pop
mov
addr16
jle
sar
lcall
data16
mov
and
mov
and
xor
frstor
xchg
mov
lods
icebp
push
and
mov
jne
push
jo
in
lock
pop
jb
imul
aas
enter
mov
adc
mov
cmpsb
rolb
scas
and
xor
dec
ret
orl
cwtl
ficompl
mov
scas
jg
ret
lahf
push
and
cmp
sub
lea
jg
jne
or
mov
mov
and
inc
pop
inc
pop
push
aas
stc
pop
xchg
xchg
jbe
add
into
lods
adcl
adc
test
mov
sub
add
mov
outsl
cld
pop
inc
movsl
adc
inc
arpl
add
pushl
lods
or
js
aas
mov
jb
dec
jl
ffree
std
das
aad
and
push
lock
sti
mov
pop
jnp
mov
sbb
cltd
mov
pop
or
and
inc
bswap
cmp
jo
mov
cli
outsl
std
in
daa
pop
cmpsl
or
iret
and
dec
xchg
fildll
bound
push
or
lret
in
cltd
scas
adc
in
popa
push
adc
sbb
mov
sarb
mov
pop
sub
add
push
popw
adc
adc
jg
adc
sbb
mov
xchg
fimuls
jo
push
xor
clc
jge
and
fsubs
or
mov
decl
push
dec
xchg
jmp
cmp
fucomip
shrb
lods
xchg
xchg
js
jns
xor
and
lods
mov
push
es
inc
pop
setno
jmp
incl
ficoml
adc
jl
jnp
iret
sbb
xchg
inc
lds
cmc
mov
cmp
mov
push
and
test
cmpsb
jg
cmp
faddp
push
or
into
push
mov
fwait
push
and
sub
push
test
push
push
pusha
aam
mov
je
notl
jno
jg
pop
pop
pop
add
lods
test
pop
mov
sahf
jb
lahf
push
fisubl
adc
inc
pop
sbb
loop
fcos
pop
dec
rcrl
call
add
xchg
insl
or
outsb
xchg
inc
and
adc
pop
xchg
and
lret
aas
xor
jle
xor
es
loope
or
in
adc
idiv
outsl
push
lds
mov
inc
data16
fimuls
adc
add
xchg
or
and
cmpl
icebp
adc
fcomip
je
xchg
or
push
mov
imul
out
jecxz
scas
enter
lret
add
sbb
lcall
dec
and
mov
fcomi
subl
sti
jmp
push
je
xchg
pop
imul
movsl
into
cmp
ljmp
sub
mov
mov
jg
jg
sbbl
mov
sub
icebp
repz
xchg
cltd
push
data16
dec
push
cld
iret
les
ja
out
jbe
xor
nop
stc
sbb
pop
hlt
dec
cltd
inc
add
popa
xchg
xchg
dec
jle
aam
pop
add
push
arpl
xchg
sub
pushl
daa
dec
xchg
pop
lock
sub
xchg
rcrl
cmpsb
call
repnz
ds
push
add
ljmp
xchg
arpl
call
and
add
arpl
loopne
shlb
inc
shrb
jno
inc
mov
sbb
inc
xchg
push
cltd
pop
jl
mov
mov
add
pop
test
sbb
dec
xchg
mov
roll
hlt
push
adc
sub
mov
lds
jl
rclb
lds
subl
push
mov
pop
adcl
push
mov
xchg
inc
dec
lret
xchg
enter
adc
loope
add
mov
jecxz
addl
clc
dec
sbbb
shll
adc
inc
repnz
sub
js
xor
imul
or
subb
ret
mov
dec
repnz
cmp
push
push
and
stos
xor
cld
xchg
mov
outsb
cwtl
ret
dec
adc
lret
mov
xor
or
push
and
negb
mov
aad
or
adc
loop
call
test
adcb
movsl
decb
xor
icebp
scas
dec
stos
scas
int
les
xor
adc
mov
cmp
pusha
xor
and
decb
lds
jle
mov
lea
fldl
jg
fildl
sbb
sahf
in
and
adc
int3
jns
loopne
adc
das
shl
outsl
cmc
jg
ret
clc
addl
jne
pusha
and
inc
sbb
cmpsb
and
stos
inc
insl
push
rolb
add
call
xchg
mov
imul
or
sub
pop
mov
jmp
cmp
cmp
arpl
pusha
xor
jg
mov
cmp
inc
adc
add
fcmovb
sbb
xor
cld
movsb
out
and
dec
and
jle
incl
mov
mov
jmp
jecxz
test
repnz
stc
addl
inc
jne
inc
cwtl
mov
bound
dec
call
pop
add
scas
js
mov
decl
add
sub
ja
sbb
xor
fbstp
out
in
loope
dec
in
mov
outsb
mov
mov
repnz
loope
stc
aas
shr
or
and
mov
jmp
xchg
mov
jmp
jg
fwait
jle
in
lret
stc
inc
nop
mov
sbb
fwait
add
push
pop
cmp
mov
push
aam
addl
pop
mov
dec
fdivs
jnp
sub
repnz
cmp
loop
dec
aam
and
daa
sub
adc
dec
out
ljmp
push
and
push
sub
inc
and
pop
out
fadds
adc
lret
ret
cmpsb
out
push
sub
and
xor
mov
cltd
cmp
inc
hlt
test
sbb
cmp
inc
loopne
aaa
dec
shlb
dec
xchg
sbb
fdivr
rolb
lods
dec
out
mov
adc
or
and
call
popa
aas
mov
sbb
leave
jns
lret
outsl
insl
inc
arpl
cmp
inc
out
jmp
push
ljmp
xchg
inc
mov
sbb
imul
in
insb
sub
mov
jle
cmp
nop
mov
jno
mov
pop
xlat
cwtl
push
fwait
lock
push
dec
pop
pop
cmp
dec
add
add
dec
ficoms
faddl
sbb
mov
push
and
mov
mov
leave
add
repz
pop
inc
loop
scas
test
lahf
repz
sub
lock
xchg
cli
mov
mov
mov
push
cmp
pop
xor
xchg
mov
xchg
test
pushl
and
pop
roll
lods
incl
pop
inc
add
sub
hlt
xchg
dec
inc
pop
sbb
or
jle
arpl
leave
dec
adc
add
subl
ret
ret
dec
cmc
cmp
iret
pushl
inc
cmp
pushl
xor
lret
or
cltd
lea
out
dec
ja
and
jo
jmp
aam
push
aas
and
jb
sti
mov
sub
dec
arpl
mov
mov
data16
jmp
jecxz
fdivr
rorb
js
pop
into
inc
gs
mov
std
mov
shrl
or
or
shrl
xchg
push
jg
sbb
fldl2e
push
std
incl
scas
pop
inc
test
adc
call
lcall
mov
loope
add
scas
cmp
popa
jp
sbb
fimull
sbb
push
xor
pop
stc
mov
gs
lahf
js
xor
xor
cld
lret
ja
dec
adc
sbb
jg
push
and
fs
in
and
ficompl
jbe
add
jg
mov
cmp
popa
lds
inc
fs
aad
shll
popf
cmp
jne
xor
clc
or
add
add
ljmp
daa
into
mulb
shlb
lds
jbe
mov
cwtl
xor
rclb
or
mov
out
mov
dec
icebp
fistpl
imul
fcompl
adc
cmpsb
cmp
mov
push
push
push
xchg
sub
add
loopne
pop
stos
pushl
mov
add
or
outsl
mov
lock
sub
outsl
sti
movsb
add
and
hlt
nop
scas
mov
inc
rol
je
scas
jle
cmpsl
and
or
dec
cltd
mov
dec
pop
call
icebp
aas
inc
les
xchg
or
adc
in
inc
fcmovnb
lods
pop
or
int
adc
dec
mov
dec
lods
jg
jb
mov
inc
xor
jp
xlat
push
aas
incb
dec
insb
aam
pop
inc
fwait
inc
pop
push
andb
movsl
loope
aad
pop
cmp
roll
xchg
mov
scas
iret
inc
sub
test
or
adc
iret
mov
shl
nop
mov
in
cli
fistpll
jb
mov
pusha
pusha
or
mov
jno
cmp
pop
mov
sub
hlt
leave
and
shlb
mov
adc
stos
mov
andl
add
in
arpl
aaa
rclb
nop
cs
inc
mov
out
inc
les
xchg
clc
dec
add
ret
cmc
mov
rolb
xor
lock
jo
sub
mov
push
roll
pop
pop
testl
lods
call
arpl
loopne
arpl
jecxz
cmpb
jg
pop
jno
arpl
addr16
rcl
push
inc
pop
sbb
cmp
mov
push
subl
aaa
adc
push
mov
stos
dec
inc
adc
loop
dec
mov
pop
cmp
in
ds
cli
xor
jecxz
sbb
dec
jp
xor
pushl
enter
dec
cmp
mov
out
cltd
roll
sub
xchg
pop
xor
mov
and
aas
sbbl
jge
mov
jmp
mov
enter
xchg
mov
sarl
pusha
push
jmp
push
mov
pop
mov
aad
push
dec
mov
push
mov
sbb
dec
icebp
mov
sbb
sub
and
and
das
mov
inc
push
add
mov
xchg
add
add
adc
fwait
clc
addb
imul
mov
test
cmp
jg
adcb
or
es
test
sahf
sarb
sbb
inc
xchg
add
adc
sub
shrb
clc
jle
mov
mov
into
in
mov
js
cmpsl
aam
adc
lods
or
cli
popf
loopne
jae
jo
test
pop
push
mov
popa
inc
jmp
inc
dec
icebp
xchg
js
xchg
xchg
mov
jno
add
jl
add
ds
cs
mov
aaa
push
loope
pop
rorb
sbbb
loopne
xchg
stos
rcr
sbb
mov
pop
push
mov
bound
sarl
popa
repz
adc
push
aam
repz
adc
lock
jge
psubusb
aaa
fsubrl
roll
insb
sub
adc
jg
mov
sub
pop
enter
aad
cmp
fcompl
out
outsl
sbb
out
sbb
inc
push
mov
lea
rorb
mov
bound
cmpsl
mov
cs
xlat
fimull
jle
push
xchg
pop
into
rclb
in
lock
push
lcall
or
and
fwait
jge
aas
sar
sbb
jmp
mov
subb
jnp
and
dec
pop
inc
ljmp
pop
subb
lahf
or
pop
test
arpl
sub
aaa
jle
push
add
add
adc
mov
xchg
fistpll
lds
xor
sbb
push
idiv
inc
lock
stos
dec
inc
in
jo
cltd
loopne
push
das
dec
or
jmp
cmp
nop
jl
popa
jmp
bnd
inc
push
sbb
nop
mov
aad
cs
jmp
mov
clc
inc
movsb
and
push
add
fstl
rcrl
sbb
inc
add
mov
negb
xor
add
mov
test
cmp
jnp
cwtl
mov
inc
fldenv
dec
add
ret
daa
loopne
inc
js
jle
and
cltd
add
andl
popf
add
pop
adc
pop
std
push
fwait
or
aad
mov
aam
cmp
lods
cli
aas
inc
cli
mov
dec
test
in
sub
jne
std
jl
mov
mov
xchg
add
and
mov
add
cld
mov
cmp
mov
jae
add
push
mov
fsts
mov
cld
loope
lahf
xlat
adc
clc
mov
adc
call
js
or
fnstsw
sbb
hlt
mov
push
push
ds
push
pop
push
test
jg
in
fwait
lods
sub
xor
mov
outsb
mov
and
xchg
lahf
fcomps
dec
jae
pop
orb
jnp
jae
add
cmc
pop
and
push
cld
dec
data16
push
lods
inc
cs
mov
int
and
sub
imul
jg
xchg
mov
or
leave
add
push
lods
iret
sub
ljmp
shlb
outsb
loope
xor
or
popl
fwait
loop
in
mov
mov
or
mov
lahf
push
dec
and
and
rcrl
das
cld
adc
pop
flds
xor
lcall
roll
mov
or
outsl
cli
scas
sbb
and
in
cld
mov
mov
or
ja
arpl
cmp
in
xor
and
mov
mov
incl
push
sub
push
push
ljmpw
dec
shl
in
xchg
in
lret
cmpsb
cli
dec
or
mov
xor
sbb
incb
push
cmp
aaa
xchg
xrelease
js
enter
jle
out
test
push
cmpsb
aam
es
add
adc
mov
cwtl
ret
jp
idiv
incl
scas
es
fninit
jne
pusha
hlt
inc
aas
ret
rcr
pusha
lods
dec
dec
hlt
iret
and
leave
not
lds
inc
je
fiaddl
sbb
adc
mov
lahf
nop
fstp
dec
loopne
fstl
jg
adc
jecxz
adc
mov
mov
test
in
xchg
mov
je
cmc
push
aas
inc
decl
xchg
loopne
aad
inc
sbbl
add
sti
sahf
push
sub
mov
fidivs
cs
jmp
rcll
cmp
adc
imul
adc
mov
lcall
adc
add
mov
add
or
cmc
jg
pop
cmp
outsl
mov
xchg
imul
push
sub
add
push
insb
insl
call
outsb
mov
jns
adc
imul
and
rcl
fisubs
pop
btr
pop
mov
xor
out
sub
push
mov
nop
dec
dec
sbb
aas
popf
cmp
add
lea
mov
and
pop
jle
mov
loope
outsl
mov
das
addb
or
push
jmp
outsl
push
loope
popf
add
mov
gs
int
push
fucomip
pop
push
ror
aad
mov
mov
aas
sub
ljmp
test
cmp
imul
pop
push
mov
mov
cmp
lods
add
push
lock
mov
ss
push
mov
inc
loopne
test
adc
sbb
mov
aam
sub
add
add
subb
out
or
mov
or
xor
mov
subl
dec
decl
pop
mov
adc
pop
ficomps
inc
into
fs
bound
adc
test
push
cltd
push
movsl
fwait
jecxz
icebp
lods
mov
insb
push
mov
mov
imul
imulb
daa
out
rol
xchg
rcll
aam
add
jl
jmp
out
loopne
push
sub
push
inc
sub
idivl
ljmp
or
leave
adc
sahf
and
loop
pop
test
add
cmp
sahf
imul
mov
ret
movsb
test
enter
pop
cmp
inc
pop
mov
mov
mov
shrb
jnp
adc
mov
aam
cmp
test
dec
jne
aas
pop
icebp
mov
mov
push
jmp
lahf
test
dec
fwait
js
push
outsb
addr16
jnp
inc
movsb
pop
out
inc
ss
clc
test
cwtl
cmp
sbb
push
jo
fucomip
jne
jo
pop
xchg
push
xchg
repnz
pop
or
daa
adc
and
js
sbb
xchg
inc
mov
cmp
lock
fisubrl
test
xchg
push
pushf
ss
fsubs
pushf
cmpsb
and
std
or
cmp
jmp
mov
enter
add
mov
jg
fwait
dec
xlat
add
incb
out
jne
jg
fimull
lock
movsb
or
jp,pn
push
xchg
cld
inc
outsb
stos
add
cmp
ja
push
sbb
fdivrp
jp
in
jp
sub
enter
shll
sbb
mov
into
nop/reserved
mov
cmp
popf
or
mov
push
sbb
add
lea
subb
mov
movsl
and
push
das
aad
mov
fidivs
movsb
inc
cwtl
call
call
andb
mov
cmpsl
idivb
adcl
mov
test
and
add
push
std
and
rorl
test
jecxz
std
sub
outsl
jge
mov
or
and
mov
lret
mov
xchg
dec
in
sub
jne
jge
xchg
sub
mov
mov
es
aaa
clc
std
fsts
mov
or
inc
dec
xadd
aas
mov
xor
sub
or
mov
fnsave
mov
and
dec
jnp
mov
imull
dec
push
add
jmp
or
in
ret
inc
and
inc
stc
jecxz
test
outsb
cltd
in
xor
mov
pop
outsl
or
ljmp
sbb
mov
xchg
mov
xlat
adcb
stc
sarl
cmp
lret
sub
jno
movsl
inc
iret
ret
orb
imul
in
mov
pop
inc
clc
movsb
push
loopne
jg
mov
xor
xchg
add
in
xchg
pop
jo
rcrb
dec
sbb
sbb
outsb
sub
ret
mov
ret
inc
mov
sbb
mov
call
jp
sbb
add
xor
aaa
lret
cli
or
flds
das
cltd
test
add
sbb
or
ja
xor
xchg
pop
cmp
popa
inc
cmp
push
pop
add
xchg
outsl
pop
or
inc
pop
sub
shlb
cld
push
fs
lea
outsl
nop
push
fidivrl
aaa
or
mov
xchg
add
nop
xchg
roll
lcall
inc
sbb
adc
lea
in
pop
dec
xchg
mov
pop
jp
mov
mov
mov
mov
and
out
xchg
sbb
and
je
mov
or
data16
mov
or
shlb
pusha
stos
stc
jp
inc
aas
subb
lds
jp
push
mov
mov
sub
test
fs
mov
lea
mov
pop
add
mov
fildll
sub
loope
ljmp
adc
filds
mov
push
test
xchg
bound
ds
xlat
call
mov
fwait
out
inc
cmp
adc
dec
scas
inc
rolb
cs
aaa
or
lcall
sbb
pop
std
xchg
aad
lret
pop
push
push
add
jbe
mov
cmp
pop
or
cmp
cwtl
lret
lret
sub
fwait
loopne
stc
out
push
inc
test
or
mov
ljmp
sarl
loope,pt
jg
mov
daa
adc
shrl
xor
inc
push
adc
cmp
cmpsb
cmp
pop
std
mov
adc
mov
mov
inc
cwtl
insb
fwait
xorl
lcall
inc
and
mov
or
inc
insl
mov
out
inc
popa
call
jg
imul
push
jnp
sbb
cmc
or
aaa
in
adc
aas
pop
movsl
push
mov
push
ds
jle
inc
mov
aam
xchg
pop
pop
xchg
fistps
push
aas
enter
xlat
scas
pusha
test
adc
ret
xchg
or
out
ja
je
adc
ret
dec
inc
mov
mov
fwait
decb
push
xor
packssdw
pop
inc
hlt
cmpsb
idivb
jae
push
incl
cld
sbb
stc
or
pop
sbb
mov
add
movsl
sbbl
les
fbld
es
cmp
push
mov
dec
daa
and
and
std
iret
sbb
test
loope
or
inc
cld
in
push
pop
cmp
dec
fsubl
stos
aaa
std
ffreep
inc
adc
push
push
lcall
cmp
jg
in
and
and
fadds
pop
shll
ja
sub
inc
das
sbb
adc
inc
xor
xchg
popa
cmp
push
or
cmpsl
push
xchg
adcb
inc
xchg
sub
inc
mov
clc
test
push
es
rclb
fwait
xor
dec
call
lahf
lods
and
and
cmp
cld
outsl
mov
sbb
sbb
jnp
outsl
dec
pop
out
dec
jno
and
enter
add
push
rclb
jl
jnp
xchg
aaa
outsl
addl
lds
cmp
fistpll
lcall
loopne
negl
lahf
stos
adc
or
inc
push
stos
into
mov
rcll
mov
cld
out
clc
mov
pop
lods
and
pop
and
xchg
mov
decl
push
shlb
cmpb
das
je
adc
cmp
out
fsubs
mov
lock
popf
das
sub
cld
fs
and
hlt
inc
add
push
cld
mov
pop
cmp
pop
sub
out
push
mov
jg
std
test
les
xchg
add
addl
pop
or
std
xchg
cmp
mov
pop
mov
jmp
dec
das
pop
dec
adc
adc
sub
movsl
dec
sub
in
rolb
adc
push
fdivr
js
mov
mov
mov
test
jno
test
xor
push
mov
and
push
call
mov
jno
cmp
loope
fildll
adc
or
cld
sbb
pop
clc
mov
push
cld
ja
jmp
icebp
xchg
xchg
icebp
mov
inc
sbb
das
mov
dec
cld
push
cmp
push
mov
and
inc
jns
add
mov
mov
xchg
add
inc
mov
icebp
mov
mov
add
lock
cmpsb
clc
lock
rcrl
jnp
leave
add
push
sub
inc
add
mov
jp
lea
dec
mov
aas
or
push
mov
scas
xchg
arpl
adc
mov
and
pop
insl
xor
lahf
lret
xchg
stos
std
sbb
hlt
and
push
div
add
das
jo
in
or
fsts
mov
dec
mov
sarb
std
pop
dec
pop
push
cwtl
fadds
push
jo
xchg
cwtl
push
xchg
js
mov
bound
aad
ficomps
andb
mov
repnz
sar
inc
mov
fadd
mov
adc
test
jo
mov
test
push
mov
ret
sub
mov
add
or
mov
jns
lcall
in
adc
ja
in
push
cld
scas
sub
pop
data16
mov
xor
andb
mov
cltd
iret
mov
call
ljmp
add
pop
adc
aas
cmp
fisubrs
sti
xor
and
movsb
jmp
movsb
add
sarb
mov
sub
lds
aad
aad
and
subl
adc
jge
ret
jmp
xchg
cli
mov
cmpb
inc
xor
push
ljmp
jg
and
mov
loopne
xor
inc
shll
cltd
add
pop
aam
shlb
mov
xchg
jecxz
jae
rorb
mov
pushl
aaa
imulb
out
or
push
mov
loop
jge
or
popf
xchg
js
mov
or
jns
pushf
mov
add
decl
and
in
jb
mov
int3
xchg
pushl
and
xchg
inc
in
inc
lock
push
stc
push
add
or
jbe
dec
jae
push
inc
cld
das
cwtl
cmp
js
adc
mov
js
or
shl
call
push
fdivr
mov
int
or
lds
jmp
adc
xor
pop
icebp
push
icebp
insl
mov
mov
and
mov
fsts
fisubrl
pop
mov
mov
cli
ja
mov
sub
add
sub
movsb
in
mov
cmp
add
repnz
push
rcrl
add
cmp
mov
push
pop
jno
cmp
push
popf
sbb
add
aas
lea
vmptrld
add
leave
sbb
and
jge
fcmove
jne
cmc
fmul
pop
out
adc
jecxz
popf
mov
imull
cs
les
aad
pop
mov
jle
cmc
jg
jg
pop
movsl
add
aad
jb
push
inc
dec
sbb
ss
insb
es
adc
rcr
imul
xor
adc
adc
adc
inc
mov
mov
mov
xlat
inc
repnz
movsb
ud0
dec
rol
gs
and
mov
aaa
push
in
push
lods
push
jg
ljmp
test
ss
jmp
cmp
outsb
stos
gs
mov
mov
fcomps
jo
pop
cli
xchg
gs
pop
dec
lods
jb
outsb
xchg
int3
pop
cmp
adc
lret
inc
mov
add
xchg
in
dec
loop
ud2
lcall
mov
insl
add
inc
repnz
mov
sbb
jmp
rorb
incl
dec
mov
jmp
scas
test
mov
adc
dec
inc
pop
sbb
out
fdivp
clc
in
movsl
jg
inc
xchg
push
push
sbb
aaa
xor
outsl
xor
pop
sti
pop
loope
inc
mov
fstpt
out
push
int
mov
in
push
jae
ret
adc
fisubl
aaa
cli
scas
jo
aad
push
sbb
jg
imulb
mov
jg
xlat
jle
in
mov
sub
mov
shrl
sti
pop
das
insl
cwtl
mov
arpl
inc
fisttpl
push
imul
push
mov
mov
mov
push
pusha
pop
xchg
movb
fimull
push
xor
inc
cmp
lret
or
or
sub
decl
cwtl
xchg
xor
xor
push
and
add
iret
xchg
xchg
inc
stc
and
mov
mov
sti
mov
into
pop
clc
insb
movsb
bound
jmp
cmp
xor
out
stc
sbb
clc
mov
subb
sub
and
dec
jns
js
add
popf
rcll
cmp
push
clc
ja
pushl
addr16
pop
movsb
inc
testb
enter
arpl
inc
sub
mov
fists
push
jg
mov
dec
sub
test
adc
lods
jmp
jl
or
jg
xlat
loopne
dec
in
jbe
scas
mov
cmpb
or
fwait
lret
add
jne
and
add
ss
fstp
push
pop
adcb
mov
or
and
push
xchg
repnz
xlat
lret
add
sub
mov
mov
inc
dec
sub
shlb
pop
or
xchg
dec
push
aas
fs
mov
pop
fsubs
loopne
dec
repz
fcmovnu
imul
insl
fistps
stos
cmp
pop
jp
sbb
inc
mov
insl
or
xor
orb
int3
adc
pop
mov
repz
sarl
adc
mov
dec
aad
divb
and
mov
fsubl
sbb
imul
das
pop
mov
mov
addr16
jecxz
sub
mov
cmpl
xchg
dec
cld
jae
mov
loopne
ljmp
lea
mov
jmp
xor
ficoml
xchg
loop
dec
mov
popa
adc
fildl
clc
or
push
mov
mov
and
sbb
and
es
cmp
mov
mov
mov
orl
jge
data16
fnstcw
enter
or
jp
xchg
fidivl
pop
loopne
xor
inc
xchg
inc
mov
mov
clc
adc
and
and
imulb
pop
pop
insl
add
mov
and
xchg
into
pop
std
jo
xorb
dec
push
pop
cli
outsl
lock
incl
ja
leave
cmp
inc
dec
jg
dec
hlt
adc
jmp
test
add
daa
frndint
out
rcrl
pop
inc
scas
je
fisubrs
es
or
cld
dec
mov
adc
mov
mov
mov
std
jg
int3
jl
sti
xor
mov
sti
sub
clc
aaa
dec
adc
ljmp
ret
pop
into
and
pop
add
adc
add
mov
push
cmc
or
stc
jp
mov
add
cmp
js
fdivp
fucomip
adc
push
mov
icebp
inc
and
mov
xor
fistpll
dec
cmp
loope
insb
dec
cld
add
outsb
shll
sub
neg
cmp
rcr
cmp
js
lahf
dec
aas
pushfw
mov
mov
test
xchg
nop
aam
or
adc
sarl
jo
das
mov
adc
jl
data16
pop
xorb
adc
fmulp
inc
add
imul
sbb
adc
jmp
movsb
stc
shll
sub
dec
dec
mov
sub
pop
std
mov
add
int3
dec
nop
push
orb
push
adc
shl
and
aam
mov
or
mov
cmpsb
dec
mov
sub
mov
ss
cli
mov
aam
push
and
and
add
test
and
dec
sbb
nop
push
dec
scas
insl
inc
jne,pn
sbb
test
cmp
decl
ret
insl
or
out
bound
pop
js
std
jg
xor
scas
into
clc
push
dec
sbb
lcall
adc
adc
cmc
ljmp
adc
scas
les
dec
jl
iret
xchg
test
pop
sub
subl
lds
cmp
in
sub
out
cmp
lret
cs
sti
loop
decl
mov
mov
call
lcall
mov
push
loopne
xor
cmpsb
push
ret
mov
push
jp
fs
sub
sbb
xorb
shrb
std
inc
outsb
fldl
test
xlat
lret
call
call
mov
jno
hlt
mov
add
icebp
ret
iret
aaa
clc
aaa
pop
cld
test
add
call
dec
pop
cmp
insb
sub
int3
cltd
jns
sbb
and
ja
mov
movsb
pop
mov
pop
cmc
sub
notl
and
mov
push
cmp
push
mov
cs
rorl
lods
dec
or
mov
cs
cltd
js
movq
mov
ljmp
popa
inc
mov
sbb
subl
pop
call
xor
push
or
pushf
std
aaa
out
movsl
xchg
dec
pop
out
mov
inc
pop
fisttps
xchg
xor
or
imul
mov
insl
push
int3
repnz
enter
cmp
mov
push
mov
ss
pop
stos
loop
fdivr
xchg
sub
test
push
and
cld
movsl
xchg
cltd
dec
jo,pt
ds
ud0
ret
jmp
pop
ljmp
aas
mov
add
inc
jg
xor
loop
sub
add
pop
dec
outsb
arpl
xor
adc
arpl
sarb
and
out
divb
into
stos
mov
std
shll
add
sahf
push
ss
inc
in
sub
stos
adc
lcall
icebp
add
xchg
mov
xchg
sub
xchg
lret
shlb
mov
fdivrs
xchg
jecxz
and
xchg
icebp
out
mov
into
mov
nopl
xor
je
mov
incl
enter
sbb
mov
push
push
cmpl
aas
imul
call
mov
and
pop
mov
and
insb
add
xchg
outsb
dec
cltd
sbb
xorb
jecxz
or
fiaddl
sub
inc
adc
clc
push
dec
or
lds
cld
decl
cli
les
add
cwtl
cmp
in
adc
insb
mov
mov
mov
mov
popa
or
pop
nop
enter
push
xor
pop
mov
xchg
pop
ret
push
jmp
jmp
outsl
cmp
sbb
xor
sahf
sub
out
jge
cld
mov
loop
in
adc
xchg
insb
xacquire
inc
lahf
decl
testb
inc
fbstp
adc
in
fwait
gs
es
cs
call
adc
rorb
ss
es
inc
jecxz
push
lea
mov
dec
decl
push
inc
cli
push
dec
mov
jb
xor
iret
into
mov
mov
pop
in
pushf
mov
push
or
scas
sbb
fmull
jae
cli
xorb
pusha
cltd
cwtl
xor
adc
pop
lcall
xor
aam
std
fbstp
test
cmp
sbb
repz
test
xchg
fs
fildll
add
insl
xor
ret
cltd
iret
pop
clc
lcall
inc
cmp
andb
ss
fwait
xchg
add
inc
cli
arpl
or
scas
ret
sbb
shlb
lahf
xchg
xor
repnz
sub
hlt
scas
xchg
or
mov
mov
pushf
adc
popf
pushf
push
adc
and
fsubs
jle
lods
or
dec
cmpsl
or
xor
rclb
pop
icebp
mov
mov
pop
mov
add
push
mov
push
stos
out
aad
cli
call
cltd
sbbl
roll
decl
mov
cld
or
dec
inc
dec
xchg
xor
repz
mov
sbb
aam
xor
fcmovnbe
adc
stos
mov
cs
add
or
lea
inc
dec
repnz
dec
add
popf
pop
mov
add
inc
int3
push
sbb
sub
pop
ljmp
adc
cmpsb
and
pslld
scas
inc
lea
incl
or
fcoms
les
push
es
mov
cwtl
push
and
call
add
das
je
dec
or
or
sbb
ret
sbb
mov
mov
std
test
lods
mov
or
push
psubd
int
adc
jmp
push
cli
call
movsb
and
cld
sub
ja
leave
sbb
arpl
adc
dec
sbb
mov
xor
subb
les
adc
aas
dec
test
xor
lds
cmp
sbb
xor
mov
pop
nop
dec
rolb
xchg
sub
jae
outsl
loop
call
xor
pusha
fidivl
movsl
inc
fisttpll
push
ja
push
push
stos
inc
dec
jae
jg
std
movsb
cmpsb
sbb
stos
aas
das
stos
test
sub
inc
sbbb
rcrl
mov
xchg
mov
fildl
stc
nop
aas
mov
mov
pop
mov
cmp
jl
add
mov
sbb
mov
insb
ja
mov
inc
mov
mov
cmpsl
jns
ljmp
add
in
ret
xor
pop
sbb
out
imulb
icebp
xor
out
stos
push
sysenter
xor
adc
mov
in
movsl
ret
in
or
mov
xchg
inc
test
sub
mov
shl
jae
ds
mov
aaa
mov
mov
add
jp
dec
lock
popa
jecxz
and
adc
addb
out
jns
incl
lock
mov
loop
inc
xor
and
test
xchg
popa
sahf
shl
sbb
lds
pop
push
or
outsl
mov
lods
cli
in
call
scas
cmpsl
insl
ljmp
push
ret
pop
fistpll
add
lods
mov
inc
cmp
jg
mov
adc
stos
push
jge
cmpsb
mov
es
push
orb
adc
das
jo
pop
xor
add
xchg
divl
lahf
mov
popa
dec
out
sub
push
xor
insb
jbe
inc
xor
xor
call
cld
cmp
push
cld
movsl
mov
fldl
iret
push
mov
ljmp
cli
mov
adc
ljmp
sbb
fstpl
lds
loopne
loopne
int3
or
repz
dec
std
outsl
in
and
sub
mov
cmp
popa
scas
push
sahf
rol
mov
call
mov
outsl
jmp
adc
test
adc
cli
dec
rolb
das
shl
mov
and
movsb
insl
sarl
sahf
adc
sbb
sti
das
aaa
pop
pop
and
popa
adc
lcall
xchg
or
sub
add
fdivl
inc
push
nop
push
sbb
test
ret
mov
iret
xor
int
insl
orb
sbb
jno
loope
push
jg
and
aam
cmp
lods
lcall
pop
sub
xchg
fwait
dec
cmp
imul
in
orl
movsl
xchg
pusha
jmp
lods
mov
mov
incl
push
sahf
hlt
pop
lea
popf
adc
loopne
fisubrs
fdiv
aam
neg
das
mov
inc
jl
jo
inc
dec
lcall
push
stc
and
push
ds
repz
scas
pop
adc
fisubl
jno
or
xchg
out
mov
call
add
push
mov
fs
dec
out
aas
fdivl
aad
loopne
cli
divb
cmp
jle
mov
sbb
int
pop
push
rcll
pop
push
rcr
pop
fwait
xchg
fwait
xchg
call
push
cmp
in
dec
and
push
nop
xor
in
xchg
sbb
clc
push
push
dec
clc
pusha
iret
mov
add
mov
lea
sarb
pusha
push
das
add
scas
ret
clc
push
outsb
jne
inc
scas
or
int
mov
cmc
xchg
mov
loop
in
push
jge
jmp
mov
fisttpll
popf
sub
in
or
das
repz
sti
dec
mov
sbb
mov
js
cmp
mov
inc
pop
sar
icebp
filds
mov
jnp
xor
pop
add
movsl
and
push
push
pop
out
aad
jns
mov
cmp
subb
loopne
fcmovne
shlb
popa
stos
mov
fwait
mov
test
sbb
out
mov
hlt
sbb
mov
fildl
nop
test
lcall
jbe
mov
xor
push
cmp
das
clc
push
sub
cmpsb
cwtl
fdivr
mov
and
pop
nop
imull
xchg
dec
mov
rclb
cmovs
dec
mov
out
cmp
fucomp
mov
mov
repz
fimull
xor
push
pop
cs
lock
dec
mov
or
mov
daa
lcall
cmpsl
lock
jbe
std
das
fnstsw
dec
icebp
cmp
rcrl
test
aas
test
ret
pushl
cli
push
pop
in
pushf
subb
cmp
mov
pop
mov
fadds
mov
inc
mov
inc
test
movsb
lcall
push
lods
jg
stos
popf
dec
cltd
sub
cwtl
dec
pop
int
movsl
jmp
mov
dec
push
div
mov
loop
xchg
jg
lds
adc
lock
es
mov
hlt
add
xlat
mov
xchg
jle
push
and
ljmp
or
bound
mov
fsubrs
mov
fisubrl
ja
push
mov
cmp
pop
addl
cli
mov
and
in
inc
lret
movb
test
adc
fwait
push
mov
fstpl
es
shrb
pop
inc
in
loop
mov
lret
cld
call
lcall
mov
sbb
decl
and
in
daa
and
aam
cs
adc
test
push
mov
scas
bound
push
mov
pop
xchg
xchg
out
cld
ljmp
mov
add
loopne
sub
mov
test
data16
incl
or
add
lahf
stc
sub
cmp
mov
pop
mov
je
imul
loopne
mulb
aas
scas
stc
or
cwtl
sahf
mov
sub
idivb
clc
jmp
pop
cmp
js
sti
mov
out
xchg
cmp
aam
pop
idivl
stos
ror
pushf
ss
incw
popa
mov
pop
add
mov
mov
push
movsl
push
out
pushf
jb
or
fstpl
push
sub
adc
lret
jecxz
cmp
push
cmp
add
pushf
mov
fildl
leave
push
mov
fiadds
rcll
out
and
shl
xchg
repz
sbb
ds
xchg
cmpsl
data16
sarl
adc
test
movsl
in
lds
xchg
bound
add
inc
negb
jo
mov
and
js
and
mov
mov
sarb
in
push
jno
pop
push
das
test
fiaddl
fbld
sub
xchg
clc
mov
cli
adc
push
mov
js
mov
stos
movsb
pop
push
bound
jmp
and
xchg
push
inc
cmp
xchg
in
and
sub
clc
shl
adc
test
ljmp
xchg
out
cltd
lret
enter
and
cmp
pop
push
lock
call
test
cmp
repz
pusha
jmp
or
enter
and
mov
jecxz
sbb
gs
or
mov
sub
xchg
inc
pop
outsl
int3
pop
ljmp
je
or
or
cmpsb
mov
jae
in
enter
ljmp
lret
std
inc
mov
loop
mov
iret
movsl
pinsrw
xchg
bound
fildll
js
sub
inc
and
sub
repz
xor
gs
fidivrs
decl
out
dec
jle
fimuls
in
xchg
add
movsl
incl
push
jmp
pop
mov
mov
jl
pushf
stos
loope
adc
call
cltd
jmp
loope
dec
cltd
loope
mull
lds
cmp
jge
pop
xchg
ds
mov
loopne
mov
insl
sti
and
xchg
dec
or
outsl
pop
adc
add
add
cmp
repz
xchg
jmp
icebp
bound
les
cli
test
sar
sbb
mov
fdivs
pop
decl
fdivs
inc
mov
sbb
icebp
call
mov
jp
pop
and
pop
fdiv
push
xchg
inc
xchg
or
bound
and
roll
or
lea
sbb
enter
sub
inc
scas
popf
mov
push
dec
cmpsl
bound
push
push
repz
sub
bound
add
and
and
lea
stos
jnp
inc
icebp
sar
fidivs
fmuls
fs
jnp
mov
xchg
sbbl
in
or
dec
pop
incl
jmp
dec
ficoml
adc
xchg
add
push
inc
fcoml
sti
mov
fiaddl
mov
push
out
mov
push
mov
xchg
mov
cli
in
fisttps
and
sbb
jb
lret
or
push
ret
outsl
adc
adc
push
and
mov
das
insb
lcall
inc
sbb
push
bnd
push
call
sub
mov
pop
incl
jge
push
push
inc
mov
adc
shll
mov
les
jp
push
mov
decl
cmpb
jmp
cmpl
or
jns
adc
cltd
lcall
adc
and
dec
add
add
mov
stc
push
add
aas
dec
pop
add
call
cli
insl
imul
push
inc
dec
or
mov
xchg
loop
push
sub
pop
and
cmp
cmp
cltd
add
das
cld
aas
ret
outsb
push
gs
sti
xor
pop
mov
out
addr16
pushf
fwait
pop
cmpsb
sub
inc
mov
int3
loopne
in
pop
maskmovq
idivl
add
fnstsw
mov
pushaw
inc
sub
mulb
xchg
xor
into
mov
std
dec
incb
enter
mov
insb
addl
sub
sahf
xor
fmuls
ljmp
add
adc
call
mov
aam
push
lret
test
cld
and
outsb
xor
adc
dec
xchg
scas
or
fisubl
xchg
call
sti
pop
push
cs
test
sbb
mov
enter
out
rcll
jae
insl
scas
out
and
scas
dec
cmpl
sub
jl
cmp
or
ficompl
loop
insb
xchg
jnp
mov
pop
loop
ljmp
ffree
shll
jg
add
mov
sahf
es
test
out
addr16
jmp
icebp
mov
inc
lods
and
lods
inc
xchg
jle
daa
xchg
fdivrl
mov
je
or
mov
sti
jno
outsl
push
jnp
jl
lret
bound
cld
jno
filds
jp
sbb
or
pop
addb
icebp
mov
mov
xchg
add
pusha
iret
or
movsl
jmp
pop
les
sub
fneni(8087
pop
decl
inc
aam
repnz
arpl
dec
or
idivb
sarb
jp
ss
aad
pop
pushf
cwtl
dec
mov
decl
es
rcl
mov
addr16
mov
and
fcmovne
lret
inc
stos
stos
cld
jle
mov
and
inc
mov
outsl
in
pop
xchg
push
jae
insl
pop
and
sub
lea
dec
and
dec
adc
in
fldcw
and
pop
rorb
notb
loop
popf
adc
push
test
cmp
popf
lods
pop
push
inc
mov
movsl
sbb
jmp
ss
aam
xor
mov
sbb
clc
ja
sub
movb
jg
cltd
mov
jnp
mov
sub
sbb
mov
mov
inc
hlt
add
fidivl
inc
or
fistl
sahf
loope
pop
leave
push
sub
add
data16
icebp
test
push
push
mov
or
jle
outsl
int
mov
adc
sub
mov
out
cmp
mov
aaa
mov
fsubs
xor
enter
or
incl
jnp
push
lods
xor
sahf
adc
push
psadbw
pop
sub
int3
lods
xor
push
sbb
add
xchg
adc
push
out
inc
adc
fistps
jmp
sbb
repnz
adc
stos
jg
dec
push
mov
adc
mov
push
jns
bound
mov
adc
sahf
pop
loop
xchg
call
sti
movsl
cmpb
push
lret
or
mov
das
adc
cmp
and
mov
jg
mov
mov
stos
scas
aaa
gs
adc
cld
fwait
decl
fadds
aad
push
cmp
push
imul
sub
popl
jbe
mov
pop
stos
fbld
jg
call
or
idivb
mov
fs
sbb
jp
or
push
mov
aad
popa
fdiv
mov
cld
or
int3
into
mov
aad
outsl
lods
and
testb
lret
outsb
icebp
mov
fadds
pop
out
fdiv
cwtl
in
lods
testb
rclb
loopne
add
jb
and
dec
push
mov
mov
cld
xor
int3
loopne
cmp
lea
cmp
fwait
push
pop
arpl
add
pop
sar
punpckhwd
and
das
sbb
leave
lret
and
mov
sbb
inc
lods
and
les
push
mov
xorl
std
fistl
outsl
adcl
xor
or
dec
cmp
jge
cld
call
fisttpl
or
jne
cwtl
sbb
cld
inc
clc
mov
mov
hlt
shlb
jge
mov
lahf
rol
aas
je
negl
lret
in
decl
mov
xor
loop
push
xchg
or
dec
rclb
icebp
adc
das
sub
arpl
arpl
and
or
jne
pop
mov
jmp
or
cmp
sti
or
jl
adc
sbbl
icebp
es
mov
icebp
xchg
pop
fsubrs
fnstcw
and
aam
jmp
jne
cmc
add
push
mov
push
lods
rorb
push
loopne
and
inc
cmpsb
pop
xchg
mov
stos
push
roll
push
jns
out
xor
jle
mov
fnstenv
ljmp
or
nop
cmp
xchg
mov
outsl
mov
jmp
or
out
and
outsl
push
push
ret
daa
outsl
add
lret
push
xchg
xchg
scas
fdivrp
add
ljmp
test
jns
arpl
ret
dec
cli
outsl
std
adc
andb
mov
push
push
pop
outsl
add
out
int
and
or
loop
ret
loope
and
cmp
sarb
cmp
sti
sbb
add
lea
pop
push
pop
xchg
cmp
popa
cmpb
pop
jp
jnp
xchg
orl
leave
mov
jle
inc
insb
es
inc
inc
xchg
jnp
out
xor
out
xor
xchg
add
out
fcomip
call
sbb
mov
and
jbe
dec
and
push
jle
icebp
in
mov
das
sbb
mov
xchg
xorl
jg
ljmp
int3
xlat
xchg
inc
adc
lods
lret
aaa
lods
or
push
retw
pop
jnp
jmp
idivb
inc
pop
jecxz
pop
cltd
jle
cwtl
rorl
and
out
test
out
repnz
mov
xorl
sbb
mov
sbb
push
pop
sbb
mov
mov
decl
mov
stos
mov
xor
xor
and
les
loopne
rol
ljmp
out
and
sub
aas
jle
das
call
xchg
jge
xchg
adc
dec
or
add
mull
outsl
inc
inc
jl
repnz
adc
incl
jne
mov
sarb
mov
xchg
data16
mov
clc
jle
push
cmp
call
out
jbe
sbb
pushf
stos
inc
shlb
dec
incl
push
adc
jnp
aad
sub
jb
test
fistpll
inc
nop
divb
js
mov
jp
stos
cli
jg
jns
push
insb
and
mov
mov
push
xor
xor
mov
pop
sub
mov
or
add
orb
lcall
inc
jnp
jbe
jp
mov
js
js
popf
jge
and
test
xor
mov
lret
xor
aaa
cli
pusha
add
call
mov
adc
lods
outsl
dec
mov
mov
dec
mov
jmp
shll
out
aas
sbb
jb
es
cmpsl
cmpb
fadd
jmp
mov
inc
jmp
repz
je
mov
sub
das
stos
mov
xchg
sub
cmc
loope
xor
inc
stc
frstor
inc
jle
cld
and
ljmp
fisttps
pop
sub
and
mov
mov
sbb
push
lret
and
inc
push
idiv
mov
sub
dec
in
test
cmp
mov
call
in
call
mov
fcoml
or
jmp
mov
aas
cmp
stos
or
inc
pop
movsb
adcb
xchg
test
int3
adc
incl
and
hlt
mov
out
dec
xor
pop
mov
and
pushf
dec
sub
or
lcall
mov
xor
pop
loopne
jmp
orl
sub
jl
ret
and
movsb
in
aas
loopne
push
test
rclb
mov
push
or
dec
or
imul
push
cwtl
mov
push
call
fs
dec
adc
mov
pop
jle
fwait
pop
jge
mov
jns
dec
mov
pop
cld
das
xchg
aam
mov
rcll
pop
sub
mov
xrelease
or
lock
loope
push
dec
fistpl
and
mov
push
or
sti
insb
cmc
popl
rclb
xchg
mov
xchg
adcl
in
movsl
ret
out
loop
dec
pop
cmp
sbb
jl
inc
jne
ret
das
lds
std
in
jnp
out
sbb
int
lcall
std
ljmp
int3
cmp
sbb
mov
or
test
ljmp
jecxz
inc
jne
data16
dec
xor
adc
addl
loope
and
jmp
and
pushf
iret
xchg
cmpsl
xor
adc
mov
push
or
add
iret
lret
inc
mov
push
push
sub
dec
imul
test
loopne
inc
mov
jmp
jl
xchg
int
mulb
xor
mov
add
mov
pop
test
or
dec
xchg
out
jp
jl
ret
ret
cmp
int
addl
sti
xchg
dec
pop
orb
xchg
or
pop
pop
rol
push
je
repz
outsl
adc
cmp
call
or
sub
or
pop
aam
mov
clc
je
pusha
jne
loopne
cld
das
inc
dec
or
add
imul
icebp
pop
pop
push
sub
mov
std
jb
cmpsl
push
loope
inc
pop
pop
ljmp
cmp
and
push
sub
jge
jg
daa
gs
nop
outsl
lcall
mov
add
std
pusha
in
inc
aaa
xor
int
shlb
jmp
adc
or
out
and
loope
incl
jle
xchg
mov
and
dec
xor
arpl
dec
mov
or
lcall
movsb
arpl
insb
and
arpl
icebp
fstl
call
mulb
dec
add
cli
es
jnp
inc
jle
push
addl
cmpsl
push
mov
xchg
das
hlt
dec
adc
or
or
fldenv
pop
xorb
int3
std
or
mov
adc
and
les
stc
out
inc
jae
in
out
xor
pop
insl
repz
dec
jle
stos
pop
aas
push
repz
lods
xlat
mov
cmc
fsubrl
call
mov
test
cmc
pop
imul
inc
ds
fdiv
lds
ret
inc
ret
test
dec
pushf
adc
or
std
dec
call
and
adc
lahf
adc
xchg
pop
outsl
add
pop
daa
popa
sti
cmpsb
aaa
sarl
pop
imul
cmpsb
decl
adc
frstor
mov
mov
bound
aad
push
adc
xor
fimuls
lods
mov
cmc
jge
in
fisttpll
decl
cmp
xor
mov
inc
or
sub
in
jmp
add
sbb
dec
test
adc
ss
pavgb
lock
hlt
or
and
cmp
cs
mov
jg
ljmp
xor
lahf
inc
movsb
ret
jnp
push
push
sub
fists
sub
pop
xchg
cwtl
lahf
rcrl
jg
sub
pop
pop
xlat
dec
sub
add
pop
bound
xor
dec
mov
mov
aas
cmp
xor
mov
insb
dec
int
mov
jle
pushl
cmp
jae
pusha
fstpt
adc
xor
fiaddl
lea
das
enter
mov
rorb
push
cmp
gs
pop
add
test
outsb
les
inc
dec
cld
lahf
and
and
mov
and
sti
outsl
xchg
clc
sbb
leave
or
faddl
push
mov
jne
sbb
sub
xchg
mov
int3
xor
fucomi
mov
out
ljmp
sbb
xchg
xor
adc
aaa
adc
dec
mov
and
xor
or
aam
push
push
sub
add
adc
pop
fisubl
xchg
mov
call
cwtl
cmp
int
shlb
sbb
fsubs
notl
popa
push
cmp
mov
sbb
jo
adc
pushl
sarb
push
les
das
pop
cwtl
je
pushf
inc
and
mov
aas
gs
mov
sbb
stos
out
xchg
jno
jecxz
xor
ficompl
mov
add
mov
xlat
sbb
dec
rcl
rclb
cli
inc
adc
sti
and
mov
or
aad
jnp
mov
aad
jae
aad
insb
mov
fists
fsubrs
cmp
mov
sahf
sbb
lret
push
outsl
sub
inc
lahf
inc
inc
mov
sub
add
mov
sbb
insl
shrl
jo
adc
test
dec
pushl
mov
xor
lds
mov
loop
mov
repz
aas
and
adc
hlt
cmp
in
shrb
mov
je
mov
leave
and
mov
jmp
xor
ja
arpl
sub
test
sub
push
pop
test
mov
stos
sbb
sti
lret
add
or
sbb
mov
push
sbb
xor
pushf
neg
imul
push
and
scas
inc
mov
sbb
fs
xor
popf
push
dec
out
dec
shl
inc
fsubp
xor
add
inc
mov
sub
loop
test
mov
test
sti
sbb
movsb
lods
mov
sbb
or
adc
push
rorl
inc
or
jg
inc
lock
mov
adc
and
push
imul
or
xor
pop
adc
or
fnstcw
lret
or
add
in
not
lret
cs
or
xor
cli
or
inc
push
fidivrl
xchg
les
add
out
fwait
insb
mov
stos
outsl
icebp
in
ss
adc
and
mov
pop
mov
jo
add
fsubl
mov
xor
pushf
and
xor
mov
int3
jg
push
cli
sbb
sub
es
mov
cltd
add
in
ja
add
xor
jno
out
mov
mov
addr16
push
mov
pop
mov
jl
fwait
jle
mov
cmpsb
adc
pusha
flds
jecxz
push
decl
mov
sahf
xchg
psubw
popa
push
jge
pop
outsl
inc
call
sub
xor
out
inc
push
rcll
sbb
pop
mov
stos
or
or
mov
jp
stos
call
mov
pop
mov
add
inc
sub
test
or
add
adc
call
pop
sub
inc
pop
push
pop
cs
and
clc
lret
xchg
movsl
mov
data16
into
in
sub
adc
inc
inc
inc
or
dec
lret
in
add
or
clc
add
lahf
dec
aad
cmc
in
loopne
dec
pop
xchg
lock
sahf
ds
fwait
inc
mov
mov
imul
test
icebp
adc
mov
pop
push
int
lea
or
fisubrs
cmp
iret
dec
cltd
dec
xchg
mov
popa
xchg
in
outsl
add
cmp
or
dec
xor
call
push
out
std
or
inc
xchg
iret
test
sub
loope
pop
xchg
cmp
dec
shrb
inc
push
invd
push
hlt
push
pop
inc
cmpl
clc
inc
fistpl
push
sub
inc
shlb
rol
xor
xor
mov
adc
dec
mov
xchg
pop
mov
sbb
add
dec
adcb
clc
xor
inc
or
mov
sarl
js
divl
pop
inc
xlat
iret
inc
jg
fisubs
adc
xchg
mov
mov
pusha
movsb
mov
sub
outsl
in
sub
xor
repz
sbb
or
sbb
cmp
call
out
and
mov
outsl
mov
fmuls
cmpsl
neg
ss
lods
pop
pushf
scas
mov
jge
test
decl
or
and
incb
mov
add
test
push
xchg
xlat
imul
and
repnz
fiadds
sbb
or
repnz
sub
push
loop
sarl
test
shll
fwait
dec
push
sbb
pop
stos
sbb
pop
push
or
loope
in
rclb
and
mov
call
and
in
fs
jno
jg
cld
rol
mov
clc
pop
sub
aad
and
pop
incl
fs
in
insb
dec
subb
ja
or
adc
filds
sub
je
mov
aam
pushl
lahf
pop
and
decl
into
aad
cmp
sbb
adc
adc
rcr
sub
jge
jg
or
ljmp
xor
pop
lods
shrl
ficompl
scas
es
pop
xor
insb
jl
dec
push
jmp
pop
sbb
lahf
adc
or
sub
jne
inc
fsubl
in
sub
mov
sti
pop
incb
mov
negb
addr16
pop
jns
and
fmuls
cmp
add
jno
dec
outsl
or
pop
loopne
mov
pop
jo
cmp
xor
filds
inc
or
sbb
cmp
push
pop
jmp
test
mov
mov
push
xchg
add
fs
repnz
cmc
add
insb
insl
inc
dec
jmp
or
sub
popf
adc
jle
test
and
and
cmc
pop
mov
psadbw
test
mov
ss
push
mov
add
cltd
gs
das
xor
outsl
loopne
jle
in
lea
cmpsl
fstl
add
lcall
sarb
pop
push
daa
hlt
gs
imull
mov
inc
mov
test
adc
incl
pop
mov
aam
adc
mov
jne
fldt
cld
cld
and
dec
es
stos
out
pop
pop
mov
and
ucomiss
sbb
pop
or
mov
lcall
rolb
pushf
push
jl
fidivs
enter
insb
xchg
icebp
pop
jo
jl
mov
lock
scas
xchg
decl
jmp
and
cld
bound
sahf
jp
aad
inc
mov
enter
js
sub
das
xor
push
jae
hlt
sbb
mov
jecxz
imul
adc
aaa
xchg
lock
ror
bound
imul
ffreep
das
mov
aaa
and
sbb
scas
cwtl
add
decl
hlt
mulb
pop
lret
in
sub
nop
ds
adc
jl
lds
addr16
adc
mov
jb
or
loopne
test
ret
int3
mov
je
or
inc
scas
sub
ja
push
xchg
imul
adc
mov
sahf
les
or
mov
incl
out
movsl
icebp
and
jno,pt
push
imul
cmc
das
mov
xor
pushf
or
mov
dec
cmp
in
lods
adc
sbb
shlb
add
adc
inc
adc
mov
std
ljmp
popa
add
adcb
adc
sbb
sbb
cli
or
std
or
xor
aad
dec
aad
scas
cmpsl
movsl
fcomip
jmp
adc
push
adc
das
lock
in
insb
or
adc
mov
add
add
js
jmp
mov
sub
stos
cmp
cmp
icebp
movsl
mov
scas
je
sbb
pop
loopne
jge
inc
loope
or
add
sbb
ja
jl
cmp
sbb
lcall
mov
adc
add
dec
imul
dec
mov
add
xchg
fildll
inc
pop
push
popf
clc
xor
cmpl
je
js
shll
test
in
call
mov
aas
repz
push
xlat
aas
mov
jno
ss
jg
xchg
rcrl
fisubrs
mov
fcos
fildl
push
stos
mov
adc
dec
out
sub
sbb
incb
lods
repnz
negl
cmc
and
lahf
or
lods
mov
inc
add
fs
cwtl
cmp
roll
mov
andb
cmp
stc
mov
mov
jno
xchg
mov
bound
dec
xor
aas
rcr
xor
ret
hlt
lret
repz
les
pop
dec
roll
insl
jb
enter
pop
clc
add
subl
xor
stos
js
cmp
push
fcomip
test
mov
pop
adc
popa
int
pop
add
jmp
fimuls
ror
or
cld
inc
icebp
sub
adc
bound
cmp
mov
push
cmp
scas
incl
jmp
cmpsb
jg
add
imul
je
dec
leave
adcl
push
andb
ud0
push
cwtl
loopne
adc
jns
adc
int3
jb
xorb
roll
jo
mov
shlb
pop
lods
xchg
in
popa
ljmp
cwtl
stc
cmp
loopne
lods
pop
scas
mov
mov
push
inc
push
lret
xchg
mov
imul
test
mov
cmp
and
lods
les
mov
pusha
xchg
mov
push
loope
data16
push
cld
sbb
cmpb
and
xchg
inc
or
cwtl
jecxz
jl
popa
adc
cmc
imul
sbb
mov
mov
mov
xchg
inc
pop
xchg
xlat
and
std
push
sbb
clc
mov
bound
outsl
xchg
sbb
pop
and
jp
mov
jl
jae
adcl
xchg
popf
pushl
or
jl
ja
lea
insl
jnp
clc
xor
lods
add
mov
or
outsl
sub
mov
out
dec
pop
add
ret
push
fadd
adc
int
imul
in
inc
xchg
in
and
mov
scas
out
jecxz
push
aad
jecxz
or
cmp
out
and
call
idiv
mov
or
ja
ret
or
loope
fbstp
sbb
faddl
fcmovbe
icebp
jle
cmpl
sbb
mov
sbb
bound
decb
push
and
ret
lcall
jg
push
and
fwait
xchg
add
adc
loopne
ds
rcrb
sbb
ljmp
insb
sbb
ljmp
mulb
andb
mov
jg
inc
dec
cs
mov
test
decb
jae
dec
iret
push
mov
sub
ficoms
mov
push
aad
mov
faddl
sbb
mov
aad
js
xor
adc
push
lods
inc
stos
pop
push
adcb
inc
sbb
xor
cmp
mov
rclb
or
incl
add
xor
clc
lret
test
test
ljmp
jb
xchg
sti
sub
xor
push
shlb
ja
xchg
insb
jecxz
and
call
jnp,pt
inc
in
mov
int3
mov
push
pop
leave
xchg
pop
sahf
inc
hlt
cmc
cmc
inc
and
jle
pop
adc
outsl
mov
ja
cmpsb
fadds
loopne
cmp
push
add
jle
ret
add
dec
fnstsw
negb
jbe
into
jo
jo
cli
ljmp
mov
pop
insl
sub
mov
sub
lods
and
enter
das
adc
add
movsb
icebp
lock
cmp
rcll
pop
or
mov
mov
aad
stos
mov
outsb
add
or
decl
push
or
dec
inc
xchg
sub
movsb
jecxz
lock
mov
movsb
and
out
cs
mov
sub
cmpl
in
lahf
push
xchg
inc
jbe
adc
les
ficoml
ret
lret
sub
mov
xchg
dec
jl
sbb
mov
pushf
adcb
mov
in
mov
in
adc
cmp
xor
shrb
or
jg
or
pusha
sub
ljmp
out
cld
outsl
cld
call
pop
test
jo
jb
mull
mov
out
mov
pop
xor
jo
or
nopl
mov
jnp
dec
sbb
add
push
cmc
mov
adc
dec
adc
dec
hlt
jg
repz
jle,pt
jecxz
cmpsb
or
lods
call
js
sub
cwtl
sbb
mov
movsb
ret
adc
pop
scas
arpl
fucom
stos
aas
mov
xor
inc
popf
lods
outsb
xorb
incb
pop
sub
sti
and
sub
into
cmc
dec
std
mov
pop
int
sarb
sbb
inc
clc
int3
aaa
sub
adc
insb
xchg
mov
push
lods
or
xor
push
int
dec
push
cltd
jne
add
or
mov
mov
mov
movsl
xchg
mov
leave
sub
jnp
outsl
and
push
test
lcall
mov
inc
in
lods
or
dec
mov
mov
xchg
gs
test
push
mov
in
rorl
enter
out
in
fwait
lret
add
repnz
xor
and
loopne,pt
add
mov
pop
inc
push
mov
or
dec
rolb
push
mov
ffree
stos
shll
sbb
incb
nop
mov
maxps
fistps
lret
leave
int3
lock
jae
lds
jbe
pusha
adc
rolb
pop
call
ret
or
shll
push
repz
mov
aaa
outsl
xchg
add
jbe
jle
mov
stc
and
or
pop
pop
mov
adc
icebp
gs
pusha
or
int
mov
jmp
shl
mov
jne
cwtl
pop
insl
sbb
incl
cmp
addl
or
test
retw
pushf
adc
repz
push
xchg
mov
jmp
icebp
push
insb
lcall
adc
cmc
ret
push
lock
xchg
or
je
call
jo
int3
cld
std
and
pop
lcall
lods
inc
push
cmc
mov
aas
xor
sbb
fwait
lahf
addr16
jp
aas
sub
outsl
mov
sub
add
movsl
xor
cmp
fs
mov
mov
hlt
loope
mov
clc
sbb
mov
adc
push
sbbl
nop
push
mov
dec
lock
cs
dec
int3
aad
mov
decb
out
push
mov
adcb
xchg
clc
dec
add
and
jg
inc
pushf
xchg
mov
mov
push
scas
fimull
sbb
imul
lret
das
cld
pop
jp
jne
dec
push
sub
and
jb
and
movsl
pop
and
sarb
mov
in
inc
mov
fisttps
mov
cmpl
and
push
popa
adc
out
cltd
lods
sub
dec
xor
dec
loop
decl
into
mov
mov
aam
out
add
call
dec
fdivrl
arpl
mov
aaa
loop
xor
test
jle
inc
out
ja
ljmp
xchg
jmp
mov
cltd
pop
sub
and
fcoms
inc
inc
push
pop
pop
bnd
nop
dec
mov
shl
sti
mov
out
test
iret
inc
mov
xchg
push
rcll
out
xor
stc
mov
mov
add
inc
stos
xchg
lock
pop
push
imul
shll
stos
mov
mov
clc
jg
and
and
xchg
lds
add
icebp
in
lret
lods
fwait
cli
mov
push
mov
jo
pushl
lcall
les
clc
jg
and
int
pop
jae
pushl
fucomip
test
cmp
cmp
int
test
mov
leave
jne
iret
and
mov
xorl
add
jno
mov
lahf
mov
cwtl
cli
inc
enter
pop
add
call
pop
popf
inc
mov
into
divb
insb
mov
xor
xor
out
sub
imul
call
push
stos
and
jecxz
cli
push
pop
and
cmp
mov
pop
das
sahf
test
stc
es
sub
mov
lock
xlat
jbe
adc
inc
cmpsb
mov
dec
ror
adc
shlb
outsb
stos
xchg
or
jns
xor
cmp
pop
ljmp
cmpl
stos
lods
pop
ljmp
aaa
jmp
sarb
adc
inc
jg,pt
sbb
and
mov
nop
and
mov
sbb
sbb
dec
mov
repz
fistpll
out
xchg
add
mov
in
fbld
std
test
je
sub
cmp
sbb
pushl
jo
jb
or
cmp
rclb
mov
jno
clc
mov
out
pop
jae
loopne
xchg
sarb
cmp
inc
mov
pop
lds
xchg
jnp
inc
xchg
mov
mulb
add
icebp
or
or
jbe
mov
and
xor
jae
cmp
inc
test
inc
add
movsb
push
mov
push
push
jmp
lcall
jne
outsl
cld
pop
sbb
dec
pushf
pusha
mov
inc
xchg
fdivs
sbb
lock
fsubs
bound
sub
mov
cmp
iret
mov
cld
jmp
repnz
xchg
clc
aas
loopne
push
sbb
mov
xor
insl
outsb
je
mov
add
mov
cmp
xor
mov
and
jno
jb
inc
sbb
hlt
ret
mov
cli
jg
sbb
mov
mov
xchg
dec
lret
outsb
sub
cmpsb
fisttpl
mov
vpsrad
adc
pop
cmp
or
pop
mov
dec
mov
fs
add
test
add
jmp
push
out
pop
pop
stc
and
movsb
cmpb
add
sbb
cmc
nop
test
mov
adc
push
sarb
or
mov
xchg
fisttps
int3
sbb
and
xchg
dec
cmp
inc
cltd
mov
and
mov
ds
pusha
sub
pop
and
cli
sti
jne
cli
lea
sub
arpl
or
dec
aas
add
inc
sub
adc
push
mov
inc
xor
mov
out
push
shll
xchg
sbb
test
sbb
jge
push
sti
std
lock
clc
aas
mov
sub
pop
xor
inc
xchg
jle
pop
gs
pop
pushf
cmp
iret
adc
pop
or
out
incl
movsl
sbb
or
les
and
mov
lea
ja
fisubrl
dec
dec
popa
push
inc
mov
lahf
pop
fadds
jge
add
mov
mov
mov
mov
dec
aam
lcall
xor
mov
jg
dec
jne
enter
cmp
call
les
sub
mov
xor
mov
pop
mov
bound
mov
subb
lret
xlat
mov
push
outsb
or
cmp
sub
fnstsw
dec
push
adc
sahf
ljmp
aad
or
pop
ja
pop
loopne
nop
leave
cs
ret
rcll
sbb
add
mov
push
pop
stc
and
sub
add
adc
cwtl
jle
and
cs
mov
ss
lcall
xchg
test
or
add
mov
jecxz
sbb
cld
decl
loopne
push
orl
mov
insl
jg
jg
shrl
icebp
and
adc
popf
loop
ljmp
std
call
cs
sarl
pusha
and
popf
pop
or
mov
jmp
xchg
mov
rcrl
pushl
pop
mov
lds
push
pop
es
mov
mov
andb
jmp
loopne
into
pushl
sarl
xor
push
or
cli
les
mov
lcall
push
cmp
pop
popf
cltd
bound
test
fdivs
andb
ret
test
push
sbb
adc
sub
popl
jle
idivb
sbb
push
push
std
mov
aas
inc
mov
and
sbb
fcmovne
and
cmpsl
xor
enter
outsb
jl
iret
sub
shrb
pop
inc
fwait
inc
mov
mov
mov
stos
jecxz
inc
loope
adc
decl
push
lahf
inc
stc
mov
jmp
ja
loopne
sarl
pop
add
sub
jno
fwait
pop
popa
mov
dec
sbb
cld
push
test
call
out
pop
or
xor
jle
in
mov
stos
stos
cmc
in
inc
dec
pop
sub
icebp
aas
arpl
push
jno
out
mov
insl
inc
or
push
sub
decl
mov
movl
stc
mov
vmovsd
mov
mov
mov
lcall
lcall
fcomp
jp
sub
mov
mov
jmp
fdiv
or
ds
insb
js
mov
outsl
stos
outsb
js
jb
mov
fstpt
daa
ljmp
mov
pop
and
jae
mov
test
mov
dec
cli
add
sbb
aas
adc
push
sbb
mov
jg
call
fwait
mov
jae
push
cltd
add
js
call
mov
insb
sbb
sub
mov
repnz
mov
lods
add
and
imul
das
ja
inc
and
jle
sti
aas
rcrb
fs
outsb
mov
dec
mov
mov
jnp
aas
lods
or
clc
push
pushl
and
mov
or
sub
cmp
xchg
movsl
incl
lahf
in
imul
xchg
push
and
and
or
jg
add
push
jle
outsb
jle
fcompp
xor
aam
ret
popa
adcl
mov
inc
add
mov
sbb
imul
movsl
adc
mov
inc
inc
hlt
xchg
ret
jl
jmp
notl
inc
mov
repz
add
fsubs
pop
movsb
arpl
pushf
pushl
cmc
dec
rol
dec
pushf
and
dec
pop
js
add
es
aas
or
push
add
dec
xchg
es
jne
scas
cmpb
das
jbe
jecxz
adc
and
loopne
rorb
js
icebp
std
push
pop
add
mov
aam
loopne
stos
inc
pop
sub
scas
in
sbb
dec
test
add
test
outsb
or
cmp
movsb
movl
adc
pushl
faddl
xchg
in
inc
in
and
sarb
push
xor
add
cmp
push
adc
jmp
dec
shlb
roll
or
adc
aas
dec
fcom
mov
fcomi
mov
clc
faddl
std
lcall
adc
pop
and
adc
in
test
push
jae
adc
fcomi
cmp
xchg
or
xchg
add
ja
int
or
mov
std
ds
in
pop
inc
pop
jl
int
add
dec
jns
inc
cmp
movb
pop
or
mov
es
jb
or
lea
movl
inc
mov
xor
jle
pop
cmpsl
outsl
jge
adc
sub
pop
mov
mov
push
dec
dec
cltd
rclb
loop
mov
mov
add
aad
cwtl
inc
and
and
leave
push
stc
mov
incb
mov
and
inc
pop
ds
pop
fnstsw
loope
mov
cmp
pop
stc
scas
xchg
pop
sbb
add
mov
pop
loop
mov
or
mov
mov
int
dec
sub
inc
lcall
push
mov
dec
lcall
sub
cld
into
push
sub
lret
xchg
adc
fmull
pop
sub
and
pop
cmp
bound
adc
sbbb
and
das
jg
jmp
popf
push
cmpsb
cmp
icebp
loopne
pop
cmp
mov
cld
int3
xchg
inc
jo
clc
mov
mov
sub
xor
aaa
jg
ljmp
test
decb
insl
adc
ja
scas
les
popa
mov
outsl
call
xchg
or
adc
jae
mov
flds
decl
xabort
gs
movsb
jmp
xchg
imul
arpl
les
icebp
mov
xor
jae
sub
push
cmpsb
pop
mov
cmc
inc
adc
mov
mov
add
popa
das
jl
fbstp
inc
mov
jns
inc
shl
and
add
jmp
pop
shrb
xchg
sahf
add
cli
jg
js
sbb
cmp
and
dec
aam
rolb
adc
dec
and
or
popa
and
jl
jle
repnz
sahf
clc
mov
sbb
sub
push
pop
mov
pop
stos
sarl
loopne
sbb
xchg
mov
icebp
jmp
out
dec
sub
jns
or
xchg
mov
hlt
call
rcll
iret
arpl
jecxz
test
popf
push
or
cmpsl
in
cmp
js
or
xor
test
inc
test
fdivrp
jp
push
daa
add
fistpll
sub
sarl
popa
in
ja
int3
mov
mov
ljmp
imul
mov
add
lcall
lret
sbb
ret
jns
enter
add
cmpsl
push
cld
jae
mov
xchg
dec
adcl
stc
xchg
rorb
jmp
popa
dec
dec
push
popa
enter
cmp
push
push
dec
mov
lock
mov
loop
scas
and
in
mov
icebp
lods
pop
push
mov
inc
sbb
fildll
scas
and
pushf
sarb
mov
or
dec
push
push
outsl
sarb
test
xor
add
cmp
test
and
xor
mov
sbb
gs
xchg
hlt
jecxz
push
xor
or
mov
aad
jmp
stos
jle
cmpsb
outsb
cmp
xor
adcl
rcrb
xchg
inc
std
sbb
pop
inc
xor
rcr
ljmp
out
shlb
movsb
or
or
mov
movsl
or
loopne
lods
ljmp
shrb
into
push
sub
or
mov
dec
loop
enter
fsub
cmp
xchg
rorb
je
clc
decl
add
adc
nop
scas
add
sub
lock
or
andl
cmp
mov
arpl
inc
push
test
pop
inc
mov
loop
in
cmp
pop
repnz
mov
push
dec
js
mov
pop
enter
in
mov
xor
in
dec
rep
rolb
scas
xlat
sbb
push
lock
add
or
adc
out
ljmp
fpatan
lret
add
sbb
addr16
out
and
lahf
push
push
rorb
or
movsb
roll
jns
notb
imul
sub
dec
xchg
xor
bound
mov
dec
and
mov
or
or
adc
nop
add
adc
ss
inc
aam
fs
aam
jecxz
js
dec
sbb
add
shlb
ljmp
test
daa
jne
cltd
repnz
enter
das
cld
dec
fcomps
add
call
lret
jge
cs
pop
and
insb
sub
xor
push
add
daa
push
mov
loopne
lahf
test
sbb
jb
add
imul
les
and
gs
out
aad
incl
or
loopne
ss
in
cltd
lea
decl
pop
xor
ficomps
pop
adcl
fwait
stos
incl
adc
xor
or
scas
jbe
or
mov
ret
dec
out
mov
mov
jns
adc
cltd
and
adcl
les
jmp
add
out
add
and
jns
mov
xchg
pop
test
sbb
scas
scas
cmp
mov
std
movl
jge
and
mov
jl
cltd
mov
sub
inc
loopne
insl
pop
mov
jbe
add
or
in
outsl
je
inc
dec
adc
jecxz
fistl
jecxz
add
rcll
addl
adc
inc
cmp
adc
stos
add
or
psubusw
jo
cmp
xchg
or
fisttpl
rcr
jge
inc
mov
test
xor
subb
incl
imul
clc
fwait
lea
sbb
hlt
pop
std
mov
pop
into
mov
js
dec
fsubrl
add
xor
in
in
pop
sarl
and
outsb
sub
das
stos
jno
in
es
stc
inc
ds
sbb
push
movd
sbbb
and
adc
jmp
mov
lock
call
in
push
or
adc
fistps
push
jle
and
or
sbb
sub
xor
add
ljmp
rclb
lcall
add
ret
jns
cmpsb
inc
sub
xor
xchg
pop
test
daa
cmp
out
aaa
sbb
and
sbb
jl
aas
dec
fs
add
adc
jl
test
aaa
inc
mov
mov
mov
jb
stos
icebp
ret
and
test
pushl
imulb
mov
lds
mov
loopne
loope
subb
dec
shrb
cmp
imul
mov
or
adc
test
or
fnstsw
xor
pusha
cmp
lods
call
out
lods
inc
push
push
dec
daa
in
xor
repnz
or
insb
aas
rorl
int3
cmc
addr16
cli
lods
pop
pop
and
es
mov
or
mov
imull
incb
push
cli
addl
movsb
mov
cli
mov
ljmp
jnp
leave
andb
hlt
inc
je
es
push
pop
sub
xlat
pop
sbb
fstpl
scas
and
jle
stos
inc
movsl
mov
adc
fisttpll
aaa
sbb
test
push
add
push
inc
in
mov
movsl
aaa
inc
mov
cmp
add
jmp
enter
movsb
xor
in
add
jp
sbb
decl
stos
mov
addl
inc
xchg
mov
hlt
call
fisubrl
push
jge
cmp
call
scas
lods
ja
dec
fimuls
mov
nop
mov
mov
ljmp
inc
cmp
sub
rcrb
lahf
xchg
dec
adc
pop
sbb
mov
movsb
or
pop
popa
sbb
jnp
cmp
aad
movl
jg
call
mov
push
jl
cmp
sub
xchg
xchg
xchg
push
fisttps
aas
clc
pmaddwd
arpl
addr16
test
mov
add
stos
and
mov
lock
sub
jbe
push
jecxz
lods
aam
das
mov
and
pusha
pusha
dec
lods
mov
add
add
test
stc
cmp
cld
dec
sbb
xchg
sbb
cld
test
mov
in
jp
push
jecxz
mov
sbb
dec
outsb
ret
inc
jno
fiadds
jmp
loopne
into
and
sbb
cs
jmp
mov
jecxz
sahf
jle
inc
fadd
and
das
ds
loopne
mov
and
adc
repz
decl
dec
add
push
or
push
gs
jmp
add
push
xorl
mov
mov
arpl
cld
mov
sbb
adc
outsl
mov
test
inc
inc
cmp
add
insl
adc
in
jmp
pop
js
mov
mov
jl
cmp
insb
bound
mov
or
je
je
cmp
rorb
push
mov
xor
cmp
addl
push
mov
insb
xchg
stos
jg
mov
xor
scas
ljmp
mov
aad
pop
and
gs
lock
adc
jmp
mov
add
mov
pop
nop
inc
push
push
ret
lds
or
xchg
inc
or
aas
mov
ds
add
scas
mov
jmp
test
lock
dec
sbbb
inc
repz
pop
push
sarb
inc
orl
clc
out
js
fnstenv
push
jp
ss
xor
hlt
mov
push
mov
push
pusha
push
cmpsb
pop
sbb
js
lret
adc
insb
xchg
mov
push
push
sti
ss
out
repnz
test
inc
push
sub
es
mov
lds
sbb
in
adc
mov
push
adc
cmpsl
or
jle
jmp
cwtl
mov
push
sbb
rolb
dec
clc
popf
push
test
pop
lcall
sub
sahf
and
cmp
outsl
jg
scas
add
xchg
ja
enter
aam
pop
or
dec
aam
aas
push
stos
pop
cmp
push
jne
or
ljmp
jp
or
adc
stos
movsl
sub
inc
cld
insb
mov
arpl
inc
push
ja
pop
jge
sbb
push
out
mov
sbb
and
incl
and
add
cmpb
enter
cmp
xor
pop
lret
ja
cmp
jl
repnz
adc
repnz
xor
lds
decl
sub
mov
icebp
and
scas
xchg
sub
lock
imul
out
add
cmp
jnp
fdiv
adc
fidivl
call
sub
sarb
repnz
xor
das
lcall
hlt
mov
ret
jne
push
lock
lock
daa
testb
in
and
sbb
mov
loopne
decl
in
pop
sbb
or
adc
push
mov
adcb
movsl
mov
jne
imul
clc
iret
es
sub
cld
cmp
pop
inc
mov
fcompl
or
inc
mov
clc
test
inc
andb
jl
pop
mov
dec
out
inc
into
dec
pusha
inc
and
cmp
jg
sub
sub
add
sbb
sbb
test
or
adc
movsl
mov
pop
pushf
or
or
std
mov
outsl
adc
loopne
push
sar
and
icebp
pop
mov
imul
aaa
pop
dec
inc
sbb
movsb
in
cmpsl
sub
das
xor
inc
and
mov
pop
push
sbb
in
cwtl
push
mov
in
cli
inc
je
push
jg
jp
mov
push
jae
mov
mov
in
adc
aad
lcall
adc
pop
pop
sub
sbb
cmpsb
lret
shll
es
sbb
cltd
xorb
inc
sbb
and
call
xor
add
js
mov
dec
cmp
mov
popw
sub
and
lds
insl
sbb
in
cmp
dec
add
mov
jmp
mov
jno
and
xchg
mov
aas
adc
ljmp
andl
mov
inc
jp
cmpsl
push
es
adc
fiaddl
addr16
jecxz
and
sbb
and
or
shrb
cwtl
insb
shlb
das
ljmp
les
or
ficompl
std
jg
cmp
mov
mov
jae
xor
lea
ds
jl
mov
mov
xchg
test
clc
outsl
bound
inc
mov
ljmp
outsl
cld
lcall
jle
out
mov
inc
mov
ret
pop
and
sbb
mov
cmpsb
cmp
insb
mov
ds
stos
push
cmpsb
mov
outsl
inc
xor
and
ds
and
xor
clc
scas
jmp
lock
add
mov
sarb
inc
addr16
insl
cld
out
fsubs
and
inc
and
push
mov
lcall
and
inc
mov
out
data16
and
or
push
jae
cld
int
cli
push
pop
inc
adc
mov
sbb
pop
test
cmc
or
lea
sarb
out
jno
add
xchg
xor
mov
call
test
add
sarb
lcall
cmp
mov
mov
inc
add
ljmp
jg
outsb
jecxz
rol
inc
sub
jo
mov
mov
push
mov
mov
xchg
pop
sub
sbb
adc
dec
jecxz
push
icebp
clc
lods
sahf
adc
test
ds
mov
push
adc
nop
clc
ljmp
pop
rcrl
inc
aas
bound
xor
and
dec
imul
pushl
pop
mov
and
lcall
daa
lock
jo
mov
mov
adc
mov
js
mov
aas
or
inc
icebp
dec
inc
int3
and
sub
incl
test
popf
inc
or
xchg
outsb
adcb
mov
test
adc
clc
xchg
or
sbb
xor
cs
cld
call
loopne
inc
push
int
or
jle
and
cmp
xorl
push
test
js
imul
test
test
adc
test
add
pop
or
fwait
loop
pop
int
xlat
fdivr
movsl
sbb
or
icebp
dec
test
lds
lods
outsb
pop
data16
sub
inc
repnz
imul
jne
add
push
loopne
ret
stc
pop
jbe
sub
cmp
cld
test
sbb
out
xchg
dec
adc
mov
movsb
lret
mov
or
jmp
jmp
ss
arpl
push
roll
imul
mov
sbb
and
sarb
adc
mov
test
les
sub
mov
stos
iret
push
or
cmp
jl
mov
inc
mov
decl
into
fisubrs
adc
sbb
push
inc
jne
xchg
push
insl
or
mov
or
adc
and
sub
incl
lds
and
in
pop
insl
or
xor
fists
cltd
int3
push
jb
orl
daa
std
out
cmpsl
fwait
xchg
mov
icebp
mov
lock
repz
call
adcl
lcall
sub
andb
bound
scas
xchg
idiv
aaa
sbb
mov
mov
jecxz
push
imul
clc
or
mov
js
push
mov
gs
or
cmp
fucompp
sbb
js
insl
dec
cmp
mov
psrad
lret
adc
sub
adc
filds
dec
xchg
inc
enter
push
iret
jp
ffreep
sub
inc
cmp
push
stc
cmp
mov
sarb
pop
mov
mov
fs
jp
push
fidivrs
pop
outsl
cmp
cmp
xchg
jp
cmpsl
jo
ss
mov
jecxz
pushl
or
scas
not
inc
dec
outsb
cmpsl
mov
adc
xchg
rorb
or
or
and
push
cld
call
andl
pop
cltd
inc
or
jmp
ss
es
popf
adc
sub
test
shll
in
stos
hlt
call
mov
mov
cmp
gs
push
xor
sbb
ffreep
shlb
pop
sbb
mov
inc
cmp
sbb
ja
jae
insl
add
clc
movb
roll
adc
adc
mov
mov
stos
add
push
fidivrl
aas
mov
rcll
les
add
out
std
pop
push
dec
lods
push
add
in
mov
push
mov
xchg
pslld
clc
mov
cli
add
cltd
add
and
dec
add
dec
aas
mov
dec
addr16
or
hlt
jno
sub
ret
inc
or
icebp
scas
mov
or
stos
jne
mov
movsl
pop
push
sub
pop
testl
push
sub
loop
mov
sbb
ja
pop
shll
pop
int3
lods
fnstcw
push
iret
push
mov
stc
popa
xchg
dec
rcrl
lret
xchg
xchg
ss
inc
cld
inc
sti
inc
jo
adc
stc
mov
mov
aad
notb
arpl
push
add
mov
push
imul
and
insl
in
inc
inc
pop
ljmp
jl
fcomps
fdivr
ljmp
aad
push
imul
push
push
mov
shlb
sub
jg
mov
pop
fxch
and
pop
mov
ficomps
adc
mov
das
div
andb
mov
inc
enter
ret
cld
push
adc
and
jmp
push
mov
jb
nop
dec
push
adc
lock
mov
cmp
pop
lahf
fsub
pop
loopne
adc
insl
add
aam
add
mov
dec
mov
icebp
pop
xchg
push
aad
inc
pop
inc
mov
mov
aaa
scas
jbe
pop
inc
cmc
aaa
imul
popl
std
lock
xor
sbb
and
pop
mov
call
aas
push
mov
out
insl
xchg
cmpsl
bound
jle
fadds
bound
and
sbbl
shl
icebp
cld
test
push
cli
jmp
dec
xor
mov
or
ja
pop
pop
call
cwtl
rolb
xor
std
dec
xchg
or
mov
divl
push
loop
pop
or
mov
cmc
cmpsl
js
cmpsl
in
mov
mov
xchg
loopne
sahf
dec
cmp
pushl
sahf
jo
cltd
mov
xchg
aaa
or
test
lods
andb
jecxz
stc
mov
pop
add
mov
pop
enter
pusha
sbb
inc
hlt
aaa
aam
xchg
ret
adc
jg
stc
mov
stos
push
sbb
push
popa
outsl
lcall
or
add
cmp
dec
sub
jae
popf
dec
jnp
jg
xor
mov
sti
pop
icebp
pop
mov
push
xchg
push
mov
ucomiss
mov
xchg
mov
mov
mov
test
in
adc
add
test
adc
jns
rorb
and
or
loopne
adc
push
lds
add
decb
stos
xchg
cltd
in
ss
xchg
or
insl
mov
fs
shrl
sub
loop
loopne
icebp
mov
and
cld
mov
xchg
xor
in
movsl
decl
jmp
flds
cmpsl
or
inc
xchg
gs
xchg
hlt
pop
lds
or
test
push
and
mov
xchg
xor
lods
stos
pop
inc
call
jg
mov
jno
icebp
scas
repz
inc
negb
in
jbe
int
outsb
sar
lret
popf
or
bound
sbb
lahf
jb
adc
rorb
mov
and
inc
sarb
mov
pop
std
xor
clc
jg
lcall
inc
xchg
lahf
nop
inc
adc
in
inc
fucomip
aam
out
pop
ja
mov
ret
sub
or
into
les
inc
sbb
inc
xchg
jns
mov
adc
sub
in
push
cmpsb
add
outsb
lock
xchg
int3
xchg
push
adc
push
lret
outsl
cltd
cli
jmp
mov
push
nop
xchg
xchg
jl
cld
mov
popa
incb
mov
mov
xchg
lcall
mov
repnz
pop
or
test
mov
movsl
xlat
dec
aam
mov
dec
mov
add
decl
adc
xsha256
cmpsb
aad
inc
arpl
jg
notb
std
xchg
aam
ss
lahf
lods
xchg
lock
jg
inc
and
aaa
scas
sbb
add
mov
rcr
ret
sub
mov
add
inc
mov
lods
arpl
adc
add
pop
inc
cld
out
or
stos
test
xchg
lret
iret
in
inc
fists
fsubr
inc
shl
sbb
push
adc
xchg
and
cmc
add
mov
lds
cltd
inc
jne
insb
and
fwait
push
and
aas
xor
mov
scas
adc
mov
orl
pop
pop
lock
sti
add
inc
pop
orl
adc
int3
mov
fiaddl
xor
popf
lods
nop
pop
movsb
dec
jmp
adc
rcll
in
xor
int3
mov
xchg
xor
cmp
push
arpl
xor
daa
or
bound
mov
mov
push
std
lcall
ja
and
push
addr16
dec
or
or
stc
inc
jp
stos
jmp
gs
dec
out
mov
es
mov
pop
lock
or
xchg
out
xchg
pop
stos
out
inc
xor
sarl
ffreep
scas
inc
cmp
cmp
xor
pop
pop
lods
mov
loopne
fldenv
jbe
or
push
data16
pusha
push
cmp
mov
pop
pop
xchg
add
mov
aaa
xchg
movsb
mov
rcl
sub
insl
jp
mov
loopne
aas
popa
prefetch
dec
jne
or
or
jnp
adc
ss
or
loopne
inc
sbb
les
mov
sbb
mov
addr16
pushf
loopne
ret
cmp
mov
adc
mov
inc
fs
std
out
adc
insb
decl
sub
je
stos
push
or
push
pop
and
out
xchg
lcall
test
scas
adc
jns
dec
fwait
lcall
xchg
inc
push
dec
lea
pusha
mov
push
xchg
mov
es
pushf
mov
sahf
pop
nop
add
cmp
add
dec
sbb
xchg
ljmp
inc
insb
js
push
adc
sub
insb
cld
lods
mov
fwait
push
sarl
push
daa
lcall
jmp
jmp
jns
pop
jb
in
push
std
pushl
pop
xor
enter
test
call
pop
sub
push
adc
clc
scas
adc
outsl
ljmp
pop
or
pop
test
sub
fildll
xchg
mov
pushl
cwtl
ret
cmc
cmp
fisubl
stc
xchg
pop
js
aas
sar
lods
adc
imul
and
orb
xlat
jmp
adc
icebp
repz
lcall
fdivrs
push
sub
jle
aas
dec
data16
inc
incl
std
jle
inc
and
or
cmc
and
sahf
xchg
or
cmp
callw
lcall
inc
mov
mov
cmpb
lcall
sbb
and
xchg
pop
jecxz
rol
sbb
push
and
or
pushf
out
cmp
cmc
jae
pop
je
inc
push
mov
movsl
in
fwait
push
inc
or
add
push
decl
mov
stos
or
dec
adcl
das
cld
icebp
xchg
mov
jo
adc
mov
or
mov
jbe
xor
xchg
scas
stos
inc
cmp
pop
cli
inc
test
inc
push
fisttpll
pop
push
shlb
and
shlb
mov
cmp
sahf
mov
add
jbe,pt
ss
loop
stos
sub
and
cltd
lock
test
fildll
dec
pop
mov
movsl
xchg
adc
ljmp
mov
mov
mov
movsb
add
call
cs
out
adc
leave
es
dec
dec
add
and
and
mov
rol
fcomi
outsl
enter
das
jno
cmp
jle
dec
jne
jle
mov
cld
mov
fs
lcall
xchg
mov
incl
cmpb
out
sbb
jg
in
sub
pop
push
mov
or
mov
mov
inc
mov
cmp
xchg
mov
push
addb
fistps
shl
xchg
jmp
or
lods
or
adc
sub
xlat
icebp
rcr
cmp
andl
and
repnz
and
xchg
add
hlt
mov
std
lods
sub
pop
mov
outsb
mov
loop
inc
mov
loope
jl
sbbb
test
int3
push
ds
and
jmp
xor
lods
sti
in
mov
sarb
cmpl
out
mov
outsb
test
in
sbb
jbe
in
fimull
cmp
nop
mov
xchg
pop
icebp
cmp
shrb
cmp
cmpb
mov
xor
push
xor
filds
out
shrl
dec
sub
fbstp
sub
pop
adc
loop
jg
mov
in
cmpsl
xchg
xchg
xchg
orb
jg
dec
cmp
in
dec
and
movsb
notl
sbb
and
mov
or
insb
loop
mov
adc
mov
daa
xor
ljmp
cmp
xor
mov
int
adc
jno
push
jno
mov
popf
mov
or
nop
pop
dec
fisubl
mov
cmp
ljmp
enter
xchg
aas
fs
mov
std
das
stos
jg
push
andb
dec
inc
rorb
and
dec
push
hlt
jmp
add
mov
lds
jno
mov
lods
into
aas
enter
out
jmp
sbb
cmpsb
cmp
adc
lcall
adc
fdivl
aaa
pop
and
sbb
sub
xchg
mov
clc
inc
add
pop
insl
mov
inc
mov
call
pop
cmc
invd
loopne
nop
jae
push
insl
lock
fdivs
sbb
or
mov
sbb
mov
inc
into
scas
jno
clc
push
shrb
mov
fcomi
pop
icebp
arpl
mov
sbb
sbb
adc
aad
or
xor
mov
movsb
repz
test
and
iret
les
pop
xlat
aad
inc
scas
call
out
and
pop
aas
mov
lods
loop
cmc
xlat
loopne
add
je
pop
and
sbbl
arpl
adcl
mov
out
enter
xor
cmpsl
stc
inc
fucom
movsb
pop
xor
sbb
in
call
pop
or
xchg
popa
fucom
andb
ret
push
pop
daa
dec
sub
xor
pop
mov
std
adc
adc
or
out
pop
repnz
or
in
subl
inc
mov
xchg
fists
out
gs
mov
sbb
ficoms
mov
repnz
adc
test
cli
movsb
sbb
sub
call
fisubrl
test
das
loopne
sub
xor
sub
and
fistps
jle
mov
cmp
das
cmp
movsl
stos
pop
push
jmp
out
repz
sub
cmp
and
ret
das
xchg
push
jo
aaa
adc
and
insb
mov
mov
sbb
mov
std
movsb
fmuls
and
stc
lods
das
insl
incl
scas
jb
cli
cmp
sarl
add
std
add
inc
sub
gs
pop
pop
xchg
scas
jg
pop
pop
sbb
sbb
cmp
mov
jle
clc
out
sbb
jns
inc
push
or
sbb
outsl
push
sub
pop
je
sub
movsb
inc
sti
pop
push
jmp
pop
xchg
xchg
std
push
adc
out
jbe
ret
push
push
cld
aaa
addr16
cmp
aam
xchg
je
pop
shlb
clc
dec
sub
xchg
dec
sub
movsl
mov
mov
popa
xchg
jae
cmp
push
or
aas
xchg
adc
lret
cmp
xchg
dec
and
call
add
pushf
push
adc
rcrl
inc
push
cmp
jecxz
mov
imul
cmp
push
and
loop
mov
dec
call
hlt
es
push
aas
clc
ja
add
push
cwtl
lock
dec
ret
jg
or
xchg
jl
lods
incl
and
inc
mov
ret
stos
xchg
ds
sbb
add
repz
hlt
and
cmc
jnp
and
xor
push
or
add
mov
pop
mov
loopne
xchg
stos
shlb
inc
xor
leave
orb
pop
insb
add
mov
dec
push
pop
icebp
dec
or
nop
jnp
fwait
rolb
or
inc
cld
xchg
mov
dec
addr16
push
jecxz
mov
out
mov
loopne
cmp
dec
mov
into
sarl
fistl
test
in
cmp
sub
or
sub
cld
cmp
push
jmp
dec
dec
push
xor
data16
sbb
dec
in
inc
mov
add
shrb
ljmp
push
mov
popf
and
aaa
mov
cmpsb
sub
fdivrl
gs
cmp
mov
adc
xchg
cmpsb
mov
jae
mov
pop
loopne
shlb
sub
xchg
loop
sahf
test
pushf
movsb
or
lock
pusha
pop
mov
movsb
cmpsl
decl
inc
pop
in
push
ljmp
mov
bound
jge
and
jmp
add
mov
sbb
dec
cld
pop
xor
sbb
les
js
push
xchg
push
orb
rcrl
fcoms
pop
into
in
inc
bound
mov
loop
fwait
dec
sarb
mov
addr16
jns
push
push
inc
insb
pop
out
mov
enter
mov
loope
mov
mov
push
or
add
push
jb
hlt
femms
loop
movsb
int3
xchg
cli
lods
mov
dec
movl
out
mov
js
mov
cld
mov
aam
aaa
fld
in
xchg
mov
jno
jg,pt
push
lods
mov
mull
icebp
aaa
or
add
scas
mov
pop
dec
push
cld
bound
pop
aaa
hlt
and
xchg
jmp
mov
out
clc
lcall
pop
xchg
adc
je
gs
xchg
int
loop
pop
xchg
andb
shr
mov
pop
xchg
incl
inc
mov
mov
jb
sbb
es
pop
xchg
fsubrp
or
pop
cmp
pop
incl
fsubrs
adc
aad
in
ret
sub
xor
fdivr
lods
addb
pushf
int3
cmpsl
pop
mov
pop
pop
bswap
dec
adc
jmp
dec
filds
dec
ds
and
push
or
clc
dec
jle
sub
dec
lcall
decb
push
mov
mov
push
jo
or
xchg
fildl
pop
loopne
jmp
imul
jl
jl
jl
sbb
cmc
in
mov
aam
call
incl
push
js
jl
jl
clc
in
stc
ja
jecxz
push
leave
or
mov
inc
jp
or
push
pushf
pop
sub
ds
popl
sbbl
inc
xor
loope
mov
xchg
mov
mov
jl
popl
mov
pop
add
bound
popf
cmp
scas
or
test
jo
dec
lock
adc
in
mov
dec
mov
or
mov
jg
adc
loopne
xor
frstor
add
cmp
out
jb
sub
pop
pop
sbb
leave
roll
outsl
jo
call
ljmp
jl
movl
mov
jg
addb
iret
pusha
in
mov
iret
fs
aaa
sbb
push
mov
dec
mov
xchg
fwait
jg
inc
pop
dec
ret
add
push
addr16
pop
movsl
scas
test
lret
ret
inc
mov
mov
aad
mov
loope
je
push
xor
and
je
fdivl
push
xchg
jp
aas
and
cmpl
adc
jge
js
jg
cld
iret
cld
jno
icebp
lea
dec
or
pop
les
int
and
or
adc
int
push
pop
push
sbb
pop
or
mov
jmp
adc
inc
push
cld
rcrl
je
insb
test
sub
push
mov
lock
pop
push
sbb
cltd
mov
inc
es
sub
stos
jge
sbb
popl
and
jbe
jne
push
adc
cld
arpl
sarl
cld
test
and
sub
xchg
and
pop
js
inc
add
andl
call
add
les
dec
jae
cmpsb
aaa
pop
das
movsl
jmp
jl
inc
int
in
mov
mov
outsl
dec
jnp
rcll
mov
pop
cmp
stos
incl
imul
jle
das
or
push
lea
rcl
adc
loop
gs
decl
rorl
insb
out
sti
std
mov
cmp
clc
jg
or
fimuls
push
rcrb
mov
xor
mov
pusha
in
popa
inc
lcall
sar
cmc
lods
lret
fisttps
adc
mov
jne,pn
dec
push
insb
jmp
pushl
dec
popl
gs
dec
or
cld
std
jg
inc
pop
dec
and
or
inc
jge
sub
or
sub
loope
mov
pop
shr
mov
clc
xchg
inc
sub
or
pop
sub
or
idivb
push
jle
sub
xor
sub
rcrb
jno
fnstsw
outsl
xor
outsl
test
negb
xor
inc
dec
add
adc
cli
das
daa
adc
aad
inc
mov
lods
add
lods
mov
ficoms
dec
iret
sahf
out
stc
movsb
pop
decl
and
shlb
scas
inc
pop
jmp
clc
jns
leave
add
pushl
xor
or
loope
jno
sahf
mov
aaa
or
in
or
mov
in
cmp
jae
fistpll
mov
movsl
repz
and
decl
or
push
fstps
sbb
mov
fs
mov
into
xchg
push
xorl
mov
push
or
insl
pop
sahf
add
cltd
sub
cmpb
gs
lcallw
loopne
jmp
lcall
in
and
outsl
xchg
sub
adcb
rcll
out
in
mov
mov
mov
lcall
sahf
aam
out
lret
cmp
ljmp
lcall
repz
add
push
xorl
rcrb
fldt
and
xor
cmc
ret
jg
adc
movsb
inc
pop
rolb
dec
cmp
enter
jmp
mov
add
test
in
rorl
lret
sub
dec
or
aad
push
push
mov
cld
push
incb
negb
clc
inc
leave
stos
inc
or
mov
mov
repz
pop
mov
jno
out
ljmp
test
jmp
jns
adc
xchg
mov
dec
sbb
xchg
arpl
popa
add
mov
es
int
cmc
dec
inc
and
test
incl
repnz
test
in
push
mov
lcall
es
lods
clc
xchg
hlt
or
lea
fidivl
pop
and
and
mov
pop
cmp
sub
outsl
cli
mov
pop
sahf
stc
in
fdivrl
jl
pop
or
mov
es
adc
push
sti
sbb
sbb
cmpsl
adc
mov
adc
imul
daa
adcb
aad
dec
ds
lds
std
add
jl
dec
sbb
add
imul
imul
sub
or
inc
fidivrs
sbb
cmp
arpl
pop
inc
mov
jl
xchg
repnz
cmc
jg
loopne
mov
xchg
and
and
sahf
ss
iret
ds
out
mov
lahf
lea
jg
cmp
and
push
std
das
cmp
adc
leave
mov
ss
movsb
mov
or
mov
pop
shr
push
test
pop
mull
push
movsl
sbb
std
in
icebp
or
push
cld
lcall
adc
loopne
jl
shlb
pop
aad
imul
pop
jnp
popa
into
jg
das
mov
add
das
dec
int3
shl
cs
dec
mov
popa
rcrl
cmp
adc
cs
mov
cs
adc
push
pushl
outsl
stos
std
nop
test
test
daa
jmp
sti
mov
and
mov
sbb
frstor
inc
inc
loop
call
mov
shrb
in
jno
dec
cld
jmp
addr16
add
pop
and
pop
jl
jge
lock
dec
inc
dec
inc
call
and
or
icebp
outsl
incl
mov
leave
je
dec
test
xor
adc
xchg
push
mov
pop
arpl
rcl
add
loope
xchg
clc
in
out
or
add
sahf
push
dec
in
aad
sub
pushf
out
jmp
ret
call
jbe
movsl
out
adc
adc
dec
cltd
addl
xchg
shll
imul
ja
add
stos
leave
es
push
lock
add
dec
xlat
cli
aas
lods
shlb
push
xchg
fsubs
call
inc
stos
or
mov
mov
rcl
lods
lahf
add
fs
xchg
cli
dec
les
jbe
std
aaa
cmp
das
adc
fs
sbb
inc
dec
mov
ret
scas
outsb
add
js
sbb
xchg
sub
int3
push
cmp
pop
sbb
incl
fucom
cli
lcall
jg
ljmp
or
test
lret
and
pop
pop
add
fwait
push
fildll
je
jne
pop
mov
rcrl
push
pusha
mov
mov
xor
ja
decl
xchg
pop
mov
jge
sbb
push
dec
or
lret
jmp
mov
xchg
xchg
pusha
shrb
fwait
add
clc
fisttps
mov
sub
mov
mov
xchg
pop
fstps
push
cs
xorb
inc
ret
push
mov
jmp
dec
test
mov
dec
shll
pop
inc
mov
or
das
bound
push
lret
rcr
lock
jg
sbbb
mov
cmp
add
adc
fcompl
mov
out
pop
stos
or
repz
fildl
cmp
outsl
cmc
ret
dec
fisubrs
cmc
arpl
xchg
aas
mov
scas
shl
push
shll
xchg
jmp
or
outsl
ja
dec
out
and
addr16
int3
sbb
xor
or
clc
fwait
mov
xor
pop
push
inc
inc
stos
add
cmc
insb
push
pop
push
aaa
xor
push
or
jo
add
push
xchg
clc
pop
pop
xor
daa
or
jge
jno
sbb
push
push
or
jae
pop
rcr
outsl
mov
lahf
les
or
int3
ret
fwait
adc
and
mov
add
icebp
xor
inc
aas
mov
das
mov
and
push
inc
les
add
xor
jmp
push
jecxz
xchg
push
lcall
icebp
cmp
andl
jb
js
add
arpl
subb
inc
rcr
jg
jg
jo
jbe
push
adc
mov
jl
mov
sub
inc
inc
pop
inc
and
repnz
insl
out
push
leave
inc
sbb
rcrb
scas
add
jg
fidivrl
maskmovq
roll
pop
notl
xchg
pop
insb
imul
sarl
sub
fs
out
lds
sub
jg
lock
xlat
lret
outsb
subb
loop
add
xor
fidivrl
ljmp
cmp
xor
scas
sub
outsl
xchg
pusha
and
rclb
sub
das
and
cmp
out
setg
push
aad
mov
mov
repnz
shlb
jp
push
lods
jmp
cmpsl
mov
je
sub
movsb
div
in
adc
xchg
jae
jecxz
add
lea
jns
sahf
mov
pushl
inc
or
and
sub
pop
cmp
cmp
lahf
insb
xor
loop
jns
and
or
mov
sti
cltd
push
add
leave
outsb
cmpsb
ds
movsb
push
movsl
mov
je
rol
add
pop
cmp
dec
aaa
ret
lods
cmp
jp
pop
pop
clc
das
adcl
and
cs
jmp
dec
fs
arpl
ficompl
mov
mov
mov
jg
add
jg
and
xchg
imul
mov
mov
jmp
iret
lods
nop
pop
pop
mov
in
adc
xor
fdivs
lock
or
jge
push
dec
or
rcll
sub
push
ret
lods
inc
clc
mov
nop
xchg
sbb
repz
mov
pop
ss
sub
mov
xor
or
es
mov
xchg
hlt
test
fistl
mov
jbe
rcr
loop
xor
mov
pop
cmp
ss
movsl
decl
stos
xchg
and
fadds
pop
mov
pop
add
and
test
or
jb
add
out
rol
or
lcall
cmp
fiaddl
mov
out
mov
out
test
inc
std
or
mov
cli
cmp
xor
sbb
clc
lahf
push
std
and
cli
jg
sbb
xchg
or
add
sub
push
test
add
push
andb
nop
adc
in
sbbb
inc
pop
inc
fildll
adc
and
test
pop
and
sbb
or
and
addb
inc
inc
add
inc
outsl
stos
mov
fimull
mov
aaa
and
adc
cmp
outsl
pop
mov
or
mov
mov
addb
and
dec
scas
mov
nop
das
sbb
repnz
add
push
addb
outsl
fcomi
add
and
insl
nop
pop
or
and
outsb
lods
adc
add
inc
shll
adc
outsb
insl
lods
inc
mov
and
dec
adc
andb
nop
add
imul
and
mov
adc
dec
adc
or
popf
insb
and
mov
push
pop
sbb
addr16
or
fidivl
adc
insl
imul
pop
mov
mov
inc
and
or
jne
dec
mov
jne
insl
pop
dec
and
nop
lea
imul
and
aaa
or
jns
mov
mov
add
outsl
or
mov
nop
stos
ret
mov
in
out
jmp
and
adc
inc
cmp
pop
mov
and
xor
mov
mov
and
or
mov
lcall
push
sbb
mov
sbb
pop
and
push
or
lea
lods
xchg
push
adc
popa
fisttpl
pop
add
push
adc
adc
mov
pop
mov
or
mov
adc
out
out
push
sub
fiadds
and
and
addb
sbb
or
mov
jne
sub
adc
aad
lods
rorb
xchg
mov
fcomps
add
dec
inc
xor
and
test
pop
jae
xchg
mov
adc
insl
push
and
xor
push
int
sbb
into
and
mov
push
cwtl
lods
mov
insl
icebp
iret
jno
sub
cs
adc
mov
cmpb
add
inc
pop
push
push
add
neg
arpl
mov
jl
nop
adc
rorb
jno
lcall
lcall
insl
hlt
inc
scas
mov
inc
lahf
sbbb
ret
xchg
imul
imul
fwait
mov
loopne
imul
lcall
dec
cmp
mov
out
mov
popa
adc
andb
inc
popa
add
xchg
insl
lcall
xchg
or
cwtl
sbbb
xchg
lock
lcall
jmp
jp
imul
push
pop
mov
out
mov
jo
jae
push
sbb
mov
xor
adc
adc
mov
subb
cmpsb
inc
mov
mov
insb
pusha
and
adc
pop
xor
and
xchg
or
pop
sbb
mov
adc
jne
test
xorl
insb
lods
mov
test
or
adc
mov
int
cltd
push
xchg
or
test
pop
imul
and
and
adc
adc
xor
test
popf
cmp
xor
in
jo
xchg
mov
push
sbb
and
xor
insl
xor
cmp
nop
subb
mov
sub
les
rcrb
adc
sbb
sub
inc
fisttpl
test
push
ja
mov
aam
xor
cltd
or
mov
xor
loope
rcll
pushf
push
push
inc
sub
repz
or
and
pushf
jne
xchg
clc
and
sub
cmp
push
and
rcl
sbb
movsb
inc
aad
sbb
insl
imul
sbb
roll
scas
ret
push
jo
cmp
sub
sub
cs
out
or
xchg
daa
and
testb
in
aad
sub
lcall
cltd
mov
or
xor
xor
or
outsb
adc
mov
into
cmp
ss
or
and
sbb
mov
lahf
insb
sub
add
rclb
dec
test
sbbb
mov
jmp
cmc
inc
cltd
and
in
add
jo
cli
pop
lret
popa
xor
cmp
dec
push
ss
rcrb
xor
pop
in
push
mov
jnp
push
sarl
cmpb
pop
imul
and
pop
or
subb
pop
add
es
push
shl
pop
lods
pop
pop
jne
nop
es
jo
ss
mov
subl
inc
adc
pop
pop
fldl
sbb
mov
fcoml
add
mov
or
insl
and
lods
cltd
pop
sbb
inc
clc
jae
inc
pop
mov
jno
adc
addl
es
insb
divl
adc
push
xchg
or
and
or
lods
sbb
repz
adc
lods
cmp
pop
lea
imul
xor
mov
lcall
xor
sbb
int
mov
mov
scas
or
cmp
push
rorl
adc
daa
or
push
sbb
push
xlat
inc
mov
add
out
xor
lcall
push
jo
push
hlt
jecxz
inc
inc
push
mov
push
xor
cmp
push
out
push
outsb
add
ret
orl
pop
loope
jmp
adc
mov
lods
cmp
push
and
add
je
mov
stos
mov
leave
shl
lcall
mov
or
rcl
sbb
fbld
and
or
popf
adc
int
scas
xchg
or
xorl
push
sub
jl
mov
mov
nop
sbb
adc
and
lret
insl
cmpsb
subb
add
mov
mov
inc
and
fnstenv
bound
jmp
or
add
add
imul
mov
add
sbb
rcll
je
push
inc
jns
add
pop
push
lcall
pop
dec
inc
enter
push
pop
push
fisttpl
cld
mov
bound
cs
push
cmp
lea
es
add
adc
insl
mov
sbb
jno
adc
or
dec
aam
xor
les
mov
lcall
pushf
mov
sbb
sub
mov
push
or
and
cwtl
loope
pop
arpl
adc
xchg
loope
adc
sarb
rorl
retw
and
inc
in
dec
cmp
mov
cmp
or
lahf
das
jne
push
jo
add
inc
jae
lcall
pop
int
movsb
sbb
sbb
xchg
nop
mov
test
add
inc
and
or
test
add
and
rclb
inc
add
mov
or
sbbb
inc
mov
addb
outsl
mov
fsubrp
add
sbb
loopne
rolb
adc
jecxz
ficoml
in
or
inc
sbb
and
ds
adc
aad
jecxz
or
test
inc
or
and
stos
imul
decb
adcl
sarb
ret
sti
movsl
mov
dec
add
add
test
fucomi
mov
and
lds
xchg
adc
in
ja
aaa
sbb
jp
and
adc
or
adc
or
int
das
inc
inc
orb
adc
les
lds
nop
or
and
sbb
mov
add
decb
add
add
or
and
lods
jl
and
xor
or
andl
mov
adc
cmpsb
andb
rolb
fistps
adc
cmpb
insb
mov
out
or
pop
jp
es
addb
dec
push
jmp
or
inc
mov
rolb
sbb
shlb
mov
jno
inc
loopne
jmp
sbb
xor
adcl
shlb
fldt
rcrb
push
pop
ficoml
ficoms
cmp
ds
push
shll
inc
xchg
sub
add
lret
adc
adc
push
xor
lcall
mov
or
xchg
push
inc
jecxz
cli
ja
or
or
dec
inc
inc
and
inc
push
dec
and
push
push
push
fstpl
mov
sbbl
xor
and
insl
inc
rorb
xchg
add
nop
add
or
jnp
add
xlat
add
add
call
movsl
push
pop
xorl
push
je
sub
add
mov
std
jecxz
dec
test
in
and
and
inc
mov
jecxz
and
imul
adc
or
test
adc
sub
dec
shl
push
inc
xor
xor
jo
mov
insl
mov
incl
push
adc
inc
or
and
jecxz,pn
hlt
aas
or
inc
rolb
sbb
inc
push
push
xchg
jecxz
pop
dec
and
outsb
add
adc
mov
adc
push
ficompl
scas
stos
add
test
mov
addb
pushf
and
das
sub
jbe
adc
inc
out
cs
scas
inc
dec
push
mov
adc
pop
or
insl
fistl
decb
and
xchg
sub
fcmovu
sbb
test
test
lods
or
add
fmulp
and
pop
sub
mov
mov
inc
or
lods
xor
andb
or
nop
sub
pop
loope
mov
adc
into
cvtps2pd
imul
pop
and
sbb
les
mov
inc
pop
mov
jecxz
pop
jecxz
mov
outsl
and
inc
inc
pop
shlb
fs
mov
or
adc
stos
shlb
adc
mov
push
push
ret
faddl
jns
add
push
mov
sbb
pop
fcmovnu
addl
inc
add
inc
xor
nop
adc
add
sbbb
add
inc
add
sbb
ficompl
jecxz
cld
inc
sbb
mov
mov
mov
cli
mov
insl
test
push
sbb
xorb
add
mov
movb
mov
mov
pop
push
push
insl
sbb
popa
nop
push
aam
and
test
adc
aas
lods
push
sub
mov
jnp
mov
lea
lock
call
dec
inc
dec
push
push
ss
or
les
xchg
orl
adc
cmp
mov
push
push
and
adc
aaa
pop
adc
mov
gs
imul
je
jb
bound
gs
push
jne
jb
push
add
jb
insl
das
add
popa
outsb
cmp
outsb
sbb
sti
in
mov
inc
adc
jae
addr16
cmp
mov
imul
insl
jo
jb
popa
insl
adc
insl
bound
jbe
mov
jb
pop
gs
imul
repnz
jns
push
jns
xor
imul
jnp
sub
in
ja
jb
pop
imul
insb
inc
sbb
cmp
fcomi
dec
outsl
fs
dec
cwtl
fs
xorl
out
lods
sbb
push
jb
lcall
fldt
in
jo
outsb
ret
jno
outsl
bound
insb
push
arpl
mov
bound
dec
add
mov
sbb
addr16
int
ficoml
push
inc
js
push
imul
imul
je
inc
arpl
jo
idivl
fcompl
arpl
ja
or
in
mov
gs
inc
or
jns
cmp
mov
dec
inc
mov
out
fidivrl
push
dec
popa
jo
outsb
jg
arpl
mov
insl
in
jae
cmp
packuswb
imul
xlat
push
push
cltd
fidivrs
inc
cmp
xchg
adc
push
inc
add
add
add
push
cmpsb
dec
loopne
sidtl
add
mov
mov
sbb
add
pop
or
xor
add
or
add
push
cmp
lock
incb
das
fldenv
push
fistpl
mov
cmp
pop
mov
mov
add
add
push
out
in
out
je,pn
js
sbb
add
mov
aad
pusha
mov
or
sub
add
cs
lret
into
fcoml
in
outsl
add
jo
and
iretw
jle
shrb
sub
add
push
jbe
daa
inc
ja
or
rcrb
xchg
add
jb
push
shlb
rorb
mov
aam
sbb
pop
icebp
loope
adc
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
