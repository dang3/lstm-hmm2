pop
test
xchg
add
inc
add
fistl
or
dec
add
add
add
push
dec
add
inc
gs
in
dec
outsl
fs
gs
popa
outsb
or
bound
and
jb
xor
inc
add
decl
mov
inc
mov
mov
pop
mov
aaa
pop
scas
mov
repz
clc
dec
ss
mov
xchg
call
inc
fs
leave
pop
sbb
lret
mov
mov
jle
pushf
jecxz
int
xchg
adc
jg
in
pushl
mov
imul
cmpsl
add
in
mov
jg
jg
sub
cwtl
inc
cs
mov
sahf
inc
cmp
jle
mov
movsl
sar
imul
jns
mov
mov
dec
bound
sub
mov
cmpsl
add
inc
mov
mov
jle
stos
test
hlt
add
insb
jmp
ficompl
ja
in
dec
sti
or
cmpsl
cmpsl
mov
mov
pusha
push
dec
mov
add
mov
dec
add
adc
pushl
and
imul
sub
mov
dec
mov
inc
dec
lahf
pushl
mov
test
pop
push
xchg
mov
mov
cmp
fisubl
mov
jbe
insl
lret
adc
pop
add
dec
sbb
mov
mov
addr16
pushl
sub
fcompl
pusha
fsubrl
sti
inc
push
aad
sub
ss
add
add
mov
and
es
aaa
mov
push
adc
dec
call
dec
mov
and
mov
leave
or
sbb
mov
mov
imul
mov
loop
push
mov
mov
insb
push
xor
dec
mov
add
pusha
mov
add
mov
arpl
adc
ret
push
lds
scas
or
int3
mov
hlt
incl
ror
in
call
add
inc
inc
mov
mov
loopne
lock
fbstp
push
aas
push
push
sub
xchg
orb
sub
lcall
push
and
add
add
cmp
ds
cmp
adc
sbb
inc
pop
or
cmp
fsubr
push
push
cld
push
adc
jno,pt
insb
cmc
idivb
mov
add
mov
sahf
mov
jb
mov
fisubrl
or
dec
cs
lds
or
mov
mov
add
cmp
rcll
cmp
jb
and
loopne
push
push
lock
ret
mov
fdivrl
fstpt
sar
sbb
push
popa
and
pop
add
xchg
push
cmp
pusha
adc
push
insb
fwait
mov
loope
add
push
stos
loopne,pt
inc
mov
mov
shlb
loopne
adc
mov
add
adc
fdivrs
sbb
std
xchg
or
icebp
roll
call
repz
and
inc
mov
adc
mov
xchg
jbe
jb
jmp
pusha
xchg
sbb
mov
cmp
rcr
jo
std
xlat
inc
aaa
lods
dec
cwtl
lret
mov
sbb
pop
jge
mov
sbb
add
push
or
ret
mov
dec
push
sub
jg
outsl
fidivl
lcall
and
or
ja
std
mov
mov
ljmp
dec
mov
inc
imul
decl
or
mov
cmp
mov
add
mov
add
cli
mov
leave
andb
cs
pop
jecxz
sub
mov
mov
and
dec
sub
or
mov
mov
sub
mov
mov
xchg
mov
sub
mov
and
mov
mov
cmpb
xchg
idivl
and
mov
fsubr
scas
inc
push
test
mov
push
pop
ja
shl
pop
mov
pop
mov
call
xorl
sub
add
xchg
loop
inc
outsl
out
clc
dec
jmp
scas
scas
loop
ja
clc
adc
pop
mov
decl
or
xor
leave
mov
es
call
loopne
inc
add
addl
rol
lcall
pop
adc
fcmovne
or
jae
inc
mov
inc
les
add
add
aad
jbe
add
pop
pop
pushl
jl
add
push
dec
pushf
or
js
aaa
aaa
out
pop
insl
jne
xchg
movl
xor
ficoms
add
add
das
mov
adc
push
cmpb
mov
sti
aad
repnz
cltd
je
test
shrl
addb
cld
aad
sub
nop
inc
add
rorb
aas
fwait
or
xchg
lea
nopl
popf
pushl
add
mov
ficoms
hlt
fstps
jecxz
iret
or
call
push
fldt
fwait
sbb
les
xchg
fcmovnbe
lods
dec
iret
inc
jns
dec
xorl
insl
mov
mov
add
mov
and
adc
cmpsb
pushl
or
mov
and
pop
pop
aaa
out
inc
lods
loopne
cmpsb
scas
jp
push
ss
and
lock
jns
mov
cmp
jae
faddl
sbb
loopne
sarl
mov
rclb
loop
jle
or
cmp
ja
and
popf
subl
jg
sub
out
mov
inc
fists
sbb
lock
data16
fistl
mov
mov
dec
jp
scas
cli
xchg
xchg
add
inc
mov
add
push
and
iret
dec
scas
fisttpl
or
inc
adcl
je
inc
pushl
insb
push
cmp
js
mov
test
or
subl
movsl
inc
adc
lds
pop
pushl
pushf
movsb
jmp
mov
push
shll
inc
or
jl
mov
mov
out
cmp
in
mov
loope
inc
stos
mov
cmp
jo
loop
test
ds
cmp
and
pop
sti
mov
sub
cmp
add
add
mov
xchg
or
ljmp
cmp
ja
mov
or
mov
and
data16
enter
mov
mov
xchg
mov
xor
push
or
aad
ljmp
and
fldl
inc
and
cmpsl
jg
ret
and
cmp
stos
rol
icebp
cmp
jge
das
mov
cmp
cld
xchg
add
sarl
xor
xlat
mov
mov
iret
xorl
xchg
jg
pop
push
addb
inc
add
push
mov
sbb
mov
std
mov
mov
mov
xchg
and
xchg
mov
je
mov
xor
imul
xor
mov
loop
mov
push
lret
jae
adc
call
ret
mov
add
mov
push
aad
xchg
test
insb
in
xor
in
lock
jg
adc
adc
pop
enter
addr16
enter
xor
jg
jecxz
sarb
mov
add
inc
push
dec
repnz
sbb
in
fisttpll
push
inc
cld
add
aam
sub
mov
mov
or
xchg
clc
cmp
leave
add
mov
mov
imull
add
push
shlb
mov
pop
mov
incl
sub
sbb
out
mov
mov
push
loop
dec
adc
rcll
sahf
or
jno
jge
pusha
cmp
sub
sbb
jp
mov
pop
test
aam
lods
icebp
mov
fstl
shlb
mov
fs
shlb
push
ljmp
mov
ja
inc
inc
rolb
sub
mov
sub
pusha
aad
addb
std
roll
mov
and
adc
inc
enter
sub
mov
pushl
adc
fnstenv
pop
mov
push
inc
outsl
xchg
push
and
iret
mov
add
jp
cltd
pop
or
hlt
es
in
out
adcb
xchg
ss
aad
mov
add
das
enter
xlat
testb
incb
psadbw
outsl
jg
inc
imul
mov
lods
mov
sti
stos
cli
aaa
jl
pop
cwtl
and
ret
dec
test
jp
or
mov
dec
repz
push
lods
cmp
lock
pop
cmp
rcrb
push
mov
mov
test
ret
lods
clc
mov
scas
sbb
jg
out
inc
mov
mov
add
push
pop
sub
mov
sub
push
add
add
jle
ud0
pop
push
jl
pop
add
lods
cmp
jecxz
push
ret
and
sbb
and
je
sub
xor
outsl
jl
push
fscale
push
mov
jo
mov
ja
and
dec
mov
in
add
add
push
test
add
aad
push
ljmp
les
mov
sub
lock
push
mov
cli
pushl
cwtl
pop
es
pop
pop
add
js
fists
fwait
mov
divb
scas
cld
add
xorl
aaa
in
and
cmp
sub
out
lret
inc
rcll
rcll
ja
pusha
push
out
decl
ret
sbb
call
xchg
mov
lcall
inc
call
test
in
stc
iret
mov
mov
bswap
subb
xor
nop
sti
fsubrp
pop
or
iret
pop
xor
insl
ds
movsl
insb
inc
sub
or
jp
pop
gs
push
xchg
xor
inc
das
pop
icebp
add
sarl
push
mov
outsl
les
sahf
popa
js
sub
sbb
or
mov
fs
inc
adc
addb
xchg
mov
lds
push
pop
out
sub
addr16
stos
arpl
aam
sti
mov
lret
adc
jb
cwtl
mov
out
jp
sub
or
lcall
mov
movsl
jp
pusha
xor
hlt
and
std
jbe
incl
mov
lock
jle
xchg
inc
pushf
sub
incl
inc
sbb
cmp
popa
mov
cld
mov
mov
add
je
add
fucomip
and
adc
add
xor
jmp
dec
fwait
arpl
pop
cwtl
pusha
lock
add
cs
cmp
xchg
fucomi
mov
push
loop
dec
push
adc
jo
dec
mov
pusha
dec
stos
cmc
sahf
mov
sbbl
mov
mov
mov
xor
cwtl
dec
push
jo
xor
fsubrl
mov
mov
mov
jb
mov
mov
jns
inc
dec
dec
adc
loopne
push
jbe
xor
sbb
les
iret
subl
xlat
or
adc
jo
cmp
xor
add
in
jl
adc
pop
pop
xor
push
cltd
test
mov
in
or
add
mov
mov
lea
or
clc
cmpsb
rorb
lock
cwtl
jg
je
mov
inc
adc
mov
xor
adc
fdivs
fbld
sub
pop
mov
xchg
dec
mov
push
int
int
hlt
sahf
dec
inc
adcl
adc
sub
dec
in
xchg
sbb
roll
js
mov
xor
jmp
xchg
mov
test
mov
les
ljmp
cmp
imul
mov
mov
in
mov
adc
ret
outsl
into
pop
sub
ds
cli
jo
jmp
incl
je
das
add
nop
mov
mov
andb
mov
or
xchg
lret
addr16
adc
cli
fists
or
add
hlt
push
sahf
call
xor
or
icebp
repz
cmc
adc
mov
je
add
cmp
cmp
xchg
adc
loope
sbb
fdivs
in
adcl
pop
sub
iret
pushf
and
mov
mov
pop
lcall
inc
add
smsw
add
jbe
out
je
inc
adc
or
fistpl
ja
pop
mov
add
cltd
test
push
push
nop
clc
push
sub
cmp
xor
cmp
xchg
mov
push
rclb
js
ficompl
loop
dec
in
js
hlt
xchg
mov
adc
dec
ficoml
testb
incl
and
and
shlb
clc
hlt
jo
frstor
xor
sbb
out
dec
push
adc
push
cli
std
cmc
and
cltd
mov
xchg
out
add
add
in
sbb
lcall
pop
in
cld
out
test
mov
cwtl
sbb
cmp
jmp
xor
scas
sbb
es
sbb
mov
push
jle
cmp
dec
ret
mov
add
add
add
decl
xchg
sti
lret
fwait
push
cli
cmpb
or
mov
adc
fmull
popa
cmp
fsub
cmp
arpl
sub
outsb
les
ljmp
clc
orb
inc
mov
xor
lea
inc
push
pop
lock
rcll
push
mov
aas
in
rep
ret
outsl
adc
inc
out
mov
xchg
cld
add
or
outsl
adc
loop
in
ljmp
enter
aaa
inc
addr16
rorl
pushf
and
rcll
repnz
inc
and
or
clc
jbe
fisubrs
loopne
pop
inc
pop
lcall
pop
sub
mov
or
out
pushf
mov
outsl
mov
into
mov
cmc
sti
xor
mov
pop
hlt
out
jbe
dec
jnp
and
cmpsb
in
pop
sti
dec
push
inc
mov
repz
add
and
ljmp
mov
test
jo
dec
jmp
add
movsl
mov
inc
ficoms
xor
xor
pushf
ds
outsl
fdivs
add
fdivrs
jno
pushf
pop
stc
clc
add
das
inc
mov
cs
xor
test
mov
aas
clc
in
jo
mov
xchg
push
test
pop
inc
inc
and
lds
shlb
jecxz
icebp
add
mov
push
add
repz
inc
sub
add
push
mov
sbb
ljmp
imul
jnp
aad
xchg
jl
adc
shll
rolb
pop
pop
and
data16
mov
imulb
pop
push
xchg
mov
rcrl
push
in
mov
in
js
out
daa
jo
mov
fstl
lods
push
push
sbb
cs
mov
incl
xchg
pop
imul
mov
mov
xor
mov
mov
ret
aam
daa
xchg
test
stos
mov
arpl
add
adc
cmp
out
jb
push
adc
adcb
pop
jnp
add
adc
add
push
mov
jge
jle
stos
mov
mov
add
stos
sub
adc
pop
addr16
gs
add
mov
jl
add
jg
adc
int
or
mov
jg
push
sub
jp
and
es
mov
or
xor
mov
xchg
xor
scas
pushl
mov
sarl
mov
stos
popf
sti
arpl
add
orl
shr
outsl
mov
add
clc
scas
mov
xchg
mov
data16
xor
fcoms
divl
sbb
dec
cld
mov
adc
jp
inc
dec
aad
mov
int3
mov
sbb
xchg
dec
add
clc
pop
cs
mov
mov
cmp
cmp
push
int
pop
pop
in
loope
jg
jp
cmc
pop
or
sbb
out
mov
adc
jmp
lods
lock
inc
add
jmp
mov
jbe
push
xor
and
into
inc
xorl
mov
mov
or
loopne
ret
push
pop
push
mov
push
loopne
cmp
decb
dec
or
into
sbb
push
stos
sbb
sub
adc
outsb
push
lock
or
sub
mov
jmp
test
push
xchg
xor
mov
jle
lds
add
sbb
sbb
push
inc
push
rorb
mov
fucomi
icebp
scas
mov
loope
fcomps
aam
adcl
mov
jae
xchg
lods
in
sub
lds
fists
pop
mov
mov
loopne
or
push
mov
dec
pusha
dec
ror
cmpsl
aad
add
stos
xchg
addl
int3
pop
sub
mov
sti
add
cs
cmp
sbb
dec
enterw
ffreep
lods
fldcw
sbb
pop
dec
mov
test
sbb
clc
incl
outsb
xor
push
sbbl
xor
loopne
jg
push
in
lods
push
mov
push
and
int
mov
xchg
mov
cli
mov
xchg
sahf
mov
scas
inc
fistpl
add
push
cwtl
insl
or
add
mov
mov
rol
in
std
mov
adc
cld
cli
pop
or
mov
sub
divb
btr
ret
pop
cwtl
mov
dec
and
jl
aad
pop
inc
mov
cmp
test
sahf
add
ss
ja
stos
aam
scas
shlb
jo
mov
mov
mov
cmp
shr
pop
cld
pushl
xor
lods
movl
ds
shr
inc
clc
jno
loopne
loop
pop
cmc
inc
xchg
ds
in
sub
loop
testb
adc
add
test
inc
pusha
lcall
sbb
cwtl
into
fwait
lcall
loope
xor
das
push
inc
ret
imul
js
outsb
lcall
add
xchg
pop
stc
pop
jo
sti
stos
repnz
pop
hlt
or
mov
and
dec
data16
outsb
adc
call
cmpsb
fmull
push
dec
sub
mov
dec
push
xchg
call
adc
push
mov
mov
lret
test
jb
cmpsl
xchg
std
sbb
insb
fstpt
rcl
fnstsw
mov
inc
out
aaa
jb
aaa
stos
adc
dec
lock
or
int3
add
addr16
jge
mov
xchg
and
xlat
dec
fisttpll
roll
test
mov
test
mov
dec
push
or
or
or
and
mov
outsl
or
repnz
arpl
mov
sub
cli
inc
jge
xchg
lods
xor
jbe
int
js
pop
ds
mov
leave
xchg
cmp
aad
incl
shrb
cmp
cmpsb
iret
test
lock
or
adc
add
test
decl
or
and
add
xorl
jbe
loop
fidivrs
xor
test
push
js
mov
push
sbb
dec
fnsave
int3
loop
mov
pop
cmpsb
fs
push
les
cmp
ss
jp
inc
adc
incb
ret
lahf
inc
jl
pop
cmpl
icebp
int3
mov
sbb
ficoms
push
add
dec
xor
mov
cmp
xchg
or
pop
pushl
inc
bound
aaa
cmp
cmp
jmp
mov
mov
mov
dec
mov
and
cmp
sahf
cmp
lods
adc
jmp
daa
scas
jb
dec
fcoms
lea
push
push
mov
cs
xor
out
xchg
push
mov
fsubp
fwait
xor
dec
popa
repnz
cmp
mov
inc
dec
fdiv
andl
mov
sti
and
movsl
fwait
or
adc
cmp
arpl
cmp
jecxz
pop
mov
pop
add
dec
pop
add
hlt
inc
mov
jg
sbb
stos
jo
aam
mov
ljmp
inc
mov
push
mov
scas
or
ret
and
jg
pop
dec
negl
cltd
xchg
mov
orb
in
decb
in
dec
cld
add
and
adc
aam
sbbl
loopne
push
mov
sub
jne
jbe
pushf
cmp
aam
dec
lds
sti
call
xor
mov
mov
mov
fincstp
pusha
inc
xchg
shlb
xchg
xchg
decl
sub
adc
sahf
pop
mov
test
xor
outsl
lcall
jbe
xchg
xor
in
vmovups
xor
call
loopne
aad
cmp
jb
jb
test
outsb
mov
dec
or
xor
dec
push
adc
cmp
push
pop
addb
jo
and
enter
inc
adc
dec
andl
je
test
add
les
push
sub
cmp
or
mov
test
cmp
clc
jecxz
icebp
jmp
icebp
addr16
add
adc
cmpsl
shlb
mov
cmpb
dec
ret
jnp
test
and
xchg
cmp
or
mov
push
loop
jb
add
pop
gs
sbb
ficomps
inc
fnsave
cmp
call
jg
mov
inc
ret
and
adc
dec
cmp
inc
mov
and
out
mov
loopne
sub
ror
repz
lcall
cltd
xchg
inc
xchg
int
or
jo
cli
add
mov
stos
mov
adc
and
pop
ret
adc
add
jl
sub
push
bound
shlb
nop
mov
jmp
jg
clc
call
cmpsb
mov
scas
pop
pop
out
loope
and
dec
hlt
inc
mov
jo
push
xchg
shl
add
iret
dec
in
dec
sbb
int
idiv
pushl
sbb
add
dec
movsb
add
push
dec
push
movb
fbstp
aas
sub
jmp
pop
mov
mov
or
and
out
push
gs
push
fsub
je
arpl
and
inc
cs
mov
pushl
jecxz
mov
in
add
cltd
loop
sbbb
out
fldt
mov
hlt
jae
xor
pop
stos
push
mov
cld
mov
jmp
jl
sbb
or
or
outsl
cld
mov
out
js
sub
and
push
mul
push
lahf
mov
fiaddl
aad
jmp
mov
ret
into
call
sti
incl
mov
or
adc
lods
jecxz
pusha
inc
popa
adc
lea
mov
push
xchg
movsb
mov
adc
add
adc
cld
xchg
fists
mov
sti
mov
lods
adcl
mov
lds
sub
adc
mov
jb
mov
push
dec
sbb
cmp
ss
lods
xor
cld
scas
cmpsb
mov
cmc
sub
negl
and
das
pop
adcb
push
and
out
test
mov
pop
ret
jg
pop
jle
mov
outsl
mov
test
jecxz
filds
push
xor
fwait
jae
mov
iret
cld
xchg
nop
lahf
inc
loopne
push
aaa
ss
mov
mov
test
int3
fildl
aaa
cmp
outsl
xchg
mov
push
ja
test
adc
out
lds
mov
push
and
lahf
mov
stc
lods
mov
xor
jge
mov
cmp
ret
inc
insb
sbb
adc
clc
stos
orb
je
pop
fs
add
push
mov
popa
push
insb
pushf
hlt
or
lcall
or
sarb
mull
lock
popa
fidivl
aaa
insb
and
imulb
add
add
inc
pop
mov
cli
ljmp
cld
push
add
inc
or
popf
enter
push
ss
adc
es
dec
out
rorb
add
mov
scas
mov
add
in
jmp
push
sub
pop
mov
mov
ds
pop
in
imul
mov
add
addr16
sub
xlat
or
push
lods
dec
lcall
dec
gs
sarl
mov
jb
xor
mov
or
fwait
mov
mov
mov
dec
mov
jg
sarl
repnz
jb
or
fcmovb
mov
in
shll
jb
aaa
mov
pop
out
js
push
bound
cmc
push
pop
rcrb
shrb
mov
mov
mov
or
or
push
jbe
ss
pop
sbb
jle
or
cmpsl
repz
in
push
add
pop
aas
shr
test
cmp
out
or
movsb
shrb
loopne
and
mov
mov
ret
push
adc
mov
lock
shrl
push
add
dec
ljmp
out
push
mov
out
adc
cmpb
push
cmc
jo
mov
sub
gs
xchg
mov
dec
cwtl
lret
add
insb
outsl
dec
clc
add
das
xchg
mov
jmp
jmp
push
out
mov
lock
jg
sbb
iret
xchg
insb
mov
ret
movsb
fs
enter
call
mov
dec
mov
mov
mov
push
dec
mov
pop
sarl
test
cmpsl
ret
push
mov
xchg
call
adc
or
loop
adc
gs
subb
pusha
add
mov
or
mov
xchg
add
sbb
test
fsts
fisubs
inc
lods
rorl
loope
mov
dec
sub
xchg
jnp
add
pop
push
adc
cli
mov
and
xor
loopne
mov
add
push
inc
inc
jae
cmc
or
stos
sbb
pop
fdivr
out
push
inc
in
jbe
push
in
mov
fadd
cmp
int3
xorb
add
cmc
dec
fistpl
sbb
jl
jmp
outsl
roll
hlt
int3
mov
mov
sub
shlb
popf
mov
and
orl
ror
lret
sub
pop
push
and
testb
cmpsb
or
jg
pushl
hlt
dec
call
jge
xchg
cmpsl
sbb
xor
or
iret
mov
lcall
xor
enter
lret
pusha
ljmp
lret
add
and
mov
jae
pop
sbbb
jo
pushf
cmp
call
lcall
adc
enter
testl
dec
cmp
inc
js
lcall
mov
popa
jmp
mov
push
mov
or
mov
mov
clc
out
or
add
testb
les
hlt
mov
ret
lock
jo
and
ret
xchg
sbb
push
mov
scas
add
jns
dec
sbbl
xor
mov
test
ljmp
dec
lods
xchg
icebp
mov
bound
roll
xlat
add
fcomps
call
ret
pop
sbb
call
fwait
fs
mov
mov
fistpl
das
and
ss
clc
jb
sub
bound
or
pop
mov
adc
push
lods
movsb
push
test
jle
fldl
scas
ds
loop
jb
popa
add
movsb
lret
pop
lock
mov
mov
adc
xchg
pop
pop
out
and
test
cmp
in
cmpsl
pusha
ds
mov
mov
inc
lods
mov
mov
stos
lock
dec
pop
mov
sub
mov
jbe
jae
subb
or
pop
outsl
stos
xchg
stos
imul
or
pop
mov
les
push
test
fcoms
sarl
hlt
decl
movsl
pop
ss
nop
or
push
enter
or
xor
xlat
sbb
jmp
rcrl
arpl
mov
cld
mov
sti
dec
cmp
push
inc
mov
push
insb
ret
fcomps
dec
xor
adc
pop
or
jb
out
mov
sbb
lods
sbb
faddl
push
repnz
jae
nop
incl
popa
xchg
shr
push
cmpsb
mov
add
adc
xlat
push
adc
push
add
inc
adc
pop
insl
inc
push
out
hlt
push
sar
mov
jg
cwtl
clc
daa
addr16
dec
inc
filds
ljmp
mov
and
out
and
ret
aad
pop
push
lahf
cmp
sub
cmp
pop
loopne
mov
pop
mov
shrl
mov
cltd
and
cmp
add
push
jmp
inc
mov
adc
lea
fbstp
insl
shll
andb
daa
lret
test
test
scas
mov
ss
sbb
cwtl
bnd
adc
cmc
pop
xor
stos
loop
fildll
adc
pop
and
pop
xor
nop
clc
call
test
je
add
addr16
jle
jae
or
pop
push
jge
pop
in
cwtl
cmc
mov
mov
sahf
cwtl
pop
add
mov
js
add
adc
ja
push
inc
cld
push
jmp
cmp
cld
mov
pusha
pop
sbb
and
data16
mull
inc
sahf
addl
xchg
jbe
clc
lcall
lret
lret
or
add
repz
inc
mov
clc
hlt
enter
loop
cmpsl
and
add
dec
add
adc
or
call
insb
sarb
hlt
in
xchg
hlt
lea
push
fwait
and
pop
mov
sbb
ret
sub
lcall
stos
push
in
push
mov
pushf
or
mov
jmp
push
leave
fisttpll
test
rorb
cmp
mov
cli
out
jne
adc
sarl
cmc
pop
outsb
or
or
hlt
pusha
mov
adc
jecxz
xor
cmp
cli
xchg
enter
in
test
push
xor
adc
jno
mov
add
into
sub
hlt
xchg
pushw
pop
push
and
popa
push
cld
in
fildl
stos
mov
mov
test
sbb
pop
xchg
mov
sarb
mov
lret
jns
or
nop
push
fwait
daa
add
movsb
test
int
ret
mov
lock
add
jg
fbstp
xor
ficomps
js
flds
jno
sbb
dec
ds
sub
xchg
xchg
mov
lods
cli
incl
in
adc
sti
jns
daa
imul
adc
xchg
and
adc
test
ss
mov
imul
mov
jns
push
push
fcoml
mov
adc
jp
ficomps
dec
movb
lock
lret
shrb
jbe
aam
iret
mov
or
and
sbb
jne
mov
push
jp
adc
sbb
and
sbb
push
stos
add
pop
call
call
sub
fcomi
sbb
and
or
xor
inc
push
push
mov
inc
jmp
call
adc
cmp
popa
add
mov
sbb
outsl
fcmovnbe
mov
dec
ret
xor
jnp
mov
or
decl
sti
inc
add
flds
push
stos
aas
mov
mov
imulb
push
repnz
cwtl
jge
stos
mov
in
mov
cs
icebp
loopne
or
les
cs
mov
cld
out
mov
pop
push
cmp
jecxz
cmp
imul
stos
subb
call
cmp
rol
imul
jb
lahf
fstpl
clc
incl
mov
push
sti
or
ret
lcall
ljmp
decl
xor
add
stos
mov
call
xchg
shll
rcr
lds
mov
mov
cld
sbb
jb
push
cmpsb
adc
lds
iret
add
sub
and
popa
ror
rclb
sahf
push
mov
jno
test
jns
jp
cmp
push
cli
inc
fwait
xorb
push
pop
aam
jae
orb
inc
add
stos
aas
inc
sub
fsubs
pop
data16
adc
movsl
aaa
ljmp
cmp
pusha
cltd
mov
pop
cli
jg
mov
pop
mov
jo
ss
movb
insl
xor
mov
shrl
scas
aas
cld
fnstsw
push
test
cmp
ret
dec
inc
call
mov
or
add
push
pop
or
in
jmp
dec
mov
mov
mov
pop
pop
inc
lods
xorb
ret
icebp
hlt
insl
mov
push
loopne
add
aaa
cmpb
add
loopne
mov
lret
pop
inc
add
hlt
aaa
sbb
stc
dec
scas
mov
mov
cmpb
outsb
xor
data16
movsb
sahf
je
pop
repz
fs
pop
daa
test
cltd
in
mov
push
insl
or
xor
lods
movsl
cld
mov
test
push
jmp
mov
test
lahf
imul
cld
mov
pop
lods
mov
xor
jge
mov
les
add
jg
int3
test
mov
fldcw
inc
mov
shll
out
loope
in
sub
loopne
pop
mov
int3
xor
jg
push
ret
push
and
cmp
dec
clc
pop
ret
xor
bound
loopne
jb
adc
movl
dec
pop
mov
jo
repnz
hlt
pop
pop
call
pop
xchg
enter
sbb
mov
or
add
in
push
dec
jg
or
jp
or
jg
jo
inc
cmp
test
jb
cwtl
mov
jnp
stos
lahf
insl
hlt
jne
mov
jb
push
and
or
pop
aas
pop
and
push
push
push
loopne
aad
lods
out
loop
icebp
shrb
jl
adc
iret
mov
cli
sbb
adc
repz
cmp
stos
scas
mov
clc
mov
adc
je
and
aam
dec
or
clc
ss
jle
push
mov
pop
repnz
push
push
out
pop
xchg
cli
mov
aad
mov
sahf
aaa
inc
cmp
leave
and
add
clc
in
jmp
xchg
mov
popa
js
xchg
in
cmp
inc
leave
pop
mov
xchg
cld
adc
lea
or
fcomip
cmp
jle
in
sbb
sbb
xchg
mov
out
test
xlat
inc
gs
pusha
mov
orb
add
pop
lock
sarl
into
fistl
adc
gs
dec
shl
sub
ja
dec
in
cmp
pusha
pop
int3
push
cwtl
bound
jb
dec
testb
fisubl
cmp
mov
mov
dec
imul
mov
xchg
add
in
shlb
decb
dec
faddl
and
mov
pop
lock
loopne
bound
loop
insb
idiv
sbb
mov
repz
dec
cmpsl
out
mov
stc
mov
xchg
pop
mov
jg
stos
add
clc
inc
lret
mov
sbb
sbb
add
mov
jbe
jg
add
mov
ljmp
cs
and
inc
pop
sahf
dec
sahf
jle
mov
fistpll
loopne
adc
in
and
test
roll
out
clc
jns
cmp
cmp
add
mov
fcom
push
icebp
pop
add
mov
data16
cmpb
inc
rcrb
sahf
xor
mov
cld
jmp
cld
lret
add
testb
enter
stos
xor
fbld
js
and
mov
clc
or
sbb
arpl
pop
std
xor
pop
pop
call
cmpsb
or
insb
or
mov
or
mov
ss
stc
mov
xor
negb
cmp
xchg
ficomps
rolb
jno
out
jg
lock
lret
test
cmpsb
and
lret
xor
loope
ror
cmpsb
and
jo
imul
int3
pushl
xor
or
add
arpl
inc
ret
stos
in
call
out
movsb
or
cmp
hlt
pusha
or
dec
push
neg
fidivrl
ss
jb
fs
jecxz
loop
mov
or
test
cmp
lcall
dec
insb
cmp
add
mov
add
sbbl
inc
aad
mov
push
mov
pop
mov
enter
aam
or
sub
movsl
or
aad
cmp
xchg
push
or
sub
jno
daa
mov
mov
sub
jo
add
outsb
cmp
lods
mov
cmp
xor
push
lock
xor
jle
mov
mov
add
popa
xchg
outsl
add
shrb
sbb
sub
dec
mov
shll
cld
dec
dec
aad
shl
or
push
lods
add
outsl
cli
xchg
stc
and
and
lahf
mov
add
fld
dec
pop
push
cmp
xlat
cmp
push
idiv
xchg
loop
add
inc
ja
bound
cmp
jg
je
dec
sbbb
push
in
inc
andb
cmpsb
mov
push
orl
add
pop
sub
outsb
jne
pop
out
push
int3
stos
or
inc
sbb
shll
jb
mov
mov
sbb
call
inc
mov
push
cmp
scas
or
mov
add
push
lcall
mov
inc
addl
jecxz
test
add
sub
sub
pmaxsw
push
cmpl
lcall
push
adc
in
cmp
scas
clc
pop
je
sbb
add
pop
cmp
push
sub
call
mov
xor
pushf
gs
fcomps
or
data16
dec
outsl
xor
rclb
insb
ret
out
into
mov
ljmp
clc
mov
mov
cmpsb
in
mov
jp
mov
aaa
inc
push
int3
jnp
out
add
fwait
sbb
jbe
jg
jbe
pop
test
add
lcall
xchg
sbb
pop
push
mov
pop
mov
int3
add
std
lret
idivl
loop
popa
lock
cli
out
add
lea
pop
mov
and
cmp
loop
sbb
loope
add
rolb
clc
push
inc
cmp
jp
cmpsb
lods
loope
sbb
jp
pop
push
sbb
inc
in
leave
bound
and
push
add
inc
es
mov
aad
scas
pushf
rorb
adc
outsb
lea
dec
pxor
mov
and
das
rcl
push
mov
dec
insl
mov
add
clc
movsb
mov
into
pop
inc
aam
push
lods
in
idiv
xlat
dec
rclb
xchg
mov
addr16
fbstp
sbb
jb
xchg
popa
xchg
aam
jnp
das
or
mov
pop
emms
xor
jmp
lods
push
loope
add
jb
mov
insb
enter
jle
test
mov
nop
idiv
pop
jl
jecxz
mov
pop
sub
jl
sub
aad
cmp
pushf
cmp
mov
in
and
out
mov
test
or
adc
xchg
jmp
sbb
cmpsb
ret
loopne
test
pop
pushf
enter
stos
sbb
sub
int
pop
pusha
jge
push
pop
add
xchg
pusha
xchg
andl
decl
and
and
enter
dec
mov
fneni(8087
les
in
push
pop
adc
cld
lcall
cmp
xchg
jae
push
inc
les
adc
mov
adc
insb
js
lock
mov
cmpl
mov
xor
scas
mov
movsl
jbe
insb
test
add
xsaves
or
mov
xchg
out
or
and
and
ss
loop
mov
push
jnp
xor
testb
mov
arpl
add
hlt
sbb
jp
mov
and
mov
push
xchg
lock
adc
inc
cld
or
pop
inc
loopne
clc
aad
fsubrp
xor
leave
in
adc
push
mov
cs
das
shl
cmp
jnp
cld
mov
add
incl
dec
mov
pop
xchg
and
dec
test
mov
mov
mov
adc
in
xchg
push
pop
lret
in
xchg
loope
in
sbb
icebp
in
xor
dec
add
and
mov
loopne
sbb
push
sti
stos
in
orl
mov
xchg
cmp
test
xchg
addb
cmpsl
jmp
mov
mov
mov
jle
fldl
jmpw
pop
cs
pop
jmp
jecxz
fisubs
pop
incl
inc
pusha
and
sar
decl
filds
jo
das
js
iret
out
dec
inc
push
cltd
cs
pop
sub
insb
dec
ljmp
mov
jecxz
shrb
out
mov
lock
loop
jne
mov
pop
push
push
sbb
add
js
lock
daa
cwtl
out
or
mov
jg
mov
repnz
rcrb
sbb
sti
or
ret
xor
cmp
mov
sbb
aas
sbb
adc
repnz
xlat
or
aas
ljmp
adc
js
mov
cmp
mov
push
mov
mov
cmp
cmc
in
mov
and
inc
fwait
lods
mov
test
es
add
lret
shll
fdivrs
inc
and
and
add
xor
mov
pop
in
cmova
fsubrl
cs
mov
vmovhps
fidivrs
mov
mov
push
jl
jns
mov
inc
test
fdivr
mov
xor
dec
repnz
mov
rclb
js
inc
or
test
popa
add
adc
fidivrs
and
xorb
and
dec
mov
adc
jp
call
mov
sub
fcomip
jmp
mov
and
add
shll
or
hlt
sti
jg
lock
mov
sbb
rcll
pop
cmp
adc
outsl
jae
sub
ljmp
jg
inc
push
xor
int
jbe
add
pop
adc
xor
clc
imul
movsb
scas
sub
leave
xchg
jnp
mov
mov
mov
jo
lods
incb
ljmp
or
or
aam
push
pusha
fcomip
pop
scas
xchg
inc
stos
leave
xlat
push
outsb
repz
or
lods
xchg
add
jg
mov
sbb
icebp
jg
mov
sahf
dec
imul
jmp
test
mov
fimuls
xchg
pop
test
mov
mov
cmp
push
std
mov
sbb
out
dec
lahf
pop
xchg
dec
sbb
mov
mov
adc
xchg
add
xor
ljmp
xchg
push
mov
movsb
cmp
out
dec
int3
addr16
rol
pop
ret
sub
push
and
or
pusha
sub
cmp
push
mov
mov
in
inc
mov
ret
add
out
gs
iret
sahf
lds
aas
cmp
sbb
jg
push
add
mov
lcall
loopne
lea
test
push
movsb
or
pop
jl
fnsave
gs
dec
mov
mov
jp
pop
or
icebp
mov
test
jl
leave
fstpt
xlat
and
mov
push
decl
push
clc
inc
idiv
xor
and
mov
pop
iret
testb
add
jbe
jle
mov
pop
shrl
lahf
xchg
call
cmp
adcb
cmp
push
sarl
movsb
cmp
and
dec
mov
fmulp
lahf
adc
insl
mov
jnp
mov
stos
mov
popf
push
add
mov
inc
xor
add
mov
push
ss
add
ss
dec
push
insb
xchg
pop
cmp
aaa
mov
pushl
mov
sub
pop
xlat
xchg
dec
inc
dec
idiv
scas
popa
rcrb
sbb
lock
jo
rolb
rcr
ret
call
add
stc
push
inc
pop
pop
icebp
fcmovnu
je
rcll
addr16
cmc
pop
aad
push
xchg
add
mov
or
inc
and
sbb
jmp
notl
pop
or
sub
add
loop
add
dec
loopne
decl
aad
push
iret
out
in
jbe
add
mov
jo
mov
fdivrl
or
rcll
inc
call
push
sbbb
ret
ds
jno
mov
cld
inc
pushf
mov
loopne
test
and
cs
jge
dec
add
dec
outsb
and
cwtl
push
and
cmp
scas
xor
dec
jae
rcr
pop
imul
xor
iret
jg
adc
mov
aaa
mov
cld
lcall
inc
cmc
push
jnp
ret
push
in
add
mov
outsl
fsubrl
pop
sbb
xchg
or
push
mov
lock
clc
in
mov
mov
es
add
pop
loopne
push
icebp
or
adc
fwait
cs
ja
push
filds
mov
in
pop
or
cs
push
jns
push
dec
adc
dec
clc
rclb
mov
and
pop
mov
mov
mov
pusha
repnz
mov
jge
subl
loop
push
je
repz
das
clc
jg
subl
xlat
fistl
rorb
ret
mov
pop
test
mov
fmulp
push
ss
push
lds
xor
pop
adcl
lock
aas
mov
out
and
aad
lods
loopne
fs
xor
mov
pop
and
mov
xor
add
imul
mov
cld
fstl
pusha
push
sarl
movsl
mov
in
xor
xor
fmul
lods
sahf
mov
cmp
jb
dec
sahf
lcall
xchg
hlt
mov
jno
adc
inc
mov
loop
mov
lods
push
or
mov
sbb
or
in
xchg
out
aam
xor
pop
sub
mov
test
repnz
xor
cmp
mov
add
ss
xchg
incl
sub
and
adc
pushf
sub
fadd
out
pop
cmc
jo
push
mov
mov
dec
daa
and
out
and
fs
fiadds
inc
iret
add
sub
and
ja
int3
shlb
pop
mov
add
cmpb
ljmp
sbb
insb
add
or
mov
or
aaa
xor
cli
pop
aad
sarb
pusha
jbe
add
out
js
mov
pop
decb
rorl
mov
dec
mov
lret
pop
push
dec
lahf
jecxz
add
mov
mov
xor
scas
andb
mov
icebp
fisubs
incl
fildl
mov
and
push
jnp
mov
or
int
lcall
push
mov
adc
mov
jns
call
ret
outsb
movsb
sbb
mov
or
mov
sbb
scas
pop
out
and
in
int
cli
mov
fsubrs
sbb
incl
push
je
mov
stos
sarl
loop
jg
fmuls
and
sub
es
aas
mov
les
push
adcl
das
mov
jecxz
cs
pushf
sub
adc
push
inc
xor
xor
fiaddl
and
int
xchg
add
ret
in
imul
arpl
insl
mov
push
pop
and
jo
lock
mov
out
mov
sbb
cmp
or
cmp
movsb
std
jno
dec
inc
mov
sbb
pop
jle
cmpl
fsubrl
mov
lcall
sbb
and
in
fcoml
push
or
xor
add
xchg
sahf
mov
sub
mov
dec
inc
sarl
call
jb
or
xlat
out
out
into
dec
aaa
add
cmp
or
dec
jg
cmp
mov
push
mov
add
add
sbb
movsl
xor
rcl
dec
mov
das
inc
aaa
push
add
xchg
aas
add
push
loopne
call
push
stos
mov
cltd
push
xor
mov
femms
xchg
inc
mov
dec
stos
xor
mov
adc
daa
repnz
push
pop
cli
ss
fsubl
sbb
sbb
xchg
xchg
icebp
push
insl
ja
jo
pop
dec
pop
ljmp
pop
jmp
and
scas
push
pop
inc
ret
shll
fstpt
jb
jp
adc
add
mov
add
mov
imul
add
das
data16
pop
jl
sbb
rcrb
sahf
xchg
je
sub
test
dec
daa
xor
mov
stc
or
popa
xchg
pop
xor
ret
les
sarb
inc
rcll
ja
pop
aad
push
cmp
mov
dec
lock
jge
jmp
fbld
cmp
loop
lds
xchg
in
imul
fisttps
pop
mov
lods
xor
xor
xor
add
and
ss
xchg
test
paddd
mov
jl
dec
lcall
xor
js
dec
fwait
jl
daa
adc
add
mov
inc
sti
push
inc
popf
adcb
stos
ffree
ljmp
push
inc
mov
add
push
hlt
jno
lock
jns
aas
sbb
push
out
shl
out
dec
and
sbb
mov
or
xor
pop
nop
mov
xchg
aad
xor
ret
rcrl
or
lcall
shll
adc
mov
imul
xor
cmp
out
xor
outsb
mov
jb
push
jle
and
cmp
fldl
das
mov
daa
lret
push
fsub
sbb
push
inc
mov
jecxz
ret
add
mov
movsl
enter
shl
clc
push
std
dec
push
add
cli
ja
negl
push
fsubr
pop
pop
shlb
inc
je
fldl
mov
das
ljmp
cli
push
fcoml
popf
add
hlt
or
cld
ud0
lret
dec
jmp
loop
cmp
pushf
test
in
daa
pop
fs
adc
pusha
xor
jne
xchg
adc
sub
mov
dec
push
dec
rorb
cmc
outsl
clc
inc
sbbb
cmp
jo
mov
mov
sarl
cmp
arpl
cmpsl
inc
mov
pop
mov
jl
xor
inc
and
fwait
inc
mov
lret
adc
mov
push
inc
mov
aaa
inc
loopne
jae
and
sub
pop
test
icebp
push
inc
sti
cmp
js
imul
adc
sub
scas
cwtl
pop
mov
xchg
loopne
scas
xchg
pop
fadd
add
bound
dec
pop
nop
and
add
adc
aaa
cld
call
rclb
sub
or
bound
movsb
lret
mov
xchg
cmp
push
xchg
xor
cltd
stos
jmp
jecxz
jo
pusha
repz
dec
daa
data16
aad
faddl
insb
push
and
mov
mov
rolb
dec
lret
push
xor
mov
or
adc
mov
sbb
push
ret
or
inc
xchg
cwtl
xchg
sbb
mov
inc
xchg
call
push
aaa
shrl
xorb
data16
adc
inc
xlat
call
hlt
jge
mov
jae
sub
dec
mov
mov
mov
sti
loop
push
rcl
das
mov
in
cltd
add
or
shl
sti
add
sbb
addb
xchg
stos
pop
or
push
jbe
cmc
dec
stos
cmpl
add
jbe
pop
adc
jg
loop
pop
popa
ret
add
test
mov
or
cli
jae
shll
leave
lea
jle,pt
lret
cmp
rcrl
jmp
popa
inc
mov
mov
hlt
cmpsb
sub
jecxz
cli
pop
fs
and
hlt
popf
inc
scas
loopne
mov
stos
out
clc
mov
fadds
or
cmp
notb
jnp
push
pop
add
mov
cmovo
adc
es
jno
sub
mov
das
shlb
cmp
cmp
xor
mov
mov
push
jb
add
sbb
shl
mov
xor
inc
dec
leave
icebp
jecxz
shlb
push
cs
movsb
fcmovnbe
xor
cmpsb
mov
and
or
jnp
push
jge
dec
scas
stos
inc
fisttpll
clc
pop
or
xchg
cwtl
fisubrl
add
iret
mov
pop
mov
fs
pushl
shl
test
cmc
ja
addb
mov
sbb
scas
in
clc
test
mov
data16
cs
cmp
push
stos
sbb
test
mov
push
push
xchg
leave
fidivrl
rcr
dec
push
movsb
fisubrl
cltd
sbb
push
sub
push
jge
loopne
sub
call
test
push
enter
and
aam
addr16
mov
xorl
cld
sbb
mov
sbb
or
dec
pushf
jge
paddusb
movd
cwtl
fst
xor
cld
lods
mov
lock
mov
push
cmp
ds
shlb
ja
mov
adc
fwait
add
mov
mov
xlat
cmp
movsb
push
xlat
call
aam
sub
cmp
fs
je
mov
sub
mov
cli
sub
sub
mov
loope
jp
or
pop
mov
fs
jo
rorb
pop
arpl
add
loop
gs
fdiv
push
cld
xchg
push
pop
jle
test
dec
testb
sub
mov
test
xor
xor
in
mov
pop
mov
sub
cmp
sub
loop
jle
or
std
pop
adcb
lea
add
das
mov
xor
data16
jg
add
pop
mov
add
scas
scas
mov
mov
push
in
pop
cmc
call
xchg
sbb
lock
mov
mov
adc
dec
int3
push
pop
mov
fs
not
test
cmc
xor
movsl
ljmp
jle
add
mov
xor
shr
das
test
mov
int3
pop
pop
rorb
and
outsb
cld
add
addr16
sub
pop
mov
xchg
adc
loop
push
jg
testb
jmp
push
jmp
xchg
lock
xchg
dec
mov
mov
cmp
decl
push
push
rol
inc
out
mov
pop
das
clc
or
cld
cmp
mov
xchg
jae
push
cmpsb
mov
add
lock
rolb
fmul
pusha
imul
stc
pop
add
roll
sub
sub
ds
push
pop
pop
lock
fistpll
xorb
call
ret
in
incl
movsl
push
mov
js
loopne
pop
mov
jp
cld
pop
hlt
es
loopne
repz
hlt
pop
loop
pop
push
jno
mov
decl
mov
bound
adc
orb
jle
add
rclb
pop
cmc
imul
fstpt
mov
push
cmp
clc
pop
sub
push
sbb
iret
pushf
push
leave
xchg
movsl
xchg
out
bound
cld
mov
cli
jge
mov
cmpsb
and
mov
xchg
loop
and
mov
inc
out
xor
jno
hlt
fisubl
add
inc
out
or
or
mov
jne
or
xor
in
popf
jg
nop
out
les
jp
sbb
adc
jo
addr16
xchg
aam
fwait
and
add
out
repz
pop
loope
mov
inc
test
lcall
pop
imul
repnz
cmc
add
dec
insl
mov
lds
and
aam
pop
shlb
xor
insb
out
jb
inc
push
sub
mov
jp
mov
and
aaa
mov
fs
push
jmp
loop
decl
xchg
ds
std
popa
and
cs
mov
loope
cwtl
add
mov
jecxz
cmp
mov
xchg
loopne
add
xchg
pop
mov
jecxz
scas
push
insb
shlb
pop
hlt
pushl
stos
add
mov
push
or
ret
jo
aaa
xor
jg
icebp
ss
adc
xchg
push
mov
add
pop
mov
sbb
inc
decl
clc
test
aaa
dec
pop
mov
das
mov
adc
cmp
pop
mov
hlt
push
aas
and
fcompl
stos
sbb
sbb
add
pop
loopne
incl
lcall
mov
or
cli
xor
push
icebp
std
or
outsb
push
lahf
ss
dec
hlt
mov
jmp
cmp
out
or
add
mov
cmp
and
jnp
ret
mov
and
or
mov
push
sbb
clc
pop
mov
lret
ss
stc
dec
aam
push
lods
add
bound
cld
mov
mov
or
xchg
jbe
sbb
xor
push
xor
aam
add
and
std
sbb
loop
bound
lret
cmc
cmp
shlb
ss
xchg
dec
repz
clc
adcb
idiv
int3
cmp
lds
pop
xor
push
icebp
arpl
leave
mov
mov
test
xor
cmp
fdivs
sub
das
fdivrl
insb
aas
push
cmp
cld
mov
ljmp
cmpsb
je
add
stos
and
daa
loop
adc
and
fldcw
push
sub
and
sbb
cmp
fs
pusha
movsb
lret
in
sub
clc
aad
inc
testl
fnsetpm(287
jno
in
mov
lcall
insl
mov
dec
mov
sti
add
movsl
adc
aaa
mov
or
daa
popf
xor
ljmp
call
add
push
pop
push
jg
mov
mov
jbe
outsb
sbb
adcb
pop
loope
and
adc
push
je
fisubrs
xchg
mov
lock
ss
sbb
and
jl
push
stos
jno
add
or
pushf
in
rcl
in
cmp
loop
or
pushl
push
rcll
cwtl
or
or
mov
popf
mov
clc
cmp
loopne
popa
clc
mov
mov
pop
shrb
movsb
inc
mov
das
jb
dec
es
pusha
lcall
scas
bnd
inc
jmp
lock
add
inc
or
pusha
lods
loop
lods
inc
xchg
test
popl
mov
xchg
or
loopne
mov
jbe
js
lds
push
pusha
adc
or
sti
mov
jb
lods
mov
jp
or
pop
idivb
adc
vphaddubd
or
loopne
mov
jo
push
iret
add
cmc
jae
mov
es
adc
push
sar
xor
fdivrl
sti
mov
clc
push
xor
aaa
fstl
pop
mov
int3
lcall
dec
inc
aad
add
cld
test
lret
mov
outsl
clc
inc
inc
or
loope
push
adc
add
pop
shrb
adc
ja
xchg
pop
pusha
pop
in
rorb
js
jo
or
dec
dec
cld
psubd
adc
cmp
mov
add
fistpl
xor
ss
fistpll
xchg
inc
mov
dec
xor
xlat
fwait
mov
or
xchg
pop
inc
xor
dec
or
clc
ljmp
fdivp
cwtl
and
mov
das
mov
sub
jb
push
decb
lock
xor
jl
mov
stos
scas
and
inc
out
adc
pop
add
out
test
lret
mov
jecxz
clc
movsl
push
lock
gs
stos
clc
mov
cld
incl
inc
and
lret
adc
aam
sbb
sbb
pop
xchg
ljmp
test
fstps
and
ja
cld
mov
add
mov
add
cs
out
scas
fcoml
mov
cmovns
in
dec
les
mov
push
loope
mov
dec
add
mov
out
aas
jp
push
cltd
pop
cs
sbb
or
dec
sub
xchg
fidivs
mov
dec
fidivs
mov
jbe
push
pusha
dec
jg
mov
or
fldt
stos
call
fldcw
mov
insl
scas
aad
mov
scas
aaa
test
popa
insb
add
inc
mov
adc
jecxz
fisubrl
fiaddl
sub
add
es
mov
out
cmc
and
adc
cwtl
jp
fcomp
jp
mov
outsl
sub
jmp
push
lods
cld
push
lahf
xchg
jg
cli
shrl
mov
add
jg
mov
mov
test
lahf
loope
mov
popa
subl
xor
ret
or
inc
lea
push
lock
fcomip
add
sbb
dec
and
jp
fmul
push
inc
testl
ss
stos
dec
fs
jg
filds
xor
dec
mov
fdivp
pusha
mov
mov
jge
sub
andb
das
cli
ss
dec
out
in
neg
sbb
loop
and
ret
mov
xchg
fsts
add
std
aaa
xchg
lcall
fwait
mov
adc
adcb
adc
push
loopne
fdivl
mov
lea
mov
mov
loop
add
adc
mov
adc
testb
or
inc
popf
ret
fwait
aas
mov
pop
pop
icebp
adc
cs
sub
xchg
and
arpl
je
jo
cmp
mov
rclb
mov
mov
dec
std
mov
rcr
outsl
dec
pop
xlat
jg
andl
imul
pop
mov
add
inc
push
xorl
add
sti
mov
sub
jno
out
sti
and
ret
mov
or
pop
adc
cli
sbb
mov
xlat
inc
jp
sbb
pusha
mulb
pop
add
adc
and
inc
push
push
loopne
popf
test
out
orl
stc
fcomps
adc
test
pop
sub
into
push
mov
or
into
xlat
xor
mov
push
pop
push
jo
std
add
mov
push
in
xor
test
cmc
push
data16
adc
fisubrs
cli
jp
push
add
sarb
ja
ljmp
insb
sbb
mov
xchg
loopne
sbb
inc
add
xor
sbb
pop
icebp
sub
push
push
add
jp
loope
jne
subl
adc
dec
push
xchg
out
fmuls
fldcw
jbe
shl
mov
add
mov
fs
into
sub
scas
inc
push
adc
dec
push
mov
test
pushl
jge
ja
add
add
and
xor
xchg
jp
aam
sarb
xchg
je
out
call
xor
mov
int3
cwtl
mov
add
lods
push
in
ljmp
in
pop
pop
adc
icebp
lds
and
sbbb
js
push
cld
pop
push
call
rolb
into
addr16
xor
or
mov
jle
pop
fbstp
or
mov
inc
stos
dec
xor
push
dec
sub
fcmovb
mov
add
cmp
xchg
push
mov
ret
adc
sbb
push
repnz
xchg
xchg
in
pop
pop
fistps
add
add
fisttps
push
mov
or
lods
fstpt
filds
ja
push
repz
and
add
addb
pop
mov
push
cmpsl
or
xchg
scas
lods
cmp
loopne
ja
fildl
mov
sub
lods
inc
mov
cs
enter
mov
xchg
inc
aam
dec
insb
jns
xchg
jle
pop
dec
mov
mov
loop
or
subb
sahf
jb
lods
cld
pop
idivb
roll
mov
adc
cld
in
mov
push
push
aaa
mov
jne
sub
mov
gs
loopne
inc
je
ret
scas
stos
xchg
movsl
push
rcrb
sbb
loop
out
aas
cli
aam
dec
cmp
leave
nop
mov
loope
insl
push
sbb
test
xchg
adc
pop
cmp
inc
and
push
stos
mov
sahf
cmpb
fistl
cmc
mov
xor
test
push
dec
push
sub
roll
pop
push
aad
push
ret
std
xchg
ret
rcr
aam
and
loope
jp
imulb
add
or
loope
push
incb
fiaddl
cmp
aas
aaa
adc
jno
inc
jl
mov
pop
xchg
sti
or
fnstcw
test
cmp
sbb
mov
push
mov
mov
test
movsb
test
imul
mov
pop
push
pop
pusha
repz
and
pop
lock
das
or
ds
xchg
bound
out
adc
jo
out
mov
adc
mov
add
jb
movhps
sub
mov
jmp
clc
jl
sti
mov
sbb
pop
pop
and
leave
pop
adc
loopne
cld
decl
xor
cmp
rolb
fldlg2
pop
add
ljmp
popa
jle
mov
xchg
add
cmpsl
xchg
and
sbb
imul
aad
rolb
cld
or
iret
mov
add
incl
xor
js
stos
movsb
in
int
mov
or
push
adc
sti
xor
adc
xlat
decl
inc
insb
mov
adc
or
mov
ret
sbb
mov
sbb
leave
mov
repz
pop
pop
cmpsl
xchg
loope
lret
pop
push
mov
jg
fucomip
icebp
jle,pn
movsl
fldl
cs
rorl
pop
andb
scas
outsl
fildll
jnp
push
xchg
sub
dec
mov
jno
aaa
cmpsl
jp
ss
ds
xchg
jp
gs
sbb
mov
pusha
dec
push
add
adc
mov
stc
inc
mov
int3
cmp
cmpsl
lcall
mov
xor
and
dec
fs
jl
cmp
or
mov
sbb
mov
jle
pop
cld
jg
pop
inc
jp
lret
mov
out
lahf
mov
dec
mov
pop
mov
cli
icebp
mov
inc
adc
mov
nopl
cld
sbb
mov
cmpb
lea
imul
imul
sub
add
shlb
loop
push
xchg
or
mov
add
movb
dec
ja
sub
push
into
push
pushf
cmpb
enter
call
xor
int3
sbbb
test
and
movl
repnz
jg
sbb
mov
mov
xchg
fs
pop
and
fdiv
sbb
stos
and
jne
lods
andl
jmp
cmp
addr16
add
jecxz
adc
or
or
cli
adc
add
sbb
test
sub
mov
xor
jno
ljmp
sbbb
arpl
jb
mov
addb
add
inc
popl
jae
sti
and
int3
push
mov
add
mov
lcall
or
mov
es
out
sahf
fisubrs
adc
das
jmp
add
ss
cmpsl
jb
inc
shl
call
rolb
inc
mov
loopne
sbb
cld
sbb
lret
pushf
inc
or
fwait
ljmp
enter
fwait
xchg
add
pop
outsl
jge
push
and
lcall
mov
nop
js
ret
sti
decl
push
jae
data16
sub
sub
scas
pop
jg
push
aad
lea
outsb
pop
addr16
sbbl
mov
and
fmulp
or
add
iret
cmp
xor
xlat
shlb
push
mov
push
out
jns
fsubrl
stc
arpl
cmc
add
mov
mov
mov
sti
cs
clc
incl
pusha
mov
cmp
mov
inc
push
stos
call
cmp
sbb
adc
std
roll
in
clc
out
pushf
and
add
lods
loopne
lods
ret
xchg
fisttpl
cmp
int3
incb
pop
mov
out
and
or
jo
jg
adc
stc
adc
fists
test
inc
cwtl
push
xor
fists
inc
movb
in
and
push
arpl
fs
push
add
insl
decl
pop
push
mov
dec
mov
mov
mov
jo
std
in
mov
push
mov
aas
sub
pop
cmpsb
in
inc
icebp
push
cld
pop
insb
xchg
imul
insb
add
outsl
lahf
lock
dec
fstpl
mov
lea
or
movsl
call
mov
aad
jl
inc
movsb
clc
cmp
or
loop
arpl
rol
loop
mov
pop
sbb
insb
test
push
sub
insb
cmpsb
add
sahf
pop
dec
add
outsl
sub
fisubl
jge
cmp
outsb
mov
add
dec
cmp
sbb
insl
jle
sub
iret
dec
ficoml
pusha
dec
sbb
lret
fcomps
nop
xor
jo
jo
pop
sub
mov
adc
int3
fs
aam
fsub
push
push
or
or
stc
clc
pop
jae
inc
imul
cmp
mov
mov
xchg
cli
in
lock
scas
scas
popl
push
and
mov
mov
out
aas
pop
jne
mov
in
pop
dec
out
adc
add
call
insl
sbb
mov
je
ret
mov
pop
or
pusha
in
mov
push
icebp
jg
xchg
and
mov
test
adc
push
test
fwait
push
mov
adc
decl
stos
jg
dec
out
pusha
push
push
in
ret
mov
adc
lahf
icebp
jb
add
fcoms
pop
popa
push
xchg
test
lret
sub
mov
push
sbb
inc
sub
push
jge
pushl
fnclex
jne
adc
push
decb
mov
and
mov
cmp
add
scas
add
mov
or
popa
add
xlat
enter
add
inc
mov
push
mov
test
clc
and
push
fidivs
dec
mov
add
mov
or
sub
jbe
xor
fisubrl
or
je
pusha
dec
pop
jg
mov
sti
mov
cmpsb
lock
mov
cli
testb
sub
test
jbe
roll
imul
xchg
cmpsl
push
mov
or
or
sub
repz
mov
mov
cmp
pop
imul
daa
push
insb
js
xchg
mov
mov
loopne
std
or
push
popl
mov
xchg
mov
push
into
cld
sbb
lds
inc
xchg
cs
pop
sbb
mov
mov
fsubrs
or
mov
js
dec
and
cmp
ficomps
outsb
and
popa
ret
pop
cmpb
jp
pop
and
out
mov
movsb
out
out
jne
xor
dec
shlb
clc
xor
adc
pop
jl
stos
add
cmpsl
push
out
jecxz
pusha
in
push
adc
add
xchg
push
negl
popf
daa
scas
lahf
ficomps
cmp
xchg
andl
mov
ret
sbb
push
add
popa
in
sub
inc
push
pop
push
popf
ss
pop
inc
cs
movsl
dec
in
pop
sub
jmp
sbb
ljmp
jo
mov
sbb
out
push
stos
sahf
pop
in
add
sbb
inc
jecxz
outsb
sbb
xchg
sbb
outsl
cmpsb
scas
lock
ss
movsl
xor
cmpsb
and
outsl
leave
mov
xchg
fisubl
aaa
aad
scas
sub
cld
call
test
sbb
call
mov
mov
sbb
jle
lret
fildll
dec
aad
sbb
sub
stos
pshufw
xchg
fsubrs
jl
or
mov
ret
mov
mov
adc
lcall
cmp
out
jo
adc
aad
push
and
and
inc
push
imul
sbb
xchg
lret
inc
out
fs
push
push
push
pusha
inc
aad
push
scas
add
push
clc
fdivl
out
inc
push
lods
sbb
bndstx
mov
shr
jg
xchg
outsb
js
call
out
lock
mov
outsb
xor
icebp
mov
and
pop
mov
adc
push
clc
pop
push
inc
mov
imul
mov
cmp
inc
xchg
into
add
arpl
mov
mov
mov
std
loope
xor
lcall
sahf
inc
mov
push
push
xlat
inc
dec
mov
jne
mov
shlb
mov
lret
hlt
jg
cs
test
out
cmp
inc
out
push
cmc
mov
cld
add
mov
in
mov
cli
dec
std
aam
mov
popa
push
inc
cmpsb
mov
or
sbb
data16
clc
fwait
ds
sbb
sahf
jo
cmpsl
mov
mov
loop
dec
test
add
cld
mov
sahf
add
mov
test
lcall
ljmp
add
adc
adc
push
test
dec
xchg
cmpsb
data16
xchg
mov
adc
fcmovbe
scas
dec
mov
rcrb
jb
or
jno
mov
fbstp
js
test
roll
pop
or
xchg
out
xor
adc
mov
lret
mov
dec
cmp
inc
negl
inc
add
push
negb
adc
pop
imul
xor
data16
clc
mov
pushf
fstpt
jge
mov
jge
push
push
mov
mov
xor
cwtl
mov
loopne
mov
add
rorb
jle
loop
popa
xchg
add
orb
inc
cmpsb
cli
xchg
ds
mov
push
cld
jmp
xor
ret
adcb
add
ret
sbb
push
orb
mov
xchg
jmp
aad
bound
outsb
or
lcall
mov
mov
repz
mov
add
ficoml
sahf
lods
int
pop
loop
cmp
ret
stos
and
or
jg
push
inc
les
ss
inc
subb
mov
rcrl
lock
stc
xchg
aad
or
inc
mov
cmpsb
int3
lcall
inc
add
mov
insl
fists
jmp
aas
sub
push
icebp
or
into
decb
lcall
ljmp
jecxz
lea
pop
or
addl
shll
test
xor
push
push
mov
aas
push
in
movsl
adc
aaa
incb
inc
push
or
in
cli
out
cwtl
bswap
filds
loop
add
adc
clc
push
mov
pop
mov
inc
mov
push
add
into
sub
and
push
ret
adc
and
test
jb
add
mov
stc
jmp
pop
shlb
add
xor
cs
or
pop
cmp
jb
inc
int3
add
add
inc
sub
aam
mov
dec
pushl
push
dec
mov
bound
add
jae
xor
outsb
sbb
mov
outsl
sbb
sahf
and
push
adc
mov
nop
add
das
in
or
xchg
mov
mov
mov
pop
xchg
jl
pushf
xor
ss
xor
mov
cld
stos
push
pop
in
insb
mov
shr
or
aaa
add
sbb
jne
sub
rcll
adc
cs
mov
cmc
or
jl
aam
sbb
mov
mov
add
rorb
fisttpl
ljmp
rclb
ss
xor
or
sbb
pop
call
push
jp
and
shll
dec
enter
dec
incl
inc
jbe
push
cmp
aam
movsb
call
cwtl
or
and
pop
or
shlb
cmovge
sub
pop
sbb
stos
outsl
and
push
fwait
mov
pop
add
clc
sub
pop
mov
aad
cmpsl
jns
cmpsb
test
lods
add
mov
xchg
test
or
pushl
les
fdiv
push
add
movsb
add
lock
mov
mov
pop
or
fadd
ds
sub
negb
loopne
sub
jp
lret
sahf
fldcw
stos
mov
mov
sub
pop
bound
mov
orl
add
add
movsl
jecxz
jae
adc
outsl
clc
fwait
mov
push
sbbb
push
push
mov
mov
aas
rcrl
sbb
das
mov
movsb
add
outsb
call
or
sbb
mov
jnp
sub
xchg
add
and
mov
pop
in
mov
or
or
mov
pop
lock
xchg
gs
clc
pop
add
xor
and
push
pop
cld
cmp
fildll
lods
fcmovnbe
add
cmp
lods
cmp
or
cs
xor
sub
adc
icebp
cli
add
and
lock
ret
jle
ficoml
add
add
loop
jno
add
lods
xorl
sbb
ds
call
add
js
or
xchg
sub
adc
dec
pop
mov
je
and
fistps
mov
sub
mov
test
add
stos
adc
push
sub
add
mov
or
shr
in
xchg
aas
rclb
jbe
push
cmp
push
shlb
sub
lock
mov
adc
sahf
cmpb
fisubs
xor
cltd
add
xlat
fidivrs
lcall
mov
or
js
dec
push
dec
dec
cld
and
inc
mov
loopne
out
outsb
data16
sub
mov
add
repnz
pop
hlt
mov
xor
jbe
call
loope
loopne
inc
testl
or
add
xlat
pop
xchg
mov
daa
xor
je
lock
stos
pop
inc
or
ret
mov
nop
pop
xchg
cmp
push
mov
mov
out
mov
lea
fdivrs
test
hlt
loopne
and
dec
adc
push
push
inc
fcomip
fistps
mov
negl
cs
add
inc
dec
pop
loope
xchg
std
mov
mov
jmp
sbb
and
add
rcr
lret
or
or
mov
call
inc
mov
lea
call
addb
pop
lahf
or
fiaddl
xchg
add
mov
data16
add
mov
aas
mov
inc
pop
shll
cmp
shl
jg
mov
sbb
aad
fwait
sbb
notb
mov
in
and
sbb
loop
adc
lret
push
add
sbb
lcall
mov
push
jge
das
adc
arpl
ret
jmp
inc
ds
inc
push
ljmp
in
popf
nop
mov
push
and
aas
roll
test
sub
pusha
adc
rorb
test
es
sbb
jne
add
scas
scas
sar
ficoml
jmpw
pop
mov
dec
js
mov
dec
xor
add
fildll
sbb
cltd
push
test
mov
add
ret
and
inc
add
adc
jp
pop
aam
xchg
xorb
lret
pop
mov
lock
pusha
push
stos
test
mov
add
rorb
xor
adc
push
in
cld
add
shrl
mov
out
mov
mov
sbb
cmp
xchg
and
or
mov
fistpl
adc
repnz
ja
mov
sub
mov
inc
pusha
pusha
mov
cmc
fnstenv
cmp
pop
fildll
lock
add
jmp
sbb
outsl
mov
mov
adc
sbb
add
int
fadds
jo
jg
or
outsl
jo
mov
and
lret
mov
fimull
push
jg
loop
cmpsb
mov
push
push
cmp
cwtl
clc
jmp
loopne
imul
pop
clc
insl
add
test
add
add
pop
mov
cmp
xchg
fstl
mov
adc
test
dec
repnz
sub
shr
lds
sbb
daa
mov
inc
subb
mov
aam
mov
jecxz
int
scas
mov
idiv
imul
loope
add
out
pop
push
adc
imul
inc
test
xor
aad
add
test
sbb
jbe
and
and
ljmp
add
mov
loopne
adc
mov
dec
adc
in
adc
xchg
cmp
sbb
mov
test
orb
jle
inc
outsl
ljmp
or
mov
cpuid
xor
xlat
mov
jg
leave
ja
add
lods
movsbl
xchg
out
add
lcall
inc
mov
outsl
shr
scas
cld
sbb
lea
push
loop
icebp
dec
fnstsw
xchg
ss
push
sub
insl
add
jo
dec
out
or
sub
add
fidivrl
jecxz
cwtl
push
mov
decl
push
shrb
aam
negb
div
dec
sub
jp
pop
mov
jl
call
in
fwait
push
mov
jbe
mov
int3
inc
mov
sbb
mov
mov
shl
jge
movsl
pusha
das
aam
inc
mov
pop
pop
add
leave
and
icebp
aad
mov
add
adc
jne
jbe
dec
push
lahf
pop
movsb
dec
xchg
hlt
sbb
inc
xlat
popf
sub
mov
mov
push
sub
pop
sbbl
and
pop
pop
test
incl
push
out
sub
and
mov
js
sub
pop
inc
sbb
pop
add
icebp
in
xor
pop
jns
jge
mov
mov
push
mov
shrl
pop
bound
mov
jmp
test
aad
pop
jnp
or
mov
sbb
pusha
push
jg
adc
lods
or
outsb
add
loop
jbe
addl
inc
rcrb
lcall
stc
aaa
fisubs
sbb
loop
xchg
pop
mov
mov
fimuls
or
test
add
xchg
aas
daa
sbb
mov
push
loop
or
push
dec
sub
or
rolb
movsl
jnp
movsl
cmp
cmp
push
add
xchg
cmpsb
lds
pop
stos
arpl
xchg
add
jno
mov
jmp
rclb
add
les
or
cs
repnz
lock
cmp
jmp
add
icebp
sub
mov
stos
daa
mov
pop
or
in
adc
jnp
inc
pop
cs
out
sbbl
add
push
dec
xchg
sub
jo
sub
push
mov
xor
push
mov
outsb
adc
cli
incl
mov
or
xor
movb
loopne
xchg
push
loopne
xchg
pusha
jb
shlb
loopne
clc
pushf
jmp
addr16
sub
add
mov
es
pop
sub
mov
cltd
lods
fs
ret
and
adc
scas
mov
loope
sub
sbb
bound
mov
outsl
fmul
scas
add
rorl
add
sub
ljmp
pop
mov
imul
push
or
cmp
mov
scas
xlat
jo
out
pop
jg
add
stos
pop
adc
addl
inc
loopne
pushf
push
mov
inc
push
incl
fisttpl
sarb
add
mov
push
xchg
lock
mov
add
pop
stos
das
div
jmp
adc
mov
jg
adc
and
push
push
mov
gs
mov
mov
aaa
lock
xchg
sahf
mov
lds
ret
sub
clc
inc
mov
mov
xchg
jle
test
jp
es
lds
pop
pop
mov
fisttps
scas
xchg
mov
out
mov
lods
or
jg
test
inc
push
adc
adc
push
ja
sbb
push
and
mov
call
es
aaa
outsl
or
adcb
mov
xchg
xchg
pop
scas
mov
cmpsl
mov
aas
pop
test
stos
daa
ds
lcall
loopne
lock
adc
add
in
cmp
xor
ret
hlt
or
jo
sti
mov
add
jl
xor
sbb
mov
out
mov
push
popw
jo
jl
nop
pop
jle
mov
fwait
jne
pop
jno
enter
insb
repnz
fldcw
push
adc
add
in
push
xor
and
add
out
add
mov
or
clc
outsl
mov
cmp
push
dec
mov
imull
dec
mov
es
xchg
incb
arpl
incl
cmp
push
or
das
fcompl
in
push
cmp
rolb
movsb
jb
xor
sbb
inc
or
jnp
add
cld
ja
test
ret
mov
imull
jno
push
cmp
inc
pop
rorl
test
push
sub
sbb
add
out
int3
pop
or
call
and
push
sub
xor
mov
dec
fsubs
iret
cmp
icebp
jnp
roll
cs
lret
sub
mov
add
fstps
rorl
inc
dec
push
mov
sub
ret
pop
xor
enter
lidtl
lods
es
aad
inc
xchg
fldl
xchg
cmp
mov
ja
and
fistps
mov
add
mov
js
ljmp
or
mov
add
push
inc
aad
sti
shll
loopne
je
xchg
rorb
inc
stc
mov
mov
jmp
and
scas
loope
jl
iret
inc
mov
add
add
lock
add
mov
sbb
ljmp
shlb
mov
sub
out
incb
rorb
int3
or
rcrb
fstl
pusha
add
xor
aad
mov
enter
push
mov
xlat
jmp
mov
sbb
cmp
jmp
add
mov
mov
xchg
and
add
mov
add
pop
std
incl
insl
or
out
test
ja
clc
inc
fidivs
orb
xlat
ror
cmp
adc
loopne
stc
jb
mov
cmp
fdivrs
mov
mov
mov
cmp
xor
or
fstl
outsl
lahf
je
mov
add
mov
int
lock
fstps
mov
js
idivb
sahf
icebp
outsl
mov
jnp
clc
inc
arpl
xchg
outsl
pop
nop
jmp
dec
les
shl
mov
jecxz
dec
lret
adc
or
lcall
movsl
test
scas
pusha
adc
xlat
out
stos
pop
xor
ret
cmp
ljmp
shll
popa
data16
jmp
shll
push
mov
cmp
sbb
ljmp
mov
adc
mov
mov
stos
test
scas
sbb
jno
mov
jbe
sbb
loopne
adc
or
lret
std
ja
and
cmp
into
ss
ds
or
cmp
add
mov
mov
mov
es
pop
and
imulb
je
inc
mov
cld
insb
push
add
add
shll
test
outsb
mov
fimuls
es
xchg
mov
or
iret
lret
aam
cmpsb
push
std
dec
mov
lcall
xchg
addb
mov
rcrl
and
push
fisubs
push
mov
xor
jg
call
cmp
imul
push
or
jg
dec
test
xorl
jns
test
cmp
pop
lock
ret
pop
stos
mov
cwtl
into
loop
aam
icebp
das
stos
sub
cwtl
loop
scas
xchg
push
jle
and
insb
loopne
mov
jl
jb
nop
ss
or
call
mov
sbb
and
xor
sbbb
cmpsl
shll
mov
nop
fnsave
cli
mov
clc
sub
ja
push
xchg
fs
mov
call
sbb
scas
mov
inc
fnstcw
dec
jae
movb
or
repnz
mov
jbe
popa
push
outsl
cli
add
mov
call
test
add
sub
fsubs
xchg
push
mov
andl
cmp
add
add
cmpsb
out
mov
jg
cld
cmp
push
pop
xlat
test
cmp
out
dec
push
outsl
push
out
pop
inc
jle
insl
mov
cmp
xchg
jns
adc
sbb
mov
mov
inc
mov
inc
add
fwait
or
aam
ljmp
cmp
mov
inc
mov
or
lcall
push
push
sub
sub
enter
jg
jmp
cmp
cmp
mov
ds
jb
mull
fcomip
lods
ljmp
or
out
pop
push
rcrb
jae
fcmovbe
mov
cmp
fld
out
out
push
cld
ljmp
xor
xor
pop
push
and
jecxz
aad
loop
pop
add
mov
gs
sbb
call
lods
sub
add
outsl
push
std
scas
test
inc
pextrw
push
lahf
add
sbb
add
inc
shlb
mov
xor
mov
add
dec
sbbl
jg
sbb
or
cmp
cmp
shrb
cmpb
xchg
ret
inc
rcr
mov
sub
clc
mov
das
dec
and
sbb
inc
loop
test
hlt
jg
sbb
sub
add
jl
shlb
dec
add
push
pop
popf
mov
mov
aad
subb
rclb
leave
mov
stos
mov
mov
jecxz
jmp
pop
fdecstp
shrl
bound
aad
mov
into
lds
push
sahf
mov
shll
add
lcall
mov
decl
jle
jmp
dec
enter
dec
or
mov
in
xor
aam
inc
mov
popf
jge
cmp
test
aaa
loope
data16
stos
adc
add
and
clc
call
sbb
xchg
dec
dec
pop
dec
imul
adc
xor
in
mov
pushf
sbb
push
or
pop
pop
mov
movsb
mov
inc
push
jmp
test
adc
lahf
pop
or
inc
pop
lds
mov
mov
dec
adc
cmp
sbb
fwait
test
ljmp
imul
cltd
cmpsb
sub
ret
pushl
mov
xchg
ss
inc
cltd
sub
lds
mov
push
add
mov
scas
pushl
pushf
nop
jp
outsb
add
clc
inc
jb
adc
inc
fdivs
adc
adc
mov
hlt
sarl
pop
add
fadds
add
jmp
shrb
xlat
jb
in
push
enter
pop
jb
leave
jl
test
ror
hlt
lret
adc
cmp
lock
roll
cmp
adc
loopne
or
or
lods
push
xor
cld
repnz
add
cwtl
add
loope
pop
je
es
mov
mov
inc
mov
mov
or
push
add
sar
sub
mov
push
jg
mov
inc
xchg
nop
call
pop
push
sub
mov
jge
sub
fldl
jecxz
aaa
add
mov
loop
mov
pop
test
frstor
pushl
or
mov
popf
lods
xchg
out
addr16
pop
cs
fucompp
xchg
mov
je
xor
mov
mov
mov
dec
add
lahf
icebp
js
faddl
std
subl
mov
mov
pop
add
lods
ret
fmuls
fidivl
and
pusha
in
aas
sti
addb
add
in
call
xchg
push
je
jg
es
sub
mov
mov
lds
rorb
jl
fbstp
lds
mov
push
andl
sub
outsb
rclb
push
sub
iret
test
je
mov
and
negb
or
fldenv
js
add
stos
cld
pop
add
add
add
lods
mov
xlat
or
jge
jge
pop
mov
ljmp
add
or
add
jns
sub
xchg
cli
sub
dec
mov
call
mov
lock
cltd
out
mov
jle
jmp
ds
dec
ljmp
sub
lock
mov
add
sub
push
fsubrl
data16
repz
outsl
cli
sbb
add
jbe
inc
std
sub
hlt
cmp
push
jecxz
loope
or
ror
das
insb
outsb
xor
mov
adc
add
adc
sbb
cmpsb
int
or
and
and
outsb
loop
cli
in
inc
xor
and
dec
push
inc
hlt
dec
inc
test
and
cwtl
or
adcl
xlat
pop
jl
mov
jg
shll
rolb
sbb
in
pop
add
jb
adc
add
sbb
pusha
mov
and
call
aaa
xchg
xchg
pop
movl
jl
mulb
adc
jo
add
loope
add
pop
cmpsb
fldl
push
inc
and
clc
bound
fidivrl
lahf
adc
jp
in
mov
shr
outsb
out
cmc
call
jp
cmp
mov
or
fcomps
cmp
jle
xor
out
xchg
xchg
jg
in
fbld
lock
jecxz
mov
push
add
rcrl
hlt
or
and
and
dec
aam
push
push
or
ds
jp
mov
jno
inc
jl
fsubrp
subb
inc
sbb
cmp
je
lock
mov
cmp
jmp
imull
inc
aam
addr16
mov
jg
mov
sbb
jge
jp
xchg
test
clc
pushl
or
push
lcall
lods
mov
add
mov
jo
je
mov
clc
shrb
push
enter
xchg
add
and
dec
mov
fcomps
xchg
xor
ds
fisttpll
cld
fildll
adc
lods
ror
adc
rcr
mov
sub
in
call
aas
or
pop
clc
xchg
pop
add
sbb
fdivrl
mov
sbb
sarb
imull
clc
add
or
and
pop
pop
stos
push
mov
ds
hlt
scas
cmp
sbb
les
loope
jmp
add
enter
loopne
clc
mov
add
mov
insb
int3
cmpsl
cli
mov
jb
cmp
sbb
dec
test
mov
decl
push
stc
in
sbb
cld
add
jb
cli
sbb
into
adc
ja
cmpl
xchg
adc
into
or
push
aas
outsl
in
mov
inc
mov
xchg
je
add
mov
adc
mov
inc
decb
xchg
js
dec
or
addw
sbb
jbe
jmp
in
sbb
mov
jb
loope
dec
andb
fildll
cmp
aaa
ret
js
xor
cmp
outsb
leave
int3
js
xchg
repnz
loope
pushl
push
je
out
sub
mov
str
subl
clc
or
sahf
add
pusha
leave
mov
dec
sub
test
sar
call
push
and
jbe
mov
in
add
js
aaa
pop
cmp
push
cmp
pop
insl
push
mov
mov
aam
sub
int3
enter
mov
xor
jl
cld
cmp
daa
jecxz
pushf
cs
push
clc
jecxz
loope
sub
mov
mov
xlat
xchg
mov
in
sub
scas
and
or
xchg
repnz
repnz
inc
test
jge
pop
std
push
jge
mov
cld
cld
or
sarb
mov
push
movsl
sub
push
cld
andb
mov
mov
ljmp
aad
sub
dec
xchg
mov
lock
sbb
lret
inc
sti
int
scas
insb
and
mov
mov
mov
xchg
jle
adc
adc
out
or
and
inc
psubb
push
movl
mov
rcr
aaa
mov
insl
in
iret
pusha
jecxz
push
mov
xorb
testb
aam
pop
data16
dec
or
outsl
jge
mov
mov
pushl
daa
jne
xchg
mov
fcomps
outsb
pusha
push
repnz
mov
fists
rorl
jl
hlt
inc
es
push
jle
fisttpl
adc
add
xchg
outsb
sub
xchg
out
pop
push
jge
in
and
repz
out
xchg
or
sti
inc
xchg
mov
jg
ljmp
push
jmp
jo
jae
lods
movsb
into
rcll
push
or
push
lret
push
cmpsb
add
sub
lods
add
or
jp
ret
lods
jmp
imul
pop
add
movsb
cmp
or
inc
pop
push
pop
xchg
add
js
pop
mov
mov
dec
cld
ljmp
pop
push
sbb
repnz
scas
rcr
popa
outsb
adc
add
ds
inc
cltd
daa
jle
jle
dec
pop
call
enter
dec
jl
add
or
mov
sbb
add
inc
mov
daa
jle
sub
mov
ret
cmpsb
adc
push
adc
js
and
jo
lahf
xor
ljmp
jb
xor
xor
jg
adc
or
sub
data16
adc
lods
sub
mov
jg
xchg
add
mov
insl
jns
pop
jnp
adc
jg
xor
add
leave
popl
add
dec
fsincos
inc
test
mov
lods
ret
fidivl
decl
jne
mov
shl
int3
dec
stc
test
loop
and
push
add
xchg
inc
xchg
testb
pusha
lods
jecxz
adcb
cld
jg
in
dec
add
xchg
jbe
shl
or
lcall
ret
out
cmp
dec
test
pop
mov
inc
imull
xor
and
fisttps
outsb
or
in
cmp
sub
push
inc
xchg
xchg
add
in
mov
js
jno
aas
pop
jbe
lcall
mov
fisttps
push
lret
call
or
outsb
mov
sbb
int
pusha
and
add
jl
pop
jge
mov
sti
ret
add
pop
int3
xchg
pop
jno
lock
xor
sub
or
mov
mov
fldenv
sub
sub
scas
add
push
push
adc
add
clc
pushl
lds
aam
pop
mov
mov
test
imul
and
std
aaa
inc
decl
adc
mov
xchg
nop
imul
pop
push
inc
lahf
loopne
jbe
cmp
adc
push
add
lcall
jb
orb
fcmovnbe
pop
mov
mov
clc
push
inc
call
js
in
adc
andb
je
loop
loope
mov
jmp
icebp
or
leave
rcrb
out
incl
outsl
push
lret
mov
lcall
jno
rolb
push
lcall
rcr
sub
mov
mov
gs
js
outsl
cwtl
fsubs
jp
std
mov
jo
push
in
roll
loopne
sbb
and
cli
outsl
cli
adc
jo
xchg
mov
mov
pop
pop
insb
jmp
movb
in
lahf
int3
pop
xchg
or
mov
loop
in
xchg
push
sub
dec
push
rorl
sbb
add
add
jne
and
pop
mov
sbb
jmp
push
loopne
stos
cwtl
mov
bound
std
pop
pop
xchg
mov
xchg
icebp
dec
test
dec
rorl
pushl
mov
lret
mov
mov
movsl
in
hlt
xchg
push
add
loopne
dec
ljmp
mov
test
xchg
adc
mov
scas
fisubl
out
dec
in
mulb
shrb
jl
sbb
addb
and
or
fcos
fisttps
cmpsb
sbb
or
push
das
mov
fadds
std
sarb
push
add
add
xchg
add
push
xchg
sbb
data16
cli
or
jbe
jl
ret
mov
call
mov
aas
lock
or
pop
data16
pop
in
jp
sahf
pop
movsb
addr16
inc
lretw
loop
test
pop
out
mov
mov
cmp
push
sbb
pushf
or
jg
add
jge
add
mov
sbb
jmp
scas
push
mov
test
sub
sbb
and
hlt
and
inc
ret
pop
loop
sub
add
xchg
ret
in
lret
adc
mov
out
mov
add
cmp
mov
cs
cmpsb
push
frstor
add
jnp
mov
iret
stos
mov
sbb
xchg
and
rcrb
push
mov
outsl
outsb
lock
mov
push
sub
or
outsl
mov
or
out
ljmp
adc
loope
xor
nop
mov
pop
enter
push
adc
addl
and
icebp
roll
pop
sarl
into
mov
andl
js
sbb
fildll
movsb
dec
xor
inc
sbb
mov
xchg
cmp
aas
notl
flds
outsb
sahf
loop
int3
incl
cwtl
mov
dec
negl
addb
jae
aad
adc
adc
dec
mov
lods
mov
mov
mov
ljmp
xchg
xor
lret
pop
cld
clc
push
enter
cld
sbb
popf
or
popa
sbbb
adc
mov
insl
testl
loope
mov
mov
add
das
xchg
lahf
fsubp
pop
pushf
mov
mov
lret
xor
jg
aaa
inc
cmp
sub
std
xchg
sarl
ljmp
xor
es
lcall
ret
lea
add
fiadds
xchg
add
int
push
nop
mov
cli
pop
and
aas
sbb
negl
add
shll
out
out
aaa
add
sbb
fcomip
mov
test
add
push
test
filds
movsb
jne
cltd
mov
xchg
xchg
push
cmp
lea
stos
mov
and
pushl
arpl
pop
iret
pop
pop
push
push
adc
inc
and
pushl
push
mov
mov
mov
mov
mov
stc
lahf
test
shlb
ret
mov
cmpsb
pop
js
jo
lods
sbbb
bound
inc
adc
xor
push
std
jo
inc
sarl
and
es
cmp
mov
xchg
inc
cli
lds
rorb
pop
pop
cmc
xchg
icebp
fsub
lds
into
test
repnz
pop
iret
adc
mov
scas
outsb
cmpsb
push
test
add
xorb
cmpsb
inc
stos
push
mov
mov
and
jg
imul
pop
je
mov
push
sub
pusha
xchg
adc
inc
mov
insb
add
jnp
std
filds
and
movsl
pop
or
push
ss
xchg
pusha
pop
test
mov
pop
aaa
mov
push
out
adc
das
mov
in
sbb
pop
push
fmulp
push
sbb
mov
sub
xchg
and
addb
loop
sub
fcomps
cs
out
cld
push
fsubs
cmc
and
dec
scas
lahf
test
adc
xchg
push
mov
cmp
push
call
fidivrs
nop
fs
filds
add
test
inc
xor
pop
add
fcmovnu
mov
jp
push
idivl
mov
add
add
mov
shll
testl
test
ljmp
ret
mov
faddl
or
adc
aas
sbb
mov
call
decl
in
dec
or
cld
ret
int3
adc
sbb
sub
std
cli
aaa
mov
cmpsl
push
sbb
dec
or
push
inc
call
and
nop
mov
mov
lock
or
jo
lock
jne
jmp
dec
push
stos
cs
dec
out
ret
rorb
in
add
movd
pop
out
or
das
mov
sahf
xor
or
daa
cmpsl
test
fnstenv
or
xor
addr16
or
in
bound
pop
xorl
inc
shrl
sbb
ja
jno
popa
shr
add
jle
fmull
arpl
push
dec
repz
xlat
cli
ret
insb
shlb
les
lock
loopne
nop
rcrl
in
shlb
cmc
lods
je
ret
xchg
push
loopne
and
ror
in
cmp
add
push
xor
pop
call
mov
inc
sbb
test
push
ret
mov
inc
daa
dec
adc
loop
inc
pop
lea
lock
cmp
cmp
adc
fwait
xchg
xor
dec
mov
push
push
mov
faddl
out
dec
mov
mov
inc
mov
or
add
inc
push
push
shl
loopne
push
sub
ds
jl
lods
sbb
fldl
in
sbb
mov
xor
mov
enter
cli
push
test
xor
cmp
jo
add
sarl
out
movb
sbb
lock
js
lock
inc
hlt
or
shlb
xor
and
call
xor
jbe
test
jno
cltd
xor
ficompl
mov
scas
clc
add
dec
data16
cld
xchg
cmp
aaa
inc
rolb
clc
mov
jle
clc
ja
sbb
cwtl
sahf
cltd
pushl
outsl
ljmp
call
mov
sbb
and
mov
sbb
hlt
fisttpl
fmul
sbb
xchg
mov
sub
sub
pop
shl
test
and
test
and
add
push
out
mov
mov
sub
jge
xor
pop
dec
movsl
or
outsb
push
jecxz
into
and
std
mov
adc
movl
pop
fildll
or
call
sbb
xchg
fwait
lods
fbld
sbb
scas
dec
neg
xchg
lds
mov
mov
push
or
xchg
jecxz
add
xchg
add
lcall
int
cli
sbb
xchg
nop
cwtl
mov
pop
cld
aas
or
daa
mov
lcall
pop
sbb
cli
inc
add
jo
xchg
mov
add
test
pop
mov
loope
lcall
inc
aaa
sub
mov
push
jp
movb
dec
push
fwait
dec
dec
lret
sbb
ss
subb
daa
lcall
mov
out
cmp
shrb
sub
fcomip
jbe
mov
dec
es
cmp
jp
cmp
mov
in
inc
dec
es
cwtl
add
pop
xorb
add
sub
lock
or
test
cli
aad
sahf
stos
rcr
lcall
ds
aad
sbb
insl
aaa
hlt
lcall
mov
shll
cs
fs
orb
pop
inc
cmpsl
mov
adc
loop
loop
and
mov
xchg
out
in
sbb
mov
lds
add
sbb
pop
cmp
xor
cs
ret
jg
loop
ficompl
push
ret
push
or
mov
push
xchg
les
pop
and
cltd
cmpsl
xor
add
xchg
movsl
scas
fwait
hlt
mov
jb
lret
cs
sub
sbb
test
inc
mov
mov
frstor
cmpb
xorl
int
lods
loope
jno
lret
jecxz
icebp
dec
add
cmc
and
mov
xor
mov
inc
mov
fwait
or
push
dec
sti
or
pop
pusha
push
mov
mov
sub
fsubrs
sub
js
repnz
adc
inc
loopne
mov
lcall
push
adc
lahf
xchg
inc
mov
pop
dec
push
je
dec
sbb
icebp
mov
lret
jno
jns
mov
cmc
mov
loopne
xchg
sbb
jecxz
cmp
bound
int3
inc
mov
push
pop
cmp
popf
enterw
lahf
push
fstpt
push
pop
cmc
mov
cmc
lahf
sahf
mov
or
rcr
inc
jbe
push
cmp
dec
or
pop
add
jo
xor
mov
ficompl
pop
lds
lea
xchg
mov
dec
pop
dec
scas
sub
outsl
stos
xchg
jge
xor
shr
push
ljmp
es
cmp
inc
mov
sub
cvtpi2ps
nop
lods
xor
scas
clc
or
repz
mov
bound
ljmp
scas
xor
cmp
out
or
fstps
cld
cmpsb
loopne
in
test
rolb
add
in
mov
mov
enter
aam
mov
popa
jge
mov
push
pop
pop
mov
xchg
lret
pushf
inc
clc
or
out
jge
pop
inc
jbe
push
loop
icebp
mov
sbb
add
fidivrs
cli
lcall
add
out
mov
daa
add
adc
mov
push
xor
mov
test
add
lock
lahf
xchg
add
mov
icebp
adc
fnsave
inc
or
ss
ficomps
add
mov
jge
xchg
jmp
sar
pop
mov
rol
add
and
pop
add
mov
enter
pushl
cli
es
inc
push
add
fistpll
and
les
adc
call
nop
rorl
jns
mov
add
fimull
add
daa
inc
dec
mov
fwait
pop
aaa
lods
add
sar
sub
lods
cmp
clc
rolb
inc
outsl
dec
add
lds
mov
test
xchg
lods
ljmp
xlat
test
jb
roll
pop
into
dec
lea
std
and
enter
pushf
and
jo
adcl
in
pop
push
outsl
xchg
mov
sub
xchg
pop
scas
ja
jg
scas
add
insb
jno
jo
mov
mov
in
push
pusha
std
cmp
call
push
dec
mov
lds
adc
push
lods
add
das
mov
add
and
mov
insl
outsl
and
push
cmp
inc
push
mov
out
adc
mov
sub
movsl
jo
sbb
ret
stos
mov
pop
add
pop
sbb
jo
notb
or
repz
inc
lods
scas
outsb
outsl
add
mov
or
sub
push
sub
xor
inc
lcall
pop
shlb
xorb
jne
pop
aaa
or
out
pushf
mov
ret
or
das
jo
leave
pop
or
xchg
loopne
test
imul
add
add
jo
and
and
xor
test
das
push
mov
stos
mov
or
test
nop
fimuls
aad
imul
cld
out
mov
inc
sbb
movsl
inc
out
mov
icebp
lcall
es
cmp
adc
andb
loope
mov
je
and
jb
aam
push
pushf
pushf
dec
dec
int3
push
inc
std
dec
mov
mov
outsl
pop
pop
ja
sub
push
fdivrl
cltd
push
ret
jecxz
add
cmpsl
fwait
mov
dec
cld
ljmp
pop
scas
xchg
nop
xchg
dec
pop
call
xchg
sahf
hlt
inc
fs
stos
inc
sti
push
rclb
dec
push
and
fistpl
cmc
pushw
cmpsl
clc
push
dec
lahf
jnp
int3
sar
mov
add
lds
inc
ljmp
shr
mov
insb
push
mov
shll
xor
push
push
push
mov
add
xor
mov
sbb
fidivl
lods
sbb
xchg
nop
incb
jns
pushf
js
andl
div
stos
sbbb
cltd
add
sub
arpl
xor
aaa
std
sub
inc
out
inc
pop
loop
jo
jno
mov
and
repz
sub
and
sbb
mov
ljmp
mov
xchg
mov
jb
pop
add
rcrb
cmc
imul
pop
xchg
xchg
les
xor
ljmp
addl
push
jmp
xchg
sbb
xchg
nop
ss
jg
out
cmp
cmp
inc
scas
xchg
leave
adc
ljmp
inc
movsl
hlt
mov
jmp
or
mov
cli
rolb
push
js
adc
orl
jecxz
repnz
out
add
out
xor
insl
dec
lock
xchg
je
pop
pop
mov
cmp
fisttps
dec
pop
xorb
jne
rcr
popa
mov
and
mov
popa
xor
mov
xor
ret
sub
popa
popf
adc
sub
push
scas
cmp
mov
adcb
mov
ds
dec
sub
repz
mov
xor
dec
test
push
or
pushf
xchg
insl
aam
pop
push
ds
sub
hlt
or
mov
andb
cmc
bound
mov
hlt
lock
mov
pop
jne
mov
xchg
lock
pop
push
mov
add
mov
adc
gs
aas
push
pop
mov
movsb
outsb
jmp
pop
decl
sub
aas
xchg
and
add
mov
mov
call
sti
addr16
mov
hlt
mov
or
ds
popa
clc
or
pop
lds
jo
add
push
int
cli
sbbb
cmpsb
sti
or
cmp
outsb
jg
pop
xor
mov
aam
nop
mov
lock
pushf
push
adc
leave
fmuls
add
xchg
sbb
lock
xor
cmpsl
std
cmp
decl
sbb
loopne
add
test
arpl
fnsave
mov
fistps
lods
add
cmpsb
or
fcomip
xchg
add
jno
jmp
rorb
stos
pop
pop
imul
fsubrl
and
adc
dec
hlt
out
ljmp
sbb
add
pop
and
and
cmp
adc
inc
jbe
test
add
adc
fsubrs
in
inc
xor
iret
push
call
mov
ret
ja
lcall
lds
lret
or
das
mov
insl
mov
add
sbbb
movsb
mov
fdivs
sub
dec
xchg
add
test
std
fwait
ss
xor
int
inc
push
cli
jo
adc
orl
push
pop
lcall
nop
mov
in
loope
bound
aaa
add
pop
test
into
adc
inc
xor
add
and
incl
mov
pop
mov
add
xchg
out
sbb
ret
or
pusha
sbb
jl
sbb
imul
test
data16
adc
push
push
mov
push
push
lcall
in
inc
adc
mov
stos
sbb
jo
mov
out
xchg
inc
xchg
dec
pop
decl
or
bound
xlat
inc
jecxz
leave
push
leave
pushf
ja
sbb
adc
xor
lods
mov
stc
adc
cmpl
push
mov
ljmp
mov
rcrl
mov
hlt
push
sarb
mov
mov
and
pop
loopne
xchg
mov
pusha
add
pop
mov
popf
cs
enter
mov
or
mov
push
js
mov
add
xchg
fdivl
aad
add
dec
lods
ret
scas
clc
ret
and
jg
cmp
mov
or
pop
in
in
xor
scas
js
mov
push
shr
stc
add
lcall
xchg
fldenv
loope
cmp
aaa
dec
mov
sbb
pop
gs
cmp
pop
adc
test
xchg
sub
mov
pop
pop
clc
xor
push
negl
fisubrl
and
pushf
mov
outsl
fildll
inc
add
and
push
incl
mov
cwtl
mov
xchg
or
enter
mov
sbb
pop
roll
inc
mov
sbb
add
shrb
daa
dec
pop
inc
jns
cmp
pop
push
or
insb
pop
or
ret
fcomi
xchg
mov
push
in
inc
push
movsl
es
and
aam
sbb
cmpsb
add
mov
push
mov
std
rolb
rcll
xor
jns
or
sub
sub
movsb
adc
sub
mov
push
add
add
pop
xor
mov
mov
lock
push
sub
bound
add
out
ss
rcll
mov
sbb
in
aad
testl
push
faddl
push
lock
aaa
cmp
aad
add
ljmp
out
bound
cwtl
gs
or
xchg
add
test
out
mov
loopne
add
test
jne
add
inc
add
pushf
dec
cmp
add
fadds
test
orb
inc
jnp
stos
bswap
push
mov
data16
pushf
shrl
add
aaa
pusha
popa
aaa
sarb
jecxz
mov
cmpsl
cld
mov
jecxz
mov
sti
or
shlb
cld
loopne
push
xchg
push
dec
aas
aam
cld
lock
popf
loopne
bound
xchg
xor
mov
push
mov
adc
stos
ficomps
aad
push
inc
in
mov
pop
pop
push
ret
pop
push
add
mov
decl
nop
pushf
cmpl
daa
xor
in
mov
adc
loopne
jecxz
cmp
push
loopne
aaa
jg
mov
xchg
mov
dec
adc
rorb
inc
in
shll
popf
addb
fcomip
mov
rol
adc
popf
lds
and
pusha
cwtl
sbb
mov
inc
mov
icebp
push
jnp
or
cmc
into
aas
sbb
jbe
decb
adc
fcoms
repz
test
loopne
aas
add
lret
push
cmp
out
jle
pushf
in
in
stos
mov
cli
mov
adc
cmp
add
test
push
nop
stc
and
jns
xor
push
lcall
pop
cs
repnz
cwtl
add
in
icebp
test
sti
insl
or
mov
aam
in
test
add
test
fisttps
add
sbbb
je
xchg
inc
icebp
xchg
aam
fmull
scas
adc
scas
scas
clc
dec
or
mov
bound
add
fiadds
adc
push
iret
sbb
pop
and
cmp
dec
and
in
sarl
jb
daa
ja
push
inc
pop
cli
jg
aam
ret
scas
mov
sub
mov
jmp
add
shlb
or
loop
push
lcall
push
pop
and
das
push
sahf
clc
dec
jbe
jno
jo
xor
loope
fbstp
popa
enter
js
add
popf
sub
cmp
rorl
sub
and
cmp
loop
cli
das
cmpsb
cmp
push
repnz
push
mov
jecxz
aad
push
cmp
dec
lahf
lods
push
das
add
fcmove
addb
enter
ret
ret
pop
lock
int3
sbb
pop
sub
mov
call
js
test
or
int3
andb
add
dec
clc
dec
add
push
push
addr16
xchg
mov
add
cmpsb
sub
pop
sbb
lock
jmp
push
stos
pop
icebp
sub
pop
popa
dec
outsl
pop
rorb
js
or
dec
xor
cmp
fdiv
ret
jg
test
and
lock
jg
loopne
mov
stc
mov
aad
popa
adc
add
add
push
or
lcall
xchg
insl
std
inc
push
or
jae
inc
dec
adc
push
pop
adc
paddb
mov
jg
fistps
sbb
add
cli
bound
adc
pop
insb
cli
mov
inc
sbb
rolb
add
cmp
or
test
add
cmp
cli
sbb
lods
ret
into
pusha
fwait
in
push
dec
into
pushf
dec
pop
test
sar
mov
cs
push
xchg
divb
insb
mov
push
dec
mov
adc
sub
mov
push
jl
pop
pop
adcl
movsl
sub
testl
dec
fmul
enter
mov
hlt
lcall
repz
adc
adc
ret
lret
in
adc
xchg
add
or
dec
pushf
das
subb
ljmp
push
cs
fisubl
mov
xor
sarb
inc
jno
cmp
mov
ffreep
fs
call
add
jo
shlb
sub
test
jo
or
test
pop
dec
jb
or
incl
and
mov
pop
lock
mov
adc
sbb
cwtl
pushf
movb
out
mov
out
lret
cmp
push
jo
enter
and
mov
repnz
ficompl
and
push
mov
decb
call
icebp
out
push
das
and
push
cmp
scas
inc
aam
xor
or
nop
out
xchg
mov
mov
in
stos
mov
adc
cli
int3
mov
inc
ljmp
jle
aas
pop
sbb
push
lock
pop
mov
call
cmpl
shl
pop
xchg
xor
aaa
pop
adc
std
call
adc
loopne
movsb
cmp
inc
ja
jl
lcall
xor
inc
push
mov
and
push
pop
fistl
hlt
lahf
add
and
or
call
push
outsl
js
andl
test
scas
add
sbb
mov
int3
adc
aaa
ljmp
sbb
xchg
das
jecxz
mov
mov
cmpsb
jne,pn
ds
dec
in
add
js
xchg
rorl
xor
adc
pop
cmpsb
xchg
pop
aas
sbb
push
mov
mov
jl
xor
popf
adc
pop
lret
movsb
lds
inc
aaa
mov
inc
int3
bound
xorb
icebp
jg
andb
nop
xchg
jmp
sub
lcall
xchg
cwtl
or
pop
mov
add
add
inc
ret
shrb
sub
or
popf
mov
rolb
add
int3
and
arpl
mov
mov
xchg
adc
nop
ljmp
add
fldenv
mov
add
out
mov
xchg
cmpsb
rorl
mov
rol
scas
jle
test
bnd
adc
xchg
xchg
sub
pop
mov
loope
ss
lods
xchg
bound
stos
cmp
imul
fdivs
pushl
hlt
jno
mov
pop
rolb
mov
inc
clc
scas
outsl
outsl
dec
mov
and
bound
mov
clc
pop
lock
js
xor
pop
jp
rol
inc
jg
and
ret
scas
push
cmp
xchg
leave
push
setl
mov
comiss
ljmp
adc
repz
push
sti
adc
add
or
fs
and
fiaddl
sub
adc
dec
aad
mov
adc
mov
push
mov
loope
imul
cmp
and
pop
int
push
mov
fs
cli
mov
jp
fwait
ss
ret
lods
imul
out
outsl
adc
or
dec
stc
inc
nop
outsl
mov
jmp
mov
loope
cwtl
stos
filds
pop
pushf
dec
pusha
lods
out
loope
add
imulb
mov
xlat
add
xor
xor
bound
fstpt
adc
sbb
stc
cmp
fmul
cld
into
addr16
in
cli
push
push
aas
fdivs
jmp
outsb
mov
cli
insl
fucomi
xchg
dec
pop
push
js
ret
ljmp
and
cli
jp
js
mov
mov
xor
or
test
inc
clc
dec
add
aaa
add
es
in
adc
test
mov
into
vmread
pop
mov
xchg
scas
inc
cmpsb
inc
cmpl
pushf
and
and
add
icebp
sbb
mov
mov
lock
sbb
fs
mov
lds
mov
mov
je
fcomps
push
jmp
adc
iret
mov
and
xor
jg
push
in
dec
push
xor
std
sub
iret
stos
or
sbb
stos
mov
mov
fwait
and
jg
ljmp
sti
cmpsb
mov
xchg
xchg
xchg
push
mov
out
pusha
mov
mov
push
iret
ljmp
ljmp
call
repnz
xor
sub
fsub
mov
mov
aam
pop
fildll
xor
add
std
xchg
sbb
lcall
or
inc
and
std
xor
mov
add
int
or
subb
movsl
out
mov
add
imul
and
mov
jle
mov
lcall
mov
push
lret
ljmp
adc
arpl
addr16
test
bnd
int
inc
xchg
mov
add
cmc
push
xor
add
out
jb
dec
inc
jbe
add
lods
decl
es
iret
fnstcw
aas
cld
or
aas
cli
add
xchg
xor
pop
flds
fs
or
cli
jge
fmull
test
stc
pop
push
mov
dec
out
mov
movsl
js
mov
xor
dec
incb
dec
mov
test
ret
push
mov
sahf
dec
je
pop
pop
je
jl
outsb
orl
outsb
pusha
xchg
push
or
pushf
add
pop
jg
loop
adc
test
pop
movsb
mov
fldcw
lds
stc
in
loopne
fxch
arpl
mov
mov
add
xchg
enter
mov
add
out
mulb
outsb
jp
fmull
hlt
out
xchg
jl
add
in
je
xchg
and
idiv
jg
popf
iret
xchg
fsubl
inc
push
and
in
fstl
outsl
cli
aaa
mov
jg
divb
insb
inc
mov
and
add
scas
jg
and
add
mov
inc
aaa
add
add
mov
arpl
xchg
mov
add
jns
imull
dec
loope
nop
lea
outsb
inc
rcl
pop
fisubl
xor
daa
pop
pop
adc
jmp
das
push
popa
fbstp
add
push
mov
push
cmp
mov
lock
aad
loope
pop
cmc
stos
and
pop
mov
jae
bound
cmp
clc
mov
jbe
cmp
sub
lock
mov
scas
ret
test
into
mov
ret
fcomps
daa
sub
adc
mov
sub
sar
fwait
add
xor
sbb
setnp
cld
dec
mov
aad
leave
xchg
insl
mov
jbe
out
js
scas
mov
nop
inc
outsb
add
push
out
mov
inc
les
push
adc
or
xchg
shlb
fwait
aaa
adc
xchg
lock
into
or
xchg
inc
aad
test
cmpsl
pop
popa
jne
test
aad
sub
jp
xor
add
out
insb
hlt
insb
cs
sub
cltd
pop
add
or
dec
push
scas
decb
mov
and
and
inc
dec
jne
add
outsb
clc
mov
mov
adc
insb
jecxz
or
mov
xchg
ss
xchg
rcl
notb
sbb
cltd
pop
and
ret
lods
popw
leave
hlt
push
adc
dec
cld
pop
inc
sbb
mov
aam
jle
inc
in
mov
add
adc
add
sub
shrb
jbe
dec
dec
dec
jo
inc
mov
lods
adc
movsb
sbb
sbb
mov
lret
data16
lea
sbb
in
adc
lret
mov
sub
xor
jbe
jecxz
insl
cmpsl
pop
mov
lds
push
in
push
add
and
push
loopne
test
mov
mov
jo
inc
in
sbb
and
in
rol
mov
icebp
fwait
gs
push
ret
xchg
add
add
push
into
add
in
and
pop
push
rorl
sub
cwtl
das
mov
fdivl
sbb
stos
jg
mov
inc
ret
aaa
mov
push
sahf
clc
mov
sub
ja
mov
add
jbe
cmp
mov
popa
lock
push
sub
push
in
lods
sub
arpl
cwtl
out
or
add
sub
cld
in
jle
ficompl
mov
sbb
mov
out
jmp
movl
sub
cld
stos
push
xor
xor
mov
pop
add
and
call
clc
lods
push
add
lea
clc
subl
dec
adc
dec
mov
xchg
mov
adc
sub
faddl
pop
push
or
in
jbe,pt
ret
mov
push
inc
and
cmp
inc
scas
or
ret
stos
ljmp
rclb
xor
adc
adc
push
ljmp
daa
es
cmovo
ret
add
mov
dec
insl
call
add
pop
cli
insl
push
jmp
mov
scas
pop
or
ret
and
jp
mov
or
adc
stos
loop
xlat
adc
cmpsb
jg
pushf
cli
adc
subb
cli
int
clc
mov
mov
cmc
or
push
jg
push
dec
loop,pt
sti
sbb
and
push
or
into
pop
movsl
push
nop
out
fadds
adc
int3
stos
jno
ljmp
adc
scas
pop
push
mov
daa
mov
xchg
aaa
ljmp
sub
imul
or
xor
and
add
add
popa
test
jg
pop
stos
pop
adc
add
mov
add
adc
inc
add
push
mov
movsl
repz
jnp
push
stos
xor
inc
cmp
mov
mov
incb
clc
out
fisttps
cmp
bound
or
jecxz
das
lcall
insb
inc
test
mov
test
pushl
shl
outsl
push
add
jle
lahf
call
arpl
lods
add
cld
push
jmp
xorl
mov
xor
adc
jnp
xchg
pusha
insb
aaa
cmp
or
push
jmp
xchg
in
jmp
adc
xor
adc
or
mov
and
fisubrl
sbb
jg
push
adc
shrb
ja
add
jnp
inc
dec
data16
dec
andb
sarb
mov
rclb
sbb
scas
cwtl
add
jge
xor
into
sbb
xor
hlt
pop
ljmp
add
sti
mov
stc
and
mov
dec
mov
dec
jle
test
stos
out
mov
or
ret
js
xchg
aas
cmp
cmc
mov
cli
jg
push
sbb
aad
ljmp
mov
add
lahf
add
xor
pop
cltd
push
fs
insl
jmp
cwtl
int3
inc
aam
pop
pop
cmp
pushf
sbb
cmp
in
leave
jns
cmp
sbb
adcb
and
mov
ja
bound
sub
fdiv
mov
cwtl
outsl
jecxz
jns
cld
in
pusha
adcb
push
pushf
pop
scas
jae
ds
inc
and
popa
ljmp
xor
cmpsb
flds
xor
mov
pop
xor
and
loop
addl
xchg
sub
into
lds
jmp
gs
or
push
jmp
sahf
aam
sbb
add
int3
cltd
mov
cmpsl
popf
push
xlat
jl
inc
roll
std
lcall
outsb
or
dec
mov
push
fmull
jle
mov
test
pop
add
sub
lcall
sub
mov
fst
imul
movsb
shr
ret
mov
call
mov
mov
jg
fldt
int3
in
xchg
loop
movsl
adc
lds
lods
dec
xor
add
aad
imul
pop
mov
les
mov
dec
mov
fidivs
bound
dec
js
sbb
sub
adc
mov
iret
adcl
mov
or
lret
or
je
std
into
add
out
dec
sub
pop
lods
arpl
dec
xchg
adc
dec
mov
out
mov
cli
adc
cmp
std
pop
mov
loop
fbstp
dec
aad
mov
es
xorb
ret
mov
pop
push
add
mov
push
inc
adcl
fs
lea
dec
jle
and
inc
mov
hlt
adc
mov
ret
arpl
mov
rolb
add
andl
pop
cli
in
pop
jl
dec
pop
push
hlt
xchg
sub
xchg
jp
push
inc
out
ret
mov
insb
aad
inc
cmc
mov
mov
insl
push
push
xchg
mov
jle
sub
inc
sub
jl
clc
dec
call
sub
jl
jnp
add
adc
jo
sti
add
das
dec
cmp
rol
xor
or
mov
fcomps
cmp
insl
pop
cmpb
mov
sub
mov
add
repz
lock
or
popf
mov
add
or
stos
mov
js
mov
add
and
in
idiv
nop
inc
out
mov
xchg
movsb
test
fsub
cmp
add
inc
aaa
stos
or
out
and
adc
xor
andb
scas
mov
call
jne
sbb
fistl
call
stos
loop
pop
mov
and
out
or
cmp
cwtl
add
sbb
sbb
add
test
movsb
mov
inc
mov
lods
mov
fnstcw
mov
jg
les
mov
fadd
jecxz
outsb
jecxz
push
test
pop
mov
subb
inc
mov
push
imul
add
shrb
les
jmp
adc
add
and
cmp
std
mov
add
mov
fs
inc
add
cli
mov
decb
std
mov
scas
in
shl
jl
shlb
mov
jg
shrb
repnz
mov
sub
notb
rorl
pop
pop
mov
mov
mov
add
es
insl
int3
and
inc
das
push
push
leave
dec
cli
and
push
iret
pushl
adc
dec
dec
pop
out
loop
incl
ja
jns
sub
jecxz
jns
test
cmpsb
xchg
mov
sahf
imul
adc
mov
mov
xor
adc
pop
cs
aaa
sbbb
ljmp
rclb
movsb
xchg
pop
sar
cs
xchg
pop
and
stos
sbb
jmp
and
and
insl
push
mov
xor
or
or
es
pop
mov
fildl
data16
xchg
jl
sub
jbe
pop
pusha
jns,pt
hlt
aad
js
jb
fsub
lcall
into
jb
xor
push
adc
sbb
mov
daa
mov
sar
rol
push
addw
adc
pushw
sahf
shl
xchg
xor
mov
inc
jbe
cmpsb
adc
and
dec
pushf
sbb
push
addr16
outsl
cwtl
mov
push
add
stos
ja
mov
dec
mov
mov
sub
mov
pusha
ja
ss
data16
add
push
fdivrl
pop
std
mov
lcall
push
aas
fcompl
subl
loopne
addb
fdivl
shll
cs
sti
pop
pusha
roll
outsl
mov
out
jb
aam
pusha
cmp
insl
out
leave
les
inc
test
pop
cmp
out
add
mulb
mov
pop
loopne
mov
mov
mov
mov
xchg
xchg
jnp
cmc
es
push
pop
cld
inc
outsb
push
push
inc
pop
dec
add
jmp
and
lods
or
pushl
pusha
stos
adc
aad
pop
loope
outsl
or
push
test
push
into
cmpsb
jnp
into
clc
lcall
mov
pop
fcoml
adc
loopne
lock
sbb
add
arpl
in
movb
and
das
adc
dec
cmp
and
scas
test
iret
mov
incl
and
leave
repnz
jnp
dec
jle
jg
stos
sbb
imul
cmp
push
cld
fbld
or
adc
add
fst
pop
push
push
call
mov
adc
and
int3
xlat
mov
js
jp
rcrb
inc
dec
imul
push
jne
je
add
jp
stc
and
frstor
push
xchg
loopne
fdiv
ljmp
mov
test
add
push
clc
pop
mov
and
mov
aas
push
imul
sbb
xchg
mov
ljmp
shlb
sub
mov
push
outsb
sbb
sbb
mov
xchg
or
mov
daa
push
fwait
cwtl
std
enter
sbb
mov
push
sbb
add
arpl
pop
icebp
dec
movsl
cmp
lods
cmp
clc
pop
xchg
or
testl
inc
dec
ret
adc
stos
icebp
mov
jnp
and
scas
test
xchg
add
int3
pop
jne
iret
jno
dec
pop
in
and
jecxz
jo
cli
lods
shl
xchg
js
cmp
lret
icebp
xchg
testb
decb
sar
jp
les
loop
test
mov
faddl
mov
lock
bound
test
aaa
sbb
pushf
add
in
stos
lods
add
sub
in
and
add
pop
sub
jmp
rolb
insl
xor
aam
add
push
lods
xchg
clc
mov
or
mov
or
mov
mov
test
add
outsb
dec
add
mov
add
das
mov
sbb
sub
ret
in
rclb
enter
lcall
pop
jb
xchg
add
add
mov
mov
test
popa
adc
cmp
cld
sbb
rorb
cmp
scas
mov
push
fnstenv
out
xor
jb
dec
je
es
add
lret
cmp
icebp
mov
ds
addb
push
add
pop
aam
xchg
mov
dec
add
adc
imull
push
sbbl
sahf
clc
jno
jg
addb
mov
lcall
lret
cmp
jbe
adc
and
add
pusha
insl
mov
mov
stc
fdivs
or
fsubs
sahf
lcall
add
adc
adc
ja
das
jb
dec
xchg
lret
push
lahf
popf
cmpl
sub
inc
js
cmpsb
jae
mov
cld
incl
jno
push
daa
xchg
incl
lahf
outsb
lods
mov
data16
pop
or
xor
sub
add
push
jns
out
hlt
lret
fsubs
in
scas
int3
dec
dec
sbb
push
cmp
xchg
test
test
pop
pushf
rcrb
cli
and
test
in
push
adc
call
sbb
leave
int
outsl
jge
and
add
cld
bound
std
and
pushf
mov
enter
mov
or
jb
fwait
mov
insb
inc
xor
add
add
nop
in
cmc
mov
rep
or
fxch
imul
fdivl
jo
pop
push
in
mov
adc
dec
jp
mov
push
jg
xchg
int
or
adc
std
jecxz
xchg
xor
push
loopne
sbb
sbb
scas
inc
stos
scas
adc
inc
in
dec
jb
fildl
xchg
xchg
test
xchg
fcoml
push
rcl
pop
movsl
scas
in
cmp
push
loope
fwait
mov
add
loope
pushf
adc
add
fistl
add
and
inc
lock
lea
fadds
dec
mov
shrl
fsubrp
or
xchg
cmp
fbstp
xchg
jp
int3
or
push
fisttpll
push
inc
ja
aam
insb
hlt
out
call
fwait
inc
or
xor
sub
cli
mov
pop
xlat
ret
cmp
ljmp
mov
mov
cld
ds
loop
jmp
je
pusha
pushf
mov
stc
jbe
or
fildll
imul
mov
add
xchg
adc
negb
inc
push
dec
nop
and
push
imul
test
dec
push
add
cmp
mov
cld
scas
mov
test
xor
dec
pop
ljmp
xor
push
pop
bnd
xor
sbb
jbe
lods
and
push
call
repz
sahf
adc
out
cwtl
arpl
add
aam
sub
fdivrl
shlb
bnd
in
idiv
test
inc
adc
daa
test
xchg
push
into
les
mov
popf
mov
lods
ss
cmp
xorl
push
loopne
and
mov
fbstp
xor
mov
or
inc
lods
cwtl
jns
cmp
jg
cmp
hlt
out
faddl
fisubs
pop
js
jmp
add
xchg
jb
idivb
mov
insb
and
push
movsb
xchg
data16
int3
stos
ss
xchg
rclb
xchg
mov
xchg
scas
sub
add
testb
mov
test
and
add
lock
inc
cmp
mov
les
addl
lea
andl
push
adc
fidivrl
cs
bound
mov
xchg
and
orb
incl
sbb
ret
fdivrl
pop
subb
in
pushf
nop
mov
cld
and
mov
lret
push
mov
std
std
filds
mov
push
pop
scas
cmp
stos
aaa
insb
pop
stc
dec
test
adc
movsl
xchg
xchg
mov
aad
fdiv
je
dec
aam
dec
in
mov
jmp
push
leave
sub
mov
or
mov
xchg
lods
fldl
mov
mov
mov
mov
adc
sub
add
stos
mov
fistpll
mov
cmp
je
add
iret
into
test
jb
icebp
ljmp
jo
dec
sbbl
xchg
cwtl
sbb
or
adc
mov
mov
pop
inc
insb
scas
ret
sub
lcall
fadds
mov
mov
decb
cld
jmp
es
addr16
jl
and
mov
cmp
into
push
adc
mov
xor
lock
pop
clc
jno
push
sub
lahf
rolb
push
add
loope
add
cmp
or
push
fiaddl
push
icebp
xchg
mov
inc
mov
sbb
cmpsb
push
xor
insb
loopne
aas
lcall
lock
push
sahf
jg
pusha
mov
negl
dec
aaa
lds
xor
sahf
call
add
xor
pop
pop
push
js
ss
add
jl
add
sbb
int
in
sbb
loopne
mov
dec
jnp
add
lock
inc
xchg
mov
js
rorb
cmp
ja
jmp
xchg
jb
ljmp
jg
pusha
xchg
sbb
fdivrl
lret
cmp
fldcw
cmp
xor
sbb
add
cmc
scas
push
in
call
mov
add
inc
movsl
cltd
mov
int
imul
ja
jo
jecxz
cmp
sub
mov
mov
das
in
enter
mov
adcb
sbb
inc
push
dec
cmp
mov
dec
adc
pushfw
or
stos
clc
loopne
call
cmpl
test
das
xchg
ljmp
mov
push
pop
loopne
jg
jle
or
jp
dec
loope
cli
scas
aas
adc
sbb
lock
xchg
lahf
adc
mov
push
sbb
imul
mov
test
jp
inc
add
ss
inc
or
cmp
ljmp
xor
outsb
nop
add
loopne
bound
mov
inc
mov
and
inc
mov
mov
inc
or
mov
mov
push
outsl
std
add
scas
push
jmp
xchg
sub
sti
sahf
loop
in
inc
and
adc
pop
inc
mov
sbb
sti
jp
ljmp
sub
pop
mov
add
stos
mov
or
in
cld
js
mov
pop
cmc
test
je,pt
scas
pusha
pop
dec
push
or
nop
ror
jmp
adc
je
mov
stos
aam
ljmp
dec
loope
push
pop
subl
in
or
mov
bound
push
icebp
outsl
adc
push
mov
fcompl
jb
cld
mov
add
adcl
ficompl
xchg
push
sar
lods
or
data16
jo
add
mov
fbld
adc
pop
lcall
lods
loopne
sub
and
xbegin
inc
dec
das
pop
jecxz
push
stc
mov
lret
push
push
arpl
jae
mov
scas
addr16
mov
add
mov
out
aad
fldl
xlat
pop
or
xchg
mov
aaa
adcb
cwtl
mov
push
js
mov
inc
and
cli
xchg
js
loope
xor
fcmovb
inc
mov
mov
popa
in
faddp
jecxz,pn
shl
int3
aam
insb
stos
mov
cmp
pushf
sarb
flds
test
sbb
xor
add
popf
dec
mov
pop
clc
sbb
fdivrs
xchg
or
gs
cmp
xor
nop
xor
jae
add
add
jbe
out
cmc
insl
adc
lods
or
mov
sbb
or
inc
fcmovbe
push
shrb
mov
fadds
add
cmp
cmpsl
sbb
add
mov
ret
cmp
sbbb
sbb
aas
and
outsb
add
sub
xchg
dec
fldenv
inc
cmc
cmpsl
daa
pop
nop
cmpb
mov
outsl
sbbb
jecxz
xor
mov
hlt
movsb
dec
dec
rcr
mov
xor
add
call
jecxz
std
pop
arpl
mov
nop
xchg
fnsave
ljmp
outsb
incl
into
push
mov
xchg
addr16
shrl
int
rclb
jmp
jmp
xchg
loopne
rolb
testb
adc
xchg
push
xor
andl
inc
inc
ss
jmp
pop
ja
add
dec
jo
mov
aad
jbe
fs
icebp
push
les
add
aas
mov
jmp
push
inc
mov
dec
in
inc
pop
inc
pop
test
jmp
mov
iret
nop
out
stos
pop
pop
and
mov
mov
lods
mov
fmull
adc
push
add
adc
mov
or
or
loop
cmp
adc
mov
sti
sbb
gs
sbb
xor
ret
jle
add
and
int3
repnz
mov
jg
xorb
popa
loopne
push
out
sbb
mov
loop
sub
std
or
clc
sub
fidivl
push
aaa
mov
dec
jecxz
jle
cmp
add
xchg
jecxz
xchg
xchg
sbb
mov
aas
mov
xchg
add
push
notb
pop
je
lret
ret
mov
shl
in
xchg
jle
enter
jecxz
sbb
mov
test
out
subps
andl
lcall
sbb
push
mov
cmp
es
mov
je
dec
sub
jg
icebp
jg
dec
inc
push
sub
sahf
andl
sti
cmp
adc
and
nop
loop
ficoms
pushl
ret
stc
inc
mov
aad
negl
sbb
cmp
mov
test
dec
iret
movsl
jg
mov
int
inc
sub
or
dec
enter
frstor
aad
or
or
sbb
mov
es
insl
sbb
adc
cmp
dec
pop
dec
xchg
movsl
subl
sbbl
mov
pop
mov
popf
arpl
ret
je
and
iret
push
shrl
test
imul
into
add
fstpl
nop
fcmovnb
test
std
cld
add
cmpsb
insl
sbb
or
fcmovb
incl
aad
sbb
aas
cmp
stc
mull
adc
pop
cmc
sbb
out
mov
dec
ss
clc
adc
pushl
sbb
enter
outsl
jge
test
jl
outsl
or
mov
int3
dec
in
xor
pop
push
fimuls
dec
int
mov
push
std
jge
pop
mov
lods
xchg
sub
inc
sti
cmp
sti
or
xor
add
cmp
push
mov
pop
icebp
test
imul
std
ja
dec
leave
dec
test
inc
daa
movd
push
mov
stos
fldt
pop
xor
dec
flds
xor
cmpsl
fildl
pop
je
sbb
inc
test
scas
xor
repz
mov
xchg
mov
mov
mov
test
push
xor
sub
pop
xchg
out
decl
stos
pusha
fmuls
insb
repnz
sbb
cmp
dec
stos
mov
mov
dec
ret
inc
clc
incb
int
fwait
incl
rcrl
fldcw
cmp
xor
incl
fisubrl
into
test
xor
pushf
mov
fadds
inc
add
inc
scas
sbb
sahf
jl
fs
pop
xchg
sbbl
pop
mov
jle
xchg
push
ds
sub
push
jmp
mov
clc
mov
xor
add
mov
flds
int3
and
push
out
mov
mov
dec
clc
sbb
mov
mov
sbb
adc
mov
scas
xor
loopne
fucomi
xor
push
movsb
mov
lods
jg
pop
rorb
add
push
push
cld
test
sub
test
adc
sbb
cmp
mov
xchg
xor
testl
mov
lods
mov
mov
jno
push
fildll
ficomps
and
push
jmp
push
jbe
fucom
push
insl
push
push
popa
cmp
sub
push
pop
xchg
mov
mov
lahf
fdivs
cmpsb
inc
mov
faddl
loope
sub
jae
les
jg
aad
mov
inc
stos
xchg
int
outsl
mov
push
sbb
push
and
pop
outsl
mov
push
push
jbe
movsb
call
cmpsb
in
cwtl
xchg
push
pop
mov
pop
dec
xchg
cwtl
test
sarb
cmpxchg
mov
and
add
or
fiaddl
mov
jg
add
and
in
ds
xor
and
insl
rorb
sub
out
sti
imul
pop
mov
add
cmp
out
dec
pop
movsb
pop
xor
jl
adc
cmp
push
ljmp
out
pop
jg
mov
mov
push
mov
jmp
jb
shl
insb
xchg
insl
sti
sarl
or
adc
mov
add
add
cmp
scas
mov
jl
into
cmp
out
inc
cmp
adc
add
js
mov
ret
enter
shlb
push
pop
jg
inc
lock
outsb
cmp
es
jg
jo
pop
xchg
loopne
fwait
jae
jne,pt
sbb
jne
xor
xchg
xor
adc
jmp
sbb
xchg
rolb
mov
cmc
jo
test
inc
movsl
pop
jo
loop
or
and
sbb
inc
bswap
ret
out
pop
gs
jnp
xor
dec
shll
aad
ret
mov
jg
fwait
imull
sbb
pop
push
sahf
inc
out
fs
hlt
pop
push
and
aas
pop
rcrl
pop
sbb
adc
mov
and
dec
loopne
jbe
push
dec
inc
sub
mov
imul
fimuls
enter
jle
stos
loope
stos
mov
mov
cmpsl
sbb
test
add
iret
inc
mov
sahf
popa
or
and
sub
popl
xor
dec
jg
mov
push
pop
in
add
xor
jo
push
loope
adc
adc
lahf
xor
cld
or
and
hlt
das
movsb
pop
leave
jle
sub
xchg
aam
xor
ss
cld
aas
jo
mov
ret
out
popf
xor
aam
mov
dec
fdivrl
mov
sub
push
add
inc
jbe
lds
roll
jne
test
scas
mov
adc
push
or
jno
inc
sti
inc
lock
mov
or
lcall
aaa
xchg
adcb
jge
or
push
inc
mov
pushl
sbb
xor
push
push
or
outsl
sub
push
or
add
push
outsb
aad
push
rol
sbb
and
cmp
lret
aad
sbb
or
clc
adc
push
loope
push
stos
push
mov
repnz
sub
xchg
push
mov
jne
popa
roll
incl
push
pop
cwtl
fdivp
mov
or
xchg
mov
ret
mov
fisttpl
imul
xor
push
push
add
add
add
or
daa
push
jp
jbe
aam
jmp
push
or
or
sub
stc
adc
sbb
test
repnz
sub
rcl
push
jae
jne
sub
jle
lds
iret
clc
cltd
sbb
lods
pusha
rolb
cmpsb
inc
out
pop
mov
mov
or
mov
push
dec
cmpl
inc
mov
xor
xlat
sar
aaa
add
dec
dec
mov
jne
add
sti
xorb
add
xor
out
mov
rolb
pop
and
dec
pop
push
push
popa
xor
adc
dec
stos
nop
add
bound
outsl
clc
mov
add
cwtl
leave
add
mov
lret
cmp
insb
in
sub
lret
xchg
nop
ljmp
and
mov
push
cs
lret
pushf
add
sbb
adc
cmp
cmp
jno
jle
outsl
clc
into
adc
inc
loope
out
mov
loopne
inc
mov
xchg
hlt
imul
lcall
mov
mov
iret
push
dec
mov
dec
test
push
sbb
in
daa
fs
cmc
adc
test
push
fadd
jmp
cmp
xchg
fimuls
jl
inc
pop
xor
mul
enter
mov
lods
mov
push
sbb
add
mov
shll
mov
mov
das
call
xchg
add
fwait
mov
xor
xor
cmp
cmp
addr16
xlat
jg
lods
sub
adc
jl
movsl
ja
aas
rolb
push
imul
cmovge
out
adc
scas
int
test
dec
out
push
or
adc
xchg
push
add
push
push
leave
addr16
incl
push
mov
test
push
or
dec
ret
add
lahf
inc
insb
jae
xor
call
jl
push
or
in
into
cmpsb
outsl
mov
aam
cmp
push
inc
sub
fs
test
sbb
imul
pop
int
adc
pop
insb
cmc
adc
cld
popa
sbb
sar
push
mov
daa
lock
jle
js
ret
mov
shll
cld
jecxz
je
jns
in
jo
push
sbb
push
pop
add
xor
jmp
pop
pusha
stos
cld
jle
scas
loopne
into
dec
xor
xchg
xchg
mov
mov
ljmp
adc
stos
rolb
mov
mov
stos
pop
inc
fsubl
mov
loop
mov
nop
icebp
loop
decl
jno
mov
jne
mov
xor
inc
add
jbe
push
test
in
iret
inc
adc
repnz
jns
push
sahf
rcr
mov
add
call
push
push
imul
into
js
mov
incl
or
testb
aam
jb
das
pop
jp
and
mov
fiadds
inc
or
ljmp
fisubrl
mov
lds
add
adc
mov
adc
insb
pop
loopne
insl
ja
jns
mov
loopne
loope
adc
in
ret
outsb
mov
lock
cmp
nop
mov
sub
mov
fsubrl
add
sarb
test
jbe
pop
cmp
push
push
jo
add
mov
dec
call
add
bound
icebp
out
inc
mov
fs
fsubr
test
sub
andb
jg
ss
cli
sub
or
sbb
pop
int3
mov
int3
jmp
hlt
test
clc
cmp
mov
pop
adc
mov
dec
cmpsb
testl
xor
push
xchg
adc
inc
out
xor
dec
adc
in
pop
leave
dec
insb
jle
xrelease
sar
stos
jle
sbb
add
into
mov
mov
adc
push
cmp
add
loope
dec
dec
clc
data16
fildl
push
daa
scas
das
xor
mov
jle
fcompl
loop
test
mov
in
sbb
add
and
push
lods
inc
fwait
inc
cld
mov
cmp
xor
push
jo
mov
bound
sbbb
std
cmp
inc
fidivs
push
push
adc
dec
add
sbb
pop
lods
dec
pushf
nop
lret
aam
enter
adc
mov
jnp
mov
outsl
mov
push
add
int3
cli
cmp
add
or
xchg
cs
mov
cmp
ret
xor
pop
sbb
shlb
outsb
inc
cwtl
or
adc
push
push
xor
fwait
mov
jnp
pop
std
jecxz
xchg
movsl
sti
jnp
ret
out
lahf
popf
mov
push
xlat
addr16
xchg
adcl
xchg
icebp
push
jmp
mov
cmp
aam
mov
divb
add
clc
dec
add
xchg
sahf
sbb
lods
shrb
outsb
mov
xlat
cmp
imul
sbb
ret
mov
or
pop
cmc
subb
pop
xor
sar
in
bound
out
les
mov
push
in
nop
add
cmp
pop
lcall
js
enter
testb
mov
adc
dec
clc
jle
mov
sbb
pop
fidivrl
fwait
jp
inc
cltd
ds
sub
push
xchg
lret
jo
inc
or
fisubrs
sub
daa
test
aas
jle
cmp
dec
das
adc
mov
rcll
insb
jp
cltd
loope
fsubs
push
or
stos
in
xchg
add
ljmp
push
xchg
cltd
xchg
jbe
or
push
mov
push
inc
fildl
push
mov
bnd
jg
lock
xchg
add
ret
jb
es
das
dec
je
push
addl
jl
push
gs
cli
sbb
aas
inc
je
pop
cmc
jg
push
cmp
out
movsb
mov
pop
jnp
mov
mov
mov
xchg
cli
push
mov
scas
cmp
gs
sub
dec
cmp
cltd
js
dec
bound
cwtl
std
or
in
gs
ficompl
mov
int3
enter
stc
push
cltd
mov
push
test
ja
inc
inc
add
ret
and
xchg
mov
fcomp
stc
loope
addb
mov
bound
fisubrs
push
inc
mov
gs
push
das
push
xor
std
pop
fwait
cmp
add
jo
js
mov
cmpsl
jg
loop
cmpsb
sbb
mov
jecxz
mov
subb
rclb
dec
pop
in
das
shrb
inc
int3
shrd
jne
clc
add
mov
das
je
aam
js
andl
push
add
sahf
xchg
dec
scas
stos
call
sbb
jp
pop
ds
ss
stc
aam
add
jo
inc
pusha
aad
mov
testb
nop
faddl
enter
jg
cld
in
aaa
test
sub
adcl
add
dec
or
add
sub
decl
hlt
fldt
cltd
pop
jp
push
cmp
adc
xorb
clc
mov
popa
lret
jecxz
push
lock
mov
and
cmp
jmp
enter
jno
push
mov
adc
sbb
loope
stos
inc
ljmp
add
and
movsb
jae
xchg
add
out
push
je
push
pop
sbb
fdivp
mov
fmulp
mov
jo
fdivrs
fs
and
das
jbe
fcomps
movsb
cwtl
ja
outsl
ljmp
pop
pop
scas
xor
test
aam
movb
push
imul
add
inc
fisttps
mov
cmp
jmp
stc
hlt
push
sbb
jmp
jns
cs
cli
ljmp
subb
jns
sub
mov
lea
shrb
cmp
pop
xor
leave
pop
cwtl
pop
cld
icebp
arpl
push
adc
and
xchg
push
cs
xor
scas
cld
out
ljmp
test
adc
sub
xor
add
imul
xchg
push
xchg
or
and
or
in
add
sub
add
test
out
arpl
out
and
xor
enter
or
cld
mov
icebp
mov
insb
cmp
shrb
sbb
mov
mov
js
lahf
out
lock
push
jno
mov
cli
scas
pop
cmp
lea
stc
pop
dec
out
lar
sub
add
xchg
mov
dec
outsb
pop
ja
add
push
es
add
adc
push
xor
mov
mov
sbb
mov
or
or
mov
test
jno
mov
sahf
in
adc
clc
mov
es
ss
testl
dec
das
rcll
fcoms
pop
jle
mull
pop
mov
lods
mov
mov
jmp
and
test
in
enter
ja
pop
inc
lret
dec
dec
sub
fwait
push
pop
pop
push
cld
test
xor
fwait
loopne
loopne
lret
add
cmp
std
mov
dec
addr16
aaa
cld
cwtl
test
mov
mov
or
mov
mov
stos
stos
mulb
xor
std
outsl
js
arpl
add
sub
lret
push
inc
pushf
push
cltd
mov
sub
mov
fidivl
ret
and
les
fstp
clc
pop
jmp
outsb
dec
mov
mov
dec
adc
mov
push
mov
pop
add
icebp
mov
clc
into
js
out
out
mov
test
jo
add
and
mov
cli
jmp
add
xlat
jo
inc
ret
xorl
pop
mov
icebp
lods
push
lds
mov
mov
add
ret
add
mov
add
test
xor
lods
adc
mov
add
push
xchg
in
mov
ret
nop
xchg
cmp
fisubs
mov
popa
stos
dec
rolb
lret
cmp
cmc
fisubl
add
out
shlb
and
in
cltd
add
fimuls
sub
out
dec
xchg
and
add
mov
fiaddl
xlat
dec
pop
mov
scas
shrb
loopne
and
std
jno
cmp
outsl
mov
js
push
pusha
add
enter
adc
cmpl
fldenv
aaa
hlt
jg
xchg
dec
or
add
mov
outsl
add
das
leave
sub
lcall
push
lcall
test
mov
adc
std
or
mov
popf
filds
jno
decl
adc
dec
push
pop
mov
pop
mov
or
pop
insb
fdivrl
add
dec
mov
mov
pop
mov
fisubl
add
icebp
ljmp
and
xchg
pop
or
mov
mov
mov
adc
movb
in
clc
mov
cmp
lret
sbb
push
push
adc
outsb
add
jle
outsl
push
xchg
jb
push
sub
jbe
lret
xchg
jle
pop
shlb
in
push
cld
cwtl
inc
hlt
stos
push
adc
cmp
into
xor
bound
and
addb
cmp
xorl
jns
cmp
sbb
mov
push
jb
fiaddl
cmp
sbb
mov
jbe
mov
xor
adc
call
xor
mov
pusha
push
nop
std
cmp
cmp
mov
add
es
incb
mov
push
test
jno
repnz
ss
add
sbb
pusha
sub
add
push
addb
out
jnp
sbb
mov
pop
xchg
sarl
cld
pop
sub
xchg
repnz
push
lods
mov
loope
loop
leave
mov
inc
push
inc
cs
mov
pop
out
push
jae
sets
ret
adc
xchg
fistl
lock
popl
loop
cmp
mov
fisubl
outsb
fnsave
js
les
shlb
faddl
jnp
mov
rolb
xor
clc
pop
ljmp
pop
mov
add
rcll
inc
mov
inc
push
add
test
mov
pop
in
mov
add
ficomps
clc
add
dec
movsb
idivb
add
dec
sbb
jno
dec
or
mov
icebp
lret
out
in
pop
pop
popl
sub
icebp
dec
ja
clc
mov
sub
xlat
testb
mov
call
cwtl
lods
xchg
xor
cmp
cmp
mov
scas
push
lds
insb
fs
ret
popf
add
lcall
sub
mov
xor
ja
int3
mov
add
dec
mov
add
push
push
push
pop
pop
scas
aad
gs
ljmp
in
jmp
inc
sub
and
mov
pop
inc
mov
stos
icebp
in
and
jp
lcall
and
mov
mov
mov
jmp
or
enter
das
mul
std
loop
scas
or
incl
and
in
movsl
outsb
enter
sub
mov
cmc
adc
add
adc
loopne
sti
ret
and
sub
lahf
jecxz
adc
loope
out
fstps
mov
mov
mov
cmp
push
add
pop
sbb
nop
lret
int
loope
call
sub
nop
notb
loop
sub
popa
out
add
aad
stos
fwait
push
or
push
jle
ss
xchg
or
jp
xchg
or
cs
push
inc
mull
loopne
jnp
push
jbe
mov
mov
dec
mov
push
push
fisttpll
dec
les
adc
stos
pop
test
dec
jecxz
add
mov
inc
subl
or
xor
decl
adc
cld
and
fisttpll
popa
js
inc
clc
gs
js
sbb
lret
call
pop
sbb
subl
dec
lods
cld
add
es
mov
xor
add
xchg
bound
loopne
jae
push
xor
clc
cmpsl
adc
movsb
jecxz
icebp
push
shll
shrl
xor
mov
fucomp
decl
jbe
sarl
push
stos
add
rorb
xchg
mov
mov
jmp
and
lock
inc
add
xchg
imul
daa
aaa
pop
icebp
icebp
ret
movsb
sete
sbb
je
pop
mov
pushf
cmp
mov
jge
jo
daa
adc
lods
cld
mov
ret
or
xor
fiaddl
out
add
orl
sbbl
xor
decb
cmc
push
ljmp
xchg
pop
inc
mov
test
xor
fmull
imul
xor
adc
mov
les
cmp
sbb
lods
mov
out
imul
xlat
add
js
inc
jns
cmc
sub
jmp
push
sbb
subb
repz
nop
fcomps
mov
sahf
ret
push
dec
xor
ret
lods
push
mov
call
test
dec
xor
cmpsl
mov
enter
push
and
cmp
sub
pop
or
xchg
add
adc
lret
cs
fstpl
js
insb
jb
dec
ds
mov
adc
es
cmp
mov
xorl
dec
push
xor
and
xlat
lcall
filds
stos
data16
jo
adc
sbb
adc
adc
imul
xchg
out
incl
loopne
ja,pt
mov
push
add
mov
mov
push
enter
ss
popa
mov
xchg
sbb
call
inc
fs
cmpsb
cmpsb
incl
mov
sbb
jbe
sub
add
popa
movsl
hlt
or
in
popa
daa
stos
add
mov
mov
and
ds
pop
subb
clc
adc
sub
jecxz
loop
test
cmp
mov
inc
push
fistl
lock
or
adc
mov
xor
sub
cmp
mov
add
mov
ljmp
cmp
jle
movsl
nop
inc
add
pop
gs
out
mov
push
adc
mov
adc
and
xchg
loope
shll
cmp
push
push
nop
ds
in
enter
shrb
scas
xlat
out
mov
xor
cmc
sbb
mov
jmp
cmp
push
dec
addr16
lods
mov
cld
jg
pop
sub
mov
cmp
outsb
fdiv
or
or
fistps
in
cmp
cwtl
shr
adc
das
dec
repnz
mov
jnp
nop
jecxz
mov
add
cmpsb
decl
data16
xor
pop
addb
add
jl
cs
cwtl
push
jl
inc
add
cmp
pop
fadds
and
push
xchg
pop
shrb
pop
fdivr
test
mov
icebp
arpl
dec
ljmp
adc
lcall
mov
push
je
pop
and
pop
add
fildll
outsb
jb
push
push
xor
xchg
add
sbb
iret
insb
inc
insl
mov
icebp
add
adc
mov
push
ss
into
jl
daa
push
push
mov
pop
push
test
aaa
cli
dec
pop
mov
clc
jae
out
adc
xor
scas
mov
adc
movsb
xchg
loopne
cmp
sti
push
sbb
stc
or
xor
or
test
loop
ret
and
enter
ja
sub
loop
ljmp
jg
mov
xchg
es
into
flds
fst
jg
jp
push
outsb
cmp
cli
div
sub
mov
mov
sti
push
rcrl
in
cld
lods
jo
inc
test
js
adc
lret
lahf
gs
lock
test
or
cmp
pop
lcall
sub
cmpsb
mov
push
enter
les
and
push
ljmp
jno
je
push
shl
adc
cld
xchg
adc
xor
je
test
aaa
cmpsl
gs
xchg
and
mov
mov
jl
or
push
mov
mov
enter
ret
icebp
imul
clc
mov
daa
add
into
and
lcall
movsb
xchg
scas
popf
mov
ret
jp
fiadds
push
add
mov
negb
sub
mov
arpl
jno
push
enter
sbb
push
shrb
and
shll
pop
cmp
inc
ret
filds
add
loop
mov
sub
ficomps
xor
in
jle
out
push
std
pop
pop
and
adc
jmp
or
sarl
clc
lcall
xchg
movsl
mov
xlat
jl
add
out
arpl
popa
sub
jne
push
mov
sub
insl
sbb
jg
sub
jmp
lods
add
mov
xor
push
sbb
mov
push
jge
jns
mov
add
cmpsb
mulb
xchg
pop
aad
and
and
dec
adcl
xchg
adcb
fsubl
jne
icebp
jbe,pt
icebp
lcall
data16
or
shlb
lods
dec
mov
out
pop
lods
nop
inc
cmp
mov
pushl
adc
jg
mov
repz
push
iret
sti
fwait
push
xor
fnsave
sub
dec
int
xchg
push
add
and
out
notl
mov
enter
sub
xchg
add
cs
and
jle
mov
jp
imulb
popa
and
mov
add
and
pop
xchg
dec
icebp
push
shll
test
sbb
or
lods
sarb
adc
adc
mov
mov
mov
leave
or
inc
imul
and
iret
jl
mov
loop
xchg
sahf
mov
repnz
das
test
les
dec
ret
mov
hlt
clc
mov
cld
sbb
cmp
insb
mov
decl
push
insl
and
imul
jmp
jp
shr
add
js
dec
mov
pop
sub
push
bound
jnp
repnz
adc
cmp
sahf
out
cmp
fdivrl
adc
decl
xor
mov
push
repnz
pop
and
sti
mov
mov
mov
dec
cmp
into
xchg
or
aam
decl
add
enter
test
xor
add
jae
sbb
push
test
call
loopne
ljmp
mov
push
cld
mov
xchg
fistpll
ret
add
adc
and
jo
adc
rdmsr
jecxz
lods
and
test
jno
cli
pushl
cwtl
cmp
mov
call
or
jnp
cltd
clc
sub
ljmp
xorb
push
or
cld
dec
data16
and
into
push
hlt
and
push
enter
std
mov
divl
lea
add
jne
adc
insl
or
dec
pop
jp
inc
test
cmpsl
ljmp
mov
jo
dec
std
mov
out
mov
dec
lock
gs
dec
fwait
sahf
cmpsb
and
or
test
xchg
dec
fcomps
ftst
pop
xor
pop
mov
inc
mov
fistps
cld
cmp
push
movsb
addr16
inc
sti
fucomip
int
cmp
sbb
sbb
dec
dec
pop
rolb
ljmp
fisubs
sub
and
inc
je
pop
addl
dec
jb
sahf
push
xorb
pop
aas
stos
fcomip
push
jmp
cmpsb
and
out
call
pusha
and
add
fcmovu
sbb
lcall
mov
call
imul
filds
and
add
pop
pop
outsb
lods
leave
jo
cwtl
sub
push
pop
cmc
adc
out
xlat
mov
je
movsl
sub
sub
dec
add
loope
lret
pop
scas
fsubl
loopne
lods
xor
enter
adc
dec
jmp
mov
mov
roll
das
mov
outsb
mov
mov
js
clc
cli
int
lods
cmpsl
out
leave
sub
mov
mov
imul
clc
addb
jle
adc
call
into
jns
cmp
cmp
inc
push
mov
inc
pop
rorb
add
inc
ljmp
adc
gs
ja
cs
stos
outsb
jge
and
jg
xchg
mov
sarl
outsb
inc
sbb
or
fcompl
inc
add
test
mov
into
in
enter
shll
xchg
xchg
das
jns
mov
faddl
cltd
in
in
cmp
or
mov
js
adc
dec
xchg
xchg
mov
pusha
push
mov
xor
clc
jg
inc
dec
xor
out
in
pusha
mov
aam
xchg
add
imul
push
cmp
arpl
js
icebp
loopne
mov
mov
loopne
mov
pause
pop
mov
js
cmpsl
stos
inc
adc
mov
mov
push
sbb
sub
sbb
mov
cld
inc
sbb
jmp
lret
outsb
stos
clc
dec
in
in
scas
inc
in
add
mov
cmpsl
and
xchg
and
arpl
aam
stos
test
gs
sub
loop
push
or
rclb
add
and
push
mov
pop
add
ljmpw
clc
cmp
pop
jle
mov
fldcw
jo
mov
loop
add
test
in
push
mov
out
sub
mov
inc
or
push
iret
pushf
ds
out
dec
mulb
das
shl
push
lcall
sub
sti
pop
pop
mov
xchg
and
es
pop
enter
outsl
clc
sbb
inc
shll
sbb
adc
and
dec
addr16
mov
jmp
imul
orb
cmpxchg
iret
loop
aad
inc
push
mov
loopne
loopne
iret
sbb
into
add
das
aad
fcompl
les
loopne
inc
push
pop
or
fisubl
sub
xchg
lahf
subb
ret
cmp
sahf
dec
rolb
outsl
push
mov
loop
jl
es
add
sarb
push
sbb
icebp
push
pop
add
pop
nop
mul
push
out
xor
mov
imul
mov
fisttpl
flds
test
inc
mov
ret
imul
es
xlat
paddusb
xchg
jecxz
popl
adc
add
jle
inc
inc
xor
loope
outsl
adc
add
or
mov
pusha
test
push
adc
add
mov
ljmp
lret
js,pn
lcall
sub
and
call
nop
scas
mov
xchg
cmpsb
data16
je
das
mov
into
push
or
fldt
mov
push
nop
mov
push
inc
std
das
mov
bound
ja
in
icebp
jp,pn
rcll
sets
popa
fucomi
aas
jnp
jg
outsl
add
mov
add
iret
xchg
adcl
inc
gs
jb
dec
pop
into
dec
push
inc
rcr
aad
mov
notl
mov
ss
decl
sbb
iret
pusha
dec
clc
lock
std
into
adc
jg
iret
into
popa
inc
lcall
repz
ja
in
push
lret
stos
push
pop
out
dec
lea
scas
fdivs
testl
icebp
adc
jmp
and
cwtl
xchg
jg
add
push
inc
jo
cltd
xlat
inc
pushf
pop
gs
push
sbb
jo
loope
ret
decb
cld
mov
in
xchg
mov
or
hlt
jle
imulb
scas
dec
mov
adc
inc
add
xor
jge
or
fsubs
push
push
push
scas
xchg
ljmp
cmpsb
popa
lcall
dec
sbb
rclb
and
ret
and
ret
xchg
push
sarb
pusha
jbe
cmp
loop
addb
test
and
jmp
int
xchg
jmp
scas
test
lret
in
movsb
outsb
sbb
lds
push
mov
lea
mov
xor
mov
sub
inc
mov
repnz
ret
addr16
loopne
inc
mov
aaa
jl
mov
add
cwtl
and
mov
jmp
sub
pop
xchg
mov
cmp
leave
bound
inc
test
bound
cmp
cmpb
xor
sub
ljmp
aas
adc
inc
push
je,pt
push
xor
and
pop
insl
adc
cltd
outsl
js
lods
imul
loop,pn
jge
data16
gs
addl
inc
sbb
lcall
ss
enter
mov
add
jle
js
rol
mov
add
mov
adc
add
add
aaa
cld
aaa
add
dec
push
out
mov
cmpsb
aaa
inc
adc
insb
xor
cmpsb
lock
dec
sub
and
dec
add
js
add
mov
out
cmp
mov
in
mov
push
mov
xor
lea
cmpsl
mov
xor
sbb
xchg
jmp
mov
push
rorl
js
xor
pop
mov
and
adc
mov
jo
or
or
mov
mov
mov
fs
sbb
and
imul
cwtl
test
fs
outsb
stos
push
fwait
jne
popf
into
pop
add
add
push
pop
inc
add
ljmp
call
sti
xor
mov
shll
xchg
add
imul
push
and
mov
bound
lock
xor
ret
sbb
hlt
das
xchg
jge
fbstp
lcall
into
or
push
loope
sahf
sub
push
mov
inc
sub
push
pop
adc
mov
imul
xchg
xor
fbstp
ja
or
sub
dec
jb
into
adc
or
outsl
xor
jno
inc
dec
add
icebp
adc
adcb
loope
fsubs
mov
inc
cmp
lcall
cli
stc
and
xorb
add
roll
pop
sbb
lds
bound
xor
cmc
les
and
loope
cwtl
cmp
mov
adc
jb
ljmp
jbe
cli
out
fstl
mov
xchg
fcomip
dec
pushf
inc
sahf
stos
stos
and
adc
mov
jo
cwtl
push
cmp
dec
add
ds
outsb
call
mov
ret
test
xchg
bound
nop
repz
xchg
dec
clc
ja
push
mov
sbb
xor
arpl
loopne
enter
movl
sbb
cmp
je
sbb
dec
shlb
pushl
inc
xchg
lcall
sbb
jno
into
insl
xchg
and
sbb
loopne
jge
out
rclb
xchg
rolb
lret
je
adc
add
movsb
push
stc
stc
mov
jb
mov
jae
les
jb
adc
dec
mov
ffreep
adc
in
xchg
and
mov
cmp
lods
mov
pop
push
rcrb
aam
aaa
jmp
bound
cmp
or
fwait
popa
test
or
cmpsl
sbb
mov
mov
jnp
dec
fucomi
insl
movsb
add
jmp
lahf
xlat
lret
mov
cld
sub
in
pushf
mov
mov
les
sub
mov
mov
ljmp
adc
push
ret
jne
jo
cli
jne
add
fidivs
dec
sbb
pushf
shlb
sbb
mov
push
mov
bound
sbb
and
shl
packssdw
or
or
push
adc
cmp
mov
pop
push
mov
mov
jnp
in
das
sbb
mov
add
imul
push
cmp
mov
data16
lcall
push
adc
add
mov
andl
clc
add
stc
jo
inc
sbb
jb
fld
call
std
repnz
mov
lods
icebp
sarb
enter
xchg
and
adc
xchg
pop
stos
ret
mov
mov
adc
les
hlt
mov
and
sub
nop
mov
scas
mov
or
or
rclb
jns
push
jge
mov
in
rcrb
inc
cs
dec
jb
adc
sbb
ret
and
inc
push
xor
cmpsb
mov
pop
push
mov
xchg
aas
push
mov
sbb
or
or
sbb
clc
clc
xchg
sub
shlb
aas
or
mov
sub
sub
add
aaa
jne
les
mov
scas
add
or
fistps
lds
das
and
insl
xlat
jg
and
inc
mov
push
push
inc
sahf
xchg
test
cmpsl
fcmovu
xchg
cwtl
lods
push
shll
mov
mov
pop
mov
stos
cmp
jmp
add
outsb
sbb
push
das
mov
lea
xor
adc
push
dec
mov
inc
gs
push
arpl
aaa
jecxz
add
leave
dec
shlb
pop
push
jg
popf
ror
jo
lret
mov
add
inc
cli
pop
xchg
mov
out
loop
push
push
daa
xchg
addb
lods
pusha
mov
push
pop
insb
jecxz
hlt
xchg
cmpb
mov
mov
mov
mov
adc
add
or
sarb
bound
test
lret
sub
cmc
push
lock
mov
repz
sbb
in
add
jnp
add
lcall
pushf
das
add
mov
inc
std
sbbb
les
sbb
mov
call
and
push
jge
aad
or
and
in
dec
sbb
inc
pop
cmp
and
stos
sbb
xor
fnstsw
outsl
inc
xor
fisubl
add
loopne,pt
clc
sbb
lret
je
pop
mov
nop
test
inc
das
cmp
sbb
je
xor
adc
adc
nop
xor
sbb
popf
outsb
inc
dec
pop
cmp
shlb
hlt
cltd
mov
adc
xchg
dec
sbb
push
loopne
rcrb
mov
sbb
adc
fdivs
adc
mov
dec
cmp
mov
jecxz
sbb
ljmp
in
imul
add
jp
aam
cmpsl
xchg
fistps
jns
sub
inc
add
rclb
dec
lahf
xor
pusha
pushf
por
xor
mov
pop
mov
dec
mov
outsb
bound
sbb
ja
in
dec
std
int3
add
loope
cmpsb
cld
ljmp
mov
inc
add
push
dec
mov
sbb
out
and
loopne
in
mov
divl
push
push
fwait
xchg
mov
insb
mov
cld
testb
cmp
add
cmp
ficompl
mov
data16
xor
sub
pusha
mov
ds
out
jbe
aaa
pop
inc
jbe
icebp
cs
cmc
add
cmp
push
rolb
call
pop
xchg
mov
add
adc
add
and
das
jge
pushf
or
cmp
push
xchg
into
lret
out
cwtl
cwtl
pop
scas
outsl
pop
cmp
int3
imul
das
ret
cli
ljmp
push
xor
or
inc
es
jge
cwtl
lcall
jo
mov
ja
scas
push
int3
mov
xchg
push
jne
out
adc
and
hlt
cmp
ds
daa
dec
push
lock
sbb
adc
jo
cwtl
jle
mov
cmp
push
sbb
xchg
lahf
mov
decl
or
cmp
fstpl
dec
call
je
adc
jbe
pusha
arpl
outsl
fisubrs
hlt
addr16
xchg
loope
scas
fiaddl
xor
jg
xchg
mov
fwait
icebp
shrb
xlat
test
adc
mov
cld
mov
sti
add
lcall
push
dec
inc
out
push
inc
gs
inc
outsb
frstor
cmp
jp
inc
push
lret
xor
movsb
shl
add
lahf
inc
or
adc
pop
std
pusha
push
dec
or
cmp
mov
push
test
mov
add
jg
decb
push
and
sti
in
dec
loope
pop
es
jg
ss
repz
divb
pop
pop
xorb
adcb
int
and
test
push
imulb
je
inc
sbb
add
ljmp
xchg
stc
fdivrl
movsb
aad
or
sub
mov
xchg
int3
roll
test
sub
mov
mov
mov
test
es
test
ret
or
rclb
scas
push
popa
adcl
lock
ror
insl
insw
cmpsb
pusha
mov
jp
decl
movsl
insl
cmp
xor
cld
jle
lods
xchg
push
push
xchg
add
pop
sub
jae
mov
pop
cltd
je
or
data16
jmp
or
addb
jae
adc
jo
clc
lcall
mov
jmp
add
sbb
sub
test
or
repnz
les
jno
dec
lcall
je
mov
rorb
pop
cmc
popf
mov
mov
mov
mov
mov
sbb
push
and
push
aaa
fnstenv
bnd
push
push
dec
adc
je
pop
js
aas
mov
xchg
add
xchg
aas
and
movsb
push
in
pop
push
iret
push
mov
mov
cmp
aam
push
adc
mov
js
push
stc
mov
iret
fisttpll
fdivp
jmp
jnp
ds
push
ret
jb
and
into
in
roll
inc
subb
add
sahf
or
mov
loop
jecxz
cmp
jo
lds
adc
pop
icebp
stos
push
ljmp
or
sub
mov
enter
imul
mov
sub
fcomps
jle
sti
cmp
test
dec
jnp
js
es
pop
inc
scas
push
out
test
add
sub
pusha
shrb
mov
bound
cld
or
mov
xor
in
aas
adcl
pusha
cld
int3
mov
sub
push
push
add
lods
xchg
xchg
test
jno
inc
lret
mov
pusha
inc
movsb
inc
mov
std
jmp
xor
scas
fmuls
js
pop
lods
fildll
mov
or
push
cmp
lods
sub
clc
out
pop
icebp
dec
lea
mov
cmp
xchg
jg
xor
fs
push
jle
decb
or
pop
add
add
aam
in
dec
jp
sub
add
je
mov
dec
lcall
cmpsb
mov
xor
or
pop
sbbl
jle
mov
add
loop
push
pop
int
nop
in
push
mov
dec
sub
loop
movsb
pop
out
jecxz
out
add
or
pop
cmpb
dec
jg
test
rcll
test
mov
call
sub
mov
incl
imul
pop
mov
dec
inc
mov
lcall
jmp
jo
xor
and
xor
out
bound
iret
dec
sarl
fsub
sti
lods
sbb
mov
test
xchg
hlt
out
push
mov
sbb
and
jg
dec
leave
mov
add
mov
dec
fimull
fbld
push
xchg
sti
mov
daa
mov
add
or
fcomps
call
mov
clc
xor
stos
dec
loope
test
and
incl
pop
cs
ror
and
push
mov
or
add
es
and
mov
sahf
int
or
sbb
out
jp
pushf
shrb
or
sahf
push
mov
jmp
mov
sub
xchg
mov
or
rolb
adc
addr16
xor
sbb
rol
out
mov
add
mov
addr16
jmp
ja
pusha
lahf
cmp
lcall
test
loopne
in
add
add
jb
loop
mov
push
jl
cld
sbb
aad
hlt
scas
fisubl
pop
pusha
mov
in
xlat
inc
sbb
adc
ret
stos
mov
add
mov
and
adc
out
out
je
movsl
sti
cmpsb
sbb
addr16
subb
jno
mov
test
xor
int3
out
out
icebp
xor
aaa
cld
aaa
scas
or
dec
mov
inc
inc
std
movsl
add
sub
add
cmp
stos
popa
add
sub
adc
stos
test
mov
aas
arpl
jmp
jae
test
or
or
sub
movsb
movsb
ret
cmpsb
call
xchg
mov
mov
add
xchg
jne
sbb
ror
push
pop
dec
in
stos
sub
jnp
push
xchg
jecxz
push
sbb
cmp
xor
lea
outsl
mov
sub
outsl
pop
in
mov
mov
test
sbbb
shl
loop
pop
je
sbb
test
inc
in
mov
mov
popf
loope
rcl
pop
sbb
add
icebp
inc
sub
add
outsl
sbb
mov
sarb
push
cld
cmp
xor
xor
mov
rcrb
das
and
xchg
pusha
dec
popa
mov
das
clc
xchg
jae
inc
xor
lock
sti
xor
fbstp
adc
cs
js
jl
js
pop
add
test
or
rcrl
outsb
push
sbb
fistpl
stos
or
push
sahf
in
jecxz
ret
sti
pop
loope
cmp
adc
push
ja
or
mov
gs
xlat
imul
add
aad
sbb
movsb
lock
adcb
fisubrs
pop
in
andl
fimuls
or
cmp
xchg
loope
mov
std
sbbb
pushf
jbe
inc
pop
outsb
jp
sub
mov
sar
fwait
out
or
push
and
imul
imul
lcall
mov
ret
add
scas
xchg
sbb
inc
xor
lock
mov
out
or
fsubl
xor
fcmove
sbb
aas
lahf
mov
inc
cmp
lock
jno
pop
bound
fdivr
mov
js
test
mov
addl
loopne
scas
pop
outsl
and
ret
ret
xchg
push
scas
and
movsb
pop
ficomps
jno
clc
mov
push
popa
cmp
pop
stos
incb
shlb
mov
push
sbb
mov
or
stos
movsb
adc
lret
xor
mov
sahf
es
loope
mov
jo
mov
insl
and
dec
stos
fdivrl
mov
dec
sub
loope
orb
sarb
add
cli
sub
sub
call
ret
jbe
jo
rorl
lea
std
add
movsb
roll
inc
into
lcall
rolb
lahf
pop
rol
push
cld
rorb
inc
push
mov
pop
jne
pop
push
and
mov
jp
and
cmp
les
dec
pusha
dec
jae
sbb
sbb
in
push
xchg
lock
popf
adc
enter
sbb
incl
and
ja
out
lods
test
sbb
in
jp
inc
cmc
aaa
shlb
ljmp
mov
insb
push
cltd
pop
cmp
mov
fbld
incb
add
inc
scas
insb
mov
in
dec
out
cmp
loopne
sub
and
push
pushf
rcrb
xchg
out
sub
dec
push
inc
xor
mov
out
mov
jge
push
add
ljmp
out
inc
mov
stos
adc
or
dec
incl
hlt
sar
cmp
and
add
mov
mov
mov
cmp
pop
mov
jns
fildl
lcall
mov
pop
cmpsb
add
dec
push
mov
push
loope
fstpl
add
leave
mov
movl
ror
sub
cld
arpl
and
cmp
push
mov
pop
ret
outsl
ss
mov
sub
dec
inc
sub
loopne
push
pop
mov
mov
jl
mov
filds
adc
mov
rcrb
stc
or
scas
shl
scas
test
cmp
fnstsw
and
dec
insb
les
into
inc
inc
adc
adc
movlps
jl
cmp
loop
sbb
pop
call
ss
pop
pop
lahf
shrb
push
enter
cmp
stos
or
jle
rcl
sti
into
ss
mov
imul
add
fildll
aas
xor
loope
out
adc
mov
mov
inc
aaa
mov
push
aaa
push
and
dec
jns
repz
add
mov
add
cmp
out
ss
inc
cmpsb
pusha
js
jo
arpl
insb
stos
fbld
test
dec
add
sti
cmp
adc
cli
mov
xchg
push
push
icebp
push
push
shlb
test
lret
xor
lock
mov
call
mov
sbb
xor
push
adc
push
daa
fcomps
cmp
sub
test
xor
add
mov
aad
cmp
sub
cld
pop
sbbl
fsubrp
xchg
pop
mov
add
jle
test
jnp
leave
add
es
add
ds
jno
dec
daa
xor
loop
cmp
std
ljmp
sarb
sub
out
scas
mov
mov
xor
push
mov
jl
fsubrs
mov
push
es
xlat
adc
pushl
es
or
inc
mov
je
jae
fs
aam
sub
sbb
test
lcall
jbe
into
push
xor
sbb
pxor
outsl
and
and
dec
or
lods
sub
sar
pop
push
aam
fs
and
shlb
icebp
jp
aad
add
sub
pop
xor
and
vmptrst
sub
mov
sbb
lods
add
out
mov
ljmp
sbb
fdivr
stos
mov
loop
subl
push
xchg
jno
ret
add
pushf
adc
lock
fcoms
loopne
sub
enter
fcom
ret
push
mov
xchg
push
jg
in
inc
loop
inc
pop
xor
jg
mov
inc
cwtl
je
or
sub
lea
mov
cmpsb
mov
cld
repz
add
mov
mov
mov
shr
cmpsb
jb
lret
pop
les
and
xchg
hlt
ljmp
outsb
adc
push
add
loop
lahf
jae
lret
movsl
dec
cmpl
neg
sub
push
inc
call
add
xchg
cmp
dec
push
cmp
push
cmpsb
mov
jno
xor
pop
lea
and
jl
mov
or
std
add
lret
icebp
out
and
into
aad
cmp
push
and
or
clc
pop
daa
push
aam
pop
pop
jbe
adc
jmp
mulb
dec
mov
push
pop
ret
les
sarl
in
stos
ds
inc
lcall
pushl
jbe
push
jmp
cmp
into
cltd
je
xor
adc
pushf
lea
adc
mov
jp
lahf
xchg
scas
in
sub
sbb
loope
mov
cmpsb
movsb
stos
or
mov
popl
stc
ljmp
inc
test
mov
mov
das
sub
mov
into
subb
and
mov
roll
mov
push
mov
in
ds
pop
test
sub
bswap
mov
movl
and
cmp
inc
shr
push
int3
pop
mov
add
into
add
pop
nop
movb
stc
push
sub
lock
in
or
push
dec
inc
out
or
push
popa
je
ds
clc
xor
sub
lock
ret
cmpsb
outsl
jle
adc
jp
in
jge
xor
xor
mov
cmpsb
mov
fdivrl
and
jp
cmp
ljmp
fs
or
jg
testb
jo
and
sub
pop
and
mov
cld
aad
sub
mov
enter
mov
decl
addr16
jo
aad
lahf
es
and
push
loopne
sub
jnp
and
sbb
mov
add
pusha
cld
out
adc
push
ss
sbb
sbb
dec
and
in
mov
call
sbb
decl
js
dec
mov
dec
mov
sarl
in
daa
sub
fwait
adc
mov
push
add
out
lcall
scas
mov
inc
push
imul
lock
jmp
lods
push
mov
stos
add
pop
push
xchg
decb
cld
cs
enter
cmp
pop
pop
ljmp
xchg
fidivl
push
test
mov
nop
addr16
xchg
cmc
call
out
mov
aas
sub
xor
pop
aaa
std
mov
jbe
in
adc
inc
mov
rcll
fadds
add
nop
mov
mov
push
adc
shlb
movsl
sbb
sub
mov
cmpsb
jo
mov
test
rcrl
movsl
push
xor
jge
arpl
mov
lock
add
test
push
movsl
adc
sbb
push
xchg
lods
jno
push
cld
incl
add
orl
ss
out
pop
pop
mov
xlat
and
bound
mul
fimuls
mov
clc
xlat
js
sbb
rcr
jmp
push
call
in
mov
cmpsb
outsb
fwait
cmpsl
pop
inc
fs
add
add
call
add
and
push
pushf
dec
xor
movsl
mov
aam
jle
add
inc
sbb
sbb
js
or
or
fldl2e
add
xcrypt-cfb
cmpsl
mov
xchg
mov
cld
cmpsb
in
xor
popf
sahf
jns
and
dec
pop
mov
mov
mov
mov
xchg
mov
jg
inc
xchg
cmc
push
xor
mov
loop
jecxz
cld
jmp
push
sub
movsl
or
xlat
add
in
pop
iret
scas
ja
sete
push
rorl
in
push
incl
rcrb
mov
add
out
mov
movsl
cmp
and
sarl
lahf
inc
clc
mov
xchg
sti
stc
data16
add
pusha
das
add
xor
jb
sub
push
outsl
dec
pop
ss
stc
jmp
jo
cmpsl
scas
paddd
push
in
movb
inc
sbb
loop
cmp
sbb
cs
sub
dec
out
inc
mov
sbb
mov
pop
cli
mov
js
sbb
and
sbb
das
mov
cmpb
int
pop
or
decl
pop
xorl
mov
sub
ds
cwtl
and
xchg
imul
xor
shll
cs
nop
stos
mov
clc
pop
loope
sub
dec
push
xchg
js
push
dec
std
pop
and
scas
inc
into
add
pop
pop
sbb
jae
dec
push
adc
cld
movsb
inc
aaa
add
aas
test
cmp
add
mov
inc
into
sarl
shll
popa
inc
lods
sbb
loopne
addb
and
jle
push
fsub
stos
scas
fidivrs
dec
out
ljmp
popa
fucompp
push
inc
cmpsb
cs
cmp
sbb
pop
lret
add
aas
add
mov
xor
cmp
or
mov
clc
daa
cmc
push
loop
sbbb
mull
mov
push
xchg
xchg
push
lock
add
int
dec
inc
xor
jae
or
test
adcb
fldcw
repnz
mov
mov
aaa
push
xchg
arpl
cwtl
movsb
add
push
mov
push
add
rol
or
fidivs
aad
outsb
ret
push
rolb
cmpsb
dec
fldcw
xchg
xchg
lock
sbbl
lods
mov
pop
pusha
pop
cmp
push
cmovb
pop
sub
cmp
pop
cmc
xor
lret
add
xor
inc
pop
xchg
mov
into
leave
sub
mov
andb
adc
pop
and
icebp
cs
pop
adc
inc
mov
inc
push
ret
inc
clc
ja
inc
int3
pop
sti
in
add
lods
push
xchg
pushaw
fdivp
shlb
loop
test
mov
lcall
orl
or
jecxz,pt
jl
xchg
movsl
in
jno
xchg
cs
loope
and
bound
mov
aam
mov
and
mov
xchg
jbe
testb
lds
lods
fwait
loopne
inc
aad
push
cli
dec
mov
mov
add
mov
adc
mov
adc
add
fsubrs
mov
aas
xor
cwtl
bound
mov
mov
mov
dec
add
aaa
mov
push
sbb
or
mov
add
lcall
inc
cmp
sti
ja
nop
jne
subl
jl
ret
cmpsb
inc
out
jle
push
js
fsts
es
jmp
lods
xchg
jnp
xor
loope
push
xchg
dec
jo
mov
jns
add
imul
mov
push
ljmp
pop
js
add
popf
cmpsb
popf
inc
ljmp
enter
pop
lock
mov
dec
call
cmp
xor
jmp
lds
sbb
fnstsw
lods
mov
ja
sbb
and
xrelease
fisubs
sbb
mov
ljmp
imul
and
lret
cwtl
jle
and
enter
or
cmp
sbb
push
push
jbe
data16
pop
aaa
push
dec
fidivrl
cmp
mov
xchg
test
xchg
sub
iret
add
mov
shrl
jbe
xchg
repnz
ret
outsb
cmc
sbb
jmp
stc
out
dec
pop
jae
pop
lods
jmp
inc
dec
lds
mov
movsl
ss
mov
push
xchg
push
js
push
inc
popa
sub
mov
outsb
addb
lock
mov
cmp
clc
cmp
mov
imul
insl
movsl
shlb
sub
push
scas
subl
or
add
xchg
mov
sahf
mov
into
mov
scas
xchg
add
mov
lock
pushf
pop
adc
andb
adc
adc
jg
icebp
cmp
stc
cwtl
fsub
ss
dec
lret
sarb
stos
xchg
jle
xchg
push
into
push
insb
fmull
mov
ret
mov
push
loopne
adc
sbb
out
add
outsb
fsubrs
and
nop
cmp
int
insl
cli
aaa
cmp
pop
push
out
xor
push
mov
mov
push
imul
shrb
cmp
mov
lcall
das
xchg
adc
sub
xchg
fidivs
xchg
loopne
sub
push
cs
sbb
cs
pushf
inc
call
xchg
sbb
imul
roll
adcl
push
mov
subl
insl
mov
dec
aam
lock
lock
push
fimuls
leave
ret
pop
push
decb
pop
sbb
into
add
inc
jecxz
push
cmp
aam
add
subb
adc
imul
lock
dec
es
je
add
dec
jecxz
out
xchg
pop
or
in
pusha
std
icebp
cmp
or
cli
es
test
mov
not
dec
mov
sub
cmpl
push
scas
sbb
sbb
sub
lcall
add
adc
push
loopne
mov
mov
faddl
add
cwtl
out
mov
push
mov
clc
mov
fistps
jmp
cs
gs
aam
test
add
mov
ljmp
mov
jmp
shrl
mov
fs
leave
shr
or
sub
push
jp
or
adc
mov
loopne
or
fwait
shlb
out
aaa
cli
mov
sti
dec
loopne
mov
lock
cmp
fisttpl
int3
jl
add
clc
pop
mov
int3
cmp
mov
mov
fdivl
test
xorb
fisubl
insl
stos
jno
jae
enter
call
add
mov
fcomps
sahf
ds
add
xlat
outsb
fistps
sub
movsl
jo
dec
mov
cli
add
jl
adc
in
xor
je
jne
add
repz
aas
cli
sub
mov
and
nop
fsubs
push
jle
and
add
outsl
nop
addb
sbb
adcb
std
call
or
and
out
movsl
xchg
fildl
adc
ja
cmp
or
pop
pop
fnstcw
hlt
push
adc
cwtl
pop
push
ret
jle
shr
mov
pop
aam
add
lcall
mov
pop
test
mov
dec
es
stos
push
mov
lea
ret
cli
sub
inc
and
mov
add
push
mov
and
movsb
mull
xor
add
cwtl
js
aad
jmp
cmpsb
push
repz
aad
pop
pop
push
or
mov
clc
popa
push
or
subb
aas
enter
stc
sti
mov
mov
push
std
mov
or
cld
jo
cs
xchg
movsb
xchg
xchg
lods
and
bound
push
mov
ljmp
push
insb
sbb
fwait
adc
fidivrl
sub
or
inc
mov
adc
roll
in
xorb
pop
test
clc
mov
aaa
cwtl
jle
data16
adc
aaa
or
add
adc
out
ss
faddp
scas
pusha
sub
out
fs
icebp
aas
shlb
fmuls
cld
adc
subb
add
lods
mov
or
fisubrs
pusha
cmp
roll
jbe
in
fsubs
sub
mov
fisubl
inc
jle
outsl
movsb
push
pop
jl
jae
int
fsubl
mov
test
std
loopne
loopne
idivb
dec
out
jbe
das
clc
xchg
inc
xor
lret
and
std
push
sbb
jb
or
mov
push
out
ret
sbb
sar
lahf
aas
xor
and
pop
xchg
cmp
xchg
dec
mov
push
sbb
add
ret
sti
sbb
mov
subl
push
pushf
mov
pop
xlat
cmp
stos
inc
push
bound
lret
add
int
sbb
dec
faddl
xor
fmull
mov
fcomps
sahf
data16
adc
dec
pushf
and
incl
and
mov
fdiv
mov
out
cli
cltd
inc
mov
out
stc
jne
mov
incl
stos
mov
inc
jge
xchg
popf
cld
stc
pop
mov
add
daa
pop
aam
shrb
ficoms
or
clc
inc
fidivl
lock
push
add
push
mov
sti
loope
stos
dec
lods
xchg
inc
add
repnz
fidivrs
push
xchg
ja
fdivrl
adc
sbb
jle
loopne
loop
ret
hlt
sub
xor
mov
decl
add
push
xlat
mov
dec
sbb
push
push
mov
cmp
xor
cli
js
mov
add
mov
cli
jecxz
pop
sub
cld
lods
cld
lods
and
pop
test
cmp
inc
and
mov
xchg
sub
jb,pt
cld
scas
nop
push
dec
cld
ljmp
loop
jge
push
repz
dec
jae
sub
lock
sarb
add
mov
mov
test
test
das
mov
xchg
icebp
notb
es
add
mov
cld
push
fldl
push
pop
repz
into
xchg
lods
cmpsl
add
mov
push
adc
mov
loop
rcrb
dec
add
mov
sbb
mov
sub
or
mov
je
sbb
inc
jo
cltd
ret
mov
add
mov
pop
mov
stos
icebp
mov
pusha
test
rcr
shll
sbb
jmp
and
das
and
rorl
mov
or
pop
fnstcw
add
nop
sub
sbb
loope
lods
loopne
and
cld
call
call
inc
js
pop
sub
subb
sbb
inc
fcomps
mov
es
mov
loope
or
js
add
sbb
int3
ja
push
xchg
ds
sbb
or
insl
add
or
and
and
repz
jne
sti
xor
test
pusha
aam
inc
jnp
cs
jbe
repnz
mov
mov
sahf
insl
dec
pop
xchg
pop
loopne
out
lock
adc
stos
out
jl
pop
mov
xchg
pop
cmp
hlt
and
xchg
xchg
xor
cli
xor
popa
lock
sub
cltd
shll
das
loopne
icebp
lds
push
sbb
mov
add
adc
sub
and
adc
and
outsb
adc
cli
cld
loope
cmpsb
pop
sbb
push
jbe
mov
push
loop
andb
push
test
dec
push
push
pop
stc
mov
movsl
decl
xor
adc
das
mov
ret
mov
mov
add
call
in
fildl
icebp
lcall
xor
or
pop
fists
rcrb
mov
dec
pop
ljmp
cli
cld
dec
inc
cmp
cld
ds
mov
enter
adc
pop
push
or
idiv
fnstcw
popa
add
fiaddl
sub
int3
js
mov
push
pushf
pop
cmp
lcall
sub
sbb
dec
and
cmp
cmp
repz
add
popf
mov
cltd
fimuls
sbb
mov
lahf
insl
loop
stos
sbb
sbb
test
sbb
fwait
sub
xor
jge
sub
xchg
dec
inc
xor
btc
dec
out
cmpsb
mov
je
out
pop
mov
xchg
cli
and
pushf
enter
pop
mov
cmpsb
lock
out
dec
fs
imul
mov
mov
pop
or
lods
imul
lret
stos
scas
sub
jns
sbbb
jbe
ljmp
imul
out
jne
mov
scas
sahf
adc
mov
cli
push
push
sar
jg
imul
xchg
scas
or
cmpb
or
jg
sbbb
sbb
mov
mov
xor
sub
sbb
fcmovnbe
sbb
push
inc
nop
or
xchg
adc
fimuls
pop
loopne
ds
inc
dec
adc
roll
sub
pop
cmp
in
xchg
mov
inc
adc
out
adc
add
out
adc
dec
or
fldenv
lret
std
in
stos
cmp
gs
mov
jp
loopne
lock
jae
incb
out
shll
inc
cmp
lods
and
jg
cmp
and
or
xor
cmp
jno
cmp
adc
pop
nop
cmc
sarb
loopne
sub
mov
jle
push
cmp
pop
mov
out
aam
mov
fdivp
add
mov
sub
mov
out
sbb
clc
jg
arpl
shrd
inc
imul
and
inc
and
aas
jmp
push
push
dec
push
adc
push
pop
mov
sahf
add
jo
sar
xlat
jmp
xchg
fidivs
inc
sahf
xor
cmp
push
pop
xchg
adc
mov
and
test
push
cltd
aam
inc
dec
ds
outsb
loopne
xchg
loopne
cmc
jns
pextrw
ret
int
push
scas
loop
lds
pusha
inc
xchg
cmp
pop
push
es
ret
shrb
ret
mov
push
out
leave
ss
test
scas
int3
push
fcomip
out
call
pop
insb
mov
mov
push
pop
sub
popa
xor
or
jg
pop
pop
adc
mov
add
lea
addl
rcll
shlb
xor
push
sub
inc
inc
cmc
xchg
add
repz
repnz
mov
xchg
out
je
or
xchg
add
jnp
aaa
add
loope
jo
insb
sub
push
mov
or
mov
xchg
cmc
pmaddwd
ss
xchg
loop
cld
in
push
mov
into
sub
adc
and
cmp
or
mov
mov
dec
pusha
jl
sbb
es
xlat
push
adc
sub
push
jge
or
call
jg
push
add
addb
dec
mov
jnp
jae
mov
and
push
mov
out
xor
subb
insb
lret
add
jg
into
mov
ss
pushf
adcb
shl
mov
mov
mov
pop
data16
push
sbbb
lcall
leave
fiaddl
cmp
movsb
xchg
jmp
out
sub
cmpsb
adc
lock
outsb
sub
inc
in
add
add
incl
add
xchg
mov
idiv
add
call
xor
push
out
enter
dec
das
xor
ja
lret
addb
testb
lock
mov
fbld
sbb
mov
push
dec
movb
ds
mov
mov
inc
xchg
out
or
jmp
pop
xchg
hlt
jl
and
xchg
mov
jl
movsb
clc
incl
jbe
mov
or
add
ja
push
jmp
push
inc
add
scas
shl
ds
loopne
xor
imul
inc
inc
cmp
pushf
aaa
mov
inc
inc
mov
outsl
pushl
out
dec
sbb
sub
cld
adc
pusha
jo
jg
in
popf
cwtl
in
mov
rcrb
mov
stc
jge
xchg
clc
pop
add
or
jle
jne
or
lock
stos
pop
mov
insb
dec
lds
push
mov
rep
cmp
cmp
in
mov
pop
jl
ss
stos
mov
imul
iret
repnz
sub
sbb
sub
mov
pop
imul
out
sub
int3
xchg
and
cmp
dec
inc
mov
lret
or
add
test
lret
mov
es
adc
adc
gs
and
ljmp
pop
enter
outsl
push
aam
add
xor
aaa
test
xchg
into
call
add
dec
mov
cld
je
enter
rep
stos
add
ja
sti
test
jns
mov
nop
pusha
aad
sub
idiv
sbb
mov
rcll
les
xor
mov
mov
pop
dec
or
inc
xor
mul
sub
outsl
mov
clc
mov
inc
push
incl
enter
adc
cmp
ds
mov
cld
loop
mov
loope
out
xchg
lds
popf
cltd
fs
cmc
sbb
add
leave
mov
cmp
bound
inc
in
xchg
fiaddl
sbb
sbb
inc
and
subb
sub
pusha
xor
fbstp
out
xchg
test
out
xchg
push
icebp
pop
mov
repz
insl
cmpsb
cli
push
jp
add
aaa
lahf
push
xchg
jb
push
ret
scas
popf
xchg
sub
adc
push
call
std
in
pop
push
and
enter
out
rol
xchg
push
xorl
dec
lahf
loopne
ret
pop
xorl
cld
divb
pushf
pop
movsb
inc
mov
add
jae
inc
rcr
scas
pop
icebp
test
add
imul
or
ss
mov
nop
mov
jae
push
ss
inc
cs
xor
or
movsb
jl
mov
and
cwtl
push
fisubrl
rcr
dec
rcl
cld
aas
mov
movsb
cmp
and
inc
cld
mov
shrb
aam
mov
adc
jp
mov
mov
clc
or
hlt
push
aad
jb
repnz
je
gs
add
lea
shrb
dec
jmp
inc
mov
jle
js
lcall
jne
outsb
push
mov
jo
mov
enter
addb
ret
leave
clc
call
outsl
test
jmp
mov
or
inc
and
xchg
loopne
mov
cld
mov
jmp
jecxz
fadds
inc
lret
mov
inc
cs
cmp
sub
call
mov
pop
lock
mov
mov
icebp
mov
pop
mov
loop
jge
push
adc
adc
push
mov
out
dec
in
mov
mov
popa
xlat
shrl
mov
or
cli
outsl
ljmp
pusha
adc
add
cmc
mov
hlt
add
sub
fadds
mov
cmpsl
ret
jno
jecxz
sbb
iret
dec
clc
xchg
imull
inc
subb
bnd
xor
cmp
out
add
fidivrl
fsubs
cmpsb
inc
in
popf
lea
lods
and
push
jge
aad
fimull
sahf
mov
insl
std
jmp
pop
icebp
aaa
jp
inc
xchg
mov
cmp
repnz
hlt
pop
jmp
test
dec
popa
sbb
aas
sbb
stos
add
sarb
sub
fsubrl
cmp
pop
out
imul
xchg
lock
mov
fnstcw
fisubs
in
lock
rcrb
push
pop
lcall
or
sahf
xchg
pusha
imul
lds
sbb
or
push
inc
inc
sub
push
int3
scas
dec
mov
fisubrl
loopne
test
std
jo
and
clc
add
loopne
outsb
hlt
inc
scas
bound
cmp
aas
rclb
lahf
and
fsts
popf
add
mov
out
lock
jl,pn
adc
cmc
sub
aas
subb
lret
xor
das
mov
cs
add
mov
xchg
out
or
pushf
pusha
movsb
fcompl
lods
dec
call
mov
and
push
gs
call
xor
mov
data16
inc
or
test
adc
mov
es
stos
imul
aad
cmp
iret
into
andb
adc
push
mov
repz
cmp
push
mov
movsl
pop
fnstcw
or
cmpsl
jne
xorl
add
inc
add
mov
mov
and
sub
incl
mov
test
int3
loopne
mov
mov
inc
mov
addl
ret
flds
or
movsl
mov
jg
xchg
subb
shl
mov
sbb
jg
mov
push
push
fwait
mov
loopne
jmp
jb
stc
cmp
sub
aam
jae
xchg
es
xor
or
sbbb
mulb
aaa
dec
cmp
jbe
nop
or
dec
cmp
inc
pop
es
test
and
jbe
inc
jbe
orb
cmp
test
mov
mov
pop
or
ljmp
ret
inc
stc
in
shlb
ror
js
pop
cs
jmp
jle
cltd
mov
sbb
xchg
int
xor
jge
jg
xor
out
fnstenv
or
mov
int
ret
pop
es
push
ja
cmpsl
mov
sar
test
mov
push
mov
int3
add
shr
jo
xchg
sbb
push
lret
mov
movsb
ljmp
xchg
js
jno
js
jecxz
and
jmp
dec
pop
mov
fucomp
cwtl
or
mov
add
cmp
mov
mov
sub
add
add
push
outsb
mov
lret
fdivrs
push
dec
fildl
inc
setle
cmp
jno
imul
jp
mov
add
out
sbb
fbld
rolb
cmp
jnp
add
jbe,pt
mov
lods
cmpb
and
jne
movsb
repnz
lock
xor
push
xchg
loope
mov
fisubrl
testl
adc
insl
xchg
ret
pop
sub
push
jo
stos
imul
cmp
jp
sbb
addb
scas
add
push
sub
aas
loopne
loope
insl
fcomp
push
mov
xor
cli
div
add
mov
or
jle
and
dec
xchg
push
dec
and
mov
mov
push
or
pusha
mov
mov
sbb
push
es
hlt
cltd
dec
sbb
push
push
push
mov
loop
lahf
add
clc
mov
cld
dec
adc
ja
mov
or
mov
ret
pop
inc
mov
ret
loopne
cld
sbb
jo
shr
loope
loop
inc
pop
pop
push
cld
rcrl
in
mov
xor
sbb
jns
cli
hlt
incl
scas
into
mov
sti
pop
hlt
outsb
sbbb
add
addl
mov
mov
repnz
int3
mov
add
bound
sub
push
lock
stos
pminsw
push
comiss
pop
sub
and
fisttps
repz
mov
jecxz
mov
dec
jno
icebp
clc
sarb
aam
aad
daa
cwtl
cmp
mov
movsl
subb
dec
loope
inc
mov
jge
mov
dec
rorl
xor
test
movsl
mov
repz
dec
daa
adcb
in
leave
call
pop
addr16
out
andps
push
dec
leave
jp
dec
add
and
jp
and
test
mov
out
iret
or
lcall
fmuls
les
xor
xchg
or
xchg
stos
insb
movsb
mov
icebp
jbe
add
fstl
xchg
mov
xchg
and
data16
mov
sub
push
call
imul
add
std
sahf
cmp
shlb
loopne
xchg
loop
mov
jbe
add
sub
mov
js
add
push
hlt
adc
sub
test
lret
shrb
rol
notb
ss
push
mov
test
in
sahf
jg
stos
hlt
and
aad
pop
into
and
pop
int3
mov
shlb
sbb
jo
aam
stos
clc
ljmp
ljmp
roll
push
inc
mov
es
lcall
jecxz
pusha
incb
mov
rsm
ret
cs
xchg
sbb
push
mov
idiv
scas
iret
mov
add
repz
inc
ret
add
idivl
jmp
inc
mov
dec
add
add
and
or
lcall
jb
jmp
jl
pop
mov
nop
xchg
mov
jo
mov
std
mov
lcall
cltd
fldt
loope
call
sbb
add
mov
dec
out
es
xchg
xor
sub
sbb
mov
add
inc
dec
mov
cmp
mov
clc
jmp
rcl
fisttps
scas
mov
cwtl
rolb
jp
jo
faddl
xchg
cs
pushl
cld
pop
mov
mov
fs
ret
cmpsl
sahf
add
cmp
lret
jno
and
mov
or
jg
pop
les
inc
xchg
dec
sub
dec
jmp
jmp
mov
jmp
push
addl
ret
out
jmp
add
sbb
les
push
add
push
add
lods
ror
mov
push
mov
test
pusha
sub
pop
mov
cmp
enter
cli
inc
incl
fcoml
mov
sti
dec
mov
pusha
pop
rcll
jne
aad
repz
inc
lret
and
or
mov
dec
cld
stos
nop
ja
mov
jg
sub
mov
ds
rolb
push
ret
lea
stos
cld
sbb
jl
and
and
mov
clc
test
cld
rorb
and
add
xchg
stos
sub
jnp
sub
mov
loopne
mov
and
add
sbb
lret
addr16
xor
add
jl
in
les
inc
popa
mov
mov
mov
pop
jl
lock
imul
mov
mov
cli
mov
andb
adc
fildl
call
cli
mov
xor
sbb
nop
scas
clc
test
lea
jmp
adc
mov
sbb
fwait
jl
aas
and
out
stos
aam
je
mov
mov
mov
sub
push
pop
sub
shr
and
jns
push
gs
lock
shr
popa
sbb
push
mov
aaa
loopne
insb
pop
mov
mov
push
sahf
xchg
push
cmp
sbb
ljmp
jmp
mov
movsb
lcall
fidivrs
add
push
loop
xorb
pop
lcall
push
out
adc
loopne
outsb
iret
pop
mov
sar
xor
or
xlat
mov
pop
sbb
mov
jecxz
insb
xor
add
mov
sahf
mulb
out
movsb
lods
and
inc
aas
adc
sub
add
mov
ja
and
cmp
or
mov
lock
shl
cmp
testb
adc
pop
push
cli
or
les
outsb
call
shlb
out
and
sub
loopne
adc
jl
and
jle
xchg
fisubl
xor
xchg
mov
call
jb
push
scas
adc
pop
add
fsts
negb
insb
mov
mov
inc
or
ljmp
ret
inc
rcll
jle
test
loop
sub
loop
or
jg
add
mov
movsb
aaa
adc
adc
lock
mov
jle
mov
subb
fdivrl
test
outsl
and
adc
push
ljmp
dec
inc
jg
mov
add
sbb
fisttpll
lods
jp
fneni(8087
mov
add
dec
in
push
js
lock
pusha
sub
jbe
pop
sub
outsb
in
pop
enter
cmp
xchg
repnz
inc
jp
daa
cld
fbld
adc
jnp
push
push
addl
pop
mov
add
rclb
stc
jmp
sbb
push
test
add
out
or
xor
sbb
aam
sbb
sbb
add
cld
fwait
or
mov
loopne
push
xor
test
xor
je
out
es
mov
stc
fwait
or
fistpll
sbb
and
adc
pop
lcall
pop
cbtw
push
add
push
cmp
fcompl
repnz
push
push
jnp
mov
rolb
mov
ljmp
jg
or
and
sbb
lret
mov
mov
subb
or
xor
call
lock
and
add
and
mov
mov
mov
int3
or
mov
iret
es
clc
incl
sub
xor
jp
jo
push
cmp
jg
arpl
xlat
in
stos
sbb
call
leave
mov
lock
sub
jp
cli
mov
add
sbb
icebp
adc
test
or
adc
in
pop
subb
test
test
ja
push
cli
ljmp
shlb
jo
sub
div
inc
add
sbb
mov
mov
push
adcl
add
mov
cli
mov
pop
add
push
repnz
incb
loopne
loopne
out
cli
aas
cltd
xchg
repnz
jo
lret
aaa
lods
daa
pop
push
or
loope
pop
or
shlb
mov
push
bound
sbb
sbb
jno
push
and
ficompl
imul
adc
sbb
adc
mov
icebp
push
loop
pushf
rcrb
orb
add
jg
pop
or
and
mov
fsubr
jecxz
insl
xor
mov
hlt
sti
or
leave
loop
sub
add
cld
ljmp
lock
mov
jns
jne
idivb
or
sub
incb
inc
push
adc
dec
cmp
push
dec
mov
inc
fiaddl
lds
movsl
es
inc
aaa
std
idiv
sti
cmp
out
dec
add
mov
enter
ja
push
push
or
cwtl
sbb
pop
mov
xor
fistl
fidivs
out
jmp
lock
loopne
jl
adcb
adcb
mov
xchg
idivl
loop
cmp
jns
adc
add
inc
mov
test
add
pop
ret
add
jg
gs
or
mov
add
add
ret
dec
mov
fsubl
or
xchg
mov
test
sub
mov
clc
push
pusha
bound
testl
fldenv
jno
mov
add
lods
xchg
pusha
test
push
test
ljmp
xor
add
inc
ljmp
and
cwtl
cmp
adc
jge
frstor
stc
scas
inc
cmp
sbb
mov
ljmp
fsubr
sub
stos
stc
inc
sbb
std
mov
outsb
xor
je
insb
inc
call
mov
push
xor
lret
roll
loopne
cld
jmp
add
add
clc
sti
imul
mov
push
mov
cmp
sbb
lock
ljmp
jle
sbb
fdivr
add
mov
xor
bound
je
in
mov
pop
or
cwtl
or
js
adc
rorl
push
push
enter
xchg
xor
stos
fiadds
clc
xorl
xchg
rolb
loop
fimuls
dec
cmp
push
lods
push
cli
dec
popf
pop
arpl
adc
orb
fdiv
or
mov
sub
fisubrs
dec
pop
sbb
and
stos
pop
adc
mov
pop
test
lods
jle
mov
sbb
and
xorl
jg
xor
sbb
cmp
orb
mov
out
out
push
std
mov
out
stos
mov
shlb
out
mov
rcrl
mov
lods
jle
push
push
xchg
js
leave
add
mov
ja
daa
fiaddl
ss
roll
mov
mov
pop
jl
pop
dec
pop
sub
adc
dec
in
pop
movsb
jnp
inc
sub
or
mov
mov
push
jne
lock
jmp
push
repnz
xchg
cld
sbb
mov
xchg
push
leave
dec
daa
mov
cmp
and
dec
push
test
loopne
mov
mov
mov
jp
sub
jmp
call
movsl
sub
addb
arpl
add
repz
and
out
fcmovnu
inc
dec
fisttps
mov
scas
push
sahf
mov
xchg
pop
fdivrs
sarb
mov
cltd
adc
loope
mov
mov
les
mov
pop
shl
jmp
out
mov
mov
gs
sub
mov
and
xor
daa
push
dec
movsl
js
cs
pop
cmpl
mov
jecxz
jmp
pop
in
ret
lock
je
fs
mov
adc
dec
enter
rcrb
adc
movsl
xchg
clc
pushf
ljmp
or
outsl
sub
mov
or
add
faddl
xchg
les
ljmp
or
sar
insb
ret
mov
xchg
adc
or
pusha
int
mov
mov
rclb
mov
pop
mov
push
mov
and
loop
cs
out
insb
addl
push
jne
sub
incl
fidivl
pop
xchg
and
add
nop
cli
or
arpl
incb
fsubs
push
xchg
lret
pop
shll
sub
es
cmp
ljmp
jle
push
mov
lret
in
fs
lea
sub
mov
cmp
icebp
dec
add
les
flds
out
pushf
xor
test
jp
fcomp
test
sbb
fcoms
insl
and
add
mov
mov
xor
pop
pusha
inc
jl
dec
or
or
pop
lret
or
lret
xor
hlt
movsb
fdiv
incl
and
imul
sbb
mov
xchg
imul
fwait
mov
mov
jno
jg
sub
adc
lret
add
sbb
clc
decl
jbe
and
adc
add
int
scas
push
loope
out
pop
movsb
iret
call
ljmp
lea
and
fstpl
push
stos
cmp
mov
lea
xchg
mov
cvtpi2ps
push
xchg
mov
fildll
mov
std
nop
les
jg
mov
xchg
mov
int3
rorl
dec
clc
ljmp
dec
test
in
xlat
in
xor
xchg
and
xchg
int
mov
jg
mov
js
gs
andb
mov
aam
jecxz
xchg
adc
jbe
aas
add
xor
test
jp
loope
ficompl
sub
xor
cmp
xchg
xchg
notl
int
push
jnp
je
or
addr16
or
mov
repnz
jae
jns
xchg
clc
scas
jmp
clc
test
push
leave
mov
dec
cmpb
mov
ficompl
jge
call
bswap
add
mov
sbbl
sbb
stos
add
fnstsw
push
lds
jecxz
and
mov
xor
lods
pop
cmc
out
rol
add
mov
cmpb
xchg
push
cltd
pop
sti
popf
cwtl
jbe
dec
aam
and
cwtl
mov
or
andl
int
sbb
xor
sub
adc
nop
loop
inc
mulb
cmp
pop
lcall
and
push
test
add
mov
incl
adc
insb
mov
clc
push
or
ds
mov
adc
push
pop
xor
cmp
or
xchg
pop
loope
push
mov
pushf
pop
add
into
outsb
pop
pop
sti
sbb
sbb
add
mov
xchg
mov
inc
cli
add
dec
mov
daa
add
les
sub
lods
add
pop
fsubl
call
jnp
or
mov
jne
add
adc
dec
push
loopne
shl
add
push
mov
cmpb
bound
fbld
mov
adc
push
and
mov
test
call
outsb
cmp
mov
or
sahf
cmp
xor
mov
data16
and
jmp
ja
adc
incl
inc
js
pop
das
or
cmp
lahf
lods
and
hlt
ss
cmpsb
les
add
fildl
adc
pushaw
icebp
dec
fisubrl
pop
push
cli
insb
outsb
or
fisttpl
je
dec
movsb
mov
jmp
push
xor
or
xchg
pushf
lret
xchg
addb
dec
ret
mov
add
sub
mov
pop
out
push
add
call
fistps
jle
stos
pushf
dec
cmp
cmpb
movsl
cmp
shrb
jno
jecxz
clc
icebp
mov
sahf
xchg
cmp
sarb
int
cmpsb
mov
fcmovnbe
js
in
enter
xchg
xchg
or
orb
inc
popa
rcll
mov
add
inc
cmp
call
lods
cmpsb
and
es
ljmp
inc
sub
call
push
mov
push
pop
pop
adc
cmpsl
cmpsb
xchg
mov
ret
das
cmp
sbb
mov
iret
pushf
push
push
xchg
mov
gs
inc
int3
add
pop
lock
std
mov
loopne
andb
cmp
mov
add
push
es
jb
arpl
jno
xor
mov
xchg
out
orl
nop
jl
add
adc
mov
loop
pop
cmpsl
into
stc
inc
or
push
add
call
lret
ret
add
xor
or
add
mov
adc
push
mov
pop
sub
mov
and
cld
cld
movsb
push
in
jmp
pushf
mov
mov
sbb
push
inc
mov
xor
icebp
sbb
sar
loopne
push
scas
outsb
clc
pop
or
push
jne
and
xchg
push
outsl
jl
jp
mov
sub
scas
lods
fadds
mov
inc
loope
dec
xchg
mov
addl
cmp
add
push
addr16
cmp
sbb
pop
add
loop
stos
mov
inc
jl
push
dec
aas
shll
add
inc
scas
cs
sbb
add
push
out
lret
cwtl
or
mov
pop
test
xchg
push
insb
cwtl
mov
push
ljmp
adc
dec
jns
add
cli
mov
and
ret
lcall
add
pop
cs
push
stc
hlt
dec
repnz
call
fdivl
or
cli
sub
add
jg
imul
xchg
and
push
push
cli
xchg
fiadds
inc
or
bound
js
jp
mov
fisttps
ja
das
in
jnp
shll
ret
jne
mov
add
mov
xchg
call
inc
push
pop
ss
call
push
add
clc
mov
loopne
push
push
add
pop
ja
scas
ret
les
add
mov
dec
cs
sub
jbe
lods
sti
and
pop
into
jg
mov
mov
faddl
aam
mov
xor
cli
add
fstpl
and
mov
push
dec
lcall
incl
bound
add
xchg
stc
xchg
jge
popf
les
stos
loopne
pop
and
stos
bound
mov
mov
into
sbb
sbb
mov
and
orb
cld
mov
inc
lahf
pusha
mov
push
out
sahf
pop
sub
imul
in
push
faddl
out
inc
mov
or
jl
adc
icebp
mov
and
pop
nop
lcall
mov
loope
rorl
das
rcll
push
adc
stc
pop
sar
pop
inc
fst
stos
sbb
add
lock
push
push
movsl
cmpsl
cwtl
inc
nop
xor
rolb
mov
cmp
das
xor
lods
loop
xor
push
aad
sbb
xchg
out
and
inc
lahf
push
aas
add
add
jl
mov
add
push
out
mov
fildll
sub
jl
dec
ret
mov
orb
incl
incl
adc
lret
pop
cmp
bound
push
mov
pop
add
push
mov
pop
mov
add
mov
xlat
jno
push
sarl
in
xor
pop
pop
mov
lahf
or
ljmp
insl
adc
mov
mov
mov
bound
loopne
fldl
mov
add
fbstp
fbstp
pushf
pusha
add
rclb
sbb
xor
test
jbe
arpl
daa
jp
sub
and
or
push
dec
or
leave
sahf
add
add
enter
call
aam
inc
call
ljmp
sti
mov
push
xchg
pop
fisubl
in
mov
adcb
les
mov
jmp
js
and
adc
pop
push
outsl
cmp
xchg
adc
lret
sbb
subb
lock
mov
es
mov
jmp
cmc
cmp
call
repnz
aam
dec
xorb
mov
push
or
add
daa
sbb
fimuls
pop
fs
mov
mov
fildll
xlat
adc
filds
popf
mov
mov
inc
or
daa
inc
sahf
fisttpll
add
cli
ret
clc
mov
xchg
negl
mov
pop
xor
add
cs
cmpsl
xor
loope
je
add
cmc
pop
jge
sbbb
mov
jecxz
mov
rorb
xchg
ds
sahf
sahf
pop
or
lds
stos
add
pushf
push
dec
push
and
pop
xchg
lcall
clc
fistpll
xor
add
fcompl
sub
mov
cmc
mov
add
xor
jns
loop
add
lcall
inc
sub
adc
sahf
mov
pusha
scas
dec
pushl
xchg
cmp
cmp
push
and
cmp
pop
push
cmp
jo
shrl
sub
cmpb
repz
addl
mov
adc
xchg
out
adc
jmp
cmp
cmp
daa
cmp
sar
add
pushf
inc
icebp
sub
and
inc
jmp
ret
pusha
int
mov
jbe
jecxz
clc
cmp
scas
push
xchg
test
mov
sahf
adc
push
sbb
rcrb
in
mov
enter
incl
mov
adc
cld
lret
mov
push
mov
subb
adc
test
xorb
mov
push
incl
add
pushf
mov
fmull
in
inc
adc
ljmp
mov
in
test
cmp
cmp
xchg
inc
or
xor
shlb
cwtl
fistpll
aaa
scas
call
int3
cli
mov
cmp
mov
hlt
sub
mov
xlat
mov
adc
aam
mov
mov
push
aam
sub
mov
cld
pop
je
ja
or
push
and
adc
imul
mov
ret
ret
dec
lahf
cmp
cld
mov
pop
jne
bound
cmc
test
jmp
jecxz
xchg
mov
jmp
lock
sub
mov
sbb
es
sbb
imul
mov
or
sbb
subb
mov
mov
push
sbb
xor
jno
pusha
sar
in
mov
outsb
movsb
adc
sub
lea
push
lea
inc
int3
push
imul
std
adc
aas
aaa
imul
sub
jp
mov
push
push
ljmp
add
add
and
nop
mov
popf
jp
jecxz
jo
push
add
cmpsb
jnp
cmp
pop
or
mov
jge
push
ror
jl
mov
scas
add
lcall
fldenv
mov
sbb
or
sbb
stc
cmp
add
xchg
or
push
pop
outsl
jg
mov
arpl
nop
cld
call
in
andps
clc
pushl
popf
sbb
mov
jmp
lock
pusha
xlat
add
sbb
in
stos
sbb
cmpsb
fmul
push
mov
cmc
sahf
push
pusha
mov
jmp
cld
mov
xchg
mov
fincstp
cmp
jae
test
xchg
inc
adc
mov
sti
jae
xchg
into
jnp
adc
imul
data16
inc
enter
push
add
insl
andb
add
pop
mov
push
and
push
inc
or
xor
scas
movsb
test
fwait
mov
outsl
js
loop
mov
sub
in
inc
test
aas
std
or
dec
stc
inc
xor
aas
pop
add
cmc
pusha
mov
sub
mov
and
pusha
xchg
testb
fstpt
mov
xor
jno
and
mov
mov
imul
mov
sbb
cmp
push
loope
mov
sbb
add
cmp
mov
shlb
sbb
sbb
or
pop
mov
add
les
sti
dec
sub
mov
enter
enter
and
pop
adc
out
add
push
lahf
stc
inc
stc
inc
std
mov
aad
jle
fldl
push
sbbl
cmpsb
cmp
hlt
mov
add
out
shll
push
mov
jp
loopne
lcall
aas
pop
or
or
sub
or
xor
scas
fdiv
and
fmuls
fsubs
fisubl
cmpl
and
outsl
sub
push
sbb
ljmp
jb
fdivrl
mov
and
aaa
inc
pop
icebp
and
pop
mov
sti
cli
pop
loop
in
or
enter
pop
mov
ja
mov
shll
hlt
rorl
and
mov
das
mov
add
push
or
push
push
jmp
jbe
sarb
movsb
xchg
inc
inc
cltd
add
fwait
mov
hlt
outsl
scas
fisubrl
sbb
mov
call
pop
adc
dec
dec
inc
insb
fwait
push
pop
into
sbb
lock
cmp
nop
loopne
imul
loopne
call
rol
sbb
scas
into
and
lods
imul
into
dec
pop
mov
adc
push
popf
jmp
lret
mov
sbb
int3
add
call
es
out
jns
cmp
nop
push
mov
stos
mov
push
mov
sub
cwtl
icebp
jnp
push
push
pusha
mov
ja
jbe
sbb
inc
cwtl
fcomi
jns
push
mov
test
in
xor
fists
test
fbstp
push
shll
xchg
push
mov
into
out
mov
fcmovnbe
fisubl
sub
aam
repnz
mov
jl
clc
popf
nop
fsubl
mov
es
faddp
int3
xchg
or
cli
test
add
imul
mov
scas
mull
add
lret
call
imul
notb
test
add
add
or
dec
push
cmpl
rcl
xchg
fimull
outsb
xor
pusha
mov
jne
sbb
aad
cs
insl
cli
add
outsb
loop
inc
or
mov
test
mul
lret
cld
add
insl
xchg
mov
mov
mov
in
xor
jg
sbb
pop
inc
insl
pop
lods
test
mov
adc
cli
mov
shr
pop
add
movups
dec
pop
mov
inc
orl
outsl
hlt
shl
mov
add
dec
dec
or
mov
and
adc
pop
inc
pushw
and
insl
out
clc
sbb
je
aaa
mov
testb
iret
gs
push
cld
loope
icebp
nop
testl
push
and
addr16
sbb
mov
inc
out
cld
lcall
popa
mov
xchg
pop
ljmp
pop
in
aad
cli
mov
sbb
cmp
mov
ret
push
mov
dec
inc
jl
roll
repnz
mov
fsubrl
cwtl
ljmp
call
pop
fistpll
mov
lock
jl
cmp
jg
mov
into
jle
xor
movl
outsb
dec
fwait
movsb
insl
inc
inc
loop
cld
jg
cmpsb
mov
rolb
mov
aad
fstpt
jno
add
xor
std
sahf
sbb
and
lods
xor
xchg
mov
mov
ds
pusha
sti
pop
push
dec
xor
dec
cmpsl
orb
mov
jo
push
ret
jp
das
add
adcb
mov
call
lret
les
inc
mov
add
or
xor
sub
pop
add
add
mov
lret
mov
sub
cmp
sbb
sub
jnp
ret
and
scas
pop
jnp
push
sub
hlt
ljmp
add
cmc
insb
fwait
sub
add
gs
enter
movsl
test
nop
inc
cmpsb
outsb
lods
aad
int
cmp
add
lock
mov
adc
mov
inc
fcompl
fcomip
add
sub
push
stc
xlat
fbstp
pusha
add
mov
fidivrs
mov
mov
loopne
int
cmp
call
repz
mov
jmp
aas
ret
nop
ja
gs
imul
mov
pop
push
add
mov
cmpsb
sbb
test
or
incl
sti
outsl
int3
sbb
icebp
mov
xchg
in
add
gs
add
xchg
push
imul
push
repnz
fldt
call
jl
xor
imul
cmpsl
add
mov
shll
mov
push
inc
sbbl
out
lds
jb
aaa
stos
dec
pop
add
inc
jl
or
in
sub
cmp
sbb
pop
dec
and
ffree
imul
cmp
stc
das
pop
sub
mov
add
shlb
fdivr
sbb
and
add
sbb
cmp
mov
or
push
push
add
in
push
out
pop
jg
add
std
push
adc
or
and
and
les
movsl
push
or
inc
pop
movsl
fwait
push
xchg
mov
jp
pushf
fstl
push
adc
add
jne
add
lock
fistpll
xor
fsubr
add
dec
enter
insb
stos
movsb
push
and
dec
das
ss
cld
outsl
mov
test
or
adc
sub
jo
xchg
add
mov
mov
dec
mov
and
mov
testb
arpl
push
sub
pop
fwait
mov
fdivr
test
mov
adc
dec
inc
stc
loopne
jae
add
xor
jg
cmpsb
mov
test
or
shrb
add
pop
add
lds
add
in
cli
negb
icebp
sbb
dec
mov
sub
push
add
sbb
mov
push
clc
inc
sbb
sub
dec
je
mov
outsb
in
loopne
sub
mov
ja
mov
xor
jmp
call
pop
adc
add
cmp
aas
mov
dec
aad
pushf
xor
add
or
lock
xor
xor
call
shlb
xor
loopne
pop
and
cli
cmp
movsb
lods
push
ja
push
sub
sahf
lods
movl
imulb
mov
cmpsl
dec
push
or
jne
in
sbb
sar
je
adc
sub
sbb
movsb
cmp
pop
push
andl
insb
stos
jo
pop
jne
push
push
mov
xor
loop
xor
cld
mov
movsb
push
add
mov
je
sti
dec
cmp
cmp
icebp
loop
movsb
dec
mov
sahf
pop
subb
pop
movsb
lods
xchg
add
dec
push
sbb
adc
hlt
test
ret
mov
fcompl
add
mov
jnp
pop
call
and
or
inc
dec
jnp
mov
nop
daa
lea
nop
jg
aas
jo
inc
jns
clc
lret
loopne
mov
xchg
in
pop
cli
push
mov
or
mov
fimuls
mov
pusha
andl
push
rorl
mov
pop
add
cli
jbe
out
cmpsl
jecxz
mov
mov
pop
loope
sti
push
out
sub
jo
cmpsl
jmp
int
jb
push
mov
inc
popf
sbb
push
push
push
mov
cmp
scas
inc
inc
and
inc
jmp
cmp
insb
push
push
int
pop
shl
std
xchg
outsb
repz
aad
jge
mov
push
xchg
dec
mov
sti
out
clc
push
inc
fimuls
std
mov
inc
lods
and
in
in
in
cmpsb
jo
xor
ja
cmp
mov
pushl
and
or
cli
xor
or
sbb
and
rorl
shll
ficoms
adc
or
xlat
cmp
icebp
ljmp
cwtl
popl
stc
add
hlt
mov
jbe
pop
orb
adc
mov
stos
jne
mov
push
mov
push
cmpsb
push
inc
adc
adc
jg
mov
xor
out
push
jle
cmp
ljmp
sbb
pusha
add
orb
shrl
jp
pop
and
cmp
push
sbb
cmpsb
dec
leave
sub
pop
enter
and
pop
xor
lret
or
lcall
add
call
lahf
les
jbe
sub
push
hlt
mov
xchg
fdivp
outsb
jmp
mov
fwait
mov
xchg
mov
mov
mov
incl
jecxz
arpl
cmp
jl
push
lea
std
ja
rcrb
sub
decl
cmpsl
insb
popa
rcrb
pop
sbb
dec
jle
add
jnp
pushf
addl
enter
xchg
fidivrl
or
cmpsl
dec
incb
adc
mov
and
push
push
mov
xor
pop
cmpb
inc
xchg
sar
sub
test
cmp
aaa
std
xchg
iret
cmpb
sti
jmp
cmp
jecxz
cli
dec
mov
pop
arpl
adc
mov
mov
les
clc
lds
lock
inc
sub
sar
mov
pusha
add
mov
mov
xchg
xchg
fidivs
add
test
insb
adc
dec
pop
fadd
and
xchg
add
pop
call
mov
add
jbe
daa
xchg
mov
stos
pop
add
les
je
ss
sub
js
movl
lock
sbb
loopne
int
in
dec
dec
add
mov
push
cmpsl
push
fs
add
lods
cwtl
mov
pop
mov
clc
jecxz
ficoms
les
mov
loopne
dec
sti
divl
daa
les
dec
xor
cmpsb
mov
adc
jmp
cmp
bnd
add
mov
add
lcall
add
scas
push
dec
in
push
dec
cmp
sub
inc
pop
aaa
cwtl
or
int3
das
clc
add
les
or
sub
or
sbb
cmp
outsb
mov
stos
adc
jl
mov
stos
jg
mov
mov
mov
jmp
in
sbb
lcall
inc
mov
mov
rcl
dec
mov
mov
add
adc
mov
jg
in
js
mov
mov
pop
inc
pop
outsb
pop
mov
rorb
das
outsl
xchg
lcall
js
stc
in
sbb
adc
sti
cmpb
add
pop
pushf
mov
inc
add
sbb
jb
mov
sub
aad
rcr
xchg
mov
sub
or
xchg
add
pop
jle
imul
or
cmp
mov
negb
fildll
sbbb
and
cmpsb
in
repnz
clc
push
pop
scas
push
xchg
xchg
mov
mov
cld
in
pushf
mov
inc
xchg
or
adc
xchg
mov
mov
jp
xor
add
adc
es
loop
xchg
or
adc
mov
popf
rorb
add
add
pop
adc
cwtl
idiv
inc
adc
xor
add
jmp
jne
je
ljmp
lods
imul
loopne
lock
dec
mov
jb
test
call
cmp
pop
stos
jecxz
jb
push
out
or
mov
subl
loop
das
push
add
adc
push
stos
push
or
clc
inc
adcb
pushl
je
xchg
mov
cmp
enter
insl
in
mov
incl
in
add
shrl
dec
ljmp
dec
mov
pop
pop
scas
cmpsb
outsb
std
mov
push
cmp
ljmp
mov
xchg
out
hlt
outsl
cli
pop
push
sahf
sub
hlt
outsl
shlb
loope
mov
sbb
push
cmp
xor
jmp
push
pop
push
and
mov
add
jp
mov
xlat
mov
xor
inc
lcall
not
mov
mov
pop
mov
xor
lods
mov
mov
sarl
push
rcl
push
rolb
push
add
cli
fwait
jno
insb
cmp
insb
movsb
test
fbstp
and
mov
and
and
ret
lret
push
sub
imul
fstpt
loopne
xor
mov
pause
dec
pop
and
mov
push
mov
pop
or
cwtl
or
mov
popl
repnz
std
push
jbe
inc
shl
sub
nop
or
dec
dec
out
add
call
adc
pop
psrld
mov
mov
inc
add
xchg
jno
repz
xchg
iret
inc
js
and
out
ss
push
lret
add
cld
pshufw
add
cmp
sbb
add
addr16
jg
daa
mov
sub
dec
xorb
adc
jg
mov
sub
fadds
jp
cld
sub
pop
leave
or
daa
lcall
or
fisubl
inc
adc
mov
sub
jae
dec
xor
jmp
sbb
roll
sub
test
push
jmp
sbbb
or
add
cmp
decl
push
leave
sub
lret
fadds
adcl
and
jecxz
stos
push
pop
mov
xchg
add
bnd
incl
xchg
cmp
stos
adc
shll
xchg
jo
fwait
mov
and
mov
mov
loope
cli
hlt
cmpsb
mov
pop
push
add
pop
cmc
repnz
adc
inc
inc
adc
ds
stc
loopne
bound
test
hlt
scas
cmpsl
sub
imulb
mov
sbb
or
andb
sub
dec
adc
mov
xor
repnz
add
sub
dec
sarb
loop
push
popa
push
mov
stos
mov
out
mov
push
enter
cld
push
faddl
mov
data16
push
je
mov
adc
dec
or
out
ljmp
push
pusha
cmc
lret
lret
stos
pop
add
jb
stos
mov
mov
decl
imul
data16
mov
repnz
pop
aam
pop
or
sbb
mov
sub
xchg
dec
call
jmp
adc
cs
xor
mov
test
xor
adc
sbb
aaa
je
aas
lds
aaa
std
pop
dec
inc
movsb
mov
pop
aaa
xor
adc
jg
andl
and
sub
inc
in
aas
mov
jo
add
push
add
push
cmc
jg
cmovb
jecxz
popf
add
push
jo
adc
aam
notl
outsb
and
adc
jg
loopne
xchg
xchg
push
adc
in
jmp
sahf
shr
cmp
xchg
testb
hlt
jo
push
dec
or
or
sub
xchg
ljmp
mov
test
xor
sahf
cmp
cmc
in
loope
xor
clc
enter
inc
cs
lods
mov
mov
pop
lock
sbb
jp
fwait
push
dec
cmpsl
cltd
lock
inc
in
add
daa
mov
or
mov
inc
out
inc
add
lcall
int
nop
clc
bound
icebp
push
jle
add
mov
jl
lock
inc
xchg
inc
dec
push
dec
jmp
mov
add
fiadds
xchg
cmc
icebp
stos
insl
pop
adc
push
aam
xor
movsl
pop
mov
pop
jno
aad
push
icebp
xchg
ljmp
xchg
xor
jle
sub
subb
int3
pop
outsl
jp
loop
add
loop
inc
push
push
mov
cmpsb
pusha
cwtl
outsb
sbb
and
sti
mov
shrb
mov
cmp
adc
repz
fincstp
mov
dec
mov
jbe
add
pop
pop
movsb
ja
xchg
nop
imul
lock
sar
in
adc
idiv
mov
inc
sbb
push
pop
xchg
jmp
sarb
mov
mov
mov
lcall
sbb
cltd
and
and
xor
sbb
loop
jle
mov
rclb
dec
ja
push
repz
ret
xchg
js
faddl
xchg
mov
test
add
jb
bound
sbb
imulb
arpl
mov
mov
push
or
loop
or
add
mov
mov
jo
in
les
dec
dec
ss
cmp
adc
push
aaa
test
dec
mov
adcb
shl
orl
lcall
xor
add
adc
push
push
fdivr
push
inc
lret
roll
decl
and
xor
push
mov
adc
lods
jle
dec
daa
push
xor
cmp
mov
stc
cmpsb
int
mov
jo
pop
dec
cli
jae
adc
xchg
pop
mov
xor
jg
mov
repnz
stos
fcompl
movsb
pop
nop
pop
xor
add
incl
cld
add
mov
xlat
push
push
inc
mov
xor
add
icebp
pop
inc
clc
xor
icebp
add
inc
inc
mov
mov
add
mov
orl
ficoml
adc
mov
jb
lods
jno
mov
push
hlt
out
and
inc
aam
je
loop
lcall
sbb
cli
add
adc
fisubrl
ds
cmp
movsb
adc
inc
lds
movsb
push
ja
sbb
xor
xor
pop
mov
add
jl
push
push
jne
push
sub
outsb
sbb
push
ja
sbb
pop
adc
adc
in
call
in
dec
xor
ret
movsb
dec
bound
dec
movsb
mov
bnd
addr16
xor
add
pop
add
cli
scas
sbb
add
pop
scas
dec
dec
lcall
stos
cmpsb
jo
pop
ret
add
jecxz
mov
xor
test
mov
inc
mov
js
rcr
push
mov
arpl
dec
rcll
lea
je
data16
int3
add
push
dec
jecxz
adc
xchg
movsb
mov
cmp
push
push
xor
out
xor
pop
cld
fstpt
pop
dec
sbb
shrb
mov
pop
gs
xchg
ds
gs
cs
jecxz
sub
hlt
mov
push
cmp
push
call
jb
bound
xorb
test
mov
inc
inc
fsubrs
fwait
adc
mov
and
pop
mov
cmpsb
xor
push
orb
push
jle
pop
fs
adc
and
push
adcb
jl
pop
xchg
jl
movsl
cmp
pop
ljmp
push
xchg
loope
adc
aam
dec
out
ljmp
or
or
and
push
add
cli
scas
sbb
xor
and
push
mov
add
xchg
adc
test
mov
pop
push
add
leave
cmp
inc
dec
mov
pop
daa
cs
scas
rcrl
rolb
aam
push
cmpsb
inc
push
call
xchg
mov
and
ss
insl
dec
inc
or
push
sbb
loopne
add
pop
loope
aaa
xlat
mov
nop
xor
sub
leave
lret
xor
movsl
dec
and
decl
rcll
sahf
push
push
jecxz
jo
test
push
loope
inc
jo
sub
cmp
mov
cmpsb
mov
fdivrl
hlt
sub
ss
rolb
xor
nop
add
add
outsb
fists
push
enter
sarb
fs
jg
outsb
test
push
xor
fmull
mov
sarb
test
jno
sub
sbb
cld
mov
test
cmc
dec
test
cwtl
shl
push
fstpl
sub
les
ss
inc
pop
movsb
pop
xor
inc
xor
mov
cmp
sarl
subb
clc
in
mov
loop
jge
test
jmp
push
sti
lods
rclb
inc
mov
cmp
pop
sbb
push
jge
shrl
adc
inc
sub
lcall
xor
test
ret
es
lea
pop
inc
pop
aam
dec
or
movb
ja
pop
dec
sub
cld
testb
sbb
mov
jg
mov
mov
add
cli
push
mov
imul
sbb
mov
adc
mov
pop
int3
jl
sbb
inc
lods
mov
in
ja
sahf
mov
push
pop
add
mov
push
push
jge
mov
lock
in
mov
ja
clc
popf
movsb
aam
and
jae
fstl
cltd
pusha
call
pop
ljmp
ret
imul
push
repz
inc
and
dec
in
ljmp
push
adc
pusha
sahf
sbb
jae
mov
mov
cmp
and
sbb
inc
loopne
push
test
fisubrl
fiadds
mov
ficoms
adc
pusha
or
adc
lret
lcall
dec
sbb
lds
cs
adc
add
fs
rclb
bound
xchg
push
push
popa
arpl
outsb
out
mov
pop
rcrl
iret
pop
add
and
add
mov
je
xor
push
mov
add
mov
dec
repnz
fs
pop
cld
inc
add
mov
mov
iret
sub
xor
and
lock
das
xchg
mov
mov
cmp
out
call
mov
nopl
leave
jl
push
cmp
popa
add
mov
add
fidivs
sub
dec
popf
sbb
cmp
lcall
test
add
bound
jmp
push
iret
mov
cmp
xchg
push
scas
jnp
xor
test
jns
adc
lock
cmc
mov
mov
sbb
scas
pop
fimuls
add
pop
in
xchg
stos
lea
mov
mov
sbb
and
mov
add
sbb
lret
lcall
jg
or
mov
jmp
scas
dec
imul
push
push
xlat
push
ss
dec
dec
jne
sub
js
clc
out
ja
cmpsl
cld
inc
scas
add
mov
or
inc
insb
mov
push
aaa
pop
sub
jp
mov
xchg
or
ficoms
inc
lods
push
jo
in
mov
arpl
and
outsb
push
cmpsb
push
mov
dec
ds
inc
cmp
int3
stc
dec
push
mov
fwait
pop
repnz
jo
inc
jg
lcall
insb
xor
shlb
movsl
lods
cmp
fsubr
das
icebp
mov
addb
or
add
shll
mov
dec
mov
mov
fmul
push
xchg
push
mov
jo
xor
add
pop
mov
test
hlt
decl
mov
push
or
aaa
sub
arpl
mov
inc
jg
sahf
je
mov
shll
cs
lret
movsb
mov
and
sbb
or
dec
dec
clc
bound
test
jl
add
cs
cmpb
and
mov
jl
int
inc
jbe
mov
ljmp
adc
add
insl
lcall
shrl
dec
dec
shrl
push
nop
data16
add
imul
addl
enter
cli
lods
mov
insb
jp
cwtl
testb
and
pushf
aam
pop
popa
into
mov
or
and
popa
or
jne
clc
addb
xchg
mov
sbb
js
push
cmp
pop
inc
clc
andb
jo
jbe
push
in
mov
sbb
cmpl
imul
cmp
icebp
add
mov
and
js
std
fwait
lock
ja
cmpsl
imul
data16
je
lock
add
mov
xchg
jno
mov
mov
inc
ret
icebp
fwait
repnz
scas
mov
cli
jg
hlt
lods
cmpsb
movsb
dec
mov
cltd
mov
sbb
adc
push
adc
adc
jp
inc
test
sub
dec
add
addl
push
lods
jecxz
lock
and
sti
imul
cmp
js
hlt
fnstenv
or
fldenv
call
and
ljmp
pop
ret
outsl
nop
push
popa
imul
incl
test
sub
fiadds
aaa
cmp
xor
mov
js
fld
jp
sub
dec
inc
andb
push
inc
add
fsubl
jne
mov
ror
cli
cs
mov
fcmovnu
add
test
faddl
pop
jge
scas
push
aaa
xor
fildl
push
mov
pop
dec
rcrl
shll
push
mov
jo
sbb
sbbb
jae
pushf
push
adc
lock
inc
push
and
xchg
roll
scas
add
add
mov
test
mov
push
lods
cli
int3
ffree
jbe
push
add
scas
jg
and
or
mov
mov
ss
jg
dec
and
jl
arpl
sbb
add
add
pop
clc
mov
mov
or
xor
lcall
cld
lds
mov
cltd
xchg
or
adc
adc
dec
adc
adc
rcrb
adc
sub
ljmp
fidivrl
add
sub
add
adc
lock
add
mov
mov
cmp
dec
stc
mov
and
mov
push
bound
hlt
into
rol
cmpl
adc
or
mov
sahf
and
mov
call
in
pop
or
xorl
inc
push
loopne
add
mov
pop
sbb
fcoms
pop
movsb
xchg
ret
and
or
fisubs
and
rol
loopne
xor
das
xchg
add
loope
out
inc
pushf
sbb
jno
mov
inc
jge
push
insl
mov
lcall
ret
cmp
loope
and
adc
adc
inc
mov
push
dec
lods
cwtl
mov
fisubs
mov
dec
xchg
xchg
fs
push
sub
or
sub
dec
xor
sub
sti
scas
pop
adc
xor
addr16
imul
adcb
ss
enter
sbb
leave
sub
out
add
ja
mov
adc
call
pop
mov
into
pop
adc
mov
jbe
jmp
xchg
cld
aaa
sbb
push
mov
cli
fcoml
pushl
xchg
xor
scas
insb
pusha
fldl
inc
sbb
pop
sarb
and
or
push
cmp
scas
fwait
pusha
add
pop
adc
data16
enter
inc
dec
loop
adc
stos
mov
fists
in
stos
adc
pop
xlat
mov
sub
mov
add
mov
nop
in
sarb
popa
cmc
mov
shlb
inc
mov
or
nop
icebp
mov
xchg
xchg
push
fsubrs
sub
push
sbb
sbbb
jnp
ds
data16
cmpl
or
sbb
pusha
adc
shrl
xor
ljmp
movsb
stos
mov
jge
arpl
andb
ret
js
xchg
inc
push
and
jp
adc
das
add
orb
cmp
mov
and
ss
xchg
test
mov
incb
js
push
pop
pusha
dec
fdivrs
into
add
ret
adc
jge
push
xor
lcall
lcall
adc
mov
in
insl
cmp
filds
addl
rcrl
mov
add
sbb
pusha
cmpb
xchg
je
pop
pop
ret
fdivrs
fwait
and
mov
xchg
mov
sub
loopne
int
jmp
jecxz
or
inc
rorl
xchg
push
mov
add
and
pop
xchg
mov
jmp
or
jo
push
ret
mov
aaa
mov
insb
fucom
jmp
mov
into
das
pop
loopne
lcall
pop
xor
xor
dec
lods
cmp
mov
or
dec
daa
call
insb
pop
mov
fwait
and
pop
pop
scas
add
and
pop
push
fwait
add
js
sbb
inc
ja
clc
mov
mov
das
jge
pusha
dec
jno
jmp
add
icebp
xor
jl
lods
test
pop
aam
add
les
or
push
mov
or
rcrb
pop
dec
sbb
nop
mov
stos
mov
mov
dec
sbb
test
stos
cmp
add
inc
loope
sbb
lret
fsubrp
je
cli
aam
xchg
into
dec
in
cltd
add
push
aad
insl
jb
xchg
clc
test
mov
inc
or
in
add
mov
js
cmpsb
dec
outsl
inc
repnz
and
cs
jmp
movsb
xchg
jle
mov
xchg
minps
cmp
idiv
loopne
cmpsl
dec
stos
dec
int3
out
and
lods
out
push
push
jne
ficompl
mov
jae
aad
sbb
iret
test
pop
fucomip
xor
nop
push
sarl
mov
loopne
pop
adc
push
and
fisubl
mov
ror
jo
clc
in
sbb
lds
shrb
sbb
lea
lds
sti
adc
push
sbb
push
lds
js
ss
inc
xor
imulb
fdivl
or
sbb
dec
add
inc
cmp
incl
int3
jo
test
jp
mov
ss
fisttps
cmp
xor
xor
mov
out
mov
add
shll
repnz
fstl
inc
push
sub
repnz
mov
lock
fmull
in
pop
jmp
insb
xchg
mov
and
dec
orl
add
shrl
stos
mov
adc
pusha
inc
or
mov
orl
push
cmp
ljmp
aas
mov
cmp
fwait
ljmp
sar
cwtl
xor
enter
add
mov
mov
inc
loopne
fsub
out
mov
mov
push
fdivr
sbb
or
std
les
mov
pushl
cld
fmuls
in
or
dec
pop
mov
fmuls
xchg
push
subb
jnp
std
imul
cmp
lret
xchg
rcl
add
xor
mov
rorb
xor
dec
xor
stc
iret
insb
aas
sub
cmp
xor
jecxz
cmp
js
out
jo
push
xchg
sbb
lcall
xchg
pusha
xchg
stos
push
mov
in
mov
pusha
insb
hlt
lcall
ficomps
jge
lea
repz
call
pop
or
cmp
adc
add
bound
inc
stos
clc
rcr
pop
cmpsb
xor
xor
pushl
js
movsl
inc
sbb
push
mov
or
or
test
imul
push
loopne
mov
and
cmp
arpl
into
popa
fsubs
or
jg
pop
aad
cld
mov
fiaddl
imul
sti
pop
cld
push
mov
leave
push
or
movsb
pop
xor
mov
sarb
push
dec
fcoml
and
mov
xor
push
or
inc
mov
mov
popf
cmpsb
call
add
pop
sbb
add
fcomps
aam
sbb
pop
mov
mov
mov
and
mov
add
jno
icebp
mov
xchg
outsb
dec
cmp
fisubrs
std
sbb
scas
stos
push
into
or
ss
cltd
call
xor
mov
fidivl
add
add
js
imul
iret
jge
or
sbb
cmpl
imul
add
clc
ja
loope
daa
pop
repnz
pushf
push
mov
and
imul
jo
sarb
pushf
mov
imul
jp
mov
inc
dec
adc
xchg
fnstcw
jp
movsl
jg
jmp
ljmp
sub
popa
add
pushl
std
scas
push
stc
mov
mov
push
cld
leave
mov
push
mov
popf
mov
add
shrl
adcb
into
adc
movsl
mov
sbb
xor
xor
outsb
xchg
mov
add
xlat
leave
jnp
adc
push
pop
aam
fwait
pop
mov
inc
and
dec
sub
scas
sbb
jle
add
fcom
aas
adc
pop
fwait
ret
js
enter
inc
aam
cs
pop
mov
or
sbb
ss
add
cmp
ja
mov
es
pop
lds
mov
xor
test
std
mov
inc
mov
test
pusha
in
pop
pop
fcmovnu
push
pop
push
push
std
dec
decl
cmc
es
movsl
cwtl
inc
or
mov
out
lret
aad
dec
or
ds
insl
outsb
push
mov
incb
or
loope
and
pop
pop
jns
repnz
jo
inc
add
mov
inc
je
xor
cs
xor
popf
adc
dec
adc
ds
jbe
mov
push
mov
jmp
rcrb
adcb
push
xor
pop
adc
sbb
mov
ss
mov
xor
gs
inc
mov
lods
fcom
pop
idiv
lea
and
pop
pusha
mov
or
int
fstp
daa
sar
sbbb
enter
sub
cs
stos
push
inc
inc
inc
rcrl
sbb
push
xchg
ss
pop
add
push
in
push
sub
insl
sbb
cmp
mov
add
and
xor
mov
je
push
ret
in
mov
or
rcll
addr16
push
add
cltd
xorl
and
lods
mov
mov
cmp
call
loopne
adc
jne
dec
ljmp
neg
sahf
xor
sbb
pop
pop
mov
scas
clc
pop
fcoms
push
scas
jnp
lock
add
nop
mov
jns
pop
inc
add
fcmovu
adc
cmpsb
cmovs
jo
hlt
inc
inc
mulb
clc
clc
push
and
mov
rcll
clc
push
dec
or
and
cmp
or
mov
ss
fidivl
pop
aaa
mov
insb
jg
pop
and
adc
scas
lds
cld
pop
mov
push
push
sbb
icebp
sbb
sbb
sarb
inc
stos
loop
sub
or
pop
in
sbbb
aad
stos
push
pop
in
stc
push
and
out
adc
or
imul
mov
adc
adc
xor
cmp
dec
fisubs
push
aaa
outsb
jp
iret
inc
dec
call
and
bound
fwait
outsb
lret
rcll
pusha
lea
test
insb
cmpsb
fistl
xchg
hlt
mov
js,pn
sub
add
hlt
gs
push
out
icebp
xchg
pop
adc
jbe
xchg
iret
adc
xor
mov
add
cmp
cli
lret
cmpsl
or
inc
jb
daa
sysenter
jg
icebp
aaa
ds
loop
adc
or
out
pop
dec
clc
xchg
hlt
insl
pusha
loopne
popa
jge
add
decl
xor
mov
insb
xchg
or
sbb
idivl
add
clc
aaa
cld
push
mov
lcall
lcall
lods
test
dec
xor
shlb
pop
pop
icebp
add
mov
cltd
xchg
mov
clc
cs
add
je
adc
fs
gs
add
mov
mov
mov
jmp
mov
adcb
inc
imul
loop
addl
out
fsubp
push
ja
repnz
dec
mov
jl
add
pop
push
fstps
mov
ret
adc
lea
and
cli
sti
in
mov
sbb
inc
test
sub
addl
sbb
mov
orl
dec
push
and
cwtl
jno
ds
loop
jb
dec
ss
rcl
and
stos
dec
dec
pusha
pop
jb
push
mov
lods
loopne
adc
add
mov
loope
outsb
sub
pop
adc
push
and
mov
jg
mov
and
xor
fwait
lock
cmp
incl
cld
push
sub
test
or
mov
adc
fstpl
inc
adc
cli
lahf
movsl
das
dec
call
jp
movsb
fbld
adc
into
push
xchg
pop
aad
ret
sub
mov
pop
cmp
add
mov
cld
and
cmc
popa
fsub
cmpsl
or
and
and
jo
sbb
or
in
push
pop
daa
xchg
insb
jns
lahf
vandnps
and
sub
or
pop
imul
test
out
pop
insb
sti
inc
pop
push
push
cmc
mov
sahf
jo
bound
dec
push
scas
mov
jl
repnz
xor
pusha
pop
jg
or
rolb
ror
xchg
xor
fisubrs
add
orb
movsl
pop
mov
lret
cmpsl
cmpsb
cmp
aaa
sub
xchg
nop
mov
push
push
movsl
mov
cs
cld
or
xor
les
cmpb
sbb
mov
addl
int
or
shr
pushf
mov
mov
in
fcomps
mov
aad
adc
mov
mov
fisubrl
bndldx
subb
sbb
inc
xchg
in
or
add
sub
add
pop
test
push
jnp
sbb
mov
hlt
add
add
xchg
jle
dec
std
ljmp
cmp
movsb
add
sbb
add
push
call
mov
xor
mov
add
adc
push
test
xor
mov
sar
subl
sti
cwtl
leave
pop
xor
cmpsb
jno
dec
out
push
adc
mov
ds
mov
fwait
shr
mov
sub
shr
pop
je
ljmp
fstpt
mov
aam
into
push
ljmp
lret
cli
scas
fwait
add
jle
cmpl
pusha
out
roll
jne
sub
pop
ja
out
ret
add
imul
jmp
faddl
mov
in
insb
cmp
and
fnsave
cmp
jmp
pop
inc
movsl
or
jbe
adc
insl
add
and
outsb
xchg
jmp
daa
xlat
xchg
push
stos
cmp
dec
jle
add
and
xchg
scas
inc
add
call
jg
in
sub
push
sti
fildl
mov
sub
mov
lcall
push
sbb
sbb
mov
mov
sti
stos
pop
add
push
sub
cwtl
test
or
cltd
push
pop
int
mov
or
add
leave
sbb
cmp
mov
in
rol
mov
data16
or
push
int
es
mov
mov
pop
mov
xor
clc
push
fidivrs
clc
into
jo
adc
push
inc
jl
sub
fbstp
loop
inc
cmp
cwtl
dec
shll
and
icebp
mov
es
loopne
lret
inc
hlt
mov
or
subb
loope
pushl
push
aam
adc
push
ficomps
or
les
hlt
test
leave
cmp
xor
lret
cld
pop
mov
add
fs
xchg
inc
lods
xchg
pop
mov
loopne
sbb
cs
ret
lds
dec
lea
push
jge
rorl
loopne
xchg
mov
movsl
movsl
popf
cwtl
jbe
add
cmp
test
mov
mov
aaa
lcall
mov
aas
lea
lods
xchg
sub
pop
in
sub
push
das
xchg
sbb
xchg
ljmp
std
das
mov
mov
incb
push
xchg
mov
inc
mov
cs
faddl
scas
clc
mov
bound
jg
fdiv
adc
cmp
mov
dec
scas
push
push
mov
pop
xchg
push
jmp
int3
subl
enter
outsb
push
cwtl
jb
jmp
clc
jl
scas
cli
fwait
ss
jo
popa
mov
int3
pop
mov
sbb
sub
mov
add
shlb
or
dec
gs
lcall
add
and
inc
test
push
mov
pushf
sbb
test
insb
push
jne
repz
cmp
imul
inc
pop
dec
scas
rol
jmp
inc
dec
ret
test
sahf
push
sbb
and
push
es
loope
lcall
ljmp
movsb
pop
std
into
cmc
lcall
xor
sub
push
rclb
cs
add
rorl
xor
mov
loopne
mov
push
push
test
lahf
sbb
jp
andl
push
into
dec
andps
push
mov
shl
shl
xorb
push
cmp
and
mov
jp
daa
ret
repnz
adc
mov
mov
test
mov
scas
mov
sub
call
scas
ror
fbld
icebp
outsl
js
sbb
fcomip
aad
cli
push
ljmp
mov
sub
aaa
mov
nop
mov
jp
sub
rcrb
scas
out
repnz
test
sbb
ret
ret
dec
cli
pusha
js
hlt
test
mov
dec
xchg
mov
adc
mov
and
lds
mov
push
dec
in
mov
pop
mov
fimuls
lahf
loop
std
lcall
pop
rolb
scas
mov
out
aad
xor
pusha
xlat
or
ljmp
cwtl
cli
jg
lret
les
je
sar
stos
ja
iret
les
jecxz
mov
sahf
or
inc
xor
insl
xchg
fildl
stos
or
or
sarb
jno
call
push
gs
stos
inc
fwait
orb
mov
jle
mov
fcomps
into
mov
dec
rcr
xor
sti
insl
hlt
lods
out
faddl
jge
jl
loope
ss
or
aaa
mov
data16
frstor
decb
jns
popf
add
roll
mov
xor
stos
xchg
mov
or
mov
xlat
stos
dec
jae
pop
ss
mov
sbb
stos
loopne
sarb
mov
jnp
push
push
repnz
inc
dec
dec
jb
mov
add
fbstp
sbb
jne
pop
outsl
shrl
cmp
adc
sub
sub
xor
cltd
mov
mov
xchg
stos
enter
jp
test
xor
sub
decl
addb
push
sbb
cld
xchg
fmull
mov
jae
ja
adc
adc
adc
cmp
pop
mov
loope
or
add
jl
dec
lock
mov
sbb
dec
mov
mov
push
out
ljmp
adc
js
dec
fnstenv
adc
rolb
sub
pushf
push
ret
outsb
and
push
jbe
imul
jno
xlat
or
push
pop
dec
int3
call
sbb
adc
mov
jl
adc
push
mov
adc
xor
xor
ss
js
mov
je
sub
mov
sbb
in
add
inc
add
pushl
std
in
mov
push
loop
and
push
daa
xchg
xchg
jl
adc
jo
rorb
data16
and
not
jle
dec
push
test
jg
in
into
adc
cld
andb
cmp
mov
test
leave
push
and
mov
call
add
sbb
daa
push
fildl
das
pop
addl
sar
test
lcall
js
hlt
flds
fisttps
out
xchg
aas
cmp
pop
xchg
push
lahf
jae
pinsrw
sbb
cmp
cltd
push
xchg
fxtract
dec
push
frstor
outsl
push
fwait
pusha
lea
sbb
loop
scas
pop
jge
xchg
scas
test
testb
or
xchg
in
imul
cltd
adc
sbb
ficomps
aas
cvtdq2ps
push
les
js
test
sahf
repnz
dec
add
mov
xor
pop
and
daa
push
stc
int3
mov
cmp
stos
dec
and
xor
pop
pushf
in
fsubrs
push
mov
adcl
lahf
testb
xlat
int
mov
fwait
and
mov
push
xorb
push
cmpl
loopne
sbb
sub
pop
fcompl
call
test
andb
sbb
xlat
cmpl
in
jno
inc
cmc
ja
das
clc
nop
adc
add
xchg
mov
lock
push
dec
pushl
sub
xchg
and
xchg
test
popa
cmp
adc
fwait
data16
cmp
and
sub
mov
lahf
add
aad
mov
mov
push
mov
or
adc
xchg
jecxz
mov
cmpsl
and
push
ljmp
push
jle
rclb
cld
xor
arpl
mov
mov
cmpsb
adc
push
fnsave
jae
inc
loopne
push
lock
mov
mov
subb
decl
pop
sti
adcl
addr16
int3
cmc
mov
add
jge
pushfw
jb
xchg
add
adc
sarb
xchg
cmp
dec
popl
movsb
outsl
je
push
pop
ljmp
jo
or
negb
mov
jo
add
fisttps
icebp
pop
sbb
push
cmp
xchg
push
movl
xchg
bound
mov
rorb
dec
pop
out
cli
mov
cmc
sbb
inc
ljmp
mov
lods
mov
push
mov
into
add
inc
sbb
mov
fwait
out
add
pop
fcmovnu
test
push
test
jl
push
in
mov
lock
xor
mov
sub
out
sbb
inc
push
mov
mov
and
sub
loopne
xchg
loopne
lea
mov
mov
decl
mov
je
xor
out
mov
mov
dec
out
pop
lock
pop
lds
repnz
lret
push
cld
jg
icebp
and
sub
add
rorb
xor
mov
adc
mov
das
xchg
lods
inc
jg
orb
cmp
add
jg
jae
mov
repz
xor
dec
outsl
mov
adc
inc
add
jge
cltd
scas
incl
push
gs
iret
mov
int3
out
mov
cmp
or
xorb
mov
icebp
sbb
pop
mov
mov
js
test
sub
idivb
outsb
rclb
aaa
les
sti
dec
sub
loopne
push
in
pop
out
ljmp
pop
ret
push
or
add
sbb
decl
mov
ret
and
loop
push
icebp
or
lahf
cmpsl
js
push
add
adc
add
test
inc
jb
loopne
in
mov
mov
movsb
int
test
in
ja
imul
pop
push
insb
ljmp
jg
ss
mov
push
inc
jl
sub
jns
dec
or
popf
adc
rclb
xchg
orl
das
cli
and
jns
push
and
sbb
fstpt
adc
ffree
pop
mov
cmpsb
orb
orb
adc
inc
ljmp
aaa
sbb
fmuls
inc
loop
rclb
pushf
sti
mov
xchg
es
arpl
jbe
inc
jg
jbe
imul
lcall
lcall
or
pop
mov
push
adc
shlb
dec
xchg
adc
xchg
movsb
push
inc
lahf
mov
insb
cli
sub
mov
dec
cmp
in
and
ljmp
mov
push
sbb
in
ret
incl
adc
andl
jmp
and
mov
sbb
xor
roll
push
mov
test
push
outsl
jne
roll
mov
lock
push
jge
jp
add
sbb
add
add
out
rcrb
les
rcl
and
push
fmull
and
rol
mov
add
cmp
je
adc
add
insl
adc
arpl
inc
dec
jnp
mov
lret
and
idiv
daa
and
popa
out
add
jg
orb
mov
cmpsb
les
mov
pop
shll
pusha
lock
add
or
add
xchg
inc
pushf
sub
mov
movsl
xchg
daa
jecxz
icebp
mov
mov
ljmp
push
icebp
mov
mov
ljmp
dec
lret
mov
jb
rcrl
adc
fimuls
and
mov
mov
pop
scas
mov
jg
dec
pop
xor
and
add
jo
pop
inc
add
mov
push
fidivrl
lock
aaa
inc
shlb
and
mov
stc
jb
and
add
fistpll
xchg
rolb
push
outsl
fnsave
jge
xchg
jecxz
dec
je
jnp
mov
xor
cmp
andl
mulb
mov
inc
xchg
inc
popf
cwtl
push
xchg
mov
int
test
push
xor
dec
outsl
ret
movsl
jge
dec
test
add
data16
xchg
fldl
push
ficomps
out
add
decl
pop
in
push
mov
adc
or
jle
ds
dec
in
mov
das
into
or
mov
mov
dec
insl
sub
inc
in
adc
jmp
jp
cmp
pop
inc
shlb
data16
fbstp
mov
add
sti
pop
or
push
shl
sub
cmp
loopne
test
push
cmc
popa
dec
adc
pop
sbb
incl
mov
xor
inc
iret
sti
add
ret
or
sahf
scas
add
sbb
dec
mov
imul
mov
ss
pop
mov
push
iret
rolb
xor
cmp
sbb
push
lret
mov
dec
insl
mov
mov
xchg
sbb
mov
popf
stos
mov
dec
mov
adc
add
add
jecxz
xor
xchg
xor
push
into
xchg
cs
pushf
popf
push
jg
add
pop
mov
cmp
xchg
ret
dec
mov
scas
pop
add
loopne
into
xor
int
loop
loope
adc
sub
stos
loopne
filds
push
add
jb
lahf
add
adc
xchg
jl
aaa
pop
xor
mov
inc
shrb
add
out
add
shrb
scas
test
sub
clc
pop
inc
int3
inc
fdivrl
mov
add
enter
lock
sar
cmp
adc
adc
je
loope
push
icebp
negb
std
sbb
add
sub
lods
in
push
jl
int
mov
and
mov
add
xor
scas
call
popa
push
mov
sub
lock
jo
inc
or
enter
out
jo
imul
fnstsw
test
data16
push
rorb
mov
add
test
cmp
stos
or
push
aaa
leave
in
call
je
cmp
xlat
lahf
sahf
or
adc
jg
xchg
aad
enter
out
inc
cli
fs
push
xchg
leave
les
jge
into
js
incl
mov
leave
sbb
add
dec
mov
fidivs
push
sub
sub
fistl
mov
pop
mov
or
pushf
and
pop
aam
jne
add
out
cmp
in
mov
add
addl
mov
cwtl
out
xchg
mov
adcb
insl
testb
xchg
inc
xchg
icebp
push
sub
cmp
dec
pop
decl
fwait
add
cmp
jbe
ret
mov
mov
cs
into
idivl
add
mov
xor
movsb
adc
dec
jge
lea
xor
stos
push
js
dec
pop
jbe
jns
cmp
add
decl
stos
xchg
push
jmp
push
xor
pop
jbe
es
jecxz
cmp
xchg
push
dec
clc
mov
repz
cli
bound
cs
data16
add
jg
xchg
adc
mov
push
roll
adcl
fsubrs
cmpb
pop
ss
push
ficompl
adc
test
mov
cmc
mov
cli
dec
movsb
mov
sub
or
pusha
pop
mov
or
xor
addl
cmpb
rorb
add
add
les
dec
push
mov
mov
jecxz
push
aaa
adc
sbb
ret
cld
popa
sbb
or
sbbb
or
iret
clc
sar
mov
jbe
fbstp
mov
aaa
bound
test
lds
fbstp
dec
inc
outsl
lods
test
shl
addl
and
adc
xadd
int3
test
fs
pop
or
jle
pop
mov
in
mov
adc
add
popa
jle
in
mov
nop
outsl
mov
push
mov
and
xor
ret
int
incl
cmp
inc
mov
cli
jg
in
fsubr
xlat
pusha
shll
cmp
sub
outsl
imul
clc
inc
jp
mov
cwtl
adc
inc
jmp
addl
and
add
jecxz
in
lods
inc
inc
stc
or
mov
imulb
sub
add
add
iret
add
cld
fidivrs
push
stos
mov
mov
pop
mov
scas
js
outsl
call
arpl
in
add
cli
add
shrl
and
jp
dec
or
lcall
lds
push
lock
fisttpll
orb
sub
or
push
add
push
push
sub
btr
test
mov
int3
xor
stos
das
daa
adc
repz
test
fbld
add
sbb
scas
pop
fidivs
fiadds
loopne
mov
std
or
test
push
in
mov
and
xor
jp
addb
lock
and
add
xlat
fsubs
popa
mov
and
ds
adc
or
fcmovnu
xorb
test
sub
lea
sbb
popa
aad
aad
cs
lret
jno
cld
sbb
daa
or
lcall
aam
ljmp
sbb
sub
leave
and
aas
lods
addb
je
push
mov
insb
insb
xchg
pushf
imul
and
fdivp
cmp
adc
and
xchg
inc
jno
ret
lahf
mov
fldl
in
ret
push
fldcw
out
xor
mov
or
push
xor
dec
das
add
mov
cmp
add
repnz
push
movsl
xor
cld
mov
pop
adc
push
or
sbb
push
out
xchg
je
out
sub
cmpsl
lods
repnz
sbb
in
fsubrs
lret
sub
lock
or
out
mov
add
pop
loopne
bound
shl
adc
mov
add
ljmp
lea
ljmp
mov
push
xor
stos
movsb
jo
mov
or
ret
int
add
xor
add
fstpl
mov
out
mov
mov
mov
lock
out
jbe
dec
mov
cmpsl
stc
scas
ds
push
andl
push
cmp
ret
add
mov
sbb
xchg
add
iret
xor
outsb
sub
sbb
inc
xchg
xchg
mov
jecxz
fwait
lods
push
push
in
bound
cmpsb
xchg
negb
test
inc
mov
scas
cmc
add
daa
push
scas
cmp
sbb
loop
lret
shll
adc
addb
or
push
cmpsb
xor
call
jle
mov
dec
add
int3
xor
ret
pop
mov
push
movsb
loopne
jl
incl
dec
in
popa
mov
add
or
add
std
das
add
add
cmp
or
inc
shl
push
loopne
call
cmp
sub
popa
dec
cltd
ljmp
fcmovb
out
lret
inc
sub
fbstp
loope
sbbl
dec
fadds
sahf
aam
and
shr
std
enter
loop
dec
cmp
sbbb
push
decl
pop
dec
sub
pushf
or
hlt
popf
lock
hlt
mov
jae
cmp
decl
xchg
js
and
push
movsl
aad
mov
adc
ljmp
mov
jbe
dec
ja
loopne
mov
sub
ffree
ret
cmp
or
fcomps
adc
outsb
or
cmp
addl
pop
xlat
add
out
dec
push
sahf
cld
push
pop
xchg
fs
mov
cmp
push
dec
aaa
dec
orb
mov
dec
adc
ficoml
lret
std
xor
push
jecxz
xchg
outsb
popa
push
pop
lock
sbb
inc
push
pushf
je
data16
xchg
mov
out
dec
pop
insb
cld
incl
int3
jl
imul
nop
cwtl
pop
sti
mov
adc
push
nop
dec
cmp
pop
xchg
in
pushl
mov
test
cmp
jp
ficoms
mov
sub
hlt
in
xlat
fstpt
or
clc
mov
sub
lcall
jno
cmc
pop
adc
add
lcall
cmpsb
inc
pusha
inc
out
ljmp
add
mov
sahf
add
pop
or
cli
sbb
aas
outsl
mul
sub
pop
sub
sub
aas
or
int
mov
mov
jmp
mov
ja
add
pop
or
lock
mov
push
pop
fld
jle
mov
insb
sub
aaa
dec
ljmp
mov
enter
mov
rol
push
mov
add
pop
hlt
fwait
cmc
adc
and
or
add
mov
repnz
mov
sbb
clc
push
jo
or
sub
dec
sbbb
dec
jge
mov
push
xor
add
or
pop
mov
je
or
mov
in
add
pop
addr16
bound
mov
lcall
add
jmp
fidivrs
or
imul
clc
movl
aas
daa
dec
lahf
or
imul
clc
pop
imul
fisubrl
cld
jp
jmp
ds
imul
imul
ljmp
insl
out
xor
or
out
jecxz
cld
outsl
adc
mov
ljmp
dec
or
mov
pop
daa
aaa
xorl
mov
pop
in
push
sub
dec
scas
mov
sbb
adc
pop
imul
or
sub
sahf
mov
adc
repz
mov
loope
mov
fstps
xlat
mov
pop
xchg
push
nop
roll
mov
mov
repz
jecxz
test
aad
adc
clc
fdivl
and
push
jl
sbb
idivb
push
sbb
pop
pop
inc
mov
lock
sub
mov
scas
xchg
call
jge
dec
sub
xor
jg
mov
xchg
add
push
rcrb
mov
rcrl
sub
push
cltd
jbe
lea
movsb
jae
or
cmp
subl
sbb
add
insb
fdivrs
dec
ljmp
cld
adc
and
aas
fcmovu
fadds
scas
xor
cmp
mov
ja
push
scas
mov
push
inc
dec
pop
dec
sub
loopne
push
add
push
mov
out
cmp
scas
dec
mov
and
cmp
addl
xchg
outsl
clc
stos
add
sarb
jmp
push
les
loopne
sub
outsl
ffreep
push
in
call
fidivl
xor
shlb
loopne
pop
push
sub
jo
jp
pop
je
jmp
add
lods
cmp
cmpsl
jne
mov
sarl
hlt
inc
sar
sahf
xor
stc
jae
es
jns
xchg
adc
add
sti
cmp
cld
or
xor
inc
xor
push
sbb
testl
inc
int
das
inc
cmp
cmp
mov
and
dec
pop
push
dec
loopne
push
sub
dec
jge
call
push
xchg
repz
ficoms
dec
lcall
cmp
push
sub
and
aaa
loopne
sub
iret
es
or
cmpb
out
shll
mov
and
dec
mov
or
inc
stos
sbbb
sbb
out
add
jnp
std
jmp
cs
pop
sbb
outsb
cmpsb
ja
mov
mov
add
in
ret
imul
cmpsb
push
rclb
jne
mov
xor
fmul
add
sahf
sub
outsb
ljmp
xchg
fcmovb
fldt
mov
cmc
dec
ficompl
cld
lret
push
push
mov
int3
stos
pop
lea
fcmovb
jo
test
outsl
add
loopne
adc
jns
pushf
testb
mov
shrl
sub
dec
pusha
add
push
out
inc
imul
jg
div
loopne
jge
cmp
inc
rorl
jecxz
pop
xor
in
fwait
test
and
data16
test
and
and
fcompl
cmc
and
pop
mov
cmp
jmp
sub
ja
dec
icebp
push
mov
in
aad
repnz
push
test
push
jbe
sub
sub
mov
adc
out
mov
sub
insl
fwait
repz
jg
ja
add
push
sti
jae
fnstenv
in
jb
pop
testb
popl
mov
cmp
mov
sbb
enter
imul
dec
inc
negb
pop
rol
mov
lock
xor
les
subl
loop
xchg
icebp
rclb
adc
add
outsl
sub
movsb
outsb
push
and
sti
cmp
sbb
lcall
jg
dec
sahf
add
or
sbb
add
cmp
mov
inc
out
mov
rclb
lret
clc
jmp
popa
mov
add
adc
mov
je
jge
negb
mov
movsb
push
fcmovne
or
xlat
sbb
xorl
outsb
and
pushl
fadds
mov
pusha
scas
pushf
into
inc
lds
dec
cli
xchg
push
bound
sbb
cmp
mov
dec
movsl
pop
addr16
push
push
out
je
movsl
mov
dec
xor
and
dec
in
and
lock
jp
or
lock
mov
fmulp
mov
sti
sub
addr16
iret
mov
cli
cwtl
out
and
and
dec
pusha
dec
hlt
cmp
stos
lcall
and
aaa
add
shld
push
cmp
dec
jmp
push
sbb
cwtl
scas
mov
fmul
push
mov
xchg
mov
push
sbb
loope
jg
ljmp
mov
sub
fnsave
adc
dec
clc
dec
sar
or
xor
adcl
mov
ffreep
mov
pop
sbb
pop
insl
mov
add
mov
push
inc
dec
xor
rcr
and
lret
adc
push
fnstcw
pop
jo
inc
xchg
in
xor
decl
daa
push
mov
jmp
inc
in
roll
fsubrl
shrb
dec
jle
pop
sub
add
jle
decl
sbb
xchg
xor
cld
add
subl
pusha
or
mov
dec
test
pop
out
inc
loope
push
fucomp
nop
loopne
insb
push
loopne
xor
mov
pushl
cmpsb
test
out
repz
add
inc
or
push
ja
rol
jle
fsubrs
mov
sarl
push
inc
xor
fucom
xchg
sub
pop
xor
in
out
mov
inc
pop
dec
add
jb
add
shl
pop
mov
jo
fwait
movsb
testb
mov
pop
xor
sbb
mov
clc
es
lods
mov
lret
sub
adc
enter
mov
mov
mov
test
cmp
jbe
mov
lods
ja
pop
adc
outsb
or
in
push
cmp
xchg
jle
push
enter
lods
sbb
add
ss
out
cli
lcall
addr16
call
test
or
mov
jg
ret
cwtl
push
jp
or
mov
test
adc
movsl
inc
addr16
call
clc
clc
jb,pn
fwait
mov
and
lahf
movsb
adc
lock
add
mov
mov
movsb
clc
sbb
stos
add
cmp
mov
loop
adc
pop
mov
pop
or
xor
cmp
adc
clc
insl
add
sbb
orb
push
pop
clc
mov
push
int3
mov
xchg
add
pushl
rcrl
jbe
jg
into
push
dec
pop
cmp
sub
sub
in
inc
jg
pop
sub
mov
adc
jb
push
push
or
lahf
cmc
sub
js
mov
mov
xor
pop
cmp
pop
jmp
mov
lret
push
add
or
mov
push
imul
cs
push
test
xchg
lods
add
mov
in
fldl
mov
out
xchg
gs
pop
adc
inc
mov
cmpsb
jo
and
cmp
dec
sbb
es
jp
jl
loop
adc
les
imul
and
pop
bound
inc
dec
sbb
ret
sbb
add
loop
clc
ja
xor
ror
in
pusha
adc
jge
icebp
pushl
or
xlat
mov
xorl
cmp
inc
cli
inc
je
mov
xchg
inc
mov
xor
pop
mov
shr
vxorps
out
sub
clc
mov
into
mov
out
push
add
xor
pop
shrl
cmpl
add
add
inc
imul
shrl
cmp
enter
jbe
icebp
in
push
adc
xor
fbld
xor
mov
sbb
je
and
mov
cmpsl
mov
mov
ret
mov
add
es
inc
inc
jg
pop
je
jne
cwtl
ficompl
sti
push
shrl
out
sbb
sub
lods
in
int
and
bound
xchg
jge
cmp
pop
popa
loopne
or
lds
decl
rcrb
and
mov
not
pop
mov
xor
dec
or
add
or
and
and
mov
imul
cmp
scas
xor
xor
dec
pop
js
push
and
cmp
mov
xchg
shrl
sarl
inc
movsb
enter
iret
inc
inc
inc
cmpsb
fidivs
pop
loopne
les
xchg
cmp
xchg
icebp
inc
int3
dec
pop
mov
mov
inc
daa
add
movsl
push
pusha
ljmp
xchg
movsb
xor
xor
cmp
fistps
clc
cmc
pop
inc
push
xor
cmp
popa
pop
cmp
or
cli
and
jo
cmpsb
mov
mov
scas
out
add
push
jnp
pop
inc
cld
or
mov
mov
push
lea
xchg
jmp
into
cmp
ljmp
inc
sti
sbb
and
mov
imul
das
mov
aas
rol
dec
push
or
mov
mov
xchg
lods
jg
mov
shl
add
sahf
aam
add
lods
test
lcall
jno
or
testb
aaa
aam
pop
adc
js
jg
mov
mov
mov
sti
insb
sbb
pop
inc
ret
notb
cmp
pop
mov
xor
jo
stos
sbb
in
or
bound
and
xor
or
lret
cmc
mov
loopne
out
js
mov
and
addr16
movsl
fldl
stos
loopne
xor
stc
fidivs
xor
aaa
mov
inc
sbb
mov
mov
in
push
rcrl
js
fbld
mov
lock
fbstp
insb
and
jp
je
pop
mov
mov
pop
inc
add
div
test
sbb
pushl
ret
cwtl
or
sahf
in
js
loope
es
and
sbb
xor
movsl
mov
push
xchg
push
outsb
adc
aad
cli
in
or
addl
lahf
sub
fcomps
bound
push
cs
icebp
inc
pop
sbb
adc
mov
repnz
or
out
cmc
incb
push
pop
std
enter
icebp
rcr
fldt
jmp
add
add
push
mov
jp
and
scas
mov
cmpsb
dec
dec
lret
outsb
inc
or
mov
lahf
add
fwait
and
cmp
and
or
add
pop
lret
test
cmc
push
cmp
lret
add
sti
sub
xor
mov
or
cmp
or
xlat
divb
push
mov
cltd
or
clc
mov
rolb
lock
push
movsl
lods
idivb
mov
imul
imul
ljmp
ss
cmc
inc
outsb
aam
sub
mov
push
push
aas
or
sbb
test
ljmp
pop
cmp
add
sarb
cmpsb
mov
push
adc
negb
jbe
jno
dec
cld
hlt
clc
fnstcw
in
push
and
sahf
rcl
sub
call
dec
sbb
adcb
fidivrl
mov
dec
xchg
test
jno
jno
mov
cmp
cmpsl
aaa
inc
mov
fistl
fstpl
xchg
mov
out
jecxz
mov
jecxz
inc
and
rcrl
std
pop
add
rcll
or
test
cmpb
rcrb
inc
fimull
or
lret
sub
lcall
xor
out
push
xchg
mov
dec
mov
pushf
adcb
popa
push
sbb
xchg
ss
add
pop
add
test
mov
idiv
fcmovbe
xchg
mov
ret
fimuls
xchg
add
sarb
mov
push
add
and
aaa
and
movsb
testb
outsl
xchg
cwtl
out
movsb
add
dec
mov
out
inc
xor
mov
mov
xchg
adc
aaa
xchg
hlt
inc
sub
add
shlb
add
mov
cmp
bound
cmp
test
mov
push
loopne
ja
sbb
sbb
jp
xorl
add
repz
loope
add
sarb
loopne
outsl
loopne
test
sub
push
hlt
sbb
add
js
mov
cld
adc
xor
dec
inc
xor
out
xchg
fsubp
out
fbstp
push
daa
mov
jmp
cmpsb
mov
imul
mov
dec
mov
clc
mov
adc
inc
mov
aad
mov
and
cmp
and
in
add
pop
inc
movsl
add
add
push
push
and
pop
ret
fimuls
std
mov
sbb
fwait
hlt
hlt
xchg
pop
adc
adc
mov
sbb
int
aad
mov
test
repnz
mov
loopne
loope
shrb
test
mov
xor
sbb
loopne
mov
inc
loopne
adc
ss
push
adc
mov
jo
add
or
xchg
jbe
push
popa
jns
sub
mov
jp
xchg
pop
lock
dec
inc
in
add
mov
or
shlb
in
lock
or
inc
jp
push
xor
cmp
stos
mov
aad
in
orb
mov
loopne,pn
pop
std
hlt
xor
jl
aas
push
jge
add
or
push
push
xchg
xor
ss
mov
add
xchg
mov
mov
add
scas
fisttps
daa
repz
stc
into
sarl
lock
int3
pop
ficomps
add
imul
mov
mov
mov
ret
pusha
pop
xchg
add
sub
xchg
incl
lret
add
sub
cmpsb
aad
sub
and
xchg
lret
push
rclb
mov
fcmove
lahf
inc
bound
sub
mov
lcall
daa
aas
add
adc
inc
mov
mov
fists
leave
idiv
cs
mov
jnp
pop
dec
jno
or
inc
pusha
xor
jne
adc
pop
lret
test
or
sub
mov
fcmovne
xchg
clc
jbe
inc
test
mov
imul
add
lret
push
stc
lock
inc
std
dec
call
pop
push
mov
repz
xor
cmp
cwtl
inc
cmp
push
repnz
inc
jp
mov
popa
ss
test
push
xchg
adc
mov
or
je
nop
and
jbe
xchg
ret
aaa
add
test
ss
orl
inc
es
jo
les
inc
fmuls
sbb
daa
mov
xchg
dec
and
sub
pop
cmc
jo
mov
inc
sub
decl
fs
out
push
js
nop
jo
sbb
push
out
call
inc
fwait
scas
push
mov
adc
jle
dec
cld
call
dec
shlb
add
fbstp
hlt
out
push
or
or
add
sub
outsl
movsb
call
dec
fdivrs
decb
push
sti
out
mov
and
push
add
ss
fbstp
sahf
out
add
cmpb
and
xchg
push
inc
scas
movsl
adc
out
clc
int3
xchg
adc
sbb
scas
mov
into
ret
sahf
scas
aam
ja
cmp
dec
dec
pop
and
int
mov
icebp
mov
cmp
lock
es
and
jle
dec
sub
mov
ret
dec
stos
js
incl
xor
std
je
inc
pop
adc
inc
mov
pop
test
adc
and
push
mov
ja
dec
xchg
pop
in
push
jbe
std
stos
mov
jb
imul
pusha
jns
mov
sahf
popf
ljmp
mov
ds
enter
add
pop
mov
fldl
inc
add
lcall
iret
and
push
push
add
scas
enter
adc
sub
loope
pop
sarb
xor
or
adc
mov
stc
stos
lock
ficoms
mov
pop
pop
xor
hlt
mov
or
stos
sbb
rcl
int
jnp
pop
fstl
rclb
push
ds
ljmp
lock
rolb
mov
testb
daa
rolb
adc
pusha
mov
xor
fneni(8087
repnz
ljmp
inc
or
or
repnz
movsl
push
xchg
lods
cmp
mov
enter
sub
insb
cs
sti
xor
fldt
xor
lds
in
xor
adc
ret
pop
dec
js
in
in
mov
ljmp
bound
scas
out
pop
fmull
stos
mov
dec
sub
dec
adc
in
jne
adc
cmp
sbb
jne
addb
xor
insl
shl
ror
mov
nop
dec
and
sarb
mov
jecxz
loopne
adc
cmpsb
or
adc
add
jmp
or
mov
mov
and
js,pn
push
jle
jl
sbb
shlb
push
and
in
gs
mov
mov
mov
fldpi
and
decb
xor
add
into
push
addl
ljmp
enter
mov
mov
sbb
xlat
ret
pop
push
add
push
push
mov
pop
pop
dec
ljmp
sti
fistpll
popl
add
mov
mov
lret
jmp
sbb
push
xchg
cmp
and
and
xchg
icebp
pop
test
fmulp
and
cmp
xchg
sub
clc
sti
ss
je
decl
xor
repz
inc
sti
inc
pushf
sub
or
jle
inc
pop
xchg
or
imul
sahf
cwtl
mov
pop
pop
cmp
and
mov
insb
pop
jbe
adcb
ja
test
in
repz
xor
aam
cmp
loope
jg
sbb
xorb
movsb
out
in
addl
sub
lods
xchg
clc
fisttps
adc
adc
cmpsb
sti
sub
jle
or
jns
lcall
test
mov
jae
test
add
mov
call
pop
scas
xlat
out
js
gs
dec
lock
add
jo
pop
xchg
ljmp
or
pop
insb
in
dec
aam
ss
mov
outsb
cmp
lcall
lods
mov
or
call
jo
mov
inc
push
jg
push
sbb
xchg
mov
stc
lods
loopne
les
xchg
and
leave
mov
pop
xchg
stc
mov
dec
inc
ficoms
fcompl
loop
jns
lea
mov
rolb
inc
mov
fs
push
add
cwtl
jle
cmc
les
cld
mov
pop
outsb
pusha
push
and
jg
sbb
or
add
aam
inc
movb
jmp
outsl
mov
or
aad
dec
shr
dec
ds
shrl
stc
les
incb
pop
out
mov
dec
adc
test
pushf
cs
sbb
jbe
fimull
out
xchg
pop
sub
das
add
mov
scas
cmp
push
sub
fisubrl
lock
sbb
ja
add
enter
repnz
dec
push
mov
cmp
or
mov
scas
inc
ja
mov
in
outsb
add
cld
add
mov
ficompl
aas
dec
add
xorb
sub
je
clc
dec
loopne
mov
scas
nopl
fwait
xor
mov
dec
mov
out
pop
sbb
pop
xchg
imul
jb
clc
xchg
gs
dec
sbb
xor
or
ror
testb
jb
ljmp
inc
fdivs
jl
ret
call
fimuls
jns
or
jg
cmp
pusha
jle
push
cmpsl
je
mov
les
je
jl
push
xchg
jg
jno
ja
push
jns
in
mov
push
or
mov
cmp
or
mov
push
add
in
jge
jo
add
mov
dec
sbb
fstl
mov
and
and
push
ss
fimull
jmp
js
xchg
loope
je
or
into
sbb
sbb
call
cli
or
jecxz
jbe
sbb
cld
mov
mov
inc
push
jb
inc
aad
pop
mov
dec
fidivrs
pop
jo
mulb
sbb
adc
dec
popa
mov
and
jb
sbb
iret
cmpsl
sbb
jg
cmp
fnstcw
push
inc
sahf
sub
adc
dec
mov
and
das
stc
dec
and
ficomps
jno
xor
adc
out
nop
push
aaa
and
add
mov
jecxz
adc
aam
into
mov
jle
push
add
fdivrs
jmp
in
outsb
insb
fists
fidivl
push
push
sbb
or
decl
imul
mov
dec
in
xchg
add
int
cld
fwait
je
mov
sbb
cmp
and
add
lock
cs
mov
movsl
add
std
in
sub
lret
loopne
cmpb
inc
cmc
loopne
jae
jp
hlt
inc
popa
pop
jae
push
cmp
jne
jbe
jp
and
and
add
pop
or
ljmp
push
cwtl
jg
test
add
and
sbb
call
push
jb
lcall
inc
cs
mov
inc
mov
jp
ret
das
and
movb
adc
mov
sahf
inc
ret
push
rorb
jb
cmp
iret
push
mov
movsb
mov
enter
subb
cld
insb
jl
dec
clc
push
cmpsl
or
outsl
js
jl
add
loopne
mov
adcl
mov
insl
mov
cmp
call
in
dec
aaa
sbb
sub
ret
stos
out
outsb
dec
ret
mov
jmp
loopne
out
inc
jg,pn
jge
xor
push
aas
mov
mov
sti
scas
lock
inc
xchg
fisubs
push
mov
lock
mov
cs
cmc
daa
mov
xchg
cmp
mov
mov
mov
inc
push
outsb
or
xor
pop
into
data16
dec
sbb
callw
call
or
dec
movsb
adc
or
mov
shrb
dec
nop
inc
dec
mov
inc
mov
clc
pushl
mov
hlt
punpcklbw
and
sti
andb
sahf
pusha
push
cmpsl
add
pop
jne
decl
push
jnp
std
into
insl
xor
mov
icebp
ljmp
push
pop
mov
dec
or
andl
push
or
call
inc
divb
rolb
push
or
mov
loope
sti
stc
cmp
test
adc
push
push
leave
fwait
pop
and
mov
cld
sub
rclb
cli
decl
or
dec
xchg
adc
pushf
mov
and
bound
sub
decl
xbegin
xchg
jb
adcl
inc
lret
shl
sbb
scas
adc
jge
push
mov
addr16
movsl
mov
in
mov
mov
adc
cmp
enter
add
inc
lock
cs
mov
fs
insb
mov
xchg
lods
outsl
mov
add
sub
push
mov
adc
pop
add
in
jmp
sub
jb
dec
sarb
sbb
xchg
icebp
loopne
daa
stc
inc
sub
add
adc
mov
rorb
hlt
xchg
sbb
cs
fildll
insb
fcmovne
adc
int3
cli
mov
pushl
lret
or
fldenv
addr16
pop
loope
fnsave
inc
jecxz
leave
fwait
scas
or
jo
shl
mov
insl
or
mov
mov
js
rol
jno
xor
pop
ds
jl
jnp
repnz
adc
enter
pop
cld
xor
andb
jg
jns
icebp
fsubrl
push
push
push
mov
or
fbstp
movsb
add
lret
push
dec
clc
xchg
mov
add
push
jbe
out
icebp
and
push
out
cwtl
je
jo
sbb
jle,pn
outsl
mov
mov
stos
scas
in
jle
test
sub
mov
loope
outsl
fmull
sub
mov
push
iret
sbbl
jg
push
int3
popa
out
push
aam
ja
scas
adc
mov
test
leave
loope
adc
int
pop
sub
fiaddl
adc
add
aaa
es
mov
pop
jae
into
mov
dec
sbb
dec
mov
cli
mov
in
adc
adc
cmp
mov
ljmp
inc
pop
mov
mov
jbe
cmp
mov
call
in
out
les
pop
es
xor
sbb
mov
mov
mov
cmp
stos
test
mov
out
movsb
fcmovu
and
pop
outsb
mov
add
add
movsl
aam
mov
rcll
je
icebp
leave
xor
scas
push
fwait
lret
dec
sbb
mov
adc
fdiv
sub
pop
and
filds
sub
add
add
mov
lock
sbb
sbb
add
or
stos
mov
stos
xor
add
cli
cmp
mov
push
jo
cld
aaa
sub
inc
push
dec
mov
xor
mov
adc
push
cmp
es
lods
aad
ret
xchg
push
xorb
jnp
inc
nop
xchg
jo
lahf
or
xor
adc
repz
je
ret
btr
mov
incl
movsb
lret
lret
enter
loop
sahf
mov
push
add
xor
mov
test
xchg
and
add
add
fmull
mov
fnsave
inc
popa
lcall
pop
cld
sbb
dec
push
jg
pop
faddl
fucomip
or
xchg
or
xchg
in
or
sahf
jecxz
add
rcrl
sti
xchg
out
add
nop
jmp
pop
ret
leave
push
cmp
pop
adc
sbb
aaa
sub
add
xlat
cmpsb
xchg
adc
pushl
enter
sub
adc
mov
in
xchg
int
inc
ljmp
loope
push
pusha
xchg
add
jge
dec
insl
pop
xchg
inc
loopne
ljmp
xor
imul
or
mov
add
ja
decl
mov
jns
push
lret
ss
push
mov
mov
jle
addb
xor
bound
push
rorb
sbb
stos
sub
push
dec
iret
imul
aaa
sbb
mov
inc
dec
cld
incb
das
push
push
push
loop
sbb
jle
or
push
clc
es
add
dec
cli
out
hlt
add
cmc
mov
adc
fsubr
push
data16
sub
mov
les
add
test
jg
cmpsb
scas
dec
leave
cwtl
xorl
ja
xchg
leave
push
add
and
add
sahf
jb
sub
jmp
mov
inc
sbb
xchg
xchg
clc
decl
cmp
inc
adc
shll
repz
push
or
jl
pop
cmp
push
or
inc
mov
test
push
mov
pusha
mov
das
clc
mov
sbb
stos
cmpsb
sbb
inc
mov
out
pushf
pop
add
cmp
aas
mov
mov
jmp
mov
mov
sar
cs
xor
imul
jb
add
cmp
hlt
stos
sbb
cmc
sbb
mov
xchg
jo
out
mov
sbb
shll
jp
jp
cmp
sub
mov
clc
inc
jo
add
jae
cmpsl
je
repnz
lret
aad
jg
cmp
clc
sbb
push
inc
dec
lock
and
call
jnp
fisubs
enter
and
loop
mov
in
jno
mov
lds
inc
pop
dec
pop
cld
sub
ret
mov
or
sahf
scas
and
mov
jp
mov
popa
test
adc
sub
cs
pop
into
bound
shll
push
cmpsl
mov
bound
loopne
ljmp
sbb
jae
in
bound
push
out
mov
jmp
and
stos
sub
pop
popa
incl
arpl
es
or
shlb
xlat
and
outsl
pop
inc
aas
out
cmp
cwtl
call
jg
mov
mov
adcl
or
pop
mov
inc
adc
xor
pop
inc
int3
fadds
ficoms
push
pop
dec
push
cmp
jl
xchg
sbb
dec
push
aaa
mov
jl
cmpb
aas
daa
add
or
or
mov
add
xor
xchg
sub
sbb
add
add
add
sbb
imul
sbb
loopne
cmp
std
sub
lds
ja
push
mov
pusha
jecxz
lods
insl
sub
or
mov
push
call
and
or
scas
and
jle
add
mov
ljmp
dec
imul
fistl
jb
cmp
xchg
loope
adc
enter
loopne
mov
or
imul
mov
fisubs
mulb
xor
hlt
movsb
push
sar
mov
sbb
popa
cmp
movl
mov
push
leave
or
subb
jmp
repnz
scas
icebp
xor
mov
lods
sbb
mov
aaa
ljmp
push
xor
pop
jnp
cs
aad
cmp
mov
ja
push
add
stc
sub
pop
pavgw
adc
insb
dec
cmc
sbb
inc
and
or
jo
fisubrs
push
cltd
and
xchg
mov
push
cmp
outsb
adc
sbb
pop
pusha
add
push
test
cmp
push
adc
icebp
and
push
dec
popf
divb
adc
mov
int3
xor
dec
push
pop
jmp
cld
loope
out
jo
cmpsb
jb
jne
push
inc
pop
incl
adc
ss
push
scas
mov
fists
ljmp
or
adc
cmp
inc
xchg
dec
sub
sti
push
pop
rcrb
xchg
xchg
add
mov
sub
pusha
das
or
sbb
es
adc
add
orb
loope
cltd
mov
test
mov
aas
mov
or
sbb
mov
sahf
cli
sbb
adc
mov
stos
pop
jnp
push
cmp
mov
jmp
movsl
and
mov
cli
mov
sub
push
orb
ret
orl
gs
mov
pop
xor
pusha
cmp
mov
sub
adc
push
push
jne
lock
ljmp
ja
mov
dec
fldcw
in
cld
test
or
out
lds
add
std
push
jecxz
or
mov
cmp
lcall
les
xchg
sti
adc
push
mov
rorb
pop
fstpl
fmul
outsb
loopne
mov
pop
stos
jno
es
cs
xchg
inc
sti
mov
sub
mov
in
mov
faddp
push
xor
add
xor
mov
hlt
incl
sbb
push
in
lock
mov
mov
push
lods
sub
addr16
test
or
add
xchg
inc
mov
jno
sbb
les
out
inc
scas
movsl
sahf
inc
xor
push
mov
jmp
fmull
cmp
mov
xchg
push
daa
or
push
jecxz
push
ficoml
das
or
fidivs
lea
mov
mov
and
jo
cmp
mov
mov
jp
repnz
or
cmpsb
and
push
and
rorl
dec
aad
aaa
popa
sbb
sub
outsl
or
lods
mov
add
pushf
sbb
repz
filds
mov
in
xchg
hlt
sbb
xchg
mov
movsb
xor
jg
fmull
loop
repnz
inc
test
jmp
push
lret
ret
mov
push
std
aaa
mov
inc
mov
jl
mov
sub
pop
sbb
movsb
and
cwtl
cld
xlat
pop
push
aad
mov
scas
inc
or
mov
push
and
push
lret
es
pop
xchg
or
std
or
add
or
sahf
or
inc
insl
negb
mov
mov
cmpsl
orb
hlt
dec
pushf
pop
mov
hlt
add
pusha
rolb
push
xchg
push
popf
mov
xchg
inc
inc
mov
dec
bound
mov
adc
ret
pop
ret
xchg
push
adc
push
ds
jg
icebp
shll
mov
lea
pop
insb
js
push
loopne
add
push
xchg
loope
dec
jp
out
sbb
push
lock
es
or
or
js
fimull
push
mov
aaa
cmpsl
in
cmp
insb
and
shr
mov
jecxz
push
loop
out
mov
lcall
pop
mov
xchg
subl
sbb
push
in
and
push
push
dec
call
push
iret
sub
fs
nop
push
jb
ret
cmovge
xchg
or
jl
cli
jg
imul
jnp
bound
xchg
addr16
rcrb
in
aas
dec
cli
das
sub
inc
add
cmpsb
add
push
loope
pop
shrb
pop
push
ret
shll
pop
add
addb
arpl
fcomps
xorl
add
dec
pop
jb
xchg
lock
add
loope
hlt
pop
dec
xchg
ss
sahf
dec
ds
lcall
cmp
mov
dec
sbb
xor
jno
fdivs
jge
gs
rcr
add
and
jae
jnp
cmp
stos
adc
mov
lock
scas
es
pop
jns
xor
jecxz
mov
cltd
dec
inc
cmp
lods
sbb
mov
addr16
test
mov
adc
or
mov
pop
or
inc
cld
jmp
ja
lahf
in
push
and
adc
dec
mov
add
fs
loopne
mov
mov
push
mov
ret
add
inc
jmp
popl
push
mov
sbb
adcl
push
inc
outsl
and
xchg
loop
inc
dec
or
pop
ja
mov
xchg
test
js
mov
out
lea
bound
inc
dec
sahf
arpl
adc
test
cld
pop
adc
dec
push
and
push
lock
mov
aas
or
and
push
sti
mov
push
sub
into
sarb
arpl
add
jnp
jne
mov
mov
mov
mov
adc
adc
push
cld
sbbb
outsb
lret
mov
pop
mov
jmp
enter
pop
lret
mov
dec
insb
std
in
aam
or
lock
imul
or
int3
jb
adc
cmp
hlt
arpl
test
and
and
mov
adc
or
add
jb
mov
orb
pop
and
pop
inc
mov
cmp
loope
push
jle
jecxz
in
push
pushl
or
cli
adc
sbb
adc
dec
cld
mov
inc
addr16
xchg
xor
xor
sbb
js
xorl
outsb
roll
cmova
out
or
jno
movsl
mov
mov
jmp
sub
or
nop
cwtl
xchg
sub
mov
cld
pop
pop
push
or
rep
lea
and
cmp
sbb
icebp
and
andb
icebp
add
add
push
adc
add
mov
cmpsb
inc
fistl
in
jle
cwtl
jne
adc
pop
test
xchg
mov
stc
cld
push
dec
inc
xor
cwtl
mov
pushf
imul
scas
in
movsb
cltd
jnp
out
xor
mov
inc
daa
call
fcoms
decl
push
mov
mov
sbb
add
in
cmp
jg
mov
dec
in
inc
lcall
sti
sub
xor
je
scas
fdivrp
add
push
xor
jo
cmpsb
cvtpi2ps
mov
jns
inc
je
fidivrl
or
adc
push
jns
jl
pop
push
imul
adc
dec
jne
jl
sub
loope
mov
ljmp
int3
mov
cwtl
sbb
dec
mov
ja
test
imul
div
cmp
mov
ljmp
cwtl
jno
out
or
and
clc
sbb
sub
xchg
xchg
movsb
subb
cmc
bswap
fmull
sub
mov
sbb
inc
lods
mov
clc
fidivrs
outsb
inc
outsb
xor
aaa
jge
call
add
add
popf
es
mov
cmp
sti
jle
pop
ret
xchg
daa
das
rol
stos
mov
and
es
testb
cmp
xchg
sub
pop
test
cld
repnz
add
leave
sub
sub
pop
lea
mov
pop
add
and
call
mulb
xchg
or
idiv
pop
adc
mov
aaa
add
mov
adc
pop
mov
fdivl
dec
push
jl
loop
movb
sub
jns
fisttps
or
inc
push
adc
inc
lret
cmp
pop
add
adc
xchg
outsb
testl
pop
ret
push
outsl
adc
lock
dec
or
rclb
add
cmpsb
loop
pop
add
or
loop
sbb
mov
mov
mov
mov
lret
sar
or
shrl
add
test
scas
in
inc
add
movsb
iret
fsts
and
xchg
mov
push
lea
adc
adc
data16
enter
add
loope
hlt
and
mov
fadds
fbld
push
pop
int3
loopne
add
or
rclb
xorb
outsb
shll
push
in
rolb
mov
in
mov
jno
sbb
testb
xchg
call
adc
pop
or
outsb
inc
adc
ret
cmpsl
lret
ljmp
xchg
loop
push
xchg
mov
std
sti
or
inc
jae
shll
das
mov
add
imul
sahf
fmuls
scas
shl
pop
sub
adc
push
push
add
push
add
data16
test
lods
int
out
xor
add
lahf
add
cmpsb
call
jnp
inc
lahf
adc
movsb
xor
jne
andl
incl
aaa
pushf
mov
test
enter
ret
lock
adc
mov
and
pop
lcall
jl
add
int3
jbe
adc
mov
push
cld
dec
add
bound
sbb
fisubl
ja
cmp
movl
loope
pop
movsb
add
jnp
aas
inc
sub
iret
inc
pop
or
cli
sti
inc
popa
mov
xchg
add
push
mov
pop
aam
arpl
adc
mov
es
xchg
jle
push
pusha
test
cli
pop
shr
xor
xchg
mov
popa
sub
outsl
in
adc
clc
lds
dec
stc
jg
loop
dec
loop
push
rolb
sub
pop
shll
push
sbb
add
sub
rcrl
xor
hlt
and
idivl
xchg
mov
decl
push
std
outsl
fstpt
push
jo
cmp
pop
out
movb
cli
push
jl
lock
bound
lods
push
mov
mov
lret
sbb
inc
pop
mov
iret
jb
jbe
int
adc
loopne
fcom
scas
mov
push
sarl
dec
adc
cmp
xchg
and
hlt
adc
xchg
mov
pop
scas
fisttps
je
addr16
hlt
dec
cmc
cmpb
jge
jne
out
sub
lahf
sbb
jo
inc
dec
notl
jo
into
add
cmc
cmp
cmp
repnz
sahf
push
adc
dec
stos
lods
jno
mov
ficomps
add
mov
fstps
clc
ret
rorb
add
cmp
inc
mov
or
test
push
in
fsub
and
test
cli
pop
and
mov
adc
mull
daa
es
out
fcoms
into
push
jbe
movsb
push
out
add
movsl
pop
xchg
out
outsl
aam
inc
insl
test
call
cmp
stos
rolb
cmp
inc
fbld
rorb
hlt
jbe
adc
or
push
xor
sub
jle
cli
sahf
popf
fwait
push
int3
out
sbbb
push
push
xchg
arpl
ret
fcomp
lcall
sahf
xor
and
icebp
xor
jne
inc
stc
jmp
cltd
xor
jbe
cmpsb
xchg
icebp
pop
add
sbb
lods
daa
sbb
dec
test
mov
je
insb
push
rolb
mov
xchg
popf
cli
pushl
lock
adc
mov
and
rcr
pop
sbb
pop
jbe
fldt
inc
mov
lock
cmp
fcomps
dec
mov
gs
ret
sbb
dec
add
notl
jl
std
sub
stc
xor
dec
add
fs
dec
es
jecxz
add
fwait
jge
sub
lret
add
mov
pop
cmp
popa
and
mov
roll
ds
adc
test
aaa
inc
pop
mov
xor
pop
and
cmp
insl
xor
sub
jno
pop
loop
xchg
adc
out
ss
push
and
dec
push
inc
cmpsl
sbb
jne
sahf
pop
js
add
add
push
xor
dec
pop
xor
xchg
cmpsb
rolb
add
sub
push
sub
dec
repnz
mov
push
sti
aas
ljmp
shll
aas
fistps
inc
cmc
rcrb
push
xchg
aaa
mov
mov
sub
mov
cs
mov
mov
add
pop
push
leave
mov
roll
lea
fwait
je
or
mov
gs
mov
loope
jmp
sbb
pop
or
outsl
xchg
enter
ljmp
mov
fiaddl
sbb
insl
retw
add
jge
in
sbb
xor
xchg
ljmp
sbb
clc
sbb
mov
mov
mov
lods
mov
cmc
clc
js
add
outsl
jg
jl
movsb
movsl
vpavgb
add
jb
inc
add
lods
xor
call
sbb
scas
hlt
pop
pop
ljmp
jl
push
cltd
je
ret
add
jecxz
jnp
sar
add
jb
imul
cmp
push
das
mov
cmpsb
mov
int
cmp
lea
repnz
cmp
xchg
mov
inc
movsb
outsb
and
out
inc
aaa
jmp
test
fidivrs
and
loopne
scas
rol
jl
decb
scas
mov
in
testb
jg
mov
in
je
fadds
adc
les
jp
rol
mov
mov
loop
mov
int
lret
push
push
inc
scas
xor
pop
pop
dec
ss
mov
add
pop
ss
inc
or
cmpsb
sub
lock
popf
test
adc
nop
and
xchg
pop
lods
mov
mov
dec
rol
and
subb
or
clc
std
cmpb
cmp
push
mov
in
addr16
repz
mov
nop
ret
sbb
or
mov
jp
je
add
xor
idiv
xor
fsubrl
and
icebp
test
dec
les
and
sbb
cmpsl
add
ds
or
stos
enter
in
adc
fadds
adc
enter
mov
imul
movsb
hlt
arpl
add
mov
pop
mov
mov
shlb
mov
jo
ss
aaa
mov
cmp
out
mov
sbb
pushf
into
jo
cld
jbe
jecxz
test
or
ljmp
lods
dec
or
mov
jge
outsl
aaa
sub
icebp
xlat
and
adc
mov
je
xchg
rolb
jmp
jl
or
lds
jb
pop
loop
pushf
out
fbld
lret
imul
sub
jbe
lock
fiaddl
jno
pop
ljmp
lcall
xor
movsl
ss
repnz
mov
dec
cli
push
push
dec
les
push
call
fisubl
and
push
gs
or
push
adc
ds
icebp
push
jo
mov
outsl
call
lahf
ljmp
xor
sbbl
sbb
scas
shll
adcl
mov
adc
call
lret
push
imul
fldl
mov
and
mov
out
roll
orl
fmuls
jo
add
lret
cmp
dec
or
mov
jge
xor
cmpsl
outsl
pop
out
or
mov
push
faddl
push
rolb
in
fadds
mov
outsb
pop
xor
adc
mov
inc
inc
cltd
cmpsl
xchg
loope
xchg
cs
add
aas
mov
sarb
pop
jmp
loope
aas
push
mov
shlb
sbb
mov
out
shll
mov
add
mov
cld
cld
shll
ds
inc
gs
and
mov
in
jo
sub
lods
xchg
xor
dec
nop
call
push
lods
out
add
dec
in
aad
push
fbstp
incl
inc
xor
cwtl
and
repz
pusha
sbb
aad
cmp
fwait
sarb
imul
mov
jns
jno
inc
sub
pop
jge
push
mov
bound
dec
test
fidivl
mov
xlat
adc
push
dec
push
repz
clc
fistpll
sub
cltd
cs
bound
subb
js
loopne
nop
mul
adc
push
std
insl
ret
sub
or
inc
or
sahf
test
imul
ja
popa
inc
sti
movsb
or
je
xchg
repz
mov
fisttps
je
push
pmullw
lock
pop
pop
mov
xor
cwtl
aam
movsb
and
cs
sub
aam
aam
add
dec
sub
mov
pop
js
loopne
sti
aam
inc
adc
bound
mov
or
test
cmp
gs
jle
push
mov
mov
add
add
inc
aas
mov
xor
pop
mov
cs
pop
xorl
mov
cmp
cmpsl
and
pop
or
push
insl
sub
test
incl
push
mov
or
push
pcmpgtb
mov
or
add
inc
test
add
sarl
loope
and
or
cmp
add
mov
js
jmp
cmp
inc
and
dec
jmp
and
outsl
leave
or
xchg
sub
xchg
fmull
mov
lret
jns
xor
inc
mov
xchg
cwtl
sahf
push
mov
and
cmpsb
mov
or
mov
sbb
imul
sub
imul
mov
loope
mov
pop
je
jge
loope
inc
out
mov
outsl
dec
call
clc
cs
lock
in
popa
xchg
cli
push
lret
js
orb
pushf
int
lea
stos
ja
dec
mov
lods
aas
add
pop
cltd
push
xor
pop
cmpsb
je
mov
sub
addl
pop
outsl
fmull
and
pop
stos
inc
inc
les
or
mov
incl
inc
out
and
mov
cmp
add
jne
fnsave
rcrl
xchg
aam
and
clc
out
adc
mov
push
nop
jl
xor
mov
test
pop
pop
sbb
add
pop
add
sahf
inc
cmc
push
mov
fwait
arpl
mov
and
sbb
xor
cmp
jp
sarb
aas
fcompl
idivl
cli
addb
stc
out
ret
mov
inc
add
cmpsb
push
mov
adc
dec
insb
std
adc
insb
sbb
leave
ret
pop
sbb
lock
mov
mov
mov
pop
aaa
mov
pop
jo
scas
add
sub
or
js
or
add
test
loopne
call
out
and
cld
or
add
push
and
js
mov
out
es
les
add
js
dec
clc
dec
cmp
aad
dec
stos
in
ljmp
add
lcall
ret
aam
addr16
or
mov
mov
pop
cmp
inc
nop
test
fildl
ja
dec
clc
je
stos
movsb
data16
inc
mov
ret
add
jle
test
mov
mov
mov
adc
outsl
mov
lods
mov
cld
nop
push
bound
dec
sub
sbb
sub
stos
jmpw
mov
cmp
mov
inc
hlt
dec
cmp
dec
mov
das
push
inc
ss
add
push
add
sub
add
cmp
ja
dec
add
fs
cmpsb
push
jge
or
insb
repnz
cmc
pop
jle
push
push
or
cld
dec
sahf
es
frstor
adc
push
ljmp
sub
mov
mov
push
sbb
insl
adc
sub
rcll
pop
es
test
or
jg
mov
inc
mov
add
lods
jo
inc
ss
or
iret
sub
es
sti
jg
aaa
push
add
sbbb
cmp
adc
cs
pusha
mov
aaa
aad
jg
sbb
mov
andl
cmp
and
mov
dec
and
in
mov
dec
arpl
fiadds
pop
or
and
lret
int3
sub
int
sub
lcall
xchg
mov
je
push
pop
je
or
jle
xchg
imul
mov
addb
addb
sbb
pop
or
add
test
mov
lcall
shrb
call
shr
roll
loopne
xor
adc
pop
xchg
sarl
mov
decl
ret
mov
cmp
shr
das
pop
mov
or
ljmp
lock
and
mov
and
pop
sub
into
iret
sub
nop
inc
push
mov
inc
sub
mov
xor
mov
je
cmp
mov
xchg
idivb
push
shlb
and
jecxz
test
lock
in
movsl
enter
lods
push
les
fisubs
ret
mov
aas
les
sub
mov
mov
add
bound
fcoms
mov
test
or
inc
xor
push
dec
mov
pop
out
rol
or
cmpb
into
push
shrb
loopne
mov
push
add
fistpll
push
lds
mov
and
or
push
ja
popf
push
add
xor
push
xchg
clc
push
dec
dec
outsb
das
xor
sbb
xchg
cld
sub
gs
out
jecxz
mov
fiadds
mov
add
sahf
jmp
mov
xorl
or
incl
jl
jae
adc
test
xor
insl
imul
mov
lret
gs
popa
imul
add
das
loop
and
mov
addl
mov
out
fsubs
sbb
imul
stos
fwait
pop
dec
inc
lret
mov
std
fcomps
inc
hlt
add
jb
mov
or
aam
adc
xor
or
sbb
std
cmp
jp,pn
adc
mov
fadds
jo
or
bound
lods
inc
ret
jo
xchg
push
pusha
mov
xchg
mov
stos
nop
lcall
mov
aaa
bound
xor
and
idiv
push
or
cmc
rcrb
ja
mov
int
mov
xchg
ja
or
stos
adc
mull
cmp
fistpl
mov
add
in
cmc
iret
adc
js
push
ror
push
cmpsl
or
adc
ficomps
or
in
cs
shrb
push
in
sub
inc
or
jp
sbb
adc
loope
adcl
mov
adc
rol
mov
stc
punpcklwd
out
dec
xchg
icebp
cld
mov
mov
pushf
jmp
popf
sub
xchg
cmc
pop
pushl
fldcw
loope
mov
imul
repnz
add
stos
lods
cmp
push
nop
movsb
or
aad
clc
sbb
loopne
stos
inc
push
pop
inc
xchg
sbb
adc
andb
mov
ss
jp
sub
mov
pop
xchg
add
test
push
mov
lret
sub
outsb
aaa
fstl
icebp
jbe
xchg
add
cs
add
cli
lds
mov
pop
cwtl
push
rclb
lret
sub
sbb
mov
inc
push
push
mov
cmp
sbb
pop
imul
sar
sahf
sub
enter
in
outsl
clc
and
cmp
pop
mov
and
inc
adc
into
dec
push
aaa
test
mov
ja
push
add
fnsave
shll
mov
insb
pop
fnstenv
xchg
sbb
pop
push
pop
jo
pop
iret
lret
mov
mov
push
mov
push
xchg
psrad
imul
ljmp
fsubrl
jmp
mov
lret
cld
pusha
inc
inc
dec
dec
xor
imul
xor
jl
lcall
add
test
pop
mov
ja
sti
inc
popa
add
mov
testb
mov
cwtl
cmp
xor
shl
les
mov
xchg
and
lock
sub
test
call
mov
call
roll
dec
std
cmpsl
ret
pusha
ret
push
out
andb
in
push
aad
add
sbb
mov
dec
fisttps
inc
cmp
adc
mov
int
xchg
repnz
mov
xchg
dec
std
and
mov
push
jecxz
test
shlb
push
jp
clc
aas
adc
loopne
mov
inc
add
sub
rcll
push
movsl
daa
imul
jmp
sahf
out
mov
outsl
mov
rorl
and
jmp
stc
adc
test
cld
aam
sub
push
inc
insb
call
cmpsb
xchg
push
sub
dec
add
pop
sub
fwait
xchg
in
sbbl
sbb
repnz
pop
jg
sbbl
jle
fnop
pop
add
ljmp
aaa
std
mov
xor
pusha
nop
sbb
dec
or
jge
inc
sar
push
out
mov
push
dec
cmp
jl
sbb
cld
outsb
cmp
ret
cmpsl
test
decl
int3
cmp
inc
sub
xor
dec
add
aaa
add
and
shrb
xchg
mov
mov
dec
add
test
cld
pop
dec
xor
data16
push
add
pusha
in
jmp
insb
clc
add
sbb
fistpll
mov
add
push
in
sub
out
fcmovnu
add
push
imul
sarb
mov
test
push
movsl
mov
or
or
add
sbb
and
sti
ljmp
xor
cs
add
rcl
pop
xchg
push
lds
push
pop
fsubr
lods
cmp
cld
adc
mov
test
in
mov
scas
in
popf
jp
dec
add
shl
ja
rorb
and
or
shlb
mov
in
ss
setb
jg
test
out
dec
cmpsl
bound
ret
loope
cmpl
cmp
das
bound
fsubrs
fisttps
out
push
mov
clc
int3
jbe
das
mov
stos
fnsave
aam
xorb
and
jg
push
jb
mov
cmp
or
test
xor
mov
adc
sahf
adc
testl
imul
insb
lods
cmp
ljmp
push
lods
lock
pop
movsb
adc
mov
lcall
inc
mov
les
pop
jne,pn
stc
lock
jg
add
mov
adc
aad
add
mov
in
mov
cld
mov
lcall
fcoms
jge
insb
mov
lcall
add
repz
inc
addb
adc
pop
xchg
jmp
sahf
inc
hlt
in
sbb
sub
mov
mov
mov
push
push
enter
mov
sti
dec
ret
mov
popf
ret
dec
fucomp
xor
fdivrl
fsubrl
cmc
insl
push
out
jle
inc
xchg
mov
mov
dec
adc
and
out
lods
mov
inc
or
push
pusha
xchg
lret
push
out
cmp
mov
repz
mov
sub
sbb
cmp
pop
lock
sarb
stos
sbb
rolb
add
pop
sbbl
jecxz
popf
sbb
ja
mov
dec
loopne
xchg
fisttpll
adc
jp
push
lret
jno
add
jle
push
cli
in
sub
mov
xchg
pop
lock
lret
mov
jg
cwtl
mov
mov
mov
sbb
inc
pop
mov
xor
mov
mov
call
pusha
ret
pop
iret
stos
cmp
test
mov
add
cld
incl
popa
cmpsb
adc
mov
inc
pop
xchg
push
add
add
cwtl
xor
push
rcl
je
add
cmp
negb
add
outsl
and
icebp
xchg
cmp
jmp
call
pop
lock
sbb
fidivrs
push
scas
ret
outsb
cmpsl
mov
xchg
add
ss
pushf
fsubs
aaa
frstor
adc
inc
daa
ljmp
aaa
dec
mov
inc
or
fwait
pop
pop
jl
xchg
xchg
push
insb
lods
es
adc
ret
mov
fcomps
mov
les
pop
sbb
clc
data16
out
or
dec
mov
sbbl
mov
ljmp
or
sbbb
sbb
mov
idivb
cmp
xchg
dec
mov
faddl
inc
fisttpl
andb
push
inc
add
jmp
addl
cmp
adc
inc
into
inc
mov
js
stc
ljmp
sbb
mov
loop
xlat
or
mov
inc
dec
loopne
and
jae
loopne
mov
mov
mov
inc
pop
pushf
inc
fs
out
jl
mov
mov
scas
movsb
cmp
repz
inc
lss
loopne
cmp
mov
inc
arpl
sbb
cmp
adc
jbe
add
add
pushf
aas
mov
sbb
mov
out
or
pop
sti
scas
xor
adc
loopne
sti
lahf
lods
xor
push
cmp
repz
sub
jns
enter
mov
inc
pop
cmc
js,pn
sarb
mov
xor
inc
inc
shl
outsl
cli
and
lea
andl
jae
jg
cwtl
rcrl
jb
and
mov
mov
cwtl
insb
add
outsb
shlb
xor
ljmp
add
fs
push
jle
push
sbb
mov
jecxz
stos
les
mov
mov
jmp
mov
stc
cmp
and
pop
inc
sbb
dec
mov
cmpb
es
and
insl
sbb
xchg
ss
cmp
clc
clc
mov
js
je
aas
or
jge
in
pop
jo
mov
inc
cmc
mov
and
fs
frstor
loop
add
pushf
push
sbb
lcall
test
pushl
adc
and
sub
mov
pop
or
in
xor
clc
mov
jle
lcall
call
pusha
fiadds
and
fnsave
lods
cli
filds
lret
mov
or
clc
ljmp
enter
adc
inc
scas
fcompl
dec
in
xchg
fdivr
aaa
inc
jb
inc
mov
pop
arpl
hlt
mov
daa
dec
lds
cs
ss
stos
call
xor
adc
cmc
pop
add
addr16
gs
pop
mov
pop
cmp
mov
hlt
xor
cmp
fists
mov
sti
or
xchg
mov
adc
pop
add
pop
mov
adc
arpl
movsb
inc
push
add
push
scas
cmpsb
dec
loop
jbe
inc
popf
mov
dec
aad
pop
mov
mov
pop
push
pop
mov
insl
cmpsl
add
mov
sub
mov
shrb
loopne
test
mov
cli
ret
add
lea
imul
push
fdiv
fistps
adc
xorl
push
stos
outsl
lock
aaa
nop
push
sbb
jbe
movb
add
ret
mov
lock
cli
test
cltd
repnz
arpl
int
shlb
sbb
adc
sub
jns
add
std
dec
add
jo
or
not
inc
loop
or
jg
inc
icebp
push
add
iret
sbb
scas
ljmp
xchg
sub
mov
xchg
test
mov
jp,pn
and
cmp
es
push
stos
sbb
cltd
push
push
cmpb
add
jns
jl
or
push
jbe
mov
clc
decl
lods
push
popa
add
pop
or
push
repnz
pushf
cltd
mov
push
pop
lds
jle
outsb
add
inc
cli
ss
aaa
or
or
mov
insb
and
push
inc
cltd
pop
xor
orl
aam
mov
movsb
add
mov
adc
push
aad
xchg
pusha
daa
mov
lods
mov
xlat
mov
add
lret
push
dec
dec
add
icebp
or
or
fs
jo
incl
mov
or
xchg
mov
fs
and
aaa
fsubs
sbb
les
faddp
sarl
mov
mov
lds
sti
jl
jge
sbb
push
sub
jbe
nop
pop
testb
test
mov
xchg
mov
and
jae
lcall
mov
or
ss
mov
fidivrs
xchg
sub
inc
mov
add
rcr
adc
mov
mov
fdiv
adc
popf
adc
and
rorb
jno
jg
scas
outsb
adc
add
jbe
inc
fmulp
pop
adc
push
loopne
cs
lods
mov
cmp
push
repz
mov
mov
pushf
pop
add
add
in
jns
lods
and
stos
inc
jge
pop
call
pusha
sub
cltd
mov
cs
fisubl
sub
ret
insb
pushf
fdivrp
mov
sbb
jg
arpl
inc
add
int3
pop
aaa
lea
push
adc
add
fnstsw
push
mov
les
ret
mov
add
fistpl
sbb
enter
cmp
aam
adc
decb
fnstcw
sbb
xor
sti
push
scas
cltd
fidivl
dec
cs
lods
pop
jb
test
ljmp
clc
sub
lds
fcompl
into
pop
inc
mov
or
movsb
repnz
mov
test
enter
sub
mov
or
sar
mov
data16
push
sti
add
inc
pop
cli
lret
jle
lods
xor
push
lcall
loop
push
stos
ss
shll
push
push
pusha
push
testl
repz
or
je
jge
mov
pusha
jne
jb
hlt
cmp
cmp
mov
hlt
mov
jl
or
mov
imulb
lcall
subb
mov
jmp
push
out
rcl
int3
stos
aad
dec
and
or
insl
mov
fmull
push
dec
popf
icebp
lret
nop
sub
ja
pop
out
adc
lret
cmp
jle
lea
lret
aas
lcall
popa
shlb
mov
ss
shrb
xor
xor
je
dec
and
dec
and
xchg
lret
std
frstor
popa
sahf
out
xor
not
mov
push
push
sbb
lds
fisubs
xor
lods
and
mov
arpl
inc
or
push
test
cmp
dec
lret
mov
mov
fnsave
mov
adc
push
dec
pop
add
sub
add
clc
or
pop
cltd
add
sbb
mov
aaa
dec
js
call
clc
push
outsb
add
sub
and
scas
cmp
mov
shrb
into
aaa
mov
mov
or
dec
sbb
jo
ds
cmp
call
pop
in
btc
add
dec
xchg
int
push
jo
xchg
adc
pop
mov
aaa
pop
sub
imul
mov
xor
mov
mov
push
add
push
das
hlt
pop
mov
add
sbb
inc
sbb
mov
xchg
mov
inc
sti
push
imul
and
fst
xor
adc
testb
ret
fucomip
xchg
mov
mov
out
in
enter
add
subb
cld
adc
add
xor
ljmp
adcl
sbb
pop
lds
in
jg
hlt
jg
sbb
or
repz
inc
cmpsl
stos
sahf
fbld
mov
cs
xchg
mov
es
inc
mov
push
fcmovnu
cmp
fadd
aas
jl
adc
dec
cli
jnp
push
popa
sbb
mov
inc
push
roll
add
scas
into
mov
pop
sub
ja
pop
mov
push
push
enter
repz
mov
ds
leave
jne
sbb
pusha
push
or
ja
in
lods
or
out
out
je
loopne
adc
jle
call
pop
out
addr16
cwtl
lcall
out
pop
dec
add
shlb
adc
add
or
call
adc
out
mov
or
mull
mov
cmp
jns
enter
mov
test
les
jo
mov
mov
jle
js
int
mov
test
jne
mov
and
insl
adc
xchg
cli
adc
pusha
mov
incb
test
into
lock
xchg
mov
pop
cld
mov
and
dec
ss
pop
dec
inc
shlb
addl
push
push
test
fstps
call
test
stc
add
xchg
push
decb
lock
fdivs
mov
xor
or
cwtl
add
xchg
fdivr
xor
jg
pop
aaa
push
stc
push
mov
mov
add
jno
xchg
dec
rcr
lods
push
loop
lods
fbld
jg
add
dec
mov
mov
xor
cli
addl
xor
ss
clc
pop
sti
pop
testb
xor
test
or
out
xchg
not
jo
inc
icebp
fwait
cs
testl
pushf
ret
mov
jo
push
jmp
test
mov
ljmp
rcrl
fiaddl
insb
push
mov
adc
loope
jg
enter
popf
rolb
xchg
jge
pop
std
psrlq
dec
ljmp
icebp
mov
mov
orl
rcrl
aad
lods
fistpll
sbb
mov
add
icebp
xor
jp
nop
pop
rcll
sub
inc
outsl
adc
push
pop
adc
ja
out
fdivl
insb
in
mov
lea
add
pop
mov
dec
add
inc
push
dec
mov
xor
inc
fwait
into
jns
mov
out
mov
push
mov
scas
adc
std
call
pop
cmpb
js
lods
incl
cmp
mov
cmc
mov
int3
out
adc
js
jl
sbb
mov
clc
sub
or
sbb
mov
scas
add
int3
and
jno
pop
subl
aad
sbb
mov
inc
movsl
jecxz
jp
test
or
lea
pusha
inc
push
sbb
push
cld
ret
pop
dec
adc
test
fistps
lret
and
and
jb
out
push
cmp
adc
shlb
jbe
les
mov
add
test
cmpsl
pop
cmpsl
loope
in
inc
idiv
push
popa
int3
test
jns
shr
das
push
call
aaa
adc
mov
sbb
mov
and
arpl
test
sub
rclb
mov
decl
pop
jno
sbb
ja
xchg
aad
subb
lods
dec
daa
hlt
mov
jg
imul
shlb
push
fcmovbe
sbb
test
fadds
loop
sub
sub
and
and
sbb
loopne
adc
ffreep
pop
clc
div
push
xorl
xchg
popf
cmc
sub
push
pop
xlat
and
call
cli
roll
aaa
add
mov
lods
push
cmp
cmp
hlt
sub
adc
or
mov
mov
cli
mov
div
mov
bnd
cmp
add
jne
sbb
mov
mov
enter
dec
mov
mov
inc
or
aad
mov
fnstsw
leave
add
call
xchg
pop
xchg
enter
test
orb
cs
add
add
push
cmp
mov
outsl
cmp
pop
jo
sub
sbb
imul
mov
and
mov
mov
add
push
lea
pop
mov
push
inc
inc
adc
xor
push
cli
sbbl
adc
jmp
add
fcmovnb
scas
loopne
mov
es
sub
rorb
movsw
test
or
rorb
mov
push
add
sub
cmp
ja
pop
call
call
jg
add
xchg
mov
jl
pop
insb
aam
addb
pop
ss
pop
test
movsb
inc
rcrl
test
iret
push
not
adc
out
cmpsl
fimuls
imul
sarb
push
cmp
incb
loop
add
add
inc
xchg
add
mov
add
js
and
lods
sbb
cs
test
rcrl
adc
rolb
test
add
sbb
jae
or
pop
jl
ret
es
xchg
mov
and
fildl
sbb
stos
and
mov
cmp
jnp
aad
sbb
cld
sbb
ret
inc
mov
push
mull
sarb
shrb
in
inc
add
add
cli
insb
mov
or
imul
stos
fisttps
fsubrl
cmp
sub
jmp
pop
ret
in
cmpsb
scas
inc
inc
pop
push
xchg
movsl
imulb
and
popf
sub
mov
add
mov
add
iret
ss
inc
sti
testb
adc
rcrl
dec
cli
sbb
mov
sub
mov
je
or
mov
mov
xor
cmp
and
inc
inc
mov
inc
lcall
ljmp
inc
fisttps
nop
mov
inc
jg
mov
sub
mov
jns
mov
hlt
xor
jge
and
ret
int3
mov
xchg
pop
mov
dec
les
dec
xor
inc
mov
mov
mov
mov
js
sbbb
pop
mov
fnstsw
std
inc
sbbb
bound
push
add
push
cmpsb
adc
push
cwtl
push
int
mov
cmpsb
mov
test
cmpsl
sub
mov
rcr
and
hlt
pop
lock
int
add
push
fbld
xchg
cld
push
dec
hlt
fadds
adc
push
mov
stos
mov
sub
sub
cltd
mov
mov
test
cmp
aas
xchg
mov
mov
push
cmp
push
and
mov
enter
setg
scas
jbe
pop
cmpb
orb
xchg
cld
fs
xor
sbb
movsl
test
xchg
pushf
sub
scas
mov
jl
lods
or
and
pop
or
cmp
insb
adc
aam
sar
sub
pop
adc
xchg
mov
jg
mov
arpl
repnz
mov
rcl
pusha
add
adc
xchg
and
push
mov
mov
or
rcll
cmp
in
adc
pop
lret
cli
pop
add
scas
mov
iret
xchg
call
outsb
test
jo
cmp
fs
cmp
stos
mov
pop
ret
push
fnstsw
and
iret
in
mov
es
loop
pop
sub
pushf
mov
fmul
cmpsb
pop
push
sbb
jg
dec
fidivrl
mov
mov
push
and
push
mov
mov
sti
jns
mov
adc
ret
mov
xor
jecxz
and
mov
sbb
push
movsl
mov
mov
es
iret
mov
or
call
into
ss
push
or
mov
push
xchg
dec
dec
clc
xor
cmpsb
lds
mov
inc
ljmp
jg
cmpsb
pusha
dec
lock
cmp
jmp
ret
addr16
xchg
sbb
push
jmp
mov
cld
sbb
mov
add
inc
and
dec
pusha
fcompl
inc
dec
aad
jmp
cld
jb
out
rolb
divb
dec
mov
scas
fldl
je
or
cltd
test
mov
mov
mov
inc
inc
push
xor
mov
outsb
push
test
dec
lahf
push
in
mov
mov
arpl
out
bound
test
in
loop
xchg
mov
bound
mov
jg
lock
clc
jbe
cmpb
dec
popf
sbb
pop
aad
add
lods
adc
mov
pusha
icebp
jl
cmp
dec
loopne
push
sbb
mov
scas
out
push
pusha
jne
xor
mov
int3
and
or
int3
jbe
cmp
lcall
cli
scas
mov
inc
out
insb
cmpb
add
mov
sub
int3
mov
push
cmp
aas
subb
push
pop
leave
adc
dec
xchg
es
filds
xor
aaa
loope
cmp
lea
movsb
push
divb
test
sub
sbbb
cmp
sti
dec
out
inc
mov
inc
pop
sub
jg
ss
jp
jg
dec
ljmp
cli
mov
out
sub
sbb
and
inc
stos
sbb
pusha
mov
je
scas
push
cmp
sub
sbb
ja
clc
or
imul
jmp
push
xchg
dec
push
xchg
clc
jl
outsb
xor
lods
nop
jnp
or
mov
and
dec
or
cwtd
pop
mov
dec
cli
sub
das
clc
pop
and
dec
mov
mov
js
xor
jo
pushf
cmp
les
mov
add
add
pop
jp
insb
mov
loop
push
out
cli
aaa
push
cmpb
inc
mov
or
movl
fisubrl
push
fwait
les
cli
jb
pop
imulb
mov
mov
add
mov
pop
fcmovbe
add
and
mov
aas
out
jae
jo
inc
push
int
cmc
push
xor
add
jmp
xchg
fcoml
ss
rcr
lret
clc
add
fadds
addl
ljmp
repz
fistpll
enter
js
or
and
xchg
push
mov
ret
and
inc
ds
dec
jg
aad
rorb
push
add
shlb
push
ljmp
xor
jne
mov
or
subl
pushf
js
jle
pop
lock
popf
sarl
test
push
sub
dec
jbe
lea
cs
into
push
mov
xchg
jo
rolb
shl
insl
inc
dec
pushl
arpl
and
add
in
clc
mov
add
popa
out
fisttpl
orb
hlt
shlb
out
aam
fbld
cwtl
push
mov
push
xchg
dec
mov
call
out
inc
or
cmp
movsl
push
jmp
les
in
hlt
test
xchg
dec
andb
pop
sbb
adc
dec
pop
in
pop
into
fbstp
sub
into
lds
repnz
jmp
ficomps
add
pushf
ss
in
data16
jne
xchg
les
mov
inc
mov
int
mov
mov
inc
pop
lds
xlat
mov
xchg
inc
xchg
movb
pop
dec
ljmp
mov
push
fnstsw
jg
mov
lret
into
cmpb
clc
shr
xchg
iret
push
add
fistpll
int3
pop
bound
or
rorl
xchg
mov
in
or
mov
mov
cmp
xchg
cmp
int3
fmull
in
insl
mov
jne
add
imul
or
sbb
sub
mov
adc
jg
pop
push
mov
sbb
fs
ret
ja
adc
xchg
hlt
jnp
popa
icebp
cmc
out
pop
popa
notb
inc
loop
push
jb
sub
test
lcall
rclb
dec
hlt
repz
adcb
pop
fcmove
fidivl
lods
sub
mov
imul
outsl
push
jg
lock
mov
jo
lea
mov
outsl
pusha
or
loopne
addl
mov
mov
adc
jmp
decl
sbb
push
and
cmp
mov
adc
cwtl
mov
mov
mov
dec
in
add
dec
mov
clc
imul
xor
call
outsl
mov
and
sbbb
scas
mov
or
mov
xor
adc
mov
mov
mov
mov
cmpsb
and
mov
xchg
lahf
mov
and
icebp
out
fisubrl
mov
imul
xchg
push
popa
std
push
sahf
xor
imul
aam
xchg
std
fdivrs
mov
add
inc
std
in
or
push
sbb
popf
xor
das
shrb
adc
ret
dec
ret
add
push
xor
inc
sti
lods
fwait
mov
nop
xlat
testb
sahf
jae
dec
notb
mov
scas
test
sbb
movsb
scas
sub
or
mov
adc
cmp
adc
mov
ljmp
sbb
sbb
mov
add
sbb
call
lcall
xchg
jb
das
orb
jl
pop
dec
adc
push
or
push
or
jae
std
jb
dec
xor
inc
and
test
sbb
adcb
mov
push
sarb
adc
pop
mov
inc
or
mov
pop
inc
cs
inc
dec
mov
push
pusha
or
jge
lret
aad
std
scas
das
pop
movb
xor
inc
std
jg
or
mov
mov
bndldx
insb
lods
push
scas
or
fcoml
mov
mov
mov
int
fucomp
mov
cmp
das
ret
adc
and
lds
lcall
cmp
lahf
shr
call
je
rcrl
pop
call
movsb
push
sub
dec
sub
pusha
xor
add
pop
fisttpl
jge
sub
sub
pop
cwtl
mov
mov
fwait
clc
dec
xorb
xchg
stc
push
cmovp
jmp
fstps
or
idiv
call
or
xchg
add
imul
mov
xor
pop
add
cmc
mov
in
cwtl
repnz
in
mov
sub
adc
cmp
pusha
inc
mov
jo
cmpsb
lods
inc
jle
mov
cld
pop
je
jmp
xor
bound
test
sub
movsb
lcall
cmp
pop
sahf
add
ficompl
pusha
in
and
push
push
ret
lods
pop
add
rolb
inc
pop
xlat
and
add
push
or
push
cmc
mov
lcall
or
push
sub
fistl
sbb
js
mov
movsl
leave
mov
push
mov
loope
mov
insb
dec
add
push
shl
pop
push
notl
int
mov
lcall
mov
data16
rol
mov
or
stos
out
sbb
les
cmc
mov
call
gs
cmp
ja
clc
hlt
int3
add
inc
inc
xor
lcall
add
add
ss
aam
inc
loope
movsl
xchg
mov
sub
insl
inc
cmp
inc
enter
shl
sbb
bound
push
xchg
sub
xchg
insb
sub
adc
ja
insb
mov
cli
cwtl
fdivrs
mov
leave
scas
add
insb
cmpsb
std
jle
mov
sbb
imul
sub
data16
jecxz
inc
addl
inc
jne
psubq
dec
outsl
es
in
pop
mov
inc
sub
out
pop
or
add
in
jnp
push
inc
dec
xor
dec
test
mov
sub
mov
ret
int
repz
mov
jl
jb
and
inc
pop
xor
push
outsb
ffree
push
es
movsb
fwait
or
inc
sub
adc
adc
cvtps2pd
jmp
jmp
shrb
pop
lret
lods
mov
inc
sbb
lea
mov
inc
into
int3
add
sub
daa
or
insb
ret
cld
dec
jnp
inc
pop
add
jg
es
jb
pop
and
sbb
mov
ret
fcomps
mov
lds
sub
outsb
icebp
xchg
jo
aas
inc
stos
je
sbb
sbbb
rolb
ss
mov
add
push
mov
mov
cmp
lods
pop
movsb
jns
adc
mov
fsubrl
fld
stos
lret
push
inc
adc
sub
ret
loop
jo
mov
pop
incb
mov
adc
mov
pop
pop
iret
lea
repnz
clc
push
add
jle
and
mov
adc
mov
fwait
mov
decl
popa
imulb
in
mov
and
test
pop
push
xorb
lret
add
mov
cmp
pop
jmp
call
mov
nop
cmpsb
add
int
jo
in
stos
sahf
call
bound
addl
cmp
das
push
jb
pop
stos
pop
cmp
imul
js
jo
loope
mov
mov
xor
int3
adc
push
stos
dec
adc
inc
xor
or
xor
jo
cmp
push
and
adc
and
adc
mov
dec
aaa
dec
test
jle
fst
jae
add
sti
xchg
push
sar
test
push
flds
rorb
pop
sbb
add
test
mov
cmc
xchg
data16
add
jbe
test
jecxz
mulb
loopne
mov
ljmp
adc
les
cwtl
cmpsl
into
js
add
inc
and
jg
stos
jle
mov
loop
clc
pop
mov
inc
inc
push
push
call
aas
ds
mov
push
jns
pop
xchg
jl
or
lcall
push
push
js
jo
jecxz
sbb
add
pop
pop
inc
ja
mov
ljmp
adc
ss
ret
mov
fs
cli
xchg
into
jns
mov
scas
adc
aas
sbb
bsf
xchg
dec
jp
das
lret
in
fistpl
pop
mov
call
pop
push
pop
fistpll
in
jge
pop
sub
fldl
mov
jbe
pushf
cmp
cld
and
or
cmp
ret
mov
push
mov
sub
push
fcoml
gs
add
pop
dec
jmp
cwtl
mov
adc
dec
pop
popa
sarl
shll
mov
mov
out
clc
sbb
add
or
sbb
popa
push
and
cmp
mov
loopne
loopne
ret
rolb
pop
push
jp
into
and
loopne
faddl
push
adc
ret
add
mov
shll
mov
iret
aad
xchg
push
adc
pop
or
cmpsl
nop
jl
jnp
xchg
inc
lcall
lock
or
and
push
mov
roll
test
pop
add
loopne
scas
aam
movsl
cmp
adc
fnstcw
loopne
push
xchg
ss
cmpb
repz
push
jne
int3
rolb
sub
add
lds
pop
sub
add
adc
mov
clc
xor
xchg
mov
sti
mov
aam
lea
push
fwait
add
decl
cmp
jae
add
sar
es
ja
cwtl
pushl
add
push
adc
adc
frstor
in
dec
pop
add
push
xchg
enter
add
mov
mov
adc
adc
mov
cld
xchg
std
pop
adc
out
in
shrl
cwtl
dec
test
dec
push
testb
sbbl
cmp
insb
loope
jb
testb
stos
lret
iret
clc
out
or
cmc
repnz
cmpsl
add
data16
mov
mov
addl
add
pop
mov
adcl
lcall
adc
ss
xor
mov
ficoml
lock
fisttps
or
adc
xchg
outsl
push
or
in
xchg
cmpsb
sbb
adc
or
in
in
imul
decb
jae
sbb
fisubrs
pop
es
pushl
std
pop
xchg
and
call
mov
xor
gs
pop
orl
add
push
sahf
mov
repnz
and
sub
jl
rorb
popf
jnp
xor
jg
push
cli
subb
add
add
test
dec
push
mov
out
mov
cwtl
lds
xchg
lds
incb
pushf
pop
push
adc
pop
lea
sub
mov
rorl
jmp
ss
stos
lods
scas
add
out
xor
lcall
test
test
fwait
push
pop
es
push
mov
mov
and
pop
cmp
pop
or
lret
outsl
dec
clc
jno
push
add
xchg
scas
incb
mov
push
mov
adc
call
mov
fsubr
mov
xchg
sub
scas
aam
dec
xchg
rcrl
mov
mov
adc
jo
jp
call
mov
mov
mov
lds
pusha
subb
pusha
sub
out
fstps
push
add
mov
mov
sub
hlt
adc
test
stc
or
mov
stos
mov
mov
sub
xchg
in
fwait
inc
stc
lcall
scas
xor
mov
mov
adc
sarb
fucomip
cli
bound
out
ljmp
mov
pusha
add
insb
rcr
lock
out
les
bound
bound
sbb
lcall
imul
pop
cli
addr16
xor
push
lock
ficoms
movsl
mov
jo
stos
push
cmpb
pushf
push
mov
jae
or
fcmovnu
mov
std
and
push
inc
scas
pop
fcomip
mov
pusha
push
xchg
xchg
mov
fdiv
test
jle
negb
ret
ds
jae
mov
xor
push
aad
subl
outsb
or
rclb
sbb
arpl
in
arpl
jg
ljmp
ljmp
ljmp
cltd
notl
cli
and
pop
adc
cs
adc
push
sub
scas
pop
data16
das
js
loope
mulb
mov
push
adc
push
xchg
sahf
sbb
mov
xor
inc
jmp
push
and
clc
add
outsb
inc
std
negb
cmp
int
xchg
sbb
lock
push
dec
mov
in
clc
ja
inc
adc
push
inc
adc
orl
stos
mov
mov
jo
inc
sbb
ret
lret
pop
mov
adc
shlb
push
xor
adcb
push
push
lods
mov
pop
popa
pop
add
loope
mov
ljmp
add
pop
insl
insb
dec
push
adc
lret
jo
dec
and
add
jo
shlb
push
mov
xor
sub
scas
pop
sbb
arpl
scas
ja
xchg
or
mov
push
push
scas
push
dec
or
fmuls
and
aam
push
or
push
or
mov
in
jl
jle
gs
xor
movsb
cmp
js
sbb
xchg
jecxz
or
mov
aad
mov
xchg
jo
pusha
inc
jp
out
mov
sub
mov
xor
cld
or
outsl
pop
jge
js
sbb
mov
data16
and
cmc
das
test
and
dec
fs
adc
add
icebp
sarl
inc
cli
ret
clc
pop
mov
gs
jl
jbe
xchg
adc
inc
adc
add
jae
xor
incl
mov
mov
and
shrb
sti
pop
dec
jmp
jecxz
or
ja
mov
sarb
scas
inc
sbb
bound
jo
or
push
lods
mov
sbb
mov
add
push
in
shlb
sub
incl
cwtl
mov
push
push
jo
dec
jg
mov
or
dec
mov
sar
lcall
xor
pushf
inc
popa
das
jle
adc
movsl
pop
jmp
out
lods
int3
ror
xchg
jle
mov
jle
sbb
push
rorb
clc
pop
hlt
push
sbb
rcll
pushf
div
add
xor
mov
roll
addl
jge
mov
cmp
pop
pop
pop
jne
aas
pop
movsb
daa
add
ret
xor
or
push
sub
roll
push
arpl
ss
cli
incl
xchg
add
xor
push
pop
shlb
pop
add
cmpsl
pop
or
ljmp
test
cs
mov
mov
or
xor
lods
adc
xor
popa
mov
xor
cs
dec
inc
xor
pop
pop
mov
add
mov
xchg
push
sbb
pop
outsb
loopne
cmc
rclb
adc
or
fimuls
cli
xchg
int3
fwait
insb
xor
add
paddq
fimull
and
lds
adc
add
dec
cld
push
pop
xor
inc
ret
and
add
movaps
call
fdivs
out
lret
ss
jo
icebp
call
arpl
test
shl
cmp
movsb
aas
push
jae
xor
push
push
clc
or
and
les
lds
sahf
ljmp
sub
inc
jg
inc
loope
jge
jnp
ja
dec
xchg
sub
rol
clc
pop
or
or
pop
cmp
add
sbb
xchg
dec
mov
sub
popf
mov
das
dec
clc
xchg
add
inc
test
xchg
sbb
push
mov
add
test
xchg
sbb
icebp
xchg
rorb
sahf
mov
adc
loopne
lcall
add
mov
fwait
pop
mov
shlb
mov
add
mov
mov
jae
dec
jmp
pop
adc
inc
jmp
add
aad
popf
jbe
movsb
imul
test
out
xchg
cld
mov
rcl
dec
fcompl
dec
mov
stc
mov
sub
mov
clc
inc
adc
les
mov
movsb
inc
pop
ficompl
sahf
push
add
aas
sub
dec
xchg
inc
int
addr16
faddl
js
lds
push
out
push
sbb
mov
pop
movsl
mov
and
mov
push
push
decl
loopne
jno
add
test
inc
js
lock
jo
stos
cli
lcall
loopne,pn
adc
repnz
addb
ret
fistpl
cmp
sbb
stos
mov
sti
and
mov
inc
fstl
sarb
psraw
sbb
jb
ss
mov
cmp
add
jb
cmp
sbb
jle
sbb
mov
add
mov
pop
test
mov
fdivs
jmp
leave
cmp
js
mov
icebp
aaa
mov
add
mov
sbb
push
pop
xor
and
in
push
jecxz
inc
inc
call
js
outsl
and
shrb
lock
popa
sti
mov
stc
lcall
add
add
das
sbbb
sub
dec
add
cmp
jg
push
enter
dec
sbb
lods
inc
addl
push
mov
lcall
cmp
or
inc
mov
jle
cld
repz
ss
inc
pusha
imul
inc
shrb
imul
push
das
inc
jbe
fs
add
pop
mov
mov
sbb
gs
and
ljmp
xor
xchg
scas
jns
xchg
repnz
mov
clc
mov
inc
jno
adc
jmp
lret
clc
call
mov
jle
sub
push
cli
mov
mov
lcall
nop
ds
add
fdivrl
or
or
mov
add
jl
out
pop
test
fldl
sbb
mov
sub
jmp
jo
mov
repnz
dec
mov
ja
pop
push
push
out
mov
cmp
lcall
jp
ret
mov
pusha
out
push
stos
clc
xchg
cmp
pop
mov
fmull
inc
enter
in
pop
ja
mov
jp
shr
shlb
popf
and
xchg
jo
mov
test
and
mov
push
iret
or
cwtl
push
lea
inc
adc
test
mov
pop
js
aad
filds
sti
pop
gs
push
pop
insb
ja
repz
cmpsl
inc
cs
push
fstpl
mov
push
test
out
push
ds
out
std
scas
or
inc
sub
js
out
cmp
dec
sbb
ret
push
daa
jo
out
cs
xchg
jbe
out
mov
jge
xor
jb
inc
imulb
movsb
std
sub
mov
or
push
arpl
xor
push
ja
neg
and
xchg
ljmp
out
out
dec
push
jle
mov
sub
cs
ficoml
add
adc
pop
lock
sbb
inc
test
add
addr16
scas
daa
sbb
xchg
stos
dec
mov
jp
clc
or
call
mov
daa
adc
test
shrb
test
jl
mov
das
pop
inc
xor
push
sub
shlb
add
test
lea
xchg
out
inc
xor
mov
lret
add
mov
sbb
enter
mov
mov
mov
push
add
xor
addb
sahf
xor
lcall
dec
ds
in
leave
repz
aam
cli
cli
mov
mov
call
lea
mov
mov
rcrl
dec
pop
inc
push
sarl
dec
loopne
add
lods
xchg
scas
add
outsb
jmp
iret
push
inc
add
fisttps
mov
sub
jmp
outsl
push
popf
inc
sar
or
mov
call
lea
hlt
enter
loopne
sti
and
mov
pop
sbb
dec
mov
movsb
xchg
lea
test
push
inc
das
clc
xor
mov
nop
lods
adc
pop
popf
push
dec
jno
shll
pop
and
call
jb
sbbl
mov
arpl
or
jg
adc
xor
cmp
pop
lock
lods
sbbb
divl
popf
hlt
int
xlat
xor
sarl
push
add
cmp
add
mov
in
fisttpll
scas
cmp
or
cmp
das
bound
cmpsl
mov
add
int
adc
pop
sbb
adc
je
push
push
mov
out
jb
faddl
or
orb
dec
je
jge
mov
dec
jmp
mov
xor
pop
sub
daa
sub
or
js
les
addb
mov
or
add
lret
mov
push
pop
cs
push
ds
lock
or
es
into
clc
push
sahf
test
movsl
jb
pop
adc
or
cltd
das
test
movsl
mov
repz
loopne
imul
or
test
sti
fidivs
pmaxub
mov
dec
les
sub
ret
hlt
in
aad
pop
and
xchg
shlb
ret
lahf
mov
xchg
push
jmp
mov
lcall
test
orb
mov
ljmp
jo
imul
icebp
lcall
xchg
insb
mov
xchg
cli
test
out
xchg
xor
adc
imul
test
xlat
add
sti
fcos
mov
cli
or
and
cmp
andb
adc
sbb
movsb
jb
xor
mov
js
imul
dec
push
mov
mov
sbb
ret
fwait
das
into
inc
pop
adc
scas
sbb
cmp
fs
pop
orb
cmp
xchg
sbb
cli
pop
enter
movsl
inc
dec
es
inc
push
subb
fcomp
xlat
jae
mov
and
es
dec
sbb
jecxz
cld
jbe
mov
jl
cmp
popl
pop
cld
cmp
stos
sbb
mov
sub
jno
xchg
inc
sbb
stos
icebp
jmp
xor
inc
inc
or
sar
adc
add
adc
int3
mov
in
mov
movsb
cmpsb
jo
xorb
fistl
sub
pop
psubusw
test
or
mov
movsb
cmpsb
pop
rcr
jb
mov
inc
or
lock
mov
mov
aad
mov
lock
mov
add
adc
out
sbb
clc
mov
xor
mov
fisubrl
lods
idivl
test
pop
dec
mov
add
mov
sub
add
mov
imul
inc
cmp
or
rcr
ljmp
std
inc
clc
jg
add
out
fsubr
mov
fldl
jmp
test
push
insb
and
adc
outsl
cld
add
dec
mov
rorb
jae
test
sub
push
xlat
inc
xor
and
add
ljmp
or
rclb
ss
push
mov
push
or
add
addb
jg
jo
cmc
pop
inc
gs
mov
es
leave
gs
inc
repnz
xchg
add
mov
dec
or
sbbl
or
adc
out
sbb
pop
add
xchg
mov
incl
add
cmp
cmpsb
or
cmp
stos
pop
test
test
push
cwtl
or
aam
cli
decl
hlt
jb
jle
jp
mov
in
add
inc
les
xchg
hlt
fldln2
jge
fs
mov
ja
jecxz
xor
enter
add
test
adc
mov
mov
rcll
fsubr
imul
in
and
xchg
cmp
mov
stc
push
adc
xor
pusha
xchg
repz
sarb
test
mov
xchg
inc
int3
push
loopne
jbe
loop
xor
lret
int3
add
test
or
pop
pusha
xor
mov
jp
lock
mov
or
pop
mov
add
insb
push
das
sub
or
jbe
jl
fwait
fs
or
push
rolb
test
and
mov
mov
inc
or
push
ja
mov
in
inc
ljmp
or
ds
mov
inc
sbb
pop
cld
add
mov
jbe
and
sub
pop
cwtl
outsl
shll
mov
or
lock
pusha
sbb
add
mov
mov
cmc
test
or
jg
pop
jmp
add
mov
movsb
es
in
pop
negl
dec
mov
outsl
sbb
push
fistpll
and
ja
adc
sarb
out
js
push
in
jp
call
xchg
cld
inc
shll
das
jo
test
inc
push
shlb
incl
enter
push
sub
sub
mov
cmpsb
inc
jl
and
xchg
and
arpl
js
cwtl
sbb
pop
dec
adc
pop
adc
jmp
insl
xor
shll
fstpl
int3
xchg
push
jmp
cld
out
fdiv
sub
sbb
xchg
mov
mov
mov
cmp
push
cmp
pop
lods
cmp
dec
or
test
fs
add
xor
insl
icebp
or
jg
sub
call
jg
pop
lret
sub
scas
ljmp
xor
repz
out
aam
mov
clc
adc
dec
cld
jo
sbb
call
cmpsb
js
cli
clc
mov
pop
test
imul
rcrl
push
insb
xchg
rorl
dec
shrb
jecxz
loopne
mov
clc
negl
mov
push
mov
ss
pop
dec
cmc
scas
cmpsb
lock
add
xor
push
xchg
aas
add
nop
push
sub
add
mov
addr16
mov
fstpt
dec
imul
or
xor
outsb
decb
pusha
inc
jb
sbb
mov
mov
jl
jg
dec
push
mov
mov
or
mov
lret
lcall
pusha
sbbl
mov
sub
outsl
push
mov
lock
adcb
mov
dec
enter
mov
loope
outsl
mov
inc
sub
inc
push
push
ficoms
scas
sahf
out
fdivrs
sbb
xor
ljmp
repz
sbb
les
dec
aam
jb
cmp
push
pop
sbb
add
cmc
add
and
filds
cmpsb
pop
push
xchg
jne
pop
gs
es
clc
push
cld
xor
xlat
testb
aas
mov
cmp
mov
mov
mov
cli
mov
add
dec
pop
push
push
hlt
and
je
js
sbb
jbe
lds
dec
lds
in
sub
xchg
adc
shrl
jbe
shlb
cwtl
and
sub
cmc
add
push
loope
xchg
inc
call
jg
inc
dec
push
insb
sbb
cld
jecxz
mov
pop
sbb
cwtl
sbb
dec
inc
sahf
stos
jmp
push
jl
iret
push
add
pop
xchg
xor
lock
pushl
xchg
adc
out
pop
stos
add
sbb
inc
mov
jmp
and
cwtl
and
mov
dec
mov
pop
icebp
push
lock
adc
push
sub
mov
push
clc
cld
sbb
hlt
movsb
pop
ja
stos
adc
out
mov
loop
pop
mov
cmp
movsb
in
xchg
mov
xchg
mov
fdivs
push
adc
xor
aaa
cld
stc
jl
jbe
fdivs
and
push
adc
mov
movsl
xor
dec
repnz
mov
mov
inc
cmp
sub
xor
fadd
dec
pop
shrb
cwtl
cmp
sbb
push
adc
fwait
sahf
in
icebp
cmp
out
stos
imul
cld
ja
mov
js
xchg
loop
jo
lret
in
incl
pop
xchg
pop
jl
add
dec
fucompp
repz
test
shlb
adc
nop
mov
lcall
sarl
cwtl
adc
insb
and
inc
aam
add
pushf
xchg
scas
aam
movsb
sub
jb
rcr
sbb
jle
fwait
jnp
push
es
xor
xchg
sbb
mov
sbb
lcall
jmp
or
xchg
mov
jle
test
mov
fsubl
mov
sbb
das
inc
pusha
mov
data16
lods
sub
jo
xor
xchg
sub
inc
xor
test
sti
add
imul
and
push
sub
xchg
push
inc
ljmp
out
push
mov
push
mov
das
jl
loopne
in
jmp
push
rorb
daa
mov
imul
insb
push
pop
inc
adc
mov
add
pop
test
or
fs
add
cld
incl
call
add
jno
mov
dec
fcomip
or
mov
je
fnstsw
sub
fisttpl
mov
or
push
sbb
and
outsl
pop
and
mov
icebp
pop
or
xor
inc
pop
fidivl
lds
sbbl
movsb
jle
mov
hlt
lret
or
inc
jecxz
sub
mov
add
xchg
jo
inc
mov
mov
mov
movsl
movsl
fs
push
jp
or
jle
push
jno
arpl
pusha
xchg
mov
pop
loopne
fcmovb
sub
or
movsl
test
adc
sub
push
sti
push
js
xchg
mov
les
jg
mov
mov
mov
dec
adc
sub
pusha
jp
jb
add
mov
pusha
xor
cmp
adc
or
cmp
push
bnd
cmp
lcall
sahf
nop
jge
and
mov
nop
inc
push
mov
inc
inc
sbb
sbb
mov
std
mov
push
decl
mov
jge
cmp
mov
adc
add
fwait
incb
scas
mov
clc
xorl
push
fidivrs
js
xchg
scas
pop
cmpsb
or
lock
aam
rcl
mov
sub
mov
add
mov
push
jae
hlt
jmp
mov
jae
sbb
ss
into
sub
insb
cld
ljmp
leave
pusha
pop
cmpsl
mov
cltd
cmp
adc
dec
add
rolb
add
push
push
test
cmp
xchg
popa
add
fldl
cld
test
push
adc
sbb
add
ret
into
aad
pusha
les
sub
pop
hlt
mov
sbb
into
stc
inc
in
ja
andb
enter
dec
add
jne
mov
pop
jnp
loopne
xchg
push
push
imul
lods
out
add
pop
sbb
fstps
shl
push
push
push
imul
inc
mov
stos
and
jle
sarb
ja
std
push
aad
push
bound
filds
shr
add
push
push
or
movsl
add
movsb
ds
xchg
dec
lods
fdivr
mov
or
sub
adc
fimull
xor
mov
add
fdivs
cmp
pop
dec
test
inc
xor
les
pinsrw
mov
push
xor
pop
movsl
fidivrl
push
dec
jbe
sbb
and
jg
inc
nop
cmpsl
adc
pshufw
outsb
mov
pop
popa
mov
scas
ds
mov
call
add
in
decl
es
in
movsl
mov
xchg
xchg
sub
fistpll
mov
ljmp
sub
xor
das
adc
rclb
aam
sbb
decl
mov
xor
xor
mov
or
add
pop
aaa
sar
mov
jb
enter
sub
stos
mov
mov
add
popf
push
add
sbb
or
stos
nop
in
fwait
into
in
or
mov
ja
nop
in
pop
pop
sbb
adc
xchg
popa
insl
mov
push
scas
pop
pop
mov
sbb
sbb
fildl
pop
sub
cmp
cmp
add
dec
jo
pop
or
jecxz
cwtl
pusha
cs
shll
jecxz
and
aas
and
xor
bound
lock
pop
mov
outsl
shrb
push
mov
or
add
sub
pop
jp
ds
stos
mov
or
sub
aad
rclb
fdivs
cld
pop
add
sub
or
fldl
in
leave
push
ljmp
lcall
fsubr
mov
xchg
pop
pop
lods
mov
pop
sub
sbb
dec
jo
mov
sub
mov
mov
in
cmpb
outsl
fistpl
xchg
xor
and
stc
or
pop
mov
mov
shrb
sub
fidivs
hlt
push
fdivrl
cltd
sahf
ret
jae
pusha
aam
filds
lcall
mov
xchg
ret
nop
inc
xor
jbe
lret
cs
jg
pusha
sbb
insl
jmp
add
mov
fsubs
fsubp
adc
sub
out
sbb
aas
adc
cltd
mul
add
scas
jbe
mov
repnz
testb
adc
mov
xor
and
xchg
and
mov
js
mov
mov
aaa
jl
xchg
dec
dec
dec
mov
adc
lret
std
pop
aad
push
mov
das
mov
sub
add
js
push
insb
mov
or
sbbb
lock
push
icebp
cwtl
dec
adc
inc
and
jp
outsb
je
mov
add
jb
push
sbb
fs
outsb
stos
mov
push
ljmp
inc
jns
test
fdivrs
mov
dec
sbb
xchg
lahf
push
lock
push
mov
rolb
fldt
out
push
xor
xchg
dec
xorb
repnz
push
rorl
ljmp
xlat
pop
into
es
in
push
pop
pop
shlb
push
sahf
xorb
fstps
lock
outsb
add
test
or
pop
sbb
clc
sub
mov
ret
addl
pop
mov
out
iret
lret
movsb
ror
cmp
fwait
es
mov
mov
push
and
cmp
cld
pop
fcomip
jg
pushf
andb
add
aad
and
push
inc
int
aas
push
push
xlat
je
lods
call
push
imul
dec
push
adc
jp
sahf
jb
mov
in
lret
lock
fadds
jae
clc
pop
movsb
mov
enter
inc
lds
fdivrp
leave
icebp
mov
add
mov
cmp
lds
mov
add
rolb
inc
cld
in
and
sbb
adc
adc
and
cwtl
inc
mov
mov
and
ss
push
out
ljmp
stos
int
lcall
xor
mov
shrb
jmp
test
mov
sub
sbb
sbb
xlat
rolb
xchg
jle
push
sbb
xchg
test
fbld
or
xchg
sbb
pusha
fmulp
mov
js
std
jmp
xchg
das
or
mov
repz
pop
cld
cmp
cmp
xchg
test
mov
dec
call
loopne
add
jo
test
in
and
pop
push
shlb
loopne
jp
push
aas
sub
pushf
sbb
hlt
sub
push
fstl
add
sbb
push
das
pop
out
imul
scas
jp
adc
and
stos
sub
and
loope
in
lahf
xchg
dec
pop
daa
stc
test
popl
lock
xchg
loope
dec
mov
mov
jge
push
mov
jge
insb
fcmove
das
mov
xor
sub
pop
notl
cmc
xor
loopne
movsb
and
loopne
xchg
into
fcompl
sub
jg
popa
ret
pop
dec
repz
mov
adc
dec
pop
mov
iret
fists
mov
insb
test
adc
or
adc
or
dec
jmp
int
roll
sub
or
adcb
notb
out
aaa
mov
adc
shlb
and
or
inc
jo
sbb
shl
pop
data16
or
call
jle
insl
add
popa
ljmp
ja
mov
xchg
cmpsb
jo
clc
inc
mov
add
lock
dec
mov
xor
scas
cmpsb
stc
or
dec
push
dec
lds
hlt
mov
std
dec
or
add
lds
in
data16
mov
cltd
xchg
test
push
std
and
sub
cli
push
ret
sub
adc
mov
push
jbe
jle
inc
inc
fstpt
add
cltd
in
cs
in
jmp
and
repz
sbb
adc
pushf
fidivrl
mov
call
lods
xor
mov
push
subb
pushl
and
es
adc
pop
inc
icebp
jle
movsb
aas
and
add
cwtl
cmpsb
aaa
lock
mov
mov
xchg
dec
test
push
fsts
fwait
pop
push
dec
xor
cmpsb
mov
dec
std
loope
mov
daa
cmpsl
stos
sbb
cmp
adc
push
addr16
jle
jo
shr
and
aad
xchg
add
inc
setge
call
xchg
xor
jl
inc
sbb
dec
push
cmc
mov
mov
mov
jle
rcrb
push
or
cmp
pop
adc
jmp
data16
cmpb
push
movb
xchg
dec
int
lea
gs
sar
andb
xchg
mov
mov
shl
cwtl
scas
fimuls
addr16
push
mov
clc
pop
jg
jecxz
inc
xchg
aam
inc
mov
sub
jmp
outsb
test
add
lea
xchg
jmp
adc
push
inc
cmp
das
hlt
cld
int
dec
inc
mov
inc
lods
adcb
and
loope
dec
nop
sbb
lods
test
pop
add
adc
scas
jge
ljmp
and
push
xchg
nop
rcrb
fistpll
incb
sahf
sbb
and
enter
or
add
xor
sbb
pop
fsubl
mov
ljmp
ss
and
loope
and
lock
lods
data16
sub
jbe
sub
movsl
fistps
cmp
push
mov
in
add
and
lret
xor
cmp
enter
cwtl
test
or
icebp
push
scas
or
lods
add
loope
sti
cmp
fmull
pusha
dec
jmp
xor
ficomps
mov
adc
ljmp
mov
mov
enter
mov
jb
mov
lret
sbb
rcrl
inc
push
ficompl
jo
scas
sbb
sbb
push
pop
pop
ja
ds
xor
imul
es
jle
and
dec
mov
cmp
pop
jo
lock
mov
nop
pusha
pop
mov
call
aam
add
loopne
sub
lds
jno
test
sarl
adc
ret
cld
aaa
dec
ja
xor
pop
mov
mov
sub
cmp
xor
or
add
pusha
xchg
lret
and
cmp
negb
or
xchg
jl
cmpsb
imul
mov
adc
sub
mov
pusha
fistps
or
dec
test
outsb
call
xchg
mov
adc
push
adc
in
jo
mov
mov
push
inc
fldl
xchg
jle
adc
lods
and
repnz
mov
mov
leave
cmpsb
fcoms
jno
add
stc
jo
adc
and
and
dec
lods
add
sbb
lock
cmp
hlt
fcmovbe
das
xchg
mov
pop
push
ficoml
lret
movsb
inc
add
cmp
inc
rolb
lret
push
rcr
inc
mov
jne
repz
cli
js
sbb
scas
sti
repnz
sar
aad
dec
or
add
icebp
push
push
cmp
adc
xor
fnsave
js
jno
or
inc
push
scas
clc
xchg
mov
mov
push
xor
jg
loope
jmp
mov
js
xor
scas
mov
fcoms
decl
mov
cmp
push
scas
lods
jno
add
das
add
sar
lcall
pusha
pop
enter
aaa
rorl
xor
movl
xchg
lea
or
jp
lcall
ja
push
sahf
lock
xchg
pop
cmpb
pop
adc
push
je
pop
xchg
mov
imul
mov
sbb
shr
cmp
dec
cld
add
mov
rclb
jae
insb
pop
jno
cmp
test
mov
hlt
or
mov
imul
xchg
xchg
incl
and
sub
inc
xchg
mov
lcall
shll
shlb
push
shrl
fisubs
test
pushl
inc
jecxz
and
jb
inc
mov
xchg
mov
and
cmp
inc
sbb
mov
mov
idiv
int
add
jnp
les
and
sti
pop
fisubrs
mov
jb
inc
ret
call
sbb
ja
xlat
stos
and
push
sub
iret
push
shl
in
in
mov
pop
hlt
out
test
sub
pushl
addb
in
mov
lods
mov
push
call
sbb
stos
mov
test
pushf
call
xchg
scas
ret
loop
das
and
pushf
daa
and
movsl
inc
loop
xorl
mov
cli
push
mov
xlat
inc
popf
sbb
mov
jo
sbb
loop
decl
dec
jnp
mov
inc
adc
mov
aaa
xchg
mov
dec
adc
xchg
pop
ss
pusha
mov
pop
cmp
pop
insb
shll
and
lock
sbb
pusha
adc
shlb
rcll
repz
outsb
adc
into
in
lods
and
cmp
and
loope
fwait
or
adc
pop
rolb
cli
subb
xchg
or
test
leave
paddw
jne
call
nop
clc
push
mov
loope
add
mov
or
aam
test
fucomip
addb
dec
add
dec
inc
ljmp
fs
das
rcrb
pushf
rol
leave
xor
cmp
movsb
jno
mov
out
loopne
dec
outsl
loop
js
mov
pushf
or
adc
shlb
ljmp
push
in
pop
jmp
adc
fnstsw
icebp
incb
push
sbb
int3
add
je
fst
jg
inc
mov
cmpl
cmp
cld
sub
xchg
or
outsb
or
leave
cmp
xchg
jne
pop
and
sub
pop
repnz
push
out
rolb
in
add
or
rcrb
clc
cmp
sub
push
add
add
icebp
cmp
inc
push
add
orb
test
xor
lcall
out
pop
sbb
dec
aas
xor
and
mov
jmp
dec
inc
xchg
xorb
mov
aas
dec
push
adc
jg
and
ss
jmp
cmpsl
loopne
xor
lock
movsb
mov
mov
xor
dec
or
and
adc
mov
int3
ja
inc
pop
mov
int3
cli
push
outsb
add
cmc
ja
and
push
jb
bound
xor
pop
sbb
or
out
fildll
movl
aad
mov
jle
call
outsl
scas
incb
add
inc
sub
pushl
add
lahf
jecxz
jo
test
xlat
sar
jl
insb
or
push
add
dec
test
or
pushf
pop
insb
adc
movsl
add
mov
call
mov
xchg
movb
into
xchg
mov
inc
push
inc
push
xor
fs
jo
in
cmp
cmpsb
ficompl
inc
jo
mov
pushl
pop
pop
pushf
fdivl
movl
dec
test
inc
std
and
test
cs
out
cmp
icebp
stos
cmpsl
mov
push
xor
sbb
faddl
or
add
push
cld
fisttpl
das
push
mov
std
mov
adc
jmp
ja
sub
and
mov
push
mov
loop
mov
rclb
mov
rorb
add
inc
js
fsubrl
mov
jbe
les
jo
jle
test
rclb
data16
in
in
or
loopne
loopne
jl
ss
inc
pop
mov
jne
jne
mov
cmp
inc
dec
sub
xchg
cld
jo
nop
push
adc
mov
dec
sub
clc
sbbb
adc
addb
add
test
pop
push
inc
mov
ret
inc
int3
in
mov
mov
xchg
push
xchg
clc
add
inc
push
sub
add
call
stos
dec
shrb
testb
ret
mov
decl
jo
fistpll
mov
rcl
fidivl
ret
clc
pop
sbb
subl
int3
rdtsc
jle
es
outsb
fdivrl
xor
shll
mov
loopne
inc
sub
test
popa
sti
cs
dec
aam
jl
sub
inc
cmp
xorb
or
rcrb
lock
dec
push
jnp
add
and
les
out
fcmovne
clc
inc
jl
int3
fadd
jl
decl
sti
das
xchg
jp
andl
fst
shlb
or
imul
fadds
jo
cmp
push
add
add
bound
imul
shr
test
pop
icebp
ja
inc
cmp
sbb
mov
dec
mov
pop
leave
push
dec
shlb
dec
into
sub
test
nop
cwtl
cmp
or
mov
add
or
shlb
insb
sbb
in
mov
mov
mov
es
mov
jb
fbstp
das
adc
repnz
ret
sbb
std
adc
dec
lods
sub
ljmp
clc
or
test
sub
push
pop
cli
cmpb
movsl
inc
cmp
les
call
fadd
cmpl
sub
inc
ss
adc
insb
dec
scas
call
jecxz
into
scas
mov
paddw
mov
ret
in
rol
ljmp
aad
xchg
sub
dec
testl
and
das
fsubl
je
dec
push
mov
xor
enter
xchg
xor
xchg
and
fcoms
cwtl
lods
pusha
add
pop
stos
pop
mov
rcl
in
inc
cmpsb
lods
cmpl
or
outsl
das
rcrb
pushf
jg
push
inc
push
je
shll
push
add
inc
out
shlb
sbb
pop
inc
push
sub
decl
push
sbb
mov
add
sub
stos
movsl
cmc
push
cld
outsl
inc
mov
xchg
sub
jbe
add
decb
in
xor
xor
and
cmpsb
std
rclb
sbb
std
loopne
adc
or
jmp
sub
add
jns
sbb
adc
sbb
pop
std
jmp
add
icebp
movsl
outsl
cmp
jmp
gs
and
xor
or
pop
sub
xlat
pushl
and
xor
and
mov
lcall
orl
ljmp
and
jmp
insb
loop
push
sbb
mov
std
aaa
ror
add
repnz
stc
push
xor
lock
add
aas
sbb
pop
sahf
cmp
inc
daa
or
and
or
mov
bound
xor
fimuls
hlt
fs
and
call
cld
int
shl
add
out
clc
es
out
ja
aaa
fmull
jecxz
ret
push
mov
sbb
fs
mov
add
std
fsub
and
ja
inc
or
outsl
add
xchg
push
mov
inc
push
ljmp
push
sub
mov
sub
add
fdivrs
adc
pop
mov
jb
bound
les
xor
popf
and
roll
bound
xchg
mov
in
mov
push
push
push
subl
sbb
sar
or
pop
data16
std
fidivrl
push
add
out
add
mov
fdiv
enter
jl
jo
push
lods
xchg
jnp
mov
push
imul
pop
inc
xchg
shrb
sbb
adcl
mov
and
lods
aaa
ret
adc
xchg
sub
int3
or
sbb
ficoms
jl
or
into
xorl
out
jmp
outsl
jg
add
subl
sub
fiadds
clc
out
push
cld
aad
std
in
mov
int3
push
xchg
jl
outsb
call
fwait
xchg
data16
stos
cmpsl
cmp
fimull
iret
into
add
or
dec
push
insl
add
add
mov
testb
adc
mov
les
sbb
add
sub
mov
mov
adc
out
mov
int3
je
or
pop
cmc
addr16
lods
mov
push
callw
add
faddl
sub
mov
sub
int3
aas
pop
inc
imul
imul
fnstsw
lock
sub
movsb
lock
xchg
add
push
xchg
push
je
js
fsubrs
ljmp
push
mov
das
ret
dec
mov
sbb
in
mov
mov
add
das
adc
es
lds
in
mov
mov
or
mov
insb
cmp
or
divb
pop
push
mov
mov
nop
sbbb
and
pop
pop
std
push
pop
pusha
push
ds
and
movsb
mov
fimull
adc
lcall
test
adc
std
mov
pop
or
sub
add
or
or
rclb
push
xchg
repz
and
pop
add
add
pop
mov
sub
mov
add
daa
mov
movb
xchg
addb
cmc
aas
add
pop
lods
pop
xor
xchg
popa
test
sarb
cmp
xchg
das
lods
sarl
cwtl
cmp
xor
stos
or
push
xchg
pop
mov
jg
fwait
je
lcall
sbb
ret
or
sarb
push
loop
mov
pusha
incl
xchg
out
push
and
rcrl
loop
cld
test
cli
jp
inc
cmp
adc
add
adc
sbb
cmp
push
jb
iret
sbb
xchg
test
pop
rcrl
mov
cld
frstor
xor
lods
aas
or
aam
clc
pushl
cmpsb
mov
or
xlat
aas
add
ljmp
stos
jl
sbb
jo
movsl
dec
mov
roll
daa
jne
or
mov
clc
and
in
xor
bound
mov
mov
push
adcb
dec
cmp
cmp
pop
jmp
out
mov
mov
adc
lods
push
in
mov
addb
fs
lods
clc
lods
mov
hlt
or
adc
lcall
stos
dec
inc
jbe
jl
outsb
aam
jns
cmp
push
or
adc
sbb
inc
jle
push
push
and
push
fistl
add
mov
adc
int3
or
test
call
adc
addr16
inc
mov
xor
inc
sub
fstp
shlb
icebp
jle
mov
lds
mov
popf
into
call
jne
shlb
push
push
sbb
lcall
push
inc
imul
xchg
mov
out
cmp
pusha
fisttps
in
pusha
out
lret
repnz
and
out
fcoms
dec
fcomip
dec
mov
jo
test
dec
scas
push
test
notb
dec
repnz
enter
out
rcrl
fwait
cmc
mov
daa
pop
push
fucomip
xchg
hlt
testl
clc
stos
and
aas
add
ror
cmpsb
or
test
cmp
mov
data16
lret
sub
jg
cmp
call
fcomps
or
pop
add
xchg
out
add
push
push
out
sub
enter
subl
adc
xchg
shrb
pop
ficompl
pop
and
sbb
add
adc
mov
jbe
inc
push
popf
xchg
clc
call
mov
sub
loope
or
mov
enter
add
cmp
push
call
inc
xchg
dec
shrb
push
orb
nop
pusha
xor
lds
lea
xchg
lock
mov
fwait
adc
insb
or
mov
shrb
adc
add
arpl
outsl
and
jle
cmp
inc
jo
shl
lcall
jmp
inc
adc
pop
sbb
movsl
or
add
and
inc
cmp
push
pop
add
mov
aaa
dec
call
adc
mov
lret
in
ret
push
iret
pop
lahf
inc
jl
scas
cli
hlt
mov
pop
dec
mov
outsl
xor
jmp
add
or
mov
mov
loop
les
pop
mov
addb
popa
jp
xchg
and
daa
add
lock
xchg
xchg
mov
sub
jne
fwait
push
scas
xchg
sbb
in
add
int3
lret
addl
test
and
dec
add
fnstsw
pop
mov
add
out
cwtl
jmp
ret
xlat
cmp
clc
ja
adc
scas
or
int3
adc
inc
das
bound
cmpb
aaa
pop
push
and
rorl
js
out
push
lock
fwait
lds
xchg
mov
jne
mov
push
shl
adc
cmp
pushl
jo
testb
fsubl
cmp
and
sub
enter
js
sub
inc
inc
mov
lret
ljmp
sbb
xchg
mov
push
out
lods
mov
mov
inc
jb
cmc
ljmp
push
fs
lahf
xchg
sub
icebp
xor
aam
mov
addl
ljmp
push
dec
jg
lock
call
cltd
loop
mov
dec
icebp
adc
nop
pusha
mov
mov
addr16
movsb
mov
fiadds
inc
cwtl
ss
pop
add
push
and
push
xchg
in
mov
insb
jp
orb
outsb
ss
cmpsb
sbb
xchg
rorb
lsl
pop
mov
in
push
stc
sbb
out
sbb
pop
pop
sub
leave
mov
cmc
jg
sub
pop
dec
mov
push
jo
fwait
mov
adc
cwtl
mov
mov
push
inc
popa
xor
pop
sbb
loopne
packsswb
and
pop
lcall
dec
outsb
mov
scas
into
inc
jp
mov
jle
mov
aas
icebp
and
pop
xor
cmp
call
mov
repnz
sub
loope
adc
adc
fidivl
js
idivb
cmp
xor
sub
imul
ret
insb
in
js
je
xor
insb
lret
mov
mov
pop
subb
in
popa
jl
or
jge
sahf
mov
pop
call
push
xchg
mov
pushf
je
pop
aam
xor
lret
cs
das
fistps
jb
jecxz
into
into
insl
cmp
inc
cld
test
lret
cltd
add
mov
ror
shlb
loope
sahf
orb
push
pop
test
and
cld
int
or
mov
sub
or
add
mov
aam
pop
mov
jg
loopne
mov
cmp
inc
inc
in
scas
aaa
add
stc
xchg
jns
add
cmpsl
es
je
call
mov
or
es
test
ljmp
ret
rcll
js
mov
adc
lret
jl
outsl
mov
loop
sarb
fmull
mov
inc
movsb
add
xchg
xor
or
mov
int3
movsl
mov
sub
xchg
dec
mov
ret
aaa
push
ljmp
sbb
sbb
lds
jl
out
sar
jbe
push
in
incl
adc
jmp
mov
jp
pushw
xchg
add
jle
dec
xchg
cmc
repnz
aas
repz
fwait
mov
cli
and
gs
incl
push
dec
mov
shld
xor
xchg
sarl
cmpsb
add
push
push
sbb
ficoml
adc
pop
ret
sub
push
sahf
push
fwait
test
inc
xchg
loopne
aad
les
xchg
cli
call
adc
pop
leave
cmp
nop
xchg
pusha
dec
icebp
mov
sub
xor
add
mov
dec
lds
hlt
mov
push
jmp
cwtl
clc
cld
orl
je
ds
sub
jg
jle
es
adc
ja
fdiv
decl
std
insb
sbb
es
ja
mov
stc
inc
pushf
push
cmp
aaa
sub
dec
add
test
dec
js
mov
and
pop
cmp
stos
sub
xor
inc
sbb
lods
mov
aad
mov
pop
xor
fdiv
pop
pop
dec
mov
lock
cwtl
ficoms
and
cwtl
mov
fwait
sub
or
mov
fstpt
dec
cld
outsb
dec
add
rorl
dec
or
dec
push
repnz
lret
push
scas
in
imul
jg
mov
or
repz
add
dec
rorb
sar
add
sub
addl
out
jecxz
or
cmpsb
subl
enter
out
mov
mov
pop
or
sub
add
pop
push
out
lea
or
es
xor
fbstp
cli
inc
in
add
ss
add
bound
ljmp
lds
jbe
stc
mov
inc
jo
cmp
sarl
jae
in
add
mov
add
push
mov
adc
cli
cmp
mov
jbe
icebp
dec
or
mov
shrb
call
or
push
or
je
dec
addl
js
pop
dec
push
cltd
mov
push
add
mov
sbb
mov
jmp
fsub
call
push
fbstp
icebp
xor
inc
sbb
mov
add
fs
incl
mov
pushf
test
pop
mov
lahf
popf
xlat
enter
cli
adc
movsb
cmp
add
enter
fisubl
pop
xchg
jbe
or
aaa
cld
xchg
cwtl
sti
imul
inc
add
lcall
cmp
sub
jp
mov
repnz
sbb
data16
pop
mov
int
pop
and
outsb
insb
xor
cwtl
sbb
test
push
into
pushf
dec
dec
mov
xor
lods
push
leave
int3
mov
cmp
mov
or
and
mov
mov
sub
rorl
or
or
ret
add
mov
mov
inc
mov
fimuls
adc
mov
push
or
pusha
and
out
push
mov
adc
push
cmp
inc
sub
adc
add
push
jmp
push
shll
inc
ljmp
push
dec
js
sub
sbb
sbb
cmpb
cld
scas
mov
lods
dec
sbb
cli
cmp
icebp
stos
pop
hlt
fwait
ljmp
cmp
pop
jmp
sub
pop
inc
cli
mov
pop
pushl
mov
int3
jg
in
push
dec
jecxz
mov
in
xchg
lds
add
idivb
mov
pushf
mov
stos
jmp
push
insb
add
lahf
adc
dec
mov
cs
cmp
jmp
ss
cmp
add
nop
mov
sti
call
pop
cmp
or
add
jmp
or
xor
es
bnd
xlat
decl
pop
and
fdiv
test
sub
insb
mov
xchg
inc
scas
xor
xlat
pop
sub
je
jp
and
fidivs
xchg
rcl
mov
mov
mov
ja
je
jmp
dec
jb
add
popa
repnz
mov
lahf
jb
cmc
loope
loop
jb
and
insb
jecxz
and
cmp
ds
loop
popa
xchg
mov
imul
pop
push
fsubrs
rcrb
pop
xchg
adc
in
jb
dec
or
jns
or
mov
push
stos
aad
pop
push
leave
mov
pop
mov
sub
dec
dec
cmp
shrb
sub
test
mov
xchg
cmp
xor
data16
sbb
xor
xorb
sub
out
push
std
adc
pushf
sbb
add
vsubss
aam
fst
aaa
or
test
aaa
pushf
mulb
inc
adc
icebp
das
pop
fisubrl
scas
xor
mov
aad
lods
mov
jne
jae
xchg
test
cmp
pop
and
arpl
outsb
cmp
jge
popa
dec
decl
and
sub
mov
outsl
pop
fs
inc
mov
push
jne
cwtl
mov
sbb
xchg
icebp
sub
mov
or
daa
popf
aad
add
add
std
ljmp
fdivs
ret
mov
out
xchg
mov
cs
std
sbb
xor
push
js
sbb
outsb
cmp
mov
jbe
shlb
mov
or
fdiv
sahf
ljmp
fldt
sub
je
mov
sub
fs
push
or
lahf
repnz
and
outsb
jge
sti
add
adc
fisubrs
add
les
lahf
or
lock
mov
xor
int
jmp
xchg
shlb
lds
insl
icebp
sbb
jo
mov
inc
dec
sub
notb
mov
cmp
mov
lods
out
scas
and
call
pop
aad
lock
and
sub
and
icebp
call
cmp
mov
mov
fidivs
push
dec
fisubrl
loopne
scas
popf
aas
xor
bound
leave
mov
push
ja
adc
test
imul
jno
popf
shll
xor
les
ja
xor
jg
add
fs
das
int3
ret
adc
in
decb
pushf
xchg
xchg
addl
js
inc
out
jl
inc
std
dec
xchg
fimull
lea
lret
bnd
popf
cmpsl
jo
add
jle
sbb
enter
add
je
scas
push
add
decl
jle
push
movsl
add
insb
push
or
xchg
mov
pop
outsb
lret
xchg
mov
and
or
mov
mov
mov
mov
push
in
test
sub
jbe
push
mov
adc
fstp
push
dec
dec
push
push
es
stos
nop
add
in
cmp
imul
cld
mov
pop
inc
call
scas
xchg
lods
int3
xchg
notl
ljmp
rcrb
add
jl
xchg
xor
fwait
incb
sbb
mov
rol
sub
or
mov
push
cld
pop
or
add
negl
arpl
aaa
mov
jle
sbb
stos
dec
aad
in
xchg
nop
jle
add
ljmp
and
pop
cmp
adc
call
pop
cmpsb
sub
enter
push
loopne
lea
mov
cld
pop
out
pop
mov
mov
test
cmp
and
mov
shlb
lcall
subl
push
xor
jmp
cld
or
in
pop
cmp
mov
outsl
in
push
push
rclb
mov
fistps
fwait
mov
xor
arpl
jle
add
ret
in
mov
notb
outsb
xchg
pop
pop
mov
insb
sbbl
dec
adc
push
inc
jo
cmp
ret
pop
hlt
mov
mov
leave
cli
xchg
push
std
stc
pop
mov
lret
ljmp
add
sub
lea
out
mov
ljmp
outsl
add
jae,pn
dec
xorb
pusha
repnz
ds
lods
xchg
xorb
loope
ss
and
das
insb
mov
fadds
ja
ret
mov
jl
jle
test
pop
adc
data16
ss
pop
rcl
movsb
cli
or
fcoms
jg
inc
mov
mov
fldl
scas
xchg
mov
inc
testb
xor
movsb
inc
popa
adc
adcb
ret
insl
add
ds
incl
mov
dec
rclb
and
icebp
inc
xor
ja
adc
nop
dec
jg
or
mull
lret
fidivs
loopne
bound
dec
xchg
andl
stos
sbb
or
ss
or
jle
sub
adc
push
hlt
into
mov
add
scas
mov
fbld
ss
push
add
out
mov
fbld
rol
and
xchg
and
outsl
mov
ror
aaa
and
dec
adc
hlt
cmpsb
cmc
sub
xor
movsl
loopne
push
xchg
pop
mov
xchg
dec
mov
in
orl
les
xchg
push
cli
push
mov
lret
add
sbb
scas
sub
ret
xchg
in
ljmp
jmp
mov
cmpsb
sub
into
adc
mov
adcb
lea
sbb
adc
call
mov
cld
or
fcmovu
adc
push
pop
bound
mov
xchg
jl
add
sbb
cmpsl
mov
fwait
outsb
push
lahf
inc
decl
mov
insb
cmp
scas
pop
mov
mov
adc
incl
outsb
mov
jno
sub
inc
daa
add
mov
jecxz
push
es
repnz
shll
fcomip
cmp
sub
mov
jo
sub
test
in
or
xor
gs
dec
adc
mov
push
and
lret
pop
add
aam
clc
adc
add
adc
xor
sbb
sub
fwait
mov
sti
out
and
mov
fmul
xchg
inc
fwait
push
inc
jecxz
pop
divb
pusha
jbe
repnz
test
out
sub
jns
sbb
pop
jbe
fdiv
add
lret
mov
fcomip
jb
repz
pop
sub
bound
loopne
mov
call
and
add
pop
inc
ds
cmc
push
xchg
push
lea
sub
mov
je
fisubs
je
sbb
aas
dec
test
add
loopne
nop
pop
scas
sbb
add
fcomps
lcall
in
fsubrl
mov
or
neg
or
pop
fdivs
aaa
sub
jmp
pushf
jmp
fidivs
mov
dec
xor
mov
in
in
jle
or
test
cmp
dec
inc
stos
pop
xchg
xor
mov
sub
push
shrl
xchg
cmpsl
or
push
test
inc
add
fprem1
mov
das
clc
pop
mov
dec
icebp
or
dec
sub
divb
loope
push
bound
in
cmpsl
sbb
insl
pop
cmc
ljmp
pusha
add
lahf
cmp
rcrb
xchg
cs
es
mov
cmp
ret
clc
ljmp
lock
xchg
xor
mov
scas
add
adc
std
ds
add
add
sbb
in
jp
push
out
into
lret
or
lret
mov
shl
mov
filds
mov
aam
shl
scas
outsl
mov
pop
push
str
addr16
mov
push
inc
jmp
jl,pn
movsb
cmp
rclb
and
dec
sbb
inc
outsl
add
jp
mov
jmp
out
ljmp
xorb
rol
or
push
outsb
clc
popf
jge
xchg
jbe
ljmp
cmp
mov
cli
cmp
lock
and
lock
data16
or
add
std
xchg
push
or
notb
adc
dec
outsb
adc
jne
add
mov
test
leave
sbbb
inc
fidivrl
inc
mov
in
mov
into
sbb
and
mov
push
inc
xor
cld
add
pop
test
rcr
lret
sbb
cmp
sub
lcall
cmp
sbb
push
pushf
test
and
cmp
cli
insb
arpl
in
and
pushl
jmp
and
cld
mov
xchg
add
mov
lcall
lea
imulb
insl
mov
dec
cmp
and
sarb
jecxz
jl
popa
mov
xchg
fsts
push
sbb
cmp
jmp
outsb
andl
pushf
inc
pop
or
push
pusha
xchg
loop
sbb
aam
adc
lock
test
pusha
jo
incl
pop
int3
xor
repnz
jmp
add
cmp
or
aad
dec
mov
in
inc
outsb
dec
or
push
test
jb
std
push
xor
mov
add
add
cld
fisubs
xchg
push
add
adc
fisttpl
lcall
inc
mov
pop
or
push
imul
adc
add
sub
add
int
sbb
jo
pop
mov
push
andb
sbb
push
jg
movntps
adc
mov
pop
or
xor
ljmp
mov
js
mov
pop
add
leave
movsb
cwtl
lahf
pusha
dec
jmp
into
push
ds
adc
jae
push
loopne
mov
jg
ficoms
fmull
mov
adc
xchg
push
loopne
sub
add
loop
es
pop
aam
in
jns
test
pop
mov
mov
ret
loopne
cmp
or
and
in
jl
ret
les
or
jae
mov
jbe
loop
outsb
imul
clc
add
mov
mov
ljmp
aam
pop
aas
out
repz
mov
out
mov
stos
mov
pop
cld
rcl
xchg
cmp
mov
jle
and
cs
xor
and
xchg
cs
das
add
inc
scas
add
xor
mov
jb
in
mov
add
or
pop
adc
fsubs
scas
outsl
out
adc
call
push
xchg
das
je
add
sbb
ret
std
and
push
inc
inc
push
clc
jno
or
mov
gs
mov
out
push
mov
fidivl
out
xchg
ljmp
pop
pop
xor
jmp
in
and
js
pop
cmp
push
stos
add
pushl
je
mov
push
into
sbb
inc
aas
sbb
cmpsl
add
loopne
jmp
ljmp
push
gs
rcrb
mov
das
cmp
test
scas
sbb
repnz
int3
mov
iret
rcr
push
cli
lcall
cmp
hlt
iret
push
xchg
xchg
popa
int3
icebp
in
add
das
in
call
and
push
filds
dec
lret
push
adc
jle
sub
pop
mov
and
add
xor
xchg
outsl
add
add
inc
or
lret
add
mov
nop
in
mov
cmp
out
enter
inc
add
jbe
pop
pusha
fs
jb
xorl
lcall
xchg
add
sub
cmp
imul
xor
test
xor
mov
movsl
mul
and
push
rcrl
sub
xchg
sbb
stos
mov
je
subl
lret
test
mov
stos
testb
jg
xchg
pop
mov
addb
mov
ljmp
and
cmp
sti
fiaddl
out
rcrb
icebp
xor
roll
mov
loope
mov
stos
mov
add
or
sub
and
inc
les
inc
repz
or
inc
repz
push
hlt
jmp
pop
mov
and
mov
imul
and
in
aad
push
push
mov
decl
repz
rclb
sbb
add
mov
push
fsubrs
xor
adc
lods
mov
repz
ljmp
lcall
inc
shrl
cmpsb
inc
test
in
or
bound
addr16
dec
loopne
dec
xor
out
push
sbb
add
adc
lods
loop
push
push
sbb
mov
inc
and
jns
sub
push
dec
cmove
test
les
repz
fdivrs
xor
cmp
jo
inc
inc
loope
jle
mov
pusha
ficoms
push
mov
lock
lock
and
test
push
decb
sbb
push
aaa
inc
ret
cmp
adc
fcmove
or
jge
adcl
or
push
push
dec
std
mov
or
xor
mov
fnstsw
ljmp
cmp
mov
push
das
jmp
jno
add
call
mov
xchg
dec
add
jle
cmc
push
insb
movsb
lods
xor
xorb
in
std
out
mov
fidivrl
lea
add
and
ljmp
jmp
pop
scas
fidivrl
sbb
pop
sub
mov
shrb
or
std
jg
cli
scas
leave
inc
mov
cli
mov
jbe
int3
insl
pop
mov
out
negl
sbb
sbb
adc
sub
or
mov
push
push
hlt
or
or
ljmp
mov
pusha
sub
xor
aas
jecxz
aas
push
cli
xor
addr16
add
packssdw
add
rclb
dec
cmp
fists
adc
inc
push
sub
jmp
aaa
mov
test
push
loope
les
cld
fsubr
fwait
sbb
or
gs
jp
outsl
movsb
xchg
push
fcoml
xchg
sbb
pop
inc
add
icebp
mov
mov
jle
lcall
repz
sub
xchg
hlt
into
inc
and
gs
cmp
gs
mov
cmp
js
push
repz
stos
test
je
shr
orl
and
add
jmp
sub
fbstp
lock
jb
sahf
movsb
push
cmc
cmp
xchg
sti
pop
and
jo
scas
xchg
cmp
clc
icebp
sbb
pop
dec
cmp
inc
add
or
decl
faddl
into
aaa
and
cmpl
out
inc
inc
scas
cmp
inc
scas
push
stos
pop
popf
sbb
cmpsb
mov
add
sbb
push
jo
jle
pop
cmp
mov
imul
jecxz
mov
xchg
mov
jne
jl
mov
lcall
sbb
pop
fnsave
sub
adc
lock
loopne
stos
sbb
sbb
test
mov
lret
mov
es
cs
mov
mov
loope
mov
or
test
xlat
ret
movsl
cld
push
xchg
cmp
stos
pop
mov
jg
push
push
add
push
repnz
in
ds
jg
push
and
sub
mov
sub
push
add
xchg
inc
jb
outsl
mov
or
test
pop
cltd
jno
lea
xchg
nop
xchg
loopne
cmc
pop
ret
sub
add
sub
cmpsb
push
loopne
mov
lods
mov
jnp
lock
sbb
push
aad
lea
sub
je
test
fidivrs
inc
sbb
sti
xor
test
pop
cmp
arpl
stos
fidivs
sbb
lock
cld
pop
aam
add
cmpsb
enter
loope
push
mov
fcomip
mov
or
pop
in
mov
mov
ljmp
jg
filds
pop
hlt
xlat
out
xlat
sub
adc
pop
mov
lret
test
sahf
enter
ss
cli
dec
dec
stos
push
movsb
in
jmp
aam
xchg
jne
and
das
mov
xorb
sbb
int
xchg
mov
and
insl
pop
push
dec
jae
cmp
pop
and
loop
andb
mov
jg
mov
loopne
add
mov
loop
pop
add
or
ljmp
cmpsb
shl
add
nop
xchg
sbb
mov
sub
in
clc
scas
clc
pushl
cmp
mov
repnz
mov
fsubrl
inc
jp
add
in
out
push
and
add
jg
cmp
and
das
arpl
mov
in
cmp
ror
mov
push
jl
xor
mov
bound
pusha
xlat
jg
xor
out
add
gs
lock
or
or
aaa
jge
xchg
pushf
pop
sti
sub
sbb
fidivrl
push
xlat
repz
stos
aaa
push
je
pop
and
mov
sbb
add
add
bound
cmp
sub
cmpb
negb
or
dec
into
dec
dec
ljmp
icebp
push
icebp
lds
enter
adc
xor
and
les
hlt
out
sar
fldcw
inc
sub
and
mov
push
adc
fimuls
inc
mov
xor
xchg
pop
pop
inc
loope
sahf
dec
mov
in
fisubl
rolb
cs
dec
notl
jno,pt
repnz
fwait
pop
mov
fdivrp
arpl
adc
pushf
mov
pop
mov
lcall
fstps
push
iret
push
xchg
add
insb
loopne
notl
repnz
mov
or
mov
sbb
pushf
movsl
cmpsb
movsl
lcall
int3
xor
scas
pop
fmul
adc
es
pop
ds
jp
cli
pop
clc
xchg
sbb
adc
pop
mov
mov
jo
mov
mov
scas
push
out
mov
insb
leave
subb
mov
dec
js
jl
mov
cmp
jbe
lret
add
pavgw
testb
mov
pusha
xchg
ret
xor
and
mov
les
inc
aam
cmpl
lock
mov
and
gs
dec
sbb
add
fwait
pop
mov
cmp
ficoml
repnz
cmp
xchg
sti
fldl
push
mov
mov
cmpsb
int3
or
cli
push
xchg
mov
fcoms
push
add
outsl
adc
cmp
andl
lods
insb
mov
sbb
shlb
aam
lcall
mov
rorl
inc
cld
test
movsb
mov
fs
xlat
ss
fcomip
stos
mov
push
ja
adc
sbb
loopne
push
out
add
push
addb
mov
shl
sub
iret
push
sub
xor
int3
lahf
pop
notb
movsb
outsb
adc
mov
dec
jecxz
xor
or
loopne
stos
hlt
stos
jo
inc
loope
jno
out
add
addb
jmp
push
fidivl
clc
test
shlb
add
cwtl
test
jge
insb
inc
dec
shll
push
outsl
arpl
pop
repz
in
add
dec
notb
loop
bound
dec
ja
cli
out
dec
leave
dec
shlb
pop
or
fimull
movsl
clc
ss
lahf
add
pop
add
xchg
adc
ret
mov
fcmovnbe
das
sbb
in
in
add
jo
lret
jno
ljmp
ljmp
dec
decl
stos
jp
push
sbb
notl
xchg
add
insl
jmp
mov
jp
push
mov
add
dec
or
fisttps
inc
fcoml
and
pop
push
fsubs
pushf
or
adc
and
scas
mov
out
jae
mov
xor
dec
mov
inc
add
loopne
mov
mov
mov
test
mov
ss
jg
push
std
jb
mov
gs
bsr
lds
dec
inc
loop
sbb
add
jg
fiadds
dec
aas
out
push
mov
inc
and
sahf
or
arpl
or
pop
dec
out
mov
push
mov
push
mov
xchg
out
lret
inc
mov
leave
push
push
test
sbb
mov
or
xchg
andb
shll
rclb
cltd
decb
imul
dec
xchg
stc
add
xor
cmc
lcall
bound
mov
pop
hlt
jg
mov
jmp
pop
aam
iret
add
jp
pop
ret
add
mov
jl
inc
push
or
mov
pop
clc
adc
stos
adc
push
ss
addl
jae
dec
mov
inc
add
icebp
das
adc
lea
and
outsl
pop
aaa
sar
call
adc
or
xchg
sub
cs
ds
push
sub
jo
ja
jl
jae
adc
stc
movsb
xchg
hlt
fistpll
addr16
lock
or
mov
pushl
fsubrs
clc
fbld
rcrl
mov
or
rcl
and
pusha
js
outsb
and
push
pop
cmp
mov
loopne
mov
aam
sbb
decl
pop
mov
mov
dec
enter
addl
insb
inc
shrb
xchg
cmpb
sti
int3
shrb
mov
lret
and
fs
scas
push
or
ss
clc
jae
pop
popa
scas
insl
xor
pop
out
rclb
icebp
jge
nop
mov
insl
sub
or
push
movsb
test
fwait
xor
mov
cmp
mov
sub
lds
push
adc
or
imul
add
cs
imul
lea
fidivl
xor
in
cli
call
cmp
and
inc
inc
out
or
out
cli
ja
testb
dec
clc
push
leave
lret
jbe
enter
inc
jo
jns
mov
pop
stos
sub
sbb
sbb
psubsb
es
cmpsb
incl
cmpsb
es
inc
push
dec
xchg
in
inc
cmp
dec
movsl
push
ljmp
mov
mul
mov
daa
and
jl
xor
mov
pop
sahf
jbe
mov
mov
cmp
std
sub
movsb
or
les
mov
sub
fmull
xor
daa
orb
inc
push
dec
add
dec
inc
mul
push
push
insb
add
push
mov
fdiv
or
fldl
cmpsl
and
jbe
mov
sahf
mov
ljmp
and
sbb
stos
fld
mov
aam
jl
mov
mov
jg,pt
mov
xchg
fbld
popf
mov
xor
push
dec
outsl
inc
cmp
sbb
out
or
push
sbb
jl
ret
test
lock
push
fnstcw
dec
jbe
sbb
or
sub
in
shll
fdivs
pop
or
ds
hlt
mov
jo
daa
call
js
aaa
mov
jp
movsb
rorl
xorb
sbb
adc
orb
fcoml
push
add
fsubrs
cmp
in
or
mov
mov
dec
cmp
mov
outsb
sub
fildll
sub
mov
loope
fcoms
jno
clc
jo
incl
rcrb
xor
cwtl
aas
cmp
lcall
cmp
jg
mov
hlt
sar
ljmp
cmp
hlt
xor
mov
or
nop
or
cld
outsl
xor
inc
xchg
dec
sub
push
aas
push
cs
or
jb
cmpsb
je
cmp
xor
in
int
hlt
aas
nop
je
push
mov
dec
in
adc
and
cld
movsb
pop
insb
mov
lcall
enter
sub
push
add
icebp
jp
jnp
fcomip
push
sarb
dec
sbb
outsb
cmp
lock
and
push
fdivl
and
add
dec
jg
ss
rorl
push
and
popf
lahf
mov
decl
sbbl
pop
sbb
cmp
pop
pop
int3
add
inc
push
and
push
or
sbb
add
dec
inc
loop
out
pushl
add
jecxz
pop
add
pusha
data16
orl
pushl
cmp
add
movb
in
jp
stc
mov
lcall
in
or
and
xchg
jne
js,pn
push
sbb
enter
stos
xor
add
lock
aad
mov
cmp
push
inc
adc
adc
shlb
mov
mov
and
negl
cli
sub
xor
mov
push
push
push
insb
mov
or
jle
bound
and
pop
dec
sub
xchg
xor
outsl
mov
ret
adc
pop
inc
in
out
add
push
mov
mov
add
cmp
rcr
repz
int
push
sub
bound
out
mov
mov
fs
inc
fildll
daa
fbstp
pop
add
sbb
pop
dec
adc
loope
dec
jbe
add
dec
mov
push
scas
cli
and
jecxz
sbb
in
pop
jne
mov
sbb
aam
dec
rclb
jl
xchg
inc
scas
sbb
je
pusha
stos
leave
hlt
mov
test
push
repz
ljmp
xor
aad
in
ficoml
push
pushf
in
push
out
adc
push
ljmp
mov
add
call
ds
lcall
sub
mov
aas
dec
lret
movsb
popw
and
xlat
inc
pop
outsl
shlb
in
xchg
jo
cmpl
mov
or
popa
adc
mov
xchg
cmp
mov
cli
add
cld
jg
adc
push
movsl
jo
cmp
xor
rol
adc
pushf
xor
push
xorb
or
es
rcl
insl
arpl
add
mov
add
jb
clc
mov
aaa
lcall
pop
sub
jne
add
jmp
lcall
loopne
add
imul
push
fwait
cltd
xor
xor
stos
add
cmpsb
loopne
incl
dec
jp
fidivrs
je
loopne
mov
and
test
fdivrs
push
fadds
imul
stc
std
and
jge
orl
or
adc
es
mov
push
and
xor
mov
adc
or
rorl
cmp
outsl
or
shll
mov
in
and
insl
and
dec
clc
mov
sbbb
test
dec
dec
or
mov
imul
inc
push
cmp
adc
leave
xchg
adc
nop
dec
push
xor
cld
es
fistps
les
ret
pop
enter
ljmp
and
mov
push
cmpsl
adc
and
das
shrb
push
mov
sbb
jp
mov
mov
xor
cli
jg
cmp
inc
cmp
add
ja
dec
push
push
jb
mov
lea
incl
faddl
sub
jl
out
or
aam
loopne
add
jmp
out
inc
popa
inc
addb
test
add
jne
lds
adc
call
mov
sbb
out
mov
aas
mov
fiadds
and
stos
adc
mov
sti
xor
xchg
cmp
loopne
xor
ljmp
sbb
push
sbb
mov
rcll
dec
dec
pop
cld
mov
add
jecxz
push
dec
dec
cltd
add
sub
fadds
sbb
loopne
cmp
pop
lock
fistps
and
push
push
push
cs
mov
mov
mov
js
and
mov
imul
je
cmp
adc
lock
mov
mov
shll
xchg
or
adc
push
insl
adc
rorb
dec
and
scas
incl
xchg
push
xchg
pushl
add
sub
lahf
xchg
dec
sub
add
jbe
jmp
add
push
fcomps
fdivs
sbb
mov
outsb
out
add
cmp
push
popl
inc
lahf
cli
xor
push
cld
dec
loop
outsb
push
add
dec
push
push
pop
popf
out
cltd
push
and
xor
iret
add
inc
dec
add
sub
iret
cli
pop
or
push
in
clc
add
orl
in
cmp
or
cmp
call
add
fwait
inc
ljmp
lock
push
outsb
fwait
popa
push
mov
outsl
stos
clc
add
pop
in
mov
cltd
cmpsb
cmpl
aaa
xchg
xor
or
es
pop
push
jbe
das
push
adc
adc
pop
nop
fdiv
fmuls
push
add
dec
scas
jb
out
std
push
dec
inc
imul
pop
xor
mov
and
xor
jp
bound
pop
sub
scas
mov
or
and
dec
pop
mov
push
rorb
jb
ficoml
sub
or
insb
es
push
out
mov
inc
mov
movsb
test
or
add
clc
inc
insb
jno
test
xor
adc
cmp
or
out
clc
fidivrs
sahf
out
fwait
ljmp
pop
mov
adc
add
pusha
xchg
ret
pushl
adc
sub
sub
fiaddl
lahf
aas
es
inc
cmpl
push
xor
add
sub
push
sbb
mov
mov
in
mov
dec
sub
mov
out
js
mov
in
scas
daa
mov
in
test
push
push
mov
js
lahf
insl
mov
push
or
movl
shl
shl
pushf
mov
jp
fildll
adc
js
sub
into
add
pop
add
lret
aad
mov
cmpsb
adc
add
push
add
cmpb
outsb
pop
mov
xor
push
push
rol
test
jl
xor
loop
xor
movsb
in
inc
mov
iret
and
int3
adc
dec
push
mov
movsb
sub
pusha
add
fildll
addb
dec
pop
jg
mov
loopne
inc
push
push
pusha
jmp
out
push
inc
xchg
mov
add
mov
jl
add
outsl
pop
xorb
dec
sub
lods
pop
add
fdivrl
bound
loope
lock
add
rolb
incl
hlt
dec
sbb
xor
cmp
or
mov
mov
xchg
test
std
mov
xor
adc
pop
fadds
or
xor
add
fbld
lock
fmuls
orb
out
icebp
adc
lret
push
xchg
jle
fimull
sbb
cli
aaa
pop
or
inc
mov
xchg
jbe
sub
add
in
sub
scas
fs
test
lahf
ss
filds
movsl
mov
cmp
lahf
in
mov
jp
adc
lods
incl
push
movb
sub
pop
out
ret
fisttps
notl
xlat
inc
je
imul
inc
shrb
xor
mov
add
ret
jmp
hlt
cmp
mov
pop
inc
cmp
lock
fbld
out
mov
push
daa
lret
mov
dec
fisubrl
sbb
insl
dec
pusha
jp
xor
ds
lock
test
mul
add
mov
mov
pop
into
adc
jbe
xchg
add
add
dec
sub
imulb
pop
incl
mov
pop
xor
push
inc
pop
jae
ljmp
lcall
add
xchg
add
movsb
xor
loop
xor
mov
sbb
mov
sub
add
pusha
jb
mov
adc
ja
pop
cmp
fcmovnb
adc
xchg
and
add
or
subb
push
fsubrs
shlb
cmpxchg
ljmp
dec
add
cmp
out
stc
push
add
rorb
icebp
orl
stos
sarb
add
adcb
cmp
test
std
or
aaa
rcr
insl
mov
sub
orb
cwtl
test
bound
ds
mov
cmpl
and
in
jne
lods
push
inc
or
lcall
sbb
mov
inc
cs
pusha
jge
lcall
adc
pop
pusha
subb
mov
arpl
add
aaa
loopne
push
dec
cmp
sbb
mov
push
jmp
lahf
xchg
inc
movsb
imul
sbb
or
incl
pushf
dec
hlt
fidivl
dec
repnz
out
mov
int3
xchg
hlt
add
cmp
pop
push
dec
mov
adc
stc
push
fs
enter
or
mov
pop
add
mov
aas
push
cwtl
test
add
adc
push
mov
loopne
push
filds
jl
mov
fstps
sub
hlt
pop
fmull
pop
fs
aam
or
rol
inc
aaa
lods
incl
mov
sarb
mov
sbb
loope
fcmovnbe
push
push
aam
fs
shrb
idiv
ja
mov
push
outsl
repz
lods
add
push
sub
pop
add
push
lcall
mov
xor
xor
cmp
mov
inc
mov
sahf
enter
mov
jmpw
aam
mov
push
push
jb
xchg
sbb
hlt
push
out
add
in
sub
call
jl
xor
lcall
pop
or
imul
pop
test
jno
hlt
fwait
cmpsl
aas
or
aad
or
movsb
jle
pushf
scas
cmp
adc
adc
sarl
js
mov
pusha
repnz
jmp
dec
push
test
jecxz
inc
xchg
mov
ljmp
pop
insl
fcompl
xchg
jmp
mov
hlt
jae
sbb
mov
pusha
inc
stos
and
or
out
mov
cmp
xchg
dec
add
pop
insb
xor
adcl
jo
jae
addr16
sub
sbb
and
mov
lahf
rcrl
inc
flds
cmp
dec
lcall
cmpsl
jle
orl
sub
enter
inc
dec
cld
sbb
cmpsb
sbbb
cmpb
xchg
int3
stos
mov
or
fidivrs
mov
xor
ret
inc
addr16
js
xchg
mov
sub
mov
xchg
add
mov
sbb
mov
lods
mov
adc
pushl
inc
push
cmp
loope
call
call
icebp
call
shll
push
das
push
xor
fsubs
jo
push
xchg
decb
clc
mov
sub
or
xor
leave
sbb
sub
je
adc
sub
inc
mov
je
scas
or
add
in
xorb
jle
mov
movsb
xchg
cs
inc
jecxz
cmpsl
jo
adc
mov
into
pop
fiadds
add
insb
js
lods
fmull
jl
mov
mov
std
xor
mov
dec
call
pop
fcmovb
dec
add
mov
jp
push
push
cli
pushf
pop
call
add
add
pop
add
jle
insl
mov
jp
jg
or
cmp
add
cs
pop
and
in
sub
dec
jp
jmp
repnz
loope
push
jp
jbe
push
fisttpl
lea
lcall
ss
cmp
std
sub
or
push
xchg
lock
xlat
pop
pop
inc
outsl
mov
jmp
pop
and
mov
push
mov
out
xor
sarb
sbb
idivb
inc
enter
push
sub
push
cmp
xor
adcb
adc
bound
orl
jo
push
dec
fistpl
inc
xor
sub
orl
add
pusha
movsl
pusha
cwtl
push
daa
mov
in
aas
jo
pop
mov
ror
inc
ret
adc
loopne
xor
sbb
dec
sub
sub
scas
adc
addb
pop
aam
aas
in
clc
xchg
xor
sbbb
sub
jno
push
xor
jl
std
outsl
xor
repz
adc
test
cmpsl
lret
or
mov
das
xor
cld
xchg
je
sbb
add
stos
jmp
inc
stos
scas
popf
pop
fdivs
decl
mov
add
cld
decl
sub
pushw
ds
mov
xchg
fstpt
hlt
adc
push
test
and
in
aad
push
std
icebp
fwait
out
mov
rcrl
push
scas
add
scas
out
push
lret
incb
pop
cmp
mov
cwtl
mov
adc
add
push
pop
mov
push
push
aad
sti
mov
push
jbe
movsl
jns
dec
sub
jle
fbstp
push
in
adc
addr16
leave
add
xchg
sub
xchg
cmpb
mov
call
sbb
sub
dec
or
pusha
add
mov
mov
sub
jp
or
lds
pop
ret
fmulp
test
mov
sbb
mov
out
ds
mov
mov
std
cmp
mov
loopne
dec
cwtl
mov
loopne
and
add
aas
sbb
cld
inc
pushw
test
loopne
dec
addb
sub
mov
mov
mov
popf
pushf
inc
mov
and
inc
inc
jno
cmp
mov
xor
jo
lret
and
lcall
mov
std
lds
daa
imul
lock
fwait
and
arpl
pop
std
and
fmuls
lock
push
jae
pop
adc
sub
mov
cltd
clc
adc
dec
dec
cli
lea
cmp
lods
bound
inc
jge
xchg
mov
out
dec
add
pop
mov
fidivl
cmovs
mov
sub
add
mov
add
leave
mov
pushf
and
leave
inc
sub
add
inc
out
cmpsl
dec
stos
cli
idivb
add
xor
and
or
insb
push
rol
ljmp
inc
fidivl
fs
add
mov
mov
ret
inc
add
ss
cmpsl
enter
js
dec
xor
lods
fisubrl
mov
or
loop
push
cld
mov
in
jmp
adc
jnp
mov
scas
mov
push
push
sub
lcall
cmp
mulps
imul
jp
dec
xor
shlb
mov
dec
xor
adc
sub
outsb
fbld
sbb
add
adc
jg
mov
mov
int3
jns
push
sahf
mov
inc
xchg
clc
dec
into
dec
aas
js
scas
inc
lret
add
idivb
add
jl
mov
lcall
pop
testb
ja
mov
and
pusha
je
sbb
clc
add
insb
add
adc
xor
ja
into
sub
xor
call
insl
xorb
pusha
je
pop
in
notl
enter
xchg
mov
mov
mov
bound
dec
rcr
gs
popl
sti
push
xor
icebp
push
sub
enter
cmp
cmp
adc
lods
fcomps
icebp
decl
push
inc
clc
pushf
in
mov
adc
rorb
add
test
lahf
and
fbstp
sbb
mov
add
push
jo,pn
mov
push
cmpsl
mov
rcll
mov
adc
lods
icebp
adc
fisubs
and
subb
add
add
adc
or
in
jne
pop
loope
add
aad
dec
dec
add
mov
add
test
xor
or
and
cmp
in
stos
or
cmp
cs
add
lods
jno
mov
loop
cld
or
or
xorl
incl
xchg
mov
adcb
jmp
ret
dec
dec
xchg
push
adc
pop
clc
or
push
clc
cmp
adc
lret
push
mov
mov
sbbb
cmp
push
pop
mov
in
jmp
jo
outsb
jecxz
cli
incl
je
cs
or
pop
mov
sbb
mov
pop
xor
adc
push
sahf
mov
mov
jg
pop
pusha
insl
sti
add
ret
xor
add
mov
mov
outsb
aas
in
adc
mov
lock
std
aaa
call
ret
mov
into
mov
daa
xchg
movsl
mov
mov
sbb
pop
inc
ljmp
pop
es
lret
dec
add
and
cld
inc
dec
arpl
mov
adc
or
in
adc
shll
arpl
mov
add
mov
test
jmp
pop
call
leave
lock
mov
jle
push
lret
push
cld
iret
ljmp
pop
lahf
mov
add
fwait
mov
aaa
or
out
or
lahf
jg
cs
mov
mov
push
mov
push
add
sahf
int3
dec
enter
pop
pop
ja
je
dec
dec
and
decl
out
jb
sub
dec
pop
add
adc
sbbb
sbb
jg
push
mov
orb
je
repnz
jo
in
shl
ret
mov
into
inc
mov
cmc
inc
xor
aad
adc
or
cmp
inc
mov
pop
int
xlat
outsl
aaa
mov
jb
pop
cmp
mov
inc
inc
cs
incb
cmc
or
dec
cli
ret
sbb
push
mov
lret
subb
pop
jno
add
adc
cmp
loope
cs
push
loopne
inc
shlb
cltd
jb
add
push
mov
loop
xlat
pusha
inc
push
pop
jmp
push
add
and
scas
rclb
nop
add
adc
jbe
cwtl
cli
mov
cwtl
xchg
sub
rcrb
in
lea
pop
and
pop
push
call
mov
in
data16
jo
sbb
sbb
inc
call
aam
ljmp
xor
cmp
pop
xchg
shr
add
mov
sub
fstp
clc
lahf
dec
clc
adc
push
fdivrs
sbb
mov
arpl
and
jl
out
jae
inc
orl
jg
das
pop
outsl
lds
xor
insb
scas
xchg
cs
sbb
je
sub
push
out
outsl
pop
ret
std
sarw
popa
movsl
icebp
fcompl
pushl
xchg
mov
enter
mov
sbb
or
adc
clc
cmp
xchg
add
dec
insl
jle
roll
mov
cmp
sub
mov
sti
js
xchg
push
aas
sbb
xor
aad
enter
ret
pop
test
ds
in
cmc
popf
leave
je
jge
and
and
js
rcll
xchg
outsl
std
inc
push
xchg
scas
int3
out
cmpsb
sbb
xorl
xchg
push
and
loopne
gs
jg
adc
push
xor
adc
fwait
cli
cmpl
ljmp
mov
frstor
add
aaa
int
mov
stos
lds
mov
cmc
xchg
pop
je
add
push
jl
dec
jne
adc
sbb
popa
cmp
imul
adc
stos
sub
pushf
mov
sub
in
arpl
jecxz
mov
add
insb
xchg
lcall
sbb
push
sub
es
mov
inc
push
push
cld
inc
add
xor
sbb
xor
fisubrs
stos
hlt
das
add
xlat
inc
mov
scas
push
popa
mov
mov
dec
cmpsb
xchg
inc
push
inc
pop
inc
cmp
insl
xchg
pop
xor
in
jg
ret
jae
xor
ja
inc
enter
in
and
cmp
fisubrs
or
dec
inc
notb
add
mov
inc
pop
add
lret
mov
jg
lea
lods
mov
sbb
and
xor
xor
jmp
mov
inc
pop
mov
dec
fbstp
sar
lea
push
sub
sbb
js
or
sti
adc
ljmp
inc
out
mov
fstps
insb
js
rcrb
pop
test
shrb
xor
xor
xchg
in
inc
mov
and
cmpsl
mov
pop
das
mov
sub
jmp
cmc
loop
and
add
pop
add
add
fcomip
sbb
push
sbb
out
cmp
js
mov
sbb
lret
cmp
fbld
mov
gs
subb
sbb
mov
xor
les
add
movb
ja
jmp
mov
fisttpl
ja
adc
out
or
or
sub
xor
mulb
dec
push
fs
or
lock
rclb
imul
xchg
sbb
fists
pop
dec
push
mov
mov
xchg
shl
mov
and
mov
pop
mov
dec
pop
push
les
push
aad
cmpsl
cmp
mov
je
adc
mov
loopne
sub
pop
push
fs
pop
in
add
mov
inc
mov
xchg
shll
and
dec
pop
loope
mov
adc
xor
cmp
add
test
lods
mov
lret
stos
add
and
mov
cmp
mov
inc
sub
jecxz
mov
or
mov
out
adc
mov
add
jg
stos
cmpsb
clc
sub
not
jne
xor
push
mov
mov
rorl
aaa
xchg
jg
aad
bound
mov
ficoms
inc
adc
loopne
dec
sbb
jo
sub
adc
inc
stos
fsqrt
mov
sahf
sahf
stos
push
inc
push
subb
push
xor
popf
clc
jo
push
dec
inc
fs
fisubl
je
pop
pop
add
ret
mov
adc
in
mov
sbb
nop
inc
sbb
dec
mov
clc
jecxz
adc
ret
mov
and
movsl
insb
cmp
mov
jae
iret
lret
push
cmp
mov
mov
sahf
jp
pop
fidivrs
popa
mov
dec
cld
sub
int3
xchg
cld
push
jo
rcrb
cmp
or
xchg
std
mov
les
lds
dec
sti
lar
cmc
fistpl
lahf
ds
mov
sti
andb
add
and
ret
fwait
mov
inc
pop
das
xchg
sarl
mov
mov
loop
add
dec
sbb
jns
push
nop
ret
pop
dec
lods
mov
xor
or
lods
mov
sub
jne
sub
jle
addr16
cmp
jb
or
jbe
pop
xchg
ret
cmp
push
sub
xchg
mov
jge
push
cmp
adc
mov
mov
in
imul
lock
fsts
xchg
xchg
mov
pop
add
mov
sahf
mov
cmpsb
imul
int3
scas
push
inc
xchg
dec
pop
add
adc
mov
adc
lcall
xchg
lea
outsb
mov
enter
mov
add
rcr
cltd
arpl
push
mov
sub
into
jmp
loop
popa
add
leave
ret
das
addb
bound
shlb
ja
pop
add
cmp
inc
jo
jecxz
xor
dec
dec
ret
add
and
or
dec
cmp
mov
mov
mov
inc
leave
push
xchg
icebp
imul
inc
dec
mov
mov
out
mov
shll
leave
jo
sbb
cmp
add
push
in
pop
mov
mov
add
pop
out
dec
xchg
cmp
popa
xor
jecxz
ljmp
mov
inc
add
sbb
or
and
insb
std
call
frstor
adc
incl
pop
jge
add
add
std
decl
or
xchg
add
or
mov
xchg
adc
add
pop
push
jge
xorb
mov
xlat
inc
add
clc
dec
aam
stos
inc
xchg
pop
adc
pusha
sub
sbb
push
cmc
ljmp
add
mov
fildl
mov
push
into
ss
pop
and
aam
adc
fistps
stos
repnz
icebp
or
dec
xlat
hlt
mov
clc
rorb
push
cld
push
cwtl
adc
push
test
std
insb
or
mov
or
stos
pop
sbbb
mov
and
cltd
sarb
lock
ljmp
jp
dec
mov
push
jp
sbb
mov
mov
popa
push
iret
jl
icebp
mov
aam
pop
dec
idivb
mov
scas
sub
rclb
and
ja
shll
mov
rol
jg
sbb
push
fbstp
lret
ljmp
rolb
mov
imul
int
inc
cmp
es
push
movsb
adc
dec
data16
xchg
xchg
push
adc
sub
arpl
jmp
insl
mov
dec
add
bound
cmp
test
jnp
cs
lahf
test
in
xor
fistps
push
xlat
sub
dec
sbb
rcr
mov
mov
movb
stos
lods
dec
and
decb
fcmove
mov
cmp
and
adc
push
cld
incl
mov
xchg
mov
mov
add
test
adc
push
pop
loope
fadd
dec
adc
adc
repz
les
fstps
fcomps
add
push
ja
cmc
cltd
das
xchg
ljmp
mov
loopne
aad
pop
cli
push
mov
aaa
jecxz
dec
sbb
xorl
shlb
inc
sub
lret
inc
sub
roll
rcrl
sub
jge
ljmp
push
arpl
dec
mov
sub
mov
cmc
loop
push
ds
fists
cmc
xor
pop
cmp
ret
ljmp
inc
adc
mov
pop
out
cmp
enter
cmp
shlb
mov
dec
sub
mov
and
idiv
push
mov
push
adc
in
ds
adc
in
or
lret
nop
mov
scas
mov
sub
cmp
sub
adc
aaa
faddl
jnp
mov
push
sahf
adc
mov
rol
cmpsb
imul
or
rorl
outsb
lcall
fs
adc
sbb
aad
stc
pop
faddl
push
subb
adc
jp
push
mov
push
and
ja
imul
out
adc
dec
je
pushf
mov
sub
inc
loopne
cmc
adc
inc
clc
fwait
sub
sbb
ljmp
loopne
lods
push
sub
mov
adc
ja
mov
test
test
lock
push
push
popa
ljmp
pusha
fmuls
push
jecxz
pop
add
mov
pop
pop
xchg
mov
ja
xor
mov
clc
xlat
fildll
mov
popa
fstpl
mov
jmp
or
jns
sub
lret
clc
aas
adc
pop
or
sarl
movsl
loop
xchg
adcb
cmc
fcmovnb
mov
test
add
xlat
in
js
mov
test
and
outsb
mov
loope
sbb
scas
mov
add
sbb
loop
repz
pop
cmp
fs
decb
mov
out
aam
call
test
decl
in
enter
add
mov
test
mov
or
add
lcall
cmpsl
mov
or
arpl
push
mov
mov
xor
push
into
xchg
add
push
lods
sub
jne
jg
and
xchg
mov
bound
test
mov
mov
adc
cwtl
mov
rolb
test
mov
inc
xchg
jno
push
xchg
cmp
mov
nop
les
and
out
mov
sub
stos
bound
push
sub
test
xchg
mov
mov
or
push
adc
mov
push
mov
mov
pop
add
rorb
jbe
xchg
rcl
rcl
mov
aaa
sbb
add
sub
in
cmp
mov
nop
jmp
inc
cmp
in
stos
aam
ret
mov
add
mov
out
adc
bound
cmp
add
es
imul
int
out
cmp
xor
fdivr
popl
cs
jmp
stc
sbb
lret
adc
add
cmpsl
jo
xor
ljmp
out
and
mov
mov
int3
popf
out
cmpl
jb
inc
pop
test
cmp
mov
les
sbb
pushl
cmp
push
sahf
add
push
or
sbb
movsl
mov
les
push
movsb
pop
push
clc
pop
push
inc
pop
jl
adc
dec
xchg
mov
pop
lock
mov
daa
dec
pop
out
iret
inc
fldenv
fsub
and
xor
push
cmp
mov
jge
dec
or
sahf
in
mov
icebp
add
dec
pop
cmpsb
rcl
mov
pop
push
jecxz
mov
sub
test
add
adc
loop
sub
adc
xlat
les
lock
inc
mov
mov
scas
cmc
rcl
sub
cmp
pusha
add
add
cmp
ret
pusha
xor
jge
enter
sbb
ret
or
add
cmp
loop
xor
out
push
xor
inc
inc
jmp
repz
add
push
icebp
pop
and
dec
sbb
push
sub
mov
xor
fwait
cmp
repz
jnp
lods
push
lods
je
mov
add
jp
test
dec
and
adc
push
lret
mov
fmull
cmp
add
scas
andb
jmp
test
cmp
ljmp
aam
sub
decb
iret
loope
mov
decb
imul
or
lds
sbb
push
jmp
jbe
cmpsl
imul
scas
jb
addr16
lock
lahf
cmp
pop
adc
pop
test
divb
dec
lret
mov
push
or
ljmp
cld
arpl
and
jge
out
and
mov
mov
rorb
jo
push
push
jmp
outsb
xchg
fwait
mov
outsl
rolb
les
dec
add
inc
loope
jp
push
in
jno
push
imul
xchg
aam
xchg
out
shrb
hlt
incl
pop
xchg
dec
jb
rcrb
out
push
outsb
adc
sarb
outsl
xor
mov
dec
push
and
out
mov
orl
stc
inc
sbb
mov
adc
ss
iret
add
loopne
lds
xchg
jecxz
pop
mov
or
cmp
jmp
mov
jns
cld
das
mov
cmp
add
cwtl
out
add
lea
dec
faddl
push
dec
fcmovnu
pop
fnstsw
inc
lea
push
mov
fistps
jno
lea
int3
mov
in
add
adc
xchg
cs
les
push
cli
or
dec
rolb
adc
out
inc
les
adc
cmp
inc
jne
loopne
dec
dec
orb
cmpsb
mov
in
push
fnsave
push
mov
hlt
out
in
mov
push
push
call
mov
fiaddl
rorl
xchg
rol
call
fisttpll
mov
sub
jl
inc
sti
mov
xor
lcall
clc
inc
in
push
cmp
cmp
sub
loope
add
push
push
out
mov
test
adc
pop
or
mov
jge
movsb
pop
cmpsl
ret
insb
lock
pop
test
push
mov
pop
out
es
jle
ja
add
sahf
out
mov
inc
ret
add
add
adcb
jo
loope
arpl
sub
ljmp
cmp
dec
sbb
mov
cmp
shrb
sub
inc
inc
into
cmpsb
nop
push
insl
sub
pop
ds
fstp
xor
sbbl
or
pop
cmp
xor
loopne
mov
js
rol
movsb
out
jnp
push
movzbl
les
mov
adc
testb
andb
or
fcmovne
ljmp
dec
mov
sub
mov
mov
scas
test
pop
push
xchg
pop
pushf
dec
enter
xor
ds
cli
data16
push
xchg
and
test
sbb
xchg
cmpsb
adc
test
sar
ljmp
clc
xor
push
imul
clc
mov
and
and
push
or
js
cmpsb
push
mov
xor
jo
cmp
outsl
cmpsb
ficomps
les
add
add
sarb
ds
bound
xor
dec
loop
fidivl
call
add
pop
pop
pushf
adc
sarl
inc
mov
push
inc
jnp
cmp
test
mov
scas
test
stos
repz
incb
sbb
cltd
jne
fistpl
jmp
jmp
js
jge
xchg
push
or
dec
fcoml
clc
mov
cli
js
stos
int
pop
lcallw
data16
repz
adc
scas
inc
bound
mov
dec
scas
adc
pop
adc
mov
pop
cmp
inc
mov
leave
pop
or
cli
decl
jle
movsb
rep
dec
dec
in
mov
sbb
lcall
fdivr
sbb
popf
xlat
imul
mov
insl
stos
push
jmp
repnz
or
hlt
loop
add
jo
xor
dec
mov
int3
mov
repz
leave
loop
push
sbb
xchg
push
xchg
loopne
subb
rcrb
bound
out
fbld
and
mov
cld
orps
dec
xor
ret
cmp
mov
rcrb
sbb
xor
nop
add
in
or
mov
cmp
test
inc
dec
mov
pop
test
mov
or
orl
lock
ljmp
scas
mov
mov
adc
fdivl
call
push
or
or
push
in
or
push
mul
fsub
decb
cs
xchg
fdivs
pop
xor
jb
jmp
cltd
xor
fimuls
and
outsb
mov
imul
cmp
les
cmpsb
mov
add
sub
sbb
stos
cmp
cmp
jae
outsb
or
push
fs
mov
xor
pop
pop
cmc
fbld
xlat
cmp
inc
sbb
xor
aad
imul
mov
inc
push
arpl
add
mov
xchg
in
push
lcall
add
cmp
fdivr
subl
jb
ss
pinsrw
xor
hlt
jo
push
or
loopne
push
sub
cmp
movsb
std
mov
lea
loop
or
pop
adc
mov
jno
xor
xchg
dec
jmp
sbb
sbb
loopne
loopne
std
scas
sbb
mov
mov
xor
test
hlt
xchg
js
jge
xchg
xchg
jl
inc
nop
jmp
and
add
or
cmpb
fs
test
dec
aad
jbe
sub
or
mov
xchg
push
jle
loope
inc
cwtl
ds
lods
mov
test
pop
pusha
arpl
or
in
jno
cmp
lret
movsb
mov
mov
movsb
loopne
or
std
dec
jmp
and
mov
cmpl
call
jmp
test
adc
aam
outsl
movsb
fdiv
add
test
jmp
call
push
pop
mov
scas
call
push
insl
jno
dec
sbb
add
sub
jp
fst
pop
push
fisttps
xor
incl
mov
pushf
xlat
lock
sub
loop
push
scas
push
xchg
adc
inc
imul
jb
inc
mov
das
and
loope
les
sbb
mov
add
jp
shrb
insl
mov
scas
call
dec
loope
ss
in
cltd
ss
push
push
jmp
dec
push
rolb
mov
add
lcall
sub
hlt
mov
mov
enter
ret
sti
adc
push
ljmp
out
js
ljmp
cmc
cwtl
roll
lock
xor
stc
out
mov
or
loopne
call
push
push
scas
dec
pop
cmc
lds
adc
cmp
xor
push
scas
add
sbb
push
call
jb
sahf
clc
mov
rcll
mov
add
and
mov
aas
pop
lock
dec
push
icebp
inc
xchg
mov
sarb
icebp
pop
cs
insl
adc
sub
pusha
lods
adc
xchg
mov
xor
je
shll
push
jle
mov
cli
push
jns
ljmp
loop
test
inc
cmpb
scas
xor
mov
call
mov
cmp
inc
std
das
data16
notl
add
lods
idivl
or
cld
xchg
std
clc
cmp
ret
loope
push
lods
xchg
fdivrl
mov
daa
loopne
adc
dec
jne
loop
into
gs
xor
dec
popa
jbe
bnd
js
imul
mov
out
clc
cmpsl
cmp
cwtl
cs
mov
add
out
add
dec
aas
push
cmp
imul
xor
push
jnp
jnp
ljmp
les
mov
sub
js
mov
jo
loope
add
xchg
and
scas
sahf
fmull
fwait
lret
add
fmull
cmp
call
jge
icebp
mov
push
cmp
push
pop
pop
gs
mov
mov
dec
loope
bound
call
push
sub
xchg
sbb
add
call
shrl
mov
cwtl
cwtl
pusha
sub
sub
and
in
insb
enter
fwait
icebp
or
sbb
xchg
inc
cmp
cmc
add
aam
push
push
mov
flds
aaa
adc
mov
jp
jle
rclb
cwtl
jb
mov
shl
push
push
mov
inc
js
call
add
test
mov
adc
fbld
aad
pop
add
addb
es
test
and
clc
cmp
in
ja
xchg
js
imul
insb
adc
outsl
push
xor
add
adc
fcmovnu
call
pop
dec
addl
inc
shll
fbld
and
out
xchg
idivb
xor
mov
pop
push
sahf
add
adcb
cmp
mov
inc
push
lock
pop
and
iret
and
mov
add
push
into
insl
sub
sbb
push
out
lds
pop
decl
dec
hlt
xchg
jbe
push
inc
mov
xchg
xchg
jp
pop
sarl
xchg
sbb
add
sbb
push
inc
mov
stos
call
push
int
cmp
push
push
sbb
pop
jb
or
xchg
testb
sbb
push
lcall
clc
dec
jno
js
movsl
cmp
ss
xchg
es
adc
cld
mov
sbb
inc
rcrl
insb
cmp
cli
aaa
fcomip
add
sbb
pop
pop
fwait
jnp
leave
and
or
mov
xchg
add
push
xchg
insb
arpl
arpl
outsb
and
out
mov
xchg
cltd
insl
mov
rcll
and
pushf
rcr
sbb
fadds
aam
bound
xor
ret
sub
mov
jbe
mov
rclb
xchg
test
ss
add
pop
sub
push
push
push
shr
xor
xor
sbb
in
fists
call
inc
push
push
into
cwtl
dec
pushl
adc
cltd
cli
dec
mov
daa
lds
es
ljmp
mov
fisttpl
and
dec
xor
cmpsl
nop
xlat
adc
mov
or
push
addr16
js
sub
xchg
sub
mov
inc
dec
das
scas
inc
test
add
cmp
clc
dec
pop
popa
jo
out
inc
add
mov
fistpll
sahf
fcompl
sub
dec
push
data16
and
aad
js
inc
inc
adc
push
in
mov
fsubrp
inc
sbb
xchg
in
ss
xchg
xor
cmp
mov
mov
es
jecxz
lret
shrb
movhps
dec
jge
loopne
lock
sub
jb
push
push
ljmp
hlt
jno
repz
adc
jg
add
jno
lahf
cmpsb
stos
out
jmp
rcrb
rorl
movsb
jle
outsb
shlb
hlt
fisubl
or
testb
call
or
test
out
xor
adc
adc
push
and
es
jp
push
mov
cmc
pop
sbb
imul
add
in
pop
jl
cmp
push
leave
divl
mov
insb
jecxz
or
mov
adc
pop
or
push
push
xchg
scas
rorb
adc
decl
cmp
or
imul
xor
dec
push
jmp
inc
push
adc
jbe
sbb
decl
pop
outsb
push
cmp
and
cmp
mov
mov
jp
mov
aas
sbb
out
mov
xchg
adc
sub
and
fldl
stos
dec
iret
xchg
sbb
sti
pusha
fsubs
std
cmpsl
or
test
xchg
push
mov
lcall
jle
call
mov
cmc
add
sbbl
out
rclb
dec
sub
clc
lcall
or
enter
ud2
lcall
aad
ret
repnz
mov
js
movsl
mov
or
jae
pushf
sti
mov
push
inc
or
or
jmp
push
cwtl
movsb
sub
mov
mov
dec
inc
or
incb
adc
jb
stos
and
push
ljmp
mov
inc
cmp
inc
pop
mov
outsl
arpl
test
jbe
add
pop
jp
or
jg
lock
lcall
pop
outsl
loope
xor
or
jb
lock
push
pop
xchg
push
in
sahf
jo
ds
xchg
orl
ljmp
popf
js
adc
loopne
xor
out
sahf
into
fucomip
lcall
es
xorl
mov
stos
xchg
shll
sub
or
in
add
fwait
sub
paddusb
pushf
jecxz
inc
lahf
lahf
mov
or
rcr
arpl
aam
call
pop
add
push
xchg
add
pmaxub
add
popa
sti
mov
int
rorb
rcrb
pop
inc
xlat
or
jp
sub
clc
mov
out
mov
in
fwait
mov
push
clc
bound
add
sbb
push
xchg
add
fsubrp
inc
push
sub
cwtl
jl
pop
cwtl
cmp
fbld
sub
and
data16
movsb
cs
fidivrs
orb
jb
shrb
inc
pop
call
and
lock
aas
xor
jnp
inc
mov
sti
or
cli
outsb
cmpsl
test
cmp
xchg
mov
mov
adc
mov
mov
inc
imul
int
jge
aas
ds
dec
sbb
sbb
jge
stos
movsl
cli
and
sbb
inc
lahf
inc
add
or
xchg
into
movsb
add
lods
clc
pushl
sahf
mov
mov
mov
int
addr16
push
loop
sbb
inc
push
fisttps
push
mov
cwtl
cmp
mov
call
divl
movsl
pop
sub
push
dec
jl
aad
xor
stc
mov
pop
inc
mov
push
pop
shlb
and
movsb
pop
add
push
lock
dec
insb
pop
ret
cmp
lods
sbb
mov
xchg
pop
sub
mov
decl
add
clc
mov
call
lods
test
xchg
push
dec
sub
and
cli
and
insl
ljmp
rorb
sarb
add
xchg
es
xchg
and
ljmp
cmp
mov
sbb
jne
push
ja
and
jp
dec
xchg
xor
mov
sub
jns
push
or
xor
outsb
push
clc
and
sub
js
leave
ss
fistpll
mov
scas
and
je
jnp
clc
scas
inc
sbb
jno
lahf
sub
lods
sbbl
pop
decl
adc
loop
pop
into
mov
dec
cli
ja
shll
cld
popa
movsb
dec
and
lock
ds
xchg
mov
movsl
sarw
and
cmp
pop
outsb
ss
ja
push
lock
mov
mov
movsb
xchg
push
mov
cmp
into
jl
incl
dec
pop
add
pop
mov
mov
push
add
cld
cmp
xchg
xor
mov
add
pushf
pop
in
mov
cltd
mov
push
fists
add
cmpsb
stc
cld
jg
dec
push
adc
adc
nop
mov
fsubrs
add
push
lock
sarb
scas
mov
std
int3
fisubrs
mov
inc
cltd
mov
jl
lock
popf
shrb
fcompl
popf
push
fstpt
cwtl
mov
inc
mov
lds
push
lods
std
jne
mov
jnp
pop
dec
push
lahf
enter
pop
jge
aas
xchg
sub
sub
dec
mov
insl
push
and
sub
jnp
jns
ret
push
sbb
lret
or
cmp
sti
pop
bnd
out
adc
pop
into
cmpsl
fcmove
push
incb
or
mov
insb
jbe
test
daa
and
in
icebp
mov
fists
fistpll
std
out
mov
add
test
adc
and
cmpsl
lock
add
or
data16
inc
imul
mov
incl
je
stc
sub
xchg
xchg
aam
mov
mov
xor
or
nop
xor
xorl
pop
mov
lcall
scas
ret
inc
js
add
push
jne
call
push
and
fcompl
outsl
cmp
hlt
mov
les
adc
imul
adc
push
adc
push
shll
mov
mov
xchg
mov
inc
and
mov
add
add
clts
mov
test
movsb
push
stc
in
mov
das
mov
adc
adc
cld
sub
fisubl
pop
enter
decl
fs
mov
jns
adc
test
fdivrs
or
inc
mov
xor
roll
xchg
xchg
pop
mov
mov
shrd
fnstsw
sarl
addb
adc
jo
cld
jle
jb
popa
mov
inc
jp
push
test
xlat
jb
stos
ljmp
adc
jo
in
inc
mov
sub
push
pop
test
ss
aam
out
dec
push
jno
into
mov
pushf
lock
in
xor
push
sbbb
cmp
mov
outsl
clc
add
cmp
test
mov
sbb
xor
dec
fcoml
cmp
push
test
sar
adc
xlat
cmp
xchg
dec
loopne
je
fmul
dec
jb
mov
ljmp
add
ret
dec
lock
mov
js
aam
mov
sub
mov
lcall
push
movsb
mov
fbstp
imul
stc
out
cli
sub
jecxz
roll
add
push
bound
mov
mull
inc
jl,pt
sbb
sbb
fidivs
inc
scas
add
mov
das
sub
adc
aaa
hlt
ud0
dec
lock
repnz
pop
mov
adc
enter
je
sar
mov
int3
outsl
jmp
ficompl
mov
lcall
lahf
movsl
addr16
mov
inc
bound
mov
out
cmpsb
arpl
dec
adc
pusha
pop
gs
push
xlat
das
fidivl
lock
xor
mov
inc
mov
cmp
pop
sbb
sbb
xor
lods
push
subb
add
and
dec
dec
repz
xor
shll
push
int3
int
mov
push
or
and
mov
mov
mov
jbe
clc
ljmp
stos
lock
dec
add
popf
data16
adc
mov
lods
pushf
adc
pop
xor
shl
sti
or
inc
aad
cmp
stc
and
mov
ficompl
loop
add
add
xor
aaa
fucomp
shlb
add
mov
movsl
or
sbb
xchg
aad
push
push
lock
add
mov
ret
mov
hlt
rcrb
mov
in
les
xchg
pop
pop
nop
mov
and
test
ja
imul
xchg
insl
les
sub
pushf
dec
add
xor
scas
clc
out
int
stc
lcall
dec
xchg
or
loope
and
adc
mov
mov
push
inc
adc
and
testb
inc
push
sbb
sub
add
decb
add
loop
in
add
ret
sbb
aam
andb
pop
decl
pop
fwait
cld
cmp
int3
push
mov
out
clc
pop
mov
xor
add
ja
mov
sub
js
lods
je
xor
cli
loopne
shll
cs
and
fsubrs
repnz
push
arpl
jns
push
aad
ret
in
insb
into
shll
mov
and
mov
inc
dec
inc
dec
mov
and
push
fdiv
pop
sub
mov
out
je
outsb
repnz
mov
sub
fdivp
adc
sbb
fnstenvs
push
js
nop
adc
push
push
decl
test
xchg
in
ljmp
test
dec
mov
cmp
pop
cmc
imull
sbb
or
clc
xchg
adc
cmc
push
loopne
sbb
stc
jl
jmp
push
arpl
inc
bound
xchg
xlat
sbb
cs
mov
mov
and
jg
popf
and
arpl
mov
ljmp
fcomip
sbb
add
gs
pop
mov
scas
push
pop
cmp
sbb
sti
or
xchg
mov
pop
pop
xor
ljmp
bound
cli
ja
and
mov
jbe
inc
decb
inc
cmc
jl
decl
add
and
fcompp
fmuls
jl
mov
stos
shlb
rolb
jge
bound
fnstcw
mov
jle
inc
dec
loopne
inc
out
imul
insb
inc
jp
sbb
inc
push
iret
push
pop
inc
add
adc
add
jmp
add
lcall
mov
js
jle
call
xchg
mov
decb
adc
outsb
cmpb
push
sbb
std
adc
add
js
pushf
jmp
clc
icebp
jmp
inc
aam
arpl
pop
inc
sub
xchg
stc
loopne
mov
mov
addr16
or
std
test
cmc
neg
pop
push
shl
add
push
add
out
mov
xor
mov
rorb
cli
mov
movsb
hlt
lcall
add
sbb
aas
fnstsw
sbb
cmp
fwait
pop
pop
push
pusha
push
int3
les
aad
pop
nop
in
imul
or
lds
mov
nop
cmpsb
cmc
std
mov
cmpsb
test
stos
or
pushl
stos
cs
sbb
adc
pop
lcall
adc
mov
movb
xor
pop
lds
insl
daa
ljmp
mov
xchg
icebp
push
in
push
push
or
lds
clc
hlt
popf
js
xchg
mov
adc
adc
or
jp
bound
xchg
mov
pop
lock
outsb
test
stos
inc
push
pop
add
dec
sbbl
xor
call
and
push
movsl
ret
lock
cwtl
xchg
sub
test
fldenv
jle
push
or
test
add
xchg
push
add
iret
xchg
jb
xor
icebp
cli
imul
out
sti
inc
gs
int3
jno
jg
push
xchg
sub
cld
iret
push
jno
jb
jbe
mov
sbb
cmp
test
cwtl
add
js
popa
pop
nop
add
or
loopne
pop
pop
add
mov
jp
mov
ret
push
pop
mov
push
jle
wbinvd
out
add
mov
cltd
jbe
clc
cmpsb
xchg
outsb
rclb
pop
pop
sub
movsb
loop
lds
sbb
adc
bound
mov
inc
aaa
sub
js
add
adc
jo
cltd
fists
sbb
pusha
mov
pop
add
std
inc
roll
outsl
or
sub
pushf
out
mov
sbb
mov
dec
dec
push
sub
cmp
pop
push
je
push
loop
fwait
imul
mov
ret
fucomip
lahf
incl
jae
push
dec
push
adc
mov
sbb
push
sti
popa
and
mov
add
mov
adc
pop
addb
addb
push
sub
hlt
mov
lcall
ds
xor
gs
add
ror
mov
aaa
shrb
jb
aad
pop
jns
or
ljmp
pusha
pushf
insl
outsb
mov
test
lcall
std
lahf
clc
dec
ljmp
lcall
test
loope
cmpsl
js
adc
clc
jg
or
jp
fidivrs
add
adc
mov
cmp
inc
sbb
into
sub
add
jbe
push
mov
or
push
cli
add
mov
ret
test
inc
pop
test
dec
adc
or
pop
in
mov
fs
jle
popf
ds
insl
call
and
mov
imul
mov
hlt
loopne
int
jae
xchg
or
inc
mov
lods
sahf
fucomi
das
shll
cltd
push
ret
mov
mov
idivb
imul
adc
fs
lret
lcall
cwtl
std
aam
sar
add
jns
jb
inc
adc
sbb
and
enter
pop
adc
shll
jae
sbb
andb
lock
mov
jo
adc
sbb
sub
call
sub
loop
sahf
dec
jbe
or
ret
jnp
sete
sbb
jbe
push
mov
ja
cwtl
xchg
mov
jl
xor
in
push
sbb
sbbl
stos
pop
insb
out
push
test
jmp
mov
adc
rorb
addr16
fidivrs
xchg
shlb
xchg
sbb
in
cli
dec
jno
xor
loope
add
pop
int3
mov
mov
loop
cmpsb
fstpt
mov
lea
sti
add
mov
fcompl
push
daa
adc
cwtl
or
lcall
add
jb
cmp
jnp
xor
and
xor
test
adc
mov
int
ljmp
inc
xchg
xor
bound
inc
and
cmpsl
xor
pop
ret
cld
out
dec
dec
movsl
fistps
insl
lods
xor
in
xchg
outsl
dec
pusha
ret
pop
fcoms
mov
ror
cmp
or
in
aas
sbb
adc
leave
inc
dec
clc
add
push
dec
push
aam
imul
rorb
or
ror
cmp
xchg
mov
sbb
mov
icebp
fldcw
sarb
test
mov
add
dec
inc
cld
aaa
sbb
roll
add
cs
mov
pop
arpl
dec
dec
pusha
sub
cli
jns
pushl
lods
push
sbb
and
pop
cs
je
enter
shl
cmpsl
mov
xchg
push
cwtl
or
out
and
mov
xor
mov
dec
mov
ljmp
into
rep
xchg
jl
pop
lds
add
enter
inc
insb
imul
aad
lahf
rclb
inc
sbb
push
mov
jle
int3
ret
lock
enter
inc
pushf
test
mov
pusha
jle
mov
pop
outsb
cld
inc
push
popa
dec
sahf
add
sbb
or
imul
stos
lret
out
inc
add
push
add
inc
loop
xchg
inc
mov
repz
daa
mov
mov
dec
jo
mov
lds
inc
jno
sbb
pop
pop
push
adc
pop
inc
add
dec
mov
ds
fbstp
or
push
push
inc
sahf
out
mov
lcall
mull
fsubrs
icebp
decb
fwait
ss
hlt
les
and
mov
div
bswap
xchg
fdivrs
sar
lcall
adc
jmp
mov
imul
rcll
push
pop
jo
cmp
and
jle
incl
out
fsubs
inc
jle
data16
push
xchg
mov
scas
jmp
cmp
jbe
jl
or
loop
inc
mov
repz
frstor
fidivs
shll
cmp
lock
push
adc
push
push
rol
mov
adc
xor
push
mov
cmp
add
add
pop
add
mov
cmc
aas
sub
in
aad
xorl
fcmovu
cmp
pushl
leave
xchg
imul
lods
sbb
das
pusha
out
push
sarl
out
mov
repz
mov
cmp
pop
fcoml
movsb
ds
inc
jnp
js
scas
mov
aas
ljmp
adc
int3
sbbl
inc
jmp
lcall
add
jae
out
lret
lcall
dec
call
mov
pop
ret
push
mov
jno
mov
xor
mov
xor
cltd
jg
fs
mov
jnp
out
data16
shlb
rcll
cli
mov
push
xchg
and
gs
es
cs
pusha
sar
jns
insl
out
leave
pop
and
xor
outsl
lock
jg
or
dec
ret
pop
scas
inc
and
or
pop
ret
xor
or
pop
push
xor
sar
jg
sbb
jne
insb
filds
sti
cmp
push
in
hlt
push
ret
sub
pop
out
mov
jnp
jecxz
push
push
inc
jb
and
divb
insb
ficomps
loopne
xor
push
lcall
and
xchg
pop
js
lods
cmpsl
sbb
lods
add
dec
inc
mov
push
mov
cmpsl
icebp
sbbb
mov
inc
mov
faddl
pop
push
dec
pop
and
inc
xlat
out
and
lahf
add
push
lcall
nop
mov
lods
dec
cwtl
mov
fdivr
fdiv
jmp
test
ret
sub
ja
push
xor
dec
fisubrl
std
mov
mov
add
fildll
pop
mov
mov
clc
push
cmp
push
dec
add
sbb
rcrb
push
add
or
adc
out
js
pop
dec
adcb
jg
in
cwtl
sbb
dec
call
mov
mov
add
ljmp
ret
jb
iret
arpl
aam
pop
fnstenv
add
inc
jmp
sar
inc
lea
in
ljmp
fbld
pop
fwait
in
lea
movsl
fsubs
mov
mov
data16
stos
sbb
orb
xlat
js
movsb
jne
orl
sbb
xchg
mov
pop
lret
js
pop
leave
pop
clc
mov
ss
and
push
mov
mov
pop
leave
mov
cmpb
es
call
or
xchg
ficoml
adc
mov
mov
adc
popf
lods
pop
lods
xor
icebp
roll
ret
sahf
xlat
xchg
add
pop
mov
pop
loopne
int3
pop
ffreep
ljmp
xor
call
inc
mov
in
sbb
sbb
mov
sti
sub
inc
xchg
add
sbb
ret
ss
data16
push
push
sarb
mov
pop
inc
mov
das
adc
iret
mov
sbb
scas
push
vpsubq
xor
mov
push
inc
hlt
test
jne
lret
mov
sbb
fadds
cld
incl
std
push
pusha
ror
les
repz
iret
decl
mov
in
jae
aaa
vpshufhw
sbb
psubw
ret
jns
insl
lods
sub
pop
rorl
clc
lods
jle
js
fucomip
jecxz
and
pop
out
add
mov
or
jle
mov
hlt
xchg
ret
lock
jmp
sub
std
push
shrb
pushf
scas
insb
loopne
hlt
sbb
push
xchg
add
sarl
ret
or
movsl
inc
cmp
sti
mov
dec
aad
loopne
mov
mov
adc
xchg
adc
inc
or
push
mov
ret
std
es
repnz
pusha
pop
mov
jmp
cmp
push
scas
and
repnz
js
fists
cwtl
push
adc
in
lods
into
inc
les
jp
add
cmpl
adc
cmpsl
add
out
mov
and
repnz
imul
cld
fxch
mov
mov
aam
fcompl
fistps
jp
xchg
mov
xchg
mov
jecxz
add
xchg
jge
outsb
pop
rcrb
or
push
cmc
aaa
lcall
daa
outsb
inc
dec
pop
lcall
enter
scas
mov
pop
rol
inc
or
or
icebp
rolb
xchg
cmp
xchg
cld
aaa
cmpl
add
adc
fdivrl
mov
nop
int
mov
cmp
js
jno
incl
cmpsb
sub
push
xlat
in
in
sub
jge,pn
rorl
adc
int3
adc
clc
jg
movsb
sbb
adc
pop
in
lock
xor
adcl
inc
aas
pop
hlt
das
mulb
add
push
mov
decl
sbbb
pop
adc
pop
jno
pop
add
sbb
dec
mov
add
loop
imul
outsl
push
daa
xchg
sub
and
and
incl
mov
sbb
jno
or
pop
sub
add
mov
in
subl
clc
shrb
cmpsb
mov
add
and
adc
xchg
adc
xorl
jg
mov
push
ljmp
out
nop
cmp
inc
dec
push
mov
ljmp
sbb
dec
cmp
dec
or
mov
repnz
pop
loope
jnp
xchg
sahf
sahf
xor
xor
test
inc
mov
insl
cli
cmpsl
fwait
imulb
loop
or
cld
cmp
pusha
loopne
mov
outsb
insb
addb
jg
pop
fadd
xor
lods
loopne
adc
scas
jge
subb
std
das
es
int3
cmpb
push
test
adc
adc
inc
popa
shr
ret
fdiv
cwtl
stos
shlb
jg
add
pop
lret
add
dec
jg
mov
cmp
pop
mov
xchg
pop
sub
mov
loop
and
add
sub
mov
jb
inc
and
inc
in
and
ss
mov
mov
mov
lods
xchg
mov
dec
leave
pop
cmp
push
imull
fsubl
fadd
mov
lods
ret
cs
jg
call
push
mov
ret
ret
add
cmpsb
jg
nop
bound
bound
xor
rcrb
incl
mov
push
lcall
inc
in
add
push
jp
sub
or
or
push
xchg
inc
pop
lcall
aas
cld
ljmp
or
mov
ds
addl
adc
jbe
sbb
jmp
aad
outsl
call
int3
loop
add
mov
rclb
pop
jecxz
idivb
shlb
nop
out
rorb
pop
outsl
fisubrl
and
das
imul
daa
pop
mov
or
mov
push
or
mov
mov
jle
or
adc
mov
das
xchg
test
inc
jbe
imul
sub
dec
add
mov
andl
mov
pop
test
cmc
mov
test
fadds
pushl
mov
xor
out
ljmp
mov
add
add
xchg
xor
inc
test
cmp
hlt
jno
inc
push
mov
mov
bound
or
xorb
and
jl
out
lret
icebp
hlt
decl
xchg
fnstcw
xchg
mov
subb
lods
clc
push
mov
test
ds
int3
mov
fidivl
xor
pop
lea
insb
jg
jne
adc
aam
in
mov
xor
mov
bound
mov
xchg
cltd
ficoms
lods
cmp
adc
inc
xlat
adc
dec
ljmp
or
mov
xchg
mov
dec
shl
hlt
or
lret
clc
outsb
cmp
or
pop
jmp
mov
adc
clc
sub
cmp
shlb
scas
pushf
mov
sbb
and
cmp
arpl
push
pop
xor
pop
or
test
mov
dec
psllw
mov
in
mov
js
lds
fisubrs
lock
add
dec
push
mov
imul
test
movsb
jecxz
push
add
push
jns
lock
rorb
out
add
stos
mov
add
jg
inc
stos
pop
dec
lods
imul
xchg
ret
mov
lret
call
add
dec
pop
pop
jne
xchg
mov
std
or
outsb
dec
daa
fidivs
or
lods
jmp
cmp
ljmp
or
inc
xchg
push
mov
cmc
lcall
arpl
add
dec
mov
call
hlt
fwait
xor
pop
or
pop
mov
push
push
adc
mov
pop
pop
push
dec
xor
push
lcall
mov
lods
push
cmp
sarb
rcrb
push
or
fimuls
or
mov
aas
cmpsb
mov
push
or
shlb
ret
scas
cmc
aas
shrl
inc
dec
mov
or
cmpb
shl
push
sbb
cmpsb
mov
xchg
mov
jb
adcb
test
xchg
mov
idiv
adc
inc
pop
cs
mov
out
arpl
xchg
ret
fcoml
inc
and
push
cmp
jns
addb
sbb
jo
or
add
out
inc
push
mov
sub
mov
pusha
jb
cmc
inc
cld
xchg
add
add
adc
or
stos
inc
jecxz
not
ds
push
and
lret
and
std
sbb
pop
sub
sahf
orl
jp
jns
xchg
jle
jg
adc
sbb
movsb
add
and
scas
and
hlt
fbstp
scas
cli
mov
jo
gs
mov
sar
xchg
mov
hlt
sbb
testb
js
sbb
pop
shrb
mov
adcb
lcall
xchg
loope
pop
aas
push
lcall
mov
outsl
inc
sub
in
xor
sbb
sbb
popa
and
xchg
aas
sub
xchg
xorl
test
scas
mov
imul
adc
in
filds
push
cmp
rclb
or
dec
mov
inc
add
pop
jae
iret
and
or
push
shrb
shrb
loop
push
add
inc
ss
int3
jg
pop
aas
rcrb
aas
or
xchg
arpl
xchg
js
cmc
cmp
xchg
sbb
sbb
ja
ret
dec
aad
icebp
jo
gs
mov
lock
pop
ficoms
test
scas
imul
out
pop
or
jno
insb
and
cld
roll
stos
in
push
pop
sbb
mov
sbb
mov
cmc
outsl
cli
negl
sarb
je
xor
push
lds
mov
mov
ljmp
fdiv
std
loope
test
ret
xchg
jg
pop
sub
cmpsb
jnp
xchg
subl
lea
sub
movsb
inc
call
sbb
sub
movsb
cmp
add
testb
fldenv
and
stos
mov
push
pop
mov
pop
mov
sub
add
clc
loopne
cmpsl
lea
lock
in
fistl
jl
dec
mov
test
aam
loop
jl
shll
scas
mov
or
out
inc
aad
pop
mov
pop
mov
test
add
pop
mov
sub
jmp
lret
imulb
mov
inc
sti
cmp
adc
test
pop
or
outsb
nop
das
sub
clc
jg
push
add
lods
roll
and
incl
fsubrl
add
push
cli
push
xchg
push
es
xor
jb
adc
add
data16
mov
mov
sub
mov
sbb
xor
xchg
add
inc
sub
push
mov
xor
mov
shlb
dec
clc
adc
mov
divb
andl
inc
or
push
loopne
add
adc
ret
push
inc
jge
mov
xchg
sbb
fdiv
cli
push
jb
jno
mov
data16
les
call
cmp
or
outsb
mov
daa
dec
mov
jmp
fbld
repz
ds
mov
hlt
or
mov
imul
xor
push
lahf
and
mul
test
pop
insb
negl
add
mov
aaa
adc
bound
daa
pop
add
das
add
cmp
sub
neg
cmp
jbe
mov
jecxz
aam
movsb
aad
sub
or
sbb
add
xchg
push
imulb
in
sbb
pop
ret
jnp
mov
sub
push
mov
fidivrl
push
push
add
ss
mov
sub
clc
xlat
mov
adc
mov
push
lcall
jns
out
pushf
pop
shll
mov
sarb
outsb
inc
nop
mov
jle
fistpl
push
cld
icebp
decl
in
hlt
cmp
add
stc
add
push
in
sbb
in
inc
mov
jp
and
jmp
js
cmp
cmp
push
in
mov
ds
push
sub
cmp
enter
inc
int
ljmp
jmp
ja
ljmp
push
xchg
sahf
xchg
sub
ja
sub
sbb
sub
cmp
push
jge
cmp
add
adc
inc
pop
push
fstps
xchg
cmpb
mov
mov
pop
fwait
or
sbb
test
push
in
or
mov
test
sub
insb
mov
outsl
insb
je
sub
int
aad
lods
lods
in
ret
mov
in
shrb
fbld
pop
cmpsb
decl
add
add
add
pop
lret
je
les
mov
inc
push
data16
jnp
shrb
shl
mov
mov
in
push
in
rolb
out
pop
lock
sub
insb
pop
mov
jmp
add
and
mov
in
jbe
fs
mov
bound
and
test
jg
lock
push
montmul
cmpsb
inc
mov
cmp
add
scas
ret
dec
inc
mov
lods
or
adc
outsl
jle
outsl
inc
push
loope
mov
add
lods
adc
cld
inc
lcall
test
push
sub
sti
negb
dec
cld
decl
inc
dec
push
es
mov
cmp
xchg
push
pop
aam
mov
mov
sbb
adc
mov
sti
popa
dec
popf
pop
jns
sarl
pushf
test
dec
gs
add
mov
adc
sub
fsubs
rcll
dec
mov
ret
rcl
push
imul
clc
pop
push
inc
push
or
mov
fld
cli
out
adc
ror
xor
or
dec
jl
cwtl
adc
sub
add
xor
xor
cltd
add
inc
push
inc
fsubs
mov
jo
mov
sub
adc
sub
insl
movb
mov
mov
xchg
push
xor
push
pushl
loopne
add
dec
mov
push
mov
nop
xor
jg
orl
xor
imul
adc
popa
xor
dec
orl
add
mov
push
inc
clc
std
sbb
into
loope
jp
cmp
mov
and
push
in
mov
lods
js
movsb
inc
cli
loope
inc
flds
cmp
clc
test
xorb
push
repnz
stos
sub
push
rolb
inc
push
dec
dec
pushf
dec
js
hlt
scas
dec
loope
mov
ljmp
fwait
push
lock
mov
sub
into
mov
rolb
sub
push
pusha
out
mov
sbb
sbb
pusha
mov
test
aas
xor
xchg
add
jp
hlt
das
frstor
fyl2xp1
cmpb
int
xchg
jle
inc
inc
pop
jecxz
gs
pop
sbb
fs
sbb
sbb
sbb
in
loopne
scas
js
fwait
lret
mov
pop
fs
scas
xchg
rclb
cli
and
fwait
ret
sbbb
pushf
rclb
mov
dec
adc
jns
ljmp
xor
test
stos
mov
je
sub
scas
jno
push
rorb
movsb
sbb
cmp
ss
fcomp
pop
gs
add
cmp
hlt
cmpsb
cmc
pop
cmpsb
jp
ret
out
dec
xchg
enter
ljmp
fisubl
pop
js
sub
data16
jl
stos
jg
in
dec
pop
sub
sahf
xchg
add
push
loopne
dec
mov
mov
addb
pop
mov
iret
fists
add
mov
aaa
test
adc
sbb
sarl
int
iret
mov
and
int
jg
fidivrs
add
shrb
inc
or
mov
into
ljmp
lods
jno
sub
mov
or
sub
pop
adcb
pop
jns
add
jecxz
fmuls
ja
adc
sti
and
pop
dec
loope
mov
mov
pop
leave
dec
and
pusha
ljmp
enter
mov
ret
subb
cli
and
aad
arpl
jb
pop
pop
adc
stos
inc
mov
xchg
cmpsl
mov
std
aaa
clc
cld
mov
loope
jb
stos
or
loop
pop
and
jns
insb
mov
inc
mov
dec
and
sub
xchg
xor
shl
gs
enter
mov
and
inc
mov
mov
adc
xchg
pusha
inc
loopne
fisubl
ljmp
and
cmp
xchg
clc
mov
jecxz
aad
sub
adc
cmp
mov
jge
sub
sbb
and
jbe
cli
fistl
mov
xchg
push
out
mov
push
loop,pn
xor
push
shlb
add
xchg
mov
sbb
cmp
shrl
xchg
inc
sub
jns
mov
push
cmp
pusha
std
xchg
jl
mov
add
das
mov
mov
mov
jp
addb
call
jno
jo
call
push
adc
dec
shl
cmc
stos
out
mov
push
pushf
pop
mov
sub
pop
subb
and
ljmp
xchg
out
loope
jno
mov
add
insl
mov
inc
pop
sbb
mov
lods
push
lock
cmpsb
iret
loopne
mov
stos
lea
lods
pop
push
leave
fadd
into
repz
jp
add
xor
decl
enter
out
into
adc
loop
xchg
sub
das
shlb
mov
cmp
push
mov
pop
pushf
push
xlat
mov
inc
and
and
lock
sbb
cmpsb
mov
push
ret
fisubrl
roll
movsl
movsb
das
mov
sub
or
pushl
add
add
cld
es
lods
jp
jbe
inc
jno
cli
in
fstpt
repnz
mov
in
mov
cmpsb
daa
movl
and
imul
fwait
shl
pushl
popa
rcll
xor
jl
adc
loop
lahf
jae
cmp
or
clc
cmpb
adc
nop
rcrb
add
dec
aad
jecxz
test
pop
push
sub
add
cmp
std
lcall
enter
pop
repnz
fdivp
sub
sub
dec
loopne
jb
and
jecxz
add
xchg
stos
ss
mov
xor
out
push
adc
incb
outsl
clc
xchg
adc
test
dec
dec
jle
and
les
fs
jg
shlb
addb
out
test
push
push
in
js
ja
jmp
mov
add
cmpb
mov
outsb
add
test
mov
mov
aaa
daa
mov
xchg
mov
lahf
mov
xorb
cltd
movsl
mov
data16
pop
push
jmp
cmc
callw
xchg
ds
mov
mov
je
or
fwait
or
add
enter
int
mov
jnp
cwtl
jbe
test
inc
shll
test
push
sub
and
cld
pop
hlt
xchg
xor
cmpsl
sub
in
sarl
mov
cmp
pop
xor
or
rcrl
popa
icebp
in
mov
or
fsubl
cmp
jg
jae
add
push
ljmp
popf
and
jg
cmp
mov
push
ja
int
aas
xchg
out
and
cmp
adc
in
mov
jge
lods
jle
pushf
adc
or
les
cmp
aad
inc
dec
fcoml
add
dec
jl
cmpsb
pop
jge
popf
je
test
nop
test
nop
xchg
loop
inc
mov
ret
divl
out
cmp
cmp
lahf
lahf
dec
pusha
and
xchg
dec
cld
stos
sub
fsubs
dec
adc
rcl
dec
scas
jecxz
mov
fisubs
stos
push
xchg
enter
dec
dec
jno
fwait
sbb
imul
je
test
inc
ja
ret
int3
notl
js
scas
das
lcall
iret
lds
insb
sub
lock
stos
pop
xchg
or
jl
lcall
loop
add
and
push
clc
xor
fdivrp
sbb
lcall
mov
sbb
fldl
pop
and
push
scas
push
push
cmpsb
mov
push
inc
lea
popf
dec
repz
mov
push
cwtl
shlb
fnsave
xchg
xor
add
xchg
or
mov
xchg
add
insl
cmp
out
xchg
hlt
dec
cmpsb
scas
jno
xor
mov
out
cmp
or
xchg
or
into
das
mov
mov
xchg
xor
mov
out
negb
mov
fs
lods
pop
mov
cmp
scas
out
out
sbb
jo
fs
pushf
enter
ja
pop
aam
jo
enter
lcall
out
ficomps
add
out
dec
and
jp
cltd
cwtl
loope
cmpsl
decb
jo
push
push
push
mov
roll
sub
sti
push
hlt
adc
push
fstps
mov
ret
bound
icebp
inc
add
push
hlt
lods
jbe
mov
addl
pop
inc
pop
out
xchg
fs
mov
jg
scas
sub
hlt
cld
sbbl
push
add
pop
dec
jge
and
loopne
push
sbb
insb
movsb
iret
fwait
adc
shll
into
add
mov
fbld
jae
lret
xchg
aam
mov
scas
movb
stos
aas
clc
jl
and
jnp
arpl
iret
subb
mov
add
mov
jne
jns
das
mov
ja
add
sub
add
sbb
lcall
inc
mov
rolb
jmp
jbe
pop
mov
cli
or
insb
mov
xor
lea
ja
jo
hlt
lock
push
stos
in
fbstp
lret
aas
or
or
out
ret
fnstsw
sahf
sahf
lods
jo
jp
push
jmp
fiaddl
test
pop
int
inc
cs
pop
cli
sub
adc
in
mov
jne
shll
andl
cmp
jo
jmp
mov
pusha
sbb
jae
xchg
xorb
hlt
xchg
or
sahf
inc
fcompl
in
jae
rcrb
push
add
lret
adc
out
aam
and
dec
sub
ja
pop
push
dec
inc
push
or
pop
add
mov
and
std
push
cmovle
addl
push
jne
lahf
adc
xchg
sub
mov
jb
xor
ljmp
ljmp
inc
mov
fstpt
inc
test
sub
scas
nop
aad
inc
les
leave
mov
aam
mov
pop
stc
insl
es
adc
ljmp
adc
jns
arpl
mov
xorb
sbbb
xchg
cmp
int3
sbb
ret
push
outsb
ret
push
pop
mov
xchg
movl
bound
sti
add
repz
or
sbb
sti
repnz
adcl
sbb
fwait
sbb
fnsave
push
lds
lret
inc
inc
clc
inc
cmc
scas
nop
fsts
aad
jmp
cmp
je
adc
rol
je
xchg
dec
ds
sbb
jo
fs
pop
and
dec
out
adc
testb
rorb
aam
and
push
mov
ja
pop
jbe
or
push
and
out
or
xlat
cmpsb
hlt
cwtl
shll
lods
mov
cli
ret
pop
lods
pop
ficoms
orl
lcall
sub
data16
lret
mov
sbb
adc
cld
inc
dec
pop
fsubp
push
imul
sbb
sub
sub
shlb
xchg
int3
or
aas
sbb
sub
inc
mov
aaa
add
cmp
int
aad
and
sti
xchg
jg
jge
inc
and
adcl
mov
mov
ficompl
pop
or
cmp
pop
mov
in
lahf
push
inc
push
sbb
xchg
sahf
dec
pop
jo,pn
xchg
sahf
push
scas
adc
xor
das
mov
fldl
pop
push
cmp
outsl
jo
sbb
xor
xchg
jb
xchg
sbb
push
mov
cld
push
incb
xor
lock
sbb
xchg
loopne
mov
mov
aas
stos
cli
mov
cmpl
cld
dec
ja
cmp
mov
lret
rorl
mov
inc
fcmovnb
ja
adc
jge
fstp
jnp
or
mov
sbb
negb
mov
ja
sub
decb
pushf
leave
or
xlat
mov
sbb
xchg
mov
inc
fidivs
jle
popa
xor
rolb
sahf
add
sbb
movsb
xchg
lret
nop
je
fildll
loopne
jo
andb
and
xchg
test
fimull
hlt
add
add
and
sbb
inc
push
lcall
mov
mov
pushf
rorl
arpl
in
pusha
sbb
cmp
insl
push
cmp
insl
lret
mov
popf
xchg
xor
divb
add
xchg
sbb
dec
rcrb
jle
verw
data16
loopne
sahf
arpl
notb
jnp
add
stos
in
loope
enter
lret
xchg
sub
push
sub
pop
addb
jg
bound
cmp
out
cld
sbb
pop
inc
sarl
ja
daa
sub
cmp
xchg
cmp
loop
push
mov
cmpsl
pop
in
shll
cs
add
cmp
pop
and
loopne
jbe
sbb
pop
cmp
das
ret
ds
popa
push
cltd
je
call
push
push
rcll
in
mov
out
mov
mov
xor
andl
in
sti
dec
hlt
push
pop
fdivp
and
jecxz
movsb
xorl
in
mov
ljmp
cld
xorl
rorb
sub
jno
std
mov
std
push
or
jo
xorl
shrb
pusha
icebp
add
loopne
negb
lret
and
icebp
inc
ficomps
cli
add
xor
adc
jle
dec
xor
jg
cli
daa
and
push
int3
push
or
movsl
ljmp
push
test
xor
int
hlt
adc
dec
mov
rorb
js
or
rol
xor
mov
scas
sarl
repnz
xor
dec
stos
pop
xor
fwait
sahf
repz
sub
icebp
fstl
jl
adc
outsl
das
xchg
je
mov
or
fs
inc
mov
std
mov
and
inc
jbe
jmp
in
xchg
cmp
mov
xor
pop
jae
aaa
jg
mov
inc
sar
loop
mov
jne
add
adc
loope
dec
outsb
rorl
je
jb
incb
pop
idivb
icebp
dec
push
ss
xlat
mov
push
or
adc
scas
test
push
outsb
push
pushf
and
es
mov
cmpb
inc
daa
les
sub
inc
push
add
and
sahf
js
in
dec
pop
xor
int
add
push
inc
push
push
rcr
add
aaa
adcl
enter
inc
mov
icebp
or
ljmp
adc
and
lods
sub
es
in
inc
and
jle
ljmp
sbb
xchg
outsl
and
xor
shrb
mov
or
das
add
adcb
in
movsl
aad
pop
mov
popa
hlt
jmp
xchg
mov
inc
jecxz
sbb
fiaddl
icebp
pop
inc
rclb
insl
inc
dec
xchg
subl
mov
repnz
les
mov
clc
incl
add
pushf
or
push
fsubs
in
pop
fmull
add
dec
iret
pop
ja
aad
out
and
lods
mov
out
mov
rclb
mov
xor
xlat
sbb
lock
inc
xor
inc
loope
sarb
jmp
shl
push
fistpl
out
jae
pushl
js
in
pop
into
dec
mov
je
cltd
xchg
mov
ljmp
push
lds
pop
fiadds
or
or
adc
fmull
adc
test
in
mov
ljmp
fdiv
ret
push
jge
add
in
sbb
mov
pop
inc
inc
cmp
aad
aam
fucomi
add
and
cmp
in
cmp
ret
add
inc
cld
cwtl
push
pushf
inc
add
lret
inc
pop
loopne
addb
fwait
dec
mov
sub
adc
add
call
sbbb
mov
xchg
ret
mov
add
jbe
dec
test
push
jg
add
popf
fs
loopne
pop
add
xor
cli
das
sar
add
loop
xorl
and
add
add
ja
loop
add
nop
push
jns
out
fucomi
dec
das
repnz
pop
add
inc
daa
mov
jbe
xor
inc
dec
test
push
testb
incl
add
mov
test
add
inc
std
xchg
xlat
jno
orl
xor
inc
hlt
jge
xor
jmp
fcmovbe
push
mov
popa
outsb
hlt
add
and
add
out
add
xchg
pusha
scas
sub
fnstenv
mov
stc
or
push
or
xchg
sbb
cld
mov
nop
loope,pn
mov
jmp
cmp
loope
jb
sti
cmp
or
mov
clc
xchg
fdivs
in
out
jo
adc
ret
fimull
or
sub
lods
and
mov
call
cmc
jle,pt
test
rorb
jp
jp
std
or
sbb
inc
adc
imul
mov
pusha
and
movsl
mov
add
cltd
jmp
push
test
mov
xlat
xor
jne
sbb
dec
pop
movsl
cmp
insl
popa
add
jecxz
cmp
repnz
jl
movsb
ds
stc
and
sbb
mov
gs
jae
mov
enter
lret
sahf
sti
or
cld
xchg
inc
adc
es
bound
popa
dec
loopne
sbb
rolw
adc
mov
out
in
cltd
fistl
push
pmullw
push
pop
jg
lods
movsb
fcmovb
leave
shl
inc
fs
ljmp
add
xchg
cmp
push
jnp
add
sbb
std
out
sub
push
ret
xchg
inc
xchg
push
push
cmp
xchg
xor
cld
ja
ljmp
jl
push
push
or
scas
add
aam
jb
rol
dec
sbb
jg
sbb
push
adc
es
xor
lea
clc
repnz
les
into
popa
nop
js
push
add
jl
jae
icebp
cli
and
push
inc
xchg
inc
je
call
pusha
sbb
imulb
fdivp
int
sub
pushf
out
mov
scas
imulb
in
xor
and
mov
pusha
faddl
insl
mov
pop
jl
pop
and
inc
push
ret
jg
jecxz
mov
lds
aam
mov
push
cmpsl
es
imul
push
push
negb
repnz
lret
and
insb
jle
sbb
lock
mull
and
lods
pop
add
orb
aad
mov
imul
and
and
rorb
fs
jb
and
rolb
fdivr
xchg
mov
or
insl
inc
je
ja
jmp
dec
lock
mull
sbb
sub
or
mov
cwtl
jg
adc
push
scas
and
fsubrl
and
and
adcb
lret
hlt
mov
das
sarb
mov
bound
and
cmc
jecxz
cmp
mov
stos
shrb
call
loope
xor
cli
mov
fwait
mov
aam
xor
out
sub
sub
mov
jle
push
outsl
dec
inc
sarl
dec
imul
or
clc
jge
xchg
fmul
push
adc
pop
bound
ret
sub
ja
movsl
cltd
imul
test
dec
mov
cwtl
xchg
adc
jl
add
les
jge
cmp
push
repz
or
loop
test
pop
jne
mov
jbe
out
and
push
and
cmp
adc
or
and
or
sbb
mov
or
inc
xchg
test
ret
mov
ret
ficompl
std
aad
mov
add
xor
mov
incl
xlat
add
mov
add
mov
jb
popa
in
push
arpl
pop
push
fsubrl
push
ror
addr16
mov
or
pusha
xchg
jecxz
outsl
dec
ret
clc
lcall
repz
lock
inc
and
sbb
add
repnz
pop
inc
push
aam
add
js
add
xor
imul
out
mov
jmp
xor
mov
mov
pop
shlb
pop
add
subl
call
out
adc
sub
jp
mov
cld
pop
jb
cmp
xchg
jb
out
jmp
cmp
and
push
cmp
add
scas
jl
or
sub
pop
mov
sbb
pop
and
rolb
lahf
inc
or
sbb
lds
sub
push
push
loopne
icebp
aad
mov
xor
xchg
and
test
incl
insb
jecxz
cld
mov
aad
xor
pop
sbb
jmp
push
sbb
js
push
sub
sub
mov
lock
push
lea
aad
movsb
addb
enter
clc
push
sti
and
in
mov
stc
sub
out
js
xor
mov
imul
cmp
aas
and
xchg
sahf
add
clc
loopne
dec
push
negb
cmp
jge
dec
mov
sub
into
or
or
mov
decb
js
mov
les
jg
shl
in
and
jbe
pushf
cmc
and
push
aam
roll
repz
adc
je
mov
filds
xchg
jle
sub
xchg
pop
mov
cmp
pusha
loope
clc
inc
xchg
push
jo
arpl
fdiv
popf
push
push
les
mov
push
xlat
clc
repz
negl
lods
cmpsl
mov
adc
sbb
dec
push
orb
push
add
cmp
clc
scas
push
mov
movsl
or
and
insl
pop
jge
push
ds
xchg
fidivrl
add
cmp
jb
dec
dec
nop
sbb
inc
adc
add
push
andl
rolb
push
pop
movsb
loop
sbb
adc
ficoms
fcmovu
mov
inc
mov
cmp
loop
mov
dec
push
or
jo
jl
test
mov
sahf
cmp
hlt
inc
push
push
cld
xor
inc
aas
sub
sahf
mov
mov
xchg
sbb
adc
xor
mov
out
push
ja
ja
movlps
movsl
das
push
insb
push
push
clc
jg
pop
addl
popa
jnp
sbb
or
es
dec
push
mov
sub
test
pushf
mov
mov
pop
sti
push
mov
sbb
divb
jle
popa
mov
lcall
nop
fisubs
fistps
rclb
ljmp
aad
jle
insb
or
shl
iret
jae
cltd
and
adc
push
xor
dec
lahf
add
mov
aam
and
aad
add
sbb
aam
fcomps
pop
mov
sbb
dec
add
stos
mov
scas
aas
std
ret
int
inc
test
test
repnz
stos
sub
adc
and
mov
popf
into
cld
ficompl
sbb
int
pop
mov
fcoms
sub
add
pop
decl
jl
lock
rorb
add
ja
dec
adc
loopne
hlt
ja
clc
inc
popf
lcall
icebp
push
xchg
mov
imul
int
out
js
mov
jl
repnz
rcrb
mov
adc
cwtl
sub
lcall
cmp
and
movsb
xor
add
js
or
ss
or
imull
fisttpl
cmc
loop
pusha
or
mov
clc
push
sbb
pop
hlt
mull
insb
repz
mov
cmpsl
add
fs
pusha
mov
jg
jo
scas
dec
cmp
xchg
enter
cmp
addb
jle
ja
mov
in
sbb
push
testb
dec
lods
xchg
jle
pop
add
jae
jecxz
xchg
bound
push
sar
push
inc
sub
cmp
sub
xor
in
mov
push
shlb
mov
cwtl
lahf
sbb
popf
stos
mov
jg
mov
int3
sub
jg
mov
fstpt
pushl
pop
push
jl
jbe
add
adc
or
jge
inc
lret
rcll
add
test
ror
lock
add
js
fcmovbe
fwait
out
jle
ret
scas
mov
and
popf
sub
dec
imul
mov
rorl
into
add
xor
sbb
sub
adc
sub
mov
daa
out
fsubl
call
cmp
cmp
mov
add
in
push
xor
orb
adc
push
dec
add
push
mov
fisubl
push
mov
add
add
pop
pusha
xchg
aaa
dec
cmp
vminss
sub
pop
jo
setae
das
or
test
incl
push
andb
adc
fiadds
mov
mov
add
push
rcrb
sub
jae
add
add
out
push
arpl
xchg
test
cld
add
and
fwait
cmp
pop
imul
mov
aad
pushl
incb
mov
dec
sbb
sub
movsb
pop
push
lds
dec
dec
xchg
inc
xchg
sub
call
xor
sbb
call
jno
rolb
pop
cltd
ljmp
stc
push
out
jae
add
jg
inc
sbb
jb
adc
jae
dec
shlb
mov
fdivl
add
dec
push
jb
lock
insl
roll
inc
or
movb
xchg
hlt
sub
ficoml
push
adc
sub
testb
jp
push
lret
movsb
fsubs
pop
sbb
lret
fcmovu
in
icebp
filds
fisubl
adc
insb
pop
loope
loopne
or
xchg
xor
xor
fcoms
pop
sbb
ret
cld
pop
dec
enter
push
mov
or
cs
ss
movsb
test
push
jo
mov
mov
xor
jae
dec
pmaxub
insl
fmull
xchg
ljmp
cmp
ja
push
addb
jb
and
insb
pushf
push
fwait
jns
insb
mov
mov
imul
adc
clc
mov
loopne
sbb
in
pop
add
mov
mov
pusha
push
out
xchg
push
push
roll
sti
cmp
sahf
push
add
inc
dec
fs
ret
mov
fwait
bound
and
dec
data16
inc
jmp
pop
enter
loope
jecxz
inc
xor
or
das
xchg
ds
add
xor
inc
or
lods
inc
inc
fwait
jp
je
sub
lds
dec
cmc
add
shrb
cmpsl
jl
aas
lcall
mov
shll
mov
xor
xchg
mov
or
sub
adc
pop
lea
test
sub
push
pop
add
repz
test
ljmp
sub
sbb
xor
add
sub
add
pop
push
push
dec
mov
es
cmp
xchg
outsl
gs
out
roll
rcrl
add
xchg
rolb
adc
clc
into
push
push
repz
cmp
lahf
inc
jns
dec
jg
cli
jbe
fadds
pushf
ljmp
sar
or
xchg
loopne
mov
jbe
add
inc
sub
inc
cltd
dec
insb
cmc
repz
or
pop
daa
sbb
ret
mov
ljmp
inc
cwtl
cmp
xchg
lock
add
inc
stos
in
add
sbb
lds
js
xor
xchg
mov
idivb
ret
lcall
inc
sahf
cltd
mov
mov
notb
push
out
out
int
pop
movsb
aaa
je
sti
test
mov
je
dec
addb
imul
xchg
hlt
sbb
mov
pop
xor
pop
add
out
clc
imulb
notl
rcll
mov
sub
cmpsb
jb
pop
cmp
es
stos
add
out
cld
aad
and
daa
lret
enter
xchg
stos
or
cmpsl
and
clc
sbb
cmp
push
fmull
pusha
pop
jmp
pop
xor
into
rcrb
ds
lods
hlt
push
jmp
cltd
or
push
mov
mov
sbb
in
aam
lods
shr
add
mov
mov
xchg
lahf
xchg
je
fs
stos
jle
les
or
and
lcall
data16
std
lcall
lea
add
lcall
xor
push
add
clc
testb
jge
aas
icebp
pop
in
mov
or
fimuls
dec
sub
jecxz
sub
outsl
jmp
jl
inc
es
mov
jnp
mov
xchg
or
xchg
enter
inc
pop
icebp
sub
scas
repz
out
sub
das
dec
adc
sbb
xlat
add
cmpsb
inc
mov
or
scas
pop
cld
fs
movsb
push
jb
pop
sub
pushl
jno
data16
xlat
pusha
int
mov
adc
xor
iret
push
and
test
fisubrs
xchg
dec
pop
hlt
xor
mov
push
pop
jbe
rorb
push
insb
sbb
jge
lods
push
or
and
popf
jbe
std
roll
pushf
push
clc
movlps
cmc
insl
fiaddl
xor
outsb
aas
or
mov
in
mov
push
loopne
jb
xchg
out
dec
jg
xor
adc
and
outsl
in
jl
xor
jb
movsb
add
add
roll
insb
test
mov
movsb
cmc
popa
push
mov
fidivl
push
int
push
loopne
add
jg
lcall
rolb
and
jge
pop
shrl
cwtl
psubd
lcall
das
sbb
daa
jno
adc
pop
cmc
pusha
out
add
stos
mov
pushf
cwtl
sbb
sti
cmpsl
sbb
test
xchg
shlb
mov
addr16
idivb
mov
lds
jnp
inc
inc
mov
xor
in
iret
out
ss
inc
adc
push
das
dec
fistpl
jle
fdivp
popfw
inc
xchg
pop
push
imul
testb
pop
loop
cmpsb
loop
sub
push
sbb
mov
inc
and
sbb
test
shlb
bound
call
xlat
int3
decl
lock
cmp
push
add
les
aam
and
js
push
add
scas
jno
lret
sbb
arpl
add
loopne
lcall
jmp
push
pop
insb
adc
aam
sbb
clc
aaa
roll
or
xchg
lret
test
nop
loop
aaa
scas
insb
scas
fs
mov
scas
or
pop
loop
shrb
cmp
int3
adc
xlat
add
outsb
mov
mov
cld
cmpsb
rcr
jge
dec
pop
pop
jbe
lock
adc
dec
pop
jle
inc
sti
add
xchg
into
mov
push
jnp
out
sarb
mov
lods
mov
cmp
or
pop
pop
loop
adc
adc
jnp
or
dec
and
data16
in
clc
jne
jge
sti
dec
dec
dec
mov
push
loope
push
in
push
add
das
mov
or
ret
mov
pop
shll
xor
add
mov
push
stos
aas
mov
daa
cmp
sbb
cmc
xchg
imul
cld
popa
xchg
into
adc
ljmp
pop
fisubs
loope
filds
push
sub
das
icebp
jae
dec
cli
popw
dec
or
jl
or
dec
adc
movsl
sbb
adc
sbb
lret
stos
push
lock
mov
pop
jmp
or
push
xchg
loopne
push
jb
out
push
jp
and
mov
cmp
mov
xor
das
aas
xchg
xchg
dec
lock
int
das
les
inc
clc
test
bound
add
fisubrl
icebp
fsubl
aam
or
idivl
pop
adc
out
mov
mov
scas
icebp
mov
and
and
inc
lret
imul
sbb
mov
cmp
inc
sbb
mov
or
jl
mov
cmp
outsl
and
pusha
stc
call
test
pop
mov
js
or
xchg
cmp
mov
adc
add
push
add
dec
or
sahf
xor
insl
sub
sub
das
clc
push
icebp
shll
jp
pusha
push
outsb
inc
mov
lret
lret
xor
mov
dec
cmp
cld
cmp
xchg
jle
stos
pop
clc
incl
arpl
or
in
popa
mov
and
push
adc
pop
aad
aaa
adc
loopne
xor
aam
inc
mov
mov
xchg
sbb
iret
call
sbb
cmp
dec
mov
adc
lods
repz
test
push
cwtl
add
pop
adc
fidivs
xchg
xor
mov
jl
cs
add
mov
mov
sbbb
or
or
pop
add
rolb
push
pop
xchg
fsubrs
fnstenv
xchg
decb
cs
cld
lods
pop
or
adcb
imul
scas
jo
jo
push
scas
jl
enter
push
or
pop
add
xchg
loope
cld
adc
out
push
or
movsl
pop
cli
mov
push
and
add
xchg
jo
str
or
ljmp
sub
loope
adc
or
mov
jns
push
push
ret
or
jl
mov
mov
movsb
mov
aad
mov
jns
lret
xchg
dec
dec
push
or
je
adc
lods
shrb
lret
outsb
push
pushf
aas
push
dec
push
rorl
push
decb
add
and
adc
lds
mov
jg
js
push
lea
pop
mov
cs
push
scas
jae
add
loopne
xor
or
and
xchg
mov
jb
out
cli
in
rorl
and
inc
and
mov
loope
pusha
mov
enter
or
inc
push
call
enter
call
add
push
jl
jp
adc
dec
test
and
rcrb
lods
cmp
adc
test
loope
add
inc
lods
pop
xchg
and
insl
lds
xor
test
sarb
mov
add
lds
sub
aaa
sub
rol
add
pop
call
mov
fstps
cmp
dec
inc
rcrb
cmc
inc
add
push
mov
int
js
xchg
sbb
mov
mov
mov
faddl
std
and
adc
mov
dec
adc
andb
adc
inc
fistl
ret
mov
jbe
cli
loopne
scas
pop
jl
add
jge
jge
leave
xchg
enter
sahf
lret
or
cs
cli
add
fistl
mov
mov
mov
mov
leave
add
cmp
push
adc
mov
scas
add
adc
or
clc
jg
mov
fisttpl
mov
pop
mov
dec
mov
cmp
push
mov
test
sub
adc
aas
sahf
push
inc
add
movsl
inc
inc
js
pop
insb
jecxz
push
jae
rcrb
mov
or
arpl
xor
fstl
jg
adc
pop
outsb
aam
xchg
adc
sbb
mov
push
je
cmpsb
shlb
lcall
enter
mov
loop
inc
pop
bnd
jp
pop
mov
arpl
test
adc
cwtl
pop
push
sbb
cli
fildll
adc
pop
add
or
lahf
sarb
push
push
jl
push
sub
cmpsb
adcb
sub
mov
mov
add
enter
jl
lea
inc
xlat
loopne
icebp
loopne
adcl
mov
and
or
and
fcmovne
mov
bound
xor
mov
popa
mov
shrb
inc
test
and
pop
or
sub
decb
sub
mov
repnz
inc
popf
nop
sbb
xchg
add
cs
add
in
inc
jne
jb
xchg
mov
add
xchg
imull
sub
mov
mov
and
inc
scas
scas
pop
add
inc
test
fwait
ja
sti
out
fnstsw
shl
sub
mov
jmp
jno
cwtl
sub
cltd
cmp
pop
add
cmp
push
mov
push
dec
adc
cmp
sbb
inc
sti
lcall
movsl
add
stos
loopne
xchg
fs
cs
dec
bound
icebp
and
xchg
test
movsb
xor
or
mov
cmp
rorb
push
push
in
fcmovnu
aaa
bound
push
xor
and
jl
dec
loop
push
mov
dec
or
dec
adcb
cmpsl
mov
insb
hlt
stc
lret
outsb
mov
mov
mov
push
ljmp
jp
ds
es
cwtl
adc
push
xchg
xchg
push
aad
ret
lods
jo
fstpt
push
pop
push
addb
mov
sahf
mov
aad
fisttps
pushf
push
lds
rclb
movsb
outsl
lcall
mov
cld
xrelease
lret
in
add
out
dec
adc
push
pop
dec
xor
or
stc
in
pop
sub
mov
popf
es
rcrb
dec
push
shr
jmp
and
int3
sub
arpl
xor
cmc
fisubs
sbb
pop
and
ss
pop
add
inc
or
mov
mov
inc
add
cmp
mov
nop
scas
adc
mov
shlb
test
and
dec
pop
adc
mov
mov
ret
add
jo
mov
test
lahf
adc
cmpsb
mov
test
mov
adc
inc
adc
lock
xchg
mov
sub
sar
sub
leave
mov
push
je
imul
scas
cmp
pusha
sub
clc
and
ljmp
mov
mov
jb
xor
or
xchg
test
mov
loopne
push
test
std
cmpsb
pop
stos
adc
fisttpll
outsl
in
adc
repnz
divl
add
insb
stc
xor
clc
fldl
push
fdivs
inc
adc
push
adc
and
dec
dec
test
or
rcrb
imul
mov
stc
add
insl
pop
sub
mov
rcrb
and
fnstenv
pop
jl
jl
test
add
imul
add
sub
rclb
cs
xchg
push
mov
scas
fsts
test
sbb
xchg
out
pop
mov
cmp
jae
pop
sahf
cmp
inc
dec
fidivrs
lock
jae
mov
jg
mov
pushl
xchg
pop
int
arpl
out
mov
lret
dec
shrb
fildll
pslld
call
cmp
fsubr
sub
mov
and
or
and
xor
push
mov
add
sub
mov
call
jb
int
test
pop
add
push
mov
lea
lds
add
sbb
inc
js
les
mov
rcll
scas
stc
shll
test
loopne
es
mov
cmc
mov
xchg
out
inc
jl
mov
sub
add
xor
test
lods
jae
add
mov
ja
les
adc
imull
add
icebp
mov
inc
cmp
jl
or
dec
clc
sbb
shlb
loop
stos
gs
jg
sbb
mov
ja
sub
inc
call
xor
xchg
lods
mov
inc
add
notb
rolb
inc
movsb
out
jo
ja
stos
jo
inc
lret
adc
cmp
orb
das
in
fldcw
adc
aas
ljmp
add
inc
xor
mov
inc
bound
lock
loope
insb
jne
mov
icebp
lret
push
negb
mov
pop
mov
in
lock
hlt
shll
add
xchg
fs
data16
cmp
fbld
xchg
sbb
scas
or
call
mov
fiadds
mov
mov
mov
cmp
add
push
mov
add
mov
fwait
shlb
xor
sbb
scas
clc
or
in
and
xchg
sbb
and
push
or
sub
out
cwtl
pop
push
subb
int
sub
imul
lock
fbstp
call
add
fisubrl
mov
cltd
fs
stc
loop
push
jge
fdivrs
jb
mov
push
into
fidivrs
fmul
mov
sbb
mov
es
sbb
push
lret
push
leave
adc
lock
xchg
call
mov
jbe
cmc
mov
mov
pop
pusha
hlt
mov
cmp
enter
mov
push
dec
xor
add
in
fs
hlt
fwait
push
jno
shlb
aas
mov
shll
lods
cmpsl
or
lock
sbb
push
or
pop
loop
aam
add
das
inc
cmc
ljmp
ds
mov
sub
aas
xchg
mov
mov
cmpsb
pop
js
lods
mov
bound
dec
lret
push
lcall
push
in
stos
dec
jb
lret
mov
cld
out
rcl
sbb
pop
incb
jns
jp
cmp
push
inc
jmp
xchg
and
je
add
sbb
nop
int3
imul
cmp
pop
roll
push
dec
inc
and
mov
jg
cmp
and
stos
jae
inc
dec
mov
mov
adc
lods
cmpsl
or
push
jno
or
in
cltd
mov
add
or
mov
movsl
push
call
shlb
mov
into
adc
aas
insb
pop
test
jp
test
mov
aas
add
push
cld
mov
ja
mov
jmp
cmpsl
pop
cs
roll
lahf
enter
mov
bound
daa
testb
xchg
xchg
fcmovbe
sub
jbe
inc
out
sahf
lret
pop
jmp
xor
or
cltd
jo
bound
ja
xorb
pop
rcrl
nop
rcrb
testb
or
push
adc
ljmp
adc
mov
push
xchg
sahf
loopne
and
cld
xor
add
sbb
scas
mov
and
incl
inc
mov
icebp
jg
jge
shll
pop
sbb
hlt
sbb
push
push
outsl
sti
aaa
add
mov
or
mov
mov
xor
add
xchg
fcmovb
mov
and
inc
sbb
into
rclb
iret
xor
pop
mov
xchg
adc
cmp
add
mov
leave
push
xor
out
in
add
xor
adc
dec
xor
test
inc
call
int3
xchg
cmc
cmp
dec
add
mov
push
mov
jnp
sti
data16
ja
test
jbe
data16
lock
fadd
mov
sub
jg
pushf
scas
addl
cli
push
xor
loope
xchg
clc
jae
popa
or
bound
push
out
sub
jbe
mov
lcall
sbbb
clc
movsb
sbb
xor
push
in
aas
mov
mov
dec
decl
fsubrl
push
jae
outsb
dec
pop
fists
push
inc
or
cmp
clc
cltd
xor
push
outsb
inc
sbb
ret
mov
pop
movl
mov
sub
xor
sbb
sbb
push
and
inc
sub
decl
jo
lds
mov
add
jb
sbb
mov
xchg
or
inc
pop
loop
in
outsl
adc
icebp
sub
push
and
dec
in
mov
psubsw
xchg
push
mov
add
cmp
push
cmp
scas
push
ret
pop
add
loop,pn
or
movsl
mov
loopne
jle
mov
jmp
test
cs
inc
sti
cs
pop
mov
in
mov
lcall
fdivs
mov
and
fisubs
add
xchg
mov
sbb
mov
test
outsb
xchg
insb
loope
sub
enter
ljmp
push
xor
lods
push
add
nop
pop
in
rcll
arpl
mov
imul
mov
add
fimull
das
ret
aas
ret
ret
xchg
shll
sub
cmpsl
sbb
sub
filds
popa
ret
mov
loopne
sbb
or
pop
scas
or
push
imul
lock
addr16
mov
inc
mov
add
add
std
out
loop
mov
xor
mov
xor
shl
pop
ljmp
mov
and
pushl
mov
and
roll
xchg
xchg
jmp
inc
push
lock
std
and
lods
outsb
or
out
rolb
scas
sbb
std
das
xchg
add
xchg
push
cmp
lahf
jns
mov
xchg
lock
or
xor
imul
scas
xor
lods
sub
nop
mov
leave
or
jl
movsb
mov
push
or
out
scas
fnstenv
and
and
push
adc
std
or
mov
xchg
cltd
jmp
sbb
nop
xorl
jl
adc
inc
mov
dec
nop
ss
inc
mov
shlb
jne
inc
jl
pop
or
rcrb
call
cli
lods
mov
sahf
das
stos
not
stc
mov
and
mov
gs
les
mov
into
mov
in
sub
push
mov
adc
mov
push
fnstenv
adc
mov
mov
jge
test
aam
mov
divl
pop
xchg
int
add
cli
test
or
add
clc
push
mov
pop
daa
popf
insb
iret
shll
cmc
sbb
lods
add
ds
pop
cld
sbb
or
dec
dec
inc
scas
sub
nop
pop
scas
test
ret
xchg
sbb
bound
scas
pop
mov
hlt
xor
outsl
sbb
cs
sub
fdivs
je
je
jl
insb
dec
imul
cmp
popa
jns
push
fbld
cmp
arpl
pop
or
and
loop
or
inc
mov
es
cmp
push
lods
pop
lods
shl
mov
test
dec
inc
call
cmp
mov
push
test
push
sub
jg
pushl
xor
es
lret
and
pop
push
jp
add
dec
mov
jo
orl
sbb
adc
or
xchg
pop
xor
dec
stos
adc
mov
ss
nop
fdivp
iret
add
nop
mov
les
pop
cld
push
pop
cli
shl
push
add
out
adc
sub
push
mov
ss
mov
pop
mov
pusha
mov
dec
xor
xor
and
pop
cvtps2pd
sub
cmp
push
xlat
enter
dec
lcall
pop
push
loopne
inc
movsb
pusha
jge
testl
and
daa
cmc
int3
mov
jg
lea
test
mov
and
jno
sbb
fsubrp
lcall
decb
or
add
cmp
mov
cmpsb
fprem
mov
sbb
addl
lock
jp
xlat
mov
cmp
sub
mov
or
shr
mov
add
push
imul
lcall
or
or
inc
data16
jg
shr
lods
adcb
clc
pop
xchg
lret
xchg
or
push
loope
mov
sub
and
insb
ds
imul
std
mov
aam
or
sub
add
inc
nop
lcall
lods
push
aad
fsub
aad
push
lods
adc
add
in
xlat
inc
daa
mov
fdiv
push
cmp
mov
push
mov
cld
sbb
push
jl
hlt
or
icebp
inc
in
push
faddl
pop
cmovne
mov
loop
in
sub
or
jnp
pop
sbb
outsl
stos
push
nop
call
add
test
mov
push
enter
add
mov
adc
mov
ljmp
cmp
mov
jmp
stos
xor
in
mov
test
cmp
movsl
inc
mov
sub
mov
mov
pop
stos
nop
mov
sub
dec
incl
inc
test
adc
decb
xchg
ret
stos
loopne
dec
mov
inc
ss
lods
scas
clc
call
clc
jmp
nop
cltd
mov
movsl
or
xchg
dec
or
cmp
or
sbb
pop
bound
cmp
nop
pusha
xchg
dec
sub
cwtl
outsb
jae
push
bound
loopne
pop
cmp
iret
sub
cld
pop
cs
jno
movsl
das
clc
xor
mov
test
popf
icebp
lahf
lods
das
mov
mov
movsl
popa
jbe
cmp
ja
test
pop
sbb
adc
test
dec
clc
bound
adc
jne
mov
adc
insb
fmuls
stos
fdivp
add
mov
fdivrs
mov
sti
movsb
mov
sahf
jmp
pop
xor
dec
pop
pop
add
xchg
mov
leave
mov
xlat
mov
or
mov
pop
xchg
pop
and
pop
popa
pushf
sbb
scas
adc
addb
add
mov
sti
adc
jmp
xchg
lock
pop
cmp
sub
inc
add
idivb
push
pop
aam
addb
mov
rcll
insb
call
test
cwtl
fadd
aad
xchg
xchg
or
aas
adc
xchg
xchg
jnp
inc
jge
push
and
and
pop
mov
fbstp
cmp
fstl
leave
inc
loop
je
jno
or
loopne
pop
sub
adc
jns
test
or
out
ret
bound
pop
pop
pop
outsb
rorl
lcall
mov
mov
lock
cltd
add
out
loopne
adc
xchg
xchg
lret
rcrb
mov
add
scas
aad
shlb
sti
push
sar
insl
loop
pusha
mov
in
mov
pop
dec
xlat
outsb
js
add
seta
jns
mov
push
cli
lret
mov
daa
lods
cmp
sbb
fs
pop
inc
add
out
push
jge
pushf
stos
push
mov
in
add
mov
int3
fisubrs
imull
in
push
ret
or
or
push
mov
cmp
scas
cmp
addb
clc
bound
dec
fs
jmp
mov
data16
and
rorl
jl
or
je
enter
jge
sbb
popf
mov
mov
jg
push
adc
adc
scas
stos
call
push
int
mov
stos
call
sbb
lds
stos
push
dec
dec
repz
addb
aaa
pop
shlb
lcall
das
xchg
fists
ds
mov
cli
ljmp
dec
sub
clc
jne
sub
lcall
push
fisubrl
leave
adc
mov
push
dec
dec
out
add
pop
fcmovbe
out
mov
dec
xchg
xor
lret
push
fdivrl
inc
leave
pop
dec
add
jmp
inc
or
mov
push
fwait
loope
bound
les
out
scas
movsl
jmp
cmp
je
and
xor
inc
in
xchg
and
pop
push
mov
jl
push
push
add
fwait
or
mov
call
and
add
rolb
push
and
and
or
add
adc
sub
outsb
adc
sarb
rclb
xor
stos
in
and
mov
std
cwtl
ret
sbb
dec
sbb
mov
mov
jbe
or
or
lock
scas
hlt
adc
jg
sub
mov
or
add
pop
xor
sub
mov
aad
adcb
mov
sbb
roll
shll
jno
sar
clc
and
dec
pop
push
in
iret
cmp
das
sub
xchg
jo
inc
pop
pusha
and
add
addr16
clc
imul
push
cs
bound
js
mov
das
inc
out
inc
inc
fwait
xlat
cmp
inc
aas
sub
mov
pop
sub
xor
sti
cmp
sub
dec
cmp
push
mov
mov
sbb
inc
ret
adc
aam
push
mov
aad
jle
js
bound
mov
cmpsb
mov
in
mov
or
add
ss
test
mov
outsl
loop
sti
add
xchg
insb
loopne
pop
pusha
add
inc
cmpb
js
mov
add
inc
bnd
aam
inc
les
add
and
stos
push
xor
mov
lock
cmp
cs
push
nop
lods
shrb
out
cmp
popa
imul
and
les
sbb
data16
push
daa
jb
adc
outsb
xor
repnz
jae
pop
cmp
mov
add
je
sbb
cmpl
pop
mov
mov
xchg
fnstsw
in
cmp
inc
jmp
push
ss
xor
push
idivb
das
clc
push
ret
inc
mov
adc
ds
bnd
xor
ljmp
popa
addr16
scas
push
cmc
add
shlb
pop
dec
sbb
cli
mulb
aad
aas
push
mov
lea
ret
loopne
sbb
mov
push
sbb
push
cltd
mov
addl
dec
ret
test
mov
mov
aam
imul
mov
test
imul
and
and
mov
xor
pop
push
stos
add
or
outsl
dec
mov
aaa
in
cli
insb
icebp
inc
cmp
xchg
sbb
sbb
and
js
adc
call
bound
mov
or
rcrl
jae
jl
inc
fs
push
xchg
ljmp
pop
mov
xor
ret
clc
es
push
dec
pop
sbb
push
inc
adc
aaa
arpl
imulb
jo
out
or
adc
xlat
jle
ja
lret
push
fs
jb
sub
mov
hlt
call
mov
imul
cli
push
xor
hlt
aas
inc
mov
cli
out
mov
push
shrb
jle
sub
xchg
adc
xor
mov
ficomps
loopne
std
lcall
xor
insb
cli
pop
sub
push
push
sarb
js
int3
push
mov
sahf
mov
fdivs
sbb
mov
adc
lahf
lea
push
aam
push
faddl
in
pop
fcoms
or
pushf
aaa
lods
pop
jl
or
aaa
adc
mov
cmpsl
icebp
inc
jle
adc
xor
addb
rorb
in
scas
shll
jg
cmp
sub
js
mov
cwtl
and
push
pop
adcb
cwtl
mov
and
lock
push
mov
scas
test
aam
popa
test
pop
aaa
mov
add
fisubrs
mov
jo
ja
test
cwtl
jne
movsb
sbb
mov
dec
outsb
icebp
into
fimuls
je
cs
xchg
push
pop
insb
outsb
mov
orb
mov
xchg
sub
pop
rcll
scas
add
in
cmc
lahf
cli
idivb
insb
stos
jbe
loop
add
out
call
sbb
loopne
pop
xchg
jp
lcall
loopne
aam
mov
add
xor
sbb
outsb
sbb
mov
cmpsb
dec
loopne
xchg
or
lods
lods
loopne
xorl
sar
popa
jbe
stos
mov
mov
jp
cmp
arpl
clc
into
add
loop
cld
out
cmpsb
call
push
sbb
notl
inc
fsubrs
lcall
lahf
pop
enter
fwait
mov
xchg
push
sub
add
loope
das
mov
lahf
xchg
mov
jecxz
ja
fdivs
sbb
std
rorl
or
test
pop
cmpsl
xchg
fdivr
inc
xor
adcb
jl
xor
push
test
sub
or
scas
push
adc
pop
stc
lcall
jmp
cmpsb
das
aam
cmpl
inc
lea
pop
loope
incl
sbb
sbb
sbb
inc
jnp
and
mov
fdiv
loopne
rolb
jle
push
mov
movb
int3
test
in
xchg
and
loope
mov
mov
lret
inc
dec
fs
imul
lods
aas
cltd
push
dec
clc
fadds
jle
fmull
push
sti
push
incb
mov
pop
mov
xchg
in
lods
cwtl
imul
pop
js
fisttpll
add
mov
and
adc
fiadds
inc
mov
and
push
jle
add
mov
pop
enter
xchg
aam
test
push
xorl
dec
in
ret
adc
add
inc
cld
fcomip
pop
lret
push
inc
add
mov
push
mov
or
pop
or
dec
push
pop
hlt
cmp
int
add
push
pusha
xor
pop
jno
xchg
insl
adc
cmp
shrb
nop
test
add
insb
aas
dec
inc
iret
lret
data16
inc
movsb
xchg
fimull
sbb
ds
adc
cmp
and
jns
dec
jmp
cmpb
sub
nop
mov
push
pop
leave
inc
mov
ljmp
adc
push
and
jae
shrl
pusha
jne
and
jg
inc
dec
add
adcl
rol
repnz
rolb
pop
mov
jne
sbb
scas
cli
add
in
jmp
xchg
in
inc
or
inc
push
lahf
pop
xchg
cli
mov
sub
stc
movsb
fsub
mov
xchg
cmp
rorb
out
ret
ja
adc
push
rcll
ss
loopne
push
out
push
lcall
in
push
pop
xorb
cmp
xchg
pop
add
push
or
xor
repnz
call
insl
jp
pop
jns
xorl
add
adc
or
aaa
dec
mov
enter
hlt
push
aad
jle
int3
fnstsw
jo
push
call
into
ret
ret
int
cs
lea
sub
test
xor
decl
mov
out
bound
sub
mov
dec
ror
daa
test
pusha
adc
inc
mov
mov
sub
sbb
and
insl
adc
nop
sti
std
jg
inc
sbb
lahf
xor
inc
int
imul
int
aam
pop
dec
xchg
ret
cli
popl
scas
imul
mov
movsl
test
in
loopne
pop
leave
aaa
rcrl
lods
xchg
mov
gs
fs
cld
movsb
ret
lock
adcl
add
mov
push
mov
add
xor
shll
ljmp
sti
xchg
sarb
ret
push
xchg
es
sahf
cmpb
repnz
lcall
clc
sub
ret
sbb
jo
lcall
sbb
xchg
int3
enter
inc
push
call
mov
aad
and
sahf
adc
fwait
mov
ljmp
mov
push
push
and
or
cld
insl
sbb
and
push
sahf
mov
je
dec
sbb
ret
sub
inc
xchg
jne,pn
dec
lock
mov
out
sbb
adcl
fwait
and
pop
push
dec
jg
jg
clc
adc
or
push
in
add
mov
ss
add
mov
adc
gs
incb
daa
mov
sub
enter
insb
or
cli
add
add
std
xchg
ljmp
dec
fmull
imul
push
jnp
add
std
add
les
test
mov
iret
sbb
xchg
fimuls
js
push
cmp
jg
adc
push
dec
push
cld
push
inc
in
jg
sbb
pop
jno
pop
shlb
cmp
push
mov
jmp
or
add
inc
in
xchg
imul
pop
sub
jge
cmp
mov
adc
loopne
cmp
push
cmpl
testb
push
mov
cmp
dec
clc
cs
scas
les
pop
lret
mov
aad
add
and
nop
push
mov
mov
cmpsb
out
cs
mov
jp
pop
add
aad
roll
mov
aad
sahf
loopne
jl
sub
add
xchg
decl
push
sub
test
mov
cld
dec
rcr
jno
cmpsl
mov
cli
xlat
sbb
push
enter
inc
sbbb
loopne
mov
dec
cmp
jge
or
xor
or
jb
cs
data16
das
and
ret
je
hlt
push
mov
add
xchg
adc
dec
imul
in
pop
nop
xor
mov
adc
pusha
xor
xor
pop
sub
call
dec
push
push
mov
mov
cld
or
call
inc
shrb
arpl
fisubrs
or
adc
imul
outsb
std
sub
add
ret
mov
loope
push
je
xor
or
mov
xorb
pusha
into
jl
cmp
sbb
mov
fs
cmpsb
cli
sub
call
add
add
pop
xchg
rclb
push
mov
jl
movsl
dec
std
adc
das
push
push
hlt
sub
sbb
or
dec
das
push
out
ljmp
test
loop
lea
pushf
push
lock
xchg
mov
mov
bound
stos
testl
push
aaa
pop
outsl
mov
xor
inc
or
lret
ret
jmp
ret
and
test
mov
mov
mov
fiaddl
fucom
ss
and
pop
sub
sub
add
into
adc
add
sbbb
xchg
orb
jne
aas
add
das
jne
aaa
adc
sub
mov
add
inc
out
or
std
push
fnstcw
int3
loope
mov
or
inc
sbb
push
jb
xchg
xor
test
sbb
sbb
cld
test
lcall
sub
add
or
clc
scas
rolb
pusha
or
adc
imul
fldt
test
es
inc
and
sbb
js
rclb
negb
flds
test
scas
mov
mov
ret
push
imul
adc
clc
adc
mov
push
int3
sbb
mov
loop
hlt
rorl
jp
mov
jl
out
push
sub
xor
xchg
lods
mov
xor
ljmp
lods
and
int3
jmp
aas
and
mov
jg
pusha
fcomi
mov
push
shl
popf
mov
data16
clc
aad
sub
pusha
xchg
jecxz
jbe
test
shl
outsl
cmp
xchg
mov
dec
test
mov
fistps
xchg
pop
ja
or
mov
outsb
xchg
jmp
movsb
fimull
mov
add
sahf
jmp
scas
inc
loope
enter
into
xor
xchg
push
push
push
push
fadd
fistl
sbb
fwait
or
inc
xchg
lds
in
adc
clc
hlt
inc
push
std
inc
push
add
add
insb
cld
ljmp
mov
inc
pusha
add
repz
mov
jg
add
cmp
ja
jmp
cmpsl
sbb
fldl
insb
pop
lcall
imul
scas
mov
call
add
or
dec
out
inc
push
lds
push
jl
pop
push
rorb
and
push
mov
or
call
pop
cmpsb
roll
mov
sub
pop
hlt
jg
ja
pop
inc
test
sbb
mov
push
shlb
loop
add
testb
lods
push
pop
mov
repz
pop
sbb
addr16
orb
hlt
pop
pop
xchg
mov
rcl
lds
inc
cmp
pop
add
adc
les
add
push
inc
out
xor
or
push
inc
xchg
rorb
inc
pop
jb
pop
pop
repnz
std
mov
sub
jbe
push
leave
jmp
fwait
xor
ja
xchg
cli
fistpll
cwtl
add
out
add
adc
mov
out
push
stos
add
es
dec
loopne
loopne
ret
adc
incl
push
lock
dec
pushw
push
fdivl
in
repz
add
test
test
push
aad
out
xor
popa
stc
fiadds
cmp
push
adc
jge
into
std
pushf
cld
and
fwait
clc
lret
shrb
jmp
or
aam
add
adc
fs
and
or
subl
sub
jl
test
and
jle
pop
test
loope
push
inc
cld
shrb
and
pop
mov
test
and
mov
jo
inc
ja
mov
cmpsb
cltd
fisttpl
aaa
lds
fbstp
test
loopne
fucom
aaa
js
mov
icebp
add
outsl
shrl
lret
xor
jbe
sahf
mov
xchg
mov
loopne
into
push
pusha
ret
fisttpl
add
and
jns
cld
loopne
adc
fadds
or
mov
mov
jmp
dec
push
or
ss
divl
jno
lock
push
loop
.byte
lods
cmp
pop
test
xchg
add
inc
add
fistl
or
dec
add
add
add
push
dec
add
inc
gs
in
dec
outsl
fs
gs
popa
outsb
or
bound
and
jb
xor
inc
add
decl
mov
inc
mov
mov
pop
mov
aaa
pop
scas
mov
repz
clc
dec
ss
mov
xchg
call
inc
fs
leave
pop
sbb
lret
mov
mov
jle
pushf
jecxz
int
xchg
adc
jg
in
pushl
mov
imul
cmpsl
add
in
mov
jg
jg
sub
cwtl
inc
cs
mov
sahf
inc
cmp
jle
mov
movsl
sar
imul
jns
mov
mov
dec
bound
sub
mov
cmpsl
add
inc
mov
mov
jle
stos
test
hlt
add
insb
jmp
ficompl
ja
in
dec
sti
or
cmpsl
cmpsl
mov
mov
pusha
push
dec
mov
add
mov
dec
add
adc
pushl
and
imul
sub
mov
dec
mov
inc
dec
lahf
pushl
mov
test
pop
push
xchg
mov
mov
cmp
fisubl
mov
jbe
insl
lret
adc
pop
add
dec
sbb
mov
mov
addr16
pushl
sub
fcompl
pusha
fsubrl
sti
inc
push
aad
sub
ss
add
add
mov
and
es
aaa
mov
push
adc
dec
call
dec
mov
and
mov
leave
or
sbb
mov
mov
imul
mov
loop
push
mov
mov
insb
push
xor
dec
mov
add
pusha
mov
add
mov
arpl
adc
ret
push
lds
scas
or
int3
mov
hlt
incl
ror
in
call
add
inc
inc
mov
mov
loopne
lock
fbstp
push
aas
push
push
sub
xchg
orb
sub
lcall
push
and
add
add
cmp
ds
cmp
adc
sbb
inc
pop
or
cmp
fsubr
push
push
cld
push
adc
jno,pt
insb
cmc
idivb
mov
add
mov
sahf
mov
jb
mov
fisubrl
or
dec
cs
lds
or
mov
mov
add
cmp
rcll
cmp
jb
and
loopne
push
push
lock
ret
mov
fdivrl
fstpt
sar
sbb
push
popa
and
pop
add
xchg
push
cmp
pusha
adc
push
insb
fwait
mov
loope
add
push
stos
loopne,pt
inc
mov
mov
shlb
loopne
adc
mov
add
adc
fdivrs
sbb
std
xchg
or
icebp
roll
call
repz
and
inc
mov
adc
mov
xchg
jbe
jb
jmp
pusha
xchg
sbb
mov
cmp
rcr
jo
std
xlat
inc
aaa
lods
dec
cwtl
lret
mov
sbb
pop
jge
mov
sbb
add
push
or
ret
mov
dec
push
sub
jg
outsl
fidivl
lcall
and
or
ja
std
mov
mov
ljmp
dec
mov
inc
imul
decl
or
mov
cmp
mov
add
mov
add
cli
mov
leave
andb
cs
pop
jecxz
sub
mov
mov
and
dec
sub
or
mov
mov
sub
mov
mov
xchg
mov
sub
mov
and
mov
mov
cmpb
xchg
idivl
and
mov
fsubr
scas
inc
push
test
mov
push
pop
ja
shl
pop
mov
pop
mov
call
xorl
sub
add
xchg
loop
inc
outsl
out
clc
dec
jmp
scas
scas
loop
ja
clc
adc
pop
mov
decl
or
xor
leave
mov
es
call
loopne
inc
add
addl
rol
lcall
pop
adc
fcmovne
or
jae
inc
mov
inc
les
add
add
aad
jbe
add
pop
pop
pushl
jl
add
push
dec
pushf
or
js
aaa
aaa
out
pop
insl
jne
xchg
movl
xor
ficoms
add
add
das
mov
adc
push
cmpb
mov
sti
aad
repnz
cltd
je
test
shrl
addb
cld
aad
sub
nop
inc
add
rorb
aas
fwait
or
xchg
lea
nopl
popf
pushl
add
mov
ficoms
hlt
fstps
jecxz
iret
or
call
push
fldt
fwait
sbb
les
xchg
fcmovnbe
lods
dec
iret
inc
jns
dec
xorl
insl
mov
mov
add
mov
and
adc
cmpsb
pushl
or
mov
and
pop
pop
aaa
out
inc
lods
loopne
cmpsb
scas
jp
push
ss
and
lock
jns
mov
cmp
jae
faddl
sbb
loopne
sarl
mov
rclb
loop
jle
or
cmp
ja
and
popf
subl
jg
sub
out
mov
inc
fists
sbb
lock
data16
fistl
mov
mov
dec
jp
scas
cli
xchg
xchg
add
inc
mov
add
push
and
iret
dec
scas
fisttpl
or
inc
adcl
je
inc
pushl
insb
push
cmp
js
mov
test
or
subl
movsl
inc
adc
lds
pop
pushl
pushf
movsb
jmp
mov
push
shll
inc
or
jl
mov
mov
out
cmp
in
mov
loope
inc
stos
mov
cmp
jo
loop
test
ds
cmp
and
pop
sti
mov
sub
cmp
add
add
mov
xchg
or
ljmp
cmp
ja
mov
or
mov
and
data16
enter
mov
mov
xchg
mov
xor
push
or
aad
ljmp
and
fldl
inc
and
cmpsl
jg
ret
and
cmp
stos
rol
icebp
cmp
jge
das
mov
cmp
cld
xchg
add
sarl
xor
xlat
mov
mov
iret
xorl
xchg
jg
pop
push
addb
inc
add
push
mov
sbb
mov
std
mov
mov
mov
xchg
and
xchg
mov
je
mov
xor
imul
xor
mov
loop
mov
push
lret
jae
adc
call
ret
mov
add
mov
push
aad
xchg
test
insb
in
xor
in
lock
jg
adc
adc
pop
enter
addr16
enter
xor
jg
jecxz
sarb
mov
add
inc
push
dec
repnz
sbb
in
fisttpll
push
inc
cld
add
aam
sub
mov
mov
or
xchg
clc
cmp
leave
add
mov
mov
imull
add
push
shlb
mov
pop
mov
incl
sub
sbb
out
mov
mov
push
loop
dec
adc
rcll
sahf
or
jno
jge
pusha
cmp
sub
sbb
jp
mov
pop
test
aam
lods
icebp
mov
fstl
shlb
mov
fs
shlb
push
ljmp
mov
ja
inc
inc
rolb
sub
mov
sub
pusha
aad
addb
std
roll
mov
and
adc
inc
enter
sub
mov
pushl
adc
fnstenv
pop
mov
push
inc
outsl
xchg
push
and
iret
mov
add
jp
cltd
pop
or
hlt
es
in
out
adcb
xchg
ss
aad
mov
add
das
enter
xlat
testb
incb
psadbw
outsl
jg
inc
imul
mov
lods
mov
sti
stos
cli
aaa
jl
pop
cwtl
and
ret
dec
test
jp
or
mov
dec
repz
push
lods
cmp
lock
pop
cmp
rcrb
push
mov
mov
test
ret
lods
clc
mov
scas
sbb
jg
out
inc
mov
mov
add
push
pop
sub
mov
sub
push
add
add
jle
ud0
pop
push
jl
pop
add
lods
cmp
jecxz
push
ret
and
sbb
and
je
sub
xor
outsl
jl
push
fscale
push
mov
jo
mov
ja
and
dec
mov
in
add
add
push
test
add
aad
push
ljmp
les
mov
sub
lock
push
mov
cli
pushl
cwtl
pop
es
pop
pop
add
js
fists
fwait
mov
divb
scas
cld
add
xorl
aaa
in
and
cmp
sub
out
lret
inc
rcll
rcll
ja
pusha
push
out
decl
ret
sbb
call
xchg
mov
lcall
inc
call
test
in
stc
iret
mov
mov
bswap
subb
xor
nop
sti
fsubrp
pop
or
iret
pop
xor
insl
ds
movsl
insb
inc
sub
or
jp
pop
gs
push
xchg
xor
inc
das
pop
icebp
add
sarl
push
mov
outsl
les
sahf
popa
js
sub
sbb
or
mov
fs
inc
adc
addb
xchg
mov
lds
push
pop
out
sub
addr16
stos
arpl
aam
sti
mov
lret
adc
jb
cwtl
mov
out
jp
sub
or
lcall
mov
movsl
jp
pusha
xor
hlt
and
std
jbe
incl
mov
lock
jle
xchg
inc
pushf
sub
incl
inc
sbb
cmp
popa
mov
cld
mov
mov
add
je
add
fucomip
and
adc
add
xor
jmp
dec
fwait
arpl
pop
cwtl
pusha
lock
add
cs
cmp
xchg
fucomi
mov
push
loop
dec
push
adc
jo
dec
mov
pusha
dec
stos
cmc
sahf
mov
sbbl
mov
mov
mov
xor
cwtl
dec
push
jo
xor
fsubrl
mov
mov
mov
jb
mov
mov
jns
inc
dec
dec
adc
loopne
push
jbe
xor
sbb
les
iret
subl
xlat
or
adc
jo
cmp
xor
add
in
jl
adc
pop
pop
xor
push
cltd
test
mov
in
or
add
mov
mov
lea
or
clc
cmpsb
rorb
lock
cwtl
jg
je
mov
inc
adc
mov
xor
adc
fdivs
fbld
sub
pop
mov
xchg
dec
mov
push
int
int
hlt
sahf
dec
inc
adcl
adc
sub
dec
in
xchg
sbb
roll
js
mov
xor
jmp
xchg
mov
test
mov
les
ljmp
cmp
imul
mov
mov
in
mov
adc
ret
outsl
into
pop
sub
ds
cli
jo
jmp
incl
je
das
add
nop
mov
mov
andb
mov
or
xchg
lret
addr16
adc
cli
fists
or
add
hlt
push
sahf
call
xor
or
icebp
repz
cmc
adc
mov
je
add
cmp
cmp
xchg
adc
loope
sbb
fdivs
in
adcl
pop
sub
iret
pushf
and
mov
mov
pop
lcall
inc
add
smsw
add
jbe
out
je
inc
adc
or
fistpl
ja
pop
mov
add
cltd
test
push
push
nop
clc
push
sub
cmp
xor
cmp
xchg
mov
push
rclb
js
ficompl
loop
dec
in
js
hlt
xchg
mov
adc
dec
ficoml
testb
incl
and
and
shlb
clc
hlt
jo
frstor
xor
sbb
out
dec
push
adc
push
cli
std
cmc
and
cltd
mov
xchg
out
add
add
in
sbb
lcall
pop
in
cld
out
test
mov
cwtl
sbb
cmp
jmp
xor
scas
sbb
es
sbb
mov
push
jle
cmp
dec
ret
mov
add
add
add
decl
xchg
sti
lret
fwait
push
cli
cmpb
or
mov
adc
fmull
popa
cmp
fsub
cmp
arpl
sub
outsb
les
ljmp
clc
orb
inc
mov
xor
lea
inc
push
pop
lock
rcll
push
mov
aas
in
rep
ret
outsl
adc
inc
out
mov
xchg
cld
add
or
outsl
adc
loop
in
ljmp
enter
aaa
inc
addr16
rorl
pushf
and
rcll
repnz
inc
and
or
clc
jbe
fisubrs
loopne
pop
inc
pop
lcall
pop
sub
mov
or
out
pushf
mov
outsl
mov
into
mov
cmc
sti
xor
mov
pop
hlt
out
jbe
dec
jnp
and
cmpsb
in
pop
sti
dec
push
inc
mov
repz
add
and
ljmp
mov
test
jo
dec
jmp
add
movsl
mov
inc
ficoms
xor
xor
pushf
ds
outsl
fdivs
add
fdivrs
jno
pushf
pop
stc
clc
add
das
inc
mov
cs
xor
test
mov
aas
clc
in
jo
mov
xchg
push
test
pop
inc
inc
and
lds
shlb
jecxz
icebp
add
mov
push
add
repz
inc
sub
add
push
mov
sbb
ljmp
imul
jnp
aad
xchg
jl
adc
shll
rolb
pop
pop
and
data16
mov
imulb
pop
push
xchg
mov
rcrl
push
in
mov
in
js
out
daa
jo
mov
fstl
lods
push
push
sbb
cs
mov
incl
xchg
pop
imul
mov
mov
xor
mov
mov
ret
aam
daa
xchg
test
stos
mov
arpl
add
adc
cmp
out
jb
push
adc
adcb
pop
jnp
add
adc
add
push
mov
jge
jle
stos
mov
mov
add
stos
sub
adc
pop
addr16
gs
add
mov
jl
add
jg
adc
int
or
mov
jg
push
sub
jp
and
es
mov
or
xor
mov
xchg
xor
scas
pushl
mov
sarl
mov
stos
popf
sti
arpl
add
orl
shr
outsl
mov
add
clc
scas
mov
xchg
mov
data16
xor
fcoms
divl
sbb
dec
cld
mov
adc
jp
inc
dec
aad
mov
int3
mov
sbb
xchg
dec
add
clc
pop
cs
mov
mov
cmp
cmp
push
int
pop
pop
in
loope
jg
jp
cmc
pop
or
sbb
out
mov
adc
jmp
lods
lock
inc
add
jmp
mov
jbe
push
xor
and
into
inc
xorl
mov
mov
or
loopne
ret
push
pop
push
mov
push
loopne
cmp
decb
dec
or
into
sbb
push
stos
sbb
sub
adc
outsb
push
lock
or
sub
mov
jmp
test
push
xchg
xor
mov
jle
lds
add
sbb
sbb
push
inc
push
rorb
mov
fucomi
icebp
scas
mov
loope
fcomps
aam
adcl
mov
jae
xchg
lods
in
sub
lds
fists
pop
mov
mov
loopne
or
push
mov
dec
pusha
dec
ror
cmpsl
aad
add
stos
xchg
addl
int3
pop
sub
mov
sti
add
cs
cmp
sbb
dec
enterw
ffreep
lods
fldcw
sbb
pop
dec
mov
test
sbb
clc
incl
outsb
xor
push
sbbl
xor
loopne
jg
push
in
lods
push
mov
push
and
int
mov
xchg
mov
cli
mov
xchg
sahf
mov
scas
inc
fistpl
add
push
cwtl
insl
or
add
mov
mov
rol
in
std
mov
adc
cld
cli
pop
or
mov
sub
divb
btr
ret
pop
cwtl
mov
dec
and
jl
aad
pop
inc
mov
cmp
test
sahf
add
ss
ja
stos
aam
scas
shlb
jo
mov
mov
mov
cmp
shr
pop
cld
pushl
xor
lods
movl
ds
shr
inc
clc
jno
loopne
loop
pop
cmc
inc
xchg
ds
in
sub
loop
testb
adc
add
test
inc
pusha
lcall
sbb
cwtl
into
fwait
lcall
loope
xor
das
push
inc
ret
imul
js
outsb
lcall
add
xchg
pop
stc
pop
jo
sti
stos
repnz
pop
hlt
or
mov
and
dec
data16
outsb
adc
call
cmpsb
fmull
push
dec
sub
mov
dec
push
xchg
call
adc
push
mov
mov
lret
test
jb
cmpsl
xchg
std
sbb
insb
fstpt
rcl
fnstsw
mov
inc
out
aaa
jb
aaa
stos
adc
dec
lock
or
int3
add
addr16
jge
mov
xchg
and
xlat
dec
fisttpll
roll
test
mov
test
mov
dec
push
or
or
or
and
mov
outsl
or
repnz
arpl
mov
sub
cli
inc
jge
xchg
lods
xor
jbe
int
js
pop
ds
mov
leave
xchg
cmp
aad
incl
shrb
cmp
cmpsb
iret
test
lock
or
adc
add
test
decl
or
and
add
xorl
jbe
loop
fidivrs
xor
test
push
js
mov
push
sbb
dec
fnsave
int3
loop
mov
pop
cmpsb
fs
push
les
cmp
ss
jp
inc
adc
incb
ret
lahf
inc
jl
pop
cmpl
icebp
int3
mov
sbb
ficoms
push
add
dec
xor
mov
cmp
xchg
or
pop
pushl
inc
bound
aaa
cmp
cmp
jmp
mov
mov
mov
dec
mov
and
cmp
sahf
cmp
lods
adc
jmp
daa
scas
jb
dec
fcoms
lea
push
push
mov
cs
xor
out
xchg
push
mov
fsubp
fwait
xor
dec
popa
repnz
cmp
mov
inc
dec
fdiv
andl
mov
sti
and
movsl
fwait
or
adc
cmp
arpl
cmp
jecxz
pop
mov
pop
add
dec
pop
add
hlt
inc
mov
jg
sbb
stos
jo
aam
mov
ljmp
inc
mov
push
mov
scas
or
ret
and
jg
pop
dec
negl
cltd
xchg
mov
orb
in
decb
in
dec
cld
add
and
adc
aam
sbbl
loopne
push
mov
sub
jne
jbe
pushf
cmp
aam
dec
lds
sti
call
xor
mov
mov
mov
fincstp
pusha
inc
xchg
shlb
xchg
xchg
decl
sub
adc
sahf
pop
mov
test
xor
outsl
lcall
jbe
xchg
xor
in
vmovups
xor
call
loopne
aad
cmp
jb
jb
test
outsb
mov
dec
or
xor
dec
push
adc
cmp
push
pop
addb
jo
and
enter
inc
adc
dec
andl
je
test
add
les
push
sub
cmp
or
mov
test
cmp
clc
jecxz
icebp
jmp
icebp
addr16
add
adc
cmpsl
shlb
mov
cmpb
dec
ret
jnp
test
and
xchg
cmp
or
mov
push
loop
jb
add
pop
gs
sbb
ficomps
inc
fnsave
cmp
call
jg
mov
inc
ret
and
adc
dec
cmp
inc
mov
and
out
mov
loopne
sub
ror
repz
lcall
cltd
xchg
inc
xchg
int
or
jo
cli
add
mov
stos
mov
adc
and
pop
ret
adc
add
jl
sub
push
bound
shlb
nop
mov
jmp
jg
clc
call
cmpsb
mov
scas
pop
pop
out
loope
and
dec
hlt
inc
mov
jo
push
xchg
shl
add
iret
dec
in
dec
sbb
int
idiv
pushl
sbb
add
dec
movsb
add
push
dec
push
movb
fbstp
aas
sub
jmp
pop
mov
mov
or
and
out
push
gs
push
fsub
je
arpl
and
inc
cs
mov
pushl
jecxz
mov
in
add
cltd
loop
sbbb
out
fldt
mov
hlt
jae
xor
pop
stos
push
mov
cld
mov
jmp
jl
sbb
or
or
outsl
cld
mov
out
js
sub
and
push
mul
push
lahf
mov
fiaddl
aad
jmp
mov
ret
into
call
sti
incl
mov
or
adc
lods
jecxz
pusha
inc
popa
adc
lea
mov
push
xchg
movsb
mov
adc
add
adc
cld
xchg
fists
mov
sti
mov
lods
adcl
mov
lds
sub
adc
mov
jb
mov
push
dec
sbb
cmp
ss
lods
xor
cld
scas
cmpsb
mov
cmc
sub
negl
and
das
pop
adcb
push
and
out
test
mov
pop
ret
jg
pop
jle
mov
outsl
mov
test
jecxz
filds
push
xor
fwait
jae
mov
iret
cld
xchg
nop
lahf
inc
loopne
push
aaa
ss
mov
mov
test
int3
fildl
aaa
cmp
outsl
xchg
mov
push
ja
test
adc
out
lds
mov
push
and
lahf
mov
stc
lods
mov
xor
jge
mov
cmp
ret
inc
insb
sbb
adc
clc
stos
orb
je
pop
fs
add
push
mov
popa
push
insb
pushf
hlt
or
lcall
or
sarb
mull
lock
popa
fidivl
aaa
insb
and
imulb
add
add
inc
pop
mov
cli
ljmp
cld
push
add
inc
or
popf
enter
push
ss
adc
es
dec
out
rorb
add
mov
scas
mov
add
in
jmp
push
sub
pop
mov
mov
ds
pop
in
imul
mov
add
addr16
sub
xlat
or
push
lods
dec
lcall
dec
gs
sarl
mov
jb
xor
mov
or
fwait
mov
mov
mov
dec
mov
jg
sarl
repnz
jb
or
fcmovb
mov
in
shll
jb
aaa
mov
pop
out
js
push
bound
cmc
push
pop
rcrb
shrb
mov
mov
mov
or
or
push
jbe
ss
pop
sbb
jle
or
cmpsl
repz
in
push
add
pop
aas
shr
test
cmp
out
or
movsb
shrb
loopne
and
mov
mov
ret
push
adc
mov
lock
shrl
push
add
dec
ljmp
out
push
mov
out
adc
cmpb
push
cmc
jo
mov
sub
gs
xchg
mov
dec
cwtl
lret
add
insb
outsl
dec
clc
add
das
xchg
mov
jmp
jmp
push
out
mov
lock
jg
sbb
iret
xchg
insb
mov
ret
movsb
fs
enter
call
mov
dec
mov
mov
mov
push
dec
mov
pop
sarl
test
cmpsl
ret
push
mov
xchg
call
adc
or
loop
adc
gs
subb
pusha
add
mov
or
mov
xchg
add
sbb
test
fsts
fisubs
inc
lods
rorl
loope
mov
dec
sub
xchg
jnp
add
pop
push
adc
cli
mov
and
xor
loopne
mov
add
push
inc
inc
jae
cmc
or
stos
sbb
pop
fdivr
out
push
inc
in
jbe
push
in
mov
fadd
cmp
int3
xorb
add
cmc
dec
fistpl
sbb
jl
jmp
outsl
roll
hlt
int3
mov
mov
sub
shlb
popf
mov
and
orl
ror
lret
sub
pop
push
and
testb
cmpsb
or
jg
pushl
hlt
dec
call
jge
xchg
cmpsl
sbb
xor
or
iret
mov
lcall
xor
enter
lret
pusha
ljmp
lret
add
and
mov
jae
pop
sbbb
jo
pushf
cmp
call
lcall
adc
enter
testl
dec
cmp
inc
js
lcall
mov
popa
jmp
mov
push
mov
or
mov
mov
clc
out
or
add
testb
les
hlt
mov
ret
lock
jo
and
ret
xchg
sbb
push
mov
scas
add
jns
dec
sbbl
xor
mov
test
ljmp
dec
lods
xchg
icebp
mov
bound
roll
xlat
add
fcomps
call
ret
pop
sbb
call
fwait
fs
mov
mov
fistpl
das
and
ss
clc
jb
sub
bound
or
pop
mov
adc
push
lods
movsb
push
test
jle
fldl
scas
ds
loop
jb
popa
add
movsb
lret
pop
lock
mov
mov
adc
xchg
pop
pop
out
and
test
cmp
in
cmpsl
pusha
ds
mov
mov
inc
lods
mov
mov
stos
lock
dec
pop
mov
sub
mov
jbe
jae
subb
or
pop
outsl
stos
xchg
stos
imul
or
pop
mov
les
push
test
fcoms
sarl
hlt
decl
movsl
pop
ss
nop
or
push
enter
or
xor
xlat
sbb
jmp
rcrl
arpl
mov
cld
mov
sti
dec
cmp
push
inc
mov
push
insb
ret
fcomps
dec
xor
adc
pop
or
jb
out
mov
sbb
lods
sbb
faddl
push
repnz
jae
nop
incl
popa
xchg
shr
push
cmpsb
mov
add
adc
xlat
push
adc
push
add
inc
adc
pop
insl
inc
push
out
hlt
push
sar
mov
jg
cwtl
clc
daa
addr16
dec
inc
filds
ljmp
mov
and
out
and
ret
aad
pop
push
lahf
cmp
sub
cmp
pop
loopne
mov
pop
mov
shrl
mov
cltd
and
cmp
add
push
jmp
inc
mov
adc
lea
fbstp
insl
shll
andb
daa
lret
test
test
scas
mov
ss
sbb
cwtl
bnd
adc
cmc
pop
xor
stos
loop
fildll
adc
pop
and
pop
xor
nop
clc
call
test
je
add
addr16
jle
jae
or
pop
push
jge
pop
in
cwtl
cmc
mov
mov
sahf
cwtl
pop
add
mov
js
add
adc
ja
push
inc
cld
push
jmp
cmp
cld
mov
pusha
pop
sbb
and
data16
mull
inc
sahf
addl
xchg
jbe
clc
lcall
lret
lret
or
add
repz
inc
mov
clc
hlt
enter
loop
cmpsl
and
add
dec
add
adc
or
call
insb
sarb
hlt
in
xchg
hlt
lea
push
fwait
and
pop
mov
sbb
ret
sub
lcall
stos
push
in
push
mov
pushf
or
mov
jmp
push
leave
fisttpll
test
rorb
cmp
mov
cli
out
jne
adc
sarl
cmc
pop
outsb
or
or
hlt
pusha
mov
adc
jecxz
xor
cmp
cli
xchg
enter
in
test
push
xor
adc
jno
mov
add
into
sub
hlt
xchg
pushw
pop
push
and
popa
push
cld
in
fildl
stos
mov
mov
test
sbb
pop
xchg
mov
sarb
mov
lret
jns
or
nop
push
fwait
daa
add
movsb
test
int
ret
mov
lock
add
jg
fbstp
xor
ficomps
js
flds
jno
sbb
dec
ds
sub
xchg
xchg
mov
lods
cli
incl
in
adc
sti
jns
daa
imul
adc
xchg
and
adc
test
ss
mov
imul
mov
jns
push
push
fcoml
mov
adc
jp
ficomps
dec
movb
lock
lret
shrb
jbe
aam
iret
mov
or
and
sbb
jne
mov
push
jp
adc
sbb
and
sbb
push
stos
add
pop
call
call
sub
fcomi
sbb
and
or
xor
inc
push
push
mov
inc
jmp
call
adc
cmp
popa
add
mov
sbb
outsl
fcmovnbe
mov
dec
ret
xor
jnp
mov
or
decl
sti
inc
add
flds
push
stos
aas
mov
mov
imulb
push
repnz
cwtl
jge
stos
mov
in
mov
cs
icebp
loopne
or
les
cs
mov
cld
out
mov
pop
push
cmp
jecxz
cmp
imul
stos
subb
call
cmp
rol
imul
jb
lahf
fstpl
clc
incl
mov
push
sti
or
ret
lcall
ljmp
decl
xor
add
stos
mov
call
xchg
shll
rcr
lds
mov
mov
cld
sbb
jb
push
cmpsb
adc
lds
iret
add
sub
and
popa
ror
rclb
sahf
push
mov
jno
test
jns
jp
cmp
push
cli
inc
fwait
xorb
push
pop
aam
jae
orb
inc
add
stos
aas
inc
sub
fsubs
pop
data16
adc
movsl
aaa
ljmp
cmp
pusha
cltd
mov
pop
cli
jg
mov
pop
mov
jo
ss
movb
insl
xor
mov
shrl
scas
aas
cld
fnstsw
push
test
cmp
ret
dec
inc
call
mov
or
add
push
pop
or
in
jmp
dec
mov
mov
mov
pop
pop
inc
lods
xorb
ret
icebp
hlt
insl
mov
push
loopne
add
aaa
cmpb
add
loopne
mov
lret
pop
inc
add
hlt
aaa
sbb
stc
dec
scas
mov
mov
cmpb
outsb
xor
data16
movsb
sahf
je
pop
repz
fs
pop
daa
test
cltd
in
mov
push
insl
or
xor
lods
movsl
cld
mov
test
push
jmp
mov
test
lahf
imul
cld
mov
pop
lods
mov
xor
jge
mov
les
add
jg
int3
test
mov
fldcw
inc
mov
shll
out
loope
in
sub
loopne
pop
mov
int3
xor
jg
push
ret
push
and
cmp
dec
clc
pop
ret
xor
bound
loopne
jb
adc
movl
dec
pop
mov
jo
repnz
hlt
pop
pop
call
pop
xchg
enter
sbb
mov
or
add
in
push
dec
jg
or
jp
or
jg
jo
inc
cmp
test
jb
cwtl
mov
jnp
stos
lahf
insl
hlt
jne
mov
jb
push
and
or
pop
aas
pop
and
push
push
push
loopne
aad
lods
out
loop
icebp
shrb
jl
adc
iret
mov
cli
sbb
adc
repz
cmp
stos
scas
mov
clc
mov
adc
je
and
aam
dec
or
clc
ss
jle
push
mov
pop
repnz
push
push
out
pop
xchg
cli
mov
aad
mov
sahf
aaa
inc
cmp
leave
and
add
clc
in
jmp
xchg
mov
popa
js
xchg
in
cmp
inc
leave
pop
mov
xchg
cld
adc
lea
or
fcomip
cmp
jle
in
sbb
sbb
xchg
mov
out
test
xlat
inc
gs
pusha
mov
orb
add
pop
lock
sarl
into
fistl
adc
gs
dec
shl
sub
ja
dec
in
cmp
pusha
pop
int3
push
cwtl
bound
jb
dec
testb
fisubl
cmp
mov
mov
dec
imul
mov
xchg
add
in
shlb
decb
dec
faddl
and
mov
pop
lock
loopne
bound
loop
insb
idiv
sbb
mov
repz
dec
cmpsl
out
mov
stc
mov
xchg
pop
mov
jg
stos
add
clc
inc
lret
mov
sbb
sbb
add
mov
jbe
jg
add
mov
ljmp
cs
and
inc
pop
sahf
dec
sahf
jle
mov
fistpll
loopne
adc
in
and
test
roll
out
clc
jns
cmp
cmp
add
mov
fcom
push
icebp
pop
add
mov
data16
cmpb
inc
rcrb
sahf
xor
mov
cld
jmp
cld
lret
add
testb
enter
stos
xor
fbld
js
and
mov
clc
or
sbb
arpl
pop
std
xor
pop
pop
call
cmpsb
or
insb
or
mov
or
mov
ss
stc
mov
xor
negb
cmp
xchg
ficomps
rolb
jno
out
jg
lock
lret
test
cmpsb
and
lret
xor
loope
ror
cmpsb
and
jo
imul
int3
pushl
xor
or
add
arpl
inc
ret
stos
in
call
out
movsb
or
cmp
hlt
pusha
or
dec
push
neg
fidivrl
ss
jb
fs
jecxz
loop
mov
or
test
cmp
lcall
dec
insb
cmp
add
mov
add
sbbl
inc
aad
mov
push
mov
pop
mov
enter
aam
or
sub
movsl
or
aad
cmp
xchg
push
or
sub
jno
daa
mov
mov
sub
jo
add
outsb
cmp
lods
mov
cmp
xor
push
lock
xor
jle
mov
mov
add
popa
xchg
outsl
add
shrb
sbb
sub
dec
mov
shll
cld
dec
dec
aad
shl
or
push
lods
add
outsl
cli
xchg
stc
and
and
lahf
mov
add
fld
dec
pop
push
cmp
xlat
cmp
push
idiv
xchg
loop
add
inc
ja
bound
cmp
jg
je
dec
sbbb
push
in
inc
andb
cmpsb
mov
push
orl
add
pop
sub
outsb
jne
pop
out
push
int3
stos
or
inc
sbb
shll
jb
mov
mov
sbb
call
inc
mov
push
cmp
scas
or
mov
add
push
lcall
mov
inc
addl
jecxz
test
add
sub
sub
pmaxsw
push
cmpl
lcall
push
adc
in
cmp
scas
clc
pop
je
sbb
add
pop
cmp
push
sub
call
mov
xor
pushf
gs
fcomps
or
data16
dec
outsl
xor
rclb
insb
ret
out
into
mov
ljmp
clc
mov
mov
cmpsb
in
mov
jp
mov
aaa
inc
push
int3
jnp
out
add
fwait
sbb
jbe
jg
jbe
pop
test
add
lcall
xchg
sbb
pop
push
mov
pop
mov
int3
add
std
lret
idivl
loop
popa
lock
cli
out
add
lea
pop
mov
and
cmp
loop
sbb
loope
add
rolb
clc
push
inc
cmp
jp
cmpsb
lods
loope
sbb
jp
pop
push
sbb
inc
in
leave
bound
and
push
add
inc
es
mov
aad
scas
pushf
rorb
adc
outsb
lea
dec
pxor
mov
and
das
rcl
push
mov
dec
insl
mov
add
clc
movsb
mov
into
pop
inc
aam
push
lods
in
idiv
xlat
dec
rclb
xchg
mov
addr16
fbstp
sbb
jb
xchg
popa
xchg
aam
jnp
das
or
mov
pop
emms
xor
jmp
lods
push
loope
add
jb
mov
insb
enter
jle
test
mov
nop
idiv
pop
jl
jecxz
mov
pop
sub
jl
sub
aad
cmp
pushf
cmp
mov
in
and
out
mov
test
or
adc
xchg
jmp
sbb
cmpsb
ret
loopne
test
pop
pushf
enter
stos
sbb
sub
int
pop
pusha
jge
push
pop
add
xchg
pusha
xchg
andl
decl
and
and
enter
dec
mov
fneni(8087
les
in
push
pop
adc
cld
lcall
cmp
xchg
jae
push
inc
les
adc
mov
adc
insb
js
lock
mov
cmpl
mov
xor
scas
mov
movsl
jbe
insb
test
add
xsaves
or
mov
xchg
out
or
and
and
ss
loop
mov
push
jnp
xor
testb
mov
arpl
add
hlt
sbb
jp
mov
and
mov
push
xchg
lock
adc
inc
cld
or
pop
inc
loopne
clc
aad
fsubrp
xor
leave
in
adc
push
mov
cs
das
shl
cmp
jnp
cld
mov
add
incl
dec
mov
pop
xchg
and
dec
test
mov
mov
mov
adc
in
xchg
push
pop
lret
in
xchg
loope
in
sbb
icebp
in
xor
dec
add
and
mov
loopne
sbb
push
sti
stos
in
orl
mov
xchg
cmp
test
xchg
addb
cmpsl
jmp
mov
mov
mov
jle
fldl
jmpw
pop
cs
pop
jmp
jecxz
fisubs
pop
incl
inc
pusha
and
sar
decl
filds
jo
das
js
iret
out
dec
inc
push
cltd
cs
pop
sub
insb
dec
ljmp
mov
jecxz
shrb
out
mov
lock
loop
jne
mov
pop
push
push
sbb
add
js
lock
daa
cwtl
out
or
mov
jg
mov
repnz
rcrb
sbb
sti
or
ret
xor
cmp
mov
sbb
aas
sbb
adc
repnz
xlat
or
aas
ljmp
adc
js
mov
cmp
mov
push
mov
mov
cmp
cmc
in
mov
and
inc
fwait
lods
mov
test
es
add
lret
shll
fdivrs
inc
and
and
add
xor
mov
pop
in
cmova
fsubrl
cs
mov
vmovhps
fidivrs
mov
mov
push
jl
jns
mov
inc
test
fdivr
mov
xor
dec
repnz
mov
rclb
js
inc
or
test
popa
add
adc
fidivrs
and
xorb
and
dec
mov
adc
jp
call
mov
sub
fcomip
jmp
mov
and
add
shll
or
hlt
sti
jg
lock
mov
sbb
rcll
pop
cmp
adc
outsl
jae
sub
ljmp
jg
inc
push
xor
int
jbe
add
pop
adc
xor
clc
imul
movsb
scas
sub
leave
xchg
jnp
mov
mov
mov
jo
lods
incb
ljmp
or
or
aam
push
pusha
fcomip
pop
scas
xchg
inc
stos
leave
xlat
push
outsb
repz
or
lods
xchg
add
jg
mov
sbb
icebp
jg
mov
sahf
dec
imul
jmp
test
mov
fimuls
xchg
pop
test
mov
mov
cmp
push
std
mov
sbb
out
dec
lahf
pop
xchg
dec
sbb
mov
mov
adc
xchg
add
xor
ljmp
xchg
push
mov
movsb
cmp
out
dec
int3
addr16
rol
pop
ret
sub
push
and
or
pusha
sub
cmp
push
mov
mov
in
inc
mov
ret
add
out
gs
iret
sahf
lds
aas
cmp
sbb
jg
push
add
mov
lcall
loopne
lea
test
push
movsb
or
pop
jl
fnsave
gs
dec
mov
mov
jp
pop
or
icebp
mov
test
jl
leave
fstpt
xlat
and
mov
push
decl
push
clc
inc
idiv
xor
and
mov
pop
iret
testb
add
jbe
jle
mov
pop
shrl
lahf
xchg
call
cmp
adcb
cmp
push
sarl
movsb
cmp
and
dec
mov
fmulp
lahf
adc
insl
mov
jnp
mov
stos
mov
popf
push
add
mov
inc
xor
add
mov
push
ss
add
ss
dec
push
insb
xchg
pop
cmp
aaa
mov
pushl
mov
sub
pop
xlat
xchg
dec
inc
dec
idiv
scas
popa
rcrb
sbb
lock
jo
rolb
rcr
ret
call
add
stc
push
inc
pop
pop
icebp
fcmovnu
je
rcll
addr16
cmc
pop
aad
push
xchg
add
mov
or
inc
and
sbb
jmp
notl
pop
or
sub
add
loop
add
dec
loopne
decl
aad
push
iret
out
in
jbe
add
mov
jo
mov
fdivrl
or
rcll
inc
call
push
sbbb
ret
ds
jno
mov
cld
inc
pushf
mov
loopne
test
and
cs
jge
dec
add
dec
outsb
and
cwtl
push
and
cmp
scas
xor
dec
jae
rcr
pop
imul
xor
iret
jg
adc
mov
aaa
mov
cld
lcall
inc
cmc
push
jnp
ret
push
in
add
mov
outsl
fsubrl
pop
sbb
xchg
or
push
mov
lock
clc
in
mov
mov
es
add
pop
loopne
push
icebp
or
adc
fwait
cs
ja
push
filds
mov
in
pop
or
cs
push
jns
push
dec
adc
dec
clc
rclb
mov
and
pop
mov
mov
mov
pusha
repnz
mov
jge
subl
loop
push
je
repz
das
clc
jg
subl
xlat
fistl
rorb
ret
mov
pop
test
mov
fmulp
push
ss
push
lds
xor
pop
adcl
lock
aas
mov
out
and
aad
lods
loopne
fs
xor
mov
pop
and
mov
xor
add
imul
mov
cld
fstl
pusha
push
sarl
movsl
mov
in
xor
xor
fmul
lods
sahf
mov
cmp
jb
dec
sahf
lcall
xchg
hlt
mov
jno
adc
inc
mov
loop
mov
lods
push
or
mov
sbb
or
in
xchg
out
aam
xor
pop
sub
mov
test
repnz
xor
cmp
mov
add
ss
xchg
incl
sub
and
adc
pushf
sub
fadd
out
pop
cmc
jo
push
mov
mov
dec
daa
and
out
and
fs
fiadds
inc
iret
add
sub
and
ja
int3
shlb
pop
mov
add
cmpb
ljmp
sbb
insb
add
or
mov
or
aaa
xor
cli
pop
aad
sarb
pusha
jbe
add
out
js
mov
pop
decb
rorl
mov
dec
mov
lret
pop
push
dec
lahf
jecxz
add
mov
mov
xor
scas
andb
mov
icebp
fisubs
incl
fildl
mov
and
push
jnp
mov
or
int
lcall
push
mov
adc
mov
jns
call
ret
outsb
movsb
sbb
mov
or
mov
sbb
scas
pop
out
and
in
int
cli
mov
fsubrs
sbb
incl
push
je
mov
stos
sarl
loop
jg
fmuls
and
sub
es
aas
mov
les
push
adcl
das
mov
jecxz
cs
pushf
sub
adc
push
inc
xor
xor
fiaddl
and
int
xchg
add
ret
in
imul
arpl
insl
mov
push
pop
and
jo
lock
mov
out
mov
sbb
cmp
or
cmp
movsb
std
jno
dec
inc
mov
sbb
pop
jle
cmpl
fsubrl
mov
lcall
sbb
and
in
fcoml
push
or
xor
add
xchg
sahf
mov
sub
mov
dec
inc
sarl
call
jb
or
xlat
out
out
into
dec
aaa
add
cmp
or
dec
jg
cmp
mov
push
mov
add
add
sbb
movsl
xor
rcl
dec
mov
das
inc
aaa
push
add
xchg
aas
add
push
loopne
call
push
stos
mov
cltd
push
xor
mov
femms
xchg
inc
mov
dec
stos
xor
mov
adc
daa
repnz
push
pop
cli
ss
fsubl
sbb
sbb
xchg
xchg
icebp
push
insl
ja
jo
pop
dec
pop
ljmp
pop
jmp
and
scas
push
pop
inc
ret
shll
fstpt
jb
jp
adc
add
mov
add
mov
imul
add
das
data16
pop
jl
sbb
rcrb
sahf
xchg
je
sub
test
dec
daa
xor
mov
stc
or
popa
xchg
pop
xor
ret
les
sarb
inc
rcll
ja
pop
aad
push
cmp
mov
dec
lock
jge
jmp
fbld
cmp
loop
lds
xchg
in
imul
fisttps
pop
mov
lods
xor
xor
xor
add
and
ss
xchg
test
paddd
mov
jl
dec
lcall
xor
js
dec
fwait
jl
daa
adc
add
mov
inc
sti
push
inc
popf
adcb
stos
ffree
ljmp
push
inc
mov
add
push
hlt
jno
lock
jns
aas
sbb
push
out
shl
out
dec
and
sbb
mov
or
xor
pop
nop
mov
xchg
aad
xor
ret
rcrl
or
lcall
shll
adc
mov
imul
xor
cmp
out
xor
outsb
mov
jb
push
jle
and
cmp
fldl
das
mov
daa
lret
push
fsub
sbb
push
inc
mov
jecxz
ret
add
mov
movsl
enter
shl
clc
push
std
dec
push
add
cli
ja
negl
push
fsubr
pop
pop
shlb
inc
je
fldl
mov
das
ljmp
cli
push
fcoml
popf
add
hlt
or
cld
ud0
lret
dec
jmp
loop
cmp
pushf
test
in
daa
pop
fs
adc
pusha
xor
jne
xchg
adc
sub
mov
dec
push
dec
rorb
cmc
outsl
clc
inc
sbbb
cmp
jo
mov
mov
sarl
cmp
arpl
cmpsl
inc
mov
pop
mov
jl
xor
inc
and
fwait
inc
mov
lret
adc
mov
push
inc
mov
aaa
inc
loopne
jae
and
sub
pop
test
icebp
push
inc
sti
cmp
js
imul
adc
sub
scas
cwtl
pop
mov
xchg
loopne
scas
xchg
pop
fadd
add
bound
dec
pop
nop
and
add
adc
aaa
cld
call
rclb
sub
or
bound
movsb
lret
mov
xchg
cmp
push
xchg
xor
cltd
stos
jmp
jecxz
jo
pusha
repz
dec
daa
data16
aad
faddl
insb
push
and
mov
mov
rolb
dec
lret
push
xor
mov
or
adc
mov
sbb
push
ret
or
inc
xchg
cwtl
xchg
sbb
mov
inc
xchg
call
push
aaa
shrl
xorb
data16
adc
inc
xlat
call
hlt
jge
mov
jae
sub
dec
mov
mov
mov
sti
loop
push
rcl
das
mov
in
cltd
add
or
shl
sti
add
sbb
addb
xchg
stos
pop
or
push
jbe
cmc
dec
stos
cmpl
add
jbe
pop
adc
jg
loop
pop
popa
ret
add
test
mov
or
cli
jae
shll
leave
lea
jle,pt
lret
cmp
rcrl
jmp
popa
inc
mov
mov
hlt
cmpsb
sub
jecxz
cli
pop
fs
and
hlt
popf
inc
scas
loopne
mov
stos
out
clc
mov
fadds
or
cmp
notb
jnp
push
pop
add
mov
cmovo
adc
es
jno
sub
mov
das
shlb
cmp
cmp
xor
mov
mov
push
jb
add
sbb
shl
mov
xor
inc
dec
leave
icebp
jecxz
shlb
push
cs
movsb
fcmovnbe
xor
cmpsb
mov
and
or
jnp
push
jge
dec
scas
stos
inc
fisttpll
clc
pop
or
xchg
cwtl
fisubrl
add
iret
mov
pop
mov
fs
pushl
shl
test
cmc
ja
addb
mov
sbb
scas
in
clc
test
mov
data16
cs
cmp
push
stos
sbb
test
mov
push
push
xchg
leave
fidivrl
rcr
dec
push
movsb
fisubrl
cltd
sbb
push
sub
push
jge
loopne
sub
call
test
push
enter
and
aam
addr16
mov
xorl
cld
sbb
mov
sbb
or
dec
pushf
jge
paddusb
movd
cwtl
fst
xor
cld
lods
mov
lock
mov
push
cmp
ds
shlb
ja
mov
adc
fwait
add
mov
mov
xlat
cmp
movsb
push
xlat
call
aam
sub
cmp
fs
je
mov
sub
mov
cli
sub
sub
mov
loope
jp
or
pop
mov
fs
jo
rorb
pop
arpl
add
loop
gs
fdiv
push
cld
xchg
push
pop
jle
test
dec
testb
sub
mov
test
xor
xor
in
mov
pop
mov
sub
cmp
sub
loop
jle
or
std
pop
adcb
lea
add
das
mov
xor
data16
jg
add
pop
mov
add
scas
scas
mov
mov
push
in
pop
cmc
call
xchg
sbb
lock
mov
mov
adc
dec
int3
push
pop
mov
fs
not
test
cmc
xor
movsl
ljmp
jle
add
mov
xor
shr
das
test
mov
int3
pop
pop
rorb
and
outsb
cld
add
addr16
sub
pop
mov
xchg
adc
loop
push
jg
testb
jmp
push
jmp
xchg
lock
xchg
dec
mov
mov
cmp
decl
push
push
rol
inc
out
mov
pop
das
clc
or
cld
cmp
mov
xchg
jae
push
cmpsb
mov
add
lock
rolb
fmul
pusha
imul
stc
pop
add
roll
sub
sub
ds
push
pop
pop
lock
fistpll
xorb
call
ret
in
incl
movsl
push
mov
js
loopne
pop
mov
jp
cld
pop
hlt
es
loopne
repz
hlt
pop
loop
pop
push
jno
mov
decl
mov
bound
adc
orb
jle
add
rclb
pop
cmc
imul
fstpt
mov
push
cmp
clc
pop
sub
push
sbb
iret
pushf
push
leave
xchg
movsl
xchg
out
bound
cld
mov
cli
jge
mov
cmpsb
and
mov
xchg
loop
and
mov
inc
out
xor
jno
hlt
fisubl
add
inc
out
or
or
mov
jne
or
xor
in
popf
jg
nop
out
les
jp
sbb
adc
jo
addr16
xchg
aam
fwait
and
add
out
repz
pop
loope
mov
inc
test
lcall
pop
imul
repnz
cmc
add
dec
insl
mov
lds
and
aam
pop
shlb
xor
insb
out
jb
inc
push
sub
mov
jp
mov
and
aaa
mov
fs
push
jmp
loop
decl
xchg
ds
std
popa
and
cs
mov
loope
cwtl
add
mov
jecxz
cmp
mov
xchg
loopne
add
xchg
pop
mov
jecxz
scas
push
insb
shlb
pop
hlt
pushl
stos
add
mov
push
or
ret
jo
aaa
xor
jg
icebp
ss
adc
xchg
push
mov
add
pop
mov
sbb
inc
decl
clc
test
aaa
dec
pop
mov
das
mov
adc
cmp
pop
mov
hlt
push
aas
and
fcompl
stos
sbb
sbb
add
pop
loopne
incl
lcall
mov
or
cli
xor
push
icebp
std
or
outsb
push
lahf
ss
dec
hlt
mov
jmp
cmp
out
or
add
mov
cmp
and
jnp
ret
mov
and
or
mov
push
sbb
clc
pop
mov
lret
ss
stc
dec
aam
push
lods
add
bound
cld
mov
mov
or
xchg
jbe
sbb
xor
push
xor
aam
add
and
std
sbb
loop
bound
lret
cmc
cmp
shlb
ss
xchg
dec
repz
clc
adcb
idiv
int3
cmp
lds
pop
xor
push
icebp
arpl
leave
mov
mov
test
xor
cmp
fdivs
sub
das
fdivrl
insb
aas
push
cmp
cld
mov
ljmp
cmpsb
je
add
stos
and
daa
loop
adc
and
fldcw
push
sub
and
sbb
cmp
fs
pusha
movsb
lret
in
sub
clc
aad
inc
testl
fnsetpm(287
jno
in
mov
lcall
insl
mov
dec
mov
sti
add
movsl
adc
aaa
mov
or
daa
popf
xor
ljmp
call
add
push
pop
push
jg
mov
mov
jbe
outsb
sbb
adcb
pop
loope
and
adc
push
je
fisubrs
xchg
mov
lock
ss
sbb
and
jl
push
stos
jno
add
or
pushf
in
rcl
in
cmp
loop
or
pushl
push
rcll
cwtl
or
or
mov
popf
mov
clc
cmp
loopne
popa
clc
mov
mov
pop
shrb
movsb
inc
mov
das
jb
dec
es
pusha
lcall
scas
bnd
inc
jmp
lock
add
inc
or
pusha
lods
loop
lods
inc
xchg
test
popl
mov
xchg
or
loopne
mov
jbe
js
lds
push
pusha
adc
or
sti
mov
jb
lods
mov
jp
or
pop
idivb
adc
vphaddubd
or
loopne
mov
jo
push
iret
add
cmc
jae
mov
es
adc
push
sar
xor
fdivrl
sti
mov
clc
push
xor
aaa
fstl
pop
mov
int3
lcall
dec
inc
aad
add
cld
test
lret
mov
outsl
clc
inc
inc
or
loope
push
adc
add
pop
shrb
adc
ja
xchg
pop
pusha
pop
in
rorb
js
jo
or
dec
dec
cld
psubd
adc
cmp
mov
add
fistpl
xor
ss
fistpll
xchg
inc
mov
dec
xor
xlat
fwait
mov
or
xchg
pop
inc
xor
dec
or
clc
ljmp
fdivp
cwtl
and
mov
das
mov
sub
jb
push
decb
lock
xor
jl
mov
stos
scas
and
inc
out
adc
pop
add
out
test
lret
mov
jecxz
clc
movsl
push
lock
gs
stos
clc
mov
cld
incl
inc
and
lret
adc
aam
sbb
sbb
pop
xchg
ljmp
test
fstps
and
ja
cld
mov
add
mov
add
cs
out
scas
fcoml
mov
cmovns
in
dec
les
mov
push
loope
mov
dec
add
mov
out
aas
jp
push
cltd
pop
cs
sbb
or
dec
sub
xchg
fidivs
mov
dec
fidivs
mov
jbe
push
pusha
dec
jg
mov
or
fldt
stos
call
fldcw
mov
insl
scas
aad
mov
scas
aaa
test
popa
insb
add
inc
mov
adc
jecxz
fisubrl
fiaddl
sub
add
es
mov
out
cmc
and
adc
cwtl
jp
fcomp
jp
mov
outsl
sub
jmp
push
lods
cld
push
lahf
xchg
jg
cli
shrl
mov
add
jg
mov
mov
test
lahf
loope
mov
popa
subl
xor
ret
or
inc
lea
push
lock
fcomip
add
sbb
dec
and
jp
fmul
push
inc
testl
ss
stos
dec
fs
jg
filds
xor
dec
mov
fdivp
pusha
mov
mov
jge
sub
andb
das
cli
ss
dec
out
in
neg
sbb
loop
and
ret
mov
xchg
fsts
add
std
aaa
xchg
lcall
fwait
mov
adc
adcb
adc
push
loopne
fdivl
mov
lea
mov
mov
loop
add
adc
mov
adc
testb
or
inc
popf
ret
fwait
aas
mov
pop
pop
icebp
adc
cs
sub
xchg
and
arpl
je
jo
cmp
mov
rclb
mov
mov
dec
std
mov
rcr
outsl
dec
pop
xlat
jg
andl
imul
pop
mov
add
inc
push
xorl
add
sti
mov
sub
jno
out
sti
and
ret
mov
or
pop
adc
cli
sbb
mov
xlat
inc
jp
sbb
pusha
mulb
pop
add
adc
and
inc
push
push
loopne
popf
test
out
orl
stc
fcomps
adc
test
pop
sub
into
push
mov
or
into
xlat
xor
mov
push
pop
push
jo
std
add
mov
push
in
xor
test
cmc
push
data16
adc
fisubrs
cli
jp
push
add
sarb
ja
ljmp
insb
sbb
mov
xchg
loopne
sbb
inc
add
xor
sbb
pop
icebp
sub
push
push
add
jp
loope
jne
subl
adc
dec
push
xchg
out
fmuls
fldcw
jbe
shl
mov
add
mov
fs
into
sub
scas
inc
push
adc
dec
push
mov
test
pushl
jge
ja
add
add
and
xor
xchg
jp
aam
sarb
xchg
je
out
call
xor
mov
int3
cwtl
mov
add
lods
push
in
ljmp
in
pop
pop
adc
icebp
lds
and
sbbb
js
push
cld
pop
push
call
rolb
into
addr16
xor
or
mov
jle
pop
fbstp
or
mov
inc
stos
dec
xor
push
dec
sub
fcmovb
mov
add
cmp
xchg
push
mov
ret
adc
sbb
push
repnz
xchg
xchg
in
pop
pop
fistps
add
add
fisttps
push
mov
or
lods
fstpt
filds
ja
push
repz
and
add
addb
pop
mov
push
cmpsl
or
xchg
scas
lods
cmp
loopne
ja
fildl
mov
sub
lods
inc
mov
cs
enter
mov
xchg
inc
aam
dec
insb
jns
xchg
jle
pop
dec
mov
mov
loop
or
subb
sahf
jb
lods
cld
pop
idivb
roll
mov
adc
cld
in
mov
push
push
aaa
mov
jne
sub
mov
gs
loopne
inc
je
ret
scas
stos
xchg
movsl
push
rcrb
sbb
loop
out
aas
cli
aam
dec
cmp
leave
nop
mov
loope
insl
push
sbb
test
xchg
adc
pop
cmp
inc
and
push
stos
mov
sahf
cmpb
fistl
cmc
mov
xor
test
push
dec
push
sub
roll
pop
push
aad
push
ret
std
xchg
ret
rcr
aam
and
loope
jp
imulb
add
or
loope
push
incb
fiaddl
cmp
aas
aaa
adc
jno
inc
jl
mov
pop
xchg
sti
or
fnstcw
test
cmp
sbb
mov
push
mov
mov
test
movsb
test
imul
mov
pop
push
pop
pusha
repz
and
pop
lock
das
or
ds
xchg
bound
out
adc
jo
out
mov
adc
mov
add
jb
movhps
sub
mov
jmp
clc
jl
sti
mov
sbb
pop
pop
and
leave
pop
adc
loopne
cld
decl
xor
cmp
rolb
fldlg2
pop
add
ljmp
popa
jle
mov
xchg
add
cmpsl
xchg
and
sbb
imul
aad
rolb
cld
or
iret
mov
add
incl
xor
js
stos
movsb
in
int
mov
or
push
adc
sti
xor
adc
xlat
decl
inc
insb
mov
adc
or
mov
ret
sbb
mov
sbb
leave
mov
repz
pop
pop
cmpsl
xchg
loope
lret
pop
push
mov
jg
fucomip
icebp
jle,pn
movsl
fldl
cs
rorl
pop
andb
scas
outsl
fildll
jnp
push
xchg
sub
dec
mov
jno
aaa
cmpsl
jp
ss
ds
xchg
jp
gs
sbb
mov
pusha
dec
push
add
adc
mov
stc
inc
mov
int3
cmp
cmpsl
lcall
mov
xor
and
dec
fs
jl
cmp
or
mov
sbb
mov
jle
pop
cld
jg
pop
inc
jp
lret
mov
out
lahf
mov
dec
mov
pop
mov
cli
icebp
mov
inc
adc
mov
nopl
cld
sbb
mov
cmpb
lea
imul
imul
sub
add
shlb
loop
push
xchg
or
mov
add
movb
dec
ja
sub
push
into
push
pushf
cmpb
enter
call
xor
int3
sbbb
test
and
movl
repnz
jg
sbb
mov
mov
xchg
fs
pop
and
fdiv
sbb
stos
and
jne
lods
andl
jmp
cmp
addr16
add
jecxz
adc
or
or
cli
adc
add
sbb
test
sub
mov
xor
jno
ljmp
sbbb
arpl
jb
mov
addb
add
inc
popl
jae
sti
and
int3
push
mov
add
mov
lcall
or
mov
es
out
sahf
fisubrs
adc
das
jmp
add
ss
cmpsl
jb
inc
shl
call
rolb
inc
mov
loopne
sbb
cld
sbb
lret
pushf
inc
or
fwait
ljmp
enter
fwait
xchg
add
pop
outsl
jge
push
and
lcall
mov
nop
js
ret
sti
decl
push
jae
data16
sub
sub
scas
pop
jg
push
aad
lea
outsb
pop
addr16
sbbl
mov
and
fmulp
or
add
iret
cmp
xor
xlat
shlb
push
mov
push
out
jns
fsubrl
stc
arpl
cmc
add
mov
mov
mov
sti
cs
clc
incl
pusha
mov
cmp
mov
inc
push
stos
call
cmp
sbb
adc
std
roll
in
clc
out
pushf
and
add
lods
loopne
lods
ret
xchg
fisttpl
cmp
int3
incb
pop
mov
out
and
or
jo
jg
adc
stc
adc
fists
test
inc
cwtl
push
xor
fists
inc
movb
in
and
push
arpl
fs
push
add
insl
decl
pop
push
mov
dec
mov
mov
mov
jo
std
in
mov
push
mov
aas
sub
pop
cmpsb
in
inc
icebp
push
cld
pop
insb
xchg
imul
insb
add
outsl
lahf
lock
dec
fstpl
mov
lea
or
movsl
call
mov
aad
jl
inc
movsb
clc
cmp
or
loop
arpl
rol
loop
mov
pop
sbb
insb
test
push
sub
insb
cmpsb
add
sahf
pop
dec
add
outsl
sub
fisubl
jge
cmp
outsb
mov
add
dec
cmp
sbb
insl
jle
sub
iret
dec
ficoml
pusha
dec
sbb
lret
fcomps
nop
xor
jo
jo
pop
sub
mov
adc
int3
fs
aam
fsub
push
push
or
or
stc
clc
pop
jae
inc
imul
cmp
mov
mov
xchg
cli
in
lock
scas
scas
popl
push
and
mov
mov
out
aas
pop
jne
mov
in
pop
dec
out
adc
add
call
insl
sbb
mov
je
ret
mov
pop
or
pusha
in
mov
push
icebp
jg
xchg
and
mov
test
adc
push
test
fwait
push
mov
adc
decl
stos
jg
dec
out
pusha
push
push
in
ret
mov
adc
lahf
icebp
jb
add
fcoms
pop
popa
push
xchg
test
lret
sub
mov
push
sbb
inc
sub
push
jge
pushl
fnclex
jne
adc
push
decb
mov
and
mov
cmp
add
scas
add
mov
or
popa
add
xlat
enter
add
inc
mov
push
mov
test
clc
and
push
fidivs
dec
mov
add
mov
or
sub
jbe
xor
fisubrl
or
je
pusha
dec
pop
jg
mov
sti
mov
cmpsb
lock
mov
cli
testb
sub
test
jbe
roll
imul
xchg
cmpsl
push
mov
or
or
sub
repz
mov
mov
cmp
pop
imul
daa
push
insb
js
xchg
mov
mov
loopne
std
or
push
popl
mov
xchg
mov
push
into
cld
sbb
lds
inc
xchg
cs
pop
sbb
mov
mov
fsubrs
or
mov
js
dec
and
cmp
ficomps
outsb
and
popa
ret
pop
cmpb
jp
pop
and
out
mov
movsb
out
out
jne
xor
dec
shlb
clc
xor
adc
pop
jl
stos
add
cmpsl
push
out
jecxz
pusha
in
push
adc
add
xchg
push
negl
popf
daa
scas
lahf
ficomps
cmp
xchg
andl
mov
ret
sbb
push
add
popa
in
sub
inc
push
pop
push
popf
ss
pop
inc
cs
movsl
dec
in
pop
sub
jmp
sbb
ljmp
jo
mov
sbb
out
push
stos
sahf
pop
in
add
sbb
inc
jecxz
outsb
sbb
xchg
sbb
outsl
cmpsb
scas
lock
ss
movsl
xor
cmpsb
and
outsl
leave
mov
xchg
fisubl
aaa
aad
scas
sub
cld
call
test
sbb
call
mov
mov
sbb
jle
lret
fildll
dec
aad
sbb
sub
stos
pshufw
xchg
fsubrs
jl
or
mov
ret
mov
mov
adc
lcall
cmp
out
jo
adc
aad
push
and
and
inc
push
imul
sbb
xchg
lret
inc
out
fs
push
push
push
pusha
inc
aad
push
scas
add
push
clc
fdivl
out
inc
push
lods
sbb
bndstx
mov
shr
jg
xchg
outsb
js
call
out
lock
mov
outsb
xor
icebp
mov
and
pop
mov
adc
push
clc
pop
push
inc
mov
imul
mov
cmp
inc
xchg
into
add
arpl
mov
mov
mov
std
loope
xor
lcall
sahf
inc
mov
push
push
xlat
inc
dec
mov
jne
mov
shlb
mov
lret
hlt
jg
cs
test
out
cmp
inc
out
push
cmc
mov
cld
add
mov
in
mov
cli
dec
std
aam
mov
popa
push
inc
cmpsb
mov
or
sbb
data16
clc
fwait
ds
sbb
sahf
jo
cmpsl
mov
mov
loop
dec
test
add
cld
mov
sahf
add
mov
test
lcall
ljmp
add
adc
adc
push
test
dec
xchg
cmpsb
data16
xchg
mov
adc
fcmovbe
scas
dec
mov
rcrb
jb
or
jno
mov
fbstp
js
test
roll
pop
or
xchg
out
xor
adc
mov
lret
mov
dec
cmp
inc
negl
inc
add
push
negb
adc
pop
imul
xor
data16
clc
mov
pushf
fstpt
jge
mov
jge
push
push
mov
mov
xor
cwtl
mov
loopne
mov
add
rorb
jle
loop
popa
xchg
add
orb
inc
cmpsb
cli
xchg
ds
mov
push
cld
jmp
xor
ret
adcb
add
ret
sbb
push
orb
mov
xchg
jmp
aad
bound
outsb
or
lcall
mov
mov
repz
mov
add
ficoml
sahf
lods
int
pop
loop
cmp
ret
stos
and
or
jg
push
inc
les
ss
inc
subb
mov
rcrl
lock
stc
xchg
aad
or
inc
mov
cmpsb
int3
lcall
inc
add
mov
insl
fists
jmp
aas
sub
push
icebp
or
into
decb
lcall
ljmp
jecxz
lea
pop
or
addl
shll
test
xor
push
push
mov
aas
push
in
movsl
adc
aaa
incb
inc
push
or
in
cli
out
cwtl
bswap
filds
loop
add
adc
clc
push
mov
pop
mov
inc
mov
push
add
into
sub
and
push
ret
adc
and
test
jb
add
mov
stc
jmp
pop
shlb
add
xor
cs
or
pop
cmp
jb
inc
int3
add
add
inc
sub
aam
mov
dec
pushl
push
dec
mov
bound
add
jae
xor
outsb
sbb
mov
outsl
sbb
sahf
and
push
adc
mov
nop
add
das
in
or
xchg
mov
mov
mov
pop
xchg
jl
pushf
xor
ss
xor
mov
cld
stos
push
pop
in
insb
mov
shr
or
aaa
add
sbb
jne
sub
rcll
adc
cs
mov
cmc
or
jl
aam
sbb
mov
mov
add
rorb
fisttpl
ljmp
rclb
ss
xor
or
sbb
pop
call
push
jp
and
shll
dec
enter
dec
incl
inc
jbe
push
cmp
aam
movsb
call
cwtl
or
and
pop
or
shlb
cmovge
sub
pop
sbb
stos
outsl
and
push
fwait
mov
pop
add
clc
sub
pop
mov
aad
cmpsl
jns
cmpsb
test
lods
add
mov
xchg
test
or
pushl
les
fdiv
push
add
movsb
add
lock
mov
mov
pop
or
fadd
ds
sub
negb
loopne
sub
jp
lret
sahf
fldcw
stos
mov
mov
sub
pop
bound
mov
orl
add
add
movsl
jecxz
jae
adc
outsl
clc
fwait
mov
push
sbbb
push
push
mov
mov
aas
rcrl
sbb
das
mov
movsb
add
outsb
call
or
sbb
mov
jnp
sub
xchg
add
and
mov
pop
in
mov
or
or
mov
pop
lock
xchg
gs
clc
pop
add
xor
and
push
pop
cld
cmp
fildll
lods
fcmovnbe
add
cmp
lods
cmp
or
cs
xor
sub
adc
icebp
cli
add
and
lock
ret
jle
ficoml
add
add
loop
jno
add
lods
xorl
sbb
ds
call
add
js
or
xchg
sub
adc
dec
pop
mov
je
and
fistps
mov
sub
mov
test
add
stos
adc
push
sub
add
mov
or
shr
in
xchg
aas
rclb
jbe
push
cmp
push
shlb
sub
lock
mov
adc
sahf
cmpb
fisubs
xor
cltd
add
xlat
fidivrs
lcall
mov
or
js
dec
push
dec
dec
cld
and
inc
mov
loopne
out
outsb
data16
sub
mov
add
repnz
pop
hlt
mov
xor
jbe
call
loope
loopne
inc
testl
or
add
xlat
pop
xchg
mov
daa
xor
je
lock
stos
pop
inc
or
ret
mov
nop
pop
xchg
cmp
push
mov
mov
out
mov
lea
fdivrs
test
hlt
loopne
and
dec
adc
push
push
inc
fcomip
fistps
mov
negl
cs
add
inc
dec
pop
loope
xchg
std
mov
mov
jmp
sbb
and
add
rcr
lret
or
or
mov
call
inc
mov
lea
call
addb
pop
lahf
or
fiaddl
xchg
add
mov
data16
add
mov
aas
mov
inc
pop
shll
cmp
shl
jg
mov
sbb
aad
fwait
sbb
notb
mov
in
and
sbb
loop
adc
lret
push
add
sbb
lcall
mov
push
jge
das
adc
arpl
ret
jmp
inc
ds
inc
push
ljmp
in
popf
nop
mov
push
and
aas
roll
test
sub
pusha
adc
rorb
test
es
sbb
jne
add
scas
scas
sar
ficoml
jmpw
pop
mov
dec
js
mov
dec
xor
add
fildll
sbb
cltd
push
test
mov
add
ret
and
inc
add
adc
jp
pop
aam
xchg
xorb
lret
pop
mov
lock
pusha
push
stos
test
mov
add
rorb
xor
adc
push
in
cld
add
shrl
mov
out
mov
mov
sbb
cmp
xchg
and
or
mov
fistpl
adc
repnz
ja
mov
sub
mov
inc
pusha
pusha
mov
cmc
fnstenv
cmp
pop
fildll
lock
add
jmp
sbb
outsl
mov
mov
adc
sbb
add
int
fadds
jo
jg
or
outsl
jo
mov
and
lret
mov
fimull
push
jg
loop
cmpsb
mov
push
push
cmp
cwtl
clc
jmp
loopne
imul
pop
clc
insl
add
test
add
add
pop
mov
cmp
xchg
fstl
mov
adc
test
dec
repnz
sub
shr
lds
sbb
daa
mov
inc
subb
mov
aam
mov
jecxz
int
scas
mov
idiv
imul
loope
add
out
pop
push
adc
imul
inc
test
xor
aad
add
test
sbb
jbe
and
and
ljmp
add
mov
loopne
adc
mov
dec
adc
in
adc
xchg
cmp
sbb
mov
test
orb
jle
inc
outsl
ljmp
or
mov
cpuid
xor
xlat
mov
jg
leave
ja
add
lods
movsbl
xchg
out
add
lcall
inc
mov
outsl
shr
scas
cld
sbb
lea
push
loop
icebp
dec
fnstsw
xchg
ss
push
sub
insl
add
jo
dec
out
or
sub
add
fidivrl
jecxz
cwtl
push
mov
decl
push
shrb
aam
negb
div
dec
sub
jp
pop
mov
jl
call
in
fwait
push
mov
jbe
mov
int3
inc
mov
sbb
mov
mov
shl
jge
movsl
pusha
das
aam
inc
mov
pop
pop
add
leave
and
icebp
aad
mov
add
adc
jne
jbe
dec
push
lahf
pop
movsb
dec
xchg
hlt
sbb
inc
xlat
popf
sub
mov
mov
push
sub
pop
sbbl
and
pop
pop
test
incl
push
out
sub
and
mov
js
sub
pop
inc
sbb
pop
add
icebp
in
xor
pop
jns
jge
mov
mov
push
mov
shrl
pop
bound
mov
jmp
test
aad
pop
jnp
or
mov
sbb
pusha
push
jg
adc
lods
or
outsb
add
loop
jbe
addl
inc
rcrb
lcall
stc
aaa
fisubs
sbb
loop
xchg
pop
mov
mov
fimuls
or
test
add
xchg
aas
daa
sbb
mov
push
loop
or
push
dec
sub
or
rolb
movsl
jnp
movsl
cmp
cmp
push
add
xchg
cmpsb
lds
pop
stos
arpl
xchg
add
jno
mov
jmp
rclb
add
les
or
cs
repnz
lock
cmp
jmp
add
icebp
sub
mov
stos
daa
mov
pop
or
in
adc
jnp
inc
pop
cs
out
sbbl
add
push
dec
xchg
sub
jo
sub
push
mov
xor
push
mov
outsb
adc
cli
incl
mov
or
xor
movb
loopne
xchg
push
loopne
xchg
pusha
jb
shlb
loopne
clc
pushf
jmp
addr16
sub
add
mov
es
pop
sub
mov
cltd
lods
fs
ret
and
adc
scas
mov
loope
sub
sbb
bound
mov
outsl
fmul
scas
add
rorl
add
sub
ljmp
pop
mov
imul
push
or
cmp
mov
scas
xlat
jo
out
pop
jg
add
stos
pop
adc
addl
inc
loopne
pushf
push
mov
inc
push
incl
fisttpl
sarb
add
mov
push
xchg
lock
mov
add
pop
stos
das
div
jmp
adc
mov
jg
adc
and
push
push
mov
gs
mov
mov
aaa
lock
xchg
sahf
mov
lds
ret
sub
clc
inc
mov
mov
xchg
jle
test
jp
es
lds
pop
pop
mov
fisttps
scas
xchg
mov
out
mov
lods
or
jg
test
inc
push
adc
adc
push
ja
sbb
push
and
mov
call
es
aaa
outsl
or
adcb
mov
xchg
xchg
pop
scas
mov
cmpsl
mov
aas
pop
test
stos
daa
ds
lcall
loopne
lock
adc
add
in
cmp
xor
ret
hlt
or
jo
sti
mov
add
jl
xor
sbb
mov
out
mov
push
popw
jo
jl
nop
pop
jle
mov
fwait
jne
pop
jno
enter
insb
repnz
fldcw
push
adc
add
in
push
xor
and
add
out
add
mov
or
clc
outsl
mov
cmp
push
dec
mov
imull
dec
mov
es
xchg
incb
arpl
incl
cmp
push
or
das
fcompl
in
push
cmp
rolb
movsb
jb
xor
sbb
inc
or
jnp
add
cld
ja
test
ret
mov
imull
jno
push
cmp
inc
pop
rorl
test
push
sub
sbb
add
out
int3
pop
or
call
and
push
sub
xor
mov
dec
fsubs
iret
cmp
icebp
jnp
roll
cs
lret
sub
mov
add
fstps
rorl
inc
dec
push
mov
sub
ret
pop
xor
enter
lidtl
lods
es
aad
inc
xchg
fldl
xchg
cmp
mov
ja
and
fistps
mov
add
mov
js
ljmp
or
mov
add
push
inc
aad
sti
shll
loopne
je
xchg
rorb
inc
stc
mov
mov
jmp
and
scas
loope
jl
iret
inc
mov
add
add
lock
add
mov
sbb
ljmp
shlb
mov
sub
out
incb
rorb
int3
or
rcrb
fstl
pusha
add
xor
aad
mov
enter
push
mov
xlat
jmp
mov
sbb
cmp
jmp
add
mov
mov
xchg
and
add
mov
add
pop
std
incl
insl
or
out
test
ja
clc
inc
fidivs
orb
xlat
ror
cmp
adc
loopne
stc
jb
mov
cmp
fdivrs
mov
mov
mov
cmp
xor
or
fstl
outsl
lahf
je
mov
add
mov
int
lock
fstps
mov
js
idivb
sahf
icebp
outsl
mov
jnp
clc
inc
arpl
xchg
outsl
pop
nop
jmp
dec
les
shl
mov
jecxz
dec
lret
adc
or
lcall
movsl
test
scas
pusha
adc
xlat
out
stos
pop
xor
ret
cmp
ljmp
shll
popa
data16
jmp
shll
push
mov
cmp
sbb
ljmp
mov
adc
mov
mov
stos
test
scas
sbb
jno
mov
jbe
sbb
loopne
adc
or
lret
std
ja
and
cmp
into
ss
ds
or
cmp
add
mov
mov
mov
es
pop
and
imulb
je
inc
mov
cld
insb
push
add
add
shll
test
outsb
mov
fimuls
es
xchg
mov
or
iret
lret
aam
cmpsb
push
std
dec
mov
lcall
xchg
addb
mov
rcrl
and
push
fisubs
push
mov
xor
jg
call
cmp
imul
push
or
jg
dec
test
xorl
jns
test
cmp
pop
lock
ret
pop
stos
mov
cwtl
into
loop
aam
icebp
das
stos
sub
cwtl
loop
scas
xchg
push
jle
and
insb
loopne
mov
jl
jb
nop
ss
or
call
mov
sbb
and
xor
sbbb
cmpsl
shll
mov
nop
fnsave
cli
mov
clc
sub
ja
push
xchg
fs
mov
call
sbb
scas
mov
inc
fnstcw
dec
jae
movb
or
repnz
mov
jbe
popa
push
outsl
cli
add
mov
call
test
add
sub
fsubs
xchg
push
mov
andl
cmp
add
add
cmpsb
out
mov
jg
cld
cmp
push
pop
xlat
test
cmp
out
dec
push
outsl
push
out
pop
inc
jle
insl
mov
cmp
xchg
jns
adc
sbb
mov
mov
inc
mov
inc
add
fwait
or
aam
ljmp
cmp
mov
inc
mov
or
lcall
push
push
sub
sub
enter
jg
jmp
cmp
cmp
mov
ds
jb
mull
fcomip
lods
ljmp
or
out
pop
push
rcrb
jae
fcmovbe
mov
cmp
fld
out
out
push
cld
ljmp
xor
xor
pop
push
and
jecxz
aad
loop
pop
add
mov
gs
sbb
call
lods
sub
add
outsl
push
std
scas
test
inc
pextrw
push
lahf
add
sbb
add
inc
shlb
mov
xor
mov
add
dec
sbbl
jg
sbb
or
cmp
cmp
shrb
cmpb
xchg
ret
inc
rcr
mov
sub
clc
mov
das
dec
and
sbb
inc
loop
test
hlt
jg
sbb
sub
add
jl
shlb
dec
add
push
pop
popf
mov
mov
aad
subb
rclb
leave
mov
stos
mov
mov
jecxz
jmp
pop
fdecstp
shrl
bound
aad
mov
into
lds
push
sahf
mov
shll
add
lcall
mov
decl
jle
jmp
dec
enter
dec
or
mov
in
xor
aam
inc
mov
popf
jge
cmp
test
aaa
loope
data16
stos
adc
add
and
clc
call
sbb
xchg
dec
dec
pop
dec
imul
adc
xor
in
mov
pushf
sbb
push
or
pop
pop
mov
movsb
mov
inc
push
jmp
test
adc
lahf
pop
or
inc
pop
lds
mov
mov
dec
adc
cmp
sbb
fwait
test
ljmp
imul
cltd
cmpsb
sub
ret
pushl
mov
xchg
ss
inc
cltd
sub
lds
mov
push
add
mov
scas
pushl
pushf
nop
jp
outsb
add
clc
inc
jb
adc
inc
fdivs
adc
adc
mov
hlt
sarl
pop
add
fadds
add
jmp
shrb
xlat
jb
in
push
enter
pop
jb
leave
jl
test
ror
hlt
lret
adc
cmp
lock
roll
cmp
adc
loopne
or
or
lods
push
xor
cld
repnz
add
cwtl
add
loope
pop
je
es
mov
mov
inc
mov
mov
or
push
add
sar
sub
mov
push
jg
mov
inc
xchg
nop
call
pop
push
sub
mov
jge
sub
fldl
jecxz
aaa
add
mov
loop
mov
pop
test
frstor
pushl
or
mov
popf
lods
xchg
out
addr16
pop
cs
fucompp
xchg
mov
je
xor
mov
mov
mov
dec
add
lahf
icebp
js
faddl
std
subl
mov
mov
pop
add
lods
ret
fmuls
fidivl
and
pusha
in
aas
sti
addb
add
in
call
xchg
push
je
jg
es
sub
mov
mov
lds
rorb
jl
fbstp
lds
mov
push
andl
sub
outsb
rclb
push
sub
iret
test
je
mov
and
negb
or
fldenv
js
add
stos
cld
pop
add
add
add
lods
mov
xlat
or
jge
jge
pop
mov
ljmp
add
or
add
jns
sub
xchg
cli
sub
dec
mov
call
mov
lock
cltd
out
mov
jle
jmp
ds
dec
ljmp
sub
lock
mov
add
sub
push
fsubrl
data16
repz
outsl
cli
sbb
add
jbe
inc
std
sub
hlt
cmp
push
jecxz
loope
or
ror
das
insb
outsb
xor
mov
adc
add
adc
sbb
cmpsb
int
or
and
and
outsb
loop
cli
in
inc
xor
and
dec
push
inc
hlt
dec
inc
test
and
cwtl
or
adcl
xlat
pop
jl
mov
jg
shll
rolb
sbb
in
pop
add
jb
adc
add
sbb
pusha
mov
and
call
aaa
xchg
xchg
pop
movl
jl
mulb
adc
jo
add
loope
add
pop
cmpsb
fldl
push
inc
and
clc
bound
fidivrl
lahf
adc
jp
in
mov
shr
outsb
out
cmc
call
jp
cmp
mov
or
fcomps
cmp
jle
xor
out
xchg
xchg
jg
in
fbld
lock
jecxz
mov
push
add
rcrl
hlt
or
and
and
dec
aam
push
push
or
ds
jp
mov
jno
inc
jl
fsubrp
subb
inc
sbb
cmp
je
lock
mov
cmp
jmp
imull
inc
aam
addr16
mov
jg
mov
sbb
jge
jp
xchg
test
clc
pushl
or
push
lcall
lods
mov
add
mov
jo
je
mov
clc
shrb
push
enter
xchg
add
and
dec
mov
fcomps
xchg
xor
ds
fisttpll
cld
fildll
adc
lods
ror
adc
rcr
mov
sub
in
call
aas
or
pop
clc
xchg
pop
add
sbb
fdivrl
mov
sbb
sarb
imull
clc
add
or
and
pop
pop
stos
push
mov
ds
hlt
scas
cmp
sbb
les
loope
jmp
add
enter
loopne
clc
mov
add
mov
insb
int3
cmpsl
cli
mov
jb
cmp
sbb
dec
test
mov
decl
push
stc
in
sbb
cld
add
jb
cli
sbb
into
adc
ja
cmpl
xchg
adc
into
or
push
aas
outsl
in
mov
inc
mov
xchg
je
add
mov
adc
mov
inc
decb
xchg
js
dec
or
addw
sbb
jbe
jmp
in
sbb
mov
jb
loope
dec
andb
fildll
cmp
aaa
ret
js
xor
cmp
outsb
leave
int3
js
xchg
repnz
loope
pushl
push
je
out
sub
mov
str
subl
clc
or
sahf
add
pusha
leave
mov
dec
sub
test
sar
call
push
and
jbe
mov
in
add
js
aaa
pop
cmp
push
cmp
pop
insl
push
mov
mov
aam
sub
int3
enter
mov
xor
jl
cld
cmp
daa
jecxz
pushf
cs
push
clc
jecxz
loope
sub
mov
mov
xlat
xchg
mov
in
sub
scas
and
or
xchg
repnz
repnz
inc
test
jge
pop
std
push
jge
mov
cld
cld
or
sarb
mov
push
movsl
sub
push
cld
andb
mov
mov
ljmp
aad
sub
dec
xchg
mov
lock
sbb
lret
inc
sti
int
scas
insb
and
mov
mov
mov
xchg
jle
adc
adc
out
or
and
inc
psubb
push
movl
mov
rcr
aaa
mov
insl
in
iret
pusha
jecxz
push
mov
xorb
testb
aam
pop
data16
dec
or
outsl
jge
mov
mov
pushl
daa
jne
xchg
mov
fcomps
outsb
pusha
push
repnz
mov
fists
rorl
jl
hlt
inc
es
push
jle
fisttpl
adc
add
xchg
outsb
sub
xchg
out
pop
push
jge
in
and
repz
out
xchg
or
sti
inc
xchg
mov
jg
ljmp
push
jmp
jo
jae
lods
movsb
into
rcll
push
or
push
lret
push
cmpsb
add
sub
lods
add
or
jp
ret
lods
jmp
imul
pop
add
movsb
cmp
or
inc
pop
push
pop
xchg
add
js
pop
mov
mov
dec
cld
ljmp
pop
push
sbb
repnz
scas
rcr
popa
outsb
adc
add
ds
inc
cltd
daa
jle
jle
dec
pop
call
enter
dec
jl
add
or
mov
sbb
add
inc
mov
daa
jle
sub
mov
ret
cmpsb
adc
push
adc
js
and
jo
lahf
xor
ljmp
jb
xor
xor
jg
adc
or
sub
data16
adc
lods
sub
mov
jg
xchg
add
mov
insl
jns
pop
jnp
adc
jg
xor
add
leave
popl
add
dec
fsincos
inc
test
mov
lods
ret
fidivl
decl
jne
mov
shl
int3
dec
stc
test
loop
and
push
add
xchg
inc
xchg
testb
pusha
lods
jecxz
adcb
cld
jg
in
dec
add
xchg
jbe
shl
or
lcall
ret
out
cmp
dec
test
pop
mov
inc
imull
xor
and
fisttps
outsb
or
in
cmp
sub
push
inc
xchg
xchg
add
in
mov
js
jno
aas
pop
jbe
lcall
mov
fisttps
push
lret
call
or
outsb
mov
sbb
int
pusha
and
add
jl
pop
jge
mov
sti
ret
add
pop
int3
xchg
pop
jno
lock
xor
sub
or
mov
mov
fldenv
sub
sub
scas
add
push
push
adc
add
clc
pushl
lds
aam
pop
mov
mov
test
imul
and
std
aaa
inc
decl
adc
mov
xchg
nop
imul
pop
push
inc
lahf
loopne
jbe
cmp
adc
push
add
lcall
jb
orb
fcmovnbe
pop
mov
mov
clc
push
inc
call
js
in
adc
andb
je
loop
loope
mov
jmp
icebp
or
leave
rcrb
out
incl
outsl
push
lret
mov
lcall
jno
rolb
push
lcall
rcr
sub
mov
mov
gs
js
outsl
cwtl
fsubs
jp
std
mov
jo
push
in
roll
loopne
sbb
and
cli
outsl
cli
adc
jo
xchg
mov
mov
pop
pop
insb
jmp
movb
in
lahf
int3
pop
xchg
or
mov
loop
in
xchg
push
sub
dec
push
rorl
sbb
add
add
jne
and
pop
mov
sbb
jmp
push
loopne
stos
cwtl
mov
bound
std
pop
pop
xchg
mov
xchg
icebp
dec
test
dec
rorl
pushl
mov
lret
mov
mov
movsl
in
hlt
xchg
push
add
loopne
dec
ljmp
mov
test
xchg
adc
mov
scas
fisubl
out
dec
in
mulb
shrb
jl
sbb
addb
and
or
fcos
fisttps
cmpsb
sbb
or
push
das
mov
fadds
std
sarb
push
add
add
xchg
add
push
xchg
sbb
data16
cli
or
jbe
jl
ret
mov
call
mov
aas
lock
or
pop
data16
pop
in
jp
sahf
pop
movsb
addr16
inc
lretw
loop
test
pop
out
mov
mov
cmp
push
sbb
pushf
or
jg
add
jge
add
mov
sbb
jmp
scas
push
mov
test
sub
sbb
and
hlt
and
inc
ret
pop
loop
sub
add
xchg
ret
in
lret
adc
mov
out
mov
add
cmp
mov
cs
cmpsb
push
frstor
add
jnp
mov
iret
stos
mov
sbb
xchg
and
rcrb
push
mov
outsl
outsb
lock
mov
push
sub
or
outsl
mov
or
out
ljmp
adc
loope
xor
nop
mov
pop
enter
push
adc
addl
and
icebp
roll
pop
sarl
into
mov
andl
js
sbb
fildll
movsb
dec
xor
inc
sbb
mov
xchg
cmp
aas
notl
flds
outsb
sahf
loop
int3
incl
cwtl
mov
dec
negl
addb
jae
aad
adc
adc
dec
mov
lods
mov
mov
mov
ljmp
xchg
xor
lret
pop
cld
clc
push
enter
cld
sbb
popf
or
popa
sbbb
adc
mov
insl
testl
loope
mov
mov
add
das
xchg
lahf
fsubp
pop
pushf
mov
mov
lret
xor
jg
aaa
inc
cmp
sub
std
xchg
sarl
ljmp
xor
es
lcall
ret
lea
add
fiadds
xchg
add
int
push
nop
mov
cli
pop
and
aas
sbb
negl
add
shll
out
out
aaa
add
sbb
fcomip
mov
test
add
push
test
filds
movsb
jne
cltd
mov
xchg
xchg
push
cmp
lea
stos
mov
and
pushl
arpl
pop
iret
pop
pop
push
push
adc
inc
and
pushl
push
mov
mov
mov
mov
mov
stc
lahf
test
shlb
ret
mov
cmpsb
pop
js
jo
lods
sbbb
bound
inc
adc
xor
push
std
jo
inc
sarl
and
es
cmp
mov
xchg
inc
cli
lds
rorb
pop
pop
cmc
xchg
icebp
fsub
lds
into
test
repnz
pop
iret
adc
mov
scas
outsb
cmpsb
push
test
add
xorb
cmpsb
inc
stos
push
mov
mov
and
jg
imul
pop
je
mov
push
sub
pusha
xchg
adc
inc
mov
insb
add
jnp
std
filds
and
movsl
pop
or
push
ss
xchg
pusha
pop
test
mov
pop
aaa
mov
push
out
adc
das
mov
in
sbb
pop
push
fmulp
push
sbb
mov
sub
xchg
and
addb
loop
sub
fcomps
cs
out
cld
push
fsubs
cmc
and
dec
scas
lahf
test
adc
xchg
push
mov
cmp
push
call
fidivrs
nop
fs
filds
add
test
inc
xor
pop
add
fcmovnu
mov
jp
push
idivl
mov
add
add
mov
shll
testl
test
ljmp
ret
mov
faddl
or
adc
aas
sbb
mov
call
decl
in
dec
or
cld
ret
int3
adc
sbb
sub
std
cli
aaa
mov
cmpsl
push
sbb
dec
or
push
inc
call
and
nop
mov
mov
lock
or
jo
lock
jne
jmp
dec
push
stos
cs
dec
out
ret
rorb
in
add
movd
pop
out
or
das
mov
sahf
xor
or
daa
cmpsl
test
fnstenv
or
xor
addr16
or
in
bound
pop
xorl
inc
shrl
sbb
ja
jno
popa
shr
add
jle
fmull
arpl
push
dec
repz
xlat
cli
ret
insb
shlb
les
lock
loopne
nop
rcrl
in
shlb
cmc
lods
je
ret
xchg
push
loopne
and
ror
in
cmp
add
push
xor
pop
call
mov
inc
sbb
test
push
ret
mov
inc
daa
dec
adc
loop
inc
pop
lea
lock
cmp
cmp
adc
fwait
xchg
xor
dec
mov
push
push
mov
faddl
out
dec
mov
mov
inc
mov
or
add
inc
push
push
shl
loopne
push
sub
ds
jl
lods
sbb
fldl
in
sbb
mov
xor
mov
enter
cli
push
test
xor
cmp
jo
add
sarl
out
movb
sbb
lock
js
lock
inc
hlt
or
shlb
xor
and
call
xor
jbe
test
jno
cltd
xor
ficompl
mov
scas
clc
add
dec
data16
cld
xchg
cmp
aaa
inc
rolb
clc
mov
jle
clc
ja
sbb
cwtl
sahf
cltd
pushl
outsl
ljmp
call
mov
sbb
and
mov
sbb
hlt
fisttpl
fmul
sbb
xchg
mov
sub
sub
pop
shl
test
and
test
and
add
push
out
mov
mov
sub
jge
xor
pop
dec
movsl
or
outsb
push
jecxz
into
and
std
mov
adc
movl
pop
fildll
or
call
sbb
xchg
fwait
lods
fbld
sbb
scas
dec
neg
xchg
lds
mov
mov
push
or
xchg
jecxz
add
xchg
add
lcall
int
cli
sbb
xchg
nop
cwtl
mov
pop
cld
aas
or
daa
mov
lcall
pop
sbb
cli
inc
add
jo
xchg
mov
add
test
pop
mov
loope
lcall
inc
aaa
sub
mov
push
jp
movb
dec
push
fwait
dec
dec
lret
sbb
ss
subb
daa
lcall
mov
out
cmp
shrb
sub
fcomip
jbe
mov
dec
es
cmp
jp
cmp
mov
in
inc
dec
es
cwtl
add
pop
xorb
add
sub
lock
or
test
cli
aad
sahf
stos
rcr
lcall
ds
aad
sbb
insl
aaa
hlt
lcall
mov
shll
cs
fs
orb
pop
inc
cmpsl
mov
adc
loop
loop
and
mov
xchg
out
in
sbb
mov
lds
add
sbb
pop
cmp
xor
cs
ret
jg
loop
ficompl
push
ret
push
or
mov
push
xchg
les
pop
and
cltd
cmpsl
xor
add
xchg
movsl
scas
fwait
hlt
mov
jb
lret
cs
sub
sbb
test
inc
mov
mov
frstor
cmpb
xorl
int
lods
loope
jno
lret
jecxz
icebp
dec
add
cmc
and
mov
xor
mov
inc
mov
fwait
or
push
dec
sti
or
pop
pusha
push
mov
mov
sub
fsubrs
sub
js
repnz
adc
inc
loopne
mov
lcall
push
adc
lahf
xchg
inc
mov
pop
dec
push
je
dec
sbb
icebp
mov
lret
jno
jns
mov
cmc
mov
loopne
xchg
sbb
jecxz
cmp
bound
int3
inc
mov
push
pop
cmp
popf
enterw
lahf
push
fstpt
push
pop
cmc
mov
cmc
lahf
sahf
mov
or
rcr
inc
jbe
push
cmp
dec
or
pop
add
jo
xor
mov
ficompl
pop
lds
lea
xchg
mov
dec
pop
dec
scas
sub
outsl
stos
xchg
jge
xor
shr
push
ljmp
es
cmp
inc
mov
sub
cvtpi2ps
nop
lods
xor
scas
clc
or
repz
mov
bound
ljmp
scas
xor
cmp
out
or
fstps
cld
cmpsb
loopne
in
test
rolb
add
in
mov
mov
enter
aam
mov
popa
jge
mov
push
pop
pop
mov
xchg
lret
pushf
inc
clc
or
out
jge
pop
inc
jbe
push
loop
icebp
mov
sbb
add
fidivrs
cli
lcall
add
out
mov
daa
add
adc
mov
push
xor
mov
test
add
lock
lahf
xchg
add
mov
icebp
adc
fnsave
inc
or
ss
ficomps
add
mov
jge
xchg
jmp
sar
pop
mov
rol
add
and
pop
add
mov
enter
pushl
cli
es
inc
push
add
fistpll
and
les
adc
call
nop
rorl
jns
mov
add
fimull
add
daa
inc
dec
mov
fwait
pop
aaa
lods
add
sar
sub
lods
cmp
clc
rolb
inc
outsl
dec
add
lds
mov
test
xchg
lods
ljmp
xlat
test
jb
roll
pop
into
dec
lea
std
and
enter
pushf
and
jo
adcl
in
pop
push
outsl
xchg
mov
sub
xchg
pop
scas
ja
jg
scas
add
insb
jno
jo
mov
mov
in
push
pusha
std
cmp
call
push
dec
mov
lds
adc
push
lods
add
das
mov
add
and
mov
insl
outsl
and
push
cmp
inc
push
mov
out
adc
mov
sub
movsl
jo
sbb
ret
stos
mov
pop
add
pop
sbb
jo
notb
or
repz
inc
lods
scas
outsb
outsl
add
mov
or
sub
push
sub
xor
inc
lcall
pop
shlb
xorb
jne
pop
aaa
or
out
pushf
mov
ret
or
das
jo
leave
pop
or
xchg
loopne
test
imul
add
add
jo
and
and
xor
test
das
push
mov
stos
mov
or
test
nop
fimuls
aad
imul
cld
out
mov
inc
sbb
movsl
inc
out
mov
icebp
lcall
es
cmp
adc
andb
loope
mov
je
and
jb
aam
push
pushf
pushf
dec
dec
int3
push
inc
std
dec
mov
mov
outsl
pop
pop
ja
sub
push
fdivrl
cltd
push
ret
jecxz
add
cmpsl
fwait
mov
dec
cld
ljmp
pop
scas
xchg
nop
xchg
dec
pop
call
xchg
sahf
hlt
inc
fs
stos
inc
sti
push
rclb
dec
push
and
fistpl
cmc
pushw
cmpsl
clc
push
dec
lahf
jnp
int3
sar
mov
add
lds
inc
ljmp
shr
mov
insb
push
mov
shll
xor
push
push
push
mov
add
xor
mov
sbb
fidivl
lods
sbb
xchg
nop
incb
jns
pushf
js
andl
div
stos
sbbb
cltd
add
sub
arpl
xor
aaa
std
sub
inc
out
inc
pop
loop
jo
jno
mov
and
repz
sub
and
sbb
mov
ljmp
mov
xchg
mov
jb
pop
add
rcrb
cmc
imul
pop
xchg
xchg
les
xor
ljmp
addl
push
jmp
xchg
sbb
xchg
nop
ss
jg
out
cmp
cmp
inc
scas
xchg
leave
adc
ljmp
inc
movsl
hlt
mov
jmp
or
mov
cli
rolb
push
js
adc
orl
jecxz
repnz
out
add
out
xor
insl
dec
lock
xchg
je
pop
pop
mov
cmp
fisttps
dec
pop
xorb
jne
rcr
popa
mov
and
mov
popa
xor
mov
xor
ret
sub
popa
popf
adc
sub
push
scas
cmp
mov
adcb
mov
ds
dec
sub
repz
mov
xor
dec
test
push
or
pushf
xchg
insl
aam
pop
push
ds
sub
hlt
or
mov
andb
cmc
bound
mov
hlt
lock
mov
pop
jne
mov
xchg
lock
pop
push
mov
add
mov
adc
gs
aas
push
pop
mov
movsb
outsb
jmp
pop
decl
sub
aas
xchg
and
add
mov
mov
call
sti
addr16
mov
hlt
mov
or
ds
popa
clc
or
pop
lds
jo
add
push
int
cli
sbbb
cmpsb
sti
or
cmp
outsb
jg
pop
xor
mov
aam
nop
mov
lock
pushf
push
adc
leave
fmuls
add
xchg
sbb
lock
xor
cmpsl
std
cmp
decl
sbb
loopne
add
test
arpl
fnsave
mov
fistps
lods
add
cmpsb
or
fcomip
xchg
add
jno
jmp
rorb
stos
pop
pop
imul
fsubrl
and
adc
dec
hlt
out
ljmp
sbb
add
pop
and
and
cmp
adc
inc
jbe
test
add
adc
fsubrs
in
inc
xor
iret
push
call
mov
ret
ja
lcall
lds
lret
or
das
mov
insl
mov
add
sbbb
movsb
mov
fdivs
sub
dec
xchg
add
test
std
fwait
ss
xor
int
inc
push
cli
jo
adc
orl
push
pop
lcall
nop
mov
in
loope
bound
aaa
add
pop
test
into
adc
inc
xor
add
and
incl
mov
pop
mov
add
xchg
out
sbb
ret
or
pusha
sbb
jl
sbb
imul
test
data16
adc
push
push
mov
push
push
lcall
in
inc
adc
mov
stos
sbb
jo
mov
out
xchg
inc
xchg
dec
pop
decl
or
bound
xlat
inc
jecxz
leave
push
leave
pushf
ja
sbb
adc
xor
lods
mov
stc
adc
cmpl
push
mov
ljmp
mov
rcrl
mov
hlt
push
sarb
mov
mov
and
pop
loopne
xchg
mov
pusha
add
pop
mov
popf
cs
enter
mov
or
mov
push
js
mov
add
xchg
fdivl
aad
add
dec
lods
ret
scas
clc
ret
and
jg
cmp
mov
or
pop
in
in
xor
scas
js
mov
push
shr
stc
add
lcall
xchg
fldenv
loope
cmp
aaa
dec
mov
sbb
pop
gs
cmp
pop
adc
test
xchg
sub
mov
pop
pop
clc
xor
push
negl
fisubrl
and
pushf
mov
outsl
fildll
inc
add
and
push
incl
mov
cwtl
mov
xchg
or
enter
mov
sbb
pop
roll
inc
mov
sbb
add
shrb
daa
dec
pop
inc
jns
cmp
pop
push
or
insb
pop
or
ret
fcomi
xchg
mov
push
in
inc
push
movsl
es
and
aam
sbb
cmpsb
add
mov
push
mov
std
rolb
rcll
xor
jns
or
sub
sub
movsb
adc
sub
mov
push
add
add
pop
xor
mov
mov
lock
push
sub
bound
add
out
ss
rcll
mov
sbb
in
aad
testl
push
faddl
push
lock
aaa
cmp
aad
add
ljmp
out
bound
cwtl
gs
or
xchg
add
test
out
mov
loopne
add
test
jne
add
inc
add
pushf
dec
cmp
add
fadds
test
orb
inc
jnp
stos
bswap
push
mov
data16
pushf
shrl
add
aaa
pusha
popa
aaa
sarb
jecxz
mov
cmpsl
cld
mov
jecxz
mov
sti
or
shlb
cld
loopne
push
xchg
push
dec
aas
aam
cld
lock
popf
loopne
bound
xchg
xor
mov
push
mov
adc
stos
ficomps
aad
push
inc
in
mov
pop
pop
push
ret
pop
push
add
mov
decl
nop
pushf
cmpl
daa
xor
in
mov
adc
loopne
jecxz
cmp
push
loopne
aaa
jg
mov
xchg
mov
dec
adc
rorb
inc
in
shll
popf
addb
fcomip
mov
rol
adc
popf
lds
and
pusha
cwtl
sbb
mov
inc
mov
icebp
push
jnp
or
cmc
into
aas
sbb
jbe
decb
adc
fcoms
repz
test
loopne
aas
add
lret
push
cmp
out
jle
pushf
in
in
stos
mov
cli
mov
adc
cmp
add
test
push
nop
stc
and
jns
xor
push
lcall
pop
cs
repnz
cwtl
add
in
icebp
test
sti
insl
or
mov
aam
in
test
add
test
fisttps
add
sbbb
je
xchg
inc
icebp
xchg
aam
fmull
scas
adc
scas
scas
clc
dec
or
mov
bound
add
fiadds
adc
push
iret
sbb
pop
and
cmp
dec
and
in
sarl
jb
daa
ja
push
inc
pop
cli
jg
aam
ret
scas
mov
sub
mov
jmp
add
shlb
or
loop
push
lcall
push
pop
and
das
push
sahf
clc
dec
jbe
jno
jo
xor
loope
fbstp
popa
enter
js
add
popf
sub
cmp
rorl
sub
and
cmp
loop
cli
das
cmpsb
cmp
push
repnz
push
mov
jecxz
aad
push
cmp
dec
lahf
lods
push
das
add
fcmove
addb
enter
ret
ret
pop
lock
int3
sbb
pop
sub
mov
call
js
test
or
int3
andb
add
dec
clc
dec
add
push
push
addr16
xchg
mov
add
cmpsb
sub
pop
sbb
lock
jmp
push
stos
pop
icebp
sub
pop
popa
dec
outsl
pop
rorb
js
or
dec
xor
cmp
fdiv
ret
jg
test
and
lock
jg
loopne
mov
stc
mov
aad
popa
adc
add
add
push
or
lcall
xchg
insl
std
inc
push
or
jae
inc
dec
adc
push
pop
adc
paddb
mov
jg
fistps
sbb
add
cli
bound
adc
pop
insb
cli
mov
inc
sbb
rolb
add
cmp
or
test
add
cmp
cli
sbb
lods
ret
into
pusha
fwait
in
push
dec
into
pushf
dec
pop
test
sar
mov
cs
push
xchg
divb
insb
mov
push
dec
mov
adc
sub
mov
push
jl
pop
pop
adcl
movsl
sub
testl
dec
fmul
enter
mov
hlt
lcall
repz
adc
adc
ret
lret
in
adc
xchg
add
or
dec
pushf
das
subb
ljmp
push
cs
fisubl
mov
xor
sarb
inc
jno
cmp
mov
ffreep
fs
call
add
jo
shlb
sub
test
jo
or
test
pop
dec
jb
or
incl
and
mov
pop
lock
mov
adc
sbb
cwtl
pushf
movb
out
mov
out
lret
cmp
push
jo
enter
and
mov
repnz
ficompl
and
push
mov
decb
call
icebp
out
push
das
and
push
cmp
scas
inc
aam
xor
or
nop
out
xchg
mov
mov
in
stos
mov
adc
cli
int3
mov
inc
ljmp
jle
aas
pop
sbb
push
lock
pop
mov
call
cmpl
shl
pop
xchg
xor
aaa
pop
adc
std
call
adc
loopne
movsb
cmp
inc
ja
jl
lcall
xor
inc
push
mov
and
push
pop
fistl
hlt
lahf
add
and
or
call
push
outsl
js
andl
test
scas
add
sbb
mov
int3
adc
aaa
ljmp
sbb
xchg
das
jecxz
mov
mov
cmpsb
jne,pn
ds
dec
in
add
js
xchg
rorl
xor
adc
pop
cmpsb
xchg
pop
aas
sbb
push
mov
mov
jl
xor
popf
adc
pop
lret
movsb
lds
inc
aaa
mov
inc
int3
bound
xorb
icebp
jg
andb
nop
xchg
jmp
sub
lcall
xchg
cwtl
or
pop
mov
add
add
inc
ret
shrb
sub
or
popf
mov
rolb
add
int3
and
arpl
mov
mov
xchg
adc
nop
ljmp
add
fldenv
mov
add
out
mov
xchg
cmpsb
rorl
mov
rol
scas
jle
test
bnd
adc
xchg
xchg
sub
pop
mov
loope
ss
lods
xchg
bound
stos
cmp
imul
fdivs
pushl
hlt
jno
mov
pop
rolb
mov
inc
clc
scas
outsl
outsl
dec
mov
and
bound
mov
clc
pop
lock
js
xor
pop
jp
rol
inc
jg
and
ret
scas
push
cmp
xchg
leave
push
setl
mov
comiss
ljmp
adc
repz
push
sti
adc
add
or
fs
and
fiaddl
sub
adc
dec
aad
mov
adc
mov
push
mov
loope
imul
cmp
and
pop
int
push
mov
fs
cli
mov
jp
fwait
ss
ret
lods
imul
out
outsl
adc
or
dec
stc
inc
nop
outsl
mov
jmp
mov
loope
cwtl
stos
filds
pop
pushf
dec
pusha
lods
out
loope
add
imulb
mov
xlat
add
xor
xor
bound
fstpt
adc
sbb
stc
cmp
fmul
cld
into
addr16
in
cli
push
push
aas
fdivs
jmp
outsb
mov
cli
insl
fucomi
xchg
dec
pop
push
js
ret
ljmp
and
cli
jp
js
mov
mov
xor
or
test
inc
clc
dec
add
aaa
add
es
in
adc
test
mov
into
vmread
pop
mov
xchg
scas
inc
cmpsb
inc
cmpl
pushf
and
and
add
icebp
sbb
mov
mov
lock
sbb
fs
mov
lds
mov
mov
je
fcomps
push
jmp
adc
iret
mov
and
xor
jg
push
in
dec
push
xor
std
sub
iret
stos
or
sbb
stos
mov
mov
fwait
and
jg
ljmp
sti
cmpsb
mov
xchg
xchg
xchg
push
mov
out
pusha
mov
mov
push
iret
ljmp
ljmp
call
repnz
xor
sub
fsub
mov
mov
aam
pop
fildll
xor
add
std
xchg
sbb
lcall
or
inc
and
std
xor
mov
add
int
or
subb
movsl
out
mov
add
imul
and
mov
jle
mov
lcall
mov
push
lret
ljmp
adc
arpl
addr16
test
bnd
int
inc
xchg
mov
add
cmc
push
xor
add
out
jb
dec
inc
jbe
add
lods
decl
es
iret
fnstcw
aas
cld
or
aas
cli
add
xchg
xor
pop
flds
fs
or
cli
jge
fmull
test
stc
pop
push
mov
dec
out
mov
movsl
js
mov
xor
dec
incb
dec
mov
test
ret
push
mov
sahf
dec
je
pop
pop
je
jl
outsb
orl
outsb
pusha
xchg
push
or
pushf
add
pop
jg
loop
adc
test
pop
movsb
mov
fldcw
lds
stc
in
loopne
fxch
arpl
mov
mov
add
xchg
enter
mov
add
out
mulb
outsb
jp
fmull
hlt
out
xchg
jl
add
in
je
xchg
and
idiv
jg
popf
iret
xchg
fsubl
inc
push
and
in
fstl
outsl
cli
aaa
mov
jg
divb
insb
inc
mov
and
add
scas
jg
and
add
mov
inc
aaa
add
add
mov
arpl
xchg
mov
add
jns
imull
dec
loope
nop
lea
outsb
inc
rcl
pop
fisubl
xor
daa
pop
pop
adc
jmp
das
push
popa
fbstp
add
push
mov
push
cmp
mov
lock
aad
loope
pop
cmc
stos
and
pop
mov
jae
bound
cmp
clc
mov
jbe
cmp
sub
lock
mov
scas
ret
test
into
mov
ret
fcomps
daa
sub
adc
mov
sub
sar
fwait
add
xor
sbb
setnp
cld
dec
mov
aad
leave
xchg
insl
mov
jbe
out
js
scas
mov
nop
inc
outsb
add
push
out
mov
inc
les
push
adc
or
xchg
shlb
fwait
aaa
adc
xchg
lock
into
or
xchg
inc
aad
test
cmpsl
pop
popa
jne
test
aad
sub
jp
xor
add
out
insb
hlt
insb
cs
sub
cltd
pop
add
or
dec
push
scas
decb
mov
and
and
inc
dec
jne
add
outsb
clc
mov
mov
adc
insb
jecxz
or
mov
xchg
ss
xchg
rcl
notb
sbb
cltd
pop
and
ret
lods
popw
leave
hlt
push
adc
dec
cld
pop
inc
sbb
mov
aam
jle
inc
in
mov
add
adc
add
sub
shrb
jbe
dec
dec
dec
jo
inc
mov
lods
adc
movsb
sbb
sbb
mov
lret
data16
lea
sbb
in
adc
lret
mov
sub
xor
jbe
jecxz
insl
cmpsl
pop
mov
lds
push
in
push
add
and
push
loopne
test
mov
mov
jo
inc
in
sbb
and
in
rol
mov
icebp
fwait
gs
push
ret
xchg
add
add
push
into
add
in
and
pop
push
rorl
sub
cwtl
das
mov
fdivl
sbb
stos
jg
mov
inc
ret
aaa
mov
push
sahf
clc
mov
sub
ja
mov
add
jbe
cmp
mov
popa
lock
push
sub
push
in
lods
sub
arpl
cwtl
out
or
add
sub
cld
in
jle
ficompl
mov
sbb
mov
out
jmp
movl
sub
cld
stos
push
xor
xor
mov
pop
add
and
call
clc
lods
push
add
lea
clc
subl
dec
adc
dec
mov
xchg
mov
adc
sub
faddl
pop
push
or
in
jbe,pt
ret
mov
push
inc
and
cmp
inc
scas
or
ret
stos
ljmp
rclb
xor
adc
adc
push
ljmp
daa
es
cmovo
ret
add
mov
dec
insl
call
add
pop
cli
insl
push
jmp
mov
scas
pop
or
ret
and
jp
mov
or
adc
stos
loop
xlat
adc
cmpsb
jg
pushf
cli
adc
subb
cli
int
clc
mov
mov
cmc
or
push
jg
push
dec
loop,pt
sti
sbb
and
push
or
into
pop
movsl
push
nop
out
fadds
adc
int3
stos
jno
ljmp
adc
scas
pop
push
mov
daa
mov
xchg
aaa
ljmp
sub
imul
or
xor
and
add
add
popa
test
jg
pop
stos
pop
adc
add
mov
add
adc
inc
add
push
mov
movsl
repz
jnp
push
stos
xor
inc
cmp
mov
mov
incb
clc
out
fisttps
cmp
bound
or
jecxz
das
lcall
insb
inc
test
mov
test
pushl
shl
outsl
push
add
jle
lahf
call
arpl
lods
add
cld
push
jmp
xorl
mov
xor
adc
jnp
xchg
pusha
insb
aaa
cmp
or
push
jmp
xchg
in
jmp
adc
xor
adc
or
mov
and
fisubrl
sbb
jg
push
adc
shrb
ja
add
jnp
inc
dec
data16
dec
andb
sarb
mov
rclb
sbb
scas
cwtl
add
jge
xor
into
sbb
xor
hlt
pop
ljmp
add
sti
mov
stc
and
mov
dec
mov
dec
jle
test
stos
out
mov
or
ret
js
xchg
aas
cmp
cmc
mov
cli
jg
push
sbb
aad
ljmp
mov
add
lahf
add
xor
pop
cltd
push
fs
insl
jmp
cwtl
int3
inc
aam
pop
pop
cmp
pushf
sbb
cmp
in
leave
jns
cmp
sbb
adcb
and
mov
ja
bound
sub
fdiv
mov
cwtl
outsl
jecxz
jns
cld
in
pusha
adcb
push
pushf
pop
scas
jae
ds
inc
and
popa
ljmp
xor
cmpsb
flds
xor
mov
pop
xor
and
loop
addl
xchg
sub
into
lds
jmp
gs
or
push
jmp
sahf
aam
sbb
add
int3
cltd
mov
cmpsl
popf
push
xlat
jl
inc
roll
std
lcall
outsb
or
dec
mov
push
fmull
jle
mov
test
pop
add
sub
lcall
sub
mov
fst
imul
movsb
shr
ret
mov
call
mov
mov
jg
fldt
int3
in
xchg
loop
movsl
adc
lds
lods
dec
xor
add
aad
imul
pop
mov
les
mov
dec
mov
fidivs
bound
dec
js
sbb
sub
adc
mov
iret
adcl
mov
or
lret
or
je
std
into
add
out
dec
sub
pop
lods
arpl
dec
xchg
adc
dec
mov
out
mov
cli
adc
cmp
std
pop
mov
loop
fbstp
dec
aad
mov
es
xorb
ret
mov
pop
push
add
mov
push
inc
adcl
fs
lea
dec
jle
and
inc
mov
hlt
adc
mov
ret
arpl
mov
rolb
add
andl
pop
cli
in
pop
jl
dec
pop
push
hlt
xchg
sub
xchg
jp
push
inc
out
ret
mov
insb
aad
inc
cmc
mov
mov
insl
push
push
xchg
mov
jle
sub
inc
sub
jl
clc
dec
call
sub
jl
jnp
add
adc
jo
sti
add
das
dec
cmp
rol
xor
or
mov
fcomps
cmp
insl
pop
cmpb
mov
sub
mov
add
repz
lock
or
popf
mov
add
or
stos
mov
js
mov
add
and
in
idiv
nop
inc
out
mov
xchg
movsb
test
fsub
cmp
add
inc
aaa
stos
or
out
and
adc
xor
andb
scas
mov
call
jne
sbb
fistl
call
stos
loop
pop
mov
and
out
or
cmp
cwtl
add
sbb
sbb
add
test
movsb
mov
inc
mov
lods
mov
fnstcw
mov
jg
les
mov
fadd
jecxz
outsb
jecxz
push
test
pop
mov
subb
inc
mov
push
imul
add
shrb
les
jmp
adc
add
and
cmp
std
mov
add
mov
fs
inc
add
cli
mov
decb
std
mov
scas
in
shl
jl
shlb
mov
jg
shrb
repnz
mov
sub
notb
rorl
pop
pop
mov
mov
mov
add
es
insl
int3
and
inc
das
push
push
leave
dec
cli
and
push
iret
pushl
adc
dec
dec
pop
out
loop
incl
ja
jns
sub
jecxz
jns
test
cmpsb
xchg
mov
sahf
imul
adc
mov
mov
xor
adc
pop
cs
aaa
sbbb
ljmp
rclb
movsb
xchg
pop
sar
cs
xchg
pop
and
stos
sbb
jmp
and
and
insl
push
mov
xor
or
or
es
pop
mov
fildl
data16
xchg
jl
sub
jbe
pop
pusha
jns,pt
hlt
aad
js
jb
fsub
lcall
into
jb
xor
push
adc
sbb
mov
daa
mov
sar
rol
push
addw
adc
pushw
sahf
shl
xchg
xor
mov
inc
jbe
cmpsb
adc
and
dec
pushf
sbb
push
addr16
outsl
cwtl
mov
push
add
stos
ja
mov
dec
mov
mov
sub
mov
pusha
ja
ss
data16
add
push
fdivrl
pop
std
mov
lcall
push
aas
fcompl
subl
loopne
addb
fdivl
shll
cs
sti
pop
pusha
roll
outsl
mov
out
jb
aam
pusha
cmp
insl
out
leave
les
inc
test
pop
cmp
out
add
mulb
mov
pop
loopne
mov
mov
mov
mov
xchg
xchg
jnp
cmc
es
push
pop
cld
inc
outsb
push
push
inc
pop
dec
add
jmp
and
lods
or
pushl
pusha
stos
adc
aad
pop
loope
outsl
or
push
test
push
into
cmpsb
jnp
into
clc
lcall
mov
pop
fcoml
adc
loopne
lock
sbb
add
arpl
in
movb
and
das
adc
dec
cmp
and
scas
test
iret
mov
incl
and
leave
repnz
jnp
dec
jle
jg
stos
sbb
imul
cmp
push
cld
fbld
or
adc
add
fst
pop
push
push
call
mov
adc
and
int3
xlat
mov
js
jp
rcrb
inc
dec
imul
push
jne
je
add
jp
stc
and
frstor
push
xchg
loopne
fdiv
ljmp
mov
test
add
push
clc
pop
mov
and
mov
aas
push
imul
sbb
xchg
mov
ljmp
shlb
sub
mov
push
outsb
sbb
sbb
mov
xchg
or
mov
daa
push
fwait
cwtl
std
enter
sbb
mov
push
sbb
add
arpl
pop
icebp
dec
movsl
cmp
lods
cmp
clc
pop
xchg
or
testl
inc
dec
ret
adc
stos
icebp
mov
jnp
and
scas
test
xchg
add
int3
pop
jne
iret
jno
dec
pop
in
and
jecxz
jo
cli
lods
shl
xchg
js
cmp
lret
icebp
xchg
testb
decb
sar
jp
les
loop
test
mov
faddl
mov
lock
bound
test
aaa
sbb
pushf
add
in
stos
lods
add
sub
in
and
add
pop
sub
jmp
rolb
insl
xor
aam
add
push
lods
xchg
clc
mov
or
mov
or
mov
mov
test
add
outsb
dec
add
mov
add
das
mov
sbb
sub
ret
in
rclb
enter
lcall
pop
jb
xchg
add
add
mov
mov
test
popa
adc
cmp
cld
sbb
rorb
cmp
scas
mov
push
fnstenv
out
xor
jb
dec
je
es
add
lret
cmp
icebp
mov
ds
addb
push
add
pop
aam
xchg
mov
dec
add
adc
imull
push
sbbl
sahf
clc
jno
jg
addb
mov
lcall
lret
cmp
jbe
adc
and
add
pusha
insl
mov
mov
stc
fdivs
or
fsubs
sahf
lcall
add
adc
adc
ja
das
jb
dec
xchg
lret
push
lahf
popf
cmpl
sub
inc
js
cmpsb
jae
mov
cld
incl
jno
push
daa
xchg
incl
lahf
outsb
lods
mov
data16
pop
or
xor
sub
add
push
jns
out
hlt
lret
fsubs
in
scas
int3
dec
dec
sbb
push
cmp
xchg
test
test
pop
pushf
rcrb
cli
and
test
in
push
adc
call
sbb
leave
int
outsl
jge
and
add
cld
bound
std
and
pushf
mov
enter
mov
or
jb
fwait
mov
insb
inc
xor
add
add
nop
in
cmc
mov
rep
or
fxch
imul
fdivl
jo
pop
push
in
mov
adc
dec
jp
mov
push
jg
xchg
int
or
adc
std
jecxz
xchg
xor
push
loopne
sbb
sbb
scas
inc
stos
scas
adc
inc
in
dec
jb
fildl
xchg
xchg
test
xchg
fcoml
push
rcl
pop
movsl
scas
in
cmp
push
loope
fwait
mov
add
loope
pushf
adc
add
fistl
add
and
inc
lock
lea
fadds
dec
mov
shrl
fsubrp
or
xchg
cmp
fbstp
xchg
jp
int3
or
push
fisttpll
push
inc
ja
aam
insb
hlt
out
call
fwait
inc
or
xor
sub
cli
mov
pop
xlat
ret
cmp
ljmp
mov
mov
cld
ds
loop
jmp
je
pusha
pushf
mov
stc
jbe
or
fildll
imul
mov
add
xchg
adc
negb
inc
push
dec
nop
and
push
imul
test
dec
push
add
cmp
mov
cld
scas
mov
test
xor
dec
pop
ljmp
xor
push
pop
bnd
xor
sbb
jbe
lods
and
push
call
repz
sahf
adc
out
cwtl
arpl
add
aam
sub
fdivrl
shlb
bnd
in
idiv
test
inc
adc
daa
test
xchg
push
into
les
mov
popf
mov
lods
ss
cmp
xorl
push
loopne
and
mov
fbstp
xor
mov
or
inc
lods
cwtl
jns
cmp
jg
cmp
hlt
out
faddl
fisubs
pop
js
jmp
add
xchg
jb
idivb
mov
insb
and
push
movsb
xchg
data16
int3
stos
ss
xchg
rclb
xchg
mov
xchg
scas
sub
add
testb
mov
test
and
add
lock
inc
cmp
mov
les
addl
lea
andl
push
adc
fidivrl
cs
bound
mov
xchg
and
orb
incl
sbb
ret
fdivrl
pop
subb
in
pushf
nop
mov
cld
and
mov
lret
push
mov
std
std
filds
mov
push
pop
scas
cmp
stos
aaa
insb
pop
stc
dec
test
adc
movsl
xchg
xchg
mov
aad
fdiv
je
dec
aam
dec
in
mov
jmp
push
leave
sub
mov
or
mov
xchg
lods
fldl
mov
mov
mov
mov
adc
sub
add
stos
mov
fistpll
mov
cmp
je
add
iret
into
test
jb
icebp
ljmp
jo
dec
sbbl
xchg
cwtl
sbb
or
adc
mov
mov
pop
inc
insb
scas
ret
sub
lcall
fadds
mov
mov
decb
cld
jmp
es
addr16
jl
and
mov
cmp
into
push
adc
mov
xor
lock
pop
clc
jno
push
sub
lahf
rolb
push
add
loope
add
cmp
or
push
fiaddl
push
icebp
xchg
mov
inc
mov
sbb
cmpsb
push
xor
insb
loopne
aas
lcall
lock
push
sahf
jg
pusha
mov
negl
dec
aaa
lds
xor
sahf
call
add
xor
pop
pop
push
js
ss
add
jl
add
sbb
int
in
sbb
loopne
mov
dec
jnp
add
lock
inc
xchg
mov
js
rorb
cmp
ja
jmp
xchg
jb
ljmp
jg
pusha
xchg
sbb
fdivrl
lret
cmp
fldcw
cmp
xor
sbb
add
cmc
scas
push
in
call
mov
add
inc
movsl
cltd
mov
int
imul
ja
jo
jecxz
cmp
sub
mov
mov
das
in
enter
mov
adcb
sbb
inc
push
dec
cmp
mov
dec
adc
pushfw
or
stos
clc
loopne
call
cmpl
test
das
xchg
ljmp
mov
push
pop
loopne
jg
jle
or
jp
dec
loope
cli
scas
aas
adc
sbb
lock
xchg
lahf
adc
mov
push
sbb
imul
mov
test
jp
inc
add
ss
inc
or
cmp
ljmp
xor
outsb
nop
add
loopne
bound
mov
inc
mov
and
inc
mov
mov
inc
or
mov
mov
push
outsl
std
add
scas
push
jmp
xchg
sub
sti
sahf
loop
in
inc
and
adc
pop
inc
mov
sbb
sti
jp
ljmp
sub
pop
mov
add
stos
mov
or
in
cld
js
mov
pop
cmc
test
je,pt
scas
pusha
pop
dec
push
or
nop
ror
jmp
adc
je
mov
stos
aam
ljmp
dec
loope
push
pop
subl
in
or
mov
bound
push
icebp
outsl
adc
push
mov
fcompl
jb
cld
mov
add
adcl
ficompl
xchg
push
sar
lods
or
data16
jo
add
mov
fbld
adc
pop
lcall
lods
loopne
sub
and
xbegin
inc
dec
das
pop
jecxz
push
stc
mov
lret
push
push
arpl
jae
mov
scas
addr16
mov
add
mov
out
aad
fldl
xlat
pop
or
xchg
mov
aaa
adcb
cwtl
mov
push
js
mov
inc
and
cli
xchg
js
loope
xor
fcmovb
inc
mov
mov
popa
in
faddp
jecxz,pn
shl
int3
aam
insb
stos
mov
cmp
pushf
sarb
flds
test
sbb
xor
add
popf
dec
mov
pop
clc
sbb
fdivrs
xchg
or
gs
cmp
xor
nop
xor
jae
add
add
jbe
out
cmc
insl
adc
lods
or
mov
sbb
or
inc
fcmovbe
push
shrb
mov
fadds
add
cmp
cmpsl
sbb
add
mov
ret
cmp
sbbb
sbb
aas
and
outsb
add
sub
xchg
dec
fldenv
inc
cmc
cmpsl
daa
pop
nop
cmpb
mov
outsl
sbbb
jecxz
xor
mov
hlt
movsb
dec
dec
rcr
mov
xor
add
call
jecxz
std
pop
arpl
mov
nop
xchg
fnsave
ljmp
outsb
incl
into
push
mov
xchg
addr16
shrl
int
rclb
jmp
jmp
xchg
loopne
rolb
testb
adc
xchg
push
xor
andl
inc
inc
ss
jmp
pop
ja
add
dec
jo
mov
aad
jbe
fs
icebp
push
les
add
aas
mov
jmp
push
inc
mov
dec
in
inc
pop
inc
pop
test
jmp
mov
iret
nop
out
stos
pop
pop
and
mov
mov
lods
mov
fmull
adc
push
add
adc
mov
or
or
loop
cmp
adc
mov
sti
sbb
gs
sbb
xor
ret
jle
add
and
int3
repnz
mov
jg
xorb
popa
loopne
push
out
sbb
mov
loop
sub
std
or
clc
sub
fidivl
push
aaa
mov
dec
jecxz
jle
cmp
add
xchg
jecxz
xchg
xchg
sbb
mov
aas
mov
xchg
add
push
notb
pop
je
lret
ret
mov
shl
in
xchg
jle
enter
jecxz
sbb
mov
test
out
subps
andl
lcall
sbb
push
mov
cmp
es
mov
je
dec
sub
jg
icebp
jg
dec
inc
push
sub
sahf
andl
sti
cmp
adc
and
nop
loop
ficoms
pushl
ret
stc
inc
mov
aad
negl
sbb
cmp
mov
test
dec
iret
movsl
jg
mov
int
inc
sub
or
dec
enter
frstor
aad
or
or
sbb
mov
es
insl
sbb
adc
cmp
dec
pop
dec
xchg
movsl
subl
sbbl
mov
pop
mov
popf
arpl
ret
je
and
iret
push
shrl
test
imul
into
add
fstpl
nop
fcmovnb
test
std
cld
add
cmpsb
insl
sbb
or
fcmovb
incl
aad
sbb
aas
cmp
stc
mull
adc
pop
cmc
sbb
out
mov
dec
ss
clc
adc
pushl
sbb
enter
outsl
jge
test
jl
outsl
or
mov
int3
dec
in
xor
pop
push
fimuls
dec
int
mov
push
std
jge
pop
mov
lods
xchg
sub
inc
sti
cmp
sti
or
xor
add
cmp
push
mov
pop
icebp
test
imul
std
ja
dec
leave
dec
test
inc
daa
movd
push
mov
stos
fldt
pop
xor
dec
flds
xor
cmpsl
fildl
pop
je
sbb
inc
test
scas
xor
repz
mov
xchg
mov
mov
mov
test
push
xor
sub
pop
xchg
out
decl
stos
pusha
fmuls
insb
repnz
sbb
cmp
dec
stos
mov
mov
dec
ret
inc
clc
incb
int
fwait
incl
rcrl
fldcw
cmp
xor
incl
fisubrl
into
test
xor
pushf
mov
fadds
inc
add
inc
scas
sbb
sahf
jl
fs
pop
xchg
sbbl
pop
mov
jle
xchg
push
ds
sub
push
jmp
mov
clc
mov
xor
add
mov
flds
int3
and
push
out
mov
mov
dec
clc
sbb
mov
mov
sbb
adc
mov
scas
xor
loopne
fucomi
xor
push
movsb
mov
lods
jg
pop
rorb
add
push
push
cld
test
sub
test
adc
sbb
cmp
mov
xchg
xor
testl
mov
lods
mov
mov
jno
push
fildll
ficomps
and
push
jmp
push
jbe
fucom
push
insl
push
push
popa
cmp
sub
push
pop
xchg
mov
mov
lahf
fdivs
cmpsb
inc
mov
faddl
loope
sub
jae
les
jg
aad
mov
inc
stos
xchg
int
outsl
mov
push
sbb
push
and
pop
outsl
mov
push
push
jbe
movsb
call
cmpsb
in
cwtl
xchg
push
pop
mov
pop
dec
xchg
cwtl
test
sarb
cmpxchg
mov
and
add
or
fiaddl
mov
jg
add
and
in
ds
xor
and
insl
rorb
sub
out
sti
imul
pop
mov
add
cmp
out
dec
pop
movsb
pop
xor
jl
adc
cmp
push
ljmp
out
pop
jg
mov
mov
push
mov
jmp
jb
shl
insb
xchg
insl
sti
sarl
or
adc
mov
add
add
cmp
scas
mov
jl
into
cmp
out
inc
cmp
adc
add
js
mov
ret
enter
shlb
push
pop
jg
inc
lock
outsb
cmp
es
jg
jo
pop
xchg
loopne
fwait
jae
jne,pt
sbb
jne
xor
xchg
xor
adc
jmp
sbb
xchg
rolb
mov
cmc
jo
test
inc
movsl
pop
jo
loop
or
and
sbb
inc
bswap
ret
out
pop
gs
jnp
xor
dec
shll
aad
ret
mov
jg
fwait
imull
sbb
pop
push
sahf
inc
out
fs
hlt
pop
push
and
aas
pop
rcrl
pop
sbb
adc
mov
and
dec
loopne
jbe
push
dec
inc
sub
mov
imul
fimuls
enter
jle
stos
loope
stos
mov
mov
cmpsl
sbb
test
add
iret
inc
mov
sahf
popa
or
and
sub
popl
xor
dec
jg
mov
push
pop
in
add
xor
jo
push
loope
adc
adc
lahf
xor
cld
or
and
hlt
das
movsb
pop
leave
jle
sub
xchg
aam
xor
ss
cld
aas
jo
mov
ret
out
popf
xor
aam
mov
dec
fdivrl
mov
sub
push
add
inc
jbe
lds
roll
jne
test
scas
mov
adc
push
or
jno
inc
sti
inc
lock
mov
or
lcall
aaa
xchg
adcb
jge
or
push
inc
mov
pushl
sbb
xor
push
push
or
outsl
sub
push
or
add
push
outsb
aad
push
rol
sbb
and
cmp
lret
aad
sbb
or
clc
adc
push
loope
push
stos
push
mov
repnz
sub
xchg
push
mov
jne
popa
roll
incl
push
pop
cwtl
fdivp
mov
or
xchg
mov
ret
mov
fisttpl
imul
xor
push
push
add
add
add
or
daa
push
jp
jbe
aam
jmp
push
or
or
sub
stc
adc
sbb
test
repnz
sub
rcl
push
jae
jne
sub
jle
lds
iret
clc
cltd
sbb
lods
pusha
rolb
cmpsb
inc
out
pop
mov
mov
or
mov
push
dec
cmpl
inc
mov
xor
xlat
sar
aaa
add
dec
dec
mov
jne
add
sti
xorb
add
xor
out
mov
rolb
pop
and
dec
pop
push
push
popa
xor
adc
dec
stos
nop
add
bound
outsl
clc
mov
add
cwtl
leave
add
mov
lret
cmp
insb
in
sub
lret
xchg
nop
ljmp
and
mov
push
cs
lret
pushf
add
sbb
adc
cmp
cmp
jno
jle
outsl
clc
into
adc
inc
loope
out
mov
loopne
inc
mov
xchg
hlt
imul
lcall
mov
mov
iret
push
dec
mov
dec
test
push
sbb
in
daa
fs
cmc
adc
test
push
fadd
jmp
cmp
xchg
fimuls
jl
inc
pop
xor
mul
enter
mov
lods
mov
push
sbb
add
mov
shll
mov
mov
das
call
xchg
add
fwait
mov
xor
xor
cmp
cmp
addr16
xlat
jg
lods
sub
adc
jl
movsl
ja
aas
rolb
push
imul
cmovge
out
adc
scas
int
test
dec
out
push
or
adc
xchg
push
add
push
push
leave
addr16
incl
push
mov
test
push
or
dec
ret
add
lahf
inc
insb
jae
xor
call
jl
push
or
in
into
cmpsb
outsl
mov
aam
cmp
push
inc
sub
fs
test
sbb
imul
pop
int
adc
pop
insb
cmc
adc
cld
popa
sbb
sar
push
mov
daa
lock
jle
js
ret
mov
shll
cld
jecxz
je
jns
in
jo
push
sbb
push
pop
add
xor
jmp
pop
pusha
stos
cld
jle
scas
loopne
into
dec
xor
xchg
xchg
mov
mov
ljmp
adc
stos
rolb
mov
mov
stos
pop
inc
fsubl
mov
loop
mov
nop
icebp
loop
decl
jno
mov
jne
mov
xor
inc
add
jbe
push
test
in
iret
inc
adc
repnz
jns
push
sahf
rcr
mov
add
call
push
push
imul
into
js
mov
incl
or
testb
aam
jb
das
pop
jp
and
mov
fiadds
inc
or
ljmp
fisubrl
mov
lds
add
adc
mov
adc
insb
pop
loopne
insl
ja
jns
mov
loopne
loope
adc
in
ret
outsb
mov
lock
cmp
nop
mov
sub
mov
fsubrl
add
sarb
test
jbe
pop
cmp
push
push
jo
add
mov
dec
call
add
bound
icebp
out
inc
mov
fs
fsubr
test
sub
andb
jg
ss
cli
sub
or
sbb
pop
int3
mov
int3
jmp
hlt
test
clc
cmp
mov
pop
adc
mov
dec
cmpsb
testl
xor
push
xchg
adc
inc
out
xor
dec
adc
in
pop
leave
dec
insb
jle
xrelease
sar
stos
jle
sbb
add
into
mov
mov
adc
push
cmp
add
loope
dec
dec
clc
data16
fildl
push
daa
scas
das
xor
mov
jle
fcompl
loop
test
mov
in
sbb
add
and
push
lods
inc
fwait
inc
cld
mov
cmp
xor
push
jo
mov
bound
sbbb
std
cmp
inc
fidivs
push
push
adc
dec
add
sbb
pop
lods
dec
pushf
nop
lret
aam
enter
adc
mov
jnp
mov
outsl
mov
push
add
int3
cli
cmp
add
or
xchg
cs
mov
cmp
ret
xor
pop
sbb
shlb
outsb
inc
cwtl
or
adc
push
push
xor
fwait
mov
jnp
pop
std
jecxz
xchg
movsl
sti
jnp
ret
out
lahf
popf
mov
push
xlat
addr16
xchg
adcl
xchg
icebp
push
jmp
mov
cmp
aam
mov
divb
add
clc
dec
add
xchg
sahf
sbb
lods
shrb
outsb
mov
xlat
cmp
imul
sbb
ret
mov
or
pop
cmc
subb
pop
xor
sar
in
bound
out
les
mov
push
in
nop
add
cmp
pop
lcall
js
enter
testb
mov
adc
dec
clc
jle
mov
sbb
pop
fidivrl
fwait
jp
inc
cltd
ds
sub
push
xchg
lret
jo
inc
or
fisubrs
sub
daa
test
aas
jle
cmp
dec
das
adc
mov
rcll
insb
jp
cltd
loope
fsubs
push
or
stos
in
xchg
add
ljmp
push
xchg
cltd
xchg
jbe
or
push
mov
push
inc
fildl
push
mov
bnd
jg
lock
xchg
add
ret
jb
es
das
dec
je
push
addl
jl
push
gs
cli
sbb
aas
inc
je
pop
cmc
jg
push
cmp
out
movsb
mov
pop
jnp
mov
mov
mov
xchg
cli
push
mov
scas
cmp
gs
sub
dec
cmp
cltd
js
dec
bound
cwtl
std
or
in
gs
ficompl
mov
int3
enter
stc
push
cltd
mov
push
test
ja
inc
inc
add
ret
and
xchg
mov
fcomp
stc
loope
addb
mov
bound
fisubrs
push
inc
mov
gs
push
das
push
xor
std
pop
fwait
cmp
add
jo
js
mov
cmpsl
jg
loop
cmpsb
sbb
mov
jecxz
mov
subb
rclb
dec
pop
in
das
shrb
inc
int3
shrd
jne
clc
add
mov
das
je
aam
js
andl
push
add
sahf
xchg
dec
scas
stos
call
sbb
jp
pop
ds
ss
stc
aam
add
jo
inc
pusha
aad
mov
testb
nop
faddl
enter
jg
cld
in
aaa
test
sub
adcl
add
dec
or
add
sub
decl
hlt
fldt
cltd
pop
jp
push
cmp
adc
xorb
clc
mov
popa
lret
jecxz
push
lock
mov
and
cmp
jmp
enter
jno
push
mov
adc
sbb
loope
stos
inc
ljmp
add
and
movsb
jae
xchg
add
out
push
je
push
pop
sbb
fdivp
mov
fmulp
mov
jo
fdivrs
fs
and
das
jbe
fcomps
movsb
cwtl
ja
outsl
ljmp
pop
pop
scas
xor
test
aam
movb
push
imul
add
inc
fisttps
mov
cmp
jmp
stc
hlt
push
sbb
jmp
jns
cs
cli
ljmp
subb
jns
sub
mov
lea
shrb
cmp
pop
xor
leave
pop
cwtl
pop
cld
icebp
arpl
push
adc
and
xchg
push
cs
xor
scas
cld
out
ljmp
test
adc
sub
xor
add
imul
xchg
push
xchg
or
and
or
in
add
sub
add
test
out
arpl
out
and
xor
enter
or
cld
mov
icebp
mov
insb
cmp
shrb
sbb
mov
mov
js
lahf
out
lock
push
jno
mov
cli
scas
pop
cmp
lea
stc
pop
dec
out
lar
sub
add
xchg
mov
dec
outsb
pop
ja
add
push
es
add
adc
push
xor
mov
mov
sbb
mov
or
or
mov
test
jno
mov
sahf
in
adc
clc
mov
es
ss
testl
dec
das
rcll
fcoms
pop
jle
mull
pop
mov
lods
mov
mov
jmp
and
test
in
enter
ja
pop
inc
lret
dec
dec
sub
fwait
push
pop
pop
push
cld
test
xor
fwait
loopne
loopne
lret
add
cmp
std
mov
dec
addr16
aaa
cld
cwtl
test
mov
mov
or
mov
mov
stos
stos
mulb
xor
std
outsl
js
arpl
add
sub
lret
push
inc
pushf
push
cltd
mov
sub
mov
fidivl
ret
and
les
fstp
clc
pop
jmp
outsb
dec
mov
mov
dec
adc
mov
push
mov
pop
add
icebp
mov
clc
into
js
out
out
mov
test
jo
add
and
mov
cli
jmp
add
xlat
jo
inc
ret
xorl
pop
mov
icebp
lods
push
lds
mov
mov
add
ret
add
mov
add
test
xor
lods
adc
mov
add
push
xchg
in
mov
ret
nop
xchg
cmp
fisubs
mov
popa
stos
dec
rolb
lret
cmp
cmc
fisubl
add
out
shlb
and
in
cltd
add
fimuls
sub
out
dec
xchg
and
add
mov
fiaddl
xlat
dec
pop
mov
scas
shrb
loopne
and
std
jno
cmp
outsl
mov
js
push
pusha
add
enter
adc
cmpl
fldenv
aaa
hlt
jg
xchg
dec
or
add
mov
outsl
add
das
leave
sub
lcall
push
lcall
test
mov
adc
std
or
mov
popf
filds
jno
decl
adc
dec
push
pop
mov
pop
mov
or
pop
insb
fdivrl
add
dec
mov
mov
pop
mov
fisubl
add
icebp
ljmp
and
xchg
pop
or
mov
mov
mov
adc
movb
in
clc
mov
cmp
lret
sbb
push
push
adc
outsb
add
jle
outsl
push
xchg
jb
push
sub
jbe
lret
xchg
jle
pop
shlb
in
push
cld
cwtl
inc
hlt
stos
push
adc
cmp
into
xor
bound
and
addb
cmp
xorl
jns
cmp
sbb
mov
push
jb
fiaddl
cmp
sbb
mov
jbe
mov
xor
adc
call
xor
mov
pusha
push
nop
std
cmp
cmp
mov
add
es
incb
mov
push
test
jno
repnz
ss
add
sbb
pusha
sub
add
push
addb
out
jnp
sbb
mov
pop
xchg
sarl
cld
pop
sub
xchg
repnz
push
lods
mov
loope
loop
leave
mov
inc
push
inc
cs
mov
pop
out
push
jae
sets
ret
adc
xchg
fistl
lock
popl
loop
cmp
mov
fisubl
outsb
fnsave
js
les
shlb
faddl
jnp
mov
rolb
xor
clc
pop
ljmp
pop
mov
add
rcll
inc
mov
inc
push
add
test
mov
pop
in
mov
add
ficomps
clc
add
dec
movsb
idivb
add
dec
sbb
jno
dec
or
mov
icebp
lret
out
in
pop
pop
popl
sub
icebp
dec
ja
clc
mov
sub
xlat
testb
mov
call
cwtl
lods
xchg
xor
cmp
cmp
mov
scas
push
lds
insb
fs
ret
popf
add
lcall
sub
mov
xor
ja
int3
mov
add
dec
mov
add
push
push
push
pop
pop
scas
aad
gs
ljmp
in
jmp
inc
sub
and
mov
pop
inc
mov
stos
icebp
in
and
jp
lcall
and
mov
mov
mov
jmp
or
enter
das
mul
std
loop
scas
or
incl
and
in
movsl
outsb
enter
sub
mov
cmc
adc
add
adc
loopne
sti
ret
and
sub
lahf
jecxz
adc
loope
out
fstps
mov
mov
mov
cmp
push
add
pop
sbb
nop
lret
int
loope
call
sub
nop
notb
loop
sub
popa
out
add
aad
stos
fwait
push
or
push
jle
ss
xchg
or
jp
xchg
or
cs
push
inc
mull
loopne
jnp
push
jbe
mov
mov
dec
mov
push
push
fisttpll
dec
les
adc
stos
pop
test
dec
jecxz
add
mov
inc
subl
or
xor
decl
adc
cld
and
fisttpll
popa
js
inc
clc
gs
js
sbb
lret
call
pop
sbb
subl
dec
lods
cld
add
es
mov
xor
add
xchg
bound
loopne
jae
push
xor
clc
cmpsl
adc
movsb
jecxz
icebp
push
shll
shrl
xor
mov
fucomp
decl
jbe
sarl
push
stos
add
rorb
xchg
mov
mov
jmp
and
lock
inc
add
xchg
imul
daa
aaa
pop
icebp
icebp
ret
movsb
sete
sbb
je
pop
mov
pushf
cmp
mov
jge
jo
daa
adc
lods
cld
mov
ret
or
xor
fiaddl
out
add
orl
sbbl
xor
decb
cmc
push
ljmp
xchg
pop
inc
mov
test
xor
fmull
imul
xor
adc
mov
les
cmp
sbb
lods
mov
out
imul
xlat
add
js
inc
jns
cmc
sub
jmp
push
sbb
subb
repz
nop
fcomps
mov
sahf
ret
push
dec
xor
ret
lods
push
mov
call
test
dec
xor
cmpsl
mov
enter
push
and
cmp
sub
pop
or
xchg
add
adc
lret
cs
fstpl
js
insb
jb
dec
ds
mov
adc
es
cmp
mov
xorl
dec
push
xor
and
xlat
lcall
filds
stos
data16
jo
adc
sbb
adc
adc
imul
xchg
out
incl
loopne
ja,pt
mov
push
add
mov
mov
push
enter
ss
popa
mov
xchg
sbb
call
inc
fs
cmpsb
cmpsb
incl
mov
sbb
jbe
sub
add
popa
movsl
hlt
or
in
popa
daa
stos
add
mov
mov
and
ds
pop
subb
clc
adc
sub
jecxz
loop
test
cmp
mov
inc
push
fistl
lock
or
adc
mov
xor
sub
cmp
mov
add
mov
ljmp
cmp
jle
movsl
nop
inc
add
pop
gs
out
mov
push
adc
mov
adc
and
xchg
loope
shll
cmp
push
push
nop
ds
in
enter
shrb
scas
xlat
out
mov
xor
cmc
sbb
mov
jmp
cmp
push
dec
addr16
lods
mov
cld
jg
pop
sub
mov
cmp
outsb
fdiv
or
or
fistps
in
cmp
cwtl
shr
adc
das
dec
repnz
mov
jnp
nop
jecxz
mov
add
cmpsb
decl
data16
xor
pop
addb
add
jl
cs
cwtl
push
jl
inc
add
cmp
pop
fadds
and
push
xchg
pop
shrb
pop
fdivr
test
mov
icebp
arpl
dec
ljmp
adc
lcall
mov
push
je
pop
and
pop
add
fildll
outsb
jb
push
push
xor
xchg
add
sbb
iret
insb
inc
insl
mov
icebp
add
adc
mov
push
ss
into
jl
daa
push
push
mov
pop
push
test
aaa
cli
dec
pop
mov
clc
jae
out
adc
xor
scas
mov
adc
movsb
xchg
loopne
cmp
sti
push
sbb
stc
or
xor
or
test
loop
ret
and
enter
ja
sub
loop
ljmp
jg
mov
xchg
es
into
flds
fst
jg
jp
push
outsb
cmp
cli
div
sub
mov
mov
sti
push
rcrl
in
cld
lods
jo
inc
test
js
adc
lret
lahf
gs
lock
test
or
cmp
pop
lcall
sub
cmpsb
mov
push
enter
les
and
push
ljmp
jno
je
push
shl
adc
cld
xchg
adc
xor
je
test
aaa
cmpsl
gs
xchg
and
mov
mov
jl
or
push
mov
mov
enter
ret
icebp
imul
clc
mov
daa
add
into
and
lcall
movsb
xchg
scas
popf
mov
ret
jp
fiadds
push
add
mov
negb
sub
mov
arpl
jno
push
enter
sbb
push
shrb
and
shll
pop
cmp
inc
ret
filds
add
loop
mov
sub
ficomps
xor
in
jle
out
push
std
pop
pop
and
adc
jmp
or
sarl
clc
lcall
xchg
movsl
mov
xlat
jl
add
out
arpl
popa
sub
jne
push
mov
sub
insl
sbb
jg
sub
jmp
lods
add
mov
xor
push
sbb
mov
push
jge
jns
mov
add
cmpsb
mulb
xchg
pop
aad
and
and
dec
adcl
xchg
adcb
fsubl
jne
icebp
jbe,pt
icebp
lcall
data16
or
shlb
lods
dec
mov
out
pop
lods
nop
inc
cmp
mov
pushl
adc
jg
mov
repz
push
iret
sti
fwait
push
xor
fnsave
sub
dec
int
xchg
push
add
and
out
notl
mov
enter
sub
xchg
add
cs
and
jle
mov
jp
imulb
popa
and
mov
add
and
pop
xchg
dec
icebp
push
shll
test
sbb
or
lods
sarb
adc
adc
mov
mov
mov
leave
or
inc
imul
and
iret
jl
mov
loop
xchg
sahf
mov
repnz
das
test
les
dec
ret
mov
hlt
clc
mov
cld
sbb
cmp
insb
mov
decl
push
insl
and
imul
jmp
jp
shr
add
js
dec
mov
pop
sub
push
bound
jnp
repnz
adc
cmp
sahf
out
cmp
fdivrl
adc
decl
xor
mov
push
repnz
pop
and
sti
mov
mov
mov
dec
cmp
into
xchg
or
aam
decl
add
enter
test
xor
add
jae
sbb
push
test
call
loopne
ljmp
mov
push
cld
mov
xchg
fistpll
ret
add
adc
and
jo
adc
rdmsr
jecxz
lods
and
test
jno
cli
pushl
cwtl
cmp
mov
call
or
jnp
cltd
clc
sub
ljmp
xorb
push
or
cld
dec
data16
and
into
push
hlt
and
push
enter
std
mov
divl
lea
add
jne
adc
insl
or
dec
pop
jp
inc
test
cmpsl
ljmp
mov
jo
dec
std
mov
out
mov
dec
lock
gs
dec
fwait
sahf
cmpsb
and
or
test
xchg
dec
fcomps
ftst
pop
xor
pop
mov
inc
mov
fistps
cld
cmp
push
movsb
addr16
inc
sti
fucomip
int
cmp
sbb
sbb
dec
dec
pop
rolb
ljmp
fisubs
sub
and
inc
je
pop
addl
dec
jb
sahf
push
xorb
pop
aas
stos
fcomip
push
jmp
cmpsb
and
out
call
pusha
and
add
fcmovu
sbb
lcall
mov
call
imul
filds
and
add
pop
pop
outsb
lods
leave
jo
cwtl
sub
push
pop
cmc
adc
out
xlat
mov
je
movsl
sub
sub
dec
add
loope
lret
pop
scas
fsubl
loopne
lods
xor
enter
adc
dec
jmp
mov
mov
roll
das
mov
outsb
mov
mov
js
clc
cli
int
lods
cmpsl
out
leave
sub
mov
mov
imul
clc
addb
jle
adc
call
into
jns
cmp
cmp
inc
push
mov
inc
pop
rorb
add
inc
ljmp
adc
gs
ja
cs
stos
outsb
jge
and
jg
xchg
mov
sarl
outsb
inc
sbb
or
fcompl
inc
add
test
mov
into
in
enter
shll
xchg
xchg
das
jns
mov
faddl
cltd
in
in
cmp
or
mov
js
adc
dec
xchg
xchg
mov
pusha
push
mov
xor
clc
jg
inc
dec
xor
out
in
pusha
mov
aam
xchg
add
imul
push
cmp
arpl
js
icebp
loopne
mov
mov
loopne
mov
pause
pop
mov
js
cmpsl
stos
inc
adc
mov
mov
push
sbb
sub
sbb
mov
cld
inc
sbb
jmp
lret
outsb
stos
clc
dec
in
in
scas
inc
in
add
mov
cmpsl
and
xchg
and
arpl
aam
stos
test
gs
sub
loop
push
or
rclb
add
and
push
mov
pop
add
ljmpw
clc
cmp
pop
jle
mov
fldcw
jo
mov
loop
add
test
in
push
mov
out
sub
mov
inc
or
push
iret
pushf
ds
out
dec
mulb
das
shl
push
lcall
sub
sti
pop
pop
mov
xchg
and
es
pop
enter
outsl
clc
sbb
inc
shll
sbb
adc
and
dec
addr16
mov
jmp
imul
orb
cmpxchg
iret
loop
aad
inc
push
mov
loopne
loopne
iret
sbb
into
add
das
aad
fcompl
les
loopne
inc
push
pop
or
fisubl
sub
xchg
lahf
subb
ret
cmp
sahf
dec
rolb
outsl
push
mov
loop
jl
es
add
sarb
push
sbb
icebp
push
pop
add
pop
nop
mul
push
out
xor
mov
imul
mov
fisttpl
flds
test
inc
mov
ret
imul
es
xlat
paddusb
xchg
jecxz
popl
adc
add
jle
inc
inc
xor
loope
outsl
adc
add
or
mov
pusha
test
push
adc
add
mov
ljmp
lret
js,pn
lcall
sub
and
call
nop
scas
mov
xchg
cmpsb
data16
je
das
mov
into
push
or
fldt
mov
push
nop
mov
push
inc
std
das
mov
bound
ja
in
icebp
jp,pn
rcll
sets
popa
fucomi
aas
jnp
jg
outsl
add
mov
add
iret
xchg
adcl
inc
gs
jb
dec
pop
into
dec
push
inc
rcr
aad
mov
notl
mov
ss
decl
sbb
iret
pusha
dec
clc
lock
std
into
adc
jg
iret
into
popa
inc
lcall
repz
ja
in
push
lret
stos
push
pop
out
dec
lea
scas
fdivs
testl
icebp
adc
jmp
and
cwtl
xchg
jg
add
push
inc
jo
cltd
xlat
inc
pushf
pop
gs
push
sbb
jo
loope
ret
decb
cld
mov
in
xchg
mov
or
hlt
jle
imulb
scas
dec
mov
adc
inc
add
xor
jge
or
fsubs
push
push
push
scas
xchg
ljmp
cmpsb
popa
lcall
dec
sbb
rclb
and
ret
and
ret
xchg
push
sarb
pusha
jbe
cmp
loop
addb
test
and
jmp
int
xchg
jmp
scas
test
lret
in
movsb
outsb
sbb
lds
push
mov
lea
mov
xor
mov
sub
inc
mov
repnz
ret
addr16
loopne
inc
mov
aaa
jl
mov
add
cwtl
and
mov
jmp
sub
pop
xchg
mov
cmp
leave
bound
inc
test
bound
cmp
cmpb
xor
sub
ljmp
aas
adc
inc
push
je,pt
push
xor
and
pop
insl
adc
cltd
outsl
js
lods
imul
loop,pn
jge
data16
gs
addl
inc
sbb
lcall
ss
enter
mov
add
jle
js
rol
mov
add
mov
adc
add
add
aaa
cld
aaa
add
dec
push
out
mov
cmpsb
aaa
inc
adc
insb
xor
cmpsb
lock
dec
sub
and
dec
add
js
add
mov
out
cmp
mov
in
mov
push
mov
xor
lea
cmpsl
mov
xor
sbb
xchg
jmp
mov
push
rorl
js
xor
pop
mov
and
adc
mov
jo
or
or
mov
mov
mov
fs
sbb
and
imul
cwtl
test
fs
outsb
stos
push
fwait
jne
popf
into
pop
add
add
push
pop
inc
add
ljmp
call
sti
xor
mov
shll
xchg
add
imul
push
and
mov
bound
lock
xor
ret
sbb
hlt
das
xchg
jge
fbstp
lcall
into
or
push
loope
sahf
sub
push
mov
inc
sub
push
pop
adc
mov
imul
xchg
xor
fbstp
ja
or
sub
dec
jb
into
adc
or
outsl
xor
jno
inc
dec
add
icebp
adc
adcb
loope
fsubs
mov
inc
cmp
lcall
cli
stc
and
xorb
add
roll
pop
sbb
lds
bound
xor
cmc
les
and
loope
cwtl
cmp
mov
adc
jb
ljmp
jbe
cli
out
fstl
mov
xchg
fcomip
dec
pushf
inc
sahf
stos
stos
and
adc
mov
jo
cwtl
push
cmp
dec
add
ds
outsb
call
mov
ret
test
xchg
bound
nop
repz
xchg
dec
clc
ja
push
mov
sbb
xor
arpl
loopne
enter
movl
sbb
cmp
je
sbb
dec
shlb
pushl
inc
xchg
lcall
sbb
jno
into
insl
xchg
and
sbb
loopne
jge
out
rclb
xchg
rolb
lret
je
adc
add
movsb
push
stc
stc
mov
jb
mov
jae
les
jb
adc
dec
mov
ffreep
adc
in
xchg
and
mov
cmp
lods
mov
pop
push
rcrb
aam
aaa
jmp
bound
cmp
or
fwait
popa
test
or
cmpsl
sbb
mov
mov
jnp
dec
fucomi
insl
movsb
add
jmp
lahf
xlat
lret
mov
cld
sub
in
pushf
mov
mov
les
sub
mov
mov
ljmp
adc
push
ret
jne
jo
cli
jne
add
fidivs
dec
sbb
pushf
shlb
sbb
mov
push
mov
bound
sbb
and
shl
packssdw
or
or
push
adc
cmp
mov
pop
push
mov
mov
jnp
in
das
sbb
mov
add
imul
push
cmp
mov
data16
lcall
push
adc
add
mov
andl
clc
add
stc
jo
inc
sbb
jb
fld
call
std
repnz
mov
lods
icebp
sarb
enter
xchg
and
adc
xchg
pop
stos
ret
mov
mov
adc
les
hlt
mov
and
sub
nop
mov
scas
mov
or
or
rclb
jns
push
jge
mov
in
rcrb
inc
cs
dec
jb
adc
sbb
ret
and
inc
push
xor
cmpsb
mov
pop
push
mov
xchg
aas
push
mov
sbb
or
or
sbb
clc
clc
xchg
sub
shlb
aas
or
mov
sub
sub
add
aaa
jne
les
mov
scas
add
or
fistps
lds
das
and
insl
xlat
jg
and
inc
mov
push
push
inc
sahf
xchg
test
cmpsl
fcmovu
xchg
cwtl
lods
push
shll
mov
mov
pop
mov
stos
cmp
jmp
add
outsb
sbb
push
das
mov
lea
xor
adc
push
dec
mov
inc
gs
push
arpl
aaa
jecxz
add
leave
dec
shlb
pop
push
jg
popf
ror
jo
lret
mov
add
inc
cli
pop
xchg
mov
out
loop
push
push
daa
xchg
addb
lods
pusha
mov
push
pop
insb
jecxz
hlt
xchg
cmpb
mov
mov
mov
mov
adc
add
or
sarb
bound
test
lret
sub
cmc
push
lock
mov
repz
sbb
in
add
jnp
add
lcall
pushf
das
add
mov
inc
std
sbbb
les
sbb
mov
call
and
push
jge
aad
or
and
in
dec
sbb
inc
pop
cmp
and
stos
sbb
xor
fnstsw
outsl
inc
xor
fisubl
add
loopne,pt
clc
sbb
lret
je
pop
mov
nop
test
inc
das
cmp
sbb
je
xor
adc
adc
nop
xor
sbb
popf
outsb
inc
dec
pop
cmp
shlb
hlt
cltd
mov
adc
xchg
dec
sbb
push
loopne
rcrb
mov
sbb
adc
fdivs
adc
mov
dec
cmp
mov
jecxz
sbb
ljmp
in
imul
add
jp
aam
cmpsl
xchg
fistps
jns
sub
inc
add
rclb
dec
lahf
xor
pusha
pushf
por
xor
mov
pop
mov
dec
mov
outsb
bound
sbb
ja
in
dec
std
int3
add
loope
cmpsb
cld
ljmp
mov
inc
add
push
dec
mov
sbb
out
and
loopne
in
mov
divl
push
push
fwait
xchg
mov
insb
mov
cld
testb
cmp
add
cmp
ficompl
mov
data16
xor
sub
pusha
mov
ds
out
jbe
aaa
pop
inc
jbe
icebp
cs
cmc
add
cmp
push
rolb
call
pop
xchg
mov
add
adc
add
and
das
jge
pushf
or
cmp
push
xchg
into
lret
out
cwtl
cwtl
pop
scas
outsl
pop
cmp
int3
imul
das
ret
cli
ljmp
push
xor
or
inc
es
jge
cwtl
lcall
jo
mov
ja
scas
push
int3
mov
xchg
push
jne
out
adc
and
hlt
cmp
ds
daa
dec
push
lock
sbb
adc
jo
cwtl
jle
mov
cmp
push
sbb
xchg
lahf
mov
decl
or
cmp
fstpl
dec
call
je
adc
jbe
pusha
arpl
outsl
fisubrs
hlt
addr16
xchg
loope
scas
fiaddl
xor
jg
xchg
mov
fwait
icebp
shrb
xlat
test
adc
mov
cld
mov
sti
add
lcall
push
dec
inc
out
push
inc
gs
inc
outsb
frstor
cmp
jp
inc
push
lret
xor
movsb
shl
add
lahf
inc
or
adc
pop
std
pusha
push
dec
or
cmp
mov
push
test
mov
add
jg
decb
push
and
sti
in
dec
loope
pop
es
jg
ss
repz
divb
pop
pop
xorb
adcb
int
and
test
push
imulb
je
inc
sbb
add
ljmp
xchg
stc
fdivrl
movsb
aad
or
sub
mov
xchg
int3
roll
test
sub
mov
mov
mov
test
es
test
ret
or
rclb
scas
push
popa
adcl
lock
ror
insl
insw
cmpsb
pusha
mov
jp
decl
movsl
insl
cmp
xor
cld
jle
lods
xchg
push
push
xchg
add
pop
sub
jae
mov
pop
cltd
je
or
data16
jmp
or
addb
jae
adc
jo
clc
lcall
mov
jmp
add
sbb
sub
test
or
repnz
les
jno
dec
lcall
je
mov
rorb
pop
cmc
popf
mov
mov
mov
mov
mov
sbb
push
and
push
aaa
fnstenv
bnd
push
push
dec
adc
je
pop
js
aas
mov
xchg
add
xchg
aas
and
movsb
push
in
pop
push
iret
push
mov
mov
cmp
aam
push
adc
mov
js
push
stc
mov
iret
fisttpll
fdivp
jmp
jnp
ds
push
ret
jb
and
into
in
roll
inc
subb
add
sahf
or
mov
loop
jecxz
cmp
jo
lds
adc
pop
icebp
stos
push
ljmp
or
sub
mov
enter
imul
mov
sub
fcomps
jle
sti
cmp
test
dec
jnp
js
es
pop
inc
scas
push
out
test
add
sub
pusha
shrb
mov
bound
cld
or
mov
xor
in
aas
adcl
pusha
cld
int3
mov
sub
push
push
add
lods
xchg
xchg
test
jno
inc
lret
mov
pusha
inc
movsb
inc
mov
std
jmp
xor
scas
fmuls
js
pop
lods
fildll
mov
or
push
cmp
lods
sub
clc
out
pop
icebp
dec
lea
mov
cmp
xchg
jg
xor
fs
push
jle
decb
or
pop
add
add
aam
in
dec
jp
sub
add
je
mov
dec
lcall
cmpsb
mov
xor
or
pop
sbbl
jle
mov
add
loop
push
pop
int
nop
in
push
mov
dec
sub
loop
movsb
pop
out
jecxz
out
add
or
pop
cmpb
dec
jg
test
rcll
test
mov
call
sub
mov
incl
imul
pop
mov
dec
inc
mov
lcall
jmp
jo
xor
and
xor
out
bound
iret
dec
sarl
fsub
sti
lods
sbb
mov
test
xchg
hlt
out
push
mov
sbb
and
jg
dec
leave
mov
add
mov
dec
fimull
fbld
push
xchg
sti
mov
daa
mov
add
or
fcomps
call
mov
clc
xor
stos
dec
loope
test
and
incl
pop
cs
ror
and
push
mov
or
add
es
and
mov
sahf
int
or
sbb
out
jp
pushf
shrb
or
sahf
push
mov
jmp
mov
sub
xchg
mov
or
rolb
adc
addr16
xor
sbb
rol
out
mov
add
mov
addr16
jmp
ja
pusha
lahf
cmp
lcall
test
loopne
in
add
add
jb
loop
mov
push
jl
cld
sbb
aad
hlt
scas
fisubl
pop
pusha
mov
in
xlat
inc
sbb
adc
ret
stos
mov
add
mov
and
adc
out
out
je
movsl
sti
cmpsb
sbb
addr16
subb
jno
mov
test
xor
int3
out
out
icebp
xor
aaa
cld
aaa
scas
or
dec
mov
inc
inc
std
movsl
add
sub
add
cmp
stos
popa
add
sub
adc
stos
test
mov
aas
arpl
jmp
jae
test
or
or
sub
movsb
movsb
ret
cmpsb
call
xchg
mov
mov
add
xchg
jne
sbb
ror
push
pop
dec
in
stos
sub
jnp
push
xchg
jecxz
push
sbb
cmp
xor
lea
outsl
mov
sub
outsl
pop
in
mov
mov
test
sbbb
shl
loop
pop
je
sbb
test
inc
in
mov
mov
popf
loope
rcl
pop
sbb
add
icebp
inc
sub
add
outsl
sbb
mov
sarb
push
cld
cmp
xor
xor
mov
rcrb
das
and
xchg
pusha
dec
popa
mov
das
clc
xchg
jae
inc
xor
lock
sti
xor
fbstp
adc
cs
js
jl
js
pop
add
test
or
rcrl
outsb
push
sbb
fistpl
stos
or
push
sahf
in
jecxz
ret
sti
pop
loope
cmp
adc
push
ja
or
mov
gs
xlat
imul
add
aad
sbb
movsb
lock
adcb
fisubrs
pop
in
andl
fimuls
or
cmp
xchg
loope
mov
std
sbbb
pushf
jbe
inc
pop
outsb
jp
sub
mov
sar
fwait
out
or
push
and
imul
imul
lcall
mov
ret
add
scas
xchg
sbb
inc
xor
lock
mov
out
or
fsubl
xor
fcmove
sbb
aas
lahf
mov
inc
cmp
lock
jno
pop
bound
fdivr
mov
js
test
mov
addl
loopne
scas
pop
outsl
and
ret
ret
xchg
push
scas
and
movsb
pop
ficomps
jno
clc
mov
push
popa
cmp
pop
stos
incb
shlb
mov
push
sbb
mov
or
stos
movsb
adc
lret
xor
mov
sahf
es
loope
mov
jo
mov
insl
and
dec
stos
fdivrl
mov
dec
sub
loope
orb
sarb
add
cli
sub
sub
call
ret
jbe
jo
rorl
lea
std
add
movsb
roll
inc
into
lcall
rolb
lahf
pop
rol
push
cld
rorb
inc
push
mov
pop
jne
pop
push
and
mov
jp
and
cmp
les
dec
pusha
dec
jae
sbb
sbb
in
push
xchg
lock
popf
adc
enter
sbb
incl
and
ja
out
lods
test
sbb
in
jp
inc
cmc
aaa
shlb
ljmp
mov
insb
push
cltd
pop
cmp
mov
fbld
incb
add
inc
scas
insb
mov
in
dec
out
cmp
loopne
sub
and
push
pushf
rcrb
xchg
out
sub
dec
push
inc
xor
mov
out
mov
jge
push
add
ljmp
out
inc
mov
stos
adc
or
dec
incl
hlt
sar
cmp
and
add
mov
mov
mov
cmp
pop
mov
jns
fildl
lcall
mov
pop
cmpsb
add
dec
push
mov
push
loope
fstpl
add
leave
mov
movl
ror
sub
cld
arpl
and
cmp
push
mov
pop
ret
outsl
ss
mov
sub
dec
inc
sub
loopne
push
pop
mov
mov
jl
mov
filds
adc
mov
rcrb
stc
or
scas
shl
scas
test
cmp
fnstsw
and
dec
insb
les
into
inc
inc
adc
adc
movlps
jl
cmp
loop
sbb
pop
call
ss
pop
pop
lahf
shrb
push
enter
cmp
stos
or
jle
rcl
sti
into
ss
mov
imul
add
fildll
aas
xor
loope
out
adc
mov
mov
inc
aaa
mov
push
aaa
push
and
dec
jns
repz
add
mov
add
cmp
out
ss
inc
cmpsb
pusha
js
jo
arpl
insb
stos
fbld
test
dec
add
sti
cmp
adc
cli
mov
xchg
push
push
icebp
push
push
shlb
test
lret
xor
lock
mov
call
mov
sbb
xor
push
adc
push
daa
fcomps
cmp
sub
test
xor
add
mov
aad
cmp
sub
cld
pop
sbbl
fsubrp
xchg
pop
mov
add
jle
test
jnp
leave
add
es
add
ds
jno
dec
daa
xor
loop
cmp
std
ljmp
sarb
sub
out
scas
mov
mov
xor
push
mov
jl
fsubrs
mov
push
es
xlat
adc
pushl
es
or
inc
mov
je
jae
fs
aam
sub
sbb
test
lcall
jbe
into
push
xor
sbb
pxor
outsl
and
and
dec
or
lods
sub
sar
pop
push
aam
fs
and
shlb
icebp
jp
aad
add
sub
pop
xor
and
vmptrst
sub
mov
sbb
lods
add
out
mov
ljmp
sbb
fdivr
stos
mov
loop
subl
push
xchg
jno
ret
add
pushf
adc
lock
fcoms
loopne
sub
enter
fcom
ret
push
mov
xchg
push
jg
in
inc
loop
inc
pop
xor
jg
mov
inc
cwtl
je
or
sub
lea
mov
cmpsb
mov
cld
repz
add
mov
mov
mov
shr
cmpsb
jb
lret
pop
les
and
xchg
hlt
ljmp
outsb
adc
push
add
loop
lahf
jae
lret
movsl
dec
cmpl
neg
sub
push
inc
call
add
xchg
cmp
dec
push
cmp
push
cmpsb
mov
jno
xor
pop
lea
and
jl
mov
or
std
add
lret
icebp
out
and
into
aad
cmp
push
and
or
clc
pop
daa
push
aam
pop
pop
jbe
adc
jmp
mulb
dec
mov
push
pop
ret
les
sarl
in
stos
ds
inc
lcall
pushl
jbe
push
jmp
cmp
into
cltd
je
xor
adc
pushf
lea
adc
mov
jp
lahf
xchg
scas
in
sub
sbb
loope
mov
cmpsb
movsb
stos
or
mov
popl
stc
ljmp
inc
test
mov
mov
das
sub
mov
into
subb
and
mov
roll
mov
push
mov
in
ds
pop
test
sub
bswap
mov
movl
and
cmp
inc
shr
push
int3
pop
mov
add
into
add
pop
nop
movb
stc
push
sub
lock
in
or
push
dec
inc
out
or
push
popa
je
ds
clc
xor
sub
lock
ret
cmpsb
outsl
jle
adc
jp
in
jge
xor
xor
mov
cmpsb
mov
fdivrl
and
jp
cmp
ljmp
fs
or
jg
testb
jo
and
sub
pop
and
mov
cld
aad
sub
mov
enter
mov
decl
addr16
jo
aad
lahf
es
and
push
loopne
sub
jnp
and
sbb
mov
add
pusha
cld
out
adc
push
ss
sbb
sbb
dec
and
in
mov
call
sbb
decl
js
dec
mov
dec
mov
sarl
in
daa
sub
fwait
adc
mov
push
add
out
lcall
scas
mov
inc
push
imul
lock
jmp
lods
push
mov
stos
add
pop
push
xchg
decb
cld
cs
enter
cmp
pop
pop
ljmp
xchg
fidivl
push
test
mov
nop
addr16
xchg
cmc
call
out
mov
aas
sub
xor
pop
aaa
std
mov
jbe
in
adc
inc
mov
rcll
fadds
add
nop
mov
mov
push
adc
shlb
movsl
sbb
sub
mov
cmpsb
jo
mov
test
rcrl
movsl
push
xor
jge
arpl
mov
lock
add
test
push
movsl
adc
sbb
push
xchg
lods
jno
push
cld
incl
add
orl
ss
out
pop
pop
mov
xlat
and
bound
mul
fimuls
mov
clc
xlat
js
sbb
rcr
jmp
push
call
in
mov
cmpsb
outsb
fwait
cmpsl
pop
inc
fs
add
add
call
add
and
push
pushf
dec
xor
movsl
mov
aam
jle
add
inc
sbb
sbb
js
or
or
fldl2e
add
xcrypt-cfb
cmpsl
mov
xchg
mov
cld
cmpsb
in
xor
popf
sahf
jns
and
dec
pop
mov
mov
mov
mov
xchg
mov
jg
inc
xchg
cmc
push
xor
mov
loop
jecxz
cld
jmp
push
sub
movsl
or
xlat
add
in
pop
iret
scas
ja
sete
push
rorl
in
push
incl
rcrb
mov
add
out
mov
movsl
cmp
and
sarl
lahf
inc
clc
mov
xchg
sti
stc
data16
add
pusha
das
add
xor
jb
sub
push
outsl
dec
pop
ss
stc
jmp
jo
cmpsl
scas
paddd
push
in
movb
inc
sbb
loop
cmp
sbb
cs
sub
dec
out
inc
mov
sbb
mov
pop
cli
mov
js
sbb
and
sbb
das
mov
cmpb
int
pop
or
decl
pop
xorl
mov
sub
ds
cwtl
and
xchg
imul
xor
shll
cs
nop
stos
mov
clc
pop
loope
sub
dec
push
xchg
js
push
dec
std
pop
and
scas
inc
into
add
pop
pop
sbb
jae
dec
push
adc
cld
movsb
inc
aaa
add
aas
test
cmp
add
mov
inc
into
sarl
shll
popa
inc
lods
sbb
loopne
addb
and
jle
push
fsub
stos
scas
fidivrs
dec
out
ljmp
popa
fucompp
push
inc
cmpsb
cs
cmp
sbb
pop
lret
add
aas
add
mov
xor
cmp
or
mov
clc
daa
cmc
push
loop
sbbb
mull
mov
push
xchg
xchg
push
lock
add
int
dec
inc
xor
jae
or
test
adcb
fldcw
repnz
mov
mov
aaa
push
xchg
arpl
cwtl
movsb
add
push
mov
push
add
rol
or
fidivs
aad
outsb
ret
push
rolb
cmpsb
dec
fldcw
xchg
xchg
lock
sbbl
lods
mov
pop
pusha
pop
cmp
push
cmovb
pop
sub
cmp
pop
cmc
xor
lret
add
xor
inc
pop
xchg
mov
into
leave
sub
mov
andb
adc
pop
and
icebp
cs
pop
adc
inc
mov
inc
push
ret
inc
clc
ja
inc
int3
pop
sti
in
add
lods
push
xchg
pushaw
fdivp
shlb
loop
test
mov
lcall
orl
or
jecxz,pt
jl
xchg
movsl
in
jno
xchg
cs
loope
and
bound
mov
aam
mov
and
mov
xchg
jbe
testb
lds
lods
fwait
loopne
inc
aad
push
cli
dec
mov
mov
add
mov
adc
mov
adc
add
fsubrs
mov
aas
xor
cwtl
bound
mov
mov
mov
dec
add
aaa
mov
push
sbb
or
mov
add
lcall
inc
cmp
sti
ja
nop
jne
subl
jl
ret
cmpsb
inc
out
jle
push
js
fsts
es
jmp
lods
xchg
jnp
xor
loope
push
xchg
dec
jo
mov
jns
add
imul
mov
push
ljmp
pop
js
add
popf
cmpsb
popf
inc
ljmp
enter
pop
lock
mov
dec
call
cmp
xor
jmp
lds
sbb
fnstsw
lods
mov
ja
sbb
and
xrelease
fisubs
sbb
mov
ljmp
imul
and
lret
cwtl
jle
and
enter
or
cmp
sbb
push
push
jbe
data16
pop
aaa
push
dec
fidivrl
cmp
mov
xchg
test
xchg
sub
iret
add
mov
shrl
jbe
xchg
repnz
ret
outsb
cmc
sbb
jmp
stc
out
dec
pop
jae
pop
lods
jmp
inc
dec
lds
mov
movsl
ss
mov
push
xchg
push
js
push
inc
popa
sub
mov
outsb
addb
lock
mov
cmp
clc
cmp
mov
imul
insl
movsl
shlb
sub
push
scas
subl
or
add
xchg
mov
sahf
mov
into
mov
scas
xchg
add
mov
lock
pushf
pop
adc
andb
adc
adc
jg
icebp
cmp
stc
cwtl
fsub
ss
dec
lret
sarb
stos
xchg
jle
xchg
push
into
push
insb
fmull
mov
ret
mov
push
loopne
adc
sbb
out
add
outsb
fsubrs
and
nop
cmp
int
insl
cli
aaa
cmp
pop
push
out
xor
push
mov
mov
push
imul
shrb
cmp
mov
lcall
das
xchg
adc
sub
xchg
fidivs
xchg
loopne
sub
push
cs
sbb
cs
pushf
inc
call
xchg
sbb
imul
roll
adcl
push
mov
subl
insl
mov
dec
aam
lock
lock
push
fimuls
leave
ret
pop
push
decb
pop
sbb
into
add
inc
jecxz
push
cmp
aam
add
subb
adc
imul
lock
dec
es
je
add
dec
jecxz
out
xchg
pop
or
in
pusha
std
icebp
cmp
or
cli
es
test
mov
not
dec
mov
sub
cmpl
push
scas
sbb
sbb
sub
lcall
add
adc
push
loopne
mov
mov
faddl
add
cwtl
out
mov
push
mov
clc
mov
fistps
jmp
cs
gs
aam
test
add
mov
ljmp
mov
jmp
shrl
mov
fs
leave
shr
or
sub
push
jp
or
adc
mov
loopne
or
fwait
shlb
out
aaa
cli
mov
sti
dec
loopne
mov
lock
cmp
fisttpl
int3
jl
add
clc
pop
mov
int3
cmp
mov
mov
fdivl
test
xorb
fisubl
insl
stos
jno
jae
enter
call
add
mov
fcomps
sahf
ds
add
xlat
outsb
fistps
sub
movsl
jo
dec
mov
cli
add
jl
adc
in
xor
je
jne
add
repz
aas
cli
sub
mov
and
nop
fsubs
push
jle
and
add
outsl
nop
addb
sbb
adcb
std
call
or
and
out
movsl
xchg
fildl
adc
ja
cmp
or
pop
pop
fnstcw
hlt
push
adc
cwtl
pop
push
ret
jle
shr
mov
pop
aam
add
lcall
mov
pop
test
mov
dec
es
stos
push
mov
lea
ret
cli
sub
inc
and
mov
add
push
mov
and
movsb
mull
xor
add
cwtl
js
aad
jmp
cmpsb
push
repz
aad
pop
pop
push
or
mov
clc
popa
push
or
subb
aas
enter
stc
sti
mov
mov
push
std
mov
or
cld
jo
cs
xchg
movsb
xchg
xchg
lods
and
bound
push
mov
ljmp
push
insb
sbb
fwait
adc
fidivrl
sub
or
inc
mov
adc
roll
in
xorb
pop
test
clc
mov
aaa
cwtl
jle
data16
adc
aaa
or
add
adc
out
ss
faddp
scas
pusha
sub
out
fs
icebp
aas
shlb
fmuls
cld
adc
subb
add
lods
mov
or
fisubrs
pusha
cmp
roll
jbe
in
fsubs
sub
mov
fisubl
inc
jle
outsl
movsb
push
pop
jl
jae
int
fsubl
mov
test
std
loopne
loopne
idivb
dec
out
jbe
das
clc
xchg
inc
xor
lret
and
std
push
sbb
jb
or
mov
push
out
ret
sbb
sar
lahf
aas
xor
and
pop
xchg
cmp
xchg
dec
mov
push
sbb
add
ret
sti
sbb
mov
subl
push
pushf
mov
pop
xlat
cmp
stos
inc
push
bound
lret
add
int
sbb
dec
faddl
xor
fmull
mov
fcomps
sahf
data16
adc
dec
pushf
and
incl
and
mov
fdiv
mov
out
cli
cltd
inc
mov
out
stc
jne
mov
incl
stos
mov
inc
jge
xchg
popf
cld
stc
pop
mov
add
daa
pop
aam
shrb
ficoms
or
clc
inc
fidivl
lock
push
add
push
mov
sti
loope
stos
dec
lods
xchg
inc
add
repnz
fidivrs
push
xchg
ja
fdivrl
adc
sbb
jle
loopne
loop
ret
hlt
sub
xor
mov
decl
add
push
xlat
mov
dec
sbb
push
push
mov
cmp
xor
cli
js
mov
add
mov
cli
jecxz
pop
sub
cld
lods
cld
lods
and
pop
test
cmp
inc
and
mov
xchg
sub
jb,pt
cld
scas
nop
push
dec
cld
ljmp
loop
jge
push
repz
dec
jae
sub
lock
sarb
add
mov
mov
test
test
das
mov
xchg
icebp
notb
es
add
mov
cld
push
fldl
push
pop
repz
into
xchg
lods
cmpsl
add
mov
push
adc
mov
loop
rcrb
dec
add
mov
sbb
mov
sub
or
mov
je
sbb
inc
jo
cltd
ret
mov
add
mov
pop
mov
stos
icebp
mov
pusha
test
rcr
shll
sbb
jmp
and
das
and
rorl
mov
or
pop
fnstcw
add
nop
sub
sbb
loope
lods
loopne
and
cld
call
call
inc
js
pop
sub
subb
sbb
inc
fcomps
mov
es
mov
loope
or
js
add
sbb
int3
ja
push
xchg
ds
sbb
or
insl
add
or
and
and
repz
jne
sti
xor
test
pusha
aam
inc
jnp
cs
jbe
repnz
mov
mov
sahf
insl
dec
pop
xchg
pop
loopne
out
lock
adc
stos
out
jl
pop
mov
xchg
pop
cmp
hlt
and
xchg
xchg
xor
cli
xor
popa
lock
sub
cltd
shll
das
loopne
icebp
lds
push
sbb
mov
add
adc
sub
and
adc
and
outsb
adc
cli
cld
loope
cmpsb
pop
sbb
push
jbe
mov
push
loop
andb
push
test
dec
push
push
pop
stc
mov
movsl
decl
xor
adc
das
mov
ret
mov
mov
add
call
in
fildl
icebp
lcall
xor
or
pop
fists
rcrb
mov
dec
pop
ljmp
cli
cld
dec
inc
cmp
cld
ds
mov
enter
adc
pop
push
or
idiv
fnstcw
popa
add
fiaddl
sub
int3
js
mov
push
pushf
pop
cmp
lcall
sub
sbb
dec
and
cmp
cmp
repz
add
popf
mov
cltd
fimuls
sbb
mov
lahf
insl
loop
stos
sbb
sbb
test
sbb
fwait
sub
xor
jge
sub
xchg
dec
inc
xor
btc
dec
out
cmpsb
mov
je
out
pop
mov
xchg
cli
and
pushf
enter
pop
mov
cmpsb
lock
out
dec
fs
imul
mov
mov
pop
or
lods
imul
lret
stos
scas
sub
jns
sbbb
jbe
ljmp
imul
out
jne
mov
scas
sahf
adc
mov
cli
push
push
sar
jg
imul
xchg
scas
or
cmpb
or
jg
sbbb
sbb
mov
mov
xor
sub
sbb
fcmovnbe
sbb
push
inc
nop
or
xchg
adc
fimuls
pop
loopne
ds
inc
dec
adc
roll
sub
pop
cmp
in
xchg
mov
inc
adc
out
adc
add
out
adc
dec
or
fldenv
lret
std
in
stos
cmp
gs
mov
jp
loopne
lock
jae
incb
out
shll
inc
cmp
lods
and
jg
cmp
and
or
xor
cmp
jno
cmp
adc
pop
nop
cmc
sarb
loopne
sub
mov
jle
push
cmp
pop
mov
out
aam
mov
fdivp
add
mov
sub
mov
out
sbb
clc
jg
arpl
shrd
inc
imul
and
inc
and
aas
jmp
push
push
dec
push
adc
push
pop
mov
sahf
add
jo
sar
xlat
jmp
xchg
fidivs
inc
sahf
xor
cmp
push
pop
xchg
adc
mov
and
test
push
cltd
aam
inc
dec
ds
outsb
loopne
xchg
loopne
cmc
jns
pextrw
ret
int
push
scas
loop
lds
pusha
inc
xchg
cmp
pop
push
es
ret
shrb
ret
mov
push
out
leave
ss
test
scas
int3
push
fcomip
out
call
pop
insb
mov
mov
push
pop
sub
popa
xor
or
jg
pop
pop
adc
mov
add
lea
addl
rcll
shlb
xor
push
sub
inc
inc
cmc
xchg
add
repz
repnz
mov
xchg
out
je
or
xchg
add
jnp
aaa
add
loope
jo
insb
sub
push
mov
or
mov
xchg
cmc
pmaddwd
ss
xchg
loop
cld
in
push
mov
into
sub
adc
and
cmp
or
mov
mov
dec
pusha
jl
sbb
es
xlat
push
adc
sub
push
jge
or
call
jg
push
add
addb
dec
mov
jnp
jae
mov
and
push
mov
out
xor
subb
insb
lret
add
jg
into
mov
ss
pushf
adcb
shl
mov
mov
mov
pop
data16
push
sbbb
lcall
leave
fiaddl
cmp
movsb
xchg
jmp
out
sub
cmpsb
adc
lock
outsb
sub
inc
in
add
add
incl
add
xchg
mov
idiv
add
call
xor
push
out
enter
dec
das
xor
ja
lret
addb
testb
lock
mov
fbld
sbb
mov
push
dec
movb
ds
mov
mov
inc
xchg
out
or
jmp
pop
xchg
hlt
jl
and
xchg
mov
jl
movsb
clc
incl
jbe
mov
or
add
ja
push
jmp
push
inc
add
scas
shl
ds
loopne
xor
imul
inc
inc
cmp
pushf
aaa
mov
inc
inc
mov
outsl
pushl
out
dec
sbb
sub
cld
adc
pusha
jo
jg
in
popf
cwtl
in
mov
rcrb
mov
stc
jge
xchg
clc
pop
add
or
jle
jne
or
lock
stos
pop
mov
insb
dec
lds
push
mov
rep
cmp
cmp
in
mov
pop
jl
ss
stos
mov
imul
iret
repnz
sub
sbb
sub
mov
pop
imul
out
sub
int3
xchg
and
cmp
dec
inc
mov
lret
or
add
test
lret
mov
es
adc
adc
gs
and
ljmp
pop
enter
outsl
push
aam
add
xor
aaa
test
xchg
into
call
add
dec
mov
cld
je
enter
rep
stos
add
ja
sti
test
jns
mov
nop
pusha
aad
sub
idiv
sbb
mov
rcll
les
xor
mov
mov
pop
dec
or
inc
xor
mul
sub
outsl
mov
clc
mov
inc
push
incl
enter
adc
cmp
ds
mov
cld
loop
mov
loope
out
xchg
lds
popf
cltd
fs
cmc
sbb
add
leave
mov
cmp
bound
inc
in
xchg
fiaddl
sbb
sbb
inc
and
subb
sub
pusha
xor
fbstp
out
xchg
test
out
xchg
push
icebp
pop
mov
repz
insl
cmpsb
cli
push
jp
add
aaa
lahf
push
xchg
jb
push
ret
scas
popf
xchg
sub
adc
push
call
std
in
pop
push
and
enter
out
rol
xchg
push
xorl
dec
lahf
loopne
ret
pop
xorl
cld
divb
pushf
pop
movsb
inc
mov
add
jae
inc
rcr
scas
pop
icebp
test
add
imul
or
ss
mov
nop
mov
jae
push
ss
inc
cs
xor
or
movsb
jl
mov
and
cwtl
push
fisubrl
rcr
dec
rcl
cld
aas
mov
movsb
cmp
and
inc
cld
mov
shrb
aam
mov
adc
jp
mov
mov
clc
or
hlt
push
aad
jb
repnz
je
gs
add
lea
shrb
dec
jmp
inc
mov
jle
js
lcall
jne
outsb
push
mov
jo
mov
enter
addb
ret
leave
clc
call
outsl
test
jmp
mov
or
inc
and
xchg
loopne
mov
cld
mov
jmp
jecxz
fadds
inc
lret
mov
inc
cs
cmp
sub
call
mov
pop
lock
mov
mov
icebp
mov
pop
mov
loop
jge
push
adc
adc
push
mov
out
dec
in
mov
mov
popa
xlat
shrl
mov
or
cli
outsl
ljmp
pusha
adc
add
cmc
mov
hlt
add
sub
fadds
mov
cmpsl
ret
jno
jecxz
sbb
iret
dec
clc
xchg
imull
inc
subb
bnd
xor
cmp
out
add
fidivrl
fsubs
cmpsb
inc
in
popf
lea
lods
and
push
jge
aad
fimull
sahf
mov
insl
std
jmp
pop
icebp
aaa
jp
inc
xchg
mov
cmp
repnz
hlt
pop
jmp
test
dec
popa
sbb
aas
sbb
stos
add
sarb
sub
fsubrl
cmp
pop
out
imul
xchg
lock
mov
fnstcw
fisubs
in
lock
rcrb
push
pop
lcall
or
sahf
xchg
pusha
imul
lds
sbb
or
push
inc
inc
sub
push
int3
scas
dec
mov
fisubrl
loopne
test
std
jo
and
clc
add
loopne
outsb
hlt
inc
scas
bound
cmp
aas
rclb
lahf
and
fsts
popf
add
mov
out
lock
jl,pn
adc
cmc
sub
aas
subb
lret
xor
das
mov
cs
add
mov
xchg
out
or
pushf
pusha
movsb
fcompl
lods
dec
call
mov
and
push
gs
call
xor
mov
data16
inc
or
test
adc
mov
es
stos
imul
aad
cmp
iret
into
andb
adc
push
mov
repz
cmp
push
mov
movsl
pop
fnstcw
or
cmpsl
jne
xorl
add
inc
add
mov
mov
and
sub
incl
mov
test
int3
loopne
mov
mov
inc
mov
addl
ret
flds
or
movsl
mov
jg
xchg
subb
shl
mov
sbb
jg
mov
push
push
fwait
mov
loopne
jmp
jb
stc
cmp
sub
aam
jae
xchg
es
xor
or
sbbb
mulb
aaa
dec
cmp
jbe
nop
or
dec
cmp
inc
pop
es
test
and
jbe
inc
jbe
orb
cmp
test
mov
mov
pop
or
ljmp
ret
inc
stc
in
shlb
ror
js
pop
cs
jmp
jle
cltd
mov
sbb
xchg
int
xor
jge
jg
xor
out
fnstenv
or
mov
int
ret
pop
es
push
ja
cmpsl
mov
sar
test
mov
push
mov
int3
add
shr
jo
xchg
sbb
push
lret
mov
movsb
ljmp
xchg
js
jno
js
jecxz
and
jmp
dec
pop
mov
fucomp
cwtl
or
mov
add
cmp
mov
mov
sub
add
add
push
outsb
mov
lret
fdivrs
push
dec
fildl
inc
setle
cmp
jno
imul
jp
mov
add
out
sbb
fbld
rolb
cmp
jnp
add
jbe,pt
mov
lods
cmpb
and
jne
movsb
repnz
lock
xor
push
xchg
loope
mov
fisubrl
testl
adc
insl
xchg
ret
pop
sub
push
jo
stos
imul
cmp
jp
sbb
addb
scas
add
push
sub
aas
loopne
loope
insl
fcomp
push
mov
xor
cli
div
add
mov
or
jle
and
dec
xchg
push
dec
and
mov
mov
push
or
pusha
mov
mov
sbb
push
es
hlt
cltd
dec
sbb
push
push
push
mov
loop
lahf
add
clc
mov
cld
dec
adc
ja
mov
or
mov
ret
pop
inc
mov
ret
loopne
cld
sbb
jo
shr
loope
loop
inc
pop
pop
push
cld
rcrl
in
mov
xor
sbb
jns
cli
hlt
incl
scas
into
mov
sti
pop
hlt
outsb
sbbb
add
addl
mov
mov
repnz
int3
mov
add
bound
sub
push
lock
stos
pminsw
push
comiss
pop
sub
and
fisttps
repz
mov
jecxz
mov
dec
jno
icebp
clc
sarb
aam
aad
daa
cwtl
cmp
mov
movsl
subb
dec
loope
inc
mov
jge
mov
dec
rorl
xor
test
movsl
mov
repz
dec
daa
adcb
in
leave
call
pop
addr16
out
andps
push
dec
leave
jp
dec
add
and
jp
and
test
mov
out
iret
or
lcall
fmuls
les
xor
xchg
or
xchg
stos
insb
movsb
mov
icebp
jbe
add
fstl
xchg
mov
xchg
and
data16
mov
sub
push
call
imul
add
std
sahf
cmp
shlb
loopne
xchg
loop
mov
jbe
add
sub
mov
js
add
push
hlt
adc
sub
test
lret
shrb
rol
notb
ss
push
mov
test
in
sahf
jg
stos
hlt
and
aad
pop
into
and
pop
int3
mov
shlb
sbb
jo
aam
stos
clc
ljmp
ljmp
roll
push
inc
mov
es
lcall
jecxz
pusha
incb
mov
rsm
ret
cs
xchg
sbb
push
mov
idiv
scas
iret
mov
add
repz
inc
ret
add
idivl
jmp
inc
mov
dec
add
add
and
or
lcall
jb
jmp
jl
pop
mov
nop
xchg
mov
jo
mov
std
mov
lcall
cltd
fldt
loope
call
sbb
add
mov
dec
out
es
xchg
xor
sub
sbb
mov
add
inc
dec
mov
cmp
mov
clc
jmp
rcl
fisttps
scas
mov
cwtl
rolb
jp
jo
faddl
xchg
cs
pushl
cld
pop
mov
mov
fs
ret
cmpsl
sahf
add
cmp
lret
jno
and
mov
or
jg
pop
les
inc
xchg
dec
sub
dec
jmp
jmp
mov
jmp
push
addl
ret
out
jmp
add
sbb
les
push
add
push
add
lods
ror
mov
push
mov
test
pusha
sub
pop
mov
cmp
enter
cli
inc
incl
fcoml
mov
sti
dec
mov
pusha
pop
rcll
jne
aad
repz
inc
lret
and
or
mov
dec
cld
stos
nop
ja
mov
jg
sub
mov
ds
rolb
push
ret
lea
stos
cld
sbb
jl
and
and
mov
clc
test
cld
rorb
and
add
xchg
stos
sub
jnp
sub
mov
loopne
mov
and
add
sbb
lret
addr16
xor
add
jl
in
les
inc
popa
mov
mov
mov
pop
jl
lock
imul
mov
mov
cli
mov
andb
adc
fildl
call
cli
mov
xor
sbb
nop
scas
clc
test
lea
jmp
adc
mov
sbb
fwait
jl
aas
and
out
stos
aam
je
mov
mov
mov
sub
push
pop
sub
shr
and
jns
push
gs
lock
shr
popa
sbb
push
mov
aaa
loopne
insb
pop
mov
mov
push
sahf
xchg
push
cmp
sbb
ljmp
jmp
mov
movsb
lcall
fidivrs
add
push
loop
xorb
pop
lcall
push
out
adc
loopne
outsb
iret
pop
mov
sar
xor
or
xlat
mov
pop
sbb
mov
jecxz
insb
xor
add
mov
sahf
mulb
out
movsb
lods
and
inc
aas
adc
sub
add
mov
ja
and
cmp
or
mov
lock
shl
cmp
testb
adc
pop
push
cli
or
les
outsb
call
shlb
out
and
sub
loopne
adc
jl
and
jle
xchg
fisubl
xor
xchg
mov
call
jb
push
scas
adc
pop
add
fsts
negb
insb
mov
mov
inc
or
ljmp
ret
inc
rcll
jle
test
loop
sub
loop
or
jg
add
mov
movsb
aaa
adc
adc
lock
mov
jle
mov
subb
fdivrl
test
outsl
and
adc
push
ljmp
dec
inc
jg
mov
add
sbb
fisttpll
lods
jp
fneni(8087
mov
add
dec
in
push
js
lock
pusha
sub
jbe
pop
sub
outsb
in
pop
enter
cmp
xchg
repnz
inc
jp
daa
cld
fbld
adc
jnp
push
push
addl
pop
mov
add
rclb
stc
jmp
sbb
push
test
add
out
or
xor
sbb
aam
sbb
sbb
add
cld
fwait
or
mov
loopne
push
xor
test
xor
je
out
es
mov
stc
fwait
or
fistpll
sbb
and
adc
pop
lcall
pop
cbtw
push
add
push
cmp
fcompl
repnz
push
push
jnp
mov
rolb
mov
ljmp
jg
or
and
sbb
lret
mov
mov
subb
or
xor
call
lock
and
add
and
mov
mov
mov
int3
or
mov
iret
es
clc
incl
sub
xor
jp
jo
push
cmp
jg
arpl
xlat
in
stos
sbb
call
leave
mov
lock
sub
jp
cli
mov
add
sbb
icebp
adc
test
or
adc
in
pop
subb
test
test
ja
push
cli
ljmp
shlb
jo
sub
div
inc
add
sbb
mov
mov
push
adcl
add
mov
cli
mov
pop
add
push
repnz
incb
loopne
loopne
out
cli
aas
cltd
xchg
repnz
jo
lret
aaa
lods
daa
pop
push
or
loope
pop
or
shlb
mov
push
bound
sbb
sbb
jno
push
and
ficompl
imul
adc
sbb
adc
mov
icebp
push
loop
pushf
rcrb
orb
add
jg
pop
or
and
mov
fsubr
jecxz
insl
xor
mov
hlt
sti
or
leave
loop
sub
add
cld
ljmp
lock
mov
jns
jne
idivb
or
sub
incb
inc
push
adc
dec
cmp
push
dec
mov
inc
fiaddl
lds
movsl
es
inc
aaa
std
idiv
sti
cmp
out
dec
add
mov
enter
ja
push
push
or
cwtl
sbb
pop
mov
xor
fistl
fidivs
out
jmp
lock
loopne
jl
adcb
adcb
mov
xchg
idivl
loop
cmp
jns
adc
add
inc
mov
test
add
pop
ret
add
jg
gs
or
mov
add
add
ret
dec
mov
fsubl
or
xchg
mov
test
sub
mov
clc
push
pusha
bound
testl
fldenv
jno
mov
add
lods
xchg
pusha
test
push
test
ljmp
xor
add
inc
ljmp
and
cwtl
cmp
adc
jge
frstor
stc
scas
inc
cmp
sbb
mov
ljmp
fsubr
sub
stos
stc
inc
sbb
std
mov
outsb
xor
je
insb
inc
call
mov
push
xor
lret
roll
loopne
cld
jmp
add
add
clc
sti
imul
mov
push
mov
cmp
sbb
lock
ljmp
jle
sbb
fdivr
add
mov
xor
bound
je
in
mov
pop
or
cwtl
or
js
adc
rorl
push
push
enter
xchg
xor
stos
fiadds
clc
xorl
xchg
rolb
loop
fimuls
dec
cmp
push
lods
push
cli
dec
popf
pop
arpl
adc
orb
fdiv
or
mov
sub
fisubrs
dec
pop
sbb
and
stos
pop
adc
mov
pop
test
lods
jle
mov
sbb
and
xorl
jg
xor
sbb
cmp
orb
mov
out
out
push
std
mov
out
stos
mov
shlb
out
mov
rcrl
mov
lods
jle
push
push
xchg
js
leave
add
mov
ja
daa
fiaddl
ss
roll
mov
mov
pop
jl
pop
dec
pop
sub
adc
dec
in
pop
movsb
jnp
inc
sub
or
mov
mov
push
jne
lock
jmp
push
repnz
xchg
cld
sbb
mov
xchg
push
leave
dec
daa
mov
cmp
and
dec
push
test
loopne
mov
mov
mov
jp
sub
jmp
call
movsl
sub
addb
arpl
add
repz
and
out
fcmovnu
inc
dec
fisttps
mov
scas
push
sahf
mov
xchg
pop
fdivrs
sarb
mov
cltd
adc
loope
mov
mov
les
mov
pop
shl
jmp
out
mov
mov
gs
sub
mov
and
xor
daa
push
dec
movsl
js
cs
pop
cmpl
mov
jecxz
jmp
pop
in
ret
lock
je
fs
mov
adc
dec
enter
rcrb
adc
movsl
xchg
clc
pushf
ljmp
or
outsl
sub
mov
or
add
faddl
xchg
les
ljmp
or
sar
insb
ret
mov
xchg
adc
or
pusha
int
mov
mov
rclb
mov
pop
mov
push
mov
and
loop
cs
out
insb
addl
push
jne
sub
incl
fidivl
pop
xchg
and
add
nop
cli
or
arpl
incb
fsubs
push
xchg
lret
pop
shll
sub
es
cmp
ljmp
jle
push
mov
lret
in
fs
lea
sub
mov
cmp
icebp
dec
add
les
flds
out
pushf
xor
test
jp
fcomp
test
sbb
fcoms
insl
and
add
mov
mov
xor
pop
pusha
inc
jl
dec
or
or
pop
lret
or
lret
xor
hlt
movsb
fdiv
incl
and
imul
sbb
mov
xchg
imul
fwait
mov
mov
jno
jg
sub
adc
lret
add
sbb
clc
decl
jbe
and
adc
add
int
scas
push
loope
out
pop
movsb
iret
call
ljmp
lea
and
fstpl
push
stos
cmp
mov
lea
xchg
mov
cvtpi2ps
push
xchg
mov
fildll
mov
std
nop
les
jg
mov
xchg
mov
int3
rorl
dec
clc
ljmp
dec
test
in
xlat
in
xor
xchg
and
xchg
int
mov
jg
mov
js
gs
andb
mov
aam
jecxz
xchg
adc
jbe
aas
add
xor
test
jp
loope
ficompl
sub
xor
cmp
xchg
xchg
notl
int
push
jnp
je
or
addr16
or
mov
repnz
jae
jns
xchg
clc
scas
jmp
clc
test
push
leave
mov
dec
cmpb
mov
ficompl
jge
call
bswap
add
mov
sbbl
sbb
stos
add
fnstsw
push
lds
jecxz
and
mov
xor
lods
pop
cmc
out
rol
add
mov
cmpb
xchg
push
cltd
pop
sti
popf
cwtl
jbe
dec
aam
and
cwtl
mov
or
andl
int
sbb
xor
sub
adc
nop
loop
inc
mulb
cmp
pop
lcall
and
push
test
add
mov
incl
adc
insb
mov
clc
push
or
ds
mov
adc
push
pop
xor
cmp
or
xchg
pop
loope
push
mov
pushf
pop
add
into
outsb
pop
pop
sti
sbb
sbb
add
mov
xchg
mov
inc
cli
add
dec
mov
daa
add
les
sub
lods
add
pop
fsubl
call
jnp
or
mov
jne
add
adc
dec
push
loopne
shl
add
push
mov
cmpb
bound
fbld
mov
adc
push
and
mov
test
call
outsb
cmp
mov
or
sahf
cmp
xor
mov
data16
and
jmp
ja
adc
incl
inc
js
pop
das
or
cmp
lahf
lods
and
hlt
ss
cmpsb
les
add
fildl
adc
pushaw
icebp
dec
fisubrl
pop
push
cli
insb
outsb
or
fisttpl
je
dec
movsb
mov
jmp
push
xor
or
xchg
pushf
lret
xchg
addb
dec
ret
mov
add
sub
mov
pop
out
push
add
call
fistps
jle
stos
pushf
dec
cmp
cmpb
movsl
cmp
shrb
jno
jecxz
clc
icebp
mov
sahf
xchg
cmp
sarb
int
cmpsb
mov
fcmovnbe
js
in
enter
xchg
xchg
or
orb
inc
popa
rcll
mov
add
inc
cmp
call
lods
cmpsb
and
es
ljmp
inc
sub
call
push
mov
push
pop
pop
adc
cmpsl
cmpsb
xchg
mov
ret
das
cmp
sbb
mov
iret
pushf
push
push
xchg
mov
gs
inc
int3
add
pop
lock
std
mov
loopne
andb
cmp
mov
add
push
es
jb
arpl
jno
xor
mov
xchg
out
orl
nop
jl
add
adc
mov
loop
pop
cmpsl
into
stc
inc
or
push
add
call
lret
ret
add
xor
or
add
mov
adc
push
mov
pop
sub
mov
and
cld
cld
movsb
push
in
jmp
pushf
mov
mov
sbb
push
inc
mov
xor
icebp
sbb
sar
loopne
push
scas
outsb
clc
pop
or
push
jne
and
xchg
push
outsl
jl
jp
mov
sub
scas
lods
fadds
mov
inc
loope
dec
xchg
mov
addl
cmp
add
push
addr16
cmp
sbb
pop
add
loop
stos
mov
inc
jl
push
dec
aas
shll
add
inc
scas
cs
sbb
add
push
out
lret
cwtl
or
mov
pop
test
xchg
push
insb
cwtl
mov
push
ljmp
adc
dec
jns
add
cli
mov
and
ret
lcall
add
pop
cs
push
stc
hlt
dec
repnz
call
fdivl
or
cli
sub
add
jg
imul
xchg
and
push
push
cli
xchg
fiadds
inc
or
bound
js
jp
mov
fisttps
ja
das
in
jnp
shll
ret
jne
mov
add
mov
xchg
call
inc
push
pop
ss
call
push
add
clc
mov
loopne
push
push
add
pop
ja
scas
ret
les
add
mov
dec
cs
sub
jbe
lods
sti
and
pop
into
jg
mov
mov
faddl
aam
mov
xor
cli
add
fstpl
and
mov
push
dec
lcall
incl
bound
add
xchg
stc
xchg
jge
popf
les
stos
loopne
pop
and
stos
bound
mov
mov
into
sbb
sbb
mov
and
orb
cld
mov
inc
lahf
pusha
mov
push
out
sahf
pop
sub
imul
in
push
faddl
out
inc
mov
or
jl
adc
icebp
mov
and
pop
nop
lcall
mov
loope
rorl
das
rcll
push
adc
stc
pop
sar
pop
inc
fst
stos
sbb
add
lock
push
push
movsl
cmpsl
cwtl
inc
nop
xor
rolb
mov
cmp
das
xor
lods
loop
xor
push
aad
sbb
xchg
out
and
inc
lahf
push
aas
add
add
jl
mov
add
push
out
mov
fildll
sub
jl
dec
ret
mov
orb
incl
incl
adc
lret
pop
cmp
bound
push
mov
pop
add
push
mov
pop
mov
add
mov
xlat
jno
push
sarl
in
xor
pop
pop
mov
lahf
or
ljmp
insl
adc
mov
mov
mov
bound
loopne
fldl
mov
add
fbstp
fbstp
pushf
pusha
add
rclb
sbb
xor
test
jbe
arpl
daa
jp
sub
and
or
push
dec
or
leave
sahf
add
add
enter
call
aam
inc
call
ljmp
sti
mov
push
xchg
pop
fisubl
in
mov
adcb
les
mov
jmp
js
and
adc
pop
push
outsl
cmp
xchg
adc
lret
sbb
subb
lock
mov
es
mov
jmp
cmc
cmp
call
repnz
aam
dec
xorb
mov
push
or
add
daa
sbb
fimuls
pop
fs
mov
mov
fildll
xlat
adc
filds
popf
mov
mov
inc
or
daa
inc
sahf
fisttpll
add
cli
ret
clc
mov
xchg
negl
mov
pop
xor
add
cs
cmpsl
xor
loope
je
add
cmc
pop
jge
sbbb
mov
jecxz
mov
rorb
xchg
ds
sahf
sahf
pop
or
lds
stos
add
pushf
push
dec
push
and
pop
xchg
lcall
clc
fistpll
xor
add
fcompl
sub
mov
cmc
mov
add
xor
jns
loop
add
lcall
inc
sub
adc
sahf
mov
pusha
scas
dec
pushl
xchg
cmp
cmp
push
and
cmp
pop
push
cmp
jo
shrl
sub
cmpb
repz
addl
mov
adc
xchg
out
adc
jmp
cmp
cmp
daa
cmp
sar
add
pushf
inc
icebp
sub
and
inc
jmp
ret
pusha
int
mov
jbe
jecxz
clc
cmp
scas
push
xchg
test
mov
sahf
adc
push
sbb
rcrb
in
mov
enter
incl
mov
adc
cld
lret
mov
push
mov
subb
adc
test
xorb
mov
push
incl
add
pushf
mov
fmull
in
inc
adc
ljmp
mov
in
test
cmp
cmp
xchg
inc
or
xor
shlb
cwtl
fistpll
aaa
scas
call
int3
cli
mov
cmp
mov
hlt
sub
mov
xlat
mov
adc
aam
mov
mov
push
aam
sub
mov
cld
pop
je
ja
or
push
and
adc
imul
mov
ret
ret
dec
lahf
cmp
cld
mov
pop
jne
bound
cmc
test
jmp
jecxz
xchg
mov
jmp
lock
sub
mov
sbb
es
sbb
imul
mov
or
sbb
subb
mov
mov
push
sbb
xor
jno
pusha
sar
in
mov
outsb
movsb
adc
sub
lea
push
lea
inc
int3
push
imul
std
adc
aas
aaa
imul
sub
jp
mov
push
push
ljmp
add
add
and
nop
mov
popf
jp
jecxz
jo
push
add
cmpsb
jnp
cmp
pop
or
mov
jge
push
ror
jl
mov
scas
add
lcall
fldenv
mov
sbb
or
sbb
stc
cmp
add
xchg
or
push
pop
outsl
jg
mov
arpl
nop
cld
call
in
andps
clc
pushl
popf
sbb
mov
jmp
lock
pusha
xlat
add
sbb
in
stos
sbb
cmpsb
fmul
push
mov
cmc
sahf
push
pusha
mov
jmp
cld
mov
xchg
mov
fincstp
cmp
jae
test
xchg
inc
adc
mov
sti
jae
xchg
into
jnp
adc
imul
data16
inc
enter
push
add
insl
andb
add
pop
mov
push
and
push
inc
or
xor
scas
movsb
test
fwait
mov
outsl
js
loop
mov
sub
in
inc
test
aas
std
or
dec
stc
inc
xor
aas
pop
add
cmc
pusha
mov
sub
mov
and
pusha
xchg
testb
fstpt
mov
xor
jno
and
mov
mov
imul
mov
sbb
cmp
push
loope
mov
sbb
add
cmp
mov
shlb
sbb
sbb
or
pop
mov
add
les
sti
dec
sub
mov
enter
enter
and
pop
adc
out
add
push
lahf
stc
inc
stc
inc
std
mov
aad
jle
fldl
push
sbbl
cmpsb
cmp
hlt
mov
add
out
shll
push
mov
jp
loopne
lcall
aas
pop
or
or
sub
or
xor
scas
fdiv
and
fmuls
fsubs
fisubl
cmpl
and
outsl
sub
push
sbb
ljmp
jb
fdivrl
mov
and
aaa
inc
pop
icebp
and
pop
mov
sti
cli
pop
loop
in
or
enter
pop
mov
ja
mov
shll
hlt
rorl
and
mov
das
mov
add
push
or
push
push
jmp
jbe
sarb
movsb
xchg
inc
inc
cltd
add
fwait
mov
hlt
outsl
scas
fisubrl
sbb
mov
call
pop
adc
dec
dec
inc
insb
fwait
push
pop
into
sbb
lock
cmp
nop
loopne
imul
loopne
call
rol
sbb
scas
into
and
lods
imul
into
dec
pop
mov
adc
push
popf
jmp
lret
mov
sbb
int3
add
call
es
out
jns
cmp
nop
push
mov
stos
mov
push
mov
sub
cwtl
icebp
jnp
push
push
pusha
mov
ja
jbe
sbb
inc
cwtl
fcomi
jns
push
mov
test
in
xor
fists
test
fbstp
push
shll
xchg
push
mov
into
out
mov
fcmovnbe
fisubl
sub
aam
repnz
mov
jl
clc
popf
nop
fsubl
mov
es
faddp
int3
xchg
or
cli
test
add
imul
mov
scas
mull
add
lret
call
imul
notb
test
add
add
or
dec
push
cmpl
rcl
xchg
fimull
outsb
xor
pusha
mov
jne
sbb
aad
cs
insl
cli
add
outsb
loop
inc
or
mov
test
mul
lret
cld
add
insl
xchg
mov
mov
mov
in
xor
jg
sbb
pop
inc
insl
pop
lods
test
mov
adc
cli
mov
shr
pop
add
movups
dec
pop
mov
inc
orl
outsl
hlt
shl
mov
add
dec
dec
or
mov
and
adc
pop
inc
pushw
and
insl
out
clc
sbb
je
aaa
mov
testb
iret
gs
push
cld
loope
icebp
nop
testl
push
and
addr16
sbb
mov
inc
out
cld
lcall
popa
mov
xchg
pop
ljmp
pop
in
aad
cli
mov
sbb
cmp
mov
ret
push
mov
dec
inc
jl
roll
repnz
mov
fsubrl
cwtl
ljmp
call
pop
fistpll
mov
lock
jl
cmp
jg
mov
into
jle
xor
movl
outsb
dec
fwait
movsb
insl
inc
inc
loop
cld
jg
cmpsb
mov
rolb
mov
aad
fstpt
jno
add
xor
std
sahf
sbb
and
lods
xor
xchg
mov
mov
ds
pusha
sti
pop
push
dec
xor
dec
cmpsl
orb
mov
jo
push
ret
jp
das
add
adcb
mov
call
lret
les
inc
mov
add
or
xor
sub
pop
add
add
mov
lret
mov
sub
cmp
sbb
sub
jnp
ret
and
scas
pop
jnp
push
sub
hlt
ljmp
add
cmc
insb
fwait
sub
add
gs
enter
movsl
test
nop
inc
cmpsb
outsb
lods
aad
int
cmp
add
lock
mov
adc
mov
inc
fcompl
fcomip
add
sub
push
stc
xlat
fbstp
pusha
add
mov
fidivrs
mov
mov
loopne
int
cmp
call
repz
mov
jmp
aas
ret
nop
ja
gs
imul
mov
pop
push
add
mov
cmpsb
sbb
test
or
incl
sti
outsl
int3
sbb
icebp
mov
xchg
in
add
gs
add
xchg
push
imul
push
repnz
fldt
call
jl
xor
imul
cmpsl
add
mov
shll
mov
push
inc
sbbl
out
lds
jb
aaa
stos
dec
pop
add
inc
jl
or
in
sub
cmp
sbb
pop
dec
and
ffree
imul
cmp
stc
das
pop
sub
mov
add
shlb
fdivr
sbb
and
add
sbb
cmp
mov
or
push
push
add
in
push
out
pop
jg
add
std
push
adc
or
and
and
les
movsl
push
or
inc
pop
movsl
fwait
push
xchg
mov
jp
pushf
fstl
push
adc
add
jne
add
lock
fistpll
xor
fsubr
add
dec
enter
insb
stos
movsb
push
and
dec
das
ss
cld
outsl
mov
test
or
adc
sub
jo
xchg
add
mov
mov
dec
mov
and
mov
testb
arpl
push
sub
pop
fwait
mov
fdivr
test
mov
adc
dec
inc
stc
loopne
jae
add
xor
jg
cmpsb
mov
test
or
shrb
add
pop
add
lds
add
in
cli
negb
icebp
sbb
dec
mov
sub
push
add
sbb
mov
push
clc
inc
sbb
sub
dec
je
mov
outsb
in
loopne
sub
mov
ja
mov
xor
jmp
call
pop
adc
add
cmp
aas
mov
dec
aad
pushf
xor
add
or
lock
xor
xor
call
shlb
xor
loopne
pop
and
cli
cmp
movsb
lods
push
ja
push
sub
sahf
lods
movl
imulb
mov
cmpsl
dec
push
or
jne
in
sbb
sar
je
adc
sub
sbb
movsb
cmp
pop
push
andl
insb
stos
jo
pop
jne
push
push
mov
xor
loop
xor
cld
mov
movsb
push
add
mov
je
sti
dec
cmp
cmp
icebp
loop
movsb
dec
mov
sahf
pop
subb
pop
movsb
lods
xchg
add
dec
push
sbb
adc
hlt
test
ret
mov
fcompl
add
mov
jnp
pop
call
and
or
inc
dec
jnp
mov
nop
daa
lea
nop
jg
aas
jo
inc
jns
clc
lret
loopne
mov
xchg
in
pop
cli
push
mov
or
mov
fimuls
mov
pusha
andl
push
rorl
mov
pop
add
cli
jbe
out
cmpsl
jecxz
mov
mov
pop
loope
sti
push
out
sub
jo
cmpsl
jmp
int
jb
push
mov
inc
popf
sbb
push
push
push
mov
cmp
scas
inc
inc
and
inc
jmp
cmp
insb
push
push
int
pop
shl
std
xchg
outsb
repz
aad
jge
mov
push
xchg
dec
mov
sti
out
clc
push
inc
fimuls
std
mov
inc
lods
and
in
in
in
cmpsb
jo
xor
ja
cmp
mov
pushl
and
or
cli
xor
or
sbb
and
rorl
shll
ficoms
adc
or
xlat
cmp
icebp
ljmp
cwtl
popl
stc
add
hlt
mov
jbe
pop
orb
adc
mov
stos
jne
mov
push
mov
push
cmpsb
push
inc
adc
adc
jg
mov
xor
out
push
jle
cmp
ljmp
sbb
pusha
add
orb
shrl
jp
pop
and
cmp
push
sbb
cmpsb
dec
leave
sub
pop
enter
and
pop
xor
lret
or
lcall
add
call
lahf
les
jbe
sub
push
hlt
mov
xchg
fdivp
outsb
jmp
mov
fwait
mov
xchg
mov
mov
mov
incl
jecxz
arpl
cmp
jl
push
lea
std
ja
rcrb
sub
decl
cmpsl
insb
popa
rcrb
pop
sbb
dec
jle
add
jnp
pushf
addl
enter
xchg
fidivrl
or
cmpsl
dec
incb
adc
mov
and
push
push
mov
xor
pop
cmpb
inc
xchg
sar
sub
test
cmp
aaa
std
xchg
iret
cmpb
sti
jmp
cmp
jecxz
cli
dec
mov
pop
arpl
adc
mov
mov
les
clc
lds
lock
inc
sub
sar
mov
pusha
add
mov
mov
xchg
xchg
fidivs
add
test
insb
adc
dec
pop
fadd
and
xchg
add
pop
call
mov
add
jbe
daa
xchg
mov
stos
pop
add
les
je
ss
sub
js
movl
lock
sbb
loopne
int
in
dec
dec
add
mov
push
cmpsl
push
fs
add
lods
cwtl
mov
pop
mov
clc
jecxz
ficoms
les
mov
loopne
dec
sti
divl
daa
les
dec
xor
cmpsb
mov
adc
jmp
cmp
bnd
add
mov
add
lcall
add
scas
push
dec
in
push
dec
cmp
sub
inc
pop
aaa
cwtl
or
int3
das
clc
add
les
or
sub
or
sbb
cmp
outsb
mov
stos
adc
jl
mov
stos
jg
mov
mov
mov
jmp
in
sbb
lcall
inc
mov
mov
rcl
dec
mov
mov
add
adc
mov
jg
in
js
mov
mov
pop
inc
pop
outsb
pop
mov
rorb
das
outsl
xchg
lcall
js
stc
in
sbb
adc
sti
cmpb
add
pop
pushf
mov
inc
add
sbb
jb
mov
sub
aad
rcr
xchg
mov
sub
or
xchg
add
pop
jle
imul
or
cmp
mov
negb
fildll
sbbb
and
cmpsb
in
repnz
clc
push
pop
scas
push
xchg
xchg
mov
mov
cld
in
pushf
mov
inc
xchg
or
adc
xchg
mov
mov
jp
xor
add
adc
es
loop
xchg
or
adc
mov
popf
rorb
add
add
pop
adc
cwtl
idiv
inc
adc
xor
add
jmp
jne
je
ljmp
lods
imul
loopne
lock
dec
mov
jb
test
call
cmp
pop
stos
jecxz
jb
push
out
or
mov
subl
loop
das
push
add
adc
push
stos
push
or
clc
inc
adcb
pushl
je
xchg
mov
cmp
enter
insl
in
mov
incl
in
add
shrl
dec
ljmp
dec
mov
pop
pop
scas
cmpsb
outsb
std
mov
push
cmp
ljmp
mov
xchg
out
hlt
outsl
cli
pop
push
sahf
sub
hlt
outsl
shlb
loope
mov
sbb
push
cmp
xor
jmp
push
pop
push
and
mov
add
jp
mov
xlat
mov
xor
inc
lcall
not
mov
mov
pop
mov
xor
lods
mov
mov
sarl
push
rcl
push
rolb
push
add
cli
fwait
jno
insb
cmp
insb
movsb
test
fbstp
and
mov
and
and
ret
lret
push
sub
imul
fstpt
loopne
xor
mov
pause
dec
pop
and
mov
push
mov
pop
or
cwtl
or
mov
popl
repnz
std
push
jbe
inc
shl
sub
nop
or
dec
dec
out
add
call
adc
pop
psrld
mov
mov
inc
add
xchg
jno
repz
xchg
iret
inc
js
and
out
ss
push
lret
add
cld
pshufw
add
cmp
sbb
add
addr16
jg
daa
mov
sub
dec
xorb
adc
jg
mov
sub
fadds
jp
cld
sub
pop
leave
or
daa
lcall
or
fisubl
inc
adc
mov
sub
jae
dec
xor
jmp
sbb
roll
sub
test
push
jmp
sbbb
or
add
cmp
decl
push
leave
sub
lret
fadds
adcl
and
jecxz
stos
push
pop
mov
xchg
add
bnd
incl
xchg
cmp
stos
adc
shll
xchg
jo
fwait
mov
and
mov
mov
loope
cli
hlt
cmpsb
mov
pop
push
add
pop
cmc
repnz
adc
inc
inc
adc
ds
stc
loopne
bound
test
hlt
scas
cmpsl
sub
imulb
mov
sbb
or
andb
sub
dec
adc
mov
xor
repnz
add
sub
dec
sarb
loop
push
popa
push
mov
stos
mov
out
mov
push
enter
cld
push
faddl
mov
data16
push
je
mov
adc
dec
or
out
ljmp
push
pusha
cmc
lret
lret
stos
pop
add
jb
stos
mov
mov
decl
imul
data16
mov
repnz
pop
aam
pop
or
sbb
mov
sub
xchg
dec
call
jmp
adc
cs
xor
mov
test
xor
adc
sbb
aaa
je
aas
lds
aaa
std
pop
dec
inc
movsb
mov
pop
aaa
xor
adc
jg
andl
and
sub
inc
in
aas
mov
jo
add
push
add
push
cmc
jg
cmovb
jecxz
popf
add
push
jo
adc
aam
notl
outsb
and
adc
jg
loopne
xchg
xchg
push
adc
in
jmp
sahf
shr
cmp
xchg
testb
hlt
jo
push
dec
or
or
sub
xchg
ljmp
mov
test
xor
sahf
cmp
cmc
in
loope
xor
clc
enter
inc
cs
lods
mov
mov
pop
lock
sbb
jp
fwait
push
dec
cmpsl
cltd
lock
inc
in
add
daa
mov
or
mov
inc
out
inc
add
lcall
int
nop
clc
bound
icebp
push
jle
add
mov
jl
lock
inc
xchg
inc
dec
push
dec
jmp
mov
add
fiadds
xchg
cmc
icebp
stos
insl
pop
adc
push
aam
xor
movsl
pop
mov
pop
jno
aad
push
icebp
xchg
ljmp
xchg
xor
jle
sub
subb
int3
pop
outsl
jp
loop
add
loop
inc
push
push
mov
cmpsb
pusha
cwtl
outsb
sbb
and
sti
mov
shrb
mov
cmp
adc
repz
fincstp
mov
dec
mov
jbe
add
pop
pop
movsb
ja
xchg
nop
imul
lock
sar
in
adc
idiv
mov
inc
sbb
push
pop
xchg
jmp
sarb
mov
mov
mov
lcall
sbb
cltd
and
and
xor
sbb
loop
jle
mov
rclb
dec
ja
push
repz
ret
xchg
js
faddl
xchg
mov
test
add
jb
bound
sbb
imulb
arpl
mov
mov
push
or
loop
or
add
mov
mov
jo
in
les
dec
dec
ss
cmp
adc
push
aaa
test
dec
mov
adcb
shl
orl
lcall
xor
add
adc
push
push
fdivr
push
inc
lret
roll
decl
and
xor
push
mov
adc
lods
jle
dec
daa
push
xor
cmp
mov
stc
cmpsb
int
mov
jo
pop
dec
cli
jae
adc
xchg
pop
mov
xor
jg
mov
repnz
stos
fcompl
movsb
pop
nop
pop
xor
add
incl
cld
add
mov
xlat
push
push
inc
mov
xor
add
icebp
pop
inc
clc
xor
icebp
add
inc
inc
mov
mov
add
mov
orl
ficoml
adc
mov
jb
lods
jno
mov
push
hlt
out
and
inc
aam
je
loop
lcall
sbb
cli
add
adc
fisubrl
ds
cmp
movsb
adc
inc
lds
movsb
push
ja
sbb
xor
xor
pop
mov
add
jl
push
push
jne
push
sub
outsb
sbb
push
ja
sbb
pop
adc
adc
in
call
in
dec
xor
ret
movsb
dec
bound
dec
movsb
mov
bnd
addr16
xor
add
pop
add
cli
scas
sbb
add
pop
scas
dec
dec
lcall
stos
cmpsb
jo
pop
ret
add
jecxz
mov
xor
test
mov
inc
mov
js
rcr
push
mov
arpl
dec
rcll
lea
je
data16
int3
add
push
dec
jecxz
adc
xchg
movsb
mov
cmp
push
push
xor
out
xor
pop
cld
fstpt
pop
dec
sbb
shrb
mov
pop
gs
xchg
ds
gs
cs
jecxz
sub
hlt
mov
push
cmp
push
call
jb
bound
xorb
test
mov
inc
inc
fsubrs
fwait
adc
mov
and
pop
mov
cmpsb
xor
push
orb
push
jle
pop
fs
adc
and
push
adcb
jl
pop
xchg
jl
movsl
cmp
pop
ljmp
push
xchg
loope
adc
aam
dec
out
ljmp
or
or
and
push
add
cli
scas
sbb
xor
and
push
mov
add
xchg
adc
test
mov
pop
push
add
leave
cmp
inc
dec
mov
pop
daa
cs
scas
rcrl
rolb
aam
push
cmpsb
inc
push
call
xchg
mov
and
ss
insl
dec
inc
or
push
sbb
loopne
add
pop
loope
aaa
xlat
mov
nop
xor
sub
leave
lret
xor
movsl
dec
and
decl
rcll
sahf
push
push
jecxz
jo
test
push
loope
inc
jo
sub
cmp
mov
cmpsb
mov
fdivrl
hlt
sub
ss
rolb
xor
nop
add
add
outsb
fists
push
enter
sarb
fs
jg
outsb
test
push
xor
fmull
mov
sarb
test
jno
sub
sbb
cld
mov
test
cmc
dec
test
cwtl
shl
push
fstpl
sub
les
ss
inc
pop
movsb
pop
xor
inc
xor
mov
cmp
sarl
subb
clc
in
mov
loop
jge
test
jmp
push
sti
lods
rclb
inc
mov
cmp
pop
sbb
push
jge
shrl
adc
inc
sub
lcall
xor
test
ret
es
lea
pop
inc
pop
aam
dec
or
movb
ja
pop
dec
sub
cld
testb
sbb
mov
jg
mov
mov
add
cli
push
mov
imul
sbb
mov
adc
mov
pop
int3
jl
sbb
inc
lods
mov
in
ja
sahf
mov
push
pop
add
mov
push
push
jge
mov
lock
in
mov
ja
clc
popf
movsb
aam
and
jae
fstl
cltd
pusha
call
pop
ljmp
ret
imul
push
repz
inc
and
dec
in
ljmp
push
adc
pusha
sahf
sbb
jae
mov
mov
cmp
and
sbb
inc
loopne
push
test
fisubrl
fiadds
mov
ficoms
adc
pusha
or
adc
lret
lcall
dec
sbb
lds
cs
adc
add
fs
rclb
bound
xchg
push
push
popa
arpl
outsb
out
mov
pop
rcrl
iret
pop
add
and
add
mov
je
xor
push
mov
add
mov
dec
repnz
fs
pop
cld
inc
add
mov
mov
iret
sub
xor
and
lock
das
xchg
mov
mov
cmp
out
call
mov
nopl
leave
jl
push
cmp
popa
add
mov
add
fidivs
sub
dec
popf
sbb
cmp
lcall
test
add
bound
jmp
push
iret
mov
cmp
xchg
push
scas
jnp
xor
test
jns
adc
lock
cmc
mov
mov
sbb
scas
pop
fimuls
add
pop
in
xchg
stos
lea
mov
mov
sbb
and
mov
add
sbb
lret
lcall
jg
or
mov
jmp
scas
dec
imul
push
push
xlat
push
ss
dec
dec
jne
sub
js
clc
out
ja
cmpsl
cld
inc
scas
add
mov
or
inc
insb
mov
push
aaa
pop
sub
jp
mov
xchg
or
ficoms
inc
lods
push
jo
in
mov
arpl
and
outsb
push
cmpsb
push
mov
dec
ds
inc
cmp
int3
stc
dec
push
mov
fwait
pop
repnz
jo
inc
jg
lcall
insb
xor
shlb
movsl
lods
cmp
fsubr
das
icebp
mov
addb
or
add
shll
mov
dec
mov
mov
fmul
push
xchg
push
mov
jo
xor
add
pop
mov
test
hlt
decl
mov
push
or
aaa
sub
arpl
mov
inc
jg
sahf
je
mov
shll
cs
lret
movsb
mov
and
sbb
or
dec
dec
clc
bound
test
jl
add
cs
cmpb
and
mov
jl
int
inc
jbe
mov
ljmp
adc
add
insl
lcall
shrl
dec
dec
shrl
push
nop
data16
add
imul
addl
enter
cli
lods
mov
insb
jp
cwtl
testb
and
pushf
aam
pop
popa
into
mov
or
and
popa
or
jne
clc
addb
xchg
mov
sbb
js
push
cmp
pop
inc
clc
andb
jo
jbe
push
in
mov
sbb
cmpl
imul
cmp
icebp
add
mov
and
js
std
fwait
lock
ja
cmpsl
imul
data16
je
lock
add
mov
xchg
jno
mov
mov
inc
ret
icebp
fwait
repnz
scas
mov
cli
jg
hlt
lods
cmpsb
movsb
dec
mov
cltd
mov
sbb
adc
push
adc
adc
jp
inc
test
sub
dec
add
addl
push
lods
jecxz
lock
and
sti
imul
cmp
js
hlt
fnstenv
or
fldenv
call
and
ljmp
pop
ret
outsl
nop
push
popa
imul
incl
test
sub
fiadds
aaa
cmp
xor
mov
js
fld
jp
sub
dec
inc
andb
push
inc
add
fsubl
jne
mov
ror
cli
cs
mov
fcmovnu
add
test
faddl
pop
jge
scas
push
aaa
xor
fildl
push
mov
pop
dec
rcrl
shll
push
mov
jo
sbb
sbbb
jae
pushf
push
adc
lock
inc
push
and
xchg
roll
scas
add
add
mov
test
mov
push
lods
cli
int3
ffree
jbe
push
add
scas
jg
and
or
mov
mov
ss
jg
dec
and
jl
arpl
sbb
add
add
pop
clc
mov
mov
or
xor
lcall
cld
lds
mov
cltd
xchg
or
adc
adc
dec
adc
adc
rcrb
adc
sub
ljmp
fidivrl
add
sub
add
adc
lock
add
mov
mov
cmp
dec
stc
mov
and
mov
push
bound
hlt
into
rol
cmpl
adc
or
mov
sahf
and
mov
call
in
pop
or
xorl
inc
push
loopne
add
mov
pop
sbb
fcoms
pop
movsb
xchg
ret
and
or
fisubs
and
rol
loopne
xor
das
xchg
add
loope
out
inc
pushf
sbb
jno
mov
inc
jge
push
insl
mov
lcall
ret
cmp
loope
and
adc
adc
inc
mov
push
dec
lods
cwtl
mov
fisubs
mov
dec
xchg
xchg
fs
push
sub
or
sub
dec
xor
sub
sti
scas
pop
adc
xor
addr16
imul
adcb
ss
enter
sbb
leave
sub
out
add
ja
mov
adc
call
pop
mov
into
pop
adc
mov
jbe
jmp
xchg
cld
aaa
sbb
push
mov
cli
fcoml
pushl
xchg
xor
scas
insb
pusha
fldl
inc
sbb
pop
sarb
and
or
push
cmp
scas
fwait
pusha
add
pop
adc
data16
enter
inc
dec
loop
adc
stos
mov
fists
in
stos
adc
pop
xlat
mov
sub
mov
add
mov
nop
in
sarb
popa
cmc
mov
shlb
inc
mov
or
nop
icebp
mov
xchg
xchg
push
fsubrs
sub
push
sbb
sbbb
jnp
ds
data16
cmpl
or
sbb
pusha
adc
shrl
xor
ljmp
movsb
stos
mov
jge
arpl
andb
ret
js
xchg
inc
push
and
jp
adc
das
add
orb
cmp
mov
and
ss
xchg
test
mov
incb
js
push
pop
pusha
dec
fdivrs
into
add
ret
adc
jge
push
xor
lcall
lcall
adc
mov
in
insl
cmp
filds
addl
rcrl
mov
add
sbb
pusha
cmpb
xchg
je
pop
pop
ret
fdivrs
fwait
and
mov
xchg
mov
sub
loopne
int
jmp
jecxz
or
inc
rorl
xchg
push
mov
add
and
pop
xchg
mov
jmp
or
jo
push
ret
mov
aaa
mov
insb
fucom
jmp
mov
into
das
pop
loopne
lcall
pop
xor
xor
dec
lods
cmp
mov
or
dec
daa
call
insb
pop
mov
fwait
and
pop
pop
scas
add
and
pop
push
fwait
add
js
sbb
inc
ja
clc
mov
mov
das
jge
pusha
dec
jno
jmp
add
icebp
xor
jl
lods
test
pop
aam
add
les
or
push
mov
or
rcrb
pop
dec
sbb
nop
mov
stos
mov
mov
dec
sbb
test
stos
cmp
add
inc
loope
sbb
lret
fsubrp
je
cli
aam
xchg
into
dec
in
cltd
add
push
aad
insl
jb
xchg
clc
test
mov
inc
or
in
add
mov
js
cmpsb
dec
outsl
inc
repnz
and
cs
jmp
movsb
xchg
jle
mov
xchg
minps
cmp
idiv
loopne
cmpsl
dec
stos
dec
int3
out
and
lods
out
push
push
jne
ficompl
mov
jae
aad
sbb
iret
test
pop
fucomip
xor
nop
push
sarl
mov
loopne
pop
adc
push
and
fisubl
mov
ror
jo
clc
in
sbb
lds
shrb
sbb
lea
lds
sti
adc
push
sbb
push
lds
js
ss
inc
xor
imulb
fdivl
or
sbb
dec
add
inc
cmp
incl
int3
jo
test
jp
mov
ss
fisttps
cmp
xor
xor
mov
out
mov
add
shll
repnz
fstl
inc
push
sub
repnz
mov
lock
fmull
in
pop
jmp
insb
xchg
mov
and
dec
orl
add
shrl
stos
mov
adc
pusha
inc
or
mov
orl
push
cmp
ljmp
aas
mov
cmp
fwait
ljmp
sar
cwtl
xor
enter
add
mov
mov
inc
loopne
fsub
out
mov
mov
push
fdivr
sbb
or
std
les
mov
pushl
cld
fmuls
in
or
dec
pop
mov
fmuls
xchg
push
subb
jnp
std
imul
cmp
lret
xchg
rcl
add
xor
mov
rorb
xor
dec
xor
stc
iret
insb
aas
sub
cmp
xor
jecxz
cmp
js
out
jo
push
xchg
sbb
lcall
xchg
pusha
xchg
stos
push
mov
in
mov
pusha
insb
hlt
lcall
ficomps
jge
lea
repz
call
pop
or
cmp
adc
add
bound
inc
stos
clc
rcr
pop
cmpsb
xor
xor
pushl
js
movsl
inc
sbb
push
mov
or
or
test
imul
push
loopne
mov
and
cmp
arpl
into
popa
fsubs
or
jg
pop
aad
cld
mov
fiaddl
imul
sti
pop
cld
push
mov
leave
push
or
movsb
pop
xor
mov
sarb
push
dec
fcoml
and
mov
xor
push
or
inc
mov
mov
popf
cmpsb
call
add
pop
sbb
add
fcomps
aam
sbb
pop
mov
mov
mov
and
mov
add
jno
icebp
mov
xchg
outsb
dec
cmp
fisubrs
std
sbb
scas
stos
push
into
or
ss
cltd
call
xor
mov
fidivl
add
add
js
imul
iret
jge
or
sbb
cmpl
imul
add
clc
ja
loope
daa
pop
repnz
pushf
push
mov
and
imul
jo
sarb
pushf
mov
imul
jp
mov
inc
dec
adc
xchg
fnstcw
jp
movsl
jg
jmp
ljmp
sub
popa
add
pushl
std
scas
push
stc
mov
mov
push
cld
leave
mov
push
mov
popf
mov
add
shrl
adcb
into
adc
movsl
mov
sbb
xor
xor
outsb
xchg
mov
add
xlat
leave
jnp
adc
push
pop
aam
fwait
pop
mov
inc
and
dec
sub
scas
sbb
jle
add
fcom
aas
adc
pop
fwait
ret
js
enter
inc
aam
cs
pop
mov
or
sbb
ss
add
cmp
ja
mov
es
pop
lds
mov
xor
test
std
mov
inc
mov
test
pusha
in
pop
pop
fcmovnu
push
pop
push
push
std
dec
decl
cmc
es
movsl
cwtl
inc
or
mov
out
lret
aad
dec
or
ds
insl
outsb
push
mov
incb
or
loope
and
pop
pop
jns
repnz
jo
inc
add
mov
inc
je
xor
cs
xor
popf
adc
dec
adc
ds
jbe
mov
push
mov
jmp
rcrb
adcb
push
xor
pop
adc
sbb
mov
ss
mov
xor
gs
inc
mov
lods
fcom
pop
idiv
lea
and
pop
pusha
mov
or
int
fstp
daa
sar
sbbb
enter
sub
cs
stos
push
inc
inc
inc
rcrl
sbb
push
xchg
ss
pop
add
push
in
push
sub
insl
sbb
cmp
mov
add
and
xor
mov
je
push
ret
in
mov
or
rcll
addr16
push
add
cltd
xorl
and
lods
mov
mov
cmp
call
loopne
adc
jne
dec
ljmp
neg
sahf
xor
sbb
pop
pop
mov
scas
clc
pop
fcoms
push
scas
jnp
lock
add
nop
mov
jns
pop
inc
add
fcmovu
adc
cmpsb
cmovs
jo
hlt
inc
inc
mulb
clc
clc
push
and
mov
rcll
clc
push
dec
or
and
cmp
or
mov
ss
fidivl
pop
aaa
mov
insb
jg
pop
and
adc
scas
lds
cld
pop
mov
push
push
sbb
icebp
sbb
sbb
sarb
inc
stos
loop
sub
or
pop
in
sbbb
aad
stos
push
pop
in
stc
push
and
out
adc
or
imul
mov
adc
adc
xor
cmp
dec
fisubs
push
aaa
outsb
jp
iret
inc
dec
call
and
bound
fwait
outsb
lret
rcll
pusha
lea
test
insb
cmpsb
fistl
xchg
hlt
mov
js,pn
sub
add
hlt
gs
push
out
icebp
xchg
pop
adc
jbe
xchg
iret
adc
xor
mov
add
cmp
cli
lret
cmpsl
or
inc
jb
daa
sysenter
jg
icebp
aaa
ds
loop
adc
or
out
pop
dec
clc
xchg
hlt
insl
pusha
loopne
popa
jge
add
decl
xor
mov
insb
xchg
or
sbb
idivl
add
clc
aaa
cld
push
mov
lcall
lcall
lods
test
dec
xor
shlb
pop
pop
icebp
add
mov
cltd
xchg
mov
clc
cs
add
je
adc
fs
gs
add
mov
mov
mov
jmp
mov
adcb
inc
imul
loop
addl
out
fsubp
push
ja
repnz
dec
mov
jl
add
pop
push
fstps
mov
ret
adc
lea
and
cli
sti
in
mov
sbb
inc
test
sub
addl
sbb
mov
orl
dec
push
and
cwtl
jno
ds
loop
jb
dec
ss
rcl
and
stos
dec
dec
pusha
pop
jb
push
mov
lods
loopne
adc
add
mov
loope
outsb
sub
pop
adc
push
and
mov
jg
mov
and
xor
fwait
lock
cmp
incl
cld
push
sub
test
or
mov
adc
fstpl
inc
adc
cli
lahf
movsl
das
dec
call
jp
movsb
fbld
adc
into
push
xchg
pop
aad
ret
sub
mov
pop
cmp
add
mov
cld
and
cmc
popa
fsub
cmpsl
or
and
and
jo
sbb
or
in
push
pop
daa
xchg
insb
jns
lahf
vandnps
and
sub
or
pop
imul
test
out
pop
insb
sti
inc
pop
push
push
cmc
mov
sahf
jo
bound
dec
push
scas
mov
jl
repnz
xor
pusha
pop
jg
or
rolb
ror
xchg
xor
fisubrs
add
orb
movsl
pop
mov
lret
cmpsl
cmpsb
cmp
aaa
sub
xchg
nop
mov
push
push
movsl
mov
cs
cld
or
xor
les
cmpb
sbb
mov
addl
int
or
shr
pushf
mov
mov
in
fcomps
mov
aad
adc
mov
mov
fisubrl
bndldx
subb
sbb
inc
xchg
in
or
add
sub
add
pop
test
push
jnp
sbb
mov
hlt
add
add
xchg
jle
dec
std
ljmp
cmp
movsb
add
sbb
add
push
call
mov
xor
mov
add
adc
push
test
xor
mov
sar
subl
sti
cwtl
leave
pop
xor
cmpsb
jno
dec
out
push
adc
mov
ds
mov
fwait
shr
mov
sub
shr
pop
je
ljmp
fstpt
mov
aam
into
push
ljmp
lret
cli
scas
fwait
add
jle
cmpl
pusha
out
roll
jne
sub
pop
ja
out
ret
add
imul
jmp
faddl
mov
in
insb
cmp
and
fnsave
cmp
jmp
pop
inc
movsl
or
jbe
adc
insl
add
and
outsb
xchg
jmp
daa
xlat
xchg
push
stos
cmp
dec
jle
add
and
xchg
scas
inc
add
call
jg
in
sub
push
sti
fildl
mov
sub
mov
lcall
push
sbb
sbb
mov
mov
sti
stos
pop
add
push
sub
cwtl
test
or
cltd
push
pop
int
mov
or
add
leave
sbb
cmp
mov
in
rol
mov
data16
or
push
int
es
mov
mov
pop
mov
xor
clc
push
fidivrs
clc
into
jo
adc
push
inc
jl
sub
fbstp
loop
inc
cmp
cwtl
dec
shll
and
icebp
mov
es
loopne
lret
inc
hlt
mov
or
subb
loope
pushl
push
aam
adc
push
ficomps
or
les
hlt
test
leave
cmp
xor
lret
cld
pop
mov
add
fs
xchg
inc
lods
xchg
pop
mov
loopne
sbb
cs
ret
lds
dec
lea
push
jge
rorl
loopne
xchg
mov
movsl
movsl
popf
cwtl
jbe
add
cmp
test
mov
mov
aaa
lcall
mov
aas
lea
lods
xchg
sub
pop
in
sub
push
das
xchg
sbb
xchg
ljmp
std
das
mov
mov
incb
push
xchg
mov
inc
mov
cs
faddl
scas
clc
mov
bound
jg
fdiv
adc
cmp
mov
dec
scas
push
push
mov
pop
xchg
push
jmp
int3
subl
enter
outsb
push
cwtl
jb
jmp
clc
jl
scas
cli
fwait
ss
jo
popa
mov
int3
pop
mov
sbb
sub
mov
add
shlb
or
dec
gs
lcall
add
and
inc
test
push
mov
pushf
sbb
test
insb
push
jne
repz
cmp
imul
inc
pop
dec
scas
rol
jmp
inc
dec
ret
test
sahf
push
sbb
and
push
es
loope
lcall
ljmp
movsb
pop
std
into
cmc
lcall
xor
sub
push
rclb
cs
add
rorl
xor
mov
loopne
mov
push
push
test
lahf
sbb
jp
andl
push
into
dec
andps
push
mov
shl
shl
xorb
push
cmp
and
mov
jp
daa
ret
repnz
adc
mov
mov
test
mov
scas
mov
sub
call
scas
ror
fbld
icebp
outsl
js
sbb
fcomip
aad
cli
push
ljmp
mov
sub
aaa
mov
nop
mov
jp
sub
rcrb
scas
out
repnz
test
sbb
ret
ret
dec
cli
pusha
js
hlt
test
mov
dec
xchg
mov
adc
mov
and
lds
mov
push
dec
in
mov
pop
mov
fimuls
lahf
loop
std
lcall
pop
rolb
scas
mov
out
aad
xor
pusha
xlat
or
ljmp
cwtl
cli
jg
lret
les
je
sar
stos
ja
iret
les
jecxz
mov
sahf
or
inc
xor
insl
xchg
fildl
stos
or
or
sarb
jno
call
push
gs
stos
inc
fwait
orb
mov
jle
mov
fcomps
into
mov
dec
rcr
xor
sti
insl
hlt
lods
out
faddl
jge
jl
loope
ss
or
aaa
mov
data16
frstor
decb
jns
popf
add
roll
mov
xor
stos
xchg
mov
or
mov
xlat
stos
dec
jae
pop
ss
mov
sbb
stos
loopne
sarb
mov
jnp
push
push
repnz
inc
dec
dec
jb
mov
add
fbstp
sbb
jne
pop
outsl
shrl
cmp
adc
sub
sub
xor
cltd
mov
mov
xchg
stos
enter
jp
test
xor
sub
decl
addb
push
sbb
cld
xchg
fmull
mov
jae
ja
adc
adc
adc
cmp
pop
mov
loope
or
add
jl
dec
lock
mov
sbb
dec
mov
mov
push
out
ljmp
adc
js
dec
fnstenv
adc
rolb
sub
pushf
push
ret
outsb
and
push
jbe
imul
jno
xlat
or
push
pop
dec
int3
call
sbb
adc
mov
jl
adc
push
mov
adc
xor
xor
ss
js
mov
je
sub
mov
sbb
in
add
inc
add
pushl
std
in
mov
push
loop
and
push
daa
xchg
xchg
jl
adc
jo
rorb
data16
and
not
jle
dec
push
test
jg
in
into
adc
cld
andb
cmp
mov
test
leave
push
and
mov
call
add
sbb
daa
push
fildl
das
pop
addl
sar
test
lcall
js
hlt
flds
fisttps
out
xchg
aas
cmp
pop
xchg
push
lahf
jae
pinsrw
sbb
cmp
cltd
push
xchg
fxtract
dec
push
frstor
outsl
push
fwait
pusha
lea
sbb
loop
scas
pop
jge
xchg
scas
test
testb
or
xchg
in
imul
cltd
adc
sbb
ficomps
aas
cvtdq2ps
push
les
js
test
sahf
repnz
dec
add
mov
xor
pop
and
daa
push
stc
int3
mov
cmp
stos
dec
and
xor
pop
pushf
in
fsubrs
push
mov
adcl
lahf
testb
xlat
int
mov
fwait
and
mov
push
xorb
push
cmpl
loopne
sbb
sub
pop
fcompl
call
test
andb
sbb
xlat
cmpl
in
jno
inc
cmc
ja
das
clc
nop
adc
add
xchg
mov
lock
push
dec
pushl
sub
xchg
and
xchg
test
popa
cmp
adc
fwait
data16
cmp
and
sub
mov
lahf
add
aad
mov
mov
push
mov
or
adc
xchg
jecxz
mov
cmpsl
and
push
ljmp
push
jle
rclb
cld
xor
arpl
mov
mov
cmpsb
adc
push
fnsave
jae
inc
loopne
push
lock
mov
mov
subb
decl
pop
sti
adcl
addr16
int3
cmc
mov
add
jge
pushfw
jb
xchg
add
adc
sarb
xchg
cmp
dec
popl
movsb
outsl
je
push
pop
ljmp
jo
or
negb
mov
jo
add
fisttps
icebp
pop
sbb
push
cmp
xchg
push
movl
xchg
bound
mov
rorb
dec
pop
out
cli
mov
cmc
sbb
inc
ljmp
mov
lods
mov
push
mov
into
add
inc
sbb
mov
fwait
out
add
pop
fcmovnu
test
push
test
jl
push
in
mov
lock
xor
mov
sub
out
sbb
inc
push
mov
mov
and
sub
loopne
xchg
loopne
lea
mov
mov
decl
mov
je
xor
out
mov
mov
dec
out
pop
lock
pop
lds
repnz
lret
push
cld
jg
icebp
and
sub
add
rorb
xor
mov
adc
mov
das
xchg
lods
inc
jg
orb
cmp
add
jg
jae
mov
repz
xor
dec
outsl
mov
adc
inc
add
jge
cltd
scas
incl
push
gs
iret
mov
int3
out
mov
cmp
or
xorb
mov
icebp
sbb
pop
mov
mov
js
test
sub
idivb
outsb
rclb
aaa
les
sti
dec
sub
loopne
push
in
pop
out
ljmp
pop
ret
push
or
add
sbb
decl
mov
ret
and
loop
push
icebp
or
lahf
cmpsl
js
push
add
adc
add
test
inc
jb
loopne
in
mov
mov
movsb
int
test
in
ja
imul
pop
push
insb
ljmp
jg
ss
mov
push
inc
jl
sub
jns
dec
or
popf
adc
rclb
xchg
orl
das
cli
and
jns
push
and
sbb
fstpt
adc
ffree
pop
mov
cmpsb
orb
orb
adc
inc
ljmp
aaa
sbb
fmuls
inc
loop
rclb
pushf
sti
mov
xchg
es
arpl
jbe
inc
jg
jbe
imul
lcall
lcall
or
pop
mov
push
adc
shlb
dec
xchg
adc
xchg
movsb
push
inc
lahf
mov
insb
cli
sub
mov
dec
cmp
in
and
ljmp
mov
push
sbb
in
ret
incl
adc
andl
jmp
and
mov
sbb
xor
roll
push
mov
test
push
outsl
jne
roll
mov
lock
push
jge
jp
add
sbb
add
add
out
rcrb
les
rcl
and
push
fmull
and
rol
mov
add
cmp
je
adc
add
insl
adc
arpl
inc
dec
jnp
mov
lret
and
idiv
daa
and
popa
out
add
jg
orb
mov
cmpsb
les
mov
pop
shll
pusha
lock
add
or
add
xchg
inc
pushf
sub
mov
movsl
xchg
daa
jecxz
icebp
mov
mov
ljmp
push
icebp
mov
mov
ljmp
dec
lret
mov
jb
rcrl
adc
fimuls
and
mov
mov
pop
scas
mov
jg
dec
pop
xor
and
add
jo
pop
inc
add
mov
push
fidivrl
lock
aaa
inc
shlb
and
mov
stc
jb
and
add
fistpll
xchg
rolb
push
outsl
fnsave
jge
xchg
jecxz
dec
je
jnp
mov
xor
cmp
andl
mulb
mov
inc
xchg
inc
popf
cwtl
push
xchg
mov
int
test
push
xor
dec
outsl
ret
movsl
jge
dec
test
add
data16
xchg
fldl
push
ficomps
out
add
decl
pop
in
push
mov
adc
or
jle
ds
dec
in
mov
das
into
or
mov
mov
dec
insl
sub
inc
in
adc
jmp
jp
cmp
pop
inc
shlb
data16
fbstp
mov
add
sti
pop
or
push
shl
sub
cmp
loopne
test
push
cmc
popa
dec
adc
pop
sbb
incl
mov
xor
inc
iret
sti
add
ret
or
sahf
scas
add
sbb
dec
mov
imul
mov
ss
pop
mov
push
iret
rolb
xor
cmp
sbb
push
lret
mov
dec
insl
mov
mov
xchg
sbb
mov
popf
stos
mov
dec
mov
adc
add
add
jecxz
xor
xchg
xor
push
into
xchg
cs
pushf
popf
push
jg
add
pop
mov
cmp
xchg
ret
dec
mov
scas
pop
add
loopne
into
xor
int
loop
loope
adc
sub
stos
loopne
filds
push
add
jb
lahf
add
adc
xchg
jl
aaa
pop
xor
mov
inc
shrb
add
out
add
shrb
scas
test
sub
clc
pop
inc
int3
inc
fdivrl
mov
add
enter
lock
sar
cmp
adc
adc
je
loope
push
icebp
negb
std
sbb
add
sub
lods
in
push
jl
int
mov
and
mov
add
xor
scas
call
popa
push
mov
sub
lock
jo
inc
or
enter
out
jo
imul
fnstsw
test
data16
push
rorb
mov
add
test
cmp
stos
or
push
aaa
leave
in
call
je
cmp
xlat
lahf
sahf
or
adc
jg
xchg
aad
enter
out
inc
cli
fs
push
xchg
leave
les
jge
into
js
incl
mov
leave
sbb
add
dec
mov
fidivs
push
sub
sub
fistl
mov
pop
mov
or
pushf
and
pop
aam
jne
add
out
cmp
in
mov
add
addl
mov
cwtl
out
xchg
mov
adcb
insl
testb
xchg
inc
xchg
icebp
push
sub
cmp
dec
pop
decl
fwait
add
cmp
jbe
ret
mov
mov
cs
into
idivl
add
mov
xor
movsb
adc
dec
jge
lea
xor
stos
push
js
dec
pop
jbe
jns
cmp
add
decl
stos
xchg
push
jmp
push
xor
pop
jbe
es
jecxz
cmp
xchg
push
dec
clc
mov
repz
cli
bound
cs
data16
add
jg
xchg
adc
mov
push
roll
adcl
fsubrs
cmpb
pop
ss
push
ficompl
adc
test
mov
cmc
mov
cli
dec
movsb
mov
sub
or
pusha
pop
mov
or
xor
addl
cmpb
rorb
add
add
les
dec
push
mov
mov
jecxz
push
aaa
adc
sbb
ret
cld
popa
sbb
or
sbbb
or
iret
clc
sar
mov
jbe
fbstp
mov
aaa
bound
test
lds
fbstp
dec
inc
outsl
lods
test
shl
addl
and
adc
xadd
int3
test
fs
pop
or
jle
pop
mov
in
mov
adc
add
popa
jle
in
mov
nop
outsl
mov
push
mov
and
xor
ret
int
incl
cmp
inc
mov
cli
jg
in
fsubr
xlat
pusha
shll
cmp
sub
outsl
imul
clc
inc
jp
mov
cwtl
adc
inc
jmp
addl
and
add
jecxz
in
lods
inc
inc
stc
or
mov
imulb
sub
add
add
iret
add
cld
fidivrs
push
stos
mov
mov
pop
mov
scas
js
outsl
call
arpl
in
add
cli
add
shrl
and
jp
dec
or
lcall
lds
push
lock
fisttpll
orb
sub
or
push
add
push
push
sub
btr
test
mov
int3
xor
stos
das
daa
adc
repz
test
fbld
add
sbb
scas
pop
fidivs
fiadds
loopne
mov
std
or
test
push
in
mov
and
xor
jp
addb
lock
and
add
xlat
fsubs
popa
mov
and
ds
adc
or
fcmovnu
xorb
test
sub
lea
sbb
popa
aad
aad
cs
lret
jno
cld
sbb
daa
or
lcall
aam
ljmp
sbb
sub
leave
and
aas
lods
addb
je
push
mov
insb
insb
xchg
pushf
imul
and
fdivp
cmp
adc
and
xchg
inc
jno
ret
lahf
mov
fldl
in
ret
push
fldcw
out
xor
mov
or
push
xor
dec
das
add
mov
cmp
add
repnz
push
movsl
xor
cld
mov
pop
adc
push
or
sbb
push
out
xchg
je
out
sub
cmpsl
lods
repnz
sbb
in
fsubrs
lret
sub
lock
or
out
mov
add
pop
loopne
bound
shl
adc
mov
add
ljmp
lea
ljmp
mov
push
xor
stos
movsb
jo
mov
or
ret
int
add
xor
add
fstpl
mov
out
mov
mov
mov
lock
out
jbe
dec
mov
cmpsl
stc
scas
ds
push
andl
push
cmp
ret
add
mov
sbb
xchg
add
iret
xor
outsb
sub
sbb
inc
xchg
xchg
mov
jecxz
fwait
lods
push
push
in
bound
cmpsb
xchg
negb
test
inc
mov
scas
cmc
add
daa
push
scas
cmp
sbb
loop
lret
shll
adc
addb
or
push
cmpsb
xor
call
jle
mov
dec
add
int3
xor
ret
pop
mov
push
movsb
loopne
jl
incl
dec
in
popa
mov
add
or
add
std
das
add
add
cmp
or
inc
shl
push
loopne
call
cmp
sub
popa
dec
cltd
ljmp
fcmovb
out
lret
inc
sub
fbstp
loope
sbbl
dec
fadds
sahf
aam
and
shr
std
enter
loop
dec
cmp
sbbb
push
decl
pop
dec
sub
pushf
or
hlt
popf
lock
hlt
mov
jae
cmp
decl
xchg
js
and
push
movsl
aad
mov
adc
ljmp
mov
jbe
dec
ja
loopne
mov
sub
ffree
ret
cmp
or
fcomps
adc
outsb
or
cmp
addl
pop
xlat
add
out
dec
push
sahf
cld
push
pop
xchg
fs
mov
cmp
push
dec
aaa
dec
orb
mov
dec
adc
ficoml
lret
std
xor
push
jecxz
xchg
outsb
popa
push
pop
lock
sbb
inc
push
pushf
je
data16
xchg
mov
out
dec
pop
insb
cld
incl
int3
jl
imul
nop
cwtl
pop
sti
mov
adc
push
nop
dec
cmp
pop
xchg
in
pushl
mov
test
cmp
jp
ficoms
mov
sub
hlt
in
xlat
fstpt
or
clc
mov
sub
lcall
jno
cmc
pop
adc
add
lcall
cmpsb
inc
pusha
inc
out
ljmp
add
mov
sahf
add
pop
or
cli
sbb
aas
outsl
mul
sub
pop
sub
sub
aas
or
int
mov
mov
jmp
mov
ja
add
pop
or
lock
mov
push
pop
fld
jle
mov
insb
sub
aaa
dec
ljmp
mov
enter
mov
rol
push
mov
add
pop
hlt
fwait
cmc
adc
and
or
add
mov
repnz
mov
sbb
clc
push
jo
or
sub
dec
sbbb
dec
jge
mov
push
xor
add
or
pop
mov
je
or
mov
in
add
pop
addr16
bound
mov
lcall
add
jmp
fidivrs
or
imul
clc
movl
aas
daa
dec
lahf
or
imul
clc
pop
imul
fisubrl
cld
jp
jmp
ds
imul
imul
ljmp
insl
out
xor
or
out
jecxz
cld
outsl
adc
mov
ljmp
dec
or
mov
pop
daa
aaa
xorl
mov
pop
in
push
sub
dec
scas
mov
sbb
adc
pop
imul
or
sub
sahf
mov
adc
repz
mov
loope
mov
fstps
xlat
mov
pop
xchg
push
nop
roll
mov
mov
repz
jecxz
test
aad
adc
clc
fdivl
and
push
jl
sbb
idivb
push
sbb
pop
pop
inc
mov
lock
sub
mov
scas
xchg
call
jge
dec
sub
xor
jg
mov
xchg
add
push
rcrb
mov
rcrl
sub
push
cltd
jbe
lea
movsb
jae
or
cmp
subl
sbb
add
insb
fdivrs
dec
ljmp
cld
adc
and
aas
fcmovu
fadds
scas
xor
cmp
mov
ja
push
scas
mov
push
inc
dec
pop
dec
sub
loopne
push
add
push
mov
out
cmp
scas
dec
mov
and
cmp
addl
xchg
outsl
clc
stos
add
sarb
jmp
push
les
loopne
sub
outsl
ffreep
push
in
call
fidivl
xor
shlb
loopne
pop
push
sub
jo
jp
pop
je
jmp
add
lods
cmp
cmpsl
jne
mov
sarl
hlt
inc
sar
sahf
xor
stc
jae
es
jns
xchg
adc
add
sti
cmp
cld
or
xor
inc
xor
push
sbb
testl
inc
int
das
inc
cmp
cmp
mov
and
dec
pop
push
dec
loopne
push
sub
dec
jge
call
push
xchg
repz
ficoms
dec
lcall
cmp
push
sub
and
aaa
loopne
sub
iret
es
or
cmpb
out
shll
mov
and
dec
mov
or
inc
stos
sbbb
sbb
out
add
jnp
std
jmp
cs
pop
sbb
outsb
cmpsb
ja
mov
mov
add
in
ret
imul
cmpsb
push
rclb
jne
mov
xor
fmul
add
sahf
sub
outsb
ljmp
xchg
fcmovb
fldt
mov
cmc
dec
ficompl
cld
lret
push
push
mov
int3
stos
pop
lea
fcmovb
jo
test
outsl
add
loopne
adc
jns
pushf
testb
mov
shrl
sub
dec
pusha
add
push
out
inc
imul
jg
div
loopne
jge
cmp
inc
rorl
jecxz
pop
xor
in
fwait
test
and
data16
test
and
and
fcompl
cmc
and
pop
mov
cmp
jmp
sub
ja
dec
icebp
push
mov
in
aad
repnz
push
test
push
jbe
sub
sub
mov
adc
out
mov
sub
insl
fwait
repz
jg
ja
add
push
sti
jae
fnstenv
in
jb
pop
testb
popl
mov
cmp
mov
sbb
enter
imul
dec
inc
negb
pop
rol
mov
lock
xor
les
subl
loop
xchg
icebp
rclb
adc
add
outsl
sub
movsb
outsb
push
and
sti
cmp
sbb
lcall
jg
dec
sahf
add
or
sbb
add
cmp
mov
inc
out
mov
rclb
lret
clc
jmp
popa
mov
add
adc
mov
je
jge
negb
mov
movsb
push
fcmovne
or
xlat
sbb
xorl
outsb
and
pushl
fadds
mov
pusha
scas
pushf
into
inc
lds
dec
cli
xchg
push
bound
sbb
cmp
mov
dec
movsl
pop
addr16
push
push
out
je
movsl
mov
dec
xor
and
dec
in
and
lock
jp
or
lock
mov
fmulp
mov
sti
sub
addr16
iret
mov
cli
cwtl
out
and
and
dec
pusha
dec
hlt
cmp
stos
lcall
and
aaa
add
shld
push
cmp
dec
jmp
push
sbb
cwtl
scas
mov
fmul
push
mov
xchg
mov
push
sbb
loope
jg
ljmp
mov
sub
fnsave
adc
dec
clc
dec
sar
or
xor
adcl
mov
ffreep
mov
pop
sbb
pop
insl
mov
add
mov
push
inc
dec
xor
rcr
and
lret
adc
push
fnstcw
pop
jo
inc
xchg
in
xor
decl
daa
push
mov
jmp
inc
in
roll
fsubrl
shrb
dec
jle
pop
sub
add
jle
decl
sbb
xchg
xor
cld
add
subl
pusha
or
mov
dec
test
pop
out
inc
loope
push
fucomp
nop
loopne
insb
push
loopne
xor
mov
pushl
cmpsb
test
out
repz
add
inc
or
push
ja
rol
jle
fsubrs
mov
sarl
push
inc
xor
fucom
xchg
sub
pop
xor
in
out
mov
inc
pop
dec
add
jb
add
shl
pop
mov
jo
fwait
movsb
testb
mov
pop
xor
sbb
mov
clc
es
lods
mov
lret
sub
adc
enter
mov
mov
mov
test
cmp
jbe
mov
lods
ja
pop
adc
outsb
or
in
push
cmp
xchg
jle
push
enter
lods
sbb
add
ss
out
cli
lcall
addr16
call
test
or
mov
jg
ret
cwtl
push
jp
or
mov
test
adc
movsl
inc
addr16
call
clc
clc
jb,pn
fwait
mov
and
lahf
movsb
adc
lock
add
mov
mov
movsb
clc
sbb
stos
add
cmp
mov
loop
adc
pop
mov
pop
or
xor
cmp
adc
clc
insl
add
sbb
orb
push
pop
clc
mov
push
int3
mov
xchg
add
pushl
rcrl
jbe
jg
into
push
dec
pop
cmp
sub
sub
in
inc
jg
pop
sub
mov
adc
jb
push
push
or
lahf
cmc
sub
js
mov
mov
xor
pop
cmp
pop
jmp
mov
lret
push
add
or
mov
push
imul
cs
push
test
xchg
lods
add
mov
in
fldl
mov
out
xchg
gs
pop
adc
inc
mov
cmpsb
jo
and
cmp
dec
sbb
es
jp
jl
loop
adc
les
imul
and
pop
bound
inc
dec
sbb
ret
sbb
add
loop
clc
ja
xor
ror
in
pusha
adc
jge
icebp
pushl
or
xlat
mov
xorl
cmp
inc
cli
inc
je
mov
xchg
inc
mov
xor
pop
mov
shr
vxorps
out
sub
clc
mov
into
mov
out
push
add
xor
pop
shrl
cmpl
add
add
inc
imul
shrl
cmp
enter
jbe
icebp
in
push
adc
xor
fbld
xor
mov
sbb
je
and
mov
cmpsl
mov
mov
ret
mov
add
es
inc
inc
jg
pop
je
jne
cwtl
ficompl
sti
push
shrl
out
sbb
sub
lods
in
int
and
bound
xchg
jge
cmp
pop
popa
loopne
or
lds
decl
rcrb
and
mov
not
pop
mov
xor
dec
or
add
or
and
and
mov
imul
cmp
scas
xor
xor
dec
pop
js
push
and
cmp
mov
xchg
shrl
sarl
inc
movsb
enter
iret
inc
inc
inc
cmpsb
fidivs
pop
loopne
les
xchg
cmp
xchg
icebp
inc
int3
dec
pop
mov
mov
inc
daa
add
movsl
push
pusha
ljmp
xchg
movsb
xor
xor
cmp
fistps
clc
cmc
pop
inc
push
xor
cmp
popa
pop
cmp
or
cli
and
jo
cmpsb
mov
mov
scas
out
add
push
jnp
pop
inc
cld
or
mov
mov
push
lea
xchg
jmp
into
cmp
ljmp
inc
sti
sbb
and
mov
imul
das
mov
aas
rol
dec
push
or
mov
mov
xchg
lods
jg
mov
shl
add
sahf
aam
add
lods
test
lcall
jno
or
testb
aaa
aam
pop
adc
js
jg
mov
mov
mov
sti
insb
sbb
pop
inc
ret
notb
cmp
pop
mov
xor
jo
stos
sbb
in
or
bound
and
xor
or
lret
cmc
mov
loopne
out
js
mov
and
addr16
movsl
fldl
stos
loopne
xor
stc
fidivs
xor
aaa
mov
inc
sbb
mov
mov
in
push
rcrl
js
fbld
mov
lock
fbstp
insb
and
jp
je
pop
mov
mov
pop
inc
add
div
test
sbb
pushl
ret
cwtl
or
sahf
in
js
loope
es
and
sbb
xor
movsl
mov
push
xchg
push
outsb
adc
aad
cli
in
or
addl
lahf
sub
fcomps
bound
push
cs
icebp
inc
pop
sbb
adc
mov
repnz
or
out
cmc
incb
push
pop
std
enter
icebp
rcr
fldt
jmp
add
add
push
mov
jp
and
scas
mov
cmpsb
dec
dec
lret
outsb
inc
or
mov
lahf
add
fwait
and
cmp
and
or
add
pop
lret
test
cmc
push
cmp
lret
add
sti
sub
xor
mov
or
cmp
or
xlat
divb
push
mov
cltd
or
clc
mov
rolb
lock
push
movsl
lods
idivb
mov
imul
imul
ljmp
ss
cmc
inc
outsb
aam
sub
mov
push
push
aas
or
sbb
test
ljmp
pop
cmp
add
sarb
cmpsb
mov
push
adc
negb
jbe
jno
dec
cld
hlt
clc
fnstcw
in
push
and
sahf
rcl
sub
call
dec
sbb
adcb
fidivrl
mov
dec
xchg
test
jno
jno
mov
cmp
cmpsl
aaa
inc
mov
fistl
fstpl
xchg
mov
out
jecxz
mov
jecxz
inc
and
rcrl
std
pop
add
rcll
or
test
cmpb
rcrb
inc
fimull
or
lret
sub
lcall
xor
out
push
xchg
mov
dec
mov
pushf
adcb
popa
push
sbb
xchg
ss
add
pop
add
test
mov
idiv
fcmovbe
xchg
mov
ret
fimuls
xchg
add
sarb
mov
push
add
and
aaa
and
movsb
testb
outsl
xchg
cwtl
out
movsb
add
dec
mov
out
inc
xor
mov
mov
xchg
adc
aaa
xchg
hlt
inc
sub
add
shlb
add
mov
cmp
bound
cmp
test
mov
push
loopne
ja
sbb
sbb
jp
xorl
add
repz
loope
add
sarb
loopne
outsl
loopne
test
sub
push
hlt
sbb
add
js
mov
cld
adc
xor
dec
inc
xor
out
xchg
fsubp
out
fbstp
push
daa
mov
jmp
cmpsb
mov
imul
mov
dec
mov
clc
mov
adc
inc
mov
aad
mov
and
cmp
and
in
add
pop
inc
movsl
add
add
push
push
and
pop
ret
fimuls
std
mov
sbb
fwait
hlt
hlt
xchg
pop
adc
adc
mov
sbb
int
aad
mov
test
repnz
mov
loopne
loope
shrb
test
mov
xor
sbb
loopne
mov
inc
loopne
adc
ss
push
adc
mov
jo
add
or
xchg
jbe
push
popa
jns
sub
mov
jp
xchg
pop
lock
dec
inc
in
add
mov
or
shlb
in
lock
or
inc
jp
push
xor
cmp
stos
mov
aad
in
orb
mov
loopne,pn
pop
std
hlt
xor
jl
aas
push
jge
add
or
push
push
xchg
xor
ss
mov
add
xchg
mov
mov
add
scas
fisttps
daa
repz
stc
into
sarl
lock
int3
pop
ficomps
add
imul
mov
mov
mov
ret
pusha
pop
xchg
add
sub
xchg
incl
lret
add
sub
cmpsb
aad
sub
and
xchg
lret
push
rclb
mov
fcmove
lahf
inc
bound
sub
mov
lcall
daa
aas
add
adc
inc
mov
mov
fists
leave
idiv
cs
mov
jnp
pop
dec
jno
or
inc
pusha
xor
jne
adc
pop
lret
test
or
sub
mov
fcmovne
xchg
clc
jbe
inc
test
mov
imul
add
lret
push
stc
lock
inc
std
dec
call
pop
push
mov
repz
xor
cmp
cwtl
inc
cmp
push
repnz
inc
jp
mov
popa
ss
test
push
xchg
adc
mov
or
je
nop
and
jbe
xchg
ret
aaa
add
test
ss
orl
inc
es
jo
les
inc
fmuls
sbb
daa
mov
xchg
dec
and
sub
pop
cmc
jo
mov
inc
sub
decl
fs
out
push
js
nop
jo
sbb
push
out
call
inc
fwait
scas
push
mov
adc
jle
dec
cld
call
dec
shlb
add
fbstp
hlt
out
push
or
or
add
sub
outsl
movsb
call
dec
fdivrs
decb
push
sti
out
mov
and
push
add
ss
fbstp
sahf
out
add
cmpb
and
xchg
push
inc
scas
movsl
adc
out
clc
int3
xchg
adc
sbb
scas
mov
into
ret
sahf
scas
aam
ja
cmp
dec
dec
pop
and
int
mov
icebp
mov
cmp
lock
es
and
jle
dec
sub
mov
ret
dec
stos
js
incl
xor
std
je
inc
pop
adc
inc
mov
pop
test
adc
and
push
mov
ja
dec
xchg
pop
in
push
jbe
std
stos
mov
jb
imul
pusha
jns
mov
sahf
popf
ljmp
mov
ds
enter
add
pop
mov
fldl
inc
add
lcall
iret
and
push
push
add
scas
enter
adc
sub
loope
pop
sarb
xor
or
adc
mov
stc
stos
lock
ficoms
mov
pop
pop
xor
hlt
mov
or
stos
sbb
rcl
int
jnp
pop
fstl
rclb
push
ds
ljmp
lock
rolb
mov
testb
daa
rolb
adc
pusha
mov
xor
fneni(8087
repnz
ljmp
inc
or
or
repnz
movsl
push
xchg
lods
cmp
mov
enter
sub
insb
cs
sti
xor
fldt
xor
lds
in
xor
adc
ret
pop
dec
js
in
in
mov
ljmp
bound
scas
out
pop
fmull
stos
mov
dec
sub
dec
adc
in
jne
adc
cmp
sbb
jne
addb
xor
insl
shl
ror
mov
nop
dec
and
sarb
mov
jecxz
loopne
adc
cmpsb
or
adc
add
jmp
or
mov
mov
and
js,pn
push
jle
jl
sbb
shlb
push
and
in
gs
mov
mov
mov
fldpi
and
decb
xor
add
into
push
addl
ljmp
enter
mov
mov
sbb
xlat
ret
pop
push
add
push
push
mov
pop
pop
dec
ljmp
sti
fistpll
popl
add
mov
mov
lret
jmp
sbb
push
xchg
cmp
and
and
xchg
icebp
pop
test
fmulp
and
cmp
xchg
sub
clc
sti
ss
je
decl
xor
repz
inc
sti
inc
pushf
sub
or
jle
inc
pop
xchg
or
imul
sahf
cwtl
mov
pop
pop
cmp
and
mov
insb
pop
jbe
adcb
ja
test
in
repz
xor
aam
cmp
loope
jg
sbb
xorb
movsb
out
in
addl
sub
lods
xchg
clc
fisttps
adc
adc
cmpsb
sti
sub
jle
or
jns
lcall
test
mov
jae
test
add
mov
call
pop
scas
xlat
out
js
gs
dec
lock
add
jo
pop
xchg
ljmp
or
pop
insb
in
dec
aam
ss
mov
outsb
cmp
lcall
lods
mov
or
call
jo
mov
inc
push
jg
push
sbb
xchg
mov
stc
lods
loopne
les
xchg
and
leave
mov
pop
xchg
stc
mov
dec
inc
ficoms
fcompl
loop
jns
lea
mov
rolb
inc
mov
fs
push
add
cwtl
jle
cmc
les
cld
mov
pop
outsb
pusha
push
and
jg
sbb
or
add
aam
inc
movb
jmp
outsl
mov
or
aad
dec
shr
dec
ds
shrl
stc
les
incb
pop
out
mov
dec
adc
test
pushf
cs
sbb
jbe
fimull
out
xchg
pop
sub
das
add
mov
scas
cmp
push
sub
fisubrl
lock
sbb
ja
add
enter
repnz
dec
push
mov
cmp
or
mov
scas
inc
ja
mov
in
outsb
add
cld
add
mov
ficompl
aas
dec
add
xorb
sub
je
clc
dec
loopne
mov
scas
nopl
fwait
xor
mov
dec
mov
out
pop
sbb
pop
xchg
imul
jb
clc
xchg
gs
dec
sbb
xor
or
ror
testb
jb
ljmp
inc
fdivs
jl
ret
call
fimuls
jns
or
jg
cmp
pusha
jle
push
cmpsl
je
mov
les
je
jl
push
xchg
jg
jno
ja
push
jns
in
mov
push
or
mov
cmp
or
mov
push
add
in
jge
jo
add
mov
dec
sbb
fstl
mov
and
and
push
ss
fimull
jmp
js
xchg
loope
je
or
into
sbb
sbb
call
cli
or
jecxz
jbe
sbb
cld
mov
mov
inc
push
jb
inc
aad
pop
mov
dec
fidivrs
pop
jo
mulb
sbb
adc
dec
popa
mov
and
jb
sbb
iret
cmpsl
sbb
jg
cmp
fnstcw
push
inc
sahf
sub
adc
dec
mov
and
das
stc
dec
and
ficomps
jno
xor
adc
out
nop
push
aaa
and
add
mov
jecxz
adc
aam
into
mov
jle
push
add
fdivrs
jmp
in
outsb
insb
fists
fidivl
push
push
sbb
or
decl
imul
mov
dec
in
xchg
add
int
cld
fwait
je
mov
sbb
cmp
and
add
lock
cs
mov
movsl
add
std
in
sub
lret
loopne
cmpb
inc
cmc
loopne
jae
jp
hlt
inc
popa
pop
jae
push
cmp
jne
jbe
jp
and
and
add
pop
or
ljmp
push
cwtl
jg
test
add
and
sbb
call
push
jb
lcall
inc
cs
mov
inc
mov
jp
ret
das
and
movb
adc
mov
sahf
inc
ret
push
rorb
jb
cmp
iret
push
mov
movsb
mov
enter
subb
cld
insb
jl
dec
clc
push
cmpsl
or
outsl
js
jl
add
loopne
mov
adcl
mov
insl
mov
cmp
call
in
dec
aaa
sbb
sub
ret
stos
out
outsb
dec
ret
mov
jmp
loopne
out
inc
jg,pn
jge
xor
push
aas
mov
mov
sti
scas
lock
inc
xchg
fisubs
push
mov
lock
mov
cs
cmc
daa
mov
xchg
cmp
mov
mov
mov
inc
push
outsb
or
xor
pop
into
data16
dec
sbb
callw
call
or
dec
movsb
adc
or
mov
shrb
dec
nop
inc
dec
mov
inc
mov
clc
pushl
mov
hlt
punpcklbw
and
sti
andb
sahf
pusha
push
cmpsl
add
pop
jne
decl
push
jnp
std
into
insl
xor
mov
icebp
ljmp
push
pop
mov
dec
or
andl
push
or
call
inc
divb
rolb
push
or
mov
loope
sti
stc
cmp
test
adc
push
push
leave
fwait
pop
and
mov
cld
sub
rclb
cli
decl
or
dec
xchg
adc
pushf
mov
and
bound
sub
decl
xbegin
xchg
jb
adcl
inc
lret
shl
sbb
scas
adc
jge
push
mov
addr16
movsl
mov
in
mov
mov
adc
cmp
enter
add
inc
lock
cs
mov
fs
insb
mov
xchg
lods
outsl
mov
add
sub
push
mov
adc
pop
add
in
jmp
sub
jb
dec
sarb
sbb
xchg
icebp
loopne
daa
stc
inc
sub
add
adc
mov
rorb
hlt
xchg
sbb
cs
fildll
insb
fcmovne
adc
int3
cli
mov
pushl
lret
or
fldenv
addr16
pop
loope
fnsave
inc
jecxz
leave
fwait
scas
or
jo
shl
mov
insl
or
mov
mov
js
rol
jno
xor
pop
ds
jl
jnp
repnz
adc
enter
pop
cld
xor
andb
jg
jns
icebp
fsubrl
push
push
push
mov
or
fbstp
movsb
add
lret
push
dec
clc
xchg
mov
add
push
jbe
out
icebp
and
push
out
cwtl
je
jo
sbb
jle,pn
outsl
mov
mov
stos
scas
in
jle
test
sub
mov
loope
outsl
fmull
sub
mov
push
iret
sbbl
jg
push
int3
popa
out
push
aam
ja
scas
adc
mov
test
leave
loope
adc
int
pop
sub
fiaddl
adc
add
aaa
es
mov
pop
jae
into
mov
dec
sbb
dec
mov
cli
mov
in
adc
adc
cmp
mov
ljmp
inc
pop
mov
mov
jbe
cmp
mov
call
in
out
les
pop
es
xor
sbb
mov
mov
mov
cmp
stos
test
mov
out
movsb
fcmovu
and
pop
outsb
mov
add
add
movsl
aam
mov
rcll
je
icebp
leave
xor
scas
push
fwait
lret
dec
sbb
mov
adc
fdiv
sub
pop
and
filds
sub
add
add
mov
lock
sbb
sbb
add
or
stos
mov
stos
xor
add
cli
cmp
mov
push
jo
cld
aaa
sub
inc
push
dec
mov
xor
mov
adc
push
cmp
es
lods
aad
ret
xchg
push
xorb
jnp
inc
nop
xchg
jo
lahf
or
xor
adc
repz
je
ret
btr
mov
incl
movsb
lret
lret
enter
loop
sahf
mov
push
add
xor
mov
test
xchg
and
add
add
fmull
mov
fnsave
inc
popa
lcall
pop
cld
sbb
dec
push
jg
pop
faddl
fucomip
or
xchg
or
xchg
in
or
sahf
jecxz
add
rcrl
sti
xchg
out
add
nop
jmp
pop
ret
leave
push
cmp
pop
adc
sbb
aaa
sub
add
xlat
cmpsb
xchg
adc
pushl
enter
sub
adc
mov
in
xchg
int
inc
ljmp
loope
push
pusha
xchg
add
jge
dec
insl
pop
xchg
inc
loopne
ljmp
xor
imul
or
mov
add
ja
decl
mov
jns
push
lret
ss
push
mov
mov
jle
addb
xor
bound
push
rorb
sbb
stos
sub
push
dec
iret
imul
aaa
sbb
mov
inc
dec
cld
incb
das
push
push
push
loop
sbb
jle
or
push
clc
es
add
dec
cli
out
hlt
add
cmc
mov
adc
fsubr
push
data16
sub
mov
les
add
test
jg
cmpsb
scas
dec
leave
cwtl
xorl
ja
xchg
leave
push
add
and
add
sahf
jb
sub
jmp
mov
inc
sbb
xchg
xchg
clc
decl
cmp
inc
adc
shll
repz
push
or
jl
pop
cmp
push
or
inc
mov
test
push
mov
pusha
mov
das
clc
mov
sbb
stos
cmpsb
sbb
inc
mov
out
pushf
pop
add
cmp
aas
mov
mov
jmp
mov
mov
sar
cs
xor
imul
jb
add
cmp
hlt
stos
sbb
cmc
sbb
mov
xchg
jo
out
mov
sbb
shll
jp
jp
cmp
sub
mov
clc
inc
jo
add
jae
cmpsl
je
repnz
lret
aad
jg
cmp
clc
sbb
push
inc
dec
lock
and
call
jnp
fisubs
enter
and
loop
mov
in
jno
mov
lds
inc
pop
dec
pop
cld
sub
ret
mov
or
sahf
scas
and
mov
jp
mov
popa
test
adc
sub
cs
pop
into
bound
shll
push
cmpsl
mov
bound
loopne
ljmp
sbb
jae
in
bound
push
out
mov
jmp
and
stos
sub
pop
popa
incl
arpl
es
or
shlb
xlat
and
outsl
pop
inc
aas
out
cmp
cwtl
call
jg
mov
mov
adcl
or
pop
mov
inc
adc
xor
pop
inc
int3
fadds
ficoms
push
pop
dec
push
cmp
jl
xchg
sbb
dec
push
aaa
mov
jl
cmpb
aas
daa
add
or
or
mov
add
xor
xchg
sub
sbb
add
add
add
sbb
imul
sbb
loopne
cmp
std
sub
lds
ja
push
mov
pusha
jecxz
lods
insl
sub
or
mov
push
call
and
or
scas
and
jle
add
mov
ljmp
dec
imul
fistl
jb
cmp
xchg
loope
adc
enter
loopne
mov
or
imul
mov
fisubs
mulb
xor
hlt
movsb
push
sar
mov
sbb
popa
cmp
movl
mov
push
leave
or
subb
jmp
repnz
scas
icebp
xor
mov
lods
sbb
mov
aaa
ljmp
push
xor
pop
jnp
cs
aad
cmp
mov
ja
push
add
stc
sub
pop
pavgw
adc
insb
dec
cmc
sbb
inc
and
or
jo
fisubrs
push
cltd
and
xchg
mov
push
cmp
outsb
adc
sbb
pop
pusha
add
push
test
cmp
push
adc
icebp
and
push
dec
popf
divb
adc
mov
int3
xor
dec
push
pop
jmp
cld
loope
out
jo
cmpsb
jb
jne
push
inc
pop
incl
adc
ss
push
scas
mov
fists
ljmp
or
adc
cmp
inc
xchg
dec
sub
sti
push
pop
rcrb
xchg
xchg
add
mov
sub
pusha
das
or
sbb
es
adc
add
orb
loope
cltd
mov
test
mov
aas
mov
or
sbb
mov
sahf
cli
sbb
adc
mov
stos
pop
jnp
push
cmp
mov
jmp
movsl
and
mov
cli
mov
sub
push
orb
ret
orl
gs
mov
pop
xor
pusha
cmp
mov
sub
adc
push
push
jne
lock
ljmp
ja
mov
dec
fldcw
in
cld
test
or
out
lds
add
std
push
jecxz
or
mov
cmp
lcall
les
xchg
sti
adc
push
mov
rorb
pop
fstpl
fmul
outsb
loopne
mov
pop
stos
jno
es
cs
xchg
inc
sti
mov
sub
mov
in
mov
faddp
push
xor
add
xor
mov
hlt
incl
sbb
push
in
lock
mov
mov
push
lods
sub
addr16
test
or
add
xchg
inc
mov
jno
sbb
les
out
inc
scas
movsl
sahf
inc
xor
push
mov
jmp
fmull
cmp
mov
xchg
push
daa
or
push
jecxz
push
ficoml
das
or
fidivs
lea
mov
mov
and
jo
cmp
mov
mov
jp
repnz
or
cmpsb
and
push
and
rorl
dec
aad
aaa
popa
sbb
sub
outsl
or
lods
mov
add
pushf
sbb
repz
filds
mov
in
xchg
hlt
sbb
xchg
mov
movsb
xor
jg
fmull
loop
repnz
inc
test
jmp
push
lret
ret
mov
push
std
aaa
mov
inc
mov
jl
mov
sub
pop
sbb
movsb
and
cwtl
cld
xlat
pop
push
aad
mov
scas
inc
or
mov
push
and
push
lret
es
pop
xchg
or
std
or
add
or
sahf
or
inc
insl
negb
mov
mov
cmpsl
orb
hlt
dec
pushf
pop
mov
hlt
add
pusha
rolb
push
xchg
push
popf
mov
xchg
inc
inc
mov
dec
bound
mov
adc
ret
pop
ret
xchg
push
adc
push
ds
jg
icebp
shll
mov
lea
pop
insb
js
push
loopne
add
push
xchg
loope
dec
jp
out
sbb
push
lock
es
or
or
js
fimull
push
mov
aaa
cmpsl
in
cmp
insb
and
shr
mov
jecxz
push
loop
out
mov
lcall
pop
mov
xchg
subl
sbb
push
in
and
push
push
dec
call
push
iret
sub
fs
nop
push
jb
ret
cmovge
xchg
or
jl
cli
jg
imul
jnp
bound
xchg
addr16
rcrb
in
aas
dec
cli
das
sub
inc
add
cmpsb
add
push
loope
pop
shrb
pop
push
ret
shll
pop
add
addb
arpl
fcomps
xorl
add
dec
pop
jb
xchg
lock
add
loope
hlt
pop
dec
xchg
ss
sahf
dec
ds
lcall
cmp
mov
dec
sbb
xor
jno
fdivs
jge
gs
rcr
add
and
jae
jnp
cmp
stos
adc
mov
lock
scas
es
pop
jns
xor
jecxz
mov
cltd
dec
inc
cmp
lods
sbb
mov
addr16
test
mov
adc
or
mov
pop
or
inc
cld
jmp
ja
lahf
in
push
and
adc
dec
mov
add
fs
loopne
mov
mov
push
mov
ret
add
inc
jmp
popl
push
mov
sbb
adcl
push
inc
outsl
and
xchg
loop
inc
dec
or
pop
ja
mov
xchg
test
js
mov
out
lea
bound
inc
dec
sahf
arpl
adc
test
cld
pop
adc
dec
push
and
push
lock
mov
aas
or
and
push
sti
mov
push
sub
into
sarb
arpl
add
jnp
jne
mov
mov
mov
mov
adc
adc
push
cld
sbbb
outsb
lret
mov
pop
mov
jmp
enter
pop
lret
mov
dec
insb
std
in
aam
or
lock
imul
or
int3
jb
adc
cmp
hlt
arpl
test
and
and
mov
adc
or
add
jb
mov
orb
pop
and
pop
inc
mov
cmp
loope
push
jle
jecxz
in
push
pushl
or
cli
adc
sbb
adc
dec
cld
mov
inc
addr16
xchg
xor
xor
sbb
js
xorl
outsb
roll
cmova
out
or
jno
movsl
mov
mov
jmp
sub
or
nop
cwtl
xchg
sub
mov
cld
pop
pop
push
or
rep
lea
and
cmp
sbb
icebp
and
andb
icebp
add
add
push
adc
add
mov
cmpsb
inc
fistl
in
jle
cwtl
jne
adc
pop
test
xchg
mov
stc
cld
push
dec
inc
xor
cwtl
mov
pushf
imul
scas
in
movsb
cltd
jnp
out
xor
mov
inc
daa
call
fcoms
decl
push
mov
mov
sbb
add
in
cmp
jg
mov
dec
in
inc
lcall
sti
sub
xor
je
scas
fdivrp
add
push
xor
jo
cmpsb
cvtpi2ps
mov
jns
inc
je
fidivrl
or
adc
push
jns
jl
pop
push
imul
adc
dec
jne
jl
sub
loope
mov
ljmp
int3
mov
cwtl
sbb
dec
mov
ja
test
imul
div
cmp
mov
ljmp
cwtl
jno
out
or
and
clc
sbb
sub
xchg
xchg
movsb
subb
cmc
bswap
fmull
sub
mov
sbb
inc
lods
mov
clc
fidivrs
outsb
inc
outsb
xor
aaa
jge
call
add
add
popf
es
mov
cmp
sti
jle
pop
ret
xchg
daa
das
rol
stos
mov
and
es
testb
cmp
xchg
sub
pop
test
cld
repnz
add
leave
sub
sub
pop
lea
mov
pop
add
and
call
mulb
xchg
or
idiv
pop
adc
mov
aaa
add
mov
adc
pop
mov
fdivl
dec
push
jl
loop
movb
sub
jns
fisttps
or
inc
push
adc
inc
lret
cmp
pop
add
adc
xchg
outsb
testl
pop
ret
push
outsl
adc
lock
dec
or
rclb
add
cmpsb
loop
pop
add
or
loop
sbb
mov
mov
mov
mov
lret
sar
or
shrl
add
test
scas
in
inc
add
movsb
iret
fsts
and
xchg
mov
push
lea
adc
adc
data16
enter
add
loope
hlt
and
mov
fadds
fbld
push
pop
int3
loopne
add
or
rclb
xorb
outsb
shll
push
in
rolb
mov
in
mov
jno
sbb
testb
xchg
call
adc
pop
or
outsb
inc
adc
ret
cmpsl
lret
ljmp
xchg
loop
push
xchg
mov
std
sti
or
inc
jae
shll
das
mov
add
imul
sahf
fmuls
scas
shl
pop
sub
adc
push
push
add
push
add
data16
test
lods
int
out
xor
add
lahf
add
cmpsb
call
jnp
inc
lahf
adc
movsb
xor
jne
andl
incl
aaa
pushf
mov
test
enter
ret
lock
adc
mov
and
pop
lcall
jl
add
int3
jbe
adc
mov
push
cld
dec
add
bound
sbb
fisubl
ja
cmp
movl
loope
pop
movsb
add
jnp
aas
inc
sub
iret
inc
pop
or
cli
sti
inc
popa
mov
xchg
add
push
mov
pop
aam
arpl
adc
mov
es
xchg
jle
push
pusha
test
cli
pop
shr
xor
xchg
mov
popa
sub
outsl
in
adc
clc
lds
dec
stc
jg
loop
dec
loop
push
rolb
sub
pop
shll
push
sbb
add
sub
rcrl
xor
hlt
and
idivl
xchg
mov
decl
push
std
outsl
fstpt
push
jo
cmp
pop
out
movb
cli
push
jl
lock
bound
lods
push
mov
mov
lret
sbb
inc
pop
mov
iret
jb
jbe
int
adc
loopne
fcom
scas
mov
push
sarl
dec
adc
cmp
xchg
and
hlt
adc
xchg
mov
pop
scas
fisttps
je
addr16
hlt
dec
cmc
cmpb
jge
jne
out
sub
lahf
sbb
jo
inc
dec
notl
jo
into
add
cmc
cmp
cmp
repnz
sahf
push
adc
dec
stos
lods
jno
mov
ficomps
add
mov
fstps
clc
ret
rorb
add
cmp
inc
mov
or
test
push
in
fsub
and
test
cli
pop
and
mov
adc
mull
daa
es
out
fcoms
into
push
jbe
movsb
push
out
add
movsl
pop
xchg
out
outsl
aam
inc
insl
test
call
cmp
stos
rolb
cmp
inc
fbld
rorb
hlt
jbe
adc
or
push
xor
sub
jle
cli
sahf
popf
fwait
push
int3
out
sbbb
push
push
xchg
arpl
ret
fcomp
lcall
sahf
xor
and
icebp
xor
jne
inc
stc
jmp
cltd
xor
jbe
cmpsb
xchg
icebp
pop
add
sbb
lods
daa
sbb
dec
test
mov
je
insb
push
rolb
mov
xchg
popf
cli
pushl
lock
adc
mov
and
rcr
pop
sbb
pop
jbe
fldt
inc
mov
lock
cmp
fcomps
dec
mov
gs
ret
sbb
dec
add
notl
jl
std
sub
stc
xor
dec
add
fs
dec
es
jecxz
add
fwait
jge
sub
lret
add
mov
pop
cmp
popa
and
mov
roll
ds
adc
test
aaa
inc
pop
mov
xor
pop
and
cmp
insl
xor
sub
jno
pop
loop
xchg
adc
out
ss
push
and
dec
push
inc
cmpsl
sbb
jne
sahf
pop
js
add
add
push
xor
dec
pop
xor
xchg
cmpsb
rolb
add
sub
push
sub
dec
repnz
mov
push
sti
aas
ljmp
shll
aas
fistps
inc
cmc
rcrb
push
xchg
aaa
mov
mov
sub
mov
cs
mov
mov
add
pop
push
leave
mov
roll
lea
fwait
je
or
mov
gs
mov
loope
jmp
sbb
pop
or
outsl
xchg
enter
ljmp
mov
fiaddl
sbb
insl
retw
add
jge
in
sbb
xor
xchg
ljmp
sbb
clc
sbb
mov
mov
mov
lods
mov
cmc
clc
js
add
outsl
jg
jl
movsb
movsl
vpavgb
add
jb
inc
add
lods
xor
call
sbb
scas
hlt
pop
pop
ljmp
jl
push
cltd
je
ret
add
jecxz
jnp
sar
add
jb
imul
cmp
push
das
mov
cmpsb
mov
int
cmp
lea
repnz
cmp
xchg
mov
inc
movsb
outsb
and
out
inc
aaa
jmp
test
fidivrs
and
loopne
scas
rol
jl
decb
scas
mov
in
testb
jg
mov
in
je
fadds
adc
les
jp
rol
mov
mov
loop
mov
int
lret
push
push
inc
scas
xor
pop
pop
dec
ss
mov
add
pop
ss
inc
or
cmpsb
sub
lock
popf
test
adc
nop
and
xchg
pop
lods
mov
mov
dec
rol
and
subb
or
clc
std
cmpb
cmp
push
mov
in
addr16
repz
mov
nop
ret
sbb
or
mov
jp
je
add
xor
idiv
xor
fsubrl
and
icebp
test
dec
les
and
sbb
cmpsl
add
ds
or
stos
enter
in
adc
fadds
adc
enter
mov
imul
movsb
hlt
arpl
add
mov
pop
mov
mov
shlb
mov
jo
ss
aaa
mov
cmp
out
mov
sbb
pushf
into
jo
cld
jbe
jecxz
test
or
ljmp
lods
dec
or
mov
jge
outsl
aaa
sub
icebp
xlat
and
adc
mov
je
xchg
rolb
jmp
jl
or
lds
jb
pop
loop
pushf
out
fbld
lret
imul
sub
jbe
lock
fiaddl
jno
pop
ljmp
lcall
xor
movsl
ss
repnz
mov
dec
cli
push
push
dec
les
push
call
fisubl
and
push
gs
or
push
adc
ds
icebp
push
jo
mov
outsl
call
lahf
ljmp
xor
sbbl
sbb
scas
shll
adcl
mov
adc
call
lret
push
imul
fldl
mov
and
mov
out
roll
orl
fmuls
jo
add
lret
cmp
dec
or
mov
jge
xor
cmpsl
outsl
pop
out
or
mov
push
faddl
push
rolb
in
fadds
mov
outsb
pop
xor
adc
mov
inc
inc
cltd
cmpsl
xchg
loope
xchg
cs
add
aas
mov
sarb
pop
jmp
loope
aas
push
mov
shlb
sbb
mov
out
shll
mov
add
mov
cld
cld
shll
ds
inc
gs
and
mov
in
jo
sub
lods
xchg
xor
dec
nop
call
push
lods
out
add
dec
in
aad
push
fbstp
incl
inc
xor
cwtl
and
repz
pusha
sbb
aad
cmp
fwait
sarb
imul
mov
jns
jno
inc
sub
pop
jge
push
mov
bound
dec
test
fidivl
mov
xlat
adc
push
dec
push
repz
clc
fistpll
sub
cltd
cs
bound
subb
js
loopne
nop
mul
adc
push
std
insl
ret
sub
or
inc
or
sahf
test
imul
ja
popa
inc
sti
movsb
or
je
xchg
repz
mov
fisttps
je
push
pmullw
lock
pop
pop
mov
xor
cwtl
aam
movsb
and
cs
sub
aam
aam
add
dec
sub
mov
pop
js
loopne
sti
aam
inc
adc
bound
mov
or
test
cmp
gs
jle
push
mov
mov
add
add
inc
aas
mov
xor
pop
mov
cs
pop
xorl
mov
cmp
cmpsl
and
pop
or
push
insl
sub
test
incl
push
mov
or
push
pcmpgtb
mov
or
add
inc
test
add
sarl
loope
and
or
cmp
add
mov
js
jmp
cmp
inc
and
dec
jmp
and
outsl
leave
or
xchg
sub
xchg
fmull
mov
lret
jns
xor
inc
mov
xchg
cwtl
sahf
push
mov
and
cmpsb
mov
or
mov
sbb
imul
sub
imul
mov
loope
mov
pop
je
jge
loope
inc
out
mov
outsl
dec
call
clc
cs
lock
in
popa
xchg
cli
push
lret
js
orb
pushf
int
lea
stos
ja
dec
mov
lods
aas
add
pop
cltd
push
xor
pop
cmpsb
je
mov
sub
addl
pop
outsl
fmull
and
pop
stos
inc
inc
les
or
mov
incl
inc
out
and
mov
cmp
add
jne
fnsave
rcrl
xchg
aam
and
clc
out
adc
mov
push
nop
jl
xor
mov
test
pop
pop
sbb
add
pop
add
sahf
inc
cmc
push
mov
fwait
arpl
mov
and
sbb
xor
cmp
jp
sarb
aas
fcompl
idivl
cli
addb
stc
out
ret
mov
inc
add
cmpsb
push
mov
adc
dec
insb
std
adc
insb
sbb
leave
ret
pop
sbb
lock
mov
mov
mov
pop
aaa
mov
pop
jo
scas
add
sub
or
js
or
add
test
loopne
call
out
and
cld
or
add
push
and
js
mov
out
es
les
add
js
dec
clc
dec
cmp
aad
dec
stos
in
ljmp
add
lcall
ret
aam
addr16
or
mov
mov
pop
cmp
inc
nop
test
fildl
ja
dec
clc
je
stos
movsb
data16
inc
mov
ret
add
jle
test
mov
mov
mov
adc
outsl
mov
lods
mov
cld
nop
push
bound
dec
sub
sbb
sub
stos
jmpw
mov
cmp
mov
inc
hlt
dec
cmp
dec
mov
das
push
inc
ss
add
push
add
sub
add
cmp
ja
dec
add
fs
cmpsb
push
jge
or
insb
repnz
cmc
pop
jle
push
push
or
cld
dec
sahf
es
frstor
adc
push
ljmp
sub
mov
mov
push
sbb
insl
adc
sub
rcll
pop
es
test
or
jg
mov
inc
mov
add
lods
jo
inc
ss
or
iret
sub
es
sti
jg
aaa
push
add
sbbb
cmp
adc
cs
pusha
mov
aaa
aad
jg
sbb
mov
andl
cmp
and
mov
dec
and
in
mov
dec
arpl
fiadds
pop
or
and
lret
int3
sub
int
sub
lcall
xchg
mov
je
push
pop
je
or
jle
xchg
imul
mov
addb
addb
sbb
pop
or
add
test
mov
lcall
shrb
call
shr
roll
loopne
xor
adc
pop
xchg
sarl
mov
decl
ret
mov
cmp
shr
das
pop
mov
or
ljmp
lock
and
mov
and
pop
sub
into
iret
sub
nop
inc
push
mov
inc
sub
mov
xor
mov
je
cmp
mov
xchg
idivb
push
shlb
and
jecxz
test
lock
in
movsl
enter
lods
push
les
fisubs
ret
mov
aas
les
sub
mov
mov
add
bound
fcoms
mov
test
or
inc
xor
push
dec
mov
pop
out
rol
or
cmpb
into
push
shrb
loopne
mov
push
add
fistpll
push
lds
mov
and
or
push
ja
popf
push
add
xor
push
xchg
clc
push
dec
dec
outsb
das
xor
sbb
xchg
cld
sub
gs
out
jecxz
mov
fiadds
mov
add
sahf
jmp
mov
xorl
or
incl
jl
jae
adc
test
xor
insl
imul
mov
lret
gs
popa
imul
add
das
loop
and
mov
addl
mov
out
fsubs
sbb
imul
stos
fwait
pop
dec
inc
lret
mov
std
fcomps
inc
hlt
add
jb
mov
or
aam
adc
xor
or
sbb
std
cmp
jp,pn
adc
mov
fadds
jo
or
bound
lods
inc
ret
jo
xchg
push
pusha
mov
xchg
mov
stos
nop
lcall
mov
aaa
bound
xor
and
idiv
push
or
cmc
rcrb
ja
mov
int
mov
xchg
ja
or
stos
adc
mull
cmp
fistpl
mov
add
in
cmc
iret
adc
js
push
ror
push
cmpsl
or
adc
ficomps
or
in
cs
shrb
push
in
sub
inc
or
jp
sbb
adc
loope
adcl
mov
adc
rol
mov
stc
punpcklwd
out
dec
xchg
icebp
cld
mov
mov
pushf
jmp
popf
sub
xchg
cmc
pop
pushl
fldcw
loope
mov
imul
repnz
add
stos
lods
cmp
push
nop
movsb
or
aad
clc
sbb
loopne
stos
inc
push
pop
inc
xchg
sbb
adc
andb
mov
ss
jp
sub
mov
pop
xchg
add
test
push
mov
lret
sub
outsb
aaa
fstl
icebp
jbe
xchg
add
cs
add
cli
lds
mov
pop
cwtl
push
rclb
lret
sub
sbb
mov
inc
push
push
mov
cmp
sbb
pop
imul
sar
sahf
sub
enter
in
outsl
clc
and
cmp
pop
mov
and
inc
adc
into
dec
push
aaa
test
mov
ja
push
add
fnsave
shll
mov
insb
pop
fnstenv
xchg
sbb
pop
push
pop
jo
pop
iret
lret
mov
mov
push
mov
push
xchg
psrad
imul
ljmp
fsubrl
jmp
mov
lret
cld
pusha
inc
inc
dec
dec
xor
imul
xor
jl
lcall
add
test
pop
mov
ja
sti
inc
popa
add
mov
testb
mov
cwtl
cmp
xor
shl
les
mov
xchg
and
lock
sub
test
call
mov
call
roll
dec
std
cmpsl
ret
pusha
ret
push
out
andb
in
push
aad
add
sbb
mov
dec
fisttps
inc
cmp
adc
mov
int
xchg
repnz
mov
xchg
dec
std
and
mov
push
jecxz
test
shlb
push
jp
clc
aas
adc
loopne
mov
inc
add
sub
rcll
push
movsl
daa
imul
jmp
sahf
out
mov
outsl
mov
rorl
and
jmp
stc
adc
test
cld
aam
sub
push
inc
insb
call
cmpsb
xchg
push
sub
dec
add
pop
sub
fwait
xchg
in
sbbl
sbb
repnz
pop
jg
sbbl
jle
fnop
pop
add
ljmp
aaa
std
mov
xor
pusha
nop
sbb
dec
or
jge
inc
sar
push
out
mov
push
dec
cmp
jl
sbb
cld
outsb
cmp
ret
cmpsl
test
decl
int3
cmp
inc
sub
xor
dec
add
aaa
add
and
shrb
xchg
mov
mov
dec
add
test
cld
pop
dec
xor
data16
push
add
pusha
in
jmp
insb
clc
add
sbb
fistpll
mov
add
push
in
sub
out
fcmovnu
add
push
imul
sarb
mov
test
push
movsl
mov
or
or
add
sbb
and
sti
ljmp
xor
cs
add
rcl
pop
xchg
push
lds
push
pop
fsubr
lods
cmp
cld
adc
mov
test
in
mov
scas
in
popf
jp
dec
add
shl
ja
rorb
and
or
shlb
mov
in
ss
setb
jg
test
out
dec
cmpsl
bound
ret
loope
cmpl
cmp
das
bound
fsubrs
fisttps
out
push
mov
clc
int3
jbe
das
mov
stos
fnsave
aam
xorb
and
jg
push
jb
mov
cmp
or
test
xor
mov
adc
sahf
adc
testl
imul
insb
lods
cmp
ljmp
push
lods
lock
pop
movsb
adc
mov
lcall
inc
mov
les
pop
jne,pn
stc
lock
jg
add
mov
adc
aad
add
mov
in
mov
cld
mov
lcall
fcoms
jge
insb
mov
lcall
add
repz
inc
addb
adc
pop
xchg
jmp
sahf
inc
hlt
in
sbb
sub
mov
mov
mov
push
push
enter
mov
sti
dec
ret
mov
popf
ret
dec
fucomp
xor
fdivrl
fsubrl
cmc
insl
push
out
jle
inc
xchg
mov
mov
dec
adc
and
out
lods
mov
inc
or
push
pusha
xchg
lret
push
out
cmp
mov
repz
mov
sub
sbb
cmp
pop
lock
sarb
stos
sbb
rolb
add
pop
sbbl
jecxz
popf
sbb
ja
mov
dec
loopne
xchg
fisttpll
adc
jp
push
lret
jno
add
jle
push
cli
in
sub
mov
xchg
pop
lock
lret
mov
jg
cwtl
mov
mov
mov
sbb
inc
pop
mov
xor
mov
mov
call
pusha
ret
pop
iret
stos
cmp
test
mov
add
cld
incl
popa
cmpsb
adc
mov
inc
pop
xchg
push
add
add
cwtl
xor
push
rcl
je
add
cmp
negb
add
outsl
and
icebp
xchg
cmp
jmp
call
pop
lock
sbb
fidivrs
push
scas
ret
outsb
cmpsl
mov
xchg
add
ss
pushf
fsubs
aaa
frstor
adc
inc
daa
ljmp
aaa
dec
mov
inc
or
fwait
pop
pop
jl
xchg
xchg
push
insb
lods
es
adc
ret
mov
fcomps
mov
les
pop
sbb
clc
data16
out
or
dec
mov
sbbl
mov
ljmp
or
sbbb
sbb
mov
idivb
cmp
xchg
dec
mov
faddl
inc
fisttpl
andb
push
inc
add
jmp
addl
cmp
adc
inc
into
inc
mov
js
stc
ljmp
sbb
mov
loop
xlat
or
mov
inc
dec
loopne
and
jae
loopne
mov
mov
mov
inc
pop
pushf
inc
fs
out
jl
mov
mov
scas
movsb
cmp
repz
inc
lss
loopne
cmp
mov
inc
arpl
sbb
cmp
adc
jbe
add
add
pushf
aas
mov
sbb
mov
out
or
pop
sti
scas
xor
adc
loopne
sti
lahf
lods
xor
push
cmp
repz
sub
jns
enter
mov
inc
pop
cmc
js,pn
sarb
mov
xor
inc
inc
shl
outsl
cli
and
lea
andl
jae
jg
cwtl
rcrl
jb
and
mov
mov
cwtl
insb
add
outsb
shlb
xor
ljmp
add
fs
push
jle
push
sbb
mov
jecxz
stos
les
mov
mov
jmp
mov
stc
cmp
and
pop
inc
sbb
dec
mov
cmpb
es
and
insl
sbb
xchg
ss
cmp
clc
clc
mov
js
je
aas
or
jge
in
pop
jo
mov
inc
cmc
mov
and
fs
frstor
loop
add
pushf
push
sbb
lcall
test
pushl
adc
and
sub
mov
pop
or
in
xor
clc
mov
jle
lcall
call
pusha
fiadds
and
fnsave
lods
cli
filds
lret
mov
or
clc
ljmp
enter
adc
inc
scas
fcompl
dec
in
xchg
fdivr
aaa
inc
jb
inc
mov
pop
arpl
hlt
mov
daa
dec
lds
cs
ss
stos
call
xor
adc
cmc
pop
add
addr16
gs
pop
mov
pop
cmp
mov
hlt
xor
cmp
fists
mov
sti
or
xchg
mov
adc
pop
add
pop
mov
adc
arpl
movsb
inc
push
add
push
scas
cmpsb
dec
loop
jbe
inc
popf
mov
dec
aad
pop
mov
mov
pop
push
pop
mov
insl
cmpsl
add
mov
sub
mov
shrb
loopne
test
mov
cli
ret
add
lea
imul
push
fdiv
fistps
adc
xorl
push
stos
outsl
lock
aaa
nop
push
sbb
jbe
movb
add
ret
mov
lock
cli
test
cltd
repnz
arpl
int
shlb
sbb
adc
sub
jns
add
std
dec
add
jo
or
not
inc
loop
or
jg
inc
icebp
push
add
iret
sbb
scas
ljmp
xchg
sub
mov
xchg
test
mov
jp,pn
and
cmp
es
push
stos
sbb
cltd
push
push
cmpb
add
jns
jl
or
push
jbe
mov
clc
decl
lods
push
popa
add
pop
or
push
repnz
pushf
cltd
mov
push
pop
lds
jle
outsb
add
inc
cli
ss
aaa
or
or
mov
insb
and
push
inc
cltd
pop
xor
orl
aam
mov
movsb
add
mov
adc
push
aad
xchg
pusha
daa
mov
lods
mov
xlat
mov
add
lret
push
dec
dec
add
icebp
or
or
fs
jo
incl
mov
or
xchg
mov
fs
and
aaa
fsubs
sbb
les
faddp
sarl
mov
mov
lds
sti
jl
jge
sbb
push
sub
jbe
nop
pop
testb
test
mov
xchg
mov
and
jae
lcall
mov
or
ss
mov
fidivrs
xchg
sub
inc
mov
add
rcr
adc
mov
mov
fdiv
adc
popf
adc
and
rorb
jno
jg
scas
outsb
adc
add
jbe
inc
fmulp
pop
adc
push
loopne
cs
lods
mov
cmp
push
repz
mov
mov
pushf
pop
add
add
in
jns
lods
and
stos
inc
jge
pop
call
pusha
sub
cltd
mov
cs
fisubl
sub
ret
insb
pushf
fdivrp
mov
sbb
jg
arpl
inc
add
int3
pop
aaa
lea
push
adc
add
fnstsw
push
mov
les
ret
mov
add
fistpl
sbb
enter
cmp
aam
adc
decb
fnstcw
sbb
xor
sti
push
scas
cltd
fidivl
dec
cs
lods
pop
jb
test
ljmp
clc
sub
lds
fcompl
into
pop
inc
mov
or
movsb
repnz
mov
test
enter
sub
mov
or
sar
mov
data16
push
sti
add
inc
pop
cli
lret
jle
lods
xor
push
lcall
loop
push
stos
ss
shll
push
push
pusha
push
testl
repz
or
je
jge
mov
pusha
jne
jb
hlt
cmp
cmp
mov
hlt
mov
jl
or
mov
imulb
lcall
subb
mov
jmp
push
out
rcl
int3
stos
aad
dec
and
or
insl
mov
fmull
push
dec
popf
icebp
lret
nop
sub
ja
pop
out
adc
lret
cmp
jle
lea
lret
aas
lcall
popa
shlb
mov
ss
shrb
xor
xor
je
dec
and
dec
and
xchg
lret
std
frstor
popa
sahf
out
xor
not
mov
push
push
sbb
lds
fisubs
xor
lods
and
mov
arpl
inc
or
push
test
cmp
dec
lret
mov
mov
fnsave
mov
adc
push
dec
pop
add
sub
add
clc
or
pop
cltd
add
sbb
mov
aaa
dec
js
call
clc
push
outsb
add
sub
and
scas
cmp
mov
shrb
into
aaa
mov
mov
or
dec
sbb
jo
ds
cmp
call
pop
in
btc
add
dec
xchg
int
push
jo
xchg
adc
pop
mov
aaa
pop
sub
imul
mov
xor
mov
mov
push
add
push
das
hlt
pop
mov
add
sbb
inc
sbb
mov
xchg
mov
inc
sti
push
imul
and
fst
xor
adc
testb
ret
fucomip
xchg
mov
mov
out
in
enter
add
subb
cld
adc
add
xor
ljmp
adcl
sbb
pop
lds
in
jg
hlt
jg
sbb
or
repz
inc
cmpsl
stos
sahf
fbld
mov
cs
xchg
mov
es
inc
mov
push
fcmovnu
cmp
fadd
aas
jl
adc
dec
cli
jnp
push
popa
sbb
mov
inc
push
roll
add
scas
into
mov
pop
sub
ja
pop
mov
push
push
enter
repz
mov
ds
leave
jne
sbb
pusha
push
or
ja
in
lods
or
out
out
je
loopne
adc
jle
call
pop
out
addr16
cwtl
lcall
out
pop
dec
add
shlb
adc
add
or
call
adc
out
mov
or
mull
mov
cmp
jns
enter
mov
test
les
jo
mov
mov
jle
js
int
mov
test
jne
mov
and
insl
adc
xchg
cli
adc
pusha
mov
incb
test
into
lock
xchg
mov
pop
cld
mov
and
dec
ss
pop
dec
inc
shlb
addl
push
push
test
fstps
call
test
stc
add
xchg
push
decb
lock
fdivs
mov
xor
or
cwtl
add
xchg
fdivr
xor
jg
pop
aaa
push
stc
push
mov
mov
add
jno
xchg
dec
rcr
lods
push
loop
lods
fbld
jg
add
dec
mov
mov
xor
cli
addl
xor
ss
clc
pop
sti
pop
testb
xor
test
or
out
xchg
not
jo
inc
icebp
fwait
cs
testl
pushf
ret
mov
jo
push
jmp
test
mov
ljmp
rcrl
fiaddl
insb
push
mov
adc
loope
jg
enter
popf
rolb
xchg
jge
pop
std
psrlq
dec
ljmp
icebp
mov
mov
orl
rcrl
aad
lods
fistpll
sbb
mov
add
icebp
xor
jp
nop
pop
rcll
sub
inc
outsl
adc
push
pop
adc
ja
out
fdivl
insb
in
mov
lea
add
pop
mov
dec
add
inc
push
dec
mov
xor
inc
fwait
into
jns
mov
out
mov
push
mov
scas
adc
std
call
pop
cmpb
js
lods
incl
cmp
mov
cmc
mov
int3
out
adc
js
jl
sbb
mov
clc
sub
or
sbb
mov
scas
add
int3
and
jno
pop
subl
aad
sbb
mov
inc
movsl
jecxz
jp
test
or
lea
pusha
inc
push
sbb
push
cld
ret
pop
dec
adc
test
fistps
lret
and
and
jb
out
push
cmp
adc
shlb
jbe
les
mov
add
test
cmpsl
pop
cmpsl
loope
in
inc
idiv
push
popa
int3
test
jns
shr
das
push
call
aaa
adc
mov
sbb
mov
and
arpl
test
sub
rclb
mov
decl
pop
jno
sbb
ja
xchg
aad
subb
lods
dec
daa
hlt
mov
jg
imul
shlb
push
fcmovbe
sbb
test
fadds
loop
sub
sub
and
and
sbb
loopne
adc
ffreep
pop
clc
div
push
xorl
xchg
popf
cmc
sub
push
pop
xlat
and
call
cli
roll
aaa
add
mov
lods
push
cmp
cmp
hlt
sub
adc
or
mov
mov
cli
mov
div
mov
bnd
cmp
add
jne
sbb
mov
mov
enter
dec
mov
mov
inc
or
aad
mov
fnstsw
leave
add
call
xchg
pop
xchg
enter
test
orb
cs
add
add
push
cmp
mov
outsl
cmp
pop
jo
sub
sbb
imul
mov
and
mov
mov
add
push
lea
pop
mov
push
inc
inc
adc
xor
push
cli
sbbl
adc
jmp
add
fcmovnb
scas
loopne
mov
es
sub
rorb
movsw
test
or
rorb
mov
push
add
sub
cmp
ja
pop
call
call
jg
add
xchg
mov
jl
pop
insb
aam
addb
pop
ss
pop
test
movsb
inc
rcrl
test
iret
push
not
adc
out
cmpsl
fimuls
imul
sarb
push
cmp
incb
loop
add
add
inc
xchg
add
mov
add
js
and
lods
sbb
cs
test
rcrl
adc
rolb
test
add
sbb
jae
or
pop
jl
ret
es
xchg
mov
and
fildl
sbb
stos
and
mov
cmp
jnp
aad
sbb
cld
sbb
ret
inc
mov
push
mull
sarb
shrb
in
inc
add
add
cli
insb
mov
or
imul
stos
fisttps
fsubrl
cmp
sub
jmp
pop
ret
in
cmpsb
scas
inc
inc
pop
push
xchg
movsl
imulb
and
popf
sub
mov
add
mov
add
iret
ss
inc
sti
testb
adc
rcrl
dec
cli
sbb
mov
sub
mov
je
or
mov
mov
xor
cmp
and
inc
inc
mov
inc
lcall
ljmp
inc
fisttps
nop
mov
inc
jg
mov
sub
mov
jns
mov
hlt
xor
jge
and
ret
int3
mov
xchg
pop
mov
dec
les
dec
xor
inc
mov
mov
mov
mov
js
sbbb
pop
mov
fnstsw
std
inc
sbbb
bound
push
add
push
cmpsb
adc
push
cwtl
push
int
mov
cmpsb
mov
test
cmpsl
sub
mov
rcr
and
hlt
pop
lock
int
add
push
fbld
xchg
cld
push
dec
hlt
fadds
adc
push
mov
stos
mov
sub
sub
cltd
mov
mov
test
cmp
aas
xchg
mov
mov
push
cmp
push
and
mov
enter
setg
scas
jbe
pop
cmpb
orb
xchg
cld
fs
xor
sbb
movsl
test
xchg
pushf
sub
scas
mov
jl
lods
or
and
pop
or
cmp
insb
adc
aam
sar
sub
pop
adc
xchg
mov
jg
mov
arpl
repnz
mov
rcl
pusha
add
adc
xchg
and
push
mov
mov
or
rcll
cmp
in
adc
pop
lret
cli
pop
add
scas
mov
iret
xchg
call
outsb
test
jo
cmp
fs
cmp
stos
mov
pop
ret
push
fnstsw
and
iret
in
mov
es
loop
pop
sub
pushf
mov
fmul
cmpsb
pop
push
sbb
jg
dec
fidivrl
mov
mov
push
and
push
mov
mov
sti
jns
mov
adc
ret
mov
xor
jecxz
and
mov
sbb
push
movsl
mov
mov
es
iret
mov
or
call
into
ss
push
or
mov
push
xchg
dec
dec
clc
xor
cmpsb
lds
mov
inc
ljmp
jg
cmpsb
pusha
dec
lock
cmp
jmp
ret
addr16
xchg
sbb
push
jmp
mov
cld
sbb
mov
add
inc
and
dec
pusha
fcompl
inc
dec
aad
jmp
cld
jb
out
rolb
divb
dec
mov
scas
fldl
je
or
cltd
test
mov
mov
mov
inc
inc
push
xor
mov
outsb
push
test
dec
lahf
push
in
mov
mov
arpl
out
bound
test
in
loop
xchg
mov
bound
mov
jg
lock
clc
jbe
cmpb
dec
popf
sbb
pop
aad
add
lods
adc
mov
pusha
icebp
jl
cmp
dec
loopne
push
sbb
mov
scas
out
push
pusha
jne
xor
mov
int3
and
or
int3
jbe
cmp
lcall
cli
scas
mov
inc
out
insb
cmpb
add
mov
sub
int3
mov
push
cmp
aas
subb
push
pop
leave
adc
dec
xchg
es
filds
xor
aaa
loope
cmp
lea
movsb
push
divb
test
sub
sbbb
cmp
sti
dec
out
inc
mov
inc
pop
sub
jg
ss
jp
jg
dec
ljmp
cli
mov
out
sub
sbb
and
inc
stos
sbb
pusha
mov
je
scas
push
cmp
sub
sbb
ja
clc
or
imul
jmp
push
xchg
dec
push
xchg
clc
jl
outsb
xor
lods
nop
jnp
or
mov
and
dec
or
cwtd
pop
mov
dec
cli
sub
das
clc
pop
and
dec
mov
mov
js
xor
jo
pushf
cmp
les
mov
add
add
pop
jp
insb
mov
loop
push
out
cli
aaa
push
cmpb
inc
mov
or
movl
fisubrl
push
fwait
les
cli
jb
pop
imulb
mov
mov
add
mov
pop
fcmovbe
add
and
mov
aas
out
jae
jo
inc
push
int
cmc
push
xor
add
jmp
xchg
fcoml
ss
rcr
lret
clc
add
fadds
addl
ljmp
repz
fistpll
enter
js
or
and
xchg
push
mov
ret
and
inc
ds
dec
jg
aad
rorb
push
add
shlb
push
ljmp
xor
jne
mov
or
subl
pushf
js
jle
pop
lock
popf
sarl
test
push
sub
dec
jbe
lea
cs
into
push
mov
xchg
jo
rolb
shl
insl
inc
dec
pushl
arpl
and
add
in
clc
mov
add
popa
out
fisttpl
orb
hlt
shlb
out
aam
fbld
cwtl
push
mov
push
xchg
dec
mov
call
out
inc
or
cmp
movsl
push
jmp
les
in
hlt
test
xchg
dec
andb
pop
sbb
adc
dec
pop
in
pop
into
fbstp
sub
into
lds
repnz
jmp
ficomps
add
pushf
ss
in
data16
jne
xchg
les
mov
inc
mov
int
mov
mov
inc
pop
lds
xlat
mov
xchg
inc
xchg
movb
pop
dec
ljmp
mov
push
fnstsw
jg
mov
lret
into
cmpb
clc
shr
xchg
iret
push
add
fistpll
int3
pop
bound
or
rorl
xchg
mov
in
or
mov
mov
cmp
xchg
cmp
int3
fmull
in
insl
mov
jne
add
imul
or
sbb
sub
mov
adc
jg
pop
push
mov
sbb
fs
ret
ja
adc
xchg
hlt
jnp
popa
icebp
cmc
out
pop
popa
notb
inc
loop
push
jb
sub
test
lcall
rclb
dec
hlt
repz
adcb
pop
fcmove
fidivl
lods
sub
mov
imul
outsl
push
jg
lock
mov
jo
lea
mov
outsl
pusha
or
loopne
addl
mov
mov
adc
jmp
decl
sbb
push
and
cmp
mov
adc
cwtl
mov
mov
mov
dec
in
add
dec
mov
clc
imul
xor
call
outsl
mov
and
sbbb
scas
mov
or
mov
xor
adc
mov
mov
mov
mov
cmpsb
and
mov
xchg
lahf
mov
and
icebp
out
fisubrl
mov
imul
xchg
push
popa
std
push
sahf
xor
imul
aam
xchg
std
fdivrs
mov
add
inc
std
in
or
push
sbb
popf
xor
das
shrb
adc
ret
dec
ret
add
push
xor
inc
sti
lods
fwait
mov
nop
xlat
testb
sahf
jae
dec
notb
mov
scas
test
sbb
movsb
scas
sub
or
mov
adc
cmp
adc
mov
ljmp
sbb
sbb
mov
add
sbb
call
lcall
xchg
jb
das
orb
jl
pop
dec
adc
push
or
push
or
jae
std
jb
dec
xor
inc
and
test
sbb
adcb
mov
push
sarb
adc
pop
mov
inc
or
mov
pop
inc
cs
inc
dec
mov
push
pusha
or
jge
lret
aad
std
scas
das
pop
movb
xor
inc
std
jg
or
mov
mov
bndldx
insb
lods
push
scas
or
fcoml
mov
mov
mov
int
fucomp
mov
cmp
das
ret
adc
and
lds
lcall
cmp
lahf
shr
call
je
rcrl
pop
call
movsb
push
sub
dec
sub
pusha
xor
add
pop
fisttpl
jge
sub
sub
pop
cwtl
mov
mov
fwait
clc
dec
xorb
xchg
stc
push
cmovp
jmp
fstps
or
idiv
call
or
xchg
add
imul
mov
xor
pop
add
cmc
mov
in
cwtl
repnz
in
mov
sub
adc
cmp
pusha
inc
mov
jo
cmpsb
lods
inc
jle
mov
cld
pop
je
jmp
xor
bound
test
sub
movsb
lcall
cmp
pop
sahf
add
ficompl
pusha
in
and
push
push
ret
lods
pop
add
rolb
inc
pop
xlat
and
add
push
or
push
cmc
mov
lcall
or
push
sub
fistl
sbb
js
mov
movsl
leave
mov
push
mov
loope
mov
insb
dec
add
push
shl
pop
push
notl
int
mov
lcall
mov
data16
rol
mov
or
stos
out
sbb
les
cmc
mov
call
gs
cmp
ja
clc
hlt
int3
add
inc
inc
xor
lcall
add
add
ss
aam
inc
loope
movsl
xchg
mov
sub
insl
inc
cmp
inc
enter
shl
sbb
bound
push
xchg
sub
xchg
insb
sub
adc
ja
insb
mov
cli
cwtl
fdivrs
mov
leave
scas
add
insb
cmpsb
std
jle
mov
sbb
imul
sub
data16
jecxz
inc
addl
inc
jne
psubq
dec
outsl
es
in
pop
mov
inc
sub
out
pop
or
add
in
jnp
push
inc
dec
xor
dec
test
mov
sub
mov
ret
int
repz
mov
jl
jb
and
inc
pop
xor
push
outsb
ffree
push
es
movsb
fwait
or
inc
sub
adc
adc
cvtps2pd
jmp
jmp
shrb
pop
lret
lods
mov
inc
sbb
lea
mov
inc
into
int3
add
sub
daa
or
insb
ret
cld
dec
jnp
inc
pop
add
jg
es
jb
pop
and
sbb
mov
ret
fcomps
mov
lds
sub
outsb
icebp
xchg
jo
aas
inc
stos
je
sbb
sbbb
rolb
ss
mov
add
push
mov
mov
cmp
lods
pop
movsb
jns
adc
mov
fsubrl
fld
stos
lret
push
inc
adc
sub
ret
loop
jo
mov
pop
incb
mov
adc
mov
pop
pop
iret
lea
repnz
clc
push
add
jle
and
mov
adc
mov
fwait
mov
decl
popa
imulb
in
mov
and
test
pop
push
xorb
lret
add
mov
cmp
pop
jmp
call
mov
nop
cmpsb
add
int
jo
in
stos
sahf
call
bound
addl
cmp
das
push
jb
pop
stos
pop
cmp
imul
js
jo
loope
mov
mov
xor
int3
adc
push
stos
dec
adc
inc
xor
or
xor
jo
cmp
push
and
adc
and
adc
mov
dec
aaa
dec
test
jle
fst
jae
add
sti
xchg
push
sar
test
push
flds
rorb
pop
sbb
add
test
mov
cmc
xchg
data16
add
jbe
test
jecxz
mulb
loopne
mov
ljmp
adc
les
cwtl
cmpsl
into
js
add
inc
and
jg
stos
jle
mov
loop
clc
pop
mov
inc
inc
push
push
call
aas
ds
mov
push
jns
pop
xchg
jl
or
lcall
push
push
js
jo
jecxz
sbb
add
pop
pop
inc
ja
mov
ljmp
adc
ss
ret
mov
fs
cli
xchg
into
jns
mov
scas
adc
aas
sbb
bsf
xchg
dec
jp
das
lret
in
fistpl
pop
mov
call
pop
push
pop
fistpll
in
jge
pop
sub
fldl
mov
jbe
pushf
cmp
cld
and
or
cmp
ret
mov
push
mov
sub
push
fcoml
gs
add
pop
dec
jmp
cwtl
mov
adc
dec
pop
popa
sarl
shll
mov
mov
out
clc
sbb
add
or
sbb
popa
push
and
cmp
mov
loopne
loopne
ret
rolb
pop
push
jp
into
and
loopne
faddl
push
adc
ret
add
mov
shll
mov
iret
aad
xchg
push
adc
pop
or
cmpsl
nop
jl
jnp
xchg
inc
lcall
lock
or
and
push
mov
roll
test
pop
add
loopne
scas
aam
movsl
cmp
adc
fnstcw
loopne
push
xchg
ss
cmpb
repz
push
jne
int3
rolb
sub
add
lds
pop
sub
add
adc
mov
clc
xor
xchg
mov
sti
mov
aam
lea
push
fwait
add
decl
cmp
jae
add
sar
es
ja
cwtl
pushl
add
push
adc
adc
frstor
in
dec
pop
add
push
xchg
enter
add
mov
mov
adc
adc
mov
cld
xchg
std
pop
adc
out
in
shrl
cwtl
dec
test
dec
push
testb
sbbl
cmp
insb
loope
jb
testb
stos
lret
iret
clc
out
or
cmc
repnz
cmpsl
add
data16
mov
mov
addl
add
pop
mov
adcl
lcall
adc
ss
xor
mov
ficoml
lock
fisttps
or
adc
xchg
outsl
push
or
in
xchg
cmpsb
sbb
adc
or
in
in
imul
decb
jae
sbb
fisubrs
pop
es
pushl
std
pop
xchg
and
call
mov
xor
gs
pop
orl
add
push
sahf
mov
repnz
and
sub
jl
rorb
popf
jnp
xor
jg
push
cli
subb
add
add
test
dec
push
mov
out
mov
cwtl
lds
xchg
lds
incb
pushf
pop
push
adc
pop
lea
sub
mov
rorl
jmp
ss
stos
lods
scas
add
out
xor
lcall
test
test
fwait
push
pop
es
push
mov
mov
and
pop
cmp
pop
or
lret
outsl
dec
clc
jno
push
add
xchg
scas
incb
mov
push
mov
adc
call
mov
fsubr
mov
xchg
sub
scas
aam
dec
xchg
rcrl
mov
mov
adc
jo
jp
call
mov
mov
mov
lds
pusha
subb
pusha
sub
out
fstps
push
add
mov
mov
sub
hlt
adc
test
stc
or
mov
stos
mov
mov
sub
xchg
in
fwait
inc
stc
lcall
scas
xor
mov
mov
adc
sarb
fucomip
cli
bound
out
ljmp
mov
pusha
add
insb
rcr
lock
out
les
bound
bound
sbb
lcall
imul
pop
cli
addr16
xor
push
lock
ficoms
movsl
mov
jo
stos
push
cmpb
pushf
push
mov
jae
or
fcmovnu
mov
std
and
push
inc
scas
pop
fcomip
mov
pusha
push
xchg
xchg
mov
fdiv
test
jle
negb
ret
ds
jae
mov
xor
push
aad
subl
outsb
or
rclb
sbb
arpl
in
arpl
jg
ljmp
ljmp
ljmp
cltd
notl
cli
and
pop
adc
cs
adc
push
sub
scas
pop
data16
das
js
loope
mulb
mov
push
adc
push
xchg
sahf
sbb
mov
xor
inc
jmp
push
and
clc
add
outsb
inc
std
negb
cmp
int
xchg
sbb
lock
push
dec
mov
in
clc
ja
inc
adc
push
inc
adc
orl
stos
mov
mov
jo
inc
sbb
ret
lret
pop
mov
adc
shlb
push
xor
adcb
push
push
lods
mov
pop
popa
pop
add
loope
mov
ljmp
add
pop
insl
insb
dec
push
adc
lret
jo
dec
and
add
jo
shlb
push
mov
xor
sub
scas
pop
sbb
arpl
scas
ja
xchg
or
mov
push
push
scas
push
dec
or
fmuls
and
aam
push
or
push
or
mov
in
jl
jle
gs
xor
movsb
cmp
js
sbb
xchg
jecxz
or
mov
aad
mov
xchg
jo
pusha
inc
jp
out
mov
sub
mov
xor
cld
or
outsl
pop
jge
js
sbb
mov
data16
and
cmc
das
test
and
dec
fs
adc
add
icebp
sarl
inc
cli
ret
clc
pop
mov
gs
jl
jbe
xchg
adc
inc
adc
add
jae
xor
incl
mov
mov
and
shrb
sti
pop
dec
jmp
jecxz
or
ja
mov
sarb
scas
inc
sbb
bound
jo
or
push
lods
mov
sbb
mov
add
push
in
shlb
sub
incl
cwtl
mov
push
push
jo
dec
jg
mov
or
dec
mov
sar
lcall
xor
pushf
inc
popa
das
jle
adc
movsl
pop
jmp
out
lods
int3
ror
xchg
jle
mov
jle
sbb
push
rorb
clc
pop
hlt
push
sbb
rcll
pushf
div
add
xor
mov
roll
addl
jge
mov
cmp
pop
pop
pop
jne
aas
pop
movsb
daa
add
ret
xor
or
push
sub
roll
push
arpl
ss
cli
incl
xchg
add
xor
push
pop
shlb
pop
add
cmpsl
pop
or
ljmp
test
cs
mov
mov
or
xor
lods
adc
xor
popa
mov
xor
cs
dec
inc
xor
pop
pop
mov
add
mov
xchg
push
sbb
pop
outsb
loopne
cmc
rclb
adc
or
fimuls
cli
xchg
int3
fwait
insb
xor
add
paddq
fimull
and
lds
adc
add
dec
cld
push
pop
xor
inc
ret
and
add
movaps
call
fdivs
out
lret
ss
jo
icebp
call
arpl
test
shl
cmp
movsb
aas
push
jae
xor
push
push
clc
or
and
les
lds
sahf
ljmp
sub
inc
jg
inc
loope
jge
jnp
ja
dec
xchg
sub
rol
clc
pop
or
or
pop
cmp
add
sbb
xchg
dec
mov
sub
popf
mov
das
dec
clc
xchg
add
inc
test
xchg
sbb
push
mov
add
test
xchg
sbb
icebp
xchg
rorb
sahf
mov
adc
loopne
lcall
add
mov
fwait
pop
mov
shlb
mov
add
mov
mov
jae
dec
jmp
pop
adc
inc
jmp
add
aad
popf
jbe
movsb
imul
test
out
xchg
cld
mov
rcl
dec
fcompl
dec
mov
stc
mov
sub
mov
clc
inc
adc
les
mov
movsb
inc
pop
ficompl
sahf
push
add
aas
sub
dec
xchg
inc
int
addr16
faddl
js
lds
push
out
push
sbb
mov
pop
movsl
mov
and
mov
push
push
decl
loopne
jno
add
test
inc
js
lock
jo
stos
cli
lcall
loopne,pn
adc
repnz
addb
ret
fistpl
cmp
sbb
stos
mov
sti
and
mov
inc
fstl
sarb
psraw
sbb
jb
ss
mov
cmp
add
jb
cmp
sbb
jle
sbb
mov
add
mov
pop
test
mov
fdivs
jmp
leave
cmp
js
mov
icebp
aaa
mov
add
mov
sbb
push
pop
xor
and
in
push
jecxz
inc
inc
call
js
outsl
and
shrb
lock
popa
sti
mov
stc
lcall
add
add
das
sbbb
sub
dec
add
cmp
jg
push
enter
dec
sbb
lods
inc
addl
push
mov
lcall
cmp
or
inc
mov
jle
cld
repz
ss
inc
pusha
imul
inc
shrb
imul
push
das
inc
jbe
fs
add
pop
mov
mov
sbb
gs
and
ljmp
xor
xchg
scas
jns
xchg
repnz
mov
clc
mov
inc
jno
adc
jmp
lret
clc
call
mov
jle
sub
push
cli
mov
mov
lcall
nop
ds
add
fdivrl
or
or
mov
add
jl
out
pop
test
fldl
sbb
mov
sub
jmp
jo
mov
repnz
dec
mov
ja
pop
push
push
out
mov
cmp
lcall
jp
ret
mov
pusha
out
push
stos
clc
xchg
cmp
pop
mov
fmull
inc
enter
in
pop
ja
mov
jp
shr
shlb
popf
and
xchg
jo
mov
test
and
mov
push
iret
or
cwtl
push
lea
inc
adc
test
mov
pop
js
aad
filds
sti
pop
gs
push
pop
insb
ja
repz
cmpsl
inc
cs
push
fstpl
mov
push
test
out
push
ds
out
std
scas
or
inc
sub
js
out
cmp
dec
sbb
ret
push
daa
jo
out
cs
xchg
jbe
out
mov
jge
xor
jb
inc
imulb
movsb
std
sub
mov
or
push
arpl
xor
push
ja
neg
and
xchg
ljmp
out
out
dec
push
jle
mov
sub
cs
ficoml
add
adc
pop
lock
sbb
inc
test
add
addr16
scas
daa
sbb
xchg
stos
dec
mov
jp
clc
or
call
mov
daa
adc
test
shrb
test
jl
mov
das
pop
inc
xor
push
sub
shlb
add
test
lea
xchg
out
inc
xor
mov
lret
add
mov
sbb
enter
mov
mov
mov
push
add
xor
addb
sahf
xor
lcall
dec
ds
in
leave
repz
aam
cli
cli
mov
mov
call
lea
mov
mov
rcrl
dec
pop
inc
push
sarl
dec
loopne
add
lods
xchg
scas
add
outsb
jmp
iret
push
inc
add
fisttps
mov
sub
jmp
outsl
push
popf
inc
sar
or
mov
call
lea
hlt
enter
loopne
sti
and
mov
pop
sbb
dec
mov
movsb
xchg
lea
test
push
inc
das
clc
xor
mov
nop
lods
adc
pop
popf
push
dec
jno
shll
pop
and
call
jb
sbbl
mov
arpl
or
jg
adc
xor
cmp
pop
lock
lods
sbbb
divl
popf
hlt
int
xlat
xor
sarl
push
add
cmp
add
mov
in
fisttpll
scas
cmp
or
cmp
das
bound
cmpsl
mov
add
int
adc
pop
sbb
adc
je
push
push
mov
out
jb
faddl
or
orb
dec
je
jge
mov
dec
jmp
mov
xor
pop
sub
daa
sub
or
js
les
addb
mov
or
add
lret
mov
push
pop
cs
push
ds
lock
or
es
into
clc
push
sahf
test
movsl
jb
pop
adc
or
cltd
das
test
movsl
mov
repz
loopne
imul
or
test
sti
fidivs
pmaxub
mov
dec
les
sub
ret
hlt
in
aad
pop
and
xchg
shlb
ret
lahf
mov
xchg
push
jmp
mov
lcall
test
orb
mov
ljmp
jo
imul
icebp
lcall
xchg
insb
mov
xchg
cli
test
out
xchg
xor
adc
imul
test
xlat
add
sti
fcos
mov
cli
or
and
cmp
andb
adc
sbb
movsb
jb
xor
mov
js
imul
dec
push
mov
mov
sbb
ret
fwait
das
into
inc
pop
adc
scas
sbb
cmp
fs
pop
orb
cmp
xchg
sbb
cli
pop
enter
movsl
inc
dec
es
inc
push
subb
fcomp
xlat
jae
mov
and
es
dec
sbb
jecxz
cld
jbe
mov
jl
cmp
popl
pop
cld
cmp
stos
sbb
mov
sub
jno
xchg
inc
sbb
stos
icebp
jmp
xor
inc
inc
or
sar
adc
add
adc
int3
mov
in
mov
movsb
cmpsb
jo
xorb
fistl
sub
pop
psubusw
test
or
mov
movsb
cmpsb
pop
rcr
jb
mov
inc
or
lock
mov
mov
aad
mov
lock
mov
add
adc
out
sbb
clc
mov
xor
mov
fisubrl
lods
idivl
test
pop
dec
mov
add
mov
sub
add
mov
imul
inc
cmp
or
rcr
ljmp
std
inc
clc
jg
add
out
fsubr
mov
fldl
jmp
test
push
insb
and
adc
outsl
cld
add
dec
mov
rorb
jae
test
sub
push
xlat
inc
xor
and
add
ljmp
or
rclb
ss
push
mov
push
or
add
addb
jg
jo
cmc
pop
inc
gs
mov
es
leave
gs
inc
repnz
xchg
add
mov
dec
or
sbbl
or
adc
out
sbb
pop
add
xchg
mov
incl
add
cmp
cmpsb
or
cmp
stos
pop
test
test
push
cwtl
or
aam
cli
decl
hlt
jb
jle
jp
mov
in
add
inc
les
xchg
hlt
fldln2
jge
fs
mov
ja
jecxz
xor
enter
add
test
adc
mov
mov
rcll
fsubr
imul
in
and
xchg
cmp
mov
stc
push
adc
xor
pusha
xchg
repz
sarb
test
mov
xchg
inc
int3
push
loopne
jbe
loop
xor
lret
int3
add
test
or
pop
pusha
xor
mov
jp
lock
mov
or
pop
mov
add
insb
push
das
sub
or
jbe
jl
fwait
fs
or
push
rolb
test
and
mov
mov
inc
or
push
ja
mov
in
inc
ljmp
or
ds
mov
inc
sbb
pop
cld
add
mov
jbe
and
sub
pop
cwtl
outsl
shll
mov
or
lock
pusha
sbb
add
mov
mov
cmc
test
or
jg
pop
jmp
add
mov
movsb
es
in
pop
negl
dec
mov
outsl
sbb
push
fistpll
and
ja
adc
sarb
out
js
push
in
jp
call
xchg
cld
inc
shll
das
jo
test
inc
push
shlb
incl
enter
push
sub
sub
mov
cmpsb
inc
jl
and
xchg
and
arpl
js
cwtl
sbb
pop
dec
adc
pop
adc
jmp
insl
xor
shll
fstpl
int3
xchg
push
jmp
cld
out
fdiv
sub
sbb
xchg
mov
mov
mov
cmp
push
cmp
pop
lods
cmp
dec
or
test
fs
add
xor
insl
icebp
or
jg
sub
call
jg
pop
lret
sub
scas
ljmp
xor
repz
out
aam
mov
clc
adc
dec
cld
jo
sbb
call
cmpsb
js
cli
clc
mov
pop
test
imul
rcrl
push
insb
xchg
rorl
dec
shrb
jecxz
loopne
mov
clc
negl
mov
push
mov
ss
pop
dec
cmc
scas
cmpsb
lock
add
xor
push
xchg
aas
add
nop
push
sub
add
mov
addr16
mov
fstpt
dec
imul
or
xor
outsb
decb
pusha
inc
jb
sbb
mov
mov
jl
jg
dec
push
mov
mov
or
mov
lret
lcall
pusha
sbbl
mov
sub
outsl
push
mov
lock
adcb
mov
dec
enter
mov
loope
outsl
mov
inc
sub
inc
push
push
ficoms
scas
sahf
out
fdivrs
sbb
xor
ljmp
repz
sbb
les
dec
aam
jb
cmp
push
pop
sbb
add
cmc
add
and
filds
cmpsb
pop
push
xchg
jne
pop
gs
es
clc
push
cld
xor
xlat
testb
aas
mov
cmp
mov
mov
mov
cli
mov
add
dec
pop
push
push
hlt
and
je
js
sbb
jbe
lds
dec
lds
in
sub
xchg
adc
shrl
jbe
shlb
cwtl
and
sub
cmc
add
push
loope
xchg
inc
call
jg
inc
dec
push
insb
sbb
cld
jecxz
mov
pop
sbb
cwtl
sbb
dec
inc
sahf
stos
jmp
push
jl
iret
push
add
pop
xchg
xor
lock
pushl
xchg
adc
out
pop
stos
add
sbb
inc
mov
jmp
and
cwtl
and
mov
dec
mov
pop
icebp
push
lock
adc
push
sub
mov
push
clc
cld
sbb
hlt
movsb
pop
ja
stos
adc
out
mov
loop
pop
mov
cmp
movsb
in
xchg
mov
xchg
mov
fdivs
push
adc
xor
aaa
cld
stc
jl
jbe
fdivs
and
push
adc
mov
movsl
xor
dec
repnz
mov
mov
inc
cmp
sub
xor
fadd
dec
pop
shrb
cwtl
cmp
sbb
push
adc
fwait
sahf
in
icebp
cmp
out
stos
imul
cld
ja
mov
js
xchg
loop
jo
lret
in
incl
pop
xchg
pop
jl
add
dec
fucompp
repz
test
shlb
adc
nop
mov
lcall
sarl
cwtl
adc
insb
and
inc
aam
add
pushf
xchg
scas
aam
movsb
sub
jb
rcr
sbb
jle
fwait
jnp
push
es
xor
xchg
sbb
mov
sbb
lcall
jmp
or
xchg
mov
jle
test
mov
fsubl
mov
sbb
das
inc
pusha
mov
data16
lods
sub
jo
xor
xchg
sub
inc
xor
test
sti
add
imul
and
push
sub
xchg
push
inc
ljmp
out
push
mov
push
mov
das
jl
loopne
in
jmp
push
rorb
daa
mov
imul
insb
push
pop
inc
adc
mov
add
pop
test
or
fs
add
cld
incl
call
add
jno
mov
dec
fcomip
or
mov
je
fnstsw
sub
fisttpl
mov
or
push
sbb
and
outsl
pop
and
mov
icebp
pop
or
xor
inc
pop
fidivl
lds
sbbl
movsb
jle
mov
hlt
lret
or
inc
jecxz
sub
mov
add
xchg
jo
inc
mov
mov
mov
movsl
movsl
fs
push
jp
or
jle
push
jno
arpl
pusha
xchg
mov
pop
loopne
fcmovb
sub
or
movsl
test
adc
sub
push
sti
push
js
xchg
mov
les
jg
mov
mov
mov
dec
adc
sub
pusha
jp
jb
add
mov
pusha
xor
cmp
adc
or
cmp
push
bnd
cmp
lcall
sahf
nop
jge
and
mov
nop
inc
push
mov
inc
inc
sbb
sbb
mov
std
mov
push
decl
mov
jge
cmp
mov
adc
add
fwait
incb
scas
mov
clc
xorl
push
fidivrs
js
xchg
scas
pop
cmpsb
or
lock
aam
rcl
mov
sub
mov
add
mov
push
jae
hlt
jmp
mov
jae
sbb
ss
into
sub
insb
cld
ljmp
leave
pusha
pop
cmpsl
mov
cltd
cmp
adc
dec
add
rolb
add
push
push
test
cmp
xchg
popa
add
fldl
cld
test
push
adc
sbb
add
ret
into
aad
pusha
les
sub
pop
hlt
mov
sbb
into
stc
inc
in
ja
andb
enter
dec
add
jne
mov
pop
jnp
loopne
xchg
push
push
imul
lods
out
add
pop
sbb
fstps
shl
push
push
push
imul
inc
mov
stos
and
jle
sarb
ja
std
push
aad
push
bound
filds
shr
add
push
push
or
movsl
add
movsb
ds
xchg
dec
lods
fdivr
mov
or
sub
adc
fimull
xor
mov
add
fdivs
cmp
pop
dec
test
inc
xor
les
pinsrw
mov
push
xor
pop
movsl
fidivrl
push
dec
jbe
sbb
and
jg
inc
nop
cmpsl
adc
pshufw
outsb
mov
pop
popa
mov
scas
ds
mov
call
add
in
decl
es
in
movsl
mov
xchg
xchg
sub
fistpll
mov
ljmp
sub
xor
das
adc
rclb
aam
sbb
decl
mov
xor
xor
mov
or
add
pop
aaa
sar
mov
jb
enter
sub
stos
mov
mov
add
popf
push
add
sbb
or
stos
nop
in
fwait
into
in
or
mov
ja
nop
in
pop
pop
sbb
adc
xchg
popa
insl
mov
push
scas
pop
pop
mov
sbb
sbb
fildl
pop
sub
cmp
cmp
add
dec
jo
pop
or
jecxz
cwtl
pusha
cs
shll
jecxz
and
aas
and
xor
bound
lock
pop
mov
outsl
shrb
push
mov
or
add
sub
pop
jp
ds
stos
mov
or
sub
aad
rclb
fdivs
cld
pop
add
sub
or
fldl
in
leave
push
ljmp
lcall
fsubr
mov
xchg
pop
pop
lods
mov
pop
sub
sbb
dec
jo
mov
sub
mov
mov
in
cmpb
outsl
fistpl
xchg
xor
and
stc
or
pop
mov
mov
shrb
sub
fidivs
hlt
push
fdivrl
cltd
sahf
ret
jae
pusha
aam
filds
lcall
mov
xchg
ret
nop
inc
xor
jbe
lret
cs
jg
pusha
sbb
insl
jmp
add
mov
fsubs
fsubp
adc
sub
out
sbb
aas
adc
cltd
mul
add
scas
jbe
mov
repnz
testb
adc
mov
xor
and
xchg
and
mov
js
mov
mov
aaa
jl
xchg
dec
dec
dec
mov
adc
lret
std
pop
aad
push
mov
das
mov
sub
add
js
push
insb
mov
or
sbbb
lock
push
icebp
cwtl
dec
adc
inc
and
jp
outsb
je
mov
add
jb
push
sbb
fs
outsb
stos
mov
push
ljmp
inc
jns
test
fdivrs
mov
dec
sbb
xchg
lahf
push
lock
push
mov
rolb
fldt
out
push
xor
xchg
dec
xorb
repnz
push
rorl
ljmp
xlat
pop
into
es
in
push
pop
pop
shlb
push
sahf
xorb
fstps
lock
outsb
add
test
or
pop
sbb
clc
sub
mov
ret
addl
pop
mov
out
iret
lret
movsb
ror
cmp
fwait
es
mov
mov
push
and
cmp
cld
pop
fcomip
jg
pushf
andb
add
aad
and
push
inc
int
aas
push
push
xlat
je
lods
call
push
imul
dec
push
adc
jp
sahf
jb
mov
in
lret
lock
fadds
jae
clc
pop
movsb
mov
enter
inc
lds
fdivrp
leave
icebp
mov
add
mov
cmp
lds
mov
add
rolb
inc
cld
in
and
sbb
adc
adc
and
cwtl
inc
mov
mov
and
ss
push
out
ljmp
stos
int
lcall
xor
mov
shrb
jmp
test
mov
sub
sbb
sbb
xlat
rolb
xchg
jle
push
sbb
xchg
test
fbld
or
xchg
sbb
pusha
fmulp
mov
js
std
jmp
xchg
das
or
mov
repz
pop
cld
cmp
cmp
xchg
test
mov
dec
call
loopne
add
jo
test
in
and
pop
push
shlb
loopne
jp
push
aas
sub
pushf
sbb
hlt
sub
push
fstl
add
sbb
push
das
pop
out
imul
scas
jp
adc
and
stos
sub
and
loope
in
lahf
xchg
dec
pop
daa
stc
test
popl
lock
xchg
loope
dec
mov
mov
jge
push
mov
jge
insb
fcmove
das
mov
xor
sub
pop
notl
cmc
xor
loopne
movsb
and
loopne
xchg
into
fcompl
sub
jg
popa
ret
pop
dec
repz
mov
adc
dec
pop
mov
iret
fists
mov
insb
test
adc
or
adc
or
dec
jmp
int
roll
sub
or
adcb
notb
out
aaa
mov
adc
shlb
and
or
inc
jo
sbb
shl
pop
data16
or
call
jle
insl
add
popa
ljmp
ja
mov
xchg
cmpsb
jo
clc
inc
mov
add
lock
dec
mov
xor
scas
cmpsb
stc
or
dec
push
dec
lds
hlt
mov
std
dec
or
add
lds
in
data16
mov
cltd
xchg
test
push
std
and
sub
cli
push
ret
sub
adc
mov
push
jbe
jle
inc
inc
fstpt
add
cltd
in
cs
in
jmp
and
repz
sbb
adc
pushf
fidivrl
mov
call
lods
xor
mov
push
subb
pushl
and
es
adc
pop
inc
icebp
jle
movsb
aas
and
add
cwtl
cmpsb
aaa
lock
mov
mov
xchg
dec
test
push
fsts
fwait
pop
push
dec
xor
cmpsb
mov
dec
std
loope
mov
daa
cmpsl
stos
sbb
cmp
adc
push
addr16
jle
jo
shr
and
aad
xchg
add
inc
setge
call
xchg
xor
jl
inc
sbb
dec
push
cmc
mov
mov
mov
jle
rcrb
push
or
cmp
pop
adc
jmp
data16
cmpb
push
movb
xchg
dec
int
lea
gs
sar
andb
xchg
mov
mov
shl
cwtl
scas
fimuls
addr16
push
mov
clc
pop
jg
jecxz
inc
xchg
aam
inc
mov
sub
jmp
outsb
test
add
lea
xchg
jmp
adc
push
inc
cmp
das
hlt
cld
int
dec
inc
mov
inc
lods
adcb
and
loope
dec
nop
sbb
lods
test
pop
add
adc
scas
jge
ljmp
and
push
xchg
nop
rcrb
fistpll
incb
sahf
sbb
and
enter
or
add
xor
sbb
pop
fsubl
mov
ljmp
ss
and
loope
and
lock
lods
data16
sub
jbe
sub
movsl
fistps
cmp
push
mov
in
add
and
lret
xor
cmp
enter
cwtl
test
or
icebp
push
scas
or
lods
add
loope
sti
cmp
fmull
pusha
dec
jmp
xor
ficomps
mov
adc
ljmp
mov
mov
enter
mov
jb
mov
lret
sbb
rcrl
inc
push
ficompl
jo
scas
sbb
sbb
push
pop
pop
ja
ds
xor
imul
es
jle
and
dec
mov
cmp
pop
jo
lock
mov
nop
pusha
pop
mov
call
aam
add
loopne
sub
lds
jno
test
sarl
adc
ret
cld
aaa
dec
ja
xor
pop
mov
mov
sub
cmp
xor
or
add
pusha
xchg
lret
and
cmp
negb
or
xchg
jl
cmpsb
imul
mov
adc
sub
mov
pusha
fistps
or
dec
test
outsb
call
xchg
mov
adc
push
adc
in
jo
mov
mov
push
inc
fldl
xchg
jle
adc
lods
and
repnz
mov
mov
leave
cmpsb
fcoms
jno
add
stc
jo
adc
and
and
dec
lods
add
sbb
lock
cmp
hlt
fcmovbe
das
xchg
mov
pop
push
ficoml
lret
movsb
inc
add
cmp
inc
rolb
lret
push
rcr
inc
mov
jne
repz
cli
js
sbb
scas
sti
repnz
sar
aad
dec
or
add
icebp
push
push
cmp
adc
xor
fnsave
js
jno
or
inc
push
scas
clc
xchg
mov
mov
push
xor
jg
loope
jmp
mov
js
xor
scas
mov
fcoms
decl
mov
cmp
push
scas
lods
jno
add
das
add
sar
lcall
pusha
pop
enter
aaa
rorl
xor
movl
xchg
lea
or
jp
lcall
ja
push
sahf
lock
xchg
pop
cmpb
pop
adc
push
je
pop
xchg
mov
imul
mov
sbb
shr
cmp
dec
cld
add
mov
rclb
jae
insb
pop
jno
cmp
test
mov
hlt
or
mov
imul
xchg
xchg
incl
and
sub
inc
xchg
mov
lcall
shll
shlb
push
shrl
fisubs
test
pushl
inc
jecxz
and
jb
inc
mov
xchg
mov
and
cmp
inc
sbb
mov
mov
idiv
int
add
jnp
les
and
sti
pop
fisubrs
mov
jb
inc
ret
call
sbb
ja
xlat
stos
and
push
sub
iret
push
shl
in
in
mov
pop
hlt
out
test
sub
pushl
addb
in
mov
lods
mov
push
call
sbb
stos
mov
test
pushf
call
xchg
scas
ret
loop
das
and
pushf
daa
and
movsl
inc
loop
xorl
mov
cli
push
mov
xlat
inc
popf
sbb
mov
jo
sbb
loop
decl
dec
jnp
mov
inc
adc
mov
aaa
xchg
mov
dec
adc
xchg
pop
ss
pusha
mov
pop
cmp
pop
insb
shll
and
lock
sbb
pusha
adc
shlb
rcll
repz
outsb
adc
into
in
lods
and
cmp
and
loope
fwait
or
adc
pop
rolb
cli
subb
xchg
or
test
leave
paddw
jne
call
nop
clc
push
mov
loope
add
mov
or
aam
test
fucomip
addb
dec
add
dec
inc
ljmp
fs
das
rcrb
pushf
rol
leave
xor
cmp
movsb
jno
mov
out
loopne
dec
outsl
loop
js
mov
pushf
or
adc
shlb
ljmp
push
in
pop
jmp
adc
fnstsw
icebp
incb
push
sbb
int3
add
je
fst
jg
inc
mov
cmpl
cmp
cld
sub
xchg
or
outsb
or
leave
cmp
xchg
jne
pop
and
sub
pop
repnz
push
out
rolb
in
add
or
rcrb
clc
cmp
sub
push
add
add
icebp
cmp
inc
push
add
orb
test
xor
lcall
out
pop
sbb
dec
aas
xor
and
mov
jmp
dec
inc
xchg
xorb
mov
aas
dec
push
adc
jg
and
ss
jmp
cmpsl
loopne
xor
lock
movsb
mov
mov
xor
dec
or
and
adc
mov
int3
ja
inc
pop
mov
int3
cli
push
outsb
add
cmc
ja
and
push
jb
bound
xor
pop
sbb
or
out
fildll
movl
aad
mov
jle
call
outsl
scas
incb
add
inc
sub
pushl
add
lahf
jecxz
jo
test
xlat
sar
jl
insb
or
push
add
dec
test
or
pushf
pop
insb
adc
movsl
add
mov
call
mov
xchg
movb
into
xchg
mov
inc
push
inc
push
xor
fs
jo
in
cmp
cmpsb
ficompl
inc
jo
mov
pushl
pop
pop
pushf
fdivl
movl
dec
test
inc
std
and
test
cs
out
cmp
icebp
stos
cmpsl
mov
push
xor
sbb
faddl
or
add
push
cld
fisttpl
das
push
mov
std
mov
adc
jmp
ja
sub
and
mov
push
mov
loop
mov
rclb
mov
rorb
add
inc
js
fsubrl
mov
jbe
les
jo
jle
test
rclb
data16
in
in
or
loopne
loopne
jl
ss
inc
pop
mov
jne
jne
mov
cmp
inc
dec
sub
xchg
cld
jo
nop
push
adc
mov
dec
sub
clc
sbbb
adc
addb
add
test
pop
push
inc
mov
ret
inc
int3
in
mov
mov
xchg
push
xchg
clc
add
inc
push
sub
add
call
stos
dec
shrb
testb
ret
mov
decl
jo
fistpll
mov
rcl
fidivl
ret
clc
pop
sbb
subl
int3
rdtsc
jle
es
outsb
fdivrl
xor
shll
mov
loopne
inc
sub
test
popa
sti
cs
dec
aam
jl
sub
inc
cmp
xorb
or
rcrb
lock
dec
push
jnp
add
and
les
out
fcmovne
clc
inc
jl
int3
fadd
jl
decl
sti
das
xchg
jp
andl
fst
shlb
or
imul
fadds
jo
cmp
push
add
add
bound
imul
shr
test
pop
icebp
ja
inc
cmp
sbb
mov
dec
mov
pop
leave
push
dec
shlb
dec
into
sub
test
nop
cwtl
cmp
or
mov
add
or
shlb
insb
sbb
in
mov
mov
mov
es
mov
jb
fbstp
das
adc
repnz
ret
sbb
std
adc
dec
lods
sub
ljmp
clc
or
test
sub
push
pop
cli
cmpb
movsl
inc
cmp
les
call
fadd
cmpl
sub
inc
ss
adc
insb
dec
scas
call
jecxz
into
scas
mov
paddw
mov
ret
in
rol
ljmp
aad
xchg
sub
dec
testl
and
das
fsubl
je
dec
push
mov
xor
enter
xchg
xor
xchg
and
fcoms
cwtl
lods
pusha
add
pop
stos
pop
mov
rcl
in
inc
cmpsb
lods
cmpl
or
outsl
das
rcrb
pushf
jg
push
inc
push
je
shll
push
add
inc
out
shlb
sbb
pop
inc
push
sub
decl
push
sbb
mov
add
sub
stos
movsl
cmc
push
cld
outsl
inc
mov
xchg
sub
jbe
add
decb
in
xor
xor
and
cmpsb
std
rclb
sbb
std
loopne
adc
or
jmp
sub
add
jns
sbb
adc
sbb
pop
std
jmp
add
icebp
movsl
outsl
cmp
jmp
gs
and
xor
or
pop
sub
xlat
pushl
and
xor
and
mov
lcall
orl
ljmp
and
jmp
insb
loop
push
sbb
mov
std
aaa
ror
add
repnz
stc
push
xor
lock
add
aas
sbb
pop
sahf
cmp
inc
daa
or
and
or
mov
bound
xor
fimuls
hlt
fs
and
call
cld
int
shl
add
out
clc
es
out
ja
aaa
fmull
jecxz
ret
push
mov
sbb
fs
mov
add
std
fsub
and
ja
inc
or
outsl
add
xchg
push
mov
inc
push
ljmp
push
sub
mov
sub
add
fdivrs
adc
pop
mov
jb
bound
les
xor
popf
and
roll
bound
xchg
mov
in
mov
push
push
push
subl
sbb
sar
or
pop
data16
std
fidivrl
push
add
out
add
mov
fdiv
enter
jl
jo
push
lods
xchg
jnp
mov
push
imul
pop
inc
xchg
shrb
sbb
adcl
mov
and
lods
aaa
ret
adc
xchg
sub
int3
or
sbb
ficoms
jl
or
into
xorl
out
jmp
outsl
jg
add
subl
sub
fiadds
clc
out
push
cld
aad
std
in
mov
int3
push
xchg
jl
outsb
call
fwait
xchg
data16
stos
cmpsl
cmp
fimull
iret
into
add
or
dec
push
insl
add
add
mov
testb
adc
mov
les
sbb
add
sub
mov
mov
adc
out
mov
int3
je
or
pop
cmc
addr16
lods
mov
push
callw
add
faddl
sub
mov
sub
int3
aas
pop
inc
imul
imul
fnstsw
lock
sub
movsb
lock
xchg
add
push
xchg
push
je
js
fsubrs
ljmp
push
mov
das
ret
dec
mov
sbb
in
mov
mov
add
das
adc
es
lds
in
mov
mov
or
mov
insb
cmp
or
divb
pop
push
mov
mov
nop
sbbb
and
pop
pop
std
push
pop
pusha
push
ds
and
movsb
mov
fimull
adc
lcall
test
adc
std
mov
pop
or
sub
add
or
or
rclb
push
xchg
repz
and
pop
add
add
pop
mov
sub
mov
add
daa
mov
movb
xchg
addb
cmc
aas
add
pop
lods
pop
xor
xchg
popa
test
sarb
cmp
xchg
das
lods
sarl
cwtl
cmp
xor
stos
or
push
xchg
pop
mov
jg
fwait
je
lcall
sbb
ret
or
sarb
push
loop
mov
pusha
incl
xchg
out
push
and
rcrl
loop
cld
test
cli
jp
inc
cmp
adc
add
adc
sbb
cmp
push
jb
iret
sbb
xchg
test
pop
rcrl
mov
cld
frstor
xor
lods
aas
or
aam
clc
pushl
cmpsb
mov
or
xlat
aas
add
ljmp
stos
jl
sbb
jo
movsl
dec
mov
roll
daa
jne
or
mov
clc
and
in
xor
bound
mov
mov
push
adcb
dec
cmp
cmp
pop
jmp
out
mov
mov
adc
lods
push
in
mov
addb
fs
lods
clc
lods
mov
hlt
or
adc
lcall
stos
dec
inc
jbe
jl
outsb
aam
jns
cmp
push
or
adc
sbb
inc
jle
push
push
and
push
fistl
add
mov
adc
int3
or
test
call
adc
addr16
inc
mov
xor
inc
sub
fstp
shlb
icebp
jle
mov
lds
mov
popf
into
call
jne
shlb
push
push
sbb
lcall
push
inc
imul
xchg
mov
out
cmp
pusha
fisttps
in
pusha
out
lret
repnz
and
out
fcoms
dec
fcomip
dec
mov
jo
test
dec
scas
push
test
notb
dec
repnz
enter
out
rcrl
fwait
cmc
mov
daa
pop
push
fucomip
xchg
hlt
testl
clc
stos
and
aas
add
ror
cmpsb
or
test
cmp
mov
data16
lret
sub
jg
cmp
call
fcomps
or
pop
add
xchg
out
add
push
push
out
sub
enter
subl
adc
xchg
shrb
pop
ficompl
pop
and
sbb
add
adc
mov
jbe
inc
push
popf
xchg
clc
call
mov
sub
loope
or
mov
enter
add
cmp
push
call
inc
xchg
dec
shrb
push
orb
nop
pusha
xor
lds
lea
xchg
lock
mov
fwait
adc
insb
or
mov
shrb
adc
add
arpl
outsl
and
jle
cmp
inc
jo
shl
lcall
jmp
inc
adc
pop
sbb
movsl
or
add
and
inc
cmp
push
pop
add
mov
aaa
dec
call
adc
mov
lret
in
ret
push
iret
pop
lahf
inc
jl
scas
cli
hlt
mov
pop
dec
mov
outsl
xor
jmp
add
or
mov
mov
loop
les
pop
mov
addb
popa
jp
xchg
and
daa
add
lock
xchg
xchg
mov
sub
jne
fwait
push
scas
xchg
sbb
in
add
int3
lret
addl
test
and
dec
add
fnstsw
pop
mov
add
out
cwtl
jmp
ret
xlat
cmp
clc
ja
adc
scas
or
int3
adc
inc
das
bound
cmpb
aaa
pop
push
and
rorl
js
out
push
lock
fwait
lds
xchg
mov
jne
mov
push
shl
adc
cmp
pushl
jo
testb
fsubl
cmp
and
sub
enter
js
sub
inc
inc
mov
lret
ljmp
sbb
xchg
mov
push
out
lods
mov
mov
inc
jb
cmc
ljmp
push
fs
lahf
xchg
sub
icebp
xor
aam
mov
addl
ljmp
push
dec
jg
lock
call
cltd
loop
mov
dec
icebp
adc
nop
pusha
mov
mov
addr16
movsb
mov
fiadds
inc
cwtl
ss
pop
add
push
and
push
xchg
in
mov
insb
jp
orb
outsb
ss
cmpsb
sbb
xchg
rorb
lsl
pop
mov
in
push
stc
sbb
out
sbb
pop
pop
sub
leave
mov
cmc
jg
sub
pop
dec
mov
push
jo
fwait
mov
adc
cwtl
mov
mov
push
inc
popa
xor
pop
sbb
loopne
packsswb
and
pop
lcall
dec
outsb
mov
scas
into
inc
jp
mov
jle
mov
aas
icebp
and
pop
xor
cmp
call
mov
repnz
sub
loope
adc
adc
fidivl
js
idivb
cmp
xor
sub
imul
ret
insb
in
js
je
xor
insb
lret
mov
mov
pop
subb
in
popa
jl
or
jge
sahf
mov
pop
call
push
xchg
mov
pushf
je
pop
aam
xor
lret
cs
das
fistps
jb
jecxz
into
into
insl
cmp
inc
cld
test
lret
cltd
add
mov
ror
shlb
loope
sahf
orb
push
pop
test
and
cld
int
or
mov
sub
or
add
mov
aam
pop
mov
jg
loopne
mov
cmp
inc
inc
in
scas
aaa
add
stc
xchg
jns
add
cmpsl
es
je
call
mov
or
es
test
ljmp
ret
rcll
js
mov
adc
lret
jl
outsl
mov
loop
sarb
fmull
mov
inc
movsb
add
xchg
xor
or
mov
int3
movsl
mov
sub
xchg
dec
mov
ret
aaa
push
ljmp
sbb
sbb
lds
jl
out
sar
jbe
push
in
incl
adc
jmp
mov
jp
pushw
xchg
add
jle
dec
xchg
cmc
repnz
aas
repz
fwait
mov
cli
and
gs
incl
push
dec
mov
shld
xor
xchg
sarl
cmpsb
add
push
push
sbb
ficoml
adc
pop
ret
sub
push
sahf
push
fwait
test
inc
xchg
loopne
aad
les
xchg
cli
call
adc
pop
leave
cmp
nop
xchg
pusha
dec
icebp
mov
sub
xor
add
mov
dec
lds
hlt
mov
push
jmp
cwtl
clc
cld
orl
je
ds
sub
jg
jle
es
adc
ja
fdiv
decl
std
insb
sbb
es
ja
mov
stc
inc
pushf
push
cmp
aaa
sub
dec
add
test
dec
js
mov
and
pop
cmp
stos
sub
xor
inc
sbb
lods
mov
aad
mov
pop
xor
fdiv
pop
pop
dec
mov
lock
cwtl
ficoms
and
cwtl
mov
fwait
sub
or
mov
fstpt
dec
cld
outsb
dec
add
rorl
dec
or
dec
push
repnz
lret
push
scas
in
imul
jg
mov
or
repz
add
dec
rorb
sar
add
sub
addl
out
jecxz
or
cmpsb
subl
enter
out
mov
mov
pop
or
sub
add
pop
push
out
lea
or
es
xor
fbstp
cli
inc
in
add
ss
add
bound
ljmp
lds
jbe
stc
mov
inc
jo
cmp
sarl
jae
in
add
mov
add
push
mov
adc
cli
cmp
mov
jbe
icebp
dec
or
mov
shrb
call
or
push
or
je
dec
addl
js
pop
dec
push
cltd
mov
push
add
mov
sbb
mov
jmp
fsub
call
push
fbstp
icebp
xor
inc
sbb
mov
add
fs
incl
mov
pushf
test
pop
mov
lahf
popf
xlat
enter
cli
adc
movsb
cmp
add
enter
fisubl
pop
xchg
jbe
or
aaa
cld
xchg
cwtl
sti
imul
inc
add
lcall
cmp
sub
jp
mov
repnz
sbb
data16
pop
mov
int
pop
and
outsb
insb
xor
cwtl
sbb
test
push
into
pushf
dec
dec
mov
xor
lods
push
leave
int3
mov
cmp
mov
or
and
mov
mov
sub
rorl
or
or
ret
add
mov
mov
inc
mov
fimuls
adc
mov
push
or
pusha
and
out
push
mov
adc
push
cmp
inc
sub
adc
add
push
jmp
push
shll
inc
ljmp
push
dec
js
sub
sbb
sbb
cmpb
cld
scas
mov
lods
dec
sbb
cli
cmp
icebp
stos
pop
hlt
fwait
ljmp
cmp
pop
jmp
sub
pop
inc
cli
mov
pop
pushl
mov
int3
jg
in
push
dec
jecxz
mov
in
xchg
lds
add
idivb
mov
pushf
mov
stos
jmp
push
insb
add
lahf
adc
dec
mov
cs
cmp
jmp
ss
cmp
add
nop
mov
sti
call
pop
cmp
or
add
jmp
or
xor
es
bnd
xlat
decl
pop
and
fdiv
test
sub
insb
mov
xchg
inc
scas
xor
xlat
pop
sub
je
jp
and
fidivs
xchg
rcl
mov
mov
mov
ja
je
jmp
dec
jb
add
popa
repnz
mov
lahf
jb
cmc
loope
loop
jb
and
insb
jecxz
and
cmp
ds
loop
popa
xchg
mov
imul
pop
push
fsubrs
rcrb
pop
xchg
adc
in
jb
dec
or
jns
or
mov
push
stos
aad
pop
push
leave
mov
pop
mov
sub
dec
dec
cmp
shrb
sub
test
mov
xchg
cmp
xor
data16
sbb
xor
xorb
sub
out
push
std
adc
pushf
sbb
add
vsubss
aam
fst
aaa
or
test
aaa
pushf
mulb
inc
adc
icebp
das
pop
fisubrl
scas
xor
mov
aad
lods
mov
jne
jae
xchg
test
cmp
pop
and
arpl
outsb
cmp
jge
popa
dec
decl
and
sub
mov
outsl
pop
fs
inc
mov
push
jne
cwtl
mov
sbb
xchg
icebp
sub
mov
or
daa
popf
aad
add
add
std
ljmp
fdivs
ret
mov
out
xchg
mov
cs
std
sbb
xor
push
js
sbb
outsb
cmp
mov
jbe
shlb
mov
or
fdiv
sahf
ljmp
fldt
sub
je
mov
sub
fs
push
or
lahf
repnz
and
outsb
jge
sti
add
adc
fisubrs
add
les
lahf
or
lock
mov
xor
int
jmp
xchg
shlb
lds
insl
icebp
sbb
jo
mov
inc
dec
sub
notb
mov
cmp
mov
lods
out
scas
and
call
pop
aad
lock
and
sub
and
icebp
call
cmp
mov
mov
fidivs
push
dec
fisubrl
loopne
scas
popf
aas
xor
bound
leave
mov
push
ja
adc
test
imul
jno
popf
shll
xor
les
ja
xor
jg
add
fs
das
int3
ret
adc
in
decb
pushf
xchg
xchg
addl
js
inc
out
jl
inc
std
dec
xchg
fimull
lea
lret
bnd
popf
cmpsl
jo
add
jle
sbb
enter
add
je
scas
push
add
decl
jle
push
movsl
add
insb
push
or
xchg
mov
pop
outsb
lret
xchg
mov
and
or
mov
mov
mov
mov
push
in
test
sub
jbe
push
mov
adc
fstp
push
dec
dec
push
push
es
stos
nop
add
in
cmp
imul
cld
mov
pop
inc
call
scas
xchg
lods
int3
xchg
notl
ljmp
rcrb
add
jl
xchg
xor
fwait
incb
sbb
mov
rol
sub
or
mov
push
cld
pop
or
add
negl
arpl
aaa
mov
jle
sbb
stos
dec
aad
in
xchg
nop
jle
add
ljmp
and
pop
cmp
adc
call
pop
cmpsb
sub
enter
push
loopne
lea
mov
cld
pop
out
pop
mov
mov
test
cmp
and
mov
shlb
lcall
subl
push
xor
jmp
cld
or
in
pop
cmp
mov
outsl
in
push
push
rclb
mov
fistps
fwait
mov
xor
arpl
jle
add
ret
in
mov
notb
outsb
xchg
pop
pop
mov
insb
sbbl
dec
adc
push
inc
jo
cmp
ret
pop
hlt
mov
mov
leave
cli
xchg
push
std
stc
pop
mov
lret
ljmp
add
sub
lea
out
mov
ljmp
outsl
add
jae,pn
dec
xorb
pusha
repnz
ds
lods
xchg
xorb
loope
ss
and
das
insb
mov
fadds
ja
ret
mov
jl
jle
test
pop
adc
data16
ss
pop
rcl
movsb
cli
or
fcoms
jg
inc
mov
mov
fldl
scas
xchg
mov
inc
testb
xor
movsb
inc
popa
adc
adcb
ret
insl
add
ds
incl
mov
dec
rclb
and
icebp
inc
xor
ja
adc
nop
dec
jg
or
mull
lret
fidivs
loopne
bound
dec
xchg
andl
stos
sbb
or
ss
or
jle
sub
adc
push
hlt
into
mov
add
scas
mov
fbld
ss
push
add
out
mov
fbld
rol
and
xchg
and
outsl
mov
ror
aaa
and
dec
adc
hlt
cmpsb
cmc
sub
xor
movsl
loopne
push
xchg
pop
mov
xchg
dec
mov
in
orl
les
xchg
push
cli
push
mov
lret
add
sbb
scas
sub
ret
xchg
in
ljmp
jmp
mov
cmpsb
sub
into
adc
mov
adcb
lea
sbb
adc
call
mov
cld
or
fcmovu
adc
push
pop
bound
mov
xchg
jl
add
sbb
cmpsl
mov
fwait
outsb
push
lahf
inc
decl
mov
insb
cmp
scas
pop
mov
mov
adc
incl
outsb
mov
jno
sub
inc
daa
add
mov
jecxz
push
es
repnz
shll
fcomip
cmp
sub
mov
jo
sub
test
in
or
xor
gs
dec
adc
mov
push
and
lret
pop
add
aam
clc
adc
add
adc
xor
sbb
sub
fwait
mov
sti
out
and
mov
fmul
xchg
inc
fwait
push
inc
jecxz
pop
divb
pusha
jbe
repnz
test
out
sub
jns
sbb
pop
jbe
fdiv
add
lret
mov
fcomip
jb
repz
pop
sub
bound
loopne
mov
call
and
add
pop
inc
ds
cmc
push
xchg
push
lea
sub
mov
je
fisubs
je
sbb
aas
dec
test
add
loopne
nop
pop
scas
sbb
add
fcomps
lcall
in
fsubrl
mov
or
neg
or
pop
fdivs
aaa
sub
jmp
pushf
jmp
fidivs
mov
dec
xor
mov
in
in
jle
or
test
cmp
dec
inc
stos
pop
xchg
xor
mov
sub
push
shrl
xchg
cmpsl
or
push
test
inc
add
fprem1
mov
das
clc
pop
mov
dec
icebp
or
dec
sub
divb
loope
push
bound
in
cmpsl
sbb
insl
pop
cmc
ljmp
pusha
add
lahf
cmp
rcrb
xchg
cs
es
mov
cmp
ret
clc
ljmp
lock
xchg
xor
mov
scas
add
adc
std
ds
add
add
sbb
in
jp
push
out
into
lret
or
lret
mov
shl
mov
filds
mov
aam
shl
scas
outsl
mov
pop
push
str
addr16
mov
push
inc
jmp
jl,pn
movsb
cmp
rclb
and
dec
sbb
inc
outsl
add
jp
mov
jmp
out
ljmp
xorb
rol
or
push
outsb
clc
popf
jge
xchg
jbe
ljmp
cmp
mov
cli
cmp
lock
and
lock
data16
or
add
std
xchg
push
or
notb
adc
dec
outsb
adc
jne
add
mov
test
leave
sbbb
inc
fidivrl
inc
mov
in
mov
into
sbb
and
mov
push
inc
xor
cld
add
pop
test
rcr
lret
sbb
cmp
sub
lcall
cmp
sbb
push
pushf
test
and
cmp
cli
insb
arpl
in
and
pushl
jmp
and
cld
mov
xchg
add
mov
lcall
lea
imulb
insl
mov
dec
cmp
and
sarb
jecxz
jl
popa
mov
xchg
fsts
push
sbb
cmp
jmp
outsb
andl
pushf
inc
pop
or
push
pusha
xchg
loop
sbb
aam
adc
lock
test
pusha
jo
incl
pop
int3
xor
repnz
jmp
add
cmp
or
aad
dec
mov
in
inc
outsb
dec
or
push
test
jb
std
push
xor
mov
add
add
cld
fisubs
xchg
push
add
adc
fisttpl
lcall
inc
mov
pop
or
push
imul
adc
add
sub
add
int
sbb
jo
pop
mov
push
andb
sbb
push
jg
movntps
adc
mov
pop
or
xor
ljmp
mov
js
mov
pop
add
leave
movsb
cwtl
lahf
pusha
dec
jmp
into
push
ds
adc
jae
push
loopne
mov
jg
ficoms
fmull
mov
adc
xchg
push
loopne
sub
add
loop
es
pop
aam
in
jns
test
pop
mov
mov
ret
loopne
cmp
or
and
in
jl
ret
les
or
jae
mov
jbe
loop
outsb
imul
clc
add
mov
mov
ljmp
aam
pop
aas
out
repz
mov
out
mov
stos
mov
pop
cld
rcl
xchg
cmp
mov
jle
and
cs
xor
and
xchg
cs
das
add
inc
scas
add
xor
mov
jb
in
mov
add
or
pop
adc
fsubs
scas
outsl
out
adc
call
push
xchg
das
je
add
sbb
ret
std
and
push
inc
inc
push
clc
jno
or
mov
gs
mov
out
push
mov
fidivl
out
xchg
ljmp
pop
pop
xor
jmp
in
and
js
pop
cmp
push
stos
add
pushl
je
mov
push
into
sbb
inc
aas
sbb
cmpsl
add
loopne
jmp
ljmp
push
gs
rcrb
mov
das
cmp
test
scas
sbb
repnz
int3
mov
iret
rcr
push
cli
lcall
cmp
hlt
iret
push
xchg
xchg
popa
int3
icebp
in
add
das
in
call
and
push
filds
dec
lret
push
adc
jle
sub
pop
mov
and
add
xor
xchg
outsl
add
add
inc
or
lret
add
mov
nop
in
mov
cmp
out
enter
inc
add
jbe
pop
pusha
fs
jb
xorl
lcall
xchg
add
sub
cmp
imul
xor
test
xor
mov
movsl
mul
and
push
rcrl
sub
xchg
sbb
stos
mov
je
subl
lret
test
mov
stos
testb
jg
xchg
pop
mov
addb
mov
ljmp
and
cmp
sti
fiaddl
out
rcrb
icebp
xor
roll
mov
loope
mov
stos
mov
add
or
sub
and
inc
les
inc
repz
or
inc
repz
push
hlt
jmp
pop
mov
and
mov
imul
and
in
aad
push
push
mov
decl
repz
rclb
sbb
add
mov
push
fsubrs
xor
adc
lods
mov
repz
ljmp
lcall
inc
shrl
cmpsb
inc
test
in
or
bound
addr16
dec
loopne
dec
xor
out
push
sbb
add
adc
lods
loop
push
push
sbb
mov
inc
and
jns
sub
push
dec
cmove
test
les
repz
fdivrs
xor
cmp
jo
inc
inc
loope
jle
mov
pusha
ficoms
push
mov
lock
lock
and
test
push
decb
sbb
push
aaa
inc
ret
cmp
adc
fcmove
or
jge
adcl
or
push
push
dec
std
mov
or
xor
mov
fnstsw
ljmp
cmp
mov
push
das
jmp
jno
add
call
mov
xchg
dec
add
jle
cmc
push
insb
movsb
lods
xor
xorb
in
std
out
mov
fidivrl
lea
add
and
ljmp
jmp
pop
scas
fidivrl
sbb
pop
sub
mov
shrb
or
std
jg
cli
scas
leave
inc
mov
cli
mov
jbe
int3
insl
pop
mov
out
negl
sbb
sbb
adc
sub
or
mov
push
push
hlt
or
or
ljmp
mov
pusha
sub
xor
aas
jecxz
aas
push
cli
xor
addr16
add
packssdw
add
rclb
dec
cmp
fists
adc
inc
push
sub
jmp
aaa
mov
test
push
loope
les
cld
fsubr
fwait
sbb
or
gs
jp
outsl
movsb
xchg
push
fcoml
xchg
sbb
pop
inc
add
icebp
mov
mov
jle
lcall
repz
sub
xchg
hlt
into
inc
and
gs
cmp
gs
mov
cmp
js
push
repz
stos
test
je
shr
orl
and
add
jmp
sub
fbstp
lock
jb
sahf
movsb
push
cmc
cmp
xchg
sti
pop
and
jo
scas
xchg
cmp
clc
icebp
sbb
pop
dec
cmp
inc
add
or
decl
faddl
into
aaa
and
cmpl
out
inc
inc
scas
cmp
inc
scas
push
stos
pop
popf
sbb
cmpsb
mov
add
sbb
push
jo
jle
pop
cmp
mov
imul
jecxz
mov
xchg
mov
jne
jl
mov
lcall
sbb
pop
fnsave
sub
adc
lock
loopne
stos
sbb
sbb
test
mov
lret
mov
es
cs
mov
mov
loope
mov
or
test
xlat
ret
movsl
cld
push
xchg
cmp
stos
pop
mov
jg
push
push
add
push
repnz
in
ds
jg
push
and
sub
mov
sub
push
add
xchg
inc
jb
outsl
mov
or
test
pop
cltd
jno
lea
xchg
nop
xchg
loopne
cmc
pop
ret
sub
add
sub
cmpsb
push
loopne
mov
lods
mov
jnp
lock
sbb
push
aad
lea
sub
je
test
fidivrs
inc
sbb
sti
xor
test
pop
cmp
arpl
stos
fidivs
sbb
lock
cld
pop
aam
add
cmpsb
enter
loope
push
mov
fcomip
mov
or
pop
in
mov
mov
ljmp
jg
filds
pop
hlt
xlat
out
xlat
sub
adc
pop
mov
lret
test
sahf
enter
ss
cli
dec
dec
stos
push
movsb
in
jmp
aam
xchg
jne
and
das
mov
xorb
sbb
int
xchg
mov
and
insl
pop
push
dec
jae
cmp
pop
and
loop
andb
mov
jg
mov
loopne
add
mov
loop
pop
add
or
ljmp
cmpsb
shl
add
nop
xchg
sbb
mov
sub
in
clc
scas
clc
pushl
cmp
mov
repnz
mov
fsubrl
inc
jp
add
in
out
push
and
add
jg
cmp
and
das
arpl
mov
in
cmp
ror
mov
push
jl
xor
mov
bound
pusha
xlat
jg
xor
out
add
gs
lock
or
or
aaa
jge
xchg
pushf
pop
sti
sub
sbb
fidivrl
push
xlat
repz
stos
aaa
push
je
pop
and
mov
sbb
add
add
bound
cmp
sub
cmpb
negb
or
dec
into
dec
dec
ljmp
icebp
push
icebp
lds
enter
adc
xor
and
les
hlt
out
sar
fldcw
inc
sub
and
mov
push
adc
fimuls
inc
mov
xor
xchg
pop
pop
inc
loope
sahf
dec
mov
in
fisubl
rolb
cs
dec
notl
jno,pt
repnz
fwait
pop
mov
fdivrp
arpl
adc
pushf
mov
pop
mov
lcall
fstps
push
iret
push
xchg
add
insb
loopne
notl
repnz
mov
or
mov
sbb
pushf
movsl
cmpsb
movsl
lcall
int3
xor
scas
pop
fmul
adc
es
pop
ds
jp
cli
pop
clc
xchg
sbb
adc
pop
mov
mov
jo
mov
mov
scas
push
out
mov
insb
leave
subb
mov
dec
js
jl
mov
cmp
jbe
lret
add
pavgw
testb
mov
pusha
xchg
ret
xor
and
mov
les
inc
aam
cmpl
lock
mov
and
gs
dec
sbb
add
fwait
pop
mov
cmp
ficoml
repnz
cmp
xchg
sti
fldl
push
mov
mov
cmpsb
int3
or
cli
push
xchg
mov
fcoms
push
add
outsl
adc
cmp
andl
lods
insb
mov
sbb
shlb
aam
lcall
mov
rorl
inc
cld
test
movsb
mov
fs
xlat
ss
fcomip
stos
mov
push
ja
adc
sbb
loopne
push
out
add
push
addb
mov
shl
sub
iret
push
sub
xor
int3
lahf
pop
notb
movsb
outsb
adc
mov
dec
jecxz
xor
or
loopne
stos
hlt
stos
jo
inc
loope
jno
out
add
addb
jmp
push
fidivl
clc
test
shlb
add
cwtl
test
jge
insb
inc
dec
shll
push
outsl
arpl
pop
repz
in
add
dec
notb
loop
bound
dec
ja
cli
out
dec
leave
dec
shlb
pop
or
fimull
movsl
clc
ss
lahf
add
pop
add
xchg
adc
ret
mov
fcmovnbe
das
sbb
in
in
add
jo
lret
jno
ljmp
ljmp
dec
decl
stos
jp
push
sbb
notl
xchg
add
insl
jmp
mov
jp
push
mov
add
dec
or
fisttps
inc
fcoml
and
pop
push
fsubs
pushf
or
adc
and
scas
mov
out
jae
mov
xor
dec
mov
inc
add
loopne
mov
mov
mov
test
mov
ss
jg
push
std
jb
mov
gs
bsr
lds
dec
inc
loop
sbb
add
jg
fiadds
dec
aas
out
push
mov
inc
and
sahf
or
arpl
or
pop
dec
out
mov
push
mov
push
mov
xchg
out
lret
inc
mov
leave
push
push
test
sbb
mov
or
xchg
andb
shll
rclb
cltd
decb
imul
dec
xchg
stc
add
xor
cmc
lcall
bound
mov
pop
hlt
jg
mov
jmp
pop
aam
iret
add
jp
pop
ret
add
mov
jl
inc
push
or
mov
pop
clc
adc
stos
adc
push
ss
addl
jae
dec
mov
inc
add
icebp
das
adc
lea
and
outsl
pop
aaa
sar
call
adc
or
xchg
sub
cs
ds
push
sub
jo
ja
jl
jae
adc
stc
movsb
xchg
hlt
fistpll
addr16
lock
or
mov
pushl
fsubrs
clc
fbld
rcrl
mov
or
rcl
and
pusha
js
outsb
and
push
pop
cmp
mov
loopne
mov
aam
sbb
decl
pop
mov
mov
dec
enter
addl
insb
inc
shrb
xchg
cmpb
sti
int3
shrb
mov
lret
and
fs
scas
push
or
ss
clc
jae
pop
popa
scas
insl
xor
pop
out
rclb
icebp
jge
nop
mov
insl
sub
or
push
movsb
test
fwait
xor
mov
cmp
mov
sub
lds
push
adc
or
imul
add
cs
imul
lea
fidivl
xor
in
cli
call
cmp
and
inc
inc
out
or
out
cli
ja
testb
dec
clc
push
leave
lret
jbe
enter
inc
jo
jns
mov
pop
stos
sub
sbb
sbb
psubsb
es
cmpsb
incl
cmpsb
es
inc
push
dec
xchg
in
inc
cmp
dec
movsl
push
ljmp
mov
mul
mov
daa
and
jl
xor
mov
pop
sahf
jbe
mov
mov
cmp
std
sub
movsb
or
les
mov
sub
fmull
xor
daa
orb
inc
push
dec
add
dec
inc
mul
push
push
insb
add
push
mov
fdiv
or
fldl
cmpsl
and
jbe
mov
sahf
mov
ljmp
and
sbb
stos
fld
mov
aam
jl
mov
mov
jg,pt
mov
xchg
fbld
popf
mov
xor
push
dec
outsl
inc
cmp
sbb
out
or
push
sbb
jl
ret
test
lock
push
fnstcw
dec
jbe
sbb
or
sub
in
shll
fdivs
pop
or
ds
hlt
mov
jo
daa
call
js
aaa
mov
jp
movsb
rorl
xorb
sbb
adc
orb
fcoml
push
add
fsubrs
cmp
in
or
mov
mov
dec
cmp
mov
outsb
sub
fildll
sub
mov
loope
fcoms
jno
clc
jo
incl
rcrb
xor
cwtl
aas
cmp
lcall
cmp
jg
mov
hlt
sar
ljmp
cmp
hlt
xor
mov
or
nop
or
cld
outsl
xor
inc
xchg
dec
sub
push
aas
push
cs
or
jb
cmpsb
je
cmp
xor
in
int
hlt
aas
nop
je
push
mov
dec
in
adc
and
cld
movsb
pop
insb
mov
lcall
enter
sub
push
add
icebp
jp
jnp
fcomip
push
sarb
dec
sbb
outsb
cmp
lock
and
push
fdivl
and
add
dec
jg
ss
rorl
push
and
popf
lahf
mov
decl
sbbl
pop
sbb
cmp
pop
pop
int3
add
inc
push
and
push
or
sbb
add
dec
inc
loop
out
pushl
add
jecxz
pop
add
pusha
data16
orl
pushl
cmp
add
movb
in
jp
stc
mov
lcall
in
or
and
xchg
jne
js,pn
push
sbb
enter
stos
xor
add
lock
aad
mov
cmp
push
inc
adc
adc
shlb
mov
mov
and
negl
cli
sub
xor
mov
push
push
push
insb
mov
or
jle
bound
and
pop
dec
sub
xchg
xor
outsl
mov
ret
adc
pop
inc
in
out
add
push
mov
mov
add
cmp
rcr
repz
int
push
sub
bound
out
mov
mov
fs
inc
fildll
daa
fbstp
pop
add
sbb
pop
dec
adc
loope
dec
jbe
add
dec
mov
push
scas
cli
and
jecxz
sbb
in
pop
jne
mov
sbb
aam
dec
rclb
jl
xchg
inc
scas
sbb
je
pusha
stos
leave
hlt
mov
test
push
repz
ljmp
xor
aad
in
ficoml
push
pushf
in
push
out
adc
push
ljmp
mov
add
call
ds
lcall
sub
mov
aas
dec
lret
movsb
popw
and
xlat
inc
pop
outsl
shlb
in
xchg
jo
cmpl
mov
or
popa
adc
mov
xchg
cmp
mov
cli
add
cld
jg
adc
push
movsl
jo
cmp
xor
rol
adc
pushf
xor
push
xorb
or
es
rcl
insl
arpl
add
mov
add
jb
clc
mov
aaa
lcall
pop
sub
jne
add
jmp
lcall
loopne
add
imul
push
fwait
cltd
xor
xor
stos
add
cmpsb
loopne
incl
dec
jp
fidivrs
je
loopne
mov
and
test
fdivrs
push
fadds
imul
stc
std
and
jge
orl
or
adc
es
mov
push
and
xor
mov
adc
or
rorl
cmp
outsl
or
shll
mov
in
and
insl
and
dec
clc
mov
sbbb
test
dec
dec
or
mov
imul
inc
push
cmp
adc
leave
xchg
adc
nop
dec
push
xor
cld
es
fistps
les
ret
pop
enter
ljmp
and
mov
push
cmpsl
adc
and
das
shrb
push
mov
sbb
jp
mov
mov
xor
cli
jg
cmp
inc
cmp
add
ja
dec
push
push
jb
mov
lea
incl
faddl
sub
jl
out
or
aam
loopne
add
jmp
out
inc
popa
inc
addb
test
add
jne
lds
adc
call
mov
sbb
out
mov
aas
mov
fiadds
and
stos
adc
mov
sti
xor
xchg
cmp
loopne
xor
ljmp
sbb
push
sbb
mov
rcll
dec
dec
pop
cld
mov
add
jecxz
push
dec
dec
cltd
add
sub
fadds
sbb
loopne
cmp
pop
lock
fistps
and
push
push
push
cs
mov
mov
mov
js
and
mov
imul
je
cmp
adc
lock
mov
mov
shll
xchg
or
adc
push
insl
adc
rorb
dec
and
scas
incl
xchg
push
xchg
pushl
add
sub
lahf
xchg
dec
sub
add
jbe
jmp
add
push
fcomps
fdivs
sbb
mov
outsb
out
add
cmp
push
popl
inc
lahf
cli
xor
push
cld
dec
loop
outsb
push
add
dec
push
push
pop
popf
out
cltd
push
and
xor
iret
add
inc
dec
add
sub
iret
cli
pop
or
push
in
clc
add
orl
in
cmp
or
cmp
call
add
fwait
inc
ljmp
lock
push
outsb
fwait
popa
push
mov
outsl
stos
clc
add
pop
in
mov
cltd
cmpsb
cmpl
aaa
xchg
xor
or
es
pop
push
jbe
das
push
adc
adc
pop
nop
fdiv
fmuls
push
add
dec
scas
jb
out
std
push
dec
inc
imul
pop
xor
mov
and
xor
jp
bound
pop
sub
scas
mov
or
and
dec
pop
mov
push
rorb
jb
ficoml
sub
or
insb
es
push
out
mov
inc
mov
movsb
test
or
add
clc
inc
insb
jno
test
xor
adc
cmp
or
out
clc
fidivrs
sahf
out
fwait
ljmp
pop
mov
adc
add
pusha
xchg
ret
pushl
adc
sub
sub
fiaddl
lahf
aas
es
inc
cmpl
push
xor
add
sub
push
sbb
mov
mov
in
mov
dec
sub
mov
out
js
mov
in
scas
daa
mov
in
test
push
push
mov
js
lahf
insl
mov
push
or
movl
shl
shl
pushf
mov
jp
fildll
adc
js
sub
into
add
pop
add
lret
aad
mov
cmpsb
adc
add
push
add
cmpb
outsb
pop
mov
xor
push
push
rol
test
jl
xor
loop
xor
movsb
in
inc
mov
iret
and
int3
adc
dec
push
mov
movsb
sub
pusha
add
fildll
addb
dec
pop
jg
mov
loopne
inc
push
push
pusha
jmp
out
push
inc
xchg
mov
add
mov
jl
add
outsl
pop
xorb
dec
sub
lods
pop
add
fdivrl
bound
loope
lock
add
rolb
incl
hlt
dec
sbb
xor
cmp
or
mov
mov
xchg
test
std
mov
xor
adc
pop
fadds
or
xor
add
fbld
lock
fmuls
orb
out
icebp
adc
lret
push
xchg
jle
fimull
sbb
cli
aaa
pop
or
inc
mov
xchg
jbe
sub
add
in
sub
scas
fs
test
lahf
ss
filds
movsl
mov
cmp
lahf
in
mov
jp
adc
lods
incl
push
movb
sub
pop
out
ret
fisttps
notl
xlat
inc
je
imul
inc
shrb
xor
mov
add
ret
jmp
hlt
cmp
mov
pop
inc
cmp
lock
fbld
out
mov
push
daa
lret
mov
dec
fisubrl
sbb
insl
dec
pusha
jp
xor
ds
lock
test
mul
add
mov
mov
pop
into
adc
jbe
xchg
add
add
dec
sub
imulb
pop
incl
mov
pop
xor
push
inc
pop
jae
ljmp
lcall
add
xchg
add
movsb
xor
loop
xor
mov
sbb
mov
sub
add
pusha
jb
mov
adc
ja
pop
cmp
fcmovnb
adc
xchg
and
add
or
subb
push
fsubrs
shlb
cmpxchg
ljmp
dec
add
cmp
out
stc
push
add
rorb
icebp
orl
stos
sarb
add
adcb
cmp
test
std
or
aaa
rcr
insl
mov
sub
orb
cwtl
test
bound
ds
mov
cmpl
and
in
jne
lods
push
inc
or
lcall
sbb
mov
inc
cs
pusha
jge
lcall
adc
pop
pusha
subb
mov
arpl
add
aaa
loopne
push
dec
cmp
sbb
mov
push
jmp
lahf
xchg
inc
movsb
imul
sbb
or
incl
pushf
dec
hlt
fidivl
dec
repnz
out
mov
int3
xchg
hlt
add
cmp
pop
push
dec
mov
adc
stc
push
fs
enter
or
mov
pop
add
mov
aas
push
cwtl
test
add
adc
push
mov
loopne
push
filds
jl
mov
fstps
sub
hlt
pop
fmull
pop
fs
aam
or
rol
inc
aaa
lods
incl
mov
sarb
mov
sbb
loope
fcmovnbe
push
push
aam
fs
shrb
idiv
ja
mov
push
outsl
repz
lods
add
push
sub
pop
add
push
lcall
mov
xor
xor
cmp
mov
inc
mov
sahf
enter
mov
jmpw
aam
mov
push
push
jb
xchg
sbb
hlt
push
out
add
in
sub
call
jl
xor
lcall
pop
or
imul
pop
test
jno
hlt
fwait
cmpsl
aas
or
aad
or
movsb
jle
pushf
scas
cmp
adc
adc
sarl
js
mov
pusha
repnz
jmp
dec
push
test
jecxz
inc
xchg
mov
ljmp
pop
insl
fcompl
xchg
jmp
mov
hlt
jae
sbb
mov
pusha
inc
stos
and
or
out
mov
cmp
xchg
dec
add
pop
insb
xor
adcl
jo
jae
addr16
sub
sbb
and
mov
lahf
rcrl
inc
flds
cmp
dec
lcall
cmpsl
jle
orl
sub
enter
inc
dec
cld
sbb
cmpsb
sbbb
cmpb
xchg
int3
stos
mov
or
fidivrs
mov
xor
ret
inc
addr16
js
xchg
mov
sub
mov
xchg
add
mov
sbb
mov
lods
mov
adc
pushl
inc
push
cmp
loope
call
call
icebp
call
shll
push
das
push
xor
fsubs
jo
push
xchg
decb
clc
mov
sub
or
xor
leave
sbb
sub
je
adc
sub
inc
mov
je
scas
or
add
in
xorb
jle
mov
movsb
xchg
cs
inc
jecxz
cmpsl
jo
adc
mov
into
pop
fiadds
add
insb
js
lods
fmull
jl
mov
mov
std
xor
mov
dec
call
pop
fcmovb
dec
add
mov
jp
push
push
cli
pushf
pop
call
add
add
pop
add
jle
insl
mov
jp
jg
or
cmp
add
cs
pop
and
in
sub
dec
jp
jmp
repnz
loope
push
jp
jbe
push
fisttpl
lea
lcall
ss
cmp
std
sub
or
push
xchg
lock
xlat
pop
pop
inc
outsl
mov
jmp
pop
and
mov
push
mov
out
xor
sarb
sbb
idivb
inc
enter
push
sub
push
cmp
xor
adcb
adc
bound
orl
jo
push
dec
fistpl
inc
xor
sub
orl
add
pusha
movsl
pusha
cwtl
push
daa
mov
in
aas
jo
pop
mov
ror
inc
ret
adc
loopne
xor
sbb
dec
sub
sub
scas
adc
addb
pop
aam
aas
in
clc
xchg
xor
sbbb
sub
jno
push
xor
jl
std
outsl
xor
repz
adc
test
cmpsl
lret
or
mov
das
xor
cld
xchg
je
sbb
add
stos
jmp
inc
stos
scas
popf
pop
fdivs
decl
mov
add
cld
decl
sub
pushw
ds
mov
xchg
fstpt
hlt
adc
push
test
and
in
aad
push
std
icebp
fwait
out
mov
rcrl
push
scas
add
scas
out
push
lret
incb
pop
cmp
mov
cwtl
mov
adc
add
push
pop
mov
push
push
aad
sti
mov
push
jbe
movsl
jns
dec
sub
jle
fbstp
push
in
adc
addr16
leave
add
xchg
sub
xchg
cmpb
mov
call
sbb
sub
dec
or
pusha
add
mov
mov
sub
jp
or
lds
pop
ret
fmulp
test
mov
sbb
mov
out
ds
mov
mov
std
cmp
mov
loopne
dec
cwtl
mov
loopne
and
add
aas
sbb
cld
inc
pushw
test
loopne
dec
addb
sub
mov
mov
mov
popf
pushf
inc
mov
and
inc
inc
jno
cmp
mov
xor
jo
lret
and
lcall
mov
std
lds
daa
imul
lock
fwait
and
arpl
pop
std
and
fmuls
lock
push
jae
pop
adc
sub
mov
cltd
clc
adc
dec
dec
cli
lea
cmp
lods
bound
inc
jge
xchg
mov
out
dec
add
pop
mov
fidivl
cmovs
mov
sub
add
mov
add
leave
mov
pushf
and
leave
inc
sub
add
inc
out
cmpsl
dec
stos
cli
idivb
add
xor
and
or
insb
push
rol
ljmp
inc
fidivl
fs
add
mov
mov
ret
inc
add
ss
cmpsl
enter
js
dec
xor
lods
fisubrl
mov
or
loop
push
cld
mov
in
jmp
adc
jnp
mov
scas
mov
push
push
sub
lcall
cmp
mulps
imul
jp
dec
xor
shlb
mov
dec
xor
adc
sub
outsb
fbld
sbb
add
adc
jg
mov
mov
int3
jns
push
sahf
mov
inc
xchg
clc
dec
into
dec
aas
js
scas
inc
lret
add
idivb
add
jl
mov
lcall
pop
testb
ja
mov
and
pusha
je
sbb
clc
add
insb
add
adc
xor
ja
into
sub
xor
call
insl
xorb
pusha
je
pop
in
notl
enter
xchg
mov
mov
mov
bound
dec
rcr
gs
popl
sti
push
xor
icebp
push
sub
enter
cmp
cmp
adc
lods
fcomps
icebp
decl
push
inc
clc
pushf
in
mov
adc
rorb
add
test
lahf
and
fbstp
sbb
mov
add
push
jo,pn
mov
push
cmpsl
mov
rcll
mov
adc
lods
icebp
adc
fisubs
and
subb
add
add
adc
or
in
jne
pop
loope
add
aad
dec
dec
add
mov
add
test
xor
or
and
cmp
in
stos
or
cmp
cs
add
lods
jno
mov
loop
cld
or
or
xorl
incl
xchg
mov
adcb
jmp
ret
dec
dec
xchg
push
adc
pop
clc
or
push
clc
cmp
adc
lret
push
mov
mov
sbbb
cmp
push
pop
mov
in
jmp
jo
outsb
jecxz
cli
incl
je
cs
or
pop
mov
sbb
mov
pop
xor
adc
push
sahf
mov
mov
jg
pop
pusha
insl
sti
add
ret
xor
add
mov
mov
outsb
aas
in
adc
mov
lock
std
aaa
call
ret
mov
into
mov
daa
xchg
movsl
mov
mov
sbb
pop
inc
ljmp
pop
es
lret
dec
add
and
cld
inc
dec
arpl
mov
adc
or
in
adc
shll
arpl
mov
add
mov
test
jmp
pop
call
leave
lock
mov
jle
push
lret
push
cld
iret
ljmp
pop
lahf
mov
add
fwait
mov
aaa
or
out
or
lahf
jg
cs
mov
mov
push
mov
push
add
sahf
int3
dec
enter
pop
pop
ja
je
dec
dec
and
decl
out
jb
sub
dec
pop
add
adc
sbbb
sbb
jg
push
mov
orb
je
repnz
jo
in
shl
ret
mov
into
inc
mov
cmc
inc
xor
aad
adc
or
cmp
inc
mov
pop
int
xlat
outsl
aaa
mov
jb
pop
cmp
mov
inc
inc
cs
incb
cmc
or
dec
cli
ret
sbb
push
mov
lret
subb
pop
jno
add
adc
cmp
loope
cs
push
loopne
inc
shlb
cltd
jb
add
push
mov
loop
xlat
pusha
inc
push
pop
jmp
push
add
and
scas
rclb
nop
add
adc
jbe
cwtl
cli
mov
cwtl
xchg
sub
rcrb
in
lea
pop
and
pop
push
call
mov
in
data16
jo
sbb
sbb
inc
call
aam
ljmp
xor
cmp
pop
xchg
shr
add
mov
sub
fstp
clc
lahf
dec
clc
adc
push
fdivrs
sbb
mov
arpl
and
jl
out
jae
inc
orl
jg
das
pop
outsl
lds
xor
insb
scas
xchg
cs
sbb
je
sub
push
out
outsl
pop
ret
std
sarw
popa
movsl
icebp
fcompl
pushl
xchg
mov
enter
mov
sbb
or
adc
clc
cmp
xchg
add
dec
insl
jle
roll
mov
cmp
sub
mov
sti
js
xchg
push
aas
sbb
xor
aad
enter
ret
pop
test
ds
in
cmc
popf
leave
je
jge
and
and
js
rcll
xchg
outsl
std
inc
push
xchg
scas
int3
out
cmpsb
sbb
xorl
xchg
push
and
loopne
gs
jg
adc
push
xor
adc
fwait
cli
cmpl
ljmp
mov
frstor
add
aaa
int
mov
stos
lds
mov
cmc
xchg
pop
je
add
push
jl
dec
jne
adc
sbb
popa
cmp
imul
adc
stos
sub
pushf
mov
sub
in
arpl
jecxz
mov
add
insb
xchg
lcall
sbb
push
sub
es
mov
inc
push
push
cld
inc
add
xor
sbb
xor
fisubrs
stos
hlt
das
add
xlat
inc
mov
scas
push
popa
mov
mov
dec
cmpsb
xchg
inc
push
inc
pop
inc
cmp
insl
xchg
pop
xor
in
jg
ret
jae
xor
ja
inc
enter
in
and
cmp
fisubrs
or
dec
inc
notb
add
mov
inc
pop
add
lret
mov
jg
lea
lods
mov
sbb
and
xor
xor
jmp
mov
inc
pop
mov
dec
fbstp
sar
lea
push
sub
sbb
js
or
sti
adc
ljmp
inc
out
mov
fstps
insb
js
rcrb
pop
test
shrb
xor
xor
xchg
in
inc
mov
and
cmpsl
mov
pop
das
mov
sub
jmp
cmc
loop
and
add
pop
add
add
fcomip
sbb
push
sbb
out
cmp
js
mov
sbb
lret
cmp
fbld
mov
gs
subb
sbb
mov
xor
les
add
movb
ja
jmp
mov
fisttpl
ja
adc
out
or
or
sub
xor
mulb
dec
push
fs
or
lock
rclb
imul
xchg
sbb
fists
pop
dec
push
mov
mov
xchg
shl
mov
and
mov
pop
mov
dec
pop
push
les
push
aad
cmpsl
cmp
mov
je
adc
mov
loopne
sub
pop
push
fs
pop
in
add
mov
inc
mov
xchg
shll
and
dec
pop
loope
mov
adc
xor
cmp
add
test
lods
mov
lret
stos
add
and
mov
cmp
mov
inc
sub
jecxz
mov
or
mov
out
adc
mov
add
jg
stos
cmpsb
clc
sub
not
jne
xor
push
mov
mov
rorl
aaa
xchg
jg
aad
bound
mov
ficoms
inc
adc
loopne
dec
sbb
jo
sub
adc
inc
stos
fsqrt
mov
sahf
sahf
stos
push
inc
push
subb
push
xor
popf
clc
jo
push
dec
inc
fs
fisubl
je
pop
pop
add
ret
mov
adc
in
mov
sbb
nop
inc
sbb
dec
mov
clc
jecxz
adc
ret
mov
and
movsl
insb
cmp
mov
jae
iret
lret
push
cmp
mov
mov
sahf
jp
pop
fidivrs
popa
mov
dec
cld
sub
int3
xchg
cld
push
jo
rcrb
cmp
or
xchg
std
mov
les
lds
dec
sti
lar
cmc
fistpl
lahf
ds
mov
sti
andb
add
and
ret
fwait
mov
inc
pop
das
xchg
sarl
mov
mov
loop
add
dec
sbb
jns
push
nop
ret
pop
dec
lods
mov
xor
or
lods
mov
sub
jne
sub
jle
addr16
cmp
jb
or
jbe
pop
xchg
ret
cmp
push
sub
xchg
mov
jge
push
cmp
adc
mov
mov
in
imul
lock
fsts
xchg
xchg
mov
pop
add
mov
sahf
mov
cmpsb
imul
int3
scas
push
inc
xchg
dec
pop
add
adc
mov
adc
lcall
xchg
lea
outsb
mov
enter
mov
add
rcr
cltd
arpl
push
mov
sub
into
jmp
loop
popa
add
leave
ret
das
addb
bound
shlb
ja
pop
add
cmp
inc
jo
jecxz
xor
dec
dec
ret
add
and
or
dec
cmp
mov
mov
mov
inc
leave
push
xchg
icebp
imul
inc
dec
mov
mov
out
mov
shll
leave
jo
sbb
cmp
add
push
in
pop
mov
mov
add
pop
out
dec
xchg
cmp
popa
xor
jecxz
ljmp
mov
inc
add
sbb
or
and
insb
std
call
frstor
adc
incl
pop
jge
add
add
std
decl
or
xchg
add
or
mov
xchg
adc
add
pop
push
jge
xorb
mov
xlat
inc
add
clc
dec
aam
stos
inc
xchg
pop
adc
pusha
sub
sbb
push
cmc
ljmp
add
mov
fildl
mov
push
into
ss
pop
and
aam
adc
fistps
stos
repnz
icebp
or
dec
xlat
hlt
mov
clc
rorb
push
cld
push
cwtl
adc
push
test
std
insb
or
mov
or
stos
pop
sbbb
mov
and
cltd
sarb
lock
ljmp
jp
dec
mov
push
jp
sbb
mov
mov
popa
push
iret
jl
icebp
mov
aam
pop
dec
idivb
mov
scas
sub
rclb
and
ja
shll
mov
rol
jg
sbb
push
fbstp
lret
ljmp
rolb
mov
imul
int
inc
cmp
es
push
movsb
adc
dec
data16
xchg
xchg
push
adc
sub
arpl
jmp
insl
mov
dec
add
bound
cmp
test
jnp
cs
lahf
test
in
xor
fistps
push
xlat
sub
dec
sbb
rcr
mov
mov
movb
stos
lods
dec
and
decb
fcmove
mov
cmp
and
adc
push
cld
incl
mov
xchg
mov
mov
add
test
adc
push
pop
loope
fadd
dec
adc
adc
repz
les
fstps
fcomps
add
push
ja
cmc
cltd
das
xchg
ljmp
mov
loopne
aad
pop
cli
push
mov
aaa
jecxz
dec
sbb
xorl
shlb
inc
sub
lret
inc
sub
roll
rcrl
sub
jge
ljmp
push
arpl
dec
mov
sub
mov
cmc
loop
push
ds
fists
cmc
xor
pop
cmp
ret
ljmp
inc
adc
mov
pop
out
cmp
enter
cmp
shlb
mov
dec
sub
mov
and
idiv
push
mov
push
adc
in
ds
adc
in
or
lret
nop
mov
scas
mov
sub
cmp
sub
adc
aaa
faddl
jnp
mov
push
sahf
adc
mov
rol
cmpsb
imul
or
rorl
outsb
lcall
fs
adc
sbb
aad
stc
pop
faddl
push
subb
adc
jp
push
mov
push
and
ja
imul
out
adc
dec
je
pushf
mov
sub
inc
loopne
cmc
adc
inc
clc
fwait
sub
sbb
ljmp
loopne
lods
push
sub
mov
adc
ja
mov
test
test
lock
push
push
popa
ljmp
pusha
fmuls
push
jecxz
pop
add
mov
pop
pop
xchg
mov
ja
xor
mov
clc
xlat
fildll
mov
popa
fstpl
mov
jmp
or
jns
sub
lret
clc
aas
adc
pop
or
sarl
movsl
loop
xchg
adcb
cmc
fcmovnb
mov
test
add
xlat
in
js
mov
test
and
outsb
mov
loope
sbb
scas
mov
add
sbb
loop
repz
pop
cmp
fs
decb
mov
out
aam
call
test
decl
in
enter
add
mov
test
mov
or
add
lcall
cmpsl
mov
or
arpl
push
mov
mov
xor
push
into
xchg
add
push
lods
sub
jne
jg
and
xchg
mov
bound
test
mov
mov
adc
cwtl
mov
rolb
test
mov
inc
xchg
jno
push
xchg
cmp
mov
nop
les
and
out
mov
sub
stos
bound
push
sub
test
xchg
mov
mov
or
push
adc
mov
push
mov
mov
pop
add
rorb
jbe
xchg
rcl
rcl
mov
aaa
sbb
add
sub
in
cmp
mov
nop
jmp
inc
cmp
in
stos
aam
ret
mov
add
mov
out
adc
bound
cmp
add
es
imul
int
out
cmp
xor
fdivr
popl
cs
jmp
stc
sbb
lret
adc
add
cmpsl
jo
xor
ljmp
out
and
mov
mov
int3
popf
out
cmpl
jb
inc
pop
test
cmp
mov
les
sbb
pushl
cmp
push
sahf
add
push
or
sbb
movsl
mov
les
push
movsb
pop
push
clc
pop
push
inc
pop
jl
adc
dec
xchg
mov
pop
lock
mov
daa
dec
pop
out
iret
inc
fldenv
fsub
and
xor
push
cmp
mov
jge
dec
or
sahf
in
mov
icebp
add
dec
pop
cmpsb
rcl
mov
pop
push
jecxz
mov
sub
test
add
adc
loop
sub
adc
xlat
les
lock
inc
mov
mov
scas
cmc
rcl
sub
cmp
pusha
add
add
cmp
ret
pusha
xor
jge
enter
sbb
ret
or
add
cmp
loop
xor
out
push
xor
inc
inc
jmp
repz
add
push
icebp
pop
and
dec
sbb
push
sub
mov
xor
fwait
cmp
repz
jnp
lods
push
lods
je
mov
add
jp
test
dec
and
adc
push
lret
mov
fmull
cmp
add
scas
andb
jmp
test
cmp
ljmp
aam
sub
decb
iret
loope
mov
decb
imul
or
lds
sbb
push
jmp
jbe
cmpsl
imul
scas
jb
addr16
lock
lahf
cmp
pop
adc
pop
test
divb
dec
lret
mov
push
or
ljmp
cld
arpl
and
jge
out
and
mov
mov
rorb
jo
push
push
jmp
outsb
xchg
fwait
mov
outsl
rolb
les
dec
add
inc
loope
jp
push
in
jno
push
imul
xchg
aam
xchg
out
shrb
hlt
incl
pop
xchg
dec
jb
rcrb
out
push
outsb
adc
sarb
outsl
xor
mov
dec
push
and
out
mov
orl
stc
inc
sbb
mov
adc
ss
iret
add
loopne
lds
xchg
jecxz
pop
mov
or
cmp
jmp
mov
jns
cld
das
mov
cmp
add
cwtl
out
add
lea
dec
faddl
push
dec
fcmovnu
pop
fnstsw
inc
lea
push
mov
fistps
jno
lea
int3
mov
in
add
adc
xchg
cs
les
push
cli
or
dec
rolb
adc
out
inc
les
adc
cmp
inc
jne
loopne
dec
dec
orb
cmpsb
mov
in
push
fnsave
push
mov
hlt
out
in
mov
push
push
call
mov
fiaddl
rorl
xchg
rol
call
fisttpll
mov
sub
jl
inc
sti
mov
xor
lcall
clc
inc
in
push
cmp
cmp
sub
loope
add
push
push
out
mov
test
adc
pop
or
mov
jge
movsb
pop
cmpsl
ret
insb
lock
pop
test
push
mov
pop
out
es
jle
ja
add
sahf
out
mov
inc
ret
add
add
adcb
jo
loope
arpl
sub
ljmp
cmp
dec
sbb
mov
cmp
shrb
sub
inc
inc
into
cmpsb
nop
push
insl
sub
pop
ds
fstp
xor
sbbl
or
pop
cmp
xor
loopne
mov
js
rol
movsb
out
jnp
push
movzbl
les
mov
adc
testb
andb
or
fcmovne
ljmp
dec
mov
sub
mov
mov
scas
test
pop
push
xchg
pop
pushf
dec
enter
xor
ds
cli
data16
push
xchg
and
test
sbb
xchg
cmpsb
adc
test
sar
ljmp
clc
xor
push
imul
clc
mov
and
and
push
or
js
cmpsb
push
mov
xor
jo
cmp
outsl
cmpsb
ficomps
les
add
add
sarb
ds
bound
xor
dec
loop
fidivl
call
add
pop
pop
pushf
adc
sarl
inc
mov
push
inc
jnp
cmp
test
mov
scas
test
stos
repz
incb
sbb
cltd
jne
fistpl
jmp
jmp
js
jge
xchg
push
or
dec
fcoml
clc
mov
cli
js
stos
int
pop
lcallw
data16
repz
adc
scas
inc
bound
mov
dec
scas
adc
pop
adc
mov
pop
cmp
inc
mov
leave
pop
or
cli
decl
jle
movsb
rep
dec
dec
in
mov
sbb
lcall
fdivr
sbb
popf
xlat
imul
mov
insl
stos
push
jmp
repnz
or
hlt
loop
add
jo
xor
dec
mov
int3
mov
repz
leave
loop
push
sbb
xchg
push
xchg
loopne
subb
rcrb
bound
out
fbld
and
mov
cld
orps
dec
xor
ret
cmp
mov
rcrb
sbb
xor
nop
add
in
or
mov
cmp
test
inc
dec
mov
pop
test
mov
or
orl
lock
ljmp
scas
mov
mov
adc
fdivl
call
push
or
or
push
in
or
push
mul
fsub
decb
cs
xchg
fdivs
pop
xor
jb
jmp
cltd
xor
fimuls
and
outsb
mov
imul
cmp
les
cmpsb
mov
add
sub
sbb
stos
cmp
cmp
jae
outsb
or
push
fs
mov
xor
pop
pop
cmc
fbld
xlat
cmp
inc
sbb
xor
aad
imul
mov
inc
push
arpl
add
mov
xchg
in
push
lcall
add
cmp
fdivr
subl
jb
ss
pinsrw
xor
hlt
jo
push
or
loopne
push
sub
cmp
movsb
std
mov
lea
loop
or
pop
adc
mov
jno
xor
xchg
dec
jmp
sbb
sbb
loopne
loopne
std
scas
sbb
mov
mov
xor
test
hlt
xchg
js
jge
xchg
xchg
jl
inc
nop
jmp
and
add
or
cmpb
fs
test
dec
aad
jbe
sub
or
mov
xchg
push
jle
loope
inc
cwtl
ds
lods
mov
test
pop
pusha
arpl
or
in
jno
cmp
lret
movsb
mov
mov
movsb
loopne
or
std
dec
jmp
and
mov
cmpl
call
jmp
test
adc
aam
outsl
movsb
fdiv
add
test
jmp
call
push
pop
mov
scas
call
push
insl
jno
dec
sbb
add
sub
jp
fst
pop
push
fisttps
xor
incl
mov
pushf
xlat
lock
sub
loop
push
scas
push
xchg
adc
inc
imul
jb
inc
mov
das
and
loope
les
sbb
mov
add
jp
shrb
insl
mov
scas
call
dec
loope
ss
in
cltd
ss
push
push
jmp
dec
push
rolb
mov
add
lcall
sub
hlt
mov
mov
enter
ret
sti
adc
push
ljmp
out
js
ljmp
cmc
cwtl
roll
lock
xor
stc
out
mov
or
loopne
call
push
push
scas
dec
pop
cmc
lds
adc
cmp
xor
push
scas
add
sbb
push
call
jb
sahf
clc
mov
rcll
mov
add
and
mov
aas
pop
lock
dec
push
icebp
inc
xchg
mov
sarb
icebp
pop
cs
insl
adc
sub
pusha
lods
adc
xchg
mov
xor
je
shll
push
jle
mov
cli
push
jns
ljmp
loop
test
inc
cmpb
scas
xor
mov
call
mov
cmp
inc
std
das
data16
notl
add
lods
idivl
or
cld
xchg
std
clc
cmp
ret
loope
push
lods
xchg
fdivrl
mov
daa
loopne
adc
dec
jne
loop
into
gs
xor
dec
popa
jbe
bnd
js
imul
mov
out
clc
cmpsl
cmp
cwtl
cs
mov
add
out
add
dec
aas
push
cmp
imul
xor
push
jnp
jnp
ljmp
les
mov
sub
js
mov
jo
loope
add
xchg
and
scas
sahf
fmull
fwait
lret
add
fmull
cmp
call
jge
icebp
mov
push
cmp
push
pop
pop
gs
mov
mov
dec
loope
bound
call
push
sub
xchg
sbb
add
call
shrl
mov
cwtl
cwtl
pusha
sub
sub
and
in
insb
enter
fwait
icebp
or
sbb
xchg
inc
cmp
cmc
add
aam
push
push
mov
flds
aaa
adc
mov
jp
jle
rclb
cwtl
jb
mov
shl
push
push
mov
inc
js
call
add
test
mov
adc
fbld
aad
pop
add
addb
es
test
and
clc
cmp
in
ja
xchg
js
imul
insb
adc
outsl
push
xor
add
adc
fcmovnu
call
pop
dec
addl
inc
shll
fbld
and
out
xchg
idivb
xor
mov
pop
push
sahf
add
adcb
cmp
mov
inc
push
lock
pop
and
iret
and
mov
add
push
into
insl
sub
sbb
push
out
lds
pop
decl
dec
hlt
xchg
jbe
push
inc
mov
xchg
xchg
jp
pop
sarl
xchg
sbb
add
sbb
push
inc
mov
stos
call
push
int
cmp
push
push
sbb
pop
jb
or
xchg
testb
sbb
push
lcall
clc
dec
jno
js
movsl
cmp
ss
xchg
es
adc
cld
mov
sbb
inc
rcrl
insb
cmp
cli
aaa
fcomip
add
sbb
pop
pop
fwait
jnp
leave
and
or
mov
xchg
add
push
xchg
insb
arpl
arpl
outsb
and
out
mov
xchg
cltd
insl
mov
rcll
and
pushf
rcr
sbb
fadds
aam
bound
xor
ret
sub
mov
jbe
mov
rclb
xchg
test
ss
add
pop
sub
push
push
push
shr
xor
xor
sbb
in
fists
call
inc
push
push
into
cwtl
dec
pushl
adc
cltd
cli
dec
mov
daa
lds
es
ljmp
mov
fisttpl
and
dec
xor
cmpsl
nop
xlat
adc
mov
or
push
addr16
js
sub
xchg
sub
mov
inc
dec
das
scas
inc
test
add
cmp
clc
dec
pop
popa
jo
out
inc
add
mov
fistpll
sahf
fcompl
sub
dec
push
data16
and
aad
js
inc
inc
adc
push
in
mov
fsubrp
inc
sbb
xchg
in
ss
xchg
xor
cmp
mov
mov
es
jecxz
lret
shrb
movhps
dec
jge
loopne
lock
sub
jb
push
push
ljmp
hlt
jno
repz
adc
jg
add
jno
lahf
cmpsb
stos
out
jmp
rcrb
rorl
movsb
jle
outsb
shlb
hlt
fisubl
or
testb
call
or
test
out
xor
adc
adc
push
and
es
jp
push
mov
cmc
pop
sbb
imul
add
in
pop
jl
cmp
push
leave
divl
mov
insb
jecxz
or
mov
adc
pop
or
push
push
xchg
scas
rorb
adc
decl
cmp
or
imul
xor
dec
push
jmp
inc
push
adc
jbe
sbb
decl
pop
outsb
push
cmp
and
cmp
mov
mov
jp
mov
aas
sbb
out
mov
xchg
adc
sub
and
fldl
stos
dec
iret
xchg
sbb
sti
pusha
fsubs
std
cmpsl
or
test
xchg
push
mov
lcall
jle
call
mov
cmc
add
sbbl
out
rclb
dec
sub
clc
lcall
or
enter
ud2
lcall
aad
ret
repnz
mov
js
movsl
mov
or
jae
pushf
sti
mov
push
inc
or
or
jmp
push
cwtl
movsb
sub
mov
mov
dec
inc
or
incb
adc
jb
stos
and
push
ljmp
mov
inc
cmp
inc
pop
mov
outsl
arpl
test
jbe
add
pop
jp
or
jg
lock
lcall
pop
outsl
loope
xor
or
jb
lock
push
pop
xchg
push
in
sahf
jo
ds
xchg
orl
ljmp
popf
js
adc
loopne
xor
out
sahf
into
fucomip
lcall
es
xorl
mov
stos
xchg
shll
sub
or
in
add
fwait
sub
paddusb
pushf
jecxz
inc
lahf
lahf
mov
or
rcr
arpl
aam
call
pop
add
push
xchg
add
pmaxub
add
popa
sti
mov
int
rorb
rcrb
pop
inc
xlat
or
jp
sub
clc
mov
out
mov
in
fwait
mov
push
clc
bound
add
sbb
push
xchg
add
fsubrp
inc
push
sub
cwtl
jl
pop
cwtl
cmp
fbld
sub
and
data16
movsb
cs
fidivrs
orb
jb
shrb
inc
pop
call
and
lock
aas
xor
jnp
inc
mov
sti
or
cli
outsb
cmpsl
test
cmp
xchg
mov
mov
adc
mov
mov
inc
imul
int
jge
aas
ds
dec
sbb
sbb
jge
stos
movsl
cli
and
sbb
inc
lahf
inc
add
or
xchg
into
movsb
add
lods
clc
pushl
sahf
mov
mov
mov
int
addr16
push
loop
sbb
inc
push
fisttps
push
mov
cwtl
cmp
mov
call
divl
movsl
pop
sub
push
dec
jl
aad
xor
stc
mov
pop
inc
mov
push
pop
shlb
and
movsb
pop
add
push
lock
dec
insb
pop
ret
cmp
lods
sbb
mov
xchg
pop
sub
mov
decl
add
clc
mov
call
lods
test
xchg
push
dec
sub
and
cli
and
insl
ljmp
rorb
sarb
add
xchg
es
xchg
and
ljmp
cmp
mov
sbb
jne
push
ja
and
jp
dec
xchg
xor
mov
sub
jns
push
or
xor
outsb
push
clc
and
sub
js
leave
ss
fistpll
mov
scas
and
je
jnp
clc
scas
inc
sbb
jno
lahf
sub
lods
sbbl
pop
decl
adc
loop
pop
into
mov
dec
cli
ja
shll
cld
popa
movsb
dec
and
lock
ds
xchg
mov
movsl
sarw
and
cmp
pop
outsb
ss
ja
push
lock
mov
mov
movsb
xchg
push
mov
cmp
into
jl
incl
dec
pop
add
pop
mov
mov
push
add
cld
cmp
xchg
xor
mov
add
pushf
pop
in
mov
cltd
mov
push
fists
add
cmpsb
stc
cld
jg
dec
push
adc
adc
nop
mov
fsubrs
add
push
lock
sarb
scas
mov
std
int3
fisubrs
mov
inc
cltd
mov
jl
lock
popf
shrb
fcompl
popf
push
fstpt
cwtl
mov
inc
mov
lds
push
lods
std
jne
mov
jnp
pop
dec
push
lahf
enter
pop
jge
aas
xchg
sub
sub
dec
mov
insl
push
and
sub
jnp
jns
ret
push
sbb
lret
or
cmp
sti
pop
bnd
out
adc
pop
into
cmpsl
fcmove
push
incb
or
mov
insb
jbe
test
daa
and
in
icebp
mov
fists
fistpll
std
out
mov
add
test
adc
and
cmpsl
lock
add
or
data16
inc
imul
mov
incl
je
stc
sub
xchg
xchg
aam
mov
mov
xor
or
nop
xor
xorl
pop
mov
lcall
scas
ret
inc
js
add
push
jne
call
push
and
fcompl
outsl
cmp
hlt
mov
les
adc
imul
adc
push
adc
push
shll
mov
mov
xchg
mov
inc
and
mov
add
add
clts
mov
test
movsb
push
stc
in
mov
das
mov
adc
adc
cld
sub
fisubl
pop
enter
decl
fs
mov
jns
adc
test
fdivrs
or
inc
mov
xor
roll
xchg
xchg
pop
mov
mov
shrd
fnstsw
sarl
addb
adc
jo
cld
jle
jb
popa
mov
inc
jp
push
test
xlat
jb
stos
ljmp
adc
jo
in
inc
mov
sub
push
pop
test
ss
aam
out
dec
push
jno
into
mov
pushf
lock
in
xor
push
sbbb
cmp
mov
outsl
clc
add
cmp
test
mov
sbb
xor
dec
fcoml
cmp
push
test
sar
adc
xlat
cmp
xchg
dec
loopne
je
fmul
dec
jb
mov
ljmp
add
ret
dec
lock
mov
js
aam
mov
sub
mov
lcall
push
movsb
mov
fbstp
imul
stc
out
cli
sub
jecxz
roll
add
push
bound
mov
mull
inc
jl,pt
sbb
sbb
fidivs
inc
scas
add
mov
das
sub
adc
aaa
hlt
ud0
dec
lock
repnz
pop
mov
adc
enter
je
sar
mov
int3
outsl
jmp
ficompl
mov
lcall
lahf
movsl
addr16
mov
inc
bound
mov
out
cmpsb
arpl
dec
adc
pusha
pop
gs
push
xlat
das
fidivl
lock
xor
mov
inc
mov
cmp
pop
sbb
sbb
xor
lods
push
subb
add
and
dec
dec
repz
xor
shll
push
int3
int
mov
push
or
and
mov
mov
mov
jbe
clc
ljmp
stos
lock
dec
add
popf
data16
adc
mov
lods
pushf
adc
pop
xor
shl
sti
or
inc
aad
cmp
stc
and
mov
ficompl
loop
add
add
xor
aaa
fucomp
shlb
add
mov
movsl
or
sbb
xchg
aad
push
push
lock
add
mov
ret
mov
hlt
rcrb
mov
in
les
xchg
pop
pop
nop
mov
and
test
ja
imul
xchg
insl
les
sub
pushf
dec
add
xor
scas
clc
out
int
stc
lcall
dec
xchg
or
loope
and
adc
mov
mov
push
inc
adc
and
testb
inc
push
sbb
sub
add
decb
add
loop
in
add
ret
sbb
aam
andb
pop
decl
pop
fwait
cld
cmp
int3
push
mov
out
clc
pop
mov
xor
add
ja
mov
sub
js
lods
je
xor
cli
loopne
shll
cs
and
fsubrs
repnz
push
arpl
jns
push
aad
ret
in
insb
into
shll
mov
and
mov
inc
dec
inc
dec
mov
and
push
fdiv
pop
sub
mov
out
je
outsb
repnz
mov
sub
fdivp
adc
sbb
fnstenvs
push
js
nop
adc
push
push
decl
test
xchg
in
ljmp
test
dec
mov
cmp
pop
cmc
imull
sbb
or
clc
xchg
adc
cmc
push
loopne
sbb
stc
jl
jmp
push
arpl
inc
bound
xchg
xlat
sbb
cs
mov
mov
and
jg
popf
and
arpl
mov
ljmp
fcomip
sbb
add
gs
pop
mov
scas
push
pop
cmp
sbb
sti
or
xchg
mov
pop
pop
xor
ljmp
bound
cli
ja
and
mov
jbe
inc
decb
inc
cmc
jl
decl
add
and
fcompp
fmuls
jl
mov
stos
shlb
rolb
jge
bound
fnstcw
mov
jle
inc
dec
loopne
inc
out
imul
insb
inc
jp
sbb
inc
push
iret
push
pop
inc
add
adc
add
jmp
add
lcall
mov
js
jle
call
xchg
mov
decb
adc
outsb
cmpb
push
sbb
std
adc
add
js
pushf
jmp
clc
icebp
jmp
inc
aam
arpl
pop
inc
sub
xchg
stc
loopne
mov
mov
addr16
or
std
test
cmc
neg
pop
push
shl
add
push
add
out
mov
xor
mov
rorb
cli
mov
movsb
hlt
lcall
add
sbb
aas
fnstsw
sbb
cmp
fwait
pop
pop
push
pusha
push
int3
les
aad
pop
nop
in
imul
or
lds
mov
nop
cmpsb
cmc
std
mov
cmpsb
test
stos
or
pushl
stos
cs
sbb
adc
pop
lcall
adc
mov
movb
xor
pop
lds
insl
daa
ljmp
mov
xchg
icebp
push
in
push
push
or
lds
clc
hlt
popf
js
xchg
mov
adc
adc
or
jp
bound
xchg
mov
pop
lock
outsb
test
stos
inc
push
pop
add
dec
sbbl
xor
call
and
push
movsl
ret
lock
cwtl
xchg
sub
test
fldenv
jle
push
or
test
add
xchg
push
add
iret
xchg
jb
xor
icebp
cli
imul
out
sti
inc
gs
int3
jno
jg
push
xchg
sub
cld
iret
push
jno
jb
jbe
mov
sbb
cmp
test
cwtl
add
js
popa
pop
nop
add
or
loopne
pop
pop
add
mov
jp
mov
ret
push
pop
mov
push
jle
wbinvd
out
add
mov
cltd
jbe
clc
cmpsb
xchg
outsb
rclb
pop
pop
sub
movsb
loop
lds
sbb
adc
bound
mov
inc
aaa
sub
js
add
adc
jo
cltd
fists
sbb
pusha
mov
pop
add
std
inc
roll
outsl
or
sub
pushf
out
mov
sbb
mov
dec
dec
push
sub
cmp
pop
push
je
push
loop
fwait
imul
mov
ret
fucomip
lahf
incl
jae
push
dec
push
adc
mov
sbb
push
sti
popa
and
mov
add
mov
adc
pop
addb
addb
push
sub
hlt
mov
lcall
ds
xor
gs
add
ror
mov
aaa
shrb
jb
aad
pop
jns
or
ljmp
pusha
pushf
insl
outsb
mov
test
lcall
std
lahf
clc
dec
ljmp
lcall
test
loope
cmpsl
js
adc
clc
jg
or
jp
fidivrs
add
adc
mov
cmp
inc
sbb
into
sub
add
jbe
push
mov
or
push
cli
add
mov
ret
test
inc
pop
test
dec
adc
or
pop
in
mov
fs
jle
popf
ds
insl
call
and
mov
imul
mov
hlt
loopne
int
jae
xchg
or
inc
mov
lods
sahf
fucomi
das
shll
cltd
push
ret
mov
mov
idivb
imul
adc
fs
lret
lcall
cwtl
std
aam
sar
add
jns
jb
inc
adc
sbb
and
enter
pop
adc
shll
jae
sbb
andb
lock
mov
jo
adc
sbb
sub
call
sub
loop
sahf
dec
jbe
or
ret
jnp
sete
sbb
jbe
push
mov
ja
cwtl
xchg
mov
jl
xor
in
push
sbb
sbbl
stos
pop
insb
out
push
test
jmp
mov
adc
rorb
addr16
fidivrs
xchg
shlb
xchg
sbb
in
cli
dec
jno
xor
loope
add
pop
int3
mov
mov
loop
cmpsb
fstpt
mov
lea
sti
add
mov
fcompl
push
daa
adc
cwtl
or
lcall
add
jb
cmp
jnp
xor
and
xor
test
adc
mov
int
ljmp
inc
xchg
xor
bound
inc
and
cmpsl
xor
pop
ret
cld
out
dec
dec
movsl
fistps
insl
lods
xor
in
xchg
outsl
dec
pusha
ret
pop
fcoms
mov
ror
cmp
or
in
aas
sbb
adc
leave
inc
dec
clc
add
push
dec
push
aam
imul
rorb
or
ror
cmp
xchg
mov
sbb
mov
icebp
fldcw
sarb
test
mov
add
dec
inc
cld
aaa
sbb
roll
add
cs
mov
pop
arpl
dec
dec
pusha
sub
cli
jns
pushl
lods
push
sbb
and
pop
cs
je
enter
shl
cmpsl
mov
xchg
push
cwtl
or
out
and
mov
xor
mov
dec
mov
ljmp
into
rep
xchg
jl
pop
lds
add
enter
inc
insb
imul
aad
lahf
rclb
inc
sbb
push
mov
jle
int3
ret
lock
enter
inc
pushf
test
mov
pusha
jle
mov
pop
outsb
cld
inc
push
popa
dec
sahf
add
sbb
or
imul
stos
lret
out
inc
add
push
add
inc
loop
xchg
inc
mov
repz
daa
mov
mov
dec
jo
mov
lds
inc
jno
sbb
pop
pop
push
adc
pop
inc
add
dec
mov
ds
fbstp
or
push
push
inc
sahf
out
mov
lcall
mull
fsubrs
icebp
decb
fwait
ss
hlt
les
and
mov
div
bswap
xchg
fdivrs
sar
lcall
adc
jmp
mov
imul
rcll
push
pop
jo
cmp
and
jle
incl
out
fsubs
inc
jle
data16
push
xchg
mov
scas
jmp
cmp
jbe
jl
or
loop
inc
mov
repz
frstor
fidivs
shll
cmp
lock
push
adc
push
push
rol
mov
adc
xor
push
mov
cmp
add
add
pop
add
mov
cmc
aas
sub
in
aad
xorl
fcmovu
cmp
pushl
leave
xchg
imul
lods
sbb
das
pusha
out
push
sarl
out
mov
repz
mov
cmp
pop
fcoml
movsb
ds
inc
jnp
js
scas
mov
aas
ljmp
adc
int3
sbbl
inc
jmp
lcall
add
jae
out
lret
lcall
dec
call
mov
pop
ret
push
mov
jno
mov
xor
mov
xor
cltd
jg
fs
mov
jnp
out
data16
shlb
rcll
cli
mov
push
xchg
and
gs
es
cs
pusha
sar
jns
insl
out
leave
pop
and
xor
outsl
lock
jg
or
dec
ret
pop
scas
inc
and
or
pop
ret
xor
or
pop
push
xor
sar
jg
sbb
jne
insb
filds
sti
cmp
push
in
hlt
push
ret
sub
pop
out
mov
jnp
jecxz
push
push
inc
jb
and
divb
insb
ficomps
loopne
xor
push
lcall
and
xchg
pop
js
lods
cmpsl
sbb
lods
add
dec
inc
mov
push
mov
cmpsl
icebp
sbbb
mov
inc
mov
faddl
pop
push
dec
pop
and
inc
xlat
out
and
lahf
add
push
lcall
nop
mov
lods
dec
cwtl
mov
fdivr
fdiv
jmp
test
ret
sub
ja
push
xor
dec
fisubrl
std
mov
mov
add
fildll
pop
mov
mov
clc
push
cmp
push
dec
add
sbb
rcrb
push
add
or
adc
out
js
pop
dec
adcb
jg
in
cwtl
sbb
dec
call
mov
mov
add
ljmp
ret
jb
iret
arpl
aam
pop
fnstenv
add
inc
jmp
sar
inc
lea
in
ljmp
fbld
pop
fwait
in
lea
movsl
fsubs
mov
mov
data16
stos
sbb
orb
xlat
js
movsb
jne
orl
sbb
xchg
mov
pop
lret
js
pop
leave
pop
clc
mov
ss
and
push
mov
mov
pop
leave
mov
cmpb
es
call
or
xchg
ficoml
adc
mov
mov
adc
popf
lods
pop
lods
xor
icebp
roll
ret
sahf
xlat
xchg
add
pop
mov
pop
loopne
int3
pop
ffreep
ljmp
xor
call
inc
mov
in
sbb
sbb
mov
sti
sub
inc
xchg
add
sbb
ret
ss
data16
push
push
sarb
mov
pop
inc
mov
das
adc
iret
mov
sbb
scas
push
vpsubq
xor
mov
push
inc
hlt
test
jne
lret
mov
sbb
fadds
cld
incl
std
push
pusha
ror
les
repz
iret
decl
mov
in
jae
aaa
vpshufhw
sbb
psubw
ret
jns
insl
lods
sub
pop
rorl
clc
lods
jle
js
fucomip
jecxz
and
pop
out
add
mov
or
jle
mov
hlt
xchg
ret
lock
jmp
sub
std
push
shrb
pushf
scas
insb
loopne
hlt
sbb
push
xchg
add
sarl
ret
or
movsl
inc
cmp
sti
mov
dec
aad
loopne
mov
mov
adc
xchg
adc
inc
or
push
mov
ret
std
es
repnz
pusha
pop
mov
jmp
cmp
push
scas
and
repnz
js
fists
cwtl
push
adc
in
lods
into
inc
les
jp
add
cmpl
adc
cmpsl
add
out
mov
and
repnz
imul
cld
fxch
mov
mov
aam
fcompl
fistps
jp
xchg
mov
xchg
mov
jecxz
add
xchg
jge
outsb
pop
rcrb
or
push
cmc
aaa
lcall
daa
outsb
inc
dec
pop
lcall
enter
scas
mov
pop
rol
inc
or
or
icebp
rolb
xchg
cmp
xchg
cld
aaa
cmpl
add
adc
fdivrl
mov
nop
int
mov
cmp
js
jno
incl
cmpsb
sub
push
xlat
in
in
sub
jge,pn
rorl
adc
int3
adc
clc
jg
movsb
sbb
adc
pop
in
lock
xor
adcl
inc
aas
pop
hlt
das
mulb
add
push
mov
decl
sbbb
pop
adc
pop
jno
pop
add
sbb
dec
mov
add
loop
imul
outsl
push
daa
xchg
sub
and
and
incl
mov
sbb
jno
or
pop
sub
add
mov
in
subl
clc
shrb
cmpsb
mov
add
and
adc
xchg
adc
xorl
jg
mov
push
ljmp
out
nop
cmp
inc
dec
push
mov
ljmp
sbb
dec
cmp
dec
or
mov
repnz
pop
loope
jnp
xchg
sahf
sahf
xor
xor
test
inc
mov
insl
cli
cmpsl
fwait
imulb
loop
or
cld
cmp
pusha
loopne
mov
outsb
insb
addb
jg
pop
fadd
xor
lods
loopne
adc
scas
jge
subb
std
das
es
int3
cmpb
push
test
adc
adc
inc
popa
shr
ret
fdiv
cwtl
stos
shlb
jg
add
pop
lret
add
dec
jg
mov
cmp
pop
mov
xchg
pop
sub
mov
loop
and
add
sub
mov
jb
inc
and
inc
in
and
ss
mov
mov
mov
lods
xchg
mov
dec
leave
pop
cmp
push
imull
fsubl
fadd
mov
lods
ret
cs
jg
call
push
mov
ret
ret
add
cmpsb
jg
nop
bound
bound
xor
rcrb
incl
mov
push
lcall
inc
in
add
push
jp
sub
or
or
push
xchg
inc
pop
lcall
aas
cld
ljmp
or
mov
ds
addl
adc
jbe
sbb
jmp
aad
outsl
call
int3
loop
add
mov
rclb
pop
jecxz
idivb
shlb
nop
out
rorb
pop
outsl
fisubrl
and
das
imul
daa
pop
mov
or
mov
push
or
mov
mov
jle
or
adc
mov
das
xchg
test
inc
jbe
imul
sub
dec
add
mov
andl
mov
pop
test
cmc
mov
test
fadds
pushl
mov
xor
out
ljmp
mov
add
add
xchg
xor
inc
test
cmp
hlt
jno
inc
push
mov
mov
bound
or
xorb
and
jl
out
lret
icebp
hlt
decl
xchg
fnstcw
xchg
mov
subb
lods
clc
push
mov
test
ds
int3
mov
fidivl
xor
pop
lea
insb
jg
jne
adc
aam
in
mov
xor
mov
bound
mov
xchg
cltd
ficoms
lods
cmp
adc
inc
xlat
adc
dec
ljmp
or
mov
xchg
mov
dec
shl
hlt
or
lret
clc
outsb
cmp
or
pop
jmp
mov
adc
clc
sub
cmp
shlb
scas
pushf
mov
sbb
and
cmp
arpl
push
pop
xor
pop
or
test
mov
dec
psllw
mov
in
mov
js
lds
fisubrs
lock
add
dec
push
mov
imul
test
movsb
jecxz
push
add
push
jns
lock
rorb
out
add
stos
mov
add
jg
inc
stos
pop
dec
lods
imul
xchg
ret
mov
lret
call
add
dec
pop
pop
jne
xchg
mov
std
or
outsb
dec
daa
fidivs
or
lods
jmp
cmp
ljmp
or
inc
xchg
push
mov
cmc
lcall
arpl
add
dec
mov
call
hlt
fwait
xor
pop
or
pop
mov
push
push
adc
mov
pop
pop
push
dec
xor
push
lcall
mov
lods
push
cmp
sarb
rcrb
push
or
fimuls
or
mov
aas
cmpsb
mov
push
or
shlb
ret
scas
cmc
aas
shrl
inc
dec
mov
or
cmpb
shl
push
sbb
cmpsb
mov
xchg
mov
jb
adcb
test
xchg
mov
idiv
adc
inc
pop
cs
mov
out
arpl
xchg
ret
fcoml
inc
and
push
cmp
jns
addb
sbb
jo
or
add
out
inc
push
mov
sub
mov
pusha
jb
cmc
inc
cld
xchg
add
add
adc
or
stos
inc
jecxz
not
ds
push
and
lret
and
std
sbb
pop
sub
sahf
orl
jp
jns
xchg
jle
jg
adc
sbb
movsb
add
and
scas
and
hlt
fbstp
scas
cli
mov
jo
gs
mov
sar
xchg
mov
hlt
sbb
testb
js
sbb
pop
shrb
mov
adcb
lcall
xchg
loope
pop
aas
push
lcall
mov
outsl
inc
sub
in
xor
sbb
sbb
popa
and
xchg
aas
sub
xchg
xorl
test
scas
mov
imul
adc
in
filds
push
cmp
rclb
or
dec
mov
inc
add
pop
jae
iret
and
or
push
shrb
shrb
loop
push
add
inc
ss
int3
jg
pop
aas
rcrb
aas
or
xchg
arpl
xchg
js
cmc
cmp
xchg
sbb
sbb
ja
ret
dec
aad
icebp
jo
gs
mov
lock
pop
ficoms
test
scas
imul
out
pop
or
jno
insb
and
cld
roll
stos
in
push
pop
sbb
mov
sbb
mov
cmc
outsl
cli
negl
sarb
je
xor
push
lds
mov
mov
ljmp
fdiv
std
loope
test
ret
xchg
jg
pop
sub
cmpsb
jnp
xchg
subl
lea
sub
movsb
inc
call
sbb
sub
movsb
cmp
add
testb
fldenv
and
stos
mov
push
pop
mov
pop
mov
sub
add
clc
loopne
cmpsl
lea
lock
in
fistl
jl
dec
mov
test
aam
loop
jl
shll
scas
mov
or
out
inc
aad
pop
mov
pop
mov
test
add
pop
mov
sub
jmp
lret
imulb
mov
inc
sti
cmp
adc
test
pop
or
outsb
nop
das
sub
clc
jg
push
add
lods
roll
and
incl
fsubrl
add
push
cli
push
xchg
push
es
xor
jb
adc
add
data16
mov
mov
sub
mov
sbb
xor
xchg
add
inc
sub
push
mov
xor
mov
shlb
dec
clc
adc
mov
divb
andl
inc
or
push
loopne
add
adc
ret
push
inc
jge
mov
xchg
sbb
fdiv
cli
push
jb
jno
mov
data16
les
call
cmp
or
outsb
mov
daa
dec
mov
jmp
fbld
repz
ds
mov
hlt
or
mov
imul
xor
push
lahf
and
mul
test
pop
insb
negl
add
mov
aaa
adc
bound
daa
pop
add
das
add
cmp
sub
neg
cmp
jbe
mov
jecxz
aam
movsb
aad
sub
or
sbb
add
xchg
push
imulb
in
sbb
pop
ret
jnp
mov
sub
push
mov
fidivrl
push
push
add
ss
mov
sub
clc
xlat
mov
adc
mov
push
lcall
jns
out
pushf
pop
shll
mov
sarb
outsb
inc
nop
mov
jle
fistpl
push
cld
icebp
decl
in
hlt
cmp
add
stc
add
push
in
sbb
in
inc
mov
jp
and
jmp
js
cmp
cmp
push
in
mov
ds
push
sub
cmp
enter
inc
int
ljmp
jmp
ja
ljmp
push
xchg
sahf
xchg
sub
ja
sub
sbb
sub
cmp
push
jge
cmp
add
adc
inc
pop
push
fstps
xchg
cmpb
mov
mov
pop
fwait
or
sbb
test
push
in
or
mov
test
sub
insb
mov
outsl
insb
je
sub
int
aad
lods
lods
in
ret
mov
in
shrb
fbld
pop
cmpsb
decl
add
add
add
pop
lret
je
les
mov
inc
push
data16
jnp
shrb
shl
mov
mov
in
push
in
rolb
out
pop
lock
sub
insb
pop
mov
jmp
add
and
mov
in
jbe
fs
mov
bound
and
test
jg
lock
push
montmul
cmpsb
inc
mov
cmp
add
scas
ret
dec
inc
mov
lods
or
adc
outsl
jle
outsl
inc
push
loope
mov
add
lods
adc
cld
inc
lcall
test
push
sub
sti
negb
dec
cld
decl
inc
dec
push
es
mov
cmp
xchg
push
pop
aam
mov
mov
sbb
adc
mov
sti
popa
dec
popf
pop
jns
sarl
pushf
test
dec
gs
add
mov
adc
sub
fsubs
rcll
dec
mov
ret
rcl
push
imul
clc
pop
push
inc
push
or
mov
fld
cli
out
adc
ror
xor
or
dec
jl
cwtl
adc
sub
add
xor
xor
cltd
add
inc
push
inc
fsubs
mov
jo
mov
sub
adc
sub
insl
movb
mov
mov
xchg
push
xor
push
pushl
loopne
add
dec
mov
push
mov
nop
xor
jg
orl
xor
imul
adc
popa
xor
dec
orl
add
mov
push
inc
clc
std
sbb
into
loope
jp
cmp
mov
and
push
in
mov
lods
js
movsb
inc
cli
loope
inc
flds
cmp
clc
test
xorb
push
repnz
stos
sub
push
rolb
inc
push
dec
dec
pushf
dec
js
hlt
scas
dec
loope
mov
ljmp
fwait
push
lock
mov
sub
into
mov
rolb
sub
push
pusha
out
mov
sbb
sbb
pusha
mov
test
aas
xor
xchg
add
jp
hlt
das
frstor
fyl2xp1
cmpb
int
xchg
jle
inc
inc
pop
jecxz
gs
pop
sbb
fs
sbb
sbb
sbb
in
loopne
scas
js
fwait
lret
mov
pop
fs
scas
xchg
rclb
cli
and
fwait
ret
sbbb
pushf
rclb
mov
dec
adc
jns
ljmp
xor
test
stos
mov
je
sub
scas
jno
push
rorb
movsb
sbb
cmp
ss
fcomp
pop
gs
add
cmp
hlt
cmpsb
cmc
pop
cmpsb
jp
ret
out
dec
xchg
enter
ljmp
fisubl
pop
js
sub
data16
jl
stos
jg
in
dec
pop
sub
sahf
xchg
add
push
loopne
dec
mov
mov
addb
pop
mov
iret
fists
add
mov
aaa
test
adc
sbb
sarl
int
iret
mov
and
int
jg
fidivrs
add
shrb
inc
or
mov
into
ljmp
lods
jno
sub
mov
or
sub
pop
adcb
pop
jns
add
jecxz
fmuls
ja
adc
sti
and
pop
dec
loope
mov
mov
pop
leave
dec
and
pusha
ljmp
enter
mov
ret
subb
cli
and
aad
arpl
jb
pop
pop
adc
stos
inc
mov
xchg
cmpsl
mov
std
aaa
clc
cld
mov
loope
jb
stos
or
loop
pop
and
jns
insb
mov
inc
mov
dec
and
sub
xchg
xor
shl
gs
enter
mov
and
inc
mov
mov
adc
xchg
pusha
inc
loopne
fisubl
ljmp
and
cmp
xchg
clc
mov
jecxz
aad
sub
adc
cmp
mov
jge
sub
sbb
and
jbe
cli
fistl
mov
xchg
push
out
mov
push
loop,pn
xor
push
shlb
add
xchg
mov
sbb
cmp
shrl
xchg
inc
sub
jns
mov
push
cmp
pusha
std
xchg
jl
mov
add
das
mov
mov
mov
jp
addb
call
jno
jo
call
push
adc
dec
shl
cmc
stos
out
mov
push
pushf
pop
mov
sub
pop
subb
and
ljmp
xchg
out
loope
jno
mov
add
insl
mov
inc
pop
sbb
mov
lods
push
lock
cmpsb
iret
loopne
mov
stos
lea
lods
pop
push
leave
fadd
into
repz
jp
add
xor
decl
enter
out
into
adc
loop
xchg
sub
das
shlb
mov
cmp
push
mov
pop
pushf
push
xlat
mov
inc
and
and
lock
sbb
cmpsb
mov
push
ret
fisubrl
roll
movsl
movsb
das
mov
sub
or
pushl
add
add
cld
es
lods
jp
jbe
inc
jno
cli
in
fstpt
repnz
mov
in
mov
cmpsb
daa
movl
and
imul
fwait
shl
pushl
popa
rcll
xor
jl
adc
loop
lahf
jae
cmp
or
clc
cmpb
adc
nop
rcrb
add
dec
aad
jecxz
test
pop
push
sub
add
cmp
std
lcall
enter
pop
repnz
fdivp
sub
sub
dec
loopne
jb
and
jecxz
add
xchg
stos
ss
mov
xor
out
push
adc
incb
outsl
clc
xchg
adc
test
dec
dec
jle
and
les
fs
jg
shlb
addb
out
test
push
push
in
js
ja
jmp
mov
add
cmpb
mov
outsb
add
test
mov
mov
aaa
daa
mov
xchg
mov
lahf
mov
xorb
cltd
movsl
mov
data16
pop
push
jmp
cmc
callw
xchg
ds
mov
mov
je
or
fwait
or
add
enter
int
mov
jnp
cwtl
jbe
test
inc
shll
test
push
sub
and
cld
pop
hlt
xchg
xor
cmpsl
sub
in
sarl
mov
cmp
pop
xor
or
rcrl
popa
icebp
in
mov
or
fsubl
cmp
jg
jae
add
push
ljmp
popf
and
jg
cmp
mov
push
ja
int
aas
xchg
out
and
cmp
adc
in
mov
jge
lods
jle
pushf
adc
or
les
cmp
aad
inc
dec
fcoml
add
dec
jl
cmpsb
pop
jge
popf
je
test
nop
test
nop
xchg
loop
inc
mov
ret
divl
out
cmp
cmp
lahf
lahf
dec
pusha
and
xchg
dec
cld
stos
sub
fsubs
dec
adc
rcl
dec
scas
jecxz
mov
fisubs
stos
push
xchg
enter
dec
dec
jno
fwait
sbb
imul
je
test
inc
ja
ret
int3
notl
js
scas
das
lcall
iret
lds
insb
sub
lock
stos
pop
xchg
or
jl
lcall
loop
add
and
push
clc
xor
fdivrp
sbb
lcall
mov
sbb
fldl
pop
and
push
scas
push
push
cmpsb
mov
push
inc
lea
popf
dec
repz
mov
push
cwtl
shlb
fnsave
xchg
xor
add
xchg
or
mov
xchg
add
insl
cmp
out
xchg
hlt
dec
cmpsb
scas
jno
xor
mov
out
cmp
or
xchg
or
into
das
mov
mov
xchg
xor
mov
out
negb
mov
fs
lods
pop
mov
cmp
scas
out
out
sbb
jo
fs
pushf
enter
ja
pop
aam
jo
enter
lcall
out
ficomps
add
out
dec
and
jp
cltd
cwtl
loope
cmpsl
decb
jo
push
push
push
mov
roll
sub
sti
push
hlt
adc
push
fstps
mov
ret
bound
icebp
inc
add
push
hlt
lods
jbe
mov
addl
pop
inc
pop
out
xchg
fs
mov
jg
scas
sub
hlt
cld
sbbl
push
add
pop
dec
jge
and
loopne
push
sbb
insb
movsb
iret
fwait
adc
shll
into
add
mov
fbld
jae
lret
xchg
aam
mov
scas
movb
stos
aas
clc
jl
and
jnp
arpl
iret
subb
mov
add
mov
jne
jns
das
mov
ja
add
sub
add
sbb
lcall
inc
mov
rolb
jmp
jbe
pop
mov
cli
or
insb
mov
xor
lea
ja
jo
hlt
lock
push
stos
in
fbstp
lret
aas
or
or
out
ret
fnstsw
sahf
sahf
lods
jo
jp
push
jmp
fiaddl
test
pop
int
inc
cs
pop
cli
sub
adc
in
mov
jne
shll
andl
cmp
jo
jmp
mov
pusha
sbb
jae
xchg
xorb
hlt
xchg
or
sahf
inc
fcompl
in
jae
rcrb
push
add
lret
adc
out
aam
and
dec
sub
ja
pop
push
dec
inc
push
or
pop
add
mov
and
std
push
cmovle
addl
push
jne
lahf
adc
xchg
sub
mov
jb
xor
ljmp
ljmp
inc
mov
fstpt
inc
test
sub
scas
nop
aad
inc
les
leave
mov
aam
mov
pop
stc
insl
es
adc
ljmp
adc
jns
arpl
mov
xorb
sbbb
xchg
cmp
int3
sbb
ret
push
outsb
ret
push
pop
mov
xchg
movl
bound
sti
add
repz
or
sbb
sti
repnz
adcl
sbb
fwait
sbb
fnsave
push
lds
lret
inc
inc
clc
inc
cmc
scas
nop
fsts
aad
jmp
cmp
je
adc
rol
je
xchg
dec
ds
sbb
jo
fs
pop
and
dec
out
adc
testb
rorb
aam
and
push
mov
ja
pop
jbe
or
push
and
out
or
xlat
cmpsb
hlt
cwtl
shll
lods
mov
cli
ret
pop
lods
pop
ficoms
orl
lcall
sub
data16
lret
mov
sbb
adc
cld
inc
dec
pop
fsubp
push
imul
sbb
sub
sub
shlb
xchg
int3
or
aas
sbb
sub
inc
mov
aaa
add
cmp
int
aad
and
sti
xchg
jg
jge
inc
and
adcl
mov
mov
ficompl
pop
or
cmp
pop
mov
in
lahf
push
inc
push
sbb
xchg
sahf
dec
pop
jo,pn
xchg
sahf
push
scas
adc
xor
das
mov
fldl
pop
push
cmp
outsl
jo
sbb
xor
xchg
jb
xchg
sbb
push
mov
cld
push
incb
xor
lock
sbb
xchg
loopne
mov
mov
aas
stos
cli
mov
cmpl
cld
dec
ja
cmp
mov
lret
rorl
mov
inc
fcmovnb
ja
adc
jge
fstp
jnp
or
mov
sbb
negb
mov
ja
sub
decb
pushf
leave
or
xlat
mov
sbb
xchg
mov
inc
fidivs
jle
popa
xor
rolb
sahf
add
sbb
movsb
xchg
lret
nop
je
fildll
loopne
jo
andb
and
xchg
test
fimull
hlt
add
add
and
sbb
inc
push
lcall
mov
mov
pushf
rorl
arpl
in
pusha
sbb
cmp
insl
push
cmp
insl
lret
mov
popf
xchg
xor
divb
add
xchg
sbb
dec
rcrb
jle
verw
data16
loopne
sahf
arpl
notb
jnp
add
stos
in
loope
enter
lret
xchg
sub
push
sub
pop
addb
jg
bound
cmp
out
cld
sbb
pop
inc
sarl
ja
daa
sub
cmp
xchg
cmp
loop
push
mov
cmpsl
pop
in
shll
cs
add
cmp
pop
and
loopne
jbe
sbb
pop
cmp
das
ret
ds
popa
push
cltd
je
call
push
push
rcll
in
mov
out
mov
mov
xor
andl
in
sti
dec
hlt
push
pop
fdivp
and
jecxz
movsb
xorl
in
mov
ljmp
cld
xorl
rorb
sub
jno
std
mov
std
push
or
jo
xorl
shrb
pusha
icebp
add
loopne
negb
lret
and
icebp
inc
ficomps
cli
add
xor
adc
jle
dec
xor
jg
cli
daa
and
push
int3
push
or
movsl
ljmp
push
test
xor
int
hlt
adc
dec
mov
rorb
js
or
rol
xor
mov
scas
sarl
repnz
xor
dec
stos
pop
xor
fwait
sahf
repz
sub
icebp
fstl
jl
adc
outsl
das
xchg
je
mov
or
fs
inc
mov
std
mov
and
inc
jbe
jmp
in
xchg
cmp
mov
xor
pop
jae
aaa
jg
mov
inc
sar
loop
mov
jne
add
adc
loope
dec
outsb
rorl
je
jb
incb
pop
idivb
icebp
dec
push
ss
xlat
mov
push
or
adc
scas
test
push
outsb
push
pushf
and
es
mov
cmpb
inc
daa
les
sub
inc
push
add
and
sahf
js
in
dec
pop
xor
int
add
push
inc
push
push
rcr
add
aaa
adcl
enter
inc
mov
icebp
or
ljmp
adc
and
lods
sub
es
in
inc
and
jle
ljmp
sbb
xchg
outsl
and
xor
shrb
mov
or
das
add
adcb
in
movsl
aad
pop
mov
popa
hlt
jmp
xchg
mov
inc
jecxz
sbb
fiaddl
icebp
pop
inc
rclb
insl
inc
dec
xchg
subl
mov
repnz
les
mov
clc
incl
add
pushf
or
push
fsubs
in
pop
fmull
add
dec
iret
pop
ja
aad
out
and
lods
mov
out
mov
rclb
mov
xor
xlat
sbb
lock
inc
xor
inc
loope
sarb
jmp
shl
push
fistpl
out
jae
pushl
js
in
pop
into
dec
mov
je
cltd
xchg
mov
ljmp
push
lds
pop
fiadds
or
or
adc
fmull
adc
test
in
mov
ljmp
fdiv
ret
push
jge
add
in
sbb
mov
pop
inc
inc
cmp
aad
aam
fucomi
add
and
cmp
in
cmp
ret
add
inc
cld
cwtl
push
pushf
inc
add
lret
inc
pop
loopne
addb
fwait
dec
mov
sub
adc
add
call
sbbb
mov
xchg
ret
mov
add
jbe
dec
test
push
jg
add
popf
fs
loopne
pop
add
xor
cli
das
sar
add
loop
xorl
and
add
add
ja
loop
add
nop
push
jns
out
fucomi
dec
das
repnz
pop
add
inc
daa
mov
jbe
xor
inc
dec
test
push
testb
incl
add
mov
test
add
inc
std
xchg
xlat
jno
orl
xor
inc
hlt
jge
xor
jmp
fcmovbe
push
mov
popa
outsb
hlt
add
and
add
out
add
xchg
pusha
scas
sub
fnstenv
mov
stc
or
push
or
xchg
sbb
cld
mov
nop
loope,pn
mov
jmp
cmp
loope
jb
sti
cmp
or
mov
clc
xchg
fdivs
in
out
jo
adc
ret
fimull
or
sub
lods
and
mov
call
cmc
jle,pt
test
rorb
jp
jp
std
or
sbb
inc
adc
imul
mov
pusha
and
movsl
mov
add
cltd
jmp
push
test
mov
xlat
xor
jne
sbb
dec
pop
movsl
cmp
insl
popa
add
jecxz
cmp
repnz
jl
movsb
ds
stc
and
sbb
mov
gs
jae
mov
enter
lret
sahf
sti
or
cld
xchg
inc
adc
es
bound
popa
dec
loopne
sbb
rolw
adc
mov
out
in
cltd
fistl
push
pmullw
push
pop
jg
lods
movsb
fcmovb
leave
shl
inc
fs
ljmp
add
xchg
cmp
push
jnp
add
sbb
std
out
sub
push
ret
xchg
inc
xchg
push
push
cmp
xchg
xor
cld
ja
ljmp
jl
push
push
or
scas
add
aam
jb
rol
dec
sbb
jg
sbb
push
adc
es
xor
lea
clc
repnz
les
into
popa
nop
js
push
add
jl
jae
icebp
cli
and
push
inc
xchg
inc
je
call
pusha
sbb
imulb
fdivp
int
sub
pushf
out
mov
scas
imulb
in
xor
and
mov
pusha
faddl
insl
mov
pop
jl
pop
and
inc
push
ret
jg
jecxz
mov
lds
aam
mov
push
cmpsl
es
imul
push
push
negb
repnz
lret
and
insb
jle
sbb
lock
mull
and
lods
pop
add
orb
aad
mov
imul
and
and
rorb
fs
jb
and
rolb
fdivr
xchg
mov
or
insl
inc
je
ja
jmp
dec
lock
mull
sbb
sub
or
mov
cwtl
jg
adc
push
scas
and
fsubrl
and
and
adcb
lret
hlt
mov
das
sarb
mov
bound
and
cmc
jecxz
cmp
mov
stos
shrb
call
loope
xor
cli
mov
fwait
mov
aam
xor
out
sub
sub
mov
jle
push
outsl
dec
inc
sarl
dec
imul
or
clc
jge
xchg
fmul
push
adc
pop
bound
ret
sub
ja
movsl
cltd
imul
test
dec
mov
cwtl
xchg
adc
jl
add
les
jge
cmp
push
repz
or
loop
test
pop
jne
mov
jbe
out
and
push
and
cmp
adc
or
and
or
sbb
mov
or
inc
xchg
test
ret
mov
ret
ficompl
std
aad
mov
add
xor
mov
incl
xlat
add
mov
add
mov
jb
popa
in
push
arpl
pop
push
fsubrl
push
ror
addr16
mov
or
pusha
xchg
jecxz
outsl
dec
ret
clc
lcall
repz
lock
inc
and
sbb
add
repnz
pop
inc
push
aam
add
js
add
xor
imul
out
mov
jmp
xor
mov
mov
pop
shlb
pop
add
subl
call
out
adc
sub
jp
mov
cld
pop
jb
cmp
xchg
jb
out
jmp
cmp
and
push
cmp
add
scas
jl
or
sub
pop
mov
sbb
pop
and
rolb
lahf
inc
or
sbb
lds
sub
push
push
loopne
icebp
aad
mov
xor
xchg
and
test
incl
insb
jecxz
cld
mov
aad
xor
pop
sbb
jmp
push
sbb
js
push
sub
sub
mov
lock
push
lea
aad
movsb
addb
enter
clc
push
sti
and
in
mov
stc
sub
out
js
xor
mov
imul
cmp
aas
and
xchg
sahf
add
clc
loopne
dec
push
negb
cmp
jge
dec
mov
sub
into
or
or
mov
decb
js
mov
les
jg
shl
in
and
jbe
pushf
cmc
and
push
aam
roll
repz
adc
je
mov
filds
xchg
jle
sub
xchg
pop
mov
cmp
pusha
loope
clc
inc
xchg
push
jo
arpl
fdiv
popf
push
push
les
mov
push
xlat
clc
repz
negl
lods
cmpsl
mov
adc
sbb
dec
push
orb
push
add
cmp
clc
scas
push
mov
movsl
or
and
insl
pop
jge
push
ds
xchg
fidivrl
add
cmp
jb
dec
dec
nop
sbb
inc
adc
add
push
andl
rolb
push
pop
movsb
loop
sbb
adc
ficoms
fcmovu
mov
inc
mov
cmp
loop
mov
dec
push
or
jo
jl
test
mov
sahf
cmp
hlt
inc
push
push
cld
xor
inc
aas
sub
sahf
mov
mov
xchg
sbb
adc
xor
mov
out
push
ja
ja
movlps
movsl
das
push
insb
push
push
clc
jg
pop
addl
popa
jnp
sbb
or
es
dec
push
mov
sub
test
pushf
mov
mov
pop
sti
push
mov
sbb
divb
jle
popa
mov
lcall
nop
fisubs
fistps
rclb
ljmp
aad
jle
insb
or
shl
iret
jae
cltd
and
adc
push
xor
dec
lahf
add
mov
aam
and
aad
add
sbb
aam
fcomps
pop
mov
sbb
dec
add
stos
mov
scas
aas
std
ret
int
inc
test
test
repnz
stos
sub
adc
and
mov
popf
into
cld
ficompl
sbb
int
pop
mov
fcoms
sub
add
pop
decl
jl
lock
rorb
add
ja
dec
adc
loopne
hlt
ja
clc
inc
popf
lcall
icebp
push
xchg
mov
imul
int
out
js
mov
jl
repnz
rcrb
mov
adc
cwtl
sub
lcall
cmp
and
movsb
xor
add
js
or
ss
or
imull
fisttpl
cmc
loop
pusha
or
mov
clc
push
sbb
pop
hlt
mull
insb
repz
mov
cmpsl
add
fs
pusha
mov
jg
jo
scas
dec
cmp
xchg
enter
cmp
addb
jle
ja
mov
in
sbb
push
testb
dec
lods
xchg
jle
pop
add
jae
jecxz
xchg
bound
push
sar
push
inc
sub
cmp
sub
xor
in
mov
push
shlb
mov
cwtl
lahf
sbb
popf
stos
mov
jg
mov
int3
sub
jg
mov
fstpt
pushl
pop
push
jl
jbe
add
adc
or
jge
inc
lret
rcll
add
test
ror
lock
add
js
fcmovbe
fwait
out
jle
ret
scas
mov
and
popf
sub
dec
imul
mov
rorl
into
add
xor
sbb
sub
adc
sub
mov
daa
out
fsubl
call
cmp
cmp
mov
add
in
push
xor
orb
adc
push
dec
add
push
mov
fisubl
push
mov
add
add
pop
pusha
xchg
aaa
dec
cmp
vminss
sub
pop
jo
setae
das
or
test
incl
push
andb
adc
fiadds
mov
mov
add
push
rcrb
sub
jae
add
add
out
push
arpl
xchg
test
cld
add
and
fwait
cmp
pop
imul
mov
aad
pushl
incb
mov
dec
sbb
sub
movsb
pop
push
lds
dec
dec
xchg
inc
xchg
sub
call
xor
sbb
call
jno
rolb
pop
cltd
ljmp
stc
push
out
jae
add
jg
inc
sbb
jb
adc
jae
dec
shlb
mov
fdivl
add
dec
push
jb
lock
insl
roll
inc
or
movb
xchg
hlt
sub
ficoml
push
adc
sub
testb
jp
push
lret
movsb
fsubs
pop
sbb
lret
fcmovu
in
icebp
filds
fisubl
adc
insb
pop
loope
loopne
or
xchg
xor
xor
fcoms
pop
sbb
ret
cld
pop
dec
enter
push
mov
or
cs
ss
movsb
test
push
jo
mov
mov
xor
jae
dec
pmaxub
insl
fmull
xchg
ljmp
cmp
ja
push
addb
jb
and
insb
pushf
push
fwait
jns
insb
mov
mov
imul
adc
clc
mov
loopne
sbb
in
pop
add
mov
mov
pusha
push
out
xchg
push
push
roll
sti
cmp
sahf
push
add
inc
dec
fs
ret
mov
fwait
bound
and
dec
data16
inc
jmp
pop
enter
loope
jecxz
inc
xor
or
das
xchg
ds
add
xor
inc
or
lods
inc
inc
fwait
jp
je
sub
lds
dec
cmc
add
shrb
cmpsl
jl
aas
lcall
mov
shll
mov
xor
xchg
mov
or
sub
adc
pop
lea
test
sub
push
pop
add
repz
test
ljmp
sub
sbb
xor
add
sub
add
pop
push
push
dec
mov
es
cmp
xchg
outsl
gs
out
roll
rcrl
add
xchg
rolb
adc
clc
into
push
push
repz
cmp
lahf
inc
jns
dec
jg
cli
jbe
fadds
pushf
ljmp
sar
or
xchg
loopne
mov
jbe
add
inc
sub
inc
cltd
dec
insb
cmc
repz
or
pop
daa
sbb
ret
mov
ljmp
inc
cwtl
cmp
xchg
lock
add
inc
stos
in
add
sbb
lds
js
xor
xchg
mov
idivb
ret
lcall
inc
sahf
cltd
mov
mov
notb
push
out
out
int
pop
movsb
aaa
je
sti
test
mov
je
dec
addb
imul
xchg
hlt
sbb
mov
pop
xor
pop
add
out
clc
imulb
notl
rcll
mov
sub
cmpsb
jb
pop
cmp
es
stos
add
out
cld
aad
and
daa
lret
enter
xchg
stos
or
cmpsl
and
clc
sbb
cmp
push
fmull
pusha
pop
jmp
pop
xor
into
rcrb
ds
lods
hlt
push
jmp
cltd
or
push
mov
mov
sbb
in
aam
lods
shr
add
mov
mov
xchg
lahf
xchg
je
fs
stos
jle
les
or
and
lcall
data16
std
lcall
lea
add
lcall
xor
push
add
clc
testb
jge
aas
icebp
pop
in
mov
or
fimuls
dec
sub
jecxz
sub
outsl
jmp
jl
inc
es
mov
jnp
mov
xchg
or
xchg
enter
inc
pop
icebp
sub
scas
repz
out
sub
das
dec
adc
sbb
xlat
add
cmpsb
inc
mov
or
scas
pop
cld
fs
movsb
push
jb
pop
sub
pushl
jno
data16
xlat
pusha
int
mov
adc
xor
iret
push
and
test
fisubrs
xchg
dec
pop
hlt
xor
mov
push
pop
jbe
rorb
push
insb
sbb
jge
lods
push
or
and
popf
jbe
std
roll
pushf
push
clc
movlps
cmc
insl
fiaddl
xor
outsb
aas
or
mov
in
mov
push
loopne
jb
xchg
out
dec
jg
xor
adc
and
outsl
in
jl
xor
jb
movsb
add
add
roll
insb
test
mov
movsb
cmc
popa
push
mov
fidivl
push
int
push
loopne
add
jg
lcall
rolb
and
jge
pop
shrl
cwtl
psubd
lcall
das
sbb
daa
jno
adc
pop
cmc
pusha
out
add
stos
mov
pushf
cwtl
sbb
sti
cmpsl
sbb
test
xchg
shlb
mov
addr16
idivb
mov
lds
jnp
inc
inc
mov
xor
in
iret
out
ss
inc
adc
push
das
dec
fistpl
jle
fdivp
popfw
inc
xchg
pop
push
imul
testb
pop
loop
cmpsb
loop
sub
push
sbb
mov
inc
and
sbb
test
shlb
bound
call
xlat
int3
decl
lock
cmp
push
add
les
aam
and
js
push
add
scas
jno
lret
sbb
arpl
add
loopne
lcall
jmp
push
pop
insb
adc
aam
sbb
clc
aaa
roll
or
xchg
lret
test
nop
loop
aaa
scas
insb
scas
fs
mov
scas
or
pop
loop
shrb
cmp
int3
adc
xlat
add
outsb
mov
mov
cld
cmpsb
rcr
jge
dec
pop
pop
jbe
lock
adc
dec
pop
jle
inc
sti
add
xchg
into
mov
push
jnp
out
sarb
mov
lods
mov
cmp
or
pop
pop
loop
adc
adc
jnp
or
dec
and
data16
in
clc
jne
jge
sti
dec
dec
dec
mov
push
loope
push
in
push
add
das
mov
or
ret
mov
pop
shll
xor
add
mov
push
stos
aas
mov
daa
cmp
sbb
cmc
xchg
imul
cld
popa
xchg
into
adc
ljmp
pop
fisubs
loope
filds
push
sub
das
icebp
jae
dec
cli
popw
dec
or
jl
or
dec
adc
movsl
sbb
adc
sbb
lret
stos
push
lock
mov
pop
jmp
or
push
xchg
loopne
push
jb
out
push
jp
and
mov
cmp
mov
xor
das
aas
xchg
xchg
dec
lock
int
das
les
inc
clc
test
bound
add
fisubrl
icebp
fsubl
aam
or
idivl
pop
adc
out
mov
mov
scas
icebp
mov
and
and
inc
lret
imul
sbb
mov
cmp
inc
sbb
mov
or
jl
mov
cmp
outsl
and
pusha
stc
call
test
pop
mov
js
or
xchg
cmp
mov
adc
add
push
add
dec
or
sahf
xor
insl
sub
sub
das
clc
push
icebp
shll
jp
pusha
push
outsb
inc
mov
lret
lret
xor
mov
dec
cmp
cld
cmp
xchg
jle
stos
pop
clc
incl
arpl
or
in
popa
mov
and
push
adc
pop
aad
aaa
adc
loopne
xor
aam
inc
mov
mov
xchg
sbb
iret
call
sbb
cmp
dec
mov
adc
lods
repz
test
push
cwtl
add
pop
adc
fidivs
xchg
xor
mov
jl
cs
add
mov
mov
sbbb
or
or
pop
add
rolb
push
pop
xchg
fsubrs
fnstenv
xchg
decb
cs
cld
lods
pop
or
adcb
imul
scas
jo
jo
push
scas
jl
enter
push
or
pop
add
xchg
loope
cld
adc
out
push
or
movsl
pop
cli
mov
push
and
add
xchg
jo
str
or
ljmp
sub
loope
adc
or
mov
jns
push
push
ret
or
jl
mov
mov
movsb
mov
aad
mov
jns
lret
xchg
dec
dec
push
or
je
adc
lods
shrb
lret
outsb
push
pushf
aas
push
dec
push
rorl
push
decb
add
and
adc
lds
mov
jg
js
push
lea
pop
mov
cs
push
scas
jae
add
loopne
xor
or
and
xchg
mov
jb
out
cli
in
rorl
and
inc
and
mov
loope
pusha
mov
enter
or
inc
push
call
enter
call
add
push
jl
jp
adc
dec
test
and
rcrb
lods
cmp
adc
test
loope
add
inc
lods
pop
xchg
and
insl
lds
xor
test
sarb
mov
add
lds
sub
aaa
sub
rol
add
pop
call
mov
fstps
cmp
dec
inc
rcrb
cmc
inc
add
push
mov
int
js
xchg
sbb
mov
mov
mov
faddl
std
and
adc
mov
dec
adc
andb
adc
inc
fistl
ret
mov
jbe
cli
loopne
scas
pop
jl
add
jge
jge
leave
xchg
enter
sahf
lret
or
cs
cli
add
fistl
mov
mov
mov
mov
leave
add
cmp
push
adc
mov
scas
add
adc
or
clc
jg
mov
fisttpl
mov
pop
mov
dec
mov
cmp
push
mov
test
sub
adc
aas
sahf
push
inc
add
movsl
inc
inc
js
pop
insb
jecxz
push
jae
rcrb
mov
or
arpl
xor
fstl
jg
adc
pop
outsb
aam
xchg
adc
sbb
mov
push
je
cmpsb
shlb
lcall
enter
mov
loop
inc
pop
bnd
jp
pop
mov
arpl
test
adc
cwtl
pop
push
sbb
cli
fildll
adc
pop
add
or
lahf
sarb
push
push
jl
push
sub
cmpsb
adcb
sub
mov
mov
add
enter
jl
lea
inc
xlat
loopne
icebp
loopne
adcl
mov
and
or
and
fcmovne
mov
bound
xor
mov
popa
mov
shrb
inc
test
and
pop
or
sub
decb
sub
mov
repnz
inc
popf
nop
sbb
xchg
add
cs
add
in
inc
jne
jb
xchg
mov
add
xchg
imull
sub
mov
mov
and
inc
scas
scas
pop
add
inc
test
fwait
ja
sti
out
fnstsw
shl
sub
mov
jmp
jno
cwtl
sub
cltd
cmp
pop
add
cmp
push
mov
push
dec
adc
cmp
sbb
inc
sti
lcall
movsl
add
stos
loopne
xchg
fs
cs
dec
bound
icebp
and
xchg
test
movsb
xor
or
mov
cmp
rorb
push
push
in
fcmovnu
aaa
bound
push
xor
and
jl
dec
loop
push
mov
dec
or
dec
adcb
cmpsl
mov
insb
hlt
stc
lret
outsb
mov
mov
mov
push
ljmp
jp
ds
es
cwtl
adc
push
xchg
xchg
push
aad
ret
lods
jo
fstpt
push
pop
push
addb
mov
sahf
mov
aad
fisttps
pushf
push
lds
rclb
movsb
outsl
lcall
mov
cld
xrelease
lret
in
add
out
dec
adc
push
pop
dec
xor
or
stc
in
pop
sub
mov
popf
es
rcrb
dec
push
shr
jmp
and
int3
sub
arpl
xor
cmc
fisubs
sbb
pop
and
ss
pop
add
inc
or
mov
mov
inc
add
cmp
mov
nop
scas
adc
mov
shlb
test
and
dec
pop
adc
mov
mov
ret
add
jo
mov
test
lahf
adc
cmpsb
mov
test
mov
adc
inc
adc
lock
xchg
mov
sub
sar
sub
leave
mov
push
je
imul
scas
cmp
pusha
sub
clc
and
ljmp
mov
mov
jb
xor
or
xchg
test
mov
loopne
push
test
std
cmpsb
pop
stos
adc
fisttpll
outsl
in
adc
repnz
divl
add
insb
stc
xor
clc
fldl
push
fdivs
inc
adc
push
adc
and
dec
dec
test
or
rcrb
imul
mov
stc
add
insl
pop
sub
mov
rcrb
and
fnstenv
pop
jl
jl
test
add
imul
add
sub
rclb
cs
xchg
push
mov
scas
fsts
test
sbb
xchg
out
pop
mov
cmp
jae
pop
sahf
cmp
inc
dec
fidivrs
lock
jae
mov
jg
mov
pushl
xchg
pop
int
arpl
out
mov
lret
dec
shrb
fildll
pslld
call
cmp
fsubr
sub
mov
and
or
and
xor
push
mov
add
sub
mov
call
jb
int
test
pop
add
push
mov
lea
lds
add
sbb
inc
js
les
mov
rcll
scas
stc
shll
test
loopne
es
mov
cmc
mov
xchg
out
inc
jl
mov
sub
add
xor
test
lods
jae
add
mov
ja
les
adc
imull
add
icebp
mov
inc
cmp
jl
or
dec
clc
sbb
shlb
loop
stos
gs
jg
sbb
mov
ja
sub
inc
call
xor
xchg
lods
mov
inc
add
notb
rolb
inc
movsb
out
jo
ja
stos
jo
inc
lret
adc
cmp
orb
das
in
fldcw
adc
aas
ljmp
add
inc
xor
mov
inc
bound
lock
loope
insb
jne
mov
icebp
lret
push
negb
mov
pop
mov
in
lock
hlt
shll
add
xchg
fs
data16
cmp
fbld
xchg
sbb
scas
or
call
mov
fiadds
mov
mov
mov
cmp
add
push
mov
add
mov
fwait
shlb
xor
sbb
scas
clc
or
in
and
xchg
sbb
and
push
or
sub
out
cwtl
pop
push
subb
int
sub
imul
lock
fbstp
call
add
fisubrl
mov
cltd
fs
stc
loop
push
jge
fdivrs
jb
mov
push
into
fidivrs
fmul
mov
sbb
mov
es
sbb
push
lret
push
leave
adc
lock
xchg
call
mov
jbe
cmc
mov
mov
pop
pusha
hlt
mov
cmp
enter
mov
push
dec
xor
add
in
fs
hlt
fwait
push
jno
shlb
aas
mov
shll
lods
cmpsl
or
lock
sbb
push
or
pop
loop
aam
add
das
inc
cmc
ljmp
ds
mov
sub
aas
xchg
mov
mov
cmpsb
pop
js
lods
mov
bound
dec
lret
push
lcall
push
in
stos
dec
jb
lret
mov
cld
out
rcl
sbb
pop
incb
jns
jp
cmp
push
inc
jmp
xchg
and
je
add
sbb
nop
int3
imul
cmp
pop
roll
push
dec
inc
and
mov
jg
cmp
and
stos
jae
inc
dec
mov
mov
adc
lods
cmpsl
or
push
jno
or
in
cltd
mov
add
or
mov
movsl
push
call
shlb
mov
into
adc
aas
insb
pop
test
jp
test
mov
aas
add
push
cld
mov
ja
mov
jmp
cmpsl
pop
cs
roll
lahf
enter
mov
bound
daa
testb
xchg
xchg
fcmovbe
sub
jbe
inc
out
sahf
lret
pop
jmp
xor
or
cltd
jo
bound
ja
xorb
pop
rcrl
nop
rcrb
testb
or
push
adc
ljmp
adc
mov
push
xchg
sahf
loopne
and
cld
xor
add
sbb
scas
mov
and
incl
inc
mov
icebp
jg
jge
shll
pop
sbb
hlt
sbb
push
push
outsl
sti
aaa
add
mov
or
mov
mov
xor
add
xchg
fcmovb
mov
and
inc
sbb
into
rclb
iret
xor
pop
mov
xchg
adc
cmp
add
mov
leave
push
xor
out
in
add
xor
adc
dec
xor
test
inc
call
int3
xchg
cmc
cmp
dec
add
mov
push
mov
jnp
sti
data16
ja
test
jbe
data16
lock
fadd
mov
sub
jg
pushf
scas
addl
cli
push
xor
loope
xchg
clc
jae
popa
or
bound
push
out
sub
jbe
mov
lcall
sbbb
clc
movsb
sbb
xor
push
in
aas
mov
mov
dec
decl
fsubrl
push
jae
outsb
dec
pop
fists
push
inc
or
cmp
clc
cltd
xor
push
outsb
inc
sbb
ret
mov
pop
movl
mov
sub
xor
sbb
sbb
push
and
inc
sub
decl
jo
lds
mov
add
jb
sbb
mov
xchg
or
inc
pop
loop
in
outsl
adc
icebp
sub
push
and
dec
in
mov
psubsw
xchg
push
mov
add
cmp
push
cmp
scas
push
ret
pop
add
loop,pn
or
movsl
mov
loopne
jle
mov
jmp
test
cs
inc
sti
cs
pop
mov
in
mov
lcall
fdivs
mov
and
fisubs
add
xchg
mov
sbb
mov
test
outsb
xchg
insb
loope
sub
enter
ljmp
push
xor
lods
push
add
nop
pop
in
rcll
arpl
mov
imul
mov
add
fimull
das
ret
aas
ret
ret
xchg
shll
sub
cmpsl
sbb
sub
filds
popa
ret
mov
loopne
sbb
or
pop
scas
or
push
imul
lock
addr16
mov
inc
mov
add
add
std
out
loop
mov
xor
mov
xor
shl
pop
ljmp
mov
and
pushl
mov
and
roll
xchg
xchg
jmp
inc
push
lock
std
and
lods
outsb
or
out
rolb
scas
sbb
std
das
xchg
add
xchg
push
cmp
lahf
jns
mov
xchg
lock
or
xor
imul
scas
xor
lods
sub
nop
mov
leave
or
jl
movsb
mov
push
or
out
scas
fnstenv
and
and
push
adc
std
or
mov
xchg
cltd
jmp
sbb
nop
xorl
jl
adc
inc
mov
dec
nop
ss
inc
mov
shlb
jne
inc
jl
pop
or
rcrb
call
cli
lods
mov
sahf
das
stos
not
stc
mov
and
mov
gs
les
mov
into
mov
in
sub
push
mov
adc
mov
push
fnstenv
adc
mov
mov
jge
test
aam
mov
divl
pop
xchg
int
add
cli
test
or
add
clc
push
mov
pop
daa
popf
insb
iret
shll
cmc
sbb
lods
add
ds
pop
cld
sbb
or
dec
dec
inc
scas
sub
nop
pop
scas
test
ret
xchg
sbb
bound
scas
pop
mov
hlt
xor
outsl
sbb
cs
sub
fdivs
je
je
jl
insb
dec
imul
cmp
popa
jns
push
fbld
cmp
arpl
pop
or
and
loop
or
inc
mov
es
cmp
push
lods
pop
lods
shl
mov
test
dec
inc
call
cmp
mov
push
test
push
sub
jg
pushl
xor
es
lret
and
pop
push
jp
add
dec
mov
jo
orl
sbb
adc
or
xchg
pop
xor
dec
stos
adc
mov
ss
nop
fdivp
iret
add
nop
mov
les
pop
cld
push
pop
cli
shl
push
add
out
adc
sub
push
mov
ss
mov
pop
mov
pusha
mov
dec
xor
xor
and
pop
cvtps2pd
sub
cmp
push
xlat
enter
dec
lcall
pop
push
loopne
inc
movsb
pusha
jge
testl
and
daa
cmc
int3
mov
jg
lea
test
mov
and
jno
sbb
fsubrp
lcall
decb
or
add
cmp
mov
cmpsb
fprem
mov
sbb
addl
lock
jp
xlat
mov
cmp
sub
mov
or
shr
mov
add
push
imul
lcall
or
or
inc
data16
jg
shr
lods
adcb
clc
pop
xchg
lret
xchg
or
push
loope
mov
sub
and
insb
ds
imul
std
mov
aam
or
sub
add
inc
nop
lcall
lods
push
aad
fsub
aad
push
lods
adc
add
in
xlat
inc
daa
mov
fdiv
push
cmp
mov
push
mov
cld
sbb
push
jl
hlt
or
icebp
inc
in
push
faddl
pop
cmovne
mov
loop
in
sub
or
jnp
pop
sbb
outsl
stos
push
nop
call
add
test
mov
push
enter
add
mov
adc
mov
ljmp
cmp
mov
jmp
stos
xor
in
mov
test
cmp
movsl
inc
mov
sub
mov
mov
pop
stos
nop
mov
sub
dec
incl
inc
test
adc
decb
xchg
ret
stos
loopne
dec
mov
inc
ss
lods
scas
clc
call
clc
jmp
nop
cltd
mov
movsl
or
xchg
dec
or
cmp
or
sbb
pop
bound
cmp
nop
pusha
xchg
dec
sub
cwtl
outsb
jae
push
bound
loopne
pop
cmp
iret
sub
cld
pop
cs
jno
movsl
das
clc
xor
mov
test
popf
icebp
lahf
lods
das
mov
mov
movsl
popa
jbe
cmp
ja
test
pop
sbb
adc
test
dec
clc
bound
adc
jne
mov
adc
insb
fmuls
stos
fdivp
add
mov
fdivrs
mov
sti
movsb
mov
sahf
jmp
pop
xor
dec
pop
pop
add
xchg
mov
leave
mov
xlat
mov
or
mov
pop
xchg
pop
and
pop
popa
pushf
sbb
scas
adc
addb
add
mov
sti
adc
jmp
xchg
lock
pop
cmp
sub
inc
add
idivb
push
pop
aam
addb
mov
rcll
insb
call
test
cwtl
fadd
aad
xchg
xchg
or
aas
adc
xchg
xchg
jnp
inc
jge
push
and
and
pop
mov
fbstp
cmp
fstl
leave
inc
loop
je
jno
or
loopne
pop
sub
adc
jns
test
or
out
ret
bound
pop
pop
pop
outsb
rorl
lcall
mov
mov
lock
cltd
add
out
loopne
adc
xchg
xchg
lret
rcrb
mov
add
scas
aad
shlb
sti
push
sar
insl
loop
pusha
mov
in
mov
pop
dec
xlat
outsb
js
add
seta
jns
mov
push
cli
lret
mov
daa
lods
cmp
sbb
fs
pop
inc
add
out
push
jge
pushf
stos
push
mov
in
add
mov
int3
fisubrs
imull
in
push
ret
or
or
push
mov
cmp
scas
cmp
addb
clc
bound
dec
fs
jmp
mov
data16
and
rorl
jl
or
je
enter
jge
sbb
popf
mov
mov
jg
push
adc
adc
scas
stos
call
push
int
mov
stos
call
sbb
lds
stos
push
dec
dec
repz
addb
aaa
pop
shlb
lcall
das
xchg
fists
ds
mov
cli
ljmp
dec
sub
clc
jne
sub
lcall
push
fisubrl
leave
adc
mov
push
dec
dec
out
add
pop
fcmovbe
out
mov
dec
xchg
xor
lret
push
fdivrl
inc
leave
pop
dec
add
jmp
inc
or
mov
push
fwait
loope
bound
les
out
scas
movsl
jmp
cmp
je
and
xor
inc
in
xchg
and
pop
push
mov
jl
push
push
add
fwait
or
mov
call
and
add
rolb
push
and
and
or
add
adc
sub
outsb
adc
sarb
rclb
xor
stos
in
and
mov
std
cwtl
ret
sbb
dec
sbb
mov
mov
jbe
or
or
lock
scas
hlt
adc
jg
sub
mov
or
add
pop
xor
sub
mov
aad
adcb
mov
sbb
roll
shll
jno
sar
clc
and
dec
pop
push
in
iret
cmp
das
sub
xchg
jo
inc
pop
pusha
and
add
addr16
clc
imul
push
cs
bound
js
mov
das
inc
out
inc
inc
fwait
xlat
cmp
inc
aas
sub
mov
pop
sub
xor
sti
cmp
sub
dec
cmp
push
mov
mov
sbb
inc
ret
adc
aam
push
mov
aad
jle
js
bound
mov
cmpsb
mov
in
mov
or
add
ss
test
mov
outsl
loop
sti
add
xchg
insb
loopne
pop
pusha
add
inc
cmpb
js
mov
add
inc
bnd
aam
inc
les
add
and
stos
push
xor
mov
lock
cmp
cs
push
nop
lods
shrb
out
cmp
popa
imul
and
les
sbb
data16
push
daa
jb
adc
outsb
xor
repnz
jae
pop
cmp
mov
add
je
sbb
cmpl
pop
mov
mov
xchg
fnstsw
in
cmp
inc
jmp
push
ss
xor
push
idivb
das
clc
push
ret
inc
mov
adc
ds
bnd
xor
ljmp
popa
addr16
scas
push
cmc
add
shlb
pop
dec
sbb
cli
mulb
aad
aas
push
mov
lea
ret
loopne
sbb
mov
push
sbb
push
cltd
mov
addl
dec
ret
test
mov
mov
aam
imul
mov
test
imul
and
and
mov
xor
pop
push
stos
add
or
outsl
dec
mov
aaa
in
cli
insb
icebp
inc
cmp
xchg
sbb
sbb
and
js
adc
call
bound
mov
or
rcrl
jae
jl
inc
fs
push
xchg
ljmp
pop
mov
xor
ret
clc
es
push
dec
pop
sbb
push
inc
adc
aaa
arpl
imulb
jo
out
or
adc
xlat
jle
ja
lret
push
fs
jb
sub
mov
hlt
call
mov
imul
cli
push
xor
hlt
aas
inc
mov
cli
out
mov
push
shrb
jle
sub
xchg
adc
xor
mov
ficomps
loopne
std
lcall
xor
insb
cli
pop
sub
push
push
sarb
js
int3
push
mov
sahf
mov
fdivs
sbb
mov
adc
lahf
lea
push
aam
push
faddl
in
pop
fcoms
or
pushf
aaa
lods
pop
jl
or
aaa
adc
mov
cmpsl
icebp
inc
jle
adc
xor
addb
rorb
in
scas
shll
jg
cmp
sub
js
mov
cwtl
and
push
pop
adcb
cwtl
mov
and
lock
push
mov
scas
test
aam
popa
test
pop
aaa
mov
add
fisubrs
mov
jo
ja
test
cwtl
jne
movsb
sbb
mov
dec
outsb
icebp
into
fimuls
je
cs
xchg
push
pop
insb
outsb
mov
orb
mov
xchg
sub
pop
rcll
scas
add
in
cmc
lahf
cli
idivb
insb
stos
jbe
loop
add
out
call
sbb
loopne
pop
xchg
jp
lcall
loopne
aam
mov
add
xor
sbb
outsb
sbb
mov
cmpsb
dec
loopne
xchg
or
lods
lods
loopne
xorl
sar
popa
jbe
stos
mov
mov
jp
cmp
arpl
clc
into
add
loop
cld
out
cmpsb
call
push
sbb
notl
inc
fsubrs
lcall
lahf
pop
enter
fwait
mov
xchg
push
sub
add
loope
das
mov
lahf
xchg
mov
jecxz
ja
fdivs
sbb
std
rorl
or
test
pop
cmpsl
xchg
fdivr
inc
xor
adcb
jl
xor
push
test
sub
or
scas
push
adc
pop
stc
lcall
jmp
cmpsb
das
aam
cmpl
inc
lea
pop
loope
incl
sbb
sbb
sbb
inc
jnp
and
mov
fdiv
loopne
rolb
jle
push
mov
movb
int3
test
in
xchg
and
loope
mov
mov
lret
inc
dec
fs
imul
lods
aas
cltd
push
dec
clc
fadds
jle
fmull
push
sti
push
incb
mov
pop
mov
xchg
in
lods
cwtl
imul
pop
js
fisttpll
add
mov
and
adc
fiadds
inc
mov
and
push
jle
add
mov
pop
enter
xchg
aam
test
push
xorl
dec
in
ret
adc
add
inc
cld
fcomip
pop
lret
push
inc
add
mov
push
mov
or
pop
or
dec
push
pop
hlt
cmp
int
add
push
pusha
xor
pop
jno
xchg
insl
adc
cmp
shrb
nop
test
add
insb
aas
dec
inc
iret
lret
data16
inc
movsb
xchg
fimull
sbb
ds
adc
cmp
and
jns
dec
jmp
cmpb
sub
nop
mov
push
pop
leave
inc
mov
ljmp
adc
push
and
jae
shrl
pusha
jne
and
jg
inc
dec
add
adcl
rol
repnz
rolb
pop
mov
jne
sbb
scas
cli
add
in
jmp
xchg
in
inc
or
inc
push
lahf
pop
xchg
cli
mov
sub
stc
movsb
fsub
mov
xchg
cmp
rorb
out
ret
ja
adc
push
rcll
ss
loopne
push
out
push
lcall
in
push
pop
xorb
cmp
xchg
pop
add
push
or
xor
repnz
call
insl
jp
pop
jns
xorl
add
adc
or
aaa
dec
mov
enter
hlt
push
aad
jle
int3
fnstsw
jo
push
call
into
ret
ret
int
cs
lea
sub
test
xor
decl
mov
out
bound
sub
mov
dec
ror
daa
test
pusha
adc
inc
mov
mov
sub
sbb
and
insl
adc
nop
sti
std
jg
inc
sbb
lahf
xor
inc
int
imul
int
aam
pop
dec
xchg
ret
cli
popl
scas
imul
mov
movsl
test
in
loopne
pop
leave
aaa
rcrl
lods
xchg
mov
gs
fs
cld
movsb
ret
lock
adcl
add
mov
push
mov
add
xor
shll
ljmp
sti
xchg
sarb
ret
push
xchg
es
sahf
cmpb
repnz
lcall
clc
sub
ret
sbb
jo
lcall
sbb
xchg
int3
enter
inc
push
call
mov
aad
and
sahf
adc
fwait
mov
ljmp
mov
push
push
and
or
cld
insl
sbb
and
push
sahf
mov
je
dec
sbb
ret
sub
inc
xchg
jne,pn
dec
lock
mov
out
sbb
adcl
fwait
and
pop
push
dec
jg
jg
clc
adc
or
push
in
add
mov
ss
add
mov
adc
gs
incb
daa
mov
sub
enter
insb
or
cli
add
add
std
xchg
ljmp
dec
fmull
imul
push
jnp
add
std
add
les
test
mov
iret
sbb
xchg
fimuls
js
push
cmp
jg
adc
push
dec
push
cld
push
inc
in
jg
sbb
pop
jno
pop
shlb
cmp
push
mov
jmp
or
add
inc
in
xchg
imul
pop
sub
jge
cmp
mov
adc
loopne
cmp
push
cmpl
testb
push
mov
cmp
dec
clc
cs
scas
les
pop
lret
mov
aad
add
and
nop
push
mov
mov
cmpsb
out
cs
mov
jp
pop
add
aad
roll
mov
aad
sahf
loopne
jl
sub
add
xchg
decl
push
sub
test
mov
cld
dec
rcr
jno
cmpsl
mov
cli
xlat
sbb
push
enter
inc
sbbb
loopne
mov
dec
cmp
jge
or
xor
or
jb
cs
data16
das
and
ret
je
hlt
push
mov
add
xchg
adc
dec
imul
in
pop
nop
xor
mov
adc
pusha
xor
xor
pop
sub
call
dec
push
push
mov
mov
cld
or
call
inc
shrb
arpl
fisubrs
or
adc
imul
outsb
std
sub
add
ret
mov
loope
push
je
xor
or
mov
xorb
pusha
into
jl
cmp
sbb
mov
fs
cmpsb
cli
sub
call
add
add
pop
xchg
rclb
push
mov
jl
movsl
dec
std
adc
das
push
push
hlt
sub
sbb
or
dec
das
push
out
ljmp
test
loop
lea
pushf
push
lock
xchg
mov
mov
bound
stos
testl
push
aaa
pop
outsl
mov
xor
inc
or
lret
ret
jmp
ret
and
test
mov
mov
mov
fiaddl
fucom
ss
and
pop
sub
sub
add
into
adc
add
sbbb
xchg
orb
jne
aas
add
das
jne
aaa
adc
sub
mov
add
inc
out
or
std
push
fnstcw
int3
loope
mov
or
inc
sbb
push
jb
xchg
xor
test
sbb
sbb
cld
test
lcall
sub
add
or
clc
scas
rolb
pusha
or
adc
imul
fldt
test
es
inc
and
sbb
js
rclb
negb
flds
test
scas
mov
mov
ret
push
imul
adc
clc
adc
mov
push
int3
sbb
mov
loop
hlt
rorl
jp
mov
jl
out
push
sub
xor
xchg
lods
mov
xor
ljmp
lods
and
int3
jmp
aas
and
mov
jg
pusha
fcomi
mov
push
shl
popf
mov
data16
clc
aad
sub
pusha
xchg
jecxz
jbe
test
shl
outsl
cmp
xchg
mov
dec
test
mov
fistps
xchg
pop
ja
or
mov
outsb
xchg
jmp
movsb
fimull
mov
add
sahf
jmp
scas
inc
loope
enter
into
xor
xchg
push
push
push
push
fadd
fistl
sbb
fwait
or
inc
xchg
lds
in
adc
clc
hlt
inc
push
std
inc
push
add
add
insb
cld
ljmp
mov
inc
pusha
add
repz
mov
jg
add
cmp
ja
jmp
cmpsl
sbb
fldl
insb
pop
lcall
imul
scas
mov
call
add
or
dec
out
inc
push
lds
push
jl
pop
push
rorb
and
push
mov
or
call
pop
cmpsb
roll
mov
sub
pop
hlt
jg
ja
pop
inc
test
sbb
mov
push
shlb
loop
add
testb
lods
push
pop
mov
repz
pop
sbb
addr16
orb
hlt
pop
pop
xchg
mov
rcl
lds
inc
cmp
pop
add
adc
les
add
push
inc
out
xor
or
push
inc
xchg
rorb
inc
pop
jb
pop
pop
repnz
std
mov
sub
jbe
push
leave
jmp
fwait
xor
ja
xchg
cli
fistpll
cwtl
add
out
add
adc
mov
out
push
stos
add
es
dec
loopne
loopne
ret
adc
incl
push
lock
dec
pushw
push
fdivl
in
repz
add
test
test
push
aad
out
xor
popa
stc
fiadds
cmp
push
adc
jge
into
std
pushf
cld
and
fwait
clc
lret
shrb
jmp
or
aam
add
adc
fs
and
or
subl
sub
jl
test
and
jle
pop
test
loope
push
inc
cld
shrb
and
pop
mov
test
and
mov
jo
inc
ja
mov
cmpsb
cltd
fisttpl
aaa
lds
fbstp
test
loopne
fucom
aaa
js
mov
icebp
add
outsl
shrl
lret
xor
jbe
sahf
mov
xchg
mov
loopne
into
push
pusha
ret
fisttpl
add
and
jns
cld
loopne
adc
fadds
or
mov
mov
jmp
dec
push
or
ss
divl
jno
lock
push
loop
cmp
loop
loop
push
sbb
out
xchg
xorl
jecxz,pn
xchg
imul
adc
cmc
jmp
pop
cltd
sbb
jp
mov
xor
incl
mov
cli
mov
push
mov
loop
lods
push
dec
xchg
sarb
mov
enter
add
inc
in
mov
jp
sarl
sub
pop
cli
mov
push
jmp
fst
fidivrs
outsb
rclb
insb
mulb
xchg
insb
dec
mov
int3
pop
fiadds
ret
adc
sub
push
add
inc
sbb
in
jp
icebp
pushw
jg
mov
stos
cli
cmpsl
push
adc
orb
dec
sub
outsb
ss
aad
jne
push
rolb
hlt
loopne
sub
sbb
add
jb
mov
daa
push
sbb
enter
mov
add
bound
je
insl
rcll
outsl
and
xor
pop
cmpsl
ds
sub
andl
fld
popa
and
sbb
mov
sbb
mov
shl
mov
push
aaa
mov
mov
push
lcall
sub
push
into
test
ja
clc
int3
push
ficoml
mov
orl
mov
outsl
mov
xchg
adc
cmpsb
mov
or
incl
mov
idiv
repz
fcompl
in
rclb
stc
mov
xchg
xchg
jmp
sbb
std
jno
imul
das
les
and
loop
add
cs
or
lret
insb
xchg
and
imull
sbb
and
sub
mov
adc
in
int
insl
sbb
xchg
cmp
aam
sbb
mov
jo
adc
xchg
int3
sub
push
cmp
or
in
jg
cld
testl
subl
mov
sarb
pop
jns
push
inc
jno
sbb
cwtl
ss
dec
js
imul
mov
inc
mov
pop
jl
mov
fisttps
adc
sti
ja
push
add
sbb
pop
add
insl
and
movsl
dec
jp
jno
sbb
leave
lock
push
mov
fldl
nop
pop
ds
sub
decw
pop
mov
mov
iret
push
mov
inc
jbe
pusha
or
fdivs
add
jle
in
mov
mov
scas
adcb
bound
pop
push
inc
inc
loopne
ja
lock
std
push
inc
xchg
mov
stc
xor
jg
jg
adc
roll
sbb
out
decb
adc
out
jl
sub
movsb
inc
rclb
mov
rclb
pusha
cli
test
lods
std
and
and
push
inc
std
pop
dec
sahf
gs
push
pop
add
roll
or
cmp
mov
xor
or
mulb
aaa
pop
push
or
pop
dec
test
cmp
pushl
incb
pop
out
adc
xor
iret
jae
orl
dec
mov
jb
nop
sub
test
test
hlt
aaa
dec
push
repnz
add
push
cld
mov
pop
adc
outsb
test
lea
test
lcall
sub
push
mov
sub
mov
scas
movsb
adc
popa
addb
divl
arpl
push
stos
push
ret
fcomps
ljmp
fildl
mov
test
add
jno
sarb
mov
and
ss
ret
str
push
bound
push
cmp
xchg
call
sbbb
scas
jbe
orl
inc
ret
and
test
jo
mov
fwait
test
sub
ljmp
mov
inc
int
or
dec
jecxz
cmp
add
add
or
add
sub
loopne
sub
fiadds
adc
inc
fisttpl
jmp
push
insb
dec
in
add
fisttps
cmp
pop
and
or
loop
push
xor
leave
in
out
sbb
ss
pop
mov
stos
push
hlt
popf
inc
adc
pop
mov
or
jb
test
nop
outsl
dec
rcll
ljmp
mov
jg
or
jmp
cmp
pop
push
jecxz
sbb
pop
push
sub
rcr
and
push
sub
add
jge
cmp
add
pushl
sahf
jbe
addr16
imul
sub
sti
enter
adc
jle
repz
adc
enter
sub
fwait
insl
mov
icebp
pop
je
jl
inc
sbb
pop
push
in
rcrl
and
mov
lret
inc
adc
testl
and
test
add
insl
cli
xor
jl
xchg
loop
inc
mov
into
jno
push
push
push
cld
xchg
fcoms
enter
cli
jmp
sub
aad
add
ret
or
insl
jge
xchg
scas
jns
mov
loop
int3
xor
fnstsw
pop
movsl
js
mov
rorl
imul
popa
test
inc
lahf
pop
and
into
xchg
decl
in
das
cli
loopne
inc
mov
int3
cmp
jle
mov
xor
lock
sub
gs
cmpsl
jbe
add
inc
mov
es
add
insb
dec
incl
les
ss
lahf
sub
loopne
adc
inc
nop
inc
push
lock
mov
bound
push
aaa
movsb
lret
mov
std
into
cmp
sti
rol
xchg
shl
sub
add
iret
outsb
sbb
or
es
cmp
int3
dec
mov
nop
lea
mov
jo
jl
pop
std
incl
arpl
movsl
mov
int3
cs
out
sbb
xchg
xchg
pushf
adc
pop
ljmp
pop
aaa
insb
add
pop
or
cwtl
pushf
push
or
push
les
xchg
mov
nop
mov
dec
dec
adc
cmp
clc
fsubrs
push
mov
lahf
xchg
jo
sbb
insb
imul
pop
pop
aad
fisubrl
cmp
cmp
inc
adc
xorl
rcrb
lods
ljmp
mov
mulb
or
outsl
mov
mov
xor
add
push
add
lret
into
and
ja
outsl
push
lea
stos
mov
addl
xchg
pop
dec
pop
xchg
hlt
dec
loopne
mov
xchg
adc
push
ss
push
divb
mov
mov
mov
mov
xchg
mov
pop
or
mov
mov
sbb
clc
aaa
imul
inc
jb
push
aam
push
stc
lret
lds
dec
sbb
faddl
in
mov
outsl
pop
jo
out
sahf
rcrl
add
pop
add
jmp
bound
ljmp
inc
rcrl
jle
sbb
and
cli
das
subb
lock
sbb
jge
cmp
mov
int3
or
mov
outsb
aam
ss
dec
imulw
jl
inc
mov
std
js
pop
or
loope
push
fwait
adc
mov
add
icebp
out
sub
add
xchg
mov
jns
pop
push
sti
test
add
xchg
and
xor
add
add
scas
les
xchg
adc
mov
scas
clc
js
mov
loop
cli
or
rcll
ljmp
ret
mov
sbb
sbbb
sarl
rol
lods
sub
mov
icebp
mov
ret
or
fs
mov
cwtl
and
add
negl
add
push
ljmp
mov
fisubrl
sub
add
es
add
xor
add
inc
fsubs
cli
outsb
cltd
decb
es
in
or
inc
add
js
in
jecxz
xor
call
pusha
addr16
xor
xchg
add
cmp
and
push
and
pop
lcall
stos
jle
adcb
ss
mov
cmp
rcrb
add
pusha
add
test
adc
jbe
pop
xor
cmp
xlat
lea
sub
gs
ficomps
adcl
jg
mov
mov
mov
mov
add
cmp
inc
lock
pushf
movsl
cmp
arpl
mov
mov
push
fidivs
call
test
insl
nop
inc
stos
ret
fmuls
add
cld
fcomip
aas
jbe
add
loope
mov
sub
jo
inc
pop
ret
push
pop
aam
out
ljmp
arpl
ja
pop
fcomp
add
movsb
and
xchg
pop
loopne
ja
das
imul
jmp
pop
fcomps
test
shrl
adc
loopne
popa
loopne
mov
pushf
mov
xchg
jb
sbb
mov
lahf
pushf
in
jno
pop
data16
out
adc
sbb
and
add
std
decl
mov
adc
roll
xchg
push
stos
jmp
ret
lcall
mov
rcl
clc
jnp
cs
cmp
insl
pushf
xor
adc
mov
sbb
jo
in
or
sbb
ja
add
jle
xchg
cmpl
or
or
scas
xchg
xchg
pop
mov
sbb
ret
mov
std
push
test
push
xor
fldln2
nop
les
sbb
mov
aad
mov
push
and
in
shrb
dec
sbb
sbb
jecxz
mov
ret
adc
out
lret
sbb
pusha
and
hlt
pop
testb
mov
or
ret
filds
cwtl
push
add
rcll
mov
rcrb
rorl
rorb
jl
push
subl
leave
gs
rcrl
sub
ja
add
cmpsb
clc
idiv
inc
cld
add
lock
fdiv
lds
sbb
sub
mov
das
inc
mov
pop
jl
ds
fdivr
fwait
mov
gs
shr
push
je
enter
shl
jmp
sub
aaa
lcall
cmp
repz
scas
les
fbstp
sub
bound
and
push
cmp
jp
xor
xchg
insb
decb
pop
xchg
setl
add
das
cmp
mov
pushf
out
sbb
adc
adc
lret
cmpsl
mov
add
out
popf
lea
and
dec
popa
add
sub
call
jmp
add
sub
lock
aaa
dec
inc
and
dec
xor
or
adc
arpl
andb
dec
add
or
insl
jl
sub
stos
test
pop
jecxz
mov
dec
pop
push
mov
pop
dec
pop
or
cli
sbb
je
mov
push
xchg
pop
add
gs
push
mov
loopne
fs
and
cwtl
loop
add
pop
clc
xchg
nop
lret
test
mov
mov
or
adc
out
sub
stos
push
fidivs
fnstsw
outsb
outsb
sbb
add
fcmovnu
outsb
add
xchg
sbb
and
rorb
leave
mov
xchg
xchg
mov
sub
mov
clc
std
jne
icebp
out
jo
shr
jb
or
mov
test
jle
push
cmp
icebp
pop
cmp
xchg
scas
xchg
sbb
sarb
dec
cli
fsubp
jg
adc
iret
adc
mov
ror
or
xchg
xor
lods
leave
pusha
jne
lock
int3
xchg
lods
mov
pop
jbe
hlt
in
fucom
sbb
pop
hlt
push
or
mov
cmp
testb
call
mov
je
pop
and
add
cmp
push
mov
cmp
fcomi
fs
adc
sub
addr16
jo
test
popf
jne
cs
push
dec
add
movb
xor
addl
das
adc
dec
ficoml
scas
das
arpl
sbb
sti
je
jo
and
sti
nop
mov
outsl
jo
loop
adc
es
fistpll
mov
and
push
repnz
xchg
mov
ret
fsubp
pop
or
pushf
jne
push
or
repnz
fildl
mov
inc
jb
mov
or
or
and
xchg
inc
pop
rorb
repnz
cltd
cmp
les
inc
fidivrs
push
js
orl
addr16
xor
push
mov
xor
nop
loop
test
stos
or
ss
xor
xlat
cmpsb
and
cmpsb
out
sub
ljmpw
mov
ja
cmpsl
add
mov
or
cmp
andl
pop
mov
or
xchg
adc
imul
dec
mov
lcall
pop
push
jbe
insb
and
fucom
mov
addb
scas
ret
lcall
mov
xor
fiadds
push
das
push
push
add
cmc
scas
loopne
daa
push
and
sub
dec
test
pusha
inc
mov
xor
rorl
hlt
pop
jns
add
pop
out
stc
adc
cmpsb
sub
sahf
loop
ss
sub
xchg
ret
push
pop
jae
adc
incl
xorb
xor
push
push
jecxz
xor
xlat
mov
ret
jge
pop
out
imul
cld
sub
adc
mov
stos
push
and
or
sti
mov
lods
adc
cmp
loop
or
mov
and
mov
aaa
pcmpgtd
and
dec
pandn
dec
and
lea
fimuls
mov
xchg
out
mov
sub
jo
mov
pop
add
ja
jp
mov
in
test
outsl
ss
adc
mov
ds
inc
add
es
pop
lods
enter
mov
and
ljmp
cld
mov
add
shlb
incl
inc
lods
addr16
and
pop
test
inc
fldcw
pop
sbb
cmc
and
and
stos
fsubrs
testb
loope
or
pop
xchg
cwtl
ja
clc
xchg
jno
mov
out
ss
mov
jno
outsl
pop
outsl
xchg
out
xchg
dec
pop
jp
ljmp
xor
dec
lcall
xor
test
pop
loop
sahf
into
xor
rcrb
sti
jmp
inc
loop
adc
mov
xor
repnz
insb
fstps
xchg
fwait
push
cmc
pusha
sub
call
je
clc
pop
pop
sbbl
push
push
adc
xlat
nop
adc
cwtl
xor
iret
fcmovbe
ja
aas
cld
nop
rclb
call
jbe
ljmp
push
mov
pop
lods
mov
push
test
push
leave
add
sbb
and
ret
fcmovu
inc
sbb
add
daa
movb
adc
adc
insb
cli
call
ds
mov
push
cmp
cli
ljmp
inc
int
imul
enter
mov
in
cmp
cmp
add
fbstp
loope
shl
xchg
lds
jg
push
mov
jne
adc
int
cld
loope
fdivr
jg
scas
dec
icebp
aas
andl
aas
nop
out
rcll
push
fcoml
push
mov
push
sbb
ror
and
sbb
into
cli
scas
bnd
mov
push
inc
and
push
mov
push
dec
fdivs
jne
xchg
push
aad
hlt
adc
jg
daa
daa
adc
xchg
xor
mov
adc
mov
push
pop
jnp
out
mov
mov
fcoml
inc
mov
gs
mov
imul
fiadds
push
cmp
xchg
shll
pushl
cmp
idiv
imul
jnp
jno
xchg
push
dec
rolb
mov
mov
popf
ss
scas
jmp
jne
rolb
adc
sbb
adc
call
das
xor
fndisi(8087
movl
daa
mov
sub
testl
inc
incb
push
mov
push
mov
in
mov
mov
mov
add
lahf
add
js
in
loopne
cwtl
in
dec
add
and
int
pop
ja
mov
or
pop
jbe
xchg
or
jmp
in
rolb
xchg
add
jl
imul
clc
push
out
inc
decb
sbb
out
sbbb
pop
repz
pop
adc
dec
imul
scas
and
fst
add
arpl
cmp
add
ljmp
lcall
sub
mov
or
adc
pushf
sbb
mov
js
push
pop
test
cwtl
mov
hlt
xchg
mov
and
lock
adc
hlt
stc
and
popl
jg
mov
add
mov
sldt
orb
clc
jle
dec
popa
in
pop
mov
add
ret
inc
cmpsb
test
inc
sbb
and
loope
jg
fstpl
jo
sub
or
jbe
dec
mov
dec
sub
ja
pop
add
in
add
btr
addb
mov
and
ret
add
jl
lock
aas
mov
push
fcomps
and
lock
in
mov
inc
sub
mov
in
fimuls
fs
xchg
mov
sbb
inc
sub
dec
push
mov
mov
jge
loop
pop
outsl
sbb
mov
insb
mov
xor
jg
add
cmp
bound
jo
pop
add
inc
or
imulb
into
mov
mov
inc
push
mov
add
outsl
jbe
mov
call
ja
xor
sub
cld
add
and
mov
jg
inc
rclb
inc
or
add
ret
push
fadds
push
push
add
jle,pn
dec
add
cmpsb
stos
add
fistpl
add
mov
arpl
fld
mov
jg
dec
arpl
repnz
mov
js
push
mov
shll
ret
jo
push
ss
adc
and
in
add
imul
xchg
inc
rcrb
scas
enter
jne
sbb
sbb
stos
cmc
xchg
pop
mov
mov
aam
sti
pop
mov
push
xlat
sahf
or
dec
add
cmp
mov
inc
shr
xchg
filds
push
sub
cmp
js
pop
pusha
scas
add
incb
ljmp
fnstenv
and
sub
mov
pop
aad
mov
mov
sbb
pop
scas
sbb
repnz
jmp
call
jae
iret
aam
vmovntps
incb
test
or
mov
xor
cmp
pusha
sub
movsb
fiaddl
lret
cmpsb
lcall
ds
or
cwtl
js
pop
cwtl
bound
sti
cwtl
fwait
add
push
jbe
aad
sbb
inc
push
das
adc
repnz
scas
xchg
add
rorl
cmp
shl
scas
loope
push
dec
push
xor
jl
jne
inc
pop
sbb
and
pusha
lret
loope
sar
or
xchg
pusha
fs
push
mov
mov
pop
sahf
imul
out
xor
jg
xchg
bound
jo
popa
cmp
push
pop
cmp
std
lock
inc
out
push
jbe
push
add
lret
ret
int
mov
fiadds
push
ss
xchg
ds
clc
insl
je
add
push
cltd
sbbb
push
mov
push
lret
or
shr
mov
hlt
mov
jp
jg
ljmp
test
inc
test
sub
add
leave
jae
popf
stc
or
mov
sti
in
das
cld
xor
mov
or
jmp
adc
jns
jbe
xor
add
jae
adc
or
sti
push
out
nop
dec
je
mov
cwtl
mov
les
aam
stos
cmpsl
add
out
pop
lock
adc
rcr
xor
mov
fiaddl
mov
jo
ja
cmp
adc
jecxz
loop
popf
lcall
lds
xor
test
ss
xchg
push
shll
fnstsw
xchg
cli
das
mov
test
push
jecxz
js
mov
adc
movsb
mov
sub
loopne
hlt
or
and
rclb
cmp
pop
and
jle
xor
cld
push
int
sbb
push
lock
movb
xor
pop
into
jno
rcrb
loop
pop
sarl
inc
inc
pop
hlt
pop
or
mov
sbbb
bound
add
sbb
out
aam
mov
push
mov
jl
cli
cmp
xchg
jp
mov
loopne
movsl
dec
add
or
shlb
bound
sbb
in
out
loopne
add
inc
sub
into
cli
aaa
sub
dec
adc
jmp
xchg
push
sub
or
or
outsb
dec
or
loop
aam
aaa
popa
jmp
out
adc
addb
dec
jecxz
call
outsb
loopne
xor
mov
xor
scas
sahf
in
imul
lock
lods
inc
cld
repnz
add
mov
or
ljmp
dec
add
negl
popa
lock
shll
add
arpl
mov
sahf
je
in
xchg
mov
sbb
adc
out
idivl
add
push
repz
cmp
push
push
cs
cld
pop
insb
mov
pop
mov
icebp
popa
dec
xchg
decl
sub
outsl
mov
inc
add
or
or
add
mov
out
rorb
cli
mov
mov
daa
sub
mov
mov
fwait
xor
jp
in
in
outsl
pop
add
shl
or
lods
push
inc
loopne
decb
ljmp
decl
add
int3
mov
mov
aam
ja
cld
pusha
push
pop
jne
mov
jno
sub
sahf
test
and
jle
xor
shlb
add
cmp
jnp
fidivl
sub
push
shlb
aam
rcrb
fidivl
fimuls
jbe
push
sbb
stos
xor
lcall
pusha
xchg
jns
into
add
xor
fadd
cmp
pop
jb
mov
dec
lods
xchg
sti
aas
fwait
call
xor
repz
enter
push
test
pop
jno
in
lahf
call
fadds
or
and
cmp
pop
or
test
fs
cmp
push
lcall
and
pop
lea
movsb
lcall
mov
push
pop
std
test
lcall
test
jmp
adcl
loop
add
xchg
push
test
icebp
lds
add
sarl
xchg
mov
pushw
cwtl
push
je
sub
loope
in
movsb
jb
xorb
push
inc
dec
jne
or
gs
test
and
movswl
jecxz
adc
fs
cmp
push
inc
sbb
out
icebp
stos
lock
mov
pop
in
pop
addl
fadd
pop
bound
das
pop
mov
lret
ljmp
imul
js
xchg
inc
or
adc
cmpsl
xchg
mov
fnstenv
or
and
das
mov
pop
scas
cmp
pusha
cld
mov
stc
add
cs
adc
mov
repnz
cld
jl
hlt
xor
repnz
inc
ds
sbb
sub
adc
xorl
out
pop
in
je
xchg
mov
mov
jle
mov
jg
rcll
loop
or
xchg
mov
push
roll
stos
dec
dec
sar
cld
or
push
jp
xchg
stc
mov
aas
loopne
lcall
sub
mov
adc
mov
sbb
pop
cld
lret
lret
clc
xor
incb
imul
gs
xchg
mov
outsl
cmp
ja
or
pop
outsl
aaa
or
outsl
lret
mull
shrb
xor
adc
clc
add
cmpsl
in
call
cli
xor
xor
cmp
movsb
adc
push
cltd
adc
add
jno
mov
loope
xchg
adc
sbb
aad
sahf
fbstp
mov
jl
mov
aaa
sub
mov
loope
xchg
cs
js
out
jl
lods
es
hlt
es
test
xor
clc
push
mov
fisubrl
ret
inc
add
mov
and
inc
nop
aas
mov
outsb
push
roll
dec
and
xor
xchg
int3
js
outsl
and
mov
and
and
das
das
lahf
push
and
xor
and
imul
jne
jns
subb
adc
adc
push
ror
xchg
lret
test
or
or
mov
cli
shll
imul
adc
jne
shll
cmp
add
cmp
jp
dec
mov
add
cs
xlat
call
xor
xchg
push
arpl
mov
mov
fs
ret
lea
lock
dec
push
mov
push
pushl
dec
cmp
pop
stos
dec
sbb
call
pop
sub
fsubrs
shll
stos
push
or
jb
loop
mov
lock
xchg
int3
xor
pop
fwait
out
mov
pop
or
cmp
sbb
sbb
mov
imul
push
daa
pop
mov
lea
mov
xchg
loop
push
gs
push
inc
subb
jle
mov
sub
test
notb
inc
into
outsb
ret
cmp
mov
test
lahf
push
enter
mov
fstpt
dec
ret
dec
push
pop
jmp
push
mov
test
aaa
add
imul
inc
mov
rorb
stc
cmpsl
and
movsl
pop
jp
loopne
loopne
push
pusha
adc
cmp
fisttps
scas
xchg
add
mov
add
dec
icebp
inc
dec
pop
mov
add
add
std
xchg
sbb
mov
push
je
mov
push
sbb
cmp
jle
sar
xor
imulb
pop
and
mov
inc
mov
lock
cwtl
xor
xlat
mov
mov
push
dec
loopne
imul
lcall
add
sub
inc
lock
daa
leave
mov
xor
pop
or
sti
fists
cltd
push
sub
aam
mov
lret
out
mov
pop
jg
lock
dec
fisttpl
ja
pop
stc
icebp
push
lcall
shr
xchg
inc
inc
repnz
or
cmp
sbb
je
sbbb
rorl
or
sub
add
pop
inc
std
test
push
push
xchg
adc
and
push
dec
mov
scas
xor
dec
push
mov
sahf
fnsave
add
lea
mov
into
add
aas
adc
popa
jb
and
fs
jg
sbb
cmp
out
xchg
adc
mov
loopne
test
push
std
push
cmpsl
adc
fs
jge
mov
mov
insl
mov
adc
pop
aam
stos
pop
cs
mov
sbb
dec
sub
push
dec
mov
cs
jno
cmp
cmp
xchg
dec
in
xchg
das
inc
xor
push
testl
add
xor
loop
push
les
pop
mov
xor
mov
and
iret
add
xor
sbbl
cmp
cld
rorb
add
outsl
mov
ja
insl
push
sbbl
cli
xchg
or
jl
push
pop
icebp
push
inc
sub
roll
inc
xor
insb
cs
pop
adc
dec
dec
pop
push
outsb
fldl
add
push
inc
orl
push
mov
stos
mov
sbb
out
xor
out
jnp
sbb
adc
sub
push
test
sub
lods
mov
outsl
adc
mov
push
lret
dec
pop
sbb
or
xchg
jmp
cmc
sbb
nop
push
and
pop
add
hlt
push
scas
repnz
or
cmp
pusha
cmpb
add
mov
fimull
pop
andl
fiaddl
adc
sbb
rcrl
lods
nop
and
andb
enter
cmp
in
jp
mov
les
and
mov
movsl
shl
jg
pop
ja
or
sub
push
out
or
lea
jne
sub
inc
adc
cmpsl
rorl
pop
fwait
pop
mov
fs
call
incb
pop
mov
sub
mov
sahf
add
mov
pop
adc
test
sbb
imul
inc
popa
std
out
test
and
ja
dec
pop
stos
cmpsb
add
or
scas
subb
jle
aad
clc
pop
clc
pop
mov
dec
jmp
mov
ljmp
mov
and
scas
dec
scas
enter
enter
mov
inc
mov
xchg
ffree
popf
push
mov
mov
dec
cli
sahf
dec
loop
int3
mov
fisubrl
shr
cmc
jp
leave
add
icebp
iret
bound
stos
adc
adc
pop
jns
add
cmp
les
movsl
icebp
rcrl
cmp
and
mov
fcoml
scas
push
adc
icebp
inc
add
add
cmp
fwait
add
fprem1
inc
lock
into
xor
int
pop
cmp
hlt
adc
pop
stos
inc
scas
or
mov
cs
sbb
add
inc
rol
out
lcall
mov
inc
mov
insb
cmpsb
pushf
mov
pop
ja
mov
sub
add
rcl
jmp
jb
nop
push
shll
loopne
popa
aad
jo,pn
movsb
mov
inc
mov
xchg
jo
and
fisttps
jle
xor
inc
loopne
fcmovb
push
lods
pop
push
pop
dec
add
xchg
mov
fildll
add
dec
repnz
decb
sti
inc
mov
or
popf
addb
xorb
in
lahf
imul
mov
clc
pop
pop
sub
insb
mov
std
pushl
sub
les
popa
lods
push
jo,pt
int3
add
pop
mov
xchg
and
push
arpl
enter
mov
movsl
lods
filds
xor
and
inc
push
adcl
aas
adc
add
jae
shll
mov
icebp
sbb
imul
jle
pop
jnp
inc
testl
add
dec
aas
cmpsb
mov
xchg
fs
push
pushf
xor
jbe
sbb
pop
and
sti
arpl
aas
mov
pop
je
add
push
push
fidivs
xchg
into
mov
xchg
cmpsb
popf
mov
adc
mov
inc
add
sahf
xchg
ja
shll
cld
dec
ret
cmc
ret
and
dec
pop
mov
fsubrl
incl
sub
lret
mov
sbbb
adc
or
lock
lock
loop
mov
cs
fstpt
xchg
xchg
pusha
hlt
cmpsb
test
jge
lahf
in
test
inc
jecxz
into
fldcw
inc
push
push
rcrl
xchg
pusha
pushl
lcall
sbb
inc
mov
sahf
orb
xchg
enter
push
push
sbb
ja
ficoms
mov
or
lcall
pop
and
add
scas
cmp
fcompl
inc
ret
and
adc
test
pop
in
add
mov
sbb
lock
mov
in
addr16
jle
loope
into
dec
loopne
hlt
xor
sbb
adc
aaa
pop
push
sahf
lret
xchg
xchg
test
int3
mov
dec
jle
cmp
mov
rcr
push
pop
pop
ss
gs
fmulp
jno
pop
dec
xchg
jae
leave
pop
fs
out
jmp
iret
adc
pushf
sbb
mov
sbb
icebp
mull
sbb
inc
mov
mov
mov
mov
fiaddl
insl
scas
mov
pop
sbb
pusha
mov
outsb
adc
push
and
insl
mov
mov
and
mov
fcoml
mov
dec
push
cmc
sti
mov
sahf
std
inc
add
lret
mov
xlat
insb
add
out
lds
mov
fs
fs
mov
jle
mov
or
jmp
push
sti
fidivs
rorb
dec
cld
mov
xor
jl
cmp
mov
pop
lods
cmp
shl
mov
add
xchg
xor
sbb
xchg
decb
outsb
dec
xor
pop
outsl
mov
in
cli
add
inc
xchg
je
mov
and
ljmp
pop
cli
mov
lea
jnp
adc
fisubs
pop
and
aam
inc
sbb
loop
sarb
inc
inc
push
dec
hlt
aaa
pop
aam
ss
mov
sbb
out
xchg
mov
jb
and
dec
lods
mov
bound
sub
cmpsb
pop
push
shrl
jmp
fildl
fsubrl
pop
add
fsubrp
jbe
xchg
test
sbb
and
cmpsl
lods
test
pop
mov
hlt
jl
jbe
mov
sbb
rol
ja
insb
adc
ljmp
push
popa
js
les
std
dec
dec
cltd
and
inc
daa
cmp
add
mov
push
mov
cli
popa
cltd
fisubrs
cmp
dec
sub
add
clc
cmp
stos
add
cmpsl
orl
sbb
pusha
std
es
andb
bnd
mov
loopne
mov
or
outsb
jo
sub
dec
and
adc
incl
in
mov
clc
ret
inc
pop
adc
cmc
jg
lea
xor
lret
ljmp
ds
loopne
insb
mov
aas
lods
pop
push
mov
movsl
iret
jecxz
mov
xchg
jns
aaa
in
in
aaa
scas
sbb
or
aad
sbb
into
mov
sbb
push
insl
ror
sbb
or
out
adc
ds
push
fsubr
loope
insl
nop
mov
dec
into
es
test
mov
nop
add
cmp
jle
pop
cmp
mov
lea
les
push
push
fisttpll
pop
mov
xchg
cmpb
add
movsl
jmp
xorl
pushf
je
xchg
pop
rclb
mov
mov
dec
decb
outsl
filds
and
or
cmpsb
enter
adc
jmp
pop
sbb
xchg
xor
adc
push
jo
xlat
incl
xor
loope
pushl
mov
hlt
cmpsb
mov
movsl
test
and
add
cld
in
cld
call
into
sub
std
repnz
mov
aam
or
loop
test
adc
push
into
mov
call
mov
ror
xchg
rcrb
cld
cmp
aas
or
dec
mov
rol
push
mov
push
sbb
in
and
das
cs
pusha
xor
xor
push
hlt
mov
adc
pop
std
int3
jne
subl
rcr
or
jo
inc
dec
pop
cli
shrb
pop
add
jns
mov
adc
call
dec
sbbl
add
dec
enter
push
dec
inc
shll
mov
sbb
stos
fwait
mov
push
mov
sub
or
data16
sbb
and
lods
fsubl
or
hlt
loopne
xor
cld
or
dec
mov
mull
pop
fsts
ret
dec
jge
dec
sub
dec
in
pop
enter
mov
ret
ds
xchg
jmp
mov
mov
xchg
or
mov
lods
lcall
and
mov
mov
cmp
lods
jbe
arpl
dec
in
hlt
lcall
push
lods
fisubrs
mov
and
add
push
pop
sbb
aaa
inc
xchg
enter
push
aam
mov
add
addb
mov
clc
stos
cmpsl
jmp
or
push
sub
jo
cli
or
push
xchg
add
mov
xchg
mov
add
jp
test
jge
jle
xchg
ja
mov
push
aaa
or
loopne
and
mov
pop
mov
ljmp
idivb
inc
dec
cli
cmpl
jmp
call
pop
repz
push
and
int
std
dec
das
and
inc
icebp
test
hlt
inc
ret
adc
sub
clc
xchg
test
jo
orb
push
xor
popa
shlb
add
scas
jmp
xor
push
daa
inc
hlt
daa
sbb
lods
sub
nop
outsl
stos
fs
jl
mov
sub
push
nop
push
pusha
lock
adc
add
loopne
addb
js
lahf
std
inc
add
push
out
add
in
enter
sub
test
test
dec
jne
push
dec
sahf
lock
in
aaa
or
xchg
jge
xor
adc
or
xchg
stos
loop
loop
mov
repz
loopne
scas
mov
mov
shl
lcall
mov
pop
jp
aad
test
cli
movd
or
ss
jns
outsl
inc
add
imul
adc
imul
inc
xor
sbb
enter
lock
call
repnz
sub
sbb
fcos
pop
pop
fadds
or
or
xor
dec
push
mov
call
call
xor
je
in
xchg
sbb
or
xlat
pop
lret
push
fxch
ja
adc
aam
adc
outsb
jo
mov
insl
jge
movsl
mov
neg
les
push
fmull
mov
and
lock
push
shrb
xor
dec
fadds
fsubrl
testb
dec
arpl
aaa
push
std
inc
inc
data16
fsubr
add
cvtpi2ps
mov
stos
ret
and
cmp
add
or
dec
icebp
cmpsl
lods
enter
xchg
ss
dec
mov
rorl
sub
popf
mov
ss
mov
mov
push
roll
sub
sub
xor
dec
and
pop
push
mov
mov
enter
lcall
cmpsl
int3
movsb
lahf
test
dec
sbb
dec
stos
shrl
icebp
mov
inc
add
sahf
add
dec
inc
inc
cmp
xchg
rcrb
xchg
adc
leave
out
xor
mull
icebp
mov
stc
pop
rorb
adc
mov
jg
jmp
imul
xchg
mov
cli
lret
mov
es
mov
mov
into
in
lock
fisttps
and
or
dec
std
push
jge
and
add
or
and
imul
mov
push
pop
std
pusha
push
data16
jbe
dec
in
aaa
dec
adc
popf
movb
xor
out
test
jne
add
xor
out
pop
adc
xor
inc
mov
mov
stos
sbb
xchg
pop
adc
mov
mov
movb
push
inc
clc
loopne
sti
jbe
pop
or
xchg
jne
add
add
inc
lahf
pushf
punpckhwd
mov
hlt
lods
add
jp
fnstsw
add
mov
sub
fldt
dec
mov
sbb
sarb
xchg
loopne
ds
outsb
mov
dec
mov
ds
sbb
inc
push
jo
into
jp
es
in
test
inc
shl
or
les
mov
inc
add
lock
into
aaa
jnp
fimull
xor
mov
fwait
mov
imul
xchg
pop
inc
lcall
adc
shll
out
cld
ret
punpcklbw
sub
in
rcrl
lcall
aaa
mov
ret
mov
dec
mov
ret
mov
in
inc
push
sbb
pusha
call
lcall
pop
push
jle
pop
shll
cs
aaa
jmp
test
out
pop
rcl
pop
sbb
push
mov
mov
ret
pop
or
ja
aaa
sahf
pushf
stc
mov
sar
dec
fwait
cld
scas
lcall
and
ret
jp
loopne
jle
sbb
movsb
addr16
dec
rcl
mov
clc
mov
mov
ret
fbstp
jp
leave
add
clc
ret
mov
repnz
jl
push
cmp
dec
inc
ficompl
inc
sbb
jge
das
mov
cmp
add
cmp
push
sub
fbld
roll
adc
test
add
dec
jmp
cmpb
call
dec
or
adc
stos
dec
jge
pop
fsubrp
xchg
pop
xorl
pop
add
or
in
xchg
adc
in
pop
cwtl
pop
test
cs
mov
jb
jae
jle
movsl
scas
jle
push
add
pop
jae
add
call
fstpt
pop
ds
dec
incl
adc
sub
pop
push
or
rcrl
pop
outsb
fs
shr
inc
ljmp
adc
push
insb
call
daa
xchg
jo
shl
cwtl
xor
dec
jb
imul
push
hlt
mov
ljmp
lcall
ds
shlb
pusha
or
dec
cwtl
adc
pop
or
cmp
or
mov
in
xchg
mov
les
cmp
or
ret
sub
add
in
cld
in
out
aam
jmp
jb
mov
clc
xor
sahf
push
pusha
test
fdivl
cs
push
fbld
cmp
mov
jl
or
loope
mov
cmp
out
out
sub
mov
in
out
int3
or
push
add
fmuls
xchg
fwait
or
push
es
jae
xor
ficomps
cmp
fsts
jo
lock
iret
loope
or
adc
mov
push
rorl
sub
ret
rcrb
jmp
dec
movsb
sbb
xchg
jl
pop
sbb
adc
into
out
push
sarb
incl
push
je
dec
cs
pop
mov
mov
mov
mov
xchg
ret
mov
rcll
loopne
pusha
jae
adc
ficoms
sub
jp
out
shlb
dec
sub
and
sub
mov
es
jmp
pop
cmpl
ljmp
add
fistps
add
cmpsb
dec
xchg
add
add
sub
inc
xchg
bound
xor
pop
pop
call
stos
push
mov
add
adc
lcall
fcoms
test
push
ret
cmpsb
mov
lret
push
or
or
push
das
pop
outsl
mov
cld
mov
pop
lcall
js
jle
push
aaa
loopne
and
ds
mov
idiv
jg
dec
jmp
cmp
mov
int3
mov
in
mov
mov
xchg
imull
jno
cwtl
dec
fcmovnbe
mov
jle
mov
cli
cmp
mov
ljmp
lret
mov
cmpsb
imul
dec
xchg
shll
loop
cmp
outsl
jl
pop
pop
or
add
jo
hlt
iret
cmp
jo
stc
mov
rclb
shl
bound
add
leave
lods
jp
cmp
cli
adc
sbb
xor
add
fsubrl
addr16
loope
movsl
push
test
and
mov
push
mov
adc
lds
shr
cmp
insb
cmp
mov
orl
or
push
mov
sbb
pop
popf
or
insb
ljmp
adc
adc
loop
sbb
pop
cmp
ret
sbb
cmp
adc
pop
shll
dec
cmpsl
je
decl
scas
add
sub
shrb
pop
frstor
mov
dec
xchg
out
push
dec
mov
and
adc
cmpsl
loope
das
xor
ficoml
cld
and
stos
and
xor
repz
ret
sbb
rcr
or
mov
xchg
sbb
ret
or
adc
into
inc
insb
nop
adc
sbb
in
inc
ljmp
cmp
adc
ljmp
add
adc
mov
outsb
cmp
and
mov
sbb
mov
add
inc
in
cmpsb
test
dec
cmc
add
iret
jmp
mov
jl
int3
mov
fwait
dec
or
jns
or
mov
mov
jbe
mov
insb
adc
push
xchg
pop
jg
or
sub
xchg
pop
pop
dec
sahf
sbb
bound
pop
cmp
insl
cmp
mov
movl
mov
sbb
and
jp
lea
sbb
xchg
adc
ss
inc
cli
stos
xchg
adc
pushf
pushf
mov
fs
cmpl
rcrb
inc
ret
scas
arpl
jg
adc
sub
lods
addb
pop
jo
push
inc
movsb
fs
js
and
adc
cs
enter
push
rolb
popf
test
lahf
mov
cld
movsb
hlt
pushf
mov
les
pushf
pop
and
in
clc
sbb
sbb
push
scas
add
fcmovne
mov
dec
popa
cwtl
test
cs
pop
add
jb
xorb
cmp
pushl
pop
lock
pop
push
rcl
add
jle
mov
lods
xor
cli
dec
sub
push
add
mov
jp,pn
lods
add
or
xorl
fcompl
xchg
lock
mov
jo
push
dec
adc
lcall
in
xlat
push
pusha
mov
sbb
es
push
xchg
scas
cli
push
add
outsl
adcb
mov
fldcw
int3
pushf
stos
dec
xchg
call
andb
mov
add
shlb
loope
cld
jg
xchg
sar
mov
mov
sahf
outsb
daa
lock
push
ficompl
jno
movsb
inc
loope
in
les
fcomp
dec
mov
mov
cmp
out
add
pop
jp
imul
pop
cmp
aas
sarl
fwait
cwtl
out
jno
push
subl
mov
jmp
faddp
or
pushf
push
jns
pop
cmpsb
call
test
mov
cs
xor
or
les
dec
cmp
sbb
xchg
xor
jb
pop
shlb
addl
jle
sub
mov
loope
dec
loop
push
insl
mov
loopne
mov
popf
cli
mov
sub
loop
sahf
jae
leave
aad
lods
lret
pop
push
xor
jl
cltd
ljmp
mov
mov
or
adc
cmp
lea
mov
popa
ss
mov
clc
movhps
jmp
sub
push
fwait
clc
daa
int3
and
jmp
fbld
or
jb
sbb
mov
inc
data16
fxch
jle
xchg
and
xchg
cmp
or
pop
fs
stc
push
cmpb
stos
das
stos
add
pop
mov
and
jg
push
jge
pushf
jns
lret
pop
or
pop
dec
xchg
xchg
das
test
push
mov
mov
js
mov
mov
mov
push
adc
pop
loope
pushl
mov
cs
mov
fsubp
xor
pop
arpl
mov
loope
test
push
test
std
xorb
je
xor
das
jns
dec
dec
repnz
pop
pop
aad
inc
pusha
adc
dec
sub
hlt
dec
adc
and
dec
insl
aad
push
scas
inc
mov
mov
std
fisttps
jmp
push
ja
adc
cld
dec
test
jmp
sbb
jbe
pop
mov
mov
adc
push
stc
mov
add
push
dec
add
and
push
pusha
cmp
mov
lods
call
aam
into
mov
es
fnop
outsb
leave
add
or
cmpb
popa
jl
sub
mov
cld
cmp
or
jp
sub
mov
jg
pop
icebp
stos
xrelease
call
xchg
cld
lds
scas
push
or
rcr
jecxz
test
xor
jo
and
data16
rol
sbb
mov
fists
inc
movsb
std
mov
decl
movsl
jns
xchg
mov
rorb
out
mov
xchg
and
test
mov
inc
mov
or
jecxz
pushf
sub
int3
jae
jae
insb
cli
call
jb
dec
addr16
pop
xor
mov
jmp
adc
inc
lock
inc
test
inc
iret
pushf
jbe
mov
adc
lods
xchg
mov
les
cld
sbb
pop
insb
lcall
sub
inc
adc
inc
xor
cmp
dec
or
or
es
add
and
mov
push
in
clc
and
mov
sahf
aad
shrb
and
stos
mov
les
dec
mov
cmpsb
push
testb
xor
dec
or
xchg
add
cmc
mov
xor
imul
mov
xor
xchg
lret
lods
add
iret
xchg
rcrb
jg
and
push
repnz
lds
sbb
push
or
cld
sbb
mov
adc
mov
pop
ljmp
aas
roll
pop
inc
out
sarl
out
xor
push
shrb
mov
adc
inc
mov
cwtl
xchg
rcrb
mov
dec
dec
aaa
add
cmpsb
outsl
loope
cmp
add
movsl
cmpb
les
les
push
inc
or
hlt
inc
jne
add
pop
or
jb
test
and
daa
das
shrl
or
sbb
jg
jne
xor
xchg
xor
add
xor
repz
add
fcompl
ljmp
inc
ret
push
dec
xor
dec
mov
in
cmp
inc
add
inc
or
xchg
data16
xor
divl
int3
sbb
cmp
jmp
int
pop
cwtl
shrl
push
jl
out
mov
hlt
push
lahf
cmpsb
push
mov
enter
dec
inc
inc
mov
add
dec
std
mov
pop
mov
testl
nopl
cld
lds
sbb
xor
cwtl
aad
stos
add
push
call
jle
lahf
les
pop
orl
jo
add
in
xchg
cmc
inc
call
imul
push
sbb
jb
jbe
cmp
jl
jmp
add
add
push
int
fistpl
xorl
cs
dec
loope
scas
add
dec
andb
jae
add
add
in
hlt
pop
leave
lret
ljmp
scas
sub
cmp
cli
mov
sub
imul
js
pop
jl
inc
mov
gs
inc
ds
fsts
mov
ljmp
mov
outsl
mov
mov
orb
jecxz
jne
mov
xor
ret
incl
jae
cs
xchg
pusha
sbbb
jle
test
push
mov
mov
jns
sbb
loopne
mov
daa
inc
cmp
dec
or
leave
jo
sub
push
pop
mov
add
stc
enter
jnp
lds
inc
mov
jae
mov
les
jle
cmc
subl
jle
cmp
push
insl
push
cld
cmpsb
dec
enter
xlat
push
add
fimull
sbb
mov
inc
sbb
mov
aam
jo
sbb
pushf
push
mov
jns
or
pop
cld
adcl
push
movsb
sbb
sbb
adc
sbbb
push
cld
mov
pop
cmp
push
push
shrl
cmpl
ja
dec
push
or
fsubrl
inc
add
lcall
cs
xchg
sbb
test
cltd
sub
aas
aad
adc
pop
and
clc
cmc
push
mov
xor
add
or
sub
xchg
fiadds
ljmp
adc
push
dec
xor
loopne
decl
pop
shlb
jecxz
mov
jb
push
sub
out
sub
mov
dec
es
mov
out
pusha
sti
push
mov
shlb
mov
adc
jp
frstor
sbb
out
sub
mov
lds
addr16
repz
lock
xchg
mov
jecxz
push
inc
and
imul
je
adc
addl
sarb
mov
or
aaa
and
mov
mov
test
leave
movsl
fisttps
cld
pop
add
mov
jne
sbb
es
or
cmp
ss
fucomi
mov
adc
xchg
jne
xchg
xlat
inc
loopne
test
xchg
mov
jae
xor
adc
mov
pop
dec
mov
movsl
push
clc
push
jge
inc
sarb
dec
ss
fstp
jge
push
loopne
addb
mov
std
cmp
sahf
xchg
pop
and
jns
cmp
pop
sti
dec
jl
inc
outsb
sbb
ss
mov
cmp
cli
inc
mov
incl
or
shrb
fsin
std
cs
and
adc
ss
ss
pushl
push
ljmp
pop
mov
bound
rorb
mov
pop
mov
mov
sbb
cwtl
jl
lods
sahf
loop
ret
lods
mov
int3
es
pop
pop
dec
and
mov
inc
pop
mov
pop
mov
adc
mov
add
sbb
test
dec
mov
jl
cld
outsl
rorb
neg
fbld
inc
into
sub
and
cwtl
xchg
cmp
xor
jl
dec
in
cmp
test
cld
or
sub
jle
aam
jo
push
adc
negl
hlt
add
adc
mov
jne
inc
pop
cmp
in
dec
movsb
add
inc
push
mov
push
add
push
xchg
adcb
cmc
lods
addb
daa
enter
sarl
jmp
aad
or
neg
mov
cmp
sbbl
das
add
jge
pop
popf
push
call
das
scas
ss
or
pop
xor
ja
ficoms
data16
and
aam
adc
and
cmc
outsl
es
sbb
mov
mov
filds
fbld
jecxz
pop
pop
inc
iret
pop
add
push
add
stos
mov
imul
inc
sbb
outsl
pop
mov
sbb
jle
xchg
loopne
and
mov
xchg
mov
lods
cmc
cmp
push
rorb
add
inc
push
cmp
sub
cltd
push
pusha
xor
mov
insb
jmp
inc
add
xor
mov
movsl
aam
icebp
dec
jg
xchg
jg,pt
push
aam
jecxz
push
mov
sub
or
mov
xchg
sub
mov
sbb
fwait
clc
aas
mov
aaa
js
ljmp
mov
cmp
cmc
jnp
pop
addr16
sarb
shr
sbb
stos
imul
sbb
fsubr
data16
or
jecxz
data16
sbb
xchg
mov
test
mov
into
fcoms
mov
sub
xchg
pop
js
push
or
jo
adc
push
lods
cltd
cmp
nop
mov
xchg
jno
dec
mov
add
shlb
push
in
int3
js
push
int
inc
inc
adc
fistl
or
lock
in
enter
dec
jmp
jl
push
jo
rcr
pushl
repnz
push
rorl
mov
into
movl
es
ja
inc
dec
fiadds
insl
cltd
out
sti
mov
dec
adc
insb
xchg
lcall
xor
dec
jb
inc
xor
test
imul
leave
les
inc
xor
add
clc
jg
jne
and
call
mov
in
push
shll
or
cwtl
inc
xchg
test
mov
mov
xchg
repz
pop
lcall
in
clc
aas
fimull
mov
add
clc
hlt
adc
fsubrl
mov
xorl
inc
test
jb
std
add
ret
mov
jl
insb
pop
in
mov
add
sar
add
push
dec
cmp
imul
cs
inc
xchg
arpl
fwait
or
stos
cli
leave
dec
pop
add
push
mov
push
push
push
inc
fs
sub
cld
dec
mov
outsb
stos
cmp
jle
rcll
cmp
ret
mov
in
scas
jmp
js
mov
int3
pusha
es
lock
mov
cmp
adc
adc
stos
lahf
inc
add
aad
fdivs
pop
pusha
je
push
sbb
push
repnz
xorl
inc
sub
icebp
inc
addr16
fsubrp
scas
incl
jae
stos
clc
arpl
dec
or
push
push
fldl
xor
cmp
das
shlb
add
movb
retw
pop
pop
frstor
jae
adc
loope
icebp
adc
push
cmpsb
dec
dec
sbb
and
jne
pop
mov
mov
sub
push
call
pusha
sbb
inc
icebp
scas
and
scas
arpl
push
push
add
sbb
xor
testl
add
imul
inc
jle
loopne
into
or
push
dec
call
push
repz
loop
inc
orb
sbb
pop
clc
lret
mov
mov
dec
xchg
jb
mov
mov
pop
test
je
mov
xor
jb
xor
jbe
andb
mov
inc
jae
push
out
out
imul
clc
or
mov
mov
mov
adc
int3
aam
add
cs
repz
loope
inc
dec
aaa
mov
and
and
lcall
leave
and
in
outsb
lds
inc
pop
mov
lds
or
lea
ljmp
call
std
push
dec
rolb
mov
sbb
and
cmp
add
int
cmpsl
popa
add
jg
jbe
out
in
shlb
pop
cmp
inc
subl
rorb
mov
leave
jbe
arpl
push
cwtl
jmp
adc
cld
out
test
or
sbb
sub
sahf
jno
mov
push
imul
mov
aaa
mov
xor
pusha
jb
mov
decl
cs
movsl
inc
sub
add
sbb
dec
xor
imul
mov
loopne
rclb
aam
cmp
mov
ret
sub
loope
nop
dec
loope
sbb
sub
sbb
inc
ds
cltd
or
mov
pop
mov
test
es
clc
mov
sbb
add
xor
push
mov
xor
insb
sbb
pop
and
lahf
cmovae
idiv
sub
pushf
mov
scas
ljmp
in
gs
ja
and
sti
mov
aad
outsb
test
movsb
das
js
jmp
mov
stc
dec
fldcw
pusha
and
shlb
adc
push
mov
add
pop
fisubrl
add
movsb
push
cli
cwtl
aaa
or
pop
push
pop
mov
cmp
lcall
decb
mov
and
fwait
push
pop
loop
jo
adc
push
sbb
mov
aam
adc
clc
out
jecxz
pushf
xor
pop
movsb
fwait
sbbl
adc
sti
js
pop
icebp
cmp
push
outsb
inc
imul
add
pop
pop
adc
outsl
hlt
jg
xchg
ret
mov
es
add
jecxz
mov
data16
int
div
movaps
mov
sbb
inc
loopne
xor
aam
fimull
lahf
mov
in
push
rclb
pop
mov
lds
or
xchg
add
and
or
cli
pop
clc
lods
or
sub
pop
xlat
mov
adc
jecxz
or
or
fidivrs
push
mov
ds
hlt
mov
sbb
jecxz
pop
fiaddl
push
test
cmp
push
mov
and
inc
test
sbb
enter
pop
jbe
out
cmpsb
rcll
mov
loop
idivb
mov
pop
scas
xor
call
pop
lret
pop
add
sbb
movsl
or
aam
jb
ljmp
mov
mov
cwtl
or
xchg
mov
pop
mov
lcall
add
or
mov
and
and
clc
pop
push
cld
movsl
and
push
jae
mov
aam
lods
push
cmp
pop
jnp
mov
lcall
mov
sbb
pop
mov
adc
mov
pop
mov
dec
mov
dec
mov
aad
fldl
pushf
mov
xor
pop
push
jns
cvtps2pd
dec
loop
push
push
mov
push
outsb
jg
leave
sub
sbb
xchg
pushl
lds
in
and
loope
dec
outsl
mov
mov
sbb
push
test
mov
push
dec
pusha
jle
scas
mov
inc
and
sbb
les
dec
out
stc
in
popf
mov
repz
mov
sbb
cltd
add
repnz
loope
es
mov
orb
sbb
sarl
or
decb
ljmp
pushf
xor
nop
daa
push
adcb
jge
mov
mov
mov
aam
cmpsb
pushf
jle
push
pop
or
pop
in
adc
mov
xor
sub
cmc
add
dec
ficompl
lods
xchg
add
mov
lcall
bound
jb
xor
pushf
push
into
jo
push
adc
pop
hlt
lock
imul
hlt
pop
insb
and
insb
jbe
add
fmull
push
rcrb
push
jp
movsb
ljmp
inc
pop
adc
mov
pop
sbb
shrb
fdivp
push
mov
add
rolb
std
cmp
les
fcoml
jo
bound
iret
ljmp
ss
push
test
pop
xor
jb
mov
leave
mov
shlb
or
lods
adcl
icebp
pop
lock
aam
mov
push
fsubrl
and
lds
pop
pop
or
mov
loop
mov
cmp
push
adc
lahf
xchg
xchg
subb
jg
insb
imul
dec
mov
pop
add
call
imulb
aas
pop
xchg
popf
mov
sbb
aam
sub
in
dec
pusha
cmp
xor
sbb
xor
pop
into
rolb
sbb
inc
sar
push
and
les
adc
push
sbb
push
pop
push
mov
ds
fidivrl
loop
hlt
outsl
sbb
outsb
cmp
lods
cld
mov
push
pop
cli
xor
pop
mov
mov
std
mov
sbb
xchg
jg
ret
loop
std
mov
add
nop
outsb
outsl
jno
out
mov
adc
test
loopne
xor
add
lock
cld
out
fcmovnbe
add
jmp
call
test
xorb
add
push
and
test
mov
jl
fcompl
adc
mov
adc
sbb
call
aad
in
rcr
leave
lahf
fs
aam
add
shrb
filds
ret
jp
mov
mov
fistpll
xor
call
mov
fcmovne
mov
sbb
push
test
ret
jg
fwait
xchg
mov
bound
mov
inc
insl
and
push
loope
cmp
push
in
mov
scas
cmpsl
js
or
mov
push
popf
cld
xchg
xchg
inc
mov
inc
xorb
es
ficoml
adc
or
fidivrl
lods
cmpb
outsl
sti
mulb
in
aam
mov
add
cmp
cmp
and
adc
inc
enter
xrelease
shlb
test
scas
or
into
sarl
outsb
mov
pop
and
fcoml
xor
and
pop
mov
pop
jbe
movsl
aaa
mov
cli
icebp
add
add
push
jle
add
jbe
pop
test
or
jne
xor
sbb
insl
xchg
ja
movsb
mov
adc
rol
mov
sub
es
adc
mov
dec
xchg
imul
or
ret
sbb
or
adc
and
mov
adc
fsubl
notl
inc
loopne
divl
mov
sub
cld
xchg
cmpsl
adc
mov
repnz
or
mov
or
mov
ljmp
mov
test
jo
adc
add
fnstenv
scas
cmpsb
pop
inc
inc
outsl
xorb
xor
shll
xor
xor
ret
mov
cmp
sar
sbb
sarb
lahf
mov
in
push
push
inc
cmp
mov
dec
inc
add
push
sti
iret
push
push
push
push
jno
lea
lret
and
push
in
mov
cmpsl
or
push
incl
xchg
int3
jo
or
mov
mov
sub
stc
das
sbb
mov
add
inc
jbe
stc
or
mov
adc
fwait
sbb
cmpsb
movsl
mov
pop
push
filds
enter
data16
insl
add
lds
inc
ljmp
out
mov
bound
jne
add
divl
pop
aam
xchg
ficomps
mov
jno
sub
sub
aam
cmp
or
xor
mov
bound
aam
in
sub
adc
stos
mov
mov
and
push
nop
push
inc
cmp
mov
cmp
ja
adc
xchg
std
or
jbe
dec
les
mov
test
jle
mov
adc
test
in
scas
popf
sub
sub
and
incl
xchg
nop
push
stos
imul
adc
mov
push
lcall
inc
aad
cmp
add
insb
ds
cli
mov
pop
push
xor
and
aas
scas
mov
ss
fbld
lods
xchg
in
cmp
mov
sar
enter
out
out
mov
call
jno
add
sub
roll
xor
fistps
or
ljmp
or
jmp
push
mov
jb
mov
roll
cld
call
cld
lcall
subb
xchg
popa
outsb
iret
pop
out
mov
push
sarb
out
mov
es
push
and
fimull
xchg
push
inc
frstor
sbb
iret
pop
pop
xor
ljmp
sub
ret
adc
adc
mov
and
cld
inc
sub
push
sub
xor
and
or
stos
pop
sbb
cwtl
imul
jbe
gs
pop
in
push
adc
scas
aad
cld
sub
sub
movsb
rol
sbbb
jle
sar
mov
out
int3
pusha
jb
xlat
mov
cwtl
jns
mov
cmp
insl
mov
mov
call
adc
pop
cmp
mov
adc
fs
adc
sub
dec
jo
fisttps
add
push
insb
stos
sbb
test
nop
pop
je
clc
push
sahf
ja
jg
in
test
mov
mov
dec
insb
aaa
and
neg
orb
dec
adc
aaa
dec
ficoml
into
or
xchg
test
aaa
outsb
adc
xchg
adc
clc
mov
outsb
jp
int3
dec
dec
xchg
loopne
add
fisubl
cmp
orl
ljmp
and
imul
in
push
push
inc
jecxz
mov
incb
jbe
repnz
aaa
pop
das
movsb
jo
imul
nop
shlb
aas
inc
push
pop
addr16
addb
sub
fadds
pop
pop
jl
mov
lcall
or
inc
cwtl
cmp
mov
inc
sahf
sub
sub
mov
mov
cmp
inc
sub
add
test
add
push
jecxz
in
loope
test
adc
push
sub
aam
push
imul
fadds
test
add
push
jle
cmp
inc
mov
test
stc
outsl
jbe
xor
jmp
xor
hlt
enter
xlat
jg
mov
stos
mov
roll
xor
inc
mov
adc
decb
or
out
std
and
mov
add
add
enter
sbb
cwtl
clc
insl
jmp
push
inc
push
loop
jb
pop
mov
loopne
je
pop
inc
push
jo
loop
sbb
add
mov
mov
dec
rorl
mov
inc
hlt
daa
mov
pushf
sbbb
adc
insl
clc
add
add
jne
dec
das
push
sub
sbb
adc
push
xchg
out
mov
inc
adc
or
cli
push
movsb
imul
mov
jle
sub
outsb
ret
push
mov
or
mov
pop
shr
adc
scas
nop
pop
pop
jp
dec
and
rolb
loope
push
mov
cmp
pop
push
inc
outsl
imul
jb
rolb
fisttps
lcall
jle
popf
push
gs
jmp
xchg
or
mov
sbb
xchg
loopne
fsubrl
fwait
mov
xchg
mov
mov
fcmovb
cmp
add
add
dec
stos
call
nop
and
pop
xlat
aaa
jge
sub
push
xlat
popa
int
out
xchg
cmc
stc
inc
jp
mov
leave
imul
clc
sbbb
lahf
insb
dec
fcompl
lods
inc
cwtl
mov
adc
pop
mov
hlt
xchg
inc
jae
or
mov
and
decl
aad
push
push
insl
mov
nop
std
cltd
inc
push
popa
leave
cmp
jmp
mov
movl
test
sbb
ja
sbb
outsl
std
xchg
push
ljmp
adc
jge
inc
shll
add
or
push
out
dec
into
popl
dec
mov
out
cmp
push
imul
jle
inc
shlb
pop
or
or
pop
jae
and
dec
enter
xchg
add
sub
sbb
pop
cmp
test
in
add
mov
jp
mov
mov
or
jo
mov
ret
xor
int3
jl
sahf
out
ss
inc
sub
faddl
pop
jge
mov
lret
sti
test
push
dec
int
xchg
push
mov
sti
pop
or
sub
out
add
out
sbb
xor
and
outsb
mov
xor
and
outsl
jl
popa
mov
jle
lret
movsb
inc
jo
lock
mov
and
dec
shll
dec
pop
fists
rorb
adc
push
lods
outsl
ljmp
cs
jb
ror
bound
jp
xchg
int3
xchg
add
jnp
mov
fildll
dec
lds
pop
sarl
add
rorl
nop
mulb
rol
add
mov
gs
push
sub
push
dec
js
and
dec
das
add
and
jo
ds
push
add
fdivp
mov
sub
cmp
lock
and
mov
imull
fiaddl
add
aam
shl
push
ret
mov
adc
push
inc
sbb
xchg
jbe
push
dec
dec
pop
stos
jae
clc
mov
xlat
fbstp
and
mov
cmp
jl
mov
notb
sbb
sub
mov
test
ja,pn
call
decl
mov
cmp
nop
loopne
std
jne
lds
divb
xlat
out
push
cmc
jle
adc
cmp
pop
je
int3
dec
xchg
xchg
and
dec
mov
leave
jnp
xchg
daa
cmpl
cmp
add
lcall
adc
jbe
push
orb
lcall
hlt
jns
xchg
sahf
ja
jp
fdivrs
dec
push
addr16
fsubp
mov
call
aad
sub
out
loope
push
shl
aaa
mov
xor
out
cs
jnp
jg
lods
xchg
or
test
shrb
jo
test
add
xor
dec
jne
les
xchg
xchg
pusha
add
call
mov
js
dec
cltd
cmp
jo
jp
std
xor
les
fistps
mov
popf
mov
or
add
dec
mov
push
icebp
cld
jp
push
inc
dec
call
sub
leave
mov
dec
pop
lds
ret
gs
dec
pop
adc
xchg
bound
jno
fcmovne
push
xor
jp
call
xor
xor
sbb
push
fisubl
push
shlb
pusha
xchg
test
mov
shll
sbb
or
sbb
iret
lret
rclb
fisubrs
nop
mov
and
aam
mov
cltd
test
orb
fwait
scas
adc
js
mov
mov
xor
add
or
fstpl
cmc
jle
push
push
popa
dec
orb
fcomp
mov
and
mov
push
ljmp
in
jne
ljmp
in
sarl
mov
dec
xor
xchg
push
dec
mov
xchg
sbb
je
jne
inc
mov
adc
jg
pop
inc
sbb
aas
enter
aam
xchg
fbld
adc
adc
ja
sub
pop
ficompl
lock
lods
xor
jl
add
scas
xchg
sqrtps
test
jl
pop
adc
pushf
and
sub
mov
push
ret
rol
inc
addb
fmul
pusha
clc
pusha
or
aas
adcb
push
pop
push
insl
outsb
xchg
adc
and
add
sub
pop
add
in
inc
push
ret
add
dec
add
adc
pop
or
popa
mov
or
push
sahf
mov
stos
addr16
ds
mov
cmp
add
sbb
pop
cmp
notb
or
pop
icebp
fcomip
lcall
dec
ret
mov
cmp
ret
xor
aad
xor
testl
imul
jle
push
dec
jno
add
cmc
xchg
inc
call
pop
clc
add
std
cltd
pop
int3
push
ret
dec
hlt
sbb
icebp
pop
rcll
pop
lock
or
jbe
jg
mov
inc
inc
sub
hlt
jo
pop
fsubs
push
jb
inc
mov
or
loopne
or
incl
pop
push
xchg
mov
decl
push
faddl
adc
inc
subb
ja
xchg
dec
xchg
or
outsb
pop
jmp
leave
and
dec
add
jle
pop
sbb
or
mov
jbe
push
mov
or
fidivrs
js
add
xchg
jp
inc
fdivrl
or
mov
loope
int
test
fs
loopne
add
jb
arpl
testl
rorb
cmc
out
sbb
inc
xor
bound
mov
xchg
sahf
sbb
mov
setg
adc
sbb
mov
jb
call
inc
mov
mov
cmc
popa
fldcw
dec
fdivrs
popf
call
mov
rcrl
cwtl
gs
aas
jmp
les
xchg
push
out
cmpsl
mov
sbb
ja
les
movsb
cmp
sbb
xchg
cmp
jle
cli
loopne
pop
mov
dec
dec
cwtl
inc
stos
sub
ljmp
andb
mov
sbb
test
lret
fld
add
mov
cmp
add
push
lds
lods
adc
mov
adc
cmp
add
add
sti
ja
adc
inc
in
mov
xor
arpl
jecxz
pop
icebp
mov
jl
sbb
daa
nop
and
shlb
imul
inc
pushf
outsb
rorb
lahf
pop
sar
scas
les
push
loope
xor
movsl
sbb
sub
test
std
mov
dec
enter
and
mov
int3
mov
mov
mov
sbb
jl
fistps
add
push
ret
push
mov
adc
add
push
je
mov
mov
sahf
test
push
fisubrs
adc
or
scas
and
lea
jno
cmp
mov
or
mov
mov
cmp
fmuls
andl
jb
inc
cmpsl
movsl
and
xchg
add
pusha
or
and
or
out
adc
push
pop
lock
add
inc
push
out
add
aad
arpl
lock
sub
push
inc
popf
je
pop
inc
cwtl
test
adc
push
rcrl
repnz
test
shll
or
xchg
xchg
mov
aas
std
mov
nop
cmp
ficomps
xor
stos
sbb
dec
mov
and
inc
pop
add
pop
mov
push
pop
aam
mov
jbe
imul
fiaddl
mov
and
clc
push
outsb
adc
push
pushf
mov
pusha
repz
jp
sub
mov
sub
and
movb
sub
mov
pop
jmp
imull
insl
aad
test
out
mov
push
sub
loope
rorb
sub
adc
dec
mov
mov
lock
mov
fmul
pop
fcompl
hlt
addr16
into
das
pop
clc
frstor
mov
incl
std
lods
cld
pop
sbb
mov
jb
mov
popf
scas
filds
pop
nop
ret
inc
mov
push
subl
sbb
test
add
lock
loopne
mov
sbbb
jl
into
sub
sbb
lret
pop
jo
cmpsb
fs
sbb
sbbb
addl
shl
mov
pop
sbb
ret
repnz
lea
cwtl
loope
fwait
test
scas
cltd
mov
cmp
add
add
enter
loopne
movsl
or
pop
pop
aaa
dec
inc
dec
jge
xchg
les
ss
adc
dec
scas
rclb
testl
fs
mov
and
scas
adcb
pop
frstor
in
andb
or
scas
test
decl
mov
cltd
adc
jge
rcll
mov
out
insl
jmp
test
add
add
lock
nop
loopne
sub
push
mov
insb
mov
pop
xchg
es
fwait
jb
ret
add
xchg
addl
cmp
lods
stc
add
inc
adc
mov
xor
ret
clc
dec
call
mov
xchg
push
xor
mov
cs
mov
dec
xor
push
push
mov
mov
jle
inc
cmp
rcr
in
push
push
adcb
std
jg
out
or
sub
les
shl
loop
std
push
out
push
loopne
adc
daa
mov
pop
push
lcall
sbb
mov
mov
jg
rcrb
add
mov
testb
lahf
or
adc
gs
sti
and
mov
sahf
or
out
insb
decl
shl
jp
addl
sbb
shrl
sbb
cli
or
mov
out
in
cmc
mov
call
push
pusha
add
outsl
ljmp
out
xchg
ret
cmpl
pop
ret
jge
dec
inc
sub
jg
shrl
decl
cltd
and
cmpsl
ret
cwtl
ja,pt
ret
or
adc
mov
mov
roll
pop
dec
imul
pop
jbe
insl
and
add
push
pop
clc
add
ljmp
cwtl
leave
xchg
mov
pop
jle
push
daa
outsl
ja
shrl
mul
out
and
jp,pt
jmp
mov
xor
test
jge
das
cld
loop
cmp
bnd
addr16
fmuls
cmp
cli
push
xchg
add
dec
hlt
add
pop
aam
mov
pop
xchg
add
mov
jge
repz
xchg
std
xchg
enter
push
sbb
sub
fs
lods
mov
adc
nop
call
loop
lea
lods
sub
jnp
icebp
shl
push
mov
cltd
sub
add
fistpl
in
std
dec
add
mov
add
push
ret
nop
push
shll
shll
sub
adc
ljmp
adc
adc
push
sbb
add
push
jnp
outsb
push
sbb
add
push
call
sbb
andb
aaa
cld
push
mov
push
rolb
jne
cli
inc
or
fadd
data16
test
stos
push
xchg
imul
or
mov
push
dec
mov
jle
test
mov
clc
jg
repz
xorl
insb
sbb
jecxz
stos
leave
ss
jge
mov
in
push
xor
mov
inc
lahf
sarb
jmp
inc
mov
xor
adc
adc
dec
push
push
incb
mov
into
mov
xchg
pop
push
dec
or
cltd
mov
mov
popf
stos
subl
enter
ds
int3
das
mov
add
add
mov
fs
subb
or
sbb
mov
push
dec
pop
lods
in
xor
mov
ss
int3
std
ret
test
lock
insl
mov
push
lcall
test
or
pop
jge
xchg
scas
mov
xchg
std
mov
adc
fwait
or
enter
addr16
inc
xchg
ss
mov
testb
jg
pop
std
and
push
add
cmpsb
jmp
or
pop
ret
push
xor
xchg
add
out
scas
mov
shlb
mov
add
filds
repz
xlat
call
hlt
inc
mov
adc
cmc
in
mov
add
inc
jo
outsb
sbb
lock
dec
xor
adc
fdivrs
pusha
fcomps
outsl
xchg
cmpb
popa
xor
adc
imul
push
inc
bound
pop
mov
cli
xchg
jp
sbb
call
test
ret
cmp
sub
mov
and
orb
add
add
mov
outsb
add
dec
sub
inc
leave
xor
cmpsb
sbb
mov
fcoms
xchg
jl
sbb
dec
loop
xor
fisubs
hlt
mov
lock
jbe
adc
push
and
je
movb
add
cmp
scas
xchg
jbe
sub
loop
add
bound
nop
adc
pop
jno
mov
sub
sub
jecxz
sbb
mov
xchg
popa
add
call
pop
xchg
cld
fistpll
bound
lock
rorb
cmpsl
push
popf
jnp
daa
adc
push
incb
push
mov
mov
cld
xor
mov
cltd
pusha
xchg
popa
inc
js
les
jb
pusha
jge
js
adc
sbb
jne
incl
lock
ja
or
adc
add
adc
fucomp
ret
stos
mov
push
push
faddl
cmp
cld
cmpsb
inc
xor
lds
jl
les
mov
pop
mov
sub
lods
cwtl
jmp
sar
icebp
cld
add
out
mov
pop
loop
inc
adc
or
pop
sbb
insl
loope
add
loop
mov
push
xchg
mov
ljmp
movsl
addb
lods
mov
shrb
push
les
dec
push
mov
bound
clc
mov
pusha
lret
mov
sub
jecxz
lcall
repz
incl
addl
cmpsl
push
insl
inc
inc
sub
mov
test
cmpsl
je
ds
xor
outsl
lret
mov
add
xchg
adc
inc
push
cmpsl
out
pushf
xor
inc
jge
and
aas
orl
sub
push
loope
adc
sbb
mov
loop
loop
sbb
sub
arpl
aaa
pop
int
call
xor
mov
adc
xor
jg
inc
push
int3
jp
mov
loopne
adc
add
push
aaa
lret
jle
je
into
mov
pop
ljmp
lock
mov
push
out
mov
mov
add
lods
push
inc
push
sbb
sub
ror
cld
dec
pop
mov
repz
outsb
cmp
xchg
lock
push
mov
add
sbb
cli
insl
adc
cli
add
jnp
ja
jecxz
xor
pop
xchg
xchg
push
out
xor
cld
call
and
or
add
mov
sub
pusha
dec
ret
and
rclb
pop
clc
pop
sbb
mov
sbb
mov
popa
ljmp
push
inc
nop
add
mov
rclb
in
stc
cs
sbb
lcall
mov
clc
cmp
or
outsb
add
out
lock
inc
cmpb
xor
mov
xchg
nop
lods
lret
gs
push
ljmp
sarl
push
outsl
adc
into
dec
jle
pop
or
xor
or
mov
pop
inc
test
ss
mov
data16
add
fs
or
sub
mov
add
push
lock
push
add
adcb
test
pushl
ficompl
sub
loope
pop
leave
cltd
mov
mov
fcomp
push
outsb
xor
int
test
inc
sarl
outsb
iret
jp
or
aam
mov
call
xchg
cmp
jp
inc
les
fisubs
loope
fldcw
and
inc
call
inc
cld
xchg
or
test
lods
test
add
adc
sub
or
or
push
sbb
loope
out
inc
cmpsb
pop
ja
es
mov
add
and
dec
cwtl
add
hlt
sub
mov
pop
sbb
in
mov
stos
mov
xchg
jnp
sarl
movsb
jns
fs
rcl
jle
lds
movl
lret
pushf
aas
mov
imul
or
add
and
fidivrl
cwtl
fdivrs
and
bound
cmp
pop
pop
std
sti
push
sti
add
shlb
aaa
jl
jnp
or
imul
adc
fcmovu
rclb
loope
inc
mov
push
sbb
movsl
add
sbb
inc
adc
pop
dec
pushl
sbb
mov
insl
adc
xchg
adc
add
lock
inc
xor
pusha
or
scas
es
cmp
stos
pop
lds
push
xchg
dec
adc
loop
test
js
test
add
repz
les
fsubrp
jbe
dec
loopne
test
inc
jns
mov
mov
cmp
or
dec
addb
push
adc
loop
push
sbb
push
cwtl
mov
xchg
inc
xchg
shll
cli
inc
lcall
xchg
je
aas
mov
or
insl
pusha
cmp
cmp
stos
sub
ja
test
stos
das
and
call
mov
pop
cmp
or
lcall
mov
aaa
cmpsb
hlt
mov
arpl
test
ljmp
fs
test
and
fdivp
push
nop
push
sub
je
fwait
mov
repnz
test
jmp
cld
pop
or
push
lcall
dec
add
fucomip
addb
mov
add
sbb
and
push
movsb
adc
fs
clc
lock
jg
xlat
lods
ljmp
scas
or
aad
adc
test
movsb
mov
popa
lods
sbb
mov
cltd
cmp
xchg
dec
push
dec
dec
push
push
sub
js
aaa
outsb
xchg
jg
hlt
cmc
jp
bound
and
cmp
pop
pop
ret
and
jg
hlt
jg
bound
notb
nop
mov
inc
xor
std
mov
mov
cmp
jp
add
ds
jg
rol
add
cmp
int3
daa
iret
outsl
cmp
or
inc
fsub
or
idiv
loop
aam
out
ret
les
loopne
pushf
outsb
mov
dec
or
sub
pop
cmpsb
xor
cmp
sbb
xorb
push
sbb
cmp
in
xchg
es
hlt
iret
data16
inc
xchg
or
lcall
xchg
fmull
fcoml
jle
push
out
add
jle
mov
add
jg,pn
inc
jo
mov
mov
cmpsb
lret
aaa
loope
std
ljmp
inc
mov
cli
repnz
rclb
mov
jge
in
bound
addr16
out
ret
outsl
hlt
add
push
orb
cli
cs
mov
or
lods
inc
in
adc
gs
sub
lods
pop
inc
add
test
daa
jo
push
or
mov
scas
cmpsb
push
and
mov
ret
stos
add
dec
into
mov
lea
jbe
and
addr16
jp
bswap
popa
cmp
mov
or
jmp
out
add
hlt
orl
enter
mov
sub
mov
sub
out
cmp
ljmp
mov
mov
testb
xor
pop
add
and
insb
mov
das
fsubs
push
int
stos
xor
push
xor
jp
loopne
xchg
dec
jae
mov
lcall
imul
pop
ret
lret
cmpsl
xchg
aaa
add
sbb
ds
sub
std
push
sbb
pop
ljmp
adc
loop
jg
mov
pop
ficomps
xlat
jp
shll
stos
or
push
add
fiaddl
testb
jg
jg
xchg
inc
mov
sub
ds
leave
ljmp
sbb
add
das
cli
mov
push
inc
mov
push
shll
popa
loop
hlt
js
jge
mov
loopne
cld
repnz
fldl
jb
in
inc
outsb
mov
movl
xor
xchg
rorb
in
mov
mov
mov
test
adc
jmp
adc
pop
sbb
mov
or
jo
shll
mov
es
mov
bound
mov
or
jne
lret
push
cmp
or
sahf
mov
cmp
addb
and
outsl
shlb
push
jmp
sub
clc
pushl
incb
imul
sub
lea
mov
iret
fsubs
lock
push
cld
inc
mov
and
js
in
dec
jp
dec
mov
and
gs
pop
fdivrp
mov
and
pmullw
test
stc
sub
adc
and
outsl
add
xchg
nop
jg
sub
add
cmp
cmp
lock
popf
push
adc
cwtl
ret
xchg
add
orl
push
aaa
jecxz
cmp
repz
insb
addl
aad
xchg
push
js
dec
sbbb
out
jp
call
mov
or
jp
imul
ds
cld
fbstp
mov
sbb
test
mov
ja
push
push
add
cltd
arpl
inc
jge
xchg
mov
aas
lock
out
insb
std
push
ret
fs
lret
pop
insb
testl
jle
fdivp
adc
rol
xor
cli
in
aaa
sub
pop
loopne
ljmp
clc
insl
push
lock
popf
add
sti
ret
das
mov
mov
lahf
dec
mov
insb
jecxz
or
in
push
incb
xor
ljmp
or
add
mov
in
fwait
mov
ljmp
int
popa
cmp
fbstp
mov
test
ds
dec
test
mov
pop
dec
push
inc
inc
test
adc
fsubl
mov
adc
cmp
dec
inc
lea
mov
mov
fisttps
mov
lcall
mov
mov
in
cld
es
inc
and
jg
dec
pushf
cmpb
lods
out
mov
ja
ja
sahf
rol
jne
and
mov
mov
jg
mov
popa
adc
xchg
ljmp
bound
test
hlt
sub
jbe
inc
call
bound
outsl
scas
fsub
jmp
repnz
or
push
cmpsb
pushl
push
sub
cli
pop
sub
xchg
scas
inc
and
pop
adc
inc
fists
dec
out
int3
add
dec
dec
je
add
mov
loop
and
mov
mov
stc
sbb
mov
jp
mov
movsb
jg
lret
repnz
bound
fsubl
mov
xor
push
cli
xchg
jbe
test
add
test
int3
movsb
xchg
rcrb
inc
pop
inc
daa
mov
test
sbb
push
loop
add
inc
add
mov
jg
xchg
cmpb
push
ret
sub
clc
stos
mov
xor
or
subb
loope
xchg
sub
out
shl
rclb
dec
cwtl
adc
out
idivb
add
cmpsl
jo
or
int3
push
aaa
cmp
push
jbe
lods
pop
icebp
aad
xchg
lcall
or
aad
je
daa
stc
iret
push
mov
ret
fisttpll
xchg
pushf
das
ss
roll
cmp
inc
sub
or
mov
shrb
add
or
add
in
pusha
xor
cli
pusha
aad
subl
jno
std
fs
jg
out
imul
dec
dec
faddp
mov
es
adc
jle
jo
pop
imul
cmp
sbb
mov
idiv
fildll
add
mov
stos
push
mov
outsl
addb
mov
push
inc
cld
stos
add
ds
gs
movsl
pop
xlat
mov
cltd
cmpsb
and
std
push
into
adc
push
adc
jo
es
sarb
jo
sahf
dec
subb
mov
mov
push
ret
or
stos
dec
mov
push
sbb
mov
cmpb
cmp
adc
enter
dec
enter
jecxz
decl
lods
pushf
cmp
mov
cmp
inc
mov
cs
and
adc
lock
pop
xchg
test
push
in
mov
jecxz
add
add
mov
pop
mov
loopne
mov
incl
cmp
arpl
fdivl
fidivrs
cmp
mov
cmp
outsl
push
call
mov
jg
fidivrs
jnp
pop
add
data16
movsl
subl
push
in
rclb
dec
test
mov
mov
adc
add
aas
pop
test
sbb
insb
cmp
imul
inc
push
push
jle
xchg
filds
xor
fidivrl
xor
add
decl
mov
repnz
xor
cs
pop
jg
icebp
or
mov
mov
sarl
test
dec
and
and
jb
and
push
xchg
stos
push
loop
orb
mov
subl
mov
xchg
std
cmp
jp
mov
pop
cmp
aad
jmp
fcmove
sbb
mov
sti
jnp
outsb
shl
decl
test
or
or
xor
movsl
cmp
and
sub
popa
mov
cmc
imul
push
pop
jb
sarb
lret
daa
mov
int3
cltd
mov
jecxz
dec
cmp
or
leave
je
add
jmp
fcmovnu
or
leave
int
pop
inc
cmp
dec
mov
inc
int
add
rcr
imul
jae
adc
mov
mov
push
xor
add
scas
cmp
add
add
js
loop
test
ret
and
out
mov
mov
inc
pop
push
xor
mov
push
push
xor
inc
sub
nop
imul
adc
xor
pop
pop
hlt
pop
mov
pop
cmp
xchg
out
es
es
cli
inc
fsubrl
inc
jne
aaa
jl
mov
or
jle
testl
inc
stc
sub
and
add
mov
xor
cmp
push
mov
sar
jg
sbb
add
add
push
inc
pop
sub
xchg
push
mov
push
add
je
mov
jmp
mov
rorl
rcr
pop
and
inc
data16
pop
mov
je
pop
fsubrl
fistpl
jb
je
push
loope
lods
fwait
and
repnz
dec
fcomps
jge
test
sbb
mov
test
add
popf
push
sub
cmp
cmp
xor
jle
sbb
xchg
xlat
pop
jecxz
fists
push
shrb
mov
pop
mov
pop
or
lock
sub
lcall
aad
in
aas
push
add
inc
and
aas
out
xor
add
or
push
push
adc
and
push
mov
xchg
adc
xor
inc
popa
outsb
lcall
test
enter
lock
mov
stos
or
roll
inc
lds
icebp
dec
rclb
jns
je
psrlq
cmpsb
pushl
adc
xchg
or
xor
fsubrs
ja
push
jl
stos
xor
int3
adc
inc
sub
pop
adc
add
push
xchg
outsb
ret
nop
incb
push
jb
aas
jecxz
mov
jle
dec
in
loopne
je
cmp
fmull
jl
and
mov
mov
xor
xor
popa
ja
inc
push
in
push
pop
push
loope
test
xlat
xor
les
cmp
in
pop
or
outsl
ds
lcall
test
fisttpl
xchg
pop
adcb
hlt
in
pop
sub
cmpsl
push
pop
xchg
pop
jbe
dec
scas
add
push
adc
pop
push
fimuls
pop
sbbb
pusha
std
and
ds
loopne
das
mov
push
inc
mov
mov
mov
xor
ret
sbb
inc
xor
hlt
test
push
dec
jns
mov
xchg
shll
and
push
adc
push
adcb
sbb
call
jbe
add
mov
cwtl
dec
shr
mov
add
xchg
jmp
or
or
push
push
dec
mov
cmp
es
pop
std
das
dec
lcall
lahf
xor
push
mov
imul
les
sub
add
ss
loopne
sbb
clc
testb
xor
cli
mov
inc
ret
fwait
movsb
jo
nop
in
test
cltd
lret
and
mov
roll
fwait
insl
ret
sub
mov
mov
fwait
mov
pop
add
pop
orl
or
and
rol
pop
shrb
or
push
sub
pop
pop
jbe
mov
sahf
pusha
pop
dec
jl
mov
sub
ja
inc
mov
cmpsb
cld
mov
mov
mov
cmc
add
movsb
test
int3
sbb
mov
pushf
mov
cmp
or
je
mov
dec
lods
mov
cmpb
test
daa
mov
cs
mov
aaa
dec
mov
sub
add
inc
loope
and
mov
divb
dec
repnz
xchg
sbbl
jmp
aad
mov
mov
mov
jo
inc
aad
adc
sub
out
jnp
orl
ja
aaa
dec
or
and
movsl
mov
pushl
sbb
mov
dec
and
icebp
sub
pop
push
dec
xor
repnz
loopne
add
cmp
rol
ret
sbb
xor
pop
mov
hlt
jb
insl
or
ljmp
cld
incl
dec
sub
int3
aam
adc
rcl
stos
and
fisubrs
xchg
sbb
push
daa
add
lds
cli
dec
jmp
xchg
insb
icebp
add
cmpsb
icebp
ret
inc
jno
and
test
lret
pop
std
pop
or
add
push
std
sub
push
fildl
jns
ja
lahf
mov
clc
mov
sub
pop
stos
sub
pop
xor
push
shrl
add
sarl
in
adc
fwait
sbb
inc
cmp
ret
jle
int3
push
es
inc
das
es
lds
test
xchg
push
mov
jle
jmp
in
pop
jb
or
nop
xchg
insl
bound
in
movsl
sub
mov
sbb
dec
pusha
mov
and
movsb
dec
xchg
jno
aaa
adc
fists
sbb
scas
pop
roll
out
movsl
popf
pop
outsb
rclb
scas
mov
mov
cmp
or
lock
dec
sbb
inc
andl
adc
mov
nop
insl
inc
xor
xor
jle
ret
ror
mov
outsb
clc
mov
inc
jae
into
dec
sbb
mov
adc
int3
mov
push
lods
fistl
mov
or
loopne
das
or
lahf
sbb
add
ljmp
or
or
clc
add
and
iret
push
pop
rolb
adc
bound
decl
add
add
jmp
mov
jp,pn
shr
pop
xor
les
out
mov
cmp
mov
sahf
inc
inc
mov
push
jg
leave
es
pop
and
fidivl
sub
inc
mov
mov
jb
repz
and
sbb
sub
xorb
mov
jo
ja
and
inc
popf
enter
push
in
jns
mov
xchg
fcomps
addr16
jle
cmp
lock
lock
in
fs
pop
mov
sub
out
push
gs
jnp
mov
add
xlat
or
mov
jo
push
sti
adcl
lcall
or
cmp
outsb
pop
pop
mov
or
stc
cld
outsl
cmpsb
pushf
mov
sbb
sub
inc
xor
pop
sub
dec
jo
jno
push
jmp
jge
hlt
jp
cmpsb
leave
cmpb
call
cmp
jno
loop
mov
cmp
or
jmp
lock
sbb
dec
rcll
fcoms
sahf
mov
pop
lods
in
sub
sub
test
mov
hlt
push
rcll
call
and
push
les
mov
cltd
movsl
xor
pusha
dec
pop
cmpsb
mov
js
push
jno
cld
push
or
jg
shlb
add
fsqrt
pushf
popa
jl
cmpsl
cltd
shlb
xlat
or
dec
mov
leave
lods
push
or
das
or
xchg
pop
push
jl
jge
decb
jle
cmp
sahf
jno
loopne
pop
sbb
add
js
movsl
xor
clc
pandn
out
popa
xchg
sub
xor
jae
in
movsl
icebp
or
or
add
lahf
loop
and
dec
sub
and
fcmovb
rclb
sub
push
fcmove
je
pushf
into
or
cmp
or
cmpsb
jnp
int3
gs
out
adc
add
xor
or
arpl
mov
cld
mov
repz
push
and
or
push
cli
cmc
pop
aad
aaa
push
sub
repnz
bound
xor
sti
mov
jae
pop
inc
fdivr
das
clc
jg
insb
pushl
cmp
clc
add
pop
xor
and
cmp
mov
scas
adc
inc
jmp
xchg
mov
push
addb
inc
ja
incl
movsb
mov
mov
mov
ret
mov
enter
xlat
adc
adc
incl
roll
stos
inc
cmpsl
inc
mov
pop
jle
sbb
hlt
mov
test
loope
mov
dec
sbb
push
mov
insl
movsl
mov
loope
dec
mov
jbe
and
push
jp
stos
push
and
jl
jp
movsb
and
fsubl
sbb
adc
pop
mov
fldt
or
mov
pop
adc
and
fld
mov
call
aaa
cmpsb
lcall
sub
and
adc
dec
lcall
cld
ds
or
sti
lock
mov
pop
or
idivb
fwait
pop
add
and
mov
pushf
rcrl
inc
out
imul
cmp
push
jne
add
fisttpll
into
mov
filds
fstpt
or
mov
ss
cmp
scas
and
popa
mov
call
xor
outsb
cltd
imul
pushl
pop
sub
or
adc
test
gs
push
aaa
fisubs
xorl
xor
xor
mov
into
in
cmp
sbb
je
in
fnsave
decl
mov
add
xchg
xchg
cmp
cmc
pop
insl
cld
or
xchg
cmp
and
std
or
push
frstor
scas
sbb
pop
loope
mov
cltd
add
fdivl
cmc
rcl
loope
in
inc
inc
cmp
pop
addl
adc
add
push
loope
in
lret
js
imul
cmpsb
mov
push
popa
sub
jp
inc
sahf
fwait
ret
mov
scas
push
ja
or
stc
movsb
dec
das
shrb
push
daa
jno
aas
mov
add
cmpsl
mov
cli
out
xchg
pusha
cmp
mov
xchg
daa
enter
xchg
cmc
adc
xchg
int3
std
pop
icebp
xchg
out
jl
sub
fistl
notl
cli
add
loope
shlb
paddw
call
sub
pop
nop
cmc
int
jbe
dec
push
fisubrl
scas
push
add
mov
cmp
das
add
idiv
aad
mov
or
sub
in
dec
push
faddp
sbb
daa
hlt
iret
jo
sbb
icebp
pop
push
fsubp
fadd
pop
sub
push
aas
clc
jnp
pop
adc
and
xchg
jae
pop
test
inc
xchg
push
mov
adc
decb
into
pop
add
jbe
loopne
movsb
sub
add
cmc
mov
scas
imul
sub
enter
test
aad
jns
bound
stc
inc
and
sbb
or
gs
sbb
sbb
daa
mov
xor
es
icebp
xchg
mulb
jmp
mov
es
decl
push
cld
mov
out
test
xchg
push
jecxz
mov
test
stos
bound
push
jge
cmp
clc
movsl
mov
and
cmc
xor
pop
cwtl
mov
push
cmpl
mov
adcb
mov
sbb
xchg
mov
mov
dec
xor
push
movsl
mov
mov
jle
mov
xor
adc
and
sbb
ret
pop
mov
mov
jo
scas
in
and
cli
xor
mov
rcl
fdivrl
in
das
jp
sub
sub
cmpb
popf
inc
lcall
add
xor
into
inc
pop
xchg
push
pop
fsubs
lea
and
mov
push
push
xor
ljmp
lcall
mov
and
jbe
mov
outsl
filds
rclb
data16
xchg
and
xchg
cmp
pop
imul
jl
jl
mov
sarl
popf
fstpl
int
andl
out
fdivrs
inc
lock
sub
jo
jae
movsl
ret
dec
loop
and
xchg
cmp
mov
andb
add
ss
sbb
in
or
inc
jno
push
push
cmp
xor
jle
mov
mov
cmc
into
iret
clc
clc
stos
lock
les
pop
test
insl
lods
addr16
xchg
jmp
popa
push
mov
fstpt
jo
cmp
mov
mov
mov
ss
lods
inc
int
push
testb
pop
loopne
xor
jb
cmp
nop
push
or
mov
std
xor
lret
push
adc
outsl
mov
mov
inc
mov
and
loop
iret
js
lret
push
cmp
pop
ljmp
push
pusha
aaa
cld
pop
call
dec
movsb
push
insb
lea
movsb
int3
sbb
or
dec
adc
dec
xor
add
sahf
lcall
push
insl
push
push
add
add
cs
inc
pop
jp
inc
into
in
aam
lahf
icebp
mov
sbb
add
fcomip
or
adc
sbb
mov
lret
adc
scas
lcall
rcrb
mov
add
or
xor
sbb
adc
add
dec
les
and
cli
test
jecxz
scas
clc
ret
mov
imul
and
ljmp
lar
sbbb
xor
subb
jns
divl
pop
js
sbb
add
or
adc
lods
stc
mov
sbb
push
hlt
mov
mov
xchg
inc
mov
sbb
adc
add
call
mov
mov
jae
popf
rorl
jne
and
sub
jmp
in
mov
inc
ret
inc
mov
cwtl
js
mov
adc
pop
pop
xchg
lds
jp
jbe
push
lret
pusha
loopne
adc
cltd
ror
xchg
mov
cmp
xchg
push
jmp
mov
add
pop
or
arpl
or
push
mov
sar
dec
sub
push
xor
and
adc
push
cmp
insb
ljmp
fstpl
and
sar
les
sub
push
mov
sub
xchg
and
test
jnp
mov
into
adc
pop
mov
leave
aas
mov
sub
pop
push
sub
call
xchg
adc
aam
cltd
jl
jg
aas
jnp
out
jmp
push
xlat
push
cmp
movb
ljmp
add
cmc
ret
push
dec
lods
shl
jmp
sbb
decl
dec
loopne
fcomps
inc
ficoms
mov
ret
jbe
xor
cmp
fiadds
jl
gs
cmp
popa
xchg
fcoml
fiaddl
test
or
push
test
jmp
adc
jne
out
aad
dec
xchg
pop
fistpl
push
popa
dec
leave
aad
adc
mov
pop
mov
stos
stos
adc
cmpsl
cmpsb
xchg
push
insb
pop
outsl
and
dec
aaa
scas
push
lret
pop
mov
call
dec
and
mov
test
mov
clc
stos
and
adc
add
xor
idiv
push
pushl
mov
int3
js
fistps
jp
cmpsb
pop
orl
mov
adc
and
idiv
ficoml
or
std
or
in
and
rcl
dec
int3
pop
dec
sub
cmp
mov
das
test
mov
andl
jns
mov
test
clc
iret
daa
ret
jmp
loop
lods
inc
and
incl
push
rorb
out
mov
mov
inc
and
in
mov
cmp
loopne
imulb
jg
mov
push
inc
movsb
mov
roll
andl
or
cmpsl
sbb
push
test
pop
inc
cmp
shlb
jns
pop
idiv
lcall
jle
ficoms
adc
cmp
cmp
subl
dec
sti
ret
fcoml
test
test
xchg
outsl
in
push
ficompl
aaa
push
sarl
mov
sbb
das
test
and
repnz
push
test
or
popa
push
jle
imul
cwtl
rcrl
push
adc
sbb
lods
mov
cmpsb
mov
jo
icebp
jl
cwtl
or
mov
pushl
das
jmp
into
dec
dec
pop
fsts
xchg
aad
scas
add
ds
addr16
sbb
popa
lcall
das
xchg
leave
in
inc
pop
fimuls
insb
jmp
cmp
pop
lret
inc
push
add
pop
hlt
hlt
push
call
and
popa
ja
nop
adc
ljmp
popa
add
dec
ficoms
mov
xor
dec
ret
ljmp
push
mov
inc
rolb
jae
test
jg
xor
out
jnp
sub
pusha
fnstsw
leave
inc
les
dec
ds
mov
cmc
daa
mov
jl
xchg
adc
shlb
mov
jle
fcomip
pushl
add
push
aam
ss
dec
inc
in
add
push
jmp
stos
push
fwait
in
ljmp
clc
adc
mull
popa
pop
jp
insb
jne
int
fstps
arpl
enter
incl
inc
xor
dec
jl
das
and
xchg
fst
out
into
lcall
jl
decl
mov
shrb
jmp
mov
adc
dec
push
shrl
xor
outsl
fimull
jmp
adc
xchg
jg
bound
out
insb
mov
outsl
pop
testb
pop
lock
push
fcmovnb
cmpsb
cmpsl
test
inc
cs
sbb
adcb
lcall
jnp
pop
stos
in
dec
mov
push
ja
mov
incl
sbb
stos
es
ljmp
push
mov
dec
mov
push
clc
data16
and
mov
jnp
push
mov
and
xchg
hlt
repnz
test
cwtl
adc
add
enter
jle
outsb
pop
sti
dec
subb
lahf
adc
dec
push
shrb
xchg
sub
sub
decl
pop
and
jge
dec
pop
adcl
ret
arpl
scas
daa
adc
ret
ja
mov
mov
cmpsl
dec
or
ljmp
fstl
in
sub
fucom
push
shl
mov
mov
dec
je
lea
cmpsb
arpl
jge
and
hlt
jae
mov
int3
dec
popa
inc
insl
mov
jp
xchg
cmp
and
scas
call
sub
pop
lods
in
nop
or
stc
push
js
mov
insl
dec
pop
incl
pop
rorb
popf
lods
stc
sarl
idivb
or
jl
shrb
push
imul
mov
ds
cmpsb
fildll
xor
push
int
repz
inc
mov
dec
cwtl
sbb
cli
inc
stos
and
sahf
sahf
mov
daa
add
mov
fstpl
pop
daa
fisttpl
mov
cmp
das
push
sub
push
jmp
stc
cmp
mov
andb
jno
mov
cmp
fcomip
mov
sub
adc
cmp
mov
stc
inc
xchg
adc
inc
adc
pop
icebp
call
xchg
loope
frstor
bound
push
mov
pop
icebp
pop
outsl
std
adc
and
out
mov
into
jp
xchg
clc
incl
aad
out
arpl
pop
stos
in
inc
push
and
pop
lods
cli
cmp
movsb
or
mov
fbld
icebp
or
icebp
mov
das
jnp
mov
lods
pushf
fistl
inc
incl
iret
add
or
nop
or
daa
add
jb
xchg
call
out
push
stos
inc
pop
pop
into
dec
push
xor
xchg
movsl
lods
mov
scas
mov
fisubrl
std
or
enter
push
cld
jns
mov
mov
jmp
mov
aam
stos
ljmp
mov
adc
and
test
orb
sar
ljmp
outsl
cli
mov
test
lcall
daa
xor
dec
cltd
mov
je
mov
xchg
jnp
lea
jnp
ret
int
mov
movsb
int3
dec
movb
adc
sub
jmp
adc
add
mov
popa
in
mov
pushl
in
cmc
cmp
mov
movsb
mov
orb
decl
pop
or
pop
cmp
icebp
and
xchg
lret
xor
mov
popa
cld
lcall
psubusw
cltd
mov
repz
push
out
loop
lock
int
push
ret
cmp
mov
xor
pop
dec
xchg
stos
test
or
sahf
sarb
push
mov
shrb
push
dec
mov
and
cmp
negb
insb
incl
mov
ja
jo
out
sbb
pop
mov
or
leave
das
cmp
std
or
ficompl
cwtl
jle
cmp
jo
jg
xor
cld
shrl
addr16
sarb
ret
cmpsb
xchg
lods
sarb
pushl
inc
mov
and
sbb
adc
or
add
add
loopne
loope
movsl
push
pop
adc
lret
sub
clc
insl
xor
and
lret
lcall
icebp
int
into
stc
loope
mov
adc
xor
inc
sarl
pop
cld
dec
mov
lods
pusha
cmpsb
pushf
movsb
add
adc
lcall
ljmp
addr16
imul
add
xor
pop
mov
pop
jg
decl
xchg
mov
add
jle
jl
clc
outsl
in
push
je
in
ret
jo
push
into
dec
cmp
sub
jne
stos
xchg
imul
adcb
inc
cmp
lcall
imul
pop
push
pop
mov
sub
mov
jne
jecxz
ljmp
pop
lea
xchg
push
in
mov
fiaddl
dec
int
sbb
cmpb
mov
cmp
mov
in
jnp
ja
fwait
jecxz
add
divb
cmp
lret
cmp
lahf
push
mov
daa
in
jl
outsl
cli
push
insl
aas
sahf
hlt
mov
push
xchg
cli
mov
xor
insl
test
cmp
fistl
pop
rcll
cmp
xor
sub
dec
push
sub
stc
call
sub
loop
fs
push
mov
cmp
jg
mov
test
js
inc
rorb
sub
inc
push
shl
movsb
pop
push
or
ret
lret
inc
sti
mov
out
out
sbb
add
add
decl
outsb
lods
jp
js
clc
and
jmp
pop
fsub
push
add
fistps
cmp
mov
leave
adc
fcomip
test
jae
sahf
fbstp
push
aam
fwait
xor
aaa
cld
ret
stos
ss
repnz
outsl
lcall
or
fdivp
call
inc
lret
add
dec
mov
aaa
mov
xor
mov
loope
xchg
outsl
cli
js
mov
test
or
stc
mov
loope
jecxz
int
inc
push
dec
mov
pushl
sub
ja
fldl
bound
decl
inc
sti
das
pop
xor
aaa
fucomi
jns
inc
ror
inc
aas
test
fcomip
outsl
lcall
pushf
sbb
cmpsb
mov
ret
sub
xchg
pop
popa
inc
fisttps
dec
lods
bound
cs
test
incl
or
mov
ja
ffreep
ljmp
cli
ljmp
pop
ret
push
int
iret
inc
outsb
mov
mov
push
xor
lcall
pushf
outsl
in
sahf
in
adc
fisubrl
cli
jbe
xor
imul
jbe
rorb
adc
dec
xor
cmp
out
das
push
das
push
in
subl
pushl
mov
out
ficoms
adc
dec
mov
roll
cmp
jns
pop
jne
mov
cld
jg
mov
push
ret
decl
push
sahf
imul
bound
lds
int3
test
add
out
rorb
cltd
adc
jno
xchg
jnp
pop
mov
push
aam
sarl
scas
js
fildl
sub
dec
mov
push
sbb
jp
movl
pop
pop
mov
pop
cmp
pusha
or
jg
adc
sub
dec
sbb
lock
jg
aaa
ffree
stc
inc
add
or
push
sbb
fdivp
inc
and
std
decl
push
ss
repz
sub
gs
movsb
lods
sub
mov
ljmp
jl
ja
mov
jg
sub
sub
into
cli
rcrb
loopne
inc
mov
and
push
jge
in
call
push
add
jp
pop
call
cmp
aam
cli
adc
push
mov
popf
stos
imul
sbb
fldt
cmpsb
js
inc
out
jmp
jecxz
push
sarl
push
cld
mov
notb
xchg
mov
flds
jge
mov
jmp
outsl
mov
ret
inc
inc
inc
into
dec
aam
out
mov
jmp
xlat
decl
mov
imul
inc
add
ljmp
outsl
dec
xor
pop
mov
mov
push
xor
xor
sahf
and
or
or
insl
dec
lcall
pusha
les
push
fldenv
push
xchg
rcll
mov
sbb
stos
adc
sahf
sbb
lret
icebp
mov
loopne
jle
loope
fisubs
cmp
pop
ficomps
xchg
lret
dec
lret
push
inc
sub
les
popa
shlb
mov
sbb
or
ljmp
push
pop
pop
loope
addr16
fldl
stos
mov
mov
mov
mov
dec
add
adc
add
jno
ljmp
in
das
xchg
mov
sub
jl
icebp
xor
gs
nop
adc
in
ljmp
stc
jbe
incb
mov
fsub
and
ret
lock
xchg
lret
adc
mov
outsl
mov
xlat
xchg
lods
pop
push
xchg
cs
mov
test
nop
shlb
rolb
inc
sub
dec
std
decl
in
jecxz
pushf
cmpsb
xchg
cld
sub
mov
aam
xor
pop
inc
cli
incl
out
dec
insl
pop
xor
cmp
inc
leave
inc
xchg
add
mov
pushl
jo,pn
add
push
int3
mov
mov
loop
imul
enter
shrb
shlb
lea
sar
imul
clc
add
push
outsb
jp
fisttpll
dec
jmp
pop
orl
inc
test
xor
xchg
pop
popa
and
decl
push
lea
mov
xor
in
in
mov
and
lcall
movsl
sub
xor
lock
add
push
ret
inc
popa
pop
je
insb
adc
mov
push
loopne
sarb
les
cmp
xor
lcall
lret
sbb
out
in
je
shll
arpl
fcomip
int
mov
icebp
xor
aaa
lahf
or
pop
pop
das
jg
xchg
lcall
shlb
insb
sarb
pop
fcoml
fcmove
cmpb
std
or
jbe
xor
mov
idivl
out
decl
mov
cmp
ds
push
rcll
push
test
mov
out
jmp
test
sbb
pop
test
cmpsb
rorl
pop
fnstsw
or
cmp
add
adc
and
adc
cmp
sub
pop
loopne
jmp
aad
lods
mov
mov
inc
xor
sahf
out
and
and
mov
xchg
xchg
enter
insb
cmc
jb
loop
pop
xor
xchg
lret
aaa
repz
fcomip
inc
inc
stos
inc
mov
jb
fiaddl
movl
incl
pushf
lds
stos
mov
inc
xchg
leave
inc
jb
xor
repz
and
or
xchg
adc
lcall
mov
imul
inc
mov
cmp
mov
mov
mov
lcall
xchg
icebp
fistl
mov
pop
or
dec
jns
sbb
aad
inc
pop
push
mov
ret
iret
nop
cmpsb
push
cmpsl
xor
out
popf
nop
push
lods
jns
jns
pop
cld
lcall
test
xor
pop
fdivrs
xor
push
mov
xorb
lcall
xchg
adc
addb
sbb
loope
data16
fcompl
xor
mov
xor
sets
push
std
call
pop
jb
jae
push
cli
in
adc
pop
in
push
mov
dec
push
ljmp
shr
xor
jle
push
add
fwait
sbb
sti
addb
in
repz
fcomip
loope
mov
in
and
xchg
cmpsb
adc
fistps
lcall
popf
pop
mov
add
push
aam
fbld
scas
fdivl
das
cmp
lcall
or
sub
outsb
daa
decl
xchg
xchg
adc
jecxz
xchg
addr16
jne
jo
stos
jno
dec
nop
push
push
daa
movsl
push
shrb
dec
xor
mov
push
xchg
push
inc
push
cmpsl
or
nop
out
testb
jbe
sbb
mov
pop
cmc
adc
dec
int
xor
in
xor
dec
xchg
add
mov
icebp
jg
arpl
lret
ja
xchg
out
fcomip
dec
cltd
cmp
add
inc
push
mov
imul
gs
xor
cs
insb
mov
adc
xchg
jne
insb
inc
insb
insb
outsl
arpl
mov
test
add
adc
adc
enter
nop
inc
add
add
mov
jmp
push
inc
add
mov
neg
inc
add
dec
mov
not
inc
push
mov
incl
fcmove
add
not
add
mov
pushl
inc
dec
pop
not
pop
add
neg
jg
fildll
pop
add
xor
leave
jne
mov
nop
mov
mov
jmp
cmp
aam
mov
or
je
jg
das
dec
enter
or
nop
xor
adc
jbe
mov
ljmp
clc
inc
hlt
mov
inc
shrb
imul
dec
adc
dec
call
test
inc
fadds
into
dec
add
inc
push
mov
ficompl
sbb
mov
cs
sub
sarb
mov
dec
add
call
add
lea
push
pushl
lea
push
call
sub
nop
call
push
std
testl
adc
push
add
rolb
sti
idivl
mov
insb
in
push
jl
call
add
or
dec
mov
inc
add
push
add
fucomi
test
cmp
fdivp
push
call
pop
pop
fcomp
add
dec
add
pop
movsl
inc
dec
fmuls
add
dec
inc
sbb
lcall
flds
repz
inc
dec
inc
and
add
dec
dec
divl
test
mov
ret
dec
inc
sub
jmp
lods
inc
and
into
dec
cmp
push
push
push
ss
xlat
cmp
in
int3
mov
xor
cmpsb
loopne
mov
repz
inc
dec
xchg
aam
add
inc
xor
addb
lock
fnstsw
xchg
dec
mov
dec
adc
dec
inc
push
inc
repz
pushf
add
push
imul
fcomps
faddp
push
clc
hlt
mov
jle
ljmp
dec
push
push
push
push
call
testl
test
in
dec
jo
in
pop
sub
mov
push
int3
mov
fcmovnbe
fidivs
inc
ret
call
add
inc
push
push
icebp
outsb
mov
rorl
repnz
lock
fdivrl
dec
icebp
inc
pop
add
dec
pop
ret
mov
xlat
inc
mov
dec
mov
push
cmp
lret
jne
pop
fucomip
lcall
dec
push
aaa
adc
mov
pop
cs
dec
hlt
into
icebp
inc
fwait
mov
xchg
fcmove
push
lret
dec
inc
fimull
imul
lcall
cmp
mov
add
inc
xchg
jp
inc
push
fs
jo
shrl
or
cwtl
mov
adc
cmp
dec
movsb
add
in
mov
or
mov
push
push
arpl
dec
inc
adc
roll
dec
inc
push
jle
lods
push
ds
fsubs
pop
lock
adc
mul
loop
cmpsb
jle
add
psubb
add
push
mov
stos
fcmovnbe
pop
push
into
inc
pusha
lahf
adc
dec
inc
arpl
push
cwtl
fadd
add
out
lds
add
in
dec
roll
ja
adc
and
mov
roll
cmp
dec
popf
cmpsb
fiaddl
addl
jl
inc
aas
dec
jae
cmovbe
cmp
inc
lods
add
fsubr
dec
movsl
push
test
pop
ficoms
jl
cwtl
nop
inc
stc
fistpl
push
dec
rorb
adc
dec
fs
roll
inc
push
sarb
sbb
push
jle
inc
xor
mov
sub
sbb
inc
inc
repnz
xor
dec
ret
sub
sahf
shll
test
and
xchg
aad
push
pusha
je
lock
nop
iret
mov
lock
sti
mov
fcmovnbe
loopne
shlb
adc
sbb
daa
jo
mov
dec
inc
push
jbe
cmp
jno
push
ss
push
ja
jb
dec
push
rol
sub
pop
in
ret
push
shlb
js
sub
roll
mov
dec
cmp
lea
outsl
inc
jb
xchg
mov
inc
call
mov
add
add
mov
sahf
xor
addr16
jp
mov
inc
dec
xor
jp
mov
add
ret
mov
xlat
mov
inc
push
je
loope
dec
rorb
xorb
xlat
scas
fidivs
inc
je
xchg
shl
rcrl
dec
dec
push
pop
sub
nop
mov
inc
and
adc
jbe
aam
cmp
enter
jmp
repz
gs
add
push
xor
insb
test
cmp
or
cli
decl
cmp
call
inc
rorb
call
mov
lea
push
inc
cmp
pushf
sub
scas
pushf
dec
dec
ret
cmc
inc
enter
popf
popa
icebp
mov
roll
mull
sub
pop
sbb
fiaddl
cmp
sahf
rcr
call
and
add
and
xor
lods
ds
xchg
fidivrl
inc
push
fiadds
inc
adc
cli
push
fwait
sub
jb
mov
js
adc
jo
ja
std
jp
les
xor
orl
decl
jae
and
push
dec
mov
pusha
add
data16
and
mov
sarl
jp
dec
xor
jg
push
cmpsb
fcmovb
push
jb
shr
enter
sub
lods
push
lods
repz
rcl
push
sub
insl
cmp
fmul
or
mov
inc
test
cmpb
push
hlt
push
push
push
loopne,pn
std
rol
add
shrb
mov
rorb
mov
push
jo
fcoml
stc
dec
inc
add
das
data16
mov
ret
push
aam
ret
out
test
loop
mov
call
push
loopne
xchg
adcl
xchg
int3
inc
jge
push
int3
aam
and
fdivr
jle
ret
push
sbb
arpl
pusha
inc
sub
xor
inc
push
push
hlt
push
pop
loope
test
jb
mov
or
imul
inc
mov
dec
or
hlt
pop
push
sarb
cli
cmp
dec
shrl
jecxz
dec
faddl
or
add
push
int3
push
add
call
jo
and
xor
sbb
lods
cwtl
push
stos
ds
fadds
cmp
add
pop
pop
cmp
testl
add
fildll
inc
out
out
adc
xlat
adc
addr16
push
mov
jbe
lods
call
cmp
or
push
push
je
push
inc
loop
inc
lds
cld
xor
dec
xchg
jp
inc
push
cmpsb
loop
cmpsl
cmc
pop
fs
fsubr
lcall
mov
repnz
dec
mov
jecxz
inc
adc
bnd
sub
xchg
xchg
jo
popf
testb
mov
inc
inc
fsts
cwtl
mov
pusha
fisubrl
in
dec
mov
add
in
inc
stos
cld
jecxz
clc
add
loop
inc
inc
in
push
push
push
push
xor
test
adc
aaa
mov
inc
addl
call
adc
hlt
sub
jecxz
fildll
andl
cmp
mov
adc
sbb
pop
les
xor
add
sub
xchg
dec
subl
inc
mov
sti
mov
fwait
sub
push
push
mov
arpl
outsl
call
mov
jbe
inc
insb
mov
dec
pushf
fidivl
fdivr
sub
jmp
cmp
sbb
fs
aaa
loop
shl
addr16
push
sbb
in
lods
inc
inc
mov
rcl
test
aam
into
pop
jg
je
inc
xor
xor
repz
js
inc
push
dec
lcall
sahf
addb
sbb
sbb
push
movsl
mov
sti
in
lock
filds
cld
jg
loope
xor
divb
inc
xlat
ds
test
jnp
in
push
mov
mov
push
dec
jns
add
jge
xchg
ret
out
inc
fcoms
cmpsl
cmp
into
in
add
test
mov
rorb
xor
adc
dec
pop
mov
ret
es
imul
dec
or
pop
add
je
xor
out
icebp
fisubs
scas
xlat
mov
scas
mov
inc
shll
sub
jb
push
call
xchg
push
aas
cli
test
jb
call
jbe
ss
popa
dec
imul
xor
shlb
sbb
ljmp
loopne
call
subl
in
data16
push
ret
dec
add
and
ror
inc
es
add
ljmp
sub
and
ss
cmp
fs
fstpt
cmp
clc
and
sbb
mov
sub
lcall
jb
inc
mov
inc
hlt
sti
mov
inc
mov
in
lock
jb
or
push
cmpsl
in
dec
dec
je
in
cwtl
inc
test
int3
loop
inc
sti
xchg
or
pusha
and
push
lahf
lock
shrb
sub
call
adc
jo
add
pop
xlat
imul
mulb
ljmp
xlat
cwtl
add
ret
ret
push
cmp
loop
leave
rolb
inc
and
pop
daa
or
enter
dec
cmpsl
mov
test
add
dec
fld
stos
cmp
cmp
das
jno
dec
das
jbe
std
dec
or
aam
push
fs
mov
lahf
lret
test
fadds
call
jle
cmp
cs
orl
sub
inc
add
js
popa
fs
sti
push
jo
adc
lret
jge
or
and
ror
cmpsl
scas
loop
sti
inc
dec
cltd
cmp
mov
incb
addl
leave
in
fs
inc
scas
cmpsb
mov
xor
insl
rorl
mov
xchg
fbld
scas
in
cwtl
or
mov
popa
jecxz
jno
pusha
lcall
and
inc
outsl
dec
push
insb
outsl
outsl
xor
inc
ss
push
mov
or
pushf
icebp
je
push
mov
fmuls
inc
dec
push
lcall
sub
mov
clc
or
xor
jnp
jmp
dec
and
add
mov
fsubl
inc
dec
outsl
mov
pop
in
fsubr
dec
inc
fstp
dec
xchg
pop
shlb
fadds
stos
add
or
push
and
lock
mov
pushf
rorl
lock
jo
xchg
lock
add
xlat
shrb
aaa
testb
mov
mov
inc
ljmp
stc
jb
testl
fimuls
push
mulb
sar
jp
add
loope
xlat
add
shl
inc
pusha
add
mov
testl
cmp
or
int3
xlat
mov
xor
les
cwtl
rorb
and
dec
mov
mov
arpl
xor
or
mov
clc
xchg
popf
fmuls
jmp
ds
fistpll
inc
jmp
sub
add
cmpsb
xchg
dec
xorb
ficoml
mov
fcmovbe
dec
or
inc
jmp
inc
ss
not
dec
pushf
ficomps
adc
mov
repnz
fdivs
cmp
push
sbb
push
je
stos
sarb
pop
inc
icebp
mov
lcall
jno
jbe
adcb
push
repnz
push
inc
xchg
push
test
hlt
loop
xchg
push
fnstcw
xchg
mov
scas
pop
inc
sub
into
add
inc
fs
lret
popa
fmul
push
insb
bound
mov
and
adc
les
cld
dec
scas
ret
mov
push
cld
in
sbb
loopne
fs
mov
add
shrl
jb
pusha
add
loopne
or
push
add
adcb
imul
test
mov
cmpsb
or
int3
enter
cmp
mov
xorb
jo
mov
dec
add
or
jle
dec
iret
dec
cmp
stc
inc
push
and
out
sahf
inc
push
xor
xchg
fmuls
sbb
cmova
mov
pop
cmp
into
dec
adc
jb
stc
mov
add
mov
dec
inc
sub
cmp
xchg
rol
mov
std
xlat
addl
cld
cmp
jmp
inc
aaa
adc
aam
cmpsb
stc
orl
rcll
mov
push
insb
jo
fstl
lret
pop
in
test
mov
push
adc
je
mov
inc
ss
inc
add
push
rcll
and
jae
fcomps
dec
inc
in
pop
sti
dec
inc
push
push
repz
add
xor
jb
push
push
or
ffreep
xor
pop
adc
clc
ret
or
pop
inc
push
out
inc
test
call
imull
mov
dec
sub
sub
bound
inc
dec
sbb
jne
data16
stos
pop
in
pushf
aam
ret
dec
xor
push
mov
shrl
ss
push
loopne
sets
sbb
rep
inc
sbb
sbbb
jno
mov
loop
push
push
pop
icebp
popa
rcrl
loop
lods
nop
or
das
sub
jnp
push
mov
in
push
inc
mov
dec
jo
hlt
cwtl
sarb
sti
orl
inc
dec
mov
cs
fcomp
lock
fistpll
push
adc
xchg
push
sbb
rorb
movsl
pop
jne
aaa
ljmp
sub
dec
xorl
call
xchg
or
adc
fdiv
fildl
dec
es
cmpsb
pop
fwait
mov
inc
add
xor
jmp
loop
jmp
enter
dec
pop
lods
clc
add
inc
lcall
outsl
mov
imul
dec
cs
push
loop
cs
mov
adc
pop
xorb
mov
lea
pop
or
call
sbb
inc
ret
mov
mov
fmuls
xor
inc
pushf
pop
adc
mov
pusha
fldcw
jbe
xlat
xchg
test
xadd
jle
pushw
push
inc
xchg
jo
jp
icebp
add
faddp
shrl
outsl
adc
int3
inc
push
call
movsl
xchg
push
pop
fldl2e
adc
clc
sbb
insb
pop
call
popa
pop
notb
push
cmp
scas
cmp
in
test
lret
add
test
sub
add
inc
pop
cwtl
cld
lock
dec
jp
fcomip
rcrb
scas
xchg
mov
cmp
xlat
sub
sub
inc
dec
in
ss
inc
mov
add
push
adc
xchg
lcall
mov
lock
push
or
loopne
or
xor
or
mov
inc
add
adc
xor
shr
lods
mov
push
lock
roll
mov
dec
push
cmp
loope
loopne
dec
mov
ret
sti
adc
xchg
mov
mov
andb
cmp
and
sti
add
inc
dec
into
xchg
adc
shl
lret
pushf
lods
test
call
arpl
push
dec
xchg
fstps
lods
ret
fsubr
fsub
je
ss
clc
call
xor
out
mov
pop
push
fistpll
sarb
adc
dec
pusha
movsb
push
addr16
rorl
repnz
fldenv
loopne
sbb
call
inc
fadd
cmp
pop
mov
call
fidivrs
ret
in
mov
call
adc
xchg
dec
je
push
or
mov
sahf
dec
into
inc
xlat
subl
fcompl
pop
cmc
mov
dec
aaa
mov
sub
dec
idiv
jmp
rorb
cwtl
inc
pusha
jmp
clc
mov
lock
jo
loopne
mov
insl
in
cmp
sub
dec
or
inc
test
shlb
add
or
push
mov
cwtl
je
or
data16
jmp
cld
jbe
add
mov
pop
pop
xor
fdivr
mov
or
jp
add
in
mov
fidivl
ficoml
mov
push
rorl
push
jne
hlt
fld
pop
repnz
loopne
rolb
jns
ja
aam
orps
cmc
movsl
dec
ljmp
inc
in
or
inc
popf
ss
ss
stc
insl
lea
xchg
hlt
clc
xchg
faddl
cli
mov
enter
mov
bound
add
ret
dec
mov
inc
mov
pop
jecxz
mov
inc
push
xor
ret
push
jns
pop
aam
fisubrl
xor
push
adc
mov
outsb
pushf
out
sbb
fnstcw
sti
outsl
mov
push
adc
popf
xlat
jp
and
xchg
lahf
sbbb
aas
out
hlt
dec
inc
insb
jo
lret
in
into
scas
insb
xor
adcb
inc
fisubrl
push
movl
pop
mov
mov
sbb
mov
repnz
jo
mov
shlb
lret
loope
mov
push
jl
push
dec
push
daa
mov
inc
or
or
call
arpl
jae
test
fnstenv
inc
iret
jo
cmp
repnz
call
dec
int3
push
pop
mov
insl
cmp
imul
out
fmuls
dec
ret
icebp
mov
insb
ss
add
inc
add
ret
jbe
push
shlb
jb
mov
lcall
and
fs
adc
jg
fsubr
or
inc
loopne
movsl
out
loop
adcb
inc
pop
cmp
int3
push
lea
rep
push
fstl
cmp
popa
jecxz
xor
clc
push
loop
outsl
sbb
dec
fistpll
jne
or
lods
or
lcall
jo
xor
and
inc
mov
ds
xchg
pop
repnz
inc
lock
add
lock
outsl
push
inc
xor
xor
cs
sub
lock
xor
aam
sub
mov
insl
push
repnz
fcoms
dec
loopne
lret
sub
inc
or
pushf
push
xor
or
pop
cmc
mov
dec
inc
enter
pop
leave
xchg
cs
mov
dec
loopne
cmp
inc
cs
data16
setp
hlt
or
cltd
lea
in
shl
loop
dec
adc
or
int3
ljmp
mov
mov
xor
inc
or
mov
pop
jle
popa
adc
inc
pop
orb
dec
pop
or
dec
pusha
mov
lock
xlat
callw
inc
xor
call
lods
add
mov
push
or
jl
mov
or
ljmp
mov
add
addr16
fimuls
push
into
add
mov
sbb
push
cli
enter
enter
mov
fwait
orb
pop
mov
jne
pop
ds
adc
mov
sub
inc
cmp
fmul
test
inc
dec
dec
add
or
xchg
rorb
add
mov
dec
inc
dec
cmp
push
sbb
xchg
push
inc
fwait
sbb
push
sbb
inc
inc
cmpsl
jp
push
push
inc
pop
pop
bound
add
mov
cmc
dec
inc
out
xor
jno
xor
test
add
sbb
in
mov
pusha
call
inc
jmp
add
mov
inc
fs
inc
ret
fs
push
lret
outsl
inc
dec
dec
outsl
pop
adc
fsubr
pushf
inc
or
in
addl
jno
decb
jp
push
xchg
adc
jo
fs
push
loop
lcall
aaa
loopne
repnz
ficoms
add
xchg
xchg
inc
add
inc
adc
ret
inc
int
xor
call
dec
or
mov
dec
loopne
call
xor
jo
lret
cmp
rcrb
mov
lcall
mov
push
cmp
in
mov
mov
inc
lds
mov
inc
mov
out
dec
incb
lret
push
cmpsb
sti
dec
adc
call
add
mov
js
cld
test
mov
mov
psubsb
jo
pop
mov
add
pop
adc
in
iret
js
pop
and
mov
adc
sbb
xor
inc
cmp
dec
loope
push
push
stos
xorb
shl
call
fidivrs
mov
mov
xor
shr
mov
out
fidivl
lock
int
mov
adc
shlb
pusha
inc
cmp
push
aad
mov
jle
dec
pushf
loop
add
jle
add
into
aad
incl
shll
jo
jbe
or
and
push
jp
mov
xlat
shlb
pop
inc
enter
pop
mov
and
aad
fildl
pushf
fwait
lret
xor
mov
aad
dec
fistpll
xorb
ss
dec
inc
stos
mov
push
ret
and
lds
fcompl
fadd
outsl
popa
push
jb
std
xor
lock
pusha
mov
dec
shl
mov
pop
pushf
dec
add
sbb
lock
shlb
jae
xor
in
fldt
add
mov
mov
inc
inc
daa
lds
and
xchg
pop
inc
lds
dec
xchg
sbb
mov
dec
cmp
mov
insb
adcl
sbb
jmp
imul
int3
or
movsl
sarb
cmp
pusha
decl
shr
aam
adc
into
fucom
mov
fnstcw
aaa
test
and
popf
sarb
fcom
dec
xor
pop
mov
jp
dec
sub
push
or
dec
je
lods
or
shlb
fisubs
aam
inc
neg
cmpsb
or
addr16
add
in
add
test
dec
xlat
js
not
ret
scas
sub
add
cld
test
test
outsb
in
and
add
jo
mov
sbb
aam
cmp
pop
ror
jb
xor
sbb
ret
dec
xchg
pusha
or
int
mov
add
xchg
cwtl
stc
dec
stos
hlt
push
push
fs
fiadds
push
pop
lret
dec
sbb
jbe
call
movsl
mov
add
aaa
icebp
add
fiaddl
scas
ret
pop
loopne
ret
inc
mov
ljmp
shrb
test
jb
mov
push
daa
jmp
add
mov
sbbl
dec
sbb
and
lahf
dec
ror
pop
mov
and
gs
mov
nop
ss
push
lock
mov
pop
inc
or
inc
dec
mov
cmp
sub
std
rclb
push
mov
xor
push
lds
scas
xchg
mov
or
lods
fcmovu
in
pop
ljmp
enter
xchg
sbb
enter
push
fbld
pop
loope
scas
jbe
stos
jae
mov
fimull
pushf
mov
in
or
cmpsb
sbb
inc
ret
xlat
data16
mov
mov
xor
sahf
gs
ds
adc
or
mov
daa
push
ds
gs
jnp
lret
mov
jne
sbb
fidivl
cmp
stc
dec
je
dec
or
sbb
dec
es
inc
push
cltd
test
xchg
push
inc
movsb
sub
dec
fs
cwtl
pop
or
and
lret
push
jo
mov
push
je
dec
inc
rorl
bound
mov
enter
or
hlt
loopne
sarb
cli
mov
jo
push
stc
cmp
test
push
inc
and
or
fdivr
mov
cmpsb
xchg
into
call
add
push
mov
inc
dec
or
daa
or
dec
and
adc
mov
dec
jp,pn
xchg
mov
inc
push
ficompl
roll
xorb
movsb
add
sahf
cmc
js
adc
xchg
fmull
or
iret
inc
jns
divb
and
fnstcw
push
lcall
clc
jp
pop
rep
ficomps
adc
inc
scas
stos
das
loope
shlb
int3
mov
jle
sahf
xchg
jmp
shlb
hlt
enter
add
cld
push
and
movsb
into
jmp
xchg
or
dec
inc
call
add
pop
xor
fsubrs
lods
inc
imul
cli
ljmp
clc
test
push
pop
in
nop
test
cmp
movsl
sarl
lods
inc
lcall
mov
sub
addr16
lock
cmp
shlb
pop
pop
pop
inc
fisttps
icebp
ljmp
fsubr
out
fdivrs
mov
and
pop
and
nop
ret
ficoms
iret
call
out
or
repz
add
push
hlt
push
outsb
les
ret
xor
inc
jmp
fwait
stos
dec
jbe
stos
or
inc
pop
test
ds
aam
push
inc
push
shrl
cli
inc
inc
call
fwait
cmp
cmc
sbb
add
loopne
cli
in
cmpsb
clc
or
jle
xor
jo
loop
mov
lret
pop
loopne
icebp
adc
fmuls
xor
cmp
inc
dec
mov
into
xchg
push
inc
bound
xor
dec
fucomp
cld
or
in
push
loopne
roll
lret
xchg
stos
inc
mov
add
loope
decl
test
inc
add
out
test
pop
jbe
mov
pop
andb
add
mov
loope
lcall
xor
loope
sub
dec
jns
sub
push
and
add
mov
aam
jnp
pop
dec
push
pop
ret
sbb
iret
or
popa
mov
or
mov
dec
es
or
jb
in
imul
pop
push
call
or
dec
outsb
in
lds
push
ret
imul
rorb
jnp
jbe
inc
insb
in
jae
into
add
push
push
mov
lahf
out
sbb
in
cmp
adc
sti
mov
mov
shll
ds
xchg
shll
mov
mov
int
mov
inc
xchg
sub
mov
ror
lods
enter
mov
xor
js
cltd
test
inc
adcl
aas
stc
push
cld
jecxz
adc
in
out
mov
mov
push
sbb
or
repnz
repnz
push
mov
dec
in
mov
sti
in
lret
sbb
das
add
std
movsb
inc
lcall
js
and
xorb
fnstsw
iret
inc
subb
cli
sub
int3
movsl
push
mov
loope
pushl
push
fistpl
loopne
mov
out
clc
out
mov
or
dec
xlat
mov
jb
xchg
inc
testb
movsl
jo
inc
fscale
jnp
cmp
push
imulb
outsb
jg
pop
mov
inc
bswap
push
mov
cs
negb
jo
sbb
push
call
stos
decb
xchg
add
mov
mov
mov
cmp
popf
cmc
dec
cmp
into
ss
mov
je
jo
or
outsb
push
fwait
ljmp
mov
mov
pop
add
pop
into
psrld
addb
pop
pop
hlt
sub
in
mov
aad
cmp
add
push
cmpsl
testl
adc
scas
rcrb
xor
pop
pop
and
ss
stc
ret
inc
mov
mov
jno
add
xor
or
cmpsb
es
in
cmp
data16
mov
cli
fidivrs
xorb
loopne
ret
xchg
and
inc
add
add
mov
sub
push
mov
popa
mov
sub
rolb
ljmp
fucomip
jp
and
jge
xchg
sbb
test
imul
push
imul
add
test
pop
mov
mov
shll
mov
fdecstp
jbe
xchg
cmp
xchg
adcl
cmp
fistl
pop
mov
sbb
and
jmp
shl
stos
and
shrb
cld
push
out
mov
jo
mov
mov
jae
icebp
pop
in
cmp
repnz
fwait
nop
jmp
int3
xchg
xor
lds
jp
mov
mov
pop
ret
shll
cmp
aam
test
push
aam
int
ficomps
cs
loope
jo
sbb
mov
mov
push
int3
jns
fs
mov
ret
pusha
call
pop
out
push
adc
repz
mov
mov
and
adcb
jb
popa
ds
imul
sbb
sub
or
dec
cs
ds
outsb
jo
fistpl
lods
sub
rcll
dec
dec
js
lods
mov
jo
mov
xchg
subb
sub
sbb
shrl
std
in
mov
add
mov
and
shl
and
xchg
mov
cmp
mov
jno
or
jb
cmpsl
scas
fiaddl
repnz
jg
mov
push
xchg
mov
subb
add
and
mov
sbb
push
icebp
fdivrs
pop
je
xchg
push
adcb
dec
mov
pusha
movsb
xchg
or
adc
pusha
push
pop
cmp
push
xchg
leave
aam
out
es
jg
lock
push
std
ja
xabort
dec
sub
dec
int
push
insl
shll
in
jbe
sub
insl
dec
aaa
xor
mov
shrb
lock
rcll
int
sahf
cmp
movsb
dec
mov
jbe
and
push
fwait
cwtl
jb
repnz
sbb
mov
dec
pop
in
sbb
sbb
mov
pop
and
aad
jns
push
shlb
mov
mov
ret
adc
stos
or
mov
jl
inc
sbb
arpl
or
insl
mov
push
xchg
test
out
mov
push
pop
push
pop
or
scas
pop
mov
xchg
mov
or
inc
push
arpl
jno
aad
sbb
bound
cmc
nop
lea
adc
imulb
jns
dec
dec
jo
and
cs
cmpsl
push
sarb
cmp
jle
test
push
mov
and
adc
mov
lahf
outsb
andb
mov
jge
call
enter
aad
pop
aad
adc
test
mov
aas
mov
rcrb
and
mov
dec
pop
mov
sbb
icebp
push
loope
push
addr16
pop
pop
and
fstp
cmc
out
mov
test
jle
push
and
sub
lds
cmp
mov
push
mov
int
repz
or
cli
leave
jno
xchg
aam
mov
xor
shr
cwtl
adc
mov
pop
xchg
mov
cmp
xlat
pop
insb
dec
sub
lock
sbb
push
sbb
rcll
call
cs
dec
mov
aas
jle
and
ret
std
mov
jb
cmp
cmc
cmp
sti
orl
iret
insb
push
jbe
scas
stos
insb
pop
add
jl
out
jbe
pop
mov
mov
inc
pop
fisttpll
push
ss
fiaddl
cli
xchg
push
clc
out
mov
movsb
cltd
sarb
dec
popa
repz
in
push
cmp
sub
mov
add
jb
je
test
mov
push
lcall
ja
rorl
lret
mov
jmp
mov
push
fmull
pushf
mov
js
test
sub
pop
outsb
sbb
fs
aad
dec
mov
lods
rcrl
rcl
jmp
test
or
fiadds
repz
xor
fs
popa
inc
add
mov
loopne
push
leave
loop
aaa
loope
sbb
mov
xchg
stc
inc
sub
pop
clc
or
sbb
stos
fs
out
stos
mov
add
adc
jg
shr
fcomip
sub
and
mov
sbb
dec
sbb
push
sbb
mov
push
sbb
sub
fwait
mov
dec
shrb
je
push
dec
xchg
jae
sbb
add
xchg
sbb
dec
pop
neg
sbb
test
call
es
sbb
pushf
call
pop
add
fwait
rclb
repz
jbe
sti
dec
inc
inc
mov
mov
or
mov
push
lea
cli
addr16
pop
jno
pop
mov
bound
sub
jl
adc
pop
sbb
shrl
into
add
jnp
popa
das
iret
fwait
insl
or
mov
mov
pop
stc
and
pop
test
lods
sub
xchg
ret
ffree
add
mov
lods
xchg
and
stos
adcl
dec
push
xchg
pusha
fiadds
lea
add
outsl
rcrb
push
das
push
inc
xlat
cmpsb
or
daa
mov
ljmp
and
jle
push
popf
ljmp
daa
scas
mov
shll
add
repz
mov
adc
in
or
pop
shll
add
xchg
lahf
aaa
cmp
jnp
mov
inc
insb
and
mov
cmpsl
stc
outsb
lea
aam
fbld
mov
mov
scas
push
pusha
cld
call
ds
pop
and
cmp
or
data16
loopne
mov
jno
scas
sbb
push
ja
pop
push
adc
add
xor
dec
sbb
pop
adc
lea
jmp
outsb
jns
push
xchg
or
lret
adc
push
sahf
mov
sub
mov
das
mov
inc
rolb
insb
imul
xchg
jo
jmp
cltd
pusha
mov
jb
ss
fs
mov
push
subb
adc
out
push
fisubrs
mov
jg
clc
es
hlt
mov
in
aaa
stos
cli
add
cmp
or
ds
fidivrl
cmpsl
into
push
ljmp
pop
insl
pop
or
mov
inc
mov
inc
adc
mov
insl
ja
lahf
in
mov
jl
or
test
mov
into
xlat
into
mov
mov
jb
and
xor
clc
fsubrs
or
sbb
in
add
jp
sbb
adc
sbb
addl
push
cmp
loop
cmp
sub
aam
jnp
add
cmp
mov
call
sub
push
pop
jno
roll
push
add
test
mov
jo
mov
cmp
fnstcw
ret
lods
roll
pop
mov
xor
mov
mov
xchg
mov
repnz
sbb
sbb
js
imul
push
ds
cmpb
push
dec
faddl
jb
mov
aaa
or
sub
dec
std
cmp
stos
jge
mov
test
ret
xor
pop
cs
dec
mov
std
push
mov
cld
mov
pop
cmp
cmp
ret
push
pop
mov
fiadds
jecxz
loopne
nop
pop
stos
xor
js
mov
mov
cmp
mov
faddp
int3
lret
xorb
decb
pop
pop
pop
jnp
add
mov
or
ljmp
jmp
adc
inc
cmpsl
std
loopne
mov
mov
ds
test
add
mov
hlt
xor
add
cmp
fwait
or
or
in
cmp
scas
inc
add
or
insl
jae
mov
sahf
jno
pop
popa
out
add
push
mov
xchg
loopne
push
xchg
add
sbb
pinsrw
insl
das
mov
out
dec
cmpsb
arpl
hlt
mov
mov
call
jbe
sub
mov
jo
bnd
and
xor
repnz
nop
imul
pop
mov
fdivrs
nop
push
push
pop
mov
imul
loopne
add
pop
lock
jno
push
popa
push
icebp
or
aaa
test
jecxz
fstpl
or
in
sub
pop
mov
loop
sub
mov
outsb
pop
cmc
xchg
adc
inc
xor
ficomps
sbb
aad
cmpsl
sbbl
add
mov
test
les
rorb
daa
cmp
or
stos
pop
jo
popl
push
push
jl
mov
outsl
sub
pop
xor
hlt
rcll
push
addb
or
jbe
jmp
mov
scas
cmp
out
cmp
je
sbb
adc
lods
rolb
xchg
out
pop
pushf
and
or
scas
das
lcall
cld
push
push
stos
inc
loopne
es
pop
mov
sbb
sbb
ret
cmp
lock
call
inc
pop
stos
push
mov
xor
inc
mov
subl
outsb
clc
dec
jnp
adc
lock
insl
xchg
dec
js
adc
push
adc
cmp
sub
add
cli
xchg
xchg
mov
xchg
push
mov
test
or
jl
or
call
fwait
and
stc
add
mov
int
pop
sub
and
add
mov
xor
pop
ret
push
lods
imul
sbb
pop
daa
jo
mov
movl
ret
or
push
mov
outsl
lret
push
xchg
jns
lods
pusha
rolb
push
xor
hlt
sub
add
dec
jle
dec
push
loopne
add
cmc
jecxz
push
add
ljmp
cwtl
mov
ret
add
xchg
lods
dec
mov
jecxz
cmp
xchg
xor
cmp
pop
pop
push
jo
fcom
mov
pop
ljmp
dec
add
or
pop
inc
xchg
push
in
pop
mov
loopne
push
test
lret
sub
inc
adc
outsb
je
or
data16
sbbb
add
lods
sbb
jmp
ficomps
sbb
pop
loop
in
nop
inc
push
movsb
cwtl
push
sub
add
nop
mov
jl
leave
clc
or
jp
jnp
clc
or
sub
mov
loopne
dec
push
jb
mov
movsb
fucom
add
loop
push
loop
fsubl
mov
add
sbb
adc
cmp
notl
dec
pop
in
ds
adc
loope
sahf
mov
pop
mov
sub
lds
jg
in
cwtl
arpl
fcoms
adc
push
xor
test
push
adc
aad
xchg
mov
mov
xor
fcmovnb
and
sbb
mov
jl
pop
popf
inc
adc
sub
xchg
push
ljmp
xor
ljmp
fisttpl
dec
mov
sbb
in
call
pop
jp
add
out
clc
sbb
mov
je
outsl
inc
xchg
js
xor
mov
mov
pop
inc
shl
jo
xor
pop
jge
cmpb
addr16
pop
sbb
cli
pop
dec
add
loop
sbb
xor
and
enter
outsl
push
insb
outsl
scas
fisubs
stos
test
cmpl
icebp
ss
out
or
out
ficoml
adc
add
push
pop
or
and
outsb
mov
or
insb
sbbb
rcr
push
stos
mov
cmp
cmpsb
sbb
adc
jo
bt
push
loope
mov
dec
enter
mov
dec
hlt
xchg
xlat
lret
push
cmp
inc
lea
mov
sub
inc
nop
les
pop
es
mov
push
stos
test
orl
mov
mov
inc
into
adc
ret
jns
and
clc
loopne
out
push
xor
jmp
pop
adcb
call
cmpsl
in
mov
insb
pusha
mov
addr16
or
mov
outsb
sbb
jmp
xchg
xor
mov
xor
dec
out
clc
das
adc
repnz
mov
or
push
cmp
lods
mov
xchg
cmpsb
jbe
push
push
jp
cmp
sarl
jmp
dec
cmpsb
jmp
jb
mov
push
inc
lret
arpl
xor
rclb
xchg
loop
cmpsl
mov
push
jbe
add
jle
dec
cmc
add
cli
icebp
jg
cs
xor
xchg
and
pop
and
push
push
xchg
test
outsl
mov
and
dec
into
shlb
cmpsb
xor
movsl
push
ljmp
lret
sbb
sti
mov
jl
cmp
push
stos
jbe
add
or
inc
push
xchg
shlb
xchg
mov
jb
daa
stc
push
jge
xchg
cmp
mov
outsb
jno
xor
push
popa
addr16
les
out
pop
cmp
lock
sbb
inc
gs
inc
out
mov
std
dec
and
cwtl
jl
dec
adc
dec
xor
lods
es
out
nop
aam
push
leave
jno
xor
fcoml
pop
les
inc
cs
testb
pop
jp
lods
mov
ret
rorl
faddl
fsubl
pop
sub
mov
mov
test
das
mov
rolb
pop
mov
and
and
test
jb
inc
mov
add
in
sub
inc
inc
cltd
pop
fcmovbe
je
adc
outsb
ss
andl
xorl
mov
mov
sub
std
xchg
out
inc
in
and
jle
sub
cmpsl
pushf
aam
aaa
push
cld
inc
jp,pt
das
lock
outsl
or
out
push
pop
aas
push
add
lock
cs
add
mull
and
add
mov
lcall
repnz
sub
or
jecxz
xchg
mov
hlt
and
cmp
repnz
loopne
aas
lret
jmp
mov
jp
or
jecxz
mov
shll
and
in
movsl
flds
rcrb
call
mov
sahf
idivl
push
cld
out
cmp
es
out
lret
and
lcall
inc
hlt
pop
mov
jb
scas
aas
aaa
ret
sub
jge
movb
mov
push
jmp
mov
add
mov
das
clc
inc
fcompl
mov
stos
inc
push
sbb
std
nop
cmpsb
outsl
mov
das
fidivl
popa
jg
push
adc
xchg
js
hlt
scas
lcall
insl
lods
in
aas
scas
data16
pop
sub
movl
or
inc
sbb
inc
loop
sub
add
jg
jno
fidivs
insb
pop
cld
fcmovb
addl
push
add
test
jle
or
test
mov
push
xor
pop
add
pusha
loope
sbb
scas
sbb
int3
dec
dec
cmp
jg
jl
add
cmp
sub
push
adc
outsl
jg
insb
daa
out
dec
mov
cld
cwtl
push
data16
cmp
push
jp
mov
fnstcw
mov
addr16
xor
outsb
mov
cmp
ljmp
ss
dec
test
add
mov
xchg
mov
lds
movb
adc
sub
outsl
das
pop
icebp
mov
js
and
movsb
mov
xor
out
ds
mov
xchg
xlat
popf
dec
fbstp
cli
pop
mov
or
mov
call
cli
movsb
xchg
xor
inc
mov
les
es
in
cmp
inc
ret
and
mov
subb
adc
cmp
xchg
pop
rorb
sbbb
or
jnp
cmp
pop
popf
imul
out
repnz
jg
clc
ret
loop
loopne
in
jb
mov
add
jbe
jle
stos
lods
pop
mov
mov
ljmp
in
mov
mov
push
in
adc
roll
cld
sarl
rorl
mov
stos
mov
or
push
adc
movsl
aad
push
incb
pop
pop
js
jno
in
mov
lods
sbb
out
xchg
insl
jecxz
outsl
pop
adc
ficoms
sbb
into
loope
sbb
pop
cmpsb
ret
mov
adc
cmp
inc
fcom
xchg
addr16
loop
pop
adc
sub
adc
push
push
cwtl
push
add
mov
inc
xchg
sbb
or
cmc
xchg
xor
mov
call
pop
test
push
nop
sbb
pop
and
push
inc
ret
dec
jbe
mov
xlat
sbb
adc
cld
call
jg
stc
aaa
stos
aam
jns
mov
cld
push
ret
movsb
dec
push
scas
pusha
ret
outsl
mov
rcrb
jle
adc
call
add
mov
stos
fwait
or
mov
hlt
or
and
dec
mov
jle
and
ss
repz
aaa
jae
faddl
enter
testl
in
jp
jne
add
dec
xor
fsubrl
mov
shl
dec
push
add
lret
mov
sub
clc
push
sbb
push
mov
outsl
daa
fimull
pop
cmp
dec
cmpl
xor
sti
pop
push
jns
fs
jg
sbbb
add
push
mov
jbe
push
in
or
orl
xchg
stos
lea
fs
sbb
adc
fdivp
fs
xor
inc
clc
push
cld
sbb
gs
fnstenv
popf
push
and
mov
adc
or
xlat
mov
ret
lret
push
test
mov
and
leave
sub
std
test
sarl
mov
add
lock
dec
fbld
push
add
jnp
dec
dec
lock
mov
jno
fadds
sahf
pop
repnz
push
add
sahf
or
clc
scas
rol
mov
scas
or
pop
mov
mov
cmp
pop
call
dec
push
or
cmc
fchs
push
test
inc
jecxz
scas
mov
imul
icebp
adc
nop
loop
jg
sbb
pop
xor
scas
pusha
add
imul
pushf
in
sbb
adc
stos
repz
outsw
adc
movsl
sahf
dec
lock
cli
push
mov
inc
imulb
ret
push
jecxz
js
mov
jae
mov
cli
leave
imul
sti
lahf
jae
jnp
push
sahf
jne
mov
insb
enter
dec
enter
or
xor
or
mov
leave
and
adc
fistl
aas
cmp
cltd
or
dec
mov
outsb
xchg
bound
add
mov
pop
nop
cmpb
loopne
mov
and
das
adc
adc
xchg
pushf
inc
popa
lcall
sbb
or
sbb
mov
out
pushf
icebp
sub
adc
mov
loope
add
fmull
adc
push
jnp
sbb
or
repz
rcll
push
loope
fisubrl
movb
test
push
bound
or
fstps
cmpsb
pop
inc
ljmp
mov
popf
icebp
fisubrs
test
lcall
mov
pop
sarl
add
push
cmp
loope
pop
mov
fildll
pusha
icebp
mov
add
sbb
and
cmp
cli
sbb
mov
cmpsb
add
stos
andb
rorl
mov
push
clc
enter
test
pop
xchg
inc
pop
das
fs
lds
je
fs
push
jnp
out
mov
hlt
or
pcmpeqb
xor
add
push
sahf
shlb
push
adc
pop
dec
lock
lret
loop
add
call
jge
xchg
mov
add
dec
xchg
mov
mov
or
cmp
imul
jg
dec
push
xor
sahf
lods
pop
out
add
aaa
aas
std
dec
and
jmp
dec
adc
cmp
loop
xlat
add
daa
mov
fs
stc
daa
mov
mov
jp
shrl
imul
or
in
outsb
scas
aaa
decl
xor
add
rclb
pop
mov
or
inc
xchg
roll
pop
inc
add
dec
and
inc
push
add
add
icebp
push
cmp
sub
fld
mov
out
or
push
mov
mov
xabort
pop
test
mov
add
test
pop
pop
dec
xchg
push
pushf
mov
dec
hlt
push
inc
sub
adc
push
sbb
iret
clc
mov
jo
mov
stc
loop
push
add
mov
fdivrl
sub
pop
hlt
andl
xchg
pushf
cwtl
xchg
hlt
es
adc
cmp
jo
sub
xchg
pushf
push
fsubrl
idiv
push
divb
inc
das
xor
push
adc
push
enter
jge
rclb
add
imul
mov
ljmp
sbbb
in
nop
movsl
or
movsl
sbb
mov
cmp
push
mov
loope
mov
nop
push
add
and
cmpxchg
test
push
xchg
cmpsb
in
and
xchg
or
mov
xchg
pop
fs
add
mov
out
inc
mov
movsb
jno
cmp
inc
in
dec
cmp
jae
xor
xor
sti
push
sub
fmull
xchg
lahf
mov
in
mov
push
cld
adc
pop
mov
dec
mov
xchg
scas
and
fcomip
clc
push
inc
lock
fsts
adc
mov
pop
incl
dec
add
or
orl
xchg
fs
loopne
sarb
aam
lds
mov
jp
cwtl
adc
jle
and
ret
outsb
or
xor
pop
jle
test
or
sub
mov
rcll
inc
push
dec
aam
dec
in
and
inc
jg
sbb
fimuls
leave
cwtl
cmpsl
jbe
test
add
aas
sub
push
mov
mov
cmp
push
gs
stos
aaa
insb
ret
loop
cmp
inc
cmc
int
mov
cmp
cs
xchg
fstpt
sub
jl
arpl
fmull
inc
sbb
sbb
je
ficompl
fsubrp
insl
push
add
insl
ret
inc
sbb
inc
fisubrl
sbb
filds
bound
push
add
test
ret
xchg
mov
test
inc
jge
ret
and
repz
mov
xor
pop
jb
or
loopne
inc
xchg
xor
adc
pop
push
mov
xorl
aaa
cld
sub
leave
xchg
ss
mov
push
data16
jbe
movsl
iret
mov
out
dec
mov
stos
cs
cmp
lea
adc
and
mov
lahf
push
jg
insl
jnp
mov
in
movsb
inc
push
addl
cmp
inc
push
xchg
pop
es
push
dec
jp
lahf
lock
sbb
inc
arpl
addl
and
and
aas
or
out
push
psrad
fisubrs
stos
cmp
imul
stos
jne
and
dec
jp
fs
add
repnz
cli
adc
xor
in
xlat
jne
bound
sub
xchg
pusha
mov
or
push
stos
pop
movb
and
mov
mov
fcomip
test
pop
bound
and
call
mov
pop
and
cmp
mov
lock
push
sub
movb
mov
imul
fcmovnu
aas
push
adc
loop
sub
inc
sbb
add
les
pop
xor
sbb
call
mov
dec
lods
cli
pop
or
cmp
or
je
test
scas
add
sub
adc
test
fcoml
adc
jg
dec
bound
ss
pop
and
outsl
inc
js
outsb
push
mov
cmp
mov
mov
mov
sbb
mov
lahf
addl
lds
push
js
das
js
jno
je
xchg
lea
clc
mov
or
xor
add
pop
or
scas
aam
add
cmpsb
ret
dec
hlt
repnz
cmp
sub
data16
fdivp
outsb
jl
test
adc
add
pop
call
inc
int
and
pop
int
into
or
mov
adc
js
jp
xor
ss
cmp
rorb
inc
movsb
outsb
add
mov
xor
xorb
dec
loope,pn
in
xchg
cld
fimull
xchg
add
xchg
outsb
das
clc
adc
mov
inc
insb
cmpb
or
sarl
mov
or
adc
fbld
loopne
idivb
popl
dec
outsb
cmp
mov
call
pop
add
jle
xorl
push
jb
xor
mov
loopne
pop
ljmp
dec
add
sbb
sbb
push
call
int3
stc
jb
pop
push
repz
add
imul
dec
icebp
inc
pop
std
mov
mov
jl
out
mov
testb
sub
into
sub
mov
cmpsb
push
sbb
push
add
pusha
into
call
jle
sarb
hlt
jns
xor
mov
sub
jg
cli
or
jmp
hlt
outsb
mov
ret
mov
sub
sub
lock
sbbb
ss
ret
in
mov
call
dec
ds
jle
xor
pop
stc
hlt
xor
fsubrp
dec
mov
test
mov
stc
rorl
and
pop
lahf
adc
addr16
frstor
fldt
xor
xor
lcall
mov
xor
mov
cmp
push
mov
pop
mov
push
dec
je
rcrb
inc
jb
iret
or
orb
dec
add
fistpl
or
push
xor
rolb
jbe
sub
add
or
daa
add
push
in
push
pusha
les
aaa
out
jns
stos
add
mov
ret
pop
jp
imul
xor
fisubrs
cli
xchg
arpl
lret
insb
rcrb
push
jb
cld
jge
add
ja
cld
cli
dec
loope
and
hlt
adc
dec
mov
lods
jbe
and
fcompl
and
push
fadd
xlat
mov
outsb
fnsave
popf
mov
out
xchg
hlt
xchg
sbb
sbb
ret
jle
mov
es
pop
push
add
xchg
fwait
scas
cmpsl
loopne
out
ret
cli
push
pusha
ficoms
mov
xchg
data16
jbe
push
mov
rorl
neg
inc
fcom
sahf
push
scas
pushf
push
mov
sbb
iret
xor
or
and
sbb
mov
imul
inc
iret
dec
es
jbe
out
aad
in
sub
inc
mov
and
test
mov
pushf
cmp
clc
jo
nop
inc
testl
push
mov
pushl
repnz
xor
cmp
ljmp
adcb
mov
and
or
fdivs
pop
hlt
add
fimuls
leave
and
ds
push
cmpsl
outsb
mov
sbb
sahf
push
mov
clc
stos
addr16
lods
cwtl
incl
mov
mov
lea
xchg
pop
scas
stos
pop
jmp
push
push
mov
add
insb
and
loopne
loopne
mov
fiaddl
int
sub
xchg
cpuid
xchg
adc
sub
jecxz
dec
js
sbb
scas
pop
ficompl
xorl
push
xor
lods
xor
ret
push
and
adc
out
out
inc
pop
mov
sbb
pop
enter
inc
add
dec
bound
push
cmp
enter
xor
fmul
scas
xchg
adc
dec
push
popa
outsb
repz
daa
inc
jp
insb
out
test
lods
sbb
ljmp
sbb
pop
jg
adc
loop
fucomp
aaa
pause
mov
push
pop
jmp
arpl
out
repnz
sbb
out
outsl
lock
and
inc
push
sbb
xchg
fwait
loope
push
mov
ficoms
dec
sbb
shl
pop
mov
fstpl
adc
popa
push
mov
mov
xchg
ds
ret
jle
pop
jno
inc
fists
or
mov
mov
pop
loopne
xchg
mov
jo
fdiv
adc
scas
pop
dec
movsb
bound
cmpxchg
and
test
push
sbb
ljmp
push
mov
inc
out
inc
push
sub
int3
pop
outsb
push
mov
mov
stos
addl
jmp
adc
fisubs
sbb
xchg
sub
out
dec
and
inc
push
bound
shl
data16
out
sbb
inc
or
cltd
mov
xchg
cli
sti
or
fisttpll
movsb
loopne
movsb
lods
lods
movsb
sarb
subl
jnp
scas
sarl
sbb
pop
mov
xchg
je
test
stos
dec
lcall
mov
mov
ret
mov
notl
sbb
sub
aaa
pop
ret
cmp
lock
aam
cld
scas
pushf
cmpsb
cld
out
insl
mov
mov
mov
into
add
mov
sbb
aam
loope
mov
aas
lret
arpl
sub
rorb
je
add
inc
mov
inc
daa
jp
or
incl
mov
push
or
mov
cmp
adc
sub
in
xchg
or
pusha
dec
push
stos
and
adc
roll
pop
xchg
icebp
je
sahf
dec
loope
data16
sbb
xor
scas
stos
adcb
out
ds
push
adc
shlb
ja
xchg
jmp
pusha
push
aam
pop
jmp
sub
ret
stos
mov
outsl
rolb
pop
mov
shll
mov
subl
adc
pop
in
leave
add
jbe
sub
ficompl
jge
lret
int3
mov
cs
out
test
das
mov
xor
sbbb
push
mov
stc
cltd
add
loopne
xor
xchg
repnz
xor
jmp
push
mov
mov
xor
inc
adc
pop
loope
mov
fists
add
mov
test
adc
daa
sub
les
loope
inc
jle
mov
ss
adc
jo
adc
inc
push
enter
fwait
inc
popa
jb
je
push
scas
push
xor
mov
jns
roll
sub
pop
dec
inc
and
inc
sbb
enter
sar
xorb
stos
xlat
pop
sbb
js
cmp
and
lea
popf
mov
mov
mov
or
mov
sbb
out
fwait
and
cmpb
call
ss
fadds
out
movsb
sbb
mov
mov
es
testl
hlt
adcb
ljmp
int3
fldl2e
pop
fcomps
mov
icebp
aad
imul
sbb
stos
add
pop
jecxz
sbb
xchg
mov
mov
mov
es
or
mov
jle
pop
adc
stos
outsl
or
cmpsb
mov
inc
and
sbb
fstpt
orl
loopne
arpl
inc
ficompl
outsl
and
int
pop
inc
and
shll
rcll
push
ret
lods
mov
mov
add
mov
insb
push
mov
into
inc
lahf
sub
stc
inc
xor
ljmp
mov
lock
cli
mov
push
insb
testl
xchg
je
sub
loope
and
or
int3
dec
pop
sub
pop
test
jecxz
call
hlt
mov
jo
cmp
adc
jnp
mov
insb
int3
sub
std
call
or
add
leave
push
std
scas
out
shrb
fwait
cmpsb
push
inc
out
lock
dec
mov
es
sub
sub
mov
sub
dec
add
cwtl
dec
add
xor
movsb
push
add
lahf
add
outsb
push
iret
inc
jae
xor
and
sub
icebp
aaa
push
inc
pop
ret
add
mov
push
loope
xchg
mov
loope
ja
outsl
ss
les
shl
stos
push
inc
outsb
adc
aam
sbb
push
pop
ficoms
mov
adc
mov
dec
icebp
xchg
mov
jno
adc
sbb
sbb
sub
lea
push
js
mov
and
add
repnz
repnz
xchg
pushf
rcrb
xchg
fwait
cld
jbe
jne
outsb
or
xchg
pop
sbb
iret
filds
adc
and
movl
int3
inc
jbe
sbb
xor
ret
sbb
test
mov
pop
jle
adc
jnp
cmpsb
adc
in
add
pop
pusha
dec
cld
mov
mov
jo
repz
sbb
cmp
mov
push
and
movsl
cltd
cld
cmpsb
mov
pop
push
leave
es
fadds
aaa
cmp
pop
jo
rep
loopne
xor
sub
mov
mov
movsl
js
rcr
icebp
cmp
push
cld
jae
jg
adc
lret
std
mov
cli
or
popa
xor
push
cmp
nop
push
fdivrl
fstpl
rcll
cmp
or
pop
cli
test
mov
mov
push
cmp
adc
or
ret
leave
in
push
pop
push
push
jo
pushf
add
cmpsl
pop
inc
sbb
jns
and
out
xor
sar
jnp
stos
aaa
fmull
outsb
push
adc
sub
pop
or
out
xchg
mov
clc
xor
xchg
mov
repnz
ljmp
and
jg
inc
add
cmp
push
adc
outsb
xor
pop
jmp
mov
inc
mov
mov
xor
push
fcmovb
pop
sub
inc
sbb
jmp
lahf
xchg
repnz
push
push
cmp
mov
adc
xchg
cmp
fcmovbe
push
pushf
mov
jb
mov
daa
inc
mov
outsb
ljmp
mov
lfs
push
loopne
int3
mov
mov
stc
sub
and
pop
cmp
inc
xchg
jb
clc
push
pop
mov
dec
or
arpl
fcoml
loop
pop
adc
xchg
cmp
outsb
inc
mov
xor
add
aad
aas
ret
sub
mov
sbb
lret
mov
repnz
add
mull
clc
or
jns
xor
sbb
rclb
in
rcr
or
ljmp
cwtl
push
sub
jp
adc
imul
mov
push
mov
jmp
es
enter
cmpl
and
mov
cmp
inc
std
dec
shl
fcomps
adc
xorb
xor
dec
ja
or
lcall
sbb
xchg
into
test
sbb
mov
xchg
mov
ds
aam
ficompl
shlb
outsb
out
stos
xor
mov
lods
mov
fisubrs
in
push
arpl
dec
jp
fadds
pushf
clc
and
js
imulb
mov
aaa
sahf
in
aam
pop
cld
ret
or
jae
and
dec
adc
cwtl
mov
mov
repnz
mov
mov
cmp
adc
inc
xchg
cwtl
cmp
push
out
movsb
lea
hlt
fidivrs
movsb
hlt
xchg
es
lock
sub
jb
cvtps2pi
xor
or
cmp
sbb
aas
imul
icebp
add
xchg
daa
je
outsb
xchg
jne
jbe
sub
jl
push
movsb
fiaddl
sub
or
sahf
inc
sub
xchg
pop
mov
xchg
xor
mov
push
pop
jl
push
pop
and
cmpsb
cmpsl
dec
out
popf
lods
orl
je
lock
loop
inc
inc
mov
cltd
subb
sbb
pusha
test
in
repz
mov
dec
repnz
push
push
mov
pop
push
scas
mov
add
aam
je
ror
push
and
mov
jo,pt
jl
lock
and
pop
loop
stos
scas
cmp
je
sbb
xchg
pop
in
add
stos
pop
les
lods
shrb
cmp
jbe
sub
xchg
test
or
lea
push
mov
inc
rcll
fsubrs
add
inc
mov
cmp
jns
and
mov
es
xchg
cmpl
mov
cmp
xchg
cmp
sbb
outsl
push
test
xor
stos
cmp
mov
insl
mov
sbb
push
imul
and
imul
mov
and
pushf
cmc
inc
xchg
xchg
push
aam
adc
into
out
xor
mov
das
fcmove
xrelease
add
jg
shll
xchg
aas
stos
push
ficompl
or
add
nop
in
adc
orb
mov
inc
fsub
sbb
js
hlt
or
bound
jbe
jl
inc
add
add
fs
and
xlat
nop
loop
fstpt
incb
push
dec
mov
ljmp
and
add
pop
orl
ja
cmp
sbb
adc
sarl
mov
outsb
pop
pop
xor
mov
test
add
xor
push
in
push
mov
jnp
popf
gs
add
jle
adc
nop
push
lods
or
adc
jne
outsl
int3
jne
jp
jne
inc
or
inc
scas
sub
rcll
sbb
jl
mov
int
mov
sti
hlt
sbb
mov
test
test
fwait
jno
push
jp
pop
mov
sahf
mov
imul
dec
inc
pop
add
dec
pop
scas
mov
sbb
add
push
popa
adc
push
clc
cmpl
repnz
jns
dec
cmpl
je
shlb
dec
cmpsl
mov
in
aad
popa
jne
dec
popa
loope
std
outsl
and
mov
loope
xorb
push
xchg
sub
and
mov
clc
hlt
sub
jo
xchg
sub
xor
xchg
lods
loope
and
ss
aaa
pop
add
adc
add
sti
lcall
push
das
pop
aam
inc
inc
icebp
inc
mov
lret
sub
mov
mov
arpl
aam
add
pusha
pushw
mov
enter
int
push
and
icebp
fistpl
or
in
xchg
add
and
ficoms
xchg
ja
add
das
push
fisttpll
dec
aas
mov
dec
dec
sub
push
lock
sub
dec
jns
mov
es
shrl
into
lret
loope
or
cld
nop
sti
add
negb
aaa
mov
mov
andl
in
outsl
inc
scas
jnp
push
call
icebp
test
imul
negb
sahf
ret
dec
or
push
rorl
data16
push
mov
or
icebp
cmpsb
ret
ret
sub
pop
out
nop
jbe
xchg
mov
sbb
jno
mov
sbb
shl
icebp
das
mov
bound
in
mov
cmp
push
cmp
dec
xor
rcl
pop
call
clc
call
pop
sbb
pop
sahf
fldt
and
fwait
or
into
mov
jae
dec
add
pop
imul
test
dec
or
clc
mov
push
xlat
pop
out
or
gs
fwait
popa
pop
or
mov
je
sbbb
lret
push
inc
sbb
mov
lock
popl
enter
add
pop
push
outsb
cwtl
lods
clc
fistl
mov
shl
jecxz
sub
xchg
subb
sbbb
ja
cmp
adc
and
aad
push
addl
bound
xchg
hlt
mov
or
pop
pop
jne
push
pop
js
ja
inc
and
ret
incl
jmp
test
fildl
jmp
and
xor
lcall
cmpb
push
lods
adc
rorb
mov
inc
cmpsl
int3
mov
xchg
add
xor
push
roll
cmp
pop
sbb
clc
out
inc
mov
or
push
pusha
adc
mov
xchg
sub
jmp
ljmp
or
loopne
jg
push
add
fists
imul
bound
mov
cmpsb
xorb
xchg
add
xchg
xchg
movsl
gs
mov
mov
dec
nop
rolb
and
aas
test
adc
xor
xchg
icebp
leave
or
outsb
mov
dec
push
fadds
add
shll
outsb
push
stos
jecxz
lcall
adc
mov
push
push
subl
and
sbb
push
dec
and
jl
dec
aas
jb
jp
or
mov
adc
in
push
dec
xor
cmp
push
cld
movsl
insl
and
clc
dec
pushf
ja
push
ljmp
pushf
pop
test
rorl
jbe,pn
pop
xor
cmp
adc
xchg
or
sbb
or
xor
xchg
lcall
fdivrl
js
pop
sbb
inc
cwtl
lret
inc
mov
mov
pxor
cmpsl
mov
cmpsb
jmp
xchg
pop
lock
enter
test
push
push
enter
or
test
sti
fs
mov
lret
loop
cld
pop
pushf
inc
mov
inc
inc
pop
mov
aad
js
push
push
mov
sbb
sub
out
mov
or
ss
es
add
sub
loope
mov
jg
cmc
jnp
stc
add
lahf
add
stos
ljmp
push
fcompl
movsl
rcrl
test
jl
out
test
sub
mov
push
shlb
or
xor
js
xchg
push
xchg
push
sahf
aam
fs
sbb
or
and
lea
pop
ret
mov
cmpsl
pop
loope
mov
imul
loopne
mov
ljmp
imul
pushf
adc
test
pusha
jecxz
add
push
aaa
cld
popf
pop
jge
or
mov
scas
cld
inc
push
in
cltd
pop
movsl
test
cmpsl
sub
pop
in
lcall
lds
test
out
fwait
mov
mov
mov
ja
xchg
jbe
adc
inc
pusha
sti
jl
adc
cmp
aad
lods
or
push
cld
xor
push
push
cmp
mov
test
insl
jle
ljmp
int3
xor
sbb
jbe
sub
and
insl
mov
out
call
add
cmp
es
sbb
sbb
mov
or
mov
sbb
movb
fs
pop
push
pushf
adc
adc
push
sbb
xchg
fbstp
icebp
adc
push
and
push
xchg
or
sub
ret
xlat
inc
pushf
jmp
adc
in
ljmp
cmpsl
push
movsl
pop
lahf
cmpsb
push
sbb
fmull
push
les
rcrl
imul
adc
outsl
mov
ret
inc
in
pop
pop
ret
pop
xor
jecxz
add
cs
ja
add
add
jne
or
mull
and
subb
loope
mov
enter
add
inc
mov
jle
int3
imul
xchg
mov
pop
pop
adc
cmp
call
and
lahf
decb
pop
mov
scas
pop
add
out
shlb
fcmovu
movsl
sbb
lcall
push
ret
cmp
xor
sbb
and
scas
xor
jne
rcrb
adc
call
jae
inc
dec
fadds
jne
jle
int3
je
jl
mov
pop
int
hlt
adc
mov
lret
cltd
mov
pop
icebp
aad
std
loop
lods
je
loope
loope
lret
stc
jl
and
movsb
sub
popl
jnp
ss
rolb
add
cmpsb
xchg
dec
fucom
xchg
push
mov
xadd
stos
lods
rcll
inc
clc
fsubl
lods
or
xor
push
arpl
sbb
std
gs
les
cld
add
add
inc
push
jmp
mov
pop
sarl
pushf
or
mov
sbb
jle
mov
xchg
mov
in
inc
xchg
lods
js
pusha
xchg
test
test
sub
orb
mull
push
shll
add
xor
ret
sbb
mov
decl
mov
filds
filds
mov
mov
fwait
mov
lods
push
fdiv
or
xchg
lock
in
sub
adc
loopne
xchg
xchg
push
mov
sbb
inc
fcomps
movsb
cs
mov
addl
lods
mov
sbb
dec
jae
push
cmp
lret
jbe
add
cs
mov
adcl
adc
jmp
lcall
dec
imul
pop
add
xchg
rcrl
test
push
stos
and
xchg
sbb
dec
mov
sub
sub
jbe
cli
fbstp
into
orb
push
js
bound
pop
movsb
aam
adc
jp
mov
pop
jecxz
xor
aad
mov
sub
cld
adc
pmaxub
lock
cmpsb
xchg
stos
sbb
shr
lcall
mov
mov
popa
mov
pop
es
aad
jne
imull
add
testl
gs
or
bound
xchg
aam
icebp
idivl
lcall
jne
inc
sbb
cmpsl
push
push
jg
xor
mov
inc
push
xor
push
fwait
out
or
nop
xchg
rcrl
aad
sbb
pop
add
out
jge
push
imul
imul
hlt
adc
pushf
in
ret
pop
push
cli
mov
enter
stos
mov
mov
outsb
aam
and
dec
cmp
xchg
or
sub
lods
in
or
xor
mov
fldl
sub
mov
and
jg
adc
xchg
roll
cmc
sbb
jle
call
fcoms
xchg
xchg
pop
cmp
xor
and
jo
dec
xor
je
cli
inc
or
and
incb
into
or
and
dec
inc
or
and
sbb
add
sub
or
ds
int
or
sarb
mov
inc
shll
cs
enter
jae
add
loope
sbb
sahf
or
sub
std
sub
add
and
jbe
ret
shrb
in
dec
out
push
loop
dec
jo
xchg
shl
popf
xchg
inc
pusha
icebp
mov
add
cmc
outsb
test
lcall
rorl
mov
inc
push
or
dec
orl
add
xchg
rcrb
out
ret
les
pop
or
stos
addr16
lcall
ud0
xor
aam
sbb
repnz
pop
test
lret
insl
adc
into
insl
dec
adc
roll
outsb
add
pop
fmuls
inc
out
scas
inc
test
or
popf
outsb
mov
adc
xor
movsb
pop
ret
add
inc
neg
jbe
xchg
xor
pop
push
roll
rcl
pop
es
and
add
lods
adc
pmulhw
fwait
push
ljmp
lods
lods
add
push
sub
pop
out
cli
fists
ret
cmpsl
jns
pop
jmp
sahf
mov
insb
sub
aam
mov
mov
jae
loop
inc
add
pop
pop
jnp
mov
outsl
pop
test
push
inc
nop
lahf
rorl
sub
sub
inc
sti
mov
insl
cmp
fisttps
sbb
clc
inc
xor
and
mov
gs
fadds
lea
and
mov
ret
lahf
inc
loop
test
dec
stos
insl
pop
aad
mov
outsb
repnz
add
aaa
fcoml
push
adc
xchg
test
mov
mov
xorl
fs
fs
add
scas
jecxz
add
jle
fiadds
fnstcw
adc
rorl
stos
sub
dec
mov
std
daa
add
outsb
sbb
mov
cmpl
mov
xchg
insl
into
adc
mov
nop
add
jmp
fldl
mov
add
nop
dec
out
add
mov
jecxz
lock
imul
and
loopne
int
adc
mov
fisubrl
ds
loop
stos
or
xor
fs
add
mov
jbe
mov
call
leave
cmp
adc
jp
sbb
xchg
push
lcall
repnz
cld
roll
push
movsb
stos
stc
test
and
mov
je
test
mov
mov
cmp
call
out
push
repz
add
or
sahf
sbb
insl
fsubrs
mov
std
cwtl
pop
or
xchg
jbe
mov
mov
dec
out
int
and
xchg
mov
adcl
les
sub
aad
push
lahf
outsb
jp
inc
test
add
call
mov
and
jo
and
hlt
push
push
insl
jle
add
idivb
outsl
sub
xlat
sub
repnz
repnz
mov
xor
push
lds
and
xchg
jbe
fcmovnb
adc
push
rcll
roll
ret
adc
push
fsubl
jb
pop
aam
ja
scas
adc
insb
xor
add
sbb
popl
shrl
aad
pop
arpl
pop
dec
inc
inc
lods
inc
inc
fnstsw
mov
jge
insb
xchg
pop
add
test
loope
pop
psraw
adc
aad
mov
fbstp
mov
stos
ret
cs
adc
sub
adc
call
add
lret
sbb
or
add
add
ja
inc
test
shlb
jge
sub
sbb
xchg
ljmp
jnp
iret
mov
repnz
push
dec
loope
push
push
adc
scas
rcr
jne
shr
sbb
mov
mov
push
in
sti
rcrb
cmp
inc
loope
mov
es
jp
iret
dec
mov
sbb
loopne
addr16
scas
dec
or
push
aas
rolb
jo
iret
push
mov
mov
in
fidivs
inc
dec
clc
in
lock
mov
repnz
mov
mov
fcompl
dec
orl
or
ss
movl
mov
test
sub
cmpsb
loopne
je
outsb
dec
dec
cs
out
mov
inc
out
test
jle
clc
push
pop
xchg
mov
cmpxchg
int
mov
cmpsb
and
testb
push
sahf
sbb
xor
enter
mov
shrd
dec
add
aas
pop
scas
fildll
jle
pop
dec
cld
mov
inc
push
ss
call
lds
mov
sub
sub
mov
roll
cmp
push
and
cli
lahf
cmc
mov
and
loop
call
mov
cmp
add
push
repnz
cs
outsb
pop
not
jecxz
sbb
arpl
testl
push
in
mov
shrl
cmp
cmpl
in
out
sub
push
rolb
cli
hlt
add
mov
int
loop
or
clc
mov
mov
add
mov
cmp
mov
sub
sbbl
ss
lcall
scas
popf
add
sbbb
push
sbb
or
shrb
pushf
insb
imul
call
aas
test
in
notb
and
call
pop
mov
and
shl
xchg
sbb
mov
aas
in
mov
mov
and
add
push
fnstsw
out
insl
or
xchg
lahf
sahf
lcall
aad
jo
lock
leave
dec
push
mov
ja
inc
add
mov
addl
push
mov
outsl
mov
sbb
lock
pop
or
or
pop
add
ret
iret
cmp
into
mov
and
sbbl
adc
out
loopne
ss
divps
shr
lret
jp
dec
jne
lock
or
stos
mov
subl
mov
jo
addr16
loop
push
std
mov
icebp
mov
push
cmp
push
pop
cli
cmp
mov
jns
insb
gs
adcb
sbb
sub
cmp
jg
sbb
testb
fisubl
faddp
js
ret
pusha
out
add
xor
mov
int3
fadds
cmp
pop
sarl
cmp
ret
scas
fcomps
jp
push
jecxz
insb
pop
inc
push
lret
cmp
adc
je
movsb
aas
dec
inc
jl
sub
je
pop
xor
sbb
add
outsb
pop
xor
cmp
dec
adc
cmp
test
cmp
call
out
mov
out
pop
std
add
xor
jecxz,pn
sub
clc
std
mov
xor
mov
push
ret
mov
push
icebp
sbb
or
aam
int3
inc
and
dec
cmp
test
loop
sti
jae
inc
cld
or
cmp
mov
dec
icebp
scas
psrlq
loopne
mov
cli
mov
dec
in
adc
sbb
xchg
scas
xchg
incl
outsl
or
stos
out
sub
or
in
movsb
jge
push
test
movsl
aaa
fstp
jg
enter
push
add
mov
test
sahf
pop
jo
cmpsl
xor
or
movsl
dec
cmp
inc
mov
mov
test
pop
lock
icebp
dec
cli
lods
adc
mov
jp
mov
stos
add
sub
inc
aaa
insl
mov
rolb
push
dec
dec
mov
push
jns
and
aas
jl
loop
mov
cmp
sarb
adc
inc
cltd
cmp
inc
sub
and
xchg
or
leave
mov
popa
inc
int3
scas
das
dec
add
push
movb
data16
pop
aaa
cmp
flds
adcb
mov
ja
or
inc
jnp
fidivs
push
test
lock
ret
scas
push
adc
lds
push
mov
push
lcall
in
pop
add
cmp
filds
cmpsb
cmp
adc
mov
xor
and
adc
or
dec
inc
roll
mov
fnsave
iret
add
xor
and
xchg
and
or
shlb
jge
pop
std
sub
pop
push
nop
push
movsb
cmp
stos
xchg
mov
ja
pop
mov
sub
xchg
scas
jl
push
inc
add
fimull
mov
lret
mov
cld
cmp
xchg
push
cmp
sub
fildll
xchg
and
add
fs
jle
pop
inc
or
test
out
or
popa
clc
ja
mov
call
aam
jo
push
jge
shrl
add
test
popl
pop
inc
cmp
adc
es
sub
mov
nop
ss
or
lods
cli
push
daa
sub
mov
mov
incb
or
sub
mov
push
lret
std
or
mov
jae
jge
mov
cld
js
ficoms
sub
leave
jg
inc
lods
out
aas
cmp
sbb
sar
rorb
enter
inc
shr
push
push
mov
fadds
ljmp
divb
mov
mov
ss
out
mov
cmp
inc
ss
test
rorl
adc
xor
les
jo
inc
sarb
pop
loopne
xor
inc
fs
and
cwtl
xchg
mov
fwait
lods
xchg
mov
enter
ja
or
add
sbb
out
mov
mov
loop
add
fsubs
cmpsl
sbb
cmp
lods
or
mov
sbb
les
mov
je
mov
push
jne
mov
add
push
push
fisttpl
leave
push
test
mov
adc
stos
add
xchg
icebp
dec
add
cmpsl
mov
and
adc
cs
int3
push
sbb
cmpl
mov
mov
in
rolb
dec
dec
push
cmpb
xor
addl
rol
inc
inc
loope
mov
xor
inc
jns
xor
push
or
into
add
cltd
fistpl
mov
mov
mov
cmp
inc
push
loopne
ret
out
dec
sbb
sub
aas
ficoml
push
scas
fadd
xchg
inc
xchg
scas
out
sub
outsl
xchg
mov
jg
sbb
adc
mov
cld
add
mov
into
push
cmp
dec
mov
roll
ljmp
sbb
sub
les
les
je
xor
call
mov
jge
cmpb
int
dec
lahf
xor
jp
add
add
movsl
hlt
cmc
push
stos
pop
mov
leave
or
mov
xor
sub
xlat
sub
out
mov
mov
sbbb
adc
sbb
add
sbb
adc
push
add
cmpsb
or
push
je
icebp
fiaddl
or
jne
shlb
sub
arpl
mov
inc
sarl
cli
mov
or
pop
outsl
mov
mov
push
cmpsl
xchg
cmp
inc
xor
aam
cmp
add
inc
jb
test
out
push
shlb
jp
lock
sbb
adcb
call
aam
push
pusha
mov
sbb
add
rcr
or
xchg
enter
and
lahf
mov
sub
sbb
mov
nop
in
rorb
add
ss
cmc
inc
ret
mov
in
aas
sub
mov
fwait
insb
repz
sub
imul
mov
add
cmp
das
rclb
lods
inc
sbb
jb
inc
dec
jp
push
xchg
inc
mov
mov
sti
das
cs
test
inc
jae
mov
and
adc
push
mov
es
rcrb
jae
movsl
je
lcall
je
dec
jle
das
sub
pusha
add
test
adc
push
mull
mov
push
les
das
rclb
jp
inc
pop
fists
repnz
inc
pop
mov
stc
and
ficoms
jl
rclb
push
das
test
add
aad
lock
xor
mov
and
push
fsubl
mov
repnz
lea
test
jmp
lods
vmwrite
mov
jecxz
xchg
movsb
scas
adc
mov
dec
add
mov
fdivs
enter
mov
xor
push
cli
add
xor
dec
inc
inc
adc
sarl
push
jge
arpl
cwtl
js
bound
dec
loop
lods
mov
loop
sub
push
xor
rol
nop
sbb
gs
je
mov
cwtl
xor
adc
cmpsl
popf
out
sbb
iret
jo
scas
pushf
xor
bound
dec
lahf
repz
push
cmp
imul
mov
orl
sbb
es
js
mull
sbb
mov
ljmp
jg
sbb
jae
push
mov
mov
std
mov
mov
mov
mov
xchg
loopne
xor
jp
sbb
aaa
xor
add
int3
lock
das
sbb
xor
mov
or
pop
mov
mov
jb
or
testb
in
icebp
clc
aad
adc
adc
aad
shll
shrb
test
mov
sbb
fbld
jnp
or
add
bnd
cmp
mov
inc
fs
pop
cli
add
cmpsb
add
jl
cmp
lods
mov
inc
mov
jl
rclb
mov
adc
mov
icebp
js
lock
xchg
or
jg
je
loopne
aam
fsubrs
cltd
jo
arpl
mov
shll
insb
aam
bound
dec
js
pop
push
mov
mov
mov
adc
and
push
lods
add
sub
shll
outsb
insl
fidivs
aas
mov
cs
in
aad
inc
mov
or
pop
mov
orb
dec
push
addb
loope
arpl
pop
or
shrb
mov
scas
push
xchg
js
cmp
iret
ja
cs
mov
arpl
and
adc
pop
cmp
iret
push
mov
push
inc
sahf
nop
ljmp
push
mov
fcoml
out
xchg
mov
mov
gs
imul
mov
std
or
lods
dec
rolb
call
cs
mov
aas
add
dec
lret
decl
xor
out
push
icebp
inc
xchg
mov
outsb
jno
out
icebp
imul
addb
adc
mov
lret
lds
inc
mov
push
shlb
sbb
out
mov
sub
nop
xor
cs
add
mov
rolb
inc
jg
pop
gs
pop
cmp
adc
pop
lods
ljmp
call
mov
sbb
insb
or
orb
orb
hlt
inc
scas
adc
rclb
sarb
loopne
ret
lret
icebp
test
roll
xchg
cmpsl
ljmp
cmp
js
out
sbbb
ror
js
cmp
jmp
cltd
loop
adc
inc
xor
push
cld
je
mov
shrb
and
rcll
out
js
jle
andb
cmp
jns
fidivs
lods
inc
pop
push
inc
lea
clc
dec
std
hlt
adc
add
sbb
or
xchg
lahf
xorl
push
push
push
fldt
or
cli
jno
pop
cmp
or
pop
insl
xchg
push
jge
dec
pop
push
dec
aam
push
or
push
mov
js
roll
push
cltd
aaa
js
pop
add
push
lods
pop
testb
out
or
js
les
add
mov
mov
or
movsl
and
add
mov
outsl
js
jp
mov
push
movsl
test
cli
push
mov
and
notl
pop
push
jne
stos
lcall
cvttps2pi
jecxz
in
pop
leave
incl
mov
sub
clc
push
push
cld
clc
movsl
push
ds
scas
jo
aad
pop
lds
mov
clc
or
lock
ret
lock
fbld
mov
lods
gs
dec
pop
sub
scas
je
mov
push
sbb
push
inc
add
sub
ret
orl
je
rcl
call
lock
in
in
inc
gs
mov
imul
loopne
into
push
mov
rolb
adc
jb
sub
add
sbb
aam
inc
rcr
cs
mov
jg
loope
mov
dec
mov
pop
loope
lret
repnz
int3
cmp
lcall
adc
cmpb
dec
mov
mov
dec
icebp
xchg
cmc
mov
cmp
xchg
leave
and
xor
xchg
pop
mov
hlt
lret
pop
aam
leave
js
iret
lock
mov
js
icebp
xchg
sub
hlt
pop
inc
mov
dec
addb
orl
add
enter
cmp
cwtl
dec
outsl
iret
xor
scas
jecxz
push
aaa
aas
push
mov
mov
cmp
adc
shl
mulb
test
pop
push
add
cmp
xor
pushf
data16
pop
inc
push
cmpsw
test
aas
inc
fimull
jmp
lock
test
push
xchg
aaa
pop
outsl
cmpsb
mov
xchg
ja
jne
data16
jo
mov
adc
cmp
xchg
test
cmpsb
jmp
adc
lret
or
mov
fadd
jp
push
xor
les
shll
aam
cs
das
push
arpl
dec
mov
rcll
mov
stos
cwtl
dec
aas
adc
les
mov
mov
dec
inc
xor
mov
add
cwtl
mov
cld
lret
lock
andb
jno
aaa
sbb
mov
or
pop
ret
aas
mov
adc
cmc
fadds
dec
lcall
adc
push
loope
ljmp
fs
adc
or
into
xchg
int3
and
mov
mov
xor
dec
out
inc
test
inc
jg
addl
mov
mov
repnz
fwait
mov
fistpll
ret
cmp
adc
sbb
imul
mov
imul
jmp
insb
xchg
mov
sbb
jb
xlat
xchg
mov
xor
jg
test
lods
mov
imul
fcompl
cmp
cmc
loop
inc
xor
xchg
and
or
call
pop
adc
pop
mov
mov
add
mov
cmp
or
and
push
insb
jne
test
mov
mov
scas
xor
dec
jo
dec
fidivl
in
pop
mov
jecxz
nop
outsb
inc
fdivrs
sbb
pop
cmc
scas
aaa
nop
pushf
lods
mulb
dec
popf
stos
pop
or
cmp
xor
popf
pop
mov
xchg
dec
inc
pop
fstl
lock
pop
mov
ds
in
mov
test
pop
sub
out
mov
pop
add
push
push
add
loope
ss
jp
insb
mov
jp
push
loopne
in
xor
and
mov
std
call
icebp
clc
push
and
movsb
pop
add
pushf
sub
or
fwait
ja
sub
push
stos
leave
icebp
data16
das
and
sbb
bound
sbb
inc
inc
sub
xor
or
and
addb
mulb
cld
mov
ds
or
xor
inc
mov
mov
inc
cmpl
fwait
loop
ss
ja
sbb
test
jo
ret
cmp
lret
lret
and
ret
dec
add
mov
js
or
sarb
add
in
mov
sbb
push
repnz
in
push
and
add
mov
sbb
pop
mov
scas
lods
int3
push
sub
adc
pop
test
cmpsl
ss
popl
shlb
repz
push
shrb
aaa
mov
cmpsl
pop
inc
cwtl
ss
stos
dec
lock
mov
and
inc
add
push
cs
scas
call
xchg
pop
mov
adc
int
hlt
vmovntps
add
lods
rorl
push
mov
into
pop
mov
add
sbb
les
shrb
dec
jne
pushf
fisttpll
fwait
sub
scas
sub
sbb
jae
sub
icebp
pop
ljmp
pop
in
cs
hlt
pop
into
sbb
movsl
bound
sbb
lahf
cmp
or
out
or
ljmp
fsubs
js
in
inc
flds
xor
xchg
jb
push
mov
loop
fstl
jne
aam
aas
lcall
ss
insl
xlat
daa
ljmp
scas
fldenv
mov
shlb
mov
sub
in
int
lods
jnp
add
stos
loopne
and
movsb
or
pop
es
hlt
and
stos
dec
lcall
jmp
pop
pop
cmp
adc
cmp
fcompl
rclb
pop
cmp
ret
jbe
mov
jnp
add
pop
mov
sub
pushf
test
stc
data16
fildl
pop
adc
push
lret
add
push
inc
subb
pop
and
adc
orb
jg
sub
aad
rcll
mov
sub
push
add
decl
jmp
loope
enter
loope
test
pushf
or
mov
into
out
jl
nop
scas
ret
ljmp
cmp
lds
sarb
mov
addr16
xchg
and
xchg
add
cld
arpl
or
pop
push
sbb
pop
push
pusha
or
ss
pop
cld
fwait
hlt
xor
push
lods
mov
pop
sub
xchg
sub
int3
pusha
cmp
frstor
jecxz
lock
mov
lret
jmp
js
icebp
mov
ret
stc
xchg
fcoms
dec
comiss
cli
cmp
jo
in
sahf
add
das
dec
scas
jg
in
addr16
add
mov
and
inc
call
jp
in
sti
sarl
sbb
push
push
cmp
and
cmp
mov
nop
mov
mov
pop
int
mov
fildl
or
xor
pushl
call
pushl
jle
aas
pusha
ljmp
sub
or
call
pop
cmc
fcmovnbe
mov
pop
mov
xchg
jmp
mov
push
jns
cld
mov
testb
scas
test
adc
and
aas
add
outsl
push
and
mov
jns
movsb
push
out
dec
mov
mov
lods
xchg
loopne
bound
pop
add
icebp
xchg
cmp
clc
xorb
cmp
mov
ljmp
pop
mov
cmp
mov
jne
push
ds
xor
nop
push
or
fdecstp
out
mov
push
dec
cmpsl
jge
xchg
repnz
call
sbb
or
repz
data16
mov
std
mov
or
roll
sarl
mov
mov
rorb
inc
push
insl
adc
fs
cli
ss
jb
insl
daa
ficoms
sti
sub
sbb
cmp
push
fdivs
mov
cmpsb
and
mov
or
pusha
lock
cmp
clc
movsb
imul
inc
push
push
je
and
cmpsl
mull
or
inc
mov
xlat
pusha
test
mov
push
pop
lock
fmuls
leave
jbe
xor
jp
lahf
add
aam
mov
mov
pop
ja
push
scas
push
loope
inc
js
loopne
fldenvs
psrad
test
cmpsb
xchg
sahf
xor
or
fcoml
lea
out
aas
in
adcl
dec
jo,pt
loop
faddl
test
xchg
int
and
fs
push
addb
xchg
fldl
ret
mov
stos
push
out
push
sub
mov
mov
fs
xchg
add
dec
leave
ds
jle
js
cmp
xchg
sbb
jp
jne
hlt
addl
test
ret
xor
xor
insb
add
sub
nop
xchg
add
mov
les
adc
pop
pop
in
push
cmp
pop
xchg
arpl
pop
rorl
inc
mov
std
ja
pop
mov
fistps
sbb
add
pop
stos
stos
xchg
lcall
mov
cmp
loop
cs
add
xchg
push
aam
xchg
repz
rcr
cmpsl
inc
mov
lret
push
xchg
data16
mov
sub
xor
pop
push
cmpl
out
push
pop
pop
sbb
out
adc
repz
mov
cli
cmp
jmp
xor
sub
sbb
push
sbb
jecxz
out
shlb
sbbb
jge
sub
xchg
cmpb
pop
and
xor
dec
pop
lcall
or
push
sar
ret
fnstcw
sahf
sub
add
into
dec
out
mov
pop
sbb
or
pop
sub
outsl
pop
rcl
outsl
divb
test
mov
add
xchg
add
loopne
xchg
lock
push
fisubrl
adc
adc
es
and
arpl
and
cli
lahf
mov
fdivp
sbb
xor
scas
lods
fisubrl
add
outsl
and
push
test
into
push
lahf
setns
jp
outsl
jnp
in
test
pop
es
mov
add
shll
pop
jecxz
add
adc
lcall
xlat
push
sbb
int
shlb
ret
xchg
ret
fdiv
scas
sbb
push
outsl
xchg
push
ret
adc
icebp
loope,pn
xchg
orb
sbb
mov
cmp
fsubr
clc
dec
rolb
xor
or
aas
cmpsb
xchg
dec
xchg
pop
mov
cmp
cmpb
jmp
sbb
mov
mov
pusha
fdivrs
cmp
cmp
push
mov
inc
push
rolb
dec
adc
das
push
inc
inc
mov
aad
xchg
pop
xorl
mov
jp
cmp
subl
sub
push
dec
mov
mov
xchg
sub
mov
cs
popa
movsb
ds
xor
das
aas
push
push
decb
or
dec
ja
pop
outsl
push
inc
imul
fisubrs
push
pop
inc
add
mov
mov
xchg
out
out
xlat
adc
enter
shrl
in
cmc
out
fs
outsb
jp
test
mov
inc
xchg
faddl
lods
add
stos
lahf
sahf
andb
iret
ss
sbb
jno
in
jl
sbb
hlt
leave
add
stos
xchg
fdiv
xchg
mov
int
insb
xor
lcall
in
sbb
or
xor
call
lock
aas
aam
mov
shlb
repnz
cld
pushf
pop
and
xchg
cmp
add
sti
push
push
pop
push
cld
or
mov
mov
mov
icebp
push
iret
adc
stc
and
mov
mov
in
xor
andl
sub
dec
insb
xor
lods
inc
ljmp
sbb
imul
mov
inc
mov
add
mov
pop
icebp
or
repz
fcoms
push
inc
mov
inc
dec
mov
pop
scas
cmpsl
hlt
jno
jne
xchg
lds
add
cmp
mov
aaa
loop
adc
jecxz
mov
pop
leave
jge
cld
add
sub
xchg
pop
sbb
mov
inc
lock
pop
push
sub
mov
je
or
enter
out
insl
in
fmul
jecxz
or
loopne
cmpsb
or
mov
sbb
mov
andb
ja
mov
push
out
adc
mov
mov
inc
cli
and
pushl
pop
adc
and
mov
adc
add
test
stos
mov
inc
lcall
pop
scas
js
fistpl
insl
outsl
test
jmp
into
dec
mov
repnz
imul
mov
and
mov
ret
dec
mov
xchg
add
sbb
js
mov
fisubrs
sbb
mov
sub
sub
push
lds
ret
stos
fisubs
add
into
lcall
stos
lret
xchg
out
nop
adc
mov
or
jb
xchg
inc
pop
dec
sub
mov
ljmp
fucomi
ljmp
pop
push
addr16
lock
xchg
lret
js
fisttps
sbb
in
out
hlt
mov
jge
cmc
aas
mov
mov
sbb
pop
xor
into
xor
sub
inc
mov
ret
xchg
hlt
add
or
jbe
pop
iret
mov
das
andb
sub
mov
sbb
cltd
sbb
or
pusha
pop
dec
xchg
jmp
jnp
dec
mov
sbb
or
je
sub
mov
ret
add
lret
pop
cmc
inc
cmp
cmp
aas
cld
inc
loop
dec
lcall
push
pop
addr16
ljmp
xor
mov
cwtl
iret
cmp
imul
neg
mov
sub
leave
dec
jecxz
push
mov
lods
cli
jg
sub
lock
fs
mov
clc
add
daa
jecxz
jge
cmp
aam
mov
std
aam
clc
xchg
flds
mov
xor
pop
adc
adc
out
add
test
cli
call
and
fs
and
leave
ret
inc
repz
xchg
test
xchg
xchg
clc
leave
loop
js
mov
adc
jmp
sub
orl
inc
cmp
jo,pn
push
xchg
fdiv
jg
negl
mov
mov
cmp
testb
add
pop
sub
sbb
ret
and
mov
repnz
jbe
test
inc
jmp
xchg
and
jg
js
hlt
xchg
out
jl
or
mov
lcall
pop
mov
je
jne
or
shlb
ffree
cmpsl
jmp
daa
xor
cmp
mov
jns
int
mov
sub
fisubrl
jmp
insb
scas
adc
dec
jle
add
mov
test
inc
pushf
sbb
outsb
ret
mov
lcall
mov
inc
and
outsb
mov
sti
subb
imul
insl
adc
lcall
push
mov
mov
faddl
test
data16
testb
cmp
dec
xchg
mov
fdivrl
push
shlb
pop
dec
cmp
shlb
or
enter
jb
pop
jle
popf
push
jno
outsl
loope
pop
dec
scas
xchg
aaa
or
pop
and
mov
mov
cld
test
repnz
jb
adc
jge
lods
lahf
in
xor
sub
mov
stos
mov
add
mov
lods
mov
xor
call
and
pushf
mov
dec
lea
or
push
js
shl
mov
lcall
xchg
xorl
jp
fstp
mov
xor
repnz
sub
add
sarb
xor
jo
lock
in
inc
dec
add
loop
fisttpl
adc
roll
scas
gs
xor
push
insb
ljmp
jecxz
test
je
push
jge
sub
lods
loopne
aam
dec
shrb
clc
xchg
imul
test
sahf
clc
imul
sbb
jp
popf
call
pop
pop
adc
pop
loope
insb
lea
jle
data16
divl
push
add
add
stc
push
add
add
filds
stos
leave
in
inc
ret
negb
aad
pop
dec
into
inc
lock
and
jl
ficoml
mov
cli
das
cli
addr16
adc
in
cmp
subb
lahf
fcoml
lock
inc
cld
lret
shll
out
lret
xor
dec
sbb
clc
in
pop
jo
aas
cld
xchg
push
cmp
mov
dec
loope
loopne
dec
and
stc
std
rorl
add
cs
and
adc
mov
cwtl
dec
add
loope
xlat
xchg
pusha
cmp
sub
ja
add
dec
dec
insl
jnp
pop
cmc
push
mov
adcb
jp
cmp
arpl
and
shrb
je
sar
pop
mov
fimuls
lods
ja
mov
and
hlt
ret
mov
rol
and
adc
xchg
je
iret
sarb
insl
outsl
fisubrl
inc
jecxz
roll
cmpsb
fdivrs
out
adc
mov
ret
mov
inc
mov
xor
lret
mov
invd
add
push
sbb
scas
adc
sub
dec
xchg
push
add
dec
mov
pop
sbb
cmp
and
or
mov
cmpsl
repnz
ljmp
add
dec
add
jo
test
test
mov
dec
lea
loop
adcb
je
hlt
push
push
popa
xor
mulb
notl
or
mov
mov
fistpll
lcall
cmp
out
pop
add
dec
cmc
push
inc
cli
jge
lcall
or
fcomip
cmp
jg
and
mov
pushf
dec
in
pop
xchg
sbb
mov
adc
xor
mov
jnp
add
jecxz
outsl
jbe
outsl
pop
adc
xchg
add
dec
dec
das
arpl
fdivp
sub
lods
cmp
out
pop
fbstp
or
loopne
imul
or
pop
pop
std
pusha
dec
call
adc
insb
xor
mov
cmp
lock
pop
mov
cmp
iret
mov
sub
push
cmp
sub
nop
sub
pop
out
xchg
mov
shl
fisttps
popf
or
cmp
dec
or
std
ljmp
movsl
push
in
mov
mov
lds
mov
test
loope
pusha
sub
call
shl
mov
test
push
es
in
xchg
adc
push
sbb
call
inc
lcall
mov
mov
and
xchg
negb
into
das
dec
subb
dec
hlt
mov
and
addr16
fst
sbb
lock
std
pusha
xchg
aam
sub
pop
xor
out
xchg
or
cld
cs
decl
in
movsbl
xchg
push
pop
push
loop
je
mov
ljmp
adc
sbb
mov
pop
push
enter
xor
adc
or
add
mov
pop
add
lock
pushf
pop
adc
and
sub
les
pop
shl
scas
inc
shlb
sub
push
push
or
xor
dec
xor
fdivl
xchg
les
adc
push
je
mov
scas
movb
je
out
mov
jmp
iret
jp
add
jge
lea
popa
ds
jno
cli
sbb
mov
push
push
outsl
sbb
mov
cmc
das
xchg
fwait
jp
mov
pop
subl
cmpsl
pusha
mov
sbb
inc
push
push
cmp
test
xorb
adc
inc
cs
lods
jg
cmc
loop
lfs
mov
mov
xchg
or
pop
sarb
jecxz
std
mov
xchg
inc
fstpl
lock
decl
shlb
adc
test
xor
xchg
xor
addb
out
inc
jbe
data16
xor
lods
add
roll
sbb
pop
jle
lcall
and
push
sub
out
jle
incb
roll
push
and
push
and
loopne
test
test
mov
pop
icebp
stos
adc
pop
in
inc
repnz
push
cmp
rcr
fsubrl
pop
jo
and
pop
repnz
hlt
or
add
outsl
out
inc
add
cli
xchg
nop
jle
and
xor
or
out
mov
popa
shl
inc
and
add
popf
pop
outsb
test
je
cmp
xchg
push
subb
aam
sbb
xlat
pop
andb
nop
aas
adc
mov
cli
pop
mov
in
not
scas
jne
jge
add
adc
addb
loopne
pop
mov
aad
cli
fs
push
add
xor
push
out
imul
movlps
and
add
add
adc
cli
imul
push
std
ljmp
out
sbb
jne
mov
pop
call
daa
sbb
les
test
mov
push
mov
outsb
push
cs
push
cwtl
add
pushf
push
add
out
idiv
xor
js
rcr
xor
nop
xor
faddl
hlt
fildll
call
popa
inc
adcl
mov
mov
enter
dec
jb
xchg
je
sbb
je
inc
in
dec
add
mov
dec
mov
add
clc
cmpsb
adc
scas
xchg
shll
shl
cwtl
addr16
jbe
das
add
push
xlat
mov
test
jno
pop
stos
shll
jno
outsb
jo
lods
in
or
jno
push
loopne
xor
pop
lock
pcmpeqb
rcr
xor
add
and
lock
or
dec
mov
sbb
loop
jo
dec
add
test
cli
jmp
cmp
loopne
lock
xlat
rorb
push
jl
outsb
pusha
rcrl
mov
aam
inc
sbb
push
pusha
sub
push
in
inc
mov
cltd
insl
in
shlb
dec
adc
out
mov
jp
repnz
repz
dec
jo
cmp
insl
add
jo
cmpl
pop
lea
lcall
cmpsb
adc
scas
shl
cmp
clc
jb
pop
push
xchg
dec
pop
dec
sub
lock
pop
pop
call
mov
ficoms
sbb
jbe
inc
ljmp
mov
in
inc
retw
je
imulb
sub
sbb
sar
call
int
inc
ljmp
aam
fcompl
adc
fstl
jnp
cmp
jae
nop
push
sub
push
mov
fistpll
lcall
pop
mov
mov
pop
xor
fcomip
xchg
mov
rcr
aas
cmp
les
jno
mov
inc
push
xchg
push
fcomps
call
lock
mov
sti
xorl
call
fs
push
repnz
pop
add
sub
inc
mov
bound
fwait
loopne
push
push
xchg
adc
fldenv
mov
jnp
add
cmp
pusha
sub
mov
adc
xchg
or
mov
mov
repz
pop
xchg
loopne
xor
xchg
hlt
add
xchg
rcl
sbb
test
jnp
cmpsb
fs
loope
pop
fimuls
xchg
add
add
pop
sub
ret
fdivrl
call
or
xchg
inc
cli
add
cld
cmc
dec
jg
mov
inc
je
dec
dec
sub
xchg
in
xor
pop
cwtl
clc
or
aaa
cld
loop
add
xchg
ljmp
pop
sbb
fst
scas
dec
cs
mov
add
cmp
stos
mov
sbb
adc
pop
fcmovne
fidivs
insb
mov
push
inc
in
cmpsb
loopne
inc
mov
addr16
xlat
and
xlat
pop
orb
sub
inc
sub
test
aam
pushf
pop
cmp
outsb
lret
movsb
mov
adc
xchg
outsb
aad
mov
push
sub
daa
push
mov
bound
or
mov
fcmovb
adcb
dec
fdivp
cli
add
adcb
inc
jg
xor
add
in
cmp
cltd
or
mov
add
sub
std
push
dec
sub
push
push
push
mov
test
dec
inc
sub
lcall
das
mov
xor
push
add
mov
xor
mov
cs
in
andb
or
pop
popf
add
clc
les
pop
inc
lock
xchg
in
pop
sarb
pusha
jle
outsb
fmull
inc
add
ret
loopne
test
mov
mov
xchg
lret
adc
pop
or
les
lret
jo
ja
fadd
addr16
jbe
mov
xor
test
sbb
jns
loop
pinsrw
inc
jp
xchg
sbb
pop
repnz
ret
fisubrl
push
xor
rcrl
xchg
xchg
or
jp
inc
test
or
mov
mov
mov
fwait
pop
clc
xor
pop
rclb
orb
sub
mov
movsb
cmpsb
inc
or
ficompl
negb
clc
inc
popa
add
jecxz
pop
sbb
sub
loopne,pn
add
jmp
jge
outsb
xor
ljmp
or
test
sub
cmpb
push
pushf
test
mov
mov
shrl
shrb
loop
push
cmpsl
xchg
add
xchg
mov
pop
je
mov
xlat
jne
jbe
clc
aaa
clc
jae
mov
lock
xchg
inc
push
and
mov
pusha
lock
lret
add
pop
xchg
rorb
mov
pusha
js
mov
xchg
sbb
js
jg
and
fucomp
mov
push
dec
push
repnz
movsl
push
sub
mov
adc
lret
test
test
leave
push
pop
fdivrl
add
dec
push
ja
mov
pop
inc
pop
jl
out
pop
jmp
mov
dec
je
out
jbe
push
sub
xchg
or
and
dec
adc
dec
sub
jb
add
data16
push
xor
sbb
dec
in
and
push
jl
cmp
lock
sbb
aad
into
cltd
add
mov
test
inc
cli
test
in
sarb
stc
mov
xchg
pop
jo
sarl
mov
mov
cmp
xchg
jp
gs
movsl
js
jo
outsb
loop
in
add
inc
cmpl
push
pop
sbb
jp
jge
adc
pop
sbb
or
cmc
stc
jne
andb
jbe
mov
subl
pop
mov
dec
push
cmp
movsl
lcall
scas
ja
jo
mov
das
pop
in
pop
movsl
shrl
loope
js
add
dec
ljmp
lcall
dec
mov
int3
in
xchg
mov
cwtl
adc
and
nop
xchg
addl
xlat
inc
repnz
lret
fiadds
ret
aaa
push
inc
call
lods
sbb
movsb
loope,pt
jg
js
or
call
shll
xlat
adc
out
loop
loopne
pop
lock
mov
xorl
test
sub
xchg
pop
jbe
testl
pop
int
push
cmc
mov
push
fcomps
pop
inc
lcall
inc
dec
insb
fsubs
mov
mov
mov
loopne
orb
mov
out
inc
mov
mov
lods
inc
jo
push
xor
adc
jns
mov
addb
icebp
push
out
jmp
inc
mov
mov
ds
push
add
xchg
or
lods
mov
nop
fwait
imul
loopne
inc
xchg
inc
pop
jecxz
ja
add
or
sbb
les
add
mov
aaa
cld
fwait
push
pop
jnp
jmp
cmpl
mov
mov
mov
sbb
adc
bound
cli
scas
add
std
popa
adc
sbb
das
pop
fsubrs
les
mov
stos
scas
cmp
sbb
orl
js
loop
and
push
adc
stos
loopne
lcall
cli
mov
dec
xor
fcomps
es
or
pop
mov
addr16
xchg
xchg
jle
or
xor
xchg
sbb
mov
rolb
inc
sub
shlb
pop
lock
call
cwtl
pop
pop
xor
sub
mov
inc
fcmovnbe
and
jmp
and
lahf
shlb
fisubrl
aas
inc
in
fldl
mov
lds
roll
sub
loopne
mov
and
mov
lds
adc
cmc
add
mov
stc
sub
add
icebp
test
sbb
mov
push
add
nop
fildl
imul
jl
mov
movsl
sbb
or
sub
add
es
stos
repnz
jmp
in
mov
pop
add
cs
rcrb
mov
sub
and
pop
cmpsl
jb
sub
das
pop
fcoms
ja
icebp
xor
pop
je
jnp
cmp
test
cld
jbe
xchg
aaa
xor
and
push
sub
or
aam
xchg
inc
pushf
aam
mov
and
in
add
ror
push
lret
lahf
push
dec
pop
push
sahf
lds
and
xchg
shrb
adc
xchg
cmc
call
pop
inc
mov
or
jle
gs
adc
sub
je
dec
jg
orb
jb
xchg
jno
call
icebp
xchg
sub
pop
icebp
in
addb
push
loopne
movsl
fbld
adc
lods
sbb
or
gs
lds
cmp
or
sbb
add
jmp
aaa
les
adc
cmp
jmp
mov
fnstsw
push
push
sbb
mov
xchg
cmp
push
int3
test
mov
add
hlt
inc
xor
sbb
dec
xor
dec
mov
jae
add
push
addb
cmpb
inc
mov
mov
das
jne
pop
test
lcall
mov
add
pop
add
sbb
fcmovne
in
fwait
pusha
bound
in
pop
mov
or
adc
or
jle
loopne
jno
sub
scas
rclb
addr16
lret
andb
in
and
push
inc
inc
cmp
lock
inc
sbb
add
push
cmc
or
pop
aad
cmp
dec
imul
popf
pop
mov
ljmp
cmc
insb
cmp
sbb
scas
lods
sbb
cmpsb
xchg
add
push
pop
loop
imul
push
lds
lcall
mov
int
pop
mov
cmp
cltd
fadds
and
cmp
adc
mov
scas
clc
or
inc
xchg
pusha
stos
cmp
out
mov
push
cld
push
add
dec
repz
push
ljmp
sbb
fmuls
ret
add
xorb
xchg
hlt
adc
pop
cmp
es
pop
push
add
fdivp
aad
int3
push
stc
out
int
mov
adc
pop
dec
hlt
jbe
decl
nop
cmp
cmp
jno
mov
int3
jle
scas
arpl
repnz
xchg
mov
ljmp
sub
pop
aad
sub
push
or
mov
mov
adc
adc
hlt
in
mov
sbb
sarb
or
add
out
ljmp
jns
cmp
mov
or
adc
mov
out
xor
xchg
rolb
ljmp
jae
adc
ja
adc
popl
or
xor
add
les
sbb
dec
scas
enter
mov
jg
mov
ljmp
dec
jecxz
inc
ds
fwait
mov
sub
scas
mov
in
lret
inc
jbe
data16
clc
pop
pusha
xchg
orl
add
xchg
test
imul
rcrl
orl
xchg
add
sub
aas
cld
xchg
mov
cld
aaa
lret
pop
mov
pop
lret
outsl
shll
inc
mov
sub
push
xor
ret
sbb
iret
push
shrl
ja
rorb
cmpsl
pop
call
add
dec
jge
cmp
push
les
mov
sahf
sbb
inc
add
and
cwtl
mov
call
mov
scas
add
pop
fidivrl
into
jg
sub
aad
and
shll
sbb
jle
stos
inc
in
lods
xchg
mov
dec
mov
and
jbe
loop
mov
aas
cmp
in
shr
pusha
cmc
dec
jo
sbb
pop
mov
fisubs
insl
mov
push
sahf
movsl
call
inc
pop
pop
add
add
out
mov
adc
adc
xchg
lret
aam
cmp
or
dec
lcall
inc
push
or
filds
shlb
jge
inc
sub
loopne
pushl
mov
mov
pop
loope
js
repnz
inc
insl
in
sub
pop
hlt
adc
icebp
sti
cwtl
mov
xchg
mov
push
pusha
and
out
andb
add
cli
call
call
leave
add
scas
mov
bound
in
push
mov
ds
push
push
add
xchg
pop
cmpsl
call
sub
xor
pop
mov
neg
sti
dec
mov
lea
push
loop
faddl
xor
sbb
test
jl
inc
icebp
sub
add
adc
adc
stc
daa
clc
xchg
cmp
jl
adc
pop
mov
outsb
iret
movsl
or
push
jmp
jle
lods
jp
and
cli
lock
dec
aam
adc
jl
outsb
js
jg
mov
jg
mov
inc
insl
mov
movsl
dec
add
clc
mov
dec
lods
subb
sbb
ss
mov
pop
cli
fwait
movsb
or
sbb
sub
pop
adc
and
push
lods
mov
xchg
push
icebp
repz
rcrb
push
jge
xchg
addr16
jo
mov
popf
push
jno
push
sar
mov
sbb
sbb
mov
mov
je
jno
mov
mov
sbbb
dec
jg
pop
and
into
push
rorb
in
xor
mov
mov
mov
call
jbe
stos
scas
loopne
cmpsb
push
dec
stos
push
xor
xchg
xchg
or
adc
dec
sub
cmp
push
test
fs
outsl
cmp
sti
inc
es
sbb
mov
sub
clc
test
fcoml
mov
add
dec
inc
push
lock
fptan
hlt
mov
pop
dec
cmp
cmp
in
or
shrb
push
pusha
push
adc
adc
jmp
ficompl
ret
or
push
xchg
cmpsl
dec
add
pop
add
add
fnstenv
inc
jmp
cmp
ds
imul
xchg
xor
jnp
data16
icebp
or
inc
or
push
mov
jbe
cmp
sbb
jns
mov
fnstsw
and
dec
inc
fstpt
js
fdivs
pushf
mov
xchg
adc
test
mov
pop
cld
add
aam
pop
test
andl
dec
mov
rcl
cmp
enter
stc
pop
push
scas
jno
xor
incb
insl
mov
pusha
cmp
nop
outsb
loope
sub
lods
orl
cmc
mov
pop
jae
or
dec
pop
insb
add
insb
mov
jb
aad
cmp
movsb
xlat
rcr
dec
or
jge
dec
loopne
outsb
jecxz
aam
cmpsb
ror
mov
std
mov
xor
test
aaa
decb
sub
repz
jl
cs
mov
sbb
or
aas
hlt
into
add
or
push
push
add
add
dec
ss
xchg
jle
dec
cld
mov
fcomps
and
push
or
push
pop
xchg
mov
inc
pop
aad
pop
push
cltd
xchg
insl
adc
les
xor
pushf
sahf
bnd
push
scas
cmp
mov
xchg
and
cli
out
jo
je
pop
sub
dec
cmpsb
add
repnz
sarb
pop
cs
cltd
inc
dec
out
jne
push
jecxz
push
pop
or
dec
fs
push
lock
repz
xchg
hlt
outsl
stos
loopne
cmp
sbb
add
imul
sbbb
lods
xor
incb
lret
inc
adc
mov
cmc
ret
fadds
mov
lock
mov
out
mov
outsb
dec
sahf
cmp
or
xchg
jle
addr16
pop
ror
lret
inc
cwtl
and
pop
out
pop
jne
mov
loop
subb
orb
xor
ljmp
cli
mov
je
lods
incb
jp
cmp
fsubs
jmp
test
xchg
in
xlat
pushf
addr16
jbe
loope
push
cmp
xor
xlat
aam
jnp
shrl
mov
test
pop
adc
push
hlt
out
add
sbb
add
ret
addb
xor
adc
push
shlb
mov
adc
jp
js
jge
dec
scas
lret
and
bound
jne
mov
sbb
xchg
call
lock
sbb
mov
and
jne
ja
jns
push
sbb
lods
out
call
sti
adc
push
imul
jle,pt
push
add
loopne
pop
push
aas
mov
orb
mov
aam
xor
shr
mov
or
shll
push
or
jbe
add
dec
sub
scas
test
dec
sub
and
fdivl
ficoml
test
push
mov
pop
ljmp
js
rcll
adc
sub
push
in
sbb
test
lods
mov
dec
mov
mov
sub
push
jno
mov
fdivr
xchg
push
push
dec
fidivl
notb
push
aad
pop
mov
cmp
pop
fistpl
adc
pop
mov
and
sub
insb
cld
add
test
add
lock
or
ret
adc
push
sub
and
aas
dec
aad
test
xor
add
lock
adc
les
stos
adc
mov
inc
push
xchg
mov
pop
sub
cmpsb
cmpsl
je
popa
std
sbb
or
pop
mov
push
les
mov
sub
dec
lcall
fsubr
sbb
loope
xchg
lea
mov
sbb
cmp
xchg
xchg
inc
inc
push
ds
or
ljmp
xchg
cmp
ret
fcmovbe
add
pop
push
mov
jo
add
or
repz
pop
icebp
test
sub
jmp
je
pop
rorb
cmp
xchg
lds
mov
mov
and
fsub
add
es
pop
mov
rorl
mov
testb
cld
pusha
jb
mov
dec
es
and
hlt
fcmovne
or
out
andb
jne
bnd
push
push
pushf
mov
push
cmp
movsl
decl
xlat
pusha
out
mov
in
mov
into
imul
mov
iret
and
push
cmp
fwait
cli
mov
lret
and
icebp
pushl
fiadds
xchg
or
aaa
in
jge
or
jo
cmp
sub
jp
fs
hlt
pop
shlb
cmp
mov
xchg
jg
and
sub
jne
lea
imul
in
inc
add
sub
dec
add
mov
test
dec
jae
ljmp
fcmovb
cltd
adc
jmp
xchg
xor
cmpsb
fisubrs
xor
xlat
jecxz
xor
cwtl
cmp
rcll
xor
and
push
lock
sbb
mov
repz
xchg
imul
cld
inc
aas
mov
enter
pop
cmpsb
add
mov
ret
stos
mov
mov
lcall
pop
std
cmp
xchg
out
dec
jmp
cmp
bound
fildl
test
jae
cmp
xchg
test
adc
scas
nop
add
loopne
scas
pop
lods
shl
jne
je
into
rcrl
and
scas
int3
and
stos
dec
dec
enter
pop
or
add
lret
pop
mov
call
xor
add
pop
adcb
xor
ret
shr
push
push
lahf
mov
add
cmc
or
jno
shlb
hlt
xchg
sbb
cli
add
movsl
dec
mov
aaa
or
xor
add
dec
jg
shlb
cli
aaa
mov
cld
loope
clc
sbb
bound
dec
xor
add
lea
add
jne
ret
loope
push
loope
dec
stos
imul
inc
mov
mov
cmp
bound
sub
loopne
es
cmp
sbbb
dec
movsb
sahf
or
ja
shl
sub
je
lock
add
outsb
push
pop
std
addr16
jl
fldl
int
cmp
xor
orb
sbb
xchg
push
ret
mov
mov
ror
lahf
jno
mov
xchg
or
outsl
scas
icebp
fsubl
nop
loop
das
rcrb
fs
sub
ja
add
mov
filds
cs
out
movsb
pop
mov
aad
lods
sub
loopne
or
add
xchg
sbb
jmp
dec
jp
rolb
mov
jb
dec
xor
bound
pop
pop
fsubl
popl
adc
imul
aaa
or
cwtl
push
nop
addb
cmp
inc
in
sbb
loopne
jmp
cmp
sub
or
mov
sub
push
bound
or
jno
xchg
push
and
or
jle
out
sub
xchg
adc
daa
lret
mov
imul
mov
int
cmc
callw
outsl
push
inc
pop
cltd
inc
and
sbbb
mov
cmp
cmpsl
cld
mov
orb
call
dec
pop
outsl
adc
jle
icebp
lock
insb
adc
push
mov
in
bound
shll
sub
clc
clc
mov
push
cmp
sbb
pop
cmp
pop
in
sbbb
adcl
pop
cmpsl
cmp
and
lret
sar
in
sbbl
aaa
sbb
das
cmp
xorb
js
jne,pn
aam
add
mov
mov
add
push
cli
inc
mov
es
nop
sub
mov
mov
outsb
jb
add
cli
mov
push
rcll
data16
ror
add
mov
scas
mov
inc
adc
and
shrb
movzbl
test
pop
push
add
dec
mov
mov
add
add
and
adc
lret
lods
push
pop
les
xchg
mov
push
xchg
push
dec
rcrb
add
or
sbb
ficoms
fidivs
push
js
mov
fiadds
inc
out
rol
add
push
add
out
lds
mov
sub
out
xchg
or
mov
test
add
mov
shrl
or
fisttpll
jae
mov
and
push
stos
lcall
dec
in
or
and
xrelease
mov
jle
aam
mov
leave
pushf
int
shl
inc
movsb
and
push
adc
xor
xor
mov
cli
lea
out
push
mov
clc
rcrl
push
in
xchg
pop
dec
jecxz
lret
test
push
or
insb
mov
fsubs
cli
add
icebp
cmp
jmp
call
lcall
add
ficoml
orb
inc
push
inc
cmp
push
data16
push
movsb
sahf
mov
ret
inc
xchg
in
dec
push
test
pop
adc
in
dec
lret
inc
mov
mov
mov
sarl
push
pop
mov
push
leave
pop
cs
sti
xor
gs
xchg
xchg
dec
push
cmpsl
jp
xorl
and
add
out
pop
xchg
psrad
or
adc
int3
movsb
stos
inc
in
adc
scas
in
jnp
les
rclb
adc
call
pop
std
je
push
push
cwtl
rcrb
cld
mulb
test
bound
lret
sub
ret
fistps
test
cmp
xor
sub
mov
jns
cmpsl
aam
dec
fisubs
push
lds
xor
jg
scas
push
push
movsl
test
mov
jp
lods
push
inc
sbb
and
testb
push
add
and
cli
outsb
mov
inc
fnsave
add
lret
ds
dec
jns
push
adc
jle
or
cmp
mov
jb
jg
push
inc
cltd
push
out
bnd
jo
xchg
ret
js,pt
add
nop
or
inc
mov
jmp
inc
test
dec
or
fists
idivb
fldenv
daa
mov
mov
or
or
or
xor
fisubs
jne
scas
rcl
jo
lret
mov
push
xor
mov
dec
popf
pop
out
pop
push
aas
sbb
call
nop
cmp
std
daa
add
lods
test
addb
sbb
lods
jge
clc
les
stos
mov
adcl
cmp
sub
test
mov
test
cmc
add
dec
pop
cmp
sub
test
fcomip
subb
pop
lods
add
incb
xchg
mov
int
daa
cmpsl
sahf
out
jo
mov
inc
cmp
fildll
pop
mov
les
jmp
aam
pop
lahf
pop
mov
sub
add
fwait
clc
cli
or
mov
inc
and
mov
das
xchg
andb
inc
mov
gs
cmp
mov
fdivr
and
cmp
ss
icebp
testb
stos
cwtl
movsb
xlat
jne
cmp
sahf
push
mov
cmp
xor
lds
xor
xchg
or
jo
xchg
lcall
setle
fs
lds
mov
je
mov
cmc
repz
push
lock
stc
mov
xchg
bound
clc
cwtl
pusha
or
jecxz
add
mov
negl
aad
cmp
dec
mov
sub
outsb
or
ja
test
push
dec
fnstsw
and
dec
sbb
and
mov
dec
sahf
fildll
push
pop
sbb
mov
mov
mov
push
lock
mov
shl
ljmp
or
jo
dec
ss
dec
mov
outsb
test
daa
cld
repz
ret
lcall
inc
add
in
repnz
movsb
iret
shlb
cmp
fmuls
out
push
push
cltd
mulb
fistpll
mov
push
inc
sub
push
push
lds
cmp
sbb
in
push
push
aam
mov
jbe
shrb
pop
inc
push
xchg
dec
push
andb
pop
add
push
mov
or
es
imul
push
mov
xlat
xchg
movsl
pusha
je
adcb
push
pop
mov
sub
jne
test
aam
je
add
das
ljmp
mul
notl
int
mov
and
jns
test
add
inc
push
push
dec
test
jo
push
data16
dec
ret
pop
pop
test
js
xchg
lcall
shl
xor
cmpsl
pop
mov
out
cmp
bound
ljmp
pop
cmpb
lahf
test
loope
xlat
aam
shll
sbb
sbb
rcr
inc
add
cli
add
sub
push
or
loopne
mov
ljmp
testb
mov
loope
scas
lcall
dec
push
out
cmp
fwait
or
lock
mov
jg
push
lret
xor
in
aad
push
inc
shrb
lds
ljmp
cmp
sti
mov
jo
lods
pop
inc
mov
ret
aaa
cmp
es
jp
into
fisubs
test
dec
enter
rclb
test
sbb
add
lds
jp
mov
add
movsl
cmc
and
cmpsb
push
decb
add
jle
jp
lods
into
xchg
cmp
and
cmpsl
loope
add
mov
mov
and
or
cmpb
sahf
mov
mov
scas
pop
or
mov
xchg
jb
xchg
sarb
orb
mov
fwait
shr
ret
sbb
sub
stc
test
cmp
cmpsl
add
xchg
add
and
jne
lret
xor
aaa
bound
das
mov
mov
or
jno
inc
out
std
dec
add
int3
mov
cwtl
fdiv
xchg
outsl
add
loop
sti
fs
pop
push
pop
and
imul
sub
loopne
mov
and
fdiv
imul
fidivs
dec
mov
mov
loopne
push
inc
pusha
pop
dec
loopne
scas
jp
dec
ficomps
sbb
ja
jnp
outsb
mov
dec
jp
mov
pop
decb
mov
mov
jle
pop
add
sbb
add
or
push
push
int3
inc
loopne
cmp
sub
xchg
pavgb
outsl
inc
fwait
jl
pusha
scas
add
lock
shll
pop
push
repz
cld
jp
addr16
mov
test
xchg
pop
sub
cs
insb
jmp
stc
adc
imul
mov
xchg
push
cmp
xchg
pop
ret
push
into
insb
sub
test
loopne
repz
verr
push
popa
push
sahf
stos
inc
or
mov
adc
clc
xchg
sub
inc
rcl
push
mov
sbb
aad
ljmp
pop
xchg
adc
push
jnp
cli
pop
inc
sbb
push
push
pop
inc
mov
rolb
mov
pop
cltd
loopne
imul
mov
and
xchg
sub
pop
cmc
loope
lods
bound
dec
cmpsb
xor
mov
pop
les
orl
ja
dec
pusha
loopne
add
scas
mov
mov
dec
popaw
mov
loopne
push
push
push
dec
jp
pop
int3
incb
mov
add
pop
or
rorb
push
iret
sub
add
pop
cmp
and
push
fdivl
jne
jecxz
addr16
jo
test
xor
into
pusha
pop
cmpps
cs
loopne
loop
sti
jp
xchg
jns
outsb
enter
sbb
push
or
out
xor
shrl
pop
cmp
mov
fs
loope
int
les
inc
xor
add
insb
pushf
pop
shlb
mov
dec
out
movb
dec
mov
add
xor
loop
mov
jp
push
mov
or
jle
in
push
sub
sar
add
sub
push
shlb
cmpsl
stos
inc
pop
lcall
and
dec
pop
call
mov
dec
or
sarb
or
push
cld
repnz
les
jno
cmc
ret
pop
enter
add
das
cli
pop
insb
test
and
lcall
adc
int
adc
jg
lea
push
dec
jg
outsl
rcrl
push
mov
dec
sbb
sub
fbld
mov
jecxz
jmp
jecxz
sub
stos
pop
enter
sub
mov
adc
sbb
out
cli
push
das
push
lods
push
fadds
push
loop
xlat
jmp
sbb
and
sarb
mov
call
jb
push
cmp
xor
push
fcom
loope
xchg
fdivs
mov
dec
dec
insb
pusha
imul
adc
pop
idivl
inc
and
sti
fucomip
dec
xor
scas
int
push
add
cmpb
in
in
cmpsb
fadds
add
jmp
loopne
jbe
pop
cmp
push
enter
sub
mov
and
aad
mov
xchg
mov
adc
adc
cltd
icebp
pop
xor
jns
pop
ljmp
pop
add
pop
fcmovb
mov
mov
mov
sahf
push
daa
or
jb
mov
mov
test
sbb
add
or
sub
jo
sar
mov
cli
int3
xchg
mov
jbe
mov
xor
repnz
js
cs
test
dec
incl
fisttps
and
pop
adc
jmp
sub
test
mov
cs
or
or
loope
jg
inc
and
imul
hlt
decl
sub
pushf
pop
jno
adc
imul
stos
jo
fcmove
push
das
shrb
xor
cli
mov
sti
fisubrl
add
sbb
ret
cmp
mov
es
jle
int3
push
bound
in
pop
and
mov
pusha
popa
push
jmp
adc
add
dec
shr
dec
or
or
add
mov
pushf
psrld
dec
clc
inc
arpl
jns
and
into
or
add
mov
cli
mov
xor
repnz
iret
mov
fstpl
mov
scas
es
cltd
aaa
sbb
dec
or
rol
mov
hlt
js
push
cmp
je
xchg
out
js
fmul
xchg
test
push
hlt
dec
pop
cli
lock
fwait
mov
cwtl
out
cmp
lock
mov
xchg
out
sbb
mov
push
inc
fs
call
sub
sbb
add
add
push
sub
movsl
int3
pop
int
dec
fs
scas
mov
or
xlat
mov
pop
mov
jo
pusha
loope
sub
sbb
adc
lods
js
rolb
inc
inc
outsb
dec
dec
push
scas
pushf
fmuls
stos
es
scas
jo
iret
pop
pop
inc
dec
jg
sub
and
dec
out
xor
xchg
dec
enter
mov
push
decl
dec
lock
sub
test
jo
js
mov
shlb
and
or
push
mov
pop
test
push
fildl
rorb
ds
add
inc
cmp
pop
sbb
stos
lret
nop
cld
pushf
add
adc
cmpsl
sahf
rcrb
xchg
out
scas
pushf
movsb
lahf
ret
fistpl
gs
or
test
push
mov
je
mov
mov
subl
push
jmp
dec
rcrb
jecxz
mov
push
cmpsl
inc
add
cld
jno
popf
dec
dec
js
cmc
xchg
inc
mov
icebp
push
les
test
or
mov
sub
loop
repnz
rclb
pop
adc
movsl
jne
cli
pushf
mov
mov
cmovae
mov
lock
jl
xchg
outsl
xchg
jmp
adc
aam
or
bnd
or
cmp
shlb
aas
pop
push
lcall
lock
dec
dec
in
lock
xor
ret
icebp
push
mov
lods
lret
adc
sub
inc
ret
scas
add
lret
cmp
dec
push
dec
dec
adc
sub
add
subl
push
stos
mov
inc
fistpl
aam
jb
lahf
test
aas
mov
or
mov
dec
push
push
loope
or
lcall
sbb
push
rcll
test
adc
dec
cmp
call
or
xchg
mov
test
test
out
ljmp
cmp
xchg
or
mov
popf
negb
sub
push
jge
into
andb
fwait
aaa
ljmp
xchg
inc
mov
arpl
or
mov
cmp
push
cmpsl
inc
in
loopne
sub
pop
jle
test
fcomps
pop
in
incl
lods
mov
xor
or
mov
mov
lock
mov
out
sbb
dec
xchg
js
xchg
jnp
pusha
add
aad
xor
scas
test
rorb
adc
enter
mov
sbb
push
sarb
or
cwtl
outsb
jmp
lock
clc
push
in
mov
into
cmpsl
adc
sbbl
xbegin
mov
jo
fimull
sbb
addr16
es
xchg
mov
sarl
es
cmp
inc
cmpb
adc
loopne
enter
jbe
out
not
cmc
out
jecxz
push
movsl
jo
sbb
es
divb
push
xor
test
pop
insb
mov
cli
ret
loope
jmp
cmp
paddb
pop
jns
outsb
push
orl
faddl
lcall
and
mov
inc
nop
mov
cli
insl
add
push
ja
add
push
mov
in
test
in
lods
or
inc
mov
xchg
fcomps
lea
je
mov
dec
scas
arpl
xchg
push
jmp
or
adc
data16
or
and
or
sahf
test
and
dec
loope
or
inc
adc
mov
add
fs
sbb
clc
iret
pop
inc
mov
push
jp
outsl
insl
lret
ss
push
cmp
mov
xchg
jno
clc
adc
jb
sbb
ja
mov
xorl
dec
scas
mov
sti
mov
xor
xchg
outsb
jg
pop
fdivr
add
sbb
jl
and
ret
rcll
mov
lahf
add
mov
mov
js
sub
fwait
xorb
xchg
push
mov
insb
push
xchg
sbb
cwtl
inc
push
sub
fs
inc
out
dec
and
push
clc
dec
adcl
int3
mov
fwait
test
jl
int3
pop
aad
in
cmp
stos
aas
in
push
jge
and
jp
push
jmp
ret
es
push
mov
lea
lcall
pop
outsb
push
rcll
movsb
loope
mov
lret
mov
adc
aaa
outsb
js
inc
push
add
ret
les
push
les
aas
adc
push
shlb
pushf
or
sub
lods
mov
mov
mov
in
cmpsb
clc
or
je
push
lcall
and
rorb
call
pushf
out
out
movb
xor
and
and
mov
mov
incl
pop
mov
iret
mov
jecxz
jmp
cmpsl
push
aad
push
shrl
mov
call
xchg
or
mov
adc
sbb
insb
pusha
rorb
shrl
xchg
lock
add
inc
inc
xchg
iret
loopne
sti
rdtsc
lock
add
out
cwtl
rclb
scas
push
sarb
inc
pusha
dec
insl
jmp
mov
sub
clc
cmp
ret
je
mov
inc
pop
jp
mov
dec
jle
cmp
mov
inc
pop
fisubrs
ljmp
push
in
jl
mov
mov
xor
pop
inc
lods
lods
sub
sub
inc
pop
test
mov
out
or
leave
mov
mov
inc
dec
push
movsb
inc
push
jecxz
sbb
rol
not
sub
sub
fstps
push
std
jl
add
clc
mov
repz
dec
and
mov
dec
pop
loopne
xchg
fcomp
xor
add
rorb
push
je
lods
fdivrl
lock
int
sbb
adcl
into
insb
ljmp
cld
hlt
xor
add
jo
lahf
cs
icebp
push
push
pop
mov
sbb
cmpsl
lock
lock
fs
aam
inc
mov
dec
lds
cmp
dec
cli
inc
cltd
pop
inc
and
outsl
mov
cld
test
rolb
ret
mov
lahf
rorb
adc
mov
outsl
insl
aad
or
dec
pop
sahf
push
enter
lcall
xor
xor
sub
outsb
sbb
cltd
sbb
inc
hlt
cmp
ljmp
mov
mov
ret
mov
fs
clc
out
ljmp
mov
ds
std
xchg
cs
sbb
cmp
jecxz
pop
clc
stc
lock
repnz
mov
cli
pop
jp
vcvtsd2ss
dec
dec
loopne
xchg
push
cld
lea
out
lcall
pop
icebp
pop
fdivr
shlb
repz
dec
fidivs
fdivl
rcl
out
hlt
push
adc
fistpl
enter
lods
dec
pop
pop
adc
jne
add
xor
sbb
dec
mov
pusha
cmpsb
mov
mov
fmull
adc
pop
mov
inc
mov
or
cltd
sarb
aaa
std
jmp
xchg
invd
and
sahf
into
or
rorl
fcomi
mov
push
fsts
lock
push
popl
repnz
ret
js
sbb
aaa
in
call
lods
out
addb
pop
mov
rorl
xor
lock
sbbb
rsqrtps
dec
push
in
mov
mov
lcall
test
push
test
stos
scas
call
push
adc
add
push
fwait
mov
fdivr
sub
adc
mov
ja
ljmp
in
inc
sbb
lahf
test
push
out
popf
push
pop
scas
cmp
sub
sbb
je
aas
and
lahf
sbb
xchg
scas
insb
xchg
inc
icebp
or
inc
imul
pop
jne
xchg
out
ficomps
js
mov
mov
ret
dec
fs
fs
adc
adc
xchg
push
inc
adc
and
jo
ja
mov
fucomip
add
es
aad
adc
jmp
and
pop
rclb
adc
mov
stos
ret
cli
je
and
popa
sub
push
or
cmp
negb
scas
sbb
inc
inc
jb
shlb
cmp
out
idivl
add
xchg
lock
repnz
pop
into
sbb
js
dec
dec
cmp
xorb
or
inc
dec
cld
dec
out
outsb
xor
inc
cmp
mov
or
jmp
cmp
xchg
jle
add
fs
inc
pop
mov
xchg
xchg
xor
inc
mov
xchg
xor
mov
or
outsb
ljmp
xor
mov
imul
fmull
dec
gs
mov
imulb
push
fisubs
sahf
jo
push
and
mov
xor
popl
xchg
or
push
aas
push
add
aad
or
mov
add
push
pushf
or
loop
rcll
cmp
adc
push
sti
jo
dec
js
pushf
das
aad
jnp
imul
dec
icebp
mov
add
mov
pop
xor
jne
sbb
jge
push
sbbb
mov
add
cli
inc
sahf
sub
or
js
std
cmpsl
jbe
add
mov
lock
aad
call
outsl
mov
dec
sbb
add
pushf
cli
stos
aam
xchg
js
mov
out
shll
ljmp
xorl
xchg
insb
mov
add
mov
lahf
sub
add
dec
xor
jae
inc
inc
inc
pop
cli
pop
rcrb
jb
sbb
cmp
jo
mov
lods
push
outsl
push
push
in
popa
xchg
xchg
push
push
lock
ljmp
mov
sub
lods
sahf
push
movsb
or
popa
adc
iret
into
shll
repz
fdiv
mov
outsb
mov
insl
cmp
xchg
lock
outsb
fs
lret
jp
sbb
add
or
jge
add
pop
orb
add
jb
mov
push
inc
les
and
pop
and
pop
test
scas
call
push
mov
push
js
lea
mov
or
mov
push
xchg
cmp
negl
adc
dec
dec
outsl
cwtl
jbe
pop
insb
push
adc
lret
icebp
add
pop
mov
ficoml
push
or
lret
mov
outsb
js
ds
mov
aam
clc
push
and
sub
cmp
sti
xor
inc
mov
and
or
push
cmp
mov
sbb
mov
lock
dec
insl
lods
mov
sahf
movd
adc
ror
dec
js
inc
xlat
jp
movsb
mov
jmp
adc
or
mov
fdiv
xor
cmc
in
mov
ret
test
ror
pop
nop
loop
adc
mov
je
movsb
jge
insl
pushf
ret
ret
adc
shr
xor
xchg
sbb
xchg
or
frstor
and
cmpsb
and
lock
push
sub
inc
or
jmp
mov
popa
inc
push
aaa
push
test
or
xchg
mov
sub
inc
sahf
mov
sbb
push
push
mov
inc
inc
pop
add
rcrb
mov
pop
pop
stos
aaa
cli
clc
rcll
js
out
push
mov
mov
in
out
fisubrs
xchg
icebp
pusha
add
leave
movsl
lret
sbbb
lcall
aam
int3
or
pop
fcoms
stos
dec
xor
sar
add
int3
mov
jp
test
cmp
sbb
in
pop
jnp
push
scas
rorb
or
ljmp
es
cmpb
mov
insb
jno
inc
rclb
adc
xor
jecxz
jl
fdivrs
das
and
cmp
sub
jnp
add
push
or
add
inc
outsl
clc
out
sbb
xor
push
jns
test
add
inc
cmp
mov
ret
scas
in
fcmovnu
roll
or
cmp
cmp
push
sarb
xchg
sub
and
cmpb
push
add
movsb
push
and
loopne
clc
cmp
jg
cmp
mov
add
inc
or
aad
or
scas
jl
xchg
addr16
sbb
jecxz
push
mov
mov
dec
cs
ss
mov
jle
and
and
or
jl
movb
imul
inc
shr
cmpsb
aad
jns
imul
jbe
adc
sbb
in
stc
subb
mov
dec
pop
dec
fadds
ljmp
adc
jp
mov
xor
mov
jle
aas
cmp
lahf
push
push
incl
inc
sbb
lea
mov
aas
es
pop
mov
mov
mov
mov
insb
inc
sbbl
pop
jmp
cmp
movsb
xchg
mov
fldt
mov
inc
xchg
sar
cmp
cmpsl
xchg
pop
mov
cmp
cli
xchg
call
cmp
inc
cmp
mov
ret
clc
je
enter
std
jle
enter
or
push
sbb
pop
pop
scas
inc
adc
mov
inc
mov
sbb
stos
or
dec
fidivrs
mov
fiadds
xchg
jns
xchg
rcrb
pop
fnstcw
cmp
adc
test
mov
mov
nop
inc
scas
hlt
es
push
loopne
rclb
mov
data16
push
inc
or
mov
mov
std
aas
dec
xor
dec
jg
inc
subb
add
nop
movsl
jmp
fcmovb
repz
mov
movsl
fst
outsb
fcoml
fmuls
call
lret
movsl
add
les
dec
mov
cmpsb
pusha
cmc
aam
hlt
insb
xchg
cmp
adc
mov
fs
mov
adc
dec
push
jmp
mov
dec
shrl
fldcw
callw
inc
adc
inc
ret
add
lds
ret
testb
push
bound
movl
sub
and
pop
jnp
in
jo
push
mov
sbb
xor
outsb
and
sbb
cmpb
xchg
dec
sub
xchg
outsb
mov
test
ret
cli
xlat
clc
pop
xor
cmc
mov
mov
xor
and
ss
xchg
jl
aad
mov
or
sub
lds
into
push
mov
jecxz
jle
pop
andb
aam
cmpsb
lret
pop
or
int3
rolb
iret
and
ret
jge
xchg
inc
jge
lds
lea
adc
and
jno
loop
xchg
incl
outsb
pop
jmp
mov
add
testl
or
popf
loop
or
inc
jecxz
push
cmp
pop
cmpsl
or
adc
notb
mov
fidivrs
ljmp
mov
push
test
fcompl
cmp
pop
leave
gs
mov
ficoml
cmp
jo
and
je
cmp
je
cmp
jmp
loop
subl
adc
mov
sti
inc
ficoms
adc
add
aaa
std
ljmp
rcrl
imul
and
pop
adc
repnz
nop
lahf
cmp
mov
inc
mov
pop
int
and
ds
testb
cmp
dec
cs
shlb
shlb
pop
mov
mov
movsb
popa
add
mov
adc
pop
mov
add
pop
cmp
aas
mov
jle
fmul
cmp
push
cmpsl
shlb
call
mov
jmp
adc
dec
mov
mov
cld
sbb
dec
or
hlt
and
fsubr
xchg
movsb
and
or
sti
push
in
sbb
mov
sub
test
js
fisttpl
or
aaa
sub
push
outsl
ds
cld
or
loop
popa
dec
in
sub
test
sub
xor
sbb
mov
push
sarb
cmp
jmp
fiaddl
test
add
mov
pop
shl
and
pop
jmp
jg
outsl
adc
xor
or
xchg
pop
sub
popf
add
push
nop
cmc
add
lock
clc
inc
xchg
inc
in
jbe
arpl
mov
sub
pop
or
fistpll
cmc
or
cmp
xor
sbb
sub
mov
push
adc
js
lahf
push
les
mov
inc
xchg
pop
and
push
jp
cmpb
push
push
push
jo
cmp
ja
ret
push
or
inc
sbb
inc
clc
adc
jns
insb
push
jecxz
js
inc
fdivrl
mov
js
cli
jmp
aad
insl
test
jo
imul
cwtl
lds
sahf
dec
clc
dec
push
cld
and
fcom
and
mov
test
scas
dec
jg
push
daa
fadd
mov
das
sahf
push
mov
sbb
add
or
cltd
push
dec
loope
mov
pushl
cmc
data16
pop
pop
pop
mov
in
mov
add
mov
inc
fisubl
imul
icebp
mov
mov
fucomip
jns
cmpsb
add
sbb
jbe
add
jmp
inc
rorb
imul
test
addb
dec
or
rclb
push
hlt
lods
sbb
sbb
test
outsl
cli
daa
mov
push
movsb
in
lods
sarl
pop
sbb
add
or
pop
out
clc
addr16
loop
push
std
xchg
ljmp
xorl
lds
push
sub
jno
ficompl
sahf
arpl
pop
cmpsl
aam
pushf
or
out
mov
sbb
inc
cs
xor
andb
cmpsl
add
pop
fcmovne
mov
adc
test
jle
sbbl
push
pop
sub
cld
ret
add
pusha
fwait
sbbb
cmp
mov
xchg
insb
out
ds
cltd
loopne
shlb
les
sbb
adc
push
xchg
repnz
push
sbb
sbbl
inc
xchg
out
into
repz
push
push
jge
cli
jae
adc
out
push
pop
push
cmpsl
loopne
fidivrs
fnstsw
bnd
rclb
xchg
in
adc
mov
push
mov
jle
in
cmpsb
stos
push
pop
loopne
adc
pop
inc
dec
aam
scas
stos
adc
or
stc
jl
enter
icebp
mov
notl
clc
ja
pop
loop
pop
xlat
ret
jp
cmp
vmovsd
adc
nop
into
test
out
test
xchg
inc
cmp
cmpsl
repz
cmpsl
and
inc
or
jl
inc
fdivrs
std
lock
fdivrl
nop
loopne
hlt
jbe
gs
cli
popw
andb
mov
addl
push
bound
lock
ss
mov
push
adc
sub
sbb
push
sbb
jb
clc
test
call
dec
repnz
mov
push
test
sbb
mov
dec
xchg
xchg
adc
fbld
icebp
inc
fwait
adcb
or
jle
and
testb
inc
mov
mov
sbb
test
cmp
je
mov
pop
or
inc
lcall
add
sbb
movsl
out
dec
mov
bound
shlb
or
xchg
adc
cmc
mov
push
insl
sbb
in
stos
dec
out
std
adc
adc
xchg
jg
sahf
mov
adc
stos
pushf
cmpsl
pop
int3
xor
adc
lods
sti
and
cmp
sub
loopne
cwtl
sbb
shl
insb
sub
lock
mov
rorl
cmp
add
lods
movsb
mov
inc
sahf
divl
inc
xchg
movb
adc
fiaddl
mov
cmpsb
sbb
pop
les
and
mov
sbb
inc
xchg
cwtl
test
sub
xor
inc
add
inc
mov
xchg
popf
lret
dec
rorb
push
daa
scas
bnd
xorb
movsb
in
mov
and
scas
fcomps
repnz
cmp
call
or
mov
add
inc
push
and
mov
ss
sarl
pop
jge
mov
mov
cs
add
dec
ljmp
das
jle
scas
and
or
cltd
in
lea
clc
mov
sarb
mov
xchg
push
and
jl
dec
add
imull
cmpsl
add
jl
ja
push
adc
sub
mov
mov
sbb
fwait
stc
lret
ss
in
sub
pop
jbe
mov
sbb
emms
cwtl
int3
stos
sub
jg
mulb
cmp
add
mov
push
sahf
adc
pop
mov
js
add
fcmovnu
into
stos
cmpsb
ret
ss
add
cmpsb
pop
and
pop
pop
fisubrs
xlat
ss
adc
cmp
or
fiaddl
mov
inc
or
lds
sbb
arpl
mov
andb
sub
shll
orb
fs
xlat
mov
mov
push
pop
xor
cwtl
sbb
push
fcos
cs
jno
insb
repz
cmp
test
xor
nop
cli
push
mov
cmp
jmp
and
mov
gs
loopne
nopl
xchg
dec
ret
gs
dec
push
lods
ret
aam
add
sarb
and
pop
into
inc
das
insl
aas
xchg
jle
jnp
out
or
ret
ret
xchg
bound
icebp
mov
dec
push
pop
jns
jg
leave
into
inc
outsb
xor
sbb
mull
fcmovnb
stc
inc
xor
mov
fildll
xchg
std
and
jnp
dec
adc
and
or
and
jg
jecxz
mov
testb
test
sarb
mov
fsubr
mov
xor
xchg
dec
incb
stos
ss
rorl
fwait
aas
mov
cmc
shll
in
mov
das
jge
cli
sub
cmp
filds
jg
add
or
jo
mov
cmp
addr16
fwait
jecxz
out
xchg
pusha
lcall
mov
sbb
mov
ficoml
add
call
fistps
fdivs
dec
cmp
js
cld
mov
dec
add
and
daa
bound
nop
sbb
mov
jge
xor
movsl
sahf
mov
mov
push
dec
pop
scas
ret
imul
mov
mov
mov
lcall
clc
lock
push
push
add
test
test
xchg
nop
in
pop
or
int3
fiaddl
mov
dec
enter
pop
fcmovbe
cltd
xlat
pusha
mov
xchg
cmc
push
fmuls
loopne
mov
jle
shr
fwait
xor
mov
mov
loope
lcall
xor
int3
loop
mov
fiadds
lods
pop
inc
in
xor
sarl
add
cmp
xor
xchg
outsb
imul
pop
test
and
dec
stc
fsubrs
das
clc
cmp
pop
lods
push
mov
test
inc
lock
clc
adc
jmp
aad
fdivl
jo
enter
hlt
inc
pop
es
rcll
xchg
jno
and
add
stos
and
into
and
shr
mov
arpl
xchg
cld
jns
call
jno
aaa
sbb
call
js
inc
fidivs
stos
inc
jp
imulb
ret
adc
scas
notb
xor
iret
sti
push
xchg
xor
push
sbbb
xor
icebp
aaa
mov
hlt
pop
pop
push
jb
rorl
push
xchg
xchg
cmpsl
xchg
repnz
popa
xor
xor
setb
bound
popa
rcrb
fsqrt
jp
sbb
aam
and
push
mov
mov
inc
sbb
sbb
add
adc
jmp
dec
rcrb
lods
pop
rol
add
pop
push
lret
in
inc
xchg
addl
inc
mov
mov
sbb
sub
pop
in
call
mov
pop
out
mov
cmp
mov
out
cmp
popa
push
add
das
and
and
sbb
pop
mov
test
fidivl
flds
fdivr
out
imul
dec
mov
fbstp
ror
jmp
clc
lds
dec
sbb
movsb
scas
mov
push
imul
test
add
nop
outsb
es
adc
mov
sahf
push
mov
push
xor
cwtl
jl
dec
inc
rol
clc
xchg
jb
sahf
xor
mov
imul
gs
jl
push
ja
add
aam
pop
out
lahf
add
cmp
mov
hlt
sub
xchg
and
jge
ficompl
push
or
jmp
lret
mov
jl
mov
push
mov
lahf
push
pop
das
rcl
scas
adc
int
nop
test
jb
mov
fwait
mov
add
dec
or
loope
and
faddl
mov
push
pushf
sbb
mov
test
sub
push
fmull
int
jle
incl
mov
sarb
pop
xor
fsubs
push
insb
mov
ja
insb
repz
cli
adc
sbb
sbb
and
cmp
test
push
lcall
lcall
and
movsl
mov
cli
int
lods
mov
xor
inc
addl
jmp
mov
arpl
pusha
int3
mov
lock
cmp
push
inc
pmulhw
clc
jle
mov
dec
add
retw
and
hlt
fidivl
ja
or
jns
mov
daa
loopne
call
fildll
pop
lods
shrl
loope
adc
cmp
push
popa
push
in
mov
sbb
ljmp
sbb
cmp
and
adc
repnz
out
pop
jp
push
push
into
loope
and
pushf
push
div
push
lahf
mov
mov
cld
js
cmp
lcall
gs
sysexit
cmp
mov
inc
sarb
mov
mov
and
push
pop
js
lock
or
das
mov
cmpb
sbb
jns
and
fisttps
adc
loop
out
subl
fdivp
xchg
gs
sub
test
jp
data16
mov
push
rclb
or
mov
xchg
jmp
adc
ficoms
lock
push
push
xor
add
cmp
push
es
cmp
sbb
outsl
sbb
mov
stc
movsl
add
cwtl
adc
pop
mov
into
mov
xchg
insl
or
repnz
int
out
clc
pop
in
dec
mov
sbb
cmc
out
idivb
jae
mov
and
inc
mov
add
jg
inc
negl
dec
dec
xchg
adc
mov
test
lods
ret
cmp
inc
test
dec
test
int3
mov
stos
loopne
or
clc
mov
imulb
sub
cmp
push
add
pop
fcmovne
mov
shrb
call
dec
inc
mov
lock
ret
subb
pop
xor
push
dec
sub
inc
es
jns
add
dec
popa
mov
dec
movsb
stos
mov
imul
inc
add
das
pop
mov
jl
in
sbb
jo
pop
ja
pusha
sub
cmpsb
dec
or
cwtl
lret
mov
jb
push
xor
and
mov
hlt
in
mov
pushf
add
scas
cmpsb
adc
mov
dec
pop
push
jl
adc
lock
test
stos
push
cli
stos
clc
mov
aam
add
mov
mov
inc
and
push
cmp
push
fs
mov
and
shrl
mov
fmuls
pop
lock
mov
and
rolb
into
iret
add
gs
sahf
in
stos
ds
rorb
xor
dec
sbb
mov
rorb
pop
or
in
fstps
movsb
inc
jecxz
xor
mov
add
pop
clc
test
cmp
pop
inc
xor
jno
aaa
push
mov
xchg
cli
les
sub
and
sti
adc
mov
out
cwtl
test
lds
sbb
push
add
sub
mov
loopne
or
lea
push
outsb
pushf
jmp
std
ret
adc
mov
aaa
cltd
mov
lock
xorl
loop
or
sub
mov
xlat
rorl
push
ss
xor
xor
call
or
xor
sbb
mov
pop
insl
mov
jmp
hlt
adc
sbb
push
push
mov
shl
cld
and
adc
or
pop
test
enter
push
ret
jle
sti
mov
jg
fld
or
mov
mov
loop
xchg
cmpsl
jge
mov
inc
pop
push
pop
call
mov
arpl
sti
or
loopew
mov
xor
pop
push
popa
push
lcall
mov
test
stos
sub
ljmp
stos
push
dec
cltd
inc
lret
sub
xchg
stc
in
cmp
cmp
ljmp
in
lret
add
sub
pop
mov
xor
sub
incb
das
mov
inc
and
es
mov
jmp
jmp
bound
cmpl
repz
xor
int3
pop
fcoms
stos
mov
adc
aas
adc
push
insl
jno
jno
mov
vcvtss2si
mov
popa
lds
pop
mov
mov
dec
imul
mov
pop
push
pop
sbb
fcmovnb
mov
mov
fistpl
push
push
xchg
call
lock
incl
adc
mov
sahf
in
mov
js
or
sbb
inc
xlat
call
ja
clc
scas
insb
mov
mov
mov
test
xchg
jo
fsub
mov
pop
icebp
mov
lret
cmpb
adc
pop
ss
push
adc
inc
js
dec
fdivr
mov
test
push
add
or
jbe
xor
pusha
out
aam
flds
mov
fsubrs
push
fs
sub
xlat
insl
rorl
adc
testb
lea
inc
mov
xchg
loop
es
pop
or
fidivrl
mov
xchg
add
sub
jle
or
fildl
and
jg
cmp
dec
dec
into
aaa
je
xor
test
jmp
aas
inc
cmp
sbbl
mov
dec
lret
add
push
sbb
and
dec
jno
les
sbb
shll
sub
mov
icebp
out
sbb
push
mov
out
adc
push
loope
pop
jbe
in
lret
pop
sub
sarb
ffreep
xchg
in
imul
rorb
in
insb
insb
add
popa
push
or
icebp
xchg
inc
adc
js
mul
scas
mov
xchg
xor
movsb
test
lods
movsb
stos
lds
xlat
and
fcmovu
dec
add
cmc
mov
or
dec
push
and
mov
loopne
push
fwait
inc
aad
imul
mov
mov
bound
test
pop
andb
cmp
stos
mov
add
push
adc
ret
decl
int3
popf
gs
cmpsl
pop
xor
in
inc
jle
sbb
aam
inc
cmp
movsb
jo
mov
add
pushf
mov
out
pop
fs
jo
inc
fstpt
cmp
cmpb
stos
std
push
inc
clc
add
ss
popf
add
mov
sahf
add
add
push
jl
dec
pop
push
inc
aam
repnz
decl
cmp
lret
pop
mov
ds
push
sbb
push
stos
fidivs
call
daa
popa
xchg
aam
add
jo
dec
aaa
xchg
aad
fidivrl
jo
push
test
shlb
and
cmp
lds
repz
push
cs
pusha
mov
push
inc
push
loop
lea
sub
mov
and
lret
or
sbb
or
mov
cmpb
adc
mov
cmpsb
es
jmp
push
clc
cmp
shll
push
cltd
sub
scas
mov
test
xchg
out
jne
adc
sbb
das
scas
nop
sbb
ds
ds
mov
int
adc
es
js
outsb
jg
sub
mov
xchg
jns
loopne
jb
lea
jo
jne
xor
loopne
adc
mov
pop
daa
adc
mov
sbb
test
cltd
dec
adc
mov
fsubrl
push
pop
daa
push
movsb
mov
fiadds
fcomip
lods
xor
mov
jmp
addr16
and
dec
or
je
jo
mov
lods
push
and
lahf
jg
test
rcl
sub
inc
add
fldl
mov
cmp
daa
hlt
push
dec
mov
dec
adc
add
iret
or
clc
push
jge
push
pushf
or
stos
in
ficompl
mov
adc
aas
repnz
je
push
pusha
in
xor
push
add
push
je
ljmp
dec
adcl
inc
cwtl
addr16
les
scas
scas
pushf
jg
sti
mov
inc
inc
subl
pop
lret
insb
add
fnstsw
push
sub
cs
ret
lahf
cmovp
inc
pop
into
add
add
aaa
andl
pop
nopl
or
das
clc
loope
mov
dec
mov
aad
pop
dec
out
icebp
scas
je
dec
jno
lcall
add
dec
dec
adc
or
fadds
push
mov
pop
dec
xchg
sub
inc
mov
js
or
or
ljmp
js
sbb
mov
mov
push
je
ret
ret
stos
xor
pop
hlt
jg
fists
pop
jo
daa
jl
jne
pop
fdivrl
or
sub
sbb
outsl
dec
ret
mov
push
and
inc
ss
shrb
loop
out
mov
cli
insl
inc
sub
push
pop
sti
adc
lock
pop
hlt
add
mov
jae
shlb
mov
mov
lods
jbe
add
inc
pop
cli
xchg
push
push
cmp
int3
jg
js
mov
sub
loopne
das
clc
jmp
cs
icebp
add
mov
sub
lret
sbb
cld
mov
push
mov
jg
jl
lods
add
jge
shrl
lcall
cmpsb
xchg
xor
stos
ds
and
mov
and
jecxz
cwtl
lahf
addr16
clc
mov
add
bound
jb
jp
and
and
outsb
dec
scas
xchg
pop
mov
pushf
outsl
push
fcmovbe
pop
mov
imul
add
movsl
and
scas
mov
lret
sarb
cmp
mov
cmp
push
pop
and
sub
movsl
dec
enter
mov
scas
adc
out
mov
fs
repnz
or
jmp
sahf
push
mov
fsubrs
ds
inc
dec
es
andb
addr16
or
sbb
ffreep
aas
testb
xor
or
outsl
out
scas
pop
scas
in
xchg
setbe
xchg
mov
push
xchg
push
sbb
pop
push
aad
mov
mov
cmc
add
xchg
jo
stos
loope
mov
loopne
js
adc
lock
push
cmp
rcl
inc
popa
aad
jge
mov
pop
pusha
rcrb
leave
mov
xor
or
adc
jecxz
orl
mov
std
cmp
scas
adc
jl
sub
hlt
in
dec
add
push
and
mov
inc
shll
adc
mov
xchg
xchg
mov
inc
shrb
dec
test
add
into
add
xchg
cmpsb
pop
nop
or
mov
sbb
cmpsl
mov
shr
sbb
in
scas
scas
cmp
mov
push
aam
pop
adc
sub
in
in
xlat
ror
test
and
push
cmovo
push
in
nop
ja
push
daa
push
mov
mov
mov
int
rolb
xchg
test
ficomps
inc
push
push
xchg
pusha
sub
stos
inc
mov
xor
dec
test
shll
test
xchg
inc
and
lahf
jecxz
mov
pop
mov
push
pop
out
jp
dec
mov
repnz
mov
inc
pop
je
pop
fs
sbb
dec
jns
adc
add
and
xor
adc
test
mov
mov
jl
ja
lods
fwait
arpl
pop
fcomp
mov
std
jbe
dec
std
out
sbb
dec
ja
mov
add
pop
fcompl
ficoml
add
inc
sub
into
int3
xchg
rorb
sub
es
push
test
cld
dec
loope
xor
inc
xor
and
jo
mov
lcall
imul
dec
in
inc
xor
xchg
inc
push
ds
dec
cmp
int
mov
jle
outsl
adc
cs
mov
loop
loope
ret
pop
cwtl
nop
xchg
or
sbb
adc
push
cmpsb
xor
pop
loop
jmp
incl
orb
jno
mov
pop
add
mov
roll
pop
sar
mov
aas
push
cmc
add
adc
or
add
inc
in
dec
jecxz
or
mov
and
das
xor
cmp
stos
test
and
mov
scas
jno
dec
sbb
mov
dec
jl
mov
inc
dec
xchg
sbb
sub
js
mov
mov
add
inc
lahf
fdivrl
pop
pop
jecxz
or
jo
repnz
mov
loop
icebp
or
xchg
push
push
mov
xchg
js
xor
lods
pop
lcall
sub
clc
pop
mov
data16
mov
and
adc
and
inc
nop
fs
pusha
push
mov
sti
xchg
loop
add
or
inc
fcmovu
cmp
addr16
sbb
adc
dec
add
mov
mov
pop
hlt
ja
cli
data16
pause
xchg
sbb
mov
inc
jmp
mov
icebp
cmp
mov
mov
xlat
int3
cmp
fadds
mov
jl
and
xor
add
inc
adc
and
fildll
inc
aas
mov
mov
cli
pop
add
addr16
dec
lods
test
clc
ja
add
outsb
ja
popa
test
xchg
or
dec
xor
lret
fidivl
mov
adcb
adc
cmpsb
stos
int3
mov
inc
push
push
push
mov
addl
mov
jle
and
mov
sub
or
and
jge
jg
mov
jl
or
in
in
adc
sub
loopne
popa
cmc
call
mov
jo
jge
jge
mov
popf
push
sahf
pop
xor
dec
daa
imul
nop
push
iret
cmpsl
xor
mov
ljmp
push
adc
jmp
dec
shlb
dec
xchg
add
notl
pusha
imul
pop
mul
mov
sbb
cmp
jbe
mov
inc
adc
or
mov
inc
movsl
fdivrl
mov
adc
and
pop
pushl
xchg
xor
fs
jmp
add
sub
loope
mov
sbb
cwtl
push
pop
jo
sahf
inc
lahf
mov
pusha
sbb
xchg
ljmp
dec
dec
lea
mov
clc
fistl
into
inc
mov
add
jbe
lock
pop
push
lahf
jecxz
cmp
xchg
iret
or
cmc
jmp
je
negl
jle
stc
orl
test
adc
repnz
or
lods
or
enter
jecxz
mov
test
push
pop
adc
or
sub
jmp
lcall
add
sahf
cli
scas
adc
mov
cmp
push
in
mov
mov
call
int3
mov
cwtl
js
xor
dec
xor
mov
mov
in
fsubs
outsl
cmp
and
repz
xchg
mov
push
mov
scas
ret
iret
jnp
adc
cli
lret
or
mov
dec
cmp
stos
sbb
push
jae
je
mov
adc
or
addb
add
fstl
out
adc
dec
cmpsl
out
xchg
cli
cmc
push
add
fcoms
mov
mov
ds
dec
loop
int
add
aaa
or
nop
xchg
xor
daa
or
push
lret
rclb
jbe
mov
mov
mov
sbb
aaa
add
or
pop
or
jne
in
out
cld
stos
std
xchg
sbb
adc
icebp
mov
lods
shlb
test
inc
pop
test
out
xchg
rolb
ljmp
pusha
sbb
xorb
hlt
gs
fsubrl
cmp
fcomps
add
add
daa
push
cmp
sar
ljmp
ret
pop
cmp
dec
popf
loopne
mov
inc
int
in
outsb
add
aaa
std
push
sub
add
orb
xor
inc
pushf
cmc
push
icebp
incl
and
jecxz
add
int
or
outsb
hlt
cmp
inc
xor
lret
fwait
js
insl
test
cmp
push
in
pop
xchg
jmp
cmp
lock
scas
xchg
push
shr
into
aam
dec
int
out
repz
sbb
pcmpgtd
add
aam
xchg
insl
enter
sbb
mov
in
and
cld
inc
outsl
in
sbb
je
clc
cmp
stos
xchg
add
loopne
aaa
sarb
pop
icebp
mov
lods
test
out
push
cld
mov
bound
movsb
and
ret
add
and
arpl
incl
out
and
jae
push
mov
hlt
std
arpl
mov
dec
leave
fsubl
mov
pop
fwait
lea
sbb
int3
add
xchg
dec
pop
sub
mov
data16
bound
adc
lret
fwait
or
es
lcall
movsl
scas
mov
and
push
cmp
nop
mov
scas
lock
push
popa
les
jne
shll
xchg
sub
popa
and
fwait
psubq
mov
fdivrs
enter
or
dec
mov
and
test
push
hlt
pop
xor
cs
cmpsb
or
jecxz
stos
adc
sub
cmp
push
aaa
or
loop
jg
or
mov
cltd
aaa
cld
sub
push
push
push
push
cltd
repnz
in
mov
lock
aam
sbb
inc
add
orb
adc
xchg
loope
aam
xchg
pushf
push
insb
and
sbb
fists
cmp
mov
dec
arpl
inc
sbb
push
sbb
pop
mov
or
add
mov
or
popa
mov
rcrb
out
fsubs
cld
into
inc
adc
aaa
and
dec
cmp
shlb
shll
jne
test
ljmp
lock
out
jl
leave
mov
shrb
and
dec
daa
cmp
fdivrl
scas
clc
xchg
test
aam
xchg
mov
ss
dec
stc
iret
repz
and
dec
jge
sbb
inc
push
fnclex
out
jo
jl
dec
les
insb
adc
movsb
mov
inc
inc
jnp
ss
push
jl
pop
xor
movsl
jae
push
push
mov
add
sti
icebp
mov
rcrb
mov
or
imul
popa
mov
sbb
ja
mov
xlat
or
out
incl
mov
nop
cs
sbb
push
stos
or
adcl
adc
loopne
push
movsb
sbb
mov
xor
aaa
xchg
adc
push
loopne
and
test
outsl
inc
rcll
repz
daa
loop
js
lods
ret
adc
lods
fidivs
lcall
mov
add
and
cld
push
cmpsl
jecxz
loopne
push
cmp
add
mov
incl
insb
jg
mov
add
push
mov
cmp
ds
cmpl
ret
lcall
lret
scas
or
clc
mov
inc
cmc
jge
lea
jle
pop
sar
sub
jle
jle
jl
inc
inc
pusha
dec
xlat
and
or
mull
mov
popf
sub
push
xor
ljmp
push
pop
sbb
insb
adc
push
sub
fwait
or
rcr
rorl
sahf
cs
jecxz
andb
mov
icebp
push
packssdw
push
mov
push
push
inc
sarl
xchg
les
jo
call
aam
sarb
dec
popa
push
cs
sbbb
ds
idivb
test
xchg
mov
jae
sbb
hlt
shrb
jge
sbb
in
fstps
icebp
sbb
ljmp
int3
hlt
inc
in
int
xor
insl
cld
push
push
mov
dec
outsl
add
vpmaxsw
pop
xlat
nop
dec
test
xor
push
fmuls
jb
push
pop
mov
mov
inc
push
les
push
test
fnstcw
or
cs
shl
or
mov
adc
lock
fdiv
out
pop
jo
mov
movsb
outsl
jl
in
add
xor
xor
cwtl
adc
pop
call
cmp
xor
adc
insb
push
sbb
xor
adc
dec
dec
dec
or
pop
cli
or
loop
ds
cld
cld
repnz
fcomi
sbb
push
cmp
sub
clc
shr
mov
mov
cltd
add
mov
and
insl
lcall
sub
into
push
xor
insb
adc
xchg
and
sub
cwtl
dec
add
test
fcomi
stos
insb
jmp
jo
fs
aad
mov
cmp
push
js
sub
adcl
jbe
insb
jo
ljmp
in
jge
adcl
cmp
insb
push
and
jb
cmp
mov
mov
adc
lock
xchg
lds
shl
fsubrl
scas
and
fbstp
add
cmp
cmpsb
or
and
imul
fxch
outsb
push
sbb
iret
ret
add
and
mov
or
imul
inc
mov
fucomip
loopne
and
leave
into
iret
into
and
and
aam
sbb
pusha
add
or
sahf
movsb
cmp
add
mov
add
or
mov
mov
inc
push
mov
lods
jecxz
lods
shrl
xor
and
popa
push
dec
sti
add
inc
adc
and
lods
add
outsb
push
es
and
test
mov
std
lcall
js
pop
or
xchg
out
popf
dec
sbb
les
jbe
aaa
add
fmuls
pop
jmp
iret
sub
adc
cs
js
cli
sub
jle
dec
dec
pushf
jle
icebp
orl
loop
in
outsb
std
mov
or
jle
cmc
les
into
outsb
mov
mov
or
pushf
test
sti
add
mov
lcall
add
aam
jbe
rcll
and
fiaddl
ljmp
mov
mov
cwtl
dec
push
movsl
xchg
cmp
dec
fdivs
mov
xchg
out
pop
test
fadd
fwait
enter
dec
mov
sbb
je
je
add
addl
dec
lock
inc
fildll
int3
mov
and
clc
hlt
pop
adc
and
test
test
sahf
mov
pop
push
cs
cmp
cmp
ret
jmp
sbb
xchg
jg
inc
mov
add
clc
jl
ret
arpl
scas
rorl
shlb
add
jmp
enter
arpl
mov
lock
mov
dec
inc
sbb
roll
jge
sbbl
add
lods
enter
call
or
mov
and
xchg
push
inc
sbb
add
dec
pop
dec
call
push
repz
mov
mov
sub
or
cld
jmp
cltd
lock
jle
sub
je
sbb
fdivp
push
movsb
mov
dec
sub
adc
push
mov
cmp
xor
push
scas
lahf
mov
call
inc
test
inc
lcall
jne
dec
push
mov
and
nop
mov
sarl
pop
cmc
inc
xor
out
xor
stos
mov
and
mov
fdivr
push
pop
rep
push
lods
lret
adc
lock
sbbb
cmc
mov
pop
cwtl
cwtl
sahf
jbe
cmpsb
shll
sar
inc
push
sbb
inc
add
add
xor
addb
push
cmp
lcall
loop
stos
test
cs
sub
and
shll
pusha
insb
cmp
mov
jg
orl
out
jmp
sbb
daa
pushf
test
push
jmp
cmp
jp
or
mov
add
sub
sub
jecxz
jg
mov
mov
jnp
lret
rorl
rclb
pop
pop
or
mov
lock
arpl
lods
out
pop
inc
xchg
jle
xchg
sbb
dec
imul
in
mov
lock
outsl
clc
das
bound
stos
fisttpl
loopne
lds
sbb
inc
or
call
loopne
inc
pop
mov
mov
insb
bound
pop
imull
adc
jae
icebp
xor
sti
cmp
mov
mov
int
shll
xchg
insb
shll
mov
or
push
das
dec
sub
les
xchg
stos
mov
xor
nop
test
jno
cs
aaa
es
aas
sub
push
shll
call
mov
add
mov
inc
cli
adc
xchg
mov
inc
out
xor
mov
mov
xor
push
test
pop
scas
cmp
add
pushf
loopne
lds
faddl
mov
push
loope
push
sbbb
sbbb
or
aaa
mov
ss
or
js
mov
repnz
loop
into
push
mov
jns
into
add
xor
lret
mov
jp
cs
fsubl
jbe
cmp
int3
fwait
test
mov
outsl
nop
jnp
jns
add
adcb
cmp
test
sbb
fwait
jbe
dec
lahf
mov
xchg
mov
js
je
in
clc
add
xor
mov
cld
adc
push
sbb
xchg
and
inc
mov
jmp
xor
jnp
pop
out
pop
outsb
ljmp
mov
mov
inc
sbb
push
pop
idivl
push
or
lret
mov
adc
ret
mov
sub
adc
cltd
add
jg
adc
clc
xor
je
clc
sub
cmpb
mov
fucomip
mov
insb
and
or
fistpll
test
push
xchg
lock
push
sbb
pop
sbb
and
out
decl
pop
fstp
sarb
movsl
clc
adcl
xor
lds
lods
icebp
adc
in
adc
pop
adc
cwtl
xchg
icebp
fs
or
call
xor
rorl
rcrb
dec
jmp
aad
out
xor
cld
dec
pusha
push
out
jbe
add
stos
sahf
imul
mov
cmc
rorl
xchg
lcall
enter
loopne,pn
mov
iret
inc
shrl
jo
jno
xor
scas
jg
ss
out
addb
data16
pusha
ljmp
push
or
movsb
xchg
std
push
addl
sub
inc
js
add
push
push
popf
fs
xor
mov
lds
cmp
fsubrl
mov
stos
aam
imul
lahf
insb
mov
fistl
jge
xchg
subl
xor
loopne
pushf
cli
lods
jp
mov
mov
subb
push
and
lcall
sub
xchg
sbb
idiv
push
and
enter
inc
lea
ljmp
xor
xchg
sahf
mov
ror
dec
mov
sub
ret
xchg
decb
cwtl
sub
cmpsb
aas
rolb
pop
xor
popf
xchg
push
and
sbb
xor
mov
add
ljmp
or
pop
aam
insl
push
dec
push
mov
adc
ljmp
fsubrl
mov
mov
rorl
test
loopne
xor
add
pop
mov
cli
adc
repnz
lcall
idivb
fadd
test
sbb
ss
roll
and
lahf
jbe
shll
es
fiaddl
leave
fidivrl
mov
mov
push
movsl
inc
adc
sbb
sub
mov
xlat
or
mov
popf
insb
sub
int
mov
jo
push
jl
mov
or
sbb
mov
xchg
out
mov
movsb
je
clc
mov
or
bswap
into
pop
inc
push
hlt
jp
pop
mov
pop
incb
subl
subb
mov
les
xlat
mov
or
nop
mov
inc
push
or
idivb
add
das
incl
mov
and
push
dec
jle
hlt
mov
xlat
pop
pop
nop
mov
loope
xor
lds
fdivs
xor
mov
lret
dec
sub
or
push
mov
push
out
sub
sbbl
mov
pop
sub
cmpsb
fimull
pop
xlat
aad
sbb
or
adc
pop
jp
stc
sub
fisubrs
ja
rorb
pop
mov
call
out
ret
jle
mov
xor
push
cli
mov
cld
sbb
xor
sbb
mov
push
aad
push
mov
lcall
jmp
sbb
std
aas
pop
mov
add
pop
rcr
xchg
pop
adc
xchg
pop
add
mov
outsb
mov
imul
dec
push
stos
rcl
jp
mov
adc
pusha
push
jg
nop
icebp
movl
jle
pop
jmp
rcrb
loope
push
test
mov
insb
popa
xchg
movsb
push
cli
movsb
mov
xlat
mov
nop
sahf
add
xchg
stc
pop
test
js
clc
rcrb
inc
lds
icebp
sbb
pusha
push
xchg
sub
sbb
cmpl
xchg
xor
pop
sbb
pop
push
xchg
int3
dec
stos
fnstsw
cs
xchg
adc
lahf
imul
clc
pushl
push
popa
aam
sub
sub
pop
dec
push
or
in
ja
sub
int3
dec
push
xor
ret
push
inc
jbe
dec
loope
cs
cmp
cmpsl
jl
add
add
pop
xlat
cmp
test
push
jge
bound
in
cld
imul
in
add
push
ret
lds
push
add
adc
push
cmp
mov
decl
inc
dec
mov
cmc
jg
xor
adc
pushf
lock
pop
sbb
aaa
push
jb
aad
sahf
sub
repnz
out
inc
je
stos
pop
mov
add
ret
sbb
ljmp
jb
pop
cli
test
adcl
and
push
sbb
out
lock
stos
iret
shr
mov
jns
lods
in
adc
mov
clc
call
lret
mov
adc
jg
pop
jecxz
mov
sahf
inc
js
push
ja
fcompl
jmp
sbb
imul
pusha
int3
popa
and
cmp
push
add
pop
xor
loop
and
ret
je
jl
sbb
sub
shl
ja
in
push
movsb
mov
mov
testb
loopne
lock
into
stos
pop
fmull
ficomps
or
mov
ret
push
daa
add
es
rcll
jne
test
addr16
push
mov
cli
add
cmp
and
jnp
mov
mov
pusha
fnstenv
pop
imul
loopne
lret
push
jle
das
shlb
inc
pop
lret
movsb
outsl
adc
es
inc
adc
adc
or
aam
jp
push
subb
jl
inc
enter
clc
xchg
js
addr16
lock
es
pop
scas
rol
sbb
cmc
test
jecxz
sub
outsb
adc
adc
shrb
inc
xchg
ds
and
das
add
ret
pop
adc
inc
xor
xchg
ss
xor
inc
je
pop
xchg
dec
inc
mov
addr16
cld
mov
sbb
xor
aas
ds
aaa
adc
bnd
idivb
jp
loope
sub
add
add
mov
fadds
and
decl
in
push
subl
inc
repnz
sti
cmpsb
push
es
nop/reserved
push
mov
dec
bound
adc
push
inc
je
mov
int3
test
push
cli
xchg
sbb
adc
sub
xlat
jmp
pusha
sub
loope
jmp
dec
int3
xor
mov
sbbl
aas
mov
js
mov
outsl
add
out
push
dec
hlt
sbb
inc
mov
clc
pop
mov
push
mov
push
data16
sarl
lods
mov
pop
gs
jg
clc
aad
push
outsb
ret
movsl
and
adc
aas
clc
stos
test
daa
adc
sbb
lods
pop
sbb
dec
or
dec
pop
mov
adc
in
add
inc
jp
pop
adc
or
mov
xor
lds
mov
mov
dec
pushf
add
loop
fdivp
daa
lret
ret
pop
rcrl
cld
jle
aad
jne
mov
jp,pn
imul
and
outsl
adc
jbe
and
xchg
andl
inc
mov
outsb
mov
testb
dec
inc
adc
stos
xchg
sbb
pop
aam
cmp
or
or
inc
enter
cld
cwtl
jle
pop
mov
js
pop
inc
adc
dec
dec
adc
ljmp
nop
scas
push
xor
xchg
imul
stos
sub
mov
ret
push
std
inc
mov
out
loopne
imul
xchg
and
mov
mov
ret
shll
pop
addr16
rcrl
outsb
or
xor
movsl
mov
fistpl
or
push
push
cs
ds
cmp
cs
sub
lds
sub
jnp
call
sbb
xor
shlb
dec
mov
pop
testb
je
in
push
inc
mov
adcb
enter
mov
mov
pushf
into
mov
in
mov
xor
xchg
adc
and
scas
add
enter
adc
xchg
sub
mov
jle
add
mov
jnp
sub
out
or
or
dec
add
outsl
pusha
out
pushf
inc
std
add
pop
push
nop
cmp
jmp
popf
inc
inc
or
movl
or
jae
repnz
mov
add
incl
add
adc
push
sbb
adc
loope
mov
inc
mov
nop
sahf
pop
pop
cmp
inc
adc
ja
sub
push
push
dec
add
or
adc
lock
push
mov
dec
add
dec
jecxz
push
out
cmp
in
aam
sbb
inc
push
push
sub
cmp
adc
mov
in
dec
pop
aas
pusha
fcomi
je
in
pop
xor
cmp
mov
rcrl
adc
adc
pop
mov
push
aaa
xor
in
inc
imull
nop
or
jp
mov
and
cmp
clc
clc
push
xchg
jne
mov
lock
dec
ds
add
pop
out
pusha
or
sbb
inc
fcoms
and
dec
adc
mov
sub
iret
push
popa
gs
push
bound
test
xorb
sub
mov
cmp
nop
mov
mov
fs
cmpsl
filds
or
mov
cli
stc
das
sub
add
pop
testb
gs
ds
mov
mov
int3
mov
ret
scas
loopne
adc
loope
fisttpll
jl
jne
push
iret
cld
ret
adc
rorb
inc
cmp
sbb
incb
mov
inc
mov
mov
hlt
xchg
call
movsb
outsb
mov
add
sbb
cmp
sub
ret
into
sbbb
cmp
loop
xor
add
sub
sub
jg
adc
xor
sub
sbb
push
data16
dec
push
rcll
out
and
add
dec
push
xchg
ficomps
xlat
cmpb
out
xchg
cmp
pushf
mov
cwtl
out
dec
add
ss
xchg
inc
push
mov
inc
js
cwtl
lahf
sbb
rcl
mov
adc
imul
in
pop
ja
mov
incb
rclw
push
rorb
jge
daa
hlt
sbb
jge
fwait
xchg
int3
push
push
push
mov
faddl
out
inc
and
jbe
add
cli
inc
rcrb
pop
test
add
jns
jp
jp
adc
jo
xorl
call
jp
sbb
mov
ja
adc
shll
ret
or
in
xchg
sub
add
jo
push
fcomps
inc
outsb
jle
or
xchg
loop
and
loopne
ret
sbbl
aas
repz
in
cmp
pop
inc
into
incb
xchg
and
enter
sahf
jnp
jecxz
sbb
lret
test
and
inc
push
xchg
xchg
les
dec
inc
adc
pop
fstps
repnz
dec
in
lds
cmpb
sub
adc
outsl
pop
inc
mov
mov
in
mov
daa
rolb
clc
test
and
mov
sbbl
xor
xor
filds
ljmp
std
shll
sbb
mov
mov
mov
mov
jecxz
push
xchg
or
cmp
shr
xorl
stos
cwtl
mull
xor
pop
add
sub
push
mov
ljmp
dec
or
inc
loop
nop
fsubp
jb
cwtl
push
lods
ret
mov
out
pop
btr
imul
and
decl
enter
ss
bound
mov
add
jne
add
mov
mov
adc
and
int
fcomp
movsl
fsubrs
xchg
pop
sub
or
jecxz
dec
cmc
test
andl
out
aas
xchg
sbbl
cmp
and
push
and
pop
jbe
mov
add
adc
loopw
shrb
cld
push
loopne
test
xor
jp
loop
faddl
adc
sub
ds
add
mov
es
movsl
fistpll
fxch
mov
pop
and
adc
sar
mov
push
add
cs
bound
insl
nop
jae
xor
daa
lds
cmp
mov
mov
loopne
cmp
add
pushl
xor
daa
aad
and
or
insl
movsb
adc
cmpl
pop
shrl
incb
scas
cmp
add
jecxz
mov
mov
sub
ds
jg
or
mov
dec
dec
jecxz
flds
aad
add
ret
add
jmp
ds
call
push
lret
sarb
std
mov
hlt
mov
xlat
lods
add
and
mov
adc
mov
pop
test
mov
movsb
mov
nop
cmp
lock
aaa
decb
lea
jp
pop
icebp
push
mov
mov
pop
mov
dec
inc
arpl
test
xchg
lcall
add
dec
xchg
jmp
jp
out
loop
scas
push
pop
aam
mov
push
inc
xchg
je
js
je
stos
xchg
cmpl
mov
jle
pushl
jg
out
mov
mov
ja
add
mov
inc
shr
pusha
loopne
push
mov
inc
jmp
xor
loop,pn
xor
jecxz
jg
repnz
je
lcall
or
cwtl
mov
loopne
lods
test
or
shll
iret
int
jbe
rcl
mov
mov
mov
pop
stos
ja
xor
mov
mov
push
dec
in
ss
pusha
or
aam
js
add
or
push
pop
or
icebp
xchg
outsb
or
rcrl
sahf
vrcpps
ja
stos
jp
jne
push
cmp
pop
lock
sbb
lods
std
ljmp
std
mov
scas
dec
push
mov
inc
mov
pop
rorl
call
mov
mov
int3
out
std
andb
cld
xchg
cmp
loop
rorl
inc
test
movsb
sbb
push
lock
in
shl
sub
adc
pop
or
xor
xchg
jbe
cmpsb
and
loope
push
pop
std
jg
insb
insb
xlat
sbb
xchg
test
cli
sbb
cs
test
ficoml
sbb
pop
stos
xchg
sarl
dec
ss
add
mov
and
or
fsubrs
inc
xchg
push
std
add
push
mov
xchg
adc
aam
in
insb
xchg
adc
bound
push
add
incl
cs
les
rorl
jp
jbe
mov
dec
pop
dec
roll
es
inc
push
cmp
dec
lock
or
or
or
sbb
addr16
inc
andb
roll
stos
sbbb
lcall
jge
adc
add
mov
cs
push
idivb
out
cmp
lahf
inc
in
roll
sbb
inc
dec
data16
fildl
adc
lret
dec
adc
mov
rolb
sub
mov
shl
lret
add
cmp
aam
idiv
inc
ss
leave
sub
jg
cld
nop
lcall
or
movsl
insl
testl
and
addr16
aad
mov
das
or
decb
xchg
add
shlb
adc
lret
in
out
jne
inc
imul
in
shrb
icebp
inc
fiaddl
mov
addr16
sarl
or
adc
repnz
adc
inc
les
shll
fwait
add
push
mov
adc
mov
lock
adc
mov
cmp
mov
test
das
jmp
fidivrs
popl
ret
adc
dec
shlb
cmp
cli
inc
dec
mov
pop
jl
adc
lret
ficomps
data16
test
add
dec
das
shrb
js
ret
inc
fdivp
in
or
sbb
mov
cmp
addr16
pushl
mov
in
pop
call
or
repnz
jnp
mov
cli
pushl
stc
and
jg
test
and
cmp
aam
push
pop
pushf
push
out
repnz
cs
lods
xor
jecxz
inc
xlat
aam
lahf
or
mov
inc
push
pushf
cmp
movsb
or
xor
mov
test
and
aad
and
inc
jp
xchg
mov
mov
aas
add
dec
scas
mov
je
mov
pop
cli
push
movsb
push
ds
jbe
or
mov
outsb
lods
js
push
inc
hlt
add
jb
push
in
ret
lods
or
in
push
cld
jle
pop
pop
cmp
add
add
ret
dec
jmp
lock
and
mov
or
icebp
add
les
push
fscale
and
xor
dec
add
stos
vmovhps
or
shrl
and
rcr
jge
sbbl
add
ss
push
xchg
jnp
into
dec
ds
push
ljmp
add
adc
les
sub
loop
call
stos
std
clc
sub
jmp
ja
iret
inc
insb
loopne
dec
sub
je
add
mov
dec
out
mov
pushf
mull
mov
pop
cld
pop
outsb
pop
or
imul
pop
mov
jmp
pop
cwtl
jg
jmp
dec
inc
jae
decl
pop
cwtl
outsl
out
repnz
add
fistpll
adc
out
mov
sbbl
add
popa
cltd
int3
rcr
lock
or
dec
imul
es
and
outsl
into
jecxz
push
sbb
add
mov
ljmp
adc
sub
aaa
es
loope
jb
push
test
push
ds
inc
pushf
add
movsl
mov
xor
xor
xchg
data16
mov
push
sub
jl
add
mov
sub
decl
fwait
sub
shr
cld
call
clc
xchg
call
dec
jb
push
popl
sub
and
xchg
mov
cli
and
push
sbb
ljmp
fwait
pusha
add
push
ljmp
mov
inc
lret
movsl
aaa
pop
cli
pop
mov
or
jg
call
insb
lock
push
inc
mov
and
or
test
aaa
push
mov
pop
std
sub
arpl
cli
mov
mov
repnz
outsb
popl
push
xor
scas
ret
int3
dec
push
std
cmp
cs
mov
std
cmpsb
mov
out
loopne
add
das
mov
jl
mull
push
inc
pushf
xchg
rcll
or
int3
mov
les
in
inc
out
mov
cld
push
fdivs
js
sub
scas
mov
in
pop
pop
pop
fs
xor
sub
scas
loop
xchg
sbb
mov
xchg
outsb
pop
stos
incb
push
das
jne
mov
and
enter
ret
pop
daa
scas
mov
push
fiaddl
icebp
je
mov
or
testb
mov
mov
mov
subb
add
xchg
mov
and
fidivl
dec
pop
and
xor
or
add
mov
lret
cmpsb
inc
xchg
call
jecxz
fidivl
sbb
push
cli
jo
ja
dec
sbb
jl
jae
call
aas
in
hlt
in
negl
mov
repz
aad
lea
clc
out
push
add
push
sub
sbb
cmpsl
in
mov
cmp
incl
push
sahf
add
cltd
add
test
or
pop
and
movsb
inc
nop
stos
cmp
jmp
mov
mov
es
add
pop
movsl
out
sub
repz
sahf
adc
out
dec
push
xor
mulb
adc
and
jb
ljmp
cwtl
sub
pusha
out
nop
mov
jle
add
lret
or
xor
cld
mov
add
xchg
add
js
mov
push
pop
sbb
pop
jg
bound
cmc
pop
adc
add
xor
and
jp
mov
sbb
cwtl
outsb
sti
div
shll
mov
xor
pop
into
stos
out
mov
jmp
xor
mov
mov
and
add
dec
mov
ficoml
mov
andb
and
aam
inc
fildll
test
adc
les
call
pop
add
push
dec
cs
push
in
jg
rol
clc
lahf
enter
or
jo
jns
or
inc
inc
mov
sbb
pop
add
mov
xchg
sahf
shrb
frstor
push
clc
clc
jg
inc
movsl
add
rolb
pop
faddl
aas
rolb
jecxz
cld
je
mov
mov
dec
push
sti
add
pop
jb
lea
inc
test
mov
adc
into
imul
inc
jbe
out
cmp
mov
sbb
out
xchg
sbb
sar
push
pop
loope
insb
lods
xor
jg
ret
jnp
sarl
sub
dec
jmp
pop
rolb
pop
loop
inc
and
popa
test
std
je
adc
ljmp
inc
add
sbb
inc
mov
xor
addr16
xchg
mov
mov
push
push
std
decl
fiadds
lea
inc
dec
xchg
pop
ja
jb
mov
divb
xchg
mov
loope
es
fs
and
sbb
stos
aaa
test
push
jns
aas
outsl
cmpsl
lcall
rcrl
jnp
fdivrs
jnp
aaa
addb
es
mov
and
push
inc
xor
mov
das
jns
mov
out
cmp
scas
mov
xchg
jl
xor
push
addb
subb
xchg
ret
lds
cmp
mov
lds
fnstenvs
mov
add
js
insb
je
or
xor
shrl
pop
inc
aaa
cmpsl
fisubl
sub
in
pop
adc
mov
popa
cmp
mov
scas
push
sti
insl
insb
clc
jbe
pop
ljmp
in
fs
scas
jle
or
ret
push
mov
add
dec
bound
jecxz
or
jbe
inc
add
jg
inc
rcl
jecxz
adc
xor
inc
add
mov
scas
inc
in
add
mov
iret
jg
or
push
loop
imul
filds
pop
dec
cmp
jb
fwait
ds
add
or
xchg
clc
data16
pop
fstpt
cmpl
pop
or
sub
fsubrl
and
jg
hlt
push
jle
xor
xchg
into
lret
jge
hlt
movsb
lock
pop
cmpsl
xor
push
sub
shlb
mov
mov
inc
pop
jl
bound
ss
push
jne
add
cmp
inc
scas
mov
imul
adc
cmp
sub
decl
ret
xchg
popf
mov
ret
sti
imul
pop
fadds
adcb
jg
arpl
loop
inc
jbe
mov
decb
jne
xor
add
ret
mov
xchg
push
arpl
push
sbb
xchg
cld
test
dec
scas
push
fdivl
jns
jle
or
cs
es
jl
andb
xchg
lock
push
outsb
inc
fnstsw
lcall
in
inc
sub
adc
push
or
in
push
mov
inc
and
add
clc
or
nop
shrb
notl
sti
lock
cmp
sbb
outsl
je
jge
add
push
sbb
xorl
add
cmp
sbb
addb
pushf
xlat
push
repz
std
enter
mov
leave
add
sahf
pop
nop
cmpb
mov
jg
sub
roll
in
push
cmp
scas
inc
sbb
sub
sahf
rol
pop
adc
xchg
pop
leave
lret
mov
clc
adc
jecxz
add
popa
and
sbb
in
roll
aad
in
faddl
fidivrs
cmp
bound
sub
jg
add
pop
push
mov
repnz
inc
jecxz
jb
dec
cwtl
dec
ja
mov
xchg
js
insl
movsl
rcrb
xchg
sub
movsl
fisttpll
in
adc
push
pop
out
sbb
scas
add
rcrb
inc
jmp
mov
jmp
jmp
arpl
in
lock
out
push
hlt
loopne
push
xchg
xchg
jl
fs
call
add
jmp
push
and
pushf
es
xor
icebp
dec
pop
add
sub
mov
es
adc
sbb
test
inc
insb
mov
nop
cmp
int
mov
mov
mov
pusha
ja
iret
cltd
ss
mov
dec
push
stos
inc
inc
mov
shlb
dec
loop
xor
cmp
add
cld
inc
mov
daa
pop
add
push
adc
loopne
rorb
loop
xor
fcomps
lods
sub
test
int3
or
call
adc
aam
ljmp
in
xor
add
sbb
jg
cmc
jmp
loope
sub
neg
jmp
xor
jg
or
enter
fildll
jmp
push
fcomip
add
adcb
push
into
test
insb
push
mov
pop
xchg
es
scas
bnd
xor
cli
decl
nop
inc
rcl
sub
mov
xchg
xchg
or
push
sub
inc
movsb
and
mov
cwtl
lods
stos
mov
push
fisttps
out
pusha
leave
xchg
pusha
push
jecxz
push
cmp
les
jecxz
insb
cmp
sbb
iret
sbb
add
arpl
decl
fistpll
shlb
pop
cmp
push
dec
fildll
adc
pop
je
add
jmp
hlt
add
jno
jge
je
mov
repnz
or
popf
sahf
test
inc
add
cmp
mov
jmp
xor
or
xchg
jb
aam
les
sbb
aad
mov
cmp
cli
cs
ds
cmc
ret
scas
add
xlat
mov
pop
jns,pn
mov
lock
or
sarl
popa
cmc
xor
cs
jo
sub
mov
or
call
cmp
or
dec
mov
popa
outsb
incl
addb
ljmp
pop
jl,pn
lods
mov
loop
loop
loope
shlb
mov
adc
adc
add
enter
call
cwtl
inc
test
jmp
push
stos
and
fcoml
fld1
cld
stos
adcb
pushl
fbstp
pop
call
lret
mov
dec
pop
popa
inc
and
adc
cmp
fsubrs
pop
pop
pop
cs
aas
nop
loop
push
push
mov
out
pop
aas
xor
xor
or
inc
sti
add
pop
push
icebp
jo
xor
scas
sbb
sub
std
insb
push
dec
add
inc
add
sti
jae
addr16
cld
call
lret
mov
inc
adc
cmc
push
stc
cltd
adc
int3
insb
push
add
push
jb
push
add
mov
xchg
mov
adc
or
fwait
loopne
or
cwtl
mov
outsl
addr16
repnz
or
pop
sti
fistl
idiv
cmp
add
or
iret
mov
scas
and
sub
int3
jae
cld
das
clc
push
adc
pop
jle
punpcklbw
or
mov
xor
fdivp
fwait
push
push
stos
lret
into
jmp
mov
add
ret
add
ss
pop
jecxz
inc
cmpsb
jmp
inc
adc
mov
testb
fcoms
bnd
bound
mov
xchg
xchg
rol
cmpsb
addl
or
loope
adc
cmpsb
pop
pop
pop
dec
lcall
sub
xchg
sub
mov
jp
fcomi
cmpsb
mov
add
out
xor
cwtl
mov
bound
mov
sar
jnp
mov
jbe
inc
fcmovbe
or
test
lods
loopne
cmc
cmp
int3
xor
add
or
and
and
adc
jmp
inc
xchg
adcl
insl
and
xchg
stos
add
in
inc
pop
xor
lds
inc
les
pop
fidivrs
push
mov
and
add
arpl
aas
inc
jmp
jno
outsb
mov
out
push
and
enter
and
fildll
adc
cmp
es
int
push
cli
icebp
mov
fsubr
imul
or
in
xchg
clc
sar
dec
cmp
xchg
je
jl
int
cmpsb
outsl
insb
pop
add
fistps
dec
hlt
inc
cmp
push
sub
mov
xor
add
mov
cmpsb
icebp
loop
test
or
inc
fmuls
xchg
call
arpl
dec
ret
mov
push
sbb
mov
or
mov
inc
dec
fisubrl
std
aas
sahf
and
scas
mov
fildll
push
cli
and
inc
cld
xor
add
ror
push
mov
scas
cli
push
adc
xchg
cmp
push
imulb
pop
out
add
vmovntdq
adc
stos
cmp
je
andb
and
mov
rcll
bound
hlt
shlb
mov
push
decl
sbb
cmp
cmp
add
inc
mov
pusha
popf
aas
mov
daa
and
aaa
pop
mov
xlat
mov
add
inc
ljmp
loope
xor
adcb
fistps
hlt
outsl
out
mov
add
ret
push
je
pop
loope
jno
decb
ret
mov
and
lret
xchg
jp
pop
push
nop
scas
cmc
loop
mov
mov
out
pop
movsb
push
fildll
adc
adc
mov
dec
mov
arpl
and
divb
hlt
adc
xor
xor
stos
je
call
add
loopne
imul
push
mov
jg
jecxz
lcall
imul
jmp
adc
enter
push
xor
lock
inc
and
subb
mov
in
fs
scas
pop
nop
push
add
inc
decl
mov
dec
mov
icebp
mov
lods
dec
xchg
cwtl
cmp
je
fwait
fwait
sbb
jne
cmp
inc
inc
icebp
call
lea
jge
das
fidivs
incl
out
inc
stos
dec
movsl
pop
push
fwait
xchg
and
push
stos
xchg
jle
ds
mov
lds
mov
pop
cld
inc
sbb
cmpsb
fstpl
clc
push
outsl
cmp
cmp
sar
mov
inc
loopne
mov
lea
add
mov
cs
data16
das
mov
add
push
testb
ja
push
scas
call
sbb
mov
mov
imul
jg
push
mov
add
add
xor
hlt
into
movsb
xor
leave
jmp
loop
mov
lcall
jmp
inc
repz
add
es
mov
in
call
or
adc
push
xor
mov
ds
xor
data16
test
orl
inc
add
sbb
ja
push
movsl
xchg
out
stc
mov
cmp
mov
sahf
imul
jb
mov
icebp
jp
sub
add
pop
add
or
or
cmp
les
stos
je
xchg
shl
mov
push
sbb
pop
cmp
inc
call
in
xchg
pop
lock
cld
addb
jo
xor
jo
inc
jge
jae
les
dec
or
and
push
notb
into
subb
adc
pop
push
loop
pop
fbld
mov
test
hlt
fwait
mov
or
movlps
test
cmpsl
lahf
jns
add
xchg
mov
xor
test
adc
mov
xchg
lcall
clc
rolb
push
push
push
aaa
or
cwtl
cli
adc
mov
xorl
jp
dec
mov
mov
pop
lods
mov
mov
das
or
jo
pop
js
xlat
adc
xchg
mov
dec
cmc
pop
pop
or
fs
push
loop
sbb
sahf
mov
lret
cwtl
imul
mov
push
movsb
push
and
subb
pop
mov
pop
ret
cmp
sub
inc
fs
mov
add
mov
dec
and
clc
les
arpl
pushl
pushl
xor
mov
std
mov
cs
push
call
mov
ja
loop
pop
jo
dec
loop
mov
add
icebp
push
sahf
sbbl
and
jp
out
insl
incl
divl
scas
sub
mov
pop
pop
out
subl
push
insb
sub
push
xor
addr16
test
js
scas
pop
nop
mov
dec
icebp
cmp
data16
sbb
sahf
jo
movb
das
sub
nop
stos
pop
jno
mov
mov
pop
icebp
add
jg
mov
dec
lock
es
jp
in
jmp
or
repz
loope
push
insl
movb
pop
filds
jmp
cmp
push
mov
xor
mov
sub
mov
and
inc
int
decl
cltd
adc
xchg
ds
inc
adc
mov
cli
aad
cmp
and
xchg
cmp
add
inc
xlat
push
call
xor
sub
sub
loopne
push
xor
add
outsb
mov
add
icebp
lahf
fsubp
nop
or
daa
std
out
test
push
std
inc
loop
mov
orb
dec
cmpsb
pop
mov
andl
dec
dec
push
loope
rolb
les
adc
xchg
add
lods
dec
aaa
insb
fiaddl
nop
sub
adc
iret
hlt
lcall
xchg
into
insb
add
add
dec
sbb
enter
movsb
or
lcall
fistpl
nop
subl
test
loope
adc
sbb
mov
push
aad
pop
adc
pop
cli
loop
cmpb
testb
inc
jnp
sar
pop
mov
add
push
push
sub
adc
fld
jmp
loopne
inc
ljmp
shrb
test
das
icebp
and
stc
mov
imulb
mov
pushf
push
lret
push
push
fs
jle
enter
aam
cmpsl
lock
cmp
or
pop
push
mov
lret
rcl
push
in
rolb
call
addb
aas
addr16
je
push
jle
out
and
cli
adc
inc
cli
inc
mov
pop
add
pop
hlt
xchg
ret
cmp
ficomps
push
fisubl
mov
mov
divb
pop
addl
mov
call
popa
sbb
outsb
mov
xor
mov
cmp
push
ss
pop
push
jb
push
js
add
je,pn
pop
adc
adc
pop
or
dec
cld
sarl
inc
mov
rcl
mov
out
push
aaa
jo
std
loopne
push
bound
popa
mov
sti
sbb
inc
jp
xor
in
push
push
pslld
sbb
add
push
mov
je
push
mov
inc
out
sub
sarb
push
cmp
hlt
inc
in
cs
jle
xor
mov
popaw
cmp
sbb
stos
push
hlt
lcall
icebp
adc
loop
add
push
loope
sub
xchg
xor
subl
retw
test
inc
outsl
pop
xchg
and
pop
ds
stos
lods
push
or
sub
inc
cmpsl
lea
popa
push
and
mov
mov
shlb
mov
add
push
test
xchg
test
mov
sahf
jl
add
movsb
pop
je
lock
movsb
xchg
push
push
je
xlat
push
icebp
pop
outsb
cld
fdivrs
push
add
push
cmc
dec
sub
sahf
stos
pop
mov
mov
cli
sbb
inc
sbb
mov
scas
pop
das
ret
mov
divl
jno
push
pop
xorb
xor
stos
cwtl
ss
int3
out
mov
xor
xchg
cmp
out
add
xchg
lock
sbb
or
repnz
decl
jne
and
xchg
cld
push
lcall
ret
dec
xchg
fs
fiaddl
fildl
mov
add
js
decl
ficoms
sub
xchg
mov
int3
pop
dec
push
cld
sbb
cs
push
cmp
nop
test
mov
cli
clc
pop
dec
mov
sbb
stc
js
and
fcoms
loopne
aad
jl
repz
sbb
cmp
pushf
addr16
mov
push
mov
or
sarl
cmp
sbb
sbb
jl
test
fildl
sub
mov
xchg
movsb
addr16
add
lahf
mov
divb
mov
sbb
fstpt
cmpsl
xchg
xor
ja
inc
sub
pop
shl
in
or
lods
jns
sar
movsb
and
cli
das
mov
out
jmp
add
push
push
sbb
inc
pop
add
jg
xchg
or
stos
sbb
ret
in
nop
call
push
ss
sbb
push
andb
adc
jp
mov
inc
loop
or
jecxz
stos
dec
sub
lea
add
adc
adc
aam
outsb
cld
fwait
lret
jmp
push
mov
mov
fbld
lea
and
dec
xchg
pusha
cld
inc
mov
pop
sbb
loope
cmp
cs
in
std
je
push
and
dec
enter
push
jnp
or
incl
cmp
enter
push
rolb
sub
lret
cmp
pop
jae
jecxz
jbe
shufps
adcl
ret
adc
push
pop
push
addl
mov
sub
mov
nop
xor
add
outsb
sbb
sahf
mov
xor
xchg
ret
insb
jne
mov
fisttpl
lret
xor
pop
addr16
adc
push
mov
inc
cmp
push
inc
jecxz
ret
dec
js
nop
imul
push
lahf
sub
mov
inc
dec
xchg
sub
fisubs
jg
es
mov
sbb
insl
add
insb
test
mov
jbe
in
add
scas
push
pusha
xchg
loop
add
add
mov
incb
jns
dec
pop
or
dec
sub
cmpsl
ljmp
dec
lcall
into
mov
mov
stos
mov
test
fdivp
or
xchg
lock
add
ds
repnz
inc
jle
push
cld
cmpl
mov
adc
sbb
aas
sub
mov
mov
jg
push
xchg
add
ds
movsl
push
pop
mov
adc
sub
stos
ss
enter
cmc
and
aad
mov
xor
push
dec
mov
jle
xor
fcomps
nop
xchg
push
mov
jnp
or
sbb
call
filds
jbe
mov
dec
xor
push
push
jmp
ljmp
pop
ret
out
cmp
outsb
daa
test
mov
fisttpll
xor
sub
push
mov
movsb
lret
pop
mov
mov
pop
loopne
orl
pop
cmc
test
inc
cwtl
ret
scas
xchg
shrb
fsubr
loop
pop
in
cli
shl
mov
int3
xor
xor
pop
xor
sbb
dec
and
iret
call
roll
add
aaa
fwait
pop
or
out
shrb
js
cld
and
fwait
or
into
push
lret
and
or
std
les
add
mov
push
jp
int3
mov
out
inc
push
call
aam
call
clc
insb
pop
and
insb
test
sub
loopne
mov
and
test
and
xchg
xchg
xchg
mov
test
clc
test
dec
cld
nop
pop
hlt
inc
insl
mov
mov
dec
pushl
sahf
sti
xchg
and
push
sbb
test
mov
frstor
fcomps
mov
and
jge
lock
mov
mov
sub
jmp
ja
outsl
aad
loopne
xchg
ljmp
mov
sbb
mov
pop
mov
sbb
sub
inc
nop
call
push
into
sub
push
outsb
and
inc
dec
and
sub
addb
sub
cld
pop
dec
jle
incl
je
jo
les
add
mov
mov
push
mov
fstl
loop
adc
mov
fbld
sbb
rolb
xor
sbb
cli
outsl
clc
aas
xchg
sbb
add
mov
pop
inc
inc
dec
add
inc
inc
xchg
es
insl
mov
or
test
sti
jae
sarb
jge
cmpsl
scas
enter
inc
sub
js
loopne
inc
rclb
xchg
dec
dec
jecxz
xchg
mov
mov
aam
out
insb
pop
lods
cwtl
sbb
fildl
or
enter
mov
icebp
imul
mov
pop
repz
ljmp
and
sbb
push
addb
mov
push
pop
out
fbstp
cmpsl
loopne
hlt
inc
xrelease
push
cmp
pop
test
stc
sbb
push
test
xchg
push
in
mov
add
pop
les
arpl
mov
lods
sub
mov
adc
loopne
jl
js
pushw
jge
dec
mov
aam
mov
call
pop
adc
adc
aas
fstp
add
xlat
std
ffreep
rolb
popa
jl
adc
add
loop
pop
cmp
lods
or
mov
sbb
mov
and
inc
xchg
out
clc
scas
mov
and
scas
jo
fdivrs
jo
mov
test
adc
mov
mov
call
imul
add
or
jle
mov
cs
push
sub
xchg
fistpll
sbb
popf
inc
push
cmp
inc
fmulp
nop
push
mov
push
mov
mov
cmpsl
rcpps
add
jo
sarl
rcrb
cli
arpl
scas
pop
mov
xchg
sarb
cmp
ljmp
lds
jne
cmc
lods
into
dec
fldt
mov
adc
int3
or
std
orl
lret
call
mov
outsb
mov
xchg
clc
mov
cmp
testb
sahf
push
rorl
add
sbb
mov
ljmp
lret
sub
test
mov
jbe
mov
mov
lods
ret
xor
fs
or
int
lcall
test
das
out
add
and
lods
enter
cmp
fsubr
lcall
icebp
adc
sub
nop
push
fs
call
addr16
call
xlat
aam
imull
ljmp
push
xchg
jg
pop
int
adc
add
jecxz
or
gs
rclb
lret
cltd
sahf
add
imul
or
stos
repz
add
mov
sahf
push
fcompl
adc
lods
mov
push
mov
sbb
adcb
in
loopne
sbb
adc
stc
cmpsb
inc
bound
or
sbb
jne
dec
xor
dec
in
jl
cmpsb
stos
incl
popa
loopne
addl
ss
ds
jo
xchg
xor
aas
loopne
dec
loopne
mov
xor
jmp
dec
mov
pop
jmp
dec
clc
ja
xchg
mov
fimuls
or
xor
test
dec
mov
pushf
fsubr
es
and
insl
dec
insb
cmp
test
inc
mov
pop
movsb
jne
cs
in
rolb
xor
sub
add
ds
push
lret
adc
mov
adc
mov
adc
jno
es
fbld
enter
ss
sub
ror
inc
or
dec
push
or
pop
loop
lods
push
inc
jbe
sub
ja
pop
cmp
xchg
sahf
and
test
xor
adc
push
roll
fcompl
les
roll
decb
add
clc
pop
clc
push
push
push
pop
add
bound
mov
or
sub
incb
inc
adc
sahf
pop
je
jnp
pusha
push
cmpb
divb
cmp
mov
sti
lods
pop
vucomiss
shlb
sbb
mov
adc
cmp
fnsave
mov
add
add
jl
push
and
sub
xchg
fcomip
cmc
ret
loopne
add
mov
push
or
aam
xchg
push
jb
sub
pop
aaa
pop
dec
cmp
xchg
mov
add
push
xchg
fxch
lods
sahf
cmc
movsb
aad
pop
je
mov
test
push
sbb
mov
push
dec
leave
mov
mov
lock
inc
mov
push
imul
sbb
hlt
stc
decb
out
iret
shlb
test
loopne
mov
das
hlt
add
insl
testb
scas
sub
fsubs
out
test
test
pop
les
stos
xchg
add
xchg
aam
or
insb
and
mov
jmp
icebp
mov
sbb
fucomip
int3
adc
adc
ds
repz
mov
pusha
cmp
sahf
xorb
inc
push
inc
insb
mov
shlb
repnz
lret
push
into
fadds
pop
cwtl
mov
pop
pop
pop
mov
adc
add
sub
and
xchg
stos
leave
xchg
push
ret
add
adc
fucom
int3
insb
inc
push
fisttpl
push
cs
invd
rcrb
add
outsl
popa
pop
imul
lods
inc
fcomps
cli
xor
das
mov
cld
mov
ds
inc
inc
gs
imul
dec
and
mov
fs
lcall
push
aad
adc
jno
push
cmpsl
sub
mov
or
adc
jg
aaa
dec
aad
jbe
outsb
mov
jnp
xchg
out
push
cmp
sub
test
pop
int
fdivrs
movsl
inc
ss
outsl
call
jns
mov
mov
mov
bound
sbb
notb
adc
insb
sbb
fstpl
loope
mov
pop
cmp
lods
leave
std
pop
cmp
push
adc
inc
das
lret
cli
xchg
adc
fiaddl
add
mov
pop
das
sub
insl
scas
mov
ret
shrl
ljmp
test
mov
movsl
out
or
scas
cs
mov
cmpsb
jmp
cld
inc
popf
into
scas
add
push
mov
add
push
scas
ss
arpl
js
test
js
cmp
xchg
cld
push
jmp
or
rorb
cmp
mov
adc
imul
jle
sub
xchg
out
push
mov
sbb
jle
xlat
push
or
adc
mov
loopne
jbe
scas
mov
add
mov
enter
pop
add
mov
add
sub
dec
mov
push
cmc
push
test
sub
ja
push
xchg
add
lea
inc
stos
jne
or
adc
sarb
lods
fldl
add
scas
outsl
mov
fcomp
jp
out
lea
cmp
inc
das
imul
in
fcmovne
popa
mov
test
lods
cltd
or
cmpsb
loope
or
jle
sbb
push
push
adc
inc
push
lock
lds
push
lret
dec
xlat
sub
movsb
ss
mov
loop
adc
cs
add
xchg
adc
or
addr16
xchg
jo
int3
loop,pt
loope
and
pop
incl
add
out
in
cli
cmpsb
repnz
jae
mov
inc
mov
sbb
inc
sbb
cmp
mov
sub
cmp
push
add
stos
rclb
aaa
jl
outsb
lea
les
push
add
lcall
fsubrp
jb
enter
test
push
dec
jmp
dec
mov
sbb
mov
popa
mov
dec
in
xchg
hlt
and
jmp
shr
lds
push
les
mov
add
rcr
mov
cmpsb
pushl
push
or
sbb
daa
lcall
cmp
loope
xchg
cs
je
data16
daa
cmp
cmp
xchg
add
inc
insb
adc
pop
mov
inc
pop
nop
fs
push
jo
dec
mov
and
xchg
fimull
sbb
inc
lret
fcomp
mov
decl
je
stos
sub
mov
pop
nop
push
out
mov
dec
sbb
clc
inc
dec
sbb
mov
js
cwtl
pushf
fcmovu
pop
xor
ss
shl
lcall
xchg
es
push
pop
pop
jb
push
add
scas
je
pop
insb
cmc
add
stc
fisubs
inc
fiaddl
lret
scas
je
aad
mov
nop
and
add
xor
push
movsl
jge
pop
cmp
call
add
roll
pusha
es
cli
repnz
adc
sub
mov
or
mov
clc
xchg
ljmp
adc
xor
clc
add
jecxz
push
pop
push
rolb
sbb
or
mov
adc
lds
pop
add
add
aas
add
clc
push
out
ss
sub
fld
push
jl
fisubl
in
cmp
les
xchg
xor
test
mov
idivl
movsl
inc
daa
or
std
sub
pushf
sbb
cld
push
dec
push
xchg
jne
jg
jno
cmp
lods
pop
js
movsb
sub
add
fists
fistl
outsb
imul
jp
fs
mov
sub
push
sub
dec
test
xor
jge
idiv
inc
fdivrs
add
cltd
or
sti
mov
xchg
cmpsl
test
xlat
into
mov
mov
and
push
pop
pushw
add
nop
mov
sub
lods
data16
mov
ficompl
or
in
xor
push
stos
inc
sbb
push
clc
fisttps
xlat
xor
sbb
cld
stos
cmp
xchg
sahf
shld
sarl
push
test
push
into
adc
aas
push
jbe
stc
in
test
xor
inc
mov
xor
hlt
out
mov
lds
dec
popa
ds
orl
pop
xor
jbe
dec
add
add
fbstp
lds
fs
inc
mov
fistl
jmp
xor
cld
fidivrl
stos
dec
pusha
daa
fbstp
aam
xor
out
cmc
js
xor
mov
adc
testb
lahf
jae
or
pop
push
xchg
cwtl
out
pop
inc
add
out
mov
movsl
inc
mov
cmp
add
lahf
mov
loopne
aaa
das
mov
adc
ret
ljmp
push
ljmp
and
inc
insb
addb
pop
popa
fstl
cmp
orl
cmp
bound
enter
stos
jbe
mov
ja
sbb
les
adc
subb
cmc
fcmovnu
inc
and
cltd
jmp
ljmp
fimull
js
xchg
or
inc
lods
decl
adc
jae
pop
into
in
or
sbb
pop
hlt
das
adcb
call
in
push
mov
add
lahf
or
test
xchg
mov
test
add
sbb
mov
pop
xor
js
in
scas
pop
pushf
fsub
add
mov
es
mov
or
mov
cld
orb
sub
dec
scas
xchg
or
mov
sbb
sbb
inc
out
inc
shl
sub
loope
sub
adc
push
xchg
push
mov
add
js
xor
sub
je
fucomip
push
xchg
fstps
and
and
fs
add
imul
cli
mov
jmp
lret
adc
js
mov
incl
and
pop
in
fmull
xchg
dec
pusha
ja
xchg
adcb
jmp
in
outsl
sbb
call
das
push
mov
add
loope
stos
aam
xor
jmp
pop
cmc
in
cmp
loopne
movsl
into
sbb
das
les
call
dec
cmp
nopl
test
cmpsb
adc
dec
out
xchg
icebp
pop
pushf
push
pop
outsl
js
lods
mov
andl
xlat
in
loopne
push
add
lea
stos
xor
jbe
dec
test
lock
gs
arpl
lcall
fstps
dec
or
xchg
push
insb
xchg
pop
fwait
andb
push
ljmp
les
fbld
mov
lock
push
aad
repz
add
inc
popa
xchg
imul
lock
jl
cmp
xchg
xchg
rcl
inc
sub
into
xchg
pop
adc
scas
js
dec
lods
adc
pushf
push
stos
icebp
mov
and
scas
dec
adc
testl
test
scas
mov
aam
outsb
pop
stos
mov
sub
cmc
push
or
inc
or
jnp
clc
insb
ret
inc
faddl
ljmp
add
repz
mov
dec
push
or
cmp
enter
mov
adc
ds
or
movb
nopl
sbb
roll
pop
adc
fnstsw
cltd
mov
jo
add
add
repnz
sub
enter
fwait
and
xor
aad
mov
sub
mov
jbe
dec
pop
gs
movsb
inc
pop
cld
aad
fimuls
or
mov
add
or
aaa
popf
cs
or
or
cwtl
adc
sbb
push
mov
xchg
or
shl
lcall
mov
sub
jg
add
ljmp
aam
xlat
xchg
push
aaa
and
adc
rcl
jmp
mov
cs
jle
sub
mov
mov
cmp
notl
push
add
ret
jb
mov
xchg
and
les
ret
test
inc
ss
inc
mov
sub
int
enter
andl
lock
sbb
outsb
pop
inc
push
xchg
mov
xchg
fdivs
jge
xor
hlt
mov
push
jg
mov
push
mov
scas
nop
imul
lods
pop
loope
pusha
xchg
add
loope
icebp
inc
sub
pop
cld
mov
out
fcmovb
lods
pop
outsl
or
mov
pop
ffree
in
movl
les
loopne
sti
pop
adc
pop
add
outsb
mov
add
inc
jl
mov
sbb
filds
xor
orl
and
or
dec
inc
loope
lock
fcoml
mov
pop
pop
jne
dec
cmp
add
adc
pop
add
imul
sbbb
mov
pop
sbb
push
incb
add
dec
sbb
sbb
shl
ja
adc
and
in
popl
push
or
clc
popa
push
mov
mov
push
into
add
outsl
jmp
mov
sbbl
jge
call
sbb
inc
jns
imul
loope
int3
shrb
pop
adc
mov
fimuls
notb
inc
decb
jns
je
lea
je
xor
les
lret
loopne
js
in
push
movsb
mov
push
sbb
or
pop
outsb
cmp
rolb
orl
addb
or
add
hlt
inc
lahf
or
sub
les
cltd
mov
stc
mov
popa
adc
ret
incl
cld
cwtl
and
mov
mov
decl
pop
dec
pusha
adc
imul
sbb
mov
add
mov
das
inc
popa
mov
loope
aaa
mov
out
or
xchg
xchg
cmp
jge
adc
mov
sbb
sbb
lret
dec
jmp
nop
iret
sarb
mov
ret
into
mov
mov
inc
mov
push
and
stos
ss
mov
sbb
mov
xor
mov
fdivr
sub
out
nop
fadds
add
andl
fmuls
push
ret
sbb
in
fdivrs
or
aaa
out
les
mov
sbb
mov
ds
jecxz
cmp
clc
sub
rolb
lret
ja
and
jmp
add
jecxz
ret
pushf
lahf
hlt
inc
cmp
cmp
aad
push
sub
push
sbb
ffree
ret
arpl
push
jp
sub
cmp
and
mov
outsb
loopne
sbb
add
cmp
lret
jl
inc
inc
adc
testb
cld
movups
mov
xchg
cs
fldl
mov
xor
outsb
leave
cmp
dec
add
loopne
and
out
adc
pop
test
mov
js
mov
test
inc
ljmp
bound
bound
bound
pop
ljmp
movsl
repnz
inc
adc
fucom
and
fwait
jle
hlt
xchg
add
add
and
and
cmp
fisttps
jbe
call
movsl
pop
lods
cmp
je
sub
mov
and
ret
int
cmpsl
jecxz
into
divl
pusha
cmpsl
adc
or
sub
jmp
adcb
xor
mov
cmp
xor
daa
ss
mulb
clc
mov
aad
push
mov
mov
scas
pop
mov
pop
lods
xor
mov
shrl
cmp
cltd
insl
add
inc
inc
adc
cli
or
xchg
mov
jbe
lret
stc
pop
pushl
cli
lret
add
jne
mov
pop
aad
or
sbb
xchg
mov
daa
add
cmp
add
push
fwait
std
jecxz
ds
lret
cld
add
popa
inc
xlat
fwait
xchg
mov
sbb
je
test
aas
xor
les
sahf
add
mov
jo
mov
mov
jo
aad
loope
inc
in
out
mov
lahf
or
jp
push
fwait
bound
loope
ret
cmpsl
xor
pop
ret
ljmp
xchg
loopne
dec
pushf
xchg
pop
mov
dec
dec
call
ja
sub
adc
ret
or
movsb
stos
jns
subl
and
push
sub
imul
mov
cli
cmp
sbb
dec
dec
loope
pop
push
push
jne
shll
cmpsb
xchg
shr
push
or
lock
ss
jp
fidivl
cmp
mov
inc
imulb
pop
shlb
hlt
inc
dec
xor
frstor
add
adc
test
ficomps
psubusb
jecxz
jno
add
out
add
in
sbb
std
pmuludq
adc
xchg
lock
jle
xor
push
and
cmpb
pop
stos
pop
test
lcall
popf
dec
xchg
sub
stos
jno
rolb
cmp
and
cmc
aam
dec
fmull
sub
push
inc
add
inc
jl
pop
adc
push
fldl
jnp
cmpsb
sti
cmp
push
xor
and
pop
xor
outsl
dec
adc
clc
dec
add
int3
rclb
dec
add
shlb
sbb
sarl
cmp
pop
inc
mov
jnp
sahf
jg
icebp
pop
flds
mov
or
xor
sub
cmp
xlat
mov
push
clc
sub
jge
mov
jmp
mov
cmp
jb
aam
add
insb
mov
adc
cli
jae
fidivl
xchg
add
les
stos
arpl
pusha
xor
inc
cwtl
daa
insl
aas
shrb
sub
mov
rclb
dec
jecxz
inc
enter
or
and
dec
fldcw
jl
add
xchg
or
jl
sti
and
arpl
jae
rol
loop
mov
add
or
add
loop
and
add
mov
inc
cli
out
enter
push
pop
hlt
adc
cmp
cmpsb
hlt
xor
xchg
stos
stos
hlt
pop
enter
cmp
xchg
call
cmp
ss
iret
lods
shrb
cmp
in
adc
sbb
cmp
inc
dec
or
mov
es
jo
xor
clc
imul
jmp
mov
inc
lahf
mov
shlb
xchg
push
mov
mov
pop
mov
fildl
mov
pop
jne
out
pop
test
cs
sarb
bound
out
jo
inc
or
mov
hlt
xchg
cld
bound
push
fcom
out
cmp
cs
add
incl
pop
pop
in
adcb
outsb
addr16
xchg
imul
fmull
sbb
cmp
nop
dec
xor
add
sub
daa
enter
decl
xor
stos
dec
es
xor
xor
inc
add
mov
mov
mov
loope
loopne
icebp
clc
fnstcw
stos
cmpsb
icebp
mov
xorb
sub
jmp
sbb
dec
xchg
cmp
xlat
or
addr16
jae
insl
ss
adc
jo
mov
mov
test
pop
out
rcrb
jbe
es
ljmp
rclb
sbb
fs
mov
cltd
add
inc
xchg
mov
and
mov
in
add
xor
lock
dec
scas
cmpsb
cmp
fbld
shlb
mov
sbb
push
xor
fwait
inc
add
cmp
rcrb
dec
xchg
jne
and
lret
mov
and
rcrb
dec
xlat
inc
ljmp
out
mov
inc
ljmp
and
hlt
mov
aas
adc
xchg
sbb
mov
rclb
and
add
fdivrp
adc
jg
xlat
ds
dec
add
fcmovbe
sub
ljmp
pop
and
movsb
dec
cs
cwtl
cli
imul
fbld
pop
add
jmp
fistps
rorl
inc
ss
decl
xorl
mov
in
cmpsl
mov
ds
cltd
mov
movsl
jle
stc
lcall
lret
loopne
pop
js
cld
ds
xor
mov
cwtl
data16
jo
pop
jg
dec
pop
cwtl
in
push
fistps
or
lods
adc
rcrb
jns
xor
xchg
push
sbb
adc
xchg
pop
pop
loope
test
mov
adc
inc
pop
push
lods
mov
cmc
fcmovbe
fistps
call
mov
iret
cmpsl
mov
sbb
je
shrl
sub
or
sbb
sbb
xor
test
or
out
adc
repnz
ljmp
js
in
dec
cmp
mov
hlt
and
mov
fucomip
jb
sub
cmp
inc
xlat
inc
pop
mov
aad
and
cwtl
stos
pop
cld
popf
jbe
push
xchg
addr16
xchg
cmp
in
rcrl
xor
ds
mov
cld
mov
aaa
loop
js
cmpsb
sbb
inc
in
push
outsb
aaa
lahf
fdivrp
push
add
push
pop
add
verw
push
push
cmp
sub
mov
jg
iret
mov
fldln2
pop
and
mov
cmp
xchg
sub
movsb
add
ret
mov
jne
outsl
adcl
aam
fnstsw
fsts
dec
inc
test
sub
call
add
add
sbb
mov
ret
and
xor
sub
pop
add
push
pop
push
mov
add
jnp
xchg
pop
clc
xchg
xor
pop
ljmp
jg
dec
pushf
fcmovnb
xchg
lds
test
data16
inc
fdivrs
push
adc
icebp
pop
mov
jp
mov
aam
stos
cmp
dec
sbb
sbb
incl
mov
xor
ss
adc
sbb
xchg
movsb
in
push
mov
mov
adc
pop
ljmp
add
cld
sti
std
stc
cmp
jl
inc
cs
inc
sbb
or
clc
loope
sbb
mov
jbe
xchg
lcall
orb
mov
inc
sbb
cmc
mov
xchg
inc
daa
pop
add
jmp
pop
push
inc
dec
lret
rcr
or
xor
ljmp
ja
xor
inc
mov
jecxz
jmp
xlat
pop
popa
loop
mov
xor
cmp
fstp
test
mov
add
hlt
enter
cs
pop
dec
fnstsw
dec
enter
sub
aaa
or
xor
mov
push
hlt
lock
rclb
add
pop
pop
mov
scas
loope
inc
sbb
lcall
in
and
pop
sar
outsb
inc
pop
cs
dec
jle
into
mov
or
insb
fstpl
dec
pop
shll
je
push
sbb
scas
hlt
pop
jae
jae
std
daa
xchg
sbb
scas
ljmp
cmp
xlat
pop
add
ja
dec
mov
push
push
outsb
into
pop
movl
push
pushf
je
pop
sbb
or
test
sarb
sub
iret
adc
or
add
mov
dec
xor
or
add
push
pop
aam
add
xor
adc
add
mov
jmp
in
lahf
jmp
mov
js
jne
scas
xchg
lds
int
push
int
inc
nop
mov
inc
cmp
fwait
cs
mov
jl
sub
add
mov
popa
xchg
xor
inc
xchg
lock
pop
jae
or
loopne
pand
scas
mov
mov
cmp
cmpsl
outsb
push
inc
add
not
add
mov
lods
and
push
mov
lock
cmp
push
mov
inc
les
jmp
cmp
inc
fbld
push
or
sbb
inc
popa
and
push
dec
dec
xchg
movsb
push
rcr
aam
in
bnd
or
hlt
aam
imul
dec
jo
push
loop
iret
push
call
inc
ss
mov
insb
mov
aam
inc
push
pop
in
call
outsb
lock
pusha
ret
lds
add
jmp
pop
or
std
inc
mov
decl
push
frstor
mov
push
jg
or
cmp
daa
and
adc
rcrb
loop
and
sbb
xor
mov
inc
mov
jge
test
stos
icebp
data16
cmp
loopne
test
xchg
fiadds
adc
popa
insb
mov
idivb
mov
das
rolb
jns
cs
jno
jo
aaa
inc
mov
sbb
stos
sahf
add
dec
inc
adc
out
or
loop
inc
call
shl
push
pop
pushf
outsb
lds
sbb
push
mov
repz
mov
inc
pushl
inc
push
sub
jge
cmp
sbb
jg
mov
daa
jbe
or
inc
ficoms
push
sub
inc
jle
add
scas
lock
leave
pop
dec
sarb
sar
addl
cmc
mov
xor
sar
jo
sbb
jle
ret
repnz
imul
shll
subb
aas
mulps
shll
dec
rolb
ljmp
or
add
pusha
hlt
and
fwait
movsb
bound
add
mov
lcall
xorb
lock
pusha
testb
xor
mov
xchg
or
pop
jp
pop
pop
mov
pop
andl
jmp
and
mov
hlt
pusha
xchg
popf
inc
out
movsb
movsb
cmp
rorl
ret
insl
rcr
lock
fcom
push
mov
ror
rcll
mov
jbe
nop
add
mov
sbbb
inc
mov
xorl
add
adc
fistps
sbb
inc
pop
sub
push
inc
adcb
xlat
adc
pop
icebp
data16
jecxz
push
pop
adc
js
addr16
inc
xor
dec
ljmp
lcall
push
mov
or
int3
fdivrs
fwait
mov
clc
dec
cmpsb
mov
jp
or
push
xchg
arpl
insl
push
adc
out
cmp
mov
inc
dec
and
gs
mov
imul
push
js
adc
sub
inc
add
pushf
lock
inc
jmp
adc
push
stc
or
mov
in
or
dec
or
pushl
add
clc
stos
ljmp
or
add
mov
add
inc
sbbl
lahf
xacquire
and
fnstenv
hlt
sub
add
xchg
and
outsl
or
add
dec
pop
dec
xchg
and
cld
push
ds
in
or
sbbl
mov
xor
lock
or
call
cmp
data16
adc
in
stos
cmc
scas
inc
mov
sbb
and
jns
cmp
mov
imul
mov
pop
add
comiss
sub
in
jnp
pusha
add
int3
xor
lea
and
sbb
push
xchg
dec
jge
inc
push
push
hlt
mov
loop
adc
pushf
movsl
cmp
shlb
xor
mov
lahf
enter
lock
sub
negl
out
jno
je
sub
push
inc
lock
sbb
cmp
adc
pushf
fsubl
adcb
inc
les
ds
pmuludq
xor
scas
add
addr16
inc
movsb
jnp
out
in
mov
and
add
pop
pop
dec
jae
jb
hlt
dec
ret
cwtl
xor
fidivrs
push
mov
dec
fimull
pusha
sti
jno
clc
or
pop
add
xchg
cwtl
xchg
add
pop
cld
inc
and
sti
mov
es
mov
std
add
inc
push
dec
push
dec
call
outsl
sbb
xorb
add
xor
push
call
in
push
or
or
sbb
ret
call
dec
rcr
decb
adc
div
shrb
pop
in
pop
ret
daa
push
or
mov
cmp
jl
test
add
fsubl
jne
test
cmp
std
frstor
out
mov
popa
lar
xchg
xor
add
mov
int3
jl
jg
ret
cltd
std
mov
xchg
mov
movhps
mov
lock
cmp
ss
lock
add
add
or
pusha
jo
push
fdivs
adc
pushl
aad
push
jne
test
dec
stos
test
lds
sub
mov
jl
jno
lods
popa
cwtl
movsb
adc
mov
je
mov
sbb
sbb
in
and
push
xchg
fistl
push
fwait
and
add
mov
push
push
jmp
out
sarb
in
add
pop
and
and
push
add
mov
sarl
fnstsw
sahf
mov
jle
outsl
adc
adc
fbld
js
adc
mov
loope
ljmp
es
sub
cmp
mov
clc
jle
jae
add
loop
inc
pop
sub
jecxz
jp
sar
loop
mov
loop
cld
pop
enter
mov
les
and
std
rcrl
test
mov
and
cmp
xchg
mov
add
mov
pop
insl
arpl
js
push
mov
xchg
mov
loope
mov
lcall
push
or
lcall
push
push
jp,pt
sbb
add
repz
icebp
call
in
shl
push
gs
pop
or
sbb
adc
je
int
cs
in
jg
dec
push
adc
xor
sub
jo
mov
lret
pop
movsl
mov
dec
jge
jmp
pop
sub
mov
scas
adc
pop
mov
cmc
push
jne
sbb
fiadds
in
sub
ljmp
punpcklbw
outsl
mov
add
pop
clc
mov
call
inc
cmp
repz
outsl
cli
or
or
push
std
xor
push
pushf
push
push
mov
push
js
enter
cmpsl
mov
sti
imul
sar
mov
add
popa
imul
fwait
lock
xor
push
sub
jecxz
out
or
daa
cmp
pop
inc
mov
adc
mov
mov
insb
scas
jecxz
pop
push
fdiv
outsl
xchg
push
fcoml
and
movb
lods
and
sahf
jne
adc
xchg
pop
aam
xlat
jnp
adc
xor
jo
loop
ja
mov
inc
xor
mov
bound
mov
dec
push
xchg
sti
jmp
mov
jg
inc
jne
push
int3
incb
xor
sub
ljmp
pop
rorb
loop
mov
lea
loop
movsl
aad
mov
inc
jge
cmc
jo
xor
loopne
or
lret
je
add
popa
adc
je
add
cmpsl
adc
jo
add
mull
mov
xor
jb
stos
call
test
or
xchg
jo
hlt
testb
cmp
mov
mov
dec
push
adc
push
pop
mov
pop
push
xchg
sbb
mov
sub
pop
mov
sbb
xchg
int3
mov
shrb
test
adc
movsl
add
push
mov
adc
mov
mov
cmc
jmp
out
repz
sub
jmp
mov
gs
mov
lea
cld
sbb
cmp
push
sub
add
mov
mov
sbb
repnz
push
stos
add
daa
mov
sbb
xchg
loope
cli
mov
push
cld
into
mov
xchg
jae
jmp
orl
les
insl
mov
clc
or
ror
mov
call
cmc
dec
fs
js
mov
ljmp
in
sbb
lods
sub
decl
dec
mov
ljmp
add
sbb
jp
hlt
in
xor
push
rorb
and
clc
ja
and
cld
clc
aas
mov
and
inc
cs
and
mov
adcl
cmc
dec
test
js
dec
clc
scas
add
fdiv
push
mov
sub
lea
call
fisubs
daa
jns
push
imul
rcll
gs
jbe
xchg
push
loop
aaa
clc
lret
mov
or
cmp
jo
movsb
nop
arpl
xor
cmp
jmp
add
xchg
and
sub
repz
jecxz
es
lcall
inc
jno
mov
clc
jg
and
cltd
in
pop
mov
push
out
mov
xchg
and
sbb
cmpb
sbb
push
inc
jo
faddl
fcomp
add
push
std
xlat
add
in
sbb
cmp
pusha
movsl
push
mov
movsb
shll
add
test
scas
bound
pop
cmpl
xchg
push
xor
loope
push
lock
jle
scas
jmp
loopne
cmp
movb
sbb
test
arpl
mov
add
int
add
push
dec
pop
shll
nop
movsb
subb
mov
jno
sub
jecxz
xlat
add
xor
xchg
and
inc
gs
ja
rcrb
jmp
or
test
sub
push
cmc
push
adc
pop
or
xchg
add
aas
outsl
leave
xchg
mov
xorb
dec
popa
call
orb
xorb
js
dec
movsb
fcomp
sub
rcl
das
adc
mov
loope
sbb
push
and
mov
sbb
cmpb
inc
sbb
cmc
unpcklps
add
add
mov
dec
and
push
and
call
mov
pop
push
fistpll
sbb
sbb
aas
add
pop
cmc
mov
leave
rcrb
clc
iret
add
sbb
dec
daa
xchg
mov
sub
adc
mov
pop
add
jg
lea
mov
loope
inc
xorb
fnstcw
xchg
sbb
ret
sbb
ljmp
xchg
into
pop
jmp
xchg
inc
ret
cmp
add
out
push
icebp
in
fists
or
shll
loope
jno
bound
jmp
jnp
xchg
sbb
inc
and
xor
push
pop
sub
and
std
jp
shll
lret
mov
lahf
in
mov
int
aaa
mov
or
das
or
jmp
or
add
fadd
push
cli
arpl
mov
mov
or
or
mov
inc
dec
or
lcall
in
ret
std
adc
add
dec
mov
mov
and
movsb
push
add
push
in
rcrb
pop
fs
pushl
push
push
sbb
push
popl
jl
mov
nop
inc
cmc
adc
dec
push
adc
lods
scas
pop
cli
shl
inc
xor
bound
cmp
std
push
push
jnp
test
mov
fsubrl
mov
in
pop
mov
fimull
lock
icebp
mov
xchg
cltd
mov
mov
dec
loop
lea
xchg
push
ja
out
in
jbe
rcrb
loop
das
mov
ljmp
loopne
adc
pop
pusha
jl
addr16
mov
ja
ljmp
sub
das
test
test
add
mov
clc
hlt
cli
out
cli
xchg
mov
mov
push
xchg
pop
aaa
loope
je
frstor
rorl
and
cltd
push
movsb
shll
sbb
sbbl
xchg
or
adc
add
add
push
lds
iret
lahf
adc
inc
les
xor
stos
or
push
cmp
inc
mov
jl
inc
push
fiaddl
pop
mov
push
pop
mov
int3
shlb
jecxz
cmpsb
es
pusha
ljmp
notl
mov
mov
cmp
call
jo
and
inc
xor
xor
idiv
add
ljmp
icebp
add
pop
push
jecxz
add
incl
push
push
test
mov
mov
faddl
pop
push
sahf
popa
ljmp
adc
dec
cltd
cmp
cs
sub
jno
inc
mov
lret
and
push
jnp
jno
hlt
scas
pop
dec
inc
shll
xor
mov
and
adcl
ss
mov
cwtl
das
negl
pop
fadds
mov
fdivrs
mov
cmc
loopne
adc
aaa
cmpsb
shlb
jg
dec
cld
pop
mov
pop
mov
insl
pop
aam
outsl
and
data16
adc
dec
lcall
fsubrl
jb
loop
add
and
mov
cmp
mov
ret
icebp
cmpsb
push
lock
add
aam
mov
mov
mov
and
mov
mov
sub
mov
decl
test
xor
rorb
incb
imul
popf
mull
pop
cli
out
push
push
pop
add
add
jl
dec
cwtl
push
push
pop
ss
out
sub
xlat
fidivs
stc
fdivs
into
repz
xor
xchg
clc
cld
cld
shlb
out
xchg
incl
js
cmp
fs
mov
push
js
ret
and
inc
pop
push
pop
sbb
mov
mov
add
push
jge
add
xor
das
clc
decl
fdivrl
insl
mov
inc
xchg
inc
dec
mov
inc
lcall
pop
adc
push
pushf
mov
dec
add
cmp
pop
dec
mov
push
sub
inc
sbb
push
sbb
out
jp
mov
fisubrl
sbb
cmp
movsl
mov
sti
push
xor
xor
mov
pushf
sub
or
dec
insb
sub
in
or
ljmp
pop
pop
xor
adc
and
mov
rclb
out
clc
and
and
rorb
add
adc
jae
mov
sarb
scas
fsts
aaa
std
aam
insb
jne
mov
imul
sbb
out
xchg
enter
stos
dec
pushf
pop
cli
sub
and
mov
push
int3
movsl
mov
xchg
sub
xchg
movsb
add
mov
shlb
aad
push
sub
sbb
pop
adc
cmovge
cmpsb
rolb
mull
add
lcall
dec
bound
jo
ret
sbb
lcall
filds
push
movd
loopne
mov
fisubrl
out
inc
fwait
add
test
popf
push
add
inc
leave
inc
or
bound
push
mov
or
cmp
push
push
pop
jecxz
add
push
dec
test
into
mov
test
mov
sbb
or
imul
lods
dec
nop
and
incl
ljmp
sbb
or
mov
gs
dec
mov
jp
cmp
and
inc
fnstsw
lahf
aam
jg
pop
shr
pusha
lcall
rorl
loopne
mov
icebp
pop
push
cmp
pop
xor
xchg
lds
out
xlat
ljmp
add
xchg
test
inc
cmp
aam
mov
xor
xchg
scas
sbbl
inc
xchg
jecxz
and
sub
es
mov
fbld
orb
mov
hlt
incb
movsb
jp
sub
xor
pop
fadds
enter
jg
add
xchg
push
push
pop
mov
jo
push
cltd
pop
cmpsl
and
cmc
pop
add
jbe
popa
and
addr16
and
shrl
andb
add
pop
sub
negl
dec
ss
adc
mov
gs
push
es
cli
pop
push
movsb
loope
add
push
icebp
dec
xchg
mov
lcall
int3
hlt
pusha
inc
ret
ds
ret
push
imul
push
decl
or
push
ds
sub
loopne
sub
xor
insb
nop
xchg
xor
mov
sub
jno
cmc
push
xor
push
fisubrs
shrb
push
cltd
fisubl
addr16
jo
sub
clc
pop
jp
hlt
aam
stos
mov
push
pop
lcall
mov
popf
clc
incl
lds
int3
and
xor
cs
out
add
test
push
pusha
clc
orb
popf
ds
out
pop
stos
mov
sbb
and
pop
loop
xchg
sbb
dec
dec
inc
ss
sub
sahf
mov
out
std
add
out
jae
mov
jo
mov
lods
sbb
push
jb
cld
orl
in
fst
push
bound
sub
cli
inc
and
pop
nop
aam
and
adc
mov
lods
sbb
adc
in
ljmp
jp
into
add
mov
stos
rcll
or
pop
dec
mov
jecxz
adc
call
aaa
or
pusha
add
bound
sarb
mov
mov
ficomps
pop
dec
ja
inc
lods
ss
loop
test
add
lds
sub
xor
into
jno
cltd
jne
add
or
cmpb
movsl
sti
pop
fcompl
pop
out
cwtl
pusha
xchg
lds
or
js
aad
adc
cmpsl
dec
inc
mov
das
push
inc
or
pushf
dec
inc
jo
shrl
jb
xchg
nop
inc
and
adc
xor
sbb
mov
in
jae
add
or
inc
dec
sbb
xlat
sub
mov
cmp
dec
pop
mov
add
das
in
out
or
cld
mov
add
pop
aas
and
in
push
sbb
mov
xchg
mov
mov
imul
rclb
pop
mov
pop
add
push
dec
movsb
lock
les
xchg
fnstenv
sub
xchg
or
ja
clc
or
gs
test
and
cmp
pop
cld
mov
lea
and
sbb
jle
out
popf
sar
or
xchg
or
mov
cs
mov
jl
jne
sbb
sub
fisttps
or
shr
clc
push
jg
jno
push
push
shlw
incb
adc
ret
cmp
xor
insl
movsb
movsb
repz
jg
sub
jp
pop
data16
add
sar
jle
loope
mov
dec
push
pop
adc
outsb
xor
mov
into
mov
xor
sub
mov
xor
scas
js
mov
push
inc
cld
in
in
mov
pop
adc
xor
cmp
fs
sub
sub
aam
gs
push
stos
ficompl
mov
push
sahf
aas
cmp
push
nop
dec
mov
add
lock
add
ffreep
lret
xchg
nop
das
arpl
inc
xchg
inc
add
mov
notb
dec
or
gs
xchg
sar
outsb
mov
out
xor
incl
or
cwtl
inc
and
cmp
outsl
inc
call
jg
xchg
pop
push
test
cmp
cmc
push
aaa
add
mov
jecxz
mov
adc
or
sbb
xchg
popa
je
fwait
mov
xchg
hlt
jmp
cmp
mov
icebp
lcall
pop
int3
mov
add
jg
dec
nop
mov
push
not
lds
es
js
xchg
cmp
roll
insl
lahf
nop
jg,pt
mov
fdivrp
movsb
dec
add
adc
ljmp
jl
jne
cli
and
fcomp
addl
rolb
cltd
xchg
sbb
and
mov
cmp
sar
sarb
lcall
sti
stos
jmp
shlb
loope
outsb
insl
movsl
stos
bound
dec
stc
mov
lcall
cmp
sahf
add
xchg
adc
jmp
insb
fildl
and
mov
jg
call
pop
mov
push
shrb
xor
ds
mov
mov
rol
xchg
adc
add
shrl
jle
mov
cmpsl
ja
mov
sbb
fldcw
push
data16
sub
add
inc
test
jbe
hlt
pop
call
nop
inc
ret
mov
cmpb
mov
mov
cmp
into
sbb
sbb
add
mov
xor
add
ret
inc
stos
add
call
js
mov
mov
mov
in
adc
lds
incl
nop
or
or
push
sbb
leave
ss
jmp
mov
sbb
pusha
add
mov
push
sub
cmp
test
jno
das
and
jo
je
icebp
aas
pop
sub
or
xchg
add
fndisi(8087
add
add
jo
cld
sbbb
dec
aam
out
xchg
xchg
aad
outsl
test
lea
outsb
ljmp
and
enter
sbb
mov
dec
mov
cmp
loopne
mov
outsb
mov
les
mov
push
inc
mov
add
dec
ror
cmp
xchg
mov
mov
pop
std
ljmp
sti
xor
jno
fnstenv
sti
push
stos
cltd
loopne
or
outsb
aaa
decl
ds
xor
nop
sbb
subl
and
shll
mov
scas
hlt
mov
push
movsb
mov
or
or
add
cmc
cmc
incl
dec
mov
mov
bsr
xchg
mov
xor
mov
call
mov
or
push
add
sub
or
jae
aam
sub
inc
add
in
or
sub
es
cmc
fbld
push
lcall
out
push
scas
ss
test
fsubrs
stc
xchg
sub
and
or
cmp
jl
ret
dec
shlb
xor
aas
shlb
sub
shlb
or
fisubs
mov
nop
sbbl
pop
mov
mov
xchg
cmpb
sub
adcb
xchg
and
ja
in
lahf
push
imul
dec
in
jp
sbb
lods
add
cmc
sbb
adc
sbb
xchg
subl
test
mov
push
pop
cmp
cmp
imul
add
jge
push
sbb
jmp
mov
push
sarl
pop
inc
mov
ret
outsl
rorb
xchg
orl
call
nop
js
jno
adc
jecxz
mov
lock
hlt
ficompl
fsubrs
js
xchg
test
cmc
lds
xor
add
movsb
pop
or
out
cmp
outsl
cmp
add
cmp
outsl
ds
ret
hlt
data16
loope
js
out
rolb
adc
mov
add
add
or
movsb
dec
icebp
pop
pop
shrl
mov
test
add
ret
fsubrp
cmp
btr
shll
cmc
pusha
in
adc
sub
add
popl
xor
es
rcr
or
and
pop
cmc
jp
jno
out
jno
xchg
adc
fwait
xchg
fs
mov
xchg
pushf
mov
hlt
xor
lods
pusha
sbbb
pusha
daa
sub
sub
xchg
adc
xchg
mov
movl
loopne
sar
cld
push
add
cmp
pop
out
cmpsb
or
push
and
enter
pop
dec
dec
xchg
xchg
cmp
out
int3
fiaddl
mov
adc
ss
dec
mov
add
and
mov
call
rolb
mov
dec
add
cmp
pop
test
cld
inc
mov
das
test
testl
test
xor
test
sbb
sub
inc
stc
mov
or
jb
mov
ja
js
add
jbe
ja
mov
inc
xor
pop
enter
and
sub
jg
mov
fwait
and
push
sbb
roll
insl
xlat
mov
lds
loope
inc
jl
test
mov
lret
arpl
call
lods
add
xor
mov
sbb
idiv
xchg
lret
test
sbb
aas
ss
js
dec
pushf
ret
dec
pop
xor
stc
pop
xchg
sahf
daa
leave
jp
clc
mov
xorb
into
data16
fldt
pop
lea
jb
test
call
sahf
cmpsb
cmpsl
ja
or
lock
mov
in
shrb
pop
fsubs
pop
cwtl
pusha
les
test
and
call
arpl
in
push
int3
pop
pusha
xlat
jmp
pop
sbb
sub
aas
lds
mov
xor
enter
popa
aam
inc
stc
mov
stc
cli
mov
mov
xchg
jbe
push
sahf
imul
or
pop
mov
shll
aam
jne
fcomip
cwtl
call
sbb
xlat
std
cmp
add
jp
push
add
cmp
sub
and
pop
loope
cli
jg
inc
cmp
pushf
xor
pop
sahf
out
loopne
je
imul
ds
and
cmp
sub
jae
mov
xor
in
jecxz
call
aam
in
add
push
aaa
subb
mov
clc
fsub
mov
and
dec
mov
adc
fwait
adc
cmp
pop
js
add
and
cmp
js
push
aaa
adc
sahf
jnp
xchg
sub
push
mov
sbb
add
pop
cwtl
pop
sbb
loop
add
pushf
inc
pop
add
int
lods
call
lods
cmp
ret
mov
daa
jmp
pop
scas
jge
dec
add
add
or
jl,pn
xchg
add
pop
inc
pop
scas
xchg
sbb
pusha
inc
clc
pusha
cmp
xchg
movsb
adc
mov
sbb
add
sub
and
dec
ret
sbb
cs
sbb
push
popa
push
stos
mov
andl
pop
js
shlb
hlt
push
mov
sti
push
lds
pop
xlat
pusha
add
or
int
lea
jle
pop
dec
mov
loop
std
mov
cltd
pop
jo
add
push
std
xchg
mov
cmp
push
dec
repnz
sahf
jmp
sub
jo
adc
stos
push
jp
and
or
and
adc
popf
les
movsb
call
addr16
addb
mov
rolb
cwtl
push
pusha
cmp
jmp
adc
lock
lds
adc
xor
das
lret
jae
rcl
mov
sbb
insl
jmp
dec
xchg
pop
ds
aaa
adc
mov
xchg
jnp
push
mov
pop
es
dec
les
and
cmp
mov
push
stos
insb
loopne
sahf
cld
aaa
sti
decl
lods
mov
cmp
clc
dec
jp
stos
lods
adc
mov
xchg
cli
jne
gs
cmp
hlt
loop
cmpsb
mov
push
repnz
aaa
nop
in
repz
inc
gs
dec
jbe
xor
inc
add
out
das
icebp
xor
sub
jg
stc
add
add
cli
ja
cli
cmp
jge
std
call
adc
leave
sbb
mov
add
pop
aam
js
jge
cli
jbe
fnstsw
lds
insb
mov
cmp
mov
in
shlb
mov
leave
insb
call
sub
outsb
shlb
idivl
ret
inc
nop
jne
lret
outsb
imulb
pop
loope
lods
jns
and
mov
stc
sbb
sbb
jnp
std
and
cli
jmp
cltd
xchg
mov
mov
and
push
jno
inc
cmp
adc
shlb
and
orl
decl
lock
xchg
sbb
sbb
mov
lcall
push
add
mov
mov
out
dec
and
jg
inc
inc
adc
push
aam
dec
jns
cld
pop
mov
add
push
sub
fildl
push
sub
add
jge
test
pop
stos
test
daa
or
movsl
decb
inc
ljmp
cli
mov
arpl
add
xor
shl
rcrl
or
fsubr
out
pop
push
adc
fsubl
jg
shll
and
fiaddl
aaa
sbb
mov
fdivrs
adc
cli
or
sub
ret
pop
cmp
or
sbb
pop
jo
inc
stos
dec
push
or
inc
shl
pop
dec
fs
mov
icebp
dec
push
xchg
ss
or
or
in
xchg
add
jbe
loopne
mov
inc
scas
mov
fldt
adcb
movb
and
and
inc
sbb
xor
sub
mov
mov
fs
iret
fstpl
roll
mov
mov
test
popf
jp
inc
push
les
inc
leave
outsl
sbb
arpl
repnz
ret
dec
cmpsb
fidivl
and
mov
cmp
sti
cmpb
lock
mov
dec
hlt
dec
pop
out
sbb
dec
jno
xlat
jge
addl
adc
inc
add
jecxz
sub
pop
loopne
dec
fidivrs
outsb
in
movsb
jbe
sahf
and
xchg
push
dec
jle
mov
pop
arpl
push
pop
mov
sahf
mov
push
push
mov
adc
pop
pusha
pop
mov
pop
dec
mov
adc
fiadds
out
decl
jno
mov
pop
roll
or
ss
aaa
or
ret
xchg
ljmp
fimuls
pop
jge
add
pop
sahf
add
pop
insl
ror
mov
mov
add
cmp
in
mov
ds
mov
jp
jle
loopw
loop
xor
cmp
mov
sbb
call
push
lea
out
aas
adc
pop
mov
je
push
cmc
sub
je
pusha
push
pop
add
lock
cwtl
sbbb
add
sti
sbb
stos
lahf
mov
lea
sub
cmp
jbe
cmp
mov
je
pop
ret
aam
clc
cs
mov
jge
inc
xchg
mov
mov
es
cs
aas
clc
stos
add
mov
filds
push
mov
dec
push
je
mov
scas
out
popf
mov
std
sbb
jle
call
jmp
push
xchg
mov
mov
cld
pop
subb
sbb
lock
dec
sbb
add
popa
in
fidivrl
mov
out
inc
out
mov
scas
test
aas
mov
xchg
or
rolb
mov
int3
mov
nop
stos
movsb
add
and
xor
fsub
dec
rcl
mov
pop
inc
jmp
pushf
adc
fidivrs
lods
dec
pop
dec
mov
call
inc
dec
mov
mov
mov
test
push
in
push
popa
aam
xor
test
fidivs
and
or
xchg
fnstcw
cmp
push
and
mov
out
push
adc
inc
add
pop
push
pop
icebp
incl
movsl
add
mov
insl
fstps
popl
test
xchg
and
fstpt
fwait
push
xchg
jo
subb
jle
loope
clc
stos
mov
sahf
icebp
out
add
aaa
pop
pop
clc
jmp
xchg
pop
test
outsl
add
gs
xor
push
jno
mov
mov
pushl
mov
jns
inc
ss
pop
mov
push
push
jo
adc
adc
jecxz
xchg
mov
cltd
decb
mov
xchg
mov
sub
ret
add
jp
pop
lods
xchg
ror
and
xor
dec
and
sti
jle
clc
jmp
nop
xchg
xor
outsl
leave
imul
ffree
rclb
je
push
insl
aas
cld
pop
inc
inc
cs
fdivr
es
int3
xor
dec
sbb
sbb
test
pop
das
adc
pinsrw
call
test
call
mov
cli
or
jg
lock
inc
inc
adc
cmp
add
and
push
std
xor
cmp
shl
and
cwtl
lret
lods
dec
jge
rolb
shl
jg
jmp
cmc
js
mov
fisubrl
lret
add
pop
xor
xchg
pop
inc
push
je
inc
add
sub
mov
nop
jle
push
mov
mov
sbb
stos
fiaddl
fcomp
mov
je
dec
adc
rorb
in
sub
scas
sbb
sarb
jg
shrb
rcrl
movsb
sub
les
ljmp
repz
mov
xchg
sbb
pop
outsl
movsb
adc
lcall
push
mov
es
das
push
arpl
or
cmc
out
cmp
dec
loopne
movsb
js
mov
jg
outsb
pop
pop
test
add
movhlps
push
mov
jns
in
xchg
add
cmpsl
push
adc
stos
jnp
pop
and
pop
push
xchg
jo
mov
ficoml
push
aam
pop
inc
cmpsb
jo
outsl
adc
mov
adc
hlt
testb
xchg
test
adc
fs
shlb
addr16
jmp
xchg
mov
lea
mov
outsl
pop
lds
ja
sub
bound
xorl
cmovbe
push
push
jl
mov
lods
add
add
out
cmp
ljmp
jecxz
lods
pop
cmp
fimull
sub
das
and
inc
push
cld
mov
cli
and
or
push
out
add
cmp
add
loopne
and
xchg
loop,pt
mov
ds
clc
imul
cmc
outsb
subl
pushl
cmp
sti
or
arpl
sbb
fdivrp
mov
sbb
mov
sbb
sbb
cmpsl
js
inc
daa
icebp
jle
or
sub
lret
test
and
cmp
sahf
adc
push
out
popf
mov
jecxz
jecxz
pop
mov
adc
loopne
push
out
dec
xchg
sbbl
jg
rclb
xchg
push
inc
cmp
jne
dec
repz
xchg
pop
js
sbb
and
shr
pop
cmc
add
lods
mov
cmp
and
js
incl
mov
call
inc
loop
pop
push
rcl
addb
sub
enter
negb
lds
ret
insb
out
add
fidivs
inc
add
pusha
jno
mov
xchg
cmc
shrl
aaa
push
clc
lds
mov
stos
mov
cmpsl
test
push
adc
and
popf
or
sub
test
rcrb
sbb
ds
loop
out
ret
sub
lock
scas
pop
ljmp
lcall
cmp
xchg
sar
rolb
or
or
ljmp
flds
mov
loopne
push
std
pop
inc
rcll
stc
xor
outsb
mov
add
imull
sbb
mov
adc
add
inc
and
xlat
xor
mov
cs
js
ret
hlt
pop
cld
jmp
push
in
adc
or
push
adc
incl
jo
push
push
and
pop
out
push
cmpsb
push
jae
cmc
call
sub
jo
aad
test
add
push
hlt
ja
inc
sub
mov
lret
adc
add
xchg
jb
aad
add
fimull
in
dec
adc
mov
inc
stos
add
lret
mov
mov
xor
adc
repz
jg
jp
lahf
lret
aaa
pop
nop
and
inc
aaa
pop
inc
jp
or
lret
and
fs
xor
inc
pop
je
sti
inc
arpl
scas
hlt
addr16
push
push
cld
fadds
sbb
cmpsb
pop
xorl
fs
fdivrs
in
outsb
jp
ret
cmp
lock
cmp
jmp
cmp
jmp
xchg
aam
cmpsb
fnsave
mov
lret
mov
loope
repz
push
add
stc
aaa
lods
out
andb
inc
std
dec
out
dec
mov
xor
sub
push
jbe
jle
xorb
jbe
mov
add
pop
mov
inc
mov
inc
out
psraw
or
fwait
or
jge
cmc
pop
dec
push
rclb
mov
repz
js
adc
notb
popf
shlb
cmp
sub
dec
push
sub
push
or
fildll
inc
xchg
loopne
out
xchg
mov
call
faddl
sub
pop
mov
adc
stos
lret
mov
xchg
push
mov
andl
jp
repz
sub
je
xchg
mov
or
xchg
fistps
ret
stc
jo
adc
bswap
stos
mov
ret
pop
cmc
xadd
lock
jo
mov
jnp
shrb
sbb
cmp
incl
and
adc
hlt
pop
in
sahf
push
cmpsl
je
out
adc
pushf
mov
fdivr
fldl
pop
nop
dec
and
push
clc
jecxz
xchg
bound
push
adc
sub
jne
add
mov
sub
fimuls
sbb
xor
cwtl
jmp
inc
rcr
jp
add
mov
cmp
xor
dec
adc
mov
inc
adcb
jmp
fs
sti
or
test
clc
mov
rclb
jg
pop
xchg
adc
stos
cmp
mov
dec
addl
push
addl
arpl
or
fbld
mov
mov
sub
fs
push
dec
outsl
in
mov
test
icebp
test
clc
pop
dec
int
cmp
decb
sbbb
jo
testb
dec
shlb
adc
xchg
cmc
mov
xchg
jp
ss
cmp
add
pop
and
test
sub
pop
or
ds
add
pcmpeqb
or
imul
sub
mov
sti
cltd
cltd
cmpsl
add
incl
loop
loope
sahf
or
xchg
push
sbb
incl
out
dec
push
mov
cmpl
outsl
out
pushf
pop
jmp
sar
pop
mov
sahf
fs
into
mov
push
inc
inc
mov
mov
xchg
cld
cli
inc
push
pop
mov
ficompl
stc
dec
mov
pushf
or
sarb
inc
pop
out
les
sbb
adc
add
inc
dec
lods
ret
inc
xor
nop
add
mov
int
push
aad
mov
sti
enter
cmp
mov
xor
fstl
sbb
cmpl
mov
add
and
loope
add
jmp
inc
aad
pop
pop
jg
inc
nop
xchg
add
lea
ja
aaa
or
mov
daa
subb
and
jmp
dec
xor
inc
stc
xchg
adc
aas
jle
aas
icebp
mov
lret
cmp
pop
lret
mov
loop
cmp
push
test
pop
dec
and
lods
stos
xchg
push
xchg
jb
and
push
and
mov
xor
int3
xchg
cmpsb
or
or
pop
push
into
loopne
push
cli
cmp
mov
push
ds
cltd
dec
inc
mov
jl
orb
add
push
cmpsb
aas
sbb
frstor
leave
jmp
gs
push
cmpsb
ret
std
inc
rclb
sub
mov
mov
xor
ret
call
sbb
cld
pop
jecxz
pushf
sbb
outsb
push
sbb
inc
loope
inc
stc
dec
sub
enter
pop
aad
xchg
int
or
add
js
outsb
pop
and
jbe
cmp
adc
pop
icebp
add
push
jae
and
mov
cmp
lcall
cli
out
sub
dec
mov
adc
popa
inc
scas
repz
mov
pusha
pop
lahf
loope
dec
push
test
push
int3
loopne
jb
call
repnz
add
mov
rolb
aaa
lods
jbe
ffree
sbb
cld
add
clc
das
das
and
test
aam
mov
movsb
cmp
scas
jp
pop
ret
outsl
add
sbb
jbe
repnz
mov
js
mov
pop
jecxz
cs
jbe
sbb
loopne
ss
outsb
cwtl
push
fimull
clc
pop
push
les
ljmp
and
xchg
cli
cli
and
fldcw
decl
outsb
jae
out
jge
out
mov
pop
sti
add
mov
add
psubw
push
out
aam
jg
jecxz
dec
in
sub
add
mov
pop
jo
pop
mov
into
mov
mov
fucom
push
pop
ljmp
cmp
xchg
lock
hlt
pop
push
cwtl
push
or
daa
je
clc
call
jge
scas
xchg
mov
or
fiadds
aas
sub
decl
shl
push
js
data16
mov
ja
mov
cmp
or
pop
ljmp
sti
insl
mov
jge
add
inc
sbb
and
sub
shlb
mov
iret
inc
add
dec
in
add
call
movsb
in
jmp
sbb
xor
aaa
xor
xchg
sbb
shl
and
loope
pop
call
dec
sarl
mov
lods
insl
add
enter
rolb
pusha
dec
cmpsl
pop
adcb
jge
loope
cmp
mov
jle
cmc
mov
inc
je
cmp
and
and
pop
aam
pop
cmpsb
cmpsb
mov
adc
fisttpll
std
add
xlat
adcb
sbbb
scas
ljmp
pop
push
sahf
jb
outsl
or
das
add
or
loopne
and
lret
sub
in
ljmp
sub
imul
sbb
fstpt
mov
cmp
lcall
dec
out
jno
mov
inc
std
sub
cmp
or
fwait
push
loopne
rol
ss
pop
sbb
arpl
movsb
mov
mov
sub
xchg
pop
es
fisttps
xor
outsb
and
dec
dec
call
fmul
xchg
jp
gs
push
idiv
cmc
cmc
add
or
pushl
bound
popf
add
fs
test
lret
mov
in
dec
mov
mov
dec
subl
cmp
cmpl
or
pop
rorl
dec
push
sub
invd
and
je
mov
xchg
add
or
rorl
dec
ret
push
xor
aaa
inc
movhlps
mov
dec
int3
mov
sarl
ret
outsl
sbb
clc
loope
adc
mov
fdivr
pop
enter
mov
push
in
push
mov
sbb
in
xor
lock
fcomip
fcom
cmp
ret
js
mov
andb
jge
scas
xchg
ds
push
inc
inc
shl
pushl
outsl
push
ss
fisttpll
mov
and
notb
fldcw
xor
loope
pusha
pop
sub
or
mov
insl
test
push
mov
mov
cmc
movsl
or
add
xchg
add
out
sbb
push
frstor
scas
xchg
lods
test
jl
xchg
aam
fwait
mov
sbb
enter
decb
clc
pusha
cmpsl
add
sti
sti
pop
fistl
bound
cs
and
pop
loopne
mov
push
int
xchg
push
test
dec
sbb
les
sbbl
mov
in
call
push
dec
sbb
dec
mov
hlt
fistpll
inc
mov
xchg
jnp
add
cmpsb
push
test
nop
and
add
pop
lds
lahf
xlat
jp
rcr
push
into
dec
inc
jecxz
loop
mov
loop
mov
pop
jo
andl
cmp
outsl
cmc
enter
jmp
sbb
jb
es
inc
mov
jg
es
or
pop
sbb
adc
cmp
in
loopne
mov
jnp
fsts
arpl
lods
dec
inc
sub
jle
xor
xchg
xlat
sbb
inc
lods
ret
adc
mov
inc
mov
lods
or
mov
shlb
pop
data16
inc
pushf
jo
pop
mov
and
add
push
and
popa
mov
mov
call
inc
mov
je
add
out
sbbl
and
cltd
push
pop
sahf
dec
fwait
rclb
lret
jmp
xor
mov
lods
stos
stos
mov
push
bsf
pop
repnz
std
jmp
aam
loopw
jecxz
jmp
les
xor
jecxz
sub
push
push
pushf
jno
test
or
rcrb
cmp
jge
stos
and
pop
add
cmp
sbb
mov
lcall
mov
or
or
rcrl
lea
adc
cmp
mov
mov
inc
les
mov
call
mov
nop
hlt
movsb
mov
pop
in
xchg
ljmp
inc
ds
pop
xchg
mov
hlt
lcall
cmpsl
cltd
sbb
adcl
mov
pushf
xchg
or
sub
out
fsub
pop
test
inc
push
fidivs
add
dec
cwtl
leave
push
mov
out
inc
cmpsl
incl
and
dec
test
jp
push
rol
push
mov
shrb
lcall
mov
dec
insb
mov
jb
sub
push
inc
loope
das
stos
mov
test
in
test
addb
es
cmpsl
jmp
imul
js
adc
outsl
add
add
je
push
inc
adc
or
add
jo
mov
jbe
adc
xchg
sbb
or
mov
dec
pop
lret
mov
add
aad
push
mov
jmp
filds
or
movsl
icebp
or
add
push
fidivs
aam
into
out
mov
ds
mov
sub
sarb
sub
add
dec
cli
pop
jge
xor
je
test
pop
and
sub
js
fidivs
faddl
sub
jns
incb
aas
push
sub
call
ficoms
xchg
xchg
inc
sar
jmp
lods
push
call
dec
into
xchg
ds
add
fwait
jmp
mov
lds
js
movsb
movsb
xchg
sti
loopne
orl
mov
and
jle
je
jb
add
xor
adcb
mov
mov
add
cmpsl
sub
jl
and
xchg
mov
or
add
fists
scas
ficompl
outsb
cmp
jecxz
leave
pusha
mov
mov
aad
mov
sub
push
xor
mov
lock
pop
mov
loopne
popf
hlt
mov
fld
push
sub
push
inc
push
sbb
movsl
jns
cmp
clc
pop
cld
sub
addb
add
fidivl
pushf
adc
sub
jg
jp
mov
lcall
cmp
call
add
sub
inc
push
repz
jle
in
sbb
mov
lret
push
add
dec
hlt
fdivl
ret
nop
ret
or
in
and
jns
or
or
dec
add
xlat
xchg
xor
icebp
insb
pop
rclb
std
out
cld
insb
dec
mov
pusha
pop
adc
mov
ss
shll
cmpsl
lret
jno
fcomip
incl
loopne
cmc
lods
or
ret
mov
add
cmpsb
rcll
pop
test
in
ja
loope
andb
cli
xlat
in
pop
adc
cmp
mov
and
lcall
hlt
pop
loop
repz
pop
jb
fdivr
sbb
cmp
insb
sub
dec
clc
ljmp
in
mov
scas
adc
pop
and
push
in
mov
push
jmp
jne
fcompl
mov
cmp
test
xor
pop
ret
push
push
jo
dec
xor
sbb
pop
mov
insl
incl
xchg
scas
dec
out
xor
jg
push
xlat
push
addl
mov
inc
sub
inc
sti
fadds
movsl
push
cld
es
cmpsb
push
pop
inc
mov
sar
push
fwait
jo
jne
lret
xor
mov
jne
mov
subb
insb
adc
adc
mov
outsl
sbb
cld
and
fmulp
leave
iret
sub
fimull
sub
int
push
jae
sarl
add
cs
mov
dec
fs
adc
dec
movsb
xchg
scas
ror
or
dec
movsb
sarl
popf
pusha
jb
cli
incl
aas
inc
clc
js
nop
xor
bound
cwtl
and
and
cmp
daa
push
shlb
lods
ds
test
in
and
pusha
scas
test
cmc
mov
lret
sbb
jle
mov
xchg
arpl
xchg
les
popa
fs
push
push
fnstsw
sbb
mov
sti
out
cmc
filds
mov
ds
out
adc
cwtl
stos
inc
add
inc
xor
daa
aam
pop
jmp
cmp
incl
mov
bound
lods
in
push
int3
ficompl
decl
daa
inc
dec
ja
aad
sub
add
xor
or
out
aaa
jne
inc
push
mov
add
jl
inc
cmp
jne
inc
imul
and
fwait
or
clc
inc
mov
subb
mov
mov
lock
adc
subl
jnp
pop
cld
imulb
data16
shlb
sbb
ror
pushl
jnp
out
inc
es
scas
or
shll
mov
lds
adc
inc
xor
xchg
mov
call
cmp
mov
pop
mov
cmc
std
dec
sti
nop
and
xorl
jle
xor
mov
cmp
xor
scas
xor
sub
pop
add
lods
loop
pusha
mov
mov
mov
mov
test
loop
sahf
or
mov
in
outsb
pop
popa
inc
pop
jb
add
and
clc
call
xor
repz
dec
aam
mov
dec
or
cmp
mov
add
repnz
les
inc
pushf
mov
ds
std
cmpsl
push
idivb
lret
out
and
xchg
or
pop
jmp
int3
lcall
push
jo
shrl
mov
sti
call
rclb
jle
sub
push
call
add
popf
les
pop
call
cmc
nop
sbb
push
pop
add
cs
mov
scas
arpl
xchg
dec
negb
mov
dec
gs
mov
push
push
rcll
cmp
bound
cwtl
xor
xchg
stc
or
jp
mov
into
push
not
mov
jnp
stos
sti
mov
pop
movsb
popa
roll
mov
movsb
jmp
les
inc
shll
cmp
pop
jbe
cmp
dec
ret
jg
fdivl
outsl
in
in
ja
dec
lcall
pop
jne
sti
inc
lock
outsb
call
mov
icebp
ljmp
into
sbb
cmp
mov
mov
or
jo
cmpsl
push
adc
sbb
mov
addr16
push
inc
add
or
xor
mov
pop
or
outsl
inc
dec
fdivrp
mov
in
test
sbb
sbb
cmp
push
push
adc
adc
xchg
sar
pop
mov
cmpsl
stos
adc
outsl
test
jle
iret
push
rolb
inc
push
mov
ss
pop
sub
add
js
fmull
inc
mov
xlat
fisubl
test
aam
sbb
jp
loop
xchg
dec
or
push
mov
in
aad
popa
push
xchg
shll
mov
inc
adc
popa
divl
jne
dec
lret
ljmp
add
xor
adc
imull
dec
cli
lock
adc
in
push
in
push
mov
adc
cmp
jb
pushl
les
aas
mov
lret
mov
adcl
inc
inc
jle
stos
nop
lock
cmpl
mov
test
push
sub
xor
push
lcall
push
jmp
cmp
pop
negl
mov
shll
push
mov
imul
push
mov
inc
das
sub
xor
xlat
add
js
push
jno
sarl
bound
sbb
push
adc
sbb
pop
jo
xor
push
mov
sbb
fwait
push
jno
jno
and
mov
pop
std
fldenv
mov
push
jecxz
insb
jg
subb
and
bound
arpl
jne
lods
mov
push
lods
mov
fdivrs
cmp
and
stos
or
int3
fcoml
sahf
in
jo
push
dec
pop
iret
add
cmpsb
push
fwait
incl
jno
xor
push
lods
sbb
cmp
mov
jo
ret
and
lea
and
or
movsb
stos
mov
popf
inc
ljmp
cmp
aaa
mov
or
mov
pop
add
mov
into
jnp
sub
dec
mov
pushl
add
mov
rorb
shlb
ljmp
lahf
scas
jnp
push
hlt
adc
xor
scas
mov
inc
psubsw
fcmove
pop
fmull
cmp
adc
jg
dec
nop
pop
aad
loopne
or
cmp
icebp
add
pop
out
sbb
fdivrs
mov
or
xor
insl
in
push
mov
aad
mov
mov
inc
repnz
sub
cmp
xchg
jo
aad
sub
mov
sub
mov
push
ljmp
push
outsb
adc
pop
lret
loop
lret
mov
ret
loope
jbe
or
and
cli
divb
sbb
sub
es
xlat
fsubrs
push
jp
add
adc
mov
popa
test
sbb
call
adc
jmp
fs
sar
test
data16
mov
out
sbb
add
add
sbb
jg
aas
push
jb
adc
call
jmp
enter
pusha
add
lods
rcll
lcall
pop
mov
push
loop
lahf
jno
add
push
adc
and
sub
fadds
inc
test
call
outsb
push
subb
pop
push
push
xor
add
cmp
push
nop
jnp
cli
or
scas
mov
add
pcmpeqw
imul
pop
into
mov
dec
mov
cmp
cld
sub
push
idivb
push
dec
push
repz
push
js
arpl
test
fstpl
aam
les
inc
sub
add
pop
leave
addl
arpl
and
jle
cmp
xchg
push
push
add
jp
mov
rcrb
sub
add
pop
add
pop
loope
in
stos
jle
dec
out
pop
and
lods
cmp
add
notl
mov
xorl
or
pop
pop
clc
dec
lret
test
xchg
es
sbb
fbld
pop
xor
and
idivb
mov
add
mov
sbb
adc
sbb
rolb
fcmovb
and
aam
xorb
or
mov
mov
es
mov
sub
andl
js
adc
cmp
enter
scas
mov
xchg
adc
fimull
into
into
xor
or
and
call
mov
pop
fisubrl
icebp
stos
jns
jo
inc
repnz
and
push
ret
push
push
or
sahf
cwtl
lods
xor
push
jmp
clc
in
fistl
mov
stos
aaa
pop
jae
pop
xorl
jmp
js
test
jl
cli
sbb
rorb
test
sub
jbe
sbb
idivb
xor
sarb
mov
cmpb
fld
pop
mov
rcll
je
dec
cwtl
mov
cltd
stc
out
sbb
filds
std
add
sub
xchg
inc
mov
add
mov
ss
inc
loope
ret
andb
xchg
push
mov
movsb
cmp
aad
shrl
dec
pop
push
jp
mov
mov
bound
rcrb
push
repnz
pop
cmpsl
adc
sahf
dec
into
pusha
xchg
cmp
ds
shll
in
mov
fs
hlt
push
decl
jb
icebp
cld
enter
jle
add
test
mov
sahf
imul
push
jbe
imul
pop
stos
ficoml
adc
mov
pushl
dec
mulb
jo
cmc
or
push
rcrl
mov
push
xor
or
sbb
inc
mov
dec
xchg
lcall
push
or
test
negb
xchg
in
xor
add
mov
data16
sbb
ret
cli
fildl
cltd
ret
push
sbb
xchg
add
popa
pop
fimuls
or
mov
adc
fiaddl
into
test
or
dec
movsl
out
sub
cld
xchg
int3
jo
xor
mov
dec
iret
cltd
lret
lea
sbb
mov
mov
test
push
mov
add
sub
jg
push
add
pop
arpl
into
cmc
in
fdivs
je
icebp
std
xor
add
pusha
gs
and
scas
sub
cmc
jg
cmp
inc
ljmp
movsb
pop
imul
mov
sub
outsb
pop
rcrb
xchg
int3
out
xor
mov
xor
adc
pop
ret
sub
adc
add
mov
mov
adc
mov
outsb
add
jae
xor
push
push
mov
adc
lods
pushf
mov
push
cmp
pop
dec
add
and
mov
iret
add
jp
mov
test
mov
mov
fisubl
mov
fldl
lret
sbb
add
ffree
outsl
clc
mov
sahf
in
jge
inc
sub
aas
mov
xchg
orl
fisubl
and
popa
sub
fisttpl
ja
in
mov
mov
int3
nop
push
mov
mov
mov
out
xchg
orb
xor
cmp
jne
sar
test
inc
outsb
ja,pn
cmp
movsb
rorl
shll
xor
mov
jecxz
inc
ss
int
notb
xchg
add
cmp
mov
or
mov
ficompl
push
xchg
mov
mov
repnz
idivb
sub
or
cmp
iret
outsb
aaa
pop
pop
adc
ljmp
xchg
push
add
lret
lods
pop
stos
xor
or
lods
fs
mov
aam
outsb
jp
outsl
test
int
outsl
mov
int3
push
rcrl
inc
cmp
push
jo
clc
ja
imul
push
mov
subl
aaa
fistpl
je
push
notl
jg
push
out
lret
push
xchg
sbb
dec
mov
push
push
mov
loopne
or
movsl
jl
jns
mov
mov
lret
cwtl
out
inc
sti
add
loopne
mov
loope
xchg
add
add
addb
or
test
xor
adc
push
dec
adc
mov
pop
dec
and
cli
enter
cmp
rclb
mov
nop
dec
push
mov
mov
pop
push
adc
pop
mov
ds
cwtl
les
cli
call
jne
jp
add
add
es
packuswb
aas
mov
call
or
add
push
mov
dec
jp
nop
imul
aas
xor
sbb
or
cmp
std
xchg
pop
lods
dec
xchg
js
xchg
sahf
sti
mov
and
aam
cmp
sub
mov
and
les
scas
orl
mov
add
push
push
and
es
test
sbb
jp
pushf
int3
repnz
jg
cmp
xchg
stc
sbb
xor
scas
mov
mov
fsubrs
js
sbb
jp
xchg
dec
ja
adcb
and
call
xchg
jp
mov
mov
rcrl
mov
push
mov
in
clc
mov
xchg
jge
xchg
orl
and
ret
lcall
in
cmp
inc
jg
daa
adcb
out
fidivrl
icebp
push
mov
push
pop
test
out
dec
outsl
cli
filds
dec
mov
xchg
aas
popa
or
inc
dec
loope
test
mov
sar
or
cmp
fsubr
call
and
adc
stos
sbb
cmp
or
sbb
cs
lcall
push
or
jae
aaa
or
pushf
repnz
sbb
mov
push
popa
mov
adc
andl
test
out
loop
imul
mov
js
mov
stos
mov
mov
mov
sbb
add
les
mov
mov
push
xchg
jp
stos
add
fucomi
push
cmpsb
sti
lret
test
sub
push
mov
and
je
cmpsb
sbb
clc
add
or
jo
xchg
fistl
sub
lods
push
std
bound
outsl
cmc
pop
mov
push
out
outsl
and
pop
push
mov
or
mov
mov
sub
mov
scas
push
cmc
js
pushf
sbb
fdivrs
inc
mov
ds
adc
dec
loope
fstl
les
bound
outsb
cmp
fcomip
testb
add
push
out
arpl
jne
std
push
jecxz
pop
and
les
aam
loopne
xlat
call
xor
ja
add
push
pop
push
xor
outsl
std
out
add
les
and
dec
mov
add
xor
int
mov
das
jg
add
sbb
fmull
cmp
call
outsl
inc
adc
jmp
mov
bound
sub
les
insl
in
sbb
dec
das
and
mov
lds
mov
adc
popf
ficompl
hlt
push
jp
dec
mov
adc
and
movhps
add
jge
call
or
lcall
mov
push
adc
rclb
repz
insb
pop
add
adc
movb
pusha
gs
call
xlat
xchg
cmp
pop
shrl
jmp
ds
arpl
add
jecxz
decl
xchg
mov
mov
pop
dec
jl
pop
aaa
movsb
hlt
rclb
adc
adcb
call
pusha
imul
or
popa
imul
test
pop
pushf
pop
inc
pop
lock
scas
rcrl
enter
adc
xorl
adcb
rorl
cmpsl
movsb
lods
outsl
popf
adcl
inc
cmp
push
xchg
push
pop
xchg
push
push
fisubs
dec
mov
xor
ljmp
aas
mov
sub
sub
frstor
or
xor
scas
xchg
fbstp
je
lods
mov
cld
pusha
mov
mov
mov
loopne
dec
jge
add
mov
mov
in
jo
scas
fimuls
xchg
pop
jle
ljmp
je
js
sub
mul
push
sbb
cmp
mov
and
into
loop
inc
pop
jp
pusha
movsb
or
aaa
pop
push
add
pop
mov
js
pop
jo
mov
or
push
mov
lds
xchg
movsb
or
shll
cmp
lock
inc
cmc
add
dec
arpl
push
xchg
add
mov
add
adc
push
dec
cwtl
fcompl
es
add
push
mov
mov
cmp
ret
pusha
and
sti
xor
insl
xchg
push
js
test
xor
adc
cmp
sub
arpl
fcoms
sub
shll
or
test
sbb
dec
imul
add
xchg
cli
xor
mov
stos
mulb
enter
mov
add
sbb
pushf
enter
aaa
fcomps
mov
dec
add
push
icebp
pusha
addr16
fwait
adc
aaa
test
lret
dec
lret
lods
je
mov
nopl
inc
mov
insl
pop
mov
in
pushf
js
aad
sbb
dec
add
arpl
xchg
push
mov
bound
les
movsl
adc
aam
add
and
and
dec
xor
and
pusha
jbe
std
iret
mov
xor
cmpsb
pop
daa
jg
xor
inc
dec
pop
je
nop
xchg
ds
push
icebp
cld
sub
cmp
xchg
movsb
add
lret
aad
das
xchg
push
pop
add
and
xchg
decl
repnz
xchg
xchg
fs
mov
ljmp
cmpsb
jp
add
xchg
fwait
jecxz
inc
xchg
add
scas
test
jb
adc
scas
enter
out
add
pop
imul
cpuid
lcall
and
icebp
pushf
sub
clc
push
stos
lods
imul
repnz
pop
pop
inc
push
push
add
xchg
pop
ror
inc
and
dec
mov
jl
dec
xor
mov
and
xchg
test
push
ficomps
les
nop
add
pop
fs
test
inc
mov
mov
sti
call
sbb
add
adc
cli
mov
test
push
daa
out
leave
xchg
mov
mov
dec
push
cwtl
jns
mov
xor
loope
aas
rcll
pop
add
lahf
lods
sbb
inc
jne
mov
mov
mov
fadds
inc
push
xor
cs
aas
test
mov
push
pop
mov
lea
scas
mov
test
pop
test
jge
push
mov
nop
mov
adc
je
jmp
lret
cli
adc
fcmovnb
mov
movsl
rcrb
add
gs
sbb
lea
add
call
pop
and
movsl
test
call
imul
mov
sub
fsubrl
xor
in
cmp
inc
xor
pop
mov
cmp
rorb
jo
xchg
fistl
sub
pop
push
inc
call
ret
mov
or
or
out
adc
add
xor
mov
adc
in
out
pushf
fsub
pop
test
sbb
mov
xchg
lock
add
or
jg
inc
inc
mov
in
mov
mov
insl
loope
xchg
loop
nop
ds
jmp
push
rcrl
mov
negb
ret
pop
lods
mov
jb
mov
repz
and
xchg
scas
dec
and
loope
les
pop
jb
das
cli
dec
add
sub
jo
cmc
jecxz
mov
in
faddl
or
leave
adc
xchg
fs
or
popa
pop
jmp
mov
movsl
inc
cmp
dec
add
out
xor
pop
add
repnz
movsl
push
call
test
cmp
mov
add
jmp
iret
test
mov
mov
mov
pop
jmp
mov
inc
in
stos
or
daa
push
mov
xchg
or
mov
cs
dec
inc
sbb
loopne
xchg
aas
jp
pop
aam
cmpsl
les
sbb
or
testl
cmpl
ret
push
pop
adc
cmp
mov
shlb
mov
and
xor
mov
mov
mov
xchg
inc
dec
fildl
addr16
adc
add
ret
mov
loope
decl
mov
xchg
or
mov
adc
or
jnp
xchg
add
jp
xchg
mov
pop
lret
lods
fmul
mov
cli
dec
push
mov
gs
loopne
clc
xlat
dec
in
and
sbb
mov
push
xchg
jnp
jnp
std
fwait
cmpsb
push
xor
call
adc
loop
inc
cmp
jl
adc
ljmp
or
in
in
dec
mov
pop
ja
lods
call
jbe
jnp
insb
test
daa
xchg
aas
mov
and
or
cmp
inc
and
jp
lods
jl
jp
push
and
push
mov
shlb
mov
into
ret
sbb
sub
jg
push
mov
and
adc
add
jns
fcomip
dec
mov
jle
or
xchg
je
jge
mov
ja
addb
pop
lret
mov
adc
or
int
dec
into
adc
cmp
lahf
lock
jb
jmp
psllw
popf
sarb
test
fcomip
jne
in
lahf
insl
pop
lock
push
push
cmpsb
andb
dec
or
jo
pop
jbe
pusha
cmp
push
imul
mov
mov
jle
imul
stos
cld
dec
fnsave
ret
andb
mov
loopne
scas
rclb
subb
or
fwait
add
ja
add
cwtl
adc
clc
inc
pop
push
rorl
outsb
ljmp
outsl
mov
call
fbstp
jo
lcall
decl
pop
jg
loop
xor
adc
pushl
negb
add
rolb
mov
adc
mov
dec
imul
add
cmp
mov
mov
xor
xor
and
and
aaa
mov
int
add
push
ds
add
js
add
cmp
xor
xchg
sar
adc
jno
inc
xor
sbb
sti
lods
mov
cmc
xor
nop
in
stos
or
xor
and
jl
xchg
scas
orb
jecxz
repnz
sub
dec
test
push
dec
sub
xor
and
test
and
cld
testb
or
loopne
in
ret
adc
loope
int3
pop
mov
pop
push
sub
aad
ret
dec
sbb
scas
sub
push
dec
testl
xchg
pop
cmp
pop
xchg
loope
test
ret
clc
cli
scas
xorl
push
outsb
cltd
cli
gs
jbe
cs
pop
icebp
push
es
jmp
jle
pop
jmp
je
std
jbe
mov
dec
add
pop
mov
test
lock
sub
cld
enter
fisttpll
fcomp
sub
clc
stos
jp
sub
cwtl
pop
push
loop
stos
mov
lcall
in
jp
js
mov
or
add
clc
sub
or
jbe
fstpt
mov
push
fisubrl
adc
add
cmp
ljmp
xor
mov
stos
addl
fsubl
stc
ljmp
mov
push
imul
jg
sub
je
add
sbb
cmpsb
mov
sbb
stos
cmp
or
mov
push
fiadds
xchg
mov
outsl
add
jno
and
mov
jmp
sti
push
sbb
rolb
mov
xchg
mov
jmp
ret
mov
in
arpl
imul
ret
fbstp
subl
mov
mov
push
addr16
mov
ret
xlat
cmp
and
int
rolb
cmp
inc
adc
imull
mov
subb
lock
mov
es
jno
orl
adc
cmpb
jle
cmp
rclb
cli
xchg
cmp
pusha
mov
outsb
xor
pushf
aam
xor
add
pop
push
sub
decl
push
and
dec
adc
inc
sub
test
jae
cmp
je
add
addr16
std
dec
rcr
rcrb
cmp
or
inc
sub
pop
push
add
lret
fcom
inc
mov
push
cmp
pop
xchg
dec
sbb
subb
and
mov
adc
or
mov
out
push
call
or
xchg
adc
jno
divb
add
and
adc
cli
mov
mov
ja
nop
jnp
mov
repnz
int3
mov
sti
test
filds
cmpsl
fnstcw
push
mov
jno
push
insb
push
in
add
out
notl
xchg
sbb
sbb
sbb
lret
inc
xchg
xorb
test
sarb
andb
and
scas
and
out
jl
and
jge
pinsrw
lds
mov
sub
mov
aaa
adc
mov
cli
pop
sbb
idivb
sub
push
nop
jmp
inc
and
lahf
jmp
rorb
outsb
push
out
pushf
hlt
xor
add
xor
add
cmpsl
mov
pushf
dec
out
mov
and
syscall
daa
in
fcoms
std
or
and
and
sbb
arpl
clc
sar
pop
inc
jmp
in
stos
xor
std
adc
lret
push
and
es
sbb
add
imul
inc
inc
lahf
inc
out
insb
xor
mov
hlt
push
add
jg
push
cld
test
imul
sub
xor
and
sahf
loope
cli
lds
cmp
std
das
aas
adc
push
repz
xor
icebp
in
cmp
and
xchg
loope
in
inc
inc
lds
mov
daa
xchg
mov
jg
dec
js
xchg
adc
and
fdivs
and
and
outsb
sub
mov
jge
pop
rcr
les
mov
sarb
and
push
pusha
mov
xor
sbb
cs
push
lahf
jb
jg
dec
add
dec
out
xor
scas
xchg
inc
je
jecxz
scas
fisubl
lret
sbb
jbe
inc
roll
xor
push
mov
lahf
lock
or
mov
xchg
jmp
inc
push
pop
je
or
push
jle
inc
adc
add
add
jp
adc
ret
out
xchg
enter
mov
mov
fstl
cmpb
cmp
dec
insb
xchg
fmulp
add
js
mov
daa
cmp
shrb
mov
dec
mov
lret
pop
add
stc
ss
add
fisttpll
adc
pop
dec
dec
lret
push
movsl
pop
and
dec
nop
es
inc
inc
add
pop
into
dec
lds
aad
dec
scas
push
add
notb
add
push
jg
subl
mov
pop
cltd
or
xorb
push
insb
movsb
cmp
adc
out
icebp
pop
and
mov
pop
outsb
dec
xchg
std
xchg
aam
xor
add
push
les
pop
pop
or
mov
add
jae
sti
mov
jecxz
jne
xor
or
sbb
nop
js
clc
cmpsb
dec
sbb
fadds
push
int3
add
and
xchg
popa
mov
incl
fisubrs
cmpsb
pop
lret
in
popf
jae
cmpsl
mov
ret
jbe
xchg
mov
and
and
jns
inc
fbld
push
pop
push
add
push
add
mov
cmp
hlt
aad
out
and
and
push
loopne
dec
xor
incl
movsb
xchg
push
fisttpll
and
test
add
sub
mov
jp
mov
mov
scas
pop
lock
inc
add
mov
jg
sbb
stos
mov
je
dec
ja
into
xor
cwtl
rclb
std
mov
jle
sarl
cld
cld
jb
xor
aam
push
jbe
mov
movb
andl
pop
sbb
pop
in
jmp
imul
rcrb
mov
sbb
mov
fwait
add
pushf
faddl
mov
call
add
dec
mov
add
push
imul
add
add
inc
stos
sub
test
jbe
or
aad
jp
push
xchg
jbe
pop
pop
or
sub
ljmp
in
clc
pop
rolb
and
pop
push
lret
std
inc
repnz
out
loop
fcmovnu
test
enter
sbb
xor
cmp
out
in
jp
sub
add
insl
or
sahf
dec
dec
loope
add
lret
add
cmp
jmp
outsl
push
inc
cmp
test
popf
pop
call
sbb
arpl
add
jno,pn
push
dec
sahf
fsubs
test
pop
jle
dec
mov
aam
add
cwtl
mov
sub
jl
push
cmpl
or
xor
lock
call
out
sbb
mull
ret
dec
dec
mov
outsl
and
inc
js
or
mov
int3
adc
mov
and
mov
mov
lods
push
andl
jl
sahf
mov
movsl
outsl
cli
pop
in
leave
sbb
mov
push
jno
mov
add
decl
jle
cli
aas
push
lds
shlb
roll
cmp
dec
das
mov
outsl
in
int
roll
mov
imul
push
jns
stos
add
in
fld
test
xchg
scas
int
not
subl
pop
mov
js
mov
dec
ds
push
jne
outsl
call
xchg
mov
pop
lcall
ficompl
push
outsb
xchg
lea
popa
mov
stos
adcb
lret
fimull
das
mov
insb
pop
cmc
xchg
and
add
pusha
mov
js
mov
notl
js
mov
cmp
add
std
gs
inc
jle
divb
pop
adc
and
iret
js
push
dec
fistps
out
xchg
cmp
push
or
adc
test
icebp
imul
mov
rolb
sbb
rcrl
push
js
xchg
into
xchg
add
add
sbbb
add
lret
inc
xor
test
insb
jmp
pop
sbb
outsb
and
pop
sub
inc
pop
add
cmpsl
mov
lods
pop
xchg
and
fsubp
pop
loopne
pop
std
bound
sub
sub
cmpsl
rorl
xor
push
and
push
push
cmc
jg
lret
stos
into
pop
mov
dec
int3
rolb
call
js
inc
jge
adc
icebp
jle
xor
and
fcomps
mov
loope
jbe
mov
arpl
ljmp
out
clc
sub
orb
sbb
call
mov
and
mov
les
bound
mov
mov
xor
push
clc
mov
js
pop
xor
jge
movaps
xchg
inc
incl
lea
push
stc
notl
sbb
xor
idivb
and
cmpsb
mov
push
adc
notl
xchg
add
lock
ds
jp
and
inc
out
pusha
inc
test
fwait
mov
lock
leave
test
mov
pop
adc
xorb
ss
sub
and
test
ret
fcompl
mov
jecxz
mov
ret
insb
lds
mov
dec
rorl
icebp
imul
push
enter
test
shll
xor
mov
cld
mov
and
out
add
dec
add
rcl
push
cltd
or
lcall
sahf
je
sbb
jbe
incl
or
push
or
mov
ret
sub
pop
xor
jl
xor
scas
int
popf
xor
and
decl
aam
out
push
xor
mov
ret
fiaddl
movsb
mov
mov
sarb
pop
inc
dec
fisttps
add
sahf
aas
adc
add
xchg
je
dec
outsl
mov
xchg
cmp
lcall
xsha1
cmpsb
mov
sbb
rcrb
sbb
push
or
mov
int3
xchg
or
pop
addb
clc
fistps
lret
dec
cmp
adc
mov
pop
push
cmp
mov
aad
ret
inc
or
and
inc
jl
leave
pop
xchg
jmp
xchg
mov
stos
sub
ss
int3
jge
push
pop
aaa
dec
lret
lods
jle
psrld
cmp
test
sbb
adc
pop
add
addl
nop
dec
push
cwtl
adc
add
cmp
sbb
pop
jmp
nop
or
inc
jmp
loop
lret
sti
add
push
ret
lock
jmp
xor
adcb
add
ret
out
cmp
add
int3
mov
add
or
negb
add
stc
imul
repz
out
cmp
sbb
push
push
dec
dec
test
frstor
icebp
and
lret
lcall
xor
xchg
dec
rolb
fistpl
pop
mov
mov
bound
ljmp
and
pushf
sub
add
push
icebp
xchg
push
jnp
lods
adc
lahf
dec
pop
aaa
or
rcr
cli
cmp
add
setne
scas
and
insl
add
sbb
sub
inc
sbb
add
inc
shrl
jmp
movl
jl
out
push
xlat
decl
inc
cli
repnz
fs
mov
and
dec
shrb
idivb
pop
cmp
adc
push
mov
into
adc
pop
inc
loopne
nop
enter
adc
mov
call
dec
lods
cltd
mov
leave
stos
orb
push
or
lock
push
ret
loop
mov
push
fistl
fdivrp
push
dec
xor
or
loopne
cmp
enter
lock
outsb
push
and
lock
or
or
sub
mov
fyl2xp1
mov
xor
add
scas
scas
push
mov
sub
dec
add
push
aad
mov
push
adc
mov
cwtl
xlat
lret
inc
cmp
cs
xor
sbb
popf
test
clc
enter
dec
addb
call
pop
and
gs
sub
in
inc
push
pop
jle
stos
mov
pusha
lret
add
int3
add
cmpsl
movsb
and
call
lcall
push
cmp
inc
or
cltd
cld
and
adc
push
mov
xchg
sub
mov
pop
pusha
inc
jbe
das
and
je
pop
push
sbb
jg
xor
clc
loop
outsb
fidivl
inc
xchg
adc
sahf
lcall
incl
ret
inc
shrb
nop
mov
fcoml
mov
mov
xor
mov
xor
xchg
movsb
hlt
mov
sub
pop
ret
pushf
cmp
aaa
lock
inc
jo
pop
sbb
jle
out
subb
es
fldenv
aas
mov
inc
jnp
lahf
shrl
mov
stc
clc
ds
pushf
loope
idivb
push
push
int
movsb
test
and
cmp
pop
inc
es
ss
mov
xchg
pusha
js
popa
outsl
adc
push
sub
inc
or
cmp
and
push
cld
ficoms
add
pushf
jae
inc
movsb
ss
cmp
rorb
into
dec
mov
dec
movsb
push
sbb
mov
ljmp
das
out
and
movsl
inc
frstor
loop
adc
rclb
arpl
or
fbld
dec
mov
repz
inc
insb
xchg
mov
jp
mulps
xor
cwtl
dec
jg
mov
hlt
xchg
fucompp
mov
sbb
std
mov
stos
shrb
add
xchg
fimuls
sbbl
icebp
andb
push
incb
sub
cmc
dec
jbe
sbb
cli
cld
add
test
push
add
sbb
movsb
xor
or
divb
shrl
add
mov
dec
lods
leave
pushf
sub
decl
fsubr
mov
jl
fsubrs
test
insb
loope
ret
mov
mov
pop
mov
pop
push
cmc
mov
icebp
clc
mov
aam
mov
sub
fldcw
call
pop
lahf
insb
xchg
aaa
lods
js
xor
les
shlb
mov
cmp
sbb
push
dec
orl
xorb
sbb
push
fwait
les
hlt
ljmp
add
popa
into
jp
into
push
sub
and
mov
stos
push
cli
aaa
aam
sub
les
mov
rcrl
mov
je
push
and
out
inc
inc
push
lods
or
mov
mov
popa
mov
popf
push
scas
pop
mov
lret
adc
dec
fwait
xchg
fists
add
mov
mov
inc
int3
iret
punpckhbw
add
mov
loopne
cmpb
jnp
add
in
js
cmp
push
inc
mov
xchg
sub
mov
jmp
push
add
add
orb
push
adc
add
in
fidivrl
std
sbb
shlb
arpl
cli
aaa
lret
cmp
aam
lods
rolb
in
icebp
push
adc
iret
scas
mov
inc
mov
bndstx
aam
xor
pop
adc
xchg
daa
scas
outsl
aam
xchg
inc
int
repnz
leave
mov
inc
sbb
mov
ret
outsl
push
pop
lods
xor
out
pop
push
sub
sub
dec
add
sahf
mov
dec
push
stos
sub
decl
stos
mov
or
loopne
cs
movsb
sahf
xor
xor
dec
cmpsb
add
call
cmp
adc
mov
and
fisttps
adc
jp
and
sahf
xlat
mov
cmp
xor
fwait
inc
jl
inc
jmp
cmpsb
popa
mov
add
mov
sbb
xchg
inc
adc
jg
xor
pop
xchg
push
ljmp
loopne
jb
xor
pop
cmpsb
mov
and
adc
inc
pusha
int3
enter
jg
sbb
push
int
adcb
fidivl
inc
insl
jp
and
add
push
out
mov
add
loopne
inc
movsb
mov
adcb
lods
xchg
fimull
sub
sti
xchg
scas
cli
sbb
adc
mov
xor
push
add
push
add
mov
mov
testb
jbe
jg
mov
cmpsb
jcxz
jae
push
into
inc
or
jo
dec
mov
dec
sar
incl
sahf
stc
pop
pop
sub
mov
sbbl
xor
pop
les
adc
ljmp
or
fiaddl
orl
or
insb
enter
aad
sbb
cmp
mov
ja
pop
push
xor
cmp
mov
jbe
mov
or
dec
mov
jg
sbb
mov
push
iret
adc
and
sub
ffreep
jmp
out
adc
hlt
or
cld
inc
push
mov
in
push
jmp
cmp
jns
or
lahf
xlat
xor
aam
clc
pop
sub
push
cld
and
pop
xchg
push
lods
out
cli
mov
mov
outsb
aas
mov
xlat
mov
outsl
mov
pop
fstpl
mov
loop
int
rcrl
inc
dec
lock
jns
sar
incl
mov
mov
xor
mov
jle
push
cmp
repnz
aam
hlt
jg
repnz
lds
adc
ss
pop
pop
vpmacssdd
shrb
call
push
inc
sbb
pop
enter
inc
xorb
out
aam
add
divb
and
push
xor
call
nop
icebp
inc
xor
lods
rcrl
sub
jecxz
pop
popa
es
cmp
sub
jnp
stos
add
scas
sub
inc
xor
pusha
jle
in
idiv
insl
push
push
out
mov
cmp
xor
adc
dec
and
mov
jle
lcall
adc
jge
sub
outsb
xor
jae
outsb
pop
jo
jb
adc
in
cs
mov
dec
sub
dec
inc
xor
mov
ss
add
push
xor
std
mov
xor
mov
in
push
int
pusha
lret
fsubr
mov
jle
loop
test
and
int
or
sbb
push
fwait
xchg
push
adc
in
pop
insb
faddl
sbb
fiadds
mov
mov
cmp
inc
mov
xchg
and
out
mov
fwait
je
add
sub
ja
and
je
mov
in
push
icebp
shll
fs
adc
mov
push
in
call
movsb
scas
xchg
out
inc
mov
je
sub
sub
xor
call
xchg
xor
ss
pop
loope
arpl
cmc
dec
pop
sbb
lock
or
xchg
pop
xchg
push
jg
mov
lods
mov
frstor
mov
stos
pop
inc
flds
xor
or
jmp
mov
mov
lds
les
push
inc
shlb
roll
out
and
hlt
mov
mov
cmp
and
mov
add
mov
loop
or
push
ret
scas
addb
lret
mov
stc
dec
orb
sub
cmp
imul
sbb
cld
icebp
xchg
push
jmp
lcall
cmp
bound
stos
dec
cld
fbstp
jle
xor
jle
call
imul
pushf
mov
lret
add
incl
xor
dec
xchg
imulb
in
decl
xchg
mov
ss
pop
push
shlb
jg
pop
add
sbb
jl
mov
out
ja
mov
add
call
pusha
movsl
xchg
decl
xor
add
pusha
insl
enter
clc
clc
add
mov
ljmp
outsb
test
xor
inc
or
mov
jbe
cmp
add
ficoms
push
mov
and
add
jp
aad
incl
aas
jbe
push
pop
mov
add
xchg
shlb
or
cmp
loopne
das
rclb
shrb
push
dec
mov
mov
or
call
icebp
test
or
xchg
mov
cmp
arpl
ret
sub
mov
insb
fstpt
xchg
push
inc
lret
aad
pop
loopne
lcall
int3
shll
cld
cmpsb
lods
lahf
mov
sub
ret
ret
in
adc
xchg
into
cmpsl
push
inc
ret
push
inc
push
push
cmp
mov
call
adc
lock
xchg
cmp
mov
mov
inc
cmp
mov
pop
adc
or
jp
adc
mov
or
pop
pop
cmp
mov
and
nop
xchg
sbb
xchg
jg
push
jmp
adc
dec
cmp
loopne
push
fisubrl
ficoms
and
jnp
bound
mov
pop
lock
test
fiadds
pop
adc
mov
sbb
inc
xchg
dec
ret
rorl
int
mov
and
test
in
rclb
pop
push
je
aam
cmp
std
incl
fsubrl
adc
fsubs
scas
hlt
or
add
dec
push
mov
call
or
loopne
push
and
sub
inc
in
iret
js
push
test
incl
fdivr
add
sub
js
test
jg
cmpsb
shlb
mov
fisubs
into
out
xor
jbe
xchg
mov
sbb
jecxz
jp
je
sbb
lods
mov
jmp
push
pusha
pop
jecxz
les
dec
idiv
adc
jp
jb
cmp
add
ljmp
cmp
jle
sub
call
mov
je
bound
pop
add
sarl
mov
clc
in
inc
fsubs
or
xorb
mov
clc
mov
stos
mov
scas
scas
scas
adc
mov
loop
adc
outsl
outsl
push
sub
pop
push
lods
mov
push
arpl
jae
jbe
or
jo
scas
sbb
int3
fiaddl
mulb
jno
add
cmp
enter
jp
add
ja
xchg
xorl
and
test
outsb
or
hlt
sub
push
jecxz
subb
je
jmp
aaa
bound
rcrl
lcall
jmp
push
cmc
push
repnz
mov
xchg
loopne
push
dec
fsubrs
fsubrs
incl
loopne
stos
mov
xchg
sti
out
push
out
test
jbe
jo
pop
in
test
cmp
inc
hlt
push
xor
push
xor
shrb
push
lcall
out
lahf
adc
dec
push
arpl
out
int3
sub
xchg
repz
iret
jne
add
in
outsl
mov
and
fwait
or
adc
push
add
gs
fldt
loope
xchg
push
movsl
mov
jle
mov
lock
jecxz
cli
or
loope
cli
or
xor
outsl
cli
inc
add
into
icebp
xchg
cmp
push
jg
fwait
enter
addb
loopne
mov
add
inc
das
cmp
ret
pop
jg
sbb
movb
add
icebp
dec
int
mov
ljmp
add
cmp
xor
mov
cmp
icebp
inc
push
int3
iret
sbb
fsub
insb
lcall
or
mov
push
push
sarb
pushf
fisubrl
xor
or
clc
stc
lods
mov
mov
cmp
je
push
sti
pop
push
or
xor
pop
es
or
xchg
pop
popa
call
call
fdivs
mov
cmc
jg
jl
push
push
ret
out
movsb
inc
push
inc
mov
mov
sahf
and
in
repnz
sub
clc
out
xor
jg
and
lea
ss
push
push
mov
aaa
inc
stos
inc
jmp
xor
mov
mov
in
add
inc
insb
fucomip
dec
cmpb
out
pop
es
int3
je
subb
xchg
jecxz
outsl
jg
movsl
loopne
adc
or
scas
mov
push
jl
xchg
fwait
addl
test
cmc
int
cwtl
mov
sahf
xchg
add
rolb
xor
push
push
nop
mov
jo
rorb
cmc
movsb
add
fwait
jle
clc
hlt
ds
roll
shll
add
jg
inc
or
pop
loopne
cmc
fiaddl
testb
push
add
mov
or
mov
pminub
test
jle
das
sub
aam
xchg
insb
jp
mov
xor
in
dec
cwtl
push
add
xchg
ljmp
js
insl
sar
mov
addr16
or
sbb
fstps
push
cmp
int
sbb
loop
jnp
ljmp
test
aad
call
les
imul
loop
jecxz
popf
enter
push
sub
lahf
aad
lock
push
clc
jg
or
mov
push
xchg
sub
sub
cltd
loope
jmp
and
hlt
daa
out
adc
fldenv
cmp
ljmp
out
les
gs
outsl
popa
mov
fsubrl
cmc
hlt
cmp
xor
cmc
ljmp
leave
rorb
out
lret
cli
add
pop
adc
push
ljmp
sbb
jne
push
inc
or
lea
pop
sahf
xor
ret
cmp
movsb
scas
mov
mov
sar
or
jmp
cmp
mov
jbe
cmpsb
dec
clc
in
fsubrs
xchg
inc
cmp
pop
mov
gs
popf
dec
cwtl
lock
push
nop
jl
cmp
cmp
test
addb
pop
xor
xchg
push
sarb
cmpsb
aam
movsl
dec
roll
loop
push
icebp
arpl
shlb
fidivrl
out
add
jo
mov
and
add
mov
call
xchg
inc
or
xchg
inc
push
pushl
xchg
dec
dec
add
add
xor
aaa
xchg
stos
pop
cli
sahf
test
or
mov
xchg
fsubr
loopne
cmp
cmp
and
sub
lcall
add
sbb
jb
rcrl
roll
push
loopne
outsb
mov
mov
adc
in
repnz
cmp
jns
cld
xchg
test
movsb
rcrb
out
mov
mov
push
idivl
or
and
mov
pop
nop
or
lret
xchg
add
stos
mov
inc
into
aas
pusha
nopl
sbb
mov
psrld
subb
mov
dec
stos
out
addb
inc
pop
inc
sbb
mov
or
fists
sub
mov
rolb
mov
adcb
mov
aad
xchg
and
sbb
sbb
clc
inc
push
scas
imul
mov
arpl
adc
js
cld
sub
cwtl
jge
cmp
fsubrl
inc
push
je
pop
addr16
shlb
cwtl
pusha
mov
aas
cmp
sbb
fistl
ds
xchg
mov
cmp
mov
pushf
out
ud0
sub
outsl
pop
push
xchg
jge
in
aaa
test
lcall
movups
dec
mov
cld
inc
dec
jo
push
pop
or
stos
lds
jecxz
pop
jmp
loopne
in
add
pusha
mov
xor
ret
addb
jno
ja
jne
dec
mov
or
mov
and
cmc
push
cltd
mov
call
xorb
shl
and
decb
pusha
outsl
nop
call
ret
sarb
sbb
jmp
daa
incl
pop
or
mov
mov
xorl
push
mov
sahf
dec
cmc
shll
add
add
inc
or
mov
jg
mov
into
push
adc
jo
arpl
out
xchg
je
iret
clc
bound
mov
lcall
pushf
pop
sub
mov
push
das
leave
mov
add
cs
push
fwait
leave
adc
data16
add
addr16
aad
rorb
add
lock
fucomip
js
inc
hlt
ss
jo
iret
lcall
add
adc
push
loopne
call
adc
test
int3
lret
movl
pushl
xchg
ds
add
dec
jl
pop
pop
pop
icebp
inc
call
pop
in
pop
in
mov
ret
aad
cmp
sbb
pop
or
dec
sub
inc
stos
popa
push
pop
lret
or
adc
and
lods
add
cs
lret
rolb
sub
jo
or
inc
pushf
out
popa
and
add
or
inc
sub
decl
outsl
gs
pop
inc
mov
mov
mov
add
or
lea
dec
mov
stos
adc
aam
es
mov
pop
pusha
mov
das
lcall
sub
lea
sbb
mov
fwait
in
lret
pop
dec
or
subl
cmp
push
cltd
roll
sti
mov
sub
leave
lret
xchg
sbb
lret
push
imul
or
das
jl
xor
es
fisttps
xor
lcall
push
fwait
push
mov
sti
mov
clc
xchg
shrb
cld
mov
jmp
or
mov
xchg
jo
nop
adc
xor
add
mov
xor
movsl
xor
push
jg
ljmp
sub
sti
mov
loope
jmp
xchg
pushf
sub
movsl
add
nop
push
mov
jo
cltd
loopne
pop
cmpsb
lock
push
subl
dec
in
xorl
cwtl
es
ret
mov
pop
lahf
lock
push
test
adc
xchg
push
or
clc
sub
add
adc
adc
inc
mov
mov
movb
rcr
xchg
sbb
push
xor
aam
loop
stos
pop
jo
clc
cld
daa
push
cwtl
ja
sub
adcb
loop
pop
int3
push
cld
rol
and
and
scas
cmc
mov
addl
pushf
and
mov
pop
jp
or
lret
repz
fcomip
out
jl
and
adc
or
pop
sbb
roll
nop
sahf
pop
cmp
mov
orb
xchg
mov
cmp
sub
outsl
xor
or
sbbl
lea
mov
push
test
push
imul
or
jl
les
jg
jo
loopne
inc
fwait
jl
stos
lea
inc
or
mov
or
dec
leave
call
je
sahf
adc
push
or
mov
inc
out
mov
gs
enter
mov
mov
mov
lds
aas
xchg
rolb
push
push
xor
add
aaa
mov
pop
push
jg
test
inc
sarb
push
icebp
jg
xor
sub
arpl
and
loope
js
push
xchg
dec
je
pusha
insl
aaa
jo
lock
out
inc
mov
jg
nop
idivl
jb
loope
or
and
jno
fcoml
shrl
sub
lahf
mov
xchg
aad
dec
cld
cmp
mov
incb
jb
sbb
xor
ljmp
flds
add
push
sbb
push
ret
decb
sti
idivl
out
ficoms
testb
mov
lock
and
mov
mov
xchg
loopne
and
and
adc
fdiv
inc
adcb
push
fldcw
test
add
and
push
jo
or
dec
les
shlb
and
in
ss
sbb
add
out
add
dec
orb
inc
loop
xchg
cli
hlt
mov
dec
pop
sbb
mov
xlat
xorl
notl
call
mov
out
mov
arpl
ret
popa
cld
inc
cli
jl
ss
arpl
inc
movsb
add
xchg
icebp
les
lcall
popf
shrl
cmpsl
and
or
cmpsl
out
xor
xchg
popf
adc
pop
sub
dec
push
jmp
mov
sub
push
add
inc
push
mov
data16
cld
jg
das
sarl
stc
cmp
add
or
in
fdivrp
and
clc
inc
jge
fcoml
xchg
push
fwait
ds
js
jb
adc
aas
ss
push
pop
fcomip
xchg
aam
jp
xchg
ljmp
fdivrl
lret
inc
ret
into
mov
sub
aaa
rcrb
or
sbb
inc
out
call
mov
pop
lds
mov
mov
out
in
call
sbb
es
fimuls
leave
scas
loop
jne
pop
testb
push
imul
sbb
push
nop
hlt
mov
aaa
mov
xchg
jmp
cs
xlat
jbe
inc
addl
ret
inc
loope
lock
sub
or
xor
lds
add
call
mov
sub
or
cmp
push
rorb
jge
pop
lcall
cmp
repnz
cmpsl
xchg
jle
xor
jge
add
outsl
jbe
sarl
sub
ret
dec
clc
cmp
mov
cwtl
xchg
and
pop
or
and
dec
mov
cmp
mov
sub
sarb
out
xor
inc
sub
incl
add
popl
cld
dec
add
or
pop
fsubrs
hlt
adc
fs
out
outsb
xor
ss
hlt
mov
mov
mov
cld
imul
jmp
add
loop
add
mov
jb
filds
sub
rcrb
mov
stos
jbe
xchg
in
cli
sub
cmp
push
push
aam
inc
mov
add
xchg
adc
and
test
js
mov
mov
mov
ja
shrb
je
mov
incl
xor
xchg
cmp
cli
mov
stc
mov
pmullw
aad
fimuls
adc
xor
mov
inc
sub
ret
adc
sub
inc
pop
push
mov
cmp
cmpsb
imul
jg
xchg
movsb
ds
cmp
push
or
add
imul
sbbb
push
leave
rcrb
and
add
mov
imul
mov
inc
fnsave
loopne
pop
adc
or
fnstcw
lock
clc
lahf
aas
push
mov
push
jecxz
rcrb
hlt
jp
sub
outsl
mov
xchg
nop
nop
inc
gs
ljmp
test
dec
lret
mov
cmp
popa
cmp
shrl
aad
and
adc
pop
and
stos
cmp
out
mov
xor
fildll
roll
test
mov
add
inc
rorl
addl
nop
ficoml
out
es
cmp
fadds
rcl
inc
jo
jg
xchg
add
cs
mov
mov
mov
js
repnz
ret
into
clc
jl
adc
adc
pop
xor
mov
add
push
popf
jp
pushf
dec
das
xor
adc
add
gs
jne
jne
jg
scas
insb
pusha
jecxz
and
xor
cmp
xlat
jmp
push
push
movsl
mov
loopne
rcrb
pop
xchg
ds
jmp
mov
neg
rcrb
xchg
adc
jns
sub
inc
ljmp
push
imul
sbb
jl
jecxz
mov
dec
mov
adc
xchg
cltd
scas
dec
and
inc
cld
mov
clc
in
cmp
sbb
mov
cmc
jl
jmp
mov
in
in
lds
imulb
ja
inc
imul
sbb
xor
rorl
rclb
jg
cs
dec
test
sbb
xchg
lcall
ss
aaa
xor
cmp
roll
push
mov
dec
sbb
mov
sub
daa
inc
jo
push
push
ss
insl
xchg
push
inc
inc
and
mov
loopne
pop
push
mov
ret
sub
out
pop
lods
lds
push
fprem
hlt
pop
jb
cltd
pop
js
jbe
mov
test
fnstcw
add
call
adc
dec
cmc
and
mov
push
scas
notb
mov
sbb
add
or
ja
cmc
imul
bound
popl
sbb
cmpsl
xor
push
inc
or
arpl
adc
mov
loope
mov
jne
add
xor
add
adc
jp
aaa
and
aaa
test
rclb
jle
mov
stc
jbe
sahf
arpl
xchg
sbb
pop
aaa
andb
or
lret
xchg
add
aam
enter
ror
xchg
and
mov
loopne
dec
fimull
test
aas
sub
insb
dec
rol
mov
lcall
push
pushf
mov
iret
xchg
sub
out
rcl
sarb
loopne
cmp
pop
mov
out
arpl
call
jns
adc
insb
adc
mov
aaa
mov
sub
jg
jnp
adc
adc
mov
es
popf
and
inc
and
into
loope
fnstsw
and
add
xchg
sub
in
xor
inc
sti
in
in
mov
lock
jge
decb
inc
mov
sbb
cmp
scas
es
xchg
mov
sub
mov
fmull
jmp
cmp
push
dec
test
cmp
sbb
cmp
je
and
ja
test
mov
es
or
mov
mov
orl
mov
xchg
adc
jg
in
divl
mov
push
fidivrl
loop
pop
shrl
aas
mov
adc
inc
inc
add
mov
test
sbb
lret
and
enter
arpl
pop
dec
cli
mov
call
add
adc
ficoml
out
and
mov
push
inc
sub
sub
mov
imul
push
mov
push
push
xchg
push
andb
push
jo
mov
add
pop
sbb
dec
out
adc
cmp
pop
or
adc
mov
jl
mov
mov
or
jne
subl
aad
loopne
and
je
sbb
or
lock
sbb
adc
sbbb
insb
adc
mov
and
xor
gs
fs
inc
sbb
add
and
lahf
lock
xor
sarb
sbb
out
clc
jmp
popf
std
pushl
loop
cli
pop
adc
popf
mull
and
sbb
and
push
out
loope
imul
xchg
dec
adc
push
or
clc
dec
jge
mov
rolb
stos
cmp
xorb
sub
js
ret
mov
test
jb
mov
insb
popa
or
and
jnp
lcall
mov
jg
ret
aas
sbb
mov
rcr
je
dec
dec
hlt
add
loope
lods
inc
sub
scas
pusha
pop
loope
push
in
cmp
in
cwtl
dec
jg
or
lret
sbb
adc
pushf
rcll
dec
xchg
push
test
xchg
lods
adc
mov
cmp
jo
test
stos
stos
inc
jnp
xchg
out
sbb
leave
lock
jl
outsl
add
add
inc
adc
std
ficompl
mov
push
push
sub
adc
call
and
pop
xchg
mov
mov
call
pop
neg
test
dec
xor
out
andb
mov
xchg
xor
lock
xor
xor
pop
and
movsl
sbb
xchg
jp
mov
pop
xchg
addb
and
xor
pop
mov
std
cmp
pusha
xchg
filds
sbb
xchg
jnp
lods
or
sbb
rcll
lret
xchg
and
mov
pop
jl
aad
cmp
add
scas
inc
popl
xlat
push
aas
pop
add
scas
xor
push
cmpb
test
mov
pop
push
mov
sti
add
sbb
xor
push
imul
leave
mov
mov
aad
inc
push
or
ret
add
inc
sub
inc
cs
stos
xchg
loopne
mov
cs
jmp
dec
jecxz
stos
loope
xor
lods
bound
pop
out
and
jne
lret
mov
push
adc
mov
mov
repz
les
jno
add
int3
adc
test
addb
popl
mov
das
inc
aad
ss
mov
lea
aaa
add
cmp
aad
and
pop
or
cs
ret
mov
fimull
cmp
dec
jg
mov
out
mov
push
push
cs
jl
dec
clc
fildl
into
and
lret
mov
sbb
hlt
add
mov
dec
push
out
dec
lahf
aam
fmull
call
pop
pop
sti
add
cs
addl
sbb
ja
jmp
xchg
inc
lea
test
jbe
pop
or
adc
fbld
xlat
add
call
push
orl
add
mov
push
pushf
pop
cli
jg
lock
cmp
ret
add
iret
inc
call
pop
mov
jo
sub
aas
jge
lds
inc
xor
aaa
sub
mov
ficomps
dec
pop
cmp
decb
mov
ljmp
add
mov
xchg
mov
arpl
dec
out
and
push
jmp
lcall
xchg
into
gs
lret
stos
pop
fs
pop
add
xchg
shlb
inc
insb
xorb
push
jo
lock
mov
ljmp
sbb
in
scas
fmull
jmp
jae
inc
jnp
dec
out
add
or
xor
ja
loopne
aas
inc
xor
jno
sbb
mov
fcompl
mov
pop
sub
sub
pop
outsb
push
mov
aam
in
into
sahf
cmp
mov
mov
mov
lock
call
push
inc
incl
push
dec
sub
and
in
mov
cmp
xchg
loop
hlt
sub
enter
mov
add
lahf
push
jge
js
daa
fdivp
sbb
out
mov
cmp
mov
ficoms
ljmp
adc
mov
std
push
add
lcall
or
push
mov
mov
pusha
xor
lcall
mov
xor
mov
shrb
movsb
sub
insl
jg
add
xorl
mov
push
rcl
and
ljmp
mov
les
push
lret
add
out
pop
adc
sub
or
out
sub
nop
out
cltd
mov
add
mov
jnp
push
jl
xchg
add
and
inc
std
loop
scas
push
loopne
into
test
andb
cmpsl
add
neg
pusha
xchg
test
testl
xor
pop
cmc
fmuls
sbb
pop
ds
xlat
pop
xlat
sbb
cmc
add
push
or
setp
jg
cmp
inc
sub
data16
inc
hlt
ss
fimull
mov
jg
cwtl
xor
ds
push
out
cwtl
cltd
or
mov
call
push
push
into
adc
into
xorl
adc
mov
mov
dec
dec
stc
mov
push
fwait
sbb
pop
leave
nop
iret
mov
cmp
fists
mov
incl
jg
push
inc
aam
and
rcl
and
cmp
push
push
shll
dec
add
adc
add
jns
jle
fcmovb
ds
fmulp
mov
out
sbb
inc
popa
mov
or
adc
push
jo
scas
orb
xchg
out
push
add
les
pop
arpl
push
push
sub
scas
aas
pop
call
jl
push
or
lahf
in
and
clc
push
cmp
adc
or
ljmp
loopne
sub
xchg
iret
add
adc
leave
cld
ficomps
test
xlat
jp
lock
jbe
lcall
in
lahf
jns
clc
inc
mov
mov
push
outsb
int
test
test
sbb
lods
enter
xor
scas
ja
mov
fisttpl
or
or
sbb
filds
es
arpl
ja
dec
cld
push
lea
sbb
dec
push
je
int3
mov
mov
and
cmp
mov
cli
cwtl
scas
pop
inc
popf
loopne
pop
and
jp
mov
xor
cli
dec
and
fcoml
inc
sti
and
push
lret
lds
lahf
push
dec
pusha
fwait
insl
lods
xor
cmp
mov
sbbl
mov
cmp
fwait
bound
jno
push
mov
push
clc
add
sub
pop
pop
sbb
and
imulb
enter
sub
shll
and
loope
push
push
xchg
dec
cwtl
test
addb
call
rorb
mov
ss
outsb
sbb
pop
mov
push
sub
es
add
rol
xor
out
or
repnz
or
mov
jmp
adc
dec
cmp
test
decb
pop
stos
mov
adc
repnz
pop
out
es
out
add
pop
or
lods
add
push
push
dec
call
inc
inc
mov
mov
push
mov
lahf
stos
xchg
xchg
testl
aam
fimull
inc
and
test
imul
repz
inc
nop
sarb
lods
insb
clc
and
shlb
aam
mov
add
pop
mov
mov
call
push
push
mov
arpl
setle
aas
jmp
fistps
fistl
pop
xchg
scas
lret
and
pusha
lods
push
int
sub
push
aas
add
pusha
jo
or
cmp
call
cwtl
cmp
add
xchg
mov
cltd
call
add
xchg
sub
and
add
mov
pop
sub
mov
mov
push
nop
mov
jmp
sub
mov
push
mov
bound
adc
cld
fmul
in
scas
inc
pop
add
lret
mov
pop
mov
nop
out
xchg
sub
imul
nop
decb
add
xchg
aas
addps
inc
jl
add
insl
mov
sahf
sbb
dec
jge
jmp
push
mov
add
inc
into
fwait
aas
add
or
or
push
aas
cs
pop
push
fmul
data16
js
lock
decb
je
adc
shld
aas
xchg
lret
loope
push
push
dec
and
jg
pop
xor
js
sbb
jl
xchg
rorb
test
sbb
fcoml
pop
out
imulb
cmp
shll
pop
nop
add
sbb
and
xchg
in
cmc
add
and
icebp
dec
push
popf
xchg
pop
rcr
jmp
inc
push
mov
and
mov
loope
fldl
push
or
shll
rclb
test
into
outsl
mov
sbb
rcrl
fsubl
inc
ret
xor
sub
loopne
cld
fwait
or
or
in
dec
push
cmp
fmulp
mov
insb
push
enter
movsb
pusha
push
add
cmpsb
jne
arpl
jbe
xor
fisttps
sub
mov
addl
or
sbb
pop
inc
xor
cmp
sbb
push
sbb
cmc
loopne
dec
stc
std
or
jge
cmpb
rolb
dec
bound
scas
movsl
sete
fldcw
idiv
fdivrp
ja
pusha
mov
hlt
cld
loopne
adc
ja
inc
add
xchg
cmc
lcall
xor
dec
clc
sbb
popf
jmp
fcoms
or
bound
cwtl
loopne
ret
rorb
roll
call
rcr
sub
jg
popa
cmp
mov
mov
inc
int3
pushl
mov
pop
mov
out
and
jl
mov
jno
js
pop
pop
mov
test
jbe
jne
xor
test
add
or
xchg
mov
xchg
imul
outsl
int3
mov
cli
push
mov
cmpb
jmp
push
push
loop
pop
pop
or
scas
ljmp
in
sub
stos
add
sahf
mov
lret
rcrl
jne
out
rolb
jg
xchg
xor
fistps
pop
dec
mov
add
sbb
mov
fwait
cmp
sub
repz
je
pop
mov
cmp
sbb
mov
incl
dec
pop
adc
jmp
fsubrs
jbe
xchg
push
push
jmp
add
cmpsl
adc
adc
divb
sub
dec
outsb
xchg
addb
jmp
mov
fcmovnu
and
rorl
cli
dec
out
dec
dec
fistl
push
inc
cmp
inc
sub
das
push
incl
scas
add
mov
jb
lods
shll
xchg
clc
cmp
clc
mov
cmp
mov
adc
std
xorl
mov
sbb
mov
push
lock
cmc
or
sub
push
add
insb
test
pop
mov
sbb
dec
mov
jg
insb
cmp
mov
stos
inc
mov
pop
ret
ja
jg
rolb
and
movsb
shll
lods
mov
push
cs
push
or
jp
test
xor
daa
add
and
pop
add
adc
mov
pop
lcall
push
jmp
xchg
mov
ret
cmp
ret
fisubs
cmpsb
ficompl
std
clc
jmp
inc
dec
mov
mov
and
rclb
shlb
inc
jl
hlt
or
fnstcw
outsb
mov
pop
out
bound
push
lahf
dec
loopne
leave
addl
std
data16
pop
mov
push
in
testb
aaa
and
jle
pop
or
addb
test
addb
cld
gs
sbb
jb
or
mov
ret
cli
test
lret
nop
sbb
pop
out
nop
cmp
push
mov
pop
repnz
test
imul
sbb
and
push
insb
adc
dec
pushf
or
xchg
xlat
andb
xor
inc
fdivs
ret
push
and
mov
pop
addl
mov
pop
sub
js
out
inc
jo
fdiv
add
mov
cld
mov
push
sbb
movsb
nop
push
pusha
sub
or
rolb
add
xor
dec
fmull
enter
jbe
orl
pusha
mov
or
nop
fistl
rcrb
cmp
mov
jge
or
jno
in
fadds
in
jmp
pusha
sub
iret
in
dec
cmp
mov
lahf
mov
push
jg
or
je
add
xchg
test
and
inc
pop
and
jg
xor
push
inc
les
adcl
cmpsl
loop
negl
sbb
push
cmp
dec
ret
daa
clc
lods
push
clc
cmp
add
mov
lock
aaa
adc
push
inc
jne
fadds
fisubrl
and
add
cmc
adc
mov
cmp
rclb
xchg
aas
flds
pop
xlat
mov
add
add
sbb
lret
dec
dec
or
bnd
xor
addr16
ja
push
cwtl
push
js
adc
outsb
mov
lret
dec
js
jne
pusha
xchg
dec
sahf
pusha
daa
sbb
and
adc
scas
addb
and
or
fsubrs
jg
ljmp
mov
sub
lea
cltd
hlt
mov
fcomps
cld
testb
pop
and
je
cmp
mov
mov
add
aas
xor
or
into
add
mov
mov
addr16
fstps
add
inc
mov
dec
dec
or
push
sbb
mov
inc
adc
inc
or
add
loopne
call
loopne
mov
das
and
cltd
test
sub
cmp
je
fisubs
sub
mov
cwtl
addr16
xchg
xor
fmuls
mov
adc
xchg
pop
shlb
scas
push
icebp
sbb
mov
inc
stos
xchg
push
adc
ja
fcom
clc
outsl
dec
pop
mov
mov
je
inc
adc
pop
nop
arpl
jbe
mov
fnstenv
add
add
shll
cs
xor
and
xchg
pop
mov
outsl
enter
jmp
mov
dec
ret
sbb
in
icebp
add
xchg
cmpl
or
mov
mov
jo
aas
std
es
enter
xor
inc
or
stc
push
and
inc
loope
mov
sub
mov
aam
inc
add
cli
test
filds
cmp
pop
push
out
push
adc
sti
je
shlb
add
push
jecxz
pusha
mov
xlat
rolb
inc
mov
clc
pop
cmc
roll
repz
sub
into
xor
cmp
pushl
scas
xchg
repnz
jnp
loopne
loope
popa
push
xor
insb
out
push
cltd
lods
stos
imul
dec
sbb
aad
pusha
push
sbb
ljmp
cmp
cmp
adc
gs
pop
push
in
frstor
loopne
shl
inc
pop
imul
cld
sbb
or
mov
pushf
fsubrs
mov
je
push
inc
sub
js
mov
pop
clc
or
pop
push
mov
push
lea
lods
ds
xchg
insl
mov
sub
jmp
clc
jg
leave
sub
add
and
insb
pop
mulb
pusha
push
mov
xor
jno
test
loopne
xchg
nop
pop
call
arpl
imul
fnstenv
adc
out
outsb
dec
add
outsl
fstps
jo
cli
stos
sub
mov
aad
mov
add
jae
lock
xchg
mov
sub
jae
push
mov
mov
in
mov
adc
lret
data16
pop
sub
cmpsl
and
push
dec
clc
cmp
add
leave
movsl
xor
loope
jp
movsl
aas
jmp
mov
push
orl
inc
test
mov
daa
add
cmp
movsb
cli
jne
imulb
inc
push
push
pop
lcall
sub
ja
push
and
pop
push
in
call
jmp
cs
cmpsb
jb
ds
decl
ds
or
dec
stos
insl
out
xchg
mov
loop
cmp
and
sahf
rclb
jo
aam
mov
mov
lcall
imul
push
mov
jo
dec
jle
and
mov
cld
pop
cmp
insb
and
fildll
lock
push
xchg
icebp
gs
mov
mov
dec
add
les
std
cmp
pop
pusha
inc
movsl
inc
mov
scas
hlt
pop
scas
adc
xor
inc
loopne
aaa
pushf
ljmp
bound
inc
add
sbb
adc
add
popa
mov
jge
and
inc
addr16
add
cmp
cltd
pop
jno
adc
pusha
mov
movsl
adc
inc
pop
or
jmp
jb
push
xor
into
faddl
add
or
pop
mov
sahf
into
jg
add
jmp
ds
adc
fwait
rorb
xor
dec
add
adc
lcall
loop
test
repz
dec
loope
ret
mov
jmp
in
test
sbb
dec
ret
and
push
int
mov
aas
mov
idivl
testl
dec
add
inc
lret
pop
repz
cmp
das
push
out
pop
add
mov
mov
push
push
icebp
mov
sbb
test
push
push
push
jmp
add
pop
fistpl
inc
pop
add
mov
mov
pusha
xor
andl
mov
inc
and
lods
jg
add
mov
pop
sbb
push
sbb
enter
inc
pop
cmp
and
jb
cli
jg
gs
in
sub
sahf
push
in
fdivr
lds
rorb
cli
mov
push
and
dec
loope
loopne
push
adc
cmp
decl
das
dec
mov
xchg
lods
insl
loopne
add
lret
lds
pusha
inc
std
sub
add
jo
add
sbbl
filds
es
pop
add
jo
cli
ss
or
lds
jnp
rcrb
mov
fmull
and
mov
inc
out
and
sahf
push
out
cmp
lods
jecxz
test
jge
dec
outsb
jge
xor
and
sbb
shrl
push
lahf
mov
mov
sub
mov
jmp
pop
adc
decl
lock
insl
inc
pop
lahf
mov
push
pop
xor
test
stos
jmp
or
sahf
scas
aad
movsl
pusha
lret
test
cmc
add
mov
push
or
stos
xchg
jl
cli
cmp
jl
rcll
xchg
testl
push
out
dec
push
lods
rol
jle
push
add
push
cli
jle
test
push
out
push
mov
orl
or
pop
add
stc
lcall
repnz
mov
mov
outsb
sub
shrb
mov
in
rorb
rcrb
addr16
mov
adc
push
or
ljmp
loop
mov
push
jp
stos
inc
push
shrb
and
lock
shrb
jmp
adc
sub
push
nop
push
inc
push
lods
lret
cmp
out
xorl
jl
shll
addr16
fsubrs
add
nop
pushl
mov
mov
ret
jg
lock
daa
inc
adc
call
int
dec
jbe
testl
xchg
dec
sub
movl
mov
js
std
cvttps2pi
mov
inc
dec
mov
mov
fwait
shlb
jno
mov
adc
lahf
rolb
xchg
pop
mov
stc
pushf
ja
sbbl
push
push
or
jo
jb
pop
and
scas
pop
cs
jl
test
idivl
mov
cld
jbe
scas
cmp
pop
mov
or
xchg
ret
sahf
jp
fsubs
fwait
mov
incb
js
cmpsl
xor
jg
push
ret
jae
dec
std
sub
sbb
or
inc
sbb
cs
inc
je
in
orl
inc
fwait
out
adc
ljmp
add
fwait
pushf
or
xchg
stos
jge
mov
js
jo
jg
cmc
scas
pushw
test
bound
inc
fwait
xchg
loopne
mov
ret
fsubrl
dec
cwtl
pop
loopne
add
sub
scas
add
lea
inc
cmp
and
into
int3
mov
rclb
daa
ss
loop
loopne
and
mov
pushf
and
and
in
rcrb
hlt
mov
mov
ret
lahf
pop
jge
fdivs
add
imulb
in
dec
clc
cmp
adc
mov
mov
pop
loopne
mov
jae
adc
push
pusha
mov
and
ljmp
xor
ret
cmp
pop
push
rclb
shrb
lret
insb
pushf
xchg
inc
adc
inc
loope
mov
sbb
and
add
xchg
pushf
fbstp
stos
inc
into
lret
fwait
mov
add
dec
ja
mov
xchg
mov
or
rclb
rclb
addb
pop
in
int3
stc
test
call
decl
cmc
pop
sub
std
ror
add
add
pop
es
jnp
js
mov
jo
mov
jo
mov
mov
lods
xchg
jbe
sub
add
and
pushl
lods
std
xchg
outsl
popa
std
cmp
loopne
inc
push
jns
sbb
xchg
or
cpuid
dec
aas
cld
pop
lea
jo
fcmovbe
dec
rolb
inc
js
jmp
adc
rolb
stos
out
and
mull
stos
incl
mov
cs
dec
pop
inc
push
clc
lret
jmp
sub
push
mov
dec
jmp
fadds
jl
mov
loopne
mov
mov
fisttpl
addl
pop
insb
mov
xor
fnstenv
call
dec
out
movsb
cs
in
xor
hlt
scas
les
test
aaa
icebp
pop
lock
lret
xor
pop
out
jae
inc
adc
cld
or
cmpsb
mov
inc
test
gs
xor
imul
ja
std
mov
jl
popa
popf
push
clc
adc
cli
pop
dec
jp
icebp
push
jmp
out
xor
jmp
jb
cmp
dec
add
xor
push
int
or
pushl
xlat
nop
pop
aas
sbb
mov
pushl
lea
add
nop
mov
push
mov
dec
add
inc
lods
mov
fucomip
adc
ss
subl
es
add
ss
and
repz
ljmp
mov
push
mov
aad
add
pop
loopne
call
mov
jo
pop
cmp
fimuls
ds
orb
inc
faddl
cmp
cmp
insl
cld
enter
lock
repz
mov
das
sub
jb
das
ljmp
in
and
call
add
std
pop
inc
push
adc
test
lds
mov
adc
call
mov
add
pop
jecxz
xor
adc
mov
jg
inc
or
cmp
je
cmc
sub
push
clc
nop
sarl
mov
subl
xchg
xchg
inc
enter
pop
shll
std
fisubs
cmp
mov
aas
push
jb
mov
orb
js
jp
sarl
and
mov
cli
push
cmc
shll
pushf
hlt
cs
clc
push
sub
iret
mov
ret
incb
sbb
jle
mov
dec
iret
mov
out
push
adc
ds
xchg
daa
push
lea
mov
push
sbb
imul
dec
inc
mov
dec
mov
jp
cmp
jnp,pn
negb
push
adc
movl
cmp
cmp
scas
add
sbb
loope
jne
out
fldl
adc
dec
es
test
icebp
outsb
movsb
push
inc
and
push
add
fisttpl
lods
add
push
mov
inc
mov
insb
and
cmp
push
rep
pop
stos
push
xchg
pushl
pop
pop
mov
std
out
or
pop
inc
cmpsb
sahf
ret
inc
jbe
jb
vmread
sub
pop
inc
and
sub
push
cmp
mov
jnp
adc
add
add
lock
sub
and
stc
cmp
les
inc
cmc
jg
pop
scas
pop
rcl
inc
sub
pop
lret
out
hlt
add
add
or
out
sahf
sahf
push
outsb
xchg
popf
js
test
pop
xchg
inc
sub
insb
pop
adc
sbbb
out
lds
sub
bnd
repnz
jne
add
loopne,pn
sub
adc
inc
dec
mov
outsb
iret
daa
adc
mov
pop
stos
xor
arpl
mov
call
jecxz
pop
mov
aad
test
fbld
pop
pop
mov
cmpsb
lcall
mov
push
sbb
inc
leave
mov
outsb
mov
lock
icebp
insl
lds
inc
push
mov
push
call
lock
push
xchg
mov
jl
push
loopne
xchg
pop
jle
mov
sbb
mov
push
pop
lock
jle
rorl
psrld
ljmp
ljmp
repnz
sbb
enter
pop
inc
mov
outsl
add
mov
adc
xchg
lock
pop
dec
popf
sarl
or
jo
out
dec
pop
in
add
push
push
mov
pop
sub
pusha
lret
pusha
push
fisubs
inc
inc
mov
decl
out
and
add
mov
add
jae
je
in
push
fsubs
insb
or
pop
sbbl
and
inc
xor
cmp
nop
adc
aam
jo
jge
lds
xor
dec
arpl
dec
lods
mov
bound
xchg
and
in
pushf
or
pop
fldt
cltd
repnz
push
popf
aam
sbb
call
dec
mov
cmp
jg
adc
pop
fisttpll
xchg
and
mov
sub
or
jl
mov
shr
mov
fs
je
xchg
ss
sbb
imul
cmp
mov
lcall
inc
cli
sbb
add
sbb
mov
loop
xorb
std
loope
sbb
push
loopne
addr16
fmuls
bound
push
jmp
loope
cmp
jne
popf
push
mov
dec
mov
lods
add
xor
js
lcall
or
das
mov
xchg
movsb
jle
call
mov
in
push
sub
push
adc
mov
adc
push
xchg
clc
int
add
ss
mov
push
add
lea
push
cld
cmp
push
adc
sub
push
fsubs
adc
jbe
lods
icebp
cmp
call
cmpsl
lcall
push
pop
adc
repnz
or
ja
out
rol
shlb
rcr
sar
pop
add
lock
mov
mov
mov
jo
into
outsb
stc
add
fwait
add
fistpll
cli
aas
adc
jecxz
add
shl
jbe
dec
push
lcall
sub
and
add
mov
add
sbb
jnp
xor
xor
lods
les
or
inc
jmp
icebp
aam
int
pop
in
mov
in
add
push
pushl
out
ds
ljmp
add
call
jl
mov
rol
loopne
inc
jp
test
mov
movb
cmpsl
aaa
sub
dec
js
xor
xor
ret
jl
inc
mov
int
push
shlb
inc
push
and
aam
int
aam
in
gs
jecxz
in
outsb
adc
ljmp
test
mov
adcb
adc
sti
es
jle
sbb
mov
xor
lock
das
cmp
lods
jmp
and
movl
mov
xchg
mov
adc
push
push
js
pop
push
or
outsb
sbb
jb
mov
rorl
cmp
cmp
dec
pop
loopne
xor
cmpsl
cmc
mov
inc
ret
sub
pop
iret
add
push
iret
or
sub
imul
inc
fwait
lcall
inc
mov
std
repz
push
xor
outsl
inc
enter
mov
push
xor
dec
add
ja
subb
pop
cld
icebp
ds
mov
loop
rcrb
add
rolb
xor
dec
push
jns
xchg
pop
mov
btl
ret
iret
add
out
sbb
lea
outsl
mov
loopne
pop
add
xchg
mov
and
shlb
mov
hlt
int3
push
insl
jno
push
js
mov
xor
lcall
sarb
out
in
mov
xor
leave
std
pop
and
sbb
push
popf
iret
loope
jecxz
mov
scas
mov
push
mov
mov
sub
xorb
lea
mov
and
add
shrb
sarb
mov
fwait
and
shlb
dec
imul
cmpsl
test
sbb
push
shl
stos
rcrl
pop
sbb
daa
mov
enter
scas
pop
inc
pop
xchg
dec
pop
pop
inc
push
test
sbb
in
jne
pop
dec
lahf
dec
bound
dec
out
negl
adc
leave
loopne
sbb
push
or
mov
push
sbb
inc
pusha
das
imul
loop
inc
xchg
mov
jmp
pop
adcb
push
jb,pn
ljmp
sub
jbe
mov
cmpb
int3
test
jg
xchg
pop
mov
repz
rol
mov
pusha
in
mov
dec
or
xchg
pop
pop
xchg
pop
jg
in
adc
or
cld
or
or
pop
lea
or
cmp
mov
scas
cld
dec
fbld
jl
lds
lret
fstpl
les
rol
cmp
subb
enter
mov
outsb
movsb
push
and
imul
bnd
or
or
xor
push
sub
gs
dec
add
addb
jle
inc
pop
add
sbb
or
leave
jb
push
xchg
pop
mov
shll
push
ficompl
jne
and
subb
adc
in
imul
cltd
jbe
lock
lock
insl
inc
lcall
fs
jecxz
add
pop
sub
dec
sbb
shrl
into
int3
add
cmp
push
stos
or
lahf
stos
loop
les
and
pop
arpl
sarb
movsb
pop
inc
and
adc
std
cmp
ret
cmp
lahf
adc
ret
mov
and
insl
jle
inc
loopne
rol
fisubl
inc
sar
dec
dec
outsb
push
add
je
and
stos
sub
rolb
loop
dec
arpl
out
push
jo
xor
push
and
fldl
push
cmp
cs
test
ds
movsl
mov
out
dec
adc
add
sti
pop
icebp
scas
cmp
and
mov
loopne
add
xchg
mov
fdivr
nop
fnsave
cmpsl
lods
pop
and
cli
mov
adc
dec
push
jo
popa
repnz
lea
cs
ljmp
or
out
adc
aaa
insb
adc
add
mov
clc
int
and
dec
fcom
pop
pop
mov
jo
fucom
call
mov
clc
outsb
push
bound
mov
sbb
outsb
call
add
adc
add
jl
scas
push
xor
xor
and
jmp
js
fiadds
mull
sbb
out
jbe
xchg
lret
mov
inc
cmp
insb
xchg
and
ja,pt
int3
jl
lret
or
mov
add
enter
jecxz
sub
cmc
pop
jl
pusha
icebp
cmp
hlt
ret
inc
mov
xchg
jae
insl
popf
std
gs
iret
xchg
loopne
fidivrs
loope
lcall
bound
call
negb
xchg
and
mov
aaa
je
popf
cmpsl
jle
and
sub
push
mov
mov
or
lock
mov
shlb
ret
fwait
xchg
sub
mov
xor
repz
data16
sbb
jae
dec
push
jl
andl
pop
bound
shrl
clc
xor
sahf
dec
inc
ljmp
loop
incl
push
mov
test
xchg
sub
push
rcrb
fimuls
add
loopne
dec
xchg
cs
jmp
or
fwait
dec
fs
dec
dec
adcl
push
mov
push
lret
sub
sbb
dec
dec
and
cmp
or
mov
int3
cmpl
aam
or
add
std
push
lret
add
sub
outsb
pop
or
std
mov
ud0
dec
add
pusha
data16
pop
ds
int3
fcomip
aaa
mov
daa
add
out
fildl
xchg
lea
inc
dec
xor
push
bound
fwait
xchg
adc
mov
rol
movsb
psraw
mov
pop
arpl
test
add
mov
in
inc
leave
jg
pusha
push
mov
push
mov
fldl
cmpsl
addr16
lods
xor
mov
jmp
or
cmp
xchg
push
daa
aad
aas
mov
ret
adc
popa
js
in
in
mov
aaa
mov
jae
es
pusha
fcomps
mov
cs
add
icebp
or
inc
loope
popa
adc
push
or
lcall
pop
out
into
test
std
or
imul
hlt
ljmp
sbb
or
addr16
sar
inc
popa
mov
jbe
mov
push
inc
ret
loopne
xchg
enter
mov
xchg
shll
rcrl
push
ficompl
mov
sub
push
xor
mov
mov
leave
pop
pop
pushf
add
mov
and
add
adc
shll
xchg
sub
jbe
or
xchg
rcrb
pusha
cld
xchg
shlb
movsl
inc
insb
mov
inc
dec
inc
jmp
inc
pop
mov
adc
cltd
mov
shl
jae
fisubrs
shrl
das
pop
mov
sub
mov
and
xor
mov
xchg
in
popa
or
insl
sbb
test
add
push
sbb
lret
aaa
xlat
leave
mov
push
jo
cmp
push
xchg
stc
mov
loope
add
lods
mov
aas
inc
xchg
hlt
sbb
jg
mov
aas
repz
in
loopne
pop
cmc
int3
pop
repz
sbb
jno
mov
mov
ret
outsb
cmp
leave
jl
loop
add
lods
mov
fdivr
clc
sbb
stos
inc
xor
pop
lods
loop
leave
gs
mov
cmp
jmp
clc
dec
mov
add
mov
in
fwait
cmp
decl
imul
add
in
adcb
rcrl
nop
or
loop
or
mov
in
push
lock
ja
and
out
inc
sahf
sbb
stos
stos
rclb
add
bound
imull
jg
jne
jnp
fwait
push
lock
sarl
sub
dec
cmpsl
adc
out
insb
jg
cwtl
lahf
jl
shll
cmp
out
mov
ret
outsl
cmp
jbe
int3
push
testl
xchg
into
es
pop
subb
nop
lret
adc
xchg
and
pusha
idiv
xor
cltd
or
jo
push
mov
cmp
imul
add
shrb
lahf
in
jb
mov
test
not
stos
clc
pop
mov
push
in
in
call
lret
fucomp
sti
adc
cmpsl
dec
or
sub
loop
mov
mov
and
dec
idivb
jl
sub
mov
inc
add
ret
adc
push
in
or
popa
xchg
outsb
stos
les
cmp
pop
inc
out
push
and
dec
jmp
testl
push
or
push
jg
jbe
sub
mov
loope
xchg
wrmsr
popf
sub
cmp
cmp
or
and
decl
outsb
jne
sbb
js
dec
xor
sarl
shlb
xlat
aaa
mov
pushl
mov
xor
and
mov
das
adc
sub
stos
stos
incb
ror
pop
xchg
loop
and
dec
inc
negb
loopne
mov
rcll
shrl
int
sbb
pop
inc
mov
pop
movsb
enter
lcall
shl
push
xchg
adc
sub
test
scas
pop
aas
mov
xor
mov
movsl
mov
orb
mov
sbb
add
icebp
jg
push
sub
scas
sbbb
inc
fidivl
ljmp
in
jg
inc
stc
rorl
add
cwtl
ljmp
rcrb
int3
pop
mov
inc
mov
sbb
jns
fstpl
and
cmp
rolb
andb
add
jge
test
xlat
cwtl
filds
mov
mov
sub
fisubl
push
cmp
rol
sbb
adc
mov
lcall
adc
push
push
aas
aam
pusha
adc
shlb
loopne
cli
or
mov
call
insb
and
add
mov
int3
lock
cs
push
aam
out
cld
add
test
push
cmp
push
push
sbb
jno
sub
sbb
shll
or
shr
and
cli
leave
inc
push
jbe
ss
popf
jle
stos
adc
out
or
xchg
mov
rcrl
sbb
pop
int
inc
pusha
stos
pop
test
dec
push
sub
testl
jmp
push
es
push
das
decl
and
sti
sub
daa
leave
inc
inc
sbb
nop
hlt
incl
ret
push
jnp
lea
shl
ret
rcll
inc
int3
je
fsubp
lahf
push
cmp
mov
test
das
es
and
test
pushf
adc
out
fcmovnb
test
mov
int
lods
xchg
daa
jle
pushl
jns
out
out
jb
mov
adc
sbb
sbb
mov
sub
call
push
lahf
fisttpl
iret
xor
outsb
mov
popf
xchg
movsl
add
decb
cmp
xchg
and
mov
and
mov
jg
inc
mov
lret
leave
mov
add
push
aas
in
mov
push
or
aaa
mov
and
push
inc
sub
cli
jae
loop
cs
cli
add
ss
jo
dec
xchg
clc
add
fstpt
jl
cld
lods
sub
repnz
negb
and
add
ret
cmp
clc
push
movsb
push
addr16
xor
xchg
add
or
add
rorb
ljmp
mov
lret
cmp
mov
xor
add
dec
std
push
sbb
lock
push
push
fdivrs
rorb
push
jp
mov
loope
adc
leave
loop
rcll
jmp
mov
jge
dec
outsl
test
arpl
mov
fiaddl
pop
push
mov
mov
add
out
cmc
loope
xchg
ds
test
cld
ja
rcr
xchg
out
fcmovnu
mov
or
jbe
pop
lret
ss
pop
cmp
push
or
add
xor
ljmp
and
push
jge
shr
pop
jl
leave
pop
cmpl
popa
mov
mov
pusha
lods
out
rcrb
push
xor
inc
push
stos
mov
clc
nop
and
cmp
xor
mov
shrl
fcmovbe
decl
test
cmp
jle
jl
push
dec
mov
cmp
ja
xchg
cmp
insb
mov
je
mov
sub
out
loope
cld
ljmp
pop
push
loope
aas
rcrb
add
idiv
mov
stc
pop
inc
adc
or
test
out
movsl
hlt
das
fwait
stos
xlat
cmc
mov
subb
das
shll
mov
loop
add
xchg
daa
fdivrs
adc
xchg
adc
pop
movsb
xchg
mov
xchg
xor
jle
fcmove
aas
pop
cmp
mov
mov
mov
lock
cmp
push
sub
test
mov
mov
fidivrl
cld
roll
ljmp
movsl
adc
push
jmp
jg
mov
inc
inc
rorb
rolb
inc
sbb
int3
imul
mov
sbb
ja
push
mov
inc
mov
pop
sub
and
mov
test
clc
movb
and
adc
addl
mov
rcll
mov
loope
mov
add
inc
push
mov
repnz
fs
mov
pop
and
mov
inc
sub
or
cs
mov
adc
int3
add
clc
outsl
push
loopne
jae
out
jo
repz
push
add
stc
inc
popl
mov
cmp
test
hlt
add
ja
add
sti
jo
cld
outsb
bound
nop
mov
jnp
ds
jno
mov
pop
mov
mov
ret
pop
ficompl
outsl
lcall
cmp
and
arpl
xchg
adc
cmp
xchg
pop
xchg
push
cltd
adc
adc
loopne
arpl
jl
ja
psubusw
negb
test
orb
mov
mov
add
fdivr
ss
pushl
iret
scas
adc
cmpsl
jnp
jg
mov
sbb
xchg
cmc
fwait
cwtl
repz
stos
dec
and
aas
mov
cmpsb
incb
fsubr
xor
call
add
cmc
cmp
fs
loop
cmpb
inc
out
sarb
push
outsb
fs
sub
pop
and
in
iret
mov
mov
jle
nop
fimuls
cmpsb
and
add
nop
cmpsb
in
and
push
cmpb
in
mov
jbe
cld
xor
sbb
push
xor
dec
lahf
and
xor
xchg
mov
out
icebp
xor
fsubr
mov
mov
cmpsb
clc
test
pop
sub
mov
cmc
fs
jg
ljmp
ljmp
outsb
loopne
std
or
mov
jmp
jp
add
cmp
outsb
and
inc
cltd
jo
fdivs
sbb
pop
adc
jo
inc
out
icebp
mulb
ret
jo
test
ljmp
inc
out
out
shl
mov
inc
mov
add
std
stos
dec
add
loopne
fs
jg
fiaddl
ljmp
or
mov
push
jno
push
pop
push
add
sub
mov
xor
xchg
inc
in
cmpsb
test
jecxz
mov
sbb
and
and
push
sbb
mov
imull
into
fisttps
adc
repnz
dec
jbe
xchg
add
add
ret
ds
test
hlt
negb
dec
in
mov
push
dec
ja
subb
jp
jle
jb
bound
or
popa
mov
xchg
repz
push
push
mov
mov
pop
std
dec
out
lret
pop
cwtl
mov
leave
mov
dec
std
gs
stos
lcall
add
adc
push
les
jb
gs
mov
cli
inc
stos
push
jg
mov
push
shrl
jb
scas
lcall
mov
lret
mov
and
sarl
jl
adc
fldenv
dec
adc
insb
fnstsw
test
mov
mov
cltd
or
jo
dec
add
mov
sahf
movsb
decl
add
lds
sub
cmpsl
and
add
movb
fs
add
out
sub
xor
test
push
inc
jb
sub
jg
fisttps
addb
out
pop
adc
push
lds
push
add
cmovae
fisubs
push
jg
hlt
push
out
shrb
divb
cmc
sub
cld
nop
call
icebp
lods
lds
inc
pop
mov
push
pop
icebp
dec
add
add
lahf
pop
sub
pop
mov
int
clc
cmpsl
int3
jae
adcb
fidivrl
dec
pop
insl
pop
subb
ret
xchg
mov
insl
test
loope
test
mov
add
and
movsl
add
jp
jns
or
inc
ds
inc
std
int
or
dec
lds
sbb
sbb
xor
cltd
mov
cmp
push
xchg
insl
in
xor
ds
adcb
jbe
xchg
jnp
xor
scas
mov
jne
mov
sbb
aas
aam
dec
push
test
adc
sti
pop
sub
add
popf
addr16
sub
aam
loopne
dec
push
mov
in
push
cltd
jge
xchg
ret
ret
les
rolb
mov
push
inc
or
lcall
sar
mov
adc
aam
enter
and
ret
pop
push
lcall
stos
xchg
pop
push
or
add
add
add
cltd
jae
xchg
jb
popa
push
fcoms
cli
sbb
add
mov
mov
cmpsb
pop
sbb
mov
mov
call
add
movsb
jmp
cmp
or
insl
cwtl
aas
adc
jg
pop
add
cmp
add
outsl
mov
aam
sub
adc
push
add
add
dec
fldl
or
mov
js
inc
loop
aad
testl
rcrb
xor
in
data16
scas
mov
inc
dec
xorb
scas
scas
iret
sub
push
popa
mov
and
popa
and
add
xor
lcall
stos
or
subl
fsubl
test
and
lock
lock
jmp
les
loopne
fbld
dec
adcb
jo
sahf
dec
or
ret
xchg
cmp
lock
jecxz
hlt
inc
mov
pop
filds
jl
ret
cs
movsl
add
cmp
inc
mov
out
popa
pop
jo
sbb
lcall
add
testl
neg
mov
jg
or
xchg
mov
in
adc
push
mov
mov
fdivl
or
jo
loope
xchg
add
hlt
push
sub
adc
paddb
mov
js
xchg
scas
loope
out
adc
mov
lds
fsubs
xchg
std
xchg
xorb
nop
mov
adc
xchg
xor
xor
xor
sub
jl
mov
cmp
out
push
popa
xchg
loop
lods
dec
jmp
mov
pop
cmp
aam
sbb
pop
lea
mov
call
ja
ret
mov
testl
jle
hlt
mov
in
xchg
cmp
lea
pop
ljmp
int
mov
aas
inc
aad
or
pop
inc
jo
adc
stos
or
daa
xor
lcall
call
in
setle
in
das
sbb
push
stos
popa
rcrb
push
lcall
cld
push
daa
jmp
mov
frstor
gs
adc
inc
call
mov
sahf
push
push
push
mov
jne
in
scas
clc
push
clc
out
sub
and
pusha
jnp
xor
xor
aam
int
ds
or
jg
sti
push
xchg
mov
mov
xchg
mov
mov
les
roll
xchg
push
pop
test
mov
aaa
jnp
fisttps
cltd
or
ffree
mov
sbb
test
add
jp
push
fstpt
mov
insl
call
push
out
cwtl
mov
mov
pop
push
sbb
push
mov
js
adc
pop
sbb
scas
js
mov
incl
cmp
inc
out
cmp
fldl
push
sub
mov
das
shlb
jg
shrb
push
movsl
loope
out
jae
shl
dec
pop
push
or
lret
mov
pusha
pop
std
fs
push
ljmp
xchg
aam
loopne
mov
mov
lods
xor
mov
cli
addb
andb
repnz
imul
sub
mov
add
outsb
push
mov
dec
sarb
shlb
test
cwtl
aam
daa
rolb
push
xor
mov
xor
icebp
mov
mov
inc
sub
jbe
rclb
pushl
sub
pushf
cmp
out
fstpt
mov
aad
and
je
fs
add
cwtl
movd
fwait
popa
insb
hlt
xor
sbb
cmpsb
xor
xor
jns
mov
cmp
and
mov
js
mov
adc
jo
cmpsb
incl
sub
cmp
js
mov
or
hlt
push
mov
int3
xchg
in
mov
jmp
or
adc
mov
in
out
scas
xchg
mov
adc
adc
inc
cmpsb
pusha
dec
xchg
nop
push
pop
push
mov
jnp
js
aad
or
mov
call
ljmp
insl
popf
cld
repz
cmp
fisubrs
mov
mov
iret
repnz
mov
lods
das
and
fadds
sub
shl
sub
pop
mov
or
or
icebp
xor
es
inc
stos
mov
mov
out
rorb
cli
or
cmp
je
cli
adc
cs
dec
mov
add
and
add
cltd
adc
sbb
shlb
scas
jae
outsl
push
icebp
mov
mov
or
sbbb
or
xchg
int3
add
dec
cmp
xchg
hlt
mov
push
lods
mov
mov
push
cwtl
std
adc
push
mov
sub
vpunpcklbw
test
inc
cld
cs
pop
call
sbb
sub
adc
cmp
repnz
add
jae
ljmp
ja
xor
pop
je
jne
pusha
or
aaa
stos
mov
push
ficompl
sbb
xchg
out
push
decl
push
mov
jp
call
lds
mov
rcrb
push
add
int3
repnz
mov
xchg
cmpl
xor
jg
jo
mov
bound
loope
inc
mov
xlat
je
mov
mov
xchg
xchg
pop
inc
and
dec
fstpl
loop
jg
outsb
scas
clc
push
dec
inc
nop
pop
sbb
push
loope
sbb
loope
ja
xor
pusha
enter
std
push
cld
in
ficomps
fcomps
lret
jp
cwtl
xor
xchg
ret
repnz
inc
in
sbb
aaa
push
shl
sahf
repnz
jle
cmpsl
push
insl
call
fxch
fidivl
push
in
jmp
inc
jmp
dec
mov
lret
inc
xlat
add
xor
cmp
dec
outsb
std
mov
call
sahf
std
adc
add
in
jge
jno
outsl
mov
movsl
jbe
jge
aad
nop
push
or
adc
lods
es
les
and
pushf
add
es
idivl
movsl
and
decl
fstpt
mov
in
pop
lods
jle
aaa
push
into
and
lar
add
mov
sbb
xor
lcall
or
sub
enter
cmp
rorb
mov
ret
dec
pop
hlt
pop
push
loope
fs
imul
arpl
push
xor
addl
jp
out
rolb
lock
cld
pop
enter
xorb
dec
insl
incl
add
xchg
cmp
je
data16
test
jecxz
mov
push
mov
and
pusha
sbb
mov
shlb
pop
bound
mov
das
jecxz
aas
cmp
push
mov
mov
sub
frstor
mov
roll
pop
ret
xchg
mov
rol
jecxz
push
aaa
pushf
stos
lcall
xchg
add
imul
ds
sbb
aas
push
shll
movb
mov
js
jge
xor
jmp
add
test
pusha
mov
fiadds
into
cmp
mov
fnsave
sar
dec
fmuls
lcall
dec
mov
mov
push
sub
bound
mov
add
sbb
dec
ja
in
jg
xchg
out
push
rcr
notb
aam
jecxz
and
adc
jg
mov
add
sub
addr16
aaa
push
mov
jle
pop
cmc
mov
push
add
mov
out
std
mov
sub
push
and
sbb
xor
mov
lods
push
nop
cwtl
ljmp
jp
push
dec
das
lahf
add
add
loop
insb
and
mov
daa
insl
sahf
jmp
lret
call
dec
roll
aad
stc
sbb
xor
and
movsb
inc
fwait
inc
sub
test
adc
pop
sub
and
xchg
mov
ja
pop
imul
mov
scas
jl
jbe
outsb
and
test
xlat
scas
mov
xlat
xor
add
mov
pop
hlt
aaa
rorl
std
mov
push
xchg
cmp
jo
decl
test
ss
push
enter
or
mov
mov
lock
dec
xor
mov
and
fcomp
cmp
add
in
add
mov
sbb
xacquire
cmp
xor
cwtl
sti
xorl
sub
or
adc
hlt
clc
popa
mov
pop
ret
outsl
fwait
rcrl
insb
loope
inc
cld
das
mov
add
cmp
sub
sub
lret
movsb
into
mov
add
push
mov
pop
pop
jo
jecxz
xchg
rcll
jp
mov
cmp
jg
pop
pop
sub
outsb
scas
pop
add
or
add
dec
jg
sub
pop
cld
mov
loopne
std
push
push
push
push
pop
ljmp
dec
ja
in
inc
lds
jb
and
test
push
inc
xchg
cmp
push
sarb
add
bound
lds
adc
pop
and
sub
mov
pop
filds
aad
and
insb
adc
divb
mov
hlt
add
mov
popa
in
jg
cltd
jno
mov
push
es
sub
fwait
adc
adc
push
jno
sbb
mov
lret
or
mov
std
incl
cs
inc
js
outsl
push
repnz
pop
ret
add
dec
jmp
jmp
push
test
pushf
idiv
sub
cltd
pop
cmc
test
xor
data16
or
rcrb
pushf
adc
mov
hlt
push
push
add
cmp
sub
sub
mov
sub
lret
cli
arpl
inc
mov
add
arpl
dec
cld
inc
xor
popf
test
fwait
popf
jge
imul
fsubrs
sbb
sbb
jp
subb
xchg
rclb
cltd
popa
popl
and
outsb
orl
mov
ljmp
add
ror
or
test
aas
cmpsb
shll
fisubs
sbb
add
fneni(8087
popa
add
sti
je
loopne
fdivrl
fwait
and
xor
mov
addr16
sbb
jno
add
jp
push
dec
or
int3
sbb
cli
cmp
scas
push
fisubl
out
scas
mov
in
push
rcrb
lcall
push
mov
lea
pop
ret
jecxz
sub
adc
aam
pop
ljmp
cmp
add
jmp
int3
pop
shr
aam
in
sbb
movsb
add
jbe
pop
adc
jo
add
add
addr16
cmp
add
bound
in
sbb
scas
push
lret
xchg
jecxz
ja
adcb
and
roll
in
pop
loope
xorb
jge
fstpt
in
ds
sub
add
imul
inc
xchg
lcall
shll
lcall
fwait
clc
push
inc
jnp
fildll
cmp
pushf
and
lea
outsl
ret
mov
outsl
ret
outsl
ret
adc
dec
clc
lahf
push
rol
dec
or
add
iret
rol
jno
xchg
jae
andl
and
sahf
dec
cli
mov
aaa
pop
ret
ljmp
push
xor
sub
push
mov
and
mov
mov
lock
scas
sbb
outsl
mov
pushl
xchg
sbb
fdiv
pop
pushf
addl
movsl
cmp
push
bound
add
jae
pop
out
jmp
jmp
inc
and
add
mov
ljmp
icebp
sbb
xchg
push
aam
adc
and
push
std
mov
and
fisubrs
adc
sub
out
dec
jb
jb
pop
sub
push
push
push
and
cld
decl
jge
shrb
sti
mov
jno
pusha
ret
repnz
ret
mov
imul
rcrl
insb
add
push
add
add
rcrl
lcall
inc
jb
setg
adc
inc
or
add
aas
aam
push
add
xchg
add
cld
sub
jecxz
push
xchg
push
call
and
aad
xor
dec
data16
pop
push
std
jle
xchg
pop
enter
sbb
outsl
mov
adc
mov
dec
and
outsl
or
fucom
pop
or
hlt
xchg
and
loope
fidivs
pushf
test
loop
and
sbb
hlt
and
insb
pop
testb
ljmp
cmp
stc
jp
sbb
push
add
push
push
into
inc
cmp
mov
std
mov
call
xor
push
pushf
mov
fistpll
sahf
in
sub
lret
inc
pop
popf
sub
cmpsb
flds
or
mov
mov
mov
jle
push
pop
push
cld
mov
fldcw
dec
xor
lahf
add
push
or
cmp
push
mov
dec
pop
push
not
mov
lret
outsl
lods
jne
push
insl
cmp
pushl
and
test
aaa
and
inc
mov
ficoml
mov
sub
add
dec
idiv
and
aam
jg
dec
incl
cmpsl
jecxz
out
ss
and
sub
mov
xor
adc
or
lods
add
je
mov
hlt
jg
sub
jge
sti
int
int3
leave
mov
hlt
add
lahf
pop
or
pop
sbb
and
add
xchg
cmp
pop
rcl
adcb
stos
sub
sahf
imul
lock
mov
xor
aam
cmc
das
xchg
xor
iret
inc
mov
gs
jnp
add
and
fstl
push
clc
dec
ds
dec
mov
daa
push
add
sub
jmp
mov
xchg
int3
sbb
cmp
sub
movl
sbb
mov
call
scas
inc
mull
push
fiadds
ss
and
xor
mov
inc
pop
inc
sbb
dec
jecxz
or
push
inc
fcom
and
ja
faddl
bound
mov
pop
lock
mov
test
xchg
mov
pop
mov
loop
outsb
add
inc
sbb
cmpsb
mov
ja
lds
jnp
rcr
cmp
imul
sti
test
mov
out
leave
push
or
add
mov
push
rcrl
dec
jns
es
popa
das
xlat
daa
loopne
xor
fsts
icebp
sbb
iret
xor
lret
inc
add
mov
ret
xor
jle
inc
aas
hlt
sbb
inc
fisubl
std
ds
das
mov
fnstcw
test
popa
jns
adc
jp
cmp
stos
ret
add
je
sbb
arpl
mov
add
aaa
and
add
outsb
js
test
movb
and
pop
or
sub
xchg
es
pop
and
pop
les
cmc
jne
sbb
in
cmp
pop
and
or
mov
fbstp
mov
mov
inc
mov
sub
loopne
test
scas
xor
test
xchg
in
jg
jb
pop
lcall
insl
pushf
hlt
aam
ret
jle
and
and
ret
mov
mov
jmp
rorb
dec
bound
mov
push
or
sbb
sub
push
out
jg
adc
fiadds
cwtl
adc
mov
mov
add
adc
cmpb
dec
jle
push
mov
dec
inc
mov
enter
cli
popf
jle
jg
lods
mov
and
cmc
push
aam
push
and
incl
out
jl
xchg
pop
fimuls
adc
mov
cli
ljmp
aaa
jmp
mov
jecxz
ds
mov
xchg
sub
or
mov
mov
dec
xor
loop
out
lock
and
outsb
jo
aam
pop
pop
lock
mov
cld
insb
shll
dec
cwtl
add
jb
inc
inc
insl
and
add
mov
sub
gs
mov
cmp
call
adc
popf
adc
jnp
hlt
add
sbb
xchg
rclb
push
mov
adcl
negb
mov
jb
mov
ret
fiadds
mov
and
push
mov
dec
jl
fsubrl
sub
decl
cld
sahf
xor
pushl
jmp
inc
cmp
loopne
sub
in
inc
jge
pop
or
adcb
pop
mov
scas
mov
push
out
scas
sbb
cmp
aad
mov
movsb
and
dec
inc
inc
mov
repnz
sub
and
add
fsub
aaa
adc
adc
mov
fdivrl
add
mov
mov
jbe
mov
aaa
loopne
jecxz
subl
data16
movsb
clc
test
push
cli
ja
mov
cmp
push
pop
push
scas
or
sub
mov
sbb
jne
jns
test
adc
push
push
rorb
xchg
decl
jle
add
loope
sahf
mov
and
inc
add
fcompl
push
dec
inc
je
fs
xchg
mov
or
mov
mov
mov
xchg
cmp
aas
sub
shr
jne
dec
pop
push
lret
in
dec
aam
popf
and
pop
cmc
cmpsb
add
decl
mov
sub
sub
or
mov
test
das
cmp
pop
popf
lret
sub
lods
pop
add
mov
xorl
jo
pop
lea
les
loope
mov
pop
mov
mov
xchg
inc
mov
and
stc
cmp
mov
sarl
mov
adc
imul
clc
xor
or
out
and
mov
shlb
jl
mov
sbb
push
ds
lahf
lret
shll
mov
inc
pusha
sbb
mov
fimull
dec
sub
push
movsb
push
xchg
jo
push
cld
lcall
inc
sub
int
jmp
roll
pop
xor
ror
es
hlt
jg
and
jg
dec
xchg
or
sbbl
lcall
jge
cld
adc
addr16
adc
and
cld
fistpll
or
fdivrs
idivl
pop
pop
cmpsb
jmp
lret
add
sub
les
scas
insb
aam
in
push
fcmovnb
ljmp
hlt
xor
or
into
inc
shrb
and
out
dec
add
add
rorb
cmp
subb
stc
and
jp
out
sbb
add
clc
adc
inc
gs
fdivr
loope
rcr
and
ds
mov
jmp
xchg
push
lahf
test
es
shrb
jmp
imul
sub
outsb
inc
ret
in
fisubs
shlb
lahf
faddl
sar
xor
add
adcl
sub
call
hlt
mov
mov
pop
push
incl
adc
incl
mov
xor
dec
push
jecxz
std
fildl
cld
and
mov
inc
shr
pop
xor
pop
and
or
sbb
rcr
andl
push
dec
adcl
or
ffree
js
aaa
andb
adc
add
fwait
ret
repnz
jmp
cld
sub
adc
xchg
outsl
add
ret
or
test
xor
and
aad
cmp
aad
inc
fwait
lods
insb
add
add
add
xlat
repz
adcl
or
push
loopne
test
std
rolb
jg
es
push
adc
push
cmpl
mov
sbb
jecxz
loope
fsubp
outsl
adc
cmp
mov
push
loopne
mov
jmp
pop
mov
inc
nop
xor
das
or
and
subl
add
sbb
imul
cs
mov
sbbl
sub
dec
jae
inc
loopne
add
jo
pushf
mov
sub
mov
mov
mov
clc
aaa
add
loope
mov
hlt
or
mov
int
inc
mov
ret
pop
add
xor
sub
mov
pusha
test
mov
push
std
jmp
xor
cmp
jno,pn
jno
inc
ret
add
inc
jl
xor
lds
popf
pusha
push
add
js
push
cld
out
inc
fdivl
outsl
outsl
or
das
lret
or
int3
xchg
cmp
push
mov
mov
xchg
daa
mov
or
xchg
addb
mov
fldl
mov
andb
jle
aas
inc
pop
into
imul
jae
cld
decl
jb
das
in
adc
sbb
add
mov
xchg
jecxz
push
add
mov
push
xchg
dec
mov
xchg
imul
sub
stos
lock
jmp
insl
cltd
nop
loop
jg
push
cmpsl
int3
mov
inc
sbb
or
ror
movsb
pop
push
pop
mov
push
sbb
add
aas
pop
dec
loopne
or
ficomps
cmpsl
insl
xchg
arpl
mov
ja
or
test
add
push
push
inc
sbb
sbb
add
pop
sti
popf
neg
lahf
lock
decl
add
push
decl
adc
push
rolb
shlb
movsl
ret
or
std
jge
sub
pushf
imul
pop
xchg
push
cli
pop
mov
mov
in
mov
push
test
or
fs
insb
cltd
ficoms
mov
clc
mov
aas
test
push
xor
sub
jb
loopne
je
call
outsb
sub
in
mov
mov
ret
and
mov
out
out
js
mov
or
mov
pop
daa
sbb
mov
arpl
add
daa
inc
lret
ja
test
lcall
cli
call
lods
xchg
sub
pop
push
adc
clc
dec
outsb
pop
cs
sub
int3
cwtl
push
adc
add
in
testl
ret
or
outsb
pop
rorl
lcall
cmpb
add
jnp
sub
and
mov
cmp
mov
pop
repnz
inc
add
xchg
xchg
jae
test
shll
or
push
lcall
imul
mov
mov
icebp
pop
roll
test
roll
or
xor
lahf
js
xorb
aam
mov
mov
sub
cmp
pop
jb
or
int
mov
or
add
fidivrl
fcomps
mov
add
dec
cld
addr16
mov
loopne
push
movsb
jne
inc
ljmp
sahf
andb
leave
push
cltd
loop
mov
pop
push
xchg
add
cmpsb
xchg
jbe
or
in
mov
add
pop
pop
jo
push
add
imul
jg
stos
add
xor
out
test
mov
inc
cmp
das
and
fidivrl
cmp
jle
adc
add
push
cmpsb
sbb
aas
push
pop
and
pop
pop
adc
sbb
add
cwtl
xor
mov
or
ljmp
leave
inc
mov
lock
dec
loop
xor
and
sbb
sub
xchg
jle
cld
mov
sbb
mov
cli
call
in
sbb
test
loopne
lods
or
cmp
std
ljmp
and
loope
or
mov
push
addb
inc
or
xchg
scas
mov
fcomip
aaa
xor
add
int3
jp
and
dec
hlt
add
and
mov
test
xchg
inc
sub
mov
or
dec
sbb
out
inc
scas
call
push
jmp
orl
xor
mov
cli
in
call
jg
jg
shll
aad
rcll
add
mov
ret
mov
and
xorb
sbb
adc
dec
pop
xchg
and
dec
sbb
repz
cmp
out
clc
add
sbb
dec
or
lods
push
push
adc
inc
adc
js,pn
push
fdivrl
inc
aas
add
loopne
jne
cmpsl
sbb
jg
dec
adc
cmpsb
or
sbb
imulb
adc
jecxz
mov
call
cwtl
sti
and
push
aas
fdivrs
sub
mov
incb
mov
mov
aad
decb
add
decl
xchg
lcall
xor
rolb
xor
sti
mov
int3
adc
jge
cmc
or
les
sub
daa
ret
ds
sti
test
data16
popa
pop
test
or
adc
cmpsb
sub
enter
cmc
or
add
xor
add
hlt
push
incb
test
clc
movl
xchg
mov
aaa
sarb
cli
test
push
loopne
out
sub
stc
addb
push
jp
sbb
cmp
inc
fdivl
ss
aam
addr16
incl
test
shll
sub
in
testb
jne
sub
jne
fcompl
test
cmp
jl
sub
push
and
sbb
jg
adc
add
pop
mov
sbb
popa
push
scas
push
js
outsl
xor
add
push
int3
mov
inc
mov
sub
push
std
add
loope
dec
cmc
jp
icebp
outsb
ret
lods
adcl
popa
mov
and
loope
xor
sbb
xor
cs
push
jbe
mov
ret
or
inc
mov
jg
call
sbb
add
lcall
pop
mov
les
stos
mov
pop
and
inc
cmp
loop
jmp
cmp
je
sarl
jecxz
sbb
inc
decb
push
jg
lahf
ds
xor
xchg
ds
stos
or
mov
xor
cmp
clc
mov
xchg
pusha
call
outsl
clc
xor
mov
adcl
addr16
into
pop
insb
or
insl
pop
push
into
cmpsb
lahf
lea
and
jp
mov
fndisi(8087
sub
in
lahf
sarl
lods
sub
test
fiaddl
jle
mov
loopne
out
push
pop
cs
pusha
inc
dec
lds
insb
jno
add
mov
xor
bound
test
aaa
mov
incb
ret
add
aas
mov
fs
mov
mov
mov
rclb
sub
jns
mov
pop
enter
jmp
in
and
adc
mov
cmp
fld
cmpsb
cmp
sbb
push
and
fdivs
sub
mov
into
addr16
xchg
gs
add
add
inc
test
add
testb
cmovne
cs
push
call
cld
xor
in
rolb
cmp
lret
xchg
loop
outsb
jmp
stos
pop
xchg
je
xchg
mov
jmp
mov
add
pop
mov
push
push
and
sbb
add
cwtl
push
cmp
cmp
stos
add
xchg
sub
popf
ja
push
push
lds
jmp
jae
ljmp
out
cmp
push
mov
mov
push
loope
pop
sbb
fbld
fisubrs
sti
aam
or
cld
or
loopne
aaa
cmp
cmpsb
jne
fldcw
push
cmp
enter
add
ljmp
add
cmp
cmp
and
push
jmp
repnz
and
loopne
pop
push
invd
fsubs
mov
or
and
jbe
imulb
adc
aam
adc
xor
pop
aaa
push
fsubl
outsb
add
test
and
negb
test
pop
cmpsl
ret
mov
inc
xchg
lock
enter
daa
pop
jecxz
hlt
jo
mov
pop
or
lds
daa
pop
dec
aaa
ret
rcl
into
bound
jae
push
das
rcrb
jbe
push
dec
add
and
fwait
push
pop
jp
cltd
mov
mov
cwtl
rep
sbb
jmp
int
arpl
jne
pop
mov
push
push
sub
pop
enter
pushf
or
xchg
push
stc
addb
mov
push
cmp
dec
add
pushf
push
mov
and
mov
xchg
lods
dec
aam
inc
xor
fisubs
push
add
addl
pop
and
lcall
jp
arpl
int3
scas
int3
mov
cmp
jno
sbb
in
mov
shll
push
ljmp
sbb
cld
sub
xor
lods
inc
cld
mull
or
call
in
xchg
outsb
shlw
dec
clc
and
stos
sbb
rolb
and
mov
jg
cli
jno
adc
mov
jl
int
adc
aad
xlat
jo
cmp
inc
xor
cld
jne
or
faddl
aas
lret
orl
adc
outsl
xchg
pop
je
dec
adc
or
out
fistps
mov
pusha
jo
sbb
mov
call
js
adc
mov
dec
mov
and
mov
pop
sbb
mov
dec
popa
mov
loope
jbe
adc
push
lcall
sahf
xchg
js
js
lcall
fsubs
cld
daa
test
xchg
mov
lock
decl
add
adc
aas
call
leave
clc
fcom
fldt
push
cwtl
adc
sub
jmp
push
dec
andnps
andb
loope
fucompp
sub
pop
and
push
inc
js
sub
and
dec
mov
cld
dec
ja
outsl
jo
dec
es
mov
or
push
sbb
out
xchg
pop
fldl
jo
add
pop
jl
insl
pusha
and
orb
in
addb
push
stc
mov
sbb
dec
lahf
mov
lds
and
stos
cmp
lock
mov
cmpb
cli
add
insb
test
fcoml
loope
lahf
mov
ret
jg
mov
jl
inc
lahf
mov
cmc
test
sbb
ljmp
dec
adc
les
fcompl
aam
mov
push
xor
clc
pop
adc
cmp
call
cmp
pop
setl
push
xchg
loope
ficoms
repz
mov
and
mov
dec
cld
aaa
or
mov
adc
mov
out
test
lahf
dec
xchg
adc
in
lea
mov
jno
bound
jecxz
bound
add
mov
adc
pop
jle
mov
mov
add
push
push
hlt
test
push
inc
jp
test
pop
sbb
aam
xchg
mov
xor
add
push
mov
jg
das
add
imul
lea
aas
push
adc
sbb
jbe
in
cs
test
pop
add
stos
xor
jl
adc
nop
jae
mov
shr
mov
ds
and
lret
test
inc
jg
push
pushf
out
push
hlt
nop
and
cli
sbb
leave
sarb
faddl
dec
mov
js
dec
lea
add
push
add
mov
sbb
clc
insl
pop
lret
imulb
add
lods
adc
pusha
dec
jg
push
sub
sub
out
jle
mov
call
and
lea
xor
aas
or
mov
or
fbld
sbb
shl
cmp
scas
sbb
inc
push
mov
fsubr
inc
movsb
aaa
repnz
cmc
add
add
xchg
xor
cmc
pop
push
xchg
gs
shrb
pop
or
repz
std
outsl
add
mov
out
adc
cmpsb
mov
mov
add
inc
ljmp
fs
stos
inc
cwtl
sub
ss
inc
out
jp
in
bound
sbb
lcall
push
loope
pop
hlt
cmp
add
outsl
mov
loop
dec
add
dec
mov
fnsave
mov
cld
lcall
sub
call
add
pop
or
fsubr
or
push
imul
fadds
pop
jo
ds
cmpsl
mov
fmuls
ja
dec
mov
mov
outsb
loope
mov
cli
pushfw
mov
sub
ret
dec
mov
or
push
sbb
jb
add
nop
int
dec
mov
xlat
ret
adc
in
add
stos
sub
xchg
pop
ljmp
mov
jg
shll
add
fwait
adc
loop
xor
mov
add
sti
cmp
loop
pop
dec
outsl
fdivrs
xchg
dec
divb
push
push
insb
fsubrs
cmp
adc
dec
xchg
push
imul
leave
lock
sub
jmp
push
push
test
adc
out
clc
out
leave
out
mov
cmp
arpl
mov
push
mov
pop
cwtl
add
sarl
add
inc
adcb
inc
ror
xchg
jnp
cltd
add
sub
sbb
out
rcr
hlt
pop
fcompl
cmpsl
xor
mov
or
xchg
sub
mov
mov
je
out
sub
add
pop
and
stos
sbb
sbb
jl
add
mov
sub
clc
iret
sub
sbb
fists
mov
adc
popa
mov
adc
mov
incl
jns
lds
imul
jp
cld
and
into
cld
rcl
sbb
dec
lahf
shll
aaa
nop
adc
adc
cmp
lods
sub
in
jmp
fwait
or
jnp
js
jae
mov
pop
inc
test
jo
push
lods
cmp
xchg
mov
jbe
cmp
dec
pop
flds
je
cmc
inc
mov
xor
out
test
mov
mov
mov
jle
gs
jg
add
and
jae
ds
shl
push
xorb
push
cmp
add
xchg
xor
pop
pop
sbb
test
or
inc
gs
jne
pop
mov
inc
clc
movsb
dec
xchg
xchg
sbb
mov
cmpb
ret
std
or
xor
mov
sbb
pop
dec
inc
sbb
out
cmp
xchg
out
sub
add
jp
push
cmp
aad
pop
gs
push
sbb
add
repnz
stos
sub
cmp
or
and
jo
cmp
inc
outsb
mov
push
pop
ret
mov
fnstcw
or
dec
dec
clc
incb
mov
push
jbe
cltd
xor
lcall
sbb
stc
fmuls
mov
adc
sbb
test
cmpsl
int3
add
add
push
insb
bound
jl
and
inc
out
sbb
cld
push
and
or
sub
ja
addr16
stc
pop
mov
push
aam
loop
pop
movsb
test
mov
fistl
lahf
cmc
aas
movsl
xchg
or
push
shlb
into
add
aas
fucomp
dec
sub
dec
push
pop
aad
pop
sbb
adc
push
cmp
repz
cmp
sbb
jmp
or
sbb
ljmp
lock
push
mov
sahf
outsb
inc
outsb
add
stos
cmpl
sahf
inc
in
rorb
iret
imul
add
icebp
mov
dec
pop
pop
cmpl
push
call
add
pop
add
fidivrs
mov
lcall
rcl
push
xchg
mov
adc
push
call
pop
inc
push
or
or
lock
fadds
scas
pop
sahf
subb
add
cmpsb
loope
mov
and
jecxz
xor
pop
cmp
aas
pop
adc
inc
pusha
jo
dec
dec
cli
mov
je
icebp
fldcw
pusha
sub
and
xor
test
push
add
shll
sub
and
add
sbb
adc
mov
insb
cmpsl
ljmp
mov
mov
or
jg
sbb
lds
push
mov
pop
decb
inc
xchg
aad
jnp
cmp
mov
lahf
add
adc
clc
mov
aas
dec
mov
xchg
scas
cld
or
add
mov
jo
lret
push
aas
jle
aad
xor
nop
int3
add
sahf
inc
sbb
std
mov
xor
pop
pop
pop
xchg
add
pushf
lcall
bound
cmpsb
sbb
std
push
sahf
pop
dec
mov
les
stos
add
scas
sbb
push
jp
and
add
jp
sti
pop
mov
jbe
addb
sub
loope
or
fistl
lcall
out
push
mov
dec
cmc
add
or
clc
dec
mov
add
or
nop
in
pop
mov
sti
push
jp
out
faddl
push
mov
mov
test
scas
mov
mov
sub
mov
mov
jl
add
rcll
dec
ret
sub
jmp
dec
in
andl
dec
mov
add
push
pop
in
mov
and
add
push
je
mov
cwtl
loopne
adc
and
xlat
cs
adc
aas
cmpsl
repz
in
fs
inc
mov
mov
or
dec
dec
test
aad
sub
test
cli
aaa
mov
loopne
adc
in
mov
ficoms
ljmp
add
out
call
push
add
mov
mov
lock
xor
shr
movsl
push
pushf
cmpsb
push
aam
xchg
stos
push
aaa
sbb
xchg
cs
std
add
pusha
aas
mov
loop
adc
fildll
pusha
jl
sub
mov
iret
mov
and
aad
pusha
adc
in
mov
jle
ret
adc
fwait
cmc
pushf
and
pusha
into
pop
scas
pop
hlt
sti
fs
mov
dec
push
out
cmp
sub
aad
iret
mov
rclb
xorl
xor
mov
in
mov
xlat
jp
xor
hlt
mov
scas
pop
add
push
mov
push
pop
popf
mov
jbe
sbb
into
fld
mov
add
sub
mov
fcmove
dec
dec
push
outsb
cli
xor
mov
gs
adc
scas
push
pop
or
es
jno
test
lods
mov
mov
scas
sub
dec
popa
lret
mov
push
cmp
cmpb
mov
lret
xchg
sbb
mov
jae
jo
cli
test
cmp
sub
outsl
xchg
cmc
dec
pop
cmp
xor
xor
std
jno
add
fistl
pushf
inc
jo
clc
mov
insb
mov
daa
mov
push
shrb
lock
fisubl
and
cmp
jae
add
and
cs
aad
adc
test
call
dec
loopne
sub
aas
addl
mov
push
sbb
mov
outsb
xchg
nop
push
gs
cmp
ds
and
mov
ljmp
popf
mov
scas
inc
cld
jg
sti
sbb
xchg
shrb
jecxz
mov
sarb
jae
stos
roll
pop
loop
repz
test
mov
loop
and
xchg
dec
push
inc
push
sbbl
jle
into
or
jno
cmp
sbb
outsl
clc
jmp
pop
sub
dec
divl
pop
push
popf
add
es
push
dec
pop
sbb
cld
adc
imul
mov
and
jo
jmp
adc
rorb
fimuls
pusha
xchg
add
hlt
add
incl
mov
mov
in
mov
push
sbb
imul
lock
pop
mov
add
int
pop
aam
js
push
or
sarb
xchg
prefetch
or
jno
mov
xchg
pushf
jb
fcomi
dec
push
sub
sub
std
push
out
cmp
cli
popa
fs
scas
xor
fscale
xor
loope
pop
cld
push
mov
into
nop
movsl
push
add
mov
popa
cmpsl
pop
push
add
pop
int
sbb
std
stos
add
push
jb
cmp
mov
mov
test
push
push
push
pusha
mov
or
cli
inc
mov
sarl
and
imul
fisubrs
imul
out
mov
xor
jmp
push
pop
push
jge
pushl
aad
mov
cmp
sbb
inc
xchg
loopne
enter
mov
dec
fidivrl
cltd
ds
jns
sbbl
inc
hlt
sbb
pushf
loope
jo
out
inc
adc
inc
jmp
sub
fnsave
xor
mov
lcall
in
lcall
sbb
xchg
cmp
pop
mov
adc
mov
les
pop
lahf
dec
adc
fwait
jmp
cmpsl
clc
jl
push
insl
std
pop
mov
jecxz
scas
add
or
cmpsl
enter
xor
mov
cli
cmpsb
pushf
mov
lcall
mov
cmpsb
rolb
mov
mov
in
inc
push
fcom
sti
ficompl
mov
mov
ljmp
cltd
and
clc
iret
inc
out
shr
mov
jecxz
es
loope
ss
jnp
push
iret
insb
cmp
xchg
inc
nop
pop
mov
sti
push
jg
jg
rcll
lahf
dec
xchg
mov
mov
nop
loopne
pop
stos
jne
xchg
aaa
xor
imul
cmp
cmp
stc
loopne
lahf
or
in
jecxz
rcll
jp
or
push
addb
cmp
cmp
mov
or
cmpsl
jbe
mov
sahf
mov
ds
jo
out
stos
shrl
push
aaa
arpl
sarl
clc
lret
mov
sub
pushf
jnp
sub
mov
fsubl
sub
ret
call
sbb
icebp
jmp
je
mov
and
mov
cmp
xchg
mov
sbb
jg
or
inc
in
mov
sar
pushl
pop
in
adc
add
lcall
inc
lahf
or
sbb
mov
jo
pop
cld
mov
in
cli
and
add
adc
pop
lods
push
mov
push
mov
jg
cmp
std
les
cmp
push
sub
and
sbb
mov
adc
repz
fdivp
pop
lods
sub
bound
nop
jo
xor
aas
pusha
adc
rcrl
adc
xchg
lods
mov
call
sub
sbb
leave
cmc
nop
cmp
cmp
pop
rcrl
and
cmpsl
sti
jns
dec
cld
jno
or
push
push
dec
data16
gs
and
shlb
jne
push
shll
cmp
xrelease
sahf
pop
fisubl
jge
push
inc
insb
lahf
aas
xor
push
jae
adc
and
clc
mov
fldcw
pop
lods
nop
gs
clc
mov
push
pusha
ljmp
cli
bound
mov
mov
add
jo
ret
fwait
push
jecxz
inc
sbb
inc
js
scas
cmp
jo
clc
or
mov
and
dec
in
cmc
inc
mov
add
cld
sahf
fisubs
call
jmp
push
stos
rcr
repnz
icebp
add
push
mov
mov
pop
sub
stos
mov
ror
jne
xchg
cmp
mov
jge
xchg
ja
xor
icebp
add
push
das
jl
pop
sub
mov
mov
sbb
icebp
cmp
rcrl
push
pop
add
dec
cli
adc
pusha
mov
cmp
sub
aas
popa
add
push
add
xor
pushf
aas
lahf
mov
inc
lods
adc
movsb
jbe
cli
push
adc
jle
std
cmp
ljmp
imul
mulb
mov
xchg
dec
xorl
mov
aad
imul
test
pop
add
loopne
adc
inc
xor
dec
jns
dec
xor
roll
xlat
or
xchg
repnz
and
ljmp
ret
cltd
add
mov
pushf
scas
mov
push
addr16
jle,pn
les
add
xor
inc
fwait
les
fidivrs
in
jo
scas
push
bound
sbb
inc
dec
bound
cld
stos
cmp
fldt
dec
sbb
xchg
out
pusha
test
add
filds
or
repz
xchg
mov
cmp
cmpb
clc
mov
inc
jg
mov
inc
jmp
inc
and
add
xchg
mov
leave
pushf
in
inc
cli
adc
push
lods
cld
push
lahf
xchg
jge
movsl
add
ljmp
jo
ret
aaa
pop
jns
dec
sar
aaa
aas
add
xchg
sbb
and
orb
aaa
push
shrb
jg
cmpsb
cld
cmp
cld
sub
xchg
inc
aas
das
mov
jecxz
mov
shl
mov
imul
add
and
push
sub
enter
adc
outsl
and
loop
into
aaa
faddl
pop
adc
sbb
fbstp
daa
ljmp
jg
outsl
mov
sbb
mov
les
mov
and
insl
ljmp
mov
push
dec
aas
sbb
add
sub
jb
sub
pushf
jnp
shrb
cli
ja
scas
dec
mov
ret
add
add
scas
cltd
mov
and
mov
sub
fs
setle
xchg
mov
das
adc
dec
add
les
ljmp
adc
sub
pop
jne
aaa
add
mov
shrl
jmp
pop
jle
fcmovu
xor
push
ror
mov
popa
adc
out
xor
out
xchg
inc
shlb
ljmp
add
pop
shlb
leave
repnz
scas
pop
xor
sbb
lods
int
sbb
sti
xchg
sub
push
inc
jbe
jae
xor
ja
xlat
jo
mov
add
mov
test
adc
shll
test
lods
test
lods
mov
jle
popa
ss
sahf
call
outsl
lock
fstl
xchg
mov
subl
adc
xchg
repnz
scas
outsb
lock
call
sbb
mov
inc
xor
inc
dec
sar
loope
add
xor
sti
out
or
or
xchg
loope
out
inc
jo
dec
rorb
push
insb
add
rcr
mov
andb
dec
push
notl
cld
xchg
mov
adc
adc
fisttpll
or
xchg
inc
stos
stos
lret
mov
aam
adc
and
jl
jecxz
decl
mov
add
mov
imul
add
mov
fisttps
fidivrl
dec
push
dec
jecxz
push
loopne
adc
xchg
popf
sub
inc
jge
add
sub
lock
sub
mov
mov
shrb
hlt
mov
aam
push
rol
dec
pop
inc
and
push
mov
andb
or
add
shll
enter
gs
call
mov
clc
ret
mov
dec
aas
xor
ret
dec
fdivrp
imulb
loopne
inc
call
ret
andb
inc
push
sub
pop
mov
lods
jle
decb
mov
lret
mov
icebp
add
dec
movsb
pop
data16
sti
or
add
rcr
sbb
sbb
mov
repz
shr
in
js
mov
mov
sbb
loopne
inc
inc
mov
dec
loop
sub
andb
pop
js
out
ja
int
pop
jb
xor
insb
mov
pop
push
pop
stos
sbb
push
push
clc
loopne
sbb
adc
cwtl
ds
or
clc
adc
pop
pop
xchg
jmp
jp
cli
sub
xor
decl
ja
jge
fcoms
shlb
add
xor
aad
pop
cmc
ljmp
push
js
pop
ljmp
test
push
and
mov
sti
jns
sub
sbb
jl
divb
hlt
stc
imul
in
mov
add
sar
inc
stos
push
mov
xchg
dec
add
ret
sbb
add
insb
in
push
jb
pop
sub
jne
mov
pop
mov
add
mov
sub
xchg
jno
inc
and
es
push
sbb
sub
mov
testb
call
push
scas
or
mov
aaa
add
xchg
add
icebp
loope
xchg
outsl
outsb
cwtl
mov
add
enter
or
int
push
es
and
loope
std
fisttps
add
xchg
push
lock
ret
mov
stc
mov
adc
dec
into
das
sub
add
jl
ljmp
cld
jmp
dec
out
ljmp
jg
gs
mov
inc
call
mov
lock
sub
rolb
lcall
or
insl
divb
adc
cld
das
add
pop
sbb
in
ret
notb
cmp
call
push
movsb
sbb
jne
sbb
es
push
or
xchg
lods
push
jl
mov
and
adc
push
fidivs
je
jp
mov
push
mov
xchg
push
jg
fsubrs
loop
rolb
fistpl
or
mov
and
mov
adcb
or
or
sbb
je
cmp
js
inc
clc
cmpsl
jg
pop
fs
sbb
les
insl
push
popa
xchg
adc
dec
pop
pop
fs
loop
pop
and
bound
je
sbb
popf
call
mov
movsl
and
pop
data16
and
sbb
pop
fsin
add
rorb
jg
inc
cld
mov
dec
add
inc
test
cmc
mov
jp
xorl
sub
push
std
stc
arpl
fiadds
jne
roll
add
rolb
dec
imulb
push
adc
daa
call
mov
les
ljmp
les
icebp
mov
push
push
mov
pop
adc
pop
mov
mov
xchg
arpl
ret
outsl
mov
push
outsb
incb
outsb
inc
push
fwait
cli
fisttps
push
mov
push
ss
movsl
mov
mov
cmc
mov
mov
addr16
or
push
fdivr
push
inc
mov
repz
dec
add
xchg
cmpsb
dec
mul
rclb
loop
push
sub
adc
fsts
cwtl
mov
jae
movsb
and
push
mov
add
lods
clc
mov
test
jl
add
push
mov
daa
add
adcb
cld
jg
sbb
xchg
js
xchg
jne
clc
mov
aaa
pushf
cmp
stos
leave
push
pushf
mov
in
int
scas
insb
add
sarb
sbb
nop
push
addl
mov
mov
xor
dec
sub
pop
mov
or
nop
mov
add
cmp
cmc
ss
mov
pusha
or
mov
cld
pop
movsb
leave
lods
lds
pusha
pop
xlat
cmpb
add
push
repz
scas
js
iret
pcmpeqd
xor
add
dec
std
mov
and
mov
cwtl
icebp
cli
out
stos
sbb
push
mov
subb
xlat
cld
mov
daa
es
movsl
dec
out
xchg
or
imul
pushl
mov
fs
cmp
xchg
sub
rol
dec
cmpsb
popa
mov
vunpckhpd
jmp
jns
mov
adc
dec
add
inc
sub
fs
adc
sub
cmp
gs
pushl
ljmp
cs
and
mov
inc
mov
adc
fs
or
dec
ljmp
push
lods
hlt
mov
cli
mov
lea
mov
adc
sbb
xchg
xchg
cmp
or
and
or
inc
in
lods
sub
aas
js
pop
sbb
push
pushf
and
dec
iret
mov
mov
dec
lods
xor
ror
loop
repz
jp
push
cmp
int
mov
cs
and
mov
add
stc
scas
movsb
imul
sar
call
pop
sub
test
cltd
push
sbb
cld
push
pop
xorb
test
in
push
add
cs
xor
sub
test
xchg
aam
mov
stos
sub
mov
xor
sarb
adc
push
popa
pop
cld
aas
test
adc
xchg
movsl
stos
je
pop
decl
xor
movsb
add
cmp
push
fmull
inc
sub
sub
adc
stos
mov
or
cs
mov
pop
jle
std
sbb
adc
or
shrl
setb
jmp
sbb
jecxz
les
hlt
call
nop
hlt
adc
test
push
mov
decl
inc
lahf
mov
andb
mov
mov
pop
dec
push
push
and
mov
addb
push
popf
data16
icebp
and
push
push
pop
adc
mov
ljmp
rcrb
dec
in
add
test
mov
popf
push
or
and
imul
dec
icebp
scas
mov
push
inc
push
ret
push
inc
loop
mov
mov
push
mov
push
push
push
mov
push
adc
shrb
cmpsl
xchg
xchg
add
mov
fsubrl
cltd
sub
fdivp
ja
pop
ss
mov
adc
inc
sbb
into
sbb
call
ret
mov
push
add
sbb
test
aam
hlt
test
push
in
xor
insb
subl
mov
fisubs
xor
mov
mov
xor
scas
pop
add
jl
ja
pop
or
jns
idivb
xor
mov
popa
push
mov
adc
jno
roll
pusha
ljmp
pop
jg
aas
xchg
cmc
popf
add
mov
ds
jg
sub
mov
movsb
pop
xchg
sarb
data16
push
stc
movb
nop
aas
mov
rcr
dec
adc
adc
jo
add
ljmp
int3
cld
or
adc
lahf
mov
hlt
pop
sub
jecxz
dec
sarb
lods
fsubs
rorb
and
add
dec
jge
jl
rcr
jmp
xor
xor
pusha
pusha
mov
das
mov
dec
push
mov
arpl
jecxz
adc
mov
inc
jb
mov
xor
pop
jle
or
lret
jg
xchg
movsb
sub
add
jecxz
or
mov
add
cmpsb
enter
pushf
repnz
mov
gs
incl
push
addl
mov
or
repnz
pop
inc
inc
inc
sub
push
subb
adc
sbb
addb
lret
inc
jg
or
fiaddl
outsb
jae
out
adc
push
pop
mov
add
add
or
pop
movsb
dec
and
jo
push
fcomps
push
clc
decl
jns
mov
les
out
xchg
push
test
sub
push
imull
out
jo
shll
in
fsubs
dec
popa
mov
cwtl
hlt
outsb
cwtl
insb
and
incl
pop
out
aaa
push
test
aad
cmc
mov
movsl
test
cmp
mov
cmp
xchg
aam
ss
sub
out
xor
out
inc
cltd
repz
sub
xchg
sub
loopne
fsubl
incb
add
into
and
movsb
mov
jmp
jle
mov
pop
pop
aas
addb
pop
movsl
push
ljmp
pop
add
mov
dec
mov
push
das
les
xor
fdivl
push
pusha
or
cmpsl
mov
jg
sub
push
int3
jns
ljmp
mov
push
lods
arpl
adc
daa
add
fists
int3
adc
add
cmpsb
jp
jecxz
repnz
test
cmp
outsb
clc
rclb
lds
out
or
jbe
bound
sub
add
jle
lcall
xor
xchg
add
push
jp
popf
cmpsb
pop
data16
fldcw
xchg
fsubs
mov
cmp
fs
jbe
sbb
pop
adc
daa
inc
jmp
rol
push
les
sbb
pusha
mov
dec
movsl
iret
cmpsb
jbe
arpl
aam
jns,pt
addr16
sub
sbb
push
ljmp
sub
and
test
icebp
cmp
rorl
sbb
movsb
movsb
cli
ret
dec
mov
push
mov
xchg
and
je
sbb
mov
lcall
pop
outsl
jp
loope
sbb
rolb
add
xor
push
mov
mov
xor
inc
and
addr16
or
sbb
incl
xchg
pusha
ljmp
sub
lea
aad
mov
lock
in
or
call
mov
pop
cld
outsb
stos
mov
xor
loop
lret
xor
sub
test
cmp
dec
mov
je
mov
decl
xor
cmp
mov
scas
xchg
loop
in
roll
das
test
inc
and
rorb
mov
adcb
cmp
add
mov
jge
mov
sbb
jl
or
mov
loopne
pop
xchg
xchg
add
cmp
popf
addl
pop
mov
test
aaa
jmp
ret
jmp
lock
lret
or
nop
mov
inc
add
sahf
mov
xchg
call
insl
push
out
je
cld
xlat
mov
and
inc
inc
xor
ljmp
or
icebp
add
int3
mov
ljmp
adc
cltd
adc
cmp
aad
cld
xor
sahf
incb
sub
out
sbb
ljmp
inc
and
js
mov
push
adc
adc
pop
add
jl
aam
mov
test
and
mov
pop
andb
mov
cmpb
cld
sub
stos
push
pop
test
and
sub
aaa
ficoml
mov
xor
sbb
pop
inc
cmp
test
push
jne
or
ja
jbe
sub
jg
loopne
pop
andb
inc
adc
xor
imul
leave
shrb
test
add
add
pop
dec
pop
mov
js
pop
xlat
or
add
leave
dec
dec
xchg
rcr
loopne
jg
pop
inc
mov
jnp
out
dec
mov
pop
mov
cmp
mov
and
sbbl
dec
jnp
xor
push
lods
ljmp
cmp
sub
sub
movb
scas
mov
pop
les
pop
mov
add
mov
inc
inc
jo
sahf
sti
nop
cmc
or
cltd
sub
cmp
fistpl
test
xor
push
xor
adc
sbb
lods
int
lock
mov
dec
sbb
add
mov
stc
decb
enter
lret
js
mov
adc
into
mov
xor
xchg
and
daa
mov
adc
in
addb
ljmp
jno
bound
mov
xor
clc
rcrb
cmpb
je
push
xlat
imul
push
les
aad
pop
ljmp
push
inc
call
nop
jne
hlt
sahf
inc
and
mov
push
js
push
mov
xlat
cmpsb
test
test
jbe
pop
cmp
mov
fnstcw
ja
jp
shlb
lret
fcmovnbe
and
incb
adc
stc
dec
push
adc
ss
xor
sub
punpcklbw
jp
js
or
js
mov
adc
adc
shl
rorb
pop
pop
leave
mov
mov
adc
stos
or
sub
xchg
ja
pop
fimull
stc
or
dec
adc
mov
jmp
rol
ret
mov
jmp
cmp
jp
mov
outsl
add
jmp
inc
int3
cmp
outsb
inc
adc
out
add
xchg
mov
repnz
mov
dec
and
mov
pop
sbb
lcall
nop
pop
imul
sbb
mov
cmpsb
movsl
ss
sbb
fidivrs
jl
cli
sbb
xor
push
and
adc
in
adc
sbb
mov
push
and
adc
pop
lret
cli
sbb
rorb
in
xchg
dec
outsb
cmpb
push
cmp
pop
add
or
lcall
jg
jg
mov
inc
inc
mov
sbb
jne
es
push
add
sti
and
adc
jg
subl
xchg
rcr
mov
cmp
clc
sbb
sub
mov
ss
mov
fnsave
push
push
cltd
stos
bound
xchg
enter
dec
cmp
mov
jg
cmp
loop
adc
mov
out
jg
outsb
cli
sbb
dec
aaa
ljmp
or
sahf
xor
nop
adc
cwtl
dec
in
push
flds
nop
cmp
pop
cli
jg
xor
mov
mov
cmp
cmpsl
sarb
jbe
out
cli
stos
jle
nop
push
adc
mov
add
xchg
sub
pop
or
inc
mov
pop
ljmp
or
xor
lahf
push
push
int
add
mov
mov
or
bound
rorb
or
jo
clc
pop
inc
std
sar
mov
cmpsl
ss
push
and
adc
fistpl
filds
std
or
loopne
rclb
sbb
inc
jp
pushl
inc
or
cwtl
or
jge
add
pop
sbb
add
push
mov
xor
mov
mov
shlb
sti
push
sarl
jbe
pop
sub
cld
dec
jecxz
push
jae
jbe
aaa
call
std
mov
mov
adc
or
dec
inc
or
insl
roll
jl
push
enter
jp
xchg
add
stos
add
pusha
mov
pop
fwait
push
decb
into
jno
and
int3
jbe
or
xor
das
out
pushf
aam
arpl
gs
or
jecxz
fsubrs
test
lods
repz
cmp
sub
js
jbe
in
mov
mov
rcrl
shrb
mov
mov
or
lock
mov
lret
mov
pop
addb
push
scas
push
jo
out
adc
data16
in
pop
add
jecxz
cli
stos
cmpsl
cwtl
out
mov
adcl
add
rcll
fistl
in
jbe
push
cltd
int3
loopne
incl
ljmp
push
movsl
push
clc
fwait
notb
les
add
idiv
push
dec
add
push
pop
or
mov
pusha
jg
icebp
add
push
jo
filds
pusha
inc
movsl
ds
sbb
mov
cmp
repz
inc
mov
push
loopne
sbb
inc
lock
mov
cwtl
out
or
pop
fcmovnb
test
std
testl
out
inc
mov
out
sarb
cli
add
ja
xorb
mov
pop
add
push
decl
add
in
je
xchg
mov
clc
out
mov
incl
xchg
cmpsb
pop
int
push
mov
push
std
ljmp
mov
imul
jo
xor
stos
out
fnstenv
pop
xor
cmp
xchg
pop
jnp
inc
cld
aaa
in
addr16
dec
jg
dec
mov
push
and
ljmp
or
or
and
shr
xchg
pop
dec
pop
movsl
test
pop
icebp
enter
mov
mov
mov
fimuls
icebp
mov
sub
mov
pop
pusha
pop
ljmp
test
fs
adc
lahf
add
aaa
lods
testb
sub
jae
fsubp
cmp
pop
ret
lea
sbb
in
int3
inc
ljmp
insb
dec
dec
rcr
mov
ljmp
cmp
cmc
or
xchg
mov
mov
pop
jge,pt
js
iret
cmpb
push
sbb
adc
call
pslld
inc
mov
insb
or
in
cmpsl
lods
loope
dec
push
mov
jl
lock
daa
fwait
cmovs
mov
pop
into
inc
cmpl
in
cmpsl
movsl
mov
sarb
inc
fs
outsb
mov
add
push
ret
call
sub
xor
int3
xor
xchg
add
mov
scas
push
test
movsb
mov
scas
mov
out
sbb
stos
dec
mov
std
xor
test
cmp
pop
mov
push
stos
call
pop
data16
mulps
adc
jns
movsl
sti
dec
dec
inc
add
shrb
loope
or
fstpt
push
xlat
or
jnp
shll
mov
outsb
and
sub
mov
int3
popa
adc
movd
out
dec
xor
push
clc
test
call
mov
loop
stos
aas
mov
push
cli
add
sbb
dec
fwait
and
xor
inc
orb
or
sbb
add
std
in
mov
imul
mov
pop
xlat
mov
cmp
adc
push
xchg
push
cwtl
mov
mov
out
jl
sub
std
js
sub
pop
mov
and
cmp
pop
mov
jne
aaa
je
cltd
loop
mov
add
xor
aad
or
jmp
mov
test
addl
push
es
fdivrp
ljmp
or
pop
fs
pop
or
je
sub
mov
movsl
inc
mov
incl
sub
mov
sub
jl
cmp
outsb
fisubrl
sar
outsb
lret
lret
es
pop
rorl
out
inc
lods
cwtl
mov
div
pop
mov
fbstp
dec
cmp
push
les
push
cmpsl
das
mov
mov
mov
add
fdiv
incl
cld
insb
adc
jbe
sub
movsb
and
dec
sbb
inc
pop
jg
jp
jmp
cs
icebp
in
inc
or
js
movl
jecxz
ret
adcl
hlt
add
xor
adc
subb
gs
pusha
cs
dec
ljmp
out
xor
jmp
sbb
jb
add
and
pop
mov
scas
das
shll
jnp
jnp
xor
cli
inc
sahf
rcr
test
clc
cmpsb
sbb
mov
add
push
push
sti
sub
sahf
shll
shrb
jns
outsl
pop
lock
subb
xchg
fs
jns
loopne
cmp
mov
insl
lret
push
mov
jle
repz
jp
mov
inc
cld
mov
fcomps
mov
sar
js
enter
or
out
add
clc
mov
js
jae
aam
hlt
adc
pop
fxrstor
icebp
aam
xor
pop
lret
or
pop
bound
scas
xchg
rclb
add
xchg
adc
xchg
loopne
clc
lret
fmull
mov
add
sbb
lret
lahf
mov
jo
test
adc
add
jno
fimuls
jecxz
lcall
incl
outsl
cmp
js
dec
or
aam
bound
pop
add
test
push
push
adc
cwtl
paddusw
fucomip
xchg
pop
xchg
call
xor
insl
fimuls
lock
incl
adc
fldcw
xchg
int3
hlt
push
test
cmpsb
push
mov
sti
fistpl
mov
or
mov
pushf
fadds
cltd
push
add
and
sbb
rcll
dec
cmpsb
call
ja
lcall
xor
lea
mov
add
incl
cwtl
stos
dec
fbstp
stos
add
pusha
mov
test
bound
mov
xchg
pop
out
dec
mov
push
adcl
pop
faddp
ja
sub
mov
and
adc
xchg
into
aad
out
or
inc
fsubrl
xchg
xorb
cmpsb
inc
cmp
idiv
cmpsb
and
jp
in
ds
adc
cmp
ljmp
jno
scas
ret
mov
add
mov
cmpsl
or
xchg
sub
mov
idivl
enter
push
xor
andb
mov
daa
jb
sub
stos
push
push
add
cltd
dec
cmpsb
pop
arpl
call
movsl
push
aaa
cld
sub
fnstsw
popf
popa
std
push
rolb
lret
add
enter
push
shlb
mov
push
test
pop
sub
mov
mov
test
ds
leave
mov
cmp
cltd
adc
cld
mov
xchg
mov
cmp
pop
jg
cli
call
xor
cltd
cld
popa
xchg
add
outsb
sub
mov
add
lea
jp
insl
inc
mov
xchg
ret
outsb
clc
push
pop
dec
pop
add
and
lcall
fwait
and
out
add
lahf
gs
test
mov
push
ss
push
pop
outsl
pop
and
test
std
mov
loopne
fiaddl
jge
or
lret
jg
sub
xor
jb
pop
in
cmpsb
inc
dec
cmpsb
movsb
test
and
aaa
lock
xchg
leave
inc
in
mov
push
push
scas
scas
mov
push
cmp
rolb
mov
fidivs
nop
das
sar
loop
mov
or
add
dec
mov
adcb
adc
iret
or
rorb
movsl
sbb
mov
mov
in
mov
add
xchg
inc
insl
mov
mov
dec
cltd
divl
repz
inc
shlb
mov
push
mov
adc
mov
movsb
fldl2t
xchg
test
fcoms
sub
aaa
jge
js
loop
rorb
syscall
ficoms
sbb
jecxz
icebp
nop
xchg
jg
mov
call
call
fnstcw
lock
loopne
repz
insb
add
adc
in
jg
inc
cs
notl
imulb
sub
insl
push
lret
insb
cmpsb
inc
pop
add
jne
scas
outsb
lahf
pop
ljmp
sbb
fdivl
jmp
loopne
mov
mov
dec
data16
xchg
pop
or
shll
ficompl
in
in
fistl
jo
jo
inc
dec
aas
ret
xlat
cmpl
xchg
mov
ficoml
loope
cli
mov
adc
sub
push
lds
push
xchg
adcb
mov
ds
outsb
cld
inc
ret
sub
in
mov
shl
dec
dec
mov
sahf
in
mov
inc
fsubl
or
pop
mov
jmp
fs
jbe
pop
lcall
cs
loop
cs
adc
fmull
nop
sahf
dec
pop
dec
outsl
xor
push
cmp
sahf
add
cmp
xor
insb
stc
pop
adc
jmp
mov
mov
pop
outsb
fs
push
push
test
inc
movsb
pop
inc
adc
cmp
or
hlt
and
jg
push
mov
inc
xchg
or
cmp
adc
idivl
out
adc
pop
popf
dec
cmpxchg
adc
in
and
mov
enter
push
mov
out
les
jbe
jb
incl
pop
icebp
adc
add
push
cld
cmpsb
mov
adc
cld
push
das
stos
nop
pop
jp
and
pop
mov
std
xchg
xchg
mov
ficoms
dec
jo
les
repz
and
sub
xorl
out
mov
pop
scas
lret
sub
mov
push
repz
xchg
sarl
push
or
adc
adc
test
pop
jl,pn
mov
stos
mov
push
xorl
inc
sub
aad
fbld
andl
mov
xchg
pop
sbb
mov
sahf
xchg
aam
cmp
ret
shlb
in
jmp
xor
pop
xchg
xchg
decb
jmp
movsb
in
dec
arpl
jl
into
pushf
lock
sub
loopne
loopne
mov
pop
mov
mov
test
inc
shlb
ret
ret
out
stos
lcall
add
pop
mov
inc
dec
pop
add
mov
push
xor
jg
and
fadds
in
rcrb
call
cmp
in
or
icebp
and
sbb
inc
mov
add
popa
sbb
push
gs
pop
add
je
js
sub
and
lahf
or
push
jl
and
or
jle
test
add
fildl
mov
and
decl
fsubr
rol
inc
mov
xchg
jnp
cmp
daa
push
arpl
test
lea
nop
cli
adc
mov
outsl
cmpsb
enter
push
pusha
out
int3
loope
ja
test
push
inc
adc
or
pop
jp
mov
in
ja
xor
inc
add
push
mov
scas
xchg
cmp
sub
cld
add
aam
push
mov
les
outsl
adc
jge
push
jae
adc
call
loope
and
lds
adc
das
dec
jl
mov
mov
mov
push
lret
lahf
int3
cmp
jb
out
add
mov
cmp
test
into
xchg
jl
clc
or
jmp
mov
push
dec
mov
sbb
push
or
lock
rclb
push
idivb
or
push
sar
shll
add
mov
sbb
jmp
pop
daa
hlt
mov
clc
les
xchg
test
insl
mov
xchg
rorb
mov
xchg
cwtl
roll
xor
lea
in
jb
or
cli
mov
jb
in
call
push
pusha
xor
jecxz
ret
testb
addr16
mov
std
enter
push
push
add
std
mov
icebp
xchg
adc
or
insb
and
orl
lock
sub
cmp
loopne
push
inc
pusha
jo
call
cmp
popf
mov
jecxz
xor
xor
fstl
aas
add
rcrb
xchg
or
or
mov
cli
test
cld
sbbb
mov
ljmp
daa
jl
inc
add
xchg
jmp
cmp
rorb
sub
loop
ljmp
mov
mov
outsb
dec
mov
lret
cmp
adc
sarb
add
inc
adc
std
push
sub
int3
sub
lds
or
shl
gs
in
roll
hlt
push
mov
push
xor
je
xchg
movsl
loopne
mov
sub
dec
pop
cs
rcll
or
hlt
fs
pop
mov
loopne
jecxz
ds
cmp
int3
xchg
jmp
jbe
cmp
mov
fcomps
cli
stos
js
aam
inc
fldl
push
or
cs
arpl
fs
push
jne
xchg
mov
inc
mov
cmc
inc
push
nop
push
lds
cmp
incl
push
repnz
dec
das
jb
jge
and
mov
jmp
das
mov
inc
testb
sub
jo
mov
jbe
loop
inc
popf
add
dec
lcall
sub
outsl
aas
lock
mov
cmp
pop
xchg
std
cs
movb
adc
loopne
es
ljmp
fwait
pop
jg
mov
adc
cmp
jno
inc
and
orl
sahf
lock
xlat
enter
xor
cmp
cmp
mov
and
pop
jle
xchg
pushf
xchg
inc
add
pop
sub
stc
cmp
sbb
mov
test
dec
pop
mov
xchg
push
imul
cli
add
adc
addb
imul
cmp
inc
sbb
cld
mov
outsb
xchg
xlat
shl
and
enter
dec
pop
lods
fisttps
pop
xor
mov
xchg
push
nop
mov
lods
lods
add
aaa
sub
mov
jmp
scas
pop
cwtl
push
xchg
dec
xchg
incl
dec
dec
and
int
sahf
in
das
cmp
lds
xor
jge
test
xor
and
je
pusha
adc
push
and
add
mov
rorl
mov
movsb
mov
orb
mov
sub
add
fst
test
cmc
addb
pop
nop
push
add
xor
das
sahf
jl
mov
outsl
add
aaa
dec
loop
scas
loope
movsb
adc
cli
aad
int
hlt
addr16
inc
xor
xchg
shl
sbb
lods
mov
push
cmp
cli
cmp
cmp
sti
lahf
xchg
or
xor
push
test
sub
call
sub
fcomp
sahf
ret
fimuls
jnp
xor
sub
dec
push
int3
mov
pop
mov
js
sub
divl
fisubs
cmp
lock
ljmp
adc
fs
lods
jl
shll
aaa
inc
into
insb
or
fs
cmc
lahf
dec
pop
rdmsr
subl
es
cmp
cmpb
cwtl
adc
jo
jge
or
push
lods
xor
cmpl
sarb
pop
je
mov
pusha
and
adcl
imul
call
sub
aam
rcll
addb
or
aas
push
sbbl
pop
cmp
sbb
insl
add
xor
cmp
cmpsl
push
lcall
jb
mov
push
test
data16
out
dec
jmp
int
orl
add
ljmp
loop
adc
insb
dec
repz
jg
fs
sub
lock
aam
cmc
lea
mov
and
adc
pusha
scas
dec
jmp
jle
pop
int3
roll
or
or
add
push
mov
add
test
and
push
out
cli
outsl
xchg
daa
cmp
adc
add
cmp
xor
xorl
add
xchg
fucom
js
and
add
rorb
and
fsub
out
cmp
mov
jo
repnz
adc
inc
pop
icebp
cmpl
fdivl
out
jno
orb
movsl
clc
int3
std
push
cld
call
adc
stos
loop
add
xchg
mov
fistpl
add
movsb
add
or
test
mov
out
push
ljmp
cmp
pop
call
nop
fidivs
je
dec
call
pushf
test
xchg
es
jp
pop
or
clc
ljmp
and
pop
push
fcompl
mov
outsl
pop
xchg
cs
es
add
popl
incl
mov
data16
cmp
add
lret
mov
jle
lea
leave
fisubl
and
mov
out
cli
popa
data16
ss
push
lea
or
addl
push
stos
or
adc
mov
adc
or
pop
mov
sbb
clc
je
test
add
push
or
bound
cli
insb
aad
xchg
jne
sbb
fidivl
or
es
xchg
clc
jnp
gs
rcr
mov
sub
pop
mov
pusha
adc
add
mov
jge
stos
dec
jmp
add
ja
js
sbb
movsb
aas
movsl
mov
lods
mov
cmp
std
push
sub
add
in
add
lock
adc
andl
jg
jmp
icebp
cmpsb
jp
in
gs
filds
pop
ljmp
pusha
mov
add
mov
clc
pop
rol
cmp
lcall
or
ret
adc
pop
mov
cld
jo
lahf
mov
test
mov
lock
xchg
or
xor
jg
mov
pop
decb
inc
cwtl
dec
adc
mov
imul
add
add
dec
movsl
xor
cmp
jmp
xor
push
sbb
out
outsl
cs
je
mov
add
xor
mov
pop
ljmp
add
adc
sahf
pop
movsl
cmp
cmp
pop
xor
jp
jb
mov
movsl
rorl
adc
dec
in
mov
mov
data16
inc
repz
test
lahf
cmc
xchg
push
cmc
mov
int3
mov
push
ja
je
stos
cmp
ljmp
scas
pop
cli
push
mov
xchg
and
push
shrb
add
sub
cs
sbbl
push
jp
push
xor
fistpl
or
cld
pop
push
insb
lods
adc
loop
lods
push
xor
cmc
mov
int3
mov
push
and
test
outsb
int
loopne
stc
add
loopne
push
pushf
lods
add
shl
xor
lock
jb
add
cli
sbb
push
mov
fcoml
add
rcll
je
adc
call
pop
mov
stos
adc
push
or
cmpsl
testb
ljmp
xor
rolb
sbb
adc
pop
xor
cmp
arpl
and
xchg
lods
ret
xor
xchg
inc
mov
lret
cmpb
pop
mov
xorl
int3
test
mov
xor
repz
mov
loope
aad
out
xchg
cmp
or
mov
or
js
orb
lods
mov
adc
cli
mov
mov
xchg
pop
fsubl
cmp
fwait
lods
pop
mov
fiadds
xor
adc
popa
jo
sbb
fmull
pcmpgtb
and
sub
sub
into
jecxz
jle
aam
negb
xchg
jp
add
push
dec
clc
cmp
out
cld
push
mov
aaa
sub
adc
jo
pop
add
mov
and
scas
in
ret
ret
pusha
jmp
mov
data16
xchg
mov
lcall
dec
mov
stos
or
pop
push
jp
push
mov
cld
jmp
sub
xchg
test
je
insl
add
dec
call
pushf
mov
movb
dec
pop
push
popa
into
shlb
scas
sbb
mov
lret
subb
mov
outsb
pop
add
adc
out
ret
xor
xorl
addr16
mov
outsl
adc
ss
mov
and
jb
mov
rolb
add
movsb
push
push
mov
adc
mov
xchg
data16
push
and
cmp
sti
outsb
and
pop
fadd
nop
adc
and
lcall
push
xor
out
cli
out
mov
push
fs
pop
jns
jecxz
and
cwtl
out
or
es
nop
js
dec
push
mov
cmp
adc
ret
adc
loopne
test
or
clc
mov
lods
outsl
stos
ljmp
jg
mov
or
add
sahf
ljmp
sub
fdivr
xchg
adc
xor
sub
jp
dec
test
sbb
mov
mov
sub
pop
les
xor
fisttps
es
or
or
inc
movsb
push
rcll
push
icebp
push
push
inc
mov
sti
sub
cli
cmp
fnstsw
iret
and
jnp
xlat
bound
cmp
sahf
fistl
sub
sbb
bound
or
sarb
pop
cmpb
out
cwtl
stos
xor
fcmovnbe
push
adc
in
pop
fbld
pop
jns,pn
and
out
mov
sbb
sbb
aad
stc
and
mov
cli
mov
mov
dec
subb
out
mov
mov
xor
jle
shr
sti
push
and
lock
pop
jb
mov
movb
movsb
mov
shl
shll
xchg
sub
in
loope
xor
mov
pop
add
stos
or
add
fdivp
xor
xchg
adc
test
jb
das
xchg
mov
lret
mov
fdivrl
call
jne
mov
mov
jg
shlb
add
bound
pop
inc
pop
fisttps
pop
pop
aaa
ljmp
jle
sbb
xor
scas
adc
and
fildl
leave
pop
add
test
jmp
popa
inc
pushf
inc
xor
mov
inc
pop
cmp
ret
popf
loop
ficompl
adc
outsl
add
jge
dec
insl
and
fbstp
inc
std
imulb
pop
mov
dec
das
shlb
loop
loopne
mov
dec
vandpd
mov
lock
push
nop
and
outsb
mov
sbb
shll
nop
test
xor
cwtl
fistps
or
and
dec
sbb
in
and
mov
adc
add
push
or
xlat
push
iret
cmpsb
jecxz
loopne
fisttpll
shll
mov
sbb
andl
and
fucomp
enter
jmp
int3
push
popa
insl
jge
push
rorb
fimull
out
lret
jo
sbb
enter
pop
or
mov
js
mov
ljmp
enter
adc
out
jl
add
cmpsl
inc
jns
in
add
shrl
xor
pop
mov
push
data16
ljmp
ljmp
stos
mov
test
outsb
loop
mov
in
push
popa
pop
sub
dec
data16
and
sbb
je
inc
outsb
xchg
aam
jb
cs
push
andb
je
sbb
mov
popf
pushf
aam
in
or
lods
push
sbbl
sbb
mov
jp
pop
shl
ret
or
jg
je
insb
mov
stos
xor
push
sahf
and
mov
scas
dec
mov
dec
imul
fdivr
movsl
out
lcall
bound
dec
mov
inc
test
outsb
clc
nop
daa
in
iret
push
add
jl
hlt
jmp
add
shrb
sub
pop
adc
outsb
mov
iret
fisubrl
and
stos
jmp
das
popa
std
incl
idivb
loopne
add
dec
roll
dec
sub
add
std
cmp
aaa
or
push
push
out
call
or
cmp
sub
or
adc
out
sub
mov
aam
cld
enter
in
dec
into
lea
fnsave
dec
xchg
mov
mov
jo
int
lcall
sbb
push
ljmp
sub
stos
xor
js
mov
xchg
call
adc
jb
fdivl
jmp
ret
mov
cltd
inc
sahf
push
push
xchg
sbb
xchg
mov
mov
add
push
sbb
sbb
fisttps
push
add
mov
adc
push
xchg
push
ljmp
outsl
clc
inc
add
push
imul
xchg
shrb
xchg
dec
xor
in
fldl
jle
xchg
cmp
push
cmp
mov
xchg
cmp
sbb
mov
js
aas
lret
push
loope
imul
cmpsb
nop
shr
test
jmp
cld
lret
mov
ret
gs
je
fs
xchg
test
pop
test
int3
js
pop
xchg
test
jmp
fwait
es
add
mov
outsl
cmpsl
rorl
adc
mov
xor
ror
add
loope
notl
fsubl
lock
sarl
mov
pop
mov
mov
push
mov
fs
sysenter
cmp
mov
jg
pop
and
iret
adc
push
add
adc
mov
and
aam
mov
push
jbe
mov
pop
cmpsl
xor
fwait
js
or
add
sbb
pusha
sub
mov
pop
jnp
push
mov
push
test
hlt
xchg
lock
sahf
mov
or
sub
sbb
mov
cwtl
cmpsb
fdivs
loopne
mov
jp
sar
test
pop
aaa
add
dec
push
push
sbb
inc
cmpsl
add
push
out
jo
jmp
cmpb
divl
add
dec
xor
mov
jge
das
push
push
mov
pusha
popa
add
in
gs
xchg
adc
movsb
sub
lds
lods
or
push
cmc
fwait
or
mov
push
jle
dec
lock
outsl
sub
pop
pushf
add
jge
mov
mov
cmpl
sub
rcr
fildl
pop
pop
ret
ret
xor
add
pop
mov
test
out
shlb
and
stc
enter
shr
dec
mov
gs
cmp
sbb
jo
sub
lahf
movsl
xchg
sbb
cwtl
in
or
lret
dec
popf
mov
sarb
outsl
sub
lret
addr16
xchg
mov
adc
data16
mov
mov
cmp
ss
dec
cli
negb
fnstcw
add
int3
mov
sbb
inc
mov
jg
pop
in
xchg
fimuls
pop
jo
movsb
and
and
or
jo
pop
int3
xchg
dec
push
faddl
test
jae
cmp
cmc
cli
xor
je
scas
jmp
add
out
in
jp
fsubr
cwtl
fiaddl
es
clc
pop
movsl
inc
lcall
in
sub
sti
dec
pop
xor
add
movsl
xchg
inc
clc
aaa
addl
imul
or
and
jg
add
shll
or
mov
cmp
incl
sbb
or
push
rclb
js
ret
add
imul
add
pop
pusha
sti
ja
xor
add
inc
jns
cwtl
aas
jmp
decl
mov
inc
xchg
pop
fdivl
arpl
ret
jg
mov
push
mov
leave
cli
pop
jmp
clc
inc
pop
inc
shlb
lock
push
adc
jmp
aas
out
repnz
push
daa
sub
dec
inc
add
or
jo
pop
sbb
ljmp
add
add
cmp
rol
repnz
outsl
fistl
fistpl
scas
pop
pop
in
sbb
movb
mov
add
push
jo
mov
in
xchg
out
pop
dec
clc
dec
add
sti
jbe
fsubs
es
xor
and
add
ljmp
jbe
inc
jge
std
pop
mov
xor
iret
add
cmp
and
loope
lea
push
xchg
iret
stc
push
sub
lahf
subb
jmp
cli
push
cmpsb
add
mov
mov
mov
lock
adc
mov
test
jle
xchg
and
dec
mov
subl
mov
in
inc
cmp
fucomi
movsl
cli
mov
aam
ficompl
xor
jo
mov
add
add
mov
cmp
lcall
mov
pusha
xchg
bound
fdiv
sbb
sub
xor
mov
icebp
outsl
and
pop
cld
xchg
push
in
add
popl
xlat
mov
cmp
sub
movsl
imul
xor
loope
daa
or
js
and
or
xchg
sahf
aas
das
pop
cmc
imul
out
mov
rolb
popa
sbb
jg
dec
cld
inc
shll
insb
pop
jo
sub
fsubr
fimuls
scas
adc
jo
add
aaa
mov
loope
movsb
fwait
xor
movsl
sar
xor
pop
mov
decl
in
cltd
cmpl
xor
sub
addb
clc
leave
inc
icebp
inc
shrb
push
popa
rcll
cmpl
jmp
mov
xchg
aaa
js
pushl
in
and
inc
repz
lds
jg
mov
jmp
lea
loopne
ja
and
into
dec
mov
push
and
adc
loope
xchg
cmp
mov
test
jo
mov
or
repz
call
scas
ret
out
fs
and
mov
push
jae
sub
out
xchg
and
cwtl
xlat
test
ja
call
sub
aas
adc
dec
popf
pop
pop
dec
fnstenv
pop
inc
jl
test
adc
and
insl
pushl
add
push
fsts
mov
icebp
aad
iret
xchg
mov
jl
stc
rcrb
shlb
xchg
sti
push
sbb
push
outsb
dec
addr16
sbb
mov
push
mov
and
sub
pop
dec
cmovge
and
sbb
add
loope
lret
mov
xchg
mov
clc
mov
aam
adc
inc
pop
sub
adc
xchg
aaa
inc
adc
jb
ljmp
add
sub
or
in
cmc
mov
mov
out
imull
dec
rol
test
xchg
jg
and
and
sbb
cmc
fnclex
filds
je
bnd
lcall
sbb
pop
stc
mov
mov
xchg
int3
enter
int3
cmpsb
jne
ret
dec
dec
ret
in
sub
inc
mov
call
jnp
cld
or
stos
bound
push
mov
fdivl
cmp
in
xor
mov
jbe
dec
mov
fisttps
cmp
xorl
mov
or
fistpl
pop
mov
fwait
push
mov
ja
lahf
rcr
movsb
outsb
add
inc
das
pop
cmp
les
mov
xor
adc
cld
cli
mov
pusha
push
xchg
mov
sbb
push
and
xor
ret
jle
decb
and
es
jle
insl
sbb
popf
sbb
push
loope
in
aad
xor
add
gs
push
xchg
or
sbb
cld
fldt
bound
lea
cltd
fstpl
push
cltd
js
repnz
mov
in
pop
lret
mov
mov
pushf
jp
insl
sub
push
push
notl
sti
stos
mov
dec
mov
mov
fisttpll
jns
push
sbb
pop
imul
shll
jo
add
incl
ss
scas
ja
sbb
and
pop
loop
or
mov
add
jge
shrb
xor
mov
cwtl
mov
movsb
icebp
stos
pop
push
mov
mov
dec
pop
into
sbb
das
jp
aad
or
dec
shlb
stos
cwtl
ror
test
idivb
mov
fmuls
aad
movsb
sahf
sbb
scas
or
mov
loope
sub
add
or
mov
incl
pusha
cmp
fadds
aaa
xchg
push
mov
cmp
test
jg
nop
iret
daa
cld
mov
lret
into
cltd
xor
inc
notl
jge
mov
sub
sub
cmp
xchg
aam
sub
push
lock
inc
adc
lds
xor
push
sahf
orl
sbb
insl
sarl
mov
das
rolb
xchg
pop
adc
enter
cwtl
test
adcb
addl
in
and
fstp
jbe
sbb
push
add
pusha
push
in
outsl
aaa
inc
add
push
mov
shl
add
add
xchg
lcall
loopne
repnz
push
or
out
std
out
xchg
push
clc
cwtl
pop
stc
jmp
stc
and
lret
or
pop
out
movsb
das
adc
pushf
sub
push
sub
adc
sahf
fcoms
cmpsl
jg
jle
movsb
xor
pop
mov
inc
jns
jg,pt
decl
jp
js
inc
add
adc
pusha
mov
aas
cmp
test
jns
dec
push
test
cmpsl
lcall
add
xchg
jle
or
cmp
fsubrl
push
sbb
rol
incl
push
sub
sub
mov
hlt
add
add
mov
push
xor
ficomps
test
loopne
ljmp
sub
pop
push
lock
mov
inc
push
ljmp
xlat
decl
insb
add
sahf
xchg
lock
pop
enter
pop
push
or
jg
push
push
fst
jle
and
mov
call
ret
outsb
cmpb
mov
fisubs
jno
xor
jb
sbb
fcomp
add
jle
jo
ret
mov
xchg
lcall
rcrb
cmpsb
or
sbb
stos
sub
inc
cmpsl
adc
push
and
pop
mov
dec
jne
fs
lcall
ljmp
pusha
inc
or
outsb
mov
mov
out
xor
shl
add
lds
and
xor
dec
mov
jo
push
test
cs
cs
addb
sub
push
iret
pushf
jecxz
xchg
and
jg
pop
cmp
gs
jb
sti
rcrl
loope
push
loope
bound
je
push
popf
mov
fwait
outsl
add
add
push
jo
sbb
inc
gs
dec
push
sar
add
nop
lret
or
loope
lret
clc
inc
fadd
negb
add
imul
or
rcr
insb
mov
int
jecxz
adc
mov
adc
rolb
push
xchg
sub
xor
fcomps
decl
inc
cs
add
and
push
pusha
mov
stos
push
add
shlb
and
jmp
cs
test
xor
add
and
xor
lods
stos
adc
dec
stos
stos
push
nop
out
cmp
xchg
sbb
dec
cwtl
outsb
ret
push
mov
or
pop
enter
insb
lds
mov
add
jle
std
lea
lcall
cmc
lret
aad
xchg
in
loop
jo
push
cmp
movsb
mov
and
pop
push
aaa
push
cmp
repnz
jb
fcoms
inc
popa
aas
ss
mov
loopne
and
andb
imulb
cli
pop
popa
lds
jg
mov
adc
jae
mov
stos
icebp
fwait
or
or
outsl
sub
data16
out
ljmp
gs
test
jg
das
or
dec
pushf
xchg
dec
loopne
fsubr
inc
xchg
sbb
mov
cwtl
loope
sarb
call
jno
cmp
sub
sub
clc
xor
inc
mov
pop
xor
inc
sub
mulb
jg
fistpll
add
loop
mov
jecxz
popa
les
cmp
js
stos
decl
fs
mov
daa
jmp
inc
cwtl
add
or
mov
int
loop
jl
xor
and
cmpsl
ss
nop
shr
fldt
xchg
insb
xchg
mov
cmp
jo
pushf
imul
scas
out
sbb
jns
inc
test
or
cmp
mov
mov
cmp
or
xchg
mov
mov
loop
call
addr16
shll
inc
insb
push
idivb
and
jl
sub
add
cmpsb
xchg
cli
jae
push
push
xorl
mov
push
adcl
in
or
pop
jb
outsl
or
mov
les
add
test
rolb
add
cmp
out
push
push
stos
cmp
fisubl
mov
cmp
addl
loopne
sbb
rcl
ds
std
shll
pop
sbb
stos
cmpsl
inc
jnp
call
nop
or
outsl
mov
push
pusha
adc
rcr
xchg
lods
sbb
das
jbe
pop
jle
inc
pop
out
sbb
dec
pop
cmp
mov
fists
jle
push
xchg
mov
or
push
mov
mov
push
negl
adc
push
out
gs
and
sbb
jb
cmpsb
pop
addr16
imul
jecxz
dec
insb
cli
fistpll
jle
stc
or
and
adc
hlt
jg
xrelease
push
and
and
pop
aaa
lods
mov
and
adc
and
inc
push
rolb
sub
in
xor
sahf
sbb
jmp
pop
clc
subb
bound
mov
add
add
dec
adc
andb
js
ror
push
push
sub
mov
aas
shrl
jmp
stc
mov
ljmp
es
adc
sbb
cs
push
outsl
adc
ret
ret
repz
cmpsb
jbe
and
xor
sub
lods
cltd
in
mov
push
fildll
lds
xor
std
dec
cli
cmpsb
orb
xor
insl
jl
scas
push
xchg
aaa
sbb
mov
cmpsl
les
or
or
sbb
cs
add
xchg
push
add
ja
lds
mov
andl
cmpsl
lcall
adc
jg
mov
jbe
cld
insl
andb
pushl
add
fnstcw
push
insl
cmpsl
icebp
add
and
mov
out
divb
mov
xor
mov
or
jo
mov
outsl
fcoms
sti
add
inc
sahf
jb
lcall
xor
stc
cltd
pop
cwtl
mov
add
adc
dec
jmp
mov
shlb
mov
pushf
inc
inc
add
cld
or
inc
xchg
pushf
push
push
xchg
jne
mov
sub
out
add
sub
mov
mov
adc
push
shlb
sub
mov
mov
add
rorl
test
mov
outsl
add
push
enter
decl
ret
iret
clc
or
repnz
dec
add
jg
cmp
xchg
les
jo
push
cltd
lea
xchg
int3
sahf
data16
inc
mov
mov
jle
je
lock
in
push
add
fcomps
out
mov
jmp
push
sub
scas
push
push
cmp
mov
loopne
add
pop
lods
cmp
fwait
adc
mov
push
or
sub
fwait
add
lock
add
imul
rcl
cmc
test
jmp
pusha
fisubrs
mov
push
ds
mov
testb
adcb
add
add
and
mov
xchg
jb
les
mov
orb
xor
ljmp
jl
mov
pop
mov
lods
mov
pushf
jle
cwtl
test
jp
fsubrs
xchg
inc
inc
jno
push
out
lock
arpl
or
orl
pop
or
inc
in
push
clc
mov
or
and
test
push
mov
mov
and
repz
cli
jecxz
xchg
push
pop
jno
sbb
mov
cmp
jb
add
pop
cmpb
sub
ret
nop
repnz
adc
scas
dec
push
jl
mov
push
cmpl
arpl
xchg
les
and
or
xor
and
inc
mov
mov
inc
mov
or
adc
add
lods
stos
scas
faddp
imul
enter
push
scas
pop
mov
mov
cmp
mov
les
push
dec
xchg
lods
xor
lcall
pop
ds
loopne
push
pop
out
mov
add
cmp
xor
lods
pop
lock
andl
fildl
ret
repnz
jl
jo
cmp
out
lock
sbb
sbb
dec
or
pop
push
cmp
mov
lock
rolb
cmp
bound
ja
mov
test
bound
shll
adc
pop
icebp
add
cmp
ljmp
ds
fildl
outsl
cmp
movsb
lock
push
jb
xchg
rcl
incl
or
scas
jae
sub
mov
mov
inc
mov
inc
pop
add
add
pushf
push
xchg
ret
lea
mov
aaa
cld
pop
cmc
push
jb
cmp
repz
add
mov
cmpsb
push
push
enter
sbbb
lock
mov
pop
inc
int3
int
into
fs
sub
mov
mov
adc
push
mulb
subb
mov
push
stc
add
sarl
inc
mov
std
das
adc
sub
out
cld
nop
idiv
out
daa
sbb
pop
cli
sahf
test
aas
push
mov
shl
mov
xchg
or
xchg
addl
jmp
cmpsb
xchg
pop
xchg
sarl
mov
clc
mov
add
call
fdivrp
aaa
jmp
les
in
mov
push
movsb
aad
adc
sbbl
jo
inc
decl
lods
loope
popa
and
mov
cmc
jg
add
mov
pushl
ret
add
jl
pop
xor
arpl
mov
or
mov
add
mov
xchg
or
and
sbb
push
push
push
cmp
sbb
mov
inc
adc
cmc
fdivr
jg
adc
out
dec
leave
push
les
frstor
dec
enter
pop
or
jmp
push
test
lcall
cmc
int3
push
jp
inc
dec
or
arpl
and
cmpsb
mov
rcr
ret
xchg
mov
les
and
insl
inc
mov
fs
mov
inc
cmp
cmpsb
jmp
repz
popf
mov
insb
movsb
test
ret
and
cmpsl
pop
xchg
mov
popa
pop
xchg
jne
ja
pushf
fs
sti
popl
adc
mov
pop
movsl
ds
rcrb
imulb
loopne
lahf
iret
movsl
repz
or
push
es
pop
xchg
jmp
iret
push
jmp
out
data16
rorb
out
cmpsb
mov
pop
inc
les
or
adc
hlt
fs
aas
mov
jo
fistps
ret
jle
add
mov
dec
icebp
inc
pop
lcall
mov
cmpsb
adc
in
sar
cmp
xorl
xor
outsb
mov
stc
xchg
mov
clc
aas
pusha
out
fcomip
add
shlb
add
sbb
jg
and
and
and
mov
ret
pusha
sub
mov
aam
adc
js
fidivrl
jmp
adc
add
sbb
pop
pusha
ret
es
dec
mov
mov
cmpsb
loop
shrb
bound
incl
test
fs
jp
xor
push
rorb
test
xorl
les
inc
aad
repnz
js
cwtl
cs
scas
push
pop
out
pushf
insb
in
orb
mov
popf
cli
inc
ja
lcall
fldl
into
loope
adcb
and
add
rol
sub
push
jecxz
enter
sub
call
out
cli
notb
xchg
sub
jno
sbb
inc
fwait
jmp
mov
xchg
sbb
add
mov
xlat
test
xor
ja
push
lcall
leave
aam
fcomi
sub
adc
mov
jae
push
stos
clc
cmp
insl
add
movl
jle
loop,pt
pop
mov
nop
fisttpl
pop
test
and
sbb
pop
gs
mov
xchg
xchg
jmp
in
rorl
loopne
icebp
pop
dec
stos
bound
sarl
add
adc
add
pop
int
mov
pop
nop
mov
sub
hlt
pop
das
cli
out
lcall
pop
shl
scas
jp
stos
add
pusha
sub
push
jae
or
jg
jo
sbb
pop
lahf
add
mov
mov
xchg
sahf
pop
enter
mov
lcall
inc
data16
push
pusha
jmp
insl
push
push
and
cld
ljmp
jno,pt
call
adc
mov
mov
aas
fcmovbe
and
nop
xchg
push
sbb
add
dec
repnz
add
clc
or
xor
xor
adc
add
and
add
mov
scas
xchg
pop
into
mov
dec
or
data16
or
ljmp
dec
add
dec
js
ljmp
mov
add
cld
pop
and
dec
push
mov
inc
addr16
and
jecxz
lahf
jbe
lds
hlt
mov
jmp
inc
dec
ret
add
push
pop
or
cmpsl
adc
xor
xor
add
cld
jg
mov
pop
rolb
fimull
enter
ja
das
fwait
ds
js
xor
or
mov
int3
imul
mov
lea
adc
add
add
pop
push
inc
xlat
or
mov
pop
mov
dec
dec
adc
lret
push
movsb
mov
push
int
inc
sub
or
or
or
inc
idiv
fninit
or
push
shll
inc
or
movsl
test
jmp
sarb
cs
push
fists
aam
imul
lock
sbb
xchg
aam
lret
in
insb
insb
xchg
test
stos
sti
cmp
push
add
mov
pop
and
cli
mov
movsb
mov
inc
adc
mov
mov
inc
in
add
in
mov
add
inc
jo
adc
cs
xorl
insl
jle
adc
add
xchg
cli
inc
mov
sbbl
pop
lret
cmpsb
dec
lods
xlat
scas
mov
adc
jmp
cmp
fcmovb
int3
sbb
hlt
and
lret
or
or
sub
jl
rorb
andb
sub
jo
mov
fcoms
loopne
loope
sbb
loope
inc
push
xchg
imul
mov
ret
data16
xchg
adc
jecxz
aas
pop
cwtl
and
mov
out
mov
and
lods
pushf
sub
dec
orb
js
and
mov
or
pop
mov
pop
adc
pop
lcall
sbb
dec
adc
cli
xchg
lods
fstps
push
push
outsb
pop
mov
push
add
stos
inc
sahf
inc
and
and
dec
and
mov
or
jp
sub
adc
les
call
xor
xor
mov
enter
adc
jl
mov
sarl
adc
cmpl
lods
es
sub
call
mov
push
mov
rolb
pop
xchg
out
adc
ljmp
mov
sub
cmpb
les
inc
add
and
into
test
cld
push
sbb
aad
mov
call
add
out
shlb
dec
mov
add
and
das
mov
lret
rorl
shlb
hlt
sub
loopne
mov
sbb
ret
mov
push
mov
movsb
int3
shlb
add
adc
cmpsb
imul
and
aaa
rorl
icebp
je
cmp
inc
and
incl
jle
and
or
add
sbb
pop
xor
js
aaa
dec
fisttps
inc
lods
cli
cmpb
jmp
pop
imul
add
jbe
xor
adc
imul
mov
and
dec
sbb
xchg
icebp
or
push
stos
inc
cld
aad
imul
mov
pop
lret
mov
mov
imul
mov
sbb
push
in
das
mov
mov
mov
sub
ds
insl
adc
push
or
stos
sbbb
add
pop
jle
lret
loop
cmp
dec
or
jbe
xchg
mov
mov
call
sub
je
adc
clc
mov
dec
loope
add
push
ret
pop
jbe
test
jecxz
push
fimuls
mov
add
cs
mov
push
repz
and
repz
rcrb
push
cli
dec
jecxz
pop
mov
jne
or
cmp
sub
sub
xor
scas
scas
cli
xlat
popf
fldt
ret
std
adc
sub
sahf
out
and
mov
or
lods
xor
jne
dec
clc
push
rcr
and
fldl
sbb
xchg
addr16
loop,pn
push
lcall
aad
loop
imul
jmp
ret
cmp
jg
jp
pushf
or
test
push
inc
mov
mov
jo
rclb
clc
fisubs
dec
mov
xlat
je
ljmp
icebp
stc
ss
adc
or
jbe
pop
leave
out
subb
adcb
mov
shrb
sbb
scas
dec
adc
lock
cld
or
orl
out
mov
and
hlt
cltd
cmp
orl
cltd
mov
cwtl
jle
xchg
inc
divb
adc
jne
shrl
xor
icebp
and
mov
pop
xchg
xor
rolb
xchg
test
xor
addr16
mov
outsl
ljmp
pop
imul
out
outsb
stos
add
jl
out
lods
lret
bound
mov
mov
adcb
inc
stos
out
pop
inc
shrb
cmp
cmp
xchg
xchg
pop
push
fcmovnbe
jmp
es
out
test
ljmp
rcll
incb
es
mov
mov
mov
and
lahf
test
jmp
nop
outsl
jne
sbb
movb
lret
aad
into
pop
dec
cmpsl
xchg
bound
mov
bound
cmp
cwtl
pop
stos
mov
xchg
sahf
add
dec
out
pop
cmc
sbbb
mov
sub
and
dec
scas
pusha
adc
lret
cltd
out
fwait
push
insl
scas
ljmp
rcll
jnp
xchg
scas
js
push
into
adc
insb
mov
mov
rolb
imul
and
addr16
mov
pop
neg
cld
rclb
repnz
inc
icebp
mov
fisttps
js
mov
pop
movl
enter
push
push
mov
sbb
mov
push
mov
roll
add
nop
nop
std
push
or
mov
mov
inc
call
pop
add
cmp
sub
pop
adc
lret
xlat
jo
jle
push
push
cltd
mov
faddp
es
xchg
loopne
dec
lock
hlt
decl
dec
jo
jnp
ljmp
pop
arpl
add
add
mov
int3
pushl
add
mov
and
xor
ffree
fwait
aad
cmpsb
test
pusha
xor
int3
das
incl
adc
hlt
sbb
mov
add
add
mov
sarb
add
cmp
inc
movsl
fcoml
pop
insl
jl
or
lea
mov
lea
imul
jo
and
pop
inc
pop
push
repnz
pop
jo
scas
pop
jns
pushf
loope
mov
shlb
loopne
add
pop
mov
mov
lock
mov
mov
lock
shlb
fdivrp
fisttps
push
aam
push
push
bound
ret
decl
lahf
push
mov
mov
dec
jns
mov
xchg
jg
add
out
scas
outsl
add
jmp
mov
push
aam
adc
mov
bound
pop
lock
add
rol
push
insb
mov
out
cmp
mov
subl
sub
push
jmp
fbstp
test
sbb
sbb
cmp
xchg
cmp
xchg
mov
jb
push
xchg
clc
decl
rcrb
in
adc
std
sbb
add
lock
mov
mov
insb
out
add
into
rcll
cli
out
add
or
icebp
jmp
mov
lods
mov
cli
pop
and
cmp
add
jns
or
mov
pop
jl
dec
inc
call
sbb
orb
filds
ret
pop
push
sub
fwait
mov
inc
out
adc
or
aaa
adc
or
adc
repz
ja
adc
out
and
and
aaa
xor
inc
rorl
mov
dec
cmp
cmp
jbe
xchg
jl
adc
repnz
push
mov
sbb
loope
mov
cs
xchg
mov
fmuls
stos
push
andb
and
mov
mov
les
pop
or
mov
sti
inc
popa
dec
xchg
in
nop
lea
imul
inc
es
loope
fwait
xorb
xchg
jns
insl
add
aaa
fsubrl
out
rcl
fs
fadds
adc
mov
pushl
xor
mov
clc
xchg
cli
pushf
das
xor
jmp
push
ja
ja
dec
sbb
call
mov
dec
hlt
outsl
in
cmpsl
popf
into
inc
insl
stos
fmul
pop
sub
add
pusha
jge
mov
lock
outsl
and
xchg
mov
lcall
cmp
mov
stos
jp
cli
cmp
xor
lock
jg
outsl
xor
cmpps
xchg
stc
push
jg
loope
js
hlt
jp
nop
add
fidivl
xchg
stos
or
pop
rorb
jle
ret
mov
pushf
sub
int
in
orl
test
dec
or
pop
pop
out
clc
sbb
cmp
jns
dec
in
add
pop
or
mov
dec
cli
jbe
idivl
sub
jne
and
outsl
push
jl
xor
xchg
hlt
sub
and
sbb
xchg
or
push
fstl
lock
pop
std
pop
dec
ret
mov
loopne
jb
test
sub
mov
or
cld
or
xchg
fwait
icebp
push
mov
push
mov
lret
jl
or
cmp
fsubr
imul
cli
repnz
insl
push
or
jo
mov
fists
sub
loop
orl
xchg
lods
dec
arpl
cli
ficoml
mov
incb
ljmp
clc
cld
neg
push
mov
or
and
jg
add
jmp
mov
shrb
inc
sub
jo
xor
cltd
loopne
sub
arpl
andl
adc
lods
adc
add
enter
and
and
call
adcb
dec
shlb
xor
sbb
xchg
sti
dec
cmc
sbb
adc
adc
scas
enter
test
in
cmp
pop
sub
dec
inc
sbb
shlb
add
out
inc
aad
outsb
stos
jl
add
push
mov
pop
push
push
xorb
les
shrb
shll
xchg
add
jl
push
and
and
aas
repnz
adc
sub
in
clc
nop
push
mov
icebp
inc
pop
xchg
cmp
daa
movsb
stos
in
test
stos
jecxz
xchg
nop
in
jmp
xchg
mov
hlt
addb
or
testl
sbb
aaa
dec
hlt
dec
test
adc
or
push
ret
pop
pusha
je
leave
xchg
adc
add
mov
ljmp
pusha
pop
jo
xchg
pop
xchg
rcrb
jle
in
ss
dec
mov
add
out
shl
call
sbb
add
xor
sub
sbb
push
push
mov
mov
mov
fsubrp
xor
in
pop
xchg
jecxz
subl
pop
mov
or
enter
lahf
add
aam
cmp
mov
clc
fidivl
pushf
mull
xchg
cmpsb
out
add
in
fmul
ljmp
or
add
mov
je
xor
cli
or
jg
sbb
ret
enter
icebp
jge,pn
sub
mov
cs
pop
xor
cmp
add
addb
mov
pop
add
or
sahf
lock
lcall
adc
mov
adc
mov
dec
out
hlt
js
pushl
lahf
dec
cmp
xor
jp
shl
push
movsl
lea
xor
inc
stos
lods
xor
jne
adc
outsb
scas
cli
dec
rcrb
cmpsb
push
dec
shll
xchg
lock
testl
in
jg
call
test
mov
adc
push
call
popf
and
call
nop
cmpsb
mov
cli
mov
movsl
popa
data16
pop
mov
lret
dec
or
rcr
pop
popl
inc
clc
mov
shll
add
lcall
push
outsl
mov
fmuls
sbb
mov
ljmp
pop
in
loope
adc
test
cld
push
mov
inc
cmp
pop
std
pop
lcall
inc
jno
mov
out
pusha
add
dec
add
adc
pop
ret
adc
fnstenv
insb
jae
ja
call
cwtl
xchg
ljmpw
cmc
xor
ljmp
dec
jno
cmpsl
pop
mov
pushf
dec
jae
xchg
mov
mov
lock
clc
xchg
or
in
sbb
inc
mov
pop
clc
push
push
imul
out
insb
adc
in
sub
or
xchg
lds
pop
test
add
testl
ret
clc
cmp
sbb
shl
push
addr16
sbb
nop
dec
push
and
xchg
cmpsb
clc
js
aam
ds
xchg
mov
jg
fdivrs
adc
add
call
pop
or
sbb
push
mov
mov
push
lcall
fisubrs
cmp
ds
andl
add
addr16
adc
add
mov
jle
mov
out
or
add
push
add
add
xor
mov
dec
lcall
icebp
sbb
arpl
out
ret
shll
addb
movsb
jecxz
mov
add
clc
fildll
mov
jb
insl
jnp
mov
out
scas
jle
roll
add
push
ja
xor
fcoms
mov
pop
jae
add
push
ret
mov
cmc
mov
in
sbb
and
divb
sbb
jg
pop
test
pusha
hlt
scas
daa
add
mov
jmp
jle
mov
or
jae
loop
aad
and
add
sbb
popf
push
in
or
imul
mov
add
shlb
lods
decb
divb
cwtl
mov
pop
xchg
adc
xchg
xchg
mov
xor
ljmp
imull
mov
xchg
mov
shll
loope
adc
mov
mov
xchg
movsb
pop
shlb
dec
fs
xchg
jge
call
in
shl
les
in
outsb
mov
sbb
dec
outsl
mov
bound
jae
push
jbe
hlt
mov
xchg
lds
aas
xchg
xor
decl
xor
mov
pushl
push
loopne
pushl
or
mov
dec
mov
and
xchg
mov
xor
aam
mov
add
cli
and
fsub
sbb
and
ja
stos
push
or
je
xor
fwait
out
in
push
pushf
into
and
xor
inc
pop
cmp
push
mov
es
mov
xchg
aad
bound
add
mov
lock
dec
add
in
mov
loopne
jmp
movsb
jnp
stos
jns
fidivrl
cmpsl
dec
xlat
jo
rcl
adc
lock
cmp
in
jns
push
incl
and
push
ret
pop
mov
add
mov
push
dec
and
fcmovu
arpl
rclb
inc
nop
out
filds
mov
insl
xor
outsl
mov
test
mov
push
fs
lods
or
in
into
mov
mov
cld
inc
add
cli
cmpb
inc
mov
push
ret
mov
iret
mov
dec
add
cmp
and
int
mov
dec
pop
testb
shrb
loopne
sub
or
pop
xchg
aam
dec
fcoml
push
mov
lock
mov
test
push
scas
stos
xchg
or
sbb
xchg
cmpsb
loopne
pop
inc
shlb
xchg
xchg
mov
dec
in
outsl
daa
sub
roll
lods
ret
loope
dec
cli
mov
hlt
subb
les
cwtl
loop
std
dec
jmp
enter
jno
pop
or
ret
fcomps
push
sub
pusha
mov
flds
mov
fcmovu
fs
push
push
mov
inc
shlb
push
notb
sti
adc
test
add
pavgb
das
mov
inc
ljmp
pop
call
adc
fisttps
cmpsl
fsubl
hlt
fnstsw
push
outsb
clc
push
incl
mov
push
out
adc
pop
inc
push
inc
jp
add
dec
cli
ljmp
mov
in
outsb
push
or
push
push
mov
aas
or
inc
xor
sub
int3
add
mov
pop
lock
jge
xchg
xor
push
test
aam
mov
pop
loop
pushf
cmp
dec
daa
add
lock
xchg
rcrb
inc
rcrb
in
lahf
mov
mov
lahf
lcall
add
cmc
out
xchg
add
and
mov
mov
loope
daa
shrl
add
outsb
rclb
pusha
addb
dec
cmpsl
mov
pushf
aas
add
or
mov
mov
inc
jge
inc
sarb
add
roll
gs
sbb
adc
xchg
outsl
ficompl
enter
mov
inc
pop
js
or
add
mov
inc
add
mov
xlat
scas
mov
xchg
popf
jb
sbb
decb
and
inc
movsb
rcr
push
pusha
adc
fsubr
cmpsb
popf
push
sarl
add
xchg
rorb
fwait
in
xchg
fdivrp
sub
push
rol
xchg
ljmp
push
xchg
jne
popa
std
outsl
js
add
movl
or
fcomip
fstpt
pop
or
mov
mov
fmul
in
push
data16
inc
mov
and
inc
frstor
mov
jp
xchg
inc
jmp
jne
xchg
into
ds
push
ret
icebp
enter
fidivrl
shll
ss
sbbl
or
fsubs
xorl
push
and
fidivl
lods
pop
mov
aas
test
inc
repnz
adc
push
icebp
cmpl
mov
fbstp
pop
dec
cmp
rolb
loopne
out
jmp
push
mov
sbb
and
pop
arpl
jnp
jg
cld
loop
fsubrs
test
inc
jp
jb
cmp
mov
insb
mov
fldenv
xor
dec
popf
pushf
inc
aam
pop
sbb
adc
call
in
lods
mov
jne
test
mov
insl
pop
adc
add
leave
inc
mov
mov
mov
xorb
fnstcw
adc
xor
aad
or
sbb
ret
cld
jmp
cli
mov
mov
xor
and
js
stos
sbb
sbb
xchg
sub
push
pop
cld
mov
jg
lock
hlt
inc
lret
dec
mov
inc
popf
mov
xlat
sbb
iret
push
cmp
push
mov
mov
adc
rcrb
cmp
nop
cmp
push
adc
xchg
and
mov
inc
inc
scas
pop
cmp
movsb
rolb
lahf
clc
aas
mov
lock
sbb
cmp
mov
cmp
negb
mov
mov
mov
daa
nop
popf
divb
push
sbb
push
push
rorb
cmc
adc
fwait
mov
divb
add
mov
fs
out
and
mov
nop
les
in
cmpsl
lods
add
sbb
subl
and
hlt
or
mov
lahf
gs
and
pushf
mov
jg
pushf
inc
lds
into
iret
mov
push
add
sti
adc
xchg
and
mov
sbb
xchg
push
movsb
pop
jp
pop
test
mov
call
mov
mov
int
or
pop
pop
mov
adc
push
cmp
iret
adc
sti
lock
cli
shll
push
add
loop
scas
add
add
mov
repnz
mov
mov
imul
dec
push
loope
pop
jp
mov
dec
in
xchg
fcmovnu
xchg
popf
jb
sub
leave
cmp
lds
pop
jo
push
test
inc
clc
fstl
mov
pop
iret
xorb
les
out
xchg
mulb
pushf
add
inc
dec
lock
mov
cmp
dec
inc
jo
addr16
les
loope
dec
mov
sbb
xchg
mov
inc
ret
loopne
and
or
push
sub
outsb
je
adc
and
shl
andb
mov
sub
push
sub
movsl
cmpl
adc
out
mov
push
add
or
jb
adc
out
inc
mov
or
dec
mov
nop
js
nop
xor
mov
xor
mov
cltd
jg
cmp
xor
outsl
scas
push
xor
push
mov
fdivrs
mov
sbb
insb
loopne
insb
or
loopne
roll
iret
js
insb
arpl
adc
rep
out
pushf
mov
and
add
movsb
jo
lods
push
ja
sbb
xor
jge
mov
mov
rorb
sti
fistps
pusha
add
jmp
cmp
mov
lock
lcall
pusha
outsb
out
hlt
call
inc
adc
out
push
mov
inc
jmp
into
xchg
fadd
mov
outsb
mov
cwtl
xchg
rcll
inc
cmp
xchg
jmp
mov
xor
jle
mov
cmp
pop
add
and
xor
test
mov
cmc
xchg
xchg
in
out
mov
cwtl
mov
fidivl
push
mov
xchg
mov
or
andb
and
iret
add
inc
pop
or
mov
test
popa
add
and
dec
stos
cltd
pusha
mov
cld
ja
aaa
sbb
icebp
ret
adc
jb
rcrb
pop
add
mov
outsl
shl
pusha
mov
adc
adc
xor
fwait
lock
lds
jbe
mov
xchg
jo
fsubl
lcall
xor
ljmp
push
xchg
bound
jl
sbb
or
test
adc
lods
out
xchg
hlt
aaa
inc
or
jno
pop
push
lret
into
adc
in
inc
stos
call
push
mov
xlat
ss
mov
jmp
ret
jbe
call
sub
push
ds
outsb
mov
or
lock
adc
test
jo
dec
inc
test
fs
scas
fisubrs
and
jne
icebp
cmp
test
dec
jl
lds
clc
cmp
push
cmp
pand
in
cmp
test
test
mov
inc
clc
jne
cmpsb
xchg
movsb
xlat
xor
popf
inc
rcrb
cmp
and
lds
rorb
fucomi
pop
fsubr
mov
jmp
dec
jl
or
sub
push
scas
and
pop
outsb
sbb
stos
loopne
cwtl
movsb
cmp
sbb
leave
xorb
mov
jmp
out
dec
jns
mov
adc
fbstp
mov
sub
cmp
add
mov
daa
dec
inc
test
cmpsl
adc
sbb
push
dec
adc
or
jmp
mov
add
cmp
sbb
insl
mov
mov
mov
stos
test
or
sub
mov
popf
sbb
mov
sbb
xchg
add
adc
jg
mov
push
pop
cmp
sub
and
push
sub
ljmp
testb
mov
pop
sub
ljmp
sbb
ret
popa
mov
aad
xor
mov
ljmp
sbb
std
mov
jge
loope
mov
sub
inc
ljmp
mov
mov
fs
jmp
mov
cmpsb
ljmp
fidivrs
add
mov
or
xor
cmp
js
mov
repnz
sbb
test
pop
sub
or
sub
mov
jnp
lea
or
adc
fisubrl
subb
shlb
push
mov
rorb
stos
add
int
gs
add
aas
and
jns
jae
jnp
or
shll
jle
mov
in
or
popl
fidivl
insl
pop
cld
sbb
sbb
sbb
xchg
sub
test
inc
cmp
inc
loope
sbb
cmpsl
mov
xchg
mov
cmp
stos
dec
insb
jo
adc
add
adc
dec
dec
shrl
push
clc
in
bound
push
in
mov
sar
or
aas
dec
adc
or
add
mov
dec
cmp
xor
inc
pop
adc
jne
or
or
or
add
fcmovb
push
jge
loope
push
cmp
pop
cmp
mov
or
push
push
cltd
add
fidivs
mov
add
js
mov
icebp
sbb
jns
shlb
hlt
push
jp
pop
push
cmp
add
mov
mov
mov
int3
or
ret
cmpsb
mov
jle
loope
add
jae
dec
fs
add
movsl
fs
test
outsb
jecxz
sbb
jl
and
sub
sub
movsl
out
push
out
sub
cmp
add
pop
adc
mov
inc
pop
pop
aam
pop
xor
test
in
lahf
adc
mov
xor
dec
fs
mov
cld
decl
sbb
or
adcl
or
aam
dec
clc
push
jnp
xchg
cmp
cltd
mov
mov
push
sbb
outsl
mov
pop
dec
sahf
cmp
call
or
mov
xchg
xchg
sar
jg
pop
add
mov
addr16
dec
push
dec
inc
jb
push
mov
or
adc
rorb
xchg
fucom
jmp
js
ss
popa
jne
add
mov
shlb
push
pop
cmp
out
push
push
sbb
out
nop
xor
fisttpl
add
inc
xor
aaa
add
repnz
enter
mov
lock
sbb
cmpsb
pop
dec
mov
xor
fnsave
dec
std
mov
inc
pop
add
loope
dec
movsb
mov
sbb
and
mov
outsb
pop
or
idivl
cld
pusha
lcall
xchg
mov
ja
fs
loop
test
dec
sub
imul
cs
jl,pn
sub
inc
mov
xchg
je
lret
pandn
add
add
lcall
jae
or
mov
mov
lahf
dec
fdiv
iret
cli
pop
pop
adc
leave
adc
or
xor
addr16
push
cwtl
xchg
mov
pop
inc
pop
ret
xchg
inc
gs
aas
cmp
and
repz
call
or
mov
xchg
lock
mov
add
gs
or
je
fdivrs
mov
andl
inc
jecxz
or
je
push
int
pusha
jne
shlb
enter
lea
and
and
dec
cmpsb
cs
xchg
out
sub
out
jg
dec
cld
push
mov
inc
icebp
sbb
mov
inc
xorb
xchg
xchg
inc
std
lcall
addb
mov
sub
push
inc
cmp
or
imul
and
mov
sarl
pushl
xorl
out
xor
std
leave
pop
mov
mov
das
and
pop
or
xchg
fildl
pop
test
add
ljmp
adc
mov
into
jge
jl
pusha
and
cmp
negl
cmpsb
int3
rolb
cld
dec
mov
frstor
out
call
rolb
out
sub
incb
lock
popa
push
mov
add
mov
push
and
gs
cmp
xchg
lds
or
sbb
cmp
dec
ret
inc
mov
adc
xor
dec
mov
call
ja
ds
xchg
jge
les
stos
jne
int3
inc
add
xchg
nop
push
inc
inc
into
cmp
or
aaa
clc
push
ds
rclb
jmp
int3
repz
adc
loop
add
hlt
and
scas
mov
jge
les
dec
push
mov
gs
or
mov
add
movsl
pop
ja
pusha
addb
cltd
cld
xchg
fimuls
mov
jle
mov
iret
sub
jge
mov
movsb
mov
cld
aam
pushf
aad
jle
aaa
pop
and
add
or
scas
mov
js
pop
or
or
std
jg
mov
stos
dec
jmp
cmpb
sbb
mov
sbb
xor
inc
pop
data16
pusha
add
outsb
push
add
test
mov
xor
or
and
sbb
inc
xchg
mov
fdivrl
mov
movsb
add
movsb
test
inc
sub
add
cmp
or
les
in
or
mov
sbb
je
enter
cs
mov
sbb
xor
insl
idivb
rol
nop
loop
pop
add
dec
shll
push
jmp
mov
ja
adc
sbb
call
in
pop
mov
cltd
stos
and
mov
mov
lock
push
or
orl
mov
mov
mov
fists
add
cmp
xchg
cld
add
cld
aad
push
jno
enter
test
push
pop
gs
sbb
into
fsqrt
mulb
sbb
push
cld
test
mov
adc
aaa
push
cmp
xchg
sub
pop
pop
pop
mov
mov
xchg
xchg
out
cli
mov
mov
cs
mov
test
mov
idivb
mov
js
push
jl
ret
jno
test
sub
decb
out
pop
mov
xor
fsubs
hlt
outsl
jne
adc
repz
jbe
outsl
pop
xor
loope
int3
testb
add
or
mov
mov
inc
xchg
pop
sub
mov
sbb
aam
push
xor
andl
inc
pop
loope
inc
pop
stos
cmp
lods
add
hlt
outsl
dec
or
lcall
pop
fildll
jbe
divps
add
cmp
insw
addl
push
xor
jbe
pop
pop
dec
add
hlt
out
jl
jge
inc
or
test
mov
mov
jbe
dec
mov
push
icebp
sarl
and
push
mov
daa
sub
jo
pop
pop
std
lahf
or
pusha
mov
icebp
push
pop
pusha
cli
inc
stc
and
cli
and
mov
xor
ljmp
cmp
movsb
and
comiss
dec
cmp
loop
popa
fisubrl
add
scas
std
das
or
pop
xlat
xchg
fs
or
add
cmpsb
pop
pop
shrb
sarb
jmp
push
or
or
or
outsb
nop
xchg
adc
dec
jg
xor
out
sub
pop
xchg
or
mov
or
sbb
aam
frstor
nop
mov
ja
cmp
mov
push
and
or
inc
mov
pop
mov
lods
shrl
xchg
int3
adc
int3
fucomi
jp
das
pop
add
xor
pop
or
popf
push
je
push
inc
inc
inc
movl
pop
or
add
cmp
xchg
push
xchg
adc
rolb
pop
or
sub
cmc
rolb
scas
loop
pop
sub
ror
dec
daa
or
adc
add
or
pop
movsb
cld
pop
cmpsb
lret
push
xchg
sub
sub
fsubrs
mov
cmpsb
mov
fnstcw
pop
cmc
push
or
sbb
fsubr
out
les
mov
in
sar
decl
dec
into
repnz
adc
cmp
add
scas
stos
mov
sub
cltd
scas
aas
lret
jno
enter
lock
je
mov
cltd
test
repnz
push
ljmp
dec
fldt
stc
fbld
sub
mov
shl
and
sahf
xor
fwait
aam
pop
repnz
movsb
rol
lret
decl
sbb
ss
cmp
fstpl
fwait
test
test
and
inc
add
pop
inc
call
mov
cld
arpl
cmp
lcall
pop
ljmp
fdivrl
and
nop
or
push
js
or
shll
sub
sti
lahf
jg
clc
sbb
lods
cmpsl
mov
mov
mov
stos
lret
and
mov
lea
sahf
or
xchg
into
inc
stos
add
divl
out
es
pusha
imul
scas
ss
mov
addl
ds
gs
add
sub
int3
nop
out
call
add
mov
mov
loopne
jecxz
pop
sti
add
test
xchg
pushf
xchg
hlt
ljmp
mov
shll
insb
inc
add
add
rolb
push
mov
jmp
mov
mov
fwait
daa
rcrl
sub
mov
std
jb
push
and
pop
jae
pop
xor
pop
jle
xchg
adc
add
outsl
inc
and
icebp
fstpl
test
inc
inc
hlt
loopne
sbb
mov
sub
add
lock
push
insb
scas
mov
out
outsb
lahf
lods
or
arpl
add
ds
cld
or
fisubrs
dec
adc
or
xor
fadds
and
clc
sub
pop
xor
scas
pop
and
movsb
movsb
outsl
add
sbb
add
dec
lcall
incl
jecxz
addb
sub
mov
cmp
xchg
mov
ds
adc
and
std
push
pop
add
scas
call
data16
mov
or
adcl
mov
addl
inc
lods
cmc
jg
push
in
test
xchg
sbb
sub
mov
and
mov
pop
adc
cmp
stos
or
mov
std
xchg
fisubl
jo
sbb
dec
sbb
cmp
outsb
cld
jno
mov
cmp
jb
sbb
std
mov
mov
jle
shl
incl
xchg
iret
push
cmp
pop
sbb
mov
std
iret
jl
dec
xlat
ficompl
test
outsl
jns
out
js
test
lods
arpl
add
mov
push
jb
xor
xchg
adc
pop
data16
loopne
call
sbb
xchg
dec
pop
or
jne
js
inc
mull
dec
pop
and
incl
lahf
sub
mov
nop
push
add
jl
push
xorb
xchg
pushl
das
pop
add
adc
add
data16
fldcw
lods
mov
and
ficompl
out
bnd
jo
outsb
mov
outsb
push
add
cmc
mov
xchg
add
cmp
repnz
push
sbb
push
add
aam
and
sbb
mov
subb
rcl
int3
mov
mov
mov
out
nop
into
je
or
mov
sbb
mov
lret
je
rolb
loopne
mov
fidivl
test
repz
aam
push
clc
inc
sub
js
lret
loopne
aam
outsb
fisubrl
mov
inc
add
out
rolb
add
dec
in
sub
call
mov
pop
mov
fadds
ljmp
fstpt
mov
cmp
adcb
xchg
xchg
mov
mov
or
mov
xor
adc
inc
pop
sub
fucomp
iret
aam
pop
decl
dec
inc
pop
jbe
sub
xchg
fnstsw
clc
dec
push
dec
push
or
jl
adc
testb
pop
out
mov
add
adc
jae
pusha
xchg
sbb
add
xchg
add
pop
iret
pushf
hlt
push
push
mov
mov
stos
inc
test
dec
sbb
pop
cltd
js
popa
std
pushl
sub
jbe
adc
call
inc
sub
testb
sub
loopne
jno
enter
dec
push
pop
inc
pop
xlat
add
dec
add
inc
loop
es
rorl
es
mov
cld
call
inc
mov
call
in
dec
cmp
dec
dec
inc
fistpl
call
insl
andl
ja
push
push
fbld
jno
int3
call
sub
mov
data16
inc
dec
call
mov
push
xor
hlt
mov
jmp
adc
ja,pt
neg
inc
repnz
inc
and
mov
inc
jge
inc
add
dec
xor
inc
mov
and
loop
and
shrl
push
dec
adc
pusha
outsl
push
jl
ss
jp
dec
inc
xchg
mov
lods
pop
mov
push
hlt
call
inc
add
mov
loope
ret
andb
orl
dec
pushf
dec
loop
shll
pop
mov
sbb
call
cwtl
cwtl
loopne
cmp
jle
inc
inc
adc
inc
enter
adc
sbb
and
xchg
dec
call
pop
adc
rolb
mov
jl
xor
jno
mov
mov
loop
xchg
mov
bound
or
dec
xchg
test
push
add
inc
std
incl
cld
mov
xor
fsub
pop
sbb
call
fbld
and
movsb
inc
mov
push
ss
cmp
rorl
out
xor
inc
ljmp
xchg
mov
add
repnz
mov
fadds
xor
orb
dec
dec
stc
push
divb
andl
adc
fsubrl
dec
dec
je
adc
rcl
dec
imul
jmp
pop
xor
inc
adc
paddsb
cld
mov
es
mov
push
inc
dec
inc
shrl
jp
sbb
call
mov
xchg
push
mov
sub
rolb
push
mov
pop
movl
adc
js
inc
jnp
repnz
fisttps
pop
xor
mov
inc
xchg
push
mov
incl
std
lock
popa
dec
repz
dec
mov
push
inc
lcall
call
mov
clc
or
cmp
dec
call
cmp
lods
pop
fsubl
dec
gs
add
inc
jecxz
pop
and
push
jecxz
addl
dec
adcl
xchg
dec
jl
scas
lret
dec
lock
mov
stos
inc
xor
addb
xor
sti
sub
sbb
shll
adc
inc
push
adcb
fimull
ja
xchg
neg
push
pop
fs
andb
es
jo
push
stc
scas
dec
scas
out
push
xor
inc
add
inc
stos
iret
outsb
gs
hlt
insb
test
add
mov
das
ds
sarb
rolb
inc
push
sub
mov
dec
enter
bound
and
cmpsl
pop
inc
or
movb
cmp
inc
int3
lret
inc
mov
dec
outsl
pushf
or
xchg
mov
xor
inc
call
in
outsl
inc
and
call
movsl
sub
shr
mov
cmp
inc
sub
jns
jo
clc
sub
aam
push
ss
xor
call
mov
push
jle
dec
ljmp
xor
hlt
call
insl
push
sbb
lret
adc
int3
mov
sti
mov
dec
inc
dec
inc
adc
push
inc
pop
add
xchg
aad
sub
pushf
adc
ss
push
lds
pusha
ret
movb
inc
clc
hlt
inc
es
test
mov
daa
cltd
push
sub
int
xor
dec
jle
cmp
mov
cwtl
mov
mov
inc
in
out
mov
clc
jbe
gs
mov
pusha
hlt
add
dec
out
dec
fsubr
icebp
xchg
pavgb
test
inc
push
xor
in
mov
mov
push
shl
cmp
int3
push
insb
mov
inc
inc
nop
jbe
fisubrl
xchg
inc
stos
dec
inc
mov
dec
mov
push
mov
mov
ror
outsl
jp
push
movb
ja
sub
push
gs
mov
sub
add
add
decl
adc
fstps
scas
add
js
cmp
or
add
mov
push
push
inc
push
cmp
push
dec
push
xchg
pop
xor
adcb
or
inc
or
mov
dec
add
lods
adc
xchg
dec
ret
cli
and
inc
js
stc
xchg
pop
cld
cmp
pushf
mov
rolb
push
cmp
cltd
fmuls
ss
mov
push
add
pop
nop
ret
adc
cmp
test
dec
subl
inc
cmp
dec
test
push
pushf
xchg
enter
insl
dec
test
fadds
les
adc
mov
mov
push
xchg
shlb
xchg
fdivs
mov
mov
test
mov
sbb
or
scas
mov
dec
sub
push
add
add
ffreep
xor
sbb
mov
push
xor
cmp
fiaddl
mov
adc
push
mov
iret
mov
and
cmc
dec
sub
pushf
stos
cmpsl
mov
roll
sbb
and
mov
nop
repnz
mov
jg
or
jns
add
dec
inc
sarb
or
pop
or
and
fnstenv
mov
add
xor
adc
dec
lret
mov
cmp
or
inc
sarb
fldz
call
add
push
push
jle
pop
mov
outsb
pusha
push
dec
xor
sub
bound
jne
xor
aam
jp
jmp
mov
loop
test
stos
das
mov
inc
ss
inc
dec
int3
fcomp
je
out
xchg
movsl
dec
sbb
iret
dec
pushf
sub
les
stc
ljmp
dec
xchg
popa
popf
jge
das
enter
js
inc
push
push
lock
sbb
xchg
rclb
mov
dec
arpl
dec
pusha
addb
sub
pop
fs
push
pop
pop
ret
sbb
pusha
jno
push
testb
mov
mov
push
idivl
mulb
xchg
aaa
pop
ret
jbe
inc
icebp
mov
cmp
push
mov
enter
or
push
ds
pop
mov
dec
mov
fld1
add
cwtl
add
sbb
cltd
cli
add
int3
adc
loopne
bound
inc
shlb
xchg
push
dec
cmpsb
cmp
push
es
fimull
jno
push
mov
aam
dec
jo
loope
mov
ret
jle
out
inc
mov
xlat
push
or
js
loopne
inc
adc
icebp
jo
and
cmp
mov
rcr
add
addb
jmp
sbb
pushf
sub
clc
xchg
inc
jo
lret
push
pop
jo
mov
test
loop
rcrl
icebp
sub
loop
sbb
xor
pushl
mov
push
ret
push
xchg
and
pop
lods
addr16
xor
ret
pop
fs
andl
inc
stc
sarb
fsubs
fimuls
loopne
loopne
test
mov
jo
lcall
inc
push
shr
xor
adc
inc
int3
pop
shll
testb
pop
rorl
rolb
pop
loopne
lods
fidivs
or
inc
fs
mov
dec
pop
pop
push
xor
lock
add
into
rcl
mov
inc
jns
outsb
dec
push
jl
andl
jo
push
in
jp
loop
inc
mov
loopne
xchg
pop
lahf
sub
pop
xchg
repz
xor
iretw
inc
cs
fnstenv
lahf
xor
push
cs
inc
fmuls
ret
and
rcll
add
sbb
jb
fists
test
mov
sub
enter
in
shlb
mov
jl
popf
in
into
pop
pop
xlat
ja
lret
inc
xor
fs
lcall
popa
leave
and
repnz
inc
sub
inc
and
sbb
push
sub
cmp
movsb
inc
dec
dec
shlb
pushf
pop
sub
loopne
sbb
inc
add
decb
jge
mov
sti
adc
dec
ljmp
frstor
inc
push
push
call
sub
xor
add
fadds
imul
and
into
std
repz
imul
dec
sarb
js
inc
int3
xor
push
push
or
sub
js
divl
xor
xor
sub
mov
stos
xor
ss
das
sbb
test
icebp
scas
push
fiadds
dec
call
add
std
xchg
cmp
dec
jne
int3
mov
push
ret
cmp
insb
cmp
add
xor
pop
pop
jnp
or
xor
sbb
cwtl
les
je
mov
das
and
dec
mov
add
sbb
stc
ret
push
cmp
and
inc
incb
dec
cmp
and
mov
and
cmp
enter
incb
mov
jle
inc
stos
adc
push
outsb
xor
bnd
or
faddl
or
or
clc
ret
xchg
mov
mov
push
xchg
aaa
popa
cli
aam
push
mov
lret
dec
xor
pop
js
lcall
add
dec
inc
mov
inc
mov
inc
or
push
mov
mov
imul
pop
pop
xor
xlat
mov
xor
clc
hlt
je
or
sbb
sbb
andl
in
loopne
scas
push
or
dec
push
pusha
loop
dec
cmpsb
call
pusha
loop
or
dec
cli
mov
mov
call
inc
out
pop
ret
cmp
hlt
rorb
fcoml
push
ljmp
ret
sahf
push
dec
push
push
xor
adc
fimull
pop
push
jo
gs
pop
aaa
adc
test
loopne
add
push
notb
push
xchg
dec
mov
fisttpll
repnz
je
adc
sbb
mov
or
pop
enter
icebp
int3
decl
adc
cwtl
rcrl
add
testl
aaa
xor
xor
inc
xchg
js
call
cld
push
jno
push
push
es
jo
xor
enter
bound
pop
lods
push
mov
incl
and
incl
dec
jp
cwtl
jl
daa
xor
jge
ret
fcmovnu
call
call
cltd
lock
xor
popa
rorl
inc
rorl
push
jns
movsl
testl
cmp
or
in
lret
lods
es
inc
and
pusha
ret
inc
add
pop
jl
adc
fisttps
inc
push
mov
jno
push
sbb
fistpl
adc
je
add
pop
jmp
ljmp
sarb
sbb
or
dec
mov
inc
imul
add
les
lods
add
dec
inc
inc
xchg
stos
ret
loopne
adc
out
xor
add
inc
mov
push
mov
icebp
cmp
add
inc
push
xchg
push
jl
push
arpl
arpl
add
aas
pop
lock
adc
inc
push
mov
call
call
in
jnp
xchg
enter
leave
dec
lea
cmpsb
jo
into
jmp
xor
adcl
movsl
jne
dec
loop
sub
clc
jo
les
or
jmp
icebp
shll
inc
inc
aam
push
repz
xor
rolb
jnp
popa
xchg
mov
mov
pusha
adc
push
outsl
push
or
lea
scas
dec
es
dec
xor
sbb
pop
xlat
into
fcomps
sub
inc
add
subl
mov
dec
call
add
mov
gs
pop
js
pop
cwtl
dec
mov
mov
rcr
inc
loopne
addl
in
fmuls
push
sbb
add
iret
lods
insb
lret
push
cmc
xlat
adc
sbb
pop
or
push
add
and
and
cmpsb
clc
sbbb
dec
xor
clc
sbb
sub
in
xlat
outsb
dec
sub
nop
mov
hlt
adc
lds
xor
inc
dec
testb
ret
lahf
incb
fld1
arpl
inc
jo
bound
call
push
inc
pushf
or
dec
pop
je
dec
inc
psubsb
js
xchg
stc
inc
adc
pop
cmp
rolb
call
sub
lock
les
jo
out
dec
ja
jg,pn
adc
or
and
dec
push
xor
push
repz
inc
ret
aas
lock
shrl
imul
imul
mov
xor
ret
test
or
aad
sbb
inc
roll
push
shll
push
inc
daa
pop
mov
loope
idivl
mov
sub
dec
test
lods
and
jg
dec
cs
push
scas
mov
push
add
mov
fs
rcrb
in
shll
mov
xlat
out
sbb
rorl
xchg
popf
push
jp
rcl
xor
call
or
dec
xor
inc
and
cmp
jp
cli
jae
jmp
subb
xlat
sub
fcmovbe
or
xchg
int
xchg
cmp
icebp
mov
orb
dec
inc
or
xchg
push
push
jmp
dec
mov
lea
scas
cwtl
fidivrs
neg
push
popa
aam
cli
mov
sub
push
dec
aaa
lcall
cmp
cld
into
mov
lock
inc
inc
rorb
push
jns
ja
sub
fsubp
pop
std
add
repnz
pop
sub
adc
or
adc
mov
and
popl
dec
sbb
or
dec
mov
insl
mov
mov
push
add
mov
xlat
add
push
or
xchg
jo
call
jp
mov
scas
nop
test
cli
xor
or
mov
push
mov
scas
jmp
inc
shrd
sub
int3
cmp
orb
or
sbb
add
into
xor
call
es
sarl
jmp
dec
push
lret
sarl
or
sarb
cmp
arpl
and
pusha
inc
cld
pop
js
sti
add
enter
inc
fmuls
xor
sbb
imul
pop
imul
jae
mov
ret
sbb
or
loopne
popf
in
movsb
bound
pop
ljmp
push
arpl
in
add
adc
xor
xor
mov
rcll
outsl
dec
lock
jnp
addr16
jmp
sub
sub
pop
jns
or
sub
dec
jo
cld
orb
movsb
pop
dec
lods
push
loope
jnp
push
sbb
sbb
push
repnz
sti
pop
js
call
push
sub
xchg
clc
in
or
mov
fsubrs
aam
out
into
addl
pushf
pusha
mov
es
pop
add
xchg
dec
inc
and
in
lcall
in
pop
sbb
outsl
jbe
ds
adc
xchg
hlt
lock
xorb
sbb
cmp
add
ret
add
clc
dec
shrb
and
sub
pop
mov
call
es
scas
pop
pop
sub
push
or
or
add
daa
adcl
into
push
pop
jo
pushl
mov
ficompl
lcall
lock
fcmovnb
mov
cmpsb
jmp
xlat
pop
rdmsr
icebp
lret
jae
inc
pop
mov
ficoml
add
xor
shrb
pusha
adc
rcll
decl
sarb
pop
mov
add
out
push
dec
push
inc
imulb
push
inc
pop
push
clc
pop
fdivr
xor
inc
sub
mov
or
test
imul
pushf
fs
ret
push
push
lods
push
sub
inc
push
aam
call
fidivs
fldenv
xor
mov
roll
push
inc
xchg
shlb
push
shrl
mov
jae
sub
sub
push
outsb
ds
in
jo
or
sti
sbb
fisttps
inc
test
outsl
push
mov
in
or
sahf
hlt
mov
imul
xchg
imul
arpl
scas
cltd
sub
stc
lods
inc
and
dec
cli
inc
clc
add
sbb
sbb
mov
cmp
xchg
fs
jbe
add
mov
cwtl
popf
dec
fsubs
dec
das
shrb
pop
jle
rcl
xchg
dec
hlt
ret
inc
int3
popa
loopne
pop
fldl
sti
hlt
xor
subb
jbe
mov
xor
mov
fdivs
loop
or
pop
ss
xchg
fidivl
lahf
lcall
cmp
inc
push
es
xchg
dec
test
les
mov
insb
decb
push
in
es
push
cmp
pop
jo
inc
dec
call
push
aam
xor
repnz
dec
mov
inc
inc
test
cmc
mov
dec
daa
mov
sub
dec
loope,pt
or
lock
jg
pushf
mov
mov
lock
outsl
repz
clc
movsl
mov
dec
pop
rol
xor
out
dec
sarb
clc
dec
push
pop
adc
xchg
sbb
fwait
clc
xchg
mov
or
sbb
ret
add
shrb
imull
xor
cmpb
push
gs
dec
or
dec
repz
inc
inc
loope
ret
loopne
add
icebp
insl
mov
mov
or
lock
mov
inc
sbb
pop
cmp
into
pop
bound
cltd
es
es
xor
add
sub
sahf
into
xlat
out
jno
push
hlt
pop
dec
shrb
mov
or
dec
or
jg
cmp
rorl
xchg
rorb
sbb
imul
push
nop
cli
dec
push
push
sub
lock
mov
add
mov
push
movsb
push
js
and
adc
and
add
inc
loopne
mov
ficoms
in
mov
in
push
enter
addl
pop
pushf
sarl
mov
mov
push
jecxz
pop
mov
add
lret
lret
aad
addb
jb
lock
push
inc
pop
jbe
dec
in
mov
adc
fcoml
lret
xlat
mov
push
cmp
cmp
sub
adc
inc
mov
mov
xchg
xor
mov
adc
sbb
and
jne
dec
test
addb
out
inc
mov
in
lcall
roll
mov
xor
pop
mov
and
out
sbb
lds
ds
enter
mov
dec
nop
ret
lret
lds
xor
test
dec
pop
shrb
iret
call
jno
bound
push
adc
xor
jo
lret
and
jecxz
add
test
lods
adc
add
in
dec
jns
repnz
incb
ss
push
mov
push
stos
cmp
mov
ret
adc
test
add
push
inc
cmc
sbb
cmp
icebp
mov
inc
xor
lock
cld
in
aam
dec
push
dec
sub
and
sbb
cmp
mov
roll
ret
push
ret
roll
fldt
dec
int3
push
insl
insl
gs
call
loope
add
adc
sbb
fnstsw
cld
ret
mov
xchg
add
or
mov
in
popa
mov
inc
xlat
dec
inc
lods
outsl
rcrb
inc
add
lods
loope
inc
xor
decb
les
testb
xor
dec
jb
clc
add
mov
pmuludq
rorl
in
sbb
pop
push
bound
das
in
ficomps
orb
or
sbb
negl
push
fsubs
adc
bswap
adc
sbb
and
jne
add
adc
les
fidivrl
push
xorb
and
inc
fimull
or
js
ss
xor
xor
into
arpl
push
sbb
inc
mov
or
jno
and
inc
push
cmp
pop
out
add
dec
pusha
or
mov
pusha
je
fmuls
test
mov
arpl
mov
das
and
add
hlt
pop
pop
pushf
into
test
mov
add
fcmovu
bound
outsb
dec
or
push
jmp
call
push
inc
pop
shl
push
pop
roll
cmp
push
push
mov
int
test
sbb
cmp
clc
js
xor
inc
jl
push
sbb
lods
add
lret
push
adc
repnz
mov
into
adc
int3
ss
dec
fs
cli
push
cwtl
sbb
cld
cmp
into
inc
int3
push
sbb
push
push
mov
push
sbb
movsb
dec
inc
mov
lock
bound
cmp
test
or
jle
aam
lret
mov
inc
mov
lods
outsb
mov
mov
mov
jl
lods
inc
cmp
fnstcw
pop
enter
fwait
call
js
and
xor
mov
adc
mov
cwtl
lret
call
rcll
aas
and
popa
add
add
loope
mov
movsl
sti
lock
xchg
hlt
pop
push
or
les
addb
inc
jns
push
iret
fsubrl
insl
rcrb
jbe
rcrb
inc
dec
adc
jl
add
pop
cmpsb
sub
mov
jne,pt
sbb
je
mov
call
rcrb
sbb
jnp
mov
sar
lock
fisubl
dec
cli
not
inc
xor
xchg
loope
lret
jge
loopne
xchg
push
inc
push
mov
gs
test
sbb
and
adc
dec
jbe
adc
stc
xchg
lods
loopne
add
lret
inc
mov
shl
popa
sub
mov
gs
outsl
inc
inc
push
test
aam
or
cwtl
pop
xor
inc
lock
pusha
fadd
movsb
scas
fsubrp
pop
add
push
dec
inc
push
cwtl
push
xor
cmpsl
stos
jle
or
xchg
dec
mov
in
pop
pushf
push
xchg
add
filds
dec
sub
stos
hlt
imul
in
mov
lods
mov
aad
xchg
inc
aas
pop
out
push
in
jle
dec
dec
adc
sub
test
call
cmp
dec
inc
lock
nop
mov
push
mov
or
inc
out
jo
pop
pop
stc
sbb
neg
dec
mov
dec
xor
xchg
loopne
pop
scas
call
fsub
pop
mov
lea
inc
loopne
xchg
or
or
mov
popa
xchg
out
dec
stc
cmp
mov
push
push
jmp
loop
xchg
mov
xlat
dec
jb
xor
sbb
dec
movsl
ljmp
dec
cwtl
dec
fwait
adc
mov
js
mov
mov
adc
and
rclb
call
outsl
dec
loope
arpl
or
mov
lds
push
dec
je
add
mov
sbb
adcl
mov
mov
lret
lahf
jp
push
inc
mov
aam
andl
addr16
adc
xchg
xor
fld
test
dec
lods
push
dec
pushf
and
dec
out
cmp
movl
cmp
inc
loopne
fucomip
fisttpll
fcoml
inc
call
mov
pop
call
pop
mov
push
sti
lret
daa
pusha
push
ret
jb
jns
inc
jae
mov
cmp
pushl
mov
mov
sbb
dec
daa
movsb
stos
and
cmp
nop
pminsw
loop
xchg
push
repz
mov
adc
loop
push
xchg
stos
rep
shll
mov
sub
jo
test
xchg
pushf
test
add
popa
js
sub
adc
or
imul
sub
cld
scas
fs
push
call
fnstsw
jno
jne
mov
enter
jmp
dec
hlt
or
inc
in
adc
or
sbb
ds
negl
js
insl
fs
or
push
imul
insb
sub
dec
push
je
clc
stc
mov
xchg
ret
add
subl
xor
call
sbb
xor
aaa
stos
int3
push
pop
inc
cmp
mov
lea
or
orl
xchg
or
lret
cmp
enter
pusha
cmp
cmp
xchg
aam
sbb
mov
or
repnz
test
inc
jnp
jb
pop
loopne
sub
mov
add
je
push
fcoms
cmp
shl
pop
push
mov
lret
js,pn
sub
cmp
xchg
or
xchg
mov
lods
push
pop
jmp
pusha
xor
fidivrs
sbb
cmp
mov
inc
inc
mov
inc
add
repz
cld
mov
push
dec
inc
dec
sbb
mov
sbb
test
ret
sbb
inc
sub
push
int3
je
xchg
jle
and
pop
call
ja
inc
je
call
xor
fldl
inc
cmp
in
mov
addl
or
and
or
frstor
xor
mov
in
mov
jo
pop
cmp
push
jp
mov
sub
pop
sbb
or
cli
adc
mov
inc
and
and
cmpl
aam
test
add
aaa
dec
dec
pop
push
pop
leave
cs
inc
inc
js
adc
jl
mov
fsubr
push
int3
loopne
mov
push
mov
lock
mov
divl
add
das
xchg
jmp
push
pop
xlat
adc
test
xchg
or
sti
imul
inc
inc
mov
push
mov
push
pushf
ret
add
pop
mov
or
add
rorb
fnsave
decb
subl
vmwrite
jnp
inc
add
fidivs
sbb
cmpsl
sub
sbb
cmp
jle
cs
popf
scas
cld
outsb
adc
and
cmc
add
pusha
jl
mov
sub
mov
push
cld
push
hlt
mov
imul
dec
xor
fcomps
roll
mov
lods
int
mov
lahf
xor
sbb
push
adc
push
shlb
icebp
push
inc
cmp
dec
out
popf
es
jle
in
cmp
xchg
jp
xchg
test
xor
push
and
arpl
fcomp
call
pushf
xchg
push
ffree
je
mov
xor
inc
fstpt
shll
aas
sahf
fbstp
inc
call
or
pop
add
pop
xor
repz
sub
mov
sbbb
andb
sub
fsubl
insb
movsb
push
jb
addl
adc
insl
ss
out
dec
xor
inc
push
push
sahf
stc
adc
sbb
inc
xorb
es
je
xchg
insl
loopne
push
push
push
push
movsl
rolb
cmp
notb
js
ficoml
add
inc
notb
fmul
and
xorb
mov
add
enter
call
mov
sbb
fcompl
jo
cmp
jmp
in
cli
mov
sub
stc
dec
bound
clc
shl
nop
dec
adc
andl
or
scas
push
cmp
out
or
stos
jp
lods
inc
inc
xchg
sbb
fwait
cmp
jecxz
push
les
xor
inc
in
popa
xor
je
pop
cmp
inc
inc
push
pop
pop
test
popa
stos
xchg
fadd
pop
inc
push
inc
pop
loope
dec
fidivl
dec
mov
shll
push
inc
jno
cmp
loop
fsubr
ffree
mov
mov
adcl
gs
inc
stos
imulb
add
push
cmp
sub
mov
pop
push
das
add
push
test
add
or
dec
add
dec
fidivs
rcrl
inc
mov
fistl
push
fsubrs
insb
enter
loope
sub
mov
inc
roll
aaa
pusha
fdivs
adc
dec
and
pop
mov
mov
mov
mov
enter
scas
inc
lock
test
ljmp
call
xlat
pop
jae
fisttpl
mov
adc
addb
sub
jo
mov
js
test
xchg
mov
sbb
shr
cwtl
insb
pop
sub
jae
daa
roll
pusha
push
push
cmp
ret
cmp
clc
mov
add
dec
jge
inc
cmpsb
mov
loope
jl
es
inc
test
adc
add
dec
inc
push
js
sti
addb
ljmp
call
ds
in
sub
dec
xchg
fadd
pop
stos
pushf
cli
inc
push
add
iret
mov
loop
aam
or
push
cvtdq2ps
loope
adc
sub
int3
fistpl
push
adc
test
repz
dec
cmp
inc
popa
pop
push
ret
das
cmp
into
loop
ficoml
xor
out
addr16
stc
adc
mov
pop
rorb
cmp
add
mov
or
mov
jp
sbb
inc
dec
jbe
rorb
ret
jo
mov
sub
cmpsl
mov
jne
inc
jb
ljmp
adcb
sub
xor
bound
ret
adc
test
xor
and
hlt
ret
movsl
loop
sbb
in
cmpsb
es
adc
out
jnp
xchg
out
mov
push
mov
push
dec
call
jno
xor
mov
inc
fldcw
sbb
xor
push
sub
xor
xor
fidivl
cld
dec
loop
fmull
inc
mov
dec
cmp
ds
orb
and
popa
inc
mov
rorb
call
shlb
inc
rolb
loopne
inc
rolb
loopne
jge
pushf
dec
pop
dec
out
pusha
rol
push
jbe
and
fadds
aas
and
inc
xchg
push
test
jmp
testl
cld
cmpsl
or
or
xlat
or
testl
dec
and
add
mov
inc
push
les
jmp
add
inc
mov
cmp
inc
cmp
adc
sub
xor
and
dec
jbe
aas
call
repnz
popa
dec
adc
push
push
je
inc
pushf
je
dec
pop
inc
inc
rolb
lods
pop
jl
push
pushl
xchg
mov
inc
jl
xor
lds
mov
mov
mov
das
rorb
cmp
adc
sbb
dec
jae
ret
xor
test
shr
add
adc
iret
adc
repnz
adc
in
sbbb
sbb
and
push
das
pusha
rclb
push
hlt
and
mov
in
pushf
sbb
adc
jbe
or
jecxz
pop
xchg
rcr
orl
adc
rcrl
inc
inc
dec
add
ret
fsubl
fldt
nop
loopne
lret
aaa
jp
pop
push
xor
push
imul
pusha
repz
cli
sub
pop
sti
push
sub
enter
or
loope
cmp
stos
add
jbe
sahf
cmp
mov
andl
sbb
inc
ja
sbb
mov
rcrl
mov
jp
imulb
clc
push
je
push
adc
mov
pusha
xchg
lock
outsb
testl
roll
dec
iret
pop
js
inc
push
inc
add
icebp
dec
call
inc
fdivs
mov
pop
sub
subb
jno
dec
and
add
in
mov
add
loopne
shr
pop
int3
outsl
xor
loope
insb
lahf
lret
imul
pop
jl
and
imul
imul
push
push
into
cmp
enter
and
jl
add
adc
sub
dec
add
pop
lock
cmp
xchg
cwtl
sub
call
test
insb
rolb
lods
loop
lret
adc
es
sbb
mov
inc
push
fimull
sub
and
ljmp
insb
rclb
add
mov
inc
inc
dec
pop
sbb
adc
and
mov
imul
push
sub
stc
xchg
push
insl
pushf
icebp
in
ss
mov
sub
in
push
insb
xor
or
scas
fcmovbe
xlat
push
adc
inc
enter
push
add
outsb
push
sub
cmpsb
add
mov
push
lock
inc
imul
xchg
mov
add
cwtl
push
push
gs
je
add
mov
xor
fdiv
rorb
or
or
mov
add
inc
insb
shlb
ljmp
ret
jp
inc
adc
loopne
mov
mov
add
mov
pop
push
cmp
cmpl
sbb
cltd
lret
es
sub
pop
stc
push
mov
xor
dec
dec
sbbl
stos
adc
lods
pop
push
lods
push
rcll
popl
leave
fsubrs
cwtl
mov
dec
aam
call
pop
in
les
aam
inc
or
loop
popf
mov
loope
pusha
sti
ret
loope
jns
fcmove
daa
mov
adc
call
pop
adc
stos
inc
scas
adc
push
std
fildll
inc
jae
mov
addr16
adc
cmc
imul
and
or
or
ss
out
or
add
loopne
ret
pop
stos
rolb
xor
xchg
movb
inc
test
sub
arpl
loop
ficomps
jae
mov
pop
pop
pop
lret
xor
test
and
in
roll
jo
jne
inc
es
mov
mov
mov
add
jp
in
inc
js
fisubl
sbb
jo
mov
push
test
mov
fucom
push
inc
fildl
loopne
out
popl
inc
xor
xchg
fisubrs
frstor
cmp
out
push
cmp
or
dec
push
nop
sbb
les
adc
xchg
pop
dec
mov
les
or
inc
inc
pop
inc
fwait
shrb
int
fcoms
jmp
add
xchg
clc
inc
push
push
jecxz
ret
mov
push
fiaddl
cmp
pop
lods
lods
lea
ret
dec
fisttps
mov
negb
shrb
xchg
test
cmc
jne
mov
daa
pusha
enter
lock
lock
enter
sub
test
dec
push
cli
sbb
push
xchg
dec
popa
outsl
jns
std
rcr
sub
xchg
cwtl
mov
clc
sbb
add
cmc
aam
xor
pop
ljmp
ret
nop
aad
ds
dec
xor
jno
cmp
into
rcll
je
push
fidivs
inc
lret
and
jnp
clc
shll
sub
and
mov
rcll
data16
inc
pop
mov
push
xor
mov
sbb
pop
les
data16
movsb
stos
pushl
call
add
es
lret
popa
dec
repz
test
jp
mov
gs
jecxz
add
daa
scas
inc
dec
dec
dec
inc
push
or
mov
adc
fsubs
fidivrl
sbbl
cmp
icebp
sub
aam
fmuls
ret
ja
inc
pop
ret
aas
mov
pop
hlt
cwtl
dec
or
adc
add
mov
lock
sbb
cmp
cmpsb
sub
cli
rorb
dec
sbb
or
outsl
call
bt
mov
fs
cltd
cmc
decl
fisttpl
scas
fisubrs
push
movsb
jne
cs
push
sub
xchg
incl
push
or
out
xor
popa
iret
or
aam
xor
cmpsl
adc
movl
pop
iret
pop
inc
mov
inc
xlat
jl
pop
rorl
pop
or
das
mov
push
or
fbld
cmp
push
sbb
sbb
cvtps2pd
ret
dec
call
cld
add
loopne
push
adc
iret
sbb
leave
cmp
adc
xlat
inc
add
jle
or
popa
repnz
or
push
inc
dec
push
test
pop
ret
or
js
lret
inc
mov
movsb
cmp
mov
aam
mov
dec
rol
notl
mov
dec
cwtl
mov
and
loop
fstpt
jo
inc
cli
mov
popa
and
nop
dec
scas
adc
stos
inc
scas
jecxz
pop
les
adc
inc
xchg
inc
mov
push
push
js
cwtl
add
inc
ret
pushf
and
mov
rorb
push
iret
mov
xor
rcrl
jo
mov
jo
xor
lock
jno
sub
dec
push
subl
les
inc
movsb
adc
jbe
sub
incb
inc
or
clc
gs
fs
enter
test
add
outsl
or
outsb
push
ja
ret
lods
push
pop
fwait
ljmp
dec
pop
testl
and
call
stc
xlat
adc
call
std
in
out
add
xchg
ret
test
adc
call
mov
push
mov
rolb
pop
add
fstpt
loope
pop
mov
jge
push
dec
inc
rcll
inc
loope
dec
in
sbb
leave
add
data16
imul
ffreep
data16
adcl
dec
lret
std
dec
leave
enter
jbe
sbb
adc
sub
fcoms
les
loope
stos
push
pusha
push
and
aam
pop
xor
dec
cmp
fisubl
push
or
mov
sub
dec
stos
sarb
mov
xorl
inc
test
ret
loopne
pop
add
push
jmp
adc
cld
ds
clc
pop
icebp
cmp
bound
ficompl
rolb
fucomp
inc
dec
cmp
in
ficompl
fs
dec
repnz
pop
cld
nop
ror
inc
mov
into
in
addr16
mov
and
pop
add
cmp
push
or
stos
test
adc
std
shlb
test
hlt
mov
jp
ljmp
cwtl
les
sub
arpl
dec
xor
lea
sbbb
hlt
mov
xor
or
jp
cmp
outsl
add
into
movb
insl
push
inc
clc
call
push
dec
lock
pushf
inc
push
push
adc
repnz
rcrb
xchg
push
cmpsb
cli
in
repnz
call
sbb
jecxz
loopne
dec
dec
xor
cmp
mov
or
inc
adc
fst
add
popa
fcom
dec
push
test
data16
call
in
sub
repnz
cli
loope
or
inc
inc
jo
loopne
lahf
out
pop
dec
loop
sbb
ficoms
ds
test
sarb
outsb
sbb
jae
sbb
mov
adc
loopne
cmc
das
inc
movsl
loopne
lods
subl
pusha
lods
adc
sub
sub
push
cli
inc
or
pop
insb
outsb
cli
lds
ss
aaa
xor
nop
mov
sub
dec
cwtl
add
add
into
je
call
jmp
jl
or
cltd
push
mov
mov
call
ud0
js
dec
dec
dec
imul
pop
add
inc
adc
sub
jns
xor
shlb
adc
cmc
je
push
mov
jae
call
push
mov
inc
mov
inc
ucomiss
fucomp
cli
cld
xchg
incb
call
jno
xor
add
cwtl
and
push
aad
jae
add
enter
into
mov
fiaddl
cmpl
fwait
inc
repnz
arpl
inc
mov
jl
lahf
and
hlt
lods
add
sbb
mov
testl
mov
mov
mov
loope
into
rcr
into
js
or
xchg
fiadds
inc
in
xchg
xchg
jno
adc
mov
mov
rclb
stc
fnstenv
sahf
sub
je
push
fcmovu
adc
imul
mov
mov
mov
sahf
xchg
rorb
xchg
repnz
pushf
or
ljmp
rorl
jb
int3
les
rclb
sbb
js
push
fisubrs
adc
cmp
lock
inc
xchg
lods
aam
dec
rcrb
sbb
push
scas
sbb
adc
lock
pop
js
dec
xchg
mov
push
inc
xor
inc
lahf
call
xchg
and
mov
rclb
xor
jnp
add
jecxz
dec
shlb
dec
mov
sbb
fcmovb
repnz
hlt
jmp
std
stos
dec
orl
out
dec
or
mov
lea
aaa
loope
or
loope
inc
mov
lcall
dec
ret
and
and
push
andl
rorb
add
mov
mov
inc
sbb
xchg
negl
call
lock
dec
lea
cmc
dec
sbb
test
mulb
xor
ror
test
je
daa
mov
mov
andb
lods
jo
orb
inc
xorb
lods
loop
or
sbb
adc
and
jbe
xor
sahf
jno
ret
inc
dec
incb
nop
push
hlt
push
call
or
ljmp
notb
mov
inc
cmp
rorb
sbb
or
shlb
test
lods
inc
pop
scas
shlb
cld
cmc
sub
int
dec
sti
cld
pop
bt
add
mov
xchg
lret
loop
sub
sbb
ds
xor
pop
xchg
inc
push
xor
and
dec
jmp
loope
mov
fadds
int
in
xlat
xchg
into
loopne
or
or
les
push
mov
imul
mov
push
or
push
cmc
jecxz
dec
or
inc
mov
inc
mov
ret
mov
and
aam
les
xchg
hlt
or
inc
loopne
jne
les
decl
les
jecxz
add
inc
out
or
icebp
mov
insb
lret
or
addl
mov
jns
outsl
das
xor
mov
jno
cwtl
xor
add
fidivs
xchg
stc
and
sbb
or
call
push
dec
lret
inc
and
lcall
sbb
xchg
fsubs
orb
daa
mov
add
or
add
inc
test
sub
inc
push
inc
add
mov
je
test
cmpsb
push
imul
jb
outsl
dec
jne
je
inc
jns
gs
fisttpl
insl
push
jne
jb
sbb
jb
insl
jo
mov
jb
cmp
imul
imul
dec
bound
arpl
outsb
inc
js
xchg
xchg
push
jno
pop
pop
cmp
insl
lds
inc
idivb
mov
pushf
add
jg
jb
fimull
out
rcrl
jb
imul
arpl
subl
insl
popa
sub
outsl
jne
scas
mov
outsl
xor
je
jne
jb
push
push
daa
dec
push
in
fsts
inc
mov
das
adc
bound
push
push
push
dec
gs
cmp
add
dec
push
fistl
and
mov
xchg
push
and
test
xchg
imul
jns
jle
data16
inc
and
cld
fmull
dec
cmp
outsb
jne
loopne
mov
ret
ret
in
or
xchg
and
and
push
mov
or
or
and
adc
dec
jae
push
lods
lea
cmp
push
icebp
mov
call
dec
imul
mov
pop
push
jb
inc
dec
jbe
dec
insl
outsl
es
pop
ja
scas
inc
fsubrs
jb
dec
arpl
pop
xchg
jnp
sbb
push
xor
add
pop
jp
push
sub
andb
add
ss
and
je
and
sbb
sahf
arpl
jns
inc
xchg
jbe
popa
or
mov
repz
xchg
enter
add
sbb
popf
or
orl
pusha
mov
das
adc
and
xchg
bound
mov
jge
stos
xchg
outsl
adc
cmp
push
fsub
lods
imul
pop
insb
sahf
jo
dec
inc
xor
add
or
popa
ficoml
in
or
nop
push
inc
inc
adc
sub
cmpsb
dec
nop
push
lds
add
imul
bound
mov
mov
insb
dec
rclb
cli
jp
lods
mov
les
std
shrl
jnp
push
outsl
inc
popa
add
flds
dec
lds
ljmp
cmp
push
dec
push
xor
dec
jo
adc
jae
out
outsl
pop
inc
xchg
cwtl
add
add
insb
into
lods
addr16
fs
jl
mov
hlt
js
push
lds
pop
shrd
mov
push
cmp
outsl
pop
mov
insl
dec
sub
cmp
mov
sbb
pop
push
es
and
test
sub
pop
inc
xchg
mov
imul
nop
xchg
sbb
xor
jo
xchg
sub
mov
pop
or
push
inc
xchg
inc
imul
fcoms
outsl
and
idivb
push
data16
jo
dec
jb
mov
sub
xchg
popa
xor
data16
sbb
loop
push
pusha
loopne
dec
xor
je
clc
jecxz
push
gs
or
ret
ds
inc
stc
int3
jo
addb
shrb
movl
mov
scas
push
push
xor
and
lcall
dec
jecxz
or
insl
aad
fcmovu
pusha
or
dec
xor
fadds
jne
test
adcb
scas
shlb
inc
jge
ret
popa
es
inc
xor
sarl
sarl
pop
sbb
jns
rolb
leave
and
sar
jecxz
ret
cmp
inc
rolb
js
pop
push
jmp
popl
mov
xor
cmpsl
push
fdivs
out
enter
dec
push
filds
mov
inc
bound
pop
push
and
in
test
add
sub
outsb
mov
inc
loop
sbb
imul
add
shl
inc
jb
imul
add
subb
inc
mull
sbb
insl
dec
cmp
sbb
push
mov
inc
dec
push
dec
inc
lcall
push
outsl
and
push
orb
imul
push
outsb
push
imul
push
inc
movl
addr16
and
test
rorb
jbe
imul
outsl
pop
inc
popa
fnstsw
or
fs
les
sarb
xor
inc
int
adc
test
daa
sub
arpl
push
add
gs
aas
jb
push
dec
dec
data16
dec
in
pop
iret
push
and
pop
ss
xchg
roll
mov
dec
mov
jnp
jl
cs
dec
xor
sbb
rcll
jle
push
xor
inc
hlt
add
xchg
mov
dec
outsl
enter
frstor
pop
inc
movsl
test
mov
push
sub
dec
jae
popa
dec
imul
xor
daa
push
inc
arpl
jo
mov
dec
lods
add
push
xlat
cmc
xchg
xchg
gs
fcoms
mov
inc
inc
je
popa
xchg
or
dec
pop
inc
xor
repz
mov
push
rorl
rcll
ret
cld
insb
sub
cmp
xchg
jmp
outsb
jne
push
adc
sbb
jle
xor
sti
adc
jae
outsl
add
js
cmp
insb
outsl
inc
push
lock
lods
xor
xorb
insl
and
and
bound
jb
sbb
xor
cmp
push
jo
push
sbb
push
mov
xchg
sbb
add
cmpsb
push
aam
xorb
sbb
push
jmp
arpl
pop
xor
and
dec
loopne,pt
cmp
mov
ss
insb
fdivs
fstl
push
cmp
aaa
cmp
rcll
push
jns
ja
jns
add
inc
imul
loop
jle
mov
fwait
ret
inc
jge
gs
xor
fisubs
outsl
les
dec
xchg
jecxz
push
popa
xchg
inc
inc
adcb
adc
pushf
leave
adc
pop
dec
mov
adc
lods
inc
dec
daa
arpl
addl
insb
xor
and
subl
push
pop
and
loope
test
sbb
inc
sarb
jecxz
mov
clc
stos
mov
or
xor
or
lea
stc
push
jbe
aaa
jecxz
dec
test
iret
jge
loopne
sbb
addr16
in
dec
push
jns
jbe
pushf
insl
mov
mov
xchg
pop
je
or
pop
mov
mov
je
mov
add
movsl
adc
outsb
mov
jl
and
fdivrs
aaa
sbbl
pop
sbb
inc
push
dec
add
add
mov
das
in
adc
loopne
sidtl
add
add
in
add
mov
pop
cmp
add
inc
pop
add
jmp
fidivs
sbb
pop
cmp
or
adc
or
out
add
push
test
inc
mov
leave
cmpsl
inc
or
sbb
mov
push
inc
dec
add
xchg
loope
mov
inc
dec
inc
cmpl
testl
mov
pusha
inc
push
push
ds
lock
in
mov
and
cs
popa
inc
sbb
sbb
jns
sbb
xor
sahf
mov
jb
inc
mov
lahf
push
dec
jae
arpl
sbb
mov
sub
add
xchg
dec
xchg
and
ret
test
incl
add
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
add
xor
