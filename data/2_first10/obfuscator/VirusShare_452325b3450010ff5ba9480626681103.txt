push
call
ret
ret
adc
cmp
mov
inc
xchg
cmc
and
cmp
adc
ss
mov
jne
cltd
pushf
push
int3
ljmp
int
mov
out
jecxz
out
xor
ret
push
push
and
fldl
and
shrl
inc
adc
mov
repnz
sbb
add
clc
movsl
jecxz
jnp
enter
ja
orl
add
leave
jl
cltd
jle
jae
xchg
or
push
mov
push
lcall
daa
push
stos
and
jne
mov
test
and
cmp
xor
lahf
mov
push
xchg
jmp
cmp
sbb
leave
dec
gs
jno
mov
mov
filds
fs
repnz
lods
fsubr
or
fdivp
add
xchg
les
jp
xchg
insl
clc
fneni(8087
ftst
data16
mov
sbb
pop
sub
ss
push
xchg
cmp
xchg
adc
icebp
mov
xchg
sub
xchg
adc
lds
test
clc
mov
adc
in
aaa
repz
push
add
sbb
inc
cmp
or
aam
jp
sbbb
pop
push
hlt
cwtl
push
rcrl
rcr
lock
sti
addr16
sub
repnz
dec
stos
xor
sbb
dec
inc
and
aaa
jl
fldcw
jge
test
lock
and
cmp
int3
std
mov
lret
lret
or
xchg
cmp
mov
sar
sub
and
and
sbb
std
and
repz
xor
mov
nop
jmp
jne
int3
cmp
test
orb
and
fisttps
mov
loope
dec
fs
bound
mov
push
xchg
fdiv
gs
in
jno
jbe
mov
mov
ret
sub
loope
daa
in
incb
or
pusha
lods
std
test
xor
faddp
pusha
inc
call
sbb
loope
cmp
imul
call
xor
incl
xorb
stc
decb
xchg
fwait
ret
pop
mov
nop
pushf
push
jns
aam
in
mov
xor
popf
arpl
adc
mov
sbb
adc
jmp
adcl
fcompl
push
inc
dec
push
xchg
fstpt
int3
shl
cmpsl
test
sub
xchg
xlat
hlt
xchg
pop
repnz
fwait
pop
aad
rcrl
inc
inc
mov
push
xorl
ficoml
rolb
xchg
insb
push
ret
jle
rcrb
ficoml
data16
std
loopne
xor
mov
add
sti
bound
sub
lcall
shl
xchg
pop
imul
jae
cmp
mov
cmp
aad
mov
stc
jne
cmp
mov
iret
xor
sbb
and
mov
mov
ret
jg
orb
jmp
popa
popf
mov
cld
mov
xchg
jg
cmp
je
mov
and
shll
xchg
ja
pushf
sbb
sub
mov
cs
or
and
cmp
pushf
lock
mov
lds
xor
and
btc
and
xchg
push
inc
outsl
inc
dec
pop
sbb
iret
jmp
js
arpl
pop
mov
pop
fbld
daa
stc
cld
aaa
imul
and
imul
or
fwait
xchg
mov
mov
add
in
adc
push
and
ror
les
pop
jne
bound
iret
jo
rcrb
inc
ljmp
pushf
mov
dec
xchg
add
outsb
fsubp
sub
cs
fistpl
xchg
sub
mov
mov
xor
xlat
mov
pop
inc
cmc
mov
jns
cmp
fstl
xor
test
adc
mov
cmp
jmp
mov
in
mov
popa
mov
dec
and
arpl
into
hlt
push
pop
mov
cwtl
push
jae
inc
popa
das
stc
pushf
inc
call
dec
jbe
fsubr
pushf
xchg
adc
es
dec
notb
shl
wrmsr
sub
sub
addr16
into
inc
rep
jae
jp
mov
dec
xor
push
push
les
sub
xor
outsl
add
test
cmpsl
dec
lahf
adc
stos
cmpsb
adc
lods
mov
aam
xor
lahf
cld
ljmp
fwait
sbb
push
pop
pushf
nop
lahf
and
cmpsb
insb
jb
dec
and
dec
ss
lods
sbb
push
jp
sub
aam
inc
scas
pushf
sub
jl
out
out
xor
mov
inc
ret
shlb
out
decb
push
jp
shrb
pop
mov
fstps
sub
ret
pusha
mov
popf
das
std
sub
mov
pop
stc
sahf
inc
and
mov
daa
or
mov
push
dec
iret
xchg
pmaddwd
pop
mov
inc
sahf
daa
jae
loope
arpl
inc
dec
dec
push
rcrb
sub
es
jle
stos
and
dec
int
shlb
jno
adc
add
inc
pop
mov
or
xchg
pop
cmpsl
mov
push
popa
jae
push
jns
add
cmpsb
push
loop
xor
test
add
push
and
inc
int
out
ljmp
pop
addr16
test
mov
xlat
dec
sbb
and
adc
xchg
mov
sub
mov
pusha
incl
xor
jl
jne
cs
cmp
sbb
and
pop
push
cld
push
iret
lret
pop
jo
gs
fs
push
xor
mov
cld
aam
dec
inc
mov
mov
movsl
xor
call
jae
cmpsb
mov
mov
mov
jge
pop
xchg
dec
sbb
or
enter
sbb
jle
js
hlt
imul
fsub
lret
mov
sbb
ret
lods
pop
mov
sti
adc
aad
in
sbb
or
mov
nop
loopne
jl
pop
sbb
cld
mov
iret
fistpll
scas
notl
arpl
cmpsl
jns
sub
inc
cltd
stos
or
fldl
aad
xchg
sti
inc
aaa
mov
cld
outsb
cs
jl
daa
xor
gs
sbb
insb
mov
stc
call
and
cmp
ret
cmpsl
fldl
mov
movsl
aas
in
in
jne
or
mov
bound
dec
dec
and
pop
xchg
addl
aas
mov
sbb
lahf
call
iret
pop
pop
inc
sbb
dec
pop
ja
mov
xor
stos
out
mov
mov
lds
btl
loopne
out
mov
dec
push
out
sub
adc
jo
outsb
sub
mov
insb
cmpl
inc
jno
cltd
xor
cmp
add
xchg
jno
xchg
call
xor
adc
fdivrl
add
and
test
cmp
sbb
dec
lcall
xchg
cltd
test
mov
push
jecxz
aam
andl
call
les
xchg
hlt
leave
or
out
aaa
inc
xor
jg
pop
xor
jo
jne
enter
mov
out
fs
cmp
mov
mov
sub
jns
dec
lahf
jne
push
ficoml
or
test
lods
cmc
cmp
sub
fadds
in
lock
inc
add
pusha
aam
mov
push
aam
sbb
int
aaa
in
mov
add
sbb
imul
in
mov
dec
lds
xor
stos
sbbl
loopne
jp
dec
jg
push
cmp
push
hlt
es
fisubrs
int3
mov
stos
repnz
mov
dec
jecxz
mov
sbb
dec
rcrb
ret
mov
inc
outsl
sub
pop
and
pusha
jnp
addr16
xor
icebp
fdivl
and
add
xorb
xor
sub
sbb
clc
sub
sbb
xchg
ror
ss
movsl
inc
in
xor
into
mov
dec
frstor
andl
adc
jg
rcl
leave
mov
loop
leave
cmp
into
shlb
mov
cmp
clc
call
cld
shrl
jbe
jl
push
xor
jae
aas
inc
aam
cltd
cmpsb
xchg
xor
mov
outsb
arpl
inc
mov
mov
clc
pusha
outsb
lods
jns
pushf
in
and
and
enter
leave
int
rclb
lock
shlb
imul
int
hlt
fistps
xor
and
insb
add
das
mov
popa
pop
or
notrack
sbb
and
add
xchg
lret
inc
and
ret
movsl
xchg
dec
inc
test
pop
and
roll
lret
pop
jno
nop
test
js
lcall
insl
fs
les
cmp
ja
jno
daa
xchg
mov
mov
outsb
mov
xor
push
in
xlat
jecxz
ja
sub
test
mov
jmp
push
aas
cmp
fs
mov
gs
inc
mov
xor
ret
imul
rorl
inc
lahf
sub
fnsave
mov
xor
or
cmpsl
jecxz
xchg
outsl
test
pop
push
mov
cmp
pop
sbb
sub
fmul
out
sub
loopne
in
dec
mov
mov
xchg
or
adc
mov
iret
stos
xor
pushf
and
lcall
nop
xchg
or
scas
sahf
movsb
jmp
test
shrl
loop
insl
adcl
fs
push
mov
push
sub
jl
movsb
insl
jl
cmp
dec
mov
dec
sub
sbb
cld
mov
icebp
push
mov
testl
adc
adc
mov
jg
std
data16
cmp
xchg
lret
inc
jb
xchg
push
sbb
jge
pop
mov
inc
sub
test
cli
add
pop
mov
xor
popa
pop
into
sbb
out
add
add
jns
jl
sub
mov
nop
stc
pusha
fdivrl
dec
pop
lcall
fisubrl
sti
mov
shrb
jo
mov
inc
shll
shll
inc
test
addr16
pop
push
cwtl
sub
dec
jo
push
sahf
cli
add
in
and
mov
push
test
fsts
push
sti
hlt
jbe
fimuls
insl
cld
ficomps
inc
xchg
and
cltd
repnz
jge
xchg
frstor
out
ficoms
test
dec
shll
jl
negb
lea
mov
aad
jl
lea
loope
pop
sub
callw
stos
insl
mov
and
fimuls
lods
push
xchg
out
fs
push
jne
lock
jg
mov
ret
push
loop
cmp
gs
bound
stc
bound
and
pop
jno
rorl
sub
test
sbb
outsb
and
adc
cwtl
movsb
into
push
into
sbb
cs
lret
arpl
mov
mov
jmp
fisubl
pop
push
sub
xchg
xor
arpl
dec
pop
push
outsb
xchg
popf
inc
sbbb
sbb
enter
dec
clc
xchg
mov
aaa
and
mov
dec
les
int3
adc
sub
out
xchg
dec
mov
outsb
jne
loop
push
mov
ljmp
addr16
in
rolb
outsb
mov
jo,pn
popf
inc
mov
fcoms
ret
out
hlt
pop
nop
mov
dec
or
mov
add
in
aam
pop
into
pop
sbb
mov
jnp
icebp
out
int3
pop
cmp
movb
sti
sbb
inc
xchg
mov
je
ja
std
xor
inc
xor
inc
loopne
dec
ja
and
add
jl
orl
int
mov
jne
roll
mov
xchg
fwait
xor
sub
inc
popa
jge
push
fisubrl
gs
cmp
sub
scas
test
lods
repz
test
sbb
and
loope
jecxz
fimull
jmp
jno
xchg
sbb
dec
mulb
popf
dec
push
pop
push
test
lret
dec
adc
sub
dec
sub
sub
push
xor
push
push
inc
ror
lods
test
xchg
push
xchg
inc
lods
cmp
jns
sub
clc
xchg
adc
jbe
aaa
arpl
cmp
add
mov
mov
inc
in
and
jb
sti
lea
arpl
jl
adc
sbb
pop
jbe
sub
clc
mov
jecxz
xor
add
cmp
cmp
hlt
inc
andb
test
mov
push
enter
pop
xchg
adc
and
add
orl
sti
and
pop
pop
hlt
fidivrl
adc
pop
dec
ljmp
std
push
xor
pop
cmp
xchg
jmp
xor
mov
pusha
ficoml
clc
fdiv
pop
xchg
mov
in
sbb
dec
xor
inc
push
adc
inc
inc
jmp
mov
dec
pop
sub
jge
frstor
addl
arpl
data16
cmp
mov
cld
dec
outsl
test
pop
and
loopne
mov
cld
push
jmp
sub
dec
gs
neg
sbb
add
xor
mov
sub
popa
push
je
adc
ja
je
add
faddl
mov
xchg
sbb
push
xchg
dec
je
mov
mov
mov
aad
jae
add
into
pop
and
jo
push
cmp
or
or
cmp
lea
push
or
xor
sahf
xchg
mov
scas
push
mov
mov
data16
sbb
inc
xchg
mov
das
js
mov
jge
shll
cmpsb
add
ljmp
xor
cmc
popa
add
int3
sbbl
sarb
jne
daa
dec
or
pop
add
adc
dec
mull
lock
test
or
cwtl
call
js
push
lock
sub
inc
loop
sbb
dec
jae
and
movsb
or
or
je
fwait
int3
cmp
bound
jmp
and
fildll
dec
push
mov
adc
fcompl
mov
fcoms
test
cmp
fs
push
daa
pop
sub
xchg
jo
insl
mov
testl
aad
scas
daa
rorl
das
cmp
ss
incb
xor
jge
cmpl
fmul
or
adc
clc
or
inc
rol
imul
fisubl
dec
sub
xor
int
pop
lret
aas
addr16
sub
jbe
arpl
pavgb
inc
nop
repz
and
inc
fidivrl
adc
dec
pop
imul
out
arpl
pop
data16
movsb
outsl
js
call
mov
ss
popf
adc
call
jb
pop
or
lret
mull
mov
mov
das
pop
inc
iret
dec
push
add
lret
mov
enter
mov
add
jnp
loop
mov
movsl
adc
adcl
mov
stos
cmpsb
cld
pop
adc
mov
sbb
cmp
sbb
enter
xor
std
or
sbb
xor
push
into
fcoms
pushf
dec
dec
mov
sbb
dec
bound
jo
ret
pop
cmp
mov
jl
movsb
mov
mov
mov
and
jbe
push
stos
cmp
xchg
pop
push
ret
adc
mov
cmpsb
imul
jbe
sbb
mov
pushf
pushf
sbb
adc
jno
ret
push
add
mov
inc
in
inc
fwait
pop
jg
mov
xchg
adc
cld
add
lcall
jmp
jecxz
add
mov
enter
or
adc
clc
pop
ret
jns
addr16
inc
sbb
in
stos
mov
mov
loopne
in
sub
test
push
sub
add
imul
xchg
pop
sbb
inc
ss
insb
mov
adc
je
xor
jg
fidivl
sarb
insb
dec
pusha
jl
stc
aad
in
mov
adc
xor
aad
mov
add
cmp
stos
in
or
lock
cs
adc
xchg
sub
stos
jmp
into
dec
xchg
xor
push
mov
popf
ljmp
pop
add
fisttps
xor
sub
jo
xor
xchg
mov
sub
cmp
mov
adc
add
mov
mov
inc
rclb
pop
sbb
inc
sub
cmc
addb
out
pusha
pushf
pop
cwtl
dec
ja
xchg
mov
jl
mov
std
leave
movsl
pop
es
pop
test
xor
jae
imul
scas
adc
dec
pop
lret
fists
movb
and
adc
int
inc
cmp
inc
mov
push
adc
cmpsl
shrb
lods
fwait
and
mov
cmp
cltd
mov
mov
adc
ja
repnz
ljmp
call
and
sub
push
push
sub
xchg
cs
test
adc
xchg
lcall
clc
insl
xchg
sub
fcmovnb
and
ljmp
pop
xlat
add
fwait
xchg
dec
adc
test
ds
inc
cwtl
cmp
daa
push
mov
xor
repnz
adc
mov
mov
add
lret
mov
jmp
jno
jae
mov
inc
es
lret
or
ret
push
es
out
jg
scas
pop
xor
lds
sbb
mov
xor
mov
repnz
sbb
sbb
jae
ret
push
inc
ljmp
cmp
pop
lret
mov
mov
stos
insb
add
cmc
outsb
pop
push
mov
xchg
adcb
jp
xchg
ret
lahf
jecxz
or
push
fisubs
or
aaa
loop
ds
dec
scas
enter
xchg
stos
scas
fxch
lods
fwait
push
sbb
jle
cmp
and
jae
icebp
insb
fistpl
adc
dec
add
lds
sub
out
addr16
test
sbb
leave
mov
shll
dec
cld
push
ss
sbb
movsl
shr
pusha
ret
lcall
aam
mov
lahf
aas
pushl
pop
lahf
jb
jp
fucomp
mov
adc
push
push
movb
push
pop
enter
push
fstl
scas
ss
dec
mov
and
int3
mov
leave
inc
dec
fnstsw
cmp
sub
inc
cmp
lret
pop
sbb
cmp
cmp
aaa
dec
dec
adc
aaa
cmp
jge
ret
dec
out
sub
sbb
push
test
pop
adc
cmp
xchg
dec
cmp
mov
inc
adc
jnp
sbb
andl
ja
jle
and
fisubl
icebp
imul
xchg
push
dec
sbb
cmpsl
jb
out
sub
jp
test
cli
and
das
jecxz
mov
pusha
aad
out
insl
push
dec
inc
rcll
xchg
sbb
arpl
or
test
ffree
sahf
and
mov
mov
outsl
mov
call
jns
adcl
stc
dec
dec
sarl
je
stos
pushf
jb
pop
addr16
rol
js
inc
outsl
hlt
cld
mov
mov
jecxz
dec
aaa
aad
imul
loop
pop
and
push
hlt
dec
aaa
and
jnp
lret
mov
mov
and
test
sub
pop
pop
iret
xchg
cltd
clc
adc
jo
gs
pop
ret
out
inc
test
cwtl
mov
inc
adc
shlb
jbe
daa
sarb
jecxz
jl
sub
int3
hlt
jmp
cmc
push
fstl
push
les
in
xchg
xlat
lcall
int3
arpl
sbb
mov
cmp
aas
xchg
jno
decl
loope
les
daa
pushf
inc
rorb
mov
in
shlb
dec
xor
dec
jne
cmp
in
in
fbld
push
xchg
shr
adc
call
shlb
jns
cld
insb
ja
pop
mov
cmpsl
add
stos
shlb
test
sub
fmulp
and
call
scas
imul
daa
outsl
stc
add
mov
pop
int
add
rolb
fwait
das
rcr
jae
lcall
jge
pop
call
roll
cmpsl
xor
ljmp
pop
div
sbb
movsl
addr16
rcrl
cmp
xchg
xchg
sbb
mov
mov
add
mov
stos
je
scas
imul
pop
cld
sub
aam
shll
test
cmp
adc
mov
daa
rorl
jge
mov
test
scas
lods
addb
sbb
out
and
mov
stos
xchg
cmc
add
mov
adc
movsb
ret
clc
jmp
push
insl
adc
xchg
adc
arpl
jp
pop
lret
dec
adc
and
pop
movsl
jae
rcl
mov
call
cmp
pop
icebp
jmp
push
movsl
add
pop
orl
bound
inc
jmp
xchg
mov
enter
movsb
jo
xor
daa
insb
push
sbb
pop
jmp
dec
push
xchg
jl
test
xor
stc
and
or
iret
ljmp
push
dec
jge
jns
int
rorl
dec
lea
ljmp
xor
jb
jnp
jle
jns
cmpsl
push
fsubp
jecxz
decl
inc
test
scas
mov
dec
sbb
add
aas
bound
inc
inc
cld
sbb
dec
iret
cmpsl
mov
xchg
pop
cmp
sbb
cwtl
out
xchg
add
mov
fnstcw
or
lahf
daa
dec
sub
aaa
add
ljmp
cmp
mov
xor
pusha
xor
mov
fdivr
sbb
xor
push
mov
cli
lahf
test
xchg
adc
mov
push
sbb
test
cmc
mov
movsl
repz
xor
jae
jnp
jbe
out
xchg
ror
xlat
aaa
sub
jle
stos
sbb
inc
dec
push
sbb
add
dec
or
mov
pushf
dec
inc
jae
repnz
push
call
adc
incl
push
jle
pop
out
movsl
add
daa
adc
enter
xchg
stc
mov
dec
iret
dec
enter
test
lahf
subb
and
in
inc
push
inc
mov
aad
mov
popf
pop
mov
fimull
xor
jg
lcall
and
loop
jae
out
sbb
xor
das
mov
aaa
data16
shrl
jbe
daa
and
add
fcoms
cmc
pop
arpl
cmpsl
xor
dec
push
dec
xchg
shlb
bndstx
mov
ljmp
xor
lock
rorl
push
mov
decl
stos
push
inc
sbb
sbb
push
xchg
pop
pop
je
push
jnp
cmp
cmpsl
xor
mov
icebp
pop
mov
xor
orb
loope
rol
inc
fistpll
mov
cmp
out
push
ss
push
fcoml
lock
in
push
jae
inc
push
mov
adc
mov
clc
cmp
push
imul
cld
cmc
aaa
cs
mov
or
les
and
js
and
out
push
xor
mov
pop
jne
repnz
fcompl
adc
test
adc
cmc
in
mov
or
mov
mov
jne
xchg
fdivrs
and
mov
out
ret
scas
jle
subb
jns
push
int
push
mov
cmc
cmpsb
add
add
mov
sub
jnp
arpl
xchg
inc
scas
jp
adc
xchg
adc
sbb
dec
mov
xchg
scas
repz
sub
mov
imul
fwait
shrb
mov
xchg
sbb
sti
inc
mov
bound
pusha
out
repnz
ds
push
jo
dec
shll
fdivs
cltd
mull
cmp
add
inc
or
cmp
add
mov
and
decb
test
lds
sbb
incl
sbbl
test
movsl
xchg
in
jb
sbb
xlat
stc
fdivr
jnp
sbb
and
sbb
cmp
inc
xchg
xor
pop
xchg
in
movsl
out
mov
sbb
bound
mov
jnp
xchg
testl
or
inc
sbb
fsubp
jge
sarl
push
fwait
in
jns
loope
lret
cld
sbb
movsb
int
xor
mov
outsl
jecxz,pt
call
repz
scas
mov
inc
arpl
into
jp
mov
mov
or
rcrb
dec
es
sbbl
daa
lret
stos
loopnew
outsl
sub
add
adc
cmpsb
mov
in
call
xchg
test
inc
aaa
fmulp
pop
repnz
sbb
das
jge
jmp
xor
mov
fst
pop
jae
mov
and
hlt
mov
xor
in
cmp
out
pop
sbb
mov
aaa
mov
dec
mov
imul
nop
btr
fcmovnb
sub
test
sbb
stc
ss
mov
int3
subl
jnp
arpl
lcall
je
fnstcw
mov
and
fildl
pop
fstpl
lcall
xchg
lret
out
mov
jge
imull
dec
mov
xor
or
rcll
and
ja
pop
pop
and
xor
ds
jle
cwtl
int3
fwait
popf
dec
pop
mov
jp
insb
add
add
jbe
sub
inc
jecxz
push
ret
stos
int3
push
test
mov
addr16
inc
int
mov
ljmp
lcall
mov
adc
pop
jae
jp
adc
cmc
adc
out
aam
lock
xchg
cld
clc
add
pop
xchg
add
data16
std
jg
bound
mov
outsb
mov
or
mov
push
and
push
mov
loope
inc
addb
rclb
adcb
int
xor
adc
or
jecxz
or
inc
push
outsl
mov
xor
mov
xchg
fstps
xor
pop
pop
sub
mov
outsb
adc
adc
jle
push
mov
shl
mov
fistps
sbb
and
decb
fnstsw
rcll
fbstp
jecxz
push
jmp
sub
push
addr16
imulb
and
loop
jl
rorb
shlb
and
jecxz,pn
dec
inc
add
push
movsl
xor
out
dec
and
shr
sbbb
sbb
adc
mov
sub
fidivs
shll
ret
shlb
iret
loop
pop
ret
fdivrl
inc
fnstcw
cmc
xchg
cld
add
int3
out
fstpt
aas
mov
jl
cld
sti
outsb
dec
lahf
mov
out
cmp
sti
pushf
mov
or
pop
shlb
into
sub
or
push
js
out
aas
sub
lods
mov
pop
sub
push
pop
xor
lcall
mov
aad
js
rcrb
or
sbb
gs
adc
xlat
xchg
fcoms
call
cmp
stc
js
add
push
decl
out
jne
or
fidivrl
dec
xchg
mov
clc
fimuls
sbb
add
mov
sarl
jg
dec
orb
adc
ret
jmp
lahf
jb
sub
push
sub
pop
push
in
lods
fs
movsb
mov
xor
es
xchg
xchg
clc
jo
sub
fs
mov
scas
xor
or
or
repnz
dec
cli
jbe
cmp
xchg
mov
test
daa
arpl
mov
inc
iret
sbb
cltd
add
pop
jge
jne
dec
faddl
pop
xor
and
dec
aaa
xchg
imul
out
shll
jno
pushf
adc
mov
dec
in
xchg
sti
dec
pop
xor
adc
shll
lret
inc
aas
mov
into
jnp
mov
cmp
lods
xor
mov
mov
xchg
ja
xchg
xor
cld
or
aam
jae
into
add
out
mov
iret
or
in
imul
std
test
xor
mov
std
jp
jmp
jbe
xor
ljmp
lcall
test
pop
mov
aam
pop
fisubl
pop
icebp
fstl
xchg
fidivrs
inc
leave
mov
jp
dec
mov
cmp
int3
or
dec
jmp
movsb
icebp
cmp
outsb
in
sbbb
xor
sub
shl
icebp
xchg
fcmovnbe
das
inc
popf
xchg
addr16
xchg
test
pop
test
lods
data16
pop
in
xor
cmp
fsubrl
push
rcrb
fisttpl
pop
ljmp
loopne
mov
mov
and
push
cmp
xor
and
cld
sbb
jl
repz
mov
lcall
or
cmp
cli
aam
pop
mov
sbb
add
xchg
push
pushf
dec
out
pop
inc
push
scas
js
push
push
add
or
cmpsb
rolb
in
inc
mov
pop
xchg
mov
in
cmp
xlat
jle
data16
orl
lods
test
fisttps
lret
nop
pavgb
jmp
cltd
nop
push
rorb
pusha
ret
or
stos
sbb
leave
push
lods
daa
or
mov
loope
mov
nop
ret
xchg
lods
sub
test
push
push
sbb
lods
xorl
pop
and
adc
addr16
jo
int3
adc
jmp
nop
fsubp
pop
nop
add
out
rol
push
sahf
pop
les
jno
cmp
icebp
mov
movsb
cmp
aaa
js
cmpb
and
test
xchg
outsl
inc
push
sbb
push
push
xor
lea
jl
pusha
xchg
mov
sub
outsl
jne
mov
xor
mov
pop
pop
inc
sbb
mov
xchg
push
jne
scas
and
repnz
adc
jl
ficomps
bound
loopne
sub
cmp
push
sbb
and
jnp
stos
and
jo
cmp
xor
mov
dec
jg
add
add
fiadds
mov
add
dec
enter
out
dec
scas
xchg
fwait
mov
mov
shrl
or
hlt
xchg
popf
jne
lahf
icebp
stos
hlt
xchg
mov
lret
sbbb
or
in
push
sahf
fldenv
test
mov
lcall
adc
push
xchg
mov
mov
shl
loope
mov
jb
mov
rclb
ljmp
mov
dec
mov
jecxz
cmp
aad
xor
out
jbe
inc
outsl
mov
sbb
fwait
dec
fnstenv
sub
aaa
movsl
cmc
mov
je
mov
loope
adc
addr16
xlat
rcll
call
pop
out
xchg
pop
fmuls
push
scas
pop
mov
xor
popf
jge
bndldx
fisubrl
mov
push
imul
mov
addr16
mov
popa
and
adc
outsb
out
lahf
dec
or
fstps
jae
xor
lret
inc
mov
cmp
mov
movsb
pop
stc
mov
inc
popa
adc
sub
jns
jmp
fldt
dec
adc
test
lret
in
jle
insl
inc
shlb
ds
cmp
loop
lock
dec
add
dec
sbb
mov
jecxz
lock
dec
or
ret
lea
or
inc
cmp
or
cld
nop
push
push
cli
xor
dec
xchg
push
xor
sbb
mov
cmp
mov
and
xorb
jl
dec
mov
in
js,pn
jne
filds
mov
lahf
jg
andb
mov
fidivrl
xchg
cmc
je
ljmp
aam
arpl
clc
movsl
mov
push
pop
and
int3
push
cwtl
cmp
push
xchg
add
fisttps
mov
adc
jl
adc
cmpb
mov
cmp
pop
and
fmull
mov
mov
sbb
scas
ss
mov
sbb
addr16
arpl
addr16
add
dec
jbe
cmp
and
mov
dec
jge
pop
int
jo
xor
cmp
lcall
jp
dec
mov
pop
ret
andl
pop
incb
add
mov
pusha
cmp
lret
sahf
inc
fwait
sub
popf
jecxz
popf
dec
xchg
mov
das
sarb
les
insb
fwait
movsb
xchg
or
pop
xor
aaa
aaa
xor
mov
jl
mov
or
inc
dec
inc
adc
dec
popf
jg
in
popf
jbe
lea
or
imul
popa
mov
xor
and
mov
sub
fistl
dec
inc
xchg
push
mov
adc
cmpsl
sub
dec
sub
fwait
dec
mov
adc
push
push
and
rcr
pop
mov
jb
lds
or
ja
loope
in
inc
add
lahf
je
inc
iret
fnstcw
sub
loope
cmp
fucom
clc
out
jp
mov
bound
popa
fnstsw
inc
in
notl
fst
dec
cmp
mov
or
daa
test
adc
or
int3
jne
dec
add
xchg
sbb
or
jbe
sbb
mov
sbb
rolb
push
mov
imul
loopne
jle
fidivrs
rcll
inc
fdivs
std
or
loop
push
mov
hlt
pushf
push
in
or
xor
mov
rorb
and
stos
insl
imul
and
stos
int3
push
mov
sub
and
test
xorl
jne
cmc
pop
jno
dec
mov
cs
cmpsl
fs
fnstcw
sbb
and
lea
pop
xor
mov
dec
adc
jge
xor
mov
insl
cmpsl
sbb
mov
stos
movsb
mov
maskmovq
idivl
adc
add
adc
in
test
dec
out
cmp
cwtl
dec
xor
fsubs
mov
sti
add
pop
fwait
jge
hlt
popa
push
lret
xchg
xor
stos
lret
aas
leave
inc
mov
inc
sub
fcmovnb
cmp
sub
cwtl
dec
and
jbe
adc
sbb
test
js
adc
cli
ds
dec
jns
les
jbe
js
repnz
test
pop
repnz
push
dec
add
lock
push
xor
nop
call
push
shlb
inc
loop
add
cmp
lret
or
lret
pop
stos
sti
mul
sahf
xchg
test
movsb
sahf
xchg
rol
das
pop
mov
fcomp
orl
iret
add
mov
or
pop
bound
loop
ret
adc
sti
and
fbld
and
aad
dec
insb
repz
push
frstpm(287
into
jo
sbb
cltd
fnsave
in
jl
xor
jo
mov
leave
out
pop
lea
out
and
mov
lahf
push
ss
aaa
sub
arpl
push
ljmp
xchg
imull
push
inc
jbe
dec
mov
jbe
xlat
pop
js
mov
mov
pushf
je
clc
add
mov
sub
xchg
sub
inc
fucomip
push
popf
cmp
pop
mov
push
add
out
lea
and
mov
xor
das
sbb
mov
fwait
xorl
push
mov
in
fs
call
jecxz
inc
repnz
testb
jo
mov
es
sbb
pop
mov
push
cmpsb
clc
rolb
popf
xlat
xorl
inc
jecxz
mov
in
sub
xor
and
or
or
in
movl
mov
and
scas
fcompl
dec
mov
mov
fcmovne
sbb
out
icebp
xchg
push
pop
ss
int3
daa
inc
mov
sub
stos
fsubrl
sbb
mov
mov
scas
sub
pop
xchg
cld
sbb
lods
adc
and
hlt
notb
pop
and
cs
adc
mov
mov
es
repz
fs
mov
mov
inc
test
jo
insb
cmc
inc
clc
jno
sbb
push
xchg
add
xlat
inc
repz
lret
xchg
and
cltd
xor
icebp
test
mov
imul
push
fs
sbb
in
stc
ret
sub
in
out
jge
pop
and
jmp
mov
inc
je
fstpt
fnstenv
aam
imul
ficomps
and
clc
inc
mov
out
push
fdivr
fs
pop
inc
cltd
xchg
sti
jne
mov
mov
add
inc
sbb
lods
je
cs
sub
lds
lods
clc
repnz
movsl
mov
mov
add
fbstp
and
js
xor
dec
and
jge
loop
mov
inc
jnp
xchg
popa
mov
lret
in
jl
push
mov
stos
sbb
test
call
pushf
and
xchg
sub
jae
lcall
leave
adc
cltd
into
or
mov
sbb
adc
pop
data16
xchg
mov
mulb
mov
daa
imul
les
rorl
pop
adc
repz
fimull
dec
cld
xor
shrb
mov
add
out
inc
pop
pop
std
mov
les
mov
xorb
clc
in
pushf
enter
shl
dec
cmp
pop
cmp
cli
dec
or
pusha
dec
push
cld
scas
mov
incl
addr16
jl
jl
mov
movsb
insb
and
cwtl
rcrb
mov
or
ljmp
mov
push
push
test
push
shll
outsb
mov
or
jmp
cmp
aad
adc
sbb
and
sbb
push
jp
xlat
or
repz
lret
pop
arpl
push
adc
sub
test
scas
mov
fwait
ljmp
repz
or
rolb
ret
arpl
ret
cld
xchg
inc
scas
push
dec
jns
dec
test
insb
mov
mov
add
cmp
mov
lds
out
imul
jbe
push
push
inc
cmp
mov
mov
dec
xchg
fdiv
iret
out
fdivl
mov
mov
sub
push
pop
minps
sub
jecxz
push
clc
lods
add
add
arpl
mov
pop
push
push
int3
pop
adc
and
mov
std
pop
lods
data16
pop
cmp
cmp
mov
xchg
or
push
sbb
fnstsw
test
adc
fcoml
scas
popa
push
fldenv
add
pop
pop
sub
and
mov
mov
ds
sub
repnz
notl
dec
pop
pusha
nop
test
and
mov
cs
mov
jl
xorb
leave
mov
inc
mov
rorl
sarb
je
gs
loop
mov
insl
add
insb
fcoml
xorb
and
mov
add
mov
subb
dec
jl
out
lea
ret
mov
jg
mov
out
push
addr16
dec
iret
std
mov
jnp
fistpll
out
mov
inc
es
xchg
int
enter
xor
sbb
dec
push
es
xchg
cwtl
bndcn
xlat
mov
lods
cwtl
testl
movsl
adc
jne
int3
pop
pushf
sbbl
lds
stos
iret
pmulhuw
pop
inc
ret
fcomi
inc
das
jae
fs
mov
cli
mov
sub
xlat
sbb
jge
pusha
mov
call
mov
sbb
scas
clc
ficoml
aam
arpl
rclb
adc
mov
push
push
jle
lds
fisttps
push
and
add
shll
mov
or
fwait
jno
add
out
aas
mov
ret
ds
push
jecxz
enter
enter
push
or
cmp
sbb
shll
in
cmp
adc
jae
inc
pop
and
outsb
xor
jno
aas
push
xor
je
fs
aas
sti
sqrtps
insl
pop
xor
ss
lods
fdivrs
adc
ret
push
sbb
subb
inc
pop
inc
fidivrs
test
test
lcall
pop
arpl
cmp
movsl
sub
mov
push
mov
mov
sbb
add
push
aam
data16
mov
ds
mov
popa
rcr
xchg
sbbb
call
sbb
clc
stos
cs
xor
lods
or
in
jp
fs
cli
pop
mov
jno
arpl
out
mov
sbb
inc
mov
jno
sahf
sub
lret
lahf
xor
and
mov
dec
lods
fidivrs
es
int3
repz
test
stc
fisubrs
xlat
test
or
jo
xchg
repnz
mov
icebp
cmp
sub
pusha
mov
sub
add
fmull
jae
call
dec
aam
sbb
xor
mov
sti
or
leave
fimull
push
aad
mov
test
fcoml
inc
add
mov
fistpll
inc
outsl
jecxz
inc
push
popf
pusha
sub
and
sbb
dec
xlat
sbb
mov
adc
movsl
add
push
ret
daa
xchg
sahf
sub
pop
shll
mov
jecxz
sti
out
lret
cmpsl
cmp
jecxz
daa
pop
cmp
xchg
mov
inc
aad
orl
dec
out
cmp
into
jb
adc
mov
sbb
sbb
stos
fst
mov
mov
repz
lahf
sub
xorl
outsb
sub
xchg
fistps
pop
loop
mov
rcrb
inc
push
sbb
scas
xorl
mov
ja
mov
sbb
pop
rcll
icebp
aas
subb
mov
mov
sbb
andb
frstor
pop
sbb
aas
lret
push
push
cmpsl
movsl
mov
stos
fdivrs
jge
mov
sbb
movl
push
lock
add
jmp
xor
cmp
outsb
cmp
pop
xor
fiaddl
out
mov
insb
adc
fsubrs
es
add
cmp
cmp
or
dec
mov
sub
jns
cwtl
je
shl
inc
bound
addr16
call
mov
in
and
adc
mov
test
divb
dec
cwtl
lea
push
cld
mov
sub
add
out
bound
nop
js
jne
test
and
mov
push
lock
add
mov
addr16
cmp
cmp
xor
outsl
pop
in
icebp
mov
mov
les
fs
lea
jbe
cli
loopne
jno
sub
pop
mov
aas
ljmp
pushf
les
sub
movsb
jae
cltd
and
add
sbb
mov
xor
inc
adc
jno
jb,pn
mov
xchg
int3
es
cli
ss
insl
lods
pop
in
and
add
dec
inc
xchg
mov
aas
lds
ret
lods
and
pop
mov
gs
mov
and
mov
addb
lock
and
out
sub
sub
in
call
add
outsb
imul
dec
jl
xchg
rolb
loope
push
lahf
cmp
adc
push
jo
lock
into
or
jp
mov
test
out
lahf
test
jbe
mov
jmp
xchg
adc
cmpsl
aaa
add
xor
dec
cmp
push
cmp
pop
push
and
add
adc
insl
lret
sub
dec
stos
push
lds
lret
rolb
push
add
insl
mov
ret
les
lahf
out
lods
lods
push
mov
loopne
jb
pop
dec
or
int
clc
loope
jmp
clc
inc
pop
mov
fldt
push
lods
jge
in
movsl
and
jl
sbb
mov
fsubs
or
xchg
mov
adc
andb
dec
fldt
xchg
js
dec
daa
sub
add
mov
push
rolb
xor
pop
shlb
xchg
sbb
mov
ja
arpl
push
push
shrl
xchg
mov
push
and
xchg
lock
ja
in
add
cmp
mov
fcoms
movsb
leave
les
cmp
fmuls
sub
push
jne
dec
adc
or
inc
jne
aas
mov
adc
mov
daa
pop
jp
push
test
es
clc
cmp
out
pop
ret
inc
or
repnz
xchg
push
push
mov
add
mov
sub
fdivrl
aam
movsl
rcl
and
cmp
test
xlat
cmc
loope
lea
out
mov
adc
psubb
mov
fcmovnb
flds
add
vmread
leave
jae
xchg
test
int
jns
adc
xor
inc
add
dec
in
xor
and
mov
cltd
and
cmp
mov
leave
mov
cmpsb
fs
or
or
ret
cld
pop
push
outsl
je
bndstx
test
adc
mov
push
cmp
xor
push
mov
int
pusha
adc
addb
lret
pop
push
dec
shrl
mov
jne
xor
repz
lods
pop
les
lods
lahf
mov
pop
adcb
push
das
movsl
dec
pop
int
les
sub
mov
cmpsl
sahf
repz
adc
push
xchg
gs
test
sbb
sub
pop
mov
mov
loope
out
cmc
mov
outsl
push
cmc
dec
pop
inc
filds
icebp
iret
sbb
out
rol
and
adc
xchg
mov
jmp
jmp
lds
fisttpll
lcall
cmc
mov
fcomi
lea
movsl
test
hlt
sti
jmp
loopne
or
and
jb
out
or
lret
faddl
inc
inc
test
sbb
imul
pop
cmp
pop
out
add
sbb
stos
add
jl
arpl
jae
mov
mov
sub
mov
mov
out
xor
hlt
ja
push
sub
mov
out
sub
or
out
andl
jne
mov
ja
scas
cld
xchg
cmc
push
inc
ds
test
xchg
add
aaa
dec
jno
inc
mov
jl
sti
add
sub
and
data16
sub
pusha
loop
jge
fnsave
cmp
lods
push
mov
adc
sti
gs
push
fldt
cmpsb
pop
sbb
xor
adc
stc
test
sahf
in
sbb
sbb
jnp
xor
add
jmp
std
jmp
xlat
das
adc
fimuls
push
adc
inc
bound
hlt
adc
pop
out
flds
bound
xchg
cld
fcomp
leave
mov
into
mov
iret
lock
mov
cmp
xlat
xchg
fdivl
add
mov
xor
dec
popa
mov
movl
aas
fs
xor
push
or
orps
sub
push
cmp
arpl
faddl
cmp
test
mov
push
je
fisubrl
cmp
aam
popa
jecxz
xor
in
jns
cmpsl
jnp
and
call
stc
in
pusha
nop
xchg
jp
push
push
repnz
imul
mov
imul
mov
test
cmp
ror
lods
mov
test
int
jge
loop
mov
popf
outsl
dec
push
daa
roll
push
stos
jmp
dec
push
xor
or
xchg
das
mov
pusha
jbe
popa
and
iret
cwtl
dec
nop
test
mov
fcom
out
js
mov
out
or
orl
stc
jae
ret
and
push
lret
jae
cld
sbb
in
and
enter
es
jbe
dec
ss
movsb
or
jno
pop
jbe
pop
scas
into
out
pop
test
addl
cli
std
int
mov
mov
adc
nop
repz
mov
sub
pop
lods
inc
inc
inc
dec
mov
sub
sbb
or
adc
jnp
jo
icebp
xor
pusha
iret
int
adc
sbb
push
enter
incl
sub
xchg
pusha
lret
push
inc
and
stc
mulb
test
decl
jno
pop
jne
adc
xchg
mov
mov
pop
push
xor
fcmovbe
inc
jbe
xchg
ficompl
jo
or
pop
shrl
test
and
lahf
mov
addr16
xchg
push
jl
push
outsl
and
and
inc
adc
cmp
cmp
std
cmp
repnz
mov
sbb
adcb
js
les
ficomps
hlt
popf
mov
inc
arpl
xchg
inc
daa
jecxz
or
test
cmc
je
aas
into
jns
bswap
sbb
dec
sbb
mov
scas
add
add
lock
add
push
cmp
sub
sbb
insl
sub
push
test
mov
push
add
imul
cmpl
sahf
adc
add
xchg
jp
or
inc
mov
jmp
xchg
xor
and
movsl
les
xor
jecxz
addl
inc
xorl
repz
mov
add
ret
retw
sbb
push
cld
fwait
scas
mov
popf
pop
stos
mov
sbb
in
or
pop
ja
cmpsl
and
arpl
je
repnz
mov
pop
push
pop
mov
shll
sub
es
fbstp
sbb
inc
clc
push
dec
mov
cltd
pusha
into
ret
xchg
leave
mov
cmp
or
pusha
xor
inc
sbb
fnstsw
cmp
insb
int3
inc
jl
mov
adc
and
es
mov
jp
and
cmp
in
mov
test
fnstcw
push
mov
fadds
outsl
mov
int3
into
mov
xchg
and
push
and
jmp
addr16
sub
adc
cmp
lret
mov
cld
ds
pop
inc
or
lcall
mov
adc
rcrl
ret
stos
cmc
mov
jecxz
rclb
mov
adc
sub
mov
sti
lahf
pushf
inc
jecxz
or
mov
xor
fcomip
ss
xchg
mul
popa
inc
mov
mov
imul
ret
cmpsl
bound
addb
mov
test
shlb
adc
ds
orb
jmp
test
or
adc
add
adc
pop
lahf
adc
movsb
push
xchg
test
mov
mov
comiss
xorb
or
or
mov
inc
push
ss
cmp
jo
pop
shlb
jp
fbld
adc
inc
inc
cmp
jg
lods
shlb
adc
loopne
dec
lock
jmp
repz
stc
mov
jne
pusha
mov
mov
imul
or
mov
or
cmp
outsl
aad
cs
stc
aad
leave
mov
inc
jne
test
sti
mov
pushf
sub
aaa
imul
push
sub
lods
or
wrmsr
dec
sub
insl
xor
mov
mov
sub
int
iret
add
mov
jle
and
idivl
movsb
sub
mov
imul
mov
out
mov
test
daa
stos
test
push
mov
mov
mov
mov
sbb
pop
adc
mov
outsl
scas
push
dec
bound
cwtl
es
enter
aas
lcall
ds
mov
xacquire
jb
jmp
es
pushf
in
push
loopne
mov
pop
lea
xchg
clc
push
mov
push
movb
cmpsb
stos
fdivrl
test
rcrl
adc
test
mov
adcb
mov
add
out
shlb
mov
rep
popa
lods
jl
pop
ljmp
imul
pop
jae
clc
lcall
xchg
jne
in
add
sti
jp
ljmp
inc
inc
aad
out
mov
xlat
outsl
pusha
lcall
fsubrs
mov
mov
sar
enter
jg
mov
jmp
jo
aad
imul
xor
imul
cmpsb
jmp
mov
pop
xor
je
mov
mov
xchg
call
add
jmp
jae
ret
je
shrb
jnp
data16
or
xor
lods
inc
mov
xchg
mov
mov
es
lods
xor
into
mov
push
std
jns
jbe
ljmp
adc
inc
fdivrs
sub
aam
aad
imul
mov
xor
dec
xchg
fisubl
pop
popa
inc
adc
sbb
xor
xorw
in
add
sub
push
mov
test
mov
pop
clc
popa
iret
addb
xor
shlb
adc
inc
jbe
and
xor
push
stos
xor
into
adc
int
addb
lahf
out
repnz
cli
pop
rcrl
jge
push
sbb
mov
jle
lock
es
test
out
xchg
mov
jb
mov
or
inc
cmp
out
out
mov
nop
xchg
jmp
ficoml
inc
push
dec
lock
call
cs
arpl
push
inc
pop
cwtl
shrb
rep
insl
pop
out
popf
iret
enter
lret
xchg
js
inc
xchg
les
jecxz
sar
aas
mov
mov
add
dec
inc
in
mov
leave
mov
xchg
hlt
pop
mov
in
xor
or
jge
push
orl
xchg
mov
rcrb
insb
pop
insl
ss
xorb
lods
inc
jg
call
cmc
into
ret
fisubs
out
jno
push
cmpsb
xor
and
add
fisubrl
push
jecxz
repnz
sub
lods
push
data16
xchg
ljmp
sub
das
lods
ja
bound
ret
pop
out
mov
repz
or
mov
adc
and
jle
cmc
push
testb
mov
inc
jge
dec
push
nop
xor
add
mov
inc
mov
ret
fs
cmp
jb
ds
outsl
icebp
je
adc
imul
push
loop
loopne
cmpl
xlat
sbb
lods
pushf
xchg
sub
mov
fdivp
push
fnstenv
mov
repz
dec
xorb
inc
pop
mov
xlat
cs
outsb
loopne
stos
and
mov
repnz
lock
add
aaa
cmp
subl
xor
into
push
dec
lds
or
fiaddl
inc
inc
insl
mov
pop
sub
scas
out
roll
mov
add
dec
push
mov
push
lock
inc
cmp
es
jl
lods
mov
fstpt
movsl
mov
cld
stos
mov
scas
mov
frstor
adc
jns
mov
mov
popa
and
popa
mov
jae
cmc
dec
sbb
pop
int
scas
mov
push
pop
cwtl
fdiv
jmp
pop
mov
pop
jecxz
sub
inc
scas
xchg
fistl
mov
dec
fs
out
lret
xchg
push
sbb
cmpsb
aam
pop
aaa
pop
fstpt
mov
jae
add
push
cmp
insb
sbb
pop
sbb
fdivrp
test
xor
cmc
lahf
inc
and
addr16
sub
pop
inc
outsb
scas
xchg
mov
cmp
shl
push
in
push
cmpsl
pop
dec
jae
popa
adc
jg
cmc
sub
inc
jp
add
mov
jp
cmovns
loopne
out
not
mov
andb
test
jae
sub
xchg
mov
out
mov
dec
pop
fcoml
add
mov
lret
in
je
orb
mov
fisttps
ss
add
jl
test
aam
cmp
push
adc
sbb
mov
jmp
pop
jmp
sub
add
fwait
jmp
shl
movsl
sub
repz
sub
nop
frstor
addr16
dec
aas
shlb
cmc
push
rorb
adc
adc
xchg
ds
mov
or
dec
sbb
add
les
mov
ss
into
in
lcall
pop
push
mov
lea
push
scas
int3
neg
lret
test
js
inc
adc
lods
pop
cmp
sub
ret
pop
fwait
jno
int
frstor
js
in
or
xor
pop
dec
inc
pop
fidivs
inc
pop
stc
nop
mov
out
pushf
ret
into
dec
pop
adc
sahf
xor
or
and
dec
lcall
enter
pop
mov
adc
fs
mov
add
out
idivb
adc
out
cmp
mov
jl
xor
sub
or
lret
nop
pop
xor
fwait
arpl
mul
lahf
dec
cld
test
scas
into
stc
sbb
jl
std
in
ds
xchg
sub
out
mov
jnp
push
pushl
pop
fisttps
test
pop
add
pop
stos
xor
inc
call
jbe
arpl
out
ret
pop
cmp
mov
inc
sbb
or
stc
cmp
add
movsl
push
xchg
adc
pop
mov
je
push
fnstcw
test
int3
lea
add
insb
sub
add
and
repz
outsl
or
or
ljmp
adc
mov
jge
sarb
pop
fcoml
xor
mov
xchg
dec
jo
cmc
and
out
mov
in
pop
dec
dec
mov
js
dec
lcall
pop
add
gs
fisttpl
sbb
dec
sbb
and
add
es
shlb
mov
mov
mov
cmp
arpl
notb
sbb
popa
sub
sbb
push
mov
push
leave
mov
push
mov
xor
les
mov
sub
dec
aam
xor
cmpsb
xchg
stos
sub
idiv
inc
inc
stos
pop
or
insl
sarl
daa
cwtl
xchg
adc
daa
lcall
add
mov
mov
xchg
pop
movsl
sbb
jno
pop
test
div
insl
dec
pop
dec
mov
jno
fisubrs
pop
ljmp
and
imul
pop
mov
cmpsb
push
dec
push
shll
mov
push
movsb
inc
jo
xchg
clc
in
gs
fidivs
xchg
es
ljmp
ljmp
sarb
ret
decl
hlt
outsb
es
jmp
adcb
inc
mov
sbb
repz
adc
sahf
sub
pop
and
pushf
xchg
xchg
in
repnz
testl
ds
push
call
es
mov
pop
mov
lds
push
repnz
xchg
cmp
add
jmp
inc
ret
dec
mov
mov
mov
jecxz
fbld
scas
int
out
daa
push
adc
xor
into
into
xchg
mov
outsl
enter
jl
gs
std
mov
push
int3
addr16
dec
push
pop
push
loop
mov
mull
mov
pusha
lret
cmp
and
sub
or
xlat
mov
scas
cmp
cmp
cmp
mov
xor
push
shlb
or
xor
or
xchg
sbb
adc
sbb
lret
mov
sub
jbe
out
mov
rorl
popf
inc
push
pop
mov
sti
cmpsb
cmpsl
mov
cmp
and
xchg
scas
sbb
outsl
call
xchg
sub
add
inc
test
out
aad
cmpsb
out
and
pushf
add
in
ret
nop
mov
lods
stos
pop
lds
pop
push
arpl
mov
ds
inc
inc
xchg
inc
xchg
enter
cmp
out
and
add
data16
fldenv
adc
push
addl
inc
addr16
inc
scas
mov
ja
idivb
mov
sub
out
hlt
push
jle
sbb
or
xorl
loopne
mov
lret
mov
mov
xchg
jle
pop
in
jp
mov
xor
repnz
test
push
out
xchg
movsl
jmp
out
sbb
icebp
fs
cmp
ror
sub
mov
std
jp
das
inc
lds
aam
cmpsb
and
mov
pop
lods
ficomps
pop
inc
into
xchg
mov
aam
mov
dec
sub
mov
pop
jbe
dec
cmp
or
dec
movsb
pop
repnz
fcomps
repz
adc
cmp
or
inc
ja
xchg
mov
and
sub
jmp
mov
ret
mov
adc
mov
scas
movb
push
and
stc
mov
jmp
out
into
and
sbb
mov
andb
outsb
fstps
add
rcrb
call
stos
mov
jge
push
mov
sahf
fdivrs
jno
out
mov
insl
je
xchg
push
inc
imul
push
pop
inc
idivl
or
cltd
popa
cmp
fs
xchg
aam
pop
enter
aaa
fisttps
mov
pop
inc
js
call
daa
mov
insb
pusha
lds
js
hlt
push
loop
sarl
mov
ds
dec
ret
outsb
sbb
mov
jecxz
cmp
sub
les
xchg
shl
jge
sarb
ret
jmp
test
mov
mov
dec
adc
jp
xchg
inc
jp
xlat
add
lret
mov
ret
jmp
loope
inc
mov
data16
jle
inc
rcrb
gs
jge
fcmovnb
jns
or
push
pusha
add
test
mov
aad
cmp
outsb
icebp
jbe
mov
mov
gs
sbb
xor
mov
fcmovu
mov
in
cmp
or
push
jns
mov
arpl
push
or
mov
or
mov
addl
rolb
cs
ljmp
jecxz
cmpsb
sub
and
sbb
subl
pop
xchg
and
cwtl
mov
mov
push
xor
sbb
mov
inc
jl
mov
pusha
jge
xchg
js
lods
aaa
test
cmp
pushf
movsb
dec
jne
call
dec
mov
push
xlat
addr16
sbb
jmp
push
cld
sub
outsl
xor
mov
test
xor
push
mov
mov
mov
cld
out
ljmp
pop
aas
pusha
ret
leave
out
enter
lcall
data16
pop
adc
adc
cli
dec
shlb
in
pop
fldl2t
inc
cmp
fs
fs
pop
imul
addr16
pop
mov
jns
mov
stos
imul
dec
rcll
push
sahf
in
and
arpl
pop
push
push
xlat
icebp
js
jmp
in
loop
shlb
lods
sbb
test
test
mov
xlat
ds
rcl
repnz
jmp
jg
in
scas
mov
testb
xchg
les
test
out
xchg
sbb
idivl
add
pop
push
iret
sub
cmc
fsubrl
cltd
in
pop
or
mov
mov
rcrb
and
pop
and
inc
sti
push
mov
test
andb
sbb
inc
divl
lcall
out
xor
jp
jmp
pop
dec
cmp
std
add
add
inc
and
subb
imul
push
add
fstpl
lods
insb
or
andb
es
push
orb
dec
and
push
inc
dec
sub
dec
pop
and
lods
dec
push
add
add
cmp
ds
call
and
or
out
clc
push
pop
in
mov
insl
pop
ret
cmp
sbb
cmc
mov
loop
loopne
jns
imul
ljmp
jno
push
cmpsl
dec
bound
inc
lock
cmp
add
outsb
shl
lcall
dec
jns
cmpsb
mov
popa
incb
fldl
leave
and
xchg
idivl
inc
and
mov
mov
nop
lock
insb
inc
lret
mov
in
loope
imul
insb
bound
sahf
sbb
mov
mov
call
add
mov
andb
aad
push
and
popf
xchg
fldenv
or
test
adc
lock
scas
or
cld
mov
cmp
icebp
push
or
out
pop
mov
mov
lret
lock
push
repnz
es
aaa
cmp
ljmp
and
pop
mov
pop
xchg
mov
insb
pop
rorl
fidivrl
in
outsb
push
clc
and
xchg
movsb
js
ret
jne
bound
adc
dec
cld
jae
sub
in
mov
iret
cmp
or
dec
stos
mov
push
dec
into
jmp
outsb
lock
add
out
out
ret
daa
loope
xor
mov
xor
sub
or
mov
inc
fbstp
sub
ror
es
jp
push
roll
outsb
sbb
shrb
and
ja
jo
mov
add
push
in
in
mov
add
aas
cwtl
and
add
scas
xor
test
cmpsb
loop
imul
sub
pop
ret
test
loop
pop
ror
movl
aaa
and
movsb
pop
cmpsb
and
or
subb
daa
stc
push
mov
arpl
cmovs
adc
or
pop
incl
pop
and
js
fdivs
push
sub
sbb
and
bound
or
sub
dec
repz
aad
or
jp
sti
sahf
loopne
jg
pushf
mov
ljmp
push
xor
repz
adc
push
or
pop
fdiv
dec
jg
inc
sbb
dec
sub
imul
lods
adc
cld
adc
lea
popa
xlat
add
xlat
xor
movsb
sub
pop
xor
xchg
xor
outsl
ret
hlt
mov
adc
movsl
and
flds
xchg
mov
outsb
stc
mov
jo
or
mov
or
pop
sub
outsl
add
out
rolb
movsl
cli
es
pop
cmc
fidivs
stos
inc
mov
pop
fdivrl
xrelease
xchg
out
out
pop
adc
jbe
add
out
cmp
xchg
cwtl
mov
nop
out
add
test
sub
dec
fcoms
sub
push
push
cmpsl
jge
pop
push
jle
xchg
xor
mov
jo
es
lock
test
std
push
lods
add
lods
sub
jno
mov
add
dec
jnp
cltd
sub
daa
cs
inc
dec
into
pop
xchg
js
push
xlat
sti
mov
push
cmp
ret
shll
sarb
shl
rep
in
inc
cmc
insb
clc
sub
mov
jns
and
mov
stc
push
pop
addr16
sub
vpunpckldq
sbb
fwait
test
jecxz
inc
fbld
fbld
in
fimull
xchg
mov
es
andb
insl
cmp
lock
popa
pop
daa
xor
sub
fbld
pop
pop
std
adc
and
pop
in
add
fsubs
xchg
add
loop
fcmovnb
pop
sti
sti
bnd
push
jns
inc
sub
inc
xor
jne
inc
sub
cld
jp
mov
in
iret
adc
sahf
das
inc
adc
repz
xchg
test
jne
pop
ss
in
inc
sti
addl
xlat
jge
sub
add
std
cmp
fdivrl
push
mov
push
jge
cmp
mov
sbbb
sbb
xchg
xchg
test
jnp
lret
mov
fsubrp
jb
jmp
mov
sbb
mov
sub
mov
cmp
xchg
add
xchg
int3
dec
filds
adc
jmp
ret
push
mov
mov
xchg
xchg
inc
mov
cmc
pop
dec
mov
jmp
sbb
cmpsb
sub
dec
call
adc
fwait
iret
mov
add
sbb
fstl
xchg
add
scas
mov
loop
cmp
mov
fstps
xor
add
fnsave
call
mov
rcll
mov
xchg
and
nop
ret
pop
out
fistps
jg
lcall
pushf
sti
ret
add
xor
pushf
dec
data16
shr
cwtl
movsl
jp
mov
fs
call
sbb
ucomiss
and
add
push
xor
ja
sbb
sub
sahf
cmp
jecxz
and
cmp
push
and
test
mov
mov
fwait
adc
sub
inc
and
enter
xor
pusha
imulb
lea
xor
jae
pop
pop
call
xlat
sub
pop
xchg
flds
incb
xchg
mov
jmp
pusha
aad
mov
dec
and
out
jl
xchg
xchg
mov
jecxz
fmull
inc
push
mov
cli
push
and
inc
lods
jae
and
sub
stos
lret
sbb
cmp
jl
clc
loope
pop
xchg
addr16
and
imul
adc
xchg
xor
xor
ss
mov
mov
int3
pop
jecxz
xor
jae
xor
pop
lret
outsl
pop
fiaddl
inc
or
sub
and
jl
adc
inc
push
lcall
xorb
add
and
outsl
scas
fstl
jp
mov
clc
jns
scas
mov
xor
mov
pop
mov
int3
jb
fdiv
dec
mov
or
jecxz
sahf
mov
jno
sub
jl
and
and
push
mov
outsl
rdpmc
shll
sbb
mov
xchg
dec
cmpl
jp
ficoms
sub
pop
push
dec
popf
inc
in
push
js
lret
inc
cmc
pop
xchg
leave
inc
dec
iret
jns
icebp
sub
roll
mov
sub
shlb
aas
outsl
sub
jae
cld
mov
sub
call
fimull
or
dec
xor
jge
pop
xor
lock
pushf
jge
jne
jno
xchg
cmp
clc
jmp
loop
pop
cmp
arpl
shlb
das
push
mov
stc
mov
ss
nop
insl
mov
stos
mov
daa
fildl
sub
cmc
jge
loopne
dec
movsl
lret
mov
xchg
lret
jns
leave
mov
insb
adc
mov
pop
shr
addr16
and
mov
sub
jb
sbb
stc
push
popf
cwtl
jb
enter
icebp
inc
xchg
xchg
test
add
data16
dec
fldcw
cmp
mov
fimuls
les
test
cld
mov
sub
or
sbb
cmpsb
dec
mov
jecxz
scas
fwait
sbb
mov
jg
cmp
push
jge
out
add
arpl
inc
xchg
loopne
mov
std
lret
inc
stos
jne
lods
into
lret
fs
insl
pop
in
inc
mov
and
cmpsb
sahf
inc
mov
clc
push
xlat
push
fcomi
hlt
xlat
pusha
pop
xchg
cmc
pop
mov
stc
mov
inc
cld
repnz
shll
mov
inc
rcl
test
sbb
sbb
push
xor
mov
jbe,pn
iret
xchg
mov
jne
negl
cmp
rcll
data16
ret
pop
xchg
imul
mov
imul
xor
pop
pop
cmp
add
mov
pop
outsb
add
testb
dec
mov
mov
lds
xchg
lea
xchg
dec
arpl
mov
leave
sub
mov
fsubrl
lret
adc
xor
xor
mov
gs
inc
jns
sub
sbb
mov
adc
into
sub
int3
cs
mov
dec
popf
push
imul
dec
cmpsb
hlt
les
imul
out
mov
imul
mov
mov
popa
out
inc
addr16
mov
popf
inc
out
sbb
js
pop
and
testl
mov
push
pop
inc
inc
scas
outsl
xor
movsb
les
and
jbe
xor
inc
jl
push
or
pop
xor
jno
movsb
out
jl
sbb
inc
cmc
dec
out
dec
in
xchg
pop
push
dec
fwait
sbb
mov
dec
outsl
aad
mov
dec
jbe
mov
mov
mov
or
dec
rolb
stos
dec
repnz
icebp
push
mov
lds
push
push
mov
out
adc
add
cli
and
sub
addb
and
inc
cmp
mov
fadd
leave
inc
pop
js
xchg
push
pushf
adc
loopne
push
cltd
roll
inc
int
clc
leave
sub
lret
jns
jnp
icebp
and
adc
pop
jge
pop
test
push
std
ljmp
lods
shrb
loop
mov
loop
jo
inc
js
add
movsl
cli
test
jb
mov
rolb
in
or
jl
jmp
mov
iret
sbb
neg
mov
mov
sub
lahf
xor
inc
iret
loope
popf
xchg
popf
and
add
outsb
sub
mov
cli
loop
in
inc
or
cmp
imul
xchg
cmp
fsubl
mov
mov
movsb
push
int3
cmc
jge
ss
cmp
fpatan
add
push
ret
mov
sbb
sbb
inc
aaa
push
push
lods
in
pop
imull
and
mov
inc
test
xchg
jmp
mov
xchg
loop
and
fwait
orl
shl
sbb
jecxz
dec
decb
xchg
mov
popa
dec
dec
dec
fsubs
xchg
out
lods
sbb
ss
push
lret
sti
pop
inc
outsl
int
rorb
rcrl
call
mov
push
dec
cmc
mov
out
sbb
imul
adc
ja
sarl
dec
lret
bound
xchg
fwait
push
push
pop
in
jge
lahf
mov
and
jb
fs
mov
jle
mov
ret
shrl
pop
daa
and
dec
js
sahf
shlb
ljmp
fnsave
mov
pop
mov
cmpsb
jge
xlat
sti
xchg
push
test
cmp
ret
mov
lret
and
push
sub
test
in
imul
sahf
in
ror
xor
loop
mov
inc
leave
dec
clc
inc
inc
mov
into
add
jns
and
sub
leave
cs
sti
pcmpeqw
lret
ljmp
pop
popf
inc
xchg
xlat
xchg
aam
push
adc
sbb
push
std
or
test
out
fistpll
ret
repnz
mov
dec
mov
inc
mov
and
or
jecxz
mov
imul
xor
mov
pop
inc
negl
mov
cmp
iret
scas
sbb
and
inc
mov
gs
movsl
inc
mov
adc
xchg
push
repnz
pop
fcoms
fldt
sub
xor
jmp
push
call
mov
clc
xlat
lahf
sbb
mov
or
dec
andl
ja
fcmovbe
jne
repnz
cli
iret
fisubs
mov
cmp
scas
cltd
add
dec
xchg
push
or
jb
xor
sub
outsl
pop
loope
das
clc
notb
or
movsb
in
dec
mov
mov
popa
subb
orb
xor
xchg
into
pop
push
aas
push
dec
and
int3
cld
shrl
hlt
sbb
or
inc
jnp
mov
or
fnstcw
cld
mov
xorb
xchg
ds
popf
nop
xor
je
imul
movsb
leave
xlat
push
xchg
fbld
int3
hlt
ljmp
or
test
cmp
ret
mov
jle
pop
aaa
bndcn
ret
sbbl
fadds
outsb
loope
ja
hlt
cmc
add
fsubrp
or
hlt
repz
adc
mov
nop
add
add
jecxz
xor
popa
rol
dec
aaa
inc
cmpsl
mov
pop
sbb
inc
or
sbb
push
cmpsb
not
add
fcoms
outsb
orl
ljmp
out
hlt
shlb
sbb
jecxz
pop
cs
nop
push
adc
lcall
mov
pop
daa
in
test
mov
xchg
sub
bound
dec
xchg
stc
adc
push
lcall
movsb
push
fsubrp
xchg
mov
xchg
aaa
nop
xor
cmpsl
xchg
pop
fldcw
xchg
lcall
xlat
test
out
int3
inc
negl
stos
xlat
xorb
mov
sbb
mov
pop
xchg
popa
int3
cltd
nop
lret
mov
mov
adc
add
cmp
mov
xor
mov
cmp
es
stc
xchg
fsubl
jne
jp
sahf
push
enter
testl
pop
dec
and
mov
arpl
lods
lcall
out
xor
je
mov
push
xchg
bound
pop
or
push
repz
inc
or
imul
mov
test
jns
cmp
xlat
mov
lds
sbb
icebp
imul
ljmp
xchg
mov
mov
insb
mov
insb
in
sbb
cmpsl
adc
loop
shlb
jge
lods
lods
jae
pop
call
test
loope
outsb
jge
push
sub
daa
push
cmp
shrb
xchg
jp
cmp
mov
and
jae
sub
nop
mov
jb
mov
mov
mov
xchg
test
ss
cmc
stc
inc
or
xlat
mov
xchg
fidivs
push
pop
sti
ret
data16
fcomip
mov
imul
lahf
push
stos
imul
add
add
enter
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
enter
add
add
add
add
mov
add
addb
add
enter
add
add
add
add
add
add
enter
add
add
loopne
add
enter
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
enter
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
enter
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
enter
add
add
add
add
mov
add
addb
add
enter
add
add
add
add
add
add
addb
add
add
enter
add
add
add
add
add
add
cwtl
add
add
add
add
sti
jns
add
add
add
add
add
add
test
add
add
add
enter
add
add
add
add
add
add
mov
add
add
sti
jns
add
add
add
add
add
add
enter
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
sti
jns
add
add
add
add
add
add
call
add
add
sti
jns
add
add
add
add
add
add
clc
add
add
add
add
sti
jns
add
add
add
add
add
add
or
add
enter
add
add
add
add
add
add
sbb
add
enter
add
add
add
add
add
add
sub
add
enter
add
add
add
add
add
add
cmp
add
enter
add
add
add
add
add
add
dec
add
add
enter
add
add
add
add
add
add
pop
add
add
enter
add
add
add
add
add
add
push
add
add
sti
jns
add
add
add
add
add
add
js
add
add
add
enter
add
add
add
add
or
add
add
add
sti
jns
add
add
add
add
or
add
add
add
sti
jns
add
add
add
add
or
add
add
add
sti
jns
add
add
add
add
or
add
add
add
sti
jns
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
add
add
add
enter
add
add
add
add
or
add
add
add
add
enter
add
add
add
add
add
add
push
add
add
sti
jns
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
dec
js
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
rclb
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
bound
add
es
mov
iret
mov
movsb
mov
rcr
push
js
jnp
movsb
and
push
scas
stos
mov
les
sbb
mov
fistpl
push
pop
dec
jne
mov
dec
cltd
pop
jmp
test
out
jecxz,pt
sub
mov
sub
jge
pushf
or
sarl
mov
cmp
addr16
aaa
clc
pop
es
cmp
or
ret
xchg
mov
jno
test
dec
insb
push
imul
jnp
cmp
cmpsl
dec
cmp
outsb
cmp
mov
mov
lahf
insl
dec
add
out
cli
je
jecxz
mov
pushw
jbe
jl
push
les
push
cmp
in
aas
cmp
xchg
mov
stos
test
and
jp
dec
test
mov
jnp
jmp
and
ja
data16
addl
add
and
xor
ret
pop
ret
mov
outsb
test
ss
movsl
aam
gs
into
iret
fsubrp
sahf
ljmp
adc
in
jmp
stos
fwait
cmp
jp
rcl
pop
dec
psraw
sahf
aam
inc
iret
nop
adcb
les
inc
mov
std
mov
je
cld
or
inc
xor
rsqrtps
enter
scas
jge
mov
sbb
fimuls
mov
add
mulb
add
add
and
push
lods
push
push
sub
push
shrl
icebp
out
decb
loop
pop
test
xchg
xchg
popa
xchg
push
push
shll
out
dec
cs
sub
icebp
icebp
pop
sbb
stos
fdivl
ja
jne
mov
mov
dec
out
insl
sbb
jae
insl
fldenv
jg
insb
je
xchg
or
mov
inc
shl
push
mov
jmp
push
test
or
mov
cmp
cmp
sar
lea
lods
add
and
je
lcall
xchg
daa
popf
cmc
pusha
cld
push
xlat
les
lock
fwait
sbb
xchg
jle
inc
in
push
mov
pcmpeqd
stos
mov
mov
xchg
xchg
cmp
mov
sub
mov
and
inc
shll
in
adc
lds
xor
mov
sti
rorl
sbb
mov
adc
push
sbb
cwtl
mov
cmp
jnp
cmp
add
cmpl
xlat
xchg
cmp
cmp
cs
cwtl
adc
jp
sbb
cld
mov
jp
jecxz
ficompl
outsb
cmp
iret
mov
pop
add
push
cmp
xchg
dec
lahf
and
cmp
add
pop
mov
add
lds
add
mov
mov
cmp
mov
es
mov
or
add
mov
sbb
mov
loopne
sbb
push
xor
jbe
into
jne
jb
add
out
mov
sbb
cmp
dec
push
push
je
jno
push
xor
in
outsl
in
jb
xchg
push
gs
lods
sarb
jl
cli
mov
int
enter
or
jg
psubusb
test
mov
jmp
stc
xchg
dec
call
arpl
test
rcrb
push
or
sub
mov
or
rcl
dec
cmp
shufps
xchg
imul
cmp
pop
gs
push
call
push
jmp
sub
push
insl
in
xchg
pop
cmp
sub
cld
ficoml
xchg
pop
push
jbe
inc
sbb
out
xor
sbb
inc
mov
into
test
and
cli
xor
adc
inc
xor
fisubs
jno
cmpb
out
push
cmpsb
repz
nop
sub
inc
repz
sbb
pop
push
leave
movsl
mov
fisubl
jle
jg
push
jnp
stos
adc
stc
jecxz
dec
push
into
jne
fs
pop
ljmp
sub
cmpsb
out
or
lock
lret
jg
call
loope
pop
jle
mov
fdivrl
inc
fcoms
adc
aaa
cmp
mov
lcall
sub
pop
mull
jo
mov
push
pop
icebp
call
push
outsb
sar
mov
mov
adc
add
jo
jnp
dec
push
aad
fbstp
adc
lods
ds
xor
loopne
and
add
and
adc
pop
dec
mov
adc
sbbb
sub
imul
xchg
xchg
movsl
xor
or
dec
cld
sub
sbb
and
aad
or
inc
inc
loopne
jo
shl
addb
in
mov
pushf
cmc
or
lea
clc
aaa
test
cmp
loope
mov
loope
mov
jmp
add
daa
rclb
pop
push
in
adc
iret
push
std
and
push
fwait
cmp
pop
insl
or
mov
sbb
add
inc
dec
cmp
test
stos
push
je
imul
les
mov
test
in
idivb
inc
sbb
outsl
lock
mov
sbb
lcall
mov
or
push
je
dec
ds
into
pusha
loopne
pop
ficoml
lods
nopl
ja
clc
hlt
or
int
fwait
repnz
push
lds
push
and
idivb
mov
scas
push
inc
cmpsb
dec
es
jb
lds
jns
loop
ret
xchg
push
mov
icebp
arpl
push
adc
pop
leave
push
sub
xchg
mov
popa
mov
repnz
sti
xchg
pop
mov
ret
jbe
inc
fildl
data16
jle
mov
mov
push
adc
aad
jbe
lods
dec
mull
add
mov
inc
push
pop
sbb
out
cmpsl
incl
xlat
jge
xchg
mov
xchg
xchg
hlt
cli
aam
adc
and
and
lahf
loopne
xlat
lcall
push
sbb
mov
lods
jecxz
and
divb
xchg
aas
rcl
mov
lea
mov
or
in
movsw
icebp
arpl
inc
fnstsw
outsl
xchg
inc
sahf
jb
test
arpl
les
lock
or
jo
mov
imul
xchg
inc
es
popa
mov
bound
stos
and
and
xchg
mov
mov
das
fcomps
mov
data16
rorl
popa
jp
cmp
push
mov
jo
scas
xchg
std
shlb
push
xor
inc
xlat
rol
push
fldcw
aad
pop
sub
lret
aam
out
addb
xchg
sbb
insb
negl
mov
mov
mov
addr16
add
push
cmpsl
sbbl
ret
adc
jae
loop
scas
pop
mov
into
adcl
cmp
xor
adc
mov
mov
add
lret
add
mov
jge
sub
shlb
outsl
or
inc
push
lahf
fimuls
lds
jg
jb
add
and
shlb
pop
push
int
int
cwtl
dec
inc
add
jle
test
xchg
sahf
loope
cmp
dec
push
cwtl
shl
idiv
mov
dec
jge
jno
mov
mov
push
outsb
ljmp
fnstsw
fmull
iret
mov
aam
adc
call
adc
mov
pop
pop
sahf
cmp
add
je
mov
pop
rcrb
xor
cwtl
sti
jge
je
jnp
js
cwtl
bound
and
or
xor
push
mov
and
fldcw
jb
push
subl
in
pushf
loop
enter
int3
mov
std
loope
mov
clc
out
jl
and
mov
or
fdivs
jb
roll
xor
fisubrl
mov
dec
cwtl
aad
jecxz
enter
js
scas
int3
pusha
or
std
push
test
and
inc
sbb
sub
xor
lret
sbb
int
in
clc
mov
pop
inc
pop
pop
fs
or
int
mov
mov
pop
ret
loopne
mov
push
mov
es
sti
cmp
imul
and
mov
test
xlat
adc
push
cmpsb
mov
inc
mov
mov
lahf
mov
scas
fs
xor
outsl
sbb
pop
mov
fs
into
lret
cmp
jle
mov
xchg
pop
bnd
int3
add
mov
mov
or
fwait
adc
add
mov
xchg
popl
jp
push
jp
inc
test
insl
xor
ret
push
int3
arpl
or
cltd
push
gs
jg
ret
and
movsl
ss
pop
sbb
dec
fidivl
xor
in
fs
stos
cmpsl
cmp
sbb
ja
pop
sub
adc
mov
es
inc
fcmovb
or
adc
xchg
shrb
adc
xchg
test
testb
dec
add
sahf
or
aam
xchg
xchg
les
add
push
lods
push
xor
imul
sahf
xchg
fnstsw
faddl
push
neg
repnz
ret
push
or
sbb
cmpsl
test
popa
jg
xor
cmpsb
jne
add
mov
imul
pop
push
out
push
daa
stos
mov
mov
sti
add
in
inc
pusha
ds
andb
icebp
jae
ds
mov
mull
pop
in
shrb
sbb
mov
dec
test
inc
test
loope
xchg
aad
mov
pop
sti
icebp
jp
shl
adc
dec
push
mov
mov
ljmp
imul
loop
inc
arpl
cs
pop
loop
fcompl
push
into
mov
or
sbb
dec
stos
in
sbb
jne
push
mov
sbb
adc
int
arpl
sbbl
or
lea
add
mov
add
enter
mov
outsl
cmp
lea
cmp
insb
mov
shl
negb
xor
mov
xchg
adc
and
sbbb
stos
jns
xor
push
sbb
xorl
loop
ror
pop
in
jae
mov
es
pop
daa
fwait
gs
mov
adc
and
xchg
dec
clc
sub
cmpsb
xchg
pusha
popf
sti
es
fildll
mov
jmp
ja
adc
sbb
sbb
gs
mov
push
and
int3
std
orb
xor
xchg
sbb
cli
xor
adc
add
data16
stos
in
insl
dec
mov
push
test
ret
and
imull
dec
mov
inc
es
lods
or
push
jle
xchg
mov
push
xchg
adc
cltd
repz
ljmp
daa
popa
sahf
fnstenv
adc
push
hlt
ret
hlt
xor
or
mov
nop
fldt
xchg
loope
pop
jns
testl
inc
cmp
pop
rep
int3
xor
sbb
stos
out
mov
cmp
scas
insl
test
mov
imul
sbb
aas
sar
mov
sub
loop
and
sahf
xchg
addr16
fs
add
ljmp
aad
jnp
mov
inc
into
mov
das
testb
imul
arpl
xchg
sbb
mov
fdivs
add
lods
xor
pop
stc
lret
cli
adc
repnz
inc
push
out
or
clc
sbb
adc
and
push
xchg
jb
sbb
hlt
into
add
mov
add
xchg
call
divb
xchg
out
and
jno
xor
push
mov
sbb
jge
in
loope
ljmp
test
arpl
mov
pop
xor
push
out
cwtl
enter
fdivr
sarl
push
fnstenv
pop
add
je
push
mov
fisttpll
push
xchg
lret
or
movsb
inc
out
xor
xchg
test
sti
cltd
xchg
test
mov
adc
lock
jbe
mov
mov
mov
pop
pushl
outsl
cmp
fidivs
sbb
cs
cwtl
pushf
mov
dec
jmp
mov
pop
aad
ja
mov
pop
cltd
inc
dec
cmc
je
dec
jg
xor
rcr
mov
jge
dec
mov
dec
imul
jnp
mov
adc
sbb
movsl
out
test
cmp
add
cmp
pop
sbb
bound
push
or
jns
or
ljmp
test
hlt
scas
xchg
push
xor
outsl
mov
test
sbb
jg
pop
sub
mov
xchg
xchg
test
sub
in
scas
sbbl
inc
loop
loop
push
sbb
orl
sahf
data16
out
nop
call
call
aad
add
jge
jmp
and
mov
xor
pop
jb
rcll
sbb
scas
push
push
divl
jne
sub
movsl
jecxz
dec
das
add
into
add
ret
int
ja
pop
idiv
pop
xchg
inc
xor
repz
adc
mov
xor
cwtl
es
scas
dec
into
les
xchg
aaa
jae
pop
sbb
test
mov
fsts
notl
lods
es
ret
mov
outsl
sti
mov
dec
lods
cltd
cmc
addb
aaa
pop
jp
mov
jge
mov
sbb
xchg
push
mov
fildl
cmc
in
push
roll
add
pusha
add
jg
rorb
in
mov
jnp
aaa
fidivrl
and
scas
fs
fs
push
out
negb
lods
movb
pop
movsb
call
add
add
loop,pt
lret
popl
sub
in
repnz
pop
lret
pop
cmp
or
repz
cmp
iret
push
mov
scas
xchg
jle
dec
xchg
cmp
out
cmp
scas
push
cwtl
orl
shrb
ucomiss
mov
mov
or
pop
mov
in
es
cmp
push
or
gs
shll
pop
cmp
or
insb
pop
subl
cmp
cwtl
xor
dec
popf
mov
mov
in
dec
jno
mov
sub
inc
pushf
fcomps
test
loop
mov
sub
gs
cmp
or
add
int
movl
adc
dec
or
sbb
xchg
adc
xor
js
lods
mov
xchg
cmp
cmpb
xor
fucomip
and
jecxz
push
push
xchg
jo
xor
lods
jp
mov
imul
push
je
adc
or
in
dec
shll
mov
add
cmp
mov
orb
in
sarb
nop
lahf
fstps
fstps
mov
push
cwtl
xor
push
jle
sbb
mov
dec
popa
inc
sbb
sbb
sbb
jnp
icebp
icebp
outsl
jo
frstor
loope
fidivs
jae
or
mov
cmpsl
adc
in
fdiv
sub
inc
dec
out
and
xchg
addr16
jbe
arpl
and
sbb
lret
mov
inc
imul
fdivl
icebp
jp
mov
lds
sbb
add
mov
and
mov
std
cwtl
xchg
or
push
jge
xor
and
fdivl
scas
stos
and
mov
push
testb
adc
test
push
jns
loopne
int3
adc
xchg
out
cmc
ljmp
sub
inc
imull
test
pushf
mov
mov
insl
add
cs
shrb
jge
addr16
cmp
fmull
adc
add
stos
or
mov
add
aad
je
leave
test
rcrb
add
push
mov
int3
or
xor
test
or
push
mov
and
cmpsl
push
mov
fdivl
repnz
jmp
push
xchg
insb
cmp
or
fbstp
pop
test
sbb
xchg
inc
icebp
jmp
jb
push
test
loopne
sbb
sti
leave
lcall
ret
dec
dec
nop
fildl
sub
jne
fldenv
ljmp
cmpsl
or
fxch
popa
push
outsb
rorb
mov
es
arpl
add
in
push
mov
cmp
daa
xor
mov
sti
shl
sub
pop
jne,pn
sbb
push
cmc
imul
stos
or
insl
in
push
dec
or
sti
mov
ret
mov
mov
and
popf
jno
pop
ret
mov
mov
rcrb
mov
push
jp
lock
aaa
flds
daa
addb
lods
out
out
dec
mov
int3
and
xor
adc
repnz
mov
xchg
push
xchg
mov
loope
ret
fs
add
mov
mov
sbb
daa
xor
pop
push
mov
cmpsl
adc
and
je
bound
leave
leave
inc
addr16
cmp
mov
xchg
scas
xchg
inc
je
jmp
and
jge
adc
daa
jo
ljmp
out
sbb
xlat
repz
xchg
cld
xor
sbb
test
les
out
xchg
cmp
scas
adcl
les
jno
add
js
bound
jle
jecxz
inc
in
adc
xor
sub
mov
outsb
adc
dec
je
cltd
jnp
mov
sub
mov
xor
add
mov
push
and
lahf
aad
mov
mov
cmp
mov
aas
inc
mov
xchg
inc
sbb
dec
std
repnz
push
mov
aam
ljmp
sub
xchg
fs
stos
cmp
add
ja
dec
mov
push
xor
ljmp
addl
sub
mov
ret
inc
inc
push
rorl
jbe
adc
or
int3
mov
sbb
sahf
xchg
jge
and
add
lea
rcl
mov
adc
shlb
or
or
test
push
out
dec
cmpsl
stos
xchg
and
mov
aas
loope
pushw
pop
cmp
movsb
imul
lret
imul
add
ljmp
push
loope
add
rolb
sub
scas
std
les
pop
dec
out
mov
mov
in
xchg
sbb
scas
test
sub
sbb
sub
sub
fadd
popa
push
mov
mov
inc
mov
sarb
cwtl
and
iret
inc
arpl
loopne
xchg
xchg
inc
inc
push
mov
sahf
fs
cltd
adc
xor
outsl
mov
push
insb
lods
ljmp
jmp
cmp
cltd
ret
and
cmpsb
shlb
call
int
push
dec
jnp
adc
mov
ror
add
push
sbb
scas
lret
inc
add
fdivs
sub
dec
or
stc
das
or
outsl
jnp
xchg
ret
jmp
pop
adc
iret
in
inc
sbb
sbb
mov
bound
xchg
fcmovbe
daa
insl
cmp
into
popa
pop
jle
decb
mov
enter
xor
dec
lret
addb
lock
das
daa
fnstsw
cmp
inc
inc
pusha
in
xchg
les
sub
inc
test
mov
imul
ret
stos
xchg
adc
mov
sbb
push
jns
dec
add
sbb
sub
pop
push
cmpsb
lock
push
jecxz
pop
add
push
dec
or
mov
in
xchg
sbbl
pop
sarb
or
fwait
and
inc
mov
jg
fidivs
test
sub
aas
mov
pop
cmpsl
sbb
mov
dec
mov
adc
les
gs
popf
iret
mov
stos
pop
inc
or
cmp
imul
adc
fdivrl
add
mov
stc
enter
out
es
int
enter
add
dec
xlat
pusha
nop
xchg
paddd
sbb
cwtl
shl
xor
xor
movsl
stc
imulb
int3
pop
xchg
push
out
pop
pop
ds
arpl
cmpsl
inc
jmp
mov
or
testb
cld
dec
insb
fstp
das
xchg
ret
mov
jge
imul
imul
pushf
out
cwtl
fcompl
mov
ret
cltd
mov
enter
scas
loope
out
pop
out
sub
and
ror
ficoml
nop
dec
push
imul
clc
je
cmp
in
ss
mov
sbbl
mov
leave
dec
sub
loope
add
into
movsb
in
iret
push
jecxz
lds
aad
cs
jae
lock
fs
xchg
jl
popa
subb
test
jle
push
jae
imul
dec
rorb
andb
test
inc
push
or
cli
imul
mov
dec
mov
outsb
aad
inc
xor
add
call
sahf
add
push
into
push
inc
and
popf
push
pop
gs
push
adc
jno
ja
icebp
adc
inc
adc
lahf
xor
add
cs
movsb
mov
and
pop
push
sbb
xchg
jnp
mov
daa
sbb
mov
popa
dec
push
fwait
inc
jmp
ss
cmp
or
lock
xlat
aas
data16
sti
in
shlb
cmp
popf
lcall
pushf
xchg
mov
jl
mov
std
stc
sbb
aaa
pop
and
shlb
push
adc
inc
jg
stc
scas
dec
popf
ret
in
cmc
sbb
add
cs
jecxz
mov
orb
out
js
add
jae
popa
enter
sbb
jae
push
sub
jle
movb
mov
std
jno
jae
stos
sbb
pop
sti
out
push
mov
popf
cmpsb
jmp
xchg
loopne
jg
push
mov
adc
push
pushf
add
and
push
ss
cwtl
or
data16
xchg
dec
xor
jo
rorl
xchg
lcall
sti
leave
mov
jb
repnz
sbb
movsb
les
scas
push
aas
dec
push
dec
jg
lcall
jo
and
adc
negl
jecxz
sbb
cmp
imul
inc
int3
mov
mov
in
lock
repnz
pop
sbb
aaa
and
xchg
jg
cld
outsb
cmp
cmp
test
hlt
ja
sbb
jae
dec
pop
sbb
push
div
loope
xlat
dec
cmp
pop
sub
jnp
lods
dec
sbb
push
into
dec
mov
rcrb
mov
cld
fistps
and
mov
jmp
rorb
xchg
leave
inc
cwtl
jo
xor
adc
push
cmc
insb
out
cmp
int3
lcall
adc
nop
sub
push
imul
lock
enter
jnp
pop
sbb
fisttps
and
pop
out
lock
sub
mov
sub
fimull
pop
mov
fs
sbb
mov
stos
iret
mov
rol
cmp
xchg
mov
sub
jb
shrb
mov
enter
out
pop
cmp
sub
push
add
add
aas
push
pop
nop
orl
pop
push
icebp
sub
adc
lret
mov
xchg
xchg
and
or
push
aam
cltd
test
loope
push
stos
sarb
cmc
mov
stos
and
push
mov
cmp
lods
testb
aas
loopne
fdivrl
popf
push
xchg
inc
insl
inc
cmpsl
lods
mov
cld
in
lahf
hlt
insb
mov
fstpt
sbb
fnstcw
lret
xor
push
mov
orl
sbbl
movsb
jne
int3
mov
push
inc
mov
jno
insb
cmp
xchg
inc
out
sub
inc
repnz
clc
hlt
insb
add
incb
and
and
insw
cltd
sub
push
sbb
mov
push
imul
cwtl
daa
js
xchg
pop
cmp
mov
repz
aam
jns
sub
lret
and
loop
or
fidivl
addr16
jp
shrb
jo
inc
jg
popf
popf
loopne
insl
jle
out
push
sbb
inc
push
add
fdivrs
dec
test
pop
xor
push
test
jmp
xchg
loop
cmpsb
sbb
jne
inc
imul
loope
out
and
les
dec
adc
adc
jb
jmp
mov
aas
ret
test
sarl
xchg
jecxz
ds
into
and
leave
mov
ficoms
sub
push
cmp
inc
frstor
scas
push
xor
sti
cltd
mov
inc
jge
and
mov
ss
xlat
add
dec
or
in
into
leave
xor
cmpsb
or
pop
aam
xor
fistpl
mov
dec
stos
mov
dec
mov
lret
jne
in
lret
dec
mov
push
int
fisttps
cmc
sahf
sarb
mov
cmp
jo
dec
sbbl
cwtl
mov
repz
or
cmp
aaa
add
sub
add
adc
in
mov
jmp
fldl
ja
es
jle
xchg
scas
inc
das
lcall
jmp
repnz
jb
loopne
hlt
enter
enter
jns
mov
ja
in
jae
cltd
jge
adc
repz
mov
inc
mov
icebp
xchg
cmp
mov
adc
adcb
scas
in
inc
or
add
adc
js
adc
fimull
pop
cmp
jge
std
lahf
aaa
push
rcll
fimull
cmc
ret
mov
adc
dec
mov
inc
jmp
call
jl
dec
xlat
into
addl
jo
xchg
add
jnp
mov
pop
cmp
jno
int
push
cltd
push
imul
add
je
mov
add
inc
shll
pop
lret
loopne
and
jae
sahf
jo
movsl
std
shrl
push
xor
pop
pop
and
es
adc
or
jb
scas
push
mov
mov
testb
test
mov
fucomip
push
ss
or
mov
pop
call
cli
push
sbb
daa
or
sub
and
xchg
or
ss
mov
popf
imul
mov
jmp
mov
ljmp
and
cld
adcl
sti
or
jns
iret
sbb
sbb
int3
cltd
mov
cmp
data16
lahf
les
push
cli
or
and
xchg
test
cmpsl
add
cmp
push
adc
push
sbbb
xchg
aaa
lock
loop
adc
outsb
icebp
mov
outsl
inc
popa
sub
push
out
inc
int3
push
xchg
out
cmp
jmp
sub
test
ja
fdivrp
ficoml
mov
adc
add
lahf
shrb
repz
int3
sti
mov
xchg
or
dec
jp
cld
push
les
scas
cltd
dec
mov
dec
pop
xchg
jp
or
movb
pop
dec
or
int
or
pop
fdivrs
jl
pop
adc
cltd
or
jp
cmp
xchg
or
hlt
jb
fidivl
lods
les
jmp
out
dec
xor
je
cmpsb
lret
xchg
std
aam
push
mov
add
and
jo
inc
xor
and
lahf
jl
inc
loop
fldl2e
cmp
sbb
iret
add
dec
mov
jmp
mov
pop
imul
dec
es
pop
sub
xlat
imul
dec
shrb
inc
fdivrs
mov
sbb
into
mov
xchg
add
mov
dec
aam
lcall
lods
jp
mov
adc
cmpsl
pop
cli
and
sub
inc
jne
sub
sub
rcl
lock
push
pop
jno
mov
divb
mov
jl
cmp
jl
insb
or
or
xchg
daa
adc
pop
jo
pop
xor
loopne
rclb
sub
enter
lods
push
cmpl
cmpsb
aas
xchg
dec
inc
mov
pusha
mov
and
test
loope
test
pop
ss
imul
xorl
and
pop
aam
jl
push
adc
movsb
sti
ljmp
imul
rcrl
cmp
mov
cli
pop
call
jno
mov
gs
jne
stos
xor
pop
das
jae
sti
js
adc
xlat
jbe
push
xor
push
xor
cmp
stc
dec
in
clc
lods
imul
movsb
ret
jno
es
cvtpi2ps
call
or
enter
mov
push
jge
lods
pop
and
out
imul
test
mov
sti
jae
fucom
lahf
loope
cmp
repnz
dec
cmp
stos
sbb
dec
mov
in
inc
add
mov
or
pop
adc
cmpsl
cmpsl
cli
dec
jns
cwtl
cli
cmp
icebp
test
outsl
xchg
lret
sbb
dec
pop
loop
clc
mov
nop
cmpsl
mov
xor
cmp
mov
in
jmp
stos
shl
fimuls
mov
sbb
aam
jnp
mov
jb
enter
sbb
pop
test
fisubs
loop
ss
aam
jne
push
popf
or
pop
xchg
jbe
mov
aas
ja
mov
cmc
pop
scas
adc
leave
push
mov
add
add
out
leave
movsl
test
andw
push
imul
loopne
pop
cmp
or
xlat
inc
dec
add
dec
add
sbb
movsl
movsl
cmpsl
push
out
push
std
push
ljmp
fs
jmp
in
lret
inc
sub
pop
call
push
mov
mov
stc
repz
movsb
jne
sbb
ljmp
std
outsl
loope
sbb
lahf
push
popa
fsubr
movsb
push
mov
js
inc
jo
das
or
das
xor
mov
adc
fs
lahf
pop
ret
jnp
mov
pop
mov
add
inc
xchg
sahf
enter
mov
ljmp
fsubrp
shlb
cwtl
cmp
and
sbbl
das
out
or
pop
cli
sbb
mov
push
xor
fwait
and
dec
gs
aaa
js
pop
jmp
adc
xchg
dec
jb
push
dec
push
mov
in
mov
xchg
adc
pop
outsb
pushf
lea
add
xor
jmp
xor
sbb
push
mov
pushf
clc
out
sahf
movsb
rcrl
push
sbb
push
mov
or
jne
loop
inc
cmc
lds
sub
in
adc
test
int3
pop
sub
jne
insl
jae
inc
pop
mov
xchg
xchg
pop
adc
xor
mov
loope
cmpsb
scas
mov
insl
inc
pushf
adcl
xchg
add
je
movhps
mov
scas
sets
lahf
je
push
push
int
xor
lock
add
mov
lods
sub
jnp
pop
popf
lcall
cmp
mov
pusha
and
jl
push
in
fwait
jmp
xlat
and
into
cwtl
test
dec
jg
xchg
pop
xor
mov
ljmp
inc
les
xchg
and
fcompl
push
cli
lret
pop
out
fcoms
insb
cmp
mov
out
in
xchg
lret
cs
flds
add
mov
pop
stos
imulb
clc
mov
xchg
cmp
pop
iret
inc
in
xchg
adc
inc
xchg
imul
jno
into
inc
jecxz
cmp
and
std
push
add
incl
lods
andb
inc
add
ret
xchg
test
adc
enter
adc
xchg
ficomps
lds
stos
mov
lock
cwtl
out
rclb
pop
mov
sub
push
js
mov
xor
aas
mov
pop
cld
pop
jl
int
or
jp
jo
push
jmp
xor
mov
stos
xchg
cmp
popa
cmc
mov
nopl
dec
mov
das
sbb
out
sbb
xchg
int3
cli
and
repz
enter
push
push
mov
xchg
xor
lock
mov
pop
jo
daa
xor
fs
sbb
xchg
insb
cmc
fdivs
or
mov
push
flds
cmp
js
aad
or
cmp
xchg
movsl
mov
jle
adcb
or
aam
xchg
push
fidivs
int
push
pushf
stos
stos
ss
incb
std
iret
dec
add
add
mov
push
xchg
adc
lahf
inc
adc
movsl
dec
pop
mov
sbb
decl
inc
sub
inc
stos
pop
push
or
sub
sbb
jns
insb
fidivrs
xlat
sti
fcompl
jnp
mov
hlt
lods
push
pop
outsb
jb
push
sub
daa
lea
push
lahf
jmp
cmp
mov
add
loop
mov
mov
mov
or
fldenv
sbbl
lcall
popf
pop
cmp
mov
outsb
ja
sbb
or
xor
ja
dec
jp
pop
push
cmp
jnp
lock
cmp
jae
popa
out
aam
loope
or
sub
mov
jbe
jnp
push
lock
addr16
xor
in
mov
push
dec
fwait
stos
jnp
or
cmp
imul
in
inc
xchg
fxtract
test
jnp
aam
ret
xchg
es
cmp
lahf
in
cld
push
inc
scas
xor
sub
mov
and
push
sub
pushf
xor
popf
icebp
movsb
jle
mov
dec
mov
cwtl
int3
pop
pushf
push
xor
rorl
aaa
pop
mov
int
clc
or
cmpsb
cmp
sub
and
scas
clc
cmp
push
ss
mov
setno
mov
out
dec
or
xor
dec
pop
inc
mov
inc
adc
dec
cmc
shlb
popf
imul
add
add
push
scas
mov
jno
rcrb
and
mov
pop
hlt
dec
in
pop
jmp
add
loop
jg
push
pop
mov
push
or
mov
push
adc
cmp
aaa
out
and
ret
pop
dec
arpl
jns
pushf
enter
add
pop
jo
aaa
add
jg
cltd
in
mov
push
nop
fnstenv
and
andl
mov
mov
xor
push
pop
dec
sbb
dec
call
js
jg
dec
mov
repnz
push
leave
jns
aas
mov
push
dec
lret
mov
std
mov
mov
loop
insl
sahf
mov
lds
xor
and
mov
and
add
cltd
mov
jo
andb
repnz
push
loope
cmp
inc
pop
inc
mov
jmp
shll
les
bnd
cmp
and
adc
push
lock
sti
std
jge
sub
xor
mov
or
stos
push
lods
imul
lea
outsl
ret
lcall
int3
es
mov
nop
mov
cmp
fists
mov
dec
cli
push
xchg
scas
hlt
cmp
xor
mov
orb
pop
xchg
imul
ja
dec
adc
mov
hlt
daa
inc
in
cld
lods
adc
je
dec
pop
in
push
dec
mov
push
pop
mov
aaa
xlat
int3
mov
xor
mov
lret
cmp
in
icebp
scas
add
pop
roll
insl
int3
mov
out
mov
mov
data16
mov
sub
add
push
sub
ss
adc
and
adc
pop
lret
dec
cmp
push
or
ds
jb
sbb
push
aam
clc
mov
cmp
iret
iret
stc
jae
dec
mov
inc
int3
outsb
rorl
test
in
jmp
add
mov
mov
lods
fs
add
sub
out
int
xor
mov
imul
or
sahf
cmp
sahf
in
xlat
pop
out
lods
nop
out
cmp
gs
mov
test
sbbl
clc
lret
cli
sbb
lods
xor
rcrb
and
out
push
adc
data16
pop
fildl
cmc
lret
push
dec
cmpsl
clc
and
add
cltd
aad
jne
sahf
shlb
mov
test
mov
arpl
je
out
add
jmp
or
les
fcompl
ja
ret
fstpl
ret
arpl
ret
jb
and
enter
push
loope
aam
push
shl
clc
xlat
clc
cmpsl
xchg
test
mov
sti
out
hlt
xchg
int
es
jge
js
cli
push
and
mov
into
aam
in
orl
mov
mov
inc
and
jmp
pop
mov
jp
xchg
pushf
inc
add
mov
shll
cld
mov
dec
sbb
fwait
sbb
dec
cmp
sub
mov
dec
in
mov
mov
daa
adc
jp
or
mov
std
lock
loop
mov
add
scas
xor
sub
testb
fsubl
sbb
mov
outsb
inc
cmc
dec
add
fwait
mov
push
ret
adc
fs
jmp
or
jnp
mov
push
scas
pop
push
pop
arpl
je
ret
add
adcb
add
push
ja
in
adc
dec
fwait
test
inc
clc
call
or
andb
mov
mov
fistl
mov
jnp
popa
out
mov
jmp
pop
jp
pusha
incb
mov
sub
dec
or
scas
rclb
mov
add
add
cmp
ret
stos
loopne
and
arpl
jl
sub
cli
imul
fxch
out
xor
mov
sub
fdivl
hlt
hlt
cmc
sub
adc
out
mov
or
cmp
push
jns
icebp
cmc
sbb
int3
add
icebp
cld
sahf
mov
scas
in
jo
out
int3
lock
push
shll
mov
dec
push
cmp
cmc
and
adc
lock
shll
and
test
sarb
push
fs
jmp
adc
inc
dec
dec
jns
aaa
cmpsb
movb
sbb
nop
decl
pop
stos
push
std
dec
loop
stc
cmp
cs
or
dec
dec
or
xor
inc
hlt
mov
aas
sub
pop
test
repz
hlt
movsb
xor
jo
cltd
fbstp
test
mov
js
cmp
lods
mov
arpl
sbb
ret
stos
and
scas
add
je
and
push
xor
int3
sti
xor
jne
add
jmp
sbb
dec
sub
pop
clc
lret
push
cli
orb
inc
mov
test
fucom
sub
mov
push
or
jecxz
xchg
sub
jnp
mov
clc
scas
dec
cmp
pop
mov
push
push
jle
loop
jecxz
xor
lds
sahf
aas
lea
jmp
adc
or
mov
pusha
movsl
xor
xor
leave
stc
ficomps
and
test
fldcw
pop
or
cmp
mov
inc
jp
int3
push
fsubrl
pushf
pusha
and
fistl
adc
mov
insl
xor
and
shr
loopne
iret
add
mov
movb
dec
aas
cs
pushfw
pop
cmc
icebp
daa
fstl
or
shll
add
test
popa
adc
inc
cmp
push
pop
push
and
adc
sub
pushf
push
insl
cld
sub
fwait
pop
push
push
cltd
or
flds
cmpsb
dec
or
lret
call
push
adc
je
jg
dec
pop
mov
out
push
dec
jecxz
jne
leave
xchg
test
add
pop
add
lcall
adc
add
call
stos
aaa
int3
add
ss
pop
negl
int
daa
dec
cmp
xor
xchg
jecxz
jmp
mov
or
cmc
loop
pop
and
jmp
ds
out
add
jno
orps
fidivrl
insb
add
push
add
scas
xor
imul
sub
icebp
xor
mov
push
subb
mov
sbb
shll
xchg
pop
jmp
xor
adc
sbbl
dec
les
jns
test
xor
jmp
xor
ja
xchg
call
jnp
xorps
cmp
int
ljmp
fistl
mov
stos
lahf
std
pop
addr16
and
loop
pop
loop
stos
shll
xchg
mov
push
roll
jo
rcrb
mov
mov
mov
or
dec
and
mov
call
sbb
fsubs
test
mov
push
out
cmp
daa
mov
xlat
imul
stos
in
jb
xlat
jne
nop
ds
scas
push
dec
mov
pop
hlt
cwtl
push
dec
test
jecxz
call
cld
jmp
ficoml
and
or
fsubl
add
pop
xchg
dec
cli
scas
notb
xchg
mov
inc
xchg
call
mov
int
sub
into
sub
and
adc
push
in
adc
fisttps
adc
pop
and
popa
js
cmpps
pop
daa
sub
push
pushf
and
or
insb
fldt
fnstcw
divb
bound
fnstcw
push
xor
fsts
adc
adc
adc
ljmp
pop
cmpsl
mov
js
mov
xchg
in
push
xor
shlb
jnp
dec
outsl
mov
addb
xor
xor
cmp
add
mov
mov
inc
loopne
mov
mov
in
sbb
xor
in
pop
hlt
test
in
add
imul
mov
sbb
sahf
push
mov
aas
hlt
pusha
mov
xor
xor
shlb
push
je
add
das
fwait
arpl
sub
gs
int3
mov
es
cli
test
mov
mov
mov
dec
pop
sbb
out
fsubl
dec
std
es
xchg
sbb
or
mov
popa
ja
push
sbb
sbb
bound
xor
dec
push
pop
mov
push
fstps
addr16
mov
pop
fwait
dec
std
scas
pop
push
push
fidivrs
mull
or
aaa
call
es
mov
cmp
sti
pop
adc
hlt
nop
stos
jns
fcmovnbe
sbb
jmp
sub
xchg
ss
xor
cmc
repnz
dec
fiaddl
dec
inc
clc
or
in
or
lods
cmc
in
sar
xor
ljmp
sub
fs
rol
stos
loopne
neg
repz
dec
lock
or
and
stos
aaa
les
aas
and
leave
mov
ds
pop
pop
inc
popa
jecxz
adc
lahf
into
pushf
dec
mov
rcll
pop
addl
dec
xchg
aas
push
mov
aas
sti
push
and
adc
pop
adc
jl
fdivrl
iret
dec
gs
cmp
repz
pop
pop
bound
clc
inc
lods
sub
jnp
loope
inc
ja
pop
movsb
in
addb
in
sbb
mov
dec
inc
aaa
mov
and
imul
jecxz
js
sbb
popf
add
cmp
mov
lahf
jg
les
or
push
cmp
cmpsb
xchg
sub
popf
xlat
in
ds
push
sub
and
cmp
pop
and
add
sub
clc
cltd
adc
add
lods
fsubrs
dec
pop
mov
lds
test
das
ret
insl
or
push
pop
push
mov
sub
je
jg
mov
in
mov
jmp
jg
dec
or
out
dec
mov
xchg
lret
pop
lods
aam
adc
push
cmovl
pop
popf
jne
mov
out
jo
adc
cmp
arpl
imul
cmp
stc
out
ss
push
inc
jmp
sbb
movsl
push
push
out
sti
icebp
cli
pop
loope
jno
in
jb
fs
sub
fsubs
out
fsubrs
mov
cmpl
call
ret
pop
sarl
rolb
adc
rcll
pop
inc
jb
loope
cli
push
inc
std
push
adc
jnp
out
test
mov
add
out
notb
in
fidivl
aaa
stos
push
pop
xchg
js
lock
gs
mov
mov
insl
jmp
pop
bound
das
add
outsl
sub
xor
or
cmpsb
arpl
out
mov
xchg
int
je
pusha
jns
push
mov
test
ja
dec
scas
and
mov
dec
subb
ss
loope
les
imul
inc
pop
es
dec
xchg
jg
out
rcll
pop
cmpsb
and
pop
out
pop
aam
lahf
jbe
cmpsb
xor
pop
sar
add
xor
adc
ja
cmc
push
fwait
enter
bound
or
sbb
add
sbb
loope
pushf
dec
mov
ss
and
push
roll
in
xchg
push
sbb
jbe
pop
fwait
xor
incl
ljmp
cmp
mull
or
mov
stc
adc
inc
sub
inc
and
jne
cli
pop
mov
xchg
scas
pop
lcall
or
clc
mov
lock
mov
imul
sbb
dec
and
xor
loop
negb
pop
rolb
adc
pop
push
pop
jnp
shll
ja
out
daa
sbb
push
mov
push
cltd
pop
mov
mov
push
pushf
pop
cmpsl
cmp
cmp
jo
out
mov
shlb
int
outsl
cmp
cmp
imul
js
mov
cmp
lea
movsb
es
out
icebp
out
ds
insb
fidivl
into
or
insl
sbb
call
std
clc
fildll
add
cli
xchg
jl
mov
mov
cltd
repnz
adc
cmpsb
push
or
jnp
insb
out
orb
mov
cmpsb
ss
rcr
dec
fwait
mov
and
mov
fcomps
push
jb
jg
sub
addr16
adc
mov
fwait
rcrl
push
or
add
xchg
sub
das
out
inc
push
ret
cli
pop
cltd
ds
dec
mov
dec
mov
adc
xor
shll
jl
mov
push
jo
addl
dec
insl
and
rclb
inc
mov
repz
mov
shrb
icebp
and
jl
adc
push
pop
and
sbb
fistpll
leave
adc
adc
shll
imul
test
jge
stc
cmc
cmp
mov
inc
pop
sbb
cwtl
xor
bound
mov
cmp
add
leave
ret
and
idivb
pop
xor
cmp
aad
rorb
add
je
inc
or
shll
daa
cmp
jne
fildll
mov
sub
std
sbb
in
sbb
into
inc
jbe
out
cmp
jmp
xor
jl
or
shl
filds
cmp
xlat
fst
aam
mov
xchg
add
pusha
cmp
inc
test
mov
in
aaa
or
call
and
fstpt
lret
shl
daa
fmul
xchg
add
call
ret
shll
sbb
and
imul
mov
mov
jle
sti
sbb
add
test
xor
xorb
pushf
stc
pop
mov
mov
fwait
lahf
jl
adc
mov
mov
fadd
stc
add
hlt
stos
aaa
imul
inc
cli
out
xor
int3
xor
xchg
or
jns
jecxz
arpl
lahf
and
dec
je
xor
cmpsb
test
mul
mov
mov
sbb
cmpsl
sbb
adc
jge
xchg
cmpsb
or
hlt
sub
mov
sub
in
cs
xlat
lods
int3
mov
popa
xchg
fldcw
mov
movsb
mov
loop
lock
mov
int
nop
fnsave
in
push
mov
insb
pop
dec
fwait
jb
into
arpl
pop
cmp
push
xor
pop
testl
xchg
lret
cli
out
cltd
mov
sub
int
add
movsb
adcb
add
or
shll
sbb
jo
js
loope
lahf
lds
xchg
test
xchg
pop
out
pop
mov
std
dec
arpl
mov
sub
dec
xor
repz
fcomi
jns
pop
dec
cmp
cmpsl
and
stc
push
xlat
xchg
adc
and
test
jle
xor
pop
outsl
fucom
out
and
out
xor
pop
inc
jmp
aam
push
push
inc
mov
testl
sahf
pop
dec
lods
or
dec
mov
out
sbb
pop
inc
cmpsb
call
movsb
cmp
sub
mov
inc
xor
outsl
mov
push
test
pushf
gs
fistpll
or
loopne
mov
mov
jns
lret
mov
push
dec
repnz
jecxz
rorl
or
jl
test
movsl
push
push
enter
out
push
pop
rcrl
mov
add
jo
imul
js
jle
and
jp
hlt
cltd
ds
not
push
fldenv
mov
insb
cmp
stos
or
mov
addr16
adc
add
fistpl
cli
inc
std
aaa
push
add
fiaddl
insb
out
insl
das
ljmp
in
mov
in
loop
in
mov
sbb
std
mov
dec
mov
aas
mov
clc
stc
mov
mov
ret
ja
inc
lcall
aad
jle
outsb
and
gs
cmp
loop
xor
mov
mov
int3
xchg
mov
lcall
dec
dec
clc
fdivs
mov
mov
ds
stc
sbb
push
push
xchg
sub
stos
xchg
pop
xchg
fsts
xchg
cmp
sub
adc
es
lods
lea
sub
sti
arpl
aas
ret
loope
in
or
push
ficompl
dec
lcall
dec
adc
fldenv
mov
or
cmp
out
jnp
fistpll
mov
inc
mov
xchg
push
lar
push
ja
in
in
cli
push
fcomp
lock
inc
out
jg
cmp
ret
and
pop
adc
fdivs
push
shlb
movsb
cmp
aad
cmp
ss
and
arpl
jg,pt
push
adc
or
add
xlat
outsl
movsb
and
stos
rorb
add
mov
aas
push
sub
adc
mov
dec
pop
push
xchg
int
cmpsl
dec
daa
jns
or
fidivl
jecxz
inc
push
mov
mov
jg
mov
lea
out
ret
test
divl
adcl
mov
mov
mov
lods
leave
cmp
dec
dec
fsubl
mov
jge
pop
ucomiss
mov
xchg
jge
in
adc
sub
cld
jnp
shld
lcall
jl
sbb
inc
cmp
xor
cwtl
dec
lret
rorl
stc
fwait
xchg
mov
fidivrl
aam
sub
and
lcall
xchg
jp
inc
pop
test
fdivs
cmp
sub
out
cmp
or
loop
inc
aas
sbb
ja
mov
fwait
fs
xchg
bound
pusha
push
pushf
dec
cmp
imul
mov
cld
push
test
push
test
scas
ljmp
rclb
and
sub
int3
dec
pop
xchg
dec
aam
adc
add
orl
xchg
adc
sub
sbb
xlat
adc
fwait
addb
push
aam
mov
and
xlat
mov
inc
xchg
shlb
icebp
bound
les
pop
jae
icebp
xchg
cltd
push
rclb
jp
mov
xchg
sub
cltd
pop
mov
jg
addl
lods
sub
pop
cmp
ds
and
scas
adcb
in
out
push
xchg
jg
mov
pushf
xchg
push
add
or
sarl
jg
push
rcrl
mov
sbb
mov
imul
inc
inc
fisubrl
jbe
lcall
xor
orl
inc
pop
push
cmpl
shll
inc
incl
push
adc
rclb
mov
shll
push
mov
mov
or
clc
dec
in
leave
ljmp
pop
loope
xchg
shll
enter
dec
sbbl
ret
dec
lock
stos
jns
or
enter
pop
push
adc
mov
divl
xchg
into
jp
inc
mov
and
inc
fdiv
scas
mov
xor
xchg
and
dec
adc
xor
adcb
xchg
inc
mull
in
in
lret
cwtl
jge
push
clc
inc
fnsave
jnp
repnz
les
leave
xorl
jmp
jg
inc
push
jns
jp
aam
out
dec
cmp
mov
hlt
test
stos
aam
pop
ret
xchg
mov
push
addb
out
mulb
mov
cmpsb
stc
aas
sbb
out
fsubrs
lret
or
aam
sarb
mov
mov
or
inc
je
or
push
mov
jae
dec
xchg
jecxz
xor
pop
mov
fildl
movsb
xchg
adc
lock
xor
adc
out
dec
mov
mov
popf
pop
mov
mov
shrb
paddw
std
cli
sbb
cmp
add
pop
aas
pop
xor
rcrb
mov
inc
sub
pop
lcall
imul
sahf
inc
push
and
std
or
xor
popf
push
xor
ret
int
mov
and
lods
loopne
mov
cmpsl
cltd
sbb
sub
jno
loope
outsl
imul
mov
pop
mov
insb
repz
add
and
pop
xchg
out
mov
xchg
in
loop
cmp
stos
icebp
lds
cwtl
and
mov
jecxz
dec
icebp
jge
stos
ficoms
in
xchg
repnz
fisubs
es
and
xor
and
mov
pop
ds
popf
push
xchg
pop
xchg
aaa
mov
sbb
mov
xlat
scas
adc
mov
mov
push
xchg
pop
out
push
cmp
or
das
fldenv
imul
repnz
mov
cmpsb
movsb
mov
mov
push
xchg
movsl
test
test
and
pop
inc
leave
test
add
jl
test
arpl
dec
sbb
cmp
pop
shlb
sub
aam
mov
cmpsl
in
rcl
in
push
fwait
mov
clc
push
aas
repnz
repz
ret
fisubs
pop
jmp
mov
adc
popf
push
add
xlat
mov
mov
shll
inc
shlb
incb
and
inc
arpl
jb
dec
inc
mov
mov
push
shrb
xchg
scas
dec
cmpsl
mov
enter
out
jo
xchg
and
pop
fildll
daa
bound
inc
mov
out
push
or
nop
cmpsb
mov
pop
outsb
ficompl
jb
les
cmp
sbb
aaa
in
mov
dec
xchg
pop
ljmp
mov
outsl
in
adc
push
xchg
xor
sbb
or
jb
test
mov
insl
lock
fidivs
dec
inc
xorb
jecxz
in
ds
stc
cmp
iret
fiadds
dec
jno
cld
dec
sbb
sbb
jnp
in
leave
add
xor
cmpsb
mov
push
xchg
and
jmp
inc
xchg
add
stc
aas
or
mov
push
ret
jns
imul
out
popf
mov
pop
enter
jmp
pop
lret
sarl
jg
sbb
pop
cmp
sub
mov
or
mov
insl
lods
movsb
mov
inc
and
pop
mov
push
mov
cld
iret
xchg
jecxz
mov
pop
out
cmpb
inc
pmullw
fstpt
and
push
mov
and
jge
movsl
jg
lret
test
cmp
dec
cli
mov
sub
pop
bound
xchg
in
jp
ret
sbb
or
shll
aad
cmp
mov
jge
cmp
add
cmpsb
fnstenv
or
jecxz
jmp
insl
add
int3
jo
cmp
mov
adc
inc
inc
mov
icebp
stc
enter
mov
iret
jg
xchg
cli
int
cmp
jle
sub
mov
lret
mov
call
push
shrb
add
repz
inc
jecxz
mov
jne
movsb
mov
test
stos
fs
fdivs
pop
xchg
fnsave
leave
pop
inc
movsb
sub
xchg
add
mov
or
cmp
mov
outsb
pop
sbb
push
xchg
data16
pushf
stos
sub
adc
dec
js
in
cmpsb
adc
aaa
data16
xlat
pop
push
and
call
aam
cli
ret
pushf
es
bswap
call
imul
fs
mov
sub
imulb
mov
repnz
adc
xor
add
addr16
int
daa
fs
inc
lods
inc
dec
subl
pop
fildl
fs
stos
jmp
std
ja
lock
jnp
cmp
xor
push
push
movsb
clc
adc
pushf
outsl
fdivrl
push
push
leave
mov
xchg
jne
xchg
lds
mov
add
pop
loop
mov
mov
sbb
add
sub
mov
lcall
fnstcw
in
and
jo
test
or
pminsw
or
shr
hlt
cld
jns
dec
xor
inc
xor
std
jle
imul
das
mov
push
cs
lock
imul
sbb
mov
cld
das
fmulp
imul
cmpsb
into
jp
inc
add
ret
fidivl
xchg
jge
and
imul
call
sbb
jae
push
mov
jmp
push
and
sbb
les
pop
inc
lds
add
sub
add
mov
xchg
out
pop
mov
rclb
hlt
sbb
adc
insl
daa
imul
pop
das
xchg
jns
xchg
sub
adc
pop
lods
adc
pop
cmpsl
sbb
pushf
std
jle
pop
loope
mov
shlb
cwtl
dec
or
cmp
in
pop
jnp
mov
pop
rolb
fcmovnbe
jge
mov
dec
adc
popa
loop
sub
jno
xchg
mov
mov
push
bound
push
rcrl
addr16
adc
js
inc
imull
mov
flds
jnp
jge
mov
sahf
nop
int3
mov
push
lds
pop
lds
or
fs
lret
movhps
mov
outsb
fsubrl
orl
and
rep
adc
fisubrs
push
jns
xchg
pushf
and
or
push
mov
imul
mov
jns
aas
loopne
cwtl
data16
pusha
das
inc
sub
jbe
scas
mov
jns
int3
pop
ss
int3
call
or
jae
test
arpl
imul
andl
dec
shl
dec
adc
je
ds
dec
out
sbb
inc
add
cmc
xlat
dec
into
lds
stos
xchg
jp
subb
sbb
aaa
push
stc
out
pop
pop
dec
adc
lahf
or
adc
cmpsb
sbb
pusha
inc
aam
aam
push
inc
jb
sub
mulb
aas
dec
sub
mov
mov
mov
lock
lock
or
das
or
iret
out
in
out
or
adc
and
lahf
lock
movsl
std
shll
call
imul
cmpsb
test
push
add
xchg
inc
pop
sbb
mov
jbe
push
jp
pushf
data16
fwait
in
xchg
mov
mov
and
mov
xor
adc
push
inc
outsl
test
scas
mov
cwtl
xor
pop
or
incl
nop
aam
shl
daa
pop
idiv
lahf
or
inc
pushf
setg
rorb
sub
and
mov
popf
xor
popf
push
mov
aaa
pop
mov
jl
test
es
sti
and
mov
lahf
leave
inc
fadd
clc
mov
test
pop
add
push
inc
das
and
icebp
out
mov
and
mov
pushf
int3
sti
imul
pop
or
cmp
arpl
dec
hlt
fsubs
pop
notl
enter
gs
xchg
adc
loope
jo
add
aam
test
lret
inc
scas
sbb
mov
push
jno,pn
jb
push
and
test
popa
or
inc
addb
clc
mov
add
movsl
jb
outsb
repz
push
sti
gs
aad
pop
mov
insb
jle
or
mov
ret
mov
inc
shll
divl
inc
pop
out
mov
aam
lcall
vmwrite
add
add
ret
or
adc
inc
cmp
cs
sub
mov
sbb
cbtw
push
xlat
jg
lock
sahf
and
and
popa
adc
mov
jae
xchg
lcall
in
xchg
loop
ret
shlb
push
or
addb
cmp
fwait
aad
cmp
loope
movsl
stc
sahf
call
in
popl
xor
out
dec
push
movsb
cmp
in
out
lock
gs
pop
dec
rcr
mov
fidivrs
call
jne
mov
stc
mov
xchg
sub
lea
mov
cmp
adc
lods
mov
dec
cmp
lock
loopne
and
adc
rcll
movsl
out
pop
dec
les
mov
mov
loopne
and
out
loop
inc
es
aam
inc
pop
xchg
inc
lea
scas
fs
data16
push
add
decl
add
test
cs
sbb
loope
dec
xor
jns
pop
arpl
jle
ret
movsl
sahf
push
mov
arpl
lea
sub
mov
push
mov
fisubs
jl
inc
scas
popa
jo
aas
gs
adc
iret
mov
add
push
inc
lea
xchg
cmp
add
cmpsl
out
inc
adc
and
leave
call
fdivl
aam
jecxz
cmp
mov
cmpb
push
pop
mov
push
ds
adcl
sub
push
repz
movsl
into
imul
pop
inc
icebp
xchg
stos
and
jo
cld
lds
mov
mov
mov
add
xor
cmpsl
mov
cs
sahf
or
fadd
xlat
negl
mov
rcr
and
push
sti
int
sub
in
pop
push
call
mov
inc
icebp
pushf
mov
and
pop
bound
jp
jmp
in
mov
std
push
add
pop
cld
stos
stos
mov
negb
es
in
xchg
mov
je
mov
mov
addr16
xchg
jno
inc
mov
inc
push
cltd
aad
repz
mull
or
lds
add
aaa
jmp
dec
inc
daa
aas
in
out
jbe
pop
add
mov
das
xor
or
jae
shlb
es
cmp
add
cmp
or
adc
mov
ja
sbb
pusha
lcall
dec
imul
and
cmp
jl
cmp
push
mov
pop
inc
rcl
cld
ss
adc
adc
cmp
sbb
popf
add
dec
mov
mov
mov
popa
push
add
xor
xor
cmp
imul
lods
outsl
enter
daa
pop
pop
dec
and
adc
jl
mov
mov
adc
loopne
sub
jo
fwait
push
mov
lcall
das
cmpsb
imul
inc
das
rcll
jbe
adcl
aaa
addb
cmp
push
mov
int
push
and
jbe
pop
test
into
lret
or
emms
xchg
jmp
dec
mov
jle
jno
fisttps
jmp
stos
cmpl
repnz
jmp
sti
lahf
cmpsl
loope
fsubl
lods
setb
addr16
test
addr16
mov
sbb
pop
inc
andl
and
lret
xor
inc
sar
sti
sub
mov
icebp
jge
loope
jg
jp
and
mov
pop
xchg
cli
ss
sti
inc
int
jg
cmp
lret
mov
sub
sub
sbb
stos
fincstp
aaa
lahf
jae
les
push
push
shrl
cwtl
push
mov
push
add
in
xchg
push
fwait
insb
lahf
stc
mov
ja
mov
pop
dec
dec
sub
adc
mov
xchg
nop
test
test
aad
cld
mov
stos
sbb
ss
mov
insl
and
out
test
daa
movsb
cmp
pop
mov
push
test
sub
fs
in
aas
sub
jb
or
mov
or
sub
out
cwtl
push
jb
insl
out
dec
jp
or
or
push
dec
lret
lds
push
inc
inc
push
sub
gs
add
ss
fidivrl
jo
jbe
push
dec
push
inc
inc
stos
xchg
pop
jnp
push
mov
mov
push
aad
icebp
lods
lods
jns
inc
xchg
jge
shrb
leave
add
xchg
fstpl
push
jne
mov
mov
cld
and
and
cmp
stos
fs
dec
testl
cmc
jmp
adc
xlat
or
cld
mov
dec
inc
fs
cmpsb
sarb
push
xchg
int3
push
jae
push
ret
and
jae
cmpsb
xchg
cld
sbb
push
push
loop
xchg
mov
orl
xor
fmull
adc
lds
mov
cmp
int
in
inc
push
inc
in
inc
inc
js
jecxz
rclb
test
call
push
pushf
rorl
andb
stc
stos
lret
mov
cmp
inc
inc
dec
orb
pop
imul
add
fsts
inc
jmp
jbe
repz
xabort
data16
push
imul
and
pop
mov
out
es
push
push
xor
xor
sub
push
fcomps
lret
and
out
push
xchg
adc
lret
xchg
adc
sub
mov
imul
in
pusha
test
mov
cwtl
dec
outsb
imul
arpl
adc
jo
aaa
or
xor
mov
mov
or
mov
mov
xor
cmpsl
mov
xor
sbb
push
call
idivl
xor
shrl
sub
imul
pop
add
dec
pop
jmp
and
dec
dec
adc
stos
ja
lock
or
and
out
stos
jge
lea
adc
jge
jo
sbb
ljmp
jno
xorl
push
mov
mov
add
cmpsl
inc
mov
mov
adc
subb
in
data16
lods
pushf
push
rol
mov
and
mov
jp
out
mov
rclb
adc
sub
stc
icebp
pop
inc
jmp
test
cmp
je
shll
push
push
out
xor
and
aad
mov
subb
and
mov
inc
lods
and
out
cmpsl
pop
inc
inc
dec
mov
or
divl
test
lret
add
inc
jno
dec
mov
lcall
inc
xchg
xchg
fists
lods
mov
sahf
mov
ja
cmp
adc
xlat
ret
mov
fwait
sbb
gs
adc
test
push
mov
push
sti
lcall
out
daa
lds
ret
inc
mov
imulb
xorl
roll
mov
fwait
and
dec
or
jge
or
test
inc
sub
sti
sbb
repz
in
bound
inc
add
cs
fsubs
push
mov
mov
cwtl
and
in
lods
or
es
pop
ja
addb
jbe
pop
repnz
aas
sbb
push
out
adc
out
pop
xorb
sbb
jnp
rorb
fistpll
enter
mov
add
pushf
add
cmp
mov
push
xor
cmp
lds
stos
inc
jo
push
decb
adc
sbb
repnz
mov
insb
div
call
pop
sti
sub
jl
std
xor
loopne
push
outsl
mov
pop
ss
nop
sarl
xor
aaa
aas
out
or
cli
xor
pusha
adc
sub
sbb
lret
cwtl
insl
cmp
bound
jg
cmpsl
bound
fnsave
cmp
and
sbb
jecxz
ljmp
mov
jecxz
xor
ja
mov
mov
daa
test
add
ret
add
std
inc
pop
jmp
mov
call
cmp
test
cmp
sub
stos
out
adc
pushf
data16
mov
push
js
scas
jo
mov
imul
in
shl
mov
dec
jae
xchg
ljmp
jle
iret
sti
sbb
add
adc
jmp
jge
sbb
pop
xchg
sbb
xchg
or
inc
sub
add
loope
xor
xchg
cmp
push
add
cli
mov
fwait
jp
aas
lea
lret
jns
imul
mov
lods
out
sub
mov
fwait
jo
shrb
outsb
xor
mov
je
lahf
push
pop
lret
insl
call
repz
stos
aaa
scas
push
cmp
and
xchg
sahf
mov
pop
ja
hlt
cmp
cmc
sarb
fidivrl
xchg
aad
inc
xor
movsl
dec
push
pop
push
jo
add
dec
cmpsb
adc
push
or
ficomps
aas
jmp
sti
rorl
or
mov
xor
jge
pop
sbb
sbb
lret
das
xchg
xor
jo
ret
xlat
push
jge
jb
inc
push
xchg
cmp
sbb
idivb
or
xor
lods
or
lahf
sbb
push
dec
jge
mov
add
mov
push
add
add
popf
xchg
out
mov
aaa
adc
pop
adc
jge
rcrb
lcall
mov
add
jmp
fwait
cmp
nop
xchg
in
jo
pusha
lods
test
inc
ret
mov
fisubrl
push
jo
jl
outsl
add
shll
push
mov
push
loop
dec
je
outsl
jnp
rolb
stc
dec
ljmp
iret
add
hlt
jbe
mov
cmp
aad
or
lods
add
mov
dec
jecxz
jno
jnp
xchg
out
mov
xchg
lret
cli
push
mov
outsb
outsb
inc
push
sbb
test
xchg
cmpb
sbb
lahf
push
daa
adc
call
ja
ss
bndldx
scas
hlt
popa
jecxz
call
dec
lods
clc
and
out
or
sarb
xor
gs
pop
in
mov
sahf
mov
mov
jnp
dec
je
inc
outsl
jne
ret
popf
add
or
pop
outsl
insl
adc
sub
dec
cld
aas
aad
out
scas
cwtl
testl
and
pop
mov
add
mov
aad
jle
sbb
push
repz
test
pusha
or
popf
arpl
xchg
pop
lcall
in
ljmp
pop
push
add
mov
fsubs
jb
dec
stos
xlat
je
sbb
cmp
lea
ljmp
sbb
dec
loop
nop
les
aaa
fld
jg
aam
cmc
dec
inc
xor
rolb
roll
scas
mov
fs
fimuls
imulb
xchg
test
divb
mov
sbb
jecxz
pop
pop
jns
fwait
xchg
push
mov
push
addr16
pop
xlat
jl
pop
jne
jno
popf
sbb
arpl
fcompl
inc
pop
rol
fwait
xor
xlat
xchg
bound
das
push
mov
leave
cmp
mov
pusha
and
cwtl
repnz
les
sub
push
dec
xchg
or
sub
xchg
repnz
xchg
nop
xchg
sbb
or
jmp
cmpsl
das
pop
icebp
fmull
pushf
js
mov
imul
lea
push
mov
jmp
xchg
mov
xor
or
shll
mov
adc
xor
mov
in
adc
sbb
push
dec
shll
mov
sbb
push
adc
jo
mov
out
fimull
test
xor
or
push
inc
mov
cmpsb
stos
mov
xchg
mov
fldenv
pop
daa
addr16
imul
in
sub
adc
and
add
cmp
loopne
out
add
das
cwtl
adc
es
mov
imul
sbb
inc
adc
out
int3
xchg
fildll
jo
mov
add
pop
xchg
punpcklbw
nop
ss
mov
mov
ret
add
xchg
ficoml
pop
xchg
jecxz
outsl
inc
stos
in
xchg
cli
stos
and
xchg
ret
dec
mov
xchg
sahf
out
push
mov
push
adc
mov
fnstenv
les
mov
mov
push
jb
push
push
and
out
test
es
negb
dec
gs
jle
inc
inc
aam
mov
pop
leave
push
sbb
popf
aam
ret
jne
fwait
inc
and
icebp
sbb
test
cs
and
filds
sbb
inc
imulb
cld
cwtl
and
cmp
incl
push
jmp
sbb
mov
js
xorb
ss
inc
push
xchg
mov
je
or
inc
inc
cld
test
cld
lcall
es
mov
js
cld
jle
and
imul
dec
xchg
je
hlt
stc
and
jno
movsl
xchg
sti
jl
popf
inc
inc
ljmp
lods
iret
xor
popf
mov
pop
std
push
mov
xor
inc
aas
cmpb
xchg
lcall
cltd
push
sar
jno
jns
xchg
call
aaa
cmc
push
out
ret
test
popf
dec
in
arpl
xchg
sbb
fnsave
mov
lret
sbb
jl
leave
imul
ds
xor
lret
mov
pop
fadds
sar
pop
inc
xchg
mov
sub
sbb
stos
xor
mov
jo
push
push
adc
leave
adc
pop
jne
imul
jp
or
rolb
jmp
lock
mov
fbstp
adc
or
repz
xchg
xlat
inc
ret
icebp
lds
sub
repz
sbb
sub
cmp
mov
and
jmp
and
insl
inc
pusha
pop
lcall
jno
aam
cli
rcrl
push
push
pop
sub
popf
and
popa
push
or
out
dec
cmp
xorb
or
and
mov
jmp
shll
mov
xor
fcoms
incb
mov
fidivrl
jo
inc
jnp
je
xchg
xchg
scas
sub
adc
xor
dec
ja
inc
or
xchg
aas
stc
mov
push
pop
mov
xchg
adc
fbld
and
push
inc
scas
mov
mov
xchg
test
sbb
sbb
mov
xchg
xor
jecxz
push
xchg
cmp
jno
cmp
out
shrb
outsl
clc
insb
test
fistps
les
mov
iret
imul
sbb
and
dec
mov
mov
loop
push
mov
sar
data16
aam
pop
mov
scas
inc
or
nop
lret
shrl
adc
lcall
sub
lcall
mov
fs
cmp
pusha
in
mov
orb
jno
or
adc
jae
xchg
cwtl
repz
mov
inc
in
sbb
scas
insl
dec
les
out
cli
pop
jno
xchg
add
and
xchg
or
dec
push
shr
faddl
jmp
dec
mov
insb
into
jmp
stos
mov
addr16
sbb
sti
dec
sub
cvttps2pi
jp
popl
or
and
xor
add
cmp
mov
xchg
lods
cmpsb
fistpl
popa
jae
lods
mov
xlat
mov
mov
sbb
mov
mov
and
or
jle
sub
and
leave
cmp
lds
push
outsb
cmp
cs
cwtl
mov
lds
xor
fnstenv
cltd
jl
stos
inc
jp
orl
xlat
sarb
adc
js
orb
test
mov
sub
adc
rorb
xor
addr16
popa
adc
dec
xchg
jl
dec
cwtl
mov
repnz
jo
add
dec
mov
stc
cmp
je
xchg
mov
and
jle
push
xchg
push
out
ficompl
ficoml
outsl
aas
mov
and
bound
fiadds
dec
cmpsb
es
adc
mov
in
or
mov
inc
lret
jle
mov
loope
pop
xor
dec
cmp
add
lds
fstps
cld
push
pop
pop
jns
subps
sub
or
xchg
sub
jb
xchg
lea
loope
insl
xor
jae
jl
es
cli
adc
or
mov
xchg
push
jl
cmp
aad
fwait
ss
push
sub
jge
loope
jae
cli
inc
test
sbb
es
aam
sbb
aaa
loopne
sub
sbb
mov
imul
dec
rcrl
pop
and
pop
ret
lahf
jp
push
push
add
nop
outsl
mull
es
adc
inc
dec
sub
les
leave
mov
inc
enter
jecxz
cs
leave
test
push
dec
inc
cmp
inc
loop
push
lods
xchg
pop
xchg
bound
mov
divb
add
fwait
pop
loopne
xlat
jecxz
aam
loope
cmp
out
mov
lret
hlt
mov
es
fwait
inc
aad
inc
cmp
repnz
xor
sti
sbb
mov
aam
mov
xchg
mov
loopne
ss
mov
add
mov
add
test
fwait
inc
and
lret
cli
sarl
loop
or
fsts
xchg
dec
jo
hlt
cmc
aam
jecxz
xor
sub
add
mov
mov
daa
aad
fstpt
mov
je
shl
inc
cmp
iret
jo
mov
fdivrp
outsl
mov
inc
cmp
lea
scas
sbb
enter
cli
pop
lods
jp
cmpsb
sbb
into
addr16
das
mov
or
mov
pop
adc
cmpsb
jp
repnz
icebp
pop
inc
hlt
sub
pusha
mov
int
shll
push
es
add
pop
daa
jnp
pop
adc
cmp
repz
xchg
add
aas
inc
cmp
ja
stos
fdivp
aaa
xchg
sbb
hlt
enter
shlb
std
pop
push
or
xor
popf
aas
and
dec
ja
outsb
push
mov
jb
aaa
lods
icebp
popf
movsb
addr16
push
outsb
xor
push
je
mov
jo
test
nop
aad
add
jg
push
orb
xlat
adc
sub
jbe
daa
popf
dec
sbb
inc
push
out
push
jo
repz
test
gs
add
test
pushf
push
inc
in
scas
jne
sbb
jecxz
std
jl
cmc
jbe
inc
sbbl
popa
and
jl
jl
fld
stos
inc
outsl
lods
shr
add
out
push
pop
enter
jp
xor
jecxz
sbb
xor
jl
insl
inc
mov
imul
bound
ja
cmc
stc
mov
jmp
jb
lds
lcall
fisubrl
ss
xor
sub
jge
cmp
imul
hlt
push
sbb
push
xchg
ss
mov
or
aaa
push
pop
fcompl
stc
mov
inc
add
pop
ret
add
ss
subl
pop
or
xchg
mov
cli
or
cli
dec
sbb
sarl
scas
outsl
clc
xchg
fs
ret
inc
rolb
xor
or
pop
loopne
cmp
leave
push
inc
mov
xchg
mov
stos
sbb
add
push
dec
ret
push
pushf
dec
sbb
pop
loop
xchg
adcb
mov
cmp
push
inc
fistpl
enter
and
adc
sbb
ss
xor
test
js
loopne
stos
fdivrs
xor
inc
inc
loope
add
in
daa
push
xor
pop
pop
mov
pushf
jb
cmp
jmp
shrl
jns
push
mov
xchg
push
hlt
ret
jp
xchg
out
xor
lcall
adc
mov
xlat
aam
es
movsl
mov
push
fsubp
jno
stos
xor
cmp
fs
paddb
sahf
dec
jmp
cmp
in
cwtl
test
dec
sub
shll
cmp
jle
sub
cmp
lahf
cwtl
sub
call
sub
lods
insl
mov
mov
push
shlb
xchg
loopne
or
stos
sub
sbb
es
cmp
and
mov
cmp
inc
rolb
mov
adc
sti
push
cmc
cmp
jge
xor
fwait
out
or
xchg
jge
sti
mov
xchg
test
adc
cmp
inc
in
push
xchg
out
repnz
mov
jb
cmc
xchg
pop
push
push
push
loopne
inc
jp
stos
in
fisubrs
mov
mov
cmp
rclb
sarb
sub
lds
orl
fs
movsb
or
lret
je
sub
test
lahf
xchg
pushf
xchg
mov
mov
les
rdpmc
out
arpl
push
lret
dec
sbb
cmpsb
std
sbb
pop
in
xchg
sbb
xchg
int
push
inc
add
jnp
stos
es
push
or
and
fsubrp
dec
rcll
shrl
push
lods
jp
sub
movsb
xor
pushf
and
pop
lret
and
sub
xchg
int3
pop
and
cmp
cli
dec
dec
adc
inc
arpl
icebp
cmp
xor
or
jecxz
stos
jne
test
push
repnz
pushf
test
inc
ja
fdivl
xchg
shlb
data16
sbb
pushf
mov
fimull
out
and
enter
mov
pop
pop
adc
mov
scas
movsb
cltd
notb
push
pusha
mov
push
ljmp
inc
cmp
mov
test
push
outsl
loop
mov
mov
dec
out
out
dec
cmp
or
fcmovnbe
inc
cmovle
std
shrb
mov
stos
sti
mov
mov
or
or
xchg
pop
and
sbbl
fwait
outsl
mov
jecxz
imul
push
fbld
movsb
mov
cmc
jmp
das
shlb
inc
sbb
inc
stos
sbb
aas
xor
in
aas
and
dec
mov
inc
scas
shrl
insl
add
or
xchg
fidivl
loop
iret
ljmp
dec
fcompl
adc
mov
mov
aam
xchg
inc
aam
add
pusha
push
insb
imul
and
in
fwait
xchg
mov
inc
mov
xor
fcmovb
pop
or
out
mov
push
iret
xor
mov
stos
cmp
rorl
adc
and
mov
sub
dec
loopne
dec
rcrl
push
mov
subb
out
imul
das
push
xor
js
outsl
das
cmp
mov
ja
in
mov
xchg
ret
adc
lret
sub
xchg
xchg
movsl
mov
adc
xchg
adc
push
popa
sbb
maskmovq
xor
scas
jno
pop
jb
test
pushf
ret
add
mov
mov
sub
pop
imul
push
inc
mov
gs
lret
out
loopne
negb
jae
clc
inc
inc
fs
and
lret
jne
mov
add
lret
jge
adc
outsb
mov
or
imul
xor
mov
xor
inc
stos
jg
pop
arpl
addr16
sbb
pop
loopne
jo
lahf
mov
and
aam
adc
clc
adc
add
xchg
cltd
push
xchg
jmp
insb
jbe
daa
sub
inc
stc
ja
xchg
mov
pop
lret
mov
stc
push
inc
or
aam
inc
jg
mov
xchg
scas
push
lods
sbb
fadd
jmp
imul
dec
fnstsw
jmp
mov
loop
push
jno
int3
sub
leave
jnp
mov
ret
nop
fldenv
lea
mov
xor
push
scas
mov
out
jbe
xchg
aas
mov
xchg
lds
out
mov
lcall
insl
add
mov
ljmp
mov
int3
jnp
adc
out
int3
fcomps
out
imul
sbb
jnp
and
mov
stc
addr16
imul
cli
sub
aad
lcall
mov
or
loope
jne
sub
dec
xlat
pop
fisubrl
sub
pop
outsb
add
jae
jl
pop
fwait
iret
pop
stos
ja
scas
dec
mov
lret
imul
test
rolb
mov
mov
mov
movb
test
jb
xchg
aam
aad
insb
add
or
test
push
ret
addl
ret
cmpb
jnp
test
xchg
or
sbb
outsb
aam
in
or
mov
mov
mov
mov
imul
dec
out
movsl
pushf
aam
lods
loope
jae
out
cltd
test
mov
adc
and
pop
xor
inc
mov
je
fcmovnu
les
fistpll
fbld
xchg
repnz
adc
xor
xchg
shrl
mov
inc
sub
cmc
rep
cli
ja
in
jl
xorl
pop
in
sti
push
pushf
hlt
scas
test
test
mov
jl
out
out
xor
and
mov
out
aaa
ficompl
ja
and
push
mov
ljmp
adc
jae
fidivl
shl
mov
lods
xchg
jge
push
cli
or
sub
dec
std
mov
adc
into
lret
sub
daa
stc
daa
iret
push
fcmovnu
adc
jle
push
add
fidivrs
mov
mov
add
cs
add
jg
nop
fisubrl
xchg
cmp
push
push
jle
lret
fs
sbb
leave
out
pushf
pop
icebp
imulb
pusha
push
sub
out
mov
xorb
jmp
int3
clc
pop
in
push
sbb
mov
xorl
mov
leave
pop
dec
add
jmp
mov
gs
xor
xchg
dec
mov
imull
lods
jge
cs
xchg
sub
xor
push
jbe
shll
subb
aaa
shl
mov
ret
sub
pusha
clc
mov
cmc
arpl
cltd
jne
jno
and
lcall
add
fucomip
and
lret
stos
pop
fcmovnb
subl
inc
ficoml
ret
sbb
mov
push
clc
xchg
mov
movsl
or
pop
inc
ficompl
movsb
dec
cmp
test
mov
jno
shrl
push
mov
push
negb
or
mov
xchg
or
sub
cmovge
call
mov
je
insb
aaa
jl
mov
add
xchg
movsl
lods
test
xor
sub
or
mov
mov
add
add
cmp
sbb
cmpsb
sub
jnp
js
and
cli
xor
leave
or
mov
push
jl
outsb
sub
xlat
mov
add
insl
stos
cmp
clc
in
push
dec
xor
mov
mull
dec
cmp
inc
sub
xor
jge
out
dec
daa
sbb
mov
dec
inc
mov
and
inc
and
push
pop
ljmp
int3
sub
scas
xor
adcb
stos
ss
mov
imul
aaa
sbb
sub
cli
andb
mov
mov
sub
emms
dec
sbb
hlt
sarb
sub
loopne
pop
lds
lret
pop
adc
out
ret
stc
cmp
lds
ret
outsb
ficoml
mov
and
cmpsb
sti
jmp
and
dec
jnp
in
int3
xchg
sbb
or
shl
and
lock
je
in
pop
loop
or
es
xchg
fs
loop
jne
inc
test
jg
mov
fisubl
popa
jecxz
mov
adc
aad
fsubs
stos
lods
mov
push
int
pop
fcom
loope
lret
loope
xchg
lock
dec
add
repnz
stos
jle
inc
and
repnz
ja
xor
gs
mov
pop
pop
cmc
push
call
or
cld
cmc
mov
jno
xor
cmp
push
dec
out
mov
and
iret
std
adc
and
jl
sbb
sbb
pop
out
enter
pushf
stos
mov
mov
lea
int3
xor
mov
mov
add
sub
loopne
pop
pop
shlb
and
pop
scas
into
push
rcll
cmpsb
push
iret
add
lcall
sbb
psllw
imul
cmp
xor
enter
inc
mull
stc
xor
outsb
int
ss
dec
fwait
xor
int3
xor
insb
ror
iret
inc
push
push
in
lret
sbb
sub
and
ss
mov
fcmove
inc
aam
jno
pop
dec
push
xchg
test
jle
xor
lea
repnz
jp
sub
pop
add
into
xor
and
push
mov
sbb
and
nop
shll
pop
iret
ljmp
fstps
xor
arpl
add
inc
xor
push
sub
jae
test
pop
arpl
dec
sahf
js
addr16
push
stos
sar
pop
ficomps
mov
lret
mov
add
lret
loop
push
dec
mov
lea
inc
pop
sbbb
stos
into
jnp
push
cmp
nop
mov
inc
xchg
iret
mov
mov
or
pop
sub
clc
cs
fwait
jb
mov
ret
test
dec
fwait
mov
and
mov
fistpll
int
mov
push
add
lock
jbe
fisttps
sbb
or
lcall
pop
popl
sbb
test
enter
imul
mov
add
jbe
mov
jne
mov
in
mov
not
icebp
cmpb
xchg
aad
ja
cmpsb
rolb
ret
pushf
pop
out
sbb
ret
adc
pop
lahf
pop
call
pop
xor
mov
lcall
inc
mov
inc
pop
test
addb
in
pop
loop
int3
jnp
hlt
fdivl
add
sti
pop
mov
jns
cwtl
lock
mov
int3
pop
xor
mov
cmp
sbb
mov
mov
push
sub
mov
imul
mov
insb
add
add
ja
inc
lds
fnstenv
dec
scas
add
push
mov
stos
pop
mov
hlt
xchg
sbb
outsl
inc
fistps
lahf
testb
dec
pop
in
dec
pop
testl
add
mov
jo
dec
add
mov
xor
cmc
enter
scas
dec
and
ja
ret
fisubl
test
out
cmpsl
dec
xor
aad
or
adc
cmpsl
lods
mov
in
add
shlb
mov
inc
cmp
pop
sbb
in
sbb
xor
shl
subb
push
fsubr
ss
jmp
cmpsl
push
movsb
push
inc
jg
iret
xor
push
fimuls
repz
adc
mov
cwtl
in
les
frstor
fdivrl
jne
push
and
movsb
cltd
ud1
add
lods
repz
cs
ds
stos
stc
incl
fwait
xchg
lods
xchg
pop
shr
and
jns
pop
adc
ret
ljmp
jae
mov
mov
mov
pop
push
ja
orps
dec
lea
xchg
fnsave
pusha
test
sahf
xchg
adc
or
mov
and
adc
cld
shrl
adc
xor
lahf
xchg
lods
or
xor
mov
add
xchg
pop
inc
test
cmpsl
fistl
shl
scas
pop
daa
push
lods
nop/reserved
int3
add
adcb
and
add
mov
mov
adc
mov
insb
jg
inc
sbb
jmp
xor
das
xor
fdivs
cmc
inc
sbb
xor
pop
mov
jnp
js
cltd
sbb
in
insl
or
add
adc
dec
out
int3
jecxz
push
dec
or
daa
mov
jno
inc
xchg
jae
popl
mov
loope
daa
mov
push
or
imul
dec
lret
loopne
jae
push
scas
outsb
into
cwtl
pop
insb
push
scas
sti
inc
cmp
and
mov
mov
int
out
mul
sub
inc
push
xchg
popf
shrb
sub
mov
dec
push
nop
lds
ja
mov
insl
jns
jnp
clc
xchg
mov
inc
addl
in
mov
sub
shrb
mov
popa
shll
jb
push
aad
and
insl
inc
cld
movsb
jl
sbb
xor
loopne
xchg
lods
jmp
xchg
and
mov
pushf
test
loope
mov
leave
test
pop
imul
mov
stc
xor
fcmove
lret
cwtl
mov
lods
jle
fstpt
movsb
mov
repnz
xchg
popl
lcall
adcl
push
mov
add
pusha
sbb
shll
clc
and
sahf
ret
xor
cmp
jecxz
or
cmp
push
clc
cmp
inc
aas
sbb
sub
sub
cltd
leave
out
inc
in
or
push
or
imul
out
sbb
push
dec
xchg
cmp
dec
jns
outsl
imul
test
and
mov
vpaddsb
cmpl
imul
inc
jno
faddl
cmp
icebp
fdivr
out
or
mov
and
test
fisttpl
add
push
bound
pusha
inc
js
mov
mov
inc
dec
lcall
std
iret
pop
hlt
push
mov
push
cmp
pop
shlb
mov
mov
cmpsl
lock
lds
in
adc
or
pop
and
leave
repz
fbstp
push
test
fmull
lret
mov
insl
and
ja
sbb
lcall
mov
aas
xchg
ret
int3
out
mov
mov
xchg
lret
out
aas
test
mov
dec
std
xchg
bound
xchg
sti
in
sbb
push
push
push
bound
adc
inc
dec
sub
mov
push
mov
mov
mov
add
imul
xchg
pop
in
xor
and
in
imul
lods
inc
outsb
fs
push
mov
mov
cmp
lods
inc
dec
add
in
jl
xor
cs
in
jne
cltd
bound
inc
iret
xchg
push
stc
inc
dec
mov
cmp
jp
fsubrl
mov
loope
sbb
push
arpl
or
jo
or
cwtl
pop
rclb
and
test
xchg
and
fsub
sbb
out
arpl
adc
enter
enter
xlat
retw
xchg
push
loopne
les
and
jg,pt
xchg
pop
xlat
cwtl
stos
adc
sbb
roll
mov
shll
les
and
aaa
mov
or
imul
and
out
mov
pusha
enter
sbb
dec
test
jnp
clc
out
stc
popa
jne
out
pop
loopne
add
xor
idiv
inc
fistl
cmp
push
dec
pop
pop
push
mov
xchg
cmc
xor
add
xchg
les
fwait
repnz
and
insl
test
arpl
and
mov
roll
xchg
pop
fsubrp
push
lods
push
and
in
stc
imul
push
xchg
cmp
push
addr16
xor
pop
push
je
test
scas
sub
pop
lahf
fidivrl
sbb
jge
lret
repz
mov
rcl
xlat
and
jne
mov
or
insl
out
add
jne
pop
mov
cmc
repz
dec
push
jae
sahf
push
stc
jb
or
int
add
push
loope
or
sbb
jb
faddp
idivl
or
or
cli
popa
div
adc
repz
mov
mov
into
gs
pop
shrb
xor
hlt
mov
add
xchg
sbb
test
enter
popf
pop
and
frstor
in
fs
adc
xor
pop
cmpsl
mov
and
sub
dec
jnp
pop
jns
lahf
bound
inc
pop
inc
js
inc
pusha
inc
dec
jns
push
pushf
lods
ret
insb
xor
rcll
in
mov
mov
push
add
sub
mov
adc
jmp
adc
lods
pop
adc
daa
loop
inc
push
jo
ficoms
iret
cwtl
sbb
shr
push
pop
sub
xchg
mov
jnp
jge
pop
outsl
cmpsl
cmpsb
push
mov
or
dec
sbbb
and
mov
push
adc
pop
lret
pop
fsubr
nop
push
mov
mov
mov
xchg
or
shr
pop
push
into
push
call
jg
mov
pushf
aam
or
mov
and
out
sti
enter
dec
sbb
stos
std
orl
xor
or
outsb
mov
sub
loop
push
jns
test
add
into
arpl
cli
xchg
scas
cmp
push
stos
mov
mov
fs
imul
cld
mov
jb
hlt
insl
bound
test
iret
mov
add
ds
jbe
fcmovnu
in
inc
loop
ja
mov
push
ds
test
mov
test
addr16
nop
pop
or
push
test
les
into
std
jnp
push
cmp
push
or
dec
push
std
lea
ret
inc
sub
dec
xchg
xor
out
pop
stc
hlt
add
xor
das
cli
or
adc
dec
es
in
jo
push
lret
ljmp
jecxz
add
xor
fsubs
and
outsl
sub
jmp
inc
mov
loope
jb
arpl
sbb
ss
add
mov
clc
lret
xor
lea
add
into
fisubl
scas
fmull
adc
mov
scas
jno
mov
jb
fnsave
or
test
add
imul
enter
and
cmp
gs
mov
dec
mov
or
push
sbb
sbb
faddl
inc
addr16
out
mov
and
sbb
inc
or
orb
out
sti
sahf
in
mov
sub
mov
sti
ret
fcomps
mov
xor
loop
cmpsb
mov
lretw
adc
xchg
ds
xor
lock
lcall
pop
add
push
dec
jl
call
fstpl
cmc
iret
cmp
arpl
sub
fadd
mov
mov
in
xchg
ffreep
pop
mov
xor
bound
arpl
pop
adc
lods
lock
jne
fldenv
mov
insl
push
mov
das
imul
jmp
scas
addl
movl
sarb
out
imul
adc
mov
lods
jnp
icebp
xchg
mov
mov
movsb
out
push
loopne
mov
mov
mov
movsb
push
inc
adc
fiadds
lods
cmpsl
das
pop
mov
mov
mov
mov
cld
mov
or
xchg
inc
sbb
xor
jae
jp
push
mov
mov
pusha
outsl
enter
and
inc
int
ds
cmp
push
scas
out
dec
or
pop
pop
xchg
xlat
mov
inc
fmuls
pop
adc
cmp
and
push
call
aas
xor
or
test
sahf
dec
ljmp
sub
cmpb
cmp
inc
xchg
pop
cmp
sbbb
jg
loopne
jle
mulb
push
cwtl
daa
fwait
or
mov
jp
push
xor
fildll
sbb
sub
xor
ret
pop
dec
fs
and
stos
xor
and
imul
pop
shl
sub
dec
sbb
loopne
test
dec
xor
fisubrs
jb,pn
mov
sub
sub
dec
addr16
mov
sti
mov
xchg
jb,pt
jae
mov
mov
mov
sub
cmp
xchg
mov
cmp
sub
mov
movsb
push
jns
fdivs
mov
fidivl
mov
ljmp
loope
mov
inc
nop
pop
cmpsb
cmp
das
fildll
xor
xor
int3
add
mov
mov
dec
in
enter
and
push
jmp
inc
mov
jl
adc
jl
pop
xchg
mov
insl
jnp
cmp
pop
and
iret
shlb
pop
push
jmp
cs
movsl
push
jmp
and
mov
into
cmp
aad
push
cmpsb
mov
jb
xor
mov
add
lcall
pop
push
xchg
repz
sti
prefetchwt1
lea
lahf
sbb
adc
cmc
cmpsb
imul
fwait
cwtl
xor
sbb
xchg
xchg
in
or
rorb
fidivs
sarl
inc
jp
adc
out
xor
dec
imul
adcb
push
outsl
mov
ret
bound
fadds
outsb
in
or
clc
int3
inc
lods
jle
bound
movsl
dec
aas
mov
ja
sub
aam
and
jmp
test
push
xlat
addr16
nop
or
or
test
sbb
and
cmp
and
fisubrl
xchg
movsb
outsb
mov
test
scas
bound
cmpsb
xchg
aas
mov
cwtl
mov
fs
sbbl
xor
int3
aad
mov
xor
lea
cmpl
adc
js
sbb
lret
xchg
stos
std
xor
xor
lea
ficomps
xor
jecxz
stc
in
ds
mov
ja
xor
inc
pop
inc
mov
lcall
ret
nop
mov
lods
dec
mov
sbbb
arpl
pop
fcoml
clc
cmp
push
enter
insl
xchg
or
adcl
pusha
and
inc
push
jecxz
scas
mov
cltd
jnp
sbb
jnp
or
xchg
ljmp
les
push
mov
xor
dec
push
inc
mov
push
xchg
sti
sub
fdivrl
hlt
jno
repnz
cs
loop
movsl
mov
mov
ficoms
fstps
stos
dec
xchg
pop
pop
jl
in
jne
hlt
inc
loopne
fwait
notb
pop
xor
pop
pushf
sbb
pop
cmpsl
sub
int3
cli
cmp
outsl
and
adc
pusha
les
add
loope
nop
mov
pop
imul
rcrl
mov
add
cmp
icebp
lcall
jmp
cmp
pop
mov
push
arpl
push
mov
mov
and
addl
inc
mov
in
in
outsb
stos
pop
or
imul
scas
jne
es
pop
insb
out
xchg
repnz
adc
mov
jg
add
cwtl
incb
mov
leave
xchg
or
lahf
ljmp
clc
push
pop
imul
sbb
sub
fwait
adc
add
movsl
out
mov
or
pushf
test
mov
adc
mov
mov
push
or
pop
push
addr16
outsb
negb
pop
hlt
jae
pop
stos
mov
add
push
into
sbb
push
cmp
test
xchg
push
push
pop
and
mov
pop
cltd
outsl
es
xor
out
push
dec
add
dec
jl
mov
insb
gs
adc
inc
movsl
and
dec
sub
mov
lds
inc
les
and
rcll
jns
jb
add
sqrtps
jg
pop
adc
fs
mov
bound
ds
std
jne
clc
int
rcr
lahf
jge
lds
sbb
and
into
push
mov
shrb
je
dec
jge
cmp
lods
sahf
call
adc
repz
xchg
ljmp
test
out
shrb
mov
leave
movsl
inc
push
dec
enter
xlat
mov
out
mov
jg
fdivp
shlb
pop
or
sub
cld
xchg
mov
into
xchg
lods
xchg
aas
fstp
jb
roll
jecxz
push
int
add
push
cmpsl
inc
jns
decl
mov
mov
jno
lods
scas
cmp
xchg
clc
inc
movl
sub
bound
inc
test
jns
das
das
jne
jne
pop
dec
mov
xor
out
jmp
mov
cmpsl
add
test
mov
mov
fdivrs
pop
xchg
fists
arpl
mov
call
inc
pop
mov
popf
stc
sarb
into
ja
cltd
mov
arpl
lcall
push
jmp
insl
or
push
cli
adc
test
shr
inc
pop
sbb
pop
fistps
fs
xchg
pop
mov
ljmp
gs
push
mov
lods
cmpsl
aad
or
sub
mov
jno
shll
loopne
ja
loopne
push
pop
jecxz
stc
pop
or
xor
mov
or
xchg
shrb
out
or
repnz
shr
scas
push
fsubrs
out
cmp
add
push
movsb
loop
xchg
xor
stos
mov
xor
lods
dec
sub
dec
sahf
mov
jg
test
sub
push
mov
cltd
push
addl
inc
jmp
push
xchg
jle
popl
jb
jmp
in
adc
sub
push
outsl
push
inc
sbb
loop
xchg
cmpsl
inc
pop
out
subb
push
jnp
scas
clc
jg
rorb
inc
pop
stc
nop
or
and
mov
sahf
out
js
aas
rolb
rcl
sub
adc
jl
pop
lret
js
fsqrt
jnp
fs
paddw
test
cli
andl
bound
jne
adc
leave
adc
mov
fdivs
sub
lods
fbld
adcb
cmp
xor
adc
andb
mov
cmp
sbb
dec
add
ljmp
fldcw
cmp
mov
jg
cmp
inc
lea
push
sbb
inc
loope
fprem1
rcrl
fs
add
int3
lret
clc
scas
sahf
mov
adc
inc
xchg
xor
pushf
call
xor
cmc
mov
movsb
dec
sub
arpl
inc
lcall
shrb
pop
push
ficoms
or
xor
xor
hlt
pop
sbb
repz
inc
cmp
int
mov
add
jecxz
sub
add
out
lods
out
push
jno
adc
push
shll
fwait
xor
pop
ja
dec
jbe
jbe
cmpl
shl
sbb
xchg
repz
jae
gs
dec
insb
out
out
lahf
push
inc
mov
mov
out
shl
fbstp
sbb
sahf
push
sbb
fbld
iret
pop
popf
dec
ljmp
lock
xor
dec
int3
push
push
push
pop
mov
stos
aam
ret
pop
stos
or
or
lods
mov
cmp
int
jg
fisttpl
data16
add
jg
sbb
cmc
add
fists
outsl
cmp
xor
lcall
xchg
jbe
xchg
pop
xor
adc
push
fadds
jmp
dec
imul
mov
pop
lcall
or
dec
push
out
inc
xchg
jb
jp
into
mov
mov
repz
push
sar
jmp
xchg
pusha
int3
push
rolb
scas
lret
leave
idivl
dec
cmpsb
test
test
adc
ds
mov
xlat
popa
or
cli
xchg
cmpsb
ss
mov
dec
lret
fcmovnb
adc
sub
mov
rorl
adc
pop
push
in
pushf
xchg
int
cli
outsb
rorl
mov
or
xor
outsb
sbb
test
push
hlt
inc
mov
push
in
push
aad
jg
lcall
push
aam
or
dec
shrl
lret
fiaddl
pop
dec
mov
pop
jle
fimull
and
cmp
pop
adc
xor
cmp
cli
enter
int
lea
hlt
mov
ret
sub
sti
mov
fnsave
sbb
or
out
popf
mov
js
aas
mov
jno
mov
movsl
je
sub
jno
add
pop
sbb
int3
test
dec
or
or
dec
adc
sbb
cmc
es
rorb
je
aad
add
jno
jmp
pop
int3
cli
or
test
jecxz
mov
push
dec
out
hlt
ljmp
or
xchg
mov
cmc
dec
jmp
cmp
cmp
dec
lcall
xor
ds
shrb
test
les
mov
xchg
test
test
mov
js
mov
jns
cmc
mov
test
ljmp
je
and
icebp
das
mov
ljmp
movsl
incb
sub
sbb
jl
jmp
mov
dec
gs
lds
inc
rcrl
add
rorl
cmpsl
dec
clc
ss
push
cs
sahf
xor
enter
and
fnsave
cmpb
test
inc
sub
jmp
mov
mov
lods
pop
and
mov
scas
cmc
xchg
fwait
lods
jnp
mov
clc
cld
aam
popf
pusha
out
insl
cmpsl
pop
inc
data16
aaa
push
xchg
fstpl
sub
mov
inc
je
nop
movsb
ljmp
mov
fstpl
in
mov
jge
push
jno
xor
lds
cmp
arpl
insl
pop
jns
add
int
push
cmp
mov
adc
push
cld
dec
js
jne
jp
mov
and
jne
or
fcmovne
jge
cltd
jmp
xor
jns
daa
or
cltd
shll
xor
mov
xchg
lods
fs
repz
cs
pop
xor
je
shlb
imul
cmp
push
gs
jb
loope
mov
mov
fcoms
sbb
ds
bound
cmp
jns
xor
sub
sub
jecxz
cmp
xchg
inc
insl
cmc
jp
or
pop
push
addr16
pop
das
or
sbb
aas
popf
repnz
sahf
fwait
jbe
sbb
push
mov
pop
jmp
or
aaa
pop
insb
add
je
xchg
sbbb
or
xor
sbb
icebp
mov
push
jl
outsb
mov
and
push
popf
push
cltd
jle
xchg
imul
aad
adc
jns
and
loope
les
xchg
ds
pop
inc
mov
cmpsl
pop
lods
mov
popf
mov
sub
xor
stos
cmp
jmp
push
imul
mov
inc
push
and
ljmp
xchg
into
xchg
add
pop
cmp
cmpsl
stos
outsb
inc
loope
ljmp
repz
inc
fucomp
adc
inc
pusha
fsubs
sub
xchg
mov
add
xchg
call
sub
and
ja
test
shrl
push
cltd
mov
mov
imul
loope
fmuls
ljmp
sbb
bound
shrb
inc
ds
in
iret
or
pushl
in
fstpt
out
nop
ss
jle
xchg
mov
mov
aam
cmp
mov
je
push
or
fstpl
jnp
iret
arpl
loopne
mov
aaa
or
or
dec
sbb
stc
vpshlq
mov
loopne
push
add
mov
sbb
pop
jle
or
out
data16
cld
std
imul
pushf
or
xchg
mov
push
mov
push
jns
jl
aas
inc
test
icebp
lcall
xor
cwtl
cmp
xchg
into
int3
lds
xor
jbe
fisubs
jo
enter
fildl
pop
push
inc
cmp
push
std
insl
xor
and
mov
fldenv
dec
mov
inc
jb
jg
push
mov
xchg
insl
sarl
and
enter
xlat
subl
pop
sub
imul
les
pop
mov
movsl
xor
mov
push
inc
ljmp
jmp
cmp
ss
int3
adc
sub
lods
leave
dec
aas
lods
rclb
je
scas
repz
mov
pusha
sub
fisubl
fldenv
pop
cmpsl
sti
outsl
rorb
sarb
lcall
jae
pop
movsb
test
mov
sub
inc
push
mov
outsb
mov
mov
mov
mov
mov
mov
xchg
adc
mov
xor
sub
mov
cld
mov
dec
dec
sbb
or
cld
mov
add
out
scas
mov
mov
cmp
aaa
mov
pop
jns
mov
nop
push
jle
xchg
popf
ret
sbb
cltd
lret
push
repz
mov
or
xchg
out
pusha
pop
pop
arpl
in
inc
or
fldenv
sbb
decl
stos
bnd
icebp
mov
enter
xor
cltd
adc
sub
roll
hlt
pop
or
imul
repnz
push
mov
bnd
mov
les
loopne
mov
divl
lret
sub
push
cmp
mov
xchg
push
incb
mov
cmp
std
aas
mov
popf
sbb
sti
cmp
gs
push
xor
push
or
insl
mov
inc
cmp
lahf
push
mov
cli
dec
out
push
in
inc
movsl
xor
pop
jge
clc
js
xchg
cmpsl
lahf
dec
in
inc
lods
lcall
lcall
cmp
and
idivl
in
pusha
cmp
movsl
push
xchg
cmpsl
inc
cmpsb
mov
pop
in
leave
xchg
aam
icebp
or
call
test
and
mov
mov
stos
mov
dec
inc
orb
pop
push
fucom
mov
mov
mov
popa
sbb
mov
and
ficompl
push
xchg
mov
mov
jns
scas
adc
mov
sub
lret
jno
inc
out
inc
lret
test
fmul
mov
xchg
scas
sbbb
mov
push
mov
scas
sbb
jne
jo
jns
pushf
xor
mov
hlt
cmp
mov
popf
call
sbb
into
or
in
jo
push
orb
pusha
push
loopne
fs
andb
mov
xor
dec
icebp
cmpb
pop
mov
jne
fmull
fsub
andb
add
rcl
sub
push
or
stc
dec
pop
cmpb
scas
dec
sub
jbe
jns
mov
mov
xchg
cmpsl
mov
insl
hlt
inc
bound
lods
pop
adc
jg
push
stos
aaa
pop
es
rorb
xor
pop
test
inc
push
jl
add
insb
xor
je
mov
nop
mov
jo
lock
inc
sub
fsubrs
fiaddl
push
sub
jp
lds
lods
push
div
xor
sbb
xchg
xchg
cmp
inc
pop
aad
pusha
adc
jno
sub
xlat
js
cmp
call
movsl
sbb
or
xchg
inc
lock
ds
xchg
imul
jl
dec
and
xor
ret
enter
repnz
push
icebp
add
mov
stos
lds
xor
mov
lret
neg
imul
xchg
inc
ret
fsubs
xorl
sahf
push
push
int
ss
and
in
popf
das
sbb
in
mov
xor
insl
mov
fstl
test
cli
lret
xchg
arpl
adc
out
outsl
stos
fcmovbe
test
xor
repnz
ds
adc
dec
fwait
jns
sti
dec
mov
jb
loopne
sarl
inc
or
insl
mov
fwait
loopne
pop
repz
stos
mov
idivl
lock
mov
cmpsl
lods
pop
ret
jge
mov
je
xchg
push
xchg
mov
jbe
xchg
push
fsub
xchg
xchg
aas
mov
add
out
clc
add
mov
cmp
cmc
inc
cmp
jmp
addr16
leave
sbb
loope
daa
mov
jge
iret
orb
xchg
adc
pop
pop
jnp
jnp
pushf
rorl
cmp
into
nop
in
out
push
mov
cmp
xor
lahf
jle
imul
pop
cs
bound
sbb
push
scas
cmp
ret
mov
and
sarb
push
aam
enter
xor
push
in
cli
add
lds
xorl
repnz
lcall
xchg
out
and
cwtl
push
shrl
xor
mov
in
xchg
pop
dec
sub
cmp
pop
mov
push
jl
sbb
out
and
repz
and
mov
jge
adc
sub
faddl
ret
in
jnp
mov
out
imul
adc
test
adc
xchg
and
and
int
insl
movsl
test
gs
jno
mov
scas
pop
mov
jnp
cltd
ja
jns
xchg
inc
pusha
xchg
adc
mov
push
xchg
or
pop
repnz
gs
jne
xchg
xchg
mov
jl
iret
add
gs
mov
inc
mov
inc
in
jle
adc
fdivrs
inc
cmova
push
inc
or
loop
ror
xchg
mov
ficomps
stc
imul
fdivrs
dec
pop
sbb
xchg
test
sub
adc
pop
jbe
out
repnz
inc
test
mov
cmp
bound
push
fwait
xrelease
mov
insb
test
test
lret
icebp
mov
dec
popf
jmp
fwait
leave
fwait
in
ja
jecxz
xchg
push
cmp
xchg
cmp
jnp
pop
mov
shlb
out
mov
push
xchg
cs
cmpsb
mul
orb
daa
cld
fldenv
inc
xor
daa
sub
jo
xor
xor
das
mov
mov
bound
mov
ret
out
lcall
jb
loope
sub
xor
jnp
rorb
loop
adc
xchg
lods
shlb
ret
pop
mov
rorl
xchg
lods
in
mov
mov
out
in
pop
mov
xchg
pop
xchg
pop
or
nop
sti
mov
cmp
adc
pop
stos
mov
xchg
std
cmp
push
ja,pt
inc
ret
xchg
xor
lods
test
cwtl
sub
sub
push
dec
mov
fidivrl
mov
cltd
pusha
add
jno
xchg
xor
stc
out
mov
mov
pop
iret
es
add
pop
fstpl
dec
aaa
mov
in
mov
xchg
filds
pop
insb
inc
sti
jno
mov
adc
int3
clc
fdiv
test
mov
dec
rol
inc
or
xchg
add
roll
mov
adc
rcll
and
es
push
out
sbb
cmp
xchg
push
dec
or
js
mov
stc
aas
stos
lea
fstpl
aam
or
fidivl
add
lods
and
sbb
mov
std
pusha
push
cmc
fldt
jl
pop
testl
sub
add
popf
ret
and
dec
adc
sbb
mov
and
sbb
out
rep
mov
and
jle
lods
lcall
dec
sarb
fcompl
mov
push
fiaddl
pusha
data16
rolb
push
icebp
add
mov
fisttpl
fbld
pop
xlat
fisubs
pop
and
mov
sub
fldcw
mov
loope
into
fsubrl
adc
adc
mov
jl
addr16
addr16
xor
mov
call
dec
mov
out
sbb
push
sbb
inc
inc
movsl
pop
nop
pusha
mov
lods
cmp
daa
xchg
inc
and
or
into
rcll
pop
sub
push
jle
lret
mov
cmp
aas
mov
dec
scas
pop
adc
adc
rolb
adc
xchg
sub
adc
inc
push
mov
lock
adc
xchg
inc
pslld
adc
paddb
sub
cmp
add
int
add
mov
rcrb
sub
mov
or
ja
jbe
mov
mov
mov
stos
jno
jnp
movsb
xor
hlt
mov
adc
rorb
lea
andb
inc
fmul
push
dec
jp
scas
jmp
cltd
lods
adc
or
adc
leave
fnop
ljmp
or
stos
test
data16
imul
out
push
mov
xchg
cmp
hlt
jg
pop
jmp
test
mov
ds
push
cltd
int3
add
push
scas
xchg
jl
jecxz
scas
mov
mov
add
dec
dec
sti
loope
xor
lahf
in
cld
lock
sbb
movsb
push
dec
div
push
adc
jl
adc
sbbl
and
dec
sahf
jmp
push
sub
and
mov
jne
negb
test
test
imul
mov
scas
or
rorl
sti
mov
insb
push
insb
mov
mov
mov
cmc
sbb
int3
loope
push
jecxz
addr16
xor
jno
cmp
inc
mov
xchg
sub
sti
fsubs
add
test
push
fstpl
rcrb
out
test
push
or
jmp
lahf
xchg
js
pop
aad
inc
scas
fidivrl
mov
repz
mov
in
mov
pop
pop
pop
in
ds
pop
cs
int
lock
sub
data16
ja
aam
pop
sub
fiaddl
mov
lock
inc
mov
sahf
test
out
add
fldl
out
add
ljmp
mov
mov
sti
xlat
or
stc
loopne
sub
scas
aaa
adc
xchg
mov
mov
mov
rol
xchg
je
mov
ja
daa
sub
stc
pop
test
mov
push
pop
cmp
mov
loopne
idivb
iret
dec
xchg
mov
add
ja
or
push
into
xchg
pop
insl
sarb
lret
pop
or
les
das
sub
inc
ds
push
xchg
sti
lahf
mov
jnp
imul
ja
fsubs
pop
or
cmp
cs
std
jne
imul
pop
call
dec
or
clc
daa
sbb
jge
cltd
std
out
and
sti
push
ds
jp
fdivrp
sbb
xlat
shlb
sub
mov
push
push
call
fldenv
jne
push
add
es
addr16
inc
out
xchg
ja
mov
inc
and
stc
jmp
mov
cmp
flds
mov
mov
mov
out
test
das
and
pushf
and
and
subl
xor
sbb
hlt
adc
push
jae
inc
add
add
jne
cwtl
or
outsb
dec
push
jnp
cmp
jae
push
cltd
lret
mov
aaa
outsl
inc
stos
sub
mov
arpl
test
cmp
dec
pop
xorb
and
lods
shll
pop
xor
push
mov
das
cmp
jns
dec
scas
add
inc
push
jp
add
lock
or
push
lcall
in
scas
ss
fsts
pop
fsub
stc
sub
push
pop
addr16
fsubrl
iret
cmpsb
dec
jle
popf
stos
addb
scas
adc
jl
mov
sbb
and
fs
ds
inc
jns
dec
inc
mov
aas
or
scas
ljmp
movsl
aaa
ja
sahf
adc
mov
out
jle
ret
cld
rol
pop
cmc
mov
sbb
sti
sahf
call
sti
xchg
inc
sub
xchg
mov
rolb
insb
insl
mov
mov
sbb
push
outsl
outsb
push
and
mov
in
mov
dec
dec
jmp
les
sbb
inc
ja
lcall
scas
enter
ret
jl
xchg
out
sbb
mov
cmovno
lcall
addr16
pop
or
sbbl
rcrl
data16
xchg
test
cmp
stos
mov
inc
xor
push
dec
sbb
sahf
cltd
inc
and
fucomp
mov
sbb
xorl
sbb
and
mov
cmc
stos
xchg
mov
lcall
scas
pop
inc
pop
mov
jae
fisubrl
jg
xchg
xor
pop
ja
lods
inc
int3
mov
ret
mov
andl
stos
int3
mov
or
inc
jb
jae
jecxz
es
ja
int
lds
adc
int
lods
inc
push
hlt
ret
or
pop
test
inc
xchg
jmp
clc
lahf
imul
cltd
ss
repz
adc
jb
lds
push
fucomp
xor
ds
and
xorl
cmp
or
mov
dec
inc
cwtl
lock
ds
imul
jg
push
pushf
jbe
test
sti
ss
lock
enter
test
daa
fwait
add
mov
cmp
leave
inc
inc
lods
jle
pop
or
mov
add
and
dec
xchg
addr16
jge
inc
jle
mov
faddl
shrl
push
hlt
inc
and
shlb
sub
sub
scas
xor
jge
adc
mov
mov
cmp
or
adcl
lods
mov
lods
mov
pusha
jb
movsb
sub
test
lods
push
lahf
dec
and
stos
sbb
test
and
xor
bound
fwait
inc
movsl
jns
notl
sub
or
in
std
or
jnp
enter
cld
dec
data16
push
push
ret
ret
xchg
sub
loope
dec
jno
dec
hlt
push
adc
je
pop
mov
push
imul
pop
dec
or
xchg
pop
push
xor
call
sbb
cmp
rolb
mov
dec
push
jecxz
jbe
adc
jno
mov
imul
push
cwtl
pop
aad
mov
addr16
jne
lahf
pop
xchg
stc
push
pop
jb
sbb
inc
mov
rcll
inc
xchg
dec
push
mov
jge
cmp
or
jecxz
fidivrs
add
add
hlt
outsl
jnp
push
cwtl
rcl
dec
mov
adc
sbb
cltd
dec
sbb
into
and
dec
add
addr16
icebp
lret
cmp
dec
gs
mov
sbb
iret
int3
fwait
inc
icebp
pop
push
aaa
cmp
cmp
sbb
pop
outsb
jnp
out
xor
adc
and
jno
pop
or
pop
mov
mov
out
sarl
add
cmp
xor
lcall
fiadds
mov
jb
dec
call
xchg
fnstcw
xchg
mov
sbb
pop
pop
icebp
and
xorl
mov
rclb
imul
pop
pop
repz
test
sub
dec
cs
mov
sbb
inc
mov
daa
fadds
xchg
sub
out
aaa
mov
sub
lea
jp
mov
aaa
jl
jmp
jp
scas
sbb
js
lods
xchg
aam
addr16
in
popa
mov
iret
es
xor
pop
out
sub
fistpll
dec
ljmp
pop
mov
jle
push
mov
clc
out
or
jmp
xchg
sbb
xchg
dec
into
in
mov
add
lds
push
shlb
push
xchg
xor
das
mov
scas
lret
add
xor
psadbw
mov
jb,pt
mov
scas
dec
es
xchg
frstor
test
xchg
add
mov
or
and
out
push
popf
and
push
fldcw
pushf
push
jo
fstp
into
ret
insb
lret
out
mov
sahf
pop
stos
imul
or
adc
and
pop
sub
hlt
pop
inc
mov
mov
and
enter
push
mov
jle
enter
pop
cmp
xorb
arpl
ret
pop
pop
rcr
or
dec
sub
test
lret
xchg
jne
cs
dec
xor
lods
and
fadds
and
dec
in
xchg
xor
outsb
cltd
xchg
ds
imul
insb
jg
dec
outsl
fnsave
add
imul
lock
lcall
and
push
out
popf
mov
frstor
mov
fwait
nop
movsb
mov
pop
aad
jl
sub
mov
insb
and
xchg
push
jns
not
pop
push
addr16
adc
je
sbb
and
fisttpll
fldenv
rcr
lahf
xor
inc
fstpl
add
jg
dec
daa
cli
mov
mov
mov
xor
pop
fwait
jae
push
xchg
xchg
push
nop
hlt
xor
mov
or
adc
xchg
jns
adcb
jb
adc
bt
xchg
push
movsb
mov
fnstsw
shlb
fmuls
mov
es
in
add
hlt
rol
dec
stos
xor
rorb
insb
xor
icebp
mov
ja
adc
popa
jae
je
sbb
inc
inc
iret
adc
inc
xor
adc
rcrb
xor
add
xchg
sbb
cmc
xor
mov
mov
mov
jmp
push
jbe
arpl
add
mov
mov
xchg
loope
and
mov
sbb
mov
push
je
sarl
outsb
cmp
arpl
sub
fs
test
aaa
lea
test
aas
push
stos
in
repnz
jmp
dec
outsb
and
lahf
or
shrb
ret
mov
imul
mov
or
pop
pop
dec
jne
ljmp
dec
ljmp
sbb
lods
add
jecxz
jl
xchg
bound
in
jbe
jmp
ja
jne
leave
inc
mov
push
sahf
adc
cmp
dec
and
and
jp
pop
mov
sbbb
sti
imul
subl
aas
es
out
xorps
sbb
jno
shl
jbe
jecxz
sbb
hlt
shlb
dec
xchg
mov
movsl
sbb
mov
aaa
push
daa
popa
jl
push
in
int3
push
pop
ret
adc
push
add
sbb
popf
pusha
les
mov
stc
inc
lds
test
outsb
fstpl
shl
pop
leave
jmp
dec
cmp
jb
xorb
cld
xchg
mov
mov
push
enter
call
push
lahf
daa
fisttps
sub
sub
and
mov
xchg
pop
adc
nop
lods
movsl
mov
jns
and
and
je
sbb
cmc
rorl
test
ljmp
clc
adc
pop
int3
cmpsl
ja
inc
push
xor
or
inc
jb
or
aad
pop
int3
dec
and
mov
cmp
dec
scas
inc
lret
divb
clc
cmpsb
jb
testb
inc
fildl
fidivs
repnz
xchg
mov
das
jo
fmuls
cmp
mov
int
push
push
fwait
mov
repnz
lret
mov
stos
pop
fidivrl
lods
adc
push
inc
movsb
nop
test
fnstenv
dec
insb
pop
xor
and
cs
pop
xrelease
xor
int
xchg
into
mov
xchg
and
and
ds
or
rolb
xor
sub
movsb
mov
je,pt
xchg
movsb
or
rorl
js
shl
add
push
xor
test
iret
mov
push
movsb
fs
fs
xor
pop
iret
dec
mov
outsl
push
jns
and
rclb
inc
mov
pop
add
lds
pop
sahf
mov
movsl
xor
shrb
add
pop
sub
loop
ret
nop
mov
lds
pop
jb
jmp
cmp
cltd
ror
mov
lret
fildl
pop
xchg
aam
aad
out
lret
inc
lods
mov
imul
mov
or
mov
pop
cli
ret
enter
push
or
fisttps
popa
imul
add
inc
adc
int
loopne
fisubs
cwtl
repz
adc
sbb
pop
in
push
jmp
add
or
adc
lcall
icebp
cmc
push
aad
and
lret
push
mov
xchg
aas
lcall
pushf
imul
stos
inc
add
or
andb
jns
mov
out
push
mov
add
popf
pop
cmp
mov
addr16
sbb
pop
mov
xor
jbe,pt
notl
xchg
mov
mov
loope
xor
mov
push
lcall
sub
and
ja
xor
xchg
and
dec
stos
sahf
sbb
xlat
xchg
inc
fnstcw
lock
sbb
jb
outsb
out
add
rolb
pop
cmp
lods
and
push
aad
outsb
jne
push
test
adc
xor
pop
adc
sbb
jns
mov
sub
test
lea
mov
pop
daa
sub
jge
mov
scas
pop
pop
daa
mov
sahf
ljmp
xchg
fdivrp
inc
cmp
stos
stos
cmc
mov
popw
adc
in
sub
outsl
sub
mov
je
orl
scas
push
xchg
cmp
push
and
cmp
in
dec
dec
shl
jne
insb
movsb
int
cltd
jnp
mov
pop
sbb
push
lods
xor
stos
push
pop
daa
aad
mov
sbb
jg
sbb
mov
cmp
mov
xchg
test
and
lret
daa
js
push
or
scas
in
sbb
push
out
sbb
std
xor
cwtl
subb
mov
les
or
inc
xchg
dec
ror
push
arpl
scas
loopne
add
frstor
cmpsb
lods
inc
mov
pop
xchg
insb
sub
jns
and
cmp
xchg
add
sti
mov
dec
add
loopne
dec
rorl
jle
lahf
inc
and
dec
sub
sti
rorb
mov
add
in
inc
das
les
or
jge
dec
in
movsb
inc
push
xor
stos
mov
pop
ss
test
pop
mov
ds
push
jno
dec
imull
test
mov
xchg
inc
imulb
or
pop
or
jns
pop
xchg
inc
leave
and
pop
cmp
push
mov
mov
inc
test
sub
jns
pop
iret
mov
xchg
fnstsw
sbb
stos
rcrl
es
pushf
lock
popa
outsb
adcl
pop
stos
daa
sub
rol
jns
fdivl
mov
pushf
xchg
jp
xor
mov
jns
out
lahf
push
sbb
mull
in
outsl
ret
in
xchg
push
popa
and
shrl
daa
lcall
divb
ficompl
and
into
cmp
cmp
sub
jne
outsb
push
movsl
sub
lcall
iret
not
cmc
jecxz
ss
fucomip
adc
pop
mov
roll
imulb
movsl
xchg
cmp
or
mov
aam
scas
test
inc
fldcw
jle
sti
in
imul
cmp
into
aad
mov
xchg
js
lods
scas
unpcklps
jnp
mov
insb
or
push
sbb
popf
dec
addr16
cs
std
sti
mov
std
push
adc
fsubrl
repz
imul
sbb
dec
bnd
xlat
iret
jne
pop
add
fwait
lret
inc
mov
pop
xorb
bound
or
xchg
cmp
in
shll
jne
test
inc
and
repnz
sbb
pop
movsl
fidivs
mov
scas
inc
cli
xchg
fisttps
fs
cli
sbb
mov
pop
scas
mov
mov
sbb
js
ljmp
aaa
xchg
fiadds
and
dec
jp
fisubs
add
out
adc
mov
fdivp
test
jecxz
mov
cld
mov
xchg
dec
and
sub
mov
aas
adc
insb
int
ljmp
in
in
dec
lcall
dec
mov
mov
sbb
push
xor
adc
aaa
ljmp
cmp
ret
pop
adc
lret
push
dec
xor
subl
pusha
insl
push
in
adc
xchg
xchg
mov
mov
push
cli
cmpb
xor
add
jae,pn
mov
aam
add
icebp
push
dec
icebp
cmp
data16
and
xchg
push
pop
add
jecxz
pop
movsl
inc
lahf
mov
adc
stos
jnp
sti
jae
jg
loope
dec
mov
sbb
pop
out
seta
in
out
pop
push
cmp
cmp
cmp
jg
dec
outsb
inc
std
push
outsb
jbe
xchg
mov
xchg
jnp
dec
and
shl
or
mov
gs
ja
sub
sti
xor
or
xor
sub
stos
jns
dec
test
repnz
xchg
lods
sbb
inc
jae
das
xchg
lret
xor
jae
xor
push
sub
ds
repnz
and
push
lahf
sub
xchg
sbb
shl
push
xor
xchg
fwait
ror
aaa
jbe
cltd
addr16
arpl
sbb
push
ficompl
mov
inc
mov
mov
test
jp
mov
push
fimull
push
out
sub
loope
push
ret
mov
decb
ret
arpl
jno
push
shr
inc
mov
fs
mov
ds
pop
rcl
sub
inc
nop
rcrl
les
mov
sarl
or
inc
stos
fisttps
inc
jmp
inc
mov
outsl
push
icebp
add
in
mov
sub
loopne
dec
rcl
dec
dec
add
cmp
pop
mov
clc
bound
pop
or
mov
repz
mov
mov
imul
adc
in
arpl
add
xchg
sbb
mov
out
pop
cmpsl
or
rolb
cmp
outsb
and
out
lds
push
mov
cmc
inc
mov
leave
aas
or
fistpll
dec
push
push
imul
mov
mov
xor
cmc
mov
pop
sub
icebp
out
aad
xchg
jae
xchg
cld
cmp
iret
ja
js
js
imul
pop
in
adc
or
xor
adcl
lock
js
jecxz
mov
pushf
push
outsl
subl
fbld
mov
out
pushf
imul
push
and
adc
nop
xchg
adc
mov
testb
ds
fisttpll
inc
lcall
jmp
loop
das
pop
test
sub
cmp
jmp
jg
fldl
pop
mov
mov
hlt
push
lret
add
cltd
addr16
push
iret
pop
cmp
add
je
lret
jle
jo
cmpsb
jle
push
jp
fdiv
ja
aaa
sub
or
adc
cmc
bound
dec
imull
push
push
jb
adc
sub
cwtl
stc
ret
cmp
dec
ja
repnz
push
inc
and
ror
pop
add
cli
inc
in
cwtl
imul
dec
jle
adc
pop
ss
mov
adc
push
loope
sbb
pop
movsl
in
dec
or
jge
sbb
cltd
sub
and
loop
sbb
pusha
aaa
sahf
lcall
xorl
xchg
mov
ficompl
icebp
ret
faddl
xor
pop
in
cmp
sbb
add
rol
mov
add
test
xchg
push
xchg
xchg
xchg
lahf
rcl
das
add
arpl
into
aaa
jbe
xor
xchg
test
std
mov
int
sbb
int
test
mov
or
jle
fisubrs
jno
jecxz
pusha
mov
push
jmp
aas
sub
mov
pop
pop
jge
jne
xchg
jle
add
stos
or
cmp
push
enter
iret
push
out
mov
adc
xor
and
xlat
xor
clc
pop
add
pop
das
aad
add
sub
push
int3
movsl
pop
and
mov
mov
arpl
mov
shr
loopne
rorl
mov
aas
test
div
mov
std
ds
mov
sbb
mov
push
sbb
push
cmp
add
sub
mov
pop
push
dec
xor
je
es
mov
leave
jnp
es
sti
lret
ror
push
mov
and
cmpl
jnp
adc
gs
xor
xor
mov
mov
xchg
adc
mov
push
xor
es
mov
dec
arpl
sub
pop
nop
jge
inc
mov
push
dec
leave
cli
push
adc
movsl
xchg
pop
sub
ds
sbb
sti
push
aas
pop
lea
test
fisubrl
pop
cmp
cmpsb
mov
inc
cmc
shlb
setle
mov
mov
push
push
xchg
movsb
mov
loope
mov
sbb
call
xor
sbb
gs
xor
jmp
xchg
push
and
shrl
ja
xchg
inc
sbb
cmp
data16
cmp
adc
mov
jge
mov
sbb
icebp
loopne
dec
mov
xchg
pop
xor
mov
insb
fs
inc
in
into
sbb
jl,pn
sbb
xorb
cs
mov
subb
inc
int
nop
inc
mov
inc
test
ret
cmpsl
sub
stc
and
mov
ret
xchg
cmpsl
loop
loop
sbb
or
mov
inc
jl
mov
js
inc
jmp
cmp
pop
ss
dec
fcomps
jg
cmp
out
rolb
mov
or
cmc
mov
inc
mov
ret
imul
dec
lods
loopne
popa
aaa
arpl
sub
xchg
sub
ljmp
jg
dec
mov
xor
into
mov
cmp
inc
mov
mov
rclb
xchg
xchg
call
push
adc
imul
vpaddsw
lock
filds
add
add
out
ret
mov
cmpsl
mov
pop
cmpsb
leave
leave
lds
cwtl
addl
add
mov
test
mov
addr16
lods
nop
ficompl
sbb
hlt
and
fisttps
dec
ret
test
popf
scas
inc
mov
adc
jb
and
addl
insb
pushf
cmp
pop
insl
pop
adc
mov
pop
rcll
push
and
mov
sub
scas
and
push
dec
cmp
je
test
add
jp
add
int3
cmp
in
rorl
sbb
xor
pushf
cmp
ret
imul
push
and
aad
adc
mov
jge
mov
f2xm1
inc
shlb
xchg
and
test
cmc
sahf
xchg
mov
in
pop
push
dec
cmp
push
xor
pop
xlat
xor
ja
es
aad
shl
test
outsl
pop
dec
mov
adc
mov
leave
lock
and
bound
test
cmp
jl
ret
hlt
das
sub
add
pushf
mov
mov
outsl
adc
dec
lea
adc
lods
xchg
adc
roll
sbb
dec
fst
pop
xor
mov
sub
add
ror
mov
lcall
test
mov
mov
cmp
insl
arpl
scas
ret
dec
cld
aas
xorl
push
sbb
sbb
adc
xor
jo
orl
mov
hlt
out
into
mov
cmp
rcll
adc
or
xchg
mov
add
push
test
dec
cmp
xchg
movsb
add
test
jns
add
test
fnstcw
adc
addr16
notb
xorb
lret
adc
subl
or
test
and
xor
icebp
daa
sbb
into
shll
iret
push
push
movsb
test
data16
shl
movsb
mov
pop
decb
inc
push
nop
rolb
push
mov
add
repz
push
sbb
pushf
dec
push
mov
in
nop
inc
movsl
jecxz
js
sahf
sub
orl
sub
ljmp
jb
pop
inc
loope
cli
inc
jo
cmp
pusha
dec
sarb
les
shrl
or
aad
mov
aad
icebp
sti
js
loopne
push
jecxz
cmpsb
or
pop
popa
aad
mov
adc
icebp
nop
jp
sub
pushl
dec
xor
dec
fwait
packsswb
jo
and
xor
xor
xor
xor
pop
scas
lods
cmc
adc
mov
mov
cmp
aad
adc
jl
xor
lcall
mov
sub
in
js
rcrb
cmp
pop
ljmp
notl
add
lock
sarb
jne
dec
cmp
clc
ja
ret
and
pop
dec
push
cmpb
push
sub
mov
push
lods
and
add
cs
outsl
sub
pop
xchg
jmp
mov
push
fwait
popa
ret
imul
mov
int
or
sub
test
cli
jmp
sbb
stos
int3
xor
and
dec
call
mov
push
sub
mov
push
data16
pushf
std
mov
mov
insl
xchg
rclb
sbb
and
sub
in
dec
hlt
ror
jp
add
push
loope
mov
jae
xor
stos
push
mov
pop
push
mov
mov
fimull
push
add
sub
push
fisubrs
js
push
or
fs
repnz
xor
push
ljmp
addr16
out
sub
les
bound
add
jno
lea
add
lods
add
mov
lahf
sbb
fisttps
mov
jg
aas
lret
add
ret
mov
xlat
ss
mov
fwait
push
add
fcompl
push
dec
mov
out
gs
or
imul
mov
enter
mov
ds
xchg
push
jae
cld
shll
int
scas
dec
repnz
mov
in
push
lods
or
filds
loope
jo
fmulp
out
xchg
leave
cmc
xor
insl
hlt
negl
push
jbe
movsb
fincstp
mov
les
es
std
mov
mov
push
cs
call
push
add
dec
ret
test
adc
sbb
rcll
pop
sbb
sub
inc
sub
fimull
das
mov
pushf
mov
imul
xchg
shlb
push
mov
jge
inc
cmpsb
jae
pop
daa
xor
ret
inc
pusha
icebp
mov
xchg
jg
cmp
xchg
pop
push
mov
add
mov
mov
or
adc
stc
jbe
popa
pop
push
scas
add
dec
xor
cltd
mov
xchg
out
push
mov
pop
adc
lock
xchg
add
fsts
lods
cmove
mov
xchg
cli
cs
aam
cmp
scas
sbb
fisubs
jp
cmp
sbb
mov
test
dec
movsl
icebp
push
imul
leave
adc
sbb
jle
test
lods
add
test
bound
dec
adc
xchg
xorl
pop
inc
cmp
fwait
jge
dec
mov
popa
pushf
int3
push
push
push
cmp
add
add
inc
test
lcall
xchg
js
adc
adc
gs
jne
xchg
ret
sahf
xchg
aam
lods
aad
cmp
add
dec
xchg
and
addl
out
int
adc
lods
rcll
outsl
sub
push
and
ficoml
lahf
pushf
push
cmp
dec
jl
xchg
sarb
or
jmp
notl
js
pop
cli
jp
add
push
je
adc
stos
jecxz
stos
adc
sbb
movsb
shlb
push
adc
stos
jmp
in
in
mov
pop
push
and
jge
arpl
stc
add
cmp
xchg
pop
xorb
es
movsl
inc
dec
in
mov
add
push
clc
imul
pop
dec
jbe
cmp
daa
and
fbld
mov
jge
mov
push
xchg
test
adc
loop
mov
repz
aaa
clc
mul
push
daa
not
cmc
ret
sbb
xchg
es
mov
xchg
push
mov
jae
mov
and
mov
cld
btc
pop
and
ss
mov
inc
insl
mov
out
cltd
or
mov
in
adc
js
aas
leave
fsubp
xchg
in
gs
inc
jne
cld
adc
mov
ds
icebp
pop
fdivr
push
jle
add
adc
icebp
rcll
jg
mov
rcrl
rcrl
cmp
add
add
push
or
ficompl
inc
mov
cmp
jbe
jl,pn
adc
sub
adc
adc
enter
jl
stc
into
sub
push
dec
jp
add
jl
inc
shrl
xchg
sub
out
and
jo
inc
push
dec
xor
notb
xchg
push
dec
ds
push
test
sti
inc
dec
stc
jg
jecxz
shlb
cli
mov
cwtl
adc
div
mov
add
mov
adc
and
or
mov
mov
es
loope
cmp
mov
pop
imul
or
ret
lahf
or
popf
sti
inc
in
and
rolb
addr16
pop
xchg
in
lods
push
xchg
sub
xor
mov
adc
push
fcoml
mov
in
adc
mov
lea
aam
test
and
cli
std
rcl
inc
xchg
xchg
adc
loop
ret
push
orl
mov
push
ljmp
dec
or
notb
je
test
int3
pop
into
xor
push
aaa
mov
xchg
fcoms
or
xchg
add
xchg
push
daa
mov
xchg
jg
or
stc
pop
iret
icebp
add
mov
dec
cmp
add
xor
dec
fcoms
add
setns
sbb
test
xor
sub
stos
inc
ret
mov
xchg
cs
xchg
lcall
enter
aaa
push
push
xchg
cmp
in
mov
imul
adc
xor
sub
mov
lret
lahf
mov
pop
add
mov
push
lods
arpl
pop
mov
mov
shl
es
mov
inc
sub
xchg
mov
sub
iret
inc
mov
jl
jecxz
pop
addr16
and
mov
test
sahf
push
add
mov
mov
jmp
xchg
jo
enter
int3
shl
pop
jae
mov
inc
mov
aam
jmp
test
mov
leave
add
movsb
xor
sahf
mov
pusha
dec
cmpsb
orb
adc
or
sbb
inc
mov
mov
andl
repnz
popf
dec
add
scas
xor
xor
xchg
scas
add
mov
les
jl
push
repnz
mov
mov
mov
add
into
dec
cmp
xchg
xchg
push
daa
mov
sbb
mov
pop
dec
std
mov
mov
push
mov
mov
mov
push
jge
add
pop
pop
inc
bound
loope
mov
sar
scas
adc
sbb
aas
adcl
and
jle
sahf
arpl
inc
pop
jecxz
ds
add
test
aam
or
pop
push
push
xorb
pop
ret
xchg
or
fstps
mov
outsl
jge
aam
les
cmp
fldcw
jne
push
mov
jp
dec
mov
dec
inc
dec
and
pop
lods
les
xchg
icebp
test
push
das
cmp
xchg
shlb
addr16
inc
jge
cld
inc
xor
cmpsb
or
jns
scas
and
xchg
mov
push
incb
ret
aad
in
mov
bnd
xchg
loope
sbb
xchg
insl
cmp
dec
in
adc
pop
popa
loopne
push
out
sbb
es
inc
add
out
test
add
aas
hlt
arpl
inc
outsl
mov
and
sti
adc
add
adc
les
or
mov
in
sub
xchg
decl
jo
aam
inc
push
in
mov
aaa
leave
jmp
test
xor
cs
test
das
fdivr
cmc
add
dec
mov
dec
loopne
repz
and
or
mov
mov
mov
or
shll
cmp
jl
inc
push
pop
or
jge
add
popa
das
repz
aad
das
or
jg
push
imul
bound
out
inc
hlt
jbe
call
stc
sbb
inc
cmpsb
cmp
lret
push
sbbb
fs
cmpsb
cltd
dec
shlb
repz
sub
fcompl
test
mov
fabs
inc
add
rorl
push
imul
pop
pop
mov
mov
push
mov
pop
mov
bound
inc
cmp
test
xchg
lret
add
ljmp
int3
loopne
es
xor
imulb
scas
cmp
dec
aas
jnp
xchg
pop
imul
push
push
aas
jo
int
lcall
icebp
cmp
incl
fistpl
pop
testl
mov
outsl
out
pop
xchg
jmp
jmp
mov
stc
add
fwait
inc
xor
cmpsl
repz
sub
cmp
int3
mov
fsts
scas
mov
xor
sub
je
cmp
in
adc
xor
add
mov
add
hlt
xchg
ljmp
dec
das
jl
rolb
dec
mov
out
pushf
arpl
mov
orw
cmp
rorl
dec
fstl
ss
add
nop
pop
dec
mov
jns,pn
fdivrs
repnz
push
in
mov
cmp
dec
xor
out
push
outsb
mov
xchg
imul
and
adc
pop
lds
jo
xchg
shrl
in
pusha
and
ss
mov
inc
fs
rol
nop
push
mov
mov
ret
mov
cmpl
ja
enter
xchg
and
iret
inc
ret
nop
bound
mov
andl
hlt
nop
lods
sub
test
cmpsl
sti
add
mov
in
scas
or
inc
dec
dec
add
int
mov
sub
dec
aas
inc
outsl
adcb
jnp
repz
addr16
adcb
inc
adc
sti
call
sahf
aas
imul
mov
mov
jge
adc
pop
mov
xchg
mov
lahf
daa
xor
popf
aam
int3
mov
divb
jnp
adc
pop
fdiv
mov
out
fdivrp
roll
sub
mov
xchg
nop
mov
lret
xchg
aaa
sbb
mov
inc
xorb
adc
pushf
das
adc
add
mov
out
inc
lock
jns
adc
mov
rclb
fsubp
in
pop
gs
adc
int
push
jle
mov
mov
sub
add
cmp
jge
call
xor
mov
clc
add
jp
adc
mov
inc
mov
test
mov
pushf
mov
ja
pushf
pop
push
movsb
mov
lds
je
fs
push
scas
in
insb
movsl
hlt
adc
mov
mov
rorb
aad
std
mov
jo
jns
scas
dec
sbb
test
lods
mov
xor
jmp
sbb
aas
lret
insb
pop
ds
scas
aaa
test
in
adc
ror
imul
movsb
subb
jle
adc
jg
and
and
push
and
xor
jb
mov
pop
or
xor
sysenter
int
add
jle
adc
lahf
add
mull
pop
lcall
jle
mov
mov
adc
cmp
lods
icebp
push
cmp
or
xor
fdivr
jmp
pop
dec
bound
adc
jns
sbb
mov
int3
jbe
push
cli
mov
daa
stos
add
sti
fsts
push
cmp
inc
mov
sub
pop
mov
dec
sub
mov
clc
pop
imul
adc
lds
pop
adc
xchg
fimuls
jmp
aad
cmp
inc
out
es
cmp
aam
jno
pop
pushf
mov
repnz
addr16
test
pop
and
ret
sahf
add
jae
jecxz
rcrb
mov
or
int
xchg
fcoml
imul
idivl
mov
call
sub
jb
into
test
jbe
sbb
cmp
ljmp
xor
sbb
daa
repnz
xchg
pop
inc
es
dec
inc
stos
popf
pop
xor
pusha
call
fadd
lods
mov
sub
das
icebp
cwtl
js
sarb
and
jb
mov
fadd
pop
mov
pusha
or
lods
push
loop
jne
mov
rol
or
shll
dec
lcall
sbb
inc
mov
lds
sbb
inc
movsl
push
imul
sbb
mov
inc
mov
or
sahf
jae
jb
std
out
adc
adc
add
inc
jle
pushf
fs
sub
loopne
dec
cmp
call
insb
pop
inc
xchg
fidivs
cmp
lcall
sbb
cmp
add
imul
je
sahf
dec
cmpsb
xchg
mov
jg
adc
cmp
lea
rorb
enter
pop
repnz
jae
or
push
jbe
jg
pop
mov
cmpsb
insl
xchg
sbb
gs
mov
roll
nop
or
xchg
sub
push
inc
sbb
add
mov
rorb
lret
outsb
jle
jecxz
mov
fists
xchg
and
fnsave
mov
call
xchg
popa
cmp
bound
jo
mov
pmaxsw
les
cld
push
add
scas
dec
jle
dec
adc
enter
add
xchg
and
xlat
jo
push
xchg
xchg
scas
dec
sahf
mov
jmp
pushf
ret
lds
outsb
mov
cmpsl
mov
repnz
jbe
dec
mov
inc
shr
cli
mov
cmp
out
inc
push
aas
mov
mov
xlat
iret
repz
test
mov
lods
jno
cmp
adc
scas
setnp
in
xor
push
mov
cwtl
inc
or
inc
jmp
mov
pop
out
mov
sahf
jle
jle
add
and
ja
dec
call
inc
daa
js
hlt
dec
outsl
jbe
jno
or
and
jmp
nop
into
in
jge
add
aam
xor
mov
andb
pop
out
sti
jns
out
repnz
ret
jns
ds
add
imul
les
sbb
fcomps
jle
pop
in
cmp
int3
jle
xchg
jae
test
enter
cmp
push
aam
mov
scas
inc
xlat
int
lods
sbbb
sub
orl
xor
push
push
adc
mov
adc
outsb
inc
ss
jecxz
xor
and
jg
mov
nop
add
sar
mov
push
popa
stos
mov
ret
or
negl
jo
mov
jg
nop
mov
sbbl
dec
testl
fwait
xor
into
outsl
xchg
test
jae
decl
das
pop
mov
int3
sahf
xorb
push
out
dec
fisubrs
js
out
xchg
pop
out
and
leave
lods
cmpsl
out
fwait
mov
adcl
in
mov
loop
cmp
sbb
xor
pop
adcb
clc
movsb
xor
cmp
insb
fisttps
loope
daa
mov
outsl
std
pop
push
dec
cmp
adc
das
es
stos
and
mov
mov
cmp
imul
imul
mov
addr16
xchg
jmp
data16
mov
ljmp
pop
sub
jno
leave
adc
pop
cmp
jno
scas
or
adc
push
mov
mov
pop
adc
mov
test
out
jae
adcb
imul
iret
leave
repnz
push
pop
add
arpl
clc
cmc
push
repnz
fs
cmp
es
push
mov
out
mov
jb
push
inc
repz
cmp
popf
aam
pop
push
rclb
mov
roll
inc
int
scas
push
sbb
sub
xchg
in
jmp
scas
mov
xor
cmpsl
mov
cmpsb
xchg
in
sub
dec
js
sub
pop
push
xchg
out
icebp
call
jge
ret
jbe
jge
jle
jmp
jg
mov
lods
cmpsl
sub
and
stc
into
inc
daa
inc
push
loop
mov
and
adc
add
fisttpl
and
scas
cmpsb
mov
inc
je
in
xor
and
pusha
shll
test
cs
inc
leave
xchg
add
out
cmp
push
cmp
push
mov
jne
add
push
add
xchg
lea
xchg
clc
xchg
sbb
int
pusha
mov
inc
mov
push
mov
pop
fldl
mov
xchg
dec
popa
aam
jp
lahf
arpl
pop
mov
mov
mov
rol
outsb
cld
arpl
rclb
mov
xlat
adc
scas
cmpl
lahf
enter
xchg
push
mov
cmp
mov
out
dec
adc
cs
push
lods
jle
cmpsl
adc
mov
mov
adc
cld
pcmpeqw
adc
inc
mov
test
adc
fwait
xchg
ljmp
pop
test
jge
lea
sahf
xchg
pop
lock
dec
pop
xlat
mov
push
adc
cmpsb
adc
inc
or
add
jmp
fdiv
testb
adc
push
pusha
mov
in
cmp
iret
int
sub
movlps
mov
mov
inc
mov
sbb
ret
mov
out
sub
mov
ret
mov
das
mov
popa
mov
push
pop
dec
sahf
movsb
cli
cmpl
push
inc
jo
pushf
std
xchg
cwtl
sub
sub
imul
adc
incb
xor
and
sbb
inc
mov
fldt
xchg
inc
in
or
add
sbb
rorb
fisttpl
lahf
int
ds
aad
and
cltd
inc
sub
jne
xchg
cs
pop
outsl
xorl
jno
int
ljmp
orb
or
push
lods
push
and
adc
mov
pop
dec
icebp
leave
gs
mov
mov
test
sub
dec
sub
add
lret
inc
out
jae
pop
ret
fucomi
jmp
pop
sub
in
jle
ret
sbb
movsb
leave
add
adc
loopne
popf
ss
test
cmpsl
out
ficoml
pop
lret
icebp
call
in
outsl
leave
jle
cmpsb
loope
jae
cmpsl
add
cli
inc
loopne
arpl
mov
gs
cmp
mov
add
or
push
jl
bound
in
addb
sbb
fdiv
sbb
dec
dec
ja
pop
int
movsb
mov
cli
mov
jb
shrl
in
cmp
and
adc
or
mov
pop
loopne
inc
mov
mov
xchg
cmp
jbe
cmpsl
sbb
inc
test
lahf
jns
lret
xor
add
stc
pop
ret
mov
mov
lret
jbe
iret
sbb
bound
inc
add
addr16
mov
mov
fldt
jecxz
add
call
inc
test
push
adc
jmp
pushf
and
insb
cmpsl
mov
push
jecxz
or
add
leave
outsb
pop
dec
fs
out
filds
loope
mov
sub
lods
mov
mov
hlt
aam
imul
loop
pushf
insl
adc
mov
filds
mov
jle
sahf
xor
or
ficompl
pop
imul
xor
cmpsl
fsubl
ss
dec
jmp
and
lods
stos
mov
mov
out
dec
push
xor
pop
mov
sbb
inc
lods
popf
in
loopne
mov
rcll
dec
jge
pop
lea
lret
lods
mov
sub
push
lcall
or
fwait
cmp
dec
mov
aaa
loop
scas
push
sub
sbb
or
push
loopne
mov
cmp
xchg
jle
das
loope
or
andl
int
dec
daa
repnz
rclb
cltd
into
mov
pop
leave
pop
adc
jg
pop
insl
add
push
jmp
cmp
ficompl
imulb
adc
in
sbb
popf
fwait
icebp
dec
jnp
and
sub
cmp
test
push
mov
fbld
testl
iret
sbb
mov
adc
mov
into
test
sub
rorl
pop
mov
push
mov
aam
cmc
nop
imul
pop
cmpsl
sbb
faddp
fwait
and
and
lods
xor
xchg
fucomip
loopne
into
je
push
les
mov
jecxz
jne
dec
rol
pop
jl
jmp
pop
push
int3
adc
test
mov
aam
xor
jo
mov
push
stos
pop
idivl
push
in
sbb
mov
jae
jbe
rcrb
shrb
jge
test
fbstp
sbb
pop
lods
mov
mov
mov
adc
nop
jge
adcl
lret
inc
xchg
aas
push
pop
jns
cwtl
movsl
pop
xchg
sahf
sub
les
fstpl
add
aas
adc
jo
inc
cmp
bound
adc
ret
add
test
adc
movsb
fistps
pusha
mov
incl
repnz
notl
pop
cmp
sub
pop
add
mov
aad
ljmp
mov
mov
add
mov
out
sub
lahf
nop
adc
into
sub
imull
mov
mov
and
add
dec
adc
call
sahf
inc
mov
or
xchg
add
mov
hlt
mov
jbe
mov
add
popf
leave
push
in
xchg
cmp
pop
jle
and
dec
adc
adc
int3
push
pop
pop
jecxz
cmc
lahf
outsb
sbb
jl
dec
out
adcl
cmp
sub
inc
shrl
xchg
xchg
iret
cmp
jae
int
fsubrl
dec
insb
adcb
lea
std
mov
pop
loopne
ret
or
mov
in
lcall
mov
sub
jp
mov
stc
sbb
cwtl
inc
pop
fldcw
xchg
and
xchg
dec
xor
dec
xchg
pop
jae
inc
mov
repz
cli
and
sub
dec
popf
jle
dec
xor
cld
lea
test
add
aam
xchg
jb
jnp
inc
adc
cmpsl
mov
inc
and
push
pushf
jae
scas
ret
inc
mov
aad
sbb
std
sbb
add
pusha
cmp
inc
sub
stos
inc
aaa
sub
inc
add
jno
lcall
xor
movsb
push
iret
sub
mov
mov
adcb
sbb
add
and
push
cmp
fistl
jno
mov
repnz
dec
sub
or
adc
mov
cmp
mov
push
popf
and
xor
push
jns
fsubrs
jle
inc
mov
inc
mov
dec
and
cwtl
int3
sub
int
xor
imul
mov
cmp
loope
pop
and
jns
sub
jne
jmp
add
push
out
lea
shr
imul
cmpsb
jle
movsb
shll
negb
sarb
mov
out
addr16
sbb
orb
push
in
mov
add
push
cmp
inc
cmpsb
mov
xchg
push
mov
in
in
adc
ret
cltd
mov
cmpsl
loope
add
cmp
sub
jg
push
xor
sub
test
pop
adc
loopne
hlt
inc
stc
jl
and
jb
jnp
xchg
shll
pop
jb
imul
fiaddl
popf
mov
js
in
inc
loopne
mov
inc
call
lods
cld
out
inc
lcall
sbb
das
xor
cmpsb
mov
iret
sbb
jecxz
or
mov
mov
mov
pop
imul
mov
push
sub
and
leave
fcomp
rorl
ret
cmp
in
or
cmc
hlt
lds
cmp
lret
push
push
arpl
fs
push
fs
subb
pop
jae
or
std
dec
pop
daa
lahf
inc
movsb
je
cmp
push
pushf
scas
mov
mov
enter
add
cmp
cmp
imull
pop
sub
outsl
push
inc
cmp
mov
shrb
cmp
aas
push
mov
movsb
inc
and
outsl
or
sbb
pcmpgtb
popa
sub
test
imul
cwtl
jle
fsubs
les
push
daa
jle
imul
xchg
add
pop
out
dec
popa
cmp
mov
add
icebp
fdivs
mov
mov
push
mov
movsl
adc
push
enter
icebp
andb
js
mov
das
cmp
outsb
out
xlat
xor
push
mov
mov
cmp
ret
arpl
push
and
inc
push
repnz
adc
iret
rcrb
cmp
rolb
mov
inc
bound
sub
bound
scas
cmp
sub
mov
mov
insl
pushf
mov
rcll
adc
je
xchg
loopne
cmp
je
inc
fmul
std
jp
adc
fdivrl
faddl
add
mov
movsl
pop
out
sbb
stos
clc
pop
das
adc
leave
xor
jg
rorb
fnstcw
mov
sub
push
inc
cmpsl
cs
cmpsl
adc
pop
jl
jo
dec
outsl
mov
addr16
into
test
jo
into
jp
xor
dec
rolb
aam
repz
mov
add
inc
lret
mov
mov
ss
mov
xchg
nop
xlat
dec
inc
ret
incb
xlat
xchg
shlb
push
push
jae
iret
sahf
mov
push
jne
loope
lahf
iret
inc
fld
adc
jnp
mov
stc
push
and
shlb
in
std
push
fists
sub
cmp
gs
clc
mov
mov
jns
sbb
xor
repz
mov
fwait
mov
lcall
dec
add
add
lcall
and
sub
mov
jl
bound
xlat
fsts
lea
scas
sub
add
cli
mov
outsl
push
sahf
arpl
jno
xchg
sbb
fisttps
test
add
je
mov
jmp
faddl
mov
insl
push
xor
subb
xor
out
cli
jo
sub
test
mov
stos
sti
sbb
mov
add
dec
stos
adc
outsb
ficompl
lahf
or
es
shlb
insb
dec
xchg
loop
leave
aad
in
xor
repz
cmpsl
adc
cmp
xor
lahf
pushf
xchg
loop
pushf
adc
lods
lods
ss
clc
add
xchg
jnp
add
sbb
pop
loop
mov
add
cmp
xor
adc
pop
and
lds
mov
imul
lods
ja
pusha
data16
jns
mov
sub
aad
or
movsb
jg
and
mov
mov
jg
or
ret
loopne
or
dec
xchg
fbld
dec
xor
in
outsl
scas
test
mov
mov
push
sbb
pop
mov
in
xchg
xchg
arpl
xor
sub
enter
scas
dec
pop
pop
add
push
pop
sub
mov
mov
pop
jp
mov
shl
nop
inc
xchg
shrb
fnsave
ret
jnp
push
out
int
pop
sbb
aaa
jo
cmp
scas
into
and
out
and
push
push
dec
mov
jb
jg
fstpl
mov
lahf
das
in
dec
xor
stos
lea
in
fs
jp
cmp
in
psubsb
jge,pt
inc
out
and
test
inc
test
dec
scas
bswap
xorl
cmp
insl
lcall
fistpl
movb
insb
shr
pop
js
stc
push
ret
mov
pop
aam
and
sbb
fidivs
add
mov
in
loop
xor
call
arpl
pop
jecxz
loop
shr
sub
dec
nop
cmp
popa
outsb
cmp
mov
pop
pop
faddl
pop
cmp
call
js
stc
push
je
nop
je
insb
jns
aas
cmp
mov
xor
pop
sbb
pusha
adc
xchg
in
jle
leave
out
cld
mov
fidivrl
dec
add
jnp
movsl
dec
mov
or
test
pusha
outsb
or
add
out
daa
mov
mov
adc
clc
adc
imul
mov
pop
push
lods
dec
jb
into
adc
loopne
push
jmp
fs
popf
mov
xchg
jo
adc
or
loope
ret
inc
mov
stos
sbb
jl
ret
sbb
repnz
aaa
xorl
fsubrs
repnz
mov
lahf
mov
push
iret
xchg
xchg
dec
std
sub
fwait
mov
ss
fsts
or
in
sbb
and
ss
data16
and
and
pop
inc
mov
aas
fsubrl
cmc
cltd
mov
mov
iret
dec
adc
mov
jns
push
enter
xchg
outsl
into
mov
ret
xchg
inc
jge
test
adc
clc
or
jl,pn
insb
xchg
jb
nop
lret
rcl
adc
jae
ja
cmp
xchg
repz
das
push
mov
popa
aam
pop
pop
rcll
popf
test
jle
fidivrl
std
mov
pop
enter
push
adc
mov
gs
sub
pop
int
aad
ret
jo
mov
jno
fs
push
inc
sub
ljmp
aad
repz
cltd
lcallw
insl
cmp
fwait
aas
inc
insb
pushf
mov
pop
in
cmp
add
sub
jno
or
mov
xchg
mov
in
jne
cmp
int3
test
iret
scas
pop
outsl
adcl
movsb
lds
es
dec
xor
or
std
adc
mov
dec
std
es
popf
fdivl
lahf
push
in
aam
adc
fcmovnu
ds
fs
mov
cmp
mov
sub
inc
inc
pop
loope
dec
push
divl
aas
adc
ret
repnz
cs
clc
hlt
test
in
adc
xor
daa
or
mov
fsubrl
ljmp
push
cmp
sahf
xor
lcall
cld
mov
cmp
cmp
lods
rorb
es
fisubrl
dec
cltd
mov
lock
adc
test
leave
add
ss
stc
icebp
loop
sbb
je,pt
mov
cmp
out
in
or
movsl
rcr
adc
pop
dec
insl
xor
jb
outsb
out
lods
jnp
lahf
movsb
pop
xchg
cltd
cld
addb
dec
inc
stos
in
les
shl
mov
andb
inc
imul
xor
out
pusha
lods
xchg
inc
mov
jecxz
or
mov
negl
xor
out
int
loope
cmpsb
movsl
clc
insb
ss
sahf
mov
rorl
jmp
mov
mov
adc
data16
idivb
xorb
out
roll
mov
mov
loopne
cmp
sahf
imul
xchg
movsl
or
cmp
repnz
push
mov
out
dec
js
add
repnz
sbb
and
push
js
and
push
dec
pop
xchg
lds
mov
imul
ret
cmpsl
sbb
jge
mov
push
mov
pop
test
xchg
mov
popf
mov
fcomi
mov
jp
test
pusha
stos
call
xor
xlat
lds
mov
cmpsb
jmp
xor
adc
aaa
dec
mov
mov
xor
mov
nop
inc
jge
stc
insl
inc
xchg
movb
fwait
lcall
mov
in
inc
push
mov
add
xchg
into
mov
jns
push
inc
mov
ret
or
jp
mov
adc
xchg
lods
lods
dec
dec
dec
sub
cmp
cmp
fs
sbb
mov
jp
fsubrl
push
leave
adc
movl
xchg
push
jbe
jmp
or
dec
pop
mov
pop
repz
xchg
std
dec
flds
in
dec
lcall
fisttps
loope
cmp
inc
sbb
sbb
sub
inc
out
inc
ljmp
xchg
gs
cmp
cmp
aas
int3
pop
sub
aaa
mov
aaa
out
mov
push
mov
enter
ljmp
xor
sub
ret
cmc
pop
inc
push
mov
sbb
clc
add
add
xor
lahf
pusha
adc
mov
mov
jnp
movsl
ljmp
adc
pop
fistl
inc
dec
jns
adcl
aam
xor
add
test
popf
or
pop
xor
fistpll
mov
aaa
jg
out
dec
push
mov
inc
push
mov
mov
lds
inc
xor
aam
faddl
inc
mov
push
lock
inc
inc
fdivrl
nop
fisttps
xchg
rcrl
aad
incl
mov
cmpsb
pop
stos
ds
pop
pop
arpl
stos
cs
dec
adcb
push
fcmovnb
cli
out
ret
movsb
pop
ljmp
mov
sarl
cmp
sbb
cmc
mov
into
jno
fcoms
jmp
cmp
fidivrl
orb
adc
adc
in
imul
das
insl
aas
or
fisubl
out
sbb
xchg
movsl
lods
xchg
bsr
xchg
mov
daa
sub
adc
fwait
ds
popa
aad
fcomps
lret
fistps
shrb
lret
jg
cmp
add
add
cwtl
shrb
lret
push
xor
push
imul
xchg
sub
repnz
cmp
dec
into
adc
mov
jge
inc
push
mov
imul
mov
adc
and
sbb
add
jp
faddl
lahf
push
mov
lahf
xchg
pusha
dec
shrl
xor
arpl
icebp
xor
and
orb
insl
scas
inc
push
cmp
scas
push
mov
dec
sub
fcmovnb
fistpl
and
dec
xchg
outsl
ds
push
jb
jg
push
popf
dec
push
test
gs
repz
mov
mov
pushf
aad
adc
push
repz
icebp
inc
sbb
negl
leave
cltd
enter
sbb
fstl
outsb
inc
add
add
xchg
das
ja
xlat
cmc
ret
adc
clc
data16
clc
daa
cli
cmp
sti
sarb
push
test
xor
jmp
jne
lods
hlt
jmp
push
jmp
aas
inc
add
xor
and
sbb
cmpl
scas
mov
push
je
inc
mov
pop
orl
outsl
mov
shr
pop
pop
popa
jns
dec
popf
push
repz
decl
das
push
clc
test
mov
push
or
out
push
outsl
imul
lds
shrb
lea
in
add
inc
ret
adcb
cmp
inc
fadd
sbb
xchg
hlt
or
imul
imul
test
loop
clc
xchg
aas
les
out
inc
sub
outsl
xlat
adc
loopne
xor
enter
idivb
sub
cmpl
fcomps
jae
mov
cltd
dec
dec
sbb
fwait
xchg
xchg
add
shlb
pop
cmp
std
inc
clc
pusha
cmp
xor
imul
sub
mov
cmpl
push
ds
mov
sbb
and
stc
mov
fistpl
mov
pusha
inc
sub
dec
sti
dec
cwtl
mov
xor
fisubl
imul
push
adc
aas
fsts
loope
xchg
and
xchg
ljmp
es
mov
lds
sti
and
adc
jne
icebp
je
lds
sahf
out
or
or
inc
mov
movsl
inc
add
or
lods
push
decb
mov
mov
push
cmp
sbb
loope
mov
cmp
sub
push
or
loope
iret
pop
pop
jle
push
incl
mov
xchg
and
mov
jb
mov
in
loop
stos
andl
xchg
and
or
insb
adc
xchg
jb
xchg
ret
mov
test
dec
mov
adc
clc
inc
arpl
adc
jo
mov
add
jne
sub
loop
pushf
jl
icebp
sbb
addr16
andl
push
std
mov
push
cltd
add
sub
jg
cmpsb
add
inc
scas
mov
xchg
and
das
push
mov
enter
sbb
insb
das
in
or
push
sbb
cmp
xchg
cltd
dec
test
cltd
dec
cmp
fisubrs
jg
jbe
push
cltd
cld
lods
inc
pop
sub
xor
out
fstpl
sbb
in
into
into
or
mov
jo
mov
cmp
mov
cld
dec
movq
imul
hlt
ret
movq
das
cmp
mov
iret
and
nop
sbb
adc
imul
inc
stos
cmc
in
adc
aad
push
pop
jl
mov
outsb
je
shl
xor
dec
sbb
jne
inc
iret
push
dec
mov
and
or
xchg
xchg
mov
cmp
mov
or
jmp
jg
mul
scas
fnstenv
mov
imul
jns
jae
jae
adc
lods
mov
pop
mov
xchg
mov
dec
hlt
int
lret
fcoml
in
push
pop
push
insl
xor
jns
mov
ds
dec
add
adc
cmpsb
push
cmpsl
xor
push
mov
shlb
outsl
sarl
sbb
cmp
mov
popf
add
push
sub
add
test
and
jecxz
cltd
fwait
xchg
sahf
ret
sbb
xlat
lcall
cmpsl
cmp
popf
sbb
lret
cltd
xchg
push
cmpsb
pop
inc
fldl2e
xor
lahf
inc
shld
loop
pop
fmull
inc
cli
ss
xchg
hlt
pop
cli
out
aad
mov
lods
or
cmc
xchg
cmp
test
das
orl
fisubl
sub
nop
xchg
push
sub
adc
jbe
test
dec
mov
stc
push
fs
cmp
mov
jbe
cmc
fwait
iret
lods
sbbl
repnz
jp
xlat
lock
test
jp
cmp
jecxz
push
popf
test
ljmp
mov
or
or
rolb
dec
jae
add
cmpsb
cld
js
push
cltd
pusha
outsl
mov
test
aam
mov
loopne
push
pop
lahf
jo
mov
call
fimuls
mov
inc
xchg
push
sahf
push
aam
mov
call
push
js
and
xchg
jmp
jnp
xor
outsl
pop
jne
sbb
inc
dec
in
push
lahf
cwtl
repz
aad
jl
cli
inc
lret
mov
push
adc
pushf
rolb
loop
scas
in
test
push
inc
dec
xchg
xchg
dec
dec
mov
mov
xchg
add
cmp
add
mov
shl
jl
rolb
mov
jno
mov
push
or
js
add
inc
push
mov
cwtl
mov
xor
jl
push
shlb
xor
mov
adc
iret
mov
std
and
shrb
aas
mov
outsl
mov
arpl
add
add
push
outsb
seto
fimuls
add
adc
sbb
xor
cli
mov
rolb
pop
cmp
clc
mov
cmp
into
aas
xor
mov
lret
popf
add
repz
in
hlt
loop
inc
jae
sti
xchg
hlt
int3
sbb
in
lods
lods
dec
ljmp
das
push
jge
inc
xchg
pusha
push
insb
std
sbb
push
inc
add
sti
sub
out
push
sbb
mov
mov
xor
imul
pop
mov
lods
sti
in
mov
mov
ja
mov
inc
test
cmpsb
dec
scas
xor
jl
cmp
push
sub
pop
push
fcoms
ret
dec
xchg
add
leave
aad
push
jae
jae
mov
lcall
pusha
push
into
push
decl
icebp
push
outsb
inc
inc
fidivs
jnp
sub
je
adc
pop
fwait
popf
lods
push
insl
shr
cwtl
test
sub
jp
xchg
fistps
xchg
xor
std
jb
add
mov
test
loop
das
in
push
loopne
mov
insb
jecxz
cmp
and
sub
add
mov
stc
xchg
inc
cli
ljmp
fsubl
in
lret
lea
cmpsl
dec
xchg
fwait
adc
xor
mov
inc
test
jne
cmp
dec
mov
xchg
lret
repnz
sbbb
insl
and
xchg
adc
popf
or
mov
sub
jb
or
mov
rorb
sbb
mov
jne
in
lret
or
xor
and
jg
jmp
jg
xchg
or
mov
icebp
xor
jnp
mov
das
mov
popa
cmp
pop
add
mov
mov
int
and
test
cmp
mov
lahf
mov
mov
or
leave
arpl
jge
ret
aas
lret
nop
movsl
pusha
ljmp
ror
subb
movsb
test
fmuls
pop
mov
cmp
std
imul
out
xlat
cmp
sbb
outsb
add
adc
dec
xchg
dec
lcall
enter
jmp
and
and
inc
int
mov
mov
fsubr
lock
imul
dec
sbb
mov
stos
xor
sub
lahf
cmpsb
push
je
fnstsw
jb
or
test
stos
roll
jecxz
imul
push
jle
adc
xchg
xlat
mov
stos
std
sub
adc
into
inc
outsb
rcrl
cmp
jg
inc
test
les
jo
in
scas
pop
divb
test
sub
sbb
stc
sti
aaa
repnz
mov
fsubrl
inc
ja
dec
je
xchg
jp
mov
mov
imul
pop
shll
insl
jge
add
pop
rclb
add
pop
and
jmp
pop
xor
cmpb
xchg
lret
jnp
ret
ret
adc
jnp
and
out
dec
inc
out
pusha
dec
enter
inc
mov
pop
mov
outsb
jo
orl
in
stc
jmp
leave
std
std
and
push
in
mov
sub
dec
insw
jno,pn
scas
add
inc
inc
scas
push
inc
stos
pop
pop
xchg
push
push
xor
jge
pop
push
push
inc
or
addr16
clc
popf
push
ds
sub
daa
xchg
mov
test
cmc
jnp
adcb
add
inc
lock
mov
mov
sub
cmp
mov
add
fsubrs
adc
int3
and
lea
cmp
flds
push
push
adc
push
nop
test
push
in
fwait
clc
jge
and
fsubr
jp
xchg
lods
rorb
in
fisttps
sub
mov
pop
mov
iret
ret
pop
jmp
sub
pop
or
rcr
push
out
cltd
call
and
add
aad
dec
xor
mov
cmp
and
inc
and
sbb
xchg
jbe
imul
stos
lds
mov
ror
loope
gs
shll
sub
adc
loop
xor
xor
cmp
mov
mov
loop
popa
inc
stos
adc
test
fbld
push
push
mov
xchg
pop
sahf
outsb
shll
repz
cmpsb
les
leave
push
cmp
daa
addr16
lret
cmp
cmpsl
mov
scas
inc
test
dec
mov
pop
mov
dec
jbe
xchg
pop
dec
adc
pop
and
in
inc
out
std
or
clc
das
fwait
enter
pop
sub
add
pop
push
xor
jae
test
xchg
fwait
mov
call
pushf
jle
xchg
insb
mov
jns
outsl
sarl
popf
and
dec
pushf
adc
push
dec
xchg
cmpsl
cmpsb
mov
scas
add
out
mov
int3
mov
pop
xor
mov
push
data16
sbbl
mov
inc
pop
cmp
or
xchg
adc
mov
push
push
cmpsl
lds
fidivs
mov
mov
jnp
adcb
fcoms
push
push
jmp
lods
enter
xor
adc
lds
push
insl
aas
jl
nop
and
add
in
jle
mov
test
in
push
jmp
fnstsw
fdivs
push
dec
mov
mov
sbb
cmp
test
mov
shlb
push
xor
lret
mov
rcl
mov
mov
cmpsl
scas
xorb
cmpb
test
jl
out
mov
mov
in
addb
notl
into
jo
sti
cmp
jl
fstl
ljmp
mov
shll
pop
sahf
xchg
pushf
int
test
and
jle
xor
sbb
push
lea
pop
jl
fcmovne
incl
jae
push
mov
stc
rclb
cmp
or
jnp
adc
dec
push
into
cmp
lods
cmp
int
icebp
cmpsb
mov
dec
loopne
ret
nop
and
inc
in
bound
xchg
dec
or
test
loope
cmp
or
cld
mov
cmp
fldenv
and
mov
aam
lock
enter
lret
inc
fld
push
dec
in
xchg
xor
hlt
and
stc
push
xor
mov
sbb
add
mov
jb
roll
cmp
mov
xchg
es
scas
xlat
ret
xor
mov
push
inc
in
xchg
addl
mov
adc
ds
mov
or
call
and
mov
int3
pusha
les
cmpsl
outsl
mov
clc
fisubs
dec
lods
adc
je
cmp
push
std
in
mov
mov
addb
addr16
into
sbb
in
lock
add
mov
pop
add
jbe
mov
jmp
inc
mov
aad
jmp
jle
scas
lods
sub
push
or
adc
pop
xor
inc
inc
jo
fstpl
ljmp
lods
test
out
fucom
das
aad
mov
sub
pop
aas
and
ret
jbe
sub
jge
jg
popf
jecxz
or
sbb
sbb
cmp
loopne
int3
xor
jbe
shrb
in
ja
js
push
sbb
cltd
jo
es
les
sarb
pop
xor
gs
cmpsb
lock
repnz
je
dec
dec
lods
out
aad
add
or
cli
cmc
mov
in
xlat
sub
adc
mov
jp
adc
cli
push
jp
push
jl
mov
icebp
repnz
lret
nop
rolb
sbbl
add
lods
into
stos
sub
and
jmp
dec
push
jno
das
adc
xchg
jo
push
loop
push
popa
xor
sbb
mov
out
test
adc
ds
fcmovnu
push
push
adc
mov
push
dec
test
movsl
cld
out
imul
pop
xor
push
insb
inc
mov
xor
into
lock
outsl
outsb
xor
pop
dec
pop
jg
fwait
loop
lret
adc
mov
lret
xor
scas
jmp
cmp
shrb
jge
lea
sbb
aas
negb
mov
mov
pop
imul
inc
cwtl
sub
mov
flds
mov
lcall
pushf
lret
xchg
add
xchg
imulb
jle
dec
add
mov
mov
shlb
sub
sahf
xchg
cltd
imul
stos
cmp
cmpsl
iret
sub
sbb
loope
out
xor
jbe
das
inc
pop
ljmp
push
lcall
idiv
mov
inc
int
cltd
lea
inc
xchg
or
xor
ljmp
rcr
stos
lret
jno
xor
pop
or
loope
mov
imul
cltd
pop
scas
sub
inc
push
shr
scas
out
jmp
adc
div
adc
insb
mov
popa
loop
mov
bound
push
mov
out
sarb
cmc
add
inc
pusha
hlt
xchg
inc
das
insb
push
shl
movsl
adc
cmp
sahf
sbb
and
and
xchg
ss
mov
dec
lds
adc
mov
sub
inc
loope
bound
and
mov
roll
lret
push
mov
fdivr
dec
mov
movsb
add
clc
mov
pop
cs
and
dec
xchg
ljmp
mov
or
xor
lret
mov
jbe
xor
lret
aam
lods
pushl
out
cltd
cltd
int
add
mov
add
rolb
mov
fdivs
icebp
cmp
cmp
ret
cmp
mov
lret
andb
std
jns
scas
ljmp
sbb
call
inc
inc
sub
inc
jp
lahf
sub
mov
inc
test
push
dec
inc
shlb
jo
sahf
aaa
lock
xlat
and
cmpsb
aad
pop
adc
sbb
pop
ret
xor
pop
mov
cltd
mov
cmc
les
inc
rol
inc
cmp
dec
and
push
xor
adc
in
xlat
adc
mov
push
or
scas
sub
daa
add
stos
hlt
sbb
out
js
test
loop
mov
std
cmpsb
xlat
adc
popf
mov
in
xor
sub
mov
pop
imull
mov
jp
out
mov
adcl
pop
and
mov
sub
sti
cltd
mov
inc
ds
pop
xchg
daa
xchg
subb
rol
test
je
pop
and
jne
test
movsl
dec
orb
fs
movsl
jo
clc
sub
inc
dec
orl
pushf
adc
out
sbb
mov
sbb
pop
mov
cmp
xchg
xchg
dec
pop
stc
lock
les
ficoml
cmp
int
jmp
addr16
stos
mov
xlat
adc
insl
iret
inc
jnp
popf
rorl
inc
mov
loop
pop
or
lret
or
int
mov
loop
jae
mov
mov
xchg
movmskps
mov
imul
lods
lahf
jl
cmpsl
inc
in
icebp
cmp
out
arpl
add
testl
es
sub
pop
or
sbb
xchg
fistl
sub
jecxz
inc
ja
push
mov
es
push
stos
dec
rolb
dec
insl
insl
mov
xor
stc
xorb
sti
in
cmp
repnz
packssdw
cmpsl
sbb
shlb
add
pop
sub
jae
scas
jb
cmp
dec
ds
push
fwait
dec
addr16
mov
outsl
pop
push
xor
push
das
outsl
xchg
jne
push
mov
cltd
cmp
push
lock
data16
push
push
cld
mov
insl
dec
les
mov
dec
es
jmp
into
in
iret
lcall
rcr
lret
inc
scas
in
or
mov
jg,pt
inc
pop
lahf
mov
and
add
dec
sti
dec
dec
hlt
arpl
mov
bound
sub
jb
pop
xchg
adcb
mov
xchg
inc
scas
cmp
shll
lods
daa
aad
lods
fldt
cli
sahf
test
iret
sub
inc
dec
loop
or
in
inc
scas
cmp
lret
ss
test
cwtl
sub
cmp
sub
inc
arpl
or
sub
jmp
jmp
mov
into
addr16
dec
dec
addr16
popa
xor
hlt
std
inc
xor
dec
mov
push
jno
scas
adc
decb
in
push
inc
shll
daa
jl
lea
or
dec
cmp
lds
ret
sbb
pop
andl
mov
insb
inc
pusha
inc
lahf
es
in
and
fildl
shr
fsubrs
mov
jmp
aam
inc
movsl
xchg
xchg
lret
in
data16
xchg
inc
jmp
inc
icebp
and
ss
stos
inc
sahf
lcall
lock
bound
add
je
stos
cltd
rcll
jg
push
rcrl
mov
daa
lods
add
js
aaa
or
scas
sub
lock
in
fisubl
adc
xchg
mov
aas
jbe
inc
sub
shrl
fistps
sahf
pop
pop
lods
xchg
sub
mov
ret
dec
imul
cmp
dec
or
iret
adc
aas
pusha
fstp
int
std
mov
mov
lcall
add
push
jmp
aaa
popa
dec
ficomps
mov
in
push
pop
gs
dec
mov
aaa
xor
cmc
sub
mov
scas
mov
xchg
mov
push
movsl
sbb
imul
xor
or
jnp
pop
mov
dec
ljmp
pop
inc
dec
out
sbb
std
jmp
jmp
inc
scas
in
dec
enter
addr16
xchg
mov
nop
popl
arpl
cmc
sbb
and
jmp
out
cld
andb
cld
test
ja
mov
mov
in
scas
inc
xchg
test
sysexit
push
xchg
repnz
push
in
imul
mov
push
int3
and
adc
frstor
mov
push
ds
sbb
rcrb
test
mulb
mov
mov
cli
jmp
xchg
push
mov
jge
dec
mov
dec
fstpl
mov
in
idivb
cmpsl
push
dec
mov
repnz
imul
sahf
jle
jecxz
pop
sti
test
mov
scas
and
std
movsb
add
sysret
lods
daa
movsl
pushf
inc
dec
fcmovb
outsb
sub
xchg
rorl
sub
push
shll
mov
leave
cmpb
adc
insb
lret
sbb
dec
xor
push
ja
push
cmpb
pop
mov
pushf
pop
jg
pop
and
fs
ja
sub
or
fimull
and
mov
dec
xlat
pop
stc
or
jecxz
pushf
sub
es
subl
out
adc
sub
push
push
pop
dec
pop
jle
mov
leave
fwait
push
mov
lds
mov
jle
loopne
je
sahf
imul
movsl
lods
lret
xor
test
jmp
xor
push
or
mov
repz
jmp
jb
fwait
out
shrb
test
and
sub
popf
jo
add
out
ja
mov
sub
fmuls
es
sub
outsb
adc
popa
imul
cmpsl
fsubr
adc
dec
cmp
shrl
ficomps
mov
outsl
stos
inc
push
hlt
mov
push
faddl
js
sub
je
sub
cmp
xor
xor
sub
ja
add
popf
fisubrs
fs
sub
mov
cs
jge
jno
ds
jno
out
dec
hlt
jb
sbb
mov
cmp
inc
cmp
sub
out
repz
arpl
jl
les
int3
xchg
mov
mov
jns
out
fdivs
adc
add
push
or
test
cmp
sub
sti
in
cltd
push
out
call
mov
jo
movsl
mov
sahf
loopne
jae
arpl
sub
mov
sub
sub
mov
fbld
or
icebp
ud0
hlt
dec
inc
mov
mov
mov
xlat
pop
cltd
repz
ljmp
pop
dec
jp
jge
leave
loope
push
std
loop
inc
int3
int
lods
pop
sub
or
adc
push
push
rcrl
loope
leave
fsubrs
mov
ror
in
pushf
lcall
mov
fstl
or
movsb
inc
insl
test
ret
test
sahf
add
dec
adc
cmpsb
dec
dec
rcrl
add
mov
adcb
pop
sar
test
jecxz
imull
pop
fdivs
jmp
in
push
scas
jns
mov
pop
sub
xor
inc
push
jecxz
add
pop
aas
call
lods
rorb
repz
int3
mov
jae
xchg
adc
add
xor
or
faddl
xchg
fdiv
push
in
sbb
inc
divl
sbb
push
cmp
mov
fwait
dec
out
xor
xor
sarl
sbb
mov
cli
scas
stos
fsubrl
test
sub
mov
ja
fsts
add
adc
jae
xor
sub
ja
mov
aaa
cmp
adc
lret
cld
addr16
mov
push
decl
scas
mov
mov
in
inc
repnz
mov
xchg
cmp
popf
adc
inc
aam
jb
mov
xchg
sub
jmp
das
aam
jb
inc
sbb
cmpsl
ret
inc
add
sbb
loope
push
movsl
jecxz
fcomip
sub
push
fcoms
shrl
scas
push
fisubl
or
aas
mov
xor
test
xchg
sbbb
incb
aas
jl
sbbb
mov
dec
and
insl
andl
sub
cli
insb
pop
inc
pop
xchg
adc
sbb
push
sbb
add
arpl
outsl
dec
lods
mov
out
int
lods
and
out
jns
xlat
mov
push
test
and
xor
clc
cmpsb
adc
jle
dec
int
nop
cmp
jle
dec
mov
pop
and
dec
movsl
inc
adc
mov
pushf
ja
insl
in
jo
mov
in
mov
pop
je
adcl
sbb
or
pop
pop
pop
mov
or
mov
fsub
sarl
das
xchg
int3
mov
inc
xchg
jge
in
pop
cmpsl
mov
and
jbe
lods
push
mov
jg
inc
jne
flds
push
js
lea
dec
iret
pop
das
inc
daa
jg
sub
xor
loopne
test
mov
add
les
push
imul
adc
jnp
and
leave
and
cmp
add
push
push
lea
xor
repnz
test
or
sbb
js
jnp
cmp
mov
repz
xchg
ret
orb
xlat
ljmp
addr16
xlat
push
mov
popf
ss
std
xchg
push
sbb
nop
mov
ljmp
jns,pt
shlb
bnd
adc
pop
fwait
xor
inc
aas
inc
mov
pop
inc
hlt
mov
cmp
cmpsb
out
jne,pn
adc
sbb
lock
or
aam
inc
push
mov
xlat
out
stos
inc
and
jp
jbe
cmp
xchg
sbb
jno
icebp
adc
mov
fwait
mov
sbb
dec
inc
add
rcrb
cmp
pop
pop
xchg
jb
push
mov
or
mov
or
mov
and
test
or
jmp
pop
gs
jb
sub
pop
pop
or
sbb
cmc
out
addr16
adc
stc
popa
sbb
fs
test
movsb
insb
lret
mov
inc
xor
adc
insb
add
pop
lret
loope
pushf
mov
movsl
push
dec
sub
int3
or
pop
pop
mov
ljmp
pop
ja
xchg
scas
and
push
ja
into
int3
popf
pop
ds
leave
push
test
add
cmpsl
add
dec
popa
repnz
dec
dec
loope
xchg
or
xchg
testb
push
test
iret
dec
cmp
mov
icebp
testl
sub
aas
xchg
int
push
hlt
fistps
ljmp
xchg
mov
icebp
push
inc
stos
test
add
dec
int
idivl
adc
daa
jnp
lea
fs
sub
or
imul
dec
repnz
jnp
mov
pop
aas
int
inc
ret
movsl
and
lcall
in
bound
outsb
cmp
aaa
out
xchg
fadds
bound
das
add
push
out
movsb
enter
push
push
xchg
lock
cmp
pop
ds
mov
jbe
cmp
cmp
xchg
mov
outsb
adc
fisubl
dec
std
fcmove
pop
fsubl
into
mov
dec
iret
in
aas
out
cmp
fstl
outsb
jo
in
inc
jecxz
mov
cli
outsb
inc
lea
hlt
sub
fstpt
pop
xor
iret
outsb
pusha
scas
sbb
or
xor
mov
add
cmp
xchg
sbb
mov
xchg
push
in
mov
sub
les
push
je
jne
test
pop
dec
xchg
mov
jne
dec
mov
pop
shll
aas
in
inc
jle
stos
setl
mov
add
fbld
cli
add
shll
mov
lahf
mov
push
xor
aas
push
sub
mov
pop
xor
out
pop
xor
pushf
nop
jbe
add
inc
fstps
lods
hlt
pop
fistpll
movl
out
mov
int3
dec
outsl
or
jle
jmp
inc
fsubs
fs
out
dec
inc
jo
aad
loop
ds
xchg
mov
divb
cmp
jnp
mov
sub
inc
xchg
popf
jno
das
jge
test
lcall
push
xchg
in
xchg
addr16
das
push
pop
add
popf
je
adc
xor
adc
out
push
lds
and
mov
mov
or
push
test
cmp
adc
dec
mov
sbb
or
xchg
and
jl
fwait
adc
addr16
movsb
cwtl
fwait
inc
mov
add
arpl
dec
add
mov
jmp
fnsave
hlt
cmp
jns
fs
cmpsl
mov
jl
xchg
xchg
popa
test
push
inc
insb
das
mov
inc
pop
push
stos
mov
rorb
cmp
sahf
imul
lock
ficompl
jge
dec
pop
hlt
cmpsb
hlt
push
dec
stc
inc
pop
and
aas
mov
orl
shrl
push
shr
sarb
fcompl
out
pusha
aaa
and
xchg
cli
pop
flds
mov
xchg
repnz
daa
pop
and
or
fcomps
xlat
test
nop
xor
sbb
cmp
jecxz
sub
xor
shl
test
lods
inc
and
loopne
bound
cmpsb
incb
adc
pop
stc
sbb
jmp
push
push
jo
fbld
jge
stos
xor
adcl
hlt
repz
xor
and
movsl
das
ret
mov
sub
cmc
sub
jb
pop
out
sbbb
xor
adc
lret
hlt
mov
shrl
ljmp
xor
and
inc
jle
out
and
arpl
pop
cmp
cmpsb
aas
inc
and
fnsave
rorb
pop
sbb
mov
push
pop
sbb
fs
xchg
or
and
push
xor
outsl
jl
lret
xor
mov
repz
cmpsl
fs
or
aam
lods
imul
repz
daa
lahf
sbb
jp
pop
xchg
xchg
aam
cwtl
mov
xchg
cmpsb
jae
nop
aam
cmp
sbb
into
daa
insl
and
or
loopne
pop
sbb
mov
lock
xor
push
mov
or
mov
cld
cld
jno
cmp
push
jae
or
jb
cltd
pusha
mov
mov
push
push
push
out
adc
dec
ds
jnp
stos
sarb
add
adc
packsswb
push
cltd
pop
xchg
jne
mov
in
ficoml
fs
mov
loopne
scas
scas
sbb
xor
and
mov
ljmp
fcmove
mov
cwtl
outsb
addb
pop
jo
sbb
inc
mov
stos
je
push
hlt
nop
jl
inc
add
cli
rcrb
mov
jge
stos
mov
mov
pusha
or
xchg
pop
fisubrl
and
adc
in
js
sub
std
push
xor
xchg
shl
and
cmp
and
std
repz
or
or
mov
xchg
mov
mov
push
xor
and
xor
jecxz
popa
rolb
enter
das
adc
push
insb
cmp
mov
xchg
cmp
hlt
out
mov
lcall
adc
jp
rorb
gs
ret
pop
mov
mov
adc
lahf
jo
sbb
xlat
mov
sbb
fsubrp
loop
cmp
out
and
inc
pop
ja
mov
and
lock
pop
inc
rcll
or
fistps
out
pop
andb
xchg
add
daa
test
decb
lods
or
mov
pop
mov
jns
ljmp
add
xchg
scas
cmp
rol
mov
ss
jp
clc
pop
sub
sub
cmp
mov
inc
pop
add
and
add
pop
mov
xchg
push
pop
jae
push
mov
jl
pop
popa
adc
jecxz
sbb
sub
fwait
pop
jecxz
fprem
shrd
xor
cmp
cmpsl
lcall
jne
jbe
cmpl
or
dec
mov
jmp
cmp
inc
inc
repnz
les
cmp
cmp
lods
mov
xchg
xor
xchg
jo
cmpsl
push
mov
je
call
je
push
jb
dec
push
ds
movsl
inc
lock
test
mov
mov
jmp
xchg
adc
subl
lock
adc
dec
cld
outsb
cmpl
add
leave
push
adc
or
test
daa
test
lret
mov
loop
pop
rcr
mov
sbb
loop
scas
rcrl
test
mov
dec
add
sbb
insl
fldt
aas
outsb
nop
sub
mov
mov
and
imul
xor
cmc
sahf
bound
jo
shrb
mov
jbe
aas
cmp
cmpsl
cmp
mov
mov
and
xor
aam
or
out
cli
lret
add
fwait
inc
iret
les
mov
test
cmp
adc
fstps
cmpb
adc
adc
std
cmp
js
loopne
jmp
mov
pop
aad
inc
test
cmp
int3
loopne
push
xor
pop
cmp
movsl
mov
mov
mov
je
dec
lods
ret
call
jg
cld
mov
lret
into
sbb
scas
in
outsb
ret
aam
jb
imul
inc
imul
dec
dec
push
push
sub
xchg
jbe
lods
add
enter
sub
lret
out
push
inc
add
aas
ds
mov
mov
es
loopne
mov
and
sub
mov
lds
divb
sub
pop
pop
es
or
rcrb
inc
jae,pn
add
lods
mov
xchg
add
ds
lock
fldcw
dec
sarb
jg
jge
int3
jo
mov
loope
call
fnsave
cwtl
and
mov
jb
cmpsl
inc
lods
lods
imul
out
aam
repnz
inc
popf
das
fs
xor
cltd
mov
test
xchg
adc
push
icebp
or
in
pop
adc
fadd
rorl
push
inc
out
mov
icebp
cmpsl
mov
rcr
in
jb
or
dec
mov
pushf
pop
shr
sbb
cmp
and
pop
push
inc
adc
sbb
imul
or
cwtl
stc
mov
and
inc
ss
and
mov
fidivrs
or
add
ret
enter
testb
out
aas
cwtd
mov
pop
and
fistps
add
jmp
push
jnp
sbb
mov
xor
pop
cld
or
cwtl
pop
insl
lret
or
inc
subl
jns
push
nop
movsb
mov
ljmp
repnz
es
das
xchg
jo
loopne
jmp
shl
or
enter
dec
cmpsb
xchg
daa
inc
repnz
jl
and
decl
xor
cli
movb
ljmp
movsl
leave
sub
popf
movsb
mov
inc
xor
xchg
clc
adc
mov
add
xchg
notb
jle
pop
addr16
push
fistpl
lcall
xor
scas
or
sbb
push
mov
mov
mov
mov
xor
pop
ficomps
jo
ja
iret
mov
and
outsl
popf
mov
cmp
rcl
mov
adc
xchg
push
iret
dec
push
fdivl
or
cs
popa
xor
jg
cmpsl
js
cmp
insb
xor
add
sub
icebp
jno
dec
rcrb
xor
addr16
scas
mov
test
lds
inc
imul
lods
test
repz
dec
es
adc
and
mov
fcompl
pop
repz
pop
aaa
out
inc
mov
cmpsl
mov
ret
adcb
hlt
pop
test
mov
lcall
test
sub
inc
mov
pop
int3
mov
xchg
dec
out
inc
pop
mov
gs
and
rorb
cmp
ret
loop
jno
cld
mov
or
loopne
mov
push
loopne
mov
adc
mov
sbbl
mov
cmp
adc
mov
shll
nop
mov
add
sbbb
jmp
out
lock
add
repnz
lahf
push
jle
in
mov
inc
push
in
sahf
dec
xchg
test
pop
mov
push
sbb
and
xor
mov
push
jb
lock
fwait
sub
in
leave
test
mov
adc
dec
and
stos
inc
xchg
xchg
sbb
mov
cmp
adc
popa
scas
sqrtps
push
or
in
mov
or
cmp
xchg
fisttpll
pusha
cmc
movsl
pop
mov
das
adc
jnp
or
in
je
repnz
sub
ds
and
mov
nop
gs
jecxz
jb
hlt
lcall
jno
popf
push
fistpl
aas
in
ret
js
lret
jmp
clc
mull
xchg
je
rcrb
sub
aas
js
inc
xchg
or
mov
add
fldl
cmp
test
add
cmc
std
pop
jge
mov
std
popa
inc
add
mov
dec
adc
cmp
push
sti
jo
mov
pop
incl
gs
jnp
rorb
movsl
jmp
adc
cmp
push
sub
pushw
cli
mov
mov
mov
xchg
jns
lock
hlt
test
imul
mov
mov
inc
dec
cmp
movsb
das
sub
mov
test
xchg
movsb
adc
outsl
std
imull
mov
roll
push
sbbl
push
pop
mov
mov
fs
sbbb
cmp
inc
mov
push
arpl
mull
push
js
pop
in
xor
adc
dec
fidivrl
add
xor
mov
fwait
dec
es
adc
fnstcw
mov
xor
adc
scas
negb
mov
loop
test
andl
in
inc
and
jno
sbb
lahf
shrl
adc
pop
filds
cmpsb
push
fdivl
shlb
in
mov
xor
pop
dec
cmpsb
shlb
push
outsb
sahf
xchg
add
test
or
insl
lcall
dec
lret
or
jno
fisttpl
cmpb
push
fidivl
popa
xor
and
or
pop
je
ljmp
push
rcrl
mov
imul
ja
les
inc
and
mov
xchg
pop
ljmp
jns
and
test
dec
stc
add
rcrl
cwtl
push
xchg
sub
dec
push
in
mov
fistpll
movsl
push
jne
or
cltd
jae
cli
jbe
mov
divl
sbb
mov
popa
sub
jbe
js
addl
sub
rclb
xchg
fisubs
mov
mov
loopne
sub
arpl
setp
rol
push
xor
imul
push
dec
sbb
in
xor
leave
test
pushf
jge
decl
shrb
push
lods
imul
xchg
xchg
gs
int3
mov
iret
mov
shrl
call
mov
mov
jecxz
rolb
leave
icebp
sbb
inc
sub
movsl
pop
mov
ljmp
xor
jle
nop
test
mov
icebp
enter
mov
lahf
loop
lahf
and
lods
xchg
fmuls
jnp
call
fucomi
xchg
cwtl
fldl
jae
adc
xchg
pushf
fbld
leave
and
andb
out
arpl
mov
outsl
xor
xor
test
aas
jo
idiv
adc
mov
or
gs
adc
xchg
shlb
push
jbe
cmp
popa
pushf
int3
pop
jmp
jbe
add
pushf
out
in
xchg
insb
inc
stos
mov
add
lods
mov
and
xchg
xchg
mov
iret
lret
or
lods
inc
rcll
sbb
mov
jg
cmp
mov
fldcw
dec
pusha
les
es
cs
mov
mov
test
in
sub
daa
pop
dec
lods
xchg
pop
insl
xchg
dec
or
mov
fstps
or
jne
fstps
add
jg
ds
mov
mov
cmp
jg
xor
fstpl
push
rcrl
mov
pop
pushf
notb
das
test
aam
hlt
mov
shrl
mov
or
jecxz
in
pop
out
daa
jb
mov
lods
inc
and
ret
mov
mov
mov
jg
mov
xlat
jl
inc
sbb
aam
sbb
ds
mov
popf
push
push
pusha
push
and
or
pop
pop
das
int3
push
popa
fs
test
push
add
mov
aas
or
push
sarl
sbb
mov
push
push
push
sti
in
insl
or
cmpb
test
idivl
pusha
dec
xchg
ljmp
ss
push
enter
push
mov
jl
mov
jp
push
sub
and
mov
inc
push
xor
mov
mov
lea
adc
int
adcb
adc
and
sub
outsl
cmpsb
stos
adc
clc
lcall
pushf
jg
inc
adc
sbb
adc
in
in
pop
xor
sbb
rcll
dec
leave
push
or
mov
movsl
nop
sub
jb
jmp
je
adc
leave
xor
mov
fimull
sub
and
mov
inc
mov
xchg
es
mov
sbb
xor
ret
push
shll
mov
sarb
and
add
mov
icebp
mov
dec
repz
in
push
test
fwait
inc
in
and
hlt
das
push
xchg
push
dec
sbb
adc
inc
add
insb
rorl
push
add
push
outsl
lahf
mov
jmp
sbb
rcrb
push
cmpsb
je
xor
push
adc
test
pushf
ret
pop
test
addr16
fstl
jg
xchg
pop
sub
jl
adc
movsl
pop
stc
arpl
jae
or
push
mov
jae
cmpsl
jbe
jae
push
cmc
dec
iret
dec
test
xchg
test
cmp
cmpl
jne
dec
adc
cli
lds
sbb
push
push
inc
pushf
and
pop
jbe
cmp
lret
fcom
cmp
jnp
sub
lret
xlat
faddl
pop
pushf
aam
or
mov
sub
and
loope
push
pushf
imull
idiv
adc
in
aam
mov
jl
es
mov
frstor
ret
xchg
shr
jmp
mov
scas
gs
mov
jno
mov
pop
sub
lret
in
jns
push
movsl
mov
imul
enter
sbb
or
xchg
jne
imul
iret
push
jb
pusha
int
sub
lcall
adc
adc
lock
fisubrl
sbb
inc
lahf
jle
mov
mov
sarb
pop
mov
sub
push
sbb
pop
insl
xchg
test
sar
pop
subl
out
fwait
ret
mov
jle
ret
sahf
ret
push
loop
lahf
mov
aaa
or
xor
pop
ja
movsb
inc
pusha
fld
adc
or
push
das
mov
mov
and
cwtl
mov
inc
jb
cmp
xchg
push
push
sub
mov
and
jge
lret
dec
outsb
mov
test
fnsave
gs
or
js
test
jg
pusha
cmp
xchg
add
pop
stos
adc
xchg
lods
ds
and
sahf
out
push
mov
xlat
jb
shrb
pushf
scas
pop
aaa
inc
cmp
sbb
outsl
or
je
cmpl
cmp
sbb
pop
mov
mov
push
xor
xor
mov
xor
or
aaa
sub
aas
jbe
push
cmp
fstpl
mov
inc
and
mov
add
mov
mov
mov
add
inc
imul
xchg
xor
push
mov
insl
lds
mov
ja
inc
cs
add
in
push
mov
cmpl
jbe
aas
sub
xchg
jne
fwait
adc
lcall
push
and
xor
in
icebp
shl
mov
cmp
outsl
iret
test
jnp
dec
inc
fs
jle
fwait
test
clc
shll
add
shlb
mov
and
push
mov
in
lock
out
cld
sub
or
jmp
inc
adc
jbe
inc
rclb
js
sbb
das
pushf
loope
je
or
jne
imul
iret
jg
iret
pop
aas
out
mov
fisubrs
mov
mov
push
sub
rorl
adc
mov
mov
movsl
mov
arpl
mov
test
loope
insl
movsl
push
add
or
push
jmp
idivl
jmp
push
fxtract
ret
xor
fwait
push
sbbl
les
mov
sub
scas
test
adc
lret
popa
out
testb
lock
and
hlt
es
inc
out
popf
xchg
incl
mov
aam
cld
lea
les
pop
stos
pop
inc
pop
cmp
std
xchg
jnp
dec
js
data16
cltd
add
lods
cmpsb
and
divl
add
into
mov
bound
push
mov
std
clc
jo
jecxz
sti
adc
shl
ret
jno
cmp
mov
mov
clc
sub
add
adc
sbb
or
pop
sub
in
push
lret
enter
push
add
imul
sahf
dec
push
loop
mov
pop
mov
movsb
jl
mov
insl
xor
outsb
cs
xchg
shrl
add
lods
imul
sbb
das
cld
dec
ret
call
mov
bound
stc
addr16
cmp
lret
sbb
cmp
jge
mov
jb
or
inc
cltd
lret
inc
mov
jae
lret
mov
dec
add
xchg
loop
and
push
scas
sbb
xchg
rol
mov
push
lods
cmp
mov
sbb
roll
or
in
fsubrp
sbb
xorl
arpl
fldl
or
lods
dec
dec
xor
pop
dec
mov
xor
aas
dec
cltd
cld
mov
sub
jne
dec
or
add
mov
addr16
mov
cmp
dec
jle
xchg
xchg
mov
sub
ljmp
sti
mov
pushf
push
test
push
xchg
pop
sub
loope
cmc
xchg
jl
cltd
sub
sbb
jo
sbb
fisttpll
add
fimuls
and
into
cmp
inc
out
jg
xchg
cli
iret
divb
xchg
jno
repnz
sub
cld
int
scas
and
xchg
mov
or
insb
lret
pop
or
or
xchg
dec
ja
mov
shrl
inc
shr
adc
lods
cmpsl
xchg
sub
add
push
emms
jae
fldl
scas
testb
sub
or
int3
je
fwait
leave
ljmp
sbb
jae
lahf
push
push
adc
sbb
in
xchg
inc
sbb
xchg
mov
push
and
mov
xor
push
inc
dec
sarl
xorb
cmp
pop
xchg
shl
cmp
sbb
ljmp
jae
idivl
sub
loopne
xchg
cmp
and
cmp
xchg
mov
out
or
or
xor
sub
mov
lds
mov
sbb
sbb
push
push
out
inc
push
repnz
mov
pop
push
lock
mov
mov
mov
lds
sbb
xchg
movsb
mov
mov
dec
inc
pop
pop
insb
adc
rorb
xchg
loope
or
jmp
out
sub
fstpt
in
or
jle
lods
mov
mov
gs
push
mov
pop
mov
push
or
dec
add
xor
pop
rolb
out
and
negl
jmp
imul
loope
jle
pop
and
push
push
fisubs
sub
xor
xor
das
sub
add
inc
test
sahf
js
lahf
testl
adc
mov
inc
js
cmp
inc
inc
xchg
push
sahf
push
leave
cmp
jp
rcr
stc
jnp
aam
fisttpll
jne
dec
push
imul
lcall
xchg
insb
addr16
rorb
cmp
int3
in
scas
mov
cld
add
dec
rclb
pop
sub
ds
into
nop
push
mov
test
ja
inc
mov
test
jg
fidivs
jae
mov
sbb
subb
mov
enter
cwtl
xchg
xchg
movsb
lock
mov
stos
pusha
ret
sbb
shl
mov
push
mov
push
aas
pop
clc
daa
mov
inc
out
cmpsb
repz
push
xor
adcb
lods
das
imul
mov
mov
insl
rclb
pop
and
adc
jbe
mov
mov
xor
pop
out
xchg
xor
int
test
push
jbe
cltd
imul
xchg
xchg
popa
aad
imul
mov
and
dec
and
int
push
or
mov
scas
ret
jne
cmp
sub
inc
mov
push
mov
sbb
outsb
das
daa
sub
outsl
add
cli
lea
pop
inc
adc
arpl
xor
and
push
or
mov
push
jno
push
stc
inc
jno
loope
ljmp
fstpt
sub
jo
es
push
lcall
and
xlat
push
add
sub
dec
imul
shrl
gs
adc
add
fisttpll
and
mov
int
out
fldcw
fcmovnb
mov
in
push
add
and
add
jecxz
sub
push
test
mov
in
outsl
scas
push
aam
add
cltd
mov
ret
sub
nop
scas
sahf
test
mov
mov
std
pop
pop
pop
mov
push
sbb
adc
mov
shll
cmp
mov
dec
push
sbb
arpl
jnp
mov
mov
rorb
or
imul
daa
adc
out
xchg
lds
pop
in
inc
pop
bound
mov
jbe
sub
in
sbb
mov
daa
movsl
call
cmc
jae
les
mov
push
gs
jmp
ror
fisttps
cmpb
and
stos
addb
inc
xchg
ret
loop
mov
mov
sahf
loopne
stos
frstor
lods
dec
cmp
adc
dec
adc
xor
in
nop
movsb
in
lret
cmp
roll
cmp
enter
pop
jb
cmp
lahf
jle
icebp
sarb
test
fmul
clc
out
cmpsb
adc
xchg
mov
mov
adc
cli
shlb
add
mov
add
and
int3
adc
icebp
ljmp
cld
xchg
cltd
xchg
or
clc
mov
mov
mov
push
out
xchg
fimull
inc
push
mov
inc
nop
cmpsb
outsb
add
lret
xor
push
fs
dec
repnz
daa
jo
mov
cmp
inc
mull
mov
inc
aad
mov
jp
push
sbb
ret
out
jg
rorl
mov
inc
and
mov
push
jns
push
inc
jp
lahf
or
dec
pop
dec
cmp
mov
hlt
push
stos
push
add
mov
lret
bound
xchg
addl
inc
push
sub
mov
pop
fstpl
and
pushf
sbb
xchg
movsl
jae
aad
das
push
dec
add
or
addl
mov
pusha
hlt
and
pop
xacquire
xchg
dec
into
push
fdivrl
cld
mov
aam
mov
ret
popa
mov
nop
dec
sub
jecxz
popf
mov
imul
shl
xchg
inc
clc
hlt
mov
movsl
add
in
add
or
lret
push
stos
mov
push
add
jae
cmc
adc
fisubs
inc
pop
sub
xchg
in
mov
int3
mov
fptan
jle
xchg
fs
stos
nop
cmp
push
test
jb
xorb
fs
jecxz
lahf
add
xchg
sbb
mov
jbe
xchg
lea
sahf
or
push
fwait
cltd
and
add
out
frstor
add
stos
and
insb
sbb
dec
mov
rol
xlat
rcrb
dec
pop
cmp
aad
add
dec
adc
mov
inc
ficoms
sbb
je
and
in
adc
test
and
imul
test
ret
or
shll
nop
in
jg
mov
shrb
pop
mov
les
fists
sub
pushf
lcall
xchg
and
inc
adc
sub
es
les
cmp
and
mulb
jns
es
bound
enter
lcall
fwait
loop
mov
repz
sti
aas
or
testl
rol
or
ljmp
lods
inc
adcl
sub
xlat
ror
mov
shr
push
pop
xor
ja
das
addr16
lds
and
mov
pop
push
shll
daa
mov
fldl
adc
fs
jge
and
xlat
pop
mov
sbb
mov
and
xor
pusha
rorb
dec
mov
xchg
stc
addr16
shl
pusha
addr16
jl
ret
add
adc
stos
sarb
push
sbb
cltd
adc
cmp
das
adc
lea
mov
pop
inc
xchg
scas
cmpsl
mov
dec
and
push
mov
in
cld
stc
pop
or
pusha
lret
enter
std
mov
inc
scas
out
jecxz
pop
sbb
dec
sbb
scas
scas
std
mov
or
jo
xchg
mov
mov
arpl
js
insb
mov
gs
add
icebp
and
out
push
inc
lock
cmp
fisubrs
repz
push
jmp
shlb
cs
cli
inc
sub
or
lret
dec
xchg
mov
mov
popf
je
lods
loop
fprem1
sbb
dec
lea
mov
repz
push
mov
roll
or
or
mov
inc
pop
mov
cmp
dec
dec
mov
in
scas
dec
or
aaa
cmp
pusha
sbb
sub
push
adc
adc
sub
adc
lock
mov
mov
stos
ficoms
mov
mov
xorl
sbb
popf
jae
mov
mov
out
xchg
and
sbb
lret
stos
icebp
rcll
pop
mov
adc
insl
scas
inc
mov
icebp
idivl
push
loope
sub
xorb
lcall
sbb
mov
imul
dec
jge
das
or
mov
ret
xchg
lret
mov
cmp
jbe
pop
lret
dec
data16
shrl
add
dec
lock
dec
out
cmp
mov
mov
daa
ds
pop
and
stos
in
push
mov
in
xor
leave
xor
or
aaa
inc
test
divl
push
lcall
pextrw
outsl
jg
inc
stc
cmp
sub
adc
mov
fdivrl
mov
ja
xchg
push
or
dec
or
jmp
icebp
cld
mov
lcall
testb
insl
cmp
xchg
inc
in
jbe
ret
or
mov
ds
xchg
xor
stc
pop
bound
div
movsb
bound
fs
dec
fisubrl
lock
xchg
bound
imul
enter
ret
add
pop
and
add
imul
cmc
xchg
mov
pop
icebp
sahf
or
icebp
call
clc
push
rolb
mov
xchg
mov
scas
mov
jnp
movsb
jo
scas
pop
aas
ja
inc
lcall
mov
cmpsb
test
mov
or
aad
leave
imul
iret
cmp
and
pop
sbb
lcall
jnp
mov
push
pop
scas
in
adc
push
movsl
in
lcall
push
xor
inc
ds
cmp
mov
xor
jecxz
mov
cmp
aas
jb
orb
add
inc
in
ds
and
lahf
jae
sbb
cmc
pop
jecxz
add
push
jl
dec
dec
flds
outsb
repnz
cs
les
sbb
push
mov
adc
sub
mov
bound
jl
dec
ss
xor
mov
cmpsl
jne
mov
roll
shrl
mov
hlt
test
repnz
ds
imul
lea
fistl
fistpll
into
add
cmp
pushf
into
lea
xor
push
in
lret
das
lea
stos
out
les
into
pop
mov
pop
stos
mov
test
mov
sub
jle
pop
lods
cwtl
es
pop
mov
fcomi
mov
mov
lods
xchg
in
inc
aaa
mov
out
and
jne
mov
sbb
shrl
jo
jae
xlat
adc
cs
mov
xor
sub
cmp
mov
ja
xchg
sbb
push
ja
repz
push
out
mov
or
faddl
pop
lock
cmp
pop
add
push
add
xchg
xchg
push
lock
push
rcll
push
mov
inc
in
dec
and
fsubl
pop
cmp
dec
out
clc
xchg
fidivl
insb
pop
mov
rcl
fwait
enter
adc
xchg
leave
test
lahf
push
xchg
addr16
nop
mov
adc
xor
rclb
cltd
mov
ret
stos
out
out
rcll
push
cmp
sbb
call
std
mov
xor
adc
test
fcoml
xchg
mov
dec
adc
sti
push
fiaddl
or
mov
mov
fdivs
lret
stc
mov
jmp
cmc
xchg
in
or
fcoms
enter
inc
pop
imul
adc
push
jmp
popf
mov
repz
mov
pop
loop
imul
add
jmp
push
loop
inc
sbb
sub
xchg
jns
lcall
sub
xor
scas
adc
scas
push
es
adc
jnp
pop
push
daa
push
es
ret
dec
punpckldq
mov
cltd
mov
pop
stc
nop
inc
into
and
ljmp
cmp
icebp
imul
testb
xchg
lret
imul
add
aad
ds
xor
push
push
cmp
sahf
inc
xchg
xchg
nop
movsl
clc
int
jmp
sarb
xchg
insb
rcrb
pop
daa
sub
jecxz
lahf
je
jp
nop
lahf
pop
imul
mov
adc
out
mov
push
fmul
dec
fsubl
push
and
imul
mov
push
and
mov
stc
xchg
pop
mov
imul
pop
daa
outsb
push
jg
adc
hlt
incb
cli
sbb
ret
sub
dec
scas
gs
mov
loop
xor
jmp
in
push
vrsqrtss
ds
ficoms
adc
lret
clc
mov
mov
cmp
and
mov
repz
xor
fistpll
mov
inc
add
or
fstl
xchg
xchg
sub
jle
jmp
ret
iret
bnd
gs
mov
divl
mov
push
bound
mov
arpl
fsts
pushf
das
int3
addl
data16
inc
and
jle
fcompl
icebp
out
pusha
into
mov
mov
lock
dec
mov
jo
cmpsb
xor
push
sbb
xor
push
fcompl
js
add
lods
sbb
aas
xchg
and
push
scas
push
push
jnp
pop
xor
or
faddp
mov
mov
lahf
cmpsl
std
lods
xchg
jnp
daa
jne
xor
sarb
mov
pop
add
jns
jns
lahf
arpl
add
hlt
roll
jns
sub
jb
pop
call
mov
repnz
insb
sbb
xor
mov
es
jmp
mov
bound
dec
pop
inc
inc
cmp
fisubrs
mov
jg
icebp
mov
orl
cmpb
icebp
or
cmc
adc
xchg
int
ret
shrb
add
or
dec
leave
pop
inc
out
jb
cmp
mov
leave
sub
mulb
cmp
push
adc
popl
mov
push
xchg
movsb
bound
std
xchg
mov
sbb
mov
xchg
jb
push
add
int3
jle
dec
enter
xchg
dec
xchg
mov
pusha
mov
cmpsl
lds
mov
lds
sahf
rol
sti
pop
jp
mov
xchg
aas
ja
outsl
sub
aaa
add
repnz
sub
lods
mov
pop
cmovl
int3
xchg
ret
ret
jle
lahf
js
leave
stc
mov
jns
mov
jb
repnz
mov
pop
cmp
xor
in
pop
mov
jp
mov
sbb
lret
push
jo
popf
jge
aas
popf
dec
aas
mov
stos
mov
cltd
cmp
inc
mov
push
fmull
mov
lcall
xor
lahf
ret
inc
nop
mov
jp
cmpsb
inc
inc
fwait
and
xor
cmp
dec
stos
cmpsl
dec
pop
mov
gs
inc
frstor
jns
or
xor
inc
mov
lahf
adc
pop
out
jo
popa
das
mov
jno
sbb
xchg
outsl
sbb
shl
outsl
ret
mov
adc
cmpsb
cmp
cmp
push
lahf
jge
inc
aam
adc
push
iret
xor
testb
scas
nop
inc
sub
aad
es
xchg
movsb
xchg
inc
add
jp
iret
xchg
outsl
aaa
imul
mov
jmp
movsb
and
out
pop
pop
arpl
dec
pop
aad
imulb
cmpl
jne
jno
iret
jl
pop
pop
pusha
lds
fsubrs
dec
adc
dec
or
push
pop
adc
mov
xchg
ja
ljmp
sub
mov
and
orb
jge
idivb
out
cmp
stc
sbb
movsl
push
mov
or
dec
mov
xchg
scas
in
pop
fs
inc
js
mov
sti
clc
mov
call
mov
test
div
cli
or
add
xor
mov
pusha
repnz
jne
ror
imul
adc
int
lcall
dec
inc
or
sub
fcomps
int3
cmc
mov
inc
fnstcw
bound
sbb
sbb
or
xor
sub
test
xchg
and
xchg
add
pop
xor
cmp
pop
rcrl
mov
sub
arpl
and
pop
rorl
mov
decl
inc
xlat
out
lds
fs
add
lret
inc
data16
gs
ss
lret
xchg
cmc
cmp
and
pop
sbb
std
sbb
in
dec
jnp
imul
mov
les
dec
add
add
and
mov
adc
js
sbb
shlb
std
sub
fistl
mov
outsb
cmp
into
cmpsb
in
hlt
jecxz
add
and
daa
movsb
add
sar
push
add
xor
out
fistpll
in
sub
ffreep
mov
imul
dec
ljmp
mov
fs
iret
cmp
and
mov
push
rcr
pop
and
sbb
pop
out
adc
in
xor
xor
popa
in
imul
dec
adcl
xchg
push
cmc
imul
data16
mov
add
or
xchg
xchg
jae
jp
cmp
and
jmp
dec
dec
add
sub
lock
ret
pop
xchg
repz
push
int3
jne
mov
jl
jg,pt
rcl
xlat
lds
cmp
jp
inc
sbb
cmp
mov
push
ret
roll
lret
stos
repz
inc
movsl
shll
mov
cmpb
idivl
pop
push
divl
clc
xchg
inc
hlt
ja
xchg
mov
mov
push
out
add
pop
xlat
mov
dec
pop
std
push
adc
pop
loop
into
js
mov
jmp
push
in
xchg
add
ds
push
mov
mov
inc
pop
in
add
fbstp
xchg
cmpsb
les
mov
imul
std
lret
in
cmpsb
dec
rorl
xchg
loope
mov
pop
or
jns
ljmp
dec
test
mov
iret
icebp
shlb
lods
ret
cmpsb
in
mov
cmp
xlat
cs
cmpb
push
leave
loop
mov
stos
jp
orl
daa
fnstcw
jae
fsubr
mov
add
push
shll
mov
arpl
inc
arpl
dec
push
push
xchg
sub
into
stc
push
repz
jecxz
lea
pop
hlt
mov
js
mov
movsb
fcomps
push
pop
pop
test
mov
mov
xlat
rorb
clc
fwait
push
mov
xchg
pop
cmp
insl
cmp
popa
cs
push
pushf
leave
lahf
and
shlb
int
mov
push
fidivs
pop
push
or
jb
or
dec
stos
lret
jecxz
push
ja
mov
xor
cmp
inc
lret
ret
cli
mov
mov
pop
nop
popf
inc
jns
test
ljmp
test
dec
add
lock
jl
sti
jl
adc
cli
cmpsl
cmp
mov
and
mov
movsb
pop
mov
push
cmc
mov
ret
add
repz
dec
lea
pop
gs
lock
sub
jb
loop
cld
xor
push
mov
push
cmc
pop
dec
xchg
in
xor
fists
xor
cmpsl
inc
and
sbb
hlt
int
and
fwait
sbb
repnz
in
stos
mov
in
jnp
cmpsb
in
sub
fcomps
xchg
add
sub
push
call
test
insl
jecxz
adc
jg
fists
push
cs
sub
mov
fs
faddl
imul
jae
jecxz
mov
mov
repz
cmc
aaa
ss
cs
rcl
lret
cmp
adc
leave
inc
nop
test
sub
rorb
fwait
xorl
pop
fbld
scas
mov
mov
addr16
push
clc
dec
pop
sub
loopne
lea
sbb
test
fldcw
call
and
xchg
sarb
mov
jne
add
mov
inc
cs
jo
aad
cltd
aam
icebp
add
sub
aam
sbb
enter
sub
in
jne
enter
mov
shl
cmp
add
add
bndldx
mov
dec
push
pop
mov
xor
test
pop
jae
notb
stos
and
push
add
loop
mov
aas
enter
mov
sbb
dec
or
pop
rorl
loope
call
rorl
popf
mov
sub
jb
mov
jb
stos
adc
xchg
pop
adc
xchg
clc
pop
movsb
or
insb
out
scas
sbb
xor
sbb
gs
push
fnstsw
iret
test
pop
mov
mov
jge
pop
inc
icebp
icebp
add
incb
or
push
testb
adc
cltd
xor
mov
cld
call
adc
in
mov
out
mov
pop
adc
and
push
cmpsl
xchg
orb
jno
mov
sbb
push
cmp
sahf
test
mov
push
enter
or
lret
push
xor
in
and
xor
sub
dec
sahf
mov
aaa
fsubs
add
fadds
push
mov
stos
punpckldq
and
inc
sbb
ret
sbb
mov
ljmp
mov
dec
flds
loope
dec
loope
adc
fdivrs
rcrb
add
xchg
cmpb
addr16
je
pop
jl
das
outsl
loopne
xor
mov
iret
aas
imul
mov
in
ficomps
stos
mov
push
jg
push
pop
or
sbb
fwait
loop
xor
and
mov
pop
mov
and
push
pop
sbb
insl
xor
ljmp
cs
inc
lea
mov
sti
push
adc
cs
pushl
xchg
or
push
mov
cli
lret
jl
push
dec
add
cmpsb
mov
jno
fidivs
sub
int
dec
adc
jp
cmp
out
in
mov
lret
aad
jo
jp
push
loopne
jbe
cmc
into
je
in
adc
js
mov
dec
es
stc
movsl
push
out
jnp
lahf
out
add
stos
pop
imul
xchg
jnp
stos
push
js
and
bound
movsb
inc
add
dec
aaa
addr16
mov
xor
mov
popf
loopne
ficoml
pop
or
sub
aaa
push
mov
rcrb
loop
push
cmp
jb
ljmp
insb
add
xchg
fistpll
mov
sti
lock
insb
xor
inc
in
and
incl
sub
stos
inc
into
lret
push
inc
push
xor
mov
pop
cmp
mov
fs
out
dec
jp
cwtl
mov
imul
push
xor
les
adc
cmp
lcall
push
push
dec
loopne
sti
inc
data16
mov
gs
in
arpl
mov
lock
and
sub
mov
scas
out
inc
outsl
ss
xchg
mov
test
sarb
js
hlt
cmpsb
inc
icebp
adc
andb
aaa
mov
mov
pop
rorl
jb
das
jns
les
loopne
push
adc
mov
adc
imul
sbb
sti
and
les
mov
popa
jb
outsl
les
jmp
jp
xor
jge
das
loope
mov
dec
cli
xor
push
mov
add
push
es
xchg
leave
in
cmp
xor
jmp
shlb
mov
jne
lcall
add
adc
push
ret
outsl
jecxz
mov
in
enter
and
xor
clc
sbb
aad
add
in
mov
mov
movsb
outsl
mov
pop
rcll
mov
adc
data16
hlt
scas
dec
push
pop
inc
adc
cmp
adc
dec
pop
or
sbb
scas
push
mov
mov
push
imul
int
add
add
add
insl
sub
mov
add
sti
cli
jmp
inc
push
ljmp
jmp
ret
push
test
divb
rolb
mov
xchg
xor
mov
test
jp
jno
fnstcw
lahf
jp
in
dec
lea
jns
mov
push
out
les
dec
xor
push
inc
push
je
mov
ds
loope
mov
xchg
jns
pop
lahf
pop
cltd
mov
jl
push
jb
cli
bound
nop
cmpsl
and
scas
push
test
bound
and
leave
cmpsl
inc
sarl
jge
xchg
ljmp
add
mov
jbe
xor
stc
cmp
ljmp
lods
inc
push
and
shl
test
pop
dec
jns
push
or
xlat
pusha
mov
test
inc
push
pop
mov
inc
add
subb
movsb
mov
insb
out
sbb
jns
movsl
and
push
xchg
cmp
lds
test
lea
imul
das
fadds
popa
cmpsb
or
push
pop
jle
fcmovnu
fisttpll
dec
gs
arpl
jge
outsb
lahf
xlat
pop
les
mov
push
jbe
dec
mov
cwtl
cmp
mov
inc
addl
mov
adc
shll
rcll
or
sbb
neg
xchg
out
aas
daa
addl
gs
sub
xchg
stos
or
into
movsb
jmp
movsb
xchg
or
cmpsb
fdivr
lock
mov
sub
mov
mov
popa
add
lcall
add
imul
popf
and
sub
ss
ss
arpl
dec
mov
loop
pop
in
mov
ds
clc
pop
jns
mov
jno
fldt
test
cmp
mov
aas
mov
add
repnz
ret
jno
push
pop
mov
inc
mov
jl
adc
mov
pop
int
ret
add
dec
xor
or
scas
mov
divb
mov
std
mov
mov
movsb
mov
and
mov
mov
cmp
cmp
pop
push
cmp
or
sahf
pop
vmwrite
movsb
out
jl
cmpsb
les
ljmp
and
adc
scas
ja
aas
mov
dec
pop
mov
rcr
test
xchg
ds
aad
repnz
jmp
xor
mov
in
adc
imul
push
fwait
push
clc
stos
sub
cld
add
sbb
nop
xor
adc
xchg
aam
out
or
nop
lods
sbb
test
or
loopne
imul
arpl
jl
inc
filds
fsubrl
lods
pop
popf
sub
jno
or
aaa
outsl
pop
inc
aas
outsb
into
dec
dec
sbb
sub
pop
insl
fists
mov
inc
fistpl
xor
dec
js
dec
mov
call
jle
xchg
xchg
test
mov
das
add
push
adc
jo
cmp
lock
lcall
sbb
jle
sub
xor
and
pusha
xchg
add
jecxz
pop
cltd
fcompl
dec
mov
push
jge
sbb
mov
xchg
sub
testl
mov
dec
cmp
xchg
into
mov
in
int3
inc
adc
dec
or
call
xchg
mov
xor
jns
sbb
nopl
mov
jo
cmpl
les
pop
pop
or
or
inc
jae
cmpsl
test
xorl
and
or
int
inc
jnp
jbe
aam
xchg
stos
lods
call
jl
call
lahf
int
xor
movsl
pop
push
popf
lret
cld
popa
jmp
stc
xor
xlat
sar
jge
out
insb
daa
rcrl
movsb
leave
ljmp
jbe
ffreep
enter
pusha
pop
mov
sar
dec
ja
mov
ss
sahf
into
stc
inc
shl
sub
add
out
insl
push
mov
daa
lds
lods
inc
push
and
sbb
fsts
nop
jl
jno
xchg
inc
push
add
lcall
and
or
pushf
scas
mov
and
mov
push
rcrb
into
mov
mov
test
mov
mov
pop
and
or
lahf
sarl
xchg
cltd
icebp
mov
scas
popf
clc
inc
shr
pop
xchg
and
lret
out
movsb
insl
cmp
fnstcw
dec
adc
mov
mov
faddl
aam
dec
mov
pop
cmc
and
dec
in
xor
out
and
fdiv
add
jmp
add
ja
outsl
xchg
fmull
movsl
push
dec
inc
jp
js
shll
mov
mov
fs
sub
dec
dec
push
add
ljmp
or
mov
orb
sbb
and
mov
je
mov
std
add
and
into
test
sub
enter
xor
pop
cmpsb
and
loopne
sub
mov
push
imul
sub
push
cmc
cmp
mov
adc
enter
xchg
lods
std
flds
aad
les
cmc
rcrl
jge
idivb
mov
mov
insb
int3
enter
xchg
cwtl
xor
sub
add
pop
lods
sub
sti
pop
cmp
in
push
sbb
ljmp
adc
lods
mov
push
mov
clc
and
loope
imul
jb
push
jns
je
popf
mov
pusha
mov
fisubl
cwtl
add
push
push
jp
in
icebp
jno
ljmp
xchg
shrb
push
lret
fldt
sub
add
xchg
xchg
inc
add
mull
push
aad
mov
mov
fldl
test
sbb
cmpsb
addb
in
mov
pop
test
cmp
cmp
push
mov
mov
sar
stc
add
test
jecxz
cld
fidivrl
add
ljmp
inc
sub
jnp
sti
repnz
jge
shr
sar
fs
std
or
dec
adc
aam
jno
fld
repz
jl
ljmp
jmp
push
cmc
xlat
adc
mov
mov
nop
lods
jle
pop
mov
push
cmp
arpl
pop
addr16
push
xchg
mov
cmp
out
pop
add
popa
ret
inc
outsb
in
sbb
scas
ljmp
xor
cmp
movsl
sbb
push
inc
cli
lret
inc
xchg
dec
test
std
pop
jo
fs
lock
mov
jo
movsl
test
out
xor
or
mov
jmp
dec
leave
data16
sbb
sbb
and
push
dec
fmuls
movsb
jo
lahf
sbbl
fs
sub
jge
int
mov
cli
popa
xlat
mov
adc
test
push
and
add
push
pop
or
inc
shrl
lds
pop
int3
jbe
repz
adc
adc
das
in
push
fldt
xor
mov
xlat
and
pop
cli
cwtl
push
or
sub
pop
xchg
es
mov
xchg
lret
push
jbe
ds
adc
gs
fwait
mov
in
ds
pushf
sub
lea
xchg
add
lret
je
add
adc
push
fimuls
repz
mov
sti
out
cmp
mov
push
mov
mov
mov
fcoml
lock
cli
dec
dec
jmp
loopne
loopne
push
movsb
adc
cmpsb
cld
xchg
jecxz
in
ficompl
jae
and
sbb
mov
sub
mov
lods
jg
cld
and
je
data16
push
push
ret
inc
xlat
movsb
pop
stos
ja
jne
ljmp
mov
movsb
fwait
push
add
jecxz
mov
xchg
add
cs
sub
out
int3
enter
enter
jp
pop
les
jle
xchg
mov
in
jae
pop
mov
inc
mov
cmp
repz
push
fnstenv
and
cmp
lret
stos
mov
push
mov
clc
push
bound
fdivl
cmpb
xor
xchg
lock
jne
jmp
aas
cmp
ret
jmp
in
std
fldcw
cmp
jbe
mov
adc
jns
aaa
jl
movsl
sbb
and
mov
lea
xchg
call
xchg
mov
and
push
lods
or
jbe
mov
insl
inc
push
push
sub
lret
fisttpll
sbb
and
ds
mov
or
test
cmp
ret
adc
sbb
inc
or
scas
add
xor
inc
rolb
jge
mov
jb
xchg
mov
xor
ret
cmpsb
testb
cltd
dec
cmp
daa
jb
dec
cli
ja
ljmp
out
stos
mov
cmpsb
push
xchg
push
push
cld
ss
pop
or
pop
xchg
int3
dec
ret
shll
scas
lds
lock
enter
stos
xchg
test
rclb
adc
cwtl
pusha
jns
lcall
aam
in
dec
jl
sbb
jno
call
sub
ss
test
mov
lods
lods
xchg
aam
fidivrl
sbb
jl
pop
aaa
pop
divb
repz
ret
xor
aaa
xorb
jnp
push
dec
sbb
and
cltd
push
roll
xor
dec
and
xor
add
ss
add
inc
sbb
inc
mov
rolb
adc
icebp
enter
sbb
ds
lock
lahf
in
xchg
fisubs
sahf
fs
repnz
outsl
mov
and
int3
xchg
out
inc
test
cmp
int
and
sbb
mov
xor
dec
lods
out
lret
gs
aas
jo
add
xchg
rorl
js
cmpl
or
mov
xchg
out
pusha
and
daa
dec
pop
shl
in
dec
inc
dec
scas
sbb
std
push
mov
jae
fmul
push
das
or
lods
add
and
inc
call
iret
lods
pop
cmc
cmp
popf
dec
jb
xchg
mov
push
add
into
rcll
into
cmpsl
cld
mov
pop
sub
test
aaa
scas
out
sub
xor
xor
iret
cwtl
mov
mov
xchg
popw
push
cmp
pop
sti
xchg
leave
mov
jae
mov
ss
iret
mov
inc
dec
push
bound
xlat
mov
bound
aaa
sbb
mov
jbe
in
inc
adc
out
pop
xchg
adc
idivl
mov
jbe
in
cmpsb
pop
mov
test
fwait
out
sbb
pop
sbb
insl
mov
mov
xor
xchg
sarb
insl
inc
mov
dec
mov
push
xchg
and
xlat
fidivl
cmp
xchg
shl
jb
dec
jo
out
dec
dec
mov
icebp
inc
sbb
xchg
jne
push
sbb
iret
cmp
stos
out
lret
ret
xchg
mov
ret
aam
mov
pop
jle
sub
fs
hlt
das
push
jo
fs
fstps
jb
ficoms
xchg
leave
push
mov
cs
add
outsl
outsl
notl
pop
mov
orl
xchg
test
adc
lds
data16
mov
or
mov
das
dec
push
fwait
inc
lcall
mov
gs
dec
dec
and
inc
sub
jnp
mov
fs
cmp
jg
clc
imul
dec
test
jl
jns
jp
stos
xor
dec
mov
jnp
mov
insb
jmp
pop
dec
sahf
mov
mov
out
mov
xor
adc
arpl
call
sbb
push
negl
adc
mov
jo
adc
add
daa
and
aam
push
imul
push
push
add
add
sti
add
xchg
and
sbb
cli
repz
pop
pop
jmp
or
pop
movsl
fisubrl
lahf
nop
aad
test
fldt
xchg
mov
xchg
les
iret
add
imul
jecxz
stos
je
fiaddl
test
jl
sub
arpl
loope
pop
into
xchg
in
and
push
or
cld
inc
xchg
in
fildl
fs
std
jg
push
loopne
fcomp
add
fsub
pop
rorb
stos
fsubrl
out
sub
aad
jecxz
xlat
xor
mov
add
jnp
mov
mov
dec
insl
pop
dec
dec
adc
fdivrs
fmull
and
dec
sbb
cs
stc
sahf
sub
bound
testb
adc
mov
push
arpl
push
or
icebp
cltd
shrl
fcmovb
xor
mov
imul
out
das
jns
and
sbb
lea
inc
jle
xchg
clc
fstpt
aam
mov
push
int
or
adc
push
pop
lret
inc
mov
imul
iret
mov
mov
push
push
dec
popa
or
ja
xchg
cmp
loope
addr16
inc
inc
jne
mov
dec
mov
test
adc
mov
popf
mull
orl
mov
inc
add
dec
dec
push
movsb
and
inc
decl
xor
scas
addb
imul
adc
sbb
ficoms
cmp
fisttpll
popa
xchg
push
sub
inc
int3
cmp
sbb
out
jp
scas
jns
mov
mov
bound
insb
dec
pop
cmp
bound
fdivrs
push
jmp
je
pusha
and
cmp
cli
and
scas
inc
aad
mov
popa
leave
cmp
xor
mov
adc
imul
or
xchg
pop
push
cmp
xchg
adc
mov
and
aad
xchg
dec
mov
inc
and
jbe
sahf
pop
sbb
repnz
mov
cli
inc
lods
xacquire
sbb
inc
scas
je
xor
inc
mov
in
sbb
sahf
aam
push
mov
push
jnp
lret
push
xor
fdivrl
fmull
or
push
sub
sbb
mov
sbb
or
popf
sbb
or
xchg
shrl
enter
pop
into
xchg
pmaxsw
xor
xor
sub
test
mov
pop
cld
call
xchg
das
jae
push
pop
inc
inc
ret
inc
ljmp
aas
int3
cmpsb
cmp
jne
cltd
jns
ja
mov
shr
jno
mov
ds
enter
xlat
sbb
mov
mov
popf
jns
sbb
sbb
gs
clc
lcall
fwait
adc
and
mov
jne
add
xchg
aaa
mov
inc
push
adc
mov
or
cmc
xchg
cmp
fxch
icebp
pop
pusha
lock
pop
push
daa
jp
das
int3
jbe
mov
test
cmp
adc
arpl
scas
dec
hlt
xor
mov
and
xor
cmp
sub
adc
xor
push
cmp
out
daa
les
lock
cmp
cmp
insb
cmp
cmp
xor
inc
lahf
pop
and
call
js
jae
jge
hlt
lahf
xchg
cmp
decl
out
sbb
imul
lahf
inc
ja
pop
jmp
sti
dec
punpckhwd
push
cld
inc
add
xor
arpl
push
or
mov
loope
test
gs
mov
xchg
pop
xor
call
pop
mov
dec
das
push
or
or
aaa
mull
out
and
sbb
lcall
insb
push
mov
std
adc
push
mov
movsb
in
push
jge
inc
testb
imul
repnz
stos
xor
iret
mov
int3
jmp
aad
sbb
xor
cmc
mov
inc
std
jle
adc
and
adc
xor
sahf
leave
shrb
push
test
aam
mov
dec
pop
push
cmp
aad
jo
cmp
inc
dec
fyl2xp1
xchg
cmp
lret
int3
xlat
adcl
or
lods
cmc
loopne
sub
dec
add
ret
and
iret
xchg
fucomi
stos
scas
xchg
lret
in
div
aaa
iret
mov
sbb
leave
jnp
push
mov
or
push
scas
add
mov
xor
iret
call
aad
negl
cmpsb
sub
addr16
stos
push
cmpsl
fs
dec
adc
xchg
jns
fisttpll
pop
loopne
xor
and
sbb
mov
cltd
cmp
mov
push
mov
sub
add
sub
jge
mov
sbb
lret
shrl
jg
movsb
xchg
sbb
addl
inc
sub
mov
scas
pop
sbb
das
gs
and
mov
ja
fldenv
in
repz
rorb
popf
fists
jge
rcrl
dec
popf
and
push
das
pop
in
pop
sbb
outsb
mov
dec
sbb
add
ret
out
mov
xchg
mov
jae
ljmp
dec
push
dec
mov
repnz
sbb
mov
mov
ret
and
stos
push
sahf
or
push
mov
mov
and
cmpsb
xor
sub
gs
rorb
add
je
ret
imul
xor
add
adc
clc
push
inc
mov
data16
repnz
push
ret
jbe
jb
aam
fldenv
lahf
inc
out
cltd
sbbb
imul
jmp
xchg
jg
divb
and
lahf
popf
daa
mov
js
daa
jle
pop
push
rorl
mov
ljmp
test
lods
push
ja
loopne
imul
lea
cli
push
clc
jmp
push
and
scas
outsl
sbb
and
mov
sub
mov
dec
xorl
jecxz
or
jle
push
test
leave
in
adc
or
stc
mov
lock
jge
jl
fimuls
loope
loopne
add
cmp
sub
loop
sub
mov
pop
mov
jl
icebp
cmpsl
xchg
push
insb
stc
sbb
in
lret
scas
mov
sub
call
pop
cmpsl
lods
push
sbb
sub
jecxz
cltd
xor
es
mov
cwtl
push
sub
push
test
push
pusha
jl
xlat
adc
mov
cmp
test
dec
push
mov
mov
movsb
popf
and
scas
ja
cmpsb
rcrb
enter
add
int3
mov
mov
in
pop
aad
js
nop
aad
push
sti
pushf
lods
pop
dec
mov
in
ret
mov
pop
movsl
hlt
xchg
cmp
mov
jbe
jl
mov
ljmp
cmp
mov
mov
pop
adc
pop
mov
xor
je
cwtl
jae
lret
lock
xchg
loope
ret
mov
jp
or
pop
ret
popa
jae
fldlg2
dec
pop
and
jge
sub
cli
mov
imul
lock
scas
sti
push
sub
pusha
jnp
movsb
iret
jle
mov
ds
lock
call
push
pop
in
mov
sbb
je
jb
lret
hlt
outsl
or
mov
test
xor
lods
outsb
dec
popf
jmp
pop
int3
fistpll
push
or
outsl
pop
fdivs
jmp
in
lods
xchg
in
mov
es
pushl
test
push
imul
pop
adc
daa
enter
jg
and
sahf
mov
daa
add
mov
mov
nop
mov
and
nop
adc
das
fnstenv
jbe
mov
cmc
mov
movsl
push
push
inc
mov
stos
push
int
nop
and
outsl
jae
mov
adc
aaa
jns
xor
in
pop
mov
mov
pop
mov
test
push
scas
gs
leave
loop
push
data16
push
inc
dec
jl
into
xor
lods
cmp
sub
mov
jl
mulb
mov
or
push
es
fwait
push
imull
rorb
test
fwait
mov
or
movsl
out
add
and
dec
popf
shl
insb
popf
out
dec
and
cmpsb
mov
mov
fsubrs
and
inc
les
cmp
xchg
sti
daa
jmp
xchg
jnp
pop
lahf
or
cltd
add
shr
add
out
xchg
and
adc
mov
mov
cmpsb
mov
incl
mov
outsb
mov
sbb
int3
sbb
jp
out
or
mov
and
insb
in
inc
mov
mov
push
inc
lahf
out
scas
jmp
std
inc
rclb
shl
jecxz
jns
push
cmp
and
inc
imull
add
push
ss
inc
and
adc
xor
sub
daa
and
xor
mov
mov
mov
pusha
cld
or
sbb
mov
mov
mov
cs
movsl
cli
cmp
xor
into
add
cld
mov
sbb
and
hlt
out
xchg
es
sub
aas
lock
fcmove
push
jmp
sar
rorb
and
dec
jp
iret
jb
mov
push
add
jno
in
lods
xor
push
mov
in
addr16
loop
add
lahf
repnz
in
sub
jle
pop
jecxz
fcomps
cmpl
data16
mov
sub
mov
add
xchg
pop
scas
mov
repnz
pop
adc
push
jg
sub
push
pop
mov
js
rolb
rolb
jbe
mov
imul
into
mov
pop
cmp
add
loope
dec
mov
jecxz
jnp
out
arpl
pop
scas
aam
out
dec
subl
pop
out
and
lea
xor
pop
hlt
pop
xchg
lods
ds
pop
cmp
es
jl
loope
pop
mov
jo
dec
lahf
pop
rcll
mov
cmp
and
sahf
mov
jp
repnz
sub
imulb
pop
sbb
shlb
mov
fists
cld
pop
das
out
pop
ret
adc
test
lcall
push
data16
clc
mov
loope
hlt
adc
pop
popf
out
ret
and
fcmovb
loopne
fistpl
or
dec
out
inc
mov
mov
dec
out
mov
and
adc
sbb
iret
seto
inc
inc
lcall
xchg
inc
mov
inc
sbb
movq
adc
xchg
movsb
jl
jle
mov
jne
dec
xchg
cltd
fildll
sub
pop
std
daa
xor
inc
clc
dec
push
es
add
aam
pop
out
in
jp
mov
xorb
mov
sub
scas
lret
xchg
xchg
lret
cmp
not
movsl
sar
adcl
jmp
jl
xchg
lahf
repz
inc
je
sti
std
mov
xchg
test
stos
dec
add
mov
mov
xor
test
sub
mov
pop
faddl
sahf
or
adcb
push
adc
sub
aas
js
andl
cli
jge
cwtl
scas
in
aaa
pop
popa
push
repz
dec
mov
pop
insl
xor
lock
sti
jo
adc
cmp
subl
into
outsb
cmp
xchg
sbb
insb
add
push
inc
inc
loopne
adcb
lret
pop
loope
jecxz
push
fisubrl
negb
jle
jb
sbb
dec
ret
das
nop
sbb
out
std
fdivrl
addb
cld
xchg
cmp
into
and
stc
add
lods
jno
jl,pn
icebp
push
pop
mov
dec
push
lea
add
xor
outsl
adc
mov
aaa
imul
fmuls
sbb
push
xor
mov
mov
cs
and
jne
test
mov
push
mov
pop
push
lods
xor
subb
in
loope
push
shll
jmp
cmp
pop
sarl
mov
in
add
in
mov
lcall
fsubl
cmp
inc
js
jge
incb
test
rolb
dec
sub
push
jb
jne
repnz
xor
jb
add
std
xor
lds
mov
add
adc
jle
push
clc
pop
push
mov
sbb
dec
sub
or
adcb
dec
call
and
xchg
jnp
es
int3
pop
scas
pop
ret
jo
outsb
cmp
shrl
add
aad
scas
mov
cmpsb
sbb
sub
fwait
xor
inc
and
mov
aam
loop
adc
cmp
out
cltd
pop
push
lock
push
cltd
inc
aas
inc
cmp
push
ds
xchg
xchg
aam
dec
push
in
jbe
push
imul
pop
cmpsl
jnp
in
notl
scas
roll
sti
lock
jne
rcll
cs
das
out
repz
cmpsb
scas
inc
ss
xchg
ficoms
jo
movsb
mov
xchg
mov
test
test
imul
xchg
adc
add
push
clc
pop
push
jbe
outsl
test
push
pushl
imul
or
leave
cwtl
pop
cmpsl
int3
call
xor
mov
jnp
xlat
sbb
push
push
imul
inc
mov
aad
outsl
jno
pop
lock
jmp
mov
pop
mov
push
push
pop
mov
fsubrs
add
push
mov
imul
mov
popa
test
add
outsl
sbb
jbe
xchg
and
or
and
imul
jmp
xchg
lds
js
fucom
pop
inc
jecxz
dec
dec
shrb
dec
mov
or
mov
pop
iret
push
jae
adc
pushf
jl
push
add
fstl
lods
push
stos
mov
jle
ss
inc
cmpsb
arpl
mov
mov
fnstenv
shll
fnstsw
into
fists
and
jge
xchg
insl
sub
rep
aad
cmpsb
js
sbbb
fdivs
adc
pop
test
hlt
pusha
add
mov
push
xchg
inc
sti
lock
mov
lock
inc
fstpt
lret
inc
not
add
jle
push
cmpsl
icebp
insl
je
movsl
pop
xchg
push
cmp
outsb
xchg
push
pop
out
cli
jmp
pop
sbb
clc
inc
cmp
push
ror
mov
or
je
test
xchg
push
pop
jnp
rorb
test
push
sub
xchg
out
icebp
xor
iret
dec
outsb
push
xor
jmp
push
cs
mov
and
fbstp
jo
adc
xor
into
add
inc
sbb
psubb
dec
aaa
and
popf
adc
lods
lods
xor
fidivs
fsubrl
inc
push
loop
sbb
mov
sbb
cmp
in
roll
lds
sub
fsub
out
adc
xchg
fsubrl
mov
filds
push
push
movsl
or
pop
fsubrs
sbb
add
lods
ret
ffree
xor
into
stos
xor
adc
clc
or
inc
push
pusha
ret
pop
push
pop
push
mov
push
sub
cmpsb
adc
push
js
popf
aad
in
cmp
fsubp
int3
mov
mov
jl
lret
lock
lret
mov
data16
in
jo
movsb
dec
test
es
jg
aaa
imul
adc
dec
mov
les
dec
mov
add
lcall
in
push
out
add
cwtl
dec
pop
mov
movsb
aam
lret
push
bound
mov
and
outsb
push
cltd
ja
loopne
sbb
lods
xchg
popa
std
xchg
icebp
xor
lcall
lcall
ljmp
jmp
cmpsl
repz
add
popl
inc
sbb
test
dec
aaa
jecxz
stos
add
or
imul
mov
popa
pop
sbbb
imul
pop
hlt
jne
and
xor
fistpll
cmp
loopne
jbe
dec
iret
pop
into
clc
inc
mov
jmp
adc
mov
popf
ja
mov
or
insb
sbb
mov
fcomps
mov
jge
pop
test
xchg
mov
add
testb
mov
sub
jl
and
push
lea
pop
push
dec
jp
xchg
divb
nop
out
iret
dec
fidivrs
lret
sbbb
ljmp
andb
add
insl
cmp
arpl
xor
adc
sbb
mov
out
arpl
mov
cmpsb
add
cmp
xlat
pushf
lock
sarl
mov
dec
int
or
retw
lret
jae
mov
cmp
xchg
sub
jle
mov
out
insb
sbb
sahf
sub
push
leave
jnp,pt
js
cmp
hlt
in
pop
mov
in
push
testb
setle
jno
loope
mov
repz
es
fisttpl
inc
mov
lret
imul
xchg
aad
pop
or
jo
or
and
call
popa
fwait
test
les
scas
xorl
popa
inc
ficomps
xchg
loop
leave
cmp
outsb
dec
inc
mov
push
add
int
mov
iret
and
mov
push
mov
push
mov
sti
stos
cmc
jecxz
lcall
mov
mov
cs
iret
push
lahf
mov
lret
leave
lock
loopne
movsl
outsl
popa
pop
es
jge
cwtl
cmpsb
add
dec
push
imul
mov
cmp
cmp
cmp
sub
std
cmp
pop
fisttps
or
jno
cli
repnz
cmpsl
mov
xchg
ficompl
out
scas
sbb
cmp
call
mov
xor
adc
lea
cmp
pushf
xchg
into
sub
fsubl
mov
scas
sub
adc
imul
jle
std
out
mov
sbb
xor
pop
jl
sti
sbb
dec
push
gs
loopne
mov
jno
and
jmp
bound
adc
andb
outsb
adcl
pop
mov
or
pop
mov
mov
xor
mov
pop
inc
sarb
pop
or
lods
jmp
xchg
dec
sbb
cwtl
int3
sub
in
out
mov
mov
addl
out
in
out
cmp
or
stos
cltd
dec
jo
cmp
dec
lods
cmp
cmp
cmp
pop
push
cs
inc
push
stos
pop
test
in
push
je
dec
mov
pop
aaa
cmp
out
pop
xchg
leave
mov
cmc
adc
lcall
dec
mov
mov
and
ljmp
xchg
or
test
outsb
mov
roll
fcomps
dec
lock
imul
jbe
ret
adc
jg
out
mov
jnp
test
daa
mov
ljmp
fsubrs
movsl
ljmp
jg
aam
test
ds
gs
and
outsl
sub
add
cmp
rcrl
mov
test
or
pop
xchg
push
nop
gs
repz
out
cli
lahf
mov
jno
icebp
jp
mov
in
fisubrl
dec
scas
mov
pop
inc
enter
or
cmp
xchg
lcall
sbbl
dec
fldcw
mov
dec
push
add
in
mov
jnp
mov
mov
hlt
jno
dec
cmp
aad
mov
dec
or
daa
inc
lock
in
push
mov
lods
fimuls
xchg
inc
sbb
adc
or
jne
xor
aam
loope
or
hlt
sub
adcb
dec
inc
jl
and
mov
test
push
lcall
xchg
add
out
out
jge
int
aam
mov
cs
out
jb
test
inc
sbb
inc
sub
adc
ret
push
data16
lcall
jl
sub
cmp
cmpsl
aaa
inc
in
push
jge
popa
out
scas
pop
movsb
and
or
jmp
popa
shll
mov
fstpl
psubusw
inc
pop
dec
mov
incw
in
push
stos
mov
std
stos
nop
imul
mov
leave
cmpb
sub
jge
dec
xchg
push
jbe
fs
pusha
mov
mov
push
shrl
dec
mov
test
or
pop
inc
mov
pushf
jae
cmp
call
and
push
fildll
push
shrb
mov
mov
mov
push
rclb
cmc
repnz
fidivl
stos
cmpsl
adc
aad
mov
stos
jecxz
test
icebp
movsb
mov
jbe
or
out
adc
xlat
lcall
fisubrl
jo
outsb
rorl
sub
mov
xchg
ret
jl
cmp
sub
mov
xor
pop
ljmp
mov
sbb
int3
cmp
gs
addl
shl
adc
pop
xchg
ret
and
in
adc
dec
sbb
push
jnp
mov
sub
mov
ret
inc
popf
push
in
iret
sub
sbb
rcr
jae
jae
mov
inc
loop
push
push
ret
and
pushf
jae
push
mulb
pop
xor
sbb
adc
data16
adcl
sub
arpl
dec
popa
pop
or
pop
adc
mov
lahf
enter
lods
loop
jns
cmp
js
xor
push
adc
mov
sbb
jb
out
stc
dec
add
fstl
xchg
dec
xchg
fwait
movsb
push
sbb
mov
mov
xchg
in
ficoml
outsb
imul
inc
mov
divl
push
cwtl
xor
test
scas
add
ret
push
iret
xchg
pop
add
mov
pop
rorl
or
jg
mov
pop
jns
mov
fildll
aaa
inc
out
dec
test
mov
xchg
mov
push
dec
shll
and
rcl
adc
mov
outsb
ror
sti
scas
add
frstor
fldt
xchg
mov
nop
xchg
not
mov
leave
arpl
out
cld
pop
notl
pop
fwait
incb
xor
mov
jp
fidivrs
mov
or
cmp
pop
lret
or
ret
or
sub
jp
stc
mov
sahf
mov
jno
xchg
call
jl
lret
and
xlat
pop
testb
mov
aaa
test
xor
inc
mov
lret
bound
mov
loope
jmp
inc
push
xor
xchg
imulb
jg
js
push
mov
decb
hlt
pop
add
je
bound
sbb
testb
fcoml
ret
jg
pop
arpl
enter
xchg
scas
repz
test
sub
pop
sub
aaa
cli
imul
nop
gs
in
inc
and
push
leave
mov
les
dec
stos
orl
cmpsb
add
test
cmp
or
xchg
jno
push
rolb
pop
adc
xchg
push
push
xchg
lea
dec
loopne
pop
ret
mov
adc
cmpsb
or
fistps
xor
xor
out
mov
mov
adc
cltd
mov
mov
cmc
subl
stc
out
cmp
cmp
mov
rolb
daa
sub
fstl
adc
in
jle
jnp
stos
sub
cmp
scas
cmp
cmp
inc
pop
mov
or
fmull
js
dec
adc
jo
into
pop
pop
int
int3
xor
jmp
lahf
mov
stos
mov
aad
sbb
dec
xchg
mov
test
das
cli
insl
fcoms
push
mov
lock
add
iret
inc
movsb
ljmp
call
and
dec
in
xchg
mov
jmp
fbld
repz
mov
mov
mov
in
loope
repz
dec
imul
or
pop
rorb
mov
movsb
push
or
ja
xchg
in
test
mov
insb
cmp
mov
pop
or
lahf
or
cmp
fsubr
mov
adc
sbb
insl
adcl
fsubs
rol
sahf
cmpsb
rcrb
enter
lods
lds
out
lock
cmpsl
push
xor
mov
nop
out
adc
mov
rol
iret
sbb
aaa
mov
sub
rcll
clc
jge
mov
cmpsb
lea
mov
mov
jns
adc
dec
out
scas
loope
xchg
insl
mov
shll
add
lcall
dec
push
sbb
lock
rcll
shrb
outsl
je
mov
inc
cmpsb
jns
xchg
push
sbb
mov
sbb
add
jp
xchg
ja
fidivl
rorl
mov
mov
iret
arpl
aaa
in
fists
dec
scas
adc
push
lds
cs
push
sub
push
xor
aad
jne
mov
jle
dec
movsb
scas
adc
jno
push
hlt
sbb
adc
jg
pop
lods
xchg
jl
mov
rcl
push
rcl
fidivs
jge
inc
or
fimull
cwtl
shl
cs
loopne
dec
lods
nop
inc
mov
cmp
push
movsb
mov
dec
dec
sub
fisttps
aaa
inc
jnp
pop
out
pop
je
dec
add
dec
lea
hlt
fsubrs
lods
stos
sub
js
or
adc
and
cwtl
lcall
or
orb
push
ror
jae
mov
es
orb
movsb
add
je
icebp
mov
mov
mov
out
icebp
push
adc
js
mov
outsb
test
xchg
mov
jge
jne
pop
lcall
pop
xchg
sub
sub
movsl
sub
in
cmpsb
sti
outsb
std
sarl
push
mov
cmp
cwtl
fsubr
or
xor
fisttps
iret
mov
cltd
mov
fsubl
data16
mov
outsl
in
test
stos
or
loope
adc
sahf
xchg
ja
push
dec
or
fistl
lcall
xor
imul
lods
aas
xor
mov
cmp
jb
ret
cmpsl
adcl
add
arpl
add
push
cmpsb
jae
jg
out
idivb
stos
gs
lcall
clc
mov
pop
jne
pop
out
add
add
sbb
sub
push
and
insl
jns
inc
xor
orb
adc
inc
push
popa
mov
fldt
xor
mov
push
push
lahf
mov
and
out
outsl
inc
jno
test
repnz
fldcw
inc
mov
push
icebp
jno
push
lock
sbb
xchg
fadds
jp
mov
call
shl
xchg
dec
shlb
cmpsl
or
in
sub
popf
xchg
movb
inc
xor
or
dec
fbld
jg
jnp
sbb
xor
lret
dec
mov
call
iret
enter
xor
fsubl
lret
out
and
mov
test
test
sbb
mov
xor
sub
mov
aam
ret
idivl
xlat
and
pop
test
pop
mov
xchg
ret
inc
pop
mov
jno
into
pop
icebp
cmpsb
test
faddl
stos
push
adc
gs
or
and
adc
outsb
fiaddl
inc
in
fisubl
inc
test
in
sbb
push
xorb
adc
push
mov
ror
inc
inc
mov
pop
out
scas
xchg
loop
push
cli
sub
cmp
inc
faddl
fs
fwait
xchg
aam
stos
jg
btr
jae
mov
mov
testb
and
das
out
or
ficoms
dec
push
cmp
loop
jge
cs
sub
aas
stos
movsb
xchg
cwtl
xor
or
shl
jo
lods
setb
dec
in
das
sar
and
shrb
cmp
test
push
sbb
push
and
mov
or
into
sub
inc
into
daa
or
jecxz
mov
aam
mov
adc
fsubs
cmc
enter
sbbb
dec
aaa
cltd
mov
pop
jnp
andb
pop
aaa
fsubrl
add
lahf
pop
cmp
push
int
les
xor
lock
jnp
sub
cmpsl
push
pop
clc
or
sbb
dec
xchg
mov
lods
sub
jg
pop
jp
hlt
insb
aam
in
in
inc
add
js
lret
imul
jno
mov
dec
push
adc
mov
jb
repnz
mov
adc
rorl
jo
xchg
ret
and
je
and
sub
enter
mov
sub
fadds
cwtl
cmpsb
pop
pop
adc
inc
in
popa
fnstenv
jo
mov
adc
call
test
xor
popa
mov
ret
jae
bnd
filds
push
xor
sub
in
popa
ljmp
ds
add
xor
sbb
xchg
lcall
das
out
mov
fcmovne
jnp
inc
cmp
in
scas
fwait
mov
xchg
flds
pop
jb
inc
out
xchg
xor
or
push
pop
xchg
fdivr
sub
dec
fisubs
sub
push
dec
add
dec
push
inc
lret
sub
mov
iret
fdiv
arpl
add
je
push
dec
inc
jbe
xlat
adc
lcall
mov
outsb
fs
xchg
in
sarb
les
mov
add
pop
push
sub
lahf
mov
cmp
mov
cld
mov
mov
add
pop
aam
icebp
pop
gs
sub
cld
cmpsb
push
xchg
fwait
dec
pop
std
and
inc
stos
xor
dec
xor
fwait
fwait
cltd
add
in
insl
xor
lahf
out
add
mov
je
stos
imul
pushf
fnstenv
pop
cmp
test
aaa
dec
cltd
imul
push
xor
ficomps
subl
xor
pop
fmull
mov
cvtps2pd
push
shrb
ljmp
jne
lahf
outsb
fs
in
sbb
fadds
adc
jecxz
mov
divl
jg
xchg
sbb
inc
add
jns
fldt
jnp
flds
or
and
or
xchg
lock
negl
ret
arpl
aam
fildll
xchg
out
cmp
test
or
push
inc
push
cs
mov
cmp
jp
lods
sbb
adc
loop
es
in
mov
mov
pop
add
jmp
push
aam
sub
inc
xor
sub
pop
pop
inc
and
cmp
imul
xchg
cmp
dec
fcoms
shrl
loope
dec
jnp
adc
enter
das
pushf
dec
cmpsb
pop
in
test
cmp
or
dec
jecxz
adc
xor
xchg
insl
in
pop
movsl
jae
repnz
cmp
movsb
push
cld
inc
into
sub
cmp
pop
xor
cmp
imul
cmp
enter
lcall
call
xchg
loope
hlt
in
popa
and
mov
adcb
inc
subb
jnp
adc
adc
adc
or
mov
fdivl
xchg
mov
in
scas
sub
push
push
and
dec
sub
nop
cmp
aad
mov
fldenv
inc
add
add
fdivl
xor
pop
cs
shll
fiaddl
dec
js
add
stos
push
mov
lret
scas
and
popa
cs
test
ds
int3
xor
loop
pop
mov
push
ret
fwait
out
lahf
add
xchg
fisubrl
push
add
jmp
xor
cli
out
dec
jg
or
push
xchg
pop
xor
add
cmpb
shlb
sbb
sbb
mov
cs
aaa
and
test
mov
sarl
and
test
scas
mov
adc
gs
adc
cmp
pop
repz
repz
cmc
out
bound
cmp
sub
push
and
js
pop
mov
jg
lods
jmp
iret
push
mov
std
cmp
pop
movsl
movsl
lock
or
addr16
xor
and
pop
test
cmpl
imul
pop
cs
test
dec
lret
in
inc
and
leave
jae
push
sti
enter
lret
sub
in
scas
mov
push
push
les
ret
iret
mov
imul
push
mov
xor
enter
sarl
int3
inc
ds
into
and
pop
daa
sbb
xor
das
mov
ret
xchg
ficompl
daa
daa
aas
xchg
dec
dec
cmp
inc
dec
and
jmp
fidivrs
push
inc
or
mov
push
imull
xor
paddq
mov
insb
xlat
mov
xchg
int3
ret
loope
mov
pop
aaa
mov
lods
imul
push
stos
cld
popf
sub
sub
lods
pop
mov
pusha
rcll
imul
fcomip
inc
dec
test
ret
fisttps
test
cmc
int3
sbb
mov
xorb
pusha
xchg
jecxz
dec
jo
mov
jbe
mov
mov
negl
out
jecxz
mov
in
cmpsl
pusha
sbb
xor
cld
sub
mov
and
in
push
pushf
jg
imul
jbe
jb
jns
jnp
sub
or
or
push
fidivs
mov
mov
lea
and
jns
jns
scas
mov
lods
push
push
bound
cmpsl
aam
jnp
xchg
sbb
mov
jnp
jb
enter
movsb
lret
mov
mov
mov
sti
cmp
inc
mov
inc
cmp
inc
or
test
in
dec
outsb
call
sub
lods
jg
mov
sub
mov
jp
repnz
test
insb
push
mov
sub
mov
scas
cmp
push
xor
push
ret
enter
js
push
pop
scas
inc
iret
shrb
push
cmp
inc
adc
hlt
pop
mov
cs
sahf
movsl
cmpsl
adc
mov
scas
shlb
ljmp
cmp
dec
test
enter
adc
cld
xor
aad
sbb
out
inc
in
add
and
or
arpl
mov
setp
rol
and
mov
pop
xorb
leave
call
push
aaa
bound
and
xchg
and
sub
cmpsl
jb
sbb
sbb
jl
ja
mov
jge
push
out
daa
aam
mov
mov
loopne
mov
push
aad
mov
dec
in
lret
aas
cmp
sub
stos
mov
pop
fdivrs
jle
pop
jae
sub
pop
xor
mov
scas
test
push
int
inc
lods
xlat
mov
std
mov
inc
popa
add
cmp
or
int3
sbb
imul
pop
cmp
arpl
les
mov
pushf
sub
data16
les
sbb
pop
lea
dec
cld
in
xchg
aaa
repnz
mov
lds
mov
jecxz
repz
aad
sub
lock
pop
rcll
mov
xor
jge
push
fwait
ret
pop
sub
leave
push
or
or
shrb
imul
daa
mov
mov
aam
sbb
inc
in
sbb
adc
pop
popf
imul
gs
push
xchg
mov
push
sahf
stos
push
addps
xor
mull
ret
xor
push
mov
repz
es
in
movsb
cmp
pop
aaa
or
lcall
and
adc
popl
test
and
mov
sbb
lock
inc
fstsw
jae
cmp
mov
mov
add
aas
sbb
adc
xor
stc
std
ljmp
pop
gs
mov
hlt
repnz
fs
xor
or
stos
rol
add
mov
lret
movsl
into
lret
mov
enter
call
add
in
out
adc
adc
and
aam
repnz
je
jp
mov
imul
inc
out
call
jmp
lock
mov
mov
mov
or
fstpl
cs
cs
sbb
fsubs
lret
and
xchg
int3
and
insl
jnp
aad
pop
xchg
jecxz
es
test
push
adc
das
xchg
sub
xor
mov
cmp
inc
rcll
sub
shl
mov
test
mov
inc
mov
fnstenv
or
ret
out
adcb
adc
subb
lds
andb
roll
xchg
pop
mov
ja
push
or
inc
enter
pop
sub
adc
inc
mov
cmp
xchg
pop
pushf
xor
inc
in
jae
push
jge
lea
fisubrs
jp
add
orl
arpl
push
push
pop
shlb
jbe
js
shlb
adc
cs
jo
mov
cmp
repnz
notb
mov
mov
test
lea
push
out
cld
lahf
test
shlb
jnp
ja
sub
scas
xchg
xor
mov
cli
dec
fcoml
xlat
popa
jo
mov
xor
lret
push
dec
fcomp
cli
jmp
pop
pop
mov
or
in
xchg
fdivs
arpl
mov
or
pop
ret
icebp
xor
sbb
and
enter
out
push
jecxz
call
call
push
iret
fbld
fisubrl
aas
rcrb
ljmp
push
xor
inc
outsb
and
das
out
in
mov
pusha
cmpl
push
mov
push
fildll
cs
lcall
sub
test
mov
sub
sbb
or
movl
pop
insl
pop
mov
outsl
cli
pushf
pop
jge
data16
mov
clc
fisubs
xchg
mov
lods
hlt
fwait
dec
dec
aam
mulb
pop
push
sbb
in
imul
dec
mov
in
in
mov
sbb
and
outsb
das
add
mov
sti
and
sbb
mov
adc
adc
mov
popf
or
add
xorb
pushf
mov
jbe
add
xor
dec
das
or
pop
cmp
popa
xchg
mov
xchg
cli
xchg
cltd
jge
loope
mov
jnp
sub
mov
pusha
aaa
out
xchg
push
inc
push
lret
inc
mov
popa
stc
cmp
sub
xchg
xchg
and
add
cmpsl
push
ficoml
adc
and
jp
mov
pop
shll
lock
pop
pop
into
xor
adc
movsl
pop
xchg
jnp
int
mov
cs
ret
mov
push
mov
push
xchg
jae
xlat
mov
mov
pop
fbstp
mov
sbb
pop
mov
xchg
or
fwait
or
sub
call
cld
adc
test
xchg
jne
dec
sbb
and
mov
loope
inc
or
adc
mov
and
or
adc
xor
lret
ds
cmc
popa
je
dec
inc
pop
sub
push
xlat
jecxz
pop
test
rcr
js
outsb
mov
in
mov
cmc
sbb
movsl
cmp
bound
or
jge
repnz
mov
and
ljmp
cwtl
lea
pop
mov
int3
mov
andb
adc
lahf
aaa
cmpsl
adc
jp
ljmp
and
je
inc
je
add
xchg
push
jno
or
pop
sub
lcall
adc
cmpsl
jnp
jno
mov
mov
lret
mov
push
mov
mov
es
jmp
jbe
lock
nop
fsin
int3
sub
sbb
jmp
fucomip
pushf
movsb
push
pop
cmp
jmp
dec
xchg
ljmp
xor
add
sarl
out
out
xor
pop
out
mov
push
pop
clc
cld
sub
icebp
adc
lret
mov
bound
xor
xchg
mov
or
adc
adc
mov
ret
lods
xchg
in
addb
cmp
std
clc
push
clc
xor
das
sbb
dec
outsl
in
or
aad
dec
out
or
push
sub
loope
pop
push
imul
xchg
fs
sbb
hlt
sbb
push
mov
adcl
pop
add
sub
sbb
sarl
cwtl
xchg
rcll
test
push
or
pushf
mov
pop
in
and
stos
rcr
cmp
scas
arpl
aad
dec
pop
fwait
imul
inc
mov
jno
mov
sbb
ja
mov
sub
jg
js
fists
aam
sub
jle
or
adc
xor
es
mov
cmp
inc
divb
jl
push
add
xchg
jle
and
cld
cmp
mov
dec
sub
pop
repz
and
stos
pop
out
jbe
inc
mov
ja
push
push
jle
das
out
outsl
les
mov
inc
in
rolb
push
cmc
sub
mov
mov
mov
mov
mov
jb
test
cmp
icebp
aad
mov
scas
adc
lahf
int3
std
mov
das
les
in
add
push
cmp
mov
pushf
push
inc
pop
inc
push
push
out
or
mov
dec
mov
rclb
fsubrs
mov
mov
inc
mov
jmp
jmp
imul
or
mov
cmp
cmp
xlat
in
push
cmp
aam
inc
lahf
out
sbb
test
ret
pop
adc
mov
pop
add
mulb
sar
or
or
jns
push
inc
les
xor
push
nop
cmp
pop
mov
movsl
and
imul
test
lcall
out
add
lret
fdiv
push
adc
repnz
adc
adc
sbb
ds
div
fldenv
mov
movsb
xor
pop
ljmp
xor
insl
cltd
ss
pop
ficoms
xor
inc
xchg
ds
pop
push
scas
jno
adc
sti
sub
inc
mov
inc
stc
rclb
lods
outsl
movsl
fiadds
mov
jae
shll
sub
mov
jbe
hlt
xor
mov
or
jnp
les
sahf
in
adc
xlat
shl
xchg
mov
pop
jl
cs
mov
loopne
inc
mov
mov
cwtl
popa
pop
rcr
mov
jge
add
roll
insl
mov
aas
sub
or
outsl
lahf
addr16
test
mov
xchg
cmp
mov
lret
stos
mov
shlb
sti
xchg
sub
dec
xchg
inc
mov
popa
cmp
stc
aaa
jo
cmp
sbb
adc
adcl
inc
xor
aaa
mov
or
cmp
mov
sbb
xor
ret
call
rcrb
inc
ret
mov
or
icebp
js
cmpb
jae
sbb
test
inc
push
outsb
cli
mov
ljmp
inc
adc
mov
mov
les
push
mov
cwtl
insb
aam
jno
test
aaa
cli
jbe
in
or
std
fucom
mov
sub
testl
push
call
shlb
mov
jge
repnz
dec
adc
and
jp
test
adc
mov
lea
sbb
nop
or
sub
aad
movsb
rcr
insl
addr16
ss
rcrb
shl
mov
outsl
fisubl
add
pop
test
or
push
daa
sbb
pusha
stos
push
inc
sbb
push
cmp
adc
xchg
ss
cmp
xor
xchg
lret
or
fstl
dec
fisttps
cli
daa
mov
adc
pushf
push
or
inc
add
out
jp
dec
rcrl
mov
call
jne
ror
sbb
push
out
push
fyl2x
mov
push
lea
mov
xor
stos
mov
shrb
or
loop
mov
pop
pop
add
sub
les
pop
jne
push
cmp
ror
adc
sarb
addr16
pusha
xor
xchg
int
xor
rcrb
adc
testl
adc
js
jg
sub
in
xor
pop
and
sbb
shll
or
dec
test
movsb
mov
sub
mov
add
add
ja
lret
xchg
stos
cmpsb
lret
jo
fisttpll
iret
push
cmp
sbb
or
add
inc
add
mov
jno
test
es
xlat
lret
push
sbb
inc
and
repz
cmp
mov
sbb
cmc
std
jnp
xlat
fistpll
jo
mov
mov
test
popf
je
sub
mov
lods
popa
dec
sbb
mov
mov
sub
add
cmp
inc
mov
add
mov
add
adc
mov
xchg
mov
daa
xchg
ret
mov
mov
insl
jl
xor
ja
xor
add
fldlg2
les
mov
cmp
imul
cs
lods
mov
lahf
xchg
lret
push
gs
add
jp
sbb
jmp
pop
fwait
in
mov
xchg
clc
movsb
call
xlat
fists
movsl
sbb
xor
xchg
icebp
xchg
loop
js
hlt
movsl
dec
pop
inc
sbbl
inc
pop
xchg
das
push
jb
aas
mov
or
cmp
jmp
adc
xchg
rolb
xchg
es
lahf
lock
insl
pop
dec
xchg
ds
mov
loopne
ss
adc
xor
addr16
clc
fdiv
cli
cmp
jg
int3
aad
jno
std
ss
push
fisttps
out
jmp
sub
out
icebp
inc
jno
push
cmp
and
std
dec
sbb
in
pop
hlt
jno
jl
cmpl
lock
cmp
inc
sarb
bound
jmp
mov
test
fisttpl
and
hlt
loopne
out
data16
xor
or
ljmp
adcb
int
imul
lock
stos
fldln2
pop
sbb
call
cmpb
je
push
jno
loop
in
popl
adc
std
loop
push
mov
shlb
popf
adc
loope
mov
faddp
mov
std
dec
pusha
sub
and
negl
or
sub
sub
setne
push
mov
cmpl
nop
and
mov
sub
push
popa
sti
or
add
insb
cmp
jnp
cmp
bound
jns
or
out
add
push
sub
repz
daa
test
shlb
jg
cld
mov
sub
xchg
stos
mov
xchg
mov
scas
lcall
mov
xor
movsl
jne
in
or
add
pusha
gs
sub
adc
xchg
hlt
in
cmp
sub
and
sub
sbb
inc
imul
pushf
dec
cmp
fwait
test
mov
ret
jmp
and
dec
pop
mov
cmp
rol
inc
add
lods
pop
outsb
jno
lret
inc
cld
out
lcall
jbe
jbe
sbb
sub
xchg
aaa
mov
lods
cmp
xchg
xchg
repz
pop
and
mov
xor
cmpsb
ret
scas
ljmp
movsl
cld
fs
sbb
je
syscall
cli
xor
dec
fs
ljmp
lcall
ret
in
inc
lods
sahf
cmp
rolb
divb
mov
fs
add
or
je
sti
cmp
xlat
jle
jge
addr16
push
push
mov
mov
les
hlt
push
or
dec
xchg
addb
outsl
jmp
fs
add
imul
cs
test
lahf
mov
fnsave
mov
shlb
ficoml
inc
add
add
jne
in
push
add
xchg
inc
aaa
xchg
lcall
xchg
sub
out
push
test
psubb
fmull
std
imul
jp
out
dec
mov
insl
iret
jg
mull
fs
stos
enter
push
and
mov
ljmp
aam
add
and
in
pop
xchg
imul
mov
cmp
int3
sub
out
test
mov
sbb
push
mov
xchg
lods
insb
loop
addr16
and
das
or
jmp
aaa
shll
in
sub
xchg
sahf
sbb
mov
into
lret
xchg
jno
or
int
cmp
inc
mov
mov
mov
sbb
inc
jno
jae
jmp
jo
enter
outsl
orb
enter
call
mov
lods
adc
aas
jg,pt
pop
mov
les
xlat
and
fldcw
movsb
or
clc
xchg
sbb
outsb
push
xchg
sub
mov
jmp
and
cmpsb
test
rcrl
int
clc
outsb
leave
notl
aam
test
das
cmp
shlb
iret
movsl
inc
xchg
cmp
xor
bound
dec
xor
inc
ret
fildl
lods
mov
pop
sti
adc
shlb
and
pop
std
addr16
jae
push
cvttps2pi
mov
test
mov
lcall
mov
push
testb
push
pop
mov
and
cli
inc
out
push
icebp
stos
mov
mov
xor
cli
lret
push
fidivs
popf
or
decb
shrl
and
jecxz
adc
or
out
stos
dec
sti
imul
fwait
icebp
es
imul
insb
cmpsl
jp
lret
xchg
xchg
jge
test
call
sbb
mov
aam
xchg
xchg
aam
or
mov
cli
cwtl
sbbl
inc
fcompl
in
test
test
das
mov
cli
arpl
stc
and
and
pop
insl
lcall
jbe
jl
or
jecxz
pop
push
or
rep
loop
subb
and
jae
aam
mov
xor
xor
aas
popa
mov
and
mov
and
push
int
in
loope
mov
jle
divl
out
std
cmc
in
and
mov
or
inc
mov
cmpsl
int
sahf
fcmovnu
pusha
add
fnstsw
dec
and
repnz
sub
jmp
pop
and
push
aaa
pop
dec
adc
inc
aas
ret
inc
out
push
in
mov
adc
and
rcl
sbb
ret
mov
jae
or
sbb
sbb
mov
mov
inc
and
xchg
and
dec
cmp
mov
das
push
xlat
dec
lea
jne
movsb
add
lods
setb
xchg
mov
inc
lahf
jle
dec
cmpsl
fldl
cs
inc
cmp
loopne
cmp
xchg
mull
lds
pop
fmull
cmc
sub
cmpsb
mov
push
out
xor
push
out
xchg
rorb
in
and
aad
mov
or
dec
psubd
jl
iret
xor
in
imul
adc
sub
sti
mov
mov
push
mov
inc
add
push
cmpsl
jecxz
cld
call
add
xchg
in
sti
cmp
cmp
cmc
mov
mov
scas
imul
sarl
mov
rcrb
mov
fwait
das
xor
mov
dec
movsl
insb
test
mov
xor
fnstcw
mov
iret
mov
cmp
push
movsb
jns
test
xchg
pop
out
mov
clc
scas
dec
jp
mov
mov
or
gs
sbbl
push
nop
insb
loopne
xor
xor
jmp
ds
sub
cmp
int
mov
jno,pn
out
cwtl
mov
aas
xchg
mov
rcrl
jmp
add
mov
adc
dec
push
aaa
fsubl
ret
shll
das
test
pop
divps
int3
and
int3
inc
add
mov
cmpsb
jnp
je
sarb
jg
xor
dec
mov
repz
inc
insb
lcall
lods
cmp
mov
aaa
lret
ret
pop
in
push
test
adc
push
adc
lahf
int3
adcl
loop
push
sub
cmp
mov
inc
xor
add
adc
out
adc
push
mov
orb
clc
jmp
cwtl
sahf
pop
shrb
and
mov
dec
xor
lcall
rolb
repz
outsb
iret
mov
dec
sbb
push
cmp
push
push
icebp
xchg
js
mov
pop
test
and
out
or
pop
cmp
xor
rcll
rorb
push
xor
shll
cmp
xchg
cmpsl
arpl
push
pusha
insb
xlat
sub
pusha
je
ret
test
cmp
outsb
bound
out
xchg
pop
xchg
mov
add
mov
xor
sti
fists
fisubs
xchg
mov
add
sbb
mov
scas
push
andb
cmc
shl
and
out
xor
inc
test
cltd
out
jmp
inc
or
pop
or
clc
push
mov
ret
adcb
xor
loope
int
cltd
push
xor
out
outsb
push
adcl
inc
dec
mov
mov
and
adc
fists
sub
lods
hlt
pop
nop
jg
and
stos
ss
jge
filds
cmp
xor
sub
add
lock
jne
movsl
ljmpw
lock
popf
add
and
pop
or
adc
dec
stos
sarb
mov
mov
add
mov
out
jge
popa
pop
popl
jg
dec
lret
incb
out
sbb
adc
aad
dec
mov
fs
sub
dec
cwtl
adc
inc
lods
push
or
pop
pushf
aas
or
stc
and
movsl
sub
in
gs
icebp
inc
xor
push
popl
inc
imul
dec
or
pop
fsubrp
lret
mov
bound
add
test
idiv
inc
bound
std
insb
lahf
or
dec
shlb
in
das
scas
lret
sbb
pop
push
in
int3
rolb
cmpsb
inc
cmpb
mov
push
orb
jge
aaa
enter
gs
add
test
lea
xchg
cmp
inc
jmp
cmpsb
lds
xchg
cmp
jno
inc
ja
cs
mov
fs
mov
adc
popa
in
xchg
in
jns
mov
fs
dec
orb
dec
repz
lea
in
out
cmpsb
push
pop
scas
jg
inc
loopne
jg
enter
push
inc
scas
sub
mov
cmc
les
out
jno
lea
jns
xor
mov
lret
leave
dec
xlat
jp
scas
pop
std
dec
in
mov
jge
pop
je
imul
enter
pop
pop
sbb
pop
xor
push
xor
pop
inc
cmp
xlat
je
jge
inc
jnp
add
mov
out
mov
xchg
add
or
xlat
sarb
jge
xchg
mov
xor
inc
xchg
xchg
mov
cwtl
das
xchg
enter
jl
add
pop
push
imul
test
mov
adc
jmp
jg
out
insl
enter
aas
mov
inc
outsl
mov
nop
jecxz
int
push
in
out
mov
pop
jo
push
add
mov
mov
icebp
jns
cs
hlt
jb
test
iret
lret
insb
adc
xchg
add
adc
mov
pop
jge
dec
pop
addl
sub
xor
subb
add
loopne
mov
add
mov
sbb
test
xor
push
inc
aaa
mov
sti
inc
popa
into
xor
push
insb
push
cltd
pop
mov
push
frstor
cwtl
js
scas
lea
orl
fs
push
test
fnstcw
out
lret
jg
cmpsl
dec
les
lock
das
mov
fidivl
cmp
jmp
clc
je
xchg
call
ljmp
insl
pop
cwtl
or
and
outsb
dec
push
add
push
dec
insb
mov
xor
dec
mov
popa
sub
push
fwait
sahf
shll
jmp
inc
adc
data16
and
aam
fsub
cld
aam
pusha
test
inc
pop
loopne
xchg
fstps
push
lcall
xor
cmpps
push
adc
jp
outsb
cmpsl
jbe
test
out
iret
lds
sbb
push
leave
adc
fisttpl
sbb
lods
xchg
sub
call
push
adc
ljmp
or
mov
cmpsl
push
or
mov
nop
dec
popa
ss
sbb
imul
add
mov
test
test
push
sub
es
or
xor
xchg
or
shrb
int
cld
cmc
pop
cli
xor
or
sahf
rcrw
xor
fcoms
es
mov
jns
mov
leave
push
test
adc
fildl
and
hlt
clc
icebp
in
sbb
sub
rol
sbbb
mov
inc
loop
inc
in
lcall
stos
mov
std
jle
push
sti
ljmp
scas
es
xor
enter
sbb
addr16
xor
inc
mov
pop
fucom
fmul
dec
fucomip
aam
repnz
jmp
out
bound
mov
jle
push
push
ja
dec
xor
fldcw
xchg
mov
mov
ss
outsb
mov
xchg
fsubrs
xlat
test
push
mov
mov
and
dec
loopne
aam
mov
cmpsb
jle
xor
xchg
rorb
dec
mov
cmc
jb
ficomps
mov
xchg
aas
sub
add
mul
in
js
xchg
call
dec
lods
mov
pop
push
adc
jo
and
xor
and
pop
sbb
mov
bound
outsb
pop
dec
cmp
call
dec
push
xlat
mov
pop
shll
iret
popf
scas
mov
push
test
fstpt
loopne
xchg
dec
je
pop
mov
xchg
cmpl
pushf
mov
cmp
push
test
sti
sbb
fldt
fucom
pusha
movsl
bound
loop
ds
mov
scas
lds
hlt
test
in
and
pushf
cmp
push
jne
scas
movl
push
out
inc
push
outsl
sbb
pop
xor
mov
and
arpl
popf
ljmp
or
rcrb
out
xchg
mov
sub
fsubrp
mov
dec
jne,pn
scas
xor
pop
add
loope
ljmp
in
outsl
adc
sti
movsb
sahf
cmpl
mov
sarb
sub
imul
fisubl
adc
cld
cs
or
xchg
jne
scas
dec
add
xchg
fsubp
mov
lods
add
inc
push
out
fldenv
test
cli
push
jp
outsl
ss
or
xchg
or
push
jne
movsl
mov
rcll
gs
pop
pop
sub
mov
jnp
xchg
int
gs
fisttpl
insb
pop
outsl
fs
pop
inc
cs
cmp
daa
fisubrl
jne
sbb
pushl
movsb
mov
mov
fwait
jnp
les
es
mov
ljmp
mov
adc
jns
add
scas
dec
aam
or
sbb
mov
inc
cmp
out
pop
rclb
scas
mov
fcomi
setnp
test
outsb
cmp
mov
xor
mov
push
and
xor
jns
xchg
dec
push
icebp
bound
rcr
mov
sub
nop
sub
in
out
xor
sub
xchg
jle
xchg
xchg
cltd
adc
mov
ds
mov
sub
sub
adc
lretw
enter
inc
pop
jae
test
jl
fwait
in
lret
jle
loop
lds
jns
out
int
das
and
jns
or
mov
sbb
xlat
cwtl
loopne
sub
cmp
jno
aam
adc
adcl
xor
jo
in
mov
dec
pop
imul
inc
mov
sahf
iret
popf
push
adc
xchg
push
bound
scas
call
ffree
xor
pop
repz
call
push
shlb
xor
sub
push
flds
dec
stos
fldcw
sbb
movsl
sbb
sbb
jge
in
push
jg
push
lea
fnsave
inc
test
pop
clc
daa
out
pop
mov
sbb
in
pop
mov
sbb
cmc
outsb
icebp
or
push
rorl
jno
loope
or
and
cmp
mov
rorl
or
ljmp
js
jns
lds
addr16
mov
mov
inc
insl
sbb
xor
arpl
xor
mov
shrb
cld
pop
push
dec
imul
mov
test
add
jmp
inc
push
notb
or
daa
subb
push
mov
cwtl
cmp
cmp
ds
xor
mov
xor
push
cs
call
jnp
pusha
sti
fistpl
subb
out
xor
fsubs
nop
cmp
add
std
cmc
cwtl
mov
test
adc
and
sub
inc
push
fs
scas
push
orl
je
out
xchg
inc
call
leave
add
mov
cmp
push
and
incl
cwtl
into
pop
inc
or
pop
pushf
cmc
lock
std
mov
into
dec
pusha
inc
inc
cli
popf
pop
mov
outsl
mov
xchg
push
aam
xchg
es
jae
inc
and
or
inc
push
push
aad
sub
int3
xor
divb
jmp
or
cmp
pop
arpl
jg
outsl
arpl
loop
pop
leave
lds
aaa
scas
rcrl
ret
lret
sbb
outsb
sar
cld
rep
inc
lds
nop
rorb
and
mov
mov
mov
xchg
clc
adc
fbld
xor
mov
xor
pop
int
aad
fcmovne
inc
or
insl
imul
je
adc
adc
jecxz
pushf
add
into
lods
leave
mov
xor
ret
dec
mov
lods
cmp
dec
clc
sub
out
xor
cmp
popa
in
lret
mov
push
sub
mov
arpl
in
call
lcall
ljmp
shll
sbb
in
push
ret
aad
stos
test
inc
movsl
jmp
and
mov
shrl
xchg
xlat
cmp
jae
mov
and
mov
jns
lds
lret
out
sub
subb
mov
push
pusha
addr16
aam
fcmovnu
mov
push
arpl
inc
sbb
in
testl
pop
addr16
mov
jo
sbb
lea
jae
pusha
outsl
in
jl
mov
out
jecxz
xchg
adc
mov
mov
aam
xchg
cmp
inc
mov
and
icebp
pushf
cmp
push
or
add
scas
and
xorl
jae
push
std
in
inc
push
loopne
nop
xchg
xchg
test
add
mull
jg
push
mov
jbe
jae
dec
cmp
jns
daa
out
or
rclb
push
sarb
insb
fdivrp
lock
pop
lods
push
pop
clc
stos
cli
xor
xchg
hlt
mov
push
clc
mov
rclb
jmp
fadds
repz
inc
push
out
sub
inc
icebp
xor
stos
imul
and
adc
pop
xchg
les
pop
xchg
je
and
lahf
ret
ret
and
arpl
fmull
cld
xchg
repnz
imul
fistps
push
call
add
enter
rclb
jmp
out
fwait
pop
nop
rorl
push
adc
push
movb
rcrl
out
jo
add
imul
xlat
ret
popa
push
xor
iret
iret
arpl
mov
imul
xor
sbb
imul
jno
outsb
xchg
fisubrl
and
rcll
or
pop
out
rorb
mov
test
jo
dec
sub
sbb
aas
mov
enter
lcall
scas
add
fs
repz
aaa
sbb
xchg
jl
mov
ja
mov
lret
jge
lea
fsubl
lea
mov
lret
mov
loope
jno
adc
mov
jbe
sbb
jns
mov
insl
aam
insb
xor
inc
out
subl
mov
xchg
xchg
push
fmuls
fcmovu
daa
push
dec
fsubrs
add
sbb
sbb
mov
sti
lods
sahf
das
add
mov
jg
mov
pop
xchg
jecxz
fstpl
inc
ret
sub
cmc
data16
push
pop
cmp
jecxz
sbb
and
out
cmc
push
inc
push
add
daa
xor
popaw
repnz
dec
jno
jo
sub
adc
pop
mov
add
ficoml
push
mov
xor
pusha
push
adc
insb
out
and
xchg
and
addl
mov
cmp
xor
sub
das
sbb
imulb
shll
loop
sbb
push
lahf
aas
or
mov
bound
inc
cmc
sub
iret
fdivs
adc
cld
push
addr16
ret
adcb
bnd
lahf
lds
das
std
push
jmp
scas
popf
test
sub
lcall
jle
in
lds
in
ds
stos
adc
push
mov
and
mov
mov
sbb
inc
test
test
cmc
mov
fldt
push
ljmp
push
push
bound
popf
icebp
dec
stos
popa
addl
scas
dec
outsl
and
ds
fistpl
mov
ja
jp
pushf
or
ret
mov
out
xchg
scas
inc
lods
mov
push
cmp
push
pop
test
cwtl
pushf
mov
adc
or
push
and
aam
imul
jg
or
sub
cmp
aad
arpl
lret
jmp
hlt
js
cmpsl
lcall
outsb
jecxz
mov
sbb
push
leave
outsb
in
jmp
mov
add
ret
xchg
pusha
scas
lret
movsl
outsb
xor
or
push
out
roll
adc
pop
push
lahf
in
inc
pop
sub
xor
fcompl
xor
call
addb
cld
aaa
mov
clc
push
lods
mov
enter
loope
adc
ficomps
mov
lahf
test
mov
gs
je
les
mov
xchg
pop
pusha
and
loop
mov
out
sbb
push
push
xlat
adc
dec
pop
in
jle
lret
add
in
das
aaa
adc
stos
jb
mov
sbb
test
hlt
out
adc
sbb
inc
out
mov
ret
cmp
add
outsb
loop
xchg
out
mov
cmp
cmp
cwtd
clc
je
into
push
or
stc
pusha
sub
stos
mov
sbb
xchg
das
mov
ret
push
pusha
hlt
mov
cmp
mov
rcrb
xchg
pusha
inc
icebp
cmp
or
push
xchg
andl
sbb
out
inc
or
loop
out
pop
xchg
dec
xor
mov
aas
fdivp
xor
mov
adc
int3
xor
jmp
adc
mov
das
push
cltd
out
sti
call
sub
dec
aad
js
mov
jmp
sbb
ja
lds
mov
ja
daa
addr16
movsl
xchg
inc
mov
js
pop
arpl
mov
into
adc
mov
pop
dec
rcll
or
lods
clc
stos
fs
mov
rcrl
pop
aam
pop
xchg
cmc
dec
cmpl
mov
sub
fsubrs
fldcw
mov
sub
test
loop
cmp
out
lock
xchg
movsb
das
ljmp
imul
mov
es
jns
push
and
fcomi
jb
shr
loop
ss
sbb
js
xchg
and
mulps
cld
or
or
sub
popf
pop
sub
lahf
dec
adc
popa
scas
sbb
outsb
push
cwtl
stc
in
sbb
xor
jg
mov
add
pop
pop
icebp
add
sub
in
cmc
pop
sahf
mov
and
test
sbb
repnz
shll
xchg
xchg
frstor
jl
insb
adc
or
gs
cwtl
aas
cwtl
inc
pop
push
add
or
rolb
mov
push
js
lcall
push
out
clc
lahf
stos
dec
imul
mov
dec
mov
mov
imul
jbe
jb
aad
test
aas
ret
inc
dec
push
pusha
xchg
mov
jecxz
popf
or
mov
push
mov
insl
daa
cmp
rcrb
fsubp
cmp
imul
ds
ds
cmc
pop
dec
push
inc
xchg
adc
xchg
test
mov
mov
xor
das
cs
icebp
push
xlat
cmp
cmp
lds
shrb
xchg
mov
shl
es
fisubl
and
ljmp
dec
mov
adc
loope
outsb
aad
add
insl
out
mov
idiv
fimull
ret
jnp
dec
push
inc
push
pop
pop
nop
rorl
sbb
ja
cmp
pushf
mov
gs
push
or
add
lods
loop
popf
or
and
lret
stos
outsl
push
inc
xor
mov
jns
mov
loop
lahf
jl
rcrb
sbb
xor
xor
in
jne
outsl
fcmovu
pop
mov
jns
mov
mov
mov
outsb
mov
xchg
into
in
or
inc
scas
xchg
xchg
out
stos
imul
dec
mov
push
adc
test
sub
add
outsb
aas
cli
cmpsb
sub
mov
mov
in
mov
dec
cmp
adc
and
ljmp
mov
jle
xor
xchg
loop
xchg
add
scas
and
xchg
jecxz
cmp
sub
fists
bound
jne
out
mov
pop
shll
jecxz
and
or
pushf
mov
inc
and
addr16
adc
out
cmpsl
or
mov
mov
mov
pop
jne
fs
sbbl
push
fisubl
and
xor
test
mov
pop
test
xchg
mov
pop
mov
je
push
lods
push
int3
insb
movsl
xchg
sbb
sub
inc
jecxz
scas
std
mov
sub
and
int3
push
push
cmp
scas
jae
jecxz
das
xlat
mov
xor
xchg
das
jns
addr16
pop
mov
je
push
lret
cmp
xor
fidivs
or
into
inc
mov
sti
cmpsb
mov
lret
xor
push
cli
cmp
shr
mov
dec
sbb
push
push
dec
call
decb
das
fdiv
dec
xor
and
inc
mov
push
fildl
gs
mov
inc
gs
jp
mov
icebp
mov
mov
mov
xlat
or
hlt
out
cli
hlt
jb
push
inc
incl
cs
push
arpl
mov
adc
ss
fistps
xchg
xrelease
xor
push
rcrl
mov
mov
clc
ret
rorl
dec
mov
in
sqrtps
xchg
xchg
mov
add
xorl
pop
cmpsb
push
outsl
cmp
mov
push
fwait
xchg
shrb
cmp
pop
dec
inc
imul
mov
enter
mov
pop
xchg
mov
jle
xor
mov
xchg
movb
jmp
mov
imul
mov
push
dec
mov
incb
scas
xchg
xchg
jge
sbb
daa
and
adc
pop
and
cmp
xchg
mov
jg
inc
and
mov
aas
addr16
dec
into
mov
mov
or
testb
inc
sbb
and
lret
iret
ret
cs
inc
xor
mov
xor
sbb
and
dec
mov
testb
imul
adc
jp
cmp
andb
mov
jg
popa
cmp
or
adc
push
mov
pop
push
xor
dec
mov
hlt
xchg
adc
movsl
pop
pop
fstps
repz
and
push
inc
sub
aas
shr
dec
outsl
or
add
fcmovnbe
or
dec
popa
push
jg
or
enter
mov
jmp
fs
lret
insl
test
or
lret
lret
outsb
and
ret
in
sub
pop
imul
lret
and
xlat
xor
int
mov
arpl
stos
in
arpl
out
js
xchg
mov
call
pop
add
std
sti
lea
add
add
scas
cmp
test
adcb
and
mulb
inc
pop
imul
adc
xchg
adc
xchg
xchg
jbe
jecxz
or
mov
sbb
ja
or
sahf
mov
aad
into
xor
outsl
icebp
push
pop
cmp
test
fsubs
in
inc
out
cmp
ficomps
jle
ror
aam
addr16
or
xchg
fiadds
ss
lds
pop
pop
cmp
add
dec
dec
insl
fisttpll
mov
ljmp
cmpl
pusha
xchg
mov
fwait
mov
push
loop
adc
ret
push
fnstenv
push
fldl
outsb
push
cmp
lods
fsubrs
jp
sbb
adc
inc
lock
mov
test
cli
push
pusha
dec
cmpsb
adc
adc
push
pushf
sub
sarb
jmp
outsl
xchg
lret
pop
add
push
fstpt
fwait
or
add
mov
push
cmp
or
sbb
inc
xor
bound
pop
stos
or
imul
dec
outsl
aaa
sbb
jle
add
dec
pop
mov
mov
sub
stc
es
fiaddl
jbe
enter
inc
mov
sub
sbb
mov
dec
pusha
mov
jne
mov
outsl
cwtl
push
lahf
hlt
loope
or
lock
das
inc
dec
aaa
repz
aas
xchg
fistpll
and
push
sub
cmpsb
cmpl
mov
and
sub
sbb
xor
sbbb
mov
pop
mov
loope
call
push
or
jmp
fadds
pop
push
inc
movsb
xor
mov
cmp
sbb
and
ss
inc
shlb
fisttpl
out
push
rorb
add
xor
lea
cltd
pusha
jne
pop
int
sub
push
cmp
pop
sahf
mov
cmp
pop
pusha
xchg
movsl
mov
lret
das
leave
and
push
inc
fnstsw
nop
mov
lock
rorl
mov
repnz
aaa
out
ror
loopne
adc
dec
ret
and
lahf
adc
outsb
incb
int
sti
xchg
out
mov
mov
mov
adc
push
test
sbb
lret
inc
push
scas
mov
mov
rorl
aam
ret
mov
rcrb
and
fstpl
xchg
mov
popf
or
testb
shlb
mov
or
bound
push
sti
xchg
cmp
adc
lahf
fisttpl
sbb
jo
mov
sar
andb
mov
mov
jmp
cltd
or
pop
pusha
and
push
adc
imul
rcrb
xchg
dec
in
push
je
push
loopne,pn
cmpsb
test
fs
sbb
test
push
xchg
pop
xchg
icebp
mov
sbb
xlat
shlb
push
push
jl
int
mov
mov
cmp
inc
ficoms
ss
sub
sahf
fldl
mov
mov
into
add
adc
cli
xchg
push
shrl
jne
inc
xchg
fs
and
outsb
add
and
xorb
test
scas
in
fisubs
xchg
sub
adc
and
clc
nop
sbb
xchg
mov
dec
fildll
pop
push
cmp
out
xor
push
push
imulb
xor
mov
cmpsb
xchg
nop
mov
lret
les
sbb
out
and
adcb
push
mov
int3
pop
xor
test
mov
inc
mov
mov
aas
inc
sbb
sarl
call
mov
dec
cmpsl
lea
jle
add
and
dec
sbb
cmp
rcrb
adc
ds
fidivl
lock
fldl
popf
jge
mov
xor
into
sub
in
jb
loope
ja
xor
mov
add
mov
mov
inc
sbb
cmpsb
xchg
in
and
movl
dec
cmpl
je
push
mov
aaa
sbb
push
mov
xchg
mov
ret
in
mov
out
jmp
ffree
lea
mov
sbb
or
push
test
cmpsl
sbb
and
fmul
push
in
fidivrs
cmc
mov
ficomps
out
xor
gs
jb
push
daa
jmp
sub
mov
mov
push
fcmove
xchg
push
add
test
rorb
es
pcmpgtd
xorl
movsw
and
adc
into
lea
lret
popa
inc
and
push
inc
xor
fsubrs
test
test
cmc
add
mov
ficoml
sub
out
xor
int
inc
jg
mov
mov
fcmovnu
and
jae
stos
sti
ss
aaa
sbb
popa
sub
xor
std
mov
lds
adc
jns
xchg
jmp
mov
dec
mov
fisubrs
push
rcl
shr
aaa
add
call
mov
or
insl
popf
pop
aam
pusha
push
or
arpl
ret
cmp
or
ret
or
mov
pusha
dec
lahf
cmc
aam
sub
sbb
fsts
lea
out
fst
mov
xor
in
sub
push
jnp
push
clc
xchg
lds
push
scas
in
into
mov
xor
mov
inc
xor
ja
sub
cs
jl
mov
adc
adc
je
and
repz
shrb
dec
out
sub
scas
jmp
jae
xchg
into
es
daa
lret
test
adc
lods
repz
mov
sbb
iret
jns
and
push
lock
push
xchg
fwait
push
sub
popf
xlat
mov
adc
pop
pop
js
cmp
push
test
jnp
or
imul
cmp
inc
mov
leave
xchg
mov
in
xchg
sbb
imull
pop
cmp
je
movsb
fs
aaa
adc
lods
insb
cmp
aaa
mov
addl
sbbl
pop
cmp
cli
sub
mov
out
cmp
adc
mov
sub
push
or
cmp
dec
rolb
jnp
push
push
mov
daa
roll
stos
push
aas
dec
cmp
or
test
inc
inc
stc
ss
loope
sbb
movsl
aaa
jb
add
mov
add
popa
jb
shlb
psubsw
jl
shll
add
dec
aas
cmp
add
das
lret
cltd
mov
lahf
jae
cs
xchg
pop
test
inc
and
xchg
dec
add
dec
and
imul
push
js
adc
leave
ror
dec
xchg
push
pop
or
cmp
sub
sub
sub
call
daa
hlt
inc
cld
daa
add
cmp
je
in
mov
xchg
inc
sti
cmc
push
nop
pop
loop
push
aam
mov
sahf
xor
in
mov
enter
arpl
addb
scas
ja
xchg
dec
cwtl
icebp
inc
or
repz
ja
inc
sub
rolb
mov
ret
dec
movsl
hlt
out
mov
test
pop
mov
sbb
mov
sbb
push
dec
sub
jae
and
pop
sbbl
mov
and
nop
dec
notb
loop
mov
notb
movl
mov
cmp
mov
dec
mov
unpckhps
inc
hlt
orl
push
adc
es
xor
push
cltd
sbb
in
or
daa
mov
mov
xor
out
adc
aad
pop
fs
mov
shl
push
andl
mov
and
lds
out
mov
movsb
fwait
and
popf
mov
jae
addr16
daa
mov
mov
jae
cmp
out
pop
xchg
jnp
sub
xchg
xor
dec
push
into
cmp
lret
movsb
cmp
add
dec
mov
cmpsl
in
pusha
push
xor
and
adc
rcrl
push
push
xchg
fstpt
hlt
aaa
daa
jae
jno
push
pop
ljmp
push
imul
or
pop
shll
pop
cmp
enter
jg
fisubl
push
jo
xchg
mov
xchg
js
imul
addr16
sub
jp
push
sbb
jp
sbb
xor
lahf
loope
fnstsw
test
and
enter
mov
push
mov
orl
outsl
xlat
and
pop
mov
jae
roll
mov
or
mov
shll
in
testb
dec
cmpsl
xor
fs
inc
xchg
push
mov
cmpsl
xor
enter
cmp
lcall
aas
lret
aas
inc
fidivrl
pop
push
pusha
cmpsb
out
xor
loop
scas
add
cli
rcll
lds
jle
add
push
stc
inc
mov
push
test
sub
in
jl
add
mov
mov
push
xorl
inc
adc
and
movl
jge
popf
loop
popf
dec
pop
sub
add
xor
mov
fisttpll
sub
repz
jp
jnp
inc
push
outsl
mov
fisubs
or
xchg
imulb
mov
pop
je
rorb
push
xlat
sbb
lock
out
jecxz
xchg
xchg
test
mov
insb
ja
enter
pop
mov
push
fstps
adc
lea
outsl
push
xchg
xchg
adc
lods
jb
xchg
add
outsb
mov
mov
xor
iret
arpl
enter
insl
pop
test
mov
pop
sub
lret
push
pop
push
aam
mov
dec
andl
cltd
rclb
fcomip
mov
subl
ljmp
cmp
call
mov
divl
jle
lods
fisubrl
and
pop
lcall
imul
sbb
cmp
and
mov
rcrl
loopne
dec
and
pop
add
jmp
stos
insb
outsl
icebp
push
mov
imul
xchg
aas
movb
in
or
jmp
adc
push
dec
mov
add
dec
loope
sti
call
cwtl
lret
fdivs
lock
xchg
sbb
cmpsb
clc
inc
sub
jecxz
stc
jnp
xchg
subb
mov
test
shrb
sub
jge
cmpsb
sub
fistpll
out
scas
mov
in
imul
outsb
push
repz
and
jecxz
mov
or
lds
sub
cmpsb
pop
fwait
or
daa
cmp
adc
mov
pop
jmp
jnp
mov
aaa
cs
repz
arpl
pop
mov
pop
aad
pop
sub
loopne
in
sub
cmc
loopne
and
mov
add
inc
cmp
pop
mov
negl
sub
lret
push
sbb
addr16
decb
mov
xorb
out
in
lock
call
cmp
test
rcrl
cmpl
cmpsl
leave
xchg
add
sbb
mov
pop
bnd
inc
repnz
dec
out
in
mov
hlt
insl
pop
das
popa
and
stc
and
cmpsl
imul
pop
mov
fs
ficoml
adc
mov
cltd
push
or
cmp
repnz
adc
dec
mov
notb
sub
or
cmp
lods
rcrb
imul
scas
fbstp
or
adc
lods
fdivs
in
sub
lods
jmp
fmull
or
test
ljmp
ret
cmp
aas
jge
je
enter
negl
sub
imul
mov
out
mov
xchg
out
mov
je
push
inc
inc
push
mov
shlb
int3
xchg
loopnew
negb
dec
rol
lods
add
je,pt
movl
fildll
scas
adc
lds
int3
call
xor
in
inc
inc
inc
xchg
leave
repnz
outsl
mov
out
pusha
roll
lods
cmp
fdivs
div
jle
sub
sbb
or
pushl
inc
mov
mov
sbb
push
rorb
rol
xor
xchg
lods
sbb
in
popf
flds
xchg
and
sbb
sub
push
lret
jge
mov
loope
sti
jnp
movb
push
push
ss
movsb
fnstenv
mov
mov
mov
fsubr
insb
fisubl
push
dec
iret
or
dec
pop
cwtl
insl
rclb
scas
mov
shlb
in
shlb
add
cltd
pop
nop
out
xor
cs
add
data16
adc
pop
cmp
mov
cs
das
movsb
mov
lcall
xchg
jp
push
scas
mov
fcomps
xor
pop
add
outsl
pop
hlt
jge
test
ljmp
fldl
pushf
push
sub
mov
cmpsl
push
dec
out
rcr
inc
es
aam
fwait
or
mov
cmpb
stos
push
fcompl
push
bnd
xchg
dec
adc
ret
or
js
imulb
into
add
adc
push
insl
jae
fistps
push
fcomip
aam
jnp
mov
xchg
loop
test
pusha
mov
sbb
aaa
ljmp
loop
test
fisubrl
jo
sbbl
stc
mov
clc
jns
add
sahf
and
repnz
mov
jns
dec
jnp
idivb
cmp
jo
dec
mov
inc
cltd
loop
arpl
vpshlw
xor
cli
dec
shll
fs
pop
sarb
or
movsl
or
aam
sub
sub
popa
add
hlt
int
add
test
pop
sub
mov
lods
push
xchg
inc
lods
loop
in
xor
ljmp
mov
stc
or
bound
push
cmp
imul
jp
xor
mov
in
mov
in
sbb
sti
xchg
dec
imul
dec
lcall
mov
add
mov
and
xor
jl
or
and
mov
movl
rcrb
loope
dec
repz
add
and
push
out
fldenv
pop
imul
pop
jl
pop
push
inc
jl
mov
cmp
pop
cmp
cwtl
bswap
hlt
cld
movsb
sbb
push
inc
jg
roll
and
sbb
jg
pop
cmp
inc
fs
mov
mov
and
pop
xorl
stos
pushw
icebp
es
scas
pop
mov
xor
mov
out
sbb
dec
jo
jo
pop
inc
neg
push
sahf
jno
out
mov
and
push
pusha
imul
pop
pusha
jg
int3
mov
jnp
loopne
ss
add
insb
iret
cmp
aam
add
rcll
pop
jb
push
xor
sbbb
pop
fwait
push
daa
movsl
out
jl
mov
or
cmp
mov
lock
push
cmpsl
mov
xchg
ffreep
xchg
mov
jmp
push
jge
vcomisd
pop
sbb
div
cmp
rcrl
inc
xchg
inc
pop
push
pop
mov
inc
roll
xchg
cmp
cmpsb
rclb
sti
aad
jns
pop
lods
mov
cmp
std
stos
shrb
lds
pop
imul
pop
ss
mov
popl
rcrb
jge
adc
cmp
inc
dec
push
cmp
adc
jo
mov
cmc
out
mov
pusha
popf
sarw
sti
pushf
repnz
dec
jae
aad
sub
gs
sbb
lcall
rolb
inc
jb
fwait
mov
shlb
sub
cmp
dec
adc
mov
jecxz
add
les
cli
mov
fiaddl
fmull
cmp
pop
inc
push
mov
push
dec
push
xchg
sub
dec
or
inc
mov
in
rorl
repz
loopne
and
cmp
or
sbb
mov
or
stos
mov
sbb
cmp
inc
push
xchg
popa
inc
ret
inc
mov
adc
cltd
xor
dec
pop
push
mov
or
outsl
loope
push
sub
cltd
sbb
mov
dec
cmp
inc
xor
push
int3
add
adc
xchg
scas
cmp
daa
stos
xchg
xor
mov
add
stc
jnp
dec
ret
loopne
pop
fs
cli
loop
add
ret
mov
add
outsl
mov
rclb
inc
ja
ja
sbb
jge
icebp
bound
ds
and
insb
outsb
cmp
bound
cmp
fucom
insl
jge,pt
stos
icebp
xor
lods
and
and
or
inc
xor
jp
push
xor
gs
aam
xchg
sbb
push
out
mov
les
test
lahf
es
dec
fwait
jge
je
and
xchg
mov
or
aas
xchg
mov
sub
shlb
xchg
add
ds
roll
push
rcrb
je
int3
push
adc
rcrl
push
push
loope
lods
or
mov
xchg
push
jne
pushf
add
sub
repnz
sbb
sub
popf
jae
scas
iret
xchg
xchg
fldl
push
or
sbb
mov
in
cs
pop
scas
xchg
fdiv
jbe
stos
fidivl
cmp
dec
and
xchg
std
mov
rorl
out
sbbb
in
fs
mov
sti
dec
mov
insl
daa
cmp
pusha
movsb
mov
lcall
push
mov
xor
pop
or
sbb
add
jne
add
stc
int3
cmp
scas
pop
add
mov
push
jg
movsl
sbb
pop
jno
daa
sbb
or
push
mov
mov
push
insl
jmp
mov
mov
sub
les
rolb
xor
jns
push
jmp
xorb
imul
push
pop
repz
mov
lret
dec
mov
dec
mov
cmp
mov
inc
je
pop
insb
push
adc
or
fs
pushf
inc
pushf
imul
adc
push
aas
mov
push
mov
dec
fs
xor
dec
addr16
call
je,pt
lcall
loope
pop
fsubs
xor
stos
das
dec
call
jno
xor
push
int
sarl
xchg
xor
movsb
popf
xchg
lcall
cmp
das
jno
fsts
and
inc
xor
push
outsl
aam
lret
scas
imul
andb
sarb
lahf
rorl
mov
scas
adc
sbb
xor
subl
cmc
mov
jnp
hlt
sbb
jecxz
in
sbb
push
dec
mov
lret
xor
and
sbbb
test
add
fistl
mov
jl
push
jecxz
jns
lcall
movsb
aaa
outsb
adc
ret
push
cld
jecxz
test
push
ljmp
mov
and
mov
or
push
rorl
or
sub
bound
mov
jmp
mov
add
mov
xchg
into
je
jns
xor
test
lea
push
sarb
xchg
mov
jg
xor
test
cmp
into
adc
mov
nop
movsl
mov
fisttpll
leave
add
cmp
fidivl
cmpsb
adc
adc
lds
notrack
pusha
sahf
or
cmp
loop
push
imul
loopne
mov
jge
and
mulb
imul
pop
mov
mov
jmp
test
cs
je
arpl
in
and
xor
sbb
pop
mov
js
lahf
cwtl
lcall
xchg
fwait
das
subl
mov
adc
push
xchg
ret
js
ljmp
add
sti
ss
jne
xchg
push
cwtl
xchg
mov
cmpsl
aaa
mov
out
mov
out
mov
aad
xor
insl
dec
mov
and
jae
andl
pop
lahf
mov
cmp
cmp
lret
jnp
out
mov
cmp
and
xor
das
jo
xorb
cmp
notl
mov
data16
xor
mov
cmp
fwait
pop
cmp
fcomip
nop
pushf
and
sub
xor
xchg
xchg
adc
or
pop
insb
dec
push
ss
add
xchg
cmp
xchg
dec
addr16
pop
dec
jbe
mov
push
into
mov
jbe
pop
cmc
or
ja
mov
and
decl
inc
pop
mov
and
popf
cltd
stos
xchg
push
leave
jle
jb
pop
dec
add
cld
hlt
cwtl
inc
push
std
cmpsb
add
pop
loope
and
pop
das
std
dec
ror
push
and
xchg
mov
pop
xchg
add
fidivl
loopne
sub
sahf
ds
test
dec
fabs
stc
and
xchg
push
cmp
insb
outsl
push
push
fsub
push
mov
int3
shll
cmpb
adc
xor
insl
bound
clc
jecxz
cs
push
sub
int3
add
adc
lock
or
mov
cs
mov
repz
sahf
sbb
dec
pop
mov
push
mov
mov
jp
inc
jl
xor
dec
in
fidivrl
int3
cmpsb
and
xchg
das
scas
xor
mov
mov
or
push
mov
lret
or
adc
les
stc
aas
mov
sbb
sub
jnp
out
jne
adc
gs
adcb
or
inc
mov
pop
test
jmp
sub
dec
scas
aaa
xor
adc
lret
pop
cmpsl
xchg
or
xchg
in
call
cmpsl
lret
xorb
andl
push
insl
mov
js
sti
mov
pop
xor
popf
fadds
mov
xor
sub
ret
int
scas
sub
mov
jp
clc
mov
cmpsl
lahf
xchg
sub
inc
mov
lea
add
push
pop
loope
out
insb
movsb
inc
lods
jb
pop
jg
sahf
xchg
cmp
push
mov
fsubl
scas
and
ret
sahf
imul
iret
push
push
cmp
cmp
repz
fiaddl
xor
adcb
fdivrs
jl
clc
inc
cmpsl
jp
lahf
push
test
and
int
jle
fsts
sbb
mov
imul
stc
clc
idivl
std
xchg
leave
adc
add
adc
test
adc
add
mov
decl
jnp
lea
rclb
in
mov
dec
or
sbb
and
adc
leave
jns
pop
nop
pop
bnd
jl
leave
int3
ficoml
mov
cli
popf
mov
fisubl
sar
out
adc
bsf
push
push
movsb
sbb
out
dec
rorl
mov
inc
call
ret
sub
adc
sbb
dec
insb
pop
cmc
cltd
divl
cltd
dec
sub
or
pop
rcrl
sbb
lods
jno
mov
lods
cmc
les
and
test
imul
das
xchg
jecxz
mov
cmp
lret
cltd
adc
mov
pop
xor
jo
mov
push
imulb
fldenv
popa
ret
insl
in
inc
fidivrl
pcmpgtb
subb
fistl
outsb
cmc
mov
sub
xlat
or
sahf
mov
cltd
xchg
negl
sub
dec
les
push
sub
mov
movb
mov
in
sti
cmpsl
ffreep
test
sbb
nop
push
mov
lret
mov
mov
shrb
xor
loop
mov
adc
inc
cltd
fimuls
or
subps
inc
push
mov
xor
je
xchg
or
repz
es
popa
scas
cmpsb
mov
fst
in
or
and
jmp
jle
inc
sbb
cs
repz
mov
mov
or
sub
inc
jmp
movsb
insb
cli
sbb
fwait
xchg
repz
lret
jbe
cmp
pop
pop
mov
and
cld
xchg
ss
pusha
xchg
jmp
clc
mov
pop
xchg
sub
xor
je
cmpsb
xor
push
rep
in
bnd
sahf
in
and
cmp
gs
dec
add
in
adc
ljmp
ret
arpl
mov
mov
lds
jbe
stc
push
sbb
xor
int
lods
adc
push
pop
rorl
cli
mov
sbb
jb
xor
inc
sahf
sarl
adc
push
rol
pop
cmc
faddp
mov
cmp
dec
xor
adcl
dec
shlb
das
mov
xchg
xchg
out
or
xor
inc
je
cmp
shll
dec
adc
popa
hlt
cmpsb
cltd
mov
sub
and
jbe
xchg
fsubrl
jg
test
or
add
les
mov
shll
inc
jne
ljmp
pop
xlat
inc
pop
ljmp
push
scas
sti
lea
pop
fbstp
lods
or
jge
lds
inc
cmp
mov
xchg
aas
cltd
jae
daa
pop
inc
icebp
jg
cmp
mov
arpl
lret
mov
jge
rorl
icebp
es
mov
cli
dec
in
lahf
lahf
add
iret
ljmp
xchg
cli
mov
cmpsl
and
pop
outsb
and
call
cmp
add
dec
jno
js
imul
out
mov
jp
or
push
dec
stos
imul
outsb
in
das
inc
pushf
jae
ljmp
pop
insl
or
fmul
sub
aam
loopne
adcl
int3
add
xor
push
jnp
inc
stos
dec
rol
jo
dec
cmpb
adc
push
movsb
pop
cwtl
fldcw
sahf
jnp
loopne
fcomps
shl
jmp
fs
vmwrite
inc
pushf
es
mov
xchg
pop
inc
outsb
dec
xchg
jne
in
test
cmp
inc
loopnew
or
fdivr
xchg
mov
mov
pop
add
mov
sub
cltd
add
cmp
int3
and
in
lret
js
les
lods
gs
pop
sub
and
push
mov
dec
popf
sub
rorl
jb
jl
xor
divb
arpl
inc
mov
xor
imul
xchg
lock
push
daa
sbb
mov
cmc
mov
mov
xor
cmp
jnp
test
clc
pop
jae
das
jbe
inc
arpl
jmp
das
in
adc
jmp
fnstenv
mov
imul
jb
mov
inc
hlt
jl
out
or
mov
mov
inc
mov
js
jb
roll
sbb
addr16
xor
fucomi
ret
lcall
xchg
mov
push
stos
lock
dec
repz
scas
xor
inc
jg
mov
adc
in
divb
hlt
js
cmp
jno
sbb
cmpsl
and
mov
sub
jecxz
loope
shlb
stos
mov
mov
jo
dec
jecxz
pusha
dec
jbe
fbstp
push
sbb
pop
scas
dec
loopne
sbb
xchg
inc
lahf
inc
stos
cmc
push
je
cmp
sti
cmp
lret
jl,pn
idiv
pushl
fnstsw
or
shrb
out
clc
jnp
out
add
sbb
add
ljmp
call
fstps
cmpsl
test
sub
mov
adc
jecxz
cli
ficompl
ds
pop
in
movsl
shlb
je
je
cwtl
ret
in
outsb
inc
mov
push
ret
sub
lods
ret
and
mov
cmpsb
xchg
jl
push
mov
sbb
jne
lds
arpl
or
dec
test
aaa
in
jge
lock
or
stos
and
jmp
aaa
fdivl
bound
jb
or
jge
clc
aad
test
dec
mov
loopne
inc
cli
push
data16
xor
and
dec
push
xlat
sbb
cmp
xor
push
adc
and
popa
mov
scas
mov
sbb
adc
sub
pop
or
cmp
int3
jae
xchg
mov
inc
cmp
enter
push
xchg
fistpll
push
pop
loop
and
dec
mov
call
sub
arpl
cmpsl
inc
lock
test
xor
sahf
xchg
addr16
push
fwait
outsl
mov
pop
fldt
jecxz
push
insl
es
cwtl
jle
mov
test
cmp
fstl
movb
sahf
mov
xchg
mov
aad
add
adc
ljmp
enter
or
mov
mov
mov
repnz
cwtl
cmp
es
lahf
and
inc
ret
sub
subl
jno
lret
popl
mov
jns
out
xchg
xchg
je
std
mov
jecxz
push
and
jecxz
lahf
clc
sbb
mov
xchg
adc
cli
add
push
lock
mov
jno
stc
loope
cltd
pop
out
push
pop
jmp
jg
adc
adc
cmp
es
into
shrl
adc
in
cltd
rcrl
or
fwait
push
dec
jbe
xchg
stos
cs
pop
mov
fstpl
xor
icebp
popf
mov
inc
inc
int3
mov
jecxz
jg
xchg
push
cli
xchg
add
scas
push
arpl
inc
cmp
scas
movsb
shr
je
flds
adc
push
addr16
xchg
add
jmp
pop
mov
icebp
cmp
loop
ljmp
stos
out
pop
pop
fadds
test
jbe
jns
cmp
push
data16
or
sbb
and
es
nop
sbb
mov
sbb
xor
dec
repz
sub
adc
loope
imul
shll
sbb
jg
out
add
mov
sub
mov
loop
arpl
vpsrlw
cmp
mov
std
xor
out
lahf
stos
cmp
sbb
pop
push
or
mov
movsb
rcll
or
sub
imul
lock
in
push
sahf
gs
divb
repz
repz
mov
xchg
and
mov
xchg
sbbb
sub
call
test
iret
mov
pushf
mov
pop
mov
pop
jmp
mov
ret
jnp
or
in
decb
jmp
push
sub
mov
jns
mov
icebp
popf
cs
or
movsl
arpl
xchg
mov
mov
sub
clc
jb
jbe
jno
sub
lods
sub
pop
sti
jbe
xchg
jnp
mov
sub
int3
movsl
fisubl
push
push
inc
das
in
mov
adc
xchg
dec
sub
adcb
rolb
pop
shlb
jns
pop
call
mov
jge
mov
cmp
dec
sub
shrl
imul
out
lds
js
ljmp
sbb
xchg
ret
in
push
jbe
fdivr
adc
sbb
clc
movsl
stc
or
test
scas
fdiv
sbb
mov
popa
lcall
inc
in
fsts
jo
outsl
cmpl
pop
mov
cli
sarb
movsb
addr16
fstps
cwtl
mov
jle
pop
and
js
inc
dec
mov
insb
andl
mov
lret
rcrb
mov
iret
push
jo
or
aad
fiadds
mov
sbb
rcrl
jbe
xor
dec
dec
ror
mov
xchg
mov
mov
ret
aaa
mov
pop
or
mov
cmp
jge
iret
loope
ret
jg
push
icebp
jbe
sub
mov
outsl
or
inc
loop
xlat
loop
inc
sub
in
repz
pop
inc
dec
arpl
gs
push
lahf
adc
push
sti
jnp
inc
sub
xor
inc
jbe
jae
push
sbb
dec
rorb
lret
lcall
inc
cmp
dec
shlb
arpl
push
xchg
mov
and
sub
cld
jge
cli
out
das
scas
xor
daa
dec
lods
es
dec
push
mov
popa
lcall
ja
pop
mov
mov
push
jno
ja
cmp
repz
push
stos
jmp
cwtl
enter
imulb
in
stos
in
mov
and
mov
inc
aad
push
jmp
sti
notl
mov
pop
adc
je
into
adc
and
aas
cmp
hlt
testb
or
dec
scas
lahf
sub
or
pop
push
mov
hlt
test
idivl
or
mov
rclb
fistps
jle
ja
cmp
jb
inc
add
je
ret
pop
arpl
pop
or
pop
xor
mov
outsb
sbbl
mov
and
bound
repz
rolb
xor
push
add
xchg
xor
mov
xchg
dec
xchg
jg
dec
or
jo
jl
in
mov
arpl
lret
jmp
pop
div
into
xor
mov
xchg
pop
lcall
jl
loop
test
dec
scas
jne
xchg
cli
test
notl
enter
jl
jo
sti
sub
jp
fistl
and
pop
cltd
add
sub
test
not
frstor
xor
pop
popf
mov
adc
lods
dec
out
lods
add
sbb
in
inc
mov
or
nop
mov
into
and
test
jp
rcl
add
insl
repz
cmc
push
cmpsl
decl
daa
cld
adc
cwtl
aas
movsl
imul
xor
xchg
xor
push
fisttpl
add
sbb
jmp
push
cwtl
mov
push
loop
cltd
stos
cmpsb
jns
outsl
mov
adc
rcr
call
add
mov
inc
jmp
hlt
cld
sti
push
jle
loope
icebp
stos
push
mov
shrb
mov
decl
insl
jg
xor
jle
dec
adc
in
pop
aad
popf
cltd
adc
sub
lahf
movsl
xchg
inc
dec
or
sbb
aas
mov
jne
ret
nop
cmp
enter
mov
pop
call
push
sub
in
push
in
jg
std
fwait
cmp
cmp
pop
pusha
cmpb
cmp
mov
mov
inc
jno
add
push
inc
xchg
loopne
add
mov
pusha
mov
jne
jns
inc
push
push
jns
fdivr
movsl
mov
lcall
icebp
sub
push
and
inc
sub
jno
fldcw
out
xor
lret
sub
add
sarl
push
iret
sub
pop
dec
leave
mov
or
andb
lret
pop
adc
mov
fwait
sub
mov
sahf
sub
or
cmp
push
mov
xchg
mov
rolb
push
xchg
add
add
call
jle
pop
cld
xchg
mov
aad
dec
arpl
scas
add
lcall
fistpll
movsl
sub
incl
push
ss
pushf
adc
es
pushf
loop
stos
repz
cmp
mov
cmc
cwtl
jp
or
pop
imul
hlt
call
adc
sbb
iret
sbbl
pushf
push
or
sahf
test
pop
imul
or
adc
inc
inc
sbb
or
xlat
add
outsl
rcrb
iret
lret
sbb
lret
inc
add
fs
je
pop
jge
pushf
loop
das
sbb
jl
or
push
negb
inc
iret
loop
ds
lods
ret
insl
sub
push
sbb
repnz
in
xor
adc
loope
dec
mov
aaa
in
adc
jb
in
sub
sbb
cmp
lods
aam
ret
mov
icebp
call
test
lods
je
jge
int3
mov
add
out
inc
inc
in
jle
and
jnp
jae
sub
popf
roll
or
mov
xchg
mov
aas
inc
push
inc
push
ss
xor
rcl
scas
dec
ss
imul
xchg
mov
cld
cmc
iret
and
popf
lret
nop
jle
in
cld
cmp
inc
lret
jno
setb
jo
test
mov
or
cmp
cs
lret
or
dec
dec
jp
rolb
cmpsl
loop
popa
lret
sbb
sbb
push
jge
in
pop
xor
adc
movsb
rcll
sbb
lods
popa
inc
push
pop
js
add
data16
popa
insl
xor
jo
xchg
or
jo
popa
jne
jno
xorb
cwtl
popa
cmp
fldenv
cltd
sub
mov
mov
push
por
cmpsl
jo
sub
add
or
into
mov
imul
ja
and
jb
push
ja
push
mov
jmp
sbb
jecxz
sub
xchg
dec
jp
unpckhps
pop
xor
pop
out
imul
mov
jbe
int
xor
jp
out
pop
les
mov
sbb
inc
xor
cmpsl
xor
jmp
cwtl
or
push
lret
test
shl
jnp
xchg
xchg
or
fwait
push
cmp
iret
xor
lcall
test
cmp
fsubs
testl
cld
cmp
mov
shll
add
mov
pop
jmp
into
rorl
inc
inc
ss
daa
add
xor
xor
xlat
cmpsb
mov
shrb
fstps
inc
sti
sbb
sar
pop
fdivrs
jns
movsl
int3
or
inc
loope
aaa
inc
and
lea
imul
jecxz
inc
aam
mov
jb
cld
shrb
mov
jl
or
jge
das
xor
hlt
pop
xchg
mov
repz
cltd
jns
mov
adc
jnp
pop
rcrb
xor
inc
push
add
js
lea
aad
andb
sti
out
insb
fmull
push
arpl
and
mov
adc
push
mov
mov
jbe
in
push
clc
mov
mov
jae
pop
mov
cmp
data16
cmc
aam
adc
sub
scas
inc
test
fildll
sarl
mov
add
inc
je
into
xchg
add
loop
int3
jp
or
lret
mov
loopne
imul
pusha
xchg
popf
jo
fwait
scas
or
jae
std
sti
push
xor
lret
fs
es
fs
fistpl
test
clc
pop
and
gs
adc
sub
mov
subl
adc
das
popa
arpl
push
jmp
repz
pop
std
inc
jbe
mov
mov
or
mov
stc
adc
orb
mov
ja
shr
into
jle
xchg
mov
mov
push
adc
out
insb
pop
adc
cmp
in
sbb
sbb
sub
ljmp
inc
dec
mov
fwait
and
xor
inc
shrb
repnz
inc
cs
inc
iretw
sbb
pop
xor
sub
mov
iret
mov
negl
lods
xor
xor
mov
aaa
or
loope
jge
mov
outsl
add
shlb
aas
cmpsl
push
out
or
ret
lret
repnz
adc
out
xlat
and
mov
cli
outsb
jp
jp
mov
ret
cltd
xchg
or
mov
imul
fnsave
inc
loopne
push
cmp
dec
push
add
pop
jnp
mul
sahf
jecxz
shlb
ljmp
jge
aas
add
xchg
xor
sbb
popa
adc
sti
in
adc
adc
dec
and
jmp
test
in
fadds
xchg
pop
lea
pop
mov
movsb
mov
add
cmc
push
sahf
mov
mov
fldt
loop
dec
cmp
add
insl
fisubl
testb
cmp
ljmp
cli
aas
xchg
mov
sub
pop
sbb
lea
xchg
mov
inc
sub
adc
outsb
jecxz
add
xor
cmp
lcall
call
int
push
adc
xor
nop
shrb
and
ljmp
call
imul
dec
mov
pop
test
out
or
lret
sub
xor
and
mov
push
lahf
inc
shrl
scas
push
sbb
popa
cmp
jbe
daa
cltd
mov
insb
sbb
in
gs
cs
xchg
jge
mov
xor
and
int
mov
cmc
inc
jecxz
lret
lods
jbe
arpl
inc
leave
mov
into
subb
or
fxch
jmp
jle
lock
mov
xchg
mov
jb
dec
jae
cmp
fidivl
and
jns
mov
push
jle
sbb
mov
xchg
in
push
or
fs
shrb
add
repnz
enter
sbb
ds
fistpll
lret
ret
dec
xor
iret
dec
ljmp
scas
sbb
retw
shr
lret
pop
jg
scas
xchg
push
inc
mov
inc
scas
sub
jbe
das
and
push
lods
stc
cltd
outsl
test
jecxz
les
out
jno
and
pop
xchg
es
xor
jp
push
nop
jecxz
push
cltd
jo
mov
aam
inc
mov
repz
std
push
mov
dec
dec
mov
jecxz
insb
push
inc
or
cmp
push
cwtl
clc
ljmp
push
repz
pop
popf
mov
cmp
jae
hlt
mov
lret
dec
movsb
lds
ja
mov
fisubl
xchg
testl
fimull
inc
or
popa
rclb
sub
loopne
dec
clc
lods
ret
cmpsb
ret
stos
sub
xor
mov
push
and
jle
fiadds
dec
jle
dec
ljmp
outsb
inc
mov
fcomps
jno
stos
mov
pop
push
fnop
in
xchg
add
and
mov
lods
in
add
scas
sbb
fwait
outsl
in
popf
push
push
daa
xchg
das
fstpt
pop
push
mov
xor
sbb
cmpb
pop
sub
lods
sub
xchg
fadds
aas
cmp
sub
mov
push
cmp
jle
dec
mov
sbb
movaps
push
ja
mov
xchg
sub
and
loop
fisubrl
fldl
mov
push
out
sbb
add
mov
pop
bound
test
xchg
inc
imul
add
xchg
aaa
imul
xchg
cmp
int3
cmove
int3
jge
mov
cmp
xchg
mov
arpl
lea
or
sub
jb
int3
jle
adc
andl
adc
jne
push
insl
jecxz
shl
xchg
xlat
cmp
add
outsl
jbe
cld
add
mov
inc
cmp
ja
push
stos
shr
nop
sbb
cmc
repnz
lret
lret
or
pop
sbb
insl
mov
es
incl
push
sarl
mov
pop
nop
inc
push
stos
les
enter
aad
xor
jb
xlat
out
xlat
xchg
dec
add
xor
jmp
or
jp
pop
sub
jbe
push
into
and
inc
jno
mov
outsb
aad
rolb
inc
int
fcmovbe
xor
mov
pop
dec
outsl
icebp
pop
xchg
cld
es
aad
fs
mov
bound
cmp
into
mov
cld
jmp
hlt
xor
test
cmp
into
adc
aaa
fldt
jl
push
adc
addl
pusha
ret
lahf
fistps
pop
pop
inc
in
fs
pushf
decb
xchg
ret
test
loop
fcomp
aam
into
and
jge
mov
mov
dec
or
adc
imul
outsl
pop
loopne
clc
push
jecxz
testl
pop
mov
cmp
loope
sub
outsl
xor
jb
xor
inc
mov
cmp
stos
aas
pop
or
push
repnz
push
and
lret
aam
fiaddl
outsb
pop
ds
adc
scas
pop
lcall
ss
push
call
xchg
scas
jo
mov
loopne
xchg
sbb
xchg
fdivrs
outsl
gs
add
xor
leave
pop
push
sahf
inc
sbb
inc
jae
in
cmpsb
xchg
push
cli
or
add
fisttpl
xor
shrl
sub
popa
push
in
ficomps
mov
mov
faddl
out
test
sbb
jo
mov
fwait
add
sbb
js
sahf
outsb
rcll
imul
xchg
arpl
xchg
lds
lock
jge
inc
jae
faddl
fldt
mov
inc
ljmp
jns
push
fmuls
xor
fsub
loopne
pop
ud0
clc
cld
loopne
inc
pop
mov
dec
aam
xor
bswap
xchg
cli
push
outsl
mov
ljmp
test
ret
mov
cs
cltd
push
fstpl
mov
aam
adc
loope
pop
out
cmp
faddl
cmp
adc
cltd
xchg
faddl
add
and
or
pop
push
les
push
test
in
movb
add
repz
fldt
cmp
xchg
fs
enter
rol
mov
sbb
nop
cmp
stos
sti
cmp
enter
pop
jnp
fwait
outsl
push
pushf
push
movsb
lcall
pop
pop
movl
cmpsl
into
mov
movsl
test
shlb
mov
pusha
leave
cmp
mov
adc
movl
xchg
or
xchg
lret
xchg
push
ret
pop
mov
jmp
lahf
jne
in
sbb
or
xor
push
cmp
dec
dec
in
ss
dec
xor
adc
scas
jge
inc
imull
ja
hlt
push
sti
sti
add
or
fidivrl
mov
dec
inc
pop
das
sti
out
mov
xchg
pop
pop
lret
sbb
int
lods
xchg
out
dec
fimuls
andb
pop
sbb
ljmp
or
push
lods
ds
push
jno
xchg
pop
out
hlt
adc
mov
jno
addr16
xor
sub
xchg
jle
in
jg
sub
or
aas
xor
into
in
insl
adc
jl
std
cmp
or
fldt
cmpsl
pushf
ljmp
inc
dec
loope,pn
test
pop
stos
ljmp
jecxz
scas
pop
fidivs
roll
cmp
testl
mov
fwait
std
dec
dec
jmp
sbb
mov
jmp
jecxz
add
lahf
shrw
fs
and
inc
add
xor
popf
push
std
test
mov
xor
mov
or
ret
mov
into
xchg
dec
mov
pushf
xchg
add
leave
ss
je
cmp
popa
pushf
mov
scas
adc
push
lea
sbb
cmp
sub
cmp
pop
push
stos
mov
fnstcw
sub
lcall
jmp
aaa
enter
push
or
xor
mov
jo
sbb
add
int3
dec
mov
add
lcall
je
fisubrs
adc
inc
jo
pop
je
sbb
cmp
sub
scas
icebp
push
ja
jecxz
push
ret
xor
cmp
in
cmp
subb
in
jle
jno
imul
rolb
sarb
mov
and
lret
mov
int
lds
jae
push
xchg
aas
stos
aad
les
mov
push
cmp
repz
pop
jg
or
inc
jecxz
jne
cmp
xchg
mov
insl
lret
gs
mov
ljmp
pop
cmpsl
mov
adc
popa
push
jmp
inc
loope
sub
push
iret
or
adc
ljmp
sub
stos
or
xchg
and
and
inc
inc
in
repz
in
hlt
push
sarb
mov
or
scas
outsl
adc
mov
xor
push
pop
ret
pusha
jae
out
shll
or
sbb
mov
push
mov
out
sub
icebp
bound
xor
cmp
mov
xor
nop
jl
test
pop
icebp
jmp
add
lahf
dec
ja
repz
mov
cmp
pop
out
xchg
dec
jo
in
or
rcll
subb
gs
push
ficoml
and
loopne
popa
shrb
jns
push
inc
push
mov
push
int
sub
jo
mov
or
lret
loope
push
inc
mov
js
and
cmp
divl
sbb
movsb
push
cmp
std
adc
leave
test
call
js
mov
lret
sbb
adc
rsqrtps
les
mov
ja
ret
int3
mov
and
adc
sbb
mov
adc
fs
loop
inc
mov
xor
xor
jle
or
jg
adc
mov
bound
pop
push
inc
testb
push
das
push
jp
test
sbb
cmp
pop
push
into
loope
sbb
dec
sub
and
xor
and
cmp
lea
mov
shrb
hlt
mov
xchg
daa
jg
imul
shlb
mov
mov
fwait
or
mov
idivl
cmpsb
mov
pop
les
gs
mov
mov
movsl
out
ljmp
jge
loope
cmpsl
into
push
and
mov
cmp
fldenv
push
add
popl
icebp
cmp
movsb
mov
inc
repz
sti
and
adc
insb
aas
pop
pop
and
in
mov
inc
iret
int
inc
lds
andb
scas
sbb
push
sub
pop
jecxz
out
stos
gs
mov
data16
test
pop
xchg
sahf
xchg
daa
daa
arpl
or
jo
in
les
sahf
clc
insb
out
adc
outsb
push
aad
in
sub
inc
xchg
insb
cmp
sub
test
jbe
rolb
xor
pop
insb
jns
and
ret
addr16
pop
scas
repz
jmp
pop
imul
jne
pop
jecxz
pop
adc
hlt
xchg
mov
stc
jb
test
roll
jno
int3
and
xchg
std
jae
sarl
push
fistps
mov
xor
je
lods
sbb
rcl
icebp
adc
sbb
cmpsl
ret
cmp
cltd
jns
mov
leave
cwtl
mov
cwtl
aad
cmpsl
xchg
push
mov
test
pop
fs
pop
jnp
stc
cmpsb
into
jnp
sahf
in
ret
dec
xchg
sub
lods
adc
loope
scas
dec
mov
sub
or
adc
dec
dec
xchg
test
stc
sahf
xchg
icebp
scas
loope
loop
xlat
sub
pop
inc
in
xchg
push
inc
les
mov
mov
mov
jg
add
jb
xchg
xchg
jecxz
das
int
aad
ljmp
femms
insl
dec
insl
in
add
add
inc
sub
push
loop
out
pop
inc
pop
mov
mov
sbb
jbe
js
mov
insb
roll
pop
les
jno
push
aaa
cltd
xor
xor
xchg
in
pusha
pop
popa
rcrl
shrl
lock
and
movsb
and
loope
cmpsb
sub
in
mov
pop
and
push
sbb
jmp
incl
mov
sub
ljmp
fadd
sahf
movmskps
outsl
cli
pop
cmp
mov
es
or
fsub
iret
push
mov
jnp
test
aas
iret
mov
cmpsl
add
nop
fs
jae
xor
mov
mov
imul
je
mov
sub
xor
xchg
pop
dec
fisubrl
cmp
test
add
jg
jmp
repz
push
inc
sbb
mov
scas
mov
insl
jb
pop
xchg
cmp
pop
fisubl
bound
push
fcoms
nop
push
lret
mov
gs
push
cmc
jno
lret
mov
or
js
mov
flds
and
cmc
jne
mov
pop
adc
mov
insb
int
incl
scas
loope
xor
xor
xchg
enter
jge
aad
cli
mov
cmpsb
fisubrl
push
shll
shr
fwait
lods
clc
mov
orb
sub
loopne
loop
inc
inc
xchg
in
and
dec
data16
outsl
dec
xor
jbe
sbb
loope
insl
stos
es
pop
dec
push
cmpsb
roll
movsl
orb
clc
pusha
imul
fistl
jne
add
test
fs
je
cmpsl
ja
push
fwait
das
sbbl
xor
inc
jle
bsf
fstpl
mov
fcoml
pop
aaa
mov
cli
sbb
and
and
add
popa
dec
faddl
bnd
or
xchg
aad
out
xchg
mov
test
adc
popl
pop
inc
fidivrs
add
int3
add
outsl
ret
ret
push
hlt
sub
dec
insb
out
xor
bound
fsubl
xchg
pop
fsubl
loopne
mov
test
sbb
sbbl
jne
mov
shrl
or
iret
dec
push
sbb
push
sahf
sub
mov
mov
inc
lret
js
and
xchg
aaa
insl
add
add
pop
lret
sbb
es
xchg
mov
pop
out
mov
lock
pusha
dec
sub
or
xchg
fmulp
ljmp
inc
xor
push
push
cltd
scas
pop
xlat
inc
inc
jo
and
hlt
cld
int3
mov
loope
sbb
mov
shll
sub
jmp
cmp
test
cmp
iret
test
movsb
mov
mov
hlt
jecxz
push
jno
dec
dec
or
mov
fidivrl
js
lods
lret
add
andb
popa
mov
push
jg
xchg
popa
jmp
xchg
iret
test
in
outsb
xlat
pop
dec
jbe
insl
mov
fimull
pop
shrl
mov
dec
pop
mov
mov
push
subl
push
into
add
and
fstpt
xchg
mov
dec
mov
sbb
adcl
hlt
push
xlat
int3
roll
scas
pushf
mov
addr16
js
or
insl
or
std
mov
out
mov
adc
mov
cld
insb
cmp
insb
inc
loopne
push
mov
cmc
cli
sub
mov
adc
dec
popa
or
mov
idivl
cmp
ret
push
outsb
insb
scas
push
cwtl
subl
fists
stos
cmp
cltd
test
cmpsb
mov
or
call
int3
movsb
sahf
xchg
stos
out
mov
or
in
loopne
movsl
out
dec
sub
out
mov
xchg
movsb
pop
adc
gs
test
loop
jmp
scas
lcall
push
lock
jae
lret
mov
test
addr16
js
movsl
aad
mov
push
pop
idivb
rorl
arpl
pushf
aam
nop
xor
insl
or
and
lahf
mov
push
lret
mov
test
mov
pop
pop
mov
mov
mov
loopne
fadd
incl
inc
inc
jno
dec
push
nop
push
mov
repz
dec
scas
shl
push
sbb
imul
loopne
mov
fdivr
mov
mov
cmp
adc
sti
sahf
popl
pop
or
lret
dec
lods
fldt
sub
sub
mov
lcall
mov
pop
xor
in
shll
inc
mov
jb
cmp
fldt
sbb
call
xchg
js
or
fsubl
pop
decl
outsl
sbb
dec
adc
jb
das
movl
push
sti
mov
cmp
into
push
mov
pushf
daa
pop
mov
pop
mov
inc
adc
inc
xchg
sbb
cmp
xorb
mov
xor
cli
xor
adc
shrl
cmpsb
mov
inc
rcrb
pusha
out
add
les
test
xchg
fwait
adc
add
xchg
sub
adc
orb
scas
shll
push
adc
fcoml
es
ss
bound
mov
test
xrelease
hlt
inc
mov
test
popa
jbe
or
icebp
dec
lds
jno
xchg
jge
cmc
sbb
test
cmp
icebp
popa
pushf
pop
pop
or
stos
lds
sar
push
pop
and
xchg
cltd
cmp
lds
or
rcrl
arpl
dec
mov
sub
dec
hlt
mov
gs
insb
clc
push
movsb
iret
lods
push
out
test
enter
mov
out
shll
jg
cwtl
fidivrs
mov
das
les
xchg
or
pop
pop
sub
inc
mov
les
sbb
cmp
nop
mov
xchg
sub
movsl
je
jmp
gs
fidivl
jbe
filds
push
ret
iret
lock
cli
xchg
jbe
dec
xor
lahf
mov
xor
in
mov
xchg
dec
lret
jae
movb
aas
std
das
or
fiadds
cmp
repz
cli
or
fcom
negb
pop
xchg
aas
pop
aas
xchg
aam
iret
in
sub
in
xchg
push
or
sbb
mov
sarb
stos
push
aad
sbb
pop
push
add
cmp
divb
pusha
cwtl
arpl
pop
sub
or
xor
popf
repnz
fbstp
sub
je
add
xor
adc
idivb
les
mov
fisttpll
out
cmc
movsl
add
push
and
arpl
ret
es
push
xor
int
xchg
filds
mov
scas
in
xor
fwait
out
lds
loop
mov
leave
jbe
pop
aad
sub
jecxz
nop
inc
aam
sub
ret
add
hlt
add
cmpsl
pop
cwtl
rol
int3
sub
test
clc
ficompl
add
xchg
add
sbb
mov
dec
push
fucom
dec
xorl
xchg
or
repz
shl
aam
push
enter
inc
and
ret
or
scas
dec
sub
adc
xchg
fstpt
push
data16
inc
mov
push
push
push
jbe
cltd
mov
sub
xor
push
adc
scas
inc
push
pushf
push
filds
arpl
or
adc
mov
shlb
jge
insl
dec
mov
stos
adc
ljmp
lods
mov
pop
scas
mov
cmpsl
jb
add
inc
jns
jns
mov
push
loopne
cmpxchg
add
push
mov
mov
mov
push
subl
cmp
dec
out
enter
xor
jge
pop
insb
cmp
dec
xchg
mov
xlat
mov
add
sbb
fwait
dec
xchg
and
test
aad
mov
dec
sbb
in
cmc
and
popa
lea
and
and
aas
out
pop
cmp
dec
xor
aas
push
bound
mov
aam
push
pop
test
add
stos
and
cld
pop
push
jae
and
addb
xchg
std
sub
push
xchg
dec
mov
mov
jae
mov
mov
pop
orb
and
js
mov
mov
sbb
rorl
mov
mov
pop
ss
pop
mov
popa
stos
push
popa
popf
enter
fcomi
push
sub
adc
mov
arpl
jb
fdivrl
dec
sbb
ss
inc
addl
dec
mov
push
inc
dec
add
mov
add
adc
cmp
call
test
jae
lods
mov
loop
addr16
imull
mov
fwait
xor
xchg
push
adc
imul
insl
jecxz
jns,pt
scas
cmp
jnp
insl
mov
rolb
sbb
loope
xor
or
adc
mov
cli
test
adc
xchg
hlt
jnp
outsl
pop
push
sub
mov
dec
test
or
cs
bound
sub
mov
pushf
push
je
sub
or
movsl
out
decl
js
movsb
sub
mov
jae
jns
out
xchg
cli
lods
leave
xchg
sarl
sub
jb
mov
fwait
ljmp
mov
jmp
std
adcb
std
dec
pop
xchg
add
stc
adc
sub
jne
jnp
pop
jmp
in
loopne
shlb
insl
sub
sbb
rcr
jmp
sub
popa
mov
and
jne
imul
adcb
xchg
repz
stos
scas
add
push
add
dec
jns
jb
fs
jbe
test
dec
or
lods
sbb
into
dec
pop
lcall
push
pop
fstpl
ja
xchg
dec
mov
push
int3
ljmp
test
test
fidivrs
test
ret
ja
notb
inc
jb
fsubrp
jecxz
or
mov
lcall
and
out
fists
pop
test
outsl
nop
imul
jo
dec
outsl
mov
das
enter
adc
std
lahf
cwtl
adc
into
dec
cs
dec
jbe
fidivrl
mov
push
cli
data16
jecxz
pop
adc
pusha
test
pushf
aad
mov
out
fwait
repz
dec
xor
adc
adc
push
cmc
mov
xchg
inc
rorl
pop
shl
xchg
xor
insb
sar
dec
and
xor
out
popa
push
adc
daa
adcl
add
test
mov
out
and
cmp
push
lret
or
mov
pop
lcall
xchg
sbb
sbbb
dec
cmc
scas
daa
bound
mov
bound
cmp
and
lret
testl
sbb
sbb
sub
scas
rorl
popa
int
pushf
mov
rol
and
push
inc
gs
sub
dec
mov
aad
jno
sbb
icebp
push
cwtl
lods
test
shlb
xor
scas
outsl
xor
aad
pushf
or
push
repz
push
ror
add
movsl
jno
add
cmp
repz
outsl
arpl
es
rcrl
imulb
pusha
mov
icebp
lods
ss
push
faddl
mov
or
mov
out
sarb
std
outsl
popa
arpl
pushf
inc
jb
xor
adc
in
sahf
and
or
fs
repz
and
pop
push
sbb
and
or
jecxz
mov
fsqrt
test
pop
dec
cmpsl
sbb
rclb
sub
fidivrs
jmp
dec
pop
adc
repz
jg
adc
sbbl
jae
mov
xchg
pop
mov
loopne
std
rol
mov
sbb
icebp
mov
mov
cwtl
push
pop
fildll
icebp
or
mov
sarl
fnsave
dec
pop
ljmp
cltd
std
testl
out
mov
sbb
jle
cmp
xlat
testl
imul
outsb
xchg
cmp
daa
fimull
mov
xor
movsb
cmpsl
adc
shr
icebp
jnp
cmc
fistl
sub
test
inc
mov
pop
aaa
adc
loopne
jg
leave
inc
cmp
lds
add
pop
cmp
data16
hlt
pop
movsb
pop
jne
xchg
outsl
fabs
pushf
adc
sbb
and
mov
add
adc
jnp
pushaw
jmp
xchg
push
adc
mov
outsb
lds
adc
inc
xchg
xchg
imul
mov
ds
xor
xchg
jmp
imul
inc
sbb
mov
fdivl
dec
inc
and
cwtl
cmp
aam
mov
mov
mov
adc
lods
or
ss
clc
ja
mov
and
test
or
and
add
jo
xor
adc
mov
ds
pop
xor
lcall
cmp
scas
cmp
bound
scas
push
movsl
out
das
mov
lret
push
lret
mov
incl
mov
imul
in
loopne
cltd
xlat
pop
das
ret
fildl
icebp
daa
xchg
js
in
stos
inc
in
mov
pop
sub
push
adc
adc
dec
xor
dec
adc
adc
aaa
mov
out
adc
mov
or
jno
mov
in
cmpsb
sub
sbb
xchg
sti
jns
jnp
sub
pusha
adc
cmp
and
push
ds
xor
mov
test
je
vhaddps
repz
sbb
stos
or
pop
xchg
xor
in
ds
mov
fst
imul
xchg
push
loop
imul
test
fildll
adc
cwtl
push
out
mov
dec
int
divb
inc
push
inc
jae
andl
call
fbstp
shl
add
out
xor
roll
push
popa
sahf
aas
jb
mov
es
mov
and
fadds
jmp
dec
les
and
punpcklbw
push
or
in
fmull
ret
xchg
mov
xor
outsl
mov
out
dec
data16
push
in
cwtl
movsb
call
xor
cmp
or
push
shlb
sbb
orb
cmp
pop
in
testl
addb
mov
outsl
fcompl
ja
mov
jmp
push
push
sahf
xchg
and
and
aaa
mov
dec
hlt
les
mov
and
and
repnz
jmp
inc
xchg
adc
and
lods
sbb
pop
scas
sbb
jno
add
pop
sahf
inc
stos
xchg
cld
movsl
push
sub
xchg
rorl
xchg
cmp
enter
sbb
cwtl
cmp
push
mov
mov
fnstenv
mov
insb
lods
xor
fiadds
xchg
cld
pushf
imulb
xchg
fdiv
cmpsl
xlat
mov
ss
mov
bnd
pop
mull
mov
jb
dec
jmp
insb
pop
int3
insl
flds
jge
add
mov
mov
std
ja
pushl
push
xor
push
inc
push
sub
in
dec
and
and
sarl
push
popf
outsl
enter
or
in
inc
shll
aam
sbb
mov
pop
mov
push
mov
test
popa
or
leave
sub
notrack
stos
cmpsb
jno
add
in
nop
mov
pushf
cmpsl
testb
popa
dec
mov
fstps
pop
scas
pushf
rol
shrl
into
clc
fs
add
cli
jecxz
fwait
or
jle,pn
stc
mov
test
and
sub
les
inc
fs
inc
cmp
enter
lock
xor
push
or
jg
mov
ret
jp
mov
dec
jnp
movsl
nop
fwait
add
cmpsb
sbb
cs
lods
jbe
clc
lahf
sahf
filds
sbb
mov
xchg
std
cmp
mov
cmp
cli
insb
fidivrs
mov
es
insb
inc
push
sub
lods
loop
mov
ret
lahf
fmul
sbb
add
fsubrs
push
cmp
sub
and
data16
sti
jae
repz
fcomi
or
inc
pop
out
jle
aas
pop
out
decl
jg
push
ret
sti
or
adc
xchg
gs
in
lret
mov
inc
pop
or
cmp
cmc
or
stc
xlat
inc
xor
mov
mov
jmp
mov
test
addb
daa
out
jbe
mov
fidivs
out
fwait
stos
push
inc
and
cmpb
pop
sub
test
out
in
dec
xchg
cltd
inc
cmp
pop
lahf
dec
sahf
sbb
shlb
sbb
lret
loopne
pop
cltd
jnp
inc
sub
sti
xor
pop
xor
loop
lods
ljmp
fwait
icebp
test
dec
inc
xchg
cwtl
mov
mov
dec
fwait
xor
fiaddl
shrb
jb
mov
xchg
out
out
and
sti
jbe
pop
fsubl
std
loope
rcrl
bound
lods
jle
js
adc
push
adc
int
js
cmp
mov
push
lds
pop
push
fsubs
arpl
or
adc
loopne
lods
call
jl
insb
retw
rolb
push
push
dec
or
cmp
cmp
pop
jmp
pop
loope
dec
push
daa
int3
ja
cmp
dec
sbb
arpl
inc
or
call
sahf
or
inc
sub
sbb
ljmp
cmp
jmp
shrb
add
push
adc
fcoml
ljmp
mov
ljmp
sbb
ret
push
xchg
add
sbb
popf
mov
and
sub
lahf
hlt
cs
push
jnp
lock
pop
inc
xor
add
pop
hlt
dec
lock
sbb
insl
add
pushf
or
jmp
in
imul
pusha
or
and
mov
rcr
mov
push
neg
sbb
ljmp
je
jno
push
push
or
cwtl
push
mov
loop
je
fnstsw
aas
jp
pop
sub
cltd
dec
pop
rcrb
xlat
aaa
scas
cmpb
mov
mov
nop
lods
aaa
adc
add
mov
ds
or
out
jg
in
dec
rorb
xor
mov
dec
cmp
stos
int
jne
mov
div
test
jle
mul
xchg
inc
in
mov
std
pop
lds
sti
push
test
and
xor
or
add
leave
lea
daa
xor
xchg
push
in
mov
jb
cmp
std
data16
cmp
add
xor
mov
lods
call
ret
fdivrs
aas
and
leave
sar
sbb
cmpsb
adc
push
in
scas
mov
out
jp
pop
dec
pop
push
mov
cmp
sbb
ds
push
sub
mov
aam
lret
in
outsb
int
sub
jmp
fdivrs
idivb
andl
rol
sub
jne
mov
cmc
test
jnp
mov
xchg
pop
stos
mov
ficoms
mov
out
lahf
xor
dec
sub
hlt
or
jmp
frstor
movb
imul
lods
cli
addl
roll
fcompl
enter
mov
dec
subb
outsl
mov
mov
push
jo
movsb
not
insb
xor
mov
mov
iret
mov
loop
aad
fiadds
clc
rolb
test
aad
sbbl
inc
insb
push
aaa
jo
dec
mov
dec
mov
ret
or
js
std
in
mov
fidivrl
je
imul
push
fdivrl
jb
clts
sarl
imul
pop
add
lock
mov
mov
and
popf
pop
xchg
cmp
mov
movsb
das
loopne
jae
mov
xchg
dec
adc
arpl
jne
xlat
jle
lods
mov
lods
and
jmp
cmpb
outsl
icebp
cmpsb
ja
ficoml
dec
loope
cmp
lret
sbb
mov
aaa
testb
mov
mov
cmc
push
lods
and
adc
xchg
jbe
popf
hlt
in
out
sar
add
cmpsb
adc
dec
xchg
dec
xchg
push
mov
add
stos
sbb
xchg
repz
lods
jp
add
add
cmpsl
stc
adc
sub
pop
mov
and
sub
mov
sbb
push
lods
imull
sbb
lcall
loopne
ret
xor
pop
fs
xchg
xchg
push
and
xchg
pop
in
fnsave
jmp
push
xchg
adc
inc
stos
xor
enter
outsb
xor
and
sti
mov
lea
add
subb
ficoms
aad
sti
je
jno
jb
data16
lret
stos
sbb
movsl
orb
add
jle
repnz
nop
dec
fistpll
movsl
stos
sbb
jp
loope
mov
xor
jns
xchg
adc
insl
dec
repz
lock
cwtl
imul
mov
inc
xor
inc
daa
jo
inc
and
mov
loope
daa
xchg
pop
rorl
adcb
std
filds
dec
inc
stos
jno
dec
ljmp
into
xchg
andl
push
je
sub
jl
mov
sar
popa
pop
shrb
cmp
mov
jecxz
sbb
push
mov
stos
mov
pop
mov
cli
out
shr
mov
ja
cld
je
push
je
outsb
mov
icebp
xchg
jl
fidivl
xchg
lret
into
cmpsl
dec
pop
adc
sub
dec
repz
cwtl
nop
testb
repnz
sbb
jge
jmp
gs
add
and
es
adc
shl
cli
cmc
iret
addr16
test
push
stos
jo
fildll
ret
push
jo
mov
push
call
inc
jge
cmp
popa
adc
imulb
dec
popf
fwait
pop
xchg
das
popa
cmp
shll
or
push
ljmp
ret
js
pop
into
scas
xlat
rcll
sbb
test
sub
mov
pop
push
push
nop
cmp
test
adc
out
or
ret
push
xor
xchg
fnstcw
sub
cmp
push
add
xor
xchg
xchg
jmp
xlat
push
push
pushf
mov
mov
cmpsb
cmp
std
mov
inc
rcrb
iret
sbb
daa
or
add
inc
stos
jae
pop
cmp
lds
cltd
mov
or
testl
or
fcmove
push
push
adc
push
pop
pop
or
cmc
dec
in
or
clc
dec
jge
mov
stos
or
imul
pop
push
in
scas
arpl
jp
shlb
mov
in
push
inc
pusha
mov
test
xor
incb
inc
mov
add
push
xchg
movsb
imul
jbe
cld
sub
into
inc
in
mov
nop
adc
popa
testb
mov
stos
pop
cmp
push
sub
push
ja
es
cmpsb
enter
les
das
dec
add
jne
rolb
xor
aam
subb
daa
push
adc
test
sub
pop
clc
mov
insl
jb
stos
not
adc
push
adc
call
std
pop
mov
icebp
jl
push
sahf
adc
clc
sbb
mov
addr16
push
shrb
sub
movsl
or
inc
jecxz
xchg
mov
loopne
je
xchg
xchg
mov
les
pop
cmp
aad
push
lcall
and
addb
cltd
inc
pop
pop
lods
repnz
repz
cmp
jb
cmpsb
call
adc
aad
in
pop
push
push
mov
fsubl
mov
and
cmp
push
dec
and
sarb
inc
inc
loope
pusha
xchg
sbb
dec
mov
mov
lods
sarl
xchg
add
push
sbb
sbb
jp
pop
popa
les
mov
cmp
stc
aaa
mov
popa
cmp
mov
daa
push
sub
or
fucom
adc
mov
jge
mov
sub
aaa
jg
inc
mov
and
pop
hlt
shr
jle
cmp
icebp
iret
pop
fmull
push
aas
out
rcrl
cmpsl
stc
mov
or
and
inc
and
int3
xorl
push
mov
mov
sub
mull
pop
out
in
add
movsl
fisubs
pop
pop
jmp
push
sub
mov
xchg
enter
mov
xchg
mov
mov
sbb
into
enter
jb
xchg
or
push
adc
div
xchg
add
pop
jb
push
imul
movsl
sahf
mov
jge
repnz
out
push
gs
xor
adc
and
rcr
push
adc
lds
push
pop
addr16
mov
adc
pop
sbb
fstps
inc
sbb
lods
adc
mov
jl
int
orl
or
or
adc
dec
xchg
mov
shlb
sub
pop
sub
loope
sahf
jmp
dec
shrb
or
es
cmpsb
push
outsb
push
sub
mov
adc
popa
mov
push
cltd
not
je
dec
dec
mov
mov
in
push
adc
cs
sbb
adc
xor
cltd
fidivs
pop
adc
mov
cmp
pop
test
lock
stc
dec
lea
das
or
dec
sti
cmp
inc
mov
xor
add
cmp
cli
jnp
faddl
mov
mov
fimuls
mov
push
push
add
push
mov
push
add
mov
or
scas
sub
jne
pop
adc
pushl
push
rol
adcb
fsubl
mov
outsb
int
stc
pop
repz
dec
mov
fs
out
adc
out
cmp
mov
sbbb
mov
lahf
mov
orl
int3
mov
sbb
dec
gs
pusha
add
stos
lea
call
jl
pop
cli
nop
cmp
aaa
xor
push
mov
dec
mov
pop
das
pop
lret
adc
loope
leave
daa
inc
cs
movsb
adc
scas
push
xor
cltd
jbe
sar
pop
mov
repz
nop
roll
pop
loope
push
dec
flds
push
cmpsl
jge
push
xchg
test
and
stos
xor
or
sbb
xor
testb
adc
in
inc
loop
adc
mov
xchg
sti
test
mov
xchg
dec
ffreep
push
rolb
pop
push
xor
cld
imul
in
xchg
xor
push
jg
xor
push
fwait
xor
jmp
dec
mov
icebp
scas
inc
pop
adc
mov
mov
and
fisubl
sar
add
nop
out
enter
imul
ficomps
mov
or
cwtl
ja
jno
loope
std
mov
rclb
push
sub
and
jmp
test
scas
add
add
loopne
lods
mov
pop
push
mov
mov
xor
in
xchg
fistl
push
cmp
loope
addl
and
cmpsb
jmp
clc
xor
clc
add
xchg
imull
repnz
push
xchg
hlt
mov
icebp
jno
fsub
mov
pop
gs
mov
rcl
inc
add
sbb
push
or
xchg
data16
loopne
inc
stos
jnp
nop
mov
xlat
pop
mov
pop
shlb
add
dec
loop
lock
cmpsl
add
pusha
in
push
dec
mov
scas
cwtl
sbb
fsubs
xchg
scas
out
mov
test
fidivs
pop
adc
loopne
jb
paddusw
das
cmp
mov
jle
xchg
out
adc
fsts
jo
pop
jmp
jle
loopne
sbb
repz
jge
daa
jbe
pop
mov
xlat
sahf
adc
push
addr16
mov
and
jmp
nop
xchg
lcall
jmp
inc
xchg
fcoms
fwait
pushf
xor
jno
loop
int3
cmp
ljmp
sub
pop
xchg
mov
pop
cltd
scas
outsl
push
fmul
mov
rcrl
fwait
and
enter
decl
ror
sub
sub
fwait
aam
sbb
call
and
and
shl
lods
mov
jp
xchg
mov
out
addl
mov
mov
sbb
push
mov
push
movsb
aam
outsb
cld
jl
xchg
sub
loope
cmp
and
lret
fstl
xor
mov
lret
clc
jle
es
or
insl
cli
lds
movsl
xchg
jecxz
stc
push
sub
fidivl
mov
mov
pop
add
and
adc
mov
incl
bound
jg
xlat
and
mov
xchg
insl
xchg
mov
sbb
mov
push
or
mov
jl
or
mov
cs
dec
icebp
mov
push
aaa
lret
xor
or
hlt
mov
cli
pop
push
inc
arpl
aam
adc
xor
cld
mov
pop
xor
outsl
cmpsl
jge
mov
mov
aaa
push
mov
inc
clc
or
shrb
aam
in
mov
push
pop
scas
pop
sarb
mov
xchg
fadd
imul
adc
xor
mov
out
stos
mov
add
push
jno
jne
pop
fwait
leave
popa
into
dec
lahf
ds
aad
mov
ss
lods
push
fdivs
or
fucomip
jmp
mov
out
ret
pushf
ljmp
sbb
jb
mov
inc
outsl
push
lcall
les
rorl
notb
jae
loopne
mov
mov
es
test
sbb
jmp
scas
in
imul
insb
cli
pop
pop
xchg
xor
adc
ljmp
into
fcmovnbe
fwait
test
in
test
or
adc
or
dec
xchg
pop
adc
jmp
cmp
add
mov
outsb
lret
scas
pop
aaa
int
ud2
aad
and
mov
cmpsb
sbb
in
jl
shrb
xchg
stc
fmul
lret
or
pop
sub
jne
roll
lcall
fabs
xor
outsb
fmuls
daa
mov
add
pop
sbb
daa
mov
push
lret
insl
scas
in
adc
mov
sub
xchg
xor
xor
xor
dec
inc
pop
jg
lods
pop
xchg
xor
int3
lods
int
ficomps
ret
call
mov
add
call
fwait
test
xor
stos
fisubs
and
push
jne
fcmovnb
add
fwait
mov
mov
cmp
mov
inc
mov
sub
jl
xchg
push
cmp
jne
cmp
or
loopne
xor
sbb
cmp
enter
fidivrs
push
enter
inc
xchg
rcrl
xor
clc
jl
pop
test
stc
loop
xchg
inc
add
xor
fwait
sbb
sbb
fwait
hlt
ja
outsb
arpl
dec
rolb
sbb
sub
aas
dec
lock
fsub
mov
sbb
sbb
jo
mov
aam
xor
incb
daa
dec
lret
imul
cmp
add
add
aad
and
fnstenv
mov
stc
aaa
cmp
jae
jmp
int3
ret
popa
push
jp
mov
jbe
dec
hlt
mov
mov
xor
lods
add
ficoml
pop
jl
sbb
fdivrs
add
jge
cmp
mov
xor
bnd
dec
and
jmp
ja
xchg
or
and
mov
mov
jge
mul
stos
aaa
add
adc
adcl
cmp
aas
mov
fs
cmpsb
adc
inc
sub
add
shrl
adc
movsl
jns
shrb
test
in
jge
cltd
pop
dec
xor
inc
mov
jae
mov
dec
push
pop
push
mov
pop
pusha
jg
enter
test
push
dec
shll
cmp
rcpps
inc
fcoms
ss
fs
mov
stc
add
daa
mov
shll
cmpsl
addr16
outsb
push
mov
push
and
cmp
or
inc
testb
mov
xchg
orl
mov
shlb
cs
or
or
fcoms
sbb
adc
cld
shrb
outsb
sbb
fldcw
adc
xchg
xor
inc
out
adc
mov
mov
test
testl
xor
je
add
push
mov
cmp
scas
add
test
outsb
sub
add
add
mov
add
push
loope
push
pop
xlat
cmp
push
adc
ds
les
out
outsb
jo
or
pusha
loope
adc
mov
sub
out
pop
loope
push
mov
push
loopne
aaa
loop
push
in
and
jo
add
in
sub
out
lods
add
inc
fstl
test
addb
cmp
lret
xchg
push
and
jle
pop
clc
jmp
or
sub
inc
mov
xor
jecxz
ds
pusha
pop
into
aam
or
adc
loop
in
mov
jne
xchg
and
mov
repnz
call
cmp
sbb
lcall
in
or
mov
dec
dec
cmpsl
mov
inc
aad
pop
fdivrl
cmovl
mov
bound
xchg
add
inc
dec
inc
aam
cwtl
shlb
and
sahf
xchg
andb
shrb
test
in
mov
rclb
lahf
fstpt
pop
cmpsb
test
or
sbb
mov
and
ret
xor
xchg
lcall
inc
add
jnp
mov
cmp
lret
mov
outsb
jecxz
add
sub
inc
sub
push
ja
cmc
aas
adcl
in
mov
push
gs
xor
into
mov
mul
fildl
sub
add
pusha
and
pop
or
mov
inc
jg
movsl
ja
mov
inc
aam
inc
gs
jge
push
stc
adc
lret
fdivrp
rolb
push
dec
stos
sahf
into
sub
call
or
xchg
or
out
add
testl
outsb
pusha
mov
adc
out
pop
xchg
push
sbb
lods
push
ss
jns,pt
js
mov
in
out
mov
scas
sub
test
xchg
push
cmpsl
movsl
lock
pop
call
loopne
lcall
pop
dec
add
push
add
in
mov
fwait
insl
repz
les
add
std
and
andl
leave
lahf
pop
fs
lret
add
negl
mov
icebp
test
cmp
push
fcompl
cld
aas
mov
js
pop
test
jle
sti
ss
sbb
pop
clc
jmp
popf
inc
out
ja
stos
arpl
leave
es
addl
adc
sti
cs
fnsave
flds
push
into
xor
adc
adc
mov
add
xchg
cmp
hlt
mov
popa
jmp
jle
call
out
insb
push
xor
mov
cltd
iret
repz
sbb
mov
pusha
pop
jmp
push
iret
push
loopne
ffree
mov
cmp
lock
aam
cmc
xlat
push
inc
mov
imul
adc
dec
fcoml
xor
mov
push
popf
repz
or
insl
lcall
jle
mov
clc
scas
das
push
fdivr
and
addr16
lcall
in
inc
stos
in
push
mov
fwait
inc
or
or
dec
inc
mov
cltd
cmp
add
or
inc
clc
jbe
ficoms
orb
pusha
mov
lahf
and
shll
loope
inc
push
fsubr
add
shlb
add
dec
outsb
push
mov
repnz
dec
sbb
ret
movsb
repnz
mov
xor
cmpsb
mov
iret
pushf
clc
push
mov
cmpsl
sarl
fmul
cld
dec
mov
ja
mov
adc
sbb
mov
jecxz
or
imulb
or
push
fistpll
imul
xor
mov
das
movsl
xchg
xchg
stos
add
push
shlb
and
pop
sub
push
loope
push
push
arpl
pushf
fistl
sahf
nop
dec
test
out
mov
adc
sub
push
inc
enter
cwtl
mov
dec
in
inc
push
mov
cmp
in
mov
sbb
das
scas
lods
js
or
inc
dec
xor
xor
pop
push
jae
and
inc
int3
xor
adc
cmpsb
lcall
mov
xor
call
das
dec
test
add
inc
mov
and
xchg
flds
mov
pop
pushf
fs
rcrl
mov
cmp
adc
int
jg
fwait
adc
sahf
sbb
adc
lret
jp
shrl
lahf
push
cli
dec
pop
jg
xchg
mov
ror
cmc
iret
dec
fwait
movl
repnz
fs
or
inc
fcomi
inc
fcompl
pop
loopne
xchg
sub
imul
repnz
rcll
lcall
push
jne
inc
mov
mov
mov
testl
ffree
jbe
arpl
xchg
push
jo
add
sbb
in
ja
das
lods
mov
pusha
mov
notb
or
in
pop
push
sbb
outsl
mov
xor
or
sub
lahf
imul
les
popf
ret
out
pop
pop
lret
movsb
jl
jmp
aas
repz
or
adc
repnz
ss
mov
push
in
test
repz
adc
jle
aaa
out
in
icebp
lock
lods
repz
jge
js
adc
push
push
or
int3
rcrb
shrb
imul
fs
cmp
sub
idivl
cwtl
jmp
add
fcompl
pop
mov
xchg
pushf
add
cmp
add
fildll
sahf
and
mov
inc
dec
mov
sbb
jne
mov
push
sbb
arpl
jne
fistpll
add
out
mov
or
or
pop
mov
hlt
lods
cmpsb
mov
aas
inc
test
lret
fdivrl
std
add
cwtl
fs
inc
mov
inc
mov
ja
lods
movsb
scas
ficompl
pop
push
aaa
jmp
dec
hlt
mov
xor
insl
add
rcrb
sti
mov
cmpsb
sub
mov
test
pminsw
mov
push
arpl
ret
dec
stc
add
push
adc
in
test
loop
sub
push
sbb
daa
xor
cmp
jns
jg
jmp
mov
add
xchg
lock
adc
popl
inc
fs
pop
xchg
jmp
or
mov
jo
sbb
add
xchg
fldcw
jecxz
jl
xor
or
sub
cmpsl
std
sub
cltd
mov
callw
insl
outsl
test
ficompl
shl
jle
ljmp
nop
add
dec
mov
adc
add
nop
or
negl
mov
xchg
call
loop
insl
in
xor
mov
xchg
adc
dec
push
ja
fldt
push
xor
fnstsw
add
jmp
mov
jne
imul
jp
dec
jmp
pop
mov
mov
fcoms
jno
dec
ds
testl
leave
dec
mov
inc
mov
aas
sbb
aas
dec
xor
shll
outsb
jbe
mov
sbb
pavgb
lret
aad
xor
fs
arpl
cltd
cmp
scas
inc
jns
xchg
mov
fcoms
popa
cmp
dec
jle
ret
or
loop
adc
adc
faddl
jo
sbbb
add
inc
pop
add
leave
mov
mov
pushf
rcr
shrb
mov
cld
shll
js
and
fcom
dec
mov
rcrb
in
or
jne
test
loopne
pop
add
fcompl
pop
add
mov
and
mov
adc
aaa
jne
sbb
pushf
loopne
es
mov
aas
cmpsb
mov
dec
clc
sahf
out
jne
adc
or
mov
in
mov
lahf
loope
push
lret
ret
ficoml
stc
repz
pusha
jecxz
mov
test
outsb
ret
lret
inc
xchg
mov
jmp
sbb
ror
sbbl
or
mov
cmpb
pop
inc
cmpsb
or
popf
xchg
arpl
sbb
or
push
scas
cmpsb
outsb
mov
mov
adcl
mov
popf
stc
pop
fcmovb
mov
dec
or
lds
cmp
xchg
pop
repnz
jbe
movsb
and
movsb
aas
or
cmp
sbb
pop
push
loope
in
or
xor
adc
cld
lds
inc
mov
dec
pusha
rol
in
jno
push
imul
loopne
in
imul
pusha
pop
and
lahf
cmp
cmp
sbb
dec
jmp
fmull
pop
inc
lahf
loopne
sbb
xor
fs
pop
dec
scas
ficoms
roll
js
mov
mov
in
pop
insl
out
fs
sahf
xor
sbb
cmp
pop
lock
enter
cmpsb
jmp
cmp
jns
out
cmpsl
cmp
lods
lods
insl
pop
movsb
and
xchg
mov
mov
das
mov
jmp
mov
pop
push
cwtl
lds
outsb
movsb
cltd
xor
inc
or
mov
mov
andl
clc
inc
pop
jbe
test
mov
add
jle
sbb
into
in
cli
mov
push
je
arpl
in
lahf
dec
sahf
das
pop
or
aam
cld
or
into
call
ret
out
addr16
jae
dec
and
stos
fstp
push
cwtl
adc
inc
mov
push
popa
sub
mov
nop
ret
xchg
mov
cmp
xchg
pop
sahf
add
adc
jl
mov
mov
imul
add
adc
push
adc
outsb
not
xor
mov
and
pop
aas
movsb
outsl
xor
sbb
push
clc
sub
outsl
into
sub
lods
ds
fistps
outsl
mov
lret
and
jnp
sub
pop
sbb
push
jmp
cmpb
loopne
jecxz
stc
cmp
xchg
sbb
or
inc
mov
stos
fmulp
js
add
jecxz
scas
dec
push
mov
shufps
repnz
push
mov
fstpl
movsl
and
sbb
into
lea
iret
test
inc
test
jp
cmp
adc
lret
add
pop
push
lret
inc
in
xchg
out
add
sahf
or
push
inc
icebp
xchg
fnstsw
push
test
and
mov
mov
mov
popf
dec
mov
in
sub
jno
sti
sbb
fsubrl
sbb
stc
mov
out
mov
scas
fst
stos
push
mov
test
cmpsb
sbb
xchg
xchg
cmp
push
icebp
cwtl
shll
jge
popf
push
jecxz
ljmp
push
daa
xchg
dec
popf
into
xchg
push
inc
or
repnz
cmpsb
cld
jp
cwtl
dec
pop
sub
pop
lods
push
mov
adc
orb
push
mov
sub
mov
ret
mov
mov
divb
fsubr
add
pop
inc
adc
ds
xchg
lods
nop
dec
jge
vunpcklpd
and
outsl
push
dec
push
stos
stos
stc
outsb
xchg
movsl
jecxz
mov
leave
test
sbbl
pop
mov
xchg
es
push
jbe
mov
lds
sbb
lret
mov
repz
inc
xor
scas
fwait
notb
stc
and
cmp
incl
sub
adc
jns
das
mov
pop
jecxz
sahf
arpl
test
push
mov
call
push
adc
scas
jns
mov
lret
mov
inc
loope
xchg
ljmp
jne
ret
xor
mov
dec
inc
stc
cmpsl
call
lcall
fidivs
inc
inc
and
scas
mov
out
push
imul
cltd
lret
jne
jb
sarb
ss
popf
inc
mov
mov
mulb
xchg
inc
xor
push
inc
int3
push
stos
mov
mov
jae
rcr
movsl
sub
in
out
daa
cmp
sub
add
mov
add
mulb
pop
cmp
sbb
xor
lahf
jnp
dec
fld
cmp
xchg
mov
mov
cmp
inc
xor
inc
fistps
movsl
sub
cmpsb
sub
je
mov
push
outsb
mov
jb
mov
cmp
mov
idivl
movsb
das
dec
inc
lret
sahf
int3
dec
dec
xchg
dec
jbe
dec
rcr
push
shl
pop
jbe
fisubrs
push
push
jns
aas
inc
mov
fs
aad
mov
adc
loopne
pop
pop
stos
aas
lods
mov
bound
jmp
loop
inc
xchg
loop
call
mov
cmp
xchg
imul
int3
or
mov
dec
je
lret
jne
and
push
mov
rcrb
pusha
loop
xor
xchg
sbb
cmp
jmp
shrl
mov
ret
mov
sub
arpl
jp
lock
adc
int3
in
js,pt
inc
cmp
notl
and
addr16
mov
insb
sub
call
push
shrb
xor
mov
fists
movsb
std
dec
and
outsb
xchg
mov
cmp
stos
fnstcw
mov
enter
dec
add
into
cmp
out
fdivl
insb
cmp
xor
sbb
push
rcll
js
ss
dec
arpl
lahf
repz
mov
pop
mov
icebp
cltd
lcall
or
cmpsb
jg
xlat
xchg
mov
and
adc
mov
and
in
gs
ret
mov
fildl
shl
mov
loopne
addr16
imul
lea
out
sbb
psubusb
xchg
rcll
call
push
sbb
arpl
stos
mov
mov
aam
bound
pop
scas
inc
inc
repnz
add
scas
lahf
sub
int3
in
xchg
push
js
mov
icebp
lea
inc
cmp
cmc
cmp
insb
ljmp
jg
inc
jge
imul
jae
push
mov
or
mov
add
push
cs
mov
ret
lods
out
jl
mov
sbb
inc
in
jmp
and
mov
fcoml
jge
mov
movsb
inc
sub
jmp
testb
fs
ret
dec
or
imul
add
clc
inc
lea
scas
aad
and
pop
pop
dec
inc
in
xlat
pop
xchg
ret
jnp
int
js
add
lret
inc
aad
push
out
add
and
std
leave
sti
mov
xadd
jo
das
dec
out
fidivrs
add
adc
jbe
jecxz
pop
bound
dec
inc
xlat
or
cmp
into
sub
std
xchg
call
inc
rolb
insb
xchg
dec
stos
pop
push
in
clc
and
mov
sub
adcl
std
jp
push
xchg
scas
aam
push
push
jnp
mov
outsb
jle
arpl
stc
push
lea
or
out
int
add
fisttpll
jecxz
jmp
xor
aam
or
rolb
test
ja
adc
popf
leave
enter
push
inc
lcall
sahf
inc
cmp
loopne
popf
jb
push
xchg
stc
imul
mov
cmp
mov
mov
and
jle,pn
iret
inc
lods
push
test
js
lahf
mov
addb
insl
pop
sbb
repz
fsubrl
test
rorb
leave
iret
push
lea
dec
pop
xor
or
repz
sub
ret
or
xchg
icebp
movsl
cmp
lahf
sbb
mov
mov
movsl
mov
test
into
jae
popa
and
hlt
mov
rcrl
xor
jns
cmp
mov
hlt
rorl
hlt
pop
jns
mov
push
enter
rclb
lods
sub
adc
fisttpll
add
js
lods
xchg
data16
mov
shlb
outsl
mov
imul
and
stc
lret
shrb
adc
push
int
pop
pop
push
loope
xor
jl
push
jbe
insb
scas
mov
imul
and
dec
xor
aaa
mov
dec
cwtl
aam
cmp
sbbl
pop
mov
jmp
cmpl
and
cs
iret
sbb
pushl
cmpsl
test
mov
and
push
aaa
hlt
mov
mov
push
sbb
out
cwtl
icebp
bound
push
addr16
aas
and
out
addr16
popa
leave
loope
int3
into
sbb
fldcw
movsb
fmul
cmp
mov
mov
les
push
je
push
mov
mov
cmpl
lods
mov
push
mov
push
lods
pop
sbb
push
aad
lcall
fistps
scas
testb
cltd
and
adc
push
pop
pop
imul
cmp
dec
rcll
lret
imul
lahf
xorb
ss
xlat
or
lret
jl
hlt
xor
inc
xlat
mov
lds
notl
and
je
jmp
xchg
push
cld
pause
adc
lods
push
xchg
arpl
dec
imul
mov
jl
push
xor
sub
lret
out
aas
inc
test
inc
or
aam
push
jno
aaa
pop
xor
add
insl
push
gs
les
dec
xorl
sub
in
pop
xor
cmpsb
pop
adc
icebp
ja
jns
stos
das
imull
insl
xchg
pop
sub
lcall
mov
cmc
mov
jp
mov
pop
fldt
adc
popf
stos
insb
xor
imul
imul
mov
dec
xor
mov
mov
mul
push
gs
pop
cmp
sub
js
cmp
sbb
lods
in
mov
popf
dec
pop
jbe
popa
jne
outsl
mov
ret
sbb
insb
mov
add
adc
rcll
fists
pushf
xchg
mov
add
orb
push
push
mov
arpl
std
enter
cltd
add
mov
mov
mov
outsl
imul
add
loop
xor
movsl
push
mov
rcr
int
adc
repz
adc
adc
fwait
cltd
out
cmp
inc
pop
mov
xchg
push
sbb
mov
pop
aas
imul
mov
roll
mov
sahf
push
test
dec
ret
and
xlat
add
xchg
jo
mov
push
icebp
cli
dec
pusha
and
fwait
xchg
jecxz
xchg
loop
jbe
xchg
stc
inc
subl
cmp
inc
jg
push
int
add
inc
js
fmull
mov
jb
xchg
inc
push
movsb
inc
mov
cmp
cmpsb
fistps
add
test
daa
xchg
cmp
arpl
push
inc
lcall
mov
ss
xchg
imul
add
adc
test
xchg
aam
and
pop
mov
rclb
jno
fidivrl
in
cmpsl
inc
mov
and
fidivs
mov
sub
push
aas
wrmsr
cmc
loopne
movsb
inc
jmp
sbb
inc
mov
mov
sahf
jnp
lods
ret
loop
push
fisttpl
add
mov
daa
lret
push
fdivrs
int
cltd
out
shll
ljmp
sbb
in
xchg
andl
leave
jb
out
dec
jbe
loope
test
or
adc
mov
andl
pop
sbb
insb
xchg
loop
jae
loop
sbb
push
fidivrs
jp
push
mov
pop
adc
stc
cli
jns
test
loopne
repz
xlat
xchg
mov
sbb
test
adc
adc
addb
aam
jne
stc
jne
pop
xor
xchg
lret
test
adc
xor
xor
mov
test
add
stos
push
push
aam
xlat
outsb
adc
lahf
sub
mov
roll
xor
sbb
xchg
call
sub
cltd
or
aam
rol
xor
ja
pop
jle
mov
sub
mov
icebp
lods
mov
xchg
outsl
sub
pop
xchg
xor
add
out
scas
data16
jl
in
addr16
mov
adc
add
jge
mov
out
cwtl
adcl
mov
sbb
mov
mov
cwtl
adcb
fadds
ljmp
sahf
dec
mov
icebp
mov
and
inc
sub
pop
icebp
xchg
fs
cmp
dec
leave
xchg
stc
outsb
mov
xor
int
adc
pop
mov
mov
lods
daa
inc
add
das
push
pop
add
adc
and
in
lahf
aad
movsl
sbb
jge
jmp
and
repnz
mov
fs
leave
jg
hlt
in
jbe
push
jp
movsl
xchg
add
mov
inc
in
repz
test
stos
dec
repz
push
jmp
adc
lahf
pop
enter
call
push
mov
iret
xchg
insb
mov
sbb
inc
jb
scas
fs
mov
out
jno
das
or
out
getsec
imul
inc
pop
loope
imul
aad
mov
dec
inc
add
dec
in
ljmp
in
mov
sbb
and
pop
mov
push
add
cmp
scas
cmp
adc
ja
pop
stos
sub
scas
test
std
stos
dec
leave
jmp
aad
xchg
sub
push
fbld
and
xchg
mov
sti
scas
adc
cltd
sub
sbb
xchg
sbb
outsl
mov
mov
in
cmpsb
arpl
loope
fwait
and
push
mov
fisubl
dec
mov
dec
pop
aas
jne
push
cmp
jne
fadd
push
cmp
aaa
ja
sbb
mov
push
decb
xchg
inc
pop
mov
mov
mov
xchg
pop
test
jge
test
popa
jl
sbb
sahf
xchg
mov
jbe
sbb
add
and
jg
mov
sub
adc
dec
inc
loopne
fcoms
in
std
xchg
and
mov
xor
xchg
stos
or
jl
outsl
adc
loope
mov
inc
fbld
jne
add
xchg
std
mov
test
jne
mov
push
or
call
sub
cwtl
dec
in
movsl
jb
hlt
outsb
adc
mov
jbe
js
es
mov
lods
aad
pusha
xor
push
ss
mov
mov
addr16
inc
add
daa
sub
push
mov
pop
scas
mov
cmp
pop
add
cltd
jnp
scas
jecxz
fiaddl
pop
push
out
jmp
mov
mov
fbstp
or
pop
lahf
cli
jg
imul
lock
stos
jns
cmc
scas
pusha
fwait
xchg
jg
push
add
pushf
mov
cld
outsl
mov
test
test
ja
jmp
popa
call
repz
mov
add
cmpsb
in
test
push
add
insl
add
pop
adc
decl
sarl
sbb
add
sbb
dec
add
mov
xlat
or
in
sti
das
xor
push
push
int
adc
pop
mov
cmpsb
idivl
and
mov
call
movaps
xchg
pop
movsb
mov
test
orl
mov
xchg
call
ss
mov
sbb
fisubl
subb
cmp
fwait
aas
xchg
es
adc
cmp
sub
mov
leave
push
inc
ret
inc
adc
test
xor
int
cltd
and
or
sbb
adc
popa
jg
bound
adc
ljmp
push
mov
enter
add
lea
test
aaa
ficompl
cmp
mov
cmpsb
nop
scas
in
shll
sub
call
data16
rolb
push
cltd
cmp
out
pop
out
test
loope
add
ret
xchg
sahf
mov
cmpsl
xlat
fistpl
imul
insl
es
and
nop
add
xlat
adc
call
inc
sub
into
inc
lret
outsb
pop
xor
sbb
outsl
mov
push
lahf
mov
mov
sbb
and
cmp
cli
sub
push
adc
stos
pushf
popf
pop
aaa
fisubrl
aad
xor
lods
lods
xchg
add
vmwrite
daa
mov
pop
mov
jo
sub
test
daa
nop
mov
xchg
cmc
imul
jns
loope
out
xchg
mov
xor
rcr
sub
or
fistpl
push
fildll
jp
jl
pop
popa
stc
sbb
dec
repnz
xorb
push
sbb
add
out
out
movl
pop
mov
movsb
lcall
cmpsb
cmp
xchg
xchg
push
pop
dec
out
dec
mov
jns
pushf
insl
mov
mov
cmc
enter
xchg
movsb
repnz
push
data16
loop
inc
xchg
and
sub
gs
sahf
add
xchg
adc
lds
jo
push
hlt
mov
mov
sub
adc
mov
jno
cmp
adc
add
outsl
add
outsl
sub
xor
out
pop
sti
fildl
fstpl
cmp
jno
xchg
into
stos
nop
pop
xchg
aam
andl
pushf
add
sub
sbb
in
mov
fisubl
cltd
je
mov
jl
ficoml
jp
test
dec
mov
and
or
lods
xor
mov
xor
xor
sbb
add
add
push
push
sub
push
iret
bound
sbb
mov
jnp,pt
xor
loope
fcoms
daa
jnp
ds
push
adc
xor
push
xor
sbb
cmp
je
or
movsb
es
or
inc
cmp
mov
jno
xchg
mov
loope
inc
cmc
aas
ds
sub
jns
push
sub
xor
pop
bsf
leave
and
notb
insb
pop
xor
xorl
in
fsubl
clc
cmpsl
out
mov
adc
xchg
les
icebp
gs
out
lea
cld
test
xor
push
inc
mov
fwait
pop
xor
daa
pop
dec
or
dec
inc
lock
mov
mov
fisubrl
movsb
jp
mov
fsts
dec
cmpsb
lret
add
mov
pop
cmp
add
mov
push
cmp
jne
mov
inc
mov
jne
mov
mov
mov
mov
out
dec
sti
inc
xchg
popf
or
orb
insb
and
pop
addr16
mov
pushf
dec
jb
hlt
or
sub
cmpsl
shlb
jnp
add
push
pop
push
insl
inc
ds
outsb
movsl
jge
shlb
fbld
mov
mov
int3
roll
mov
mov
adc
jb
mov
cmp
jmp
insb
sub
jnp
call
js
push
fcomip
sub
mov
adc
into
mov
mov
jns
enter
dec
mov
push
movsb
repz
lock
xchg
ret
in
icebp
mov
pop
arpl
push
mov
cmp
mov
lods
and
jmp
cmpsl
cmp
addb
out
dec
mov
push
sub
adc
push
lret
ret
inc
sti
fisubrl
out
test
addl
dec
adc
pop
iret
adc
movsl
mul
lret
sbb
shrl
leave
test
add
xchg
repnz
or
sbb
lret
pop
pop
pop
and
call
ljmp
sti
dec
and
stc
add
loopne
sbb
inc
inc
adc
ficoml
data16
mov
and
mov
pop
cmp
sbb
push
mov
jne
es
fdivl
pop
sbb
arpl
clc
jae
daa
and
leave
pop
insb
xchg
addr16
mov
mov
sbb
lods
push
push
ljmp
sub
gs
cmp
addr16
mov
sbb
pop
mov
fisubrl
lahf
imul
test
inc
mov
addl
mov
idiv
int
inc
test
jmp
ljmp
iret
lahf
push
add
sub
and
adc
push
sahf
lea
add
out
xlat
loopne
mov
cmpsl
xchg
js
mov
mov
mov
add
add
arpl
lahf
out
subb
adc
xchg
rcrb
cmp
ret
inc
adcl
pop
add
mov
pop
sub
test
lret
adc
addr16
xadd
sti
xor
cmp
pop
cmp
stos
mov
adc
pop
adc
das
and
jbe
dec
pop
psubusb
dec
xlat
in
mov
mov
adc
push
lret
out
push
imul
fnsave
sub
pop
mov
test
inc
sbb
mov
cmp
dec
mov
push
mov
or
mov
pop
mov
cmp
jns
out
dec
scas
sahf
mov
mov
add
mov
jnp
pusha
add
movsl
lcall
fisubl
nop
jae
xchg
jae
pop
mov
push
mov
push
mov
add
sub
mov
pushf
or
stc
int3
les
sub
inc
call
stc
mov
hlt
test
into
sbb
adc
lea
inc
lds
ret
popa
dec
dec
out
cmp
or
in
sarb
out
ret
sub
add
xchg
call
stos
movsb
in
std
dec
rcr
fisubrs
and
and
push
mov
push
mov
pop
push
jns
adc
arpl
mov
fs
sub
push
sbb
hlt
loope
in
mov
lret
es
mov
stos
out
sahf
inc
jl
sub
gs
sbb
sbb
jg
cmc
xor
stos
pop
sbb
imul
sahf
lret
cli
inc
call
fsts
mov
int
mov
aas
cmp
stos
mov
imul
cmp
fidivl
outsb
xor
or
mov
orl
xor
sbb
repnz
or
xchg
pop
add
hlt
xchg
xor
lock
and
fsubl
and
jge
int
mov
mov
in
and
cmpsb
addr16
jmp
mov
outsb
lods
jmp
jmp
pop
add
pop
loope
stc
inc
mov
cmp
nopl
divb
aad
outsl
js
mov
cli
jno
dec
imul
xor
xor
lcall
out
mov
cmpsl
cmc
and
push
inc
imul
ds
dec
push
inc
dec
pop
sahf
int
push
pop
dec
aad
sbb
cmp
call
mov
cmp
and
je
imul
xchg
mov
and
sbb
and
in
std
sbb
insb
jecxz
pop
mov
cmp
mov
pop
adc
mov
or
dec
mov
pop
lret
fistpll
aam
sbb
xchg
sbb
out
cmpsl
js
push
fwait
out
daa
cli
add
cmp
out
shlb
popa
arpl
cmc
mov
call
das
pop
sahf
jge
pop
xchg
test
mov
push
xchg
push
jg
adc
repz
mov
int3
pop
mov
rclb
dec
mov
stc
lods
cs
push
fcoml
lret
iret
cld
dec
add
mov
mov
lret
dec
lds
pushf
aam
loop
js
fstp
dec
jmp
adc
incb
inc
push
dec
imul
add
das
icebp
leave
fwait
lcall
mov
and
push
mov
mov
inc
sti
add
inc
mov
shlb
mov
xchg
xchg
fnstcw
sarb
xchg
lret
loope
cli
add
cld
mov
js
adc
add
mov
push
inc
pop
add
pop
mov
mov
icebp
cwtl
xchg
push
push
imul
fistpll
sbb
cmp
jg
lret
and
lret
inc
bound
clc
clc
fistpll
xor
int
jge
xchg
std
mov
xchg
inc
mov
std
js
push
pop
pop
jle
sahf
out
hlt
bound
push
or
cmp
pop
lret
mov
enter
cmp
loope
sbb
stc
fldenv
adc
idivl
addr16
xorl
out
imulb
inc
xchg
loop
jecxz
adc
inc
test
adc
xor
out
lret
mov
iret
and
cmp
lcall
je
in
pop
jp
rcr
loop
mov
xor
cli
and
jmp
rolb
int
imul
jnp
les
and
sbb
mov
pop
lea
aas
sahf
rcrl
aad
adc
stc
jnp
pop
inc
dec
into
mov
xchg
sub
je
xor
adc
mov
jmp
loope
jmp
adc
fistpl
sbb
or
push
or
fsubp
insb
jmp
cmc
lahf
cmp
xchg
scas
pop
pop
dec
xor
pop
mov
or
ds
daa
in
insb
pushf
adc
xchg
jmp
jg
daa
push
jno
mov
push
sbb
sub
stc
sbb
clc
jnp
push
mov
test
les
mov
xchg
or
std
jg
int
popa
ljmp
and
notb
js
xor
lea
xlat
sti
fsubp
push
rolb
inc
pusha
imul
xor
in
ds
adc
andb
sbb
mov
leave
mov
xchg
push
jmp
xor
xchg
lahf
lock
cmp
aam
adc
addl
iret
cld
fucomp
jecxz
hlt
mov
sub
ret
stos
das
arpl
loopne
in
pmulhw
push
outsb
aaa
cld
mov
sbb
push
call
filds
lods
scas
push
cmc
xchg
push
jno
pop
push
scas
jl
pushf
jmp
popf
or
mov
mov
les
inc
movsl
loope
loope
xor
xor
mov
jb
rcrl
divb
jno
cmc
jmp
add
or
jns
cld
out
stos
inc
aaa
jnp
stc
in
push
xor
sti
std
test
inc
fwait
test
or
bnd
scas
add
xchg
ret
dec
jle
ret
outsl
sahf
and
adc
sub
xchg
cmp
xchg
aas
sbb
repnz
dec
xchg
jmp
jns
jmp
jo
aaa
jo
jns
add
push
push
fbld
fsubl
pop
data16
gs
je
push
test
add
stc
or
jecxz
ljmp
in
cmp
repnz
dec
cwtl
je
xchg
rorb
in
inc
out
ljmp
aas
mov
mov
movsl
dec
aam
sbb
pop
add
inc
jl
les
ss
mov
insl
gs
push
shlb
inc
inc
out
jbe
addl
or
xor
lea
jle
inc
inc
dec
xor
fistps
cmp
mov
pop
cmp
inc
adc
hlt
movsl
jecxz
add
popf
pop
call
call
icebp
test
lret
xor
push
cmp
xchg
loope
out
in
pop
movsb
xchg
fisttps
mov
fbld
and
sahf
push
fwait
out
int3
jge
inc
arpl
lret
in
dec
mov
jg
repnz
mov
shl
sbb
sub
mov
in
inc
sbb
outsl
adc
and
insb
test
jecxz
xchg
cld
pop
sbb
mov
mov
xor
or
or
cltd
mov
rcll
cwtl
stc
movsb
adc
push
cmc
aaa
fsubrs
into
xchg
sbb
pop
jae
jns
push
sbb
or
movsl
mov
and
mov
cmpb
pop
test
aaa
or
fdivrs
mov
test
ds
pop
add
dec
or
movsl
ja,pn
xchg
mov
iret
mov
mov
dec
adc
fldcw
stos
insl
xor
mov
rsm
mov
push
dec
prefetch
lods
push
jne
ds
add
jle
cs
rcrb
mov
data16
mov
pop
adc
sub
ret
fldl
enter
inc
ds
sub
repnz
adc
pop
sbb
testb
sub
repz
std
pop
in
fdivp
mov
mov
inc
sbb
jge
outsl
hlt
dec
loopne
aaa
push
cwtl
daa
gs
out
ja
sbb
stos
sbb
loope
xor
lea
or
clc
or
popa
xor
adc
cmp
and
test
or
orl
stos
jnp
insb
fnstsw
and
je
or
sub
incb
mov
mov
ficomps
ret
or
cli
mov
pop
jecxz
hlt
stos
daa
push
jl
ret
div
jo
stos
jne
jns
mov
mov
pop
mov
shrb
dec
xor
cmp
stc
add
pop
push
jne
xor
sarb
or
gs
push
js
and
xor
arpl
pop
rcll
daa
jl
xchg
push
add
aaa
fidivrl
lcall
inc
mov
jno
mov
lea
mov
out
mov
mov
outsb
pop
iret
cltd
jo
xor
cmp
push
push
mov
dec
ret
data16
pop
mov
sub
loope
mov
ss
push
inc
jb
scas
imul
lar
sbb
mov
es
test
fnsave
gs
inc
push
movl
cmp
ss
test
adc
insb
push
cmc
push
ds
enter
pop
push
pop
dec
add
sbb
adc
shll
or
jp
cmp
mov
or
sub
push
mov
mov
out
imull
fstl
aam
inc
or
cwtl
pop
iret
insb
js
int3
sbb
sahf
xor
jb
or
ljmp
ss
sub
mov
cmp
jmp
mov
mov
mov
push
pop
iret
lds
and
mov
repz
rol
xchg
pop
xor
lret
imul
adc
inc
dec
mov
add
and
data16
xchg
fs
divl
mov
xchg
add
mov
and
mov
sbb
cmc
and
jnp
dec
stos
sub
movsl
pop
xchg
mov
inc
jne
rorb
loopne
test
test
cmp
mov
and
xchg
sbb
loopne
and
mov
out
test
icebp
mov
xor
adc
sahf
out
lea
out
push
cmp
jg
ja
stos
and
inc
jmp
jne
int
pop
push
dec
std
jb
in
xchg
pushf
and
iret
dec
mov
insb
popa
xchg
push
dec
ret
dec
ja
and
popa
insb
push
cmp
popa
lcall
lods
sbb
adc
rclb
call
das
outsl
pop
rcrl
testb
sbb
xchg
mov
and
lds
inc
adc
push
add
push
dec
mov
test
leave
leave
test
sarb
xlat
push
jg
xor
addr16
inc
sub
pop
jae
cmp
dec
ds
jns
stos
or
popf
mov
xor
xchg
jnp
sub
dec
push
push
adcl
jno
pop
imul
inc
mov
lret
and
fstpt
push
cmpb
push
mov
add
test
ficomps
test
bound
xchg
scas
fmuls
pop
or
je
in
andl
enter
into
sub
idiv
scas
jns
inc
pop
push
mov
popf
mov
shll
mov
subl
mov
mov
dec
cmpsb
into
inc
je
arpl
sub
dec
je
cmp
xchg
ss
jnp
aas
sbb
push
arpl
mov
negl
cmp
dec
fisttps
fdivs
movsl
fsubs
test
aaa
dec
imul
negl
cwtl
fwait
add
not
repnz
xor
stos
loopne
fcomps
inc
pop
xor
push
xchg
in
scas
cmpsl
mov
pop
mov
jo
ljmp
shlb
lods
icebp
mov
std
push
scas
scas
push
leave
cmp
repnz
or
insl
xchg
add
int
lock
pop
xor
scas
mov
fs
int
jmp
mov
push
xbegin
call
in
cmpsl
push
shl
or
cmpsb
adc
push
jnp
mov
and
pusha
dec
fs
in
and
add
xchg
sahf
repz
sub
insl
pop
dec
mov
ds
push
xchg
insb
rcrl
bswap
sub
pop
add
pop
xchg
ja
idiv
jmp
lea
test
mov
loopne
cmp
fwait
lods
cltd
add
mov
repz
pop
jl
mov
xchg
call
fdivs
sbb
imul
cwtl
and
sti
icebp
int3
outsb
and
and
sbb
call
lock
push
jge
xor
cld
mov
loop
sar
xchg
xchg
push
sub
inc
hlt
dec
xlat
test
sub
bnd
lcall
sbb
stc
mov
js
inc
out
loope
in
das
and
pushf
lea
jl
sbbb
clc
movsb
sbb
fwait
test
cmp
dec
inc
sub
push
in
cmc
xchg
mov
arpl
in
enter
out
xor
mov
cli
lret
or
mov
loope
pop
xchg
mov
inc
mov
xorl
ss
stc
sbb
adc
sbb
jg
shlb
xchg
sbb
and
xchg
sub
test
pop
cmp
test
inc
jmp
add
insl
cmp
sub
or
iret
in
andl
cld
push
mov
sbb
leave
xchg
aas
clc
rolb
cs
push
ret
and
mov
mov
cmp
jne
or
mov
pop
imul
sbb
test
ja
int3
dec
dec
xchg
testl
adc
and
loope
sbb
mov
aam
loope
jle
mov
shlb
mov
les
mov
andl
rolb
or
cli
xor
int3
cwtl
jbe
les
xor
mov
in
fwait
push
xchg
andb
sbb
and
jge
sub
lret
inc
xchg
push
adc
dec
out
mov
dec
ss
repz
int
and
cs
in
inc
ds
imul
ljmp
push
mov
and
jle
jg
xlat
pop
repnz
mov
jmp
cmpsb
mov
das
and
and
pop
adc
dec
movsb
pop
andl
movsb
mov
mov
pusha
jp
jno
je
jg
stc
adc
fwait
push
jae
ret
nop
cltd
sbb
or
mov
scas
andl
es
iret
lds
mov
fmul
aad
shll
push
jbe
fldcw
dec
and
pop
es
ret
cli
pop
das
push
and
push
mov
lret
pop
xchg
xchg
jl
daa
push
lret
adc
mov
std
pop
mov
add
sti
adc
mov
aam
das
iret
fmull
xchg
cmp
add
aas
ret
ret
jg
fs
xor
ret
mov
ljmp
push
ds
add
and
dec
gs
in
adc
dec
xor
stos
push
mov
call
dec
xchg
jg
inc
adc
sub
push
rcr
add
mov
repnz
out
jno,pt
outsl
pushf
jnp
push
pop
cltd
cmp
pop
rorl
inc
test
popa
pop
sub
push
cmp
into
sub
insb
imul
adc
xor
xor
not
mov
shll
cld
daa
adc
cmp
ljmp
imul
outsb
inc
xchg
dec
jbe
daa
fimuls
cltd
push
mov
adc
push
mov
mov
adc
fidivrs
bound
jl
inc
into
pop
jne
push
jmp
xchg
xor
sbb
mov
movsb
js
in
pop
mov
inc
addr16
outsl
fs
aad
hlt
pop
sbb
mov
inc
insl
sub
js
xchg
inc
ljmp
pushf
mov
jp
data16
hlt
out
pop
mov
jl
lahf
scas
jge
xor
or
xor
lahf
mov
dec
push
insl
push
scas
rcrb
fsubrs
mov
lcall
sbb
sahf
fs
test
sub
stos
sbb
arpl
je,pn
mov
shlb
xchg
jmp
aaa
cltd
mov
sub
es
push
mov
xchg
xchg
xchg
pop
cmc
data16
subb
aaa
mov
inc
cmp
sbb
mov
and
idiv
or
rorl
add
outsl
pop
mov
lock
push
sub
fs
and
insb
mov
jmp
add
lcall
in
call
adc
and
cld
in
es
test
fs
scas
xor
sar
out
enter
imul
or
fwait
mov
ret
jno
jno
push
stc
je
imul
dec
push
xchg
scas
nop
fsubrs
and
add
or
aad
dec
jbe,pn
xor
lret
mov
push
rorl
mov
movsb
scas
adc
or
popa
jns
cmp
imul
mov
aaa
push
push
dec
sarl
in
sbb
insb
orl
lods
lods
fs
leave
adc
cs
cld
nop
xor
sub
cmp
gs
mov
inc
enter
add
das
mov
inc
fdivs
enter
dec
jmp
or
scas
sbb
mov
pop
mov
adc
hlt
in
mov
js
or
inc
jecxz
or
fcom
cmp
scas
scas
outsb
jo
inc
repnz
lret
or
and
xchg
mov
add
or
jns
daa
cs
je
fstpl
dec
pop
cs
pop
pop
ficompl
push
mov
mov
call
test
imul
or
call
repnz
mov
xor
call
xor
mov
ja
jnp
das
jne
jns
enter
repz
shrb
les
or
and
ljmp
in
gs
cltd
leave
inc
pop
xchg
ret
dec
aad
dec
cld
pop
pop
lds
hlt
jmp
xor
push
sti
cmp
gs
and
xlat
stc
in
pop
ja
fstps
push
pop
cmpsl
adc
mov
test
xor
cmp
jp
cmpsb
or
mov
push
inc
xlat
nop
mov
dec
push
sub
enter
in
push
adc
imul
cmp
or
and
repnz
xchg
imulb
daa
movsb
repnz
nop
fwait
mov
insl
lcall
jo
je
dec
lds
pop
nop
sbb
push
std
sub
jge
dec
rcrl
xor
cld
jecxz
and
push
jge
insl
insb
dec
xor
dec
add
mov
jg
mull
push
insb
das
pop
in
xor
and
cs
mov
cmp
fs
cmp
addr16
mov
pop
adc
arpl
cmpsl
pop
pop
push
push
jecxz
ret
pop
adc
add
jns
dec
fwait
cld
sub
or
divb
push
mov
in
int3
loope
cmp
addr16
mov
aam
das
cmp
lock
jge
adc
push
or
mov
inc
mov
lds
loopne
out
in
insl
outsl
dec
dec
stos
inc
repz
paddd
xchg
cmpsl
inc
ja
adc
pop
testb
shlb
je
xor
data16
aaa
dec
xor
xor
xchg
pop
push
gs
mov
dec
pop
push
mov
popf
decl
lea
cmp
or
pusha
lds
sahf
xchg
and
or
jno
sbb
mov
xlat
dec
inc
push
or
sub
inc
sub
hlt
dec
mov
pusha
insb
sbb
test
icebp
ja
xchg
inc
ret
out
iret
lret
insb
mov
cmpsb
aas
mov
or
cmpl
cmpsb
stos
push
popa
cmp
adc
or
jg
stos
in
test
sahf
imul
ds
int
stos
fs
add
scas
mov
jb
and
xchg
mov
jo
mov
push
call
pop
mov
call
and
mov
adc
outsb
mov
aaa
add
inc
mov
and
nop
or
xchg
mov
inc
and
or
shl
js
pop
imul
pushf
pushf
jmp
loopne
push
ljmp
cmp
jae
outsb
mov
shrb
xor
cwtl
cld
ds
mov
cwtl
outsb
aad
enter
dec
inc
mov
je
dec
add
daa
add
mov
fdiv
test
mov
mov
push
cmpb
imul
push
pop
das
sbbb
shlb
inc
into
pop
stos
movb
jl
jo
icebp
sub
mov
adc
in
into
inc
fneni(8087
insl
push
inc
xor
mov
mov
xchg
test
pop
pop
sub
test
xchg
lods
unpcklps
mov
bound
sub
outsb
clc
xchg
dec
cmc
mov
repnz
mov
test
sti
nop
add
sub
adc
fildl
sub
out
test
std
ljmp
pop
leave
clc
das
repnz
fs
cmp
mov
orb
mov
adc
lock
enter
xor
sbbb
mov
fbld
jne
clc
pushl
adc
lret
cmp
lods
aas
push
ljmp
out
inc
out
or
or
mov
jecxz
inc
xchg
ljmp
ret
ds
lret
inc
sub
leave
mov
fldcw
ja
int3
jbe
cld
lods
call
popf
jb
in
ja
xor
fists
lods
pop
add
mov
out
or
scas
mov
add
notb
mov
push
sub
inc
andl
cmp
sbb
cmp
mov
and
adc
and
cmp
cmpsl
cmpsl
xchg
pop
subb
push
jb
add
test
cs
arpl
xor
leave
test
mov
sub
lock
dec
adc
dec
dec
cmp
lret
pusha
hlt
adc
adc
cmp
dec
mov
or
in
add
push
mov
mov
test
fmull
xor
loop
and
stos
cmc
dec
nop
fldcw
pop
es
bound
sbb
aaa
cli
imul
lcall
xlat
mov
icebp
dec
in
xor
bound
xor
mov
iret
xor
dec
push
add
mov
ss
arpl
inc
jnp
push
stc
mov
mov
pop
push
icebp
xor
out
push
adc
dec
adc
adc
dec
lods
sub
stc
add
aaa
scas
fsubrl
jo
mov
pop
jmp
adc
mov
jno
into
mov
filds
in
jo
mov
enter
adcb
inc
sahf
imul
xchg
fnstcw
push
cli
and
mov
stos
sub
popf
mov
or
push
fcoms
fwait
aad
cmpl
xor
sbb
addr16
pop
lea
sub
pop
jb
jp
sbb
idivl
and
cld
in
sbb
arpl
hlt
pop
fstpl
pop
mov
inc
ret
lea
xchg
mov
or
int3
push
adc
dec
std
inc
cmp
xor
xchg
sbb
stos
rclb
add
scas
popf
arpl
addr16
adc
sub
mov
cmc
mov
enter
jo
push
jle
sbb
hlt
ljmp
cwtl
cltd
mov
and
cmp
xchg
movsl
rcrb
sub
shl
mov
inc
lock
cs
js
cmpsl
fstpl
mov
negl
jb
pushf
addr16
mov
incb
sbb
andl
xor
imul
adc
adc
in
bound
lahf
jo
in
movb
pop
or
dec
push
dec
or
and
adc
xchg
dec
into
cmp
lods
jne
sub
push
mov
xlat
jg
xchg
push
cmpb
sub
ljmp
ds
xchg
aad
jg
jae
ja
mov
jb
addr16
or
aaa
fcoms
push
mov
jge
sbbl
icebp
mov
cwtl
out
and
cmc
das
jmp
orb
insl
mov
xor
pop
lock
mov
aaa
int3
push
mov
test
and
or
int
cwtl
mov
xchg
movsb
xchg
iret
lock
jmp
xor
sbb
lea
mov
fwait
push
popf
pop
fidivl
sbb
sbb
hlt
icebp
enter
leave
fnsave
test
into
ss
sub
pop
or
in
cltd
mov
fwait
test
test
lods
inc
mov
jne
or
hlt
xchg
jae
push
bound
addr16
dec
cmp
mov
cmpsb
jge
imul
push
mov
mov
sti
push
mov
lods
outsl
push
fadds
scas
sub
pop
jb
jb
xlat
dec
fwait
dec
pop
mulb
inc
pop
sahf
gs
in
mov
jl
popf
pop
xchg
and
jbe
jns
cmp
cmpsb
jl
jp
cli
jo
xor
xor
xchg
ljmp
and
rolb
xchg
orb
pop
adc
add
leave
out
or
or
mov
movsb
out
xchg
faddl
outsl
jne
jno
outsb
rolb
mov
add
popa
test
fisubrl
jmp
inc
jbe
sbb
mov
lea
int
mov
hlt
push
xchg
fadd
inc
jmp
lcall
sar
test
xor
sbb
hlt
shll
dec
dec
pop
push
jbe
inc
push
push
mov
mov
dec
adc
fcompl
sub
imull
add
icebp
subb
add
pop
test
xchg
push
jb
loop
inc
fcompl
pop
in
sbb
jg
mull
mov
test
insb
sub
mov
shrl
sbb
and
scas
and
adc
pop
pop
pop
popl
outsb
dec
mov
xchg
dec
mov
add
or
dec
inc
clc
mov
sub
sarl
ds
test
inc
int3
adc
pop
cmpsb
cmp
jecxz
push
push
xchg
sbbl
pop
add
and
mov
pop
clc
and
sub
mov
ds
pop
and
mov
lock
dec
and
adcb
loopne
mov
out
out
push
push
xor
pop
push
and
xchg
loope
test
pop
insl
rclb
adc
jb
inc
adcb
jb
loop
incl
icebp
test
inc
iret
mov
jecxz
arpl
lret
loop
loopne
or
fdivrs
xchg
pushl
inc
int
call
push
insl
xor
mov
jp
outsb
xlat
iret
jle
bound
cmpl
mov
inc
xor
pop
pop
lea
mov
mov
mov
mov
fstps
cltd
jae
mov
enter
push
push
dec
lods
jbe
cmpsb
pusha
cltd
popf
or
cmp
inc
dec
inc
xchg
push
aad
inc
stc
cmc
enter
dec
fimuls
stos
push
test
and
out
notb
sbb
cmc
mov
int
mov
sbb
sub
xchg
and
popf
loopne
fstpt
pop
jbe
aad
sbb
push
test
sub
ja
pop
inc
jmp
cmp
cmp
data16
cmp
pop
xchg
mov
xlat
mov
fldpi
std
fdivrs
and
outsb
ss
push
addb
js
fs
jnp
push
pop
rcll
and
add
xlat
dec
and
xchg
sub
cwtl
push
test
notl
and
repz
loope
dec
and
dec
popf
xor
dec
jno
pop
sub
mov
pop
mov
sub
lahf
jo
lahf
loope
cmp
cmp
xchg
pop
outsb
mov
stos
mov
mov
pop
add
test
push
push
imul
daa
cmc
pop
in
hlt
aaa
xlat
das
mov
jge
leave
data16
hlt
lods
push
aad
inc
cmpsb
sub
dec
pop
addl
popa
fnsave
movsb
leave
xchg
pop
je
xchg
gs
cmc
test
lret
add
inc
mov
mov
cmp
xor
pushf
jo
or
mov
cmp
and
xchg
mov
cmp
xchg
xorb
rclb
or
std
jae
add
shlb
mov
pop
mov
cltd
fdivr
jbe
xor
inc
nop
in
adc
ror
movsl
adc
push
mov
mov
jmp
sub
je
daa
dec
insl
pop
lahf
rorl
cs
push
sbb
stos
fwait
shrl
or
adc
in
dec
mov
out
or
cmp
xchg
xor
sbb
lret
leave
scas
adc
outsl
dec
xlat
dec
cmp
int3
sub
sbb
cmp
and
clc
push
and
lds
test
inc
xchg
jnp
xchg
dec
push
jbe
jl
dec
xchg
movsb
pop
inc
stos
popf
cmp
push
ret
xchg
pop
repz
dec
dec
mov
push
lods
movsl
mov
lock
pop
mov
cli
mov
jbe
mov
inc
or
leave
add
out
inc
lret
in
sarb
ret
in
in
repnz
daa
sti
xor
adc
loopne
mov
fisttpll
mov
imul
or
push
popa
nop
push
xchg
sub
push
ljmp
mov
incl
mov
xchg
mov
bound
aas
or
fstps
out
xchg
imul
movsl
imul
lds
push
mov
jns
ret
stos
or
shr
cwtl
dec
pop
mov
andb
fwait
stc
add
int3
pop
aam
sti
jbe
lods
pushf
and
push
or
push
cmc
and
pusha
movsb
mov
js
jg
mov
push
test
push
aas
mov
pop
jecxz
jae
adc
mov
scas
cmp
out
jl
fstp
inc
int
jno
dec
adc
push
aad
mov
arpl
xchg
out
push
xchg
mov
jns
jecxz
cld
cmpsl
or
xchg
cmp
int3
push
xchg
adc
shlb
xchg
lds
fcomps
adc
dec
mov
andl
mov
into
add
push
sbb
xor
jmp
divps
inc
mov
jp
shl
out
outsb
test
xchg
mov
lea
xchg
ss
scas
ljmp
adc
ds
daa
dec
dec
and
ljmp
cs
fisubrl
arpl
cmovo
add
cmp
popa
and
xchg
inc
test
xchg
inc
xchg
cli
lahf
xorb
fwait
inc
mov
xchg
imul
insl
mov
and
mov
pop
loop
sub
mov
shll
loop
pushf
aad
cli
lods
pushf
pop
or
mov
xchg
sub
ljmp
mov
xor
and
nop
out
xlat
dec
push
jg
lods
xchg
ljmp
test
aas
mov
inc
insb
pop
daa
js
in
and
movsl
sub
sbbb
jecxz
fbld
mov
dec
xchg
cmp
pop
pop
sbb
pop
lods
loop
lea
jge
cli
int3
mov
xchg
int3
mov
cmp
daa
cmp
mov
jnp
in
cmp
jb
lret
shlb
pushf
fnsave
mov
andb
jmp
mov
cmpl
pop
pop
jne
cmp
xchg
out
lods
dec
shl
enter
jp
adc
and
andl
mov
test
cmp
jl
test
pop
and
pushl
dec
ja
data16
fistps
xor
and
pop
mov
add
insl
movsl
movsl
cmp
ss
pop
stc
sub
mov
aad
nop
roll
cli
sub
pop
test
sar
dec
cmpsl
daa
mov
mov
push
cmpb
dec
sub
shr
lahf
pusha
cmp
xchg
and
pop
cli
or
out
clc
aas
shll
sbbl
f2xm1
frstor
ljmp
leave
mov
and
imul
stos
mov
inc
cmp
adc
add
push
add
xchg
jge
idivb
movsl
rorb
lret
lret
es
mov
mov
pop
xchg
add
inc
add
and
popa
or
ret
push
out
shll
add
xchg
inc
or
hlt
cltd
daa
pop
xor
pop
pop
ljmp
out
mov
xor
cmpl
jg
in
inc
mov
out
xchg
scas
sahf
mov
xor
cs
nop
in
push
cwtl
dec
add
cmc
mov
sub
lds
movsl
pop
js
mov
add
cmp
push
mov
imul
adcb
cmc
jno
inc
lahf
bswap
mov
test
mov
cmpl
add
pop
dec
jnp
movl
fdiv
jb
ret
out
fs
movsl
test
stos
lock
addr16
sub
test
jle
and
mov
fists
je
adc
inc
jnp
shrl
fisubl
adc
mov
mov
gs
jo
xchg
movsb
dec
push
cmp
xor
dec
pusha
mov
and
pop
sarl
pop
out
insb
mov
adc
add
daa
xchg
shll
test
fisttpl
mov
nop
repnz
leave
addr16
mov
xor
lds
cmpsb
cmc
dec
repz
lret
insb
push
cmp
dec
jne
ljmp
mov
mov
mov
xor
jns
stos
lea
int
dec
jb
dec
mov
test
sarb
sub
push
xchg
popa
ljmp
xor
xchg
inc
in
cmpl
lods
pop
rcrl
lret
cmp
jge
jmp
sbb
aam
push
mov
or
mov
cmp
leave
xchg
lret
pop
pop
mov
dec
jae
test
adc
sub
fildll
and
jae
int
dec
loopne
add
mov
mov
mov
lret
in
pop
sub
scas
loope
dec
dec
fnstenv
ja
inc
pop
lds
inc
ror
hlt
iret
insl
cmp
fcomps
push
and
lods
out
jne
loop
cmc
xlat
dec
dec
arpl
jne
ficomps
fsubr
cmp
xorb
dec
pop
xchg
call
mov
in
mov
cwtl
dec
mov
rorl
mov
insb
or
push
repnz
pop
mov
mov
ja
popa
mov
xor
push
rolb
inc
lds
sbb
xchg
xor
jl
jne
xor
or
js
mov
mov
cmp
popa
xchg
mov
decl
lods
sub
imul
push
out
mov
test
mov
repnz
nop
cwtl
add
pop
push
pop
mov
mov
xor
push
pop
int3
pop
or
pop
inc
insb
and
scas
subb
jp
adc
xchg
outsb
daa
cmpl
aas
xor
cmc
stc
jmp
jecxz
inc
mov
inc
and
rorb
push
and
pushf
dec
mov
idivb
and
mov
xchg
mov
dec
dec
loope
fidivrs
inc
push
jae
adc
jne
outsl
mov
arpl
jbe
sbb
jmp
negb
std
call
push
dec
sub
js
lds
fmul
repz
and
sbb
adc
mov
inc
lods
jnp
hlt
clc
mov
pushf
pushf
dec
fs
cmp
pop
std
cmp
sarl
test
mulps
int
dec
pop
stc
cli
add
add
cmpsl
bound
inc
in
aaa
mov
dec
insl
hlt
jge
outsl
push
loop
ss
sub
or
ja
insb
andl
pop
add
push
inc
add
leave
xor
cmp
clc
idiv
int3
test
xchg
mov
mov
aas
or
aam
cmp
sahf
cmp
stc
xchg
mov
inc
or
mov
sbb
adc
mov
mov
xlat
and
inc
out
loop
shrl
cmpsb
lods
pop
sahf
outsl
insl
addl
or
pop
and
fstps
adc
shlb
shlb
push
inc
bound
sub
xchg
mov
xchg
divl
clc
int3
lods
mov
dec
mov
push
aaa
push
je
cltd
mov
mov
dec
or
int3
ret
add
adc
adc
mov
mov
fimuls
leave
cwtl
cli
mov
fs
cs
repz
pop
sti
jae
aam
pop
mov
repnz
cmp
add
dec
lahf
inc
loop
test
je
insb
or
out
mov
dec
inc
push
and
push
xchg
cmc
lock
push
lret
xchg
pop
test
adc
ss
or
push
jg
imul
je
sbb
mov
outsb
ret
fdivl
xchg
cmp
push
in
mov
xor
out
scas
add
xchg
icebp
adc
aam
loopne
push
outsl
xor
jge
sbb
sbb
mov
sub
scas
sbb
mov
loopne
adc
cli
shlb
jns
push
and
cwtl
les
mov
push
cmp
iret
inc
inc
jl
mov
dec
pushf
jmp
and
jne
call
lcall
out
cmc
pop
fdivp
cld
pushf
arpl
outsl
pop
dec
pop
add
jle
jnp
adc
daa
jne
in
pop
in
adc
jg
push
jmp
inc
rcr
divl
popa
mov
es
daa
loop
shl
mov
sbb
cwtl
cmpsb
add
xchg
xor
addr16
addb
bound
aam
jp
cmp
or
popf
dec
test
fs
jmp
pop
daa
xor
mov
inc
pushf
clc
loopne
mov
xchg
fisttpl
loopne
add
mov
lods
stos
jb
aad
jae
pop
or
shrb
adc
and
dec
push
push
incl
cmp
jns
dec
dec
loopne
das
clc
mov
inc
xchg
xor
mov
jge
jecxz
jg
sub
adcl
sahf
mov
dec
lock
xor
cmpsl
and
rcrb
les
out
es
push
inc
call
outsb
dec
push
data16
jmp
shll
icebp
out
imul
jl
push
jp
sbb
inc
push
add
and
pop
scas
pop
xchg
mov
mov
mov
adc
xor
add
sti
dec
popf
mov
fsubrl
into
sti
cs
mov
call
daa
push
adc
and
pop
sbb
add
cmpsb
leave
movsl
daa
mov
sub
frstor
and
outsl
and
jo
lret
sahf
hlt
xor
out
xchg
adcl
lock
leave
and
test
iret
ja
xor
add
or
lock
mov
dec
jge
stos
pushl
outsb
add
nop
loopne
in
adc
cli
dec
notb
test
push
outsl
pop
mov
mov
dec
or
shlb
loope
push
fidivrl
icebp
mov
cmp
into
enter
xchg
sbb
add
pop
mov
insb
adc
sub
and
mov
adc
adc
js
sub
dec
mov
sti
mov
lods
ret
dec
jno
sbb
pop
adc
nop
push
xor
ds
add
mov
or
scas
dec
lret
shrl
cmp
cmc
mov
outsl
inc
movsb
jno
jno
in
sahf
sahf
insb
sti
or
xadd
imul
adc
stc
jae
ds
mov
jae
leave
mov
mov
adc
cmp
movsb
push
cmp
cltd
jecxz
js
stos
mov
jbe
xchg
loop
mov
icebp
sbbl
int3
mov
xchg
xchg
out
push
xchg
ds
mov
mov
and
and
mov
and
loope
imul
mov
cltd
or
js
pop
xchg
pop
addr16
mov
mov
sbb
push
cltd
adc
cmc
or
out
pop
xlat
xchg
out
sbb
shlb
cmp
sbb
or
jl
out
lods
call
mov
cmpsb
jmp
ss
mov
inc
or
andl
jge
jg
fwait
pop
sub
rclb
call
rcl
and
pop
iret
loop
out
pop
lret
add
cmp
lock
pusha
rcrl
js
mov
aaa
sub
cmp
add
add
call
jmp
mov
test
imul
daa
int3
mov
push
add
insb
pop
or
frstor
dec
and
ret
negb
cmp
xor
popa
js
enter
and
mov
sahf
popl
lcall
mov
sbb
pop
xchg
je
pop
mov
mov
lods
xor
out
aaa
fcoml
inc
lock
mov
loopne
or
and
xchg
fistpl
and
loope
sbb
cmp
xchg
lret
test
pop
mov
iret
out
sahf
notl
das
add
lea
inc
mov
cmpsl
cmp
or
popf
sbb
or
cmp
xor
enter
fadd
lds
call
add
mov
outsb
push
ja
ja
mov
jecxz
pop
pop
pop
pop
mov
sarl
sub
test
les
mov
add
sbb
push
inc
push
pop
fldcw
pop
cmpsl
xchg
sbb
adc
mov
pop
pop
repz
ja
fsts
lahf
jmp
push
mov
push
test
insl
lret
inc
les
cmpsb
insl
std
sub
dec
imul
rcrb
loop
xorb
mov
mov
sarl
sub
stos
jb
gs
jecxz
notl
xor
in
push
xor
lds
add
cmpsl
pop
stos
outsb
maskmovq
testl
fwait
pop
fsubl
imul
int
in
mov
cwtl
loope
stc
dec
mov
dec
and
sub
wbinvd
sub
pop
lcall
mov
jae
sub
int3
mov
xchg
cmpsl
ret
jno,pn
pop
pop
cmp
mov
push
cmpsb
or
repz
adc
dec
daa
inc
sbb
dec
xor
movsl
stos
push
lds
test
mov
imul
imul
cmp
aam
cltd
mov
xor
mov
push
pop
mov
mov
stos
sub
call
mov
cmpsb
rcrl
mov
inc
push
fstpl
das
xor
sbb
jl
push
add
adc
push
mov
rolb
xor
loope
dec
mov
push
pop
into
fwait
popf
hlt
fstps
add
and
cs
hlt
push
jnp
mov
mov
xor
mov
or
js
out
lock
notb
in
sbbb
popa
or
jmp
inc
rcrl
scas
sub
test
push
mov
jbe
ss
add
pop
insb
push
movb
scas
sti
push
test
mov
xchg
scas
inc
es
iret
jmp
push
imul
or
call
or
fisubs
mov
or
push
mov
inc
aas
xchg
orl
push
sar
xchg
jmp
fsubs
lods
and
inc
bound
inc
push
sbb
enter
repz
sub
pop
push
push
stos
jae
lods
sti
in
xchg
push
fdivp
xchg
bound
mov
aam
ficomps
pop
mov
scas
push
cmp
sub
mov
cwtl
ljmp
jge
shlb
xor
mov
and
adcb
dec
movzwl
pop
add
leave
add
enter
lods
into
cwtl
popa
dec
lret
mov
xchg
ljmp
push
dec
popa
test
shr
decl
xchg
jnp
stos
loop
stos
movsb
jae
mov
test
fsubs
ret
push
add
fwait
pop
lock
in
mov
add
shrl
pop
jge
cmpsl
ret
addl
cmpsl
add
dec
add
mov
mov
push
mov
popf
icebp
jle
out
jp
push
dec
mov
pop
cmp
pop
adc
xchg
push
rolb
in
data16
mov
and
out
fstps
sub
repnz
or
push
jg
pop
push
iret
dec
scas
or
cmp
xlat
insl
fcmovu
aas
lods
sti
outsb
fists
cmp
sarb
and
loopne
stc
stc
into
push
mov
call
and
into
cmp
xchg
sbb
aam
hlt
cmp
ljmp
cmp
add
jmp
mov
rolb
pop
push
or
pop
inc
push
xlat
int3
mov
repz
add
mov
enter
lcall
lods
dec
in
stos
lret
dec
hlt
lahf
into
imull
mov
stos
lock
ljmp
insb
xchg
mov
mov
addr16
adc
mov
pop
iret
sub
or
xchg
pop
cmpsl
jl
inc
push
bound
jb
aaa
movsb
cmp
sarl
jecxz
add
dec
jae
adc
and
mov
imul
scas
inc
mov
pop
lock
in
and
and
jg
cmp
add
jmp
fsubp
in
mov
in
ljmp
xchg
mov
hlt
mov
aas
mov
cmpsl
sbb
dec
jnp
push
xchg
push
xlat
push
pop
mov
shlb
stos
insl
sahf
inc
sbb
mov
mov
xchg
fists
jbe
aad
or
in
xchg
dec
or
xchg
cs
mov
test
inc
xor
rcrb
or
movsl
std
insl
dec
sar
dec
and
mov
mov
and
insb
ja
ja
popf
ret
lahf
mov
sbb
call
sti
shl
stos
mov
or
add
pop
push
je
jno
addr16
insb
mov
mov
lea
stos
lcall
xchg
pushf
adc
xor
in
not
rclb
sub
outsb
enter
inc
mov
xor
add
mov
and
jge
outsl
push
lods
in
sbb
adcb
scas
leave
cli
lods
dec
pop
push
lock
lahf
sub
jo
sub
cwtl
loop
mov
in
fimuls
lret
repz
jge
dec
jae
xor
roll
lock
les
mov
je
aaa
loop
mov
mulb
insl
loope
testl
test
movsb
arpl
jno
aaa
hlt
sbb
push
jnp
aaa
and
sbb
lea
sub
mov
ds
xorb
out
testb
ficoms
int
aam
pop
dec
fsts
xor
movsl
push
and
and
sbb
loop
and
fdivrl
or
sbbb
jnp
xor
xor
mov
aad
lret
sti
or
and
add
sub
mov
pop
sub
cmp
sbb
fs
sbb
loopne
jo
aad
lea
in
push
in
cwtl
das
dec
fwait
aaa
int3
aad
jle
mov
ds
sti
int3
mov
ds
adc
push
push
jo
adc
push
mov
mov
inc
dec
in
or
or
lods
lahf
cmp
jp
jnp
insl
and
pop
dec
clc
ljmp
jnp
add
push
dec
fs
test
fildl
lods
mov
mov
idivb
popf
push
icebp
scas
xchg
xchg
xor
lcall
push
xchg
stos
call
repnz
xchg
xchg
je
cwtl
incl
out
sub
add
cmp
in
mov
mov
repnz
adc
fwait
adc
cmpl
adc
mov
sub
neg
mov
lret
mov
cmpsl
and
pop
mov
push
hlt
jo
sar
fcmovnbe
or
or
out
sub
mov
aas
dec
pop
sub
push
mov
jnp
loop
jno
lods
mul
subb
outsb
out
and
adc
clc
pop
jbe
pop
loopne
popf
fnstsw
outsb
cmc
ljmp
fs
dec
mov
inc
pop
orb
scas
popa
fs
jno
cmp
xchg
fwait
xor
fimuls
inc
lcall
sbb
test
lds
jecxz
call
sub
jecxz
lret
fimuls
adc
push
and
repnz
cmpsl
sbb
push
sbb
mov
les
stc
mov
and
sbb
mov
or
call
mov
push
inc
retw
sbb
test
jl
ja
mov
pop
bound
mov
mov
imul
call
lret
cmp
and
xor
push
loope
arpl
xor
push
inc
aaa
dec
outsb
inc
mov
out
hlt
lcall
es
adc
pop
mov
stc
nop
jl
insb
sub
pop
dec
add
femms
add
jo
xchg
or
and
les
lahf
insl
in
or
mov
negl
in
jg
sbb
xchg
mov
sti
or
sub
in
icebp
inc
mov
rorb
es
jg
mul
cmc
sti
or
xchg
dec
aas
addb
sbb
cmpsb
pop
mov
mov
sub
push
fs
fisubrl
mov
inc
in
inc
sub
test
dec
data16
dec
aaa
push
or
xchg
aas
adc
sti
dec
mov
pop
lds
inc
jnp
adc
les
mov
push
ss
cmp
enter
mov
arpl
xchg
jecxz
jle
ss
call
cmp
add
aad
adc
inc
dec
pop
xchg
sub
movsb
xor
gs
ja
add
js
lods
andl
in
mov
pop
add
dec
mov
and
xchg
sub
cmpsb
dec
adc
popa
mov
scas
jecxz
in
push
aas
mov
sbb
inc
jp
sti
std
jecxz
sbb
call
adc
outsb
pop
mov
sub
idiv
hlt
aad
flds
pop
imul
popa
sbb
ds
insb
push
sub
or
andl
out
xor
mov
stc
in
outsb
out
jno
lods
adc
and
xchg
aas
fwait
push
pop
and
scas
lods
cmp
mov
scas
push
out
in
ja
loope
push
jecxz
push
mov
repnz
seto
add
mov
repnz
imul
jnp
dec
aam
inc
sbb
mov
cmp
lahf
push
dec
mov
les
and
pop
insl
or
inc
mov
push
mov
push
and
cmp
aaa
das
xbegin
outsl
push
mov
xchg
xchg
jecxz
stos
mov
aam
or
fcomp
das
cmp
arpl
ret
mov
inc
inc
pop
lahf
and
mov
in
xlat
sub
mov
mov
rol
cmp
inc
scas
insb
rcll
fwait
lods
iret
add
and
movsb
push
rorl
mov
data16
test
xor
loop
pop
jl
cmp
or
mov
repnz
jns
xor
sti
negl
in
and
iret
ds
cmp
sub
popa
mov
xchg
scas
cmpsb
mov
mov
fisubrl
jae
into
push
test
mov
mov
shr
aam
inc
std
sti
into
jns
mov
cltd
mov
pop
nop
fstpl
arpl
fwait
add
jb
dec
sub
cmp
nop
imul
or
jmp
jle
iret
dec
xchg
pop
je
jge
push
insl
inc
subl
push
or
jbe
idivb
mov
xor
dec
pop
orl
add
fdivp
cli
nop
mov
out
mov
out
scas
arpl
mov
pop
out
cmc
sub
popa
fbld
cmp
aam
les
ret
push
pop
clc
imul
int3
xor
or
sub
mov
jp
jp
mov
roll
sub
sbb
ja
lret
sbb
lret
add
sahf
call
lahf
sbb
test
xchg
mov
outsl
cltd
xor
xchg
mov
push
xchg
xchg
xchg
out
xor
push
pushl
insb
and
cmp
aaa
and
cli
and
add
mov
pop
xchg
inc
lea
cmp
or
inc
data16
repz
add
jns
bound
repz
into
dec
movsb
mov
rcll
mov
into
push
cmp
xorb
flds
aas
arpl
mov
movsl
into
lret
iret
cs
pcmpeqw
in
pop
pop
addl
aad
arpl
adc
and
into
add
xor
int3
add
sbb
in
cwtl
lret
or
cmp
push
mov
push
movntq
and
xor
clc
je
es
hlt
enter
arpl
addr16
pop
push
sbb
out
in
pop
fldenv
sahf
sbb
insb
out
xlat
jmp
stc
into
mov
push
xchg
les
cmpsl
xor
push
and
xchg
jo
popa
data16
pop
pop
iret
xor
lret
cmp
jmp
stos
push
and
or
adc
jns
fistl
jle
or
mov
ret
pop
in
mov
ret
loope
cli
js
mov
incl
jl
mov
adc
sbb
pop
xor
add
cmc
jo
pop
xchg
popf
push
rcr
ret
and
and
mov
add
and
jns
and
xchg
pushf
sar
fwait
addr16
js
dec
lea
pop
sbb
push
push
inc
jo
mov
sbb
sbb
sahf
movsb
add
jbe
push
sbb
jp
sub
push
out
pop
cmp
xor
test
stos
mov
scas
or
and
popf
stos
outsb
mov
jp
mov
js
cmp
or
repnz
and
call
test
testb
mov
jecxz
sbb
pop
jo
cld
add
aas
pop
pop
inc
xchg
mov
pop
in
cltd
mov
mov
sbb
push
push
cmpsb
push
out
ret
into
adc
xchg
and
mov
lods
sbb
int
and
ds
mov
mov
mov
jne
cmp
xchg
insl
lea
adc
lahf
adc
mov
push
dec
dec
sbbb
or
and
pop
xchg
sub
cmc
jg
popf
out
ja
inc
js
out
mov
repz
jnp
enter
add
jl
jnp
adc
out
and
ss
jecxz
cmc
push
fsts
arpl
repz
mov
xchg
testb
std
cmp
push
sbb
cmp
daa
mov
fisubrl
push
fisubl
pop
inc
fs
jno
sbb
jnp
mov
out
cmpl
test
xchg
aam
lods
fucom
xchg
mov
push
and
mov
loopne
and
sbb
test
add
aad
pop
in
ss
xchg
std
and
mov
mov
pop
ret
xchg
fwait
gs
add
and
and
loopne
sbbb
ljmp
xor
stos
jne
scas
push
lods
cmc
pop
and
xchg
mov
sarl
test
movsb
mov
or
mov
sbb
ja
dec
or
fwait
iret
movsb
xor
outsl
insb
ljmp
mov
jmp
cmp
in
insl
pusha
test
xchg
out
jmp
loope
ljmp
or
adc
jne
dec
cmc
cli
dec
xor
shrb
inc
lds
pop
pop
leave
push
daa
pop
inc
inc
push
sub
mov
and
cmp
lret
push
in
leave
mov
jno
xchg
flds
jl
bound
into
xor
pop
sbb
push
mov
jecxz
push
xor
dec
xor
inc
incl
in
leave
adc
pop
aas
repz
idivb
mov
call
icebp
mov
test
scas
cli
adc
orb
jge
movsb
lods
outsb
adc
sub
mov
in
mov
stos
nop
mov
cmp
add
cmpsl
mov
or
lea
mov
insl
fs
xchg
cmpsl
fsubr
inc
push
mov
lock
mov
adc
sbb
cmp
mov
imul
out
aaa
push
movl
push
dec
test
lods
jecxz
aad
xchg
or
xchg
in
sbb
jp
fildl
push
std
pop
dec
xchg
cmp
cmpsb
jns
xchg
inc
es
jle
fwait
mov
imul
ret
mov
out
iret
push
hlt
pushf
sarb
aad
pop
addb
fwait
leave
ljmp
mov
clc
movsl
inc
daa
sbb
cmpb
popa
int
fdivrs
push
pop
sarb
popl
mov
push
adc
pop
js
dec
push
mov
jg
dec
ss
xchg
pop
or
sarb
stos
call
sti
adc
insb
jl
lahf
xor
stos
inc
xchg
pusha
push
daa
in
or
adc
fstps
rorb
popa
inc
push
sbb
dec
rcrl
jp
xchg
sub
leave
in
loopne
push
xchg
cmp
sub
andb
cmc
push
in
inc
or
cmpsb
movsl
cltd
mov
addl
es
iret
das
int
popa
mov
bound
add
mov
jbe
imull
hlt
gs
inc
xor
mov
adc
push
and
sbb
repz
sbb
push
cmp
push
sub
cwtl
add
inc
das
mov
subl
test
add
sbb
movsl
fsubrs
dec
out
movd
mov
daa
js
icebp
mov
mov
sub
dec
adc
icebp
leave
sbb
sti
orb
rcll
cmc
mov
fidivl
xlat
inc
sub
aad
out
cli
or
lods
sub
mov
sub
add
dec
outsl
cmp
lret
insb
dec
pop
push
dec
stc
ret
pop
movb
sbb
jno
rorb
ds
jbe
testb
cmpsb
fstpt
lcall
je
aam
imul
lret
fst
jo
out
pushf
jns
or
call
cmp
ficomps
enter
xor
sub
pop
inc
pushf
ljmp
gs
cmp
sub
ss
sbb
and
ss
out
sbb
jp
dec
jne
mov
in
inc
xchg
lods
adc
adcl
insl
adc
sub
jnp
dec
inc
jb
pop
pop
mov
jo
ret
lahf
scas
mov
decl
sbb
pop
inc
repz
cld
mull
mov
jae
hlt
rorb
rorl
dec
lods
mov
sbb
jbe
or
sarl
leave
bound
jle
xchg
jb
fmull
and
fsubrs
or
cmp
pop
fnstsw
in
loopne
imul
es
mov
add
scas
jmp
add
sti
sbb
sbb
flds
hlt
sub
cld
mov
movsb
fwait
addl
in
icebp
enter
ja
mov
xlat
cwtl
mov
jmp
ret
popa
push
in
bound
popa
xchg
aas
mov
mov
test
aad
daa
dec
xchg
xor
movsl
or
out
jmp
dec
mov
jmp
adc
sbb
adc
sbb
push
mov
mov
fstpt
das
xor
mov
or
arpl
jns,pt
arpl
sub
fcmove
fidivrs
xchg
lea
sbb
cmc
cli
insb
mov
or
xor
push
daa
ljmp
jmp
fsubrs
addr16
adc
test
rclb
cmp
dec
jl
popa
inc
scas
cmc
sbb
dec
and
pop
cmpl
outsb
or
dec
pusha
out
xor
ss
xlat
push
mov
sti
outsb
mov
sub
mov
dec
mov
jno
mov
cwtl
mov
mov
add
mov
movsb
lret
and
and
cwtl
dec
ret
adc
mov
mov
in
ret
fmull
sub
xchg
sub
xlat
filds
shrl
xchg
enter
and
xor
orb
popf
int3
sbb
lret
movsl
sarl
dec
test
or
stos
mov
pusha
xor
mov
cmp
cmp
xchg
jp
pop
daa
jbe
push
inc
adc
mov
pushf
adc
bound
dec
data16
gs
sub
fsts
into
adc
jno
mov
sbb
add
loop
and
lea
fcomps
lret
add
cmp
push
push
mov
repnz
out
fs
leave
dec
or
jnp
ds
fsts
testb
jmp
mov
mov
loopne
pushf
daa
clc
adc
cwtl
add
subl
jne
mov
std
daa
jns
daa
mov
xchg
imul
mov
sbb
test
cltd
inc
pop
out
mov
iret
xchg
or
xlat
mov
or
push
fsubl
sub
sbb
js
push
les
aam
shl
fstpt
mov
inc
jle
adc
xchg
cmp
xchg
out
or
push
ljmp
in
push
mov
sbb
cltd
iret
adc
repz
insb
lods
jne
icebp
mov
insl
xor
add
sbb
jb
mov
stos
ja
dec
js
fidivl
mov
les
sbb
mov
push
jge
mov
add
cs
push
nop
inc
xchg
sub
mov
dec
cmpsl
jne
fcoml
outsl
clc
clc
imul
call
sub
mov
lods
in
add
popa
mov
mov
das
adc
clc
popa
add
and
mov
shrb
mov
ror
shll
adc
shl
sbb
test
test
or
pushf
xchg
mov
sti
fyl2xp1
jb
ss
mov
sbb
jbe
jge
pop
les
push
das
hlt
cmp
sbb
popf
sbb
sbbb
xchg
cmp
mov
jb
fwait
xchg
dec
mov
lret
int
mov
dec
lods
out
les
jne
call
jecxz
push
sbb
mov
push
pop
cmp
xor
cmpsb
lods
sbb
sti
shrb
sbb
pop
sub
pop
in
inc
xor
fs
and
fsubs
into
cmp
mov
cli
sub
mov
repnz
out
gs
fisttps
mov
mov
mov
mov
sub
fdivrs
jmp
jl
mov
inc
imul
int3
add
or
shrd
jp
jb
out
xchg
pop
pop
and
adc
push
jae
nop
push
test
imul
fsubr
std
mov
xchg
out
repz
push
mov
cmpsb
sti
jae
cwtl
negl
lret
sub
ret
xor
insb
pop
push
imulb
insl
mov
push
sub
sbb
fs
ret
or
xor
mov
mov
sub
outsb
xchg
mov
into
rcr
std
out
fldcw
inc
sbb
popl
std
notb
sub
pop
dec
shl
ja
dec
lret
xchg
out
loope
mov
or
lahf
pop
scas
pop
adc
add
jb
add
jge,pn
es
out
fwait
iret
inc
lods
xchg
cwtl
or
insb
mov
repnz
xchg
and
rolb
sar
lcall
notl
popa
xor
cmp
add
rcrb
dec
sti
insb
je
lret
lahf
insb
mov
sub
inc
xor
stos
je
rolb
loopne
sub
int
or
icebp
fsubrl
stc
pop
xor
out
popa
cli
insb
adcl
imul
rorl
add
pop
push
push
fcoml
push
mov
mov
add
add
lret
repnz
lcall
aas
stos
fwait
inc
jmp
jmp
ja
push
mov
loope
dec
xchg
push
inc
movsl
mov
aad
lods
add
mov
mov
xor
push
adc
daa
or
xchg
test
loop
mov
xchg
adc
ret
pcmpeqb
inc
jb
add
bound
aam
xchg
scas
outsb
xor
insl
and
fs
mov
fmull
lret
loop
cmp
mov
push
sub
into
fidivrl
mov
mov
nop
push
inc
inc
adc
add
js
cmp
repz
pop
std
aam
add
inc
js
cmp
nop
mov
jp
adc
cmp
int3
movsb
nop
arpl
or
outsl
lret
jl
imul
sbb
xchg
sbb
dec
dec
arpl
scas
scas
movsl
imul
sbb
adc
xchg
clc
sbb
push
mulb
pop
xor
mov
loop
imul
sub
dec
adc
add
insl
and
xor
mov
stos
insl
mov
sti
lahf
aam
mov
out
adc
push
or
idiv
xor
dec
push
arpl
cmp
lret
imul
scas
mov
fildl
lock
es
inc
movsl
pop
out
pushf
pop
mov
test
mov
bound
in
mov
mov
adc
mov
dec
jmp
fstp
adc
mov
inc
cmp
hlt
jns
out
push
int
cli
in
sbb
xor
jnp
mov
fdiv
fmuls
arpl
addr16
ror
jne
adc
ret
repnz
mov
push
dec
push
push
mov
test
sbb
fidivs
mov
add
mov
sbb
and
adc
dec
or
ror
cmp
lcall
or
in
or
out
lods
xchg
dec
mov
adc
and
out
sub
outsb
fildll
lds
ficoms
add
pop
movsl
fcoms
aam
mov
lods
cmpsb
pop
popa
xchg
bound
lods
aad
popa
inc
cmp
push
shrl
mov
cmp
jl
xor
sbb
lret
pop
jge
mov
sbb
push
lods
sbb
mov
push
and
mov
cmp
mov
mov
in
cs
and
fmull
xor
insb
inc
daa
xor
shlb
xchg
mov
ljmp
mov
movsl
enter
mov
lret
xor
sbb
daa
dec
xchg
data16
fmul
mov
movsl
sub
cmpsb
mov
sbb
push
dec
out
aam
cli
mov
dec
imul
pop
mov
in
jnp
movl
adc
or
int
cwtl
mov
jo
mov
mov
jmp
imul
mov
mov
addb
push
lret
lock
mulb
lea
mov
stos
pop
jecxz
in
inc
sbb
jne
cmpl
xchg
dec
xchg
pop
add
data16
mov
fsts
insl
xorb
sbb
lock
iret
mov
negl
lds
add
movsb
add
inc
shl
cs
add
mov
test
push
mov
loopne
inc
pop
pop
inc
lcall
mov
pop
test
mov
xlat
je
lods
jnp
add
loop
add
inc
bound
xchg
push
push
push
fisubs
sti
insb
std
inc
inc
lds
inc
sbb
fmull
stos
inc
lods
inc
nop
enter
out
jne
mov
fistl
iret
sahf
push
mov
dec
into
mov
or
test
and
jno
mov
pop
xchg
add
scas
jbe
dec
xchg
jb
jne
fsubs
mov
push
xchg
xor
out
dec
lret
sbb
push
shr
stc
ja
in
sar
movsl
and
add
fucom
sub
pop
inc
fs
cltd
scas
or
cmp
repnz
into
add
lcall
pmovmskb
loop
aad
movsb
or
jae
xor
pop
xor
popa
push
jo
dec
test
inc
push
sti
inc
jns
imul
add
or
mov
xor
pop
inc
sub
sub
mov
xor
imul
icebp
iret
mov
ret
push
cmp
pop
fwait
cmp
inc
sbbb
je
int3
jecxz
fwait
les
repz
inc
jbe
lcall
push
in
notl
inc
outsb
cli
xchg
sub
push
sub
dec
xor
pop
inc
in
lods
cmp
xchg
cmp
xrelease
pushw
mov
sub
fsubrl
std
cmp
inc
into
addl
iret
pop
fcmovnb
mov
notl
mov
sti
rcrb
push
in
imul
cmpsl
jmp
int
out
sub
xor
cmpsl
xchg
or
outsb
aad
or
out
push
fisubrs
stos
add
into
shrb
ret
sub
inc
inc
mov
in
ljmp
jmp
mov
in
repz
xchg
fsubl
cld
mov
lods
mov
in
imul
dec
cmp
cmpsl
mov
fs
cmp
into
movsl
popf
lock
mov
fwait
ds
or
xchg
das
hlt
xchg
xchg
inc
dec
out
mov
cmpsl
jae
jo
test
sti
fwait
adc
movb
pop
aam
and
mov
xchg
sbb
stos
jg
sbb
ja
repz
jle
cmp
lcall
and
ret
imul
push
fwait
sub
ss
fmull
and
or
and
dec
js
xor
test
insb
sub
mov
aad
push
mov
dec
popa
shll
inc
cwtl
xor
mov
sti
mov
jp
jmp
and
push
aas
xchg
icebp
das
ret
mov
data16
inc
movsb
test
mov
push
xchg
xchg
lahf
sbb
ret
ds
outsl
mov
icebp
scas
sub
push
push
enter
inc
add
mov
mov
lods
dec
mov
dec
pop
shr
add
mov
mov
mov
jmp
out
in
call
rcrl
xchg
add
sub
mov
cmp
jo
sub
mov
stos
mov
bswap
shll
jne
imul
or
adc
mov
xchg
cwtl
and
xor
and
pop
cmp
test
mov
cmp
scas
mov
xor
mov
jno
aas
dec
or
pushf
aaa
cwtl
cwtl
mov
xor
pop
mov
pop
les
add
xchg
sub
push
popf
int
lcall
test
mov
mov
sti
jnp
pop
bound
stc
xor
push
xchg
push
lds
push
push
inc
push
jne
xor
push
mov
adc
mov
pop
jbe
mov
inc
mov
or
jnp
xchg
stos
mov
inc
outsb
cmp
pusha
pop
jne
cwtl
inc
sub
inc
sub
or
push
lea
dec
adc
pop
jno
jmp
mov
mov
movsb
imul
mov
in
sbb
repnz
mov
in
lods
add
adc
adc
scas
pop
mov
popf
push
dec
fidivs
and
cmp
cli
lret
lahf
adc
xchg
insb
push
mov
jae
xor
outsl
hlt
xor
jae
adc
hlt
xor
xchg
sub
cld
pop
loop
xchg
out
mov
jae
dec
and
pop
jmp
scas
mov
movsb
mov
addr16
iret
cmc
push
dec
fdivrs
filds
shl
loopne
scas
bound
in
fcomps
insl
mov
mov
mov
push
jg
xor
popl
and
cld
mov
ss
mov
std
leave
pop
mov
adc
inc
scas
ret
xchg
xchg
addb
and
imul
pop
mov
adc
push
cld
nop
inc
es
and
push
insb
dec
orl
mov
das
xchg
daa
lahf
test
or
ja
and
mov
in
test
lods
in
sbb
loop
ror
loop
xor
or
xor
xchg
aam
aaa
sbb
rcrl
jg
std
jnp
inc
jmp
mov
hlt
push
jp
imul
mov
sub
movsb
xchg
cmp
cmp
jmp
or
adc
movsb
xchg
add
leave
jecxz
into
icebp
sub
ja
cmp
inc
jle
lock
lea
mov
or
dec
mov
xchg
scas
repnz
cli
sub
lret
mov
or
sbb
inc
mov
mov
xor
shrl
push
and
lea
fsts
hlt
mov
popa
insl
xor
fadds
cmp
inc
lcall
xchg
sbb
push
out
jb
int3
ss
test
in
outsb
nop
jnp
mov
sbb
sti
add
mov
push
popw
leave
and
mov
push
and
rcr
jb
adc
jecxz
int
fimull
leave
insl
pop
outsl
add
ret
das
rcll
inc
push
dec
or
mov
repz
arpl
mov
and
push
das
pop
sbb
out
lret
pop
sahf
stos
push
add
dec
jmp
push
inc
test
jg
iret
clc
push
sub
int3
sbb
mov
jmp
jbe
jno
movsb
push
leave
jmp
pusha
or
xchg
xlat
and
lahf
clc
inc
rcll
mov
je,pt
in
and
inc
or
shrl
push
mov
dec
inc
cltd
rcrb
add
leave
fldl
mov
xchg
lcall
cmp
addr16
sbb
cmp
int3
dec
mov
movsl
shll
lds
inc
lods
jecxz
imul
push
xlat
push
gs
sbb
sahf
add
subb
dec
jge
adc
and
outsl
add
in
pop
in
stos
mov
xchg
cmpsb
fildll
sub
cmp
or
xchg
cmpsl
aas
dec
push
lods
jmp
inc
mov
push
mov
fs
ficompl
dec
stc
push
sahf
out
in
xchg
cvttps2pi
adc
mov
or
fidivs
shr
dec
add
cmpsl
enter
call
daa
sbb
mov
int
xchg
clc
pop
fistl
inc
gs
lcall
cltd
in
movl
je
lret
inc
out
mov
fwait
sub
sti
cltd
shll
mov
icebp
xchg
push
lea
out
mov
lcall
mov
xchg
int
fcmovnu
repnz
pop
pusha
mov
and
ljmp
inc
xor
rcll
dec
les
sbb
xchg
mov
inc
push
inc
or
and
clc
dec
dec
out
add
inc
mov
lretw
push
mov
fdivrs
jecxz
test
cs
fmul
mov
xor
jae
cmpsl
cwtl
out
inc
ljmp
mov
fidivrl
xchg
jno
mov
cmp
daa
rcrb
lret
fnstenv
sub
or
fimuls
push
pushf
jge
xor
adc
mov
mov
nop
clc
mov
cli
test
std
add
fdivrs
out
dec
jne
sub
jnp
add
xor
mov
jecxz
push
sub
jnp
or
mov
push
testl
mov
add
add
in
jle
ljmp
dec
cwtl
lea
mov
mov
push
shl
jle
scas
mov
out
xor
stc
loope
ja
push
dec
fistl
mov
inc
aas
push
std
out
and
xor
bnd
in
lahf
cmpsl
sbb
adcl
jge
ss
mov
push
cli
sbbl
jo
in
jne
push
jle
or
jmp
ds
push
imul
lock
mov
out
inc
xchg
add
aaa
mov
test
and
pop
xor
and
incl
cmp
sbb
les
mov
or
add
addl
mov
cmp
mov
out
pop
jecxz
push
pop
push
mov
repz
scas
push
sub
rcrb
jecxz
nop
or
popf
inc
add
outsb
mov
xchg
jbe
sbb
push
xor
jns
mov
das
int3
mov
push
out
jp
sub
les
ss
cmpsb
mov
dec
hlt
mov
out
inc
sub
ss
je
mov
and
mov
mov
or
out
in
mov
jmp
xchg
roll
jnp
mov
pop
or
call
fdivrl
pop
fldl
shlb
jge
outsl
in
testb
pop
sub
inc
dec
mov
push
add
pop
das
jae
fs
sbb
sub
mov
gs
dec
or
pop
sub
stc
es
idivl
dec
sbb
andb
je
aad
sub
mov
xor
shll
stos
lock
popl
test
push
jne
jmp
das
push
leave
daa
and
xlat
ret
jecxz
xor
xchg
xor
push
xor
popf
lock
call
notb
cmp
push
popa
sbb
out
imul
aaa
mov
pusha
jno
testb
cld
aaa
adc
mov
test
and
jmp
and
pusha
pop
js
inc
hlt
inc
mov
lods
mov
xchg
jno
inc
dec
inc
clc
cmp
and
xchg
out
fistl
and
push
rolb
sub
cmpsb
mov
or
js
nop
jg
insb
nop
fisubrs
je
sbb
xchg
xchg
jno
out
int3
movl
fists
repz
leave
outsl
fwait
std
ret
jns
inc
test
lock
bound
push
dec
loope
aam
fisubrl
and
cmovbe
add
inc
loope
jge
pop
dec
add
mov
lea
jmp
sub
cld
iret
fs
int
and
sbb
pop
jmp
pop
push
xchg
adc
xor
arpl
cmp
jg
fsts
mov
pushf
ret
mov
imul
pushf
sub
stc
push
rorl
imul
add
mov
pusha
and
stos
sbbl
int
js
out
repz
sub
mov
or
mov
jg
fdivr
xchg
imul
and
lret
sbb
je
cmpsl
gs
lret
sub
iret
mov
pop
push
in
dec
or
adc
nop
stc
push
push
ss
shll
clc
add
stos
pop
str
test
ja
mov
sti
mov
mov
inc
and
inc
or
fidivl
push
dec
popw
in
loopne
and
pop
cwtl
insl
in
cmp
sub
dec
pop
aad
out
adc
in
fnstcw
mov
imul
lods
push
out
cmp
xchg
xchg
rorb
mov
in
sub
pop
dec
xchg
or
jg
stc
stc
xor
jmp
mov
mov
add
mov
divb
inc
and
jae
std
inc
pushf
sbb
sbb
jle
punpckhbw
loopne
xchg
cmp
mov
dec
daa
xor
sti
mov
adc
out
cmpsl
add
aam
hlt
cmp
les
rcll
lret
fiaddl
test
add
sbb
jbe
lock
mov
jecxz
daa
cmp
lea
fsubrs
pushf
mov
ljmp
sbb
and
xor
xor
test
or
out
mov
sbb
push
aas
sbb
sti
xor
and
out
xchg
and
negl
clc
mov
fidivs
mov
cld
repnz
sub
adc
inc
xchg
jl
pop
mov
outsl
jne
invd
xchg
addr16
outsb
dec
push
or
cmc
xor
xchg
xchg
inc
into
cmc
ljmp
sbb
shl
outsl
cmp
jecxz
in
in
hlt
mov
xor
push
loop
inc
mov
mov
out
inc
fs
out
and
jns
and
pop
and
pop
jge
sub
insb
add
cmpsb
and
dec
stos
cs
mov
sub
sub
push
sbb
push
scas
xchg
jl
cmp
and
or
pop
rcrl
cmp
add
fs
push
in
mov
add
cmp
mov
mov
outsl
pop
and
loop
adc
dec
js
lods
push
pop
ds
jnp
cmpsl
mul
dec
outsl
inc
inc
lods
idivb
fisubs
xchg
inc
add
in
pop
pop
shrl
in
mov
xchg
or
inc
or
inc
mov
and
lods
lahf
jle
or
or
xchg
iret
fidivrl
xchg
mov
cmpsl
data16
in
stc
insl
stos
ret
mov
push
mov
or
ret
jl
sbb
into
cmp
dec
mov
lcall
cmpl
loope
loopne
jg
pop
xlat
cmp
fs
fcomps
and
xor
test
hlt
xchg
and
hlt
jg
xchg
stos
cltd
cltd
xlat
xor
jne
movsb
into
or
lret
sub
popa
mov
jl
inc
sbb
out
clc
cwtl
xchg
mov
iret
jae
jle
sub
out
add
xlat
jne
xchg
call
rcrb
jg
test
das
movsb
push
sbb
push
sub
mov
mov
xchg
cmp
inc
cmpsb
nop
or
bound
les
test
push
mov
lods
pop
adc
jb
xor
das
mov
jge
or
fs
or
xchg
mov
call
lret
imul
pushf
aam
out
shll
pop
fwait
mov
cmp
out
fwait
cmpsb
ret
sub
xchg
inc
enter
sbb
lret
add
rcrl
outsl
mov
push
xor
sub
mov
inc
lret
loope
out
push
xchg
cwtl
sbb
ljmp
data16
xor
js
lods
dec
pusha
sti
ljmp
aaa
jo
sarl
les
xchg
leave
mov
je
stos
pop
cmp
jb
lcall
stos
data16
mul
fcmovu
hlt
cld
cmp
sbb
jl
push
rcrl
xor
mov
rcrl
cmp
pop
pop
daa
or
std
in
mov
pop
jns
xchg
push
loope
mov
imul
add
mov
mov
cmp
mov
inc
jbe
arpl
mov
outsl
adc
addl
adc
push
es
xorl
dec
shll
loop
add
insb
adc
xor
pop
dec
inc
les
add
mov
add
push
mov
sbb
sbb
arpl
pop
pop
stos
jp
sarl
cwtl
xor
and
add
pusha
jnp
test
and
outsb
ret
pop
ljmp
and
mov
mov
outsb
ret
mov
daa
lds
push
inc
push
leave
push
push
xor
fwait
pop
out
mov
dec
add
xor
bound
divb
mov
push
fcmovnb
mov
dec
xor
movsl
mov
mov
sbb
inc
mov
jle
fwait
push
mov
sub
ficoms
stc
add
out
lret
in
lret
movsb
into
or
in
pop
xchg
popf
mov
sbb
or
jmp
addr16
adc
idivl
loop
or
jecxz
decl
push
sbb
add
push
aaa
jno
cmc
mov
xchg
or
out
add
frstor
cmpsb
mov
mov
fildl
loope
test
test
into
movsl
inc
dec
sarl
mov
mov
daa
lea
adc
je
stos
mov
inc
jmp
in
stc
fcomps
adc
mov
xorl
jle
cwtl
in
cmp
sti
jmp
fisubl
dec
fnsave
inc
add
loop
cmp
negb
inc
push
pop
rcrb
add
into
dec
test
inc
jg
add
push
adc
mov
in
ljmp
aam
push
out
inc
xchg
inc
inc
out
xchg
das
mov
jecxz
lods
rorb
mov
push
sub
imul
cmp
xchg
aas
rcrb
inc
adcl
test
movsb
imul
mov
rol
add
sti
popf
cmp
mov
jp
cmp
push
inc
in
or
popa
cmp
repnz
mov
icebp
mov
fs
ds
stc
scas
shlb
into
jge
pop
mov
xchg
sbb
test
data16
aaa
aaa
push
addr16
mov
jbe
push
orb
ret
push
mov
or
lahf
aam
shlb
inc
les
js
icebp
pop
div
pusha
push
sub
cmpsb
mov
sbb
test
push
std
test
mov
cmpsl
test
inc
fistpl
cmp
xchg
push
hlt
dec
ds
bound
sbb
mov
and
sub
sub
fwait
dec
dec
push
mov
es
shr
les
fists
scas
push
push
aas
mov
sarb
or
pushf
jle
andl
inc
inc
ret
push
leave
scas
cmpsl
stc
pop
xchg
jl
repnz
push
inc
pusha
mov
test
xor
pop
repz
jne
adc
movhps
add
dec
fsubl
mov
sub
jns
test
mov
fisubs
insl
and
adc
daa
pushw
sahf
xchg
mov
pop
rorl
sub
jg
aam
xchg
rcrl
and
mov
sbb
out
cwtl
xchg
lret
adc
gs
mov
adc
cmp
in
adc
mov
push
xor
lahf
or
pop
movsl
mov
xchg
jno
add
sub
pop
mov
movsb
arpl
sub
pop
push
fucomi
int3
sti
movsb
and
incb
dec
jae
pushf
stos
fcomps
mov
cmp
clc
pop
pop
daa
mov
sub
mov
mov
push
pusha
orb
jl
daa
jp
vmread
cmp
push
mov
das
mov
push
je
ret
inc
adc
and
sbb
movsb
pop
push
lods
xor
outsl
sbb
ret
fisttps
cmc
mov
push
gs
pop
pop
xchg
adc
pop
imul
sbb
adcb
lcall
std
stos
fildl
mov
jmp
idiv
imul
subb
mov
and
mov
sub
adc
rorb
mov
jbe
test
stos
and
loopne
stos
fdivrs
cmp
lds
bnd
push
cwtl
rclb
sub
jp
insl
mov
fbstp
push
pop
pop
inc
js
enter
xor
push
fnsetpm(287
jp
cmc
sub
xchg
iret
xor
push
mov
lret
fcompl
mov
ret
mov
ret
jl
stos
xor
mov
stos
and
int3
add
jne
push
in
mov
xor
pusha
adc
mul
xor
sbb
out
mov
cmp
test
mov
aaa
aas
fldenv
dec
fucom
outsl
sar
lods
lea
push
pop
mov
mov
in
pushf
cmp
int
sbb
in
iret
or
insl
rorl
jnp
push
es
xor
scas
inc
mov
mov
je
push
or
xchg
popa
sbb
loop
mov
push
xchg
jns
ret
ljmp
jmp
dec
fimuls
xor
out
in
xchg
lahf
mov
pop
mov
xor
js
cmpsb
mov
mov
add
inc
ret
movsb
pop
daa
cmp
imul
or
ja
lods
and
bound
mov
out
hlt
sbb
inc
sbb
inc
push
lea
push
fmul
jmp
cmp
gs
lret
insb
inc
push
xchg
ljmp
pop
nop
xor
aaa
jo
sub
jp
outsb
jbe
xorb
dec
xlat
aas
mov
mov
jno
add
dec
je
xchg
ljmp
into
movsl
repnz
out
lods
jo
push
cltd
stos
adc
xchg
push
mov
pop
push
and
outsl
cmp
cmpsl
incl
xchg
and
cmpsl
mov
movsb
out
sbb
shr
fcmovnb
stos
xor
cld
subb
push
jbe
push
xchg
lret
jno
sub
adc
xchg
sub
in
jb
dec
jge
lock
in
ret
fidivrl
out
or
xchg
and
pushf
aad
dec
jecxz
inc
int
test
dec
sub
addl
adc
push
out
xchg
sub
lahf
lcall
xor
repz
imul
stos
jnp
jne
or
jmp
outsl
mov
mov
and
mov
mov
push
das
push
mov
jno
push
insb
fmull
sti
sbb
gs
mov
popa
filds
hlt
push
js
in
loope
fbstp
pop
inc
mov
mov
jno
push
cs
xchg
enter
outsb
imul
xor
adc
pop
shrb
cltd
mov
lcall
mov
out
inc
mov
and
jae
jbe
dec
lods
jl
imul
jmp
and
cmpps
sbb
mov
xor
fyl2xp1
rcl
cltd
jmp
pop
arpl
mov
xchg
inc
mov
xor
ss
jns
imul
ss
incl
jbe
mov
les
pop
dec
or
push
cmpsl
add
out
aad
and
sbb
or
sub
ja
lret
jmp
sub
out
cmp
adc
adc
add
arpl
jmp
std
fldenv
sbb
sbb
cmp
xchg
insl
in
mov
sahf
iret
roll
push
fisubrl
roll
pop
push
cmp
es
mov
inc
stos
jne
jo
push
ret
push
pop
inc
mov
jmp
push
push
push
sti
lahf
wrmsr
out
push
cmpsl
cmpsl
jp
lahf
fidivrs
sbb
adc
mov
adc
repnz
daa
push
fs
sarl
fwait
cmp
jns
lcall
mov
out
jae
inc
adc
mov
frstor
test
lea
dec
rcll
cwtl
dec
jnp
jnp
or
ffree
std
adc
pop
pop
test
arpl
and
adc
fsubs
and
lcall
ljmp
bound
sub
push
mov
rcrb
dec
jo
xchg
popa
add
xlat
fldcw
mov
fisubrl
pop
mov
pop
add
stc
test
ret
insb
push
andl
sbb
lods
sbb
test
xchg
shrl
xchg
jo
or
fildl
cmpsb
leave
mov
add
jecxz
fildll
sbb
dec
adc
imul
ficoml
in
insl
xchg
pop
test
push
sub
pop
fdivrl
xchg
or
in
lods
out
pop
jb
cli
cmpsl
cmpsb
cmp
out
push
dec
jnp
ljmp
dec
js
fidivrs
lock
sahf
cmp
call
jl
xchg
pop
addl
js
hlt
adc
jg
and
xlat
mov
or
xor
pop
mov
scas
xor
sub
aad
sbb
sub
iret
inc
and
lret
xchg
hlt
cltd
scas
add
sbb
repnz
mov
pop
shrb
jb
repz
jb
sub
xor
cmp
cmc
xchg
stos
loopne
jge
push
fs
cmpsb
stc
aam
or
test
stos
clc
or
repz
aad
mov
incl
shrb
ljmp
mov
inc
adc
push
mov
push
in
mov
enter
mov
xchg
int3
leave
jbe
add
dec
or
adc
lods
fiaddl
addr16
pop
mov
xchg
sub
mov
jo
dec
sbb
in
xchg
das
push
negl
mov
inc
movsl
mov
addr16
dec
add
ret
jbe
leave
repz
xchg
push
stos
test
inc
rclb
shll
ret
pop
cmp
mov
imul
push
pop
aam
fsubrl
cmp
dec
and
push
les
int
in
sbb
pushl
jge
mov
sbb
sti
jns
inc
cmpsb
pop
jns
sahf
rol
mov
aam
imul
mov
out
in
shl
das
xchg
pushf
or
int
std
xor
and
call
mov
sbb
int
rcrb
sbb
lods
sub
pop
push
mov
mov
repz
lea
add
loope
fwait
dec
push
fldenv
out
fstps
daa
adc
push
inc
daa
mov
push
sub
cmp
pop
and
inc
pop
sub
pop
bsr
stos
mov
add
jo
and
push
out
or
popa
addl
fistpl
aad
sbb
pop
jne
and
fidivrs
mov
push
adcb
pop
pop
push
jns
repz
push
stos
mov
jle
sub
and
cs
dec
cmp
push
jae
pusha
xlat
addb
dec
mov
loopne
aad
mov
stos
mov
testl
inc
cmp
cmp
sub
pop
xor
and
cmpsb
mov
mov
movsl
sbb
test
cmp
push
or
call
lock
dec
pop
jae
aaa
add
jne
push
add
popf
mov
jmp
addr16
fnstcw
dec
or
cltd
sbb
mov
adc
stc
cwtl
cmp
rol
in
sbb
or
xchg
cli
xchg
clc
mov
test
jge
out
pop
xor
dec
mov
inc
push
loop
mov
pop
in
jmp
shll
cltd
sti
addr16
cmp
loop
adc
push
cmpsb
mov
mov
mov
out
pop
mov
icebp
xchg
and
pop
cmpsb
inc
jno
push
add
xorb
push
push
cld
fidivrs
aam
testb
mov
mov
and
sbb
lods
es
jnp
mov
dec
ds
pop
test
dec
aam
rcl
or
in
mov
pop
xchg
and
jae
stc
push
outsb
imul
pop
and
jl
push
popl
lea
mov
jnp
sbb
in
xchg
outsb
inc
fs
in
cmc
outsl
push
mov
repz
lods
adc
sub
pop
jl
test
dec
xchg
and
or
jge
adc
sbb
inc
gs
out
in
mov
arpl
push
xchg
stos
clc
jle
jne
mov
enter
inc
pop
fwait
jg
mov
jecxz
jo
mov
jb
insb
outsl
lods
xchg
mov
jno
xor
xchg
int
cli
stos
push
lock
ret
arpl
xorl
movsl
xor
cmc
ljmp
leave
sbb
sub
jmp
in
xor
ljmp
aaa
sub
sub
pop
inc
jmp
xchg
sarl
insl
mov
mov
add
out
lods
out
fwait
push
rcrb
test
mov
add
xchg
xchg
and
mov
ljmp
and
cmpsb
arpl
shrb
jl
out
inc
adc
test
adc
or
mov
inc
sti
and
mov
dec
les
loopne
test
incb
and
mov
xchg
dec
rcr
pop
sub
mov
mov
dec
das
dec
dec
or
int3
aam
sub
cs
enter
loopne
lret
ja
mov
inc
push
cmc
cmc
fiadds
scas
in
cmp
call
cld
loopne
mov
and
bound
sbb
xor
jmp
pusha
xor
inc
out
pop
ds
push
bound
cmp
in
sbb
repz
push
or
mov
icebp
in
call
lahf
notl
adc
testb
sub
add
test
or
stos
out
out
mov
test
icebp
dec
and
jns
dec
jno
lret
es
scas
addr16
scas
imul
imul
or
add
in
fisubs
loope
in
push
mov
clc
dec
test
scas
xchg
add
lea
dec
push
jae
inc
or
daa
std
jne
xchg
mov
mov
jl
mov
inc
sbb
jns
movsb
pop
mov
inc
outsb
add
or
je
pop
add
mov
aad
push
pop
mov
push
fld1
inc
xchg
lods
cld
push
mov
rolb
inc
shrb
js
dec
xchg
loop
js
cld
movsb
stos
loope
rclb
cmc
mov
imul
and
mov
sbb
jle
shlb
leave
push
mov
pop
cmp
in
dec
or
cs
push
fs
xchg
sub
pop
pop
add
xor
adc
pushf
inc
fildl
sti
mov
mov
cmove
nop
and
cmp
sbb
push
add
cmovne
jo
xor
sahf
inc
pop
pop
pop
mov
mov
bound
mov
xchg
out
mov
inc
testl
call
jl
nop
ror
daa
inc
mov
and
and
mov
cld
xor
or
inc
and
xchg
cmpsb
sub
lods
fcomps
pop
faddp
shr
pusha
leave
fcmovb
fs
loop
cmpsl
cmp
mov
mov
push
xchg
or
gs
dec
or
cmp
stos
jecxz
pop
mov
in
cld
inc
jl
lock
scas
mov
sub
inc
popf
pop
call
movsw
xchg
add
lods
pop
jb
inc
fbld
hlt
popf
cmp
scas
ret
lahf
int3
fabs
and
dec
idiv
sarl
bound
jb
nop
sbb
aam
in
jl
rcr
or
sbb
in
enter
nop
dec
nop
out
cmp
pop
sub
decb
shll
mov
repz
data16
adc
out
push
cmpb
mov
rorb
lds
inc
jp
cld
aad
aad
stos
xor
push
fnstcw
cltd
ja
cmpsl
sub
pop
jne
mov
push
cmp
subb
pop
add
outsl
cld
scas
or
out
outsb
mov
aaa
sti
pusha
sub
mov
fcoml
sahf
mul
and
bound
xorb
int
icebp
jb
decl
sub
cmp
and
add
loop
sarl
push
cmp
inc
aam
insl
ja
jb
push
push
roll
jnp
addr16
or
scas
and
addb
add
push
outsb
inc
xor
in
and
cmc
inc
dec
loope
and
data16
push
add
push
nop
out
pop
xchg
and
inc
cmp
outsb
fadds
aad
jg
inc
int3
rcll
daa
ja
pop
sub
jns
mov
xor
mov
xor
xor
cmp
pop
mov
jae
cwtl
cmp
rcll
add
dec
lock
add
lea
cmp
addb
outsb
xor
adc
cmc
mov
cli
xor
dec
sub
enter
insb
add
pop
iret
inc
ja
or
xor
sti
push
nop
jno
getsec
and
sub
pop
mov
sahf
mov
or
fisubrl
loop
cmc
inc
mov
sbb
scas
lea
jno
stos
xchg
cmp
dec
adc
sub
into
push
and
xor
pop
shl
pushf
push
or
cld
ja
and
cli
ja
jg
xchg
andb
inc
setl
int3
or
into
jle
ds
insb
mov
xchg
mov
inc
in
leave
jg
imul
fldl2e
cwtl
icebp
pop
stos
dec
les
mov
or
sub
mov
bnd
inc
xchg
loope
pop
cmpb
frstor
add
loopne
mov
lret
jb
add
mov
fnstsw
enter
inc
adc
cmc
jnp
jbe
into
ss
pop
and
stc
in
jbe
cs
inc
pop
mov
je
in
sti
stos
mov
iret
jo
fnstenv
dec
orl
and
orl
aaa
mov
xchg
mov
sub
enter
enter
sub
rcrb
lea
xchg
mov
jae
cmp
ja
xor
add
jno
push
fs
inc
sbb
sti
test
mov
daa
push
stos
lret
outsb
dec
into
insl
cmpl
shl
sub
outsl
adc
ds
push
ja
jl
dec
cld
mov
cld
sbb
arpl
cmp
pop
loop
cmpsl
mov
xchg
lcall
pcmpgtb
sbb
cmp
inc
dec
jb
loope
lods
pop
xchg
cs
leave
push
dec
sbb
xor
mov
mov
adc
std
add
ficoms
or
jl
pushf
mov
jecxz
fisubrs
sub
les
adc
push
lret
aaa
fbld
sbb
rclb
loopne
push
scas
push
test
out
ds
pop
scas
or
ds
pushf
sbb
movsl
hlt
inc
adcl
cmpsl
je
insl
mov
sub
out
jae
aas
out
in
add
cmp
sbb
subb
xlat
fcmovu
and
loop
and
inc
pop
and
mov
pop
xor
mov
and
jmp
fwait
inc
mov
arpl
sarl
or
lret
push
inc
mov
jecxz
mov
aaa
push
popa
jge
test
dec
mov
xor
jo
imul
or
xchg
int
leave
mov
in
xchg
lcall
jns
push
cmovle
enter
mov
push
pushf
repnz
insl
push
xchg
xor
lock
repz
pop
xchg
jae
xchg
jno
fwait
jge
pop
popa
std
jne
jecxz
sbb
adc
test
push
mov
inc
cmpsl
push
out
or
test
sti
daa
xor
inc
lds
jbe
mov
fs
and
mov
mov
icebp
test
shrb
iret
dec
aam
mov
or
dec
add
mov
push
pop
sbb
pop
out
adc
sbb
mov
outsl
inc
clc
pop
add
mov
pop
data16
out
mov
and
xchg
cmpsb
loop
adc
outsl
add
push
mov
sub
lea
pop
dec
dec
bound
xchg
imul
push
loopne
jecxz
hlt
xor
xlat
pop
sub
lea
push
and
adc
inc
movsb
mov
xchg
lods
jnp
jle
cltd
out
and
pop
xor
mov
xchg
pop
xchg
addr16
cld
mov
je
mov
cmpsl
ja
mov
mov
push
pop
int
aad
and
xor
lret
fadds
mov
or
push
outsl
movsl
and
cli
inc
pop
pop
pop
aam
mov
rclb
or
mov
lret
mov
fisttpl
mov
mov
lea
jge
mull
jmp
sbb
add
movsl
cmp
and
arpl
mov
jnp
out
push
pop
add
xchg
mov
in
ficomps
into
mov
cwtl
mov
inc
pop
iret
ss
jbe
pop
jmp
and
lds
or
add
flds
xlat
cmpsb
xchg
or
mov
sub
in
adc
inc
pop
std
sahf
mov
out
das
dec
nop
andl
outsb
mov
in
lahf
and
dec
add
push
add
leave
test
xor
and
nop
pop
in
repz
xor
mov
xchg
push
pop
fsubrl
lret
pop
loop
imul
xchg
repnz
pop
daa
cmp
jge
test
decl
jmp
out
push
jp
mov
pushf
push
sbb
in
sti
lret
push
popf
mov
ret
xor
add
xchg
testl
cmc
cmp
push
jecxz
inc
mov
sub
loop
pop
xchg
sbb
ds
pop
jns
and
jg
adc
xor
xchg
cmc
dec
push
movl
mov
mov
sbb
in
fdivs
lahf
sub
jmp
fucomi
aas
mov
outsb
int3
cmp
jo
cmp
xchg
pop
lods
int
arpl
mov
lock
pop
xor
jne
dec
das
dec
adc
sahf
adc
sbb
add
xor
dec
es
mull
pop
adc
mov
cltd
divb
rol
push
mov
push
mov
ror
pusha
jmp
mov
xlat
loop
pop
xchg
int
jmp
mov
mov
cmpsl
xor
lret
insl
add
push
fwait
push
mov
sbb
bound
jmp
adc
xor
sbb
push
jb
hlt
movsb
popf
push
out
in
cmpsl
xor
iret
mov
shll
mov
ja
cmpsb
dec
push
fnstsw
iret
add
mov
int
sbb
icebp
lahf
aad
in
mov
sbb
clc
loopne
jecxz
sub
push
cmp
and
out
inc
adc
sahf
repz
xor
jb
leave
pop
movsl
mov
xchg
jb
mov
mov
sub
pop
lahf
ja
mov
cmp
or
or
iret
inc
ljmp
pop
xchg
stos
ror
imul
test
xor
pop
sbb
or
jb
jbe
divl
test
ret
push
mov
fstl
mov
mov
nop
lods
push
hlt
mov
or
fwait
pop
push
push
jo
enter
cmp
daa
or
rcll
and
xor
pop
sti
mov
pop
jmp
pop
lcall
lret
lcall
mov
cmp
rorb
and
pushf
fisttps
sbb
js
int3
jp
xchg
insl
fwait
adc
adc
sub
or
mov
or
mov
jo
imul
adc
in
xchg
stos
movsl
xor
xchg
mulb
sub
sysret
xchg
imulb
xchg
mov
or
inc
push
enter
jp
shll
mov
in
insl
pushf
lds
aaa
inc
mov
push
dec
mov
push
xchg
pop
sbb
imul
rorl
push
xchg
fwait
out
test
dec
and
cmp
xchg
add
cwtl
aas
lret
repnz
mov
and
jb
ror
outsb
inc
xor
sbb
cwtl
add
je
out
sahf
cmp
xor
out
aad
cmpsl
sub
xchg
aad
lahf
das
sti
pop
aam
or
cmpl
fldcw
inc
mov
adc
stos
add
dec
adc
mov
lahf
mov
jb
movsl
mov
mov
push
mov
mov
cmp
insb
mov
ljmp
imul
pop
icebp
cmp
sub
sbb
and
jae
sahf
mov
add
push
adc
pop
imul
mov
jae
pop
cs
mov
scas
jmp
and
call
push
adc
mov
mov
mov
pop
xchg
mull
jge
adc
into
xor
add
push
or
dec
xorb
loop
int
mov
mov
push
test
push
pop
sbb
or
cmp
mov
scas
in
js
scas
loop
std
mov
icebp
insb
mov
xor
cmovl
push
imul
xchg
ljmp
test
pop
jecxz
sub
cmp
pop
xchg
adc
add
outsb
or
call
xor
dec
xlat
int3
jb
in
popf
xor
mov
or
mov
mov
scas
push
loope
in
in
int3
stos
adc
add
and
pop
out
inc
fs
push
pop
test
inc
jae
mov
je
out
sbb
repz
inc
or
mov
mov
inc
aaa
inc
imul
mov
push
inc
and
xor
es
mov
and
and
fistpll
push
je
xchg
inc
cmp
pop
sub
pop
daa
call
outsl
movsl
sar
fidivrs
iret
push
fidivrs
aas
xchg
sub
fs
jge
pop
pop
jae
mov
xchg
movsb
das
xchg
inc
push
lahf
cltd
popf
and
into
fwait
push
jp
nop
jnp
adc
mov
lahf
jnp
arpl
mov
add
ret
cs
sbb
mov
bound
outsl
dec
daa
push
xchg
fmull
dec
and
std
push
iret
mov
or
dec
out
dec
int3
sub
and
and
and
std
add
fnop
cld
sbb
xchg
or
loop
xchg
test
jp
jb
lock
add
lahf
mov
les
dec
repnz
rorl
push
mov
mov
cmc
cmp
out
push
xchg
cmp
cmp
jo
mov
je
ja
cltd
rol
ds
sbb
out
imul
mull
inc
dec
cltd
dec
adc
jp
sbb
pushf
xchg
push
shrb
xlat
dec
xchg
lahf
cmpsb
pop
lods
hlt
xor
jl
repz
fwait
dec
jne
insl
add
jno
sbb
movsb
stos
mov
xchg
mov
add
push
stos
push
mov
xchg
jl
sbb
xchg
push
push
aaa
fucom
sahf
cmc
pop
jmp
push
push
mov
dec
wbinvd
cmp
jecxz
lret
push
aam
mov
push
jl
pusha
xchg
inc
sub
xor
jno
fdivrl
jno
cmp
sarb
or
andb
stos
lahf
dec
xor
repz
adc
jns
inc
mov
inc
test
insb
push
mov
clc
inc
mov
in
inc
stc
pop
jbe
mov
push
sub
jns
test
pop
mov
inc
sti
arpl
cmpb
pop
lret
insl
sub
nop
inc
mov
sbb
je
pop
cmp
push
and
mov
push
xchg
push
addr16
dec
push
mov
lcall
cmpsb
sarb
cld
clc
shrb
mov
pop
in
jnp
push
dec
pop
shll
and
bound
push
shrb
add
out
xchg
jbe
rcl
push
inc
sahf
add
mov
in
cld
inc
mul
jb
int3
push
popa
emms
loop
popf
push
and
outsb
xlat
fmuls
mov
xchg
out
or
or
movsb
lock
iret
push
jecxz
cmp
outsl
icebp
jl
test
xor
adc
test
adc
icebp
subl
dec
and
lods
call
xchg
dec
adc
or
fadds
cmp
adc
imul
pop
lds
dec
sahf
fmul
jl
divb
mov
stc
mov
test
cwtl
xchg
loopne
add
mov
or
pop
jmp
cld
test
imul
outsb
jnp
push
mov
xlat
or
mov
jne
les
xorl
sub
aaa
outsl
pop
xchg
jno,pn
sub
pop
add
add
adc
or
repz
repnz
cli
mov
sarb
movsl
add
add
lea
sub
iret
loop
ret
fistpll
adc
lods
lds
jmp
mov
or
pushf
repnz
mov
xchg
pop
sbb
pop
cmp
mov
adc
dec
and
or
repnz
push
aam
sbbb
xchg
fldt
pop
ret
mov
daa
jb
fdivrp
xor
rcr
stos
fadd
imul
and
lods
xor
lret
out
out
push
movsl
sbb
les
inc
and
or
mov
xlat
sti
sbb
arpl
adc
xor
mov
lods
push
xchg
jle
sub
psubsw
mov
insl
shll
cmp
mov
xchg
aad
mulb
pushf
xchg
dec
push
dec
leave
orl
shrb
lods
lock
enter
and
mov
jo
jmp
jecxz
jne
ldmxcsr
aad
aad
popa
test
in
ljmp
cli
ss
popa
jle
pop
sbb
xor
mov
mov
cmpsl
mov
pushf
inc
test
addl
cli
sar
or
dec
js
fisttps
mov
or
insl
push
shrl
push
aad
das
dec
js
push
push
test
mov
sti
jmp
fiaddl
pusha
sub
adc
je
in
mov
push
cwtl
mov
mov
xchg
aas
iret
adc
xchg
test
jge
pop
or
xor
fldcw
aam
addl
clc
cmp
inc
movsb
mov
pushf
fadds
ja
jecxz
ret
mov
imul
sub
mov
out
mov
mov
psubd
test
xchg
movsb
inc
stos
fwait
jo
fsubrs
aam
out
pop
push
out
popf
jg
ja
mov
int
les
jecxz
shll
movsb
and
testl
mov
push
sbb
dec
mov
mov
insl
mov
sub
pop
xlat
push
lds
xor
jge
inc
mov
dec
addb
adc
cmp
mov
cmpsl
xchg
dec
arpl
ds
lods
cmp
ret
inc
lea
faddl
mov
popa
xchg
and
adc
dec
iret
pop
xchg
aas
test
rorl
xor
push
mov
bnd
cmc
call
hlt
adc
or
ja
lock
mov
dec
push
mov
xchg
pop
fcompl
enterw
orb
packsswb
data16
inc
inc
outsb
lods
jnp
loopne
dec
das
stos
ret
pop
jp
inc
cmp
mov
dec
out
in
hlt
xchg
pushf
xchg
jnp
or
sbb
ss
rorb
ds
jb
adc
test
dec
mov
in
xor
or
fcmovnb
test
push
mov
insl
fmul
xor
fsubl
xlat
fisubrs
inc
push
pop
sahf
mov
test
xlat
lds
jg
and
int3
xlat
nop
or
push
push
mov
and
cmp
and
xchg
jns
or
out
out
adc
pop
decb
xchg
inc
sub
cmp
test
test
jle
adc
cmp
icebp
and
mov
cld
sub
jae
xor
movsl
mov
imulb
xchg
aad
inc
pop
inc
inc
fsts
push
enter
xchg
rcrb
fistpl
or
dec
test
faddl
addb
push
xor
outsl
pop
jno
jmp
aad
nop
push
add
sub
lcall
out
dec
push
add
addr16
fcmovnbe
loopne
xchg
fsubs
inc
jnp
cmp
ja
into
ljmp
dec
pop
in
inc
or
xlat
out
repnz
cmp
mov
and
xor
pop
sahf
sbb
dec
sub
es
inc
xchg
mov
or
scas
push
push
sbb
nop
lds
push
aas
mov
imull
jb
fs
daa
dec
sbb
inc
into
test
in
push
mov
rclb
fsubrl
sti
mov
andb
add
outsl
push
cmpsb
imul
rorl
mov
nop
andb
mov
ljmp
and
push
arpl
andl
mov
sub
pop
addl
inc
sarb
bound
out
mov
in
jae
mov
es
popa
xor
lret
sti
adc
mov
adc
jne,pn
push
jl
aaa
sti
movsl
rep
sbb
arpl
scas
push
cmpsb
xchg
icebp
push
rolb
pop
push
lret
pop
xchg
jno
addl
push
mov
inc
pop
add
pop
fs
mov
fidivrl
into
xor
xchg
mov
es
mov
movsb
inc
fwait
sub
mov
loope
pop
pop
cmp
xchg
lret
test
imul
cmp
mov
in
jno
xchg
aam
cmpsb
es
loopne
mov
cmp
iret
mov
ror
loopne
inc
jnp
hlt
and
push
and
pusha
testl
test
ja
lds
jnp
push
cs
xchg
sub
fistps
or
jae
es
roll
add
mov
xchg
insb
cmp
push
inc
enter
mov
mov
int3
aam
inc
gs
inc
jmp
mov
scas
mov
shrl
or
lods
cld
mov
and
inc
test
mov
xchg
out
daa
pusha
fs
imul
jle
cmp
cmp
insl
cwtd
mov
shlb
xor
leave
pop
dec
fmuls
clc
lods
pop
cmp
fldenv
popf
cs
pop
inc
gs
addb
stos
out
in
stc
daa
inc
gs
mov
int3
sbb
mov
lods
imul
ljmp
mov
inc
pop
jg
ljmp
and
pop
les
lret
scas
jg
loop
xor
xchg
pop
ljmp
mov
or
stos
dec
lods
adc
pop
es
daa
dec
test
pop
enter
xor
mov
mov
ljmp
test
arpl
sub
and
fidivrl
xor
cmp
test
movsb
mov
lret
je
repnz
or
stc
pop
in
sbb
shlb
addr16
adcl
enter
sbb
push
or
cmp
cmc
or
loope
test
in
orl
fs
sub
push
data16
into
mov
out
and
xor
das
add
enter
xor
pop
xor
sbb
test
push
cmpl
xchg
test
cmp
cwtl
add
into
icebp
jo
insl
xchg
jl
in
jnp
adc
or
dec
insb
cmpsl
fcompl
adc
out
mov
dec
idiv
loop
imul
pop
push
rcr
ret
pushf
orl
movsl
int
jbe
inc
outsb
scas
imul
pushf
clc
dec
scas
pop
sahf
mov
xor
jne
dec
loop
pop
xlat
push
dec
stos
jecxz
loop
arpl
hlt
fs
mov
sar
sbb
cld
mov
dec
xor
xlat
scas
loope
xor
cltd
rcll
cmp
mov
dec
adc
cmp
hlt
out
jae
call
lods
out
mov
adc
mov
jmp
adcl
xlat
inc
sub
push
push
fdivrl
fcoms
stos
xchg
les
ds
xchg
aas
cmpsl
xchg
mov
ljmp
cmp
xchg
add
arpl
sub
popa
sbb
setle
arpl
jbe
pop
out
push
xchg
loope
fsubrs
cmpsb
lret
pop
nop
rcll
imul
xchg
es
fs
hlt
movups
les
test
mov
and
hlt
aam
jnp
scas
call
push
pop
sti
or
mov
cmpsb
stc
pusha
sub
pop
insb
enter
or
inc
inc
xor
cmp
push
test
into
std
sbb
ds
push
cltd
mov
mov
adc
dec
push
inc
jecxz
mov
dec
popf
add
add
jge
jb
jae
lods
jnp
or
jne
lods
lea
xor
out
fdivl
shll
dec
test
arpl
fsubrl
sub
jge
cmpl
dec
xor
inc
in
divl
mov
scas
sub
jns
xor
inc
loop
xchg
aaa
and
push
mov
fnstsw
jo
out
lock
sbb
cmp
insl
add
pusha
pusha
adc
dec
les
jecxz
lretw
test
sub
mov
jno
stos
cld
lcall
das
pop
jmp
jle
add
jge
scas
jge
sub
mov
inc
jno
std
loopne
inc
push
leave
in
lcall
pop
push
dec
cmp
xchg
mov
rcrl
insl
insb
inc
and
jo
daa
xor
idiv
iret
ror
out
adc
push
push
out
xor
scas
mov
add
pop
pop
ret
rcrl
cmp
jl
es
pop
lcall
fcmovne
mov
loop
jmp
add
xor
push
ds
mov
test
mov
jecxz
xor
jge
ret
repz
mov
pop
adc
xor
fisttpll
cli
sbb
and
mov
dec
fsubrl
sbb
push
into
movsb
jle
mov
add
dec
inc
inc
cmc
cwtl
into
cli
out
mov
fldt
dec
add
int3
subb
cmpsb
and
jl
rolb
xor
xor
into
aam
pop
ja
outsl
xchg
stos
rcrl
xchg
xchg
addr16
loope
pop
adcl
test
ja
sbb
and
mov
int
imul
mov
ficoms
popa
adc
icebp
incb
addr16
lock
iret
bound
leave
push
mov
cmp
shrb
pushf
jnp
dec
and
lods
gs
adc
jns
pop
add
add
adc
or
les
mov
aad
or
jno
ljmp
inc
wrmsr
xchg
cltd
mov
jb
or
hlt
mov
and
dec
cwtl
jbe
in
lcall
scas
arpl
cld
xchg
adc
daa
jns
popf
jecxz
test
cwtl
or
jmp
fsts
sti
mov
pop
jl
inc
cmp
mov
inc
call
cli
xchg
cmp
and
sbb
or
adc
addr16
and
insl
int3
call
lret
and
mov
lods
mov
cmp
dec
insb
cmp
aam
add
sub
and
sbb
pushf
mov
xor
pop
mov
addr16
test
sbb
mov
ret
outsl
js
sbb
adc
push
mov
xorb
lcall
adc
insl
cmp
lea
fdivp
cld
out
inc
or
in
and
xchg
and
inc
imul
add
mov
sbbl
or
fldcw
aam
hlt
out
pop
push
inc
xor
dec
add
clc
dec
push
sarb
rol
xor
sub
jmp
iret
push
mov
ja,pn
mov
push
jbe
fistps
or
rorw
xor
fs
lret
rcl
shrl
and
lea
rol
fcmovnbe
push
ret
pusha
sbb
cmp
fisttps
jo
std
cmp
mov
cwtl
mov
fs
sbbb
add
das
sub
pushf
mov
inc
loope
add
xor
clc
into
pop
loop
es
sbb
aad
mov
aaa
into
js
std
mov
cwtl
xchg
arpl
xor
xchg
insl
lret
lcall
push
jns
jl
lahf
or
add
lret
mov
aas
cmpb
loop
inc
mov
mov
sub
push
imul
hlt
pop
pop
iret
dec
or
mov
jge
jmp
lahf
add
add
xorb
je
flds
adc
test
test
push
jne
mull
idivb
pusha
inc
mov
push
cmpsl
xor
push
stc
sbb
fwait
js
jb
cbtw
jae
sbb
xchg
xor
aas
mov
hlt
call
fldenv
out
call
aas
sti
xchg
test
mulb
testl
jp
aam
pop
jo
out
js
je
stc
movsl
pop
repnz
xor
sbb
mov
sahf
movsl
pop
push
lock
jl
rolb
or
cltd
jl
xor
mov
das
shll
adc
mov
out
sbb
xchg
push
sub
sub
mov
pop
fdivrs
jmp
hlt
pop
push
orb
dec
out
cmp
sbb
or
pop
jns
push
sub
inc
sarb
faddl
fs
pop
mov
and
jp
pop
je
push
loopne
scas
jmp
movsl
insl
fisubs
cmp
fcmovu
rcr
sbb
bts
pop
in
pop
int
cwtl
cmp
hlt
fmulp
dec
cld
jnp
jle
aad
leave
sub
stos
rcrl
loopne
xchg
mov
xor
js
or
xchg
insb
pop
mov
popf
pop
sub
inc
popf
rcl
and
ja
sysret
inc
xor
pop
push
xor
scas
sub
push
sbb
mov
jae
sti
or
adc
std
loop
sub
leave
fstp
lods
ret
pop
sub
lock
scas
xchg
inc
ja
cltd
test
mov
jae
cmp
jecxz
pop
mov
aam
jae
and
pop
pushf
out
push
popf
fsts
arpl
push
sub
and
out
lds
and
cltd
pop
mov
repz
pop
xlat
jbe
jecxz
inc
push
xor
mov
and
mov
aaa
loop
mov
sub
push
dec
lods
push
xchg
sbb
and
mov
or
sarb
cmp
mov
or
lret
adc
iret
ficomps
insb
lret
cld
jge
ret
mov
enter
mov
adc
inc
arpl
ljmp
outsb
pushf
mov
xchg
lret
stos
xchg
xchg
mov
dec
test
xor
xchg
xor
mov
jb
jno
add
or
adc
add
or
pusha
mov
sbb
jno
jns
fwait
or
xchg
fldcw
adc
pop
inc
in
test
fldcw
xor
into
push
fidivrl
xor
sub
dec
add
stos
insb
leave
adc
or
xlat
and
and
push
sbb
addl
enter
sub
ja
pop
jg
inc
out
fwait
mov
or
pushf
ret
sub
and
push
enter
dec
leave
sub
mov
and
fisubs
add
dec
dec
js
xor
int3
dec
jg
insl
js
les
lcall
cltd
xchg
repz
movsl
pusha
xor
mov
mov
stos
jl
jg
xchg
fmulp
xchg
fldcw
in
ret
cwtl
push
je
sbb
das
repnz
cwtl
and
add
ljmp
dec
xchg
rcrl
mov
jg
in
scas
pop
xor
popf
jo
push
dec
or
add
shrb
lods
and
mov
inc
outsl
lfs
push
jo
mov
inc
sbb
cmc
pop
rcl
and
jne
into
movsl
addr16
xor
xchg
mov
sbb
and
pop
std
int3
ret
mov
hlt
sub
jge
jnp
sub
test
adc
stc
dec
int3
cmp
mov
mov
in
mov
cmp
ljmp
push
inc
adc
lods
sbb
bound
or
sub
movsb
mov
mov
or
pop
lock
push
popa
loope
popf
loope
xor
repnz
or
js
dec
loopne
outsb
aad
shll
xchg
add
inc
pop
mov
jmp
jae
push
push
xchg
sub
add
push
sbb
shll
scas
sbb
les
jae
xchg
lds
andl
xchg
stc
mov
dec
mov
fwait
add
dec
xchg
push
mov
mov
xor
fsub
das
mull
fstps
cltd
out
or
lahf
fimull
ss
mov
das
popa
mov
inc
push
lret
jns
xor
shl
jp
repz
jbe
sti
mov
bound
scas
sbb
add
adc
mov
nop
scas
add
add
mov
in
pop
cltd
imul
cmpsl
mov
test
sbb
adc
pop
cmp
cwtl
out
stos
jmp
mov
nop
add
pushf
cld
daa
sub
sti
pop
repnz
and
sub
pop
movlhps
mov
mov
pop
scas
rorl
cmp
ficoms
pop
mov
mov
dec
dec
jbe
mov
pop
cmpsl
in
mov
xchg
arpl
sub
push
xchg
fs
jecxz
pusha
test
leave
lea
inc
sarl
orl
popl
outsl
test
insl
popf
push
mov
aaa
and
dec
dec
jge
dec
pop
push
les
in
xor
pop
imull
jb
loop
inc
inc
subb
push
cmp
mov
adc
cltd
imul
in
and
ret
add
jbe
pop
mov
fstpl
lret
int
push
mov
lret
fnsave
cmc
into
push
push
pusha
neg
test
jle
xchg
or
subl
jmp
mov
bound
sbb
rcl
sti
cmp
test
jecxz
add
pop
push
add
xor
cmpsb
fcmovbe
iret
lods
std
push
mov
and
jae
out
test
bound
movsb
jl
sub
jns
mov
fsubrs
xchg
xor
dec
add
jp
rorb
cld
cmp
icebp
add
pop
stos
mov
jns
repnz
adc
jge
push
pop
imul
pop
xchg
ja
cmp
out
jle
add
jecxz
pop
adc
and
inc
mov
or
mov
pusha
xlat
ret
test
fnstcw
out
out
xor
bound
jl
sub
jg
popaw
outsb
ror
arpl
adc
cld
xchg
push
enter
insb
add
je
movsl
jno
call
pop
cmp
pop
cmc
adc
inc
cmpl
cmp
cs
adc
jecxz
sub
and
fdivl
jle
mov
xor
loope
flds
xor
jae
mov
out
std
jns
mov
dec
in
cmpsb
push
inc
imul
ret
xchg
mov
xor
cmc
leave
iret
gs
pop
out
jae
inc
sahf
dec
jle
lods
mov
sub
insb
and
aaa
push
cmpsb
outsl
and
rcrl
lcall
lods
icebp
fiaddl
mov
push
js
lods
sub
loope
push
add
xchg
shrb
lret
or
std
and
and
jl
push
shrl
sbb
jns
rolb
lods
push
sub
cwtl
jle
push
stos
and
lods
into
roll
test
jle
scas
cltd
push
xor
cmp
add
mov
icebp
aaa
sub
inc
xlat
push
nop
dec
stos
ss
shll
pop
test
loopne
test
pop
mov
dec
test
cwtl
das
pop
mov
dec
add
clc
fstl
fidivrs
dec
aaa
mov
sbb
pushf
loope
leave
leave
push
or
inc
add
sahf
jecxz
imul
lcall
movsl
not
subb
lods
pushl
ja
xor
push
es
and
sub
add
in
lds
sbb
fwait
iret
mov
ret
add
cld
dec
adc
sbbl
imul
adc
cwtl
mov
ret
adc
adc
cli
mov
and
enter
cmp
jno
rorb
push
cmpsb
stos
test
xchg
insb
rolb
mov
fistpl
inc
xchg
sbb
rcrb
mov
loope
ja
scas
aam
adc
push
mov
lock
xor
inc
pop
jbe
test
imul
jo
fcmovne
sbb
xchg
xchg
cmc
in
je
cltd
push
jne
sbb
icebp
out
test
xchg
prefetch
or
dec
or
mov
mov
mov
aaa
pop
cmp
cmp
movsl
mov
dec
push
mov
sbb
xchg
test
sub
push
int3
push
dec
sbb
jae
js
mov
cltd
sub
adc
shlb
mov
shlb
or
fstl
mov
sahf
rcll
mov
gs
xorb
inc
movsl
jge
pushf
mov
ds
push
cmpsb
pop
pop
pop
sub
sbb
outsb
fimuls
add
or
dec
enter
pop
cmp
call
lock
dec
lret
ss
subl
pushf
add
xchg
sahf
mov
sbb
mov
test
fstl
lods
jbe
icebp
lret
mov
stos
jbe
outsb
adc
xchg
je
pop
lcall
int3
jae
jl
gs
stos
ror
pop
xchg
sub
dec
xor
pop
in
push
cltd
pop
in
lods
dec
jmp
sbb
scas
xor
loope
mov
add
add
icebp
and
or
sub
aad
and
dec
jnp
jns
push
movsb
mov
ja
or
mov
pusha
sbb
jo
mov
and
push
imul
jmp
and
les
repz
and
xchg
push
lcall
dec
in
lahf
aad
out
out
sti
pop
aaa
pushf
pop
das
mov
or
mov
test
scas
mov
rcrb
popa
bound
inc
popa
fwait
aad
and
cmp
xor
jns
mov
lcall
icebp
dec
xchg
fwait
es
xchg
push
imul
sbb
sti
je
or
mov
je
mov
sub
cmp
mov
sub
adc
add
inc
fmull
cmp
push
aas
mov
mov
ljmp
or
pop
pop
ror
lahf
inc
es
push
cmp
sbb
xor
repz
pop
pop
lahf
in
adc
pushl
insl
xor
ljmp
push
xchg
ds
pop
cmp
out
fwait
out
lea
ss
push
push
loope
icebp
xor
popf
cmp
call
mov
mov
ror
shr
xor
ret
mov
cmp
cmpsl
int
jae
arpl
push
pop
loop
lcall
lret
and
pop
out
pop
push
and
mov
push
test
pop
pop
lods
sbb
fs
lods
push
ds
sahf
push
ret
mov
adc
inc
adc
sub
push
es
or
push
orl
pushf
out
mov
jge
in
in
test
pop
jmp
sahf
push
adc
or
fnstenv
dec
fwait
gs
pusha
scas
cmp
fnstenv
xorb
enter
ljmp
jae
movsl
push
jne
jns
jbe
cli
cmp
mov
stos
hlt
and
push
xor
xor
jns
mov
push
xchg
sub
xor
adc
mov
push
fwait
in
xchg
adc
add
adc
add
fldcw
arpl
jecxz
cs
iret
and
imul
leave
pop
ds
mov
jb
dec
inc
cmp
ss
bound
adc
test
cmp
popa
lods
jmp
push
push
xchg
pop
sbb
sbb
push
lods
cli
loope
inc
mov
mov
dec
sarl
jbe
dec
lret
subb
jg
fnstcw
imull
in
adc
add
rcrl
and
mov
jne
pop
xchg
ret
leave
xchg
lock
stos
cmp
cmp
inc
push
les
ret
jge
adc
dec
inc
shr
xor
les
add
add
mov
pop
mov
cltd
je
inc
aas
dec
sbb
outsb
lahf
jmp
out
xchg
inc
or
into
cmpsb
out
xchg
jo
loope
popa
rcl
xor
lcall
ror
dec
inc
pop
adc
push
repnz
jmp
mov
bound
andl
fadd
jno
sti
test
xor
aas
mov
inc
add
das
in
adc
loopne
push
data16
and
das
test
dec
das
or
mov
stos
loope
jnp
cmp
mov
cmpsb
jnp
pusha
dec
push
xchg
fxam
dec
cld
cmpsl
test
inc
dec
dec
cmp
fwait
in
xlat
add
orl
faddp
jmp
pop
call
mov
or
into
mov
sti
cmp
cmpb
xor
sub
lret
scas
imul
jle
mov
ss
in
sub
ss
rorl
push
cld
cmpb
jmp
dec
mov
lods
addb
lea
fcomps
push
movsl
nop
rclb
or
popa
xor
cmpsb
mov
in
mov
daa
arpl
push
je
scas
jbe
inc
xor
gs
into
mov
pop
lock
fsts
fisttpll
or
out
inc
jle
xor
dec
pop
lea
loope
push
jno
cld
and
jbe
xor
cli
xor
push
mov
loop
xchg
push
jno
fs
lret
adc
mov
out
pop
and
mov
push
ljmp
push
ficomps
sbb
mov
insb
scas
into
dec
or
cmp
mov
cmpl
lds
je
subb
cmp
decl
in
cmp
lods
or
adc
lods
adc
fistl
add
lcall
xor
addr16
movsb
mov
iret
sbb
enter
lret
js
lahf
out
stos
jg
stos
insl
and
lea
nop
add
add
sahf
sbb
gs
mov
mov
nop
out
xor
out
adc
jle
addl
pop
iret
iret
int3
cmp
jp
in
loope
xor
lret
push
xchg
and
ds
pop
mov
sbb
xchg
or
mov
mov
mov
xchg
pop
fimuls
out
insl
sub
aas
xchg
push
pop
add
and
ficompl
lds
daa
cmpsb
sbb
xchg
shlb
cwtl
mov
movsl
shl
adc
inc
fmul
sahf
sub
inc
dec
jnp
inc
sahf
dec
repz
pop
gs
fisttpl
arpl
dec
lock
xchg
mov
addr16
jae
and
cltd
addr16
stos
mov
adc
mov
icebp
lcall
loopne
sti
jns
pop
arpl
jg
sub
push
adc
pop
repz
xchg
dec
add
add
bound
sub
pop
cmp
ret
fildll
mov
xchg
aas
test
dec
scas
push
sti
sbb
mov
aas
xchg
sub
test
fnsave
inc
jbe
jg
inc
insb
notl
push
push
and
mov
cmp
add
cmp
jne
jb
xchg
repz
lret
fwait
add
or
je
inc
pop
outsl
test
dec
push
adc
dec
cmp
pop
out
stc
stc
gs
filds
lock
inc
pop
dec
inc
push
sbb
xchg
std
pop
in
mov
test
jnp
mov
sti
pop
aad
stos
fistl
in
push
pop
mov
mov
sbb
loopne
pop
mov
dec
leave
aas
xchg
push
dec
mov
mov
inc
ficomps
inc
out
pop
jge
insb
pop
mov
xor
in
rcr
jne
jg
jle
dec
insl
addr16
bound
and
xchg
insl
pop
jg
pusha
mov
xor
push
mov
pop
mov
jle
and
xor
pusha
jns
dec
xchg
xchg
popf
dec
fcomp
sbb
jmp
cmc
mov
rcll
xchg
in
stos
outsl
pop
cli
sub
lea
xor
jae
movl
out
testl
cmpsl
cmc
int3
adcb
insl
cmp
out
lea
adc
shll
not
loopne
add
pop
arpl
into
scas
in
and
jecxz
mov
decl
xor
and
cmp
inc
arpl
push
inc
lret
pop
pop
in
dec
insl
sub
in
jo
sbb
or
js
in
push
xorb
jg
cwtl
iret
or
imul
and
add
call
rcrb
pop
mov
test
pop
pop
add
xchg
and
gs
push
pop
fidivrl
cwtl
mov
jno
loop
or
adc
fistl
xchg
js
or
mov
add
jno
in
loopne
jp
or
cmp
hlt
push
fidivrl
mov
cmc
int
iret
cltd
push
cmp
js
incb
imul
div
cmp
push
jbe
dec
mov
adc
mov
leave
jb
aaa
inc
scas
sbb
or
pop
ror
jl
jbe
clc
movsb
fsubs
dec
fisttps
push
pop
sbb
ficomps
pushf
out
rcll
lret
ficompl
ret
push
movsb
lcall
mov
adc
xor
nop
daa
push
in
loopne
cmc
icebp
xchg
stc
inc
xor
mov
shll
pop
daa
stc
add
lret
sub
insl
or
outsb
in
or
sti
je
inc
leave
sub
stos
cmp
adc
xchg
aaa
mov
push
call
or
dec
sub
cmc
cltd
out
jne
rorl
push
fucomi
cmc
cmpsb
push
dec
xchg
cmpsb
rep
ljmp
out
stos
push
ficoms
jb
inc
int
sbb
int3
in
mov
es
and
jmp
pop
cmp
pop
cmc
mov
loop
popa
cmpsb
jno
ret
dec
mulb
lods
jmp
add
mov
add
lea
sbb
sub
insl
sub
insb
lods
stos
icebp
aas
jbe
das
fstp
sub
jo
stos
pop
cmp
cmp
out
cmc
out
js
xchg
outsb
pinsrw
jns
fidivrl
outsl
loopne
mov
leave
out
cmp
pop
push
movsb
and
push
icebp
mov
pushf
sub
pop
fisubrs
fwait
hlt
or
rcrb
mov
aam
inc
and
hlt
ret
push
ja
test
sahf
add
int3
jle
flds
in
dec
subl
adc
xlat
push
add
sub
ss
std
addr16
push
lods
cmpsb
iret
mov
add
inc
inc
dec
xor
xchg
fnstenv
and
sub
incl
mov
insl
xchg
out
mov
sub
push
jl
pop
mov
gs
cld
xchg
xor
sub
iret
call
out
int
leave
sub
jbe
imul
addr16
or
sub
stos
shlb
lar
stc
es
lcall
mov
or
sub
dec
outsb
notl
lods
or
or
sub
lods
mov
aam
aam
fs
aad
xchg
cmp
or
lret
sbb
pop
repz
out
jp
inc
daa
xor
das
iret
mov
push
lock
mov
mov
push
mov
xchg
jg
jle
dec
pop
outsb
in
xor
cmpsl
rolb
adc
adc
cwtl
xchg
das
cmpsl
mov
cltd
push
ffreep
add
dec
inc
cld
jmp
mov
sub
clc
imul
or
add
xor
test
imul
mov
pushf
lea
lea
and
push
pop
daa
sbb
add
idivb
das
inc
shl
pop
fisubrs
jecxz
mov
cltd
imul
subl
out
fwait
xorl
fistl
insl
cltd
mov
shr
fstps
cmp
jb
sbb
addr16
dec
mov
sbb
mov
dec
shlb
push
mov
movsb
push
xor
or
mov
xchg
mov
or
pop
jbe
mov
aam
adc
jmp
subl
pop
mov
ljmp
or
scas
mov
loop
loope
jmp
sbbl
mov
cmc
divb
movsb
xchg
sti
and
mov
fisubrl
mov
fimuls
or
test
ss
test
add
lods
push
add
js
daa
mov
xchg
pushf
ljmp
dec
jl
shl
xchg
lea
sbb
out
shl
push
and
jnp
push
inc
xchg
mov
jmp
rolb
dec
in
jg
shlb
xchg
pop
push
xchg
inc
cli
xor
dec
dec
aam
lock
mov
pushf
mov
or
xor
jmp
add
sahf
lock
jns
push
lahf
shll
cmpb
lods
inc
ficoms
inc
push
or
in
add
enter
pop
fs
out
and
sbb
lcall
jmp
andb
out
lea
sarb
scas
inc
dec
adc
sbb
pop
adc
inc
cmp
dec
add
pop
es
ds
loopne
pop
xor
pop
ja
mov
mov
clc
icebp
out
lcall
test
jnp
pop
daa
std
lret
mov
sub
pop
lahf
mov
popf
jne
ljmp
or
dec
mov
and
dec
aaa
sub
jb
inc
nop
mov
mov
popf
aam
rorb
vmread
xor
xchg
adc
bound
mov
jg
inc
mov
xlat
and
xchg
jg
repz
movsb
sbb
xchg
jne
outsl
inc
in
clc
jne
push
inc
cwtl
xor
push
pushf
shrl
adc
xor
in
cmp
jne
dec
int
into
stos
pusha
aaa
mov
adc
push
je
pusha
outsl
and
adcl
cld
add
mov
in
mov
xchg
mov
pop
lods
mov
cmp
cmp
cmp
push
insl
addr16
das
mov
mov
cmovle
popa
sbb
cmp
popf
movsl
pop
dec
push
push
mov
stos
lcall
lret
and
sub
sub
mov
lcall
mov
jno
push
mov
ljmp
add
bnd
outsb
nop
xchg
mov
sbb
xorb
adc
sarl
or
pop
cmp
arpl
sbb
lock
inc
ljmp
push
dec
mov
adc
ds
ds
call
add
inc
sbb
pop
js
push
and
fisttpll
jmp
cmp
mov
mov
cli
sti
repz
fsubrs
andb
adc
scas
mov
aam
jge
or
incb
gs
push
cmc
test
add
or
sub
push
dec
xor
push
dec
xor
scas
mov
ja
mov
imul
loope
pop
xor
mov
adc
jae
xor
push
cmpsb
lods
and
ss
out
sbb
cmp
sbbl
test
lea
cmp
push
xchg
mov
push
lcall
daa
push
dec
pushf
sbb
push
push
sbb
sbb
ljmp
mov
rcr
or
call
jmp
mov
cmp
fdiv
jmp
les
mov
mov
or
and
jle
xchg
lret
stos
aam
push
push
into
xor
addb
repz
cmp
or
mov
cltd
leave
fnstenv
ret
cmp
or
leave
mov
adc
cmc
jp
mov
in
mov
sub
js
subl
lcall
mov
les
and
adc
mov
movsb
xlat
addl
xchg
and
inc
or
push
push
test
sub
dec
je
dec
mov
push
fsubrl
pop
push
push
leave
xlat
fildl
mov
sbb
push
outsl
push
jge
mov
popf
mov
sbb
mov
pop
rorb
mov
cmp
xor
mov
std
ljmp
mov
lods
imul
outsb
add
fcompl
nop
les
push
fsubp
push
shll
fisttpll
jmp
push
push
push
adc
out
xor
mov
mov
jl
or
push
mov
jbe
add
clc
mov
adc
jo
mov
sub
xor
data16
lea
jbe
repz
inc
mov
jmp
aas
rcrb
push
out
sti
mov
cli
push
test
sub
outsl
imul
je
in
js
test
mov
dec
or
cmpsl
mov
push
mov
sub
cwtl
ror
dec
cmp
leave
jbe
rorl
xor
pop
hlt
adcl
or
mov
icebp
in
pop
or
mov
mov
bound
cs
in
jbe
inc
rclb
cmpsb
sahf
cmp
or
mov
sahf
enter
ds
stos
add
and
push
mov
pushf
std
stos
dec
push
xchg
test
push
inc
mov
dec
push
loope
jmp
push
clc
mov
sub
push
jae
rcll
dec
fidivs
and
mov
lret
sub
jbe
ljmp
xchg
add
mov
xchg
lret
and
pop
cmpsb
test
sub
sarb
sub
adc
or
jmp
xchg
push
pop
push
xor
sub
cmpsb
jns
mov
leave
pop
stos
xor
jmp
mov
mov
cmc
rclb
xchg
cmpsl
pop
adc
sub
icebp
xor
rcrb
sbb
cli
jbe
out
les
rorb
add
xor
loopne
push
fisubl
cwtl
cmpsl
es
divb
test
sti
sub
aas
outsb
inc
add
adc
sub
cmpsb
pop
mov
lret
and
adc
lahf
dec
stos
jl
mov
mov
push
push
repz
xchg
pop
in
push
and
inc
outsl
repnz
jns
push
dec
add
mov
and
call
pop
lahf
sti
stos
push
cld
inc
loop
js
xor
in
xchg
sub
add
xor
jno,pt
shr
lret
pop
mov
clc
dec
sub
fwait
aam
cli
fwait
mov
pop
inc
push
push
mov
loopne
push
and
jo
pop
dec
xor
add
decb
mov
aad
int3
push
mov
cmp
test
inc
sti
pop
pop
xlat
inc
pop
mov
sub
les
jnp
sbb
fistpll
add
pop
jb
cli
pop
xlat
int3
movsl
jmp
insb
jno
insb
dec
add
ljmp
push
mov
xor
pop
out
cmp
sub
mov
mov
mov
nop
xchg
in
int3
std
fstps
cmp
adc
lock
addb
decl
mov
test
mov
stos
jbe
add
scas
mov
mov
add
xchg
outsl
inc
mov
nop
jecxz
scas
inc
je
pusha
xor
adc
push
sti
aaa
mov
fcompl
fwait
in
mov
data16
mov
pop
shlb
jmp
aaa
stos
push
das
arpl
and
sub
dec
and
dec
pop
adc
sub
aaa
scas
cmp
sbb
aas
jne
push
or
dec
jnp
pop
cmp
jle
mov
aam
daa
loop
sbb
mov
jbe
inc
mov
add
dec
mov
sbb
aas
jle
clc
push
lcall
lods
jbe
xchg
and
push
gs
out
pop
pop
mov
push
sbb
xor
push
aas
mov
inc
bound
pop
ret
or
ja
sbb
jecxz
mov
push
sbb
ss
testb
je
enter
sub
or
cmpsb
jb
adcl
test
lcall
mov
and
dec
sbb
out
sbb
lahf
shlb
popa
jg
inc
add
in
jl
mov
pusha
std
sub
xchg
fdivs
push
cmpsb
jnp
xlat
cmp
js
sub
negb
scas
cld
push
cmpsb
xchg
in
adc
test
lcall
iret
aam
mov
ret
loop
lahf
ds
xchg
add
xchg
fstl
mov
jmp
sbb
testl
data16
pop
iret
xor
inc
push
pop
imul
movsb
jle
xor
push
leave
sbb
cs
aaa
insl
push
out
inc
inc
in
cmpb
lock
out
dec
cmpb
lea
out
insb
scas
into
dec
sub
or
adc
fisubrl
aad
iret
aas
sbb
aas
pusha
in
jge
sub
mov
mov
scas
sbb
rcrb
xor
add
insb
mov
pop
arpl
insb
cmp
sub
mov
cmc
cmp
inc
sti
test
push
hlt
xor
jb
test
push
dec
cmpsb
xchg
bnd
mov
and
arpl
sti
push
mov
inc
add
mov
mov
jbe
lahf
sbb
mov
sub
mov
xchg
lods
pop
stos
arpl
in
jno
push
jo
insl
lret
ljmp
xor
ret
jb
push
bound
shrl
sub
orb
aaa
scas
sbb
pusha
pop
orl
jnp
repnz
xchg
sbb
ret
sub
fwait
and
xor
push
ror
xchg
lahf
mov
daa
and
fmul
push
lret
call
js
pushf
stos
jg
out
es
pop
sbb
mov
not
mov
sti
mov
pop
mov
dec
inc
cmp
cltd
call
movsl
lret
mov
xor
in
fcompl
sbb
sbb
xchg
and
clc
aaa
enter
imul
dec
iret
add
cli
add
scas
popl
sub
pushf
push
lds
imul
fs
call
pop
jl
push
fwait
sbbb
sub
loopne
push
xor
mov
pop
js
pop
movsb
xor
sub
jno
adc
sub
outsl
xor
nop
ror
ja
nop
fcmovnb
dec
rcrb
dec
adc
aaa
lret
pop
mov
lock
negl
cwtl
or
jge
pushf
in
shll
cmp
loopne
push
lea
dec
cmp
test
sbb
mov
add
jbe
push
aad
push
js
sub
jecxz
int3
mov
push
lcall
add
stos
ja
ds
sub
pop
repz
dec
fldcw
rcrl
push
enter
out
iret
push
dec
loop
mov
bound
or
cmc
imul
into
std
pop
lds
fdivs
cli
mov
movsl
scas
aaa
xlat
mov
sub
clc
cmc
and
sbb
inc
stos
dec
repnz
push
jecxz
repz
cmpsb
cwtl
cwtl
ja
pop
add
push
icebp
jnp
sub
out
icebp
dec
or
test
cs
mov
jnp
dec
lret
pop
pop
inc
sub
bound
loop
inc
repz
dec
cmpsl
in
jle
setp
sub
xor
cmpsb
dec
inc
ljmp
sbb
push
inc
mov
mov
jbe
mov
lahf
add
jmp
movsb
and
addr16
fsts
inc
jecxz
stos
stc
lds
inc
daa
jecxz
add
sub
xor
xchg
xrelease
repz
mov
in
dec
lahf
testb
arpl
scas
xchg
imul
testl
xchg
es
or
mov
imul
jge
iret
fstps
mov
inc
xor
ljmp
mov
stc
dec
outsl
aad
sbb
in
iret
pop
mov
or
add
jmp
iret
dec
push
stos
jle
pop
iret
imul
jne
je
and
mov
pop
jle
gs
xchg
out
std
mov
mov
mov
fs
in
xor
js
lods
mov
sbb
push
mov
mov
jb
or
bound
iret
mov
push
dec
outsl
adc
cltd
fwait
daa
rolb
xchg
dec
outsb
outsb
ja
fcomps
cmc
cmp
in
push
adc
mov
dec
mov
mov
push
pop
inc
adc
scas
in
push
mov
nop
shrl
add
xor
lret
sub
test
pop
imul
aaa
test
jl
ret
mov
cmp
lret
cltd
pop
xchg
loop
cs
clc
iret
lods
adc
sub
sbb
mov
xlat
lahf
jae,pt
je
adc
mov
lock
pushf
inc
jnp
aam
lods
icebp
mov
sub
cmp
dec
sarl
ss
xchg
and
scas
fisttpll
mov
mov
jb
or
and
inc
mov
ss
lcall
xorl
and
inc
or
sub
test
pushf
daa
loope
movsb
notb
mov
arpl
xchg
loopne
fisttps
leave
imul
push
incb
mov
int3
push
iret
xchg
lock
and
push
and
js
add
or
xor
jns
adc
imul
and
insb
inc
into
jl
jbe
jge
adc
sbb
mov
daa
mov
or
iret
loope
out
push
les
mov
push
xlat
push
push
sbb
xor
jge
data16
adc
fwait
imul
lcall
pop
sbb
sbb
in
jbe
lods
cmpsb
in
mov
mov
scas
push
sub
jbe
xor
ss
cmp
imul
push
mov
loope
cmp
push
loopne
fadd
sbb
hlt
pushf
pop
mov
in
in
inc
xchg
pop
jb
sub
ja
inc
sub
mov
lea
jne
mov
sub
sbb
enter
cmp
shlb
inc
mov
and
and
cmp
pop
or
enter
lods
imul
insb
pop
xchg
cltd
imul
enter
add
cld
cwtl
xchg
cmp
jg
xlat
mov
in
fsts
fidivrs
enter
jle
leave
mov
mov
and
push
cmp
sbb
mov
cmp
push
add
xor
jg
or
rclb
repnz
pusha
bound
and
add
stos
test
lock
ret
daa
incb
mov
popa
mov
jae
jmp
jae
xchg
push
loopne
bound
dec
adc
cmpb
shr
ret
clc
and
jle
jge
jno
lds
xchg
mov
test
xor
loop
cmc
mov
xchg
xchg
jmp
dec
dec
xor
nop
adcb
or
adc
test
sbbl
lret
inc
push
mov
xchg
pusha
push
and
aaa
cmp
subl
mov
out
out
pop
cmp
pslld
fisubrl
sbb
cvtps2pi
cmpsl
and
lea
adc
adc
shlb
sbb
or
scas
or
jmp
cmp
std
xchg
mov
scas
adc
mov
lret
sub
xor
lock
scas
and
push
pop
cli
popf
test
scas
aas
jecxz
jbe
mov
test
xor
cmpsl
pop
lock
mov
xchg
mov
aaa
cmp
vcvttpd2dqy
fst
insl
lahf
bound
and
mov
loop
jg
stc
add
mov
inc
xchg
fsubrl
push
dec
jge
jns
sbb
xor
insb
jmp
clc
out
insl
dec
jb
lret
arpl
pop
push
or
mov
dec
mov
jo
or
jmp
mov
xor
pop
lea
push
sbb
fs
jmp
in
pop
xlat
test
sbb
daa
jp
inc
negl
jmp
ljmp
pop
sbb
rcr
inc
mov
pop
mov
cwtl
xchg
cli
loop
aas
xchg
push
negw
dec
pop
pop
pop
xchg
xchg
and
sbb
adc
pop
arpl
dec
lock
sti
mov
sti
cmp
sub
cld
ret
xchg
pop
mov
into
cltd
mov
call
shlb
sbb
xor
fwait
xor
jb
push
insl
add
sub
out
into
pop
sbbb
mov
or
pop
sbb
push
icebp
orl
enter
jnp
loop
ret
adc
dec
xor
or
cmp
sti
adc
jb
call
gs
mov
insb
sbbl
scas
sub
xor
mull
clc
sub
ja
xlat
jno
out
cld
in
mov
push
jl
dec
mov
sbb
adc
gs
out
push
lods
pop
pop
mov
pop
dec
dec
adc
and
roll
popf
or
mov
fbld
lcall
sub
sbb
and
cvtps2pi
inc
fistpl
jae
imul
in
pushf
jae
xchg
mov
and
and
sbb
aaa
mov
sub
hlt
movsb
mov
pop
iret
or
decb
cmpl
add
lcall
cmc
into
inc
inc
aaa
icebp
jp
call
inc
mov
jne
xchg
stc
repz
sub
mov
dec
adc
out
or
outsl
inc
imul
add
jb
call
ret
ds
cmp
sbb
iret
fistps
je
adc
add
test
push
fisttpll
orl
cmp
sti
mov
stc
xchg
or
and
decb
xchg
mov
inc
ss
sbb
and
adc
shrl
sub
push
mov
outsl
loop
fiaddl
clc
mov
shrl
xchg
cmp
and
out
test
test
fs
add
sbb
cmpsl
dec
ljmp
sbb
iret
cli
call
jmp
std
or
and
and
mov
pop
pop
mov
xchg
lret
clc
mov
dec
leave
add
cmp
shll
cmpsb
add
adc
mov
stos
sbb
fnstsw
rcl
xchg
cmp
sbb
xchg
and
lods
sub
les
xor
pop
mov
mov
lcall
lret
popf
hlt
aam
pushf
mov
insl
dec
icebp
inc
xor
and
mov
mov
jmp
cmp
test
sti
xchg
shll
and
dec
sbb
push
stos
cli
cmp
fwait
out
jle
inc
pop
mov
push
mov
jmp
movsl
insb
pop
pop
dec
in
in
in
lods
inc
adc
pop
lock
jecxz
pop
mov
clc
popf
xchg
xchg
cmp
hlt
rep
pop
andb
jp
push
push
cmp
outsb
das
mov
pop
popl
inc
cmc
cwtl
inc
xchg
movsl
sbb
xor
xchg
fldt
cmp
lahf
or
pop
pop
rcll
cs
inc
jb
and
sbb
push
int3
lret
mov
rorb
ret
cld
mov
cs
cmp
icebp
pop
push
ror
xchg
and
push
fstpt
leave
insl
mov
jne
rcrl
lret
sbb
dec
movsb
jecxz
dec
aam
mov
addb
loopne
push
enter
rol
and
lods
lods
inc
lret
test
arpl
iret
xor
jnp
cld
adc
or
adc
xor
out
pusha
mov
test
or
add
jecxz
insb
bound
movl
jo
fnstcw
jle
mov
sub
jb
aam
mov
dec
mov
mov
and
push
lret
mov
fldl
filds
hlt
xchg
js
mov
xor
addr16
jg
pop
jge
test
aaa
adc
imul
nop
mov
ds
jmp
jl
out
addl
pop
inc
hlt
clc
int3
inc
xchg
test
lods
inc
add
and
mov
psubd
push
es
loopne
outsb
inc
cs
xchg
mov
or
and
adc
xchg
daa
inc
fimuls
sub
dec
rolb
xchg
pop
push
inc
lods
mov
pusha
imul
push
xor
mov
mov
popa
push
sbb
xor
pusha
shrb
add
mov
mov
pop
mov
pop
or
xchg
icebp
mov
jmp
add
insl
mov
rcr
mov
lock
mov
and
cwtl
mov
push
jnp
adc
push
dec
inc
jl
mov
lods
ja
jp
fnstenv
sbb
insb
in
ja
addl
daa
outsb
cmp
inc
test
cmp
sub
xchg
enter
cli
inc
shrl
jmp
push
xor
int
mov
jl
mov
cmp
mov
xor
jl
sub
cmp
mov
dec
push
das
mov
jbe
push
popa
inc
sub
sbb
insl
jo
vpsubw
add
andb
mov
push
repz
leave
iret
std
out
adc
jle
adc
fstl
jl
push
repz
cmc
addl
xchg
shr
sub
aad
mov
orl
sbb
or
outsl
lahf
fnstcw
nop
jno
sbb
lods
jns
push
andl
mov
lods
mov
xor
icebp
sbbl
popf
dec
das
sub
sbb
push
lods
scas
mov
pop
xchg
or
lods
dec
lahf
scas
testb
and
or
sbb
pusha
xor
mov
frstor
and
sti
adc
in
fcomps
xchg
xchg
sbb
aam
sbb
aas
cltd
hlt
ss
mov
call
mov
shr
das
scas
movsl
mov
mov
mov
xchg
push
push
mov
mov
sub
or
pushf
scas
and
pusha
cmp
hlt
js
cmp
movsl
frstor
cmp
fmull
rcrb
cmp
mov
fistpl
and
jbe
xorl
push
dec
data16
adc
jnp
push
mov
push
push
imul
pop
in
push
std
outsb
or
mov
scas
push
repz
add
gs
inc
inc
inc
or
mov
jne
test
xchg
jg
int
lcall
mov
bound
dec
mov
and
xor
mov
pop
cwtl
popf
stc
inc
pop
jmp
adc
jno
dec
fstpl
mov
xor
int3
cmpsb
sbb
daa
clc
shlb
or
adc
xchg
adc
test
adc
sbb
jg
or
inc
loope
inc
popa
push
pop
js
movsb
stos
push
xchg
arpl
inc
pop
lea
mov
dec
rep
test
cltd
rcl
mov
fxch
in
sbbl
js
ss
mov
sbb
add
cmp
pop
mov
inc
repz
addl
xchg
or
add
ret
xchg
sub
out
dec
ljmp
mov
push
xchg
jge
cmpsl
test
jbe
mov
pop
sbb
or
xchg
cs
push
mov
or
cltd
fdiv
jae
push
dec
cmp
sub
outsb
xchg
clc
push
xchg
lds
iret
cld
dec
push
or
pop
shlb
imul
add
pushf
dec
jp
mov
cmpb
negl
aaa
jg
addr16
mov
dec
push
push
sbb
jmp
icebp
mov
int
and
jmp
and
jb
mov
xchg
arpl
add
insl
loop
mov
jne
sbb
iret
jne
icebp
movhps
mov
cli
pushf
sahf
je
xlat
orb
loope
xchg
xchg
jecxz
dec
test
dec
daa
ljmp
or
cld
imul
inc
mov
adc
lret
mov
add
mov
lea
cmp
test
push
jmp
xchg
imul
mov
or
ss
and
dec
cld
xorl
iret
mov
scas
test
pop
loop
pop
mov
int
fidivrs
and
loopne
clc
xchg
sub
mov
jno
aaa
or
cmp
pop
adc
in
mov
addr16
mov
jg
cmp
sbb
jns
fcomps
mov
arpl
lds
loop
addl
mov
lcall
sahf
ret
xchg
pop
comiss
jg
lret
divb
mov
xor
nop
or
in
arpl
jnp
dec
push
out
add
xchg
and
add
jmp
loop
cmp
or
jo
in
flds
and
gs
imul
or
insl
cld
cmpsb
fdiv
mov
popl
lret
jnp
and
shlb
mov
lods
sbb
enter
pop
sbb
and
pusha
in
fcomps
out
xchg
fiaddl
call
sahf
and
cmp
jmp
push
jae
mov
ss
xchg
mov
lea
push
mov
xchg
es
mov
sub
testl
mov
repz
pop
inc
jmp
add
push
xor
ja
jne
bound
call
pop
insb
sub
cmp
jnp
out
subw
stos
mov
jg
add
inc
mov
fdivl
add
in
sub
ret
lods
cli
jo
cmp
xchg
push
jg
pushf
fwait
hlt
adc
and
pop
out
ds
mov
push
mov
mov
adc
pop
pop
jno
or
rcl
pop
test
mov
xchg
pop
and
xchg
icebp
fildll
bound
jbe
rorl
push
pop
mov
lods
inc
push
pop
sbb
mov
imul
mov
cmp
dec
pop
pop
std
std
mov
push
and
pop
mov
or
lret
das
jp
push
xor
cmc
pop
ret
or
mov
shrl
mov
sbb
imulb
les
cld
push
cmp
movsb
ja
inc
movsb
pop
adcl
push
push
stc
into
neg
aad
std
push
in
js
test
jb
cmp
rclb
sbb
loop
scas
rolb
push
mov
or
dec
inc
pop
lahf
fidivs
dec
and
mov
into
mov
mov
push
dec
xor
fimuls
outsb
sti
add
sbb
pop
mov
mov
aaa
push
pop
pusha
stos
fdivrp
sbb
imul
leave
push
xor
dec
add
imul
iret
shll
es
xchg
jae
data16
cltd
flds
sub
ss
and
pop
test
fwait
lret
mov
daa
movsb
mulb
shl
xor
cltd
es
lahf
mov
fsts
push
bnd
add
mov
ret
enter
out
cmpsb
enter
cmp
push
out
dec
fld
mov
adc
jle
std
sbb
jb
sti
mov
jb
sbb
enter
stc
sbb
clc
sbb
mov
jne
xchg
lahf
into
jbe
sahf
mov
mov
lahf
sbb
mov
mov
mov
jmp
cmc
push
mov
jb
jecxz
and
or
push
and
daa
mov
or
push
inc
add
cmc
cwtl
or
jnp
cmc
fsubl
sbb
cmp
sub
push
pop
insl
outsb
sbb
rorl
xchg
lret
call
push
lahf
dec
and
mov
jno
mov
pusha
push
jno
and
cmpsl
loop
cmp
mov
add
push
xor
inc
and
ret
scas
jg
jmp
mov
inc
fiadds
xchg
aam
rol
pop
lret
add
xchg
xchg
rdmsr
pop
push
mov
or
movsl
mov
sub
fbld
sbb
jge
pusha
push
fimull
imul
mov
pop
movsb
repz
outsl
cmp
ret
cwtl
cmp
inc
stos
mov
inc
lods
sub
cwtl
idiv
and
add
clc
outsl
xchg
fbld
lret
adc
cmp
fidivrs
in
stc
cmpsl
xor
mov
or
jl
add
mov
fs
mov
icebp
dec
jmp
xor
adc
mov
mov
xchg
les
or
cmpxchg
hlt
inc
aaa
mov
sar
cmp
mov
adc
test
adc
cmp
jp
mov
insb
stos
or
jno
aaa
xchg
dec
cmp
fs
sub
dec
inc
mov
inc
aam
pushf
mov
mov
rolb
ds
fmull
or
cmc
dec
jle
mov
mov
sbb
mov
mov
repnz
lods
lret
fildll
sbbb
sahf
inc
pop
mov
lahf
cltd
fadd
mov
push
negl
cmp
mov
shrb
pop
pusha
ljmp
mov
jnp
mov
dec
jl
fsubp
cmp
xor
sahf
jl
aaa
in
idivl
xchg
test
lds
or
jge
pop
adc
adc
add
jnp
xchg
pop
inc
xor
mov
mov
pop
dec
fistps
js
jp
mov
sub
aas
mov
push
jp
xchg
jnp
je
out
sarl
inc
loopne
sti
push
add
insl
shll
fwait
ds
insb
mov
sbb
les
hlt
inc
movsb
in
dec
pop
call
xchg
lds
cli
jo
push
inc
rorl
fs
ret
sbb
loopne
cmc
into
sbb
dec
mov
fwait
xchg
xchg
dec
cli
and
or
pop
cmpsl
imul
jge
gs
pop
dec
adc
les
in
scas
jge
mov
in
xorl
mov
mov
dec
jge
cmp
loopne
addb
cmpsl
sbb
daa
mov
fimuls
xor
stc
pop
fisttpll
jge
pushf
jmp
outsl
dec
mov
in
jmp
movl
stos
test
pushf
int
cmp
negl
stos
or
cld
jbe
xchg
jle
xorb
int3
push
mov
jno
fsts
xor
sbb
es
ss
aas
pop
or
lds
mov
push
subb
mov
ja
bnd
outsl
fdivs
xchg
jb
jb
jle
out
push
test
jae
mov
sbb
jb
fstpl
jne
adc
pop
xchg
xchg
adc
mov
fistpll
or
xchg
add
add
mov
add
push
sbb
add
jmp
pushf
mov
fistpll
xchg
jno
xchg
aad
ja
add
sbb
push
mov
inc
jg
loop
push
fcmovnb
sub
sub
push
push
stos
stos
xchg
das
repz
xlat
jle
clc
repz
lock
enter
dec
adc
movsl
inc
jno
test
enter
lock
xchg
mov
xorl
aaa
rcrb
cld
cwtl
sub
cmpsb
loop
push
aaa
jg
sub
add
xchg
xchg
lods
ljmp
or
dec
cmp
mov
mov
pusha
seta
andb
int
insl
fistpll
lcall
cmp
ret
or
js
adc
pop
loope
push
test
out
sub
aas
lods
lret
arpl
lock
out
mov
pusha
push
ret
and
cvtdq2ps
or
push
sub
push
cmc
ret
pushf
fwait
xor
pushf
dec
cmp
gs
andb
xchg
cmp
jg
inc
bnd
mov
sub
xor
pop
sbb
and
sub
mov
rcl
pop
and
push
mov
sbb
xchg
ret
movsb
lret
xchg
test
lcall
iret
push
mov
mov
jbe
inc
test
dec
cld
arpl
leave
imul
adc
loop
pop
jae
in
jecxz
lods
loop
sbb
sahf
pop
jge
inc
sarb
lret
jns
test
enter
mov
push
insl
dec
leave
test
jl
fwait
int3
je
or
into
jo
xchg
jg
repnz
std
outsl
xchg
pop
jl
jle
jae
clc
jecxz
or
jg
mov
adc
pop
and
jnp
repnz
cmpsb
dec
cmpl
cmove
daa
cmp
fcom
dec
test
mov
cli
pop
fwait
xor
out
mov
sbb
sub
or
pop
jno
mov
ja
inc
push
jle
mov
xor
xchg
in
xchg
mov
pop
aaa
push
inc
adc
adc
cmp
ljmp
out
cmp
orl
push
and
negl
pop
insl
inc
cwtl
fidivrs
clc
mov
sbb
mov
cs
inc
add
pop
xlat
adc
clc
aad
ljmp
pop
cmp
or
xchg
mov
and
add
ret
sbb
es
mov
or
aad
xchg
fnsave
ret
or
orl
xchg
pop
imul
jnp
adc
and
xchg
mov
dec
xor
pushf
mov
test
das
sbb
mov
es
and
jb
xlat
lret
loop
test
adcl
mov
jnp
dec
fs
inc
jae
mov
fcomip
or
outsb
inc
xchg
rorb
push
inc
orl
mov
jecxz
mov
mov
add
fildl
inc
cmpsb
or
inc
js
aas
arpl
mov
jp
xchg
pop
sub
mov
jecxz
cmp
dec
xchg
pusha
je
mov
dec
outsb
xchg
inc
lret
nop
xor
lea
rorl
aas
jle
subb
stc
push
adc
rolb
aas
jbe
lea
std
push
data16
xchg
mov
mov
xor
dec
js
movsl
mov
mov
imul
or
rclb
mov
aam
sub
jnp
pop
dec
scas
add
fisubl
arpl
aad
jp
addb
outsb
sub
filds
cs
lahf
and
jbe
push
mov
jbe
enter
daa
and
pusha
outsl
mov
mov
push
mov
add
xchg
mov
adc
lcall
jo
jl
ds
test
pushf
pop
rcr
dec
in
ds
lock
mov
pop
mov
mov
lret
stos
mulb
sar
pop
or
jnp
xchg
out
sbb
in
or
xor
and
into
insb
mov
adc
std
movsb
jns
insb
test
mov
inc
aas
sbb
push
cmc
sub
addl
cld
jmp
xor
xchg
dec
in
sub
xlat
inc
mov
and
pop
test
mov
seto
shrl
inc
rorb
les
jp
fisttpl
sbb
mov
test
xchg
cmp
imul
into
insb
dec
shrb
ret
jb
jb
shl
mov
xchg
iret
dec
ss
xchg
jns
pxor
sbb
push
inc
and
jecxz
xor
arpl
shrb
popa
shl
leave
pop
fstp
jl
pop
iret
imul
mov
popa
orl
negl
insl
ja
leave
fs
lea
mov
repz
shll
mov
stos
shl
dec
sub
popa
insb
jae
in
mov
push
inc
xor
lahf
inc
jbe
ljmp
sti
lcall
cwtl
test
jl
xchg
pop
ret
std
adc
dec
xchg
arpl
cld
cltd
inc
aaa
addr16
and
mov
data16
pop
jo
mov
ret
bound
imul
mov
adc
sbb
call
push
xor
aam
ss
xorb
push
lds
inc
loop
push
outsb
out
inc
xchg
adc
sbb
testl
icebp
pop
cmp
inc
ja
enter
mov
imul
xchg
sub
data16
scas
cmp
push
shll
or
cltd
in
jns
rcll
adc
mov
test
dec
xchg
aad
stc
test
cltd
gs
jg
jno
repz
jbe
adc
cs
test
mov
and
and
daa
xchg
aas
mov
inc
lahf
push
stos
mov
neg
xchg
xor
loop
add
dec
sahf
rcll
cld
mov
shlb
mov
xchg
pop
inc
and
cwtl
popf
or
fisubs
mov
icebp
cmp
cwtl
cltd
mov
lret
icebp
mov
pop
pop
and
xor
xor
or
jb
aam
sahf
or
pop
lds
adc
inc
sub
popf
mov
or
in
gs
xchg
xor
ror
jg
pop
pop
adc
pop
push
push
pop
lret
adc
dec
sbb
into
adc
rcrl
clc
outsl
jbe
mov
sub
pop
lahf
es
cmc
xor
outsb
push
xor
aaa
pop
das
mov
movsb
mov
mov
iret
ss
sahf
adc
adc
fstl
fcompl
addr16
popa
adc
inc
jl
mov
or
or
add
cmp
ret
bound
jl
in
outsl
xchg
mov
sbb
or
sbb
sub
jne
add
push
push
pushf
jae
fsub
jb
mov
fs
lods
out
js
fiadds
das
jecxz
fidivl
push
je
xor
and
repnz
xor
in
xorl
mov
stc
in
push
dec
int3
inc
mov
inc
mov
cs
mov
shl
shl
lcall
clc
shrl
or
or
sbbb
cltd
dec
bound
psrld
arpl
push
test
sbb
imul
fisttpll
out
mov
sub
cli
lahf
add
or
pop
mov
and
or
cld
mov
clc
test
cmpsb
jmp
pop
insl
out
iret
push
dec
add
xchg
scas
pushf
into
mov
dec
in
mov
dec
push
mov
jne
mov
notl
aad
add
adc
in
pop
sbb
js
call
sbb
fsubrl
out
lcall
loop
mov
and
incl
sbb
sub
cs
nop
pushf
adc
dec
fninit
insl
cmp
es
lret
in
fistps
icebp
int3
cs
sub
or
cmc
fdivl
jns
sbb
loope
push
mov
xor
push
std
icebp
mov
negl
fldt
repz
pop
frstor
pushf
or
movb
add
push
lods
lret
clc
out
stos
pushf
inc
mov
xor
jl
mov
fs
stos
mov
xchg
nop
or
int
sub
push
repnz
fdiv
mov
lods
cltd
outsb
push
shrb
fs
sub
mov
dec
add
jle
jmp
push
pop
cmp
lods
shlb
cmp
dec
jae
push
in
add
adc
enter
lods
push
adc
add
pop
adc
xlat
das
popf
movsb
or
inc
fmulp
mov
lahf
lock
jl
sub
push
inc
icebp
xchg
lcall
push
add
outsl
sti
mov
sbb
js
jbe
xchg
sbb
add
lods
leave
out
push
enter
lahf
push
enter
xor
jb
mov
add
loope
jl
xchg
cwtl
sti
pop
mov
je
mov
outsl
jge
or
xchg
pop
nop
enter
imul
mov
pop
in
add
in
aam
ficoml
movsb
cmp
int3
sbb
std
mulb
pop
and
lds
negl
cmp
or
sbb
test
fcmovnbe
push
sub
iret
sub
roll
xor
test
and
inc
roll
adc
data16
addr16
in
add
mov
jnp
js
cmpsl
pop
int
ja
sbb
fdivr
or
xorl
js
aas
xorl
fistpl
lret
mov
imul
movsb
pop
out
xor
mov
test
sub
pop
push
ficoms
outsl
into
jg
lea
xchg
jmp
fwait
int
into
pop
stos
sub
rorb
sti
push
inc
test
xchg
out
test
inc
ret
cmp
pop
mov
sub
jge
in
push
add
or
sub
cmpb
enter
mov
cwtl
in
or
pop
push
dec
adc
movsl
push
fisubrs
mov
xchg
das
stos
dec
and
int
pop
test
push
pop
subb
bound
xchg
outsb
aaa
addr16
push
push
mov
and
test
ja
mov
jp
jg
add
lcall
stc
adc
insl
movsl
inc
je
push
fisubrl
mov
mov
dec
lock
lret
andb
rolb
gs
mov
xchg
iret
gs
das
xchg
push
sbb
pusha
inc
enter
ror
loop
push
popf
shlb
pop
jp
dec
filds
clc
outsl
ds
jmp
loop
jl
inc
aam
stos
aam
pop
insb
sub
and
cmp
mov
gs
jl
repz
or
insl
dec
stc
into
hlt
jb
mov
in
dec
insl
jnp
inc
mov
addr16
or
fcoms
inc
or
xor
xchg
mov
sahf
and
jo
leave
inc
adc
mov
mov
outsl
add
cli
mov
adc
sbb
test
pop
icebp
jmp
sbb
out
movsl
fisttpl
mov
stc
scas
ds
mov
cmpsb
pop
lea
sti
inc
das
jnp
inc
gs
in
lods
cmc
cli
inc
aam
div
stc
mov
in
jg
xchg
mov
call
cmp
movsl
pop
cmp
lahf
or
fnstcw
push
das
and
into
jg
inc
mov
dec
adc
cmp
sub
or
dec
add
push
clc
push
mov
cmc
sub
inc
mov
sbb
dec
movb
sub
jle
pop
xchg
pop
jl
ret
push
sbb
inc
jne
mov
int3
mov
subl
pushf
and
pop
out
or
adc
int3
rorb
add
and
cli
pop
cld
jp
push
mov
adc
je
or
mov
mov
adc
arpl
mov
or
mov
mov
fwait
xor
push
lret
outsb
loope
out
paddw
mov
pop
outsl
fidivrs
insb
ret
mov
adc
in
add
loop
rcl
mov
xlat
sub
ja
pop
sub
aaa
adc
shlb
pop
push
sub
fstpl
mov
loope
ficoms
push
test
ja
push
mov
push
mov
rolb
mov
mov
dec
shrb
xchg
pop
lods
andb
cs
xor
mov
mov
sahf
outsl
cmp
dec
std
mov
testl
mov
mov
mov
mov
loop
mov
repnz
fsubl
outsb
test
inc
or
mov
bound
jno
iret
test
cmp
into
hlt
into
test
cs
mov
pusha
push
insb
and
int3
fbld
push
inc
repz
mov
jecxz
mov
sub
add
sbb
cmp
insb
aaa
nop
dec
sub
sub
shlb
data16
dec
iret
xchg
or
movsb
daa
aad
adc
lahf
xchg
jne
mov
ret
lret
mov
ss
in
push
push
addr16
lods
jmp
cmp
cmpsl
and
pop
pop
cmpsb
nop
loopne
test
ja
ret
mov
push
imul
mov
outsl
lods
inc
xor
aam
int3
mov
jge
adcb
or
daa
rclb
test
outsb
and
adc
and
mov
push
mov
push
xor
pusha
adc
pop
sub
je
or
fdivrl
mov
xchg
outsl
sub
stc
inc
js
cwtl
pop
ss
pop
clc
inc
mul
xchg
das
mov
movsb
mov
jmp
test
mov
jno
add
popf
cmc
xlat
jg
dec
sbb
sbb
mov
sbb
push
out
aad
mov
sub
cmp
lahf
add
dec
dec
icebp
inc
icebp
cmp
sbb
cli
test
sub
push
int
xor
pop
ds
jl
adc
mov
and
and
iret
adc
cmpsl
pop
cmp
sahf
scas
pop
adcb
aad
adc
lea
std
xor
faddl
mov
dec
pusha
insl
xchg
repz
repnz
shl
xchg
sub
mov
sbb
incb
out
imul
sbb
xchg
lock
aad
int3
push
fisttpl
push
loop
mov
sti
add
ja
mov
xchg
mov
popf
inc
dec
out
xor
outsl
push
mov
jmp
cwtl
shr
out
cmp
lods
mov
dec
addr16
enter
divb
adc
cmp
or
and
shll
std
imul
lcall
std
cmp
scas
pop
and
cmp
in
and
imul
xchg
sub
int3
cmp
mov
lods
mov
mov
jl
sub
sti
fildll
sub
push
cmp
push
mov
dec
fsubp
xor
inc
popf
sbb
fsubl
mov
imul
lds
in
sti
fldt
int3
rcrb
ljmp
sbb
mov
fldenv
loop
arpl
cmp
jne
mov
dec
mov
test
dec
outsl
jne
clc
cmpb
loop
jo
adc
fbld
sub
pop
push
pop
popa
pop
aad
ret
cmp
mov
sbb
jno
pop
cld
in
in
xchg
in
testl
cmp
mov
jbe
push
mov
xlat
sub
mov
outsl
popf
jmp
shll
push
sbb
push
call
and
add
cmp
popl
xor
das
and
mov
pop
fs
sahf
jge
xor
and
xor
and
pusha
jge
cmp
inc
mov
add
int3
fucom
lret
push
or
dec
sbb
lods
ret
rcl
push
jg
imul
jns
pop
inc
or
pop
inc
aaa
lret
rcll
pop
stos
jle
leave
push
test
mov
cmpsl
ss
gs
dec
or
cmpsb
adc
jl
push
adc
lds
ja
int
jnp
mov
call
ret
fidivrs
dec
hlt
jne
jle
sub
xchg
sbb
ficoml
cmpsl
sub
xchg
pusha
pushf
dec
in
jno
xor
leave
lcall
dec
mov
dec
inc
movsl
add
scas
dec
mov
gs
dec
fimull
jg
jle
fcomps
sti
add
shrl
jmp
lahf
dec
inc
pop
mov
adc
jge
xor
fiaddl
daa
ret
xor
in
or
lret
stos
inc
not
mov
or
nop
mov
pop
in
addr16
fadds
xchg
iret
scas
inc
lahf
push
mov
jns
jle
fadds
or
and
imull
lret
ss
loope
sbb
mov
mov
xlat
cmc
fadd
lret
xlat
jo
add
sbb
mov
fcoml
nop
mov
lods
mov
loop
push
nop
jmp
mov
insl
xor
lret
fistl
scas
mov
movsb
pop
pop
and
xlat
aas
call
aas
mov
mov
daa
sub
pop
push
inc
sub
rcrl
std
cs
pop
loop
adc
ds
jns
test
cwtl
mov
std
and
aam
lcall
inc
lret
and
dec
and
pusha
imul
xor
cmp
sbb
mov
lea
cmp
dec
out
lods
int
jge
mov
xchg
or
xlat
mov
lcall
sub
mov
mov
jge
adc
xor
or
fildll
ret
test
icebp
int
mov
add
fidivrl
shrl
insl
pop
cmp
ja
sbb
inc
and
daa
cmc
push
popa
pushw
sbb
lods
call
add
mov
dec
add
sbb
add
jae
cmp
add
cld
lret
dec
xorl
lcall
or
dec
mov
pop
icebp
mov
sti
fwait
push
int3
bound
sbb
shll
rcr
outsb
fisttps
dec
rcll
jmp
mov
or
pop
in
lock
std
imul
or
sbb
rcrb
dec
jg
add
scas
repnz
add
pushf
imul
mov
xlat
dec
sub
jge
jns
stc
es
pop
jge
rorl
push
push
xchg
lods
and
and
imul
ja
cmp
cmc
in
in
xor
mov
dec
lahf
jmp
repz
mov
xor
mov
xchg
cmpsb
bound
and
and
and
out
fistpll
add
aad
xchg
xor
xor
jb
or
and
sti
or
mov
sbb
inc
add
xchg
sbbb
xchg
fiadds
movsl
xchg
xchg
push
pushl
jns
cmpsl
xlat
pop
hlt
mov
pop
loop
inc
mov
jl
mov
dec
lahf
out
test
lds
test
rorl
mov
add
jnp
fucomp
mov
or
lods
pop
lcall
xor
outsb
push
ret
out
inc
xor
xor
dec
hlt
imul
dec
adc
fs
std
xor
xchg
shrb
fst
subl
xor
nop
das
test
jecxz
pop
ljmp
dec
mov
cmp
mov
aad
jae
mov
push
ret
pop
scas
inc
out
inc
lods
flds
daa
idivl
fwait
cmp
pop
cs
inc
dec
lods
ljmp
pop
fisttps
jge
jecxz
imul
sahf
ret
inc
inc
or
test
add
jl
adc
sti
xor
dec
cmc
lret
pop
push
and
jbe
pop
addr16
repnz
popf
fs
inc
cmp
cmpb
jmp
fs
jmp
fists
dec
jp
int3
inc
pop
repz
popa
fucom
daa
pop
pushf
mov
inc
inc
xchg
test
xor
pop
rol
xchg
sub
xor
mov
inc
bnd
jmp
adc
mov
aam
fildl
push
cmp
fldpi
fsubr
loop
in
mov
cmp
in
cmpsb
mov
sbb
imul
or
subb
aas
sbb
or
xchg
sub
ds
dec
inc
out
repz
bound
notl
call
cltd
cmc
enter
outsl
adc
dec
xchg
das
addr16
cmc
data16
loopne
add
inc
mov
adc
sbbl
adc
sbb
or
cmc
mov
push
data16
out
ds
nop
enter
xchg
fldenv
dec
and
fisubl
and
sub
push
lcall
xchg
roll
inc
mov
pusha
xor
lret
dec
or
xchg
add
pop
aaa
xor
int
fnsave
pop
sub
cmp
add
das
dec
mov
daa
cmc
jge
and
je
cmp
adc
sysret
pop
lods
push
mov
icebp
movsb
les
push
or
xchg
push
add
mov
shlb
sub
sbb
clc
adc
ss
sbb
in
mov
push
mov
push
outsb
mull
pop
xor
cmp
push
shlb
xchg
mov
outsb
int
imul
in
xor
pop
and
xchg
sti
cli
xchg
testl
outsb
dec
bswap
add
int3
scas
shll
lock
fucomip
lock
cld
ljmp
xchg
fisttps
jg
push
jmp
inc
movsl
and
ret
insb
cltd
fimuls
mov
sbb
mov
sahf
sub
adcl
dec
cltd
jo
popf
or
out
enter
aaa
loopne
stos
je
mov
aas
fstpl
adc
iret
mulb
frstor
mov
loope
xchg
push
insb
out
icebp
pushf
stos
imul
mov
mov
mov
or
leave
jne
bound
mov
ret
inc
das
lea
and
jmp
loop
mov
outsl
mov
cmp
add
adc
xor
insb
add
ja
inc
push
je
push
pusha
xor
inc
xor
sbb
inc
gs
mov
push
loope
jno
add
push
xchg
xchg
icebp
cmp
test
movsb
jge
pop
add
pop
pop
push
xchg
sub
imull
shl
xor
xchg
es
inc
adc
mov
out
ljmp
ja
pop
and
or
rclb
rcl
push
pop
mov
test
push
out
dec
inc
mov
fstpl
cld
lea
sbb
or
dec
and
test
aad
notb
jecxz
in
and
push
aad
mov
in
sbb
std
fstps
mov
into
mov
sbb
inc
inc
jno
jg
push
call
pop
fidivs
dec
daa
aaa
iret
cmp
popf
inc
jl
cli
add
movzbl
gs
push
movsl
sub
cs
fstpl
xchg
orl
mov
pushw
jge
or
cmp
cs
fstpl
xchg
imulb
aam
add
adc
or
jno
imul
xchg
testl
imul
enter
in
pop
push
stc
push
lcall
mov
imul
jns
les
cld
dec
loope
lea
push
xchg
inc
insl
and
pop
lods
pop
inc
xchg
mov
dec
enter
jl
rcl
add
fiadds
pop
leave
jne
mov
dec
adc
push
ret
sti
and
pop
mov
mov
jo
jp
or
or
lret
outsb
pop
xchg
xor
mov
pop
push
xor
lods
sbb
stos
arpl
xchg
xchg
sbb
push
pop
fwait
jl
jecxz
ja
push
xor
dec
mov
jne
xor
sbbl
xchg
lea
dec
dec
idivb
outsb
faddp
mov
mov
int
push
lods
push
outsl
stos
aam
sbb
stos
mov
jbe
mov
loopne
cmp
stc
jle
cmp
and
xchg
pop
cltd
divb
push
dec
cwtl
shl
sahf
ret
adc
shlb
movsb
xchg
hlt
pop
push
cmp
adc
sub
adc
mov
or
sti
cmp
cmp
sub
loope
sbb
add
movsl
or
pop
int3
mov
lea
pop
add
add
test
outsl
xchg
in
xlat
filds
lea
jge
push
mov
test
ficompl
dec
fndisi(8087
pop
imul
xchg
mov
cmc
jle
popf
subb
loope
std
lods
and
jmp
movsb
ret
xchg
pusha
fsub
arpl
mov
cs
aaa
cli
enter
mov
and
cmpsl
jne
adc
notb
daa
add
arpl
adc
dec
ret
xor
pop
mov
jb
push
jl
ss
push
pop
fs
add
or
xchg
and
sbb
cmc
xor
xchg
push
adc
mov
in
mov
xor
pop
dec
stos
pusha
scas
mov
dec
inc
mov
mov
test
mov
push
lcall
lock
popf
mulb
call
inc
cli
jge
fs
pop
pop
push
data16
in
sbb
notl
and
dec
or
sarb
insl
push
iret
out
pop
mov
ljmp
out
inc
inc
sub
loop
add
push
test
pop
test
mov
lods
ficompl
push
fadds
mov
push
cmp
stos
rcr
and
adc
inc
fimull
insl
sbb
lret
pop
adc
or
mov
xor
sub
popa
xlat
or
bnd
push
std
cmp
jecxz
xchg
pop
js
jae
adcb
xchg
outsl
scas
fildll
dec
lods
jnp
mov
jge
jae
inc
cltd
cmp
xor
dec
push
fsubrl
pop
mov
mov
cmp
cmp
icebp
cmc
and
xchg
fmul
adc
std
add
jnp
and
js
shl
test
pop
push
mov
out
test
bound
imul
out
mov
xlat
adc
inc
dec
lret
xchg
and
es
xchg
mov
in
inc
jp
and
cwtl
inc
add
nop
mov
frstor
pop
clc
cmp
adc
cmpb
fisttpll
adc
loop
sti
adc
rorb
jge
dec
mov
or
mov
sarl
push
sub
mov
inc
adc
jnp
xchg
cmpsb
fwait
pop
pop
repnz
xor
mov
mov
call
add
leave
lret
adcl
pop
je
nop
ds
mov
aaa
mov
loop
mov
push
stc
pop
movsb
addr16
popl
xor
cmp
xor
and
pop
mov
jp
jne
call
pop
xchg
in
in
notl
push
aaa
jbe
jb
push
int
mov
xchg
test
je
sbb
xor
mov
fdivl
lret
xchg
cmp
cmp
aam
xor
inc
sub
js
and
popf
sub
fdivs
push
xchg
call
mov
lods
cmp
cmp
cmpsb
in
adc
in
sbb
inc
pop
add
cwtl
call
rcr
stos
pop
or
scas
pushf
mov
jnp
ret
dec
les
mov
hlt
ficoml
lret
and
pop
pop
xchg
shrb
out
ret
ficompl
or
stos
insb
shrl
aas
shll
cmp
mov
inc
test
mov
push
call
loopne
cs
ljmp
mov
pop
pusha
jb
mov
dec
add
call
mov
mov
shll
sub
js
mov
xchg
aam
jmp
out
test
popf
clc
jle
jno
out
mov
shll
pop
jmp
mov
xor
movsb
add
scas
das
clc
inc
cmp
repnz
imul
mov
sub
stos
push
cmpsl
mov
fisttpll
add
fsubrl
sub
push
enter
inc
adc
stos
dec
dec
iret
outsb
or
xor
jl
sub
adc
mov
and
std
loop
fcom
cmpsl
lahf
sbb
xor
pop
xchg
addr16
movsl
fsts
mov
js
adcl
gs
lods
jge
mov
xchg
xor
rcrb
call
push
std
test
subb
ret
xchg
aam
inc
lret
add
sub
pop
mov
imul
xlat
xchg
bound
dec
filds
es
jo
insb
jno
xlat
hlt
into
sub
fisubrs
dec
mov
std
repz
test
dec
out
shl
movsl
test
int
ret
lock
stos
test
sbb
stos
and
imul
shl
push
push
fs
imul
icebp
jmp
inc
stos
pop
cmc
push
cld
pop
pop
jg
ds
int3
loop
sub
out
je
sub
cmc
stos
adc
clc
rclb
jbe
iret
stc
push
loope
cmp
in
pop
enter
adc
add
cmp
loope
add
add
jmp
mov
pop
cmovl
setbe
mov
cmc
sti
xor
sbb
jnp
pcmpgtb
xchg
stos
dec
sbb
or
test
add
iret
inc
add
mov
lock
aaa
cmp
inc
ds
ret
pushf
clc
test
mov
add
lcall
out
adc
dec
gs
push
jmp
fsubs
xchg
mov
inc
test
or
mov
movsl
fs
daa
and
imul
xchg
or
iret
mov
out
or
and
sub
pop
mov
xchg
xor
iret
dec
call
pop
pop
stos
sahf
das
add
push
pop
inc
inc
push
push
cmp
xchg
loopne
inc
inc
or
pop
lahf
xor
stos
adc
out
movsl
idivb
mov
pop
outsl
jnp
aad
orb
add
sbb
jle
mov
cmp
inc
push
test
pushf
xchg
dec
fldt
jmp
cld
cmpsb
leave
push
mov
cmp
mov
aam
es
in
cmp
xorb
enter
xchg
xor
cld
lahf
xchg
sahf
aam
xor
add
adc
or
jmp
or
out
pop
mov
cmpb
ljmp
push
ret
push
lods
inc
cmp
mov
xchg
shl
cmc
inc
push
jns
repz
mov
stos
cwtl
jae
pop
cmc
push
xchg
lahf
xor
dec
in
add
cmpsb
or
pusha
add
ja
push
mov
xchg
mov
xchg
mulb
std
xor
movsb
cld
es
add
cmc
xchg
pminub
lret
mov
sbbb
mov
inc
hlt
adc
addl
int
and
inc
push
test
push
data16
xor
xor
sahf
push
aad
xor
clc
lea
add
push
mov
sahf
lret
out
mov
scas
adc
pop
aas
sarb
dec
jns
dec
add
xchg
call
or
or
mov
movsl
pop
lahf
sub
cmpb
or
mov
rcrb
fnstcw
cmp
adc
add
jg
xchg
push
xchg
sub
popa
sbb
mov
unpcklps
stos
inc
fwait
mov
xchg
std
mov
fiaddl
push
sub
dec
scas
or
cmp
int3
daa
out
mov
or
rcl
pop
lahf
adc
inc
cmc
add
outsl
inc
flds
inc
pop
jp
nop
cmpb
fs
lea
and
loopne
fst
fbstp
sbb
cmp
mov
cmc
sub
jo
divb
jb
and
test
out
popa
mov
es
jb
fnstenv
mov
loopne
xchg
mov
and
mov
dec
repz
sub
sub
pop
xchg
xchg
adcb
arpl
pop
pop
pushf
or
mov
or
cmp
cmp
dec
mov
jno
inc
lods
mov
mov
aas
movb
dec
int
in
sarl
sbb
inc
or
xor
xor
xchg
mov
push
enter
imul
loop
aas
inc
mov
push
sti
sub
xor
rclb
mov
hlt
inc
pushf
cmp
shrb
sub
adc
pop
ds
fnstsw
jnp
shll
flds
add
into
lahf
sbb
or
dec
jne
push
dec
push
cs
loopne
hlt
pop
adc
pop
mov
fwait
push
fwait
es
push
cwtl
mov
sbb
jnp
adc
repz
icebp
in
sbb
gs
xchg
pop
mov
fwait
cmp
in
jo
add
push
dec
jmp
lods
lret
mov
repz
mov
pop
pop
filds
push
push
hlt
jecxz,pn
or
add
sub
pop
test
jnp
lahf
sbb
lret
sbb
pop
or
push
cmp
mov
loop
xchg
jae
int3
fwait
test
jb
sbb
jo
push
data16
in
pop
and
adc
xor
jg
mov
movsl
outsb
jge
sarb
sub
dec
mov
mov
dec
aaa
cli
mov
jbe
aas
mov
pop
xchg
fstpl
jecxz
mov
xchg
sar
leave
nop
mov
mov
popa
sbb
pop
pop
rorl
mov
inc
pusha
ret
mov
adc
adc
enter
sahf
data16
jnp
jl
or
xlat
fwait
sbb
add
push
sbb
out
jno
das
xor
mov
xchg
sbb
and
sar
lds
or
jg
out
cmpsl
ds
test
movsl
jmp
sbb
inc
in
xlat
outsb
std
xchg
xchg
rclb
push
jno
lods
mov
mov
popf
or
pop
mov
mov
aad
jle
clc
xchg
es
loopne
pop
push
mov
fldcw
xchg
pop
cli
cmp
sbb
and
xor
sbb
outsl
or
jp
jp
push
and
sbb
ret
movl
xlat
ja
pop
adc
adc
inc
xor
or
leave
adc
stos
pop
cltd
xchg
in
mov
xchg
cwtl
or
stos
pop
mov
nop
sub
jl
xchg
jle
push
add
or
xor
push
aam
into
sub
int3
notb
rorb
pop
ss
adc
cmp
ret
cwtl
int
lock
lds
clc
push
sub
imul
pop
pushf
rorb
inc
jg
and
call
xchg
mov
call
jmp
mov
lds
cmpsl
cmp
fwait
repz
xchg
aaa
pop
clc
and
dec
clc
out
sti
loop
mov
or
mov
scas
cmpl
xchg
sbb
cmpsl
repz
into
int3
scas
mov
movsl
std
rcrl
pop
sbb
das
mov
xor
loopne
jecxz
mov
outsb
jne
xchg
dec
sub
mov
mov
cmpsb
xchg
aaa
mov
pushf
xchg
bnd
iret
xchg
lea
rcrb
mov
cmp
mov
dec
and
inc
mov
les
sbb
mov
ret
test
sub
sub
les
test
jae
jmp
jg
das
in
popf
or
dec
lahf
inc
mov
cmp
mov
je
pop
or
add
xor
aad
cmp
pusha
dec
jge
outsl
mov
or
xor
pop
adc
sti
push
aam
rolb
aam
push
insb
out
outsb
mov
cmp
push
sbb
jg
dec
xor
clc
xor
loope
and
outsb
lods
lea
pop
insb
jne
mov
sub
out
sbb
cmp
test
cld
jecxz
inc
fldenv
je
in
mov
sbb
loop
sub
sub
mov
lret
jo
mov
jbe
les
in
mov
movsb
aas
jbe,pt
mov
pop
sarb
mov
inc
mov
xchg
inc
pusha
xor
ret
cwtl
inc
pushf
sbb
or
pop
lret
outsl
in
sbb
xor
push
aas
mov
lahf
cmp
nop
adc
mov
pop
pop
add
pop
insl
pop
and
and
fisubrl
mov
movsb
loopne
out
roll
xor
sub
insb
lods
mov
inc
mov
out
sbb
es
ds
nop
cmp
dec
fnstenv
leave
ljmp
hlt
mov
mov
xor
enter
xchg
adc
jle
push
xchg
out
xor
sbb
xor
imul
loopne
xchg
repnz
xchg
jnp
rcr
das
insl
xor
lea
mov
aad
ljmp
les
pop
cmp
push
loope
cmp
dec
loopne
std
xchg
adc
sub
ljmp
repz
push
push
mov
dec
into
sub
aaa
cld
rcrl
dec
adc
gs
dec
jae
aas
ds
scas
bndldx
mov
test
mov
pop
dec
xchg
arpl
int
outsb
shrl
mov
push
fwait
gs
pop
cli
int
out
sbb
fistl
sub
fwait
sub
mov
out
mov
cmpl
sbb
or
and
jg
sahf
in
cmc
mov
cwtl
rcll
les
movups
imul
push
xor
or
inc
and
test
stc
aas
fwait
jg
les
sbbl
cmp
fs
dec
mov
inc
enter
in
fisubl
cwtl
dec
jmp
sub
xchg
and
push
xchg
xchg
sahf
adc
fildll
fcomps
xor
orl
in
mov
push
jne
fwait
std
jl
into
les
xor
fdivr
push
mov
mov
mov
xlat
ja
sbb
int3
shlb
dec
or
sbb
xlat
mov
add
sbb
sub
pushf
and
ja
ja
iret
inc
jge
push
cmp
mov
add
lahf
push
mov
inc
insb
fidivrs
fisubs
jne
sub
stc
dec
jbe
mov
push
mov
fwait
rorl
sahf
ret
jecxz
cmp
in
mov
sbb
dec
lcall
cmp
aam
lret
mov
mov
outsl
ds
or
aaa
test
or
cmc
repz
add
addr16
or
cmpsl
mov
mov
scas
mov
popa
sbb
jge
xchg
mov
out
and
pop
sub
hlt
mov
in
sub
pop
xor
push
jno
pusha
imul
addr16
sub
sub
add
orb
icebp
or
cwtl
cmp
bound
dec
mov
loop
lcall
loopne
cmpsl
dec
inc
movsb
jnp
jmp
or
shll
sarb
dec
ret
cmp
shlb
adc
sbb
imul
fwait
scas
dec
dec
sahf
cmpl
or
ret
cbtw
mov
or
and
out
push
ficomps
cmc
sbb
repz
mov
addr16
bound
dec
je
clc
in
push
adc
clc
hlt
push
sub
es
pop
imul
xor
pop
test
enter
sbb
inc
lcall
ljmp
sbb
cmpsl
lods
pop
loope
dec
repz
out
in
mov
pushf
mov
pop
outsl
ss
pusha
xor
insb
aam
mov
pushf
push
dec
sub
or
inc
and
ja
mov
dec
fisubs
inc
call
xor
jbe
mov
cld
lcall
out
daa
shlb
nop
ror
dec
sub
push
aad
and
ficomps
push
sub
loopne
jmp
shr
inc
aas
shlb
aaa
and
test
ljmp
fsubr
jbe
pop
lcall
xchg
and
xchg
shl
mov
fnstenv
stc
ss
shrb
push
es
push
or
int
push
decb
pop
jl
in
jecxz
js
jle
push
dec
out
in
mov
inc
push
and
rep
pop
push
movsb
ljmp
xor
mul
shrb
cmc
orl
bound
mov
xlat
jecxz
jns
jne
sbb
ret
mov
push
int3
fs
mov
and
enter
mov
adc
dec
out
mov
sbb
push
and
pop
lahf
es
test
fisubs
lock
aad
and
push
fistl
lea
and
and
pop
leave
adc
imul
fsts
outsb
stc
add
jp
je
cmp
push
mov
arpl
xor
in
out
enter
xchg
add
les
xchg
popa
jne
in
adc
push
rcl
sub
repnz
ss
test
mov
cmpsl
mov
jnp
mov
js
imul
popf
stos
inc
jno
out
mov
mov
xchg
jo
mov
imul
sahf
fdivrs
cmpsb
insb
filds
or
flds
pop
ficoms
shlb
shll
mov
bound
imul
xchg
inc
and
fidivs
cmpsl
testb
jbe
cmp
cwtl
negb
das
pusha
jmp
lods
lret
cltd
fcmovb
aam
ret
into
add
pop
xchg
ss
or
pop
push
stos
out
xchg
ds
lods
jecxz
adc
push
popf
pushf
fstpl
mov
js
or
and
mov
sub
lret
outsb
xor
in
mov
fwait
aad
and
sarl
outsl
in
ljmp
push
cmp
dec
andb
pop
push
test
rclb
test
dec
push
in
xchg
xchg
fxch
pop
push
outsb
fsubrs
pop
cwtl
jmp
fwait
xlat
inc
inc
aam
stos
mov
ss
pop
icebp
jbe
or
dec
inc
pusha
not
loope
add
data16
movsl
sbbb
loope
add
repz
sub
push
xlat
test
xchg
in
repz
cmpsb
ret
imul
mov
dec
xchg
fistpll
cmp
sbb
jns
adc
fcoml
cmp
mov
xor
cmp
nop
repz
lock
test
adc
test
and
cmp
scas
mov
nop
repnz
pop
cmc
xchg
sub
pop
inc
sbb
pop
sub
iret
and
testl
add
and
pop
adc
xchg
push
pop
stc
push
mov
dec
inc
dec
and
cmpsl
lret
xor
addb
insl
jne
cmpl
xchg
or
or
jg
and
push
getsec
push
jl
mov
cld
outsb
mov
add
xchg
dec
jmp
mov
adc
pop
xor
xor
int
jb
mov
push
repnz
int3
fwait
jns
fsubrp
push
mov
adc
inc
outsb
insb
push
call
or
test
lret
cmp
fnstenv
mov
das
js
jo
test
pop
out
sub
sbb
ja
push
enter
fdiv
ret
daa
push
xor
jg
xchg
aas
std
lret
sbb
sbb
sbb
mov
pop
pop
lret
pop
and
dec
rcrl
adc
aad
iret
arpl
push
repnz
and
cltd
xor
jle
les
popa
repz
mov
fdivs
xchg
adc
ljmp
pop
or
sub
dec
clc
mov
and
xor
jge
in
sbb
in
push
and
inc
lds
repnz
fiaddl
cs
scas
cmp
xchg
orb
mov
movsb
popa
or
push
push
xor
mov
sub
ss
xor
adc
repnz
pop
loopne
sub
cmpsl
loop
pop
add
jb
mov
sti
rol
mov
inc
rol
in
popf
out
aam
test
jno
jbe
gs
scas
mov
inc
dec
jle
loope
inc
push
push
mov
inc
sub
jo
out
or
xchg
inc
faddl
mov
mov
mov
xlat
adc
push
or
jmp
xchg
mov
lods
and
add
dec
adc
xchg
into
fwait
daa
mov
sbb
test
sbb
inc
mov
or
daa
in
addl
pop
icebp
xor
add
setg
and
rolb
daa
cmpsl
add
or
test
mov
mov
xchg
mov
dec
pop
pop
fs
aas
pop
dec
int
rcr
stos
pop
test
mov
push
xchg
push
aas
sub
xor
pusha
dec
mov
enter
js
outsb
cld
divl
lods
mov
out
into
push
mov
sub
push
mov
ret
adc
gs
or
xor
nop
push
push
aaa
ljmp
jmp
and
pop
sub
fisubs
cmpsb
shlb
iret
test
pop
and
mov
hlt
xchg
mov
lret
mov
call
or
cwtl
dec
or
xchg
mov
idiv
mov
imul
mov
ret
push
mov
lods
fs
or
push
pushf
push
lock
lcall
jecxz
mov
push
xchg
test
fdivs
sbb
or
les
mov
dec
lahf
inc
jg
pop
in
lods
inc
inc
cltd
push
push
xchg
inc
jmp
ror
shl
jnp
mov
dec
lahf
imul
mov
cli
jmp
inc
lods
sahf
cld
lods
daa
xor
jo
sub
mov
lea
mov
add
jae
lds
fucomp
mov
lretw
mov
test
sub
aam
mov
fistl
sbb
test
sub
push
push
xor
in
inc
pusha
cmpsb
inc
sbb
sub
mov
insb
mov
push
lock
and
pop
rolb
enter
adc
or
nop
cmp
sub
stos
lahf
insl
lds
mov
mov
mov
pop
xlat
mov
xor
fisubrl
xor
cmc
mov
daa
add
icebp
mov
dec
adc
les
and
movsl
data16
lret
lods
lret
insb
sbb
mov
mov
js
sar
xchg
inc
and
scas
pavgb
hlt
mov
clc
pop
lds
xchg
leave
cs
aaa
cwtl
sbb
int3
push
rcll
push
inc
popa
leave
pushf
xchg
nop
jmp
mov
dec
mov
push
sarb
data16
incb
inc
je
cwtl
mov
loope
bound
js
lahf
in
cmp
mov
mov
xor
pop
in
mov
fs
ljmp
icebp
pop
push
std
cmp
stos
fimull
movb
jl
jns
faddl
mov
pushf
enter
fucomp
jno
mov
in
or
jle
mov
int
jae
xor
mov
push
arpl
pop
jae
cltd
jecxz
jmp
lods
stc
aaa
shlb
dec
or
jle
push
repnz
lahf
subl
je
dec
lods
dec
xlat
lcall
xor
or
push
xchg
stos
js
add
mov
rclb
stc
adc
jecxz
xorb
mov
icebp
jno
add
out
ds
dec
jnp
bound
fneni(8087
add
push
in
jnp
mov
or
out
fnstenv
and
insb
adc
xor
push
aad
shll
stos
inc
cmp
shlb
cmp
mov
inc
ret
push
push
divl
jl
add
les
jne
shlb
adc
push
das
aaa
cld
cmp
enter
imul
hlt
popf
out
popa
in
sarb
outsl
xchg
mov
cmpl
ss
xor
repz
and
sbb
test
ja
and
mov
mov
cld
inc
mov
cmp
dec
xchg
and
push
mov
int
pusha
push
stc
sbb
add
pop
dec
daa
std
push
dec
lods
inc
fsubl
loope
mov
shll
lock
lret
mov
scas
inc
dec
lds
sahf
pop
jnp
call
aas
dec
adc
mov
hlt
ret
xchg
jo
pop
ret
and
jno
iret
popf
dec
dec
std
idiv
xor
xor
xor
jl
cmc
dec
popa
rclb
hlt
std
mov
mov
mov
clc
rolb
mov
out
es
mov
lahf
or
fmul
stc
xor
dec
sbb
out
lods
push
arpl
and
pop
fdivp
sbb
xchg
jb
outsb
xchg
gs
sub
push
test
popa
xchg
shll
xor
and
jb
sti
mov
cmp
ficomps
movsl
mov
dec
pop
in
clc
out
out
mov
mov
jl
mov
mov
sbb
xor
sarl
cmp
xchg
call
pop
push
movsb
cmp
push
or
lock
in
dec
and
nop
inc
xor
rclb
jae
popf
cmp
lods
movsl
jge
adc
xor
inc
js
mov
sub
das
and
pop
lods
icebp
push
jge
mov
or
mov
lret
or
and
call
fcomps
cwtl
or
cmp
popf
lret
ja
imul
or
ficoms
mov
shlb
sar
cmpsb
leave
mov
jae
movsb
stc
jno
ljmp
call
xchg
adc
sbb
mov
xor
adc
or
pop
or
add
mov
inc
xchg
ja
fstp
xor
sarl
mov
mov
add
cmp
stos
cmp
cmp
push
sub
cld
and
cmp
das
xchg
out
inc
push
sarb
sti
mov
dec
dec
mov
add
dec
xchg
xchg
ss
daa
inc
call
xor
call
or
sub
fdivl
sahf
out
fcmovu
inc
movsb
pop
sbb
jmp
fisubrl
sub
shll
dec
sub
xor
daa
mov
xchg
mov
xchg
mov
out
sti
dec
dec
negl
cmp
nop
xchg
cmpsb
cmp
test
pop
mov
adc
cmp
sub
jno
cli
pop
pop
mov
xor
pop
enter
push
cmp
aad
sbb
cmc
lods
pusha
cld
lahf
pop
sub
mov
lcall
ret
jmp
lock
fmuls
dec
push
and
mov
mov
jle
lret
lcall
mov
loope
xchg
fisubrl
lods
mov
leave
xchg
xchg
enter
int
aas
or
in
fwait
cmc
mov
mov
dec
push
mov
cmp
mov
shl
fmuls
inc
inc
adc
loop
mov
inc
jge
inc
xchg
inc
pusha
popa
insb
repnz
cld
sbb
stos
js
add
inc
movsl
or
and
clc
in
xor
sbb
test
fwait
cmc
sub
jmp
shrb
push
adc
sti
cmp
lret
xor
lahf
imul
int
add
mov
dec
test
rcrl
inc
push
scas
in
pop
push
shll
ljmp
and
pop
push
xchg
pusha
and
push
mov
out
insl
pop
movsl
icebp
shlb
mov
xchg
cmc
xchg
mov
cmc
xlat
loopne
xchg
ret
sti
pop
pop
sbb
rcr
cmpsl
std
daa
shlb
mov
sti
daa
cmp
out
lahf
imul
into
loope
push
mov
add
cmc
cld
mov
dec
jecxz
inc
fisttpl
push
add
jns
and
mov
add
mov
mov
popa
dec
cwtl
inc
jae
std
sbb
dec
jo
orb
cmp
push
add
xor
cmc
xchg
outsl
mov
sub
incb
pop
pusha
addr16
jae
cmp
fldcw
pusha
mov
icebp
mov
push
std
pop
mov
mov
test
jo
rcrb
addr16
ss
inc
lret
inc
and
or
out
fldenv
mov
sahf
inc
sbb
jle
adc
inc
adc
int
inc
in
std
aas
in
sub
addr16
add
out
idivl
lret
or
jb
shlb
shlb
test
inc
fldln2
in
lods
test
dec
imul
push
mov
dec
insb
lahf
cmc
je
mov
fimuls
ficoms
mov
test
jg
mov
add
int
cmp
cmp
das
movb
aad
sahf
xor
jae,pn
movsl
pop
xrelease
mov
aaa
popf
add
xlat
adc
sub
pop
mov
dec
add
int
divb
xchg
jae
stc
mov
insb
jnp
movsb
mov
fs
pop
jns
cmc
pavgw
inc
data16
add
add
jle
xor
xor
out
add
sti
out
push
icebp
push
in
pop
nop
jo
sbb
add
ss
mov
outsl
mov
inc
fidivrs
jecxz
sahf
dec
cmc
cmp
cmpsb
cwtl
sarl
xchg
pusha
lret
sbb
mov
psubd
pushf
cwtl
imul
dec
hlt
mov
mov
xchg
push
js
fiaddl
jg
lea
popa
sbb
clc
xchg
push
sbb
or
and
jecxz
or
jle
fcomi
sub
cmp
popf
jns
push
popa
sti
mov
sarb
inc
sti
das
push
fs
pusha
mov
leave
movsb
out
mov
add
frstor
mov
dec
mov
rclb
testb
lcall
pop
xchg
sub
ja
call
cmp
sub
sti
stc
insb
dec
in
and
adc
jno
aaa
pusha
mov
daa
addr16
aad
pop
mov
xchg
ljmp
mov
ljmp
nop
adc
mov
jmp
adc
sbb
dec
in
xlat
and
dec
add
scas
out
push
lods
push
mov
in
ficompl
add
out
cmp
fnsave
outsb
jbe
js
xchg
test
pop
int
inc
stos
mov
push
lods
rcl
lret
les
inc
mov
arpl
or
jmp
and
mov
inc
jg
enter
jae
gs
adc
movsb
out
lret
ret
push
pop
add
popa
adc
iret
and
cmp
fcomp
push
pop
sub
scas
test
shlb
dec
fldcw
pushl
dec
in
les
data16
pop
xor
or
jae
mov
xor
movsb
dec
mov
push
dec
cmp
pushf
or
clc
cmp
xor
cs
setbe
incb
das
js
jbe
leave
out
sbb
imul
scas
and
lods
test
fstps
pop
mov
fldcw
sub
and
pop
shr
popa
addr16
lret
loope
sbb
mov
xor
xor
fldcw
cmp
jno
or
bnd
mov
jne
das
cmpsb
inc
popf
fstl
inc
cli
loop
mov
lret
mov
fisttpl
xor
fwait
js
pop
in
mov
iret
repz
and
jecxz
addr16
and
loopne
xor
imul
adc
imul
pop
xor
or
aad
mov
mov
jno
aaa
stos
and
arpl
imul
cld
ret
je
sub
push
fnstsw
loopw
int3
jle
xchg
stc
add
mov
sub
les
add
sub
mov
mov
lret
fdivs
pop
icebp
aad
jns
add
adc
push
jno
lret
hlt
movsb
sub
into
xor
jge
fstpt
shlb
fisttpl
rol
fsubs
dec
lock
mov
inc
xchg
out
and
pop
cmp
sub
sub
cmp
loop
push
shl
jmp
push
mov
idivl
clc
mov
test
adc
inc
sbb
nop
inc
daa
mov
sub
mov
stos
in
and
mov
pop
data16
imul
in
in
arpl
fadds
dec
inc
jecxz
ss
xor
sub
xor
mov
daa
bnd
cmc
pop
mov
fbld
mov
dec
fldenv
push
hlt
ret
mov
push
xchg
int
orl
sbb
fs
jp
push
imul
inc
loope
loope
ret
mov
ljmp
ret
pop
pop
lret
pop
out
mov
cwtl
cltd
mov
mov
jae
xchg
or
cmp
adc
in
sub
adc
imul
cmp
pop
std
sub
cmp
fsubrs
je
mov
mov
loop
jl
xor
ljmp
movsl
stc
mov
lea
leave
iret
mov
pop
aas
add
mov
mov
call
test
insl
push
mov
decb
dec
stos
push
addr16
fs
inc
test
push
fmul
jecxz
xlat
sti
xchg
testb
lahf
std
les
dec
insl
fmulp
mov
add
filds
mov
in
shll
adc
pusha
ds
push
mov
or
out
lret
lods
inc
iret
rol
xor
ds
fcoml
pop
sti
pop
outsb
mov
xchg
push
pop
mov
add
cmp
sahf
cmc
out
and
xor
xchg
pop
popa
cmp
cmp
imull
xchg
and
stc
xor
cld
jg
mov
adc
adc
in
dec
jbe
in
xchg
sub
pop
ljmp
adc
pop
loop
out
mov
fsubs
repz
xor
inc
pop
in
cmpsl
jns
sahf
repnz
aaa
in
dec
add
or
xor
cmp
mov
lds
outsl
in
xlat
xor
stos
inc
add
pop
xchg
sbb
fnstenv
mov
nop
hlt
sti
xlat
dec
insl
dec
cmc
inc
out
movsl
mov
aaa
inc
xor
or
cmpsl
das
insl
adc
adc
sub
inc
leave
xor
inc
ds
or
sbb
stos
scas
xchg
into
mov
push
ljmp
imul
dec
pop
inc
iret
and
pop
pop
inc
xor
mov
jbe
cli
mov
cwtl
in
jns
roll
shrl
repz
xchg
lds
sub
xor
in
or
int3
fwait
fs
mov
inc
insl
mov
ret
js
andb
imul
and
xor
adc
inc
mov
jl
sti
jecxz
cmovp
shlb
jmp
mov
pop
mov
jle
push
fwait
mov
out
fdivs
push
inc
out
sahf
lea
sbbb
mov
or
cmp
imul
sub
cli
repz
dec
xor
lahf
mulb
mov
lret
out
neg
mov
fcomps
mov
push
scas
sub
ret
scas
cmp
or
jl
jne
mov
jge
outsl
into
adc
push
xchg
mov
outsl
push
cltd
or
mulb
ret
mov
inc
or
inc
and
and
shlb
jnp
cmpsl
pop
lcall
es
pusha
sub
shlb
adc
dec
cmp
lahf
xor
sub
pushf
xchg
pop
enter
pop
pop
push
mov
imul
jne
popf
xchg
cli
call
pushf
fdivs
cmp
aaa
mov
push
mov
dec
cmc
orl
pop
push
jge
xchg
cmpsb
push
hlt
mov
mov
dec
cmp
into
inc
loopne
dec
dec
mov
divl
sti
repz
adc
gs
sbb
or
mov
jg
pop
mov
stos
fsubrp
ret
push
cmpsb
add
test
dec
pop
pusha
dec
cmpsb
dec
inc
nop
push
div
sub
xorl
mov
fstps
mov
mov
jo
cmp
fdivrs
mov
mov
xchg
aaa
fdivs
jp
adc
jne
in
int3
jmp
mov
xlat
inc
jmp
mov
and
fidivs
xor
jmp
add
sbb
jmp
shlb
fisubs
xchg
loopne
pop
ret
sub
xor
test
stc
fwait
and
cltd
pushf
pop
aam
inc
push
push
popf
sbb
sbb
pop
or
xchg
xor
lret
xchg
mov
das
gs
repnz
cmp
and
dec
mov
cmpl
mov
inc
repz
push
sbb
stos
pop
arpl
cwtl
xchg
dec
or
addr16
inc
cmp
xor
repnz
into
cwtl
sub
outsb
sub
xlat
addr16
mov
int3
and
lds
mov
adc
lds
cwtl
jge
std
add
addr16
js
stc
pop
fcmovnu
popf
push
sbb
insl
setbe
scas
ret
cmpsb
enter
jo
inc
clc
mov
aaa
rcrb
aas
scas
xor
sub
fdivs
int
add
mov
cmp
pop
dec
adc
shrb
xchg
sub
sarl
fmull
mov
jp
sub
std
pop
add
push
inc
repz
jo
div
hlt
mov
jbe
push
cltd
pop
stos
adc
mov
mov
hlt
xchg
cmp
cwtl
shr
pusha
lret
xchg
testl
inc
popf
dec
inc
lock
jno
pop
pop
adc
mov
ds
jl
mov
push
popa
insl
dec
icebp
cwtl
out
mov
imul
jnp
dec
js
imul
data16
test
lds
cmpsl
mov
mov
inc
mov
sbb
inc
pop
add
xlat
mov
mov
inc
stos
jo
into
rcrl
xchg
or
ret
sub
lret
mov
push
outsl
imul
movl
xchg
addr16
loope
sub
xchg
call
xchg
mov
xchg
clc
daa
jl
test
push
inc
jnp
jecxz
or
adcb
mov
mov
lret
mov
mov
sub
mov
sti
cmp
fbstp
sahf
cwtl
mov
jns
movsl
out
mov
pop
or
sub
scas
inc
out
loop
imul
pop
xor
int3
and
loope
in
push
fmull
fs
jl
xchg
int3
orl
les
sub
out
push
jo
pop
scas
movb
repnz
xor
mov
add
dec
leave
jns
in
jno
push
jecxz
xor
out
xor
mov
pop
mov
sti
out
fwait
adc
scas
dec
cmpsb
lret
add
mov
cmp
dec
outsb
push
inc
inc
jmp
cmp
int3
jne
push
fisubrl
add
add
fcompl
mov
shl
dec
mov
or
adc
jmp
pushf
mov
in
dec
rorb
aaa
mov
sub
daa
push
movsb
xchg
pop
mov
sbb
cmovbe
inc
sub
sbb
cmp
clc
push
pop
add
mov
nop
mov
mov
lods
mov
stos
aaa
sub
dec
pop
js
mov
or
imul
mov
stos
iret
aam
mov
dec
sbb
xor
rorb
out
testl
dec
stc
daa
das
mov
bound
pop
inc
pop
fbstp
mov
inc
jle
sbb
aaa
mov
lds
aaa
cmp
lcall
stos
inc
push
test
aam
sub
lock
ss
pop
mov
daa
inc
mov
push
daa
inc
es
sbb
aam
shll
lahf
xchg
push
ds
fnstcw
into
rcrb
dec
int
inc
outsl
jnp
mov
or
fs
in
pop
dec
popa
sbb
fwait
xor
mov
sub
fs
lcall
lret
movsl
popa
cmp
mov
jne
dec
pop
mov
jbe
inc
mov
rolb
fldcw
sbb
rol
lcall
mulb
cmpsb
lds
inc
or
stos
je
dec
jmp
scas
out
cmp
dec
std
addr16
rolb
ret
pop
loop
lds
push
jo
or
pop
das
ror
lea
cmp
iret
mov
pop
sub
jle
push
xchg
filds
inc
xor
lret
push
arpl
outsb
popf
mov
shll
inc
js
test
push
lock
rorl
insl
sbb
aaa
mov
clc
mov
jl
lock
movsb
push
mov
jns
int3
jmp
xor
out
mov
fistl
bound
test
adc
xor
test
or
cmp
inc
popf
xchg
andl
and
sub
sbb
ds
neg
xor
sahf
mov
push
cld
push
or
jo
cwtl
or
addr16
dec
mov
xor
cmp
xor
cltd
outsl
or
xchg
icebp
push
or
test
lret
popa
push
fmuls
test
movsl
gs
adc
mov
xchg
add
mov
fnstcw
adc
inc
ds
je
mulps
push
sub
mov
fnstenv
sti
mov
sub
pop
int3
jae
add
repz
int
fiadds
and
lea
jge
aam
add
sub
mov
mov
mov
and
nop
dec
mov
or
cmp
gs
lea
imul
fldt
pop
xchg
fnstcw
mov
add
dec
aam
adc
sub
rol
cmc
jnp
cmpl
rorl
stos
dec
or
mov
dec
xor
jl
sub
outsb
add
pushf
or
inc
lret
mov
andb
data16
clc
jle
loopne
adc
pop
inc
jmp
sbb
add
push
or
insb
dec
cmp
push
aad
outsb
in
xor
add
test
add
inc
outsl
fsub
and
add
and
out
adc
xorps
cwtl
inc
push
iret
mov
xor
test
clc
lods
dec
popa
lods
lahf
dec
dec
mov
in
xor
xor
test
lea
out
mov
imulb
inc
leave
mov
inc
lods
inc
leave
adc
ss
push
loopne
inc
rcrb
mov
jp
lret
addr16
test
push
add
jmp
mov
sahf
xchg
movsb
xchg
and
pop
popf
mov
stc
out
cmp
push
insl
sbb
gs
jo
gs
ret
mov
fcomip
pusha
test
gs
mov
jno
push
imul
adc
mov
nop
lock
pushf
fsubr
jne
sbb
mov
sub
mov
dec
or
into
repz
idivb
adc
int
pop
frstor
loop
push
mov
cmp
inc
xchg
xchg
cmpb
mov
mov
xchg
mov
cmpsl
loopne
xchg
dec
stos
inc
pop
out
jnp
imul
rol
pop
js
sbb
push
sub
dec
add
ds
dec
movsb
pop
out
gs
addr16
rcll
arpl
jecxz
push
inc
es
xchg
int
movl
das
sbb
je
mov
inc
push
fcmove
pop
icebp
je
pop
mov
movl
inc
mov
fnstsw
push
sub
lock
cmp
fisubrs
mov
subl
ljmp
aas
push
aad
xchg
inc
sub
adc
aam
imul
sub
xlat
ss
cmc
dec
stos
movsb
dec
inc
negb
mov
inc
and
clc
das
movsl
adc
in
or
jnp
push
cmp
or
mov
and
or
sbb
pop
pop
scas
shl
scas
jmp
mov
xchg
push
or
dec
es
imul
mov
cmp
into
dec
adc
mov
lcall
jbe
xchg
and
fidivl
js
jae
add
mov
or
cmc
popa
and
mov
xor
scas
mov
movsl
cwtl
fimull
jo
test
cwtl
out
subl
loope
mov
pushf
fisubl
aas
lods
sub
lahf
pop
ret
test
dec
push
adc
xor
xchg
loopne
ss
jae
mov
call
adc
test
mov
mov
das
cmp
clc
jb
jge
fcom
fstl
push
xchg
cs
ss
mov
out
into
std
sbb
xor
js
ret
enter
out
icebp
jg
inc
test
das
std
pushf
xor
add
insl
sti
push
push
sbb
popf
xlat
sbb
jge
xor
and
pop
aam
lods
mov
repnz
sub
fwait
ljmp
xor
arpl
test
adc
xor
xchg
scas
fstpl
fnsetpm(287
out
push
fcmovbe
sbb
lcall
jge
mov
pusha
xchg
sbb
inc
pushl
dec
out
in
jmp
lahf
mov
cmpsl
ss
sbb
add
xor
cs
xchg
mov
sbb
fwait
mov
cmp
adc
iret
cmpsl
adc
outsb
jecxz
imul
ss
mov
adc
cli
xchg
and
sbb
mov
xchg
pushf
push
inc
add
inc
sti
mov
mov
in
ja
in
cmp
jl
jecxz
xor
mov
pusha
push
test
ljmp
push
add
loop
xchg
insb
sub
jb
scas
test
mov
xchg
popf
jp
xchg
sbb
xchg
mov
jp
mov
lock
jbe
push
mov
xchg
jp
ret
repz
mov
fwait
insb
iret
xchg
xchg
inc
std
pop
pop
sbb
push
add
ds
or
insl
jno
dec
inc
xchg
push
ljmp
jnp
es
pop
or
pop
mov
sbb
stos
out
mov
rcrl
pop
ss
fnstsw
lret
insb
inc
cmp
xchg
data16
fdivrs
out
add
stc
jl
dec
mov
xchg
lods
jnp
xchg
and
rclb
mov
cwtl
subb
mov
add
dec
mov
jno
or
jl
xchg
and
inc
cmpsb
cwtl
xor
sti
mov
dec
sbb
test
cmp
ljmp
rorl
out
or
shlb
cmp
sbb
xlat
les
daa
rorl
xchg
fcomps
addr16
ds
jns
mov
pop
imul
ljmp
imul
mov
shll
lret
mov
cmp
add
and
movb
jecxz
adc
push
xor
add
mov
inc
in
xor
pusha
push
sbb
mov
mov
ret
xchg
xor
or
xchg
inc
and
int3
add
fwait
adc
icebp
lds
daa
dec
dec
mov
adc
and
xor
shrb
adc
insl
nop
cmp
lods
inc
push
xchg
ja
int
call
or
push
sub
dec
lds
inc
dec
cmpsl
leave
int3
dec
jo
aas
cmp
notb
mov
incb
and
mov
or
hlt
sub
pop
loopne
push
rolb
add
adc
cmp
mov
stos
lock
mov
cmp
outsb
push
fisttps
add
xor
aaa
mov
jne
adc
xor
cli
jge
add
jmp
addb
fisubs
shrl
mov
sub
cmp
cmpb
mov
and
mov
lods
pop
mov
mov
sbb
jo
dec
dec
cmp
sti
lea
push
lock
xchg
mov
cmp
adc
pop
std
scas
inc
psubusb
mov
xor
or
xor
sahf
add
ds
jns
leave
adc
mov
fwait
sarl
sbb
data16
cwtl
jecxz
xorl
std
mov
xor
mov
imul
fisttps
jae
xor
popa
mov
lret
and
inc
bound
leave
rorl
js
test
mov
xchg
push
add
pop
stc
jb
jns
sbb
inc
in
xorb
mov
sbb
neg
jecxz
jle
cli
sbbl
sub
out
or
mov
lcall
dec
inc
jbe
inc
jne
data16
scas
add
add
mov
popa
mov
mov
mov
je
in
xchg
push
jno
and
add
scas
mov
pop
nop
scas
xlat
pop
jmp
mov
scas
test
adc
xor
sub
addb
mov
fimull
cmp
push
subb
in
jmp
mov
sar
push
or
sbb
inc
ret
sub
or
mov
mov
push
push
xchg
sub
xchg
mov
jle
sarb
adc
ficompl
out
insb
je
pop
int3
push
cli
mov
dec
test
leave
out
lret
test
push
mov
mov
jb
fdiv
ret
push
pop
rcrl
mov
fldcw
add
notb
jb
lods
outsb
ja
sbb
xchg
lret
pop
push
loop
adc
xchg
in
push
lret
xchg
and
jns
loope
inc
lret
aas
pop
adc
sahf
jl
or
xchg
dec
icebp
cmp
or
out
cmp
stos
or
lods
loop
mov
add
mov
test
sub
or
aad
fwait
adc
mov
adc
outsl
ja
push
xor
fmuls
testl
nop
repnz
int
mov
push
scas
add
or
push
xor
lcall
mov
loopne
push
into
aam
push
mov
fsubr
cmp
or
adc
inc
outsl
sub
xor
es
outsb
pushf
inc
cmp
sub
mov
ss
int
cmpsl
test
adc
adc
dec
jnp
movsl
inc
adc
fnstcw
in
movsl
jmp
icebp
inc
stc
shrb
mov
pushf
sub
movb
sub
insl
xchg
loop
scas
mov
imulb
out
pop
push
xchg
insb
push
adc
sbb
loop
fstl
mov
repz
test
dec
call
or
push
sub
mov
sbb
insb
std
cmp
hlt
jbe
dec
popa
imul
mov
xchg
pusha
aas
into
fildll
xor
jne
les
repnz
icebp
cmpsb
sti
outsl
adc
jae,pn
outsb
out
daa
cmp
xlat
fs
lods
loopne
or
aaa
std
jnp
inc
ret
jno
xchg
jo
fildl
std
inc
lods
xchg
test
xor
sbb
and
outsl
in
dec
in
adc
mov
and
lret
push
dec
shlb
lods
addl
xor
mov
sbb
push
ret
jnp
mov
sti
daa
lcall
movsl
push
push
das
mov
incb
bound
xor
repz
outsb
push
std
cmpsb
mov
xor
add
xchg
jns
xchg
sbb
out
scas
xchg
xchg
dec
out
shrl
cli
cmp
mov
adc
and
sbb
pop
pop
and
mov
ret
mov
js
outsl
aas
jge
fcompl
es
mov
rclw
push
jns
sti
mov
ss
and
popf
iret
ret
sub
dec
fdivs
mov
scas
jae
in
mov
int3
mov
fbld
clc
add
es
insb
add
imul
sbb
es
imul
or
lods
test
or
ljmp
push
jmp
enter
jno
sbb
insb
xchg
inc
daa
in
dec
dec
int
pusha
loop
lock
push
aad
inc
adc
mov
pop
mov
dec
cmp
in
shrb
mov
sbb
cmp
mov
insb
stc
push
add
pop
lret
dec
lahf
jecxz
xchg
and
mov
fwait
int3
mov
xchg
or
xchg
sbb
in
icebp
mov
push
mov
inc
dec
pop
or
out
pop
lea
mov
int3
or
push
fcmovb
mov
jne
in
inc
push
sbb
xchg
jg
mov
fstpt
enter
push
add
xor
mov
into
push
jns
xchg
mov
jl
fcom
xor
cwtl
xchg
dec
filds
cli
fistl
inc
popf
cmpsl
push
cld
cmc
jecxz
test
ret
in
repz
jle
out
adc
sti
test
in
hlt
or
push
mov
ja
aas
jmp
cmpsl
divb
shlb
lods
mov
mov
leave
cmp
stos
arpl
inc
sbb
mov
push
addr16
mov
sbb
and
daa
push
out
es
xor
dec
pop
inc
xchg
pop
dec
add
in
incb
daa
fwait
lahf
ds
jo
fists
lret
cmc
dec
adc
inc
sbb
popf
mov
mov
mov
imul
cld
test
sbb
or
cwtl
cmp
mov
xor
mov
pop
adc
xor
inc
lret
inc
fmull
lods
xor
fimuls
sub
sub
dec
mov
jbe
cwtl
pop
add
add
push
fiadds
jb
xchg
cmpsl
lods
pop
pusha
aas
inc
je
nop
push
cltd
add
lcall
imul
rolb
cs
sub
cmp
dec
mov
jo
cmpsl
inc
inc
test
cmp
pop
pop
xor
lea
add
lahf
pusha
bound
adc
sbb
aam
cmp
inc
sbb
and
mov
sbb
dec
leave
cmp
test
cmp
lcall
bound
cld
mov
aaa
enter
mov
arpl
push
fsubrl
andl
jmp
adc
pop
je
xchg
out
stos
lret
mov
and
aad
xor
mov
push
out
inc
push
pusha
xchg
mov
cmp
icebp
test
imulb
inc
sbb
add
test
outsb
mov
into
sbb
inc
fistl
xchg
or
ja
xchg
sbb
faddl
pop
mov
inc
sbb
mov
mov
inc
cmc
jl
sbb
aad
push
sub
lock
out
push
aas
fnop
add
dec
gs
fwait
xor
cmpsl
imul
sarb
std
xorl
xchg
iret
mov
les
mov
pop
xor
xchg
push
cs
push
out
dec
cmp
adc
out
sub
std
adc
pop
mov
das
popa
inc
scas
filds
cmp
sub
add
nop
dec
outsl
and
sub
adc
xor
add
sub
shl
mov
lock
dec
mov
cs
mov
adc
cmp
js
nop
dec
stos
fstps
cmp
pop
fmul
outsb
lret
adc
loop
add
aad
cs
adc
add
mov
dec
push
data16
dec
sub
cmp
cmp
outsb
push
sub
xchg
mov
push
sub
outsl
arpl
add
and
imul
movsl
dec
scas
test
pop
orl
pop
cmp
inc
lock
push
fcmove
orl
leave
xlat
push
dec
in
adc
ja
xchg
xchg
dec
sub
push
cmp
sub
cmp
cmp
loope
mov
jp
dec
data16
in
or
dec
inc
push
sub
dec
fcoms
int
mov
pop
and
or
jge
jns
mov
push
push
lret
jp
pop
mov
xchg
add
fcompl
in
or
pop
pop
ret
iret
jle
cmp
push
xor
in
out
mov
and
jmp
inc
in
sub
jne
in
push
fsubs
adc
lahf
push
push
int3
mov
adc
in
mov
add
add
mov
je
mov
stos
xorl
aad
ret
jns
sub
or
mov
test
lahf
fistl
inc
dec
push
cmp
cmp
cltd
jecxz
mov
leave
sub
mov
fistpl
sbb
lds
les
xchg
movsl
scas
mov
ja
sbbl
push
push
sub
xchg
subl
push
lock
xchg
movsb
arpl
xor
xchg
mov
popf
or
in
test
sbb
sbb
push
out
cmp
out
ret
sahf
nop
sbb
xchg
int3
les
iret
out
imul
pop
int
jmp
mov
inc
jno
popf
neg
repnz
decl
mov
dec
hlt
mov
xor
sahf
jg
mov
out
mov
ss
out
clc
pop
enter
mov
xchg
dec
mov
or
adc
adc
sub
gs
repz
sub
add
cmpsb
mov
pop
fldcw
push
outsl
adc
lods
addb
or
lret
mov
lea
ss
lea
adc
mov
push
in
aam
faddp
push
jg
cli
add
adc
push
xor
out
test
mov
sub
pushf
aas
jl
inc
test
ljmp
nop
es
sbb
cmpsb
stos
cvtps2pi
or
dec
cmpsl
movsl
mov
mov
call
iret
push
lahf
jl
lods
adc
xchg
mov
repnz
testl
pop
repnz
fs
leave
std
arpl
shr
jl
mov
mov
mov
inc
arpl
jge
adc
testb
cmp
adc
mov
ds
sub
lret
popa
fbstp
ss
loopne
or
inc
out
push
je
dec
neg
je
jle
imul
sub
iret
sub
push
sbbb
pop
sub
cwtl
mov
movsb
sub
popa
cmc
repz
mov
imul
les
jg
mov
lahf
push
cmp
out
gs
enter
outsb
push
hlt
or
cli
notl
dec
adc
aaa
mov
jle
loopne
outsb
pop
pop
jp
jne
aas
push
and
jb
lock
in
push
jno
pop
inc
lret
ror
cmp
mov
sbb
inc
push
fadd
fwait
pop
or
ja
mov
sarl
jp
lcall
les
pop
pop
loope
lahf
fildl
cmpsl
out
adc
push
add
inc
push
sbb
imul
jge
bound
jbe
fwait
mov
jnp
test
mov
test
xchg
rorb
and
rep
test
mov
movsl
nop
jno
test
push
movsb
push
bound
mov
push
mov
or
xlat
push
je
cmpsb
push
mov
add
insb
dec
sahf
nop
xor
stc
fs
iret
sub
ret
daa
stos
xchg
mov
add
iret
addb
adc
out
and
push
fwait
pushf
pop
push
enter
push
jbe
dec
stos
out
inc
shll
clc
push
push
or
inc
das
xlat
call
xchg
lods
or
jle
dec
aad
mov
idivb
faddl
cmp
fld
jne
push
int
ficoml
mov
loop
inc
movsb
bnd
sbb
daa
fdivrs
add
push
int3
mov
xor
sbb
fidivs
mov
add
inc
in
jmp
nop
jl
jne
sub
push
fists
pushf
inc
mov
push
or
jp
pop
dec
leave
test
test
movsb
add
test
int
loop
add
dec
xchg
inc
add
decb
fst
mov
fistpll
lds
js
and
mov
fwait
mov
mov
pop
and
inc
push
xchg
mov
sub
arpl
inc
stc
dec
xlat
aaa
popf
daa
notb
int
dec
mov
push
jmp
ret
roll
dec
mov
pop
xchg
and
cmc
and
fucom
in
pop
scas
nop
dec
mov
popf
push
pop
pusha
lahf
sub
jnp
fmul
cmpsb
lret
cmp
push
mov
lahf
ja
and
xor
js
scas
bound
cmp
inc
mov
inc
xor
fld
xor
sbb
or
pop
lahf
inc
pop
add
jg
xchg
dec
scas
cmp
mov
or
sub
mov
out
fisubrs
lret
icebp
inc
cmp
jle
or
xlat
adc
and
adc
in
jl
call
lea
je
and
cmpsb
out
outsl
cs
pop
insb
push
sbb
loopne
test
aad
cmpsb
ffreep
lahf
out
lcall
fldt
adc
daa
inc
nop
imul
cwtl
sbb
pop
je
pop
aam
sbb
push
pop
test
dec
sbb
mov
adc
popa
scas
adc
ljmp
xchg
les
mov
aas
push
stos
cmpsl
xlat
pop
ror
movsb
cs
push
jmp
int3
dec
loop
subl
jae
clc
adc
shl
push
arpl
in
jecxz
jns
dec
mov
jecxz
bound
loope
or
int3
sub
bound
std
sub
push
loopne
iret
std
fadds
or
jne
lret
test
sub
xchg
or
lock
insl
pop
imul
adc
adc
ja
cld
dec
inc
dec
scas
hlt
mov
push
scas
sbb
insl
stc
push
out
mov
or
or
cmp
pop
jg
fsts
push
sbb
pop
fstps
sub
ffree
out
pop
or
xor
aas
mov
fcmovne
xor
pop
sbb
cmp
out
test
or
mov
in
inc
sub
je
cltd
cmp
mov
xor
cs
mov
xchg
jae
lret
mulb
dec
push
or
cmp
lods
push
scas
cmpsl
pop
pop
cli
xchg
mov
mov
scas
dec
mov
bound
cld
fstpt
mov
fwait
mov
loop
cmp
cmp
into
shl
iret
lea
int3
sbb
pusha
mov
mov
mov
or
stos
dec
fistl
pop
mov
adc
inc
dec
push
sbb
mov
data16
dec
aad
aad
jns
cmp
mov
fsts
sbb
xorps
nop
loop
mov
into
push
sub
je
xchg
lock
repnz
out
mov
jne
out
into
out
subb
xchg
cmpb
inc
pop
xchg
into
xchg
mov
xor
ljmp
sub
mov
jo
addb
sub
and
in
pop
int3
int3
push
mov
pop
jle
pop
mov
aam
pop
imul
jge
dec
and
push
add
mov
fmuls
cmp
sbb
inc
negl
mov
outsl
mov
jmp
mov
mov
lods
xchg
addl
dec
push
int3
dec
jb
aam
mov
and
pop
pop
shrb
jne
cmp
call
mov
jp
stos
pop
lods
cs
mov
dec
inc
pop
mov
nop
stos
adc
outsb
adc
ret
sbb
cmc
jp
xor
arpl
iret
xchg
data16
mov
loopne
add
pop
out
mov
and
aam
mov
or
or
adc
push
addr16
xor
repnz
adc
pop
mov
sub
sbb
lret
jp
cmpb
lock
insl
fs
cmpl
repnz
cld
in
les
dec
mov
sub
jmp
sub
mov
movsb
mov
and
bound
mov
jecxz
xchg
movsb
mov
or
sbb
jp
in
jne
das
inc
add
or
cmc
sub
sub
add
push
lds
jl
or
lods
sbb
cmpsl
cmp
enter
dec
outsb
mov
inc
mov
push
xchg
and
pushf
sub
or
mov
ss
jecxz
cmp
mov
xchg
sub
or
je
repnz
xchg
popa
hlt
inc
pop
nop
push
pusha
hlt
pop
mov
repz
cmp
dec
jp
jae
mov
xchg
jo
adc
je
mov
addr16
out
jmp
lods
jecxz
and
lods
lret
imul
jmp
push
sub
int
inc
and
or
arpl
mov
clc
and
lock
xor
stos
test
cmpsb
int3
fwait
sub
ja
movsl
sti
arpl
push
xchg
mov
repz
scas
push
add
enter
ret
sbb
imul
sbb
mov
orb
pop
dec
or
gs
imul
sbb
push
adcl
or
cld
ljmp
mov
iret
sbb
cmp
lods
push
outsl
nop
sbb
and
xor
push
jne
lods
mov
shl
jl
fcompl
ds
xor
lock
jb
insl
ret
ljmp
pop
rolb
push
imull
fcomp
inc
or
fstpl
push
aam
jge
jno
and
adc
push
insl
adcl
iret
fnstsw
xor
xchg
cmp
mov
aam
pop
stos
cld
fistpl
fsub
push
cmp
cltd
lcall
cmp
lods
fnstenv
int
mov
pop
xor
xorl
mov
fs
icebp
sti
ss
or
jns
jge
decl
jecxz
xchg
xlat
enter
mov
xor
inc
push
xorl
out
dec
mov
sbb
and
mov
push
mov
jbe
in
xlat
jno
inc
xor
inc
mov
dec
daa
fildl
subl
test
inc
adc
out
and
adc
je
inc
xor
jge
inc
fcoms
add
add
fidivrs
inc
test
pop
repnz
jl
mov
aam
or
js
xlat
sub
mov
movsb
push
ss
std
mov
int
fisubrl
mov
and
mov
cmpl
add
icebp
in
icebp
lds
scas
adc
cmp
hlt
lret
xor
into
dec
dec
rep
dec
inc
sar
sub
bound
add
ja
add
mov
jmp
jne
push
incl
push
movsb
aad
xchg
insb
cwtl
pushf
loopne
mov
call
rorb
lods
sbb
pushf
stos
rol
add
mov
out
xor
test
arpl
movsb
adc
mov
mov
mov
and
pop
add
inc
rclb
aas
lcall
jo
das
mov
movsb
xor
arpl
inc
rcl
pop
adc
sbb
dec
stos
sub
push
inc
push
fcomps
sbb
loope
ss
mov
imul
js
mov
sbb
cmpsb
sbb
nop
shrl
inc
cmp
pop
push
cwtl
pop
mov
incl
lods
cwtl
jo
sbb
lret
sbb
int
cld
bound
pop
push
cmp
ja
ret
cmp
push
cmc
bound
xor
sub
popa
inc
push
mov
or
les
mov
stos
push
mov
lea
cmc
ret
push
frstor
cmp
test
sbb
insb
icebp
jl
adc
adc
enter
pop
push
loopne
jmp
inc
in
sub
and
pop
mov
mov
clc
rcrl
insl
aas
loope
cs
loop
mov
jmp
rorb
stos
add
mov
ljmp
fs
fs
fisubrs
js
xchg
movsb
inc
inc
test
mov
cmp
outsl
push
cwtl
dec
xor
xor
cmovge
add
push
lea
jg
jge
mov
icebp
and
fistpl
dec
pop
lcall
sbb
mov
or
xchg
test
sub
sub
out
daa
fbld
jecxz
jmp
hlt
jnp
push
pop
jg
shlb
out
in
cwtl
xchg
pop
or
jno
push
jb
dec
ss
addr16
imul
cmp
pop
iret
jl
or
push
outsl
sub
add
jge
mov
jo
ret
subb
insb
sbb
sub
pop
cwtl
addr16
pop
push
mov
es
popf
mov
push
mov
gs
mov
and
push
jno
push
arpl
in
shl
mov
inc
stos
mov
sbb
inc
and
loope
jmp
in
adc
pusha
push
outsb
mov
imul
popf
aam
xchg
push
lods
fcomip
mov
mov
loop
sbb
dec
add
bound
jno
mov
cli
ret
adc
sbb
xor
sbb
mov
pop
fucomi
jg
rcrl
push
imul
push
mov
je
pop
cmp
cli
pop
xchg
lods
xlat
mov
movsl
sub
cmp
mov
xor
lock
out
lret
and
cmp
aad
je
dec
rorl
dec
gs
movsl
gs
mov
xchg
xchg
loope
ds
out
loope
dec
sbb
xor
addr16
mov
or
fcoms
mov
xchg
inc
imul
push
fdivrl
push
mov
je
and
aas
sub
jle
je
shrl
add
aad
mov
jecxz
adc
hlt
jle
xor
in
push
push
outsl
aad
add
movsl
icebp
loopne
push
xchg
sbb
cmp
std
shll
cld
cmp
jge
arpl
call
ret
pop
test
cwtl
mov
jg
add
push
fistpll
cmp
dec
addr16
loop
shr
and
mov
inc
out
int3
setbe
mov
xlat
stos
sub
repz
mov
adc
pop
fdivs
push
test
push
mov
push
scas
test
dec
sbb
ss
inc
mov
cmp
pop
dec
pop
repz
arpl
xor
push
or
mov
nop
sbb
jbe
pushf
outsb
cmp
outsb
js
stc
cltd
jge
push
xor
inc
add
push
lahf
inc
out
cmp
xchg
test
push
jle
mov
fidivrl
icebp
ret
dec
repnz
aam
in
jg
mov
cwtl
sbb
insl
mov
ret
std
sarb
push
inc
add
xor
sub
xchg
add
mov
int
cli
fisttpll
adc
sbb
pusha
scas
add
lea
mov
inc
inc
dec
xor
addr16
in
mov
stos
loop
xchg
mov
mov
jl
inc
inc
xchg
bound
enter
xor
movl
ljmp
fisttpll
ja
mov
dec
clc
cmp
fcmovnb
lahf
inc
mov
addb
pusha
js
sbb
or
cmpsl
push
push
mov
daa
xchg
in
int3
pop
stos
adc
outsb
mov
scas
fistl
dec
sarl
shll
mov
aas
xchg
je
xor
xchg
pop
dec
stc
push
push
imul
sub
fisubs
aaa
mov
test
jmp
pop
sahf
sbbl
imul
rorb
test
outsl
push
shll
mov
fwait
popa
adc
out
out
jno
xor
xchg
in
popf
xchg
jno
and
loop
sbb
or
lods
sub
int
shlb
imul
add
push
idivb
sub
movsl
into
mov
imul
outsl
pop
dec
mov
loop
fsts
mov
sbb
daa
xchg
scas
xchg
jp
and
aad
sbb
lds
lea
iret
mov
adc
mov
mov
cmp
arpl
mov
out
mov
stc
mov
gs
sub
xor
pop
add
inc
add
xchg
test
lds
into
clc
icebp
lods
xor
sbb
je
popa
cmp
fists
mov
sub
sub
jb
adc
fisubrs
mov
enter
pop
fdivrl
testb
cli
jg
or
inc
jp
lock
repz
dec
jecxz
jmp
cmp
jmp
icebp
jp
and
cmp
mov
daa
xor
cli
lock
mov
jno
xchg
stos
mov
dec
add
jg
rcr
sbb
push
xchg
sub
push
mov
mov
out
jmp
repz
xor
and
and
jo
sbb
pusha
add
cmp
clc
outsb
push
lds
fistps
das
dec
xor
jmp
jg
int3
mov
pop
mov
inc
jb
outsb
popa
pop
pop
shll
ds
out
and
fnsave
pop
adc
test
xor
sub
cmp
xor
push
aaa
sub
lock
adc
mov
pop
mov
out
mov
dec
or
jge
iret
iret
inc
push
lock
sbb
and
rorl
sti
test
sub
out
aad
xor
xlat
cli
push
loopne
lods
fcmovnb
out
sub
mov
mov
jb
xchg
mov
mov
jne
out
ret
jp
lea
into
in
mov
negl
shrl
adc
push
sub
pop
add
mov
pop
cmc
push
push
loop
ds
adc
imull
mov
lret
mov
sbb
cmp
lods
je
cmp
fsubrl
jo
sbb
fsubrs
loope
mov
pop
in
push
xchg
fldcw
adc
pop
inc
cs
jl
push
pop
push
jns
out
push
aad
imul
xchg
lods
pop
mov
xchg
add
mov
ss
aas
or
push
mov
inc
das
pop
nop
fucomi
stc
sahf
jnp
pop
fisttpll
push
mov
nop
add
les
adcb
sbb
jbe
sbbl
jo
adc
pop
adc
xor
or
in
adc
cmp
dec
shl
jno
fs
cwtl
cmpsl
imul
mov
cld
data16
mov
sub
aad
adc
mov
jge
sti
loopne
mov
std
sub
add
std
ret
mov
out
and
rol
pop
repnz
push
push
jmp
or
aas
insb
or
das
stos
mov
adc
push
push
nop
add
mov
shll
jo
setae
notb
scas
jl
mov
add
push
arpl
mov
or
cmp
xor
aam
enter
xlat
sub
je
nop
mov
xor
imul
loopne
data16
aaa
dec
dec
jg
xor
insb
bound
cmpsb
aas
dec
jo
cs
scas
add
push
mov
pop
xor
popa
pop
or
testb
xchg
adc
mov
cmp
inc
add
jns
jbe
insl
mov
dec
adc
ljmp
andl
jmp
xchg
adc
cmp
xor
xorl
sbb
cmc
add
das
cmc
jb
adc
test
push
or
sub
lret
lret
enter
lds
fisubs
jl
repz
pusha
test
data16
lret
inc
mov
sub
in
das
and
push
dec
outsl
sub
dec
data16
adc
mov
xchg
sub
rcrl
and
mov
xor
cltd
loop
mov
sub
or
test
jns
dec
push
cmp
xchg
pop
mov
mov
in
sbb
ror
jne
pop
cs
je
mov
insl
pushf
iret
test
ret
xchg
pop
mov
negl
sub
pushf
pop
mov
dec
or
mov
daa
push
lds
mov
add
inc
jae
inc
popa
adc
jg
ljmp
cmp
in
lods
cmp
mov
jmp
and
xor
out
jb
mov
mov
cmp
aad
inc
aam
mov
xchg
dec
push
cwtl
repnz
mov
sub
sub
adc
xchg
fisttpl
jnp
imul
push
cmpsb
popa
pop
xor
insb
pusha
mov
ret
adc
or
movsl
mov
mov
int3
mov
std
mov
push
or
mov
mov
pop
mov
pusha
mov
mov
in
fstps
mov
mov
test
mov
ror
popa
stos
cmp
out
aas
mov
fcoms
adc
adc
xchg
adc
movsb
jmp
cmp
insl
mov
pop
mov
mov
xchg
sahf
and
inc
or
cmp
in
cltd
add
or
loopne
inc
cmpsb
push
dec
mov
pop
or
rcr
fdivr
mov
sahf
xchg
lock
shl
popa
in
popf
adc
pop
push
pusha
jb
jne
xchg
js
jp
push
xchg
xchg
sbb
ja
int3
sbb
imul
mov
cltd
push
aad
adc
mov
test
nop
add
sahf
xor
push
call
sub
jl
cmp
cmpsl
sub
and
add
pop
fsubl
gs
mov
inc
mov
rolb
imul
or
push
ljmp
mov
or
add
pushf
xor
jp
sub
insl
add
xor
out
push
xchg
insl
loope
and
daa
testb
mov
add
sbbb
xchg
jp
add
out
adc
mov
fiadds
adc
pop
mov
push
pop
jge
mov
dec
mov
fsubs
or
loopne
mov
or
gs
mul
mov
xor
inc
daa
sbb
pop
movsb
jp
jns
mov
xor
daa
data16
lcall
ficoms
js
mov
pop
push
and
xchg
frstor
cld
jbe
stc
shlb
or
push
lcall
aam
and
shlb
shr
fwait
sbb
cmp
out
into
pop
add
adc
or
sub
clc
adc
mov
movsl
testl
sti
mov
xlat
imul
push
imul
iret
push
pop
mov
cmpsb
clc
mov
test
pop
push
ret
sbb
std
mov
hlt
fdivs
mov
cmp
jp
dec
mov
sbb
pop
inc
pop
inc
mov
mov
daa
in
rcl
lret
sub
pop
outsl
push
and
out
adc
push
add
cmp
mov
cmpsb
cli
out
pop
ret
scas
ja
jmp
cld
rclb
fsubr
scas
cmpl
pop
repnz
ficoml
test
insl
xorl
sub
shlb
fs
insl
xorl
and
xchg
xchg
ret
xor
jno
push
push
push
and
inc
es
and
stc
sub
xchg
pop
adc
das
rcr
imul
in
mov
fucomi
jo,pn
fcompl
idivb
loop
addr16
push
adc
adc
jge
out
or
pop
fstpl
adc
pop
or
add
insb
dec
cmp
mov
mov
push
dec
imul
fidivs
jmp
sub
add
stc
fwait
aaa
mov
cmp
fldenv
cltd
mov
mov
aam
or
rcll
or
pop
push
subb
push
pop
adc
pushf
push
cwtl
stos
cltd
sbb
int3
fdivs
xchg
int
push
jno
shlb
push
mov
jns
mov
dec
pusha
sub
fucomi
mov
sub
push
or
cmp
test
out
mov
jo
mov
mov
push
insb
testl
insb
mov
pop
test
cmp
lods
icebp
pusha
into
je
lods
mov
or
imul
leave
lods
aas
je
ret
enter
js
fists
in
xchg
jge
xlat
fwait
xor
push
cmpsl
fcmovnu
push
icebp
cmovge
pop
loop
repz
ljmp
lock
insb
cmp
xchg
inc
mov
dec
mov
jg
int3
jmp
sbb
jb
ret
lcall
xlat
cmp
push
adc
cmc
cmpsb
inc
stos
mov
and
jmp
mov
pop
fs
xor
scas
lods
hlt
fldcw
xor
scas
xor
addr16
or
sahf
adc
pop
ficoms
jmp
mov
and
mov
ss
sub
das
adc
mov
mov
out
imul
testb
cmpsb
or
mov
inc
aam
jmp
addr16
mov
lock
jp
add
in
cmc
push
cli
xchg
or
out
mov
adc
sub
push
cmp
imull
test
stc
mov
int
or
mov
shlb
mov
or
mov
imul
popa
sub
or
loopne
push
xchg
daa
aas
shll
mov
lahf
outsb
cmp
leave
pop
mov
cld
add
cmp
fwait
jge
xor
mov
loope
sbb
imul
hlt
xor
and
aaa
lcall
and
movsb
fbstp
rorb
mov
cmp
mov
xor
pop
push
outsl
inc
cmp
daa
dec
xchg
test
test
pusha
movsb
and
test
rcll
mov
sub
daa
xchg
mov
psubusw
lock
mov
filds
inc
sbb
cwtl
shrl
les
insb
and
cs
lds
mov
jl
repz
insb
lret
sub
xor
aas
rcrl
nop
adc
push
mov
maxps
mov
stos
cltd
xlat
xchg
cmp
ds
jp
or
popa
pop
adcb
push
jg
ret
add
std
aad
jp
scas
bound
ds
les
popf
fidivl
xor
jnp
add
push
test
lcall
jne
outsl
loopne
std
pop
aaa
xchg
xorb
sub
jle
mov
testb
data16
pop
adc
sbb
or
into
aad
xchg
and
icebp
cld
push
mov
mov
mov
mov
jle
mov
pop
in
hlt
ja
xchg
and
or
cmova
aam
clc
popf
gs
adc
and
cmp
out
decb
ficompl
cld
or
in
mov
xor
mov
jo
or
dec
imul
xor
jbe
mov
lcall
and
jle
push
loope
mov
push
in
sub
je
xorl
mov
cmp
add
adc
push
xchg
push
mov
mov
jb
or
inc
dec
inc
arpl
test
dec
push
or
push
sti
sub
and
mov
pop
fldenv
mov
xor
sbb
repz
mov
sahf
cmpsl
add
jmp
enter
mov
mov
pop
int3
dec
ret
lea
mov
lahf
gs
sbb
xchg
add
sbb
jecxz
cmc
leave
je
iret
das
xchg
in
ss
and
push
fdivs
ds
xor
jo
cmp
mov
test
mov
mov
add
sti
fbld
cltd
sub
sub
push
adc
psubd
dec
sub
pop
cmp
je
es
fs
out
sub
adc
jb
cwtl
jns
mov
sub
push
and
and
mov
xor
jbe
sub
aam
das
mov
arpl
dec
insb
jb
outsb
pop
cmpsb
adc
cmp
rcl
adc
pop
xor
push
inc
pop
rol
pop
or
shll
insb
cmp
inc
cwtl
scas
inc
jo
out
mov
cmp
jae
mov
imul
data16
imul
sarl
push
in
testl
repz
push
fmull
cmp
mov
jne
lock
jl
jmp
push
mov
js
or
dec
insl
jbe
negl
jbe
xchg
sbb
dec
in
mov
add
xor
inc
movsb
cmp
int
cli
jbe
stos
repnz
cltd
xorb
divl
jl
cmpsb
fst
mov
cltd
pop
ljmp
xchg
mov
cs
bound
mov
movsb
shlb
add
dec
inc
mov
inc
in
and
repnz
repnz
aam
sbb
iret
mov
pusha
and
insb
das
mov
xor
sbb
adc
mov
mov
add
sub
cmp
lcall
arpl
mov
pop
cmpsb
jle
icebp
jbe
mov
cmp
cmp
cmp
insb
and
mov
into
insb
mov
xchg
jmp
push
ret
sub
fadd
lods
into
add
and
lea
inc
dec
jge
inc
in
lret
mov
int3
nop
adc
adc
adc
fisubrl
xchg
int
int3
xchg
aaa
jne
shll
sbb
push
mov
xchg
adc
add
jno
aad
cld
push
mov
insl
dec
xchg
mov
mov
xor
fisubl
scas
jl
nop
push
pusha
fcoms
jmp
hlt
mov
mov
xchg
cmc
lock
in
fiaddl
add
xchg
push
and
xor
add
adc
ret
fstps
das
lret
sets
adc
xor
cli
sub
in
push
jp
inc
shlb
lods
subb
mov
ret
cmp
add
flds
jle
mov
fcomps
mov
dec
mov
movsl
push
jbe
mov
or
fs
shll
jp
mov
push
push
dec
push
gs
test
push
fisubrs
out
repnz
mov
pop
jae
repz
aas
mov
cmpsb
mov
sub
cmp
in
addl
cmp
fidivl
ret
inc
sbb
out
int3
sbb
test
add
outsb
sahf
jae
push
out
inc
dec
pop
shrb
sub
mov
mov
fcoms
aaa
xchg
lcall
xor
xor
push
loope
inc
fmul
xor
push
xorb
in
mov
stc
in
jns,pt
push
xchg
pushf
cli
dec
xchg
loopne
jbe
add
scas
js
xor
dec
jge
cmp
int3
sbb
test
dec
xor
mov
push
mov
pop
cs
cmp
lret
add
in
les
cld
mov
ljmp
adc
fisttpl
mov
lods
jnp
inc
xchg
in
pop
jl
lahf
jmp
leave
out
int
cwtl
imul
pop
xor
xchg
xor
leave
les
mov
rcrl
add
stc
cmpsb
movb
cld
inc
ror
rcrb
sbb
push
pusha
push
stc
mov
lret
insb
mov
dec
shr
sub
stc
stos
adcl
pop
or
lahf
ljmp
or
pop
pusha
cmpsb
movd
sub
add
sub
js
hlt
sub
jl
and
in
mov
ret
mov
test
cmc
inc
dec
and
loope
inc
pop
test
sar
mov
or
xchg
cmp
fnstenv
mov
std
jecxz
sbbl
or
pop
xchg
sub
lret
decb
sarb
in
movsl
imul
and
jnp
loopne
mov
int3
in
daa
pop
sti
cmp
pop
movsb
lret
or
test
xchg
test
add
add
mov
fcoms
shr
in
and
adc
cmp
movsl
in
test
xor
lahf
int
add
dec
adc
popf
inc
scas
pop
add
ljmp
scas
mov
loop
cmp
std
ret
push
jbe
sti
push
dec
loope
test
lods
and
bound
mov
pop
push
in
add
adc
xchg
loop
loope
mov
mov
arpl
mov
outsb
mov
out
ret
scas
loopne
bound
cmp
rorl
adc
mov
movsb
push
insb
incb
cs
jae
pop
xor
int
out
loope
imul
rcr
movsb
xchg
add
mov
repz
insl
sti
xor
pop
and
popf
cmp
sbb
insb
sbb
cmp
adc
ret
test
push
clc
orl
fimuls
push
stos
sub
shl
mov
xor
lods
shl
int3
arpl
mov
iret
inc
inc
inc
enter
jmp
jno
mov
in
das
mov
mov
cli
out
into
imul
cmp
adc
sbbl
out
lcall
jecxz
dec
ret
leave
cmp
adc
mov
push
mov
loop
je
push
push
mov
xor
dec
jbe
fsubr
pop
les
inc
pop
sub
mov
push
pop
xchg
fldcw
push
jns
stos
cmp
jns
push
dec
xchg
mov
sbb
out
das
sub
and
pop
jo
shrl
or
insl
out
mov
jbe
aam
pop
lret
push
cmp
in
sub
ficoml
roll
add
dec
scas
in
sub
dec
pop
sub
cld
jb
inc
sbb
adc
aaa
push
add
ret
lds
mov
mov
fadds
mov
xchg
jbe
jle
lock
sbb
xlat
mov
dec
push
js
mov
lretw
lret
jno
inc
pop
stc
cmpb
mov
inc
movsb
rcr
fbld
jle
or
or
insb
push
pushl
pop
lds
sub
xchg
aad
iret
aas
test
repnz
cwtl
lret
and
rclb
in
rclb
inc
mov
lods
xor
inc
dec
stos
lcall
movsb
mov
mov
mov
push
iret
push
fs
incb
loope
mov
inc
popf
or
xchg
cmp
or
les
loop
loope
mov
imul
movsl
mov
and
and
pop
js
sub
pop
pop
repnz
push
sub
xor
std
popf
stos
cs
test
jae
ss
inc
mov
leave
imul
or
cmp
cmp
xor
dec
inc
call
outsl
popf
scas
xchg
sub
jmp
xchg
mov
push
roll
xor
into
mov
jo
into
loop
pop
scas
jl
inc
rorl
cmp
rorl
rcrl
negb
sbb
jl
mov
xchg
mov
sub
cmp
mov
loop
cmp
movsb
inc
les
cwtl
cltd
mov
ljmp
sub
stc
cmp
sbb
xchg
scas
test
xor
jns
dec
sbb
jns
into
mov
cmpsl
fs
mov
shll
sbb
fxch
popf
push
or
out
and
into
cli
push
outsb
inc
movsb
sub
cs
stc
cmp
mov
jle
cld
inc
shrl
jno
inc
cmp
cmp
sti
pop
sbb
push
mov
xchg
jo,pn
mov
adc
lods
push
lods
jnp
add
rol
in
stos
fcmovbe
insb
out
call
stc
decb
jg
fdivr
jmp
mov
shll
and
adc
icebp
push
sbb
dec
push
xlat
mov
mov
and
cs
mov
sarl
pop
ror
nop
scas
sarl
cmp
in
mov
sub
inc
aam
mov
in
rcl
or
fs
mov
and
ret
jns
mov
arpl
pop
mov
ror
test
dec
xchg
fdivrs
mov
add
jbe
lcall
xor
dec
mov
xchg
mov
in
cs
loop
cmp
inc
ret
aam
mov
icebp
ret
iret
cs
je
push
xor
pop
aam
lret
mov
dec
jg
icebp
mov
sub
je
mov
lret
lcall
frstor
aad
js
push
ds
or
rcl
enter
push
jbe
xchg
or
dec
cmc
pop
insl
pop
inc
into
sub
inc
push
mul
mov
dec
mov
xchg
xor
in
test
leave
test
add
in
xor
pusha
outsb
fdivs
adc
inc
add
add
pop
fcomp
ja
sub
inc
jp
ss
inc
and
xchg
mov
xor
das
test
sbb
fwait
sbbl
pusha
mul
cltd
cli
add
push
aam
addr16
mov
ljmp
in
pop
push
orb
ret
cmp
cmpsb
mov
sub
stos
out
rcll
insb
xchg
pop
jle
cmp
cmp
push
loope
into
outsl
pop
icebp
jp
lods
in
aam
sub
movsl
add
xchg
jae
cmp
mov
mov
repnz
repz
shrl
call
cmp
cmp
pop
push
jle
les
mov
adc
or
mov
idiv
dec
ret
push
cmp
mov
dec
and
ret
in
bound
jae
inc
pop
lret
jo
jnp
mov
and
fucomp
sahf
sbb
cwtl
gs
mov
xchg
and
pop
push
sbb
cmp
imul
cltd
cld
sbb
repnz
inc
inc
mov
jp
nop
mov
jg
cmp
aaa
lret
jg
xor
in
fucomi
cmp
and
repnz
xor
xor
fsubrl
divl
into
cmpsl
fists
repz
pusha
scas
insb
leave
xchg
in
not
jmpw
pop
jo
jle
xchg
mov
adc
mov
jmp
sub
sbb
jle
mov
outsb
mov
xor
clc
dec
int3
pop
pop
push
aas
add
jo
pop
out
xor
or
sub
test
jo
fcom
int3
sarb
clc
andl
sub
nop
fwait
dec
xchg
pusha
pop
adc
dec
adc
add
cmpb
mov
push
bound
sbb
insl
mov
and
fisttpll
mov
rolb
jne
sbb
sarb
push
pushl
cmp
push
adc
or
inc
fcomps
lret
sbb
push
and
movsl
mov
orl
in
xor
jb
repz
stos
icebp
popf
mov
cmc
imul
and
rclb
xchg
mov
push
cmpsl
mov
lret
push
movsl
movsb
mov
addr16
mov
mov
mov
pop
stos
leave
popa
pop
fnstsw
pop
icebp
xor
in
imull
xor
test
mov
enter
ret
test
or
hlt
pusha
dec
jge
jle
xor
dec
and
inc
push
dec
dec
into
dec
xchg
iret
cmp
xor
adc
loop
imul
jge
push
lret
mov
push
mov
jmp
movsb
push
mov
out
enter
mov
call
mov
dec
aam
mov
mov
inc
xor
cmp
stos
cwtl
mov
shll
cmpsb
xchg
popf
mov
insb
mov
cmp
call
pop
cmp
cltd
imull
addr16
int
lret
push
xor
xor
sbb
lret
fcmovne
popl
or
sbb
sub
fiadds
inc
xorl
sub
js
dec
jb
mov
loop
add
jns
and
push
lcall
cmpsl
cmpsl
aaa
adcb
mov
xchg
test
jecxz
pusha
dec
pop
icebp
cmpl
insb
add
xchg
jp
or
popa
ffree
mov
ret
jmp
ja
mov
mov
repnz
cmp
dec
cs
sub
mov
pop
repnz
jo
mov
xchg
das
decb
and
inc
cmc
add
repz
xchg
mov
xorb
aad
lret
aas
jle
xchg
jle
sti
mov
inc
sub
mov
imul
out
jmp
scas
aam
int
outsl
js
jle
sahf
cmp
mov
pushf
sub
pop
arpl
pop
lahf
in
fcoms
mov
movhps
icebp
out
or
ljmp
jmp
xchg
mov
cmp
scas
xchg
xchg
jecxz
cmp
push
jne
xchg
jg
ja
imul
mov
pop
ja
jle
cmp
lods
and
dec
aad
dec
pop
dec
lea
mov
sahf
movsb
bt
pop
or
outsb
mov
scas
jmp
mov
cmc
rcrl
hlt
iret
or
xchg
dec
movsb
es
dec
dec
sub
cmp
cwtl
xchg
mov
lock
out
int3
pop
mov
dec
push
push
aas
mov
adc
sti
mov
dec
pop
scas
sub
in
cs
jbe
jmp
int3
cmp
mov
add
daa
popa
mov
inc
cmp
dec
or
lea
jecxz
mov
test
fnsave
aaa
push
and
mov
int
or
in
adc
arpl
pop
cli
xchg
inc
cmp
sub
icebp
lea
dec
ss
cmc
cmp
lock
mov
stc
leave
xchg
iret
repz
into
lds
data16
int3
mov
push
mov
imul
test
das
mov
cmp
test
addr16
es
mov
or
pop
popf
mov
dec
repnz
push
fisubl
adc
mov
andl
mov
popa
aaa
sub
mov
sahf
outsb
add
mov
shlb
pop
outsl
lcall
and
pop
js
dec
inc
inc
loope
and
fiadds
rclb
ja
scas
mov
mov
mov
jb
xor
ds
loopne
and
loope
mov
subb
inc
add
sub
sbb
push
mov
test
movntq
sbb
cmp
out
and
insl
test
pop
cmpsb
and
mov
mov
or
outsb
scas
out
mov
sbb
jbe
mov
out
adc
push
or
mov
es
or
pop
cmp
aad
js
lock
and
xor
popa
test
std
lods
lock
and
cmc
aaa
or
sahf
sti
cld
daa
inc
push
or
xchg
push
js
jo
mov
pop
sbb
or
pushf
in
and
jle
popf
jg
jmp
pusha
iret
mov
in
lds
outsb
in
mov
mov
and
xor
xor
mov
mov
imul
imul
out
cltd
mov
adc
push
adc
or
movl
lahf
or
insb
aas
outsl
xchg
or
fwait
or
pop
insb
addr16
rcll
clc
pushf
xchg
or
in
xchg
and
iret
cmpsl
aam
negb
xchg
mov
decb
aad
inc
cmp
out
push
nop
or
enter
sub
in
mov
into
push
test
fs
stos
xchg
test
mov
push
push
xchg
jecxz
jmp
mov
ja
and
lods
jo
sub
lea
sbb
cmp
dec
clc
push
jecxz
sub
call
jp
push
inc
push
aas
ficoms
test
mov
inc
jg
pushl
mov
jmp
rolb
inc
fmuls
sub
cmp
jp
sub
xor
sub
repnz
bound
loopne
scas
xchg
imul
add
cmp
out
mov
mov
loop
in
andb
sbb
adc
icebp
pop
sub
mov
mov
add
cld
leave
sbb
loopne
jl
xchg
adc
inc
stos
jnp
cmc
push
dec
inc
pop
mov
pop
out
enter
arpl
enter
sbb
inc
in
xor
lock
fs
cmp
popa
adc
push
mov
jmp
fldt
stc
push
adc
xor
xchg
push
lret
sub
fsubs
lds
mov
xchg
mov
filds
shlb
lds
push
popa
sbb
jns
jge
cs
mov
fisubs
and
lret
hlt
fnstsw
std
aam
mov
ret
aad
xchg
sbb
hlt
mov
xchg
mov
or
mov
fisttpl
fbld
aad
dec
push
int
insl
add
frstpm(287
xlat
adc
ss
sbb
inc
addr16
ja
outsl
mov
xor
jecxz
mov
push
adc
jnp
lock
in
jo
in
mov
jo
mov
xor
pop
ljmp
sub
ja
in
sbb
cmp
jecxz
pop
pop
test
xchg
imul
jne
ja
repnz
push
test
mov
loop
pusha
rcrl
divl
negb
xor
into
push
pushf
add
mov
aam
mov
inc
clc
lcall
pop
fistpl
aam
in
into
rclb
pop
pusha
adc
mov
loopne
cmpsb
add
mov
and
push
loope,pt
and
cmp
in
jo
mov
subb
lock
sub
inc
inc
test
testb
jmp
push
inc
stc
popf
push
adc
xchg
aas
dec
idivb
repz
imul
dec
sub
sub
push
into
movsl
nop
je
xchg
mov
add
rorl
fsubp
sub
xor
xchg
xor
pop
cmp
imul
fprem1
mov
test
icebp
sub
loop
mov
push
inc
sbb
inc
pop
test
rcrb
rclb
dec
popa
test
outsl
inc
mov
dec
pushf
fcompl
dec
xchg
mov
lock
imul
bound
push
loope
in
pusha
and
cmp
mov
pop
push
nop
cmp
dec
sub
jle
sub
in
test
sbb
lret
sub
add
jb
push
push
dec
dec
dec
jg
xor
sbb
clc
roll
pop
iret
or
loop
adc
outsb
lret
push
xor
jnp
jb
pushf
fmull
jp
mov
and
loopne
aaa
ficoml
adc
pop
shl
cs
xor
dec
test
into
jl
insl
hlt
jae
and
cld
mov
add
jmp
mov
or
outsl
mov
aaa
loopne
pop
pop
lods
mov
fcmovbe
les
push
jle
into
push
pop
inc
test
test
push
sahf
loope
add
movsb
mov
shlb
or
orb
cmpsl
in
xchg
lahf
leave
pop
xor
or
fimull
or
ret
in
mov
adc
leave
insl
aaa
lahf
xor
insl
stos
push
into
mov
test
dec
scas
mov
mov
mov
sbb
aam
xor
jo
pop
mov
xchg
and
lods
pushf
sub
inc
and
xor
fmuls
fisttps
xorb
lahf
and
adc
imul
adc
mov
loopne
divl
imul
pushf
cmp
sub
or
mov
lret
pop
rclb
ret
mov
cmp
es
cmp
cli
push
cmc
jg
sub
adc
shlb
pop
loop
loope
cmp
fisubl
sbb
xchg
ja
inc
and
lods
fcomps
ficompl
lds
sarb
orb
fcoml
cmpsb
stos
jmp
pop
pushf
xchg
fprem1
mov
and
adc
adc
ljmp
push
fmuls
mov
xor
mov
inc
adc
push
add
inc
aam
jae
std
pop
and
in
xchg
inc
sub
mov
insb
lret
inc
cltd
cli
sub
xlat
and
mov
mov
push
cmpsb
addr16
loope
mov
repnz
es
add
stos
pop
xchg
lods
adc
push
or
adc
repnz
aaa
mov
sub
stos
enter
dec
sub
lcall
mov
dec
daa
sub
cwtl
push
jg
into
es
ss
mov
mov
out
pop
mov
mov
xor
inc
mov
icebp
imul
addl
cld
sbb
aas
mov
fidivl
insb
xor
xchg
rcll
ror
js
subl
sbb
add
sbb
push
and
test
jns
add
or
cmp
sbb
sub
adc
dec
or
arpl
cmc
inc
pop
pusha
mov
and
cmp
in
out
lds
cmpsl
mov
fstps
mov
mov
icebp
lods
cmp
insb
sbb
xchg
data16
fcompl
mov
and
push
das
cmc
mov
pushf
jno
lods
sbb
xlat
xchg
xchg
pop
dec
mov
sbb
aad
add
sbb
pop
cwtl
xchg
xchg
mov
dec
xor
imul
cmp
pop
ret
jmp
mov
in
pusha
repnz
cmp
cmpsb
js
decb
xchg
xchg
mov
sti
or
insb
in
or
std
add
ret
fcomp
xlat
sbb
jnp
pop
xchg
inc
popf
jle
push
bound
sbb
scas
mov
comiss
fcmovb
cmp
daa
loopne
mov
push
or
add
in
je
or
lock
imul
cs
lock
cli
mov
insb
inc
and
xor
es
in
add
sub
fldl
mov
ss
idivl
test
out
mov
dec
add
sbbb
mov
imul
jae
or
and
cld
xlat
pop
iret
scas
pop
mov
lcallw
iret
push
push
enter
mov
stos
sub
out
cltd
sub
xor
sub
ljmp
xchg
add
and
stc
cli
add
cwtl
movsw
ret
sub
and
clc
aam
mov
lcall
jno
jge
fstpt
cltd
push
repz
sbb
inc
xchg
xchg
pop
lds
stc
mov
rcl
mov
cmp
fwait
cmpsb
jmp
cmp
push
iret
adc
cwtl
pop
sub
jns
sub
daa
mov
push
les
xchg
hlt
sub
lock
push
cli
addl
pop
mov
es
mov
adc
push
fisubl
in
outsb
andb
adc
addr16
pop
addr16
inc
or
in
shlb
shlb
inc
dec
fsubrp
jg
jge
fwait
mov
add
out
cmpsb
jne
ss
into
test
push
sub
inc
je
fs
mov
into
addr16
fbld
fxch
push
mov
loopne
jbe
pop
dec
adc
lahf
mov
pop
insb
and
fwait
jp
and
andb
xchg
jb
lret
sbb
movsb
sahf
test
or
push
vpsrlq
insl
push
xchg
push
movsl
movsl
cmp
mov
je
gs
enter
leave
mov
pop
sahf
and
xor
and
sub
pop
inc
xor
std
fsubs
jecxz
jmp
std
mov
mov
pop
and
cmp
push
cli
lods
jb
fcmovnu
jbe
imul
out
cwtl
lock
pop
push
loopne
loopne
hlt
pop
push
aam
fldcw
xor
jo
jmp
stos
leave
sub
cmpsb
int
ret
sub
pop
mov
or
cmpsl
daa
rorl
mov
xor
and
inc
dec
jmp
jp
mov
pusha
adc
pop
mov
das
cld
xor
push
cltd
ljmp
rdmsr
mov
arpl
fildl
inc
aaa
cmp
push
pop
aas
adc
daa
test
push
cmpl
sub
gs
mov
sti
pop
xor
int3
adc
movsb
xor
push
and
lods
add
adc
jb
fisttpl
cmc
addr16
xlat
mov
sahf
pushl
flds
add
push
cmp
or
push
cmpsl
pusha
outsb
xchg
sti
cmp
repz
rcl
mov
push
sub
lods
arpl
or
mov
fnstcw
loope
stos
lcall
mov
sub
pop
sbb
push
stos
hlt
jmp
or
mov
ret
or
inc
and
sbb
jb
adcb
or
jnp
cmp
fdivrp
mov
push
ret
rolb
adc
jbe
das
push
ljmp
fwait
pop
add
cwtl
out
mov
add
push
dec
fimuls
rolb
ret
or
fisubrl
sbb
xchg
mov
inc
or
pusha
lea
push
icebp
in
mov
pop
pop
divb
loope
sbb
inc
aam
outsb
imul
clc
test
jg
pop
nop
repz
jecxz
xor
movsl
movsl
push
aas
xchg
dec
test
rcrb
and
hlt
ficoms
xchg
aam
hlt
push
cmp
dec
mov
jle
mov
sti
in
or
mov
clc
lock
mov
add
adc
adc
stos
ret
mov
out
nop
sahf
into
adcb
shrl
or
push
pop
insl
add
cmp
in
popa
sar
xor
test
les
fdivr
cmpsl
lret
xchg
mov
lods
inc
popf
ret
sbb
arpl
xchg
sub
sbb
dec
stc
adc
loopne
enter
add
adc
aaa
sub
adc
jmp
sub
outsl
xchg
pop
push
push
adc
nop
push
stc
push
jae
cmpsb
es
pop
cli
xchg
shrl
gs
out
cmpsb
jle
addr16
mov
mov
pop
ret
ss
xlat
and
in
mov
add
push
jp
add
leave
mov
fcompl
fisubs
pushf
or
add
fisubs
and
in
sub
and
sbb
push
or
shrb
daa
inc
imul
bound
mov
inc
cmp
mov
gs
std
mov
xchg
jg
dec
push
sub
jae
imul
sub
out
mov
test
sub
dec
adc
mov
fs
mov
mov
test
jno
or
push
mov
or
push
pop
and
into
xchg
aaa
lahf
repnz
sahf
push
pop
mov
adc
cmpsb
pop
cmp
data16
cltd
sbb
cmp
pop
mov
rcr
loopne
cmp
inc
ds
fwait
mov
xor
out
xchg
and
push
lea
insb
jg
orl
mov
in
add
int
loope
inc
pop
sub
jnp
or
inc
mov
push
loope
rorl
test
pop
insb
push
xchg
jmp
or
push
cmp
sahf
jp
scas
jp
fcomps
pop
mov
sbb
fcoml
mov
xor
sbb
pop
shrl
daa
sub
bound
xchg
or
jmp
rcrb
push
add
mov
test
mov
inc
jo
xor
or
sbb
mov
add
frstor
loope
arpl
mov
cmp
xor
pop
mov
ss
or
std
leave
inc
cltd
and
pop
jmp
mov
hlt
ljmp
shll
imul
inc
out
mov
pop
fnstcw
inc
clc
mov
xchg
cmpsb
mov
lods
movsb
sbb
int
lret
into
adc
mov
sbb
icebp
and
jne
in
incb
sbb
mov
femms
adc
mov
into
daa
inc
ja
xchg
pop
andl
in
jmp
or
cs
scas
cltd
pop
mov
ret
clc
push
incl
shlb
lret
jb
push
mov
push
pushf
lods
out
dec
stc
add
mov
mov
mov
jge
lock
jl
or
mov
pop
sbb
call
fisttpll
adc
mov
sbb
cmc
cmp
dec
sbb
pop
cmp
push
sub
xchg
xor
ljmp
rcrb
arpl
sbb
cmp
cmp
or
pusha
add
aad
rcll
lock
mov
pusha
call
adc
call
sbb
sub
divl
outsb
enter
add
dec
std
lock
add
dec
ror
pop
in
jmp
adc
outsb
addr16
rcrb
push
rorb
pop
xchg
aam
andl
cmp
sbbb
sti
sub
ja
pusha
inc
cld
sbb
push
mov
cmpsb
dec
clc
xchg
lock
cmpl
fs
call
adc
mov
mov
sti
lret
mov
inc
add
inc
nop
push
movsb
pop
add
movsl
jbe
dec
sub
lds
mov
aaa
pop
cltd
data16
lea
addb
xlat
xchg
push
mov
add
jnp
mov
lahf
inc
shll
repz
lret
stos
fidivrl
adc
and
loope
lds
pushf
jae
cmc
in
out
pop
incb
or
sbb
ret
outsb
mov
cltd
mov
shrl
das
push
inc
ja
sub
test
xchg
sbb
jp
sub
insb
sub
sbb
push
aas
lcall
mov
mov
cld
push
cmpsb
sbb
int
leave
popa
pop
and
pop
lcall
cmp
xchg
cs
adc
cmpsb
jg
imul
aaa
or
or
cli
or
rcll
push
adc
or
outsl
sub
cmp
and
sbb
inc
lods
push
xor
xor
aaa
imul
adc
jnp
adc
push
pop
inc
mov
add
loopne
cmp
mov
mov
pop
cltd
or
xchg
out
mov
and
icebp
push
std
bound
and
shl
sbb
add
mov
mov
insb
jge
repnz
loop
call
dec
cmp
dec
in
xor
cmc
shlb
pop
xor
pop
popf
into
fsubl
aas
cmp
lcall
call
out
xchg
fistpll
pop
mov
xchg
lods
and
cmp
int3
inc
js
decb
sub
mov
jae
add
xchg
ficomps
popf
in
into
jecxz
sbb
add
mov
mov
stos
inc
subb
jmpw
xchg
xchg
dec
add
sub
pop
outsl
mov
pusha
shll
sahf
sbb
jo
mov
dec
or
inc
mov
fidivrs
aas
pmaddwd
lock
ret
lods
pop
cmpb
mov
aas
imul
jbe
stc
or
push
mov
inc
xchg
pop
or
fdivrl
pop
into
push
loopne
push
pop
bound
and
lods
sahf
dec
mov
std
sbb
jmp
sub
pushf
rclb
inc
out
xchg
mov
ljmp
imul
adc
xor
jno
add
stos
mov
add
idivb
jbe
test
xorb
and
imul
pop
mov
cmp
stos
sub
in
push
loope
cmpsl
push
push
xchg
es
dec
out
and
or
fildll
mov
imul
gs
fistpl
cmp
cld
out
iret
push
into
adc
push
pop
xchg
xchg
inc
in
mov
sub
sbb
stos
and
mov
cmp
aaa
pushf
jns
lret
mov
and
in
lret
xor
aaa
fdivrs
or
lret
or
fadds
test
dec
sub
pop
ficoms
mov
test
addl
rorb
fsts
mov
popa
jmp
int3
insb
mov
xchg
add
push
fiadds
sbb
or
popa
jns
pop
fistpll
ja
pop
shrl
loopne
xchg
gs
pop
out
ja
int
and
out
fsubrl
mov
xchg
scas
rcrl
or
mov
mov
mov
cmp
in
test
adc
repz
call
jno
stos
out
jno
mulb
repz
sub
xchg
out
or
out
jmp
std
iret
in
andb
out
push
pop
shlb
daa
cld
ficoms
popa
outsb
loope
stos
pop
and
mov
mov
dec
and
mov
mov
xchg
sbb
jbe
cmp
pop
jo
aad
xlat
dec
xor
push
xlat
das
popa
adc
dec
xchg
out
ret
sbb
xchg
jp
add
into
pop
ret
push
push
mov
ret
jmp
pop
pop
clc
jecxz
xchg
fisubrs
dec
in
jae
sbb
mov
ljmp
lcall
and
aad
fwait
or
popa
mov
insb
out
scas
imull
xchg
neg
jecxz
xor
cmp
xchg
out
mov
adc
or
pop
mov
mov
inc
fwait
push
mov
and
xor
adc
push
add
xor
fistpll
mov
mov
dec
inc
xor
or
mov
cmpsb
cwtl
mov
sti
fwait
out
loopne
aam
lds
fs
rorl
mov
mov
clc
movsb
mov
cmpsb
lret
sti
cmp
adc
pop
cmpsb
jnp
insl
push
adc
jnp
and
sbb
inc
stos
in
cwtl
stos
movsl
xor
lahf
hlt
and
jns,pn
xlat
mov
sbb
xorb
mov
cld
aam
or
dec
push
repnz
mov
lods
mov
xor
fiadds
fildll
inc
ljmp
jmp
sub
icebp
out
mov
xor
sahf
push
bound
push
push
iret
pop
push
or
cwtl
shll
jb
push
out
add
mov
mov
cmp
cltd
int3
push
xor
movsl
adc
jb
scas
dec
test
mov
add
loope
pop
pop
mov
adc
inc
mov
dec
mov
xchg
subl
fistpl
imul
out
lahf
jle
xor
movl
pop
lret
sub
in
test
mov
lcall
jnp
aad
test
add
mov
je
sbb
and
add
xchg
clc
cmpsl
loopne
leave
cs
inc
mov
adc
popa
loopne
daa
dec
mov
jb
jmp
cmp
push
aam
cld
scas
xchg
push
into
inc
sbb
fwait
mov
sarb
push
jne
push
mov
xchg
mov
jnp
fcoms
outsl
pop
inc
js
dec
and
and
mov
cmpsb
mov
subl
shr
and
mov
mov
gs
arpl
mov
pop
cmp
push
push
aad
sub
push
daa
adc
lds
aaa
dec
cmp
push
and
test
push
mov
ret
mov
push
outsb
std
or
das
xchg
outsb
xor
fucom
xchg
push
jmp
das
adc
mov
test
xlat
aad
out
push
outsl
cmp
mov
mov
test
xor
cvtdq2ps
das
das
jae
dec
les
and
sti
out
clc
inc
xchg
jne
push
jo
push
jb
popa
movsl
jl
dec
xchg
add
lret
addb
movsb
add
lcall
into
pop
ljmp
cmp
std
in
scas
movsb
js
loopne
sbb
or
inc
sbb
mov
mov
xlat
shl
dec
das
ljmp
add
pop
loop
lds
sub
js
push
mov
mov
sbb
dec
or
pop
xor
pusha
jl
xchg
inc
std
xchg
jmp
and
cs
ret
loopne
into
and
icebp
in
dec
ret
scas
rcrb
push
out
cmp
clc
scas
add
fwait
sahf
mov
xor
sbb
mov
jle
pop
icebp
bound
insb
minps
push
nop
sbb
mov
mov
jp
xchg
into
repnz
std
mov
pop
and
xor
pop
sub
data16
push
xor
aaa
push
lret
rclb
xlat
mov
mov
xchg
push
adc
mov
cld
add
xchg
leave
sub
jbe
adc
dec
push
cld
jns
cmp
xchg
mov
rorb
jp
xlat
and
fs
xchg
jmp
ret
jo
jmp
dec
leave
enter
and
inc
sbb
jns
mov
insl
add
cmp
pop
daa
mov
cwtl
dec
mov
mov
dec
push
movsl
fmulp
lock
jmp
xorl
jne
rorb
xchg
pushf
shl
mov
int
sub
lods
je
sub
xchg
adc
lds
rcl
idiv
test
or
mov
pop
push
sub
sarl
pop
adc
ja
dec
insb
pop
dec
in
add
dec
cld
lret
or
test
call
pop
dec
jae
cmp
adc
cmp
test
push
pop
jbe
push
ss
aad
fwait
popa
adc
movsb
push
mov
mov
jnp
push
out
imul
cld
lcall
pushf
lods
mov
pop
dec
cmp
jmp
xor
aas
outsb
lret
cmp
pop
int
les
lock
jl
xlat
pop
aad
sbb
lret
dec
xchg
mov
fdivrs
aad
lahf
test
into
repz
inc
xchg
js,pn
dec
int3
mov
xor
insl
pop
jecxz
jbe
lret
adc
mull
push
popf
mov
jne
fstps
arpl
inc
dec
and
sub
imul
out
push
jne
jno
xchg
xchg
insl
mov
xchg
fdiv
enter
pop
lret
lock
dec
push
lret
testb
out
xchg
dec
aam
popa
pop
jg
testl
mov
cmp
xchg
js
jg
pop
repnz
mov
enter
jl
push
insl
in
scas
push
add
dec
sbb
sahf
inc
xchg
xchg
push
pop
adc
xchg
sbb
mov
pop
pop
dec
and
fucomp
inc
xor
or
sbb
test
inc
hlt
js
cmc
mov
out
dec
int
in
jmp
loop
and
roll
and
xchg
popf
leave
loope
xor
sbb
sub
enter
dec
movl
jbe
cmpsb
fists
mov
in
loope
add
sub
jge
add
fimuls
daa
push
mov
lret
jb
pop
dec
leave
xchg
clc
inc
sahf
dec
xchg
sub
je
xchg
xchg
addr16
aas
fcoms
mov
mov
jl
add
dec
pop
dec
sub
cmp
fcom
fsts
test
cli
jecxz
sub
adc
hlt
and
mov
ja
inc
ficompl
sbb
cmp
jno
inc
popa
lcall
inc
sub
outsb
mov
call
xchg
insl
sbb
roll
sbb
imul
inc
push
inc
and
rolb
pop
in
cld
movl
aas
aad
popa
shrb
int3
cmpsb
pop
dec
cmp
fbld
lods
jg
out
xor
sub
and
sub
or
adc
rolb
dec
and
inc
adc
out
cmp
rclb
cli
loope
int
or
andb
aas
push
add
cmp
test
movsb
mov
daa
mov
lcall
xorl
push
push
pusha
mov
push
int3
std
mov
and
jae
jns
rorb
out
mov
sub
adc
lret
fsubrs
int3
shrb
popa
inc
push
jne
shll
inc
cs
push
and
or
iret
cmp
adc
mov
xchg
push
icebp
jmp
stos
js
add
imul
xlat
mov
repz
or
jno
cltd
jne
add
mov
bound
pop
push
xor
addr16
mov
cli
push
sahf
in
sbb
mov
adc
inc
jo
jmp
sbb
jae
pop
mov
imul
scas
frstor
pop
dec
dec
xchg
jo
sbb
lods
or
pop
inc
pop
dec
cmp
mov
fmul
ret
int
leave
dec
dec
jle
pop
ljmp
mov
dec
and
pushf
pop
xchg
icebp
add
movsl
les
mov
imul
add
dec
test
xchg
in
test
stos
ret
xchg
dec
ds
pop
add
aas
incb
or
out
int3
mov
cmp
cmp
mov
mov
test
add
movsl
jns
mov
rorl
fs
popf
xchg
loop
xchg
popa
mov
mov
lds
int
xchg
cmc
mov
mov
dec
lret
stos
adc
inc
xchg
adc
dec
and
mov
shlb
out
mov
mov
subl
aaa
push
movsl
sub
aam
sub
push
mov
test
cld
insb
jo
pop
aad
and
movsl
aam
push
lret
daa
movsl
mov
into
stos
ficoms
call
dec
jg
mov
in
js
stos
inc
movsb
mov
push
xor
ljmp
or
std
pop
inc
lods
mov
xchg
ss
in
mov
pop
inc
je
rcl
mov
xchg
inc
sub
fistpll
pop
fnsave
mov
pop
push
cmp
je
cmp
jle
sub
jge
in
aad
sub
inc
cmc
sarl
or
add
push
mov
cmp
inc
sub
cld
sbbb
test
or
cmp
bound
call
dec
inc
sbb
repnz
pop
in
xlat
or
mov
sbb
cmp
mov
mov
subps
mov
pop
ss
cmp
add
push
xchg
xor
cmc
or
cld
and
fmull
mov
sub
push
mov
loopne
dec
in
repnz
loope
rorl
loope
lcall
pop
and
jl
or
inc
lods
iret
pushf
inc
ss
not
lret
sar
scas
rorb
mov
mov
xchg
adc
jge
add
jo
sub
or
jno
fs
bound
dec
fistl
mov
fmuls
mov
cmpsl
xchg
mov
outsl
das
inc
fs
shr
clc
pop
push
fs
cmp
xchg
inc
pop
sarb
cmpsl
sub
movsl
fwait
stc
mov
insb
lods
les
movsl
adcb
xchg
lods
loope
mov
int3
stc
mov
jnp
push
inc
adc
adc
push
imul
push
aad
stos
adc
add
loopne
sbb
mov
mov
sbb
movsb
adc
inc
lods
sub
mov
or
mov
lods
hlt
icebp
inc
stos
es
aad
cmc
out
pop
fadd
fbld
mov
and
cmp
cld
dec
or
push
push
pop
cli
ss
das
ljmp
inc
mov
mov
dec
add
push
adc
or
aam
cmp
gs
jp
out
test
adc
cld
imul
mov
adc
and
xchg
push
mov
push
push
in
out
sub
cmpb
push
or
mov
sti
rcll
push
aam
repnz
jne
addb
pop
daa
data16
in
xlat
adc
fldt
das
lods
or
push
lahf
adc
and
push
mov
inc
mov
fldenv
add
adc
mov
xor
push
shr
subb
int
rcll
or
and
rcl
mov
dec
add
and
inc
cwtl
mov
faddp
cwtl
stos
mov
inc
fisttpll
xchg
dec
test
add
and
pushf
pop
xor
addr16
sub
xor
dec
rcrl
push
das
or
inc
das
in
or
sub
xchg
and
jecxz
mov
rorb
ss
shrb
lods
and
dec
test
dec
cmpsl
sub
mov
ret
push
mov
xor
rorl
lods
mov
xor
push
adc
xchg
in
mov
test
inc
mov
cmp
pusha
xchg
enter
lea
in
sbb
mov
outsb
fdivrl
insl
xchg
aam
dec
jmp
in
or
pop
cmpsl
jecxz
pop
incl
fs
arpl
lret
mov
in
and
arpl
pusha
dec
pop
hlt
out
test
or
mov
push
sub
pop
fildll
and
sar
test
adc
roll
xchg
adc
jo
mov
adc
sub
or
or
sbb
xor
push
test
jae
add
in
cmp
out
mov
mov
in
lock
mov
sbb
push
aaa
lods
out
fdivs
xor
mov
test
adc
xor
call
ss
mov
scas
xor
pushl
enter
fs
test
repz
mov
push
test
xor
aam
test
inc
lods
pop
sub
addr16
sbb
fnstenv
bound
add
push
jecxz
sbb
notl
loopne
xor
xlat
push
jbe
outsb
lea
rclb
negb
and
mov
mov
and
or
shrb
add
popa
xchg
xor
cli
ret
adc
pop
adc
fbstp
cmp
jecxz
and
xchg
xor
mov
jge
in
loope
push
cmp
add
push
and
stos
adc
and
sub
xor
in
xor
jne
mov
les
dec
and
daa
mov
lahf
shll
add
das
dec
test
fbstp
dec
cmpsb
cmpsl
int
mov
addb
cmp
push
xor
cmpsb
test
sbb
dec
nop
gs
and
cmpsl
xor
in
dec
xchg
mov
ljmp
je
jbe
jno
ret
adc
orb
adc
cld
push
jns
sahf
dec
inc
lahf
ret
bound
push
out
mov
mov
xor
cmc
jo
shlb
lret
adc
push
or
jecxz
jnp
mov
inc
test
adc
cmp
jno
repz
outsb
icebp
out
mov
push
popf
pop
mov
mov
popa
das
xchg
push
popf
add
inc
sub
mov
loop
daa
cmp
ret
sub
lahf
inc
lods
sub
cltd
sahf
mov
outsl
xchg
dec
out
js
js
lods
mov
pop
and
adc
jno
and
fisubs
jo
mov
sub
and
cltd
ds
lahf
add
adc
insb
andb
ljmp
test
sub
outsl
insl
jl
stos
out
mov
invd
test
adc
sub
mov
cli
aam
dec
lock
mov
inc
inc
lret
int
push
dec
inc
stos
inc
sub
cmp
jo
dec
adcb
rolb
xor
fwait
adc
incb
xchg
push
jl
pop
mov
repz
or
sbb
dec
or
out
sub
or
sbb
push
mov
xchg
or
sbb
inc
xchg
adc
sbb
push
adc
call
mov
cmp
int
add
cmpb
jmp
jbe
mov
lret
out
cmc
shll
jo
rcrl
and
jmp
pop
pop
mov
push
jns
lcall
daa
adc
sbb
stos
jge
loope
int
inc
pop
repnz
lods
xlat
sub
stos
test
mov
rolb
std
xchg
adc
dec
xchg
out
add
xor
mov
imul
popa
cld
jp
adc
and
push
fisttpl
movb
adc
adc
cmpsl
mov
insb
in
pop
sbb
lock
aam
xchg
pop
hlt
mov
loop
jo
lods
sub
xchg
add
inc
inc
adc
jb
mov
pop
icebp
in
inc
das
inc
jnp
sti
mov
in
ret
iret
pop
jp
or
je
fsub
cli
iret
icebp
hlt
push
nop
lcall
sbb
mov
sbb
fsts
aam
add
sub
and
sbb
push
addr16
cmp
inc
mov
xor
out
stos
push
in
lea
scas
xor
jl
jns
jge
arpl
jno
jbe
stos
mov
sbb
or
ljmp
cmp
mov
inc
nop
mov
jnp
push
int3
push
out
sbb
lods
mov
daa
mov
je
lahf
lds
cmp
test
sbb
rcll
jp
sbb
fimull
ja
inc
aas
and
jmp
test
icebp
jb
loopne
pop
pop
jno
add
into
int
les
sti
and
in
xor
and
insb
scas
shlb
bound
insb
pop
dec
cmpsb
pop
xor
xor
fisttps
mov
lret
cmpsb
dec
jle
dec
test
imul
shl
sbb
add
push
test
dec
cmp
in
test
inc
arpl
cs
xchg
add
ljmp
jae
mov
jae
and
icebp
subb
mov
js
xor
lea
xchg
ja
arpl
cs
iret
cmp
mov
bound
pop
mov
mov
dec
fwait
xchg
fistpll
ror
test
sbb
xor
fwait
mov
stos
cmpb
or
rcrb
fiadds
fbld
mov
jnp
sub
cli
jl
mov
pop
outsb
inc
jle
fxch
push
dec
pop
or
cmpsl
cmp
sbb
arpl
sub
addr16
xor
ljmp
das
enter
aad
in
mov
loope
mov
fisubs
popa
add
sub
jp
pop
mov
lret
jmp
xor
loope
sbb
sbb
or
and
into
loope
add
outsb
jmp
lcall
dec
xor
call
sub
iret
mov
mov
loope
test
cmp
push
pop
xlat
fiadds
iret
add
adc
scas
enter
sub
mov
xchg
in
mov
and
inc
aad
add
scas
jmp
subl
push
push
mov
in
push
or
pop
add
je
cmp
mov
cmp
xlat
cmpsl
fcompl
std
aad
shrb
pop
fst
fcoms
inc
mov
pop
xchg
aaa
dec
jg
dec
test
sbb
xchg
pop
xchg
cli
jp
xor
mov
test
xchg
and
fnstsw
mov
push
inc
push
sbb
es
daa
decb
jl
sti
push
push
test
pop
sub
dec
jbe
or
xchg
stc
jbe
mov
sbb
adc
movsb
cld
inc
cs
cmp
push
dec
add
cmp
dec
in
xor
mov
jo
xchg
nop
ja
mov
pop
and
sbb
dec
test
sbb
sar
pusha
jp
inc
test
push
adc
dec
pop
test
lcall
mov
jecxz
jp
lods
xchg
adcl
pop
xor
sti
xlat
mov
xchg
mov
cwtl
push
repz
push
add
into
pop
adc
cld
scas
repz
dec
daa
loopne
pop
mov
test
push
scas
xchg
xor
mov
xchg
aaa
sub
and
mov
sbb
sub
adc
mov
icebp
mov
test
cmp
clc
scas
in
leave
push
fs
sub
dec
clc
gs
js
xlat
cmp
pop
cmc
mov
fiaddl
push
dec
cmp
cwtl
dec
cwtl
ret
adc
sbb
lods
fwait
push
mov
inc
inc
mov
nop
lcall
add
rol
mov
int3
pop
mov
iret
hlt
sbb
xor
pushf
pop
mov
std
push
std
in
inc
cmp
xchg
shll
sub
jnp
aas
loopne
mov
fcmove
out
jl
pusha
sub
fdivp
push
or
xchg
les
fs
jbe
sub
movsb
push
or
jno
mov
mov
jle
ret
jns
fisubl
dec
shlb
and
mov
mov
inc
shlb
clc
add
pop
xchg
mov
add
sub
lods
unpcklps
dec
pop
sbb
enter
cmc
movsb
cmp
push
pop
fidivrs
sbb
mov
test
insb
test
mov
test
repz
pop
es
loopne
mov
test
dec
xchg
adc
cmp
cmp
push
arpl
and
mov
fstpl
sub
dec
jge
dec
pop
xchg
jne
aam
out
cmp
cmp
sti
icebp
mov
sahf
jbe
push
jmp
outsb
xor
arpl
insb
adc
xorb
adc
mov
test
js
xlat
inc
mov
xchg
mov
jmp
std
sbb
push
fidivs
repz
jnp
in
pusha
js
and
icebp
xchg
arpl
rorb
cmp
loope
insb
das
in
jp
js
mov
jnp
cltd
xor
mov
xlat
cmp
inc
xchg
jle
hlt
mov
es
mov
xchg
mov
or
repz
fsub
scas
nop
dec
fiaddl
fmuls
add
and
aaa
pusha
mov
cmp
test
fdivs
pop
cmp
jne
mov
pop
test
mov
pop
repnz
and
or
cmp
jg
mov
cld
pop
out
mov
add
push
xor
pop
add
pop
and
shll
sahf
incl
inc
adc
lods
cs
subl
sub
fdivrl
jg
arpl
gs
dec
hlt
sbb
insb
sbb
shrb
inc
mov
or
sti
pop
and
dec
push
sub
jbe
enter
jno
fsubp
push
fisubl
xchg
mov
movsb
pop
lret
int
inc
fimuls
sbb
push
pop
dec
test
das
push
roll
sbb
mov
movsl
je
lcall
lea
inc
loope
push
add
in
ja
sbb
in
sahf
inc
sbb
xor
push
mov
in
data16
andb
loope
roll
add
cmp
push
mov
test
pop
lret
test
cmp
push
inc
mov
jmp
mov
sti
lahf
add
ja
out
movsl
add
push
lret
mov
lock
popa
mov
pop
xchg
mov
aaa
daa
outsl
mov
mulb
jno
imul
loop
pop
or
and
dec
add
shll
mov
test
add
mov
stos
push
orb
aas
mov
or
mov
jb
dec
mov
rorb
xor
pop
xchg
enter
cmp
or
or
cwtl
test
dec
add
and
sti
xchg
mov
out
popa
call
sbb
and
popl
inc
adc
mov
rcrb
lahf
cmpsb
ljmp
jno
je
insl
dec
ds
call
sar
movsb
and
dec
nop
jbe
cmp
sahf
ja
int
push
xor
inc
dec
and
dec
shr
cmpsb
mov
enter
jmp
mov
ret
fcmovnbe
push
pop
pop
repnz
sub
push
mov
cs
lods
inc
push
jo
dec
pop
mov
push
pop
mov
or
test
enter
dec
out
bound
push
or
pop
lcall
push
and
cld
push
pop
push
mov
cmp
mov
test
imul
cmpsl
add
add
sub
xor
outsb
jnp,pt
into
sub
vpsllq
push
ljmp
cmpsb
out
push
sbb
mov
ret
incl
fwait
mov
xlat
or
int3
aam
adc
ret
cmpb
inc
push
and
push
xchg
lods
hlt
scas
mov
loop
gs
leave
mov
and
add
pop
rorl
sub
sbb
cli
sbb
fcompl
stos
out
sub
pop
out
xlat
shll
jge
cmpb
xor
andb
cli
into
inc
jo
decl
add
out
xor
fs
xor
xor
or
es
dec
cmp
xlat
jb
stc
cmpb
in
ja
add
sub
enter
les
mov
loop
gs
aam
popl
xchg
cmp
fidivrs
inc
ret
adc
nop
and
jno
loopne
cmp
mov
fsubl
push
lret
clc
aaa
dec
ds
xor
les
cmp
mov
sbbb
cltd
adc
sub
push
push
mulb
push
jne
or
imul
adc
adc
mov
adc
sub
mov
fwait
push
mov
xchg
push
aaa
ret
dec
mov
lods
xchg
inc
sbb
cmp
data16
jle
add
fs
lock
mov
clc
ret
mov
call
cmp
cmp
cmp
mov
js
xchg
cmpsl
xchg
jge
cmp
mov
inc
in
ror
in
fisubrs
add
jne
mov
or
fnstenv
jb
aas
inc
xor
ss
cld
xchg
out
inc
add
imul
lret
xchg
pop
insb
inc
jg
aaa
fneni(8087
mull
fwait
pop
lcall
mov
inc
int
adc
lcall
jge
fdivs
jnp
test
js
xchg
nop
inc
fwait
es
bnd
icebp
fsubl
xchg
repz
into
rorb
inc
or
lahf
test
mov
xchg
add
and
push
scas
daa
loopne
push
mov
sbb
jae
sbb
test
cmp
or
sbb
mov
sub
flds
xchg
sti
scas
test
push
daa
es
lret
out
das
pop
mov
jne
jecxz
lods
fdivs
xorl
and
mov
bound
fcompl
cli
aas
sub
cmpsb
mov
out
loop
or
and
inc
lahf
inc
sahf
jg
stc
sub
cltd
in
and
addr16
in
imul
dec
fst
dec
sarb
jge
jno
sbb
std
inc
lods
mov
mov
repnz
sub
pushw
jge
mov
mov
cltd
dec
sub
ds
clc
mov
addr16
out
mov
in
dec
pop
inc
ljmp
cld
cmp
leave
pusha
fstl
rcrb
stc
mov
frstor
lock
add
mov
push
es
stos
loopne
push
push
dec
fistl
xor
add
mov
test
sar
dec
pop
xor
fidivrs
jmp
push
cmp
out
mov
imull
sbb
fsubl
out
inc
lret
fistps
xor
sbb
in
mov
xor
xor
sub
testl
jmp
mov
ljmp
mov
fisubl
mov
and
and
in
out
push
adc
sub
add
lock
adc
sbb
mov
in
dec
into
lahf
push
fdivrs
lods
mov
testb
mov
pop
pop
xchg
lcall
mov
dec
nop
push
mulb
shlb
cs
pop
inc
sub
add
jnp
fldenvs
add
inc
push
xchg
enter
das
or
aad
sbb
cmp
js
loopne
mov
xor
stos
cwtl
cmp
fs
leave
xor
ss
mov
dec
push
mov
sahf
scas
mov
jecxz
mov
repnz
cltd
jbe
xor
rcll
fisubrs
mov
ror
add
enter
in
pop
rolb
icebp
jae
xor
iret
xchg
xchg
lret
add
jle
mov
xchg
test
push
and
sub
mov
fstpt
dec
mov
adc
jle
jo
das
dec
mov
push
sub
jo
dec
ja
popf
stos
fdivl
xchg
jns
fists
xchg
cwtl
pop
out
or
lock
dec
data16
stc
test
pushf
test
push
cwtl
and
cmp
in
jmp
push
mov
mov
insl
mov
sbb
je
xchg
pop
mov
rcrb
gs
jg
pushf
data16
pop
jl
cpuid
mov
add
jns
and
sbb
inc
sbbb
inc
inc
push
jne
movsl
inc
imul
int
insl
fldl
inc
sbb
push
jae
cltd
out
sahf
cmp
mov
int3
or
cltd
mov
inc
jae
mov
fstpt
fidivrs
push
ss
arpl
outsb
imulb
shlb
scas
mov
jo
repz
mov
mov
adc
ret
sbb
icebp
sub
push
frstor
sbb
sar
sbb
dec
imul
adc
adc
loop
lds
ss
fldt
sub
cmp
jne
mov
imul
pop
popa
fcmovnu
sbb
pop
xchg
sub
fcmovne
mov
add
push
xor
sub
jne
out
scas
mov
lds
mov
test
add
repnz
sbb
sbb
xor
lods
mov
test
pusha
scas
lods
out
adc
arpl
aam
in
sub
add
int3
ret
mov
addr16
jnp
insb
insl
lods
fiadds
pop
push
ret
fldcw
jo
sahf
cmp
sub
rorb
leave
divl
adc
cmpsl
jg
mov
ds
push
cmc
push
les
or
loopne,pn
sahf
or
xchg
inc
mov
shrb
mov
add
xor
mov
push
in
jbe
adc
jl
dec
addl
xchg
inc
inc
cs
pop
stos
mov
lods
das
into
ds
fisubl
mov
fadds
dec
pop
adc
fisttpl
push
lods
pushf
adc
and
dec
jge
mov
mov
push
ret
das
fstpl
jmp
lret
ret
movsl
xlat
pop
and
js
push
movsl
lcall
cmp
or
insl
in
mov
adc
out
cli
and
dec
adc
jo
cltd
test
test
sbbl
cmp
xchg
cmp
mov
test
repz
jne
pop
rcrl
push
xor
and
sbb
fldcw
testb
call
addr16
sbb
dec
aaa
or
jbe
pop
frstpm(287
jbe
pop
xchg
sahf
cmpsb
in
inc
fwait
insb
int3
or
jecxz
in
ret
xchg
int3
jg
pop
mov
sbb
jb
mov
sub
add
ficoms
sbb
loop
negb
cmp
in
jns
lret
jbe
and
push
sub
cmp
and
add
jmp
repz
outsl
mov
sbb
in
adc
loop
loopne
pop
sub
sbb
jns
xchg
push
and
mov
movsl
jbe
daa
add
fcoms
add
clc
cmp
sbb
mov
pop
adc
insl
adc
and
push
pop
mov
stos
jmp
setle
and
mov
sti
mov
movsb
sar
mov
aam
adc
lahf
outsl
inc
js
xor
int
in
pop
out
cmp
ljmp
cld
jl
rolb
shlb
divl
rcll
dec
rclb
inc
pop
xchg
leave
lcall
hlt
push
ss
in
or
cmp
lahf
pushf
adc
hlt
sbb
pop
test
daa
scas
push
or
jmp
push
jns
ljmp
push
push
dec
mov
inc
ficoml
xlat
pop
pop
jo
sbb
or
mov
inc
jmp
adc
xchg
add
cld
fisttpll
mov
sbb
lret
and
pop
fistl
inc
loop
scas
popa
fsubl
cmp
pop
sbb
cmpsl
sbb
mov
fnsave
out
push
jmp
jbe
xchg
dec
adc
leave
jno
subb
xchg
sbb
push
dec
jns
out
cltd
out
dec
fwait
hlt
inc
xor
dec
adc
jne
dec
sahf
sub
fsubrl
mov
lods
in
adc
xchg
movsb
loopne
enter
fiadds
pop
call
cmpsl
imul
cltd
test
adc
jp
sub
fldcw
add
cmpsb
leave
orb
jnp
fcoms
add
inc
sub
cs
outsb
in
push
xchg
cmpsl
lods
mov
jl
mov
sbb
pop
jmp
js
and
sub
jne
inc
mov
mov
mov
mov
sbb
or
pop
push
loopne
inc
adc
pushf
subl
test
lret
push
mov
in
push
pop
fisubrs
mov
pop
cmp
jns
or
sbb
jp
aam
add
push
outsl
xchg
adc
xchg
sub
rcl
mov
lds
es
xor
jne
and
xchg
fdivrs
xlat
mov
mov
mov
out
sbb
shlb
addl
fcmovnu
test
jmp
cmpsl
and
xchg
jecxz
ljmp
imul
sub
lret
cmpsb
cmp
ret
push
cmp
push
test
xor
mov
std
xchg
ljmp
jo
add
lock
sbb
sbb
jnp
jecxz
inc
ss
jmp
insb
sub
movsl
mov
das
test
loop
push
adc
jns
stos
int3
and
xor
sbb
sub
sub
rcrb
daa
je
mov
dec
xchg
inc
or
xchg
dec
les
inc
sbb
dec
test
and
cld
pop
cmp
add
or
xchg
cmp
ljmp
lds
or
stc
insb
push
scas
xor
lret
jge
test
ds
xor
sbb
xor
cmp
mov
loop
jmp
mov
lret
aad
sti
xor
mov
cltd
rcrb
xlat
cld
pop
stos
cs
lods
out
subb
aad
sbb
or
stos
dec
bound
stos
pop
xor
pop
movsl
inc
push
and
jmp
pop
push
push
fdiv
bound
shll
pop
and
jmp
jne
insl
xchg
xor
cli
addr16
popl
dec
sub
cmp
or
push
mov
jb
mov
or
sbb
xchg
mov
xor
fdiv
mov
and
jp
jle
aam
cmp
ljmp
mov
cmp
inc
sub
adc
mov
fwait
inc
test
fwait
adc
into
test
stos
aaa
mov
das
inc
sub
cmp
and
xchg
imul
fwait
xor
pop
mov
and
or
call
jmp
gs
imul
xchg
sub
inc
push
jle
sub
sbb
scas
cmp
mov
add
mov
fidivrs
std
jecxz
mov
cs
out
ret
shl
dec
jne
enter
lea
push
scas
cmp
inc
mov
pop
jmp
xlat
insb
out
ds
jg
mov
pop
bound
push
xor
fistl
and
dec
mov
sbb
clc
stos
jno
mov
mov
pop
stos
dec
popa
sbb
sahf
lds
jmp
fsubp
mov
loop
cld
rorb
jp
xor
popa
jl
out
and
sub
out
push
fbld
jmp
fs
jno
adc
sub
adc
mov
xlat
icebp
sbb
xchg
inc
inc
sbb
data16
bound
sub
add
lret
mov
add
sbb
insl
outsl
je
cmp
lretw
aas
pop
pop
ret
out
pop
pop
ja
orb
xlat
and
insb
pop
dec
lds
mov
adc
loopne
xor
and
cld
or
mov
add
test
outsl
jbe
repz
lret
and
rcll
push
xchg
pop
xlat
push
or
lret
loop
push
and
dec
sbb
dec
inc
inc
loopne
jecxz
adc
js
pop
mov
sbb
push
mov
mov
jmp
dec
or
adc
xchg
std
lahf
cmp
loopne
ret
mov
push
idivb
sub
pop
fsubrl
outsl
cmpl
arpl
inc
push
inc
mov
mov
sub
jp
fdivrp
in
sbb
dec
mov
and
out
dec
mov
cmp
xorb
ja
mov
lahf
xor
pop
xchg
adc
dec
mov
imul
ficoml
call
xchg
mov
pop
fcmovu
arpl
xchg
jne
cmp
mov
inc
std
mov
pop
add
jb
nop
dec
jp
aaa
push
jmp
out
stos
dec
jecxz
es
test
cwtl
push
sti
jle
sbb
punpckhdq
jne
fisttps
mov
lds
inc
scas
shrl
gs
fistps
dec
divl
lcall
addr16
test
pusha
and
lock
add
enter
cld
push
test
or
jmp
jne
fsubrp
mov
outsl
dec
xchg
pusha
call
sbb
shrl
out
inc
jle
xchg
mov
stos
lods
fcoml
into
test
mov
gs
rcll
shll
inc
mov
pop
sbb
mov
mov
ja
ret
shrb
adc
cmp
mov
insb
rcll
mov
pop
shrl
cmp
xchg
test
xor
push
scas
aad
push
cmpsb
cmpsl
fisttps
xor
push
out
dec
insl
hlt
fcmovbe
xor
arpl
inc
dec
cmp
pop
lahf
sarl
pop
xor
in
jbe
mov
adc
push
arpl
dec
into
sarb
xchg
dec
lahf
jae
push
push
mov
adc
inc
jb
or
sub
in
dec
fs
pop
jo
fidivl
out
or
mov
push
aaa
inc
jl
scas
fsts
jmp
lahf
add
out
insb
inc
cwtl
fs
les
daa
or
stc
clc
pop
mov
jno
jae
ljmp
push
cmp
jl
ds
imul
sti
push
or
xchg
or
mov
pushf
inc
sbb
movsb
xor
repz
dec
and
bound
fwait
jmp
repz
fsub
gs
mov
addr16
cli
add
mov
sbb
clc
sub
mov
scas
je
sub
sbb
inc
sub
das
cmc
jp
add
mov
cmp
mov
rclb
add
sbb
pushf
inc
cmpsl
popf
pop
jp
jmp
test
add
inc
push
xor
xchg
pop
mov
cltd
scas
test
orl
out
sti
push
lock
xchg
sahf
in
fnstcw
jp
test
cmp
jecxz
mov
rcr
mov
rcrb
cmp
call
outsl
mov
testb
fcmovu
mov
faddp
imul
loopne
scas
sbb
repnz
lea
ret
in
mov
js
shlb
jle
iret
add
sbb
adc
dec
insl
fisubs
sbb
xchg
rol
cmp
lea
ret
adc
sub
or
jmp
fsubp
cltd
mov
stos
xor
jne
and
pushf
and
hlt
lret
bound
insb
std
push
pop
hlt
jbe
pop
lods
push
add
pusha
rcll
shll
insl
adc
jae
std
iret
and
jnp
push
and
lret
mov
dec
mov
push
pop
test
and
cmc
inc
mov
add
inc
outsb
jne
jo
mov
cltd
lods
stos
inc
clc
loopne
push
inc
and
mov
out
aas
xchg
xchg
sub
hlt
pusha
ljmp
mov
pop
and
aam
xchg
dec
loop
pop
lahf
jbe
outsb
or
push
ds
adc
inc
xor
ret
sbb
stos
or
add
pop
clc
add
push
or
dec
push
push
insl
lret
fwait
inc
loope
jbe
push
cli
mul
repnz
lahf
scas
pop
mov
pop
inc
fistpll
in
dec
cli
sbb
cmp
sbbb
mov
and
outsb
xor
dec
pop
adc
dec
sbb
js
cmpsl
cmp
add
rorl
or
push
js
jno
mov
sahf
call
or
xchg
arpl
jne
dec
fiadds
outsb
push
rcll
adc
or
xchg
into
repz
out
mov
int3
adc
jmp
inc
and
cmpsl
push
dec
imul
pop
push
out
mov
push
mov
mov
lahf
ficoml
or
add
fisttpl
add
cs
sbb
fstp
mov
cld
inc
push
jnp
nop
jne
add
incl
pop
dec
sbb
and
icebp
scas
fistl
call
mov
mov
jmp
cmp
xchg
inc
popa
pop
lret
movsl
aaa
mov
movsb
lods
mov
shlb
stc
shrl
xorb
lret
je
mov
out
jmp
mov
xchg
out
repnz
or
jecxz
dec
sub
mov
movsb
data16
sar
lcall
mov
dec
enter
add
iret
push
out
sbb
push
xor
sti
orl
sti
into
in
jmp
es
xchg
aam
jno
dec
mov
es
push
cmp
xchg
popa
dec
fstps
cmpsb
mov
xchg
aam
cmp
sarl
add
test
inc
dec
daa
out
add
aaa
sub
sbb
shlb
mov
leave
xchg
xchg
xchg
out
xchg
shr
cmp
imul
loop
adc
scas
cli
xor
sbb
popa
mov
lret
adc
iret
mov
dec
filds
add
fcmovne
test
not
push
aas
popf
adc
adc
jne
mov
aam
sub
pusha
pop
or
xor
fdivrl
jne
inc
xchg
sub
rorb
mov
mov
push
xor
xchg
xchg
stos
push
mov
out
dec
cmp
cli
sbbl
je
into
push
push
pop
push
and
test
inc
mov
xchg
or
sbb
fistl
addr16
adc
pop
lcall
or
bound
or
dec
mov
iret
mov
add
cmp
add
out
push
xchg
mov
inc
xchg
and
ret
xchg
lret
shrl
adc
adc
push
xor
push
and
dec
fcoml
loop
jno
jae
mov
xlat
ret
mov
mov
hlt
into
dec
aam
push
leave
lods
sti
inc
xchg
xor
cwtl
into
sbb
js
out
mull
mov
aam
and
lock
jbe
adcb
repz
jb
sbb
push
outsl
pop
inc
pop
xchg
sbb
ds
dec
into
lahf
xor
jmp
ljmp
xchg
call
jo
or
pop
adc
fidivrs
mov
jmp
ja
ljmp
popf
cmpsb
cmp
or
add
ret
pop
lret
mov
cmp
sbb
and
imul
and
and
mov
mov
stc
jo
outsb
adc
scas
push
jnp
cmpsl
pop
out
inc
or
xchg
paddsb
inc
pop
in
or
sbb
xor
aam
mov
sbb
mov
mov
dec
ljmp
jge
push
test
push
lret
lret
push
and
mov
jns
mov
cltd
fstl
outsb
or
and
mov
enter
xor
enter
fs
sbb
data16
repnz
and
adc
jl
inc
mov
clc
inc
addr16
lahf
mov
adc
pop
or
imul
jmp
sahf
jb
test
and
bound
jnp
sahf
push
pusha
jb
adc
mov
insl
mov
or
inc
jle
loopne
mov
pop
popa
out
sarl
das
scas
cmp
xor
int
ljmp
mov
pusha
test
lcall
pushf
push
jns
ss
loope
stos
popa
cmp
adc
pop
ja
jl
xchg
mov
ret
jnp
or
into
xor
lret
nop
mov
mov
push
ficoml
lahf
add
dec
xchg
jle
sbb
mov
in
test
fildl
ljmp
mov
out
out
push
or
stos
aaa
xor
sahf
fistpll
add
sbb
fs
pop
mov
sub
pushf
cmp
adc
pop
or
sub
mov
lret
sub
mov
cmpsb
loop
addl
push
jp
addr16
mov
push
cmpsb
test
mov
sub
movsb
lds
filds
fwait
dec
sbb
ret
rcrb
and
pop
inc
andl
insl
mov
dec
mov
adc
fldcw
bound
inc
jne
mov
lret
and
xchg
pop
mov
clc
sbb
push
add
dec
mov
pop
and
mov
pop
test
inc
leave
mov
mov
movsl
push
pop
je
add
cld
pop
mov
cmp
rorl
mov
pushf
jl
add
cmp
jmp
sbb
sarl
mov
pop
push
hlt
push
jae
int
stos
cmc
or
jle
mov
mov
xchg
jbe
inc
sbb
pushl
mov
add
sbb
xorb
jl
aad
repnz
fs
movsl
mov
cmp
out
adc
es
lahf
repz
in
mov
in
lock
sti
mov
push
ds
mov
aaa
pop
sub
in
sbb
mov
repnz
repnz
inc
mov
jp
jmp
and
mov
push
gs
nop
cmpsb
pop
test
inc
pop
jae
adc
mov
dec
adc
nop
cwtl
mov
out
xchg
js
adc
mov
jecxz
fwait
inc
out
cli
aaa
movsb
adc
adc
pop
xchg
sbb
or
aad
mull
and
lods
rcr
mov
xor
ret
scas
test
xor
fimull
cmp
std
out
int
stos
into
add
aas
aaa
sahf
mov
pop
jns
xchg
les
cmp
inc
lods
lds
rol
gs
ljmp
popa
adc
pop
xchg
pop
negl
mov
imul
mov
ret
mov
js
sbb
insl
test
jle
in
sbb
fimull
shr
jnp
in
push
dec
int3
or
inc
dec
and
pop
addb
and
dec
orl
fwait
addr16
cmp
mov
sub
mov
mov
int
ret
in
out
and
push
xchg
rorl
insb
js
and
ret
fadds
mov
nop
int
xor
mov
mov
imul
pop
sbb
push
push
xorl
lock
insb
dec
dec
fildl
mov
and
idivl
mov
inc
pop
jl
mov
fwait
andb
decl
fstps
ja
push
sbb
int3
jmp
ss
enter
repz
jmp
and
xchg
and
insb
mov
sub
cli
cmpsl
in
enter
inc
inc
movsl
jbe
pusha
cmpsb
imul
sbb
and
push
pop
cmpsb
les
xchg
in
imul
jne
and
xorb
mov
outsl
xor
mov
outsl
sub
das
pushfw
repnz
lret
jo
sahf
inc
std
repnz
aaa
inc
xchg
incb
jl
inc
iret
dec
jge
test
repnz
add
call
cmpsl
lcall
and
add
push
das
sahf
sti
push
lods
loopne
pop
xor
pop
lret
shl
stos
sbb
inc
sti
rcr
or
enter
sub
and
popa
and
sbbl
xchg
lahf
jo
xchg
lods
cli
xchg
call
lret
fbld
popa
adc
aad
sbb
ficoms
jne
mov
fistl
lcall
sbb
cwtl
pop
cltd
jg
popa
or
int3
sbb
sbb
mov
xchg
fisttps
loope
clc
cmpsb
push
out
mov
mov
testb
cmp
sbb
xor
lahf
int3
jb
cs
xchg
je
jg
js
push
fdivs
aaa
mov
test
and
xchg
add
jbe
cmpsb
cli
ljmp
out
mov
dec
pop
sahf
push
cmpsb
jg
cmpl
xchg
or
mov
mov
aaa
sub
and
cltd
outsb
clc
inc
mov
pop
inc
push
or
loope
js
js
in
mov
mov
mov
test
scas
shlb
leave
jb
dec
adc
add
mov
or
leave
arpl
cmpsb
pop
shrl
test
lods
ljmp
sbb
jae
outsl
xor
cs
je
sahf
sbb
sahf
lret
ss
out
test
stos
inc
sbb
push
cmpsb
sbb
popf
pop
stos
outsb
rcrb
movsb
jbe
jnp
or
pop
mov
nop
jnp
addr16
mull
pop
inc
jecxz
xchg
mov
xor
inc
adc
mov
shlb
pop
and
fidivrs
js
jl
movsb
ret
xchg
adc
cmp
jle
xor
js
packuswb
clc
jmp
dec
mov
pop
push
and
addb
inc
cmp
mov
inc
insl
repz
arpl
mov
sub
fistpll
dec
cmp
inc
jmp
decl
shrl
subl
lcall
sti
adc
push
addb
out
xorb
and
scas
movsb
in
inc
mov
xor
inc
outsb
pop
xchg
mov
aad
or
fstps
mov
mov
cmp
fcmovnb
dec
add
stc
mov
inc
xchg
idivl
cli
mov
mov
out
in
les
xchg
aaa
cs
dec
add
mov
xchg
push
mov
sti
in
out
lods
arpl
in
pop
leave
test
cmc
dec
push
repz
sbb
mov
pushf
jns
aad
lret
ss
clc
sub
mov
fmulp
lods
rorl
mov
and
fildll
je
and
push
scas
por
cmp
mov
cmp
jg
scas
cmp
rclb
inc
jne
lods
mov
insb
mov
push
testl
insl
pushf
fs
push
shl
sarl
imul
outsb
scas
pushf
cmp
dec
aad
or
adc
xchg
jae
and
mov
add
aas
xlat
and
inc
adc
fdivp
xor
movsl
aas
ja
sub
dec
scas
cld
lds
adc
int
imul
fsubrp
and
cltd
and
cld
cmp
inc
and
jle
adc
loope
inc
cmp
inc
jo
ret
outsb
in
dec
ret
jnp
in
loopne
xchg
out
xor
aad
push
aad
loope
into
lea
popa
fmulp
shl
das
popa
adc
lock
test
insb
negb
call
stos
cs
fmuls
push
mov
sbb
sti
insl
sahf
sub
pop
fdiv
call
mov
sbb
cmp
push
cld
in
rcr
sbb
or
enter
dec
and
xchg
fldln2
cmp
mov
inc
scas
push
or
jecxz
mov
xchg
adc
and
xchg
add
ss
jg
dec
lock
add
cmc
xchg
std
xor
push
leave
jecxz
jno
mov
cmp
test
sahf
jns
lret
xchg
adc
hlt
in
sahf
jae
pop
push
ret
es
push
inc
movsb
sarl
push
lods
stc
mov
fmul
insl
cmp
inc
bswap
cmp
and
repz
in
mov
mov
jne
pop
fnsave
adc
ret
js
sub
loop
pop
and
outsb
insl
stos
arpl
push
out
cmp
movsb
or
sub
mov
xchg
sti
test
push
jno
jecxz
xor
and
dec
inc
mov
dec
adc
push
and
dec
inc
mov
adc
cmp
sarb
repz
jns
into
inc
push
outsl
pop
loopne
xchg
clc
push
mov
cli
dec
lock
sbb
fnsave
int
mov
sub
pop
xor
or
pop
imul
call
loope
lea
outsl
ja
xor
daa
lret
jp
shrb
cmp
dec
nop
mov
flds
test
not
push
push
sub
loope
jne
jb
nop
or
jmp
jno
cltd
pop
push
pop
jp
out
cmp
cmc
mov
addl
enter
ds
aad
ljmp
ret
movsb
push
fiaddl
dec
xor
loopne
lahf
or
xchg
inc
sub
sub
adc
or
sub
scas
mov
or
repz
xchg
sub
int
xchg
addr16
mov
ss
sub
test
xor
js
stos
add
rclb
adcl
mov
ss
mov
xor
repz
mov
jne
cmc
sahf
popa
loope
bnd
icebp
mov
in
or
outsb
dec
sub
jo
inc
mov
lods
jno
icebp
xchg
pop
dec
jo
inc
inc
pop
call
lcall
cmp
int
inc
xor
or
dec
cmpsl
xor
mov
repnz
or
arpl
or
test
test
inc
int
inc
fisttps
stos
insl
std
ret
insl
int3
nop
je
ss
pop
in
push
inc
popf
loop
jo
xor
push
pusha
jns
subl
xor
inc
mov
lds
pop
jmp
and
fsubrs
push
repnz
lret
cli
std
je
inc
mov
ljmp
ds
idivl
mov
leave
test
jl
leave
cwtl
sbb
popl
rcll
mov
stc
or
mov
inc
clc
mov
insb
dec
add
mov
jae
mov
adc
jp
sbb
xchg
adc
test
andl
push
fsts
es
sahf
fsubl
dec
xor
cmp
and
notb
enter
cs
rclb
xchg
push
adc
loopne
fs
push
insl
mov
xchg
or
lods
fnsetpm(287
cmp
mov
pop
inc
sbbl
sub
bound
add
imul
mov
aaa
sti
xchg
mov
lret
insb
fcmovnb
out
or
sti
jle
in
lds
mov
pop
and
and
mov
rcll
cmpb
cld
imul
mov
or
pop
inc
dec
or
cmp
stc
sbb
fwait
lds
jae
pop
stc
jns
int3
jns
sbb
inc
out
and
jle
pop
into
enter
out
lods
pop
inc
push
cmp
xchg
pop
push
ficoml
cmp
ljmp
das
pop
insb
sub
clc
or
cmp
xor
adc
sbb
test
lret
adc
loopne
out
notb
xor
aad
and
xor
mov
or
adc
mov
lcall
pop
push
and
jg
inc
ror
mov
je
and
ljmp
xorl
sbbl
jae,pt
dec
inc
aas
movsl
push
pop
lret
test
pop
scas
xor
pop
sub
js
and
and
loopne
adc
xor
bound
lods
mov
sbb
mov
dec
mov
add
ret
lock
or
dec
xchg
inc
lcall
cmpsl
out
andl
and
ficomps
and
or
xchg
cmpsb
rol
mov
fadds
sbb
jge
dec
xchg
fdivrl
sahf
pushf
imull
xchg
adc
mov
jle
cmp
mov
test
mov
fstpt
lret
repnz
push
xor
stos
stos
repnz
pop
pop
sub
and
or
and
add
xor
mov
fwait
xor
sarl
mov
jns
push
and
pop
push
sahf
cmpsl
ja
ja
hlt
dec
push
jp
mov
sti
mov
push
inc
xor
inc
clc
sbb
aad
out
in
shlb
insb
ljmp
std
add
jle
loopne
sbb
aad
and
mov
adc
les
pop
fsubrp
xchg
adc
les
jae
inc
xchg
pandn
sub
push
daa
mov
mov
aas
xchg
push
jmp
inc
xor
add
ss
insb
dec
and
sub
aas
adc
sbb
pop
pop
mov
stc
arpl
adc
adc
push
xchg
adcl
orl
xor
push
mov
push
add
dec
mov
movl
xchg
inc
lods
dec
lahf
pop
out
sbb
stos
inc
cmp
mov
inc
shl
dec
and
test
pop
and
iret
pushf
xor
add
push
lods
nop
mov
mov
and
in
inc
cmpsl
cmp
lock
push
popf
dec
xchg
out
inc
dec
adc
cltd
push
inc
xlat
cmpl
mov
cltd
call
xor
mov
es
pop
inc
cwtl
ffree
jge
ja
fdiv
cmpsb
dec
int
ret
orb
xlat
sub
lahf
adc
movl
mov
jmp
std
or
cmpsb
xchg
jg
dec
pop
test
pop
jno
push
adc
test
sarl
lcall
mov
shr
push
out
pusha
iret
cmc
test
sti
in
pop
in
daa
dec
sub
xchg
push
sarb
jns
mov
sbb
lods
or
cmpsb
mov
mov
xchg
test
lahf
adc
test
fwait
sbb
push
add
dec
inc
sbb
mov
icebp
daa
cmc
outsl
sub
iret
rcrl
mov
nop
sti
sti
repnz
pop
mov
mov
xor
and
shr
cmpsb
cmp
dec
jg
sub
fmuls
mov
repz
movsl
call
mov
inc
mov
repz
ret
rclb
mov
call
mov
jbe
fildl
mov
mov
in
pop
xchg
test
dec
adc
xchg
fsubs
mov
adc
jp
shl
aad
push
inc
in
aas
pop
dec
divb
test
push
test
test
gs
je
outsl
xchg
stos
nop
mov
aaa
xchg
jmp
arpl
sbb
jl
adc
push
out
fstps
out
aaa
fldz
test
mov
fidivl
ja
mov
dec
or
dec
jg
add
scas
lock
mov
inc
cmc
pop
lods
lds
lods
enter
cli
test
inc
inc
test
mov
dec
jo
xor
ljmp
fistl
jb
aas
jmp
inc
or
lock
sbb
xchg
or
add
or
cmp
js
fdivl
pop
xor
jmp
das
icebp
orl
rclb
sub
jbe
fdivl
jno
les
inc
and
shlb
pusha
and
cmp
xchg
sbb
aam
mov
and
ds
push
test
mov
rol
push
lds
syscall
test
add
sbb
inc
int3
clc
pop
fsubrs
cmp
out
mov
into
int
or
imul
push
push
or
lods
movl
out
jl
inc
lods
xor
imul
xchg
pop
jg
adc
aaa
les
bound
sub
inc
jns
mov
and
push
testl
cli
ret
into
push
inc
jge
xor
lock
ljmp
or
xorl
ds
or
lock
nop
jo
movsl
xor
mov
daa
mov
xor
add
bound
cmp
xchg
jl
fldl
inc
fisubl
pop
push
and
pop
insl
jg
shll
and
das
popa
xchg
push
in
xor
mov
bound
or
mov
shr
dec
lahf
lret
negl
pop
pushf
aas
mov
jg
push
add
shld
jg
aas
lret
mov
ja
or
xlat
adc
loop
pop
fisubs
xchg
lds
jg
mov
outsl
xchg
pop
mov
jecxz
push
xlat
popa
sbbl
test
cmp
sub
cmp
jg
sti
jp
jo
mov
pop
sub
adc
push
push
jns
sar
cmp
call
dec
rcll
out
xlat
icebp
jne
pop
pushf
push
sub
into
push
add
dec
jb
pop
pop
movsb
push
daa
xlat
out
mov
nop
test
mov
mov
dec
je
jnp
sbb
add
nop
xlat
dec
pop
sbb
outsb
into
mov
out
lahf
xchg
dec
or
jg
xchg
rclb
pop
mov
outsb
mov
jge
mov
lods
and
stos
in
mov
cmp
and
xor
repz
std
jl
sub
in
sbb
fcompl
mov
sbb
stos
mov
pop
or
sub
adc
sbb
mov
xchg
jecxz
pop
fcmovbe
mov
pop
push
repnz
adc
faddl
cmp
incl
loopne
ds
pop
inc
mov
movsb
andl
mov
adc
xlat
testb
mov
pop
pusha
sbb
sbb
test
mov
dec
or
sahf
xor
add
xor
lods
or
aas
push
ds
mov
or
imul
lret
cmc
jge
push
mov
mov
out
data16
test
push
leave
push
in
test
xor
push
sbb
mov
sub
scas
mov
mov
daa
adc
mov
stc
fstl
or
mov
in
enter
sub
daa
add
push
dec
decl
nop
dec
cmpsb
jecxz
lcall
dec
repz
stos
fnstenv
loope
subl
sub
dec
fisubl
hlt
subl
call
xchg
rcrb
pushf
fmull
into
fsubs
push
ficompl
cmp
rorb
xor
sbbb
mov
out
subl
lods
mov
call
dec
and
add
loopne
shr
scas
loopne
outsl
cmp
scas
pop
adc
xor
mov
jbe
mov
loopne
jle
pop
mov
dec
mov
sbb
or
ss
inc
jae
mov
mov
dec
inc
lret
out
ljmp
pop
popf
pop
mov
add
jbe
es
ds
gs
and
aas
cmc
add
push
inc
shl
fidivrs
lds
or
popa
mov
jle
out
xchg
popa
and
aam
sahf
addr16
imul
in
cmp
push
xchg
jl
lods
cli
test
jae
adc
gs
lods
pushf
sar
push
cmp
cli
mov
loopne
cmpsl
mov
mov
and
xchg
outsb
ljmp
fs
jo
fbld
push
mov
fucomi
cmp
mov
shlb
jecxz
outsl
xor
push
push
adc
lret
enter
cmp
loopne
outsl
pop
xor
add
movl
dec
push
dec
jl
sahf
add
and
sbb
cld
dec
fisubrl
int
mov
xorl
test
cltd
negb
scas
movsl
es
mov
dec
fisttpll
outsl
mov
and
mov
inc
xchg
stc
mov
or
or
sbb
cmp
iret
inc
pushw
mov
and
test
sbb
add
test
ret
jmp
movsb
fstps
sub
mov
lock
sbb
out
data16
pop
fisttpl
xor
clc
sub
sub
jle
mov
stos
xor
je
push
sahf
imul
sub
mov
mov
jo
inc
push
sti
pusha
lahf
cmp
aad
lods
fs
mov
iret
sbb
pop
bound
add
ljmp
cmp
xor
xchg
dec
pushf
sbb
cmovno
test
and
dec
ficomps
pop
aad
popa
pop
sbb
cmp
mov
jns
ds
pushf
cld
xchg
pop
jbe
sub
and
ss
adc
bound
dec
push
in
sub
sti
mov
pop
cld
mov
ret
in
or
iret
nop
cmp
daa
into
cwtl
lret
cmp
imul
inc
sub
mov
mov
gs
decl
mov
cmp
nop
jp
mov
fwait
je
jns
fs
xlat
mov
inc
add
cmc
js
shl
push
mov
mov
or
loop
inc
test
pop
add
mov
and
jmp
mov
mov
mov
js
lods
mov
lea
pop
lds
test
imull
stos
mov
push
mov
dec
add
pop
pop
mov
jb
mov
push
fsub
inc
sahf
push
mov
iret
cltd
adc
mov
push
cmpl
lock
mov
pop
dec
lret
jne
in
adc
pop
sahf
sti
cmp
mov
jbe
mov
mov
inc
aas
pop
jne
fbstp
mov
call
fs
insl
into
push
inc
loopne
insb
js
cld
mov
std
loope
mov
xlat
push
in
dec
push
inc
mov
pmaxub
insb
insl
out
pop
movsl
aad
inc
push
ficoml
stc
dec
mov
xor
add
lret
mov
sub
jb
push
fstps
sbb
jl
adc
mov
call
inc
add
and
sub
ficoms
lret
jne
add
jb
mov
and
jnp
inc
mov
sbbl
xchg
and
movl
or
lock
les
inc
sbb
add
insb
addr16
mov
inc
dec
ss
cli
and
xchg
sti
sbb
mov
aaa
xor
cld
loope
scas
dec
dec
cmp
fwait
xorl
fcompl
out
dec
cmp
gs
adc
cmp
mov
aas
mov
daa
mov
xlat
push
sub
mov
es
test
scas
xchg
or
cli
xchg
outsb
xor
iret
addr16
cld
dec
sub
jp
sub
mov
int
ret
hlt
sub
sbb
shrl
add
jb
xchg
daa
repnz
mov
add
dec
sub
xchg
testl
ret
ret
ds
in
outsl
enter
cmp
cmp
dec
stos
aam
mov
cmpsl
stos
add
outsl
mov
fs
and
pop
mov
call
aaa
out
loop
sub
jl
push
insb
repz
adc
clc
lea
icebp
rol
jno
gs
mov
adcb
xchg
cs
not
wrmsr
cmpsb
shrb
aam
add
mull
int
stos
xor
sbb
mov
add
jb
loopne
mov
xor
outsl
dec
movsl
scas
xor
mov
and
jecxz
push
ret
mov
leave
xor
cld
add
leave
sub
stc
cmpsb
cld
or
xor
mov
push
pop
loop
mov
les
popf
int3
add
mov
mov
and
adc
test
push
mov
push
xchg
inc
cmp
xchg
mulb
jge
mov
or
lret
mov
push
sbb
dec
pop
or
dec
sub
jb
add
dec
add
dec
test
andb
arpl
cli
sbb
add
mov
aam
mov
cli
cs
iret
scas
cmc
jge
lahf
call
jb
movsb
adc
inc
clc
pop
push
test
mov
dec
mov
and
push
cltd
mov
or
rcl
mov
test
data16
cs
jg
sahf
ror
dec
push
fs
hlt
and
fimull
scas
dec
imul
sti
sbb
sbb
xor
pop
cli
dec
mov
imull
pop
aas
jge
adc
mov
push
or
or
dec
jle
mov
leave
out
addl
adc
xor
mov
xchg
adc
push
mov
dec
aas
inc
ja
lods
fiadds
cli
out
adc
sbb
jmp
out
jno
stc
pop
loope
push
cltd
or
hlt
popf
add
dec
stos
in
call
mov
add
stc
push
lock
insl
into
mov
inc
add
sti
xchg
sarl
test
mov
dec
mov
rcl
cmp
icebp
rcrb
das
adc
inc
pushf
add
mov
mov
xchg
xchg
mov
mov
ss
pop
aam
xchg
insb
mov
add
ljmp
imul
sti
xchg
mov
repz
aad
cmpsl
or
dec
mov
or
push
ljmp
push
jg
loopne
mov
pushf
pop
mov
push
push
xor
cmp
mov
or
adc
inc
stos
cmp
setge
push
repnz
scas
jecxz
lods
sub
fldcw
pop
lahf
jnp
inc
dec
mov
jle
cmp
imul
pop
sub
dec
sbb
pop
testl
stos
push
dec
rol
scas
outsb
pushf
fxch
test
sti
into
sub
mov
ss
mov
je
loope
mov
or
scas
push
jp
pop
lret
mov
cmp
clc
pop
jo
enter
sub
inc
add
cmp
and
adc
inc
xor
pop
mov
add
sbb
dec
xor
dec
cmp
or
xchg
dec
mov
xchg
popf
inc
cli
xor
lcall
pop
xchg
xor
jmp
cwtl
repz
aam
sahf
lods
lods
inc
dec
cli
out
mov
test
push
andb
imul
sahf
loopne
pop
adc
dec
mov
inc
dec
fbstp
mov
mov
cwtl
mov
divb
movb
fidivl
jb
test
and
popa
jnp
sub
sbb
lcall
repz
scas
je
push
push
mov
jmp
jp
icebp
xchg
mov
and
je
mov
or
test
push
int
xchg
loop
jae
stos
aaa
loop
mov
dec
add
dec
mov
and
std
or
jnp
push
jno
scas
mov
mov
sub
incl
jns
pop
test
call
jae
cmc
push
daa
jg
shrb
jno
scas
jle
insb
or
ds
sub
shrl
lods
push
xchg
movsl
sbb
fisubrl
mov
pop
jno
sbb
ljmp
iret
fwait
jge
inc
inc
mov
pop
and
stc
es
popa
imul
cld
inc
dec
fcmovb
mov
rcl
fisttps
mov
push
int3
mov
push
repnz
sbb
fisubs
jae
mov
sub
sub
pop
pop
push
mov
cmp
pop
call
setg
movsb
ret
mov
rcl
xchg
outsl
xor
clc
pop
jne
jo
mov
nop
fisubrs
int
jbe
enter
pop
cld
adc
hlt
jle
outsb
out
push
mov
call
cli
fpatan
or
shrb
cs
push
dec
fdivrs
mov
sbb
mov
leave
mov
mov
call
dec
mov
mov
adc
icebp
fdivr
mov
adc
or
and
cli
push
fstl
inc
pop
ds
xor
or
decb
mov
pop
arpl
pop
mov
cmovbe
add
sub
shlb
aaa
pop
pusha
mov
sbb
push
sub
jns
in
repz
and
lods
addr16
mov
fistpl
imul
je
mov
sbbl
mov
mov
in
jae
mov
fsts
fisubs
sub
ss
mov
leave
dec
sarb
divb
or
inc
inc
xchg
sub
pusha
int
mov
loope
pop
xchg
or
mov
or
jns
mov
js
icebp
xorb
aad
lea
mov
jp
repz
mov
sti
lret
cwtl
jno
lods
out
mov
push
psadbw
popf
arpl
cld
test
xorb
and
inc
xchg
jmp
dec
push
mov
sqrtps
sub
mov
insl
in
popa
testl
ror
fsubs
cmp
sbb
adc
jb
aad
ss
dec
mov
movsl
jecxz
in
xchg
xor
sbb
xchg
push
cmp
pop
je
pop
pop
loopne
push
ror
iret
div
inc
fmul
jns
mov
adc
sbb
aad
and
mov
enter
lret
push
dec
push
dec
inc
les
cwtl
loope
std
add
mov
inc
pop
shll
mov
cmp
out
pop
mov
xor
and
inc
bound
int
test
jl
pop
xor
add
repnz
push
mov
jno
sub
add
nop
aam
repz
mov
xchg
mov
jle
popa
lock
nop
enter
xchg
arpl
push
imul
stc
pop
mov
in
push
popa
popf
mov
ret
lret
sbb
inc
mov
inc
outsl
sub
mov
mov
pop
ret
lods
dec
pop
xchg
cmp
in
add
aaa
push
lods
cmpl
mov
insb
adc
les
lea
mov
test
les
push
add
pop
bound
testb
insl
jmp
ret
sub
les
pop
push
mov
jo
movsl
sbb
xchg
fwait
test
cs
sbb
fidivrl
sub
jle
xchg
cs
xor
mov
repnz
mov
inc
pop
push
inc
sbb
ljmp
inc
sbb
add
mov
sub
sub
push
mov
mov
xor
push
jl
mov
pop
es
mov
stc
mov
enter
adc
ret
lea
cmp
dec
ja
adc
aaa
bound
or
scas
dec
test
adc
cmpsb
lcall
push
sub
pop
gs
fimuls
jno
push
sbb
iret
aad
mov
fcmovb
mov
scas
mov
mov
cld
sub
mov
push
add
sbb
xor
push
jo
into
push
mov
out
mov
lds
cmpsl
ret
jle
add
lret
in
xchg
inc
xchg
jne
add
jg
jb
xchg
dec
pusha
lods
jno
lahf
shlb
pop
outsb
cmp
xor
xchg
in
outsl
jmp
mov
push
aad
sahf
sbb
inc
mov
movb
mov
xchg
scas
inc
xchg
pushf
and
mov
dec
mov
decb
push
add
inc
pop
mov
cmp
jle
nop
fdivs
cs
mov
inc
test
mov
push
sbb
mov
and
orb
jbe
push
jge
cmpsl
imul
loope
sbb
cli
out
mov
jle
xorb
mov
add
pop
xchg
lds
jmp
rorb
or
hlt
inc
jne
and
ds
scas
pop
bound
lds
xor
arpl
mov
cmp
xchg
flds
jle
fwait
pop
xchg
push
mov
hlt
xchg
lods
stos
mov
pop
inc
ljmp
jl
ss
enter
xor
lahf
test
sbb
stos
into
push
bound
push
jmp
inc
daa
inc
das
mov
push
xchg
jbe
stos
in
mov
push
in
mov
ljmp
std
cmp
jp
pop
fistpll
inc
call
test
outsl
xchg
arpl
add
dec
mov
movsl
sahf
pop
out
mov
adc
fldl
pop
ja
mov
nop
cltd
rcll
cmp
leave
sub
cmpb
cli
mov
sub
mov
jo
stos
sub
cmc
lds
inc
xchg
aaa
roll
rclb
ret
repnz
cmp
outsl
nop
movsb
or
lock
ret
push
scas
mov
pusha
and
jb
mov
or
or
and
imul
mov
jge
mov
shlb
push
cmp
adc
push
inc
sbb
sub
jmp
jae
iret
test
push
mov
dec
sti
outsb
aaa
ss
in
mov
cld
mov
stc
pop
xchg
pop
mov
pop
mov
arpl
frstor
pop
jb
gs
push
aaa
mov
cmovno
ja
mov
cmc
cmp
push
sbb
and
lret
iret
js
gs
lock
xchg
movb
jge
std
jbe
push
sub
mov
pop
sti
movb
sbbb
stos
pop
jge
std
enter
mov
repnz
xor
xor
sar
jle
add
push
xchg
push
nop
aad
stos
js
sarl
leave
mov
pop
dec
mov
sub
leave
test
sti
and
pop
daa
fistl
sub
or
cmpsl
inc
pop
sbb
notl
in
add
fwait
pop
aaa
push
and
dec
arpl
add
iret
dec
orl
pop
or
fdivrl
dec
xchg
adc
fisttpl
nop
xchg
and
and
ret
das
pop
pop
inc
cli
xchg
ret
pop
sub
mov
sarb
daa
imul
push
divl
inc
mov
ds
shl
stos
push
out
int3
inc
rcrb
clc
dec
mov
mov
fbld
ds
jo
mov
fmuls
ret
ret
dec
jp
sub
loope
jno
testl
sbb
or
clc
ret
fistps
and
push
cmp
mov
hlt
xchg
add
in
out
js
mov
add
pop
daa
insl
cmc
out
mov
jg
loop
jno
mov
mov
push
push
js
clc
sub
dec
sbb
mov
cli
leave
push
stos
mov
xor
in
and
rcrl
cmp
lret
mov
loop
in
popa
mov
mov
icebp
les
lds
dec
cwtl
pop
sbb
bound
xchg
movb
jno
repnz
into
mov
mov
nop
les
lret
mov
imul
out
cltd
xor
es
addb
or
jge
rcrl
scas
daa
in
jl
mov
xor
mov
sahf
das
in
push
dec
int
pop
inc
xchg
loope
dec
xchg
shrl
cmp
jo
cmp
fs
scas
xor
ffreep
dec
jmp
inc
push
cmc
lods
push
scas
mov
add
or
jle
ja
loope
fwait
pushf
into
scas
sbb
std
mov
jg
sub
pmulhuw
mov
movsb
pop
lret
out
adc
leave
roll
out
adc
adc
int
pop
mov
repnz
xchg
adc
mov
push
daa
xor
test
sbb
adc
ss
insb
les
cmp
flds
fstl
imull
sub
and
cld
mov
bound
cmpb
pop
and
dec
xchg
xor
push
jmp
std
lods
rcll
push
xchg
xlat
push
lret
pop
out
mov
lea
add
jp
jmp
data16
add
pushf
je
in
test
rcrl
dec
loope
or
fimull
mov
lock
movsl
sbb
and
dec
jle
insl
mov
pop
imul
xor
pop
cltd
lea
pop
je
jecxz
mov
movsl
dec
mov
aad
cmp
jmp
sub
add
stos
call
inc
cld
and
fimull
mov
or
adc
insb
mov
mov
jl
enter
cmpsl
fwait
dec
mov
fsubl
and
call
jecxz
pop
adc
in
pushf
loope
jnp
stc
pop
ja
aam
add
add
inc
clc
repnz
adc
sbb
aas
xchg
push
lret
xadd
out
or
fwait
pop
loope
cs
jp
dec
aas
push
imul
aam
push
xlat
popa
daa
ror
mov
pop
fstpl
stos
xchg
movsb
push
sub
cli
cmpsl
adc
sub
or
mov
dec
xor
push
push
call
out
xor
cli
call
jnp
loop
mov
sub
xchg
pop
or
in
jg
xchg
ret
cli
rorb
hlt
test
or
sbb
push
xor
outsl
cmp
lcall
addr16
dec
sbb
das
movsb
xlat
fiadds
clc
cmc
ds
dec
and
mov
jmp
mov
or
test
pushf
or
test
subl
xor
adc
int3
les
dec
inc
test
mov
repz
mov
pop
mov
insb
mov
roll
dec
lds
mov
inc
mov
into
or
mov
sbb
test
or
mov
ret
daa
xor
push
test
sbb
enter
xchg
aad
ljmp
inc
outsb
aaa
std
cmp
inc
pop
stc
out
scas
loopne
loop
aaa
adcl
call
std
jp
xchg
xchg
lods
mov
adc
add
cmc
cmc
sti
icebp
test
xor
cmpsb
rcr
inc
and
adc
xchg
stos
enter
or
cmp
sahf
insb
mov
daa
rcll
outsl
das
jl
push
popf
inc
outsb
cwtl
lds
aad
icebp
cmp
push
inc
aas
cwtl
push
sahf
push
mov
sbb
and
lcall
jbe
pop
jbe
in
jmp
sbbl
repnz
fcoms
mov
rcrb
xchg
gs
popf
push
cld
mov
mov
cmpsb
sub
mov
stos
sbb
dec
or
and
jne
and
push
cmpsb
mov
or
int
and
and
scas
ljmp
scas
push
dec
fcmovb
inc
mov
pop
nop
mul
and
cmpsl
xacquire
loope
fdivl
xchg
jmp
je
dec
and
xor
icebp
je
loopne
xchg
cltd
loopne
mov
pop
adc
dec
int
fwait
pop
add
mov
mov
sbb
aas
jg
and
dec
or
jp
imul
mov
sahf
adc
pusha
mov
insb
jb
int
push
hlt
gs
push
stos
jmp
subb
mov
jle
pop
adc
nop
pusha
add
adc
scas
in
sbb
cltd
mov
dec
imul
cwtl
inc
push
enter
out
clc
jmp
daa
lret
lcall
repnz
push
lods
repnz
pop
mov
sahf
sub
push
int3
mov
aas
les
jecxz
aaa
das
mov
pop
cs
and
aad
loopne
xor
cmp
cmc
in
and
mov
mov
push
mov
out
in
or
aam
popf
inc
mov
jg
xchg
out
jl
sbb
push
outsl
cmp
push
push
outsl
mov
and
rcrb
andb
daa
or
xor
mov
pop
xorl
inc
aas
int3
sub
inc
ficoml
cmp
jno
xchg
pop
lock
pop
stc
rep
test
lret
push
rcr
jnp
xor
or
icebp
pop
mov
pop
call
repnz
adc
sub
shlb
popa
mov
xor
lds
mov
icebp
aas
sub
into
dec
and
outsl
adc
insl
imul
shlb
imul
in
xor
or
ljmp
mov
loope
fs
inc
data16
cli
mov
stos
popa
fcoms
dec
cld
mov
scas
add
iret
push
loop,pt
popa
sub
pop
push
adc
mov
inc
or
aas
xor
xchg
mov
rclb
push
js
cmp
stc
mov
outsb
ljmp
mov
mov
jecxz
ds
icebp
loopne
mov
lret
faddp
lret
push
pop
out
mov
inc
lods
dec
cmpsb
sub
ss
mov
loopne
ljmp
test
pop
pop
dec
mov
or
mov
rorb
jp
mov
lds
sbb
test
xorl
cmp
add
ljmp
and
sbb
cmp
mov
xchg
sahf
push
mov
inc
push
sub
mov
add
es
pop
or
and
push
sbb
push
adc
fimull
push
cli
cs
mov
mov
scas
ljmp
adc
test
imul
xchg
mov
and
loope
ds
cmp
jl
sbb
dec
or
outsl
xchg
inc
mov
mov
jle
mov
xor
rcrl
mov
test
mov
je
mov
or
mov
ret
jne
inc
orl
inc
cltd
jle
cmpsb
jns
xchg
aas
xchg
call
xchg
jge
mov
pop
das
xchg
cs
mov
adc
aaa
jmp
dec
push
push
lret
lret
mov
inc
imul
jmp
jnp
dec
rcr
sub
inc
je
push
sub
and
popa
std
cli
mov
ss
jo
icebp
and
xor
out
push
push
add
inc
bound
in
cmp
sarl
fs
mov
and
lods
sub
lods
fs
mov
movsl
cs
cltd
addr16
pop
push
icebp
stos
and
iret
mov
leave
adc
pop
pop
out
cmpb
popa
les
sbb
cmp
in
xchg
loope
test
add
jbe
fninit
sub
mov
inc
lds
inc
les
or
and
xlat
pop
pop
adcb
or
stos
pop
jge
push
stos
cmpsb
sbb
jge
mov
adc
pop
mov
and
sbb
xor
adc
cltd
data16
mov
cld
test
and
out
inc
mov
dec
movsb
aaa
add
ss
jo
xchg
sub
enter
cmpsb
lods
movb
add
sub
rorb
push
loopne
fnstsw
push
inc
mov
in
push
rcrl
lahf
nop
dec
ds
mov
inc
push
dec
push
fiaddl
repnz
scas
jg
mov
adc
sbb
bound
lds
les
lds
loop
iret
in
push
mov
mov
mov
add
add
and
push
mov
lods
and
mov
fisubrs
insl
rclb
mov
xchg
int
mov
sbb
gs
inc
out
cmpsl
sahf
mov
dec
in
aas
mov
xchg
sub
fucomi
xchg
addr16
adc
insl
inc
cwtl
fs
mov
mov
or
mov
lock
sbb
icebp
mov
mov
mov
or
dec
jbe
xchg
lahf
xchg
cltd
aad
mov
or
js
mov
popf
dec
mov
push
aaa
push
adc
mov
push
dec
in
dec
stc
inc
int3
add
xchg
in
or
testl
mov
push
pop
loopne
cmpsl
push
pop
je
cmp
test
leave
xchg
push
lock
scas
mov
out
fistps
xchg
push
sbb
pop
mov
push
jmp
popa
ret
idivl
xor
inc
inc
cmp
push
data16
pop
testl
jge
cmpsb
xorl
and
ret
je
jecxz
push
inc
call
in
es
mov
hlt
and
cmp
dec
sub
mov
mov
mov
add
into
xor
imul
outsb
jmp
sbb
jo
not
jmp
lods
in
lcall
icebp
aad
daa
mov
mov
adc
mov
add
mov
adc
daa
pop
imul
inc
pop
lahf
push
pusha
xor
push
loope
pop
dec
out
sbb
cltd
aam
sbb
xlat
inc
and
push
insl
cmpsl
push
adc
pop
dec
js
inc
sahf
stos
mov
sbb
ret
sbb
lret
mov
aam
inc
and
clc
xlat
push
enter
adc
movl
call
aaa
sbb
cmp
hlt
movsb
enter
loopne
push
mov
and
adc
push
fcmovnbe
and
bound
fsubl
loop
inc
lea
cmp
hlt
iret
or
outsb
movsb
hlt
mov
ret
mov
rorb
mov
shrb
mov
scas
fadd
jns
mov
das
pop
icebp
adc
dec
pop
movsl
rcll
push
adc
js
les
dec
push
arpl
jecxz
and
roll
jmp
lods
test
add
addb
hlt
xchg
mov
sbb
jecxz
or
in
lods
icebp
prefetchwt1
or
or
js
outsl
fisttps
cmpsl
ret
andl
int
movsl
or
jbe
mov
nop
push
adc
adc
shll
flds
xchg
dec
ficoml
push
mov
inc
adc
daa
imul
jl
and
negb
fdivr
lahf
mov
movsb
push
sbb
lret
jb
mov
adc
ror
loopne
adc
xchg
adcl
nop
rolb
or
inc
dec
and
mov
mov
sti
je
sbb
xor
fmuls
and
sub
loope
sarw
inc
cmc
xor
popl
repnz
xchg
push
test
lock
xor
dec
test
scas
inc
out
or
insb
jne
cmp
mov
pop
pop
popf
test
xor
iret
push
pop
bound
dec
gs
andl
popa
pop
test
mov
inc
test
out
pop
outsb
arpl
imul
js
popf
out
pop
cmc
test
or
les
repnz
add
cld
jecxz
addr16
fiadds
int
test
jmp
fcmovnu
jp
icebp
in
xchg
xchg
js
insb
ja
xchg
mov
popa
or
rcrl
andb
jp
xchg
test
mov
rorb
jns
mov
arpl
mov
pop
and
cmpb
cld
or
dec
push
jl
dec
add
lahf
movsl
push
fsubp
test
ret
cld
out
and
mov
loope
and
mov
xchg
out
mov
adc
shl
fwait
xchg
mov
lret
cld
stos
ljmp
cmp
mov
push
mov
ljmp
imul
pop
mov
loop
push
sbb
jle
jb
mov
pop
lea
push
sbb
xor
out
pop
test
out
cmp
pushf
outsb
jge
dec
cld
dec
dec
pop
sbb
and
movsl
add
fcmovnbe
testl
fisubl
push
shrl
rorl
and
adc
js
fimuls
in
jge
or
mov
sahf
hlt
push
jle
xor
imul
pop
dec
call
push
je
stc
sarb
inc
dec
sar
cmp
call
lret
mov
idivb
enter
ja
mov
xlat
push
push
gs
mov
sub
lretw
test
adc
jae
jb
push
lcall
imul
mov
xor
xchg
jle
dec
roll
dec
in
xor
aas
fcom
cmp
mov
in
outsl
mov
xchg
cmpsl
test
push
fiaddl
mov
cs
fnsave
stc
sahf
je
and
stos
lret
mov
push
jae
subb
std
mov
mov
in
jecxz
push
cmp
aaa
outsb
cli
loope
jmp
cld
push
xchg
lods
leave
pop
rcrb
inc
stos
cli
clc
jecxz
xchg
push
out
addr16
dec
jmp
and
jge
xchg
sahf
mov
or
shll
sub
mov
push
adcl
inc
mov
adc
xor
pop
mov
bound
jmp
gs
adc
mov
and
mov
loopne
sahf
cwtl
jne
add
fnsave
mov
xor
and
jg
lods
daa
adc
test
push
xlat
ficoml
jnp
sub
fs
mov
fstpl
or
xor
lods
out
aas
in
xor
mov
enter
xor
out
pextrw
mov
mov
mov
fisubl
xor
add
shl
data16
or
loop
xor
insl
jl
sub
lcall
push
lret
stos
mov
bound
movsl
popf
sub
les
dec
push
xchg
test
paddq
adc
sahf
xor
and
js
in
dec
cli
cltd
mov
insl
or
push
nop
adc
push
push
out
sbb
xor
mov
cmpsb
pop
inc
nop
pop
in
sarb
popf
add
inc
pop
insb
cmp
in
lods
aad
lods
push
lods
iret
or
aad
mov
xchg
push
adc
imul
add
ds
idiv
and
repnz
dec
pop
fs
dec
sbb
push
rcll
bswap
sbb
sub
inc
sub
rcrb
mov
insb
push
stos
pop
and
das
xchg
jg
test
popf
ss
clc
sbb
xor
push
dec
fstps
push
xchg
cld
ja
sbb
add
sbb
pop
cmp
imul
jno
nop
mov
mov
pop
inc
out
lret
data16
mov
add
dec
jge
in
adc
push
in
cltd
or
outsb
inc
mov
push
je
push
inc
loope
rcrb
insl
imul
cmp
aaa
cmpsb
cltd
mov
jae
loopne
pop
daa
cmp
mov
xchg
push
push
lods
and
xchg
mov
xchg
and
sar
call
and
aam
clc
ficompl
sahf
filds
rorb
idivl
cwtl
loop
xor
and
test
mov
adc
bound
push
ljmp
lds
jecxz
mov
dec
add
jo
sti
cmp
aad
les
cmpsl
iret
fsubrl
jge
test
sti
sbbb
ficoms
mov
or
xchg
int
xor
jge
lret
loope
inc
fbld
repnz
sbb
pop
fisubrl
pop
in
jmp
mov
jno
nop
rcl
insl
cmpsb
pop
adc
cld
out
rcrl
imul
fadd
scas
xchg
push
mov
xchg
lea
imul
sub
into
cmpsl
rorl
xchg
ret
push
push
push
and
std
sbb
jp
adc
mov
adc
cs
shll
fwait
aad
inc
jae
aam
imul
movsl
adc
and
mov
imul
sub
das
ja
push
into
dec
fwait
shll
mov
add
call
aaa
in
movsl
and
mov
fildl
push
cmpsb
test
mov
sahf
test
es
cmp
mov
or
and
inc
cmp
mov
icebp
aas
lea
mov
cld
movsl
jge
lea
lods
cmp
fucomp
xor
dec
push
inc
mov
fimull
popa
xchg
jecxz
push
mov
das
push
mov
icebp
imul
cwtl
rclb
sbb
push
rorl
sub
or
cmp
cmp
mov
insl
les
mov
push
iret
mov
stos
mov
jge
bound
xor
inc
or
cmp
out
leave
mov
in
fstp
jns
ficomps
adc
orl
sbb
pop
loope
fwait
mov
cmp
imul
sbb
pop
adc
xchg
outsb
pushf
mov
pushf
fisubs
inc
pusha
mul
xor
addr16
sub
sbb
clc
mov
cmp
jo
push
popf
lock
sbb
clc
lcall
sbb
rcll
xor
lret
lods
into
push
fcmovne
inc
pushl
lds
jg
mov
cmc
push
jb
adc
xchg
add
fsubrs
aaa
ja
adcl
int
push
loop
in
enter
push
pop
jnp
xchg
inc
inc
cltd
icebp
movsb
add
pop
hlt
or
imul
imul
mov
cmp
loop
and
mov
or
inc
sub
test
xchg
jge
mov
ds
pop
jns
xchg
push
push
stos
leave
xchg
xchg
das
sbb
sahf
imul
jno
nop
lods
cmp
sbb
sahf
andb
xchg
push
mov
loopne
mov
and
mov
mov
xor
xor
cld
gs
and
andl
jne
pop
push
int3
jmp
lahf
mov
int3
aaa
sbb
or
cwtl
jbe
add
pop
mov
dec
mov
enter
xor
pop
push
mov
pop
imul
sbb
push
pop
mov
ja
jle
out
xchg
out
or
das
imull
rorl
mov
outsb
mov
jns
insl
and
in
sub
subb
adc
shrl
mov
add
dec
leave
adc
dec
jmp
mov
sbb
out
cld
sti
dec
mov
and
ret
and
shl
aaa
xchg
add
btsl
lahf
bound
or
test
ret
data16
mov
lods
test
mov
xchg
add
aaa
adc
sahf
js
inc
pop
insb
push
mov
fdivrs
inc
fisttpll
jnp
shll
stc
sub
pop
fs
fsts
daa
cmp
jmp
mov
push
jmp
jb
cltd
jecxz
push
or
mov
pop
dec
sahf
scas
xor
arpl
mov
push
dec
mov
xchg
call
int
dec
test
push
lods
and
push
xor
pusha
or
popa
mov
shlb
clc
fidivs
and
jle
push
adc
mov
mov
icebp
lret
or
cltd
mov
mov
add
add
es
aam
std
mov
rorl
sub
lcall
or
sahf
pop
xchg
dec
inc
jg
cmp
das
aas
dec
fistpll
out
mov
and
jae
popa
loopne
jle
jl
iret
movsb
jo
ljmp
mov
inc
fmulp
fcoml
jb
mov
push
arpl
bound
clc
push
sti
xor
js
mov
xor
pushf
sbbb
dec
lds
fs
mov
icebp
push
mov
push
fistl
push
dec
dec
test
jns
inc
aas
xor
jns
lret
push
pop
sbb
xchg
xor
pusha
movsl
pop
lock
mov
inc
fs
mov
inc
lret
mov
dec
and
pop
jecxz
cmpsl
mov
outsb
lret
xchg
sub
lods
pop
pcmpgtb
adc
mov
pop
fistpll
repz
cmp
xor
std
cvttps2pi
in
ret
out
test
sub
mov
les
adc
rcl
addr16
fbld
dec
pushf
pop
ljmp
outsl
fimuls
add
pop
clc
lahf
int
mulb
sub
sarb
ror
nop
adc
push
out
jo
push
jecxz
adcb
jle
int3
add
xchg
lcall
mov
mov
sbb
cmpsb
dec
leave
int
xchg
scas
cmpb
imul
inc
fidivrs
gs
xor
gs
rcll
movsb
orb
sub
inc
rorb
pushf
mov
sbb
and
cltd
dec
in
rcrl
lahf
ja
xchg
imul
and
inc
xchg
mov
sub
out
mov
mov
inc
jbe
rcl
pushf
test
push
add
push
jge
jae
jl
int
sti
jle
adc
int
movsb
call
add
and
addb
je
or
lods
ret
icebp
sbb
mov
xchg
sahf
in
iret
sbb
inc
pop
mov
and
or
mov
jb
sub
in
lods
int
lds
inc
add
adc
fidivs
inc
push
aas
cli
mov
jno
add
jmp
cmp
push
push
hlt
xor
pop
out
stos
repnz
cmp
cli
imul
es
in
notl
sub
xchg
jecxz
test
lods
les
and
call
mov
adc
dec
rorl
ss
lcall
or
aam
adcl
loopne
push
inc
mov
lahf
cmc
cli
sarb
incb
sub
pop
mov
in
aaa
hlt
daa
les
lock
bnd
in
ror
gs
clc
and
mov
das
mov
sqrtps
es
push
xchg
fs
fdivl
dec
xchg
ds
jp
xor
and
leave
imul
sub
adc
icebp
aam
dec
insb
xchg
push
push
mov
sbb
aad
inc
jecxz
mov
jbe
aam
or
addr16
pop
and
inc
loope
and
inc
in
add
or
and
xchg
orl
es
pop
lods
sahf
xchg
xchg
push
xchg
fdivl
dec
push
cwtl
and
cmpsb
and
jo
sub
jbe
test
test
int
cwtl
add
cmp
adc
push
ficompl
fisttps
pop
shll
pusha
mov
xlat
js
sti
pop
jbe
cmp
jge
out
out
das
jge
cmp
xchg
sbb
es
xor
gs
std
cld
dec
in
enter
fbld
sahf
jecxz
test
in
mov
jne
mov
fwait
push
test
call
and
sub
loop
cmp
ret
xor
sub
xchg
mov
pop
sbb
add
daa
and
pushf
lods
push
fdivrs
ficoml
add
aaa
mov
push
daa
or
mov
enter
sbb
mov
mov
and
pop
call
push
insl
inc
sbb
fmuls
add
mov
sub
jmp
or
push
roll
decb
adc
mov
movsl
das
pop
cld
clc
adc
sub
clc
inc
mov
dec
push
mov
xchg
cmp
mov
ltr
das
mov
mov
rorb
daa
loope
add
int3
adcb
call
paddd
xchg
sbbl
dec
xchg
or
cmp
inc
or
jnp
add
jg
dec
jnp
loop
push
jbe
and
mov
mov
std
cmp
loope
xchg
rclb
add
data16
int3
mov
mov
mov
add
daa
dec
pop
mov
subl
stos
add
cmp
in
or
xchg
outsb
jmp
shll
adc
adc
xchg
sbb
popa
mov
scas
cmp
sub
mov
daa
sub
push
or
push
add
ss
xor
ljmp
inc
sbb
sbb
pop
fstl
cltd
inc
lret
jnp,pn
or
or
shl
xchg
addr16
stos
sbb
push
adc
sbb
fisttps
scas
xchg
lods
adc
dec
and
aaa
out
dec
ficoms
cmpsl
xor
pop
push
xchg
mov
arpl
hlt
pop
xchg
push
mov
loop
add
imul
movsl
xor
push
repz
cltd
jne
cmpsl
inc
jns
xor
aaa
repz
xchg
xchg
mov
jle
fidivs
add
testb
sub
add
ja
pop
int3
or
stc
popa
sti
add
stc
movsl
mov
rcrb
int3
imul
push
sbb
add
decb
pop
add
mov
shr
lea
fimull
lods
xchg
fucom
inc
je
sbb
test
mov
mov
addl
leave
adc
in
gs
xor
test
inc
dec
das
bndstx
pop
stos
adc
push
push
mov
iret
inc
movsb
push
mov
popa
in
iret
test
xchg
in
loop
in
nopl
in
shr
std
clc
popf
push
jbe
int3
pop
add
adc
scas
push
fists
sub
sbb
mov
push
inc
jns
mov
push
jge
xchg
or
and
lcall
stos
fmul
or
in
jno
js
or
fwait
xor
mov
adc
ret
icebp
adc
sbb
and
or
cmpsl
out
in
jle
xchg
adcl
cli
jns
das
mov
dec
jle
mov
cmp
sbb
gs
push
jns
mov
aam
or
pop
and
jecxz
test
push
fists
adc
jge
test
mov
iret
mov
je
cmp
ret
mov
rcrb
mov
add
lea
dec
testb
xor
add
or
bound
or
leave
out
xor
js
inc
mov
pop
fstl
inc
jb
out
ror
outsb
test
fcompl
jp
push
cmp
lret
cmp
cli
jb
push
pop
out
aam
repnz
aaa
adc
repnz
cmp
int3
dec
jl
addr16
push
sarl
dec
mov
sub
sub
loop
lcall
or
adc
sub
push
push
fldl
sub
jo
in
push
ds
mov
test
add
jle
dec
mov
xorl
ds
push
jbe
cmp
adc
sub
repz
pushf
orl
sbb
inc
out
push
popa
push
out
pop
cmp
and
xor
mov
cmp
add
jecxz
push
sbb
pop
out
add
lods
dec
mov
xorl
mov
loope
data16
lahf
call
sub
and
stos
xor
lret
cli
xor
fidivl
or
loop
cld
push
pop
xor
mov
xchg
clc
sub
dec
std
cmpsl
movsb
stos
mov
andb
out
adc
push
in
lods
negl
data16
cmp
push
mov
lret
mov
pop
mov
pop
sub
mov
mov
iret
das
and
xor
mov
notl
cmp
pushf
clc
cs
and
xchg
and
gs
popa
test
mov
pop
push
rcr
stos
movsb
in
push
jle
pushf
lahf
mov
mov
xchg
into
scas
sahf
or
std
sti
and
int
outsb
sbb
dec
or
arpl
ret
xor
mov
addr16
xchg
insl
pop
call
pushf
shrl
in
mov
adc
xchg
xchg
call
stos
ds
fdivr
pop
mov
jl
outsb
and
movsl
fisttpl
xchg
fisubrl
rorl
mov
mov
jmp
jne
cmp
jle
cli
jae
push
dec
dec
fs
jecxz
sti
mov
xorb
jg
xchg
pop
jno
stc
mov
insb
jnp
mov
pop
pop
push
add
add
xchg
add
or
pop
cmp
lret
or
imul
push
out
dec
test
push
sub
xchg
inc
pop
imul
in
sahf
addb
aad
add
imul
xor
bound
pop
xchg
insb
jno
cltd
test
mov
pop
adc
stos
jge
add
scas
das
arpl
call
xchg
call
aaa
lds
pop
icebp
ja
mov
subb
adc
and
outsl
mov
outsb
jg
repz
cltd
aas
sub
dec
roll
inc
adc
movsl
mov
cmc
mov
push
or
addr16
adc
add
aad
jmp
push
push
lea
or
loopne
or
clc
insl
push
rol
push
jb
mov
push
in
jae
decb
sub
push
sub
subb
xchg
cmc
pop
lods
fsubrl
aad
fnstcw
cmpsl
dec
dec
jg
jp
jnp
xchg
sub
dec
loopne
mov
sbb
lods
cmp
cmp
add
test
ret
pop
inc
cmpb
sbb
xchg
movsb
lahf
ror
jo
les
bound
jmp
fidivrs
push
daa
repnz
sub
in
iret
mov
jge
in
repz
jmp
jmp
imul
adc
or
mov
push
in
or
cmp
test
pusha
bound
add
jbe
xor
add
push
aam
mov
mov
dec
pop
xlat
sub
leave
mov
xchg
and
call
popf
jbe
ds
daa
pop
xchg
ja
mov
mov
jecxz
pop
int
clc
scas
insl
rcll
inc
and
lods
test
in
sarb
add
lahf
cmp
lahf
inc
inc
mov
filds
adc
adc
ss
incb
mov
sbb
mov
iret
pop
loopne
jge
sub
gs
rclb
aam
lahf
or
mov
or
mov
pushf
into
sbb
cli
adc
nop
shl
adc
lcall
aad
sti
push
xor
and
inc
and
push
std
in
rolb
xchg
mov
addr16
add
fldl
pop
mov
jnp
cmp
adc
cwtl
cmp
jne
add
mov
add
mov
sbb
outsb
sbb
sub
mov
rclb
push
jbe
pop
popa
stc
sti
ss
jnp
cltd
lods
aaa
cli
adc
cmpsl
rcll
jb
enter
outsl
push
cmp
pop
sub
xor
mov
fcoml
aad
icebp
sti
movsl
inc
outsl
adc
fiaddl
lahf
outsb
out
mov
call
imul
repnz
lds
mov
mov
lret
inc
push
out
xchg
lret
scas
hlt
fdivrs
sub
fisttpll
femms
jp
mov
pop
fs
bnd
push
data16
inc
jbe
sub
mov
fdivrs
popa
xchg
sub
das
dec
leave
sbb
jne
mov
mov
xchg
sbb
leave
add
xchg
lods
dec
gs
mov
pop
mov
fiaddl
fs
mov
out
aad
call
out
std
cwtl
dec
pop
sbb
mov
shrl
mov
pop
data16
stc
cmpsl
mov
lock
cmp
mov
dec
es
ret
fisttps
rolb
push
jge
cmpsl
jmp
push
or
sbb
lods
pop
decl
xchg
es
mov
mov
push
shrb
neg
push
dec
xor
jnp
mov
pop
sbb
insl
insb
mov
jnp
fisttpl
mov
mov
mov
addr16
shlb
jmp
xor
divl
in
inc
int3
cltd
mov
mull
adc
inc
mov
cli
or
sub
xor
cli
cmp
cmp
and
pop
fsts
or
lahf
add
inc
iret
cli
fwait
jno
lret
mov
loope
fsubp
data16
imul
jp
std
leave
mov
cwtl
int3
loopne
fidivrl
lock
and
adc
sbb
adc
and
xchg
adc
insb
push
mov
iret
inc
or
repnz
jne
cmp
and
in
sub
jbe
loopne
push
mov
enter
stos
dec
aaa
shrl
adc
xchg
mov
sbb
mov
out
aas
sub
shll
negb
int
xchg
inc
pop
js
xchg
nop
add
int3
aad
jnp
rolb
ljmp
shrl
push
movsl
push
xchg
jbe
pop
loopew
shll
popa
repz
pop
mov
shr
fst
mov
sub
lret
add
fcomps
and
or
data16
call
ret
sbb
jle
adc
sub
iret
pop
push
push
pop
jns
sbb
rclb
and
rep
add
cmp
test
es
imul
jb
push
mov
xchg
icebp
push
add
push
mov
inc
mov
sahf
cmp
fildl
jne
mov
pop
pop
dec
mov
cmpsb
mov
jg
mov
or
mov
jmp
dec
add
dec
adc
lret
xor
lret
fbstp
and
popf
faddp
cmpl
mov
dec
xor
and
lods
push
loopne
in
dec
cmp
addl
ljmp
xchg
mov
sbb
les
lret
xchg
jge
fwait
dec
sub
inc
xor
sbb
mov
jo
fwait
orb
jnp
fsubs
or
arpl
enter
leave
scas
out
mov
fsubl
bound
xor
xor
jno
pop
pop
or
pop
sbb
and
cmpsl
or
movsl
and
pop
daa
push
lcall
stc
or
xchg
xchg
add
loopne
xchg
cmc
out
sbb
out
or
jp
push
stos
sub
popa
les
xchg
clc
rcrb
push
das
mov
sbb
pop
xchg
or
subb
insl
and
fdivs
xor
ficomps
lea
cs
rcrb
inc
push
scas
mov
xchg
es
psubb
mov
sub
cli
mov
add
sub
push
fldz
jo
jecxz
add
hlt
popf
mov
push
lock
clc
cmp
movsl
jne
sbb
xchg
mov
in
adc
cwtl
jge
jge
mov
push
cmc
inc
fwait
jno
cmp
idivb
and
pop
sub
iret
pop
movswl
and
mov
lret
pushf
imul
inc
mov
fimull
mov
vunpckhps
mov
adc
iret
test
sub
push
jne
std
dec
sbb
cmp
mov
test
hlt
pop
and
mov
stos
xor
xor
mov
dec
sbb
or
or
stos
not
lahf
stos
leave
mov
fsubs
mov
push
test
and
movsb
mov
rorb
pop
push
adc
mov
dec
mov
add
out
js
loope
in
dec
data16
fstps
add
clc
nop
add
pop
sub
mov
insl
ret
mov
adc
add
mov
adc
push
inc
enter
mov
popa
xor
daa
imul
das
mov
mov
xchg
iret
adc
movsl
inc
xchg
stos
fidivs
add
jle
jge
inc
jae
outsb
stc
push
and
jae
inc
insl
fdivs
jae
aas
push
mov
adc
cltd
hlt
and
and
mov
adc
fcomip
popf
adc
mov
push
dec
sub
pop
and
xchg
sbb
and
sbb
sub
sarb
cmpsb
leave
jl
jg
das
xchg
add
lahf
mov
add
ret
aas
jl
mov
test
mov
xchg
cmp
cmp
subb
pop
dec
jmp
jmp
push
add
jbe
ljmp
mov
push
xchg
outsb
in
scas
inc
sarl
call
in
mov
sbbb
popa
mov
cmp
pusha
cmp
pusha
xchg
mov
xchg
cs
lret
adc
cld
cs
and
pop
cmp
aam
cltd
add
sub
lods
jg
insl
jge
cmpsl
into
addr16
test
stos
das
pop
insb
xor
pop
xor
insb
fs
scas
inc
cli
lcall
push
outsb
cwtl
inc
jg
and
inc
lahf
jne
cmp
mov
outsb
or
xor
jae
pop
mov
lds
cmp
push
jo
sbb
pop
data16
dec
xchg
loope
fcoml
mov
test
in
sbb
in
adc
popf
add
rolb
insl
mov
adc
jl
add
ljmp
test
scas
out
shll
arpl
inc
fwait
setne
mov
xor
push
ret
jp
je
mov
or
pusha
dec
fsubs
pop
mov
ja
enter
repnz
sbb
loopne
scas
cmp
outsl
ret
mov
imul
add
dec
repnz
repz
jg
jb
jno
dec
testl
xchg
cmpsb
push
daa
mov
bound
adc
lret
call
out
sub
xchg
sub
cwtl
ss
mov
sub
cltd
call
pop
mov
cmpb
push
in
fisubrl
aaa
fcmovnu
pminsw
fisttps
les
call
jmp
jle
jo
out
inc
aad
mov
mov
xchg
gs
jae
dec
cmp
cmp
popf
dec
cmp
movsl
pop
pushf
imul
pop
or
cmp
scas
adc
add
jp
or
aam
fistps
inc
fsub
cli
ret
jecxz
xchg
loopne
cmp
mov
mov
mov
cwtl
xor
sub
push
adc
dec
cmp
shll
int
and
pop
andl
mov
lock
xlat
xchg
popa
mov
mov
fdivl
rcrl
fstps
sbb
mov
mov
xor
cmpb
mov
mov
and
in
sub
dec
jno
mov
xchg
in
les
cmp
dec
jp
sub
iret
test
cltd
jbe
test
sbb
imul
dec
xchg
mov
decl
or
sub
pusha
dec
xor
push
mov
sub
push
sub
fadds
xchg
xor
hlt
inc
xlat
ds
mov
add
adc
jle
cmp
mov
fsubl
and
repz
icebp
or
aad
insb
div
dec
lea
les
mov
shlb
mov
fldl
loopne
in
les
lret
ret
mov
notl
dec
mov
jl
adc
sub
in
dec
xor
sbb
sbb
sub
mull
loope
test
push
jmp
and
outsl
xor
pop
rclb
xor
test
push
jg
jmp
cmpsl
in
scas
inc
stc
sub
cmp
ds
xorl
mov
cwtl
repz
aad
pop
sahf
jne
faddl
std
sbb
nop
mov
aam
iret
adc
flds
add
insl
inc
jmp
test
or
dec
loope
add
dec
ret
push
sbb
and
push
cmp
gs
in
inc
adcb
jle
push
add
jge
pop
addb
das
xchg
loop
fs
jns
xchg
xlat
aad
and
mov
sbb
subl
ljmp
pop
pop
and
push
jmp
and
add
data16
xor
lock
cmpsb
lcall
sub
imul
lods
mov
imul
pop
cmp
mov
lods
mov
dec
enter
dec
mov
test
dec
call
inc
dec
jmp
movd
movlps
sub
addr16
mul
dec
jno
pop
cld
in
sbb
mov
mov
inc
je
xlat
rcr
pop
movsb
lods
stos
mov
pop
mov
fs
jp
mov
out
shlb
cld
hlt
jecxz
dec
loopne
or
ss
popf
xchg
add
nop
mov
addl
orb
pop
fisubrl
mov
rcr
pop
push
out
push
add
pop
add
sbb
xchg
lods
aas
icebp
nop
sbb
ja
mov
cmp
ljmp
push
dec
and
ds
pop
sub
je
mov
xchg
and
shlb
dec
test
in
subb
pop
fistl
sbb
adc
loopne
cltd
xor
inc
mov
clc
pop
mov
dec
mov
inc
cltd
cmp
aaa
dec
rcrl
pop
push
and
xchg
fiaddl
xchg
and
mov
shll
mov
fdivp
subb
loop
add
fsubs
or
or
subb
jbe
inc
test
pop
sub
loopne
mov
adc
pop
add
js
sbb
cmp
mov
pop
loope
loope
pop
push
std
fcom
ljmp
pop
adc
jg
int
add
push
fsubr
sub
arpl
in
xchg
xchg
fwait
out
xchg
xor
jge
movsb
add
notb
lds
pop
sbbl
es
sbb
adc
sbb
clc
movsl
mov
inc
in
sti
push
xchg
pop
push
mov
sub
orb
cmpb
pop
in
pop
and
dec
push
ja
aas
and
int3
jmp
arpl
insl
fadds
pushf
insl
cwtl
movsl
in
int3
push
sbb
or
cmp
pop
inc
push
cmp
push
sbb
add
cmpsl
hlt
inc
aad
xor
aas
cmp
mov
jno
iret
sub
insl
push
push
pop
dec
inc
mov
in
jae
in
out
adc
stos
jmp
inc
dec
fisttps
flds
xchg
and
jnp
in
pop
push
cli
and
clc
add
fdivl
pusha
pop
cmc
cmc
cli
inc
mov
movsb
cwtl
xor
jl
insl
out
and
sub
mov
lahf
push
mov
sbbl
and
rolb
sbb
adc
or
push
jge
cmovp
ja
fidivl
shr
rcrb
push
mov
test
punpckldq
cmp
sahf
push
fdivr
jg
pop
sbb
int
pop
clc
cmp
pop
fisubrl
aaa
int3
pop
pushf
cli
push
inc
mov
mull
jno
jecxz
and
subb
adc
andb
and
scas
je
insb
xlat
daa
sbb
mov
std
pop
adc
xchg
movsb
adc
outsb
mov
cmc
sub
lret
je
shr
das
and
ja
imul
or
mov
outsl
psllq
je
inc
gs
andl
ja
ljmp
test
lret
das
ja
mov
rclb
imul
inc
je
add
ret
push
or
cmc
xchg
and
sbb
pop
test
dec
push
push
mov
sbb
sub
jno
int3
push
push
mov
push
jnp
mov
insb
add
or
adc
mov
mov
outsb
jl
fnstsw
cmpsb
lods
pop
jbe
or
adc
in
or
sbb
movsl
push
xchg
rorb
lods
pop
jbe
mov
push
loopne
xchg
pop
bound
int3
cld
or
sbb
popl
mov
fistps
cmp
pop
into
popf
pop
ds
mov
add
xchg
mov
sub
scas
add
outsl
data16
dec
xorl
xchg
je
lcall
xor
pushf
out
fwait
add
fwait
leave
mov
les
lret
stos
testb
ja
xor
enter
mov
js
push
jb
cmc
inc
inc
ja
and
mov
dec
jl
arpl
pop
adc
cli
dec
rcrl
dec
push
out
iret
repnz
inc
inc
inc
dec
stc
dec
roll
push
fs
lret
in
stos
movsl
hlt
test
stos
adcl
xor
outsl
fnstcw
arpl
dec
lahf
shll
or
popf
aaa
shl
pop
pop
adc
xor
sbb
mov
push
negl
fidivrs
mov
in
jge
sbb
sbbb
lds
arpl
das
pop
or
cmpsb
sbb
in
pop
stos
or
mov
sub
mov
add
add
adc
clc
fmull
rcrl
cld
mov
xor
mov
mov
leave
ret
ficompl
xchg
out
cli
sub
jo
sbb
enter
in
shld
loop
popa
inc
mov
xchg
clc
adc
pop
pop
pop
icebp
loopne
mov
and
mov
add
popf
xor
or
ret
lock
das
xlat
sbbb
cwtl
fnstenv
xchg
das
push
xor
or
cmp
fmuls
insb
in
pop
xchg
stc
ss
arpl
jmp
xor
imul
push
mov
jo
cmc
clc
fiaddl
mov
cmpsl
xchg
insl
mov
lods
push
pop
xor
test
test
cmp
arpl
xchg
loopne
mov
sub
aam
les
jmp
aam
stc
jne
mov
enter
lea
cmc
jno
mov
hlt
cwtl
pop
sbb
inc
jne
xchg
adc
and
notb
mov
xchg
loope
repz
je
in
fpatan
jae
sbb
dec
test
adc
cmpb
loopne
dec
in
xor
sti
adc
push
sub
pop
fwait
iret
pop
jns
mov
or
aad
jae
inc
int3
xor
movsb
mov
icebp
loope
and
fnstenv
xor
scas
pop
faddp
fwait
addr16
scas
adc
adcl
pop
or
push
fwait
daa
outsb
cmc
es
mov
mov
in
jl
in
mov
sbb
leave
xchg
and
out
mov
sbb
sbb
inc
repnz
or
xor
pop
dec
jle
mov
cli
clc
mov
dec
fimuls
xchg
out
jp
xchg
xor
mov
jae
std
cmp
dec
insb
clc
jl
cltd
rorl
in
in
fildl
xchg
cmovp
and
js
dec
int
adc
mov
jno
xchg
inc
and
inc
pop
adc
mov
adc
mov
les
enter
in
movsb
sub
loop
aaa
in
jbe
out
stos
and
popf
pop
fsubr
lahf
push
add
pop
inc
cmpsb
dec
loop
mov
lods
and
or
inc
dec
cmp
int3
aad
mov
or
test
dec
add
push
cmp
jg
mov
push
xor
pusha
xor
sbb
dec
icebp
orb
mov
fsubr
inc
sub
sbb
pop
in
call
lcall
sbbl
lcall
adc
popf
mov
jle
mov
mov
leave
adc
mov
jae
andb
jnp
lds
mov
out
in
cs
cli
movsl
adc
adc
jno
clc
and
pop
adc
shlb
movsl
movsb
mov
dec
enter
mov
adc
sti
cmp
add
jle
ficoml
scas
stos
icebp
in
mov
lea
lods
adc
lcall
repz
repz
stos
adc
mov
inc
fdivs
mov
cmp
push
fdiv
xchg
cmp
popa
insl
je
pop
or
mov
sub
xchg
sbb
xchg
inc
jg
xchg
cwtl
fwait
mov
mov
mov
mov
push
push
sub
bound
cmp
xchg
inc
add
loopne
mov
push
bound
mov
movsb
es
or
cld
mov
callw
shll
jne
sub
enter
mov
aas
test
inc
add
mov
clc
jo
lahf
mov
mov
mov
subl
je
add
cmp
jg
cmpsl
jns
cmc
adc
lods
aaa
mov
inc
nop
pusha
or
mov
pop
adc
jmp
out
mov
sti
test
pop
pop
add
mov
pop
loop
jns
fsubp
jmp
xor
dec
mov
cmp
pop
pop
rolb
inc
pop
cmc
mov
adc
out
and
add
add
adc
adc
test
lock
leave
jne
dec
aam
stos
jmp
orl
test
rol
nop
pop
rol
jle
sub
or
jmp
cmp
arpl
out
or
es
fldl
adc
adc
xlat
pop
insb
cmp
pop
add
out
lea
pop
clc
fimull
out
push
push
in
daa
and
notl
or
cmpsb
pusha
pop
in
sbb
insl
das
sub
pop
mov
lods
aaa
dec
sbb
aas
dec
inc
mov
cmpsb
pop
and
jmp
sub
push
add
aam
jp
mov
cmp
dec
push
adc
mov
jo
es
lock
jle
push
loope
in
fsubrl
jnp
not
fbstp
inc
push
idivl
add
cs
xchg
pop
pop
pop
mov
push
mov
ljmp
mov
cmp
xor
jg
cmp
xchg
dec
cli
inc
xor
or
xchg
pop
pop
jno
fstps
adc
cmp
add
fwait
inc
jno
inc
rorb
xrstors
rcll
dec
pop
leave
leave
rcl
pop
jnp
movsl
insb
inc
nop
pop
movb
push
mov
mov
jle
mov
mov
jne
sub
dec
sub
sub
cwtl
xchg
aam
rcr
cmpsl
xorb
aas
out
sbbl
scas
and
mov
ss
divb
fists
adc
rolb
nop
adc
insl
or
testb
std
pop
push
sti
into
pop
and
lods
imul
mov
sub
sbbb
and
ja
sahf
pop
add
outsb
pushf
sbb
std
mov
jge
lock
push
and
mov
call
adc
cld
adc
rclb
lcall
push
ds
push
fistl
mov
push
pop
push
test
subb
in
lods
push
ljmp
jnp
pop
add
rcl
jp
xchg
jbe
push
add
cli
mov
insl
xchg
js
or
les
mov
push
jbe
add
outsl
jnp
out
ss
jge
jne
push
mov
jle
jnp
dec
imul
repz
mov
shl
inc
pop
arpl
dec
pop
pop
pushl
pop
repnz
jnp
adc
jne
xchg
sbb
xchg
adc
pop
lds
enter
jne
out
add
sbb
inc
pop
das
mov
mov
mov
mov
sti
pop
into
mov
cli
pop
pop
jne
outsb
jmp
xlat
mov
pop
lret
pop
adc
lcall
testb
dec
mov
mov
cmp
jl
call
inc
lahf
cli
jnp
dec
xorl
dec
loopne
sarb
rorb
inc
sub
cmp
jb
pop
sbb
push
lret
sbb
jno
lahf
inc
push
call
lret
cmc
sbb
and
pavgw
gs
test
dec
repz
or
adc
jmp
fwait
rcrl
mov
roll
imull
mov
mov
adc
inc
mov
in
mul
push
mov
jbe
or
sbb
les
fsts
mov
aaa
insl
mov
or
fwait
sub
jl
movsb
sbb
movb
sbb
pushf
test
test
adc
mov
cmp
jmp
inc
scas
xor
in
jo
subl
adc
pop
pushl
push
icebp
mov
jecxz
jecxz
in
iret
iret
dec
jg
mov
mov
jge
daa
jnp
mov
cmp
and
xlat
mov
shll
test
mov
aam
aaa
lahf
test
lods
outsb
pop
pusha
in
mov
int3
les
mov
cmp
fldenv
dec
mov
inc
cld
add
cld
cmpsl
cwtl
std
jns
imul
aaa
sub
ss
sub
ljmp
popa
shl
dec
xor
push
and
mov
pop
loopne
mov
pop
cmc
ss
mov
push
adc
test
sub
adc
insb
pop
add
pop
sarl
push
pushf
aam
fidivl
out
push
cmp
and
jbe
addr16
jge
dec
shrl
lret
pop
push
xor
mov
js
test
outsb
ss
icebp
aaa
jne
mov
and
mov
mov
xchg
mov
out
daa
jno
mov
pop
and
pop
push
js
dec
add
repz
testb
xchg
or
push
dec
lret
faddp
fcmovnbe
adc
lret
fcomps
dec
mov
sub
xchg
sbb
fs
sub
mov
mov
cmp
sub
jle
fidivl
mov
add
sub
enter
cmpsb
orb
push
cmpsl
mov
pop
sahf
ds
xchg
cmp
pop
in
lahf
inc
dec
mov
fwait
pop
ljmp
fs
sbb
stos
lret
movsb
cltd
push
icebp
cmp
icebp
cmpsb
fstps
and
inc
lret
cs
xor
mov
jecxz
fwait
add
jne
mov
stc
pop
pop
fnstcw
filds
xchg
aaa
pop
adc
iret
or
dec
adc
cmp
mov
xor
push
aaa
push
int3
jge
push
je
sub
icebp
mov
dec
pop
ret
sbb
dec
mov
sub
inc
das
imul
adcl
sarb
or
in
int
jnp
inc
stos
leave
imul
jle
fstpt
pushf
push
and
mov
and
insb
sbb
imul
insl
cwtl
ret
clc
and
sbb
mov
push
arpl
cmp
out
mov
push
mov
cmp
mov
fwait
mov
fwait
jno
js
rorb
lods
cmp
loope
cmc
stc
stc
daa
jae
jg
sahf
sub
in
rorl
dec
sub
jecxz
js
adc
adc
mov
dec
cwtl
dec
ror
lcall
or
pop
ds
shlb
test
sub
test
std
icebp
mov
cli
cltd
cmp
popf
cmpsb
fcompl
jge
icebp
fiaddl
in
sti
iret
movsb
cwtl
insb
jnp
dec
in
jmp
into
or
xchg
xor
add
inc
push
negl
inc
jo
and
inc
dec
inc
push
and
cli
scas
les
sbb
repz
aam
jb
mov
xchg
cmpb
arpl
sbb
cmpsl
push
aaa
fstpl
jg
xor
into
dec
dec
and
mov
add
push
and
icebp
push
mov
daa
rol
pusha
mov
push
xor
jno
xchg
mov
push
sbb
mov
in
lods
pop
ret
xchg
int3
sub
push
out
mov
cmp
lret
call
xchg
pushf
mov
inc
fnsave
cltd
inc
sub
jne
mov
repz
cmp
pop
mov
jmp
jns
imul
cmp
ja
repnz
adc
in
sbb
mov
insb
mov
jbe
dec
adc
or
xchg
inc
je
out
ja
pop
std
negl
pop
and
or
fcomps
data16
xchg
inc
pop
mov
inc
jns
jg
bound
das
in
add
sub
pushl
sbb
lods
xlat
mov
cmp
sbb
test
mov
in
cmc
add
or
xchg
lea
les
or
call
add
inc
mov
add
bound
xorl
std
test
xor
push
mov
fadds
rcrb
pushf
mov
jg
mov
int
sbb
adc
fadds
sub
and
and
or
push
push
fimuls
cmpl
pop
nop
mov
iret
sbb
pop
fcompl
data16
mov
lret
enter
lahf
push
aad
jle
stos
mov
hlt
neg
mov
sbb
shll
loop
xor
pusha
leave
or
xor
mov
fnstcw
aad
loop
sbb
lds
push
jmp
cli
stc
pop
rcrb
pop
outsb
scas
nop
pop
add
fisubs
xchg
fdivrs
cmp
lret
in
call
add
cmp
mov
scas
out
pop
in
mov
sti
xlat
and
push
sbb
ret
and
lds
cmp
mov
daa
test
dec
push
sbb
lds
call
shl
cmp
ds
popf
mov
daa
jbe
loope
div
jnp
push
stos
pushf
fstp
scas
fisttpl
mov
lods
push
out
mov
fadds
flds
lods
outsb
adc
dec
ror
arpl
mov
ja
xor
pushl
aaa
xor
icebp
jle
lcall
out
daa
jae
sbb
and
mov
mov
xrelease
or
adc
push
call
stos
cmp
pop
test
mov
cs
mov
lods
lock
lods
dec
jmp
mov
cmp
int3
lods
leave
jno
mov
imul
outsl
and
push
jl
mov
jnp
cwtl
test
stos
jle
rcl
and
pop
scas
fildl
pop
sub
fstps
in
scas
mov
sbb
cmpsb
ss
dec
cwtl
ss
fcmovnb
es
sti
or
jo
mov
lock
repnz
ret
arpl
xor
outsl
adc
adc
pop
pop
movsl
js
mov
cld
js
xor
aas
notl
add
loope
mov
sub
test
jle
or
notb
xchg
int
ret
lret
fidivl
sub
hlt
mov
dec
rorb
inc
sbb
popa
pop
inc
inc
adc
mov
inc
das
stos
mov
adc
sub
xor
cmp
xchg
imul
aas
negb
sub
in
and
jae
push
inc
lods
or
adc
mull
mov
dec
loopne
and
push
xchg
xor
mov
push
pusha
mov
adc
cld
pop
mov
sbb
into
roll
mov
arpl
mov
fwait
mov
lcall
xchg
test
adc
mov
enter
adc
sub
movsl
lods
les
das
test
xchg
jl
inc
adc
fwait
out
inc
or
or
or
xorb
inc
push
xor
std
test
mov
jmp
push
aad
sbb
icebp
cmpsb
push
xor
imul
out
sbb
sbb
in
or
stos
mov
cld
mov
in
fisttpll
sub
pusha
jle
inc
in
adc
jp
sub
rcll
mov
sbbb
insl
xchg
mov
nop
orl
stos
xchg
xor
out
lds
push
outsb
add
cmp
addr16
jnp
addr16
movsb
pop
mov
jmp
inc
jnp
iret
out
testb
loopne
fsubrs
add
pop
mov
mov
repnz
mov
cli
fwait
jne
movsl
or
jp
in
movsl
iret
xchg
add
inc
into
notl
add
push
pusha
outsb
repz
mov
out
mov
or
xchg
dec
testb
inc
mov
mov
sti
dec
sbb
xchg
int3
lods
xchg
ss
gs
inc
leave
mov
xor
das
xorb
sbb
xor
jo
fbstp
or
mov
sub
nop
loopne
nop
dec
xchg
loope
movb
fcmovb
mov
pop
jle
in
mov
push
lret
rolb
adc
out
xchg
push
xor
push
lea
adc
xchg
in
push
cld
aaa
push
push
xor
or
mov
pop
inc
fidivl
xchg
inc
adc
xor
lahf
cmpsl
mov
xchg
stc
mov
into
jmp
sbb
sbb
enter
push
sub
jnp
pop
cmp
mov
sub
xor
push
or
in
popf
adcb
ljmp
les
xchg
shl
jo
cmpsb
push
mov
cmp
jae
ljmp
je
add
cmpsb
mov
pop
int
nop
fistps
stc
lcall
scas
push
adc
jp
int
xchg
loopne
fimuls
adc
cs
daa
nop
arpl
push
jl
int
xchg
sbb
lahf
into
negb
xor
je
fisttpll
test
and
lcall
in
pop
or
sar
stos
iret
add
xor
jmp
xor
push
fiaddl
inc
jo
jg
cmpsb
lods
push
bndstx
add
jl
or
out
outsb
mov
test
sti
cld
mov
xchg
imul
popf
je
add
dec
dec
and
lock
or
push
add
pusha
lods
outsb
and
mov
xor
mov
loope
cmpb
or
or
xor
xlat
add
pop
sub
arpl
sub
fsubl
and
adc
cmp
cmpsl
shlb
sbbl
pop
lds
mov
cs
scas
je
pop
mov
xchg
mov
cmp
fisubl
fldenv
clc
stos
aaa
xchg
or
pop
pop
pop
push
inc
inc
inc
jle
jg
fidivrl
outsl
outsl
or
inc
popf
bnd
push
dec
shll
mov
mov
dec
cmc
or
inc
sbb
adc
test
jae
mov
sar
in
mov
push
mov
cmp
pop
mov
in
mov
sub
lods
xchg
inc
notb
lret
mov
xchg
loope
pop
arpl
jb
cmp
js
mov
adc
jp
mov
mull
adc
jo
push
inc
push
mov
dec
pushf
mov
jbe
adc
cmp
push
and
cmp
mov
dec
xchg
in
adcb
andb
jb
dec
xor
lods
fisttps
dec
in
cmp
adc
push
in
cmp
es
leave
loopne
sahf
imul
inc
add
pop
shrl
shrl
or
sub
mov
mov
aam
in
dec
xor
popa
outsl
or
mov
loop
push
in
add
pop
sbb
or
adc
rolb
dec
int
fwait
mov
cltd
dec
add
mov
dec
bound
les
pop
mov
add
ret
std
cmp
mov
pop
out
imulb
sbb
sbb
lea
xor
jmp
fiaddl
push
lods
push
dec
and
rorl
jo
inc
out
mov
pop
sbb
popa
stos
xchg
sub
adc
mov
adc
jge
out
inc
les
out
and
jge
dec
ret
and
push
push
inc
push
jne
dec
sar
popf
orl
rolb
xchg
lods
cltd
sarl
inc
xchg
sbb
sbb
std
dec
lcall
movsl
js
jge
inc
repz
stos
mov
addr16
lods
add
cmp
mov
jg
dec
cmpsl
mov
dec
in
xchg
push
daa
and
xchg
mov
ret
pop
inc
shld
pop
stc
push
sti
rorb
int3
lds
cltd
js
jle
pop
test
add
rorb
cmp
pushf
inc
xchg
int3
sbb
shrl
or
push
arpl
into
popa
push
lcall
mov
jge
out
sbb
cli
mov
std
inc
bnd
lret
cmpsl
sbb
mov
or
mov
insb
mov
ja
daa
jo
push
jge
stos
lcall
xlat
clc
loopne
subb
ds
pop
push
js
pop
and
and
mov
repnz
daa
cmp
adc
mov
mov
inc
xor
xchg
inc
daa
lds
js
cmpsl
dec
sahf
xor
aam
outsb
mov
arpl
sbb
rolb
mov
pop
mov
sub
in
cli
in
pop
add
mov
mov
push
in
mov
xlat
scas
mov
mov
scas
dec
or
enter
xchg
and
or
test
icebp
fadds
jmp
fs
and
mov
or
lret
mov
hlt
mov
mov
daa
les
jge
shll
sub
push
arpl
sahf
or
cmp
andl
lcall
inc
in
popf
loop
int
mov
sbb
push
mov
outsb
fwait
inc
push
fidivrl
call
ds
sbb
push
popa
push
pusha
mov
dec
cmc
movsl
ja
mov
in
mov
fidivrl
and
fsub
outsl
inc
mov
icebp
add
mov
or
adc
rorl
xor
aas
test
arpl
mov
add
inc
cld
cli
negl
adc
push
adcl
push
inc
xchg
mov
std
xchg
cmc
mulb
xchg
xchg
xor
out
dec
cmc
inc
dec
mov
pop
fmul
adc
push
add
adc
lret
pushf
add
dec
push
pop
push
xor
or
aas
aas
mov
fwait
adc
lds
lret
into
adc
mov
add
cmpsw
aam
fldcw
je
mov
sub
mov
mov
xchg
js
test
aam
xor
rolb
jae
popl
inc
mov
add
push
repz
dec
adc
mov
dec
push
repz
mov
pop
xchg
test
pop
test
ficomps
mov
bound
adc
lea
call
and
inc
jbe
pop
mov
jbe
pushf
aaa
sbb
lea
hlt
push
and
mov
shll
add
cmpsb
mov
test
xchg
jmp
ja
add
dec
pop
jne
cmp
std
in
mov
cmp
or
jbe
xchg
dec
jl
xor
in
sbb
std
pop
aad
jle
dec
daa
mov
pop
mov
mov
mov
jge
stc
iret
movsb
adcl
mov
add
mov
movsb
les
mov
sub
data16
movsb
ficompl
test
pop
jmp
add
mov
mov
scas
sbb
pushf
fcompl
add
mov
adc
inc
xchg
lcall
daa
xchg
pop
push
mov
xchg
sarb
sub
jg
call
ja
pop
shrb
and
int
dec
sub
and
jmp
jmp
cmp
dec
ljmp
enter
add
jb
mov
ficoms
test
push
mov
scas
sub
lock
lock
hlt
mov
int
clc
dec
xchg
ljmp
mov
or
mov
adcl
and
stos
push
push
pop
and
sbb
mov
loop
cmp
insb
int
cli
jno
sbb
mov
inc
enter
iret
mov
filds
cmp
inc
mov
je
mov
jnp
lods
sbbl
jb
inc
xchg
jl
enter
loopne
mov
cmp
cmpl
cmp
nop
cwtl
add
je
adc
cmp
cwtl
dec
fstl
out
enter
dec
mov
lods
jmp
pushf
push
ja
arpl
je
sbb
loop
push
aam
mov
frstor
aam
call
and
mov
cmp
mulb
add
add
popf
and
push
sub
int
loopne
xor
andl
fldenv
in
sub
fldcw
aad
shll
shll
cmpb
push
sub
popa
cmpsl
mov
shr
jb
out
xchg
xchg
test
fcmovu
ljmp
lahf
scas
test
mov
cmp
pusha
ljmp
sub
xorl
test
outsl
in
out
out
pop
xchg
push
mov
mov
mov
popa
jle
pop
xchg
leave
pop
iret
mov
sbb
lods
mov
bndstx
adc
cmp
or
jle
addr16
mov
fidivrs
or
dec
push
cmp
hlt
icebp
pop
jns
xor
cmp
daa
or
movsb
aaa
mov
xchg
mov
jle
jmp
push
mov
push
mov
mov
cmpsb
pushf
aad
push
dec
cwtl
pop
aas
cltd
xor
fidivl
fisubs
lcall
insl
mov
or
mov
mov
sbb
pop
neg
mov
imul
xchg
adc
jno
xorl
iret
dec
outsb
push
push
dec
adc
mov
cltd
sbb
dec
pop
outsb
xchg
cli
aaa
ja
adc
repnz
adcb
xor
sbb
mov
xor
repz
shl
or
and
dec
sbb
push
fsts
js
scas
adc
inc
lret
call
loop
dec
loop
dec
bound
cmc
mov
dec
imul
js
sbb
lock
xchg
sbb
pushf
jl
xchg
cmc
or
or
ja
xor
daa
inc
test
in
inc
sub
scas
mov
in
leave
mov
pop
popf
and
ret
cmpsb
out
pop
pushf
xchg
and
mov
push
sbb
mov
mov
mov
lret
xchg
xlat
movb
imul
jl
enter
imul
mov
lret
dec
call
push
xchg
and
jb
loopne
push
jge
outsl
cmp
jp
leave
clc
daa
add
pop
cmp
addr16
bound
xor
push
fwait
push
idivl
pop
lcall
cmpsl
ljmp
into
orb
pusha
sbb
fwait
inc
jb
das
sbb
das
sti
out
fdivrl
in
lods
in
add
mov
addr16
xchg
xchg
cmpsl
stos
jmp
lea
iret
stc
sbb
fst
bound
mov
pop
mov
setg
adc
jae
test
popf
bound
pop
pop
or
lret
gs
mov
cld
pop
repz
xchg
sub
pop
and
leave
clc
xchg
sbb
shl
push
dec
adc
inc
dec
stc
mov
pushf
mov
xor
jl
push
mov
in
add
sbb
or
lahf
adc
xchg
inc
js
subb
ret
in
call
cmpsb
shlb
push
dec
jno
dec
cs
mov
mov
sub
adc
push
mov
roll
stc
cld
add
mov
dec
push
test
scas
fstpt
xor
cltd
ret
int
mov
xor
arpl
pop
in
jae
fdivrp
sub
and
add
jg
and
mov
lahf
aam
and
lock
xor
icebp
sbb
mov
cmp
cld
pop
xchg
ljmp
js
loopne
shl
mul
sbbl
xchg
xor
insl
mov
popf
stc
into
xor
jnp
inc
pop
dec
cltd
lds
test
dec
mov
mov
inc
sub
mov
seta
ja
lret
fstpl
xchg
jae
and
sbb
cmp
jmp
cmp
or
mov
out
out
adc
cmp
jmp
cmpsw
add
lea
push
clc
cmp
out
pusha
notb
mov
xchg
jb
cmp
inc
jno
imulb
push
adc
jl
out
mov
or
sbb
shl
adc
mov
fimuls
outsl
in
repnz
push
push
out
mov
push
rol
adc
xchg
imul
add
push
dec
jnp
fwait
xchg
inc
dec
test
mov
cli
xlat
jecxz
add
out
mov
xor
push
cmpsb
inc
imul
mov
jl
aad
into
sbb
ret
inc
sub
push
enter
sti
arpl
xlat
bound
jg
push
mul
shl
mov
movsb
mov
jb
inc
movl
cltd
das
iret
inc
cli
add
mov
xor
hlt
aam
fisubs
inc
lahf
mov
adc
xor
lds
loope
lds
nop
mov
shlb
arpl
rcrb
or
and
scas
mov
lea
scas
out
xor
sub
fs
add
stc
iret
push
faddl
mov
rorl
sti
dec
ret
xor
cmpsb
mov
inc
jmp
lret
inc
mov
add
sub
xchg
add
addr16
push
call
cltd
lahf
std
data16
orb
xor
inc
sub
call
inc
mov
jae
fldl
dec
add
lock
iret
repnz
lret
push
sbb
push
fists
sahf
movsb
push
push
stc
sbb
jmp
mov
pop
fisttps
rclb
xor
outsb
mov
rcll
rorl
es
enter
jmp
fsubrs
add
pop
je
mov
arpl
dec
aaa
fdivs
mov
leave
lcall
cli
pop
xchg
loopne
filds
leave
sbb
out
outsb
pcmpeqb
dec
lock
or
cwtl
mov
cs
pop
jae
cld
mov
jmp
inc
dec
jns
sub
stos
jo
cmpsl
sbb
popa
mov
push
cltd
lods
rcll
les
xor
scas
or
dec
clc
les
add
fsts
test
inc
mov
jmp
cs
inc
mov
dec
fadd
xor
and
lds
lret
pop
aaa
cltd
and
mov
sbb
add
es
dec
xchg
pop
lea
push
inc
xor
pop
xchg
dec
jecxz
cwtl
fisubrs
xor
inc
movsb
rcrl
jge
xor
cmpsb
ret
aad
cmp
cmpsl
xor
fildll
and
and
jne
push
insb
jg
lea
shlb
xor
loopne
jne
icebp
xchg
or
cmp
or
dec
rclb
cltd
lahf
int3
dec
in
mov
aas
jmp
jo
sbb
int
mov
sub
mov
out
stc
test
loop
jecxz
call
sbb
std
imul
cli
hlt
icebp
fisubl
cwtl
mov
mov
and
pop
mov
adc
stos
adc
or
rcr
ljmp
pop
mov
imul
mov
daa
jge
mov
dec
fldz
mov
cmp
dec
cmp
fldenv
xor
sub
pop
xchg
fwait
sti
lds
jl
mov
push
mov
es
push
mov
loope
xchg
pop
lds
pop
popf
jae
and
std
mov
xchg
mov
sbb
pop
xor
int3
dec
jnp
cwtl
pushf
ret
jb
loope
andl
subl
cli
ret
inc
nop
mov
pop
sahf
lock
add
adc
out
mov
ds
sub
add
cmp
iret
enter
fnstcw
or
iret
aam
push
jg
mov
jbe
divl
pop
insl
scas
out
ds
and
cmp
in
nop
pop
push
leave
jo
mov
mov
cmp
test
sti
enter
adc
xor
push
mov
ret
sahf
jmp
or
sahf
into
push
jae
xchg
adc
je
mov
rcll
add
push
jae
mov
jne
shll
mov
ljmp
inc
dec
jbe
out
dec
test
xlat
xlat
cmp
orl
in
sub
adc
aad
mov
dec
jl
adc
and
push
loopne
or
inc
jns
jmp
ret
mov
ficoms
out
add
inc
jb
cmpsb
adc
mull
xchg
inc
out
push
jg
mov
and
sbb
mov
sub
mov
push
jb
out
pop
add
jmp
push
add
out
cmpsl
dec
lods
mov
cmc
or
fidivl
and
inc
dec
bound
aaa
icebp
or
sbb
sbb
dec
andb
mov
popf
std
add
cld
gs
push
push
mov
xchg
insb
nop
sbbl
sub
push
jmp
mov
sbb
mov
push
inc
pop
pop
mov
lcall
outsb
mov
arpl
jg
sbb
add
fwait
adc
and
xor
xchg
dec
mov
jbe
shll
or
repnz
dec
mov
xorl
mov
jno
sbb
push
shlb
popa
orb
jmp
dec
push
mov
lods
xchg
leave
addr16
sbb
xor
mov
or
fs
inc
andl
mov
ret
mov
adc
test
popa
push
xchg
jle
stos
add
rcrb
cmpb
cmp
in
pop
fs
stc
js
dec
pop
clc
icebp
ret
cmp
mov
mov
mov
mov
fxam
sub
pusha
nop
cmpsl
and
aas
and
push
mov
push
pop
adc
cltd
mov
or
push
lock
xchg
dec
inc
imul
push
lods
daa
fistpl
shll
popf
jmp
adc
xchg
cltd
dec
pop
fs
mov
and
mov
adc
movsb
or
inc
sbb
cwtl
sub
dec
jg
adc
sub
dec
pop
and
sbb
jae
xchg
inc
in
int
popl
sbb
xor
push
mov
int
push
lea
xor
std
iret
lds
aad
push
fisttpl
mov
dec
adc
jp
inc
or
push
imul
dec
leave
sub
push
sarb
and
lcall
sub
mov
mov
sbb
xchg
mov
loopne
loop
push
push
adc
add
push
stos
inc
fists
or
dec
cltd
mov
mov
xchg
mov
add
cmp
lahf
shr
and
and
les
mov
sub
jl
add
cwtl
loop
or
mov
jno
cmp
xor
test
lret
dec
out
aam
push
cltd
jge
mov
adc
gs
xor
fs
vcvtsd2ss
stc
push
sbb
add
push
aad
jg
mov
jae
js
dec
enter
xor
cmp
test
adc
pop
popa
xchg
mov
cmp
test
mov
xchg
mov
inc
cs
cmp
cmpsl
sub
jnp
push
jle
jmp
xor
fsubr
dec
popa
ss
mov
mov
sub
push
aam
mov
and
pop
mov
or
dec
mov
xor
and
dec
fnsetpm(287
adc
outsb
cmc
xchg
xorb
add
xchg
sbb
ja
insb
lcall
addb
aas
idivl
mov
fcmovnu
sbbl
fwait
dec
std
lahf
cmpsl
cs
subb
push
sub
xchg
mov
sbb
pop
ret
xchg
insl
add
pop
les
jb
sbb
je
pop
mov
jl
adc
imul
pop
dec
fidivs
daa
fldl
mov
lret
xor
sbb
cwtl
test
cs
jmp
inc
aaa
fcoml
push
mov
cmpsl
mov
sub
fiadds
mov
mov
cli
sub
mov
add
test
shlb
mov
xchg
mov
leave
add
rcr
cmpsb
jb
je
je
push
mov
bound
imul
jnp
cltd
stos
insl
imull
outsb
movsb
in
push
adc
xchg
xchg
jmp
fdivrs
movsl
iret
mov
fistpll
aas
and
loope
xchg
aaa
adc
mov
xor
cs
dec
xor
xlat
cmp
and
cmp
push
push
push
ret
mov
data16
iret
inc
cs
dec
movsl
pop
push
fnstenv
xchg
sub
mov
or
push
fcompl
mov
pop
fdivrs
ljmp
pop
out
bound
add
push
inc
and
push
or
sbb
cmp
iret
in
xchg
mov
mov
stos
cli
mov
push
sarl
lds
inc
mov
lds
xchg
add
enter
outsb
cs
call
and
leave
es
jnp
repnz
shrb
ret
mov
adc
subl
push
pop
rorb
dec
std
mov
lahf
andb
das
daa
mov
sahf
adc
xlat
mov
adc
jne
mov
dec
sti
jae
mov
push
jno
hlt
xor
shrl
into
popf
lret
push
xchg
jg
or
xor
gs
mov
and
jbe
jo
cmp
icebp
cli
pop
add
pushf
xchg
rorl
xchg
xchg
out
in
notb
ds
into
inc
dec
jp
cmp
fiadds
shrb
inc
add
jmp
sti
mov
push
fsubr
xor
inc
jns
aad
in
cmp
pop
jae
cmpsl
push
stc
adc
jae
hlt
sbb
call
repz
mul
jmp
mov
or
and
ficompl
pop
add
inc
lea
nop
mov
jle
pcmpeqw
push
int3
popf
mov
mov
sbb
test
xor
adc
jecxz
ret
es
xchg
jmp
xchg
cmpsl
cmp
adc
icebp
test
insl
movsb
add
inc
and
enter
mov
sbb
or
fidivs
mov
rclb
pop
and
popa
push
adc
out
pushf
pop
fisubs
inc
or
jmp
fiaddl
xchg
cld
mov
ret
xor
ss
sub
out
je
in
and
push
addb
xchg
das
push
cmpsl
pop
jmp
mov
ret
rorb
dec
xchg
or
stc
in
dec
scas
lods
push
xor
test
xor
dec
inc
jge
into
sub
xor
cmp
xchg
andb
cmpsb
sbb
test
repnz
js
enter
cmp
xlat
xor
enter
xchg
pop
lock
sti
cmp
pop
sub
fwait
add
mov
cs
jle
subb
pmullw
adc
stos
mov
cld
mov
xchg
fwait
add
and
mov
fnstsw
aas
xchg
in
mov
inc
mov
xor
je
mov
dec
loop
ds
inc
mov
sub
sub
push
into
jmp
adc
or
pop
mov
into
sti
stos
push
cmp
std
scas
mov
out
mov
pop
cwtd
mov
insb
mov
inc
test
cmp
xchg
lcall
addr16
sbb
test
movsb
pusha
out
cwtl
rorl
cltd
push
pop
not
outsl
mov
cmc
imul
sbb
imulb
sar
mov
stos
push
mov
jge
xor
in
push
test
pop
fnstenv
pop
xor
insl
ljmp
out
xchg
mov
nop
out
sub
shr
sbb
shlb
add
mov
add
iret
out
cwtl
loope
aam
push
leave
mov
mov
cmpb
shll
in
ljmp
xor
pusha
jns
add
cmpsl
and
or
pop
cmp
xor
loopne
andb
mov
pop
lea
test
adc
or
xor
pop
mov
cmpsl
mov
hlt
out
sub
xor
nop
sbb
stos
cmp
xchg
xor
jbe
movsl
xor
aam
mov
xchg
inc
stc
xor
cmp
mov
in
out
lods
pop
dec
roll
hlt
daa
insb
xor
lds
arpl
mov
pop
mov
mov
imul
pusha
sbb
shl
mov
mov
aad
lea
or
cmpsl
fistps
jo
sbb
lret
inc
pop
add
ljmp
xor
push
pop
ds
lods
insl
das
dec
addb
mov
outsl
cs
xchg
sbb
sbb
sbb
sbb
stc
cmp
cli
and
jns
xchg
mov
jbe
lods
fldt
dec
lret
stos
cmp
push
and
cmp
or
mov
mov
movl
push
cld
das
rcll
push
mov
cltd
jg
cwtl
dec
xor
ljmp
adc
movsb
push
mov
mov
andb
sahf
aad
mov
adcb
loopne
scas
dec
push
sub
jo
mov
jge
pop
pusha
shll
iret
lds
pop
jae
push
loopne
int3
rep
adc
pop
out
dec
sub
sub
int3
add
mov
in
xor
idivb
sarl
pop
fdivl
push
adc
insl
mov
cmpsl
sub
and
loopne
and
scas
cmp
mov
into
pop
rcrl
jb
and
ficoml
imul
jg
test
push
xor
int
add
mov
mov
push
push
ss
fiadds
fcmove
xchg
decl
push
adc
outsb
cmp
and
push
xor
jecxz
and
iret
jp
mov
repz
jno
push
cli
push
out
scas
loop
outsb
pop
mov
push
sbb
pop
pop
sub
fdivrl
dec
pop
xor
outsb
aas
stc
lret
mov
std
lahf
not
out
ljmp
mov
lods
cmp
or
cld
bound
int
cmc
jae
cmp
mov
add
xchg
mov
adc
dec
mov
mov
repz
mov
cmp
pusha
test
xchg
inc
cmp
outsb
jg
cwtl
xchg
xor
mov
inc
cld
test
lods
int3
popa
pusha
add
mov
jo
jno
inc
sbb
movsl
test
push
sti
jae
mov
aas
jle
or
adc
and
jmp
xchg
cmp
insb
inc
mov
sub
pop
lock
mov
std
or
xorb
dec
jmp
xlat
inc
xor
nop
xchg
push
repnz
mov
or
jecxz
pop
icebp
shll
bound
inc
push
out
push
cmpsb
sub
inc
inc
or
push
daa
cmp
xchg
popf
in
lcall
jno
fsincos
pop
add
ss
mov
cmpsb
nop
push
inc
cmp
scas
insl
xor
gs
add
sarl
les
stc
jno
push
adc
or
pop
nop
inc
mov
fcomps
jo
rep
xchg
sub
xor
in
mov
iret
mov
hlt
jnp
jecxz
jne
push
jmp
stc
test
xor
inc
dec
and
int
inc
loop
or
mov
jnp
aam
idivl
sbb
movsb
add
dec
push
dec
dec
cmp
pop
out
sbb
jbe
or
lea
mov
jnp
cmp
pushf
fwait
in
jp
es
or
addr16
repnz
hlt
sbb
popa
leave
xchg
sbb
das
mov
je
mov
pushf
ss
shr
xorl
arpl
les
jno
sub
loopne
lea
lods
jbe
cwtl
add
leave
stos
outsl
fnsave
aas
rcrl
sar
sbb
jb
testl
sti
xor
scas
insb
movsb
xor
sub
mov
aas
jl
lods
xchg
push
pop
fldl
das
stos
into
es
mov
scas
cmpb
xchg
es
lods
js
mov
sub
cwtl
mov
mov
sub
mov
mov
fadds
cmpsb
mov
or
aam
sub
rorb
ljmp
jle
push
fistpl
imul
bound
inc
xchg
je
stos
stos
sarb
maskmovq
mull
negb
mov
mov
out
inc
xchg
mov
sub
jns
repnz
lret
dec
cmp
xchg
iret
pop
mov
sbb
inc
or
popf
mov
fstpt
pop
das
fs
push
mov
jp
stc
mov
mov
stos
jae
stos
push
cld
aam
mov
in
inc
inc
scas
cmc
push
xchg
popa
add
push
fcoml
mov
add
jbe
or
and
inc
jg
test
mov
jbe
arpl
sub
mov
sbb
mov
xor
xor
stos
enter
or
add
insl
pop
sbb
dec
loop
sub
mov
sbb
sbb
in
add
mov
mov
cmp
xlat
bound
sbb
mov
pop
adc
movsl
negb
dec
sub
fcmovnbe
test
jns
inc
xchg
int3
dec
js
pop
iret
sbb
test
fildl
lds
jae
pushf
andl
mov
pop
imul
push
mov
cs
cld
dec
pop
and
mov
cmpsb
insl
dec
out
cmpsb
inc
xchg
xchg
xchg
jl
mov
arpl
sbbl
loop
lahf
lcall
lods
rolb
lea
add
sub
push
mov
xor
mov
lea
dec
pop
rcrl
push
xor
popf
pop
mov
rol
push
adc
add
arpl
mov
cmp
xor
adc
scas
cmpb
mov
pusha
push
in
inc
leave
cmc
fdivrs
cwtl
or
sbb
imul
je
mov
cli
jge
pop
lock
pop
test
xchg
in
lret
rol
inc
dec
je
aad
ja
stos
sbb
lret
lods
pop
cli
test
push
leave
das
nop
pusha
jno
imul
lods
pop
in
push
sub
xchg
adc
les
mov
sub
mov
cmp
stos
cmp
push
out
jmp
sub
pushf
lcall
ud0
stos
int3
fwait
xor
ds
int
or
jle
inc
xchg
dec
mov
mov
loope
cmp
rcrb
cli
mov
scas
fdivl
je
movsl
xor
ret
cltd
xchg
add
imul
mov
jo
fcom
iret
lods
movsl
lcall
mov
cmpl
cmpsb
push
sub
mov
sub
decl
adc
push
add
scas
ss
mov
and
jnp
shr
push
test
add
out
xchg
loope
xchg
ficompl
fisubrs
movsl
or
cmp
push
out
aad
rol
add
mov
ss
cmp
or
sbb
enterw
mov
cltd
rcrl
fiadds
and
mov
pop
sar
outsl
fsubrs
pop
and
lahf
sarb
pop
cmp
aas
adc
push
stc
mov
fldl2e
fnstenv
bound
int3
pop
lahf
inc
inc
aad
jbe
push
mov
stos
mov
jecxz
repnz
into
imul
retw
xor
inc
add
movb
movsb
loop
xchg
out
inc
jo
daa
xchg
ja
adc
lcall
mov
push
or
dec
stos
out
add
sbb
lods
clc
dec
scas
lds
aas
mov
or
loopne
adc
adc
leave
scas
scas
sbb
scas
stc
push
jl
ljmp
jle
jmp
jle
dec
jle
cmp
in
pop
adc
sub
mov
insb
push
jecxz
cmp
cmp
out
mov
pushf
xor
and
mov
rol
stos
xor
jno
cmp
adc
or
xor
cld
xchg
push
test
sbb
xchg
cld
dec
mov
mov
scas
test
or
mov
cmp
inc
sbb
jge
xchg
stc
push
adc
adc
jge
jl
sbb
sbb
push
lcall
fs
cwtl
inc
arpl
frstor
sbb
cmp
jmp
lods
jle
xchg
or
ljmp
das
push
test
push
xchg
xchg
scas
cltd
test
lret
push
add
xchg
in
mov
push
cmpsb
mov
push
xchg
mov
dec
nop
pop
xchg
ja
mov
pop
out
xchg
pusha
inc
inc
icebp
rorb
jae
dec
cmp
pusha
mov
repz
movsl
lock
push
shrb
jb
push
mov
mov
mov
xor
aam
xchg
mov
out
pop
adc
jp
add
jmp
xchg
ljmp
sbb
std
in
mov
adc
arpl
test
inc
loop
outsb
fdiv
leave
cmp
lods
cmp
push
test
mov
add
les
jne
add
push
cmp
sub
xor
data16
dec
cmpsl
mov
nop
mov
dec
roll
fsubr
jb
pop
stc
shl
popa
dec
mov
adc
jne
sub
and
icebp
sub
outsb
mov
out
lret
ret
mov
movsb
mov
and
in
jecxz
mov
add
xchg
imul
lcall
je
popf
cmpsb
xor
mov
ljmp
jl
mov
fadd
rorl
sbb
sbb
adc
insb
mov
xor
cmpsl
or
pop
popa
lahf
fldenv
leave
fistpll
fdivr
pop
dec
xchg
push
xchg
lods
test
popa
out
sahf
ja
sahf
mov
or
insl
rcrb
fistl
mov
scas
xchg
ret
mov
adc
pop
pushf
mov
in
insl
and
xstore-rng
cmpsl
subb
push
cmp
in
pop
test
mov
aas
push
push
mov
mov
sub
dec
dec
rolb
lods
aad
inc
inc
loop
xchg
cmp
fstl
loopne
bound
xchg
jmp
adc
lcall
and
test
add
ret
adc
inc
xor
out
mov
cs
or
clc
xlat
sbb
test
mov
push
lcall
push
xchg
stc
lahf
hlt
mov
jl
add
mov
sub
loope
pusha
xlat
cli
sbb
in
hlt
or
cmpsl
cmpl
pusha
rcrl
mov
imul
sub
mov
cmp
and
fwait
jge
mov
mov
cmp
dec
jecxz
xchg
je
sub
lods
inc
sub
sbb
and
loope
lock
lret
outsl
aas
sub
fwait
mov
mov
fildll
jle
xchg
lret
sbb
pop
iret
imul
push
dec
push
xchg
pop
jb
xorl
inc
int
je
int
xor
push
repz
imul
xchg
push
xchg
xor
pop
in
sub
fdivrs
add
mov
dec
clc
or
pop
in
sub
pop
popf
jne
xor
add
repz
and
loope
dec
rcrl
pop
sbb
lahf
lods
xor
ret
inc
xchg
stos
repz
fisttps
pop
das
xchg
negl
fdiv
cwtl
lods
or
pop
aaa
cmp
into
push
ret
out
stos
xor
xchg
mov
add
adc
out
inc
adc
pop
inc
cltd
iret
add
stos
pop
xor
sbb
shlb
rcrl
aaa
push
shll
movsl
or
and
loop
and
dec
jmp
xor
sub
sbb
jo
movsb
movups
data16
xchg
mov
xlat
dec
inc
jg
push
mov
dec
leave
push
push
movsb
dec
xlat
xchg
cld
xor
adc
cli
and
inc
add
xor
add
mov
push
loopne
in
outsb
or
movsl
and
cmpsl
mov
lret
hlt
hlt
call
scas
push
stc
test
add
dec
cwtl
xchg
lcall
repz
int3
rep
daa
cltd
jl
adc
mov
mov
cmp
subl
into
xchg
inc
call
mov
js
imul
test
xchg
mov
mov
sbb
iret
ja
sub
ja
stos
repnz
dec
jl
mov
imul
or
add
ret
mov
sbbb
add
inc
push
in
mov
inc
jle
xlat
xor
add
jbe
inc
rclb
sbb
dec
shll
dec
fs
sub
add
scas
push
jmp
cld
orb
pop
xchg
ja
bound
adc
cmpsl
mov
mov
rcll
scas
pop
jmp
or
repz
int
jle
xchg
adc
sbb
aas
ret
push
mov
mov
out
add
cmp
das
bound
xchg
bound
fildl
pop
jecxz
inc
adc
inc
lock
pusha
xchg
aaa
mov
and
clc
and
dec
testl
stos
ja
push
xchg
aam
lea
popf
or
lods
and
mov
insl
mov
xlat
aas
js
aad
add
xchg
out
or
repz
sbb
sahf
push
repnz
add
cmc
idivl
and
cmp
lds
mov
pop
cmc
or
aad
sub
leave
add
insl
and
fildll
push
ret
ljmp
xor
dec
jl
aaa
leave
cmc
dec
pusha
scas
flds
iret
xchg
add
sahf
filds
xchg
push
es
stos
xor
daa
adc
mov
es
adc
pushf
into
mov
fcmovnu
jl
dec
out
and
sbb
lahf
cmp
xchg
insb
cmp
pop
push
scas
mov
sar
jb
or
xchg
mov
xchg
cld
fwait
or
icebp
movups
sub
mov
mov
pop
ret
movsl
or
mov
inc
jl
aam
xor
in
jbe
aaa
mov
pop
sub
repz
js
add
and
in
mov
mov
rclb
scas
jnp
dec
mov
fsts
mov
jns
enter
pop
in
mov
cmp
bound
sbb
int
add
push
and
int3
sbb
xlat
scas
in
or
test
cmpsb
sub
dec
lds
rclb
mov
xchg
cli
imul
out
jae
mov
leave
std
cli
jo
divps
sbb
mov
arpl
adc
cli
decl
sub
dec
xor
cmp
out
cmpsl
jae
push
xor
div
test
jecxz
pop
pop
mov
push
adc
sub
call
negb
rolb
xor
icebp
cmp
out
lea
cmp
jo
stos
jno
mov
pusha
mov
xchg
pop
cwtl
jo
fdivs
xor
cmp
sbb
jp
push
dec
xchg
and
jp
jp
push
and
and
cmp
adc
bound
sbb
addl
and
movb
lods
shll
pop
stc
inc
jo
pushf
push
xor
out
es
mov
sbb
and
aad
pusha
jg
pop
nop
loop
jp
xlat
in
pop
repz
inc
fnstsw
cmp
pop
mov
sub
stc
push
std
cwtl
xchg
pop
popf
out
sub
leave
and
push
cli
push
inc
add
xorl
push
jl
jnp
add
or
loopew
xchg
mov
inc
lcall
sbb
sarl
stos
adc
add
cmp
cwtl
aaa
rorb
xchg
jg
in
add
adc
dec
xchg
cmp
jnp
clc
sbb
push
cmp
or
cmp
or
xor
cld
inc
sub
sbb
dec
mov
dec
sbb
bound
pushl
mov
ret
incl
xor
dec
bound
sbbb
cmp
or
aad
mov
fistps
fs
scas
or
or
xchg
out
xchg
and
mov
ret
add
aas
das
pxor
adc
pop
call
push
arpl
cwtl
in
add
and
cli
adc
mov
push
mov
fstpl
jae
outsb
in
adc
xor
out
dec
mov
and
pop
ljmp
xchg
mov
jns
ret
and
mov
mov
cmpsb
jecxz
daa
inc
stc
xchg
jbe
dec
mov
addr16
inc
sub
and
stos
stos
dec
jo
xchg
leave
and
lret
test
xor
adc
xor
cltd
xlat
mov
pop
ficomps
test
mov
dec
jb
popa
stc
dec
gs
and
jae
push
out
aad
dec
in
adc
insl
popf
jmp
int
xchg
leave
clc
mov
mov
icebp
jbe
inc
loopne
rorl
ret
dec
push
xor
mov
sbb
pop
idivl
in
lahf
movsb
xchg
add
add
pop
inc
add
pop
xor
into
mov
sti
gs
jne
push
shlb
push
daa
mov
jge
in
popf
repz
dec
nop
cmovs
mov
stc
divb
mov
mov
out
pop
push
cmp
xor
out
jns
fnstcw
imul
fcmovne
testl
sub
xchg
jmp
icebp
fistps
jbe
xchg
xchg
insl
adc
mov
stc
push
jae
inc
rcrl
test
insb
aam
push
mov
notb
pop
pop
lcall
mov
jne
cmp
cwtl
pushf
out
mov
inc
enter
xor
jmp
mov
mov
imul
mov
or
sub
jno
xor
sahf
imul
or
add
dec
push
inc
clc
ljmp
lahf
pop
aaa
xchg
sbb
push
pop
mov
mov
dec
xchg
xchg
push
mov
cmp
inc
rcr
outsl
pop
loopne
stos
int3
fiaddl
repnz
mov
sbb
jns
pop
mov
mov
sub
bound
push
bound
inc
lock
add
or
popa
adc
test
push
movsl
jge
arpl
and
dec
jmp
jns
dec
and
sub
cwtl
mov
out
jmp
repz
mov
xor
and
cs
inc
cmp
shl
sub
cmp
data16
ljmp
and
fs
or
pop
cmp
repnz
pop
xor
idivb
jae
sub
arpl
sub
mov
call
sub
ds
std
jo
pop
inc
loope
mov
out
out
rcl
pop
pusha
xchg
out
xchg
cmp
add
jmp
fistl
xchg
cmp
xchg
sbb
stc
jo
lock
jl
scas
lods
out
jbe
sub
adc
les
test
addr16
repz
mov
add
cmpb
jbe
lods
cmp
loopne
jnp
xchg
jge
popf
fnsave
xor
or
loopne
sub
pop
int
or
jne
call
sbb
or
loop
cmp
sub
push
xor
es
or
lret
pop
rclb
std
insb
sub
stos
lret
dec
lret
pop
or
pop
ds
les
cwtl
add
and
fyl2xp1
fwait
das
imulb
sti
call
test
xchg
pop
repz
xor
mov
ret
mov
aad
test
jle
aad
xorl
js
je
mov
mov
adc
pop
sbb
xor
rcrl
lcall
mov
dec
cmp
mov
insl
sbbl
daa
jno
pusha
pop
sbb
or
xchg
nop
xchg
dec
clc
cli
add
and
push
sub
inc
scas
mov
pusha
ljmp
addr16
jno
xlat
push
mov
sub
jge
inc
leave
movsb
adc
add
jns
adc
push
push
adcb
sbb
xor
jb
cltd
sbb
xchg
je
fildll
dec
imul
adc
mov
add
mov
lock
idiv
and
rcr
insb
jecxz
push
test
pop
mov
pop
in
out
inc
icebp
add
add
and
call
dec
sub
or
xchg
pushf
add
adc
in
pop
test
or
jg
sub
add
lea
lahf
in
inc
xchg
scas
cld
cltd
nop
hlt
popa
sub
loop
pop
xlat
sahf
lret
das
aaa
push
add
mov
scas
lcall
out
test
xchg
mov
jmp
mov
fdivrp
push
or
popa
cs
sbb
xor
cli
cld
mov
push
push
mov
adc
inc
jp
dec
mov
stc
ds
ret
scas
pop
and
shll
outsb
ds
mov
ret
rcrl
jbe
adc
ja
bound
mov
mov
rcrb
ss
shr
xor
mov
or
test
outsb
stc
or
cmpsl
inc
push
insl
rorb
leave
xchg
mov
fwait
popa
cmp
in
adc
adc
adc
mov
xor
pop
std
inc
nop
je
loope
jnp
outsl
push
ffree
dec
lods
xor
mov
call
pop
shll
adc
outsb
rcll
mov
push
leave
mov
out
mov
add
or
stos
and
mov
add
sub
push
xor
les
loopne
adc
ds
jo
mov
inc
lds
dec
mov
mov
je
rorb
test
call
inc
mov
add
adc
lcall
pop
rcrb
jb
andb
or
add
sub
jo
push
cmp
test
outsb
mov
pop
sub
mov
sahf
push
pop
xchg
inc
or
dec
jmp
mov
push
or
inc
push
mov
pop
cmp
jae
into
jnp
or
add
lret
add
pop
mov
in
inc
sbb
sarl
jecxz
outsl
ds
pusha
and
jb
test
cld
jb
pop
cmp
mov
adc
push
aas
test
add
in
outsl
into
adc
xlat
inc
mov
ljmp
push
xchg
mov
add
stos
dec
mov
mov
movsl
mov
lea
jb
add
lcall
and
cmc
jne
jl
or
or
out
shlb
arpl
jne
xchg
xchg
pusha
jle
ret
cmp
std
cmp
add
mov
js
cmpsb
or
mov
xchg
lods
adc
pop
test
or
mov
dec
in
push
inc
cs
push
sub
cmpsb
ds
xchg
or
add
lret
dec
push
lret
adc
jp
push
mov
xor
stc
or
mov
mov
push
lcall
insl
dec
xor
push
shlb
ret
enter
ret
test
jnp
in
lds
scas
ja
shrl
jg
push
pushf
sti
jnp
pop
pop
jp,pt
sti
popa
sbb
push
xchg
lock
in
dec
pcmpeqd
pop
je
sub
or
mov
sub
imul
xor
push
pop
xor
sub
inc
mov
inc
pop
leave
mov
dec
rcl
sub
imul
pop
dec
or
adc
popf
cwtl
mov
out
nop
jmp
insb
sub
leave
call
scas
imul
xchg
xchg
pop
das
lea
add
stos
loop
xchg
test
mov
sub
sub
in
mov
cmp
sub
or
aam
lcall
rcrb
adc
jl
xor
dec
jb
insb
sbb
dec
fnsave
ret
mov
mov
and
cmp
arpl
adc
xchg
pop
fsubrs
pop
push
flds
sub
sbb
daa
ss
ret
jne
stos
sbb
mov
adc
fidivrs
roll
rorl
icebp
add
vpaddb
negb
push
lcall
mov
sub
cmp
jl
sub
nop
mov
xchg
pop
movsl
lea
loop
push
test
adc
rorl
mov
pop
jne
push
add
push
and
dec
insl
das
dec
xor
std
cmpsl
lcall
iret
xor
and
add
test
sbb
dec
sahf
jecxz
mov
mov
imul
popf
xchg
imul
fwait
dec
mov
xor
mov
or
mov
lock
cmp
gs
stos
xchg
mov
xchg
sbb
flds
mov
mov
sahf
pavgw
xchg
inc
and
jecxz
aas
mov
orl
lahf
shrb
push
popf
add
cld
sub
xor
cmc
add
out
jo
mov
xor
jb
lret
jno
mov
push
pmulhuw
int3
push
pop
loopne
iret
inc
nop
xchg
xchg
dec
cmc
cmp
push
nop
pop
setl
psraw
cwtl
out
or
jne
mov
test
sub
outsb
xor
mov
mov
mov
iret
pop
xor
mov
or
sahf
pop
shrb
push
mov
xlat
movsl
xor
inc
inc
js
inc
js
mov
or
adc
pop
out
mov
dec
pop
adc
pusha
iret
pop
int
inc
adc
aaa
jbe
push
pop
or
sub
lahf
inc
rorb
adc
jle
data16
dec
adc
sub
mov
frstor
xor
cmp
out
fisttpll
add
or
or
inc
and
ss
lods
inc
push
addr16
jg
pcmpgtb
daa
imul
add
imul
dec
enter
inc
sarl
imul
mov
lock
jae
fwait
dec
lahf
cli
nop
ds
push
push
shrl
rcr
fiadds
jmp
lds
aaa
and
dec
shrl
pop
stc
test
sub
negb
aaa
add
push
jmp
and
daa
xchg
sub
mov
xchg
or
neg
jns
lahf
dec
popa
test
xor
fcompl
push
mov
repz
pop
andl
lcall
adc
ficompl
aas
fstl
loopne
lods
hlt
rorb
rcr
movsb
lret
xor
jg
xchg
test
or
or
setns
sub
mov
call
std
cmp
push
call
sahf
cmpsl
les
and
aas
data16
imul
mov
push
pop
sub
bound
stc
das
adc
loope
mov
pop
notb
pop
int3
cs
shr
lahf
mov
mov
push
sub
push
jle
imul
xor
sbb
popa
loopne
daa
fmull
test
scas
sub
pop
stos
ret
fsubl
das
inc
adc
adc
sbbl
and
fiadds
mov
fildll
jb
loope
push
lahf
fldl
popf
fsts
mov
mov
movsb
mov
lods
jmp
cmp
jo
sub
ret
pop
jae
mulb
dec
insl
mull
stc
xor
mov
xchg
fbstp
pop
mov
mov
pusha
push
lods
sub
adc
sbb
out
jp
sarb
arpl
pushf
lock
and
shll
mov
mov
aad
movsl
cmc
mov
popf
stos
cld
pusha
cmp
out
add
and
jmp
repnz
insl
sub
or
stos
in
adc
add
iret
cmp
jne
mov
das
inc
jg
in
rclb
fcompl
pop
aas
jecxz
xor
push
popa
xorb
cmpsl
popf
loope
or
mov
mov
ss
je
xchg
ds
adc
ja
dec
xchg
popf
add
pop
lret
hlt
lods
cld
popf
sub
adc
int
pusha
push
mov
inc
hlt
sbb
test
or
gs
push
out
and
mov
inc
fnstenv
sub
aad
push
jo
or
xchg
pop
mov
rclb
push
bound
dec
xchg
scas
jecxz
mov
repnz
pop
jecxz
add
out
cmc
and
into
xlat
xchg
add
cmp
std
jnp
fsub
or
sub
stos
sti
sbb
mov
cmp
inc
xchg
cltd
dec
dec
and
sub
fmull
mov
outsb
lret
stos
and
jae
fisttpll
mov
hlt
les
in
scas
shll
jle,pn
dec
ret
ret
jl
lds
and
in
icebp
out
div
push
inc
outsb
mov
push
test
lock
push
clc
lds
mul
fildll
push
xchg
scas
cli
mov
lret
jmp
sub
sbb
lods
dec
jno
repnz
xchg
inc
jmp
scas
xchg
sub
daa
push
loop
loope
add
inc
scas
xor
and
inc
jg
cmp
pop
in
or
cmpsb
das
ds
cmp
sti
dec
aas
bound
dec
sub
xchg
and
stos
sbb
lcall
sbbl
ss
js
xchg
mov
int3
add
mov
xor
imul
dec
cmp
lret
jge
inc
dec
test
mov
rcll
nop
jns
xchg
lcall
jne
nop
sbb
xor
call
push
xchg
js
push
push
out
test
mov
mov
popa
rolb
roll
xor
cmpb
add
xchg
dec
cli
jle
jb
js
mov
inc
lret
daa
pop
enter
test
pop
xchg
mov
out
mov
icebp
push
xor
mov
jecxz
inc
sahf
adc
fst
cmp
mov
loope
lret
cld
clc
lret
jmp
cmc
ficompl
lods
js
push
sti
pop
cwtl
xorl
ss
push
jecxz
test
cmp
pop
add
roll
js
imul
scas
rcl
inc
mov
pop
jmp
push
mov
fisttpll
pushf
cmp
sbb
mov
mov
das
jmp
mov
fimuls
les
pushf
inc
out
repnz
rcr
or
mov
sub
and
fwait
in
cltd
int3
pop
add
addb
mov
push
xor
xchg
mov
push
xchg
sub
ss
cwtl
popa
rol
and
inc
dec
pop
mov
cmp
repnz
lcall
sbb
scas
in
sub
lea
outsl
xor
mov
cmp
push
and
out
rcrl
mov
cmpsb
sbb
add
repz
int3
cli
movsl
repz
call
inc
add
arpl
sbb
stos
insl
pop
arpl
push
jo
push
test
nop
cmp
jmp
js
fs
and
insl
std
nop
xchg
incb
jmp
jno
fidivrs
fldcw
lods
aam
inc
mov
comiss
jnp
fnstenv
call
and
push
and
insl
and
mov
add
adc
sbb
mov
push
pop
mov
lods
leave
mov
or
out
mov
add
mov
jmp
sbb
das
call
das
les
orl
cmpsb
mov
sarl
ret
dec
cltd
fmull
lea
fadds
xchg
imul
scas
and
inc
pop
insl
pop
cli
cmc
adc
and
ret
push
sahf
xlat
mov
mov
loopne
push
or
adc
aam
sbb
sbb
movsb
fisubs
sbb
cmp
jecxz
sbb
push
fwait
add
int
fisubrs
mov
enter
adc
outsb
xor
stos
push
jno
pushf
into
aad
hlt
leave
push
out
fiaddl
mov
aas
int
sub
adc
rcrl
xchg
cltd
aam
loop
inc
push
and
pop
jb
add
sahf
jecxz
lds
lahf
pop
ss
je
in
in
clc
mov
scas
loop
ja
mov
xchg
std
pop
test
fidivs
mov
stos
popl
dec
xchg
adc
mov
mov
in
pop
std
sub
adc
lret
bound
sbb
xchg
fxch
loop
inc
arpl
xchg
adc
fcomps
adc
pop
cli
push
dec
mov
shrl
lods
cmpsl
hlt
aas
in
mov
out
sub
push
shlb
xor
into
testb
cltd
pop
lock
bnd
add
cs
mov
adcl
jp
pop
aad
pop
cli
push
cmp
mov
pop
xchg
lock
fmuls
xchg
or
mov
scas
inc
stos
push
sub
ficoms
jae
es
fistpll
js
lods
into
lock
cmpsl
add
xor
inc
lcall
dec
xor
insb
mov
push
fcomi
cmc
push
push
loope
cmc
cmp
sbb
mov
es
ret
or
or
flds
sbb
lret
test
sub
repnz
test
pusha
cmp
les
sti
nop
ljmp
orl
mov
mov
sbb
cmp
cs
add
inc
sti
mov
repz
mov
or
xchg
mov
daa
data16
sub
imul
xchg
outsl
fcmovnb
into
rcll
out
outsb
clc
mov
pop
push
iret
xor
hlt
push
syscall
cmp
cmp
rol
pushf
add
push
js
push
jl
mov
inc
mov
add
jg
cmc
arpl
pop
in
mov
shll
cmp
xchg
xchg
into
fwait
repnz
xchg
cmc
or
pop
aad
pop
in
mov
add
fidivrl
std
testl
insl
or
aaa
pop
push
dec
cmp
fmull
jle
dec
mov
mov
iret
aam
mov
and
enter
pop
mov
in
add
das
ljmp
mov
push
addl
sbb
popa
imul
dec
call
lods
dec
rorl
out
popa
jg
rcl
in
mov
pop
js
push
hlt
cmc
rorl
xor
lods
icebp
xor
jmp
jp
hlt
fwait
lcall
pushf
cmpb
adc
dec
mov
mov
daa
dec
mov
mov
push
jge
xor
repz
mov
scas
pop
jb
sub
xchg
adc
xor
mov
in
jo
fnstsw
ret
outsl
xor
lcall
jnp
pusha
lahf
loop
loopne
adc
jecxz
out
andl
mov
mov
mov
mov
iret
rcrb
pop
push
in
cmpsl
aas
or
iret
fnstenv
cmp
fucomi
ret
pop
scas
popf
pop
je
lahf
mov
lcall
outsl
std
adc
pusha
and
mov
dec
rcrb
cmp
add
push
je
jno
fadd
into
jmp
jp
pushf
rcl
jl
out
and
cmp
dec
push
loopne
adc
adc
mov
pop
sub
loope
mov
mov
insl
cltd
lahf
sbb
mov
push
cld
mov
mul
fwait
pop
pusha
adc
scas
fmulp
xor
aam
cmp
cld
push
adc
aas
mov
dec
pop
xor
repz
and
push
inc
fisubl
push
negl
movsb
jp
inc
mov
addr16
inc
addr16
pop
adc
je
mov
mov
jecxz
out
xchg
xor
repz
dec
push
int
aam
mov
call
ljmp
out
rcl
and
dec
insb
adc
out
iret
fs
inc
insl
jbe
addr16
sub
jbe
sbb
aas
xchg
mov
ds
scas
push
mov
cmp
sub
daa
push
xchg
inc
jge
xor
sbb
ror
mov
and
jg
jg
push
out
jae
int
xor
mov
push
mov
xor
mov
xorl
cmpsl
int
xor
es
jecxz
out
mov
or
int
dec
and
adc
jbe
aad
jo
icebp
insl
push
lcall
sarl
je
cli
pop
xchg
shrb
adc
cmpsb
adc
out
popf
mov
icebp
into
movsb
decb
cmp
xor
sti
das
nop
pmuludq
sbb
cmp
outsl
push
mov
sub
jo
icebp
pop
outsl
push
sbb
adc
scas
and
fdivs
ja
int3
and
aas
decl
fnsave
in
movsb
xchg
add
mov
mov
push
mov
ss
stos
xchg
inc
test
add
mov
dec
daa
add
in
push
push
imul
arpl
sub
aad
and
mov
inc
xchg
jg
in
rcl
or
or
push
mov
or
pop
xchg
push
sub
outsb
sub
lret
and
rdtsc
imul
stos
adc
cmp
out
pop
sub
mov
ljmp
repz
xor
int3
movsb
nop
iret
gs
mov
frstor
jecxz
push
rep
lahf
push
sub
insb
jl
imul
cmp
fwait
mov
loope
cmp
addr16
call
and
aas
mov
fnstcw
rcl
sub
jae
fsubrp
lcall
into
mov
inc
sahf
stc
test
int
ja
pusha
mov
xchg
or
ret
dec
subl
inc
lret
rcr
popf
ret
mov
cmpsl
lret
aad
sub
pushf
cmp
mov
mov
mov
test
cmc
fs
or
outsb
and
jns
adc
dec
outsl
int3
xchg
pop
or
sub
hlt
in
repnz
fldcw
lods
push
cmp
pop
push
cmp
gs
mov
outsl
arpl
ds
cmc
ss
pusha
inc
je
inc
std
jmp
and
subb
adc
fwait
or
fwait
dec
cld
in
sbb
push
icebp
cld
ljmp
cld
cmp
lahf
push
iret
in
xchg
rorl
pop
loopne
lods
imul
lods
jp
enter
clc
inc
cltd
popf
mov
mov
fbld
adc
repz
mov
sub
into
ljmp
ljmp
inc
xlat
cs
adc
mov
xor
jmp
add
nop
leave
outsb
mov
mov
pop
mov
aam
and
scas
cmpsb
jle
inc
loopne
mov
pushf
lds
xchg
xor
out
or
bound
push
jg
dec
in
inc
cmp
pop
enter
scas
mov
out
push
inc
into
sub
insb
stos
xchg
test
inc
sub
sahf
jb
gs
xlat
stos
lods
pop
adc
cwtl
daa
add
mov
lds
mov
xchg
cmp
jns
rorl
enter
mov
jmp
push
dec
add
imul
subb
dec
into
bound
aam
cmp
rcl
pop
sub
sub
repnz
lcall
out
aad
ret
pop
movsl
fisubl
iret
xor
int
pop
push
add
jne
cmp
lret
jp
lret
fidivs
mov
dec
cmp
mov
sbb
push
push
cs
cmpsl
hlt
sub
aaa
adc
mov
aad
out
sub
mov
mov
popf
mov
mov
mov
push
inc
xor
push
inc
mov
in
fidivrs
dec
lds
xor
adc
adc
xor
subl
jle
mov
pusha
mov
inc
and
sbb
or
stos
inc
cli
lret
idivl
fidivl
inc
fcoms
pushf
cmp
clc
outsb
pop
pusha
mov
int3
call
sbbb
jne
outsb
mov
in
fdivp
push
push
aad
in
scas
out
shlb
mov
les
mov
push
mov
jp
add
and
shrl
inc
imul
out
incl
pop
aaa
add
add
dec
outsl
leave
loop
cmp
dec
mov
das
jae
add
lret
mov
dec
mov
fiaddl
adc
ret
insl
inc
mov
xor
jmp
add
aas
fs
mov
lea
jne
rcl
jbe
xchg
xchg
std
dec
mov
leave
sub
mov
ror
je
add
xor
or
xchg
hlt
xlat
outsb
sub
cmp
inc
and
cmp
fstpl
ret
inc
or
dec
push
mov
sbb
xchg
jmp
cmpsl
out
stc
ret
ss
iret
cmp
add
pop
ja
cs
xor
arpl
inc
jecxz
mov
lock
and
mov
xor
mov
and
cmp
cltd
negl
adc
in
xchg
push
scas
enter
lods
loope
loope
add
lahf
mov
add
nop
mov
fisttpl
mov
je
rcrl
testl
mov
sub
dec
int3
cmp
dec
mov
shr
outsb
in
add
jno
pop
jns
or
inc
mov
sbb
and
jno
pusha
pop
jecxz
fcmovb
shr
lcall
pop
pop
cli
mov
mov
stos
int3
jmp
fcoml
stos
cmpsl
lret
add
into
and
roll
cwtl
scas
cmpl
sub
loop
mov
enter
scas
jae
mov
test
push
lret
aam
stos
adc
sbb
lret
lcall
jmp
cli
or
cmp
xchg
or
mov
mov
xorb
xchg
cld
insl
rcrb
test
es
les
ret
sahf
ss
mov
xor
pusha
and
fwait
std
int3
inc
inc
jne
inc
jo
jge
pop
add
les
cld
pop
popa
fmuls
ljmp
rcll
xsave
mov
sar
fmul
xchg
or
enter
add
out
leave
dec
dec
or
cwtl
out
dec
push
sahf
mov
adc
lods
pop
sbb
add
sub
add
outsb
add
out
testl
leave
and
or
out
sub
inc
insb
xlat
xchg
out
and
mov
out
out
inc
mov
and
iret
or
aas
jg
mov
ss
push
pop
mov
xchg
inc
pop
xchg
dec
setnp
scas
adc
gs
jge
xor
test
ljmp
hlt
in
mov
shrl
and
notl
into
dec
movl
cs
mov
les
test
mov
dec
inc
adc
insb
dec
in
push
insb
bound
pop
xchg
scas
hlt
out
fstps
push
test
cmpsl
adc
adc
mov
xor
bound
jg
loopne
pop
in
insb
aaa
aad
inc
mov
scas
and
dec
jno
imul
filds
inc
inc
dec
imul
cmp
adc
idivb
loopne
pop
jmp
adc
dec
adcb
cs
lods
aam
imul
shl
scas
lahf
or
icebp
dec
scas
out
jae
je
pop
ljmp
rorl
imul
orb
jmp
jle
inc
cmp
xor
xchg
mov
cmp
push
xchg
push
nop
sbb
sbb
enter
mov
sbb
aam
pop
aaa
inc
popa
sbbl
loopne
andb
mov
cld
pop
sbb
rcr
push
mov
fwait
push
decb
shlb
roll
in
data16
jp
inc
mov
dec
mov
enter
mov
cmp
or
mov
mov
loope
mov
mov
jnp
and
inc
jl
sarl
push
out
sub
and
cwtl
movsl
pop
xchg
adc
push
loop
and
sbb
fmuls
xchg
iret
add
mov
cltd
ficomps
fisubrl
jne
sub
xchg
adc
jnp
insb
test
cmpl
add
call
pop
mov
jecxz
insb
stc
fcoms
and
sbb
test
fstpl
sbb
xchg
pusha
sbb
pusha
popf
sub
lret
stos
inc
movsb
rolb
mov
lea
clc
xor
or
xchg
adc
mov
dec
cs
gs
or
pop
jns
loope
arpl
cmp
pop
punpckhdq
push
sub
xchg
test
pop
shrb
xchg
insb
sub
or
and
rclb
mov
or
gs
movsb
fdivrl
fistps
stc
enter
test
xchg
cmpsl
add
push
mov
jne
push
dec
cltd
mov
and
mov
outsb
mov
fldenv
fildl
fldt
pop
iret
adc
aas
xchg
bsr
call
test
add
pop
ljmp
push
rep
mov
pop
push
xchg
les
sbb
inc
push
cmp
rol
dec
out
jne
xchg
cwtl
xor
add
fidivs
push
lcall
cmc
fiaddl
popf
hlt
mov
scas
lock
je
inc
jmp
jg
cmp
push
movsl
jmp
and
xchg
xchg
inc
mov
mov
sbb
mov
in
add
out
mov
rol
cmpsb
add
inc
sarb
xchg
pop
push
sarb
pusha
pop
pop
and
aaa
rclb
ljmp
and
fs
jb
mov
adc
xor
loop
xchg
adc
mov
pop
jno
lret
fbld
pop
cmp
cmp
das
mov
jl
adc
push
push
in
iret
in
into
sbb
push
or
insl
add
adc
mov
repnz
inc
push
dec
cmpsl
adc
data16
test
gs
add
data16
dec
dec
out
fisttps
ljmp
hlt
push
ss
dec
or
sub
idivl
dec
mov
gs
cmp
xchg
lea
pop
jbe
mov
mov
or
fcmovnbe
sbb
pop
out
or
and
sbb
push
mov
xchg
jo
mov
out
repnz
ficomps
aam
aaa
sbb
fs
dec
mov
sbb
shll
jl
mov
adc
cmp
stc
int
xchg
scas
lock
rclb
adc
out
leave
fidivrs
xchg
lcall
inc
je
daa
or
jecxz
in
or
xchg
sti
sti
pop
mov
inc
aaa
test
lahf
pop
outsb
lock
lock
lods
lret
push
sub
cmp
dec
cmp
cmp
sbb
mov
popf
movsb
jns
mov
lret
push
test
or
gs
xchg
dec
mov
xchg
test
xor
mov
lods
fldcw
jnp
imul
fdivr
decl
xor
mov
fs
rcl
xchg
xchg
xor
ljmp
insl
xlat
mov
fildl
popa
pushf
std
push
mov
popa
outsl
push
loope
xlat
inc
pop
fs
xchg
test
and
sahf
push
jo
push
gs
and
mov
mov
push
orl
sbb
outsb
jno
jb
sti
sub
dec
fs
fnstenv
arpl
sbb
into
inc
loope
loopne
dec
hlt
cwtl
icebp
jns
cmp
int3
popa
bound
aas
decl
repz
add
cmp
jecxz
add
mov
aas
lea
jecxz
mov
or
add
pop
cs
xchg
lock
rorl
xchg
out
pop
aaa
dec
dec
pop
mov
xor
movsl
xor
lret
lret
and
jbe
inc
fmull
xchg
cmp
push
mov
add
add
push
loopne
sub
iret
daa
jne
mov
sbb
inc
jmp
test
sbb
cmpsl
in
scas
push
mov
cmp
mov
jg
pop
out
sbb
jp
fildl
out
push
jl
adc
cs
aas
fstps
mov
add
repnz
jl
adc
adc
push
in
jnp
cmpb
aaa
xor
dec
in
xchg
insl
mov
enter
fwait
jns
jo
push
imul
out
mov
dec
sbb
add
and
fldt
sbb
add
js
push
or
mov
mov
fstl
and
sub
dec
and
jns
push
or
xchg
cmpsb
add
cld
ret
pop
jl
push
mov
mov
aam
jle
pop
sub
fstpt
leave
mov
aaa
lea
in
ja
pop
rorl
adc
adc
cmp
inc
aas
sbb
lahf
popa
dec
inc
popf
mov
and
lcall
sbb
sub
orl
mov
mov
fildll
pop
pop
fwait
xchg
push
shlb
or
add
xor
cmp
xchg
pop
adcb
imul
je
inc
mov
aam
sbb
ja
or
inc
in
jp
mov
dec
lahf
xchg
lret
fsubp
inc
inc
clc
loope
insl
push
jae
xor
into
mov
mov
fwait
push
sub
rorl
cld
sti
or
mov
cmp
jno
push
cs
pop
add
icebp
cmp
sbb
arpl
jno
xchg
divb
jns
aam
popf
mov
in
outsl
bound
mov
testb
loopne
frstor
cld
inc
fdivrs
add
cwtl
adc
sbb
sbb
cmp
arpl
mov
out
add
sti
popa
pop
pop
lret
xchg
pop
or
orb
pop
cmpsl
subb
and
xor
in
pop
mov
fidivs
sbb
jne
loope
enter
outsl
enter
mov
loope
or
jp
mov
aaa
and
out
cmpb
sbb
add
or
stc
imul
test
stos
sbb
mov
stos
test
into
out
sarb
mov
inc
fsubrl
sub
jno
addr16
pop
cmp
xor
test
mov
out
adc
push
aaa
sbb
push
push
xchg
inc
dec
call
and
adc
fs
ficoms
lret
mov
dec
sbb
scas
fdivl
sub
mov
mov
mov
or
xor
xchg
je
push
cmp
aas
mov
push
push
pop
or
xlat
jmp
or
cwtl
jmp
in
cld
add
xchg
pop
mov
sbb
xchg
lea
shrb
sbb
or
pushf
call
push
sahf
push
scas
fld
clc
inc
daa
jo
fs
ret
and
mov
lock
pusha
jecxz
loop
pop
sti
fwait
xchg
loope
lret
je
scas
es
mov
inc
jb
inc
sbb
dec
ljmp
mov
jo
pop
loop
imul
pop
add
push
adc
adc
xchg
movsl
or
ret
pop
push
jle
lret
fwait
xchg
jno
inc
arpl
sbb
jge
cmp
and
pop
js
inc
sub
mov
flds
xor
mov
stos
xor
leave
dec
lods
jl
xbegin
ret
pop
sbb
mov
xchg
shlb
jmp
push
mull
push
mov
xlat
in
dec
arpl
adc
sbb
pop
add
xor
cmp
sub
add
fs
xchg
out
in
sbb
xor
mulb
push
mov
pop
ljmp
shl
jo
push
aam
pop
lds
mov
pushl
lahf
push
lods
add
lret
pop
adc
pop
inc
cmp
sub
and
pop
bound
mov
inc
jmp
and
mov
ljmp
cwtl
test
icebp
fldcw
mov
ficoml
leave
dec
push
pop
mov
inc
gs
clc
inc
test
scas
ret
outsl
xchg
clc
pop
push
int3
cmp
mov
out
nop
push
stos
cmpsl
addr16
in
and
in
mov
adc
pop
test
jne
xchg
rorl
inc
mov
xorb
or
xchg
add
jg
pop
leave
stos
mov
lods
inc
shlb
lret
sub
and
call
inc
adc
inc
sbb
dec
cld
jg
out
ret
mov
stos
push
and
testb
pop
add
xchg
lret
leave
lea
pop
dec
loopne
aaa
test
fnstcw
divb
jl
ret
cmp
out
lock
mov
dec
pop
pop
cmp
movsb
outsb
repz
divl
mov
jg
add
jg
cmp
cmp
adc
pop
fs
xorl
xchg
or
cmp
dec
xchg
xor
jmp
addl
popf
pop
cmp
jg
push
enterw
cmc
mov
mov
jnp
fstp
mov
ljmp
popa
cmp
jae
mov
xchg
aam
fnstenv
in
fucom
push
push
in
adcb
cltd
mov
cmp
xor
jns
cmp
enter
xchg
cmpb
fmuls
or
mulb
test
sub
movsl
adc
pop
mov
sub
adc
push
lahf
test
xor
pushw
shll
out
sbb
xchg
pop
cmp
xlat
push
mov
loope
fidivrl
mov
cli
inc
in
mov
sub
mov
loop
arpl
sbb
notl
fcom
sahf
add
lods
sub
cmp
jmp
mov
lods
test
push
fsubp
jns
ss
popa
outsl
lds
xor
push
pushf
xor
and
in
or
inc
pop
movsl
out
sahf
adc
cmp
jl
call
call
std
xchg
in
dec
jmp
mov
xchg
push
sub
mov
add
mov
call
std
or
fmull
jle
add
aas
pop
lods
add
mov
inc
push
mov
les
shll
daa
push
fucomip
test
repnz
ret
and
lods
xchg
icebp
cld
cwtl
pop
add
pop
jns
or
jge
lahf
push
jl
sti
and
jmp
mov
and
cmpsb
adc
pusha
sbb
and
in
or
pop
leave
paddd
sbb
mov
daa
jno
or
popf
fcmovu
jle
lcall
pop
or
jno
sub
cmp
jns
inc
test
rcrb
jo
imul
xor
int3
je
mov
xor
pop
insl
dec
aas
or
adc
cmpsb
outsb
leave
cmc
mov
mov
scas
jne
fnstsw
mov
testb
mov
pop
push
jns
scas
stc
cmp
outsb
xchg
mov
ret
sub
mov
mov
stos
jno
repz
mov
shll
fs
cmp
jecxz
pop
lret
js
loop
testb
divl
sub
dec
repnz
mov
orb
insb
aam
xor
test
sub
mov
sbb
test
adc
fmuls
rorb
adc
iret
orb
mov
xor
psrld
xor
out
enter
cmpsl
ljmp
ja
pushf
mov
inc
test
xor
dec
hlt
divb
test
mov
stos
cmpsl
aaa
dec
lret
jmp
add
ljmp
mov
xor
into
cli
cmp
int3
das
push
shr
dec
jg
and
ss
mov
add
xchg
jae
push
fdivr
ret
pop
addb
or
mov
test
sbb
cmpsl
fisttpl
cmp
dec
xor
test
and
sbb
pushf
or
lret
adc
cmp
mov
in
lcall
xlat
jle
or
jp
jl
push
push
imul
in
lods
pop
fwait
inc
hlt
or
ja
in
pop
mov
mov
and
mov
lock
iret
es
bound
push
andb
pop
mov
mov
lds
mov
adc
mov
decb
mov
mov
and
mov
dec
pop
mov
dec
repnz
and
lods
pop
add
pop
and
dec
pop
daa
push
and
add
push
dec
inc
insl
pop
dec
mov
jle
adc
iret
mov
adc
xor
pop
sub
sbb
ljmp
shrb
inc
pop
push
inc
add
pop
addr16
fucomp
and
jb
jo
out
cli
test
sarl
jns
xor
cli
out
stos
sbbl
adc
push
cmpsl
and
repnz
lret
mov
in
inc
sub
gs
inc
inc
stos
pop
aas
adc
push
xor
fsubl
sub
dec
shr
add
dec
ret
fxch
inc
mov
out
mov
into
repnz
sub
mov
mov
sub
adc
xchg
cmp
pushf
push
testl
mov
fsubrs
add
adc
xchg
mov
sbb
test
into
scas
subl
adcl
dec
divl
sub
and
inc
ret
pop
dec
lock
sbb
psubsb
bound
rcll
sub
loop
jne
jb
xchg
ret
fs
adc
push
lahf
out
daa
ss
pop
jns
icebp
fnstsw
jno
cmc
adc
popa
adc
popa
add
xor
call
sbb
or
mov
adc
xor
insl
scas
jg
or
lock
dec
mov
in
ds
mov
mov
out
fsts
push
jle
out
xchg
mov
mov
pop
mov
notb
loope
adc
mov
xlat
jnp
shll
sub
es
push
fisttpll
xor
jbe
cmp
jnp
push
pop
sub
and
push
mov
sbb
and
cltd
dec
scas
aaa
out
scas
int
stos
out
flds
into
and
dec
fidivrl
cwtl
add
adc
cmpsl
cli
shlb
das
ss
ja
inc
ljmp
mov
inc
mov
movsl
inc
std
mov
shl
push
jmp
cltd
push
mov
push
pop
xor
push
popf
sbb
popf
stc
or
push
dec
push
stc
dec
add
cmp
fstpl
aas
clts
cmovbe
ljmp
cltd
jbe
xor
clc
leave
pushl
mov
adc
cmc
popa
data16
push
ror
and
push
stc
filds
ret
sbb
lea
js
lcall
add
cwtl
mov
fsubr
or
lea
loope
es
iret
icebp
or
arpl
fwait
xor
loopne
cltd
cmc
pop
push
and
fwait
das
js
mov
ret
lock
fdivrs
ret
das
push
sbb
jno
nop
shrb
lret
sub
pop
pop
and
mov
push
cwtl
stos
mov
test
cmpsb
push
mov
cmc
fwait
xchg
imul
dec
mov
stos
sbb
add
das
mov
sbb
sti
jno
test
mov
mov
mov
mov
enter
inc
jne
mov
xorb
fs
out
add
jne
ret
mov
dec
and
xor
clc
add
add
mov
mov
inc
inc
rcr
or
xchg
xchg
adc
jp
inc
daa
inc
mov
add
int
fs
scas
je
jns
push
out
das
fmuls
sub
bound
xor
movsb
xor
cmp
xor
xchg
xor
arpl
and
xor
or
sub
sbb
mov
cmp
sub
push
fwait
sub
dec
icebp
cli
pop
mov
cmp
out
pop
notl
andb
cmpsl
xor
add
fstl
mov
cmpsb
sbb
pop
mov
or
adc
or
call
adc
mov
std
dec
jmp
lret
cmp
sahf
push
pop
clc
push
repnz
cmp
push
mov
dec
xor
push
push
xor
in
into
or
ljmp
mov
jp
int3
cmp
and
mov
out
clc
xor
shr
mov
cmpb
xor
jo
mov
dec
or
andl
sub
pop
or
mov
fnstsw
cli
dec
mov
xchg
aad
pop
lret
cmpsl
lods
repz
ds
jne
shl
xor
stos
incl
fbstp
mov
imul
jp
out
xchg
or
arpl
orb
push
cmc
xchg
mov
scas
cmc
push
enter
daa
pop
scas
push
cs
int3
and
std
scas
sub
or
negb
jne
aas
xchg
lea
jbe
scas
sub
adc
xchg
or
sub
mov
adc
xor
sub
dec
mov
clc
jbe
mov
rorb
pop
dec
cmp
in
ss
pop
inc
sbb
rclb
mov
add
mov
lock
dec
pop
cmp
sbb
adc
out
test
sbb
push
or
cmpsl
insl
loope
xor
push
or
stos
push
data16
arpl
daa
push
icebp
test
ja
inc
loop
movsl
jp
sbb
dec
jnp
pop
sbb
cld
lock
adc
sub
icebp
push
pop
cmp
pop
ret
inc
jb
lahf
sub
in
cmp
jns
insb
jns
enter
ret
xlat
mov
loopne
in
xor
mov
test
les
out
or
sub
out
xlat
sbb
xchg
fldt
das
cmp
push
or
insb
pop
cwtl
sub
add
int3
dec
enter
lret
push
mov
and
out
stc
and
out
fnstenv
xor
add
out
out
inc
test
sar
push
rorb
jecxz
inc
xchg
sub
fs
or
push
mov
jecxz
push
call
dec
mov
dec
pop
jmp
adc
roll
and
xchg
sub
scas
stos
nop
test
and
pusha
cwtl
pushf
xchg
loop
cmp
daa
pop
add
aad
shl
adc
push
adc
add
pop
adc
push
mov
andl
pusha
sarl
mov
adc
xor
xor
mov
inc
jae
loope
movsl
lock
sub
push
cmpsl
push
sbb
mov
shlb
cmp
cmp
in
lock
repz
int
cmpsb
xchg
and
push
hlt
mov
pusha
pop
insl
lcall
xchg
xchg
mov
repnz
cld
sbb
xor
lea
lods
fimull
test
inc
jnp
inc
pop
pushf
lret
in
inc
fldl
xorl
cmpsb
push
mov
mov
inc
test
cltd
mov
cmp
dec
push
call
pop
adc
mov
out
and
int3
mov
fcoms
gs
mov
push
lcall
into
pop
leave
lahf
gs
and
outsb
jg
sar
cmp
dec
cmpsl
adc
pop
test
mov
addl
adc
mov
lahf
inc
loop
ret
push
or
dec
lret
xor
notl
dec
cmc
mov
pop
inc
iret
imul
mov
sub
mov
sbb
jmp
out
loopne
dec
push
repz
push
andb
inc
push
sub
mov
decl
orl
outsl
frstor
cmp
inc
jne
stos
dec
adc
adc
sub
push
pop
and
push
push
xchg
sbb
stos
xchg
mov
test
jg
and
incb
mov
inc
add
jb
lret
cli
jmp
in
pop
mov
in
pop
add
lea
mov
pop
add
outsl
outsl
lds
add
hlt
push
sbb
movsl
and
inc
arpl
fcmovu
push
xor
mov
dec
jl
push
sbb
sub
cmpsl
mov
dec
cmpsb
cmp
xor
cmpsb
and
cld
cli
xchg
xchg
cmpsb
outsl
imul
pop
mov
addr16
or
xchg
xor
fstpl
mov
lahf
push
rclb
js
xchg
xor
xchg
cmpsb
jbe
inc
repnz
fidivrl
gs
repnz
mov
aad
pand
in
sbb
fistl
lahf
lds
outsb
rol
dec
or
movsl
inc
andb
fdivrs
out
in
dec
addr16
inc
adc
pusha
xchg
sbb
aas
bound
xchg
hlt
scas
repz
xchg
roll
jo
cmpsl
les
and
jl
and
outsb
dec
hlt
and
mov
xchg
fmulp
fwait
pop
jg
pop
cmp
in
push
or
xor
mov
pushl
outsl
push
loope
mov
sbb
or
jns
sbb
sarl
adc
sarb
jne
cmp
xor
repnz
out
test
js
push
mov
lods
lret
aad
cmpl
js
push
mov
mov
iret
popa
test
in
rcr
lock
mov
sbb
sub
faddl
cmp
lds
fmulp
mov
loop
dec
xchg
mov
nop
sti
test
xor
cmp
mov
push
scas
dec
xorb
cmp
add
fucomi
dec
sbb
sub
or
pop
pop
hlt
xlat
fs
loop
add
adc
sub
sti
out
dec
negb
mov
and
inc
inc
nop
sub
outsl
mov
mov
jb
inc
lods
loopne
jbe
nop
es
sub
adc
popl
or
inc
jg
pop
adc
adc
jb
mov
scas
js
cmp
sub
pop
pop
dec
pop
bound
popa
sub
in
loopne
and
lret
ja
test
mov
dec
out
xlat
fstps
ss
notb
jo
jno
andl
lods
repz
daa
pop
pop
lahf
jne
mov
mov
xor
xchg
mov
pop
test
push
cmp
es
mov
ja
das
mov
insl
jne
jno
xlat
test
std
mov
pop
lock
push
jg
pop
cld
cmp
add
icebp
push
adc
xor
xchg
xchg
pop
jbe
adc
push
fisubrl
movhps
or
and
fnstcw
pop
ljmp
push
xor
js
out
movl
inc
lds
int3
movhps
ljmp
loopne
es
mov
pop
mov
into
inc
mov
jge
xchg
mov
lahf
in
mov
std
adc
sbb
fwait
mov
testb
adc
adc
dec
addr16
sbb
jne
push
sbb
mov
lfs
mov
fiaddl
adc
int
mov
testb
mov
setge
xchg
rclb
cmc
ja
fst
mov
in
call
iret
mov
addr16
imul
sub
int
mov
add
add
int
sti
add
aaa
mov
adc
xchg
pushf
inc
jg
dec
adc
sarb
shll
mov
mov
cmp
xchg
and
xchg
add
or
lcall
xor
test
sub
aas
std
movsl
jae
fsubr
push
addr16
nop
sar
jg
xor
xchg
jecxz
icebp
pop
clc
push
leave
jb
mov
adc
xchg
sbb
mov
inc
mov
loop
out
jnp
jecxz
into
ljmp
sti
shrb
inc
jnp
test
adc
mov
fsubl
cmp
cmp
dec
push
aas
inc
mov
fs
xor
dec
dec
adc
or
jp
xchg
xchg
mov
imul
push
cmp
std
pushf
xchg
xor
and
mov
dec
aad
in
adc
add
and
fs
fmull
rorl
inc
in
add
mov
add
or
cld
icebp
dec
in
pop
nop
loope
lods
add
adc
sub
in
inc
or
pushf
adc
cmp
mov
add
rol
push
mov
cmp
and
add
pop
and
daa
loop
insb
cmpsl
ds
fidivl
mov
ret
scas
cmp
imul
adc
push
mov
mov
sbb
add
fidivs
insb
call
sti
repnz
add
idivb
inc
out
imul
jno
dec
imul
outsl
sub
hlt
shll
jae
lods
fbld
push
jmp
pop
adc
pop
dec
fdivrs
testl
iret
stos
sti
push
jmp
dec
cmc
enter
jnp
mov
add
dec
ja
movsl
data16
addr16
sbb
shlb
cs
adc
mov
push
jecxz
movsl
int
ljmp
push
mov
push
add
loopne
call
stos
mov
and
pusha
sbb
fwait
aaa
or
push
sub
pop
test
out
mov
and
rcrb
and
jmp
dec
sub
iret
pusha
mov
inc
subl
mov
jbe
push
adcl
adc
lahf
rol
or
dec
cmc
and
inc
stc
mov
rcrl
insl
add
pop
xlat
pop
rcr
outsl
mov
jo
loopne
adc
inc
insl
mov
lods
sub
mov
sub
aad
push
sub
jne
lea
sahf
inc
les
inc
pop
je
cmp
shrb
xchg
lahf
jno
cltd
or
mov
and
mov
pusha
pop
subb
jle
cmp
push
xchg
inc
mov
add
rol
push
cld
inc
dec
add
push
dec
jne
xchg
outsb
sub
cmp
adc
push
pop
cs
sti
cwtl
insb
xchg
test
push
lea
inc
jnp
movl
sub
loope
mov
inc
loope
pop
xor
xchg
jp
xchg
lods
es
cmp
cmpsb
inc
mov
lds
mov
mov
adc
xchg
xor
shr
je
sub
xchg
mulb
lods
cmp
cs
roll
pop
shl
test
ja
push
fisttpl
ljmp
mov
mov
mov
cmp
pop
jp
loopne
out
or
push
gs
aam
add
pop
push
jp
push
mov
mov
push
fisubs
subb
mov
call
and
jl
lock
xchg
loopne
adc
sub
pusha
cmpl
cwtl
push
repnz
stc
dec
push
push
adc
dec
out
mov
dec
leave
mov
jle
out
popl
mov
mov
xor
and
mov
popf
pop
mov
subl
repnz
jle
push
cmpsl
cli
out
and
and
roll
int
in
stc
ret
bound
cmpsl
mov
popa
addr16
jnp
jbe
orl
lock
and
xchg
sub
sub
and
cmc
nop
push
sbb
in
outsl
jge
call
mov
pushf
push
stos
lea
xor
push
in
in
sti
mov
pop
cmp
cwtl
dec
pop
mov
add
sub
mov
enter
adc
sbb
push
cmp
mov
es
xchg
inc
cmp
xchg
sti
xor
adc
je
jns
scas
mov
adc
aam
mov
sbb
cmpsb
mov
stc
sub
hlt
fwait
push
cmp
lea
cmpsl
xor
lea
xchg
test
shlb
dec
adc
sub
imul
push
sbb
lods
mov
push
xor
cmp
je
fistps
cmpsl
inc
into
stos
mov
jecxz
lret
inc
cwtl
insb
add
push
out
add
rcrb
inc
pmaxsw
or
gs
mov
sbb
push
ds
add
lock
inc
push
mov
jl
mov
repz
in
lds
adc
outsb
aad
dec
sbb
insb
sub
cwtl
fstp
push
cmp
cmp
fcmovnbe
fiaddl
loope
cli
xlat
iret
sti
push
mov
mov
pop
adc
icebp
add
sub
jle
aad
cmpl
sbb
sbb
enter
xor
push
loop
dec
xchg
shlb
adc
mov
nop
push
mov
lahf
jns
push
push
lahf
jnp
mov
inc
push
dec
or
insl
push
popa
pop
data16
lods
pop
icebp
stos
sub
cwtl
jl
push
stos
mov
xlat
test
hlt
and
add
jg
out
cmp
or
sbb
jmp
and
mov
mov
jmp
inc
lret
push
push
dec
gs
pushl
add
clc
mov
and
int3
inc
jo
test
cmp
in
scas
push
test
add
sarb
fimuls
sarb
mov
fwait
orb
inc
std
shll
js
inc
sarb
and
lret
push
xchg
cmp
xor
test
mov
xor
imul
stc
dec
and
popf
cmpsb
icebp
push
mov
scas
stos
nop
in
iret
and
insb
push
mov
imul
insl
dec
push
je
add
pop
cmpb
sub
xor
daa
pop
lcall
or
mov
or
das
inc
adc
dec
push
mov
mov
or
jle
enter
cmc
xchg
sarb
insb
pop
cltd
push
dec
mov
aam
in
out
adc
icebp
xchg
popa
and
pusha
jecxz
sbbb
nop
xchg
and
out
dec
add
rorb
aam
cmp
es
lds
sbb
mov
jo
adc
lret
dec
cld
rcll
lods
sub
dec
jns
jo
dec
outsl
andl
or
popf
outsb
inc
sbb
xchg
out
iret
aad
lods
mov
add
popa
lds
iret
inc
cltd
pusha
sti
cmpsb
adc
cld
adc
movsl
shlb
add
mov
bound
cmpb
adc
inc
pushf
rcl
adcb
ja
mov
mov
int
sub
jle
shl
movsl
cmp
into
cmp
and
mov
xchg
subb
mov
jae
movsl
xrelease
stc
mov
inc
dec
cmpb
mov
bound
incb
decb
insb
and
dec
stc
xor
testb
into
imul
jmp
jno
xchg
test
mov
mov
ss
fwait
jbe
lcall
stos
mov
dec
dec
adc
clc
xchg
inc
inc
rcr
clc
cmpsl
pushf
sub
out
dec
lcall
cltd
daa
dec
in
mov
cmp
sub
lea
icebp
mov
add
mov
add
rorb
and
in
sbb
js
mov
add
sub
fldt
int
xchg
fsubr
push
or
mov
sbb
inc
push
push
repz
aaa
push
int3
dec
add
enter
idivb
lea
icebp
and
cmp
push
lods
mov
stc
roll
pop
cmp
mov
pop
fcomps
jp
inc
lret
negb
daa
pop
shll
push
or
lret
pop
or
fldl
dec
cmp
sarb
stos
mov
push
inc
fcmovne
ret
out
mov
jl
fld
imul
and
sar
push
lcall
ss
xchg
dec
jmp
push
pop
cmp
aam
lods
xchg
ds
cmc
mov
arpl
jl
aaa
mov
negb
mov
lock
mov
inc
inc
loopne
sub
sbb
fmull
jae
lret
inc
push
dec
out
xor
dec
sti
mov
icebp
mov
rdmsr
xlat
pop
push
jle
jecxz
sbb
loopne
fidivl
cmp
xchg
inc
push
hlt
pop
mov
bound
clc
mov
repnz
push
inc
aas
xlat
dec
scas
imul
xchg
xchg
clc
or
shr
cwtl
dec
pop
xor
repnz
sahf
mov
xor
rolb
dec
mov
ja
int
call
mov
pop
testb
sti
cs
mov
in
jle
jae
cwtl
fistpll
adc
clc
popf
lock
mov
sbb
clc
fnstcw
cli
adcb
enter
cltd
lea
xor
inc
test
jae
outsb
rclb
ss
mov
jl
mov
loope
lret
pop
jo
clc
enter
fwait
mov
cmp
or
inc
dec
xchg
and
out
lds
es
xor
mov
jnp
inc
out
sbb
flds
mov
and
movb
sarb
fadds
sub
mov
mov
filds
sbb
xor
test
push
or
sub
pop
sti
out
insb
sbb
dec
sub
mov
mov
clc
das
xchg
mov
cmp
into
cs
js
loopne
adc
sbb
mov
sub
enter
and
inc
outsb
loopne
cmpsb
mov
add
sti
mov
pop
cld
push
xor
xchg
out
lea
pop
inc
sbb
push
cmc
gs
jp
ss
cmp
add
cmp
push
dec
icebp
cmp
movsl
jge
movsb
and
dec
xchg
dec
cmpsb
add
sub
mov
sbb
ficoms
sub
cld
out
inc
jecxz
std
aam
dec
push
xchg
mov
inc
scas
subb
push
fs
dec
jle
ficoms
xchg
mov
test
pop
fs
and
adc
pusha
fs
add
nop
jne
mov
repnz
pop
and
mov
sbb
and
or
mov
fcmovb
and
push
mov
shlb
or
sbb
dec
data16
adc
out
adcb
stos
movl
mov
push
pop
cltd
lds
cmc
mull
or
mov
mov
adc
ds
mov
sbb
daa
cmp
cmp
mov
jno
or
inc
and
jmp
push
mov
ds
pop
lea
in
fwait
push
pushf
lahf
sub
and
ds
dec
add
stc
jmp
test
hlt
cmp
cmpsb
mov
add
push
jmp
fldenv
sarb
scas
pop
stos
mov
aam
jl
stos
ja
bound
add
mov
dec
sbb
stos
movsb
xor
cld
inc
pop
add
sbb
sysexit
clc
push
jno
or
in
imul
out
push
inc
or
out
mov
cld
and
cmp
cmp
stc
add
mov
adcb
mov
sbb
cmp
inc
jns
jmp
jne
mov
xor
sub
in
aam
mov
pop
lahf
lret
ljmp
jge
outsl
je
add
ljmp
mov
sub
add
into
xchg
sti
lods
dec
adcb
rol
dec
inc
mov
loopne
shl
sub
pusha
in
push
push
ljmp
outsl
push
lret
adc
notl
xor
jo
pop
mov
sbb
cltd
push
mov
jmp
pop
mov
dec
xor
shl
push
push
and
cmc
mov
int3
imul
lea
xchg
bound
clc
mov
dec
mov
pop
cmp
cmc
xchg
jnp
and
jmp
cmpsb
into
stos
mov
fstpt
ds
mov
push
cmpsb
test
cmp
xor
mov
sbb
mov
popf
mov
in
js
mov
jge
call
push
mov
dec
aaa
mov
aam
ja
dec
xor
mov
fcomps
add
xchg
sbb
ds
push
mov
xor
sub
adc
adc
xchg
sbb
adc
insl
inc
dec
repz
pop
shrl
dec
mov
daa
dec
stos
popf
test
adc
popf
xchg
jp
ljmp
test
or
pop
sbb
arpl
cmp
sbb
movsl
pop
mov
enter
mov
sub
xor
ss
leave
cmp
loop
push
aad
in
loopne
sbb
cs
mov
leave
pop
pop
sbb
and
mov
add
scas
sbb
cltd
div
sub
xor
ljmp
mov
dec
test
outsl
mov
or
adc
jns
or
les
xchg
sub
mov
lret
sahf
pop
jecxz
dec
daa
fisubl
out
pop
xchg
subb
and
mov
stos
popa
dec
lret
mov
and
xor
push
aad
adc
lods
sti
mov
dec
lea
and
adc
pushf
out
imul
test
int
lods
out
mov
adc
mov
mov
imul
sahf
xor
push
ret
xor
xchg
mov
jp
das
push
mov
call
jne
sub
jl
inc
ja
inc
cmp
or
inc
lcall
mov
mov
movsb
xchg
mov
cmpsl
test
lcall
int
dec
jecxz
sbb
movsb
lret
sbb
mov
add
inc
push
add
inc
enter
mov
push
xchg
dec
mov
or
js
add
xor
stc
mov
call
sbb
dec
lock
mov
lahf
and
loope
inc
cmp
stc
pop
rcr
ljmp
testb
or
jbe
sti
idiv
xor
loop
push
mov
sbb
or
loopne
leave
pop
sahf
push
adc
and
sahf
mov
mov
dec
cmpb
movsl
sti
sbb
imul
or
lahf
in
imul
xor
popf
jge
ret
mov
jg
mov
push
out
xor
daa
pop
mov
lret
or
das
xchg
or
movl
stos
pop
push
mov
xor
push
mov
mov
ljmp
mov
scas
js
mov
scas
adc
leave
mov
mov
jno
mov
lock
mov
gs
cltd
lea
sbb
cmp
imul
mov
loop
push
inc
mov
dec
and
test
and
jmp
xor
test
jno
sbb
cld
fldl
aad
arpl
out
in
xlat
adc
cmp
inc
and
xchg
push
bnd
mov
shl
cmp
je
sub
bound
cmp
ret
mov
inc
push
ljmp
idivl
adc
fdivs
mov
jns
ret
and
cltd
or
push
sub
and
or
mov
push
push
loopne
xor
jns
adc
movsl
pop
push
xchg
jge
sbb
les
mov
push
dec
sub
and
in
or
cli
lret
mov
neg
inc
adc
sub
mov
aam
push
sub
sbb
mov
sub
push
cmpsl
push
mov
xor
jmp
stc
cmp
stos
cmpsl
scas
dec
xor
xchg
leave
mov
out
xor
dec
inc
fs
mov
int3
mov
test
push
aas
push
dec
xlat
fstpt
inc
sub
in
dec
rorb
rclb
push
mov
xchg
pop
imul
push
jp
xchg
mov
pop
push
lods
cmp
xchg
mov
cmp
adc
stos
sbb
bsr
add
mov
cld
scas
cmp
icebp
icebp
jo
shrb
xchg
push
dec
xor
push
repz
rolb
pop
ffree
and
sahf
loope
adc
test
mov
mov
or
xor
loop
xchg
imul
nop
pop
andb
aaa
inc
data16
das
rcll
mov
ja
jnp
andl
sahf
mov
stos
jge
popa
sub
xor
fisttpll
hlt
cmpsl
xchg
into
fists
adc
push
leave
adc
out
pop
adc
iret
push
je
lods
mov
fcomp
outsb
movsb
xchg
jp
mov
in
jp
dec
jecxz
pushf
sub
mov
sbb
xor
dec
and
or
mov
movsb
adc
test
mov
jbe
lret
mov
repz
mov
inc
icebp
jbe
sbb
test
les
push
loope
loopne
xlat
mov
fwait
sbb
add
or
and
lock
cmp
xchg
stos
sub
sahf
fs
movsb
subb
pop
and
mov
pop
rcr
aaa
mov
sub
aas
sahf
decb
filds
xor
mov
clc
ficompl
loopne
sub
push
jns
jbe
jp
lock
stos
pop
in
jns
mov
pop
into
addr16
push
mov
xor
mov
push
inc
ja
lods
sti
inc
imul
aas
jo
xchg
pop
ficompl
sbb
lcall
stc
mov
popa
adc
mov
mov
add
xorl
into
xor
aad
xchg
jne
jnp
pop
fisubs
mov
mov
out
cwtl
leave
clc
je
sbbb
loope
adcl
add
test
mov
sub
sbbl
gs
jl
ret
arpl
inc
push
ljmp
jo
test
pop
xlat
cs
lcall
sti
call
dec
insb
mov
out
pop
sahf
xchg
sub
fistl
pop
cmpsb
mov
mov
inc
xchg
flds
cli
mov
add
pop
pop
in
inc
mov
fldenv
cmpsl
sahf
fcoms
fimuls
out
mov
test
sbb
sub
inc
pop
push
imul
xlat
xchg
add
inc
repz
shlb
dec
xchg
xor
imul
sbb
inc
inc
mov
imul
mov
or
out
fidivrl
out
ljmp
xor
push
add
sub
test
mull
repnz
les
dec
bound
addr16
lods
or
mov
stos
gs
sti
call
les
xchg
mov
movsb
xchg
mov
dec
or
jae
cmp
data16
xor
aas
sbb
mov
lds
push
push
xchg
lret
jle
xchg
outsb
daa
cwtl
out
xor
subb
mov
lods
mov
test
into
dec
std
mov
cmpsl
push
jne
inc
mov
out
cld
push
push
pushf
frstor
mov
je
pusha
out
repnz
inc
arpl
mov
ret
in
fisttps
test
incb
pop
test
cmp
addr16
arpl
cltd
adc
ss
repnz
repnz
dec
cmp
test
mov
outsb
pop
push
scas
xchg
shll
mov
nop
notb
popf
clts
cld
sbb
jno
jne
sbb
push
fwait
js
mov
das
mov
push
mov
inc
mov
ja
fld
inc
inc
mov
pop
outsl
sbb
lcall
nop
insb
sarl
jmp
xor
ss
dec
movsb
nop
incb
xor
jae
andb
das
sub
data16
flds
push
jb
lea
sub
arpl
popf
mov
mov
or
mov
dec
or
pop
sub
shll
out
sbb
jmp
iret
sarl
sti
inc
jb
cli
pop
dec
xor
mov
cmc
push
into
faddp
repnz
sbb
bound
fsubs
leave
xchg
push
xor
mov
jns
push
pop
pop
nop
loope
mov
lcall
outsb
adc
faddl
pop
jae
fs
mov
cli
adc
xor
aas
sbb
pop
adc
lds
stos
mov
fwait
arpl
testb
enter
sbb
push
ja
subb
sar
jnp
mov
sbb
clc
adc
vmovapd
ss
pop
js
enter
or
ficompl
fisubrl
lcall
adc
cmp
mov
push
jmp
das
mov
push
xchg
xor
orl
cli
jbe
xor
int
jp
xchg
push
push
inc
dec
xor
fabs
jne
ret
jmp
nop
lock
push
mov
cmpsl
in
js
test
js
or
cmp
push
mov
mov
movsl
jge
mov
jnp
add
ja
not
in
push
pop
sub
clc
repz
fistl
add
imulb
mov
add
add
sar
jg
jle
pop
dec
jge
mov
insb
fldl
cmpsl
push
ret
imul
es
xchg
lret
loop
gs
es
sub
leave
movsb
test
mov
jbe
mov
mov
fdivrp
mov
or
mov
test
jns
lahf
cmpsb
cmpsb
cmc
cld
fcoms
inc
in
mov
push
cmc
movhps
mov
aam
push
lcall
sub
xlat
pop
packsswb
ret
add
pusha
rclb
xchg
or
push
std
lods
dec
push
aas
lahf
subb
push
ret
xlat
mov
pushf
pshufw
mov
jo
ss
ret
sti
push
xor
mov
clc
scas
insb
inc
mov
nop
or
lret
push
cmp
sahf
push
jge
xchg
adc
xor
xchg
xor
xor
rolb
sbb
clc
inc
push
jns
fldenv
pushf
int
push
sarl
add
add
pop
pop
pop
inc
shrb
adc
mov
ja
mov
call
addr16
pop
add
push
or
shrl
sti
stos
or
cmp
stos
jmp
jne
std
cli
lret
stos
aam
add
mov
inc
in
xchg
sub
loop
push
sub
jl
enter
popf
cld
or
fsub
cmp
loopne
xlat
mov
jnp
sti
xor
dec
mov
int
arpl
dec
mov
sbb
and
xorl
inc
xor
lcall
mov
test
fwait
test
js
movsl
add
sbb
stc
jg
mov
out
lcall
xor
sub
jbe
cwtl
add
pop
mov
jo
jbe
outsl
fcom
imul
mov
out
and
mov
mov
rorl
or
sbb
dec
out
dec
jle
lock
aas
mov
xlat
xchg
dec
jge
test
fucomp
sub
jle
xchg
lods
daa
mov
dec
test
mov
dec
lods
ret
and
xchg
rorl
stc
int
stc
incb
filds
loope
jns
xchg
int3
and
jl
or
cmp
stos
out
mov
nop
pop
pop
sbb
insl
cmpsb
sbb
push
aaa
popa
popa
cwtl
pop
and
pop
xchg
and
outsl
out
cs
pop
rcrl
mov
xlat
or
inc
shrl
out
mov
cmpsb
decb
cwtl
mov
and
sbb
aad
push
loopne
rclb
lds
or
mov
mov
ja
rdtsc
movsb
mov
push
pop
push
ficomps
pop
xchg
stos
lret
scas
es
cltd
scas
pop
nop
es
mov
ss
mov
mov
sbb
dec
es
pop
push
cmp
mov
insb
icebp
gs
fistps
clc
movsl
js
sbb
push
decb
cmp
and
xchg
movsb
dec
and
pop
mov
xor
in
or
push
add
aad
push
call
mov
pushf
aas
add
xor
and
or
pop
sti
add
mov
jnp
iret
test
jg
xchg
xor
fcoms
iret
xor
sub
clc
mov
cmp
call
adc
sub
push
xor
in
inc
mov
sti
test
dec
out
fs
inc
push
sar
sub
dec
xchg
cltd
movzbl
lcall
cwtl
mov
cmp
sbb
sub
push
cmc
outsl
push
test
lahf
aam
jo
daa
sub
mov
sub
es
out
xor
cmp
dec
fwait
sub
xlat
mov
scas
enter
mov
rcll
xchg
mov
aam
sbb
mov
addr16
out
inc
mov
test
lea
lds
loope
fnstenv
xor
gs
arpl
or
lds
xchg
push
jbe
ret
adc
inc
dec
enter
add
pop
out
push
add
les
sub
dec
mov
stc
popf
jno
stos
lcall
stos
xor
nop
pop
dec
shlb
dec
cmp
dec
jns
pop
adc
rorb
out
and
lcall
dec
mov
imul
cmp
add
pop
xor
setne
and
sarl
mov
inc
scas
jns
iret
dec
and
jmp
mov
pop
cwtl
lock
inc
in
dec
mov
xor
mov
adcb
jle
sub
xchg
lcall
pop
pop
jns
dec
mov
outsb
insl
mov
loope
ret
cs
jae
cmp
shrb
scas
inc
xor
xor
dec
sti
jg
push
xor
bound
lahf
stc
jne
jnp
pop
test
sbb
movsl
lods
mov
jb
push
dec
push
xchg
std
jno
orb
loop
cmpsl
pop
xchg
or
scas
fcoml
imul
add
mov
nop
cs
xor
aad
stos
cmpsl
xchg
inc
in
jno
jb
daa
fdivl
push
int3
mulb
cltd
jno
mov
mov
add
std
push
jl
ss
or
and
add
xchg
or
ds
test
addl
or
imul
mov
icebp
mov
xlat
fucomi
mov
popf
in
push
mov
push
mov
loop
icebp
jecxz
pop
call
push
and
xchg
movsb
in
icebp
call
cs
inc
xchg
mov
gs
ret
and
and
cmc
push
enter
fsubs
mov
sbb
mov
fwait
das
cmp
outsl
sub
or
adc
push
sub
lods
ljmp
shll
sub
mov
xor
jle
movsb
sub
sahf
adc
outsl
mov
in
repnz
pop
inc
into
jg
adc
inc
xlat
popa
in
test
mov
xchg
mov
xor
cmp
mov
push
std
or
popf
jb
mov
das
and
into
pop
push
cmpsb
out
xor
aam
sub
sub
addr16
pop
sub
shr
push
gs
sub
pop
mov
mov
adc
test
rclb
push
cltd
shl
inc
mov
sub
inc
sbb
mov
xchg
sbb
add
int
mov
xor
dec
mov
clc
orl
outsb
push
inc
gs
add
icebp
sti
dec
repz
push
les
cmp
aas
mov
out
fsubl
cmc
or
jle
jmp
cltd
cwtl
not
insl
nop
push
fucomi
xchg
pop
lea
inc
sbb
jp
jnp
call
fdivl
cld
fwait
inc
or
dec
xchg
sbb
fucomip
push
cmpsl
jnp
shrb
adc
mov
pop
addl
sarl
cmp
cmp
das
jbe
test
in
mov
cmp
sarb
cmpsb
jbe
jmp
ljmp
lock
and
lods
jmp
jg
vmovd
add
mov
out
shlb
adc
inc
out
sbb
xchg
xchg
test
or
lahf
xchg
subb
sahf
sbb
fimull
imul
gs
jbe
mov
mov
jb
and
pop
inc
lahf
jno
loopne
lods
mov
fs
ds
loopne
mov
push
scas
pop
insb
rorl
subb
push
jb
sbb
icebp
in
xor
mov
pop
jae
dec
push
insb
xchg
sahf
rcll
insb
sbb
sbb
and
and
xchg
xor
sub
push
fdivrs
fisubs
js
cmc
into
aas
dec
cli
stos
cmp
test
fwait
imul
dec
jo
shll
push
mov
add
xchg
and
and
dec
sar
les
sub
cld
dec
lods
fldcw
push
jno
repz
fcompl
mov
mov
into
sub
pop
in
aam
js
or
pop
lock
in
sub
orb
cmp
jge
jnp
out
rcrb
pop
mov
jmp
test
pushf
pushf
xorl
pop
mov
cmc
stos
mov
dec
pop
push
pop
call
sub
rcrl
inc
std
pop
ljmp
sbb
jg
aaa
repnz
push
lcall
mov
push
xor
scas
cld
pop
xchg
xor
mov
pop
pop
jp
mov
add
dec
mov
inc
sbb
and
or
fsubl
je
xlat
imul
jo
inc
jb
negb
mov
bound
jae
dec
jb
cld
ss
push
or
mov
sub
xchg
cmc
adc
and
out
fisubrl
xor
sbb
or
cmpsb
pop
adc
mov
dec
mov
push
inc
cli
pop
sub
xor
lock
call
dec
xor
fs
pusha
lock
jg
in
xor
fs
cmpsl
inc
push
fdivp
xor
outsb
xorb
sub
bound
jne
or
and
sbb
in
leave
mov
inc
aad
aaa
add
adc
xor
add
push
mov
decl
pusha
jb
jp
cmpsb
flds
gs
cmpl
nop
pusha
and
andb
dec
mov
xor
jb
repnz
pop
test
mov
xor
out
ret
rol
psrlw
repz
sub
xor
sub
and
ret
add
js
add
test
mov
ret
in
enter
sbb
ss
sbb
aad
adc
sub
cs
push
cmp
ljmp
xchg
into
fdivrl
dec
xchg
enter
jg
and
mov
cltd
jb
in
push
adc
mov
adc
lods
add
sbb
add
sub
cmp
mov
out
out
sbb
jne
cmp
adc
mov
in
test
dec
add
sarb
dec
mov
pusha
ljmp
sbb
int3
ret
sbb
aas
xchg
xchg
adc
dec
and
and
and
pop
mov
aad
push
pop
push
dec
dec
jmp
cmpsl
pushf
pop
inc
mov
out
pop
sahf
dec
cltd
icebp
pop
inc
adc
push
dec
inc
add
inc
lret
test
jecxz
roll
add
andb
fwait
sub
in
add
mov
mov
outsb
pop
pop
das
ds
push
dec
movsl
mov
imul
mov
aad
xlat
dec
push
cmp
out
int
fxch
cmc
addb
rol
push
dec
inc
scas
rclb
mov
jecxz
cld
and
pop
stc
fs
out
jne
mov
mov
test
ja
push
mov
push
stc
jo
sahf
fcompl
cld
mov
rol
mov
orl
mov
xor
mov
int
mov
mov
int
jp
mov
pushf
dec
adc
dec
flds
cmc
jg
rolb
mov
push
fidivl
or
adc
mov
int3
xor
sbb
xchg
hlt
int3
ret
fucom
push
sub
out
loop
cmp
lods
icebp
scas
push
lret
fiadds
lea
xchg
dec
cwtl
sbb
in
das
gs
mov
mov
lea
push
mov
sbb
iret
and
jle
cmpsb
icebp
outsb
mov
sub
pop
jns
mov
xchg
int
add
imull
fnstenv
xchg
lahf
fcomip
adc
xor
cmpsb
push
ja
mov
jb
popa
aas
nop
sub
sub
add
add
and
add
rcrl
sub
in
xor
in
inc
adc
push
mov
sbb
sbb
xor
scas
cmp
insl
sbb
xor
and
imul
mov
das
or
mov
add
fldln2
ljmp
mov
xor
testl
mov
nop
inc
ljmp
jmp
push
test
pop
jb
mov
mov
sbb
lods
pusha
sbbl
or
std
mov
or
inc
cmp
cli
jno
test
sbb
xorb
iret
mov
jg
mul
add
mov
or
cmp
cmp
jmp
mov
and
int
cwtl
xor
sbb
pop
stc
outsl
or
jo
cmp
popa
insl
addb
insl
jmp
inc
imul
mov
nop
stos
and
xchg
cmp
adc
xchg
lds
xchg
cltd
jmp
adc
aaa
loop
jge
dec
add
cmpsl
cmovge
aam
inc
and
mov
out
ljmp
mov
adc
mov
movsl
scas
jb
enter
push
les
jp
jne
inc
cmp
xor
xchg
test
mov
add
mov
loope
incl
pop
sub
jmp
xor
lock
fnstenv
push
sub
outsb
mov
das
jbe
pop
minps
in
scas
cmpsb
loop
xchg
ret
push
dec
and
out
or
adc
rcll
ret
mov
dec
popa
push
push
addb
lock
iret
sub
adcl
push
push
out
mov
jnp
pop
dec
xchg
jle
ror
shlb
shlb
aad
or
adc
mov
jp
dec
bound
sahf
cmp
insl
leave
jnp
icebp
outsb
mov
mov
xchg
xor
dec
xchg
add
xor
aas
jl
and
popa
fucomi
nop
mov
call
jnp
ja
arpl
xchg
mov
push
orl
fmull
cmp
mov
push
mov
fwait
pop
adc
adc
mov
lea
leave
xchg
scas
mov
fcomi
cmp
jp
xor
mov
lcall
xchg
pushf
or
and
loop
es
aaa
add
push
js
shrl
jno
xchg
adc
jo
lds
addb
aas
cmp
in
xchg
cmp
mov
and
popf
jecxz
xor
mov
scas
inc
mov
mov
or
lods
or
rcr
push
test
out
lret
cld
adcl
pop
mov
sub
xchg
popf
clc
xorb
mov
loop
xchg
push
popa
clc
imul
in
xor
add
hlt
dec
or
fcmovnbe
sbb
xchg
xchg
leave
and
pop
loopne
sbb
lods
lcall
inc
xor
sbb
xlat
ret
and
fldcw
jp
movsl
push
cmpsl
repnz
jmp
call
fcmovb
cld
mov
and
mov
sbb
out
adc
out
out
sahf
jecxz
cmp
mov
xor
pop
jmp
movsb
adc
xor
pop
or
dec
pop
sbb
jnp
xchg
sub
loope
sbb
ret
das
xchg
ljmp
jbe
movsb
lods
adcb
mov
out
jb
aaa
loopne
out
jl
mov
sub
lret
call
les
add
mov
xchg
dec
and
mov
push
icebp
lret
dec
pop
je
and
imul
add
lret
sbb
dec
lock
push
or
mov
jno
inc
fs
xchg
in
jle
daa
xchg
mov
push
inc
mov
lods
aad
stc
out
sbb
cld
outsb
into
xor
push
stos
jo
xchg
gs
push
mov
repz
aad
jge
rorl
sub
add
pop
outsl
negb
fisttpl
or
xor
lock
push
test
cli
fiaddl
adc
sarl
movsb
test
rcll
pusha
mov
and
popa
dec
jmp
das
pop
add
xor
mov
xlat
mov
outsl
jmp
cmc
fsubs
cmpsb
aad
and
jl
scas
lock
mov
lods
mov
mov
ret
std
in
mov
sbb
add
cmp
cli
js
mov
rcr
adc
pop
adcl
cmp
lret
or
mov
cmc
scas
pop
dec
pop
movb
push
mov
xor
sbb
mov
push
adc
xor
pop
mov
push
popf
mulb
arpl
jnp
pop
leave
sbb
xor
mov
divl
lods
cli
jb
mov
arpl
xchg
ljmp
leave
xor
push
in
shrl
enter
lods
push
cwtl
jno
xchg
jne
jle
jp
pop
iret
add
mov
sub
jae
js
clc
xor
out
mov
js
cld
sub
and
mov
popf
popf
mov
add
or
cmp
xor
xor
add
mov
jg
loop
fxch
fldenv
scas
or
fdiv
stos
pop
mov
fsubr
bound
pop
outsb
ficoml
jg
or
cltd
addr16
add
add
test
xchg
stos
cwtl
dec
and
mov
sbb
ds
push
mov
push
push
add
mov
movsb
dec
fdivrl
pop
and
lcall
fldt
inc
sbb
mov
xor
pxor
sub
in
sub
imul
adcb
adc
aas
popa
in
sub
mov
mov
sbb
in
mov
pop
arpl
xor
int3
add
stos
shl
and
test
jae
in
pop
inc
mov
adc
outsb
je
mov
add
push
imul
insb
pop
aad
out
or
cmp
ds
sbb
or
sub
pushf
jge
mov
es
sarl
insl
mov
xchg
jg
aaa
mov
iret
and
gs
jle
push
push
pop
cmp
out
xchg
in
.byte
.byte
adc
cmp
add
add
add
push
pop
xchg
popa
loope
les
cmp
mov
inc
cltd
mov
loope
and
or
cmp
mov
iret
cmp
jge
add
das
xor
add
inc
inc
lock
sub
ror
stos
jp
inc
int3
xchg
mov
bnd
ss
insl
int
push
shrb
scas
inc
pop
or
dec
jge
pop
outsl
into
test
aam
test
movsl
adc
repz
fldl
mov
cmp
imul
cmp
inc
scas
xor
mov
mov
dec
pop
xor
push
popa
or
popa
adc
outsb
pop
and
sbb
mov
out
mov
out
fmull
cld
mov
jno
movntq
stos
mov
insl
arpl
into
stos
dec
das
xor
inc
cmpsb
push
or
or
xchg
cmp
xchg
sbb
test
aad
rorl
lock
inc
fidivrl
fs
aas
negl
cmp
mov
cmp
adcb
rcrb
add
lcall
xchg
mov
out
mov
mov
ja
movsb
add
add
pop
or
jl
inc
or
fsubl
dec
sbb
add
mov
push
adc
push
dec
hlt
or
cmpsl
xor
test
daa
push
adc
mov
inc
loop
jb
inc
stos
ret
test
or
pushf
mov
lret
jmp
jl
sub
ror
fdivrs
lds
gs
les
xchg
add
mov
add
imul
push
add
and
shrl
cmp
into
jp
ljmp
.byte
.byte
.byte
.byte
sub
add
addb
push
aas
sar
add
andl
outsb
push
jmp
and
or
leave
bound
rcl
pop
xor
push
mov
mov
mov
jl
rol
xor
dec
outsl
imul
and
pop
clc
out
and
mov
push
push
xor
ja
bound
push
lret
jl
sar
testb
movb
jae
jb
sbb
int3
cltd
lcall
cmp
or
inc
das
ss
inc
ret
dec
xchg
mov
xlat
jp,pn
scas
xchg
in
jge
test
jne
push
cmp
cmp
pushf
roll
in
dec
jbe
pushf
xchg
js
leave
rorb
fwait
mov
mov
cmp
dec
sub
js
repz
ret
test
in
outsb
imul
jmp
rolb
add
cmp
mov
sub
movsb
jl
leave
inc
mov
sbb
xlat
cmp
xor
loop
inc
xor
add
sbb
sub
mov
lret
movsb
mov
imul
es
xchg
inc
data16
ljmp
lods
in
scas
cmpsl
push
scas
cmp
aaa
jno
pop
pop
cs
sahf
jno
push
cmp
or
xchg
and
or
mov
repz
pop
cmp
pop
movsb
add
cli
test
pop
push
push
mov
and
adc
push
sbb
jl
mov
loop
push
mov
repz
xor
icebp
and
shl
mov
xor
movl
sbb
rorl
and
arpl
push
scas
sbb
pop
or
pushf
mov
cmp
mov
sahf
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
cmp
sub
mov
pop
sbb
add
mov
push
jmp
loope
hlt
sbb
fidivrs
movswl
pop
mov
sbb
xor
je
jmp
repnz
sar
lahf
in
mov
mov
test
xor
xor
mov
add
add
test
jnp
sbb
push
sbb
pop
sub
call
dec
dec
outsl
jl
jbe
add
pop
add
jle
mov
dec
jne
mov
repnz
movsb
pop
sbb
stc
push
pmullw
ret
flds
inc
cs
cwtl
mov
es
and
outsb
xor
xchg
cmp
adc
daa
mov
call
sub
adc
mov
dec
sub
ret
xchg
jbe
jg
sbb
xchg
xlat
icebp
and
insl
mov
dec
or
jg
mov
push
pop
repnz
inc
xlat
gs
js
sbbb
insb
dec
xchg
sbb
hlt
cmp
sbb
fisubl
in
js
add
les
hlt
or
imul
mov
out
adc
sub
add
js
jmp
outsb
clc
out
mov
mov
movsl
outsl
mov
jge
xor
dec
and
movsb
scas
add
flds
int
lock
js
and
imul
lahf
fisubl
popf
popf
mov
adc
and
xchg
setle
adc
push
jb
sbb
js
xor
js
add
adc
xor
aad
loopne
add
rolb
sub
mov
clc
xchg
and
xor
and
adc
push
jnp
add
xor
aad
cmc
adc
mov
arpl
push
mov
shrb
push
in
imul
fldl
loopne
fisttps
ret
in
mov
mov
push
out
pusha
push
int
push
fimuls
dec
add
loopne
push
mov
lea
xchg
cmp
or
jno
out
imul
adc
jno
loop
add
in
cmp
mov
mov
das
loopne
sahf
aas
push
jne
xchg
fwait
add
ds
mov
das
add
cmpsb
mov
mov
lds
inc
sbb
add
xor
push
sbb
mov
notl
fwait
shlb
cmpsl
jbe
insl
push
dec
pop
pop
jno
in
inc
cmp
je
dec
push
outsb
xor
and
jg
push
dec
mov
pop
dec
push
icebp
nop
sub
xchg
sub
icebp
pop
dec
push
call
sub
rcrl
popa
jbe
jmp
into
mov
jne
mov
out
daa
mov
inc
test
out
inc
xor
mov
stos
popf
mov
or
mov
push
outsb
lods
shlb
pusha
sub
jno
sbb
imul
ss
push
outsb
push
or
jbe
add
mov
fmull
inc
inc
test
bound
cli
adc
or
outsl
aam
add
cld
ja
cmp
ja
ja
or
std
add
push
cmpsl
in
and
add
jae
xor
loope
les
imul
mov
mov
icebp
imulb
pop
cmp
iret
push
mov
push
mov
lods
in
cld
add
cmp
imul
rol
adc
lods
in
and
out
or
or
lock
ja
mov
std
add
push
es
or
std
add
push
cmp
jecxz
sub
sbb
push
test
int3
xchg
jp
punpcklbw
dec
lret
call
lahf
das
xor
lahf
cvtps2pd
std
leave
jecxz
incb
pusha
push
inc
or
std
or
sar
add
adcl
adc
std
pop
mov
stc
add
pop
xchg
in
add
jg
add
std
leave
jecxz
jecxz
pusha
xor
pusha
pusha
aam
xchg
std
add
inc
jecxz
pusha
dec
lock
int
add
mov
mov
or
rcll
xor
aam
int3
adc
push
popa
aam
leave
and
imul
pusha
push
mov
push
push
mov
adc
sub
pop
fsubrs
outsl
aam
mov
lret
mov
jb
sub
jp
dec
sub
incb
pusha
les
push
fsin
add
dec
or
aam
leave
popa
push
jg
popa
aam
leave
and
insb
xchg
std
add
dec
mov
xchg
add
nop
jecxz
pusha
dec
mov
mov
or
aam
xchg
outsl
cmp
push
imul
call
cmp
push
jge
ljmp
aam
dec
pusha
aam
add
std
add
dec
push
stos
rorl
mov
repnz
mov
push
bound
pop
mov
push
or
and
shlb
loope
bound
pop
mov
jne
outsl
aam
add
sti
lret
shlb
lock
fisubrl
mov
and
arpl
fsts
jae
inc
bound
pop
mov
and
push
mov
sarb
imul
add
arpl
fsts
jae
inc
bound
pop
mov
enter
xchg
adc
ret
arpl
fsts
jae
mov
outsl
pop
mov
enter
adc
call
enter
mov
mov
add
divl
fisubrl
mov
and
arpl
fsts
jae
adc
pusha
imul
pusha
sar
add
xlat
mov
mov
test
pop
lahf
and
popf
mov
or
dec
jmp
icebp
ja
pop
pop
jge
cld
fidivs
xchg
ds
outsl
and
mov
imul
in
icebp
ja
and
jge
mov
or
cmpsl
pop
iret
add
xor
std
add
mov
add
incl
pusha
aad
aad
aam
add
pop
out
cmp
ljmp
aam
jp
jge
rcrb
or
jbe
dec
xlat
std
add
aam
sbb
pusha
aam
cmp
loopne
cli
mov
fisubrl
into
xchg
fidivs
pusha
push
mov
popa
lcall
pusha
aam
lahf
out
stos
cmp
loope
cli
push
ja
test
jmp
adc
or
popa
dec
mov
fyl2x
mov
imul
test
icebp
sbb
adc
or
fiaddl
push
and
and
mov
xchg
jg
scas
xor
mov
rcrl
scas
sub
or
std
add
std
add
std
add
std
add
std
add
std
add
std
add
incb
aam
incl
mov
icebp
add
incb
pusha
aam
add
std
add
std
add
std
add
std
add
inc
or
std
add
std
add
std
add
std
add
subb
or
jge
xchg
jo
ljmp
nop
adc
mov
push
iret
and
fnsave
cmpsb
cmc
cmc
or
sahf
mov
stos
or
and
xchg
shrl
and
jo
dec
je
andb
jecxz
rolb
sbb
repnz
adc
fdivrs
gs
loope
xchg
lahf
push
fbstp
je
ret
out
mov
icebp
mov
divl
pop
jbe
jne
nop
popa
fstps
lcall
and
hlt
cli
add
dec
aaa
ljmp
xor
mov
les
xor
adc
xchg
cmp
lds
sub
ds
pop
aam
add
push
cmp
dec
xlat
jns
shll
mov
jl
pop
fcoml
lret
mov
add
add
add
or
add
and
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
add
lret
add
add
lret
add
add
lret
add
add
lret
add
add
lret
add
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lret
add
add
lret
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
repnz
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
adc
add
lahf
add
add
push
pop
jo
xchg
adc
mov
adc
fisubs
push
adc
nop
mov
push
inc
nop
push
inc
or
outsl
and
inc
mov
mov
pop
enter
and
stc
lock
enter
scas
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
shrb
and
rolb
enter
cmpl
push
arpl
add
mov
mov
adcb
enter
jb
test
movsb
sbb
mov
add
cwtl
xchg
xchg
enter
add
cmp
sbb
jl
push
and
in
push
jo
insb
sbb
and
and
pop
enter
push
jb
cmp
dec
add
orl
and
xchg
add
inc
in
jb
cmp
xor
and
and
add
mov
les
push
add
and
pop
or
inc
hlt
sub
add
mov
pop
sbb
add
lods
or
cmp
gs
or
cmp
sbb
js
and
and
mov
adc
add
push
pushf
int3
push
call
add
leave
jne
inc
fistpl
lret
dec
inc
cmp
or
rolb
mov
add
in
repz
addb
fs
in
out
iret
adc
push
pop
add
add
pop
add
or
call
test
dec
dec
mov
push
add
add
jnp
add
int3
bound
xor
jo
add
jg
jle
add
adc
mov
nop
push
push
rorb
and
call
add
push
pop
add
nop
scas
cmp
inc
mov
push
or
push
jne
add
frstor
sbb
xchg
or
jmp
xchg
add
add
or
sbb
sahf
jmp
add
clc
jg
sub
pop
pop
pop
add
inc
je
repnz
add
xor
jb
inc
into
add
sbb
call
ja
pop
add
add
add
jnp
and
inc
inc
cmpsb
gs
jmp
or
divb
add
into
add
xor
iret
pop
sub
jmp
sub
and
add
aad
xlat
cmp
adc
add
sarl
test
loop
or
or
sbb
sti
cltd
mov
nop
stc
enter
in
xor
adc
pop
mov
cmp
out
adc
int
or
add
push
push
sbb
clc
mov
jne
add
mov
mov
adc
mov
cli
xor
pop
clc
stos
fs
push
pop
fsts
in
popa
push
pop
add
or
push
push
shlb
loop
add
xchg
and
sub
ja
movsl
fsubl
dec
adc
dec
in
sbbl
or
xchg
data16
push
nop
sbb
or
adc
add
repz
nop
out
ja
jns
and
add
out
xor
je
or
adc
jp
cmpsb
jne
add
xor
or
movl
pop
cmp
pop
jmp
pusha
ret
in
loopne
jl
jo
rcrb
shld
add
sbb
lods
adc
mov
xor
test
ljmp
mov
ret
push
dec
and
pop
inc
aam
dec
js
cwtl
dec
add
lds
inc
aad
xor
iret
cmp
pop
add
jle
add
rcll
fstpt
mov
cwtl
orb
pop
adc
cmp
push
adc
cmpsb
mov
movaps
orl
je
mov
test
xor
inc
sahf
jmp
sbb
leave
xor
sub
test
add
push
sbb
jae
ja
add
std
inc
int3
mov
daa
inc
mov
dec
loopne
rolb
cmp
ds
aas
dec
xchg
or
cmc
pop
pop
cmp
movq
add
xlat
fs
call
pop
ja
je
cmc
inc
add
mov
inc
leave
nop
stos
call
das
aas
and
mov
cmpl
pop
movsl
and
rorb
call
jns
pop
aaa
in
jmp
loop
add
aas
popf
xchg
xchg
add
mov
pop
es
or
popa
adc
mov
xchg
loopne
lea
sub
sub
test
lcall
xlat
sbb
or
pop
dec
leave
xchg
xchg
push
adc
loopne
mov
dec
mov
cmp
sbb
data16
decl
cmp
jmp
cmpsb
imul
pusha
stos
mov
dec
and
jp
adcb
cmpl
sub
dec
push
test
push
adc
or
pop
dec
cmpsb
lods
addb
dec
and
add
xor
add
lock
out
or
fiadds
jae
pop
dec
iret
je
sub
rorl
adc
mov
add
pop
ret
enter
out
add
adc
fdiv
adc
dec
repnz
cmp
inc
add
add
lea
sub
pushf
ljmp
andb
mov
ficompl
xor
cmpb
push
or
and
mov
push
stos
sbb
push
add
xor
inc
add
test
popf
pop
adc
add
xor
add
sbb
mov
mov
add
movb
add
push
jne
push
add
jmp
pop
in
test
pop
rol
jl
add
adc
test
aam
shr
push
bndldx
dec
enter
adc
xchg
add
push
clc
mov
hlt
add
adc
xor
cmp
out
sbb
sub
or
xor
cwtl
dec
jne
add
fidivrl
add
dec
in
fistpl
add
jl
orb
sbb
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
and
add
shll
add
or
push
cld
adc
or
jns
adc
cmc
mov
addl
clc
xchg
sbb
pusha
add
adc
movl
mov
ret
or
cmpl
cltd
inc
push
mov
add
ljmp
add
rolb
cld
cld
in
xor
add
nop
adc
popa
outsb
or
bound
xchg
add
add
push
sub
or
add
ret
and
mov
add
xor
test
je
sub
add
scas
enter
test
test
add
mul
push
push
add
cmpsl
jb
sub
sbb
push
adc
add
add
add
fdivs
shlb
or
inc
pop
xlat
clc
add
fsubs
test
jne
add
repz
xor
push
jae
add
xchg
clc
xchg
or
pop
mov
and
lods
fdivr
call
shl
push
jg
not
lahf
fs
pop
lds
nop
adc
imul
push
xchg
jb
cmp
rolb
outsl
mov
sbb
add
adc
sub
dec
add
and
in
mov
popa
xor
jae
lcall
adc
shr
aas
or
shll
mov
add
pop
pop
popf
dec
sub
pop
mov
sub
cld
xchg
add
adc
mov
test
jmp
add
nop
hlt
xor
adc
test
mov
pop
iret
sbb
cmp
jecxz
lret
adc
add
pop
fcomip
sub
jg
cmp
jl
nop
cmp
or
sahf
addl
mov
xor
cs
mov
add
dec
or
sub
nop
lahf
add
jmp
mov
cwtl
mov
sub
sub
test
aam
es
xor
js
imul
movsl
cmp
cld
sub
das
or
adc
ds
or
add
add
call
pop
mov
inc
add
ror
rep
add
aas
movb
sbb
xchg
ret
fsubs
mov
scas
pop
inc
xor
cmpsb
add
adc
xchg
jbe
add
mov
push
add
xor
mov
dec
add
gs
add
repnz
or
mov
jo
push
addl
dec
lods
xor
dec
cmp
orb
mov
cmp
xchg
add
push
addb
sbbl
int3
and
pop
mov
sbbb
ja
sub
add
inc
pop
loop
adc
jle
and
xchg
xor
movsb
mov
pop
cli
inc
int
pop
enter
add
push
es
xchg
add
dec
inc
dec
sbb
mov
jmp
add
dec
xor
mov
jo
inc
xchg
mov
add
fsts
add
mov
cwtl
mov
lret
call
xchg
dec
add
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
fmul
sub
pop
pop
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
test
xchg
push
int3
rorb
inc
adcb
aas
subb
or
mov
cwtl
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
outsl
pop
adc
jne
sbb
arpl
inc
adc
sbb
or
mov
or
jo
pop
or
inc
adc
push
or
mul
dec
push
int3
add
enter
dec
sub
add
inc
pop
sbb
data16
xchg
push
imul
cmp
sub
jno
push
add
xchg
or
jle
add
movsl
scas
faddl
add
je
je
add
and
add
aaa
orl
test
mov
add
push
cmpb
push
adc
or
or
icebp
adc
bound
roll
mov
and
add
lods
and
add
ret
add
dec
mov
add
xlat
pop
mov
mov
add
nop
enter
add
mov
sahf
fdivrs
jne
cmp
mov
sahf
adc
data16
aas
jge
push
sbbb
sub
adc
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
add
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
lcall
fiaddl
loopne
in
sub
sahf
movsb
add
push
sub
or
cmp
dec
pop
sub
cs
push
and
mov
xor
adc
cmp
ja
jmp
jmp
add
lods
je
add
jbe
loope
adc
cmp
addl
mov
rolb
dec
ss
sbb
add
into
in
and
sbb
add
cmp
adc
jp
add
or
jmp
pop
pavgb
mov
jo
inc
and
lahf
jo
or
adc
add
adc
test
test
pop
mov
fsubl
inc
dec
add
je
sub
sbb
enter
add
jne
mov
shll
cmp
push
fs
or
out
jp
cwtl
pop
loopne
adc
scas
add
call
or
xor
add
dec
add
jmp
lret
int3
add
leave
xlat
iret
mov
fadds
lret
sbb
loopne
jecxz
in
and
push
push
push
inc
cmpl
add
leave
push
test
push
popl
paddb
cwtl
or
nop
test
lret
add
mov
cmp
add
adc
sub
sub
jg
lock
cmp
movsb
mov
xor
xchg
jl
push
sbb
or
cmpsb
sbb
inc
cld
roll
or
add
add
xchg
push
and
aas
jmp
add
add
cmp
loope
cmc
fmuls
cmp
jnp
or
add
out
imul
sbb
inc
addb
add
test
lock
out
movsl
add
sub
mov
addb
add
or
pop
into
add
test
adc
dec
fisttpll
xchg
sbb
test
adc
xor
push
pop
lea
adc
mov
xchg
ja
cmp
jmp
incl
jo
pop
lods
mov
lea
push
add
jmp
cmp
cmp
mov
cli
pop
in
sbb
mov
inc
lock
lsl
repnz
scas
inc
add
add
imul
enter
add
add
mov
pop
sarb
or
addb
fwait
pop
pop
mov
mov
fstps
inc
sub
add
cmc
pop
and
sbb
sbb
cmpsl
es
sbb
or
and
shl
push
dec
nop
dec
jno
add
fidivl
shlb
adc
enter
not
push
pop
mov
inc
and
xlat
xchg
outsl
add
sub
jbe
in
lret
jmp
xor
mov
push
add
shr
fwait
loopne
and
and
hlt
into
imulb
adc
add
sbb
sbbb
psubusw
dec
loopne
mov
jae
lret
sbb
mov
pop
add
ret
xchg
loop
push
add
pop
and
je
mov
cmp
xor
add
dec
add
dec
iret
push
add
cmp
cmp
sar
stc
or
sahf
ja
adc
mov
add
je
pop
xchg
adc
shlb
or
stos
cmpsb
adc
stos
jne
add
adc
or
loop
push
mov
negl
push
dec
js
add
xor
iret
rorb
sub
pop
pop
push
fildl
or
sbb
clc
pop
arpl
idivb
add
ds
mov
or
addl
sub
sub
mov
mov
rorb
xchg
sub
dec
jne
testb
sbb
aam
addb
jmp
enter
push
fs
cmc
inc
pushf
mov
sti
and
loope
push
add
icebp
data16
and
js
popa
add
mov
out
sub
dec
or
add
or
xor
cmp
pop
shrb
lea
jo
shlb
add
or
dec
mov
aam
jl
adc
testb
and
cmp
jle
pop
js
mov
fiadds
add
mov
sysret
xor
xchg
xor
xchg
mov
jbe
adc
add
cltd
ret
or
add
pop
add
jmp
cli
push
add
cli
in
shlb
sub
add
jne
repnz
cmp
cmpsb
add
xchg
add
jae
jmp
add
ss
mov
sbb
push
adc
dec
cld
or
mov
add
xchg
lahf
mov
adc
add
mov
or
jo
shlb
add
push
sbb
and
nop
add
jmp
pop
add
insb
adc
add
icebp
add
and
cmpb
xchg
ds
pop
mov
mov
add
push
add
mov
int3
cld
push
fadds
push
push
mov
arpl
call
dec
mov
push
jae
push
sbb
loope
mov
clc
lret
loopne
imul
or
push
mov
adc
cld
or
out
mov
call
mov
jle
int3
and
ud2
add
ljmp
push
dec
sbb
push
push
add
inc
pop
inc
outsl
add
push
popa
outsb
fs
inc
add
jo
imul
add
push
push
dec
popa
jae
add
insb
jne
gs
imul
or
jo
xor
adc
cs
push
mov
adc
adc
sbb
sbb
je
rcrl
jne
ss
dec
fmull
push
pop
or
pushf
divb
cmp
mov
js
xchg
movlps
mov
call
push
testb
or
add
rcrb
add
mov
pop
loopne
pop
mov
scas
dec
cld
xchg
mov
add
stos
mov
sbb
inc
add
stos
sarl
call
fs
add
imul
and
jmp
cmp
aam
or
sbbb
cmpsb
add
jno
icebp
jnp
xorb
jg
add
mov
jo
into
leave
adc
sub
sarb
add
repz
mov
les
push
xchg
sbb
push
cltd
or
push
addl
add
add
fs
jno
add
pop
sub
xchg
add
adcb
push
add
and
or
push
rolb
cld
add
pop
adcb
pop
jmp
add
lock
push
divb
adc
pop
je
adc
jb
sbb
imul
or
or
pop
add
add
sbb
sub
inc
or
dec
push
nop
or
adcl
popa
pop
and
or
xchg
add
call
pushf
inc
test
add
jg
aam
jge
push
call
pop
cmpb
jbe
fists
cld
imul
mov
push
add
sbb
push
add
push
push
enter
inc
mov
xor
push
loopne
adc
add
push
add
mov
fs
rclb
rcrb
std
add
cmpb
popa
pusha
sub
or
jne
mov
pop
pop
ret
cmp
sbb
std
add
outsb
loope
add
inc
pop
dec
sub
mov
push
xorb
mov
push
jecxz
imul
idivl
out
andb
sbbl
dec
adc
loopne
outsb
cld
call
xchg
add
mov
lock
push
adc
out
add
cmpl
out
push
je
push
pop
add
and
sub
cmp
ja
insl
xchg
push
add
xor
xchg
add
stos
popa
xor
lret
or
push
or
ret
stos
push
jne
cmp
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
sbb
sbb
leave
sbb
mov
mov
fwait
dec
lcall
pushl
mov
push
mov
aad
add
movl
stc
rcll
jmp
jae
ss
xor
adc
add
sbb
mov
sub
outsb
pop
je
pop
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
sbbl
jno
cwtl
fadd
cmpsb
push
add
dec
pop
aas
pop
and
add
dec
add
jne
pop
fs
push
out
add
pushf
or
popa
into
je
and
imul
add
dec
mov
add
mov
adc
or
ficoml
and
sub
and
daa
add
insb
rolb
sets
mov
xor
lcall
add
xchg
xchg
add
pop
mov
loop
movsb
add
inc
test
in
mov
and
fdivrp
test
mov
dec
cmp
shlb
push
cli
push
add
push
das
add
jmp
xor
jl
add
inc
or
jnp
add
std
cmp
or
movsb
xchg
ljmp
mov
adc
adc
mov
sub
cmpsl
dec
push
cmp
xchg
fs
mov
add
pop
call
jmp
cmp
int
push
shlb
add
dec
test
add
lret
cmpsb
dec
add
add
push
add
pop
push
mov
cmp
add
and
add
cld
cmp
jmp
pusha
add
mov
sub
dec
add
cmp
adc
sub
int3
add
push
and
jmp
test
std
punpcklwd
push
mov
es
sub
enter
leave
cmp
xlat
mov
and
push
and
sti
rcll
fxch
loope
jmp
or
fprem
push
dec
add
roll
imul
test
pop
ret
jl
add
dec
inc
cmpsl
jmp
lods
cltd
add
sub
cmp
dec
lret
fs
xor
fimull
loopne
rorb
sbb
add
mov
fadds
cli
add
pop
cmp
and
mov
in
sub
cmp
cmp
dec
stos
and
or
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
add
pushl
cmp
jne
and
add
mov
sub
loope
add
jo
pop
add
inc
test
jle
ja
add
add
cli
xchg
rol
add
out
idivl
enter
loopne
mov
sarl
pop
loopne
pusha
test
iret
push
xor
sbb
mov
xor
adc
add
jle
sbb
sarl
sbb
jo
jg
dec
add
push
adc
lea
mov
movsl
and
lcall
sbb
movsb
or
dec
cmc
or
cmpl
nop
pop
mov
or
push
bnd
inc
or
inc
mov
pop
xchg
je
pop
incl
xchg
dec
aad
mov
inc
mov
push
or
add
or
add
hlt
rcll
sub
inc
call
inc
sub
lea
and
inc
lahf
push
push
stos
add
daa
out
mov
cmpsb
sbb
dec
and
shlb
push
movsb
sbb
xor
int
jl
add
andb
adc
inc
cmp
add
cmp
mov
add
mov
lcall
and
mov
push
pop
adcl
in
push
ljmp
add
ja
push
and
aaa
daa
add
dec
push
dec
pop
sub
fcomps
mov
or
mov
hlt
gs
sbb
xor
adcb
cmc
jne
push
cmpl
loopne
ficoml
mov
xchg
add
call
jne
add
sbb
inc
je
call
xor
orb
push
mov
mov
or
lods
mov
ds
leave
insb
adc
ror
mov
add
call
sub
pop
insb
imul
adc
or
or
add
lss
sbbl
shlb
sti
jb
cmp
jg
add
aad
dec
sub
push
push
sub
sub
mov
lret
ja
add
push
testb
pop
jmp
pop
push
outsl
jb
add
outsb
jae
inc
bnd
jnp
hlt
addr16
mov
sub
xor
cmp
sub
pop
pop
xchg
cltd
insl
outsb
mov
nop
mov
add
sbb
mov
add
adc
xor
cs
xchg
sub
mov
cld
lock
push
or
psubsb
push
pusha
push
pop
mov
push
adc
add
or
insb
ljmp
int3
push
and
inc
sub
cmc
inc
shll
add
cltd
sbb
in
pop
add
shrl
outsb
add
in
inc
sbb
inc
jle
sub
jo
sbb
push
add
xchg
or
mov
cld
ret
mov
add
inc
jmp
leave
mov
aas
add
scas
movl
xlat
sbb
es
xchg
inc
or
je
frndint
ljmp
shlb
and
addr16
jge
fnstcw
inc
sbb
or
push
andb
test
shlb
jp
add
mov
xor
dec
es
jecxz
cwtl
push
call
loope
inc
jb
cmpb
mov
mov
sub
push
and
cmp
xchg
dec
jnp
sbb
jg
inc
sarb
xchg
add
imul
out
roll
pop
sub
add
daa
cltd
and
push
xor
bound
or
int
pop
or
test
jmp
in
push
add
push
cmp
jo
movsb
cmp
mov
add
adcb
dec
xlat
push
pop
repnz
pop
add
rcrl
shl
pop
movsb
sbb
lret
jo
xor
inc
decb
sbb
cld
xorb
or
ret
mov
add
cmp
inc
imul
add
sub
jp
push
dec
add
adc
pop
pop
cwtl
test
scas
fisttpll
cmp
mov
jl
subb
inc
cmpsl
push
xor
inc
stc
rorb
sub
adc
pop
cmp
into
push
add
add
inc
outsb
jne
fisttps
add
mov
ja
cli
cmpsl
add
lret
pop
and
iret
dec
clc
cli
mov
push
jmp
mov
push
cmpsb
add
mov
adc
pop
dec
adc
dec
lds
iret
pop
pop
xor
mov
mov
fadds
subb
mov
lods
dec
les
add
and
std
loopne
flds
mov
inc
or
add
push
add
rolb
ret
shr
dec
push
add
pop
mov
mov
xchg
adc
cmovo
out
xchg
pop
mov
loopne
and
addl
xor
cmp
jp
sub
jecxz
and
add
push
xor
add
shrb
and
mov
adc
sub
push
clc
inc
mov
sub
and
add
mov
mov
xchg
mov
pop
dec
movsb
and
add
push
ds
add
int3
pop
mov
dec
clc
sbb
pop
cld
jo
andb
jl
cmp
fidivrl
and
add
inc
sahf
jg
inc
hlt
mov
xchg
mov
rolb
lcall
mov
bound
mov
nop
xor
dec
add
cmp
jle
add
sub
popf
iret
fwait
add
sar
repnz
add
add
dec
sti
push
lock
cli
add
xchg
daa
mov
mov
jp
add
push
dec
inc
jnp
add
inc
aad
mov
jl
cmp
repz
pusha
je
push
add
aad
jne
inc
jecxz
lret
add
mov
nop
xor
incl
fwait
dec
mov
scas
and
addl
outsl
push
jne
shr
clc
ret
cwtl
sbb
loopne
ja
cmp
mov
sbb
cld
add
sub
or
mov
cli
xchg
call
jl
je
and
push
jmp
test
pop
add
push
bswap
sub
repz
inc
add
ficompl
dec
ret
add
push
mov
in
push
add
loop
and
sbb
pop
sub
sbb
lcall
jne
pop
cmpb
scas
stos
mov
ret
mov
pop
addb
je
jmp
add
leave
shll
or
pop
add
push
movb
pop
js
add
pop
sub
sbb
xor
inc
pushl
sub
mov
pop
push
push
add
bound
sbb
call
icebp
push
adc
enter
add
cld
push
pop
mov
hlt
dec
test
scas
jl
push
add
cwtl
cmp
call
mov
add
push
insb
cmp
pop
out
push
add
lods
add
or
or
je
xchg
nop
mov
jle
pop
add
ss
push
mov
add
sbb
fidivrs
rol
add
lcall
sub
enter
or
adc
push
add
adcl
jno
jmp
shrl
xor
fmul
jae
cmc
cmpsl
dec
push
lock
inc
mov
add
pop
int3
test
xchg
cmp
stc
popf
inc
and
or
push
xchg
add
ret
add
pop
mov
jnp
data16
adc
mov
xchg
pop
pop
cltd
push
add
or
sbb
add
sub
movsb
sbb
cmp
push
aas
out
das
push
aas
or
sub
jl
sub
shlb
sarb
add
push
inc
les
cmp
aas
add
cmovp
outsl
cmp
and
test
cwtl
and
dec
add
in
stc
and
enter
cmp
fs
or
inc
add
adc
mov
mov
ret
xor
pop
pop
cli
xchg
mov
mov
movsl
and
xor
loopne
sbb
dec
popa
dec
scas
cli
push
or
jb
push
dec
push
addb
rorb
jl
sti
xor
push
mov
push
orb
lock
pusha
mov
add
pop
fiaddl
ljmp
or
xchg
pop
lods
or
ds
push
hlt
dec
push
push
int
jg
add
adc
cli
je
add
and
scas
xchg
mov
cli
jmp
jge
test
sub
lea
inc
xor
adc
pop
les
add
or
cld
dec
dec
cltd
rorb
inc
xor
mov
jmp
cmp
dec
sbb
add
or
movsb
pop
and
aas
mov
and
stos
cmp
add
dec
jne
push
add
add
cmpsb
movsb
ds
cwtl
dec
jmp
and
mov
dec
mull
inc
add
push
mov
jge
xchg
incb
pushf
xchg
ret
lcall
insb
jne
jg
adc
cwtl
pop
addl
mov
jp
cmpsb
lcall
test
dec
cli
cltd
lock
sbb
pushl
add
ljmp
ljmp
cmpsb
nop
xchg
lds
add
adc
pop
add
cmp
jmp
inc
data16
mov
push
push
adcb
nop
xorb
pop
add
imul
aaa
mov
fwait
lds
or
inc
fimull
and
movb
cld
cld
jae
add
scas
push
pop
mov
stc
ror
jp
add
push
clc
lcall
adc
incb
mov
fcoms
stos
add
mov
enter
sub
outsb
repnz
jge
adc
xchg
add
scas
sub
cwtl
push
push
xor
hlt
addl
dec
jno
mov
popa
inc
pop
add
icebp
inc
adc
scas
add
sahf
adc
int
mov
pushf
sbb
cmp
add
test
and
sub
lds
jne
lahf
cli
xorb
jmp
add
sbb
mov
jmp
sbb
pop
das
xchg
insb
jmp
pusha
enter
adc
mov
add
popa
cmp
orl
inc
std
test
or
daa
jmp
adc
adc
mov
divb
add
pusha
cmp
jae
cmp
sbb
ljmp
mov
jo
or
movd
add
xor
xchg
js
or
or
push
add
dec
mov
mov
aas
fs
xorb
sbb
out
pop
enter
in
cld
jge
push
and
add
xor
int
add
sbb
nop
cmpsb
sub
pop
xchg
push
xchg
pushf
lock
addr16
xor
push
or
cmp
and
divl
add
call
cmpsb
lods
mov
and
pop
cmpsl
loop
add
enter
cltd
add
ror
xor
movsl
aam
cmc
add
lret
adc
push
inc
fst
and
add
lods
sbb
add
into
or
clc
cmpsb
inc
or
cld
int3
sub
add
test
cli
daa
lods
push
add
dec
sarb
add
clc
add
std
mov
dec
dec
insb
pop
daa
test
add
mov
rolb
and
fcoms
outsl
xor
add
push
daa
dec
imul
aam
pusha
mov
add
fldl2e
cmp
fdivs
add
xor
mulps
add
sbb
cmp
or
aad
push
adc
add
xchg
xchg
pop
add
lret
xchg
xchg
ret
xor
add
sbb
rcrb
aam
shrl
and
or
add
adc
push
mov
into
ds
cmp
aad
gs
dec
mov
add
xor
mov
add
sub
add
jno
insl
cmp
xchg
pop
ss
jns
hlt
add
or
dec
adc
push
add
pop
in
inc
pusha
sbb
add
fiadds
and
popl
xor
adc
pop
push
add
dec
xchg
jle
inc
adc
dec
nop
xor
les
or
pop
jo
dec
repnz
add
jg
jl
jge
mov
dec
add
or
jp
dec
iret
pcmpeqd
jmp
gs
jnp
popf
ret
movsl
insb
add
adc
mov
inc
aas
add
cmc
add
call
push
arpl
xor
icebp
xor
divb
testl
jge
cmp
cltd
hlt
jmp
cmp
aas
push
push
add
or
lmsw
in
jp
loopne
decl
sbb
xchg
sbb
xchg
imul
call
lock
incl
adc
pop
loopne
push
in
jl
xchg
lods
jnp
jmp
cmp
or
fsubs
add
lea
sub
push
inc
dec
add
popf
cmp
leave
adc
sbb
lret
push
mov
arpl
and
lods
jmp
enter
test
test
sbb
loop
dec
cmpsl
cmp
pop
dec
and
cmp
cmp
push
sbbb
add
ret
cmpsb
push
add
cs
int
rolb
add
inc
mov
ret
sub
lea
hlt
push
pop
clc
ret
xlat
mov
shll
jne
mov
repnz
aam
scas
cmp
rolb
push
lcall
call
clc
xorb
dec
shll
je
add
push
or
add
sub
pop
sbb
and
mov
xor
xor
hlt
and
adc
adc
sub
punpckhdq
mov
das
inc
xor
pop
clc
push
add
adc
xchg
arpl
clc
imul
push
dec
jp
lock
add
inc
icebp
jne
push
mov
nop
pop
sbb
repnz
cmp
pop
mov
push
or
jp
or
or
jne
jg
data16
adc
hlt
out
pop
jmp
setbe
gs
jne
xchg
mov
inc
mov
jecxz
decb
sti
jo
push
add
adc
lahf
jl
je
clc
xlat
and
add
mov
hlt
inc
push
lahf
add
sub
pop
sbb
int
push
add
mov
adc
call
cmp
cmp
into
orl
js
leave
jne
adc
sub
inc
data16
dec
je
je
add
inc
xlat
inc
mov
sbb
repz
lea
lcall
mov
int3
inc
iret
repnz
rolb
inc
cmp
add
push
enter
add
xor
pop
dec
pushf
jecxz
jb
lret
push
addr16
movsb
mov
cli
pop
xchg
rolb
inc
cmp
dec
adc
test
add
inc
xchg
lods
inc
lock
aaa
jne
add
jo
fbld
incl
inc
rorb
mov
jb
out
push
add
xor
fs
inc
shlb
outsb
sbb
into
push
add
and
loopne
adc
dec
cmpsl
and
add
pop
inc
out
dec
cmp
loope
loopne
add
test
inc
leave
or
je
pop
out
or
adc
nop
jbe
jb
adc
call
push
mov
shll
pop
rorb
dec
aas
fs
lds
pop
sbb
dec
flds
or
push
cmpsl
addl
mov
imul
repz
jg
add
fisubs
and
mov
scas
hlt
jge
repz
stc
data16
or
loopne
lahf
xchg
add
imul
push
add
jb
add
cs
add
adc
mov
add
add
cmp
scas
push
push
jne
add
push
inc
sub
hlt
inc
add
imull
or
or
int3
push
push
xchg
dec
loopne
subb
ja
jb
gs
jge
and
pop
arpl
decl
pop
fcoms
hlt
mov
ret
add
and
add
cmp
sub
clc
xchg
push
add
loope
or
mov
popf
popa
cmp
pop
push
xor
inc
push
mov
js
scas
iret
push
test
and
xor
roll
or
cmp
inc
add
pop
mov
cmp
ret
or
jne
inc
aam
add
dec
ljmp
lret
popa
ficompl
pushf
mov
jle
and
add
push
inc
xor
mov
add
js
pop
add
jnp
cmp
clc
lea
add
decb
loop
iret
jns
xor
sti
lock
add
int
add
sbb
push
add
pop
mov
in
add
aam
mov
cli
rolb
notb
jo
or
push
lea
movsb
loop
and
and
xchg
leave
pop
add
hlt
ret
lds
sti
cld
scas
add
scas
repz
insb
push
xchg
push
mov
leave
pop
push
cwtl
adc
inc
aam
xor
or
inc
jmp
pop
sub
shll
cmp
add
sbb
hlt
xor
dec
mov
or
push
adc
shrb
or
and
lock
mov
imul
mov
inc
sbb
dec
mov
mov
and
pusha
or
add
cmp
xchg
mov
push
and
les
and
leave
dec
add
sqrtps
add
push
add
add
jmp
mov
push
cmpl
sbb
mov
add
ss
inc
inc
leave
sub
add
push
cmp
pop
xchg
shrb
dec
mov
inc
das
add
fmuls
add
subb
push
sbb
cs
and
inc
add
ret
je
leave
adc
add
push
and
nop
mov
pop
push
lock
add
je
mov
mov
outsl
dec
imul
add
sub
cli
inc
xchg
in
pop
ret
mov
imul
push
add
fistpl
iret
push
and
or
push
lret
data16
sbb
fcomps
cwtl
add
push
inc
bound
mov
jb
add
mov
mov
sbb
adc
or
pop
dec
jne
js
decl
mov
mov
cmp
xchg
ret
and
dec
scas
divl
mov
sub
push
and
pop
sbb
fsubrs
inc
ljmp
ja
sbb
loope
pop
and
adc
cltd
mov
cmp
add
stos
aas
pop
mov
add
and
ja
jecxz
je
icebp
inc
jmp
cmp
add
inc
clc
mov
xor
add
mov
pushf
scas
inc
inc
mulb
je
adc
fiadds
push
jbe
push
pop
and
mov
movb
sbb
add
data16
nop
das
add
mov
cmp
je
fwait
dec
fnstsw
cmp
cs
add
dec
mov
es
ret
mov
stos
lret
add
jl
mov
inc
push
clc
fwait
pop
adc
or
ret
inc
rorl
int3
xor
pop
or
adc
pop
add
aas
test
int
ret
les
ret
push
iret
ret
add
jg
add
test
insb
movl
lods
cmovs
pop
mov
dec
or
hlt
pop
mov
lock
in
and
mov
inc
or
add
mov
push
sbb
jo
pushw
pop
jbe
inc
mov
mov
pop
add
sub
or
inc
xor
orb
leave
adc
add
mov
inc
sarl
push
adc
aas
dec
add
je
rep
pop
shlb
pop
pop
jmp
fiaddl
jp
add
adc
clc
rolb
mov
rcrb
pop
dec
pop
dec
clc
add
pop
cmp
jno
mov
cmp
add
ljmp
mov
xchg
stos
cmp
cmp
or
or
ret
sbb
lret
cmp
sahf
and
into
sub
loopne
or
fimull
pop
add
mov
jmp
inc
push
pop
mov
aad
or
pop
mov
dec
adc
rol
daa
add
loop
lret
adc
adc
insl
pop
add
lea
push
jp
add
mov
movsb
pop
pop
test
sub
jb
rcr
scas
add
rorl
sbb
movsb
add
adc
xlat
sbb
mov
jl
dec
je
inc
cmp
lea
hlt
add
rcll
lret
fmulp
jl
add
push
jp
sbb
jg
les
cmp
push
inc
mov
ret
testl
stc
or
xor
jg
hlt
sub
out
out
scas
adc
addb
sbb
add
add
enter
add
mov
pushf
inc
or
nop
ret
psraw
hlt
adc
push
andl
fisubrs
imul
mov
add
mov
and
add
call
sub
call
xor
out
mov
or
jecxz
inc
test
inc
xor
lds
mov
pop
shlb
imul
je
mov
sub
mov
inc
bound
lods
inc
add
push
xlat
fadds
lods
add
js
xchg
xchg
add
push
push
in
add
into
sbb
cmp
mov
push
pop
mov
push
ror
movsl
sbb
nop
pusha
adc
dec
sbb
hlt
daa
lret
cmp
test
xchg
clc
js
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
add
les
dec
mov
cmc
and
out
pop
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
add
movsb
lahf
fiadds
adc
jecxz
sbbl
call
inc
aam
repz
loope
push
jp
add
mov
mov
ds
xchg
push
cmpsb
scas
cld
push
add
jecxz
adcl
int3
cmp
add
in
xchg
cmp
jo
add
pop
cmp
mov
lock
shld
popf
add
add
clc
repz
mov
fldl
and
leave
push
pusha
les
jo
lock
loopne
adc
jnp
sbbb
cli
ja
addr16
rorl
add
call
rcrl
add
mov
push
mov
cmp
or
mov
pop
or
shlb
pop
adc
jns
testl
add
insb
add
std
rorb
pop
orb
push
jb
sbb
shl
popf
add
sbb
std
clc
or
jbe
pop
repz
pusha
sbb
inc
loop
out
test
pop
pop
inc
sar
outsl
sbb
into
push
xor
jmp
push
mov
or
adcl
pushl
icebp
lret
repnz
add
dec
ret
mov
aaa
pop
add
add
sub
push
shrb
xchg
sub
sahf
add
repz
dec
pop
push
add
enter
lock
jb
hlt
cltd
test
repnz
out
add
dec
outsb
and
inc
das
lret
add
test
mov
dec
jl
icebp
or
insb
ret
pop
stos
sbb
loop
rdtsc
add
sbb
add
sar
mov
jae
add
cltd
sar
cmp
scas
aas
sbb
push
pop
cmp
jne
xchg
mov
test
xchg
add
daa
aaa
incb
mov
cmpsb
or
ja
or
or
add
add
clc
and
dec
add
js
add
mov
or
pop
scas
push
iret
sub
pop
mov
adc
data16
in
inc
cmp
xor
push
ds
add
aas
data16
shrl
mov
add
dec
xchg
or
loope
adc
int3
push
sub
pop
mov
shl
clc
inc
dec
add
cmpb
sbb
mov
out
push
mov
and
mov
popa
inc
scas
add
movsl
cvtps2pi
orl
sub
mov
add
movsl
xor
pop
or
fcoms
enter
or
or
add
dec
push
addr16
xor
add
cmp
jge
or
mov
add
sbb
inc
add
decl
dec
jbe
or
popl
jmp
push
mov
add
loopne
mov
lods
loop
jmp
call
inc
and
push
cmp
cmp
sub
jl
dec
and
pop
lock
pop
inc
loopne
sub
pop
sti
cmpsl
push
subb
add
or
add
cmp
adc
add
add
dec
pop
sbb
shlb
pop
add
out
mov
mov
sub
add
mov
sti
inc
add
adc
out
adcb
or
add
xor
aas
ds
cmpsb
outsb
or
jnp
add
mov
lock
call
add
js
mov
pop
loopne
mov
push
or
test
call
cld
xor
mov
and
hlt
add
and
cmc
pop
arpl
pop
fsubl
lea
adc
jg
add
in
cmp
and
push
xchg
xor
mov
xchg
bound
and
cmp
push
hlt
xchg
lock
je
add
cmpsb
adc
cmp
faddl
fdivs
cmp
sbb
mov
inc
les
mov
add
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
cmp
push
and
enter
push
jb
call
and
inc
das
xor
pop
rol
add
adc
call
test
lock
add
adc
sub
dec
daa
add
or
sub
add
mov
je
add
and
dec
ja
cmp
pop
iret
lock
or
icebp
cmp
sbb
movb
and
xchg
test
in
clc
jb
cmp
sbb
andb
and
xchg
fbstp
loopne
loope
loop
ret
cmp
out
out
call
jmp
iret
ret
paddsb
in
jb
cmp
rcrl
inc
sarl
aad
xchg
xlat
mov
jb
cmp
sbb
shlb
and
xchg
filds
enter
jb
cmp
and
add
and
xchg
enter
jb
lret
and
and
sub
add
sbb
add
mov
mov
or
mov
and
mov
cmp
movsl
aaa
call
pop
loopne
xchg
cmp
inc
sbbb
or
imul
and
lcall
push
out
arpl
push
fildl
pop
add
mov
xchg
rcrl
clc
out
iret
nop
lods
out
sub
mov
push
inc
sbb
pop
cmp
add
arpl
add
ss
cmp
mov
add
adc
and
lahf
add
iret
adc
nop
cwtl
jnp
std
cmp
lock
add
add
or
jb
add
pop
push
hlt
pop
mov
xchg
mov
or
mov
cld
dec
sbb
inc
dec
mov
je
adcb
movsb
pop
sbb
and
pop
rol
loopne
addr16
inc
cmpsl
pusha
push
or
push
mov
shll
adc
inc
imul
nop
mov
pop
and
rolb
popa
outsb
xor
push
popf
pop
inc
rorb
scas
adc
add
push
jo
or
jbe
dec
lds
roll
sbb
pop
sub
mov
sub
add
dec
jo
sbb
fidivrl
ja
mov
shlb
cmpsb
insb
sti
popa
jne
cmc
mov
or
pop
nop
int
inc
lea
jae
mov
push
outsl
add
jl
and
cmpsl
nop
sbb
je
jo
es
fidivs
jg
cmp
pop
mov
rclb
imul
inc
adc
ja
add
jae
lds
mov
jl
mov
fldenv
hlt
or
jns
pop
gs
nop
in
in
lret
cwtl
xchg
add
push
je
arpl
push
sbbl
add
jo
pop
loopne
jns
out
mov
enter
push
popa
or
cld
sbb
cmp
push
enter
gs
dec
inc
inc
popa
dec
outsl
mov
insl
xchg
dec
orb
bound
jnp
jae
pop
mov
mov
pop
imul
cmp
test
outsb
cmp
popa
and
les
add
incl
imul
lods
rcrb
ljmp
or
in
stc
xchg
add
lahf
add
mov
mov
push
call
or
add
and
push
ljmp
mov
popf
loopne
mov
mov
dec
cmc
pop
ds
adc
insl
push
add
movsl
addr16
daa
jo
add
pop
std
lcall
dec
sub
xlat
shrl
aaa
pop
adc
cmp
mov
rorb
jp
lock
and
sub
and
mov
mov
mov
outsb
in
rorb
push
out
mov
pop
rcrl
adc
add
repz
je
sub
inc
add
or
clc
jg
pop
sub
sub
cmp
je
add
movzbl
push
xlat
sbb
pop
rcrb
xchg
nop
and
mov
adc
sub
aaa
adc
ret
add
mov
cmp
jecxz
add
js
shlb
add
add
cmp
repz
sbbb
add
push
jge
mov
repz
sbb
dec
sub
adc
nop
jnp
into
sub
inc
mov
jg
arpl
repnz
ret
jno
xchg
or
out
xor
add
xor
imul
scas
fdivrl
adc
and
inc
xchg
add
mov
loope
and
pop
hlt
dec
mov
pop
pop
aas
test
add
lock
adc
add
fisttpl
adc
inc
mov
cmp
add
or
and
dec
aas
sbb
add
jp
mov
pop
mov
aam
inc
test
hlt
xchg
imul
ja
test
mov
push
pop
daa
or
push
add
loopne
arpl
pop
add
pop
or
lods
add
fidivl
aaa
xor
xlat
xor
ss
push
add
mov
inc
call
repnz
pop
rol
movsb
test
out
mov
dec
sub
sbb
in
das
ret
dec
pop
cmp
add
mov
adc
mov
mov
xor
xchg
push
mov
negb
subb
movsb
aad
push
sub
stos
xor
mov
frstor
aas
std
mov
push
dec
jo
sub
sub
stos
push
and
xchg
push
rolb
cmp
loopne
jmp
jae
fldl
sbb
ret
sbb
clc
aas
sub
sbb
iret
rcr
push
inc
sub
cmp
add
sub
fs
add
jge
or
xor
call
mov
and
sub
sub
cmp
flds
mov
push
jge
xor
cmpsl
fsubl
adc
movsl
adc
add
popf
dec
pop
jmp
mov
shll
fmull
pop
push
ljmp
adc
in
and
adc
add
in
dec
inc
repz
add
add
mov
lcall
add
adc
inc
add
mov
add
xor
daa
add
dec
ror
pop
jg
fdivr
xchg
add
inc
and
sarl
ja
add
lock
push
iret
imul
push
imul
out
inc
test
incb
popf
add
jne
push
mov
cmp
push
pop
roll
lods
pusha
or
addl
mov
push
add
add
add
jbe
push
inc
cs
cmp
lock
push
add
dec
push
xchg
leave
or
enter
jb
test
jg
jnp
mov
xchg
add
mov
fs
mov
xchg
jne
add
jg
call
inc
add
clc
mov
ds
repz
dec
aaa
inc
shl
loopne
dec
shl
cmp
movl
rclb
cmp
cmc
add
mov
inc
addb
or
add
sahf
popa
jns
add
loop
cmpsb
xor
xor
add
mov
testl
cwtl
data16
mov
loope
sbb
mov
pop
adc
shll
add
bnd
cmpsb
mov
ltr
pop
cmpsl
dec
iret
or
dec
add
sub
addr16
sarb
add
sub
ret
pop
fmull
pop
lcall
fstp
add
xchg
dec
sbb
or
and
icebp
xor
mov
in
mov
xlat
ret
mov
aaa
cli
xor
movsb
lret
push
adc
roll
adc
lock
stos
and
sbb
mov
mov
out
popf
add
dec
cmp
mov
cmp
jg
inc
int3
fwait
lret
clc
inc
cs
add
pop
push
fs
call
lods
das
xor
push
addl
stos
sub
pop
aam
mov
pop
dec
aam
pop
fiaddl
mov
rol
les
add
gs
movsb
push
subb
xor
clc
dec
rolb
pop
mov
mov
nop
daa
pop
inc
call
and
cli
cmp
in
ljmp
sbb
test
lret
jo
xor
fldenv
push
lods
jae
add
pop
inc
xchg
rcrb
arpl
rolb
add
push
push
pop
dec
add
push
push
sub
je
add
adc
icebp
add
sbb
addb
lods
dec
daa
adc
enter
add
lock
lea
or
jmp
stos
and
add
pushf
ljmp
add
aad
lret
push
lock
sbb
and
or
call
adc
fld
cltd
jo
jge
in
sti
pop
sbb
dec
add
dec
jmp
cld
and
dec
inc
fadds
std
stc
lret
push
rolb
jmp
push
cmp
sub
cmp
and
add
xor
nop
mov
aaa
testl
roll
rorb
add
test
add
pop
adc
inc
shlb
and
hlt
dec
lock
or
cmp
mov
lods
add
and
js
nop
aas
pop
sub
adc
dec
add
call
mov
in
gs
sub
fisubrl
ljmp
xor
and
les
in
mov
and
mov
mov
jne
push
push
lods
xchg
sbb
imul
add
jmp
or
lret
add
shll
movsb
sub
ud0
push
mov
pusha
jl
pop
arpl
add
cmp
clc
sbb
sub
xor
cmp
cmp
aaa
imul
ret
cmp
add
add
xor
popf
push
sti
or
add
test
addb
or
dec
mov
es
je
pop
xchg
lods
and
add
mov
mov
add
cmp
pop
test
jne
add
movzbl
add
dec
js
push
sbb
iret
jp
xlat
and
dec
mov
inc
jns
pop
xor
jge
fiadds
and
and
push
jl
call
mov
dec
fsubrl
lock
out
add
data16
adc
imul
adc
push
cmc
sub
pop
jne
rcrb
repnz
and
add
xchg
add
orl
pop
jecxz
push
imul
inc
dec
mov
ret
xchg
add
lea
cli
sbb
or
mov
negb
jns
pop
xchg
jnp
add
add
pop
push
dec
push
movsl
rorb
dec
sahf
mov
add
or
jne
lret
add
loopne
clc
movsb
jbe
cmp
push
js
orl
cli
test
adc
and
cmp
pop
add
push
mull
aam
xchg
cltd
movsl
jnp
orl
mov
test
pop
mov
das
loope
mov
ret
mov
xchg
cmp
jmp
add
leave
and
mov
test
lods
andb
loopne
add
push
cmp
sbb
mov
out
jmp
or
pop
jl
xor
mulb
movsl
add
dec
loopne
and
lret
sub
xchg
sub
jecxz
aaa
dec
cld
stc
mov
inc
push
and
movl
mov
push
add
cld
mov
add
loope
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
add
mov
popf
cmp
loopne
sub
lcall
inc
iret
call
dec
xchg
rcrl
lret
push
flds
mov
mov
add
adc
xchg
xchg
icebp
add
arpl
out
push
aas
incb
or
into
mov
inc
outsb
and
gs
shll
add
sbb
xchg
xchg
pop
cmpsl
pop
imul
loopne
cmc
xor
movsb
clc
xor
cmpb
mov
inc
ljmp
sub
in
add
adc
pop
jecxz
add
xlat
outsb
add
lea
test
out
stos
cwtl
jnp
jmp
or
scas
rorb
pop
ret
add
add
jle
inc
sbb
push
dec
dec
cmpsl
dec
daa
or
jge
test
sub
cld
arpl
cmp
imul
xchg
sbb
mov
imul
inc
dec
aaa
mov
push
loopne
ret
xor
movsb
inc
push
fdivrs
jae
aam
pop
push
push
test
push
out
insb
pop
cmp
jo
sub
and
push
out
int
and
fmuls
ljmp
dec
adc
dec
ja
cmp
jmp
or
addl
daa
mov
xchg
clc
push
call
jle
add
in
sbb
dec
or
or
inc
add
jle
addb
pop
cmp
cltd
imul
jns
pusha
fadds
xchg
add
push
rorl
mov
adc
jo
in
roll
fdivs
testb
fstpl
arpl
and
or
int3
fstl
mov
cmc
pop
jge
imul
iret
hlt
in
in
and
insl
or
adc
sub
rclb
dec
pop
jo
cmp
cld
add
hlt
mov
pop
clc
pop
push
es
leave
inc
jno
dec
call
add
push
or
xor
push
add
mov
add
das
mov
adc
mov
and
cmpsb
or
iret
daa
add
call
push
pop
negl
add
and
add
pop
and
or
mov
sub
testb
nop
add
jg
sbb
jmp
inc
clc
popa
insb
cli
pcmpgtd
push
xchg
adc
xchg
loopne
lea
out
jle
or
mov
orb
shlb
daa
cmp
jle
es
popa
jb
or
add
xor
insb
cld
add
clc
cmp
pop
lret
add
push
mov
add
lahf
xorb
pop
dec
mov
cltd
mov
icebp
pop
insl
lds
add
mov
sbb
pop
sub
inc
fwait
mov
cmp
int3
add
orl
loope
fistl
std
je
inc
add
pusha
xchg
fcoms
jg
test
sarl
outsb
xchg
jl
ds
inc
xor
cmp
call
sub
cmp
fimuls
mov
add
in
add
push
test
jg
pushf
pop
add
pop
pop
aad
or
hlt
imul
out
loopne
xor
jno
orb
pop
xor
dec
lahf
repnz
stc
sbb
cmp
cmp
jl
or
and
pusha
imul
xor
mov
cwtl
or
mov
lcall
add
push
cmp
cs
imul
and
sub
nop
aaa
js
add
cld
lock
loopne
add
dec
mov
out
add
push
pop
ret
push
adc
adc
inc
mov
aas
data16
enter
dec
mov
mov
push
adc
jb
xchg
sbb
sub
fcoms
cmp
or
addl
push
inc
hlt
xor
mov
aad
stos
dec
sub
mov
pop
inc
and
mov
scas
add
fs
sub
loop
mov
sub
ret
int3
dec
loopne
sbb
dec
sbb
jecxz
dec
imul
or
sub
xor
lret
add
push
mov
add
call
add
mov
fldenv
xchg
or
lock
dec
add
push
xchg
xor
pop
mov
cltd
cld
cli
scas
cmp
loopne
fisubl
cmpsl
in
or
xchg
xchg
sbb
inc
lea
movsb
lret
scas
enter
add
push
cwtl
sbb
mov
insl
add
fldt
pop
jno
pop
pop
inc
lock
sahf
xchg
repnz
test
loopne
stc
test
in
mov
call
jmp
add
mov
lock
lcall
mov
add
cltd
or
incl
in
mov
lcall
add
mov
out
pop
mov
push
push
addb
jne
and
cld
cld
arpl
sbb
sbb
out
add
dec
dec
bnd
jno
aad
movb
add
add
or
sti
adc
aas
and
test
xchg
mov
add
shl
sub
je
sbb
and
push
push
lods
add
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
aad
add
push
test
mov
cld
xchg
jns
add
or
jmp
xchg
aas
pop
and
sarb
mov
pop
sbb
test
xor
push
mov
add
call
add
push
add
and
pop
sbb
push
das
test
ss
jne
rolb
sub
mov
adc
pop
aas
mov
mov
out
loopne
loop
adc
sbb
mov
mov
sbb
add
imul
add
enter
push
jmp
cmp
cmp
repnz
insb
outsl
and
inc
dec
sbb
and
push
push
push
cmp
cmp
clc
jno
imul
inc
pusha
mov
jp
or
xor
xchg
push
addb
cmp
add
push
inc
inc
or
dec
sti
cmpb
dec
test
add
xor
add
fistpl
pop
sbb
adc
add
add
clc
push
add
and
inc
lahf
loopne
jp
pop
jo
push
and
nop
sbb
test
jmp
adc
addb
mov
mov
sub
mov
sbbb
sti
or
xor
mov
in
dec
subb
sbb
movsl
jae
es
lahf
popl
sub
add
int3
ljmp
or
add
cmp
jne
pop
cmp
sti
dec
mov
mov
mov
dec
lods
add
cmp
xchg
inc
addb
cmpsb
jmp
shrb
negb
or
fadds
mov
adc
adc
or
push
xchg
ljmp
andb
mov
pop
adc
add
add
or
call
das
lock
dec
and
push
mov
dec
sbb
pop
and
mov
mov
cld
mov
add
and
dec
add
cmp
and
sbb
jae
adc
add
test
xchg
icebp
add
dec
pusha
mov
clc
sbb
jmp
mov
push
pop
mov
test
pop
les
inc
or
pop
add
jmp
jecxz
inc
pusha
push
addr16
add
imul
or
call
mov
add
pop
and
mov
in
pop
mov
dec
frndint
andb
mov
adc
popa
mov
orb
ss
mov
or
imul
sbb
dec
jg
inc
je
inc
loop
arpl
into
or
test
pop
out
xchg
jmp
pop
bndstx
pusha
rcll
add
in
sbb
ja
ljmp
shr
adc
inc
lock
jne
enter
pop
adc
sbb
or
mov
test
push
rclb
ljmp
push
or
iret
lock
call
add
fbld
push
das
or
mov
xor
adc
add
hlt
cwtl
popf
call
xor
xor
ret
fsts
clc
mov
xchg
add
in
jns
add
test
pop
movsb
rolb
das
insb
push
jne
addb
ljmp
cmp
push
jns
pop
orl
jnp
hlt
cmp
dec
mov
add
add
ljmp
mov
xchg
add
mov
into
push
enter
jno
or
add
jp
dec
inc
dec
or
shr
mov
lahf
aas
push
sti
mov
fcom
insl
pusha
daa
cmp
push
sbbb
orb
loop
or
and
dec
mov
xchg
movsl
dec
movsb
cld
je
test
cmc
addb
jmp
pop
add
adc
stos
add
dec
mov
pop
adc
adc
mov
pop
xlat
inc
cmp
xor
push
sbb
pop
dec
addb
sub
mov
adc
imul
cmp
or
sub
faddl
and
pop
daa
pushf
inc
aam
ja
inc
dec
das
add
mov
push
add
adc
add
fcoml
and
mov
jns
test
push
cld
pop
gs
std
and
int
ret
xchg
and
jmp
add
test
cs
xchg
js
mov
pop
push
jmp
movsb
add
outsl
or
jge
push
aas
je
addl
xor
fstl
pop
lods
add
lock
cmp
push
jmp
je
std
mov
adc
sbb
testl
jne
add
xor
jmp
pop
mov
or
add
add
ljmp
mov
sbb
inc
xor
or
or
jp
lock
mov
cmp
sbb
jne
push
dec
adc
sub
int3
xor
std
add
lcall
cmp
push
orb
dec
add
into
and
mov
cmp
lock
cmp
mov
dec
pop
repnz
nop
pop
rclb
add
clc
sub
lret
and
add
mov
or
clc
cmpsb
outsl
xchg
lods
divps
push
mov
loope
add
in
xchg
adc
jecxz
movsl
add
push
cmp
add
jae
in
jo
mov
pop
stc
inc
lods
sarb
add
add
fildll
je
jae
add
js
lahf
push
nop
clc
or
push
cwtl
jmp
mov
or
roll
push
sbb
js
lock
pop
pop
clc
add
jle
ffreep
jne
cld
cltd
pop
add
jmp
xor
imul
add
add
and
xchg
xor
add
call
mov
mov
mov
incb
sub
dec
sub
cwtl
and
push
mov
or
orb
imull
dec
faddl
jl
and
cmp
arpl
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
fdiv
dec
movsb
add
daa
add
pusha
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
outsb
add
adc
inc
add
cli
and
in
or
inc
bound
jg
shl
leave
xchg
push
adc
lods
sub
xor
pop
inc
sbb
push
jae
mov
adc
sub
add
pop
pop
repz
cmpsl
imul
movsb
xor
cmpl
jle
or
xchg
mov
lock
hlt
test
pop
or
jno
xor
test
add
mov
out
les
pop
add
andb
add
jmp
lock
add
sub
jb
cwtl
inc
dec
and
cmp
cmp
es
fidivs
adc
hlt
and
scas
add
or
jmp
sbb
cmp
jns
hlt
or
mov
push
and
es
es
add
sub
dec
movsl
daa
push
out
popa
invlpg
dec
add
jmp
jo
jecxz
stc
mov
movsl
and
mov
push
add
sub
loop
and
test
xchg
jge
add
clc
push
mov
jbe
cmp
or
and
jae
dec
das
and
xchg
add
add
sub
add
movsb
lahf
adc
push
cmp
jnp
cmp
je
cltd
cwtl
pushf
xchg
test
fildll
add
xor
mov
mov
xchg
adc
push
lea
ds
and
add
inc
ror
fdivl
in
cmp
cli
xchg
jb
adc
jecxz
in
sbb
mov
je
leave
push
fsub
cmp
xchg
mov
cmp
mov
push
cli
push
jl
dec
add
mov
nop
pop
bound
pop
cltd
pusha
add
sub
mov
pop
gs
add
mov
adc
stos
add
and
cmc
lret
in
call
test
incl
or
out
cltd
pop
movsb
jnp
add
mov
adc
dec
jmp
inc
sub
or
mov
sti
add
or
xchg
js
imul
jl
movsl
mov
inc
or
pop
pop
push
test
mov
rcr
xor
add
and
xchg
or
ss
inc
mov
push
add
push
push
cmp
sbb
and
jg
xchg
add
adc
test
pop
daa
cmpsl
mov
mov
pop
jl
add
stos
or
or
loop
and
and
orb
sub
aas
andb
dec
add
or
sbb
jle
add
int3
lea
push
sbbb
in
inc
jl
mov
add
inc
rclb
adcl
stc
jle
fcoms
sbb
sbb
cwtl
adc
inc
xchg
xchg
pop
mov
fsubl
xchg
mov
add
loope
fnstsw
add
aam
cs
movsl
repnz
jle
hlt
add
pushf
adc
leave
icebp
clc
pop
insl
popf
fwait
or
and
dec
loope
jle
cmp
rolb
cltd
fdivrs
mov
or
add
loope
test
jne
adc
fsts
add
add
mov
jnp
das
jbe
fmul
fcom
mov
dec
ljmp
es
add
cmc
lock
add
loopne
add
mov
in
lods
outsl
fs
insb
nop
pop
jns
push
stos
add
inc
xor
add
mov
xor
push
mov
mov
out
add
icebp
rorb
inc
dec
call
mov
hlt
push
les
nop
lock
mov
stos
imulb
hlt
xor
adc
jmp
popa
mov
nop
pop
pop
aad
loopne
cmp
pop
sbbl
pop
add
mov
mov
jno
dec
add
mov
or
pop
movmskps
xchg
sahf
adc
or
push
inc
inc
dec
mov
jmp
xchg
loopne
sub
jmp
jle
je
les
xchg
cmp
mov
dec
clc
mov
leave
into
or
adc
mov
jp
testb
cltd
test
dec
in
and
add
push
adc
add
add
mov
sbb
and
add
mov
adc
popa
push
in
aam
add
cmp
xlat
push
push
push
ds
popl
cmp
cmp
add
push
add
push
and
les
lods
inc
cmp
dec
sbb
hlt
rol
mov
add
jne
cmp
sub
add
lcall
test
cmp
mov
mov
adc
fwait
add
push
fmull
or
cwtl
ret
cltd
push
cmpb
decb
xchg
add
jg
cmp
cmp
loopne
add
inc
hlt
sbb
call
mov
hlt
das
add
sub
jle
xchg
je
add
or
xchg
pop
and
and
jge
mov
xor
lcall
mov
hlt
rolb
ja
sub
dec
add
xor
jmp
ljmp
and
inc
and
aas
mov
push
sub
loop
jbe
nop
dec
sub
pop
pop
and
add
aaa
cli
adc
lock
lock
mov
dec
je
add
lock
aaa
jle
faddl
sbb
cwtl
xlat
add
jmp
mov
cwtl
fwait
push
add
scas
adc
add
mov
jmp
adc
test
add
add
fimull
fldl
and
pop
call
dec
cmpl
add
mov
aam
and
insl
and
cmp
out
adc
dec
mov
in
mov
adcb
mov
xor
sub
repz
add
and
mov
lahf
add
push
arpl
popf
adc
add
adc
jae
sub
mov
add
mov
out
into
add
ljmp
ret
jg
jge
add
das
out
inc
cld
mov
insl
stos
adc
bound
mov
nop
hlt
mov
cwtl
enter
inc
push
or
das
lods
adc
rcll
mov
push
sti
xchg
mov
mov
lahf
add
xchg
add
ds
nop
mov
lea
push
dec
icebp
lahf
out
and
pop
mov
pop
imul
aam
xchg
add
jbe
add
or
xlat
sbb
icebp
pusha
shrl
pop
cwtl
mov
loopne
inc
add
xchg
mov
adc
push
pop
jmp
push
xchg
jns
lock
jmp
adc
scas
data16
or
dec
dec
in
cmp
mov
nop
xlat
mov
xchg
add
lea
cmp
add
sub
nop
add
push
shl
jb
sahf
cmp
mov
or
add
imul
add
and
sahf
push
test
lahf
pushf
mulps
add
loopne
aas
xchg
sbb
xchg
int3
sahf
cmc
pop
popl
pop
les
add
out
aas
sbb
sbb
mov
imul
add
or
imul
repnz
add
cwtl
add
fucomi
cmp
push
sub
lock
push
jg
push
cld
xlat
fldl
in
clc
popf
jne
push
pop
adc
lock
mov
mov
add
jmp
mov
insl
add
sub
mov
push
or
adc
pop
xor
enter
sbb
leave
push
adcb
add
into
push
xadd
adc
and
pop
and
sar
pop
es
add
dec
add
sahf
movsb
jge
fmul
jb
add
jbe
fs
sti
lret
push
enter
cld
pop
jbe
add
xor
or
dec
shl
fbld
je
pop
in
ret
pop
add
jmp
push
add
or
inc
add
push
adc
sub
dec
mov
fdivl
into
inc
add
loopne
aad
dec
inc
cmpsl
shll
pusha
sub
add
insl
loope
push
mov
and
roll
shrl
repz
popf
pop
mov
inc
xor
insl
mov
inc
add
push
in
cmc
into
add
or
push
adc
add
ds
add
xor
aaa
enter
sbb
xchg
adc
jmp
mov
push
add
add
andl
aas
inc
pop
pop
orl
push
or
or
push
test
js
jns
mov
nop
inc
pop
xchg
sbb
sbb
or
mov
in
mov
pop
jb
cmpl
jg
add
es
jno
add
push
popf
adc
inc
add
sub
les
mov
and
dec
test
pop
mov
add
cmpsb
in
and
or
test
add
mov
push
lea
mov
xchg
cs
hlt
cmpsb
add
inc
mov
cmp
arpl
push
movsbl
sarb
les
cltd
stos
cmp
aas
int3
jge
mov
or
ds
popf
mov
lea
adc
lock
rolb
fsubr
pop
cmpsb
xchg
inc
pop
xchg
and
and
test
leave
xor
mov
and
sbb
inc
adc
cli
xchg
sub
out
inc
mov
cmpsl
xchg
xor
arpl
mov
push
mov
jg
mov
sarl
cltd
shl
add
dec
or
movsl
sbb
jae
and
mov
push
call
shlb
ss
sbb
test
lock
jge
pop
test
ret
cld
loop
lret
push
add
lret
movsb
and
lock
repnz
add
das
jl
outsl
dec
and
aam
movsl
test
add
cmp
pop
fildl
dec
inc
fcmovb
icebp
out
add
aam
imul
and
jg
or
add
loop
mov
pusha
push
jge
push
inc
test
and
clc
mov
cmp
add
movsl
lahf
sbb
sub
add
inc
add
stos
or
xchg
bound
jb
adc
lock
clc
add
lcall
mov
stos
and
test
add
jle
hlt
sbb
insb
ljmp
xchg
pushf
ret
call
pop
aad
and
mov
or
or
fmuls
mov
push
adc
add
mov
mov
mov
xor
xchg
data16
cmp
jp
das
pusha
pop
or
addb
and
shlb
testl
test
mov
or
and
jb
xor
mov
jnp
jns
dec
orl
incb
test
sub
mov
push
mov
pop
pop
and
pop
inc
adc
je
jge
inc
dec
lock
add
xor
push
add
pop
push
adc
out
shll
inc
jle
xlat
add
test
xchg
loope
sub
idivb
addb
add
and
sub
sbb
incl
xor
add
inc
xorb
add
daa
hlt
ret
push
idivl
add
mov
jmp
add
mov
and
mov
add
loope
or
rclb
mov
adc
outsb
icebp
add
cmp
fwait
cmp
xlat
mov
add
push
leave
dec
mov
aas
mov
int3
add
shll
jne
sbb
jo
sub
loopne
jp
scas
inc
inc
and
or
or
aam
imul
add
mov
sub
add
mov
es
pusha
adc
lret
cli
cmc
ja
add
mov
je
stc
jns
push
cmp
mov
dec
sti
sub
std
inc
in
xor
cmpsb
pop
jnp
add
je
jl
in
call
add
mov
or
cwtl
pusha
aad
arpl
mov
aas
test
in
in
add
mov
pop
add
lret
add
sbb
gs
sub
ja
add
pop
cmp
add
add
mov
sub
adc
cli
jbe
imulb
movsl
cmp
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
repnz
push
add
pusha
inc
test
les
add
loopne
adc
in
inc
jecxz
dec
mov
jne
cs
loopne
int
mov
leave
mov
add
std
call
icebp
inc
nop
out
or
pop
sgdtl
mov
pushw
pavgb
xchg
add
aad
roll
pop
push
mov
push
adc
xchg
out
decb
nop
sub
sbbb
sbb
push
xchg
shrl
cmpsb
inc
add
and
jae
mov
fdivs
inc
mov
rol
stos
repz
mov
add
pop
repnz
nopl
jp
mov
and
test
dec
add
cmc
mov
add
jns
dec
rolb
jae
loope
outsb
mov
add
mov
imul
in
add
inc
addl
mov
sbb
clc
ss
mov
xchg
and
add
jo
insl
jmp
popa
xor
push
aaa
mov
cli
repnz
adc
cs
push
xor
dec
in
outsb
sbb
mov
xorb
aaa
inc
cmc
and
cld
lods
and
pop
inc
or
movsb
rorb
int3
inc
clc
mov
shll
fimuls
mov
sub
mov
add
mov
or
mov
int3
iret
loopne
sub
icebp
sti
enter
dec
repz
cmp
push
lret
in
push
fcomp
mov
inc
lret
pop
sete
sbb
aas
enter
push
and
dec
rolb
bound
mov
in
lds
gs
cld
ss
adc
add
mov
bound
pop
sub
lea
lock
jp
add
idiv
enter
ss
mov
jb
fs
cmp
and
sub
inc
pop
mov
add
rorb
jo
add
repz
bound
push
and
or
rcr
movb
into
movsl
test
scas
push
sub
add
cmp
add
pop
mov
lret
jmp
rcrb
inc
inc
xor
out
roll
icebp
mov
add
and
cmp
add
xchg
adc
xchg
enter
jae
inc
add
in
jo
popa
arpl
or
js
mov
inc
in
ret
dec
stos
add
adc
rolb
mov
lret
hlt
lock
add
dec
sbb
aas
mov
add
xor
cwtl
adc
clc
and
mov
sbb
rolb
jo
faddl
pusha
pusha
push
cld
xchg
pop
and
dec
inc
push
xor
out
mov
cltd
add
and
adc
and
sub
jp
jl
ret
dec
adc
cmpb
mov
push
cwtl
or
shlb
in
mov
push
and
movsl
or
mov
loopne
xor
add
fdivr
add
jb
and
xchg
dec
xchg
rcl
sub
int3
mov
add
and
cli
push
cli
shl
aas
inc
mov
repz
repz
inc
mov
sti
jno
inc
adc
movsb
xchg
nop
xor
push
adc
dec
pushf
mov
cwtl
std
cld
mov
nop
decb
orl
test
fucom
sbb
and
and
inc
and
aas
into
jo
adc
sti
mov
add
sti
xor
cmp
lock
cltd
js
pop
int3
dec
xor
sbb
or
push
aas
cmp
pop
cmp
cwtl
sbbb
add
adc
lahf
mov
aas
aas
out
add
adc
inc
xchg
rol
es
sbb
nop
mov
push
adc
sub
inc
pop
adc
jge
mov
add
xchg
arpl
push
lret
cmp
add
cmpb
jb
cmp
mov
add
push
cmpsl
jl
std
cld
clc
lds
adc
jg
push
jae
xchg
sbb
lea
mov
jge
add
movzbl
pop
adc
inc
or
or
mov
movsb
add
popf
xor
mov
clc
cltd
pop
add
loopne
or
push
mov
mov
add
jnp
pusha
ret
test
out
add
cmp
xchg
aas
cwtl
dec
and
test
jg
add
cmp
jl
or
clc
sbb
add
xchg
test
cmp
jnp
add
fldenv
sahf
mov
pop
xchg
je
mov
clc
pop
sbb
and
or
push
pop
rcll
mov
push
xor
sub
or
mov
dec
fcoms
sbb
or
xor
pop
out
mov
clc
adc
xchg
cmp
loop
add
andl
push
jo
mov
stos
xchg
push
mov
add
and
or
inc
dec
or
adc
xchg
sub
fdivr
and
jae
ret
cli
adc
jb
je
cmpl
jmp
sub
xor
and
roll
mov
add
repz
add
mov
or
add
push
ljmp
jecxz
jae
dec
lock
jne
stc
sub
jl
mull
mov
xchg
movsb
and
or
and
cmp
rcrb
cli
jae
fisttpll
add
mov
add
push
leave
and
sub
dec
sub
call
jg
push
mov
inc
loop
imul
cmp
test
dec
cld
jb
clts
pop
ret
and
inc
add
fstpt
or
pop
frstor
sub
sub
cmc
sub
add
dec
cli
sbb
inc
jp
add
cs
insl
adc
jae
cli
fildl
adc
xor
jne
fldl
xor
gs
pop
add
flds
imul
popa
sub
push
shll
pop
scas
mov
or
mov
mov
xlat
sbb
loopne
call
inc
add
pop
es
jg
adc
mov
mov
and
aaa
dec
fimuls
pop
or
stc
int3
add
shll
and
push
jle
push
sbb
adc
out
movb
scas
and
xchg
sbb
add
int3
dec
xlat
je
fidivrl
pop
mov
ljmp
sti
lock
jne
jecxz
pop
lods
cmp
daa
je
inc
and
add
out
loop
jne
pop
sbb
dec
pushf
add
and
dec
ret
rolb
lods
cmp
dec
shlb
sbb
imul
out
ljmp
add
mov
data16
mov
js
add
push
hlt
mov
call
add
pop
sub
jl
xor
shll
cmp
xchg
icebp
inc
orl
xor
filds
in
sti
cmp
push
in
shll
add
movsb
jno
add
cmpsl
xchg
sub
mov
mov
roll
sti
jmp
pop
in
test
push
sbb
dec
test
dec
sub
adc
iret
cmp
mov
push
imul
ret
cmp
dec
addb
add
sarb
pop
gs
popa
sub
jmp
xchg
sbb
lock
lea
ret
add
and
jne,pn
add
inc
out
push
mov
adc
and
dec
push
ds
mov
out
cmpsb
and
add
xor
js
add
or
stos
enter
mov
sbb
stc
add
inc
add
mov
out
mov
loopne
int3
add
inc
xor
pop
mov
lret
ficoms
mov
sbb
std
xstore-rng
cmpsl
pop
decl
jne
imul
or
xor
push
in
jle
lods
inc
je
jg
or
or
ret
xor
loope
add
insb
pop
jmp
mov
cmp
pop
inc
addl
mov
push
repnz
in
push
mov
xor
int3
rcrl
mov
mov
add
stc
jp
sub
test
add
cmpsl
gs
or
lea
mov
and
add
data16
testl
sbb
or
addb
je
add
cmp
inc
jo
jmp
cs
add
adc
push
inc
mov
pop
mov
inc
loopne
mov
add
cld
pop
fldt
fsubs
fldl
inc
cli
add
or
mov
clc
add
jne
lea
mov
fwait
mov
in
ffree
sbb
verr
xor
mov
and
or
lea
cmpb
or
pop
cmp
adcl
and
aam
xor
inc
fmull
add
js
push
adc
cmp
or
jmp
subl
xchg
dec
and
and
mov
outsb
cmp
shr
add
ret
push
push
sbb
mov
cs
enter
lret
mov
jo
jns
mov
call
xor
add
iret
dec
testb
add
mov
orb
cmpsl
sbb
add
movsb
push
rolb
and
or
pusha
js
filds
inc
insl
xlat
push
mov
ret
fidivl
repnz
mov
testb
les
in
add
dec
in
jmp
add
cmpsl
and
inc
and
leave
inc
cmp
cmp
dec
adc
mov
sub
pop
je
cli
aas
add
push
idivl
comiss
leave
loopne
sti
scas
aad
pop
call
rcrl
in
pop
loopne
scas
stos
mov
out
call
sarl
pushl
lds
inc
ljmp
stos
push
xchg
cmp
subb
push
adc
pop
cmp
into
je
mov
fisttps
sbb
and
add
test
ds
out
pop
cmp
ljmp
add
loopne
ds
aas
jmp
neg
call
test
sahf
mov
test
pop
and
add
lods
mov
lret
rol
jg
add
add
jae
fimull
nop
cmp
push
test
push
ljmp
cmovns
sub
es
es
cli
hlt
rol
ljmp
call
add
xchg
mov
add
jne
sbb
lock
add
push
aas
add
sub
notb
mov
mov
push
addr16
mov
pop
adc
pop
cmp
test
pop
out
sbb
je
and
repnz
shrb
add
cld
out
adc
clc
loopne
pop
add
lock
inc
and
dec
pop
rcrb
aad
cwtl
add
add
sbb
hlt
add
mov
sti
add
pop
and
leave
lret
pushf
xor
sbb
add
jo
iret
add
pop
xchg
pop
inc
push
sahf
sub
mov
mov
lods
and
xor
adc
shlb
add
push
push
ret
jo
dec
or
push
xor
push
inc
or
xchg
cmc
xchg
sub
add
rolb
xchg
fdivrs
dec
hlt
add
fninit
push
not
mov
add
inc
pop
sbb
mov
or
loopne
add
jno
jbe
push
repz
cmp
mov
push
popa
mov
shl
lods
push
js
out
stc
das
pushf
popa
fisttpl
jl
add
lea
imul
rcrb
sar
mov
mov
ret
rclb
add
daa
andb
jmp
or
add
loopne
add
out
outsb
lahf
add
clc
cmp
ja
mov
aad
jae
adc
adc
ja
add
dec
call
mov
add
push
sbb
lds
cmp
pop
add
int3
add
popf
or
add
xchg
mov
jae
call
add
sub
ret
jp
mov
jmp
and
cmp
pop
sbbb
inc
aaa
add
lea
inc
hlt
addl
call
cmp
push
add
test
jbe
inc
add
xor
int
add
add
adc
adc
inc
iret
sub
add
add
add
xor
or
jo
add
jne
aas
movsl
inc
adcb
jbe
cmp
scas
addb
mov
or
sbb
and
insl
mov
adc
clc
test
jo
nop
inc
decb
js
jmp
hlt
rcll
scas
adcl
xor
scas
or
decb
mov
push
pusha
mov
mov
movsl
push
aas
jne
add
subl
sub
movsb
add
mov
test
inc
add
sti
or
jne
call
push
mov
loopne
js
dec
inc
add
icebp
enter
sbbl
xor
adc
cmp
inc
dec
jne
fsts
lret
cmp
icebp
hlt
mov
divb
add
add
mov
nop
mov
or
xor
addb
aam
mov
sarb
inc
xchg
cmp
clc
add
add
loope
lcall
add
flds
sbb
loop
or
sbb
mov
loopne
pop
mov
sbb
xchg
xor
pop
cs
movups
and
add
xor
scas
push
sub
xor
pop
ja
cli
add
sub
in
xor
arpl
pushl
aas
dec
add
das
xchg
nop
jb
mov
jns
xchg
adc
and
movsl
div
outsl
leave
loopne
xchg
out
add
dec
mov
nop
add
adc
add
jne
xlat
pushf
rorb
les
jnp
bound
jle
cmpsb
add
cmp
mov
push
mov
sbb
js
add
sti
fcomp
push
add
jae
lds
sar
add
out
int3
aas
add
daa
jp
test
dec
outsb
shlb
or
dec
xchg
aam
add
mov
and
xchg
jge
stc
cmp
adc
je
clc
cld
push
into
jl
dec
xor
and
mov
inc
inc
inc
inc
inc
inc
loopne
add
dec
dec
dec
dec
dec
add
dec
push
push
push
push
push
push
inc
push
mov
pop
pop
add
arpl
addr16
push
insb
insl
outsb
pop
outsl
pop
add
jae
jne
ja
js
jns
xor
xor
xor
loopne
add
cmp
sub
cmp
add
pop
pop
jnp
sub
cmp
sub
and
sbb
or
or
lcall
sbb
push
ficoml
xchg
push
push
or
adc
mov
out
cld
mov
cs
decl
movsl
in
lahf
lcall
push
push
mov
insl
clc
dec
inc
add
add
cld
and
shlb
je
mov
add
cmp
mov
cmc
cmpsl
rcl
test
std
add
or
fmuls
lods
jb
mov
mov
add
cwtl
push
and
jge
mov
sahf
ds
mov
xorb
push
je
push
sub
subl
aaa
cs
shrb
jl
das
dec
ja
imul
adc
mov
or
inc
or
jne
out
cs
add
dec
inc
aas
mov
add
or
aas
push
insb
and
daa
sarl
add
rorb
lahf
jg
push
mov
into
and
add
mov
add
add
frndint
js
mov
inc
stos
mov
push
lock
str
xor
out
or
dec
sub
sti
add
add
repz
icebp
pop
add
ljmp
nop
dec
push
adc
cmp
ljmp
repnz
popf
jl
inc
jne
loope
lret
lea
pop
jmp
loop
pop
leave
ja
add
popf
rcrb
aam
add
mov
add
jne
add
adc
pop
insb
or
ret
add
jmp
mov
add
call
mov
adc
std
inc
fxch
shll
xchg
jmp
fmull
lock
pop
sahf
cmc
xchg
sbb
lds
add
les
add
mov
mov
add
cmp
pop
sbb
in
jmp
jg
les
int
jp
push
push
adc
push
add
xchg
cld
add
lods
inc
mov
adc
xchg
daa
cpuid
enter
pop
dec
fidivs
shl
jge
in
push
add
int3
and
lods
ja
mov
add
mov
sbb
push
xor
or
cmp
xor
inc
mov
icebp
add
pop
pop
and
push
adc
pop
and
icebp
jg
cmp
or
sbb
xchg
push
add
adc
mov
jg
sbb
cs
imul
out
mov
push
out
cmp
dec
cmp
mov
cmp
add
in
push
sbb
rcrl
mov
jge
jb
mov
sbb
jno
inc
ja
add
enter
ret
mov
add
xchg
sub
aas
mov
ret
lock
std
loope
mov
pushf
test
and
add
iret
xor
mov
push
jmp
push
add
test
mov
inc
ja
pop
xchg
ja
dec
shl
adc
xor
sarb
mov
inc
inc
ljmp
pop
cbtw
add
xchg
mov
sub
add
das
mov
clc
loop
xlat
pop
xchg
mov
xchg
jne
das
jg
mov
leave
cmp
add
subb
in
add
loop
ja
xchg
lret
add
fwait
insb
cwtl
jle
mov
in
inc
jle
lds
or
mov
add
rorl
jnp
xchg
add
xchg
inc
jo
or
add
or
ss
mov
push
mov
lcall
and
movups
hlt
xchg
add
adc
popa
or
popf
pop
add
in
push
push
js
out
test
ret
pop
fs
lock
sub
mov
ja
push
inc
sub
xor
mov
dec
xchg
out
push
add
dec
ss
cmc
imul
jg
inc
loope
jecxz
jb
dec
xor
ss
out
add
inc
inc
xchg
mov
jo
xor
xchg
add
cmpsb
jno
aad
mov
pop
cmp
add
es
scas
das
ficoml
fsubs
or
mov
add
inc
call
xlat
add
and
ja
push
jns
add
jne
xor
leave
add
jecxz
push
sub
cmp
dec
pop
addb
pop
adc
lret
cmp
sbb
adc
jmp
ja
jecxz
push
out
in
dec
mov
sti
add
data16
fsubrs
xor
xchg
add
inc
fs
xchg
push
cli
pop
inc
popa
nop
addb
jl
stos
mov
cmp
adcb
cmpsl
sub
int
dec
add
push
add
push
lea
add
sbb
andb
call
push
rclb
clc
fwait
roll
cmp
and
dec
mov
mov
mov
sbb
repnz
fstpl
fwait
sub
add
push
out
lea
dec
mov
jle
ss
adc
in
add
fistl
cmp
sub
pop
xor
or
inc
in
sub
loopne
ja
push
aad
sub
fs
inc
pusha
iret
xor
push
mov
fcmovnbe
dec
and
jne
add
xor
pop
add
addr16
pop
add
sub
adc
ret
loopne
imul
sub
pop
add
pusha
jge
add
cld
xor
dec
or
add
movb
xor
mov
jmp
mov
or
rolw
or
xor
xor
pop
into
jne
xor
and
jl
add
pop
negl
pavgw
add
loope
popa
jne
add
push
pop
add
jmp
into
sub
lods
add
inc
divl
mov
orb
sbb
inc
lret
add
add
mov
sub
push
loop
jp
roll
dec
cli
faddl
add
and
and
call
mov
pusha
loope
add
in
daa
and
jecxz
jne
push
out
test
pop
arpl
push
add
pop
push
jnp
xchg
push
push
mov
notb
pusha
push
into
add
pop
inc
inc
cmp
adc
icebp
add
rcrl
xor
into
lahf
addr16
cltd
dec
add
rcr
cli
mov
mov
sbb
add
or
or
rolb
xor
mov
test
add
inc
adc
jecxz
or
sbbb
shll
scas
das
add
movsb
cli
lret
add
les
mov
out
xor
mov
cmp
add
mov
les
sub
push
jne
ret
mov
jl
and
mov
pop
jle
es
les
lcall
into
add
and
iret
aas
mov
xor
insl
nop
cmp
pushf
add
or
scas
xchg
mov
mov
mov
xor
scas
aad
dec
cmpsb
mov
adc
pushl
aas
into
add
adc
adcl
stc
js
lock
add
repnz
in
inc
xor
out
cmp
push
inc
pop
or
push
add
call
cmp
stos
adc
shlb
mov
sbb
fcoms
fadds
cmpsl
loop
mov
clc
test
or
cmp
mov
push
mov
movsl
add
repnz
popf
push
and
lock
sub
jge,pt
mov
test
sbb
xor
loope
add
xchg
int3
xchg
lea
pop
ret
mov
push
lret
dec
in
arpl
out
adc
addr16
out
or
pop
add
pop
xchg
lret
sahf
fldpi
add
lahf
out
cmp
enter
div
mov
enter
cmp
and
imul
ret
dec
orb
sub
int3
test
popl
mov
push
orb
dec
push
adc
es
xor
mov
jns
rorb
test
xor
mov
jge
imul
or
dec
xchg
cmp
add
ja
add
bnd
or
add
sahf
inc
add
arpl
jmp
lret
jo
or
popa
stc
dec
add
sub
insb
js
sbb
lea
nop
or
enter
movsb
xor
repnz
mov
cmp
shlb
aaa
mov
or
enter
mov
movsb
incb
and
fiaddl
lds
sub
loopne
inc
cmp
xor
ds
mov
add
cmp
call
mov
pop
and
rcl
inc
cmpl
add
pop
add
add
and
pop
das
jle
cmp
xchg
sub
and
inc
mov
mov
dec
loopne
movl
lods
pop
fwait
and
mov
in
push
loopne
or
mov
std
and
pusha
testb
mov
xchg
loopne
push
sbb
sahf
cltd
faddl
cli
mov
adc
push
mov
fildl
aas
movsb
sbb
inc
xor
fmull
pushf
daa
cmpsl
hlt
subb
xchg
xchg
jge
push
out
inc
push
hlt
xor
jg
testb
fstpl
adc
add
scas
push
or
cld
xlat
add
aas
xchg
fisubs
sbb
add
pop
mov
test
leave
clc
cmpsl
jle
ds
adcb
push
add
ds
inc
add
les
pop
lods
leave
mov
pop
inc
push
mov
icebp
or
pusha
or
mov
fisttpll
mov
mov
add
pushf
sarb
pop
push
adc
fmuls
dec
imul
inc
insl
jae
test
jo
adc
mov
ds
test
jmp
add
std
clc
rcrb
cltd
lds
add
adc
or
mov
repz
out
test
adc
pusha
xor
ret
mov
stc
outsb
mov
shlb
jb
add
adc
xchg
push
adc
enter
ret
pop
les
jb
mov
pop
jg
sbbl
in
mov
mov
dec
or
cmp
xor
cld
inc
flds
add
lods
dec
mov
dec
mov
hlt
inc
or
lock
loopne
and
in
fiaddl
js
arpl
pop
cmpb
sub
out
add
push
inc
cmpsb
push
sub
and
test
inc
dec
fcom
add
mov
cli
out
repnz
pop
mov
clc
pushf
mov
push
unpckhps
shll
pop
sub
xor
add
jbe
rorb
mov
inc
mov
xlat
sub
sbb
sbb
mov
xchg
xor
hlt
bound
sub
mov
adc
xor
lods
add
shlb
cwtl
mov
add
in
xor
test
adc
test
icebp
dec
cwtl
das
or
rcll
into
fwait
add
mov
rorb
add
out
sbb
push
lds
mov
mov
lods
loop
ljmp
es
pusha
cwtl
mov
clc
add
jmp
xchg
movsl
mov
sbb
shl
cmp
mov
pop
jae
add
inc
mov
add
fwait
shll
fnstenv
stc
sub
add
push
dec
and
pop
xor
fcmove
rcl
aas
or
ja
mov
dec
jne
jp
sti
in
pcmpeqw
lods
add
xchg
adc
adc
cli
lods
add
lods
dec
or
clc
paddusb
aaa
mov
mov
insb
fisttpl
int
sub
sar
mov
mov
push
hlt
mov
add
mull
push
inc
cmp
mov
popa
sub
loope
fcomps
dec
mov
mov
mov
aas
cmpsl
inc
adc
enter
push
xchg
out
push
aad
sahf
add
out
loop
dec
enter
push
inc
and
dec
fwait
add
cmp
add
std
mov
popf
add
in
movsb
test
lods
inc
ds
pop
fs
mov
test
xor
dec
and
and
test
xor
testb
nop
or
call
dec
xlat
xchg
aad
rcl
in
addr16
sub
dec
jb
loopne
or
dec
nop
shrb
test
enter
pushf
dec
and
or
fldl
enter
mov
mov
add
ret
jae
dec
sub
add
popa
hlt
adc
push
mulb
xchg
fs
dec
add
cmovnp
not
cmp
in
inc
fstpl
js
add
jle
adc
mov
loope
dec
add
into
fldl
jb
add
mov
pop
jge
or
adc
pop
add
adc
clc
dec
fwait
add
int
mov
adc
repz
xchg
cmp
pushf
movl
cmp
add
das
push
add
out
xchg
ss
pop
add
and
in
mov
jnp
xchg
mov
inc
jo
sub
aam
mov
cli
lea
and
add
push
clc
cld
sbb
adc
pop
enter
mov
sub
leave
xchg
clc
das
add
adc
movsl
call
bound
add
jle
in
dec
add
or
jg
adc
mov
jne
add
sbb
fadds
das
add
pop
xchg
dec
subb
dec
jne
aad
filds
jnp
and
xor
mov
mov
aam
inc
add
jno
leave
sbb
inc
imul
in
lock
mov
add
loopne
sbb
push
mov
add
nop
or
repnz
jl
xchg
push
in
fcomip
push
lock
loope
jecxz
es
movups
push
divb
pop
dec
xchg
xor
lock
adc
sub
cmc
jmp
mov
imul
add
or
in
jo
inc
cwtl
rorl
pop
push
jmp
lcall
repz
cld
push
and
fmul
cs
in
xchg
out
add
loop
aam
and
or
in
gs
imul
xchg
jb
xor
mov
pop
std
mov
scas
sbb
out
push
and
push
lea
jne
mov
inc
pop
jp
nop
jb
push
gs
loop
aaa
xor
sub
clc
push
pop
les
cmp
cltd
arpl
scas
cwtl
aam
lret
add
lret
add
cmpsl
aam
jg
add
stos
int
push
lock
or
mov
or
dec
dec
pop
je
push
mov
int3
fistpll
pop
data16
sahf
and
jne
inc
orb
xchg
ljmpw
pop
jo
jnp
pop
mov
sbb
mov
rcll
pop
push
fs
es
mov
dec
xchg
imul
add
shlb
jne
or
lcall
sbb
lods
sarb
stos
and
and
lret
xor
xchg
xchg
inc
loope
clc
out
dec
sbb
mov
pop
push
orl
insb
rcl
daa
add
mov
add
push
mov
cmp
sub
lret
mov
call
insl
call
and
xchg
and
in
adc
jl
pushf
stos
jns
sbb
test
xchg
mov
popa
jns
add
adc
repz
add
mov
add
mov
cs
add
pushf
movsb
mov
dec
add
mov
cmpsl
rolb
jbe
inc
pop
movb
add
cmp
shll
imul
lock
add
and
cmp
mov
adcb
push
add
hlt
lea
pop
push
mov
mov
mov
mov
and
jecxz
mov
lcall
dec
into
mov
pop
pop
fmuls
jp
test
add
or
sbb
fcmovnbe
jecxz
in
mov
adc
adc
add
mov
jmp
dec
jno
mov
push
sbb
mov
or
push
xchg
fistl
inc
jne
fiaddl
sbb
push
or
nop
mov
or
data16
adc
loope
adc
pop
rcll
mov
pop
sti
add
sub
adcb
add
pop
lods
push
add
hlt
pop
mov
sbb
add
les
pop
dec
add
mov
add
sub
push
nop
add
mov
insb
gs
pop
data16
out
xchg
or
adc
add
pop
jg
jmp
clc
data16
or
mov
push
mov
push
adc
pop
rol
or
out
add
in
push
sub
mov
inc
adc
xor
mov
xchg
cli
xchg
pusha
emms
sub
xchg
test
pop
push
push
push
add
inc
push
or
add
je
pop
addps
pusha
jmp
or
out
sub
nop
adc
mov
test
mov
sub
add
inc
add
mov
ja
mov
fildl
add
dec
mov
add
push
xor
hlt
sub
mov
test
icebp
cs
dec
fldcw
scas
in
adc
hlt
xchg
add
sub
xor
and
adc
push
sub
dec
adc
add
dec
add
push
add
ret
mov
cs
xchg
add
adc
mov
pop
and
nop
ret
int3
adc
or
subb
daa
inc
xor
inc
push
or
dec
xor
mov
repz
pop
xchg
out
and
repnz
into
jb
lcall
add
mov
sub
inc
rcpps
inc
cmp
and
or
frstor
sbb
decl
or
clc
stos
pop
add
mov
rorb
add
cmp
add
jmp
adc
movb
lock
cmpb
mov
add
or
xor
cmpsl
faddl
jl
addr16
imul
adc
sbb
sbb
test
jl
fldenv
inc
and
push
movsb
xchg
inc
push
inc
scas
into
ljmp
push
in
and
movsl
sarb
or
sbb
xor
push
ja
fsubs
jne
add
sbb
movl
jge
and
add
sub
leave
add
nop
es
and
mov
add
mov
adc
movb
fdivrs
enter
add
or
dec
dec
xor
jbe
xor
sbb
imul
pop
or
movsb
fmul
and
out
push
cwtl
sarb
inc
sbb
pop
lock
lods
push
adc
push
sub
jge
push
add
shll
aad
lods
xorl
mov
add
call
cmp
inc
push
add
mov
pop
sahf
mov
adcb
add
mov
cmp
add
jne
mov
pop
sbb
sub
movsl
push
cmp
lods
inc
in
mov
in
xchg
push
lock
add
pop
cld
push
pop
lock
add
push
jns
pop
sub
daa
cmp
mov
push
lock
push
rolb
and
test
add
pusha
repz
add
cmp
test
cmp
or
cmp
push
add
jae
outsl
insl
dec
add
imul
shrb
call
scas
dec
add
cmp
clc
mov
add
or
cmp
xchg
inc
out
xchg
jmp
fbstp
mov
sub
add
incl
sbb
push
push
xor
dec
rcrb
fstl
mov
add
mov
dec
mov
imul
ja
xor
or
jb
std
add
mov
rol
pop
jg
cmp
mov
das
pop
fsubrl
add
nop
or
sbbl
pop
rclb
mov
add
pop
jns
out
mov
pop
ja
adc
pushl
jmp
push
pop
jle
sbb
add
mov
or
add
or
es
aaa
add
lahf
out
pop
xor
out
jno
ret
ficoms
andb
sub
dec
mov
jmp
outsl
cmp
lods
fistpl
rclb
test
add
jmp
add
xchg
int3
shrb
lock
jbe
mov
cmp
pusha
stc
pop
inc
dec
aas
adc
ja
shlb
sti
mov
sbb
xchg
stos
ret
xor
inc
in
mov
or
jp
add
decb
xor
sahf
les
add
xchg
fwait
ja
add
and
adc
push
sbbb
jmp
dec
mov
test
aas
lods
jg
dec
xchg
mov
mov
xor
and
xchg
ret
mov
xchg
adc
call
pop
repnz
ja
arpl
aas
aas
pushf
cmp
cld
adc
test
test
jnp
pop
sub
shrb
sbbb
ss
sub
pop
jge
fsubl
mov
push
cld
push
adcb
inc
sbb
sbb
call
add
outsl
insb
lods
add
inc
jp
lret
pop
inc
ja
repnz
jg
addr16
cmpl
sbb
dec
xor
push
push
dec
pop
repnz
fcoml
clc
add
xor
add
mov
sub
pop
xchg
mov
jbe
jle
dec
cmp
daa
dec
and
mov
hlt
in
jno
add
fldenv
out
add
popf
push
ss
add
xchg
cmp
stc
pop
add
push
pop
hlt
stos
jecxz
xchg
pop
push
mov
test
loope
testb
and
adc
cltd
lds
or
in
cmp
popf
pop
movsl
push
xchg
cmp
test
xchg
sub
mov
clc
push
pop
and
stc
jle
cli
adcb
sbb
cli
add
add
pusha
negl
mov
jo
adc
inc
int3
add
sbb
mov
and
nop
roll
add
enter
js
cmpsl
lock
add
or
and
clc
in
int3
jns
sub
adc
or
inc
cwtl
add
mov
je
in
mov
cmp
jo
sub
xchg
add
stc
jecxz
and
add
mov
sbb
add
mov
mov
pop
pop
push
dec
push
xor
push
movsl
mov
jnp
and
pop
adc
push
xchg
sbb
outsb
add
into
pusha
in
xchg
add
ret
bswap
clc
nop
jp
add
push
add
add
movsl
mov
ret
xor
jne
pop
lock
cmp
dec
lds
ret
movsb
pop
cmc
push
clc
mov
add
mov
filds
movsl
xor
out
push
mov
push
aas
ret
leave
pop
jge
es
roll
lcall
add
test
mov
xor
pop
cmp
add
fnstcw
jbe
pop
jns
sbb
push
or
jo
inc
inc
push
clc
and
sti
cli
jmp
not
sub
out
add
add
mov
in
int3
jmp
xor
in
pop
rolb
out
or
add
jp
int
cmc
clc
pushf
cmp
pop
push
call
sbb
and
pop
or
jns
jmp
and
neg
xchg
loopne
xor
out
adc
icebp
lods
jmp
add
insb
fists
add
or
push
lret
or
cmp
sbb
add
in
rcrb
inc
cmp
push
aas
cmp
mov
test
enter
popa
cli
xor
sbb
test
mov
or
xor
add
push
inc
in
mov
in
cmp
or
test
add
cmp
or
std
cwtl
inc
fisubl
add
add
pop
or
push
jg
add
out
iret
xchg
dec
in
mov
int
push
adc
aam
enter
add
inc
jmp
ret
jbe
cs
jl
sub
sub
pop
add
mov
je
mov
xor
mov
ficomps
xor
adc
push
adc
sbb
add
mov
shlb
and
pop
fildl
xor
addb
adc
rcrb
sbb
mov
sarl
or
mov
bound
test
flds
and
or
adc
loop
jmp
sbb
mov
stc
sarb
sub
add
cmp
fldenv
xor
inc
call
sub
cmpsb
add
sarl
faddl
add
jno
dec
jle
jne
add
xor
mov
jecxz
clc
lock
cli
jmp
adcb
mov
dec
adc
loop
cmp
fnstsw
insb
xor
adc
cwtl
mov
or
add
loop
in
subl
fiadds
call
in
pop
dec
add
xchg
test
cmp
and
lds
and
push
jmp
clc
xor
push
in
add
push
jmp
loope
loop
or
mov
loop
dec
push
dec
add
pop
inc
dec
adc
test
ud1
dec
insl
mov
daa
aam
adc
and
or
clc
dec
add
xor
push
dec
add
add
incb
fdivrl
and
jo
cwtl
les
loope
inc
ret
pop
testl
decb
fs
int
loopne
push
loopne
add
push
or
jae
lock
les
inc
loopne
aas
movb
add
addb
call
outsl
sub
lea
and
divb
jp
mov
pushl
pushw
orb
shl
scas
jns
inc
or
insb
mov
xor
les
push
inc
jb
aad
sbb
cltd
or
add
ja
outsb
inc
xchg
in
aas
add
cli
scas
inc
xor
add
cmp
jge
or
and
fsubl
sub
test
rorl
cmp
sub
out
add
add
mov
add
xchg
clc
shlb
ljmp
jge
sbb
lds
add
icebp
shr
adc
add
mov
movsb
push
cwtl
call
imul
pop
movl
out
cltd
loope
push
jp
push
or
mov
inc
or
mul
stc
out
jmp
sbb
and
imul
adc
paddb
push
stc
cli
stos
pusha
into
cs
fisubl
dec
shll
push
or
lsl
pop
lahf
scas
add
scas
cmpb
pop
and
test
xor
jb
loopne
add
xchg
icebp
stos
mov
xor
or
inc
xor
mov
add
xchg
sbb
adc
test
jo
fcomps
cwtl
subb
sbb
mov
inc
ljmp
adc
push
mov
lcall
es
pop
mov
inc
adc
hlt
xor
mov
cmp
loop
push
icebp
sub
inc
incl
and
xchg
jno
std
ret
loop
dec
lock
cmp
mov
cmpsb
and
add
fmull
mov
dec
fldl2t
mov
cmp
add
bound
call
mov
mov
loope
xchg
shrb
loop
xlat
sub
movsl
mov
cmc
add
push
pop
pop
es
pusha
les
add
rorb
jmp
mov
sbb
jle
add
xor
add
sti
adc
push
or
mov
add
das
inc
call
dec
subb
inc
add
fs
mov
psubw
scas
hlt
mov
adc
xchg
xor
shll
cwtl
enter
add
mov
xor
daa
cmp
xchg
add
loope
fildll
mov
pop
aaa
ret
add
lock
xrelease
push
xchg
ficoms
testl
in
adc
inc
aad
xor
xor
add
add
pusha
sbb
cmp
add
mov
jle
aas
mov
cmp
sbb
and
inc
add
xor
mov
cli
rolb
and
cmp
add
sub
repz
mov
push
ror
divb
push
xchg
adc
in
mov
addb
add
mov
popa
setge
xor
adc
add
cmp
or
in
push
sbb
inc
and
and
add
popa
test
add
adc
enter
call
lcall
cmp
mov
hlt
mov
cmpsl
pop
fwait
inc
incb
xlat
out
add
sbbl
push
cmp
bound
add
aam
cmp
cmp
shl
and
out
and
cmp
aam
flds
adc
mov
add
and
iret
add
mov
inc
nop
rolb
clc
jl
pop
add
sarb
or
gs
lods
les
add
stc
push
out
and
popa
add
inc
xchg
int3
out
add
mov
test
xchg
ljmp
add
inc
mov
in
xchg
adc
sbb
cmp
add
jo
or
pop
adcl
ret
inc
adc
ret
mov
cs
push
add
call
les
adc
add
pop
cmp
adcb
mov
test
nop
or
xchg
int3
rorb
or
sub
jge
out
ud0
xlat
cmp
inc
rcrl
add
xor
loopne
test
outsl
and
push
adc
shl
incb
and
sbb
fiadds
add
pop
adc
mov
inc
rolb
std
popl
imul
mov
mov
rcl
sub
sbb
adc
nop
ret
xchg
add
mov
clc
mov
popa
ljmp
arpl
mov
xchg
not
daa
mov
add
cs
sbb
pop
push
add
push
pop
std
jl
dec
pop
cmpsb
aas
cld
sahf
call
and
imul
mov
add
sub
pop
jg
add
ds
xchg
dec
xlat
add
daa
je
add
loop
push
stos
out
inc
add
mov
call
dec
xchg
addb
cmp
test
or
ljmp
inc
dec
incl
adc
xor
adcl
cmp
push
add
pop
mov
sub
jmp
js
fisttps
out
mov
pop
rcr
inc
cmp
mov
adc
mov
rorb
and
add
pop
fcomp
jmp
imul
push
xlat
out
icebp
or
add
mov
push
mov
cwtl
insb
sub
out
push
adc
mov
out
push
add
ss
cli
add
jge
sbb
sbbl
icebp
or
test
aas
and
add
add
scas
push
repz
repnz
jbe
xor
add
dec
int3
insb
outsl
insl
xchg
add
enter
or
ljmp
mov
and
test
jmp
cmc
jno
aaa
xor
pop
or
xchg
sti
xchg
and
cmp
lret
fldt
or
jle
add
repnz
aam
dec
aaa
sub
xchg
mov
inc
or
or
add
notl
jp
add
addr16
dec
fmuls
mov
inc
cmp
add
int3
aaa
dec
or
sbb
cltd
in
xor
pusha
into
or
cld
fiaddl
pushf
and
or
push
adc
adc
xchg
out
add
lds
addr16
jmp
jg
add
shrb
enter
clc
sub
xchg
add
sbb
sub
or
jle
and
les
js
pop
adcl
sbb
jo
dec
jmp
sti
call
sbb
or
adc
mov
mov
xorb
decb
jmp
out
nop
push
adc
or
add
jno
cs
pop
add
or
cmp
call
jmp
les
sub
add
inc
jne
xor
push
bound
call
push
jae
add
and
or
cmp
cmp
sub
cld
lret
call
xor
or
sbb
aas
rclb
ret
jae
add
loop
sbb
push
inc
xor
push
sbbl
inc
add
repnz
and
out
inc
or
dec
movd
test
xor
nop
sbb
adc
add
sbb
bnd
fmuls
cli
js
mov
cmp
pop
mov
mov
aaa
das
jno
cld
verr
pop
out
and
out
add
cmc
xor
inc
movsb
adc
in
sbb
jns
call
pop
push
push
mov
jp
dec
xchg
jnp
data16
and
inc
mov
aaa
movsb
adc
test
and
dec
xor
adc
scas
ja
pop
les
dec
mov
lods
add
jno
push
loopne
adc
jns
jg
or
les
loop
cmp
push
add
js
subb
add
pop
mov
lea
cmp
and
bound
mov
les
jns
cmp
mov
addr16
shl
cmp
hlt
mov
orb
test
xor
lds
iret
add
aas
xor
outsb
roll
add
punpcklbw
pop
adc
mov
add
test
add
push
nop
add
cmpsb
orb
mov
call
xchg
aam
jno
fcomp
adc
jmp
repnz
cmp
xor
jl
inc
or
adc
cmp
inc
push
cmpsl
daa
popa
xlat
jle
sub
ss
leave
or
inc
inc
lcall
fcoms
ud1
test
mov
and
add
and
test
ds
sbbb
sub
cmpsb
repz
aas
movsb
ret
push
pop
cltd
loopne
and
xlat
adc
test
subb
hlt
out
rcpps
mov
push
pop
mov
in
xchg
add
icebp
sub
js
and
lret
enter
cli
mov
jbe
or
fiadds
xchg
push
pop
xchg
or
xor
out
add
dec
clc
aad
add
dec
add
imul
jmp
sub
add
leave
sbb
push
xor
das
add
pop
mov
jb
call
pop
lea
shl
test
unpckhps
rcr
scas
arpl
pop
int3
or
jnp
add
xor
pop
jmp
sti
add
nop
jns
dec
aad
jnp
cli
jle
addl
idiv
add
lea
aam
xor
add
sub
fucom
sbb
sub
add
nop
sub
add
sub
sbbb
in
xor
jmp
adc
fcomps
mov
adc
dec
pop
push
add
aad
mov
in
sub
scas
aaa
mov
sbb
lds
jne
mov
add
jns
pop
cmp
les
add
mov
push
jl
test
aam
cmp
cs
pop
push
and
sbb
pop
or
xchg
adc
in
cmp
sbbb
inc
cmp
and
pop
and
cmp
sahf
jl
add
and
shll
inc
jg
out
iret
add
pop
xchg
lret
xchg
shrb
cmovnp
pushf
js
xchg
popl
fisttpl
xor
push
push
pop
cmp
loopne
sbb
repz
mov
sldt
push
push
adc
xor
jnp
cmp
pop
xchg
adc
sbb
sub
add
fdivr
jecxz
test
cld
mov
xor
push
pop
add
sub
lods
incl
jb
test
adc
daa
in
roll
mov
jp
mov
and
movsl
jns
arpl
into
push
lcall
pushf
cmp
leave
les
imul
dec
into
jmp
adc
pop
mov
ljmp
aas
ds
pop
xchg
or
inc
rorb
add
or
movsl
flds
dec
movsl
mov
std
adc
jmp
add
inc
pushl
adc
adc
les
inc
in
jns
filds
mov
outsl
out
sbb
mov
jl
xchg
xchg
adc
add
adcl
jns
add
jae
loope
loopne
push
adc
shrl
fimull
push
and
cwtl
aad
lret
sbb
or
adc
pop
or
push
hlt
mov
les
add
cmp
mov
jecxz
and
adc
pop
in
push
and
jo
imul
xchg
or
add
les
mov
arpl
pop
mov
adc
mov
fisubrs
pop
aas
and
push
inc
xor
inc
test
enter
and
mov
adc
or
clc
cld
pop
aas
mov
add
or
orl
cltd
les
and
jle
adc
mov
cmpsb
or
adc
push
jp
and
inc
icebp
pop
rorb
pop
pop
lcall
adc
out
mov
repnz
xchg
jmp
pusha
out
sahf
xor
das
lock
xchg
pop
lahf
shl
idivb
mov
pop
jle
pushf
pusha
pop
push
add
add
sub
in
pop
push
xor
addr16
cmc
add
add
fnstenv
popa
inc
hlt
xor
fcomip
mov
mov
das
add
mov
in
push
and
jl
add
push
scas
adc
fcmovnb
and
or
add
push
add
adc
es
mov
dec
ret
xor
ficoms
clc
mov
or
dec
es
popa
cmp
add
add
add
push
ds
xlat
and
sbb
xor
lret
orb
and
push
or
cmp
dec
std
add
sbb
mov
push
pop
push
aam
andl
sbb
adc
add
push
mov
xor
leave
pop
cmpl
add
orb
xchg
fidivl
add
mov
push
dec
stc
mov
aas
add
das
bswap
dec
adc
stos
pop
cmp
je
sbb
inc
cmp
xor
add
rcll
add
pushf
sbb
out
jno
mov
adc
push
sub
mov
add
or
adc
sub
inc
sbb
mov
jbe
cmp
add
add
push
nop
add
sti
xor
dec
xchg
add
test
add
add
repnz
loop
add
pop
mov
and
jl
xor
stc
xor
leave
clc
jo
adc
icebp
fisubrs
loopne
shl
repz
mov
ja
movsb
pusha
adc
lods
push
cmp
out
add
add
sbb
je
mov
sbb
mov
repz
add
call
xchg
mov
adc
and
test
mov
shl
movsl
into
imul
sbb
inc
faddl
out
in
push
sub
jge
xor
cmp
add
inc
xor
enter
push
add
clc
mov
std
or
cli
lods
push
add
jb
pop
xchg
xor
stos
mov
ljmp
sub
hlt
icebp
push
stc
daa
mov
lock
add
xchg
xchg
outsb
enter
mov
and
and
adc
fs
dec
divb
ds
cli
iret
clc
sti
jge
cld
cmpsb
sbb
jmp
pushf
push
mov
pop
dec
call
das
push
and
add
add
add
loopne
movsl
jno
movsb
cmp
inc
lods
sarb
imul
inc
adc
push
enter
icebp
add
loop
stos
inc
push
movb
andb
sbb
jb
add
xchg
and
mov
pop
jno
test
stos
adc
pop
sarb
shl
les
sub
jl
add
pop
int3
push
mov
adc
and
rclb
out
nop
andl
nop
enter
lahf
dec
popa
add
out
adc
add
adc
inc
in
or
add
out
daa
add
cmc
shrb
in
cmc
push
mov
inc
add
dec
inc
cmp
cmp
add
push
repnz
mov
jl
add
mov
mov
call
add
test
stc
adc
lock
xor
and
cmp
test
mulb
sub
xor
les
mov
andb
push
inc
inc
mov
cs
jae
fs
sbb
add
inc
fisubrs
and
cwtl
xlat
clc
enter
mov
aam
mov
mov
mov
cmp
roll
ljmp
dec
and
push
rclb
repz
loop
mov
daa
data16
push
and
dec
nop
jecxz
push
idiv
jg
push
es
add
inc
dec
jne
testb
cld
ja
mov
add
or
add
je
jcxz
and
mov
sbb
ret
add
aad
xchg
das
xor
pop
pop
jecxz
mov
jmp
pop
xor
insb
xchg
addb
xlat
jo
addb
jns
push
jg
js
dec
pop
mov
lds
int3
andb
orb
ror
or
jmp
or
pop
leave
rorb
orb
enter
sbb
sbb
fchs
sbb
rcr
fidivrl
inc
sbb
push
je
jo
sub
pop
sbbb
faddl
adc
aam
sbb
inc
adc
pop
adcb
inc
lock
mov
lret
rcl
int
rcl
shl
sbbb
xor
loopne
add
repz
jb
je
jo
add
add
shlb
loopne
add
cld
cmp
inc
add
cmpb
loope
leave
cmp
cmp
sti
clc
cmp
add
stc
cmp
loopne
or
sbb
inc
jmp
shrb
sub
loope
in
call
sub
sub
mov
into
or
repz
shll
mul
jecxz
outsb
and
shlb
and
cmc
mov
cmc
mov
mov
or
sub
cmpsb
xchg
shl
out
cmp
pop
insb
shrl
add
outsb
inc
scas
call
imul
stos
add
test
push
cmp
sarb
jg
jg
jg
jbe
sbb
jo
add
mov
jl
mov
je
sbb
ja
mov
sbb
jb
mov
mov
jae
inc
mov
out
jo
inc
mov
push
rcll
xchg
rolb
cmp
cmp
sbb
add
xchg
adcl
pop
sbbl
enter
push
sbbl
loopne
sarb
aas
inc
cwtl
mov
dec
aas
mov
dec
into
mov
push
dec
xchg
arpl
dec
inc
mov
inc
roll
shlb
inc
inc
xchg
sbb
loopne
sbb
cmpl
cmp
call
jecxz
in
pushf
mov
pop
rcrl
popf
movsb
push
shlb
mov
inc
and
and
push
add
nop
mov
mov
cmp
pop
popf
mov
pop
pop
pop
jle
inc
or
sbb
or
mov
call
mov
mov
add
jle
fs
pushf
add
adc
push
xchg
or
mov
mov
add
sbb
xor
add
sub
arpl
add
shrd
data16
sbb
pop
loopne
push
push
cld
add
cmp
or
add
ret
shr
add
pusha
mov
sar
jne
dec
or
add
call
pop
clc
sub
clc
cld
lds
pop
adc
add
jmp
jl
hlt
jg
jae
pop
inc
cld
imul
pop
inc
shlb
lods
cmp
cmp
pusha
add
jo
add
xorb
notl
add
mov
xchg
pop
and
xor
movl
jbe
lahf
lock
rcl
push
add
jne
imul
cwtl
mov
xchg
add
push
jp
stos
inc
pop
mov
jg
cs
add
lret
mov
pop
add
mov
stos
add
lret
sbb
add
inc
xorl
or
out
add
and
clc
aad
jno
add
push
pop
jle
and
insb
inc
mov
sub
fiadds
repz
and
pop
daa
and
add
pop
aad
add
add
ret
xlat
add
in
stc
cmp
sub
add
cmp
rcr
sbb
or
mov
push
adc
repnz
jno
add
xchg
arpl
into
rorl
pop
or
dec
ret
adcb
mov
sbb
fdivrp
loopne
ljmp
stos
mov
dec
outsl
mov
and
notl
mov
sbb
adcb
movsl
icebp
ret
nop
adc
and
sub
call
popl
test
addl
rolb
mov
sarb
cwtl
sub
xchg
jbe
add
mov
push
push
push
cli
mov
mov
arpl
stc
lods
rolb
and
xchg
pop
adc
out
pushf
aam
add
fsubs
ret
mov
es
push
lods
inc
dec
sub
inc
adc
and
inc
push
inc
movsl
xchg
hlt
xor
rclb
or
and
and
xor
inc
jmp
sbb
or
xor
adc
dec
dec
lods
testl
add
add
or
in
jb
push
push
lock
add
in
leave
repnz
inc
xor
adc
add
xchg
mov
mov
in
pop
mov
push
fs
xchg
jno
mov
arpl
sub
scas
fs
push
aas
popf
dec
sbb
test
xor
add
pop
iret
and
sbbl
stc
inc
cmp
dec
pop
and
inc
push
cs
aam
inc
dec
es
or
icebp
pop
push
test
sub
mov
ss
xor
repz
or
inc
repz
lret
lock
xchg
mov
icebp
mov
adc
sbb
rol
adc
add
dec
test
test
les
and
push
loopne
sbb
cld
and
inc
lret
inc
repz
mov
sub
or
adc
and
jns
pop
add
pop
jl
push
dec
dec
or
push
or
shrb
movsb
mov
dec
add
xchg
inc
iret
push
jmp
andb
je
push
add
ljmp
add
repnz
dec
mov
mov
imul
add
shr
in
jbe
pop
sbbb
inc
mov
add
int3
xor
dec
add
mov
int3
add
ret
mov
mov
test
cld
dec
popf
push
jnp
pushf
pop
aas
dec
jno
sbb
pusha
into
test
test
and
add
ret
xlat
in
add
cmp
in
add
push
std
pop
xor
and
add
aas
lods
clc
adc
push
push
push
add
je
jno
aas
jo
add
lret
mov
xlat
pop
sbb
adc
nop
push
or
pop
push
mov
in
pusha
inc
inc
sub
ds
mov
adc
sbb
push
ret
sbbb
or
leave
rep
in
cmpb
jae
adc
pop
lret
clc
inc
fldl
in
jo
ficomps
sub
jmp
iret
push
dec
in
cmp
pop
out
les
dec
sub
xlat
xchg
mov
add
pop
aam
dec
or
ud0
aad
add
push
mov
cmp
sahf
pop
pop
clc
movsb
loop
mov
pop
jns
add
xor
or
stos
shl
icebp
and
ss
clc
insl
cmc
and
in
push
push
push
lcall
adc
cmp
cli
les
lock
mov
xchg
ljmp
xchg
mov
cmp
repnz
add
dec
jg
psllq
jecxz
mov
mov
nop
cmp
and
je
inc
dec
inc
pop
cmp
xorl
xchg
jl
movzbl
push
sbb
mov
add
stc
pop
sbb
jl
jg
test
hlt
inc
cmp
gs
jne
add
push
sar
fmuls
rol
mov
sub
jns
lods
and
out
mov
mov
sarl
push
call
into
insb
sub
dec
add
pop
push
inc
enter
test
push
roll
ljmp
mov
add
lea
mov
nop
add
jne
pop
push
xor
cld
add
adc
std
inc
rclb
fsubs
mov
test
cli
jae
les
pop
adc
das
add
sti
xchg
cmp
jne
inc
xchg
mov
lcall
xor
add
out
stos
xchg
mov
and
inc
popf
shl
xor
decl
mov
pop
mov
add
mov
shlb
jae
dec
add
cmpl
test
mov
adc
stos
adc
or
lahf
addr16
add
adc
add
testl
fdivrl
and
add
xor
cmp
mov
mov
adc
daa
add
cld
cmovns
lcall
jp
push
cmp
dec
enter
add
pusha
leave
addb
inc
out
mov
mov
and
xor
mov
pop
int3
sub
ljmp
push
pusha
rolb
ret
cmp
out
or
lret
aas
add
sbb
and
inc
push
xchg
dec
decb
mov
xlat
and
mov
add
push
fidivl
inc
and
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
jle
mov
iret
mov
cli
push
sti
add
jno
mov
add
cltd
stos
sub
cmp
mov
fimuls
pop
iret
movsl
cmp
dec
or
dec
push
mov
std
add
stos
cmp
add
int3
push
arpl
ret
adc
jns
sbb
inc
outsl
mov
lret
mov
jne
push
cmp
add
das
dec
out
sub
push
push
pop
adc
add
mov
arpl
lock
pop
lret
push
and
add
and
fsubrl
mov
pop
or
pop
push
leave
call
push
sbb
lock
out
pop
mov
sbb
or
out
neg
push
shlb
paddusb
dec
js
add
out
test
mov
add
xor
lea
mov
add
daa
fs
pop
xlat
pusha
mov
and
movsl
hlt
lods
and
sub
add
ret
mov
movw
sub
push
repnz
cmp
incb
neg
ja
add
mov
adc
adc
push
dec
sub
mov
ljmp
add
or
loopne
add
mov
adc
cmpsb
or
out
dec
push
mov
add
mov
rorb
je
mov
cmp
pop
inc
add
mov
pop
add
daa
repnz
add
and
push
imul
cli
inc
add
cmpsl
jne
jmp
loop
loopne
or
mov
add
inc
jl
push
fsubl
or
shlb
mov
addr16
mov
push
scas
jbe
pop
add
mov
add
insb
inc
jb
add
dec
xor
pop
cmp
test
pop
cmp
inc
frstor
adc
loope
out
jo
movb
fcmovnu
or
inc
mov
ficompl
fnstcw
jle
xchg
add
icebp
dec
adc
int3
add
decb
cwtl
pop
jne
fists
mov
add
inc
mov
lock
sbb
inc
in
add
sahf
or
sub
inc
out
rorb
femms
call
scas
jne
xchg
or
loopne
pop
mov
pusha
pop
add
mov
repz
xor
lods
aam
leave
mov
push
dec
int3
fstpt
xor
filds
out
shlb
or
mov
add
inc
stos
out
adc
dec
add
fwait
xor
movzwl
push
or
cmc
movb
aas
pusha
adc
push
xor
push
add
rolb
add
mov
pavgb
push
sahf
push
jae
call
xor
inc
cmpsl
and
adc
sbb
arpl
inc
movl
lock
adc
xor
mov
or
push
add
jne
push
pop
push
add
dec
add
mov
push
pop
add
sbb
adc
add
pavgb
cli
push
lret
clc
push
aaa
add
in
subb
push
in
jg
dec
js
sbb
lods
add
pop
push
testl
out
lahf
test
add
cmp
adc
mov
iret
add
xor
jg
add
mov
inc
aaa
xchg
shrb
add
test
push
or
paddb
in
test
push
inc
xor
push
jo
add
iret
jb
and
mov
aas
lea
push
xchg
jno
add
cmp
add
pop
dec
ja
xlat
dec
scas
mov
jo
add
mov
imul
das
push
sbb
jmp
std
add
and
int
cli
sub
sti
inc
xchg
adc
std
shrl
xor
outsl
fs
andb
pop
insl
pop
sti
dec
loope
sbb
mov
fdivrs
pop
rorl
and
and
hlt
ljmp
add
call
xchg
mov
xrelease
add
andb
rol
leave
push
jne
je
and
xor
inc
pop
or
shrb
add
roll
ret
nop
add
cmpsl
fcoms
add
enter
inc
cmp
mov
jbe
pop
out
jb
nop
jo
add
sti
cmpsb
and
movsl
add
mov
loopne
in
outsl
push
lock
cmp
jnp
fs
sub
fdivrl
lods
pop
inc
gs
jl
or
pop
adc
test
pop
adc
inc
repz
nop
mov
into
les
lock
mov
and
xchg
jl
imul
gs
add
xorb
push
mov
rorb
ret
jmp
call
add
ja
cli
nop
mov
scas
add
sub
push
or
je
or
push
push
ret
jg
sbb
into
add
dec
pop
sbb
out
int
fsubrl
insb
xor
or
inc
push
mov
xor
or
arpl
in
pop
pop
jns
test
stos
pop
sbb
or
push
mov
and
rolb
xor
add
push
jne
jle
mov
or
xchg
loopne
pop
clc
lret
rcl
dec
add
add
das
stos
sub
sbb
pushf
xor
or
adc
loopne
inc
mov
pop
sarl
push
jb
add
js
mov
add
xlat
dec
cld
sbb
sub
pop
idiv
sbb
pusha
push
add
shlb
iret
inc
add
jmp
xlat
clc
jne
movb
call
aam
add
adc
clc
popa
xchg
aaa
movl
hlt
test
cmpsl
dec
or
mov
lahf
jbe
cmovae
fdivs
jae
and
loop
dec
testb
movsb
or
mov
mov
add
cli
test
inc
dec
dec
cltd
jbe
inc
add
and
sarl
jo
add
pop
mov
inc
call
pop
dec
je
push
xchg
sub
inc
imul
add
or
add
sbbb
push
call
add
ret
push
repnz
cmp
lods
mov
add
lds
xchg
repnz
pop
push
sub
iret
pusha
mov
add
xor
leave
add
add
jge
push
mov
dec
or
pusha
add
ret
movsl
js
je
jle
and
imul
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
ljmp
dec
add
inc
pop
lret
sbb
xor
xchg
xchg
inc
fadd
out
call
mov
dec
mov
add
add
pop
push
sbb
ret
xor
nop
addb
sub
inc
pushf
adc
xchg
mov
or
cmp
inc
jb
mov
or
pop
scas
hlt
or
fs
inc
rolb
add
decl
add
leave
xchg
jnp
addl
or
rolb
dec
sbb
fisttps
fimuls
in
cmp
add
and
sbb
test
movsl
mov
mov
negl
sbb
les
lock
add
add
pop
flds
ret
cmc
inc
arpl
adc
lea
aam
jmp
mov
sti
repz
pop
arpl
es
inc
mov
pop
cmp
test
js,pn
cmp
mov
inc
add
out
or
add
rolb
addl
adc
stos
fcompl
add
push
mov
inc
dec
xor
aas
sarb
add
add
fistl
clc
or
add
push
in
mov
inc
add
out
je
or
push
movsl
sbb
je
cmp
xor
inc
das
and
or
add
jae
or
testb
not
cmp
pop
add
enter
test
adc
pop
flds
cmp
push
cmpb
add
mov
pop
adc
add
dec
push
push
aam
loop
pop
adc
dec
lahf
dec
cmp
scas
cmp
imul
cwtl
imul
or
cmp
adc
scas
and
addb
add
or
pop
mov
inc
sahf
lret
adc
test
fs
add
das
cmp
add
xchg
xor
pop
aad
test
push
xor
pusha
mov
adcb
lret
mov
pop
ret
inc
jae
add
push
or
jl
cwtl
cmp
cmp
cltd
xchg
push
hlt
add
dec
lods
mov
xor
xlat
dec
repz
pop
test
shlb
out
loopne
add
push
pop
cmpsb
add
lret
dec
scas
sbb
out
mov
xor
lea
inc
fcoml
and
adc
dec
jne
popf
repz
adc
sbb
and
push
cld
ljmp
int3
rcrl
popl
sub
xor
dec
cli
jns
je
inc
lock
inc
add
push
and
out
sub
xchg
push
enter
inc
stos
mov
je
sub
movb
or
cmp
cmpl
bound
mov
add
adc
add
add
insl
and
cld
icebp
xchg
pop
xchg
push
or
sbb
sbb
mov
adc
clc
subb
loop
add
testb
push
rorb
pop
xlat
add
push
lock
cltd
lret
add
sbbl
inc
sbb
or
adc
dec
jbe
movsl
add
inc
pop
outsb
and
scas
add
inc
mov
mov
add
cmp
inc
xchg
push
pop
jne
in
sbb
cli
sub
jo
sub
les
or
dec
leave
test
add
mov
mov
push
ds
shrb
dec
sub
mov
adc
mov
inc
scas
jb
or
je
xchg
fnstenv
adc
push
add
push
call
pop
cmpsb
adc
int
mov
xor
cltd
mov
add
pop
push
ret
popf
jo
add
sti
push
and
pop
fists
cmp
sbb
js
push
add
pop
mov
and
rolb
push
and
inc
pop
push
add
lret
jne
fwait
push
inc
add
loop
push
sbb
or
add
pop
imul
lock
cmp
xor
push
mov
jle
xchg
sbb
adc
nop
cmpb
shrl
hlt
mov
movsl
sbbl
fadd
pop
test
or
xchg
or
mov
mov
sbb
jecxz
xchg
ret
sbb
add
and
hlt
mov
repnz
adc
inc
jo
add
cs
add
int
mov
xor
push
cs
lcall
mov
stos
shr
testl
inc
sti
cmp
xchg
push
nop
xchg
lock
add
repnz
jb
add
push
sub
push
mov
out
add
rol
loopne,pt
cmp
jl
aas
fadds
xorl
rcr
cmp
call
push
add
sub
mov
and
or
mov
roll
rorb
add
data16
stos
xchg
jp
lret
je
in
add
ror
fsub
jmp
or
add
pop
dec
cmp
jge
andl
add
push
push
add
dec
fs
mov
lcall
imul
movsl
jae
adc
mov
pop
adc
xor
add
or
sbb
and
xor
stos
test
add
mov
mov
push
jecxz
lahf
push
cmc
lock
mov
add
xor
mov
outsb
aas
and
gs
jae
xor
mov
xchg
js
ljmp
sbb
andb
mov
mov
push
mov
call
dec
cltd
push
add
dec
adc
pop
pop
pushf
sub
inc
add
test
pop
ss
loope
mov
loop
add
sbb
push
adc
add
pop
adc
ja
add
test
add
outsb
push
leave
adc
sbb
dec
jbe
cmp
es
int3
adc
mov
pop
pushf
xchg
inc
shll
and
arpl
les
add
or
loopne
inc
jg
add
repnz
pop
clc
out
arpl
add
add
pop
jg
add
inc
push
mov
add
cmp
shll
shlb
sbb
push
outsb
xor
push
or
and
add
add
add
stos
add
mov
add
iret
pop
xor
xlat
nop
mov
loopne
stos
xor
pop
rolb
add
xor
mov
add
inc
mov
bnd
in
testb
aam
push
cmpsb
pop
jb
mov
push
pop
adc
stos
out
add
cmpsl
push
test
add
subl
cli
pop
cli
pop
pop
in
loopne
sub
repz
mull
dec
stc
movsb
in
lahf
add
pop
lods
pop
sbb
pop
aas
shrb
or
lds
add
inc
adc
fldl
lret
les
pop
adc
scas
sbbb
add
jg
arpl
in
add
test
int3
add
and
inc
or
cmp
push
add
adc
push
push
notl
jo,pn
push
cmp
adc
insb
lea
testl
xor
fs
adc
mov
adc
stos
popa
arpl
fnstenv
rcrb
mov
data16
mov
pop
fs
or
div
loopne
cmc
ds
add
popl
push
mov
repz
push
ror
clc
in
push
and
enter
sub
je
add
stos
mov
add
xchg
add
push
sbb
pop
aaa
test
xchg
adc
push
add
pop
add
pop
nop
sbb
sbb
cltd
push
sbb
mov
add
xor
cmp
or
test
sbbb
xorl
mov
pop
or
sbb
or
test
pop
add
mov
sbb
inc
adc
pop
jge
push
sub
fs
cmp
xchg
inc
test
stos
push
dec
lds
popa
sbb
push
add
inc
inc
xor
add
mov
aam
stc
add
ret
or
push
sti
adc
fadd
add
jmp
and
push
cld
push
or
cmp
addb
cltd
unpcklps
jmp
xchg
jo
psubd
sub
daa
lahf
shlb
jbe
push
pop
pusha
test
mov
adc
sbb
pop
sub
dec
xor
mov
xor
arpl
jnp
sub
or
icebp
pop
inc
and
add
mov
push
lret
pop
push
add
dec
cld
mov
sub
outsl
jbe
sub
xchg
push
fisttpl
mov
inc
pop
and
fildll
add
rolb
jns
xor
cli
fdivrl
cld
or
jnp
cmpsl
push
add
leave
jp
aaa
ret
and
xor
add
and
les
sbb
add
cmp
sbb
in
xchg
mov
adc
pusha
and
pop
dec
addr16
xlat
push
aas
mov
mov
and
rcrb
testl
push
test
and
ss
ljmp
lods
cmp
sbb
popa
push
test
insl
sahf
in
push
std
add
test
iret
sbb
sub
add
or
pop
sub
inc
sbb
lar
and
jge
jb
inc
xor
iret
aad
leave
sbb
mov
in
dec
add
cmp
aas
xchg
sub
pop
sbb
mov
and
or
push
test
mov
push
stos
cmpsl
add
or
inc
divl
hlt
fidivrl
sub
mov
test
cmp
add
cmp
pop
fcoms
aaa
test
into
add
mov
sbb
jbe
mov
outsb
test
cmp
jbe
andb
rcll
mov
and
imul
jle
call
les
pusha
imul
jbe
xchg
mov
sbb
mov
rcr
lock
add
adc
sbb
mov
cmp
add
adc
cmpsl
loopne
add
dec
mov
rcll
das
nop
jl
and
ficompl
mov
and
cmpsb
orb
adc
scas
movsl
xchg
add
xchg
push
adc
xchg
aaa
add
add
outsl
daa
add
push
dec
aam
or
pop
cmpb
mov
mov
je
jns
sbb
das
es
lcall
lods
add
daa
cli
mov
and
ljmp
lahf
push
adc
call
pop
imul
popa
sbb
adc
aad
inc
xchg
pop
lcall
lds
add
movsb
mov
inc
pop
xchg
add
xchg
ja
mov
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
jns
js
nop
adc
int3
cmpsb
subb
leave
mov
daa
iret
ret
shrl
mov
adc
mov
fdivrs
jnp
adc
imul
or
add
movsl
fnstsw
fstps
fcoms
mov
adc
popf
add
or
add
movsb
pop
fimull
sub
insl
xor
mov
push
enter
pop
jp
cwtl
xchg
fs
jge,pn
fidivl
out
fdivrs
add
sbb
mov
fbld
push
pusha
aas
jnp
dec
or
pop
dec
jp
mov
fwait
inc
cmp
inc
push
jns
push
add
loope
push
pop
mov
pop
jle
insl
adcb
push
movsl
add
add
stos
push
or
sahf
enter
add
or
mov
and
inc
enter
add
icebp
mull
add
dec
or
or
pop
add
cld
push
cmp
icebp
xchg
adc
and
sbb
cmp
jl
mov
mov
push
inc
addr16
push
jmp
cmpsb
add
gs
cmp
and
cmp
push
push
add
sub
pusha
adc
jge
pop
and
xchg
cmp
popa
cmp
gs
lcall
inc
outsl
pop
jns
popf
inc
lret
fiadds
sub
sub
fildl
test
lret
ljmp
repz
add
cli
cmpsb
adc
add
add
sbb
jecxz
movsb
mov
lea
stos
repnz
add
push
idivl
loop
cmp
nop
jmp
jne
jno
jg,pn
test
add
xchg
lods
cmp
or
xor
xor
in
sub
or
jae
add
ja
push
iret
loopne
inc
sub
add
push
arpl
popa
inc
jge
ja
push
jbe
outsb
addr16
add
dec
push
add
call
add
cmp
sahf
imul
push
imul
jge
push
pop
jl
nop
jp
push
outsb
xor
cld
bound
clc
js
pop
pusha
inc
mov
gs
push
jg
arpl
imul
jns
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
popa
jb
jbe
pusha
add
data16
test
push
jno
add
arpl
jl
sub
outsb
data16
dec
push
jbe
ja
add
mov
inc
shll
subl
outsl
cmp
bound
sbb
inc
push
nop
ja
jo
and
inc
test
cmp
jb
pop
addr16
popa
loopne
push
bnd
test
mov
mov
imul
add
fs
inc
decb
add
dec
gs
imul
sti
and
xchg
pusha
add
outsb
dec
push
add
xchg
sbb
inc
adc
adc
inc
addr16
jbe
mov
ds
cmp
bound
insl
data16
jp
mov
and
sub
iret
loopne
aaa
loop
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
adc
addl
sub
lock
loope
pusha
inc
adc
add
test
push
xchg
ss
popa
cwtl
push
cmp
fmull
fiadds
cwtl
or
add
daa
xchg
in
call
add
mov
add
jae
or
inc
pushf
mov
pop
mov
inc
and
add
xor
sbb
or
jae
add
push
dec
das
xor
xor
test
cmpb
outsb
inc
std
add
mov
insb
add
or
leave
or
and
out
add
push
call
and
cli
pop
add
arpl
cmpb
aam
sub
ret
jg
and
push
int3
add
or
js
jle
xor
push
lock
inc
jne
jp
cmp
mov
bswap
fstps
cmp
out
and
loop
ds
lods
pop
mov
pop
hlt
xor
loopne
inc
enter
rol
cmp
jmp
pop
push
push
mov
pavgb
push
dec
or
addl
sti
lret
jle
cld
iret
mov
mov
push
add
xor
add
fsubrp
fistl
adc
cmp
scas
adc
inc
mov
mov
mov
add
cmp
and
inc
adc
add
jl
mov
push
add
and
mov
pusha
inc
pop
mov
out
sub
add
test
repz
and
pop
jge
mov
je
xor
and
data16
out
and
or
add
dec
xchg
sar
adc
sbb
and
sub
sub
xorl
inc
add
cmp
enter
dec
out
add
pusha
imul
movsl
xchg
push
cmp
sbb
subb
repnz
in
lcall
cmp
movsl
mov
pusha
ljmp
outsl
and
insb
ljmp
loop
aaa
xchg
jl
mov
lahf
push
ss
mov
mov
mov
lods
xchg
sarb
xchg
mov
out
out
clc
add
or
int
fstl
mov
xlat
sub
rcl
xor
into
cli
add
call
enter
and
ret
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
push
call
cs
adc
ja
mov
jo
and
rolb
lds
lock
call
mov
add
ja
jge
pop
mov
push
lods
inc
je
cli
sub
test
sarb
enter
add
sbb
inc
sbb
loop
aas
cmp
push
sub
xor
pop
xor
and
lds
mov
jp
call
roll
cltd
pop
add
or
das
rcrb
add
daa
xchg
ds
pop
rcrb
fistpll
lea
in
stos
int3
test
adc
inc
pop
or
add
rcrb
movsb
loope,pt
mov
adc
cmp
jle
xor
rolb
jg
add
and
incl
in
or
xchg
sbbb
mov
add
ljmp
push
fnsave
xlat
shrb
sar
jae
cmpsb
and
fdivs
jne
add
push
divb
jle
add
pop
sub
shll
fcomps
mov
in
icebp
sbb
xchg
mov
jae
stos
push
mov
ds
mov
cmc
xchg
cmp
in
out
xlat
test
test
inc
cltd
cmp
or
jne
inc
inc
or
jmp
add
add
cmp
mov
push
mov
aam
das
lds
cmp
adc
icebp
push
push
xor
cmpb
xchg
jmp
cmp
cmp
sub
mov
lret
xchg
les
add
cmp
pop
or
pusha
loope
insl
xchg
adc
add
cmp
insb
sbb
push
add
mov
jbe
add
jb
lcall
push
mov
add
add
jmp
sub
je
mov
and
inc
jle
ret
adc
loope
add
nop
mov
cmp
mov
cmp
inc
mov
stos
adc
xchg
mov
add
xor
or
push
add
add
je
or
aam
xor
pop
les
add
sub
pusha
pop
mov
nop
xchg
ret
mov
cmp
pop
outsb
fs
outsl
jne
or
add
mov
enter
add
cmp
sub
popa
fadds
jae
or
push
int
mov
sti
jbe
add
dec
xlat
sarb
clc
ljmp
add
push
jns
loopne
fmull
cmp
out
je
filds
lcall
push
cmpsb
iret
pop
test
rolb
test
in
je
add
lret
inc
loopne
loopne
movq
mov
mov
incl
aad
or
mov
bound
add
dec
cmp
cmc
paddusb
inc
or
leave
and
nop
repnz
clc
mov
add
sti
cli
rolb
or
push
inc
xchg
sub
fcmovb
or
jecxz
mov
add
add
cmp
hlt
xchg
xchg
movsb
push
ja
add
adc
cmp
rorb
push
pop
jmp
sbb
les
sub
pop
add
cmp
ret
fcoms
mov
loopne
pop
add
push
outsl
mov
fstpt
inc
ret
pop
into
pop
pop
addr16
jecxz
jg
and
adc
scas
rcll
shlb
jae
push
lods
rcrb
mov
leave
loope
fwait
clc
add
out
add
daa
cmp
xorb
add
shl
dec
add
daa
outsl
repz
mov
push
dec
push
add
subb
orb
add
imul
inc
pusha
mov
adcb
je
mov
loopne
and
ret
fistps
in
xchg
lock
xchg
pop
dec
int3
in
mov
cmc
inc
cld
xchg
push
push
rol
cs
add
push
mov
jo
cli
daa
decb
pop
add
xor
inc
stc
pop
cmp
dec
test
subb
addl
mov
decl
fs
push
rcl
pop
bound
stc
push
aam
inc
ja
pop
cmp
push
mov
push
les
sbb
and
es
mov
int
jbe
add
pusha
xchg
adc
push
mov
cmp
pop
in
ljmp
inc
sar
sbb
xchg
packsswb
out
and
repnz
lock
mov
sbb
nop
aad
push
add
sbb
cmp
adcb
lret
and
in
enter
xchg
xchg
sub
mov
cs
imul
in
ret
cmp
sub
add
div
test
xchg
hlt
out
xchg
in
sub
add
xchg
outsb
rorl
and
inc
jle
sbb
cmp
ret
push
xlat
jo
push
call
addb
jmp
jg
jnp
mov
sub
cmp
call
adc
push
cli
shll
add
imull
add
add
in
shll
lds
ret
xor
pusha
loop
add
test
pop
call
loopne
aam
add
std
push
mov
add
inc
mov
pop
pusha
dec
mov
pushf
inc
cmp
pop
andb
je
add
jle
xchg
lock
add
mov
addl
or
in
fs
sbb
bound
jnp
mov
les
pusha
adc
pop
loopne
sbb
jmp
xor
shlb
jmp
aam
addb
cmp
ffreep
sbb
add
lock
cmc
adc
shr
add
mov
dec
cmpsl
call
jne
cmp
jae
inc
add
loopne
nop
add
bswap
sub
enter
je
and
insb
add
dec
fincstp
sarl
sub
fisttps
push
jb
lds
fidivrs
mov
add
lret
xor
hlt
or
push
ret
pop
cmp
mov
or
aaa
add
lret
jbe
dec
mov
mov
test
mov
test
rcl
fdivrs
cmpsl
adc
mov
addb
pusha
jg
mov
sub
daa
push
sub
or
xor
subl
call
jbe
pop
and
shlb
hlt
stos
add
push
and
inc
movl
push
aas
mov
add
xor
dec
or
inc
out
jmp
add
sbb
inc
add
inc
lret
dec
adc
es
repz
mov
dec
dec
sbb
mov
xchg
cld
add
hlt
jns
pop
sub
dec
out
add
sbb
add
shlb
aas
push
pop
pop
lock
add
es
push
add
add
enter
jg
nop
jle
jp
test
shl
popa
dec
fisubl
add
dec
xor
pop
pushf
jg
sbb
xorb
rolb
sbb
nop
add
js
mov
ja
pop
hlt
fnsave
sbb
bound
je
jle
add
scas
leave
mov
adcb
and
jmp
add
jge
mov
add
out
sbb
dec
sarl
data16
adc
orb
mulb
sbb
push
lock
add
jle
sahf
pop
daa
seta
add
push
push
add
push
in
pcmpeqw
mov
lret
dec
call
inc
xchg
mov
xor
or
out
jle
ds
mov
std
dec
movsb
aaa
int3
cmp
add
dec
rolb
cmp
jae
add
addb
or
jne
cmp
add
test
lret
inc
addr16
push
ret
popf
dec
pop
inc
fld
add
mov
or
sub
sub
mov
add
push
adc
add
jp
jbe
rol
test
jecxz
ds
cmp
dec
jl
vmwrite
sub
xchg
nop
sub
xchg
adc
dec
cmpb
out
add
push
aam
add
xchg
ja
je
or
int
loop
test
fstps
mov
scas
repnz
add
pop
stc
ljmp
mov
add
push
push
pop
push
xchg
mov
rolb
test
scas
mov
add
testb
add
mov
push
xor
add
add
adc
mov
sarb
jbe
or
aad
loop
hlt
in
jmp
inc
das
add
jne
sbb
or
add
aam
xchg
dec
or
pop
pushf
adc
dec
movsb
popl
cli
imul
mov
jp
cmp
in
mov
sub
sbb
mov
xchg
ffree
or
dec
inc
stos
dec
inc
lock
nop
cwtl
push
lahf
hlt
rol
in
add
gs
loope
pusha
and
and
add
fiaddl
inc
je
inc
lcall
cmp
js
inc
je
nop
call
mov
test
add
xor
scas
rorb
mov
cmp
xchg
dec
add
sub
mov
add
test
or
inc
ud2
mov
out
add
cmp
pop
add
cli
mov
mov
push
xor
xor
dec
ret
or
outsl
push
cltd
jecxz
cmp
arpl
add
lods
or
sub
mov
ds
dec
add
sub
push
sbb
jecxz
arpl
loopne
loopne
jb
psubusb
push
jmp
lock
pop
mov
mov
and
nop
add
shr
loop
pop
lods
repnz
inc
es
cmp
sbb
add
push
xor
bnd
outsb
sarb
xchg
test
call
ss
cmp
add
xlat
popf
add
add
xor
in
sub
or
cmp
jae
xchg
fsubr
js
add
out
jb
adc
cli
ja
dec
add
mov
add
xchg
cmc
test
pop
mov
push
lock
out
loopne
sbb
sbb
ss
pop
push
mov
insb
rolb
ds
dec
fisubrl
orl
jo
inc
icebp
popa
das
inc
mov
aad
sub
or
push
dec
add
jmp
add
rolb
rolb
jne
fnstcw
sarb
jmp
mov
nop
xchg
mov
dec
push
jo
xlat
int3
push
mov
mov
jmp
mov
call
imul
xor
add
dec
push
push
mov
scas
inc
sbb
aam
mov
xchg
pop
dec
and
xorb
pop
mov
sbb
mov
jg
and
out
mov
or
and
imul
shll
gs
cmp
sbb
fidivrl
xchg
hlt
loop
cmp
je
pop
sub
insb
inc
movsb
dec
inc
adc
push
adcl
jmp
push
add
in
add
push
add
inc
push
sti
jae
aas
push
lcall
push
subl
repz
in
repnz
mov
xchg
mov
pop
add
andb
imul
iret
push
inc
xchg
xor
sub
sarl
sbb
push
push
or
add
shl
push
leave
sub
mov
xor
xor
push
negl
adc
cwtl
jge
aam
sub
mov
into
cmpsb
test
sbb
repz
repnz
test
push
adc
pop
movb
cmpl
add
jmp
xor
sbb
cmpsb
lods
sbbb
jbe
add
pshufw
sub
xchg
dec
sbb
or
jae
mov
andb
adc
lret
mov
add
jb
cmp
add
stos
mov
mov
sub
leave
out
test
in
lret
and
cltd
movsb
lock
add
repz
cmp
mov
mov
push
or
dec
pop
popf
dec
add
repnz
test
or
call
cmpsb
jne
add
xchg
and
rclb
movl
inc
shr
xchg
dec
add
inc
dec
jne
push
or
ret
pop
movsl
and
add
dec
nop
push
out
mov
xchg
push
lods
in
test
ja
shr
jbe
cld
jb
add
loopne
fsubr
mov
ja
dec
xchg
or
sti
mov
lahf
cld
les
out
jb
cs
push
shlb
or
call
fs
add
hlt
or
mov
movsb
mov
push
xchg
sub
cld
leave
add
daa
inc
mov
mov
adc
cmp
sub
adc
xchg
add
lcall
int
test
and
movsl
and
add
imul
jb
push
jmp
add
repnz
or
inc
xor
add
popl
jmp
dec
test
jb
or
add
add
xchg
ss
dec
rcrl
mov
rolb
les
add
xor
push
dec
mov
imul
add
adc
inc
fsubl
loopne
inc
xchg
daa
jg
add
sub
adc
dec
adc
shrb
aas
xchg
and
addr16
pusha
cmpsb
call
xchg
or
bsf
add
repz
or
in
push
add
mov
mov
lds
loopne
or
cmp
push
cli
gs
sbb
add
add
dec
and
cs
jns
je
addb
cwtl
push
push
inc
xchg
je
cmp
repnz
enter
inc
addl
insb
es
and
pop
push
leave
dec
xchg
inc
mov
add
and
add
xchg
mov
arpl
add
jo
rolb
add
push
enter
add
sub
pandn
pop
add
mov
lret
movsl
adc
jno
mov
and
xor
add
hlt
push
rcrl
ss
bound
add
push
cmp
mov
cmp
lds
lods
pop
test
mov
sbb
push
dec
jl
add
bound
jp
jb
cltd
clc
aam
dec
js
jnp
addr16
xor
jno
add
add
pop
cmpb
and
les
mov
add
nop
pop
gs
mov
outsl
cmp
cld
lret
call
mov
dec
sbb
ss
cmpsl
pop
loopne
mov
add
sbb
xor
push
add
adc
out
sbb
mov
or
jo
loopne
jo
dec
adc
pop
add
shll
add
push
sbb
sub
clc
repz
add
xlat
xchg
sbb
test
add
cmp
gs
out
hlt
add
jge
adc
sub
or
jp,pn
push
add
pop
dec
xchg
sub
jb
fwait
pusha
add
add
loop
or
das
jmp
add
xor
xor
xchg
adc
and
xchg
xchg
adc
pop
adc
mov
aas
or
out
aas
adc
mov
add
test
arpl
in
cld
add
int
popa
test
add
dec
loope
out
outsl
pop
push
mov
mov
inc
ret
mov
cmp
jmp
call
sbb
inc
mov
sub
sbb
dec
cld
adcb
add
out
xor
cmp
insb
movsb
add
pop
adc
add
jl
push
cld
negb
jae
ljmp
subl
int3
push
adc
fldl
in
orb
in
ficompl
xor
insl
shlb
sub
jne,pt
and
adc
mov
in
ret
xchg
jo
xchg
mov
add
shl
inc
xchg
or
add
xor
jb
inc
roll
out
test
mov
lods
mov
adc
test
jg
jmp
pop
ljmp
cmp
adc
jg
add
in
jmp
dec
mov
xchg
mov
das
out
int
fisubrs
fdivs
jo
xor
cmp
cs
cmp
lcall
pop
jbe
xchg
mov
xchg
xchg
pusha
pop
push
imul
stos
and
xor
mov
das
jne
shlb
add
cltd
fists
sahf
add
ljmp
aaa
cmp
outsl
cltd
notb
aas
bound
cmp
ljmp
enter
dec
add
in
bound
add
mov
push
add
int3
test
push
add
lret
or
push
push
add
pop
inc
or
push
adc
mov
pop
hlt
sub
mov
push
outsb
mov
add
adc
call
inc
mov
push
or
mov
sub
add
movb
inc
rclb
push
or
cmp
sbb
adc
in
les
xor
pop
in
add
mov
jne
sbb
xchg
xor
inc
popa
jae
xor
outsl
dec
push
dec
outsb
je
push
aas
fidivs
ja
dec
push
push
imul
js
arpl
dec
popa
cwtl
daa
add
mov
les
sarl
jbe
adc
adc
sub
cmp
add
fiadds
jne
mov
sbb
pop
mov
fimull
add
xor
fucomip
dec
pop
decb
dec
xlat
enter
cmp
add
sub
fimull
mov
add
cmp
and
xor
inc
push
sbb
mov
sub
iret
sarb
insl
add
xor
inc
dec
jne
call
sub
iret
push
jb
inc
pop
add
xlat
les
psrld
xor
mov
sbbl
mov
push
lock
mov
and
mov
or
lea
les
mov
xchg
fstpt
idivb
fcoms
mov
shlb
cmp
jl
sahf
xor
insb
daa
sub
ret
jge
jg
dec
hlt
inc
pop
lods
sahf
loop
jne
ret
fsubr
jmp
push
jg
cmp
and
lods
pop
pop
push
out
adc
lock
inc
subb
test
call
cmp
ret
add
mov
jb
rorb
jbe
movb
jo
adc
roll
lods
jb
cmpl
jbe
mov
dec
sub
sub
jmp
ss
sarb
repz
push
repnz
add
adc
add
cmpb
xor
inc
add
imul
xchg
push
loopne
and
inc
out
push
enter
lret
out
cli
fcompl
int3
lock
pop
add
mov
testb
pop
mov
hlt
fsubrs
addb
jecxz
jb
rclb
ss
out
and
leave
roll
addb
push
push
call
fdivrl
movsb
pop
jno
mov
pop
scas
add
outsl
push
mov
add
adc
push
inc
add
add
add
or
inc
or
and
lahf
cld
loopne
dec
cmpsb
jle
imul
adc
add
dec
inc
rcrb
dec
fadds
andb
call
adc
push
push
fsubs
add
and
repnz
jno
and
jae
pop
push
dec
dec
arpl
rolb
imul
fisubl
or
fucomp
or
stc
pop
pushf
dec
add
loopne
add
jecxz
or
out
adc
pop
xchg
push
xchg
mov
and
ret
mov
les
popf
mov
aam
aam
sbb
push
dec
sub
cmp
pop
pop
xchg
push
inc
fwait
cmp
leave
push
jle
or
sete
fildl
mov
int3
loop
test
adc
xchg
sbb
jns
out
mov
add
fmuls
mov
and
test
iret
out
push
add
pop
mov
sbb
and
daa
pop
testb
pop
les
cmp
sub
je
inc
in
loopne
gs
lods
dec
add
shrl
dec
or
push
pop
jl
add
lcall
pusha
incl
jl
mov
mov
push
cmp
lea
div
mov
pop
or
cmp
pusha
add
dec
jp
jmp
add
pop
jg
cmp
shl
cltd
or
cmc
jo
lcall
inc
ljmp
jne
loop
add
push
mov
or
xchg
pop
movzwl
pop
mov
sub
fiaddl
add
mov
adc
and
sbb
jbe
sbb
sub
dec
add
mov
mov
push
and
fsub
and
pop
cli
lret
add
ljmp
in
xchg
add
and
mov
fldt
test
and
arpl
mov
jnp
cli
ret
cmp
idivb
les
xor
or
cli
sub
inc
add
call
lcall
xlat
pop
les
aad
and
nop
fnsave
in
push
fmuls
dec
add
jl
xor
mov
inc
lods
aad
in
inc
mov
aaa
add
repnz
daa
adcl
and
add
add
js
pop
add
add
or
adc
add
pop
and
add
or
movsb
out
add
cmpsl
test
sbb
and
cltd
bound
pop
loopne
pop
sbb
sbb
or
add
add
and
pop
add
or
incl
dec
jg
jp
pop
nop
add
rclb
stos
daa
pop
les
fiaddl
rolb
lea
add
test
add
inc
pop
rcrl
mov
add
mov
std
add
cmpsb
push
lahf
mov
lcall
fmuls
sub
scas
rolb
into
sarl
mov
jnp
add
inc
fptan
cmc
cwtl
or
pop
in
mov
nop
pop
add
mov
jl
pop
inc
sar
movsl
adc
lock
cmc
lock
fisttpl
add
enter
notl
add
in
fisubrs
imul
xchg
pop
out
leave
jle
sbb
mov
add
add
int3
add
test
pop
mov
inc
add
pop
sbb
or
cmp
orb
frstor
add
dec
add
adc
adc
adc
mov
adc
jmp
add
push
vmread
cmpsl
and
addr16
cmp
push
mov
xor
xchg
pop
lret
add
mov
stos
fldenv
inc
jmp
cmp
mov
push
add
mov
lods
jmp
cld
js
pop
sbb
rclb
add
mov
popf
mov
cs
mov
add
cwtl
add
push
fsub
popl
add
std
xchg
push
inc
push
enter
add
sbb
int
add
push
test
add
in
jge
orb
pop
lock
inc
rolb
pop
fadd
mov
push
pop
pop
add
sbb
mov
dec
lcall
push
push
pop
jnp
adc
mov
das
add
out
lea
movsb
add
fmull
lret
add
push
cmp
lret
mov
dec
shrb
loop
fldl
jo
xchg
and
add
cmp
pop
push
repnz
add
popl
jecxz
shld
mov
pop
add
cmpsb
mov
add
lods
in
push
mov
btr
push
scas
inc
test
jbe
inc
mov
repz
test
mov
ret
adc
and
cmpsl
fsubp
push
movl
cld
adc
in
and
mov
int
jle
pop
push
or
mov
add
jno
ret
mov
out
out
jae
dec
mov
cltd
cmp
push
jo
push
mov
inc
cmp
testl
add
mov
cs
push
pushl
pop
jle
or
adc
out
aam
ret
and
inc
enter
jno
mov
or
jo
data16
xor
loopne
push
push
and
dec
push
dec
sarb
pop
int3
adc
adc
loop
dec
sti
aad
scas
mov
clc
add
lds
push
roll
dec
pop
jno
pop
mov
mov
adc
iret
add
pop
lret
add
cmp
push
dec
nop
inc
add
fists
adc
aas
add
daa
mov
sbb
push
popf
imull
or
fsubs
nop
adcb
push
dec
add
movsl
dec
mov
sub
inc
sbb
jmp
scas
fwait
add
sbb
adcl
roll
mov
ja
or
pop
add
sbbb
jns
add
stc
ficoms
dec
jge
add
mov
or
pop
pop
clc
push
aaa
or
iret
sbbb
jae
mov
sbb
add
pop
stos
inc
mov
xor
add
nop
ljmp
mov
push
stos
lea
pop
loop
sbb
cmpsl
test
mov
or
push
jmp
xchg
add
jne
inc
push
cmpsb
jecxz
mov
ja
imul
adc
inc
pusha
test
jg
add
loop
xchg
enter
out
add
xlat
pop
jne
scas
rcrb
inc
and
cmp
add
and
add
mov
xchg
sbb
add
in
pop
xor
cmpb
sbb
clc
pop
icebp
std
add
mov
mov
rolb
jb
add
push
mov
and
sub
or
xchg
lret
mov
sbb
pop
loopne
mov
push
inc
sbb
add
imul
je
popa
jo
push
push
dec
push
rolb
stc
outsl
add
sbb
jne
sub
dec
add
aas
or
jecxz
add
add
pop
int3
cmp
cld
cmp
push
inc
add
je
xchg
or
mov
add
mov
call
push
mov
mov
add
jle
movl
or
sub
adc
pushf
and
adc
jo
add
push
jg
add
test
lods
sub
push
mov
les
jle
andl
jo
addb
add
ror
or
inc
push
add
sbb
jmp
xchg
stos
in
add
insl
mov
cwtl
cli
inc
jp
shrb
adc
and
hlt
out
add
sub
or
divb
movsl
sbb
adc
hlt
in
add
dec
scas
int
jg
jae
mov
push
dec
mov
add
in
adc
dec
sbb
inc
mov
stos
insb
add
mov
es
shlb
adc
jb
xor
dec
add
inc
cld
cmp
mov
js
outsb
out
subl
xchg
les
mov
inc
in
pushf
add
pop
in
shr
lods
repnz
mov
xchg
mov
out
or
sub
hlt
jmp
repz
mov
add
jnp
mov
add
ret
add
ljmp
stc
lods
hlt
jecxz
pushf
cmpsb
cmp
sbb
add
clc
add
xchg
lods
and
add
and
hlt
push
fbld
add
sbb
and
mov
inc
mov
add
mov
add
dec
xchg
mov
in
sub
push
mulb
or
in
mov
sti
add
add
xchg
mov
nop
sub
hlt
push
push
mov
out
clc
add
adc
dec
stos
add
cld
hlt
lock
mov
add
adc
add
sbb
push
movsl
ja
sbb
add
xchg
jae
sub
cmpsl
push
jo
mov
int3
lea
or
jbe
call
push
loope
fsubs
sarb
add
sub
jle
dec
xchg
add
dec
sub
add
mov
xchg
jle
jnp
jge
add
inc
out
not
dec
jmp
mov
mov
fstpl
fsubl
add
sbb
pop
repz
push
pop
jae
stos
es
add
jne
mov
add
push
hlt
add
cmp
clc
aad
ja
xchg
rorl
jno
add
fcoms
cmp
dec
and
add
pop
add
jge
add
inc
mov
xchg
add
sti
jb
jbe
out
addl
leave
lds
orb
lret
das
mov
mov
add
js
roll
adc
cmp
lea
mov
sub
and
pop
ret
call
mov
xorb
push
movl
out
mov
or
data16
aaa
mov
rcl
mov
mov
xlat
int
sub
dec
ret
test
cli
add
cld
pusha
repz
movsb
push
aas
push
inc
rol
adc
mov
push
insb
lret
mov
jl
dec
sbb
je
or
je
sub
pop
add
and
cltd
or
icebp
dec
add
jge
jae
lret
data16
mov
push
filds
pop
add
mov
push
mov
mov
add
jne
add
add
std
or
xchg
sarl
add
in
rorb
xor
js
xor
push
add
push
jmp
inc
mov
cmpsb
jo
add
out
rcll
and
add
cmpsl
mov
call
xor
mov
or
inc
ret
ret
sub
add
popa
ja
xchg
xchg
push
inc
add
inc
loope
or
inc
mov
push
out
xor
push
mov
mov
add
xor
or
fs
dec
cmpsb
cmp
sub
mov
arpl
jae
sbb
jecxz
ja
addl
xor
xchg
lods
sub
adc
xchg
sbb
enter
pop
out
js
pop
add
push
and
repz
movsb
cwtl
inc
adc
add
icebp
cli
pavgb
sub
sti
add
popf
inc
jb
push
pop
dec
std
addr16
movb
sbb
lea
movsb
and
cmpsl
or
imul
rolb
out
scas
enter
cmp
and
aam
mov
add
push
mov
xchg
jno
push
enter
insb
pop
add
add
out
mov
cwtl
xor
cld
adc
add
push
ret
shl
sub
push
mov
repnz
push
lret
test
sub
jnp
test
mov
loope
cmp
cmp
shlb
mov
call
add
mov
mov
adc
or
and
add
inc
movsb
jae
add
add
push
jns
aas
cmc
stos
push
je
jb
hlt
arpl
pop
pop
xor
lret
popa
dec
in
int3
mov
lcall
fcomp
sbb
add
sbb
xor
cmpsl
xlat
ret
lret
and
add
mov
dec
add
mov
repnz
popl
lcall
enter
fs
aaa
aad
mov
or
push
ud2
jne
ja
push
mov
popf
sbb
push
addl
sbb
cmp
mov
xchg
mov
mov
int3
sub
sub
add
or
cmc
ljmp
cli
jno
in
pop
pop
sbb
jne
add
mov
bound
xchg
mov
adc
add
mov
sub
insl
cmc
es
roll
mov
pop
lods
lea
in
push
jb
test
jp
pop
fbstp
xchg
aad
xor
rolb
inc
push
rorb
jae
push
add
dec
push
push
fs
dec
add
jo
inc
add
inc
jl
pop
in
sub
add
pop
push
adc
outsb
dec
jne
sbb
ja
add
pop
sub
and
inc
add
dec
xor
add
jmp
sub
cmp
sub
xchg
shrb
push
ljmp
sbb
push
inc
out
fsts
jno
xor
xorl
add
loopne
jg
mov
adc
popf
js
add
pop
xor
rclb
mov
loopne
add
jmp
lods
inc
pusha
sub
xchg
cld
or
xor
or
or
sahf
fwait
pushf
inc
pop
xlat
cmp
call
dec
sbb
adc
insl
jne
bound
xchg
add
fs
pop
movsb
push
adc
aad
mov
aas
cmp
add
xchg
add
add
or
push
push
push
adc
adc
adc
push
sbb
pop
sbb
sbb
sbb
push
pop
cmp
and
and
daa
add
sub
sub
sub
add
push
idivb
push
cmp
rorb
clc
dec
pop
inc
icebp
dec
jp
subl
and
cmp
xor
cmp
adc
flds
inc
pop
push
sbb
or
add
sub
cmp
push
and
jnp
jge
cmp
mov
pop
fstl
repz
setno
stc
add
jne
add
sbb
add
jmp
pop
xor
mov
shrb
scas
scas
cld
xor
mov
mov
mov
mov
mov
rolb
push
ret
mov
sbb
lret
int3
add
into
iret
rcl
rolb
rcl
add
xlat
fcomp
add
nop
in
fstp
jl
shl
add
in
out
lea
jmp
in
and
xor
mov
lret
hlt
clc
cli
sti
cld
sbb
push
incl
add
add
lods
adc
and
add
jno
sbb
and
fdivl
dec
sub
add
stc
pop
pop
xchg
add
out
mov
orb
js
ja
sub
jnp
pop
pop
loopne
add
addb
mov
cwtl
mov
xchg
add
lcall
add
out
movsl
sub
cmpsb
lock
lea
mov
mov
jle
ds
roll
pop
lret
lcall
jb
dec
xchg
add
sti
add
lds
shl
add
out
shl
icebp
ljmp
clc
sti
es
incl
enter
or
push
or
or
adc
or
cmp
sbb
loopne
pop
or
push
andb
mov
mov
mov
xchg
xchg
add
dec
pushf
addl
movsb
sbb
or
inc
ret
repnz
fnsave
addl
add
and
dec
hlt
mov
stc
mov
sbb
orb
adc
xor
loop
inc
mov
jp
add
mov
cld
mov
icebp
xchg
mov
ss
mov
mov
sub
into
out
add
or
dec
pop
loopne
jmp
add
dec
outsl
adc
adc
sbb
cmp
test
mov
mov
incb
mov
addl
xor
add
push
xchg
les
sbb
loopne
inc
mov
in
xor
cmp
sub
inc
test
add
addl
xlat
aad
push
xchg
lds
add
mov
mov
xor
or
inc
enter
dec
xchg
inc
jo
popf
insl
andl
adc
cmpb
xchg
add
xlat
shl
jo
jecxz
pop
out
xor
cmp
pusha
pop
addr16
mov
das
and
roll
xchg
aam
dec
jmp
adc
mov
cmp
inc
rorb
dec
push
lods
add
movl
leave
and
loopne
add
sub
xor
add
test
jp
dec
ljmp
inc
push
pop
add
add
incb
cld
or
pop
jmp
loopne
add
pop
leave
insl
mov
or
cld
rcrb
orb
inc
push
pop
andl
jl
xor
add
aaa
sub
inc
lock
or
lock
push
push
ud2
inc
mov
dec
in
and
jno
or
gs
add
jge
add
insl
push
mov
hlt
loopne
sbb
push
mull
out
add
inc
or
ja
shll
add
in
lret
les
push
add
daa
sbb
jg
fmuls
stos
or
dec
and
ret
xchg
pop
adc
ljmp
jnp
add
add
add
add
fiadds
or
rcll
mov
sbb
push
repz
shlb
pop
adc
sti
loopne
jno
lcall
mov
push
push
pop
sti
sbb
xorl
rolb
mov
dec
repz
adc
push
loop
test
fisubrl
mov
pushf
cmp
sub
add
bound
pop
dec
add
cwtl
jns
adc
repz
fsubrl
orl
add
inc
mov
incl
int3
stc
mov
pop
add
rcrb
dec
and
dec
or
bound
adc
pop
jae
jle
loop
mov
push
stc
xor
jb
push
xchg
jno
imul
les
mov
popl
lods
cwtl
loop
shl
iret
shll
cmp
pusha
dec
dec
pop
aaa
movd
pop
test
sbb
push
sub
adc
loopne
addl
add
add
jecxz
movsb
loop
shll
add
jno
add
subb
push
sub
fmull
ret
imul
xor
add
testb
add
test
cwtl
mov
mov
leave
mov
out
incb
int3
cmpsl
mov
sub
popa
pop
jnp
jo
dec
iret
adc
cmpsb
cmpsl
out
mov
cmpsb
add
adcl
mov
push
hlt
add
arpl
fsubl
repz
xorb
inc
mov
cmp
sub
cld
leave
faddl
push
and
fdiv
sbb
push
roll
dec
mov
add
repz
pop
call
bound
cmp
lods
pop
jmp
mov
pop
imul
andb
fs
mov
lods
ret
movsl
add
add
scas
psubusw
xor
iret
push
jp
adcl
add
dec
cs
sub
hlt
adcb
pop
add
lcall
mov
into
sub
je
shr
cmpsb
pushf
lock
add
lcall
sbb
mov
lahf
lret
rcll
sbb
jbe
add
xchg
adc
add
out
add
or
insl
mov
add
mov
inc
inc
add
sub
adc
and
clc
outsl
aas
push
add
cmc
xrelease
pop
sbb
movsb
add
mov
jmp
mov
out
lods
add
pop
push
addr16
sqrtps
pop
ja
mov
ljmp
mov
and
sub
push
scas
rolb
sbb
ds
out
add
cltd
aad
lods
xor
adcl
inc
fwait
into
sbb
add
or
jmp
jb
fs
int
aaa
push
inc
test
push
and
or
mov
sti
cmpb
push
jl
test
daa
dec
stos
repz
mov
add
and
in
pusha
dec
cmp
xlat
in
push
jp
orl
andb
out
sahf
add
bound
cld
jae
fwait
push
rolb
sbb
jns
push
std
aaa
mov
loopne
add
sahf
movsb
out
sbb
jne
cmp
roll
pop
incb
ret
imul
into
lods
shrb
in
pop
add
pop
ror
sub
inc
loopne
cmp
add
fbld
and
aaa
mov
jne
in
in
push
add
cmp
add
test
push
call
in
outsb
adc
sub
xor
add
cmp
push
fiaddl
cmp
mov
push
aam
add
out
or
mov
in
xchg
add
out
cmp
stos
bound
pop
call
add
es
fnstsw
loopne
add
add
inc
clc
inc
cmp
push
add
lea
add
rcll
add
sbb
loopne
inc
push
adc
aas
inc
jge
pop
mov
mov
cld
push
sbbl
add
pushf
add
aam
or
cs
xchg
lcall
sub
hlt
loop
mov
sub
mov
cmp
dec
mov
aaa
mov
nop
push
add
popf
rcrb
xor
sti
mov
aaa
pop
xchg
xorl
ja
jle,pt
inc
and
add
jmp
movb
adc
jp
xor
or
push
mov
dec
insb
lret
or
adc
inc
lcall
cltd
js
andl
inc
push
add
loopne
adc
movsb
or
fnstsw
xchg
sub
ret
add
bound
test
add
lcall
add
call
xchg
sub
ss
add
push
inc
add
pop
add
inc
add
pop
mov
stos
nop
dec
adcb
mov
push
cltd
popf
ffree
push
mov
jmp
jl
and
sub
dec
test
mov
mov
add
push
sub
or
sbb
adc
jnp
nop
rorl
add
pcmpeqw
jns
adc
mov
mov
and
cltd
mov
adc
dec
repz
dec
add
push
test
add
and
jbe
sub
pop
data16
imul
je
add
adc
fcom
jns
sbb
jno
inc
fisubs
loope
pop
mov
lock
pmaxsw
adc
add
or
add
pop
add
mov
add
in
ljmp
cld
and
cmp
xor
aas
mov
insl
clc
rclb
scas
or
push
pop
or
je
add
mov
push
xchg
push
lods
out
mov
add
and
loop
xor
sub
rolb
pop
cmp
pusha
test
push
mov
pop
mov
jge
add
mov
decb
push
push
push
or
rorl
jbe
mov
sbb
sbb
add
cmp
dec
push
cld
xor
and
xor
add
icebp
jbe
pusha
adc
add
and
pop
out
add
lock
testl
jo
pop
hlt
mov
push
add
mov
inc
xlat
lahf
jl
add
es
add
pushf
xor
pop
inc
add
jecxz
enter
call
and
xor
cmp
xor
imul
or
push
lcall
loopne
outsb
sub
add
ss
push
lea
push
scas
adc
inc
rorl
or
repnz
inc
stos
ss
add
adc
mov
cs
add
mov
jle
neg
add
lods
inc
push
mov
hlt
push
cmp
scas
fisubl
add
xor
adc
lock
in
push
add
imul
add
push
dec
mov
lock
add
in
or
scas
gs
add
cmp
mov
jne
popl
push
push
dec
test
fisttpll
cmp
fs
cld
mov
push
push
cwtl
std
add
or
mov
add
out
sub
fsubrp
or
sub
fsubs
push
adc
shlb
dec
add
test
mov
push
out
sbb
fistpl
pop
and
push
cmp
add
add
xor
enter
stc
shlb
outsb
ds
inc
mov
push
push
or
add
push
lret
cmpsb
call
cmp
ljmp
or
and
mov
mov
ret
push
push
or
sbb
loop
xchg
mov
adc
or
and
mov
ljmp
loopne
mov
insb
push
and
cli
cmp
push
negb
test
lcall
int
hlt
inc
loopne
je
clc
pusha
sbb
push
jl
shrb
rorl
push
test
add
and
fldl
push
pop
jbe
in
sub
xor
push
inc
ds
add
jne
data16
cmpsl
add
xor
add
in
and
add
clc
add
mov
add
cmp
aaa
xchg
pop
xor
mov
push
sbb
adc
dec
andb
cmp
and
add
add
inc
cld
push
mov
mov
gs
outsl
call
push
xor
adc
pop
ss
jmp
mov
inc
xchg
out
scas
jo
cwtl
in
add
and
add
push
or
pop
bound
inc
pushf
dec
das
mov
add
outsl
or
add
push
std
sub
in
xor
push
adc
mov
push
push
dec
dec
sub
nop
aad
xchg
push
test
mov
dec
dec
pop
adc
pop
repnz
scas
inc
loopne
dec
cld
bswap
test
or
adc
jbe
loopne
aas
out
ds
mov
inc
mov
push
or
mov
lahf
adc
int
xor
dec
cmp
or
mov
loop
push
sbb
pop
nop
rolb
inc
xchg
dec
das
and
jnp
mov
dec
cmp
mov
lret
xorb
add
call
add
addr16
push
mov
add
push
ret
test
adc
out
add
jae
cmp
aaa
fisttps
add
xor
xchg
rcr
add
cmp
ja
xorb
stos
mov
aad
jecxz
icebp
xor
insb
mov
mov
pop
stc
xchg
sbb
inc
dec
enter
sbb
push
fwait
jns
mov
push
outsl
add
cwtl
mov
cmp
je
lahf
xor
lret
in
pop
add
ret
popa
outsb
arpl
add
lcall
cmp
imul
mov
add
data16
or
push
mov
adc
inc
jb
mov
xchg
jge
jbe
add
pop
dec
hlt
cmp
pushf
add
sbb
in
stc
cmc
jbe
and
inc
inc
movzwl
clc
sti
int3
and
jne
add
sbb
lock
pusha
mov
dec
dec
xchg
icebp
xor
push
shl
mov
add
repz
pusha
mov
sti
add
push
subb
adc
jl
hlt
pop
add
inc
dec
in
or
jmp
add
cmp
hlt
or
add
sbb
push
pop
mov
push
sub
ljmp
jle
sbb
jl
jbe
ret
push
rorl
movswl
sbb
call
hlt
mov
movb
cmpb
das
inc
sub
rcll
sbb
jne
lea
in
es
dec
orb
jl
lldt
xlat
adc
roll
je
push
push
pop
lahf
fidivl
dec
repnz
mov
xor
cmp
and
sarb
loope
sub
in
clc
addl
ret
cmpb
cmp
sub
rorb
mov
mov
sbb
mov
and
dec
inc
mov
int3
add
mov
sub
pop
outsb
add
rdtsc
mov
cwtl
adc
imul
cltd
inc
les
xor
fnstcw
inc
faddl
xchg
xor
add
mov
insb
daa
mov
testb
call
test
hlt
loopne
popa
push
roll
mov
rorb
pop
add
jbe
adc
xchg
out
add
mov
mov
test
mov
call
mov
mov
imulb
cmpsl
jl
inc
test
add
xchg
lods
cmpl
je
push
jecxz
mov
adc
xchg
nop
call
daa
imul
pop
push
add
sub
addb
xor
pop
dec
sub
mov
hlt
sub
cli
push
mov
add
out
jb
fbstp
or
sbb
pop
jg
or
xorl
sub
enter
loopne
call
or
mov
add
adc
sbb
push
loopne
cwtl
inc
push
pushf
sgdtl
fdivs
fdivrp
jne
pop
rcl
cld
andl
mov
lock
aam
add
mov
fisttps
xchg
int
dec
repnz
sub
jne
faddl
add
mov
mov
sbb
test
cmpb
add
sub
add
mov
xchg
dec
data16
push
push
enter
dec
add
test
add
bound
mov
cwtl
dec
fsubrl
in
sub
pop
jae
jmp
dec
out
add
or
pop
add
or
rol
sbb
lds
jno
adc
sbb
push
test
push
add
rcl
lds
imul
test
and
gs
add
and
jnp
cmpsl
psadbw
jbe
inc
mov
inc
add
mov
fs
mov
push
xor
aad
add
cmpb
sub
mov
push
or
aad
sub
add
stc
add
andb
or
and
inc
outsb
mov
push
adc
dec
add
sbb
jp
ret
sub
adc
dec
pop
in
orb
mov
call
loop
mov
jl
or
enter
out
andl
add
or
jmp
mov
dec
push
nop
clc
arpl
mov
dec
aaa
or
fs
or
addl
pushf
xor
loope
fsubs
push
lea
cmpb
ret
arpl
jmp
rolb
and
mov
inc
and
loopne
add
or
add
loopne
inc
leave
pop
lods
cld
or
xor
testb
or
dec
adc
aam
cltd
test
sub
decl
insl
push
inc
pop
lds
add
add
minps
sub
cmp
test
jmp
or
add
push
mov
ret
ja
or
add
cli
pop
daa
adc
and
pop
data16
mov
pop
movsl
mov
inc
mov
insl
jl
je
push
xorb
jmp
push
mov
aad
gs
push
mov
add
adc
mov
lret
add
push
jbe
jecxz
add
xchg
gs
xor
sbb
push
push
add
leave
add
adc
bound
icebp
dec
fcoml
js
repnz
add
push
and
add
push
or
adc
cwtl
push
add
and
xor
ss
pop
imul
inc
push
test
scas
cld
jo
lret
jns
aas
test
xchg
idivb
imul
arpl
inc
outsb
push
movsb
hlt
lods
sbb
xor
in
add
call
dec
add
in
xor
cwtl
out
cmp
lock
inc
inc
mov
outsb
mov
insl
shlb
add
lods
dec
xor
mov
adc
js
add
sub
and
xchg
xor
fdivrs
lods
push
lods
push
push
jo
xchg
rcr
cld
pusha
mov
or
inc
cmp
in
mov
pushf
push
sahf
mov
pmaxub
inc
pop
jb
dec
jo
add
adc
or
push
lea
add
mov
mov
jnp
add
or
stos
pop
push
add
in
repnz
adcb
add
inc
add
and
fdivl
test
out
xchg
inc
jl
push
js
mov
push
inc
jns
xor
dec
dec
mov
xor
popa
es
add
pop
sub
jae
hlt
int
ja
add
dec
pop
loopne,pn
pop
cld
les
add
xchg
mov
in
and
int3
add
ror
pop
hlt
aam
cmc
or
lds
rol
xor
adc
push
jge
dec
ljmp
sbbl
mov
add
jp
add
psubsb
sub
push
and
in
call
mov
repz
das
clc
inc
and
push
dec
test
xchg
xchg
cwtl
add
sub
push
cmp
push
adc
sbb
fs
cmp
test
sub
add
jns
stc
mov
add
inc
dec
inc
inc
pop
mov
mov
push
sub
cmp
jb
sbb
push
push
sub
xor
push
repnz
in
push
das
xchg
icebp
xchg
mov
cmp
popf
add
shll
xor
fnstenv
add
push
outsb
imul
cmp
add
jno
jmp
push
inc
push
cmp
and
dec
push
and
mov
cltd
cwtl
jne
roll
das
adc
or
push
jge
dec
add
clc
jne
outsl
testl
and
push
incl
adc
stos
sub
pop
fs
xor
push
movsl
test
push
ljmp
outsl
popl
or
cld
js
flds
adc
jae
cmovne
pusha
and
lock
push
push
push
int3
push
push
or
mov
shl
je
sub
add
xor
push
mov
add
xchg
cmpl
add
imul
xchg
add
jo
and
jmp
lahf
dec
inc
enter
les
mov
mov
jmp
xchg
fmull
dec
popa
pop
jns
xor
mov
pop
push
sub
add
jmp
addb
clc
add
xchg
in
add
loope
adc
rolb
repnz
mov
add
and
add
pop
cmp
add
xor
xchg
add
adc
or
dec
nop
and
add
js
int
lret
pop
jmp
aam
flds
adc
add
addr16
test
pop
mov
xor
sbbb
push
xor
jne
data16
cmc
rclb
test
fisttpll
push
mov
test
adc
pop
mov
add
and
insl
add
jmp
inc
jle
fildl
or
movsl
notb
add
stc
inc
out
roll
pop
in
fsubrs
xchg
sub
adc
pop
mov
sub
inc
add
push
pop
cmpsb
or
mov
mov
mov
cmpl
ret
and
pop
into
inc
add
push
push
cmpsb
dec
pusha
data16
shr
leave
add
hlt
pop
sbb
mov
sbb
mov
sarb
call
test
pop
pusha
lods
ljmp
hlt
sub
loop
sub
jo
imul
pop
cmp
data16
add
mov
mov
push
mov
dec
add
scas
hlt
add
or
push
sti
ja
popa
add
mov
scas
mov
mov
add
jmp
jnp
popf
xor
add
loopne
add
lock
hlt
or
in
mov
adc
xchg
mov
lds
mov
es
mov
out
xor
xchg
sbb
data16
loopne
leave
push
js
jae
outsb
adc
dec
add
add
cmp
aas
mov
add
les
and
mov
leave
sub
sbb
dec
dec
push
mov
sub
mov
cmp
and
mov
sub
rorb
or
xor
fildl
addb
mov
push
sbbl
pop
pop
movsb
roll
aas
pop
les
add
mov
ret
aam
lds
stc
cmp
into
dec
popa
add
or
data16
or
inc
sub
sbb
cmp
sub
xchg
push
and
outsl
vmread
xor
jg
pop
and
clc
cmp
pop
jo
hlt
and
je
js
pop
or
push
adc
pop
out
xchg
sub
cmp
push
andb
andl
pushf
cmp
cmc
mov
adc
scas
je
push
das
cwtl
jl
pushw
inc
fs
and
mov
mov
or
dec
mov
cs
inc
pop
add
cmp
and
add
dec
scas
adc
push
dec
mov
jl
push
or
add
ds
pop
sarb
xchg
jo
ret
lea
add
std
shl
cmp
shll
mov
cmp
cwtl
daa
jmp
ltr
jne
add
sub
jb
test
and
xor
setb
sbb
mov
mov
inc
stc
call
outsb
dec
mov
add
mov
pusha
add
rolb
mov
and
mov
scas
xor
lahf
mov
adc
sbb
sub
add
inc
mov
jmp
or
adc
mov
add
sbb
movl
jmp
pop
cmp
jl
add
inc
jns
push
add
jp
ss
or
call
xor
movsb
lods
sarl
or
sbbb
into
rsqrtps
pop
dec
push
add
fldcw
les
roll
int3
jb
add
xadd
rclb
cmp
mov
in
and
mov
pop
cmpb
in
or
pop
or
sbb
jg
int3
repz
push
or
push
out
dec
mov
mov
lea
jmp
scas
mov
dec
mov
cli
lret
fs
lods
add
orl
add
leave
jne
inc
xchg
add
addl
jg
dec
in
dec
add
stos
jp
add
add
add
xchg
cwtl
adc
nop
push
out
add
gs
or
mov
fimull
imul
push
and
sub
push
or
int3
inc
mov
sub
std
inc
jne
add
adc
aam
shr
add
inc
mov
xchg
push
add
push
cld
cmpb
je
sbb
sub
add
leave
add
loopne
inc
movsl
testb
pop
mov
pop
push
popa
jb
cs
lret
les
jno
rclb
inc
cwtl
in
dec
bound
pop
jmp
add
aas
xchg
data16
sub
jecxz
push
into
stos
mov
hlt
dec
pusha
cmp
adc
sub
nop
rcl
cwtl
push
mov
scas
cld
jl
adc
lcall
or
clc
mov
xor
roll
fcompl
adc
xchg
inc
nop
cmp
lods
loopne
cmpb
add
sub
lea
pop
fwait
repnz
or
push
jg
add
test
adc
sub
cmpsb
subb
fs
dec
adc
pop
roll
in
stc
loopne
sub
xchg
pop
sbb
das
lret
lahf
cmpb
xchg
adc
and
imul
cli
cmpsb
mov
insb
insb
push
test
add
add
inc
outsl
insl
xor
cmp
add
bound
add
jns
mov
mov
rclb
mov
aam
push
adc
sbb
cmpl
pop
incb
inc
arpl
adc
xchg
sbb
xchg
mov
add
hlt
mov
add
adc
pcmpgtw
xchg
shlb
and
xor
je
and
add
dec
gs
test
jo
icebp
lret
subb
xor
test
sahf
fs
insl
add
adc
jae
mov
aaa
dec
add
nop
cmp
add
mov
xor
shlb
call
les
jbe
cmp
mov
call
mov
inc
jne
dec
xorl
and
loopne
leave
js
mov
inc
push
add
stos
push
pusha
xchg
xor
add
or
add
push
sbb
add
mov
and
in
xor
sub
lahf
mov
dec
pushf
or
adc
add
fs
mov
xchg
lock
add
and
bound
popa
xlat
call
add
testb
cld
xor
push
into
lock
add
call
out
adc
fucomi
stos
das
add
pop
or
cmp
jo
push
pop
add
push
cmc
incl
lds
push
xchg
sbb
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
inc
cmp
mov
fwait
add
cmc
push
push
int
ss
push
jmp
xor
pusha
add
lret
lock
jnp
fsubl
aas
add
cmpsl
pusha
pushf
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
roll
inc
mov
xor
add
add
loop
popa
ret
or
push
jne
pop
pop
add
push
mov
add
ljmp
jae
addl
adc
jb
popa
mov
xor
and
inc
and
add
or
add
add
mov
sbb
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
add
ret
inc
je
dec
pop
shrb
xor
rol
andb
inc
or
add
ret
jne
cmp
je
shl
in
add
int
fadds
inc
cmp
cltd
jne
or
inc
aad
sahf
andb
push
adc
negb
enter
jp
loop
pop
add
mov
lock
nop
push
pop
add
cmp
jp
or
jmp
or
jnp
add
mov
cli
jo
je
add
rolb
add
test
mov
mov
call
and
sbb
insb
pushf
notl
shlb
les
pop
mov
ret
push
test
or
cmp
adc
ret
xor
je
jp
ljmp
aaa
test
dec
icebp
lret
xor
loope
in
add
or
sub
add
add
mov
sbb
hlt
fwait
outsl
int3
or
adc
cwtl
aas
add
xchg
fisttps
int3
movsl
call
sbbl
add
rcrb
xchg
adc
aas
add
jae
dec
add
cmp
pop
or
adc
cmpsb
adc
mov
ud0
dec
add
lret
aaa
xchg
test
pop
movsl
sti
adc
incl
add
fs
pop
out
cmp
out
movsb
sbbb
adc
testl
lock
jno
add
ja
add
sub
push
inc
sbb
nop
and
pusha
push
inc
pushl
or
inc
dec
popf
cwtl
and
dec
or
jo
add
add
lds
and
xchg
pop
add
or
daa
or
pop
loopne
add
dec
fs
ret
sbb
jl
add
push
decb
je
add
push
out
add
push
hlt
add
in
cmp
and
scas
shlb
dec
inc
jle
pop
sbb
mov
xlat
sbb
fsubrp
nop
push
fdivrs
push
movsb
push
je
subl
hlt
jne
and
add
mov
test
lods
andps
sub
pop
jns
jbe
inc
and
or
rolb
into
or
shll
or
jp
inc
add
add
or
add
pop
lcall
cmp
ja
jne
xlat
push
ret
mov
out
pop
xorl
pusha
push
mov
icebp
xchg
add
jmp
hlt
mov
aas
add
xorl
jecxz
sub
les
mov
mov
jle
sbb
xchg
cli
pusha
and
cmp
scas
jno
pusha
mov
add
push
lods
push
sub
or
rolb
jg
pop
repnz
xor
incl
mov
out
mov
jmp
xlat
add
lcall
and
add
mov
adc
xor
add
fst
pusha
hlt
lods
add
and
xchg
mov
fs
fcmovu
loopne
shlb
mov
mov
movsl
pop
or
in
roll
push
mov
push
jo
rolb
add
pop
pusha
cmp
daa
or
clc
incl
or
sarl
mov
in
and
mov
add
jmp
xchg
adc
je
jl
add
inc
sbb
push
jo
sbb
pusha
add
sub
jno
add
das
xor
mov
push
jmp
push
or
add
stos
pop
jl
mov
sub
scas
es
std
adc
ja
add
stos
and
sub
aam
mov
jne
xchg
hlt
rorb
add
arpl
cli
jb
add
dec
fcoms
jo
push
ds
add
pop
sbb
add
or
sbb
lock
scas
cmp
add
cli
pop
mov
or
sub
and
add
aad
cwtl
cmpsb
push
xor
shrb
imul
mov
andb
loopne
push
in
enter
cmp
push
sbb
xor
adc
pop
insl
add
cmp
fmul
xchg
pop
sbb
aam
mov
test
rclb
pop
add
or
xor
int3
out
loope
loop
pusha
sub
out
mov
mov
rolb
pop
lea
pop
fisttpl
js
or
xorb
lods
dec
mov
jns
add
push
pop
mov
add
push
test
or
jl
add
xchg
mov
stos
lcall
popa
add
imul
jno
add
jne
ret
rolb
jp
stc
hlt
jmp
pop
and
lret
js
adc
lcall
push
test
or
adc
add
adc
cmpsl
dec
add
ret
lods
inc
mov
add
xchg
xor
add
sbb
dec
add
or
cmp
loop
jecxz
pop
aam
outsl
sbb
in
sub
or
ds
in
push
add
scas
inc
and
jbe
out
test
mov
scas
mov
call
push
xchg
test
pop
pusha
repnz
add
popa
and
mov
push
push
hlt
mov
bound
add
cmpb
jne
pop
stos
or
mov
jle
in
loop
lds
lods
adc
add
subl
jo
sbb
mov
pop
mov
xor
jp
pop
fimull
adc
out
repz
mov
adc
add
add
imul
daa
push
incl
pop
jl
jo
icebp
and
pop
sub
clc
hlt
test
inc
hlt
or
jmp
rcl
inc
int3
and
enter
jecxz
mov
jb
mov
lods
sbb
xchg
andb
imul
std
add
daa
stos
sub
or
add
shlb
mov
addl
cld
andb
jne,pn
outsb
loop
add
dec
jmp
fwait
add
scas
mov
xor
jmp
adc
mov
add
and
divl
mov
repz
pop
test
xorl
sbb
rorb
mov
add
dec
jne
mov
imul
add
pop
inc
out
pushf
dec
dec
dec
add
enter
push
add
jbe
bound
push
icebp
lcall
pop
push
add
add
sbb
push
add
lea
cmp
aas
in
add
inc
or
es
lods
sbb
sbb
adcb
jnp
add
movsb
aaa
xor
sub
jle
add
and
add
push
mov
push
jb
or
inc
push
adc
push
push
cwtl
aad
add
xor
jge
es
adc
xor
orl
add
adc
inc
add
mov
xchg
jl
lahf
adc
jnp
cmp
xchg
stos
xor
add
movsb
lock
mov
jne
rorl
xor
mov
ljmp
aaa
mov
add
adc
ljmp
jl
adc
add
add
xlat
add
int3
dec
inc
pop
and
shlb
test
sbb
jmp
enter
jbe
sete
sbb
inc
add
or
cmp
push
push
add
test
add
pop
and
add
into
cwtl
xor
gs
xchg
movb
test
adc
mov
adc
js
lahf
shlb
dec
in
icebp
pusha
and
movsb
fnstcw
addb
pushf
mov
mov
xchg
sarl
push
fadd
inc
add
sbb
pop
inc
inc
popf
jecxz
add
out
add
sti
xorb
sub
fs
pop
inc
arpl
ds
sub
loope
lds
inc
xor
nop
add
and
cmpb
add
out
mov
repnz
pop
pop
inc
add
cmp
test
adc
out
adcb
jge
aam
and
es
std
adc
pop
sbb
loope
dec
mov
and
inc
xchg
mov
jl
add
cmpb
je
sbb
rolb
adc
add
adc
insb
push
add
loop
cwtl
sub
xor
push
adc
mov
pop
aam
mov
cld
loope
add
mov
add
push
daa
ja
add
xor
aas
jmp
add
jo
sub
lea
rcrb
add
lret
add
xchg
dec
push
test
and
int3
add
mov
sahf
add
sbb
add
jle
mov
mov
push
cwtl
jp
cmp
or
mov
push
sbb
out
loop
pop
incb
stos
cmp
sub
inc
add
test
shll
outsl
je
shll
jne
push
adc
inc
int3
dec
add
inc
dec
dec
and
add
cs
imul
dec
mov
cld
inc
add
out
sub
call
pushf
fiadds
outsb
sbb
mov
nop
cmp
add
mov
add
cmp
mov
and
daa
sub
push
dec
cmp
pop
mov
jge
in
push
lahf
inc
jp
add
push
cmp
cmp
loope,pt
jl
cmc
add
push
xor
and
push
adc
jnp
test
fsub
xchg
adc
dec
add
inc
rorb
add
add
inc
push
dec
ret
cmp
adc
les
jmp
push
add
push
and
dec
cmp
add
repz
out
mov
lcall
inc
aas
rcl
add
sbb
xchg
xchg
cli
jne
pcmpgtw
sub
stos
hlt
lock
push
ret
cmp
movsl
sbb
rcr
inc
imul
ja
scas
out
lea
mov
movsl
cwtl
data16
hlt
jg
or
addl
repz
fdivrl
inc
add
mov
push
insl
cmovp
imul
pop
dec
pop
push
jne
xchg
pop
inc
sub
out
push
into
lock
sub
xor
das
nop
insb
pop
popa
imul
lods
jb
and
cmpl
cmp
xor
add
pcmpgtd
fcmovne
inc
call
add
mov
pop
bound
push
adc
dec
add
stos
pop
ljmp
test
mov
mov
sbb
xchg
lods
lock
es
sub
push
add
in
sbb
jl
pop
imul
add
xchg
inc
mov
fldl
adcb
rcrb
mov
sbb
add
add
xchg
sub
idivb
xor
and
incb
sub
rcrb
test
xor
jb
shlb
sbb
outsb
sub
xlat
cwtl
sbb
data16
pop
add
sub
mov
call
add
sbbb
push
loopne
cmp
pop
cmc
testl
imul
cmp
testb
dec
outsl
xorb
in
push
adc
js
out
add
enter
testl
shll
push
mov
push
gs
jb
cmp
inc
sub
add
inc
lods
lock
pop
or
notb
add
popf
call
inc
ja
test
das
add
adcl
and
rclb
outsl
add
imul
fsubrl
push
or
test
std
adcl
add
mov
mov
lret
pusha
in
pop
push
mov
xchg
push
shlb
lea
subb
pop
adc
das
push
aaa
add
aad
dec
mov
dec
xchg
call
in
add
lock
push
out
sysret
test
xor
mov
int3
jge
enter
inc
add
add
add
sahf
xchg
leave
stos
add
cwtl
test
imul
popa
les
add
xchg
ss
inc
add
or
sbb
enter
shlb
push
xor
mov
adc
xor
add
cltd
pop
cmpb
fs
aas
cwtl
pop
pop
add
or
pusha
xor
clc
push
lods
adc
and
add
and
jne
cmp
add
mov
adc
ja
test
dec
shlb
std
add
ficompl
jno
sub
xchg
sbb
outsb
add
in
add
dec
adc
inc
repz
movsb
cmp
sub
jnp
lret
add
pop
or
and
inc
enter
add
cvtpi2ps
cmc
fs
mov
jne
pop
inc
inc
add
xor
pop
lahf
in
fnstcw
or
mov
jle
ret
push
lods
jl
call
pop
mov
or
inc
push
push
pusha
adc
jae
test
cmpb
lahf
mov
fdivrl
xchg
xchg
xchg
mov
add
pop
adc
movsl
push
add
gs
test
mov
pop
repnz
shrb
inc
scas
jl
jno
jmp
loopne
and
add
push
data16
insl
add
fs
xchg
add
and
leave
xor
xchg
mov
inc
sbb
mov
ret
push
push
inc
xor
cmpsl
scas
test
in
sahf
add
xor
imul
andl
sti
mov
sbb
shlb
les
add
dec
test
cmp
rclb
adc
and
inc
pushf
add
in
call
pop
xor
push
lock
test
or
pop
jge
popf
sub
jno
fmuls
aas
test
adcb
imul
dec
js
jns
clc
cmpsb
or
inc
arpl
adc
jae
enter
icebp
popf
es
insl
or
std
adc
mov
hlt
pushf
cmp
push
jle
push
or
push
call
xchg
stos
add
or
rolb
mov
dec
rcrl
hlt
add
fldcw
add
bound
sbb
sub
add
movzbl
jbe
push
das
in
add
sub
jne
mov
mov
inc
in
push
push
jmp
inc
xchg
jmp
inc
enter
add
or
or
inc
cmp
insl
jno
imul
aas
xor
sub
shrl
mov
add
sarb
push
xchg
pop
push
fidivs
hlt
inc
mov
add
adc
addl
sub
and
push
push
and
xchg
push
shrb
mov
or
adc
clc
mov
ret
cmp
fwait
and
rcll
dec
adc
and
adc
adc
mov
mov
xchg
call
add
cmp
test
push
imul
nop
imul
aam
adc
cld
mov
and
push
shrb
scas
add
jl
pop
nop
mov
xchg
pop
sub
addl
mov
inc
sbb
xchg
faddl
jg
pop
dec
sarb
mov
or
jnp
or
add
cs
add
sub
adc
popw
jle
add
test
xchg
lret
mov
jno
add
adc
push
cmpsl
sbb
jle
add
sbb
xchg
sub
and
fs
add
xchg
inc
mov
add
les
enter
and
xchg
shlb
or
fldl
pop
add
xchg
push
aam
pop
scas
xchg
add
cwtl
iret
cmp
pop
test
mov
sub
dec
xor
ds
push
fmuls
cli
mov
jg
push
pop
cmp
test
lcall
or
mov
addb
push
fs
cmp
add
setg
loop
jmp
inc
lcall
sarb
pop
and
jg
std
cli
adc
adc
mov
jae
insl
pushf
dec
xchg
add
push
hlt
cwtl
nop
pop
test
add
shr
inc
sbb
add
clc
movsb
or
lahf
test
out
or
push
push
mov
push
jge
std
out
pop
xor
cmp
ja
push
jns
test
clc
pushf
add
dec
add
aam
mov
mov
or
xchg
pop
add
cmp
cs
pusha
and
cmpb
in
das
and
push
xchg
aad
and
in
mov
add
mov
mov
adc
adc
movsl
sar
sub
rclb
js
popf
in
add
add
ds
lods
add
adc
add
xor
adc
add
mov
sub
cmp
mov
push
cmp
dec
leave
fldt
insb
mov
or
mov
add
hlt
mov
add
push
in
add
xor
outsl
test
mov
test
or
data16
dec
in
mov
mov
in
add
dec
mov
imul
pop
dec
or
dec
jae
mov
ss
push
adc
add
inc
repz
pushf
dec
add
cmp
sbb
mov
cld
loopne
xor
sbb
dec
sub
cmpl
je
and
push
jo
inc
bound
fs
sub
shrb
scas
sbb
lds
das
js
adc
outsb
add
xchg
push
bound
js
jnp
in
sbb
notb
add
xor
add
inc
push
mov
jl
dec
out
repnz
and
sub
ficoms
mov
fstl
cmp
xor
loop
sarl
andl
xorb
es
bound
imul
and
pop
dec
add
outsl
shrb
mov
add
les
andl
hlt
pmuludq
mov
jle
add
imul
add
and
add
pop
adc
add
push
outsl
push
mov
mov
into
push
xor
add
imul
je
add
jnp
pop
sub
cmp
dec
orb
sbb
pop
xchg
inc
pop
stos
push
lahf
inc
popf
pop
cmp
push
add
mov
push
sub
mov
dec
push
cmpsb
cmp
add
dec
jne
adcw
jge
add
push
imul
dec
inc
adc
dec
adc
das
inc
testb
sub
and
add
mov
nop
lahf
sub
pop
lods
xor
addb
dec
aas
sti
and
movsl
adc
adc
push
mov
adc
add
ds
lldt
push
inc
or
push
add
xchg
mov
or
sub
add
nop
mov
aad
jmp
sub
add
orb
push
jo
mov
lret
and
mov
mov
sbb
mov
subl
cli
pushf
test
stc
repnz
out
inc
idivb
sub
mov
test
aas
push
xor
lock
push
rcrb
dec
cmp
loopne
xchg
hlt
push
xchg
mov
mov
rcrb
adc
xor
add
sbb
rcl
pop
add
ror
rorl
shlb
int3
in
andl
fdiv
rolb
add
push
lret
xchg
addr16
add
push
push
jnp
dec
xor
in
scas
int3
push
clc
in
adc
mov
mov
loopne
mov
je
adc
or
mov
shl
lock
mov
and
sub
push
pop
pop
cli
into
sub
jmp
rorl
sbb
jo
xor
sbbl
sbb
and
dec
push
pop
push
femms
xchg
stos
les
clc
enter
test
cmp
bound
add
push
pop
aaa
pop
mov
mov
adc
lahf
xor
out
rolb
or
pop
add
dec
add
xchg
pushf
mov
das
sbb
sbb
pop
add
mov
mov
imul
in
cmp
sub
mov
add
cwtl
dec
xchg
sbb
das
movl
sbb
sti
and
clc
cmp
jb
mov
enter
inc
add
call
add
les
inc
add
fidivrs
aam
sub
pop
pusha
in
push
push
pop
insb
adc
jns
adc
cmovp
cmpsb
testl
nop
mov
repz
mov
inc
repnz
cmp
ret
cmpsl
fnsave
mov
call
sbb
pop
lods
mov
fnstenv
jnp
cmovs
sbb
cmp
dec
dec
inc
pop
inc
cmp
adc
or
sub
inc
dec
cmp
mov
inc
or
lret
add
cmp
popf
leave
dec
or
xor
xorb
add
mov
add
adc
cmovb
cld
mov
or
in
sub
add
ret
test
add
movsb
icebp
mov
jmp
adc
mov
push
aas
add
hlt
adc
cwtl
iret
mov
sub
add
jmp
push
add
inc
fldl
mov
jne
pop
sahf
mov
jmp
mov
pop
dec
mov
rclb
mov
pop
ds
pop
adc
cmp
push
add
dec
test
shll
mov
jo
test
aas
jb
or
sbb
add
fdivp
dec
popa
inc
add
cwtl
jmp
daa
dec
jp
out
clc
add
add
cmp
add
push
mov
or
sbb
xchg
sbb
in
pop
ljmp
inc
ja
addb
lret
pop
hlt
pop
adc
add
clc
cmp
add
mov
add
lock
add
sub
sub
testl
add
es
lret
sbbb
fldl
add
dec
sub
loopne
pop
loope
jns
das
or
mov
lods
add
jo
add
sbb
cmpsl
add
sub
sbb
push
xor
arpl
popf
jg
inc
xor
or
add
add
cmp
ja
push
add
fnstsw
imul
jge
sub
inc
xchg
add
je
push
dec
ret
arpl
mov
add
push
adc
sbb
jo
add
push
xchg
pop
inc
sbbb
rep
jle
push
testb
stc
inc
loope
incb
sub
cmp
sahf
imul
xchg
sbb
js
repnz
lock
aaa
mov
cmp
xchg
fs
in
push
imul
sarb
loope
pop
adc
incb
fs
lds
test
and
or
pop
sub
cmp
mov
jne
pop
add
sbb
movsb
add
adc
push
pop
mov
push
add
movsl
cmpb
sub
jmp
add
inc
adcb
fwait
popa
sahf
cmp
pop
rdpmc
int3
push
and
add
lret
push
cmp
pop
and
cmp
insb
iret
loopne
adc
or
sbb
pop
lret
subb
xor
pusha
inc
sbb
sahf
jne
cmp
add
out
sbb
ret
pop
cmc
dec
je
pop
add
in
scas
sub
add
mov
dec
push
shrb
mov
test
pop
jno
in
into
popa
cmp
or
ljmp
add
lods
enter
div
add
js
cmpl
inc
xchg
lea
add
std
in
add
xor
fdivs
fiadds
jle
push
repz
pop
adc
add
cli
ljmp
and
xchg
xchg
and
out
xorb
cmp
das
je
add
imul
add
mov
cld
loopne
add
test
push
dec
push
aam
pusha
cwtl
out
sbb
repnz
add
add
decb
sub
rep
test
add
ret
daa
aaa
pusha
push
pop
jb
or
push
mov
pcmpeqd
inc
jne
mov
mov
mov
inc
mov
or
pop
fsubrl
add
cs
inc
jl
loopne
clts
push
sub
jle
bound
jmp
arpl
sarl
add
push
mov
enter
rcrl
add
mov
inc
add
jmp
dec
sbb
sbb
sub
and
je
add
or
add
adc
jmp
jg
incb
push
add
leave
negb
add
mov
add
pop
push
sub
mov
cld
add
enter
cmp
fstp
aam
icebp
add
jge
sub
jno
fdivrs
jb
pop
aaa
cmp
cmp
adc
inc
add
pop
push
add
orb
add
and
into
add
cmp
mov
sbb
add
mov
sbb
inc
jne
mov
pop
aam
call
push
adc
push
mov
sbb
dec
lahf
mov
adc
jae
pop
mov
adc
rcrb
prefetch
and
and
add
xchg
dec
fcoml
mov
jp
add
sub
dec
clc
adc
ret
insb
jmp
push
lock
add
repz
xor
jnp
add
push
insl
adc
mov
mov
dec
out
jno
lds
dec
dec
int3
and
inc
mov
sub
fdivl
add
popa
outsb
xchg
addr16
mov
inc
add
add
ja
mov
inc
jg
int3
push
jne
mov
mov
flds
dec
ret
cmp
add
sbb
or
out
cmp
addr16
cmc
gs
iret
add
or
or
loop
mov
cmp
push
movsl
jp
test
pop
mov
loopne
xlat
push
repnz
decl
jmp
or
hlt
mov
add
xchg
lds
adc
call
mov
pop
jbe
and
add
rorb
add
inc
pop
and
mov
call
loopne
fwait
dec
iret
xlat
gs
add
xor
pop
add
repz
xchg
nop
stc
add
ljmp
or
add
das
icebp
jmp
scas
leave
or
cmpsb
xor
bound
cmp
sbb
jo
or
mov
andl
call
fdiv
addr16
xor
dec
add
dec
jbe
test
inc
pop
mov
xor
mov
xchg
push
add
adc
cmp
sbb
jns
add
or
and
push
or
sub
xor
jns
add
push
shl
dec
hlt
jo
jae
adcb
cwtl
sarb
sbb
xor
add
jae
fs
mov
nop
test
jecxz
loop
repz
sbb
dec
lods
add
shlb
xchg
cwtl
pop
rolb
out
loop
rolb
mov
or
push
hlt
jg
add
rorb
and
pop
fadds
dec
test
in
adc
jp
rclb
jle
sar
les
xchg
sbb
je
lidtl
out
dec
pop
adc
add
mov
mov
cmovl
inc
dec
dec
icebp
out
outsl
cmp
ds
pop
sbb
sub
fadd
dec
dec
out
pop
push
inc
leave
pushf
loope
adc
rolb
inc
jp
fidivs
clc
ja
add
adc
inc
or
mov
std
aad
inc
or
cmp
xchg
push
bound
mov
inc
sbb
nop
or
or
and
mov
rclb
repnz
and
push
jnp
add
adc
push
lods
lahf
pop
mov
and
adc
orl
push
add
xchg
jo
xor
lcall
jle
cmpsb
test
push
inc
pminsw
loopne
js
xchg
sbb
push
mov
inc
shr
xorl
or
and
push
mov
or
mov
ss
enter
stc
push
scas
add
sub
setb
cmp
add
mov
faddl
imul
or
flds
cmpsl
and
pop
arpl
adc
ret
pop
cld
iret
pop
movsl
jae
cmp
cmpl
fidivs
pushf
add
add
mov
andb
inc
sarb
mov
lret
add
aad
or
push
decb
dec
jp
sub
std
pusha
push
adc
xchg
jle
add
in
jmp
add
sub
cmp
sti
push
dec
adcb
dec
movsb
outsb
jge
scas
sub
mov
inc
inc
sub
loopne
mov
lcall
fidivl
les
nop
sub
rcll
outsb
jno
add
and
mov
loop
sbb
cmp
add
inc
imul
add
add
dec
adc
aad
loopne
and
stos
xchg
fidivl
enter
ret
mov
lods
insl
add
add
mov
add
adc
insl
lods
movsb
fnstenv
mov
cld
and
sbb
mov
inc
clc
mov
push
jge
je
push
push
and
pusha
lret
jb
lds
xchg
add
pop
fldt
rclb
mov
push
xor
push
add
sbb
adc
xchg
mov
nop
cmp
jo
fstpl
lcall
add
out
pop
add
loopne
add
xor
loope
mov
cmp
rol
loop
sahf
mov
or
add
or
pop
rcrl
mov
sub
pop
pop
iret
mov
insl
add
movsl
std
sbb
xchg
daa
rcl
cld
sbb
or
add
pop
mov
test
inc
push
loop
mov
and
lret
adc
cmp
ss
push
dec
or
add
aas
jnp
aad
add
and
arpl
cmpsb
hlt
jo
add
mov
aam
mov
ficoms
cltd
add
add
rcrb
dec
add
aaa
pop
ds
mov
testb
add
dec
and
out
lahf
clc
stos
add
push
fimuls
cmp
push
xorb
jno
shr
nop
pop
jge
es
outsb
add
popf
cld
mov
inc
and
imul
jl
sbb
dec
lds
mov
jmp
jne
add
fidivrs
daa
inc
in
add
push
dec
aad
sub
cmp
jge
pop
adc
inc
add
jae
xor
rcrb
stc
lcall
inc
mov
pushl
pop
pushf
shlb
inc
mov
call
pop
das
add
ja
adc
sub
repz
in
test
cmp
sub
lcall
repz
pop
add
loopne
cmp
lock
cwtl
xchg
ljmp
or
sub
inc
adc
inc
and
mov
enter
clc
and
jmp
and
arpl
fstpl
fwait
aad
nop
orb
mov
cmp
push
sub
lods
jne
mov
add
sub
pushf
push
rolb
sbb
mov
push
xor
ds
or
enter
ret
jg
add
adcb
pop
mov
add
mov
fcmovnu
push
rolb
fwait
pop
jmp
pop
jmp
nop
sbb
add
cli
push
mov
cltd
mov
push
add
stc
add
inc
add
or
pop
add
icebp
in
fisttps
mov
xlat
lea
mov
xchg
stc
pop
stc
enter
pop
add
sub
add
adc
push
pop
sbb
pop
add
push
fs
ret
mov
or
roll
subl
push
flds
mov
fcmovnbe
mov
or
mov
subb
mov
repnz
fisttpl
faddp
fsubs
jecxz
fsubrl
sahf
ja
sub
push
pop
dec
sub
out
jb
xor
inc
xchg
cmpb
inc
jo
push
add
stos
rorb
aas
rolb
or
add
mov
push
add
call
nop
push
cmc
adc
dec
adc
mov
mov
cmp
rorb
add
jnp
out
adc
shlb
loop
push
add
or
sbb
adc
cmpsl
aas
dec
leave
nop
sbb
loopne
add
lea
inc
add
add
pop
or
pop
cmpsl
push
lea
movsl
in
aad
sub
mov
lret
xchg
cmp
adc
fisttps
sbb
dec
loop
lds
add
fistpll
outsl
xchg
andb
jg
int3
pop
add
or
dec
sub
add
inc
sbb
push
outsl
test
and
icebp
adc
fwait
les
lcall
cmc
and
sbb
push
jns
scas
or
and
add
mov
cmp
rolb
mov
mov
add
xor
pop
jo
xor
pop
repz
lcall
rolb
mov
pusha
test
lds
or
mov
andb
sub
filds
pusha
in
fdiv
adc
add
in
aam
push
and
sar
pop
mulb
out
cld
popl
aam
inc
add
inc
sarb
popf
inc
fidivrl
lds
add
ja
bound
adc
xchg
loopne
add
cmpsl
out
cmp
push
ret
fstpl
out
incl
jp
cmp
jecxz
pushf
ret
icebp
push
add
inc
mov
out
xchg
shrb
sub
lcall
outsl
add
sahf
or
popa
icebp
add
mov
sbb
popl
dec
xchg
xchg
cmp
add
les
pop
fstl
add
mov
nop
sub
push
sbb
cli
add
mov
jnp
and
push
pop
jo
imul
xor
mov
add
cmp
xchg
push
add
hlt
daa
jo
add
pop
stos
sbb
jge
push
inc
or
insl
sbb
lcall
in
popa
in
ljmp
les
enterw
pop
cmpsb
imul
add
push
cmp
cwtl
push
xchg
lret
push
cmpb
punpckhbw
mov
cld
lock
jo
cs
test
mov
shrl
xchg
aad
sbb
add
xorb
xor
add
mov
and
add
jbe
jo
jmp
icebp
stos
dec
jl
jecxz
mov
cs
push
inc
into
pop
loopne
rolb
dec
jg
or
test
enter
fadd
out
es
cmpsl
push
stos
fsubrl
xor
jo
add
cs
scas
dec
cmc
add
rorb
jle
nop
add
leave
pop
ds
inc
cmpb
pop
jp
movb
sbbl
add
add
push
mov
add
int
jecxz
mov
add
ss
adc
addl
pusha
push
outsb
jb
gs
imul
and
clc
call
dec
add
add
leave
imull
add
stc
mov
cltd
inc
push
lock
clc
cmp
test
cmpsl
mov
sti
imul
mov
ds
mov
adc
jne
setbe
add
gs
and
add
adc
push
mov
add
cmpb
add
clc
pop
xchg
jo
xor
add
fwait
inc
pop
add
adc
and
and
add
lahf
add
xchg
jne
mov
push
hlt
orb
mov
sbb
mov
xorl
popl
das
fldenv
ss
lods
scas
add
loopne
adc
sbb
hlt
mov
out
adc
arpl
mov
xor
mov
add
inc
fsubs
mov
ss
pop
push
add
mov
mov
jo
add
cwtl
and
ds
inc
shl
add
sbb
fidivrs
mov
verw
pop
je
push
mov
add
sub
mov
adc
dec
or
mov
sub
pop
mov
or
jbe
lea
hlt
inc
add
pop
loope
imul
jmp
push
loopne
xchg
jns
lsl
xor
add
outsb
push
jp
pop
rorb
cmp
sti
add
loopne
jns
push
xor
in
sub
sbb
adc
fsubl
sbb
hlt
movsl
add
loopne
mov
pop
add
or
sbb
filds
int3
jg
xlat
sub
jnp
jmp
add
adc
arpl
pusha
add
and
adc
nop
pop
movsl
add
daa
das
andl
xor
jmp
add
scas
mov
repnz
xchg
jle
push
ljmp
cmp
in
xchg
add
inc
xchg
jnp
cltd
ss
scas
enter
inc
incb
or
mov
in
data16
inc
and
add
fwait
pxor
cmp
fucom
std
pop
xchg
push
push
in
out
add
out
jbe
psadbw
add
cmp
mov
push
add
xor
rcrl
ret
add
sub
jp
or
sub
pop
mov
dec
xor
in
rorb
mov
movl
clc
add
jmp
jl
pop
xor
cltd
cmc
add
push
lods
das
cmpsb
fldl
xlat
fwait
shlb
std
add
into
pop
add
in
out
or
jl
add
out
jb
mov
add
push
or
jns
dec
mov
fld
fdivrs
add
mov
cwtl
nop
push
pop
push
dec
arpl
push
cmpsb
push
xchg
push
pop
add
cld
dec
sub
and
cmp
cmp
rolb
add
cmp
cmp
stos
pop
cwtl
roll
lds
lahf
in
cwtl
adc
add
add
pop
lcall
cmp
add
or
sbb
add
push
dec
add
push
cmp
dec
sub
out
enter
inc
add
rolb
pop
cmp
mov
aam
icebp
mov
jo
add
push
loopne,pn
pushf
lret
sbb
jne
cs
ja
xor
jg
nop
and
add
add
inc
cmp
add
or
mov
sbb
cwtl
hlt
stos
and
pop
addb
sbb
ret
fsubl
add
mov
out
sub
jge
fldenv
xor
fs
arpl
xchg
cmpsb
mov
add
lret
mov
lea
mov
cmp
jb
sbb
faddl
sub
out
mov
sbb
push
and
mov
leave
pop
pusha
push
xor
inc
pop
xchg
dec
xor
aad
test
test
xchg
sbbb
add
cltd
rcrb
mov
cmc
and
dec
pop
adc
inc
mov
aad
add
mov
hlt
loopne
pop
enter
dec
add
repz
adc
pop
jo
stc
push
push
rolb
cmp
xlat
in
add
cli
shl
adc
xchg
mov
lret
add
aam
addb
int3
add
or
cwtl
adcb
mov
push
loope
test
add
das
add
cli
xor
movsb
pop
mov
sub
leave
rolb
sbb
lds
inc
xchg
inc
add
loope
or
leave
xchg
add
mov
popl
imul
jb
add
outsl
dec
fiaddl
jmp
repnz
sub
pop
in
aam
in
int3
mov
ret
inc
scas
andb
or
add
in
sbb
adc
cmc
sub
cmp
add
mov
adc
add
or
mov
cmp
mov
mov
push
cmp
cwtl
or
mov
xchg
sub
xor
fildl
inc
jne
cld
add
fisttps
push
insb
stos
into
enter
dec
icebp
xchg
outsl
xchg
add
cmp
add
xor
mov
inc
and
jle
repnz
lret
fwait
or
jle
sbb
xchg
mov
outsb
cli
adc
rcl
icebp
inc
mov
cmp
add
add
mov
add
or
stc
inc
or
push
push
std
dec
jge
add
sahf
imull
in
movl
inc
imul
sbb
add
add
add
pop
pusha
add
mov
jmp
jmp
add
mov
fwait
mov
cli
fdivr
nop
and
das
loope
push
add
stos
mov
or
push
jg
insl
add
pusha
and
mov
dec
mov
inc
divl
out
ret
dec
cmp
test
neg
add
ret
mov
and
push
add
push
popa
adc
setge
xorb
pop
cld
adcb
icebp
test
adcb
gs
inc
add
sbb
inc
das
add
je
pushl
lock
add
mov
cs
dec
mov
pop
add
in
sub
pop
jmp
inc
clc
scas
adc
out
rolb
sbb
test
das
mov
adc
jne
add
cltd
sahf
cmp
clc
add
or
inc
jbe
in
cli
add
sti
addl
or
std
adc
lcall
or
mov
xor
adc
cmpb
dec
pop
test
sarb
mov
pop
sti
sbb
pop
in
mov
or
or
loopne
pop
nop
prefetch
andb
mov
add
imulb
pushf
test
add
fnstenv
mov
xchg
mov
test
outsb
popa
nop
xchg
or
add
jne
lcall
inc
dec
dec
test
mov
jnp
les
cmp
cwtl
adc
fs
add
shlb
mov
add
movsb
push
add
daa
in
adc
aad
add
dec
push
add
adc
pusha
add
lret
mov
mov
clc
push
push
out
add
das
xor
push
lea
ja
and
incl
ss
jmp
aas
rcrl
cmp
adc
lret
xor
repnz
aas
dec
mov
xor
mov
outsl
cmp
mov
stc
or
hlt
std
in
pop
sub
and
shlb
in
lods
push
mov
pop
sbb
add
jl
push
inc
xor
cmp
movl
mov
cmc
into
insb
cwtl
ret
enter
dec
mov
str
adc
add
push
pusha
cltd
mov
inc
dec
jmp
data16
mov
add
push
and
xor
sbb
push
pop
call
shlb
lods
test
orb
pop
and
dec
add
ret
movsb
clc
adc
xlat
adc
add
ljmp
dec
stos
push
mov
mov
pop
push
adc
fsts
add
cmova
int3
dec
xchg
cwtl
push
sbb
push
add
cmpsb
insl
rcrb
push
sbb
movsl
add
add
arpl
add
jmp
dec
xchg
and
mov
sahf
xor
add
enter
test
jmp
loopne
shl
jo
add
int
cmp
hlt
or
xchg
dec
out
jb
xor
lret
add
or
jnp
mov
mov
test
add
inc
pop
iret
shrb
ficoml
or
fsts
addr16
cmp
scas
cs
sub
add
outsb
jecxz
enter
add
fimuls
fucomi
mov
add
add
xorl
xchg
mov
pop
cli
push
fisubl
sub
add
mov
mov
repz
add
cmovp
push
sub
add
and
add
xor
movl
dec
push
or
adc
sti
lahf
pop
add
imul
mov
add
add
js
add
sbb
push
roll
aas
fmul
repnz
jo
add
inc
clc
adc
adc
sbb
push
cwtl
mov
adc
sbb
pushf
add
sbb
cmp
mov
and
push
sbb
out
add
ss
insl
sbb
cmpsl
daa
arpl
rcl
adc
data16
add
hlt
xor
sub
or
es
rolb
xor
cmp
or
add
pop
cmp
mov
scas
rorb
jno
add
xchg
int3
sbb
lcall
xchg
xor
jle
mov
cmp
js
dec
or
jne
movl
imul
or
fidivl
add
roll
data16
mov
push
cltd
pop
add
loopne
or
orb
fs
add
jns
add
sub
daa
adc
push
subb
sbb
es
cltd
sbb
out
inc
lods
mov
addl
or
xchg
push
mov
adc
jg
mov
add
repz
cwtl
adc
adc
out
les
inc
mov
push
jl
or
add
sub
loopne
add
decb
fcoml
mov
dec
cld
and
outsl
fiadds
sbb
fsubl
lahf
mov
test
sbb
add
ja
cmp
xor
sbb
pop
sub
or
inc
sub
mov
cmpb
sub
bound
jge
add
push
lcall
leave
pusha
pop
or
add
pushf
out
add
lahf
inc
lcall
push
mov
xor
and
bound
pusha
dec
add
jge
icebp
sarb
add
inc
add
adc
lods
add
adc
icebp
add
mov
lea
xor
adc
add
lret
inc
cmpb
jg
in
cmp
or
add
add
push
xor
orb
andb
add
lea
cli
push
int
add
xor
add
mov
sub
cltd
xchg
jge
cmpl
push
in
xchg
sahf
test
std
int3
leave
add
and
scas
fs
or
add
sub
xchg
lret
ret
add
out
lea
and
jg
or
sbb
jne
push
cwtl
jle
mov
xchg
sbb
adc
add
and
movsl
add
popa
adc
lret
add
stos
or
repz
je
popf
push
js
add
fisubs
pop
add
daa
popa
push
add
std
fimull
inc
mov
or
das
test
adc
add
cld
test
inc
imul
js
jle
arpl
in
add
xor
jne
lods
es
add
or
push
xchg
int3
add
jmp
bswap
sub
mov
fs
sahf
push
test
add
xor
loopne
loope
fstpt
push
pusha
out
pop
pop
xor
jb
je
cld
adc
loopne
lahf
push
or
add
cmpsl
addr16
daa
outsl
imul
or
add
jne
inc
ds
and
xchg
xlat
xchg
rol
sbb
or
and
test
fistpll
jbe
mov
push
scas
sub
lock
pop
add
mov
add
popf
insb
push
sbb
mov
hlt
sbb
sbb
jle
cmp
and
add
mov
pop
int
mov
adc
sbb
sbb
aam
pop
ja
jge
movsb
mov
or
push
push
imul
fnsave
je
push
mov
jg
add
outsb
xchg
cli
mov
test
cmpsl
repnz
mov
xchg
adc
orb
sub
lock
stos
sub
sbb
add
int3
arpl
add
pop
mov
jge
fimull
nop
loope
xor
cmp
add
push
xlat
sub
gs
sbb
nop
mov
imul
int3
std
xorb
dec
mov
dec
jp
loopne
dec
push
adc
movsb
mov
or
dec
test
out
insl
scas
sub
push
jae
add
inc
int3
jo
add
nop
out
push
cltd
mov
jno
sbb
jecxz
pop
push
add
jl
jns
jl
push
push
and
inc
mov
call
xchg
mov
hlt
in
shlb
clc
rorl
lods
xor
pop
push
ret
add
dec
push
mov
ja
sbb
je
lcall
sub
and
mov
xchg
xchg
in
xor
pop
mov
jb
add
outsb
mov
mov
jmp
lds
daa
adc
int
das
mov
int3
inc
dec
dec
push
and
add
insl
movsl
dec
test
add
inc
pop
cmp
lret
outsl
cltd
lods
leave
movsl
and
lods
aaa
test
xor
lea
and
je
rolb
movsl
cld
insb
dec
arpl
nop
mov
das
add
xchg
pop
xlat
dec
popf
add
add
iret
insb
ret
movsl
stc
mov
inc
loopne
in
popa
add
pop
or
das
adc
jo
shrl
and
push
sbb
daa
jbe
roll
mov
push
sbb
mov
call
into
andl
sbb
pop
add
test
pop
test
and
les
aam
addl
fnstcw
loopw
xor
loopne
ljmp
ljmp
adc
fsubrl
xchg
lahf
movsl
or
xorb
mov
clc
dec
xchg
inc
pop
push
and
loopne
sbb
rclb
je
add
push
inc
clc
cmp
test
jmp
ljmp
inc
hlt
adc
pop
or
std
dec
pop
sbb
add
sbb
in
add
sbb
or
insl
add
call
in
add
xor
popa
add
and
mov
sub
popf
jne
and
push
mov
add
jle
sub
bound
push
sarl
mov
adc
cmp
add
xchg
sbb
adc
clc
xchg
jns
add
stos
subb
mov
pusha
and
mov
movsl
jge
lahf
or
test
ret
inc
incl
sarb
pop
in
add
inc
divl
mov
test
call
ja
fadds
and
rol
mov
or
les
add
sarl
pop
or
xorb
add
stos
and
add
mov
pushf
push
xchg
pusha
les
jp
mov
or
xchg
xor
pop
push
add
or
nop
xchg
mov
push
xchg
mov
dec
jne
add
mov
jae
clc
insl
add
dec
mov
lahf
rorb
add
ja
jo
cmp
push
lock
push
xchg
jae
add
pusha
xchg
sti
mov
mov
pop
cmpsb
ret
scas
imul
lret
cwtl
push
mov
stc
push
inc
mov
jg
push
roll
pushf
jbe
and
test
call
or
outsb
aaa
sub
std
add
insb
mov
jnp
add
dec
add
add
ss
add
xchg
out
imul
mov
addl
sbb
jge
shld
sarl
dec
sbb
cmpl
adc
inc
mov
xchg
xorb
das
pop
arpl
sbb
xchg
adc
jne
outsl
test
sub
xor
push
push
pop
mov
movsl
lock
cld
push
loope
sub
cmp
cs
test
inc
xor
mov
lret
push
rorb
dec
add
xchg
cmp
ret
push
cmp
add
cmp
test
add
loope
jne
adc
call
fbstp
or
xlat
int
add
xchg
cwtl
or
mov
fadds
dec
jne
jnp
add
mov
cld
cmp
adc
clc
adc
add
imul
cmpsb
mov
or
int3
xchg
inc
stos
or
test
cmp
push
jae
pop
mov
sub
lea
mov
ja
pusha
popf
outsb
add
movsb
popa
int
mov
fldt
lock
xor
fdivs
je
add
dec
mov
add
scas
es
in
lret
out
popl
add
adcb
jbe
push
insb
add
xchg
icebp
cmp
sub
rcrb
cltd
ja
lcall
cs
bound
push
and
adc
lcall
push
cmc
sbb
test
xor
repnz
adc
jg
mov
lds
pop
inc
sbbb
test
jno
scas
add
xchg
mov
xchg
repnz
mov
cmc
sub
mov
lock
mov
lock
insb
verr
lea
add
push
lcall
getsec
xchg
or
add
stos
ffree
push
mov
pop
pop
xchg
push
inc
ja
or
jmp
aaa
lock
lret
adc
imull
btr
emms
jne
sbb
fs
xchg
xchg
std
add
out
lds
sti
ud1
in
inc
in
out
or
cmp
inc
push
lds
stos
and
cmp
inc
xchg
orb
pop
dec
pop
add
punpckhbw
aam
mov
mov
mov
aaa
mov
push
sbb
add
and
lret
call
daa
and
dec
out
push
add
cld
es
push
jmp
roll
movsb
clc
jp
scas
add
mov
push
sbb
es
dec
sbb
je
push
mov
fimuls
sbb
cmpsb
rolb
jmp
cli
loope
jp
adc
or
movsb
and
imul
or
cmpsb
xor
add
orl
jae
mov
test
sub
push
add
cld
ja
cmp
fwait
and
jmp
insb
jne
add
je
xchg
cmp
add
push
sub
leave
sub
and
inc
out
js
icebp
sbb
je
test
cs
aam
test
insb
mov
lock
jnp
and
or
dec
shl
add
xchg
aam
sbb
inc
mov
repnz
test
je
push
or
pusha
lea
aam
jp
sub
inc
pop
cmpsb
dec
mov
ds
shrb
jnp
add
cmp
mov
jmp
adc
add
inc
mov
sub
jl
xor
or
into
outsb
sbb
bound
mov
adc
add
dec
xor
push
mov
cmp
push
je
or
jno
jge
ds
or
push
and
cmp
nop
sahf
add
divl
dec
add
jge
add
movsb
out
jbe
xchg
cs
popf
push
int
jo
ds
inc
and
jo
pop
fs
cld
pop
add
cmp
fidivrl
cli
stos
or
cmpsl
data16
js
jge
xchg
pop
pop
push
rclb
ja
shrl
add
cld
xchg
lods
adc
notl
test
or
test
pop
add
cmpsl
inc
out
aad
add
adc
cmp
push
popf
int3
add
mov
add
mov
add
mov
sub
xchg
mov
out
adc
inc
jle
pushf
movsb
lods
push
movsl
clc
mov
shrb
imul
call
repz
xor
sbb
or
ror
pop
jae
lock
xor
push
test
jbe
add
mov
adc
rcrb
jge
jmp
mov
mov
test
add
test
sub
add
jae
adc
nop
sbb
stc
adcb
push
mov
sbb
ja
adcb
test
montmul
cmpsb
add
rcll
repz
andb
mov
std
inc
hlt
enter
inc
add
or
add
jnp
test
push
cmp
inc
push
cmp
inc
loop
jo
adc
enter
mov
and
cwtl
clc
in
adc
inc
addl
jg
mov
pushf
dec
clc
add
xor
cmp
inc
addl
or
hlt
movb
cs
sbb
add
mov
jnp
inc
inc
lret
jo
stos
add
dec
stos
iret
or
insb
pop
and
cmpl
imul
outsb
rcl
pop
add
xorb
add
adc
add
mov
and
es
insb
xchg
push
mov
add
rorb
dec
xor
push
mov
push
mov
roll
mov
sbb
pop
int
add
add
dec
adc
and
mov
in
inc
push
push
scas
mov
xchg
and
push
das
mov
loopne
pop
cmp
adc
inc
out
mov
gs
pop
sti
add
iret
push
push
pop
icebp
and
add
test
mov
cltd
dec
scas
adc
aam
add
jo
cs
push
enter
lds
jg
xchg
dec
inc
lods
scas
test
filds
push
xchg
mov
out
and
pop
stos
call
add
push
jne
xchg
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
fwait
gs
push
cmp
add
xor
add
fs
jno
bound
xchg
and
ljmp
push
mov
add
and
push
push
push
stos
shlb
dec
aad
sub
in
and
das
nop
test
in
xchg
addb
adc
pop
xor
add
cmp
test
in
movsb
iret
jecxz
test
test
mov
add
dec
mov
cmp
cwtl
add
imul
subb
mov
add
insl
mov
movsl
add
jno
dec
add
cmp
js
lea
xor
cmp
in
test
sbb
jge
mov
loopne
pop
xor
jle
push
adc
dec
ds
inc
jae
movsb
add
pop
add
mov
sub
pop
jge
push
lret
lahf
sub
mov
out
mov
test
cwtl
iret
leave
js
add
out
imul
add
outsl
mov
mov
cli
clc
je
add
js
jo
dec
cmp
add
cmp
jo
add
scas
or
jge
sbb
mov
or
jl
fcoml
in
pop
add
popa
lods
cmpb
add
cmc
nop
xor
std
and
sbb
and
push
xchg
addl
pop
cmp
in
sbb
add
pop
nop
rclb
insb
mov
and
jns
sysret
aad
dec
mov
iret
lock
pshufw
in
or
dec
mov
and
cmp
int
or
dec
popl
into
jo
add
mov
add
push
lods
frstpm(287
mov
sub
add
mov
inc
mov
testb
add
pop
shrb
add
shrd
mov
add
xchg
xor
add
inc
sub
lss
in
call
add
cmp
js
mov
fisttpll
cmp
add
hlt
rol
xchg
sub
and
add
add
leave
imul
push
and
pop
add
jo
add
movsb
dec
pop
push
lret
mov
add
pop
ret
add
pop
add
gs
lock
lahf
or
insb
ja
aam
and
rolb
mov
pop
aas
add
or
pusha
out
cmp
sub
adc
pop
mov
dec
nop
or
and
les
cwtl
or
je
imul
push
xor
cmp
das
xchg
add
subb
cmp
cmp
sbb
xchg
inc
add
mov
inc
mov
sub
adc
and
add
jle
xchg
jo
add
cwtl
xchg
add
push
pop
and
jp
int
repz
cltd
cld
xchg
mov
jae
fwait
test
pop
hlt
pop
add
sbb
or
jns
movsb
or
add
lcall
loopne
imul
add
shl
cmp
dec
lret
sub
push
lahf
and
in
inc
add
mov
push
lock
data16
dec
mov
xor
popa
pop
push
shr
jae
cwtl
inc
add
mov
add
jnp
push
dec
ror
lock
lret
pop
mov
jbe
push
repnz
mov
call
cmp
jnp
loopne
add
push
sub
scas
inc
andb
jl
add
rol
xlat
cld
mov
add
into
test
mov
ss
hlt
push
ljmp
pop
insl
inc
xor
adc
add
popa
rol
pop
cmpsb
push
xchg
sbb
push
jnp
add
add
inc
stos
add
in
pop
call
xor
sbb
movb
mov
inc
arpl
in
scas
add
mov
stos
jecxz
pop
lock
icebp
movsb
add
outsb
mov
sbb
mov
mov
nop
sti
add
mov
psraw
add
inc
loopne
pop
cmpb
nop
aas
dec
pop
js
add
dec
pushf
jecxz
inc
es
jbe
add
test
cmc
cmp
xor
dec
daa
pop
add
je
add
sub
pop
jnp
sbb
pop
data16
std
add
xor
fsub
mov
add
addr16
imul
push
add
mov
rcr
fsubs
push
add
fistpll
and
or
rclb
in
add
adc
pcmpgtb
lea
rcrl
ret
sub
roll
lods
je
pop
cmp
push
adc
test
icebp
lock
xchg
jno
xchg
add
inc
add
add
or
subl
add
fildll
push
add
mov
add
xor
or
add
add
pusha
jnp
cld
imul
stos
movl
adc
adc
pop
fiadds
jmp
or
sbb
repz
sar
addl
sti
jl
aas
adc
lock
subb
cltd
in
dec
add
pop
popf
in
ret
lds
ja
xchg
iret
lods
push
mov
mov
fdivrl
test
decb
lahf
movsl
jne
pop
pop
sbb
ret
mov
jo
push
or
push
pop
pusha
jnp
mov
loop
add
cmpsl
add
dec
xor
add
mov
aas
sub
sub
jne
mov
mov
pop
loopne
add
jl
dec
sbb
push
add
mov
lock
dec
add
andl
imul
ljmp
call
shll
push
or
dec
jo
cld
sti
xchg
pcmpeqb
adc
or
dec
loope
mov
jecxz
loopne
mov
je
jmp
sub
in
ds
jmp
add
scas
adc
popa
mov
lcall
inc
dec
je
adc
and
xorb
jecxz
pop
push
lret
push
or
ror
sbb
fdivs
jae
mov
out
add
scas
jb
jno
add
leave
div
insb
lods
jmp
in
loop
inc
add
inc
add
add
or
loopne
xchg
add
std
mov
sbb
jae
dec
mov
frstor
mov
and
jmp
xchg
add
or
jg
sub
cmp
cmp
jge
sub
iret
ret
mov
jno
jmp
push
aad
jo
pop
jb
paddsw
xchg
mov
mov
ja
add
pop
imul
mov
adc
lods
jne
pop
cmp
cmp
clc
xchg
push
ret
daa
mov
jmp
jge
ret
pop
pusha
fldt
xchg
inc
movsl
cmp
jp
je
push
pop
xor
inc
add
fisttpl
mov
sub
ljmp
sub
add
mov
push
rclb
das
mov
push
adc
repnz
xchg
mov
add
call
push
pop
mov
adc
inc
cld
jg
aas
inc
sbb
dec
fnstcw
jae,pt
test
mov
adc
shrb
sub
add
push
push
sti
xor
jmp
into
or
out
mov
dec
push
sub
jae
add
cmp
sahf
fstpl
cmpb
sub
ja
add
push
jns
jbe
cs
mov
sarl
xchg
out
jecxz
adc
pop
lods
inc
inc
jp
sbb
insb
pop
ja
subb
test
mov
mov
and
lret
add
xchg
mov
sub
jne
adc
dec
sti
ror
jns
add
repnz
imul
cmp
xor
insb
dec
add
dec
dec
xor
add
jnp
xchg
adc
adc
cmpl
or
and
insb
cmp
cli
adc
and
in
jbe
add
mov
xchg
and
pop
call
xchg
lock
test
xchg
pop
scas
rcrb
mov
add
ja
push
call
movsb
add
mov
outsb
add
or
or
cmc
or
not
addl
addb
mov
xlat
xor
or
dec
xchg
xchg
adc
sarb
subb
orl
xchg
test
test
add
repnz
ja
adcl
hlt
mov
in
loopne
les
lret
add
mov
insl
add
test
cwtl
test
int3
cld
cmp
jnp
push
and
jo
mov
add
mov
xor
xchg
repz
adc
xchg
cmc
daa
and
or
and
cmp
sbb
adc
adc
add
lret
call
add
dec
add
pop
mov
mov
add
lods
ret
mov
add
int3
dec
lret
push
leave
add
fsts
in
adc
mov
rcll
fmull
fistpl
adc
dec
xor
outsb
in
clc
lret
enter
add
shlb
add
inc
dec
int
stc
add
or
mov
mov
and
mov
add
in
jg
scas
adc
fxam
cli
ja
inc
add
mov
hlt
pop
xor
mov
ret
xchg
add
leave
inc
push
sti
enter
add
add
lea
aad
pushf
test
lret
xor
clc
stc
add
inc
mov
mov
cwtl
push
cmp
add
sub
jae
add
add
add
scas
or
push
pop
mov
addb
adc
push
sub
push
push
and
xlat
rorb
popf
imul
jb
movb
lock
dec
sbb
mov
or
cmpb
rorl
adc
pop
jne
insl
frstor
add
jae
xchg
xchg
push
push
cmp
fisubrl
add
inc
add
mov
outsl
push
mov
shr
pop
push
mov
jl
xor
add
stos
adc
jae
mov
xchg
daa
sub
xlat
movsb
in
mov
and
shll
inc
int
dec
cwtl
bound
arpl
jmp
repz
add
add
lea
sbb
push
adc
ret
cmp
fildl
fucomip
and
mov
ljmp
call
cli
fdivl
imul
in
pop
adc
dec
dec
sbb
cmc
loop
aad
incl
jl
js
lock
mov
sub
inc
leave
add
mov
jne
lcall
adc
xor
cmp
subl
add
imul
in
add
push
movsl
mov
dec
mov
lock
movsb
mov
cmp
aad
mov
insb
repnz
hlt
and
clc
inc
fadds
test
jbe
addr16
clc
mov
inc
dec
jecxz
push
jb
jmp
or
add
jne
dec
shlb
add
into
xchg
aam
mov
mov
enter
add
int3
sub
cmp
mov
add
add
out
push
lock
mov
inc
mov
je
mov
xchg
adc
pop
lret
inc
jne
pusha
push
mov
add
mov
js
js
add
sbb
pop
adc
cli
add
pop
xchg
inc
icebp
lock
xchg
dec
add
mov
xor
adc
test
jle
add
cmc
outsb
mov
nop
sub
dec
int3
add
inc
adc
icebp
mov
sbb
adcb
add
clc
inc
jl
cmpsl
or
adc
add
sub
fiaddl
mov
jmp
movsl
add
sarb
or
fistps
jne
pop
sub
push
pop
aad
xchg
in
shll
jae
scas
flds
inc
cmp
and
sub
pop
out
daa
nop
andb
jo
outsb
lods
add
or
insb
xchg
add
and
in
add
cwtl
lock
add
lds
and
mov
les
inc
dec
xorl
addb
or
mov
out
aas
add
mov
mov
jnp
add
mov
dec
push
xlat
or
pop
add
jne
jle
mov
push
mov
call
add
push
mov
pop
out
lcall
loopne
test
sbb
iret
mov
nop
push
mov
cmp
movsl
repz
mov
aas
cmc
add
and
adc
lods
in
push
pusha
sbb
pushf
cmp
push
add
cmpsl
cmp
cmp
shrb
xor
add
or
jo
ja
mov
pop
in
add
add
aas
xchg
or
inc
ja
hlt
incl
mov
rol
xchg
add
loope
loopne
addl
leave
jmp
ret
nop
cmp
ja
pop
lea
out
lret
nop
sbb
stos
push
sbb
sbb
or
vprotd
add
inc
in
sti
andb
movsb
or
out
or
mov
fs
cmp
or
int3
cmp
icebp
add
mov
test
lods
adc
adc
adc
daa
mov
add
outsl
int
in
inc
pop
push
or
add
sbb
push
popf
test
dec
mov
add
or
in
mov
add
inc
cmpl
add
outsl
add
int3
push
notb
adc
jno
scas
daa
inc
test
and
dec
adc
add
test
add
mov
jl
push
sbb
add
adc
leave
cs
aaa
mov
repz
or
stc
add
push
lds
sub
fidivl
adc
cmc
cli
out
pop
inc
push
cmp
dec
call
and
mov
out
cmp
and
insb
add
cmp
mov
test
mov
fisttps
add
push
rolb
jge
mov
push
cmp
push
sti
xchg
adc
dec
push
hlt
pop
lods
adc
xchg
pop
jecxz
dec
cmpb
jb
dec
pop
clc
test
pop
xchg
movsl
or
jge
push
or
test
nop
jp
and
dec
mov
adc
jmp
outsb
dec
add
dec
loopne
and
add
inc
lret
pop
rcrl
push
xor
add
mov
pop
cmp
push
jl
enter
push
sbb
sahf
mov
add
sub
jmp
or
test
imul
add
add
fnstsw
add
loope
add
fucom
psrad
fisubrs
pop
jle
mov
add
xor
or
test
test
mov
cltd
stos
ss
xchg
outsl
mov
dec
add
ljmp
call
pop
dec
inc
pop
paddq
cmp
dec
dec
fwait
aaa
push
add
inc
add
sbb
stos
push
inc
push
clc
mov
std
add
movsb
dec
fwait
adc
cld
add
jmp
mov
mov
xchg
stos
pop
andl
inc
fdivr
xor
adc
in
out
aam
inc
fisubl
lods
cs
int3
add
shrb
pop
in
aas
dec
adc
pusha
out
ja
add
fs
cmp
add
div
ljmp
scas
add
lock
push
cli
icebp
nop
addb
out
mov
add
pop
in
in
add
add
test
jmp
mov
mov
add
jl
mov
cwtl
insl
jo
js
pop
dec
imul
dec
push
dec
int
and
cmp
xorl
imul
add
jmp
out
add
ret
pop
in
push
push
fsubr
jecxz
sbb
js
cmpsl
jb
add
xchg
addl
ror
mov
pop
in
mov
push
pop
movsb
nop
test
sbb
sbb
push
push
or
pop
pop
or
pop
push
jle
push
push
add
aas
jae
movntq
out
or
push
enter
add
add
xor
pushf
popf
in
add
fimuls
test
dec
push
repz
out
add
outsl
add
cwtl
les
jno
add
shlb
xchg
lcall
out
ljmp
add
jle
or
push
push
cmc
push
icebp
jge
add
test
shll
mov
pop
add
test
mov
mov
addr16
test
inc
pop
cli
fldt
pop
pop
xor
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
add
cmp
xchg
cmp
pop
je
jge
cmp
sub
cs
jno
add
aam
mov
xor
add
mov
mov
add
jns
and
jbe
jb
mov
pop
movzbl
pusha
mov
sbb
dec
dec
jo
inc
push
in
add
push
or
push
push
add
mov
in
dec
incl
ja
outsl
jmp
sbb
int3
pop
add
lcall
in
out
sbb
pushf
sub
sbb
ljmp
add
inc
cmpsl
mov
ss
and
add
sbb
js
faddl
pop
push
fs
pop
ret
jbe
pop
out
pop
pusha
in
lahf
stos
push
into
add
inc
mov
les
push
clc
mov
mov
test
cltd
mov
bound
jns
add
gs
add
addr16
fstps
cmp
cmp
test
jns
jle
xchg
cwtl
xchg
add
test
push
dec
pop
in
outsb
add
jb
add
mov
push
xchg
ljmp
add
xchg
lcall
add
jns
mov
and
mov
inc
in
sbb
push
dec
add
cmp
clc
cmp
mov
push
add
add
cmpsl
jmp
lock
mov
aam
add
jle
mov
int
add
aaa
dec
pop
cld
sahf
add
arpl
cmp
dec
xlat
add
nop
out
jmp
shrb
int
push
mov
push
in
pop
mov
mov
rolb
loopne
or
loop
add
lret
sbb
push
cmp
cmp
and
dec
dec
jp
fcompp
cmp
xchg
mov
repnz
add
ljmp
call
int3
pop
inc
stos
out
inc
mov
sbb
mov
jg
dec
or
push
pusha
insl
call
arpl
rolb
stos
mov
insl
push
enter
jbe
adc
les
gs
pop
push
add
lock
mov
and
add
fsubl
add
adc
cld
xchg
xor
fwait
pushf
movsl
test
loopne
add
adc
add
fs
mov
filds
les
test
push
mov
xlat
daa
rcl
pop
adc
ret
les
outsl
jae
pusha
mov
call
pushf
sbb
pop
xor
andl
loop
addb
add
ss
inc
or
icebp
ffreep
mov
sub
movsb
popl
into
aad
in
mov
aas
stos
or
ja
cmc
test
shlb
add
fcmovu
jns
shl
add
mov
push
dec
add
cmp
pop
cwtl
add
pusha
stc
or
fs
cld
add
gs
fnstenv
mov
nop
aad
fsubs
inc
push
add
pmaxsw
add
and
in
or
xchg
daa
imul
or
mov
cmp
mov
jge
out
sub
lret
mov
add
outsl
scas
pop
mov
enter
mov
in
ret
ret
add
je
loopne
cltd
lcall
test
add
adc
add
pop
insl
xchg
jmp
sbb
mov
loopne
lret
or
in
enter
mov
dec
add
test
in
add
and
add
dec
jnp
inc
loopne
cmp
insl
add
je
jne
jl
push
and
adc
rolb
mov
cmp
add
movsl
stos
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
mov
xchg
xchg
mov
jo
inc
stos
add
sub
mov
xor
mov
adc
adc
loopne
lock
xor
add
jae
sub
dec
or
rcll
push
add
mov
xor
jecxz
pop
in
jp
add
lods
leave
lret
mov
hlt
mov
rorl
add
lea
loop
xorb
mov
push
push
add
cmp
arpl
shlb
jo
add
xor
stos
add
jo
lods
addr16
dec
add
pop
push
pusha
cmp
jbe
mov
out
add
xor
loop
xchg
test
std
test
cmp
cld
bnd
cmpsl
lcall
add
dec
dec
dec
or
add
add
imul
xor
and
lock
cmc
aam
cwtl
xchg
out
movl
cltd
jnp
jo
add
xor
cmc
and
lods
add
dec
aad
repnz
mov
sub
and
add
push
dec
adc
push
add
enter
push
mov
xchg
push
lds
add
inc
push
add
and
xchg
push
aaa
lret
aam
data16
enter
out
add
jne
lods
or
cmp
xor
mov
add
out
fnstsw
lods
pushf
add
ja
mov
dec
add
push
jb
fmuls
roll
lret
mov
jp
js
mov
in
cmpb
stos
pop
scas
dec
movb
add
aas
ljmp
add
les
dec
gs
add
xor
xchg
mov
fwait
movsb
jle
mov
xchg
adc
mov
clc
sub
add
fadd
or
test
ja
cmp
or
ljmp
mov
stos
pop
add
leave
or
test
add
jge
and
cmpb
mov
out
ds
add
imul
lds
gs
adc
pop
or
out
in
incb
add
inc
inc
dec
test
inc
inc
cwtl
or
cmp
out
imul
mov
push
add
push
pop
pop
pop
es
int3
xor
push
dec
xchg
nop
xchg
add
int3
and
pop
jne
dec
in
xor
dec
test
add
sbb
loope
lahf
adc
push
sbb
pop
dec
add
call
add
fisubl
lock
push
push
push
insb
cmp
lds
in
mov
add
outsb
out
add
adc
stos
or
cmp
aaa
jno
xchg
test
dec
insb
addb
push
insl
adc
mov
je
rolb
and
dec
xor
add
dec
jno
sti
out
pop
out
out
pusha
scas
iret
xorl
fcomp
int3
sti
add
js
mov
or
mov
add
popf
mov
add
push
xorl
ljmp
xor
jmp
leave
rol
and
icebp
idivb
das
xor
call
jmp
jo
pop
addl
test
out
les
add
aam
mov
add
and
mov
add
pushf
addb
imul
jmp
ret
xlat
lret
add
fsubp
mov
push
adc
dec
sbb
cwtl
cmp
aad
xor
repz
dec
add
sbb
sub
jmp
out
movl
fisttpl
addl
out
push
pavgb
jo
outsl
mov
sbbb
das
jmp
push
mov
test
scas
xchg
add
inc
out
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
and
jg
popf
inc
bound
push
aas
xor
pop
dec
hlt
jae
sti
popa
ss
enter
mov
pop
adc
hlt
add
test
mov
adc
dec
or
pop
and
mov
lahf
and
cmp
sub
add
test
xchg
push
push
stos
pop
mov
dec
sub
lcall
xor
clc
sub
ds
push
add
or
fstpt
sub
dec
jle
adcl
test
add
dec
add
fcomip
lock
movsb
or
mov
lds
or
mov
rcll
fldl
pop
inc
sub
ss
fadds
sbb
sbb
lods
sub
pushf
mov
sbb
adc
xchg
jae
ja
scas
add
cmp
add
push
or
rcrl
rcl
mov
lods
pop
add
mov
insb
adc
pop
xchg
add
xchg
xor
jo
aam
bswap
push
loopne
sbbb
shrb
xor
add
pop
scas
add
add
adc
lsl
fsubl
stos
clc
mov
addr16
mov
mov
pop
add
jno
or
pusha
jne
jns
add
cmp
dec
ja
sub
xchg
mov
add
pop
add
addl
push
fmull
or
mov
or
call
add
or
add
push
std
in
movsl
jo
lds
cmp
push
and
and
je
inc
cmp
push
inc
add
dec
pop
add
cmp
sbb
idiv
add
push
add
xchg
ljmp
arpl
add
xchg
sub
jmp
push
sti
add
mov
push
xchg
out
mov
pop
pop
in
push
outsb
mov
sub
loopne
leave
dec
call
not
xor
push
pop
movl
mov
into
add
jge
pop
add
rorb
sub
add
mov
or
shll
fistps
pushf
jge
add
inc
clc
popf
add
pop
idiv
jne
push
sbb
dec
mov
add
out
or
jle
pop
mov
mov
and
sbb
xlat
jge
push
inc
arpl
jbe
jnp
add
add
add
inc
xchg
addb
addr16
or
jns
xchg
add
ja
decb
das
pmuludq
mov
push
pop
add
aaa
call
dec
sub
mov
loop
addb
sub
push
or
sarl
dec
outsb
arpl
jb
gs
shlb
out
dec
and
dec
pushf
jbe
inc
push
push
nop
jbe
test
xchg
cld
insl
sub
aad
xchg
inc
sbb
jns
sub
je
add
push
lret
pop
push
sbb
push
mov
in
pop
aam
scas
add
or
lods
push
mov
sub
inc
add
cld
xchg
test
pop
xor
push
fmul
adc
ret
xor
popf
sub
rclb
mov
add
adc
js
testb
pop
ja
mov
sbb
mov
and
jo
repnz
cmp
jae
popa
jecxz
in
xchg
data16
imul
push
clc
jae
call
cmp
std
add
jno
and
sub
daa
jae
mov
sub
pop
fldl
cmpsb
lock
pop
cmp
jb
xchg
insb
jl
add
push
sub
push
cs
int
lock
jnp
add
jne
dec
mov
push
lahf
pop
pop
fwait
lret
shlb
negl
dec
push
add
sbb
add
sbb
push
lods
and
add
xchg
jo
jmp
frstor
add
imul
mov
add
add
lea
mov
jne
mov
test
push
sbb
out
adc
jmp
cmpl
lret
call
jle
add
shl
test
pop
in
mov
lods
cmp
in
cli
aad
mov
inc
add
inc
loopne
fsubl
add
mov
push
cmp
in
imul
xchg
mov
addl
mov
adc
pop
fildl
xorb
adc
mov
cld
gs
test
sti
les
stos
popl
cmp
hlt
sbbl
aas
add
vmovq
inc
lea
es
inc
add
cwtl
aaa
dec
xchg
mov
scas
orb
lock
xlat
push
stos
hlt
push
popf
push
inc
xor
adc
pop
jl
and
pushf
add
xchg
jne
push
sldt
aaa
std
adc
aam
in
imulb
sbb
sbb
lock
add
and
or
jp
mov
mov
push
and
outsb
clc
add
movsl
fwait
and
sbb
push
rclb
push
fwait
icebp
ja
mov
add
shrb
addr16
push
add
or
cli
add
lds
fadd
push
fsubrs
xchg
adc
stos
and
lock
add
adc
inc
popf
loop
testl
mov
jmp
cmp
add
test
aaa
stos
add
jl
sti
or
add
inc
adc
jae
add
add
pushf
push
into
call
pop
loopne
leave
mov
orl
pusha
in
jmp
push
sti
call
fs
aaa
das
add
in
add
or
cmp
cmc
rcrl
cmp
xor
or
mov
jge
js
cmp
adc
jns
sbb
js
lock
xor
imulb
and
jne
nop
fildl
add
cmp
cltd
lock
out
jo
add
push
push
and
loop
ds
inc
leave
lret
jb
daa
jo
ljmp
or
add
fdivrs
add
and
or
or
movsb
sti
cmp
dec
ds
jmp
sarb
add
adc
lds
loope
gs
addr16
inc
add
add
mov
cmp
jae
lea
xor
roll
popa
push
jnp
jmp
cmp
add
or
in
adc
dec
addr16
mov
xor
jns
cmp
adc
and
hlt
ret
rclb
iret
pop
add
es
lahf
jg,pn
dec
inc
adc
xor
add
xchg
scas
sub
dec
sbb
sub
test
enter
lock
add
ds
loopne
dec
xor
popa
ljmp
add
lahf
sbbl
inc
cmp
repnz
mov
ret
dec
add
testl
and
add
sub
popl
jl
add
jno
adc
and
adc
cmp
cmp
sub
or
nop
pop
add
xchg
shrb
mov
add
stc
nop
incb
add
sub
filds
sbb
dec
fiaddl
lds
fsubrl
loope
sub
test
js
pop
pusha
cmp
bnd
repnz
add
sbb
add
and
leave
sarb
pop
mov
fistl
xor
mov
add
orb
push
add
iret
dec
ljmp
insl
stc
jnp
pushf
add
add
push
inc
mov
scas
add
and
pop
add
ror
in
in
aaa
pop
mov
pop
rcrb
push
loope
push
test
jg
add
or
mov
add
add
pop
cmc
movzbl
xlat
jge
int
pusha
inc
cmp
dec
push
xor
test
mov
or
add
outsb
sbb
add
mov
daa
jnp
push
ss
pop
add
ret
dec
call
inc
movsb
dec
jge
and
cmpsl
mov
pop
loopne
add
aad
loope
xorb
leave
add
cli
xchg
inc
pushf
mov
push
add
and
cmp
test
pop
inc
mov
ljmp
add
mov
dec
xchg
push
add
rolb
cmpsl
pop
mov
lock
and
fbstp
loope
add
push
push
imul
xchg
mov
orb
adc
mov
es
mov
and
mov
pop
and
add
out
jp
and
sbb
push
add
or
xor
lock
lock
push
add
mov
pop
int3
add
leave
negl
lock
cmpsb
or
mov
aad
loopne
sbb
cmc
cmpsl
add
lods
std
sub
xchg
call
popa
sub
out
jo
add
sub
push
xor
add
xor
xor
shl
sub
push
fistps
adc
popf
cmp
sbb
inc
sub
push
pop
add
add
ds
shll
add
pushf
push
out
vpunpcklwd
aaa
movsl
sub
cwtl
mov
mov
call
add
jb
and
add
mov
adc
mov
add
cmpsb
andb
or
dec
add
push
xchg
repz
xlat
add
mov
inc
adc
mov
jg
mov
and
movsb
fsubs
sub
add
dec
popf
rolb
mov
pop
addb
inc
jae
scas
repz
jae
sbb
mov
mov
shlb
sarb
jg
pop
into
add
and
add
pop
fcoml
add
push
push
pop
xor
js
push
pop
xor
dec
add
mov
pop
popa
jnp
clc
inc
jo
out
add
imul
sub
iret
jp
add
pop
lds
add
push
movsb
dec
inc
out
icebp
or
lods
add
aam
loop
loopne
add
scas
rorl
cmp
rolb
in
sub
aam
push
push
add
or
rorl
sbb
js
mov
add
popl
push
cwtl
push
cmpsl
add
mov
outsl
nop
jle
sti
add
pop
cmp
mov
jbe
push
cmp
xlat
inc
mov
add
mov
jns
and
flds
xchg
inc
fsub
add
iret
inc
sti
hlt
push
ret
add
add
push
aam
aad
add
xchg
sub
add
add
mov
shll
or
mov
or
fisttpl
xchg
nop
outsl
aam
jle
jmp
jge
add
xor
mov
add
adc
cwtl
popf
mov
repnz
test
sub
sbb
nop
mov
cmpsb
dec
dec
lret
xchg
ret
push
out
ficompl
lahf
add
aam
pushf
inc
sbb
cmp
xchg
add
inc
rolb
addb
pusha
out
pop
add
cld
adc
mov
orb
imul
aas
add
fs
push
mulb
shlb
add
sub
xchg
mov
push
fcoml
ret
inc
cli
add
dec
pop
jbe
pop
mov
in
jae
sbb
or
add
mov
pop
call
xor
add
mov
or
loop
xchg
add
faddl
shr
ss
loope
cli
mov
sub
cmp
pusha
add
sub
leave
add
icebp
fldl
cmp
sbb
hlt
add
mov
into
test
jl
dec
inc
xchg
push
out
adc
pop
lods
dec
bound
mov
xor
ret
push
rcr
jns
and
mov
test
or
jae
sahf
jbe
xchg
comiss
insb
pop
loopne
add
dec
test
add
and
xchg
aas
stos
shlb
insb
dec
test
dec
inc
jbe
mov
imul
add
or
test
testb
inc
enter
int3
jo,pt
add
pusha
leave
hlt
and
or
cmp
push
xorb
or
jo
add
pop
movsl
mov
daa
loopne
add
push
pop
leave
cmp
jo
repnz
aad
int
in
jae
add
js
jl
rorb
add
shlb
hlt
add
outsl
mov
shrb
add
mov
push
sbb
pop
insl
add
cmpsb
cmp
cli
scas
loop
mov
add
sub
mov
aam
pop
add
mov
cmp
sbb
stc
push
dec
sahf
clc
add
and
mov
in
add
mov
sbb
fld
clc
pop
add
inc
push
addb
sahf
cltd
add
add
add
stos
mov
out
cmp
popa
pop
loope
mov
mov
sub
and
jno
jp
or
mov
dec
subb
push
sbb
sub
add
out
sarl
ljmp
jmp
push
inc
xchg
pop
pop
lock
daa
cmpb
cmc
cs
pop
iret
add
mov
or
ror
jne
add
mov
int
call
mov
inc
test
push
sti
sbb
jno
xor
cmp
sbb
call
jne
push
test
inc
outsl
fiadds
roll
repnz
les
adc
dec
out
push
addr16
add
mov
xor
int3
stc
pop
ficoms
pop
cmp
clc
test
push
jo
out
sar
call
lock
pop
test
push
scas
mov
stc
cmpsl
xchg
adc
or
push
jbe
daa
call
pop
sub
adc
mov
jmp
add
cld
insb
mov
and
sarb
loop
pop
call
popf
lods
add
cmp
add
push
daa
sub
sub
mov
pushf
xor
dec
inc
sbb
in
mov
rclb
mov
add
mov
sub
pop
push
test
les
inc
sub
std
into
mov
xor
xchg
pop
add
add
mov
push
push
jno
pop
ret
fmull
aam
out
cltd
mov
and
in
add
faddl
and
pop
jae
jecxz,pt
xlat
out
add
inc
decb
imul
jg
loopne
daa
jle
adc
ret
inc
or
inc
add
push
jne
mov
push
add
sub
sbb
lea
add
ret
andl
or
jmp
shlb
dec
xor
jl
nop
add
sbb
push
pcmpeqb
pop
add
add
scas
das
ss
js
fmulp
inc
jo
iret
ja
sbb
cmp
in
popa
or
inc
loopne
in
adc
jbe
stos
shlb
add
popl
lea
add
daa
ja
icebp
aas
push
jp
enter
pop
int
mov
insb
cmpsl
and
pop
adc
aad
hlt
adc
imul
les
pop
jp
jne
push
in
add
cwtl
outsl
cmp
add
cmp
dec
mov
add
mov
xor
mov
popf
mov
adc
daa
pop
aam
subb
cld
mov
cltd
hlt
sbb
movsb
ss
add
mov
jb
xlat
lods
pop
add
jp
inc
aam
mov
mov
iret
add
dec
mov
or
add
fnstsw
cmp
mul
pop
add
cmp
jb
popf
add
fiadds
fucomip
cmpsl
adc
addr16
xchg
movb
int3
pop
sarl
mov
xor
clc
dec
xchg
dec
add
jg
lahf
push
dec
add
adc
xlat
add
lock
out
bswap
gs
sarb
adc
pushf
aad
aaa
cwtl
xor
add
test
loopne
pop
jmp
cmpsb
and
mov
and
fstpl
cmp
dec
add
adc
mov
dec
ret
mov
add
jb
sbb
adc
ret
add
jmp
and
xlat
orb
int
sbb
inc
ret
pop
je
xchg
movsl
nop
inc
jmp
lea
mov
sti
das
add
pop
or
add
sbb
sbb
or
add
lds
into
ret
int3
pop
add
sbb
add
daa
xor
js
dec
mov
add
int
out
inc
mov
sub
push
add
mov
clc
xor
lods
xor
jb
xchg
sub
punpckhdq
add
mov
jne
mov
cltd
jl
add
int
mov
push
sub
sbb
stos
cmpsb
mov
cmp
loopne
clc
pop
inc
lahf
or
adc
out
shlb
add
inc
cmp
mov
out
add
sbb
sti
add
test
inc
or
xor
rclb
pop
jnp
inc
mov
xchg
push
sub
add
add
pop
pop
add
jne
shrl
pop
movsb
mov
and
les
scas
fs
and
cmp
ret
lcall
js
and
stos
dec
add
addr16
add
loope
int3
xor
enter
aas
inc
into
adc
push
mov
in
sbb
inc
hlt
test
mov
daa
sub
out
mov
ret
add
cli
fdivrs
adc
add
xchg
adc
sbb
push
or
dec
xchg
xchg
lock
mov
dec
sub
out
mov
push
dec
inc
push
dec
lcall
jnp
jge
push
adc
add
push
dec
xchg
sbb
inc
gs
shll
jae
and
push
cmp
stc
pop
inc
js
arpl
adc
daa
adc
outsb
sub
mov
xor
xchg
mov
in
orl
clc
add
lods
out
mov
xchg
ljmp
lock
pop
in
push
fs
js
jge
mov
enter
rclb
fdivrs
cmp
add
loopne,pt
dec
fs
xchg
or
insb
cmpb
shll
pop
adc
jbe
add
loope
aas
adc
and
xacquire
scas
add
xor
mov
add
fists
xchg
fisttpll
jl
xchg
addl
dec
push
arpl
das
mov
cmp
nop
xchg
add
test
sbb
xchg
sub
push
cmpsl
in
out
add
daa
inc
mov
push
jg
rolb
je
rcl
sbb
xor
or
xorps
or
pop
xchg
jg
add
push
decb
cmc
hlt
add
daa
inc
add
sub
jecxz
sbb
inc
add
call
in
add
or
pop
arpl
inc
push
push
imul
loop
sti
loope
cld
mov
xchg
jne
sbb
shr
xor
decl
add
mov
sbbb
or
lock
add
inc
outsl
lret
cmp
xor
test
cli
rorb
das
adc
adc
add
adc
inc
stos
dec
add
xchg
push
add
test
cmp
inc
ror
mov
push
add
push
jb
mov
ja
xor
leave
pop
push
repz
add
sti
jp
stos
fildll
add
cwtl
adc
rol
and
rcpps
loopne
dec
sbb
loop
add
pop
mov
inc
jl
add
pop
rcrl
add
add
pop
pop
movsb
add
nop
push
pop
mov
dec
pusha
test
jge
push
add
hlt
jle
add
divb
push
add
ds
sub
xor
add
popf
xor
loopne
pop
aam
test
pop
add
cmc
adc
insl
shll
push
xor
sahf
loop
xchg
sub
stos
add
push
push
jp
sbb
mov
or
and
jne
add
mov
add
int
dec
mov
pop
cmp
add
and
or
adc
mov
clc
sahf
aad
mov
sbb
lea
adc
loope
stos
mov
adc
push
pop
pop
mov
sbbl
mov
sub
add
mov
adc
in
add
jl
pop
sbb
pop
jge
aas
lock
mov
pop
data16
add
lods
sbb
add
roll
jge
inc
pop
iret
in
inc
add
and
int
sahf
pusha
icebp
in
jle
cld
add
xor
push
sbb
pop
adc
fstpl
testl
es
pop
mov
jge
pop
adc
jns
add
fbstp
lock
jnp
call
cmp
dec
sbb
lods
mov
lock
cltd
sbb
xchg
cwtl
les
adc
es
movsl
testb
loope
mov
stos
add
adc
mov
movsl
inc
or
imul
js
dec
or
cmp
mov
push
lret
inc
cmp
sti
mov
or
push
repz
loope
push
add
addl
mov
cmp
je
push
dec
add
mov
push
or
add
jge
stos
pop
sbbb
loopne
mov
mov
mov
aas
push
xlat
sbbb
dec
cmp
adc
movsl
sub
add
push
into
and
das
loopne
in
add
imul
add
dec
sti
shlb
je
outsb
adc
gs
push
out
leave
cmc
xor
jo
xor
mov
testb
mov
dec
cmp
inc
icebp
add
inc
mov
sarl
dec
cld
nop
mov
rolb
add
ds
or
sub
dec
es
les
mov
inc
and
xor
cmp
inc
lea
add
ret
push
hlt
pop
aaa
jne,pt
add
mov
inc
push
add
jmp
popa
jno
pop
ds
jl
inc
jno
jne
int3
mov
add
js
jge
xchg
mov
push
cmp
add
cwtl
sbb
lret
loopne
lock
aas
cmpsb
movsb
add
and
cmp
pop
sbbb
mov
cmpsb
jne
je
jp
push
das
rorl
shr
or
test
and
mov
mov
cmp
mov
and
loop
cmp
popf
test
rcrb
pop
sub
pusha
adc
fsubr
add
in
inc
and
je
push
or
flds
addr16
xchg
jne
jl
shrb
add
les
mov
int3
xchg
out
sub
dec
xchg
enter
sbb
out
lret
negb
cmp
adcb
sub
dec
mov
xchg
and
outsb
jg
or
sub
aad
in
jne
fiaddl
mov
iret
cs
roll
test
pop
inc
lock
je
mov
xor
fstl
jle
out
xor
pop
into
mov
ret
orb
imul
arpl
por
cli
scas
mov
xchg
dec
dec
jb
or
add
mov
xlat
add
fs
ds
scas
add
dec
xchg
insb
push
out
mov
xchg
push
xchg
jno
add
or
stc
cmp
add
push
and
jbe
mov
jecxz
mov
inc
daa
push
and
add
mov
or
sub
sti
pop
mov
dec
in
sub
mov
or
rolb
icebp
and
fs
subb
pop
add
add
mov
or
pop
outsb
mov
jnp
rcrb
jle
inc
add
lods
mov
roll
or
add
inc
out
pop
inc
jmp
inc
cmpsl
sub
push
add
daa
pop
in
adc
into
call
jae
adc
stos
fildl
or
jl
pcmpgtb
fdivl
inc
in
mov
dec
mov
sub
les
inc
roll
sbb
data16
fdivr
sub
sub
mov
or
xchg
sbb
mov
je
jge
xchg
fsubr
add
inc
mov
fisttpll
loopne
cld
scas
add
mov
inc
add
mov
lods
aas
das
in
js
add
sbb
mov
inc
cmp
sub
in
sub
lods
stc
add
sub
inc
add
mov
xchg
cmp
rcrb
cmp
mov
or
cmpsb
push
pop
popf
roll
add
pop
out
loopne
jnp
pushf
and
xor
add
loopne
dec
or
add
fstpl
faddl
add
sbb
popa
add
add
mov
mov
dec
mov
sbb
add
sbb
fiadds
inc
sub
mov
daa
add
cmpsb
dec
inc
call
aad
mov
add
mov
fisttpll
pop
add
test
cmp
lock
add
mov
jns
out
sub
sarl
mov
mov
imul
xchg
push
dec
add
adc
and
notb
loopne
sysret
pop
jbe
jno
xor
jo
mov
and
xchg
sbb
add
push
or
xor
push
jl
ja
scas
push
adc
test
mov
and
cmp
adc
inc
sub
dec
fsubl
lods
cli
push
daa
inc
push
adc
loope
jne
movsl
sbb
and
cmp
or
out
fisubl
and
call
cmp
enter
add
and
decl
aad
adc
adc
inc
sbb
iret
push
xor
sub
mov
cmp
sbb
or
jne
dec
cmp
rolb
scas
clc
inc
pusha
cmp
xorb
insb
or
push
add
xor
jp
push
shr
push
jecxz
xchg
cmp
cwtl
cmp
add
and
rorl
loopne
and
mov
or
cli
movzwl
jg
fcmove
daa
shl
add
in
sbb
mov
pop
pop
popa
mov
arpl
adc
ja
inc
xor
out
es
xor
aad
push
rcll
fidivl
inc
jg
adc
cmp
call
ss
jmp
inc
sub
pop
subb
andl
adc
adc
jle
inc
lock
sbb
pop
lsl
hlt
fisttps
dec
or
sub
fdivr
pop
add
mov
and
or
jmp
shlw
sbb
sub
jg
mov
push
in
pushf
push
inc
xchg
push
inc
adc
adc
jb
adcb
pop
add
stc
je
mov
rol
xor
adc
addl
jne
mov
nop
popf
add
test
jmp
add
pop
xlat
mov
shr
test
sub
incb
dec
shlb
sbb
aaa
inc
es
adc
ljmp
pop
add
lods
and
inc
cmpsb
sti
push
test
hlt
or
xchg
loopne
stc
pop
mov
loop
icebp
ljmp
in
mov
daa
and
push
and
sbbb
sbb
ja
hlt
in
rorl
add
rorb
cmp
mov
xlat
and
sbb
fisttps
sbb
inc
out
adc
nop
out
addl
or
jge
imul
pop
mov
dec
cli
loop
add
jne
shr
je
add
xlat
jmp
adc
mov
mov
xor
xchg
add
cld
sub
dec
nop
add
mov
add
sbb
popa
pop
cwtl
adc
adc
dec
or
jle
add
les
test
in
je
add
or
mov
jmp
add
pop
adc
lret
add
mov
adc
add
push
fidivs
pop
sbb
pop
or
inc
pop
jns
outsb
inc
ret
xor
call
inc
inc
rolb
mov
sbbl
sub
add
or
call
inc
add
movsb
dec
fwait
mov
aad
inc
loop
xchg
inc
les
adc
xor
xor
add
jns
jnp
inc
lcall
in
push
jge
mov
add
push
into
sahf
imul
add
addr16
icebp
pop
das
add
popf
in
inc
pop
add
lea
in
and
xchg
pop
in
push
js
inc
add
mov
add
push
push
sub
rcr
add
cmp
dec
adc
inc
dec
and
adc
ss
and
test
loopne
push
adc
xchg
xchg
or
cmp
add
add
or
dec
jne
add
or
aas
je
cmp
mov
cmp
jne
mov
lar
and
mov
test
cwtl
sbb
gs
stos
sbb
xchg
insb
push
subb
ja
pop
gs
mov
and
pop
inc
sub
jnp
xor
inc
jp
pop
cld
mov
stos
add
add
mov
sbb
enter
push
popa
mov
add
adc
push
iret
jmp
sarb
aam
jmp
imul
loopne
sbb
in
add
cli
xchg
sub
add
adc
pop
stc
mov
cmp
stc
cmp
arpl
add
movsb
das
add
ret
rcrl
andl
jp
add
jmp
cltd
add
mov
sub
sbb
push
xchg
xor
mov
rcrb
test
inc
cltd
xchg
pusha
sbb
add
not
ljmp
and
fcmovb
or
push
adc
xchg
push
lret
mov
incl
or
add
imul
negl
insb
mov
xor
add
push
mov
cld
cmp
in
push
inc
aas
xor
mov
sbb
dec
shrb
mov
in
cli
adc
fists
cmp
add
stos
or
lods
add
xor
mov
jmp
add
mov
push
add
stc
add
pop
mov
mov
jo
stc
orl
es
pop
call
mov
aas
sub
jne
add
and
fildl
mov
hlt
xor
lcall
jg
add
je
mov
mov
jo
add
jmp
add
sarb
add
bswap
xchg
push
sub
mov
mov
xchg
das
mov
pop
adc
push
in
std
or
cmp
push
mov
or
fisttps
roll
dec
push
add
sub
mov
xchg
add
add
and
push
loope
mov
cld
leave
adc
and
dec
sub
lahf
in
cmpsl
add
shl
add
push
push
push
xchg
pop
push
or
mov
je
testb
dec
scas
leave
jmp
and
add
test
and
clc
cmpb
ljmp
ds
add
push
jecxz
idiv
mov
adc
pop
cmp
not
adc
and
and
mov
daa
mov
push
mov
inc
add
leave
mov
adc
nop
imul
and
pop
cmp
dec
mov
lea
data16
je
lahf
pop
icebp
sbb
out
in
andl
lea
dec
mov
fcoml
sub
ret
add
bndldx
or
cmp
sub
jp
outsb
push
dec
jo
int
andl
test
aaa
fs
cmpb
scas
aam
add
mov
pusha
or
nop
ficompl
loop
test
ret
push
in
cmp
pop
shl
push
mov
push
add
insl
xchg
bound
pusha
dec
pop
add
mov
repnz
dec
mov
mov
jno
sbb
sub
cmpsl
popf
das
mov
push
sub
lock
and
add
adc
xchg
arpl
lret
ror
pop
adc
adc
jmp
ss
add
fnsave
sub
aas
ficoml
adc
push
shlb
dec
jns
repz
rcrl
xlat
lods
add
and
jl
add
aad
fnstsw
ljmp
cwtl
popl
out
mov
pop
inc
sbb
pop
testl
xchg
mov
ja
jne
add
ja
fdivrs
hlt
out
pop
adc
xchg
lods
lock
int3
add
mov
mov
popf
popa
push
pop
hlt
and
inc
add
roll
orb
xchg
lods
in
dec
movsb
jge
sbb
push
scas
and
add
mov
mov
adc
and
movsb
pop
in
ja
in
ss
push
dec
push
xor
fcom
mul
xchg
dec
hlt
ret
add
mov
inc
data16
or
add
xchg
iret
popa
dec
jae,pn
add
and
mov
dec
and
pop
push
js
cld
or
add
xchg
sub
mov
xchg
cli
lea
lods
xchg
mov
and
xchg
add
push
xchg
addr16
mov
pop
jns
add
jns,pn
dec
mov
pop
leave
into
cmp
adcl
test
jge
shll
push
xchg
fwait
ret
dec
addl
ror
xor
call
notb
sti
shlb
cld
cmp
add
push
ds
xchg
add
dec
or
cli
jne
sahf
jns
faddp
mov
xchg
loope
ljmp
adc
cmpsl
loopne
fldpi
rolb
cmp
push
pop
dec
imul
mov
add
add
dec
dec
inc
and
stos
repnz
push
fidivl
test
mov
testb
jns
lods
hlt
enter
xor
push
repnz
addr16
add
mov
aam
daa
add
inc
adc
repnz
rclb
int3
add
and
adc
dec
add
lret
dec
dec
sbb
adc
lcall
push
out
xor
add
stc
cmc
adc
push
fs
cmp
add
inc
xchg
test
adc
and
cs
stc
sub
add
add
xchg
mov
xlat
add
xor
je
push
push
dec
shll
in
mov
out
imul
xchg
add
and
enter
aas
mov
cmp
sahf
es
addb
mov
loopne
mov
and
idiv
call
add
dec
or
int3
pusha
es
out
pop
or
dec
je
add
idivb
add
dec
jno
test
jne
add
jb
das
add
adc
pop
adc
hlt
cltd
jae
dec
shlb
into
add
lret
movsb
les
adc
xchg
sbb
aaa
add
push
jne
add
in
shll
push
adc
sarb
add
ds
fdivrl
in
xor
into
add
xchg
cmp
adc
xchg
jecxz
cmp
pop
add
cli
add
daa
lea
xchg
adc
cmp
inc
push
or
add
mov
lock
xlat
adc
jecxz
test
fadds
pop
and
addb
incl
pop
push
iret
cmp
flds
mov
jb
pop
mov
adc
jmp
lret
roll
cld
roll
dec
cmpsl
jmp
sbb
test
lret
arpl
dec
scas
lods
pop
in
jb
jo
push
add
movb
adc
inc
pop
xor
xchg
scas
and
addl
pop
outsl
into
pop
out
lcall
out
dec
lods
pop
adc
and
add
call
push
ret
add
xor
pop
pop
sti
inc
fwait
or
movsb
or
js
pop
xor
sbb
push
lods
adc
jbe
in
inc
faddp
jno
sbb
hlt
push
add
aam
clc
imul
ret
inc
subb
add
mov
test
lea
jle
or
and
icebp
inc
nop
push
dec
push
mov
push
adc
daa
push
pop
adc
inc
fnstsw
lods
add
cmp
adc
test
xchg
fs
xchg
sbbb
mov
push
addl
dec
test
daa
shr
inc
xchg
inc
ljmp
lcall
xchg
jg
add
mov
and
outsl
loop
sub
scas
dec
and
lock
faddl
fists
into
xor
imul
add
pop
pop
add
fsubl
mov
push
push
addb
lea
test
insb
xchg
enter
jb
mov
movsb
shlb
rcrb
fmuls
mov
test
push
add
push
push
mov
or
fcoms
lahf
enter
push
std
inc
sub
add
dec
shll
pop
fadds
adc
lds
add
jecxz
and
mov
add
or
mov
int3
cmc
pop
rcr
xor
push
rolb
or
add
push
aam
inc
arpl
jl
sbb
xchg
insb
add
sub
add
fcomps
inc
add
pop
repnz
iret
adc
sarb
pop
jle
inc
lds
add
jmp
xchg
mov
or
sbbl
or
lock
add
jg
mov
push
out
inc
in
call
lods
test
sti
sbb
rcr
sub
roll
cld
xchg
jecxz
nop
push
mov
mov
xor
dec
sbb
pop
and
mov
sub
out
shl
hlt
lods
les
popf
xchg
lret
push
icebp
xchg
xchg
ja
jnp
adc
ss
mov
push
push
xchg
mov
call
movb
scas
in
imul
push
cmp
adcb
or
dec
lock
add
adc
inc
add
inc
call
jp
add
mov
jne
cmp
test
xor
or
inc
mov
call
hlt
mov
mov
lods
xorb
in
cmpsb
arpl
test
pop
and
add
cmp
lods
add
sbb
cmpsl
add
je
scas
pusha
movsl
aas
add
add
mov
add
mov
jno
jecxz
add
xchg
loope
add
aaa
in
jle
incl
cmp
add
iret
mov
shl
js
pushf
arpl
pop
fs
or
enter
push
jnp
shlb
fildll
repz
repnz
out
pop
add
outsl
mov
and
add
cmpsb
xor
sbb
test
sub
adc
dec
inc
jns
pop
test
add
adc
movl
and
adc
aas
sbb
push
mov
repnz
pop
cld
inc
or
add
xchg
sbb
xchg
sub
bound
je
aaa
in
adc
jno
ret
aas
inc
add
adc
out
ja
mov
aas
hlt
mov
aaa
ljmp
push
and
subl
out
ljmp
dec
repnz
inc
ffreep
add
and
jle
mov
mov
mov
inc
jns
aad
push
and
in
xchg
jg
add
cmp
and
xchg
xchg
add
and
mov
and
out
mov
inc
add
cs
imul
add
inc
mov
cmp
clc
mov
push
pop
pop
xlat
add
push
push
sub
or
jne
mov
cmp
cmc
pop
jo
cmp
add
icebp
bound
and
ret
sub
inc
cmp
cmp
fwait
pop
int
pushf
dec
pop
sub
cmp
push
icebp
mov
bnd
lret
or
and
mov
cwtl
jp
fadds
pop
cld
mov
pop
aas
clc
call
and
js
add
or
add
push
lret
decl
pop
fdivrl
add
loopne
add
and
cmp
add
sbb
push
stos
add
jo
mov
dec
jmp
add
and
mov
cmp
test
data16
adc
sub
repnz
jmp
inc
out
dec
mov
add
sub
pop
cmp
orb
lahf
push
dec
pop
in
add
loop
pop
es
push
or
lcall
adc
mov
or
icebp
or
inc
ds
testb
scas
sbb
and
xlat
inc
cmc
jmp
or
mov
sub
fs
scas
dec
and
faddl
cmpb
mov
int3
mov
sbb
es
push
in
jp
mov
push
cmp
lret
push
leave
hlt
push
pop
or
shr
stc
jl
add
test
and
dec
jne
jge
nop
xchg
inc
adc
and
add
dec
jno
scas
adc
sub
sbb
push
imul
hlt
mov
add
adc
add
or
pusha
lret
or
dec
push
push
push
add
xchg
out
repz
add
adc
jnp
rcrb
stos
mov
push
xchg
cmpsb
and
pop
sahf
cmp
add
lock
clc
imul
jo
fldl
inc
es
xchg
adc
outsl
mov
add
dec
xchg
mov
sub
cmp
incl
push
mov
inc
cmc
aas
and
xor
mov
sbb
mov
stos
loop
xchg
dec
add
sub
add
mov
xchg
fdivr
mov
or
add
xchg
test
out
mov
cmp
add
push
or
and
xor
mov
js
arpl
xchg
jnp
xchg
xchg
lahf
cld
stos
adc
mov
mov
cli
xsha1
cmpsb
cmova
and
icebp
sti
push
adc
inc
add
and
jbe
or
add
push
inc
dec
and
je
add
arpl
divb
sbb
sub
ret
mov
lret
jo
xor
shlb
cmpl
xchg
mov
push
fdivrs
fstps
add
jp
xor
ret
push
inc
test
add
sbb
add
xor
pop
or
sub
push
je
adc
cmp
roll
iret
jmp
and
out
xchg
add
filds
enter
jns
adc
xor
rcrl
or
in
add
add
mov
lea
js
dec
and
add
jne
sbb
push
lret
jmp
cmpl
add
and
les
or
add
and
or
add
add
dec
pop
xchg
xchg
and
push
and
and
cmpsl
clc
mov
add
bound
add
xor
dec
mov
dec
and
adc
popl
fidivrs
adc
test
adc
cld
movl
or
daa
sti
stc
pop
scas
mov
push
pusha
push
push
jae
dec
push
push
xchg
repnz
rclb
push
pop
dec
les
test
or
stos
and
mov
call
lret
lods
shrl
xchg
add
add
cmp
or
sbbl
mov
add
test
xor
add
loopne
xor
add
aas
ss
xor
jp
shld
addr16
pop
add
cmp
jnp
sub
inc
add
rorl
push
xor
mov
int
clc
cmp
and
in
lret
test
inc
mov
inc
add
enter
adc
adc
mov
loopne
incb
stos
push
daa
push
fisttps
push
push
jno
inc
rorb
pop
add
push
data16
push
movsb
and
daa
clc
xchg
cmp
fcompl
sar
inc
add
jg
xor
rcll
pop
dec
push
popa
add
fisubrs
and
jmp
xor
imul
in
or
add
int
mov
not
and
add
imul
andb
push
adcl
in
dec
arpl
lods
sbb
mov
xchg
int3
imul
mov
enter
lea
sub
sub
rolb
out
sbb
popf
outsb
push
jae
pop
push
and
sub
dec
add
push
insl
sbbb
inc
test
jp
add
popf
arpl
hlt
sub
jp
icebp
hlt
or
mov
jo
xchg
sbb
jmp
adc
loop
cmp
add
xor
fmul
add
cltd
jno
dec
popl
sbb
or
rcl
daa
xsave
test
sub
leave
adc
add
xor
jmp
jo
jge
dec
shr
jne
dec
sbb
xchg
cld
jb
das
xor
pop
add
pop
and
add
sub
int
xor
ja
pop
mov
xchg
popf
jp
vmread
push
add
xor
rclb
inc
sbbl
hlt
sbb
push
pop
and
and
or
in
add
dec
hlt
mov
cmpsl
jmp
push
xchg
pop
repnz
mov
es
je
pop
mov
xor
outsb
fcomi
and
push
inc
jne
insb
insl
jae
add
xchg
shr
outsl
add
or
pop
add
mov
lods
push
in
clc
orb
call
mov
push
sbb
imulb
xchg
mov
mov
add
adc
add
adc
mov
add
sub
add
dec
dec
pop
bound
lds
mov
std
adc
add
cmp
out
push
add
lret
and
and
add
incl
add
mov
add
mov
das
pop
subb
pop
mov
add
add
cmp
cmp
mov
cmp
jne
sub
sub
push
pop
add
inc
rcrl
pop
into
push
cmpsl
data16
mov
mov
sbb
out
cwtl
push
cmp
add
xchg
scas
mov
pop
xchg
add
sar
mov
push
sub
and
jle
aad
push
sbbb
jae
add
xchg
xor
pop
add
adc
mov
rolb
hlt
push
add
leave
daa
pop
sbb
or
jmp
pop
add
adc
pop
lcall
cmp
mov
pop
add
mov
lock
cmc
ljmp
roll
jae
or
jb
int3
fistpll
js
unpcklps
add
aam
in
add
int3
mov
push
into
push
idivl
pop
sbb
or
sbb
xchg
in
adc
xor
ds
inc
das
call
out
iret
rclb
fnstcw
mul
addr16
data16
les
or
scas
adc
add
cmp
xbegin
add
out
jmp
dec
cmp
rorb
cmp
pop
add
roll
lret
mov
add
add
add
push
rolb
mov
dec
sbb
ljmp
sub
add
mov
mov
mov
pop
jb
add
mov
cmp
rorl
daa
push
into
insl
sbb
dec
inc
push
lock
add
stos
sub
dec
sbb
sub
jno
mov
xchg
jl
add
das
and
lret
push
add
std
dec
rclb
aas
jae
adc
xchg
add
ja
mov
jge
push
jno
jbe
decb
loope
repnz
subl
add
jmp
or
add
cwtl
aad
cmp
xchg
add
jne
xor
in
or
cmpsb
xor
lcall
pop
addb
or
hlt
jns
push
lcall
mov
lods
scas
addl
or
adc
push
dec
shrl
adcb
pop
xchg
add
adc
sub
and
add
sbb
adc
roll
inc
xchg
ja
mov
aam
jge
mov
mov
mov
call
out
cli
repnz
je
push
in
lret
add
mov
sbb
cmpsb
xchg
or
in
or
lcall
ret
dec
je
lds
cld
mov
enter
shrl
xor
popf
imul
add
pop
push
push
mov
icebp
shrb
mov
cli
out
pop
jmp
push
das
lods
jb
add
and
cmp
mul
jmp
loop
jns
pop
jle
inc
add
pop
sahf
cltd
ret
jmp
push
sub
add
add
cmc
pop
push
rorl
push
test
mov
adc
jnp
daa
mov
sub
lahf
rolb
mov
mov
lods
xor
nop
ja
cs
loop
add
lcall
add
inc
and
or
cld
or
add
pusha
inc
adc
jg
add
add
rolb
or
mov
mov
inc
hlt
add
jg
out
inc
cmp
aam
push
lcall
popf
mov
repz
call
dec
add
lcall
pop
xchg
insl
jp
push
cmp
aad
repnz
insb
add
test
sbb
cwtl
dec
pop
orb
add
add
lods
psubb
and
dec
add
inc
and
jl
push
xchg
lods
push
jle
add
push
shr
cs
adc
not
insl
int
mov
sub
loopne
outsl
mov
add
aam
pop
pushf
inc
xchg
sti
bsr
hlt
add
adc
lea
mov
and
push
mov
stos
cli
in
int3
jne
in
push
add
cmpsb
mov
add
movsl
shl
xchg
mov
ds
adcb
leave
add
dec
aaa
outsl
jb
mov
mov
or
daa
or
rol
ljmp
movsl
sub
add
lret
sbb
adc
sbb
gs
adc
cmp
shrb
loope
test
or
xor
mov
inc
and
add
push
push
xor
pop
adc
sbb
sub
ret
int
inc
dec
cvtdq2ps
jbe
lods
enter
push
shlb
adc
sub
hlt
or
cmp
imul
and
mov
fs
lods
sub
add
das
push
dec
dec
add
insb
push
aam
cmp
add
mov
add
adc
sbb
dec
push
test
loope
cmpsl
out
add
dec
in
in
or
mov
shrb
xchg
call
bound
sub
mov
xor
fldl
rcl
or
or
inc
xor
xchg
pop
add
push
jnp
mov
mov
adc
adc
adc
js
dec
add
push
ja
add
mov
push
ds
xchg
mov
in
xor
add
xchg
inc
mov
sub
inc
aas
sbb
pop
adc
adc
add
sub
imul
dec
jns
add
aaa
lock
out
cmp
popa
dec
mov
outsb
add
dec
nop
xchg
mov
mov
out
cmc
inc
add
or
xchg
pop
testb
mov
jae
mov
out
add
sbb
test
add
inc
iret
adc
mov
das
sbb
xchg
xchg
mov
stos
jbe
out
sub
add
roll
mov
jne
pop
and
jnp
fisttpll
xchg
or
add
xchg
stc
xor
lret
hlt
pop
and
or
adc
add
pop
add
push
aam
lock
push
dec
mov
pushf
stos
sub
jecxz
inc
push
add
ret
cmpsl
loope
add
xchg
std
mov
or
jb
jmp
test
fmull
push
repz
aas
aam
xchg
add
and
or
push
and
mov
add
and
lret
loope
ja
jp
cmp
inc
lret
fcmovnb
mov
jle
add
jbe
imul
and
test
addr16
xor
add
adc
aad
clc
add
mov
xchg
ds
inc
mov
je
rolb
adcb
ds
scas
pop
insl
push
sub
shlb
jmp
test
pop
add
push
lahf
cld
sub
insl
mov
cmp
dec
ljmp
movsb
pusha
mov
aam
add
mov
push
in
cmp
inc
je
sbb
leave
push
sub
pop
cmp
jecxz
and
pop
pop
test
adc
xchg
mov
add
add
fcoms
jmp
jo
or
xchg
gs
test
mov
add
sbb
push
subb
notl
xchg
cs
push
add
repnz
or
add
mov
sub
movsb
incl
dec
and
ret
movsl
add
mov
and
pop
sbb
and
flds
mov
and
daa
inc
fsubl
add
pop
imul
add
lock
add
in
sbb
and
sahf
jecxz,pn
add
sub
add
adc
and
mov
inc
dec
pop
adc
sub
loopne
push
mov
ret
add
repnz
sub
mov
and
cmp
or
xor
in
mulb
jmp
lods
sbb
in
push
sbb
cmp
nop
pop
les
sbb
inc
add
aas
js
xor
or
nop
sbb
inc
paddd
in
xor
adc
push
movsb
push
jnp
sbb
pop
ljmp
nop
enter
add
andl
mov
dec
mov
push
add
mov
or
pop
xchg
aas
arpl
jecxz
pop
and
sub
pop
adc
mov
push
loope
subl
xchg
cmp
pop
dec
inc
shlb
les
xchg
cmpsl
xor
jo
push
into
mov
jp
or
add
je
shl
call
add
out
shr
sar
test
push
shrb
push
add
cwtl
push
xchg
mov
addb
add
or
js
pop
or
ljmp
lds
mov
lahf
js
xor
xchg
shlb
xlat
sbb
or
sub
rcrl
cld
and
sub
mov
push
bsf
push
loope
mov
inc
int3
outsb
dec
add
jbe
xor
adc
insb
orl
call
pusha
rcrb
pop
xchg
dec
push
ret
push
pop
jne
mov
dec
test
iret
pop
cmpsl
cmp
push
adcb
and
dec
out
mov
add
jmp
mov
push
adc
or
pop
and
adc
and
sarb
adc
or
inc
add
sub
shrl
fstps
mov
cwtl
adc
jne
or
add
push
adc
cmp
idivb
cli
or
sbb
out
pop
cmp
leave
push
push
xchg
cld
mov
jge
les
mov
idivb
sbb
popa
add
or
sbb
shlb
icebp
add
lea
out
out
into
int3
imulb
inc
jp
mov
js
mov
ss
adc
and
sub
add
jne
out
clc
mov
or
sbb
pop
pop
mov
mov
lea
add
pop
loop
fs
add
ss
pop
push
mov
and
add
mov
addl
dec
jne
xor
push
push
pop
push
loop
xor
xchg
xor
dec
das
pop
clc
sub
cmp
or
add
push
in
lock
div
andl
or
pop
cs
mov
or
cmp
mov
pop
xlat
add
push
stos
cmp
add
add
pop
scas
and
pop
adc
cwtl
addb
js
negb
add
dec
or
inc
add
mov
add
inc
dec
jne
sbb
ja
xor
pop
mov
std
pusha
xchg
mull
cld
jo
xor
aas
add
add
add
jne
push
mov
rcll
jae
add
xchg
lea
or
sub
and
add
mov
add
jns
clc
stc
cld
nop
or
adc
dec
and
test
sub
pusha
imul
lret
ret
push
out
and
popf
or
xchg
adc
mov
repnz
push
add
test
in
add
xor
push
hlt
jg
jno
add
cs
pop
out
sarb
push
add
mov
and
xlat
or
inc
int
add
fs
stos
or
cmpsl
mov
sub
inc
push
shll
enter
cmp
and
add
inc
mov
sbb
xor
loop
pop
add
inc
sub
add
fwait
mov
add
test
or
and
arpl
aas
add
popf
test
sti
cli
push
add
in
aam
cmp
jg
sbb
inc
rcll
pop
add
aaa
fildl
dec
push
clc
andb
out
ja
subl
addl
inc
xchg
add
call
mov
ret
lcall
add
in
push
pop
add
and
inc
sbb
or
inc
sti
lods
dec
call
das
or
sbb
popa
pop
or
shl
add
adc
push
loope
fstpl
out
mov
scas
add
lcall
push
clc
and
cmp
stc
mov
fcomip
sbb
arpl
xor
test
cmp
arpl
xor
push
jae
sahf
pop
mov
sbb
test
mov
or
sbb
mov
push
mov
ret
jle
inc
lret
mov
fistpll
fdivrl
and
xor
and
mov
sub
cmc
lock
adc
loopne
and
mov
out
pop
xor
mov
or
xor
adc
daa
adc
pop
cld
out
pop
push
jl
stc
or
cs
test
scas
mov
out
lret
in
pop
mov
dec
fmul
or
adcb
add
and
sub
jb
das
mov
jg
pop
cmp
call
add
push
inc
aad
loope
sbb
mov
lea
push
sarl
xor
outsl
or
call
adc
or
subl
add
scas
cwtl
jle
sbb
and
pop
dec
pop
sub
je
adc
verw
mov
jge
mov
add
mov
xchg
or
add
jmp
lods
mov
ret
pop
push
add
sub
sbb
in
xorb
cmpsl
fs
xor
lock
and
add
or
mov
mov
imul
sbb
roll
cld
cmp
je
or
es
das
addb
xor
fdiv
xchg
push
aam
decb
std
inc
xchg
mov
psubb
mul
sti
pop
xor
in
hlt
cmp
loopne
push
leave
pop
repnz
and
test
popf
sti
in
js
inc
xor
mov
add
cmp
xor
or
in
in
mov
jo
push
inc
jmp
call
fbld
or
pop
push
test
mov
jg
jle
add
mov
cmp
filds
ret
cs
rclb
testb
fdivs
xor
insl
subb
cmp
in
out
jg
out
out
into
js
lret
lock
repz
orb
clc
or
movsb
mov
fldl
mov
cld
lcall
shrl
je
subb
enter
xor
or
add
mov
enter
sub
jmp
adc
gs
jmp
idivl
clc
scas
ja
inc
mulb
mov
stos
lahf
xor
cmp
cmpsl
imul
dec
xchg
repnz
adc
icebp
mov
cmp
xchg
and
mov
adc
fsubrl
cmc
and
cld
mov
sub
cmp
pusha
pop
and
pop
loope
sbb
popa
imul
pop
sti
ucomiss
ds
xchg
aam
scas
or
fwait
cs
sub
or
inc
jns
js
jmp
data16
mov
cwtl
scas
add
divl
or
loop
add
fcmovb
mov
sbb
or
or
fidivs
repnz
add
bound
add
mov
add
lret
sub
mov
jmp
les
shrl
fxch
les
add
movsl
shlb
add
inc
xchg
dec
ret
shlb
or
out
or
je
xchg
xor
or
repz
movsl
jb
inc
push
dec
mov
jns
or
js
test
dec
subb
push
movsl
dec
test
or
add
dec
xor
push
mov
and
pop
mov
stos
mov
test
insb
push
add
fbstp
sbb
fiaddl
sbb
pop
xor
xor
cwtl
xor
stc
or
scas
or
sub
cwtl
adc
lods
cmp
adc
push
into
xchg
push
shl
xor
enter
cwtl
pop
add
jmp
popf
push
popf
and
mov
push
ret
dec
mov
pop
or
jle
loopne
cltd
pop
or
and
enter
add
loope
or
clc
jge
fdivrs
div
jnp
loope
mov
push
cltd
js
icebp
add
push
test
in
push
xor
add
imul
lock
xor
divb
loopne
cmpsl
or
ret
pop
test
mov
and
mul
pop
iret
xor
ret
mov
dec
in
dec
movsl
xchg
stos
dec
mov
ficoms
mov
or
pop
out
push
or
jnp
xchg
and
push
or
clc
punpcklwd
jl
adc
adc
and
lret
aaa
sbb
mov
or
or
jle
sbb
cmp
xchg
xor
adc
inc
add
mov
adc
dec
add
fs
push
mov
fldl
jns
dec
mov
loopne
ljmp
push
and
jmp
add
dec
jmp
mov
adc
bound
scas
sbb
call
dec
stc
xchg
xor
push
and
jge
cmp
mov
fsubl
add
sbb
dec
push
outsl
lds
add
xchg
js
repnz
add
arpl
cwtl
sbb
in
adc
and
clc
add
inc
pop
add
pop
or
and
movsb
pop
mov
aas
jg
mov
scas
mov
jecxz
and
jmp
pavgb
and
add
out
pop
inc
and
sbb
nop
and
add
in
dec
stc
repnz
cmp
or
addr16
test
scas
in
and
mov
inc
mov
and
test
adc
add
push
cmovno
fsubs
sbb
cmp
xor
xchg
insb
xchg
rorl
jmp
xor
call
mov
loop
xchg
fldenv
test
push
push
clc
jecxz
pop
test
dec
sub
cld
jmp
xor
dec
push
data16
mov
jo
push
es
or
pop
add
outsl
shrb
into
mov
push
xor
test
sbb
xchg
shrl
shr
sahf
scas
add
cmp
popa
xchg
lcall
adc
add
mov
jg
mov
cmp
adc
push
mov
das
arpl
dec
or
xor
sbbl
add
mov
hlt
pop
add
jecxz
pop
imul
leave
and
rorl
adc
mov
push
inc
jecxz
es
fiaddl
pop
or
or
test
add
jg
loope
cmp
push
aas
dec
add
pop
mov
push
sbb
shrl
sub
loope
movsl
or
dec
mov
aas
inc
ret
add
loope
add
or
lahf
subb
jmp
in
and
cmp
mov
mov
sub
dec
cwtl
js
pop
sub
popf
sti
ret
mov
mov
outsb
xor
or
push
mov
or
push
mov
sbb
adc
pop
in
jmp
inc
imul
xchg
aam
adc
add
pop
push
cmp
cli
loope
and
dec
std
mov
imul
sbb
mov
fcomps
dec
popf
pop
imul
int
call
xor
stc
jno
add
push
sub
test
jno
sbb
movsl
xor
fsubl
call
add
in
pop
inc
push
pop
jns
or
out
fs
pushf
mov
push
cmp
push
sbbb
push
adc
push
xchg
xchg
test
jo
lock
jo
sahf
adcl
inc
hlt
aam
mov
adc
lret
sub
mov
xor
xchg
inc
loop
aaa
loopne
iret
cmp
or
cmp
inc
cmp
pop
cmpl
inc
fiadds
fidivl
add
test
rorb
dec
loop
add
es
jb
mov
inc
dec
add
sbb
add
mov
mov
data16
add
rcl
leave
fistps
cmc
adc
sbb
out
jl
add
pusha
test
lahf
mov
stc
lods
sbb
leave
dec
push
in
cmp
in
jb
sbb
adc
addb
jle
xchg
lods
push
adc
sbb
mov
andb
add
clc
mov
jb
add
and
push
jnp
je
jne
dec
movsl
sbb
fistpl
mov
lahf
in
cli
ja
mov
nop
push
jl
adc
sub
jae
inc
sub
or
xor
jnp
pusha
std
sbb
sahf
jl
ror
adc
push
test
and
dec
mov
dec
fists
mov
adc
leave
inc
shrl
pop
and
lret
mov
or
out
testb
or
add
arpl
cmp
or
imul
cld
add
jno
jecxz
dec
xchg
adc
mov
add
mov
les
add
jp
sbb
stc
xchg
mov
repz
gs
leave
jg
cld
daa
in
lea
ret
push
and
loope
roll
es
dec
inc
rcrb
and
lods
dec
adc
or
test
dec
xchg
sub
in
push
or
popa
fwait
or
loopne
test
ficoms
or
mov
dec
fmull
repz
jge
rcrl
mov
xchg
jmp
push
stc
fadds
cmpsl
int
repnz
dec
out
sub
xchg
cmpsb
movsl
jns
jnp
cmp
pop
adc
adc
and
dec
fs
pop
out
add
sbb
add
or
cmpsb
or
jne
xchg
dec
test
mov
mov
loope
and
push
cwtl
mov
mov
movsl
mov
mull
pusha
nop
jnp
push
nop
lods
add
jns
mov
mov
and
cmc
nop
mov
adc
push
stos
jae
add
into
dec
sub
ss
add
rcrl
insl
sub
out
jle
sub
pop
inc
inc
pop
enter
mov
xchg
js
jle
xchg
dec
les
sbb
fisubl
sbb
int3
jne
add
fnstsw
mov
add
stc
inc
mov
xchg
les
mov
and
jns
shll
dec
add
push
pop
mov
repnz
inc
dec
fsts
lea
clc
loopne
push
loope
add
js
or
jnp
roll
outsb
ds
jnp
jno
sbbl
xor
push
mov
xchg
sbb
mov
addr16
popf
test
fmull
outsb
mov
cmp
movl
and
insb
stc
lcall
movsl
mov
pop
sub
xor
mov
daa
lea
pop
je
out
and
jecxz
leave
in
push
out
add
and
add
andb
inc
and
mov
adc
pop
dec
push
decb
add
inc
or
add
or
adc
cmp
popf
xlat
inc
into
ja
in
dec
or
mulb
ret
xchg
pop
out
mov
daa
pop
js
pop
loopne
mov
arpl
add
fdiv
and
cld
test
or
push
cmp
pop
orb
lods
fisttpl
sbb
cmp
call
and
je
out
add
or
dec
pop
cld
test
ja
add
push
adc
sub
imul
push
int
cli
inc
mov
dec
add
ja
jne
pop
push
push
cmpsl
jl
jle
and
jo
cmpb
push
stos
adc
std
out
sub
pop
xor
outsb
cld
push
and
or
std
sub
add
roll
push
divl
and
cmp
cli
or
add
sahf
or
sbb
js
push
fisttpll
cmp
and
sbb
or
sbbb
ror
repz
or
loope
out
cli
add
cld
outsb
dec
clc
cmc
mov
mov
cld
mov
in
bound
sub
and
add
adc
push
orb
lret
popa
add
fiaddl
clc
cmpsl
ljmp
adc
xchg
add
inc
scas
mov
dec
aad
imul
test
mov
nop
fsub
out
add
stos
cmpsl
in
xchg
adc
mov
add
xor
or
pushf
stos
ret
scas
sbb
add
aaa
sub
adc
add
inc
popa
outsb
pop
daa
je
cmp
fs
out
aas
nop
jo
pop
dec
ret
in
add
push
or
inc
sbb
sbb
lea
icebp
pop
mov
jmp
pop
lock
xchg
mov
push
std
cli
loopne
lcall
gs
add
testb
addb
int
jp
push
add
das
adc
add
add
push
jmp
jns
cwtl
mov
sbb
rclb
dec
add
mov
or
xchg
add
cmpl
add
mov
and
mov
sahf
loope
add
jle
adc
test
add
cltd
fldcw
pop
sub
add
add
test
xor
jg
xchg
rcr
xchg
sbb
inc
sub
push
call
xlat
jns
mov
fistpl
xchg
dec
popf
inc
mov
rol
cmpsb
pop
xor
sub
outsb
rcrl
or
loopne
rolb
sbb
in
xchg
test
out
inc
bound
call
fidivrs
mov
sub
js
add
jmp
xor
fs
jl
das
add
cmp
pop
push
ret
mov
inc
push
xchg
xor
scas
cmc
sbb
mov
rorb
mov
fdivrl
icebp
sarb
dec
add
jmp
cld
dec
add
test
cmpl
add
xchg
xchg
mov
or
pop
xchg
inc
std
push
test
inc
inc
aam
inc
bound
das
adc
scas
dec
mov
adc
add
arpl
inc
mov
lock
sub
call
cmp
je
xor
add
je
add
push
and
mov
les
mov
add
adc
add
ja
dec
pop
iret
lock
mov
call
clc
inc
cmc
sub
add
inc
mov
andb
adc
pop
dec
sti
mov
jb
add
adc
enter
int3
or
repz
stos
lods
dec
dec
adc
mov
push
jno
push
hlt
sarb
jo
add
jae
enter
stos
mov
sub
cmp
ljmp
jne
push
add
daa
push
adcl
in
sbbl
mov
in
clc
sub
add
js
adc
or
jecxz
test
push
aam
and
fadds
dec
cwtl
loop
add
jle
xchg
and
int3
lods
stos
movsl
mov
add
cs
cmp
es
pop
add
and
mov
adc
xor
nop
popf
add
out
inc
xor
pusha
stos
stc
add
sti
sub
sarb
mov
adc
sbb
jne
sbb
mov
mov
fcoml
rolb
sbb
aas
push
pusha
push
or
or
sub
jns
idivb
imull
dec
push
jg
add
xor
cmc
scas
cltd
das
mov
cmc
inc
test
sbb
std
ret
xor
add
aad
scas
repnz
lcall
add
test
sbb
push
xor
cmp
movsb
test
sbbb
sbb
push
dec
jno
pop
ficompl
mov
push
rcrb
cmc
bound
or
inc
insl
shrb
add
dec
movsb
scas
add
sub
cwtl
imul
add
pop
lds
call
add
movsb
orb
rolb
insb
loop
sbb
jo
add
push
je
movsl
leave
ss
dec
add
inc
xorb
call
cmp
inc
add
addb
sbb
or
mov
testb
mov
call
sahf
test
inc
jno
andl
lea
jo
xchg
pusha
dec
jbe
jg
inc
add
push
pop
fldt
loope
mov
xchg
jo
add
jnp
pop
push
jne
xchg
pop
dec
leave
or
add
cli
mov
mov
add
mov
or
loopne
mov
add
sbb
add
sub
popf
test
sbb
inc
sbb
nop
cmp
mov
push
subb
inc
mov
pop
cs
sbbb
das
mov
ja
push
mov
popf
mov
sbb
sub
pop
cmpsb
movsl
addl
or
call
test
xor
xor
aam
hlt
pop
mov
xor
mov
clc
repnz
inc
cld
cmp
loope
pop
es
jae
add
fidivrs
lock
push
test
popf
add
sarb
add
dec
mov
mov
xchg
ret
mov
fsub
js
adc
sahf
or
adc
mov
or
imul
pop
add
inc
pop
or
in
and
and
les
loopne
call
mov
and
adcl
faddl
jmp
cmc
xchg
xlat
pop
and
lock
xchg
inc
sarl
add
ja
xor
mov
jne
fisttps
shll
and
divb
out
in
hlt
inc
add
adc
leave
mov
or
mov
inc
jne
repz
sahf
add
stc
sbb
cmpb
bsr
xchg
jg
rcl
add
dec
andb
mov
je
inc
mov
faddp
dec
pop
add
push
mov
add
push
jle
jmp
daa
in
dec
pop
cli
cmp
cmp
cmp
add
push
jmp
add
push
sbb
ret
ja
and
lret
iret
adc
not
sub
mov
xor
add
dec
add
add
jb
push
sarb
push
clc
xor
and
cltd
add
cmp
mov
xchg
push
movsb
repz
jle
roll
push
stos
and
cld
cli
adc
cwtl
mov
test
mov
dec
add
lcall
adc
lock
and
lock
push
pushf
add
inc
lcall
stos
sbbb
jl
xor
sub
add
jg
add
out
dec
pop
sbbb
jne
stos
xchg
jo
add
clc
imul
sbb
pop
add
ljmp
push
subps
cs
rorb
xchg
push
inc
dec
call
hlt
or
or
subb
add
rclb
adc
mov
addb
cmp
filds
rorb
add
xchg
data16
cmp
pop
add
mov
loope
jae
jb
sub
sbb
popf
adc
leave
push
jl
call
add
sar
adc
scas
fcomp
pop
ljmp
cli
scas
pop
sbb
xor
inc
pop
or
cmovg
call
add
push
enter
aas
add
adc
loop
nop
lret
push
cwtl
lods
cmp
pusha
stc
jne
dec
loopne
pop
add
adc
xchg
sub
les
and
cmp
adc
add
ja
and
add
mov
add
and
push
hlt
cmpsl
sbb
add
ds
jge
add
subb
dec
les
popf
add
in
jno
divb
jne
jg
add
cs
stos
into
inc
or
mov
mov
ds
test
sbb
jle
aam
pop
add
and
cmp
inc
mov
mov
gs
or
repz
jne
add
mov
leave
pusha
cmp
mov
sbb
addl
add
add
add
inc
iret
mov
sbb
pushl
sub
add
pop
push
pop
add
dec
dec
out
xor
imul
cmp
dec
rol
lock
lret
sbb
cli
lret
add
cmp
cwtl
and
pusha
add
dec
hlt
dec
es
sbb
flds
mov
jae
insl
orb
lahf
fadd
push
add
stos
sahf
arpl
pop
xlat
add
loop
xor
cmp
lock
ret
pop
inc
enter
pop
addr16
mov
add
scas
test
mov
jl
subb
push
add
xlat
mov
inc
add
push
sahf
aam
sub
add
jle
or
fidivrl
add
adc
adc
popa
call
and
mov
inc
mov
mov
add
pop
fwait
mov
jno
add
mov
pop
or
add
dec
lock
cmp
jo
add
sarl
sub
sbb
jnp
add
enter
add
inc
xchg
jno
inc
pop
push
mov
jbe
decl
push
repnz
dec
cmp
add
test
leave
out
mov
jg
dec
xor
scas
add
or
and
push
inc
mov
int
push
mov
clc
push
add
xor
mov
rcr
lret
xchg
ds
roll
adc
jge
mov
pop
mov
sub
push
pop
andb
shlb
add
in
orl
mov
xchg
push
and
add
movsl
xlat
je
add
test
cmp
ret
mov
roll
push
fcoml
mov
int3
add
xchg
cmpsb
sbbl
out
xor
stos
add
sbbb
xor
add
or
add
cmp
cld
or
stc
bound
dec
mov
push
xchg
je
andb
cli
fnstenv
sbb
loopne
mov
les
mov
xchg
andl
pop
mov
jne
adc
sbb
and
jmp
fmull
lea
xor
inc
or
pop
dec
push
cmp
mov
xor
jne
pop
xor
pop
mov
nop
ljmp
pushf
add
xchg
jp
push
int
xor
out
ret
adc
push
test
push
in
jp
add
sbb
sbb
cmp
inc
dec
je
or
test
ds
jno
cmp
pop
in
sbb
and
add
addl
cld
jl
lods
jo
lock
push
jmp
test
dec
jne
outsl
ljmp
pop
cmc
cmp
addb
pop
fadd
jmp
je
mov
jnp
xchg
fsts
enter
adc
jl
add
pop
add
jg
clc
jge
push
cwtl
jae
dec
ja
or
xor
push
sbb
add
jae
movsl
outsl
stos
xchg
clc
push
jne
pop
add
fdivs
fdiv
dec
pop
jns
add
jmp
cld
push
nop
jno
add
pop
stos
out
cmp
mov
lock
std
cmp
add
mov
mov
adc
subb
xor
dec
inc
sub
inc
add
push
insb
pusha
dec
adcb
mov
sti
add
pop
leave
add
test
add
inc
test
dec
jne
daa
add
adc
popa
add
jmp
jo
lcall
lods
xlat
fwait
add
aad
jge
rol
pop
xchg
dec
jne
lods
les
fldenv
popf
pop
roll
or
mov
or
pop
pop
jno
rol
les
mov
push
or
or
in
rcr
xchg
fcoms
lods
shll
cli
mov
mov
mov
stc
les
add
in
out
faddl
decl
pop
stc
add
into
sub
add
inc
int3
jno
pushf
sub
add
ret
or
ja
add
adc
adc
callw
add
pop
cmp
je
add
ljmp
add
dec
mov
ret
xlat
xchg
cmp
addb
repnz
or
add
outsb
mov
xor
mov
xchg
dec
hlt
mov
movsl
mov
dec
add
xor
mov
mov
dec
mov
adc
xchg
add
data16
dec
or
mov
jae
push
addr16
add
cmpl
ja
stos
add
lcall
es
add
and
push
add
mov
or
pop
cld
fs
ret
mov
sub
add
idivl
das
push
inc
pop
add
and
imul
jge
push
dec
sti
pusha
cmp
pop
sub
scas
adc
jge
mov
cmpsl
add
inc
iret
pop
bound
call
lret
and
addb
add
jg
push
add
push
mov
inc
pop
dec
jmp
aaa
out
leave
push
jl
add
pop
std
xchg
js
add
lret
inc
cmpsb
movsl
adc
or
add
push
jno
pop
adc
loope
cmp
faddl
fcoms
in
cld
in
repnz
xchg
dec
cmp
adc
jne
jle
push
stos
aam
lcall
inc
andl
sub
add
div
adc
subb
xchg
pop
add
loopne
fdivrl
inc
stos
cs
add
jns
and
data16
clc
mov
fdiv
mov
mov
cmp
push
outsb
loopne
adc
jecxz
shlb
or
rcrl
fwait
or
les
mov
jge
mov
nop
loop
inc
fwait
pop
mov
xor
or
cmpl
xchg
adc
adc
inc
mov
mov
or
stos
stos
sbb
ficomps
loopne
loope
cmp
xchg
jne
outsb
std
and
mov
in
pop
in
mov
ja
add
fsubs
add
pop
or
jb
add
xchg
adc
mov
leave
xlat
xchg
dec
jb
in
outsl
es
and
sbb
mov
das
add
add
les
test
sbb
ss
xor
adc
in
into
add
jecxz
push
or
and
push
xchg
in
pop
lahf
add
cmp
sldt
push
inc
popf
pop
push
call
xchg
sbb
pusha
add
dec
add
mov
rorb
lahf
jge
add
push
arpl
sbb
out
imul
lcall
add
icebp
es
push
add
cmp
or
sbbb
aam
cmp
rclb
sub
cmp
jne
push
mov
jbe
sbb
mov
repz
add
ljmp
popl
add
cmp
pop
lret
cmpsl
clc
test
push
add
push
ret
test
mov
aam
loope
fsubrs
or
cmp
scas
enter
loope
adcb
cmc
or
pushw
fs
cmp
icebp
add
loope
test
dec
cmc
add
cltd
popf
jne
add
mov
add
les
add
xor
add
dec
loopne
fsubrl
mov
fwait
adcb
movsb
ds
push
xor
mov
scas
inc
daa
add
aad
ja
cld
jge
add
and
xor
sbb
and
adc
add
jae
add
push
cwtl
jp
pop
add
sub
gs
xchg
or
xor
jmp
xor
clc
sub
adc
faddl
push
lock
imul
mov
in
mov
xorb
das
or
adc
pusha
xchg
adc
lock
out
add
arpl
je
das
repnz
rolb
pushf
aas
cli
roll
lea
adcb
not
sub
das
pop
fidivrl
std
adc
roll
pop
dec
aas
movsb
rcrb
imul
jecxz
push
sub
nopl
jl
lahf
ret
sahf
sar
out
hlt
jle
add
adc
add
in
inc
add
mov
cmp
sub
mov
mov
aad
adc
jb
sbb
push
jo
add
test
cmp
add
aad
adc
loop
jne
add
cmpsl
inc
popf
ret
test
imul
add
mov
stos
add
and
pop
out
cmp
add
xchg
or
add
mov
sub
inc
mov
test
push
add
outsl
mov
enter
cmpsl
incb
inc
pop
and
insb
sub
lods
add
mov
push
sub
mov
push
int3
lods
add
cmp
daa
fildl
push
dec
jg
fwait
mov
mov
pushf
scas
orl
mov
lahf
or
mov
and
sub
or
test
add
adc
mov
inc
push
pop
mov
mov
daa
or
cmpsb
lahf
dec
jle
mov
rclb
cmp
jl
add
daa
adc
imul
cmp
sub
mov
push
and
data16
icebp
add
out
push
inc
cmp
add
lds
add
dec
fildll
enter
fisttpll
push
mov
stos
and
andl
and
and
mov
push
add
and
cmp
sbb
add
adc
mov
xchg
cld
push
lahf
nop
pop
into
adc
add
push
das
mov
adc
add
js
xchg
or
mov
and
xor
mov
pop
cld
or
pop
pop
lea
xor
aad
imul
or
sbb
test
je
rcrb
pop
test
incb
add
dec
xchg
mov
push
add
nop
cmpb
add
ret
pop
xchg
aad
pusha
sub
jmp
sbb
inc
pop
inc
call
xor
test
mov
push
scas
fadds
stc
arpl
add
cmpl
add
lahf
rorl
out
ds
add
add
push
mov
test
and
pop
mov
test
mov
add
xor
enter
je
xchg
or
push
fs
lcall
in
xor
add
fsts
adc
cs
push
sbb
dec
in
add
add
dec
xor
jae
cld
lret
sub
jmp
pop
fdivrl
mov
xlat
mov
add
cmp
add
cmp
sub
lcall
add
inc
test
push
xchg
out
scas
add
adc
dec
cmp
aaa
push
test
inc
xchg
jge
add
or
sub
ja
jmp
adc
add
pop
fstpt
sbbb
out
lret
push
mov
add
mov
adc
dec
enter
inc
add
in
out
lods
clc
mov
or
add
sub
jae
push
xor
outsl
add
es
push
and
sbb
clc
cwtl
rclb
ja
add
mov
mov
add
mov
lea
incl
push
mov
enterw
mov
add
push
xor
push
add
add
in
mov
push
add
mov
ror
test
call
and
nop
les
or
cmp
pop
add
adc
ret
insb
loopne
les
mov
sub
push
cmp
add
jbe
enter
sub
add
lock
stos
inc
adcb
adc
and
and
add
shlb
add
push
add
dec
cmp
cmp
adc
stos
mov
test
add
and
and
mov
jno
add
sub
test
popf
cmpb
mov
push
mov
test
call
add
fidivl
xorb
pop
mov
mov
push
and
push
dec
add
scas
stc
loope
aaa
or
xchg
movb
inc
or
mov
inc
adc
xchg
gs
pop
dec
hlt
mov
testl
jmp
std
ret
jg
hlt
ds
add
call
imul
xor
lcall
add
add
and
mov
push
add
push
sub
lcall
inc
call
sbb
jns
add
jl
xor
add
ja
add
out
fsubr
or
sub
pop
ret
orl
lock
sarb
xor
mov
lods
push
push
add
lea
pop
adc
mov
push
imul
pop
pop
inc
jne
in
add
loop
shlb
add
push
xor
cwtl
add
pop
lods
push
std
pop
lock
adc
dec
inc
push
inc
rorl
inc
dec
push
inc
or
nop
adc
add
xor
cmp
shlb
add
cwtl
sub
push
data16
sarb
inc
xchg
add
jmp
enter
cmpsb
pop
adc
cli
add
cltd
ror
out
pop
xor
and
adc
mov
test
inc
test
xchg
push
add
adc
dec
add
enter
js
push
add
outsl
lods
callw
pop
and
push
jae,pn
adc
cld
mov
jbe
add
int
sub
popf
jl
lret
incb
push
dec
leave
add
add
out
xchg
pop
jmp
xor
test
stos
dec
dec
sbb
addl
mov
add
and
push
cld
inc
add
push
sbb
pop
nop
enter
mov
stos
shrb
lea
add
cmp
add
into
inc
add
dec
andl
dec
jo
sbb
jg
pushf
rcll
mov
jb
aam
push
push
push
or
test
cmp
inc
add
out
adc
push
js
sbb
shlb
xor
das
add
or
fistl
xchg
loopne
add
jl
rolb
sub
sbb
mov
and
jb
movsb
test
fcomi
mov
repz
shrb
jo
xchg
add
shll
add
xor
into
js
rolb
add
mov
in
cmp
rcrb
dec
sbb
add
xchg
xchg
das
add
cmp
jno
add
jecxz
sub
rolb
popl
add
pop
lods
pop
mov
scas
cmp
pop
push
mov
inc
sbb
ljmp
adc
aas
cmp
scas
jne
addl
jns
mov
and
add
test
icebp
out
mulb
ds
add
es
or
push
test
in
jg
mov
fwait
test
xchg
sbb
add
pusha
mov
jg
int
int3
dec
lcall
sti
and
adc
push
push
xorb
es
in
add
dec
stos
cwtl
repz
adc
add
aaa
enter
xor
insl
loopne
test
add
mov
or
scas
add
mov
cmpsl
jb
clc
fcoml
or
xor
lahf
pop
cmp
pcmpeqb
jo
pop
pop
add
mov
iret
inc
or
sti
out
clc
lahf
sahf
xor
cmp
and
mov
xchg
pop
or
mov
cmpsb
mov
push
cli
cmp
or
pushf
add
inc
or
addr16
pop
push
mov
push
cmc
lock
dec
dec
xor
mov
in
cmp
xchg
sbbb
pop
adc
add
sub
mov
add
mov
cwtl
repnz
adc
or
pushl
sbb
sub
push
hlt
add
iret
ja
add
dec
scas
cmpsb
add
xor
in
ret
add
add
pop
jns
icebp
add
inc
add
add
mov
daa
mov
xor
gs
subb
jle
dec
jl
xor
add
inc
xchg
addr16
sbb
lea
or
dec
je
jecxz
and
jo
test
add
call
pop
in
push
pusha
je
add
mov
add
pop
jmp
popa
sbb
shlb
pop
mov
sbb
cmp
les
sub
mov
stos
test
cli
sbb
sarb
movsl
push
add
push
shr
loopne
add
fsubr
shlb
add
fnsave
jo
add
xor
sub
pop
add
sbb
mov
add
rolb
xor
pusha
add
andb
insl
into
pop
pop
clc
xchg
add
jecxz
in
push
aad
xchg
add
sbb
loopne
clc
push
push
add
push
mov
pusha
push
pop
and
cli
cmpsl
mov
mov
xlat
pop
xchg
jo
or
js
andl
sti
subb
jo
push
add
out
inc
push
dec
jns
repz
add
inc
xor
mov
ljmp
push
push
xchg
push
mov
pop
icebp
or
jae
mov
mov
push
lods
add
pop
aam
stc
add
pop
scas
add
lock
clc
adc
push
push
add
mov
and
loopne
add
push
cmp
pop
add
add
lods
mov
add
in
pop
jo
add
leave
jns
ja
into
ret
fisttps
add
cmpb
pop
add
mov
jge
add
mov
enter
mov
adc
jo
incb
pop
mov
lea
fistpl
sub
sbb
adc
pop
add
push
ret
jbe
cmpsb
jns
lds
and
or
imul
add
nop
arpl
mov
rol
push
nop
fisubs
fidivs
testb
or
test
stos
xor
fistl
add
dec
mov
mov
pop
sub
add
or
jl
iret
fs
mov
dec
pop
sti
xor
or
and
sub
push
fcomps
shlb
hlt
pop
mov
repnz
push
cld
and
adc
mov
nop
cmp
fisttpl
add
je
js
lods
cmp
call
jge
jne
jp
ss
mov
add
out
sbb
cmpb
loopne
mov
add
push
add
jne
in
sub
rol
sbb
fadds
lock
enter
add
pop
repz
add
test
lods
movsl
xchg
pop
push
rcrl
sub
push
loopne
jbe
out
ss
sbb
movsl
sahf
inc
adc
cmp
push
add
add
pop
enter
jmp
not
rolb
pop
lret
jp
push
sahf
add
hlt
andl
sbb
mov
ss
add
add
adc
add
mov
push
cmp
loop
orb
ds
popa
xchg
arpl
push
loopne
jns
pop
add
adc
sbb
pushf
lahf
add
lock
mov
cmpsb
push
cmc
cwtl
es
aam
or
nop
add
lahf
or
loopne
add
mov
inc
dec
adc
in
mov
and
sub
jmp
iret
adc
inc
in
sti
pop
push
pop
push
add
jnp
nop
add
call
push
add
add
sbb
lods
add
xor
out
mov
fstpl
daa
push
cs
shlb
insl
or
jmp
sbb
stos
lods
add
sbb
icebp
mov
cmc
bound
jp
add
fidivl
jo
add
lea
mov
add
push
out
shr
add
std
push
or
add
js
mov
adc
inc
mov
addl
mov
aaa
pop
push
cmp
jo
add
out
in
loop
pop
xor
cli
add
cmc
sbb
inc
and
shrb
lock
mov
or
xchg
mov
add
out
push
and
pop
xor
mov
rol
or
add
inc
mov
jns
or
jle
mov
adc
or
push
add
ffree
outsl
push
jnp
sbb
into
jb
rcrb
fstps
inc
cmpsl
int3
add
mov
sarl
mov
in
dec
in
scas
pop
clc
cld
mov
pop
mov
insb
cmp
add
sub
dec
popf
xchg
sbb
xchg
cmp
int
add
or
pop
scas
imul
or
pop
ret
mov
add
xchg
bound
jge
add
in
xchg
das
add
pop
add
icebp
ret
lock
and
push
add
popa
xor
xchg
mov
cmp
sub
dec
or
add
sub
push
adc
jae
bound
jecxz
cmp
xchg
in
and
push
inc
xor
dec
adc
xchg
es
jno
rcll
ret
lock
push
cmp
and
loop
add
or
lods
or
mov
or
mov
jg
add
sahf
jne
push
mov
jae
sti
push
dec
lods
add
jp
or
xchg
das
fadd
or
add
xor
data16
pop
jp
xor
addr16
add
pop
add
pinsrw
pusha
mov
loope
imul
leave
add
adc
ret
pop
pop
pop
call
shl
loop
lods
popf
lds
lods
cwtl
push
add
pop
shlb
sub
add
cmp
stc
adc
sti
add
and
repnz
jp
loope
mov
xchg
mov
mov
add
iret
jmp
add
in
stos
pop
pop
scas
test
dec
add
out
pop
mov
nop
outsl
mov
add
add
movb
sub
fcmovu
and
adc
unpcklps
cmpsl
xchg
lock
pusha
inc
outsl
mov
add
jp
pop
outsb
xchg
pop
jmp
adcl
fnstsw
testb
in
xchg
aad
ja
shrb
rclb
mov
sti
fiaddl
mov
add
int
stos
cmpsl
pop
xchg
add
sarl
popf
add
addr16
repz
test
xchg
sub
jg
lods
and
pop
hlt
outsb
test
mov
ret
test
dec
addl
mov
stc
mov
loopne
dec
and
pusha
fwait
add
add
lock
adc
jbe
pop
xor
mov
cmp
fwait
jbe
ljmp
iret
xlat
inc
sbb
push
ret
sbb
insb
add
data16
out
add
imull
loopne
mov
add
imul
pop
mov
movsb
aam
xor
sbb
push
sbb
cmp
les
outsl
inc
cmp
testl
loopne
adc
pop
incb
adcb
jp
jmp
add
add
out
dec
pop
pop
adc
hlt
mov
mov
add
aad
inc
xlat
pop
pusha
popa
adc
jle
loop
sahf
sbb
adc
push
add
testl
aaa
xor
jo
xchg
xor
dec
sbb
leave
dec
movsb
subb
out
push
and
ret
cli
out
loop
add
xor
rolb
adc
subb
jle
mov
add
mov
mov
ljmp
jecxz
add
jb
or
daa
sbb
or
jge
mov
add
xchg
imul
xor
mov
jl
mov
cltd
pop
xor
add
mov
lcall
popf
shlb
add
incb
push
arpl
mov
inc
pop
pop
sub
loopne
add
dec
jmp
jo
scas
cmp
mov
sbb
sub
fildl
repnz
push
mov
xchg
stos
rolb
scas
and
pop
fs
mov
fidivs
push
push
adc
and
xchg
ja
addb
loop
pushl
adc
pop
cs
in
cmp
or
arpl
cmp
out
xor
add
add
sbb
dec
add
out
aad
push
subl
daa
inc
leave
les
mov
pop
aad
add
dec
sbb
cmpsl
mov
out
adc
push
jne
mov
add
les
mov
test
cmpsb
das
mov
jne
jge
in
add
jle
dec
stos
call
cmp
fs
mov
mov
add
jb
adc
pop
adc
orl
inc
sub
and
in
js
pop
out
sbb
mov
jb
data16
cmp
push
and
add
and
ja
and
jnp
inc
je
sbb
jl
in
inc
inc
mov
fwait
shr
pop
inc
loope
add
test
pusha
mov
jge
cmp
lret
add
cmp
or
pop
clc
cmpsl
add
std
push
add
add
popf
arpl
and
icebp
or
cmpb
pop
xor
adc
inc
adc
jp
push
pop
scas
mov
add
mov
sbb
sub
push
xor
inc
and
xchg
pop
adc
add
aad
cmpb
add
add
jns
out
scas
mov
in
pushf
or
add
stos
sbb
mov
push
dec
dec
pusha
push
daa
cmp
sbb
and
loopne
sub
adc
adc
movsb
dec
xchg
add
in
xchg
lds
add
test
nop
add
das
test
insb
push
jae
add
pop
cmpsl
fadds
test
xor
jmp
adc
aaa
js
inc
xor
sbb
insl
ds
mov
das
mov
or
push
jns
add
sub
lods
sub
cmp
xor
add
ret
popa
add
push
mov
outsl
aas
inc
sub
clc
cmp
xor
seta
test
push
out
int3
jno
add
xchg
cmc
inc
stc
add
lods
sbb
push
xchg
rorb
cwtl
lret
fsubl
adc
add
iret
or
in
jb
push
mov
adc
add
dec
mov
or
pop
loopne
cmp
add
mov
xor
add
cmp
je
adc
push
jmp
jnp
int3
add
or
pop
cs
jmp
push
lea
call
out
add
popf
bound
mov
loopne
or
mov
shll
and
sti
dec
shlb
push
jmp
js
mov
xor
or
lahf
add
push
push
jbe
dec
jne
outsb
cmp
test
and
inc
pop
xor
dec
mov
mov
cwtl
add
les
enter
ljmp
in
mov
inc
sbb
test
shl
bound
pop
aas
mov
adc
cmp
xor
pop
in
in
push
push
std
add
add
dec
push
sbbb
or
inc
adc
dec
dec
sbbb
movsb
push
adc
or
inc
or
dec
or
roll
scas
pop
aam
push
add
mov
enter
jle
push
sbb
push
push
mov
pop
mov
cwtl
or
push
pop
adc
cltd
add
jb
xchg
jo
dec
imul
mov
popf
add
nop
inc
and
sbb
sub
cmp
adc
add
in
daa
or
push
xchg
or
das
ret
add
xlat
popf
lret
movl
xchg
or
cld
popl
add
add
adcl
idivl
sub
and
add
jmp
jae
add
pop
mov
fucomi
in
jo
ds
cmp
add
or
or
push
lea
mov
sub
and
adc
mov
addl
outsl
sub
popa
sub
je
add
and
fisubrs
or
scas
add
xor
lret
pop
movsl
add
mov
adc
dec
cs
sub
jecxz
mov
fstps
out
jnp
das
pop
add
mov
pop
adc
mov
icebp
inc
mov
dec
jnp
cmp
pop
push
jmp
cltd
mov
or
scas
jo
add
loopne
pop
lods
xchg
loopne
or
roll
and
stos
jg
roll
andb
add
sbb
hlt
mov
shlb
loopne
add
std
xchg
add
add
popf
iret
or
loop
sbb
dec
add
pop
and
sahf
mov
inc
cmp
and
jp
aas
stos
push
insl
addr16
jle
add
push
cmp
movsl
or
fidivrl
sub
jge
mov
scas
shl
subb
add
cld
jnp
je
cmp
and
pushf
int
add
inc
inc
xchg
xchg
shlb
stos
test
push
hlt
add
clc
or
jo
add
aam
xchg
dec
jb
and
pop
cwtl
xlat
pop
jecxz
jg
das
add
cwtl
push
cld
mul
insl
add
or
and
push
push
sbb
mov
or
scas
loop
and
add
sbb
lods
lods
add
push
hlt
outsl
add
add
jo
add
int
test
call
addb
inc
out
adc
xor
les
test
mov
xchg
jo
add
pusha
out
adc
popf
add
add
push
adc
cmp
mov
addl
ja
scas
or
add
insb
sub
loope
imul
add
lods
mov
and
pop
mov
add
shlb
fcoml
sbb
mov
jge
mov
jl
jmp
mov
lods
arpl
jp,pn
adc
mov
shll
aas
orb
inc
std
push
add
adc
add
xchg
loopne
pop
mov
popf
pushf
lret
xor
lcall
push
dec
add
or
pop
sbb
cwtl
repnz
mov
movsb
sub
enter
push
add
adc
or
xor
ret
add
cmc
leave
push
addb
mov
adc
mov
cmpsb
cwtl
or
jne
shll
rol
add
adc
push
cld
leave
pop
roll
jge
inc
daa
cmpsb
negl
fcomps
xchg
adc
out
sbb
out
cmp
shrl
push
mov
adc
aam
add
push
lahf
stos
add
pushf
jb
push
pop
add
cmp
xchg
mov
mov
add
cmp
mov
cmp
arpl
insb
loopne
mov
sbbb
out
dec
adc
inc
faddl
add
inc
mov
jge
xlat
add
bnd
data16
add
or
mov
adc
adc
scas
add
dec
in
movsl
pushl
in
mov
or
add
mov
in
in
xchg
iret
or
aad
dec
gs
mov
lods
dec
xchg
and
mov
jl
imul
movsl
or
jg
lods
cmpsb
cmp
sbb
jne
mov
xor
add
add
daa
out
js
les
cmp
jno
push
add
xor
clc
and
mull
add
mov
mov
jmp
pop
sbb
adc
and
loop
les
push
or
outsl
shlb
mov
sub
xor
pop
fsubrs
aam
xor
call
js
jb
push
fcomi
mov
push
add
or
and
add
test
cmp
mov
ret
pop
popf
inc
popf
int
and
adc
add
sub
icebp
xor
pop
imul
in
addb
xor
or
es
sub
fwait
add
push
sub
inc
xchg
add
fnsave
addb
in
adc
repz
loop
mov
test
pop
mov
pop
popa
das
push
pushl
stos
sbb
add
mov
cmp
cvtdq2ps
pop
ficomps
aaa
adc
arpl
shrb
inc
ja
dec
pusha
and
stos
pop
add
push
pop
push
dec
mov
add
cmpb
add
pop
stos
inc
add
popa
add
test
mov
movsb
and
sbb
pop
mov
push
pop
adc
push
sbb
dec
dec
pop
sbb
add
mov
leave
pop
and
add
xchg
mov
dec
lcall
enter
fwait
pop
ret
sti
gs
adc
dec
call
mov
sbb
add
xchg
in
sbb
push
shrb
jge
mov
movups
dec
push
sbb
ss
cmpsl
add
mov
push
xchg
add
fbld
push
lock
push
and
sub
nop
sub
sbb
add
adc
mov
sub
or
add
jbe
push
add
mov
adcl
mov
add
jns
mov
add
cld
pop
sub
xchg
xchg
mov
scas
add
stos
add
pop
outsl
movsb
aaa
psubsb
dec
jmp
pop
push
sbb
add
jmp
push
push
add
or
add
cld
pusha
cli
xchg
add
sbb
add
adc
shlb
jnp
dec
out
push
push
mov
leave
cmpsl
insb
add
popf
dec
testb
adc
rcll
mov
rcrb
add
dec
leave
test
out
jne
in
add
pusha
lea
push
and
iret
test
dec
or
add
xchg
addb
mov
add
adc
sbb
sub
pusha
xchg
inc
add
jo
mov
dec
add
dec
add
adc
adc
mov
adc
or
push
pop
jo
add
add
push
mov
push
cmp
jb
push
add
mov
shrb
mov
pop
lods
mov
das
inc
or
add
and
loopne
addb
mov
das
mov
shll
and
daa
add
sub
shr
add
loop
lret
and
sbb
arpl
pop
pop
jbe
mov
ret
loope
test
iret
loop
aam
int3
pop
andb
add
les
inc
push
sub
cwtl
adc
push
mov
and
lahf
into
mov
add
lds
cmp
out
mov
and
jbe
xor
mov
or
mov
pop
mov
sbb
or
inc
inc
add
lds
add
mov
sub
add
inc
ret
adc
adc
add
lea
push
adcb
xor
rorl
add
add
sbb
les
xchg
js
pop
xor
inc
push
pop
cmp
ret
addl
ds
addl
decb
ficomps
out
sbb
add
and
add
add
test
xchg
add
dec
dec
mov
add
jmp
push
add
and
and
repz
sbb
push
inc
dec
scas
lds
aam
fwait
xchg
cwtl
add
push
mov
sti
cmp
add
rcrb
imul
fistps
loop
inc
rcrb
cmpb
and
lret
add
cmp
add
loop
lea
and
cmp
or
xor
fs
scas
and
add
cmovle
or
xor
inc
mov
pusha
push
sti
in
dec
imul
push
shl
jge
add
or
push
mov
ret
mov
not
cmp
stc
add
jae
daa
addr16
punpckldq
lret
cltd
sarb
and
aam
andb
pop
in
enter
lock
fimuls
shr
mov
inc
sbb
or
sub
add
xchg
pop
addr16
add
pop
stos
mov
and
xor
or
pop
mov
inc
or
cs
mov
test
cli
add
mov
ret
int3
out
call
add
mov
pop
test
pop
mov
add
lcall
clc
push
mov
out
and
popa
roll
jecxz
into
jg
xchg
cmp
dec
out
xchg
shll
add
sbb
mov
lea
or
jb
add
and
inc
rolb
dec
add
add
jmp
sbb
push
mov
insl
add
dec
cmp
cmp
inc
or
outsl
push
add
mov
push
add
dec
clc
pop
movsb
add
adc
lcall
push
daa
repz
adc
arpl
push
add
int
mov
leave
test
xor
add
lret
push
stos
add
add
mov
popf
add
push
add
mov
repz
sub
pop
add
xchg
leave
or
sbb
ret
insb
adc
mov
sub
inc
push
mov
in
jg
loopne
sets
xor
inc
jmp
jne
push
decl
je
mov
jle
add
push
add
dec
and
adc
jmp
add
adc
sub
pop
pop
push
or
add
loop
movb
pop
sub
inc
or
mov
rcrb
jae
add
push
push
stos
mov
mov
push
lock
and
lock
int
push
inc
and
out
shlb
add
cmpb
or
push
orb
pop
movsb
push
sbb
gs
rorb
aas
add
dec
jne
imull
inc
push
inc
call
pop
nop
pop
test
or
pop
mov
sub
dec
mov
mov
push
mov
popa
sub
inc
hlt
std
add
push
dec
cltd
sbb
cmp
inc
or
add
cmpsl
loop
and
fs
or
rorb
lock
pop
inc
add
call
shr
lea
pop
outsb
mov
addps
mov
lods
inc
add
or
cwtl
pusha
jmp
xor
and
int3
cs
ss
xchg
sub
test
or
hlt
out
fsubl
xor
jle
sub
ror
xchg
aam
or
fdivs
in
insl
movsb
xchg
add
push
xor
or
adcb
add
mov
pushf
and
xchg
ds
sbb
or
cli
je
cmp
jb
add
sub
pop
pop
mov
push
add
adc
loop
data16
inc
mov
dec
add
xor
adcl
xlat
push
push
xchg
pusha
orb
inc
xchg
jo
enter
shr
or
inc
or
xchg
mov
add
negb
adc
add
xorl
cmc
sbb
add
push
fcmovnbe
mov
cld
flds
push
adc
fdiv
add
jae
mov
ret
loop
mov
jmp
sbb
enter
xchg
pop
mov
pop
push
in
add
bound
enter
inc
lea
xchg
jae
out
push
inc
add
or
loop
and
cwtl
jnp
xchg
or
push
adc
in
pop
into
cld
rorb
and
sub
add
std
xor
loopne
fadds
adc
movsl
lcall
add
mov
push
jbe
xor
pop
add
arpl
sub
pop
fstpl
fwait
push
lahf
roll
ja
pop
ret
add
loop
push
adc
ja
add
lcall
cmp
pop
jl
dec
jo
jge
and
addb
scas
sub
add
and
clc
or
cmpb
pop
subb
cmp
push
fs
add
and
dec
pop
mov
sbb
rcrb
js
mov
shlb
xorb
xor
lds
lret
add
lret
sbbl
pop
xorb
negb
inc
test
mov
pusha
jno
mov
cmpsl
enter
and
add
inc
fs
or
cltd
test
push
mov
adc
loopne
push
or
enter
js
pop
push
fnstenv
add
adc
stc
pop
xor
pop
pusha
mov
lock
cmpb
push
mov
adc
and
arpl
fs
inc
lods
or
mov
and
xor
xor
ret
cmpsl
add
mov
mov
loopne
and
sub
add
xor
dec
push
sbb
dec
add
adc
pop
nop
add
mov
orb
and
inc
mov
mov
add
sbb
sbb
add
mov
insb
xlat
and
cmp
add
imul
aam
cmp
cld
in
jmp
add
sub
sarb
mov
dec
add
inc
aam
rcrb
adc
mov
cld
dec
lea
hlt
xlat
and
jmp
xchg
jns
stc
and
xchg
sahf
pop
lea
add
fmul
xor
xor
jle
paddusb
add
cmp
adc
rcr
or
test
xor
xor
enter
inc
and
test
movsb
andb
add
mov
pop
jns
add
or
mov
or
int
aam
mov
shlb
loope
xchg
push
inc
sbb
or
int3
pop
or
or
xor
sbb
mov
dec
add
aam
and
pop
lods
add
rorb
sbb
fimull
inc
adc
mov
sbb
or
mov
rclb
outsb
je
insl
gs
jb
loop
out
addl
clc
ljmp
inc
sbb
inc
mov
jg
out
push
and
in
or
pop
mov
or
xor
lods
adc
cwtl
jo
pop
add
or
ljmp
aad
clc
xor
pop
jo
sbb
or
pop
add
add
lock
outsb
clc
pop
sbb
xor
adc
adc
xor
pop
mov
outsl
pusha
outsl
push
arpl
mov
std
test
mov
mov
sar
fdivr
loopne
call
mov
adc
sbb
add
mov
and
push
pop
or
mov
andb
inc
rcrb
in
jno
push
xor
inc
imul
mov
xor
adc
cld
jno
data16
mov
outsb
jns
add
mov
inc
dec
out
stc
mov
cmpb
hlt
push
add
inc
dec
cmp
add
arpl
push
insb
insl
aam
jno
jae
je
js
jp
add
popa
imul
adc
clc
push
sbb
xchg
insb
and
lcall
jmp
nop
test
xor
cwtl
mov
sub
xchg
das
add
dec
jmp
xor
dec
adc
fsubl
ret
lock
or
add
call
pop
or
int3
jo
into
shrb
push
sub
je
ljmp
mov
aaa
add
dec
loopne
hlt
pop
cmp
jmp
xchg
add
and
js
add
push
pop
fwait
jo
push
dec
push
pop
pop
sbb
dec
rolb
jl
add
aas
add
stc
movsb
aas
and
sbbb
sub
or
mov
pusha
shrl
ret
call
aam
and
xchg
add
rol
incl
add
jns
add
cmpb
es
popl
sbb
add
sbb
push
add
aam
inc
aad
inc
add
mov
incl
pop
nop
dec
int
add
subb
add
ljmp
mov
inc
push
stos
jnp
add
dec
sbb
pushf
sbb
xor
pusha
repnz
jo
rcl
pop
add
lds
add
out
or
add
or
push
es
inc
shlb
jl
xor
xor
jns
add
and
lcall
popf
in
or
clc
sahf
add
lahf
xor
mov
cmpsb
mov
sbb
push
cmpsl
adc
scas
inc
pop
std
add
add
jae
sub
call
sbb
xor
pop
nop
loop
jp
test
mov
or
xor
pop
cmp
add
add
repnz
mov
bound
enter
je
pop
roll
add
add
mov
in
or
mov
adcb
and
jle
pop
pushf
rolb
inc
mov
lods
rcrb
pop
push
hlt
add
fs
lock
ds
mov
inc
adc
sbb
pusha
mov
sahf
mov
daa
cltd
add
inc
pushf
movsb
inc
loopne
dec
mov
add
js
cmp
cmp
int3
fs
pusha
pop
pop
xor
or
pshufw
inc
sbb
dec
pop
shl
in
movsl
jo
cmp
and
push
iret
cld
mov
dec
enter
addr16
ret
jns
out
rcll
cwtl
xchg
repz
jo
xchg
pusha
xor
adc
cmp
fs
int3
sub
sub
xchg
addr16
jl
and
sahf
cwtl
bound
stos
shlb
jl
lock
loope
xlat
rcrb
jmp
mov
or
sub
jns
fsub
nop
sahf
fmul
cmp
adc
jl
add
add
push
hlt
pop
or
dec
dec
in
xor
bound
xor
xchg
mov
add
cltd
adc
repnz
lcall
pop
add
mov
lods
add
rclb
mov
cmp
add
pusha
push
add
add
xchg
add
sbb
add
adc
out
cli
aam
icebp
cs
add
ds
mov
adc
and
dec
clc
fiaddl
pushf
xorb
mov
and
jl
mov
mov
cli
test
cli
mov
ljmp
push
xor
adc
pushf
xchg
lods
and
stc
mov
int
in
xchg
pop
add
dec
xor
outsb
orb
mov
out
into
loopne
inc
call
push
xor
cmp
jo
and
pop
mov
lcall
mov
in
cld
push
and
xchg
je
movsb
mov
jo
testb
stos
xor
int3
add
dec
call
hlt
or
je
mov
dec
sbbb
mov
dec
mov
add
xchg
adc
cltd
xor
aas
or
cmp
inc
jb
outsb
mov
sub
adc
add
sbb
sub
mov
add
jbe
xchg
negl
mov
fwait
adc
and
push
inc
inc
push
adc
xchg
adc
in
and
shl
or
movsl
pop
and
and
mov
out
clc
adc
stc
outsl
adcl
jnp
push
jb
cwtl
add
dec
mov
adc
add
push
mov
jl
add
xchg
bound
je
add
or
sbb
es
add
inc
xor
hlt
add
push
and
dec
insb
xchg
jbe
push
add
gs
shl
add
cs
mov
lahf
inc
cmp
add
outsb
jae
add
or
fs
push
add
fbstp
xchg
imul
mov
out
mov
int3
xor
cmp
pop
add
sbb
dec
fldt
and
jp
cmp
jne
jb
jne
inc
in
jecxz
push
push
sub
pusha
outsl
arpl
push
hlt
sbb
in
sbb
push
sub
push
gs
jns
adc
fs
mov
push
pop
insb
add
inc
jns
add
or
cs
sub
je
fisubrl
inc
cmpsb
sbb
jns
ret
sahf
jmp
cmp
bound
rcll
js
and
cltd
pop
sbb
rclb
dec
add
outsl
inc
and
push
add
ds
add
arpl
std
pop
xchg
dec
popa
outsb
jl
inc
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
add
mov
aas
push
push
cmp
and
push
je
or
or
dec
adc
inc
pop
dec
dec
ja
add
movb
and
stos
sbb
push
faddl
xor
or
cmp
add
jp
dec
inc
jns
repz
insl
push
add
je
cmpsl
loop
jo
inc
add
fldpi
or
dec
add
adc
jb
add
and
inc
cli
lcall
test
dec
dec
incl
popa
pop
inc
inc
outsl
js
dec
cmc
xor
dec
fildl
xchg
jo
loopne
or
add
and
in
sub
loopne
shlb
push
mov
insl
and
mov
add
fidivl
xchg
jp
pop
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
adc
jbe
xor
daa
push
neg
add
loop
push
int
and
cmovge
dec
push
inc
lea
jl
xor
movsb
mov
stos
adc
inc
outsl
sbb
push
adc
add
xorb
icebp
jne
add
xchg
xor
mov
dec
clc
int
or
scas
add
cmp
sbb
add
imul
in
loopne
enter
push
popa
pop
add
inc
xchg
xorb
outsl
fnstcw
xor
fsubrs
or
pop
add
jno
lret
jns
push
cwtl
inc
pop
jne
add
cmp
mov
inc
aam
outsl
sub
repnz
cwtl
mov
std
rcrl
dec
cmp
sub
cs
push
mov
push
ja
add
shl
cmpsb
sub
xor
lock
test
jns
inc
sbb
jae
add
dec
xor
add
cmp
add
mov
jbe
xchg
pop
add
lcall
call
jb
sarb
pop
testb
inc
stos
xchg
inc
daa
jae
mov
test
popa
arpl
es
inc
pop
mov
stos
cmovns
test
mov
sub
cli
aad
fsubrs
mov
sbb
push
jo
push
cmpsb
add
outsb
and
imul
add
cmovg
subb
outsl
adc
add
push
or
arpl
dec
aam
shlb
pop
add
adc
inc
add
mov
and
add
fs
jge
add
stos
pop
enter
outsl
pushf
shrb
or
sub
ret
push
sahf
inc
mov
dec
push
mov
cli
and
jo
rcll
dec
lea
daa
sub
push
add
xchg
fwait
push
pop
pop
or
dec
push
adc
fmuls
jle
fisttpl
andb
arpl
add
lcall
inc
or
arpl
fmul
sbb
mov
addr16
pusha
sub
movsb
and
mov
mov
pop
das
push
pop
xor
hlt
dec
sub
and
cmp
js
dec
jp
inc
jne
addr16
dec
sahf
push
mov
scas
sbb
sbb
cmp
add
push
js
inc
movsb
pop
insb
nop
inc
clc
xchg
hlt
sub
sbb
sub
aaa
and
mov
add
out
out
lods
jecxz
add
mov
loopne
fs
sbb
fsubl
jo
sbb
fldcw
fimuls
fcoml
or
adc
push
test
add
push
add
ljmp
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
call
push
and
es
add
mov
pop
pcmpgtb
jnp
sbb
add
sbb
xor
popf
cmp
add
jle
mov
add
xchg
xor
daa
adc
and
cmpb
xchg
out
fwait
je
jbe
js
jp
jl
add
loope
xor
leave
mov
add
xor
das
jbe
js
dec
mov
aas
mov
push
fwait
aaa
mov
xlat
mov
inc
cmp
mov
rolb
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
dec
call
negl
inc
mov
rolb
xor
adc
or
xchg
pop
dec
add
bsr
jecxz
add
xor
lret
xor
in
adc
xchg
add
js
jp
jl
mov
popf
sub
jo
and
pop
and
inc
mov
mov
sahf
aas
xlat
popf
loopne
out
stos
inc
daa
pop
cmp
xorb
cmpsl
xchg
es
inc
xchg
lds
iret
dec
icebp
cmp
pop
ss
leave
push
shrl
fldcw
dec
icebp
adc
pop
fildll
repz
add
add
xor
cmp
push
dec
aaa
subl
xor
lock
les
sbb
cmp
popf
push
test
sahf
stos
ds
cmp
pop
cmp
cmp
aas
cltd
sub
sbb
push
cmp
add
mov
movsl
sbb
or
cmp
outsb
add
shrb
xor
popf
xchg
sbb
xor
mov
cmp
scas
aas
mov
shlb
loopne
cmc
in
or
pop
inc
sub
xor
repnz
dec
je
jbe
js
jp
jl
add
adc
in
call
hlt
sar
out
incb
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
call
lcall
cmp
sub
pop
subb
jb
je
jbe
js
jp
dec
les
aas
jecxz
lock
add
or
add
sub
cmp
scas
cmp
push
cmp
cmp
jb
jp
or
loop
lcall
iret
mov
cmp
cmp
ljmp
aas
or
mov
inc
sub
xor
cmp
repz
cmp
push
cmp
cmp
jb
mov
ja
lret
out
out
out
out
loopne
sti
andl
add
or
xor
xchg
test
sub
dec
out
in
pop
lret
aas
xor
add
cld
js
jp
jl
jle
mov
cwtl
dec
mov
mov
rcrb
call
in
lret
add
je
jbe
js
and
lret
iret
inc
add
dec
cltd
or
and
jo
jl
sbbb
lahf
mov
adc
mov
pop
or
and
and
sub
pusha
xlat
cmp
lahf
inc
pop
int
push
cmp
cmp
jo
sahf
or
mov
cwtl
js
add
shl
in
call
call
or
pop
xor
and
decb
subb
nopl
mov
mov
clc
enter
sar
fsubrp
lock
add
jbe
add
jp
jl
jle
xor
cmp
dec
dec
insb
dec
aas
js
jl
xorb
jecxz
repz
repz
enter
aam
fdiv
fsubl
ret
and
lahf
in
enter
adc
and
sub
xor
popl
out
cmp
cmp
add
andb
je
jbe
js
jp
jl
push
mov
push
in
test
cld
subb
push
cwtl
fs
push
mov
iret
movsb
iret
test
lods
iret
mov
jmp
loopne
shr
adc
daa
or
xchg
inc
push
ret
pop
punpcklbw
je
xchg
fnstenv
push
jl
sub
cmp
or
adc
repz
and
inc
dec
jp
fsubl
jle
push
movsl
ret
jae
shrb
mov
mov
pusha
repnz
add
add
add
jbe
dec
adc
mov
pop
mov
pop
mov
inc
pusha
xchg
insb
jo
je
js
mov
lods
out
out
loopne
fs
cmp
enter
sarb
add
or
adc
sahf
sbb
and
xchg
xor
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
pusha
mov
leave
push
mov
stc
fmuls
mov
iret
in
call
cmp
dec
sub
sub
iret
xor
xor
imul
pop
lcall
xor
dec
divl
in
rorl
pushf
in
mov
js
add
repnz
mov
fs
lock
hlt
popf
clc
add
cmp
jg
inc
roll
dec
xor
push
lock
add
les
imul
xor
add
lret
call
add
mov
sarb
mov
adc
push
mov
loopne
and
add
add
xor
lahf
roll
out
push
xor
pop
cmp
aaa
mov
inc
movb
out
hlt
sar
cld
jb
je
jbe
sti
loope
and
repnz
idiv
cli
stc
clc
pop
cmp
cmp
sbb
pusha
cmp
push
add
cmp
into
rcr
ds
bound
mov
mov
nop
out
call
and
testb
pop
xor
leave
out
fcomps
add
push
cmp
cmp
aas
test
iret
mov
mov
stc
int
rorl
add
cmp
pop
addr16
or
clc
add
sbb
cli
xchg
inc
je
dec
mov
loopne
add
dec
invd
jae
add
dec
testb
push
add
push
cmp
jns
jb,pt
adc
or
lea
unpckhps
rolb
add
daa
add
push
add
cld
and
imul
push
xchg
hlt
mov
mov
mov
dec
add
shll
ljmp
cwtl
cmp
cmp
fstpt
movb
stos
xchg
add
in
call
lock
cmp
jne
add
outsl
cmp
jle
in
jle
daa
add
inc
mov
push
pop
add
add
cmp
add
icebp
pusha
push
xor
pop
in
xor
hlt
sahf
cmp
jmp
rolb
rolb
and
fcos
sub
sbb
add
dec
loopne
and
jmp
add
inc
sbb
pop
xor
rolb
imul
jecxz
repz
jno
or
xor
in
or
dec
jb
push
xchg
dec
leave
cltd
add
stos
fnstcw
aaa
cmp
cmpsb
mov
in
enter
push
xor
mov
outsl
out
cmp
cli
dec
andnps
pusha
shlb
pop
adc
jbe
addl
mov
xor
repz
lock
add
mov
mov
sub
aas
out
pushl
pop
add
mov
iret
ljmp
addb
adc
dec
and
pusha
sub
ds
fs
add
in
repz
adc
leave
xor
inc
cmp
jmp
sub
ror
pusha
or
cmp
sub
inc
lock
lcall
push
bound
jne
add
orl
enter
jmp
fdivrl
in
cld
frstor
xor
mov
pop
cld
lahf
and
xchg
sub
jb
je
jbe
pop
inc
ds
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
sub
je
insb
sub
and
stos
inc
xchg
jmp
cmp
aad
lods
pop
clc
xchg
pop
notb
in
call
rcl
dec
inc
add
or
sbb
hlt
sbb
mov
mov
js
add
mov
out
test
inc
jmp
aas
jb
out
sarl
int3
lahf
loopne
in
in
nop
movsb
hlt
pop
cld
adc
adc
push
add
sub
xor
mov
inc
in
add
push
xchg
jl
into
rcrb
add
pop
cmp
cmp
xchg
mov
mov
hlt
adc
xchg
fldl
pusha
add
cmp
jb
sbb
add
arpl
test
cltd
fdivs
scas
fisubrs
xlat
mov
in
cld
mul
add
cmp
or
push
mov
test
mov
pushf
pop
cmp
cmp
jnp
test
mov
rcl
into
ret
int3
fpatan
push
and
das
mov
pop
inc
add
push
jl
in
push
es
dec
pop
sbb
push
sub
test
stos
rcl
add
sbb
xor
test
push
lods
push
int3
lcall
mov
push
lcall
add
lahf
add
jne
test
pop
ret
js
dec
add
push
cmp
fcomp
add
adc
sub
sbb
xor
sbb
movl
clc
test
pushf
shl
add
out
push
ss
insb
xchg
cmp
sbbl
mov
fwait
repnz
mov
daa
sbb
loope
cmp
sbb
inc
je
insl
lock
push
pop
js
dec
cmp
mov
add
scas
xchg
jne
lcall
mov
je
jbe
pop
xchg
jo
add
and
inc
or
cmp
insb
loopne
addr16
jbe
pop
mov
addl
mov
add
mov
cmpsl
inc
aad
movb
jne
outsb
jmp
inc
cmpb
push
mov
icebp
mov
test
mov
out
test
loopne
fucomp
add
aaa
and
decb
dec
sub
add
push
xchg
xor
lock
stc
jb
add
fcoms
push
or
cmp
or
jnp
and
mov
sub
xor
orb
gs
in
mov
fadds
in
into
adc
pushf
cmp
out
or
dec
aas
addr16
scas
xlat
inc
loop
lock
mov
push
xor
and
dec
jo
or
or
push
push
add
js
pop
mov
jge
rdmsr
cmp
daa
outsl
punpcklbw
bnd
add
xor
xchg
daa
rcrb
dec
add
jp
rcrb
xor
xor
movb
outsb
rorb
movsb
jl
dec
mov
je
stos
iret
mov
rclb
xchg
push
js
mov
adc
gs
jp
xchg
push
subb
je
jl
jnp
movsb
add
pop
mov
pusha
xor
mov
sbb
rcrb
adc
in
add
or
mov
mov
jle
mov
rorb
xor
add
adc
adc
ret
mov
mov
add
mov
ljmp
jecxz
jle
and
bnd
lock
inc
and
rcll
dec
xchg
mov
dec
or
das
xadd
orl
sbb
pop
inc
push
cmp
and
jle
out
mov
push
xchg
xchg
sub
add
lahf
cmp
dec
mov
cmp
inc
int
add
outsb
loop
pop
addb
xchg
addb
cmp
mov
fsubl
add
into
loope
add
fxch
hlt
jmp
jmp
loop
imul
xchg
shlb
pop
out
fimuls
jo
pop
je
dec
push
ret
add
roll
pop
cld
and
daa
inc
gs
rol
clc
add
xchg
rcrb
add
stos
push
hlt
push
jmp
clc
xchg
es
dec
add
jb
adc
sub
clc
dec
dec
popa
jl
cmp
test
xchg
cmp
add
mov
jo
add
clc
dec
push
jo
cwtl
mov
stos
xchg
fisubs
inc
adc
fsubr
add
push
mov
add
add
or
push
add
nop
sub
sub
mov
add
sbb
xor
popf
fiadds
add
jno
mov
jns
add
sbb
loop
loopne
add
in
sub
outsb
dec
jb
lock
add
xchg
mov
mov
sbbb
add
pop
in
call
test
or
out
mov
pop
popf
mov
mov
fcomps
popl
cmp
inc
push
push
cmp
inc
orb
add
dec
aas
push
dec
test
nop
xchg
lds
or
mov
test
push
cmp
add
xor
sub
pushf
push
out
add
cwtl
int
adc
push
cld
mov
mov
lea
mov
jne
call
pop
add
push
push
cmp
cli
and
sub
das
add
inc
mov
add
cmp
ret
or
push
arpl
pop
push
xchg
js
or
dec
test
repnz
repnz
xor
call
add
or
xor
rolb
push
jbe
dec
inc
adcl
jecxz
repz
xchg
into
add
faddl
or
sub
adc
sub
adc
push
push
dec
sbb
add
sub
dec
repnz
js
negb
je
push
adc
pusha
je
sbb
mov
pop
in
mov
and
xor
add
dec
xor
push
cmp
jp
xchg
jle
xor
add
mov
clc
hlt
xchg
add
test
inc
xchg
or
add
lcall
pop
shrb
mov
mov
data16
fcomps
jle
sub
xchg
jg
sbb
push
xor
pop
and
popa
icebp
mov
pop
popf
mov
add
pusha
jo
mov
imul
ficoms
mov
cmp
in
test
daa
xorb
cmp
cmpsl
repnz
int3
lods
cld
pop
and
ja
inc
sahf
mov
add
mov
xchg
sub
pushf
fadds
movsl
add
or
add
stos
ret
sbb
xor
push
lcall
adc
jb
pop
in
pop
or
lret
fs
xor
clc
out
sbb
ror
aaa
push
shrb
inc
stc
mov
es
add
sub
pop
push
nop
mov
pop
cwtl
jo
jle
and
mov
shr
nop
add
pop
cmp
test
cmpl
mov
dec
fmull
adc
push
jo
jbe
push
add
mov
add
add
loopne
sub
cmp
add
inc
test
and
push
xchg
xchg
sbb
push
xor
mov
je
daa
fldenv
nop
jmp
and
add
and
jp
js
pop
pop
sbb
iret
loopne
out
mov
mov
aas
shrb
test
cmp
lahf
pusha
add
xor
mov
dec
dec
out
add
cmp
rcl
rolb
xor
in
and
stos
add
ret
xor
jo
pop
mov
fildl
cld
adc
ss
cmp
popa
add
add
or
inc
dec
shlb
add
fadd
sahf
mov
jp
ret
mov
lock
or
push
popf
sub
pop
nop
mov
xchg
adc
rcrb
or
addl
or
setae
adc
add
lods
dec
imulb
das
mov
jbe
cld
mull
pop
inc
popa
addr16
jns
mov
xchg
out
out
out
out
loopne
lcall
xchg
daa
add
push
push
push
fwait
cs
in
push
cmpsb
cwtl
pop
scas
sarb
pop
ret
subl
cmpl
js
jb
je
cmp
push
aaa
andb
add
mov
mov
clc
adc
cmp
incb
sar
aas
clts
sbb
iret
rcrl
fstpl
loope
in
lahf
add
cmp
mov
push
nop
ret
add
rclb
push
cwtl
or
into
jo
pusha
insb
sbb
iret
out
leave
cli
das
jp
popf
dec
sbb
andl
loop
add
inc
and
je
add
popf
cli
add
bnd
adc
addl
mov
cmp
cmpsl
add
enter
dec
cmpsb
pusha
inc
incb
inc
mov
xchg
shrb
into
in
out
lahf
pop
inc
adc
sti
lock
jp
add
or
psubusw
rclb
cmp
mov
out
mov
stc
pushf
add
xor
and
pop
sbb
jne
cmp
pop
mov
sub
xchg
jne
ret
push
popa
pusha
jbe
ret
in
add
xlat
xchg
cmpl
loope
pop
pushf
ret
notl
add
or
aad
fdivrs
cld
cwtl
sbb
jle
dec
push
hlt
mov
mov
ret
aas
shl
adc
fimuls
adc
jp
add
push
mov
mov
ss
pop
adc
mov
xor
cwtl
add
adc
js
jmp
mov
pusha
xor
cld
xorb
push
add
add
xchg
pop
popf
lea
add
cmp
movsbl
inc
mov
insl
add
pop
add
adc
scas
xor
cld
mov
popf
clc
push
push
dec
and
pop
bound
mov
or
mov
stc
test
cmp
lods
jbe
cmpsb
sub
js
add
cld
mov
xor
dec
add
or
fsubp
push
pusha
pop
xchg
or
xchg
decb
mov
mov
mov
faddl
es
mov
add
jo
ss
aas
dec
es
xchg
mov
fimull
mov
adc
and
je
pusha
ss
push
dec
jbe
js
add
mov
inc
add
popa
sub
ds
add
xchg
cmpsl
jmp
push
xchg
pop
dec
xor
add
xchg
mov
leave
and
pop
shll
mov
addl
in
xchg
call
repz
add
lds
mov
inc
add
ror
push
mov
lock
test
add
dec
xchg
add
dec
mov
push
popa
jo
mov
pop
cli
inc
aas
pop
and
sub
xchg
loope
sub
lcall
pop
aas
shlb
add
les
ret
call
xor
in
cmp
lds
and
adc
ret
daa
bound
popa
test
icebp
cmpsl
lock
ss
dec
pop
or
fadds
inc
movsl
les
ret
aaa
sbb
dec
xor
jp
pop
pusha
mov
dec
add
dec
lret
push
inc
out
pop
push
imul
into
aas
out
sti
daa
frstor
std
sbb
inc
mov
xchg
sbb
data16
jbe
pop
dec
mov
mov
cmp
mov
hlt
inc
add
shl
das
movsbl
push
inc
add
cld
loopne
pop
jb,pt
dec
jle
add
add
sbb
lahf
aas
dec
push
leave
test
pop
test
sub
add
jl
out
add
cwtl
inc
pop
cld
daa
mov
sbbl
sub
and
add
inc
adcb
pop
pop
add
ret
aas
push
lret
popf
andb
xor
movsb
aam
sahf
sti
adc
xchg
xchg
mov
ret
xor
ss
pop
rsm
repz
or
incl
pusha
push
push
add
jb
pop
and
in
cld
inc
or
out
pop
or
add
mov
aas
cmpsl
daa
or
and
std
clc
je
and
leave
add
fiaddl
jle
pop
jno
aas
andl
loopne
and
dec
add
lcall
push
cmp
mov
lods
in
add
icebp
outsl
dec
jo
jnp
add
dec
subl
fs
outsb
and
add
mov
in
add
or
fadds
push
add
lea
inc
daa
push
xchg
add
xor
add
mov
jl
add
xor
popf
outsb
sbb
push
rcrb
cmp
or
dec
lea
aam
jae
pop
add
mov
leave
xchg
add
mov
idivb
adc
dec
xor
inc
lcall
add
and
aad
adc
push
daa
add
inc
inc
gs
mov
loope
jecxz
out
insb
outsb
add
adc
and
jb
cmp
dec
inc
dec
lock
cmp
popf
add
sbb
bound
subps
add
add
mov
or
cltd
adcb
dec
and
rcrb
add
xor
clc
xorb
mov
call
jle
adc
dec
mov
wbinvd
incl
cmp
movsb
js
pop
cmp
cmp
jo
dec
add
push
mov
cmp
lods
xchg
pop
sub
loope
cmp
je
lcall
xor
imul
push
add
mov
lds
push
addb
in
xchg
xchg
repz
fdivl
sbb
push
enter
xchg
xchg
add
clc
xlat
xor
jl
add
aaa
add
or
lock
add
pop
call
imul
and
pop
sbb
in
sub
sub
xor
add
inc
xchg
inc
cmp
repz
je
and
clc
roll
xchg
mulb
mov
and
mov
pop
paddq
addb
mov
pop
test
mov
xor
outsl
add
das
jp
outsb
push
movsl
rcrb
add
mov
fcoml
cmp
sbb
xor
add
push
xor
ret
jmp
jp
push
int
pop
xlat
mov
fs
inc
sbb
add
sub
push
add
cmpsl
or
sbb
clc
cmpsb
pop
mov
repnz
fcmove
push
mov
mov
mov
push
pusha
orl
int3
sub
mov
cwtl
call
add
fadds
sub
dec
xchg
and
and
push
jb
subb
add
sbbb
dec
add
ret
aam
mov
jo
andb
lahf
loop
loope
add
nop
out
hlt
sbb
dec
cmpsb
and
sbb
push
xchg
aas
fucom
inc
in
addb
movsl
sub
out
push
adc
daa
push
popa
xorb
pop
add
outsb
loope
jle
pop
int
ret
sbb
dec
pop
push
or
clc
addr16
xchg
nop
test
inc
sbb
push
leave
gs
mov
xor
and
jns
cmp
cld
fnsave
mov
pop
add
pop
notl
fs
lret
add
lock
cs
and
cmp
sbbl
pushf
sub
and
icebp
cmp
rolb
enter
cmp
push
cmp
pushf
dec
mov
in
stc
mov
cmp
out
shll
js
inc
adc
popa
add
fsubrs
aas
jbe
add
dec
cmc
jl
adc
xchg
push
lock
and
cmp
subb
add
cmp
in
or
icebp
stc
add
jnp
add
mov
iret
and
cmpsb
add
pusha
clc
scas
aas
fdivl
add
jle
mov
xchg
add
lcall
aad
iret
hlt
add
aas
dec
pop
add
rclb
movsb
das
testl
pop
add
ds
adc
ret
js
mov
pop
roll
cmc
lcall
xor
add
testb
cmp
mov
in
pop
outsl
or
pop
fwait
add
sahf
mov
add
test
sti
xchg
loop
pop
sbb
cli
pusha
fistpll
mov
push
cmpsb
js
iret
test
popf
mov
jle
repnz
adc
loopne
inc
out
inc
add
pop
fs
sub
sbb
push
rorl
pop
dec
mov
cmp
push
add
mov
mov
call
movsb
and
add
and
xor
fstps
dec
mov
daa
xor
push
inc
adc
cmp
push
sbb
xor
cmpsb
mov
nop
shr
cmp
push
add
sbb
cld
popa
xor
scas
cmpsb
push
mov
or
inc
inc
loopne
sub
hlt
and
cmp
xchg
and
lock
dec
add
fsub
std
mov
pushf
push
pop
fstpl
jmp
clc
addr16
add
mov
lahf
loopne
in
and
popa
adc
leave
pop
rcrl
and
and
pop
daa
clc
sub
das
and
adc
inc
mov
xor
xchg
add
adc
mov
ljmp
enter
cld
add
dec
xor
loop
sbb
test
aas
and
push
pop
jle
pop
inc
arpl
add
stc
ja
hlt
push
jns
jl
addb
jmp
adc
cmp
pop
addb
or
movsb
push
push
add
aam
fstps
mov
nop
rolb
add
rclb
loopne
les
fprem
cmp
add
pop
stc
cld
dec
std
sbbb
add
mov
imul
cmp
cmp
cmp
daa
pop
add
in
lock
das
pop
std
sub
roll
and
adc
lahf
cltd
ret
pop
mov
add
repnz
rcrl
mov
test
ret
xor
adc
sbb
mov
cli
pop
ljmp
xchg
daa
lcall
sarb
in
push
or
clc
push
dec
jo
add
jecxz
inc
cmp
dec
bound
fmuls
add
out
rorb
jb
data16
in
loopne
insb
sbb
rcrl
add
fiaddl
mov
xchg
les
jno
mov
sahf
dec
pop
add
mov
push
rclb
mov
cmp
inc
das
xchg
inc
int3
sbb
push
icebp
xchg
mov
push
add
cmc
fwait
std
lock
and
cmp
outsb
mov
jbe
enter
pusha
pop
rorb
add
aaa
leave
pop
and
push
aad
xchg
mov
pop
inc
fcoml
dec
cld
sub
mov
xor
cmp
push
mov
sarb
or
testl
cmp
inc
mov
mov
lcall
leave
sub
inc
push
push
dec
or
push
dec
sbb
stc
sub
js
aas
ss
call
cmp
clc
les
jg
adcl
mov
popl
mov
js
jp
jl
dec
pushf
jg
add
lods
call
mov
add
ret
nop
xchg
and
testb
sub
mov
cmp
das
cmp
enter
cld
adc
enter
push
cmp
cmc
and
cmp
or
pop
sbb
and
dec
and
fdivrp
sbb
cmpsl
inc
pop
test
aas
lods
xor
inc
push
dec
daa
dec
add
dec
movsl
addb
sbb
out
roll
cld
aad
add
add
mov
addb
pushf
and
pop
ss
sub
scas
push
cmc
add
loopne
adc
stos
loope
shrb
leave
push
jo
push
in
nop
ljmp
add
test
ss
add
cmpl
sbb
pop
notb
add
or
mov
add
cmp
and
add
push
mov
add
dec
pop
or
cmp
jno
jo
leave
cmp
fadds
jbe
call
lock
fdivrs
add
cmp
mov
push
jp
add
or
or
clc
sub
int3
inc
and
sub
insb
add
xor
insb
out
lock
pushf
add
jo
out
cmp
aaa
xchg
and
add
daa
pop
inc
mov
jg
add
mov
add
test
add
orl
xchg
sub
adcb
adc
test
into
xchg
add
xor
mov
ds
xchg
add
add
cmpl
adcb
lcall
lds
adc
and
lock
or
cmp
pinsrw
dec
bound
pop
xorl
sahf
inc
lods
pusha
mov
mov
cld
or
popa
mov
jns
add
movsb
pop
out
ja
jnp
movlps
and
push
mov
add
sub
and
fcompl
sub
test
daa
fwait
out
ficompl
mov
ljmp
adc
cmp
rcll
repnz
ret
in
add
shll
and
jg
add
dec
inc
dec
iret
push
leave
add
fs
jl
sbb
es
mov
lret
xlat
lock
dec
sub
mov
imul
jg
mov
mov
adc
and
shld
mov
push
add
icebp
in
loopne
push
lahf
xchg
push
jmp
nop
shll
pop
adc
movsl
enter
jo
test
clc
mov
or
xor
sub
mov
out
add
pop
jecxz
insb
testl
movsb
xchg
scas
js
add
loopne
incb
insb
pop
or
sbb
add
int3
xchg
test
aad
inc
stc
shlb
out
outsb
dec
cvtpi2ps
leave
add
sub
xchg
daa
inc
add
test
aas
add
jp
into
sahf
lret
fmul
shll
add
clc
xchg
sub
and
call
cmp
test
lock
or
dec
inc
push
cmpsb
mov
hlt
divl
pop
sbb
inc
or
add
mov
rcrb
add
mov
xchg
adc
sahf
rcrl
xchg
sbb
mov
clc
mov
clc
mov
aam
fnstcw
ucomiss
push
push
cmp
pop
dec
into
sbb
jg
sahf
loop
inc
call
lock
popa
and
mov
pusha
jbe
cmp
add
daa
std
test
es
add
ja
mov
push
lcall
int
pop
xchg
call
adc
add
push
or
push
dec
es
add
push
add
aam
lret
mov
mov
cmp
xlat
cmp
add
clc
push
xor
pop
add
mov
dec
icebp
or
push
outsb
sbbb
lock
mov
mov
popf
inc
stos
fildl
stc
loop
push
cmp
mov
push
dec
sahf
mov
aas
sub
in
mov
shl
cld
pop
loope
or
push
add
xchg
add
arpl
imul
es
stc
mov
xchg
dec
je
dec
dec
or
xchg
das
movsb
sarl
ret
xor
jbe
dec
inc
arpl
nop
pop
leave
pop
push
loope
hlt
subb
pop
test
insb
in
repz
repnz
leave
sbb
and
dec
add
push
pop
push
lahf
jnp
xchg
mov
sarl
lcall
pop
je
jbe
pop
js
push
or
dec
rolb
sarb
push
jbe
in
mov
push
lock
mov
test
add
xchg
or
add
cmpsl
addl
mov
ret
out
pushf
shrb
sbb
lahf
pop
mov
dec
pop
clc
pop
imul
mov
jnp
daa
aam
movsb
clc
test
jle
lock
xor
add
sahf
or
int3
pop
adc
pop
add
inc
dec
dec
push
cmp
pop
cmpb
sbb
cmpb
cmp
xorb
mov
mov
add
mov
loop
mov
loopne
mov
dec
jns
add
int3
xchg
rcl
sub
pslld
fsubrs
in
in
push
repnz
and
mov
jb
mov
outsl
adc
test
or
sbb
cmp
jb
je
push
xor
add
jmp
clc
dec
in
add
clc
pop
test
push
and
insb
movups
mov
jnp
mov
nop
and
xchg
cmpsb
add
dec
lods
repnz
aam
repz
jne
call
in
mov
hlt
popf
add
push
push
xchg
dec
xchg
rorl
mov
inc
inc
sub
dec
stc
push
cli
fprem
pop
cmp
mov
mov
jbe
mov
movsb
orb
add
sbb
add
and
mov
leave
push
push
mov
pusha
stos
and
insb
add
mov
test
xchg
fs
or
adc
pop
popf
xor
xor
adc
dec
in
inc
jns
push
pop
pop
sbbb
inc
repnz
mov
and
add
adc
add
jp
mov
xchg
nop
shl
xchg
pop
add
inc
pop
push
pusha
enter
out
or
push
pop
filds
out
cmpb
add
rcrb
and
add
add
mov
scas
sub
jbe
add
cwtl
lods
add
mov
jle
add
ret
push
hlt
repnz
jne
pop
inc
pop
and
sub
dec
xor
xor
shlb
movsb
repnz
add
add
aas
jle
add
daa
or
mov
add
mov
loopne
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
nop
shl
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
in
add
adc
push
fmul
and
mov
sub
cmpsb
sub
lods
add
loopne
mov
ud2
add
je
inc
add
sbb
adc
cmp
roll
dec
add
xchg
push
cltd
mov
ljmp
add
push
add
call
mov
jne
sub
test
mov
add
push
mov
add
pop
ret
aam
imul
push
divb
fcmovnu
adcb
sbb
cmp
rorl
or
add
dec
jmp
add
push
cmpl
add
dec
filds
out
sbbb
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
lds
shll
cltd
lods
data16
shr
repnz
xor
add
stos
push
pop
add
mov
das
and
add
add
cli
sbb
nop
inc
jae
add
lea
loop
mov
popa
mov
repnz
pusha
add
inc
push
jge
ret
fadd
in
inc
xor
push
push
inc
lock
add
xor
push
int3
jnp
jp
sbb
pop
sbb
jle
sbb
sub
movsb
mov
adc
jne
stos
ficoml
stos
push
sahf
add
jg
mov
push
sub
mov
jne
and
pop
mov
sub
xor
dec
add
and
fmul
aaa
mov
arpl
and
pop
rorl
loop
inc
in
wbinvd
xchg
lock
loopne
je
repnz
add
adc
and
jmp
push
sbb
dec
mov
pop
xorl
scas
cld
push
in
mov
add
inc
sbb
pop
fsin
loopne
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
push
xchg
lea
adc
push
shll
push
sbb
and
sti
int3
daa
xor
ss
mov
jbe
rolb
xor
sbb
pusha
pop
loop
push
xchg
mov
push
pop
fists
xchg
cmpsl
mov
or
push
addr16
add
cmp
sub
add
jmp
outsl
sahf
add
and
add
dec
js
mov
repnz
imul
stc
jle
pop
in
inc
add
push
dec
jp
pusha
stc
pslld
std
out
cmp
sub
push
test
andl
adc
and
dec
js
ljmp
cwtl
pop
out
dec
xchg
add
loop
xor
push
jl
sbb
std
and
add
mov
add
mov
pop
rolb
xchg
sbb
icebp
shll
mov
and
cli
stos
and
rcrb
loopne
xchg
js
add
lock
test
sub
add
push
add
jl
loope
cmc
pusha
dec
add
imul
popl
add
xchg
cmc
ret
add
stc
dec
leave
cld
sar
es
in
sub
push
mov
add
adc
add
sub
movsl
aam
filds
mov
in
movsb
cmp
cmp
add
fimull
push
mov
jo
add
clc
imul
xchg
out
pop
into
adc
inc
stos
mov
add
mov
sahf
add
dec
pop
movb
jno,pn
xor
push
rcrb
pop
xchg
loopne
in
mov
arpl
rcrb
test
add
jecxz
stos
push
sub
xchg
xchg
pop
or
push
pop
or
psubsb
cmpsl
cmp
inc
dec
aas
sub
std
jle
in
addb
out
adc
fwait
out
je
dec
inc
fldenv
add
imul
aas
cmp
andb
sbb
pop
outsb
add
je
adc
stc
add
inc
shrl
adc
mov
jb
and
add
and
xor
cmp
mov
xchg
sub
call
jne
inc
jbe
mov
push
add
cmp
or
and
pusha
rolb
add
jge
aam
out
add
xor
inc
rolb
push
sub
pop
dec
lods
pop
jecxz
sahf
rorl
push
push
push
add
mov
pop
hlt
mov
pop
xor
dec
jno
clc
inc
test
add
mov
mov
sub
xor
js
in
mov
bound
loop
mov
add
adc
push
pusha
lcall
loope
pop
sarb
imul
das
xor
cmp
scas
add
in
inc
loopne
pop
adc
mov
cli
push
hlt
add
cmpsl
xchg
jb
cmc
sub
cmp
scas
sub
das
aad
adc
cltd
mov
mov
xorb
iret
push
cs
inc
fcmovb
xlat
add
or
mov
loope
xor
mov
sub
ret
push
mov
pusha
pop
or
cld
cli
fdivrs
cmc
xchg
adc
out
xchg
or
ret
pop
aas
scas
movntps
rorb
je
pop
push
sub
or
pop
mov
add
in
jb
ljmp
and
mov
sub
rep
pop
sbb
pop
incl
dec
shrl
or
pop
cmp
jae
push
add
inc
inc
lock
adc
xchg
shlb
push
je
adc
mov
sbb
out
jnp
nop
es
cmp
popa
adc
or
lret
imul
cmp
jne
rclb
je
jne
xor
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
addr16
lods
inc
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
pop
jne
fs
outsl
shrb
popa
insl
loop
cmp
mov
std
insl
icebp
arpl
or
mov
push
fs
mov
xlat
xchg
nop
push
movsb
add
rorb
in
inc
sbb
decl
std
pushl
dec
outsl
sarl
arpl
inc
arpl
dec
outsl
fildll
mov
data16
movsb
mov
add
xor
aas
and
add
mov
lret
sub
pop
sbb
or
dec
sbb
out
subl
adc
mov
cmp
or
pop
jge
pop
jno
xchg
sub
loope
lret
dec
and
sahf
adc
pusha
sub
and
and
ret
je
aaa
cmpsl
inc
icebp
fidivrs
mov
or
jmp
ret
push
jecxz
xchg
mov
mov
mov
in
cmp
cmp
jbe
fxam
movsb
xchg
fmul
jns
or
stos
imul
sbb
jle
or
xchg
std
or
cmp
jp
idivl
sbb
addr16
dec
push
push
jb
jns
jae
orl
or
xlat
outsb
dec
repz
and
sbb
ret
jbe
dec
pop
cmpb
lods
xchg
std
rcll
jo
or
inc
cmp
xor
mov
fsubl
lds
xchg
ds
lock
mov
jae,pn
mov
addr16
mov
xor
sarl
pop
dec
fstpl
fidivl
jae
inc
dec
mov
ret
cmp
pusha
in
mov
das
mov
jecxz
pop
lret
out
adc
sub
jl
test
out
scas
int3
mov
inc
xchg
rcr
inc
and
ficompl
sub
daa
jno
inc
mov
cmp
xlat
jb
jb
cmpsl
jb
dec
cmp
int
jo
int
repnz
push
cmp
mov
outsb
adc
inc
fs
aaa
cli
and
xor
sbb
call
xor
cmp
and
ret
and
mov
aam
xor
and
and
popf
aaa
bound
xchg
dec
loope
mov
add
adc
xchg
xchg
je
jge
fdivl
xchg
out
lret
jge
lahf
popf
out
fldcw
xchg
cmc
jb
je
adc
test
mov
mov
inc
shlb
jns
xor
mov
outsl
mov
pop
xchg
xchg
fcmovnu
lods
mov
fsubrs
jne
push
negl
in
push
jmp
or
incl
inc
scas
repnz
xor
hlt
lahf
push
pcmpeqb
mov
inc
or
push
stc
xchg
pop
out
lods
fsubl
dec
test
cmp
inc
xchg
aam
jnp
mov
jb
sbb
cmp
sub
in
ret
xchg
movsb
fisubrl
jne
sbb
inc
rorb
lds
mov
pop
push
imul
lods
xor
sub
jge
jae
fs
mov
dec
lret
xor
mov
fisttpll
daa
bound
idivl
pop
sub
mov
addb
int3
ljmp
add
pop
mov
test
dec
loopne
out
sarb
cmp
jle
loop
mov
test
shll
shlb
add
pop
mov
fisttpl
es
push
ret
push
lea
and
lcall
movsb
push
mov
xchg
pop
push
aam
ja
pop
cld
and
cli
lock
mov
xor
lcall
js
fsubrl
shrb
xchg
pop
dec
insb
lods
push
and
lret
cld
jp
push
inc
iret
cmp
push
mov
fcmovnbe
xor
decl
jg
icebp
aad
mov
lods
in
sahf
ret
jl
std
outsl
out
sub
iret
adc
mov
sub
arpl
pop
sbbl
jae
xchg
repz
pop
mov
movsb
mov
nop
pop
ret
mov
adc
int
add
or
addr16
jae
repz
fs
sbb
negl
cli
lds
xor
in
dec
out
add
mov
sahf
repz
enter
xor
jo
or
lret
in
mov
lcall
cmp
imul
ret
imul
cmpsb
adcl
mov
lcall
pop
jbe
or
xor
imul
je
lea
loop
mov
ljmp
insb
sahf
lock
ljmp
sbb
pop
je
cmc
xor
and
aam
jp
cmp
pushw
xorb
dec
iret
imul
in
pop
inc
sbb
cwtl
loope
shr
inc
or
sbb
dec
xchg
xchg
add
lcall
adc
sbb
sbb
add
xor
test
push
sbb
or
insl
and
pop
push
sbb
mov
inc
rol
lock
in
push
push
incl
pushf
mov
push
add
cmp
xor
inc
mov
pushf
xchg
mov
xchg
aas
out
hlt
imul
in
cmp
sti
mov
lea
addl
jg
mov
das
dec
mov
pushf
adc
out
mov
pop
sub
or
dec
scas
push
and
icebp
clc
popa
xchg
lret
loop
loop
xchg
imul
icebp
aad
popf
jo
imull
mov
mov
into
cld
dec
inc
pop
mov
mov
ja
clc
clc
leave
xchg
jmp
add
test
pop
outsl
addr16
testl
jne
cld
add
cs
ret
jge
loope
mov
xchg
mov
and
or
iret
mov
mov
mov
shlb
or
sbb
jb
test
shrl
cmpsl
push
push
rorb
mov
out
insl
jno
push
push
jmp
sahf
lcall
out
out
cltd
inc
adc
lods
fcomip
iret
push
jnp
sub
aad
stc
lock
jb
mov
and
and
push
in
push
xchg
jge
shl
stc
pushf
cmp
enter
rolb
xchg
incl
mov
insb
lret
stc
add
repz
xor
inc
test
clc
scas
pop
and
aas
xchg
or
test
adc
sbb
je
shll
lcall
inc
dec
cmp
ret
lds
ret
cmpsl
pop
mov
cmc
xchg
aad
pop
jmp
push
ret
or
pop
dec
mov
jo
sahf
dec
xchg
cmp
stos
jl
sbb
jmp
loop
ljmp
cmp
cmpsl
or
adc
sbb
add
outsb
sbb
jo
lods
jno
push
push
mov
pop
push
je
movsl
xchg
setnp
outsl
cld
cs
mov
lods
popf
cmp
inc
and
gs
xchg
mov
sbb
xchg
aaa
negb
es
popa
sub
shrb
mov
xlat
popf
push
mov
test
mov
jmp
out
xor
xlat
pop
imul
sti
sbb
cwtl
ss
push
mov
loop
adc
pop
add
aaa
hlt
in
xor
inc
outsb
inc
inc
out
ja
ljmp
cld
pop
roll
scas
gs
push
mov
mov
mov
int3
dec
popa
aas
sbb
aam
rclb
dec
mov
xlat
jo
sbb
xchg
mov
mov
and
mov
and
gs
mov
pop
repz
xchg
hlt
cmp
inc
nop
aam
std
inc
jg,pn
aad
pop
es
loop
inc
mov
jmp
in
leave
sbb
push
gs
add
bound
cmpsb
repz
mov
loope
aas
pushl
js
sbb
data16
mov
adc
fbstp
cmp
push
cmp
hlt
int
pop
mov
push
pop
cmc
cs
adc
sub
in
lock
leave
sahf
cmpsb
pop
mov
cmp
loopne
inc
jb
or
imul
cmp
cmp
loop
ret
add
inc
xchg
sbb
dec
xchg
dec
imull
test
jnp
ljmp
inc
push
inc
in
jns
mov
lods
into
mov
mov
mov
xchg
or
ret
clc
arpl
pop
mov
stc
inc
fs
cwtl
fs
fsub
inc
aad
sti
and
push
xchg
outsb
loop
fadds
pushf
mov
mov
scas
push
ja
mov
adc
shrl
sbb
mov
jbe
push
arpl
aas
push
hlt
pop
aaa
cmp
mov
aam
inc
mov
cmpb
imul
leave
imul
cmp
insb
int
pop
std
testl
mov
mov
add
loopne
in
sub
negb
aad
daa
xor
inc
mov
xlat
out
ret
into
ja
scas
pop
xchg
pusha
shl
add
iret
adc
dec
cmc
add
add
cmc
pop
mov
jp
jg
stos
xor
pop
xor
aam
sub
call
mov
mov
mov
rolb
je
sti
inc
pop
jo
mov
fwait
mov
aad
xchg
out
add
adc
sahf
mov
in
or
xor
mov
aas
daa
leave
fistpll
loopnew
in
sub
sbb
pop
xchg
xchg
add
jne
and
leave
jge
icebp
cmpsb
pop
popa
sub
stos
sub
ja
vcvtsd2si
sbb
sti
fwait
std
mov
cltd
mov
jle
orb
subb
inc
lahf
push
sbb
cltd
das
and
mov
jnp
sbb
adc
adc
cmpsl
xchg
jbe
mov
xor
and
mov
dec
add
test
mov
cmp
sub
rolb
or
and
adc
add
jae
loope
pushf
add
lret
dec
scas
loopne
out
or
repz
or
aam
das
dec
aas
arpl
mov
icebp
or
push
cmp
cli
inc
mov
sarl
leave
sarb
data16
jg
stos
popa
insb
dec
jg
jmp
in
repz
xchg
xor
adc
cmpsb
adc
jo
imul
dec
lock
sbb
jnp
and
cmp
cmp
inc
jo
lret
jnp
dec
xor
cmpsl
mov
jb
imul
cld
enter
adc
dec
mov
hlt
push
shll
repnz
pop
mov
sti
sub
cmp
int
repz
mov
jp
ret
sbb
and
pop
push
pusha
sub
lock
out
in
add
push
sub
mov
push
pop
jnp
push
sbb
jge
outsl
push
xor
ja
mov
push
fisubs
ret
sub
xchg
imul
test
sbb
mov
xchg
jg
jno
fidivs
push
mov
faddl
mov
jl
out
sbb
ficompl
gs
mov
sub
push
push
push
pop
mov
jle
push
lods
lds
lods
mov
rcrb
dec
push
sar
mov
cmp
ss
pusha
jns
rorb
push
aas
push
insl
mov
cwtl
ss
mov
outsl
enter
add
mov
cmpsl
dec
ficoml
lods
imul
mov
pop
aam
sti
and
jae
divl
cs
loopne
sub
adc
push
out
sbb
test
cmpsl
mov
mov
xchg
cmp
push
loopne
dec
shlb
jmp
das
push
mov
or
loope
adc
sahf
xchg
fidivl
mov
mov
lret
fs
jo
jmp
movsb
mov
cmp
dec
jle
push
cli
stos
mov
leave
mov
ljmp
shl
xchg
repnz
add
mov
jecxz
sahf
mov
shl
daa
sbb
jg
scas
in
scas
rclb
dec
stos
loope
insl
lds
movsb
shlb
push
addr16
jp
cltd
xchg
lock
mov
adc
icebp
cwtl
into
mov
push
leave
rcrb
inc
inc
faddl
add
mov
xor
and
in
leave
int3
push
mov
loope
and
sti
and
inc
lcall
loope
lea
popl
and
test
stc
data16
stc
xchg
scas
int3
dec
push
mov
sub
pushf
xchg
jmp
lds
sbbb
loope
scas
aad
inc
xchg
loopne
repz
fs
data16
xchg
pushf
jl
adc
or
inc
push
mov
dec
mov
popf
or
or
inc
fisubrl
fcmovnb
test
jl
sti
imul
fstpl
or
xchg
adc
loope
loope
adc
imul
stos
sub
and
xor
push
aam
lea
cli
les
cmp
pusha
fs
push
mov
outsl
inc
movsl
jp
sub
inc
mov
js
hlt
sarb
add
add
dec
loopew
sbb
es
cld
frstor
cmp
sub
icebp
and
and
clc
mov
imul
push
mov
cmp
loopne
sbbl
ret
mov
movsl
sbb
pop
mov
pop
and
call
or
negl
adc
out
pop
imul
enter
push
ret
mov
frstor
mov
pop
sub
push
mov
in
mov
xchg
mov
es
insb
xlat
or
out
or
adc
sbb
ds
pop
add
movsl
loop
in
mov
and
call
jb
sbb
mov
pop
dec
das
mov
arpl
dec
push
cmp
lahf
mov
mov
lds
or
or
nop
xchg
dec
int
or
daa
jno
stos
or
out
or
aas
aaa
adc
pop
dec
mul
xor
enter
lcall
fwait
and
fnstcw
ss
insl
inc
addb
pop
dec
jp
aad
in
cmp
xchg
mov
sbbl
cmp
mov
cmp
fs
inc
mov
adc
andb
pop
push
pop
jbe
inc
jp
hlt
imul
pop
push
dec
mov
sar
mov
ret
sbb
popf
ficompl
fwait
nop
jmp
lret
ret
mov
out
out
jb
sbb
nop
sti
xor
xchg
fcompl
pop
lods
out
sub
pop
xchg
outsb
push
scas
movsb
jl
ss
cli
xchg
loop
loopne
imull
jo
mov
aaa
je
pop
mov
push
lock
cld
or
cwtl
pop
pop
lods
adc
int3
cmpsb
cmp
rolb
outsb
mov
mov
cltd
mov
lret
fstpl
movsb
test
sbbb
xchg
lret
rorl
fidivl
xchg
sub
push
mov
je
pop
xor
mov
xor
pop
test
test
imul
lods
repnz
les
add
iret
fidivrl
scas
jns
xchg
add
jne
loop
sti
jp
mov
lea
mov
sub
nop
iret
cmp
cwtl
mov
pop
add
push
rorl
mov
pop
cmp
dec
and
lods
push
mov
xchg
in
ret
imul
sub
fucomi
sub
xchg
and
call
mov
add
ja
in
cld
and
xchg
add
ljmp
fsubrs
xchg
dec
icebp
cmc
mov
pop
sbb
jnp
push
sbb
es
adc
gs
aad
ret
stc
test
cmp
or
jmp
xor
xchg
stos
je
cmp
loope
fld
andb
mov
add
pop
dec
mov
add
fwait
rcrl
xorb
fstpl
roll
rcl
inc
mov
mov
or
lock
mov
mov
xor
mov
adc
sahf
in
add
lea
leave
jne
and
ret
cmp
rcr
fbstp
call
jmp
mov
jl
inc
in
enter
das
mov
dec
pop
scas
sbb
pop
icebp
imul
xorb
int3
mov
cmp
call
in
lds
sbbl
arpl
jecxz
in
mov
adc
jo
pop
xchg
out
in
xchg
test
je
push
int
or
adc
shll
sub
negl
out
xor
icebp
push
test
adc
imul
dec
mov
scas
add
xchg
or
pop
int
dec
scas
nop
std
adc
adc
bound
cmp
jne
xchg
xor
lcall
scas
clc
lods
sti
out
fdivrs
lods
enter
cmpsb
and
lret
push
loop
loope
xlat
inc
xchg
bound
adc
mov
dec
xchg
shrb
les
loop
test
mov
sbb
mov
push
xchg
test
mov
dec
mov
repz
fimull
cmp
pop
cwtl
int
cmpsb
popf
inc
mov
lret
cltd
loop
sbb
xor
mov
ja
xchg
push
into
xor
push
mov
aas
jmp
push
aad
pavgb
shl
fstps
ds
cmp
add
out
inc
push
xor
sbbb
xlat
adc
stos
cmpsb
cli
cmp
mov
mov
or
mov
mov
jle
je
std
repnz
notl
in
cmpsl
inc
push
iret
scas
aam
push
orl
inc
dec
mov
scas
jmp
repz
icebp
pushf
adc
push
push
pop
inc
popf
stos
jo
enter
ds
int
icebp
push
enter
jne
mov
in
sbbl
sub
mull
scas
aaa
jmp
or
pusha
outsb
xchg
outsb
stos
arpl
pushf
jbe
inc
sub
sahf
sbb
mov
mov
outsb
aad
push
ds
lret
xchg
mov
inc
iret
outsb
sbb
mov
dec
pop
adc
mov
cmp
cmp
pop
and
lret
lock
les
push
push
xchg
fidivrs
mov
test
mov
or
mov
adc
xor
lods
push
mov
push
repz
fs
dec
cld
loop
cmp
sbb
ss
dec
jmp
add
sub
leave
aaa
mov
into
mov
inc
dec
inc
sbb
jmp
scas
aaa
cmp
test
in
shll
mov
sbb
es
inc
pop
add
int
sub
scas
and
sbb
lods
aas
stos
pop
or
pusha
mov
ds
pop
mov
cmc
jno
in
push
stos
loopne
nop
pop
cld
data16
xchg
sub
adc
in
mov
call
fcomp
sub
ljmp
mov
pop
popa
jle
lods
xchg
lds
mov
movl
mov
insb
mov
mov
pusha
pop
sub
jecxz
fucom
push
shrl
imul
mov
mov
adc
arpl
xor
int
adc
xabort
or
in
push
jle
fs
adc
cli
out
jb
clc
andb
mull
pop
clc
push
and
sbb
stos
dec
cmp
push
mov
lods
leave
mov
or
insl
and
pop
mov
stos
hlt
in
or
xchg
leave
push
dec
leave
xchg
dec
ljmp
scas
adc
sub
jmp
mov
dec
xlat
and
dec
jmp
lret
inc
xchg
orb
xor
mov
mov
pop
inc
clc
pop
ss
aad
adc
xlat
dec
les
stos
mov
pusha
mov
dec
mov
aas
dec
or
stos
jle
out
imul
inc
and
mov
push
cmp
leave
imulb
or
adc
cs
dec
xor
ljmp
sbb
inc
jg
pop
test
cmpsl
or
addr16
rcrb
mov
xchg
dec
adc
stos
scas
add
mov
or
mov
cmp
andl
mov
pop
push
jbe
inc
xchg
inc
cs
mov
pop
pop
pushf
fcmove
push
fdivr
mov
fucom
add
dec
scas
pop
je
cmp
xchg
iret
dec
xor
fists
xchg
push
xchg
lods
cmpsb
scas
pop
mov
mov
xor
popa
pop
addb
mov
inc
mov
repz
dec
adc
gs
dec
ss
or
cld
pop
loop
ror
xor
mov
aad
xchg
pop
aaa
mov
pushl
sbb
lock
inc
cmp
and
out
shll
decb
xchg
sub
push
xor
inc
hlt
or
fsts
xchg
xchg
cmpsb
mov
test
mov
xchg
cmp
cmc
lods
dec
add
je
insl
mov
test
push
in
int
insb
sti
mov
or
cmp
lahf
dec
repz
sbb
in
inc
dec
mov
orb
cmp
and
mov
imul
pop
pop
push
movb
xor
xchg
clc
stc
dec
in
push
mov
push
xor
insb
fxch
inc
aaa
pop
dec
imull
sbb
add
test
cmp
add
in
add
xorl
shr
mov
into
inc
or
jae
inc
pop
lds
adc
lods
add
dec
adc
jge
adc
rorb
fsts
pop
js
rcrb
fcomps
mov
aas
xor
pop
mov
ja
jle
jno
subl
push
xor
mov
mov
mov
mov
outsb
mov
mov
push
loop
add
stos
mov
adc
lods
es
pop
pop
xchg
sub
mov
fadd
inc
test
add
popa
orb
bound
mov
pop
mov
jae
mov
mov
fmull
mov
pop
dec
je
or
xchg
mov
add
xor
insl
mov
js
into
mov
aas
enter
loopne
nop
icebp
mov
fwait
stos
mov
pop
mov
outsb
jge
jmp
mov
xor
mov
ja
dec
pop
outsl
add
xchg
sti
int3
cs
mulw
ss
lcall
lret
mov
int3
gs
loop
jne
xor
mov
mov
and
outsl
or
testl
mov
insl
mov
xchg
xor
cmpl
insl
push
push
subl
out
scas
lahf
or
xchg
pop
imulb
aas
test
in
pusha
adc
push
inc
mov
cmp
call
push
mov
mov
js
and
xor
popf
pop
imul
add
sarl
ds
sbb
cltd
ja
and
cli
in
or
ret
ja
out
cmc
outsb
dec
adc
adc
aad
lea
sub
aas
dec
or
arpl
mov
negb
loopne
inc
pop
adc
jbe
outsl
int3
pop
adc
idivl
std
hlt
es
adc
xchg
dec
jb
int3
inc
dec
jmp
pop
cwtl
fidivrs
sub
jns
fisubs
cltd
pop
lds
scas
fmull
mov
addb
andl
into
aas
stc
mov
lock
popl
sub
ds
dec
pushf
fwait
sub
movsl
lcall
inc
pushf
sbb
cmp
or
pop
mov
and
aaa
pmulhw
cmp
rcll
add
push
out
push
fwait
adc
hlt
inc
cmc
arpl
test
push
xor
push
xor
pop
ja
fdivrp
fcoms
cmp
rol
mov
cli
lea
xor
push
or
mov
and
sbb
and
nop
cltd
addr16
pop
and
sub
xor
sti
jnp
stc
xorb
test
sbb
inc
sub
cmp
rorb
xchg
not
or
xchg
outsl
cmc
adc
inc
mov
icebp
mov
inc
aam
jae
mov
jne
leave
aad
sub
shr
or
jnp
mov
in
adc
dec
pop
lea
dec
sbb
inc
sub
push
es
lock
mov
pop
decb
adc
in
test
adcb
fldenv
push
xor
je
mov
iret
jecxz
mov
aam
popa
xor
imul
mov
in
repz
stc
imul
rclb
data16
inc
sbb
fdivrl
cmp
outsb
dec
xchg
call
jg
int3
test
inc
inc
pop
sti
adc
dec
ss
pop
sub
pop
aaa
and
shlb
jno
dec
inc
cmp
xorl
mov
ret
icebp
pusha
xor
cli
inc
sbb
mov
adc
int
cmp
or
mov
outsb
int
push
mov
imul
adc
xchg
out
and
or
inc
sbb
roll
aaa
ds
sbb
mov
add
ljmp
loopne
stos
add
stos
stos
and
je
fisttps
movsl
cmp
out
sbb
out
js
fneni(8087
push
stc
gs
adc
cmp
sbb
std
es
lods
std
push
lods
inc
mov
insb
mov
pop
and
sub
xchg
mov
idivb
dec
pop
xchg
aas
inc
push
cmp
ljmp
bound
addb
daa
dec
jnp,pt
sbb
shlb
fcoml
aad
mulb
jle
mov
add
add
jmp
and
std
mov
cltd
ret
fdiv
fdivl
pushf
rolb
push
push
cmp
cld
push
and
outsb
mov
js
mov
dec
fwait
call
cmp
add
dec
pop
cs
imul
pop
jecxz
fwait
xor
dec
pop
jmp
and
sti
shll
push
add
ret
fsubrs
stos
jns,pt
mov
or
push
adc
mov
fmuls
sbb
xchg
jnp
add
arpl
mov
xlat
divl
bound
mov
ret
push
adc
loope
stos
sub
push
jp
pop
aam
sub
and
push
add
push
or
xchg
sub
imul
sbb
adc
mov
movsl
divb
mov
out
jl
pop
and
push
ljmp
notl
loop
jbe
pop
mov
lret
scas
pop
ss
in
jp
add
jmp
sahf
ja
popf
jl
imul
fnstenv
or
adc
xchg
inc
pop
fldcw
and
pop
or
push
sbb
xchg
enter
or
mov
pusha
mov
pop
scas
insb
es
stos
mov
les
push
das
and
cmp
enter
stos
pusha
inc
es
jne
sbb
xchg
inc
or
sahf
jge
push
jmp
push
mov
or
push
dec
push
fs
scas
jae
imul
aaa
lock
into
ja
add
and
cmp
mov
push
mov
fbstp
push
ljmp
icebp
ja
int3
cmc
dec
and
push
or
cmpsl
cmp
mov
add
pop
aaa
xor
mov
dec
inc
in
shll
jns
aas
in
jp
call
fstpl
int3
addb
insl
int3
aas
mov
ret
andb
pop
sub
mov
pop
aaa
xor
sub
ja
pop
jl
lds
fcmovnu
jmp
scas
jp
popf
push
push
clc
ret
aad
or
adc
pop
loop
add
mov
adc
and
fiadds
mov
cmp
data16
adc
or
stc
inc
jo
icebp
fs
cwtl
jns
push
xchg
and
xchg
je
int3
xchg
and
inc
pop
out
cmp
push
inc
int3
cmp
or
std
dec
shll
scas
mov
adc
aaa
aad
xor
stos
popa
stc
leave
cli
les
outsl
push
lock
jmp
sbb
cld
cli
push
inc
in
cli
and
or
adcl
mov
jo
dec
ss
pushf
add
mov
jl
mov
cmpsl
aaa
dec
mov
push
xor
loopne
xchg
pop
or
add
or
adc
stc
adc
push
out
pop
mov
aad
clc
mov
push
mov
in
cmp
mov
in
xor
lret
cltd
or
sub
jl
lret
scas
addr16
cmp
jae
loop
jno
cmp
xor
dec
lahf
jno
dec
sub
mov
cmp
es
mov
out
lods
rcl
pop
mov
call
sbb
lret
imul
mov
mov
pop
jecxz
testl
mov
ss
lahf
adcb
fistl
lea
std
jns
inc
mov
or
andl
ret
jne
pop
xor
mov
and
imull
aam
mov
ss
dec
cmc
xor
cwtl
fildll
sbb
repz
mov
add
mov
push
or
jl
addr16
push
movsl
push
inc
or
inc
popf
xor
fistl
iret
add
mov
jns
cmp
inc
push
aaa
test
xor
int3
loop
fstl
push
push
adc
push
xchg
and
mov
lahf
mov
shlb
xor
fidivrl
push
stos
jo
out
push
mov
sbb
push
sahf
arpl
jge
dec
test
cmp
cmc
insb
es
gs
cmp
call
adc
or
cmc
push
sub
int
pop
outsl
mov
test
shl
andb
pop
in
bswap
out
aad
cmp
lea
loopne
pop
sbbl
int3
sbb
adc
subb
mov
xor
pushf
pop
push
addr16
pop
xchg
pop
inc
push
mov
mov
mov
scas
sub
mov
jg,pn
mov
sbb
pop
mov
and
out
pushf
loop
stos
or
mov
fbld
test
popa
sahf
imul
bound
push
ja
xlat
je
sub
imul
mov
leave
and
repz
mov
int
mov
pop
out
sbb
or
out
xchg
cmp
repnz
jo
push
adcb
sbb
mov
cmp
add
fistpll
sub
inc
add
push
testb
adc
push
and
sub
push
xchg
shrl
inc
mov
dec
xor
jecxz
add
pop
les
pop
scas
sub
push
xor
gs
das
dec
call
aas
enter
aam
rcrb
push
out
inc
or
les
sub
pusha
lock
les
cmpsl
and
ljmp
inc
mov
xlat
out
pushf
inc
addb
test
mulb
mov
cmp
cmp
aam
push
das
out
mov
and
movsb
aas
mov
dec
out
sbb
xor
sahf
push
popf
dec
les
js
or
fsts
mov
inc
push
hlt
xchg
mov
mov
ficomps
sub
testb
in
arpl
sahf
inc
add
or
mov
pop
andl
jg
cmp
xchg
daa
outsl
call
jns
data16
leave
mov
adc
inc
or
cpuid
mov
loop
and
jge
pop
enter
sub
into
cltd
mov
insb
ss
stos
add
sbb
shlb
cmpsb
push
dec
push
leave
push
pop
std
xchg
dec
fldcw
sbb
mov
cmp
stos
cmp
sub
add
subl
dec
fwait
push
movsb
dec
lods
cmc
ret
mov
or
push
aam
xchg
add
pop
insl
jo
jl
push
xchg
lods
shll
sbb
and
sub
flds
dec
xor
outsb
mov
jp
imul
push
xlat
cmp
sub
xor
mov
fnstenv
push
jl
push
cmp
outsb
xor
cmp
in
push
loopne
mov
xchg
xchg
cmpsl
dec
loopne
sbb
repz
mov
negl
xchg
jbe
stc
xchg
xor
jge
dec
popf
xchg
stos
fstp
mov
shlb
sarb
sub
clc
xorl
and
xchg
jno
repnz
aas
das
jmp
jae
mov
into
shrb
repz
xor
push
dec
mov
pop
adc
cmp
faddl
pop
or
cltd
test
pop
pushf
xor
lods
jp
mov
insb
test
xchg
cltd
and
ds
daa
cmpsl
addr16
cld
stc
mov
sbb
dec
jnp
daa
ds
pop
mov
imul
scas
cs
fcoms
je
inc
mov
sbb
imul
lret
or
mov
mov
dec
arpl
push
daa
mov
push
xchg
test
iret
mov
pop
test
jno
sub
lods
adc
stos
mov
sub
mov
sbb
cmc
add
mov
and
xchg
rcl
and
enter
sub
add
mov
jbe
push
int
sub
pop
xchg
daa
fs
scas
cmp
fdiv
inc
loopne
enter
pop
mov
xor
pusha
jl
pop
sbb
lcall
test
roll
out
mov
pop
cmpsb
pop
insl
xor
test
pushf
or
bound
xor
sub
iret
sarb
leave
aad
add
addl
mov
in
es
jne
mov
mov
mov
stc
stc
jb
in
outsl
rorl
adc
call
cmp
inc
push
add
mov
lret
adc
in
mov
lock
cltd
out
dec
out
hlt
fcompl
fidivrl
jmp
dec
fdivs
or
pop
sbb
dec
imul
cmpsl
or
inc
jg
or
xor
fstpl
xlat
test
inc
or
call
jge
loope
sub
or
cmp
outsl
lahf
mov
mov
in
xchg
pop
jae
into
popa
push
cs
pop
push
stc
popa
outsl
in
out
test
xchg
pop
add
lahf
xor
scas
popa
ja
push
xor
stc
mov
mov
popf
pop
mov
mov
push
lock
es
test
in
xchg
dec
jne
sub
flds
fmulp
mov
incl
xor
adc
fnstcw
fbld
cmp
and
mov
nop
adc
dec
adc
outsb
push
xor
iret
mov
push
arpl
mov
pop
xchg
push
std
movaps
pop
xor
mov
mov
or
mov
enter
xorl
sbb
mov
into
mov
ret
jmp
push
jae
fidivrs
push
mov
pop
aad
mov
lds
hlt
jae
cmp
jnp
ljmp
add
pop
mov
mov
pop
push
jecxz
cmp
rolb
cmp
mov
js
out
mov
cmp
xor
imul
xchg
aam
xchg
test
xor
inc
mov
in
mov
xor
cwtl
pop
xchg
outsl
dec
cmp
sbb
movsl
dec
mov
dec
aad
inc
lcall
inc
jno
fucomp
test
pop
mov
inc
cmp
xchg
sbb
test
clc
notl
fisttps
or
lret
mov
xor
mov
fisubrs
xchg
mov
test
mul
mov
outsl
movsl
jmp
mov
xor
cmp
es
imul
sub
sahf
adcl
mov
inc
mov
ja
sbb
in
mov
mov
xor
cs
in
cmp
rcrl
mulb
cld
or
insb
or
pop
popa
mov
jle
fsubrs
and
cld
sbb
stos
test
movsb
or
leave
pusha
dec
imul
test
push
lcall
sbb
lahf
push
testl
scas
adc
and
fsubrl
lods
sub
mul
int3
mov
fisubrl
sarb
xchg
iret
lock
inc
jp
movsl
sbb
cmc
fstl
test
out
cmp
jmp
popa
inc
lret
sarl
mov
jnp
push
jle
int
in
xlat
lea
jge
sarb
or
data16
imul
testl
jbe
ret
arpl
jno
push
adc
adc
sbb
and
cld
or
aas
xchg
scas
xor
adc
xchg
iret
jge
in
mov
repz
es
mov
dec
add
scas
jle
xor
bound
popf
dec
and
mov
mov
xchg
aam
inc
into
pop
adc
orb
mov
adc
fsubrl
sub
or
sbb
mov
stos
adc
inc
pop
mov
mov
fcomps
dec
std
loop
das
lret
push
cmp
xor
mov
dec
pop
mov
mov
mov
jns
js
dec
pop
xor
cltd
loope
fnstsw
xchg
push
add
adc
add
sbbb
outsl
cmp
and
out
dec
inc
imul
xchg
cld
stos
mov
mov
jbe
add
hlt
xchg
sub
cmp
ffreep
xchg
pop
into
sbb
and
mov
adc
add
mov
sub
in
notb
out
add
lcall
inc
icebp
std
xor
jmp
lcall
or
mov
lds
jnp
mov
fs
xchg
outsl
repnz
inc
frstor
lcall
rcr
outsb
cmpsb
sbb
inc
popa
fisttpl
jne
mov
hlt
mov
mov
ljmp
pop
mov
jp
cmc
adc
lcall
jno
testl
cmp
xchg
jmp
jl
scas
jecxz
push
sub
or
gs
mov
fimull
cmpsl
or
scas
push
loope
shlb
dec
jg
jno
xchg
sbb
movsl
daa
xor
iret
xor
mov
mov
sub
mov
ljmp
jmp
gs
lock
mov
js
mov
pop
mov
stc
test
or
pop
jns
push
pop
fidivl
in
scas
jno
je
xor
clc
mov
mov
inc
sbbl
and
adc
pusha
fwait
xor
add
mov
xor
popf
pop
dec
push
lret
fbld
sbb
push
sahf
or
push
and
mov
outsl
cmpsl
or
loopne
cmpsl
inc
inc
xor
push
clc
xchg
mov
mov
ffree
push
mov
pusha
stos
sbb
push
push
jmp
sti
addr16
aam
and
or
pop
sbbl
loop
int3
xchg
jns
and
push
push
or
fcmovnb
xchg
fildl
addr16
push
out
pop
dec
das
mov
ret
cmpsb
icebp
pop
ret
mov
sahf
and
sub
lds
lea
mov
mov
into
sbb
cmp
xchg
sahf
dec
adc
pop
popf
jl
xor
adc
mov
stos
lcall
popf
xorl
add
xor
xor
mov
mov
cmp
mov
addb
mov
and
sahf
mov
pop
push
outsl
nop
imul
xchg
add
sti
popf
ret
adc
push
jb
out
and
jno
aam
push
push
pushf
xor
sub
out
pop
mov
lcall
rcrb
sbb
mov
xchg
adc
adc
cmc
fmulp
cmp
pop
aas
mov
and
in
stos
xchg
dec
jbe
add
dec
imul
fcmovnbe
mov
and
shr
or
mov
cmpsb
mov
dec
int
jp
lock
sub
andb
orl
mov
lcall
and
test
mov
test
test
stos
xor
test
and
daa
xor
lret
dec
push
push
jno
dec
push
xchg
jmp
or
popa
xchg
adc
push
jae
xchg
cmpl
push
rcrl
push
cmpsl
cmp
aad
jl
push
in
cwtl
adc
jns
jne
cmc
xchg
pop
out
out
sub
jl
sbb
mov
jbe
in
rcrb
jae
pop
push
and
push
add
sbbl
gs
fimuls
outsl
cli
adc
push
mov
fdivr
cmp
or
jnp
mov
mov
sar
xchg
or
or
jecxz
sub
fsubrs
in
jecxz
cmp
test
in
xchg
cli
mov
add
jno
add
mov
jnp
jle
aas
jns
xor
cli
ret
mov
cs
xlat
ds
fcomi
sub
test
jno
das
insl
xchg
dec
cli
cmp
int3
pusha
push
call
jne
xchg
or
mov
pop
cwtl
jno
mov
lahf
int
pop
ss
cmp
jae
jge
mov
adc
aaa
bound
fmuls
notb
ret
gs
scas
pushf
daa
sub
lock
fnstsw
xor
lahf
outsl
xchg
das
es
test
jnp
mov
loopne
loopne
push
add
xor
je
xor
mov
adc
mov
pop
jo
jmp
mov
jnp
pop
pop
push
loop
lret
mov
xchg
inc
in
ret
adc
and
lahf
adc
jne
xlat
cmp
fsubrl
or
xchg
fisubs
nop
sbb
xchg
xor
out
popa
movl
aaa
xor
rcrl
lahf
arpl
lret
push
shl
fstps
add
nop
movsb
lret
add
mov
pop
mov
xchg
inc
or
es
and
fwait
and
lcall
xchg
out
fstl
jg
cli
inc
int
or
xor
mov
mov
cmp
in
dec
data16
push
mov
xchg
pop
cmp
out
xor
jge
xchg
jge
adc
xchg
pop
test
jbe
add
mov
hlt
or
sarl
cmp
pop
mulb
xchg
sub
xchg
pushf
and
test
je
xor
adc
mov
fnsave
push
and
int
inc
xchg
inc
push
repnz
sahf
pop
xor
and
clc
daa
inc
add
stos
psllq
jb
pop
js
pop
sbb
popf
movsb
loopne
xchg
les
ja
jnp
xor
xor
frstor
sbb
lea
out
xchg
call
dec
mov
sub
xor
arpl
cs
jmp
cmp
fwait
push
inc
cld
add
xchg
lock
outsb
in
jle
jmp
loope
mov
fdivrs
sbb
aaa
add
shlb
inc
and
dec
cmp
push
jl
addr16
and
push
add
and
je
or
inc
fwait
jge
jbe
push
popa
stc
out
push
sbb
movsb
sbb
push
push
dec
es
push
cmp
pushf
pop
push
imul
dec
hlt
stos
dec
cmp
repnz
add
or
inc
fbstp
push
add
sub
pushf
jns
jmp
or
push
inc
mov
or
xchg
push
popa
imul
enter
arpl
mov
adc
mov
sbbb
loopne
cmp
pusha
add
mov
cmp
daa
jge
bound
cmpsb
mov
inc
sbb
dec
daa
loope
out
xchg
test
cld
mov
adc
pop
test
inc
mov
mov
pusha
lock
inc
std
pop
lret
bnd
imul
mov
ret
out
xchg
cld
out
mov
push
inc
xlat
scas
sub
adc
push
push
cs
dec
sub
pop
xor
xchg
out
rcrl
fsubrl
sarl
lds
or
xchg
clc
mov
sar
cmpsb
ret
or
push
andb
js
xchg
jae
add
push
push
inc
call
mov
sub
pop
dec
mov
push
mov
into
sarl
fwait
dec
fwait
push
jmp
push
jl
daa
mov
jmp
mov
push
sub
jnp
in
pop
inc
mov
dec
int3
pop
adc
jl
add
js
bound
cmp
xor
or
push
inc
mov
imul
mov
ja
adc
call
or
stos
aas
int
inc
ds
hlt
mov
test
int
mov
jmp
loope
daa
icebp
and
mov
add
fidivs
inc
sbb
jo
jo
andb
mov
imul
mov
xchg
rcll
mov
les
hlt
mov
sub
adc
push
xlat
data16
lock
or
sub
out
sbb
shlb
xor
push
mov
insl
jno
movsl
nop
mov
cwtl
fisttps
inc
jle
test
dec
mov
lret
movsl
aad
clc
xchg
mov
push
into
cmpb
push
xchg
jmp
stc
dec
cmc
pop
mov
mov
es
int3
dec
fmul
ret
stos
mov
lods
lds
insb
and
fldenv
ss
test
arpl
nop
ja
pop
jae
in
cmp
sbb
orb
push
aad
aaa
rol
pop
dec
xchg
sahf
sub
mov
je
xchg
movsl
add
jp
fbld
jmp
cwtl
cmp
jns
in
mov
cli
mov
xchg
pop
cmp
mov
xor
mov
mov
cmpsl
jno
jecxz
xchg
mov
in
cld
pushf
dec
scas
dec
jnp
stos
popa
ss
btc
push
jecxz
or
inc
pop
or
jge
pusha
sub
ja
sub
imul
adc
or
jle
push
rcl
adc
sbb
mov
das
fsubr
or
ret
inc
jl
imulb
xor
cmp
inc
mov
ficoms
pop
dec
xor
lret
xchg
shrb
jne
das
mov
push
jne
ror
mov
mov
ret
jp
in
or
std
mov
stc
mov
adc
cmpb
pusha
hlt
sbb
dec
lret
in
fsub
xchg
scas
cwtl
dec
jmp
ret
punpckldq
mov
inc
add
rcrl
add
sbb
stos
lcall
in
push
jbe
jle
xchg
xchg
add
pusha
mov
and
pop
in
jo
xchg
dec
jp
out
adc
jo
mov
daa
sbb
sub
lret
adc
call
and
mov
div
imul
or
dec
sbb
sar
hlt
inc
aas
jp
add
shrb
imul
out
jecxz
cld
xchg
leave
cmp
mov
inc
sbb
mov
jle
mov
adcb
pushf
insb
outsl
or
jmp
push
call
sbb
into
adc
push
xor
push
enter
mov
mov
pusha
dec
inc
dec
mov
aas
icebp
cmp
imul
daa
mov
or
mov
loope
inc
into
push
movsl
push
xchg
test
rcl
push
sbb
fsubrl
push
icebp
jnp
add
repz
add
rcl
stc
mov
push
jg
inc
das
dec
and
pop
lcall
in
dec
sub
pop
pop
das
dec
scas
stos
push
fstps
popa
push
cli
aad
aam
outsl
stos
retw
clc
es
jmp
jo
mov
or
dec
or
stos
and
lods
mov
imulb
dec
push
mov
jmp
mov
jecxz
adc
aad
pop
pop
adc
jne
xor
repz
and
push
sbbl
xor
dec
rolb
and
mov
cmpl
xchg
pop
jmp
test
outsl
mov
arpl
popf
mov
lods
jns
stos
shrb
push
nop
jae
push
int
jmp
push
mov
mov
adc
fsubs
aad
pop
ja
mov
jae
add
popf
or
lods
xor
xor
test
jns
mov
lods
dec
movsl
int3
jnp
cld
call
pop
push
fldl
adc
aas
dec
das
jle
xor
cmc
sbb
fildll
jae
bound
sub
daa
push
outsb
dec
inc
insb
cmc
into
outsl
inc
addl
sahf
mov
fisubs
lahf
mov
aaa
pop
mov
jl
sub
dec
jmp
and
rorl
outsl
mov
add
movsb
mov
adc
inc
mov
sub
daa
add
cmp
test
int3
mov
jecxz
push
mov
lret
add
push
push
je
pop
stc
nop
sti
rcrb
add
mov
bound
inc
sub
adc
jg
pushf
sti
lret
mov
loope
loope
pop
int3
add
mov
fstps
lcall
sbb
fimull
add
jns
cwtl
adc
adc
push
pop
negl
inc
lret
rol
jge
je
sub
cli
cld
add
rcll
and
add
jo
adc
data16
and
jmp
lret
lahf
insb
out
and
sbb
mov
int3
js
sub
in
aaa
popf
lea
and
cmp
cmp
jne
imul
and
push
pop
dec
lock
cli
jbe
scas
outsb
rolb
andl
pop
push
xor
scas
inc
stc
insb
test
cld
orb
loop
xchg
andl
stc
subl
movsb
repz
push
in
inc
mov
aam
cmc
call
sub
push
cmp
bsf
jcxz
lcall
sarl
stos
push
int3
mov
pop
insb
mov
ret
xchg
lock
jne
xor
xchg
or
adc
dec
popf
jp
cwtl
inc
xchg
mov
cmp
inc
sbb
inc
cmp
fldenv
or
jo
vpcmpeqb
jne
out
dec
mov
sbb
cmp
xorl
fstl
jae
jecxz
sub
arpl
mov
fwait
cmc
add
fisubrl
ss
inc
push
cld
mov
fildl
jae
mov
hlt
sub
jmp
lea
dec
clc
aaa
cmpsb
scas
adc
or
test
mov
int3
mov
in
lcall
outsl
out
loopne
dec
mov
aaa
shll
mov
cld
mov
add
in
mov
add
fmul
ficompl
xlat
stc
loope
jp
cs
popa
clc
sub
jp
push
inc
movsb
and
lods
sub
js
aas
mov
or
mov
pop
ret
insl
in
sub
pop
shrb
mov
test
pop
cmp
jl
lds
mov
fidivl
aad
jl
jmp
dec
jno
es
inc
add
jle
pushf
faddl
cmc
leave
daa
iret
sub
and
mov
inc
aad
push
or
jge
ljmp
mov
ja
pop
mov
sbb
orl
rorl
data16
mov
mov
in
icebp
lds
hlt
arpl
push
test
lret
call
shlb
push
test
imul
popf
pop
dec
fimuls
mov
xchg
xchg
enter
dec
xchg
add
lret
cmp
js
jne
les
inc
and
push
cmp
cmp
lretw
and
lds
add
repnz
mov
stos
lcall
push
cmpsb
cli
mov
mov
and
mov
adc
testl
inc
repz
mov
fldt
imul
xor
adc
mov
aas
imull
nop
jno
ljmp
pop
or
stos
xchg
or
in
inc
insl
shlb
stos
gs
lea
dec
inc
mov
xor
ffreep
xchg
pop
lods
loopne
jns
fmulp
mov
push
jne
jl
repnz
scas
ja
pop
loop
sbbl
das
js
lcall
xor
lret
dec
xchg
fimuls
std
das
cmpsl
dec
sub
cltd
icebp
xchg
ret
dec
inc
stos
mov
iret
mov
mov
push
push
mov
and
rcrl
jl
push
addb
jne
cmc
inc
shll
sub
jle
xor
and
lea
mov
jne
xchg
aas
mov
cwtl
mov
jge
dec
pop
hlt
add
in
fldcw
out
jbe
or
pop
xor
jp
mov
jecxz
dec
lock
stos
xor
and
push
hlt
push
inc
pop
push
pop
jb
mov
repz
sub
add
int
xchg
dec
scas
mov
ffreep
in
inc
dec
adc
daa
mov
add
daa
jle
mov
movsl
jae
pushl
xchg
fadds
pop
lret
mov
ret
pop
and
jmp
push
pop
ds
inc
xchg
lcall
xlat
rorb
subl
xor
scas
in
and
jnp
push
sub
insl
push
icebp
jle
mov
add
or
xchg
mov
pop
cmc
pop
scas
imul
xor
sub
xor
std
out
out
test
pop
jne
testl
and
std
push
test
push
cmp
fcoml
clc
add
inc
ds
iret
or
cmp
mov
and
imul
sub
lret
andnps
pop
push
je
in
pop
mov
ret
push
js
xor
or
inc
es
xor
or
mov
cmc
xor
nop
cmp
cmp
inc
arpl
jge
adc
pop
rolb
cltd
in
and
fistpll
inc
push
das
pop
cwtl
and
xor
sti
cmp
aaa
sti
lods
push
and
xchg
cmpsb
mov
add
setae
add
cmp
lods
test
xchg
cmp
push
dec
test
std
mov
sti
popa
bound
push
add
and
sub
push
push
sub
dec
sub
xchg
xchg
fwait
xchg
scas
jg
xchg
scas
ss
add
fnsave
mov
and
adc
add
mov
hlt
fists
or
mov
add
cld
js
jae
movsb
jecxz
cli
push
leave
pop
mov
xchg
leave
aaa
repz
adc
stc
jmp
outsb
and
jnp
and
lods
push
movsl
and
dec
out
lock
cmp
int
mov
outsl
cmp
sub
hlt
std
xchg
fcoms
ljmp
add
mov
into
inc
test
sub
daa
je
mov
adc
xor
cmp
jl
mov
aad
pop
cmpsb
aaa
fnstenv
adc
out
or
or
cmp
notl
mov
es
sarl
popa
outsb
je
and
test
pop
xor
enter
inc
stos
aam
pop
inc
and
out
jl
adc
mov
push
xorb
mull
shr
add
push
aas
cmp
pop
jbe
jg
inc
xlat
mov
stos
dec
pop
cmp
insl
push
lods
popf
mov
jno
add
mov
ja
mov
pusha
data16
mov
mov
mov
mov
adc
and
ret
insl
inc
sbb
mov
test
movsl
push
xor
aaa
pop
dec
mov
jge
gs
adc
icebp
adc
pusha
xor
sarb
mov
out
and
and
pop
out
repz
adc
sbb
xor
push
and
pusha
pushf
out
dec
daa
mov
dec
mov
pusha
jb
loope
or
jno
sub
test
sbb
out
scas
fwait
sar
fstpt
xor
in
dec
test
scas
mov
cmp
loop
in
add
jmp
roll
or
mov
push
inc
in
testb
outsb
lods
daa
out
cmc
mov
nop
in
shl
sbb
outsl
mov
lcall
int
or
add
xchg
sbb
mov
jecxz
mov
adc
and
cmovb
push
int
lods
loopne
fsubrl
sbb
mov
sti
mov
xorl
adc
stc
mov
jbe
jmp
xchg
outsl
jb
sbb
lods
xchg
jns
nop
bound
in
jno
fwait
pop
mov
pop
ljmp
sub
mov
lods
fmul
sub
call
push
jecxz
xchg
cs
popf
add
arpl
lea
nop
mov
test
push
rclb
fidivrs
jecxz
daa
pop
push
sub
mov
add
mov
mov
xchg
dec
hlt
pop
lret
shll
and
lcall
setl
inc
in
mov
cmpb
in
lods
sarb
scas
sbb
call
cmp
jg
jnp
jmp
dec
loop
mov
jmp
out
sub
mov
stos
mov
sub
fsts
cmp
adc
xor
sub
pop
scas
pop
adc
cmp
dec
lds
test
push
rcrb
push
jmp
pop
popf
push
mov
inc
and
xchg
ret
faddp
add
add
repz
dec
loope
xor
in
insb
xchg
xchg
lcall
mov
xchg
mov
cmc
iret
jle
adc
mov
int3
pop
push
test
cmp
sbb
mov
fdivrl
ret
test
xlat
movntq
push
pop
mov
add
aad
movsl
inc
test
or
data16
mov
imulb
jne
jns
mov
lods
or
inc
inc
and
adc
mov
je
pop
xchg
fdivrs
in
sub
push
scas
cmpsb
or
mov
or
pusha
fiaddl
movd
sub
inc
cmp
inc
cmpsb
or
sbb
lds
xchg
punpcklwd
lods
test
fimull
jl
clc
sbb
mov
mov
fcoms
mov
ss
pop
das
xchg
std
mov
aam
mov
or
mov
push
lret
je
mov
xchg
sbb
add
clc
xor
xlat
push
data16
sub
imul
cli
arpl
int
in
cmp
xor
repnz
mov
sub
aas
mov
call
xlat
push
push
dec
sbb
loop
test
jnp
lahf
cli
push
sbb
nop
xchg
or
movsl
insb
or
ret
int
ret
inc
lret
dec
and
icebp
sbb
add
add
in
out
arpl
push
aam
dec
xchg
xchg
jl
mov
je
push
xor
dec
adc
xchg
pop
and
fists
pusha
mov
shrl
mov
lahf
lret
shlb
lret
mov
cmp
mov
jne
dec
xor
or
loopne
cld
push
lret
dec
xor
xchg
or
iret
push
repz
dec
loopne
test
inc
sti
fsts
push
out
insl
movsb
movsb
push
icebp
mov
imul
je
int3
mov
xchg
jbe
gs
adc
adc
sbb
repz
cwtl
imul
bound
sub
pushf
cmp
dec
pop
mov
ja
hlt
shll
dec
push
fs
mov
mov
scas
sub
imul
sub
outsl
lea
int3
sbb
pop
shrb
fisubrl
sub
xchg
cmpsb
arpl
sub
mov
aam
les
add
test
mov
leave
test
cmp
xor
cmp
out
jbe
fs
in
jb
xchg
out
enter
fdivr
mov
xor
dec
xchg
adc
aam
fisubs
out
pusha
or
inc
insl
inc
outsl
out
bound
mov
scas
cmp
add
adc
xchg
adc
lds
push
out
and
popa
push
idivb
push
fwait
cwtl
jl
roll
jle
mov
dec
outsl
aaa
orl
jb
mov
pop
sbb
int3
flds
ret
arpl
and
add
pop
mov
or
jl
xchg
dec
xor
cld
push
pop
ljmp
mov
and
fists
out
lcall
aaa
lea
shlb
dec
sub
jl
sub
xchg
stc
jle
fadd
pop
cltd
js
push
cmp
jnp
mov
pop
adc
jns
xor
push
stos
inc
and
dec
cwtl
inc
adc
je
jnp
add
xchg
hlt
adc
and
pop
xor
into
mov
jne
roll
jb
aad
repz
jnp
pop
sbb
cld
shlb
dec
cmp
jp
and
js
aad
cmpsl
stos
mov
in
mov
in
cmp
stos
repz
sti
dec
xlat
imul
push
loop
roll
ds
mov
xchg
mov
push
lahf
mov
cmp
fadds
cmp
push
jno
hlt
jae
sub
shrl
pop
insb
adc
lock
cmp
test
int
jnp
add
adc
into
pop
xchg
in
jnp
cld
add
cmpsl
mov
jb
jp
push
mov
inc
jmp
jb
cli
and
loop
dec
mov
pop
sub
sub
gs
out
adc
mov
mov
leave
xor
sbb
movsl
lds
jmp
pop
push
sub
xchg
or
sub
loop
dec
sbb
pop
xchg
cmc
inc
xor
ljmp
je
gs
and
xchg
mov
aaa
mov
test
nop
int
nop
push
xor
jp
shlb
mov
mov
add
leave
push
pop
ss
add
mov
lea
pop
inc
test
movsb
mov
push
movsb
mov
sbb
add
cs
push
pop
xlat
mov
out
sub
add
fs
mov
add
inc
gs
jge
roll
scas
mov
into
in
or
pop
ja
or
jl
dec
xor
testl
sub
jne
jns
or
pop
mov
shl
sbb
xlat
pop
inc
ss
icebp
xor
adcb
lock
in
mov
dec
sub
out
xor
jl
das
or
popf
clc
cs
cmp
repz
mov
push
lret
push
lret
das
pop
cld
jp
adc
inc
pop
pop
xor
inc
or
js
lods
add
shlb
mov
pop
cmp
pop
and
fwait
jbe
adc
aas
daa
mov
inc
pusha
xchg
sub
fmull
push
and
or
adc
dec
enter
test
jbe,pt
out
or
int
mov
dec
rcrb
jo
cmp
aas
or
aas
ficoms
sub
out
ja
inc
negl
pop
leave
mov
test
in
mov
data16
in
sub
pop
mov
adcb
rcl
add
adc
pop
repz
xor
xor
push
pandn
aas
mov
fdivr
adc
add
bound
cmp
push
dec
adc
adc
lcall
mov
inc
and
sub
movsl
aaa
mul
rorl
ret
sbb
sbbb
rcrb
push
in
leave
icebp
mov
pop
mov
scas
jp
out
int
test
mov
mov
daa
mov
inc
lcall
lock
jno
or
das
jbe
mull
inc
repnz
jle
push
add
in
sub
fs
sbb
shlb
mov
dec
mov
mov
dec
mov
or
movsb
std
dec
push
aam
aam
mov
xchg
cmc
inc
scas
clc
jo
mov
add
shlb
xor
pop
xchg
insb
insl
nop
add
out
cld
mov
lock
and
pop
pusha
mov
clc
cmp
out
jg
in
inc
cli
fwait
repz
in
dec
ds
addr16
cmp
cmp
adc
in
js
pop
gs
filds
xchg
out
lods
es
ret
cmpsl
dec
dec
push
enter
into
and
lock
inc
aam
shll
mov
into
cs
mov
out
or
mov
jecxz
dec
xchg
daa
cmp
jns
addr16
cmp
jno
jmp
mov
enter
and
and
jmp
ret
xor
inc
jl
adc
jecxz
insl
jecxz
dec
cmpsl
mov
pushf
pop
jp
add
arpl
sbb
adc
lea
mov
dec
ds
push
in
inc
jne
stc
into
fcompl
cmp
mov
imul
add
push
or
mov
and
add
mov
push
and
sub
xchg
mov
decl
je
rclb
push
add
or
sbb
popf
shrd
sbb
sbb
loopne
ffreep
inc
cmpsl
aas
mov
adc
cltd
pushf
jl
jecxz
dec
fnstcw
repnz
mov
insl
inc
js
mov
mov
jl
mov
jge
mulb
xlat
je
outsl
es
xchg
fbstp
loopne
push
dec
popf
bound
int3
enter
xchg
and
lods
pop
fcmovnb
xor
xchg
and
xchg
push
add
sbb
cmpsb
sub
xor
cmp
sub
cmpl
pop
mov
lcall
adc
dec
cmpsb
lret
push
pusha
mov
cmp
sbb
sub
ret
jnp
lea
mov
xor
fsubrs
pop
sbb
and
arpl
stos
ficompl
test
mov
rorl
and
or
mov
cmpb
fnsave
xchg
mov
push
dec
jnp
fiaddl
jbe
into
dec
sub
into
imul
ret
adc
lret
or
mov
push
xor
jle
test
mov
jnp
in
insb
test
and
pop
roll
jne
outsb
xlat
jecxz
dec
adc
and
stos
add
movsl
jecxz
mov
dec
pop
mov
xchg
mov
cli
adc
testb
and
mov
insl
jno
xor
lock
mov
dec
nop
push
pop
rorb
sarb
xchg
ds
adc
dec
lret
pop
mov
dec
inc
jg
out
inc
mov
pop
pop
mov
pop
mov
xchg
sbb
test
fstpl
push
mov
inc
sub
addb
xor
adcl
jmp
pusha
daa
imul
pop
jmp
pop
push
jae
ret
sbb
jle
outsl
add
cld
mov
push
jnp
cmp
jp
lret
pop
lret
dec
dec
es
fdivr
push
rolb
cltd
lds
lea
ljmp
in
cmp
cltd
xlat
mov
pop
sbbb
add
xor
stos
lahf
or
pop
cmpl
adc
mov
xor
lods
mov
mov
add
rcrb
mov
aaa
mov
jae
push
or
shll
push
xor
push
mov
ret
adc
dec
out
cwtl
xor
jge
cmp
add
adc
test
add
popa
xchg
lea
sub
cmpl
cmp
stc
xchg
jmp
ret
lcall
fisttpll
fists
sti
cmc
stos
int3
insb
mov
sub
xchg
fmull
stc
dec
push
mov
je
lcall
loop
inc
daa
and
dec
xlat
mov
sbb
stc
mov
dec
ljmp
mov
jae
movb
fwait
sti
lock
push
out
adc
aad
stc
cmp
es
xchg
repz
je
in
popa
aas
sbb
aas
shll
mov
daa
add
ss
mov
cmp
adc
inc
xchg
in
arpl
adc
add
aaa
hlt
popa
xchg
mov
sbb
xor
fadds
pop
jle
out
dec
sub
add
xchg
arpl
stc
inc
xor
sbb
cmp
mov
mov
shll
out
and
add
cmp
fadds
or
jge
std
std
adc
jecxz
xchg
xor
clc
sub
cltd
push
add
movsl
test
loope
divb
ss
adc
aad
or
sbb
jns
stc
cli
mov
shrb
jmp
mov
sub
xorb
das
test
inc
xchg
cmpl
push
cmpsb
leave
repz
mulb
cmp
test
lock
add
add
inc
dec
movsb
hlt
jb
pop
add
aaa
adc
or
sar
jg
jp
or
pop
cld
mov
xchg
push
fstl
jp
pop
mov
mov
jb
add
mov
inc
pop
loopne
push
mov
sbb
mov
icebp
adcb
jp
mov
aaa
xchg
push
jo
bound
xlat
sub
push
fistpl
dec
dec
sub
sbb
mov
cmp
popf
imul
ficompl
mov
pop
pop
leave
sub
leave
fcoml
push
call
imul
daa
sub
inc
rorl
xchg
fistps
iret
or
or
mov
pushf
loope
mov
ljmp
inc
mov
lods
pop
sbb
xchg
leave
sahf
xor
pop
and
jge
nop
je
test
sbb
jno
wbinvd
dec
leave
xor
push
fwait
lahf
daa
pop
test
and
push
push
stc
rorb
add
xchg
jg
xor
inc
and
stos
aam
loope
hlt
in
mov
xlat
lods
shrb
cmpsb
lods
repnz
push
ja
sbb
dec
xchg
shrb
fsubl
outsl
mov
and
int
inc
scas
adc
test
lods
add
jmp
mov
and
inc
mov
in
sbb
popf
mov
mov
cmp
pop
leave
pop
shll
jle
hlt
fistpll
add
add
xchg
mov
test
push
fists
out
push
mov
jno
mov
shll
das
jle
aas
lea
sub
cmp
lret
adc
test
pop
lret
dec
sbbb
outsb
stos
pop
pop
repz
fmull
add
icebp
xchg
dec
xchg
ret
repnz
inc
pop
lods
in
outsb
jge
push
hlt
in
popf
jg
adc
push
push
xchg
jg
mov
bound
rcl
and
fimuls
sarl
sbb
fildll
je
inc
sbb
push
cltd
mov
mov
stc
lods
or
dec
xchg
xor
test
repnz
xor
lock
es
push
adc
and
shll
inc
mov
shrl
pushf
and
dec
mov
leave
push
xlat
fnstenv
shrb
dec
inc
xlat
pop
shlb
xor
insb
inc
fs
sbb
lcall
xor
dec
mov
in
pushf
imul
test
inc
jp
cmp
inc
scas
out
pushf
pop
outsl
and
xor
jbe
in
imul
pop
add
mov
pop
test
pop
mov
cld
adc
and
pop
cmp
sbb
xor
das
out
aaa
popf
pop
xchg
push
int
or
or
rcrb
push
out
mov
je
test
xor
ret
push
imul
rcrb
std
and
cmp
addr16
les
ljmp
cmp
cmp
test
xchg
cwtl
idiv
leave
scas
scas
ds
movsb
xor
push
loop
xchg
and
pop
mov
mov
sub
repz
sbbb
pusha
sub
popa
iret
add
push
push
leave
cmp
js
mov
arpl
push
adc
icebp
rorb
ja
sub
push
mov
popf
sub
or
outsl
movsb
test
icebp
xchg
scas
add
insl
lods
xor
jno
xchg
data16
cmp
cmp
pusha
mov
push
aad
das
and
sbb
xlat
jbe
inc
mov
adc
clc
pop
xchg
incb
shlb
addl
mov
add
dec
scas
orb
dec
out
out
pop
addr16
lret
mov
push
addb
jno
sub
push
cmp
dec
mov
pop
sbb
dec
stos
ss
push
mov
jle
test
xchg
shll
fstps
jmp
add
enter
dec
and
cs
iret
repnz
xor
lcall
and
fldenv
rcr
test
cmp
or
lret
cmp
loopne
mov
sub
jmp
pop
xchg
sbb
lret
sub
rcrl
sbb
rolb
dec
inc
int
aas
daa
movsb
adcb
fisubl
push
jg
inc
sbb
jne
xor
push
mov
xchg
fnstenv
test
fstpt
shlb
test
mov
pop
sub
xchg
add
in
add
push
lock
push
jno
pop
mov
jle
loopne
ss
and
pop
adc
cmp
lcall
or
sbb
mov
sbb
push
arpl
ja
dec
int3
les
fisubs
push
out
jmp
add
sbbl
std
xor
adc
adc
dec
scas
pop
loope
fidivrs
cmp
and
or
or
sub
out
imul
imul
pop
stc
xlat
std
ljmp
insl
fists
sarl
mov
movsl
inc
daa
pop
jmp
call
fistpl
in
xor
into
xchg
dec
xchg
andl
inc
jne
jne
sub
or
pushf
mov
shl
imull
lods
mov
lret
aam
push
loop
mov
dec
stos
lock
fsubrs
imul
outsl
andl
lea
es
inc
mov
push
cmp
outsl
mov
loop
xchg
mov
sub
mov
pusha
adc
sbb
push
adcl
mov
lret
mov
cs
and
imul
cmpsl
shl
mov
lods
fstl
mov
mov
sub
fiaddl
cli
cmp
mov
sbb
cwtl
addr16
movsb
or
fmulp
sbb
inc
arpl
lods
pop
cmp
sub
push
xchg
rorl
mov
inc
jg
and
pop
xor
dec
jg
and
sbb
shlb
xchg
scas
pop
mov
repz
lret
arpl
test
frstor
add
into
push
pushf
lret
aam
mov
outsl
sub
push
flds
mov
out
stc
xchg
outsl
lods
lods
cwtl
xchg
add
jnp
arpl
jp
lret
lds
das
insl
into
movsb
mov
inc
sarb
sub
scas
movsl
in
out
mov
mov
imul
sbb
pushf
ret
jns
add
jge
inc
xor
cmp
dec
into
std
lahf
daa
lods
push
mov
sbb
push
imul
gs
push
int3
test
pushf
mov
sbb
mov
outsl
jns
xlat
repz
dec
scas
lret
pop
pop
cmp
xchg
adc
es
lods
jmp
js
lret
pop
std
insl
push
sub
repz
mov
lret
jbe
mov
fcomi
and
adc
lahf
cmpsb
lds
or
xor
inc
push
cmp
mov
lret
pop
jae
cld
pmulhw
xor
mov
or
jg
add
sahf
cwtl
mov
bound
fildll
add
mov
fildl
cs
add
jmp
cltd
bound
fistpll
sarl
out
es
filds
cli
jb
cld
mov
push
lds
faddl
hlt
xor
adc
popa
loopne
and
dec
jge
jle
loope
inc
xor
inc
or
incb
jle
pop
nop
sub
dec
push
pop
shr
stc
adc
inc
cmp
leave
aad
dec
sub
jp
loopne
sub
jb
adc
sbb
mov
popl
jb
jg
ret
sub
fdivl
xor
xor
push
bound
dec
lods
cmpsl
ret
sbb
cwtl
xchg
lret
cltd
lret
movsb
bound
setge
xchg
test
push
push
sub
push
or
mov
mov
inc
xchg
mov
aad
inc
sub
mov
shrb
cmp
or
xor
mov
loope
aad
push
cmpsl
aam
imul
xchg
cmp
jns
pop
jno
addr16
pop
popa
mov
inc
ret
and
aaa
mov
in
sarl
add
jp
shrl
ffree
and
pop
into
sbb
ja,pt
xor
add
aam
cmp
mov
and
xor
jo
ficoms
pop
in
cmc
out
cmp
sahf
jns
into
arpl
dec
mov
mov
imul
cmpl
scas
xchg
dec
in
cmp
push
or
sub
mov
jno
cli
subl
in
shrb
lret
call
fidivl
pop
cmc
push
sbb
push
std
call
adc
pop
sub
cmpsl
xor
icebp
xchg
dec
dec
push
xor
addr16
jnp
xlat
push
int3
push
fldcw
repnz
jne
sbb
repz
jle
push
je
inc
or
mov
mov
push
test
push
mov
mov
add
subl
adc
dec
addl
sbb
pop
mov
inc
cmpsl
imul
jbe
mulb
jg
cld
inc
pop
popf
sti
lods
mov
push
rorl
ljmp
js
lods
adc
ja
aam
push
in
pop
push
jp
xor
imul
dec
and
xor
lret
or
xor
enter
add
out
sbb
repnz
push
adc
pop
insl
jae
mov
pushf
nop
dec
push
push
addr16
pop
in
add
insl
jmp
pop
test
xchg
stc
lods
pop
pop
jecxz
pusha
sbb
faddp
clc
jae
je
mov
mov
popf
mov
and
arpl
dec
mov
push
pop
std
inc
mov
into
push
es
push
inc
cmp
push
jbe
sahf
decb
sub
inc
jle
cltd
cmc
faddl
jbe
stc
outsl
repnz
xchg
lods
ds
loope
jmp
test
pusha
dec
pop
notl
rolb
leave
lock
mov
mov
sub
pop
or
pop
fisttpll
mov
xor
xchg
jb
add
or
fcmovnbe
test
out
mov
enter
push
xor
scas
repz
test
pop
aas
jl
hlt
mov
cmp
test
xchg
outsb
movsl
jg
lods
fstpl
in
push
sahf
mov
into
or
js
jae
cmc
pop
shrb
and
mov
int
dec
repnz
sub
xor
pusha
mov
out
imul
jmp
repnz
pop
popa
hlt
cmc
in
enter
inc
loope
insl
aam
movsb
notb
xor
jbe
jmp
inc
sub
or
and
push
mov
lret
aad
iret
test
xor
jnp
adcl
ds
lret
add
mov
shll
pop
xor
out
dec
dec
mov
loop
stc
js
mov
add
outsb
xor
icebp
in
scas
loop
lcall
les
inc
xchg
pop
retw
es
sti
jl
cmc
test
adc
outsl
js
add
fdivr
fninit
mov
in
sahf
mov
inc
mov
mov
adc
xor
test
fbld
sahf
mov
lea
clc
and
aam
push
mov
clc
out
mov
push
loopne
int
push
push
and
adc
xchg
outsb
push
movsb
repnz
add
cmpsb
jns
loopne
push
clc
push
push
lods
ficomps
lret
cli
or
sbb
dec
cwtl
mov
daa
sti
adc
into
mov
mov
jge
in
ret
ljmp
leave
pop
ljmp
and
es
data16
addr16
mov
mov
addb
push
inc
mov
addl
cmp
push
ds
ds
mov
xor
mov
stos
cmp
and
divb
xor
mov
clc
and
sti
pusha
out
lock
and
and
dec
fwait
sar
sub
repnz
clc
int3
imul
and
lret
lea
or
mov
or
popf
mov
cmp
dec
imul
or
pop
xlat
add
shl
mov
fcmovnbe
mov
xchg
add
cmpsl
xchg
inc
mov
cmp
pop
int3
popf
sbb
xchg
push
mov
fcomp
fsubp
shlb
adc
hlt
shlb
mov
rorl
lds
dec
jl
scas
dec
jno
push
rolb
lods
push
sbb
jle
mov
rcr
cs
out
lret
sahf
inc
cld
mov
inc
mov
test
inc
mov
sub
or
aam
iret
int3
jae
fidivl
sub
pusha
sbb
xchg
mov
data16
inc
pop
mov
ss
mov
nop
or
adc
repnz
loopne
out
sbb
and
pop
mov
cwtl
and
dec
mov
testb
mov
mov
lods
shlb
xor
lea
fimull
cmp
dec
add
pop
add
sti
dec
mov
adc
clc
hlt
inc
ds
cmp
xor
mov
repnz
dec
push
mov
call
loope
pop
or
xor
popf
mov
push
fldl
xlat
dec
add
sti
dec
jl
push
or
jge
mov
lret
sub
shll
enter
dec
add
dec
sahf
or
lahf
leave
mov
sbb
mov
and
lcall
sub
jbe
arpl
push
out
in
cld
outsb
loopne
aam
aam
sbb
push
fnstcw
dec
push
jne
cs
adc
lret
cli
adcl
dec
mov
xchg
idivl
movsb
fidivrl
loope
push
xor
bound
sub
xchg
ficoml
and
xor
adc
pop
pusha
sub
push
test
xor
lcall
adc
or
fs
or
popa
dec
push
mov
je
mov
lret
sti
jb
movsb
ja
fwait
pop
push
icebp
jne
mov
mov
xchg
inc
adc
adc
xor
add
in
imul
and
shll
lcall
push
out
int3
ja
xchg
push
cmp
pop
lahf
movsl
rorb
mov
test
fdivrl
xchg
cs
add
sub
negb
jecxz
dec
push
and
daa
mov
clc
mov
loope
add
xlat
jne
xchg
and
dec
ror
mov
dec
mov
cmp
lahf
call
or
insl
xor
outsl
dec
xor
out
lret
dec
in
out
mov
jle
icebp
shll
push
mov
jno
mov
shll
or
dec
pop
sarl
lret
push
cmp
cmpsb
sbb
push
mov
push
pusha
pusha
in
adc
mov
punpckhdq
add
addr16
rcrb
dec
pop
sbb
dec
mov
daa
cmp
and
xchg
lret
call
repz
cli
inc
fisubs
testl
xor
test
sub
jp
dec
cmpsb
sub
pop
sub
push
loope,pt
daa
xchg
test
mov
xchg
jbe
gs
inc
gs
cli
repz
jo
adc
jmp
sbb
cmp
mov
pop
jl
mov
nop
repnz
lret
mov
mov
xchg
mov
enter
mov
pop
in
hlt
and
imul
sti
push
push
movsb
xor
or
rcll
cwtl
sub
mov
pop
sbb
cmpsl
mov
fldt
clc
add
sahf
add
and
sbbb
mov
stc
je
push
call
inc
dec
add
or
movsl
cmp
or
add
nop
mov
fcomi
ret
ja
repnz
adc
popf
dec
lods
movsl
cmpsl
jns
xor
xor
lahf
mov
pop
mov
dec
sub
xchg
sarb
mov
pusha
sbb
lods
push
ss
cltd
pop
and
adc
jge
cli
lret
sbb
das
shll
cwtl
adc
cmp
ja
mov
loope
sarb
mov
movsl
add
mov
cvtdq2ps
fsubrl
mov
test
sub
leave
jmp
fimull
add
movsb
pop
test
mov
test
mov
push
imul
xchg
pop
mov
movl
pop
loope
das
push
cmc
xchg
mov
sbb
mov
xor
fcomps
push
iret
pop
mov
mov
cmp
xor
and
mov
fnstenv
xor
sti
xlat
mov
sbb
jp
fadds
mov
cmpsl
xor
in
adc
and
mov
es
mov
mov
lds
into
iret
cmpsb
shrl
idivb
aas
push
mov
xchg
mov
add
dec
loope
mov
push
loopne
or
aam
xor
imul
add
sub
inc
clc
or
dec
imul
popa
frstpm(287
inc
es
mov
mov
xchg
mov
cmc
xchg
sbb
xor
icebp
enter
pop
push
data16
add
adc
mull
cli
sub
into
sub
ja
pop
ss
mov
jecxz
ficoms
dec
jae
sahf
and
fistpl
mov
push
sbb
testb
pop
cmpsl
insb
jb
dec
mov
jg
or
xor
clc
push
xchg
in
xchg
mov
fnstsw
sbb
loope
xchg
nop
adc
push
adc
inc
iret
cmp
imul
and
imul
shr
arpl
push
dec
cmpsb
inc
mov
and
push
rolb
cwtl
or
repz
xor
mov
std
in
nop
mov
xchg
div
mov
xchg
or
jl
inc
int
pop
dec
adc
push
outsl
xor
xor
rol
scas
mov
mov
fcomp
test
inc
lock
mov
mov
jne
xor
adc
add
cld
or
pop
into
das
cmp
dec
jmp
mov
jecxz
mov
mov
fildl
jo
cwtl
js
ja
inc
cmp
pusha
out
loop
jae
test
pextrw
jge
mov
cmp
mov
add
into
jno
inc
rclb
sahf
jae
out
lret
pop
pusha
dec
push
cwtl
push
lock
mov
pop
push
xlat
movb
sub
or
push
scas
push
mov
iret
xor
imull
movsb
fcmovnb
xchg
fldl
flds
ds
aam
add
inc
mov
daa
nop
data16
pop
push
test
add
pop
jmp
inc
nop
fadd
insl
inc
mov
aaa
popa
dec
sub
mov
or
jmp
gs
pop
arpl
or
cs
or
mov
movsl
sarb
leave
pusha
repnz
imul
pop
cltd
mov
fadd
xchg
mov
pusha
xchg
xor
out
jo
lret
sub
jmp
dec
ret
pop
cmp
and
aam
fisubs
cmp
out
lea
and
mov
in
pop
dec
push
arpl
bound
lcall
iret
popf
addb
movsb
pop
and
movsb
xor
imul
insl
lea
fldenv
popa
fs
push
xor
mov
fiadds
xchg
lods
mov
adc
xchg
icebp
je
xlat
in
sbb
pop
je
push
jg
jmp
and
cmp
mov
movsb
flds
jne
test
arpl
sub
jnp
and
hlt
dec
push
and
les
sti
dec
mov
in
pop
mov
adc
dec
mov
loope
xor
sahf
lods
cmc
jns
mov
or
dec
out
push
fisttpl
imul
mov
repnz
push
clc
push
fidivrs
inc
cmp
xchg
daa
aad
xchg
xor
sbb
imul
movsb
and
shlb
xchg
or
fwait
clc
cmpsb
bound
enter
push
lret
rcll
push
mov
mulb
sti
enter
inc
stos
gs
mov
cltd
or
adcb
push
out
orb
scas
addr16
movsl
or
xor
imul
push
fcmovnbe
scas
call
add
lods
cmpsb
aad
pushf
lds
inc
roll
sub
adcl
pushf
add
lret
or
loopne
or
add
lea
xchg
and
scas
pop
mov
decl
xchg
mov
inc
cmpsl
test
std
xor
fadds
fcomps
int3
or
test
mov
adc
inc
fsubrs
pop
inc
mov
stos
ss
mov
adc
lods
out
adc
or
loope
xorl
daa
mov
xor
enter
inc
push
add
add
and
sarl
sbb
movsl
in
sarb
dec
xor
or
sub
or
add
inc
lahf
xchg
fnstenv
scas
daa
dec
push
pop
out
adc
sbb
mov
xchg
xor
push
push
mov
mov
das
cmp
or
push
pop
pop
movb
mov
out
and
cmc
call
xchg
sub
in
mov
fstpl
lret
jg
notb
popa
xchg
mov
fs
fsubl
or
pop
xor
inc
pop
jb
in
pop
fwait
popf
fisubrs
jnp
scas
arpl
bound
dec
mov
popa
push
or
pop
add
push
jns
push
lret
enter
shlb
movsl
sbb
inc
fmul
mov
xlat
cmp
push
inc
cmp
pop
dec
pop
mov
push
inc
push
mov
ret
in
in
icebp
and
add
inc
stos
in
inc
out
or
aaa
and
jns
gs
sbb
in
dec
loop
or
xchg
in
mov
int
imul
lahf
jne
xor
mov
aam
hlt
cmpsl
xchg
into
jb
jg
call
pop
dec
push
mov
push
cmpl
dec
sbb
cmp
lahf
fisubrl
cmp
inc
fisubs
ds
and
or
bswap
jge
dec
pop
shlb
mov
scas
sub
testl
mov
or
shll
inc
cwtl
cmp
mov
lds
push
lea
dec
jl
ret
or
sbb
inc
pop
cmp
mov
fdivs
in
push
sbbl
clc
mov
icebp
mov
pusha
xor
imul
jno
dec
push
outsl
and
push
mov
adc
lods
out
add
into
mov
jae
pop
jmp
or
mov
lret
ret
pop
jle
gs
add
movsb
jecxz
cmpsl
daa
fisubrl
sbb
movsl
ficompl
pop
xchg
fidivrl
pop
sub
repnz
fwait
mov
mov
inc
ffreep
stos
pusha
shrb
mov
inc
ret
xchg
fists
xchg
xor
in
loope
mov
loopne
arpl
ss
pop
mov
shrb
mov
inc
or
outsl
ret
fists
mov
pop
jae
mov
inc
ljmp
lods
lahf
nop
mov
ljmp
and
mov
test
jbe
movsb
stc
adc
mov
xor
imul
stos
xor
and
adc
enter
es
or
imul
and
mov
pop
add
mov
mov
fcmovne
icebp
repnz
jns
push
popf
popa
adc
add
jno
fdivp
loop
sub
mov
stos
adc
cmp
subb
pop
aam
mov
adc
out
jp
dec
mov
lock
pop
xor
cld
mov
push
call
dec
rclb
sub
cs
xchg
sub
lcall
lret
lods
loope
mov
mov
daa
xchg
in
sbb
int3
xor
cs
add
mov
mov
push
out
cmpsl
push
jae
data16
fbstp
pop
out
leave
sbb
int
and
movsb
xchg
int3
dec
mov
test
cmp
xor
mov
cmp
xor
push
pop
arpl
and
clc
inc
push
addb
mov
mov
shlb
pop
fwait
ret
shll
push
dec
xchg
xor
jo
pop
adc
inc
jg
lods
inc
pop
xchg
aad
cmp
out
lock
or
cmp
enter
loope
add
adc
inc
pop
push
adc
cwtl
mov
aaa
loope
lea
out
scas
inc
pop
sti
je
and
jmp
out
rorb
push
jae
push
push
inc
pop
fisubs
dec
sarl
xor
jno
arpl
xchg
sub
mov
jnp
out
pop
test
push
mov
jl
or
rcr
fs
jecxz
pop
mov
fcompl
adc
mov
insb
das
mov
mov
mov
cmpl
inc
pop
mov
out
xor
cwtl
lods
sar
push
fstps
jg
or
rorl
push
push
mov
pop
mov
and
cmc
xor
xor
mov
mov
rclb
xchg
and
rol
dec
aad
sahf
mov
insl
movsb
ds
mov
test
ret
jae
fs
jmp
push
setae
scas
push
hlt
pop
mov
mov
sbb
push
out
jge
mov
sar
xor
ljmp
adc
cmp
aas
cmp
gs
cwtd
jne
scas
mov
mov
xchg
aas
xorb
mov
cltd
scas
mov
sbb
sub
xchg
push
nop
out
in
movsl
stos
adc
popa
outsl
adc
insl
dec
add
dec
jge
cwtl
inc
and
iret
sub
frstor
pop
sarb
out
mov
cltd
or
xor
clc
push
mov
andb
out
lock
xchg
sub
lea
dec
dec
jp
into
es
std
sub
jp
arpl
or
pop
ds
stc
out
fldt
test
lods
std
mov
jb
in
mov
jp
shll
inc
std
inc
pushl
and
xchg
notl
xchg
mov
pop
and
bound
bound
iret
dec
imul
mov
cli
pop
jae
add
ret
fnstsw
ja
sub
mov
fwait
out
in
divb
test
mov
call
dec
push
arpl
not
imul
nop
pop
in
fmul
fcmovnbe
scas
lret
call
pop
lock
cmp
out
cmp
scas
push
or
cli
pop
lds
dec
popl
mov
mov
jns
scas
xor
aas
test
daa
or
lock
push
push
test
idivb
xchg
add
fsub
adc
sbb
aaa
jae
mov
or
jne
sahf
sub
cmc
cmpsl
pushf
adc
rcll
fcmovbe
jo
addb
addr16
mov
cld
and
dec
mov
fdivs
xchg
lock
roll
dec
cmpsb
sbb
or
adc
bswap
lea
mov
mov
stos
jecxz
xchg
fidivrl
out
sti
adc
push
xchg
jbe
mov
out
mov
add
xor
add
mov
adc
jb
int3
flds
movsl
mov
adc
test
fwait
sbb
mov
stos
pop
arpl
lea
cmpb
ds
aad
insl
and
cmp
push
jne
push
call
push
mov
mov
in
mov
sahf
pop
jecxz
add
jp
lretw
sbb
in
mov
lahf
popf
or
sub
in
js
cld
lret
jbe
mov
and
mov
int
in
add
sti
dec
sub
mov
adc
jns
insl
loope
ret
pushf
movsl
push
cmova
mov
fnstenv
and
hlt
and
or
mov
cmp
inc
ret
sub
in
es
aaa
cmp
cli
call
test
sbb
adc
inc
mov
cwtl
and
test
add
mov
dec
mov
cmp
adc
mov
mov
push
jne
sub
imul
adc
dec
out
stos
out
jge
mov
ja
xor
push
sbb
push
xchg
adc
insl
mov
int
into
or
jb
cmp
js
add
subl
jbe
mov
icebp
stos
lret
mov
cmp
xor
pop
cli
jnp
mov
je
lret
xor
push
into
xor
mov
inc
jns
les
xlat
jae
cli
pop
mov
aaa
inc
or
mov
mov
ja
loopne
sbb
sbb
pop
out
lods
pop
fadd
bound
push
out
add
xor
push
xor
sbb
stos
js
addr16
mov
ds
repz
cmp
add
test
push
jnp
jl
dec
loop
pusha
and
lods
cmp
sbb
push
inc
idiv
mov
add
movsb
icebp
insl
outsb
or
push
push
int3
repz
mov
adc
or
aas
xchg
inc
push
pop
scas
rorl
imul
scas
mov
js
xor
mov
mov
outsb
and
or
addr16
sbb
jb
mov
jl
or
out
adc
jmp
sub
xchg
adc
fadds
and
fisttps
ret
sar
dec
jo
les
aam
add
jecxz
push
sbb
clc
push
arpl
pushf
lea
add
stc
and
aam
add
popl
cmp
or
xchg
aad
push
cmp
mov
sub
and
push
lret
mov
jp
popa
arpl
and
lret
outsb
cmp
inc
pop
ljmp
enter
cmpsl
fdivp
andb
in
dec
les
add
lds
jbe
xor
movsb
inc
inc
js
adc
mov
in
inc
icebp
fcomi
insb
subl
cmp
jnp,pt
aad
popf
sbb
jmp
jne
cwtl
in
jo
popf
bnd
adc
aas
sti
sub
push
push
dec
fisubs
adc
sti
push
xchg
xchg
pop
xor
cmpsl
or
dec
mov
cmp
mov
leave
xchg
aad
mov
adc
scas
ljmp
repnz
add
push
push
mov
ds
push
in
push
mov
ljmp
daa
cwtl
sub
mov
nop
mov
jg
xlat
mov
das
movsb
add
add
ss
jbe
fisttpll
mov
sub
addl
or
adc
pop
lea
pop
test
leave
mov
xor
sbbb
addl
lea
inc
cmc
fcmovu
inc
sbb
ret
outsl
mov
pop
adc
and
sub
loop
sub
mov
pop
dec
jg
in
mov
xor
adc
cltd
aas
test
sbb
or
lahf
shrb
popa
mov
mov
add
out
call
dec
inc
out
or
repz
push
xchg
push
mov
sbb
rcl
loope
daa
mov
xchg
inc
in
push
cmp
cmp
or
jl
cmp
pusha
jmp
mov
les
mov
cmp
out
inc
ljmp
push
addr16
pop
fcom
pop
lods
xor
lds
je
sbb
add
mov
outsb
inc
push
das
inc
pop
shll
mov
mov
hlt
mov
lret
mov
adc
ud0
insb
jp
push
xchg
mov
js
scas
jecxz
cmp
sbb
sbb
sarl
sar
jge
xchg
adc
ret
fimull
dec
mov
int3
ficoml
jbe
scas
mov
fstpt
daa
adc
xchg
push
cli
mov
mov
dec
rorl
push
mov
fistps
pop
cmp
aaa
popl
adc
xchg
ja
pop
dec
mov
lret
out
adc
and
mov
jo
xchg
jle
cmp
rcrl
cwtl
xchg
pop
ss
data16
sub
in
pop
pusha
je
lods
xchg
iret
ds
and
add
xchg
es
pushf
leave
xchg
mov
stos
sub
inc
daa
dec
push
testb
push
and
enter
shrl
jo
sbbb
pop
mov
mov
sub
insb
fistpll
or
mov
mov
bound
pop
add
mov
push
pusha
or
and
pusha
adc
xchg
cs
push
xor
push
or
mov
pop
and
in
jnp
add
cmpsb
out
int
cmp
je
xchg
leave
xchg
icebp
je
aad
enter
cmp
sbb
test
add
xor
or
mov
mov
leave
push
imul
ret
and
lret
pop
push
in
sub
mov
hlt
popa
es
mov
mov
push
in
inc
dec
lods
imul
inc
insb
fincstp
add
testl
push
insl
jbe
and
scas
lret
shrl
cmp
mov
cs
inc
cmc
push
mov
aam
stos
mov
daa
in
popf
loope
ljmp
push
jecxz
shll
je
arpl
scas
insl
push
mov
jbe
int
jle
mov
xchg
pop
addr16
iret
pusha
add
mov
xchg
lahf
scas
ret
addb
cmpsl
gs
dec
sub
pop
push
aad
or
mov
mov
iret
sahf
sti
pop
dec
test
sbb
sbb
add
mov
xchg
sbbb
and
push
dec
xlat
rolb
aam
jnp
rcll
mov
jmp
cs
insl
pop
std
or
imul
xorb
jnp
stos
jmp
jmp
scas
jno
pop
into
ret
outsb
in
dec
int
and
push
out
mov
mov
mov
aam
jb
xchg
sbb
push
fmull
jecxz
xor
shrb
ljmp
inc
mov
repz
loop
or
xchg
mov
inc
lock
lods
lods
jae
les
ficoml
lret
and
or
lcall
stos
test
mov
sub
jmp
mov
inc
push
sub
xor
sbb
sbb
repz
xchg
clc
push
add
pop
lahf
jb
lds
mov
mov
std
dec
mov
stc
jnp
je
dec
jnp
xchg
mov
xchg
adc
xchg
push
mov
lret
enter
gs
mov
outsl
xor
pop
xor
dec
xchg
fisubl
push
jle
cmpl
sar
or
xor
push
xor
dec
jbe
mov
pop
xchg
mov
xchg
mov
cmpsl
add
addr16
sub
lret
or
xchg
imul
mov
out
jmp
jns
cmp
std
mov
gs
mov
test
add
cmp
cmp
push
aam
pop
mov
stos
pop
xor
or
movsb
adc
jle
lods
or
ret
stos
jo
insb
bound
pop
or
into
adc
adc
call
aas
or
popf
int3
lods
subl
fs
jbe
or
cltd
into
mov
adc
cmpsl
popa
test
call
lcall
inc
sub
adc
push
or
test
pushf
mov
or
mov
dec
imul
sub
jae
cld
movsl
js
test
add
push
nop
jp
scas
xchg
bound
push
stos
outsb
xor
loopne
fidivs
add
jb
hlt
xor
or
outsl
mov
pop
adc
std
enter
pop
xor
out
or
pop
lods
rcrb
ja
mov
nop
pop
pop
mov
sbb
mov
mov
cmpsl
xor
xchg
loope
in
pop
mov
mov
mov
or
jecxz
out
lahf
ljmp
xor
outsl
xor
cmpsb
sarb
dec
or
popa
add
addr16
dec
inc
sahf
push
lcall
movsl
push
rcrb
cmp
outsb
int
into
mov
mov
xor
dec
test
lret
pop
add
jbe
xchg
stos
push
std
xlat
popa
cltd
in
cmp
sub
push
out
sub
xor
and
cli
mov
sbb
mov
or
pop
mov
mov
xchg
sub
lods
popf
cmp
jno
cmp
jl
mov
pop
sbb
sub
pushf
hlt
xchg
in
push
pushf
icebp
lds
mov
test
test
repz
adc
rcrb
mov
cld
sub
cs
cmc
add
sub
and
fistl
mov
stc
sbb
divl
inc
jae
setb
inc
push
pop
sti
xchg
fwait
and
lea
mov
ror
jp
mov
jo
pop
iret
and
arpl
pop
cwtl
ja
xor
jnp
jl
outsb
push
mov
dec
loop
sarb
mov
cs
mov
dec
imul
rclb
fwait
xor
loop
stos
jno
xor
push
ficompl
in
mov
adc
inc
jno
pop
sti
daa
xor
push
faddl
int
jg
xor
hlt
pop
dec
das
icebp
xor
push
lds
add
and
test
movsl
pop
movb
cs
push
dec
mov
sbb
arpl
leave
dec
or
jle
push
add
xor
clc
ss
xchg
jns
adc
pop
cmp
sub
jne
pop
and
sarl
or
pminub
rorb
jge
sub
cmp
mov
xor
xchg
sbb
ficompl
in
sbb
push
test
xchg
fwait
add
das
jae
pop
loope
test
popf
int3
pusha
and
pop
ja
push
sbb
flds
or
mov
adc
mov
cli
sahf
out
adc
cmpsl
push
aaa
bound
aad
call
mov
jp
movsb
mov
addl
out
mov
out
xor
fwait
sbb
mov
and
imul
lds
jge
shrb
sarl
jecxz
mov
cmp
lahf
jo
testb
jge
push
mov
out
push
inc
ljmp
xor
xchg
movsl
shll
ja
lea
daa
mov
or
aad
inc
push
sub
loopne
inc
out
test
and
sbb
sbb
incb
adcb
out
cmpsb
movsl
mov
mov
es
fisubl
mov
les
jb
std
rorb
aam
sub
js
test
pushf
insl
cmp
in
cmp
mov
jl
add
leave
in
mov
arpl
add
lahf
pop
shr
and
sub
repz
jae
inc
rcll
int3
jp
andb
cmc
dec
jno
push
mov
add
test
cs
xchg
js
cmc
lret
int3
inc
movsl
sub
sub
add
cmpsl
and
push
jnp
scas
stos
ljmp
cs
pusha
jge
sub
clc
in
mov
pop
add
pop
lods
popa
fsubs
hlt
push
and
jo
and
das
push
push
jae
jbe
cld
cmc
cmp
in
xchg
stos
sub
add
inc
aas
inc
sub
movsl
xlat
adcl
cmp
insb
xor
cltd
or
xor
jae
adcb
jmp
mov
ja
add
fldl
aam
push
jnp
or
mov
dec
cmp
je
adc
or
jno
or
adcb
xor
mov
insb
push
sbb
cwtl
inc
outsb
cmc
movsl
cmpsb
iret
ja
rorl
mov
push
scas
ss
in
add
adc
mov
push
lds
scas
testb
orb
jl
fildll
sarl
fwait
or
das
cld
mov
sahf
arpl
xchg
lret
loope
xlat
sub
in
imul
fisubs
inc
dec
sub
pop
into
xchg
lea
loopne
push
jae
sbb
jmp
add
out
inc
stos
mov
push
push
xchg
push
jnp
lods
mov
push
mov
xor
faddl
or
push
bound
mov
ficomps
adc
push
jg
adc
sahf
cmp
xor
jno
adc
lahf
mov
fadd
mov
lds
mov
jecxz
xorl
pop
pop
pop
mov
int3
cmp
daa
jecxz
xlat
andl
mov
jle
sub
inc
sbb
mov
dec
mov
or
xor
iret
or
push
dec
faddp
sub
adc
or
pop
pop
mov
mov
mov
inc
stos
xor
repnz
add
arpl
xchg
dec
cltd
add
aad
fimuls
dec
jbe
and
adc
xchg
inc
test
mov
ja
sbb
pop
movsl
call
popa
aam
ljmp
inc
or
mov
pop
xchg
hlt
mov
lods
pusha
mov
ja
dec
inc
andl
out
push
mov
shlb
mov
loope
jge
adc
pop
jnp
adc
jne
push
movsb
fidivrs
mov
jge
sub
mov
shl
inc
fistl
push
mov
clc
or
mov
inc
xchg
jecxz
das
add
stos
cmpl
dec
das
fs
jmp
shrl
mov
mov
cmp
popf
pop
repnz
push
in
pop
add
add
adc
sub
adc
sub
and
fnstenv
fildll
sub
jbe
mov
sar
inc
push
mov
push
adc
or
xor
loop
call
dec
shr
and
bound
jmp
call
sub
pushf
bnd
push
test
mull
pusha
fninit
mov
mov
clc
out
repz
jns
in
xor
inc
jp
test
leave
test
pop
je
icebp
ficomps
mov
hlt
inc
lock
inc
mov
sub
xor
push
popl
mov
mov
mov
inc
cmp
adc
jno
push
cmp
je
dec
mov
mov
pop
popa
clc
pushl
movl
std
mov
xchg
sbb
mov
mov
mov
mov
and
mov
fnstcw
es
cld
adc
sahf
cmp
sbb
das
arpl
and
add
sub
inc
ret
out
xchg
fdivp
fistps
cli
or
pop
jnp
adc
je
adc
mov
sub
mov
mov
ret
or
xchg
jne
rcrl
loop
inc
mov
cmc
roll
add
test
hlt
xor
jecxz
dec
lea
rolb
jns
push
mov
mov
or
nop
adc
repnz
shll
cmp
cmp
jb
xchg
das
push
jno
aas
call
jne
lds
movsl
in
out
leave
cmc
inc
outsl
xlat
inc
mov
neg
jo
hlt
ljmp
and
fisubrl
or
and
sub
addr16
adc
jne
mov
adc
inc
cmc
adc
mov
das
rorl
xor
mov
arpl
xchg
xchg
decl
fnstenv
movsl
cmc
divl
adcb
sti
mov
jo
inc
xchg
lret
mov
pop
cltd
lods
adc
stos
cmpsl
push
add
adc
lcall
inc
adc
add
scas
mov
cmpsl
cmp
xchg
mov
push
jg
dec
subb
popf
es
sbb
lods
ret
addb
add
mov
adc
fisubs
cmp
bound
pushf
xor
inc
shr
out
sbb
fsubrl
and
add
push
adc
jmp
stos
aas
shr
add
cmp
fstpt
mov
cmpb
das
stos
and
xchg
cmc
pop
add
mov
cmpsb
data16
int
cmp
in
dec
fadds
fists
xchg
and
inc
mov
outsl
inc
push
mov
fcomps
adc
xchg
adc
xchg
std
xlat
icebp
fdivrp
je
add
aad
cmp
aam
and
dec
sbb
fmul
and
shll
inc
jle
jns
mov
mov
fadd
imul
insb
jnp
push
lds
cmp
dec
pop
push
mov
clc
push
enter
cmp
bnd
sbb
loop
fistpll
xchg
repz
add
test
push
xchg
or
xor
adcl
xor
and
inc
ret
or
pop
adc
fadd
mov
jne
mov
cmp
pushf
rcrb
dec
sti
push
in
pop
adc
loopne
and
dec
es
pop
cltd
mov
icebp
lcall
xchg
push
pop
xor
pop
inc
fmull
and
sbb
loopne
hlt
xchg
es
mov
add
add
mov
lret
stc
lret
xchg
pusha
lret
clc
push
lahf
mov
test
in
scas
dec
adc
movsl
push
fcomip
rcrl
dec
mov
das
jg
push
jne
cli
bound
cmc
push
dec
mov
pavgb
cmp
sbb
clc
mov
jp
push
aad
sbb
dec
push
and
cmc
sbb
clc
xor
pushf
das
xchg
outsb
rorl
jp
adc
jno
push
xchg
pop
mov
rolb
mov
test
das
scas
xchg
dec
imul
mov
dec
sar
xor
jne
aas
push
arpl
lret
mov
pusha
add
inc
leave
adc
jno
in
push
fldl
add
or
mov
cmp
test
or
jecxz
lods
adc
out
insl
lret
nop
imul
sbb
outsb
repnz
dec
lods
nop
fprem
js
push
sub
out
sbb
adc
js
daa
out
cmp
fsubs
push
lods
popa
movhps
movl
aad
push
push
cmp
push
insl
rolb
mov
pop
adc
xchg
xor
push
mov
or
cmp
sahf
outsb
int3
jg
push
cmp
ffreep
popa
addl
cld
mov
jno,pn
hlt
sti
mov
push
outsb
add
mov
sbb
or
jmp
dec
cli
add
rcll
cmp
mov
xor
jae
hlt
loop
jg
mov
cmc
jo
orb
dec
out
xchg
sbbb
pop
push
mov
mov
lahf
sub
adc
push
jns
dec
mov
pop
xlat
popf
lods
and
xchg
add
push
sahf
inc
iret
inc
mov
ret
outsl
and
sarl
popa
cmp
fbld
mov
cmp
xchg
add
cmp
ja
xchg
mov
lock
in
mov
mov
dec
mov
in
push
icebp
pusha
sarb
inc
xchg
cli
les
aas
jl
jg
inc
ja
push
fcoml
mov
and
pop
sbb
dec
loopne
jb
mov
pop
int3
sbb
mov
fs
mov
mov
cmp
test
imul
inc
sbb
mov
add
jnp
mul
dec
outsb
push
push
aaa
xor
pop
cmp
pop
dec
push
push
dec
inc
jns
dec
stc
aaa
loopne
ret
imul
sbb
sub
push
fsubp
adc
xchg
push
lods
or
mov
push
int
lahf
in
push
shrl
out
mov
adc
ret
mov
push
xor
dec
out
cmpsb
mov
or
pop
mov
lcall
dec
int
cmpsb
cmpsb
ret
xchg
lahf
xor
adc
lea
gs
daa
lea
fs
mov
insb
leave
testl
cmp
mov
fiadds
push
push
fdivrp
aam
sub
fdivrs
ret
pop
and
loop
jae
lret
sub
jns
mov
call
pop
lea
pop
out
mov
add
leave
ss
repnz
popa
aad
add
rcrb
adc
cmc
pop
out
jb
out
scas
or
push
sub
stc
pop
retw
das
lds
mov
push
imul
jno
mov
xchg
sub
dec
iret
jp
fnstenv
mov
push
xor
mov
lahf
in
fwait
cli
sahf
xor
lret
adcl
pushf
xchg
xor
out
mov
psubsw
pop
mov
nop
mov
xchg
cld
in
cs
sarl
pop
shll
pop
xor
pushf
dec
mov
jecxz
mov
ds
ss
mov
pop
lods
ss
xlat
ljmp
mov
mulb
loop
mov
add
cmp
inc
dec
pop
xor
movsl
mov
mov
push
or
repz
jb
xor
push
ret
push
adc
gs
jg
sbb
movsb
add
je
repnz
jmp
inc
pop
test
mov
loope
and
in
lret
push
test
push
or
add
push
mov
xchg
std
or
xor
xor
jnp
push
fistpl
nop
data16
add
and
aas
cs
sbb
pop
mov
push
out
clc
fisttpl
das
mov
sub
loope
mov
outsb
add
decb
sbb
test
jmp
and
div
xchg
jno
jno
ja
jb
aaa
jge
movsb
les
jmp
rolb
lea
and
test
stos
pop
mov
ljmp
mov
and
sbb
push
xchg
fbstp
sahf
xchg
cmc
cmpsl
je
clc
cmp
movsl
movsb
or
nop
push
adc
aas
loop
push
sub
repz
push
ret
adcl
pop
lret
push
jecxz
jbe
inc
inc
repnz
mov
dec
jno
jne
push
int3
scas
pop
repz
sbb
mov
and
cmp
out
push
push
sar
iret
adc
stos
xbegin
fbld
loopne
dec
lcall
lds
cld
mov
gs
mov
repnz
test
xchg
or
shr
or
test
pop
ret
ljmp
mov
js
and
icebp
std
cld
imul
push
ds
and
je
pop
inc
jecxz
push
push
xor
mov
lcall
loop
push
xchg
push
mov
dec
mov
xchg
fstpt
mov
ficoml
cmc
aad
int
mov
push
mov
inc
out
daa
mov
addr16
out
pop
insl
int3
mov
or
std
loopne
dec
mov
pop
test
add
xchg
dec
jnp
push
out
adc
addr16
cmp
imul
mov
sbb
mov
jmp
adc
xchg
adc
cmp
and
jl
in
mov
cmp
lds
sub
leave
xchg
add
leave
loopne
mov
mov
xchg
sub
push
gs
std
sti
lock
jg
rcll
inc
repz
std
mov
inc
push
xor
fcmovnb
loopne
cld
sbb
cmp
or
mov
lret
jge
lahf
mov
cmpsb
insl
cmp
fwait
lret
dec
and
sub
ljmp
or
ljmp
mov
and
bound
xor
xor
fs
or
dec
flds
fs
stos
mov
inc
loopne
cmp
fstl
dec
int3
fs
std
pop
stc
mov
pop
dec
mov
les
push
pop
xchg
jl
shll
mov
lds
shll
clc
enter
dec
int
adc
mov
inc
mov
pcmpgtb
lods
fcmove
sbbb
xchg
and
dec
dec
and
lahf
sbb
out
test
insl
jo
pop
int
bound
je
int
es
sub
jg
xchg
cmp
mov
aam
mov
dec
mov
add
sbb
mov
and
mov
cmpsb
shlb
inc
dec
add
clc
stos
fsubs
popf
inc
loopne
pop
jae
lds
mov
jg
sbb
test
loop
aam
iret
xor
dec
shlb
sbb
arpl
pop
push
mov
adc
jnp
ljmp
and
xchg
mov
stc
push
ret
rclb
arpl
gs
aam
subl
jp
testl
rorl
mov
mov
call
mov
sbb
sbbl
and
bound
push
fcmovbe
push
jge
in
add
call
adc
gs
loope
inc
int3
and
shrb
test
adcl
cmpsb
mov
in
lea
and
scas
ret
and
pop
and
and
fnstenv
jno
sbbb
or
fsubs
ja
js
xor
adc
pushf
xchg
mov
outsb
lods
adc
arpl
mov
mov
xchg
hlt
adc
leave
dec
movsl
ds
roll
fs
push
inc
jle
jns
xchg
iret
lret
les
mov
divl
hlt
int
inc
jo
or
mov
in
movsb
mov
cmpsb
leave
mov
cmpb
aaa
pop
dec
fiaddl
mov
xor
pop
and
mov
mov
pusha
ss
icebp
jno
call
adc
cld
pop
jnp
mov
movsb
adc
xchg
push
ret
lods
sub
mov
nop
roll
and
and
cld
xor
mov
mov
mov
mov
jg
sub
sahf
push
fisubl
enter
dec
imul
int3
outsl
inc
iret
int3
mov
stos
or
sub
ficoml
and
out
xor
jmp
loope
sub
mov
stos
adc
in
mov
subl
lret
out
mov
mov
xor
and
insl
or
or
aad
pop
jo
in
xchg
mov
cmp
int
scas
outsl
daa
jnp
push
xchg
ficoms
mov
aaa
push
ds
push
test
lret
push
cs
cmc
int3
loopne
cmp
rol
adc
cmpsl
mov
jg
sub
xchg
into
jg
imul
fistpll
aad
push
pop
or
inc
mov
in
xchg
std
push
popf
inc
lret
jno
xchg
gs
out
xchg
xor
out
sub
dec
inc
push
jne
xchg
insl
mov
jmp
dec
mov
and
int3
cwtl
arpl
aam
push
dec
or
fwait
add
push
ret
hlt
mov
data16
sahf
cmp
jecxz
mov
mov
or
sbb
adc
inc
loop
ret
enter
cmpsl
push
mov
jp
adc
adc
shlb
push
call
add
lret
adc
mov
dec
test
not
cmp
or
in
jle
jmp
push
or
dec
and
scas
or
out
mov
sbb
enter
sub
stos
adc
sbb
mov
lret
xchg
loopne
sbb
in
scas
repnz
push
xchg
or
cmp
dec
adc
in
or
cli
push
ret
int
push
fcomp
xchg
scas
mov
rorl
lds
sub
mov
in
xor
mov
mov
or
adc
pop
sub
jecxz
cmp
dec
mov
ljmp
jns
push
cld
es
fwait
aad
movsb
outsl
cmpsl
add
hlt
icebp
or
cmp
inc
ret
cltd
call
leave
cld
cli
sub
jecxz
jmp
jne
sub
pop
mov
pop
fcom
cmp
bound
xor
cmp
xchg
jle
pop
test
dec
xchg
in
lea
adc
arpl
outsb
xchg
es
ja
xor
fnstcw
push
mov
lods
out
pop
or
or
xchg
mov
mov
xor
pop
rcl
lods
outsb
or
iret
xchg
movsb
mov
fistpll
push
and
xorb
out
jl
loopne
add
in
inc
pop
ret
and
js
pop
stos
lea
scas
loope
inc
fildll
add
mov
push
add
adc
mov
mov
nop
adc
and
cmp
mul
je
sbb
mov
mov
lret
int3
enter
push
xchg
dec
loop
push
pusha
ret
or
sahf
lahf
jb
mov
in
cmpsl
sub
xchg
les
ret
out
repnz
pop
and
adc
movsl
jl
adc
sbb
and
or
cmp
push
fisttps
sti
push
push
push
mov
movsl
push
ss
push
add
jge
outsb
add
pop
das
cmp
mov
lcall
jnp
cld
aam
imul
adc
inc
xchg
and
cli
xor
lods
pop
ja
pop
sbb
xlat
mov
inc
mov
out
popa
dec
adc
sti
int
shlb
int
push
cmc
lock
dec
push
decb
scas
out
add
icebp
loope
imul
adc
lret
enter
jno
sbb
aam
cmp
jge
out
mov
pop
xor
iret
push
and
das
sbb
sahf
inc
insl
es
pop
call
cmp
lret
dec
in
add
xchg
mov
pop
mov
jg
mov
xchg
mov
in
frstor
dec
push
loope
mov
cs
jmp
out
or
scas
or
add
pop
mov
pop
mov
mov
lret
orb
xlat
lret
out
pop
in
push
lcall
test
lcall
insb
test
and
add
cwtl
sub
fwait
mov
in
jecxz
mov
xchg
and
call
scas
dec
aas
aas
out
fstpt
jnp
rol
push
pushf
push
lds
rcrl
jae
add
pop
add
pop
xchg
mov
sub
mov
pop
add
fidivs
cld
cmp
bound
cmp
add
out
add
inc
addb
push
dec
bound
aaa
and
cmpsb
xor
and
sub
adc
dec
js
cmpsl
mov
stos
sbb
stos
adc
add
pop
inc
xchg
fcomps
jo
mov
cmp
jns
cltd
adc
jp
xchg
out
or
xor
pop
inc
xchg
inc
pop
popa
lods
sbb
gs
jl
dec
leave
popa
adc
subb
sub
or
pop
leave
testb
jp
fsubrl
inc
xchg
push
dec
add
xor
and
mov
rcrb
xchg
shlb
jle
mov
ret
xchg
adc
push
call
shrb
jmp
cmpb
loope
xchg
dec
jb
sbb
and
imul
inc
xchg
es
sub
pop
sub
out
daa
fs
mov
sub
adc
hlt
push
pop
inc
dec
in
sub
fldl
adc
out
sbb
pop
aam
xor
xor
and
pop
cmpsl
out
rol
call
adc
mov
inc
inc
lods
pop
inc
pop
inc
adcl
fwait
nop
xorl
sub
sub
push
xchg
pop
push
cmp
inc
jl
push
bound
aas
push
outsl
stos
and
enter
cli
aaa
out
add
clc
pmovmskb
jbe
mov
xchg
jmp
sahf
ret
cmpsb
mov
outsb
fcomps
repnz
xor
inc
xchg
jle
mov
dec
xor
sti
pop
mov
sarb
and
sub
push
lea
inc
fidivrs
sarb
cs
adc
mov
push
sbb
dec
clc
mov
aad
pop
fildll
jo
aaa
push
je
lret
jp
cmp
popf
inc
adc
cmp
shll
jmp
mov
cmp
or
out
sahf
ret
mov
insl
cmp
or
adcl
decb
divb
sbbb
jp
mov
fiaddl
add
loopne
je
repnz
mov
and
cmp
pushf
out
jecxz
cmpsl
out
les
jae
push
pop
ss
aam
or
imul
lcall
jle
lret
loopne
fidivl
or
push
push
pushf
push
frstor
leave
jo
cltd
scas
jp
jns
add
mov
es
loope
pop
or
sub
sbb
mov
add
fcoml
pop
mov
xchg
call
mov
fadds
xchg
cltd
jne
shl
pop
xchg
mov
ds
jmp
jbe
xor
adc
in
push
pop
push
jecxz
jmp
outsb
stc
cmc
pop
mov
sub
sbb
pop
jns
mov
in
dec
adc
ss
dec
jge
leave
mov
pop
push
lret
mov
jo
xchg
cmp
aas
push
jnp
cld
inc
test
cltd
outsb
movsb
lock
fisubrs
inc
pop
dec
fisubs
cmp
add
mov
xor
jmp
out
push
dec
fsubs
and
fsubl
testl
fdivs
sbb
shrb
int3
cmp
bound
pop
add
add
jae
in
jbe
jnp
fwait
mov
int
ss
cmp
jae
pop
imul
les
mov
sub
sub
cmp
add
lock
lods
nop
cmp
and
fcmovne
jmp
daa
or
lret
aas
sti
fsts
mov
dec
lds
test
repnz
stos
mov
xchg
sbb
sbb
mov
add
sub
push
mov
cli
test
jb
or
imul
pop
push
pop
xchg
loope
cmp
nop
sbb
scas
movsb
dec
jae,pn
push
mov
sub
das
repz
mov
xor
mov
dec
cs
and
mov
or
cmove
xor
arpl
jle
lcall
movsb
cmp
packuswb
data16
cmpsl
jmp
push
les
add
inc
or
or
jbe
orl
nop
insb
adcb
test
imul
jl
mov
sub
loope
rcrl
sub
push
jae
xchg
bound
cmpl
cmpsb
cltd
bound
add
nop
add
shlb
pop
lock
cmp
fsts
les
call
xchg
mov
stos
sub
jo
add
sbb
scas
push
cmc
lds
lock
iret
into
ds
nop
movsl
lds
sub
add
adc
test
je
sub
inc
data16
mov
jmp
push
cmpsl
xchg
mov
shll
cs
dec
nop
sbb
ds
xchg
mov
xchg
add
dec
ret
mov
xchg
in
in
mov
daa
sub
jb
lock
jecxz
mov
adc
std
rcrl
into
cmp
xor
cmc
pop
cmp
cmp
lds
dec
xor
loope
push
adc
mov
and
mov
jo
sbb
rcrl
test
cmp
adc
jecxz
enter
cld
pop
push
sbb
pushf
xorl
dec
filds
or
sub
cmpsl
or
clc
mov
cli
mov
shlb
lret
adc
mov
stc
js
lods
loopne
xchg
cld
test
push
jo
cld
iret
push
out
jle
cmp
cmp
xchg
dec
xor
fcmovnb
mov
and
fidivrl
add
das
pop
jo
lcall
push
and
nop
cwtl
add
xchg
leave
dec
push
mov
aas
xor
sysenter
mov
xor
mov
cmp
les
adc
out
out
cmp
dec
aas
mov
pop
mov
inc
test
lcall
call
test
xor
inc
shlb
cld
outsl
mov
sbb
mov
adc
test
repz
cwtl
loope
xchg
sbb
push
aam
test
add
gs
inc
inc
movsl
adc
dec
pop
mov
xchg
xchg
loopne
hlt
jb
xchg
pop
push
loopne
sub
setnp
scas
sahf
or
clc
and
pushw
mov
negb
fdivs
rol
cmp
xchg
leave
dec
mov
pop
inc
mov
in
cmp
inc
mov
jp
movb
sub
cwtl
rcrb
pop
sub
arpl
mov
xchg
iret
test
cmp
incl
add
aad
mov
repz
out
mov
loopne
add
nop
add
pop
mov
xchg
push
jo
lods
into
in
jo
incb
cs
in
outsb
imul
mov
push
roll
push
aas
and
jl
dec
jge
test
insb
out
jl
adc
daa
loop
mov
sti
fdivs
cmp
xorl
out
pop
ror
out
mov
mov
je
sbb
test
xchg
push
push
data16
or
sbb
test
mov
loopne
ficomps
adc
add
sub
sbb
ss
imul
cwtl
add
lret
lods
scas
or
or
push
mov
or
add
push
rclb
xor
das
xchg
and
rol
das
xor
xor
and
xchg
ss
pop
adc
cltd
or
xchg
subb
gs
mov
mov
das
int3
test
jle
js
or
cmpsb
inc
sti
jo
xorl
daa
imul
into
stos
mov
clc
es
sahf
cmc
popa
sbb
aam
test
sbb
xor
loopne
push
ret
xchg
and
pushw
dec
adc
adc
and
out
xchg
jne
lcall
fcompl
scas
mov
andl
pop
gs
mov
and
call
pushf
lea
cmp
idivb
cmp
sub
push
fsts
fisubrs
insl
bound
jb
inc
imul
sahf
imul
test
xchg
dec
inc
xchg
pusha
scas
mov
adc
movsl
scas
push
push
mov
ds
jno
push
inc
loop
xchg
mov
sbb
repnz
cmpsl
sti
jg
adc
pop
and
adc
jo
push
loope
iret
lea
xchg
dec
dec
or
sub
mov
mov
pop
loope
aas
mov
inc
cmpl
int
cmp
xchg
pop
jnp
ret
stc
cltd
mov
and
and
out
test
pushf
mov
enter
or
or
lea
push
es
stos
add
xchg
mov
sub
in
test
call
aaa
shll
and
in
sub
xchg
aas
jae
or
and
repnz
mov
xchg
jl
fidivl
in
loop
outsb
mov
test
inc
add
pop
jmp
add
inc
pop
ja
aam
cmp
mov
addb
inc
nop
enter
mov
add
adc
testl
jo
dec
or
sub
loope
sub
inc
mov
jp
dec
jmp
mov
xchg
xor
incb
lods
orb
xchg
cmp
mov
je
mov
ret
cmp
adc
jmp
aad
dec
mov
dec
or
sbb
ret
push
dec
jns
dec
inc
jbe
or
sbb
repnz
xchg
ficompl
aad
cmp
inc
rorb
repz
outsl
adc
jmp
pop
jb
leave
jae
sbb
daa
lds
xchg
and
lds
es
adc
sbb
adc
fdivrl
cld
push
sbb
nop
je
in
xor
push
nop
cmp
jbe
xchg
push
push
cmp
iret
cmp
dec
xor
or
mov
push
loopne
adcb
or
and
loopne
test
mov
mov
aam
fdivr
push
mov
repz
push
int3
sub
inc
push
push
iret
ljmp
add
push
in
movsl
xlat
aam
js
pop
repz
xlat
jp
xchg
xor
mov
or
push
or
stc
test
gs
add
dec
cmc
cli
dec
je
mov
cmpsl
cmp
mov
out
and
push
cwtl
and
es
out
fidivrs
xacquire
push
sub
add
or
push
das
or
ror
pop
mov
sti
shl
mov
dec
stc
in
loopne
pushf
scas
jmp
das
push
in
jbe
and
scas
pop
inc
cmpb
bound
movsl
xchg
inc
sbb
jbe
cmp
inc
stc
sub
iret
int3
sub
adcb
out
aaa
sbb
std
fwait
adc
lds
cmc
cmpsl
outsl
fisttps
and
arpl
outsl
xlat
shrb
mov
xlat
int3
jp
out
xchg
xchg
inc
push
or
xlat
aad
adc
inc
das
inc
aas
jae
stc
dec
push
cmp
jmp
pop
out
jmp
sahf
jbe
icebp
jmp
jns
pop
outsb
movb
in
out
dec
inc
loope
xchg
xchg
xchg
push
jae
sbb
ret
fiadds
cmp
cmp
cltd
ret
jo
dec
push
insb
imul
and
sbb
pop
mov
cmp
loop
mov
jns
sub
sub
fs
outsl
jg
arpl
mov
push
push
addl
vmovlps
outsb
push
mov
mov
xchg
cmpsl
inc
adc
shlb
pushf
dec
pop
jmp
repz
clc
loop
sbb
mov
push
arpl
mov
insb
pop
and
fmuls
lahf
xlat
or
cmp
fldt
pavgb
xor
pop
mov
xchg
pop
scas
aas
shlb
scas
pop
repz
jns
ffreep
sti
ja
lock
in
mov
subb
adc
xchg
ret
mov
jbe
dec
jp
int
push
inc
out
shlb
mov
icebp
xchg
aam
jge
repz
xchg
mov
stc
stos
clc
jmp
dec
bound
stos
loopne
xor
es
add
nop
mov
fs
lods
ss
xlat
cmp
mov
cmp
dec
outsb
push
dec
int3
add
dec
fidivl
test
and
in
pop
insl
push
jecxz
dec
scas
xor
adcl
cltd
int
shll
jnp
mov
jno
pop
xchg
clc
jb
test
xchg
pop
inc
fbld
xor
mov
mov
inc
pop
jnp
lds
xor
add
mov
xor
or
sbb
lds
fsts
in
addl
icebp
jno
out
imul
push
and
mov
fwait
divl
cmp
or
sub
data16
ret
dec
fs
cmpsb
jp
jns
imul
adc
ss
mov
xlat
sbb
cltd
push
sub
test
push
fwait
mov
dec
mov
popl
cs
xor
adc
bnd
icebp
pusha
add
leave
xchg
cmp
dec
add
and
inc
xor
push
aad
inc
add
std
enter
pusha
fisubs
stc
or
stos
sbb
jns
add
mov
in
scas
ss
mov
fadds
ret
xlat
xor
fiaddl
addl
mov
push
xchg
pop
pop
mov
adc
adc
or
or
out
daa
out
cmpsl
inc
imul
jmp
fcom
mov
sbb
mov
cmp
xor
out
out
aas
cltd
pop
sahf
ret
movsb
call
inc
mov
lret
mov
ds
jmp
fcoms
push
pop
and
adc
or
jmp
mov
sbb
loopne
mov
xchg
addr16
pop
shlb
or
mov
ficoml
sti
pop
jmp
xor
adc
movsl
sub
mov
sub
push
fstpl
jge
adc
or
lock
mov
out
ljmp
ss
push
iret
xchg
xchg
loope
lock
aam
pop
scas
popf
add
hlt
add
mov
lea
pop
outsb
mull
xchg
inc
testl
into
fs
pop
or
mov
or
add
aam
mov
push
aad
and
xchg
xchg
stc
int3
loop
push
pop
inc
xor
mov
mov
xor
or
stos
fmull
popa
add
stos
sbbb
add
jp
jne
fs
jnp
adc
or
lea
push
pop
faddp
push
jae
push
scas
testl
cmp
jmp
mov
ljmp
or
divl
in
sbb
mov
jmp
cmpsb
xor
mov
lods
sahf
cmpsb
fcomp
pop
xchg
scas
test
jno
jl
dec
mov
das
and
cmpsl
cmpsb
outsb
jecxz
mov
jmp
sbb
repnz
mov
adc
dec
pop
icebp
insl
xchg
cmp
shlb
out
cmp
add
dec
popf
in
lcall
pop
add
mull
imul
pop
cmp
sub
das
xor
hlt
xor
std
cmp
mov
inc
jle
xchg
in
cmp
cli
mov
pusha
dec
fadds
cmpsl
dec
hlt
inc
into
fsubrp
pop
mov
inc
mov
mov
or
call
mov
sbb
sub
pop
mov
gs
inc
adc
sbbb
iret
mov
xchg
mov
dec
outsb
orl
sti
shlb
mov
ret
imul
sub
mov
jne
adc
dec
negl
in
insl
adc
mov
pop
and
inc
adc
or
insb
fisubs
jae
sub
insl
xchg
mov
add
and
mov
xchg
adc
aaa
cwtl
sbb
movsl
in
dec
into
ret
inc
xor
orb
mov
pop
xor
mov
cmp
sbb
fistps
pop
mov
mov
inc
xor
push
push
imul
ss
sbb
sbb
lods
xchg
xchg
es
mov
adc
test
loop
mov
push
adc
shlb
cmc
psubusw
sub
enter
addb
testb
fdivrs
adc
push
or
jne
mov
xchg
push
adc
mov
cmp
popf
lock
test
ss
into
js
cmp
stos
mov
je
das
sbb
push
pushf
push
adc
adc
rorb
lret
lret
loopne
sbb
mov
cli
mov
jne
pushf
arpl
inc
rorb
mov
sbb
fcomps
sub
xor
mov
jl
cmp
leave
hlt
xchg
out
pop
add
mov
xor
cli
mov
out
pop
dec
push
aas
wbinvd
or
jns
xchg
out
jg
xchg
jecxz
lret
mov
sbb
or
sub
test
mov
lahf
int
cmc
sahf
mov
out
xchg
daa
sbb
push
cwtl
stc
repz
out
jns
pop
and
cmp
cmp
add
cmc
mov
in
loope
mov
adc
sub
jp
rcl
fwait
in
mov
and
mov
out
ret
mov
cmp
daa
cmp
mov
mov
call
xchg
push
lret
fidivrl
enter
popa
jo
pusha
lahf
jb
push
ljmp
mov
ds
movsb
push
js
test
shl
enter
lcall
sbb
cmc
inc
xchg
out
pop
repz
pusha
push
aad
xor
and
in
mov
xor
hlt
cs
test
jl
cs
sub
je
or
hlt
push
rcll
stos
or
mov
aad
xchg
add
and
out
repnz
jo
xchg
in
fdivr
inc
out
rcll
fildll
xor
lds
insl
aam
and
sti
cmc
call
out
push
xchg
add
xchg
fsts
ret
cld
lret
stos
imul
popf
xchg
push
lahf
loopne
push
xchg
lods
dec
dec
into
add
jb
xchg
push
mov
jo
jns
mov
pop
lods
fwait
sub
js
cld
push
and
ja
sbb
push
test
ror
js,pn
fists
push
jmp
mov
jb
xor
cmp
aas
sub
popa
cmovne
xchg
jge
andl
xor
xor
cmp
jge
cmc
fs
add
in
jge
push
adc
or
je
adcb
jl
pop
cmp
cld
in
mov
mov
add
sub
sub
shrl
mov
ficoms
std
lret
ljmp
outsb
or
fcompl
ds
mov
fmull
adc
dec
jb
mov
iret
push
mov
xchg
sub
stc
mov
push
cmp
ja
jns
and
inc
push
cld
jnp
pusha
ret
push
lock
xor
imul
movsb
xchg
sub
test
sbb
push
aaa
aam
mov
popf
jb
gs
or
fs
xor
ds
hlt
dec
or
mov
xor
subl
mov
sbb
inc
xchg
add
enter
sub
arpl
outsl
adc
testb
jg
mov
addr16
and
mov
push
mov
inc
cmp
ret
cmp
mov
pop
add
sbb
stos
or
dec
popf
fwait
mov
sub
dec
fsubp
sub
insb
stos
mov
jns
mov
fidivl
mov
insb
movsl
stos
push
cltd
out
xchg
scas
cltd
stc
pushf
dec
push
insb
stos
lret
dec
xchg
add
and
test
sbb
lods
pop
jb
pop
inc
fadds
ret
repnz
fs
inc
mov
jnp
addb
orl
gs
push
and
aad
negl
pushf
push
ficomps
and
cmp
dec
ds
std
outsl
cmp
sbb
sbb
lcall
and
sbb
jg
sub
lods
pop
shlb
push
pop
add
push
sbb
cmpsb
dec
push
fisubrl
mov
sbb
in
mov
fadds
scas
and
adc
push
imul
add
push
cmp
aas
mov
js
push
sbb
out
sub
xor
movl
cld
xorb
aam
mov
lock
cwtl
mov
mov
xor
and
dec
xor
mov
fidivrl
lret
out
test
js
pop
cmp
mov
and
adc
aas
xchg
mov
inc
fldenv
stc
mov
outsb
ret
cmc
insb
repz
divb
push
mov
mov
fucompp
arpl
fisttps
sbb
pop
orb
mov
repnz
cmpsb
cs
stos
test
jle
inc
outsl
ds
cli
leave
xchg
lds
mov
jb
or
pop
cmp
aad
add
cli
mov
mov
dec
enter
adcb
scas
mov
cmp
mov
out
xor
jecxz
pusha
jns
add
and
popl
mov
pop
inc
sub
jne
pop
pop
and
leave
mov
in
xchg
mov
fisttpll
fwait
sub
in
xor
jge
es
cmp
cmp
sbb
push
insb
test
xor
push
sahf
or
aad
xchg
push
mov
in
and
push
in
daa
cmp
movsl
stos
or
or
and
dec
jge
testb
add
dec
inc
out
idivl
xchg
ret
sbb
fdivs
add
jle
adc
div
imul
pop
mov
lea
rorb
sub
or
mov
mov
inc
jge
xor
mov
shlb
ss
shlb
adc
mov
iret
mov
jns
xor
jge
test
mov
jns
and
fs
mov
cwtl
mov
fistl
add
mov
inc
sub
xchg
cmp
xchg
or
jo
repnz
stos
lret
adc
pop
sub
push
sub
inc
xor
or
inc
xor
gs
fsubr
sbb
aad
pop
les
loop
lahf
cmp
mov
insl
mov
cmp
jge
fsubrs
jmp
push
jmp
cmp
push
insb
sub
jp
add
pop
scas
in
sti
call
call
insl
test
lea
lock
mov
cmpsb
cmp
dec
cmp
hlt
sbbb
imul
shrb
mov
inc
les
idivb
das
mov
sbb
out
out
call
mov
or
xor
mov
pop
mov
inc
and
mov
add
popa
popf
and
loope
std
mov
aaa
mov
das
clc
xchg
adc
loope
sbb
out
sub
push
fsubl
loopne
gs
xchg
cmp
push
aam
dec
fs
in
pop
iret
dec
mov
inc
enter
add
and
pop
add
repz
std
in
lods
sbb
cltd
call
adc
jle
mov
clc
jne
aam
inc
pop
pusha
add
cmp
jb
jb
out
rcrb
mov
adc
call
mov
imul
jle
and
mov
gs
jbe
ficompl
jp
mov
push
sub
pop
mov
dec
cltd
scas
push
cmp
push
push
and
mov
xor
mov
std
cmpsl
sub
xor
sub
inc
repnz
idivb
in
cwtl
nop
mov
mov
xchg
pop
notl
add
jg
or
mov
xchg
inc
aam
sti
add
adc
mov
popa
stos
pop
or
mov
xchg
orl
loopne
insb
out
out
mov
add
push
push
cmc
ficomps
lret
xor
mov
sub
xchg
test
dec
mov
fdivrl
jne
hlt
push
dec
sub
mov
mov
loopne
add
mov
das
inc
int
xor
insb
loope
out
mov
loop
js
cli
adc
pushf
das
into
icebp
cmp
xor
fldcw
mov
adcl
orl
mov
std
cmpsb
pop
cmp
in
repz
aaa
imul
xor
push
cs
mov
sti
cmpsb
in
add
int
cltd
insl
cmp
sub
sub
push
sbb
cmpsb
dec
pop
or
imul
add
js
test
dec
pop
xchg
fneni(8087
add
inc
or
sbb
rcrl
mov
xor
jge
mov
add
push
cmpsb
push
dec
call
and
hlt
aad
shlb
loopne
mov
popa
sub
popf
dec
sbb
cld
andl
fisubs
xor
arpl
test
movsl
mov
lret
sarl
js
adcb
push
lods
testl
mov
pop
push
mov
xadd
cmc
into
push
mov
sbb
mov
xor
dec
adc
aam
cmp
lcall
inc
jmp
jl
pushf
outsl
pop
sahf
cmp
push
popa
mov
mov
push
and
push
sbb
xchg
mov
xchg
fidivl
mov
ja
or
jno
pop
stos
jmp
inc
mov
jmp
insb
fs
push
mov
mov
lret
imul
pushf
sarb
es
jl
xchg
xor
subb
add
xor
mov
stos
movsb
push
add
scas
loope
pop
and
pusha
push
mov
jle
fnstenv
sarl
inc
lret
iret
fs
mov
fisubl
mov
inc
or
mov
inc
mov
mov
je
es
out
push
inc
mov
inc
pop
mov
into
sbb
jg
sbb
push
test
and
sub
cmp
test
cmpsl
push
dec
in
leave
mov
enter
cs
lret
pop
xchg
aaa
sub
push
add
add
enter
mov
mov
adc
push
pushf
sbb
and
cli
inc
mov
pop
jg
dec
jge
test
out
xorl
push
push
push
xchg
add
sti
lret
push
jg
sbbl
push
sub
std
cmp
popa
or
inc
mov
sub
cmpsb
sbb
and
or
jecxz
xchg
int3
out
fimull
inc
xchg
vprotb
in
hlt
push
jno
sub
test
mov
mov
sarb
pushf
sub
cmp
icebp
push
push
fnstsw
sbb
mov
clc
xchg
orl
dec
fidivl
mov
mov
js
pop
adc
push
or
fldt
ss
repnz
fidivs
leave
imul
pop
mov
inc
adc
mov
xor
push
mov
into
inc
aam
cmpsl
insl
call
out
das
mov
sub
jno
hlt
jmp
and
stos
stos
or
and
or
inc
nop
mov
adc
cmp
jecxz
fistl
mov
notl
stc
jns
xchg
or
out
leave
setb
jmp
jl
pop
or
lahf
mov
mov
hlt
pop
aas
jns
test
pusha
das
fmuls
push
imulb
jmp
add
pop
cmp
icebp
dec
adc
mov
push
mov
xorb
cmpsl
fldcw
inc
pop
mov
insb
into
sti
mov
stos
cmp
and
movsl
andb
and
mov
pop
in
js
lret
jnp
cltd
push
cltd
icebp
repnz
dec
lea
shr
xor
fidivs
test
in
push
jno
out
inc
sbb
jle
sbb
sub
adc
roll
loop
and
cmp
xchg
mov
fsubrs
mov
inc
gs
xchg
mov
lods
pop
jbe
xor
andb
xor
jno
mov
mov
sbb
push
testl
and
pop
inc
push
cmp
aad
or
jne
cli
jl
rorl
dec
dec
pushf
das
cmp
pop
imul
fdivrs
jmp
add
inc
xchg
daa
mov
in
scas
lcall
jmp
ljmp
out
jge
sbb
or
pushf
in
pop
mov
inc
cltd
lcall
dec
dec
leave
add
outsb
pop
pop
loopne
popf
push
cs
dec
pop
jae
js
xor
sbb
stos
xchg
js
or
cmp
dec
outsb
cltd
stc
loope
jp
mov
jns
add
pop
mov
jp
outsb
ficoms
mov
outsl
sbb
fisubrl
xchg
dec
lock
add
std
rorb
adc
push
cmp
arpl
jle
mov
jne
push
push
add
inc
mov
jle
xchg
dec
aas
ret
jmp
xchg
mov
rclb
fdiv
cmp
push
lds
aam
rol
add
loope
repz
out
iret
adc
repnz
test
sub
mov
xorb
sbb
or
int3
ljmp
xor
loope
jg
imul
out
or
jge
mov
insl
and
sbb
fistps
gs
sbb
xchg
mov
add
xchg
subb
jmp
mov
dec
adc
movsb
movb
dec
cmpsl
sbb
in
stos
imul
jne
ret
test
and
jne
jge
mul
testl
inc
mov
aad
popf
jo
mov
imul
jecxz
xchg
movb
bound
jne
popa
jmp
sbb
fistpll
lahf
push
jecxz
jl
rcll
mov
jmp
adc
out
mov
mov
icebp
fisubl
std
cmp
dec
fwait
cmp
xchg
fwait
rcrb
clc
repnz
push
in
jnp
add
fdivr
int
and
aaa
call
ja
xchg
pop
mov
shll
sbb
lret
sbb
vmread
sahf
xchg
insb
jnp
hlt
cmp
sub
test
sbb
ret
das
jecxz
jge
mov
out
insl
sub
test
push
sbb
shr
out
add
mov
jnp
push
and
add
loopne
mov
jmp
lret
sbb
lcall
ss
testb
leave
mov
daa
dec
cmp
lret
cmp
mov
ficoms
pop
outsb
and
out
pop
lahf
dec
stc
xor
shlb
sub
and
movsb
sub
lods
and
leave
lods
pusha
adc
iret
push
ja
xchg
shll
enter
adc
aam
or
dec
test
mov
rorb
in
mov
inc
outsl
shll
mov
clc
add
jno
mov
xor
mov
or
push
ja
pop
bound
mov
and
ss
pop
xor
repz
bound
enter
mov
xor
scas
cmpl
inc
popa
xchg
in
sbb
dec
ss
int
adc
daa
jmp
ss
ret
inc
enter
popfw
sub
cld
and
cld
mov
lea
andb
xor
in
movsl
sbb
js
arpl
mov
and
xor
pop
lret
cmpsl
js
imul
push
test
pusha
ss
dec
push
xchg
adc
xchg
fcompl
outsl
xchg
cmp
jns
dec
mov
pop
cld
push
jnp
je
adc
movsw
or
dec
shl
ja
push
out
in
test
push
int
jp
movsl
dec
inc
adc
jge
pop
sahf
in
mov
xchg
lret
pop
jp
xor
unpckhps
imulb
js
push
mov
add
xchg
lret
mov
out
adc
push
push
sbb
inc
pop
xchg
add
aad
xor
inc
cmpsb
push
rcrb
movsl
pop
lahf
push
cltd
outsl
sub
mov
insb
add
jns
cmc
cmp
js
mov
mov
repnz
xlat
ljmp
pop
scas
mov
mov
add
xchg
out
stos
inc
lahf
cmpl
xlat
dec
stos
testb
jmp
mov
dec
jbe
mov
sbb
aad
insb
inc
imul
test
cli
pushf
cmp
flds
ret
dec
push
xor
push
push
int
xchg
mov
ljmp
or
mov
jge
and
jmp
lahf
outsb
ds
cmpsb
xor
lret
adc
add
mov
xchg
ficomps
popa
cmp
cmp
sub
outsb
jl
into
and
fistl
cmp
mov
ss
inc
out
jle
inc
or
ljmp
jne
pop
pop
xchg
stos
outsl
jl
xlat
sub
aam
stos
cltd
mov
arpl
icebp
fs
mov
repnz
adcl
jns
mov
jg
sbb
imul
pop
sbb
pop
leave
cwtl
andb
xchg
xor
out
mov
mov
fistpl
enter
jns
cmpsb
adc
scas
push
jno
std
dec
mov
jo
es
xor
rcll
js
dec
movsl
lods
sub
and
mov
addr16
cmp
pushf
outsl
push
and
cltd
jae
dec
and
xchg
outsb
pop
cmc
push
imul
mov
rolb
insl
and
cwtl
mov
push
mov
lret
jecxz
inc
dec
sti
inc
jo
cmp
mov
in
inc
out
or
shll
jg
daa
js
and
fstp
pop
dec
leave
sti
sbbl
test
popf
jmp
mov
cmp
in
push
scas
add
cli
jg
arpl
cmp
jbe
sub
inc
adc
mov
adc
xor
hlt
adc
fldcw
adc
insb
ss
rol
jae
mov
test
stos
mov
popf
lods
movsb
cmpl
xor
das
rcrl
arpl
insl
adc
and
fmuls
je
add
adc
cmp
xor
in
adc
movsb
std
out
mov
mov
rcll
mov
aaa
inc
fisubl
xor
add
sub
jecxz
int
mov
xchg
fsubl
ljmp
cmp
jmp
ret
add
testl
xchg
fisubrl
mov
das
mov
sbb
dec
jg
and
xchg
lret
adc
cmp
into
add
mov
or
pop
sbb
sub
and
fstpl
ljmp
and
add
in
add
mov
ficomps
inc
hlt
aad
jae
push
dec
test
adcl
xor
movsl
cli
jo
dec
xor
loope
enter
pop
shrl
test
out
lret
sub
add
gs
xor
cli
fbld
sbb
pop
dec
jne
lock
dec
pop
jp
loop
jg
aam
add
mov
lods
lahf
or
sti
fwait
cmp
sub
call
sub
imul
jl
in
jmp
insb
imul
sbb
adc
push
nop
lahf
sbb
push
ror
cwtl
sub
je
pop
mov
sub
jae
mov
repz
ja
lret
sub
xlat
cltd
cwtl
test
push
sub
test
cmpl
pop
xchg
jae
cmpsl
dec
stos
push
jns
sub
sbb
dec
sarb
adc
dec
outsl
pop
andl
adc
push
scas
test
lods
and
pop
stos
jnp
or
pushf
or
cmp
sahf
pop
js
push
lahf
pop
ljmp
lcall
pop
push
cmc
cmp
in
fwait
in
jp
shlb
aad
mov
inc
sbb
mov
sub
fsubl
xlat
orl
xchg
cmc
jns
loope
pusha
xor
mov
dec
cltd
mov
pop
cmpsl
jno
push
or
inc
adc
out
in
lahf
cmp
cmp
fs
and
lds
testb
cmpsl
pop
and
je
lods
pop
adc
clc
xor
out
jge
fcomps
xorb
aam
and
lret
outsb
lcall
cwtl
xor
push
adc
nop
das
mov
fcomp
add
rol
adc
jo
inc
push
out
or
mov
sarl
imul
iret
out
mov
dec
jecxz
mov
nop
fsubrl
dec
rol
inc
push
fsub
imul
std
ret
pop
mov
pop
lds
and
add
jg
mov
pop
add
cld
cmp
cmp
dec
push
repnz
out
sub
lret
mov
jl
stos
icebp
lret
and
ss
push
fwait
push
xor
cmpsl
mov
push
add
cmpsl
pop
lock
cmp
mov
and
jle
cmp
lods
in
test
dec
or
icebp
xchg
bound
or
jl
adc
in
jno
shlb
pop
dec
movsl
inc
adc
sbb
jne
jbe
stos
push
inc
mov
and
mov
in
mov
shrb
xor
fsubr
jo
jo
inc
decb
and
fcoml
in
loopne
mov
mov
cmp
in
inc
ret
ja
push
sbb
or
push
bound
fisttps
xor
rcll
mov
mov
dec
add
shl
movsb
mov
mov
shl
dec
lock
lds
ret
mov
lods
and
int
loope
cmpsb
bound
aam
leave
addl
adc
ds
and
add
cmp
xchg
das
or
mov
test
cmp
sub
inc
jne
aad
fists
dec
sbb
add
aas
fdivl
cmp
xchg
xchg
cmpsb
aam
adc
xchg
dec
inc
jae
sub
and
push
scas
lea
imul
ja
xchg
cltd
scas
outsl
jl
push
inc
mov
dec
and
add
je
aas
and
ja
in
mov
or
cmp
leave
arpl
push
mov
subl
les
sahf
sub
fidivrs
sbb
xchg
lods
push
push
cmp
mov
pop
int
repz
and
ret
pop
mov
js
ficomps
mov
ss
dec
insb
xchg
jbe
out
sahf
in
cmp
es
jl
test
sbb
daa
sbb
sbb
cmp
fadds
leave
mov
ss
mov
cltd
mov
sbb
mov
cmp
out
loope
mov
es
pop
iret
nop
jno
sbbb
mov
repz
inc
js
push
mov
std
arpl
sbb
mov
jno
mov
mov
ret
xor
rorb
sahf
push
push
int
xchg
sbb
adc
int
cmp
adc
inc
mov
adc
out
jno
fs
or
jbe
mov
aam
dec
mov
fs
pop
je
shrl
cmpsl
lea
icebp
cld
mov
stc
pop
pop
jg
fsubl
pop
fldenv
push
and
movsb
push
movsl
dec
mov
and
sbb
out
mov
push
dec
out
lods
inc
push
or
ds
xor
mov
add
add
xchg
icebp
and
lahf
mov
mov
jo
cmp
sub
mov
dec
loopne
cmp
movsb
call
sahf
jl
pop
mov
jp
jnp
jb
cli
cli
fs
aaa
mov
call
push
icebp
or
test
inc
cmc
cs
cld
sbb
mov
add
mov
imul
jns
lea
stos
push
jns
inc
or
gs
cmpb
lods
lret
sbb
loopne
mov
notb
repnz
xor
shrl
in
repnz
push
pop
pop
std
mov
pop
lahf
mov
mov
insb
call
jo
lcall
pop
and
aaa
push
sbb
jmp
lret
mov
mov
xor
lcall
fidivl
add
clc
mul
lods
notl
or
scas
sbb
xor
lahf
aad
addr16
sbb
int3
or
rolb
stos
adc
rol
sbb
mov
adc
into
push
das
aam
insl
stos
pop
adc
mov
xor
int3
test
fldcw
or
add
adc
cmc
rolb
insb
xchg
pop
xor
jmp
adc
sub
add
shl
outsb
fcomps
and
out
scas
lods
mov
test
lods
rorb
dec
pushf
and
imul
xor
jge
lock
lock
fisubrs
cmp
mov
sbb
pop
lds
scas
mov
jb
xchg
sbb
or
popf
cli
stos
jl
ss
xchg
inc
int
adc
mov
divb
xchg
fstpt
fists
mov
repz
xlat
outsl
cwtl
pop
stc
or
imul
xchg
int3
rolb
jo
fisubl
out
and
push
pop
adc
outsl
mov
cmp
les
dec
push
jbe
cmp
xor
adc
and
inc
sbb
mov
mov
or
push
mov
sub
cs
mov
andl
xlat
out
push
mov
in
mov
mov
mov
xlat
cs
cmpsl
mov
inc
and
dec
add
sbb
in
pop
mov
mov
and
lahf
jge
dec
mov
std
pusha
xor
sbb
call
sbb
xchg
dec
mov
in
pusha
mov
mov
xchg
inc
cmp
jae
and
push
arpl
mov
icebp
clc
popa
xchg
xchg
inc
addr16
out
xchg
jmp
jp
icebp
sar
dec
mov
test
dec
notl
fs
push
fcmovnu
cmp
das
and
sbb
adc
inc
stc
dec
pop
mov
xor
leave
ljmp
mov
or
push
test
ds
das
je
in
repnz
aas
mov
stos
push
inc
sub
push
nop
mov
inc
test
dec
mov
das
adc
mov
out
shrb
xorb
es
xchg
push
inc
sub
xlat
movsl
popl
mov
mov
xor
pushf
add
inc
xor
mov
movsb
outsl
enter
fs
add
pop
fs
push
jo
pop
rcrl
insl
notl
test
sub
loopne
mov
in
cmp
adc
loopne
dec
cli
lods
bnd
lahf
fwait
mulb
mov
cmpsl
add
rcll
push
fdivs
sahf
into
and
mov
out
int
push
iret
ss
test
cmp
insl
stos
es
cltd
sbb
ret
mov
inc
es
or
lahf
inc
cmpsb
push
cwtl
repz
icebp
fildll
rcrl
ret
out
push
jl
mov
push
ds
sub
mov
les
pop
jecxz
pop
call
jecxz
loopne
xchg
divb
jns
sti
xchg
fldt
xchg
mov
mov
adcb
stos
lret
mov
dec
push
stos
vmwrite
in
add
ret
repz
cmpl
inc
ds
add
cmpsb
lret
lcall
push
mov
dec
idiv
adc
mov
xchg
and
and
cmp
or
mov
pop
push
push
cld
sbb
mov
sbb
jno
mov
imul
sbb
bound
pop
cmp
or
ret
jmp
mov
lock
mov
je
push
push
add
enter
daa
stos
mov
inc
cmp
lock
mov
xchg
movsb
pop
lcall
and
sub
sbb
sub
test
into
movsl
push
int3
sbbb
jle
sbb
push
stc
enter
hlt
xor
incl
out
popf
js
or
inc
rcrl
mov
lods
aaa
pop
andl
jb
stos
sub
and
cmp
xchg
imul
int
imul
in
xchg
push
fsubs
into
mov
test
ret
add
data16
dec
testl
testb
loope
fwait
push
sub
out
lea
fsub
or
and
addr16
clc
sbb
neg
dec
push
xor
cwtl
popa
les
mov
fisubs
xorl
cmc
inc
mov
xor
adc
push
jmp
xlat
lock
call
sub
stc
loopne
out
xchg
mov
mov
cmp
popa
mov
jno
pop
idivl
imul
gs
cmp
nop
aas
std
jb
cmp
fdivrp
jl
mov
movsb
mov
pop
xor
in
push
fdivp
ret
ret
jecxz
push
das
add
bound
adc
aad
sub
mov
jnp
leave
dec
aad
adc
sbb
or
xchg
outsb
das
and
cld
xchg
pop
insl
sub
mov
ret
add
out
movsl
pop
cmpsb
test
outsb
cmc
pop
aas
dec
subl
and
aam
cmp
dec
jg
or
and
jne
mov
xchg
repz
mov
test
lret
lea
repnz
xchg
hlt
push
pop
sub
inc
rcll
in
xchg
sbb
push
dec
jo
leave
ljmp
loope
and
rcll
inc
jle
rep
pop
mov
insb
add
mov
mov
mov
adc
clc
add
shl
ret
pop
fnstsw
js
lret
xor
jne
xor
xor
and
sarb
xchg
jle
lock
ret
adc
inc
rcr
mov
out
loop
mov
xor
xchg
sbb
mov
push
cmp
sub
cs
loop
mov
xchg
xor
xchg
inc
cmpsb
jp
xchg
dec
adc
inc
inc
xchg
test
test
or
xor
pusha
inc
loopne
mov
and
int
inc
and
mov
push
scas
lahf
push
ds
xlat
call
test
add
xchg
gs
fwait
movsl
mov
mov
pop
fdivl
mov
adc
in
fidivs
in
mov
imul
out
pop
cs
mov
negl
imul
adc
xchg
inc
fadds
int
addl
pop
ljmp
mov
jmp
cld
push
xchg
aam
jne
sbb
inc
out
push
sarl
ljmp
gs
std
adc
pop
jle
jno
cmc
lods
xor
and
rcrb
stos
add
pmaddwd
xor
sub
repz
adc
mov
xchg
imul
mov
add
pushf
add
das
fwait
ds
das
jo
xor
push
add
mov
fdivrs
and
sub
es
or
adc
mov
pop
push
gs
repnz
xchg
push
jl
xor
jg
mov
xor
ja
dec
xor
leave
das
int3
call
ja
jmp
sbb
mov
push
push
test
cmpsb
sub
insb
jp
ja
ss
stos
push
mov
and
aas
loope
or
sub
cmpsl
mov
lods
cmp
clc
jecxz
loop
dec
rorb
test
sbb
lods
add
mov
imul
push
testb
cmp
rcrl
insb
mov
pop
jecxz
cmpsb
mov
les
js
movl
jmp
add
stos
das
rcr
outsl
jl
cmc
fsin
jmp
and
jmp
nop
data16
mov
jecxz
and
mov
fsubs
xchg
add
add
xlat
jno
or
enter
pop
mov
or
out
pop
jb
mov
loope
add
pusha
inc
lcall
push
jmp
stc
mul
jle
imul
test
pop
pop
mov
pop
ret
xchg
pop
xor
pop
fmull
aaa
insb
addr16
sbb
push
andl
dec
test
push
xchg
sbb
es
sbb
lock
adcb
push
call
cmpsb
xlat
sbb
mov
jle
xchg
je
push
pushf
movsl
iret
xchg
sti
mov
push
pop
bnd
gs
data16
or
sub
sub
pop
push
xchg
push
pop
lods
xlat
jmp
mov
dec
imul
xor
ret
xchg
lods
or
in
cwtl
cltd
ss
out
push
dec
sub
and
rcrb
mov
inc
cmpsb
xchg
out
sbb
out
aaa
sbb
aas
jecxz
jmp
addr16
and
add
and
jmp
push
cmp
mov
xchg
mov
arpl
loope
mov
fsubl
loop
xchg
fisttpll
leave
sbb
adc
cmpb
fcoms
popf
shrl
lret
inc
push
ja
mov
or
fwait
jno
push
stos
dec
subb
xor
or
mov
pop
cmpsl
xor
incl
inc
subb
sbbl
and
das
popa
lods
jae
inc
pop
out
scas
mov
or
jg
cmp
lods
imul
imul
pop
cmp
lock
test
scas
movsb
pop
or
xor
inc
push
icebp
cmp
fsubrs
test
push
jge
dec
in
cmpsb
jns
cmp
jo
adc
sbb
sub
or
sti
add
or
xlat
aaa
pop
push
adc
aad
mov
cmpsb
sub
sub
xchg
cmp
rclb
std
mov
adc
or
and
or
mov
repz
leave
jl
mov
mov
mov
into
icebp
fmuls
fnstsw
jl
leave
addr16
iret
loopne
daa
shl
or
pop
sub
adc
xor
dec
out
push
xchg
dec
aas
cltd
pushf
je
cmpsl
cmp
xchg
mov
movsb
push
sbb
cs
mov
stos
inc
fmull
jnp
sub
out
or
dec
ds
mov
push
push
mov
jb
adc
or
add
ret
clc
push
push
ds
je
fdiv
pop
les
sbb
in
test
fdivr
iret
pop
cmp
jb
nop
push
sbb
pushf
lds
or
iret
pop
nop
push
and
lcall
adc
ds
leave
jne
pop
movsb
or
lret
mov
shrl
hlt
push
pop
ret
push
testb
in
pop
sub
loope
mov
dec
mov
arpl
rcrl
push
mov
push
pop
insl
in
push
fdivs
dec
sub
data16
and
push
icebp
push
xor
mov
push
sbb
scas
insl
jge
sub
dec
inc
aad
cltd
push
jle
repz
inc
in
xchg
mov
stos
pop
xchg
ds
pop
push
jecxz
cld
push
and
stos
in
inc
xchg
inc
push
out
loopne
mov
es
insb
test
pop
imul
cmp
icebp
imul
and
negb
lock
xchg
je
cmp
cmpsl
mov
iret
pushf
mov
mov
call
mov
jle
xchg
movl
loope
icebp
inc
stc
mov
into
out
sti
mov
aam
mov
add
or
push
xchg
fldl
loope
stos
sahf
adc
test
push
xor
cmp
nop
jp
inc
push
push
add
jge
dec
mov
cwtl
or
imul
mov
push
jmp
adc
out
dec
sbb
sub
and
xchg
adc
and
lcall
insl
bound
scas
clc
data16
in
ret
sub
rolb
add
mov
jecxz
cmp
lret
sti
aam
push
sub
pop
inc
mov
push
cmpsb
sub
xchg
popa
dec
enter
pushf
and
cltd
das
mov
lock
std
dec
cltd
dec
adc
xchg
xchg
xor
notb
sub
cli
sbbb
mov
jg
push
mov
sub
jp
pop
cmp
mov
test
pop
sbb
cmpl
jae
sbb
sub
decb
popf
js
addr16
xor
call
popa
sub
adc
xlat
add
xor
jno
movsb
lahf
shrl
push
sub
std
push
clc
adc
es
loope
mov
flds
xor
sub
ja
cmp
dec
sbb
ss
jb
ror
ret
imull
clc
popa
shl
stc
mov
nop
inc
sbb
add
mov
test
cmpsl
pop
out
pop
inc
xor
pop
jmp
outsl
shll
xor
fadds
aas
imul
cmp
or
dec
shl
sbb
pushf
rcl
jno
in
dec
mov
ja
clc
into
and
pusha
sbb
or
xchg
pop
jmp
dec
inc
repnz
inc
fidivl
inc
sbb
insl
es
mov
cmp
test
cmp
add
and
adc
sbb
dec
js
fucomp
add
or
out
jl
jns
sbb
pop
mov
pusha
lods
jmp
or
mov
pop
dec
add
addr16
jmp
pop
imul
xor
fistl
sub
mov
fwait
xlat
push
or
add
fcoms
mov
lods
xor
aam
cli
bound
es
gs
test
sahf
jmp
xor
lods
mov
psubw
mov
dec
inc
dec
inc
push
fs
mov
pop
sub
insl
mov
mov
add
out
out
mov
cs
icebp
sub
cwtl
lret
es
test
mov
mov
pop
imul
mov
cmp
sahf
movsb
xlat
push
shll
imul
add
mov
push
movsl
mov
rcrb
adc
push
lret
jmp
dec
addr16
test
out
add
mov
mov
test
push
scas
ds
xor
or
enter
lods
lcall
nop
mov
pop
pop
adc
xchg
fisubl
fucom
push
lds
xchg
sbb
into
add
inc
out
fimuls
and
sbb
fwait
inc
in
sbb
es
cltd
mov
pop
inc
stos
mov
jmp
fdivrl
xor
sub
leave
popf
cwtl
xchg
xchg
fwait
out
dec
sbb
std
decl
sahf
adc
sub
cmpsb
fldt
addl
push
jno
mov
mov
cmp
ds
das
scas
jne
lea
pinsrw
lret
jge
test
add
mov
sti
jns
pusha
into
mov
sub
push
lock
jae
xchg
test
sbb
cmp
mov
push
xor
ljmp
inc
fisttpl
pop
dec
push
loopne
jge
ret
inc
orb
xchg
xchg
add
xchg
lods
jp
adc
xor
mov
shll
jge
dec
sbb
mov
mov
jo
cltd
es
out
jbe
fstpt
test
cs
ffree
test
cmp
adc
cltd
xchg
jmp
inc
mov
xor
in
sub
std
sub
jns
not
jle
xchg
test
sbb
mov
inc
aam
xchg
push
ja
loop
add
mov
push
xlat
xor
and
lret
out
inc
jnp
xchg
mov
xlat
test
nop
pop
aas
xor
xorb
push
mov
push
aam
lds
adc
shrb
xchg
ret
push
and
bound
dec
out
or
mov
bnd
shll
cmc
xchg
out
jge
xchg
cmp
std
push
jnp
sub
adc
comiss
ljmp
inc
mov
adc
lock
mov
add
pop
cmp
push
xor
arpl
xchg
gs
out
ret
cmc
daa
clc
dec
xor
sar
push
jp
push
inc
std
dec
repnz
repz
cmp
and
push
push
mov
shl
xor
movsb
mov
sub
jns
adc
fucomp
or
faddl
sbbb
inc
lods
aam
inc
cmp
fldl
ljmp
xor
adc
xchg
pop
mov
xchg
adc
xchg
or
mov
jmp
loope
jecxz
dec
dec
or
mov
sub
xchg
je
mov
outsl
bound
insl
and
insb
incl
push
sti
insl
cmp
es
fimull
push
or
int3
ds
sbb
jge
arpl
out
dec
sarl
imul
xchg
ss
jl
lret
sub
stos
inc
popf
jmp
addr16
cmp
xchg
mov
dec
xor
xchg
mov
ret
repz
mov
add
lods
gs
push
aas
sub
push
imul
int
and
movsb
int3
pop
popa
add
rcll
movsl
inc
jp
fdivrl
je
push
pop
adc
repnz
add
cmp
enter
adc
xorb
sarb
push
mov
daa
jo
test
ljmp
and
cltd
jb
push
pop
sbb
jmp
imul
call
icebp
and
xchg
or
call
or
jae
dec
xor
repnz
loope
andb
pushf
loope
out
mov
mov
cmp
scas
or
iret
dec
imul
leave
js
inc
push
out
push
cmpsb
leave
jmp
fwait
or
loope
es
push
cmc
or
pop
and
cmp
gs
hlt
pop
push
xorb
inc
push
shll
dec
sar
mul
test
cmp
iret
xor
hlt
jmp
add
lcall
adc
shll
push
mov
lds
mov
mov
push
push
stos
loopne
daa
ret
sub
mov
xor
testl
mov
insb
jmp
inc
call
push
or
or
call
stos
insb
scas
fidivl
xchg
jnp
lods
dec
xchg
out
xor
push
mov
outsb
ret
scas
pop
insl
adc
nop
gs
loopne
xchg
loop
push
jne
neg
fnstsw
dec
dec
nop
mov
imul
dec
fimuls
mov
les
adc
call
mov
mov
std
and
lods
movsb
push
data16
leave
and
adc
push
xor
int3
test
adc
jnp
add
fwait
cmpsb
sbb
mov
fstpt
movsb
call
lahf
sbb
ds
inc
jo
pmaxub
shl
scas
in
fs
aad
pop
and
inc
mov
ljmp
inc
mov
loope
popa
mov
dec
fdivrp
mov
adc
sahf
jg
aaa
jmp
mov
fs
mov
xchg
sub
imul
mov
out
adc
test
xchg
dec
sarl
mov
lahf
cld
cmp
loop
xchg
inc
mov
inc
mov
jecxz
lret
or
sbb
repnz
cs
jl
imull
cli
fsubr
sbb
pop
jnp
int3
aam
push
cmp
or
movsb
sub
out
mov
jb
aam
insb
cmp
dec
imul
ja
inc
or
push
outsl
push
test
jo
inc
subl
jge
mov
cwtl
dec
cltd
stos
nop
sbb
daa
xor
int
ret
iret
rolb
ljmp
movsl
daa
outsl
cmp
fstl
repz
pop
ja
clc
mov
les
icebp
mov
mov
and
mov
mov
fldcw
push
jle
push
pop
push
mov
into
loope
pop
nop
inc
inc
or
dec
in
cmpsl
pop
jle
dec
push
mov
adc
cli
jb
cli
sbb
add
pop
inc
les
movsl
fldcw
sbb
adc
in
xor
jne
scas
adc
push
iret
fdivrl
test
int3
in
sar
pop
xor
inc
push
adc
jne
loop
test
push
rolb
imul
jge
shlb
std
test
out
fldl
lods
push
sti
inc
jo
jmp
push
pop
sbb
mull
cli
push
repz
rclb
cli
pushf
mov
sub
scas
lcall
popa
mov
inc
xchg
fldl2e
xor
pop
aaa
inc
and
fs
or
dec
cli
mov
dec
cmpsb
add
cmpsl
leave
ljmp
cld
arpl
jo
add
aaa
lods
mov
push
loopne
push
pop
lods
js
imul
pop
push
je
jge
rcll
and
cmpl
jnp
mov
pop
sbb
std
mov
jp
subl
and
aaa
hlt
adc
xor
into
and
les
test
cli
adc
or
lcall
mov
xor
mov
fnstcw
jmp
outsl
pushf
adc
inc
sarb
shlb
sbb
out
mov
aaa
mov
or
push
ret
inc
sahf
jmp
adc
mov
cmp
pop
test
mov
aaa
bound
mov
out
ja
dec
xor
es
push
movb
fmuls
pop
shll
clc
push
mov
inc
mov
outsb
out
ficoms
add
je
test
stos
ret
add
outsb
cmp
push
xchg
scas
ss
test
mov
cmp
mov
adc
xchg
outsl
mov
jl
xlat
shrb
adc
ss
jns
mov
dec
push
ret
dec
lods
cpuid
andl
dec
sbb
or
enter
lahf
aam
mov
outsl
pushf
cmp
inc
daa
mov
mov
outsb
cli
and
or
xchg
push
mov
fwait
in
fildl
inc
adc
int
sbb
lock
fmul
lea
push
sub
in
push
shl
mov
cld
push
cmpsb
inc
js
imul
dec
das
lcall
negl
push
push
jae
aam
stos
cmp
rol
mov
movb
in
enter
das
imul
in
add
icebp
dec
mov
mov
outsl
sti
sbb
or
fildll
scas
xor
cmc
jno
sbb
nop
sbb
rolb
inc
cmpsl
test
aaa
add
push
mov
cmp
ss
inc
insb
push
mov
cs
js
ret
fcoml
enter
loope
xchg
inc
test
scas
xor
pushf
cltd
xor
test
jmp
das
xchg
lds
loop
lock
jp
push
in
sub
push
and
out
sahf
xchg
add
in
inc
sbb
shll
jg
pop
test
mov
mov
adc
test
mov
imul
mov
jns
push
cmp
es
dec
adc
sti
icebp
xlat
inc
mov
mov
je
movsl
mov
movsl
cmpsb
mov
jbe
rcl
pop
jne
xlat
push
mov
bnd
adc
sahf
fidivrs
fistpl
sbb
int3
icebp
addb
ja
pop
test
call
xchg
std
xchg
push
mov
cwtl
push
movsl
xor
and
ds
sti
xchg
jl
or
nop
lds
daa
pop
jecxz
aam
add
jb
aaa
cmp
sbb
or
lock
cmp
add
sub
int
outsb
mov
mov
and
mov
mov
fs
xchg
dec
xor
stos
fs
js
cmpsl
aad
or
sub
pop
iret
pop
and
mov
insl
sbb
fwait
sbb
cwtl
mov
scas
cltd
mov
ss
hlt
filds
push
inc
cs
xor
or
push
mov
xor
xchg
mov
push
and
popf
adc
mov
pop
fisttpll
les
xchg
inc
dec
sti
mov
insl
mov
bound
mov
scas
pop
and
xor
pop
cmpsl
mov
jmp
mov
or
out
outsb
lcall
mov
fistps
xor
mov
sub
cmpsl
cmpsb
or
mov
pop
scas
ljmp
notb
sbb
mov
jmp
fisubrl
rorb
inc
push
nop
or
in
sub
xchg
inc
push
mov
pop
fstl
lods
and
mov
xorb
out
enter
sti
dec
mov
loopne
cmpsb
test
pop
aad
movsl
pop
mov
dec
push
int
sar
xor
jbe
arpl
inc
js
dec
sbb
cmc
adc
arpl
sub
jl
lahf
pop
out
pop
es
fwait
mov
into
sbb
add
test
into
lret
lahf
pusha
ds
outsl
subb
fldenv
jmp
jmp
mov
adc
fs
add
stos
xor
adc
or
xchg
rcrb
sbb
outsb
loop
aam
insl
scas
mov
pop
ja
and
dec
mov
and
icebp
movsl
jecxz
addr16
pop
int
out
nop
adc
clc
lea
dec
addr16
testb
mov
cmpsl
and
push
or
fsts
test
pop
leave
xchg
cld
adc
cmp
dec
mov
stc
push
cmpl
into
lret
lds
lahf
jle
jmp
push
jae
data16
ljmp
mov
lds
xchg
cltd
push
xlat
mov
test
push
xor
cld
xchg
into
jnp
outsb
jne
pop
xor
outsb
lcall
das
and
in
xchg
sahf
andl
sbb
imul
dec
push
cmp
push
addb
mov
and
xchg
fimull
sarb
add
jns
jl
or
push
pop
xor
inc
sbb
imul
mov
daa
les
roll
jbe
mov
gs
xchg
shlb
xor
testb
or
shr
sub
and
jmp
xchg
mov
fisttps
imulw
xchg
shrl
out
or
jl
bound
sub
cmp
loopne
cmp
ret
or
or
xor
loope
push
sub
inc
push
and
push
aas
jmp
jle
int
insb
movb
or
jmp
loopne
sub
sbb
pop
mov
cmp
sbb
out
in
mov
push
jns
insl
push
jnp
push
push
aaa
aad
stos
cld
out
mov
pop
outsl
inc
jl
inc
movsb
bound
es
sub
mov
fwait
inc
adc
in
xchg
sub
xor
arpl
cmp
stos
adc
iret
outsl
lcall
pop
xor
daa
xor
btc
and
roll
push
test
aaa
ds
gs
mov
jle
cwtl
mov
mov
push
add
pusha
or
sahf
mov
aaa
sub
insb
sub
dec
stos
enter
fstps
fs
mov
push
inc
pop
xlat
movsl
xor
outsb
sub
ret
push
repz
lds
sub
jnp
fadds
sub
or
add
sub
out
mov
and
call
inc
in
test
std
js
mov
ss
sub
xor
xor
xor
lahf
jno
jo
xor
cltd
add
mov
sub
mov
fbld
lret
cmpsl
insl
xchg
jp
cwtl
pop
pop
push
sbb
xchg
inc
fadds
adc
add
or
add
jl
xor
cmpsb
je
mov
mov
adc
outsb
jg
aam
push
scas
repnz
inc
pushf
sbb
bound
lea
pop
pop
test
sub
aam
xchg
mov
or
frstor
and
jbe
pop
imul
out
cmpsl
je
push
lcall
pop
outsl
sub
mov
ljmp
and
into
loope
mov
jmp
sub
popa
push
mov
xor
sbb
sbb
es
and
int3
or
push
call
sub
xor
inc
cmp
xchg
fisubl
mov
jnp
popa
inc
fadd
test
adc
xchg
and
or
xchg
mov
xor
or
mov
js
fdiv
mov
and
ds
cs
add
xor
hlt
inc
pushf
fiaddl
sar
in
mov
dec
or
push
mov
jae
movsl
stc
push
push
jp
fidivl
sbb
es
ret
stos
lret
dec
mov
sub
fldz
sub
dec
stos
popf
mov
shlb
sub
setnp
mov
mov
shlb
xchg
into
mov
ss
daa
and
mov
aam
sbb
mov
mov
scas
xchg
pop
or
push
cmpl
filds
jle
lods
shlb
and
ret
adc
sbb
lahf
mov
scas
mov
jge
lahf
add
mov
jae
scas
adc
leave
cli
mov
sbb
or
dec
cld
cmp
addb
mov
ljmp
cmp
ljmp
mov
sbb
mov
loop
pushf
dec
pushf
sbb
std
aam
stos
aaa
divl
sti
movsb
jne
jl
lods
lcall
test
mov
cmp
adc
xor
hlt
aas
xlat
xor
sub
push
fcoml
push
negl
stos
xchg
or
xlat
push
imul
add
ret
ja
mov
push
aaa
inc
fcompl
mov
ret
imul
adc
repnz
cmp
adc
std
dec
insb
aad
pop
stos
push
mov
aaa
inc
stc
jb
incb
xor
shlb
add
sub
cltd
icebp
sub
dec
ja
push
sahf
jo
push
adc
clc
outsb
jecxz
stos
aas
movaps
push
cli
pop
int3
sbb
sub
fnstsw
je
xchg
dec
ds
dec
sub
sbb
ss
sub
xchg
fwait
push
sub
xor
movsb
out
cmc
out
jmp
data16
mov
pop
xor
cwtl
aaa
fnstenv
test
cld
int
sbb
xchg
shlb
xchg
in
inc
mov
pop
int3
fwait
mov
call
rorl
sub
adc
fistl
inc
jecxz
mov
or
push
adc
fnstsw
inc
pop
scas
pop
ja
mov
mov
aaa
lea
dec
adc
aaa
xor
sbb
loop
jb
sbb
xchg
mov
in
and
aam
test
cltd
lea
and
ret
adc
adc
addr16
insb
icebp
xchg
lret
dec
pop
add
gs
sub
sub
push
mov
push
subl
ret
xchg
inc
adc
xor
inc
fists
mov
and
test
adc
jbe
hlt
sbb
mov
out
lcall
xor
dec
add
or
mov
xor
int
and
mov
cmp
mov
mov
mov
push
push
inc
xchg
out
dec
sarb
xchg
jno
xor
into
pop
xchg
add
and
popf
mov
mov
fs
scas
iret
sbb
ret
sub
ljmp
mov
dec
cmp
jne
hlt
loop
cli
xchg
roll
dec
jle
xor
inc
fimuls
jg
nop
adc
gs
adc
push
insb
jbe
mov
sbbl
dec
inc
mov
jp
das
mov
and
sar
sbb
mov
cmp
jge
push
jle
mov
and
jbe
jo
or
xor
add
mov
lahf
cmp
pop
push
in
int3
dec
rcrb
loopne
sub
dec
sbb
andl
leave
sbb
sbbl
mov
add
icebp
add
jecxz
xor
mov
xor
xor
ret
addr16
push
pop
xchg
lea
xor
xor
mov
in
sub
pop
imul
xor
mov
stos
add
hlt
mov
mov
shrl
fwait
jne
adc
iret
adc
aas
hlt
data16
mov
adc
push
jmp
inc
mov
cmp
inc
lds
stc
mov
fisttps
xlat
jne
inc
fcoms
mov
sbb
rclb
stc
movsb
faddl
fisttps
into
cmp
lahf
lds
popa
pop
pop
jns
arpl
mov
and
aaa
ljmp
into
mov
fistl
leave
data16
ss
xor
mov
cwtl
xchg
and
jns
out
and
push
ss
and
popa
push
sbbl
xchg
and
lahf
lea
loope
mov
mov
push
dec
mov
cltd
pop
js
sarb
mov
lcall
les
adc
add
sbb
dec
loope
pop
adc
dec
cld
mov
adc
cmp
cmp
jle
or
and
scas
test
inc
gs
inc
adc
xchg
hlt
cmp
push
inc
lods
add
shll
mov
dec
jg
mov
jle
xlat
dec
lret
aas
and
mov
fcoml
je
mov
pop
pop
test
test
test
mov
cltd
dec
inc
inc
rolb
lcall
lods
dec
sti
stos
int
lcall
outsl
inc
mov
aad
dec
inc
imul
daa
adc
je
loop
mov
test
mov
sub
sbb
mov
stc
push
out
cmp
cmp
cmc
push
stos
dec
in
pop
fistpll
and
add
cld
rorl
test
test
and
in
pop
cltd
mov
or
pusha
pop
adc
pop
sbb
lea
scas
inc
pop
cmp
xchg
sahf
jns
adc
mov
fmull
outsl
mov
fcomp
sbb
test
lods
add
lea
push
add
scas
inc
xchg
sbb
cmp
arpl
jmp
or
xor
push
xchg
add
cli
mov
addr16
push
mov
mov
idivl
push
pusha
push
sti
int
pop
dec
or
call
add
mov
xchg
or
icebp
fcmovne
dec
fldt
jg
adc
mov
jecxz
push
call
mov
adc
lret
flds
rcl
mov
sub
mov
adc
dec
xor
movsl
dec
mov
add
lds
pop
inc
add
jg
and
xor
mov
and
and
movsb
mov
mov
fsub
inc
push
xor
outsl
inc
mov
gs
pop
fucomi
jno
inc
pop
xchg
dec
cmpsb
xchg
stc
je
fcmovnb
popf
dec
sub
pop
jns
dec
mov
cli
dec
push
dec
stos
aaa
out
repz
movsb
aas
scas
ret
lods
into
xchg
test
cmc
lock
push
or
cmp
xor
push
mov
inc
pop
repz
mov
mov
fld
inc
adc
or
psubusb
orb
push
addr16
pushf
jl
jns
dec
movsb
das
das
aam
inc
int3
notb
cmpsb
jp
mov
push
sbb
stos
mov
repz
mov
cs
push
push
and
lock
sbb
dec
cmc
and
jo
sub
jle
fwait
pop
lret
push
xor
std
adc
adc
test
pop
test
js
insb
dec
xlat
dec
adc
scas
mov
lods
inc
dec
dec
fwait
and
mov
das
je
or
jae
in
mov
rcll
test
movsl
outsl
fs
sbb
lds
add
add
push
addr16
mov
test
scas
inc
or
adc
es
push
inc
jle
cmp
clc
outsb
out
or
mov
subb
jne
testb
aaa
adc
or
js
jg
xor
adc
and
loopne
mov
ret
mov
insb
scas
adc
and
loope
sbb
outsb
inc
mov
test
sbb
sub
jmp
jecxz
popf
jb
aam
inc
dec
icebp
repnz
popf
filds
rorb
xchg
imul
dec
sub
fldt
mov
mov
pop
movsl
fbld
dec
ret
fistps
jg
test
mov
mov
lahf
jae
inc
or
jbe
jecxz
shrb
mov
in
pop
mov
fwait
push
cli
push
test
inc
jae
repz
xlat
aad
pop
add
roll
adc
dec
sub
and
in
je
aad
sbb
loopne
mov
mov
xor
fistps
loope
xchg
lcall
dec
movsl
movsb
test
popa
dec
mov
push
mov
sub
xchg
dec
mov
lahf
int3
out
or
dec
push
popa
out
push
mov
inc
mov
add
sub
jo
aad
jno
xchg
and
add
dec
xor
cmpsl
or
sti
push
add
mov
cmpl
mov
mov
xchg
loope
in
xchg
adc
in
aaa
ja
fistpll
imul
loope
mov
pop
cmpb
lock
imulb
adc
pop
and
push
fistps
jne
in
in
pop
sbb
leave
jmp
mov
push
cltd
jbe
cmp
out
ja
aad
or
add
es
leave
and
mov
sub
xchg
fs
call
decl
xchg
mov
nop
add
cmp
cwtl
scas
jge
xor
push
cld
mov
aad
inc
aaa
xchg
cmp
repz
adc
adc
push
daa
fistl
int
fidivrl
imul
add
push
int
add
insb
out
push
nop
mov
mov
sbb
movsl
dec
jg
orb
stc
jae
movsl
mov
mov
enter
pop
mov
push
movsb
notb
push
mov
out
mov
les
cmp
push
movsl
jnp
cmpsl
dec
xor
movl
cmp
adc
shll
cld
insb
push
jge
dec
cmpsl
faddl
fimuls
sbb
sub
jne
or
mov
and
inc
adc
adc
pop
adc
inc
cmp
mov
cmp
cmp
dec
pop
xor
pop
mov
cmp
ljmp
xchg
fidivrl
test
cmp
pop
xlat
sbb
push
or
incl
in
adc
mov
sub
out
daa
popf
clc
or
ret
add
cli
call
rorb
es
jns
and
pop
jg
and
movsb
adc
adc
aaa
fs
xchg
sbb
sbb
jae
dec
push
mov
rorb
lret
mov
mov
or
mov
notl
insb
jp
mov
and
mov
cmpsl
inc
lods
lods
cs
scas
mov
pop
mov
sahf
adc
sbb
dec
pop
push
int
lret
movsb
jns
push
jmp
pop
sub
push
cld
cmp
and
sbb
push
mov
adc
jae
iret
lret
jge
insl
xor
jb
daa
xchg
lcall
shlb
rcrb
mov
pusha
jge
xchg
push
sub
outsb
xor
imul
loope
lcall
repz
adc
push
mov
ret
inc
push
cwtl
sub
inc
xor
sub
push
push
cli
push
gs
fstps
xchg
imul
and
jle
ja
jne
sbb
pop
sub
test
jl
adc
sbb
xchg
ss
negb
sti
adc
sarb
fimuls
repz
xchg
adc
cltd
fidivrs
dec
les
mov
rcr
push
push
mov
imul
jmp
int3
mov
and
xchg
sti
fnsave
loope
sbb
pop
xchg
adc
imul
mov
hlt
dec
inc
stos
cwtl
pop
out
push
cmp
push
aas
movsb
dec
in
imul
shl
in
stos
shrb
jo
in
sub
xchg
call
inc
insl
pop
xlat
inc
in
xchg
into
sub
cld
mov
je
les
jne
int3
je
jae
dec
das
mov
xchg
rcr
aad
arpl
cs
into
movq
lahf
lock
cmp
pop
mov
sub
andb
aad
mov
call
mov
icebp
adc
aam
daa
call
sar
jne
ds
sbb
xchg
inc
fdivs
into
cltd
cmp
js
ss
xchg
into
push
icebp
sar
in
dec
test
test
adc
es
xchg
rol
ret
xchg
and
sbb
sbb
daa
sub
jno
mov
mov
cs
jb
notl
int3
jle
pusha
sbb
and
and
dec
inc
popa
xor
or
mov
add
movsl
into
pop
adc
fwait
in
and
out
cmp
jge
std
xor
pushf
and
bnd
xor
xor
pop
fwait
pop
leave
xchg
out
inc
add
fildl
pop
xor
add
push
xchg
sbb
and
xor
fdivp
push
repnz
push
pushf
pusha
icebp
ja
ja
std
repz
ljmp
fs
add
dec
xchg
jne
pop
stos
mov
pop
popf
sub
cmp
dec
inc
or
inc
repz
aam
inc
xchg
repnz
push
pop
add
mov
mov
xchg
fsub
lahf
push
adc
ret
dec
and
jae
fiadds
in
aad
imul
pop
in
sbb
adc
mov
cmpsl
add
xor
lock
fsubr
inc
xchg
pushf
or
je
mov
and
jno
loope
rcl
ret
int
inc
enter
cld
mov
imul
or
push
mov
int
jno
push
mov
sub
sti
lds
pushf
xchg
or
mov
inc
loopne
daa
les
mov
imul
mov
and
and
inc
push
xchg
inc
mov
jbe
pop
add
insb
pusha
push
jecxz
mov
push
pop
xchg
ret
push
cmpsl
mov
inc
adc
add
sti
mov
mov
pop
sbb
mov
xchg
insb
cmp
decb
xor
rorb
dec
rcrb
ja
dec
mov
fmull
pop
test
fs
mov
fcmovb
mov
hlt
popa
popa
sub
daa
fxch
repz
xchg
jmp
int3
or
or
jns
push
arpl
sahf
bound
xchg
cmp
inc
int
nop
mov
and
fidivrl
push
adc
and
popf
fdivr
jp
ja
jmp
mov
hlt
js
adc
push
xor
mov
adc
movsl
inc
dec
mov
lret
sbb
mov
aaa
mov
jne
push
dec
add
ror
pushl
mov
mov
mov
sub
outsl
cmpsl
icebp
aas
pop
or
repnz
sub
and
aas
jl
xchg
adc
push
fimull
stos
sub
jbe
stos
stos
popa
clc
push
imul
mov
mov
sbb
mov
fdivs
mov
cltd
jns
loop
cld
cli
push
fwait
fwait
bound
cmpsb
pop
mov
inc
xchg
cmpsl
xchg
add
sub
push
fisubrl
pop
int3
mov
in
data16
icebp
js
into
and
mov
fdivl
cmp
faddl
int3
or
or
loopne
cmc
sub
xchg
sbb
test
out
outsb
add
cmp
fs
or
popf
pop
or
sbb
wrmsr
lods
push
fldenv
subb
mov
fists
mov
sub
std
mov
sub
fisubs
mov
sub
lods
lahf
mov
imul
jge
xchg
scas
mov
and
insl
xchg
stos
div
rolb
push
in
push
dec
aas
mov
loopne
shll
jp
cmp
push
in
mov
xacquire
ficoml
lret
cmp
jp
and
cmpl
shll
mov
or
dec
jecxz
mov
insl
leave
mov
mov
adc
mov
jns
ljmp
xor
aam
and
call
or
push
aam
mov
mov
mov
sub
in
aad
or
add
sub
dec
loop
and
pop
jne
repnz
xor
push
push
xchg
cmc
mov
dec
jbe
loope
sbb
xor
pop
jle
mov
mov
scas
lds
cmp
fisttpll
pop
fstpt
mov
leave
and
inc
insl
nop
add
xchg
jae
mov
notl
adc
aas
pop
mov
negb
jbe
cltd
cmp
xlat
std
sbb
and
cmp
pop
xchg
out
int
mov
fidivrl
or
pop
es
jge
mov
jl
aad
add
sub
scas
aaa
and
ret
idiv
popf
insb
inc
movsl
aam
xor
mov
cmp
gs
pop
mov
jl
dec
icebp
cmpl
mov
sub
pop
repnz
adc
jbe
adc
pusha
mov
and
pop
xor
lods
xor
int
pop
jp
cmp
jp
je
leave
push
ficoml
sbb
and
push
test
push
repz
lds
cmp
mov
test
shll
mov
ds
ds
mov
cmp
push
inc
testl
push
and
cmp
cmp
xor
frstor
xlat
out
xchg
pop
sbb
lcall
push
ljmp
lret
stos
mov
mov
jno
jecxz
add
dec
add
mov
cwtl
lds
mov
cmp
sub
xchg
push
cmp
and
sarl
and
test
loope
or
hlt
fucompp
dec
imul
xchg
in
mov
rcr
push
add
xchg
add
aam
xchg
jne
cli
cmp
cmp
xchg
imul
dec
sbb
jo
fistl
or
aas
out
sub
enter
shrb
mov
and
stos
enter
fiadds
mov
hlt
xchg
std
aas
loop
and
pop
test
leave
ljmp
fldcw
lock
jge
lods
pop
fstps
test
jecxz
adc
jle
or
xchg
xor
mov
mov
daa
test
pop
mov
xchg
pop
call
out
popf
ret
push
scas
popa
jns
jo
or
sbb
or
subb
imul
cmpsb
mov
ss
cld
divl
inc
mov
dec
and
jmp
xor
sti
xchg
mov
xchg
mov
or
sbb
pop
test
mov
sbb
cmp
dec
sti
popa
mov
push
loopne
mov
lahf
test
and
test
cmpl
mov
into
test
pop
cmp
orb
stos
or
push
movsl
and
addr16
loopne
faddl
imul
mov
mov
dec
fdivl
leave
movsl
mov
jecxz,pn
push
push
sub
inc
push
int
mov
pop
das
cli
or
ss
popa
pop
mov
mov
loopne
sub
pop
mov
ds
xor
dec
add
jb
or
sub
and
add
cli
and
cmp
jae
icebp
or
rcrb
into
inc
fildl
fcmovb
mov
cltd
jecxz
mov
pop
lods
or
mov
mov
push
std
jbe
dec
lret
push
sbbb
jle
push
xchg
ljmp
inc
mov
xlat
sbb
jmp
mov
and
xor
sub
mov
pushf
sub
adc
ret
dec
into
ljmp
dec
pop
insb
and
xor
dec
test
andl
and
xchg
bound
lcall
outsl
jae
rcll
je
lock
pusha
dec
lea
mov
add
push
aas
subl
stos
push
lods
shll
pop
or
out
dec
or
push
test
js
test
mov
xor
inc
enter
rolb
xor
repnz
xchg
fs
mov
cmp
push
clc
xor
into
adc
adc
jmp
and
lds
or
shrl
add
addr16
imul
scas
sub
push
push
test
lds
adc
mov
lret
sarb
imul
cmp
push
out
stc
and
add
in
sub
sub
std
xor
mov
mov
adc
add
in
popa
das
pop
jp
ret
sub
into
jge
in
arpl
or
hlt
push
out
pop
pop
jno
mov
mov
sbb
test
xor
orb
jp
in
and
sbb
lret
shlb
stos
sub
mov
out
mov
in
jg
roll
dec
das
cld
xchg
pushf
out
xlat
xchg
xchg
das
and
xlat
inc
mov
cmpsb
cmp
loopne
stos
sbb
and
sbb
add
dec
popa
dec
sbb
hlt
mov
lret
cmpsb
jno
repz
dec
out
jo
inc
mov
jle
xor
or
mov
add
push
popa
jge
mov
adc
mov
mov
in
dec
out
iret
negb
mov
notb
or
lahf
adc
sub
nop
mov
jecxz
gs
aas
imul
jno
aam
push
pop
aas
movsb
leave
inc
xchg
add
lret
popf
mov
int3
test
fistpl
pop
sub
stos
mov
cltd
add
insb
and
mov
dec
fwait
xchg
jmp
dec
jle
or
into
test
cmp
xor
in
sub
xchg
cmp
jb
inc
mov
fsubrl
loopne
push
cs
sbb
or
push
bound
movsb
imul
mov
in
shlb
mov
dec
incb
inc
mov
mov
stos
cmp
repz
mov
nop
repz
sub
push
test
adc
mov
jecxz
mov
ljmp
lds
popa
test
push
xchg
push
mov
leave
jns
adc
outsl
imul
cmp
xchg
fyl2xp1
mov
adc
jl
cmp
mov
push
sarl
stc
jne
rclb
pop
popa
pushf
lods
lods
mov
cmp
inc
add
rcrb
sbb
push
dec
sbb
sti
sub
divb
xor
nop
in
test
cwtl
xchg
pop
sub
mov
adc
imul
cli
sarl
popf
out
out
enter
cld
or
fwait
negl
mov
jmp
icebp
rcrl
adc
jp
lock
imul
and
nop
and
pop
insl
inc
repnz
or
js
in
in
and
push
lret
pop
and
in
jbe
pop
dec
mov
scas
mov
cmc
adc
mov
adc
cld
lcall
xor
pusha
push
fpatan
leave
push
ljmp
xor
adc
mov
mov
xchg
pop
sub
movsb
adcl
mov
out
and
and
mov
sbb
fdivl
xchg
std
mov
dec
pusha
fs
adc
out
push
ret
mov
push
in
das
mov
mov
jecxz
pop
test
mov
push
sbb
pop
shl
nop
mov
cmp
out
cmp
adc
fsubl
ja
in
fists
out
andb
addr16
rclb
rorb
cmp
sbbb
iret
fwait
ljmp
push
jae
aas
fsubl
dec
push
jns
fcmovb
cmc
mov
sbb
push
loop
jne
movsb
arpl
pushf
push
ja
sub
dec
loop
decl
push
into
jle
pop
fsts
iret
push
cmpsl
loopne
cmpsl
cmp
or
push
ss
push
int
add
popa
xor
inc
sbb
xor
push
sbb
sub
and
jae
adc
jge
push
stc
adc
loop
nop
cmpsb
sbb
in
push
pop
inc
ret
inc
sbbb
xchg
adc
sahf
sbb
sbb
data16
mov
dec
cmp
xor
xorb
lods
pusha
jnp
enter
mov
outsb
mov
leave
mov
dec
sub
les
ljmp
int
xchg
pop
xchg
dec
jge
lret
xrelease
pushf
dec
inc
xor
loopne
mov
xor
xchg
xchg
mov
shll
push
sbb
push
pop
shl
xchg
mov
aad
out
loop
mov
icebp
sarb
push
icebp
cmp
ret
dec
cld
les
xchg
out
inc
mov
stos
enter
jg
mov
sbb
mov
filds
mov
pop
inc
mov
push
lret
nop
in
fsubs
notl
or
fisubrl
add
popa
or
insl
adc
movb
lcall
lods
cmp
loop
loopne
jns
aad
mov
jo
popa
pop
and
mov
shl
jae
loopne
ds
pop
push
sbb
outsl
sbb
pop
jns
jae
inc
dec
jge
cmpb
cs
out
mov
push
xchg
pop
xchg
loopne
shr
add
aas
adc
push
mov
or
dec
call
push
sarl
fcomi
jne
ss
lret
jno
cmp
mov
xchg
mov
gs
fistpl
and
dec
cmp
rcl
in
stos
repnz
xchg
inc
fwait
loopne
inc
xchg
insb
inc
fldt
idivl
mov
cmp
xchg
in
ja
inc
mov
mov
mov
bound
sahf
cmp
stos
and
into
sub
scas
push
push
in
test
sub
add
out
das
les
jp
je
inc
lret
mov
data16
daa
sub
add
nop
nop
repnz
das
inc
or
pop
and
xchg
int
iret
rclb
sub
daa
add
cmpsl
ret
cmc
xchg
fisttpl
shrl
les
xor
sub
add
push
xor
add
add
movsl
xchg
and
cmp
inc
jns
cmp
xchg
test
aaa
rclb
outsl
xlat
imulb
or
pop
xor
in
aaa
and
and
mov
adc
pop
xchg
cs
adc
adc
or
cmc
xor
jmp
repz
ja
jecxz
pop
and
jnp
shlb
in
popf
ds
cmp
cmp
inc
stos
rolb
push
loop
adc
xchg
pop
lea
sub
pop
add
sub
or
std
sbbb
lcall
and
cld
adc
ds
rcrl
xchg
inc
aam
jne
and
adc
push
sub
add
lods
push
dec
mov
xor
test
adc
incl
scas
les
push
sahf
inc
push
mov
adc
arpl
and
repnz
pop
push
pop
mov
leave
jle
dec
scas
or
pusha
sub
enter
mov
sub
mov
jl
repnz
jmp
insl
mov
jb
cs
les
dec
cmp
xchg
cmc
cltd
fildll
xlat
add
int
jl
push
hlt
xor
cmp
push
loope
jb
lds
mov
jo
xor
xchg
ret
imul
push
xchg
xor
leave
jo
dec
push
push
stos
sbb
xchg
gs
clc
jl
xor
sar
shrb
fists
outsl
mov
sub
cmp
inc
mov
sub
aad
movsb
popa
xor
xchg
push
ds
adcb
inc
stc
add
dec
cmp
push
icebp
movsb
and
and
jns
dec
mov
dec
xor
aad
jg
ret
movsb
xor
call
sahf
cld
sub
pop
mov
and
ljmp
adc
and
or
mov
mov
call
cmp
mov
shll
and
ja
fdivrl
mov
daa
pop
or
enter
mov
fnstcw
clc
sbb
dec
jge
sub
fadds
and
popa
fistl
rorb
add
jl
fwait
bound
lods
mov
add
mov
ja
insl
xor
xchg
loope,pt
inc
adc
or
push
cli
dec
inc
mov
xor
add
pop
inc
dec
xor
push
jge
int
aaa
lcall
out
test
int3
aad
add
out
sub
out
jno
test
test
test
cld
in
pop
sub
stc
jne
fdivrl
sbb
daa
in
xchg
mov
jmp
ss
adc
shlb
xchg
cmp
aaa
cwtl
cmp
rorl
loope
mov
sbb
ficoms
pop
xor
sub
and
cmp
ja
test
jae
inc
loopne
shl
jecxz
or
sbb
movsb
clc
sub
mov
jae
lods
pushf
mov
rolb
inc
popf
dec
cmp
icebp
and
push
mov
in
jb
add
mov
scas
jle
fadds
adc
data16
in
enter
mov
mov
xchg
push
sbb
mov
fucompp
in
push
cmpsl
xchg
frstor
inc
je
bound
out
jecxz
fbld
mov
in
in
cmp
fsubrp
ss
mov
aaa
clc
jmp
in
mov
icebp
pop
arpl
sub
xor
push
imul
aam
cld
pop
mov
jbe
and
cmp
lods
mov
loope
clc
jge
mov
push
lret
lds
mov
xchg
inc
dec
inc
out
dec
pop
mov
push
lods
jbe
pushf
pop
mov
test
lahf
jp
add
ljmp
mov
inc
outsl
or
sub
add
push
or
mov
xchg
sub
flds
fwait
xor
jne
mov
call
ror
xor
pop
gs
les
jo
clc
repz
pop
imul
test
and
cmp
pop
arpl
movsl
pop
mov
mov
inc
icebp
cs
out
and
inc
mov
cmp
je
mov
and
jmp
sbb
mov
xchg
das
insb
xchg
mov
incl
mov
iret
idiv
std
jl
sub
fidivrs
into
push
out
add
push
or
and
testb
stos
mov
push
and
jbe
pushf
lock
data16
jo
loopne
dec
fs
xor
xchg
andl
add
sub
fisubrl
sbb
sub
cmp
scas
dec
and
sub
cli
ret
and
and
movups
fadd
mov
fucomip
daa
insl
xor
xor
jg
mov
pusha
mov
add
xor
movsl
ljmp
xchg
mov
mov
aad
lahf
bound
xchg
mov
inc
add
rcrb
pop
dec
and
jl
ret
mov
or
fxch
aad
sub
aaa
mov
pop
divb
flds
cs
dec
jg
pop
inc
test
mov
inc
mov
mov
xor
mov
or
jb
jge
cmp
xchg
nop
xchg
mov
in
dec
les
mov
stos
fwait
mov
dec
pop
xor
outsl
rolb
cmp
jg
leave
or
idivl
lods
pop
and
xor
scas
cmp
push
mov
pusha
aad
adc
xor
pop
or
dec
push
jb
in
or
lcall
es
sub
mov
dec
push
bound
faddp
ja
rcll
mov
inc
jae
clc
mov
pop
in
jle
insl
push
lods
daa
sbb
sahf
imul
scas
jb
int
inc
or
int
ja
adcb
cli
sub
mov
xchg
inc
iret
ds
cmpsb
push
pop
push
adc
dec
push
push
jnp
jns
or
out
fwait
cmp
mov
loop
sub
in
cmp
test
test
pop
pop
jb
push
sub
jmp
clc
out
cltd
mov
cmpsl
sbb
stos
outsb
xor
pop
dec
cmp
cmc
adc
shlb
mov
sbb
push
lds
jp
fnstcw
cmp
xchg
or
loope
loope
iret
das
jno
ja
fcoml
push
mov
popa
das
scas
inc
insl
idivb
and
cwtl
negb
mov
clc
sub
shl
in
push
adc
xchg
cmp
stc
add
bswap
lahf
outsl
sarb
sti
ds
mov
push
push
adc
cmp
ja
mov
mov
push
add
mov
nop
cmc
repz
into
inc
xor
inc
dec
xchg
mov
xor
cmp
lcall
outsb
lret
jecxz
inc
cmpsl
rclb
mov
sbb
push
fs
dec
push
push
movsl
movsb
push
rol
adc
ljmp
fnsave
mov
and
jecxz
dec
jb
dec
mov
lret
dec
xor
adc
lea
pop
jle
sbb
imul
mov
fldcw
or
xlat
shll
sbb
inc
jo
aas
sbb
popf
popa
inc
mov
pop
jp,pn
push
ret
inc
test
insl
add
add
call
lods
lret
or
int
nop
pusha
andl
push
sub
inc
imul
mov
cmp
jns
cmpsl
out
xchg
cmp
jb
int3
pop
add
mov
sub
call
leave
aas
lret
mov
fimuls
mov
mov
loopne
insl
xchg
push
sahf
es
scas
addr16
int
mov
sbb
xchg
fstl
fsubs
jnp
add
pushf
mov
pop
aas
dec
xorb
fistl
popf
xchg
lretw
fucom
push
lcall
push
outsb
pop
in
pop
fsubp
mov
pusha
jl
imul
lds
lret
jbe
xlat
pop
sbb
jecxz
aam
mov
dec
cld
in
jbe
js
mov
lahf
loop
sahf
cmp
pop
insl
lock
dec
push
aam
movb
popa
popa
or
adc
fadds
cmp
imulb
sub
int3
movsl
in
ljmp
outsl
add
pop
mov
mov
cmp
or
lods
cli
sbb
lret
pop
outsl
cmpsl
pop
subb
test
in
scas
daa
popf
je
stc
and
js
sti
ja
cltd
inc
mov
fwait
pop
lods
fs
mov
cmp
nop
xchg
addr16
mov
and
outsb
and
add
dec
and
or
pop
add
fwait
mov
jl
jne
pop
cld
xor
or
imul
push
in
enter
add
addr16
lret
mov
test
jnp
pop
sbb
dec
test
inc
or
cltd
aad
and
bswap
pop
out
pop
vunpcklps
mov
xor
sbb
rcrl
add
iret
inc
add
or
pop
movl
mov
push
inc
shll
hlt
cmc
mov
imul
xchg
inc
inc
jnp
jbe
cmpsb
pop
fldl
add
xchg
outsl
hlt
dec
adc
and
xor
aaa
outsw
setge
aad
fdiv
xor
mov
fisttpll
arpl
adc
hlt
sub
lret
cmpsb
mov
push
lret
or
and
ret
cmp
add
into
lods
call
inc
or
and
into
cmpsb
sbb
outsl
repz
and
sbb
xchg
out
mov
out
inc
pop
inc
loop
test
mov
sub
push
sbb
mov
dec
ljmp
stos
repnz
repnz
dec
xchg
jp
pop
xor
imul
cs
and
add
cmpsb
je
jns
cmp
xchg
scas
jmp
ds
xor
and
xor
aad
sbb
fsubrl
pop
jecxz
push
jbe
inc
lcall
mov
adc
mov
push
cltd
add
mov
push
in
pusha
fsts
mov
xchg
adc
or
scas
popf
sub
cli
lods
ja
adc
cmc
imul
jbe
lcall
jno
mov
and
jae
inc
rclb
and
jge
jge
mov
jge
idivl
cmp
dec
sub
xchg
xchg
and
xchg
sub
shrb
mov
mov
or
std
xchg
jnp
outsl
mov
xchg
repz
add
cs
shl
pop
in
add
mov
lcall
jo
enter
into
rcrl
adc
std
sub
xchg
rcrb
pop
lds
push
pop
test
lcall
cwtl
lock
mov
sbb
adc
and
outsb
push
push
icebp
xlat
hlt
ljmp
std
jl,pn
test
sub
or
inc
jb
lret
les
sub
push
mov
jmp
sub
or
leave
push
or
outsb
xchg
repz
loop
mov
into
mov
cs
insb
aaa
mov
pop
pop
xchg
sub
adc
sahf
mov
les
leave
pop
iret
or
mov
addr16
mov
fnstenv
mov
push
movsl
in
cld
ret
testb
add
imul
rcr
mov
xor
ret
lods
pop
aad
enter
popa
push
pop
add
cld
enter
arpl
dec
popf
roll
aam
loop
leave
cli
cs
sub
xlat
push
xor
mov
add
mov
daa
push
xor
shr
mov
pop
addl
and
mov
adc
daa
mov
testb
sbb
or
frstor
and
inc
fs
into
sbb
or
mov
iret
scas
sti
push
into
push
mov
cmp
push
mov
into
adc
xchg
les
cmpsb
push
dec
dec
push
call
push
xor
les
pop
int3
cmpsl
or
adc
sbb
sarl
mov
pop
xchg
adc
and
cmp
cld
sbb
repnz
jb
cmp
in
fistpll
push
clc
adc
sub
sbb
adc
add
repnz
arpl
outsb
mov
inc
test
fbstp
sub
sbb
test
out
dec
pop
mov
mov
adc
sub
insb
sar
push
inc
xorb
or
test
pop
xchg
fnstsw
daa
push
push
cmc
push
adc
xchg
sub
mov
imul
xchg
and
subb
or
jmp
jg
popf
lds
or
push
inc
add
jmp
cmp
cmpsl
mov
mov
cmpsb
jp
arpl
push
lcall
xchg
incl
out
xor
insb
aad
sub
lret
push
pop
xor
jno
xor
cmp
xchg
imul
aas
dec
mov
mov
les
sub
idivb
filds
addr16
xchg
mov
inc
stos
and
stos
mov
enter
push
push
pop
push
daa
lcall
into
inc
jo
mov
cmp
cs
jge
imul
and
push
xchg
mov
in
shrl
fisttpl
addr16
mov
sbb
xor
mov
pusha
decl
fnsave
fidivs
mov
mov
arpl
push
repnz
adc
jg
iret
jnp
lock
in
jl
scas
jns
jl
jno
and
fisubrl
iret
inc
cmp
xchg
inc
ret
insl
std
jb
push
jmp
test
cmpsl
xchg
or
ss
or
add
rolb
add
scas
pop
pushf
cmp
mov
les
xor
out
jns
int
mov
mov
sti
or
cltd
mov
push
les
and
pop
dec
mov
into
cmc
sub
mov
rorb
dec
fbld
aam
shrb
dec
pusha
mov
imul
lcall
push
cmpsl
cmp
rclb
std
in
mov
sbb
sub
mov
out
jge
fcoml
jb
test
dec
adcl
ljmp
mov
fs
xor
mov
jl
jbe
lret
inc
das
sbbl
pop
outsl
and
aas
scas
test
xchg
enter
mov
push
sub
fisttpl
xor
add
add
xchg
test
lcall
adc
imulb
inc
lods
les
push
add
test
sbb
inc
cmp
push
mov
mov
movhps
adc
adc
fstpt
cli
pop
into
test
inc
or
and
sbb
les
mov
cld
mov
sbb
ss
mov
pop
dec
xlat
jmp
movsb
std
jecxz
pop
sbb
or
movsb
pop
in
mov
ss
sar
in
jmp
addr16
lods
fwait
xor
push
and
fidivs
xchg
push
loopne
dec
mov
add
push
sub
jno
dec
je
cmpsl
loop
in
pop
sahf
cmp
adcb
inc
nop
out
ja
out
add
aas
nop
hlt
pop
iret
mov
sbb
ret
sbb
add
fisubrs
jbe
mov
aaa
dec
xlat
leave
mov
mov
nop
jne
xchg
or
mov
pop
in
lods
lds
jno
jo
jge
pusha
xchg
cmp
sbb
adcl
enter
jmp
shrb
or
lock
call
dec
xchg
outsl
sbb
lea
cmc
lods
or
push
jg
lcall
into
cmp
mov
ds
mov
push
pusha
mov
movsl
sbb
push
dec
adc
adc
aad
sahf
dec
or
jl
jae
pop
nop
pop
inc
sub
fwait
mov
clc
pushf
lea
pop
iret
cmp
scas
xchg
addr16
lock
jp
mov
push
adc
xchg
ficomps
jns
xor
cs
jge
and
test
xor
sub
cld
insb
repz
sti
sbb
fisttps
jle
sbb
das
jp
dec
sti
inc
adc
inc
jmp
xchg
cmpsb
test
sub
and
xor
or
inc
push
push
mov
js
or
mov
stc
adcb
rorl
inc
mov
sbb
imul
das
scas
pop
std
inc
xchg
mov
stos
mov
aam
adc
jno
mov
dec
add
lret
cmp
and
cmpsl
loop
int3
inc
xchg
push
leave
jp
lods
sub
lcall
stc
pusha
movsb
rol
and
mov
mov
xchg
call
ds
leave
jno
cmp
mov
es
out
mov
sbb
cmpsb
pop
xchg
ds
pop
push
pop
xchg
sbb
stos
sti
repnz
in
stos
and
jns
mov
test
xchg
cmp
add
popl
sub
icebp
jp
xor
mov
test
sarl
pop
cmp
sbb
in
mov
jge
mov
sub
cmp
js
ljmp
xor
arpl
je
loopne
mov
in
pop
jg
or
into
pop
xor
adc
jl
adc
aaa
push
cmp
ret
iret
inc
jo
inc
das
cmp
rolb
lcall
scas
jecxz
dec
mov
dec
mov
push
xchg
sbb
add
mov
push
add
fistpl
and
gs
or
rclb
popa
and
sub
fcomi
mov
stos
cltd
lds
cmpsb
or
loope
adc
test
add
je
push
fisubl
dec
test
push
mov
push
lock
out
sub
aas
mov
mov
out
aam
sbb
aam
xor
push
xchg
out
loop
pop
fwait
insl
mov
mov
push
call
sbb
xor
push
les
sub
mov
lods
inc
push
ret
mov
sub
sub
pushf
rorb
aas
mov
add
ror
stos
mov
cmpsb
pop
popf
or
adc
mov
lret
mov
rclb
pop
andl
mov
fsubr
aaa
stos
arpl
mov
xor
test
mov
cmp
lcall
stos
fwait
daa
xchg
cld
or
stos
push
or
xor
pmaxub
xchg
stos
fidivrs
outsl
dec
pop
push
hlt
pop
xchg
cs
out
icebp
js
inc
push
js
or
and
loop
and
outsb
push
lret
mov
pop
xlat
fisubrl
adc
mov
push
fildl
pop
js
int
mov
add
pop
push
adc
scas
data16
loope
add
out
xor
jns
jns
bound
pop
into
shlb
pop
aas
insb
and
mov
sbb
mov
xchg
sbb
lods
pop
shlb
pop
cmp
adc
test
out
jl
inc
jnp
jp
sahf
sbb
cmc
and
pusha
pop
test
and
mov
xor
call
mov
addl
and
dec
inc
addr16
movl
in
cli
or
pop
fiaddl
int3
and
movsl
dec
vmulps
into
pop
sahf
out
and
mov
mov
in
add
add
outsl
popf
inc
lret
push
pop
repz
or
sub
and
out
pop
and
test
adc
xchg
dec
imul
jp
mov
ja
mov
fstpl
cmc
dec
mov
in
or
mov
xor
jle
jge
dec
loope
xchg
sub
sti
ds
aaa
mov
pop
cmpsb
fidivs
sbb
ljmp
and
bound
fcomps
xchg
add
dec
dec
cmpb
in
sub
sub
adc
cld
in
mov
imulb
mov
sub
ss
or
iret
push
xchg
daa
loopne
movsl
test
das
out
pop
lret
shrl
add
pushl
xchg
dec
out
jae
cld
cltd
and
je
bound
or
push
sti
sti
and
ficomps
cmp
sbb
jge
sbb
iret
mov
inc
mulb
jecxz
cli
ljmp
test
mov
repnz
js
scas
rcl
movsb
rclb
xchg
xor
addr16
push
mov
fisttpl
xchg
out
out
xchg
pop
mov
dec
stc
inc
inc
daa
push
bnd
pop
xor
in
sub
jle
call
jne
sub
aas
xor
jl
gs
push
or
dec
mov
imul
add
sub
push
pusha
test
aam
mov
pop
push
xchg
fcomps
cmp
xor
lahf
cmpsb
aaa
sarb
rcll
lcall
and
dec
ljmp
pop
outsl
ja
jg
jmp
sub
sub
sbb
notb
sub
add
push
cmpsl
arpl
pop
lcall
xchg
insb
and
add
lea
fmull
packssdw
imul
ficoms
inc
pop
dec
mov
test
pop
xadd
dec
mov
sbb
inc
xchg
gs
sti
sub
sub
aaa
cmpsb
xchg
popf
mov
mov
or
testb
add
or
in
push
fiadds
xchg
inc
fwait
mov
sbb
inc
jmp
dec
sub
adc
mov
mov
xor
ja
inc
testl
fnstsw
and
add
dec
lret
pop
inc
outsl
mov
lea
push
mov
pop
mov
mov
xchg
shrl
add
mov
push
subl
insb
inc
cmp
fcomps
add
loop
push
test
cld
and
pop
aaa
sub
xor
das
dec
fisubs
or
and
insl
ficoml
fdiv
lock
push
cvtpi2ps
xchg
aam
jecxz
rcr
sub
test
scas
push
and
ja
xlat
mov
js
jae
icebp
cmp
movsl
test
pop
fdiv
js
test
dec
ds
sti
out
pop
adc
cmpsb
sbb
dec
cld
imul
test
in
xchg
pop
mov
aad
pop
jo
cli
sub
adc
lcall
rcll
or
ret
push
enter
inc
pop
jl
mov
jns
add
push
subb
xor
push
cs
cmpsb
push
push
push
fidivrs
cmp
lea
les
jle
aas
cmp
xchg
je
repz
sbb
arpl
pop
std
mov
push
cmp
xchg
mov
bound
jo
and
loop
inc
add
ret
mov
cld
pop
cmc
jg
sbb
idiv
add
dec
ret
rcr
test
dec
fstps
pop
xchg
cmpsb
rcrl
sub
insb
jecxz
jbe
pop
dec
sub
fxch
ja
inc
pop
icebp
fbstp
clc
int3
xor
mov
mov
cmp
arpl
or
icebp
mov
les
mov
test
xchg
icebp
xchg
lahf
mov
shr
dec
jb
adc
rorb
fcompl
mov
inc
into
add
in
enter
add
mov
jo
or
in
lcall
bound
in
lods
es
pop
popa
mov
xchg
sbb
sbb
inc
add
push
repnz
mov
les
out
lret
jno
add
inc
or
push
out
mov
dec
loope
dec
inc
loope
cmpsl
xor
aaa
pop
cmc
idivl
push
push
rdtsc
nop
sbb
inc
pop
xchg
adc
test
push
lds
lods
aam
movsb
jb
push
js
scas
inc
in
call
or
int
sub
dec
pop
inc
xchg
pop
pop
pop
idivl
sub
scas
or
das
mov
inc
aad
test
lahf
and
push
push
pop
test
ret
jno
lods
jmp
dec
mov
test
cltd
shlb
filds
mov
sbb
xchg
mov
or
roll
cmp
fs
cli
mov
lds
cld
pushf
jl
jp
jmp
pop
cmc
outsb
iret
cmp
dec
loopne
mov
mov
aad
ja
stc
ret
ljmp
outsb
mov
jg
inc
mov
and
add
loope
cmp
dec
sbb
popa
push
sub
aaa
scas
out
fidivl
mov
bnd
pop
mov
pop
xlat
dec
stos
push
jbe
cmp
repnz
push
negb
or
popf
xchg
mov
push
loopne
fists
fs
incb
inc
sub
loope
fisubrl
pop
jnp
int
adc
mov
mov
inc
shlb
dec
shrl
iret
mov
push
dec
lods
test
pushf
xchg
fdivs
lret
ret
inc
push
repz
adc
mov
and
or
fsubl
sub
in
sub
int3
cmpsl
mov
adc
in
lahf
addr16
je
cmp
xor
xchg
and
jle
int3
call
pop
in
dec
mov
jns
cmpsb
mov
mov
pop
aam
pop
pushf
push
cmp
inc
mov
frstor
fisubs
push
xor
clc
std
or
sbb
xor
or
xchg
adc
sbbl
cltd
movsb
pop
stc
and
and
nop
cmpb
inc
imul
jmp
cs
mov
add
push
ret
jl
and
cmp
push
pop
cmp
inc
scas
inc
dec
xor
test
mov
adc
int3
add
addr16
push
loopne
push
insl
xchg
jp
scas
adc
xor
clc
sub
mov
lret
sub
mov
nop
mov
pop
jno
xchg
call
jbe
outsb
cmp
ljmp
fisubrl
ss
sub
mov
or
jl
push
shrl
sub
cs
fisubl
test
xchg
leave
jno
jge
arpl
dec
stc
jmp
add
pusha
push
aad
hlt
push
jmp
lds
jne
aaa
mov
mov
jae
push
pusha
add
xor
pop
sub
pop
out
ljmp
jbe
push
cmp
out
loopne
inc
popf
jb
inc
push
xor
call
adc
jnp
sub
inc
xor
push
ljmp
xchg
aas
inc
sub
xor
adc
xor
xor
icebp
push
incl
in
lcall
mov
jne
fpatan
push
adc
lods
adcb
inc
rol
dec
mov
cmp
cwtl
repz
inc
xor
mov
fisubl
sbb
rcrb
in
int
data16
insl
lods
dec
and
ss
inc
mov
insb
and
sub
xbegin
sahf
imul
mov
shlb
mov
sahf
adc
and
ret
add
lods
daa
aad
dec
pop
inc
jg
sahf
mov
push
cwtl
or
imulb
aas
xlat
pop
mov
xchg
dec
outsl
sarl
xlat
out
aad
scas
movl
push
ss
leave
decb
jmp
adc
cs
movsl
lock
daa
nop
lahf
leave
ljmp
pushf
cmpsl
cmpsl
int3
mulb
jmp
imul
push
insl
movsl
inc
inc
inc
call
out
adc
jnp
lret
push
lcall
pusha
loope
add
cmc
adc
pop
test
xchg
adc
or
subl
out
xchg
leave
jle
pop
es
pop
sbb
mov
cmp
mov
insl
nop
inc
popf
bound
dec
or
mov
dec
jl
inc
cmp
je
and
sub
adc
mov
outsb
std
roll
out
and
fnstenv
movsl
sub
pushf
js
add
ja
pop
pop
lea
pop
mov
push
or
rcrl
dec
cmp
jp
lcall
sub
std
dec
xchg
sub
sar
jge
sahf
sbb
fildl
or
pop
loop
outsb
add
xor
pop
jge
dec
jg
in
sbbb
mov
xchg
cmpsl
or
scas
hlt
mov
inc
sahf
test
rol
popa
sbb
mov
icebp
mov
adc
jp
and
stc
or
fisubrl
ljmp
ret
or
stc
ds
push
mov
mov
rcrb
stos
int3
sub
dec
leave
dec
fs
stos
loope
dec
or
in
clc
add
dec
ds
ret
adc
adc
mov
popf
inc
xchg
mov
lahf
xor
push
adc
pop
add
lock
outsl
lods
rcll
sahf
mov
push
stc
test
stos
push
hlt
inc
adc
fs
add
cmp
bound
leave
jg
sti
jl
mov
xchg
xchg
lret
dec
ljmp
xor
and
subb
or
pop
dec
adc
jmp
dec
pop
pop
icebp
xchg
add
adc
or
add
cli
add
in
in
mov
mov
pushf
daa
mov
lods
imul
push
pop
xchg
or
add
cmp
inc
cmp
push
rolb
adc
out
lock
cli
imul
scas
pop
daa
orl
add
add
sahf
push
jne
cmp
sbb
xor
push
rolb
pusha
xor
in
subl
cltd
mov
scas
cmp
rcrl
lods
lea
test
or
jge
fbstp
adc
jnp
cli
das
sub
call
xchg
pusha
test
mov
popa
cmp
add
add
mov
push
jle
adc
pop
mov
lcall
movsb
iret
pushf
nop
rorl
ljmp
push
ja
push
xor
xchg
into
sub
add
lret
and
and
jo
and
repz
push
das
adc
loope
pop
pushf
cli
popf
stos
jae
decb
lcall
gs
mov
sub
xchg
out
xchg
clc
push
jae
xchg
ja
xchg
hlt
bnd
mov
je
xor
and
stos
pop
aam
fildll
mov
loop
pusha
lds
adc
adc
jnp
push
sub
cmp
dec
mov
and
insb
out
xchg
lods
loope
mov
jno
or
fmulp
jo
inc
sub
sbbb
punpckhbw
fmul
and
js
pop
push
js
xchg
fcoml
lcall
js
cmp
push
push
addr16
adc
insl
pop
mov
fisubs
cld
sbbl
cs
ret
in
into
ds
push
ret
ja
stos
mov
sub
insl
mov
cmp
jne
sub
push
ljmp
jae
icebp
or
lds
iret
pop
out
mov
jno
sbb
jle
clc
push
cltd
inc
das
dec
cmc
dec
mov
icebp
xchg
mov
adc
call
or
ja
scas
push
movsb
jecxz
jns
jb
les
mov
dec
in
sub
jno
js
mov
sub
inc
sub
jb
mov
out
fnstenv
rol
ficompl
mov
push
xchg
sbb
cli
dec
mov
out
pop
xchg
popf
jge
inc
ror
or
mov
mov
shll
loop
es
mov
pushf
out
or
out
inc
xchg
movsl
fprem
mov
xlat
push
bound
mov
icebp
gs
mov
rorb
mov
dec
jne
arpl
push
scas
dec
loope
push
fnsave
push
scas
nop
xor
pop
pop
xchg
xor
pop
je
xor
clc
dec
and
or
sub
rcrl
pop
daa
enter
nop
jmp
lcall
mov
sti
imul
pop
mov
cmpl
in
cltd
das
mov
add
fs
lds
fnsave
sub
lock
jno
mov
roll
inc
mov
in
jnp
adc
dec
xchg
sub
push
xchg
push
in
sbb
xor
xchg
pop
enter
test
sub
xorb
fiaddl
mov
cmp
test
fstpl
cmpl
push
hlt
push
fadds
test
not
fs
jmp
jl
movsl
push
fsub
cltd
mov
dec
iret
cwtl
stos
out
stc
pop
or
movsl
mov
sarl
xchg
cltd
mov
nop
call
inc
std
ljmp
adc
ficompl
stos
imul
lret
xor
aaa
sub
mov
movsl
sub
ljmp
xor
push
insl
int3
jmp
stos
iret
ja
jns
cmp
fistps
cmc
mov
jne
adc
out
gs
dec
js
fwait
ror
sbb
mov
sub
repz
and
shlb
inc
std
mov
sti
push
cs
inc
jae
icebp
nop
je
or
pop
sub
push
or
iret
in
pop
mov
pop
adc
sub
shlb
sbb
xchg
mov
push
fwait
pop
mov
push
roll
sahf
sbb
lock
cltd
es
jne
shlb
adc
inc
sbb
mov
mov
dec
push
mov
jae
mov
and
mov
inc
aas
sub
lcall
fadd
pop
cmpsb
xchg
mov
imul
popf
or
in
mov
lcall
mov
aaa
insb
jae
pop
jge
dec
xchg
stos
rcrl
push
outsb
add
jns
ljmp
call
daa
insb
lds
pop
loopne
mov
xchg
les
mov
push
xchg
aas
es
movsl
mov
bound
pusha
outsl
push
leave
std
jp
jno
and
lret
dec
cwtl
in
test
cltd
cmp
divb
insl
cld
lea
mov
popa
rorb
add
out
inc
aam
in
add
fdivl
jnp
out
pop
dec
mov
xor
aas
pop
sbb
sbbb
pop
mov
add
xchg
in
xorl
adc
push
cwtl
pop
cmp
test
adc
sbb
dec
fwait
mov
sahf
jae
subl
adc
xor
mov
jg
inc
push
cld
or
dec
aam
jnp
cmp
cmp
ret
inc
jae
int
sarl
ret
mov
cmp
or
fdivrs
pop
xorb
repz
push
pop
xchg
imul
jbe
int
test
adc
jmp
stos
lret
push
xor
jne
je
addr16
jecxz
rcrb
lcall
adc
loope
xor
testb
sbb
mov
pop
xchg
cld
pop
xorl
inc
push
jmp
cltd
sahf
mov
cvtpi2ps
inc
imul
jno
gs
nop
iret
aas
imul
daa
cmp
lock
stos
scas
xlat
jno
stc
in
in
enter
stos
mov
or
mov
pop
orl
mov
inc
mov
mov
mov
fs
faddl
test
cmp
enter
mov
dec
pop
xor
push
stos
push
stc
mov
jns
and
jg
fs
mov
orl
jne
cld
jle
lds
dec
pop
mov
and
imul
mov
cltd
jnp
mov
mov
sub
aaa
jmp
sti
or
dec
cmc
and
ret
imul
jne
dec
aam
je
xchg
sbb
push
loopne
mov
push
insb
pop
filds
adc
cmp
out
pop
mov
pop
ret
push
xor
adcb
lahf
cld
push
imul
and
push
test
xchg
pop
cld
mov
and
or
scas
sahf
je
sub
mov
and
sti
jae
add
push
push
or
fwait
test
lahf
insb
cmp
pop
adc
in
rcrb
test
insb
scas
ljmp
mov
xchg
pop
movsb
jmp
jmp
mov
cmpsl
shrb
jbe
mov
jno
in
mov
or
adc
lock
mov
pop
cld
or
inc
inc
inc
rolb
xchg
jg
push
xchg
fwait
pop
xchg
pop
lret
xchg
jl
fimull
xor
int
outsb
mov
repnz
mov
xchg
lock
ja
jp
dec
adc
je
insl
jb
dec
jge
repz
fnsave
or
and
push
repz
or
jae
leave
sbb
test
mov
test
into
dec
pop
add
and
jns
adc
in
cmp
loope
shlb
aad
pop
js
lcall
mov
pop
sub
dec
mov
out
jo
es
addr16
test
and
iret
and
pop
pop
push
add
pop
rdmsr
push
lea
cmp
push
movb
cli
jmp
lahf
adc
or
test
mov
test
push
add
cmp
rcl
mov
mov
sbb
xchg
cltd
in
ss
or
cmp
sub
adcb
mov
mov
pop
lods
imul
es
int3
push
push
mov
in
cmc
mov
scas
fisttpl
mov
int
and
xchg
popf
mov
mov
or
loope
pusha
adcb
sub
jge
in
cli
pusha
fdivrs
and
xchg
jnp
mov
mov
xor
or
rcll
pop
push
mov
sahf
in
cmpsl
xchg
insb
jbe
bound
pop
popf
adc
sbb
xchg
lods
jge
gs
xchg
dec
es
out
mov
or
cmp
arpl
dec
lcall
add
add
jecxz
push
xchg
inc
pop
cmp
jno
push
and
jno
xor
mov
pop
inc
bound
mov
adc
into
mov
insl
jp
jmp
arpl
or
leave
sub
lcall
xchg
push
leave
in
idivb
lret
sbb
lods
fstp
and
adc
jae
mov
test
repnz
faddl
pop
xor
insl
push
and
ficomps
xlat
subb
arpl
mov
xorb
lods
int
es
sub
pop
jo
cmp
cmc
cld
sub
sbb
fimull
movsl
js
repz
in
jbe
sub
pop
test
jbe
push
out
ja
mov
les
scas
mov
enter
out
cmp
ljmp
mov
call
push
push
ficoml
jp
insl
pop
or
jge
and
stos
lock
outsb
enter
in
pop
pop
push
mov
sbb
cmc
jbe
orb
jbe
jmp
das
cmp
pushf
sbb
sbb
xor
xor
das
inc
push
iret
dec
ss
mov
push
or
jnp
lret
or
mov
sarb
add
fdivs
cli
aaa
xor
mov
popa
mov
cld
jb
pop
push
sub
ret
int
xchg
dec
cwtl
mov
adc
dec
jns
mov
mov
adc
enter
cltd
mov
pop
pop
scas
fdivl
lea
jb
mov
leave
roll
cltd
pusha
stos
adc
push
and
jbe
cmc
sub
gs
cmpsb
xor
sarb
jg
dec
bound
shll
jns
jb
mov
cld
add
fsubrl
bound
inc
icebp
pop
inc
sar
nop
adc
push
push
xchg
push
es
popa
das
or
jl
leave
mov
inc
cmp
fcmovnb
ret
stos
mov
mov
fcoml
push
cld
or
in
sbb
fwait
jne
push
ret
adc
rcll
cwtl
mov
sub
mov
lods
xchg
popa
roll
adc
jmp
pushf
mov
push
sbb
lret
addl
xor
arpl
ds
mov
push
pushf
inc
fstl
mov
mov
in
sarl
out
cmp
repnz
filds
dec
negl
clc
ljmp
fadds
stos
jle
lcall
mov
inc
mov
add
in
sbb
fxch
lcall
dec
cmp
cmp
lds
jbe
xchg
push
loop
dec
jmp
daa
popa
cmp
pop
fcomps
aad
xorl
mov
js
adc
mov
mov
loop
and
bound
call
faddl
ficomps
aam
test
inc
xchg
push
out
xchg
pop
xor
in
rorb
adc
in
inc
pop
jg
dec
and
nop
stos
pop
rolb
mov
or
mov
out
cwtl
popf
mov
sbb
daa
test
stc
loop
fcmovne
cld
lret
pop
add
pop
xlat
lods
data16
call
jb
movsb
push
into
jnp
in
out
mulb
adc
fisttpll
ss
xchg
and
xchg
pop
aas
mov
dec
pop
adc
mov
ss
or
push
inc
push
fsubrs
scas
loopne
ret
popa
into
inc
and
mov
aaa
push
aad
dec
jge
ss
fadd
sub
and
cmpsb
ret
lcall
dec
jg
adcl
push
xor
adc
jge
mov
in
fldcw
mov
sbb
divb
sub
sub
jne
outsb
sbb
mov
in
xor
add
adc
out
test
jge
in
dec
rcl
cmp
push
dec
sub
aam
lret
sub
movsb
lock
lock
lret
repnz
js
xchg
or
mov
aas
shlb
jp,pt
roll
and
xchg
test
mov
test
xchg
mov
gs
mov
decl
scas
sbb
stos
mov
pop
push
dec
xlat
xchg
jo
les
jp
sbbl
stos
movsl
shll
mov
notb
addr16
inc
dec
inc
push
cli
and
mov
cmc
xchg
mov
mov
jns
iret
jb
es
fists
and
jge
dec
cmc
and
in
out
sbb
xor
dec
imul
jg
push
mov
imul
das
dec
inc
jecxz
xchg
fistps
rorl
mov
jp
or
leave
jmp
push
cmp
mov
cmpsl
lock
jmp
pop
sub
inc
mov
jnp
adc
jmp
add
add
cs
prefetch
push
inc
dec
out
in
insl
cmpsl
imul
push
pop
inc
cwtl
fcmovnu
out
fistpll
data16
jg
loopne
cmp
lret
aaa
bound
aas
xor
adc
xchg
js
sub
push
cmp
inc
cli
pop
jecxz
outsb
arpl
sbb
popa
js
aad
cmpsl
insb
pop
bound
into
xlat
repnz
outsl
in
pop
dec
xor
fnsave
fs
jle
xor
ret
mov
mov
mov
and
push
into
mov
push
loopne
jmp
sbb
xor
sarl
mov
int3
push
xor
sub
pop
push
movsb
xchg
mov
inc
mov
fdivl
and
mov
jns
push
aas
or
xchg
leave
and
cmp
dec
jns
mov
pop
cmp
fs
xor
ficoml
xor
scas
imul
dec
or
test
mov
cmp
loopne
inc
pop
fstpl
out
sbb
push
xchg
rol
pop
aad
adc
out
cmp
iret
xor
adc
cli
outsl
xchg
push
mov
scas
in
test
sti
mov
pop
std
les
in
push
ds
stos
jge
and
rorl
or
pushf
and
jle
fisttpll
cmp
sbb
mov
or
dec
clc
dec
leave
adcb
xchg
aaa
leave
push
or
cmpsb
push
inc
push
pand
stos
jb
add
orl
sbb
push
mov
sbb
xchg
and
daa
hlt
mov
xchg
fucomip
mov
rol
push
xchg
sub
js
std
push
fs
pop
sub
jge
mov
cmp
xchg
mov
fsubrp
jecxz
or
cmc
clc
adc
scas
xor
or
xchg
and
ja
mov
adc
sub
test
inc
cmp
dec
xchg
callw
stc
andb
pusha
xchg
add
in
push
mul
and
pop
dec
jns
fstpl
pop
int3
sbb
dec
cmpsl
cld
mov
nop
jb
dec
mov
vpavgw
add
incb
mov
stos
inc
out
daa
dec
sbb
xlat
test
daa
dec
fucomip
mov
in
inc
mov
mov
in
imull
test
sub
and
sbb
jo
and
mov
mov
and
sbb
xchg
ja
adc
sub
aad
pusha
das
or
cmpsb
sbb
fcmovnb
int
mov
xchg
cmc
sbb
rorl
add
sbb
mov
mov
aad
pop
stos
xchg
fcompl
div
lods
test
pusha
jle
ret
pusha
sub
adc
add
cmp
push
movsb
adc
decl
mov
cmp
dec
xchg
daa
pop
adc
ret
sbb
mov
mov
sti
cld
mov
inc
stc
add
mov
sub
es
mov
jo
push
subb
pusha
addr16
les
inc
mov
xorb
adc
sarl
mov
sub
icebp
mov
jecxz
push
push
pop
xchg
pop
test
sbb
push
stc
ja
xchg
xchg
outsb
addr16
nop
cmc
fildl
out
and
or
stos
pop
pop
xchg
sbb
mov
jbe
inc
fs
add
gs
jno
xlat
adc
jmp
shl
outsb
cmc
ja
mov
in
les
add
sbb
mov
lock
roll
push
dec
je
insb
xchg
xchg
leave
out
int
in
pop
test
mov
mov
lea
adc
mov
shl
fmull
push
out
sbb
mov
jb
and
dec
mov
test
mov
xchg
fstpt
inc
or
sbbb
daa
dec
add
movsl
or
stc
lret
addr16
daa
xor
mov
cld
sti
mov
pop
xchg
divb
xchg
repnz
xor
ret
ret
pushf
dec
pushf
inc
dec
aad
xor
push
mov
testb
outsl
sbb
fistpll
sbb
push
idivl
pop
ljmp
test
iret
cmp
push
ds
and
ljmp
icebp
gs
cmp
stc
adc
fldl
xor
or
cs
movsb
xchg
fs
adc
pushfw
insb
inc
loopne
sbb
jb
fwait
push
inc
in
jae
pop
lock
int
mov
add
and
push
rorb
aas
nop
cli
notb
outsl
mov
sub
cmp
fistps
push
xchg
sbb
stos
mov
xor
and
xchg
add
scas
jg
and
jbe
lahf
fdivr
ds
sarl
scas
adc
sbb
jecxz
outsb
xor
lret
sbbb
mov
push
ja
jae
int
loopne
enter
jg
or
int
jne
insb
inc
insl
pop
xor
mov
jns
and
mov
cmpl
mov
fnop
pusha
stos
add
dec
sti
pop
stos
mov
fcompl
pop
loope
movsb
popf
test
xchg
mov
loopne
lock
aas
inc
scas
or
dec
pushf
xchg
or
push
mov
fs
pop
mov
sub
pop
out
jl
xchg
rorb
xchg
test
jne
mov
es
iret
insl
pop
jne
mov
and
or
aad
jmp
imul
mov
jp
xchg
lods
mov
pop
andl
gs
or
jl
loope
dec
mov
out
pop
ret
shl
lahf
sbb
xchg
mov
sbb
lret
mov
out
repnz
insb
cmp
or
aad
xor
lcall
xor
xchg
mov
sub
repz
ds
or
stc
adc
xchg
push
jnp
test
clc
mov
or
rol
xor
sbb
pop
fisubrs
sbb
sbb
out
cmpl
out
xchg
sbb
jnp
inc
es
mov
mov
adc
sub
jne
out
cmpb
popf
cwtl
mov
jl
inc
cltd
ja
jns
adc
inc
cmp
pop
pop
xchg
mov
adc
getsec
scas
sbb
imul
and
add
in
xor
nop
pop
push
sub
add
cmp
dec
dec
cmp
inc
mov
bound
xchg
cmc
mov
add
jae
sub
nop
jle
das
mov
cmp
fs
xchg
lea
xchg
jns
jp
popa
hlt
sbb
or
lret
sahf
jmp
test
dec
cwtl
and
jmp
sbb
xor
daa
push
push
jb
es
jne
sbb
lock
add
bound
lret
cmc
pusha
fistpl
add
bswap
iret
pushf
xchg
add
pop
jmp
arpl
add
mull
push
push
add
xlat
xchg
iret
jge
push
jno
inc
in
pop
mov
popf
leave
mov
enter
add
fnstenv
mov
in
cmp
insl
sbb
mov
orb
sub
mov
sbb
sbb
pop
movl
mov
pusha
mov
fs
xchg
xor
arpl
std
ja
jne
das
xchg
and
xlat
loope
out
or
lds
shlb
xlat
dec
or
ror
sti
idiv
inc
adc
call
and
or
insb
ss
xor
push
inc
xor
xchg
lcall
or
or
ja
and
dec
jb
aaa
xor
push
mov
add
insb
sub
aas
jo
adc
inc
xchg
negl
test
in
es
stos
lret
mov
fs
inc
shll
cltd
mov
jno
sti
jl
std
inc
mov
or
mov
in
sub
int3
pop
jge
sub
imul
jmp
cli
and
mov
dec
enter
into
imul
xchg
lret
jmp
push
and
stos
daa
std
push
into
lret
aad
daa
mov
mov
adc
or
mov
cmc
pop
stc
inc
cwtl
xor
repz
stos
popa
leave
shrb
call
test
repz
xor
jecxz
push
cmp
xchg
push
cmpsl
je
aam
arpl
es
mov
cmpsb
adc
stc
jb
repz
out
push
push
push
cmp
leave
xchg
clc
lds
or
inc
inc
fs
dec
or
sbb
cltd
xchg
pushf
pop
mov
jnp
mov
mov
shl
in
add
adc
sbb
cltd
iret
inc
mov
xor
ja
push
aaa
scas
inc
push
xor
test
pop
xor
outsl
cli
adc
push
xchg
push
jo
andl
ss
jno
pusha
fwait
mov
adc
das
cmpsb
xchg
dec
push
shrl
add
test
xchg
aam
sbb
dec
cmp
movsb
lea
stos
mov
aam
test
sub
jns
ror
shrl
dec
sbb
imul
sub
les
ret
xchg
clc
mov
lods
test
into
cli
dec
mov
loopne
jae
adc
sub
popa
inc
sahf
ret
sbb
dec
fidivrl
or
inc
loop
cmp
and
xchg
sbb
xor
lret
sbb
pop
xchg
cmp
mov
psrad
repz
mov
scas
pop
xchg
jmp
sahf
mov
orb
into
jne
hlt
mov
mov
jns
insl
sub
movsb
inc
stos
cmp
iret
sbb
insl
and
out
add
adc
int3
aad
dec
inc
ljmp
xchg
les
cli
ret
stos
rol
mov
push
sub
pop
jne
adc
inc
inc
inc
jo
fldt
xorl
pop
jb
cmp
inc
mov
mov
lahf
mov
dec
arpl
push
and
dec
subl
pop
imull
sahf
dec
add
pop
dec
xor
pop
mov
mov
mov
mov
int3
hlt
sbb
hlt
pop
pop
sub
out
lret
test
sbbb
into
mov
xchg
pop
dec
dec
mov
orl
pushf
dec
stc
add
mov
cli
xchg
mov
jg
or
or
mov
pop
mov
dec
xchg
mov
adc
add
pop
pusha
fsubs
test
push
xchg
in
inc
push
pop
xorl
mull
in
mov
leave
xor
je
popa
fstps
loope
sbb
out
sbb
cmp
mov
lds
xchg
fiadds
fimuls
xor
push
mov
cmp
xor
jae
test
push
push
inc
xor
pop
lods
xchg
and
das
aam
out
popa
pop
pop
inc
imul
or
sbb
cmpsl
clc
stos
mov
jmp
arpl
push
mov
aas
clc
xchg
add
mov
iret
or
call
dec
mov
bound
arpl
popa
insb
lea
lds
xor
loope
sbb
lods
cli
add
push
jecxz
cs
fdiv
jg
out
fcmovb
sbb
mov
imul
inc
aas
xor
mov
and
cmc
jae
bound
dec
push
mov
fcomps
and
jbe
pop
loop
inc
leave
mov
push
test
js
mov
xchg
push
bnd
push
xchg
andb
cltd
shrl
ljmp
sub
pop
faddl
pop
jo
push
jl
insl
and
out
lret
xchg
jnp
mov
gs
mov
inc
rcll
jmp
add
push
lea
out
adc
out
cld
lahf
lock
xor
pop
xchg
pop
xchg
insb
in
cmpsl
or
out
cmpsb
das
dec
jmp
dec
gs
pop
addr16
imul
mov
cmpsb
sbb
sbb
cmc
inc
push
cld
inc
xor
and
lret
lahf
test
fnsetpm(287
jo
shr
xchg
adc
movsl
mov
mov
push
mov
xchg
sub
loope
repnz
rcrb
outsl
add
push
inc
lds
jmp
aas
in
stos
shr
in
notl
mov
mov
or
imul
xchg
in
mov
mov
push
incl
dec
iret
xchg
mov
jg
push
sahf
lcall
es
pop
rorl
fs
mov
inc
ret
fidivl
and
sbb
or
xor
movsl
in
imull
add
fsub
push
adc
xor
loop
sbb
out
jg
subl
hlt
aad
or
and
ljmp
fldt
adc
jno
loope
push
mov
loope
mov
pushf
inc
cmp
or
jno
sub
jno
int
int
xchg
mov
scas
cmpsl
inc
xchg
jno
out
adc
imul
jecxz
jb
mov
cli
sbb
pminsw
cmp
inc
in
xor
mov
notb
push
pop
jb
sbb
cltd
ja
gs
jbe
pop
lahf
cmp
push
and
xor
add
ret
inc
out
cmpsl
lods
scas
stc
mov
sub
mov
mov
mov
sbb
scas
hlt
adc
mov
dec
lcall
sbb
mov
or
nop
into
xlat
or
xchg
rcrb
pop
adc
cwtl
xlat
popa
std
int
xchg
ret
xor
pop
mov
stc
sbb
xchg
pop
sti
sub
push
jmp
inc
jp
and
fs
xor
mov
scas
pop
loope
cmc
push
xrstors
shll
sub
lds
dec
mov
mov
cmpsb
in
shl
jp
jne
and
inc
mov
sbb
cmp
xor
jnp
stc
push
dec
sub
arpl
mov
xchg
inc
cmp
mov
lcall
jno
scas
jae
imul
jmp
dec
or
insb
cmp
mov
out
inc
and
idiv
jge
ja
popa
cli
cmpsl
scas
cltd
jbe
xor
daa
lahf
sbb
fdivrl
mov
test
and
push
sbb
pop
jbe
push
sub
ljmp
push
mov
and
mov
les
cmpsb
mov
jecxz
mov
cwtl
cmpsb
std
push
adcb
fwait
dec
insw
imul
shll
cs
bound
scas
mov
sahf
pusha
shll
ljmp
xchg
das
cmpsb
xchg
bound
add
sahf
inc
xchg
inc
pusha
loope
pushf
cmp
xor
out
push
pop
mov
xchg
int
sbb
xor
aaa
ror
in
sbb
fs
and
pop
popf
mov
push
int3
aaa
repnz
in
es
test
and
popf
mulb
sub
xchg
jbe
push
scas
hlt
pop
addr16
sbb
decb
mov
in
ja
or
pop
sbb
inc
pop
pop
inc
addr16
adc
or
pusha
push
jb
push
mov
aad
push
outsl
mov
not
fsubrp
sar
movsb
xor
pushf
sub
sub
cs
sbb
das
sub
rclb
and
int3
or
aam
out
push
fisttpll
imul
and
popf
mov
fsubs
inc
adc
jg
movsb
nop
pop
in
fnstcw
xchg
cwtl
jmp
adc
pop
xchg
jmp
sub
sub
xor
cmp
addr16
inc
or
ljmp
adc
jmp
and
sub
aas
dec
mov
push
jno
inc
inc
lret
cmpl
imul
mov
fdivrl
cmp
dec
push
and
dec
dec
jecxz
sahf
adc
sar
stos
cld
add
mov
stos
mov
adc
push
push
adc
sub
repnz
push
adc
popa
roll
push
push
scas
mov
adc
adc
testb
dec
add
adc
movsl
xor
fildl
pop
jp
pop
test
mov
stos
test
sub
mov
gs
mov
pop
in
dec
clc
cmp
mov
lret
mov
cwtl
outsl
outsb
shrb
add
negl
ljmp
push
mov
xor
pusha
scas
adc
fwait
lcall
and
jecxz
incb
adc
mov
xchg
adc
movsb
gs
ss
mov
cld
or
fbld
mov
pop
mov
jo
inc
mov
or
fsubl
xor
adc
ret
pop
adc
inc
xor
and
sub
xchg
stos
inc
mov
inc
push
outsl
cmp
cmpsb
xchg
rorl
lret
pop
lcall
push
add
mov
cld
cmp
ret
push
js
or
inc
push
es
clc
or
pushf
cld
jmp
sbb
stc
ljmp
mov
add
push
daa
pop
stos
lea
sahf
mov
in
int
sub
lahf
xchg
movsl
sub
or
leave
test
roll
imul
repnz
aam
mov
mov
in
je
out
push
ret
cmp
pushf
mov
addr16
sahf
mov
lret
or
idivl
negb
or
and
movsl
pushf
jge
test
and
movsb
loope
das
test
stos
fisttpl
repz
xor
jl
insb
hlt
pushf
pop
shll
mov
lret
aad
mov
stos
fcom
adc
pushf
add
xlat
out
clc
jbe
push
and
or
inc
in
pusha
jo
jns
jmp
mov
pop
rorl
mov
mov
dec
inc
mov
pop
movsl
movsb
mov
adc
fistpl
lods
mov
adc
out
push
sbb
fcoms
ret
loope
insl
adc
frstor
std
push
cmpsb
jnp
rcl
icebp
aaa
or
jns
daa
and
and
movsl
enter
cld
jo
jg
mov
jno
inc
sbb
mov
mov
js
add
sbbl
stos
pop
mov
xchg
out
addr16
dec
iret
cld
mov
shll
jle
pushf
je
sarb
out
iret
int
in
lods
arpl
scas
insl
arpl
sarl
mov
sbbl
mov
rcrl
pop
add
xor
in
gs
pop
enter
loopne
movsb
test
cmpsl
add
rorb
cmp
push
mov
lret
pop
fadds
mov
lock
out
nop
sbb
adc
test
lods
cmc
lods
or
push
test
lods
or
loop
sub
popf
xlat
outsb
sub
xchg
mov
jmp
loop
push
pop
pop
and
push
xor
jl
xor
mov
jne
das
lds
and
pop
mov
adc
jbe
xor
or
rorb
push
or
fistpl
insb
xchg
les
or
and
xacquire
pop
adc
pop
push
jb
js
pusha
and
lea
in
outsb
in
mov
orb
fisttps
jl
adc
adcl
loope
jecxz
jo
bound
aaa
cs
subb
jecxz
add
xchg
shrl
shll
les
jmp
pop
ja
rcrb
sbb
iret
loop
jo
cmpsl
cmp
jb
jno
enter
and
add
mov
xor
loop
xor
sbb
pop
mov
ror
sub
fs
jbe
xchg
mov
xchg
mov
mov
sub
rorb
pop
stos
lret
aam
sbb
mov
popf
mov
jb
lret
mov
lods
jnp
mov
scas
cmp
push
frstor
pusha
mov
popa
sub
lods
xor
jb,pt
or
out
mov
cli
repz
xchg
inc
or
xor
jle
lahf
or
sbb
push
aaa
test
mov
sbb
add
sbb
mov
es
xchg
mov
jle
fcoms
xchg
xchg
arpl
adc
xchg
adc
add
test
lods
push
jmp
adc
std
dec
inc
jae
sahf
jnp
add
xchg
mov
in
sti
sbb
mov
cld
js
sbbl
xor
das
rcll
push
cltd
dec
shll
adcl
adc
ret
mov
adc
lods
ror
add
fldenv
arpl
xchg
movsl
add
in
dec
fadds
dec
cs
imul
push
push
add
cmp
clc
xchg
addr16
adc
or
aaa
pop
pusha
mov
enter
shll
or
sti
sub
cltd
mov
mov
push
xor
mov
pop
shl
pop
push
filds
pop
ja
mov
testb
cmp
ja
loop
insb
pop
ffreep
mov
mov
test
ret
movsl
push
or
scas
dec
ja
loope
jbe
xor
into
shlb
imul
jne
daa
cmc
dec
sarb
cmp
icebp
scas
jecxz
mov
adc
jb
adc
xor
fdivr
shrb
and
cmpsl
inc
dec
pushf
or
sub
cmp
cmp
retw
or
jecxz
loopne
pop
in
xchg
je
data16
lahf
cmp
xchg
pop
mov
movsb
dec
out
flds
arpl
lods
inc
push
push
push
sbb
adc
xchg
rclb
dec
aam
rorb
xchg
cld
cmp
cwtl
jbe
stc
repnz
push
ret
loope
mov
sar
mov
dec
call
xchg
addr16
and
cmp
pop
sahf
push
mov
cwtl
jno
ja
adc
adcb
icebp
mov
mov
mov
mov
jb
push
lret
cli
xchg
shrb
cmc
insb
dec
pop
ucomiss
icebp
pop
mov
sbb
xchg
bound
stos
cmp
repnz
adc
pusha
dec
ljmp
loop
dec
int3
hlt
nop
lock
psllw
xor
jne
dec
nop
dec
ds
mov
js
or
jno
inc
ds
cmp
push
add
hlt
fwait
or
pop
or
enter
jbe
mov
inc
mov
mov
jno
push
push
inc
and
jnp
dec
ja
sbb
inc
in
add
mov
pop
loope
outsl
rcll
rcrb
adc
pop
mov
sbb
inc
inc
lods
cmp
icebp
jno
xor
cmc
mov
movsl
push
stc
addb
inc
repnz
in
lock
ss
je
push
popf
in
sbb
sub
pusha
rcrl
push
inc
les
out
push
out
cmp
mov
mov
shl
lods
xor
and
jae
cltd
adc
shrl
lds
mov
pop
rcrl
test
movsb
cs
arpl
fsubs
mov
mov
sbb
fcomp
xchg
adc
pop
sub
jg
push
inc
aam
dec
fsts
push
pop
and
dec
xchg
mov
das
sti
rorl
repnz
and
hlt
pop
or
pop
dec
mov
and
stos
out
ds
xor
add
inc
cmc
or
push
dec
into
mov
xor
cmp
idiv
dec
dec
das
pop
negb
lahf
mov
mov
lea
pop
insl
es
add
jno
cmpsl
add
sub
adc
pop
lea
dec
outsb
adc
mov
mov
mov
imul
and
inc
mov
iret
mov
push
cmp
insb
arpl
dec
mov
lret
cltd
sub
call
pop
loop
pop
ljmp
cltd
mov
jo
fsts
sub
jne
mov
fs
mov
iret
les
ds
je
cmc
out
ret
dec
pop
movsb
dec
cmpsl
ret
iret
adc
adc
aam
fwait
insb
mov
imul
cli
adc
es
jno
cld
or
xchg
ljmp
pushf
sub
add
inc
out
stos
decb
jle
xor
push
fs
or
mov
icebp
push
int3
add
or
ret
mov
xor
icebp
cmpsw
sbb
sub
xor
jae
into
jae
sub
shrl
mov
in
and
insb
xchg
sub
cmp
dec
push
sub
cwtl
jo
stos
adc
mov
push
in
test
inc
sbb
mov
cwtl
push
sbb
cmpsb
dec
lock
jmp
xor
inc
inc
lret
adc
loop
inc
ficompl
dec
fldenv
cmp
daa
scas
or
js
sbb
test
fxch
mov
mov
movsb
add
mov
xchg
mov
negb
imul
sub
scas
mov
ret
pop
or
mov
mov
sub
stos
int3
repz
push
xor
daa
mov
push
add
cmp
dec
sarl
outsl
pop
fisttpl
xchg
out
xchg
dec
cwtl
ljmp
mov
adc
mov
and
aaa
flds
test
sub
sarl
mov
scas
and
dec
mov
pop
xchg
sub
dec
out
xor
jmp
xchg
repz
mov
inc
out
fisubl
pop
pop
push
int3
lds
test
ds
test
imul
mov
out
mov
mulb
aam
inc
xor
pop
xchg
xlat
xchg
cs
scas
dec
inc
rorl
in
inc
sbb
bound
cmp
roll
add
mov
push
outsl
or
pop
incl
xchg
cs
jbe
lds
repz
in
add
push
lock
addl
jbe
dec
mov
jns
adcl
pop
jmp
aaa
sub
pop
adc
aad
enter
outsl
orb
inc
mov
jns
push
sub
mov
jg
xor
or
or
push
xchg
cmpsl
pop
inc
jp
popa
adc
nop
jge
adc
jae
jbe
fcmovnb
scas
xor
icebp
enter
les
imul
push
lret
in
dec
insb
mov
xor
xchg
or
add
or
cmpsb
pop
pop
into
jmp
leave
sub
push
mov
adc
ret
mov
das
shlb
scas
lds
ret
data16
mov
lahf
dec
jbe
inc
or
cmc
cmp
sub
dec
out
xor
stc
mov
adc
dec
popf
fidivl
pop
jp
lret
in
xor
pusha
imul
cwtl
cmc
test
mov
ljmp
dec
adc
lret
mov
adcl
mov
cmp
or
popa
pop
repz
fiaddl
aaa
mov
dec
xchg
ds
arpl
andps
xchg
pusha
adc
jl
int3
sbb
fldl
mov
dec
jae
fbstp
pop
sub
add
shlb
sbbb
cmp
fwait
inc
or
repnz
dec
xor
push
lahf
imul
inc
mov
adc
add
pop
icebp
lock
iret
push
jne
xchg
or
mov
scas
outsb
mov
sbb
jl
stc
out
dec
and
insl
lods
push
lret
and
lahf
cmp
ljmp
push
and
cmp
xchg
jge,pn
test
das
incl
sub
xchg
jp
mov
push
add
push
sbb
cmp
adc
add
in
add
dec
gs
adc
push
mov
es
sbb
ljmp
in
into
inc
mov
push
mov
lret
sub
mov
xchg
ja
addr16
ja
inc
sub
jl
in
mov
sub
push
lock
repnz
or
imul
pop
mov
pop
sub
and
add
lds
ja
les
ss
mov
jne
icebp
popf
cmpsl
sbb
mov
shl
dec
add
pop
xor
into
push
xor
xchg
sbb
ljmp
or
cmp
ret
dec
fdivs
sub
stos
xchg
mov
push
ja
bound
adc
nop
xchg
mov
jb
push
sbb
rclb
push
adc
shlb
inc
adc
xor
lret
popf
sbb
mov
cmp
cmp
dec
sub
imul
sub
sbb
add
outsb
jnp
imul
bound
dec
lock
test
mov
inc
xchg
fnstenv
jecxz
pop
addr16
mov
lahf
fidivs
or
pop
push
or
in
adc
lds
push
xchg
xlat
inc
cli
jp
xchg
sub
lds
add
ret
dec
repnz
stos
or
jae
mov
lock
add
pop
scas
xor
jmp
stos
or
add
test
movsb
shlb
add
in
repnz
lcall
dec
or
mov
call
mov
rorl
stc
in
jmp
sub
pop
andl
rcll
inc
int3
mov
jle
xorl
cmp
push
inc
iret
sbb
subl
push
je
sub
adc
adc
shl
mov
mov
repnz
push
push
push
xor
or
xchg
sbb
sahf
fdivs
orb
sarb
arpl
and
mov
xchg
adc
xor
mov
or
cltd
repz
xchg
das
test
decl
xchg
dec
sbb
jbe
cmp
mov
std
adc
add
push
pop
loope
dec
pushf
enter
xor
shrl
testb
pop
cmovge
sub
mov
xchg
inc
jne
pushl
dec
add
cmp
loopne,pn
pop
cmpl
test
out
jo
ret
lgs
sbb
out
lret
inc
xchg
dec
or
popa
test
ret
and
adc
loop
jo
lods
pop
mov
sbb
pop
adc
pop
fildl
repz
test
je
mov
adc
adc
enter
jmp
mov
inc
pushl
imul
sbb
hlt
hlt
push
outsl
or
xor
add
or
popaw
pop
pop
inc
and
jnp
xor
push
loopne
push
xchg
cmp
and
pusha
push
xchg
pusha
lods
inc
push
gs
mov
xchg
lahf
call
call
push
jae
aaa
adc
add
mov
jbe
mov
mov
or
dec
pop
mov
dec
stos
add
loop
js
nop
dec
int
mov
sahf
cwtl
pop
movsb
insl
pop
stos
scas
dec
pop
xchg
add
pop
repnz
mov
nop
or
imul
xchg
repnz
test
jl
in
mov
add
adc
or
stc
jnp
xlat
mov
dec
add
inc
mov
push
js
das
xchg
or
mov
ret
add
push
out
addr16
mov
lret
push
mov
lret
pop
add
cli
mov
loop
fcoml
fimull
fstp
dec
loopne
jae
jne
outsb
stos
fimuls
add
les
mov
jo
dec
cmp
les
stos
cs
inc
outsl
lods
jne
mov
dec
pop
lcall
inc
add
negb
or
xorl
sbb
inc
outsl
dec
sub
imul
xchg
and
mov
add
int3
outsl
mov
and
mov
or
mov
mov
pop
scas
repz
mov
rorb
mov
fsubl
lret
sbb
inc
push
adc
jbe
dec
adc
sti
test
lods
or
mov
mov
or
sbb
es
addl
test
lea
or
cmp
in
push
shlb
sbb
ljmp
mov
push
sbb
and
jne
and
das
std
or
sbb
xchg
adc
or
or
or
dec
aam
shlb
mov
jge
cltd
scas
ficoms
mov
fsts
stc
xor
out
lahf
sbb
icebp
mov
sbb
addr16
or
sub
adc
shlb
xchg
jb
in
xor
push
push
std
mov
inc
and
xchg
pop
mov
mov
test
in
push
pop
pop
xor
cmp
jle
sbb
xor
sarl
dec
xchg
lcall
daa
sub
stc
dec
cmp
pop
jl
hlt
lret
jp
cmp
in
ds
lret
stos
ret
inc
xor
or
inc
cwtl
cwtl
inc
xchg
mov
repz
mov
mov
hlt
sub
and
mov
in
xlat
adc
test
popa
aaa
ret
popa
cmp
cmp
int3
out
dec
push
fs
dec
mov
fstpt
mov
jns
out
dec
inc
js
clc
mov
ja
mov
dec
mov
mov
xchg
mov
outsb
mov
jb
outsl
pop
xchg
push
mov
cmp
sahf
xchg
jne
popa
leave
lahf
enter
mov
mov
cltd
push
movb
xorb
fisttps
pop
xchg
int
repz
jg
dec
pop
mov
repz
mov
pop
sahf
dec
int3
insl
push
outsb
and
daa
mov
xor
mov
adc
mov
push
xchg
mov
xrelease
shlb
cmc
fninit
and
stos
sub
xor
call
out
rcl
inc
sbb
jnp
sbb
inc
fdiv
pusha
push
push
or
inc
inc
xchg
iret
mov
jmp
rolb
in
jle
ss
push
in
addr16
lcall
add
cmpb
jo
movsb
xchg
fbstp
mov
vmovd
adc
push
fidivs
mov
test
and
mov
cmp
push
mov
adc
pop
dec
stc
arpl
mov
aad
xor
cmp
leave
enter
add
andl
ja
mov
mov
sub
les
fdiv
mov
sahf
push
pop
adc
leave
bound
mov
pop
lods
jge
stos
rep
idivl
movsb
and
fisttpl
addr16
inc
aam
cwtl
pop
arpl
jne
in
lcall
test
aas
jne
aaa
xchg
outsl
sub
orb
int3
fucom
xlat
sub
adc
adc
lret
inc
cmp
call
scas
and
leave
aaa
sahf
push
in
mov
les
mov
sti
fisttpl
pop
imul
xor
movsl
insl
adc
mov
xor
out
jae
in
push
ficomps
aas
pop
outsl
test
push
jnp
jno
movb
or
fsubrl
or
lret
cmpsb
mov
mov
cmp
stos
inc
sbb
sub
pop
movsl
insl
sub
pop
dec
xor
lock
adc
cwtl
dec
aad
sub
inc
mov
sbb
sub
jae
adc
pushf
insl
inc
in
lods
loope
dec
sbbb
outsl
mov
rcl
les
xor
mov
jle
xor
sub
mov
iret
push
imul
cld
and
test
insl
adcl
sar
add
orl
sub
cmpsb
push
push
jo
arpl
pop
imul
fadds
inc
inc
pop
int
mov
sub
ss
cld
sbb
xor
pop
mov
shl
shld
sar
jmp
nop
inc
call
dec
fidivl
xlat
dec
inc
addr16
lods
mov
sub
in
stos
mov
jnp
push
mov
ret
in
cwtl
push
in
mov
sub
xor
dec
in
jb
cli
jmp
push
jge
lock
dec
popa
fmul
push
jge
iret
mov
outsl
in
sub
inc
dec
sub
dec
pop
int3
cmpsl
dec
cmp
cmp
jno
and
test
inc
xor
aad
xor
rcrb
cld
cmpb
sub
fisubrs
push
sub
mov
xorb
arpl
fidivs
aas
add
or
or
stc
mov
popa
lods
lahf
out
loop
xchg
inc
je
adc
push
or
sub
or
cmp
mov
jno
mov
mov
mov
mov
add
dec
mov
loopne
popf
jp
add
mov
insb
inc
cmp
mov
pop
out
andl
mov
pop
jmp
inc
imul
add
loop
pop
mov
xor
add
push
adc
test
lret
xchg
add
lds
int
pop
in
or
je
sahf
pop
sbb
push
shlb
or
sarb
bound
sbb
add
push
sbb
dec
mov
lods
and
add
pop
bnd
adc
gs
rep
inc
pop
mov
aam
imul
xor
fwait
imul
leave
pusha
sub
fwait
dec
sub
imul
jmp
imull
dec
jno
das
jb
xor
or
sbb
push
in
xchg
flds
mov
cltd
stos
lods
mov
cltd
pop
pop
popf
mov
adc
jp
xchg
inc
sub
xchg
mov
cs
std
and
push
jl
adc
add
fwait
jae
jg
mov
vcvtss2sd
add
scas
pop
call
xor
pusha
stos
lcall
or
fwait
mov
mov
mov
lcall
push
leave
loop
mov
dec
mov
into
sbb
mov
movsl
adc
jecxz
test
ud2
pusha
dec
loope
pusha
jge
pushf
mov
add
xchg
or
scas
adc
roll
cmpl
xor
std
daa
cmc
mov
icebp
xchg
sbb
mov
flds
int3
add
gs
xchg
int3
lods
mov
pop
mov
andl
push
loop
jmp
add
lcall
add
fldt
fbstp
fldenv
mov
mov
loopne
aam
sub
xor
cltd
and
scas
gs
mov
lcall
mov
shr
push
lret
cltd
mov
clc
int3
aas
popf
ss
dec
adc
out
mov
dec
scas
mov
aas
repnz
data16
adcl
inc
insl
ss
and
jnp
sub
xor
jno
popf
nop
insl
test
inc
dec
xor
repnz
xchg
jns
fstps
jl
push
stc
sbb
adc
mov
cwtl
jo
out
pop
sti
pop
xorb
push
push
fsts
out
or
xchg
fcom
pop
pop
push
dec
xor
je
popf
cmp
fistl
lret
vpshrdd
cs
jno
xchg
imul
mov
pop
inc
test
ljmp
iret
nop
mov
jg
imull
popa
fnstenv
cli
ret
sub
cmp
dec
push
inc
inc
sahf
aam
clc
mov
lods
test
sub
jmp
inc
adc
add
repnz
mov
sub
repz
pop
pop
fistl
or
or
pushf
rorl
jmp
scas
mov
js
sub
lods
or
lods
std
mov
lcall
test
hlt
xor
cli
xchg
sub
push
loope
add
notl
push
es
test
mov
lcall
cli
adc
pop
jns
lcall
jb
cmp
jmp
sahf
jle
inc
bound
jmp
inc
adc
mov
sahf
out
clc
jl
not
mov
dec
addb
lret
cmp
cmp
scas
and
sbb
faddp
mov
out
mov
fisttpll
inc
inc
pop
out
insb
mov
cmpsb
xlat
out
inc
cltd
mulb
cmp
xchg
in
mov
mov
and
ds
inc
mov
lea
mov
iret
mov
ja
xchg
add
sar
pop
fwait
add
shll
xorl
movsb
lds
add
fwait
shll
push
mov
lret
bound
bound
enter
mov
inc
aas
movsl
shl
jns
aas
icebp
popf
nop
aad
imul
jg
or
aad
out
testl
rcll
inc
adc
rcr
push
mov
mov
sub
push
aad
push
pop
xchg
sbb
push
mov
dec
xlat
in
iret
and
dec
ret
mov
cld
inc
arpl
pop
pushf
xor
dec
outsl
dec
mov
lea
dec
stos
lea
xor
in
add
nop
roll
lret
imulb
ljmp
jno
hlt
imul
shrb
mov
popa
fs
cmpsb
mov
cmp
xor
jno
movsb
mov
fidivl
sub
mov
adc
rcl
lahf
pusha
xchg
out
push
sbbb
xchg
fs
mov
orl
dec
jne
xchg
mov
adc
fbld
dec
icebp
push
pop
int
mov
fstl
xor
ljmp
or
jo
roll
adc
push
push
ds
and
inc
push
xor
mov
and
sub
xor
jp
ds
in
adc
call
aaa
cmpsl
inc
adc
hlt
sbb
cmp
pop
in
dec
incb
mov
mov
fs
movsb
pop
sti
das
outsl
outsb
mov
mov
hlt
cmp
add
in
jo
pop
mov
cmp
adc
in
in
jmp
or
pusha
sub
gs
xor
push
fdivrp
stos
lret
out
imul
popf
cmp
fstpl
loop
xor
test
xchg
cmp
inc
push
jmp
hlt
mov
push
out
aas
jp
push
popa
shll
loop
std
rcll
adc
dec
fcompl
das
std
sbb
mov
inc
pop
je
xchg
popf
jl
bound
push
cmp
push
insl
jnp
test
mov
adc
mov
dec
les
jp
sbb
lea
cwtl
loope
pop
mov
inc
mov
nop
leave
jo
fmuls
call
in
cmp
jmp
xchg
mov
shll
pop
add
vprotq
xor
add
pop
mov
fcompl
scas
sbb
cmp
aam
scas
dec
fiadds
ret
and
fistl
cli
dec
mov
pop
cmpsl
nop
inc
pop
dec
inc
jnp
loope
fmuls
push
pushf
lret
sbb
mov
je
in
add
fs
jae
or
pop
pop
push
inc
stos
iret
mov
inc
xlat
enter
add
add
xor
sbb
pop
and
mulb
imul
or
sbb
mov
aas
push
jo
sub
push
push
iret
call
cmp
push
inc
in
jbe
int
mov
lahf
jecxz
loop,pn
mov
lds
mov
push
jns
cltd
inc
nop
mov
loope
push
push
cmp
cmp
out
add
inc
nop
sbb
je
cmpsl
imul
data16
stos
dec
push
mov
ret
daa
lret
sarl
xchg
js
fisubrl
test
or
push
cmp
push
in
push
stos
sub
in
dec
inc
testl
jns
fldt
gs
enter
lods
push
les
xor
pop
stos
inc
jg
mov
fwait
ret
in
outsl
sbb
ss
cmp
cmp
int
clc
out
in
je
insb
mov
add
inc
les
and
sar
call
ljmp
fs
and
movsb
inc
call
imul
nop
cmp
xor
sar
dec
fcomp
ss
repz
sbb
pop
icebp
jg
pop
push
outsl
dec
sbb
cmpsl
xchg
sub
dec
and
aad
push
xor
lcall
fimuls
dec
test
scas
shlb
mov
mov
xor
push
inc
and
sti
sub
sub
loop
lea
sub
scas
mov
cmpsl
jge
mov
inc
mov
mov
and
mov
dec
adc
clc
negb
mov
push
subl
mov
mov
pop
enter
mov
lds
mov
dec
fbld
xchg
pop
adc
dec
dec
push
dec
adc
lret
and
roll
pusha
jno
es
mov
lcall
in
pop
mov
call
inc
repz
fcomp
shlb
in
pushf
fists
sbb
std
stos
sub
sub
aaa
xor
in
jo
sub
push
inc
and
cmc
push
and
loope
stos
call
pop
lret
cmp
and
daa
jnp
ret
ffree
das
push
sbb
mov
jmp
push
pop
jnp
sbb
sete
xlat
adc
insb
or
rclb
mov
sti
pusha
pop
loop
data16
jo
jge
adc
add
pop
xlat
xor
mov
mov
fldt
jp
ret
and
fbld
cli
test
aam
jbe
stc
adc
sti
mov
mov
sbb
in
mov
iret
test
ja
jecxz
push
aas
mov
cmp
jb
inc
ss
or
jle
hlt
fsubrp
sbb
cmp
rcl
aaa
loope
or
lar
add
sbb
xchg
dec
mov
sub
scas
insl
and
es
lds
ds
incb
jle
icebp
xchg
xchg
sub
inc
sbb
sti
ret
stos
jo
cmc
icebp
cmpsb
ja
cmp
mov
daa
sbb
dec
add
xor
inc
cmp
in
mov
add
sub
aad
testb
cmp
jge
add
ret
out
sub
pop
fwait
je
js
mov
inc
aaa
jg
cmpsl
aam
xchg
int3
pop
iret
inc
xor
inc
push
inc
jp
xchg
xlat
jmp
lods
in
mov
inc
fwait
pop
lahf
mov
xchg
jecxz
out
lods
add
pop
pushf
jno
ret
in
sub
push
add
scas
roll
in
xor
or
ret
rclb
sbb
push
adc
and
std
ljmp
lods
out
jno
arpl
and
rorb
push
test
popf
push
push
mov
jge
xchg
adc
mov
fldenv
and
xor
cmp
push
and
lock
mov
mov
into
ds
sub
adc
lcall
mov
jne
push
mov
or
in
insb
xchg
lods
adc
and
movsb
dec
pop
cli
or
adc
xlat
cli
jno
mov
mov
fldcw
je
aaa
jo
pushl
out
lcall
cmp
scas
loop
test
xchg
inc
jg
push
xor
ss
sub
fs
fsubl
push
test
pop
outsl
mov
in
cmp
push
or
cmp
mov
lods
mov
dec
addb
insb
shl
jge
cwtl
nop
xchg
push
jp
in
fcompl
inc
jae
mov
das
roll
xchg
adc
pusha
add
cli
cmpsl
mov
scas
and
cmp
dec
or
jle
dec
xor
xor
jmp
inc
loope
loope
dec
cmp
test
aam
stc
xchg
dec
aas
daa
xchg
je
jg
je
pop
jg
andb
fucompp
pop
add
pop
in
add
dec
pushf
and
xor
int
enter
daa
xor
leave
xchg
cmp
mov
fldl
lret
mov
mov
push
jecxz
movnti
adc
fwait
shl
pop
pusha
cmp
or
and
mov
push
inc
and
outsl
fs
pop
ss
inc
push
push
mov
stos
jne
mov
rorb
xchg
or
xlat
sub
subb
pop
std
push
stos
or
lret
and
mov
inc
lock
jns
mov
and
xlat
insb
xchg
mov
or
andl
pop
into
pop
xor
dec
push
dec
adc
cli
sub
inc
mov
xor
addl
pop
scas
fidivs
out
es
test
mov
xor
jge
lahf
data16
pushf
jp
ret
shll
testl
mov
add
ret
int
pop
mov
roll
mov
adc
or
jnp
lock
xchg
imul
imul
mov
fmul
or
or
out
stos
xor
push
cmp
mov
popa
stc
sbb
or
and
fistps
sbb
cli
lcall
in
and
adc
fisttps
sub
or
in
inc
mov
mov
dec
scas
xor
scas
add
sub
mov
pusha
and
inc
mov
push
ss
sbb
lds
es
gs
mov
cmpb
xor
daa
or
mov
or
ficoms
dec
dec
xor
xor
pushf
rcrl
mov
cs
test
sbb
inc
pusha
loope
shl
test
push
lret
mov
add
mov
adc
adc
ja
push
cmp
scas
mov
das
cwtl
xor
push
fiaddl
in
out
mov
and
inc
ja
bound
outsl
ror
mov
push
cmpsl
xor
shl
mov
gs
mov
mov
mov
divl
adc
mov
inc
push
scas
mov
ds
xchg
inc
mov
loop
movb
xlat
jg
loope
in
xor
adc
mov
pop
and
lret
mov
mov
insb
fisubrl
inc
mov
jns
imul
subb
leave
or
into
arpl
addr16
and
pop
inc
mov
sbb
xor
mov
fldl
mov
mov
pop
hlt
ss
stos
cmc
shll
jmp
orb
mov
repz
icebp
fs
and
xlat
sub
mov
push
repnz
cmpsl
mov
movsl
add
mov
out
popf
mov
gs
in
fs
int3
and
sub
or
inc
mov
popa
pop
xor
pop
imul
lods
popa
lock
addb
orb
sbb
mov
jne
jecxz
mov
sub
push
cmc
and
clc
sbb
adc
movsl
popf
cmp
dec
loope
addb
iret
push
mov
mov
jge,pt
xor
stos
cmpsb
jp
enter
ds
inc
mov
hlt
add
mov
mov
out
pop
insl
insl
mov
mov
sub
pop
jnp
xchg
add
jbe
test
jns
inc
push
cmp
jne
out
xlat
sub
call
pop
in
jle
jns
mov
into
repnz
pop
xchg
mov
jl
cmp
stos
jg
insl
inc
iret
pop
push
pop
imul
mov
mov
xor
lea
sub
cmpsb
jg
cmp
das
enter
rcrl
shll
or
push
mov
test
jbe
rcl
cmp
fsubrs
and
pop
dec
mov
scas
int
mov
aad
ja
stos
push
mov
or
sub
repnz
loop
aad
inc
add
ret
xor
mov
mov
aam
push
outsl
push
adc
outsl
daa
push
jl
dec
sub
loope
pop
jns
cmpsl
stc
xor
stos
je
and
cli
mov
sbb
mov
inc
adc
mov
stos
cmpb
gs
aad
in
mov
aad
mov
cmpb
mov
or
lahf
adc
pop
andl
mov
mov
mov
jmp
jne
cmpsl
mov
pop
lods
out
jae
fidivl
cmp
pop
or
mov
cmp
dec
cmp
js
lcall
xor
out
pop
sbb
iret
sbb
les
dec
stc
popf
mov
inc
push
inc
enter
fists
enter
stc
sbb
sahf
mov
repnz
jecxz
xchg
mov
shr
add
cld
and
adc
out
mov
jge
xor
or
test
pop
cmp
xchg
popf
dec
xchg
int3
dec
fstl
lret
jg
push
adc
int
inc
dec
jmp
test
fsubs
mov
in
fsubs
mov
push
push
rol
jl
negl
call
lcall
bound
and
out
mov
lods
out
xor
stc
add
sub
push
xor
scas
push
mov
or
adc
shll
out
and
lcall
test
scas
repnz
mov
inc
jo
xchg
call
insb
push
push
mov
in
add
push
xor
aaa
cmp
xor
xchg
mov
jne
xor
les
or
sbb
inc
xchg
les
stos
add
fs
xchg
stc
mov
jecxz
push
ret
sar
cmp
les
xor
dec
cmpsb
enter
mov
add
push
sbb
addl
into
push
je
in
loopne
push
mov
dec
mov
or
lcall
lret
fwait
pop
adc
or
xorl
cmp
leave
jnp
inc
xchg
clc
movsb
mov
mov
jo
mov
or
push
fadd
cmp
mov
dec
test
mov
sub
cmp
mov
pop
xor
movsb
data16
movsl
pop
cmc
jmp
or
inc
stc
sar
scas
add
popf
or
cmovno
test
scas
xchg
insl
sbb
shl
mov
mov
or
inc
or
iret
xor
or
mov
jl
dec
adc
cmp
or
xchg
or
testl
pop
lds
adc
pop
fldz
jle
icebp
imul
imul
cli
out
mov
int3
pop
or
imul
dec
push
enter
sbb
mov
cmp
and
fldt
pop
and
xchg
rclb
sbb
mov
jmp
mov
push
pop
jbe
adc
out
cmp
cmp
xor
cmp
sbb
sub
andl
call
xchg
gs
sbbb
xchg
sub
pop
add
add
cld
adc
cs
mov
cmpsb
das
mov
adc
jmp
es
and
inc
scas
cmc
xchg
lods
mov
lock
hlt
pop
adc
adc
sub
xor
jecxz
loopne
cs
inc
test
sbb
repz
mov
imul
xor
cld
adc
add
jecxz
sbb
leave
pop
jmp
es
sub
notb
fs
cmp
xchg
jns
lahf
sub
out
adc
popa
insb
jmp
adc
lahf
push
or
neg
push
push
adc
dec
cmp
sbb
dec
jne
stos
rorl
cmpsb
xchg
les
jae
pop
xlat
or
movsb
dec
les
lret
mov
inc
mov
mov
inc
mov
mov
movsb
mov
cli
aas
sarl
inc
nop
adc
out
mov
enter
arpl
cmp
loop
sti
outsl
clc
lahf
cld
outsl
dec
ss
or
imul
arpl
sbb
gs
ss
int
es
shlb
cmp
dec
sbbb
sti
inc
or
int
add
inc
adc
adc
lret
xor
push
xchg
in
mov
test
pop
bound
jnp
mov
sbb
sub
js
inc
out
sub
push
pushf
inc
jo
pop
adc
xlat
inc
mull
mov
and
xchg
hlt
pop
adc
push
icebp
cmp
rcrl
sub
ljmp
dec
cmpl
lds
sti
xor
dec
mov
inc
popf
sub
xchg
cmp
push
mov
ds
fs
test
pop
ja
dec
out
les
sbb
dec
sbb
flds
testl
inc
cmp
dec
pop
xor
nop
jmp
inc
stos
push
ja
shrb
in
and
lcall
mov
mov
or
fwait
mov
inc
out
fldl
inc
add
popf
in
setnp
dec
ja
les
in
fistl
lret
push
imul
cwtl
dec
push
cltd
jne
mov
into
rcrl
mov
ficoms
loopne
cld
mov
sbb
inc
mov
enter
daa
fwait
or
faddl
push
inc
stc
jnp
stc
iret
and
cmp
pop
arpl
sbb
addl
rcll
push
out
push
scas
cli
insb
jl
jnp
rcll
sbb
inc
lret
pop
push
aam
shrb
xchg
mov
pop
fsubr
jmp
push
jp
mov
mov
icebp
jl
and
das
mov
sub
icebp
pop
mov
repnz
jo
lret
fwait
shl
cmp
movsl
cmpsl
cmp
sbb
jge
push
call
mov
shlb
and
into
fwait
lds
es
mov
movsl
sub
insl
sub
jo
lahf
dec
adc
fwait
lahf
sbbb
mov
and
repz
out
in
clc
enter
or
fisttpl
add
or
xor
xchg
mov
loopne
dec
xchg
push
out
xchg
leave
xor
pop
aaa
repnz
addr16
insb
das
daa
xchg
dec
adc
dec
dec
out
lcall
mov
cmc
xor
adc
adc
adc
outsb
or
neg
in
mov
pop
pop
xor
and
pop
or
xchg
test
cmp
push
cmpsb
or
insb
push
clc
test
out
insl
addl
lret
scas
jg
fsubrl
lock
pop
sub
rorb
test
jbe
shrb
sub
mov
mov
in
arpl
mov
push
in
fists
insl
pop
xor
dec
test
bnd
notl
dec
das
popf
or
shll
in
jno
popa
mov
icebp
xor
lds
add
xor
pop
nop
loopne
shl
mov
scas
inc
les
xor
push
xchg
lock
fld
ret
dec
stos
sbb
into
dec
jnp
xchg
insl
xchg
enter
pop
push
mov
jge
adc
fnstenv
mov
inc
push
xchg
ret
jp
lds
xchg
loopne
out
xor
imul
adc
mov
fisubrl
pop
int3
sbb
in
pop
test
test
or
ret
ret
insl
pop
sbb
pop
fldenv
leave
ja
inc
sbb
add
mov
mov
jae
sarb
data16
mov
js
jns
cmpsb
cmp
cmp
or
dec
repz
xchg
ds
mov
dec
addr16
sbb
xorb
iret
dec
mov
icebp
nop
cmp
popf
inc
enter
out
lods
cmp
xor
ss
push
add
int
jae
leave
jo
sahf
call
xchg
pop
pushf
jno
and
and
rcrl
test
hlt
pop
es
stc
test
hlt
push
repnz
daa
adc
jno
add
mov
inc
clc
fs
dec
ljmp
test
std
jmp
ds
int3
inc
in
mov
inc
push
fisttpl
push
icebp
rcll
pop
and
xor
adcl
adc
out
mov
sub
cmpsl
icebp
dec
cmpsb
pop
mov
push
inc
in
jbe
rolb
and
sub
sbb
xchg
mov
fldcw
mov
xchg
mov
loop
or
adc
mov
aam
sti
dec
xchg
mov
fidivl
jl
sti
mov
jb
push
cmp
pop
xor
xor
out
jae
add
lret
adc
cwtl
xchg
mov
mov
jbe
in
push
mov
fnstsw
lret
sbb
sub
out
mov
jl
imull
in
cmc
sub
add
movsb
inc
sbb
jmp
ljmp
les
push
mov
mov
push
mov
dec
adc
addb
fcomip
jnp
lret
loopne
inc
mov
mov
xchg
xchg
mov
repnz
push
out
stos
sahf
xchg
in
sbb
rcr
sub
cmp
idivb
push
rcrb
in
fcoml
jno
lret
push
jl
popa
xchg
movsl
stos
sub
fidivrs
repz
jne
fdivrs
xchg
loopne
outsb
rcl
icebp
cmp
fnstsw
js
jp
add
cmpsl
stos
sbb
popf
daa
dec
push
push
scas
dec
mov
insl
push
pop
and
pop
cli
jmp
inc
and
xchg
xchg
les
mov
out
mov
lcall
adc
fcompl
push
int3
mov
out
add
cmp
cmpsl
in
inc
ss
mov
jne
aas
mov
or
jb
push
in
cmc
repz
int
in
and
sti
pop
lahf
stos
dec
push
clc
ss
sbb
lods
inc
push
outsb
enter
mov
fs
into
push
les
imul
bound
xlat
lods
pop
ret
or
test
imull
pop
xchg
push
int
daa
mov
mov
sbb
imul
cmp
push
notb
pusha
pop
xchg
jmp
and
imul
cmc
repz
or
push
lds
xor
hlt
mov
fiaddl
mov
pop
mov
mov
cmp
jo
stc
add
fistpll
sti
lcall
mov
jle
mov
test
je
mov
daa
movsl
test
lods
or
add
daa
mov
imul
orl
cmp
xor
and
dec
test
xchg
out
and
addr16
push
fidivrl
testb
fldenv
int
push
cmp
push
mov
movl
push
scas
jne
mov
adc
sbb
dec
mov
fwait
test
jno
inc
out
pop
in
rorl
stos
adc
jnp
ret
and
and
mov
push
push
orb
imul
mov
add
and
sbb
cmp
aas
dec
push
xor
cmp
lret
jge
adc
mov
pop
pop
out
fldl2t
pushf
out
jmp
aad
xchg
xchg
cmc
cmp
fsts
dec
andb
jmp
in
popf
xchg
lea
cmpsb
xchg
jg
fsub
dec
mov
jns
sti
add
enter
test
sbb
out
cmc
dec
imul
cmp
inc
pusha
lock
test
cli
cli
jbe
cwtl
dec
loopne
push
clc
mov
subb
out
push
xorps
mov
aas
fidivrs
movsl
aad
xor
jnp
push
enter
clc
int
and
incb
lock
push
fcomps
repnz
mov
dec
mov
dec
xchg
mov
fmul
mov
mov
sub
in
xor
xor
rcrb
and
test
jmp
sbb
rol
negb
xchg
outsb
mov
push
push
inc
inc
hlt
xchg
test
imul
pop
inc
lahf
jle
sub
sbb
xchg
hlt
fdivrs
sar
xor
cmp
dec
add
adc
jo
inc
add
outsb
mov
cmpsl
jbe
or
insl
add
jmp
in
add
or
pop
loopne
or
or
jge
adcl
fs
filds
out
lahf
mov
lret
pop
test
pusha
and
test
imul
dec
add
cmp
out
movsl
jle
fucom
mov
loopne
push
imul
push
test
push
sbb
push
aad
jmp
das
cmpl
sbb
xor
lret
popf
test
cmc
push
loop
jl
or
loopne
adc
shrl
cmp
xchg
cmpsb
push
lret
mov
inc
mov
lret
cmc
aad
imul
sbb
jb
mov
push
xrelease
adc
xchg
aas
ret
outsb
cmp
sar
je
fsubrs
ja
cmp
loopne
push
call
int3
push
fmul
fidivl
add
aaa
jmp
outsl
mov
push
add
cs
loopne
movsb
rcll
rclb
fisttpl
iret
stos
pop
mov
and
adc
xchg
sub
mov
push
jp
ljmp
sbbl
dec
out
sbb
inc
mov
cmc
fidivs
test
popf
aam
mov
dec
aad
or
mov
adc
xchg
sub
sbb
push
stos
repnz
xor
push
lods
jmp
out
cld
enter
dec
adc
mov
jp
cmp
xchg
sets
rorb
cmpsb
mov
outsl
mov
imul
sbb
add
enter
aad
lret
mov
and
out
pop
clc
jne
xchg
arpl
adc
popf
xor
sarb
or
and
adc
and
push
out
pop
mov
mov
push
lcall
mov
je
add
jae
pop
out
loopne
fldenv
cmp
inc
jns
and
repnz
pop
pusha
movntq
js
mov
jo
add
mov
and
ljmp
push
scas
popf
les
lret
mov
sbb
inc
icebp
repz
test
mov
cmp
pop
push
cmpsl
mov
sti
jle
scas
clc
mov
pop
inc
push
sbb
mov
aam
cmpsl
inc
dec
aam
movsb
xchg
push
fildll
daa
cmp
cld
iret
pushl
fmull
out
add
xor
stos
and
xchg
mov
sub
sub
mov
pop
js
mov
js
ja
mov
cmc
nop
mov
movsb
pop
adc
mov
pop
test
test
mov
in
cmp
or
cs
test
sub
mov
cmp
sbb
xchg
inc
mov
in
mov
mov
in
insb
push
jno
nop
mov
mov
mov
movsb
insl
sbb
rcrb
fs
mov
sub
jp
hlt
adcl
imul
dec
or
push
sub
inc
nop
or
lods
inc
clc
movsb
arpl
xchg
push
pop
movsb
xor
push
jbe
arpl
mov
xlat
addr16
cli
call
jmp
cmp
jge
test
fucomip
inc
repz
push
arpl
mov
add
gs
scas
mov
ja
fs
imul
jmp
imul
xor
dec
xor
and
inc
out
in
scas
lret
push
add
sti
push
subl
mov
dec
dec
mov
add
fisubrs
loopne
jge
xchg
mov
fdivrl
mov
mov
cmc
mov
push
gs
xor
mov
mov
cmp
mov
vzeroupper
nop
xor
scas
sub
inc
call
add
mov
dec
jb
in
sbb
inc
pop
mov
fnsave
xchg
cmp
adc
adc
out
cmp
icebp
popf
mov
xchg
ljmp
and
pop
and
test
xor
imul
sbb
shll
xchg
shl
pop
add
mov
adc
cmp
jns
and
imul
push
mov
add
and
lret
ja
lcall
add
enter
inc
mov
sbb
sub
push
sbb
sbb
sbb
aad
mov
rcrb
sbb
mov
jl
push
cmpsb
jbe
push
mov
mov
repz
cmpsl
leave
sbb
ret
xor
cmc
or
cmp
nop
leave
pop
pop
push
fwait
les
fidivrl
mov
pop
out
lods
cmp
xor
insb
dec
and
mov
in
cmp
jo
cltd
push
and
jae
dec
gs
mov
adc
insb
sarb
or
jmp
xor
jbe
enter
push
out
aas
xor
jns
movsl
push
call
adc
mov
mov
icebp
sbb
repnz
cmpsl
ljmp
out
cmp
call
xchg
sub
sub
dec
in
mov
into
repnz
lret
aad
mov
mov
mov
and
loop
filds
in
out
push
out
mov
or
add
xor
or
outsb
jns
les
xchg
loopne
popf
outsb
jne
fucompp
imul
int3
outsl
inc
sub
decb
in
xor
xchg
mov
mov
mov
add
mov
popl
mov
mov
iret
dec
push
aas
mov
inc
cmpsl
out
fidivrs
sahf
aam
xchg
scas
mov
jbe
faddl
out
pop
inc
or
movsl
mov
add
push
mov
mov
sbb
xchg
fisubrs
adc
cmpsb
add
adc
mov
mov
pop
mov
inc
mov
and
ret
add
je
mov
or
enter
int3
pop
rcll
fldl
inc
push
data16
in
mov
xchg
test
add
aas
das
inc
mov
addl
sub
xor
dec
xlat
mul
add
adc
mov
mov
sub
add
dec
aaa
inc
js
push
or
imul
arpl
and
jmp
lea
stos
rcrl
mov
imul
mov
jp
and
sbb
add
popf
pop
outsl
jg
sub
jo
add
movsl
sub
xchg
or
test
sbb
mov
enter
dec
inc
dec
push
jae
testb
sub
test
adcl
dec
lds
adc
loope
xchg
loop
mov
push
fisubrl
lds
mov
aas
push
fst
sar
push
les
lds
enter
mov
inc
lods
cmp
outsl
imul
lret
mov
stos
sbb
jb
subb
test
dec
pop
jl
pop
inc
push
xchg
iret
fstps
cltd
test
xor
xor
enter
lods
test
and
cltd
out
dec
in
and
push
rcrl
or
test
xor
mov
lret
lock
lock
test
cld
add
fsubrl
jne
popl
mov
adc
enter
or
push
cs
iret
or
sbb
movl
icebp
icebp
bnd
and
mov
mov
xlat
lods
outsl
adc
hlt
mov
xor
fiaddl
pop
int
sbb
mov
cmp
push
jns
cmp
pop
sub
in
std
pop
adc
mov
aam
pop
lds
adc
pop
xor
pop
enter
aas
insb
imul
add
cmc
jmp
pop
bound
pop
ss
add
pop
jmp
cmpl
cmc
pusha
popf
xchg
add
data16
test
rclb
push
sbb
dec
lcall
mov
or
mov
leave
fadds
add
test
fimull
in
xchg
adc
mov
jne
pop
mov
pop
mov
mov
sub
jns
cmp
cmc
clc
xor
mov
int
lret
dec
sub
add
loope
push
fnsave
and
aaa
xchg
dec
mov
dec
pop
cmpl
mulb
icebp
pusha
fwait
cltd
cld
lcall
or
fwait
call
ds
imul
push
dec
mov
mov
call
sub
push
sahf
add
loope
add
jge
pusha
out
imul
loop
fucom
xchg
lcall
insb
loop
cmpsb
enter
mov
ljmp
adc
sbb
aam
jb
notb
mov
popa
les
lcall
xchg
rclb
scas
mov
mov
push
cli
sahf
lods
enter
in
dec
sub
pop
stos
aaa
mov
mov
in
enter
lahf
sarl
sub
push
mov
cmp
sbb
mov
adc
sub
cmc
lret
mov
fadds
inc
adc
xchg
sub
mov
faddl
and
das
adc
mov
push
pop
mov
pop
dec
cmp
jg
and
adc
test
dec
mov
fld
xorl
or
xchg
inc
int3
stc
cwtl
cmp
mov
pop
jo
stos
hlt
imul
dec
sub
popa
out
pop
cwtl
pop
int3
sbb
push
mov
mov
jns
rorl
adc
lock
les
movsb
dec
hlt
push
out
stos
divb
bound
sbb
dec
dec
cmpsl
jne
shll
mov
jmp
int
xor
imul
cmp
push
inc
jbe
shrb
sahf
lea
pushf
decb
mov
sub
dec
les
lods
push
dec
and
or
int3
ja
or
jae
scas
popf
sub
in
inc
test
pop
add
lock
push
fistpl
and
mov
xchg
cmpsl
inc
mov
ljmp
push
hlt
js
and
sub
mov
mov
xchg
clc
push
cmp
jae
mov
mov
cmovno
pop
pop
ror
dec
ficoml
cld
pop
cmc
ret
push
pusha
mov
stc
and
shl
repnz
adc
mov
push
in
xlat
aad
sbb
lods
sub
dec
dec
cmp
adc
mov
mov
inc
xor
aaa
dec
lahf
aas
mov
cltd
ja
adc
mov
fiadds
ficoms
inc
xor
or
data16
mov
sub
into
ret
mov
inc
push
pop
xchg
cmp
icebp
fsub
dec
int3
and
testb
xlat
enter
imul
je
aas
pusha
hlt
hlt
shlb
or
sbb
dec
xchg
pop
xor
fiadds
mov
pop
add
mov
xor
adcl
fs
push
mov
xchg
mov
outsl
pop
jnp
pop
loopne
cmp
xor
mov
jp
outsb
into
dec
mov
mov
iret
dec
test
shlb
fcomi
lods
and
mov
sbb
lods
std
icebp
ja
mov
adc
es
xor
scas
mov
mov
adc
jb
adc
lea
mov
vpor
pop
loopne
xchg
mov
push
inc
sbb
js
cmpsl
push
test
inc
in
mov
enter
push
jns
mov
rclb
pop
in
ljmp
scas
mov
in
pop
inc
adc
xchg
cli
mov
popf
in
in
pop
lret
lods
fwait
pop
outsb
shll
addr16
xchg
push
pushf
adc
or
std
add
arpl
mov
push
fdivl
cltd
push
test
sbb
mov
cwtl
xchg
stos
shlb
dec
inc
push
or
int
pop
mov
mov
push
xor
shl
movsb
sub
pop
enter
shl
fstl
imul
cltd
jg
fmulp
repz
nop
into
out
daa
mov
arpl
xor
clc
loop
mov
movsl
cmpsl
adc
fnsave
adc
pop
lahf
repz
jne
and
fstpl
insl
dec
jns
push
add
mov
pop
insl
negl
ret
lcall
cmp
popa
mov
jae
lcall
leave
xor
in
cwtl
inc
es
out
adc
popa
lcall
cmpsl
xor
mov
stos
jae
dec
orb
adc
mov
push
fs
lret
in
scas
iret
xchg
cmp
mov
mov
and
sub
test
push
and
xchg
mov
repnz
xchg
mov
test
fcompl
mov
cwtl
out
dec
push
aas
clc
xchg
xor
cwtl
and
mov
mov
dec
push
mov
xchg
test
int
bound
and
repnz
jle
test
xor
push
lcall
movsl
mov
jl
int
sbb
sub
adc
sub
push
jle
adc
test
ss
call
int3
dec
mov
pop
call
add
fcompl
outsb
test
es
sub
movsl
add
sub
dec
push
add
popf
or
pop
gs
push
popf
mov
xchg
jno
inc
mov
fs
pop
or
mov
jne
jmp
and
adc
cmp
inc
dec
or
xchg
into
mov
sub
aaa
xlat
daa
push
jle
imul
inc
cmp
les
loope
mov
xchg
sub
and
mov
insb
jge
or
lds
fsts
xchg
jb
push
lock
add
fidivrs
mov
lods
add
inc
pop
mov
rolb
das
sti
or
push
cmp
cli
pop
rorl
in
in
std
push
pop
mov
enter
lds
frstor
push
idivl
test
pop
lods
lds
scas
xor
xchg
lds
push
ja
jns
jno
sbb
aas
loop
js
pushf
mov
cmp
loop
mov
push
in
jno
jecxz
push
in
test
in
add
and
xchg
fs
and
mov
cmp
scas
and
testb
cmpb
push
jecxz
xor
and
push
dec
fisttpll
lods
adc
jno
sahf
push
lret
xchg
and
or
fisubrs
jp
insb
dec
hlt
in
popf
inc
enter
or
in
jg
repz
jg
mov
mov
ljmp
ljmp
mov
ljmp
mov
insb
ret
jbe
shrb
rcll
pop
add
mov
stos
and
js
dec
inc
out
adc
cli
jno
scas
mov
clc
imul
and
push
mov
mov
inc
mov
jne
rolb
mov
fists
or
or
inc
lret
int3
cwtl
rclb
std
jnp
das
sti
fidivrl
mov
xor
pop
xchg
sbbl
cwtl
xor
lock
std
repnz
xor
xor
fnsave
aaa
xor
fidivl
lock
movsb
mov
xor
rolb
es
mov
adc
cmpsl
imul
das
pop
jmp
lahf
inc
ss
mov
xor
cwtl
scas
repnz
shl
xchg
lcall
inc
pop
or
fnstsw
aad
cmp
xor
lods
ja
stos
insb
jne
ja
repz
jp
gs
push
addr16
icebp
add
xchg
in
inc
scas
mov
xchg
ret
inc
lea
mov
aas
addb
ja
dec
add
pop
or
and
jbe
push
arpl
nop
ficompl
dec
xor
repnz
cli
inc
fidivrl
add
stc
lea
hlt
ja
jle
pusha
or
rclb
cltd
jne
subb
or
xchg
scas
mov
into
leave
xchg
push
push
xor
mov
add
xchg
and
mov
xor
push
sbb
lds
hlt
popa
aam
arpl
or
mov
push
mov
and
sarl
mov
jecxz
arpl
nop
dec
into
testl
insb
sbb
loope
ss
xchg
mov
cmpsb
sbb
leave
pop
mov
clc
imul
add
shl
rolb
pop
pop
jb
daa
dec
loop
loopne
in
inc
dec
stos
jmp
faddl
mov
outsb
xchg
pop
into
fisubrl
jg
sub
test
pop
mov
cmp
into
sbb
imul
fsubs
and
movb
mov
lret
mov
xchg
icebp
fidivrs
sbb
das
mov
pop
js
leave
aam
xchg
push
xchg
cltd
mov
dec
lea
ret
mov
bound
pop
movsl
bound
inc
sbb
sahf
sbb
les
loop
dec
dec
test
outsl
repz
cmpsl
test
in
sub
int
lods
imul
jge
jns
lds
fldcw
push
xchg
andl
ror
mov
gs
hlt
popf
jne
xor
xchg
xchg
sub
sbbl
jecxz
inc
xchg
call
push
fwait
out
test
xor
sbb
xchg
fisubl
push
pop
sub
mov
sbb
test
pop
inc
inc
lods
cld
in
jbe
mov
jne
test
fcmovnbe
cltd
jl
ds
jge
adc
jns
or
ljmp
inc
push
lahf
dec
cmc
cmpsl
data16
arpl
mov
mov
mov
push
jecxz
aad
mov
pushf
scas
cwtl
mov
inc
pop
add
pop
and
mul
ss
lcall
shlb
or
cli
pop
das
adc
insl
test
dec
push
nop
jmp
xor
lods
mov
pop
add
and
into
popf
mov
loop
subl
sahf
mov
aad
pop
xor
xchg
or
inc
subl
sbb
dec
jae
stc
inc
cli
cmpsb
jno
pop
cmp
xchg
and
inc
mov
add
fsubp
push
jb
cs
mov
mov
push
inc
mov
arpl
jb
or
push
dec
xchg
mov
cmpsb
xchg
or
xor
testl
gs
iret
mov
pop
sub
popf
mov
rclb
inc
scas
cmp
int3
lods
mov
sub
outsl
add
push
lock
mov
fs
pop
jp
sub
repz
js
pop
xchg
dec
imul
inc
adc
mov
jo
loopne
mov
nop
and
xor
push
cmc
inc
pop
andl
add
add
inc
or
les
mov
adc
out
push
clc
repz
sbb
mov
jmp
out
pop
jle
add
mov
mov
adc
call
mull
sub
leave
das
jb
lret
daa
sti
cmp
pushf
or
fistl
sub
xchg
add
mov
push
out
push
mov
push
and
dec
popf
sub
or
xchg
cmpsl
pop
sub
clc
lods
mov
sbb
test
pop
fidivs
xchg
mov
arpl
into
mov
pop
mov
arpl
xor
push
outsl
cli
or
jbe
rolb
out
iret
jp,pn
loope
dec
aas
or
xor
adc
or
mov
adc
dec
add
cs
or
inc
adc
dec
xchg
jg
pushf
loope
xor
repz
enter
sbb
dec
adc
sahf
int
icebp
mov
ja
cltd
leave
pop
aaa
daa
sarl
mov
or
outsl
int
out
pop
fdivrs
jns
stos
lahf
mov
jp
ret
ret
jmp
push
xor
sar
cmp
sbb
andl
cmp
dec
sar
dec
push
pop
and
pusha
mov
test
insb
fdiv
lret
cmp
push
push
mov
or
pop
inc
sbb
jp
arpl
inc
inc
insb
rcr
pop
jno
push
jp
inc
pop
add
inc
add
nop
outsb
sub
sbb
arpl
out
ljmp
aam
mov
mov
aas
mov
rcrb
es
js
loope
pop
sahf
lock
stos
daa
aaa
imul
lret
mov
mov
lret
das
jo
pop
out
cmp
add
push
popf
and
and
adc
insb
mov
cmp
jnp
movsb
test
dec
inc
push
mov
cmpsb
dec
mov
mov
push
xor
and
addr16
jp
push
jle
sbb
cmp
jbe
sub
dec
lret
iret
xor
fisubrl
xchg
mov
xor
push
xchg
adc
jg
sub
in
insl
xor
or
jl
pop
pop
add
cmp
and
icebp
or
xchg
insl
mov
mov
sub
jp
jge
cli
jns
push
mov
and
scas
enter
je
pop
lock
xorb
lret
inc
mov
adc
mov
sbb
inc
xchg
cld
inc
pop
cs
push
jns,pt
xchg
sub
je
push
repz
js
into
ja
inc
mov
inc
pop
je
pop
mov
add
lret
jo
xor
test
les
clc
jno
mov
movsb
dec
push
jno
jge
adc
sub
repnz
and
push
cmp
cmc
into
imul
imul
je
rcll
fwait
adc
adc
fs
lds
push
or
jno
and
pop
dec
stos
sti
add
adc
add
aas
leave
insl
int3
mov
lods
imul
push
sbb
mov
test
ss
mov
out
test
xchg
cli
fisttpl
call
stc
adc
sub
inc
mov
sub
cmp
inc
out
mov
jnp
lods
push
xlat
das
jb
jns
out
push
test
fildl
stos
lods
fnsave
add
mov
xchg
push
int
ss
testl
ret
push
scas
xchg
inc
cmp
ljmp
bound
sbb
xchg
call
mov
cmpsl
int
mov
mov
sbb
cmp
xor
loope
aas
cltd
xorb
in
loopne
cmp
mov
mov
stos
sub
test
bound
movsb
mov
add
push
xchg
dec
cmp
imulb
mov
iret
stos
int3
mov
lods
or
cmpl
stos
dec
sbb
pop
jecxz
cwtl
pop
fidivrl
push
xchg
dec
ficoml
in
rorl
stc
jmp
bound
xchg
popa
push
lods
add
or
cs
jbe
and
jo
xchg
or
push
bound
cwtl
rcr
adc
and
test
or
dec
sbb
inc
aam
popa
cmp
cmpsb
jo
orl
sbb
mov
outsl
loopne
xor
jl
aas
aas
inc
test
jge
xor
jg
clc
sub
lret
out
sahf
cmp
insb
enter
mov
mov
and
stc
pop
sub
pop
cmpb
mov
mov
int3
mov
dec
push
imul
iret
sti
dec
dec
subl
ds
call
adc
xchg
leave
dec
xchg
mov
mov
sbb
cld
iret
fsubr
xchg
into
lret
cmpsl
push
sub
fdivrs
fwait
loope
nop
push
cmc
mov
push
push
and
cmpsb
out
or
sub
inc
pop
daa
jecxz
add
add
jo
outsl
mov
mov
pop
cwtl
arpl
dec
aas
fs
jo
xchg
pop
jmp
and
cmp
je
hlt
enter
pushf
test
inc
sti
rcrb
in
outsb
jbe
shlb
add
sbb
xor
or
test
jecxz
jbe
xor
ss
mov
in
aas
mov
out
inc
adc
mov
sub
sbb
mov
sbb
out
inc
imul
dec
and
xchg
jne
cmp
and
mov
push
in
inc
test
fwait
std
jnp
sub
push
arpl
mov
adc
xchg
mov
in
cmpsl
mov
pop
jge
jne
pop
jns
mov
gs
xor
and
insb
cmp
xor
ljmp
adc
sarl
add
mov
xor
int
ss
mov
fistl
adc
push
mov
outsl
inc
stos
sbb
adc
pop
gs
xchg
add
mov
in
pop
xchg
stc
jl
test
into
outsl
jno
nop
and
fsub
mov
xchg
add
mov
pop
dec
cmp
stos
popf
mov
jge
in
stos
cmpsb
cmp
cmc
dec
push
loopne
movsb
test
pushf
test
mov
repz
xor
inc
mov
fisubs
dec
jge
lods
out
repnz
adc
out
cltd
inc
push
dec
xor
popl
lahf
cltd
stos
adc
fldenv
mov
dec
aas
push
push
or
or
popf
ss
jmp
mov
push
jecxz
mov
nop
daa
test
sub
icebp
movswl
imul
sahf
lods
loop
mov
in
add
aas
mov
mov
push
out
or
push
lds
sahf
add
popa
push
clc
sahf
or
push
xor
pop
in
cld
inc
push
aas
and
out
stos
stos
fsub
enter
push
xchg
xchg
sub
jo
fcompl
jmp
xlat
bound
fsubs
add
adc
pop
xchg
mov
jbe
add
mov
lahf
cmp
aaa
sbb
add
repz
stos
mov
push
arpl
and
xchg
imul
out
insb
fisttpl
bnd
push
outsb
int
fyl2xp1
jp
lea
pop
push
xchg
adc
sbb
aas
pop
cld
mov
dec
sbb
sbb
mov
adc
cmpsb
ret
arpl
push
pop
jnp
test
add
mov
lock
cmp
mov
jo
mov
lahf
rcrl
stc
or
add
xrelease
fwait
push
rcl
sbb
insl
xchg
frstpm(287
cmp
lret
outsl
push
inc
mov
test
dec
popf
push
lret
gs
arpl
adc
fwait
mov
daa
lds
pop
dec
dec
test
add
int
mov
sub
shll
rcr
sbb
hlt
aad
imul
loopne
xchg
mov
fnstsw
aaa
pushf
mov
jae
pusha
daa
enter
test
nop
rcrl
mov
add
xor
push
jnp
ja
loope
gs
and
mov
aam
dec
push
mov
in
jle
add
aaa
js
mov
aad
jno
jmp
subb
lock
sbb
pop
mov
pop
adc
push
popa
cmp
outsl
insl
les
mov
les
loope
lock
add
insb
aaa
xchg
aad
ds
pop
and
mov
jns
fsubrl
cmpsb
adc
ret
jnp
add
rcll
lret
jae
xchg
xlat
sub
mov
dec
sbb
mov
jno
mov
xchg
ds
sbb
inc
xor
aaa
add
cmp
mov
pop
lahf
leave
adc
add
sbb
sar
cmpsb
daa
add
lret
addr16
sub
inc
adc
inc
mov
aas
fdivrs
fwait
dec
imul
ret
out
or
mov
push
lret
aas
jno
inc
sbb
xlat
idiv
outsl
and
jo
add
insb
xchg
and
fmuls
xlat
ja
jl
dec
ljmp
shrb
js
fists
cltd
cmc
dec
and
mov
gs
cs
mov
push
push
aas
nop
push
fs
inc
test
xchg
sub
jg
add
decb
pop
pop
push
in
jbe
sahf
push
add
aam
lds
in
add
xor
xor
xchg
sub
adc
ljmp
lea
gs
nop
outsl
pop
add
pop
adc
pop
outsl
xchg
jle
push
xor
xchg
out
aam
xor
aad
jecxz
mov
push
pop
pop
mov
or
andb
jno
xchg
push
push
test
into
push
js
xor
addw
add
adc
mov
repz
xlat
cwtl
cltd
xchg
std
jp
decb
sti
push
xchg
pop
clc
push
push
jo
fs
adc
stos
in
sbb
pop
jmp
outsl
ds
dec
fdivrs
loopne
cltd
bound
mov
lcall
int3
sbb
xor
lcall
aaa
jle
add
cmc
in
push
pop
repz
pop
mov
cli
fstps
fld
pop
adc
add
xor
data16
pop
jb
inc
xorl
adc
sub
pop
dec
and
in
out
inc
xor
loop
lea
inc
xor
cmp
push
fisttpl
add
jge
sub
and
inc
jns
fidivs
divb
xchg
lea
in
das
dec
mov
pop
arpl
push
inc
insb
xor
fisubs
clc
dec
scas
mov
xchg
sub
and
jo
int
jge
adc
loopne
adc
xchg
cmp
clc
dec
aam
push
flds
mov
pusha
add
lahf
movl
mov
dec
inc
lds
in
inc
xchg
cli
xor
mov
mov
lock
push
js
jb
adc
cmc
shll
and
add
std
mov
xor
stc
out
bound
movsb
mov
mov
aas
fildll
decb
in
jg
add
sub
mov
adc
test
and
fwait
pop
mov
mov
mov
out
mov
and
sub
mov
pushf
test
xchg
pop
mul
dec
sbb
insl
lods
and
sahf
adc
adc
mov
mov
enter
iret
dec
mov
in
push
mov
jg
jae
jbe
inc
xchg
dec
jecxz
gs
pop
int
xor
sbb
inc
sbb
sar
push
je
pusha
int
adc
faddl
push
xchg
mov
xchg
sbb
xchg
mov
lods
rolb
cmpsb
xchg
ljmp
jl
sub
jmp
shl
enter
ret
sub
lahf
inc
jp
push
and
andl
push
add
sbb
adc
mov
mov
dec
mov
inc
lret
sbb
and
dec
xchg
ss
sti
imul
adc
fisttpl
inc
ljmp
push
test
push
xor
js
add
mov
fcompl
sbb
test
movb
cltd
pop
test
movb
scas
or
adc
test
incl
fldcw
and
out
mov
nop
iret
repnz
mov
ret
push
hlt
add
mov
xchg
arpl
mov
fwait
pop
fnstenv
adc
xchg
adc
inc
call
cmpsb
mov
cs
into
or
pop
fs
in
ss
pop
adc
jecxz
and
cmp
movsl
aam
push
fwait
jnp
loopew
mov
mov
jb
je
ss
sbb
test
lock
fsts
jns
adc
add
pusha
push
jb
mul
pop
jne
and
mov
int3
mov
jns
mov
jge
int3
test
call
call
jns
lock
pop
inc
sub
inc
sub
outsb
out
out
sahf
imul
push
das
dec
repnz
fisttps
lcall
push
dec
es
xchg
or
notb
adc
loopne
xor
cmp
sub
or
jge
pushf
mov
arpl
jge
jge
mov
push
adc
mov
xchg
or
and
out
cmpsb
loop
inc
and
inc
jb
sub
stos
sarl
cmp
mov
jb
jge
xchg
stc
push
insb
jle
popf
clc
pushf
adc
dec
mov
mov
icebp
arpl
push
aam
mov
mov
mov
clc
popf
xchg
xor
iret
pop
es
lods
pop
push
mov
push
push
jns
repz
fcompp
test
jge
out
sub
cmp
rolb
push
sbb
inc
imul
push
mov
in
cmp
lods
movsb
ret
scas
scas
aas
sbb
adc
imul
xchg
mov
movsb
pop
and
lods
rcll
cwtl
iret
xor
lret
call
lock
mull
mov
mov
pop
sub
add
js
sbb
cmc
pop
test
mov
std
xchg
inc
fsubrs
scas
push
or
arpl
jns
xchg
aaa
sub
pop
add
ficomps
loopne
js
xchg
push
stc
ret
sub
pop
hlt
push
xchg
lea
sub
iret
test
hlt
hlt
mov
and
xor
jle
dec
iret
jns
sbb
call
loop
test
ljmp
pop
mov
lahf
and
sbb
pop
mov
insb
mov
adc
sbbl
ja
cmpsb
js
mov
inc
xchg
lahf
jno
cs
out
je
cmp
fldl
adc
test
sbb
cli
inc
fdiv
pop
mov
jmp
push
or
js
aas
shll
add
cmp
add
rcl
adc
adc
repnz
pop
inc
sub
sub
dec
mov
dec
lcall
pop
or
pop
push
hlt
mov
xchg
test
push
and
xor
mov
sub
pop
js
xchg
out
ret
cmp
in
add
and
outsb
dec
pushf
mov
loope
pop
cmp
iret
lahf
pop
psllq
hlt
loop
mov
or
gs
sbb
dec
pop
fwait
sbb
push
subb
outsb
nop
dec
sub
pop
xchg
xchg
bound
push
dec
jb
mov
ror
fstl
cld
jmp
lods
push
nop
scas
and
dec
cmpsb
negb
push
icebp
fstps
push
pop
xchg
gs
repz
push
adc
xor
out
lret
and
mov
mov
push
push
and
in
dec
popf
xchg
xor
push
orl
sub
push
mov
pop
adc
xlat
and
test
xchg
popl
and
movsb
or
xor
push
test
cld
jbe
add
inc
loopne
out
mov
fstl
dec
pop
jo
popa
add
xchg
jae
sahf
scas
inc
mov
mov
pop
dec
popf
jbe
or
loope
mov
sub
fsubp
mov
jle
sbb
inc
jnp
out
push
adc
or
or
xor
xchg
pop
add
mov
fsubrs
stos
or
movsb
insb
pop
pushf
sub
hlt
mov
ret
sbb
push
mov
xchg
jg
cld
addr16
dec
loopne
aad
or
sub
div
icebp
mov
mov
add
stc
mov
mov
mov
cmpsb
jne
shl
dec
fimuls
jmp
xor
lret
mov
stos
xlat
adc
dec
adc
cmp
mov
push
pop
xchg
mov
mov
repz
sub
cmp
imul
or
gs
adc
out
sbb
push
fstl
adc
add
inc
pop
pop
orl
and
pop
xlat
das
aas
pop
or
lcall
inc
addl
sbb
mov
inc
stos
sub
and
fdivs
jp
add
popf
leave
das
xlat
dec
mov
inc
inc
add
std
sub
sbb
mov
dec
mulb
lds
jo
dec
or
imul
inc
xchg
or
test
mov
xor
add
push
jle
dec
push
push
mov
sbb
pop
lock
shr
out
inc
out
loopw
inc
adc
loopne
aam
fisubrs
push
stos
mov
lods
data16
sub
arpl
dec
dec
mov
cmp
aam
lahf
out
mov
pop
jp
cltd
daa
iret
jns
std
dec
popa
in
sti
ret
incb
and
loop
test
repz
test
aam
cmpsb
int
xchg
mov
push
or
xchg
je
push
jae
push
inc
jbe
fiadds
xchg
pop
lret
dec
push
xor
pop
or
and
rorb
adc
pop
mov
repz
js
xchg
pop
sbb
test
lods
aaa
lock
pusha
out
repz
mov
jecxz
xor
sub
popf
hlt
sub
push
push
add
stos
lods
adc
jmp
les
lock
lea
pop
add
mov
fcompl
mov
add
fnsetpm(287
mov
mov
dec
popa
or
into
nop
xchg
push
lods
mov
andl
add
inc
bound
dec
push
sub
mulb
jmp
cmpsl
push
pop
ja
or
lahf
cmc
cmp
test
xchg
mov
shll
lret
aaa
popf
jo
sbb
sbb
or
cmpsb
jl
mov
xchg
outsb
fdivr
pop
pop
cli
daa
hlt
testb
dec
inc
add
sub
pop
loopne
pop
xorl
adc
add
xchg
cmp
dec
adc
out
pop
lds
loope
aad
jae
shr
xlat
rcll
mov
es
or
fiaddl
daa
jns
fisubl
mov
loop
add
fildll
movsb
cmpnltps
in
add
pop
push
pop
mov
imul
pop
push
das
dec
inc
pop
sub
jle
push
inc
push
jmp
xor
cmpsl
arpl
mov
cmp
add
movsl
lahf
jne
push
or
inc
pop
mov
hlt
bound
aaa
xor
jp
addb
dec
aaa
add
repz
jb
outsl
adc
xlat
dec
sub
xchg
call
xor
and
in
xchg
push
dec
add
stos
pop
ljmp
sub
jp
pop
ljmp
popf
xor
inc
cs
addr16
ret
stos
pop
fmull
xchg
xor
sub
mov
daa
or
inc
dec
cs
push
xor
mov
xor
cmpsl
sub
iret
ljmp
mov
or
jmp
jb
or
push
xchg
stos
mov
gs
mov
jns
push
clc
dec
jmp
int
shrl
dec
adc
add
ret
add
pop
xchg
test
test
cmp
ds
into
int3
repz
xor
mov
stc
and
mov
or
add
inc
movsb
mov
or
dec
jno
out
mov
jl
movsb
cmp
stos
lret
lods
in
or
mov
xor
mov
jb
xor
dec
sbb
push
mov
bound
xor
mov
inc
jp
outsl
xchg
in
xlat
and
jle
leave
mov
mov
push
repz
add
or
shrl
add
dec
es
outsl
ja
mov
push
adc
test
xor
test
imul
sub
dec
mov
sbb
inc
push
int3
mov
and
idivb
mov
push
or
sub
mov
loop
dec
shlb
movsb
cmp
mov
lea
xor
mov
dec
fwait
jnp
sbbl
in
pop
jns
addb
mov
loopne
inc
lds
xchg
mov
fs
mov
cmpsb
outsl
mov
jl
mov
adc
sub
iret
test
jl
inc
sub
test
lahf
into
fidivs
lods
mov
arpl
dec
loop
pop
stos
push
insl
inc
loope
popf
pop
pop
gs
pop
in
mov
scas
nop
cmp
out
stos
pop
cmp
and
js
jmp
sti
jae
and
or
pop
xor
or
popa
adc
and
dec
test
dec
ja
inc
outsl
add
mov
xor
push
fcmovnu
sbb
xor
xchg
add
or
push
dec
outsb
flds
add
mov
xor
bound
cmc
sub
xchg
shrl
in
repz
leave
pop
dec
pop
nop
out
pop
pusha
int
popf
lods
ja
repz
cmpsl
push
jge
shll
push
cmp
lret
xorb
lcall
inc
in
pop
inc
nop
dec
cltd
add
jo
xchg
iret
bound
daa
and
push
and
inc
xchg
les
lea
loopne
or
in
sar
mov
mov
push
xor
bound
sbb
xchg
adc
fidivl
imul
and
mov
xchg
jne
xchg
movsb
mov
mov
in
icebp
int3
and
or
pop
test
mov
xor
pop
mov
dec
jbe
fsubrs
lds
pop
push
fidivrl
dec
jle
mov
negl
insl
les
insb
inc
mov
fildll
div
sub
pop
sbbl
jle
scas
adc
pop
rcrl
inc
in
cmp
add
add
dec
bound
add
repz
or
cld
in
mov
mov
gs
cltd
push
cltd
cmp
push
ljmp
dec
iret
imul
push
mov
xchg
add
in
cli
mov
pop
or
clc
add
mov
and
add
cltd
pop
cli
ja
inc
or
inc
popa
das
pop
mov
cmpsb
jns
and
add
out
dec
shrb
rorl
imul
lcall
dec
loopne
or
mov
enter
sbb
out
in
enter
cltd
into
fnstcw
dec
js
in
xacquire
push
inc
pop
sbb
sub
cmp
cwtl
test
out
lods
pusha
outsl
lds
and
ja
or
xor
inc
jg
out
les
and
adc
roll
fdivrl
fdivrs
shrb
cmpsl
mov
inc
sub
jle
mov
repz
adc
xor
nop
xor
cmp
push
push
and
mov
mov
idiv
fmull
ret
sbb
inc
mov
pop
int3
dec
sbb
ljmp
pop
mov
data16
mov
cmp
or
es
dec
divl
test
outsb
or
stos
sbb
jno
test
dec
jp
cltd
stos
mov
xor
imul
adc
pop
push
xor
icebp
pusha
ret
testl
pop
mov
stos
pop
inc
lods
push
lret
repnz
mov
mov
mov
loopne
fstpt
pop
adc
sub
push
inc
popa
mov
test
inc
xor
rcll
or
cli
movsb
jnp
mov
or
das
shlb
leave
xor
pop
sub
pop
push
je
mov
and
lea
test
mov
sbb
inc
mov
inc
add
mov
clc
add
nop
pop
cmpsb
fmul
lods
flds
mov
imul
daa
sub
roll
out
adc
adc
sti
mov
add
ss
aaa
outsl
xchg
adc
cwtl
cmp
or
popf
mov
or
pusha
shlb
fistpl
jno
lods
or
insl
cmp
add
movd
jg
xchg
dec
mov
std
mov
ficoms
test
inc
cmp
es
popf
adc
test
out
push
sarb
in
dec
call
sub
test
xchg
add
call
sub
shll
movsl
and
pop
pop
cmp
mov
xlat
sbb
mov
ret
cs
sahf
pop
cltd
les
cltd
pop
sti
aas
pop
jno
push
cmp
bound
fadd
sbb
insb
arpl
arpl
in
or
and
lods
jle
or
sub
xor
pop
xchg
mov
mulps
into
cmp
cltd
or
pop
imul
scas
jge
stos
aad
data16
lea
shrl
insb
lret
popf
sbb
mov
cmp
stc
mov
daa
imul
xchg
shlb
lret
jno
aas
out
sti
jmp
or
push
std
add
adc
adc
out
or
lods
inc
dec
mov
loopne
aaa
push
repz
pop
mov
mov
icebp
in
push
mov
lods
test
pop
rcll
add
jle
sarl
daa
push
fisttpll
add
mov
sub
push
sub
out
and
lods
sub
lods
xchg
jmp
mov
test
into
iret
roll
in
add
sahf
jmp
fadds
sub
pop
je
jl
sahf
bnd
cld
imul
or
mov
pop
testl
insl
test
aam
jbe
iret
mov
rorb
adc
mov
sub
pop
sahf
ficomps
push
or
in
psubusw
and
andb
sbb
ja
xchg
cmp
es
inc
scas
mov
jge
mov
fwait
movsb
and
mov
mov
adc
repz
ss
push
das
dec
test
lock
fs
int3
push
in
adc
dec
mov
sub
cmp
sub
adcb
sbb
push
rorb
loop
jb
push
push
mov
test
jne
scas
pop
push
sbbb
lock
mov
and
jbe
test
jno
inc
inc
or
dec
shll
pop
push
inc
data16
add
stos
xor
add
fisubrl
lret
jb
outsb
out
mov
inc
xchg
into
ret
xor
jb
sbb
pop
and
jl
push
jae
mov
imul
jae
jmp
insb
push
dec
push
das
push
addr16
pop
popf
mov
add
cmp
jae
pop
or
mov
pop
cmp
pop
sub
mov
cmc
cmpsb
int3
dec
fidivl
adc
mov
and
adc
mov
dec
push
test
in
dec
popa
aaa
or
cmpsb
inc
xlat
out
or
dec
test
pop
imul
lret
push
cwtl
outsl
iret
rclw
and
dec
xor
jp
ret
push
push
cs
sub
imul
pop
sarl
es
inc
fisubrl
cwtl
pusha
jb
test
cmp
adc
or
cmp
mov
mov
in
dec
inc
pushf
pop
fldl
ja
or
cmp
dec
mov
pop
inc
or
add
loopne
sub
dec
sub
mov
rclb
or
rcll
jmp
cli
push
sahf
sbb
jnp
dec
jno
mov
adc
test
inc
dec
mov
and
jae
mov
nop
movsl
test
call
sbb
push
loop
outsb
jne
mov
cmp
test
popf
dec
test
sub
fwait
pop
jge
and
das
push
xlat
mov
pop
mul
xchg
dec
or
cli
js
mov
ljmp
cwtl
cwtl
punpckhwd
dec
popf
sub
dec
cmp
aam
lds
and
sbbl
nop
lds
or
cmpsb
mov
and
fstl
jmp
aaa
fbld
lea
pop
dec
mul
inc
inc
out
add
push
dec
inc
or
cmp
clc
pushf
ret
fildl
test
mov
out
inc
or
xchg
push
testb
mov
inc
mov
jae
inc
jp
xorl
jae
dec
aas
mov
jne
std
outsb
xor
xor
adc
mov
ja
imul
push
pop
xor
mov
xchg
nop
push
mov
js
mov
cli
adc
add
mov
cmpsl
and
lock
jmp
dec
repz
xchg
pop
xor
sbb
push
xor
call
aam
stos
or
jae
jl
pop
mov
add
test
arpl
push
sub
sbb
out
or
scas
sbb
and
scas
push
loopne
pushf
sahf
in
sub
fwait
xchg
sti
loope
aam
or
mov
mov
fwait
fcomps
in
jmp
in
test
int3
stos
mov
test
js
mov
jle
add
push
mov
mov
xor
mov
call
xchg
sub
lcall
xchg
xchg
les
outsb
fsubp
lods
cld
or
adc
or
pop
jg
sub
pop
pusha
popf
dec
imul
fbld
orb
out
loope
cmpsl
ret
sub
jb
jge
aaa
pop
inc
push
mov
popa
jno
mov
sub
out
in
fisubl
lds
mov
adc
movsl
in
xchg
sbb
lock
xor
lahf
and
and
test
ror
cmpsb
mov
insb
pop
xor
jp
aad
iret
sub
mov
fadd
mov
fwait
stos
das
shll
movsl
bound
pushl
xchg
scas
fstpl
mov
shrl
add
out
orl
mov
clc
js
push
mov
in
jg
mov
push
pop
cmp
cmc
arpl
and
push
jo
sahf
cmp
lcall
addr16
adc
gs
out
xchg
cmc
pop
aas
xor
xchg
mov
push
inc
push
push
imul
repz
jae
jg
jo
inc
rorl
mov
popa
imul
mov
and
lret
fwait
pop
dec
lds
and
jge
pop
fimull
sbb
xor
ret
sbb
add
sbb
jg
sub
pop
mov
jb
adc
jg
call
aaa
out
mov
sub
shlb
xchg
test
std
fidivrs
lahf
mov
dec
jge
mov
xor
loopne
ret
pop
xchg
xchg
mov
mov
dec
roll
add
out
ljmp
ss
pop
mov
call
dec
out
or
mov
clc
decl
mov
adc
iret
out
ljmp
aaa
outsl
scas
add
cmp
mov
xor
xor
pop
xlat
xor
push
cld
fidivl
test
popa
loop
dec
mov
loop
cmp
jmp
int
cmpsl
mov
popf
xor
fsubs
sbb
and
sub
push
or
int
pop
fs
fmuls
arpl
dec
daa
mov
push
inc
add
push
addb
scas
dec
dec
fldt
pop
push
imul
xor
lahf
add
lahf
pusha
es
add
and
repz
out
cs
sub
dec
lea
loopne
jmp
push
jnp
mov
xchg
pop
push
testl
fcmovbe
daa
loopne
cmp
into
pop
mov
dec
add
jo
pop
data16
call
sbb
and
add
push
jg
inc
movsl
mov
jae
inc
icebp
mov
jbe
jle
or
sbb
xchg
out
pop
cltd
addr16
or
test
jmp
lret
out
js
lds
dec
scas
adc
pop
cmc
lret
sbb
out
sbb
inc
sub
mov
xor
out
mov
mov
jnp,pn
xadd
dec
mov
mov
jmp
imul
push
cs
dec
inc
mov
out
sub
inc
daa
xor
dec
loopne,pt
addb
mov
sbb
stos
repz
mov
test
mov
sub
je
out
add
imul
cmc
popf
std
imul
in
push
adc
iret
mov
addr16
sarl
stos
cltd
cmp
in
je
rorb
jnp
xchg
mov
aaa
sarl
xchg
ljmp
sarl
mov
inc
xor
adc
mov
lcall
test
xchg
jb
sahf
xor
sub
mov
outsl
cmp
ss
pop
xlat
clc
cmp
movsl
fldt
jb
adc
sets
addr16
inc
add
andl
in
xor
xchg
push
and
xor
xor
loop
xorb
pop
mov
dec
lods
jmp
sbb
adc
insl
mov
movsb
add
lds
mov
xchg
inc
fisubs
sbb
gs
jg
into
inc
push
xchg
jne
insl
scas
fstl
fs
jge
jbe
data16
lock
scas
movsl
pop
ja
mov
adcl
ret
je
sub
mov
xor
xchg
sub
xchg
xchg
std
popa
xorl
arpl
enter
jle
adc
mov
into
xchg
adc
push
imulb
sub
aad
fdivrs
or
and
shrl
pop
push
movsl
adcb
das
iret
push
cmp
das
mov
or
push
push
loopne
shr
mov
lds
dec
jp
pop
xor
sub
arpl
movsl
and
clc
movsl
mov
mov
outsl
retw
aaa
mov
push
xor
in
pusha
imulb
sbb
sahf
mov
adc
call
mov
xchg
xor
add
cltd
mov
lods
jp
cmp
stc
outsb
add
cmpsb
mov
mov
push
sbb
bnd
mov
inc
fimull
ljmp
pusha
xchg
pop
cltd
mov
mov
cltd
push
mov
addr16
es
pop
or
push
rcrl
push
movsl
mov
inc
icebp
xchg
repz
xchg
pop
sbb
push
adc
mov
or
jno
ds
stos
jp
inc
bndldx
mov
call
mov
adc
js
sbb
xor
dec
pop
cmp
dec
test
pop
cmp
or
mov
loop
les
movsb
scas
and
aam
outsb
or
inc
lret
cmp
adc
sahf
mov
add
push
es
adc
ret
test
mov
fwait
inc
ja
pop
stc
push
int
cmp
sub
add
jbe
pop
mov
rcrb
sub
pop
cmp
or
cmc
lods
pop
cmp
inc
data16
inc
aas
xchg
sub
loop
or
ret
pushl
lods
xchg
sbb
sbb
or
test
mov
mov
mov
push
pop
xor
mov
or
or
xchg
lahf
and
dec
dec
sti
cmpsl
out
add
dec
add
push
das
or
mov
jne
and
outsl
inc
mov
jmp
adc
lods
mov
inc
pop
push
lret
add
sbb
cli
fstl
test
push
fbld
mov
pop
inc
fcomps
adc
je
in
out
mov
jl
sub
lods
fs
mov
cli
popa
mov
fidivrl
add
cmp
or
add
dec
inc
mov
pop
push
scas
adc
push
in
sbb
or
loope
inc
bound
imul
ret
jns
cmp
sub
mov
sub
pop
mov
mov
jecxz
aam
imul
mov
and
insl
push
cmc
sbb
push
sti
mov
dec
pop
or
sbb
mov
xchg
push
dec
xchg
push
cmp
lods
mov
in
fldenv
movsl
sbb
xchg
cmpsl
push
adc
mov
pop
lods
or
les
jp
mov
xchg
bndldx
sbb
test
sbb
xchg
lods
dec
int
pusha
pusha
jmp
xchg
cmp
mov
fwait
mov
and
pop
adc
push
lock
fcomps
and
insb
notl
mov
add
cmpsl
insb
cs
pusha
push
mov
or
mov
add
cmpl
mov
out
insl
add
js
insb
cmp
repnz
dec
arpl
aad
mov
mov
jne
jne
cmpsl
pop
add
rorl
rorl
in
ds
gs
adc
addr16
clc
sbb
negb
and
cmp
inc
fmuls
pop
jns
into
cmp
pop
jns
ret
mov
aaa
add
gs
cmc
mov
jb
mov
in
pop
mov
out
jl
sbb
add
pop
push
cmp
sbb
movsb
push
cmc
int
mov
out
mov
ds
cmp
loop
dec
pop
mov
in
or
movsb
es
inc
inc
push
divb
add
aas
fisubrs
pop
icebp
orl
add
cmc
mov
testl
lret
iret
rolb
push
enter
aam
aad
inc
sbb
out
mov
stos
ljmp
je
and
cs
inc
ret
push
xor
xor
aad
xchg
adc
cmp
popa
inc
nop
rcl
roll
or
lret
aad
xchg
mov
les
addr16
xor
dec
ret
push
scas
dec
cmpsb
das
fimull
mov
cmp
push
cwtl
xor
push
insl
pop
pop
xor
mov
pop
enter
xchg
leave
pop
loop
dec
hlt
dec
sub
nop
push
ja
fwait
mov
cltd
hlt
in
push
and
fcoml
scas
jle
add
and
jmp
aas
or
cmpsl
das
pop
cltd
sbb
int3
insb
je
mov
fadds
pop
xlat
outsl
fs
cmp
push
xchg
sbb
or
sbb
xchg
jnp
dec
lea
loopne
dec
add
cmp
dec
cmpsb
leave
jnp
lods
in
pop
inc
ret
xor
cmp
das
popf
mov
push
int3
test
pop
push
mov
pop
jno
icebp
push
push
stos
outsb
xchg
repnz
mov
inc
addl
dec
loop
mov
ds
xor
adc
jecxz
mov
dec
ret
stos
cltd
jmp
adc
ds
inc
sahf
addr16
inc
mov
ret
clc
jmp
mov
ret
or
out
imul
in
test
imul
pop
push
sbb
push
bound
dec
sahf
or
mov
mov
sahf
jmp
jg
sti
and
addr16
sarb
cmpsb
inc
mov
pop
loopne
call
loope
mov
dec
mov
jg
and
xchg
sub
jo
icebp
sahf
mov
jne
push
add
or
jle
xchg
and
cmp
or
fiadds
mov
sbb
jae
ds
sbbl
gs
js
and
xchg
inc
addr16
dec
ss
iret
or
fiadds
call
movsl
jecxz
pop
jno
mov
mov
roll
subb
xor
adc
pop
mov
hlt
cmc
arpl
inc
fs
push
cmp
inc
inc
int
xchg
outsb
mov
test
jb
cwtl
into
addl
and
sbb
jecxz
ss
adc
je
push
and
ja
pop
rcrl
dec
test
je
xchg
lahf
mov
jo
mov
loope
sub
outsl
mov
inc
mov
mov
movsl
rol
add
xor
mov
mov
push
pop
xchg
add
sbb
inc
arpl
dec
fs
test
repnz
insl
hlt
in
addr16
mov
cmp
rcrl
xchg
es
sub
jnp
cld
mulb
jmp
idivl
insb
pop
jo
sub
mov
out
arpl
data16
pop
aam
mov
push
mov
scas
test
enter
das
out
call
lods
pushf
jnp
stc
or
push
rcl
push
mov
xchg
adc
xor
stos
and
inc
pop
pop
mov
in
mov
mov
cmp
pop
das
in
pop
leave
pop
or
cmp
cmpl
hlt
mov
or
mov
in
shl
mov
xor
push
out
add
insb
cmp
jae
sbb
cmp
mov
adc
shrl
sbb
movsl
jmp
idivb
push
mov
adc
pop
inc
and
aaa
repnz
inc
arpl
jo
data16
sbb
fcoms
out
jge
push
out
sbb
cld
inc
inc
fldt
add
jp
jle
fimuls
push
inc
xor
and
xlat
push
jne
int
fistps
pop
ret
jb
ljmp
xchg
push
loope
inc
sbb
xchg
inc
repz
js
lea
xchg
xchg
xchg
lahf
xorb
adc
incb
mov
dec
adc
sbb
lea
cld
mov
mov
add
jae
fldcw
enter
fmul
mov
push
scas
dec
mov
jo
les
pop
jno
inc
dec
jmp
js
xchg
test
lahf
jl
lods
push
test
inc
xchg
subl
xchg
sub
mov
adc
rolb
pusha
push
push
push
or
mov
add
or
sbb
stos
nop
arpl
or
loope
pop
data16
push
inc
xchg
fwait
lds
arpl
mov
in
cltd
mov
cmp
fwait
lcall
scas
fs
sub
test
mov
fwait
in
fcomp
inc
je
popf
xlat
inc
cld
mov
mov
popa
mov
loope
dec
inc
fistpl
pop
cmc
test
mov
sub
cmp
inc
sbb
bound
or
cmc
push
inc
xchg
sbb
dec
and
or
movsl
in
insl
mov
cwtl
cld
or
sub
fwait
aam
testl
loop
sahf
stc
lock
cmp
fwait
add
push
inc
enter
ds
and
jle
sahf
add
add
adc
fnstsw
rolb
mov
das
cli
jg
add
cmpsl
loope
cmp
test
lock
mov
add
imul
pop
mov
mov
mov
mov
js
test
xor
push
stc
repz
lock
xchg
call
cmc
xchg
gs
lret
sar
dec
and
mov
repnz
out
mov
xchg
xchg
sbb
and
out
mov
scas
call
imul
js
in
cmp
loopne
ret
lcall
mov
mov
xchg
negl
cmpb
xor
sbb
lods
adc
pusha
fdivrs
scas
mov
mov
adc
push
jne
loope
mov
add
leave
lret
out
mov
jmp
push
jg
or
or
xchg
dec
testl
popa
jg
in
mov
test
mov
lret
in
sbb
cmp
aas
xor
mov
dec
inc
pop
sarb
cmp
lods
das
sbb
push
cli
or
sbb
mov
mov
in
mov
lahf
push
dec
fldt
negl
or
je
js
cmp
xor
push
xor
xchg
rorb
movsb
clc
mov
out
push
js
sbb
pop
mov
jne
inc
and
out
sub
push
pop
inc
out
push
mov
ja
jge
nop
and
inc
cltd
ret
cltd
pop
dec
sub
sbb
jns
xchg
jmp
adc
lds
jl
push
mov
dec
mov
xchg
fsubr
lods
iret
sbb
jnp
daa
cs
les
pop
pushf
in
sub
add
push
stc
xchg
dec
outsb
add
cld
push
sub
adc
mov
lahf
add
mov
daa
outsl
fwait
cltd
int
mov
xor
inc
mov
sub
pop
lds
sub
int
sbb
xor
push
fnsetpm(287
fnstenv
jl
cmpsb
fs
fists
mov
repnz
mov
fidivl
shl
adc
push
cmc
addr16
adc
sahf
pop
cs
fsubrs
cwtl
lret
sbb
clc
pop
sbb
jg
mov
popa
push
lret
mov
ja
cmpsb
xor
jbe
pop
fists
mov
adc
bound
in
lcall
mov
ds
test
jo
cmp
out
pop
mov
cmpsb
je
sbb
aaa
jl
arpl
std
mov
push
scas
out
add
cld
js
and
lret
inc
out
inc
stos
add
jae
icebp
popf
popf
ret
gs
or
lret
cmp
adc
jmp
pop
add
pop
mov
imul
inc
mov
adc
sub
in
jne
shrb
xor
leave
cmp
sbb
pop
insl
testl
repnz
lods
lret
jbe
cmp
sbb
jb
inc
inc
dec
loopne
push
pop
mov
cmpsb
mov
ljmp
add
frndint
arpl
enter
in
inc
movsl
xchg
mov
nop
and
or
ja
mov
idivb
lret
aam
in
pop
setnp
shrb
inc
movsb
pop
sub
xor
mov
jle
mov
addl
cmp
sub
xor
jnp
leave
movsl
mov
pop
mulb
sbb
dec
bound
je
icebp
adc
test
out
popa
jl
lods
sbb
fistl
jmp
outsb
mov
pop
insl
pusha
jle
or
adc
hlt
jbe
adc
xor
iret
leave
fistpll
mov
mov
loopne
pop
mov
pop
in
push
loopne
mov
adc
xchg
jno
xchg
int3
mov
inc
out
lods
or
mov
push
or
pop
push
mov
fcomps
cli
enter
fisubrl
fistpll
test
inc
sbb
mov
cmp
js
imul
fcmove
jge
dec
xor
std
xorb
or
jg
int3
je
push
and
push
das
inc
icebp
repnz
gs
mov
cmc
imul
mov
aad
addb
xchg
dec
arpl
push
les
jns
ja
das
jbe
div
fs
adcl
add
dec
jbe
stos
jg
pop
jle
xor
mov
push
enter
push
push
xchg
leave
testb
cwtl
jbe
add
insl
rcll
jno
pop
mov
xorb
mov
xchg
int
ja
ret
sbb
mov
out
decl
push
roll
push
outsl
outsl
push
scas
push
push
adc
xorl
ljmp
sub
lock
aas
push
test
outsl
pop
jbe
cmpsl
xor
lret
test
or
aas
jo
xorl
xlat
cmp
into
data16
test
inc
pop
shl
not
mov
cli
inc
mov
nop
mov
mov
pop
mov
inc
in
adc
push
imul
arpl
mov
and
cmp
aas
nop
jns
xchg
or
push
and
cmp
mul
mov
pop
cmp
xor
sbb
scas
mov
add
cmp
les
ds
cmp
bound
stos
bound
in
nop
jle
ja
dec
fildl
inc
xor
mov
rep
mov
outsb
push
movsb
mov
inc
and
das
js
xchg
pop
push
stos
stc
mov
cmp
inc
nop
in
mov
jecxz
xor
sub
lea
dec
fnstsw
inc
lahf
fimuls
pop
adc
daa
jmp
xchg
fimull
adc
mov
loopne
imul
xchg
sti
mov
xor
jmp
hlt
inc
or
or
fldenv
pushf
push
stc
jbe
flds
rcrl
xchg
sbb
mov
addr16
dec
outsb
push
cltd
dec
jno
adc
sub
xchg
cmp
gs
adc
lcall
iret
loop
not
pop
sub
push
xchg
sbb
mov
mov
js
mov
or
je
xor
mov
cs
negb
jmp
test
or
push
pop
cs
add
cmc
mov
movsl
cmp
rcr
sub
loope
hlt
dec
push
popf
and
test
fwait
pop
in
jmp
pop
orl
imul
ja
or
fcoms
pop
sahf
ja
mull
adc
ficoml
sub
loopne
popa
pop
lea
xchg
loop
xchg
inc
pop
daa
dec
jl
dec
cmp
add
dec
ffreep
sbb
add
and
inc
adc
ret
mov
cmp
add
roll
jmp
test
or
pop
dec
out
in
out
jmp
ss
jno
mov
add
out
mov
repz
addl
stc
arpl
sub
cmp
cltd
cmc
jns
push
stc
sub
pop
addr16
scas
and
jb
outsb
inc
inc
cmp
adc
xor
fisttpl
test
mov
pop
imul
hlt
pop
pusha
int
int3
int
cmp
xchg
ret
xchg
jecxz
hlt
adc
mov
ss
pusha
ja
mov
test
xchg
cmp
je
xchg
arpl
cmc
fstl
add
bound
dec
mov
lcall
push
push
pop
mov
xchg
inc
lret
push
mov
fisubs
enter
addr16
inc
pop
jp
fnstenv
adc
in
dec
push
fs
stc
push
divb
push
cmp
jnp
xor
jns
loope
in
std
and
push
dec
out
lds
mov
jp
sbb
out
xor
insb
xchg
xor
or
out
fwait
mov
insb
mov
inc
cmc
out
sbb
cs
or
lods
sub
and
xchg
add
adc
mov
adc
dec
aam
sahf
aas
jp
arpl
dec
pop
fstpl
sub
out
jmp
sbb
and
mov
int3
das
sbb
aam
stc
orb
pop
insl
add
jae
je
inc
rcr
fcoml
push
ljmp
xchg
mov
cmp
loope
mov
ret
sub
clc
lods
pop
gs
test
cltd
in
xchg
push
jnp
push
push
sbb
xchg
jmp
dec
repnz
lea
pop
aas
add
push
jp
xor
arpl
jo
mov
sbb
mov
inc
jnp
sub
dec
sbb
mov
repz
xor
mov
sbb
popf
adc
xchg
push
aad
xchg
dec
sbb
insb
mov
jb
push
fwait
int
push
push
gs
adc
mov
lea
dec
fcmovu
dec
roll
ret
inc
fmul
scas
daa
ret
ja
into
pop
insb
in
fisubl
adc
cmp
pop
sub
mov
out
push
sbb
loope
cmp
filds
dec
popf
je
fsubrs
push
mov
stc
or
popl
repnz
jne
test
shl
xor
pop
mov
mov
sbb
inc
lods
sbb
pcmpeqb
dec
push
mov
xchg
fdivr
push
mov
aas
out
insl
shl
mov
shll
mov
subb
movsl
pop
add
add
xor
and
ds
rcrb
scas
lret
lods
sub
jns
mov
push
popa
jle
xchg
inc
mov
add
insb
pop
mov
pop
test
fs
dec
cmp
out
mov
lret
stc
aam
add
pushf
addl
jle
movsb
cmp
add
testb
jle
xor
test
cs
dec
test
arpl
dec
inc
stos
xor
push
iret
push
mov
mov
adc
out
std
jns
mov
push
cmp
fs
mov
mov
imul
pop
fs
and
cmp
shlb
inc
jl
fists
jns
cmp
fstps
aaa
add
das
dec
adc
test
xor
test
xorl
mov
pop
arpl
lock
push
scas
mov
or
inc
fisubs
hlt
ss
in
pop
sub
jle
dec
int
stc
sbb
out
lea
push
imul
mov
icebp
push
loope
sub
fdivs
mov
cmp
pop
adc
out
lcall
inc
mov
ljmp
ret
in
outsl
jp
lock
das
push
int
and
or
inc
inc
outsb
mov
ja
jnp
int3
les
andb
jne
imul
xchg
in
mov
pushf
lret
pop
mov
mov
lahf
in
inc
lods
add
rorb
add
sub
pushf
mov
addr16
bound
inc
or
icebp
into
and
out
add
and
mov
mov
stos
dec
call
inc
sbb
shlb
inc
repnz
xchg
mov
cmp
or
sub
ljmp
jne
data16
mov
imul
push
jb
leave
mov
sbb
hlt
xor
fdivl
cmpsl
in
xor
enter
mov
fwait
sbb
int
push
adc
arpl
jge
aas
insb
lods
mov
xchg
jb
adc
add
sub
add
sbb
adc
add
pop
arpl
dec
daa
cltd
adc
dec
jle
pop
and
pushf
pop
jbe
cmpsb
adc
inc
jecxz
sub
sarl
xchg
adc
dec
jmp
in
add
xchg
fdivrs
sbb
push
in
insl
rol
je
jns
cmpsb
jg
das
cmpsb
sbb
fs
test
pop
pop
xchg
les
xchg
push
mov
js
add
mov
lahf
jge,pn
repz
lret
lds
test
add
pop
test
inc
mov
fistpll
or
cmp
cmpsl
dec
loope
xchg
rcrb
data16
mov
ja
add
movsb
push
aaa
or
push
jmp
dec
es
xor
int
testl
sbb
int3
push
fldl2t
push
jp
loope
mov
jmp
icebp
pusha
leave
fwait
lds
jns
popa
out
xchg
mov
arpl
push
mov
dec
add
enter
arpl
negl
sub
aaa
lahf
and
dec
and
cmpsb
lret
mov
xor
mov
cld
jecxz
js
sub
pop
cwtl
and
filds
dec
sbb
push
pop
mov
mov
arpl
sahf
xor
shrb
xchg
ja
loopne
rcr
fwait
bound
inc
mov
and
push
fists
inc
pop
push
jbe
pushf
mov
das
and
fisubrl
mov
lods
addl
in
sub
jne
fiadds
mov
push
ds
mov
insb
imul
imul
jl
add
mov
enter
sbb
fstpl
pop
loop
lcall
fsub
das
loop
shlb
aas
jmp
cmp
outsb
xchg
pop
cmc
cmp
mov
pop
clc
lock
cmpsb
push
inc
mov
sub
bound
adc
fs
fildl
jge
out
dec
repnz
dec
dec
pop
jp
cs
cmpsl
mov
add
pop
mov
or
cmp
cmp
sub
add
inc
bound
test
lods
fs
data16
xchg
mov
cmp
mov
push
jge
rclb
andl
inc
pop
add
int3
fcompl
cmpsb
orb
sub
jne
hlt
movb
cltd
bound
pop
mov
jmp
outsl
sarb
push
shl
or
cmp
inc
popf
test
xchg
xchg
inc
lcall
xor
cmp
sti
aad
pushf
lock
sub
or
dec
jg
mov
jp
in
movsl
jl
inc
nop
cmc
cwtl
xor
dec
cmp
jae
sbb
test
xchg
add
das
dec
adc
fisttpl
dec
ds
pusha
lea
pusha
aam
xor
inc
cmc
sar
sub
dec
adc
sbb
jge
movsb
cwtl
push
jno
popa
xor
jp
outsb
loopne
jns
out
gs
inc
xor
cmp
insl
fisttpll
pop
inc
pop
mov
loop
or
jo
fsubl
sbb
or
sti
sub
in
jnp
daa
sbb
cmpl
out
dec
test
arpl
xor
inc
mov
lock
ss
mov
fmulp
jp
xchg
adc
pop
test
gs
shlb
ret
and
mov
inc
cmp
pop
out
fs
repnz
dec
pop
adc
pop
ss
mov
cmc
cmp
push
mov
daa
aaa
call
xchg
xchg
sub
imul
aas
stos
cmpsb
lret
mov
or
loopne
inc
loopne
mov
xorl
mov
xlat
push
popf
mov
popf
into
push
pusha
push
lcall
cli
in
cltd
nop
sub
lods
add
pop
add
insb
and
icebp
nop
mov
mov
fidivl
mov
xorb
xor
sub
push
aad
clc
cmp
dec
jle
dec
dec
push
adc
idiv
push
mov
sarb
and
sahf
mov
sbb
jae
mov
jmp
xchg
cmp
push
cmp
jl
push
add
arpl
inc
pop
and
mov
daa
xchg
mov
aad
pop
rcrb
clc
add
push
jb
mov
in
movsb
dec
movl
les
movsb
sti
aas
xchg
mov
cmp
test
pop
ljmp
in
or
insl
xchg
cmp
out
daa
push
cli
out
pop
fdivrl
pop
cmp
xorl
push
sub
and
int
xchg
pop
and
push
mov
xor
icebp
adc
rorb
add
cmp
icebp
dec
or
sbb
rorl
xor
mov
xchg
or
lea
ljmp
pop
and
mov
int3
dec
pop
aaa
testb
daa
adc
add
pop
imul
mov
inc
sbbb
xor
fidivrl
jbe
lods
jg
or
lds
sarb
cmp
sbb
sahf
sbb
mov
mov
jge
adcl
rolb
push
jne
es
adc
xor
adc
popf
shll
mov
repz
mov
and
cwtl
rcrb
mov
insl
adc
and
xchg
fs
cmp
mov
or
jecxz
out
aaa
shrl
out
in
aad
into
adc
in
sbb
xchg
hlt
in
push
imul
dec
aaa
test
adc
sbb
push
in
dec
movsl
or
mov
jle
push
and
and
lock
pop
jmp
loopne
xchg
push
sahf
pop
pop
pop
out
imul
push
jns
push
imul
lahf
cmpsb
clc
pop
js
jmp
pop
xor
testb
inc
rorl
leave
push
or
and
mov
mov
cmp
pushf
mov
test
fidivs
xor
add
push
push
cs
lahf
jmp
sbb
pop
movsb
push
or
mov
call
xchg
add
cmp
cld
jl
mov
ret
push
sahf
shll
call
dec
shlb
pop
movsl
shll
mov
inc
mov
hlt
xchg
cmc
mov
cwtl
sti
jae
add
sub
inc
fimuls
push
jecxz
or
pop
out
and
push
shll
inc
cwtl
shrb
push
cmc
ss
xor
popf
inc
jle
repz
daa
jecxz
in
inc
add
int3
or
xorl
mov
dec
fnsetpm(287
mov
mov
push
inc
add
cltd
push
subb
push
outsb
cs
clc
ds
pop
jmp
push
hlt
mov
test
testl
bound
jl
mov
push
and
cmpsb
pop
jb
sti
xchg
add
movsl
jne
mov
repz
add
mov
inc
in
jl
xchg
movsb
sarb
sahf
nop
jecxz
pop
and
or
shll
or
or
fs
add
leave
mov
sbb
repz
jle
aam
neg
xchg
xchg
popa
jno
dec
cmp
and
jge
mov
lret
andl
sarb
mov
daa
mov
jnp
out
adc
inc
fmuls
add
mov
scas
pop
dec
insb
outsb
sbb
add
movsb
ja
adc
lock
pop
mov
shrl
lahf
jmp
mov
das
jne
loop
daa
cmpsl
and
jbe
jle
push
mov
mov
repz
inc
fdivr
test
je
xlat
cs
leave
push
mov
jp
pusha
xchg
clc
cmpsl
repz
fdiv
add
lods
and
and
imul
jo
repnz
xchg
lcall
mov
fildll
scas
and
scas
cmp
add
call
in
mov
imul
cld
and
shl
mov
test
or
cmp
adc
or
fsubrl
mov
adc
inc
in
lds
fbld
mov
icebp
je
mov
movsl
and
inc
mov
leave
daa
loopne
lea
or
pushf
or
sub
movsl
mov
adc
and
cmp
aad
adc
jo
xor
mov
add
add
in
ds
inc
mov
xchg
ret
push
out
push
fcom
pop
mov
insl
stc
out
sub
sub
cmpl
clc
mov
inc
xchg
sti
sbb
pop
aad
mov
mov
test
enter
mov
inc
in
push
sbb
xchg
test
mov
xchg
adc
test
hlt
fisttpll
pop
or
inc
popa
and
outsb
add
pop
xor
sub
popf
push
xchg
shrl
or
inc
mov
nop
add
and
mov
ja
jmp
imul
mov
jno
mov
push
pop
inc
push
jae
sbb
gs
fneni(8087
dec
roll
popl
adc
adcl
dec
in
setne
insl
popf
lahf
lods
cmp
imul
rol
pop
sub
jmp
jno
dec
pop
mov
into
test
leave
push
jbe
jg
xchg
sbb
dec
sbb
push
cs
xor
std
dec
mov
or
pop
inc
out
add
ljmp
inc
stos
lcall
cmp
pop
push
push
les
rclb
mov
sub
hlt
cld
push
inc
add
or
popa
mov
or
sub
mov
jecxz
bound
sbb
jno
push
pop
fwait
and
xchg
adc
add
ficomps
xchg
in
lock
xchg
data16
pop
jl
jg
pop
test
dec
adc
sbb
xchg
stc
push
push
test
popf
xlat
jge
add
adc
les
inc
lea
or
xchg
sub
sbb
rolb
loopne
das
sarb
in
add
xchg
dec
mov
mov
into
jbe
jg
push
jp,pn
mov
inc
insb
inc
xchg
int3
pop
into
mov
out
jle
jl
mov
cmp
fcoml
fidivl
sub
aas
add
outsl
cs
je
xchg
push
imul
mov
mov
push
add
stos
mov
dec
iret
pop
fcmovnb
push
lcall
cmpsb
ret
shll
push
cwtl
movsl
sbb
pop
push
mov
iret
inc
lock
sbb
outsb
add
mov
in
mov
and
push
inc
mov
outsl
adc
add
mov
sahf
mov
push
mov
enter
ja
daa
popf
jl
inc
dec
jno
mov
dec
fcoml
movsl
sarl
and
popf
jg
dec
int3
pop
aaa
rorl
jo
in
cwtl
or
cmp
ja
lods
add
fwait
adc
inc
cmp
cmp
mul
sti
test
xorb
sub
xchg
insb
jmp
hlt
outsb
add
dec
jnp
insb
mov
xor
ret
cmp
ret
daa
hlt
xor
inc
jmp
mov
out
push
in
or
and
in
jne
andb
daa
mov
fadds
jbe
pop
cs
sub
arpl
xchg
jo
addb
xchg
lahf
in
mov
repz
dec
cmp
dec
out
mov
aas
daa
add
test
mov
iret
xor
hlt
ret
adc
jmp
leave
jbe
in
out
lock
andl
xchg
dec
or
xor
lods
sub
xor
pop
and
jecxz
out
and
ret
loope
lea
adc
cmp
ss
jg
pusha
jnp
fdiv
fimuls
imul
shll
mov
xchg
shlb
imul
inc
cmpsl
inc
and
xor
ja
or
pop
clc
jle
ret
xchg
dec
int
jmp
popf
std
jp
and
mov
cmp
add
pop
dec
pop
insb
dec
ljmp
jl
fdivl
mov
pop
sahf
adc
into
insb
pop
cmp
dec
xchg
mov
push
lods
cmp
xchg
cmc
lret
lret
xchg
pop
lret
jno
or
sbb
and
xor
data16
or
das
adc
cwtl
inc
xchg
movsl
and
hlt
icebp
mov
add
push
or
fdivp
test
add
es
gs
in
cmpsb
imul
nop
inc
shrl
lcall
inc
jge
adc
add
test
fbld
and
ljmp
dec
push
stos
jnp
cltd
lcall
lock
push
sbb
pop
sub
jne
pusha
sbb
sbb
mov
loop
scas
cmpsl
xchg
scas
je
sahf
sub
call
adc
lock
mov
clc
js
adc
icebp
and
add
sub
call
aaa
jle
orl
cmp
mov
pop
pop
cmp
pop
mov
dec
push
xor
push
xor
jl
iret
mov
out
sbb
scas
popf
cltd
scas
stc
das
add
sub
clc
and
rorb
xor
fldenv
pop
mov
mov
shl
mov
popf
shlb
icebp
dec
jge
xchg
data16
out
adc
and
lds
pop
mov
orl
mov
andl
push
movsl
repnz
dec
mov
xor
cmp
jnp
cmp
push
xor
in
mov
and
dec
repz
and
or
mov
fadds
pop
or
pusha
xchg
into
jae
gs
jbe
jne
into
add
rcrb
xchg
add
adc
push
xor
cwtl
pop
dec
add
inc
push
movsl
pop
stos
out
decb
mov
inc
push
push
fadds
imul
push
cmp
cmc
sbb
sbb
xchg
stos
adc
popf
ret
clc
xor
movsl
add
sbb
fmull
mov
push
scas
lret
mov
leave
loopne
pusha
and
cmp
into
nop
cli
pop
test
into
add
push
lock
daa
loop
stos
repnz
xchg
fdivr
fnstsw
and
scas
xchg
jp
test
cmpb
call
sbb
push
and
adc
enter
and
push
cmp
sti
push
mov
jge
sahf
ss
pop
inc
leave
mov
dec
mov
aaa
out
sbb
std
xorb
incl
lds
and
fbstp
dec
fdiv
call
jge
call
adc
push
jecxz
xchg
sub
ja
push
mov
or
mov
stos
xchg
lods
les
push
lret
lock
mov
sahf
fcmove
mov
mov
int3
xchg
xchg
rcl
insb
mov
sbb
rolb
fsubl
repnz
or
or
in
add
outsl
cli
fwait
push
js
in
lcall
add
sarb
std
aaa
cld
cmpsb
inc
out
sub
mov
xor
jbe
fwait
lods
xchg
mov
stos
cmp
xorl
lock
xchg
dec
pop
dec
and
ja
sub
pop
call
aaa
add
jle
jmp
adc
cwtl
dec
addb
mov
mov
sbb
pop
adc
shrb
and
push
rorb
idiv
mov
jo
and
xor
mov
mov
scas
push
test
jb
xchg
mov
jne
ds
mov
loopne
xchg
jp
outsb
mov
ja
mov
out
js
mov
testb
add
popf
mov
ret
mov
sub
sar
sbb
je
ljmp
incb
lods
adc
stc
inc
mov
outsl
or
push
rcrl
push
jecxz
movl
mov
push
inc
out
adc
push
add
cs
addl
in
out
dec
and
icebp
out
icebp
mov
sub
sbb
insl
or
stos
push
sbb
nop/reserved
add
mov
fcoms
push
xlat
mov
sbb
rolb
xor
sub
clc
cmp
loopne
jmp
out
mov
dec
call
mov
dec
fmul
mov
cli
out
divl
inc
data16
dec
add
dec
mov
in
and
or
stos
mull
xorb
fwait
lea
jb
out
je
stos
jnp
jne
stos
dec
cmp
mov
inc
fidivs
lret
frstor
stc
mov
or
jo
jno
ja
xchg
mov
fs
cmp
mov
xchg
xor
dec
push
dec
rcr
adc
ja,pn
scas
jg
sbbb
sub
and
imul
xorb
or
mov
pop
dec
mov
cmpsb
sub
xchg
repz
jnp
in
pop
pop
xor
adc
mov
in
sub
sbb
xchg
jge
movsb
dec
cmp
nop
inc
vpsubsw
sbb
jno
neg
inc
rcr
xchg
adc
call
push
mov
gs
xor
sub
rcrb
inc
pop
addr16
pop
xor
and
popf
fwait
mov
pop
aaa
pop
dec
arpl
push
frstor
adc
negb
imul
xor
lcall
lcall
jmp
pop
mov
fcompl
mov
or
jmp
popf
mov
pop
fucomi
add
inc
xchg
aas
jl
push
push
or
mov
lods
rol
xorl
in
jae
scas
jmp
loop
adc
aam
jp
cmp
lcall
or
idivb
jbe
adc
mov
cmp
or
dec
sarb
push
fwait
divb
pop
push
test
jmp
dec
add
pop
push
ret
mov
clc
addr16
push
jo
imul
aas
inc
jmp
pop
jne
dec
ljmp
int3
daa
push
push
loop
iret
sub
sub
es
aas
dec
mov
outsb
adc
xor
inc
cmpl
out
sub
xorl
rcrl
test
daa
pop
and
clc
and
cmp
xchg
pushf
pop
sarl
fistpll
stc
mov
pop
mov
adc
xchg
jnp
fwait
mov
and
push
dec
or
jp
loope
das
pushf
icebp
push
jne
stos
outsl
inc
xor
loop
cmp
cmpsl
mov
loope
ljmp
lret
gs
mov
shl
xchg
dec
cmp
xor
sti
mov
into
mov
pop
xchg
cwtl
aas
mov
shrl
pop
sub
adc
pop
cmpsl
cmc
push
lahf
jecxz
pop
push
xchg
pop
mov
jl
pusha
inc
and
dec
xchg
imul
push
popa
lock
pop
pushf
push
and
cmc
mov
xchg
add
adc
out
in
jae
inc
insl
adc
xchg
lret
aas
cmp
test
js
push
xchg
pop
lods
movaps
cltd
or
sar
addl
pusha
clc
repz
fistpll
mov
cwtl
or
cs
out
xor
mov
jne
scas
cs
sub
mov
sbb
cs
pop
cmp
out
sbb
push
jne
in
lahf
call
mov
cmc
pop
jb
mov
aam
insl
lret
sbb
aas
fidivrs
mov
or
and
sbb
xor
mov
mov
adc
sub
push
stc
inc
in
push
insb
sahf
cmc
mov
int3
pop
mov
lea
inc
out
out
outsl
cmp
dec
mov
out
fcoms
xchg
lods
rcl
sbb
inc
push
mov
cmc
add
adc
xor
inc
ret
sahf
outsl
mov
nop
add
arpl
xor
and
adc
mov
adc
inc
mov
push
fwait
mov
adc
and
fs
xor
incl
inc
pop
shl
xchg
sbb
lcall
lea
fldenv
xchg
dec
cwtl
shll
push
mov
rolb
sahf
sarl
jp
ret
pop
sar
sub
leave
imul
mov
push
inc
fsubrs
or
cmp
cmp
mov
fnstsw
adc
inc
jmp
cltd
cmc
inc
push
aad
pop
pop
movsl
sbb
hlt
fimull
out
divl
xor
cmp
pop
xchg
lret
cmp
in
repnz
lods
push
outsl
xorl
sbb
fistl
mov
lea
push
lods
ds
jecxz
pop
leave
sbb
or
adc
or
push
push
cli
sbb
add
push
push
or
dec
push
sbb
jge
fs
mov
inc
sub
aam
push
in
mov
sbb
mov
cs
outsl
dec
out
jl
push
ljmp
test
in
jno
sahf
pop
fsubrs
lret
shl
jae,pn
dec
fisttps
adc
fisubs
push
mov
push
movsl
addl
pop
add
pop
inc
xor
repz
push
add
sti
add
add
mov
loop
pop
mov
cmp
loop
dec
xor
add
cltd
sub
cmp
mov
pop
mov
add
nop
bound
sbb
imul
es
fs
add
test
enter
stos
das
dec
addr16
mov
lods
and
sub
enter
inc
push
add
sbb
sub
sub
mov
mov
loop
cmp
cmp
lret
mov
mov
lcall
or
sub
scas
fstpt
push
fs
ja
adc
in
xor
rcrl
jb
pop
iret
xlat
fdivp
inc
mov
and
lahf
mov
inc
cli
aam
sti
fisubs
lahf
push
icebp
or
cmp
sbb
movsb
cld
iret
lds
adc
add
mov
es
pop
sbb
rolb
sahf
dec
jne
out
sbb
call
jbe
xchg
xchg
inc
ret
data16
popf
xchg
insl
push
sub
data16
repz
mov
addr16
movsb
dec
das
pop
cmp
cmp
adc
in
push
int
subb
fldcw
out
ja
cmc
mov
lds
push
test
clc
dec
dec
ljmp
nop
ds
pop
scas
lret
mov
inc
mov
jl
lcall
cmp
lcall
push
lods
sub
and
sbb
fisubrl
jb
mov
sbb
jb
mov
ret
push
mov
cwtl
test
lds
sbb
or
imul
inc
icebp
dec
and
scas
pusha
pop
fucom
mov
nop
mov
cmp
inc
jl
or
jmp
mov
pop
and
jae
mov
outsb
or
sbbl
cmp
std
xchg
arpl
and
push
jge
fmull
sbb
cmp
popf
sub
cmp
dec
int3
repnz
lods
sbb
xabort
clc
fwait
loope
cmp
dec
adc
scas
xchg
lea
adc
lock
sub
loope
lods
lods
mov
and
fldl
sahf
insb
jo
out
mov
insb
jo
xchg
or
lret
pop
rclb
popa
inc
iret
cmp
jno
adc
sahf
xor
add
scas
fisubl
leave
adc
lock
out
dec
cmc
dec
fcos
loop
subl
das
dec
sbb
repnz
lds
mov
inc
dec
hlt
testl
pop
sbb
lcall
add
sbb
inc
pushf
lds
sahf
and
pop
outsl
test
add
sub
pop
gs
out
cmc
idivl
imul
leave
icebp
loope
xchg
popa
scas
and
adcb
xchg
pushf
fcoms
nop
stos
sbb
mov
dec
lcall
ret
lret
cmp
inc
pop
xchg
dec
scas
dec
xchg
mov
push
nop
popa
mov
cli
sbb
and
mov
fs
std
imul
into
sbb
xor
lret
movsl
std
and
and
inc
sbb
call
cld
imul
adc
mov
movsb
adc
jp
jnp
push
sub
jno
shll
jb
shrl
xchg
jns
push
mov
sub
mov
enter
lock
add
out
daa
movsl
adc
je
pop
insb
jmp
je
dec
in
adc
xor
hlt
bnd
loopne
lods
std
je
out
pop
ret
sub
add
push
lods
out
scas
jl
aaa
fisttps
mov
or
aas
pop
outsl
ds
xchg
test
rcl
sub
mov
mov
cld
inc
imul
sub
add
jmp
lods
push
pop
mov
gs
aaa
shlb
xchg
pusha
ljmp
fwait
xchg
sub
add
bound
int
andl
out
fcomi
les
rolb
lock
fsts
decb
cmc
outsl
dec
sbb
xchg
push
repz
xorl
mov
fistpll
sub
outsl
add
xchg
cmc
pop
jae
dec
or
pop
cmpl
push
lods
xor
xchg
shll
sti
inc
in
out
xchg
jg
or
add
xchg
je
decl
jecxz
in
dec
fdivr
lods
or
push
xchg
fimuls
push
dec
aam
ljmp
inc
cmp
movsb
fdivrl
out
add
xchg
xor
sub
and
inc
dec
int
iret
sbb
lcall
cmp
enter
ret
mov
mov
imull
outsb
bound
dec
sub
aaa
lods
les
fwait
cmc
divl
addr16
icebp
jg
mov
imul
push
mov
mov
fnstsw
mov
out
push
stc
push
repz
push
inc
jb
dec
dec
lahf
lods
mov
inc
xor
push
das
lock
xor
xchg
jl
jae
inc
jecxz
and
adc
and
aam
mov
mov
icebp
mov
push
add
stos
pop
lcall
and
push
push
scas
mov
inc
sbb
ret
lods
add
fcomps
sbb
cmp
ficomps
push
aam
das
pop
sbb
mov
inc
xchg
mov
ror
jns
xchg
push
cmp
data16
inc
out
xor
pop
cmp
mov
lcall
push
dec
sbb
jp
sti
loope
jp
sbb
xchg
pop
loop
lcall
imul
pop
jb
lret
scas
sub
push
cmp
les
rcll
xchg
sahf
cmpsb
jp
or
inc
adc
mov
sbbl
push
and
sub
sahf
and
push
mov
adc
xchg
sbb
callw
pop
push
dec
pop
test
mov
lods
pop
orl
or
and
cmpsl
call
movsl
pop
xchg
in
stc
mov
nop
fcompl
jns
pushf
adc
push
jbe
aam
out
xchg
mov
cmp
int3
popa
lock
rcll
add
dec
aas
mov
out
push
add
xor
cli
stos
push
notb
cmp
jle
dec
ja
mov
add
wbinvd
out
cld
sub
inc
ss
cmpl
mov
stc
arpl
mov
mov
pusha
xor
push
imul
pop
out
mov
rcr
xchg
movsl
js
repnz
and
ret
adcb
call
and
cmp
or
pop
or
pop
pop
xor
and
dec
sahf
push
test
jo
adc
movsb
pushf
fdiv
jnp
nop
sbb
mov
or
mov
adc
push
dec
pushf
mov
mov
cmp
and
inc
jns
sbb
push
repz
addr16
cmpsl
pop
out
test
mov
push
sub
mov
add
stos
mov
mov
fs
ds
loopne
jp
jb
popa
pop
arpl
cmpsb
std
repnz
insb
cmp
cmpsl
dec
mov
lret
push
sbb
outsl
shl
push
loopne
lret
in
add
cmp
jecxz
movsl
xor
inc
rcl
data16
iret
movsb
xor
fmull
xchg
mov
fwait
jecxz
or
cmp
test
lods
outsb
les
mov
push
loope
sti
xor
mov
jecxz
cmp
jmp
cltd
nop
or
mov
mov
stos
test
sar
lret
sbb
inc
int3
and
cmp
sbb
jne
arpl
jbe
push
adc
aaa
mov
xchg
sti
and
in
and
xor
jl
imul
push
or
addb
pop
idivl
ss
daa
test
test
pop
cwtl
dec
or
push
aad
add
dec
sub
subb
adc
filds
push
sbb
inc
mov
fbstp
or
pushf
add
push
lods
int3
pop
or
cmc
dec
dec
rol
jb
cmp
adc
dec
xchg
xor
jne
neg
lds
adc
enter
or
dec
cmp
pusha
rcll
ds
outsl
loope
sub
mov
test
fiadds
movsl
lock
cld
int
rclb
sub
xchg
sbb
das
fisubrl
shl
mov
adc
les
cld
aad
aaa
cmp
sbb
jae
out
mov
mov
cmp
inc
push
mov
jns
inc
test
inc
lods
out
loop
cmp
xchg
mov
or
sub
jge
jo
je
lods
adc
mov
insb
or
push
and
cltd
ret
imul
call
popf
jecxz
fisttps
xlat
xor
xor
inc
sbb
bswap
jmp
push
jae
leave
mov
ret
xor
xchg
cmp
roll
in
adc
adc
les
mov
mov
adc
std
or
push
fimuls
sbb
gs
push
adc
lods
inc
fbstp
fdivs
loopne
inc
fadd
aam
add
push
shlb
lahf
ret
out
inc
jne
imulb
stos
out
jecxz
leave
cmp
adc
xchg
aas
dec
pop
mov
or
pop
mov
popf
sub
inc
adc
lds
popa
leave
rcr
dec
hlt
lahf
test
fidivrl
mov
sahf
lahf
inc
xor
imul
test
in
std
lret
testl
arpl
cmc
aaa
stc
hlt
fcmovb
mov
dec
mov
cmp
scas
nop
or
insl
xchg
jg
jg
xchg
jl
mov
jo
inc
cmp
cmp
in
and
sub
ss
add
mov
repz
cmp
or
push
inc
push
xor
mov
add
out
rcrb
mov
push
and
push
mov
cmpsl
and
add
mov
jmp
sub
scas
mov
incl
xor
cmp
sub
into
jecxz
bnd
push
int3
sub
jo
inc
mov
pop
cs
mov
mov
and
pop
mov
test
test
lds
or
lods
push
hlt
and
movsl
mov
jle
dec
mov
pop
mov
cmp
aam
test
cli
stc
jno
aas
jge
adc
test
xor
nopl
pop
lret
rorb
pusha
mov
negl
pop
xchg
jge
push
push
test
push
fcom
dec
out
xchg
cmp
sbb
mov
inc
sbb
scas
pop
ret
addr16
sbb
adc
idivb
push
or
sub
jbe
mov
dec
fistpll
paddq
fsts
icebp
lea
push
sbb
sub
rcrb
pop
ret
daa
sbb
inc
sarb
scas
pop
ds
mov
mov
pop
ljmp
add
xchg
jne
cmp
pop
rclb
xor
xor
ffree
scas
into
call
pop
nop
adc
adc
mov
xchg
shll
rcll
hlt
insl
call
leave
fstl
or
idivb
iret
adc
mov
bnd
ds
sahf
out
js
ret
xchg
sti
test
hlt
sub
xor
mov
aas
and
add
dec
lcall
add
icebp
lods
add
mov
hlt
and
cli
mov
pop
popa
lahf
aaa
loopne
popa
adc
into
or
loopne
loopne
and
jge
jle
rcrl
movsb
jnp
dec
ss
push
sub
ret
cmp
stc
or
aam
adc
inc
into
sbb
repz
adc
dec
lret
sahf
pusha
lds
notl
push
leave
jmp
mov
fistl
rclb
pop
jge
dec
mov
sbb
cltd
daa
mov
rcrb
rorl
popa
xor
xor
into
jmp
icebp
insb
mov
jno
nop
adc
ljmp
cmc
sub
mov
fwait
push
xchg
fsubp
pusha
jecxz
mov
cmpsl
mov
jmp
pop
test
icebp
pop
nop
orb
xchg
mov
test
xchg
xor
inc
cmpsl
iret
add
inc
mov
jp
add
mov
pop
push
mov
std
inc
cltd
and
cmp
add
or
lock
jp
ss
and
adc
outsl
js
out
inc
shrb
xor
xlat
sub
mov
bound
pop
cwtl
mov
lds
jmp
pop
cmpb
lock
mov
mov
jo
push
loop
das
stos
cltd
out
bound
test
les
out
pop
pop
int
inc
std
add
movsb
lcall
and
push
inc
out
test
out
add
push
and
ret
in
sub
adc
jne
out
jmp
and
dec
adc
stc
push
push
movsb
push
mov
dec
fidivs
pop
pop
lea
xchg
in
cltd
cmp
adc
xchg
xchg
dec
cmp
mov
push
dec
icebp
add
ljmp
int3
mov
xchg
inc
fnsetpm(287
lret
or
sahf
xchg
addr16
mov
and
or
movsl
lahf
lods
adc
bound
mov
gs
jmp
mov
xchg
fstpt
jg
loope
mov
push
mov
mov
xchg
in
or
repnz
inc
mul
add
stos
test
inc
adc
in
loop
cwtl
lret
dec
lret
cmp
roll
test
or
xchg
jl
sub
mov
shll
add
xor
push
xor
inc
add
lock
sbb
cmc
dec
adc
pop
mov
jne
cltd
adcb
push
dec
xlat
push
inc
or
popf
push
insb
popf
sub
push
cmp
mov
xchg
cltd
imul
cs
inc
and
sbb
loop
push
test
pop
sbb
push
push
or
jle
fldcw
jnp
scas
mov
cmpsl
mov
insl
xor
call
pop
mov
rorl
xor
loop
dec
inc
fmul
push
adc
in
int3
sbb
mov
sbb
dec
mov
fstl
jo
jbe
adc
es
inc
test
pop
addr16
int
mov
mov
cmp
push
imul
jns
sbb
imul
shll
jle
daa
jae
cmp
add
lods
or
pop
scas
push
lods
repz
push
lcall
data16
int3
and
call
int
bound
mov
or
stc
or
push
lds
xor
mov
and
push
cs
and
xchg
or
ret
nop
repnz
insl
mov
mov
pop
cli
push
sbb
mov
xchg
in
inc
xor
pop
repz
jecxz
das
rolb
sub
and
push
xor
ret
es
lahf
pop
sub
adc
add
jno
xchg
sbb
fwait
mov
inc
adc
mov
scas
das
jns
fisttpll
push
sbb
aad
jbe
lcall
aad
fmull
fbstp
sub
xchg
or
xor
lret
sbb
mov
shrl
push
adcl
push
mov
sub
jbe
cmp
int3
mov
test
insl
push
enter
mov
or
iret
ja
push
push
xor
mov
rcrl
scas
jne
mov
out
add
int
dec
out
and
pop
cmp
cld
bnd
bound
mov
ds
lahf
subb
insl
fidivrs
jb
push
cmp
nop
fisubs
adc
mov
sbb
aas
call
stc
and
dec
jge
xor
aad
pop
xor
dec
push
test
ds
call
sar
dec
sbb
jge
ja
xor
mov
out
test
mov
fwait
cmpl
push
xchg
ds
adc
pop
and
mov
xor
jnp
xchg
add
ret
lods
push
and
movsb
jb
mov
cmp
popa
stos
jmp
repnz
mov
dec
pop
pop
adc
and
movb
push
test
jmp
pusha
sub
adc
jp
pop
inc
cmpsl
push
cmpsb
inc
push
mov
push
fucomp
xor
mov
add
dec
je
mov
loopne
fadds
jmp
sti
mov
shrl
ds
jmp
xchg
stos
add
fdivr
mov
mov
es
loop
mov
addr16
cs
insl
xor
repnz
stc
lods
frstor
lea
mov
xorb
insl
cld
les
and
or
adc
int3
pop
mov
int
arpl
or
mov
sbb
xor
jl
dec
shll
popf
fsts
cwtl
mov
mov
cld
mov
leave
push
fstl
dec
push
and
mov
and
jns
psubsw
outsl
sub
lods
les
push
test
ds
pop
sub
and
pop
adc
or
test
adc
sub
leave
cmp
push
mov
neg
pop
jle
mov
popf
mov
push
mov
sub
dec
sbb
xor
push
mov
push
pop
mov
pop
mov
out
movsl
cli
cmpsl
dec
icebp
sub
fsts
or
jns
push
das
ja
cmp
pop
sbb
fists
outsl
jne,pt
rclb
and
cmpsl
or
add
mov
stc
lcall
fincstp
in
push
xorl
mov
mov
scas
push
mov
fistps
jns
out
js
add
into
push
mov
sub
xchg
jbe
adc
test
pop
clc
pushl
jle
sbb
jg
std
movsl
pop
mov
test
pop
xchg
std
cmc
jge
insl
dec
ror
push
mov
shlb
arpl
ja
orl
leave
lods
inc
dec
inc
jne
fisttpll
insl
sub
ret
and
shlb
aad
or
aas
aam
dec
cld
inc
hlt
cmp
fisubl
lock
pusha
mov
gs
rclb
sahf
push
inc
pop
int3
adc
gs
xchg
jge
sarl
stos
repz
xor
ffree
sub
and
outsl
loop
iret
dec
lods
cmp
adc
pop
and
inc
sub
jbe
dec
call
out
icebp
jle
xor
inc
mov
and
mov
ja
fisttps
and
xchg
das
adc
ds
or
cld
movsb
popa
sbb
dec
testb
mov
adc
inc
mov
outsl
push
call
pop
add
faddl
add
ret
imulb
movsb
iret
imul
lea
xchg
fld
leave
or
and
jbe
jne
inc
pop
out
test
or
push
out
lahf
repnz
in
sbb
mov
push
data16
add
xchg
enter
push
lds
in
adc
in
cwtl
mov
test
lea
decl
mov
mov
cmp
ror
jne
mov
imul
inc
xchg
je
fistps
shll
dec
mov
lahf
pushf
xor
adc
xor
mov
fnsave
insl
and
loopne
test
or
sbb
sbb
push
push
in
daa
jl
xchg
and
aas
insl
jg
lods
lods
cmp
scas
stc
and
mov
int
rol
scas
iret
pop
in
cs
push
xchg
mov
sbb
das
dec
loopne
inc
rorb
adc
orb
xchg
xchg
fnstcw
sbb
int
cmpsb
lret
hlt
das
add
mov
push
es
mov
cs
mov
shl
js
jbe
mov
movsl
ret
mov
or
adc
neg
pop
jle
popa
cmpsb
jge
push
mov
push
add
sbb
cmpsl
unpcklps
sahf
push
data16
and
neg
rcl
push
mov
cmp
pop
addl
imul
jecxz
test
fildll
mov
push
rcrb
pop
lcall
xor
popa
popa
shll
add
cld
jge
add
fcmovnu
test
frstor
icebp
les
lds
in
inc
andb
cwtd
jmp
dec
jp
mov
dec
mov
jmp
xor
aad
aam
jns
xchg
or
adc
stos
sbb
pushf
in
scas
dec
mov
stos
in
or
subb
sub
adcl
cs
mov
lods
and
mov
cltd
ss
add
pushf
aam
aas
sbb
sbb
loope
in
fadd
orb
mov
cwtl
mov
nop
mov
mov
push
or
out
outsb
mov
aad
popf
or
das
outsl
xor
fidivl
lcall
stc
xor
sbb
jnp
mov
hlt
out
in
insl
pop
sub
xchg
sub
pushl
jns
sarl
jecxz
outsb
out
aaa
cmp
dec
lea
push
sub
pushf
pushf
stc
mov
lahf
inc
add
jl
test
lret
fisubs
pop
cwtl
int3
dec
lock
out
sbb
mov
inc
les
fbstp
sbb
jb
adc
cmpb
lret
lods
sbb
sub
and
repz
cltd
mov
enter
scas
pop
divl
daa
dec
xchg
fwait
xor
test
add
xor
test
dec
mov
clc
rcrb
shll
mov
rolb
adc
xorb
popa
push
mov
in
subl
fistps
mov
adc
sahf
scas
sar
xchg
daa
and
fwait
loope
test
imul
adc
dec
cmp
lds
adc
arpl
insb
mov
insl
mov
xlat
fisttpl
les
pop
insl
mov
repz
iret
in
pusha
inc
mov
cwtl
std
mov
sub
out
repz
adc
mov
test
insb
stos
andl
mov
fwait
nop
adc
nop
xor
jl
sbb
repnz
lret
mov
les
xor
add
mov
and
lret
xchg
cmp
mov
sbb
mov
sbb
sub
push
dec
inc
iret
inc
jns
ret
mov
pop
sbb
lcall
cltd
lcall
movsb
xchg
mov
or
ret
nop
add
in
aam
lret
into
daa
sbb
outsl
das
mov
adc
into
in
push
icebp
lret
jmp
pop
in
mov
std
sahf
push
or
lea
in
ljmp
mov
cmpsb
adc
cmpsb
mull
insb
mov
arpl
sbb
cmc
sbb
lods
ds
into
xor
sub
cmp
test
xor
sub
sbb
cmpsl
and
pop
test
mov
adc
mov
mov
addr16
outsb
xor
fldt
popa
push
clc
int3
pop
cli
push
cli
ret
or
sarb
sarl
movsl
out
cmp
xchg
icebp
fisttpl
jmp
jecxz
outsb
lods
cmc
dec
inc
sbb
bound
movsl
popf
cmpsl
xlat
xor
sti
sub
ret
jno
ja
decl
push
push
dec
subb
stos
ret
rcrb
shrl
es
ljmp
sub
je
scas
incl
mov
xchg
mov
stos
jne
idiv
in
jg
call
xchg
pop
dec
mov
fcmovnu
nop
xchg
add
mov
inc
fsubrp
and
gs
lret
lcall
mov
sub
dec
fcoml
repnz
mov
enter
xor
lea
and
adc
popa
xor
jno
lahf
out
mov
dec
std
xchg
es
inc
frstor
cli
sbb
dec
jno
push
cmp
jmp
mov
jmp
sbb
clc
pop
push
in
mov
rclb
into
push
rcll
mov
movsl
mov
mov
mov
push
and
stc
daa
cmp
cmp
decl
add
dec
int
mov
outsb
push
pop
and
xchg
rolb
jle
test
cli
sub
cmp
test
inc
xlat
das
cmpsb
pop
xchg
lds
mov
daa
sbb
rol
or
pop
dec
sbb
negl
lods
xor
rcrl
jmp
lret
jmp
subl
sub
aam
insb
std
movsl
cltd
orl
xor
lock
xchg
xchg
add
jno
inc
test
outsb
cmp
jne
mov
bound
scas
jge
outsb
inc
popa
fcmovnbe
sbb
into
jl
or
lds
or
shll
cmp
or
dec
int3
sub
jl
or
fisubrs
jge
es
insb
push
test
pop
cmp
int
call
cmp
fsubrl
outsb
es
mov
dec
mov
mov
out
aam
jo
sub
sub
mov
in
dec
jne
cmp
jg
mov
daa
scas
inc
mov
fcmovne
sbb
push
adc
lea
cmp
lret
ret
lods
fimuls
add
popf
fidivrl
sbb
cltd
mov
ret
clc
movsb
enter
adc
xor
adc
loopne
cmp
sbb
data16
sub
add
xchg
adc
fistps
ljmp
jbe
stos
cmp
ljmp
in
ficoms
enter
push
ss
add
orb
jg
in
aas
lahf
outsb
and
div
ljmp
je
cltd
mov
pop
repnz
iret
stos
mov
hlt
mov
fs
insl
mov
mov
loop
fiaddl
lcall
test
shll
mov
es
adc
into
test
sarl
sbb
xor
xchg
or
add
and
or
mov
aad
sbb
mov
jge
subb
jns
mov
fs
pusha
push
cwtl
and
mov
ljmp
jmp
ret
iret
mov
add
test
stos
aad
test
add
psrld
sarb
or
cwtl
int3
sub
outsb
jge
and
fstpl
push
dec
mov
imul
jno
jl
out
or
sbb
in
pop
cmpsl
mov
add
jmp
sub
stos
push
cmpsb
stos
cmp
mov
loop
mov
call
push
xchg
jnp
push
xor
inc
push
push
test
xor
or
repz
in
cmp
push
pop
roll
and
push
push
es
adc
push
dec
pop
lock
add
das
xchg
sub
mov
pusha
mov
into
mov
add
test
cmc
aad
xchg
ja
jne
and
or
sbb
pop
mov
stos
push
adc
fsubrl
push
cmpsb
mov
push
xor
dec
add
scas
dec
mov
ret
jecxz
jl
sbb
mov
or
mov
int3
dec
sbb
cmovg
lods
in
sbb
repnz
lahf
loope
push
fstl
in
rcl
jns
out
adc
push
popf
das
outsb
push
xchg
inc
jne
jecxz
cmp
mov
sbb
je
mov
xor
lahf
mov
in
push
into
pop
xor
and
repz
ret
sbb
sbb
add
adc
loopne
mov
dec
aaa
sub
jae
enter
fbstp
sarl
pop
add
iret
dec
in
fcmovne
mov
xchg
lea
xor
movsl
and
std
dec
push
mov
imul
into
xor
arpl
or
mov
movsl
sbb
jnp
ss
add
pop
push
inc
cmpsl
inc
shrb
cmp
or
std
inc
and
cmp
pop
ss
sub
jbe
shrl
sub
jo
push
pop
gs
outsb
mov
jb
out
jo
lods
stc
cmp
outsl
add
icebp
or
and
sub
or
push
mov
insb
or
push
mov
je
jo
int
inc
push
pop
sar
gs
pushf
rclb
rclb
jge
test
lret
xor
xchg
cmp
pusha
push
loope
push
sbb
fnstenv
cmpsb
outsl
negl
xchg
adc
lods
inc
ds
sarb
stos
mov
lock
adc
cmp
cmp
sub
sarb
mov
pop
mov
xchg
das
add
mov
cld
xadd
lea
push
call
jle
mov
add
xchg
out
loopne
idivl
pop
mov
mov
mov
jno
cltd
push
bound
sub
fs
mov
jg
nop
icebp
icebp
loopne
cwtl
sub
dec
dec
into
stos
aaa
inc
gs
dec
xor
inc
gs
mov
ficoms
mov
mov
jl
mov
int3
or
andb
sbb
fucomip
cmp
or
inc
scas
fnstcw
arpl
dec
xchg
les
mov
xchg
adcl
mov
push
mov
cld
test
cmc
lods
stc
push
leave
fistpll
jle
and
scas
out
mov
mov
xor
push
dec
or
jnp
jge
insl
ja
adc
je
popl
fldln2
push
add
xor
in
mov
stos
or
push
mov
pop
sub
into
add
xor
out
icebp
test
testl
push
addr16
push
add
push
xor
lods
fmul
mov
and
adc
cmpsl
fisttpl
add
or
xor
loope
xchg
loop
xchg
inc
cmpsl
call
jg
in
push
cs
nop
and
hlt
pop
sub
leave
fisubl
ljmp
xchg
insl
les
scas
das
xor
fs
mov
fisubl
jo
push
scas
sbb
test
mov
add
jmp
xchg
mov
push
xchg
pop
xor
fisttpll
fbld
pop
mov
movsb
out
std
sub
add
and
gs
sbb
cld
push
push
xor
in
inc
mov
fsubrs
rcrl
movsl
hlt
ficoml
cs
lcall
loope
in
jge
insb
test
xchg
mov
leave
mov
dec
call
mov
jecxz
sub
and
push
mov
dec
push
lds
inc
es
mov
shll
rcll
js
push
sub
cwtl
aam
mov
into
sbb
jp
rolb
cld
lcall
push
sbb
movsl
int3
mov
xor
daa
push
cmp
imul
orl
pop
mov
js
xchg
int
movsb
lods
xor
fcomps
fimull
mov
jmp
jo
gs
jae
pop
fdivl
mov
adc
out
jle
dec
out
rolb
ror
mov
mov
sarl
call
test
ds
push
push
or
imul
or
or
popa
cmp
inc
js
sub
push
not
fsubrs
mov
insb
pop
lcall
mov
test
mov
shlb
xor
mov
cmp
dec
dec
dec
fsubrp
pop
in
mov
scas
sti
test
leave
and
mov
vpor
jo
inc
divb
cmp
fmul
inc
mov
mov
xor
mov
mov
sub
inc
lods
pushf
mov
insl
pop
mov
mov
aam
dec
add
test
xlat
jp
sub
lea
fcompl
and
sar
xchg
sbbl
inc
inc
iret
out
sub
or
pop
push
adc
mov
faddl
rol
or
out
adc
pop
pop
and
int3
stos
add
sbb
xchg
inc
jecxz
addr16
mov
repz
xor
pop
out
dec
add
das
adc
mov
enter
imul
lret
mov
out
and
in
in
cmp
mov
pusha
xor
shll
jns
xchg
addb
imul
add
sub
push
stos
mov
mov
xor
out
mov
push
push
leave
mov
mov
pop
dec
cmp
push
mov
push
jmp
push
cld
dec
mov
adc
sbb
add
and
adc
leave
mov
xchg
or
imul
mov
pop
and
xchg
add
mov
and
mov
sbb
push
icebp
mov
pop
insl
dec
out
outsb
sub
int
and
rorl
cwtl
scas
fcompl
sub
mov
mov
andl
mov
add
dec
sbbb
push
xchg
test
repnz
inc
jmp
xchg
imul
sub
scas
sahf
shl
jne
imul
xchg
dec
fcoms
and
jo
xchg
mov
jns
cwtl
push
adc
push
adc
jge
mov
outsb
adc
imul
imul
push
out
sbbl
sbb
dec
pop
jle
movsb
loope
rcrl
lea
mov
jge
sarl
push
jb
xchg
test
and
pop
insl
and
clc
movsl
mov
and
add
xchg
jbe
loopne
jp
je
cmp
out
ds
xor
push
movsl
fucomi
mov
jp
es
orb
mov
adc
inc
push
push
cmp
movsl
dec
mov
outsl
mov
adc
xor
sqrtps
adc
inc
xor
jns
js
into
xor
jecxz
loopne
xchg
mov
test
adc
add
fcmovu
push
rcrl
sbb
jmp
lret
sbb
aas
popa
sti
js
jmp
mul
inc
lahf
add
loopne
ss
imul
mov
cmp
push
push
mov
sbbb
cs
fldt
leave
mov
int
daa
idiv
adc
or
jns
mov
lahf
push
ret
adc
clc
or
dec
add
ja
ficoms
fstp
xor
fsubs
roll
pop
fisttpl
sbb
lock
sub
jnp
aad
mov
sub
jg
xor
jo
popa
dec
xchg
shr
ljmp
test
mov
pop
jae
gs
mov
push
jl
imul
pushf
outsl
sub
inc
lods
jmp
bound
fdivrs
mov
add
pop
xor
fstpl
mov
pop
inc
testb
hlt
add
inc
push
leave
imul
xchg
in
test
xchg
repnz
xor
sbb
lock
cs
cwtl
into
test
pop
fwait
push
pop
lods
addr16
addr16
mov
dec
stos
dec
mov
fwait
sbb
in
dec
div
aaa
out
mov
out
out
div
push
loop
test
push
fisttps
xor
fs
outsb
push
in
in
bound
xchg
lret
xchg
daa
xchg
pop
jb
cs
stos
inc
daa
push
dec
sbb
xchg
mov
pop
push
pop
xor
in
scas
enter
and
lods
push
and
in
pop
stc
add
mov
xor
cmp
adc
cmpsl
push
shrb
pop
inc
xor
fldenv
movb
popa
mov
pop
mov
jnp
fisttps
sar
icebp
or
jne
mov
xchg
inc
jge
sbb
cltd
mov
lock
push
mov
imul
or
push
adc
jecxz
jae
push
popa
testl
in
pop
push
xchg
loop
popf
es
lcall
fidivrl
xchg
out
aas
test
ffreep
and
dec
push
mov
push
aaa
adc
js
sbb
arpl
cmp
push
pop
inc
ss
std
or
dec
cmp
dec
hlt
add
push
mov
arpl
xor
push
jmp
outsl
hlt
sbbl
or
add
jle
mov
pop
pop
dec
and
cmc
es
imul
mov
pop
mov
lods
pop
aam
sub
loopne
or
pop
fs
mov
pop
cmc
sbb
inc
test
jp
mov
cmp
adc
mov
mov
cmpsl
in
jg
sub
lds
xchg
lret
orl
fisttpll
mov
jmp
or
jle
aas
jecxz
scas
pop
jnp
pusha
sbb
sbbb
dec
les
in
pop
scas
jno
mov
addr16
std
and
jbe
movsl
mov
mov
arpl
fistl
leave
sub
sub
repnz
insl
aam
fdiv
or
adc
cld
pop
and
inc
pop
in
ret
ret
xor
daa
rcll
shlb
insb
cmpb
sub
jecxz
in
mov
and
adc
mov
and
sar
sbb
mulb
jge
enter
inc
cmp
mov
xor
orl
sub
fsub
stc
ltr
imul
and
mov
dec
andb
jne
cmp
data16
sub
cmp
push
mov
jne
xchg
xchg
rorl
aam
pop
test
dec
sub
jmp
adc
sbb
xchg
dec
pop
mov
filds
lret
mov
pusha
pop
cmp
out
jp
push
xor
pop
insb
aaa
in
aad
inc
inc
mov
out
mov
shrl
mov
test
loopne
stc
mov
dec
cs
rcr
pushf
pop
int
inc
stc
addb
xor
adc
xor
dec
or
dec
fsub
ss
push
mov
int
or
jmp
ds
xchg
cmpsl
shlb
mov
xor
out
outsl
dec
int
and
rorl
push
loope
repnz
jne
mov
push
push
shl
orl
adc
fwait
scas
mov
rorl
xchg
jb
shl
loop
scas
outsl
aas
idiv
cs
mov
out
ljmp
mov
mov
cmp
xchg
or
jno
lgdtl
sbb
dec
sub
sub
lahf
ss
addr16
rorb
pop
inc
xor
mov
pusha
cmp
mov
hlt
arpl
mov
rorb
pop
lret
popf
sub
lahf
cltd
xchg
mov
or
pop
stc
and
insb
dec
insl
inc
adc
and
ss
sbb
xchg
or
popf
cltd
mov
push
enter
sub
pop
out
dec
fwait
roll
jecxz
cmc
cltd
inc
popa
sub
mov
mov
daa
pusha
in
out
fisttpll
cmp
outsl
inc
in
imul
mov
add
cltd
dec
adc
push
jno
lods
fmuls
dec
fstpl
icebp
push
or
int
popf
stos
add
sub
imul
in
mov
dec
movsl
mov
push
xchg
outsl
sub
pop
lea
adc
iret
sub
hlt
shll
dec
or
xchg
sbb
push
and
mov
dec
sub
jo
lock
jnp
jns
inc
movl
add
sbb
fldt
shll
adc
outsl
aam
sti
pop
or
icebp
rol
aad
pop
addb
xchg
hlt
and
xchg
lods
push
in
mov
mov
fldcw
pop
lods
push
jmp
dec
mov
aaa
mov
xchg
sbb
jl
outsl
adc
out
divb
mov
shl
daa
mov
out
dec
dec
mov
movsl
addl
das
pop
lcall
xor
jmp
push
fsubrl
lcall
jae
nop
adc
fwait
cmpsl
rcrl
call
jg
fstpl
icebp
shlb
jno
movsl
inc
xor
test
ljmp
iret
dec
adc
je
mov
adc
push
jnp
adc
jmp
mov
popl
clc
mov
ljmp
add
adc
mov
add
test
and
push
shll
insl
mov
fiadds
xchg
stos
push
aam
repnz
lea
pop
mov
mov
loop
fs
mov
out
mov
movsl
mov
ljmp
xchg
xchg
pop
ljmp
lret
mov
xorl
xor
test
lds
mov
pop
stos
sub
jne
cld
xor
push
lock
in
insb
mov
subb
cmpsl
mov
ja
fiadds
leave
comiss
sbb
dec
mov
addr16
arpl
in
inc
leave
push
cwtl
in
jmp
xor
cmpsl
jge
push
mov
pop
mov
andb
jge
aad
add
pusha
test
jb
mov
test
cmpsl
pushf
insl
and
in
xor
lahf
movsl
test
cltd
mov
adc
repnz
or
lret
inc
stc
daa
jle
dec
adc
movsb
shr
jmp
dec
cmp
and
testl
js
es
xchg
or
inc
mov
sub
test
adc
mov
mov
mov
cli
leave
sbb
scas
cmp
iret
or
dec
cmp
pushf
je
bound
sbb
pusha
adc
shl
rcrl
mov
push
leave
pop
bound
inc
pushfw
nop
clc
imulb
push
adc
outsl
push
test
movsl
outsb
xchg
out
addr16
aad
imul
adc
loop
out
jo
movsl
mov
xorb
jge
add
jmp
cmp
mov
mov
cs
imul
add
idivb
movsb
lds
xchg
into
ja
je
sbb
push
stc
mov
xor
cli
aas
rol
xorl
and
insl
iret
adc
xor
test
mov
add
popa
mov
leave
xchg
enter
jg
cmp
fcoml
pusha
stos
fadd
cmp
xor
mov
xorl
cmc
mov
lea
and
dec
test
test
sbb
es
or
mov
xchg
mov
dec
pop
add
xlat
fsubrp
push
xor
dec
ret
mov
add
inc
jne
push
shlb
out
xor
rorl
mov
xchg
sub
push
ljmp
adc
dec
in
loopne
inc
lds
dec
adc
inc
jbe
addr16
pop
addr16
fnstenv
adc
and
shlb
sbb
push
inc
push
or
stos
xor
xor
ds
add
mov
xor
daa
mov
pop
mov
es
cmp
aaa
and
enter
sahf
aam
jne
xchg
jp
or
movsb
sysenter
adc
test
sub
std
in
xor
push
out
mov
in
add
pop
mov
shrl
mov
push
sarb
pop
xor
dec
sti
rcll
roll
push
lods
mov
mov
and
mov
inc
push
daa
cmp
adcb
arpl
mov
sarl
scas
stos
xor
ljmp
pop
stc
es
pop
jns
fs
adc
std
jns
jae
push
in
in
jg
ds
jp
jne
mov
fiaddl
pop
jle
mov
add
adc
and
jo
mov
mov
mov
fsubr
xor
in
enter
loope
adc
pop
or
jge
lds
mov
mov
test
sub
push
mov
fisubrs
xor
pop
and
cltd
insl
cmpsb
fistpll
std
cld
inc
int3
insb
xor
fcompl
xor
popa
ret
add
mov
cwtl
pop
mov
out
fucom
push
ljmp
negl
adc
sbb
jb
es
jecxz
test
jmp
dec
popa
in
shrl
fs
push
loope
sub
das
cmp
addl
xor
pop
xchg
inc
jbe
popa
lds
cmp
add
movsb
outsb
aaa
lods
mov
inc
mov
ja
jo
dec
ficoml
sbb
leave
stos
inc
xor
js
js
inc
xchg
jnp
int3
sbb
test
sbb
insb
sbb
insl
inc
sub
cmc
xchg
or
mov
pop
jo
bound
movsl
inc
clc
jmp
fiadds
add
cmpb
fistps
lcall
and
test
outsb
cwtl
test
xchg
or
es
mov
ret
or
mov
test
or
xchg
test
je
inc
adcb
xchg
ss
sti
ja
mov
mov
mov
insl
add
lret
adc
mov
cli
js
out
pop
outsb
jae
cltd
int
hlt
pop
mov
and
mov
xchg
jb
adc
out
push
iret
adc
aam
popa
shr
mov
fildll
loopne
mov
fldl
adc
cld
mov
mov
stc
enter
xor
test
sbb
jle
mov
icebp
loop
mov
inc
jecxz
adc
cld
cmp
sbb
adc
insb
icebp
test
jns
xor
pusha
nop
push
or
cmpsl
scas
fdivrs
pushf
xchg
out
bound
mov
mov
fwait
jb
mov
movsb
jp
loope
cmp
out
fwait
cmp
aad
lock
rol
sbb
mov
adc
shl
jae
push
inc
sbb
adc
aas
clc
sub
add
sub
movsl
inc
mov
cmp
scas
lods
cmp
or
mov
add
mov
mov
das
int
inc
movsb
push
lods
lahf
jnp
test
sub
xchg
dec
call
out
jo
into
and
lods
inc
inc
ret
lret
mov
pop
call
cmp
xchg
mov
jg
out
sbb
shlb
inc
add
iret
in
test
stos
add
xor
mov
scas
inc
cmp
mov
incb
sarl
fcmovu
jb
lds
xchg
enter
jno
adc
lahf
or
cmp
ss
faddl
push
pop
cmp
sahf
fcomip
psubusb
pusha
arpl
clc
mov
bound
sub
out
js
ja
sub
leave
mov
xor
add
mov
stc
mov
jp
xchg
lcall
mov
push
into
pop
clc
imul
jno
rcrl
scas
sti
push
aad
pop
test
inc
cs
sub
dec
sub
rsqrtps
inc
ljmp
mov
dec
pop
and
and
mov
adc
loopne
push
addr16
ret
stos
repz
fiadds
xchg
or
and
mov
and
dec
es
sbb
mov
xchg
fsubp
neg
movsl
iret
or
ficoms
sbb
add
push
cmp
sbb
push
and
fsubl
inc
cmpsl
stos
adc
mov
lret
xchg
sti
subb
push
cmp
into
popf
cmp
push
shrl
imul
fstpt
aas
fsubr
push
sbb
and
insl
inc
lods
mov
incb
add
movq
outsl
loopne
movsl
rcrb
push
or
dec
loop
fsub
cmc
dec
xchg
dec
hlt
hlt
mov
push
pop
aad
push
daa
and
pop
test
add
icebp
aam
push
notb
js
outsl
xor
fs
clc
adc
imul
xchg
frstor
push
dec
mov
mov
insb
loopne
nop
add
push
add
cmpsl
or
fs
push
push
push
test
mov
adc
mov
icebp
jmp
jne
add
imul
push
out
clc
mov
rcrl
movsl
inc
lock
adc
sub
sbb
es
add
fdivs
insl
in
pop
ret
push
inc
fdivrs
mov
dec
add
scas
pop
scas
data16
mov
outsl
inc
cld
lods
mov
ret
add
lea
shlb
sti
xor
xor
sbb
je
jge
mov
add
scas
imul
leave
fdivrl
cmp
sar
mov
and
add
sub
xor
out
xor
popl
arpl
xchg
jne
sub
repz
jmp
xor
imul
xlat
fs
mov
dec
js
or
add
xchg
sti
inc
subl
ficoms
sbb
cmp
lahf
in
bound
outsb
fucomp
lea
cli
cmp
mov
ja
rcrb
mov
ret
sahf
jns
cmpsl
and
xchg
inc
scas
dec
jecxz
or
bound
js
lret
push
out
fnstenv
stos
ret
jbe
nop
sti
sarl
adc
dec
push
xchg
and
jb
push
jo
fs
jp
push
test
mov
cs
daa
jg
mov
int
gs
sbb
push
sub
mov
push
mov
lret
xchg
dec
in
hlt
xchg
testl
add
jnp
and
push
imull
adc
stc
pop
jae,pn
jle
lods
flds
jmp
scas
shll
cmp
int3
add
aas
xchg
push
dec
cld
outsl
pop
mov
mov
add
or
sbb
cmp
push
iret
mov
rol
mov
ret
aas
push
test
jmp
and
lret
dec
scas
mov
push
dec
inc
mov
outsb
daa
mov
test
roll
jo
adc
or
mov
cmp
mov
fstps
pop
add
cmp
shrl
sub
stc
xchg
insl
cmp
lahf
dec
xchg
mov
into
sub
popa
xchg
mov
popf
jmp
push
dec
test
test
scas
jnp
cld
ljmp
xchg
mov
and
mov
inc
add
mov
push
sbb
xchg
mov
std
add
sbb
cmp
sbb
mov
adc
lods
sbb
jae
jns
loopne
aad
nop
shll
dec
adc
jl
test
sahf
das
fldl
sub
and
jne
jecxz
fildll
pop
inc
pushf
mov
loop
into
inc
ret
and
adc
and
fwait
dec
add
sbb
stc
pop
sbb
loop
andb
mov
pusha
test
jo
xor
add
cmpsb
sbb
mov
push
adc
pop
shlb
cltd
std
movsl
out
xchg
das
mov
pop
enter
sub
les
push
adc
ficoml
test
xor
pop
in
cmp
out
jnp
xlat
shl
mov
xchg
cmp
sbb
push
push
mov
lcall
lcall
ja
mov
insl
aam
jecxz
fistps
mov
mov
inc
addr16
into
push
push
inc
push
cmp
xchg
jns
and
stos
xchg
je
jg
push
js
shll
add
pop
sbb
cli
add
dec
mov
sub
outsl
mov
pop
xchg
or
push
loop
jg
dec
scas
imul
adc
or
xor
sar
jns
fldt
lcall
je
push
sti
or
adc
ret
xchg
xor
leave
cs
hlt
push
lcall
stos
js
jecxz
aas
mov
test
out
je
das
jno
mov
ds
jl
ja
add
mov
inc
and
mov
dec
into
jne
cmp
sbb
hlt
mov
call
pop
jp
jp
cli
sahf
jmp
nop
add
pop
inc
loopne
inc
out
jo
and
mov
cmc
cld
repz
pop
andb
mov
mov
xchg
and
xor
jne
sbb
adc
inc
imul
pop
xor
das
gs
adc
mov
fisttps
cmc
pop
js
and
push
out
int
shrb
ret
mov
out
push
inc
cmp
xchg
lret
lahf
mov
les
cmp
out
xchg
adc
pushf
jae
lods
lds
inc
jg
fisttps
movups
cmp
sbb
mov
xchg
mov
sbb
add
adc
clc
jle
scas
and
iret
mov
push
call
mov
push
push
addr16
sbb
sbbb
ds
adc
sub
dec
mov
movsl
adc
mov
xor
iret
jmp
cmp
popa
cs
lock
jp
inc
aas
dec
addr16
loope
repz
jecxz
pop
xor
cmp
jl
in
inc
in
mov
out
aaa
and
cmp
pop
outsb
ja
and
pop
xor
cltd
mov
sbb
mov
jecxz
ret
dec
push
out
shl
xor
and
lret
fwait
adc
orl
pop
iret
inc
outsb
lret
cmp
mov
mov
mov
repz
sub
mov
cmpsb
in
pop
cmp
xchg
imulb
daa
stos
cltd
push
hlt
cmp
lods
add
inc
cmp
push
ret
lds
out
aaa
mov
push
pop
cmp
inc
ja
ljmp
dec
sub
jne
test
popa
push
loope
fnstsw
mov
pop
je
and
mov
ss
push
sub
inc
jo
mov
xchg
cld
sub
cld
in
and
push
ljmp
jb
sbb
inc
adc
iret
lock
std
mov
adcb
test
cmp
bound
jae
mov
out
inc
ljmp
rorl
sbb
rcr
push
cld
mov
add
jg
subl
sub
lods
sbb
inc
mov
gs
loopne
and
ds
cmpsl
stos
xchg
xor
adc
or
cmp
mov
mov
pusha
call
pop
mov
imull
mov
cli
inc
jae
scas
faddl
ffreep
lcall
gs
xor
iret
fcmovu
mov
xchg
pop
jecxz
jne
rcrb
pusha
cmpsl
outsl
pop
mov
pushf
push
jnp
inc
xchg
jnp
sti
mov
movsl
cld
enter
sub
paddsb
hlt
pop
lret
pusha
je
aam
mov
aad
mov
or
call
shr
jg
sbb
jl
or
mov
sub
mov
xchg
sbb
stos
cmpsb
ss
mov
jbe
into
pushf
jb
dec
xchg
cmp
cmp
in
out
inc
loope
inc
xchg
xor
or
push
ds
mov
cmp
test
adc
mov
cmp
sti
aam
cmpsl
adc
jno
mov
aad
imulb
fcmovu
fisttpl
push
inc
mov
addr16
shlb
int3
mov
fwait
push
insl
xchg
xor
out
push
sbb
xchg
dec
in
mov
enter
sbb
clc
cmp
adc
dec
pop
stos
inc
out
or
je
sub
ss
inc
push
and
je
loope
and
gs
aaa
lods
jecxz
test
jbe
adc
popa
jl
sbb
out
pop
roll
jae
sbb
pop
in
aas
out
es
addr16
rcr
cli
xchg
sub
fst
mov
lahf
add
pop
mov
xchg
fistl
mov
jns
popf
rsm
sub
fld
rclb
pop
es
rolb
push
and
add
mov
lock
jle
mov
mov
icebp
insb
aam
sub
pop
add
xchg
inc
std
or
aas
lock
out
in
mov
dec
repnz
gs
adc
jle
les
cltd
fldenv
jo
cmp
sahf
cs
push
xchg
lods
dec
lds
adc
gs
cmpsl
adc
add
shrl
sub
test
mov
imul
sub
xchg
out
idivl
or
mov
cmpsl
cmc
lcall
cmp
inc
jp
nop
popf
or
pop
push
push
jns
inc
mov
xor
mov
mov
ds
xchg
sbb
test
divl
push
int
xchg
mov
adc
ds
or
sbb
adc
mov
pop
movb
adc
mov
mov
mov
fstps
jecxz
shlb
inc
js
add
cmp
addb
sub
fcoms
repnz
data16
jnp
ret
sub
ret
lahf
push
in
sbb
and
jmp
adc
or
cmp
sub
xchg
mov
xor
stos
mov
adc
or
or
out
cld
add
jbe
mov
lahf
jg
aas
add
pop
lret
sar
ror
andb
inc
ficomps
xchg
mov
leave
inc
loopne
fiaddl
fabs
rol
mov
mov
pop
aaa
es
jae
sbb
jae
push
out
or
popa
sbb
push
xor
outsl
ret
scas
jge
xor
xor
or
sti
divb
xchg
inc
popa
jns
ss
mov
repnz
minps
add
sub
or
and
inc
imul
shrb
outsb
dec
sbb
mov
movsl
pop
add
xlat
icebp
mov
push
loopne
movsl
inc
das
jg
xor
or
push
inc
rcrl
cmp
mov
gs
dec
push
xor
xchg
icebp
mov
shr
hlt
jle
cmp
xchg
scas
fdiv
pop
push
bound
push
mov
jne
inc
push
in
aas
cmpsb
arpl
sbb
mov
ss
pop
mov
sub
lods
cmc
ljmp
pusha
sti
or
add
stos
aas
push
inc
xchg
in
mov
hlt
sbb
rcrb
sbb
pop
sbb
aam
mov
imul
jmp
inc
addl
fldcw
xchg
inc
jae
int3
mov
scas
xor
push
mov
shll
xlat
jl
dec
shrl
out
jb
jle
fdivrl
adc
xchg
negb
call
das
inc
ljmp
dec
insb
vcmpss
pusha
in
orb
push
mov
nop
mov
cs
aam
xchg
pop
loop
inc
notl
or
movsb
int3
mov
jle
add
add
imulb
bnd
mov
cmp
leave
in
lds
mov
sbb
rcll
sub
fwait
cmp
enter
roll
popa
adc
add
daa
daa
ffree
rcll
cmp
imul
daa
pop
push
icebp
fcoml
call
mov
jle
sub
fidivs
sbbl
lds
loop
push
aas
popa
push
jecxz
pop
cmp
movsb
xchg
dec
or
sub
and
dec
pmaxsw
pop
mov
push
pop
adc
sbb
clc
dec
je
pop
sub
arpl
cmp
lock
