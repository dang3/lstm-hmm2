xor
data16
cmp
cli
ss
add
test
mov
dec
call
xchg
push
mov
push
lods
dec
sub
inc
jno
fistps
xchg
jb
ret
sub
stos
imul
pop
int
lcall
movsb
adc
aaa
les
dec
daa
aaa
xor
jmp
mov
xchg
jns
out
cld
add
decb
inc
fbld
xchg
sbb
sbb
jno
mov
jbe
enter
adc
lahf
or
movsb
cltd
rol
ret
and
sub
cmc
jno
push
adc
dec
call
mov
jns
iret
arpl
add
mov
bound
test
or
dec
pop
push
enter
xchg
hlt
pop
sbb
push
sub
subb
sahf
mov
cltd
ljmp
cmp
sub
subl
clc
inc
mov
mov
push
or
mov
sbb
cmp
push
push
rorb
jnp
out
sti
jne
in
adc
lahf
jl
cmp
inc
shlb
xchg
jl
enter
mov
push
repz
daa
lret
ds
adc
add
pop
lahf
leave
fwait
cmpsl
loopne
adc
push
dec
add
mov
mov
out
and
call
int
daa
lret
cs
lea
aam
cli
notb
and
dec
push
add
inc
inc
xor
andl
jo
shll
popf
mov
jecxz
and
or
ljmp
jp
not
stc
pusha
jmp
adc
push
adc
insb
fimuls
mov
mov
icebp
pop
lcall
add
mov
and
cs
or
push
pop
rorl
fldenv
sub
pusha
xchg
sbb
repnz
hlt
fdiv
jecxz
or
cmp
in
subb
ret
fdivrs
xchg
mov
test
or
xchg
outsl
pusha
mov
pop
fidivrs
stos
mov
call
jle
mov
and
jg
fs
jae
lea
mov
movzbw
test
mov
ror
sub
bt
sub
mov
bt
call
push
stos
movb
pusha
pusha
lea
jmp
mov
pushf
lea
jmp
mov
push
call
push
mov
call
mov
pushl
lea
ja
dec
sub
cmc
add
add
mov
call
call
xchg
clc
insb
test
or
mov
jge
fwait
sub
imul
jg
call
sbb
cmpsb
mov
in
push
jge
pop
or
mov
ret
neg
add
mov
jp
ret
push
stos
add
pusha
mov
and
jg
aaa
pop
movsb
pusha
scas
test
fists
and
arpl
xchg
test
sarl
aaa
imul
ja
mov
fs
idivb
out
pop
cmc
movsb
enter
inc
iret
outsl
std
mov
shrl
xchg
and
lea
adc
rorl
aam
xchg
push
loop
mov
loope
mov
popf
xchg
add
xor
fs
jl
mov
stc
test
fs
mov
cmp
bound
jno
pop
adc
fiadds
or
and
sbb
pop
icebp
and
loopne
test
je
rclb
push
mov
gs
movsb
int
enter
and
mov
dec
adc
add
cmp
pop
mov
int
hlt
adc
cmp
lret
insb
inc
xor
scas
dec
add
stos
inc
icebp
es
icebp
and
out
push
imul
push
add
icebp
subl
hlt
xchg
mov
jl
sbb
insb
jp
mov
adc
and
mov
and
push
cmp
push
or
adc
aaa
sub
ja
sbb
push
movl
jmp
pusha
lea
jne
lea
rcr
lea
sub
xor
shl
btc
mov
adc
add
sbb
shl
not
mov
jmp
lods
stc
test
cmc
push
not
stc
push
sub
cmc
jmp
pushf
stc
pushl
popl
stc
stc
cmp
pusha
pushl
lea
ja
rcr
cmc
sub
lea
sbb
add
shld
add
sbb
sub
or
call
repz
pop
xor
add
jb
push
out
lock
out
addb
add
adc
jo
pop
cmpsb
addl
push
jp
pop
pop
mov
add
inc
dec
pop
mov
pop
pusha
add
xlat
pop
and
push
addw
jb
stos
push
adc
jns
into
outsb
inc
adc
imul
into
add
add
pop
push
into
addl
movsl
insb
nop
pop
push
into
addl
sub
pop
pop
xor
add
test
pop
xor
mov
add
xchg
add
push
push
mov
out
and
addl
popf
adc
pop
pop
mov
into
pop
push
enter
pop
push
push
nop
add
or
cmpb
push
push
addb
inc
leave
xor
jbe
add
xchg
ret
xchg
mov
add
xchg
add
pop
jle
add
ds
xor
out
aas
pop
pop
push
mov
into
cmp
xchg
sub
pop
push
sahf
push
add
shll
inc
mov
inc
pop
pop
jbe
add
push
call
pop
pop
push
xchg
add
mov
push
into
addl
mov
push
pop
add
xchg
fmuls
dec
aam
pop
pop
dec
mov
into
xchg
cwtl
stc
mov
lea
into
jns
xchg
adc
rcrb
pusha
add
fs
sub
lcall
dec
xchg
into
ljmp
pop
ds
add
mov
adc
add
into
ret
cmp
addl
aaa
mov
mov
into
imul
pop
outsb
xchg
add
mov
inc
psubq
pop
pop
decb
out
push
push
pop
dec
sahf
xchg
into
fwait
sub
cwtl
fs
pop
dec
inc
xor
into
fistl
push
jnp
loopne
pop
fsubrp
add
mov
rcrb
stc
add
mov
pop
xor
jg
into
ljmp
push
out
xchg
add
stos
sbb
lret
pop
xor
mov
cmp
call
dec
inc
mov
pop
das
loope
inc
push
arpl
aaa
in
out
daa
sarl
cmc
jg
es
out
mov
or
adc
idivl
jb
sbb
ret
jge
out
fdivrs
mov
cwtl
xchg
mov
clc
out
es
add
sub
and
xor
sbbb
mov
add
ja
sub
push
movzwl
test
bsf
mov
push
add
bt
mov
stc
test
jmp
call
push
adc
lahf
sbb
jno
stc
sahf
add
cwtl
pushf
pop
adc
cmp
add
lods
popf
gs
iret
out
jg
data16
mov
mov
adc
adc
lea
jb
cmc
stc
cmpb
call
add
xor
add
add
inc
add
add
add
mov
add
add
add
frstor
add
jle
add
js
add
cmpsl
dec
add
lods
aas
add
xor
add
add
dec
iret
add
aam
outsl
test
mov
inc
mov
sti
scas
sub
faddl
mov
push
xor
mov
xor
aaa
sbb
push
mov
aas
lods
fisubrl
in
sub
mov
adc
xchg
lret
stos
jb
or
out
lods
mov
int3
mov
cwtl
xlat
mov
add
cmp
mov
or
lock
jne
imul
scas
shr
push
sbb
xor
cmpb
and
jecxz
fs
je
pushf
pusha
pusha
mov
lea
jmp
push
mov
lea
call
pusha
cmp
cmp
sub
pushf
mov
pushl
jmp
lea
ja
pushf
movb
call
pushf
movw
adc
call
jns
push
jo
ds
xor
icebp
push
sbb
adc
pop
mov
mov
jo
scas
test
out
xchg
stos
push
mov
js
add
leave
lock
fidivl
and
icebp
pop
cmp
cli
adc
push
push
js
fstps
in
add
out
testl
adc
pop
fdivl
rclb
dec
call
and
int
stos
cli
mov
cmc
lock
add
subb
out
call
or
sbb
imulb
xor
orl
xor
popf
xchg
js
cli
arpl
and
andb
mov
rolb
inc
xor
ss
pop
add
xchg
add
ret
in
popa
add
shrb
mov
adc
aaa
loope
pop
mov
xlat
and
fstpl
int
cmp
dec
sti
xchg
popa
sbb
ja
out
xchg
jns
mov
bound
xor
and
shr
jns
out
dec
add
mov
neg
notb
loope
xchg
inc
es
ljmp
jecxz
clc
mov
subb
add
fwait
push
pop
sbb
fucomp
insl
mov
jns
inc
and
sub
fnstcw
and
sbb
mov
or
add
and
das
xchg
ljmp
lcall
cmp
imul
inc
pop
fadd
sub
in
daa
adc
decb
lret
add
add
xchg
inc
sub
stos
dec
sahf
lods
xchg
adc
jns
ret
loop
or
mov
andl
inc
mov
xchg
and
fnstsw
ret
mov
fwait
mov
insl
and
jb
dec
push
add
sbb
add
jle
push
loope
sub
dec
add
enter
pusha
int3
mov
jg
push
add
sbb
push
adc
int
fcompl
add
add
lahf
mov
mov
dec
adc
mov
lock
and
popf
clc
cmc
out
sbb
and
adc
add
jmp
add
sbb
and
scas
jmp
xor
push
fdivs
push
ret
loop
mov
stos
dec
roll
jbe
mov
mov
or
sub
fldl
push
jns
shrl
xlat
mov
jnp
dec
arpl
daa
insb
push
loope
xchg
pop
clc
xchg
ret
pop
popf
adc
jns
push
cmp
push
adc
shll
mov
add
pop
jecxz
sbb
fs
fwait
adc
mov
xor
and
adc
add
adcl
imul
and
and
xchg
nop
call
add
cmp
movl
or
std
rcrb
or
nop
loopne
and
xchg
add
mov
lcall
nop
sub
mov
ja
mov
shlb
xor
pusha
nop
cvttps2pi
and
shl
rclb
mov
pop
int3
and
aam
out
dec
and
lcall
adc
stos
jae
sti
repz
xor
ret
adc
js
aad
sub
jecxz
sbb
dec
add
add
adc
sub
inc
xchg
jb
dec
loope
adc
jp
hlt
jmp
inc
add
dec
hlt
or
mov
repnz
bnd
jae
imull
xchg
popa
sbb
pop
daa
pop
scas
fidivs
in
push
mov
pusha
sub
adc
add
sbb
fdivrp
adc
add
inc
xor
adc
lahf
es
mov
jmp
loop
sbb
idivb
outsb
xchg
and
sbb
add
in
lret
lret
inc
or
jmp
movsb
cmpsl
jns
das
pop
sub
push
or
jae
shl
push
xchg
fsts
jnp
icebp
add
sub
movsb
mov
sbb
xor
js
icebp
xchg
popa
xor
mov
inc
pushf
dec
add
out
xchg
cmp
inc
les
lock
je
out
addl
cmpsl
test
xor
icebp
int
jo
repz
pop
fidivl
repnz
xor
je
lret
clc
jae
in
lea
lahf
mov
lret
cmp
sbb
out
in
add
call
inc
or
jmp
or
mov
loope
icebp
test
stc
cwtl
add
mov
data16
pop
sbb
jmp
cmpsl
xchg
into
xor
and
pop
fdiv
iret
dec
inc
cmp
mov
ja
loop
inc
out
bound
mov
aad
lahf
loop
gs
clc
stos
lcall
insl
js
sbb
sub
mov
mov
movsl
sbb
mov
test
out
xor
adc
sti
sub
sub
in
pusha
sbb
out
rcll
call
push
add
xchg
scas
rcr
pop
mov
and
mov
add
fadds
je
or
movntq
cmpsl
or
or
add
jecxz
lock
jle
pop
in
addr16
jg
fxch
push
loop
js
push
sub
pop
cmc
cmp
xor
ds
popa
sub
mov
cmp
mulb
mov
rcl
add
loopne
ret
push
add
sub
jl
xchg
xchg
pop
add
jo
shrb
pusha
and
vpsubusb
in
int
popa
lret
call
mov
sub
push
bound
stc
fildl
std
and
jae
mov
pop
test
daa
test
push
xor
jmp
dec
and
orl
adcl
push
lea
jl
rorb
hlt
ja
and
jo
mov
js
call
adc
xchg
imul
and
sub
testb
cmp
push
pusha
or
subb
sub
movsb
adc
xchg
clc
inc
sbb
cmp
je
jb
jae
incl
add
pop
scas
sbb
mov
lock
push
in
out
sub
sti
int3
xor
inc
adcl
jecxz
xor
jnp
shrl
jge
clc
inc
repnz
xor
add
in
loopne
subl
pop
imul
xor
and
and
add
insb
lret
push
repnz
loopne
loop
pop
test
mov
cmc
add
hlt
push
aas
jmp
jo
out
add
aad
fstp
inc
outsl
lret
push
repz
pop
js
sbb
jmp
rclb
pop
mov
int3
mov
out
adc
les
push
or
adcl
outsb
loop
push
mov
subl
and
inc
je
xlat
addr16
sahf
incb
push
mov
out
ret
or
loop
jnp
adc
or
movsb
in
dec
fistpl
sbb
loop
popa
stos
imul
addb
add
dec
push
lret
or
push
jae
jo
sub
cmp
push
sbb
popa
das
lock
out
mov
cld
out
sub
xchg
and
subl
mov
stc
dec
mov
cmp
andl
daa
mov
push
xor
or
and
mov
out
ja
sub
pop
lcall
std
insb
cli
call
fdivp
xchg
and
mov
popa
std
add
add
cld
into
or
inc
xchg
and
sub
adc
adc
inc
sbb
push
repz
xchg
add
mov
sbbl
sub
mov
test
je
bound
fldl2e
adc
jnp
mov
hlt
add
add
add
dec
inc
std
and
pushf
loop
add
outsb
lock
pop
jb
out
push
adc
sbb
nop
repnz
cld
inc
push
stc
mov
sbb
inc
cmp
dec
push
inc
cmc
stc
call
and
testb
add
xor
and
push
fnstenv
inc
dec
inc
movsb
bound
and
adc
in
mov
adc
cmp
add
mull
inc
pop
dec
hlt
push
js
pusha
adc
jmp
dec
and
clc
xchg
shl
popa
push
push
xchg
loop
push
icebp
addl
and
add
loope
and
xchg
push
xchg
add
cltd
or
adc
mov
add
shr
pop
sub
and
xor
rcr
push
jb
and
xor
and
add
icebp
hlt
and
adc
mov
into
mov
rolb
loope
xor
add
jne
add
cmp
stc
nop
and
mov
gs
bound
lock
andl
hlt
add
pop
sbb
aam
popa
and
shll
jo
sti
push
gs
inc
inc
cmp
adc
sub
stos
inc
lock
push
push
rorl
mov
icebp
push
jo
push
aaa
inc
and
sub
jmp
and
push
icebp
add
inc
icebp
addl
arpl
push
mov
jecxz
jle
mov
push
add
icebp
icebp
in
and
stc
xor
xchg
push
rol
arpl
daa
loop
push
aam
roll
cmp
and
aam
add
add
xchg
cmp
in
xchg
lret
sbbl
out
mov
call
xor
negb
cmp
mov
es
sbb
mov
stc
in
loop
repnz
push
arpl
stc
sarl
divb
outsb
and
cmp
scas
jb
out
or
loope
cmc
push
fmuls
lock
sti
push
pop
pushf
add
xchg
mov
pop
nop
andb
lods
xorl
push
push
push
xor
repz
pop
cmp
push
adc
orl
mov
aam
jns
divl
mov
pop
adc
rorb
out
xchg
aaa
popa
push
fistpl
lret
pusha
push
ds
xchg
pop
adc
std
mov
adc
pop
fisubrl
adc
pop
push
xchg
ret
call
cmpsb
add
out
aad
mov
mov
and
xlat
gs
and
xor
ds
jmp
or
xchg
out
aad
xchg
jae
cmpsl
sub
insl
popa
cmp
xchg
pop
addl
push
push
test
add
add
sub
stos
and
ret
sub
ss
adc
jo
fs
jns
lods
xchg
adcb
push
clc
add
add
jae
sub
bswap
lock
and
push
pop
mov
xchg
rolb
clc
rolb
inc
xorl
mov
and
mov
testb
adc
fildl
test
ret
addr16
pop
push
push
movsb
push
popa
adc
or
stc
clc
inc
sub
cmp
push
shlb
mov
lock
xchg
jno
xchg
pop
pop
pop
and
xor
repnz
xchg
dec
je
adcl
andl
push
mov
add
mov
in
lahf
rclb
xchg
push
jns
popa
add
pop
pusha
dec
or
sbb
adc
jo
sbb
jae
push
nop
repz
xchg
jo
outsl
shr
mov
pop
mov
mov
xchg
mov
sarb
mov
sub
mov
lds
sub
inc
gs
ljmp
sub
je
inc
mov
insb
ret
push
movsb
dec
push
imul
sbb
pop
fwait
adcl
and
iret
in
lods
jns
jp
jbe
jb
xchg
sbb
cmp
adc
scas
scas
cmp
aad
pop
and
mov
fninit
bound
lret
inc
sub
and
sbb
mov
mov
mov
ljmp
xor
ss
mov
mov
sub
sub
mov
inc
push
inc
cmp
rclb
icebp
sarb
mov
jo
ds
aas
mov
push
and
and
mov
or
aad
xor
jmp
xchg
in
xor
sbb
mov
in
mov
and
bound
add
sub
jno
jmp
mov
mov
sbb
in
and
or
orl
pushf
push
xor
sysexit
add
testl
fmul
push
daa
add
dec
mov
push
adc
cwtl
ror
and
xchg
mov
adc
push
shlb
pop
imulb
add
xor
xor
arpl
mov
add
bswap
fstl
mov
mov
xor
or
stos
xorl
test
adc
mov
dec
sub
and
nop
adc
mov
adc
inc
hlt
mov
add
mov
xchg
fwait
int
ljmp
idivb
test
leave
repz
flds
test
jmp
movsl
sbb
addr16
xor
aas
loopne
ljmp
jecxz
push
es
pop
push
jecxz
orl
fmuls
daa
and
jecxz
cmpl
mov
loope
inc
inc
je
sbb
out
inc
loop
sahf
ds
in
sub
mov
js
cmpsl
mov
repnz
mov
pop
add
cmp
ds
out
sub
mov
jb
mov
add
call
jnp
pusha
popa
push
pop
nop
pushf
xchg
orl
fdivrs
jo
sub
sub
ja
rcll
pop
shrb
loopne
je
and
sbb
rolb
jns
cmp
mov
inc
loop
adcl
xor
or
pop
int3
cmp
push
inc
out
outsb
orl
sbbb
sti
mov
rcrb
loope
xor
xchg
jle
lods
jb
call
dec
mov
loop
inc
lret
ljmp
insl
daa
test
pop
push
in
testb
icebp
push
sub
hlt
aas
jne
push
loop
call
mov
and
push
lock
sbb
andl
sbb
lock
test
xchg
leave
or
in
aas
aaa
add
shll
mul
mulb
sub
dec
add
sbb
jecxz
movsl
jp
xlat
in
sub
push
or
jmp
insb
repnz
icebp
adc
and
pop
out
xchg
dec
fmull
out
jb
popa
out
xchg
out
push
dec
pop
or
jge
shl
jb,pn
adc
inc
sbb
out
andb
inc
adc
ja
inc
inc
mov
push
add
mov
pop
push
in
pushf
ret
mov
nop
pusha
inc
mov
add
clc
mov
fistl
push
das
mov
bnd
sbb
xor
sarl
jbe
add
clc
mov
and
pop
sub
cmp
fnstenv
inc
cmpsb
xchg
dec
scas
push
loopne
or
add
jns
mov
and
jmp
inc
push
sub
mov
push
xor
pusha
lret
mov
movsb
and
loopne
push
imul
loop
xor
push
sbb
cmp
out
xchg
xchg
or
xor
mov
pop
js
lea
lods
push
loop
cld
ret
mov
add
rclb
xchg
clc
into
in
and
sar
jge
les
xchg
sub
add
xor
xchg
xchg
add
mov
inc
sub
cwtl
push
sbb
and
xor
fwait
ss
mov
pusha
push
mov
gs
mov
aam
add
lcall
test
add
popf
dec
popl
pusha
jge
and
out
cld
imul
ret
xchg
icebp
in
insb
push
bound
and
add
lahf
out
orl
test
adc
sub
xchg
add
or
add
outsl
imul
addr16
xchg
lock
mov
mov
mov
sbb
and
and
xchg
in
test
loope
mov
ds
add
push
mov
pop
ret
test
mov
push
sbb
lock
add
mov
adc
add
rcl
inc
daa
mov
xchg
out
add
fwait
in
mov
xchg
cltd
push
mov
scas
pop
popa
dec
push
imul
push
loop
fildl
out
subb
orb
add
fs
xchg
push
sub
xor
or
cmp
cwtl
lock
cmpsl
jmp
push
loop
addl
push
fwait
lcall
lahf
push
in
and
pushf
cltd
jne
ljmp
mov
sub
and
add
outsl
adc
add
sub
cmp
adc
addb
lock
pusha
ss
sti
daa
ss
gs
jnp
cmp
inc
jecxz
jecxz
loop
pop
je
test
inc
inc
adc
pushf
lds
adc
movl
dec
xor
das
ret
and
or
xor
sub
mov
push
mov
jp
mov
jnp
xchg
or
lahf
fdivs
cltd
jno
add
and
cmp
daa
or
sub
and
and
outsb
movaps
out
incl
or
push
sub
test
cmp
pop
cmpsb
and
sub
addr16
add
call
call
push
rol
outsl
clc
push
mov
loopne
jb
cmp
aaa
jl
mov
fwait
dec
test
or
arpl
sti
sub
add
cli
hlt
cmpsb
inc
xchg
loop
in
addl
pushf
cmp
repnz
and
jecxz
hlt
jl
in
outsb
cmpsl
push
sbb
mov
test
push
adc
pop
in
or
adc
jmp
xchg
dec
in
fldl
push
outsl
or
loop
xor
jae
roll
sub
fwait
es
stos
shll
fwait
jae
pop
pop
mov
and
cs
aaa
xchg
in
adcb
push
add
or
aaa
loopne
push
nop
or
hlt
arpl
jl
rorb
and
dec
and
fst
aaa
push
fnsave
rclb
sub
out
xchg
orl
inc
mov
jecxz
xorl
repz
push
mov
dec
mov
add
add
jmp
jae
and
mov
jl
push
xchg
ret
or
cmp
xor
in
movsl
cmp
mov
outsb
cmpsl
popf
sarl
dec
jl
and
add
cmpsl
lea
sub
sub
add
jo
pusha
hlt
jno
popf
cmp
inc
jl
imul
adc
fildl
add
cld
and
orb
xchg
mov
es
sub
mov
nop
xchg
rcll
test
inc
xor
mov
add
add
lods
or
insl
adc
incl
dec
or
jb
mov
addb
cmp
mov
pushf
adc
divl
cld
mov
push
add
mov
loop
adc
mov
pop
inc
push
push
jno
icebp
enter
jb
and
push
and
insb
scas
daa
add
subl
jns
leave
loope
pop
ja
pop
jecxz
jecxz
in
sub
les
out
xchg
lock
lcall
orb
inc
out
sub
arpl
or
fisubl
ret
iret
test
sti
jmp
adc
push
and
pushf
aaa
inc
or
sbb
or
cmc
mov
xor
jmp
pop
popa
push
sub
clc
subl
mov
add
jne
fs
pop
sbbl
jge
in
js
lahf
addr16
jb
pusha
scas
mov
je
push
pusha
mov
and
leave
lods
leave
and
ret
push
xor
jb
test
push
insb
nop
push
aas
ljmp
fs
loopne
mov
add
test
repnz
jnp
mov
je
popa
lea
xchg
xorl
cld
pop
inc
push
popf
shrb
sbb
testl
or
xor
mov
sub
outsb
push
cmp
add
mov
or
mov
inc
or
lock
mov
ljmp
push
xor
fistpl
inc
jno
jmp
or
scas
sti
clc
adc
dec
loop
xchg
in
jbe
mov
sub
sub
stos
test
in
pop
or
xchg
lds
xor
adcb
stc
dec
and
and
loope
push
inc
dec
mov
push
jae
and
xlat
stos
scas
in
add
push
cmp
add
xchg
or
and
xor
jno
cwtl
cld
xchg
incb
xchg
or
pop
mov
cli
call
arpl
loope
inc
negl
sbbb
xorl
mov
cmpsl
cmp
test
xlat
inc
and
cmp
dec
mov
repnz
fs
adc
lods
jp
mov
pop
jecxz
fstpt
pop
sti
mov
data16
dec
repnz
xchg
out
inc
push
push
jae
cld
xor
push
mov
imul
jle
mov
inc
lock
jg
cmp
or
dec
xchg
das
or
and
fists
or
mov
jns
es
cmp
mov
jg
dec
decb
in
push
mov
loope
insl
sbbl
out
jns
pushf
aas
pusha
adc
cmp
cmp
sub
out
push
pop
arpl
ds
push
test
das
sub
fbld
mov
push
ja
xchg
inc
xchg
xor
push
lret
xchg
cmp
fidivl
icebp
push
enter
je
rorb
xor
popa
add
mov
add
xchg
adcb
mov
fistl
push
arpl
loope
dec
xor
rcrb
jmp
call
cmpl
pop
and
ljmp
clc
rcl
sub
sbb
push
notl
mov
subb
pop
je
sbb
es
push
dec
mov
out
adc
and
in
jl
mov
mov
sub
jae
loopne
cwtl
dec
dec
ljmp
sub
add
in
test
jmp
jno
pop
push
loopne
mov
fdivr
push
mov
loopne
jo
fistps
sub
or
out
cld
shlb
add
pop
loop
iret
xor
cmpsl
and
push
shl
fcoml
jge
addr16
out
loopne
aaa
dec
xlat
jo
popa
cwtl
pop
mov
add
adc
notb
lret
push
in
and
push
loope
adc
mull
das
test
mov
pop
jo
fwait
out
and
jg
loopne
sbb
cld
jb
out
clc
sahf
mov
loopne
fadds
xchg
sbb
testl
add
movsl
in
or
sbb
daa
sbb
out
loopne
and
mov
cmp
inc
sbb
jmp
jge
loop
cmp
xor
sub
push
xor
and
inc
mov
push
adc
in
and
cmp
or
in
rorl
lock
xchg
stos
stos
shl
cmpl
mov
mov
shrl
cli
out
mov
lds
add
lds
push
and
xchg
cmp
and
sub
arpl
jp
je
pop
sub
int3
pop
add
mov
cmpsb
dec
repz
pop
sti
jo
or
je
lods
pop
add
mov
pop
rolb
pusha
pop
sbb
insl
xchg
pop
push
push
sbb
push
jns
shlb
movsb
addr16
jmp
and
xchg
les
add
push
and
andl
xlat
add
jo
mov
lret
fs
scas
jp
dec
sbb
in
mov
sub
sub
sbb
leave
cmp
xor
push
out
inc
or
pop
mov
orl
popl
lret
or
and
add
pop
nop
inc
and
mov
push
and
xchg
clc
cmp
test
jmp
pop
pop
cmpsl
call
sub
mov
in
sub
pop
loope
xorl
gs
sub
cli
adc
and
hlt
or
mov
out
lods
orl
jb
stos
sbb
xor
jae
and
clc
cld
and
std
sub
movsb
mov
jmp
loope
add
or
cwtl
and
inc
sub
or
jge
sbb
lahf
rcll
es
ret
loopne
cmpsb
xor
jmp
lock
outsl
das
mov
push
loopne
jg
test
xchg
pop
fs
sbb
in
into
dec
jae
loopne
insl
scas
xchg
xor
outsb
loopne
aaa
cmpsb
test
shll
jns
nop
inc
cmp
cmc
ja
in
inc
push
add
jo
lds
adc
fistpll
scas
lock
fidivl
ljmp
sub
scas
sub
loopne
and
push
repnz
lock
cmpl
sbb
cmp
lock
test
jb
repnz
pop
inc
jmp
pop
mov
repz
outsb
popa
loopne
je
jle
cwtl
sub
jno
sub
jae
inc
lea
fs
xchg
in
rolb
fwait
jecxz
ljmp
push
mov
popa
test
add
jmp
sbb
xchg
dec
stos
inc
inc
mov
lock
xor
andl
and
jne
push
jmp
and
pop
lods
pop
loop
adc
dec
js
leave
loop
lahf
orl
fisttps
inc
out
push
pop
inc
icebp
push
sub
pop
inc
xchg
sbb
movsl
mov
bound
sub
nop
sbb
test
loope
ficomps
leavew
std
in
in
loope
subl
jo
icebp
cmp
call
adcb
out
repnz
mov
xor
inc
cwtl
fwait
ds
cmc
movsb
cmpsl
insl
shll
lock
cmpsb
pop
cwtl
cld
push
xchg
jecxz
xor
in
andl
popf
or
fbstp
add
and
testl
insl
add
stos
rorl
cmpl
adc
push
xor
dec
add
insb
adc
fisubs
rorb
fildll
mov
int3
sbb
or
loop
dec
test
inc
xchg
sbb
add
das
in
jmp
xorl
add
xchg
xadd
mov
cmp
roll
or
and
shld
sub
fnsave
sbb
xor
xchg
aaa
fisubrl
clc
xchg
jo
popa
test
dec
lock
cmpl
cmp
dec
xor
sahf
test
mov
pop
subl
aaa
scas
xor
cmp
cmpl
push
hlt
mov
lock
adc
xorl
dec
movsl
xor
popa
xor
in
dec
pop
addr16
push
hlt
xchg
xchg
stos
test
xchg
nop
and
lea
add
push
jno
movsb
jmp
jnp
sub
or
add
dec
mov
les
and
and
scas
sbb
lds
scas
loopne
push
lock
loopne
sub
jb
cmp
push
loope
ljmp
mov
pop
nop
dec
sub
mov
mov
scas
js
add
xor
inc
push
jno
mov
loope
repz
sub
lods
mov
out
lret
fbld
xchg
int3
lock
inc
sub
xchg
dec
sti
pushf
ret
xchg
or
bound
int3
pop
push
mov
pop
daa
push
mov
jmp
cmpl
mov
lods
add
add
in
rolb
mov
pop
xor
xchg
dec
xchg
inc
add
pushf
cmp
inc
lret
popa
add
and
mov
popf
mov
je
out
inc
ret
fcmovne
dec
icebp
inc
shl
cmpl
mov
jbe
enter
jbe
cmp
jae
repz
push
das
push
shr
loope
sbb
sbb
adcl
fisubl
sbb
or
add
fs
pop
xchg
xor
dec
mov
add
lods
and
inc
stos
push
sbb
popf
jle
sub
sti
cli
adc
ja
jnp
fnstsw
loope
mov
push
add
pusha
les
ret
imul
xor
and
aam
pushf
add
jge
in
loope
dec
ljmp
icebp
shr
cmp
pop
mov
mov
int
add
repnz
or
cmp
stos
out
div
sbb
jg
dec
loope
mov
sbb
loopne
mov
mov
cld
xlat
mov
cmc
mov
pop
mov
mov
mov
add
mov
test
out
push
pop
shll
mov
aaa
addr16
mov
inc
adc
push
adc
push
sub
mov
imul
or
adcl
ret
push
xor
pop
xor
jb
pusha
add
mov
mov
sub
cwtl
loop
inc
jbe
or
into
mov
bound
pop
call
stos
loop
sub
pop
cmp
mov
xchg
inc
add
out
dec
inc
sub
push
mov
or
loope
sahf
adc
shrb
testb
mov
and
or
cld
sub
scas
adc
push
push
push
in
stc
mov
add
inc
cwtl
pop
out
adc
popa
add
out
cmc
gs
sub
mov
inc
xchg
sbb
cmp
and
divb
push
test
imul
sar
out
push
dec
ret
or
fisubs
mov
test
filds
pushf
xchg
in
andl
add
sub
jae
aas
ss
mov
scas
cwtl
push
adc
inc
xchg
sahf
enter
adc
jg
in
inc
mov
xchg
mov
xchg
and
sahf
xor
pushf
pusha
addl
enter
adc
fidivrs
leave
jecxz
cmc
mov
repz
jno
add
jge
movsl
fs
rcl
out
inc
ja
add
add
pushf
loopne
dec
inc
jnp
loopne
xor
cmp
and
out
cwtl
dec
in
les
lock
cmp
arpl
cli
cld
mov
je
icebp
loopne
push
pop
addl
in
xor
or
xchg
push
pop
bound
inc
pop
andl
add
out
xchg
mov
test
adc
and
in
sub
shrb
ficompl
cmp
mov
or
add
and
or
inc
sbb
stos
sub
ret
inc
daa
ds
mov
adc
loopnew
movsb
or
sbb
and
int3
fsubrs
daa
xchg
je
jmp
out
mulb
lret
sbb
and
sub
sbb
arpl
jg
inc
inc
cmpsb
shl
ljmp
subl
jmp
cmp
push
and
xchg
mov
push
filds
pop
in
fldl
mov
out
xor
shlb
nop
and
sub
ss
jns
and
lods
dec
sub
cmpsb
int
fsubrl
scas
imul
leave
xor
sti
addl
fildl
scas
push
add
ljmp
xchg
adc
imul
sub
cs
hlt
or
call
popf
icebp
add
and
sbb
dec
jecxz
push
mov
xchg
add
imul
icebp
pusha
add
fnsave
dec
jno
push
mov
jno
loopne
loope
adc
lock
push
cwtl
cltd
out
cld
push
cmp
es
jecxz
lahf
push
loopne
aad
xchg
sbbl
xor
dec
adc
cwtl
loopne
aas
nop
xor
push
cmp
cmp
in
or
repz
mov
aaa
mov
cmp
out
insb
cmp
ss
test
xchg
sub
cmovb
push
pop
inc
loopne
push
loop
mov
nop
cmp
lret
stos
call
bound
mov
bsr
mov
ja
in
les
repz
dec
sub
mov
pop
xor
enter
les
es
sbb
popa
cmp
inc
cld
jbe
xor
xor
lcall
movsb
insl
shlb
adc
pop
mov
addl
mov
or
sub
add
cs
push
and
cmpsb
mov
sbb
leave
mov
or
sbb
dec
cmp
into
jl
adcl
lock
sub
fidivs
ljmp
add
andb
adc
icebp
sub
jecxz
pop
outsb
mov
mov
pop
pop
test
and
adc
insl
out
test
jno
and
mov
lock
sbbw
and
or
test
mov
xchg
pop
xchg
fists
and
xorl
xchg
fnstsw
xor
adc
jbe
movl
cld
lret
inc
fimull
int3
push
xchg
movsb
add
add
mov
mulb
dec
pop
add
or
addl
push
out
mov
dec
shll
cld
aad
jne
inc
pop
push
es
mov
in
orl
and
ljmp
lret
nop
push
gs
inc
sub
into
stos
jge
sub
mov
adc
in
aam
in
adc
sarb
clc
mov
fsubrs
xlat
subb
je
lock
xchg
xchg
int
mov
insl
inc
movsl
sbb
add
sub
in
sbb
xchg
xchg
shlb
sub
outsl
ret
test
jge
dec
push
ss
test
daa
add
mov
xor
out
and
and
or
adc
in
repz
push
fstpt
lods
loop
sub
xorb
xchg
adc
fsts
and
cmp
pop
sub
xchg
in
and
mov
jg
cltd
cmp
int
or
pop
jecxz
pop
adc
add
mov
popa
std
and
adc
test
add
or
xor
cmp
xor
push
mov
loopne
pop
sbb
in
icebp
test
add
jp
repz
pop
or
push
out
lock
stos
lock
sbb
data16
or
lock
pop
pop
sbbl
or
out
push
scas
ss
orl
call
lock
enter
lret
xchg
dec
mov
ret
mov
sbb
sbb
sbb
mov
sahf
test
nop
jne
xor
mov
jp
sbb
push
mov
sbb
add
pop
sub
pop
out
notl
add
pushf
inc
sub
shrl
xchg
cmpsl
adc
cmpsb
sub
mov
mov
negl
insl
mov
ja
pop
jo
sub
add
loope
jno
adc
push
popa
and
cli
adc
push
xchg
inc
cmpsl
and
mov
pusha
or
fists
outsl
mov
xor
xchg
mov
inc
and
push
jae
enter
fstps
cmpb
subl
adc
push
addl
aaa
adc
xor
cmp
mov
mov
add
inc
jmp
call
push
bound
cmpsb
xorl
and
imul
pop
dec
and
adc
stc
and
dec
xchg
lahf
xchg
dec
jo
test
or
les
cmpsl
cmc
pushf
icebp
ss
push
mov
xrelease
fadds
ret
aas
and
out
sahf
sbb
out
adc
aaa
inc
adc
mov
je
pop
dec
cld
inc
mov
js
add
adc
insb
jns
cmpsl
test
movsb
icebp
cmp
dec
arpl
xorl
std
orl
repz
push
mov
inc
mov
adc
mov
nopl
xorb
mov
fcoms
lahf
pushf
andl
lods
sub
loope
and
push
mov
add
sbb
cmc
int
aaa
sub
dec
out
lret
mov
sbb
nop
hlt
or
outsb
push
cmpsb
jno
push
shll
jo
mov
in
push
xor
nop
sbbl
xchg
jbe
dec
enter
and
jne
pusha
ljmp
mov
lea
inc
lret
jle
cmp
clts
and
test
sbb
inc
ficomps
cmp
mov
push
sub
and
fcmovb
clc
push
xor
dec
je
mov
hlt
loop
cmp
mov
loop
inc
and
mov
dec
orl
in
add
aas
xchg
lahf
cmp
push
add
call
mov
lret
xchg
push
popf
mov
ret
lock
in
dec
cmc
popf
xor
sub
and
or
sbb
xchg
fsubr
dec
jo
loope
xchg
mov
mov
andl
insl
in
push
inc
into
inc
add
cmpl
sbb
pusha
adc
lret
push
cli
adc
out
and
ret
push
pop
out
and
mov
push
dec
loop
bound
jmp
repnz
cmp
xchg
mov
dec
fldl
popf
imul
pop
and
call
hlt
pop
add
subb
cmp
xchg
xchg
jo
popa
rep
pushf
cmpsb
les
adcb
or
adc
scas
cmc
add
fcomps
xchg
mov
outsb
enter
daa
jne
adc
jo
repnz
push
push
jno
jl
rcl
push
sti
xor
fsubrs
or
out
sti
movswl
and
and
inc
add
cmp
sub
push
xorl
ret
dec
popa
aas
fidivl
pop
xchg
and
shr
sub
cmp
cwtl
jno
jae
insl
pop
test
push
mov
push
mov
dec
aaa
pusha
mov
lds
jecxz
adcl
imul
inc
roll
mov
jmp
add
adc
pop
sbb
stos
sbb
jge
push
bound
inc
inc
insb
or
icebp
push
adc
ss
bound
in
xchg
cmp
ja
jae
jl
fadd
cmp
adcb
cmpl
adc
pop
and
push
test
pop
andl
jmp
pop
xor
cmpsw
nop
andl
cmp
mov
sub
in
adc
sarl
xchg
jno
int3
cmp
sbb
stc
cmpsl
sbb
or
sbbl
mov
movsl
jne
mov
sub
push
shll
push
adc
cld
xchg
push
fmuls
mov
loopne
cli
push
xor
test
or
push
pop
into
or
sbb
and
loopne
or
adc
mov
jo
bound
and
pop
pusha
sbb
cmp
loope
orb
jge
dec
rorl
cld
sub
mov
pop
in
push
adc
adc
sbb
cmp
mov
jns
mov
loop
aam
imul
frstor
leave
std
movsl
xchg
sub
loop
das
mov
in
in
mov
pop
push
loope
xor
jl
nop
fwait
loope
outsl
jg
sub
mov
push
lock
lahf
dec
adc
cmpb
sub
mov
stos
pusha
jne
push
loope
nop
jle
cld
push
dec
xor
cwtl
movsb
inc
in
xchg
and
pop
movsl
xchg
xchg
fdivs
sbb
jbe
and
andb
pop
lods
push
clc
push
push
cltd
pop
dec
aad
pop
add
dec
cmp
gs
cs
and
inc
imulb
jmp
je
int3
adc
insl
sti
xlat
inc
xor
mov
pop
lahf
xchg
sahf
mov
fistpl
je
test
xor
push
jae
or
leave
xchg
or
cmp
sti
push
fdivs
fcoml
hlt
and
sti
jecxz
add
dec
inc
and
push
inc
sub
fisttpl
cli
mov
xor
ja
push
add
cmp
dec
call
sub
inc
sbb
jbe
sarl
or
leave
mov
xor
xchg
pop
rdpmc
loop
lods
cmpsl
rcll
mov
add
lock
xor
popa
ret
push
or
mov
movl
jg
jne
mov
rol
mov
enter
mov
xor
sub
ja
dec
out
jecxz
popf
nop
mov
mov
stc
aam
nop
call
push
xchg
push
into
adc
lock
addb
sub
push
call
push
cmp
or
add
and
je
clc
sbb
imull
or
xchg
fimuls
pushf
add
incl
add
or
cmp
push
in
push
aam
xor
xchg
mov
mov
mov
jb
gs
xor
inc
pushf
mov
imul
arpl
mov
dec
jle
jne
xor
inc
bound
jae
mov
aam
loopne
lcall
in
mov
sbb
arpl
popa
fwait
adc
push
add
push
xchg
add
adc
push
sub
cmp
pop
xchg
mov
fwait
push
fisubs
and
js
sbb
xchg
ds
or
and
jl
sub
adc
inc
adc
int3
popa
xchg
adc
xor
adc
push
cmp
xor
add
popf
sbb
mov
cmp
shll
in
sub
pop
xchg
cmpsl
sub
out
popa
pop
adcl
sub
push
insb
enter
lods
mov
imul
and
push
xchg
sbb
punpcklbw
or
mov
out
imul
push
pop
repz
cmpl
pusha
fs
mov
out
jl
loop
addl
adc
add
mov
cmp
pop
xchg
test
lret
fucom
fidivs
std
nop
xor
mov
inc
sub
xor
cli
adc
and
ret
push
sub
in
jle
mov
xor
arpl
dec
inc
test
subl
je
testl
test
call
psubsw
sub
mov
pusha
sbb
in
aam
add
fimull
xor
gs
lods
inc
push
hlt
xor
sub
lds
jae
mov
subl
enter
in
fcmovb
sbb
or
pop
scas
movsb
jecxz
push
push
push
mov
pop
repz
push
pop
psrlw
js
push
mov
jb
loope
loope
xor
or
pushf
mov
stos
cmp
shrl
mov
push
xor
pusha
add
mul
or
xchg
popa
imul
mov
jge
repz
jge
add
aas
or
pop
mov
or
adc
test
adc
int3
add
sbb
push
sub
shll
and
stos
add
pop
mov
cmc
lret
stos
mov
cmp
outsb
inc
and
push
imul
xchg
lahf
data16
dec
sar
mov
aas
ljmp
xchg
mov
outsl
cmp
mov
jnp
xor
add
xor
mov
inc
xlat
push
vpsrlq
mov
lcall
fmuls
cmp
lock
push
shlb
mov
pop
sbb
adc
xor
mov
cmp
loope
and
push
mov
and
hlt
aam
loop
inc
add
sbb
inc
push
je
fildl
cmc
repz
nop
and
sti
mov
push
mov
cmp
ljmp
push
sbbb
lcall
lock
pop
jge
out
or
stc
testl
imul
lret
lcall
or
xchg
sbb
and
arpl
ss
test
mov
rep
out
jl
lock
rcrb
sahf
loope
ror
out
out
call
or
pop
pusha
adc
out
dec
mov
cs
in
push
mov
adc
pushf
call
xchg
push
cltd
sub
imul
aas
in
jnp
xchg
nop
data16
add
iret
xchg
dec
aad
mov
cmpsb
movsl
loop
orl
sub
add
lock
dec
fildl
lods
cmpsl
add
lock
mov
fimull
cmp
jmp
sbb
cmp
push
xor
subl
test
push
negl
cltd
sub
shlb
adcl
test
js
and
or
jno,pn
bound
sub
lret
imul
out
xchg
fsubrs
rclb
sqrtps
mov
filds
and
push
test
xor
insl
je
mov
in
push
mov
insl
mov
stos
lock
lock
jmp
push
mov
pop
push
lcall
dec
dec
jno
call
or
add
outsl
cmpsl
lcall
and
stos
std
xor
arpl
or
push
mov
imul
cltd
and
mov
xchg
or
nop
sbb
movsb
sbb
fimull
insb
lea
and
fs
mov
call
andl
sub
orl
sub
stos
push
xchg
loope
imul
in
adc
test
lock
cmp
and
pop
rcl
into
test
sbb
loop
mov
mull
inc
loopne
xor
dec
mov
pop
aam
daa
sbb
in
arpl
fsubl
mov
sbb
pop
ljmp
cmp
add
push
push
std
leave
cmp
loop
xchg
and
xchg
aad
or
pop
les
pop
sbb
add
sub
cld
sbb
pop
call
sbb
loop
aaa
pop
adc
ljmp
sub
sbb
and
in
test
loope
push
mov
mov
and
mov
xor
add
in
loope
data16
or
pop
nop
mov
outsb
insl
orb
out
and
jo
cld
lods
pop
ficoml
test
dec
adc
inc
and
pusha
imul
call
pop
mov
test
pop
sbb
stc
cmpb
pop
inc
and
xchg
adc
jl
adc
test
mov
lods
lods
std
pop
iret
dec
and
xlat
addr16
adc
inc
lock
lods
inc
rcl
inc
lods
out
arpl
mov
jl
out
outsl
sbb
lods
xchg
jecxz
insl
scas
and
cmp
push
xchg
and
and
lret
lcall
sbb
xchg
push
leave
and
nop
loop
cwtl
xchg
jmp
arpl
adc
jne
mov
pop
adc
xor
lods
int
mov
sbb
dec
loope
popf
xchg
ljmp
and
sbb
cld
adc
mov
inc
loope
aam
dec
xchg
xor
test
mov
push
adc
loope
movsl
add
mov
pushf
inc
fsubl
jo
adc
sbb
or
hlt
jle
jns
push
sbb
xchg
dec
and
js
lock
xchg
adcb
and
inc
ret
mov
lcall
push
das
test
or
mov
mov
pop
push
adc
and
nop
mov
call
mov
mov
scas
xchg
pushf
inc
std
pop
mov
xor
adc
divb
leave
or
adc
subb
dec
test
mov
xor
ret
add
xor
pop
lods
orb
mov
mov
or
xchg
enter
and
test
add
sbb
ret
or
data16
add
ja
test
jb
push
add
mov
out
pop
mov
mov
adc
xchg
loope
inc
lods
fldt
inc
icebp
std
xchg
xor
test
push
lret
pop
jmp
std
nop
xor
test
call
adc
in
lea
jp
mov
shlb
sbb
adc
pop
ds
jne
or
jmp
jl
adc
xchg
imul
loop
test
iret
insb
add
fsubrs
inc
and
shl
push
inc
lcall
movsb
fwait
adc
loopne
subb
add
mov
adc
xor
jno
loop
jge
inc
test
sbb
push
and
nop
inc
adc
pop
xor
lods
call
ss
sub
push
and
inc
outsb
xor
jecxz
inc
jne
test
add
imul
add
and
lods
cmc
xchg
cmp
scas
jl
shl
lea
jno
sahf
insl
loopne
pushf
call
push
stc
shl
scas
test
sbb
dec
lret
jp
rcrl
call
in
test
xor
test
or
jl
push
jbe
pop
add
pop
or
int
adc
loope
in
jns
fs
test
add
mov
push
mov
loopne
jl
lret
mov
xorl
inc
loop
imul
sub
shrl
cmp
hlt
aas
or
sbb
sub
mov
sahf
push
or
sub
adc
and
inc
cld
sub
inc
push
ret
adc
lret
or
pop
mov
dec
push
loope
lcall
mov
lods
cmp
mov
bound
lret
and
push
call
and
xor
adc
or
xor
lods
adc
arpl
push
add
je
imul
int3
fcom
bound
mov
aam
or
adc
mov
enter
jnp
and
push
and
cmp
and
pop
xor
adc
push
jbe
ja
and
and
add
fidivl
shll
xor
sub
jle
jb
sar
call
repnz
xlat
js
cmp
mov
add
push
adc
in
outsl
jno
ret
mov
popa
test
movsb
repnz
out
arpl
cmp
cs
sub
aas
push
or
das
or
push
bound
outsl
mov
stos
xor
push
popf
movsl
sub
lods
add
arpl
sbb
lret
pop
gs
adc
mov
adc
push
pop
jbe
and
xor
andl
popa
xchg
and
inc
in
add
cmpsl
imul
stos
dec
add
nop
dec
or
adcb
hlt
adc
xor
and
sub
xor
call
test
aaa
jmp
lock
ret
sbb
in
jae
mov
adc
adcl
in
pop
mov
adc
push
push
nop
stc
inc
and
fisttpll
mov
xchg
adc
repnz
in
push
int3
loop
or
and
and
lock
jmp
pop
xchg
andb
pusha
imul
or
xor
mov
push
jo
jmp
xor
push
dec
jecxz
adc
push
mov
add
mov
es
mov
imul
mov
xor
rolb
xchg
inc
pusha
sbb
add
xchg
fwait
imul
or
sub
sub
xor
xor
jl
mov
popa
mov
popl
call
mov
mov
jae
xor
inc
out
adc
and
test
shll
repnz
pop
test
into
pop
jl
xchg
pop
inc
mov
jg
fldt
jecxz
xchg
mov
xchg
shlb
je
sub
sub
rorb
mov
test
aas
mov
hlt
pop
es
je
push
or
inc
mov
in
repnz
dec
xchg
cmp
jecxz
lods
jb
arpl
jno
bnd
xor
jecxz
test
pop
ljmp
aad
outsl
adc
mov
mov
ds
loop
nop
mov
add
dec
in
xchg
push
fnstenv
adc
test
xor
sub
adc
adc
lahf
ret
or
pop
rorb
inc
inc
aam
hlt
pop
aad
lcall
jae
lods
xlat
lds
jge
out
or
arpl
xchg
shrl
add
ds
popa
fsts
repnz
lahf
test
mov
pop
test
sub
dec
call
add
adc
test
cwtl
mov
lock
fcomps
in
je
arpl
xorb
test
mov
add
xchg
adc
adcl
pop
stos
inc
inc
les
andb
fdivl
mov
test
mov
ret
dec
mov
lods
iret
xor
inc
dec
mov
movsl
fisubrs
aam
call
sub
mov
pop
xchg
jle
adc
mov
loopne
mov
mov
sbb
in
dec
xchg
sub
mov
xchg
mov
and
cs
sbb
rcrl
sub
loopne
push
in
cmp
jmp
or
ror
jno
shll
lret
add
sub
sub
bound
addb
shrl
add
mov
add
or
loopne
addl
jno
shrb
sub
inc
push
mov
das
lods
and
cmp
jle
popa
popa
sarb
or
cmpsl
mov
or
pop
rcrb
pop
mov
popa
nop
lods
arpl
inc
inc
xchg
mov
jmp
adcl
lret
rcll
repnz
sahf
orl
xchg
xor
call
cltd
stc
adc
in
test
xor
lret
mov
xor
cmpsb
arpl
cmp
or
cmp
sti
and
xchg
sbb
cmc
stos
adc
mov
xor
std
add
lods
loopne
jp
adc
adc
in
sub
adc
add
pop
cld
sahf
sub
rorl
es
cmp
mov
pop
mov
adcb
adc
mov
cs
aad
add
es
inc
cmp
cwtl
push
outsb
arpl
jecxz
in
jo
adc
jo
mov
ds
sbb
lock
and
in
xchg
inc
ficompl
arpl
sbb
or
adc
lock
push
adc
and
and
and
fs
adc
ret
add
mov
xor
nop
and
divl
ret
and
jle
inc
jmp
add
mov
hlt
sbb
cltd
test
in
dec
outsb
sti
out
lods
addl
call
stos
inc
shrb
dec
loopne
inc
sub
inc
in
in
lock
dec
lods
add
outsb
cmp
xor
lock
rcl
sbb
repnz
lods
mov
mov
arpl
or
icebp
fisttps
les
loop
fs
les
fnstsw
and
dec
adc
jno
rclb
mov
sub
sbb
popa
or
cmpsl
jp
outsb
xchg
xchg
rcrl
dec
mov
push
mov
shl
or
mov
inc
pop
adc
mov
mov
xor
cmp
jl
sbb
cmp
repz
movsb
inc
imul
sub
xorl
mov
mov
inc
divb
cmp
call
bnd
in
fs
mov
jno
fadd
lret
pop
pop
movsl
jb
inc
shl
ds
aas
adc
or
insl
nop
and
cmpl
ficoms
and
andb
lods
hlt
ss
xchg
les
push
add
inc
loop
add
mov
inc
pop
and
in
xchg
mov
lods
and
cmp
or
push
fmul
mov
andl
xchg
xor
add
xor
and
lods
xchg
outsl
das
stc
xor
pop
ja
push
repz
xor
test
mov
ret
push
stos
mov
fisubl
rorl
sbb
jae
mov
jbe
sub
loope
es
add
popa
mov
mov
cmp
ret
or
push
fsubrl
jl
xchg
mov
add
add
xchg
pop
pop
or
mov
arpl
and
dec
jl
insl
add
and
int3
cmp
mov
icebp
dec
shll
mov
jmp
lds
push
mov
add
fdivs
nop
je
xor
popa
xor
adc
popa
sbb
pusha
int3
and
jae
sub
movsb
xchg
xor
xchg
repnz
scas
repz
xor
cmpsl
push
or
cwtl
jns
fdivp
or
inc
or
test
ret
int3
imul
das
call
jl
icebp
sbb
lods
add
or
adc
hlt
lcall
sbb
xor
bound
cmp
cs
test
mov
adc
sti
inc
shl
mov
push
pop
and
cmp
call
cli
es
inc
bound
and
or
inc
lock
je
add
xor
inc
rcll
or
xchg
add
dec
dec
mov
sbb
push
sub
or
aam
shll
sub
loope
and
pop
jo
cmpsl
xchg
cmp
sbb
lods
cmp
popf
mov
adc
mov
add
aad
mov
hlt
mull
stos
fisubs
inc
push
out
sar
inc
lcall
jg
or
jge
jecxz
sbb
je
loopne
mov
cmp
rcl
push
rol
loop
ja
repnz
mov
lock
loope
fsubl
shlb
adc
popa
push
dec
rcrl
lods
pushf
pop
dec
sahf
pop
xchg
and
jae
lock
mov
and
pop
mov
popf
jmp
cli
stc
outsb
shl
sub
loope
push
lods
add
mov
outsb
adc
mov
movsl
call
cmpsb
pop
or
mov
dec
sbb
fnstsw
out
push
push
scas
jle
lahf
adc
ret
mov
xor
lds
inc
cmpsl
sbb
or
add
pop
ljmp
inc
or
bound
in
or
push
cmc
loop
add
shr
out
hlt
stc
andl
inc
dec
out
push
arpl
mov
icebp
inc
rcrl
scas
lahf
and
ss
sbbb
imul
je
adc
loop
stos
cmp
andb
adc
add
in
js
nop
cmp
test
repz
stos
jo
mov
cmpsb
loop
sbb
cmp
mov
xchg
and
cmp
inc
andl
mov
cwtl
je
in
or
pusha
sub
hlt
shr
push
sbb
mov
sarl
xlat
add
fistl
sbb
sub
xor
and
mov
sti
mov
pop
cmpsb
insb
sbb
movl
adc
bound
cmpsb
jns
js
sbb
and
repnz
mov
lods
pop
cmp
cmc
mov
sub
sti
cwtl
xor
cmp
aad
jnp
push
mov
adc
test
sarl
loopne
push
sti
or
pushf
mov
popa
cmp
adc
mov
outsl
shl
push
mov
pop
jl
loop
jnp
aaa
cmp
xchg
shl
add
mov
sbb
cmp
or
mov
icebp
loope
das
jg
and
popa
or
or
sbb
jp
in
loop
fdivs
pop
shll
movsb
xchg
and
or
cmp
rcrl
mov
fstl
mov
mov
or
add
repz
lods
add
dec
jl
and
mov
loopne
mov
sub
sbb
mov
add
and
mov
adc
or
add
pop
mov
or
aas
lcall
adc
add
pushf
lods
bound
inc
mov
decl
addb
es
test
out
shl
mov
adc
mov
fsubrs
adc
xchg
test
or
jnp
adc
shrb
rol
aaa
push
jge
cmp
sarb
jnp
push
fs
xor
mov
call
or
or
xchg
outsb
jecxz
call
cvtps2pi
push
jo
pusha
in
cmp
xor
lods
arpl
dec
in
xchg
or
jl
sbb
mov
inc
popa
adc
lock
jecxz
inc
sub
movl
inc
enter
mov
jmp
loope
lods
aad
add
inc
xchg
inc
sub
cmc
adc
or
js
or
repnz
add
pop
and
cld
aas
dec
xchg
popa
or
andb
mov
arpl
mov
xor
sub
loopne
lock
dec
fcompl
mov
mov
cltd
ret
pop
mov
lret
mov
and
rorl
leave
push
dec
stc
loop
lods
push
mov
popa
add
push
inc
test
je
pop
adc
out
xor
push
shlb
add
pusha
ror
stos
mov
mov
mov
jmp
gs
in
lret
cwtl
add
push
popf
inc
sbb
jl
scas
dec
ds
jp
sub
pop
inc
add
jl
dec
std
arpl
ret
push
call
jnp
inc
xchg
test
ret
xchg
nop
hlt
xchg
lahf
cmp
cmc
stos
xor
jo
and
into
jb
sbbb
in
test
mov
shl
sbb
jecxz
xchg
std
inc
inc
lret
aam
outsb
jns
and
popa
push
pushf
xchg
inc
pop
mov
lahf
test
or
stos
clc
jae
cmpsb
repnz
adc
xchg
mov
lods
inc
adc
mov
jae
jb
add
mov
pop
dec
adc
add
cmpsb
cwtl
rcrl
hlt
and
sub
mov
lock
mov
mov
adc
and
sarb
jmp
pop
and
es
push
imul
pusha
call
outsb
and
or
insb
int3
add
pop
lock
cmp
cwtl
pop
je
add
jnp
in
adc
ja
jo
push
adc
sti
sbb
inc
les
in
cmpsl
mov
loopne
mov
lea
push
adc
loop
lods
pop
push
or
mov
jp
inc
mov
add
mov
sbb
in
add
push
and
subl
sbb
cmpl
xchg
shlb
jecxz
push
jne
xor
mov
add
inc
pusha
pop
mov
rolb
inc
shrl
mov
loop
fsub
xchg
mov
cmp
dec
sub
push
cld
adc
cmp
sahf
pavgw
mov
push
lahf
xor
xchg
hlt
push
cmpsl
or
outsl
xchg
enter
sub
js
mov
into
rclb
in
adc
mov
xchg
lcall
test
enter
adc
loop
jne
repnz
hlt
sbb
push
and
loop
jle
inc
nop
movl
dec
jmp
xor
outsl
lods
add
xor
push
jl
call
bound
or
leave
sub
mov
adc
jo
movsl
dec
pop
inc
les
shr
rorb
arpl
stos
inc
jl
sub
or
push
adc
inc
shl
stc
sbb
loopne
push
jne
pop
ds
jo
pop
pusha
subb
pop
or
hlt
cmp
sar
in
mov
loop
pop
ss
hlt
es
jbe
add
dec
xor
dec
icebp
jecxz
and
add
sahf
sbb
adc
hlt
icebp
repz
sub
std
ret
cs
mov
loope
jo
add
mov
mov
or
in
rorl
sbb
mov
jl
scas
ret
pusha
or
push
push
adc
jl
in
jno
push
push
pop
stc
push
push
or
sar
ljmp
out
test
cmc
rclb
rep
js
xchg
pop
movsb
inc
pop
and
roll
adc
xchg
imul
or
inc
lods
shr
adc
popa
frstor
ljmp
sub
test
or
aas
sub
js
jnp
rcll
mov
test
cltd
sbb
aaa
arpl
pusha
cmp
in
and
push
and
in
cs
or
lret
adc
bound
shlb
dec
mov
andb
repz
push
mov
addb
jecxz
xchg
jo
jnp
jns
hlt
mov
mov
adc
jo
jg,pn
xor
jbe
movsb
loop
mov
in
jo
and
push
sub
fdivrl
sub
mov
movsl
xchg
hlt
enter
das
in
cmp
out
shll
sub
roll
sarl
stos
mov
and
lcall
jecxz
addr16
adc
mov
dec
and
roll
popf
cmp
mov
loopne
aad
inc
fs
ljmp
push
lcall
add
cmp
loopne
inc
mov
and
loopne
mov
or
dec
cmpb
inc
clc
loopne
out
arpl
xorl
mov
add
jmp
loopne
negb
sub
jno
inc
dec
add
pop
adc
loopne
out
mov
or
jae
mov
aam
lret
inc
mov
sub
dec
out
jno
dec
ss
loopne
xchg
pop
imul
pop
popf
loopne
jns
mov
loopne
ret
inc
xchg
std
or
je
shlb
dec
movsb
dec
xlat
loopne
lret
or
ss
jb
lret
mov
andb
loopne
in
sub
xor
cld
cwtl
test
jbe
pop
loopne
cld
mov
jne
rcrl
iret
loopne
bound
xlat
cmp
cld
test
lds
jae
les
push
push
mov
jnp
scas
push
mov
and
sbb
jmp
loopne
jns
and
popf
aaa
loopne
aam
fadds
daa
adc
ret
loopne
push
add
inc
and
out
xorl
loopne
sti
popf
xchg
pushf
outsl
or
cld
adc
mov
test
fstpl
gs
cmc
addr16
pop
fldenv
dec
lods
add
adc
mov
movsl
or
lcall
inc
jle
adc
mov
pop
in
das
adc
pop
popa
fs
xchg
push
loopne
and
loopne
adc
stos
loopne
push
xadd
jno
or
lahf
push
imul
jle
xchg
push
add
sti
inc
hlt
js
in
loopne
xor
lcall
fdivrp
mov
or
mov
push
push
popa
into
out
lock
xchg
ret
gs
bound
xchg
loopne
loope
sti
fistpll
push
stc
pop
jno
dec
cmp
mov
repnz
mov
inc
shl
mov
cmp
jne
sbb
fwait
js
int3
in
sahf
mov
and
loopne
push
push
cwtl
in
daa
sub
int3
dec
jecxz
xor
mov
loopne
mov
jg
mov
push
cmp
and
loopne
cltd
shlb
hlt
add
xchg
cmp
fdivrl
or
pop
pop
cld
fwait
mov
repz
pop
mov
outsl
dec
popa
int3
pop
inc
mov
cld
mov
enter
jle
jae
xchg
arpl
lock
test
fildl
shlb
popa
xchg
nop
sarb
cmc
pusha
or
fs
jge
adc
sub
xchg
loopne
xchg
jnp
ja
out
inc
loopne
outsb
xor
mov
xchg
sarl
sub
xchg
rcrb
loopne,pt
fnstenv
ja
xchg
ficompl
loop
cs
scas
mov
lods
fs
push
mov
push
cmp
ret
shl
fcoml
cmp
scas
mov
xor
jo
int
repz
mov
dec
in
xor
lahf
mov
loopne
mov
pop
push
icebp
test
loopne
add
pop
dec
stos
clc
push
fdivr
mov
mov
lods
add
adc
in
ret
sbb
cmpsl
insl
dec
and
xor
pop
mov
out
pop
pushf
inc
lahf
stos
cmp
xchg
mov
jecxz
loopne
jge
jo
pop
pop
pop
loopne
cld
dec
or
mov
adcb
in
mov
or
xor
loopne
xor
inc
hlt
sahf
push
loopne
xlat
das
in
mov
sub
dec
jne
loopne
inc
pop
outsb
push
sahf
or
mov
push
loopne
and
jb
jl
mov
repnz
dec
shl
loop
push
sub
out
loopne
mov
dec
xchg
mov
xor
in
jmp
push
xor
call
loopne
xchg
mov
loopne
cmc
arpl
loopne
xchg
out
int3
inc
push
push
gs
mov
loopne
sbb
lods
cmp
cwtl
sub
shll
push
dec
jl
loopne
int3
adc
hlt
loopne
mov
or
mov
rcrb
cwtl
in
loopne
addb
xor
shll
cmp
loopne
lcall
sbb
jo
mov
subb
push
sar
sub
inc
insb
mov
adc
push
xchg
xlat
gs
push
fildll
shl
pusha
mov
into
fwait
pop
inc
mov
loopne
mov
cmc
in
adc
loopne
jno
fs
inc
sub
inc
aam
sbb
xor
test
cmp
jp
test
jo
mov
popa
xchg
nop
das
and
sbb
jae
or
add
repnz
aam
pop
jg
cmp
hlt
pop
xchg
fstl
dec
test
in
loopne
sub
mov
icebp
push
aaa
pop
loopne
outsl
arpl
fdivp
mov
xor
adc
jae
loopne
xchg
addl
out
cmova
aas
insb
dec
sbb
shrb
push
repz
cmp
dec
cmp
fbld
iret
xchg
xchg
je
jle
jle
sarl
mov
cli
jecxz
lret
arpl
or
inc
enter
push
call
mov
in
xchg
je
add
sub
scas
sbb
sbb
mov
repnz
xchg
clc
xchg
ret
cltd
jae
andl
sub
lret
js
jle
dec
dec
ds
pop
js
mov
test
inc
xor
sbb
out
ss
mov
push
push
das
dec
dec
xor
aad
dec
pop
cwtl
stos
pusha
int
push
sbb
mov
pop
into
cmpsl
mov
add
add
popa
pop
sbb
jl
mov
xchg
scas
out
cmp
loop
pusha
add
adcl
addl
or
adc
push
cmp
mov
lret
loope
or
lds
adc
mov
pop
loope
push
loop
ret
push
cli
hlt
loope
jo
fucomip
sub
mov
dec
daa
cwtl
loopne
fwait
ret
xor
push
inc
test
xchg
mov
xchg
xchg
add
jne
pop
loop
loope
mov
cli
push
mull
adc
loop
ret
test
inc
call
loopne
mov
pop
jo
inc
mov
and
jg
out
cld
loopne
push
jecxz
lret
cltd
xchg
pusha
xchg
in
mov
pusha
add
xor
das
loopne
aas
xchg
imul
add
testl
xor
and
stos
or
aas
stc
and
test
sbb
xchg
daa
or
cmp
and
push
push
sbbl
xchg
pop
or
in
mov
push
add
push
or
or
out
rcrl
add
cmp
adcl
in
hlt
sub
push
jbe
sub
or
sbb
fiaddl
in
rclb
aaa
sbb
mov
dec
imul
sbb
and
and
lcall
sbb
neg
add
lock
jmp
pop
jbe
lock
fcompl
stc
jg
xor
push
dec
test
dec
jg
mov
cmpsl
jecxz
andl
ljmp
in
orl
push
xchg
adc
orl
cmp
and
add
cltd
fbld
add
pop
jae
xchg
and
rorl
xchg
xor
xchg
jo
dec
and
data16
pusha
insb
mov
je
outsl
mov
xor
adc
mov
pop
andl
pop
cli
aaa
jae
dec
push
xchg
and
orl
sbb
fs
xchg
and
test
adcl
sbb
lahf
std
je
pop
inc
push
dec
sub
xor
aas
fs
mov
and
pop
fs
outsb
shl
adc
repnz
dec
xchg
dec
push
xchg
fisubrl
hlt
add
push
mov
into
pop
cmpsb
cmp
stos
sbbl
outsb
gs
and
popa
leave
sub
je
and
inc
stc
jl
or
and
in
inc
inc
jns
out
and
push
insb
jge
pushf
add
mov
add
mov
or
cld
ret
lock
rcrl
xor
xorl
pop
out
add
mov
mov
ss
mov
das
cmp
iret
add
sub
fsubr
cmp
popa
mov
push
and
test
sub
sub
loopne
shrb
or
pushf
fidivrl
repnz
push
cli
loopne
mov
xorl
lock
push
cmp
mov
adc
and
js
out
lock
mov
adc
loope
xor
sub
sbb
cwtl
cli
cmp
cmpsb
ret
sub
adc
or
fsubl
in
or
imul
sub
jle
in
and
jae
pop
out
hlt
enter
mov
outsl
clc
xor
mov
xchg
mov
inc
push
loope
pop
loop
daa
lock
repz
cmpsb
sbb
adc
lea
popl
push
sbb
push
or
icebp
ljmp
add
jl
cmpl
stos
test
add
or
jmp
lock
sub
pop
leave
outsb
mov
jmp
sbb
mov
mov
shl
sbbl
mov
les
cmp
in
mov
mov
lods
push
add
flds
add
fnstsw
loop
push
xchg
sbb
dec
mov
push
dec
scas
push
sub
push
jo
lock
movsb
add
sti
sub
addr16
add
js
ljmp
mov
sub
adc
or
es
pop
out
daa
xor
outsb
sub
pop
mov
test
ret
xor
fldenv
push
adc
or
xor
inc
cmp
xor
push
add
loope
loope
cmp
nop
in
pusha
pop
sub
std
and
mov
ds
orl
jns
clc
shll
pop
insb
xchg
cmp
xchg
sub
jl
push
lret
fnsave
notb
subl
mov
sbbb
sub
jb
adc
xor
jo,pn
decb
loope
cmp
and
mov
test
das
push
call
xor
sbb
jns
jle
xchg
mov
decl
in
and
and
jmp
cmp
xchg
xor
jbe
or
sub
pop
inc
push
int
out
das
push
add
das
adc
sbbb
adc
negl
fiaddl
mov
mov
add
mov
pop
ret
movsl
cmp
adc
fstl
jge
sub
sub
loopne
mov
in
jecxz
xchg
je
fldl
jbe
fs
in
cli
pop
adc
loopne
ja
ret
lcall
shl
pop
xchg
cmp
test
loopne
dec
cmpsl
fmuls
xor
mov
loop
jae
mov
in
push
mov
pop
sub
and
jmp
int3
add
or
shlb
popa
pushf
mov
push
xchg
scas
out
shl
test
xor
jecxz
xor
fidivrl
and
xor
push
cld
loop
icebp
jo
xor
scas
fadds
shr
pusha
aad
mov
add
jnp
dec
fdivrl
imul
loop
lcall
dec
xchg
pop
stos
stos
inc
mov
mov
jle
sub
inc
loopne
fisubs
xchg
lock
add
dec
test
pusha
popa
fs
fistps
ja
pop
dec
loope
addl
push
daa
sub
iret
call
adc
push
cmp
push
xchg
jle
or
mov
sub
fs
into
adc
cmpl
testl
xchg
adc
das
or
xor
mov
inc
and
xchg
inc
sub
mov
mov
faddl
addl
cmp
and
call
xchg
push
addl
movsb
sub
jmp
cmovo
test
test
inc
or
push
jge
movsl
lret
movsl
fildl
aaa
adc
xchg
inc
jmp
mov
jns
jecxz
outsl
pop
outsb
or
dec
inc
xor
shrl
fidivl
int3
jno
adcl
int3
cmpsb
jmp
jo
or
into
pusha
pushf
or
pop
lret
test
dec
mov
push
les
loop
bound
mov
into
jl
mov
xchg
push
imul
fdivrl
sbb
mov
add
inc
ror
mov
fimull
cwtl
jo
repz
mov
mov
xorl
movb
fdivp
into
mov
insb
dec
imul
xor
mov
pusha
out
mov
add
cmp
lods
rolb
sbb
inc
sbb
es
iret
push
mov
test
fstl
out
push
mov
or
test
pop
sbbl
shll
fnsave
ljmp
jg
inc
push
popa
mov
push
sbb
mov
ret
xor
rep
clc
xchg
inc
ss
inc
push
fstpl
xor
repnz
cwtl
xchg
imul
mov
or
fwait
test
sti
fimuls
fists
insl
xchg
rolb
lcall
test
int
loop
pop
leave
test
lods
jg
js
xor
add
xchg
mov
inc
mov
fwait
mov
in
ljmp
pop
fistpll
dec
ds
enter
sub
adc
mov
lcall
gs
push
pop
cmp
adc
nop
push
ret
jmp
cltd
mov
fsubrl
stos
xorl
sbb
adc
lret
fucomp
jbe
and
mov
cli
push
scas
jno
add
cmp
mov
mov
ja
sub
mov
decl
scas
rolb
outsb
clc
inc
push
sub
sub
jno
sbb
mov
mov
inc
ficoms
mov
inc
xor
jmp
daa
cmp
adcl
cli
add
xchg
sbb
lock
sub
in
adc
int
ss
dec
js
je
jb
call
repz
push
jle
push
popa
xchg
cmp
pop
pop
push
push
popa
cmp
out
pop
pop
cmpsb
push
add
jl
mov
stos
bound
pusha
outsl
dec
pushf
xchg
jo
and
addl
mov
adc
mov
jnp
or
jno
rorl
cmpsl
push
mov
lcall
xchg
mov
pushf
adc
outsb
or
or
xor
dec
repnz
in
adcb
inc
push
pop
mov
xorl
push
xor
jo
out
dec
add
insl
in
das
push
in
dec
fnstcw
xchg
in
xchg
daa
sbb
mov
cmpsl
dec
jp
ljmp
fwait
das
stos
mov
call
xchg
mov
mov
scas
pop
imul
sub
dec
jp
and
xorl
xchg
sbb
std
out
xchg
add
ljmp
ret
adc
push
mov
cmpsl
inc
aaa
ret
add
push
gs
adc
mov
xor
mov
stos
sbbb
mov
fcmovnu
je
sub
fcomi
sub
or
add
jmp
pushf
leave
push
aaa
cmp
dec
mov
fnclex
adcl
adc
add
pop
jo
adc
push
adc
in
cmp
sbb
insb
cmp
pusha
sub
mov
inc
xchg
and
mov
jmp
inc
mov
xchg
test
mov
adcl
pop
xor
ds
cmp
sub
and
loop
mov
mov
sti
enter
pop
sti
pop
in
push
mov
scas
dec
int
pop
push
push
xchg
cmp
test
outsb
sbb
stc
mov
in
jnp
int3
out
pop
pusha
inc
cmpl
xor
push
nop
add
lea
adc
or
es
sbb
negl
push
hlt
mov
aad
and
int3
jmp
repz
add
cmp
cmp
adc
ja
xchg
in
daa
insl
je
pop
xchg
jge
repz
sbb
outsl
push
xchg
ficomps
push
aas
je
xchg
cli
lcall
add
sbb
in
loope
stc
push
lds
bound
addb
and
jbe
hlt
scas
add
mov
jecxz
inc
andl
or
lahf
aaa
push
inc
inc
sbb
mov
and
notl
mov
out
sahf
adc
jb
pop
add
jmp
cmp
adc
ja
les
cmp
out
test
inc
arpl
mov
xor
sbbl
xchg
inc
or
ljmp
push
inc
nop
adc
in
mov
fcompp
gs
cli
enter
jo
iret
ffreep
sub
xlat
sbb
push
sti
roll
ficompl
xor
loopne
xchg
lods
fimuls
and
dec
cld
je
loop
mov
aas
fiaddl
jge
push
ret
and
jp
loopne
dec
shl
push
cmp
out
xor
sbb
or
cld
and
adc
test
mov
outsb
mov
adc
les
shrl
loop,pt
inc
sbb
shlb
cld
out
or
fs
ret
nop
loop
jg
jns
loopne
pop
jmp
and
loope
loopne
adc
pop
aam
mov
out
loopne
cmp
bnd
pusha
pop
push
loopne
add
out
hlt
sbb
loop
mov
mov
daa
pop
call
jecxz
mov
push
loopne,pt
and
stc
sti
movsb
dec
outsb
loopne
jnp
jae
scas
hlt
adc
sub
repz
loopne
arpl
adc
rcll
xor
mov
sub
jl
sub
loope
cwtl
lock
sub
cwtl
mov
sbb
out
push
adc
aad
inc
jnp
mov
fiaddl
push
sub
pop
or
js
or
nop
dec
fdiv
and
sbbl
imul
out
aam
addl
test
add
adc
push
or
mov
mov
es
push
call
dec
push
lds
in
mov
sbb
jmp
popf
ret
inc
lret
ret
jmp
and
dec
mov
pop
xchg
ds
xchg
mul
adc
rorl
adc
dec
mov
push
nop
sub
jmp
jae
arpl
andb
cld
add
adcl
mov
call
mov
xor
fiaddl
fistpll
cmp
lods
scas
push
mov
popa
sahf
loope
icebp
subl
mov
jle
jmp
jb
stos
imul
adcl
dec
insb
ret
sbb
inc
imul
fcoml
adc
and
arpl
nop
or
shrb
je
lahf
loope
add
adcl
push
clc
mov
popa
push
sub
mov
arpl
movsl
mov
dec
in
dec
mov
xchg
pop
cmp
adc
jb
adc
dec
pop
stc
iret
or
scas
inc
mov
cmpsl
frstor
leave
xchg
mov
sti
inc
sub
jp
xlat
repz
sbb
sbb
test
lcall
pop
inc
lret
pushf
mov
inc
push
inc
ss
shll
pop
dec
xchg
test
xor
lock
jnp
and
or
mov
call
aad
mov
mov
jb
xchg
js
add
jo
mov
shrb
xchg
out
sub
push
xchg
mov
push
sub
xor
cmc
sbb
sti
and
in
sub
adc
push
sbb
inc
test
test
out
sub
outsb
pop
mov
mov
sbb
cmp
leave
xor
jmp
shlb
xchg
ret
or
mov
es
pop
sub
sub
xchg
push
repz
jmp
arpl
and
mov
cmpsl
sbb
clc
and
pusha
jp
xor
pop
loop
cmpsb
inc
jno
push
inc
sbb
and
and
sbb
leave
je
stos
iret
popa
test
dec
xchg
inc
cltd
push
jmp
lea
push
imul
sub
mov
int3
and
or
lock
pusha
jnp
or
out
je
adc
bound
nop
add
dec
lock
adc
xchg
push
push
nop
imul
mov
pop
enter
cwtl
cli
push
lret
xor
push
or
sti
xor
jne
push
int
mov
pop
or
add
xor
in
movb
imul
test
cmp
lock
sub
movhps
xlat
dec
loopne
jnp
and
imul
popa
mov
loop
or
push
clc
push
movsl
adc
ss
jge
xchg
call
icebp
in
push
cmpsb
jecxz
xchg
inc
push
popa
jecxz
add
push
aam
push
mov
jno
push
rol
loopne
cmp
fs
into
and
arpl
or
sub
inc
int
fisttpl
or
xchg
cmpsb
subb
enter
jmp
xor
sub
xlat
adc
pop
jmp
xchg
lds
jmp
aas
xchg
rcr
lock
add
call
add
push
out
pop
pop
popa
ret
incl
filds
shll
mov
or
shlb
jecxz
call
stc
mov
pop
in
cmp
push
rcr
sbb
lret
test
add
aaa
cmp
ficompl
or
into
cs
inc
mov
push
push
dec
pushw
add
adcl
xchg
cmc
push
jl
loop
xor
xor
fmuls
xchg
sub
cmpb
ds
mov
push
push
rcrb
popa
push
add
xchg
popf
out
lds
mov
sub
cli
fwait
popa
pop
sbbl
inc
into
int3
pop
mov
inc
loope
andps
shll
cmpsl
push
out
jae
xor
push
ljmp
dec
xchg
mov
loope
outsb
das
cmp
sbb
add
loop
push
xchg
sub
xor
enter
loop
sub
cld
imul
sti
pop
sbb
mov
dec
hlt
loop
cmp
and
rclb
in
roll
data16
xchg
jo
push
popf
and
vmaxps
and
adc
data16
pop
loopne
in
mov
push
cmc
sub
xor
rolb
add
shrl
aas
icebp
mov
inc
adc
sbb
sub
cmpsb
jns
pop
mov
mov
rcr
ja
pop
lock
fwait
outsb
or
pop
nop
ret
je
sub
loop
aam
dec
js
lods
cmp
jmp
test
push
xchg
stos
lock
lea
jmp
sbb
add
xchg
cmp
fidivrl
jg
mov
sahf
mov
xor
out
pop
cmpsl
sub
push
add
push
add
adc
lret
mov
pop
aas
inc
push
test
dec
mov
popf
pushf
jmp
psubsw
adc
gs
mov
cmp
cmp
jbe
xchg
clc
mov
xchg
sub
into
mov
dec
sti
insl
dec
sbb
or
dec
outsl
xorl
leave
push
outsl
test
ja
nop
pop
sbb
xchg
sub
jns
jo
jge
jmp
test
shlb
add
fnsave
sti
mov
xchg
sub
inc
sbbb
pop
or
sub
fwait
pop
cli
add
js
popa
loope
leave
pop
clc
add
inc
cmpsl
outsb
testb
inc
sub
sbb
pop
push
cmc
cmpsb
inc
xor
jg
pop
xorl
pusha
push
mov
outsl
fbld
hlt
cwtl
xchg
mov
cld
mov
gs
out
nop
mov
dec
push
repnz
out
pop
cmp
push
adc
dec
js
inc
sbb
cmp
adc
nop
push
xor
xchg
sbb
lret
dec
sub
addr16
mov
mov
sub
mov
mov
subl
cmp
subl
test
mov
mov
and
and
cmp
xor
aas
scas
cmp
pop
jnp
push
push
cwtl
jns
or
or
jae
mov
fcompl
stc
sub
out
lahf
jne
xchg
or
ret
and
mov
inc
shl
loope
add
add
in
movsl
mov
and
sub
add
pop
jl
nop
xchg
loopne
push
mov
pop
xor
es
sub
mov
andl
mov
pusha
push
cmp
daa
ret
add
sub
xorb
or
stos
cmp
loope
xor
jns
call
cld
pushf
fbstp
fidivrl
ret
lods
fcoml
cmp
fs
icebp
call
aad
sarl
adc
in
jb
stc
xor
pushf
jp
xchg
pop
adc
rcrb
sub
ret
jle
push
lock
inc
dec
lods
xchg
adc
push
sarl
fildll
pop
inc
mov
mov
sub
mov
pop
mov
jae
mov
insb
jecxz
cmp
mov
inc
in
cltd
fs
int
inc
out
jl
and
and
scas
dec
sub
scas
xor
lods
sarl
push
and
cmp
dec
push
cmp
inc
xchg
sahf
testb
jmp
xor
dec
in
orl
mov
mov
cld
push
inc
ss
push
adc
mov
lcall
push
cmp
scas
outsb
mov
pop
mov
in
sub
mov
nop
mov
jl
outsb
adc
lds
movl
loope,pt
icebp
xchg
push
add
pop
inc
negl
dec
cltd
fidivs
cmp
jp
ret
sbb
call
sub
mov
mov
xor
ja
loope
sbbl
pop
pop
adc
or
cmp
fimuls
sbb
xchg
jle
jbe
pop
aam
imul
pop
xor
add
mov
or
subl
inc
fldt
add
inc
sahf
notb
add
xchg
push
and
dec
es
mov
push
mov
or
enter
js
lret
mov
push
shll
subl
loop
adc
test
icebp
sub
add
xchg
xchg
jecxz
test
mov
loop
out
es
sbb
sar
sub
testl
mov
add
out
into
jb
dec
fcmovnbe
push
popa
es
insb
jne
push
in
sbb
pop
xchg
pop
rcrl
jae
mov
mov
cmpsl
shl
loop
mov
adc
or
pandn
mov
jno
ss
xor
push
jmp
dec
loopne
popa
leave
enter
mov
icebp
insb
push
loopne
imul
and
shll
lock
push
xchg
insl
pop
loopne
dec
xlat
jecxz
pop
sbb
lds
add
push
ficomps
or
jnp
and
imul
or
jae
ret
inc
xor
xchg
pop
nop
movsl
xchg
loopne
inc
xor
loop
inc
iret
movsb
xor
mov
inc
in
dec
cmp
jnp
ds
jmp
sbb
add
jb
les
daa
pusha
add
ret
xchg
sub
arpl
or
fiaddl
jo
sub
repz
shr
in
mov
mov
mov
fldcw
sbb
stos
cs
stos
sti
or
movsl
jle
sbb
jle
call
xchg
xor
cmp
sar
mov
bound
push
adc
xlat
mov
test
orl
fbld
push
mov
lods
pop
test
neg
mov
xchg
mov
lea
cld
mov
or
insl
pop
xchg
adc
or
loop
lock
adc
jnp
xchg
xchg
mov
out
into
scas
cltd
mov
divb
mov
fistpl
mov
add
and
outsl
pop
pop
xor
cs
std
sub
lahf
test
inc
push
negb
stos
test
fsubl
and
test
cltd
jp
clc
lret
lods
cmp
cmp
movsl
test
xchg
pusha
mov
fbld
mov
mov
repnz
loope
inc
cmp
dec
arpl
andl
clc
test
pop
hlt
dec
push
push
inc
dec
aas
inc
and
add
popa
sub
sub
out
sbb
lcall
in
xorl
in
repz
mov
adc
mov
adc
adc
fidivrl
pop
repnz
push
shlb
inc
dec
cmp
sbb
jo
inc
cmp
gs
outsb
fnsave
outsl
cmc
test
stc
jne
adcl
fs
fisubs
dec
and
rolb
xor
cmpl
jnp
jae
adc
xchg
xorl
mov
cmp
or
inc
push
sub
xchg
cmp
push
aaa
inc
sub
dec
push
mov
xchg
dec
insl
roll
jnp
jp
fcompl
push
mov
jne
in
or
cmpl
iret
movsb
jg
rcl
idivb
stc
test
inc
pop
divb
xchg
xchg
scas
mov
loope
mov
dec
xchg
aam
imul
inc
dec
cmp
imul
jg
xchg
mov
jp
loop
cmp
cmovb
sbb
lods
jb
rclb
cwtl
push
xor
stos
dec
out
sbb
loopne
push
maxps
sbb
push
aad
mov
sub
jbe
adc
sahf
aaa
pop
loopne
cmp
testl
jnp
jecxz
push
loop
and
popf
je
jo
xchg
mov
sbb
xor
les
daa
sub
push
push
orb
je
imul
add
mov
add
test
call
and
adc
in
xchg
cmp
cmp
inc
push
repz
xor
mov
inc
mov
jmp
xchg
test
mov
fldpi
movsb
xor
jno
data16
mov
jae
daa
push
adc
jae
addr16
inc
xchg
push
or
hlt
fisttpl
rcr
jb
and
or
xchg
addl
xor
int3
dec
nop
push
hlt
sbb
pop
push
xchg
test
dec
pop
jnp
scas
push
sub
call
pop
nop
cltd
mov
sahf
jo
into
or
mov
in
mov
inc
mov
or
cmpl
mov
add
shll
pop
shrl
sarl
xchg
rol
shl
les
pop
insl
jle
call
mov
fldl
icebp
daa
dec
inc
xchg
lods
test
lock
push
and
mov
pop
test
pop
mov
incb
std
cltd
jge
out
cli
jmp
jg
jg
jg
jg
jg
addr16
mov
xchg
inc
les
xchg
outsb
xchg
fadd
adc
loop
iret
push
sub
in
push
add
pop
ret
pop
fdivr
add
fnstsw
adc
out
enter
daa
mov
mulb
xchg
cmpsl
pop
stos
iret
out
sub
inc
daa
lods
inc
leave
addr16
cld
shrb
rclb
mov
fnstsw
clc
add
adcb
or
pop
inc
pop
negb
inc
pop
pop
cmpsb
pop
xor
pop
cmpsl
in
movsb
test
icebp
jge
imul
adc
mov
add
xchg
cmpsl
sbb
pop
mov
scas
into
out
movl
scas
mov
xchg
sbb
out
mov
les
xchg
jecxz
jae
test
push
enter
sarb
les
filds
shl
es
das
ret
arpl
les
and
mov
int
out
rorl
sahf
shll
shll
rcr
rorl
enter
jmp
jbe
jae
ss
insb
int3
test
std
daa
inc
inc
lea
xchg
xchg
mov
mov
cmp
ror
sarl
fstps
jb
sbb
fnstenv
fxch
push
xor
push
push
pusha
push
jo
sbbb
mov
ljmp
pop
xor
lret
out
hlt
fsubs
jl
nop
scas
mov
outsl
int
xchg
scas
mov
ret
scas
jecxz
repz
add
dec
frstor
jo
adcb
out
out
ljmp
xchg
mov
add
int3
push
shlb
aam
fcoms
sbb
sub
jmp
ret
insl
shll
roll
pop
shll
cmpsb
rcrl
shll
rcrl
jae
mov
stos
push
call
sarb
xlat
and
enter
fs
fcoms
add
fnstsw
stos
int3
ficompl
pop
push
dec
sbb
sbb
aam
fcoms
fldl
outsl
fldl
enter
ror
aam
fsubrs
fnstsw
fnstsw
sbb
cmpsb
out
sbb
xchg
loope
add
inc
movsb
imul
in
test
jo
xor
das
mov
and
jae
les
cmpsb
sbb
push
pop
orb
cmp
mov
test
xlat
mov
movsb
std
or
lods
jle
out
les
inc
mov
inc
bound
jle
lcall
xchg
jno
xorl
push
shll
jae
adc
shll
shr
mov
add
leave
lret
fldenv
jg
xchg
fldenv
lret
mov
shll
cmp
arpl
sbbl
pop
sbb
sub
mov
les
xor
dec
inc
andb
sub
mov
lods
popa
pusha
in
mov
pop
add
xor
xchg
jb
sub
add
fnstenv
movl
or
adc
mov
adc
pop
pop
mov
shrl
lock
adcl
push
pop
jo
nop
pop
mov
rcrb
pop
repnz
and
mov
and
push
shlb
xchg
pop
mov
pop
shrl
sbb
pop
and
xor
inc
pop
push
pop
bound
jb
sbbb
pop
mov
sarb
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
ja
cs
adc
add
adc
and
sbb
nop
outsl
fstp
mov
rclb
and
xchg
push
cltd
pushf
in
xor
loop
andl
movsb
adc
lods
dec
arpl
shll
push
push
sahf
dec
fldl
inc
jae
lfs
stos
cmp
mov
inc
lret
test
movsb
inc
sub
mov
lods
push
mov
jae
andl
sbb
inc
sbb
ljmp
fidivs
adcl
and
lods
fcom
ss
sub
fs
rolb
cli
lods
push
add
push
jl
in
mov
push
sbb
cmpb
push
int3
pop
rolb
push
pop
out
push
inc
sbb
test
clc
inc
out
lds
movsb
leave
js
pop
xchg
sbb
gs
out
inc
mov
outsb
les
enter
int3
mov
popa
sub
add
test
mov
and
xor
lret
push
movsb
dec
push
ret
cld
std
test
je
repz
pop
xlat
outsb
mov
loop
scas
subb
adc
jmp
lahf
sbb
sarb
dec
jae
int3
gs
cld
loopne
jl
in
aam
pusha
dec
fsubrs
push
fnsave
popa
adcb
js
addr16
xor
mov
pop
dec
mov
jmp
add
add
aas
xchg
loopne
fimull
ficompl
push
shl
push
setbe
push
cmp
shld
push
bsf
shld
mov
add
mov
pushf
bt
mov
pusha
neg
dec
sub
lea
call
push
jmp
btc
xor
mov
jmp
push
movb
repnz
jmp
jmp
pushf
lods
clc
stc
rol
test
not
call
pushl
lea
jp
push
mov
jmp
mov
lea
call
mov
setae
movzbw
pop
pusha
jmp
mov
call
xchg
jl
cwtl
and
orb
xor
mov
fwait
popf
dec
dec
int
inc
xchg
or
sahf
daa
out
inc
cmp
fs
outsb
ret
jno
xor
sub
ss
cwtl
dec
mov
pop
jg
fwait
xlat
testl
mov
insl
outsb
mov
jg
rclb
cld
movsb
jae
movsb
ret
jno
imul
sahf
or
mov
and
or
lret
les
inc
call
sbb
mov
sbb
mov
inc
sub
inc
bound
jle
scas
scas
cwtl
dec
push
fcmovnu
jne
add
out
push
mov
mov
mov
shr
arpl
movsl
repz
movsl
jp
mov
mov
xchg
push
mov
jne
addr16
data16
lret
aaa
xor
mov
jl
sbb
mov
pushf
pusha
xlat
pop
push
into
lock
andb
movsb
test
sub
pusha
lahf
lds
mov
jae
adc
adc
jbe
or
sub
jo
jmp
xchg
mov
cmp
loope
stos
std
add
scas
sub
lret
stos
imul
push
enter
or
outsb
adcl
mov
or
xchg
mov
mov
mov
mov
xor
mov
ja
sbb
ja
xchg
ret
mov
push
mov
jmp
pusha
push
jmp
push
call
pusha
lea
jae
not
call
pop
push
mov
pushl
mov
not
mov
pushf
mov
pushl
ret
inc
pusha
pusha
pushf
pushf
lea
call
jmp
or
pusha
movb
call
out
frndint
dec
insl
push
fs
fwait
andb
inc
fcomps
jl
lret
notl
loope
jae
mov
adc
mov
test
jmp
sarl
jb
mov
fcmovne
mov
fldcw
cltd
cmpsb
stc
cli
and
mov
push
cmp
adc
daa
xor
sub
imul
test
adc
das
cmpsl
mov
push
daa
pop
dec
dec
jne
mov
fsts
and
cmp
iret
mov
test
jg
pop
fnstcw
lea
lds
or
push
shrb
jp
out
cwtl
xor
mov
push
and
gs
xchg
push
gs
out
xor
push
add
or
adc
sub
ljmp
push
push
mov
stc
mov
repz
sahf
or
cmp
out
lds
jle
mov
inc
cmp
loopne
ja
shl
call
pushl
mov
mov
push
pushl
pushf
lea
jmp
pusha
movb
call
shrd
shrd
rcr
lea
test
push
sub
clc
push
call
cmp
pusha
pusha
call
inc
inc
or
jmp
jmp
push
lea
je
call
pusha
pusha
lea
ja
xor
sbb
dec
sub
jmp
jo
cmp
add
pusha
mov
pusha
movb
lea
jmp
rol
ror
not
jmp
pusha
lea
jb
cmp
test
cmp
push
pusha
lea
jae
xchg
bsr
mov
stc
mov
btr
shr
mov
clc
cmc
stc
sub
call
clc
cmc
pusha
cmc
ror
bt
movb
push
mov
pusha
stc
add
bt
test
pushl
mov
push
lea
jne
pusha
call
fidivrl
pop
rclb
imul
sahf
sbb
enter
cmp
fistl
pop
cmp
cmp
inc
mov
mov
js
adcl
ret
shl
cld
push
int3
lods
and
mov
call
shll
jecxz
mov
dec
mov
mov
and
pop
xor
add
and
push
out
ss
pop
dec
ret
idiv
push
mov
jmp
push
inc
and
enter
mov
sub
aas
jno
inc
push
inc
mov
mov
mov
xchg
push
pop
scas
mov
mov
cmp
int3
das
outsl
test
mov
push
mov
nop
pop
sbb
sti
pop
inc
enter
mov
loope
scas
gs
jge
dec
xor
gs
subb
xor
test
rclb
sbbb
cmp
cli
jno
scas
ret
outsl
mov
pushf
orl
ss
and
pop
pusha
outsb
gs
fdiv
repnz
pop
mov
mov
ds
jo
cmp
into
push
dec
xchg
js
sbb
mov
enter
cmc
jle
sbb
add
jecxz
jno
test
dec
jns
into
scas
mov
push
or
icebp
pop
jg
nop
pop
out
dec
adc
mov
test
imul
inc
dec
xorb
dec
fs
aad
js
xor
push
dec
push
insb
pushf
mov
mov
rcrl
aas
jmp
add
in
push
divb
mov
pop
and
decb
xorl
adc
iret
add
xchg
call
sub
jmp
mov
bt
bt
jmp
dec
cmc
mov
test
cmpb
jmp
sub
jmp
fbstp
addr16
es
idivl
mov
lahf
mov
outsb
and
lret
sub
cmp
pop
iret
fsubrl
mov
xor
ss
ljmp
arpl
rol
in
pop
lock
push
out
lods
cmpsl
mov
std
adc
shll
cmc
jle
jns
movl
fs
inc
push
lcall
mov
popa
jne
iret
loope
movsl
cltd
int3
add
dec
mov
cmp
sti
test
out
push
and
inc
lea
ja
pushf
mov
imul
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jne
shr
pusha
sub
mov
cmp
sub
sub
or
xor
lea
lea
cmc
cmp
pushl
sub
pushf
pushl
popl
pusha
cmp
cmp
jmp
lea
jae
jmp
call
xchg
xor
inc
stc
bsr
mov
jmp
cmp
testl
and
inc
aam
testl
arpl
mov
shl
sti
dec
fiaddl
iret
fsubrl
negb
mull
lret
clc
xchg
lock
sbb
mov
mov
and
sahf
test
dec
and
enter
xchg
pusha
push
inc
out
mov
mov
dec
imul
addr16
insb
and
insl
dec
std
inc
cmpsl
fimull
mov
add
jecxz
aas
inc
ds
aas
sbb
sbb
cmp
mov
popa
xchg
icebp
dec
and
add
nop
xchg
mov
ds
dec
popa
aas
scas
notb
xor
cltd
dec
cld
inc
push
test
imul
sahf
sarb
or
lds
repz
in
js
incb
cld
add
adc
adc
cmp
test
and
push
push
or
std
jecxz
lahf
adc
out
pop
fcomip
aam
hlt
inc
mov
sub
cmc
cld
loopne
inc
adc
stc
pop
sbb
in
fnstenv
pop
mov
ret
loopnew
pop
xor
enter
frstor
scas
fs
xchg
dec
pusha
sti
loopne
adc
lea
fdivrs
loop
lods
xor
testb
fstpl
sub
mov
xchg
mov
jl
loope
add
ss
sbb
and
loopne
add
ret
sbb
out
push
ss
adc
pop
loopne
cltd
dec
jmp
and
jne
mov
lods
rcll
sub
jecxz
call
jecxz
loopne
jg
je
xlat
pushf
in
or
inc
loop
push
rcl
popf
jb
decb
add
jne
mov
mov
cs
fwait
xchg
mov
fiadds
lock
call
push
out
jo
jbe
or
addr16
mov
jecxz
negb
jp
movsl
pop
cld
std
adc
add
cmp
pop
in
xor
icebp
inc
pop
adc
insb
add
mov
xchg
les
lds
pusha
adc
add
push
repnz
addr16
sbb
std
push
in
icebp
sbb
sub
sub
sub
xchg
pop
mov
pop
test
popf
lcall
pop
mulb
mov
mov
cmpl
xchg
or
sbb
stos
xor
jg
pop
add
adc
mov
shll
insl
pop
jo
popf
dec
dec
sub
sbb
ja
dec
lret
add
push
outsl
insb
popa
or
fisubrl
fs
roll
dec
sbb
or
inc
jno
dec
cmp
jo
mov
pop
xchg
xor
hlt
push
dec
inc
and
pop
clc
inc
outsb
icebp
test
mov
mov
mov
les
mov
cmp
nop
rclb
push
faddl
popa
jbe
gs
cmpb
pop
cltd
jge
out
mov
je
jl
loop
adc
enter
cmp
mov
jp
data16
xor
lds
cmp
icebp
sbb
fs
gs
enter
cwtl
call
out
addr16
dec
lea
mov
in
addr16
jo
and
incb
pop
je
mov
imul
jne
adc
gs
in
pop
mov
mov
mov
cmp
and
ret
gs
jmp
mov
in
lods
test
jno
lods
jmp
in
xor
stc
sbb
xor
xchg
std
and
mov
ja
xchg
dec
inc
cmp
jno
in
nop
pusha
adc
inc
in
add
scas
es
js
mov
inc
in
sbb
outsb
inc
mov
or
lahf
mov
add
or
jno
inc
and
shl
in
rolb
mov
stc
fists
or
or
daa
popa
pusha
inc
ljmp
or
ljmp
out
divb
adc
or
xorl
cmp
adc
sub
push
add
in
lock
xchg
lock
je
in
sbb
out
or
or
pop
jp
xchg
or
pop
movsb
in
jle
jecxz
pop
loopne
dec
cmpl
arpl
and
rol
shl
cmp
ja
add
mov
jecxz
stos
mov
jo,pt
arpl
pop
and
cmp
shrl
xchg
mov
jo
les
add
add
out
mov
jge
and
add
es
or
in
add
push
ret
jo
add
and
icebp
mov
push
add
dec
jo
add
or
icebp
ret
xchg
and
mov
add
imul
sbb
subb
jo
add
adc
push
add
es
push
push
bound
stos
jo
loope
js
enter
es
push
or
sub
pop
cmpsb
mov
and
ret
loopne
jg
pop
adc
cmp
out
and
aad
lea
test
mov
shll
dec
mov
andl
sub
adc
jl
xor
pop
jno
call
stos
push
ja
repnz
out
ret
mov
out
ljmp
aaa
inc
jecxz
cld
loopne
fists
call
test
loopne
xchg
xchg
adc
loope
popa
mov
fbld
sub
mov
loopne
int3
andb
pop
push
ds
clc
pop
std
push
daa
lret
icebp
loopne
fdivrp
jb
in
inc
hlt
popw
fsub
movsl
loopne
fistpll
test
inc
andl
mov
scas
in
in
scas
test
and
sbb
cmpb
sbb
out
mov
jecxz
int
add
shl
rcl
lret
push
jecxz
dec
repz
push
aad
inc
push
shll
inc
or
imul
in
xchg
sub
shr
jp
ret
cli
arpl
sbbb
stos
outsb
loop
aad
stos
fs
iret
or
inc
loopne
mov
out
arpl
mov
fmuls
testb
ret
gs
adc
and
loopne
leave
nop
sahf
add
test
scas
hlt
enter
adc
aas
sbb
pop
inc
inc
in
clc
dec
iret
rcrb
pushf
jno
xor
lcall
out
cmc
imul
sahf
nop
outsl
push
pop
test
sub
cld
or
insl
dec
cwtl
loop
loope
loopne
xor
or
frstor
mov
add
dec
loopne
mov
mov
loopne
jne
sbb
and
loope
lahf
lds
out
loopne
cld
sahf
rorl
pushf
gs
xchg
mov
mov
inc
pusha
mov
push
jmp
add
hlt
push
sub
imul
xor
leave
cld
dec
and
push
jae
pop
loopne
shrl
loopne
loope
in
push
jmp
out
loopne
jecxz
push
fldcw
enter
push
leave
andl
xor
push
dec
jno
loopne
xor
inc
fisubs
scas
mov
dec
inc
sub
xor
dec
lock
aaa
xchg
aam
int
push
xor
loope
mov
add
adc
loopne
shll
add
xor
pop
loopne
pop
inc
in
lds
shll
cmp
fdivs
std
inc
outsl
repz
pop
repnz
insb
cld
mov
int3
lods
push
sbb
insl
shl
incl
aam
loopne
add
cli
leave
lea
loopne
inc
mov
mov
aas
push
out
ret
divl
sbb
jecxz
mov
push
aam
test
sbbb
jecxz
mov
ss
dec
pushf
movsb
jno
sbb
lock
ljmp
mov
xchg
push
cltd
lock
pop
out
cmpsl
push
lcall
out
repnz
aaa
rolb
popa
sbb
shl
cld
aas
fldcw
ds
pop
cmpsb
mov
das
jecxz
lahf
push
or
insl
mov
inc
mov
mov
mov
rcll
call
jecxz
jmp
test
gs
shlb
jbe
adc
ss
cld
leave
cmc
dec
stc
jns
aaa
enter
cmp
mov
xlat
pusha
cld
and
insb
leave
pop
scas
dec
imul
in
dec
movsl
rcl
inc
loop
lock
in
push
ret
and
nop
adc
fistpl
aam
sub
push
loopne
and
fwait
lcall
imul
push
cmp
xor
dec
push
sub
fsts
fisubl
fs
enter
es
mov
sbb
cs
pop
shrl
add
and
daa
push
jecxz
jle
into
dec
add
and
hlt
dec
aad
sbb
and
daa
dec
lods
in
mov
roll
sub
sbbl
lret
stos
inc
leave
inc
in
andl
dec
mov
mov
insb
lock
xchg
mov
shl
inc
out
xor
mov
and
pop
scas
loopne
mov
je
or
popa
mov
sbb
enter
and
add
fistps
mov
loopne
int3
cli
in
xchg
mov
loopne
test
push
fdivrs
inc
cmp
in
fsts
loopne
repz
imul
fstpl
mov
jecxz
xor
add
mov
pushf
idivb
mov
push
ret
and
and
dec
push
popf
popa
stc
loopne
in
inc
gs
and
addr16
add
cltd
in
sbb
out
mov
xlat
cld
jbe
stos
push
fsubp
sub
mov
push
cld
mov
push
loopne
jno
out
jae
xor
add
pop
add
mov
imul
pop
loopne,pn
adc
sub
loopne
cmpsl
sub
cld
icebp
pop
dec
jbe
loope
xchg
subl
arpl
mov
clc
cmp
insb
aaa
sbb
dec
jmp
jbe
push
jns
stos
mov
rcrl
stc
xchg
loope
add
dec
push
enter
sti
lcall
loop
mov
mov
xchg
mov
mov
inc
xchg
loopne
pop
adc
aam
imul
push
dec
loopne
stc
int3
jnp
or
push
mov
loopne
pusha
dec
mov
loopne
inc
xchg
cmp
and
and
adc
lcall
enter
xchg
rcl
rcrl
sub
mov
cmpl
add
loopne
test
daa
adc
sub
fsub
jp
lods
sbb
cld
pop
jae
add
aas
loopne
mov
lahf
loopne
jmp
in
xchg
cltd
inc
fbld
inc
scas
test
xor
dec
shl
out
push
data16
test
in
aaa
dec
pop
and
aas
mov
xor
mov
fstps
sub
call
fists
mov
mov
mov
pop
pop
jle
xchg
fcmovnbe
loopne
push
fbld
repz
fucom
dec
mov
nop
sub
mov
cmpsb
in
mov
call
xchg
adc
fs
xchg
pop
les
loop
dec
adc
enter
mov
in
inc
mov
mov
loopne
call
out
jl
stc
insl
mov
mov
test
pop
rorb
ljmp
or
leave
in
popa
loopne
out
orb
push
ss
or
xor
xchg
cmp
jne
xchg
ss
dec
mov
mov
cmp
or
mov
and
jns
jg
dec
and
shr
les
mov
inc
mov
arpl
mov
push
or
cmp
ficomps
stos
lahf
in
dec
repnz
cmp
pop
jne
mov
and
sub
lahf
mov
push
mov
jb
mov
sarb
loope
stc
fwait
loopne
sub
icebp
shlb
cli
out
sbb
ror
repz
mov
push
mov
xor
test
in
pop
pop
push
jnp
mov
and
int3
cmp
pushf
jmp
pusha
inc
pushf
sete
lea
jp
inc
cmp
xchg
aam
rol
adc
stc
mov
sbb
sbb
mov
stc
push
cmp
call
pushf
call
stc
sub
jmp
pusha
lea
jne
sub
mov
jmp
sete
jmp
add
dec
outsl
popa
fs
imul
add
sbbl
jmp
and
test
je
mov
pop
pusha
add
push
add
popf
adcb
les
mov
lds
aam
mov
mov
xor
adc
push
cmp
adc
xchg
testl
sahf
dec
lret
out
mov
jge
orb
andb
sbb
cmc
jbe
xchg
cwtl
insl
popf
mov
or
push
orl
add
ret
inc
scas
call
lea
jb
push
lea
jno
cmpb
jmp
lea
jne
call
add
lea
jns
bt
call
dec
pushf
lea
jne
pusha
mov
clc
cmc
bt
test
cmp
pushf
mov
pusha
call
lea
jae
xchg
cmc
mov
add
mov
movzbl
mov
pushf
test
jmp
jne
neg
ror
cmc
cwtl
xor
btr
cwtl
test
mov
mov
sbb
add
dec
mov
bt
js
test
pusha
call
push
lea
je
stc
clc
cmc
stc
sub
cmp
pushf
cmc
cmc
cmp
push
jmp
movw
shr
pushf
lea
je
push
adc
pushl
pushf
lea
jmp
popf
dec
flds
ljmp
push
mov
int3
push
outsb
sbb
movsb
fsubr
shl
xchg
loopne
out
dec
mov
inc
push
add
pusha
pop
jns
popa
leave
cmp
cli
push
ret
jecxz
xor
repz
xchg
aas
lret
adc
std
lods
popf
data16
sub
ljmp
adc
out
jle
repnz
pop
mov
hlt
sub
push
add
sbb
push
pop
cmpsl
loopew
insl
mov
add
and
in
fs
call
pusha
lea
jae
jge
pushf
clc
xor
jmp
lea
call
cmc
jmp
dec
std
xchg
mov
pop
andps
jae
mov
mov
jnp
mov
lret
mov
jmp
sahf
daa
mov
mov
mov
push
inc
mov
add
fdivrs
int
in
mov
jecxz
leave
cmp
insl
jae
adc
push
addr16
sahf
sti
xchg
jecxz
rcrl
jnp
xrelease
fsubs
sub
mov
cmp
mov
fisttpl
ja
push
mov
xor
xor
sbb
jp
dec
bnd
movsb
cmp
mov
mov
sbb
sub
and
fildll
fdivrl
popf
out
je
xor
xchg
cmp
movsb
addr16
inc
aam
lret
les
insb
xchg
cmp
and
mov
addl
mov
jmp
dec
outsl
imul
cmc
ror
jmp
pusha
lea
jae
push
clc
sub
pushf
jmp
cmp
out
popf
xor
insl
pop
ljmp
or
out
inc
push
xor
imul
mov
inc
xchg
mov
push
mov
and
in
inc
cmp
mov
cmp
call
or
jp
sub
jle
in
inc
jae
imul
lock
fadds
iret
and
lock
cmpsl
or
xchg
xchg
jmp
das
jae
test
inc
ret
add
insl
push
outsb
insb
outsl
arpl
dec
inc
add
mov
fs
call
pusha
pushf
mov
call
pop
hlt
mov
sahf
out
xlat
jne
stos
daa
aad
adc
xchg
adc
xlat
imul
sub
mov
movsb
inc
mov
pop
xchg
adc
sub
xlat
jae
dec
stc
xlat
push
add
inc
lds
popa
daa
ret
ss
jmp
lock
xor
and
mov
sar
pushf
sub
clc
not
push
ror
pusha
call
movsbl
mov
jmp
jbe
push
jb
push
mov
sbb
lods
push
in
xchg
mov
negb
clc
stc
stos
sbb
mov
xor
jge
inc
sbb
push
mov
insl
aam
lock
in
into
fsubrs
cmp
xor
xor
lahf
xor
je
jnp
enter
push
xchg
call
pusha
push
jmp
inc
fld
dec
push
ret
repnz
lcall
push
add
cmp
cmp
mov
jbe
jns
add
and
aam
nop
dec
popa
mov
push
mov
cmp
orb
dec
mov
lcall
pop
push
int
gs
movsl
jle
inc
lret
dec
lds
adc
stc
dec
stc
and
adc
push
mov
divb
xchg
xchg
xchg
aaa
cmp
fbld
push
addr16
xor
jns
mov
out
fiadds
add
mov
jo
and
fldcw
in
je
jmp
xchg
mov
push
fucomp
ds
push
pop
bound
adc
and
push
mov
movzbw
mov
pop
pushf
mov
jmp
push
lea
je
movzbw
add
and
stc
inc
adc
mov
test
cmp
clc
test
add
push
bt
mov
call
stc
ror
cmc
pushl
jmp
test
call
loope
push
lea
xor
call
imul
adc
adc
fdivrl
cltd
sub
insb
loopne
out
xchg
jns
dec
call
jmp
movsl
add
pushf
sub
adc
push
mov
hlt
mov
jecxz
dec
aam
mov
movsl
cwtl
jmp
mov
push
arpl
fwait
movsl
rol
jmp
push
xorl
mov
fildll
shlb
call
mov
ror
jmp
mov
lea
jne
or
btc
add
mov
clc
pushf
cmc
add
pusha
movzwl
lea
pusha
btr
mov
pusha
add
cmc
push
mov
cmp
test
call
lea
ja
pushf
lea
jb
stc
clc
cmpb
jmp
lea
jne
pusha
setb
pushfw
popw
mov
dec
mov
mov
pushf
not
pushf
push
call
scas
xchg
push
movsb
dec
js
mov
jl
and
ret
leave
cli
std
xor
and
in
fistpl
cmpsl
and
add
sub
adc
sub
loopne
jecxz
jno
dec
push
subl
cmpsb
cmc
jno
inc
cmp
pshufw
inc
imul
out
jmp
test
mov
mov
fdivs
stos
xor
pop
xchg
leave
xchg
mov
sbb
jb
repz
mov
push
movsl
je
in
insb
add
lods
mov
aad
jl
sub
cmp
sub
jge
movsl
popa
mov
lret
xor
adc
paddw
dec
inc
popa
cmpl
flds
and
out
leave
jmp
inc
push
setae
call
mov
lods
jmp
imul
lahf
std
jbe
movsb
inc
stos
pusha
cld
jl
mov
out
stc
add
icebp
and
or
insl
movsl
push
pop
xchg
mov
inc
mov
lock
sbb
and
pop
adc
test
inc
dec
jnp
pop
ret
sub
jmp
cmp
and
push
inc
mov
in
clc
cmp
xlat
xchg
stos
inc
nop
arpl
sbb
aad
xchg
jns
add
push
je
sahf
cmpsb
in
incb
into
xor
and
sti
inc
outsl
cmpsb
mov
pushf
pushl
mov
pusha
lea
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
negl
sbb
push
lea
jmp
call
repnz
mov
pusha
push
pushf
lea
jmp
pushf
clc
call
call
push
mov
jmp
pushf
movb
push
mov
setbe
jmp
call
lea
ja
mov
clc
call
test
mov
lea
je
pusha
pushl
clc
cmp
sub
pusha
mov
call
jmp
das
jg
inc
or
dec
xor
jbe
xchg
xor
mov
testl
jns
mov
mov
add
lret
lcall
cltd
fldl
arpl
jne
dec
push
xchg
mov
sarb
xor
aam
ja
outsb
push
sub
xlat
pop
mov
pop
push
lret
cwtl
and
fstps
fsts
adc
mov
xor
mov
ja
add
movw
pushl
popl
call
pushf
cmp
sub
stc
pusha
clc
cmp
pusha
lea
jae
pushf
lea
jmp
call
pushf
lea
ja
call
movb
lea
ja
dec
inc
inc
inc
jmp
rcrb
fldenv
dec
push
je
cmp
mov
add
pop
mov
inc
pusha
mov
mov
add
repz
cmp
jp
addr16
cwtl
nop
sti
outsb
push
leave
push
xchg
mov
mov
movsb
shlb
cmp
clc
inc
xlat
mov
not
ret
ja
jbe
sahf
push
movsl
mov
jmp
add
divl
jecxz
push
call
lods
jmp
jb
aad
loopne
fistps
lret
jl
xchg
fwait
mov
inc
enter
sub
cld
and
cs
daa
jbe
inc
fs
xchg
int
cltd
adc
xchg
inc
xor
lods
mov
push
mov
sub
cltd
push
jmp
frstor
jns
dec
push
and
ret
cmpsb
add
lahf
add
mov
xor
leave
inc
pop
andl
mov
cmpsb
and
aad
xchg
rorb
inc
les
mov
dec
xchg
int3
jl
jns
js
pop
sahf
mov
dec
push
pop
fwait
les
movsb
nop
js
cmc
add
cmp
pop
mov
jns
sub
loopne
stos
inc
cmp
mov
xchg
cmpsl
iret
aad
out
icebp
add
ja
add
lea
mov
pop
mov
pop
mov
lds
popf
xchg
icebp
mov
mov
frstor
mov
pusha
jg
mov
sahf
push
and
out
or
shll
dec
ja
mov
xor
push
js
mov
xor
mov
adc
or
aaa
cmp
pop
cmp
stos
add
jecxz
mov
and
add
pop
and
pop
pop
cmp
ja
jne
xor
pop
mov
xchg
sub
nop
inc
loop
and
and
inc
cmp
rolb
jae
mov
xchg
cmpl
jge
test
sbb
int3
adc
mov
cmp
and
pop
es
mov
stos
lahf
sbb
out
mov
aas
pop
dec
imul
cmpb
mov
scas
adc
lret
push
and
pusha
shlb
push
push
mov
mov
mov
mov
in
pop
adc
and
jl
das
jae
jle
sahf
fstps
daa
lods
sub
jae
loope
outsb
and
pop
sbb
inc
stos
jae
mov
xor
addr16
into
mov
mov
sbb
xchg
jo
je
cwtl
ret
cmp
pop
ss
mov
pushf
mov
cld
push
push
inc
push
loop
or
xlat
xchg
aad
inc
or
pop
ficomps
cmpsb
mov
leave
int
icebp
sti
xor
loope
clc
mov
cmpsl
test
pop
pop
movsl
pop
xlat
imul
cmp
mov
movsl
lahf
pop
pusha
push
jo
sbbb
ret
or
jo
ds
jne
addr16
stos
or
lods
aam
add
cmp
push
and
mov
xchg
add
mov
lods
xor
bound
cwtl
sub
lcall
or
sti
dec
pop
cwtl
xchg
sub
push
sbb
push
aad
iret
jne
fnstenv
enter
mov
cmp
mov
in
push
and
aas
add
neg
not
clc
rol
mov
not
mov
test
jmp
lea
jne
jmp
pusha
jmp
pusha
jmp
mov
mov
movw
pushf
push
pushl
ret
push
jmp
call
pushf
jno
xor
add
jo
mov
stos
xor
jl
cmpsl
cmp
sbb
and
sub
lcall
outsb
ss
jmp
jbe
jmp
shrb
lds
outsl
lret
fstpt
or
rol
int3
orl
arpl
scas
mov
add
test
gs
jp
js
inc
adc
scas
xchg
mov
cwtl
in
push
icebp
into
dec
cmp
je
add
cli
call
sbbb
sbb
dec
add
bt
jmp
pusha
jmp
in
rclb
test
adc
xchg
or
sbb
jno
fwait
test
das
in
push
cmpb
insl
insl
in
xchg
cmp
push
mov
pop
mov
cmp
mov
xor
cwtl
sbb
int
mov
pop
mov
orb
mov
mov
xor
in
dec
and
push
cmc
inc
imul
and
pop
mov
mov
sub
nop
push
mov
lods
rcl
shll
mov
mov
movsl
dec
inc
cs
out
loope
add
test
icebp
nop
push
clc
scas
pop
into
fisttps
lds
mov
inc
inc
pop
sub
sar
aaa
aaa
push
dec
insl
xor
mov
mov
mov
jp
divb
add
pop
ljmp
test
cmc
not
bt
cmc
test
xor
stc
movw
stc
ror
clc
cmp
call
jno
lret
lock
rclb
test
cmpsl
aas
int
jecxz
je
dec
sub
aam
or
fldl
fsub
sub
pop
ficoms
add
call
adc
repnz
adc
dec
ret
insl
sbb
repz
in
dec
mov
cmp
mov
insb
cmp
scas
insb
loope
pop
sbb
jmp
test
insl
cltd
aam
fimull
and
into
or
shl
cmp
sub
push
dec
push
js
pop
cmp
push
xor
loop
movsl
pop
pop
outsl
fwait
or
cmp
mov
and
jg
cmp
pop
cmp
je
mov
xor
test
add
in
sti
movsb
inc
leave
dec
iret
addr16
inc
push
jp
aas
dec
aas
lcall
push
ds
test
pop
jmp
xor
sub
adc
popf
stos
test
ja
pop
lods
adc
cmpsb
adc
add
mov
sbb
jp
fisubrl
jo
into
ss
xchg
aaa
out
sub
pop
stos
pop
pop
jnp
mov
in
sgdtl
imul
mov
fmuls
arpl
mov
lcall
std
and
mov
add
enter
push
bt
cmc
test
sub
cmc
bt
stc
ror
jmp
lea
je
clc
add
bt
pusha
cmc
cmp
push
pushf
lea
jb
clc
call
jmp
clc
ror
jmp
xor
inc
fisttpl
test
sub
das
xor
shl
mov
pushf
setle
pusha
sbb
add
seta
jmp
cmp
jmp
lea
call
pusha
pusha
jmp
bt
add
call
movw
jmp
test
cmc
shrd
push
rcr
stc
cmc
not
mov
btc
cmp
bts
rcr
push
stc
adc
pushf
xchg
movzbl
movsbl
push
ror
btc
lea
xadd
push
rcr
call
mov
stos
fidivl
rclb
adc
jae
xchg
adc
scas
int3
out
xchg
int
dec
lret
fdivp
adc
sub
jb
js
shll
in
push
mov
lret
repz
add
shrl
mov
das
inc
icebp
jae
dec
out
lds
inc
sahf
test
clc
xchg
xchg
ja
or
inc
sub
ret
rcll
fsin
xor
negb
test
in
sub
cmp
jle
nop
mov
xchg
and
dec
stc
not
stc
cmc
mov
jmp
call
mov
clc
cmp
push
pusha
jmp
btc
add
movsbw
mov
pusha
mov
mov
push
setbe
lods
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jmp
jmp
pushf
mov
movl
call
test
cli
adc
push
lret
addl
xor
dec
shll
xchg
mull
mov
cmp
and
mov
repz
stos
insb
adc
mov
mov
adc
and
pop
push
xchg
jb
and
loop
in
push
add
mov
cmc
adc
aas
push
push
gs
int
ja
scas
mov
xchg
adc
jno
push
push
push
fcomps
xchg
xor
inc
out
insb
xchg
mov
mov
cmc
push
jb
aas
in
cld
push
xchg
pop
sub
push
push
ret
push
adc
in
loopne
loop
in
mov
dec
std
jns
xchg
notl
out
fcoms
jmp
fsubs
jl
aad
mov
inc
mov
cld
adc
push
je
cwtl
subb
jbe
add
bound
leave
mov
cwtl
push
or
inc
lods
into
lock
xchg
and
xlat
fs
cs
ljmp
add
insb
inc
jle
xchg
push
ss
mov
pop
sbb
call
xchg
cmpsb
in
or
test
mov
mov
testb
sub
push
int
outsl
mov
or
mov
adcl
and
addr16
sub
mov
mov
mov
jp
add
loop
cmpsl
lret
in
rcll
lcall
sub
lods
testb
sbb
cmc
mov
aaa
and
push
or
test
mov
push
popa
jno
into
fcmovbe
imul
shl
shl
shl
call
mov
adc
add
xchg
xor
dec
lock
into
pop
ljmp
fwait
add
push
loope
outsl
mov
arpl
pop
mov
aas
repnz
push
movsb
xor
int3
add
sbb
push
mov
cmpsb
mov
add
es
and
daa
addr16
jns
xchg
shl
ljmp
pusha
rol
bt
not
pushf
pushf
xor
call
call
bsf
mov
rcr
mov
xor
lea
mov
bswap
shld
neg
stc
mov
clc
or
pusha
lea
je
push
stc
or
pusha
call
pushf
call
movb
lea
jbe
movsbw
xchg
shl
bswap
mov
sub
shr
call
adc
or
and
mov
scas
xor
xchg
int3
or
cmp
dec
outsl
scas
lret
adc
aam
fdivrp
push
adc
jno
adc
cmp
push
popf
cmp
pop
jbe
dec
incb
xchg
push
sub
loop
fdivs
pop
sbb
ja
inc
lret
in
jb
loopne
repz
inc
pop
subl
ja
rorl
add
inc
jb
add
into
rcl
mov
call
lea
jne
clc
sub
sub
push
mov
dec
mov
jmp
pusha
push
jmp
or
fs
incb
jle
pop
push
inc
leave
orl
cmp
in
add
push
or
adc
jb
data16
xor
call
sub
and
repz
push
inc
imul
daa
std
xor
mov
out
sbb
stos
cmp
xor
les
xchg
and
out
test
jns
mov
aad
sbb
cmp
and
fsubr
mov
clc
sub
bt
clc
repnz
pushf
pushl
mov
call
jb
dec
ja
or
adc
fisubrs
inc
loopne
push
stos
push
push
pop
mov
mov
mov
cmp
inc
aas
xchg
cli
aas
int
fistps
in
outsb
movsb
mov
bound
mov
int3
sbb
es
xor
xchg
pop
pop
loope
jno
pop
movntps
hlt
sub
xchg
sahf
leave
outsb
shll
add
aam
ds
inc
cmpsl
sub
enter
and
jl
mov
lcall
pop
lods
jo
pop
pop
mov
ret
pop
pop
scas
divl
inc
dec
test
sub
test
mov
lods
in
test
fmull
fsubr
arpl
popa
mull
sbb
sahf
enter
jmp
add
sub
test
or
bound
xchg
jmp
jno
lods
out
and
in
ret
pop
push
rcrl
mov
popl
test
je
xor
push
test
outsb
cwtl
pop
jmp
hlt
cmp
call
test
nop
repz
aam
jne
xchg
movsl
mov
cld
adc
fs
les
or
and
or
add
aas
mov
mov
mov
push
jge
popf
xchg
and
lea
fists
dec
movsl
lods
mov
mov
enter
cmp
outsb
and
dec
mov
dec
icebp
sub
lods
sub
testl
hlt
dec
in
and
fcoms
arpl
andb
or
rorl
ror
ret
mov
xchg
fnsave
mov
nop
bound
les
fcoml
push
testb
cltd
sub
jae
fchs
cli
es
inc
xchg
lods
mov
and
sar
pushl
popl
clc
cmp
pushf
pushf
lea
ja
rcl
setle
shr
sub
inc
push
shl
inc
sub
add
inc
mov
push
shr
xor
and
mov
pusha
repnz
push
call
jo
lret
add
into
arpl
aad
xchg
int
cmc
xchg
daa
mov
or
aam
popfw
mov
in
jp
pop
adc
pushf
and
xchg
sub
sub
or
out
daa
adc
test
cld
mov
xor
fimull
ret
mov
pop
or
pop
ret
fbld
ja
bound
lret
cmp
sub
mov
scas
gs
adc
ja
jg
lahf
add
cmpsb
subl
mov
jo
add
xchg
in
in
idivb
arpl
mov
cmp
sub
aad
mov
or
lea
push
push
pop
in
xor
iret
mov
jns
cwtl
repnz
mov
xchg
pop
adc
push
mov
mov
das
xchg
push
jmp
js
or
and
bound
mov
into
adc
mov
sar
jmp
arpl
arpl
arpl
in
fstpt
adc
lea
push
call
push
mov
pushl
pusha
movl
pushf
push
pushf
movl
pushf
lea
jmp
fs
cs
cmp
adc
mov
ret
cmpsl
lcall
xchg
add
in
cli
mov
test
dec
sbb
mov
dec
and
aam
mov
sbb
push
mov
jl
add
cltd
and
xor
mov
movsb
int3
and
add
mov
inc
stos
test
shll
roll
lret
mov
and
xlat
inc
adc
into
rclb
or
push
movsl
divb
mov
cmc
xchg
mov
inc
jne
push
or
jl
pop
insl
shll
push
popa
jno
into
cmp
into
imul
stc
cmc
cmp
push
call
call
lea
jb
cmp
pusha
cmp
mov
pushf
movb
call
lea
ret
inc
jmp
xor
add
add
inc
add
add
add
mov
add
add
add
frstor
add
jle
add
js
add
cmpsl
dec
add
lods
aas
add
xor
add
in
imul
lcall
pop
lock
int3
pop
or
adc
inc
pop
outsl
lret
sbb
mov
mov
adc
fsubrp
add
inc
lcall
loopne
adc
dec
push
dec
leave
movsb
scas
in
cwtl
push
dec
addr16
clc
xchg
mov
xchg
stc
lock
icebp
mov
rcr
lea
ds
jnp
pop
push
push
vpaddusb
out
push
dec
inc
outsb
jbe
xorb
idivl
shll
cli
insb
and
fldt
mov
push
add
and
popa
jl
pusha
jg
or
fcmovb
pop
notl
jns
lea
jnp
xchg
and
aad
inc
dec
sbb
or
aad
or
loopnew
mov
jp
imul
cltd
stc
cmp
movsl
popa
inc
xchg
sahf
jmp
or
movl
dec
mov
mov
or
shr
push
jo
daa
subl
jns
aad
nop
lods
xor
arpl
sbb
out
jbe
xorb
push
mov
mov
dec
mov
je
aaa
test
xchg
scas
shl
data16
lock
or
add
cmp
cmpsb
fisubrs
jbe
xchg
xor
cmp
out
loopne
in
push
add
stos
aam
xchg
dec
in
xor
push
int3
inc
pop
pop
adc
ror
cmpsl
sub
adc
xor
pop
push
cmp
cmp
sbb
dec
xchg
jb
imul
stos
push
and
out
cld
and
lahf
xchg
mov
daa
jl
ja
inc
ret
and
add
clc
mov
cmp
jmp
bt
clc
repnz
push
pusha
lea
jmp
pushf
lea
ja
call
adc
pushf
pushf
pushl
ret
lea
call
pushf
adc
jmp
test
incl
repz
inc
sbb
mov
les
xchg
adc
jne
sahf
sub
sbb
xor
loope
or
pop
inc
sub
jl
or
popl
sub
xor
or
cli
adc
or
add
xor
stos
cmp
into
mov
out
push
rclb
inc
jb
jp
scas
mov
xor
and
push
movb
xor
push
push
cmp
cmc
repnz
pushf
mov
movw
lea
jne
stc
mov
bswap
clc
sub
stc
mov
bt
sub
test
bt
stc
pushl
clc
pusha
stc
cmp
mov
pushf
pusha
pushf
lea
ja
mov
shl
neg
cmc
sub
shl
neg
bswap
add
add
bt
mov
dec
mov
clc
repnz
call
jmp
cli
shrl
and
cmpsb
sub
cmp
outsb
clc
mov
je
test
movsl
loopne
insb
ss
inc
mov
mov
dec
sub
adc
adc
add
pusha
frstor
sbb
cmp
mov
add
andb
idiv
xchg
sub
sub
imul
xor
inc
js
sbb
sub
out
add
jnp
mov
mov
and
bound
bound
insb
sub
fildl
aad
fcom
xchg
imul
or
jmp
divb
repnz
inc
pop
outsl
mov
ja
aas
sbb
mov
es
xor
and
pop
add
xor
ljmp
xchg
lahf
lea
cltd
pop
inc
int3
fidivl
mov
sub
sahf
in
std
dec
jae
xchg
inc
inc
lahf
iret
icebp
adc
lea
in
not
mov
test
pushf
push
and
pusha
add
mov
pushl
push
pushf
lea
jmp
dec
dec
dec
xor
cs
insb
add
mov
inc
mov
movsl
sub
fiaddl
cmc
loope
xchg
cmp
daa
mov
or
push
sbb
fmulp
mov
loop
adc
add
inc
xchg
mov
out
xchg
pop
movl
jb
imul
adc
xchg
mov
xchg
sahf
mov
sub
sbbb
xor
dec
mov
call
movw
jmp
push
inc
jmp
pusha
pusha
pushf
lea
jne
shr
mov
jmp
clc
add
bsf
mov
lea
shrd
add
cmp
add
shl
test
movl
neg
shl
ror
shl
mov
sub
call
cmp
xor
push
jmp
movw
lea
ja
clc
imul
jmp
mov
jl
mov
ret
aas
fldenv
mov
nop
mov
lcall
out
inc
fistps
mov
imul
inc
out
xor
push
call
push
ret
cwtl
adcb
adc
add
sti
cmp
sar
or
mov
or
ss
mov
inc
or
aam
fdivrs
jle
inc
dec
add
lahf
cli
sub
pop
ja
cs
ficomps
sub
out
and
lcall
and
xor
fs
ret
stc
loop
inc
in
push
imul
icebp
and
aam
pushf
mov
add
or
add
dec
fstpt
stc
pop
mov
fisttpll
adc
xor
inc
xlat
mov
es
lds
xlat
jnp
lret
adc
and
lahf
pushf
lea
call
jmp
addr16
sub
cmp
pushf
call
lds
sub
loope
mov
mov
stc
ljmp
sub
sbbl
adc
jno
jno
adc
add
jno
or
or
cmp
pusha
lea
ja
jmp
pop
inc
enter
and
pop
test
mov
inc
cmp
xor
lods
cltd
mov
movl
ljmp
ljmp
jmp
push
loopne
push
lds
fisubs
mov
les
jecxz
andb
pop
std
jne
in
ret
into
pop
sahf
cwtl
stc
adc
mov
push
inc
pop
test
fldenv
shlb
sub
pushf
jmp
mov
dec
not
pusha
inc
sub
pusha
rcr
shl
xchg
xchg
mov
cmc
setbe
shr
clc
mov
pushf
jmp
shld
add
movsbw
mov
pusha
cmpb
jmp
pushf
lea
jae
push
test
pushf
cmp
pushf
pushf
push
pusha
lea
ja
dec
call
lea
call
jmp
add
add
add
add
add
add
pop
add
and
add
mov
mov
add
add
add
add
add
xor
add
mov
add
call
mov
add
lcall
and
inc
std
jno
mov
stc
or
gs
or
in
fwait
mov
and
inc
pusha
jp
outsb
enter
in
test
dec
pop
test
aas
xor
scas
ffree
xor
aam
push
sbb
or
mov
mov
adc
sbb
sub
jl
mov
add
and
jl
ja
and
inc
ja
iret
push
jg
insl
mov
or
je
mov
shl
sbb
adc
repz
jne
lock
shll
lods
es
mov
adc
ja
not
mov
xchg
sahf
lods
fs
data16
mov
arpl
xchg
cmp
and
inc
or
xchg
sbb
and
mov
xorl
adc
out
pusha
pusha
clc
cmpb
pushf
lea
jne
shrd
mov
cmc
test
bt
push
add
stc
movb
movzwl
clc
mov
stc
cmc
test
add
pushf
mov
movb
pushf
pusha
push
test
pushf
jmp
lea
jne
pushf
mov
pushf
pusha
mov
pushl
lea
call
push
call
call
inc
adc
fmull
shll
cmpl
dec
fldl
xor
iret
ljmp
out
ss
mov
out
loop
pop
cmp
pushf
bnd
mov
and
ljmp
mov
xlat
xor
test
dec
and
or
int
lock
js
cltd
push
in
iret
add
dec
adc
js
subb
cmp
frstor
daa
pushf
test
pusha
sub
and
cmp
sahf
lcall
and
mov
test
bt
pushw
popfw
movw
pushf
inc
jmp
jecxz
fucomip
push
dec
dec
scas
mov
inc
cld
cwtl
sbb
pop
cmp
fistps
add
or
sbb
push
outsb
orb
xchg
iret
add
xchg
insb
push
jl
mov
lret
pop
cmpsl
push
sahf
cmovp
jp
stc
outsb
adc
mov
cmpl
cmp
fisubl
out
call
ss
lea
adc
scas
in
dec
stos
stos
mov
add
ror
in
push
movsb
shrb
ret
cmc
cmp
lds
cmp
xchg
xchg
mov
add
mov
sub
ljmp
add
sub
pop
aaa
cmp
mov
sub
sub
mov
sub
je
xlat
enter
or
dec
enter
push
dec
gs
sbb
jecxz
cmp
pop
fistpl
sbb
negl
arpl
aas
lock
add
or
push
out
mov
add
imul
leave
pop
mov
sub
lahf
add
cs
popa
push
int
mov
mov
dec
test
sub
cmp
cmpsb
outsl
and
pusha
cmp
pushf
jmp
pusha
repnz
pushf
pushf
pushl
lea
jne
mov
mov
movb
cwtl
push
not
lahf
lea
pushf
push
movb
pushl
movl
pusha
jmp
pusha
lea
je
jmp
mov
or
pop
xor
jecxz
mov
jne
mov
mov
bound
icebp
mov
mov
sti
or
ds
icebp
push
into
data16
mov
lock
fidivrl
stos
pop
lcall
aas
ja
xchg
in
lcall
in
mov
push
scas
rcrl
jb
out
repnz
sub
pushf
popf
mov
out
fldl
addr16
lods
andb
mov
pop
and
sub
call
call
stc
pushf
lea
push
pushf
sub
jmp
pop
sahf
dec
outsl
pop
pop
bound
outsl
pusha
sub
roll
pop
ja
lds
call
mov
inc
cs
leave
adc
xchg
pusha
lock
aad
ret
pop
xor
inc
and
dec
xorl
mov
xchg
mov
stos
sbbb
mov
dec
pop
cmp
mov
clc
repz
dec
sbb
ds
addb
sbb
adc
iret
call
pusha
jmp
icebp
cmp
or
jl
in
pop
or
imul
add
test
and
sti
mov
ljmp
pop
push
sbbl
mov
mov
mov
mov
sbbb
insl
xchg
ss
push
xchg
arpl
sti
or
xor
xlat
push
lahf
shlb
idivb
lods
lods
sub
loopne
mov
ss
pop
or
lods
pop
or
xchg
mov
leave
in
call
or
faddl
pop
push
push
inc
push
xor
cs
insb
add
mov
dec
push
lea
jmp
lea
jb
cmp
cmp
pushf
call
jmp
bsf
mov
cmp
call
adc
jb
or
popa
daa
mov
rol
pop
call
mov
mov
hlt
dec
das
testl
aad
push
push
jg
sbb
sub
add
dec
test
adc
push
push
jbe
jl
pop
cmpsl
sbb
mov
xor
std
outsl
adc
xchg
mov
mov
rol
repnz
add
sub
xchg
pop
call
mov
pushf
lea
jmp
iret
pushf
imul
fwait
daa
mov
xchg
xor
xor
xchg
pop
mov
fcomi
aaa
cmp
ss
cs
bound
and
push
pusha
stc
mov
test
jmp
add
inc
gs
outsl
fs
gs
imul
add
lea
je
pushf
lea
jmp
dec
pushf
pushl
inc
pushl
pushl
jmp
sub
pushf
pushf
pusha
lea
call
pushf
jmp
lcall
mov
popf
into
mov
mov
dec
fsubl
inc
aas
pop
mov
lods
cs
lahf
stos
xlat
adc
movsl
adc
cmp
sti
and
cmpsl
cmp
add
shll
ror
filds
mov
push
leave
fnsave
arpl
add
and
mov
std
rorl
jbe
jge
loopne
push
fidivrl
mov
fcom
cli
es
ds
jbe
test
push
jmp
mov
fld
pop
mov
int
cmpxchg
mov
mov
or
pushf
adc
fadds
cmp
push
adc
movsb
stos
mov
fwait
jno
pop
int3
add
push
cmp
cli
push
xchg
clc
add
adc
mov
mov
adc
rorb
fstps
cmp
ds
pop
sbb
out
enter
and
jae
cld
add
cmp
js
xorb
inc
cmpl
mov
xchg
push
int3
xchg
pop
mov
outsb
cmpsb
xchg
or
or
bound
ja
mov
mov
adc
add
xor
call
repnz
das
push
xchg
xchg
push
int3
fdivrl
lahf
add
adc
aas
lds
shll
je
fnop
push
mov
adc
mov
rol
mov
adc
nop
inc
stc
mov
pop
xchg
stos
mov
sub
xchg
and
jbe
fs
call
call
or
jae
test
shll
lds
and
sbb
push
inc
fcoml
jne
dec
insb
lods
push
adc
mov
cwtl
cs
sub
int
mov
lret
scas
hlt
shrl
std
adcl
dec
aam
sub
sbb
jg
push
pushf
push
ret
test
movsl
pushf
repz
test
inc
pop
xchg
push
and
pop
dec
and
test
add
pushf
mov
add
push
call
mov
test
call
push
add
xchg
and
fld
andl
adc
mov
in
xlat
push
ds
dec
inc
cmp
mov
jp
addl
push
xor
jmp
out
das
push
mov
sub
xchg
cld
xchg
lahf
leave
jne
jmp
lcall
fmuls
add
faddl
inc
sti
enter
call
aam
push
fstps
imul
push
ja
sbb
adc
lock
clc
int
cmp
cltd
xor
lcall
xor
stos
shl
push
and
adc
mov
ret
sbb
out
jns
test
mov
push
clc
repnz
cltd
xor
fsubrl
mov
call
pop
leave
mov
xor
je
cmpsb
mov
cmp
dec
xor
adc
pop
jp
push
rcll
ljmp
and
cwtl
mov
movzbw
movl
mov
pushf
mov
call
pushf
pushf
lea
jne
push
pushf
push
stos
push
lea
jmp
pusha
pusha
mov
movb
pushl
ret
lea
jae
xchg
mov
movsbw
or
bswap
cmp
mov
inc
cmc
cmp
mov
pusha
jmp
push
lock
std
std
test
outsb
adc
inc
stc
or
ret
pop
cmp
mov
pop
or
xor
push
pop
or
jge
cltd
in
sbb
jmp
add
in
aam
adc
test
mov
into
repnz
dec
push
in
xchg
push
inc
mov
push
and
mov
loopne
jmp
sbb
inc
pushf
lea
je
pusha
lea
jmp
sub
bsr
shld
neg
push
lea
add
sbb
shrd
rol
mov
cmc
test
push
cmc
mov
bt
push
bt
cmp
repnz
movb
call
mov
jmp
movb
pushf
mov
lea
jmp
pop
cmp
loop
push
inc
sub
xchg
addb
push
ret
mov
in
hlt
std
add
clc
sub
and
call
sarl
movl
jbe
sub
jp
xchg
int3
out
xchg
lods
pop
popf
cmpsl
adc
scas
add
jg
or
movsb
jge
fwait
int3
dec
clc
sub
jecxz
adc
scas
fwait
xlat
or
clc
fsubs
setp
movsb
test
loopne
mov
push
leave
sub
cmp
sarb
test
sbb
loopne
pop
mov
or
and
popf
inc
and
aad
inc
push
sti
out
adc
cwtl
es
add
add
nop
hlt
inc
push
mov
sub
inc
test
fcoms
ficoml
dec
ja
imul
cmpsb
jl
adc
jae
adc
and
adc
mov
std
xlat
jb
cmp
aad
push
mov
std
test
mov
jmp
jg
and
push
movb
not
mov
lea
lea
pushf
movl
pushf
mov
pushf
movw
mov
pusha
pushl
ret
jecxz
inc
out
and
sahf
leave
push
and
sahf
and
pop
and
in
jnp
push
pop
jns
lods
mov
enter
fadd
pop
cmp
pusha
sbb
imul
mov
out
sbb
cwtl
lcall
pop
sbb
cmp
fwait
movsl
mov
icebp
sbb
mov
ljmp
jae
jnp
cwtl
dec
dec
mov
into
jns
fptan
cwtl
ret
or
cmp
shll
or
into
movsb
popf
mov
xor
push
add
jbe
es
pop
andb
push
imul
scas
mov
pop
mov
nop
mov
xchg
push
mov
jo
movsb
mov
xchg
dec
cld
arpl
inc
push
xor
or
ljmp
in
mov
addr16
idivl
sub
adc
nop
mov
repnz
jnp
fstpt
mov
sub
fisttpl
mov
dec
cltd
ljmp
adc
xchg
or
out
add
and
stos
jmp
dec
or
negl
loopne
push
or
jg
add
pop
cmpsb
out
jecxz
sub
arpl
mov
in
and
dec
pushf
shld
cmp
clc
mov
clc
pusha
add
lea
jp
cmp
cmp
bt
mov
call
sub
adc
shr
lea
movb
sub
cmc
pushl
popl
cmp
cmp
call
lea
jg
dec
pushf
push
lea
call
stc
call
push
dec
call
ror
push
call
add
push
outsl
jae
dec
gs
popa
addr16
add
enter
jmp
mov
aaa
dec
lods
mov
push
aaa
imul
aad
and
add
jae
insl
js
lcall
mov
hlt
inc
inc
imul
int
push
inc
lea
inc
add
or
jmp
pop
jg
scas
mov
push
adc
shlb
cli
xchg
out
notl
and
lea
fcoms
dec
jo
pushf
and
inc
sti
jno
lds
inc
leave
xor
inc
jns
stos
mov
sbb
ja
sbbl
and
bt
rol
cmc
movw
not
cmc
sub
bt
rol
stc
bt
stc
movb
xor
bt
pushf
not
lea
jp
pusha
stc
ror
pushf
mov
cmc
add
pushf
cmp
bt
stc
test
call
pushf
xchg
pusha
pusha
dec
stc
clc
shl
call
dec
pushl
pushf
pushw
popfw
jmp
lea
jne
jmp
sub
push
shl
sub
lea
add
and
bts
shrd
rcl
mov
not
pushf
add
mov
call
not
call
push
sub
stc
pushf
pushf
repnz
mov
lea
jne
setge
neg
inc
mov
shl
add
bsr
pushf
sub
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
xor
mov
inc
stos
and
add
mov
xchg
in
in
pop
cmpsb
fs
ja
dec
ret
adc
mov
add
mov
insb
lds
loop
dec
ds
out
pop
inc
xchg
inc
fisubrs
frstpm(287
mov
jmp
out
mov
add
das
xor
movsb
xor
mov
cmp
lret
adc
outsb
jle
push
je
push
mov
sub
icebp
dec
aad
rol
and
iret
xor
adc
pop
pop
loope
xor
sub
pop
push
ret
test
xchg
lods
inc
rolb
push
stc
inc
pop
hlt
adc
jg
imul
push
loop
xor
shll
movsb
movsl
je
ret
stos
jecxz
xor
push
pop
lea
lret
call
enter
mov
not
lea
js
mov
call
push
xchg
sub
mov
clc
test
sub
pushf
movl
rep
pushf
mov
mov
mov
lea
jmp
call
addr16
bound
xor
out
popf
mov
dec
fcoml
sbb
xor
add
jbe
jecxz
fs
dec
out
mov
addr16
push
stos
xorl
push
lret
int
push
es
xchg
jmp
pusha
push
jg
aaa
pop
jnp
jo
pop
sub
sbb
std
imul
xor
call
sub
dec
mov
out
mov
jg
call
sbb
mov
scas
fwait
mov
rcr
in
js
jae
adc
or
mov
fisubrl
push
xchg
push
mov
jo
rcr
push
mov
dec
dec
gs
in
sbb
in
mov
mov
mov
mov
and
inc
stos
pop
sub
add
aam
pop
jp
les
lret
in
push
mov
int3
cmp
popf
sub
shlb
sbb
jb
inc
or
push
insl
sub
push
lods
shlb
mov
ret
pop
pop
xchg
cld
aad
mov
or
idiv
pop
adc
adc
mov
dec
pop
pop
faddp
out
sahf
mov
pop
adc
lods
ret
sub
jb
lret
divb
dec
addps
cmp
dec
repz
shl
fcmovbe
mov
dec
dec
or
and
lea
ficompl
cmp
xor
insb
arpl
sub
xor
aas
clc
cmpsb
in
bound
test
mov
inc
outsl
mov
ja
add
pushf
mov
lea
jmp
mov
jmp
pusha
cmp
pushf
mov
pusha
push
lea
jae
jae
pusha
pushl
cmc
add
call
lea
call
push
pushf
call
jmp
push
push
pushf
mov
pushl
ret
pushf
pushf
lea
call
pushf
pushf
pushf
lea
jmp
cmp
test
call
test
cmp
add
pusha
pusha
mov
pushf
pushf
push
lea
jmp
cmp
movzbw
lea
movsbw
cwtl
lea
mov
call
movb
lea
ja
pusha
lea
jb
push
cmpb
movw
lea
jne
rcr
mov
pushf
cmp
add
bt
call
lea
jnp
pushf
lea
jne
pushf
not
sar
mov
cmc
pop
sub
jns
sbb
test
and
mov
pushf
sub
cmc
bt
pushl
popl
stc
call
not
ror
sub
call
add
dec
outsl
arpl
inc
jb
add
leave
adc
cmp
incl
pop
in
inc
pop
repz
cmp
orb
arpl
mov
inc
xor
in
dec
dec
mov
mov
cmp
cmp
mov
outsl
xchg
sub
dec
fnstcw
mov
sti
mov
adc
into
adcl
mov
cwtl
mov
sbb
daa
lret
adc
out
pop
pop
sub
sub
lcall
imul
adc
push
mov
push
pop
lock
xor
mov
jb
and
imul
sbb
mov
iret
cmpsb
out
jg
sub
into
adcl
mov
adc
sub
fldt
movsl
sbb
inc
hlt
xchg
push
shrb
shrl
in
xchg
shrb
repz
xchg
rol
and
sbb
adc
imul
pop
stos
in
hlt
xor
out
ljmp
mov
lea
jnp
ror
push
push
pusha
dec
push
pushf
cld
pushw
popfw
jmp
cmc
test
pushl
xor
cmc
cmc
cmc
cmc
ror
mov
cmp
jmp
add
bt
stc
movzwl
rol
mov
cmc
stc
cmc
stc
add
jmp
jmp
push
loopne
div
add
jns
xchg
and
in
push
xor
push
push
jno
addb
push
pop
add
aaa
adc
fdivl
and
pop
lock
clc
push
add
lock
fimuls
xor
rcrl
mov
sub
inc
add
jo
test
and
jns
sbb
lret
orl
rclb
cmc
loopne
or
xlat
addr16
xchg
out
rorb
ret
inc
fcmovnb
jns
das
orl
mov
push
cmc
lock
xor
ljmp
daa
jecxz
fs
out
jae
mov
les
int
js
ret
fcmove
jae
xor
mov
test
pop
sbb
fcomip
outsl
mov
mov
cmp
mov
push
pop
push
mov
mov
nop
xlat
sub
sbb
push
pop
fidivrl
ss
or
sti
sub
imull
mov
jns
in
xchg
jo
jns
jg
out
popa
mov
addl
std
fninit
fs
hlt
push
shl
mov
mov
dec
out
in
mov
addl
fistpl
mov
jp
hlt
add
roll
std
lea
lahf
bound
ret
out
popa
mov
js
lahf
out
xchg
pop
inc
or
pop
ret
sbb
pop
and
jo
xor
fbld
adc
out
push
push
jg
sub
loopne
mull
fildl
inc
stos
lret
jecxz
hlt
cli
icebp
adcl
push
xorl
push
adc
stc
fadd
ret
loopne
adc
mov
mov
mov
out
or
push
popa
ja
mov
repnz
or
test
rcrb
loopne
out
cltd
push
and
jmp
aaa
adc
daa
push
mov
xchg
push
adc
add
sub
in
into
stc
and
out
int
sbb
ss
lret
inc
popa
mov
jo
pop
data16
add
mov
sti
inc
mov
cmp
jg
sub
in
nop
xchg
push
pushf
sbbl
stc
rorb
mov
dec
std
cmpsl
and
repnz
idivl
xlat
cltd
mov
loop
push
push
mov
icebp
jb
fabs
aaa
mov
add
addl
inc
xor
mov
add
cmpsl
jb
add
xchg
push
mov
xor
lret
std
gs
sbbb
cld
add
adc
rolb
pop
adc
mov
sbb
and
mov
lret
out
xchg
sbb
movsl
shll
jns
nop
and
nop
add
ficoml
push
cmc
push
or
pop
sbb
and
pop
sarb
cs
lea
mov
out
popf
or
and
mov
testl
cmp
clc
adc
cmpsl
push
xor
and
add
sub
imul
addr16
push
and
insl
xor
outsb
inc
push
add
das
stos
shl
jecxz
in
jo
sbbb
jmp
repnz
sub
mov
cli
orl
lods
pop
add
inc
and
or
test
jl
loope
mov
cwtl
xchg
inc
stos
imul
test
inc
mov
or
ljmp
imul
jo
or
bound
xor
nop
loope
das
arpl
in
push
sahf
testb
inc
adc
inc
orl
add
cwtl
cs
sub
mov
jl
or
js
pop
cmp
loopne
cmp
imul
sti
loopne
enter
and
cmp
mov
pop
add
xorl
sub
lcall
adc
cmp
test
push
jb
cmp
shll
add
fistpl
in
test
outsl
in
or
ret
andl
sub
ljmp
std
and
adc
xchg
jo
cmp
cmp
int
cmp
shrb
and
dec
pop
les
ret
rolb
je
icebp
mov
das
inc
mov
mov
push
cmp
sub
arpl
clc
adc
push
pop
sbb
fwait
lret
not
call
mov
sub
jg
movsl
inc
repz
cltd
sub
add
inc
push
sti
test
sub
or
sahf
les
idivl
jno
or
cmp
mov
or
sbb
repz
lods
enter
jmp
notb
fnstcw
push
pop
test
or
xor
push
orb
in
call
pusha
adc
call
not
jmp
lea
jae
test
neg
not
cmc
mov
rcr
stc
shr
bt
mov
adc
xor
mov
cmc
sub
bt
repnz
pusha
lea
jne
btr
adc
mov
clc
sub
cmp
cmp
bt
mov
cmc
push
test
sub
jmp
pusha
pusha
call
pusha
not
push
ror
pusha
bt
call
call
rcl
bswap
pusha
mov
lea
bts
xchg
mov
push
ror
mov
pusha
clc
bt
jmp
imul
pop
xchg
fmull
dec
lret
gs
lret
jno
dec
push
out
loop
daa
push
call
stc
fcoms
shrl
movsb
or
xor
adc
xor
scas
test
int3
sub
mov
fisubs
adc
jne
movsl
in
test
lahf
in
adc
mov
pop
lret
push
mov
adc
xchg
rep
jae
cmp
test
pushf
lea
je
pusha
clc
cmc
add
pusha
pushf
clc
cmp
pushf
jmp
jmp
cli
mov
push
mov
test
out
test
sub
mov
sbb
sbb
dec
adc
sbb
or
jo
lock
lea
inc
les
scas
test
xor
into
stc
pop
mov
addr16
mov
or
jecxz
dec
xor
aam
out
inc
mov
subb
push
in
stos
pop
loopne
xor
andl
mov
sar
sbb
ja
mov
sahf
xor
pop
pop
xchg
xor
add
xor
add
xchg
mov
jle
mov
insb
loopne
push
sub
cmp
scas
outsb
std
in
inc
jle
mov
and
and
and
add
mov
pushl
call
je
xlat
loop
dec
push
inc
dec
push
xchg
sarl
cmp
ja
test
and
nop
jmp
jle
movsb
push
dec
ficomps
jmp
add
adc
inc
fwait
adc
test
idiv
repnz
scas
mov
bound
lcall
and
fdivrp
and
pushf
lea
jb
stc
cmp
pusha
pushf
lea
jae
bsr
lea
shl
mov
bsf
ror
test
bts
mov
pusha
mov
jmp
add
mov
movw
lea
jmp
cmp
movw
mov
call
cmc
ror
call
loope
pop
push
lahf
mov
xchg
popf
cmp
xchg
add
fsubs
movl
dec
call
stc
aad
mov
inc
or
jo
jle
ljmp
test
inc
jns
jmp
mov
xor
testb
xor
push
xchg
fwait
push
sbb
cmp
cmp
lea
xchg
lahf
mov
scas
push
add
and
scas
mov
mov
jnp
test
add
and
jg
fisubl
jp
inc
sbb
or
push
xor
mov
jmp
fmuls
idivb
and
mov
mov
enter
nop
movsb
dec
or
js
stos
out
or
and
lcall
sub
pusha
push
mov
pushf
inc
push
enter
jl
out
in
mov
xor
movsb
movsl
and
ja
pop
dec
jae
pop
fldcw
push
push
push
lock
push
enter
sbb
in
mov
aas
popa
mov
xchg
sti
cmpsl
inc
sarl
lea
cmpsl
mov
iret
mov
jnp
mov
xchg
lret
setnp
clc
inc
xor
adc
cltd
mov
call
sbb
jge
icebp
push
imul
push
popa
rorb
add
xor
dec
cmp
push
adc
inc
rcr
fnsave
mov
push
push
mov
add
arpl
fs
xlat
pop
hlt
lcall
ret
jecxz
push
pusha
test
rcr
mov
adc
lods
int3
clc
adc
adc
xor
and
jge
call
jmp
aaa
push
sahf
stos
add
mov
cs
mov
ljmp
data16
dec
in
jl
rclb
cs
in
ret
add
out
xchg
fxch
mov
fstpl
js
xchg
mov
add
inc
sbb
xchg
out
popa
mov
push
ret
push
cmpb
loopne
adc
js
pushf
stos
cmpsl
and
adc
mov
ss
call
fsubrl
jle
cmpsb
dec
out
sbb
xor
and
dec
pop
add
add
jge
ret
insl
mov
fsubrs
test
sub
cmp
xchg
mov
jno
add
aas
mov
fdivrs
adc
fildl
ss
xor
cmp
adc
pop
cmp
pushf
cmp
mov
mov
in
sbb
inc
push
jns
in
ja
fisubrs
mov
std
mov
popf
ret
jns
shrl
iret
lahf
dec
sub
pushf
mov
pop
fidivl
xor
add
cmp
inc
dec
dec
dec
jle
mov
pop
push
into
add
ljmp
push
test
xor
mov
inc
inc
mov
xchg
push
cmpsl
hlt
xor
or
aas
bound
inc
mov
lea
je
cmc
add
cmc
pushf
mov
test
cmp
pushf
pushl
jmp
sbb
sub
sub
lea
add
bsr
bt
test
bswap
mov
shl
and
setne
mov
cmc
stc
push
bt
repnz
lea
pushf
lea
jne
pushf
pop
pusha
pushf
movb
lea
not
push
push
lea
movb
movl
jmp
lea
jb
pushf
pusha
pushl
ret
call
and
cmc
add
bt
cmp
bt
add
jmp
pusha
movw
lea
je
xchg
btc
add
sbb
add
rol
shl
ror
sub
shrd
pusha
shr
clc
and
mov
neg
add
shl
add
adc
sub
mov
pushf
sub
jnp
pusha
shr
mov
cmp
pushf
movl
lea
je
stc
pushf
test
cmp
pushf
lea
je
pushf
cmp
call
rcrl
mov
xchg
mov
sti
xchg
jo
les
push
jl
mov
dec
psllw
rorb
add
cli
adc
xor
push
adc
icebp
addl
test
imul
jl
adc
outsl
sar
das
mov
push
rcrl
bound
adc
rcll
rcrb
and
into
imul
sbb
int
repz
lea
ljmp
movl
push
ror
test
sub
call
clc
int
jl
leave
fisubrs
cmp
jne
lea
pop
jecxz
xorb
sub
mov
imul
call
add
inc
adc
xor
mov
mov
cld
iret
mov
cmc
and
sbb
addr16
jle
pop
fisttpll
stc
daa
das
outsl
test
add
sbb
jmp
mul
push
push
xor
push
movaps
mov
jbe
add
sahf
lods
xchg
arpl
cmp
jnp
xchg
movsl
mov
sti
fnstenv
mov
mov
fidivs
or
jmp
in
mov
jno
sub
lods
xchg
lret
pop
cltd
jmp
fldenv
les
add
jge
mov
clc
int
dec
jmp
pop
dec
and
and
adc
add
mov
adc
inc
cmp
in
cmc
cmpsl
dec
mov
pop
dec
and
cmp
or
dec
mov
ja
mov
and
shr
pushf
movw
call
cmpsl
sti
xchg
lods
or
and
scas
inc
mov
fdivs
call
xchg
cmp
and
es
xor
mov
and
lret
mov
test
and
push
int3
fldenv
pop
ss
lret
mov
addb
dec
mov
mov
inc
loope
adc
xchg
leave
aad
add
jge
inc
pop
mov
not
dec
push
pusha
js
mov
sti
and
push
enter
bound
mov
imul
jno
and
push
lea
jae
stc
test
cmp
pusha
jmp
mov
pusha
pushf
jmp
inc
and
mov
fs
std
jae
lods
push
roll
clc
push
mov
mov
dec
call
cld
inc
dec
into
inc
pop
xor
cmp
adc
adc
aad
negl
pop
jge
sahf
aad
rcr
movsb
pop
xchg
pushf
dec
and
lods
pusha
enter
xchg
pop
and
dec
pop
shrb
mov
aam
sbb
and
lods
pushf
test
adc
loop
mov
lret
mov
movsb
push
enter
mov
lods
xor
and
lods
adc
pushf
out
stc
and
pop
and
inc
xchg
incl
bound
sub
cmp
lret
mov
sub
xor
stc
sub
xchg
out
icebp
iret
add
inc
stc
iret
adc
fs
cwtl
mov
or
or
lock
xor
inc
lea
fiadds
sub
cmp
movsl
mov
pop
mov
inc
pushl
lea
jae
test
jmp
lea
call
pusha
pusha
push
lea
jae
not
push
inc
mov
pushf
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
repz
cmp
cmp
and
pushf
lea
jmp
jmp
pushf
stos
pushf
pushf
pushf
lea
jmp
and
popf
ret
dec
les
je
xchg
push
shlb
sbb
lods
dec
sbb
sar
push
xchg
xchg
push
mov
pop
lods
sarb
arpl
xlat
mov
loope
insb
pop
dec
lods
nop
popfw
xchg
std
adc
dec
pop
data16
clts
enter
adc
je
inc
pop
push
icebp
dec
ret
orb
orb
xor
pop
pop
lcall
adc
into
cmp
rorb
pushl
pushl
ret
sub
cmc
btr
xor
btc
shr
cmp
mov
inc
btc
shl
rol
add
stc
shrd
rcr
add
lea
clc
bt
mov
pusha
clc
call
pushf
sub
jmp
js
loope
aad
mov
int
add
enter
pusha
into
test
test
insl
jnp
add
mov
mov
inc
jae
cmp
aad
out
mov
dec
inc
lea
xor
outsb
sahf
xlat
mov
mov
and
outsb
pop
mov
add
rolb
arpl
push
aas
and
or
jmp
or
push
lock
into
orb
jns
arpl
popf
dec
or
jecxz
cmc
add
sub
imulb
es
sub
movsb
mov
fiadds
ret
mov
xchg
xor
mov
insl
xchg
aam
or
xor
add
mov
dec
push
pop
xchg
ret
mov
jge
pop
cmpsl
mov
mov
dec
das
jnp
js
fldenv
xlat
sub
adc
sbb
outsl
sbb
adc
hlt
fsts
fbld
gs
push
sahf
add
lods
js
mov
or
xor
dec
dec
mov
push
imul
pushf
xchg
icebp
clc
scas
insb
cmp
fcmovu
loopne
xor
and
out
add
pop
ret
sub
out
add
mov
daa
sti
sub
popf
mov
mov
cwtl
out
pushf
lds
ljmp
stc
ljmp
in
addl
flds
fldenv
pop
repz
repnz
jbe
mov
and
mov
rcll
aaa
loopne
fmuls
mov
roll
enter
cwtl
or
push
dec
stos
xor
cld
pop
pusha
xchg
popa
into
pusha
jge
cld
mov
push
sbb
xor
xchg
enter
lea
add
pop
xchg
pop
aam
popa
add
stc
sbb
rcrb
test
xchg
in
xchg
sub
pop
dec
mov
inc
jns
aad
cs
lret
test
cmp
jge
pop
inc
in
push
push
enter
aad
in
mov
or
aad
shlb
xchg
mov
mov
bt
rol
cmc
call
dec
stos
and
mov
add
orb
lea
fstps
mov
bound
insb
lahf
lret
or
jae
mov
jl
inc
popa
mov
scas
mov
outsl
pop
lahf
jecxz
pushf
push
test
jle
in
ret
movsb
xchg
js
jp
cmp
or
push
mov
arpl
dec
jns
cmp
xchg
cmp
jb
inc
fsubrs
icebp
inc
sbb
mov
call
xor
roll
xchg
pushf
rcl
add
adc
dec
and
ffreep
fildl
enter
dec
call
pusha
push
pushf
mov
not
pop
pushf
pushl
ret
icebp
sarb
cmp
xlat
push
sti
lea
cmpsl
inc
fistps
mov
mov
adc
pop
sub
into
sub
repnz
mov
jp
add
stos
and
or
push
mov
push
adcl
add
pusha
fists
outsb
xor
and
xor
adc
movsl
imul
mov
in
xor
mov
add
clc
jb
cmp
add
fucom
jecxz
loop
add
jmp
stc
xchg
dec
iret
loop
push
add
outsl
popf
ret
xchg
stos
and
gs
cltd
rol
mov
cli
mov
mov
lds
push
scas
inc
aam
mov
pushf
ret
pusha
fldcw
inc
lods
loopne
loop
aad
jmp
nop
js
mov
pop
addb
out
mov
sbb
xor
sbb
xor
dec
loopne
or
pop
pop
inc
jp
enter
jns
out
xchg
imul
mov
shlb
xchg
addl
fimull
jbe
xchg
mov
mov
shll
rcrl
sub
adc
push
fwait
mov
cmp
push
pop
xchg
lahf
nop
and
inc
adc
andl
enter
push
frstor
lahf
pop
adc
les
jg
in
jmp
cs
inc
lret
mov
xor
pop
mov
pop
dec
icebp
rclb
mov
jmp
data16
xchg
mov
testl
fwait
xchg
or
stc
xor
and
repz
pop
jno
push
loopne
loop
loopne
je
cmpl
jle
inc
or
aaa
jecxz
adc
lods
mov
outsb
fcomp
sub
vlddqu
cltd
jns
aas
and
jle
cltd
leave
roll
or
testb
insb
xchg
stos
add
divb
push
sbbb
stos
mov
les
xchg
mov
aaa
jnp
test
xor
add
push
andb
mov
mov
int3
pusha
int3
mov
cwtl
inc
testb
sbb
arpl
pushf
cmp
push
mov
mov
arpl
mov
pop
xor
add
pushf
iret
jmp
add
and
enter
mov
cs
mov
out
std
ficoml
dec
hlt
and
push
insl
imul
inc
push
push
and
or
pushf
sub
push
cmp
call
clc
cmp
and
cmp
pusha
stc
add
pushf
mov
pushf
lea
jmp
add
mov
aam
lcall
add
mov
jo
test
jae
xchg
push
mov
mov
je
pop
jae
push
inc
pop
dec
mov
xchg
std
pop
cmpsl
inc
call
jp
and
adc
adc
js
push
add
lods
xchg
jno
sbb
pop
ljmp
inc
add
outsl
mov
and
dec
out
js
or
lods
jmp
add
mov
popa
mov
addb
iret
inc
call
loopne
in
insb
nop
sbb
and
sub
mov
icebp
xchg
pusha
add
gs
in
insl
lea
icebp
adc
add
cmp
loopne
lods
cmpsb
mov
rorb
jae
add
aaa
xchg
fnsetpm(287
sbb
mov
movb
or
push
test
or
mov
push
call
cmp
and
jo
add
int3
popf
pusha
and
and
repz
bound
sub
mov
inc
shrb
icebp
xor
push
gs
sub
push
add
shrl
lds
leave
sub
jo
add
fsubrl
addr16
dec
jl
adcb
mov
and
outsl
hlt
xor
jecxz
adc
push
lock
lds
sub
les
sbb
push
jae
shlb
and
stos
cs
jno
add
add
mov
sub
popa
ljmp
pop
and
data16
add
pop
arpl
in
adc
dec
sub
addl
fcmovne
roll
or
mov
ja
mov
dec
xchg
popa
jmp
and
pop
scas
jecxz
scas
mov
test
in
inc
pop
arpl
in
fldenv
inc
jmp
lods
imul
or
mov
in
mov
push
xor
and
hlt
cs
push
test
add
lock
push
clc
sub
cld
add
add
add
or
cmp
loope
sbb
inc
sub
sub
sbb
es
or
mov
sub
cmp
shrl
icebp
pusha
mov
xchg
clc
adc
out
test
pusha
es
or
add
add
and
test
jle
mov
pusha
std
aas
sub
gs
ss
iret
and
cmp
call
mov
add
and
push
in
in
loope
ljmp
shlb
xor
adc
in
jp
push
in
mov
addl
test
ret
add
jo
add
icebp
push
xor
adc
jecxz
mov
xchg
bound
icebp
inc
xor
and
adc
add
es
shl
shll
push
add
xor
mov
push
push
xor
add
push
push
jae
push
push
jo
and
inc
inc
inc
push
jbe
and
sbb
adc
loop
inc
inc
mov
and
icebp
loope
xor
push
mov
repnz
and
inc
add
int3
push
push
mov
add
push
mov
xchg
stc
mov
enter
sub
jo
add
es
lods
and
in
sbb
fcmovnbe
loop
mov
and
sbb
fnstcw
push
movsb
xor
pop
loop
and
fcomip
cmp
inc
js
outsb
dec
jnp
cwtl
sub
lea
inc
shl
jl
rolb
nop
mov
pop
xor
movsl
cmpsb
lods
movsl
mov
pop
push
pop
arpl
lahf
ds
add
fcomps
loop
jnp
add
jg
jmp
mov
comiss
pop
xchg
xchg
out
js
mov
and
or
push
pushl
pushl
lea
jmp
cmp
cmp
movzbw
lea
cwtl
bswap
mov
movl
push
push
movb
lea
ja
pusha
call
add
add
add
cld
dec
add
add
test
add
add
add
adc
add
add
add
lock
pusha
adc
add
add
push
adc
add
adc
add
add
pusha
adc
add
adc
add
add
pusha
adc
add
add
xor
add
inc
adc
add
add
pusha
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
xchg
cwtl
insb
add
test
add
mov
add
insb
add
shrb
out
add
lock
add
or
add
insl
add
and
add
insl
add
cmp
add
add
insl
add
je
add
xchg
add
insl
add
inc
popa
outsb
fs
outsb
fs
jb
arpl
inc
outsl
insl
jo
outsb
fs
jb
arpl
dec
dec
inc
inc
insb
gs
jb
jne
push
je
imul
push
gs
jne
push
je
imul
inc
outsl
outsb
imul
add
gs
outsl
outsb
jbe
jb
imul
add
gs
gs
jb
jns
dec
insl
gs
outsb
jne
push
imul
jb
add
gs
jae
popa
jo
add
gs
gs
imul
jb
push
je
insb
add
gs
outsb
jno
imul
push
jb
arpl
jae
gs
dec
insl
gs
imul
jb
add
gs
gs
arpl
insl
gs
gs
arpl
gs
outsl
outsb
je
js
add
gs
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
push
outsl
inc
jae
imul
gs
outsb
jb
imul
jb
add
je
data16
dec
inc
add
popa
je
jae
outsb
fs
jb
arpl
push
dec
push
outsb
fs
jb
arpl
imul
cs
insb
add
add
test
scas
call
shr
xchg
aaa
mov
rol
or
rol
mov
cmp
bt
push
sub
cmp
sbb
mov
pusha
stc
cmp
pushl
sub
mov
pusha
call
data16
loopne
mul
mov
xorl
mov
out
jg
pop
fabs
repnz
outsb
je
mov
andl
jno
mov
pusha
cmp
adc
add
cltd
and
hlt
fsubl
out
and
push
icebp
jo
add
adcl
mov
inc
lock
dec
push
leave
sbb
repz
int
fsubr
ret
adc
jmp
cli
add
and
mov
adc
mov
leave
repz
enter
lods
popa
and
popf
xor
loope
push
sub
insl
jl
cmp
xchg
fstpt
and
repz
gs
lods
jecxz
add
or
std
jns
sub
xchg
aam
in
or
sub
mov
lock
mov
pop
jmp
mov
xor
in
cmp
gs
xor
fidivs
dec
stos
jnp
fcomps
addb
sti
cld
mov
lods
mov
cli
decl
xchg
mov
or
in
xor
sbb
insl
inc
inc
push
add
movsb
call
je
in
sbb
nop
std
mov
subb
mov
or
sbb
mov
and
mov
jne
xor
pusha
popa
adc
mov
bound
and
dec
mov
adc
or
pusha
xor
and
outsb
shlb
dec
sbb
jno
or
lods
ja
loopne
cmp
loope
cld
pop
mov
les
adc
notl
inc
fbld
out
pop
fsub
leave
stos
lcall
out
mov
shl
mov
jbe
add
out
addr16
jae
pop
rcrl
xchg
lock
sbbb
jns
in
inc
push
push
xlat
loopne
mov
mov
xor
and
lods
addr16
and
and
adc
shll
push
and
push
push
push
sbb
lods
faddl
mov
out
sti
dec
out
sub
ljmp
scas
push
add
inc
xchg
xor
sbb
and
add
dec
test
fistps
xchg
xor
enter
loop
mov
sbb
jo
lea
testb
in
lret
or
mov
or
sbbb
stos
inc
mov
data16
sbb
out
adc
inc
and
fsubrl
in
mov
mov
out
enter
outsb
xchg
shlb
call
add
and
les
repz
mov
pop
xor
jl
aaa
in
outsl
inc
clc
repz
hlt
or
pop
faddl
mov
fsub
inc
int3
out
nop
les
adc
push
arpl
mov
andl
pop
das
aaa
cmpb
adc
nop
in
pusha
cmpsl
jne
je
add
inc
mov
rclb
fwait
mov
popa
and
add
out
aam
lods
push
js
fnsetpm(287
movsb
push
out
call
or
roll
cmp
sub
xor
mov
jg
jmp
testb
sbb
add
cmc
adc
movsb
mov
out
or
std
test
js
je
jl
jnp
adc
repnz
add
push
clc
xchg
push
and
mov
mov
sbb
inc
fidivl
push
mov
fsubr
lods
lock
orl
out
xor
sbb
pop
cmp
dec
or
mov
lret
lock
push
dec
cmpsb
out
gs
stc
hlt
es
subl
out
fstpt
lock
mov
movsb
aam
mov
add
xchg
sbb
jo
jmp
aam
lds
add
add
mov
cmp
pop
adc
in
movsl
ror
mov
inc
dec
out
fstpl
hlt
lods
xchg
pop
addl
xor
pusha
and
push
and
mov
ret
push
xor
xor
sbb
ljmp
adc
xor
bound
pop
or
inc
or
lock
cmpsb
cmp
xor
sbb
fsubrl
cmpxchg
enter
addl
mov
sbb
dec
inc
orl
inc
mov
bound
adc
sbb
fsubrl
mov
inc
bound
add
mov
and
fstl
sub
out
pop
mov
test
imul
mov
push
ret
hlt
pop
push
xchg
push
sahf
fnstsw
in
int3
add
fdivs
test
push
xor
xchg
jge
mov
clc
popl
mov
mov
pusha
int
sub
push
sti
or
out
cs
xchg
xor
out
cmpsl
pop
sbb
inc
stc
jo
xchg
xlat
hlt
adc
pop
push
stc
andb
adc
mov
movsb
dec
inc
loope
stc
pop
insb
icebp
and
pop
xor
lahf
and
lcall
inc
inc
nop
pop
jb
bound
add
jmp
mov
in
sbb
and
mov
loope
mov
ss
repz
cli
mov
add
pop
inc
jns
out
sbb
sti
or
hlt
or
fmul
leave
jo
pusha
pop
inc
push
cmc
ret
shl
sub
insl
and
data16
xor
cmp
repnz
push
inc
lock
sub
cld
xchg
rol
clc
add
ret
shr
sub
and
clc
aad
dec
adc
cwtl
inc
adc
out
jne
hlt
lea
add
mov
shll
nop
push
pop
call
inc
out
mov
add
rcl
mov
call
fsts
not
cmpsl
add
mov
in
sbbb
test
cmc
mov
and
std
andl
nop
pop
arpl
push
xor
jbe
jecxz
out
adc
add
or
aad
cltd
out
repnz
in
int3
mov
dec
and
pop
in
out
shl
fmul
mov
mov
gs
sbb
mov
inc
cs
add
push
lock
mov
jae
xor
btc
testl
fdivrs
jae
clc
loop
adc
sbb
push
pop
xchg
adc
in
out
add
in
sarl
add
out
adc
jl
mov
pop
add
roll
dec
mov
std
lods
fs
pop
ret
int
js
sub
mov
ds
outsl
loopne
test
inc
or
push
js
and
add
fstpt
mov
andb
les
xchg
ret
imul
mov
call
clc
enter
rcl
and
std
adc
adc
push
aam
and
push
scas
sbbb
mov
scas
gs
jb
jmp
lret
mov
pusha
jmp
les
push
xchg
inc
inc
cmc
loop
xor
jp
cmp
out
inc
jne
clc
pushf
repnz
jp
lret
in
popa
xlat
mov
jp
inc
xorl
push
push
outsb
adc
ss
add
cs
je
and
fisubrl
jl
xchg
inc
xorl
mov
sub
orb
xor
push
fcmovnb
inc
mov
mov
mov
enter
sub
add
add
dec
or
xor
repz
aas
cmc
push
sbbl
add
or
sti
and
add
outsb
ret
jp
inc
adc
enter
movsb
out
or
adc
xor
test
adc
or
jo
mov
mov
shrb
icebp
or
in
bswap
pop
out
repnz
je
mov
adc
lock
js
fsub
nop
push
clc
or
cmp
mov
sbb
fsubs
in
sub
hlt
pop
jns
loope
out
inc
mov
add
add
dec
sub
mov
cld
jmp
jo
jns
es
jne
addr16
mov
nop
xor
subb
add
xor
call
inc
inc
cli
stc
push
mov
pop
xor
mov
out
in
je
jmp
sbb
loop
imulb
inc
jae
push
jmp
in
mov
sub
sbb
sbb
jmp
adc
or
in
push
loope
clc
push
stc
bound
out
orb
ret
sub
push
push
pusha
pop
mov
sbb
or
sbb
in
in
xchg
lock
movsb
jp
fstpt
sbb
add
out
jl
push
xor
out
inc
or
xchg
dec
mov
fsub
and
int3
sub
adc
sbb
adc
loope
xchg
dec
adc
cmpb
bnd
int3
iret
ljmp
stc
xchg
or
scas
icebp
out
or
adc
adc
jmp
jns
push
pop
loope
loope
imulb
inc
mov
pusha
cld
stos
mov
ret
mov
push
dec
loope
in
pop
dec
add
stos
mov
aas
jecxz
int3
pop
xchg
inc
lods
insb
add
test
and
sub
xor
adc
dec
mov
lods
push
xor
addb
push
sub
jp
jns
inc
test
rcrb
loope
ret
mov
mov
adc
das
jecxz
mov
inc
mov
int
cmp
sub
lods
jecxz
test
dec
inc
lods
fwait
cmp
pusha
sub
jne
out
adc
push
add
mov
out
insb
dec
add
xchg
dec
xor
in
mov
ret
cli
inc
sbbl
or
push
testb
add
stc
dec
sbb
or
xor
dec
out
roll
inc
hlt
test
xchg
and
cwtl
and
leave
into
cmp
or
daa
sub
push
and
fs
clc
loopne
sub
in
roll
or
fdivp
nop
pusha
add
in
inc
mov
xchg
jmp
add
repz
dec
popl
jl
aam
dec
cmc
movsb
sbb
bound
ret
cmp
hlt
dec
and
adcl
nop
fs
pusha
mov
shll
int
sbb
les
call
data16
out
add
or
mov
leave
ds
cltd
inc
scas
mov
aad
clc
or
mov
subb
out
test
and
lock
bound
fisttps
mov
xorl
or
mov
lret
sbb
pusha
fcompl
mov
test
sti
sbb
sbb
inc
or
inc
cmp
cmp
inc
lock
xor
adc
loope
lock
pop
sbbl
adc
out
orl
adc
sub
add
mov
repnz
and
hlt
out
sti
xor
int3
stc
std
rcrl
sub
xor
cmc
test
fbld
lods
or
or
dec
sub
dec
loope
jg
push
mov
sub
jmp
mov
or
inc
or
mov
sbb
push
cmp
jo
ds
push
loope
lods
pop
ret
cmp
int3
add
or
dec
out
aam
movsl
push
dec
test
out
in
int3
cmp
imul
sub
jns
cmp
adc
push
inc
mov
in
push
jne
jmp
sub
sub
repz
mov
and
cmp
cmp
inc
adc
sarb
clc
jp
lcall
mov
pop
jp
adc
inc
push
pushf
shll
stc
inc
mov
insl
repnz
data16
xorb
movsl
adc
xchg
sub
pushf
idivl
inc
jo
xor
es
in
xor
cmp
nop
pop
js
js
js
push
push
push
cs
mov
test
shr
imul
outsl
mov
movsl
out
scas
cmp
es
icebp
jne
jae
in
jnp
jbe
loope
imul
mov
icebp
dec
add
sub
icebp
stc
or
jns
imul
mov
add
aas
lea
rcrb
test
or
or
xchg
jae
mov
hlt
mov
cmp
call
jl
cld
push
and
sub
in
fdivs
lret
xor
imul
push
mov
clc
stos
jge
int
aam
fdiv
pop
and
xchg
dec
sbb
inc
faddl
or
mov
or
icebp
rorl
xchg
mov
xor
je
or
xchg
inc
in
push
sbb
push
loopne
jae
inc
xor
popf
nop
in
fnstenv
pop
imul
dec
jnp
mov
insl
dec
push
push
arpl
aam
incb
and
aad
jae
aam
push
enter
pop
sub
hlt
inc
clc
push
arpl
jns
inc
sbb
les
fnstenv
popl
cmp
jnp
dec
or
loop
int3
mov
cs
les
xor
ljmp
out
jecxz
jge
jbe
adc
sub
insb
inc
pop
dec
adc
cmp
xor
jne
cmp
arpl
pop
ss
cmpsl
pop
cs
mov
addb
jmp
pop
adc
je
dec
push
aam
push
imul
out
xchg
js
adc
jle
repnz
jne
rcrl
mov
leave
lods
cmp
xor
sbb
jp
cmc
clc
jnp
loope
and
sbb
sub
clc
jae
ret
arpl
xorl
mov
sbb
and
popa
clc
inc
sub
xor
sbb
mov
daa
adc
sub
mov
outsb
xchg
mov
pusha
add
rcll
lock
inc
push
push
jno
inc
mov
sub
mov
xor
sbb
stos
test
adc
push
pop
in
mov
add
outsl
rcll
in
punpckhbw
add
mov
and
dec
mov
jecxz
push
mov
lock
and
jle
std
cwtl
and
rorl
mull
nop
pop
adc
in
xchg
cmp
add
shrl
repnz
out
jecxz
jo
and
enter
ret
enter
pop
cmp
mov
mov
and
cmp
loope
or
in
repnz
int3
jb
pop
mov
push
dec
cmp
daa
and
mov
out
lock
in
out
orl
rcll
insb
pop
jae
dec
jo
mov
out
pop
push
adc
or
pusha
add
shr
adc
popa
inc
pusha
or
cmp
insl
popa
fwait
hlt
push
iret
shll
mov
inc
addr16
mov
jmp
sub
and
jmp
and
std
mov
sub
add
xor
loope
add
call
push
jo
sub
sub
mov
add
fildl
or
shll
jp
jecxz
inc
cmpl
pop
and
loope
inc
inc
int3
push
adc
mov
cld
lods
mov
testb
cmp
sub
inc
xor
inc
loopne
mov
lods
sub
mov
loope
xchg
inc
repnz
je
xor
inc
pusha
pop
xchg
mov
or
push
sbb
push
jecxz
aad
fwait
add
jmp
adc
mov
int3
jmp
pop
icebp
xor
pop
add
loope
fwait
inc
arpl
mov
loop
jnp
lock
pop
xorb
loop
in
mov
or
sar
lret
loopne
mov
or
adc
loope
mov
loop
lock
faddl
push
mov
lock
hlt
push
pop
pop
movsb
cld
and
jbe
loope
dec
mov
push
fs
inc
sub
shll
lock
std
xor
repz
popa
push
loope
pop
sub
and
xor
mov
sub
cmc
lock
adc
mov
pop
out
flds
add
addl
sub
xchg
das
xor
jb
lods
in
inc
adc
push
cwtl
inc
mov
out
inc
xchg
cmp
xlat
repnz
shll
orb
or
out
mov
or
mov
ret
mov
cmpsl
add
and
sub
sbb
jp
popl
and
repnz
hlt
jo
sarb
cmp
lock
adc
subl
test
push
jecxz
mov
xor
sti
test
stos
xor
sbb
das
loop
sub
and
popf
or
int3
out
push
mov
add
rorb
push
inc
popf
add
test
or
pop
mov
in
mov
fs
and
cmp
loopne
push
add
xlat
and
cmp
mov
cmp
jo
rcrl
push
addb
imul
repz
sbb
push
mov
cwtl
jns
in
jmp
mov
mov
xor
jne
push
push
mov
pusha
add
outsl
loop
sbb
or
in
fisttps
js
scas
inc
js
dec
scas
insb
adc
sbb
or
test
test
mov
mov
mov
fisubl
mov
callw
mov
addl
dec
hlt
push
push
mov
and
in
daa
in
sti
int3
fstpt
ljmp
aad
sub
out
imul
scas
jbe
jo
add
push
out
inc
xchg
shll
mov
sbb
and
inc
mov
popa
dec
insb
daa
or
enter
stc
in
std
scas
adc
xchg
sahf
sub
push
adc
rclb
cmp
sbb
jp
and
stc
cmc
and
dec
adc
inc
ficomps
es
push
push
icebp
sub
test
lret
sbb
mov
das
push
xchg
cwtl
es
cwtl
es
test
xor
test
push
in
mov
imul
bound
add
push
pop
pop
shll
and
adc
lret
mov
xor
or
out
push
mov
push
and
les
jae
rclb
jae
repz
pusha
pushf
fs
sub
add
repz
adc
pushf
rclb
inc
add
push
jo
in
int3
mov
and
inc
jne
shlb
clc
lahf
inc
fsts
or
xchg
or
xchg
sub
dec
shrb
cmc
xor
loop
add
push
xchg
sub
fnstsw
insb
inc
push
cwtl
es
andb
mov
add
es
inc
or
mov
add
push
xchg
add
push
sahf
repnz
ret
int
inc
and
bswap
or
sbb
ret
push
push
sub
push
mov
shr
out
ds
flds
out
add
adcl
mov
push
adc
mov
in
mov
pop
in
stc
and
iret
xchg
test
adc
push
xchg
mov
movsb
mov
fistl
cs
mov
repnz
shlb
push
mov
insl
test
pop
mov
sbb
sub
test
pop
rol
fistl
inc
xchg
add
mov
sub
lock
xchg
pop
in
sti
sub
mov
inc
and
in
xchg
cmc
cmp
scas
in
fsts
mov
cmp
add
mov
ficoml
add
or
ljmp
jns
inc
insb
jmp
cmp
add
inc
adc
add
lods
push
mov
mov
test
or
add
sbb
imul
cmpsl
or
ret
and
cmp
or
jno
jge
xor
cltd
hlt
mov
loope
dec
jo
clc
bound
or
std
fidivs
and
jp
and
mov
cld
loop
dec
popa
nop
out
mov
adc
adc
mov
mov
and
mov
call
mov
push
mov
scas
cmp
ret
test
and
jno
adc
rcr
int3
shrb
or
fmull
xchg
fcmovb
jno
sbb
or
inc
out
movsb
and
xor
sub
or
sarb
xor
or
mov
outsl
and
sub
fistpll
add
punpckldq
out
cmpsl
fdivrl
sti
ljmp
cmp
das
push
cld
scas
add
jl
repnz
cmpsb
dec
loopne
out
push
jmp
sbb
push
or
popa
cmpb
andl
xor
push
add
cli
xor
mov
and
shll
and
loop
add
and
adc
movsl
in
mov
mov
idiv
stc
shlb
sub
and
sub
ljmp
push
stc
gs
ljmp
in
jne
inc
and
out
insb
cli
pop
cmpsb
popa
out
or
xchg
fcomps
push
std
dec
dec
hlt
jmp
sub
add
outsl
js
inc
test
xchg
in
pand
cmp
or
jp
xchg
pop
enter
lock
rolb
dec
rolb
adc
test
out
adc
in
in
lods
xchg
mov
push
repz
mov
lock
sbbl
sub
int3
cmc
push
mov
imul
mov
sbb
or
push
adc
push
adc
hlt
mov
repnz
in
pop
push
adc
jmp
jbe
add
fistps
sbb
lret
inc
mov
cld
lock
jecxz
popl
or
add
xchg
in
and
fmuls
lods
pop
test
lock
inc
icebp
sbb
sub
sbb
jnp
lods
out
xor
mov
cmp
jb
outsb
mov
addr16
fninit
push
lret
lock
loope
mov
fmuls
or
mov
pop
adc
sub
or
loope
adc
int3
lock
icebp
fildl
inc
rcll
mov
arpl
dec
push
ret
fs
clc
sbb
cmp
sub
mov
mov
imul
sub
xor
movsb
daa
loop
push
out
outsl
sub
mov
mov
pop
out
out
lock
pop
int3
pop
mov
and
mov
out
dec
mov
and
xor
loope
iret
call
das
hlt
fwait
mov
lret
lock
jb
push
movsb
arpl
cmp
rep
dec
ds
dec
add
adc
pop
arpl
jo
pop
cmc
push
mov
in
dec
sbb
out
mov
call
jmp
jne
sub
mov
repnz
mov
or
pusha
loope
add
out
inc
lods
je
aad
ljmp
add
cltd
movsl
icebp
std
lcall
and
ljmp
leave
mov
and
es
mov
jo
enter
data16
push
movsb
adc
push
orl
data16
out
sbb
mov
adc
popa
sbb
and
lods
in
push
or
add
dec
jo
rclb
out
jb
dec
inc
inc
mulb
in
jl
push
jmp
in
out
popa
lock
test
adc
xchg
mov
mov
mov
loop
and
add
adc
and
and
add
adc
or
insb
add
xor
jns
div
push
aam
jbe
pop
jl
stc
inc
test
xor
inc
movsb
pop
cmp
xchg
aad
out
cmp
addr16
out
or
andl
sbb
std
jmp
jns
add
pop
negb
jmpw
int3
pop
cmp
lods
inc
pushf
insb
pop
dec
insb
inc
inc
fisttpl
lods
mov
out
out
xor
push
shrl
lds
dec
fildl
jl
dec
push
mov
inc
or
int
dec
loope
xor
js
adc
push
mov
add
shrb
testb
mov
adc
ret
or
in
xchg
fsubl
sbb
push
push
jp
push
mov
xor
adc
mov
fwait
rorl
mov
jo
in
mov
js
aad
or
popf
inc
sbb
es
cmp
mov
ret
pop
sar
or
mov
push
dec
pusha
inc
lods
push
fsubl
out
add
mov
jge
mov
minps
pop
shl
daa
addr16
mov
movl
cmpsl
jp
sti
pop
fistpl
sbb
neg
fnstenv
jg
add
push
or
sbb
gs
fsubl
mov
sbb
imul
sub
push
push
add
mov
inc
ror
mov
ret
sbb
cmp
pop
cmp
popf
inc
cli
xchg
push
jns
inc
sub
leave
movsb
enter
push
lds
sub
mov
xor
jecxz
mov
cmpsl
stos
jecxz
jp
stc
push
sub
and
pop
psllw
clc
add
testb
fstps
je
sub
das
lahf
add
lret
and
rcrl
inc
adc
mov
arpl
int
cmp
sarb
cmp
mov
sbb
or
add
rorl
mov
in
jo
shll
cmpsb
sbb
push
lds
fdiv
dec
int3
push
pop
xchg
addr16
inc
inc
push
sub
inc
mov
push
jmp
in
push
adc
cltd
rorl
sub
andb
and
nop
cmp
movsl
popf
call
jmp
add
xor
adc
xor
movsb
stc
add
mov
lahf
out
cmpl
ret
mov
fmuls
inc
or
and
loope
adc
or
or
sbb
push
lock
hlt
cmp
cltd
out
push
sub
movsl
pop
mov
repz
and
sub
rolb
js
out
lea
add
jo
iret
cli
out
ret
and
or
cld
or
ja
fidivrs
add
rclb
mov
rolb
mov
add
fwait
sar
sbb
loope
mov
lahf
fsub
jp
lock
mov
hlt
add
xchg
aad
dec
call
ret
hlt
outsb
pop
lods
sbb
cltd
adc
and
and
pop
icebp
cli
rclb
stc
in
jp
adc
jecxz
int
sbb
in
add
shl
inc
dec
mov
sub
jns
push
xchg
leave
add
lods
hlt
fsubrl
pushf
fiaddl
adc
push
rolb
add
cwtl
js
flds
cmpsl
repz
xchg
jl
leave
imul
mov
push
insl
std
lcall
insb
jmp
cmp
test
ret
int3
mov
or
xchg
outsb
adc
push
xor
fsts
add
data16
imul
dec
mov
add
sub
fdivr
or
fnsave
and
mov
xor
mov
push
sub
in
sbb
jmp
insb
daa
inc
cmc
push
sub
xlat
out
fidivrl
xor
pop
psubb
in
out
inc
mov
dec
loop
xor
cmpsl
pop
in
cld
pushl
lock
mov
push
mov
jl
or
out
jb
xchg
mov
pop
pop
je
push
jbe
push
sahf
sbb
pop
mov
shr
les
out
outsb
or
in
mov
fs
sub
jno
mov
ja
lock
sub
out
add
sub
cmpsl
lods
adc
cmp
into
mov
mov
dec
xorl
jb
jo
les
je
cmp
leave
fdivr
cmp
add
mov
out
sbb
and
or
fsts
in
pop
shlb
popf
lods
pop
scas
notl
cld
mov
dec
aad
pop
or
mov
lds
js
js
call
sub
icebp
lret
test
sub
mov
push
int3
jp
je
or
push
jl
xor
sti
or
in
mov
test
jecxz
mov
sbb
movsb
add
lret
sub
jnp
in
int3
stos
test
inc
sbb
adc
add
in
add
int3
jmp
cmp
lock
add
loope
mov
and
insl
adc
in
mov
sub
jo
fildl
add
xchg
iret
add
pusha
jg
mov
jb
ds
jecxz
inc
dec
jp
mov
gs
pushf
push
ftst
sub
sub
mov
out
orl
adc
jmp
and
lods
enter
pop
inc
loopne
rorl
pop
lock
xor
out
in
push
psubq
sub
cwtl
xor
jmp
shrb
push
sbb
inc
flds
ret
movsb
testb
cld
es
roll
xor
orl
out
dec
call
test
stos
inc
mov
in
xchg
ss
adc
test
add
or
cli
sbb
adc
fstl
inc
lods
popl
icebp
mov
mov
fndisi(8087
jnp
and
jno
call
dec
cs
ljmp
pop
mulb
cmp
movb
pop
icebp
ret
inc
xchg
ret
cmp
xor
xchg
inc
test
cmp
or
flds
xchg
ret
nop
add
jg
lret
adc
in
cmpsl
sub
xor
or
add
int3
add
ret
hlt
int3
stos
repnz
dec
jecxz
out
std
adc
xor
in
cmp
pop
push
adc
lret
js
fadds
addl
frstor
imul
inc
xchg
orl
pop
in
push
adcb
mov
or
into
pop
lcall
push
inc
test
sub
fs
lock
add
lods
cld
in
test
sbb
cmp
cmp
fmulp
aam
xchg
out
mov
mov
rorb
loop
scas
lods
in
or
inc
repnz
mov
rolb
pop
push
mov
out
lock
stc
mov
jo
nop
ret
xchg
push
xchg
adc
mov
push
inc
inc
push
aaa
out
or
jp
mov
rcl
movsl
mov
mov
mov
loope
jbe
and
je
inc
fdivs
add
mov
jle
lock
add
sub
popa
jl
lods
xor
cmc
test
test
lcall
jle
cmp
push
in
daa
sub
cmp
lea
sbb
mov
sub
push
repnz
push
pusha
jg
andl
dec
jmp
and
in
loope
andl
mov
sbb
bnd
mulb
mov
data16
xchg
cmp
sbb
and
sub
xor
lock
push
cli
icebp
lret
pop
ret
adc
hlt
mov
and
in
jl
xchg
mov
mov
std
add
and
pusha
mov
cltd
jl
movsl
and
mov
fs
pushf
and
cs
scas
dec
xor
push
fwait
add
xchg
inc
lods
pop
lret
sahf
cmp
rcrl
sbb
cmp
pop
add
out
mov
cld
mov
inc
out
push
js
push
lock
xchg
or
idiv
sub
and
cmpsb
mov
divb
xchg
inc
mov
or
jl
inc
fisubrl
lods
and
pushf
adc
test
push
dec
push
in
mov
xchg
mov
mov
mov
addr16
add
cld
icebp
and
mov
sbb
movsb
adc
mov
fisttps
sub
andb
andl
add
insb
push
push
ja
roll
cmp
aam
sbb
out
call
data16
in
mov
add
mov
mov
jb
sbb
popa
cwtl
mov
add
and
mov
push
mov
dec
add
out
and
shl
adc
or
jno
hlt
icebp
nop
shll
out
push
adc
and
test
sub
gs
inc
add
adc
cld
push
stos
into
jecxz
push
stos
in
push
or
lea
dec
inc
dec
jmp
incb
cmp
test
inc
das
pop
add
dec
out
push
test
ja
add
ljmp
cmp
fldenv
lods
test
add
sbb
push
or
pop
cmc
cmp
xor
jno
testb
lods
rcl
adc
add
cmp
dec
pop
jns
popf
push
lock
push
add
lret
and
lock
xchg
adc
fsubrl
int
dec
pop
mov
data16
out
lret
or
fsubrl
dec
push
pushf
push
sbb
sti
in
and
inc
inc
xchg
jns
stc
ret
pushf
bnd
lret
lock
aam
daa
lods
mov
iret
xlat
in
dec
sub
icebp
or
incb
imul
xchg
cmp
inc
xorl
movsb
push
pusha
call
xor
inc
pop
jg
adc
jle
pushw
pop
cmp
xor
inc
pusha
inc
clc
adc
aad
xchg
aas
ss
cmc
or
popf
leave
dec
subl
repnz
jo
jo
ljmp
sub
push
jecxz
jae
pop
data16
push
jbe
sub
or
cmp
xchg
and
push
mov
js
sub
stc
fidivs
daa
sbb
rorl
and
mov
sub
mov
nop
pop
mov
stc
adc
jp
dec
ljmp
inc
int3
mov
cmc
adc
jns
fnstenv
stos
stos
or
cmp
ficomps
add
icebp
fsub
das
push
xor
mov
jne
test
lock
push
arpl
sub
dec
dec
scas
clc
xlat
pop
mov
cmp
sub
notl
and
cmp
push
imul
bound
inc
cmpl
xchg
pusha
je
inc
pushf
or
or
cmp
adc
xor
adc
rclb
push
cmpsl
add
dec
pop
mov
repnz
xchg
dec
push
and
jmp
inc
sub
inc
fsubr
movsb
jae
mov
sub
or
xchg
pop
imul
cmp
jo
mov
mov
inc
outsb
inc
cwtl
jo
scas
push
out
ss
rolw
sbb
and
dec
xchg
mov
xor
push
inc
xchg
cld
sbb
adc
pusha
inc
mov
inc
xorl
cmp
mov
xchg
rorb
lock
xor
outsl
push
mov
popf
je
lret
add
adc
or
sub
or
inc
test
arpl
jb
lods
js
fimull
cli
inc
jle
jbe
inc
inc
xor
pop
shr
mov
das
pop
push
mov
add
mov
shll
fsubs
inc
or
fidivs
mov
pop
pusha
lock
ficoml
and
mov
mov
icebp
mov
sbb
aas
mov
mov
sub
sub
jl
dec
cmpsl
repz
or
movb
xchg
in
xor
daa
add
aam
mov
xor
movsl
add
adc
push
jp
dec
scas
xchg
and
cwtl
out
lock
orl
cmp
or
inc
and
sbb
lea
out
add
call
in
sbb
add
jnp
jge
rorl
mov
and
jmp
in
and
xchg
rcll
stc
iret
pop
and
test
xchg
dec
mov
dec
inc
je
adc
xlat
test
xchg
in
or
das
xor
test
movl
in
sub
sbb
xor
push
daa
out
rorl
pop
sbb
fisttpl
hlt
xlat
jge
shll
repnz
and
notb
mov
mov
insb
jnp
mov
jecxz
add
jmp
or
ficoms
mov
jecxz
mov
cwtl
repnz
mov
loope
fstpl
push
xor
adc
lock
jecxz
add
repnz
jno
add
add
jbe
jecxz
add
inc
and
popf
add
pop
sub
jne
jecxz
arpl
push
sub
inc
sbb
add
sub
es
mov
adc
add
sbb
push
sub
push
aas
jnp
fcom
cmp
enter
or
cmpsl
js
gs
je
jae
push
roll
test
mov
in
dec
mov
mov
bound
enter
daa
arpl
stos
icebp
adc
in
movsb
ret
adc
xchg
insl
arpl
gs
jns
bound
repnz
pop
out
cmp
xlat
adc
leave
jno
jne
andb
in
cmc
jmp
cld
jmp
jo
scas
lahf
cmp
ret
cmp
in
lds
stc
sbb
clc
lods
stos
push
sub
cmp
add
sti
pop
scas
push
xor
sarb
nop
and
call
pop
xchg
pop
test
xchg
cwtl
push
sar
jl
shl
stos
nop
in
rorb
pop
loop
pusha
mull
jg
arpl
sub
sbb
sbb
adc
ret
mov
adcb
dec
pusha
aam
and
ret
cli
lods
dec
and
jmp
inc
and
push
dec
pop
rorb
xor
and
out
mov
arpl
inc
outsb
ss
inc
or
repnz
test
vprotw
out
pop
ret
fiadds
mov
xchg
and
dec
adc
mov
mov
in
cs
cld
mov
and
stc
out
ret
shrl
call
add
xor
ret
sbb
lods
pop
jno
push
dec
stc
fsubr
inc
jo
and
or
stos
inc
rorb
jb
sub
mov
mov
daa
xchg
lock
xchg
mov
popf
push
int3
jne
and
andb
add
aaa
clc
sub
mov
mov
xlat
stos
sbb
sbb
faddl
rdtsc
jo
lret
add
mov
inc
popf
mov
inc
xor
out
mov
and
das
in
add
mov
lock
xor
xchg
mov
loop
mov
mov
xchg
jno
cmc
icebp
out
mov
test
mov
inc
mov
push
sti
pop
dec
xor
mov
and
add
xor
and
add
add
or
adc
pop
mov
dec
jo
fldenv
cld
fimull
sbb
push
sarl
pop
pop
repz
mov
add
jecxz
inc
fisttps
pop
aad
les
or
jo
jo
sbb
or
insb
sti
pop
popa
repz
mov
inc
imul
cmpsl
aad
insl
sbb
add
sbb
push
xor
pop
adc
adc
addr16
sub
add
or
sub
fdivr
and
aas
mov
loopne
mov
std
adc
add
mov
mov
xchg
sub
jp
mov
filds
pop
xchg
daa
cmp
mov
in
sub
idivl
push
mov
out
or
loopne
jg
outsl
lea
std
negb
int3
push
sahf
xor
cmp
mov
push
adc
and
mov
sbb
mov
fimuls
or
ss
sahf
mov
js
cli
out
add
inc
js
je
jb
arpl
jae
mov
mov
lea
jb
cmc
cmp
pusha
pushf
call
jmp
clc
ror
test
bt
cmp
lahf
lea
lea
movzbl
pushf
pop
mov
mov
call
mov
jmp
pusha
jmp
pushf
pushf
call
int
and
dec
dec
loopne
push
jo
add
mov
mov
repz
push
push
push
sbb
add
je
or
pop
add
ja
out
sbb
sti
dec
adc
pop
jmp
shlb
cwtl
popf
or
push
mov
xor
jb
mov
cmc
inc
mov
mov
adc
fs
in
cmc
icebp
pop
sbb
imul
and
mov
cld
jmp
call
bound
jecxz
addr16
push
ret
cmp
lds
adc
in
sbb
into
inc
cld
clc
pop
mov
les
and
push
test
lods
and
jae
pop
mov
popa
add
xlat
jecxz
cmpsl
dec
and
xchg
inc
outsl
xchg
xchg
or
mov
jnp
cmc
sbb
out
dec
mov
sbb
pop
inc
push
insb
jo
mov
cmp
insl
ja
mov
stc
xor
mov
mov
mov
sub
clc
aaa
jp
mov
cmp
cmp
cmp
pop
sbb
sbb
sti
mov
dec
lock
sub
cwtl
mov
stos
out
push
ljmp
fmuls
inc
push
xor
das
mov
sbb
addr16
lea
or
inc
lret
cli
mov
repnz
in
js
int3
cmp
cli
mov
cmpsl
call
les
pushl
popl
pusha
cmp
pushl
jmp
not
setb
mov
jmp
shr
pushf
cmp
push
pushf
pushf
pushf
lea
je
pushf
pusha
clc
cmp
pushl
lea
je
jmp
dec
repnz
in
jge
xchg
sbb
and
or
test
xor
repz
inc
inc
out
xchg
ret
xchg
imul
jmp
xchg
pop
mov
mov
test
pushf
and
icebp
not
cmp
test
rorl
aam
movsl
loop
mov
pop
sub
xchg
jmp
xchg
repz
imul
dec
gs
dec
test
andl
call
lahf
dec
mov
mov
mov
in
icebp
and
mov
push
movsb
leave
ret
and
aam
clc
lcall
cmpsl
repnz
ljmp
dec
testb
sbb
dec
cli
dec
adc
aam
scas
mov
mov
push
pop
dec
inc
aaa
adc
dec
pop
sbbl
sarb
xorl
push
xor
test
inc
leave
sub
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
movsl
sarb
pop
xchg
sub
xchg
sub
jl
and
outsl
pop
daa
dec
daa
add
out
jge
sbb
addl
jg
xor
jmp
icebp
mov
and
inc
mov
xor
leave
or
push
push
je
loop
sbb
or
pop
cmpb
lods
enter
mov
cs
insl
stc
push
adc
xor
mov
es
outsb
cwtl
scas
andl
lea
je
clc
pusha
cmp
jmp
mov
cmp
pusha
jmp
fwait
jl
sub
iret
sarb
lahf
and
dec
pop
xchg
inc
decb
in
cld
push
repnz
out
scas
dec
mov
dec
mov
roll
ljmp
xchg
shrl
jle
jae
inc
push
js
wbinvd
aaa
cmp
pop
leave
xchg
in
data16
ds
xlat
in
ficoml
adc
jmp
cli
adc
cmp
adcb
cmp
sahf
shrb
inc
mov
add
dec
inc
das
lods
pop
or
call
shrb
lods
mov
dec
ds
mov
lock
leave
scas
icebp
lret
xor
scas
ss
or
clc
sub
movsb
fs
fidivl
mov
mov
pop
enter
xchg
pop
test
mov
sub
xlat
popa
aaa
in
mov
lret
jb
pop
xchg
shll
jecxz
xchg
out
movsb
dec
jge
lahf
leave
mov
xor
movsl
jbe
js
cmp
cmp
test
jl
ljmp
mov
cmp
rol
inc
incl
pop
pushf
movzbl
mov
movsbw
lea
call
and
mov
push
sarb
xor
fcoms
mov
ret
stos
push
iret
cmc
and
ja
inc
pinsrw
fbstp
das
adc
mov
xor
xor
ficoml
dec
xchg
sub
sbb
out
hlt
pop
stos
and
sti
add
loope
jge
cs
xor
orl
jnp
pop
push
xchg
xchg
rcl
fimuls
outsb
je
and
addb
push
movb
pushf
lea
jmp
ljmp
ret
stos
in
lahf
mov
cmpsb
xor
test
cmpsb
and
bound
bound
dec
lods
cmp
fstl
jmp
cmpsb
loopne
lret
inc
mov
jmp
mov
fidivs
add
and
inc
push
push
loopne
insb
jle
bound
or
outsl
das
stos
in
loope
in
lea
test
inc
lahf
ret
movsl
mov
lahf
xchg
sbb
hlt
setns
pop
sub
mov
orl
xor
xchg
test
cmc
cmp
call
cwtl
push
cmc
loop
push
mov
sub
pop
stc
and
nop
repz
cs
movsl
mov
fcmovu
inc
add
popa
insb
in
or
and
faddl
xor
mov
insl
rorl
dec
insb
xor
addl
xorb
mov
push
xchg
sbb
add
push
test
loopne
jmp
imul
pop
sahf
sub
into
stos
mov
cmc
in
dec
push
js
push
jno
fmul
and
jle
mov
push
sahf
mov
jns
and
push
movsl
xchg
movsl
xchg
mov
test
dec
orl
jae
add
pop
dec
sub
sahf
fcmovb
hlt
inc
clc
mov
clc
jmp
mov
lds
cmpsl
mov
iret
icebp
and
xor
repz
ss
lahf
dec
xlat
ja
cs
jo
outsl
adc
shll
xchg
stc
mov
pop
and
pop
push
nop
dec
out
mov
dec
dec
je
adc
pop
sbb
mov
rcrb
push
insl
xchg
lods
dec
scas
xchg
mov
xchg
push
adc
out
sub
mov
xlat
fwait
jne
shr
rol
xor
push
and
fwait
sahf
rcrb
ret
pop
and
in
add
lcall
movsl
inc
call
push
repz
into
rcll
sub
dec
xor
xor
scas
mov
inc
in
rclb
insl
icebp
int
cld
push
sub
mov
sbbb
pop
int
push
mov
outsl
jb
arpl
ror
bnd
jbe
lods
popf
and
or
inc
fsubp
mov
sahf
sbb
leave
in
int
dec
mov
repnz
lds
and
jb
xchg
addr16
ss
xchg
cmp
push
push
lret
mov
jle
data16
add
inc
lds
push
mov
mov
loop
js
xor
mov
cmp
aam
cli
inc
sbb
leave
mov
outsb
cmp
dec
pop
xchg
jmp
xor
or
jge
mov
mov
test
loopne
in
inc
rcrb
mov
pop
mov
popa
inc
or
dec
xor
add
test
mov
cmp
arpl
aad
sbb
sbb
test
mov
jae
lods
in
xchg
enter
fdiv
sbb
cmpsb
mov
xor
pop
jae
pop
mov
add
cld
sbb
mov
imull
or
and
sub
cltd
mov
sbb
cld
and
jmp
bswap
lea
movb
movl
pusha
mov
pusha
pushl
ret
lea
jae
pushf
bt
pusha
mov
cmp
pushf
call
and
jmp
pusha
mov
pushf
call
lret
mov
mov
push
outsb
push
loope
and
sbb
call
clc
repnz
adc
inc
mov
bound
inc
insl
mov
push
inc
inc
and
mov
adc
in
inc
mov
dec
dec
mulb
xor
xchg
movsl
mov
pop
push
mov
popa
fcmovnbe
insl
fwait
js
fdiv
decl
or
cmp
jns
lods
xlat
adc
js
pop
lods
adc
add
pop
pusha
pusha
pushl
ret
pushf
lea
jae
push
pushf
push
jmp
xor
stc
clc
pushl
test
repnz
call
pusha
lea
je
push
pushl
sub
test
cmp
pushl
lea
ja
pusha
mov
imul
call
mov
sub
ja
pop
cmp
fcomps
mov
fdivl
orb
mov
cmp
in
jmp
push
stc
test
mov
or
scas
in
mov
fdivs
push
xorl
loop
mov
push
jg
xchg
mov
lds
das
mov
dec
add
cld
push
psubusw
cli
and
inc
dec
data16
dec
and
sbb
orl
jmp
in
call
lea
jne
pushf
pushf
lea
jb
pushf
stos
pushf
pusha
mov
mov
lea
jmp
mov
movsbl
push
movsbl
push
or
shld
rcl
bswap
push
add
daa
mov
pusha
clc
test
movb
pusha
pushl
lea
je
ror
xchg
shr
mov
xor
add
stc
mov
test
cmc
stc
cmc
test
pusha
call
rep
bswap
mov
jmp
ds
pusha
mov
cmp
or
cmp
pop
add
push
loop
or
cmp
cmc
lds
push
adc
pop
mov
xor
fwait
pop
cmp
and
sbb
pop
xor
xor
inc
push
mov
xchg
pop
fldenv
dec
fiaddl
stos
enter
xor
mov
aaa
push
call
cli
add
fsubrp
in
xor
je
xchg
mov
push
push
or
and
jne
jp
movb
pushf
push
movl
movb
pusha
lea
jmp
mov
cmpb
push
daa
cltd
push
cmp
push
shll
mov
add
push
clc
aas
outsl
mov
mov
xor
xor
out
jbe
sbb
or
lock
faddl
mov
sbb
adc
out
push
mov
shrl
pushf
inc
scas
mov
icebp
inc
push
inc
sub
ljmp
shlb
dec
fisttpl
pusha
and
xchg
popf
add
inc
ficoml
lcall
mov
inc
xor
mov
pop
repnz
loop
mov
inc
jge
cmc
scas
dec
fsts
xchg
sbb
pop
aad
mov
sarl
sbb
cmc
xchg
in
or
push
lret
inc
or
push
xor
adc
sti
rorl
adc
pop
xor
mov
stos
je
pop
lahf
in
ret
jnp
imul
dec
cmp
repz
mov
push
pop
jnp
popf
iret
jmp
sub
pop
jns
jge
and
mov
push
pusha
ror
stc
pushl
stc
jmp
lea
jne
pushf
call
movb
lea
call
push
jmp
push
inc
call
mov
clc
push
movw
test
push
pushf
mov
pusha
lea
je
clc
stc
jmp
pusha
jmp
clc
shl
add
jmp
lea
je
or
push
movsbw
sub
test
xchg
movzbw
mov
movsbw
and
btc
mov
btr
xor
shr
sub
cmp
and
pusha
mov
bt
cmc
jmp
call
pushf
cmp
cmpb
pushl
pushf
lea
jne
bsr
inc
and
ror
sub
movzbw
mov
inc
call
bswap
inc
js
inc
add
movsb
dec
rolb
jbe
test
mov
dec
jp
mov
mov
leave
inc
sbb
ds
mov
aam
cmp
in
mov
stos
add
insb
out
xchg
jge
shr
adc
imul
xlat
mov
mov
lea
sbb
push
jns
xor
and
fadds
mov
sbb
test
mov
clc
push
cmp
bound
js
inc
leave
sub
push
pop
push
inc
add
adc
cmpsl
sbb
jae
ja
mov
sahf
sbb
push
leave
rorl
xlat
cmp
cmpsb
test
cs
imul
add
cmpb
fnstcw
dec
mov
mov
jae
push
push
jae
popf
lock
inc
scas
imull
faddp
and
in
push
xchg
aas
xchg
push
push
ss
je
stos
mov
and
rcrl
mov
sub
sti
mov
mov
adc
jl
lahf
imull
mov
and
mov
lahf
jg
data16
dec
leave
fstp
xor
dec
ficoms
sbb
or
jno
pop
roll
div
mov
jb
mov
jle
sub
repz
lret
xchg
push
push
push
inc
dec
inc
mov
mov
pop
ror
ror
dec
mov
push
push
imul
clc
insb
xchg
mov
psrld
and
xchg
test
mov
fwait
inc
nop
push
mov
cmpl
roll
mov
push
mov
ret
mov
repz
ds
daa
es
inc
mov
lock
pushf
outsl
push
cmp
sub
shrl
arpl
mov
mov
mov
mov
pop
in
in
test
into
inc
imul
aaa
enter
sub
xor
nop
xchg
cwtl
add
aas
and
out
scas
add
sub
repnz
fidivs
xor
inc
sarb
loope
sub
xchg
inc
lcall
imull
cmp
pop
repnz
test
popa
rcll
or
dec
push
daa
sub
push
adc
stos
vpaddb
outsl
imul
cmp
pop
mov
add
cmpsb
mov
daa
and
outsb
lds
insl
lret
fstl
xor
or
insb
lcall
iret
mov
cmp
jb
imul
mov
dec
adc
push
lea
jae
pusha
movw
pushf
pushl
sub
pushf
jmp
loope
pop
pop
pop
push
shrb
int
sub
das
mov
cmp
lock
int
shr
and
mov
inc
notb
adc
in
sbb
js
arpl
jnp
cmpsb
cmp
inc
lret
xchg
flds
xor
inc
xchg
inc
jp
loop
dec
lahf
clc
mov
jg
pop
loope
sbb
mov
cmpb
xor
fs
testl
mov
sbb
cmp
sarl
dec
dec
sbb
mov
adc
repnz
lock
punpckhbw
ss
andb
cli
andl
aaa
adc
adc
push
shrb
xchg
dec
ret
xchg
inc
rolb
sbb
mov
jnp
fcoms
cmp
stos
insl
std
es
ss
pushf
mov
cmp
push
dec
inc
lods
add
fdiv
loopne
fisubs
mov
enter
cmp
add
push
lods
cltd
fidivrl
mov
inc
inc
pop
xchg
cwtl
sahf
enter
and
lods
shld
neg
bts
add
mov
stc
test
cmpb
jmp
mov
lea
jbe
cmp
shrd
cmc
cmc
sub
pushf
shr
test
xchg
mov
lea
movzbw
xchg
add
neg
mov
add
add
test
shr
movsbl
movsbw
dec
mov
sub
je
adc
add
pusha
mov
lea
call
pushf
mov
pushf
pushf
pushl
lea
jmp
mov
test
pusha
mov
pushf
lea
je
bt
clc
add
clc
cmp
jmp
lea
je
pusha
add
push
cmp
pusha
call
cmc
not
btr
bsf
push
add
rcr
mov
btr
adc
rcl
sub
cmp
btr
call
lea
jne
btc
sub
adc
mov
and
clc
mov
add
xor
shl
mov
jmp
pusha
adc
pushf
pushl
movb
push
lea
jae
pusha
push
lea
jne
push
call
dec
das
mov
mov
sbb
jge
mov
jle
jbe
rorb
aas
sub
adc
in
outsb
xchg
xchg
pcmpeqd
xchg
xor
inc
or
loop
fcomip
inc
cmpsl
divl
xchg
jbe
ds
test
jge
push
and
pusha
mov
jecxz
loope
aaa
adc
sbb
cmp
and
xorl
rcrl
cmp
xlat
cltd
into
xor
pop
sub
int
shll
xor
mov
push
cmp
lcall
aad
adc
popa
stc
fnsave
push
jecxz
test
push
or
mov
mov
fcmovu
and
mov
sub
xchg
pop
jmp
mov
mov
jecxz
test
imull
dec
xchg
bound
or
jb
aaa
cltd
dec
loop
cs
inc
fimuls
dec
aas
xchg
dec
addl
lcall
insb
jnp
sbb
adc
shr
and
mov
sbb
mov
sbb
xchg
adc
imul
xchg
int
notb
movsb
adc
aam
and
data16
das
xchg
lret
and
mov
andb
addl
sbb
add
aas
bound
imul
fidivrl
out
aaa
dec
mov
sbb
cwtl
cmp
movl
aaa
fcomps
xchg
cmpsb
sbb
rol
mov
pop
push
pop
pusha
dec
call
or
ret
or
xchg
mov
cmp
mov
sub
inc
xor
popa
dec
or
ret
pop
daa
xchg
sub
test
mov
xchg
cs
mov
add
and
pop
inc
iret
sub
outsb
jae
aam
inc
jae
xchg
imul
jnp
add
adc
mov
jmp
cmp
jp
pop
xor
aam
rorl
dec
sbbb
or
mov
movsl
sub
cmpsl
ficoml
mov
ja
xchg
adc
outsb
popa
jo
test
xor
cld
daa
adc
jmp
adc
sbb
imul
jle
sbb
insb
fidivrs
push
jne
mov
sub
insl
push
adc
or
cltd
scas
enter
cli
add
fs
in
push
xchg
mov
popf
fdiv
add
dec
jp
push
popf
jp
les
imul
add
fwait
out
imul
outsb
fcmovnu
mov
add
or
mov
xor
xchg
push
in
push
test
jecxz
adc
cs
popa
lret
shl
mov
and
jl
sub
cs
jecxz
sbb
mov
sbbl
fcmovnb
jge
lock
popl
in
and
out
inc
mov
push
mov
push
pop
enter
test
push
outsl
mov
in
pop
jg
into
cmpsb
mov
push
dec
aaa
inc
jne
mov
sti
adc
and
loope
outsb
jno
jae
decl
mov
incb
sub
repnz
pusha
insl
test
rolb
jmp
jecxz
mov
aas
mov
jnp
rolb
or
aad
and
dec
divl
dec
pop
inc
fisubrs
aam
fldenv
xchg
xchg
stc
mov
mov
dec
mov
jbe
rorb
out
inc
and
insb
jnp
mov
inc
fsts
stc
shrl
push
cld
dec
fildl
shll
jne
cltd
test
cmp
mov
xorl
inc
pusha
and
int
cwtl
add
jbe
stos
dec
in
dec
jbe
lret
repnz
xor
ss
int3
push
jl
outsl
aas
test
cmp
bound
push
and
pop
cwtl
int3
rorb
inc
test
jnp
aaa
scas
cmp
cld
sbb
xchg
cmpsb
scas
xchg
or
mov
xchg
mov
scas
pop
jae
jmp
push
or
icebp
mov
movlps
outsb
dec
fcomp
decl
inc
cmp
subl
cmp
xchg
cld
das
cmpsl
in
xchg
xor
fmull
cmpsb
roll
cmp
and
pop
ja
je
mov
jg
push
je
pop
jge
xchg
lods
jle
mov
push
xchg
fsubl
mov
jp
push
int3
mov
and
mov
loop
movsb
xor
and
std
or
push
jno
stos
add
mov
xor
mov
xorb
mov
or
clc
popl
mov
jno
inc
movsl
repnz
sbb
push
xchg
repnz
add
test
mov
mov
sbb
xchg
jne
test
out
jnp
cs
or
xor
and
repz
mov
aad
sbbl
in
or
sbb
cltd
fiadds
pop
dec
mov
addr16
aas
vmread
in
xchg
shl
subb
inc
clc
addr16
pop
xor
ja
lock
pushf
jge
incl
push
ss
or
sbb
clc
cmp
ljmp
and
or
out
mov
inc
push
inc
sub
push
fldenv
jbe
adc
lcall
inc
sbb
dec
xchg
loop
jle
xor
xlat
ja
stos
sahf
inc
into
pop
outsb
mov
movsl
fbld
rcrl
faddl
into
out
js
adc
popf
sub
adc
xchg
gs
adc
inc
pop
jbe
shll
popa
adc
pop
inc
mov
andl
xchg
shr
pushl
js
repnz
leave
movsl
or
push
mov
std
sbb
lods
cmpsb
cltd
jp
and
adc
push
lea
pmulhuw
divl
mov
xor
and
aam
sbb
fistl
icebp
pop
xchg
test
dec
stc
adc
call
rol
and
jg
and
rol
je
mov
es
stos
inc
into
push
mov
xor
xchg
gs
or
clc
scas
lea
push
js
dec
pop
xchg
jp
cmc
push
aas
cmp
rorl
mov
andb
mov
lods
lds
xor
imul
test
sahf
lods
subl
jns
frstor
outsb
cmc
lds
insl
int
mov
jb
fwait
loope
cmp
das
xor
in
lock
cmp
rclb
add
jne
leave
jmp
fnstenv
mov
or
dec
sub
cmc
cmpsb
inc
dec
jp
aas
pop
int3
test
xor
out
cltd
lret
inc
mov
movb
out
lods
push
stos
pusha
adc
inc
sub
int
std
call
movsl
imul
mov
inc
pop
inc
mov
in
mov
mov
jb
in
mov
sub
add
xlat
mov
cli
std
std
iret
mov
jb
mov
xchg
inc
push
dec
cmp
xor
adc
outsl
mov
jg
and
adc
lret
scas
stc
mov
or
pop
iret
shll
imull
sub
jne
cmp
mov
xor
cmp
mov
pop
inc
sti
stos
in
xor
dec
sub
into
jp
mov
push
shll
cmpsl
mov
cmp
cld
sbb
mov
inc
mov
loopne
sbb
int3
jae
dec
sti
mov
into
mov
ljmp
out
jge
shl
in
inc
xchg
xor
shlb
mov
push
daa
std
sbb
shr
fisttps
pop
negl
int3
lret
dec
sub
arpl
push
movsl
cmp
jmp
and
in
and
or
stos
aas
repz
or
mov
mov
or
loop
sbb
and
es
adc
dec
imul
popa
inc
inc
ja
mov
lret
cmp
mov
in
das
cmp
sbb
call
jmp
push
stos
pop
jge
cld
adc
jno
mov
mov
loop
testb
push
mov
mov
and
out
pusha
cmp
nop
mov
cmp
mov
test
arpl
icebp
movsb
add
fucomip
or
into
les
push
je
test
aam
es
push
add
xor
or
xchg
push
dec
inc
in
mov
sbb
and
repz
insl
pushf
negb
popf
out
int3
jle
rolb
out
pushf
and
imul
cmp
ss
or
and
mov
or
mov
cmp
popa
sub
sbb
ds
pop
lea
cmpsb
jae
xor
fwait
or
add
xor
outsb
ljmp
inc
lcall
push
pop
daa
test
aaa
push
xor
daa
adc
lods
jb
mov
xor
inc
pop
arpl
xor
lods
fisubrl
add
xadd
sub
lea
call
pushl
mov
rep
pop
pushf
pushl
mov
movw
push
lea
jmp
jno
pusha
mov
movl
jmp
imul
cmp
cmp
stc
add
pusha
movb
lea
jmp
not
jmp
lea
jae
stc
stc
clc
xor
call
shl
clc
shr
mov
stc
cmpb
push
jmp
rep
aaa
pop
inc
fld
pushf
pop
test
lcall
fisubl
sbb
adc
or
aad
cmp
and
icebp
popf
adc
mov
and
lods
or
mov
xor
mov
cmpsl
add
cs
imul
mov
inc
dec
mov
fwait
push
out
pop
jno
xchg
mov
popa
insl
imul
cmp
mov
mov
outsb
nop
pop
rcrb
addr16
jae
dec
jle
sbb
mov
or
sar
add
lcall
inc
push
mov
xor
cmp
fldcw
sti
iret
xor
inc
fidivrl
mov
fisubs
push
outsb
test
fdivrl
aaa
xchg
outsl
dec
xor
pop
jecxz
jmp
ds
and
fistpl
xchg
movw
cwtl
mov
out
pop
pop
mov
push
xor
inc
add
sar
xlat
sbb
test
mov
test
cmpsb
cltd
in
insl
cmpsl
cmpsb
outsl
clc
add
xchg
repz
xchg
int3
inc
xchg
fistl
jne
sub
lock
fs
in
call
and
pop
clc
xor
cmp
jno
shrl
lret
dec
imul
hlt
xchg
jne
sub
lahf
ja
jns
ret
push
jmp
inc
xchg
jmp
jns
cmpsl
mov
cmp
cmp
sbb
iret
loope
testl
push
push
and
inc
push
inc
and
stc
push
rorb
push
push
cmp
scas
imul
pop
cltd
daa
fnstcw
sbb
outsl
sbb
or
fcoml
cltd
push
mov
bound
xchg
hlt
fs
pushf
aam
dec
xchg
imul
push
inc
insb
out
outsb
loopne
call
fld
xlat
rclb
out
jne
xchg
imul
mov
negb
in
movsb
int
jae
mov
push
leave
ret
sbb
mov
sbb
inc
push
jne
xchg
ret
leave
mov
push
je
add
add
inc
and
jns
loope
push
pushf
movb
pushf
lea
jmp
cmp
cmpsb
xlat
sbb
push
iret
xchg
and
sti
movsl
adc
push
jle
push
xor
out
add
jg
lret
movsb
fiadds
xchg
cmp
mov
enter
and
fwait
ja
scas
outsb
push
pop
jl
mov
idivl
xor
stc
sub
les
mov
call
push
aaa
and
out
lea
ja
push
lea
call
stc
cmp
push
jmp
lea
lea
call
lea
call
jmp
push
jo
vpsubusw
aas
rclb
jbe
into
pop
add
sub
orl
inc
stos
mov
lcall
aaa
or
std
loopne
mov
mov
fcomps
pop
lea
into
push
jae
testl
imulb
mov
test
imul
pop
push
or
lock
mov
add
pop
push
xchg
mov
js
dec
xchg
pop
daa
adc
inc
sub
cmp
popa
or
add
ss
ds
sahf
xchg
fists
les
stos
lret
nop
les
loopne
test
es
fldcw
push
lret
repz
jmp
scas
loope
xor
pusha
mov
jg
fwait
inc
add
in
lcall
loopne
push
add
lret
inc
xor
pop
cld
cltd
and
fwait
push
js
mov
mov
dec
jp
mov
or
and
je
and
lahf
rcr
add
bt
lea
mov
bts
btc
rol
rcr
mov
bt
stc
mov
jmp
pushf
pushf
mov
pushf
lea
jmp
clc
not
clc
test
pushl
cmc
and
pusha
push
mov
call
clc
add
call
clc
mov
pusha
movb
jmp
call
mov
pushf
lea
jmp
call
jmp
pushf
pushf
push
pushf
popl
pusha
pushf
mov
jmp
inc
cmp
cmp
stc
xor
bt
call
movsbw
push
mov
clc
jmp
mov
mov
push
mov
call
cmp
stc
clc
sub
movb
call
not
pusha
call
jmp
pushf
movb
pushf
popl
jmp
push
push
pushl
popl
push
mov
lea
jmp
inc
test
cmp
stc
test
xor
stc
pushf
test
call
mov
movw
pushf
lea
jmp
jmp
pushf
popl
jmp
lea
jne
shrd
cmc
jmp
pushf
popl
movb
push
call
call
jmp
movb
mov
mov
pushf
mov
push
lea
jmp
push
call
daa
pushf
push
mov
pushf
xchg
bt
add
push
stc
pusha
xor
cmp
jmp
mov
push
lea
jmp
push
jmp
xchg
setge
movsbw
push
lea
push
inc
setp
push
not
pushl
bswap
seta
sets
push
lea
movsbw
lea
lea
mov
pusha
movw
lea
dec
mov
not
ror
neg
add
cmp
lea
seto
sub
bts
shl
mov
shrd
dec
mov
shld
mov
shl
rol
add
sub
ror
and
mov
add
pushf
add
pusha
movsbw
rol
movb
cmc
shr
add
bsf
and
dec
neg
pushf
bts
call
pop
add
setnp
rcr
xor
movzbl
rol
lea
sar
call
movzbw
movzbw
mov
push
setb
not
movsbw
mov
push
jmp
pushf
pushf
popl
call
rcl
btr
call
clc
pushl
cmp
test
cmc
add
pusha
test
bt
pushl
popf
pusha
lea
jmp
bt
mov
or
bts
shl
mov
sar
call
call
pusha
cmp
sub
cmc
lea
clc
not
shl
and
rcl
sub
mov
movsbw
mov
bswap
movzbw
bswap
pushf
lea
push
mov
xchg
jmp
mov
push
mov
pusha
lea
jmp
push
xchg
mov
stc
xor
call
jmp
pusha
jmp
pushf
cld
lea
jg
pushf
pushl
pushf
rep
adc
mov
xor
mov
jmp
ror
shl
pusha
bt
mov
mov
add
call
call
push
pushf
popl
pushf
pushl
popl
mov
lea
jmp
std
xchg
movzbw
mov
call
pusha
movw
mov
jmp
cmp
popf
pushf
pushl
ret
mov
pushl
pusha
jmp
call
push
lea
jb
pushf
jmp
mov
movb
pushl
lea
jmp
mov
push
push
mov
mov
lea
jmp
mov
pushf
mov
push
movb
mov
mov
call
push
mov
pushf
popl
pushl
jmp
pusha
pushl
popl
pushl
mov
lea
jmp
not
jmp
pushl
mov
call
sub
or
cbtw
aaa
mov
shr
mov
cmp
bt
bt
bt
sub
test
push
mov
shl
mov
pushf
mov
call
pushf
call
pushf
movzbl
push
add
pushl
jmp
jmp
stc
bt
ror
jmp
pushf
pushf
jmp
push
xchg
mov
bswap
movzbl
push
pusha
lea
pushl
pushf
xchg
movsbw
pushf
pushl
mov
jmp
shrd
pusha
mov
movw
call
aas
sbb
shr
movzbw
mov
clc
jmp
call
lea
jl
mov
pushf
pushl
lea
jmp
mov
mov
mov
pushf
lea
jmp
movsbw
pushf
inc
mov
mov
dec
push
jl
not
setne
pushl
not
jmp
mov
pusha
lea
jmp
pusha
pusha
add
push
test
bt
neg
stc
bt
cmc
rol
push
call
pushf
popl
mov
pusha
jmp
mov
call
mov
movl
mov
pushl
pushf
pushf
mov
pushf
pushl
push
lea
jmp
mov
jmp
neg
mov
test
clc
pusha
add
push
mov
pusha
mov
movb
pushl
lea
jmp
mov
push
mov
pushl
lea
jmp
mov
push
push
pushl
pushf
lea
jmp
pusha
pushl
pusha
pushf
popl
push
pushl
pushl
mov
mov
pushf
pushf
mov
movb
call
dec
mov
movzbw
pushl
push
movzbl
movl
dec
mov
bswap
pushf
lea
dec
rol
movsbw
ror
bts
add
pushf
movzbl
lea
or
pushf
sub
push
inc
inc
rcl
lea
pop
neg
mov
rol
add
call
pushf
pushl
popl
movl
pusha
mov
pushf
lea
jmp
mov
pushf
push
lea
jmp
movw
mov
movb
movw
call
push
pusha
push
divl
push
call
add
jmp
push
call
sub
mov
clc
cmp
test
and
movw
pushf
pushf
mov
jmp
movsbw
mov
stc
test
call
jmp
call
push
not
push
mov
pushf
mov
pushf
movb
lea
jmp
pusha
mov
pushf
pushf
mov
mov
pushf
pushl
pushl
lea
jmp
pushf
mov
jmp
sub
mov
pusha
mov
pushf
cmp
cmc
sub
cmp
pushf
clc
cmp
shr
mov
push
mov
pushf
pushf
push
lea
jg
pushf
pusha
jmp
jmp
call
pusha
shl
movb
cmp
shr
test
call
ror
bts
sbb
mov
rcr
bswap
bt
add
shrd
shrd
add
adc
sub
btr
movzbl
mov
cmc
pushf
call
push
pushf
mov
movb
pushf
lea
jmp
stc
jmp
mov
pushf
pushf
pushf
pushf
lea
jmp
pushf
pushl
mov
push
lea
jmp
pushl
popl
movb
lea
jmp
stc
not
cmp
test
movzbl
cmp
jo
push
pushf
add
movw
neg
mov
rol
push
pusha
movb
dec
pushf
push
pushl
pushf
dec
stc
add
stc
sub
jmp
call
pushf
mov
pushf
pushl
ret
pusha
cmp
movl
pushf
jmp
ror
push
push
mov
bswap
push
mov
rol
btc
sbb
lea
mov
inc
mov
bsf
mov
sub
jne
test
popf
pusha
pushl
ret
movb
mov
movl
mov
movb
mov
lea
jmp
sar
shr
jmp
pusha
lea
jne
bt
cmc
xorb
not
movsbw
bswap
push
mov
pusha
lea
jmp
pusha
decl
push
pusha
jmp
movb
lea
jnp
divl
push
pushf
pushf
mov
pushf
movb
jmp
pusha
test
add
pusha
mov
push
jmp
movw
mov
push
movzbw
xchg
movsbl
mov
pusha
mov
lea
bswap
dec
push
jl
movzbw
not
bswap
push
jmp
lea
cpuid
test
cmc
clc
sub
stc
call
shld
mov
clc
add
pushf
mov
push
pushl
mov
pusha
lea
jmp
inc
adc
mov
movzbw
shr
call
daa
mov
neg
mov
pushf
movb
add
lea
jb
pushf
push
mov
mov
mov
mov
lea
jmp
push
jmp
jmp
pushf
popl
movb
mov
push
pushf
mov
jmp
bts
mov
pushf
call
call
pusha
movw
mov
not
call
pusha
jmp
inc
call
clc
add
shrd
mov
or
setae
add
pushf
lea
jle
not
setae
mov
jmp
movw
mov
pushf
call
call
pushl
popl
push
lea
jmp
btc
rol
bswap
movsbl
add
shld
sub
btc
neg
stc
add
test
bsf
setnp
movzbw
movzbl
pop
sbb
shl
lea
rcl
sbb
bswap
rcl
mov
call
mov
call
mov
jmp
sub
out
imul
mov
cmp
out
pop
sub
out
int3
inc
std
out
enter
out
std
out
enter
adc
std
out
cmpb
out
sub
out
jne
std
out
enter
mov
and
out
sbb
std
out
enter
dec
sub
out
enter
sbb
std
out
enter
hlt
sub
out
enter
mull
std
out
enter
imul
jmp
std
out
enter
cwtl
inc
std
out
enter
cmpb
out
pop
sub
out
gs
std
out
xchg
sbb
std
out
sub
out
jmp
std
out
dec
xor
out
sbb
std
out
mull
std
out
out
std
out
stc
daa
std
out
sbb
std
out
out
std
out
imul
pop
sub
out
pop
cmp
out
sub
std
out
mov
std
out
out
std
out
ret
cmp
std
out
mov
sbb
std
out
fsubs
std
out
imul
int3
inc
std
out
pushf
cmp
out
dec
cmp
out
cwtl
daa
std
out
imul
hlt
sub
out
sbb
std
out
jo
std
out
jmp
std
out
xchg
aas
std
out
mov
sub
out
mov
std
out
mov
std
out
in
ss
out
jns
std
out
jne
std
out
dec
cmp
out
es
out
in
ss
out
pop
sub
out
mov
std
out
imul
stc
daa
std
out
xchg
sbb
std
out
mov
std
out
stc
daa
std
out
sbb
std
out
xchg
std
out
dec
xor
out
mov
and
out
adc
std
out
fsubs
std
out
stc
daa
std
out
jo
std
out
pop
inc
std
out
shlb
out
xchg
std
out
xor
std
out
mov
std
out
shlb
out
out
cmp
out
pushf
and
out
pop
inc
std
out
adc
std
out
jne
std
out
jp
std
out
cmpb
out
cmpb
out
mov
std
out
dec
sub
out
jne
std
out
pushf
and
out
adc
std
out
hlt
sub
out
sub
out
ret
out
mov
std
out
ret
out
mov
std
out
ret
out
mull
std
out
ret
out
aad
std
out
ret
out
in
ss
out
ret
out
gs
std
out
ret
out
sub
out
sbb
std
out
ret
out
imul
sbb
std
out
ret
out
ret
cmp
std
out
out
std
out
ret
out
dec
sub
out
ret
out
ja
std
out
ret
out
sub
std
out
ret
out
mov
std
out
hlt
sub
out
fsubs
std
out
dec
sub
out
mov
inc
std
out
pusha
daa
std
out
cmpb
out
gs
std
out
sbb
std
out
shlb
out
in
ss
out
xchg
sbb
std
out
sbb
std
out
pop
sub
out
dec
sub
out
jo
std
out
dec
xor
out
mov
sub
out
aad
std
out
cwtl
daa
std
out
xchg
sbb
std
out
pop
sub
out
cmpb
out
or
out
gs
std
out
gs
std
out
aad
std
out
dec
xor
out
sbb
std
out
out
cmp
out
jp
std
out
imul
cwtl
daa
std
out
sbb
std
out
pop
sub
out
dec
sub
out
int3
inc
std
out
dec
cmp
out
ret
cmp
std
out
mov
std
out
cmpb
out
sub
out
cwtl
inc
std
out
ret
cmp
std
out
ret
cmp
std
out
cwtl
daa
std
out
pop
and
out
pop
inc
std
out
dec
sub
out
dec
cmp
out
pop
and
out
fsubs
std
out
pushf
and
out
xchg
aas
std
out
pop
sub
out
shlb
out
pushf
cmp
out
cwtl
inc
std
out
mull
std
out
ret
cmp
std
out
ja
std
out
in
ss
out
shlb
out
stc
daa
std
out
sub
std
out
jmp
std
out
sbb
std
out
es
out
ja
std
out
mov
aaa
std
out
in
ss
out
out
cmp
out
int3
inc
std
out
adc
xchg
adc
movzbl
cmp
adc
shrd
sub
and
adc
setle
add
btr
pusha
neg
neg
not
rol
bswap
pushf
dec
stc
xor
lea
bswap
add
movzbl
rol
shr
movzbl
jmp
mov
push
lea
jmp
pushf
popl
jmp
pusha
pushl
jmp
movb
mov
jmp
pusha
pushf
call
mov
pushf
pushf
mov
pushf
lea
jmp
call
pusha
mov
jmp
bswap
test
pushl
sub
push
lea
push
dec
call
mov
push
mov
pusha
mov
lea
jmp
not
mov
call
pushf
popl
call
call
cmp
test
and
push
jmp
add
pushf
shld
pusha
pusha
lea
jbe
pusha
mov
call
pushf
push
pusha
mov
mov
mov
mov
jmp
mov
rol
rol
not
mov
cmp
mov
pushf
stc
test
sub
pushl
bt
stc
shr
call
pushf
mov
mov
pusha
pusha
jmp
pushf
add
mov
movw
pusha
mov
pushf
lea
jmp
not
push
pushl
call
daa
bt
pushf
lea
push
call
bsf
shld
lahf
mov
jmp
mov
movw
mov
lea
jmp
rcr
and
pushf
mov
shr
sbb
test
mov
movw
bt
sub
push
sub
jno
pusha
shl
jmp
neg
call
jmp
bswap
lea
push
movsbw
mov
movb
lea
pusha
mov
jmp
dec
push
call
movw
pushf
popl
jmp
test
sub
jmp
sbb
lea
aas
add
mov
rcr
shr
call
xor
pushf
pushf
call
jmp
mov
jmp
pushf
mov
pushl
pushf
popl
pusha
mov
mov
pushl
popl
pushf
movb
movw
movb
lea
jmp
lea
jp
jne
call
call
bt
pushf
neg
cmc
test
sub
lea
jbe
pusha
mov
jmp
jmp
jmp
mov
push
call
lea
push
movzbw
mov
setns
dec
xchg
rcr
clc
ror
pusha
xor
pushf
dec
add
movsbw
shrd
or
bswap
lea
xadd
push
sub
rcl
cmp
mov
bsr
mov
setns
setno
and
dec
mov
neg
rcr
xchg
add
lea
bswap
sbb
mov
stc
clc
lea
shl
add
rcr
rol
shl
not
add
test
shrd
inc
neg
and
bsf
add
and
movzbl
bsr
adc
xor
shld
lea
inc
shr
mov
cmc
jmp
inc
cmc
add
clc
mov
cmp
jmp
jmp
clc
test
mov
cmc
push
test
add
movb
push
mov
jmp
push
pushf
mov
pusha
movb
pushl
mov
mov
pushf
lea
jmp
sub
pusha
mov
mov
push
pushf
lea
jmp
jmp
not
test
mov
call
pushf
call
pushf
popl
pushf
movb
pushl
popl
mov
pushf
lea
jmp
aad
or
das
rdtsc
cmp
sub
pusha
push
pusha
mov
mov
mov
push
mov
pushf
push
lea
jmp
mov
jmp
clc
stc
bt
neg
jmp
mov
push
mov
pushf
call
call
push
mov
movw
call
mov
test
mov
bt
pushf
clc
add
jmp
call
mov
push
jmp
jmp
neg
setle
movzbl
pushf
stc
add
pusha
pushf
neg
cmc
stc
cmc
rol
call
call
jmp
mov
jmp
pushf
mov
pushf
lea
jmp
pushf
movw
pushl
popl
pushf
push
movw
lea
jmp
mov
call
bsf
btr
bsr
mov
test
pushf
clc
not
cmc
call
pushf
push
pusha
call
aaa
jmp
pushf
mov
push
pushf
pushf
mov
movb
mov
mov
mov
lea
jmp
pushf
mov
jmp
pushf
popl
push
jmp
pushf
mov
lea
je
test
cmp
xor
pusha
cmc
call
jmp
push
push
mov
pusha
lea
jmp
pusha
pushf
popl
pusha
mov
jmp
pushf
popl
jmp
mov
mov
pusha
mov
movw
clc
pushf
add
pushf
jmp
call
jmp
xchg
bswap
lea
mov
das
clc
xor
pusha
mov
aaa
mov
rcl
neg
mov
inc
movzbl
shl
mov
test
btc
mov
jmp
pushf
pushf
pushl
popl
push
pushf
pushf
lea
jmp
setge
mov
bt
sub
pusha
call
and
shl
sbb
mov
shl
xor
mov
stc
push
cmp
push
not
pushf
pushl
jmp
push
rep
ror
sub
shl
mov
inc
pushf
sub
pusha
mov
pushl
cld
cmp
stc
pushl
popf
pushf
push
lea
jmp
jmp
push
pushf
bt
add
pusha
mov
pushl
pushl
mov
pushl
ret
mov
jmp
stc
test
add
pushf
push
mov
lea
jmp
mov
push
mov
pushl
movw
lea
jmp
setns
mov
jmp
cwtl
mov
adc
daa
mov
shrd
call
pusha
movw
call
jmp
bts
mov
stc
mov
pushf
test
add
mov
call
mov
pushf
pushf
mov
push
lea
jmp
test
neg
bt
mov
bswap
movsbw
add
shrd
bt
add
push
inc
push
shl
jmp
mov
push
lea
jmp
push
jmp
jmp
push
mov
jmp
jmp
cmc
neg
pusha
lea
js
inc
inc
shr
rcl
add
bsf
mov
stc
jmp
pushf
mov
pushf
push
lea
jmp
pushf
popl
pusha
pushf
pushl
popl
pushf
mov
pushf
mov
lea
jmp
mov
call
pushf
popl
call
pushl
pushf
jmp
jmp
dec
clc
cmc
clc
cmp
add
stc
cbtw
pushf
mov
cwtl
movb
clc
sub
pushf
mov
push
push
lea
jmp
clc
add
pushf
push
movw
movw
lea
jmp
dec
dec
inc
xor
bsr
sub
bswap
or
btc
stc
not
test
ror
bt
movzbw
sub
dec
pushf
bsr
clc
neg
pusha
clc
clc
neg
sub
cmc
mov
push
add
call
pushf
popl
call
jmp
bt
cmc
not
jmp
jmp
pushl
lea
jne
jle
pushf
mov
pushf
lea
jmp
pusha
pushl
jmp
pushf
push
pushf
popl
call
push
mov
pushf
mov
movb
movw
mov
call
pushf
pushl
pusha
mov
call
shr
ror
mov
cmc
pushf
sub
push
push
push
movb
mov
pushf
lea
jmp
btr
inc
xor
mov
add
call
push
mov
pushf
lea
jmp
mov
jmp
cmp
call
movb
call
pushf
mov
pusha
lea
lea
lahf
mov
push
jmp
mov
movsbw
mov
cmp
cmc
js
add
jns
pushf
pushf
pushf
pushf
popl
push
pushl
popl
pushf
pushf
lea
jmp
xor
rcr
pusha
movzww
call
jmp
jmp
movb
pushl
mov
jmp
jmp
mov
movb
pushf
pushl
lea
jmp
rep
or
inc
mov
sub
mov
cmp
std
push
bt
pushl
popf
pusha
lea
jmp
rol
rol
not
mov
pushf
push
sub
push
bt
cmp
test
shr
call
cmpl
pushf
jmp
call
mov
call
mov
mov
call
bt
test
call
pusha
pushf
mov
pushf
pushf
pushf
movl
lea
jmp
pushf
pushl
push
jmp
movb
or
stc
clc
xor
movb
inc
lea
jnp
push
pushf
pushl
decl
pusha
jmp
mov
pushf
lea
jmp
pushl
mov
movw
push
mov
mov
movb
jmp
pushf
popl
call
pushl
mov
pushl
popl
pushf
movb
mov
push
lea
jmp
pushl
popl
movb
movw
pushl
movl
lea
jmp
movw
movb
movb
pushf
popl
pushf
pushl
popl
push
lea
jmp
push
mov
pusha
pushf
pushl
ret
pushf
popl
call
sub
movb
call
mov
cmc
pushf
bt
stc
sub
mov
bt
add
pusha
push
pushf
popl
push
movw
pushl
popl
pushf
pushl
pushf
pushf
lea
jmp
call
jmp
pushf
popl
push
pushl
popl
pushf
mov
movb
lea
jmp
lea
jne
pushf
mov
push
mov
pusha
pushf
lea
jmp
mov
push
mov
pushf
mov
pusha
push
mov
lea
jmp
call
pushf
mov
movw
pusha
mov
push
lea
jmp
movb
call
jmp
push
mov
pushf
jmp
mov
jmp
jmp
mov
mov
call
pushl
pusha
pushf
popl
movb
pusha
call
pusha
pushf
popl
push
pushl
mov
jmp
test
shl
pushf
call
pushf
popl
call
pushf
mov
push
lea
jmp
pushl
popl
mov
lea
jmp
pusha
notl
daa
btr
stc
mov
stc
pushf
sub
push
cmc
call
jmp
pusha
call
pushf
cmp
or
jmp
sub
pusha
pusha
clc
mov
test
test
jmp
movb
lea
js
push
pushf
pushf
pushl
push
mov
mov
pusha
pushf
lea
jmp
push
sub
pusha
movb
add
jmp
mov
pusha
call
mov
stc
mov
mov
push
neg
stc
cmp
add
mov
pushf
pushf
push
mov
pushf
mov
mov
pushf
pushl
ret
call
cld
push
lea
js
push
movb
rep
adc
shr
mov
bts
test
bts
mov
test
pushl
mov
cmp
pushl
popf
pusha
movb
push
pushf
lea
jmp
jmp
mov
pushf
pushl
pushl
lea
jmp
jmp
pushf
cwtl
pushf
cmp
sub
push
mov
mov
mov
push
movb
lea
jmp
pushf
pushl
popl
pushf
push
pushf
lea
jmp
mov
pusha
call
call
push
dec
cmc
sub
call
dec
jmp
dec
pushf
ror
pop
push
and
bsf
mov
pushf
test
test
sub
jmp
xor
stc
clc
add
call
pushf
pushf
pushf
popl
pushf
call
push
movw
call
pushl
pushf
popl
call
jmp
pusha
pushf
popl
call
pushl
mov
jmp
bsr
pushf
clc
shl
mov
rol
shr
cmp
mov
stc
cmc
test
sub
bt
shl
push
jmp
stc
bts
btr
cmc
rol
push
movzbw
jmp
xchg
pushl
test
mov
cmp
push
movb
test
sub
movb
push
lea
jne
cmc
pusha
sub
mov
call
rol
pop
bswap
call
xchg
call
mov
pushf
jmp
jmp
mov
bt
call
mov
pushf
movb
mov
lea
jmp
movsbw
bsf
lea
mov
jnp
bt
pusha
add
pushf
pusha
pushf
push
lea
jmp
pushl
popl
push
movb
mov
lea
jmp
and
jmp
movl
pushf
jmp
bt
mov
bt
test
cmp
sub
pushf
push
mov
mov
pusha
mov
pushf
lea
jmp
stc
movzbl
call
mov
pushf
lea
jmp
push
pushf
popl
push
pushf
pushf
pushf
mov
push
mov
push
push
jmp
mov
call
not
mov
pusha
mov
pusha
jmp
push
push
pushf
pushf
pushf
mov
jmp
pop
mov
rcl
add
call
not
pushf
pushf
pusha
mov
not
std
mov
pusha
lea
jmp
mov
push
pushf
pushf
lea
jmp
not
mov
call
mov
pushl
movb
movb
movw
lea
jmp
push
pushf
popl
jmp
pusha
pushf
mov
mov
mov
pushf
pushf
movl
lea
jmp
mov
call
mov
movb
push
mov
mov
lea
jmp
pushf
popl
pushf
call
push
cmp
pushl
call
movzbw
dec
call
sub
call
lea
ja
aam
and
lea
setns
mov
aad
add
rcl
xchg
lea
jae
sub
xadd
lea
bswap
mov
movzbw
lea
and
btc
clc
test
sub
lea
lea
movzbl
mov
lea
bswap
jmp
bswap
movzbw
inc
bswap
sar
dec
btr
add
push
shl
mov
push
add
jmp
add
mov
movw
jmp
pusha
mov
call
cmc
neg
clc
cmc
test
pushf
add
jmp
cmc
test
sub
call
mov
call
call
movb
pushf
mov
pushf
movb
jmp
pushl
popf
mov
lea
jmp
pushf
mov
call
mov
pushf
pushl
call
push
pushf
popl
pusha
push
mov
push
jmp
clc
add
pusha
mov
pusha
mov
movb
lea
jmp
stc
ror
sar
rcl
and
bt
or
movzbw
push
mov
cmp
call
pushf
call
dec
movb
dec
clc
add
stc
mov
sub
jmp
pushf
popl
movb
pushf
pushf
pushl
popl
pushf
lea
jmp
lea
mov
call
add
